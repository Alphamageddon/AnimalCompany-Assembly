Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph

Method: System.String get_name()

Disassembly:
	0x0398C69C ADRP X0, 0x7C4000
	0x0398C6A0 LDR X0, [X0 + 0xA38]

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x0398C6A4 BL 0x1C16CF4
	0x0398C6A8 ADRP X0, 0x7C4000

ISIL:
	001 Move [X0+184], X1
	002 Return 

Method: System.Boolean get_requireDebugData()

Disassembly:
	0x0398C6AC LDR X0, [X0 + 0xA40]
	0x0398C6B0 BL 0x1C16CF4
	0x0398C6B4 ADRP X0, 0x7C4000
	0x0398C6B8 LDR X0, [X0 + 0xA48]
	0x0398C6BC BL 0x1C16CF4
	0x0398C6C0 ADRP X0, 0x7C4000
	0x0398C6C4 LDR X0, [X0 + 0xA50]
	0x0398C6C8 BL 0x1C16CF4
	0x0398C6CC ADRP X0, 0x7C4000
	0x0398C6D0 LDR X0, [X0 + 0xA58]
	0x0398C6D4 BL 0x1C16CF4
	0x0398C6D8 ADRP X0, 0x767000
	0x0398C6DC LDR X0, [X0 + 0x988]
	0x0398C6E0 BL 0x1C16CF4
	0x0398C6E4 MOVZ W8, 0x1
	0x0398C6E8 STRB W8, [X20 + 0xADA]
	0x0398C6EC MOVI V0.2D, 0x0
	0x0398C6F0 STR X31, [X31 + 0x20]
	0x0398C6F4 STP V0, V0, [X31]
	0x0398C6F8 LDR X0, [X19 + 0x10]
	0x0398C6FC CBZ X0, 0x398C7A8
	0x0398C700 ADRP X8, 0x767000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA56000
	005 Move X19, 0x7C5000
	006 Move W8, [X20+2714]
	007 Move X19, [X19+2240]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7C5000
	013 Move X0, [X0+2240]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2714], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_requireDebugData(System.Boolean value)

Disassembly:
	0x0398C704 ADRP X9, 0x7C4000
	0x0398C708 LDR X8, [X8 + 0x988]
	0x0398C70C LDR X9, [X9 + 0xA38]
	0x0398C710 ADRP X22, 0x7C4000
	0x0398C714 ADRP X21, 0x7C4000
	0x0398C718 LDR X20, [X8]
	0x0398C71C LDR X1, [X9]
	0x0398C720 LDR X22, [X22 + 0xA48]
	0x0398C724 LDR X21, [X21 + 0xA40]
	0x0398C728 ADD X8, X31, 0x0
	0x0398C72C BL 0x2AA54BC
	0x0398C730 LDR X1, [X22]
	0x0398C734 MOV X19, X20
	0x0398C738 ADD X0, X31, 0x0
	0x0398C73C BL 0x2C0A728
	0x0398C740 TBZ X0, 0x0, 0x398C780
	0x0398C744 LDR X20, [X31 + 0x18]
	0x0398C748 CBZ X20, 0x398C7A4
	0x0398C74C MOV X0, X20
	0x0398C750 MOV X1, X31
	0x0398C754 BL 0x3233888
	0x0398C758 LDR X8, [X20]
	0x0398C75C LDP X9, X1, [X8 + 0x168]
	0x0398C760 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA56000
	006 Move X20, 0x7C5000
	007 Move W8, [X21+2715]
	008 Move X20, [X20+2240]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C5000
	015 Move X0, [X0+2240]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2715], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move [X8+16], W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDefaultResources get_defaultResources()

Disassembly:
	0x0398C764 BLR X9
	0x0398C768 MOV X1, X0

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void .ctor(System.String name = RenderGraph)

Disassembly:
	0x0398C76C MOV X0, X19
	0x0398C770 MOV X2, X31
	0x0398C774 BL 0x321B938
	0x0398C778 MOV X20, X0
	0x0398C77C B 0x398C730
	0x0398C780 LDR X1, [X21]
	0x0398C784 ADD X0, X31, 0x0
	0x0398C788 BL 0x2C0A83C
	0x0398C78C MOV X0, X19
	0x0398C790 LDP X20, X19, [X31 + 0x50]
	0x0398C794 LDP X22, X21, [X31 + 0x40]
	0x0398C798 LDR X30, [X31 + 0x30]
	0x0398C79C ADD X31, X31, 0x60
	0x0398C7A0 RET
	0x0398C7A4 BL 0x1C16F20
	0x0398C7A8 BL 0x1C16F20
	0x0398C7AC B 0x398C7BC
	0x0398C7B0 B 0x398C7BC
	0x0398C7B4 B 0x398C7BC
	0x0398C7B8 B 0x398C7BC
	0x0398C7BC CMP W1, 0x1
	0x0398C7C0 B.NE 0x398C7EC
	0x0398C7C4 BL 0x3EB1AD0
	0x0398C7C8 LDR X8, [X0]
	0x0398C7CC STR X8, [X31 + 0x38]
	0x0398C7D0 BL 0x3EB1AE0
	0x0398C7D4 LDR X1, [X21]
	0x0398C7D8 ADD X0, X31, 0x0
	0x0398C7DC BL 0x2C0A83C
	0x0398C7E0 LDR X0, [X31 + 0x38]
	0x0398C7E4 CBZ X0, 0x398C78C
	0x0398C7E8 BL 0x1C16F18
	0x0398C7EC MOV X19, X0
	0x0398C7F0 STR X31, [X31 + 0x38]
	0x0398C7F4 B 0x398C7FC
	0x0398C7F8 MOV X19, X0
	0x0398C7FC LDR X1, [X21]
	0x0398C800 ADD X0, X31, 0x0
	0x0398C804 BL 0x2C0A83C
	0x0398C808 LDR X8, [X31 + 0x38]
	0x0398C80C CBNZ X8, 0x398C818
	0x0398C810 MOV X0, X19
	0x0398C814 BL 0x1D2C690
	0x0398C818 LDR X0, [X31 + 0x38]
	0x0398C81C BL 0x1C16F18
	0x0398C820 BL 0x1990590
	0x0398C824 STR X30, [X31 - 0x20]!
	0x0398C828 STP X20, X19, [X31 + 0x10]
	0x0398C82C ADRP X20, 0xA55000
	0x0398C830 LDRB W8, [X20 + 0xB24]
	0x0398C834 MOV X19, X0
	0x0398C838 TBNZ X8, 0x0, 0x398C850
	0x0398C83C ADRP X0, 0x767000
	0x0398C840 LDR X0, [X0 + 0xA28]
	0x0398C844 BL 0x1C16CF4
	0x0398C848 MOVZ W8, 0x1
	0x0398C84C STRB W8, [X20 + 0xB24]
	0x0398C850 LDR X0, [X19 + 0x28]
	0x0398C854 CBZ X0, 0x398C890
	0x0398C858 ADRP X19, 0x767000
	0x0398C85C LDR X19, [X19 + 0xA28]
	0x0398C860 BL 0x398C67C
	0x0398C864 LDR X8, [X19]
	0x0398C868 MOV X19, X0
	0x0398C86C LDR W9, [X8 + 0xE0]
	0x0398C870 CBNZ W9, 0x398C87C
	0x0398C874 MOV X0, X8
	0x0398C878 BL 0x1C16DFC
	0x0398C87C MOV X0, X19
	0x0398C880 LDP X20, X19, [X31 + 0x10]
	0x0398C884 MOV X1, X31
	0x0398C888 LDR X30, [X31], #0x20
	0x0398C88C B 0x3C06048
	0x0398C890 BL 0x1C16F20
	0x0398C894 STR X30, [X31 - 0x10]!
	0x0398C898 LDR X0, [X0 + 0x10]
	0x0398C89C CBZ X0, 0x398C8A8
	0x0398C8A0 LDR X30, [X31], #0x10
	0x0398C8A4 B 0x398C8AC
	0x0398C8A8 BL 0x1C16F20
	0x0398C8AC SUB X31, X31, 0x30
	0x0398C8B0 STP X30, X21, [X31 + 0x10]
	0x0398C8B4 STP X20, X19, [X31 + 0x20]
	0x0398C8B8 ADRP X21, 0xA55000
	0x0398C8BC LDRB W8, [X21 + 0xB0B]
	0x0398C8C0 MOV X19, X1
	0x0398C8C4 MOV X20, X0
	0x0398C8C8 TBNZ X8, 0x0, 0x398C8E0
	0x0398C8CC ADRP X0, 0x7C4000
	0x0398C8D0 LDR X0, [X0 + 0xA60]
	0x0398C8D4 BL 0x1C16CF4
	0x0398C8D8 MOVZ W8, 0x1
	0x0398C8DC STRB W8, [X21 + 0xB0B]
	0x0398C8E0 STR X31, [X31]
	0x0398C8E4 LDR X8, [X20 + 0x10]
	0x0398C8E8 CBZ X8, 0x398C954
	0x0398C8EC LDR W9, [X8 + 0x18]
	0x0398C8F0 CBZ W9, 0x398C958
	0x0398C8F4 LDR X0, [X8 + 0x20]
	0x0398C8F8 CBZ X0, 0x398C954
	0x0398C8FC ADRP X8, 0x7C4000
	0x0398C900 LDR X8, [X8 + 0xA60]
	0x0398C904 ADD X1, X31, 0x0
	0x0398C908 MOVZ W2, 0x1
	0x0398C90C MOVZ W20, 0x1
	0x0398C910 LDR X3, [X8]
	0x0398C914 BL 0x22B7EA8
	0x0398C918 LDR X8, [X31]
	0x0398C91C CBZ X8, 0x398C954
	0x0398C920 MOV W1, W0
	0x0398C924 ADD X0, X31, 0x8
	0x0398C928 MOV W2, W31
	0x0398C92C MOV W3, W31
	0x0398C930 STR X19, [X8 + 0xA8]
	0x0398C934 STRB W20, [X8 + 0x10]
	0x0398C938 STR X31, [X31 + 0x8]
	0x0398C93C BL 0x3997F5C
	0x0398C940 LDR X0, [X31 + 0x8]
	0x0398C944 LDP X20, X19, [X31 + 0x20]
	0x0398C948 LDP X30, X21, [X31 + 0x10]
	0x0398C94C ADD X31, X31, 0x30
	0x0398C950 RET
	0x0398C954 BL 0x1C16F20
	0x0398C958 BL 0x1C16F28
	0x0398C95C SUB X31, X31, 0x70
	0x0398C960 STR X30, [X31 + 0x60]
	0x0398C964 LDR X8, [X1 + 0x20]
	0x0398C968 LDP V0, V1, [X1]
	0x0398C96C LDR X0, [X0 + 0x10]
	0x0398C970 STR X8, [X31 + 0x50]
	0x0398C974 STP V0, V1, [X31 + 0x30]
	0x0398C978 CBZ X0, 0x398C9A0
	0x0398C97C LDP V0, V1, [X31 + 0x30]
	0x0398C980 LDR X8, [X31 + 0x50]
	0x0398C984 ADD X1, X31, 0x0
	0x0398C988 STP V0, V1, [X31]
	0x0398C98C STR X8, [X31 + 0x20]
	0x0398C990 BL 0x398C9A4
	0x0398C994 LDR X30, [X31 + 0x60]
	0x0398C998 ADD X31, X31, 0x70
	0x0398C99C RET
	0x0398C9A0 BL 0x1C16F20
	0x0398C9A4 SUB X31, X31, 0xB0
	0x0398C9A8 STP X30, X21, [X31 + 0x90]
	0x0398C9AC STP X20, X19, [X31 + 0xA0]
	0x0398C9B0 ADRP X21, 0xA55000
	0x0398C9B4 LDRB W8, [X21 + 0xB0F]
	0x0398C9B8 MOV X20, X1
	0x0398C9BC MOV X19, X0
	0x0398C9C0 TBNZ X8, 0x0, 0x398C9F0
	0x0398C9C4 ADRP X0, 0x7C4000
	0x0398C9C8 LDR X0, [X0 + 0x9B0]
	0x0398C9CC BL 0x1C16CF4
	0x0398C9D0 ADRP X0, 0x7C4000
	0x0398C9D4 LDR X0, [X0 + 0xA60]
	0x0398C9D8 BL 0x1C16CF4
	0x0398C9DC ADRP X0, 0x7C4000
	0x0398C9E0 LDR X0, [X0 + 0xA68]
	0x0398C9E4 BL 0x1C16CF4
	0x0398C9E8 MOVZ W8, 0x1
	0x0398C9EC STRB W8, [X21 + 0xB0F]
	0x0398C9F0 STR X31, [X31 + 0x88]
	0x0398C9F4 LDR X0, [X19 + 0x40]
	0x0398C9F8 CBZ X0, 0x398CA1C
	0x0398C9FC LDR X8, [X20 + 0x20]
	0x0398CA00 LDP V1, V0, [X20]
	0x0398CA04 ADD X1, X31, 0x60
	0x0398CA08 MOV X2, X31
	0x0398CA0C STR X8, [X31 + 0x80]
	0x0398CA10 STP V1, V0, [X31 + 0x60]
	0x0398CA14 BL 0x39D4694
	0x0398CA18 B 0x398CA70
	0x0398CA1C ADRP X9, 0x7C4000
	0x0398CA20 LDR X8, [X20 + 0x20]
	0x0398CA24 LDP V0, V1, [X20]
	0x0398CA28 LDR X9, [X9 + 0x9B0]
	0x0398CA2C STR X8, [X31 + 0x50]
	0x0398CA30 STP V0, V1, [X31 + 0x30]
	0x0398CA34 LDR X0, [X9]
	0x0398CA38 LDR W8, [X0 + 0xE0]
	0x0398CA3C CBNZ W8, 0x398CA44
	0x0398CA40 BL 0x1C16DFC
	0x0398CA44 ADRP X9, 0x7C4000
	0x0398CA48 LDP V0, V1, [X31 + 0x30]
	0x0398CA4C LDR X8, [X31 + 0x50]
	0x0398CA50 LDR X9, [X9 + 0xA68]
	0x0398CA54 ADD X0, X31, 0x0
	0x0398CA58 MOV X2, X31
	0x0398CA5C STP V0, V1, [X31]
	0x0398CA60 LDR X1, [X9]
	0x0398CA64 STR X8, [X31 + 0x20]
	0x0398CA68 BL 0x39D6AD0
	0x0398CA6C STR X0, [X19 + 0x40]
	0x0398CA70 LDR X8, [X19 + 0x10]
	0x0398CA74 CBZ X8, 0x398CAE4
	0x0398CA78 LDR W9, [X8 + 0x18]
	0x0398CA7C CBZ W9, 0x398CAE8
	0x0398CA80 LDR X0, [X8 + 0x20]
	0x0398CA84 CBZ X0, 0x398CAE4
	0x0398CA88 ADRP X8, 0x7C4000
	0x0398CA8C LDR X8, [X8 + 0xA60]
	0x0398CA90 ADD X1, X31, 0x88
	0x0398CA94 MOVZ W2, 0x1
	0x0398CA98 MOVZ W20, 0x1
	0x0398CA9C LDR X3, [X8]
	0x0398CAA0 BL 0x22B7EA8
	0x0398CAA4 LDR X8, [X31 + 0x88]
	0x0398CAA8 CBZ X8, 0x398CAE4
	0x0398CAAC LDR X9, [X19 + 0x40]
	0x0398CAB0 MOV W1, W0
	0x0398CAB4 ADD X0, X31, 0x30
	0x0398CAB8 MOV W2, W31
	0x0398CABC MOV W3, W31
	0x0398CAC0 STRB W20, [X8 + 0x10]
	0x0398CAC4 STR X9, [X8 + 0xA8]
	0x0398CAC8 STR X31, [X31 + 0x30]
	0x0398CACC BL 0x3997F5C
	0x0398CAD0 LDR X0, [X31 + 0x30]
	0x0398CAD4 LDP X20, X19, [X31 + 0xA0]
	0x0398CAD8 LDP X30, X21, [X31 + 0x90]
	0x0398CADC ADD X31, X31, 0xB0
	0x0398CAE0 RET
	0x0398CAE4 BL 0x1C16F20
	0x0398CAE8 BL 0x1C16F28
	0x0398CAEC STR X30, [X31 - 0x10]!
	0x0398CAF0 LDR X0, [X0 + 0x10]
	0x0398CAF4 CBZ X0, 0x398CB04
	0x0398CAF8 MOVN W2, 0x0
	0x0398CAFC LDR X30, [X31], #0x10
	0x0398CB00 B 0x398CB08
	0x0398CB04 BL 0x1C16F20
	0x0398CB08 SUB X31, X31, 0xB0
	0x0398CB0C STR X30, [X31 + 0x80]
	0x0398CB10 STP X22, X21, [X31 + 0x90]
	0x0398CB14 STP X20, X19, [X31 + 0xA0]
	0x0398CB18 ADRP X22, 0xA55000
	0x0398CB1C LDRB W8, [X22 + 0xB10]
	0x0398CB20 MOV W20, W2
	0x0398CB24 MOV X19, X1
	0x0398CB28 MOV X21, X0
	0x0398CB2C TBNZ X8, 0x0, 0x398CB44
	0x0398CB30 ADRP X0, 0x7C4000
	0x0398CB34 LDR X0, [X0 + 0xA60]
	0x0398CB38 BL 0x1C16CF4
	0x0398CB3C MOVZ W8, 0x1
	0x0398CB40 STRB W8, [X22 + 0xB10]
	0x0398CB44 STR X31, [X31 + 0x78]
	0x0398CB48 LDR X8, [X21 + 0x10]
	0x0398CB4C CBZ X8, 0x398CBDC
	0x0398CB50 LDR W9, [X8 + 0x18]
	0x0398CB54 CBZ W9, 0x398CBE0
	0x0398CB58 LDR X0, [X8 + 0x20]
	0x0398CB5C CBZ X0, 0x398CBDC
	0x0398CB60 ADRP X8, 0x7C4000
	0x0398CB64 LDR X8, [X8 + 0xA60]
	0x0398CB68 ADD X1, X31, 0x78
	0x0398CB6C MOVZ W2, 0x1
	0x0398CB70 LDR X3, [X8]
	0x0398CB74 BL 0x22B7EA8
	0x0398CB78 LDR X22, [X31 + 0x78]
	0x0398CB7C MOV W21, W0
	0x0398CB80 ADD X0, X31, 0x0
	0x0398CB84 MOVZ W2, 0x78
	0x0398CB88 MOV X1, X19
	0x0398CB8C BL 0x3EB1AC0
	0x0398CB90 CBZ X22, 0x398CBDC
	0x0398CB94 ADD X0, X22, 0x30
	0x0398CB98 ADD X1, X31, 0x0
	0x0398CB9C MOVZ W2, 0x78
	0x0398CBA0 BL 0x3EB1AC0
	0x0398CBA4 STR W20, [X22 + 0x1C]
	0x0398CBA8 LDRB W8, [X19 + 0x64]
	0x0398CBAC ADD X0, X31, 0x88
	0x0398CBB0 MOV W1, W21
	0x0398CBB4 MOV W2, W31
	0x0398CBB8 MOV W3, W31
	0x0398CBBC STRB W8, [X22 + 0x13]
	0x0398CBC0 STR X31, [X31 + 0x88]
	0x0398CBC4 BL 0x3997F5C
	0x0398CBC8 LDP X30, X0, [X31 + 0x80]
	0x0398CBCC LDP X20, X19, [X31 + 0xA0]
	0x0398CBD0 LDP X22, X21, [X31 + 0x90]
	0x0398CBD4 ADD X31, X31, 0xB0
	0x0398CBD8 RET
	0x0398CBDC BL 0x1C16F20
	0x0398CBE0 BL 0x1C16F28
	0x0398CBE4 STP X30, X19, [X31 - 0x10]!
	0x0398CBE8 LDRB W8, [X0 + 0x98]
	0x0398CBEC CBNZ W8, 0x398CC04
	0x0398CBF0 LDR X0, [X0 + 0x10]
	0x0398CBF4 CBZ X0, 0x398CC4C
	0x0398CBF8 AND W2, W2, 0x1
	0x0398CBFC LDP X30, X19, [X31], #0x10
	0x0398CC00 B 0x398CC50
	0x0398CC04 ADRP X0, 0x767000
	0x0398CC08 LDR X0, [X0 + 0x5B0]
	0x0398CC0C BL 0x1C16D08
	0x0398CC10 BL 0x1C16F10
	0x0398CC14 MOV X19, X0
	0x0398CC18 ADRP X0, 0x7C4000
	0x0398CC1C LDR X0, [X0 + 0xA70]
	0x0398CC20 BL 0x1C16D08
	0x0398CC24 MOV X1, X0
	0x0398CC28 MOV X0, X19

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xA56000
	014 Move X21, 0x7C5000
	015 Move X26, 0x7C5000
	016 Move X25, 0x7C5000
	017 Move X22, 0x7C5000
	018 Move X23, 0x7C5000
	019 Move X28, 0x7C5000
	020 Move X21, [X21+2248]
	021 Move X26, [X26+2256]
	022 Move X25, [X25+2264]
	023 Move X22, [X22+2272]
	024 Move X23, [X23+2280]
	025 Move X28, [X28+2288]
	026 Move W8, [X24+2716]
	027 Move X20, X1
	028 Move X19, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {110}
	033 Move X0, 0x7C5000
	034 Move X0, [X0+2296]
	035 Call 0x1C17CF4
	036 Move X0, 0x7C5000
	037 Move X0, [X0+2304]
	038 Call 0x1C17CF4
	039 Move X0, 0x7C5000
	040 Move X0, [X0+2312]
	041 Call 0x1C17CF4
	042 Move X0, 0x7C5000
	043 Move X0, [X0+2320]
	044 Call 0x1C17CF4
	045 Move X0, 0x7C5000
	046 Move X0, [X0+2328]
	047 Call 0x1C17CF4
	048 Move X0, 0x7C5000
	049 Move X0, [X0+2336]
	050 Call 0x1C17CF4
	051 Move X0, 0x7C5000
	052 Move X0, [X0+2344]
	053 Call 0x1C17CF4
	054 Move X0, 0x7C5000
	055 Move X0, [X0+2352]
	056 Call 0x1C17CF4
	057 Move X0, 0x7C5000
	058 Move X0, [X0+2360]
	059 Call 0x1C17CF4
	060 Move X0, 0x7C3000
	061 Move X0, [X0+3624]
	062 Call 0x1C17CF4
	063 Move X0, 0x7C5000
	064 Move X0, [X0+2368]
	065 Call 0x1C17CF4
	066 Move X0, 0x7C5000
	067 Move X0, [X0+2280]
	068 Call 0x1C17CF4
	069 Move X0, 0x7C5000
	070 Move X0, [X0+2264]
	071 Call 0x1C17CF4
	072 Move X0, 0x7C5000
	073 Move X0, [X0+2256]
	074 Call 0x1C17CF4
	075 Move X0, 0x7C5000
	076 Move X0, [X0+2272]
	077 Call 0x1C17CF4
	078 Move X0, 0x7C5000
	079 Move X0, [X0+2376]
	080 Call 0x1C17CF4
	081 Move X0, 0x7C5000
	082 Move X0, [X0+2288]
	083 Call 0x1C17CF4
	084 Move X0, 0x7C5000
	085 Move X0, [X0+2384]
	086 Call 0x1C17CF4
	087 Move X0, 0x7C5000
	088 Move X0, [X0+2392]
	089 Call 0x1C17CF4
	090 Move X0, 0x7C5000
	091 Move X0, [X0+2248]
	092 Call 0x1C17CF4
	093 Move X0, 0x7C5000
	094 Move X0, [X0+2400]
	095 Call 0x1C17CF4
	096 Move X0, 0x7C5000
	097 Move X0, [X0+2240]
	098 Call 0x1C17CF4
	099 Move X0, 0x7C3000
	100 Move X0, [X0+2768]
	101 Call 0x1C17CF4
	102 Move X0, 0x7C3000
	103 Move X0, [X0+2776]
	104 Call 0x1C17CF4
	105 Move X0, 0x7C5000
	106 Move X0, [X0+2408]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X24+2716], W8
	110 Move X27, 0x7C5000
	111 Move X27, [X27+2352]
	112 Move X0, [X21]
	113 Move X29, 0x7C5000
	114 Move X24, 0x7C5000
	115 Move X29, [X29+2336]
	116 Move X24, [X24+2240]
	117 Call 0x1C17F10
	118 Move X21, X0
	119 Call RenderGraphObjectPool..ctor, X0
	120 Move [X19+24], X21
	121 Move X0, [X26]
	122 Call 0x1C17F10
	123 Move X2, [X25]
	124 Move W1, 64
	125 Move X21, X0
	126 Call List`1<Object>..ctor, X0, X1
	127 Move [X19+32], X21
	128 Move X0, [X22]
	129 Call 0x1C17F10
	130 Move X2, [X23]
	131 Move W1, 32
	132 Move X21, X0
	133 Call List`1<RendererListHandle>..ctor, X0, X1
	134 Move [X19+40], X21
	135 Move X0, [X28]
	136 Call 0x1C17F10
	137 Move X1, X31
	138 Move X21, X0
	139 Call Object..ctor, X0
	140 Move [X19+48], X21
	141 Move X8, 0x7C5000
	142 Move X8, [X8+2392]
	143 Move X0, [X8]
	144 Call 0x1C17F10
	145 Move X21, X0
	146 Call RenderGraphLogger..ctor, X0
	147 Move [X19+56], X21
	148 Move X8, 0x7C5000
	149 Move X8, [X8+2384]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X21, X0
	153 Call RenderGraphDefaultResources..ctor, X0
	154 Move [X19+64], X21
	155 Move X8, 0x7C5000
	156 Move X8, [X8+2312]
	157 Move X0, [X8]
	158 Call 0x1C17F10
	159 Move X8, 0x7C5000
	160 Move X8, [X8+2296]
	161 Move X21, X0
	162 Move X1, [X8]
	163 Call Dictionary`2<Int32, Object>..ctor, X0
	164 Move [X19+72], X21
	165 Move X8, 0x7C5000
	166 Move X8, [X8+2376]
	167 Move X0, [X8]
	168 Call 0x1C17F10
	169 Move X1, X31
	170 Move X21, X0
	171 Call Object..ctor, X0
	172 Move [X19+88], X21
	173 Move X8, 0x7C3000
	174 Move X8, [X8+3624]
	175 Move W1, 2
	176 Move X0, [X8]
	177 Call 0x1C17D6C
	178 Move [X19+112], X0
	179 Move X8, 0x7C5000
	180 Move X8, [X8+2328]
	181 Move W1, 2
	182 Move X0, [X8]
	183 Call 0x1C17D6C
	184 Move [X19+120], X0
	185 Move X8, 0x7C5000
	186 Move X8, [X8+2360]
	187 Move X0, [X8]
	188 Call 0x1C17F10
	189 Move X8, 0x7C5000
	190 Move X8, [X8+2344]
	191 Move X21, X0
	192 Move X1, [X8]
	193 Call DynamicArray`1<CompiledPassInfo>..ctor, X0
	194 Move [X19+128], X21
	195 Move X8, 0x7C3000
	196 Move X8, [X8+2776]
	197 Move X0, [X8]
	198 Call 0x1C17F10
	199 Move X8, 0x7C3000
	200 Move X8, [X8+2768]
	201 Move X21, X0
	202 Move X1, [X8]
	203 Call Stack`1<Int32>..ctor, X0
	204 Move [X19+136], X21
	205 Move X8, 0x7C5000
	206 Move X8, [X8+2320]
	207 Move X0, [X8]
	208 Call 0x1C17F10
	209 Move X8, 0x7C5000
	210 Move X8, [X8+2304]
	211 Move X21, X0
	212 Move X1, [X8]
	213 Call Dictionary`2<Object, Object>..ctor, X0
	214 Move [X19+176], X21
	215 Move X8, 0x7C5000
	216 Move X8, [X8+2408]
	217 Move X0, X19
	218 Move X1, X31
	219 Move X8, [X8]
	220 Move [X19+184], X8
	221 Call Object..ctor, X0
	222 Move [X19+184], X20
	223 Move X8, 0x7C5000
	224 Move X20, [X19+48]
	225 Move X21, [X19+56]
	226 Move X8, [X8+2400]
	227 Move X0, [X8]
	228 Call 0x1C17F10
	229 Move X1, X20
	230 Move X2, X21
	231 Move X22, X0
	232 Call RenderGraphResourceRegistry..ctor, X0, X1, X2
	233 Move X21, X31
	234 Move W8, 1
	235 Move [X19+16], X22
	236 Move X0, [X27]
	237 Move X23, [X19+120]
	238 Move W22, W8
	239 Call 0x1C17F10
	240 Move X1, [X29]
	241 Move X20, X0
	242 Call DynamicArray`1<CompiledResourceInfo>..ctor, X0
	243 Compare X23, 0
	244 JumpIfEqual {329}
	245 Compare X20, 0
	246 JumpIfEqual {253}
	247 Move X8, [X23]
	248 Move X0, X20
	249 Move X1, [X8+64]
	250 Call 0x1C17E00
	251 Compare X0, 0
	252 JumpIfEqual {331}
	253 Move W8, [X23+24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move W8, W31
	256 Add X9, X23, X21
	257 Move W21, 1
	258 Move [X9+32], X20
	259 Move TEMP, X22
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {236}
	263 Move X0, [X24]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {269}
	267 Call 0x1C17DFC
	268 Move X0, [X24]
	269 Move X8, [X0+184]
	270 Move X0, [X8+8]
	271 Compare X0, 0
	272 JumpIfEqual {329}
	273 Move X9, 0x7C5000
	274 Move W10, [X0+28]
	275 Move X8, [X0+16]
	276 Move X9, [X9+2368]
	277 Add W10, W10, 1
	278 Move X9, [X9]
	279 Move [X0+28], W10
	280 Compare X8, 0
	281 JumpIfEqual {329}
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Move W11, [X8+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add W9, W10, 1
	286 Add X8, X8, X10
	287 Move [X0+24], W9
	288 Move [X8+32], X19
	289 Move X8, [X9+32]
	290 Move X1, X19
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Call List`1<Object>.AddWithResize, X0, X1
	294 Move X8, [X24]
	295 Move X8, [X8+184]
	296 Move X8, [X8+24]
	297 Compare X8, 0
	298 JumpIfEqual {316}
	299 Move X3, [X8+24]
	300 Move X0, [X8+64]
	301 Move X2, [X8+40]
	302 Move X1, X19
	303 Move X20, [X31+80]
	304 Move X19, [X31+88]
	305 Move X22, [X31+64]
	306 Move X21, [X31+72]
	307 Move X24, [X31+48]
	308 Move X23, [X31+56]
	309 Move X26, [X31+32]
	310 Move X25, [X31+40]
	311 Move X28, [X31+16]
	312 Move X27, [X31+24]
	313 Move X29, [X31+96]
	314 Move X30, [X31+104]
	315 CallNoReturn X3
	316 Move X20, [X31+80]
	317 Move X19, [X31+88]
	318 Move X22, [X31+64]
	319 Move X21, [X31+72]
	320 Move X24, [X31+48]
	321 Move X23, [X31+56]
	322 Move X26, [X31+32]
	323 Move X25, [X31+40]
	324 Move X28, [X31+16]
	325 Move X27, [X31+24]
	326 Move X29, [X31+96]
	327 Move X30, [X31+104]
	328 Return 
	329 Call 0x1C17F20
	330 Call 0x1C17F28
	331 Call 0x1C17F44
	332 Move X1, X31
	333 Call 0x1C17DEC

Method: System.Void Cleanup()

Disassembly:
	0x0398D1A8 CBZ X8, 0x398D258
	0x0398D1AC LDR W9, [X8 + 0x18]
	0x0398D1B0 CBZ W9, 0x398D25C
	0x0398D1B4 LDR X8, [X8 + 0x20]
	0x0398D1B8 CBZ X8, 0x398D258
	0x0398D1BC ADRP X9, 0x791000
	0x0398D1C0 LDR X9, [X9 + 0x730]
	0x0398D1C4 LDR X21, [X8 + 0x10]
	0x0398D1C8 LDR X20, [X20]
	0x0398D1CC LDR X0, [X9]
	0x0398D1D0 LDR W8, [X0 + 0xE0]
	0x0398D1D4 CBNZ W8, 0x398D1DC
	0x0398D1D8 BL 0x1C16DFC
	0x0398D1DC MOV X0, X20
	0x0398D1E0 BL 0x398FDA8
	0x0398D1E4 CBZ X21, 0x398D258
	0x0398D1E8 ADRP X8, 0x78F000
	0x0398D1EC LDR X8, [X8 + 0xA80]
	0x0398D1F0 MOV W1, W0
	0x0398D1F4 MOV X0, X21
	0x0398D1F8 LDR X2, [X8]
	0x0398D1FC BL 0x2B40178
	0x0398D200 LDR X8, [X0]
	0x0398D204 CBZ X8, 0x398D258
	0x0398D208 ADRP X9, 0x7C3000
	0x0398D20C LDR X9, [X9 + 0xA80]
	0x0398D210 LDR X10, [X8]
	0x0398D214 LDR X9, [X9]
	0x0398D218 LDRB W12, [X10 + 0x130]
	0x0398D21C LDRB W11, [X9 + 0x130]
	0x0398D220 CMP W12, W11
	0x0398D224 B.CC 0x398D258
	0x0398D228 LDR X10, [X10 + 0xC8]
	0x0398D22C ADD X10, X10, X11, 0x3, LSL
	0x0398D230 LDUR X10, [X10 - 0x8]
	0x0398D234 CMP X10, X9
	0x0398D238 B.NE 0x398D258
	0x0398D23C MOV X0, X19
	0x0398D240 LDP X20, X19, [X31 + 0x20]
	0x0398D244 LDP X22, X21, [X31 + 0x10]
	0x0398D248 ADD X1, X8, 0x30
	0x0398D24C MOVZ W2, 0x78
	0x0398D250 LDR X30, [X31], #0x30
	0x0398D254 B 0x3EB1AC0
	0x0398D258 BL 0x1C16F20
	0x0398D25C BL 0x1C16F28
	0x0398D260 STP X30, X23, [X31 - 0x30]!
	0x0398D264 STP X22, X21, [X31 + 0x10]
	0x0398D268 STP X20, X19, [X31 + 0x20]
	0x0398D26C ADRP X22, 0xA54000
	0x0398D270 ADRP X23, 0x7C3000
	0x0398D274 LDRB W8, [X22 + 0xAA1]
	0x0398D278 LDR X23, [X23 + 0xA88]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA55000
	005 Move W8, [X20+2717]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x7C4000
	012 Move X0, [X0+2576]
	013 Call 0x1C17CF4
	014 Move X0, 0x7C4000
	015 Move X0, [X0+2240]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2717], W8
	019 Move X0, [X19+16]
	020 Compare X0, 0
	021 JumpIfEqual {65}
	022 Call RenderGraphResourceRegistry.Cleanup, X0
	023 Move X0, [X19+64]
	024 Compare X0, 0
	025 JumpIfEqual {65}
	026 Call RenderGraphDefaultResources.Cleanup, X0
	027 Move X0, [X19+24]
	028 Compare X0, 0
	029 JumpIfEqual {65}
	030 Move X20, 0x7C4000
	031 Move X20, [X20+2240]
	032 Call RenderGraphObjectPool.Cleanup, X0
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {65}
	043 Move X8, 0x7C4000
	044 Move X8, [X8+2576]
	045 Move X1, X19
	046 Move X2, [X8]
	047 Call List`1<Object>.Remove, X0, X1
	048 Move X8, [X20]
	049 Move X8, [X8+184]
	050 Move X8, [X8+32]
	051 Compare X8, 0
	052 JumpIfEqual {61}
	053 Move X3, [X8+24]
	054 Move X0, [X8+64]
	055 Move X2, [X8+40]
	056 Move X1, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 CallNoReturn X3
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void RegisterDebug(UnityEngine.Rendering.DebugUI/Panel panel = null)

Disassembly:
	0x0398D444 CBZ X0, 0x398D450
	0x0398D448 LDR X30, [X31], #0x10
	0x0398D44C B 0x398D454
	0x0398D450 BL 0x1C16F20
	0x0398D454 SUB X31, X31, 0x30
	0x0398D458 STP X30, X21, [X31 + 0x10]
	0x0398D45C STP X20, X19, [X31 + 0x20]
	0x0398D460 ADRP X21, 0xA54000
	0x0398D464 LDRB W8, [X21 + 0xB15]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X2, X1
	006 Move X1, [X0+184]
	007 Move X0, X8
	008 Move X30, [X31+16]
	009 Call RenderGraphDebugParams.RegisterDebug, X0, X1, X2
	010 Return 
	011 Call 0x1C17F20

Method: System.Void UnRegisterDebug()

Disassembly:
	0x0398D468 MOV X19, X1
	0x0398D46C MOV X20, X0
	0x0398D470 TBNZ X8, 0x0, 0x398D488
	0x0398D474 ADRP X0, 0x7C3000
	0x0398D478 LDR X0, [X0 + 0xAC8]
	0x0398D47C BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+48]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call RenderGraphDebugParams.UnRegisterDebug, X0, X1
	007 Return 
	008 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph> GetRegisteredRenderGraphs()

Disassembly:
	0x0398D480 MOVZ W8, 0x1
	0x0398D484 STRB W8, [X21 + 0xB15]
	0x0398D488 STR X31, [X31]
	0x0398D48C LDR X8, [X20 + 0x10]
	0x0398D490 CBZ X8, 0x398D500
	0x0398D494 LDR W9, [X8 + 0x18]
	0x0398D498 CMP W9, 0x1
	0x0398D49C B.LS 0x398D504
	0x0398D4A0 LDR X0, [X8 + 0x28]
	0x0398D4A4 CBZ X0, 0x398D500
	0x0398D4A8 ADRP X8, 0x7C3000
	0x0398D4AC LDR X8, [X8 + 0xAC8]
	0x0398D4B0 ADD X1, X31, 0x0
	0x0398D4B4 MOVZ W2, 0x1
	0x0398D4B8 MOVZ W20, 0x1
	0x0398D4BC LDR X3, [X8]
	0x0398D4C0 BL 0x22B7EA8
	0x0398D4C4 LDR X8, [X31]
	0x0398D4C8 CBZ X8, 0x398D500
	0x0398D4CC MOV W1, W0
	0x0398D4D0 ADD X0, X31, 0x8
	0x0398D4D4 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA55000
	005 Move X19, 0x7C4000
	006 Move W8, [X20+2718]
	007 Move X19, [X19+2240]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7C4000
	013 Move X0, [X0+2240]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2718], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugData GetDebugData(System.String executionName)

Disassembly:
	0x0398D4D8 MOV W3, W31
	0x0398D4DC STR X19, [X8 + 0x48]
	0x0398D4E0 STRB W20, [X8 + 0x10]
	0x0398D4E4 STR X31, [X31 + 0x8]
	0x0398D4E8 BL 0x3997F5C
	0x0398D4EC LDR X0, [X31 + 0x8]
	0x0398D4F0 LDP X20, X19, [X31 + 0x20]
	0x0398D4F4 LDP X30, X21, [X31 + 0x10]
	0x0398D4F8 ADD X31, X31, 0x30
	0x0398D4FC RET
	0x0398D500 BL 0x1C16F20
	0x0398D504 BL 0x1C16F28
	0x0398D508 STR X30, [X31 - 0x10]!
	0x0398D50C LDR X0, [X0 + 0x10]
	0x0398D510 CBZ X0, 0x398D520
	0x0398D514 MOVN W2, 0x0
	0x0398D518 LDR X30, [X31], #0x10
	0x0398D51C B 0x398D524
	0x0398D520 BL 0x1C16F20
	0x0398D524 SUB X31, X31, 0x50
	0x0398D528 STR X30, [X31 + 0x20]
	0x0398D52C STP X22, X21, [X31 + 0x30]
	0x0398D530 STP X20, X19, [X31 + 0x40]
	0x0398D534 ADRP X22, 0xA54000
	0x0398D538 LDRB W8, [X22 + 0xB16]
	0x0398D53C MOV W19, W2
	0x0398D540 MOV X20, X1
	0x0398D544 MOV X21, X0
	0x0398D548 TBNZ X8, 0x0, 0x398D560
	0x0398D54C ADRP X0, 0x7C3000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA55000
	007 Move W8, [X21+2719]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C4000
	015 Move X0, [X0+2608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2719], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+176]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, 0x7C4000
	024 Move X8, [X8+2608]
	025 Add X2, X31, 8
	026 Move X1, X19
	027 Move X3, [X8]
	028 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	029 Move X8, [X31+8]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void EndFrame()

Disassembly:
	0x0398D550 LDR X0, [X0 + 0xAC8]
	0x0398D554 BL 0x1C16CF4
	0x0398D558 MOVZ W8, 0x1
	0x0398D55C STRB W8, [X22 + 0xB16]
	0x0398D560 STR X31, [X31 + 0x18]
	0x0398D564 LDR X8, [X21 + 0x10]
	0x0398D568 CBZ X8, 0x398D5F0
	0x0398D56C LDR W9, [X8 + 0x18]
	0x0398D570 CMP W9, 0x1
	0x0398D574 B.LS 0x398D5F4
	0x0398D578 LDR X0, [X8 + 0x28]
	0x0398D57C CBZ X0, 0x398D5F0
	0x0398D580 ADRP X8, 0x7C3000
	0x0398D584 LDR X8, [X8 + 0xAC8]
	0x0398D588 ADD X1, X31, 0x18
	0x0398D58C MOVZ W2, 0x1
	0x0398D590 LDR X3, [X8]
	0x0398D594 BL 0x22B7EA8
	0x0398D598 LDR X8, [X31 + 0x18]
	0x0398D59C LDR X9, [X20 + 0x10]
	0x0398D5A0 LDR V0, [X20]
	0x0398D5A4 STR X9, [X31 + 0x10]
	0x0398D5A8 STR V0, [X31]
	0x0398D5AC CBZ X8, 0x398D5F0
	0x0398D5B0 LDR X9, [X31 + 0x10]
	0x0398D5B4 LDR V0, [X31]
	0x0398D5B8 MOV W1, W0
	0x0398D5BC ADD X0, X31, 0x28
	0x0398D5C0 MOVZ W2, 0x1
	0x0398D5C4 MOV W3, W31
	0x0398D5C8 STR W19, [X8 + 0x1C]
	0x0398D5CC STR X9, [X8 + 0x40]
	0x0398D5D0 STR V0, [X8 + 0x3]
	0x0398D5D4 STR X31, [X31 + 0x28]
	0x0398D5D8 BL 0x3997F5C
	0x0398D5DC LDP X30, X0, [X31 + 0x20]
	0x0398D5E0 LDP X20, X19, [X31 + 0x40]
	0x0398D5E4 LDP X22, X21, [X31 + 0x30]
	0x0398D5E8 ADD X31, X31, 0x50
	0x0398D5EC RET
	0x0398D5F0 BL 0x1C16F20
	0x0398D5F4 BL 0x1C16F28
	0x0398D5F8 SUB X31, X31, 0x30
	0x0398D5FC STP X30, X19, [X31 + 0x20]
	0x0398D600 STP X31, X31, [X31 + 0x8]
	0x0398D604 STR X31, [X31 + 0x18]
	0x0398D608 LDR X19, [X0 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA55000
	005 Move W8, [X20+2720]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x767000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2720], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {61}
	019 Call RenderGraphResourceRegistry.PurgeUnusedGraphicsResources, X0
	020 Move X8, [X19+48]
	021 Compare X8, 0
	022 JumpIfEqual {61}
	023 Move W9, [X8+37]
	024 Compare W9, 0
	025 JumpIfEqual {46}
	026 Move X0, [X19+56]
	027 Compare X0, 0
	028 JumpIfEqual {61}
	029 Move X20, 0x767000
	030 Move X20, [X20+2600]
	031 Call RenderGraphLogger.GetAllLogs, X0
	032 Move X8, [X20]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Call Debug.Log, X0
	042 Move X8, [X19+48]
	043 Compare X8, 0
	044 JumpIfEqual {61}
	045 Move [X8+37], W31
	046 Move W8, [X8+38]
	047 Compare W8, 0
	048 JumpIfEqual {57}
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfEqual {61}
	052 Call RenderGraphResourceRegistry.FlushLogs, X0
	053 Move X8, [X19+48]
	054 Compare X8, 0
	055 JumpIfEqual {61}
	056 Move [X8+38], W31
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Return 
	061 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle ImportTexture(UnityEngine.Rendering.RTHandle rt)

Disassembly:
	0x0398D894 STR X9, [X8 + 0x10]
	0x0398D898 LDR X8, [X19 + 0x58]
	0x0398D89C CBZ X8, 0x398D9DC
	0x0398D8A0 LDR X9, [X19 + 0x18]
	0x0398D8A4 STR X9, [X8 + 0x20]
	0x0398D8A8 LDR X9, [X19 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle ImportBackbuffer(UnityEngine.Rendering.RenderTargetIdentifier rt)

Disassembly:
	0x0398D95C LDR X1, [X8 + 0x40]
	0x0398D960 BL 0x1C16E00
	0x0398D964 CBZ X0, 0x398D9E4
	0x0398D968 LDR W8, [X24 + 0x18]
	0x0398D96C CMP W23, W8
	0x0398D970 B.CS 0x398D9E0
	0x0398D974 STR X20, [X26]
	0x0398D978 LDR X24, [X19 + 0x70]
	0x0398D97C CBZ X24, 0x398D9DC
	0x0398D980 LDR W8, [X24 + 0x18]
	0x0398D984 CMP W23, W8
	0x0398D988 B.CS 0x398D9E0
	0x0398D98C ADD X8, X24, X25, 0x3, LSL
	0x0398D990 LDR X8, [X8 + 0x20]
	0x0398D994 CBZ X8, 0x398D9DC
	0x0398D998 LDR W9, [X8 + 0x1C]
	0x0398D99C ADD W23, W23, 0x1
	0x0398D9A0 CMP W23, 0x2

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move X8, [X1+32]
	004 Move V0, [X1]
	005 Move V1, [X1+16]
	006 Move X0, [X0+16]
	007 Move [X31+80], X8
	008 Move [X31+48], V0
	009 Move [X31+56], V1
	010 Compare X0, 0
	011 JumpIfEqual {23}
	012 Move V0, [X31+48]
	013 Move V1, [X31+64]
	014 Move X8, [X31+80]
	015 Add X1, X31, 0
	016 Move [X31], V0
	017 Move [X31+8], V1
	018 Move [X31+32], X8
	019 Call RenderGraphResourceRegistry.ImportBackbuffer, X0, X1
	020 Move X30, [X31+96]
	021 Add X31, X31, 112
	022 Return X0
	023 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle CreateTexture(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc desc)

Disassembly:
	0x0398DAEC LDR X0, [X19 + 0x10]
	0x0398DAF0 CBZ X0, 0x398DB78
	0x0398DAF4 ADRP X8, 0x7C3000
	0x0398DAF8 LDR X8, [X8 + 0xB00]
	0x0398DAFC ADD X2, X31, 0x8
	0x0398DB00 MOV X1, X20
	0x0398DB04 LDR X3, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W2, TEMP
	008 Move X30, [X31+16]
	009 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle CreateSharedTexture(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc desc, System.Boolean explicitRelease = False)

Disassembly:
	0x0398DBE4 LDR X1, [X19 + 0x28]
	0x0398DBE8 ADRP X21, 0x7C3000
	0x0398DBEC LDR X21, [X21 + 0x618]
	0x0398DBF0 BL 0x398C8AC
	0x0398DBF4 STR X0, [X19 + 0x78]
	0x0398DBF8 LDR X0, [X21]
	0x0398DBFC LDR W8, [X0 + 0xE0]
	0x0398DC00 CBNZ W8, 0x398DC08
	0x0398DC04 BL 0x1C16DFC
	0x0398DC08 MOV X0, X31
	0x0398DC0C BL 0x39DD168
	0x0398DC10 LDR X8, [X20 + 0x10]
	0x0398DC14 CBZ X8, 0x398DD58
	0x0398DC18 MOV X1, X0
	0x0398DC1C MOV X0, X8
	0x0398DC20 BL 0x398C8AC
	0x0398DC24 STR X0, [X19 + 0x40]
	0x0398DC28 MOV X0, X31
	0x0398DC2C BL 0x39DD1EC
	0x0398DC30 LDR X8, [X20 + 0x10]
	0x0398DC34 CBZ X8, 0x398DD58
	0x0398DC38 MOV X1, X0
	0x0398DC3C MOV X0, X8
	0x0398DC40 BL 0x398C8AC
	0x0398DC44 STR X0, [X19 + 0x48]
	0x0398DC48 MOV X0, X31
	0x0398DC4C BL 0x39DD270

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+152]
	004 Compare W8, 0
	005 JumpIfNotEqual {12}
	006 Move X0, [X0+16]
	007 Compare X0, 0
	008 JumpIfEqual {30}
	009 And W2, W2, 1
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Move X0, 0x767000
	013 Move X0, [X0+1456]
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X19, X0
	017 Move X0, 0x7C4000
	018 Move X0, [X0+2672]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X19
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, 0x7C4000
	025 Move X0, [X0+2680]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Call 0x1C17DEC
	030 Call 0x1C17F20

Method: System.Void RefreshSharedTextureDesc(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle handle, in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc desc)

Disassembly:
	0x0398DE18 MOV X21, X0
	0x0398DE1C LDR X8, [X22 + 0x38]
	0x0398DE20 CBNZ X8, 0x398DE30
	0x0398DE24 MOV X0, X22
	0x0398DE28 BL 0x1C5C6E0
	0x0398DE2C LDR X8, [X22 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Void ReleaseSharedTexture(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle texture)

Disassembly:
	0x0398DF5C BL 0x1C16CF4
	0x0398DF60 MOVZ W8, 0x1
	0x0398DF64 STRB W8, [X20 + 0xB47]
	0x0398DF68 ADRP X8, 0x7C3000
	0x0398DF6C LDR X8, [X8 + 0x960]
	0x0398DF70 LDR X8, [X8]
	0x0398DF74 LDR X8, [X8 + 0xB8]
	0x0398DF78 STR X19, [X8]
	0x0398DF7C LDP X20, X19, [X31 + 0x10]
	0x0398DF80 LDR X30, [X31], #0x20
	0x0398DF84 RET
	0x0398DF88 STR X30, [X31 - 0x20]!
	0x0398DF8C STP X20, X19, [X31 + 0x10]
	0x0398DF90 ADRP X20, 0xA54000
	0x0398DF94 LDRB W8, [X20 + 0xAC0]
	0x0398DF98 MOV X19, X0
	0x0398DF9C TBNZ X8, 0x0, 0x398DFB4
	0x0398DFA0 ADRP X0, 0x7C3000
	0x0398DFA4 LDR X0, [X0 + 0xB20]
	0x0398DFA8 BL 0x1C16CF4
	0x0398DFAC MOVZ W8, 0x1
	0x0398DFB0 STRB W8, [X20 + 0xAC0]
	0x0398DFB4 STRB W31, [X31 + 0x8]
	0x0398DFB8 LDR X8, [X19 + 0x58]
	0x0398DFBC CBZ X8, 0x398E044
	0x0398DFC0 ADRP X9, 0x7C3000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+152]
	004 Compare W8, 0
	005 JumpIfNotEqual {11}
	006 Move X0, [X0+16]
	007 Compare X0, 0
	008 JumpIfEqual {29}
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Move X0, 0x767000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x7C4000
	017 Move X0, [X0+2720]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x7C4000
	024 Move X0, [X0+2728]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC
	029 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle CreateTexture(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle texture)

Disassembly:
	0x0398E0FC CBZ X8, 0x398E194
	0x0398E100 ADRP X9, 0x7C2000
	0x0398E104 LDR X9, [X9 + 0xB20]
	0x0398E108 LDR X20, [X8 + 0x18]
	0x0398E10C MOVZ W0, 0x1
	0x0398E110 LDR X1, [X9]
	0x0398E114 BL 0x2235BC0
	0x0398E118 MOV X2, X0
	0x0398E11C ADD X0, X31, 0x8
	0x0398E120 MOV X1, X20
	0x0398E124 MOV X3, X31
	0x0398E128 BL 0x39B1DB0
	0x0398E12C LDR X0, [X19 + 0x80]
	0x0398E130 CBZ X0, 0x398E174
	0x0398E134 ADRP X21, 0x7C2000
	0x0398E138 LDR X21, [X21 + 0xB28]
	0x0398E13C MOV W20, W31
	0x0398E140 LDR W8, [X0 + 0x18]
	0x0398E144 CMP W20, W8
	0x0398E148 B.GE 0x398E178
	0x0398E14C LDR X2, [X21]
	0x0398E150 MOV W1, W20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X31+112], X31
	006 Move [X31+120], X1
	007 Move [X31+80], V0
	008 Move [X31+88], V0
	009 Move [X31+48], V0
	010 Move [X31+56], V0
	011 Move [X31+16], V0
	012 Move [X31+24], V0
	013 Move [X31], V0
	014 Move X19, [X0+16]
	015 Compare X19, 0
	016 JumpIfEqual {31}
	017 Add X8, X31, 0
	018 Add X1, X31, 120
	019 Move X0, X19
	020 Call RenderGraphResourceRegistry.GetTextureResourceDesc, X0, X1
	021 Add X1, X31, 0
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W2, TEMP
	025 Move X0, X19
	026 Call RenderGraphResourceRegistry.CreateTexture, X0, X1, X2
	027 Move X30, [X31+128]
	028 Move X19, [X31+136]
	029 Add X31, X31, 144
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void CreateTextureIfInvalid(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc desc, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle texture)

Disassembly:
	0x0398E260 LDR X0, [X0 + 0xB58]
	0x0398E264 BL 0x1C16CF4
	0x0398E268 ADRP X0, 0x7C2000
	0x0398E26C LDR X0, [X0 + 0xB60]
	0x0398E270 BL 0x1C16CF4
	0x0398E274 ADRP X0, 0x7C2000
	0x0398E278 LDR X0, [X0 + 0xB38]
	0x0398E27C BL 0x1C16CF4
	0x0398E280 MOVZ W8, 0x1
	0x0398E284 STRB W8, [X23 + 0xAA3]
	0x0398E288 LDR X1, [X21]
	0x0398E28C LDR X4, [X22]
	0x0398E290 MOVI V0.2D, 0x0
	0x0398E294 ADD X8, X31, 0x8
	0x0398E298 ADD X2, X31, 0x28
	0x0398E29C MOV X0, X20
	0x0398E2A0 MOV X3, X31
	0x0398E2A4 STP V0, V0, [X31 + 0x30]
	0x0398E2A8 STR X31, [X31 + 0x28]
	0x0398E2AC BL 0x2240F24
	0x0398E2B0 LDUR V0, [X31 + 0x8]
	0x0398E2B4 LDUR V1, [X31 + 0x18]
	0x0398E2B8 LDR X8, [X31 + 0x28]
	0x0398E2BC STP V0, V1, [X31 + 0x30]
	0x0398E2C0 CBZ X8, 0x398E390
	0x0398E2C4 STR X19, [X8 + 0x10]
	0x0398E2C8 LDR X8, [X31 + 0x30]
	0x0398E2CC CBZ X8, 0x398E394
	0x0398E2D0 ADRP X21, 0x7C2000
	0x0398E2D4 LDR X21, [X21 + 0xB60]
	0x0398E2D8 STRB W31, [X8 + 0x29]
	0x0398E2DC STRB W31, [X8 + 0x48]
	0x0398E2E0 LDR X8, [X21]
	0x0398E2E4 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA54000
	008 Move X23, 0x7C3000
	009 Move W8, [X22+2721]
	010 Move X23, [X23+2696]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x7C3000
	019 Move X0, [X0+2696]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2721], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Call TextureHandle.IsValid, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {43}
	034 Move X0, [X21+16]
	035 Compare X0, 0
	036 JumpIfEqual {50}
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W2, TEMP
	040 Move X1, X20
	041 Call RenderGraphResourceRegistry.CreateTexture, X0, X1, X2
	042 Move [X19], X0
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return 
	050 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc GetTextureDesc(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle texture)

Disassembly:
	0x0398E33C LDR X2, [X8]
	0x0398E340 MOV X1, X20
	0x0398E344 MOV X3, X31
	0x0398E348 BL 0x25C78AC
	0x0398E34C LDR X8, [X21]
	0x0398E350 LDR X8, [X8 + 0xB8]
	0x0398E354 STR X19, [X8 + 0x8]
	0x0398E358 ADRP X8, 0x7C2000
	0x0398E35C LDR X8, [X8 + 0xB50]
	0x0398E360 LDR X2, [X8]
	0x0398E364 ADD X0, X31, 0x30
	0x0398E368 MOV X1, X19
	0x0398E36C BL 0x224107C
	0x0398E370 ADD X0, X31, 0x30
	0x0398E374 MOV W1, W31
	0x0398E378 BL 0x39972C8
	0x0398E37C LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move [X31+120], X1
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {20}
	008 Move X19, X8
	009 Add X8, X31, 0
	010 Add X1, X31, 120
	011 Call RenderGraphResourceRegistry.GetTextureResourceDesc, X0, X1
	012 Add X1, X31, 0
	013 Move W2, 120
	014 Move X0, X19
	015 Call 0x3EB2AC0
	016 Move X30, [X31+128]
	017 Move X19, [X31+136]
	018 Add X31, X31, 144
	019 Return X0
	020 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle CreateRendererList(in UnityEngine.Rendering.RendererUtils.RendererListDesc desc)

Disassembly:
	0x0398E380 LDP X22, X21, [X31 + 0x60]
	0x0398E384 LDP X30, X23, [X31 + 0x50]
	0x0398E388 ADD X31, X31, 0x80
	0x0398E38C RET
	0x0398E390 BL 0x1C16F20
	0x0398E394 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferHandle ImportComputeBuffer(UnityEngine.ComputeBuffer computeBuffer)

Disassembly:
	0x0398E43C RET
	0x0398E440 BL 0x1C16F20
	0x0398E444 SUB X31, X31, 0x80
	0x0398E448 STP X30, X23, [X31 + 0x50]
	0x0398E44C STP X22, X21, [X31 + 0x60]
	0x0398E450 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferHandle CreateComputeBuffer(in UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferDesc desc)

Disassembly:
	0x0398E508 LDR X8, [X31 + 0x30]
	0x0398E50C CBZ X8, 0x398E5D4
	0x0398E510 ADRP X21, 0x7C2000
	0x0398E514 LDR X21, [X21 + 0xB60]
	0x0398E518 STRB W31, [X8 + 0x29]
	0x0398E51C STRB W31, [X8 + 0x48]
	0x0398E520 LDR X8, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W2, TEMP
	008 Move X30, [X31+16]
	009 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferHandle CreateComputeBuffer(in UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferHandle computeBuffer)

Disassembly:
	0x0398E5F8 BL 0x3EB1AE0
	0x0398E5FC ADD X0, X31, 0x30
	0x0398E600 MOV W1, W31
	0x0398E604 BL 0x39972C8
	0x0398E608 CBZ X20, 0x398E5BC
	0x0398E60C MOV X0, X20
	0x0398E610 BL 0x1C16F18
	0x0398E614 MOV X20, X31
	0x0398E618 B 0x398E620
	0x0398E61C MOV X19, X0
	0x0398E620 ADD X0, X31, 0x30
	0x0398E624 MOV W1, W31
	0x0398E628 BL 0x39972C8
	0x0398E62C CBNZ X20, 0x398E638
	0x0398E630 MOV X0, X19
	0x0398E634 BL 0x1D2C690
	0x0398E638 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+8], X31
	005 Move [X31+16], X31
	006 Move [X31+24], X31
	007 Move X19, [X0+16]
	008 Compare X19, 0
	009 JumpIfEqual {23}
	010 Add X8, X31, 8
	011 Move X0, X19
	012 Call RenderGraphResourceRegistry.GetComputeBufferResourceDesc, X0, X1
	013 Add X1, X31, 8
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W2, TEMP
	017 Move X0, X19
	018 Call RenderGraphResourceRegistry.CreateComputeBuffer, X0, X1, X2
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 Add X31, X31, 48
	022 Return X0
	023 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferDesc GetComputeBufferDesc(in UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferHandle computeBuffer)

Disassembly:
	0x0398E750 ADRP X0, 0x7C2000
	0x0398E754 LDR X0, [X0 + 0xB90]
	0x0398E758 BL 0x1C16CF4
	0x0398E75C ADRP X0, 0x7C2000
	0x0398E760 LDR X0, [X0 + 0xB98]
	0x0398E764 BL 0x1C16CF4
	0x0398E768 ADRP X0, 0x7C2000
	0x0398E76C LDR X0, [X0 + 0xBA0]
	0x0398E770 BL 0x1C16CF4
	0x0398E774 ADRP X0, 0x7C2000
	0x0398E778 LDR X0, [X0 + 0xBA8]
	0x0398E77C BL 0x1C16CF4
	0x0398E780 ADRP X0, 0x7C2000
	0x0398E784 LDR X0, [X0 + 0xBB0]
	0x0398E788 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {18}
	007 Move X19, X8
	008 Add X8, X31, 8
	009 Call RenderGraphResourceRegistry.GetComputeBufferResourceDesc, X0, X1
	010 Move X8, [X31+24]
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move [X19+16], X8
	013 Move [X19], V0
	014 Move X30, [X31+32]
	015 Move X19, [X31+40]
	016 Add X31, X31, 48
	017 Return X0
	018 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphBuilder AddRenderPass(System.String passName, out PassData passData, UnityEngine.Rendering.ProfilingSampler sampler)

Disassembly:
	0x02241F24 CBNZ X8, 0x2241F34
	0x02241F28 MOV X0, X19
	0x02241F2C BL 0x1C5C6E0
	0x02241F30 LDR X8, [X19 + 0x38]
	0x02241F34 ADRP X9, 0x1EB2000
	0x02241F38 LDR X9, [X9 + 0x6C0]
	0x02241F3C LDR X21, [X8]
	0x02241F40 LDR X0, [X9]
	0x02241F44 LDR W9, [X0 + 0xE0]
	0x02241F48 CBNZ W9, 0x2241F50
	0x02241F4C BL 0x1C16DFC
	0x02241F50 MOV X0, X21
	0x02241F54 MOV X1, X31
	0x02241F58 BL 0x338C698
	0x02241F5C MOV X1, X20
	0x02241F60 MOV X2, X31
	0x02241F64 BL 0x3C313CC
	0x02241F68 LDR X8, [X19 + 0x38]
	0x02241F6C MOV X20, X0
	0x02241F70 LDR X19, [X8 + 0x8]
	0x02241F74 LDRB W8, [X19 + 0x135]
	0x02241F78 TBNZ X8, 0x0, 0x2241F88
	0x02241F7C MOV X0, X19
	0x02241F80 BL 0x1C5C684
	0x02241F84 MOV X19, X0
	0x02241F88 CBZ X20, 0x2241FA8
	0x02241F8C MOV X0, X20
	0x02241F90 MOV X1, X19
	0x02241F94 BL 0x1C16E00
	0x02241F98 CBNZ X0, 0x2241FAC
	0x02241F9C MOV X0, X20
	0x02241FA0 MOV X1, X19
	0x02241FA4 BL 0x1C171E0
	0x02241FA8 MOV X0, X31
	0x02241FAC LDP X20, X19, [X31 + 0x10]
	0x02241FB0 LDP X30, X21, [X31], #0x20
	0x02241FB4 RET
	0x02241FB8 STP X30, X21, [X31 - 0x20]!
	0x02241FBC STP X20, X19, [X31 + 0x10]
	0x02241FC0 LDR X8, [X1 + 0x38]
	0x02241FC4 MOV X19, X1
	0x02241FC8 MOV X20, X0
	0x02241FCC CBNZ X8, 0x2241FF0
	0x02241FD0 ADRP X0, 0x1EB2000
	0x02241FD4 LDR X0, [X0 + 0x6C0]
	0x02241FD8 BL 0x1C16CF4
	0x02241FDC LDR X8, [X19 + 0x38]
	0x02241FE0 CBNZ X8, 0x2241FF0
	0x02241FE4 MOV X0, X19
	0x02241FE8 BL 0x1C5C6E0
	0x02241FEC LDR X8, [X19 + 0x38]
	0x02241FF0 ADRP X9, 0x1EB2000
	0x02241FF4 LDR X9, [X9 + 0x6C0]
	0x02241FF8 LDR X21, [X8]
	0x02241FFC LDR X0, [X9]
	0x02242000 LDR W9, [X0 + 0xE0]
	0x02242004 CBNZ W9, 0x224200C
	0x02242008 BL 0x1C16DFC
	0x0224200C MOV X0, X21
	0x02242010 MOV X1, X31
	0x02242014 BL 0x338C698
	0x02242018 MOV X1, X0
	0x0224201C MOV X0, X20
	0x02242020 MOV X2, X31
	0x02242024 BL 0x3C30CE8
	0x02242028 LDR X8, [X19 + 0x38]
	0x0224202C MOV X20, X0
	0x02242030 LDR X19, [X8 + 0x8]
	0x02242034 LDRB W8, [X19 + 0x135]
	0x02242038 TBNZ X8, 0x0, 0x2242048
	0x0224203C MOV X0, X19
	0x02242040 BL 0x1C5C684
	0x02242044 MOV X19, X0
	0x02242048 CBZ X20, 0x2242068
	0x0224204C MOV X0, X20
	0x02242050 MOV X1, X19
	0x02242054 BL 0x1C16E00
	0x02242058 CBNZ X0, 0x224206C
	0x0224205C MOV X0, X20
	0x02242060 MOV X1, X19
	0x02242064 BL 0x1C171E0
	0x02242068 MOV X0, X31
	0x0224206C LDP X20, X19, [X31 + 0x10]
	0x02242070 LDP X30, X21, [X31], #0x20
	0x02242074 RET
	0x02242078 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X9, [X4+56]
	011 Move X25, X4
	012 Move X23, X3
	013 Move X22, X2
	014 Move X24, X1
	015 Move X19, X0
	016 Move X20, X8
	017 Compare X9, 0
	018 JumpIfNotEqual {30}
	019 Move X0, 0x1EDC000
	020 Move X0, [X0+1112]
	021 Call 0x1C17CF4
	022 Move X0, 0x1EDC000
	023 Move X0, [X0+1120]
	024 Call 0x1C17CF4
	025 Move X8, [X25+56]
	026 Compare X8, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X25
	029 Call 0x1C5D6E0
	030 Move X0, [X19+24]
	031 Compare X0, 0
	032 JumpIfEqual {102}
	033 Move X8, [X25+56]
	034 Move X1, [X8]
	035 Call 0x224213C, X0
	036 Move X8, [X19+32]
	037 Compare X8, 0
	038 JumpIfEqual {102}
	039 Move X9, [X19+24]
	040 Compare X9, 0
	041 JumpIfEqual {102}
	042 Move X9, [X25+56]
	043 Move W26, [X8+24]
	044 Move X21, X0
	045 Move X1, [X9+16]
	046 Call 0x224213C, X0
	047 Compare X21, 0
	048 JumpIfEqual {102}
	049 Move X8, [X25+56]
	050 Move X2, X0
	051 Move X0, X21
	052 Move W1, W26
	053 Move X5, [X8+32]
	054 Move X3, X24
	055 Move X4, X23
	056 Call 0x25C8A48, X0, X1, X2, X3, X4
	057 Move X8, [X21+112]
	058 Move [X22], X8
	059 Move X0, [X19+32]
	060 Compare X0, 0
	061 JumpIfEqual {102}
	062 Move X9, 0x1EDC000
	063 Move X9, [X9+1112]
	064 Move W10, [X0+28]
	065 Move X8, [X0+16]
	066 Move X9, [X9]
	067 Add W10, W10, 1
	068 Move [X0+28], W10
	069 Compare X8, 0
	070 JumpIfEqual {102}
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Move W11, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add W9, W10, 1
	075 Add X8, X8, X10
	076 Move [X0+24], W9
	077 Move [X8+32], X21
	078 Move X8, [X9+32]
	079 Move X1, X21
	080 Move X8, [X8+192]
	081 Move X2, [X8+112]
	082 Call List`1<Object>.AddWithResize, X0, X1
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move X2, [X19+16]
	085 Move [X20], V0
	086 Move [X20+8], V0
	087 Move X0, X20
	088 Move X1, X21
	089 Move X3, X19
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X24, [X31+32]
	095 Move X23, [X31+40]
	096 Move X26, [X31+16]
	097 Move X25, [X31+24]
	098 Move X4, X31
	099 Move X30, [X31+80]
	100 Call RenderGraphBuilder..ctor, X0, X1, X2, X3
	101 Return X0
	102 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphBuilder AddRenderPass(System.String passName, out PassData passData)

Disassembly:
	0x02241EA4 LDR X8, [X19 + 0x38]
	0x02241EA8 CBNZ X8, 0x2241EB8
	0x02241EAC MOV X0, X19
	0x02241EB0 BL 0x1C5C6E0
	0x02241EB4 LDR X8, [X19 + 0x38]
	0x02241EB8 ADRP X9, 0x1EB2000
	0x02241EBC LDR X9, [X9 + 0x6C0]
	0x02241EC0 LDR X20, [X8]
	0x02241EC4 LDR X0, [X9]
	0x02241EC8 LDR W9, [X0 + 0xE0]
	0x02241ECC CBNZ W9, 0x2241ED4
	0x02241ED0 BL 0x1C16DFC
	0x02241ED4 MOV X0, X20
	0x02241ED8 MOV X1, X31
	0x02241EDC BL 0x338C698
	0x02241EE0 MOV X1, X31
	0x02241EE4 BL 0x3C311F0
	0x02241EE8 LDR X8, [X19 + 0x38]
	0x02241EEC LDP X20, X19, [X31 + 0x10]
	0x02241EF0 LDR X1, [X8 + 0x8]
	0x02241EF4 LDR X30, [X31], #0x20
	0x02241EF8 B 0x2241D78
	0x02241EFC STP X30, X21, [X31 - 0x20]!
	0x02241F00 STP X20, X19, [X31 + 0x10]
	0x02241F04 LDR X8, [X1 + 0x38]
	0x02241F08 MOV X19, X1
	0x02241F0C MOV X20, X0
	0x02241F10 CBNZ X8, 0x2241F34
	0x02241F14 ADRP X0, 0x1EB2000
	0x02241F18 LDR X0, [X0 + 0x6C0]
	0x02241F1C BL 0x1C16CF4
	0x02241F20 LDR X8, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X9, [X3+56]
	009 Move X23, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move X19, X8
	014 Compare X9, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X23
	017 Call 0x1C5D6E0
	018 Move X0, X22
	019 Move X1, X21
	020 Move X2, X31
	021 Call RenderGraph.GetDefaultProfilingSampler, X0, X1
	022 Move X8, [X23+56]
	023 Move X3, X0
	024 Move X0, X22
	025 Move X1, X21
	026 Move X4, [X8+8]
	027 Add X8, X31, 0
	028 Move X2, X20
	029 Call 0x2241F24, X0, X1, X2, X3
	030 Move V1, [X31]
	031 Move V0, [X31+16]
	032 Move X22, [X31+48]
	033 Move X21, [X31+56]
	034 Move X30, [X31+32]
	035 Move X23, [X31+40]
	036 Move [X19], V1
	037 Move [X19+8], V0
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Add X31, X31, 80
	041 Return X0

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphExecution RecordAndExecute(in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphParameters parameters)

Disassembly:
	0x0398E78C MOVZ W8, 0x1
	0x0398E790 STRB W8, [X20 + 0xAC6]
	0x0398E794 STP X31, X31, [X31 + 0x8]
	0x0398E798 STR X31, [X31 + 0x18]
	0x0398E79C LDR X0, [X19 + 0x20]
	0x0398E7A0 CBZ X0, 0x398E840
	0x0398E7A4 ADRP X8, 0x7C2000
	0x0398E7A8 LDR X8, [X8 + 0xBB0]
	0x0398E7AC ADRP X21, 0x7C2000
	0x0398E7B0 ADRP X20, 0x7C2000
	0x0398E7B4 LDR X1, [X8]
	0x0398E7B8 LDR X21, [X21 + 0xB98]
	0x0398E7BC LDR X20, [X20 + 0xB90]
	0x0398E7C0 ADD X8, X31, 0x8
	0x0398E7C4 BL 0x301CB58
	0x0398E7C8 LDR X1, [X21]
	0x0398E7CC ADD X0, X31, 0x8
	0x0398E7D0 BL 0x2BC4350
	0x0398E7D4 TBZ X0, 0x0, 0x398E7F4
	0x0398E7D8 LDR X0, [X31 + 0x18]
	0x0398E7DC CBZ X0, 0x398E83C
	0x0398E7E0 LDR X8, [X0]
	0x0398E7E4 LDR X1, [X19 + 0x18]
	0x0398E7E8 LDP X9, X2, [X8 + 0x188]
	0x0398E7EC BLR X9
	0x0398E7F0 B 0x398E7C8
	0x0398E7F4 LDR X1, [X20]
	0x0398E7F8 ADD X0, X31, 0x8
	0x0398E7FC BL 0x2BC434C
	0x0398E800 LDR X8, [X19 + 0x20]
	0x0398E804 CBZ X8, 0x398E840
	0x0398E808 LDP W2, W9, [X8 + 0x18]
	0x0398E80C ADD W9, W9, 0x1
	0x0398E810 CMP W2, 0x1
	0x0398E814 STP W31, W9, [X8 + 0x18]
	0x0398E818 B.LT 0x398E82C
	0x0398E81C LDR X0, [X8 + 0x10]
	0x0398E820 MOV W1, W31
	0x0398E824 MOV X3, X31
	0x0398E828 BL 0x339FA34
	0x0398E82C LDP X20, X19, [X31 + 0x30]
	0x0398E830 LDP X30, X21, [X31 + 0x20]
	0x0398E834 ADD X31, X31, 0x40
	0x0398E838 RET
	0x0398E83C BL 0x1C16F20
	0x0398E840 BL 0x1C16F20
	0x0398E844 B 0x398E84C
	0x0398E848 B 0x398E84C
	0x0398E84C MOV X20, X0
	0x0398E850 CMP W1, 0x1
	0x0398E854 B.NE 0x398E888
	0x0398E858 MOV X0, X20
	0x0398E85C BL 0x3EB1AD0
	0x0398E860 LDR X21, [X0]
	0x0398E864 BL 0x3EB1AE0
	0x0398E868 ADRP X8, 0x7C2000
	0x0398E86C LDR X8, [X8 + 0xB90]
	0x0398E870 ADD X0, X31, 0x8
	0x0398E874 LDR X1, [X8]
	0x0398E878 BL 0x2BC434C
	0x0398E87C CBZ X21, 0x398E800
	0x0398E880 MOV X0, X21
	0x0398E884 BL 0x1C16F18
	0x0398E888 MOV X21, X31
	0x0398E88C B 0x398E894
	0x0398E890 MOV X20, X0
	0x0398E894 ADRP X8, 0x7C2000
	0x0398E898 LDR X8, [X8 + 0xB90]
	0x0398E89C LDR X1, [X8]
	0x0398E8A0 ADD X0, X31, 0x8
	0x0398E8A4 BL 0x2BC434C
	0x0398E8A8 CBNZ X21, 0x398E8B4
	0x0398E8AC MOV X0, X20
	0x0398E8B0 BL 0x1D2C690
	0x0398E8B4 MOV X0, X21
	0x0398E8B8 BL 0x1C16F18
	0x0398E8BC BL 0x1990590
	0x0398E8C0 STR X30, [X31 - 0x30]!
	0x0398E8C4 STP X22, X21, [X31 + 0x10]
	0x0398E8C8 STP X20, X19, [X31 + 0x20]
	0x0398E8CC ADRP X21, 0xA53000
	0x0398E8D0 LDRB W8, [X21 + 0xB22]
	0x0398E8D4 MOV W20, W1
	0x0398E8D8 MOV X19, X0
	0x0398E8DC TBNZ X8, 0x0, 0x398E900
	0x0398E8E0 ADRP X0, 0x7C2000
	0x0398E8E4 LDR X0, [X0 + 0xBB8]
	0x0398E8E8 BL 0x1C16CF4
	0x0398E8EC ADRP X0, 0x7C2000
	0x0398E8F0 LDR X0, [X0 + 0xBC0]
	0x0398E8F4 BL 0x1C16CF4
	0x0398E8F8 MOVZ W8, 0x1
	0x0398E8FC STRB W8, [X21 + 0xB22]
	0x0398E900 ADRP X21, 0x7C2000
	0x0398E904 LDR X21, [X21 + 0xBB8]
	0x0398E908 MOV X0, X19
	0x0398E90C BL 0x399A004
	0x0398E910 MOV X8, X31
	0x0398E914 MOVZ W9, 0x1
	0x0398E918 AND W20, W20, 0x1
	0x0398E91C LDR X10, [X19 + 0x10]
	0x0398E920 CBZ X10, 0x398E98C
	0x0398E924 MOV W22, W9
	0x0398E928 LDR W9, [X10 + 0x18]
	0x0398E92C CMP X8, X9
	0x0398E930 B.CS 0x398E990
	0x0398E934 ADD X8, X10, X8, 0x3, LSL
	0x0398E938 LDR X0, [X8 + 0x20]
	0x0398E93C CBZ X0, 0x398E98C
	0x0398E940 LDR W2, [X19 + 0x38]
	0x0398E944 MOV W1, W20
	0x0398E948 BL 0x399A1AC
	0x0398E94C MOV W9, W31
	0x0398E950 MOVZ W8, 0x1
	0x0398E954 TBNZ X22, 0x0, 0x398E91C
	0x0398E958 LDR X0, [X19 + 0x18]
	0x0398E95C CBZ X0, 0x398E98C
	0x0398E960 LDR X1, [X21]
	0x0398E964 BL 0x2B40314
	0x0398E968 LDR X8, [X19 + 0x48]
	0x0398E96C CBZ X8, 0x398E98C
	0x0398E970 LDR W9, [X8 + 0x1C]
	0x0398E974 LDP X20, X19, [X31 + 0x20]
	0x0398E978 LDP X22, X21, [X31 + 0x10]
	0x0398E97C ADD W9, W9, 0x1
	0x0398E980 STP W31, W9, [X8 + 0x18]
	0x0398E984 LDR X30, [X31], #0x30
	0x0398E988 RET
	0x0398E98C BL 0x1C16F20
	0x0398E990 BL 0x1C16F28
	0x0398E994 STR X30, [X31 - 0x10]!
	0x0398E998 LDR X8, [X0 + 0x58]
	0x0398E99C CBZ X8, 0x398E9B0
	0x0398E9A0 STP X31, X31, [X8 + 0x18]
	0x0398E9A4 STR X31, [X8 + 0x28]
	0x0398E9A8 LDR X30, [X31], #0x10
	0x0398E9AC RET
	0x0398E9B0 BL 0x1C16F20
	0x0398E9B4 STP X30, X19, [X31 - 0x10]!
	0x0398E9B8 LDR X8, [X0 + 0x30]
	0x0398E9BC CBZ X8, 0x398E9F0
	0x0398E9C0 LDRB W8, [X8 + 0x23]
	0x0398E9C4 CBZ W8, 0x398E9E8
	0x0398E9C8 MOV X19, X0
	0x0398E9CC BL 0x3992CD0
	0x0398E9D0 LDR W8, [X19 + 0x68]
	0x0398E9D4 MOV X1, X0
	0x0398E9D8 MOV X0, X19
	0x0398E9DC SUB W2, W8, 0x1
	0x0398E9E0 LDP X30, X19, [X31], #0x10
	0x0398E9E4 B 0x3993778
	0x0398E9E8 LDP X30, X19, [X31], #0x10
	0x0398E9EC RET

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xA54000
	011 Move X21, 0x7C3000
	012 Move W8, [X22+2722]
	013 Move X21, [X21+2776]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x7C3000
	021 Move X0, [X0+2784]
	022 Call 0x1C17CF4
	023 Move X0, 0x7C3000
	024 Move X0, [X0+2792]
	025 Call 0x1C17CF4
	026 Move X0, 0x76D000
	027 Move X0, [X0+2136]
	028 Call 0x1C17CF4
	029 Move X0, 0x76A000
	030 Move X0, [X0+2928]
	031 Call 0x1C17CF4
	032 Move X0, 0x767000
	033 Move X0, [X0+3632]
	034 Call 0x1C17CF4
	035 Move X0, 0x7C3000
	036 Move X0, [X0+2776]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2722], W8
	040 Move W8, [X20+8]
	041 Move W9, 1
	042 Move W1, [X19+144]
	043 Move X0, [X19+16]
	044 Move [X19+148], W8
	045 Move X8, [X20]
	046 Move X10, [X21]
	047 Move [X19+152], W9
	048 Add W9, W1, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move [X19+160], X8
	052 Move W8, [X20+12]
	053 Move [X19+144], W9
	054 Move [X19+168], W8
	055 Compare X0, 0
	056 JumpIfEqual {175}
	057 Call RenderGraphResourceRegistry.BeginRenderGraph, X0, X1
	058 Move X8, [X19+48]
	059 Compare X8, 0
	060 JumpIfEqual {175}
	061 Move W8, [X8+36]
	062 Compare W8, 0
	063 JumpIfEqual {69}
	064 Move X0, [X19+56]
	065 Compare X0, 0
	066 JumpIfEqual {175}
	067 Move X1, [X19+160]
	068 Call RenderGraphLogger.Initialize, X0, X1
	069 Move X0, [X19+64]
	070 Compare X0, 0
	071 JumpIfEqual {175}
	072 Move X1, X19
	073 Call RenderGraphDefaultResources.InitializeForRendering, X0, X1
	074 Move X8, [X19+88]
	075 Compare X8, 0
	076 JumpIfEqual {175}
	077 Move X9, [X20+24]
	078 Move [X8+24], X9
	079 Move X9, [X20+16]
	080 Move [X8+16], X9
	081 Move X8, [X19+88]
	082 Compare X8, 0
	083 JumpIfEqual {175}
	084 Move X9, [X19+24]
	085 Move [X8+32], X9
	086 Move X9, [X19+64]
	087 Move [X8+40], X9
	088 Move X8, [X19+48]
	089 Compare X8, 0
	090 JumpIfEqual {175}
	091 Move W8, [X8+35]
	092 Compare W8, 0
	093 JumpIfEqual {164}
	094 Move X0, X19
	095 Call RenderGraph.LogFrameInformation, X0
	096 Move X20, [X19+128]
	097 Compare X20, 0
	098 JumpIfEqual {175}
	099 Move X8, 0x7C3000
	100 Move X8, [X8+2792]
	101 Move X23, 0x7C3000
	102 Move X21, 0x767000
	103 Move X22, 0x76A000
	104 Move X1, [X8]
	105 Move X23, [X23+2784]
	106 Move X21, [X21+3632]
	107 Move X22, [X22+2928]
	108 Move X0, X20
	109 Call DynamicArray`1<CompiledPassInfo>.get_capacity, X0
	110 Move X3, [X23]
	111 Move W1, W0
	112 Move X0, X20
	113 Move W2, W31
	114 Call DynamicArray`1<CompiledPassInfo>.Resize, X0, X1, X2
	115 Move X24, [X19+112]
	116 Move W23, W31
	117 Move [X19+104], W31
	118 Compare X24, 0
	119 JumpIfEqual {175}
	120 Move W8, [X24+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X25, W23
	123 Add X26, X24, X25
	124 Add X26, X26, 32
	125 Move X8, [X26]
	126 Compare X8, 0
	127 JumpIfNotEqual {147}
	128 Move X0, [X21]
	129 Call 0x1C17F10
	130 Move X1, [X22]
	131 Move X20, X0
	132 Call List`1<Int32>..ctor, X0
	133 Compare X20, 0
	134 JumpIfEqual {141}
	135 Move X8, [X24]
	136 Move X0, X20
	137 Move X1, [X8+64]
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {177}
	141 Move W8, [X24+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X26], X20
	144 Move X24, [X19+112]
	145 Compare X24, 0
	146 JumpIfEqual {175}
	147 Move W8, [X24+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X8, X24, X25
	150 Move X8, [X8+32]
	151 Compare X8, 0
	152 JumpIfEqual {175}
	153 Move W9, [X8+28]
	154 Add W23, W23, 1
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add W9, W9, 1
	157 Move [X8+24], W31
	158 Move [X8+28], W9
	159 Move X0, [X19+16]
	160 Compare X0, 0
	161 JumpIfEqual {175}
	162 Move W1, [X19+148]
	163 Call RenderGraphResourceRegistry.BeginExecute, X0, X1
	164 Move X0, X19
	165 Move X20, [X31+64]
	166 Move X19, [X31+72]
	167 Move X22, [X31+48]
	168 Move X21, [X31+56]
	169 Move X24, [X31+32]
	170 Move X23, [X31+40]
	171 Move X26, [X31+16]
	172 Move X25, [X31+24]
	173 Move X30, [X31+80]
	174 Return X0
	175 Call 0x1C17F20
	176 Call 0x1C17F28
	177 Call 0x1C17F44
	178 Move X1, X31
	179 Call 0x1C17DEC

Method: System.Void Execute()

Disassembly:
	0x0398B80C BL 0x1C16CF4
	0x0398B810 ADRP X0, 0x7C5000
	0x0398B814 LDR X0, [X0 + 0x928]
	0x0398B818 BL 0x1C16CF4
	0x0398B81C ADRP X0, 0x7C5000
	0x0398B820 LDR X0, [X0 + 0x930]
	0x0398B824 BL 0x1C16CF4
	0x0398B828 ADRP X0, 0x7C5000
	0x0398B82C LDR X0, [X0 + 0x938]
	0x0398B830 BL 0x1C16CF4
	0x0398B834 ADRP X0, 0x7C3000
	0x0398B838 LDR X0, [X0 + 0xE28]
	0x0398B83C BL 0x1C16CF4
	0x0398B840 ADRP X0, 0x7C5000
	0x0398B844 LDR X0, [X0 + 0x940]
	0x0398B848 BL 0x1C16CF4
	0x0398B84C ADRP X0, 0x7C5000
	0x0398B850 LDR X0, [X0 + 0x8E8]
	0x0398B854 BL 0x1C16CF4
	0x0398B858 ADRP X0, 0x7C5000
	0x0398B85C LDR X0, [X0 + 0x8D8]
	0x0398B860 BL 0x1C16CF4
	0x0398B864 ADRP X0, 0x7C5000
	0x0398B868 LDR X0, [X0 + 0x8D0]
	0x0398B86C BL 0x1C16CF4
	0x0398B870 ADRP X0, 0x7C5000
	0x0398B874 LDR X0, [X0 + 0x8E0]
	0x0398B878 BL 0x1C16CF4
	0x0398B87C ADRP X0, 0x7C5000
	0x0398B880 LDR X0, [X0 + 0x948]
	0x0398B884 BL 0x1C16CF4
	0x0398B888 ADRP X0, 0x7C5000
	0x0398B88C LDR X0, [X0 + 0x8F0]
	0x0398B890 BL 0x1C16CF4
	0x0398B894 ADRP X0, 0x7C5000
	0x0398B898 LDR X0, [X0 + 0x950]
	0x0398B89C BL 0x1C16CF4
	0x0398B8A0 ADRP X0, 0x7C5000
	0x0398B8A4 LDR X0, [X0 + 0x958]
	0x0398B8A8 BL 0x1C16CF4
	0x0398B8AC ADRP X0, 0x7C5000
	0x0398B8B0 LDR X0, [X0 + 0x8C8]
	0x0398B8B4 BL 0x1C16CF4
	0x0398B8B8 ADRP X0, 0x7C5000
	0x0398B8BC LDR X0, [X0 + 0x960]
	0x0398B8C0 BL 0x1C16CF4
	0x0398B8C4 ADRP X0, 0x7C5000
	0x0398B8C8 LDR X0, [X0 + 0x8C0]
	0x0398B8CC BL 0x1C16CF4
	0x0398B8D0 ADRP X0, 0x7C3000
	0x0398B8D4 LDR X0, [X0 + 0xAD0]
	0x0398B8D8 BL 0x1C16CF4
	0x0398B8DC ADRP X0, 0x7C3000
	0x0398B8E0 LDR X0, [X0 + 0xAD8]
	0x0398B8E4 BL 0x1C16CF4
	0x0398B8E8 ADRP X0, 0x7C5000
	0x0398B8EC LDR X0, [X0 + 0x968]
	0x0398B8F0 BL 0x1C16CF4
	0x0398B8F4 MOVZ W8, 0x1
	0x0398B8F8 STRB W8, [X24 + 0xA9C]
	0x0398B8FC ADRP X27, 0x7C5000
	0x0398B900 LDR X27, [X27 + 0x930]
	0x0398B904 LDR X0, [X21]
	0x0398B908 ADRP X29, 0x7C5000
	0x0398B90C ADRP X24, 0x7C5000
	0x0398B910 LDR X29, [X29 + 0x920]
	0x0398B914 LDR X24, [X24 + 0x8C0]
	0x0398B918 BL 0x1C16F10
	0x0398B91C MOV X21, X0
	0x0398B920 BL 0x398BC2C
	0x0398B924 STR X21, [X19 + 0x18]
	0x0398B928 LDR X0, [X26]
	0x0398B92C BL 0x1C16F10
	0x0398B930 LDR X2, [X25]
	0x0398B934 MOVZ W1, 0x40
	0x0398B938 MOV X21, X0
	0x0398B93C BL 0x301B830
	0x0398B940 STR X21, [X19 + 0x20]
	0x0398B944 LDR X0, [X22]
	0x0398B948 BL 0x1C16F10
	0x0398B94C LDR X2, [X23]
	0x0398B950 MOVZ W1, 0x20
	0x0398B954 MOV X21, X0
	0x0398B958 BL 0x30467F8
	0x0398B95C STR X21, [X19 + 0x28]
	0x0398B960 LDR X0, [X28]
	0x0398B964 BL 0x1C16F10
	0x0398B968 MOV X1, X31
	0x0398B96C MOV X21, X0
	0x0398B970 BL 0x33BDD8C
	0x0398B974 STR X21, [X19 + 0x30]
	0x0398B978 ADRP X8, 0x7C5000
	0x0398B97C LDR X8, [X8 + 0x958]
	0x0398B980 LDR X0, [X8]
	0x0398B984 BL 0x1C16F10
	0x0398B988 MOV X21, X0
	0x0398B98C BL 0x398BD38
	0x0398B990 STR X21, [X19 + 0x38]
	0x0398B994 ADRP X8, 0x7C5000
	0x0398B998 LDR X8, [X8 + 0x950]
	0x0398B99C LDR X0, [X8]
	0x0398B9A0 BL 0x1C16F10
	0x0398B9A4 MOV X21, X0
	0x0398B9A8 BL 0x398BDB4
	0x0398B9AC STR X21, [X19 + 0x40]
	0x0398B9B0 ADRP X8, 0x7C5000
	0x0398B9B4 LDR X8, [X8 + 0x908]
	0x0398B9B8 LDR X0, [X8]
	0x0398B9BC BL 0x1C16F10
	0x0398B9C0 ADRP X8, 0x7C5000
	0x0398B9C4 LDR X8, [X8 + 0x8F8]
	0x0398B9C8 MOV X21, X0
	0x0398B9CC LDR X1, [X8]
	0x0398B9D0 BL 0x2A12DD4
	0x0398B9D4 STR X21, [X19 + 0x48]
	0x0398B9D8 ADRP X8, 0x7C5000
	0x0398B9DC LDR X8, [X8 + 0x948]
	0x0398B9E0 LDR X0, [X8]
	0x0398B9E4 BL 0x1C16F10
	0x0398B9E8 MOV X1, X31
	0x0398B9EC MOV X21, X0
	0x0398B9F0 BL 0x33BDD8C
	0x0398B9F4 STR X21, [X19 + 0x58]
	0x0398B9F8 ADRP X8, 0x7C3000
	0x0398B9FC LDR X8, [X8 + 0xE28]
	0x0398BA00 MOVZ W1, 0x2
	0x0398BA04 LDR X0, [X8]
	0x0398BA08 BL 0x1C16D6C
	0x0398BA0C STR X0, [X19 + 0x70]
	0x0398BA10 ADRP X8, 0x7C5000
	0x0398BA14 LDR X8, [X8 + 0x918]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X9, X31, 24
	007 Move [X0+80], W31
	008 Move [X31], X31
	009 Move [X31+8], X9
	010 Move X9, [X0+88]
	011 Compare X9, 0
	012 JumpIfEqual {42}
	013 Move X9, [X9+24]
	014 Compare X9, 0
	015 JumpIfEqual {43}
	016 Move X9, [X0+48]
	017 Move X8, X0
	018 Compare X9, 0
	019 JumpIfEqual {61}
	020 Move W9, [X9+35]
	021 Compare W9, 0
	022 JumpIfNotEqual {35}
	023 Move X0, X8
	024 Call RenderGraph.LogFrameInformation, X0
	025 Move X0, [X31+24]
	026 Call RenderGraph.CompileRenderGraph, X0
	027 Move X8, [X31+24]
	028 Move X0, [X8+16]
	029 Compare X0, 0
	030 JumpIfEqual {62}
	031 Move W1, [X8+148]
	032 Call RenderGraphResourceRegistry.BeginExecute, X0, X1
	033 Move X0, [X31+24]
	034 Call RenderGraph.ExecuteRenderGraph, X0
	035 Add X0, X31, 0
	036 Call 0x1BF8AA8
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Add X31, X31, 48
	041 Return 
	042 Call 0x1C17F20
	043 Move X0, 0x769000
	044 Move X0, [X0+1456]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X19, X0
	048 Move X0, 0x7C6000
	049 Move X0, [X0+1840]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Move X2, X31
	054 Call InvalidOperationException..ctor, X0, X1
	055 Move X0, 0x7C6000
	056 Move X0, [X0+1848]
	057 Call 0x1C17D08
	058 Move X1, X0
	059 Move X0, X19
	060 Call 0x1C17DEC
	061 Call 0x1C17F20
	062 Call 0x1C17F20
	063 Move X19, X0
	064 Move X19, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X19
	067 Call 0x3EB2AD0
	068 Move X19, X0
	069 Move X0, 0x769000
	070 Move X0, [X0+2000]
	071 Call 0x1C17D08
	072 Move X8, [X19]
	073 Move X1, [X8]
	074 Call 0x1C18270
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {110}
	079 Move X19, [X19]
	080 Call 0x3EB2AE0
	081 Move X0, 0x769000
	082 Move X0, [X0+2600]
	083 Call 0x1C17D08
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, 0x7C6000
	089 Move X0, [X0+1856]
	090 Call 0x1C17D08
	091 Move X1, X31
	092 Call Debug.LogError, X0
	093 Move X8, [X31+24]
	094 Move W9, [X8+80]
	095 Compare W9, 0
	096 JumpIfNotEqual {108}
	097 Move X0, 0x769000
	098 Move X0, [X0+2600]
	099 Call 0x1C17D08
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Move X1, X31
	106 Call Debug.LogException, X0
	107 Move X8, [X31+24]
	108 Move W9, 1
	109 Move [X8+80], W9
	110 Move W0, 8
	111 Call 0x3EB2AF0
	112 Move X8, [X19]
	113 Move [X0], X8
	114 Move X1, 0x52A000
	115 Add X1, X1, 3672
	116 Move X2, X31
	117 Call 0x3EB2B00
	118 Move X20, X1
	119 Move X19, X0
	120 Call 0x3EB2AE0
	121 Move W1, W20
	122 Move X19, X0
	123 Move W8, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X19
	126 Call 0x3EB2AD0
	127 Move X8, [X0]
	128 Move [X31], X8
	129 Call 0x3EB2AE0
	130 Move X19, X0
	131 Add X0, X31, 0
	132 Call 0x1BF8AA8
	133 Move X0, X19
	134 Call 0x1D2D690
	135 Call 0x1991590

Method: System.Void BeginProfilingSampler(UnityEngine.Rendering.ProfilingSampler sampler)

Disassembly:
	0x0398F204 BL 0x1C16F10
	0x0398F208 ADRP X8, 0x768000
	0x0398F20C LDR X8, [X8 + 0xB70]
	0x0398F210 MOV X21, X0
	0x0398F214 LDR X1, [X8]
	0x0398F218 BL 0x2FDBF14
	0x0398F21C STR X21, [X19]
	0x0398F220 LDR X20, [X19 + 0x8]
	0x0398F224 CBNZ X20, 0x398F254
	0x0398F228 ADRP X8, 0x765000
	0x0398F22C LDR X8, [X8 + 0xE30]
	0x0398F230 LDR X0, [X8]
	0x0398F234 BL 0x1C16F10
	0x0398F238 ADRP X8, 0x768000
	0x0398F23C LDR X8, [X8 + 0xB70]
	0x0398F240 MOV X20, X0
	0x0398F244 LDR X1, [X8]
	0x0398F248 BL 0x2FDBF14
	0x0398F24C LDR X21, [X19]
	0x0398F250 STR X20, [X19 + 0x8]
	0x0398F254 CBZ X21, 0x398F288
	0x0398F258 LDR W8, [X21 + 0x1C]
	0x0398F25C ADD W8, W8, 0x1
	0x0398F260 STP W31, W8, [X21 + 0x18]
	0x0398F264 CBZ X20, 0x398F288
	0x0398F268 LDR W8, [X20 + 0x1C]
	0x0398F26C ADD W8, W8, 0x1
	0x0398F270 STP W31, W8, [X20 + 0x18]
	0x0398F274 STR W31, [X19 + 0x10]
	0x0398F278 STRB W31, [X19 + 0x14]
	0x0398F27C LDP X20, X19, [X31 + 0x10]
	0x0398F280 LDP X30, X21, [X31], #0x20
	0x0398F284 RET
	0x0398F288 BL 0x1C16F20
	0x0398F28C STP X30, X23, [X31 - 0x30]!
	0x0398F290 STP X22, X21, [X31 + 0x10]
	0x0398F294 STP X20, X19, [X31 + 0x20]
	0x0398F298 ADRP X20, 0xA52000
	0x0398F29C LDRB W8, [X20 + 0xAAF]
	0x0398F2A0 MOV X19, X0
	0x0398F2A4 TBNZ X8, 0x0, 0x398F2EC
	0x0398F2A8 ADRP X0, 0x7C1000
	0x0398F2AC LDR X0, [X0 + 0xAE0]
	0x0398F2B0 BL 0x1C16CF4
	0x0398F2B4 ADRP X0, 0x7C1000
	0x0398F2B8 LDR X0, [X0 + 0xB28]
	0x0398F2BC BL 0x1C16CF4
	0x0398F2C0 ADRP X0, 0x7C1000
	0x0398F2C4 LDR X0, [X0 + 0xB30]
	0x0398F2C8 BL 0x1C16CF4
	0x0398F2CC ADRP X0, 0x78D000
	0x0398F2D0 LDR X0, [X0 + 0x460]
	0x0398F2D4 BL 0x1C16CF4
	0x0398F2D8 ADRP X0, 0x7C1000
	0x0398F2DC LDR X0, [X0 + 0xBF0]
	0x0398F2E0 BL 0x1C16CF4
	0x0398F2E4 MOVZ W8, 0x1
	0x0398F2E8 STRB W8, [X20 + 0xAAF]
	0x0398F2EC LDR X8, [X19 + 0x78]
	0x0398F2F0 CBZ X8, 0x398F3E0
	0x0398F2F4 LDR W9, [X8 + 0x18]
	0x0398F2F8 CBZ W9, 0x398F3F4
	0x0398F2FC LDR X0, [X19 + 0x10]
	0x0398F300 CBZ X0, 0x398F3E0
	0x0398F304 LDR X20, [X8 + 0x20]
	0x0398F308 MOV W1, W31
	0x0398F30C BL 0x3999A4C
	0x0398F310 MOV X1, X20
	0x0398F314 MOV W2, W0
	0x0398F318 BL 0x398F0F8
	0x0398F31C LDR X8, [X19 + 0x78]
	0x0398F320 CBZ X8, 0x398F3E0
	0x0398F324 LDR W9, [X8 + 0x18]
	0x0398F328 CMP W9, 0x1
	0x0398F32C B.LS 0x398F3F4
	0x0398F330 LDR X0, [X19 + 0x10]
	0x0398F334 CBZ X0, 0x398F3E0
	0x0398F338 LDR X20, [X8 + 0x28]
	0x0398F33C MOVZ W1, 0x1
	0x0398F340 BL 0x3999A4C
	0x0398F344 MOV X1, X20
	0x0398F348 MOV W2, W0
	0x0398F34C BL 0x398F0F8
	0x0398F350 LDR X8, [X19 + 0x20]
	0x0398F354 CBZ X8, 0x398F3E0
	0x0398F358 LDR X0, [X19 + 0x80]
	0x0398F35C CBZ X0, 0x398F3E0
	0x0398F360 ADRP X9, 0x7C1000
	0x0398F364 LDR X9, [X9 + 0xAE0]
	0x0398F368 LDR W1, [X8 + 0x18]
	0x0398F36C MOV W2, W31
	0x0398F370 LDR X3, [X9]
	0x0398F374 BL 0x2B4255C
	0x0398F378 LDR X0, [X19 + 0x80]
	0x0398F37C CBZ X0, 0x398F3E0
	0x0398F380 ADRP X22, 0x7C1000
	0x0398F384 ADRP X23, 0x7C1000
	0x0398F388 LDR X22, [X22 + 0xB28]
	0x0398F38C LDR X23, [X23 + 0xBF0]
	0x0398F390 MOV W20, W31
	0x0398F394 LDR W8, [X0 + 0x18]
	0x0398F398 CMP W20, W8
	0x0398F39C B.GE 0x398F3E4
	0x0398F3A0 LDR X2, [X22]
	0x0398F3A4 MOV W1, W20
	0x0398F3A8 BL 0x2B4260C
	0x0398F3AC LDR X8, [X19 + 0x20]
	0x0398F3B0 CBZ X8, 0x398F3E0
	0x0398F3B4 LDR X2, [X23]
	0x0398F3B8 MOV X21, X0
	0x0398F3BC MOV X0, X8
	0x0398F3C0 MOV W1, W20
	0x0398F3C4 BL 0x301BCCC
	0x0398F3C8 MOV X1, X0
	0x0398F3CC MOV X0, X21
	0x0398F3D0 BL 0x398F408
	0x0398F3D4 LDR X0, [X19 + 0x80]
	0x0398F3D8 ADD W20, W20, 0x1
	0x0398F3DC CBNZ X0, 0x398F394
	0x0398F3E0 BL 0x1C16F20
	0x0398F3E4 LDP X20, X19, [X31 + 0x20]
	0x0398F3E8 LDP X22, X21, [X31 + 0x10]
	0x0398F3EC LDP X30, X23, [X31], #0x30
	0x0398F3F0 RET
	0x0398F3F4 BL 0x1C16F28
	0x0398F3F8 MOV W1, W31
	0x0398F3FC B 0x3999A4C
	0x0398F400 MOVZ W1, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X23, 0xA53000
	009 Move X21, 0x7C2000
	010 Move X22, 0x7C2000
	011 Move W8, [X23+2723]
	012 Move X21, [X21+2872]
	013 Move X22, [X22+2880]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x7C2000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move X0, 0x7C2000
	024 Move X0, [X0+2896]
	025 Call 0x1C17CF4
	026 Move X0, 0x7C2000
	027 Move X0, [X0+2880]
	028 Call 0x1C17CF4
	029 Move X0, 0x7C2000
	030 Move X0, [X0+2904]
	031 Call 0x1C17CF4
	032 Move X0, 0x7C2000
	033 Move X0, [X0+2912]
	034 Call 0x1C17CF4
	035 Move X0, 0x7C2000
	036 Move X0, [X0+2872]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2723], W8
	040 Move X1, [X21]
	041 Move X4, [X22]
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Add X8, X31, 8
	044 Add X2, X31, 40
	045 Move X0, X20
	046 Move X3, X31
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+40], X31
	050 Call 0x2241F24, X0, X1, X2, X3
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+40]
	054 Move [X31+48], V0
	055 Move [X31+56], V1
	056 Compare X8, 0
	057 JumpIfEqual {116}
	058 Move [X8+16], X19
	059 Move X8, [X31+48]
	060 Compare X8, 0
	061 JumpIfEqual {117}
	062 Move X21, 0x7C2000
	063 Move X21, [X21+2912]
	064 Move [X8+41], W31
	065 Move [X8+72], W31
	066 Move X8, [X21]
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {73}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X8, [X21]
	073 Move X9, [X8+184]
	074 Move X19, [X9+8]
	075 Compare X19, 0
	076 JumpIfNotEqual {99}
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {83}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, [X21]
	083 Move X9, 0x7C2000
	084 Move X8, [X8+184]
	085 Move X9, [X9+2888]
	086 Move X20, [X8]
	087 Move X0, [X9]
	088 Call 0x1C17F10
	089 Move X8, 0x7C2000
	090 Move X8, [X8+2904]
	091 Move X19, X0
	092 Move X2, [X8]
	093 Move X1, X20
	094 Move X3, X31
	095 Call 0x25C88AC, X0, X1, X2
	096 Move X8, [X21]
	097 Move X8, [X8+184]
	098 Move [X8+8], X19
	099 Move X8, 0x7C2000
	100 Move X8, [X8+2896]
	101 Move X2, [X8]
	102 Add X0, X31, 48
	103 Move X1, X19
	104 Call 0x224207C, X0, X1
	105 Add X0, X31, 48
	106 Move W1, W31
	107 Call RenderGraphBuilder.Dispose, X0, X1
	108 Move X20, [X31+112]
	109 Move X19, [X31+120]
	110 Move X22, [X31+96]
	111 Move X21, [X31+104]
	112 Move X30, [X31+80]
	113 Move X23, [X31+88]
	114 Add X31, X31, 128
	115 Return 
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Move X19, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X19
	121 Call 0x3EB2AD0
	122 Move X20, [X0]
	123 Call 0x3EB2AE0
	124 Add X0, X31, 48
	125 Move W1, W31
	126 Call RenderGraphBuilder.Dispose, X0, X1
	127 Compare X20, 0
	128 JumpIfEqual {108}
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Move X20, X31
	132 Move X19, X0
	133 Add X0, X31, 48
	134 Move W1, W31
	135 Call RenderGraphBuilder.Dispose, X0, X1
	136 Compare X20, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X19
	139 Call 0x1D2D690
	140 Move X0, X20
	141 Call 0x1C17F18
	142 Call 0x1991590

Method: System.Void EndProfilingSampler(UnityEngine.Rendering.ProfilingSampler sampler)

Disassembly:
	0x0398F444 ADRP X0, 0x768000
	0x0398F448 LDR X0, [X0 + 0xB70]
	0x0398F44C BL 0x1C16CF4
	0x0398F450 ADRP X0, 0x765000
	0x0398F454 LDR X0, [X0 + 0xE30]
	0x0398F458 BL 0x1C16CF4
	0x0398F45C MOVZ W8, 0x1
	0x0398F460 STRB W8, [X21 + 0xAD2]
	0x0398F464 STR X20, [X19]
	0x0398F468 CBZ X20, 0x398F5F4
	0x0398F46C LDRB W9, [X20 + 0x28]
	0x0398F470 LDR X8, [X19 + 0x8]
	0x0398F474 STRB W9, [X19 + 0x40]
	0x0398F478 CBNZ X8, 0x398F564
	0x0398F47C ADRP X20, 0x7BF000
	0x0398F480 LDR X20, [X20 + 0xE28]
	0x0398F484 MOVZ W1, 0x2
	0x0398F488 LDR X0, [X20]
	0x0398F48C BL 0x1C16D6C
	0x0398F490 STR X0, [X19 + 0x8]
	0x0398F494 LDR X0, [X20]
	0x0398F498 MOVZ W1, 0x2
	0x0398F49C BL 0x1C16D6C
	0x0398F4A0 STR X0, [X19 + 0x10]
	0x0398F4A4 ADRP X21, 0x765000
	0x0398F4A8 ADRP X23, 0x768000
	0x0398F4AC LDR X21, [X21 + 0xE30]
	0x0398F4B0 LDR X23, [X23 + 0xB70]
	0x0398F4B4 MOV X22, X31
	0x0398F4B8 MOVZ W8, 0x1
	0x0398F4BC LDR X0, [X21]
	0x0398F4C0 LDR X25, [X19 + 0x8]
	0x0398F4C4 MOV W24, W8
	0x0398F4C8 BL 0x1C16F10
	0x0398F4CC LDR X1, [X23]
	0x0398F4D0 MOV X20, X0
	0x0398F4D4 BL 0x2FDBF14
	0x0398F4D8 CBZ X25, 0x398F5F4
	0x0398F4DC CBZ X20, 0x398F4F4
	0x0398F4E0 LDR X8, [X25]
	0x0398F4E4 MOV X0, X20
	0x0398F4E8 LDR X1, [X8 + 0x40]
	0x0398F4EC BL 0x1C16E00
	0x0398F4F0 CBZ X0, 0x398F5FC
	0x0398F4F4 LDR W8, [X25 + 0x18]
	0x0398F4F8 CMP X22, X8
	0x0398F4FC B.CS 0x398F5F8
	0x0398F500 ADD X8, X25, X22, 0x3, LSL
	0x0398F504 STR X20, [X8 + 0x20]
	0x0398F508 LDR X0, [X21]
	0x0398F50C LDR X25, [X19 + 0x10]
	0x0398F510 BL 0x1C16F10
	0x0398F514 LDR X1, [X23]
	0x0398F518 MOV X20, X0
	0x0398F51C BL 0x2FDBF14
	0x0398F520 CBZ X25, 0x398F5F4
	0x0398F524 CBZ X20, 0x398F53C
	0x0398F528 LDR X8, [X25]
	0x0398F52C MOV X0, X20
	0x0398F530 LDR X1, [X8 + 0x40]
	0x0398F534 BL 0x1C16E00
	0x0398F538 CBZ X0, 0x398F5FC
	0x0398F53C LDR W8, [X25 + 0x18]
	0x0398F540 CMP X22, X8
	0x0398F544 B.CS 0x398F5F8
	0x0398F548 MOV W8, W31
	0x0398F54C ADD X9, X25, X22, 0x3, LSL
	0x0398F550 MOVZ W22, 0x1
	0x0398F554 STR X20, [X9 + 0x20]
	0x0398F558 TBNZ X24, 0x0, 0x398F4BC
	0x0398F55C LDR X8, [X19 + 0x8]
	0x0398F560 CBZ X8, 0x398F5F4
	0x0398F564 LDR W9, [X8 + 0x18]
	0x0398F568 MOV X10, X31
	0x0398F56C MOVZ W12, 0x1
	0x0398F570 CMP X10, X9
	0x0398F574 B.CS 0x398F5F8
	0x0398F578 MOV W11, W12
	0x0398F57C ADD X12, X8, X10, 0x3, LSL
	0x0398F580 LDR X12, [X12 + 0x20]
	0x0398F584 CBZ X12, 0x398F5F4
	0x0398F588 LDR W13, [X12 + 0x1C]
	0x0398F58C ADD W13, W13, 0x1
	0x0398F590 STP W31, W13, [X12 + 0x18]
	0x0398F594 LDR X12, [X19 + 0x10]
	0x0398F598 CBZ X12, 0x398F5F4
	0x0398F59C LDR W13, [X12 + 0x18]
	0x0398F5A0 CMP X10, X13
	0x0398F5A4 B.CS 0x398F5F8
	0x0398F5A8 ADD X10, X12, X10, 0x3, LSL
	0x0398F5AC LDR X10, [X10 + 0x20]
	0x0398F5B0 CBZ X10, 0x398F5F4
	0x0398F5B4 LDR W13, [X10 + 0x1C]
	0x0398F5B8 MOV W12, W31
	0x0398F5BC ADD W13, W13, 0x1
	0x0398F5C0 STP W31, W13, [X10 + 0x18]
	0x0398F5C4 MOVZ W10, 0x1
	0x0398F5C8 TBNZ X11, 0x0, 0x398F570
	0x0398F5CC MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x0398F5D0 STUR W31, [X19 + 0x1B]
	0x0398F5D4 STR W31, [X19 + 0x18]
	0x0398F5D8 STR D0, [X19 + 0x20]
	0x0398F5DC STRB W31, [X19 + 0x28]
	0x0398F5E0 LDP X20, X19, [X31 + 0x30]
	0x0398F5E4 LDP X22, X21, [X31 + 0x20]
	0x0398F5E8 LDP X24, X23, [X31 + 0x10]
	0x0398F5EC LDP X30, X25, [X31], #0x40
	0x0398F5F0 RET
	0x0398F5F4 BL 0x1C16F20
	0x0398F5F8 BL 0x1C16F28
	0x0398F5FC BL 0x1C16F44
	0x0398F600 MOV X1, X31
	0x0398F604 BL 0x1C16DEC
	0x0398F608 SUB X31, X31, 0xB0
	0x0398F60C STP X29, X30, [X31 + 0x50]
	0x0398F610 STP X28, X27, [X31 + 0x60]
	0x0398F614 STP X26, X25, [X31 + 0x70]
	0x0398F618 STP X24, X23, [X31 + 0x80]
	0x0398F61C STP X22, X21, [X31 + 0x90]
	0x0398F620 STP X20, X19, [X31 + 0xA0]
	0x0398F624 ADRP X20, 0xA52000
	0x0398F628 LDRB W8, [X20 + 0xAB0]
	0x0398F62C MOV X19, X0
	0x0398F630 TBNZ X8, 0x0, 0x398F6A8
	0x0398F634 ADRP X0, 0x7C1000
	0x0398F638 LDR X0, [X0 + 0xB28]
	0x0398F63C BL 0x1C16CF4
	0x0398F640 ADRP X0, 0x7C1000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X23, 0xA53000
	009 Move X21, 0x7C2000
	010 Move X22, 0x7C2000
	011 Move W8, [X23+2724]
	012 Move X21, [X21+2920]
	013 Move X22, [X22+2880]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x7C2000
	021 Move X0, [X0+2888]
	022 Call 0x1C17CF4
	023 Move X0, 0x7C2000
	024 Move X0, [X0+2896]
	025 Call 0x1C17CF4
	026 Move X0, 0x7C2000
	027 Move X0, [X0+2880]
	028 Call 0x1C17CF4
	029 Move X0, 0x7C2000
	030 Move X0, [X0+2928]
	031 Call 0x1C17CF4
	032 Move X0, 0x7C2000
	033 Move X0, [X0+2912]
	034 Call 0x1C17CF4
	035 Move X0, 0x7C2000
	036 Move X0, [X0+2920]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2724], W8
	040 Move X1, [X21]
	041 Move X4, [X22]
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Add X8, X31, 8
	044 Add X2, X31, 40
	045 Move X0, X20
	046 Move X3, X31
	047 Move [X31+48], V0
	048 Move [X31+56], V0
	049 Move [X31+40], X31
	050 Call 0x2241F24, X0, X1, X2, X3
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+40]
	054 Move [X31+48], V0
	055 Move [X31+56], V1
	056 Compare X8, 0
	057 JumpIfEqual {116}
	058 Move [X8+16], X19
	059 Move X8, [X31+48]
	060 Compare X8, 0
	061 JumpIfEqual {117}
	062 Move X21, 0x7C2000
	063 Move X21, [X21+2912]
	064 Move [X8+41], W31
	065 Move [X8+72], W31
	066 Move X8, [X21]
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {73}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X8, [X21]
	073 Move X9, [X8+184]
	074 Move X19, [X9+16]
	075 Compare X19, 0
	076 JumpIfNotEqual {99}
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {83}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, [X21]
	083 Move X9, 0x7C2000
	084 Move X8, [X8+184]
	085 Move X9, [X9+2888]
	086 Move X20, [X8]
	087 Move X0, [X9]
	088 Call 0x1C17F10
	089 Move X8, 0x7C2000
	090 Move X8, [X8+2928]
	091 Move X19, X0
	092 Move X2, [X8]
	093 Move X1, X20
	094 Move X3, X31
	095 Call 0x25C88AC, X0, X1, X2
	096 Move X8, [X21]
	097 Move X8, [X8+184]
	098 Move [X8+16], X19
	099 Move X8, 0x7C2000
	100 Move X8, [X8+2896]
	101 Move X2, [X8]
	102 Add X0, X31, 48
	103 Move X1, X19
	104 Call 0x224207C, X0, X1
	105 Add X0, X31, 48
	106 Move W1, W31
	107 Call RenderGraphBuilder.Dispose, X0, X1
	108 Move X20, [X31+112]
	109 Move X19, [X31+120]
	110 Move X22, [X31+96]
	111 Move X21, [X31+104]
	112 Move X30, [X31+80]
	113 Move X23, [X31+88]
	114 Add X31, X31, 128
	115 Return 
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Move X19, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X19
	121 Call 0x3EB2AD0
	122 Move X20, [X0]
	123 Call 0x3EB2AE0
	124 Add X0, X31, 48
	125 Move W1, W31
	126 Call RenderGraphBuilder.Dispose, X0, X1
	127 Compare X20, 0
	128 JumpIfEqual {108}
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Move X20, X31
	132 Move X19, X0
	133 Add X0, X31, 48
	134 Move W1, W31
	135 Call RenderGraphBuilder.Dispose, X0, X1
	136 Compare X20, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X19
	139 Call 0x1D2D690
	140 Move X0, X20
	141 Call 0x1C17F18
	142 Call 0x1991590

Method: UnityEngine.Rendering.DynamicArray`1<UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo> GetCompiledPassInfos()

Disassembly:
	0x0398F644 LDR X0, [X0 + 0xBE0]
	0x0398F648 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Void ClearCompiledGraph()

Disassembly:
	0x0398F64C ADRP X0, 0x7C1000
	0x0398F650 LDR X0, [X0 + 0xB30]
	0x0398F654 BL 0x1C16CF4
	0x0398F658 ADRP X0, 0x7C1000
	0x0398F65C LDR X0, [X0 + 0xBF8]
	0x0398F660 BL 0x1C16CF4
	0x0398F664 ADRP X0, 0x7C1000
	0x0398F668 LDR X0, [X0 + 0xC00]
	0x0398F66C BL 0x1C16CF4
	0x0398F670 ADRP X0, 0x7C1000
	0x0398F674 LDR X0, [X0 + 0xC08]
	0x0398F678 BL 0x1C16CF4
	0x0398F67C ADRP X0, 0x765000
	0x0398F680 LDR X0, [X0 + 0xE10]
	0x0398F684 BL 0x1C16CF4
	0x0398F688 ADRP X0, 0x7C1000
	0x0398F68C LDR X0, [X0 + 0xC10]
	0x0398F690 BL 0x1C16CF4
	0x0398F694 ADRP X0, 0x78F000
	0x0398F698 LDR X0, [X0 + 0x730]
	0x0398F69C BL 0x1C16CF4
	0x0398F6A0 MOVZ W8, 0x1
	0x0398F6A4 STRB W8, [X20 + 0xAB0]
	0x0398F6A8 STP X31, X31, [X31 + 0x30]
	0x0398F6AC STR X31, [X31 + 0x40]
	0x0398F6B0 STP X31, X31, [X31 + 0x20]
	0x0398F6B4 LDR X0, [X19 + 0x80]
	0x0398F6B8 CBZ X0, 0x398FCDC
	0x0398F6BC ADRP X27, 0x7C1000
	0x0398F6C0 ADRP X28, 0x78F000
	0x0398F6C4 ADRP X29, 0x7C1000
	0x0398F6C8 ADRP X25, 0x765000
	0x0398F6CC LDR X27, [X27 + 0xC00]
	0x0398F6D0 LDR X28, [X28 + 0x730]
	0x0398F6D4 LDR X29, [X29 + 0xBE0]
	0x0398F6D8 LDR X25, [X25 + 0xE10]
	0x0398F6DC MOV W20, W31
	0x0398F6E0 LDR W8, [X0 + 0x18]
	0x0398F6E4 CMP W20, W8
	0x0398F6E8 B.GE 0x398FCE0
	0x0398F6EC ADRP X8, 0x7C1000
	0x0398F6F0 LDR X8, [X8 + 0xB28]
	0x0398F6F4 MOV W1, W20
	0x0398F6F8 LDR X2, [X8]
	0x0398F6FC BL 0x2B4260C
	0x0398F700 MOV X21, X0
	0x0398F704 MOV W24, W31
	0x0398F708 LDR X8, [X21]
	0x0398F70C CBZ X8, 0x398FCDC
	0x0398F710 LDR X8, [X8 + 0x50]
	0x0398F714 CBZ X8, 0x398FCDC
	0x0398F718 LDR W9, [X8 + 0x18]
	0x0398F71C CMP W24, W9
	0x0398F720 B.CS 0x398FD00
	0x0398F724 SXTW X26, W24
	0x0398F728 ADD X8, X8, X26, 0x3, LSL
	0x0398F72C LDR X0, [X8 + 0x20]
	0x0398F730 CBZ X0, 0x398FCDC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA53000
	007 Move W8, [X20+2725]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7C2000
	014 Move X0, [X0+2936]
	015 Call 0x1C17CF4
	016 Move X0, 0x7C2000
	017 Move X0, [X0+2944]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2952]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2725], W8
	024 Move X0, X19
	025 Call RenderGraph.ClearRenderPasses, X0
	026 Move X0, [X19+16]
	027 Compare X0, 0
	028 JumpIfEqual {73}
	029 Move W1, [X19+80]
	030 Call RenderGraphResourceRegistry.Clear, X0, X1
	031 Move X9, [X19+40]
	032 Compare X9, 0
	033 JumpIfEqual {73}
	034 Move W10, [X9+28]
	035 Move X21, 0x7C2000
	036 Move X20, 0x7C2000
	037 Move X21, [X21+2936]
	038 Move X20, [X20+2944]
	039 Add W10, W10, 1
	040 Move X8, X31
	041 Move [X9+24], W31
	042 Move [X9+28], W10
	043 Move W9, 1
	044 Move X10, [X19+120]
	045 Compare X10, 0
	046 JumpIfEqual {73}
	047 Move W22, W9
	048 Move W9, [X10+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X10, X8
	051 Move X0, [X8+32]
	052 Compare X0, 0
	053 JumpIfEqual {73}
	054 Move X1, [X21]
	055 Call DynamicArray`1<CompiledResourceInfo>.Clear, X0
	056 Move W9, W31
	057 Move W8, 1
	058 Move TEMP, X22
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {44}
	062 Move X0, [X19+128]
	063 Compare X0, 0
	064 JumpIfEqual {73}
	065 Move X1, [X20]
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Call DynamicArray`1<CompiledPassInfo>.Clear, X0
	072 Return 
	073 Call 0x1C17F20
	074 Call 0x1C17F28

Method: System.Void InvalidateContext()

Disassembly:
	0x0398F994 LDR X8, [X8 + 0xBF8]
	0x0398F998 ADD X0, X31, 0x30
	0x0398F99C LDR X1, [X8]
	0x0398F9A0 BL 0x2BC8CD0
	0x0398F9A4 LDR X8, [X21]
	0x0398F9A8 CBZ X8, 0x398FCDC
	0x0398F9AC LDR X8, [X8 + 0x60]
	0x0398F9B0 CBZ X8, 0x398FCDC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+88]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move [X8+24], X31
	006 Move [X8+32], X31
	007 Move [X8+40], X31
	008 Move X30, [X31+16]
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnPassAdded(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphPass pass)

Disassembly:
	0x0398F9B4 LDR W9, [X8 + 0x18]
	0x0398F9B8 CMP W24, W9
	0x0398F9BC B.CS 0x398FD00
	0x0398F9C0 ADD X8, X8, X26, 0x3, LSL
	0x0398F9C4 LDR X0, [X8 + 0x20]
	0x0398F9C8 CBZ X0, 0x398FCDC
	0x0398F9CC ADRP X8, 0x7C1000
	0x0398F9D0 LDR X8, [X8 + 0xC10]
	0x0398F9D4 LDR X1, [X8]
	0x0398F9D8 ADD X8, X31, 0x8
	0x0398F9DC BL 0x304A5A4
	0x0398F9E0 LDUR V0, [X31 + 0x8]
	0x0398F9E4 LDR X8, [X31 + 0x18]
	0x0398F9E8 STR V0, [X31 + 0x3]
	0x0398F9EC STR X8, [X31 + 0x40]
	0x0398F9F0 LDR X1, [X27]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+48]
	004 Compare X8, 0
	005 JumpIfEqual {22}
	006 Move W8, [X8+35]
	007 Compare W8, 0
	008 JumpIfEqual {19}
	009 Move X19, X0
	010 Call RenderGraph.CompilePassImmediatly, X0, X1
	011 Move W8, [X19+104]
	012 Move X1, X0
	013 Move X0, X19
	014 Subtract W2, W8, 1
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call RenderGraph.ExecuteCompiledPass, X0, X1, X2
	018 Return 
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return 
	022 Call 0x1C17F20

Method: System.Void add_onGraphRegistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnGraphRegisteredDelegate value)

Disassembly:
	0x0398FA18 BL 0x398FDA8
	0x0398FA1C MOV W1, W0
	0x0398FA20 LDR X8, [X19 + 0x78]
	0x0398FA24 CBZ X8, 0x398FBA8
	0x0398FA28 LDR W9, [X8 + 0x18]
	0x0398FA2C CMP W24, W9
	0x0398FA30 B.CS 0x398FBC0
	0x0398FA34 ADD X8, X8, X26, 0x3, LSL
	0x0398FA38 LDR X0, [X8 + 0x20]
	0x0398FA3C CBZ X0, 0x398FBB0
	0x0398FA40 LDR X2, [X29]
	0x0398FA44 BL 0x2B42FB4
	0x0398FA48 LDR W8, [X0 + 0x10]
	0x0398FA4C MOV X22, X0
	0x0398FA50 LDR X0, [X0 + 0x8]
	0x0398FA54 ADD W8, W8, 0x1
	0x0398FA58 STR W8, [X22 + 0x10]
	0x0398FA5C CBZ X0, 0x398FB98
	0x0398FA60 LDR W10, [X0 + 0x1C]
	0x0398FA64 LDR X8, [X0 + 0x10]
	0x0398FA68 LDR X9, [X25]
	0x0398FA6C ADD W10, W10, 0x1
	0x0398FA70 STR W10, [X0 + 0x1C]
	0x0398FA74 CBZ X8, 0x398FBA0
	0x0398FA78 LDRSW X10, [X0 + 0x18]
	0x0398FA7C LDR W11, [X8 + 0x18]
	0x0398FA80 CMP W10, W11
	0x0398FA84 B.CS 0x398FA9C
	0x0398FA88 ADD W9, W10, 0x1
	0x0398FA8C ADD X8, X8, X10, 0x2, LSL
	0x0398FA90 STR W9, [X0 + 0x18]
	0x0398FA94 STR W20, [X8 + 0x20]
	0x0398FA98 B 0x398FAB0
	0x0398FA9C LDR X8, [X9 + 0x20]
	0x0398FAA0 LDR X8, [X8 + 0xC0]
	0x0398FAA4 LDR X2, [X8 + 0x70]
	0x0398FAA8 MOV W1, W20
	0x0398FAAC BL 0x2FDC70C
	0x0398FAB0 LDR X0, [X22]
	0x0398FAB4 CBZ X0, 0x398FB90
	0x0398FAB8 LDR W10, [X0 + 0x1C]
	0x0398FABC LDR X8, [X0 + 0x10]
	0x0398FAC0 LDR X9, [X25]
	0x0398FAC4 ADD W10, W10, 0x1
	0x0398FAC8 STR W10, [X0 + 0x1C]
	0x0398FACC CBZ X8, 0x398FBB8
	0x0398FAD0 LDRSW X10, [X0 + 0x18]
	0x0398FAD4 LDR W11, [X8 + 0x18]
	0x0398FAD8 CMP W10, W11
	0x0398FADC B.CS 0x398FAF4
	0x0398FAE0 ADD W9, W10, 0x1
	0x0398FAE4 ADD X8, X8, X10, 0x2, LSL
	0x0398FAE8 STR W9, [X0 + 0x18]
	0x0398FAEC STR W20, [X8 + 0x20]
	0x0398FAF0 B 0x398F9F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA53000
	008 Move X22, 0x7C2000
	009 Move W8, [X20+2726]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C2000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2726], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C2000
	032 Move X20, [X8+24]
	033 Move X23, [X23+3016]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Combine, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 24
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void remove_onGraphRegistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnGraphRegisteredDelegate value)

Disassembly:
	0x0398FAF4 LDR X8, [X9 + 0x20]
	0x0398FAF8 LDR X8, [X8 + 0xC0]
	0x0398FAFC LDR X2, [X8 + 0x70]
	0x0398FB00 MOV W1, W20
	0x0398FB04 BL 0x2FDC70C
	0x0398FB08 B 0x398F9F0
	0x0398FB0C ADRP X8, 0x7C1000
	0x0398FB10 LDR X8, [X8 + 0xBF8]
	0x0398FB14 ADD X0, X31, 0x30
	0x0398FB18 LDR X1, [X8]
	0x0398FB1C BL 0x2BC8CD0
	0x0398FB20 ADD W24, W24, 0x1
	0x0398FB24 CMP W24, 0x2
	0x0398FB28 B.NE 0x398F708
	0x0398FB2C B 0x398FCD0
	0x0398FB30 BL 0x1C16F28
	0x0398FB34 B 0x398FD30
	0x0398FB38 BL 0x1C16F20
	0x0398FB3C B 0x398FD30
	0x0398FB40 BL 0x1C16F20
	0x0398FB44 B 0x398FD30
	0x0398FB48 BL 0x1C16F20
	0x0398FB4C B 0x398FD30
	0x0398FB50 BL 0x1C16F20
	0x0398FB54 B 0x398FD30
	0x0398FB58 BL 0x1C16F20
	0x0398FB5C B 0x398FD30
	0x0398FB60 BL 0x1C16F28
	0x0398FB64 B 0x398FD30
	0x0398FB68 BL 0x1C16F20
	0x0398FB6C B 0x398FD30
	0x0398FB70 BL 0x1C16F20
	0x0398FB74 B 0x398FD30
	0x0398FB78 BL 0x1C16F20
	0x0398FB7C B 0x398FD30
	0x0398FB80 BL 0x1C16F20
	0x0398FB84 B 0x398FD30
	0x0398FB88 BL 0x1C16F20
	0x0398FB8C B 0x398FD30
	0x0398FB90 BL 0x1C16F20
	0x0398FB94 B 0x398FD30
	0x0398FB98 BL 0x1C16F20
	0x0398FB9C B 0x398FD30
	0x0398FBA0 BL 0x1C16F20
	0x0398FBA4 B 0x398FD30
	0x0398FBA8 BL 0x1C16F20
	0x0398FBAC B 0x398FD30
	0x0398FBB0 BL 0x1C16F20
	0x0398FBB4 B 0x398FD30
	0x0398FBB8 BL 0x1C16F20
	0x0398FBBC B 0x398FD30
	0x0398FBC0 BL 0x1C16F28
	0x0398FBC4 B 0x398FD30
	0x0398FBC8 B 0x398FC40
	0x0398FBCC B 0x398FC70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA53000
	008 Move X22, 0x7C2000
	009 Move W8, [X20+2727]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C2000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2727], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C2000
	032 Move X20, [X8+24]
	033 Move X23, [X23+3016]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Remove, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 24
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void add_onGraphUnregistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnGraphRegisteredDelegate value)

Disassembly:
	0x0398FBD0 B 0x398FCA0
	0x0398FBD4 B 0x398FC40
	0x0398FBD8 B 0x398FC40
	0x0398FBDC B 0x398FC70
	0x0398FBE0 B 0x398FCA0
	0x0398FBE4 B 0x398FC40
	0x0398FBE8 B 0x398FC40
	0x0398FBEC B 0x398FC40
	0x0398FBF0 B 0x398FC40
	0x0398FBF4 B 0x398FC40
	0x0398FBF8 B 0x398FC70
	0x0398FBFC B 0x398FC70
	0x0398FC00 B 0x398FC70
	0x0398FC04 B 0x398FC70
	0x0398FC08 B 0x398FC70
	0x0398FC0C B 0x398FC70
	0x0398FC10 B 0x398FC70
	0x0398FC14 B 0x398FCA0
	0x0398FC18 B 0x398FCA0
	0x0398FC1C B 0x398FCA0
	0x0398FC20 B 0x398FCA0
	0x0398FC24 B 0x398FCA0
	0x0398FC28 B 0x398FCA0
	0x0398FC2C B 0x398FCA0
	0x0398FC30 B 0x398FC40
	0x0398FC34 B 0x398FC70
	0x0398FC38 B 0x398FCA0
	0x0398FC3C B 0x398FC40
	0x0398FC40 CMP W1, 0x1
	0x0398FC44 B.NE 0x398FD0C
	0x0398FC48 BL 0x3EB1AD0
	0x0398FC4C LDR X22, [X0]
	0x0398FC50 BL 0x3EB1AE0
	0x0398FC54 ADRP X8, 0x7C1000
	0x0398FC58 LDR X8, [X8 + 0xBF8]
	0x0398FC5C ADD X0, X31, 0x30
	0x0398FC60 LDR X1, [X8]
	0x0398FC64 BL 0x2BC8CD0
	0x0398FC68 CBZ X22, 0x398FB20
	0x0398FC6C B 0x398FD04
	0x0398FC70 CMP W1, 0x1
	0x0398FC74 B.NE 0x398FD24
	0x0398FC78 BL 0x3EB1AD0
	0x0398FC7C LDR X22, [X0]
	0x0398FC80 BL 0x3EB1AE0
	0x0398FC84 ADRP X8, 0x7C1000
	0x0398FC88 LDR X8, [X8 + 0xBF8]
	0x0398FC8C ADD X0, X31, 0x30
	0x0398FC90 LDR X1, [X8]
	0x0398FC94 BL 0x2BC8CD0
	0x0398FC98 CBZ X22, 0x398F9A4
	0x0398FC9C B 0x398FD04
	0x0398FCA0 CMP W1, 0x1
	0x0398FCA4 B.NE 0x398FD18
	0x0398FCA8 BL 0x3EB1AD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA53000
	008 Move X22, 0x7C2000
	009 Move W8, [X20+2728]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C2000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2728], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C2000
	032 Move X20, [X8+32]
	033 Move X23, [X23+3016]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Combine, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 32
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void remove_onGraphUnregistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnGraphRegisteredDelegate value)

Disassembly:
	0x0398FCAC LDR X22, [X0]
	0x0398FCB0 BL 0x3EB1AE0
	0x0398FCB4 ADRP X8, 0x7C1000
	0x0398FCB8 LDR X8, [X8 + 0xBF8]
	0x0398FCBC ADD X0, X31, 0x30
	0x0398FCC0 LDR X1, [X8]
	0x0398FCC4 BL 0x2BC8CD0
	0x0398FCC8 CBZ X22, 0x398F854
	0x0398FCCC B 0x398FD04
	0x0398FCD0 LDR X0, [X19 + 0x80]
	0x0398FCD4 ADD W20, W20, 0x1
	0x0398FCD8 CBNZ X0, 0x398F6E0
	0x0398FCDC BL 0x1C16F20
	0x0398FCE0 LDP X20, X19, [X31 + 0xA0]
	0x0398FCE4 LDP X22, X21, [X31 + 0x90]
	0x0398FCE8 LDP X24, X23, [X31 + 0x80]
	0x0398FCEC LDP X26, X25, [X31 + 0x70]
	0x0398FCF0 LDP X28, X27, [X31 + 0x60]
	0x0398FCF4 LDP X29, X30, [X31 + 0x50]
	0x0398FCF8 ADD X31, X31, 0xB0
	0x0398FCFC RET
	0x0398FD00 BL 0x1C16F28
	0x0398FD04 MOV X0, X22
	0x0398FD08 BL 0x1C16F18
	0x0398FD0C MOV X19, X0
	0x0398FD10 MOV X22, X31
	0x0398FD14 B 0x398FD7C
	0x0398FD18 MOV X19, X0
	0x0398FD1C MOV X22, X31
	0x0398FD20 B 0x398FD58
	0x0398FD24 MOV X19, X0
	0x0398FD28 MOV X22, X31
	0x0398FD2C B 0x398FD34
	0x0398FD30 MOV X19, X0
	0x0398FD34 ADRP X8, 0x7C1000
	0x0398FD38 LDR X8, [X8 + 0xBF8]
	0x0398FD3C LDR X1, [X8]
	0x0398FD40 ADD X0, X31, 0x30
	0x0398FD44 BL 0x2BC8CD0
	0x0398FD48 CBZ X22, 0x398FD94
	0x0398FD4C MOV X0, X22
	0x0398FD50 BL 0x1C16F18
	0x0398FD54 MOV X19, X0
	0x0398FD58 ADRP X8, 0x7C1000
	0x0398FD5C LDR X8, [X8 + 0xBF8]
	0x0398FD60 LDR X1, [X8]
	0x0398FD64 ADD X0, X31, 0x30
	0x0398FD68 BL 0x2BC8CD0
	0x0398FD6C CBZ X22, 0x398FD94
	0x0398FD70 MOV X0, X22
	0x0398FD74 BL 0x1C16F18
	0x0398FD78 MOV X19, X0
	0x0398FD7C ADRP X8, 0x7C1000
	0x0398FD80 LDR X8, [X8 + 0xBF8]
	0x0398FD84 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA53000
	008 Move X22, 0x7C2000
	009 Move W8, [X20+2729]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C2000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2729], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C2000
	032 Move X20, [X8+32]
	033 Move X23, [X23+3016]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Remove, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 32
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void add_onExecutionRegistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnExecutionRegisteredDelegate value)

Disassembly:
	0x0398FD88 ADD X0, X31, 0x30
	0x0398FD8C BL 0x2BC8CD0
	0x0398FD90 CBNZ X22, 0x398FD9C
	0x0398FD94 MOV X0, X19
	0x0398FD98 BL 0x1D2C690
	0x0398FD9C MOV X0, X22
	0x0398FDA0 BL 0x1C16F18
	0x0398FDA4 BL 0x1990590
	0x0398FDA8 STP X30, X21, [X31 - 0x20]!
	0x0398FDAC STP X20, X19, [X31 + 0x10]
	0x0398FDB0 ADRP X20, 0xA52000
	0x0398FDB4 ADRP X21, 0x78F000
	0x0398FDB8 LDRB W8, [X20 + 0xB2C]
	0x0398FDBC LDR X21, [X21 + 0x730]
	0x0398FDC0 MOV X19, X0
	0x0398FDC4 TBNZ X8, 0x0, 0x398FDDC
	0x0398FDC8 ADRP X0, 0x78F000
	0x0398FDCC LDR X0, [X0 + 0x730]
	0x0398FDD0 BL 0x1C16CF4
	0x0398FDD4 MOVZ W8, 0x1
	0x0398FDD8 STRB W8, [X20 + 0xB2C]
	0x0398FDDC LDR X0, [X21]
	0x0398FDE0 LDR W8, [X0 + 0xE0]
	0x0398FDE4 CBNZ W8, 0x398FDEC
	0x0398FDE8 BL 0x1C16DFC
	0x0398FDEC AND W0, W19, 0xFFFF
	0x0398FDF0 LDP X20, X19, [X31 + 0x10]
	0x0398FDF4 LDP X30, X21, [X31], #0x20
	0x0398FDF8 RET
	0x0398FDFC STR X30, [X31 - 0x30]!
	0x0398FE00 STP X22, X21, [X31 + 0x10]
	0x0398FE04 STP X20, X19, [X31 + 0x20]
	0x0398FE08 ADRP X22, 0xA52000
	0x0398FE0C ADRP X21, 0x78F000
	0x0398FE10 LDRB W8, [X22 + 0xB06]
	0x0398FE14 LDR X21, [X21 + 0x730]
	0x0398FE18 MOV X19, X1
	0x0398FE1C MOV X20, X0
	0x0398FE20 TBNZ X8, 0x0, 0x398FE44
	0x0398FE24 ADRP X0, 0x78D000
	0x0398FE28 LDR X0, [X0 + 0xA80]
	0x0398FE2C BL 0x1C16CF4
	0x0398FE30 ADRP X0, 0x78F000
	0x0398FE34 LDR X0, [X0 + 0x730]
	0x0398FE38 BL 0x1C16CF4
	0x0398FE3C MOVZ W8, 0x1
	0x0398FE40 STRB W8, [X22 + 0xB06]
	0x0398FE44 MOV X0, X20
	0x0398FE48 MOV X1, X19
	0x0398FE4C BL 0x39996E4
	0x0398FE50 LDR X8, [X19]
	0x0398FE54 LDR X0, [X21]
	0x0398FE58 LDR X20, [X20 + 0x10]
	0x0398FE5C STR X8, [X31 + 0x8]
	0x0398FE60 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA53000
	008 Move X22, 0x7C2000
	009 Move W8, [X20+2730]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C2000
	017 Move X0, [X0+3024]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2730], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C2000
	032 Move X20, [X8+40]
	033 Move X23, [X23+3024]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Combine, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 40
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void remove_onExecutionRegistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnExecutionRegisteredDelegate value)

Disassembly:
	0x0398FE64 CBNZ W8, 0x398FE6C
	0x0398FE68 BL 0x1C16DFC
	0x0398FE6C ADD X0, X31, 0x8
	0x0398FE70 BL 0x3997E7C
	0x0398FE74 CBZ X20, 0x398FEC8
	0x0398FE78 LDR W8, [X20 + 0x18]
	0x0398FE7C CMP W0, W8
	0x0398FE80 B.CS 0x398FECC
	0x0398FE84 ADD X8, X20, W0, 0x3, SXTW
	0x0398FE88 LDR X8, [X8 + 0x20]
	0x0398FE8C CBZ X8, 0x398FEC8
	0x0398FE90 LDR X0, [X8 + 0x10]
	0x0398FE94 CBZ X0, 0x398FEC8
	0x0398FE98 ADRP X8, 0x78D000
	0x0398FE9C LDR X8, [X8 + 0xA80]
	0x0398FEA0 LDRH W1, [X19]
	0x0398FEA4 LDR X2, [X8]
	0x0398FEA8 BL 0x2B40178
	0x0398FEAC LDR X8, [X0]
	0x0398FEB0 CBZ X8, 0x398FEC8
	0x0398FEB4 LDRB W0, [X8 + 0x10]
	0x0398FEB8 LDP X20, X19, [X31 + 0x20]
	0x0398FEBC LDP X22, X21, [X31 + 0x10]
	0x0398FEC0 LDR X30, [X31], #0x30
	0x0398FEC4 RET
	0x0398FEC8 BL 0x1C16F20
	0x0398FECC BL 0x1C16F28
	0x0398FED0 SUB X31, X31, 0xD0
	0x0398FED4 STP X29, X30, [X31 + 0x70]
	0x0398FED8 STP X28, X27, [X31 + 0x80]
	0x0398FEDC STP X26, X25, [X31 + 0x90]
	0x0398FEE0 STP X24, X23, [X31 + 0xA0]
	0x0398FEE4 STP X22, X21, [X31 + 0xB0]
	0x0398FEE8 STP X20, X19, [X31 + 0xC0]
	0x0398FEEC ADRP X20, 0xA52000
	0x0398FEF0 LDRB W8, [X20 + 0xAB1]
	0x0398FEF4 MOV X19, X0
	0x0398FEF8 TBNZ X8, 0x0, 0x398FFDC
	0x0398FEFC ADRP X0, 0x764000
	0x0398FF00 LDR X0, [X0 + 0x9C8]
	0x0398FF04 BL 0x1C16CF4
	0x0398FF08 ADRP X0, 0x7C1000
	0x0398FF0C LDR X0, [X0 + 0xB28]
	0x0398FF10 BL 0x1C16CF4
	0x0398FF14 ADRP X0, 0x7C1000
	0x0398FF18 LDR X0, [X0 + 0xBE0]
	0x0398FF1C BL 0x1C16CF4
	0x0398FF20 ADRP X0, 0x7C1000
	0x0398FF24 LDR X0, [X0 + 0xBE8]
	0x0398FF28 BL 0x1C16CF4
	0x0398FF2C ADRP X0, 0x78F000
	0x0398FF30 LDR X0, [X0 + 0xB18]
	0x0398FF34 BL 0x1C16CF4
	0x0398FF38 ADRP X0, 0x7C1000
	0x0398FF3C LDR X0, [X0 + 0xBF8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA53000
	008 Move X22, 0x7C2000
	009 Move W8, [X20+2731]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C2000
	017 Move X0, [X0+3024]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2731], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C2000
	032 Move X20, [X8+40]
	033 Move X23, [X23+3024]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Remove, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 40
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void add_onExecutionUnregistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnExecutionRegisteredDelegate value)

Disassembly:
	0x0398FF40 BL 0x1C16CF4
	0x0398FF44 ADRP X0, 0x7C1000
	0x0398FF48 LDR X0, [X0 + 0xC00]
	0x0398FF4C BL 0x1C16CF4
	0x0398FF50 ADRP X0, 0x78F000
	0x0398FF54 LDR X0, [X0 + 0xB28]
	0x0398FF58 BL 0x1C16CF4
	0x0398FF5C ADRP X0, 0x78F000
	0x0398FF60 LDR X0, [X0 + 0xB38]
	0x0398FF64 BL 0x1C16CF4
	0x0398FF68 ADRP X0, 0x7C1000
	0x0398FF6C LDR X0, [X0 + 0xC08]
	0x0398FF70 BL 0x1C16CF4
	0x0398FF74 ADRP X0, 0x78F000
	0x0398FF78 LDR X0, [X0 + 0xB50]
	0x0398FF7C BL 0x1C16CF4
	0x0398FF80 ADRP X0, 0x7C1000
	0x0398FF84 LDR X0, [X0 + 0xC10]
	0x0398FF88 BL 0x1C16CF4
	0x0398FF8C ADRP X0, 0x78F000
	0x0398FF90 LDR X0, [X0 + 0x730]
	0x0398FF94 BL 0x1C16CF4
	0x0398FF98 ADRP X0, 0x7C1000
	0x0398FF9C LDR X0, [X0 + 0xC18]
	0x0398FFA0 BL 0x1C16CF4
	0x0398FFA4 ADRP X0, 0x7C1000
	0x0398FFA8 LDR X0, [X0 + 0xC20]
	0x0398FFAC BL 0x1C16CF4
	0x0398FFB0 ADRP X0, 0x7BF000
	0x0398FFB4 LDR X0, [X0 + 0xAC8]
	0x0398FFB8 BL 0x1C16CF4
	0x0398FFBC ADRP X0, 0x7C1000
	0x0398FFC0 LDR X0, [X0 + 0xC28]
	0x0398FFC4 BL 0x1C16CF4
	0x0398FFC8 ADRP X0, 0x7C1000
	0x0398FFCC LDR X0, [X0 + 0xC30]
	0x0398FFD0 BL 0x1C16CF4
	0x0398FFD4 MOVZ W8, 0x1
	0x0398FFD8 STRB W8, [X20 + 0xAB1]
	0x0398FFDC STP X31, X31, [X31 + 0x50]
	0x0398FFE0 STR X31, [X31 + 0x60]
	0x0398FFE4 STP X31, X31, [X31 + 0x30]
	0x0398FFE8 STR X31, [X31 + 0x40]
	0x0398FFEC LDR X8, [X19 + 0x30]
	0x0398FFF0 CBZ X8, 0x3990448
	0x0398FFF4 LDRB W9, [X8 + 0x22]
	0x0398FFF8 CBZ W9, 0x399007C
	0x0398FFFC LDRB W8, [X8 + 0x24]
	0x03990000 CBZ W8, 0x3990428
	0x03990004 ADRP X8, 0x763000
	0x03990008 LDR X8, [X8 + 0x9C8]
	0x0399000C LDR X19, [X19 + 0x38]
	0x03990010 LDR X20, [X8]
	0x03990014 LDR X8, [X20 + 0x38]
	0x03990018 CBNZ X8, 0x3990028

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA53000
	008 Move X22, 0x7C2000
	009 Move W8, [X20+2732]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C2000
	017 Move X0, [X0+3024]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2732], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C2000
	032 Move X20, [X8+48]
	033 Move X23, [X23+3024]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Combine, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 48
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void remove_onExecutionUnregistered(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/OnExecutionRegisteredDelegate value)

Disassembly:
	0x0399001C MOV X0, X20
	0x03990020 BL 0x1C5C6E0
	0x03990024 LDR X8, [X20 + 0x38]
	0x03990028 LDR X0, [X8 + 0x10]
	0x0399002C LDRB W8, [X0 + 0x135]
	0x03990030 TBNZ X8, 0x0, 0x3990038
	0x03990034 BL 0x1C5C684
	0x03990038 LDR W8, [X0 + 0xE0]
	0x0399003C CBNZ W8, 0x3990044
	0x03990040 BL 0x1C16DFC
	0x03990044 LDR X8, [X20 + 0x38]
	0x03990048 LDR X0, [X8 + 0x10]
	0x0399004C LDRB W8, [X0 + 0x135]
	0x03990050 TBNZ X8, 0x0, 0x3990058
	0x03990054 BL 0x1C5C684
	0x03990058 CBZ X19, 0x3990448
	0x0399005C ADRP X9, 0x7C0000
	0x03990060 LDR X8, [X0 + 0xB8]
	0x03990064 LDR X9, [X9 + 0xC30]
	0x03990068 MOV X0, X19
	0x0399006C LDR X2, [X8]
	0x03990070 LDR X1, [X9]
	0x03990074 BL 0x39904A0
	0x03990078 B 0x3990428
	0x0399007C STR X31, [X31 + 0x10]
	0x03990080 ADRP X26, 0x7C0000
	0x03990084 ADRP X27, 0x7BE000
	0x03990088 ADRP X25, 0x78E000
	0x0399008C ADRP X24, 0x7C0000
	0x03990090 ADRP X28, 0x7C0000
	0x03990094 ADRP X29, 0x78E000
	0x03990098 LDR X26, [X26 + 0xBE0]
	0x0399009C LDR X27, [X27 + 0xAC8]
	0x039900A0 LDR X25, [X25 + 0xB28]
	0x039900A4 LDR X24, [X24 + 0xB28]
	0x039900A8 LDR X28, [X28 + 0xC00]
	0x039900AC LDR X29, [X29 + 0x730]
	0x039900B0 LDR X8, [X19 + 0x78]
	0x039900B4 CBZ X8, 0x3990448
	0x039900B8 LDR W9, [X8 + 0x18]
	0x039900BC LDR X10, [X31 + 0x10]
	0x039900C0 CMP W10, W9
	0x039900C4 B.CS 0x399044C
	0x039900C8 LDR X0, [X19 + 0x88]
	0x039900CC CBZ X0, 0x3990448
	0x039900D0 LDR X9, [X31 + 0x10]
	0x039900D4 SXTW X23, W9
	0x039900D8 ADD X8, X8, X23, 0x3, LSL
	0x039900DC LDR X20, [X8 + 0x20]
	0x039900E0 ADRP X8, 0x7C0000
	0x039900E4 LDR X8, [X8 + 0xC18]
	0x039900E8 LDR X1, [X8]
	0x039900EC BL 0x26008F0
	0x039900F0 CBZ X20, 0x3990448
	0x039900F4 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA52000
	008 Move X22, 0x7C1000
	009 Move W8, [X20+2733]
	010 Move X22, [X22+2240]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C1000
	017 Move X0, [X0+3024]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C1000
	020 Move X0, [X0+2240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2733], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x7C1000
	032 Move X20, [X8+48]
	033 Move X23, [X23+3024]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Remove, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 48
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void InitResourceInfosData(UnityEngine.Rendering.DynamicArray`1<UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo> resourceInfos, System.Int32 count)

Disassembly:
	0x039900F8 CMP W8, 0x1
	0x039900FC B.LT 0x39903E4
	0x03990100 MOV W21, W31
	0x03990104 LDR X2, [X26]
	0x03990108 MOV X0, X20
	0x0399010C MOV W1, W21
	0x03990110 BL 0x2B42FB4
	0x03990114 LDR W8, [X0 + 0x10]
	0x03990118 CBNZ W8, 0x3990130
	0x0399011C LDR X0, [X19 + 0x88]
	0x03990120 CBZ X0, 0x3990448
	0x03990124 LDR X2, [X27]
	0x03990128 MOV W1, W21
	0x0399012C BL 0x2600D14
	0x03990130 LDR W8, [X20 + 0x18]
	0x03990134 ADD W21, W21, 0x1
	0x03990138 CMP W21, W8
	0x0399013C B.LT 0x3990104
	0x03990140 B 0x39903E4
	0x03990144 ADRP X8, 0x7C0000
	0x03990148 LDR X8, [X8 + 0xC20]
	0x0399014C LDR X1, [X8]
	0x03990150 BL 0x2600CC4
	0x03990154 LDR X2, [X26]
	0x03990158 MOV W1, W0
	0x0399015C MOV X0, X20
	0x03990160 BL 0x2B42FB4
	0x03990164 LDR X0, [X0]
	0x03990168 CBZ X0, 0x3990448
	0x0399016C ADRP X8, 0x78E000
	0x03990170 LDR X8, [X8 + 0xB50]
	0x03990174 LDR X1, [X8]
	0x03990178 ADD X8, X31, 0x18
	0x0399017C BL 0x2FDD2BC
	0x03990180 LDUR V0, [X31 + 0x18]
	0x03990184 LDR X8, [X31 + 0x28]
	0x03990188 STR V0, [X31 + 0x5]
	0x0399018C STR X8, [X31 + 0x60]
	0x03990190 LDR X1, [X25]
	0x03990194 ADD X0, X31, 0x50
	0x03990198 BL 0x2BBDDA0
	0x0399019C TBZ X0, 0x0, 0x399031C
	0x039901A0 LDR X0, [X19 + 0x80]
	0x039901A4 CBZ X0, 0x3990334
	0x039901A8 LDR W1, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA52000
	006 Move W8, [X21+2734]
	007 Move W20, W2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7C1000
	014 Move X0, [X0+3032]
	015 Call 0x1C17CF4
	016 Move X0, 0x7C1000
	017 Move X0, [X0+3040]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C1000
	020 Move X0, [X0+3048]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2734], W8
	024 Compare X19, 0
	025 JumpIfEqual {51}
	026 Move X8, 0x7C1000
	027 Move X8, [X8+3032]
	028 Move X0, X19
	029 Move W1, W20
	030 Move W2, W31
	031 Move X3, [X8]
	032 Call DynamicArray`1<CompiledResourceInfo>.Resize, X0, X1, X2
	033 Move W8, [X19+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X21, 0x7C1000
	036 Move X21, [X21+3040]
	037 Move W20, W31
	038 Move X2, [X21]
	039 Move X0, X19
	040 Move W1, W20
	041 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	042 Call CompiledResourceInfo.Reset, X0
	043 Move W8, [X19+24]
	044 Add W20, W20, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void InitializeCompilationData()

Disassembly:
	0x0399028C BL 0x1C16DFC
	0x03990290 MOV X0, X21
	0x03990294 BL 0x398FDA8
	0x03990298 MOV W1, W0
	0x0399029C CBZ X22, 0x39902E0
	0x039902A0 LDR X2, [X27]
	0x039902A4 MOV X0, X22
	0x039902A8 BL 0x2600D14
	0x039902AC B 0x3990230
	0x039902B0 MOV X21, X31
	0x039902B4 MOVZ W22, 0xB
	0x039902B8 ADRP X8, 0x7C0000
	0x039902BC LDR X8, [X8 + 0xBF8]
	0x039902C0 LDR X1, [X8]
	0x039902C4 ADD X0, X31, 0x30
	0x039902C8 BL 0x2BC8CD0
	0x039902CC CBNZ X21, 0x3990384
	0x039902D0 CMP W22, 0xB
	0x039902D4 B.EQ 0x3990190
	0x039902D8 CBZ W22, 0x3990190
	0x039902DC B 0x3990414
	0x039902E0 BL 0x1C16F20
	0x039902E4 B 0x3990450
	0x039902E8 B 0x3990300
	0x039902EC B 0x3990300
	0x039902F0 B 0x3990300
	0x039902F4 B 0x3990300
	0x039902F8 B 0x3990300
	0x039902FC B 0x3990300
	0x03990300 CMP W1, 0x1
	0x03990304 B.NE 0x399033C
	0x03990308 BL 0x3EB1AD0
	0x0399030C LDR X21, [X0]
	0x03990310 BL 0x3EB1AE0
	0x03990314 MOV W22, W31
	0x03990318 B 0x39902B8
	0x0399031C ADRP X8, 0x78E000
	0x03990320 LDR X8, [X8 + 0xB18]
	0x03990324 ADD X0, X31, 0x50
	0x03990328 LDR X1, [X8]
	0x0399032C BL 0x2BBDD9C
	0x03990330 B 0x39903E4
	0x03990334 BL 0x1C16F20
	0x03990338 B 0x3990464
	0x0399033C STP X0, X1, [X31]
	0x03990340 MOV X21, X31
	0x03990344 ADRP X8, 0x7C0000
	0x03990348 LDR X8, [X8 + 0xBF8]
	0x0399034C LDR X1, [X8]
	0x03990350 ADD X0, X31, 0x30
	0x03990354 BL 0x2BC8CD0
	0x03990358 LDP X0, X1, [X31]
	0x0399035C CBZ X21, 0x39903B8
	0x03990360 B 0x3990464
	0x03990364 BL 0x1C16F20
	0x03990368 B 0x3990464
	0x0399036C BL 0x1C16F28
	0x03990370 B 0x399046C
	0x03990374 BL 0x1C16F20
	0x03990378 B 0x3990464
	0x0399037C BL 0x1C16F20
	0x03990380 B 0x3990464
	0x03990384 MOV X0, X21
	0x03990388 BL 0x1C16F18
	0x0399038C B 0x399046C
	0x03990390 STP X0, X1, [X31]
	0x03990394 B 0x3990344
	0x03990398 B 0x39903B8
	0x0399039C B 0x39903B8
	0x039903A0 B 0x39903B8
	0x039903A4 B 0x39903B8
	0x039903A8 B 0x39903B8
	0x039903AC B 0x39903B8
	0x039903B0 B 0x39903B8
	0x039903B4 B 0x39903B8
	0x039903B8 CMP W1, 0x1
	0x039903BC B.NE 0x3990450
	0x039903C0 BL 0x3EB1AD0
	0x039903C4 LDR X21, [X0]
	0x039903C8 BL 0x3EB1AE0
	0x039903CC ADRP X8, 0x78E000
	0x039903D0 LDR X8, [X8 + 0xB18]
	0x039903D4 ADD X0, X31, 0x50
	0x039903D8 LDR X1, [X8]
	0x039903DC BL 0x2BBDD9C
	0x039903E0 CBNZ X21, 0x399045C
	0x039903E4 LDR X0, [X19 + 0x88]
	0x039903E8 CBZ X0, 0x3990448
	0x039903EC LDR W8, [X0 + 0x18]
	0x039903F0 CBNZ W8, 0x3990144
	0x039903F4 LDR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA52000
	008 Move W8, [X20+2735]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x7C1000
	015 Move X0, [X0+2784]
	016 Call 0x1C17CF4
	017 Move X0, 0x7C1000
	018 Move X0, [X0+2856]
	019 Call 0x1C17CF4
	020 Move X0, 0x7C1000
	021 Move X0, [X0+2864]
	022 Call 0x1C17CF4
	023 Move X0, 0x78D000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move X0, 0x7C1000
	027 Move X0, [X0+3056]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2735], W8
	031 Move X8, [X19+120]
	032 Compare X8, 0
	033 JumpIfEqual {100}
	034 Move W9, [X8+24]
	035 Compare W9, 0
	036 JumpIfEqual {108}
	037 Move X0, [X19+16]
	038 Compare X0, 0
	039 JumpIfEqual {100}
	040 Move X20, [X8+32]
	041 Move W1, W31
	042 Call RenderGraphResourceRegistry.GetResourceCount, X0, X1
	043 Move X1, X20
	044 Move W2, W0
	045 Call RenderGraph.InitResourceInfosData, X0, X1, X2
	046 Move X8, [X19+120]
	047 Compare X8, 0
	048 JumpIfEqual {100}
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+16]
	052 Compare X0, 0
	053 JumpIfEqual {100}
	054 Move X20, [X8+40]
	055 Move W1, 1
	056 Call RenderGraphResourceRegistry.GetResourceCount, X0, X1
	057 Move X1, X20
	058 Move W2, W0
	059 Call RenderGraph.InitResourceInfosData, X0, X1, X2
	060 Move X8, [X19+32]
	061 Compare X8, 0
	062 JumpIfEqual {100}
	063 Move X0, [X19+128]
	064 Compare X0, 0
	065 JumpIfEqual {100}
	066 Move X9, 0x7C1000
	067 Move X9, [X9+2784]
	068 Move W1, [X8+24]
	069 Move W2, W31
	070 Move X3, [X9]
	071 Call DynamicArray`1<CompiledPassInfo>.Resize, X0, X1, X2
	072 Move X0, [X19+128]
	073 Compare X0, 0
	074 JumpIfEqual {100}
	075 Move X22, 0x7C1000
	076 Move X23, 0x7C1000
	077 Move X22, [X22+2856]
	078 Move X23, [X23+3056]
	079 Move W20, W31
	080 Move W8, [X0+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X2, [X22]
	083 Move W1, W20
	084 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	085 Move X8, [X19+32]
	086 Compare X8, 0
	087 JumpIfEqual {100}
	088 Move X2, [X23]
	089 Move X21, X0
	090 Move X0, X8
	091 Move W1, W20
	092 Call List`1<Object>.get_Item, X0, X1
	093 Move X1, X0
	094 Move X0, X21
	095 Call CompiledPassInfo.Reset, X0, X1
	096 Move X0, [X19+128]
	097 Add W20, W20, 1
	098 Compare X0, 0
	099 JumpIfNotEqual {80}
	100 Call 0x1C17F20
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return 
	108 Call 0x1C17F28

Method: System.Void CountReferences()

Disassembly:
	0x03990608 LDR X0, [X8 + 0x10]
	0x0399060C LDRB W8, [X0 + 0x135]
	0x03990610 TBNZ X8, 0x0, 0x3990618
	0x03990614 BL 0x1C5C684
	0x03990618 LDR W8, [X0 + 0xE0]
	0x0399061C CBNZ W8, 0x3990624
	0x03990620 BL 0x1C16DFC
	0x03990624 LDR X8, [X21 + 0x38]
	0x03990628 LDR X0, [X8 + 0x10]
	0x0399062C LDRB W8, [X0 + 0x135]
	0x03990630 TBNZ X8, 0x0, 0x3990638
	0x03990634 BL 0x1C5C684
	0x03990638 CBZ X19, 0x3990858
	0x0399063C ADRP X9, 0x7C0000
	0x03990640 LDR X8, [X0 + 0xB8]
	0x03990644 LDR X9, [X9 + 0xC38]
	0x03990648 MOV X0, X19
	0x0399064C LDR X2, [X8]
	0x03990650 LDR X1, [X9]
	0x03990654 BL 0x39904A0
	0x03990658 LDR X0, [X20 + 0x38]
	0x0399065C CBZ X0, 0x3990858
	0x03990660 MOVZ W1, 0x1
	0x03990664 STR X0, [X31]
	0x03990668 BL 0x399740C
	0x0399066C LDR X8, [X20 + 0x80]
	0x03990670 CBZ X8, 0x3990780
	0x03990674 ADRP X28, 0x7C0000
	0x03990678 ADRP X29, 0x7C0000
	0x0399067C ADRP X27, 0x763000
	0x03990680 ADRP X26, 0x763000
	0x03990684 ADRP X19, 0x7C0000
	0x03990688 LDR X28, [X28 + 0xB28]
	0x0399068C LDR X29, [X29 + 0xBF0]
	0x03990690 LDR X27, [X27 + 0x9D0]
	0x03990694 LDR X26, [X26 + 0x758]
	0x03990698 LDR X19, [X19 + 0xC40]
	0x0399069C MOV W21, W31
	0x039906A0 LDR W9, [X8 + 0x18]
	0x039906A4 CMP W21, W9
	0x039906A8 B.GE 0x3990784
	0x039906AC LDR X2, [X28]
	0x039906B0 MOV X0, X8
	0x039906B4 MOV W1, W21
	0x039906B8 BL 0x2B4260C
	0x039906BC LDRB W8, [X0 + 0x1C]
	0x039906C0 CBZ W8, 0x3990774
	0x039906C4 LDR X0, [X20 + 0x20]
	0x039906C8 CBZ X0, 0x3990830
	0x039906CC LDR X2, [X29]
	0x039906D0 MOV W1, W21
	0x039906D4 BL 0x301BCCC
	0x039906D8 MOV X24, X0
	0x039906DC LDR X22, [X20 + 0x38]
	0x039906E0 LDR X0, [X27]
	0x039906E4 MOVZ W1, 0x2
	0x039906E8 BL 0x1C16D6C
	0x039906EC CBZ X24, 0x3990828
	0x039906F0 MOV X23, X0
	0x039906F4 LDR W8, [X24 + 0x18]
	0x039906F8 LDR X0, [X26]
	0x039906FC STR W8, [X31 + 0xC]
	0x03990700 ADD X1, X31, 0xC
	0x03990704 BL 0x1C16E04
	0x03990708 CBZ X23, 0x3990834
	0x0399070C MOV X25, X0
	0x03990710 CBZ X0, 0x3990728
	0x03990714 LDR X8, [X23]
	0x03990718 LDR X1, [X8 + 0x40]
	0x0399071C MOV X0, X25
	0x03990720 BL 0x1C16E00
	0x03990724 CBZ X0, 0x3990840
	0x03990728 LDR W8, [X23 + 0x18]
	0x0399072C CBZ W8, 0x399082C
	0x03990730 STR X25, [X23 + 0x20]
	0x03990734 LDR X24, [X24 + 0x10]
	0x03990738 CBZ X24, 0x3990754
	0x0399073C LDR X8, [X23]
	0x03990740 LDR X1, [X8 + 0x40]
	0x03990744 MOV X0, X24
	0x03990748 BL 0x1C16E00
	0x0399074C CBZ X0, 0x399084C
	0x03990750 LDR W8, [X23 + 0x18]
	0x03990754 CMP W8, 0x1
	0x03990758 B.LS 0x399083C
	0x0399075C STR X24, [X23 + 0x28]
	0x03990760 CBZ X22, 0x3990838
	0x03990764 LDR X1, [X19]
	0x03990768 MOV X0, X22
	0x0399076C MOV X2, X23
	0x03990770 BL 0x39904A0
	0x03990774 LDR X8, [X20 + 0x80]
	0x03990778 ADD W21, W21, 0x1
	0x0399077C CBNZ X8, 0x39906A0
	0x03990780 BL 0x1C16F20
	0x03990784 ADRP X8, 0x763000
	0x03990788 LDR X8, [X8 + 0x9C8]
	0x0399078C LDR X20, [X20 + 0x38]
	0x03990790 LDR X19, [X31]
	0x03990794 LDR X21, [X8]
	0x03990798 LDR X8, [X21 + 0x38]
	0x0399079C CBNZ X8, 0x39907AC
	0x039907A0 MOV X0, X21
	0x039907A4 BL 0x1C5C6E0
	0x039907A8 LDR X8, [X21 + 0x38]
	0x039907AC LDR X0, [X8 + 0x10]
	0x039907B0 LDRB W8, [X0 + 0x135]
	0x039907B4 TBNZ X8, 0x0, 0x39907BC
	0x039907B8 BL 0x1C5C684
	0x039907BC LDR W8, [X0 + 0xE0]
	0x039907C0 CBNZ W8, 0x39907C8
	0x039907C4 BL 0x1C16DFC
	0x039907C8 LDR X8, [X21 + 0x38]
	0x039907CC LDR X0, [X8 + 0x10]
	0x039907D0 LDRB W8, [X0 + 0x135]
	0x039907D4 TBNZ X8, 0x0, 0x39907DC
	0x039907D8 BL 0x1C5C684
	0x039907DC CBZ X20, 0x399085C
	0x039907E0 LDR X8, [X0 + 0xB8]
	0x039907E4 LDR X2, [X8]
	0x039907E8 ADRP X8, 0x764000
	0x039907EC LDR X8, [X8 + 0xFE0]
	0x039907F0 LDR X1, [X8]
	0x039907F4 MOV X0, X20
	0x039907F8 BL 0x39904A0
	0x039907FC MOVZ W1, 0x1
	0x03990800 MOV X0, X19
	0x03990804 BL 0x39974E0
	0x03990808 LDP X20, X19, [X31 + 0x60]
	0x0399080C LDP X22, X21, [X31 + 0x50]
	0x03990810 LDP X24, X23, [X31 + 0x40]
	0x03990814 LDP X26, X25, [X31 + 0x30]
	0x03990818 LDP X28, X27, [X31 + 0x20]
	0x0399081C LDP X29, X30, [X31 + 0x10]
	0x03990820 ADD X31, X31, 0x70
	0x03990824 RET
	0x03990828 BL 0x1C16F20
	0x0399082C BL 0x1C16F28
	0x03990830 BL 0x1C16F20
	0x03990834 BL 0x1C16F20
	0x03990838 BL 0x1C16F20
	0x0399083C BL 0x1C16F28
	0x03990840 BL 0x1C16F44
	0x03990844 MOV X1, X31
	0x03990848 BL 0x1C16DEC
	0x0399084C BL 0x1C16F44
	0x03990850 MOV X1, X31
	0x03990854 BL 0x1C16DEC
	0x03990858 BL 0x1C16F20
	0x0399085C BL 0x1C16F20
	0x03990860 B 0x399088C
	0x03990864 B 0x3990888
	0x03990868 B 0x3990888
	0x0399086C B 0x3990888
	0x03990870 B 0x3990888
	0x03990874 B 0x3990888
	0x03990878 B 0x3990888
	0x0399087C B 0x3990888
	0x03990880 B 0x3990888
	0x03990884 B 0x3990888
	0x03990888 LDR X19, [X31]
	0x0399088C MOV X20, X0
	0x03990890 CMP W1, 0x1
	0x03990894 B.NE 0x39908C0
	0x03990898 MOV X0, X20
	0x0399089C BL 0x3EB1AD0
	0x039908A0 LDR X21, [X0]
	0x039908A4 BL 0x3EB1AE0
	0x039908A8 MOVZ W1, 0x1
	0x039908AC MOV X0, X19
	0x039908B0 BL 0x39974E0
	0x039908B4 CBZ X21, 0x3990808
	0x039908B8 MOV X0, X21
	0x039908BC BL 0x1C16F18
	0x039908C0 MOV X21, X31
	0x039908C4 B 0x39908CC
	0x039908C8 MOV X20, X0
	0x039908CC LDR X0, [X31]
	0x039908D0 MOVZ W1, 0x1
	0x039908D4 BL 0x39974E0
	0x039908D8 CBNZ X21, 0x39908E4
	0x039908DC MOV X0, X20
	0x039908E0 BL 0x1D2C690
	0x039908E4 MOV X0, X21
	0x039908E8 BL 0x1C16F18
	0x039908EC BL 0x1990590
	0x039908F0 STR W4, [X1 + 0x20]
	0x039908F4 STR W4, [X5]
	0x039908F8 LDR W8, [X2 + 0x24]
	0x039908FC MOVZ W9, 0x1
	0x03990900 STRB W9, [X2 + 0x28]
	0x03990904 ADDS W31, W8, 0x1
	0x03990908 B.EQ 0x3990910
	0x0399090C RET
	0x03990910 STR W3, [X2 + 0x24]
	0x03990914 RET
	0x03990918 STP X30, X25, [X31 - 0x40]!
	0x0399091C STP X24, X23, [X31 + 0x10]
	0x03990920 STP X22, X21, [X31 + 0x20]
	0x03990924 STP X20, X19, [X31 + 0x30]
	0x03990928 ADRP X24, 0xA51000
	0x0399092C LDRB W8, [X24 + 0xAB2]
	0x03990930 MOV X22, X4
	0x03990934 MOV W19, W3
	0x03990938 MOV X20, X2
	0x0399093C MOV X21, X1
	0x03990940 MOV X23, X0
	0x03990944 TBNZ X8, 0x0, 0x399095C
	0x03990948 ADRP X0, 0x7C0000
	0x0399094C LDR X0, [X0 + 0xB28]
	0x03990950 BL 0x1C16CF4
	0x03990954 MOVZ W8, 0x1
	0x03990958 STRB W8, [X24 + 0xAB2]
	0x0399095C MOV X0, X23
	0x03990960 MOV W1, W19
	0x03990964 MOV X2, X22
	0x03990968 BL 0x3990A48
	0x0399096C ADDS W31, W0, 0x1
	0x03990970 B.EQ 0x3990A30
	0x03990974 MOV W22, W0
	0x03990978 LDR X0, [X23 + 0x80]
	0x0399097C CBZ X0, 0x3990A44
	0x03990980 ADRP X25, 0x7C0000
	0x03990984 LDR X25, [X25 + 0xB28]
	0x03990988 MOV W1, W19
	0x0399098C LDR X2, [X25]
	0x03990990 BL 0x2B4260C
	0x03990994 LDR X8, [X23 + 0x80]
	0x03990998 CBZ X8, 0x3990A44
	0x0399099C LDR X2, [X25]
	0x039909A0 MOV X24, X0
	0x039909A4 MOV X0, X8
	0x039909A8 MOV W1, W22
	0x039909AC BL 0x2B4260C
	0x039909B0 LDRB W9, [X0 + 0x40]
	0x039909B4 LDRB W8, [X24 + 0x40]
	0x039909B8 CMP W9, W8
	0x039909BC B.EQ 0x3990A30
	0x039909C0 CBZ W8, 0x39909F0
	0x039909C4 LDR W8, [X21]
	0x039909C8 CMP W22, W8
	0x039909CC B.LE 0x3990A30
	0x039909D0 LDR X0, [X23 + 0x80]
	0x039909D4 CBZ X0, 0x3990A44
	0x039909D8 LDR X2, [X25]
	0x039909DC MOV W1, W22
	0x039909E0 BL 0x2B4260C
	0x039909E4 STR W22, [X24 + 0x20]
	0x039909E8 STR W22, [X21]
	0x039909EC B 0x3990A18
	0x039909F0 LDR W8, [X20]
	0x039909F4 CMP W22, W8
	0x039909F8 B.LE 0x3990A30
	0x039909FC LDR X0, [X23 + 0x80]
	0x03990A00 CBZ X0, 0x3990A44
	0x03990A04 LDR X2, [X25]
	0x03990A08 MOV W1, W22
	0x03990A0C BL 0x2B4260C
	0x03990A10 STR W22, [X24 + 0x20]
	0x03990A14 STR W22, [X20]
	0x03990A18 LDR W8, [X0 + 0x24]
	0x03990A1C MOVZ W9, 0x1
	0x03990A20 STRB W9, [X0 + 0x28]
	0x03990A24 ADDS W31, W8, 0x1
	0x03990A28 B.NE 0x3990A30
	0x03990A2C STR W19, [X0 + 0x24]
	0x03990A30 LDP X20, X19, [X31 + 0x30]
	0x03990A34 LDP X22, X21, [X31 + 0x20]
	0x03990A38 LDP X24, X23, [X31 + 0x10]
	0x03990A3C LDP X30, X25, [X31], #0x40
	0x03990A40 RET
	0x03990A44 BL 0x1C16F20
	0x03990A48 SUB X31, X31, 0x80
	0x03990A4C STP X30, X25, [X31 + 0x40]
	0x03990A50 STP X24, X23, [X31 + 0x50]
	0x03990A54 STP X22, X21, [X31 + 0x60]
	0x03990A58 STP X20, X19, [X31 + 0x70]
	0x03990A5C ADRP X22, 0xA51000
	0x03990A60 LDRB W8, [X22 + 0xAB5]
	0x03990A64 MOV X19, X2
	0x03990A68 MOV W20, W1
	0x03990A6C MOV X21, X0
	0x03990A70 TBNZ X8, 0x0, 0x3990AB8
	0x03990A74 ADRP X0, 0x7C0000
	0x03990A78 LDR X0, [X0 + 0xB28]
	0x03990A7C BL 0x1C16CF4
	0x03990A80 ADRP X0, 0x78E000
	0x03990A84 LDR X0, [X0 + 0xB18]
	0x03990A88 BL 0x1C16CF4
	0x03990A8C ADRP X0, 0x78E000
	0x03990A90 LDR X0, [X0 + 0xB28]
	0x03990A94 BL 0x1C16CF4
	0x03990A98 ADRP X0, 0x78E000
	0x03990A9C LDR X0, [X0 + 0xB38]
	0x03990AA0 BL 0x1C16CF4
	0x03990AA4 ADRP X0, 0x78E000
	0x03990AA8 LDR X0, [X0 + 0xB50]
	0x03990AAC BL 0x1C16CF4
	0x03990AB0 MOVZ W8, 0x1
	0x03990AB4 STRB W8, [X22 + 0xAB5]
	0x03990AB8 STP X31, X31, [X31 + 0x20]
	0x03990ABC STR X31, [X31 + 0x30]
	0x03990AC0 LDR X0, [X19]
	0x03990AC4 CBZ X0, 0x3990B78
	0x03990AC8 ADRP X8, 0x78E000
	0x03990ACC LDR X8, [X8 + 0xB50]
	0x03990AD0 ADRP X24, 0x78E000
	0x03990AD4 ADRP X25, 0x7C0000
	0x03990AD8 ADRP X23, 0x78E000
	0x03990ADC LDR X1, [X8]
	0x03990AE0 LDR X24, [X24 + 0xB28]
	0x03990AE4 LDR X25, [X25 + 0xB28]
	0x03990AE8 LDR X23, [X23 + 0xB18]
	0x03990AEC ADD X8, X31, 0x8
	0x03990AF0 BL 0x2FDD2BC
	0x03990AF4 LDUR V0, [X31 + 0x8]
	0x03990AF8 LDR X8, [X31 + 0x18]
	0x03990AFC MOVN W22, 0x0
	0x03990B00 STR V0, [X31 + 0x2]
	0x03990B04 STR X8, [X31 + 0x30]
	0x03990B08 LDR X1, [X24]
	0x03990B0C MOV W19, W22
	0x03990B10 ADD X0, X31, 0x20
	0x03990B14 BL 0x2BBDDA0
	0x03990B18 TBZ X0, 0x0, 0x3990B4C
	0x03990B1C LDR X0, [X21 + 0x80]
	0x03990B20 CBZ X0, 0x3990B74
	0x03990B24 LDR W22, [X31 + 0x30]
	0x03990B28 LDR X2, [X25]
	0x03990B2C MOV W1, W22
	0x03990B30 BL 0x2B4260C
	0x03990B34 CMP W22, W20
	0x03990B38 B.GE 0x3990B4C
	0x03990B3C LDRB W8, [X0 + 0x1C]
	0x03990B40 LDRB W9, [X0 + 0x1D]
	0x03990B44 ORR W8, W9, W8, 0x0
	0x03990B48 TBZ X8, 0x0, 0x3990B08
	0x03990B4C LDR X1, [X23]
	0x03990B50 ADD X0, X31, 0x20
	0x03990B54 BL 0x2BBDD9C
	0x03990B58 MOV W0, W19
	0x03990B5C LDP X20, X19, [X31 + 0x70]
	0x03990B60 LDP X22, X21, [X31 + 0x60]
	0x03990B64 LDP X24, X23, [X31 + 0x50]
	0x03990B68 LDP X30, X25, [X31 + 0x40]
	0x03990B6C ADD X31, X31, 0x80
	0x03990B70 RET
	0x03990B74 BL 0x1C16F20
	0x03990B78 BL 0x1C16F20
	0x03990B7C B 0x3990B84
	0x03990B80 B 0x3990B84
	0x03990B84 MOV X20, X0
	0x03990B88 CMP W1, 0x1
	0x03990B8C B.NE 0x3990BB8
	0x03990B90 MOV X0, X20
	0x03990B94 BL 0x3EB1AD0
	0x03990B98 LDR X21, [X0]
	0x03990B9C BL 0x3EB1AE0
	0x03990BA0 LDR X1, [X23]
	0x03990BA4 ADD X0, X31, 0x20
	0x03990BA8 BL 0x2BBDD9C
	0x03990BAC CBZ X21, 0x3990B58
	0x03990BB0 MOV X0, X21
	0x03990BB4 BL 0x1C16F18
	0x03990BB8 MOV X21, X31
	0x03990BBC B 0x3990BC4
	0x03990BC0 MOV X20, X0
	0x03990BC4 LDR X1, [X23]
	0x03990BC8 ADD X0, X31, 0x20
	0x03990BCC BL 0x2BBDD9C
	0x03990BD0 CBNZ X21, 0x3990BDC
	0x03990BD4 MOV X0, X20
	0x03990BD8 BL 0x1D2C690
	0x03990BDC MOV X0, X21
	0x03990BE0 BL 0x1C16F18
	0x03990BE4 BL 0x1990590
	0x03990BE8 SUB X31, X31, 0x80
	0x03990BEC STR X30, [X31 + 0x40]
	0x03990BF0 STP X24, X23, [X31 + 0x50]
	0x03990BF4 STP X22, X21, [X31 + 0x60]
	0x03990BF8 STP X20, X19, [X31 + 0x70]
	0x03990BFC ADRP X22, 0xA51000
	0x03990C00 LDRB W8, [X22 + 0xAB3]
	0x03990C04 MOV X21, X2
	0x03990C08 MOV W19, W1
	0x03990C0C MOV X20, X0
	0x03990C10 TBNZ X8, 0x0, 0x3990C58
	0x03990C14 ADRP X0, 0x7C0000
	0x03990C18 LDR X0, [X0 + 0xB28]
	0x03990C1C BL 0x1C16CF4
	0x03990C20 ADRP X0, 0x78E000
	0x03990C24 LDR X0, [X0 + 0xB18]
	0x03990C28 BL 0x1C16CF4
	0x03990C2C ADRP X0, 0x78E000
	0x03990C30 LDR X0, [X0 + 0xB28]
	0x03990C34 BL 0x1C16CF4
	0x03990C38 ADRP X0, 0x78E000
	0x03990C3C LDR X0, [X0 + 0xB38]
	0x03990C40 BL 0x1C16CF4
	0x03990C44 ADRP X0, 0x78E000
	0x03990C48 LDR X0, [X0 + 0xB50]
	0x03990C4C BL 0x1C16CF4
	0x03990C50 MOVZ W8, 0x1
	0x03990C54 STRB W8, [X22 + 0xAB3]
	0x03990C58 STP X31, X31, [X31 + 0x20]
	0x03990C5C STR X31, [X31 + 0x30]
	0x03990C60 LDR X0, [X21 + 0x8]
	0x03990C64 CBZ X0, 0x3990D10
	0x03990C68 ADRP X8, 0x78E000
	0x03990C6C LDR X8, [X8 + 0xB50]
	0x03990C70 ADRP X23, 0x78E000
	0x03990C74 ADRP X24, 0x7C0000
	0x03990C78 ADRP X22, 0x78E000
	0x03990C7C LDR X1, [X8]
	0x03990C80 LDR X23, [X23 + 0xB28]
	0x03990C84 LDR X24, [X24 + 0xB28]
	0x03990C88 LDR X22, [X22 + 0xB18]
	0x03990C8C ADD X8, X31, 0x8
	0x03990C90 BL 0x2FDD2BC
	0x03990C94 LDUR V0, [X31 + 0x8]
	0x03990C98 LDR X8, [X31 + 0x18]
	0x03990C9C STR V0, [X31 + 0x2]
	0x03990CA0 STR X8, [X31 + 0x30]
	0x03990CA4 LDR X1, [X23]
	0x03990CA8 ADD X0, X31, 0x20
	0x03990CAC BL 0x2BBDDA0
	0x03990CB0 TBZ X0, 0x0, 0x3990CE0
	0x03990CB4 LDR W21, [X31 + 0x30]
	0x03990CB8 CMP W21, W19
	0x03990CBC B.LE 0x3990CA4
	0x03990CC0 LDR X0, [X20 + 0x80]
	0x03990CC4 CBZ X0, 0x3990D0C
	0x03990CC8 LDR X2, [X24]
	0x03990CCC MOV W1, W21
	0x03990CD0 BL 0x2B4260C
	0x03990CD4 LDRB W8, [X0 + 0x1C]
	0x03990CD8 CBNZ W8, 0x3990CA4
	0x03990CDC B 0x3990CE4
	0x03990CE0 MOVN W21, 0x0
	0x03990CE4 LDR X1, [X22]
	0x03990CE8 ADD X0, X31, 0x20
	0x03990CEC BL 0x2BBDD9C
	0x03990CF0 MOV W0, W21
	0x03990CF4 LDP X20, X19, [X31 + 0x70]
	0x03990CF8 LDP X22, X21, [X31 + 0x60]
	0x03990CFC LDP X24, X23, [X31 + 0x50]
	0x03990D00 LDR X30, [X31 + 0x40]
	0x03990D04 ADD X31, X31, 0x80
	0x03990D08 RET
	0x03990D0C BL 0x1C16F20
	0x03990D10 BL 0x1C16F20
	0x03990D14 B 0x3990D1C
	0x03990D18 B 0x3990D1C
	0x03990D1C MOV X19, X0
	0x03990D20 CMP W1, 0x1
	0x03990D24 B.NE 0x3990D50
	0x03990D28 MOV X0, X19
	0x03990D2C BL 0x3EB1AD0
	0x03990D30 LDR X20, [X0]
	0x03990D34 BL 0x3EB1AE0
	0x03990D38 LDR X1, [X22]
	0x03990D3C ADD X0, X31, 0x20
	0x03990D40 BL 0x2BBDD9C
	0x03990D44 CBNZ X20, 0x3990D58
	0x03990D48 MOVN W21, 0x0
	0x03990D4C B 0x3990CF0
	0x03990D50 MOV X20, X31
	0x03990D54 B 0x3990D64
	0x03990D58 MOV X0, X20
	0x03990D5C BL 0x1C16F18
	0x03990D60 MOV X19, X0
	0x03990D64 LDR X1, [X22]
	0x03990D68 ADD X0, X31, 0x20
	0x03990D6C BL 0x2BBDD9C
	0x03990D70 CBNZ X20, 0x3990D7C
	0x03990D74 MOV X0, X19
	0x03990D78 BL 0x1D2C690
	0x03990D7C MOV X0, X20
	0x03990D80 BL 0x1C16F18
	0x03990D84 BL 0x1990590
	0x03990D88 STR X30, [X31 - 0x50]!
	0x03990D8C STP X26, X25, [X31 + 0x10]
	0x03990D90 STP X24, X23, [X31 + 0x20]
	0x03990D94 STP X22, X21, [X31 + 0x30]
	0x03990D98 STP X20, X19, [X31 + 0x40]
	0x03990D9C ADRP X23, 0xA51000
	0x03990DA0 LDRB W8, [X23 + 0xAB4]
	0x03990DA4 MOV X19, X3

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0xA52000
	015 Move W8, [X20+2736]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x7C1000
	022 Move X0, [X0+2856]
	023 Call 0x1C17CF4
	024 Move X0, 0x7C1000
	025 Move X0, [X0+3040]
	026 Call 0x1C17CF4
	027 Move X0, 0x7C1000
	028 Move X0, [X0+2864]
	029 Call 0x1C17CF4
	030 Move X0, 0x7C1000
	031 Move X0, [X0+3064]
	032 Call 0x1C17CF4
	033 Move X0, 0x7C1000
	034 Move X0, [X0+3072]
	035 Call 0x1C17CF4
	036 Move X0, 0x7C1000
	037 Move X0, [X0+3080]
	038 Call 0x1C17CF4
	039 Move X0, 0x765000
	040 Move X0, [X0+3600]
	041 Call 0x1C17CF4
	042 Move X0, 0x7C1000
	043 Move X0, [X0+3088]
	044 Call 0x1C17CF4
	045 Move X0, 0x78F000
	046 Move X0, [X0+1840]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+2736], W8
	050 Move [X31+48], X31
	051 Move [X31+56], X31
	052 Move [X31+64], X31
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move X0, [X19+128]
	056 Compare X0, 0
	057 JumpIfEqual {416}
	058 Move X27, 0x7C1000
	059 Move X28, 0x78F000
	060 Move X29, 0x7C1000
	061 Move X25, 0x765000
	062 Move X27, [X27+3072]
	063 Move X28, [X28+1840]
	064 Move X29, [X29+3040]
	065 Move X25, [X25+3600]
	066 Move W20, W31
	067 Move W8, [X0+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X8, 0x7C1000
	070 Move X8, [X8+2856]
	071 Move W1, W20
	072 Move X2, [X8]
	073 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	074 Move X21, X0
	075 Move W24, W31
	076 Move X8, [X21]
	077 Compare X8, 0
	078 JumpIfEqual {416}
	079 Move X8, [X8+80]
	080 Compare X8, 0
	081 JumpIfEqual {416}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X26, W24
	085 Add X8, X8, X26
	086 Move X0, [X8+32]
	087 Compare X0, 0
	088 JumpIfEqual {416}
	089 Move X8, 0x7C1000
	090 Move X8, [X8+3088]
	091 Move X1, [X8]
	092 Add X8, X31, 8
	093 Call List`1<ResourceHandle>.GetEnumerator, X0
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move X8, [X31+24]
	096 Move [X31+3], V0
	097 Move [X31+64], X8
	098 Move X1, [X27]
	099 Add X0, X31, 48
	100 Call Enumerator<ResourceHandle>.MoveNext, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {161}
	105 Move X22, [X31+64]
	106 Move [X31+40], X22
	107 Move X8, [X19+120]
	108 Compare X8, 0
	109 JumpIfEqual {364}
	110 Move W9, [X8+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, [X28]
	113 Add X8, X8, X26
	114 Move X23, [X8+32]
	115 Move W9, [X0+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X22
	120 Call ResourceHandle.op_Implicit, X0
	121 Move W1, W0
	122 Compare X23, 0
	123 JumpIfEqual {365}
	124 Move X2, [X29]
	125 Move X0, X23
	126 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	127 Move X22, X0
	128 Move X0, [X19+16]
	129 Compare X0, 0
	130 JumpIfEqual {362}
	131 Add X1, X31, 40
	132 Call RenderGraphResourceRegistry.IsRenderGraphResourceImported, X0, X1
	133 Move W8, W0
	134 Move X0, [X22+8]
	135 And W8, W8, 1
	136 Move [X22+20], W8
	137 Compare X0, 0
	138 JumpIfEqual {363}
	139 Move W10, [X0+28]
	140 Move X8, [X0+16]
	141 Move X9, [X25]
	142 Add W10, W10, 1
	143 Move [X0+28], W10
	144 Compare X8, 0
	145 JumpIfEqual {361}
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Move W11, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add W9, W10, 1
	150 Add X8, X8, X10
	151 Move [X0+24], W9
	152 Move [X8+32], W20
	153 Move X8, [X9+32]
	154 Move X8, [X8+192]
	155 Move X2, [X8+112]
	156 Move W1, W20
	157 Call List`1<Int32>.AddWithResize, X0, X1
	158 Move W8, [X22+16]
	159 Add W8, W8, 1
	160 Move [X22+16], W8
	161 Move X8, 0x7C1000
	162 Move X8, [X8+3064]
	163 Add X0, X31, 48
	164 Move X1, [X8]
	165 Call Enumerator<ResourceHandle>.Dispose, X0
	166 Move X8, [X21]
	167 Compare X8, 0
	168 JumpIfEqual {416}
	169 Move X8, [X8+88]
	170 Compare X8, 0
	171 JumpIfEqual {416}
	172 Move W9, [X8+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X8, X8, X26
	175 Move X0, [X8+32]
	176 Compare X0, 0
	177 JumpIfEqual {416}
	178 Move X8, 0x7C1000
	179 Move X8, [X8+3088]
	180 Move X1, [X8]
	181 Add X8, X31, 8
	182 Call List`1<ResourceHandle>.GetEnumerator, X0
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 Move X8, [X31+24]
	185 Move [X31+3], V0
	186 Move [X31+64], X8
	187 Move X1, [X27]
	188 Add X0, X31, 48
	189 Call Enumerator<ResourceHandle>.MoveNext, X0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {252}
	194 Move X22, [X31+64]
	195 Move [X31+32], X22
	196 Move X8, [X19+120]
	197 Compare X8, 0
	198 JumpIfEqual {370}
	199 Move W9, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, [X28]
	202 Add X8, X8, X26
	203 Move X23, [X8+32]
	204 Move W9, [X0+224]
	205 Compare W9, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X0, X22
	209 Call ResourceHandle.op_Implicit, X0
	210 Move W1, W0
	211 Compare X23, 0
	212 JumpIfEqual {371}
	213 Move X2, [X29]
	214 Move X0, X23
	215 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	216 Move X22, X0
	217 Move X0, [X19+16]
	218 Compare X0, 0
	219 JumpIfEqual {368}
	220 Add X1, X31, 32
	221 Call RenderGraphResourceRegistry.IsRenderGraphResourceImported, X0, X1
	222 Move W8, W0
	223 Move X0, [X22]
	224 And W8, W8, 1
	225 Move [X22+20], W8
	226 Compare X0, 0
	227 JumpIfEqual {369}
	228 Move W11, [X0+28]
	229 Move X9, [X0+16]
	230 Move X10, [X25]
	231 Add W11, W11, 1
	232 Move [X0+28], W11
	233 Compare X9, 0
	234 JumpIfEqual {367}
	235 NotImplemented "Instruction LDRSW not yet implemented."
	236 Move W12, [X9+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Add W10, W11, 1
	239 Add X9, X9, X11
	240 Move [X0+24], W10
	241 Move [X9+32], W20
	242 Move X8, [X10+32]
	243 Move X8, [X8+192]
	244 Move X2, [X8+112]
	245 Move W1, W20
	246 Call List`1<Int32>.AddWithResize, X0, X1
	247 Move W8, [X22+20]
	248 Move W9, [X21+24]
	249 Move [X21+30], W8
	250 Add W8, W9, 1
	251 Move [X21+24], W8
	252 Move X8, 0x7C1000
	253 Move X8, [X8+3064]
	254 Add X0, X31, 48
	255 Move X1, [X8]
	256 Call Enumerator<ResourceHandle>.Dispose, X0
	257 Move X8, [X21]
	258 Compare X8, 0
	259 JumpIfEqual {416}
	260 Move X8, [X8+96]
	261 Compare X8, 0
	262 JumpIfEqual {416}
	263 Move W9, [X8+24]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Add X8, X8, X26
	266 Move X0, [X8+32]
	267 Compare X0, 0
	268 JumpIfEqual {416}
	269 Move X8, 0x7C1000
	270 Move X8, [X8+3088]
	271 Move X1, [X8]
	272 Add X8, X31, 8
	273 Call List`1<ResourceHandle>.GetEnumerator, X0
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 Move X8, [X31+24]
	276 Move [X31+3], V0
	277 Move [X31+64], X8
	278 Move X1, [X27]
	279 Add X0, X31, 48
	280 Call Enumerator<ResourceHandle>.MoveNext, X0
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfNotEqual {353}
	285 Move X0, [X28]
	286 Move X22, [X31+64]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X0, X22
	292 Call ResourceHandle.op_Implicit, X0
	293 Move W1, W0
	294 Move X8, [X19+120]
	295 Compare X8, 0
	296 JumpIfEqual {375}
	297 Move W9, [X8+24]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Add X8, X8, X26
	300 Move X0, [X8+32]
	301 Compare X0, 0
	302 JumpIfEqual {376}
	303 Move X2, [X29]
	304 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	305 Move W8, [X0+16]
	306 Move X22, X0
	307 Move X0, [X0+8]
	308 Add W8, W8, 1
	309 Move [X22+16], W8
	310 Compare X0, 0
	311 JumpIfEqual {373}
	312 Move W10, [X0+28]
	313 Move X8, [X0+16]
	314 Move X9, [X25]
	315 Add W10, W10, 1
	316 Move [X0+28], W10
	317 Compare X8, 0
	318 JumpIfEqual {374}
	319 NotImplemented "Instruction LDRSW not yet implemented."
	320 Move W11, [X8+24]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Add W9, W10, 1
	323 Add X8, X8, X10
	324 Move [X0+24], W9
	325 Move [X8+32], W20
	326 Move X8, [X9+32]
	327 Move X8, [X8+192]
	328 Move X2, [X8+112]
	329 Move W1, W20
	330 Call List`1<Int32>.AddWithResize, X0, X1
	331 Move X0, [X22]
	332 Compare X0, 0
	333 JumpIfEqual {372}
	334 Move W10, [X0+28]
	335 Move X8, [X0+16]
	336 Move X9, [X25]
	337 Add W10, W10, 1
	338 Move [X0+28], W10
	339 Compare X8, 0
	340 JumpIfEqual {377}
	341 NotImplemented "Instruction LDRSW not yet implemented."
	342 Move W11, [X8+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Add W9, W10, 1
	345 Add X8, X8, X10
	346 Move [X0+24], W9
	347 Move [X8+32], W20
	348 Move X8, [X9+32]
	349 Move X8, [X8+192]
	350 Move X2, [X8+112]
	351 Move W1, W20
	352 Call List`1<Int32>.AddWithResize, X0, X1
	353 Move X8, 0x7C1000
	354 Move X8, [X8+3064]
	355 Add X0, X31, 48
	356 Move X1, [X8]
	357 Call Enumerator<ResourceHandle>.Dispose, X0
	358 Add W24, W24, 1
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Call 0x1C17F28
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F28
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Call 0x1C17F28
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Call 0x3EB2AD0
	381 Move X22, [X0]
	382 Call 0x3EB2AE0
	383 Move X8, 0x7C1000
	384 Move X8, [X8+3064]
	385 Add X0, X31, 48
	386 Move X1, [X8]
	387 Call Enumerator<ResourceHandle>.Dispose, X0
	388 Compare X22, 0
	389 JumpIfEqual {358}
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Call 0x3EB2AD0
	392 Move X22, [X0]
	393 Call 0x3EB2AE0
	394 Move X8, 0x7C1000
	395 Move X8, [X8+3064]
	396 Add X0, X31, 48
	397 Move X1, [X8]
	398 Call Enumerator<ResourceHandle>.Dispose, X0
	399 Compare X22, 0
	400 JumpIfEqual {257}
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Call 0x3EB2AD0
	403 Move X22, [X0]
	404 Call 0x3EB2AE0
	405 Move X8, 0x7C1000
	406 Move X8, [X8+3064]
	407 Add X0, X31, 48
	408 Move X1, [X8]
	409 Call Enumerator<ResourceHandle>.Dispose, X0
	410 Compare X22, 0
	411 JumpIfEqual {166}
	412 Move X0, [X19+128]
	413 Add W20, W20, 1
	414 Compare X0, 0
	415 JumpIfNotEqual {67}
	416 Call 0x1C17F20
	417 Move X20, [X31+160]
	418 Move X19, [X31+168]
	419 Move X22, [X31+144]
	420 Move X21, [X31+152]
	421 Move X24, [X31+128]
	422 Move X23, [X31+136]
	423 Move X26, [X31+112]
	424 Move X25, [X31+120]
	425 Move X28, [X31+96]
	426 Move X27, [X31+104]
	427 Move X29, [X31+80]
	428 Move X30, [X31+88]
	429 Add X31, X31, 176
	430 Return 
	431 Call 0x1C17F28
	432 Move X0, X22
	433 Call 0x1C17F18
	434 Move X19, X0
	435 Move X22, X31
	436 Move X19, X0
	437 Move X22, X31
	438 Move X19, X0
	439 Move X22, X31
	440 Move X19, X0
	441 Move X8, 0x7C1000
	442 Move X8, [X8+3064]
	443 Move X1, [X8]
	444 Add X0, X31, 48
	445 Call Enumerator<ResourceHandle>.Dispose, X0
	446 Compare X22, 0
	447 JumpIfEqual {468}
	448 Move X0, X22
	449 Call 0x1C17F18
	450 Move X19, X0
	451 Move X8, 0x7C1000
	452 Move X8, [X8+3064]
	453 Move X1, [X8]
	454 Add X0, X31, 48
	455 Call Enumerator<ResourceHandle>.Dispose, X0
	456 Compare X22, 0
	457 JumpIfEqual {468}
	458 Move X0, X22
	459 Call 0x1C17F18
	460 Move X19, X0
	461 Move X8, 0x7C1000
	462 Move X8, [X8+3064]
	463 Move X1, [X8]
	464 Add X0, X31, 48
	465 Call Enumerator<ResourceHandle>.Dispose, X0
	466 Compare X22, 0
	467 JumpIfNotEqual {470}
	468 Move X0, X19
	469 Call 0x1D2D690
	470 Move X0, X22
	471 Call 0x1C17F18
	472 Call 0x1991590

Method: System.Void CullUnusedPasses()

Disassembly:
	0x03990ED0 LDR X0, [X0 + 0xE28]
	0x03990ED4 BL 0x1C16CF4
	0x03990ED8 ADRP X0, 0x78D000
	0x03990EDC LDR X0, [X0 + 0xF38]
	0x03990EE0 BL 0x1C16CF4
	0x03990EE4 MOVZ W8, 0x1
	0x03990EE8 STRB W8, [X21 + 0xAB6]
	0x03990EEC LDR X20, [X20 + 0x8]
	0x03990EF0 CBZ X20, 0x3990F7C
	0x03990EF4 LDR W21, [X20 + 0x18]
	0x03990EF8 CBZ W21, 0x3990F64
	0x03990EFC ADRP X23, 0x78D000
	0x03990F00 ADRP X24, 0x7C0000
	0x03990F04 LDR X23, [X23 + 0xF38]
	0x03990F08 LDR X24, [X24 + 0xB28]
	0x03990F0C SUBS W21, W21, 0x1
	0x03990F10 B.MI 0x3990F64
	0x03990F14 LDR X2, [X23]
	0x03990F18 LDR X22, [X19 + 0x80]
	0x03990F1C MOV X0, X20
	0x03990F20 MOV W1, W21
	0x03990F24 BL 0x2FDC41C
	0x03990F28 CBZ X22, 0x3990F7C
	0x03990F2C LDR X2, [X24]
	0x03990F30 MOV W1, W0
	0x03990F34 MOV X0, X22
	0x03990F38 BL 0x2B4260C
	0x03990F3C LDRB W8, [X0 + 0x1C]
	0x03990F40 CBNZ W8, 0x3990F0C
	0x03990F44 LDR X2, [X23]
	0x03990F48 MOV X0, X20
	0x03990F4C MOV W1, W21
	0x03990F50 LDP X20, X19, [X31 + 0x30]
	0x03990F54 LDP X22, X21, [X31 + 0x20]
	0x03990F58 LDP X24, X23, [X31 + 0x10]
	0x03990F5C LDR X30, [X31], #0x40
	0x03990F60 B 0x2FDC41C
	0x03990F64 LDP X20, X19, [X31 + 0x30]
	0x03990F68 LDP X22, X21, [X31 + 0x20]
	0x03990F6C LDP X24, X23, [X31 + 0x10]
	0x03990F70 MOVN W0, 0x0
	0x03990F74 LDR X30, [X31], #0x40
	0x03990F78 RET
	0x03990F7C BL 0x1C16F20
	0x03990F80 STR X30, [X31 - 0x40]!
	0x03990F84 STP X24, X23, [X31 + 0x10]
	0x03990F88 STP X22, X21, [X31 + 0x20]
	0x03990F8C STP X20, X19, [X31 + 0x30]
	0x03990F90 ADRP X21, 0xA51000
	0x03990F94 LDRB W8, [X21 + 0xAB7]
	0x03990F98 MOV X20, X1
	0x03990F9C MOV X19, X0
	0x03990FA0 TBNZ X8, 0x0, 0x3990FD0
	0x03990FA4 ADRP X0, 0x7C0000
	0x03990FA8 LDR X0, [X0 + 0xB28]
	0x03990FAC BL 0x1C16CF4
	0x03990FB0 ADRP X0, 0x764000
	0x03990FB4 LDR X0, [X0 + 0xE28]
	0x03990FB8 BL 0x1C16CF4
	0x03990FBC ADRP X0, 0x78D000
	0x03990FC0 LDR X0, [X0 + 0xF38]
	0x03990FC4 BL 0x1C16CF4
	0x03990FC8 MOVZ W8, 0x1
	0x03990FCC STRB W8, [X21 + 0xAB7]
	0x03990FD0 LDR X20, [X20]
	0x03990FD4 CBZ X20, 0x3991070
	0x03990FD8 LDR W8, [X20 + 0x18]
	0x03990FDC CMP W8, 0x1
	0x03990FE0 B.LT 0x3991038
	0x03990FE4 ADRP X23, 0x78D000
	0x03990FE8 ADRP X24, 0x7C0000
	0x03990FEC LDR X23, [X23 + 0xF38]
	0x03990FF0 LDR X24, [X24 + 0xB28]
	0x03990FF4 MOV W21, W31
	0x03990FF8 LDR X2, [X23]
	0x03990FFC LDR X22, [X19 + 0x80]
	0x03991000 MOV X0, X20
	0x03991004 MOV W1, W21
	0x03991008 BL 0x2FDC41C
	0x0399100C CBZ X22, 0x3991070
	0x03991010 LDR X2, [X24]
	0x03991014 MOV W1, W0
	0x03991018 MOV X0, X22
	0x0399101C BL 0x2B4260C
	0x03991020 LDRB W8, [X0 + 0x1C]
	0x03991024 CBZ W8, 0x3991050
	0x03991028 LDR W8, [X20 + 0x18]
	0x0399102C ADD W21, W21, 0x1
	0x03991030 CMP W21, W8
	0x03991034 B.LT 0x3990FF8
	0x03991038 LDP X20, X19, [X31 + 0x30]
	0x0399103C LDP X22, X21, [X31 + 0x20]
	0x03991040 LDP X24, X23, [X31 + 0x10]
	0x03991044 MOVN W0, 0x0
	0x03991048 LDR X30, [X31], #0x40
	0x0399104C RET
	0x03991050 LDR X2, [X23]
	0x03991054 MOV X0, X20
	0x03991058 MOV W1, W21
	0x0399105C LDP X20, X19, [X31 + 0x30]
	0x03991060 LDP X22, X21, [X31 + 0x20]
	0x03991064 LDP X24, X23, [X31 + 0x10]
	0x03991068 LDR X30, [X31], #0x40
	0x0399106C B 0x2FDC41C
	0x03991070 BL 0x1C16F20
	0x03991074 STR X30, [X31 - 0x40]!
	0x03991078 STP X24, X23, [X31 + 0x10]
	0x0399107C STP X22, X21, [X31 + 0x20]
	0x03991080 STP X20, X19, [X31 + 0x30]
	0x03991084 ADRP X21, 0xA50000
	0x03991088 LDRB W8, [X21 + 0xAB8]
	0x0399108C MOV X20, X1
	0x03991090 MOV X19, X0
	0x03991094 TBNZ X8, 0x0, 0x39910C4
	0x03991098 ADRP X0, 0x7BF000
	0x0399109C LDR X0, [X0 + 0xB28]
	0x039910A0 BL 0x1C16CF4
	0x039910A4 ADRP X0, 0x763000
	0x039910A8 LDR X0, [X0 + 0xE28]
	0x039910AC BL 0x1C16CF4
	0x039910B0 ADRP X0, 0x78C000
	0x039910B4 LDR X0, [X0 + 0xF38]
	0x039910B8 BL 0x1C16CF4
	0x039910BC MOVZ W8, 0x1
	0x039910C0 STRB W8, [X21 + 0xAB8]
	0x039910C4 LDR X20, [X20]
	0x039910C8 CBZ X20, 0x3991154
	0x039910CC LDR W21, [X20 + 0x18]
	0x039910D0 CBZ W21, 0x399113C
	0x039910D4 ADRP X23, 0x78C000
	0x039910D8 ADRP X24, 0x7BF000
	0x039910DC LDR X23, [X23 + 0xF38]
	0x039910E0 LDR X24, [X24 + 0xB28]
	0x039910E4 SUBS W21, W21, 0x1
	0x039910E8 B.MI 0x399113C
	0x039910EC LDR X2, [X23]
	0x039910F0 LDR X22, [X19 + 0x80]
	0x039910F4 MOV X0, X20
	0x039910F8 MOV W1, W21
	0x039910FC BL 0x2FDC41C
	0x03991100 CBZ X22, 0x3991154
	0x03991104 LDR X2, [X24]
	0x03991108 MOV W1, W0
	0x0399110C MOV X0, X22
	0x03991110 BL 0x2B4260C
	0x03991114 LDRB W8, [X0 + 0x1C]
	0x03991118 CBNZ W8, 0x39910E4
	0x0399111C LDR X2, [X23]
	0x03991120 MOV X0, X20
	0x03991124 MOV W1, W21
	0x03991128 LDP X20, X19, [X31 + 0x30]
	0x0399112C LDP X22, X21, [X31 + 0x20]
	0x03991130 LDP X24, X23, [X31 + 0x10]
	0x03991134 LDR X30, [X31], #0x40
	0x03991138 B 0x2FDC41C
	0x0399113C LDP X20, X19, [X31 + 0x30]
	0x03991140 LDP X22, X21, [X31 + 0x20]
	0x03991144 LDP X24, X23, [X31 + 0x10]
	0x03991148 MOVN W0, 0x0
	0x0399114C LDR X30, [X31], #0x40
	0x03991150 RET
	0x03991154 BL 0x1C16F20
	0x03991158 STR X30, [X31 - 0x30]!
	0x0399115C STP X22, X21, [X31 + 0x10]
	0x03991160 STP X20, X19, [X31 + 0x20]
	0x03991164 ADRP X20, 0xA50000
	0x03991168 LDRB W8, [X20 + 0xAB9]
	0x0399116C MOV X19, X0
	0x03991170 TBNZ X8, 0x0, 0x39911A0
	0x03991174 ADRP X0, 0x7BF000
	0x03991178 LDR X0, [X0 + 0xB28]
	0x0399117C BL 0x1C16CF4
	0x03991180 ADRP X0, 0x7BF000
	0x03991184 LDR X0, [X0 + 0xB30]
	0x03991188 BL 0x1C16CF4
	0x0399118C ADRP X0, 0x7BF000
	0x03991190 LDR X0, [X0 + 0xC48]
	0x03991194 BL 0x1C16CF4
	0x03991198 MOVZ W8, 0x1
	0x0399119C STRB W8, [X20 + 0xAB9]
	0x039911A0 LDR X0, [X19 + 0x80]
	0x039911A4 CBZ X0, 0x3991234
	0x039911A8 ADRP X21, 0x7BF000
	0x039911AC ADRP X22, 0x7BF000
	0x039911B0 LDR X21, [X21 + 0xB28]
	0x039911B4 LDR X22, [X22 + 0xC48]
	0x039911B8 MOV W20, W31
	0x039911BC LDR W8, [X0 + 0x18]
	0x039911C0 CMP W20, W8
	0x039911C4 B.GE 0x3991208
	0x039911C8 LDR X2, [X21]
	0x039911CC MOV W1, W20
	0x039911D0 BL 0x2B4260C
	0x039911D4 LDRB W8, [X0 + 0x1C]
	0x039911D8 CBNZ W8, 0x39911F8
	0x039911DC LDR X8, [X0]
	0x039911E0 CBZ X8, 0x3991234
	0x039911E4 LDR X0, [X19 + 0x28]
	0x039911E8 CBZ X0, 0x3991234
	0x039911EC LDR X1, [X8 + 0x68]
	0x039911F0 LDR X2, [X22]
	0x039911F4 BL 0x3047190
	0x039911F8 LDR X0, [X19 + 0x80]
	0x039911FC ADD W20, W20, 0x1
	0x03991200 CBNZ X0, 0x39911BC
	0x03991204 B 0x3991234
	0x03991208 LDR X8, [X19 + 0x58]
	0x0399120C CBZ X8, 0x3991234
	0x03991210 LDR X0, [X19 + 0x10]
	0x03991214 CBZ X0, 0x3991234
	0x03991218 LDR X1, [X19 + 0x28]
	0x0399121C LDRB W3, [X19 + 0xA8]
	0x03991220 LDR X2, [X8 + 0x10]
	0x03991224 LDP X20, X19, [X31 + 0x20]
	0x03991228 LDP X22, X21, [X31 + 0x10]
	0x0399122C LDR X30, [X31], #0x30
	0x03991230 B 0x3991238
	0x03991234 BL 0x1C16F20
	0x03991238 STR X29, [X31 - 0x60]!
	0x0399123C STP X30, X27, [X31 + 0x10]
	0x03991240 STP X26, X25, [X31 + 0x20]
	0x03991244 STP X24, X23, [X31 + 0x30]
	0x03991248 STP X22, X21, [X31 + 0x40]
	0x0399124C STP X20, X19, [X31 + 0x50]
	0x03991250 SUB X31, X31, 0x240
	0x03991254 ADRP X22, 0xA50000
	0x03991258 LDRB W8, [X22 + 0xB21]
	0x0399125C MOV W20, W3
	0x03991260 MOV X21, X1
	0x03991264 MOV X19, X0
	0x03991268 STR X2, [X31 + 0x248]
	0x0399126C TBNZ X8, 0x0, 0x39912D8
	0x03991270 ADRP X0, 0x7BF000
	0x03991274 LDR X0, [X0 + 0xC50]
	0x03991278 BL 0x1C16CF4
	0x0399127C ADRP X0, 0x7BF000
	0x03991280 LDR X0, [X0 + 0xC58]
	0x03991284 BL 0x1C16CF4
	0x03991288 ADRP X0, 0x7BF000
	0x0399128C LDR X0, [X0 + 0xC60]
	0x03991290 BL 0x1C16CF4
	0x03991294 ADRP X0, 0x7BF000
	0x03991298 LDR X0, [X0 + 0xC68]
	0x0399129C BL 0x1C16CF4
	0x039912A0 ADRP X0, 0x7BF000
	0x039912A4 LDR X0, [X0 + 0xC70]
	0x039912A8 BL 0x1C16CF4
	0x039912AC ADRP X0, 0x7BF000
	0x039912B0 LDR X0, [X0 + 0xBC0]
	0x039912B4 BL 0x1C16CF4
	0x039912B8 ADRP X0, 0x7BF000
	0x039912BC LDR X0, [X0 + 0xC78]
	0x039912C0 BL 0x1C16CF4
	0x039912C4 ADRP X0, 0x7BF000
	0x039912C8 LDR X0, [X0 + 0xC80]
	0x039912CC BL 0x1C16CF4
	0x039912D0 MOVZ W8, 0x1
	0x039912D4 STRB W8, [X22 + 0xB21]
	0x039912D8 STP X31, X31, [X31 + 0x1E0]
	0x039912DC STR X31, [X31 + 0x1F0]
	0x039912E0 LDR X8, [X19 + 0x48]
	0x039912E4 CBZ X8, 0x39914C8
	0x039912E8 LDR W9, [X8 + 0x1C]
	0x039912EC ADD W9, W9, 0x1
	0x039912F0 STP W31, W9, [X8 + 0x18]
	0x039912F4 CBZ X21, 0x39914C8
	0x039912F8 ADRP X8, 0x7BF000
	0x039912FC LDR X8, [X8 + 0xC78]
	0x03991300 ADRP X22, 0x7BF000
	0x03991304 ADRP X25, 0x7BF000
	0x03991308 LDR X22, [X22 + 0xC60]
	0x0399130C LDR X25, [X25 + 0xC50]
	0x03991310 LDR X1, [X8]
	0x03991314 ADRP X23, 0x7BF000
	0x03991318 ADRP X26, 0x7BF000
	0x0399131C ADRP X24, 0x7BF000
	0x03991320 LDR X23, [X23 + 0xC80]
	0x03991324 LDR X26, [X26 + 0xC70]
	0x03991328 LDR X24, [X24 + 0xC58]
	0x0399132C ADD X8, X31, 0x110
	0x03991330 MOV X0, X21
	0x03991334 BL 0x3047B34
	0x03991338 LDR V0, [X31 + 0x11]
	0x0399133C LDR X8, [X31 + 0x120]
	0x03991340 MOVZ W27, 0x18
	0x03991344 STR V0, [X31 + 0x1E]
	0x03991348 STR X8, [X31 + 0x1F0]
	0x0399134C LDR X1, [X22]
	0x03991350 ADD X0, X31, 0x1E0
	0x03991354 BL 0x2BC8B00
	0x03991358 TBZ X0, 0x0, 0x3991468
	0x0399135C LDR X0, [X19 + 0x18]
	0x03991360 CBZ X0, 0x39914C0
	0x03991364 LDR W1, [X31 + 0x1F4]
	0x03991368 LDR X2, [X25]
	0x0399136C BL 0x2B40B74
	0x03991370 MOV X21, X0
	0x03991374 ADD X0, X31, 0x110
	0x03991378 MOVZ W2, 0xD0
	0x0399137C MOV X1, X21
	0x03991380 BL 0x3EB1AC0
	0x03991384 LDR X0, [X23]
	0x03991388 LDR W8, [X0 + 0xE0]
	0x0399138C CBNZ W8, 0x3991394
	0x03991390 BL 0x1C16DFC
	0x03991394 ADD X0, X31, 0x20
	0x03991398 ADD X1, X31, 0x110
	0x0399139C MOVZ W2, 0xD0
	0x039913A0 BL 0x3EB1AC0
	0x039913A4 ADD X8, X31, 0x220
	0x039913A8 ADD X0, X31, 0x248
	0x039913AC ADD X1, X31, 0x20
	0x039913B0 MOV X2, X31
	0x039913B4 BL 0x3C59590
	0x039913B8 LDR V0, [X31 + 0x22]
	0x039913BC LDR X8, [X31 + 0x230]
	0x039913C0 STR V0, [X31 + 0xF]
	0x039913C4 STR X8, [X31 + 0x100]
	0x039913C8 STR X8, [X21 + 0xE0]
	0x039913CC STR V0, [X21 + 0xD]
	0x039913D0 LDR X0, [X19 + 0x48]
	0x039913D4 LDR V0, [X31 + 0xF]
	0x039913D8 STR X8, [X31 + 0x10]
	0x039913DC STR V0, [X31]
	0x039913E0 CBZ X0, 0x39914C4
	0x039913E4 LDR V0, [X31]
	0x039913E8 LDR X8, [X31 + 0x10]
	0x039913EC LDR X10, [X26]
	0x039913F0 STR V0, [X31 + 0x20]
	0x039913F4 STR X8, [X31 + 0x210]
	0x039913F8 LDR W9, [X0 + 0x1C]
	0x039913FC LDR X8, [X0 + 0x10]
	0x03991400 ADD W9, W9, 0x1
	0x03991404 STR W9, [X0 + 0x1C]
	0x03991408 CBZ X8, 0x39914BC
	0x0399140C LDRSW X9, [X0 + 0x18]
	0x03991410 LDR W11, [X8 + 0x18]
	0x03991414 CMP W9, W11
	0x03991418 B.CS 0x3991440
	0x0399141C ADD W10, W9, 0x1
	0x03991420 STR W10, [X0 + 0x18]
	0x03991424 LDR X10, [X31 + 0x210]
	0x03991428 LDR V0, [X31 + 0x20]
	0x0399142C NOP
	0x03991430 MADD X8, X9, X27, X8
	0x03991434 STR X10, [X8 + 0x30]
	0x03991438 STR V0, [X8 + 0x2]
	0x0399143C B 0x399134C
	0x03991440 LDR X8, [X10 + 0x20]
	0x03991444 LDR V0, [X31 + 0x20]
	0x03991448 LDR X9, [X31 + 0x210]
	0x0399144C LDR X8, [X8 + 0xC0]
	0x03991450 LDR X2, [X8 + 0x70]
	0x03991454 STR V0, [X31 + 0x22]
	0x03991458 STR X9, [X31 + 0x230]
	0x0399145C ADD X1, X31, 0x220
	0x03991460 BL 0x3043F94
	0x03991464 B 0x399134C
	0x03991468 LDR X1, [X24]
	0x0399146C ADD X0, X31, 0x1E0
	0x03991470 BL 0x2BC8AFC
	0x03991474 TBZ X20, 0x0, 0x399149C
	0x03991478 LDR X0, [X23]
	0x0399147C LDR X19, [X19 + 0x48]
	0x03991480 LDR W8, [X0 + 0xE0]
	0x03991484 CBNZ W8, 0x399148C
	0x03991488 BL 0x1C16DFC
	0x0399148C ADD X0, X31, 0x248
	0x03991490 MOV X1, X19
	0x03991494 MOV X2, X31
	0x03991498 BL 0x3C5A340
	0x0399149C ADD X31, X31, 0x240

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0xA52000
	015 Move W8, [X20+2737]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {77}
	021 Move X0, 0x764000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0x7C1000
	025 Move X0, [X0+2856]
	026 Call 0x1C17CF4
	027 Move X0, 0x7C1000
	028 Move X0, [X0+3040]
	029 Call 0x1C17CF4
	030 Move X0, 0x7C1000
	031 Move X0, [X0+3048]
	032 Call 0x1C17CF4
	033 Move X0, 0x78F000
	034 Move X0, [X0+2840]
	035 Call 0x1C17CF4
	036 Move X0, 0x7C1000
	037 Move X0, [X0+3064]
	038 Call 0x1C17CF4
	039 Move X0, 0x7C1000
	040 Move X0, [X0+3072]
	041 Call 0x1C17CF4
	042 Move X0, 0x78F000
	043 Move X0, [X0+2856]
	044 Call 0x1C17CF4
	045 Move X0, 0x78F000
	046 Move X0, [X0+2872]
	047 Call 0x1C17CF4
	048 Move X0, 0x7C1000
	049 Move X0, [X0+3080]
	050 Call 0x1C17CF4
	051 Move X0, 0x78F000
	052 Move X0, [X0+2896]
	053 Call 0x1C17CF4
	054 Move X0, 0x7C1000
	055 Move X0, [X0+3088]
	056 Call 0x1C17CF4
	057 Move X0, 0x78F000
	058 Move X0, [X0+1840]
	059 Call 0x1C17CF4
	060 Move X0, 0x7C1000
	061 Move X0, [X0+3096]
	062 Call 0x1C17CF4
	063 Move X0, 0x7C1000
	064 Move X0, [X0+3104]
	065 Call 0x1C17CF4
	066 Move X0, 0x7BF000
	067 Move X0, [X0+2760]
	068 Call 0x1C17CF4
	069 Move X0, 0x7C1000
	070 Move X0, [X0+3112]
	071 Call 0x1C17CF4
	072 Move X0, 0x7C1000
	073 Move X0, [X0+3120]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+2737], W8
	077 Move [X31+80], X31
	078 Move [X31+88], X31
	079 Move [X31+96], X31
	080 Move [X31+48], X31
	081 Move [X31+56], X31
	082 Move [X31+64], X31
	083 Move X8, [X19+48]
	084 Compare X8, 0
	085 JumpIfEqual {370}
	086 Move W9, [X8+34]
	087 Compare W9, 0
	088 JumpIfEqual {130}
	089 Move W8, [X8+36]
	090 Compare W8, 0
	091 JumpIfEqual {356}
	092 Move X8, 0x763000
	093 Move X8, [X8+2504]
	094 Move X19, [X19+56]
	095 Move X20, [X8]
	096 Move X8, [X20+56]
	097 Compare X8, 0
	098 JumpIfNotEqual {102}
	099 Move X0, X20
	100 Call 0x1C5D6E0
	101 Move X8, [X20+56]
	102 Move X0, [X8+16]
	103 Move W8, [X0+309]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {109}
	108 Call 0x1C5D684
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X8, [X20+56]
	114 Move X0, [X8+16]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Compare X19, 0
	122 JumpIfEqual {370}
	123 Move X9, 0x7C0000
	124 Move X8, [X0+184]
	125 Move X9, [X9+3120]
	126 Move X0, X19
	127 Move X2, [X8]
	128 Move X1, [X9]
	129 Call RenderGraphLogger.LogLine, X0, X1, X2
	130 Move [X31+16], X31
	131 Move X26, 0x7C0000
	132 Move X27, 0x7BE000
	133 Move X25, 0x78E000
	134 Move X24, 0x7C0000
	135 Move X28, 0x7C0000
	136 Move X29, 0x78E000
	137 Move X26, [X26+3040]
	138 Move X27, [X27+2760]
	139 Move X25, [X25+2856]
	140 Move X24, [X24+2856]
	141 Move X28, [X28+3072]
	142 Move X29, [X29+1840]
	143 Move X8, [X19+120]
	144 Compare X8, 0
	145 JumpIfEqual {370}
	146 Move W9, [X8+24]
	147 Move X10, [X31+16]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X0, [X19+136]
	150 Compare X0, 0
	151 JumpIfEqual {370}
	152 Move X9, [X31+16]
	153 Move X23, W9
	154 Add X8, X8, X23
	155 Move X20, [X8+32]
	156 Move X8, 0x7C0000
	157 Move X8, [X8+3096]
	158 Move X1, [X8]
	159 Call Stack`1<Int32>.Clear, X0
	160 Compare X20, 0
	161 JumpIfEqual {370}
	162 Move W8, [X20+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W21, W31
	165 Move X2, [X26]
	166 Move X0, X20
	167 Move W1, W21
	168 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	169 Move W8, [X0+16]
	170 Compare W8, 0
	171 JumpIfNotEqual {178}
	172 Move X0, [X19+136]
	173 Compare X0, 0
	174 JumpIfEqual {370}
	175 Move X2, [X27]
	176 Move W1, W21
	177 Call Stack`1<Int32>.Push, X0, X1
	178 Move W8, [X20+24]
	179 Add W21, W21, 1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, 0x7C0000
	182 Move X8, [X8+3104]
	183 Move X1, [X8]
	184 Call Stack`1<Int32>.Pop, X0
	185 Move X2, [X26]
	186 Move W1, W0
	187 Move X0, X20
	188 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	189 Move X0, [X0]
	190 Compare X0, 0
	191 JumpIfEqual {370}
	192 Move X8, 0x78E000
	193 Move X8, [X8+2896]
	194 Move X1, [X8]
	195 Add X8, X31, 24
	196 Call List`1<Int32>.GetEnumerator, X0
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 Move X8, [X31+40]
	199 Move [X31+5], V0
	200 Move [X31+96], X8
	201 Move X1, [X25]
	202 Add X0, X31, 80
	203 Call Enumerator<Int32>.MoveNext, X0
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {302}
	208 Move X0, [X19+128]
	209 Compare X0, 0
	210 JumpIfEqual {307}
	211 Move W1, [X31+96]
	212 Move X2, [X24]
	213 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	214 Move W9, [X0+24]
	215 Move X8, X0
	216 Subtract W9, W9, 1
	217 Move [X0+24], W9
	218 Move W9, [X8+30]
	219 Compare W9, 0
	220 JumpIfNotEqual {201}
	221 Move X9, [X8]
	222 Compare X9, 0
	223 JumpIfEqual {320}
	224 Move W10, [X9+41]
	225 Compare W10, 0
	226 JumpIfEqual {201}
	227 Move W10, 1
	228 Move [X8+28], W10
	229 Move X8, [X9+80]
	230 Compare X8, 0
	231 JumpIfEqual {322}
	232 Move W9, [X8+24]
	233 Move X10, [X31+16]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add X8, X8, X23
	236 Move X0, [X8+32]
	237 Compare X0, 0
	238 JumpIfEqual {323}
	239 Move X8, 0x7C0000
	240 Move X8, [X8+3088]
	241 Move X1, [X8]
	242 Add X8, X31, 24
	243 Call List`1<ResourceHandle>.GetEnumerator, X0
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 Move X8, [X31+40]
	246 Move [X31+3], V0
	247 Move [X31+64], X8
	248 Move X1, [X28]
	249 Add X0, X31, 48
	250 Call Enumerator<ResourceHandle>.MoveNext, X0
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {284}
	255 Move X0, [X29]
	256 Move X21, [X31+64]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move X0, X21
	262 Call ResourceHandle.op_Implicit, X0
	263 Move W1, W0
	264 Move X2, [X26]
	265 Move X0, X20
	266 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	267 Move W8, [X0+16]
	268 Subtract W8, W8, 1
	269 Move [X0+16], W8
	270 Move X0, [X29]
	271 Move X22, [X19+136]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {276}
	275 Call 0x1C17DFC
	276 Move X0, X21
	277 Call ResourceHandle.op_Implicit, X0
	278 Move W1, W0
	279 Compare X22, 0
	280 JumpIfEqual {296}
	281 Move X2, [X27]
	282 Move X0, X22
	283 Call Stack`1<Int32>.Push, X0, X1
	284 Move X21, X31
	285 Move W22, 11
	286 Move X8, 0x7C0000
	287 Move X8, [X8+3064]
	288 Move X1, [X8]
	289 Add X0, X31, 48
	290 Call Enumerator<ResourceHandle>.Dispose, X0
	291 Compare X21, 0
	292 JumpIfNotEqual {324}
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Compare W22, 0
	295 JumpIfEqual {201}
	296 Call 0x1C17F20
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Call 0x3EB2AD0
	299 Move X21, [X0]
	300 Call 0x3EB2AE0
	301 Move W22, W31
	302 Move X8, 0x78E000
	303 Move X8, [X8+2840]
	304 Add X0, X31, 80
	305 Move X1, [X8]
	306 Call Enumerator<Int32>.Dispose, X0
	307 Call 0x1C17F20
	308 Move [X31], X0
	309 Move [X31+8], X1
	310 Move X21, X31
	311 Move X8, 0x7C0000
	312 Move X8, [X8+3064]
	313 Move X1, [X8]
	314 Add X0, X31, 48
	315 Call Enumerator<ResourceHandle>.Dispose, X0
	316 Move X0, [X31]
	317 Move X1, [X31+8]
	318 Compare X21, 0
	319 JumpIfEqual {328}
	320 Call 0x1C17F20
	321 Call 0x1C17F28
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Move X0, X21
	325 Call 0x1C17F18
	326 Move [X31], X0
	327 Move [X31+8], X1
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Call 0x3EB2AD0
	330 Move X21, [X0]
	331 Call 0x3EB2AE0
	332 Move X8, 0x78E000
	333 Move X8, [X8+2840]
	334 Add X0, X31, 80
	335 Move X1, [X8]
	336 Call Enumerator<Int32>.Dispose, X0
	337 Compare X21, 0
	338 JumpIfNotEqual {374}
	339 Move X0, [X19+136]
	340 Compare X0, 0
	341 JumpIfEqual {370}
	342 Move W8, [X0+24]
	343 Compare W8, 0
	344 JumpIfNotEqual {181}
	345 Move X8, [X31+16]
	346 Add W8, W8, 1
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move [X31+16], X8
	349 Move X0, X19
	350 Call RenderGraph.LogCulledPasses, X0
	351 Move X8, 0x78E000
	352 Move X8, [X8+2840]
	353 Add X0, X31, 80
	354 Move X1, [X8]
	355 Call Enumerator<Int32>.Dispose, X0
	356 Move X20, [X31+192]
	357 Move X19, [X31+200]
	358 Move X22, [X31+176]
	359 Move X21, [X31+184]
	360 Move X24, [X31+160]
	361 Move X23, [X31+168]
	362 Move X26, [X31+144]
	363 Move X25, [X31+152]
	364 Move X28, [X31+128]
	365 Move X27, [X31+136]
	366 Move X29, [X31+112]
	367 Move X30, [X31+120]
	368 Add X31, X31, 208
	369 Return 
	370 Call 0x1C17F20
	371 Call 0x1C17F28
	372 Move X19, X0
	373 Move X21, X31
	374 Move X0, X21
	375 Call 0x1C17F18
	376 Move X0, X21
	377 Call 0x1C17F18
	378 Call 0x1991590
	379 Move X19, X0
	380 Move X8, 0x78E000
	381 Move X8, [X8+2840]
	382 Move X1, [X8]
	383 Add X0, X31, 80
	384 Call Enumerator<Int32>.Dispose, X0
	385 Compare X21, 0
	386 JumpIfNotEqual {389}
	387 Move X0, X19
	388 Call 0x1D2D690
	389 Move X0, X21
	390 Call 0x1C17F18
	391 Call 0x1991590

Method: System.Void UpdatePassSynchronization(ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo currentPassInfo, ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo producerPassInfo, System.Int32 currentPassIndex, System.Int32 lastProducer, ref System.Int32 intLastSyncIndex)

Disassembly:
	0x039918F0 MOV W1, W19
	0x039918F4 MOV X2, X23
	0x039918F8 BL 0x3990BE8
	0x039918FC MOV W24, W0
	0x03991900 ADD X3, X31, 0xAC
	0x03991904 MOV X0, X21
	0x03991908 MOV W1, W24
	0x0399190C MOV X2, X23
	0x03991910 BL 0x3990D88
	0x03991914 ADDS W31, W24, 0x1

ISIL:
	001 Move [X1+32], W4
	002 Move [X5], W4
	003 Move W8, [X2+36]
	004 Move W9, 1
	005 Move [X2+40], W9
	006 Add W31, W8, 1
	007 Return 
	008 Move [X2+36], W3
	009 Return 

Method: System.Void UpdateResourceSynchronization(ref System.Int32 lastGraphicsPipeSync, ref System.Int32 lastComputePipeSync, System.Int32 currentPassIndex, in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo resource)

Disassembly:
	0x03991918 B.EQ 0x39918A4
	0x0399191C CMP W0, W19
	0x03991920 B.NE 0x39918A4
	0x03991924 CBNZ W27, 0x39919A0
	0x03991928 LDR X0, [X21 + 0x10]
	0x0399192C CBZ X0, 0x39919FC
	0x03991930 ADD X1, X31, 0xD8
	0x03991934 BL 0x3991AE4
	0x03991938 MOV X25, X0
	0x0399193C CBZ X0, 0x39919F4
	0x03991940 LDRB W8, [X25 + 0x95]
	0x03991944 CBNZ W8, 0x3991990
	0x03991948 ADD X1, X25, 0x30
	0x0399194C ADD X0, X31, 0x10
	0x03991950 MOVZ W2, 0x78
	0x03991954 BL 0x3EB1AC0
	0x03991958 ADD X1, X31, 0x10
	0x0399195C ADD X2, X31, 0xA0
	0x03991960 MOV X0, X21
	0x03991964 BL 0x3991548
	0x03991968 TBZ X0, 0x0, 0x3991990
	0x0399196C MOVZ W8, 0x1
	0x03991970 STRB W8, [X23 + 0x14]
	0x03991974 STRB W8, [X25 + 0x10]
	0x03991978 LDR X0, [X21 + 0x10]
	0x0399197C CBZ X0, 0x3991A04
	0x03991980 ADD X1, X31, 0xA0
	0x03991984 BL 0x3991BE0
	0x03991988 STR X0, [X25 + 0xA8]
	0x0399198C B 0x39918A4
	0x03991990 MOVZ W8, 0x1
	0x03991994 STR D8, [X25 + 0x30]
	0x03991998 STR W8, [X25 + 0x38]
	0x0399199C STRB W8, [X25 + 0x96]
	0x039919A0 LDR X0, [X23]
	0x039919A4 CBZ X0, 0x39919EC
	0x039919A8 LDR W8, [X31 + 0xAC]
	0x039919AC LDR X3, [X20]
	0x039919B0 SUB W1, W8, 0x1
	0x039919B4 MOV W2, W24
	0x039919B8 BL 0x2FDC470
	0x039919BC B 0x39918A4
	0x039919C0 ADRP X8, 0x7BF000
	0x039919C4 LDR X8, [X8 + 0xBF8]
	0x039919C8 ADD X0, X31, 0xB0
	0x039919CC LDR X1, [X8]
	0x039919D0 BL 0x2BC8CD0
	0x039919D4 ADD W27, W27, 0x1
	0x039919D8 CMP W27, 0x2
	0x039919DC B.NE 0x3991834
	0x039919E0 B 0x3991A80
	0x039919E4 BL 0x1C16F20
	0x039919E8 B 0x3991AB4
	0x039919EC BL 0x1C16F20
	0x039919F0 B 0x3991AB4
	0x039919F4 BL 0x1C16F20
	0x039919F8 B 0x3991AB4
	0x039919FC BL 0x1C16F20
	0x03991A00 B 0x3991AB4
	0x03991A04 BL 0x1C16F20
	0x03991A08 B 0x3991AB4
	0x03991A0C B 0x3991A44
	0x03991A10 B 0x3991A44
	0x03991A14 B 0x3991A44
	0x03991A18 B 0x3991A44
	0x03991A1C B 0x3991A44
	0x03991A20 B 0x3991A44
	0x03991A24 B 0x3991A44
	0x03991A28 B 0x3991A44
	0x03991A2C B 0x3991A44
	0x03991A30 B 0x3991A44
	0x03991A34 B 0x3991A44
	0x03991A38 B 0x3991A44
	0x03991A3C B 0x3991A44
	0x03991A40 B 0x3991A44
	0x03991A44 MOV X22, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xA51000
	010 Move W8, [X24+2738]
	011 Move X22, X4
	012 Move W19, W3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x7C0000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2738], W8
	025 Move X0, X23
	026 Move W1, W19
	027 Move X2, X22
	028 Call RenderGraph.GetLatestProducerIndex, X0, X1, X2
	029 Add W31, W0, 1
	030 Move W22, W0
	031 Move X0, [X23+128]
	032 Compare X0, 0
	033 JumpIfEqual {86}
	034 Move X25, 0x7C0000
	035 Move X25, [X25+2856]
	036 Move W1, W19
	037 Move X2, [X25]
	038 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	039 Move X8, [X23+128]
	040 Compare X8, 0
	041 JumpIfEqual {86}
	042 Move X2, [X25]
	043 Move X24, X0
	044 Move X0, X8
	045 Move W1, W22
	046 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	047 Move W9, [X0+64]
	048 Move W8, [X24+64]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare W8, 0
	051 JumpIfEqual {62}
	052 Move W8, [X21]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X23+128]
	055 Compare X0, 0
	056 JumpIfEqual {86}
	057 Move X2, [X25]
	058 Move W1, W22
	059 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	060 Move [X24+32], W22
	061 Move [X21], W22
	062 Move W8, [X20]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X23+128]
	065 Compare X0, 0
	066 JumpIfEqual {86}
	067 Move X2, [X25]
	068 Move W1, W22
	069 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	070 Move [X24+32], W22
	071 Move [X20], W22
	072 Move W8, [X0+36]
	073 Move W9, 1
	074 Move [X0+40], W9
	075 Add W31, W8, 1
	076 Move [X0+36], W19
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return 
	086 Call 0x1C17F20

Method: System.Int32 GetFirstValidConsumerIndex(System.Int32 passIndex, in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo info)

Disassembly:
	0x03991BE8 STP X20, X19, [X31 + 0x20]
	0x03991BEC ADRP X22, 0xA50000
	0x03991BF0 ADRP X21, 0x7BF000
	0x03991BF4 LDRB W8, [X22 + 0xAFA]
	0x03991BF8 LDR X21, [X21 + 0xA88]
	0x03991BFC MOV X19, X1
	0x03991C00 MOV X20, X0
	0x03991C04 TBNZ X8, 0x0, 0x3991C1C
	0x03991C08 ADRP X0, 0x7BF000
	0x03991C0C LDR X0, [X0 + 0xA88]
	0x03991C10 BL 0x1C16CF4
	0x03991C14 MOVZ W8, 0x1
	0x03991C18 STRB W8, [X22 + 0xAFA]
	0x03991C1C LDR X8, [X19]
	0x03991C20 LDR X0, [X21]
	0x03991C24 STR X8, [X31 + 0x8]
	0x03991C28 LDR W8, [X0 + 0xE0]
	0x03991C2C CBNZ W8, 0x3991C34
	0x03991C30 BL 0x1C16DFC
	0x03991C34 ADD X0, X31, 0x8
	0x03991C38 BL 0x398D2E8
	0x03991C3C TBZ X0, 0x0, 0x3991C64
	0x03991C40 MOV X0, X20
	0x03991C44 MOV X1, X19
	0x03991C48 BL 0x3991AE4
	0x03991C4C CBZ X0, 0x3991C78
	0x03991C50 MOV X19, X0
	0x03991C54 LDR X0, [X0 + 0xA8]
	0x03991C58 CBNZ X0, 0x3991C68
	0x03991C5C LDRB W8, [X19 + 0x10]
	0x03991C60 CBZ W8, 0x3991C7C
	0x03991C64 MOV X0, X31
	0x03991C68 LDP X20, X19, [X31 + 0x20]
	0x03991C6C LDP X22, X21, [X31 + 0x10]
	0x03991C70 LDR X30, [X31], #0x30
	0x03991C74 RET
	0x03991C78 BL 0x1C16F20
	0x03991C7C MOV X0, X19
	0x03991C80 BL 0x19903C0
	0x03991C84 LDR X8, [X19]
	0x03991C88 MOV X0, X19
	0x03991C8C LDP X9, X1, [X8 + 0x188]
	0x03991C90 BLR X9
	0x03991C94 MOV X19, X0
	0x03991C98 ADRP X0, 0x7BF000
	0x03991C9C LDR X0, [X0 + 0xC88]
	0x03991CA0 BL 0x1C16D08
	0x03991CA4 MOV X20, X0
	0x03991CA8 ADRP X0, 0x7BF000
	0x03991CAC LDR X0, [X0 + 0xC90]
	0x03991CB0 BL 0x1C16D08
	0x03991CB4 MOV X2, X0
	0x03991CB8 MOV X0, X20
	0x03991CBC MOV X1, X19
	0x03991CC0 MOV X3, X31
	0x03991CC4 BL 0x32274B8
	0x03991CC8 MOV X19, X0
	0x03991CCC ADRP X0, 0x762000
	0x03991CD0 LDR X0, [X0 + 0x5B0]
	0x03991CD4 BL 0x1C16D08
	0x03991CD8 BL 0x1C16F10
	0x03991CDC MOV X1, X19
	0x03991CE0 MOV X2, X31
	0x03991CE4 MOV X20, X0
	0x03991CE8 BL 0x337DF1C
	0x03991CEC ADRP X0, 0x7BF000
	0x03991CF0 LDR X0, [X0 + 0xC98]
	0x03991CF4 BL 0x1C16D08
	0x03991CF8 MOV X1, X0
	0x03991CFC MOV X0, X20
	0x03991D00 BL 0x1C16DEC
	0x03991D04 SUB X31, X31, 0xD0
	0x03991D08 STP X29, X30, [X31 + 0x70]
	0x03991D0C STP X28, X27, [X31 + 0x80]
	0x03991D10 STP X26, X25, [X31 + 0x90]
	0x03991D14 STP X24, X23, [X31 + 0xA0]
	0x03991D18 STP X22, X21, [X31 + 0xB0]
	0x03991D1C STP X20, X19, [X31 + 0xC0]
	0x03991D20 ADRP X20, 0xA50000
	0x03991D24 LDRB W8, [X20 + 0xABC]
	0x03991D28 MOV X19, X0
	0x03991D2C TBNZ X8, 0x0, 0x3991DBC
	0x03991D30 ADRP X0, 0x7BF000
	0x03991D34 LDR X0, [X0 + 0xB28]
	0x03991D38 BL 0x1C16CF4
	0x03991D3C ADRP X0, 0x7BF000
	0x03991D40 LDR X0, [X0 + 0xBE0]
	0x03991D44 BL 0x1C16CF4
	0x03991D48 ADRP X0, 0x7BF000
	0x03991D4C LDR X0, [X0 + 0xBE8]
	0x03991D50 BL 0x1C16CF4
	0x03991D54 ADRP X0, 0x7BF000
	0x03991D58 LDR X0, [X0 + 0xB30]
	0x03991D5C BL 0x1C16CF4
	0x03991D60 ADRP X0, 0x7BF000
	0x03991D64 LDR X0, [X0 + 0xBF8]
	0x03991D68 BL 0x1C16CF4
	0x03991D6C ADRP X0, 0x7BF000
	0x03991D70 LDR X0, [X0 + 0xC00]
	0x03991D74 BL 0x1C16CF4
	0x03991D78 ADRP X0, 0x7BF000
	0x03991D7C LDR X0, [X0 + 0xC08]
	0x03991D80 BL 0x1C16CF4
	0x03991D84 ADRP X0, 0x763000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X22, 0xA51000
	010 Move W8, [X22+2739]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x7C0000
	019 Move X0, [X0+2856]
	020 Call 0x1C17CF4
	021 Move X0, 0x78E000
	022 Move X0, [X0+2840]
	023 Call 0x1C17CF4
	024 Move X0, 0x78E000
	025 Move X0, [X0+2856]
	026 Call 0x1C17CF4
	027 Move X0, 0x78E000
	028 Move X0, [X0+2872]
	029 Call 0x1C17CF4
	030 Move X0, 0x78E000
	031 Move X0, [X0+2896]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+2739], W8
	035 Move [X31+32], X31
	036 Move [X31+40], X31
	037 Move [X31+48], X31
	038 Move X0, [X21+8]
	039 Compare X0, 0
	040 JumpIfEqual {91}
	041 Move X8, 0x78E000
	042 Move X8, [X8+2896]
	043 Move X23, 0x78E000
	044 Move X24, 0x7C0000
	045 Move X22, 0x78E000
	046 Move X1, [X8]
	047 Move X23, [X23+2856]
	048 Move X24, [X24+2856]
	049 Move X22, [X22+2840]
	050 Add X8, X31, 8
	051 Call List`1<Int32>.GetEnumerator, X0
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+24]
	054 Move [X31+2], V0
	055 Move [X31+48], X8
	056 Move X1, [X23]
	057 Add X0, X31, 32
	058 Call Enumerator<Int32>.MoveNext, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {74}
	063 Move W21, [X31+48]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X20+128]
	066 Compare X0, 0
	067 JumpIfEqual {90}
	068 Move X2, [X24]
	069 Move W1, W21
	070 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	071 Move W8, [X0+28]
	072 Compare W8, 0
	073 JumpIfNotEqual {56}
	074 Move TEMP, 0
	075 Not TEMP
	076 Move W21, TEMP
	077 Move X1, [X22]
	078 Add X0, X31, 32
	079 Call Enumerator<Int32>.Dispose, X0
	080 Move W0, W21
	081 Move X20, [X31+112]
	082 Move X19, [X31+120]
	083 Move X22, [X31+96]
	084 Move X21, [X31+104]
	085 Move X24, [X31+80]
	086 Move X23, [X31+88]
	087 Move X30, [X31+64]
	088 Add X31, X31, 128
	089 Return X0
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Move X19, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X19
	095 Call 0x3EB2AD0
	096 Move X20, [X0]
	097 Call 0x3EB2AE0
	098 Move X1, [X22]
	099 Add X0, X31, 32
	100 Call Enumerator<Int32>.Dispose, X0
	101 Compare X20, 0
	102 JumpIfNotEqual {107}
	103 Move TEMP, 0
	104 Not TEMP
	105 Move W21, TEMP
	106 Move X20, X31
	107 Move X0, X20
	108 Call 0x1C17F18
	109 Move X19, X0
	110 Move X1, [X22]
	111 Add X0, X31, 32
	112 Call Enumerator<Int32>.Dispose, X0
	113 Compare X20, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X19
	116 Call 0x1D2D690
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Call 0x1991590

Method: System.Int32 FindTextureProducer(System.Int32 consumerPass, in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo info, out System.Int32 index)

Disassembly:
	0x03991D88 LDR X0, [X0 + 0xE10]
	0x03991D8C BL 0x1C16CF4
	0x03991D90 ADRP X0, 0x7BF000
	0x03991D94 LDR X0, [X0 + 0xC10]
	0x03991D98 BL 0x1C16CF4
	0x03991D9C ADRP X0, 0x762000
	0x03991DA0 LDR X0, [X0 + 0x5A8]
	0x03991DA4 BL 0x1C16CF4
	0x03991DA8 ADRP X0, 0x78D000
	0x03991DAC LDR X0, [X0 + 0x730]
	0x03991DB0 BL 0x1C16CF4
	0x03991DB4 MOVZ W8, 0x1
	0x03991DB8 STRB W8, [X20 + 0xABC]
	0x03991DBC MOVN W8, 0x0
	0x03991DC0 STP X31, X31, [X31 + 0x50]
	0x03991DC4 STR X31, [X31 + 0x60]
	0x03991DC8 STP W8, W8, [X31 + 0x68]
	0x03991DCC LDR X0, [X19 + 0x80]
	0x03991DD0 CBZ X0, 0x39924A4
	0x03991DD4 ADRP X27, 0x7BF000
	0x03991DD8 ADRP X24, 0x7BF000
	0x03991DDC ADRP X25, 0x78D000
	0x03991DE0 ADRP X28, 0x7BF000
	0x03991DE4 LDR X27, [X27 + 0xB28]
	0x03991DE8 LDR X24, [X24 + 0xC00]
	0x03991DEC LDR X25, [X25 + 0x730]
	0x03991DF0 LDR X28, [X28 + 0xBE0]
	0x03991DF4 MOV W20, W31
	0x03991DF8 LDR W8, [X0 + 0x18]
	0x03991DFC CMP W20, W8
	0x03991E00 B.GE 0x3992084
	0x03991E04 LDR X2, [X27]
	0x03991E08 MOV W1, W20
	0x03991E0C BL 0x2B4260C
	0x03991E10 LDRB W8, [X0 + 0x1D]
	0x03991E14 MOV X21, X0
	0x03991E18 CBZ W8, 0x3991E2C
	0x03991E1C MOV X0, X19
	0x03991E20 MOV X1, X21
	0x03991E24 MOV W2, W20
	0x03991E28 BL 0x3991764
	0x03991E2C LDRB W8, [X21 + 0x1C]
	0x03991E30 CBZ W8, 0x3991E44
	0x03991E34 LDR X0, [X19 + 0x80]
	0x03991E38 ADD W20, W20, 0x1
	0x03991E3C CBNZ X0, 0x3991DF8
	0x03991E40 B 0x39924A4
	0x03991E44 MOV W26, W31
	0x03991E48 LDR X8, [X19 + 0x78]
	0x03991E4C CBZ X8, 0x39924A4
	0x03991E50 LDR W9, [X8 + 0x18]
	0x03991E54 CMP W26, W9
	0x03991E58 B.CS 0x39924A8
	0x03991E5C LDR X9, [X21]
	0x03991E60 CBZ X9, 0x39924A4
	0x03991E64 LDR X9, [X9 + 0x50]
	0x03991E68 CBZ X9, 0x39924A4
	0x03991E6C LDR W10, [X9 + 0x18]
	0x03991E70 CMP W26, W10
	0x03991E74 B.CS 0x39924A8
	0x03991E78 SXTW X29, W26
	0x03991E7C ADD X9, X9, X29, 0x3, LSL
	0x03991E80 LDR X0, [X9 + 0x20]
	0x03991E84 CBZ X0, 0x39924A4
	0x03991E88 ADD X8, X8, X29, 0x3, LSL
	0x03991E8C LDR X22, [X8 + 0x20]
	0x03991E90 ADRP X8, 0x7BF000
	0x03991E94 LDR X8, [X8 + 0xC10]
	0x03991E98 LDR X1, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xA51000
	011 Move W8, [X23+2740]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x7C0000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move X0, 0x764000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move X0, 0x78D000
	027 Move X0, [X0+3896]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2740], W8
	031 Move [X19], W31
	032 Move X0, [X20]
	033 Compare X0, 0
	034 JumpIfEqual {79}
	035 Move W8, [X0+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X25, 0x78D000
	038 Move X26, 0x7C0000
	039 Move X25, [X25+3896]
	040 Move X26, [X26+2856]
	041 Move W1, W31
	042 Move W23, W31
	043 Move X2, [X25]
	044 Call List`1<Int32>.get_Item, X0, X1
	045 Move X8, [X22+128]
	046 Compare X8, 0
	047 JumpIfEqual {79}
	048 Move X2, [X26]
	049 Move W24, W0
	050 Move X0, X8
	051 Move W1, W24
	052 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	053 Move W8, [X0+28]
	054 Compare W8, 0
	055 JumpIfEqual {67}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X19]
	058 Add W1, W8, 1
	059 Move [X19], W1
	060 Move X0, [X20]
	061 Compare X0, 0
	062 JumpIfEqual {79}
	063 Move W8, [X0+24]
	064 Move W23, W24
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W23, W31
	067 Move W23, W24
	068 Move W0, W23
	069 Move X20, [X31+64]
	070 Move X19, [X31+72]
	071 Move X22, [X31+48]
	072 Move X21, [X31+56]
	073 Move X24, [X31+32]
	074 Move X23, [X31+40]
	075 Move X26, [X31+16]
	076 Move X25, [X31+24]
	077 Move X30, [X31+80]
	078 Return X0
	079 Call 0x1C17F20

Method: System.Int32 GetLatestProducerIndex(System.Int32 passIndex, in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo info)

Disassembly:
	0x03991A48 CMP W1, 0x1
	0x03991A4C B.NE 0x3991AAC
	0x03991A50 MOV X0, X22
	0x03991A54 BL 0x3EB1AD0
	0x03991A58 LDR X23, [X0]
	0x03991A5C BL 0x3EB1AE0
	0x03991A60 ADRP X8, 0x7BF000
	0x03991A64 LDR X8, [X8 + 0xBF8]
	0x03991A68 ADD X0, X31, 0xB0
	0x03991A6C LDR X1, [X8]
	0x03991A70 BL 0x2BC8CD0
	0x03991A74 CBZ X23, 0x39919D4
	0x03991A78 MOV X0, X23
	0x03991A7C BL 0x1C16F18
	0x03991A80 LDP X20, X19, [X31 + 0x130]
	0x03991A84 LDP X22, X21, [X31 + 0x120]
	0x03991A88 LDP X24, X23, [X31 + 0x110]
	0x03991A8C LDP X26, X25, [X31 + 0x100]
	0x03991A90 LDP X28, X27, [X31 + 0xF0]
	0x03991A94 LDP X29, X30, [X31 + 0xE0]
	0x03991A98 LDR V8, [X31 + 0xD0]
	0x03991A9C ADD X31, X31, 0x140
	0x03991AA0 RET
	0x03991AA4 BL 0x1C16F20
	0x03991AA8 BL 0x1C16F28
	0x03991AAC MOV X23, X31
	0x03991AB0 B 0x3991AB8
	0x03991AB4 MOV X22, X0
	0x03991AB8 ADRP X8, 0x7BF000
	0x03991ABC LDR X8, [X8 + 0xBF8]
	0x03991AC0 LDR X1, [X8]
	0x03991AC4 ADD X0, X31, 0xB0
	0x03991AC8 BL 0x2BC8CD0
	0x03991ACC CBNZ X23, 0x3991AD8
	0x03991AD0 MOV X0, X22
	0x03991AD4 BL 0x1D2C690
	0x03991AD8 MOV X0, X23
	0x03991ADC BL 0x1C16F18
	0x03991AE0 BL 0x1990590
	0x03991AE4 STP X30, X21, [X31 - 0x20]!
	0x03991AE8 STP X20, X19, [X31 + 0x10]
	0x03991AEC ADRP X21, 0xA50000
	0x03991AF0 LDRB W8, [X21 + 0xB12]
	0x03991AF4 MOV X19, X1
	0x03991AF8 MOV X20, X0
	0x03991AFC TBNZ X8, 0x0, 0x3991B2C
	0x03991B00 ADRP X0, 0x78B000
	0x03991B04 LDR X0, [X0 + 0xA80]
	0x03991B08 BL 0x1C16CF4
	0x03991B0C ADRP X0, 0x78D000
	0x03991B10 LDR X0, [X0 + 0x730]
	0x03991B14 BL 0x1C16CF4
	0x03991B18 ADRP X0, 0x7BF000
	0x03991B1C LDR X0, [X0 + 0xA80]
	0x03991B20 BL 0x1C16CF4
	0x03991B24 MOVZ W8, 0x1
	0x03991B28 STRB W8, [X21 + 0xB12]
	0x03991B2C LDR X8, [X20 + 0x10]
	0x03991B30 CBZ X8, 0x3991BD8
	0x03991B34 LDR W9, [X8 + 0x18]
	0x03991B38 CBZ W9, 0x3991BDC
	0x03991B3C LDR X8, [X8 + 0x20]
	0x03991B40 CBZ X8, 0x3991BD8
	0x03991B44 ADRP X9, 0x78D000
	0x03991B48 LDR X9, [X9 + 0x730]
	0x03991B4C LDR X20, [X8 + 0x10]
	0x03991B50 LDR X19, [X19]
	0x03991B54 LDR X0, [X9]
	0x03991B58 LDR W8, [X0 + 0xE0]
	0x03991B5C CBNZ W8, 0x3991B64
	0x03991B60 BL 0x1C16DFC
	0x03991B64 MOV X0, X19
	0x03991B68 BL 0x398FDA8
	0x03991B6C CBZ X20, 0x3991BD8
	0x03991B70 ADRP X8, 0x78B000
	0x03991B74 LDR X8, [X8 + 0xA80]
	0x03991B78 MOV W1, W0
	0x03991B7C MOV X0, X20
	0x03991B80 LDR X2, [X8]
	0x03991B84 BL 0x2B40178
	0x03991B88 LDR X8, [X0]
	0x03991B8C CBZ X8, 0x3991BB0
	0x03991B90 ADRP X9, 0x7BF000
	0x03991B94 LDR X9, [X9 + 0xA80]
	0x03991B98 LDR X10, [X8]
	0x03991B9C LDR X9, [X9]
	0x03991BA0 LDRB W12, [X10 + 0x130]
	0x03991BA4 LDRB W11, [X9 + 0x130]
	0x03991BA8 CMP W12, W11
	0x03991BAC B.CS 0x3991BB8
	0x03991BB0 MOV X0, X31
	0x03991BB4 B 0x3991BCC
	0x03991BB8 LDR X10, [X10 + 0xC8]
	0x03991BBC ADD X10, X10, X11, 0x3, LSL
	0x03991BC0 LDUR X10, [X10 - 0x8]
	0x03991BC4 CMP X10, X9
	0x03991BC8 CSEL X0, X8, X31, EQ
	0x03991BCC LDP X20, X19, [X31 + 0x10]
	0x03991BD0 LDP X30, X21, [X31], #0x20
	0x03991BD4 RET
	0x03991BD8 BL 0x1C16F20
	0x03991BDC BL 0x1C16F28
	0x03991BE0 STR X30, [X31 - 0x30]!
	0x03991BE4 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0xA51000
	011 Move W8, [X22+2741]
	012 Move X19, X2
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x7C0000
	020 Move X0, [X0+2856]
	021 Call 0x1C17CF4
	022 Move X0, 0x78E000
	023 Move X0, [X0+2840]
	024 Call 0x1C17CF4
	025 Move X0, 0x78E000
	026 Move X0, [X0+2856]
	027 Call 0x1C17CF4
	028 Move X0, 0x78E000
	029 Move X0, [X0+2872]
	030 Call 0x1C17CF4
	031 Move X0, 0x78E000
	032 Move X0, [X0+2896]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2741], W8
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Move X0, [X19]
	040 Compare X0, 0
	041 JumpIfEqual {98}
	042 Move X8, 0x78E000
	043 Move X8, [X8+2896]
	044 Move X24, 0x78E000
	045 Move X25, 0x7C0000
	046 Move X23, 0x78E000
	047 Move X1, [X8]
	048 Move X24, [X24+2856]
	049 Move X25, [X25+2856]
	050 Move X23, [X23+2840]
	051 Add X8, X31, 8
	052 Call List`1<Int32>.GetEnumerator, X0
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X8, [X31+24]
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W22, TEMP
	058 Move [X31+2], V0
	059 Move [X31+48], X8
	060 Move X1, [X24]
	061 Move W19, W22
	062 Add X0, X31, 32
	063 Call Enumerator<Int32>.MoveNext, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {83}
	068 Move X0, [X21+128]
	069 Compare X0, 0
	070 JumpIfEqual {97}
	071 Move W22, [X31+48]
	072 Move X2, [X25]
	073 Move W1, W22
	074 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W8, [X0+28]
	077 Move W9, [X0+29]
	078 Or W8, W9, W8
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {60}
	083 Move X1, [X23]
	084 Add X0, X31, 32
	085 Call Enumerator<Int32>.Dispose, X0
	086 Move W0, W19
	087 Move X20, [X31+112]
	088 Move X19, [X31+120]
	089 Move X22, [X31+96]
	090 Move X21, [X31+104]
	091 Move X24, [X31+80]
	092 Move X23, [X31+88]
	093 Move X30, [X31+64]
	094 Move X25, [X31+72]
	095 Add X31, X31, 128
	096 Return X0
	097 Call 0x1C17F20
	098 Call 0x1C17F20
	099 Move X20, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X20
	102 Call 0x3EB2AD0
	103 Move X21, [X0]
	104 Call 0x3EB2AE0
	105 Move X1, [X23]
	106 Add X0, X31, 32
	107 Call Enumerator<Int32>.Dispose, X0
	108 Compare X21, 0
	109 JumpIfEqual {86}
	110 Move X0, X21
	111 Call 0x1C17F18
	112 Move X21, X31
	113 Move X20, X0
	114 Move X1, [X23]
	115 Add X0, X31, 32
	116 Call Enumerator<Int32>.Dispose, X0
	117 Compare X21, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X20
	120 Call 0x1D2D690
	121 Move X0, X21
	122 Call 0x1C17F18
	123 Call 0x1991590

Method: System.Int32 GetLatestValidReadIndex(in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo info)

Disassembly:
	0x03991E9C ADD X8, X31, 0x18
	0x03991EA0 BL 0x304A5A4
	0x03991EA4 LDUR V0, [X31 + 0x18]
	0x03991EA8 LDR X8, [X31 + 0x28]
	0x03991EAC STR V0, [X31 + 0x5]
	0x03991EB0 STR X8, [X31 + 0x60]
	0x03991EB4 LDR X1, [X24]
	0x03991EB8 ADD X0, X31, 0x50
	0x03991EBC BL 0x2BC8CD4
	0x03991EC0 TBZ X0, 0x0, 0x3991F10
	0x03991EC4 LDR X0, [X25]
	0x03991EC8 LDR X23, [X31 + 0x60]
	0x03991ECC LDR W8, [X0 + 0xE0]
	0x03991ED0 CBNZ W8, 0x3991ED8
	0x03991ED4 BL 0x1C16DFC
	0x03991ED8 MOV X0, X23
	0x03991EDC BL 0x398FDA8
	0x03991EE0 MOV W1, W0
	0x03991EE4 CBZ X22, 0x3991FF0
	0x03991EE8 LDR X2, [X28]
	0x03991EEC MOV X0, X22
	0x03991EF0 BL 0x2B42FB4
	0x03991EF4 MOV X4, X0
	0x03991EF8 ADD X1, X31, 0x6C
	0x03991EFC ADD X2, X31, 0x68
	0x03991F00 MOV X0, X19
	0x03991F04 MOV W3, W20
	0x03991F08 BL 0x3990918
	0x03991F0C B 0x3991EB4
	0x03991F10 ADRP X8, 0x7BF000
	0x03991F14 LDR X8, [X8 + 0xBF8]
	0x03991F18 ADD X0, X31, 0x50
	0x03991F1C LDR X1, [X8]
	0x03991F20 BL 0x2BC8CD0
	0x03991F24 LDR X8, [X21]
	0x03991F28 CBZ X8, 0x39924A4
	0x03991F2C LDR X8, [X8 + 0x58]
	0x03991F30 CBZ X8, 0x39924A4
	0x03991F34 LDR W9, [X8 + 0x18]
	0x03991F38 CMP W26, W9
	0x03991F3C B.CS 0x39924A8
	0x03991F40 ADD X8, X8, X29, 0x3, LSL
	0x03991F44 LDR X0, [X8 + 0x20]
	0x03991F48 CBZ X0, 0x39924A4
	0x03991F4C ADRP X8, 0x7BF000
	0x03991F50 LDR X8, [X8 + 0xC10]
	0x03991F54 LDR X1, [X8]
	0x03991F58 ADD X8, X31, 0x18
	0x03991F5C BL 0x304A5A4
	0x03991F60 LDUR V0, [X31 + 0x18]
	0x03991F64 LDR X8, [X31 + 0x28]
	0x03991F68 STR V0, [X31 + 0x5]
	0x03991F6C STR X8, [X31 + 0x60]
	0x03991F70 LDR X1, [X24]
	0x03991F74 ADD X0, X31, 0x50
	0x03991F78 BL 0x2BC8CD4
	0x03991F7C TBZ X0, 0x0, 0x3991FCC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA51000
	009 Move W8, [X21+2742]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x7C0000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move X0, 0x764000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move X0, 0x78D000
	023 Move X0, [X0+3896]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2742], W8
	027 Move X20, [X20+8]
	028 Compare X20, 0
	029 JumpIfEqual {75}
	030 Move W21, [X20+24]
	031 Compare W21, 0
	032 JumpIfEqual {64}
	033 Move X23, 0x78D000
	034 Move X24, 0x7C0000
	035 Move X23, [X23+3896]
	036 Move X24, [X24+2856]
	037 Subtract W21, W21, 1
	038 Move X2, [X23]
	039 Move X22, [X19+128]
	040 Move X0, X20
	041 Move W1, W21
	042 Call List`1<Int32>.get_Item, X0, X1
	043 Compare X22, 0
	044 JumpIfEqual {75}
	045 Move X2, [X24]
	046 Move W1, W0
	047 Move X0, X22
	048 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	049 Move W8, [X0+28]
	050 Compare W8, 0
	051 JumpIfNotEqual {37}
	052 Move X2, [X23]
	053 Move X0, X20
	054 Move W1, W21
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X30, [X31+64]
	062 Call List`1<Int32>.get_Item, X0, X1
	063 Return X0
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W0, TEMP
	073 Move X30, [X31+64]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Int32 GetFirstValidWriteIndex(in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo info)

Disassembly:
	0x03991F80 LDR X0, [X25]
	0x03991F84 LDR X23, [X31 + 0x60]
	0x03991F88 LDR W8, [X0 + 0xE0]
	0x03991F8C CBNZ W8, 0x3991F94
	0x03991F90 BL 0x1C16DFC
	0x03991F94 MOV X0, X23
	0x03991F98 BL 0x398FDA8
	0x03991F9C MOV W1, W0
	0x03991FA0 CBZ X22, 0x3991FF8
	0x03991FA4 LDR X2, [X28]
	0x03991FA8 MOV X0, X22
	0x03991FAC BL 0x2B42FB4
	0x03991FB0 MOV X4, X0
	0x03991FB4 ADD X1, X31, 0x6C
	0x03991FB8 ADD X2, X31, 0x68
	0x03991FBC MOV X0, X19
	0x03991FC0 MOV W3, W20
	0x03991FC4 BL 0x3990918
	0x03991FC8 B 0x3991F70
	0x03991FCC ADRP X8, 0x7BF000
	0x03991FD0 LDR X8, [X8 + 0xBF8]
	0x03991FD4 ADD X0, X31, 0x50
	0x03991FD8 LDR X1, [X8]
	0x03991FDC BL 0x2BC8CD0
	0x03991FE0 ADD W26, W26, 0x1
	0x03991FE4 CMP W26, 0x2
	0x03991FE8 B.NE 0x3991E48
	0x03991FEC B 0x3991E34
	0x03991FF0 BL 0x1C16F20
	0x03991FF4 B 0x3992590
	0x03991FF8 BL 0x1C16F20
	0x03991FFC B 0x3992590
	0x03992000 B 0x3992020
	0x03992004 B 0x3992050
	0x03992008 B 0x3992020
	0x0399200C B 0x3992020
	0x03992010 B 0x3992050
	0x03992014 B 0x3992050
	0x03992018 B 0x3992020
	0x0399201C B 0x3992050
	0x03992020 CMP W1, 0x1
	0x03992024 B.NE 0x3992578
	0x03992028 BL 0x3EB1AD0
	0x0399202C LDR X22, [X0]
	0x03992030 BL 0x3EB1AE0
	0x03992034 ADRP X8, 0x7BE000
	0x03992038 LDR X8, [X8 + 0xBF8]
	0x0399203C ADD X0, X31, 0x50
	0x03992040 LDR X1, [X8]
	0x03992044 BL 0x2BC8CD0
	0x03992048 CBZ X22, 0x3991FE0
	0x0399204C B 0x3992570
	0x03992050 CMP W1, 0x1
	0x03992054 B.NE 0x3992584
	0x03992058 BL 0x3EB1AD0
	0x0399205C LDR X23, [X0]
	0x03992060 BL 0x3EB1AE0
	0x03992064 ADRP X8, 0x7BE000
	0x03992068 LDR X8, [X8 + 0xBF8]
	0x0399206C ADD X0, X31, 0x50
	0x03992070 LDR X1, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA51000
	009 Move W8, [X21+2743]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x7C0000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move X0, 0x764000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move X0, 0x78D000
	023 Move X0, [X0+3896]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2743], W8
	027 Move X20, [X20]
	028 Compare X20, 0
	029 JumpIfEqual {77}
	030 Move W8, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X23, 0x78D000
	033 Move X24, 0x7C0000
	034 Move X23, [X23+3896]
	035 Move X24, [X24+2856]
	036 Move W21, W31
	037 Move X2, [X23]
	038 Move X22, [X19+128]
	039 Move X0, X20
	040 Move W1, W21
	041 Call List`1<Int32>.get_Item, X0, X1
	042 Compare X22, 0
	043 JumpIfEqual {77}
	044 Move X2, [X24]
	045 Move W1, W0
	046 Move X0, X22
	047 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	048 Move W8, [X0+28]
	049 Compare W8, 0
	050 JumpIfEqual {65}
	051 Move W8, [X20+24]
	052 Add W21, W21, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W0, TEMP
	063 Move X30, [X31+64]
	064 Return X0
	065 Move X2, [X23]
	066 Move X0, X20
	067 Move W1, W21
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Call List`1<Int32>.get_Item, X0, X1
	076 Return X0
	077 Call 0x1C17F20

Method: System.Int32 GetLatestValidWriteIndex(in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledResourceInfo info)

Disassembly:
	0x03992074 BL 0x2BC8CD0
	0x03992078 CBZ X23, 0x3991F24
	0x0399207C MOV X0, X23
	0x03992080 BL 0x1C16F18
	0x03992084 ADRP X20, 0x761000
	0x03992088 LDR X20, [X20 + 0x5A8]
	0x0399208C MOV W25, W31
	0x03992090 LDR X8, [X19 + 0x78]
	0x03992094 CBZ X8, 0x39924A4
	0x03992098 LDR W9, [X8 + 0x18]
	0x0399209C CMP W25, W9
	0x039920A0 B.CS 0x39924A8
	0x039920A4 SXTW X9, W25
	0x039920A8 ADD X8, X8, X9, 0x3, LSL
	0x039920AC LDR X21, [X8 + 0x20]
	0x039920B0 STR X9, [X31 + 0x8]
	0x039920B4 CBZ X21, 0x39924A4
	0x039920B8 LDR W8, [X21 + 0x18]
	0x039920BC CMP W8, 0x1
	0x039920C0 B.LT 0x3992478
	0x039920C4 MOV W22, W31
	0x039920C8 STR X25, [X31 + 0x10]
	0x039920CC LDR X2, [X28]
	0x039920D0 MOV X0, X21
	0x039920D4 MOV W1, W22
	0x039920D8 BL 0x2B42FB4
	0x039920DC LDR X8, [X0 + 0x10]
	0x039920E0 LDR V0, [X0]
	0x039920E4 STR X8, [X31 + 0x40]
	0x039920E8 STR V0, [X31 + 0x3]
	0x039920EC LDR X0, [X19 + 0x10]
	0x039920F0 CBZ X0, 0x39924A4
	0x039920F4 MOV W1, W25
	0x039920F8 MOV W2, W22
	0x039920FC BL 0x39925E4
	0x03992100 LDRB W29, [X31 + 0x44]
	0x03992104 MOV W23, W0
	0x03992108 TBNZ X0, 0x0, 0x3992110
	0x0399210C TBNZ X29, 0x0, 0x39922F8
	0x03992110 ADD X1, X31, 0x30
	0x03992114 MOV X0, X19
	0x03992118 BL 0x3990F80
	0x0399211C MOV W24, W0
	0x03992120 ADDS W31, W0, 0x1
	0x03992124 B.EQ 0x39921B8
	0x03992128 LDR X0, [X19 + 0x80]
	0x0399212C CBZ X0, 0x39924A4
	0x03992130 LDR X2, [X27]
	0x03992134 MOV W1, W24
	0x03992138 BL 0x2B4260C
	0x0399213C LDR X8, [X0 + 0x8]
	0x03992140 CBZ X8, 0x39924A4
	0x03992144 LDR W9, [X8 + 0x18]
	0x03992148 CMP W25, W9
	0x0399214C B.CS 0x39924A8
	0x03992150 LDR X9, [X31 + 0x8]
	0x03992154 ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA50000
	009 Move W8, [X21+2744]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x7BF000
	017 Move X0, [X0+2856]
	018 Call 0x1C17CF4
	019 Move X0, 0x763000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move X0, 0x78C000
	023 Move X0, [X0+3896]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2744], W8
	027 Move X20, [X20]
	028 Compare X20, 0
	029 JumpIfEqual {75}
	030 Move W21, [X20+24]
	031 Compare W21, 0
	032 JumpIfEqual {64}
	033 Move X23, 0x78C000
	034 Move X24, 0x7BF000
	035 Move X23, [X23+3896]
	036 Move X24, [X24+2856]
	037 Subtract W21, W21, 1
	038 Move X2, [X23]
	039 Move X22, [X19+128]
	040 Move X0, X20
	041 Move W1, W21
	042 Call List`1<Int32>.get_Item, X0, X1
	043 Compare X22, 0
	044 JumpIfEqual {75}
	045 Move X2, [X24]
	046 Move W1, W0
	047 Move X0, X22
	048 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	049 Move W8, [X0+28]
	050 Compare W8, 0
	051 JumpIfNotEqual {37}
	052 Move X2, [X23]
	053 Move X0, X20
	054 Move W1, W21
	055 Move X20, [X31+48]
	056 Move X19, [X31+56]
	057 Move X22, [X31+32]
	058 Move X21, [X31+40]
	059 Move X24, [X31+16]
	060 Move X23, [X31+24]
	061 Move X30, [X31+64]
	062 Call List`1<Int32>.get_Item, X0, X1
	063 Return X0
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W0, TEMP
	073 Move X30, [X31+64]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Void CreateRendererLists()

Disassembly:
	0x03992158 LDR X0, [X8 + 0x20]
	0x0399215C CBZ X0, 0x39924A4
	0x03992160 ADRP X9, 0x762000
	0x03992164 LDR W10, [X0 + 0x1C]
	0x03992168 LDR X8, [X0 + 0x10]
	0x0399216C LDR X9, [X9 + 0xE10]
	0x03992170 ADD W10, W10, 0x1
	0x03992174 LDR X9, [X9]
	0x03992178 STR W10, [X0 + 0x1C]
	0x0399217C CBZ X8, 0x39924A4
	0x03992180 LDRSW X10, [X0 + 0x18]
	0x03992184 LDR W11, [X8 + 0x18]
	0x03992188 CMP W10, W11
	0x0399218C B.CS 0x39921A4
	0x03992190 ADD W9, W10, 0x1
	0x03992194 ADD X8, X8, X10, 0x2, LSL
	0x03992198 STR W9, [X0 + 0x18]
	0x0399219C STR W22, [X8 + 0x20]
	0x039921A0 B 0x39921B8
	0x039921A4 LDR X8, [X9 + 0x20]
	0x039921A8 MOV W1, W22
	0x039921AC LDR X8, [X8 + 0xC0]
	0x039921B0 LDR X2, [X8 + 0x70]
	0x039921B4 BL 0x2FDC70C
	0x039921B8 ADD X1, X31, 0x30
	0x039921BC MOV X0, X19
	0x039921C0 BL 0x3990E9C
	0x039921C4 MOV W25, W0
	0x039921C8 ADD X1, X31, 0x30
	0x039921CC MOV X0, X19
	0x039921D0 BL 0x3991074
	0x039921D4 MOV W26, W0
	0x039921D8 TBNZ X29, 0x0, 0x39921E4
	0x039921DC ADDS W31, W24, 0x1
	0x039921E0 B.EQ 0x39922C4
	0x039921E4 LDR X0, [X20]
	0x039921E8 LDR W8, [X0 + 0xE0]
	0x039921EC CBNZ W8, 0x39921F4
	0x039921F0 BL 0x1C16DFC
	0x039921F4 MOV W0, W26
	0x039921F8 MOV W1, W25
	0x039921FC MOV X2, X31
	0x03992200 BL 0x337EDF0
	0x03992204 ADDS W31, W0, 0x1
	0x03992208 B.EQ 0x39922BC
	0x0399220C MOV W20, W0
	0x03992210 LDR X0, [X19 + 0x80]
	0x03992214 CBZ X0, 0x39924A4
	0x03992218 LDR X2, [X27]
	0x0399221C MOV W1, W20
	0x03992220 MOV X26, X27
	0x03992224 BL 0x2B4260C
	0x03992228 LDR X8, [X19 + 0x80]
	0x0399222C CBZ X8, 0x39924A4
	0x03992230 LDR X2, [X26]
	0x03992234 LDRB W25, [X0 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA50000
	007 Move W8, [X20+2745]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7BF000
	014 Move X0, [X0+2856]
	015 Call 0x1C17CF4
	016 Move X0, 0x7BF000
	017 Move X0, [X0+2864]
	018 Call 0x1C17CF4
	019 Move X0, 0x7BF000
	020 Move X0, [X0+3144]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2745], W8
	024 Move X0, [X19+128]
	025 Compare X0, 0
	026 JumpIfEqual {67}
	027 Move X21, 0x7BF000
	028 Move X22, 0x7BF000
	029 Move X21, [X21+2856]
	030 Move X22, [X22+3144]
	031 Move W20, W31
	032 Move W8, [X0+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X2, [X21]
	035 Move W1, W20
	036 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	037 Move W8, [X0+28]
	038 Compare W8, 0
	039 JumpIfNotEqual {49}
	040 Move X8, [X0]
	041 Compare X8, 0
	042 JumpIfEqual {67}
	043 Move X0, [X19+40]
	044 Compare X0, 0
	045 JumpIfEqual {67}
	046 Move X1, [X8+104]
	047 Move X2, [X22]
	048 Call List`1<RendererListHandle>.AddRange, X0, X1
	049 Move X0, [X19+128]
	050 Add W20, W20, 1
	051 Compare X0, 0
	052 JumpIfNotEqual {32}
	053 Move X8, [X19+88]
	054 Compare X8, 0
	055 JumpIfEqual {67}
	056 Move X0, [X19+16]
	057 Compare X0, 0
	058 JumpIfEqual {67}
	059 Move X1, [X19+40]
	060 Move W3, [X19+168]
	061 Move X2, [X8+16]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Call 0x1C17F20

Method: System.Boolean GetImportedFallback(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc desc, out UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle fallback)

Disassembly:
	0x03992548 MOV X1, X19
	0x0399254C MOV X2, X31
	0x03992550 MOV X20, X0
	0x03992554 BL 0x337DF1C
	0x03992558 ADRP X0, 0x7BE000
	0x0399255C LDR X0, [X0 + 0xCB8]
	0x03992560 BL 0x1C16D08
	0x03992564 MOV X1, X0
	0x03992568 MOV X0, X20
	0x0399256C BL 0x1C16DEC
	0x03992570 MOV X0, X22
	0x03992574 BL 0x1C16F18
	0x03992578 MOV X19, X0
	0x0399257C MOV X22, X31
	0x03992580 B 0x39925B8
	0x03992584 MOV X19, X0
	0x03992588 MOV X23, X31
	0x0399258C B 0x3992594
	0x03992590 MOV X19, X0
	0x03992594 ADRP X8, 0x7BE000
	0x03992598 LDR X8, [X8 + 0xBF8]
	0x0399259C LDR X1, [X8]
	0x039925A0 ADD X0, X31, 0x50
	0x039925A4 BL 0x2BC8CD0
	0x039925A8 CBZ X23, 0x39925D0
	0x039925AC MOV X0, X23
	0x039925B0 BL 0x1C16F18
	0x039925B4 MOV X19, X0
	0x039925B8 ADRP X8, 0x7BE000
	0x039925BC LDR X8, [X8 + 0xBF8]
	0x039925C0 LDR X1, [X8]
	0x039925C4 ADD X0, X31, 0x50
	0x039925C8 BL 0x2BC8CD0
	0x039925CC CBNZ X22, 0x39925D8
	0x039925D0 MOV X0, X19
	0x039925D4 BL 0x1D2C690
	0x039925D8 MOV X0, X22
	0x039925DC BL 0x1C16F18
	0x039925E0 BL 0x1990590
	0x039925E4 STP X30, X21, [X31 - 0x20]!
	0x039925E8 STP X20, X19, [X31 + 0x10]
	0x039925EC MOV W19, W2
	0x039925F0 MOV W20, W1
	0x039925F4 MOV X21, X0
	0x039925F8 BL 0x3999754
	0x039925FC LDR X8, [X21 + 0x10]
	0x03992600 CBZ X8, 0x3992634
	0x03992604 LDR W9, [X8 + 0x18]
	0x03992608 CMP W9, W20
	0x0399260C B.LS 0x3992638
	0x03992610 ADD X8, X8, W20, 0x3, SXTW
	0x03992614 LDR X8, [X8 + 0x20]
	0x03992618 CBZ X8, 0x3992634
	0x0399261C LDR W8, [X8 + 0x18]
	0x03992620 CMP W8, W19
	0x03992624 LDP X20, X19, [X31 + 0x10]
	0x03992628 CSET W0, GT
	0x0399262C LDP X30, X21, [X31], #0x20
	0x03992630 RET
	0x03992634 BL 0x1C16F20
	0x03992638 BL 0x1C16F28
	0x0399263C STR X30, [X31 - 0x30]!
	0x03992640 STP X22, X21, [X31 + 0x10]
	0x03992644 STP X20, X19, [X31 + 0x20]
	0x03992648 ADRP X22, 0xA4F000
	0x0399264C LDRB W8, [X22 + 0xB19]
	0x03992650 MOV W20, W2
	0x03992654 MOV W21, W1
	0x03992658 MOV X19, X0
	0x0399265C TBNZ X8, 0x0, 0x3992674
	0x03992660 ADRP X0, 0x78A000
	0x03992664 LDR X0, [X0 + 0xA80]
	0x03992668 BL 0x1C16CF4
	0x0399266C MOVZ W8, 0x1
	0x03992670 STRB W8, [X22 + 0xB19]
	0x03992674 LDR X8, [X19 + 0x10]
	0x03992678 CBZ X8, 0x39926D0
	0x0399267C LDR W9, [X8 + 0x18]
	0x03992680 CMP W9, W21
	0x03992684 B.LS 0x39926D4
	0x03992688 ADD X8, X8, W21, 0x3, SXTW
	0x0399268C LDR X8, [X8 + 0x20]
	0x03992690 CBZ X8, 0x39926D0
	0x03992694 LDR X0, [X8 + 0x10]
	0x03992698 CBZ X0, 0x39926D0
	0x0399269C ADRP X8, 0x78A000
	0x039926A0 LDR X8, [X8 + 0xA80]
	0x039926A4 MOV W1, W20
	0x039926A8 LDR X2, [X8]
	0x039926AC BL 0x2B40178
	0x039926B0 LDR X8, [X0]
	0x039926B4 CBZ X8, 0x39926D0
	0x039926B8 LDR W9, [X19 + 0x3C]
	0x039926BC LDP X20, X19, [X31 + 0x20]
	0x039926C0 LDP X22, X21, [X31 + 0x10]
	0x039926C4 STR W9, [X8 + 0x20]
	0x039926C8 LDR X30, [X31], #0x30
	0x039926CC RET
	0x039926D0 BL 0x1C16F20
	0x039926D4 BL 0x1C16F28
	0x039926D8 SUB X31, X31, 0xC0
	0x039926DC STR X30, [X31 + 0x80]
	0x039926E0 STP X24, X23, [X31 + 0x90]
	0x039926E4 STP X22, X21, [X31 + 0xA0]
	0x039926E8 STP X20, X19, [X31 + 0xB0]
	0x039926EC ADRP X21, 0xA4F000
	0x039926F0 LDRB W8, [X21 + 0xABD]
	0x039926F4 MOV X19, X1
	0x039926F8 MOV X20, X0
	0x039926FC TBNZ X8, 0x0, 0x3992750
	0x03992700 ADRP X0, 0x7BE000
	0x03992704 LDR X0, [X0 + 0xC58]
	0x03992708 BL 0x1C16CF4
	0x0399270C ADRP X0, 0x7BE000
	0x03992710 LDR X0, [X0 + 0xC60]
	0x03992714 BL 0x1C16CF4
	0x03992718 ADRP X0, 0x7BE000
	0x0399271C LDR X0, [X0 + 0xC68]
	0x03992720 BL 0x1C16CF4
	0x03992724 ADRP X0, 0x7BE000
	0x03992728 LDR X0, [X0 + 0xC78]
	0x0399272C BL 0x1C16CF4
	0x03992730 ADRP X0, 0x7BE000
	0x03992734 LDR X0, [X0 + 0xCC0]
	0x03992738 BL 0x1C16CF4
	0x0399273C ADRP X0, 0x7BE000
	0x03992740 LDR X0, [X0 + 0xC80]
	0x03992744 BL 0x1C16CF4
	0x03992748 MOVZ W8, 0x1
	0x0399274C STRB W8, [X21 + 0xABD]
	0x03992750 STP X31, X31, [X31 + 0x60]
	0x03992754 STR X31, [X31 + 0x70]
	0x03992758 CBZ X19, 0x399287C
	0x0399275C ADRP X8, 0x7BE000
	0x03992760 LDR X8, [X8 + 0xC78]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA50000
	008 Move X22, 0x7BF000
	009 Move W8, [X23+2746]
	010 Move X22, [X22+2696]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x7BF000
	019 Move X0, [X0+2696]
	020 Call 0x1C17CF4
	021 Move X0, 0x7BF000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2746], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X23, 0xA50000
	032 Move W8, [X23+2882]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x7BF000
	036 Move X0, [X0+2696]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2882], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Move X8, [X8]
	048 Move [X19], X8
	049 Move W8, [X21+68]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {62}
	054 Move W8, [X21+32]
	055 Compare W8, 0
	056 JumpIfEqual {76}
	057 Move X8, [X20+64]
	058 Compare X8, 0
	059 JumpIfEqual {149}
	060 Move X8, [X8+56]
	061 Move [X19], X8
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Call TextureHandle.IsValid, X0
	075 Return X0
	076 Move S0, [X21+104]
	077 Move S1, [X21+108]
	078 Move S2, [X21+112]
	079 Move S4, [X21+116]
	080 Move X8, -48922624
	081 Move S5, -1
	082 Move V3, [X8+3872]
	083 Multiply S6, S0, S0
	084 Multiply S7, S1, S1
	085 Add S5, S4, S5
	086 Add S6, S6, S7
	087 Multiply S7, S2, S2
	088 Add S6, S7, S6
	089 Multiply S5, S5, S5
	090 Add S7, S6, S5
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Multiply S4, S4, S4
	093 Add S4, S4, S6
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Move X8, 0x7BF000
	096 Move X8, [X8+1560]
	097 Move W23, [X21+48]
	098 Move X0, [X8]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X31
	104 Call TextureXR.get_dimension
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, [X20+64]
	107 Compare X8, 0
	108 JumpIfEqual {149}
	109 Move X8, [X8+80]
	110 Move W8, [X21+48]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X20+64]
	114 Compare X8, 0
	115 JumpIfEqual {149}
	116 Move X8, [X8+104]
	117 Move S4, -1
	118 Add S0, S0, S4
	119 Add S1, S1, S4
	120 Add S2, S2, S4
	121 Multiply S0, S0, S0
	122 Multiply S1, S1, S1
	123 Add S0, S0, S1
	124 Multiply S1, S2, S2
	125 Add S0, S1, S0
	126 Add S0, S5, S0
	127 NotImplemented "Instruction FCMP not yet implemented."
	128 Move X8, 0x7BF000
	129 Move X8, [X8+1560]
	130 Move W23, [X21+48]
	131 Move X0, [X8]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X31
	137 Call TextureXR.get_dimension
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X20+64]
	140 Compare X8, 0
	141 JumpIfEqual {149}
	142 Move X8, [X8+112]
	143 Move X8, [X20+64]
	144 Compare X8, 0
	145 JumpIfEqual {149}
	146 Move X8, [X8+48]
	147 Move W8, [X21+48]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Call 0x1C17F20

Method: System.Void AllocateCulledPassResources(ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo passInfo, System.Int32 passIndex)

Disassembly:
	0x03992764 ADRP X22, 0x7BE000
	0x03992768 ADRP X23, 0x7BE000
	0x0399276C ADRP X21, 0x7BE000
	0x03992770 LDR X1, [X8]
	0x03992774 LDR X22, [X22 + 0xC60]
	0x03992778 LDR X23, [X23 + 0xC80]
	0x0399277C LDR X21, [X21 + 0xC58]
	0x03992780 ADD X8, X31, 0x20
	0x03992784 MOV X0, X19
	0x03992788 BL 0x3047B34
	0x0399278C LDR V0, [X31 + 0x2]
	0x03992790 LDR X8, [X31 + 0x30]
	0x03992794 STR V0, [X31 + 0x6]
	0x03992798 STR X8, [X31 + 0x70]
	0x0399279C LDR X1, [X22]
	0x039927A0 ADD X0, X31, 0x60
	0x039927A4 BL 0x2BC8B00
	0x039927A8 TBZ X0, 0x0, 0x399283C
	0x039927AC LDR X8, [X31 + 0x70]
	0x039927B0 STR X8, [X31 + 0x88]
	0x039927B4 LDR X0, [X20 + 0x10]
	0x039927B8 CBZ X0, 0x399286C
	0x039927BC ADD X8, X31, 0x20
	0x039927C0 ADD X1, X31, 0x88
	0x039927C4 BL 0x39928FC
	0x039927C8 LDR V0, [X31 + 0x2]
	0x039927CC LDR X8, [X31 + 0x30]
	0x039927D0 STR V0, [X31 + 0x4]
	0x039927D4 STR X8, [X31 + 0x50]
	0x039927D8 LDR X24, [X20 + 0x58]
	0x039927DC CBZ X24, 0x3992874
	0x039927E0 LDR V0, [X31 + 0x4]
	0x039927E4 LDR X8, [X31 + 0x50]
	0x039927E8 LDR X0, [X23]
	0x039927EC STR V0, [X31 + 0x2]
	0x039927F0 STR X8, [X31 + 0x30]
	0x039927F4 LDR W8, [X0 + 0xE0]
	0x039927F8 CBNZ W8, 0x3992800
	0x039927FC BL 0x1C16DFC
	0x03992800 LDR V0, [X31 + 0x2]
	0x03992804 LDR X8, [X31 + 0x30]
	0x03992808 ADD X0, X24, 0x10
	0x0399280C STR V0, [X31]
	0x03992810 STR X8, [X31 + 0x10]
	0x03992814 ADD X1, X31, 0x0
	0x03992818 MOV X2, X31
	0x0399281C BL 0x3C5A3A4
	0x03992820 CMP W0, 0x1
	0x03992824 B.NE 0x399279C
	0x03992828 LDR X1, [X21]
	0x0399282C ADD X0, X31, 0x60
	0x03992830 BL 0x2BC8AFC
	0x03992834 MOV W0, W31
	0x03992838 B 0x3992854
	0x0399283C LDR X1, [X21]
	0x03992840 ADD X0, X31, 0x60
	0x03992844 BL 0x2BC8AFC
	0x03992848 LDR W8, [X19 + 0x18]
	0x0399284C CMP W8, 0x0
	0x03992850 CSET W0, GT
	0x03992854 LDP X20, X19, [X31 + 0xB0]
	0x03992858 LDP X22, X21, [X31 + 0xA0]
	0x0399285C LDP X24, X23, [X31 + 0x90]
	0x03992860 LDR X30, [X31 + 0x80]
	0x03992864 ADD X31, X31, 0xC0
	0x03992868 RET
	0x0399286C MOV X22, X21
	0x03992870 BL 0x1C16F20
	0x03992874 MOV X22, X21
	0x03992878 BL 0x1C16F20
	0x0399287C BL 0x1C16F20
	0x03992880 B 0x3992894
	0x03992884 B 0x3992894
	0x03992888 B 0x3992898
	0x0399288C B 0x3992898
	0x03992890 B 0x3992894
	0x03992894 MOV X22, X21
	0x03992898 MOV X20, X0
	0x0399289C CMP W1, 0x1
	0x039928A0 B.NE 0x39928CC
	0x039928A4 MOV X0, X20
	0x039928A8 BL 0x3EB1AD0
	0x039928AC LDR X21, [X0]
	0x039928B0 BL 0x3EB1AE0
	0x039928B4 LDR X1, [X22]
	0x039928B8 ADD X0, X31, 0x60
	0x039928BC BL 0x2BC8AFC
	0x039928C0 CBZ X21, 0x3992848
	0x039928C4 MOV X0, X21
	0x039928C8 BL 0x1C16F18
	0x039928CC MOV X21, X31
	0x039928D0 B 0x39928D8
	0x039928D4 MOV X20, X0
	0x039928D8 LDR X1, [X22]
	0x039928DC ADD X0, X31, 0x60
	0x039928E0 BL 0x2BC8AFC
	0x039928E4 CBNZ X21, 0x39928F0
	0x039928E8 MOV X0, X20
	0x039928EC BL 0x1D2C690
	0x039928F0 MOV X0, X21
	0x039928F4 BL 0x1C16F18
	0x039928F8 BL 0x1990590
	0x039928FC STR X30, [X31 - 0x30]!
	0x03992900 STP X22, X21, [X31 + 0x10]
	0x03992904 STP X20, X19, [X31 + 0x20]
	0x03992908 ADRP X22, 0xA4F000
	0x0399290C LDRB W9, [X22 + 0xAFC]
	0x03992910 MOV X21, X1
	0x03992914 MOV X20, X0
	0x03992918 MOV X19, X8
	0x0399291C TBNZ X9, 0x0, 0x399294C
	0x03992920 ADRP X0, 0x7BE000
	0x03992924 LDR X0, [X0 + 0xC50]
	0x03992928 BL 0x1C16CF4
	0x0399292C ADRP X0, 0x7BE000
	0x03992930 LDR X0, [X0 + 0xCC8]
	0x03992934 BL 0x1C16CF4
	0x03992938 ADRP X0, 0x78C000
	0x0399293C LDR X0, [X0 + 0x720]
	0x03992940 BL 0x1C16CF4
	0x03992944 MOVZ W8, 0x1
	0x03992948 STRB W8, [X22 + 0xAFC]
	0x0399294C LDR X8, [X21]
	0x03992950 ANDS W31, W8, 0xFF
	0x03992954 B.EQ 0x3992988
	0x03992958 LDR X0, [X20 + 0x18]
	0x0399295C CBZ X0, 0x39929C8
	0x03992960 LDR W9, [X0 + 0x18]
	0x03992964 UBFM X1, X8, 0x20, 0x3F
	0x03992968 CMP W9, W1
	0x0399296C B.LE 0x3992988
	0x03992970 ADRP X8, 0x7BE000
	0x03992974 LDR X8, [X8 + 0xC50]
	0x03992978 LDR X2, [X8]
	0x0399297C BL 0x2B40B74
	0x03992980 ADD X8, X0, 0xD0
	0x03992984 B 0x39929A8
	0x03992988 ADRP X20, 0x78C000
	0x0399298C LDR X20, [X20 + 0x720]
	0x03992990 LDR X0, [X20]
	0x03992994 LDR W8, [X0 + 0xE0]
	0x03992998 CBNZ W8, 0x39929A4
	0x0399299C BL 0x1C16DFC
	0x039929A0 LDR X0, [X20]
	0x039929A4 LDR X8, [X0 + 0xB8]
	0x039929A8 LDR X9, [X8 + 0x10]
	0x039929AC LDR V0, [X8]
	0x039929B0 LDP X22, X21, [X31 + 0x10]
	0x039929B4 STR X9, [X19 + 0x10]
	0x039929B8 STR V0, [X19]
	0x039929BC LDP X20, X19, [X31 + 0x20]
	0x039929C0 LDR X30, [X31], #0x30
	0x039929C4 RET
	0x039929C8 BL 0x1C16F20
	0x039929CC STR X30, [X31 - 0x30]!
	0x039929D0 STP X22, X21, [X31 + 0x10]
	0x039929D4 STP X20, X19, [X31 + 0x20]
	0x039929D8 ADRP X21, 0xA4F000
	0x039929DC LDRB W8, [X21 + 0xABE]
	0x039929E0 MOV W19, W1
	0x039929E4 MOV X20, X0
	0x039929E8 TBNZ X8, 0x0, 0x3992A00
	0x039929EC ADRP X0, 0x7BE000
	0x039929F0 LDR X0, [X0 + 0xB28]
	0x039929F4 BL 0x1C16CF4
	0x039929F8 MOVZ W8, 0x1
	0x039929FC STRB W8, [X21 + 0xABE]
	0x03992A00 LDR X0, [X20 + 0x80]
	0x03992A04 CBZ X0, 0x3992AD0
	0x03992A08 ADRP X21, 0x7BE000
	0x03992A0C LDR X21, [X21 + 0xB28]
	0x03992A10 MOV W1, W19
	0x03992A14 LDR X2, [X21]
	0x03992A18 BL 0x2B4260C
	0x03992A1C LDR X8, [X20 + 0x80]
	0x03992A20 CBZ X8, 0x3992AD0
	0x03992A24 LDR X2, [X21]
	0x03992A28 LDR X22, [X0]
	0x03992A2C MOV X0, X8
	0x03992A30 MOV W1, W19
	0x03992A34 BL 0x2B4260C
	0x03992A38 LDRB W8, [X0 + 0x1C]
	0x03992A3C CBZ W8, 0x3992A50
	0x03992A40 LDP X20, X19, [X31 + 0x20]
	0x03992A44 LDP X22, X21, [X31 + 0x10]
	0x03992A48 LDR X30, [X31], #0x30
	0x03992A4C RET
	0x03992A50 CBZ X22, 0x3992AD0
	0x03992A54 LDRB W8, [X22 + 0x29]
	0x03992A58 CBZ W8, 0x3992A40
	0x03992A5C LDRB W8, [X22 + 0x49]
	0x03992A60 CBZ W8, 0x3992A40
	0x03992A64 LDR X0, [X20 + 0x80]
	0x03992A68 CBZ X0, 0x3992AD0
	0x03992A6C LDR X2, [X21]
	0x03992A70 MOV W1, W19
	0x03992A74 BL 0x2B4260C
	0x03992A78 LDRB W8, [X0 + 0x1E]
	0x03992A7C CBNZ W8, 0x3992A40
	0x03992A80 LDR X1, [X22 + 0x68]
	0x03992A84 MOV X0, X20
	0x03992A88 BL 0x39926D8
	0x03992A8C TBZ X0, 0x0, 0x3992A40
	0x03992A90 LDR X0, [X20 + 0x80]
	0x03992A94 CBZ X0, 0x3992AD0
	0x03992A98 LDR X2, [X21]
	0x03992A9C MOV W1, W19
	0x03992AA0 BL 0x2B4260C
	0x03992AA4 LDR X8, [X20 + 0x80]
	0x03992AA8 CBZ X8, 0x3992AD0
	0x03992AAC LDR X2, [X21]
	0x03992AB0 MOV X20, X0
	0x03992AB4 MOV X0, X8
	0x03992AB8 MOV W1, W19
	0x03992ABC BL 0x2B4260C
	0x03992AC0 MOVZ W8, 0x1
	0x03992AC4 STRB W8, [X0 + 0x1D]
	0x03992AC8 STRB W8, [X20 + 0x1C]
	0x03992ACC B 0x3992A40
	0x03992AD0 BL 0x1C16F20
	0x03992AD4 STP X30, X21, [X31 - 0x20]!
	0x03992AD8 STP X20, X19, [X31 + 0x10]
	0x03992ADC ADRP X20, 0xA4F000
	0x03992AE0 LDRB W8, [X20 + 0xABF]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+208], D8
	003 Move [X31+224], X29
	004 Move [X31+232], X30
	005 Move [X31+240], X28
	006 Move [X31+248], X27
	007 Move [X31+256], X26
	008 Move [X31+264], X25
	009 Move [X31+272], X24
	010 Move [X31+280], X23
	011 Move [X31+288], X22
	012 Move [X31+296], X21
	013 Move [X31+304], X20
	014 Move [X31+312], X19
	015 Move X20, 0xA50000
	016 Move W8, [X20+2747]
	017 Move W19, W2
	018 Move X21, X0
	019 Move [X31+8], X1
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x7BF000
	025 Move X0, [X0+3040]
	026 Call 0x1C17CF4
	027 Move X0, 0x7BF000
	028 Move X0, [X0+3064]
	029 Call 0x1C17CF4
	030 Move X0, 0x7BF000
	031 Move X0, [X0+3072]
	032 Call 0x1C17CF4
	033 Move X0, 0x7BF000
	034 Move X0, [X0+3080]
	035 Call 0x1C17CF4
	036 Move X0, 0x7BF000
	037 Move X0, [X0+3088]
	038 Call 0x1C17CF4
	039 Move X0, 0x7BF000
	040 Move X0, [X0+640]
	041 Call 0x1C17CF4
	042 Move X0, 0x78D000
	043 Move X0, [X0+1840]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+2747], W8
	047 Move X29, 0x7BF000
	048 Move X26, 0x78D000
	049 Move X28, 0x7BF000
	050 Move X20, 0x7BF000
	051 Move X8, -48906240
	052 Move X29, [X29+3072]
	053 Move X26, [X26+1840]
	054 Move X28, [X28+3040]
	055 Move X20, [X20+640]
	056 Move V8, [X8+1600]
	057 Move W27, W31
	058 Move [X31+176], X31
	059 Move [X31+184], X31
	060 Move [X31+192], X31
	061 Move [X31+172], W31
	062 Move [X31+160], X31
	063 Move X8, [X21+120]
	064 Compare X8, 0
	065 JumpIfEqual {216}
	066 Move W9, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, [X31+8]
	069 Move X9, [X9]
	070 Compare X9, 0
	071 JumpIfEqual {216}
	072 Move X9, [X9+88]
	073 Compare X9, 0
	074 JumpIfEqual {216}
	075 Move W10, [X9+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X10, W27
	078 Add X9, X9, X10
	079 Move X0, [X9+32]
	080 Compare X0, 0
	081 JumpIfEqual {216}
	082 Add X8, X8, X10
	083 Move X22, [X8+32]
	084 Move X8, 0x7BF000
	085 Move X8, [X8+3088]
	086 Move X1, [X8]
	087 Add X8, X31, 136
	088 Call List`1<ResourceHandle>.GetEnumerator, X0
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X8, [X31+152]
	091 Move [X31+11], V0
	092 Move [X31+192], X8
	093 Move X1, [X29]
	094 Add X0, X31, 176
	095 Call Enumerator<ResourceHandle>.MoveNext, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {174}
	100 Move X23, [X31+192]
	101 Move X0, [X26]
	102 Move [X31+216], X23
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X23
	108 Call ResourceHandle.op_Implicit, X0
	109 Move W1, W0
	110 Compare X22, 0
	111 JumpIfEqual {181}
	112 Move X2, [X28]
	113 Move X0, X22
	114 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	115 Move X23, X0
	116 Move X0, X21
	117 Move W1, W19
	118 Move X2, X23
	119 Call RenderGraph.GetFirstValidConsumerIndex, X0, X1, X2
	120 Move W24, W0
	121 Add X3, X31, 172
	122 Move X0, X21
	123 Move W1, W24
	124 Move X2, X23
	125 Call RenderGraph.FindTextureProducer, X0, X1, X2, X3
	126 Add W31, W24, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Compare W27, 0
	129 JumpIfNotEqual {166}
	130 Move X0, [X21+16]
	131 Compare X0, 0
	132 JumpIfEqual {184}
	133 Add X1, X31, 216
	134 Call RenderGraphResourceRegistry.GetTextureResource, X0, X1
	135 Move X25, X0
	136 Compare X0, 0
	137 JumpIfEqual {183}
	138 Move W8, [X25+149]
	139 Compare W8, 0
	140 JumpIfNotEqual {162}
	141 Add X1, X25, 48
	142 Add X0, X31, 16
	143 Move W2, 120
	144 Call 0x3EB2AC0
	145 Add X1, X31, 16
	146 Add X2, X31, 160
	147 Move X0, X21
	148 Call RenderGraph.GetImportedFallback, X0, X1, X2
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {162}
	153 Move W8, 1
	154 Move [X23+20], W8
	155 Move [X25+16], W8
	156 Move X0, [X21+16]
	157 Compare X0, 0
	158 JumpIfEqual {185}
	159 Add X1, X31, 160
	160 Call RenderGraphResourceRegistry.GetTexture, X0, X1
	161 Move [X25+168], X0
	162 Move W8, 1
	163 Move [X25+48], D8
	164 Move [X25+56], W8
	165 Move [X25+150], W8
	166 Move X0, [X23]
	167 Compare X0, 0
	168 JumpIfEqual {182}
	169 Move W8, [X31+172]
	170 Move X3, [X20]
	171 Subtract W1, W8, 1
	172 Move W2, W24
	173 Call List`1<Int32>.set_Item, X0, X1, X2
	174 Move X8, 0x7BF000
	175 Move X8, [X8+3064]
	176 Add X0, X31, 176
	177 Move X1, [X8]
	178 Call Enumerator<ResourceHandle>.Dispose, X0
	179 Add W27, W27, 1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Move X22, X0
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X0, X22
	189 Call 0x3EB2AD0
	190 Move X23, [X0]
	191 Call 0x3EB2AE0
	192 Move X8, 0x7BF000
	193 Move X8, [X8+3064]
	194 Add X0, X31, 176
	195 Move X1, [X8]
	196 Call Enumerator<ResourceHandle>.Dispose, X0
	197 Compare X23, 0
	198 JumpIfEqual {179}
	199 Move X0, X23
	200 Call 0x1C17F18
	201 Move X20, [X31+304]
	202 Move X19, [X31+312]
	203 Move X22, [X31+288]
	204 Move X21, [X31+296]
	205 Move X24, [X31+272]
	206 Move X23, [X31+280]
	207 Move X26, [X31+256]
	208 Move X25, [X31+264]
	209 Move X28, [X31+240]
	210 Move X27, [X31+248]
	211 Move X29, [X31+224]
	212 Move X30, [X31+232]
	213 Move V8, [X31+208]
	214 Add X31, X31, 320
	215 Return 
	216 Call 0x1C17F20
	217 Call 0x1C17F28
	218 Move X23, X31
	219 Move X22, X0
	220 Move X8, 0x7BF000
	221 Move X8, [X8+3064]
	222 Move X1, [X8]
	223 Add X0, X31, 176
	224 Call Enumerator<ResourceHandle>.Dispose, X0
	225 Compare X23, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X22
	228 Call 0x1D2D690
	229 Move X0, X23
	230 Call 0x1C17F18
	231 Call 0x1991590

Method: System.Void UpdateResourceAllocationAndSynchronization()

Disassembly:
	0x03992D04 LDR X0, [X0 + 0xAE0]
	0x03992D08 BL 0x1C16CF4
	0x03992D0C ADRP X0, 0x7BE000
	0x03992D10 LDR X0, [X0 + 0xB28]
	0x03992D14 BL 0x1C16CF4
	0x03992D18 ADRP X0, 0x7BE000
	0x03992D1C LDR X0, [X0 + 0xB30]
	0x03992D20 BL 0x1C16CF4
	0x03992D24 ADRP X0, 0x7BE000
	0x03992D28 LDR X0, [X0 + 0xC58]
	0x03992D2C BL 0x1C16CF4
	0x03992D30 ADRP X0, 0x7BE000
	0x03992D34 LDR X0, [X0 + 0xBF8]
	0x03992D38 BL 0x1C16CF4
	0x03992D3C ADRP X0, 0x7BE000
	0x03992D40 LDR X0, [X0 + 0xC00]
	0x03992D44 BL 0x1C16CF4
	0x03992D48 ADRP X0, 0x7BE000
	0x03992D4C LDR X0, [X0 + 0xC60]
	0x03992D50 BL 0x1C16CF4
	0x03992D54 ADRP X0, 0x7BE000
	0x03992D58 LDR X0, [X0 + 0xC68]
	0x03992D5C BL 0x1C16CF4
	0x03992D60 ADRP X0, 0x7BE000
	0x03992D64 LDR X0, [X0 + 0xC08]
	0x03992D68 BL 0x1C16CF4
	0x03992D6C ADRP X0, 0x762000
	0x03992D70 LDR X0, [X0 + 0xE10]
	0x03992D74 BL 0x1C16CF4
	0x03992D78 ADRP X0, 0x7BE000
	0x03992D7C LDR X0, [X0 + 0xCD8]
	0x03992D80 BL 0x1C16CF4
	0x03992D84 ADRP X0, 0x7BE000
	0x03992D88 LDR X0, [X0 + 0xB88]
	0x03992D8C BL 0x1C16CF4
	0x03992D90 ADRP X0, 0x7BE000
	0x03992D94 LDR X0, [X0 + 0xCE0]
	0x03992D98 BL 0x1C16CF4
	0x03992D9C ADRP X0, 0x7BE000
	0x03992DA0 LDR X0, [X0 + 0xC78]
	0x03992DA4 BL 0x1C16CF4
	0x03992DA8 ADRP X0, 0x7BE000
	0x03992DAC LDR X0, [X0 + 0xC10]
	0x03992DB0 BL 0x1C16CF4
	0x03992DB4 ADRP X0, 0x78C000
	0x03992DB8 LDR X0, [X0 + 0x730]
	0x03992DBC BL 0x1C16CF4
	0x03992DC0 MOVZ W8, 0x1
	0x03992DC4 STRB W8, [X20 + 0xAC1]
	0x03992DC8 STP X31, X31, [X31 + 0x40]
	0x03992DCC STR X31, [X31 + 0x50]
	0x03992DD0 STP X31, X31, [X31 + 0x30]
	0x03992DD4 STP X31, X31, [X31 + 0x20]
	0x03992DD8 STR X31, [X31 + 0x18]
	0x03992DDC LDR X0, [X19 + 0x80]
	0x03992DE0 CBZ X0, 0x39934EC
	0x03992DE4 LDR W1, [X19 + 0x68]
	0x03992DE8 LDR W8, [X0 + 0x18]
	0x03992DEC CMP W1, W8
	0x03992DF0 B.GE 0x3992E00
	0x03992DF4 ADD W8, W1, 0x1
	0x03992DF8 STR W8, [X19 + 0x68]
	0x03992DFC B 0x3992E2C
	0x03992E00 ADRP X9, 0x7BE000
	0x03992E04 LDR X9, [X9 + 0xAE0]
	0x03992E08 UBFM W1, W8, 0x1F, 0x1E
	0x03992E0C MOV W2, W31
	0x03992E10 LDR X3, [X9]
	0x03992E14 BL 0x2B4255C
	0x03992E18 LDR W1, [X19 + 0x68]
	0x03992E1C LDR X0, [X19 + 0x80]
	0x03992E20 ADD W8, W1, 0x1
	0x03992E24 STR W8, [X19 + 0x68]
	0x03992E28 CBZ X0, 0x39934EC
	0x03992E2C ADRP X8, 0x7BE000
	0x03992E30 LDR X8, [X8 + 0xB28]
	0x03992E34 LDR X2, [X8]
	0x03992E38 BL 0x2B4260C
	0x03992E3C MOV X1, X21
	0x03992E40 MOV X20, X0
	0x03992E44 BL 0x398F408
	0x03992E48 STRB W31, [X20 + 0x40]
	0x03992E4C CBZ X21, 0x39934EC
	0x03992E50 ADRP X29, 0x7BE000
	0x03992E54 ADRP X26, 0x78C000
	0x03992E58 ADRP X25, 0x762000
	0x03992E5C ADRP X27, 0x7BE000
	0x03992E60 LDR X29, [X29 + 0xC00]
	0x03992E64 LDR X26, [X26 + 0x730]
	0x03992E68 LDR X25, [X25 + 0xE10]
	0x03992E6C LDR X27, [X27 + 0xCE0]
	0x03992E70 MOV W28, W31
	0x03992E74 LDR X8, [X21 + 0x60]
	0x03992E78 CBZ X8, 0x39934EC
	0x03992E7C LDR W9, [X8 + 0x18]
	0x03992E80 CMP W28, W9
	0x03992E84 B.CS 0x39934F0
	0x03992E88 SXTW X24, W28
	0x03992E8C ADD X8, X8, X24, 0x3, LSL
	0x03992E90 LDR X0, [X8 + 0x20]
	0x03992E94 CBZ X0, 0x39934EC
	0x03992E98 ADRP X8, 0x7BE000
	0x03992E9C LDR X8, [X8 + 0xC10]
	0x03992EA0 LDR X1, [X8]
	0x03992EA4 ADD X8, X31, 0x0
	0x03992EA8 BL 0x304A5A4
	0x03992EAC LDR V0, [X31]
	0x03992EB0 LDR X8, [X31 + 0x10]
	0x03992EB4 STR V0, [X31 + 0x4]
	0x03992EB8 STR X8, [X31 + 0x50]
	0x03992EBC LDR X1, [X29]
	0x03992EC0 ADD X0, X31, 0x40
	0x03992EC4 BL 0x2BC8CD4
	0x03992EC8 TBZ X0, 0x0, 0x3992FDC
	0x03992ECC LDR X8, [X20 + 0x8]
	0x03992ED0 CBZ X8, 0x3993260
	0x03992ED4 LDR W9, [X8 + 0x18]
	0x03992ED8 CMP W28, W9
	0x03992EDC B.CS 0x3993278
	0x03992EE0 LDR X0, [X26]
	0x03992EE4 ADD X8, X8, X24, 0x3, LSL
	0x03992EE8 LDR X22, [X31 + 0x50]
	0x03992EEC LDR X23, [X8 + 0x20]
	0x03992EF0 LDR W9, [X0 + 0xE0]
	0x03992EF4 CBNZ W9, 0x3992EFC
	0x03992EF8 BL 0x1C16DFC
	0x03992EFC MOV X0, X22
	0x03992F00 BL 0x398FDA8
	0x03992F04 MOV W1, W0
	0x03992F08 CBZ X23, 0x3993268
	0x03992F0C LDR W10, [X23 + 0x1C]
	0x03992F10 LDR X8, [X23 + 0x10]
	0x03992F14 LDR X9, [X25]
	0x03992F18 ADD W10, W10, 0x1
	0x03992F1C STR W10, [X23 + 0x1C]
	0x03992F20 CBZ X8, 0x3993248
	0x03992F24 LDRSW X10, [X23 + 0x18]
	0x03992F28 LDR W11, [X8 + 0x18]
	0x03992F2C CMP W10, W11
	0x03992F30 B.CS 0x3992F48
	0x03992F34 ADD W9, W10, 0x1
	0x03992F38 ADD X8, X8, X10, 0x2, LSL
	0x03992F3C STR W9, [X23 + 0x18]
	0x03992F40 STR W1, [X8 + 0x20]
	0x03992F44 B 0x3992F5C
	0x03992F48 LDR X8, [X9 + 0x20]
	0x03992F4C LDR X8, [X8 + 0xC0]
	0x03992F50 LDR X2, [X8 + 0x70]
	0x03992F54 MOV X0, X23
	0x03992F58 BL 0x2FDC70C
	0x03992F5C LDR X8, [X20 + 0x10]
	0x03992F60 CBZ X8, 0x3993258
	0x03992F64 LDR W9, [X8 + 0x18]
	0x03992F68 CMP W28, W9
	0x03992F6C B.CS 0x3993250
	0x03992F70 ADD X8, X8, X24, 0x3, LSL
	0x03992F74 LDR X23, [X8 + 0x20]
	0x03992F78 MOV X0, X22
	0x03992F7C BL 0x398FDA8
	0x03992F80 MOV W1, W0
	0x03992F84 CBZ X23, 0x3993240
	0x03992F88 LDR W10, [X23 + 0x1C]
	0x03992F8C LDR X8, [X23 + 0x10]
	0x03992F90 LDR X9, [X25]
	0x03992F94 ADD W10, W10, 0x1
	0x03992F98 STR W10, [X23 + 0x1C]
	0x03992F9C CBZ X8, 0x3993270
	0x03992FA0 LDRSW X10, [X23 + 0x18]
	0x03992FA4 LDR W11, [X8 + 0x18]
	0x03992FA8 CMP W10, W11
	0x03992FAC B.CS 0x3992FC4
	0x03992FB0 ADD W9, W10, 0x1
	0x03992FB4 ADD X8, X8, X10, 0x2, LSL
	0x03992FB8 STR W9, [X23 + 0x18]
	0x03992FBC STR W1, [X8 + 0x20]
	0x03992FC0 B 0x3992EBC
	0x03992FC4 LDR X8, [X9 + 0x20]
	0x03992FC8 LDR X8, [X8 + 0xC0]
	0x03992FCC LDR X2, [X8 + 0x70]
	0x03992FD0 MOV X0, X23
	0x03992FD4 BL 0x2FDC70C
	0x03992FD8 B 0x3992EBC
	0x03992FDC ADRP X8, 0x7BE000
	0x03992FE0 LDR X8, [X8 + 0xBF8]
	0x03992FE4 ADD X0, X31, 0x40
	0x03992FE8 LDR X1, [X8]
	0x03992FEC BL 0x2BC8CD0
	0x03992FF0 LDR X8, [X21 + 0x58]
	0x03992FF4 CBZ X8, 0x39934EC
	0x03992FF8 LDR W9, [X8 + 0x18]
	0x03992FFC CMP W28, W9
	0x03993000 B.CS 0x39934F0
	0x03993004 ADD X8, X8, X24, 0x3, LSL
	0x03993008 LDR X0, [X8 + 0x20]
	0x0399300C CBZ X0, 0x39934EC
	0x03993010 ADRP X8, 0x7BD000
	0x03993014 LDR X8, [X8 + 0xC10]
	0x03993018 LDR X1, [X8]
	0x0399301C ADD X8, X31, 0x0
	0x03993020 BL 0x304A5A4
	0x03993024 LDR V0, [X31]
	0x03993028 LDR X8, [X31 + 0x10]
	0x0399302C STR V0, [X31 + 0x4]
	0x03993030 STR X8, [X31 + 0x50]
	0x03993034 LDR X1, [X29]
	0x03993038 ADD X0, X31, 0x40
	0x0399303C BL 0x2BC8CD4
	0x03993040 TBZ X0, 0x0, 0x399319C
	0x03993044 LDR X22, [X31 + 0x50]
	0x03993048 STR X22, [X31 + 0x38]
	0x0399304C LDR X8, [X21 + 0x60]
	0x03993050 CBZ X8, 0x3993230
	0x03993054 LDR W9, [X8 + 0x18]
	0x03993058 CMP W28, W9
	0x0399305C B.CS 0x3993228
	0x03993060 ADD X8, X8, X24, 0x3, LSL
	0x03993064 LDR X0, [X8 + 0x20]
	0x03993068 CBZ X0, 0x3993238
	0x0399306C LDR X2, [X27]
	0x03993070 MOV X1, X22
	0x03993074 BL 0x3049D6C
	0x03993078 TBNZ X0, 0x0, 0x3993034
	0x0399307C LDR X0, [X19 + 0x10]
	0x03993080 CBZ X0, 0x3993280
	0x03993084 ADD X1, X31, 0x38
	0x03993088 BL 0x3993610
	0x0399308C TBNZ X0, 0x0, 0x3993034
	0x03993090 LDR X8, [X20 + 0x8]
	0x03993094 CBZ X8, 0x39932B0
	0x03993098 LDR W9, [X8 + 0x18]
	0x0399309C CMP W28, W9
	0x039930A0 B.CS 0x39932C0
	0x039930A4 LDR X0, [X26]
	0x039930A8 ADD X8, X8, X24, 0x3, LSL
	0x039930AC LDR X23, [X8 + 0x20]
	0x039930B0 LDR W9, [X0 + 0xE0]
	0x039930B4 CBNZ W9, 0x39930BC
	0x039930B8 BL 0x1C16DFC
	0x039930BC MOV X0, X22
	0x039930C0 BL 0x398FDA8
	0x039930C4 MOV W1, W0
	0x039930C8 CBZ X23, 0x3993290
	0x039930CC LDR W10, [X23 + 0x1C]
	0x039930D0 LDR X8, [X23 + 0x10]
	0x039930D4 LDR X9, [X25]
	0x039930D8 ADD W10, W10, 0x1
	0x039930DC STR W10, [X23 + 0x1C]
	0x039930E0 CBZ X8, 0x3993298
	0x039930E4 LDRSW X10, [X23 + 0x18]
	0x039930E8 LDR W11, [X8 + 0x18]
	0x039930EC CMP W10, W11
	0x039930F0 B.CS 0x3993108
	0x039930F4 ADD W9, W10, 0x1
	0x039930F8 ADD X8, X8, X10, 0x2, LSL
	0x039930FC STR W9, [X23 + 0x18]
	0x03993100 STR W1, [X8 + 0x20]
	0x03993104 B 0x399311C
	0x03993108 LDR X8, [X9 + 0x20]
	0x0399310C LDR X8, [X8 + 0xC0]
	0x03993110 LDR X2, [X8 + 0x70]
	0x03993114 MOV X0, X23
	0x03993118 BL 0x2FDC70C
	0x0399311C LDR X8, [X19 + 0x70]
	0x03993120 CBZ X8, 0x39932A8
	0x03993124 LDR W9, [X8 + 0x18]
	0x03993128 CMP W28, W9
	0x0399312C B.CS 0x39932B8
	0x03993130 ADD X8, X8, X24, 0x3, LSL
	0x03993134 LDR X23, [X8 + 0x20]
	0x03993138 MOV X0, X22
	0x0399313C BL 0x398FDA8
	0x03993140 MOV W1, W0
	0x03993144 CBZ X23, 0x3993288
	0x03993148 LDR W10, [X23 + 0x1C]
	0x0399314C LDR X8, [X23 + 0x10]
	0x03993150 LDR X9, [X25]
	0x03993154 ADD W10, W10, 0x1
	0x03993158 STR W10, [X23 + 0x1C]
	0x0399315C CBZ X8, 0x39932A0
	0x03993160 LDRSW X10, [X23 + 0x18]
	0x03993164 LDR W11, [X8 + 0x18]
	0x03993168 CMP W10, W11
	0x0399316C B.CS 0x3993184
	0x03993170 ADD W9, W10, 0x1
	0x03993174 ADD X8, X8, X10, 0x2, LSL
	0x03993178 STR W9, [X23 + 0x18]
	0x0399317C STR W1, [X8 + 0x20]
	0x03993180 B 0x3993034
	0x03993184 LDR X8, [X9 + 0x20]
	0x03993188 LDR X8, [X8 + 0xC0]
	0x0399318C LDR X2, [X8 + 0x70]
	0x03993190 MOV X0, X23
	0x03993194 BL 0x2FDC70C
	0x03993198 B 0x3993034
	0x0399319C ADRP X8, 0x7BD000
	0x039931A0 LDR X8, [X8 + 0xBF8]
	0x039931A4 ADD X0, X31, 0x40
	0x039931A8 LDR X1, [X8]
	0x039931AC BL 0x2BC8CD0
	0x039931B0 LDR X8, [X21 + 0x50]
	0x039931B4 CBZ X8, 0x39934EC
	0x039931B8 LDR W9, [X8 + 0x18]
	0x039931BC CMP W28, W9
	0x039931C0 B.CS 0x39934F0
	0x039931C4 ADD X8, X8, X24, 0x3, LSL
	0x039931C8 LDR X0, [X8 + 0x20]
	0x039931CC CBZ X0, 0x39934EC
	0x039931D0 ADRP X8, 0x7BD000
	0x039931D4 LDR X8, [X8 + 0xC10]
	0x039931D8 LDR X1, [X8]
	0x039931DC ADD X8, X31, 0x0
	0x039931E0 BL 0x304A5A4
	0x039931E4 LDR V0, [X31]
	0x039931E8 LDR X8, [X31 + 0x10]
	0x039931EC STR V0, [X31 + 0x4]
	0x039931F0 STR X8, [X31 + 0x50]
	0x039931F4 LDR X1, [X29]
	0x039931F8 ADD X0, X31, 0x40
	0x039931FC BL 0x2BC8CD4
	0x03993200 TBNZ X0, 0x0, 0x39931F4
	0x03993204 ADRP X8, 0x7BD000
	0x03993208 LDR X8, [X8 + 0xBF8]
	0x0399320C ADD X0, X31, 0x40
	0x03993210 LDR X1, [X8]
	0x03993214 BL 0x2BC8CD0
	0x03993218 ADD W28, W28, 0x1
	0x0399321C CMP W28, 0x2
	0x03993220 B.NE 0x3992E74
	0x03993224 B 0x39933BC
	0x03993228 BL 0x1C16F28
	0x0399322C B 0x3993518
	0x03993230 BL 0x1C16F20
	0x03993234 B 0x3993524
	0x03993238 BL 0x1C16F20
	0x0399323C B 0x3993518
	0x03993240 BL 0x1C16F20
	0x03993244 B 0x3993518
	0x03993248 BL 0x1C16F20
	0x0399324C B 0x3993518
	0x03993250 BL 0x1C16F28
	0x03993254 B 0x3993518
	0x03993258 BL 0x1C16F20
	0x0399325C B 0x3993518
	0x03993260 BL 0x1C16F20
	0x03993264 B 0x3993524
	0x03993268 BL 0x1C16F20
	0x0399326C B 0x3993518
	0x03993270 BL 0x1C16F20
	0x03993274 B 0x3993518
	0x03993278 BL 0x1C16F28
	0x0399327C B 0x3993518
	0x03993280 BL 0x1C16F20
	0x03993284 B 0x3993518
	0x03993288 BL 0x1C16F20
	0x0399328C B 0x3993518
	0x03993290 BL 0x1C16F20
	0x03993294 B 0x3993518
	0x03993298 BL 0x1C16F20
	0x0399329C B 0x3993518
	0x039932A0 BL 0x1C16F20
	0x039932A4 B 0x3993518
	0x039932A8 BL 0x1C16F20
	0x039932AC B 0x3993518
	0x039932B0 BL 0x1C16F20
	0x039932B4 B 0x3993518
	0x039932B8 BL 0x1C16F28
	0x039932BC B 0x3993518
	0x039932C0 BL 0x1C16F28
	0x039932C4 B 0x3993518
	0x039932C8 B 0x399331C
	0x039932CC B 0x399331C
	0x039932D0 B 0x399331C
	0x039932D4 B 0x399331C
	0x039932D8 B 0x399331C
	0x039932DC B 0x3993388
	0x039932E0 B 0x399331C
	0x039932E4 B 0x399331C
	0x039932E8 B 0x399331C
	0x039932EC B 0x399331C
	0x039932F0 B 0x399331C
	0x039932F4 B 0x399331C
	0x039932F8 B 0x3993388
	0x039932FC B 0x3993388
	0x03993300 B 0x3993388
	0x03993304 B 0x3993388
	0x03993308 B 0x399331C
	0x0399330C B 0x399331C
	0x03993310 B 0x399331C
	0x03993314 B 0x399331C
	0x03993318 B 0x3993388
	0x0399331C CMP W1, 0x1
	0x03993320 B.NE 0x399350C
	0x03993324 BL 0x3EB1AD0
	0x03993328 LDR X22, [X0]
	0x0399332C BL 0x3EB1AE0
	0x03993330 ADRP X8, 0x7BD000
	0x03993334 LDR X8, [X8 + 0xBF8]
	0x03993338 ADD X0, X31, 0x40
	0x0399333C LDR X1, [X8]
	0x03993340 BL 0x2BC8CD0
	0x03993344 CBZ X22, 0x39931B0
	0x03993348 B 0x39933B4
	0x0399334C CMP W1, 0x1
	0x03993350 B.NE 0x3993518
	0x03993354 BL 0x3EB1AD0
	0x03993358 LDR X22, [X0]
	0x0399335C BL 0x3EB1AE0
	0x03993360 ADRP X8, 0x7BD000
	0x03993364 LDR X8, [X8 + 0xBF8]
	0x03993368 ADD X0, X31, 0x40
	0x0399336C LDR X1, [X8]
	0x03993370 BL 0x2BC8CD0
	0x03993374 CBZ X22, 0x3993218
	0x03993378 B 0x39933B4
	0x0399337C B 0x3993388
	0x03993380 B 0x3993388
	0x03993384 B 0x3993388
	0x03993388 CMP W1, 0x1
	0x0399338C B.NE 0x3993500
	0x03993390 BL 0x3EB1AD0
	0x03993394 LDR X22, [X0]
	0x03993398 BL 0x3EB1AE0
	0x0399339C ADRP X8, 0x7BD000
	0x039933A0 LDR X8, [X8 + 0xBF8]
	0x039933A4 ADD X0, X31, 0x40
	0x039933A8 LDR X1, [X8]
	0x039933AC BL 0x2BC8CD0
	0x039933B0 CBZ X22, 0x3992FF0
	0x039933B4 MOV X0, X22
	0x039933B8 BL 0x1C16F18
	0x039933BC LDR X0, [X21 + 0x68]
	0x039933C0 CBZ X0, 0x39934EC
	0x039933C4 ADRP X8, 0x7BD000
	0x039933C8 LDR X8, [X8 + 0xC78]
	0x039933CC LDR X1, [X8]
	0x039933D0 ADD X8, X31, 0x0
	0x039933D4 BL 0x3047B34
	0x039933D8 LDR V0, [X31]
	0x039933DC LDR X8, [X31 + 0x10]
	0x039933E0 ADRP X22, 0x7BD000
	0x039933E4 ADRP X23, 0x7BD000
	0x039933E8 STR V0, [X31 + 0x2]
	0x039933EC STR X8, [X31 + 0x30]
	0x039933F0 LDR X22, [X22 + 0xC60]
	0x039933F4 LDR X23, [X23 + 0xCD8]
	0x039933F8 LDR X1, [X22]
	0x039933FC ADD X0, X31, 0x20
	0x03993400 BL 0x2BC8B00
	0x03993404 TBZ X0, 0x0, 0x3993480
	0x03993408 LDR X21, [X31 + 0x30]
	0x0399340C STR X21, [X31 + 0x18]
	0x03993410 LDR X0, [X19 + 0x10]
	0x03993414 CBZ X0, 0x39934F4
	0x03993418 ADD X1, X31, 0x18
	0x0399341C BL 0x39936E8
	0x03993420 TBNZ X0, 0x0, 0x39933F8
	0x03993424 LDR X0, [X19 + 0x28]
	0x03993428 CBZ X0, 0x39934F8
	0x0399342C LDR W10, [X0 + 0x1C]
	0x03993430 LDR X8, [X0 + 0x10]
	0x03993434 LDR X9, [X23]
	0x03993438 ADD W10, W10, 0x1
	0x0399343C STR W10, [X0 + 0x1C]
	0x03993440 CBZ X8, 0x39934FC
	0x03993444 LDRSW X10, [X0 + 0x18]
	0x03993448 LDR W11, [X8 + 0x18]
	0x0399344C CMP W10, W11
	0x03993450 B.CS 0x3993468
	0x03993454 ADD W9, W10, 0x1
	0x03993458 ADD X8, X8, X10, 0x3, LSL
	0x0399345C STR W9, [X0 + 0x18]
	0x03993460 STR X21, [X8 + 0x20]
	0x03993464 B 0x39933F8
	0x03993468 LDR X8, [X9 + 0x20]
	0x0399346C LDR X8, [X8 + 0xC0]
	0x03993470 LDR X2, [X8 + 0x70]
	0x03993474 MOV X1, X21
	0x03993478 BL 0x3046F84
	0x0399347C B 0x39933F8
	0x03993480 ADRP X8, 0x7BD000
	0x03993484 LDR X8, [X8 + 0xC58]
	0x03993488 ADD X0, X31, 0x20
	0x0399348C LDR X1, [X8]
	0x03993490 BL 0x2BC8AFC
	0x03993494 LDR X8, [X19 + 0x58]
	0x03993498 CBZ X8, 0x39934EC
	0x0399349C LDR X0, [X19 + 0x10]
	0x039934A0 CBZ X0, 0x39934EC
	0x039934A4 LDR X1, [X19 + 0x28]
	0x039934A8 LDR X2, [X8 + 0x10]
	0x039934AC MOV W3, W31
	0x039934B0 BL 0x3991238
	0x039934B4 LDR X8, [X19 + 0x28]
	0x039934B8 CBZ X8, 0x39934EC
	0x039934BC LDR W9, [X8 + 0x1C]
	0x039934C0 MOV X0, X20
	0x039934C4 LDP X20, X19, [X31 + 0xB0]
	0x039934C8 LDP X22, X21, [X31 + 0xA0]
	0x039934CC LDP X24, X23, [X31 + 0x90]
	0x039934D0 LDP X26, X25, [X31 + 0x80]
	0x039934D4 LDP X28, X27, [X31 + 0x70]
	0x039934D8 LDP X29, X30, [X31 + 0x60]
	0x039934DC ADD W9, W9, 0x1
	0x039934E0 STP W31, W9, [X8 + 0x18]
	0x039934E4 ADD X31, X31, 0xC0
	0x039934E8 RET
	0x039934EC BL 0x1C16F20
	0x039934F0 BL 0x1C16F28
	0x039934F4 BL 0x1C16F20
	0x039934F8 BL 0x1C16F20
	0x039934FC BL 0x1C16F20
	0x03993500 MOV X19, X0
	0x03993504 MOV X22, X31
	0x03993508 B 0x3993570
	0x0399350C MOV X19, X0
	0x03993510 MOV X22, X31
	0x03993514 B 0x399354C
	0x03993518 MOV X19, X0
	0x0399351C MOV X22, X31
	0x03993520 B 0x3993528
	0x03993524 MOV X19, X0
	0x03993528 ADRP X8, 0x7BD000
	0x0399352C LDR X8, [X8 + 0xBF8]
	0x03993530 LDR X1, [X8]
	0x03993534 ADD X0, X31, 0x40
	0x03993538 BL 0x2BC8CD0
	0x0399353C CBZ X22, 0x3993588
	0x03993540 MOV X0, X22
	0x03993544 BL 0x1C16F18
	0x03993548 MOV X19, X0
	0x0399354C ADRP X8, 0x7BD000
	0x03993550 LDR X8, [X8 + 0xBF8]
	0x03993554 LDR X1, [X8]
	0x03993558 ADD X0, X31, 0x40
	0x0399355C BL 0x2BC8CD0
	0x03993560 CBZ X22, 0x3993588
	0x03993564 MOV X0, X22
	0x03993568 BL 0x1C16F18
	0x0399356C MOV X19, X0
	0x03993570 ADRP X8, 0x7BD000
	0x03993574 LDR X8, [X8 + 0xBF8]
	0x03993578 LDR X1, [X8]
	0x0399357C ADD X0, X31, 0x40
	0x03993580 BL 0x2BC8CD0
	0x03993584 CBNZ X22, 0x3993590
	0x03993588 MOV X0, X19
	0x0399358C BL 0x1D2C690
	0x03993590 MOV X0, X22
	0x03993594 BL 0x1C16F18
	0x03993598 B 0x39935A8
	0x0399359C B 0x39935A8
	0x039935A0 B 0x39935A8
	0x039935A4 B 0x39935A8
	0x039935A8 CMP W1, 0x1
	0x039935AC B.NE 0x39935DC
	0x039935B0 BL 0x3EB1AD0
	0x039935B4 LDR X21, [X0]
	0x039935B8 BL 0x3EB1AE0
	0x039935BC ADRP X8, 0x7BD000
	0x039935C0 LDR X8, [X8 + 0xC58]
	0x039935C4 ADD X0, X31, 0x20
	0x039935C8 LDR X1, [X8]
	0x039935CC BL 0x2BC8AFC
	0x039935D0 CBZ X21, 0x3993494
	0x039935D4 MOV X0, X21
	0x039935D8 BL 0x1C16F18
	0x039935DC MOV X19, X0
	0x039935E0 MOV X21, X31

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0xA50000
	015 Move W8, [X20+2748]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x7BF000
	022 Move X0, [X0+2856]
	023 Call 0x1C17CF4
	024 Move X0, 0x7BF000
	025 Move X0, [X0+3040]
	026 Call 0x1C17CF4
	027 Move X0, 0x7BF000
	028 Move X0, [X0+3048]
	029 Call 0x1C17CF4
	030 Move X0, 0x7BF000
	031 Move X0, [X0+2864]
	032 Call 0x1C17CF4
	033 Move X0, 0x7BF000
	034 Move X0, [X0+3064]
	035 Call 0x1C17CF4
	036 Move X0, 0x7BF000
	037 Move X0, [X0+3072]
	038 Call 0x1C17CF4
	039 Move X0, 0x7BF000
	040 Move X0, [X0+3080]
	041 Call 0x1C17CF4
	042 Move X0, 0x763000
	043 Move X0, [X0+3600]
	044 Call 0x1C17CF4
	045 Move X0, 0x7BF000
	046 Move X0, [X0+3088]
	047 Call 0x1C17CF4
	048 Move X0, 0x762000
	049 Move X0, [X0+1448]
	050 Call 0x1C17CF4
	051 Move X0, 0x78D000
	052 Move X0, [X0+1840]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+2748], W8
	056 Move TEMP, 0
	057 Not TEMP
	058 Move W8, TEMP
	059 Move [X31+80], X31
	060 Move [X31+88], X31
	061 Move [X31+96], X31
	062 Move [X31+104], W8
	063 Move [X31+108], W8
	064 Move X0, [X19+128]
	065 Compare X0, 0
	066 JumpIfEqual {532}
	067 Move X27, 0x7BF000
	068 Move X24, 0x7BF000
	069 Move X25, 0x78D000
	070 Move X28, 0x7BF000
	071 Move X27, [X27+2856]
	072 Move X24, [X24+3072]
	073 Move X25, [X25+1840]
	074 Move X28, [X28+3040]
	075 Move W20, W31
	076 Move W8, [X0+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X2, [X27]
	079 Move W1, W20
	080 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	081 Move W8, [X0+29]
	082 Move X21, X0
	083 Compare W8, 0
	084 JumpIfEqual {89}
	085 Move X0, X19
	086 Move X1, X21
	087 Move W2, W20
	088 Call RenderGraph.AllocateCulledPassResources, X0, X1, X2
	089 Move W8, [X21+28]
	090 Compare W8, 0
	091 JumpIfEqual {96}
	092 Move X0, [X19+128]
	093 Add W20, W20, 1
	094 Compare X0, 0
	095 JumpIfNotEqual {76}
	096 Move W26, W31
	097 Move X8, [X19+120]
	098 Compare X8, 0
	099 JumpIfEqual {532}
	100 Move W9, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X9, [X21]
	103 Compare X9, 0
	104 JumpIfEqual {532}
	105 Move X9, [X9+80]
	106 Compare X9, 0
	107 JumpIfEqual {532}
	108 Move W10, [X9+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X29, W26
	111 Add X9, X9, X29
	112 Move X0, [X9+32]
	113 Compare X0, 0
	114 JumpIfEqual {532}
	115 Add X8, X8, X29
	116 Move X22, [X8+32]
	117 Move X8, 0x7BF000
	118 Move X8, [X8+3088]
	119 Move X1, [X8]
	120 Add X8, X31, 24
	121 Call List`1<ResourceHandle>.GetEnumerator, X0
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 Move X8, [X31+40]
	124 Move [X31+5], V0
	125 Move [X31+96], X8
	126 Move X1, [X24]
	127 Add X0, X31, 80
	128 Call Enumerator<ResourceHandle>.MoveNext, X0
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {153}
	133 Move X0, [X25]
	134 Move X23, [X31+96]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X23
	140 Call ResourceHandle.op_Implicit, X0
	141 Move W1, W0
	142 Compare X22, 0
	143 JumpIfEqual {213}
	144 Move X2, [X28]
	145 Move X0, X22
	146 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	147 Move X4, X0
	148 Add X1, X31, 108
	149 Add X2, X31, 104
	150 Move X0, X19
	151 Move W3, W20
	152 Call RenderGraph.UpdateResourceSynchronization, X0, X1, X2, X3, X4
	153 Move X8, 0x7BF000
	154 Move X8, [X8+3064]
	155 Add X0, X31, 80
	156 Move X1, [X8]
	157 Call Enumerator<ResourceHandle>.Dispose, X0
	158 Move X8, [X21]
	159 Compare X8, 0
	160 JumpIfEqual {532}
	161 Move X8, [X8+88]
	162 Compare X8, 0
	163 JumpIfEqual {532}
	164 Move W9, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add X8, X8, X29
	167 Move X0, [X8+32]
	168 Compare X0, 0
	169 JumpIfEqual {532}
	170 Move X8, 0x7BF000
	171 Move X8, [X8+3088]
	172 Move X1, [X8]
	173 Add X8, X31, 24
	174 Call List`1<ResourceHandle>.GetEnumerator, X0
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 Move X8, [X31+40]
	177 Move [X31+5], V0
	178 Move [X31+96], X8
	179 Move X1, [X24]
	180 Add X0, X31, 80
	181 Call Enumerator<ResourceHandle>.MoveNext, X0
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {206}
	186 Move X0, [X25]
	187 Move X23, [X31+96]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Move X0, X23
	193 Call ResourceHandle.op_Implicit, X0
	194 Move W1, W0
	195 Compare X22, 0
	196 JumpIfEqual {214}
	197 Move X2, [X28]
	198 Move X0, X22
	199 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	200 Move X4, X0
	201 Add X1, X31, 108
	202 Add X2, X31, 104
	203 Move X0, X19
	204 Move W3, W20
	205 Call RenderGraph.UpdateResourceSynchronization, X0, X1, X2, X3, X4
	206 Move X8, 0x7BF000
	207 Move X8, [X8+3064]
	208 Add X0, X31, 80
	209 Move X1, [X8]
	210 Call Enumerator<ResourceHandle>.Dispose, X0
	211 Add W26, W26, 1
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Call 0x3EB2AD0
	217 Move X22, [X0]
	218 Call 0x3EB2AE0
	219 Move X8, 0x7BE000
	220 Move X8, [X8+3064]
	221 Add X0, X31, 80
	222 Move X1, [X8]
	223 Call Enumerator<ResourceHandle>.Dispose, X0
	224 Compare X22, 0
	225 JumpIfEqual {211}
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Call 0x3EB2AD0
	228 Move X23, [X0]
	229 Call 0x3EB2AE0
	230 Move X8, 0x7BE000
	231 Move X8, [X8+3064]
	232 Add X0, X31, 80
	233 Move X1, [X8]
	234 Call Enumerator<ResourceHandle>.Dispose, X0
	235 Compare X23, 0
	236 JumpIfEqual {158}
	237 Move X0, X23
	238 Call 0x1C17F18
	239 Move X20, 0x761000
	240 Move X20, [X20+1448]
	241 Move W25, W31
	242 Move X8, [X19+120]
	243 Compare X8, 0
	244 JumpIfEqual {532}
	245 Move W9, [X8+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X9, W25
	248 Add X8, X8, X9
	249 Move X21, [X8+32]
	250 Move [X31+8], X9
	251 Compare X21, 0
	252 JumpIfEqual {532}
	253 Move W8, [X21+24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move W22, W31
	256 Move [X31+16], X25
	257 Move X2, [X28]
	258 Move X0, X21
	259 Move W1, W22
	260 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	261 Move X8, [X0+16]
	262 Move V0, [X0]
	263 Move [X31+64], X8
	264 Move [X31+3], V0
	265 Move X0, [X19+16]
	266 Compare X0, 0
	267 JumpIfEqual {532}
	268 Move W1, W25
	269 Move W2, W22
	270 Call RenderGraphResourceRegistry.IsRenderGraphResourceShared, X0, X1, X2
	271 Move W29, [X31+68]
	272 Move W23, W0
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfEqual {281}
	277 Move TEMP, X29
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfEqual {415}
	281 Add X1, X31, 48
	282 Move X0, X19
	283 Call RenderGraph.GetFirstValidWriteIndex, X0, X1
	284 Move W24, W0
	285 Add W31, W0, 1
	286 Move X0, [X19+128]
	287 Compare X0, 0
	288 JumpIfEqual {532}
	289 Move X2, [X27]
	290 Move W1, W24
	291 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	292 Move X8, [X0+8]
	293 Compare X8, 0
	294 JumpIfEqual {532}
	295 Move W9, [X8+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X9, [X31+8]
	298 Add X8, X8, X9
	299 Move X0, [X8+32]
	300 Compare X0, 0
	301 JumpIfEqual {532}
	302 Move X9, 0x762000
	303 Move W10, [X0+28]
	304 Move X8, [X0+16]
	305 Move X9, [X9+3600]
	306 Add W10, W10, 1
	307 Move X9, [X9]
	308 Move [X0+28], W10
	309 Compare X8, 0
	310 JumpIfEqual {532}
	311 NotImplemented "Instruction LDRSW not yet implemented."
	312 Move W11, [X8+24]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Add W9, W10, 1
	315 Add X8, X8, X10
	316 Move [X0+24], W9
	317 Move [X8+32], W22
	318 Move X8, [X9+32]
	319 Move W1, W22
	320 Move X8, [X8+192]
	321 Move X2, [X8+112]
	322 Call List`1<Int32>.AddWithResize, X0, X1
	323 Add X1, X31, 48
	324 Move X0, X19
	325 Call RenderGraph.GetLatestValidReadIndex, X0, X1
	326 Move W25, W0
	327 Add X1, X31, 48
	328 Move X0, X19
	329 Call RenderGraph.GetLatestValidWriteIndex, X0, X1
	330 Move W26, W0
	331 Move TEMP, X29
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {336}
	335 Add W31, W24, 1
	336 Move X0, [X20]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move W0, W26
	342 Move W1, W25
	343 Move X2, X31
	344 Call Math.Max, X0, X1
	345 Add W31, W0, 1
	346 Move W20, W0
	347 Move X0, [X19+128]
	348 Compare X0, 0
	349 JumpIfEqual {532}
	350 Move X2, [X27]
	351 Move W1, W20
	352 Move X26, X27
	353 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	354 Move X8, [X19+128]
	355 Compare X8, 0
	356 JumpIfEqual {532}
	357 Move X2, [X26]
	358 Move W25, [X0+64]
	359 Move X0, X8
	360 Move W1, W20
	361 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	362 Compare W25, 0
	363 JumpIfEqual {418}
	364 Move W29, [X0+36]
	365 Move W25, W20
	366 Move W26, W20
	367 Add W31, W29, 1
	368 Move X0, [X19+128]
	369 Compare X0, 0
	370 JumpIfEqual {532}
	371 Move W8, [X0+24]
	372 Move W26, W25
	373 Subtract W8, W8, 1
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Move X2, [X27]
	376 Add W25, W26, 1
	377 Move W1, W25
	378 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	379 Move W8, [X0+64]
	380 Compare W8, 0
	381 JumpIfEqual {389}
	382 Move X0, [X19+128]
	383 Compare X0, 0
	384 JumpIfEqual {532}
	385 Move X2, [X27]
	386 Move W1, W25
	387 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	388 Move W29, [X0+36]
	389 Move TEMP, 0
	390 Not TEMP
	391 Move W29, TEMP
	392 Add W31, W29, 1
	393 Move X20, 0x761000
	394 Move X20, [X20+1448]
	395 Move X25, [X31+16]
	396 Move W8, 1
	397 Add W31, W24, 1
	398 NotImplemented "Instruction CSET not yet implemented."
	399 And W8, W9, W8
	400 Move TEMP, X8
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfEqual {415}
	404 Xor W8, W23, 1
	405 Move TEMP, X8
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 JumpIfEqual {415}
	409 Move X0, [X19+16]
	410 Compare X0, 0
	411 JumpIfEqual {532}
	412 Move W1, W25
	413 Move W2, W22
	414 Call RenderGraphResourceRegistry.UpdateSharedResourceLastFrameIndex, X0, X1, X2
	415 Move W8, [X21+24]
	416 Add W22, W22, 1
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move X8, [X0+16]
	419 Compare X8, 0
	420 JumpIfEqual {532}
	421 Move W9, [X8+24]
	422 Move X25, [X31+16]
	423 Move X20, 0x761000
	424 Move X20, [X20+1448]
	425 Move TEMP, 0
	426 Not TEMP
	427 Move W29, TEMP
	428 Add W26, W26, 1
	429 Move X0, [X19+128]
	430 Compare X0, 0
	431 JumpIfEqual {532}
	432 Move W8, [X0+24]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move X2, [X27]
	435 Move W1, W20
	436 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	437 Move W8, [X0+30]
	438 Move W29, W26
	439 Compare W8, 0
	440 JumpIfEqual {534}
	441 Move X20, 0x761000
	442 Move X20, [X20+1448]
	443 Move X0, [X20]
	444 Move W8, [X0+224]
	445 Compare W8, 0
	446 JumpIfNotEqual {448}
	447 Call 0x1C17DFC
	448 Subtract W1, W29, 1
	449 Move W0, W31
	450 Move X2, X31
	451 Call Math.Max, X0, X1
	452 Move X8, [X19+128]
	453 Compare X8, 0
	454 JumpIfEqual {532}
	455 Move W25, W0
	456 Move X2, [X27]
	457 Move X0, X8
	458 Move W1, W25
	459 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	460 Move W8, [X0+28]
	461 Compare W8, 0
	462 JumpIfEqual {476}
	463 Move X0, [X20]
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Subtract W1, W25, 1
	469 Move W0, W31
	470 Move X2, X31
	471 Call Math.Max, X0, X1
	472 Move X8, [X19+128]
	473 Move W25, W0
	474 Compare X8, 0
	475 JumpIfNotEqual {456}
	476 Move X0, [X19+128]
	477 Compare X0, 0
	478 JumpIfEqual {532}
	479 Move X2, [X27]
	480 Move W1, W25
	481 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	482 Move X8, [X0+16]
	483 Compare X8, 0
	484 JumpIfEqual {532}
	485 Move W9, [X8+24]
	486 Move X25, [X31+16]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Move X9, [X31+8]
	489 Add X8, X8, X9
	490 Move X0, [X8+32]
	491 Compare X0, 0
	492 JumpIfEqual {532}
	493 Move X8, 0x762000
	494 Move W10, [X0+28]
	495 Move X9, [X0+16]
	496 Move X8, [X8+3600]
	497 Add W10, W10, 1
	498 Move X8, [X8]
	499 Move [X0+28], W10
	500 Compare X9, 0
	501 JumpIfEqual {532}
	502 NotImplemented "Instruction LDRSW not yet implemented."
	503 Move W11, [X9+24]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Add W11, W10, 1
	506 Add X9, X9, X10
	507 Move W8, W31
	508 Move [X0+24], W11
	509 Move [X9+32], W22
	510 Move X8, [X8+32]
	511 Move W1, W22
	512 Move X8, [X8+192]
	513 Move X2, [X8+112]
	514 Call List`1<Int32>.AddWithResize, X0, X1
	515 Move W8, W31
	516 Add W25, W25, 1
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X20, [X31+192]
	519 Move X19, [X31+200]
	520 Move X22, [X31+176]
	521 Move X21, [X31+184]
	522 Move X24, [X31+160]
	523 Move X23, [X31+168]
	524 Move X26, [X31+144]
	525 Move X25, [X31+152]
	526 Move X28, [X31+128]
	527 Move X27, [X31+136]
	528 Move X29, [X31+112]
	529 Move X30, [X31+120]
	530 Add X31, X31, 208
	531 Return 
	532 Call 0x1C17F20
	533 Call 0x1C17F28
	534 Move X19, [X19+32]
	535 Move X0, X19
	536 Call 0x19913C0
	537 Move X0, 0x7BE000
	538 Move X0, [X0+3056]
	539 Call 0x1C17D08
	540 Move X2, X0
	541 Move X0, X19
	542 Move W1, W20
	543 Call 0x1BF8B6C
	544 Move X19, X0
	545 Move X0, 0x7BE000
	546 Move X0, [X0+3232]
	547 Call 0x1C17D08
	548 Move X8, [X31+16]
	549 Move X21, X0
	550 Move X0, 0x7BE000
	551 Move [X31+24], W8
	552 Move X0, [X0+3240]
	553 Call 0x1C17D08
	554 Add X1, X31, 24
	555 Call 0x1C17E04
	556 Move X20, X0
	557 Move X0, X19
	558 Call 0x19913C0
	559 Move X0, 0x7BE000
	560 Move X19, [X19+16]
	561 Move X0, [X0+3248]
	562 Call 0x1C17D08
	563 Move X1, X20
	564 Move X2, X21
	565 Move X3, X19
	566 Move X4, X31
	567 Call String.Format, X0, X1, X2, X3
	568 Move X19, X0
	569 Move X0, 0x761000
	570 Move X0, [X0+1456]
	571 Call 0x1C17D08
	572 Call 0x1C17F10
	573 Move X1, X19
	574 Move X2, X31
	575 Move X20, X0
	576 Call InvalidOperationException..ctor, X0, X1
	577 Move X0, 0x7BE000
	578 Move X0, [X0+3256]
	579 Call 0x1C17D08
	580 Move X1, X0
	581 Move X0, X20
	582 Call 0x1C17DEC
	583 Move X0, X22
	584 Call 0x1C17F18
	585 Move X19, X0
	586 Move X22, X31
	587 Move X19, X0
	588 Move X23, X31
	589 Move X19, X0
	590 Move X8, 0x7BE000
	591 Move X8, [X8+3064]
	592 Move X1, [X8]
	593 Add X0, X31, 80
	594 Call Enumerator<ResourceHandle>.Dispose, X0
	595 Compare X23, 0
	596 JumpIfEqual {607}
	597 Move X0, X23
	598 Call 0x1C17F18
	599 Move X19, X0
	600 Move X8, 0x7BE000
	601 Move X8, [X8+3064]
	602 Move X1, [X8]
	603 Add X0, X31, 80
	604 Call Enumerator<ResourceHandle>.Dispose, X0
	605 Compare X22, 0
	606 JumpIfNotEqual {609}
	607 Move X0, X19
	608 Call 0x1D2D690
	609 Move X0, X22
	610 Call 0x1C17F18
	611 Call 0x1991590

Method: System.Boolean AreRendererListsEmpty(System.Collections.Generic.List`1<UnityEngine.Experimental.Rendering.RenderGraphModule.RendererListHandle> rendererLists)

Disassembly:
	0x039936D8 LDR X30, [X31], #0x30
	0x039936DC BR X2
	0x039936E0 BL 0x1C16F20
	0x039936E4 BL 0x1C16F28
	0x039936E8 STP X30, X21, [X31 - 0x20]!
	0x039936EC STP X20, X19, [X31 + 0x10]
	0x039936F0 ADRP X21, 0xA4E000
	0x039936F4 LDRB W8, [X21 + 0xB08]
	0x039936F8 MOV X19, X1
	0x039936FC MOV X20, X0
	0x03993700 TBNZ X8, 0x0, 0x3993724
	0x03993704 ADRP X0, 0x7BD000
	0x03993708 LDR X0, [X0 + 0xC50]
	0x0399370C BL 0x1C16CF4
	0x03993710 ADRP X0, 0x78B000
	0x03993714 LDR X0, [X0 + 0x720]
	0x03993718 BL 0x1C16CF4
	0x0399371C MOVZ W8, 0x1
	0x03993720 STRB W8, [X21 + 0xB08]
	0x03993724 LDR X0, [X20 + 0x18]
	0x03993728 CBZ X0, 0x3993774
	0x0399372C ADRP X8, 0x7BD000
	0x03993730 LDR X8, [X8 + 0xC50]
	0x03993734 LDR W1, [X19 + 0x4]
	0x03993738 ADRP X19, 0x78B000
	0x0399373C LDR X2, [X8]
	0x03993740 LDR X19, [X19 + 0x720]
	0x03993744 BL 0x2B40B74
	0x03993748 LDR X8, [X19]
	0x0399374C MOV X19, X0
	0x03993750 LDR W9, [X8 + 0xE0]
	0x03993754 CBNZ W9, 0x3993760
	0x03993758 MOV X0, X8
	0x0399375C BL 0x1C16DFC
	0x03993760 ADD X0, X19, 0xD0
	0x03993764 LDP X20, X19, [X31 + 0x10]
	0x03993768 MOV X1, X31
	0x0399376C LDP X30, X21, [X31], #0x20
	0x03993770 B 0x3C56880
	0x03993774 BL 0x1C16F20
	0x03993778 SUB X31, X31, 0x50
	0x0399377C STR X30, [X31 + 0x10]
	0x03993780 STP X24, X23, [X31 + 0x20]
	0x03993784 STP X22, X21, [X31 + 0x30]
	0x03993788 STP X20, X19, [X31 + 0x40]
	0x0399378C STRB W31, [X31 + 0x18]
	0x03993790 LDRB W8, [X1 + 0x1C]
	0x03993794 CBNZ W8, 0x399386C
	0x03993798 MOV X21, X0
	0x0399379C LDR X0, [X1]
	0x039937A0 MOV X20, X1
	0x039937A4 CBZ X0, 0x3993884
	0x039937A8 LDR X8, [X0]
	0x039937AC MOV W19, W2
	0x039937B0 LDP X9, X1, [X8 + 0x198]
	0x039937B4 BLR X9
	0x039937B8 TBZ X0, 0x0, 0x3993888
	0x039937BC LDR X8, [X21 + 0x58]
	0x039937C0 CBZ X8, 0x39938EC
	0x039937C4 LDR X9, [X20]
	0x039937C8 CBZ X9, 0x39938F0
	0x039937CC LDR X1, [X8 + 0x18]
	0x039937D0 LDR X2, [X9 + 0x20]
	0x039937D4 STRB W31, [X31 + 0x8]
	0x039937D8 ADD X0, X31, 0x8
	0x039937DC MOV X3, X31
	0x039937E0 BL 0x39B1DB0
	0x039937E4 LDRB W8, [X31 + 0x8]
	0x039937E8 STRB W8, [X31 + 0x18]
	0x039937EC MOV X0, X21
	0x039937F0 MOV X1, X20
	0x039937F4 BL 0x3993AC4
	0x039937F8 LDR X24, [X21 + 0x38]
	0x039937FC CBZ X24, 0x39938F4
	0x03993800 MOVZ W1, 0x1
	0x03993804 MOV X0, X24
	0x03993808 BL 0x399740C
	0x0399380C LDR X2, [X21 + 0x58]
	0x03993810 MOV X0, X21
	0x03993814 MOV X1, X20
	0x03993818 BL 0x3993DC4
	0x0399381C LDR X0, [X20]
	0x03993820 CBZ X0, 0x3993900
	0x03993824 LDR X8, [X0]
	0x03993828 LDR X1, [X21 + 0x58]
	0x0399382C LDP X9, X2, [X8 + 0x178]
	0x03993830 BLR X9
	0x03993834 LDR X2, [X21 + 0x58]
	0x03993838 MOV X0, X21
	0x0399383C MOV X1, X20
	0x03993840 BL 0x3994084
	0x03993844 MOV X22, X31
	0x03993848 MOVZ W1, 0x1
	0x0399384C MOV X0, X24
	0x03993850 BL 0x39974E0
	0x03993854 CBNZ X22, 0x3993904
	0x03993858 MOV X24, X31
	0x0399385C ADD X0, X31, 0x18
	0x03993860 MOV X1, X31
	0x03993864 BL 0x39B1DB4
	0x03993868 CBNZ X24, 0x39938F8
	0x0399386C LDP X20, X19, [X31 + 0x40]
	0x03993870 LDP X22, X21, [X31 + 0x30]
	0x03993874 LDP X24, X23, [X31 + 0x20]
	0x03993878 LDR X30, [X31 + 0x10]
	0x0399387C ADD X31, X31, 0x50
	0x03993880 RET
	0x03993884 BL 0x1C16F20
	0x03993888 LDR X19, [X20]
	0x0399388C MOV X0, X19
	0x03993890 BL 0x19903C0
	0x03993894 ADRP X0, 0x7BD000
	0x03993898 LDR X19, [X19 + 0x10]
	0x0399389C LDR X0, [X0 + 0xCE8]
	0x039938A0 BL 0x1C16D08
	0x039938A4 MOV X1, X19
	0x039938A8 MOV X2, X31
	0x039938AC BL 0x321EFD0
	0x039938B0 MOV X19, X0
	0x039938B4 ADRP X0, 0x760000
	0x039938B8 LDR X0, [X0 + 0x5B0]
	0x039938BC BL 0x1C16D08
	0x039938C0 BL 0x1C16F10
	0x039938C4 MOV X1, X19
	0x039938C8 MOV X2, X31
	0x039938CC MOV X20, X0
	0x039938D0 BL 0x337DF1C
	0x039938D4 ADRP X0, 0x7BD000
	0x039938D8 LDR X0, [X0 + 0xCF0]
	0x039938DC BL 0x1C16D08
	0x039938E0 MOV X1, X0
	0x039938E4 MOV X0, X20
	0x039938E8 BL 0x1C16DEC
	0x039938EC BL 0x1C16F20
	0x039938F0 BL 0x1C16F20
	0x039938F4 BL 0x1C16F20
	0x039938F8 MOV X0, X24

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X21, 0xA4F000
	010 Move W8, [X21+2749]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x7BE000
	018 Move X0, [X0+3160]
	019 Call 0x1C17CF4
	020 Move X0, 0x7BE000
	021 Move X0, [X0+3168]
	022 Call 0x1C17CF4
	023 Move X0, 0x7BE000
	024 Move X0, [X0+3176]
	025 Call 0x1C17CF4
	026 Move X0, 0x7BE000
	027 Move X0, [X0+3192]
	028 Call 0x1C17CF4
	029 Move X0, 0x7BE000
	030 Move X0, [X0+3264]
	031 Call 0x1C17CF4
	032 Move X0, 0x7BE000
	033 Move X0, [X0+3200]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2749], W8
	037 Move [X31+96], X31
	038 Move [X31+104], X31
	039 Move [X31+112], X31
	040 Compare X19, 0
	041 JumpIfEqual {121}
	042 Move X8, 0x7BE000
	043 Move X8, [X8+3192]
	044 Move X22, 0x7BE000
	045 Move X23, 0x7BE000
	046 Move X21, 0x7BE000
	047 Move X1, [X8]
	048 Move X22, [X22+3168]
	049 Move X23, [X23+3200]
	050 Move X21, [X21+3160]
	051 Add X8, X31, 32
	052 Move X0, X19
	053 Call List`1<RendererListHandle>.GetEnumerator, X0
	054 Move V0, [X31+2]
	055 Move X8, [X31+48]
	056 Move [X31+6], V0
	057 Move [X31+112], X8
	058 Move X1, [X22]
	059 Add X0, X31, 96
	060 Call Enumerator<RendererListHandle>.MoveNext, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {102}
	065 Move X8, [X31+112]
	066 Move [X31+136], X8
	067 Move X0, [X20+16]
	068 Compare X0, 0
	069 JumpIfEqual {117}
	070 Add X8, X31, 32
	071 Add X1, X31, 136
	072 Call RenderGraphResourceRegistry.GetRendererList, X0, X1
	073 Move V0, [X31+2]
	074 Move X8, [X31+48]
	075 Move [X31+4], V0
	076 Move [X31+80], X8
	077 Move X24, [X20+88]
	078 Compare X24, 0
	079 JumpIfEqual {119}
	080 Move V0, [X31+4]
	081 Move X8, [X31+80]
	082 Move X0, [X23]
	083 Move [X31+2], V0
	084 Move [X31+48], X8
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move V0, [X31+2]
	090 Move X8, [X31+48]
	091 Add X0, X24, 16
	092 Move [X31], V0
	093 Move [X31+16], X8
	094 Add X1, X31, 0
	095 Move X2, X31
	096 Call ScriptableRenderContext.QueryRendererListStatus, X0, X1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X1, [X21]
	099 Add X0, X31, 96
	100 Call Enumerator<RendererListHandle>.Dispose, X0
	101 Move W0, W31
	102 Move X1, [X21]
	103 Add X0, X31, 96
	104 Call Enumerator<RendererListHandle>.Dispose, X0
	105 Move W8, [X19+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move X20, [X31+176]
	109 Move X19, [X31+184]
	110 Move X22, [X31+160]
	111 Move X21, [X31+168]
	112 Move X24, [X31+144]
	113 Move X23, [X31+152]
	114 Move X30, [X31+128]
	115 Add X31, X31, 192
	116 Return X0
	117 Move X22, X21
	118 Call 0x1C17F20
	119 Move X22, X21
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Move X22, X21
	123 Move X20, X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X20
	126 Call 0x3EB2AD0
	127 Move X21, [X0]
	128 Call 0x3EB2AE0
	129 Move X1, [X22]
	130 Add X0, X31, 96
	131 Call Enumerator<RendererListHandle>.Dispose, X0
	132 Compare X21, 0
	133 JumpIfEqual {105}
	134 Move X0, X21
	135 Call 0x1C17F18
	136 Move X21, X31
	137 Move X20, X0
	138 Move X1, [X22]
	139 Add X0, X31, 96
	140 Call Enumerator<RendererListHandle>.Dispose, X0
	141 Compare X21, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X20
	144 Call 0x1D2D690
	145 Move X0, X21
	146 Call 0x1C17F18
	147 Call 0x1991590

Method: System.Void TryCullPassAtIndex(System.Int32 passIndex)

Disassembly:
	0x039939CC MOV X23, X1
	0x039939D0 MOV X22, X0
	0x039939D4 CMP W23, 0x1
	0x039939D8 B.NE 0x3993AB8
	0x039939DC MOV X0, X22
	0x039939E0 BL 0x3EB1AD0
	0x039939E4 MOV X22, X0
	0x039939E8 ADRP X0, 0x760000
	0x039939EC LDR X0, [X0 + 0x7D0]
	0x039939F0 BL 0x1C16D08
	0x039939F4 LDR X8, [X22]
	0x039939F8 LDR X1, [X8]
	0x039939FC BL 0x1C17270
	0x03993A00 TBZ X0, 0x0, 0x3993A90
	0x03993A04 LDR X22, [X22]
	0x03993A08 BL 0x3EB1AE0
	0x03993A0C MOVZ W8, 0x1
	0x03993A10 STRB W8, [X21 + 0x50]
	0x03993A14 LDR X20, [X20]
	0x03993A18 MOV X0, X20
	0x03993A1C BL 0x19903C0
	0x03993A20 LDR X20, [X20 + 0x10]
	0x03993A24 STR W19, [X31 + 0x1C]
	0x03993A28 ADRP X0, 0x760000
	0x03993A2C LDR X0, [X0 + 0x758]
	0x03993A30 BL 0x1C16D08
	0x03993A34 ADD X1, X31, 0x1C
	0x03993A38 BL 0x1C16E04
	0x03993A3C MOV X19, X0
	0x03993A40 ADRP X0, 0x7BD000
	0x03993A44 LDR X0, [X0 + 0xCF8]
	0x03993A48 BL 0x1C16D08
	0x03993A4C MOV X1, X20
	0x03993A50 MOV X2, X19
	0x03993A54 MOV X3, X31
	0x03993A58 BL 0x3227BD4
	0x03993A5C MOV X19, X0
	0x03993A60 ADRP X0, 0x760000
	0x03993A64 LDR X0, [X0 + 0xA28]
	0x03993A68 BL 0x1C16D08
	0x03993A6C BL 0x19903D0
	0x03993A70 MOV X0, X19
	0x03993A74 MOV X1, X31
	0x03993A78 BL 0x3C0649C
	0x03993A7C MOV X0, X22
	0x03993A80 MOV X1, X31
	0x03993A84 BL 0x3C02C84
	0x03993A88 MOV X0, X22
	0x03993A8C BL 0x1C16F18
	0x03993A90 MOVZ W0, 0x8
	0x03993A94 BL 0x3EB1AF0
	0x03993A98 LDR X8, [X22]
	0x03993A9C STR X8, [X0]
	0x03993AA0 ADRP X1, 0x521000
	0x03993AA4 ADD X1, X1, 0xE58
	0x03993AA8 MOV X2, X31
	0x03993AAC BL 0x3EB1B00
	0x03993AB0 MOV X22, X0
	0x03993AB4 BL 0x3EB1AE0
	0x03993AB8 MOV X0, X22
	0x03993ABC BL 0x1D2C690
	0x03993AC0 BL 0x1990590
	0x03993AC4 SUB X31, X31, 0x60
	0x03993AC8 STP X30, X27, [X31 + 0x10]
	0x03993ACC STP X26, X25, [X31 + 0x20]
	0x03993AD0 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA4F000
	007 Move W8, [X21+2750]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7BE000
	015 Move X0, [X0+2856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2750], W8
	019 Move X0, [X20+128]
	020 Compare X0, 0
	021 JumpIfEqual {85}
	022 Move X21, 0x7BE000
	023 Move X21, [X21+2856]
	024 Move W1, W19
	025 Move X2, [X21]
	026 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	027 Move X8, [X20+128]
	028 Compare X8, 0
	029 JumpIfEqual {85}
	030 Move X2, [X21]
	031 Move X22, [X0]
	032 Move X0, X8
	033 Move W1, W19
	034 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	035 Move W8, [X0+28]
	036 Compare W8, 0
	037 JumpIfEqual {44}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Compare X22, 0
	045 JumpIfEqual {85}
	046 Move W8, [X22+41]
	047 Compare W8, 0
	048 JumpIfEqual {38}
	049 Move W8, [X22+73]
	050 Compare W8, 0
	051 JumpIfEqual {38}
	052 Move X0, [X20+128]
	053 Compare X0, 0
	054 JumpIfEqual {85}
	055 Move X2, [X21]
	056 Move W1, W19
	057 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	058 Move W8, [X0+30]
	059 Compare W8, 0
	060 JumpIfNotEqual {38}
	061 Move X1, [X22+104]
	062 Move X0, X20
	063 Call RenderGraph.AreRendererListsEmpty, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {38}
	068 Move X0, [X20+128]
	069 Compare X0, 0
	070 JumpIfEqual {85}
	071 Move X2, [X21]
	072 Move W1, W19
	073 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	074 Move X8, [X20+128]
	075 Compare X8, 0
	076 JumpIfEqual {85}
	077 Move X2, [X21]
	078 Move X20, X0
	079 Move X0, X8
	080 Move W1, W19
	081 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	082 Move W8, 1
	083 Move [X0+29], W8
	084 Move [X20+28], W8
	085 Call 0x1C17F20

Method: System.Void CullRendererLists()

Disassembly:
	0x03993AD4 STP X22, X21, [X31 + 0x40]
	0x03993AD8 STP X20, X19, [X31 + 0x50]
	0x03993ADC ADRP X20, 0xA4E000
	0x03993AE0 LDRB W8, [X20 + 0xACA]
	0x03993AE4 MOV X19, X1
	0x03993AE8 MOV X21, X0
	0x03993AEC TBNZ X8, 0x0, 0x3993B40
	0x03993AF0 ADRP X0, 0x760000
	0x03993AF4 LDR X0, [X0 + 0x758]
	0x03993AF8 BL 0x1C16CF4
	0x03993AFC ADRP X0, 0x760000
	0x03993B00 LDR X0, [X0 + 0x9D0]
	0x03993B04 BL 0x1C16CF4
	0x03993B08 ADRP X0, 0x7BD000
	0x03993B0C LDR X0, [X0 + 0xD00]
	0x03993B10 BL 0x1C16CF4
	0x03993B14 ADRP X0, 0x7BD000
	0x03993B18 LDR X0, [X0 + 0xD08]
	0x03993B1C BL 0x1C16CF4
	0x03993B20 ADRP X0, 0x7BD000
	0x03993B24 LDR X0, [X0 + 0xD10]
	0x03993B28 BL 0x1C16CF4
	0x03993B2C ADRP X0, 0x7BD000
	0x03993B30 LDR X0, [X0 + 0xD18]
	0x03993B34 BL 0x1C16CF4
	0x03993B38 MOVZ W8, 0x1
	0x03993B3C STRB W8, [X20 + 0xACA]
	0x03993B40 LDR X8, [X21 + 0x30]
	0x03993B44 CBZ X8, 0x3993D08
	0x03993B48 LDRB W8, [X8 + 0x24]
	0x03993B4C CBZ W8, 0x3993CEC
	0x03993B50 ADRP X25, 0x760000
	0x03993B54 LDR X25, [X25 + 0x9D0]
	0x03993B58 LDR X27, [X19]
	0x03993B5C LDR X20, [X21 + 0x38]
	0x03993B60 MOVZ W1, 0x3
	0x03993B64 LDR X0, [X25]
	0x03993B68 BL 0x1C16D6C
	0x03993B6C CBZ X27, 0x3993D08
	0x03993B70 ADRP X26, 0x760000
	0x03993B74 LDR X26, [X26 + 0x758]
	0x03993B78 MOV X22, X0
	0x03993B7C LDR W8, [X27 + 0x18]
	0x03993B80 ADD X1, X31, 0xC
	0x03993B84 LDR X0, [X26]
	0x03993B88 STR W8, [X31 + 0xC]
	0x03993B8C BL 0x1C16E04
	0x03993B90 CBZ X22, 0x3993D08
	0x03993B94 MOV X23, X0
	0x03993B98 CBZ X0, 0x3993BB0
	0x03993B9C LDR X8, [X22]
	0x03993BA0 MOV X0, X23
	0x03993BA4 LDR X1, [X8 + 0x40]
	0x03993BA8 BL 0x1C16E00
	0x03993BAC CBZ X0, 0x3993D10
	0x03993BB0 LDR W8, [X22 + 0x18]
	0x03993BB4 CBZ W8, 0x3993D0C
	0x03993BB8 STR X23, [X22 + 0x20]
	0x03993BBC LDRB W9, [X27 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA4F000
	006 Move W8, [X20+2751]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x7BE000
	013 Move X0, [X0+2856]
	014 Call 0x1C17CF4
	015 Move X0, 0x7BE000
	016 Move X0, [X0+2864]
	017 Call 0x1C17CF4
	018 Move X0, 0x7BE000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2751], W8
	023 Move X0, [X19+128]
	024 Compare X0, 0
	025 JumpIfEqual {67}
	026 Move X21, 0x7BE000
	027 Move X21, [X21+2856]
	028 Move W20, W31
	029 Move W8, [X0+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X2, [X21]
	032 Move W1, W20
	033 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	034 Move W8, [X0+28]
	035 Compare W8, 0
	036 JumpIfNotEqual {63}
	037 Move X0, [X19+128]
	038 Compare X0, 0
	039 JumpIfEqual {67}
	040 Move X2, [X21]
	041 Move W1, W20
	042 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	043 Move W8, [X0+30]
	044 Compare W8, 0
	045 JumpIfNotEqual {63}
	046 Move X0, [X19+128]
	047 Compare X0, 0
	048 JumpIfEqual {67}
	049 Move X2, [X21]
	050 Move W1, W20
	051 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	052 Move X8, [X0]
	053 Compare X8, 0
	054 JumpIfEqual {67}
	055 Move X8, [X8+104]
	056 Compare X8, 0
	057 JumpIfEqual {67}
	058 Move W8, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X19
	061 Move W1, W20
	062 Call RenderGraph.TryCullPassAtIndex, X0, X1
	063 Move X0, [X19+128]
	064 Add W20, W20, 1
	065 Compare X0, 0
	066 JumpIfNotEqual {29}
	067 Call 0x1C17F20
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 

Method: System.Void CompileRenderGraph()

Disassembly:
	0x0398EF88 LDR W8, [X0 + 0xE0]
	0x0398EF8C CBNZ W8, 0x398EF98
	0x0398EF90 BL 0x1C16DFC
	0x0398EF94 LDR X0, [X22]
	0x0398EF98 LDR X8, [X0 + 0xB8]
	0x0398EF9C ADRP X23, 0x7C2000
	0x0398EFA0 LDR X20, [X8 + 0x30]
	0x0398EFA4 LDR X23, [X23 + 0xBD0]
	0x0398EFA8 MOV X0, X20
	0x0398EFAC MOV X1, X19
	0x0398EFB0 MOV X2, X31
	0x0398EFB4 BL 0x33C0DE4
	0x0398EFB8 MOV X21, X0
	0x0398EFBC CBZ X0, 0x398EFD0
	0x0398EFC0 LDR X1, [X23]
	0x0398EFC4 LDR X8, [X21]
	0x0398EFC8 CMP X8, X1
	0x0398EFCC B.NE 0x398F014
	0x0398EFD0 LDR X0, [X22]
	0x0398EFD4 LDR W8, [X0 + 0xE0]
	0x0398EFD8 CBNZ W8, 0x398EFE4
	0x0398EFDC BL 0x1C16DFC
	0x0398EFE0 LDR X0, [X22]
	0x0398EFE4 LDR X8, [X0 + 0xB8]
	0x0398EFE8 MOV X1, X21
	0x0398EFEC MOV X2, X20
	0x0398EFF0 ADD X0, X8, 0x30
	0x0398EFF4 BL 0x1C24138
	0x0398EFF8 CMP X20, X0
	0x0398EFFC MOV X20, X0
	0x0398F000 B.NE 0x398EFA8
	0x0398F004 LDP X20, X19, [X31 + 0x20]
	0x0398F008 LDP X22, X21, [X31 + 0x10]
	0x0398F00C LDP X30, X23, [X31], #0x30
	0x0398F010 RET
	0x0398F014 MOV X0, X21
	0x0398F018 BL 0x1C171E0
	0x0398F01C STP X30, X23, [X31 - 0x30]!
	0x0398F020 STP X22, X21, [X31 + 0x10]
	0x0398F024 STP X20, X19, [X31 + 0x20]
	0x0398F028 ADRP X20, 0xA52000
	0x0398F02C ADRP X22, 0x7C1000
	0x0398F030 LDRB W8, [X20 + 0xAAD]
	0x0398F034 LDR X22, [X22 + 0x8C0]
	0x0398F038 MOV X19, X0
	0x0398F03C TBNZ X8, 0x0, 0x398F060
	0x0398F040 ADRP X0, 0x7C1000
	0x0398F044 LDR X0, [X0 + 0xBD0]
	0x0398F048 BL 0x1C16CF4
	0x0398F04C ADRP X0, 0x7C1000
	0x0398F050 LDR X0, [X0 + 0x8C0]
	0x0398F054 BL 0x1C16CF4
	0x0398F058 MOVZ W8, 0x1
	0x0398F05C STRB W8, [X20 + 0xAAD]
	0x0398F060 LDR X0, [X22]
	0x0398F064 LDR W8, [X0 + 0xE0]
	0x0398F068 CBNZ W8, 0x398F074
	0x0398F06C BL 0x1C16DFC
	0x0398F070 LDR X0, [X22]
	0x0398F074 LDR X8, [X0 + 0xB8]
	0x0398F078 ADRP X23, 0x7C1000
	0x0398F07C LDR X20, [X8 + 0x30]
	0x0398F080 LDR X23, [X23 + 0xBD0]
	0x0398F084 MOV X0, X20
	0x0398F088 MOV X1, X19
	0x0398F08C MOV X2, X31
	0x0398F090 BL 0x33C0FDC
	0x0398F094 MOV X21, X0
	0x0398F098 CBZ X0, 0x398F0AC
	0x0398F09C LDR X1, [X23]
	0x0398F0A0 LDR X8, [X21]
	0x0398F0A4 CMP X8, X1
	0x0398F0A8 B.NE 0x398F0F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA54000
	005 Move W8, [X20+2752]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7C3000
	012 Move X0, [X0+2848]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2752], W8
	016 Move [X31+8], W31
	017 Move X8, [X19+88]
	018 Compare X8, 0
	019 JumpIfEqual {55}
	020 Move X9, 0x7C3000
	021 Move X9, [X9+2848]
	022 Move X20, [X8+24]
	023 Move W0, W31
	024 Move X1, [X9]
	025 Call 0x2236BC0, X0
	026 Move X2, X0
	027 Add X0, X31, 8
	028 Move X1, X20
	029 Move X3, X31
	030 Call ProfilingScope..ctor, X0, X1, X2
	031 Move X0, X19
	032 Call RenderGraph.InitializeCompilationData, X0
	033 Move X0, X19
	034 Call RenderGraph.CountReferences, X0
	035 Move X0, X19
	036 Call RenderGraph.CullUnusedPasses, X0
	037 Move X0, X19
	038 Call RenderGraph.CreateRendererLists, X0
	039 Move W8, [X19+168]
	040 Compare W8, 0
	041 JumpIfEqual {44}
	042 Move X0, X19
	043 Call RenderGraph.CullRendererLists, X0
	044 Move X0, X19
	045 Call RenderGraph.UpdateResourceAllocationAndSynchronization, X0
	046 Move X0, X19
	047 Call RenderGraph.LogRendererListsCreation, X0
	048 Add X0, X31, 8
	049 Move X1, X31
	050 Call ProfilingScope.Dispose, X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return 
	055 Call 0x1C17F20
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X20, X0
	058 Move X0, X20
	059 Call 0x3EB2AD0
	060 Move X19, [X0]
	061 Call 0x3EB2AE0
	062 Add X0, X31, 8
	063 Move X1, X31
	064 Call ProfilingScope.Dispose, X0
	065 Compare X19, 0
	066 JumpIfEqual {51}
	067 Move X0, X19
	068 Call 0x1C17F18
	069 Move X19, X31
	070 Move X20, X0
	071 Add X0, X31, 8
	072 Move X1, X31
	073 Call ProfilingScope.Dispose, X0
	074 Compare X19, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X20
	077 Call 0x1D2D690
	078 Move X0, X19
	079 Call 0x1C17F18
	080 Call 0x1991590

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo CompilePassImmediatly(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphPass pass)

Disassembly:
	0x03993CD0 LDR X1, [X8]
	0x03993CD4 MOV X0, X21
	0x03993CD8 MOV X2, X22
	0x03993CDC BL 0x39904A0
	0x03993CE0 MOVZ W1, 0x1
	0x03993CE4 MOV X0, X20
	0x03993CE8 BL 0x39974E0
	0x03993CEC LDP X20, X19, [X31 + 0x50]
	0x03993CF0 LDP X22, X21, [X31 + 0x40]
	0x03993CF4 LDP X24, X23, [X31 + 0x30]
	0x03993CF8 LDP X26, X25, [X31 + 0x20]
	0x03993CFC LDP X30, X27, [X31 + 0x10]
	0x03993D00 ADD X31, X31, 0x60
	0x03993D04 RET
	0x03993D08 BL 0x1C16F20
	0x03993D0C BL 0x1C16F28
	0x03993D10 BL 0x1C16F44
	0x03993D14 MOV X1, X31
	0x03993D18 BL 0x1C16DEC
	0x03993D1C BL 0x1C16F20
	0x03993D20 BL 0x1C16F28
	0x03993D24 BL 0x1C16F20
	0x03993D28 BL 0x1C16F44
	0x03993D2C MOV X1, X31
	0x03993D30 BL 0x1C16DEC
	0x03993D34 B 0x3993D38
	0x03993D38 MOV X21, X0
	0x03993D3C CMP W1, 0x1
	0x03993D40 B.NE 0x3993D6C
	0x03993D44 MOV X0, X21
	0x03993D48 BL 0x3EB1AD0
	0x03993D4C LDR X19, [X0]
	0x03993D50 BL 0x3EB1AE0
	0x03993D54 MOVZ W1, 0x1
	0x03993D58 MOV X0, X20
	0x03993D5C BL 0x39974E0
	0x03993D60 CBZ X19, 0x3993CEC
	0x03993D64 MOV X0, X19
	0x03993D68 BL 0x1C16F18
	0x03993D6C MOV X19, X31
	0x03993D70 B 0x3993D78
	0x03993D74 MOV X21, X0
	0x03993D78 MOVZ W1, 0x1
	0x03993D7C MOV X0, X20
	0x03993D80 BL 0x39974E0
	0x03993D84 CBNZ X19, 0x3993D90
	0x03993D88 MOV X0, X21
	0x03993D8C BL 0x1D2C690
	0x03993D90 MOV X0, X19
	0x03993D94 BL 0x1C16F18
	0x03993D98 BL 0x1990590
	0x03993D9C STR X30, [X31 - 0x10]!
	0x03993DA0 STRB W31, [X0 + 0x10]
	0x03993DA4 STR W2, [X0]
	0x03993DA8 STR X1, [X0 + 0x8]
	0x03993DAC CBZ X1, 0x3993DC0
	0x03993DB0 MOV X0, X1
	0x03993DB4 MOV W1, W2
	0x03993DB8 LDR X30, [X31], #0x10
	0x03993DBC B 0x399740C
	0x03993DC0 BL 0x1C16F20
	0x03993DC4 SUB X31, X31, 0xA0
	0x03993DC8 STP X29, X30, [X31 + 0x40]
	0x03993DCC STP X28, X27, [X31 + 0x50]
	0x03993DD0 STP X26, X25, [X31 + 0x60]
	0x03993DD4 STP X24, X23, [X31 + 0x70]
	0x03993DD8 STP X22, X21, [X31 + 0x80]
	0x03993DDC STP X20, X19, [X31 + 0x90]
	0x03993DE0 ADRP X22, 0xA4E000
	0x03993DE4 LDRB W8, [X22 + 0xAC4]
	0x03993DE8 MOV X19, X2
	0x03993DEC MOV X21, X1
	0x03993DF0 MOV X20, X0
	0x03993DF4 TBNZ X8, 0x0, 0x3993E54
	0x03993DF8 ADRP X0, 0x7BD000
	0x03993DFC LDR X0, [X0 + 0xD20]
	0x03993E00 BL 0x1C16CF4
	0x03993E04 ADRP X0, 0x7BD000
	0x03993E08 LDR X0, [X0 + 0xB28]
	0x03993E0C BL 0x1C16CF4
	0x03993E10 ADRP X0, 0x78B000
	0x03993E14 LDR X0, [X0 + 0xB18]
	0x03993E18 BL 0x1C16CF4
	0x03993E1C ADRP X0, 0x78B000
	0x03993E20 LDR X0, [X0 + 0xB28]
	0x03993E24 BL 0x1C16CF4
	0x03993E28 ADRP X0, 0x78B000
	0x03993E2C LDR X0, [X0 + 0xB38]
	0x03993E30 BL 0x1C16CF4
	0x03993E34 ADRP X0, 0x78B000
	0x03993E38 LDR X0, [X0 + 0xB50]
	0x03993E3C BL 0x1C16CF4
	0x03993E40 ADRP X0, 0x7BD000
	0x03993E44 LDR X0, [X0 + 0xC80]
	0x03993E48 BL 0x1C16CF4
	0x03993E4C MOVZ W8, 0x1
	0x03993E50 STRB W8, [X22 + 0xAC4]
	0x03993E54 STP X31, X31, [X31 + 0x20]
	0x03993E58 STR X31, [X31 + 0x30]
	0x03993E5C CBZ X19, 0x3994044
	0x03993E60 ADRP X29, 0x78B000
	0x03993E64 ADRP X23, 0x78B000
	0x03993E68 ADRP X27, 0x78B000
	0x03993E6C ADRP X28, 0x7BD000
	0x03993E70 ADRP X26, 0x7BD000
	0x03993E74 ADRP X24, 0x7BD000
	0x03993E78 LDR X29, [X29 + 0xB50]
	0x03993E7C LDR X23, [X23 + 0xB28]
	0x03993E80 LDR X27, [X27 + 0xB18]
	0x03993E84 LDR X28, [X28 + 0xC80]
	0x03993E88 LDR X8, [X19 + 0x18]
	0x03993E8C LDR X25, [X21]
	0x03993E90 LDR X26, [X26 + 0xD20]
	0x03993E94 LDR X24, [X24 + 0xB28]
	0x03993E98 MOV W22, W31
	0x03993E9C STR X8, [X20 + 0x60]
	0x03993EA0 LDR X8, [X21 + 0x8]
	0x03993EA4 CBZ X8, 0x3994044
	0x03993EA8 LDR W9, [X8 + 0x18]
	0x03993EAC CMP W22, W9
	0x03993EB0 B.CS 0x3994048
	0x03993EB4 ADD X8, X8, W22, 0x3, SXTW
	0x03993EB8 LDR X0, [X8 + 0x20]
	0x03993EBC CBZ X0, 0x3994044
	0x03993EC0 LDR X1, [X29]
	0x03993EC4 ADD X8, X31, 0x8
	0x03993EC8 BL 0x2FDD2BC
	0x03993ECC LDUR V0, [X31 + 0x8]
	0x03993ED0 LDR X8, [X31 + 0x18]
	0x03993ED4 STR V0, [X31 + 0x2]
	0x03993ED8 STR X8, [X31 + 0x30]
	0x03993EDC LDR X1, [X23]
	0x03993EE0 ADD X0, X31, 0x20
	0x03993EE4 BL 0x2BBDDA0
	0x03993EE8 TBZ X0, 0x0, 0x3993F08
	0x03993EEC LDR X0, [X20 + 0x10]
	0x03993EF0 CBZ X0, 0x3993F24
	0x03993EF4 LDR W3, [X31 + 0x30]
	0x03993EF8 MOV X1, X19
	0x03993EFC MOV W2, W22
	0x03993F00 BL 0x39946C4
	0x03993F04 B 0x3993EDC
	0x03993F08 LDR X1, [X27]
	0x03993F0C ADD X0, X31, 0x20
	0x03993F10 BL 0x2BBDD9C
	0x03993F14 ADD W22, W22, 0x1
	0x03993F18 CMP W22, 0x2
	0x03993F1C B.NE 0x3993EA0
	0x03993F20 B 0x3993F64
	0x03993F24 BL 0x1C16F20
	0x03993F28 B 0x3994058
	0x03993F2C B 0x3993F34
	0x03993F30 B 0x3993F34
	0x03993F34 CMP W1, 0x1
	0x03993F38 B.NE 0x399404C
	0x03993F3C BL 0x3EB1AD0
	0x03993F40 LDR X8, [X0]
	0x03993F44 STR X8, [X31]
	0x03993F48 BL 0x3EB1AE0
	0x03993F4C LDR X1, [X27]
	0x03993F50 ADD X0, X31, 0x20
	0x03993F54 BL 0x2BBDD9C
	0x03993F58 LDR X0, [X31]
	0x03993F5C CBZ X0, 0x3993F14
	0x03993F60 BL 0x1C16F18
	0x03993F64 MOV X0, X20
	0x03993F68 MOV X1, X21
	0x03993F6C MOV X2, X19
	0x03993F70 BL 0x39942DC
	0x03993F74 LDRB W8, [X21 + 0x40]
	0x03993F78 CBZ W8, 0x3993FF0
	0x03993F7C LDR X0, [X28]
	0x03993F80 LDR X22, [X19 + 0x18]
	0x03993F84 ADD X23, X19, 0x10
	0x03993F88 LDR W8, [X0 + 0xE0]
	0x03993F8C CBNZ W8, 0x3993F94
	0x03993F90 BL 0x1C16DFC
	0x03993F94 MOV X0, X23
	0x03993F98 MOV X1, X22
	0x03993F9C MOV X2, X31
	0x03993FA0 BL 0x3C58FE4
	0x03993FA4 LDR X0, [X19 + 0x18]
	0x03993FA8 CBZ X0, 0x3994044
	0x03993FAC MOV X1, X31
	0x03993FB0 BL 0x3C4C310
	0x03993FB4 CBZ X25, 0x3994044
	0x03993FB8 LDR X0, [X26]
	0x03993FBC LDR X22, [X25 + 0x10]
	0x03993FC0 LDR W8, [X0 + 0xE0]
	0x03993FC4 CBNZ W8, 0x3993FCC
	0x03993FC8 BL 0x1C16DFC
	0x03993FCC MOV X0, X22
	0x03993FD0 MOV X1, X31
	0x03993FD4 BL 0x399D5B8
	0x03993FD8 CBZ X0, 0x3994044
	0x03993FDC MOVZ W1, 0x2
	0x03993FE0 MOV X2, X31
	0x03993FE4 MOV X22, X0
	0x03993FE8 BL 0x3C4D390
	0x03993FEC STR X22, [X19 + 0x18]
	0x03993FF0 LDR W1, [X21 + 0x20]
	0x03993FF4 ADDS W31, W1, 0x1
	0x03993FF8 B.EQ 0x3994024
	0x03993FFC LDR X0, [X20 + 0x80]
	0x03994000 CBZ X0, 0x3994044
	0x03994004 LDR X2, [X24]
	0x03994008 LDR X19, [X19 + 0x18]
	0x0399400C BL 0x2B4260C
	0x03994010 CBZ X19, 0x3994044
	0x03994014 LDP X1, X2, [X0 + 0x30]
	0x03994018 MOV X0, X19
	0x0399401C MOV X3, X31
	0x03994020 BL 0x3C4EB20
	0x03994024 LDP X20, X19, [X31 + 0x90]
	0x03994028 LDP X22, X21, [X31 + 0x80]
	0x0399402C LDP X24, X23, [X31 + 0x70]
	0x03994030 LDP X26, X25, [X31 + 0x60]
	0x03994034 LDP X28, X27, [X31 + 0x50]
	0x03994038 LDP X29, X30, [X31 + 0x40]
	0x0399403C ADD X31, X31, 0xA0
	0x03994040 RET
	0x03994044 BL 0x1C16F20
	0x03994048 BL 0x1C16F28
	0x0399404C MOV X19, X0
	0x03994050 MOV X20, X31
	0x03994054 B 0x3994060
	0x03994058 LDR X20, [X31]
	0x0399405C MOV X19, X0
	0x03994060 LDR X1, [X27]
	0x03994064 ADD X0, X31, 0x20
	0x03994068 BL 0x2BBDD9C
	0x0399406C CBNZ X20, 0x3994078
	0x03994070 MOV X0, X19
	0x03994074 BL 0x1D2C690
	0x03994078 MOV X0, X20
	0x0399407C BL 0x1C16F18
	0x03994080 BL 0x1990590
	0x03994084 SUB X31, X31, 0x90
	0x03994088 STR X30, [X31 + 0x40]
	0x0399408C STP X26, X25, [X31 + 0x50]
	0x03994090 STP X24, X23, [X31 + 0x60]
	0x03994094 STP X22, X21, [X31 + 0x70]
	0x03994098 STP X20, X19, [X31 + 0x80]
	0x0399409C ADRP X22, 0xA4D000
	0x039940A0 LDRB W8, [X22 + 0xAC5]
	0x039940A4 MOV X19, X2
	0x039940A8 MOV X20, X1
	0x039940AC MOV X21, X0
	0x039940B0 TBNZ X8, 0x0, 0x3994104
	0x039940B4 ADRP X0, 0x7BC000
	0x039940B8 LDR X0, [X0 + 0xD20]
	0x039940BC BL 0x1C16CF4
	0x039940C0 ADRP X0, 0x78A000
	0x039940C4 LDR X0, [X0 + 0xB18]
	0x039940C8 BL 0x1C16CF4
	0x039940CC ADRP X0, 0x78A000
	0x039940D0 LDR X0, [X0 + 0xB28]
	0x039940D4 BL 0x1C16CF4
	0x039940D8 ADRP X0, 0x78A000
	0x039940DC LDR X0, [X0 + 0xB38]
	0x039940E0 BL 0x1C16CF4
	0x039940E4 ADRP X0, 0x78A000
	0x039940E8 LDR X0, [X0 + 0xB50]
	0x039940EC BL 0x1C16CF4
	0x039940F0 ADRP X0, 0x7BC000
	0x039940F4 LDR X0, [X0 + 0xC80]
	0x039940F8 BL 0x1C16CF4
	0x039940FC MOVZ W8, 0x1
	0x03994100 STRB W8, [X22 + 0xAC5]
	0x03994104 STP X31, X31, [X31 + 0x20]
	0x03994108 STR X31, [X31 + 0x30]
	0x0399410C LDRB W8, [X20 + 0x28]
	0x03994110 CBZ W8, 0x399412C
	0x03994114 CBZ X19, 0x39942A0
	0x03994118 LDR X0, [X19 + 0x18]
	0x0399411C CBZ X0, 0x39942A0
	0x03994120 MOV X1, X31
	0x03994124 BL 0x3C4EA98
	0x03994128 STP X0, X1, [X20 + 0x30]
	0x0399412C LDRB W8, [X20 + 0x40]
	0x03994130 CBZ W8, 0x399419C
	0x03994134 CBZ X19, 0x39942A0
	0x03994138 ADRP X8, 0x7BC000
	0x0399413C LDR X8, [X8 + 0xC80]
	0x03994140 ADRP X24, 0x7BC000
	0x03994144 LDR X22, [X19 + 0x18]
	0x03994148 ADD X23, X19, 0x10
	0x0399414C LDR X0, [X8]
	0x03994150 LDR W8, [X0 + 0xE0]
	0x03994154 LDR X24, [X24 + 0xD20]
	0x03994158 CBNZ W8, 0x3994160
	0x0399415C BL 0x1C16DFC
	0x03994160 MOVZ W2, 0x1
	0x03994164 MOV X0, X23
	0x03994168 MOV X1, X22
	0x0399416C MOV X3, X31
	0x03994170 BL 0x3C590D4
	0x03994174 LDR X0, [X24]
	0x03994178 LDR X22, [X19 + 0x18]
	0x0399417C LDR W8, [X0 + 0xE0]
	0x03994180 CBNZ W8, 0x3994188
	0x03994184 BL 0x1C16DFC
	0x03994188 MOV X0, X22
	0x0399418C MOV X1, X31
	0x03994190 BL 0x399D650
	0x03994194 LDR X8, [X21 + 0x60]
	0x03994198 STR X8, [X19 + 0x18]
	0x0399419C LDR X0, [X21 + 0x18]
	0x039941A0 CBZ X0, 0x39942A0
	0x039941A4 ADRP X25, 0x78A000
	0x039941A8 ADRP X26, 0x78A000
	0x039941AC ADRP X24, 0x78A000
	0x039941B0 LDR X25, [X25 + 0xB50]
	0x039941B4 LDR X26, [X26 + 0xB28]
	0x039941B8 LDR X24, [X24 + 0xB18]
	0x039941BC BL 0x39947EC
	0x039941C0 MOV W22, W31
	0x039941C4 LDR X8, [X20 + 0x10]
	0x039941C8 CBZ X8, 0x39942A0
	0x039941CC LDR W9, [X8 + 0x18]
	0x039941D0 CMP W22, W9
	0x039941D4 B.CS 0x39942A4
	0x039941D8 ADD X8, X8, W22, 0x3, SXTW
	0x039941DC LDR X0, [X8 + 0x20]
	0x039941E0 CBZ X0, 0x39942A0
	0x039941E4 LDR X1, [X25]
	0x039941E8 ADD X8, X31, 0x8
	0x039941EC BL 0x2FDD2BC
	0x039941F0 LDUR V0, [X31 + 0x8]
	0x039941F4 LDR X8, [X31 + 0x18]
	0x039941F8 STR V0, [X31 + 0x2]
	0x039941FC STR X8, [X31 + 0x30]
	0x03994200 LDR X1, [X26]
	0x03994204 ADD X0, X31, 0x20
	0x03994208 BL 0x2BBDDA0
	0x0399420C TBZ X0, 0x0, 0x399422C
	0x03994210 LDR X0, [X21 + 0x10]
	0x03994214 CBZ X0, 0x3994248
	0x03994218 LDR W3, [X31 + 0x30]
	0x0399421C MOV X1, X19
	0x03994220 MOV W2, W22
	0x03994224 BL 0x3994B94
	0x03994228 B 0x3994200
	0x0399422C LDR X1, [X24]
	0x03994230 ADD X0, X31, 0x20
	0x03994234 BL 0x2BBDD9C
	0x03994238 ADD W22, W22, 0x1
	0x0399423C CMP W22, 0x2
	0x03994240 B.NE 0x39941C4
	0x03994244 B 0x3994284
	0x03994248 BL 0x1C16F20
	0x0399424C B 0x39942B4
	0x03994250 B 0x3994258
	0x03994254 B 0x3994258
	0x03994258 CMP W1, 0x1
	0x0399425C B.NE 0x39942A8
	0x03994260 BL 0x3EB1AD0
	0x03994264 LDR X23, [X0]
	0x03994268 BL 0x3EB1AE0
	0x0399426C LDR X1, [X24]
	0x03994270 ADD X0, X31, 0x20
	0x03994274 BL 0x2BBDD9C
	0x03994278 CBZ X23, 0x3994238
	0x0399427C MOV X0, X23
	0x03994280 BL 0x1C16F18
	0x03994284 LDP X20, X19, [X31 + 0x80]
	0x03994288 LDP X22, X21, [X31 + 0x70]
	0x0399428C LDP X24, X23, [X31 + 0x60]
	0x03994290 LDP X26, X25, [X31 + 0x50]
	0x03994294 LDR X30, [X31 + 0x40]
	0x03994298 ADD X31, X31, 0x90
	0x0399429C RET
	0x039942A0 BL 0x1C16F20
	0x039942A4 BL 0x1C16F28
	0x039942A8 MOV X19, X0
	0x039942AC MOV X23, X31
	0x039942B0 B 0x39942B8
	0x039942B4 MOV X19, X0
	0x039942B8 LDR X1, [X24]
	0x039942BC ADD X0, X31, 0x20
	0x039942C0 BL 0x2BBDD9C
	0x039942C4 CBNZ X23, 0x39942D0
	0x039942C8 MOV X0, X19
	0x039942CC BL 0x1D2C690
	0x039942D0 MOV X0, X23
	0x039942D4 BL 0x1C16F18
	0x039942D8 BL 0x1990590
	0x039942DC SUB X31, X31, 0xE0
	0x039942E0 STP X29, X30, [X31 + 0x80]
	0x039942E4 STP X28, X27, [X31 + 0x90]
	0x039942E8 STP X26, X25, [X31 + 0xA0]
	0x039942EC STP X24, X23, [X31 + 0xB0]
	0x039942F0 STP X22, X21, [X31 + 0xC0]
	0x039942F4 STP X20, X19, [X31 + 0xD0]
	0x039942F8 ADRP X22, 0xA4D000
	0x039942FC LDRB W8, [X22 + 0xAC3]
	0x03994300 MOV X20, X2
	0x03994304 MOV X21, X1
	0x03994308 MOV X19, X0
	0x0399430C TBNZ X8, 0x0, 0x399433C
	0x03994310 ADRP X0, 0x787000
	0x03994314 LDR X0, [X0 + 0x8F8]
	0x03994318 BL 0x1C16CF4
	0x0399431C ADRP X0, 0x7BC000
	0x03994320 LDR X0, [X0 + 0xD28]
	0x03994324 BL 0x1C16CF4
	0x03994328 ADRP X0, 0x7BC000
	0x0399432C LDR X0, [X0 + 0xA88]
	0x03994330 BL 0x1C16CF4
	0x03994334 MOVZ W8, 0x1
	0x03994338 STRB W8, [X22 + 0xAC3]
	0x0399433C LDR X24, [X21]
	0x03994340 CBZ X24, 0x3994658
	0x03994344 ADRP X25, 0x7BC000
	0x03994348 LDR X25, [X25 + 0xA88]
	0x0399434C LDUR X8, [X24 + 0x2C]
	0x03994350 LDR X0, [X25]
	0x03994354 STR X8, [X31 + 0x78]
	0x03994358 LDR W8, [X0 + 0xE0]
	0x0399435C CBNZ W8, 0x3994364
	0x03994360 BL 0x1C16DFC
	0x03994364 ADD X0, X31, 0x78
	0x03994368 BL 0x398D2E8
	0x0399436C TBNZ X0, 0x0, 0x399437C
	0x03994370 LDR W8, [X24 + 0x40]
	0x03994374 ADDS W31, W8, 0x1
	0x03994378 B.EQ 0x3994634
	0x0399437C CBZ X20, 0x3994658
	0x03994380 LDR X0, [X20 + 0x20]
	0x03994384 CBZ X0, 0x3994658
	0x03994388 ADRP X8, 0x7BC000
	0x0399438C LDR X8, [X8 + 0xD28]
	0x03994390 LDR W9, [X24 + 0x40]
	0x03994394 ADRP X23, 0x787000
	0x03994398 LDR X2, [X8]
	0x0399439C LDR X23, [X23 + 0x8F8]
	0x039943A0 ADD W1, W9, 0x1
	0x039943A4 BL 0x2241288
	0x039943A8 LDR W8, [X24 + 0x40]
	0x039943AC CMP W8, 0x1
	0x039943B0 B.LT 0x39944F0
	0x039943B4 LDR X26, [X24 + 0x38]
	0x039943B8 CBZ X26, 0x3994658
	0x039943BC MOV X21, X0
	0x039943C0 MOV W27, W31
	0x039943C4 MOVZ W28, 0x28
	0x039943C8 LDR X0, [X25]
	0x039943CC LDR W8, [X0 + 0xE0]
	0x039943D0 CBNZ W8, 0x39943D8
	0x039943D4 BL 0x1C16DFC
	0x039943D8 LDR W8, [X26 + 0x18]
	0x039943DC CMP W27, W8
	0x039943E0 B.CS 0x3994654
	0x039943E4 SXTW X29, W27
	0x039943E8 ADD X8, X26, X29, 0x3, LSL
	0x039943EC ADD X22, X8, 0x20
	0x039943F0 MOV X0, X22
	0x039943F4 BL 0x398D2E8
	0x039943F8 TBZ X0, 0x0, 0x399465C
	0x039943FC LDR X0, [X19 + 0x10]
	0x03994400 CBZ X0, 0x3994658
	0x03994404 LDR W8, [X26 + 0x18]
	0x03994408 CMP W27, W8
	0x0399440C B.CS 0x3994654
	0x03994410 MOV X1, X22
	0x03994414 BL 0x3991BE0
	0x03994418 ADD X8, X31, 0x28
	0x0399441C MOV X1, X31
	0x03994420 BL 0x39CDF64
	0x03994424 LDUR V0, [X31 + 0x28]
	0x03994428 LDUR V1, [X31 + 0x38]
	0x0399442C LDR X8, [X31 + 0x48]
	0x03994430 STP V0, V1, [X31 + 0x50]
	0x03994434 STR X8, [X31 + 0x70]
	0x03994438 CBZ X21, 0x3994658
	0x0399443C LDP V0, V1, [X31 + 0x50]
	0x03994440 LDR X8, [X31 + 0x70]
	0x03994444 STP V0, V1, [X31]
	0x03994448 STR X8, [X31 + 0x20]
	0x0399444C LDR W8, [X21 + 0x18]
	0x03994450 CMP W27, W8
	0x03994454 B.CS 0x3994654
	0x03994458 LDR X8, [X31 + 0x20]
	0x0399445C LDP V1, V0, [X31]
	0x03994460 NOP
	0x03994464 MADD X9, X29, X28, X21
	0x03994468 ADD W27, W27, 0x1
	0x0399446C STR X8, [X9 + 0x40]
	0x03994470 STP V1, V0, [X9 + 0x20]
	0x03994474 LDR W8, [X24 + 0x40]
	0x03994478 CMP W27, W8
	0x0399447C B.LE 0x39943C8
	0x03994480 LDUR X8, [X24 + 0x2C]
	0x03994484 LDR X0, [X25]
	0x03994488 STR X8, [X31 + 0x78]
	0x0399448C LDR W8, [X0 + 0xE0]
	0x03994490 CBNZ W8, 0x3994498
	0x03994494 BL 0x1C16DFC
	0x03994498 ADD X0, X31, 0x78
	0x0399449C BL 0x398D2E8
	0x039944A0 TBZ X0, 0x0, 0x39946A4
	0x039944A4 LDR X0, [X19 + 0x10]
	0x039944A8 LDUR X8, [X24 + 0x2C]
	0x039944AC LDR X19, [X20 + 0x18]
	0x039944B0 STR X8, [X31 + 0x78]
	0x039944B4 CBZ X0, 0x3994658
	0x039944B8 ADD X1, X31, 0x78
	0x039944BC BL 0x3991BE0
	0x039944C0 LDR X8, [X23]
	0x039944C4 MOV X20, X0
	0x039944C8 LDR W9, [X8 + 0xE0]
	0x039944CC CBNZ W9, 0x39944D8
	0x039944D0 MOV X0, X8
	0x039944D4 BL 0x1C16DFC
	0x039944D8 MOV X0, X19
	0x039944DC MOV X1, X21
	0x039944E0 MOV X2, X20
	0x039944E4 MOV X3, X31
	0x039944E8 BL 0x39E80A0
	0x039944EC B 0x3994634
	0x039944F0 LDUR X8, [X24 + 0x2C]
	0x039944F4 LDR X0, [X25]
	0x039944F8 STR X8, [X31 + 0x78]
	0x039944FC LDR W8, [X0 + 0xE0]
	0x03994500 CBNZ W8, 0x3994508
	0x03994504 BL 0x1C16DFC
	0x03994508 ADD X0, X31, 0x78
	0x0399450C BL 0x398D2E8
	0x03994510 TBZ X0, 0x0, 0x3994598
	0x03994514 LDR W8, [X24 + 0x40]
	0x03994518 LDR X20, [X20 + 0x18]
	0x0399451C LDR X0, [X19 + 0x10]
	0x03994520 TBNZ X8, 0x1F, 0x39945E8
	0x03994524 LDR X8, [X24 + 0x38]
	0x03994528 CBZ X8, 0x3994658
	0x0399452C CBZ X0, 0x3994658
	0x03994530 LDR W9, [X8 + 0x18]
	0x03994534 CBZ W9, 0x3994654
	0x03994538 ADD X1, X8, 0x20
	0x0399453C BL 0x3991BE0
	0x03994540 MOV X21, X0
	0x03994544 LDR X0, [X19 + 0x10]
	0x03994548 LDUR X8, [X24 + 0x2C]
	0x0399454C STR X8, [X31 + 0x78]
	0x03994550 CBZ X0, 0x3994658
	0x03994554 ADD X1, X31, 0x78
	0x03994558 BL 0x3991BE0
	0x0399455C LDR X8, [X23]
	0x03994560 MOV X19, X0
	0x03994564 LDR W9, [X8 + 0xE0]
	0x03994568 CBNZ W9, 0x3994574
	0x0399456C MOV X0, X8
	0x03994570 BL 0x1C16DFC
	0x03994574 MOVN W4, 0x0
	0x03994578 MOVN W5, 0x0
	0x0399457C MOV X0, X20
	0x03994580 MOV X1, X21
	0x03994584 MOV X2, X19
	0x03994588 MOV W3, W31
	0x0399458C MOV X6, X31
	0x03994590 BL 0x39E7980
	0x03994594 B 0x3994634
	0x03994598 LDR X8, [X24 + 0x38]
	0x0399459C CBZ X8, 0x3994658
	0x039945A0 LDR X0, [X19 + 0x10]
	0x039945A4 CBZ X0, 0x3994658
	0x039945A8 LDR W9, [X8 + 0x18]
	0x039945AC CBZ W9, 0x3994654
	0x039945B0 LDR X19, [X20 + 0x18]
	0x039945B4 ADD X1, X8, 0x20
	0x039945B8 BL 0x3991BE0
	0x039945BC LDR X8, [X23]
	0x039945C0 MOV X20, X0
	0x039945C4 LDR W9, [X8 + 0xE0]
	0x039945C8 CBNZ W9, 0x39945D4
	0x039945CC MOV X0, X8
	0x039945D0 BL 0x1C16DFC
	0x039945D4 MOVN W4, 0x0
	0x039945D8 MOVN W5, 0x0
	0x039945DC MOV X0, X19
	0x039945E0 MOV X1, X20
	0x039945E4 B 0x3994624
	0x039945E8 LDUR X8, [X24 + 0x2C]
	0x039945EC STR X8, [X31 + 0x78]
	0x039945F0 CBZ X0, 0x3994658
	0x039945F4 ADD X1, X31, 0x78
	0x039945F8 BL 0x3991BE0
	0x039945FC LDR X8, [X23]
	0x03994600 MOV X19, X0
	0x03994604 LDR W9, [X8 + 0xE0]
	0x03994608 CBNZ W9, 0x3994614
	0x0399460C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0xA4F000
	015 Move W8, [X20+2753]
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {72}
	022 Move X0, 0x7BE000
	023 Move X0, [X0+2784]
	024 Call 0x1C17CF4
	025 Move X0, 0x7BE000
	026 Move X0, [X0+2856]
	027 Call 0x1C17CF4
	028 Move X0, 0x7BE000
	029 Move X0, [X0+2864]
	030 Call 0x1C17CF4
	031 Move X0, 0x7BE000
	032 Move X0, [X0+3160]
	033 Call 0x1C17CF4
	034 Move X0, 0x7BE000
	035 Move X0, [X0+3064]
	036 Call 0x1C17CF4
	037 Move X0, 0x7BE000
	038 Move X0, [X0+3072]
	039 Call 0x1C17CF4
	040 Move X0, 0x7BE000
	041 Move X0, [X0+3168]
	042 Call 0x1C17CF4
	043 Move X0, 0x7BE000
	044 Move X0, [X0+3176]
	045 Call 0x1C17CF4
	046 Move X0, 0x7BE000
	047 Move X0, [X0+3080]
	048 Call 0x1C17CF4
	049 Move X0, 0x762000
	050 Move X0, [X0+3600]
	051 Call 0x1C17CF4
	052 Move X0, 0x7BE000
	053 Move X0, [X0+3288]
	054 Call 0x1C17CF4
	055 Move X0, 0x7BE000
	056 Move X0, [X0+2952]
	057 Call 0x1C17CF4
	058 Move X0, 0x7BE000
	059 Move X0, [X0+3296]
	060 Call 0x1C17CF4
	061 Move X0, 0x7BE000
	062 Move X0, [X0+3192]
	063 Call 0x1C17CF4
	064 Move X0, 0x7BE000
	065 Move X0, [X0+3088]
	066 Call 0x1C17CF4
	067 Move X0, 0x78C000
	068 Move X0, [X0+1840]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+2753], W8
	072 Move [X31+64], X31
	073 Move [X31+72], X31
	074 Move [X31+80], X31
	075 Move [X31+48], X31
	076 Move [X31+56], X31
	077 Move [X31+32], X31
	078 Move [X31+40], X31
	079 Move [X31+24], X31
	080 Move X0, [X19+128]
	081 Compare X0, 0
	082 JumpIfEqual {524}
	083 Move W1, [X19+104]
	084 Move W8, [X0+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W8, W1, 1
	087 Move [X19+104], W8
	088 Move X9, 0x7BE000
	089 Move X9, [X9+2784]
	090 Move W1, W8
	091 ShiftRight W1, 31
	092 And W1, W1, 0x3FFFFFFF
	093 Move W2, W31
	094 Move X3, [X9]
	095 Call DynamicArray`1<CompiledPassInfo>.Resize, X0, X1, X2
	096 Move W1, [X19+104]
	097 Move X0, [X19+128]
	098 Add W8, W1, 1
	099 Move [X19+104], W8
	100 Compare X0, 0
	101 JumpIfEqual {524}
	102 Move X8, 0x7BE000
	103 Move X8, [X8+2856]
	104 Move X2, [X8]
	105 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	106 Move X1, X21
	107 Move X20, X0
	108 Call CompiledPassInfo.Reset, X0, X1
	109 Move [X20+64], W31
	110 Compare X21, 0
	111 JumpIfEqual {524}
	112 Move X29, 0x7BE000
	113 Move X26, 0x78C000
	114 Move X25, 0x762000
	115 Move X27, 0x7BE000
	116 Move X29, [X29+3072]
	117 Move X26, [X26+1840]
	118 Move X25, [X25+3600]
	119 Move X27, [X27+3296]
	120 Move W28, W31
	121 Move X8, [X21+96]
	122 Compare X8, 0
	123 JumpIfEqual {524}
	124 Move W9, [X8+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X24, W28
	127 Add X8, X8, X24
	128 Move X0, [X8+32]
	129 Compare X0, 0
	130 JumpIfEqual {524}
	131 Move X8, 0x7BE000
	132 Move X8, [X8+3088]
	133 Move X1, [X8]
	134 Add X8, X31, 0
	135 Call List`1<ResourceHandle>.GetEnumerator, X0
	136 Move V0, [X31]
	137 Move X8, [X31+16]
	138 Move [X31+4], V0
	139 Move [X31+80], X8
	140 Move X1, [X29]
	141 Add X0, X31, 64
	142 Call Enumerator<ResourceHandle>.MoveNext, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {215}
	147 Move X8, [X20+8]
	148 Compare X8, 0
	149 JumpIfEqual {383}
	150 Move W9, [X8+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, [X26]
	153 Add X8, X8, X24
	154 Move X22, [X31+80]
	155 Move X23, [X8+32]
	156 Move W9, [X0+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X0, X22
	161 Call ResourceHandle.op_Implicit, X0
	162 Move W1, W0
	163 Compare X23, 0
	164 JumpIfEqual {384}
	165 Move W10, [X23+28]
	166 Move X8, [X23+16]
	167 Move X9, [X25]
	168 Add W10, W10, 1
	169 Move [X23+28], W10
	170 Compare X8, 0
	171 JumpIfEqual {380}
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W11, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add W9, W10, 1
	176 Add X8, X8, X10
	177 Move [X23+24], W9
	178 Move [X8+32], W1
	179 Move X8, [X9+32]
	180 Move X8, [X8+192]
	181 Move X2, [X8+112]
	182 Move X0, X23
	183 Call List`1<Int32>.AddWithResize, X0, X1
	184 Move X8, [X20+16]
	185 Compare X8, 0
	186 JumpIfEqual {382}
	187 Move W9, [X8+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add X8, X8, X24
	190 Move X23, [X8+32]
	191 Move X0, X22
	192 Call ResourceHandle.op_Implicit, X0
	193 Move W1, W0
	194 Compare X23, 0
	195 JumpIfEqual {379}
	196 Move W10, [X23+28]
	197 Move X8, [X23+16]
	198 Move X9, [X25]
	199 Add W10, W10, 1
	200 Move [X23+28], W10
	201 Compare X8, 0
	202 JumpIfEqual {385}
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Move W11, [X8+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Add W9, W10, 1
	207 Add X8, X8, X10
	208 Move [X23+24], W9
	209 Move [X8+32], W1
	210 Move X8, [X9+32]
	211 Move X8, [X8+192]
	212 Move X2, [X8+112]
	213 Move X0, X23
	214 Call List`1<Int32>.AddWithResize, X0, X1
	215 Move X8, 0x7BE000
	216 Move X8, [X8+3064]
	217 Add X0, X31, 64
	218 Move X1, [X8]
	219 Call Enumerator<ResourceHandle>.Dispose, X0
	220 Move X8, [X21+88]
	221 Compare X8, 0
	222 JumpIfEqual {524}
	223 Move W9, [X8+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X8, X24
	226 Move X0, [X8+32]
	227 Compare X0, 0
	228 JumpIfEqual {524}
	229 Move X8, 0x7BD000
	230 Move X8, [X8+3088]
	231 Move X1, [X8]
	232 Add X8, X31, 0
	233 Call List`1<ResourceHandle>.GetEnumerator, X0
	234 Move V0, [X31]
	235 Move X8, [X31+16]
	236 Move [X31+4], V0
	237 Move [X31+80], X8
	238 Move X1, [X29]
	239 Add X0, X31, 64
	240 Call Enumerator<ResourceHandle>.MoveNext, X0
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {339}
	245 Move X22, [X31+80]
	246 Move [X31+56], X22
	247 Move X8, [X21+96]
	248 Compare X8, 0
	249 JumpIfEqual {377}
	250 Move W9, [X8+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add X8, X8, X24
	253 Move X0, [X8+32]
	254 Compare X0, 0
	255 JumpIfEqual {378}
	256 Move X2, [X27]
	257 Move X1, X22
	258 Call List`1<ResourceHandle>.Contains, X0, X1
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {238}
	263 Move X0, [X19+16]
	264 Compare X0, 0
	265 JumpIfEqual {387}
	266 Add X1, X31, 56
	267 Call RenderGraphResourceRegistry.IsGraphicsResourceCreated, X0, X1
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {238}
	272 Move X8, [X20+8]
	273 Compare X8, 0
	274 JumpIfEqual {393}
	275 Move W9, [X8+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, [X26]
	278 Add X8, X8, X24
	279 Move X23, [X8+32]
	280 Move W9, [X0+224]
	281 Compare W9, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, X22
	285 Call ResourceHandle.op_Implicit, X0
	286 Move W1, W0
	287 Compare X23, 0
	288 JumpIfEqual {389}
	289 Move W10, [X23+28]
	290 Move X8, [X23+16]
	291 Move X9, [X25]
	292 Add W10, W10, 1
	293 Move [X23+28], W10
	294 Compare X8, 0
	295 JumpIfEqual {390}
	296 NotImplemented "Instruction LDRSW not yet implemented."
	297 Move W11, [X8+24]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Add W9, W10, 1
	300 Add X8, X8, X10
	301 Move [X23+24], W9
	302 Move [X8+32], W1
	303 Move X8, [X9+32]
	304 Move X8, [X8+192]
	305 Move X2, [X8+112]
	306 Move X0, X23
	307 Call List`1<Int32>.AddWithResize, X0, X1
	308 Move X8, [X19+112]
	309 Compare X8, 0
	310 JumpIfEqual {392}
	311 Move W9, [X8+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Add X8, X8, X24
	314 Move X23, [X8+32]
	315 Move X0, X22
	316 Call ResourceHandle.op_Implicit, X0
	317 Move W1, W0
	318 Compare X23, 0
	319 JumpIfEqual {388}
	320 Move W10, [X23+28]
	321 Move X8, [X23+16]
	322 Move X9, [X25]
	323 Add W10, W10, 1
	324 Move [X23+28], W10
	325 Compare X8, 0
	326 JumpIfEqual {391}
	327 NotImplemented "Instruction LDRSW not yet implemented."
	328 Move W11, [X8+24]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Add W9, W10, 1
	331 Add X8, X8, X10
	332 Move [X23+24], W9
	333 Move [X8+32], W1
	334 Move X8, [X9+32]
	335 Move X8, [X8+192]
	336 Move X2, [X8+112]
	337 Move X0, X23
	338 Call List`1<Int32>.AddWithResize, X0, X1
	339 Move X8, 0x7BD000
	340 Move X8, [X8+3064]
	341 Add X0, X31, 64
	342 Move X1, [X8]
	343 Call Enumerator<ResourceHandle>.Dispose, X0
	344 Move X8, [X21+80]
	345 Compare X8, 0
	346 JumpIfEqual {524}
	347 Move W9, [X8+24]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Add X8, X8, X24
	350 Move X0, [X8+32]
	351 Compare X0, 0
	352 JumpIfEqual {524}
	353 Move X8, 0x7BD000
	354 Move X8, [X8+3088]
	355 Move X1, [X8]
	356 Add X8, X31, 0
	357 Call List`1<ResourceHandle>.GetEnumerator, X0
	358 Move V0, [X31]
	359 Move X8, [X31+16]
	360 Move [X31+4], V0
	361 Move [X31+80], X8
	362 Move X1, [X29]
	363 Add X0, X31, 64
	364 Call Enumerator<ResourceHandle>.MoveNext, X0
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfEqual {362}
	369 Move X8, 0x7BD000
	370 Move X8, [X8+3064]
	371 Add X0, X31, 64
	372 Move X1, [X8]
	373 Call Enumerator<ResourceHandle>.Dispose, X0
	374 Add W28, W28, 1
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Call 0x1C17F28
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F28
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Call 0x1C17F28
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F20
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F28
	395 Call 0x1C17F28
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Call 0x3EB2AD0
	398 Move X22, [X0]
	399 Call 0x3EB2AE0
	400 Move X8, 0x7BD000
	401 Move X8, [X8+3064]
	402 Add X0, X31, 64
	403 Move X1, [X8]
	404 Call Enumerator<ResourceHandle>.Dispose, X0
	405 Compare X22, 0
	406 JumpIfEqual {344}
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Call 0x3EB2AD0
	409 Move X22, [X0]
	410 Call 0x3EB2AE0
	411 Move X8, 0x7BD000
	412 Move X8, [X8+3064]
	413 Add X0, X31, 64
	414 Move X1, [X8]
	415 Call Enumerator<ResourceHandle>.Dispose, X0
	416 Compare X22, 0
	417 JumpIfEqual {374}
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Call 0x3EB2AD0
	420 Move X22, [X0]
	421 Call 0x3EB2AE0
	422 Move X8, 0x7BD000
	423 Move X8, [X8+3064]
	424 Add X0, X31, 64
	425 Move X1, [X8]
	426 Call Enumerator<ResourceHandle>.Dispose, X0
	427 Compare X22, 0
	428 JumpIfEqual {220}
	429 Move X0, X22
	430 Call 0x1C17F18
	431 Move X0, [X21+104]
	432 Compare X0, 0
	433 JumpIfEqual {524}
	434 Move X8, 0x7BD000
	435 Move X8, [X8+3192]
	436 Move X1, [X8]
	437 Add X8, X31, 0
	438 Call List`1<RendererListHandle>.GetEnumerator, X0
	439 Move V0, [X31]
	440 Move X8, [X31+16]
	441 Move X22, 0x7BD000
	442 Move X23, 0x7BD000
	443 Move [X31+2], V0
	444 Move [X31+48], X8
	445 Move X22, [X22+3168]
	446 Move X23, [X23+3288]
	447 Move X1, [X22]
	448 Add X0, X31, 32
	449 Call Enumerator<RendererListHandle>.MoveNext, X0
	450 Move TEMP, X0
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfNotEqual {487}
	454 Move X21, [X31+48]
	455 Move [X31+24], X21
	456 Move X0, [X19+16]
	457 Compare X0, 0
	458 JumpIfEqual {526}
	459 Add X1, X31, 24
	460 Call RenderGraphResourceRegistry.IsRendererListCreated, X0, X1
	461 Move TEMP, X0
	462 And TEMP, TEMP, 1
	463 Compare TEMP, 1
	464 JumpIfEqual {447}
	465 Move X0, [X19+40]
	466 Compare X0, 0
	467 JumpIfEqual {527}
	468 Move W10, [X0+28]
	469 Move X8, [X0+16]
	470 Move X9, [X23]
	471 Add W10, W10, 1
	472 Move [X0+28], W10
	473 Compare X8, 0
	474 JumpIfEqual {528}
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Move W11, [X8+24]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Add W9, W10, 1
	479 Add X8, X8, X10
	480 Move [X0+24], W9
	481 Move [X8+32], X21
	482 Move X8, [X9+32]
	483 Move X8, [X8+192]
	484 Move X2, [X8+112]
	485 Move X1, X21
	486 Call List`1<RendererListHandle>.AddWithResize, X0, X1
	487 Move X8, 0x7BD000
	488 Move X8, [X8+3160]
	489 Add X0, X31, 32
	490 Move X1, [X8]
	491 Call Enumerator<RendererListHandle>.Dispose, X0
	492 Move X8, [X19+88]
	493 Compare X8, 0
	494 JumpIfEqual {524}
	495 Move X0, [X19+16]
	496 Compare X0, 0
	497 JumpIfEqual {524}
	498 Move X1, [X19+40]
	499 Move X2, [X8+16]
	500 Move W3, W31
	501 Call RenderGraphResourceRegistry.CreateRendererLists, X0, X1, X2, X3
	502 Move X8, [X19+40]
	503 Compare X8, 0
	504 JumpIfEqual {524}
	505 Move W9, [X8+28]
	506 Move X0, X20
	507 Move X20, [X31+176]
	508 Move X19, [X31+184]
	509 Move X22, [X31+160]
	510 Move X21, [X31+168]
	511 Move X24, [X31+144]
	512 Move X23, [X31+152]
	513 Move X26, [X31+128]
	514 Move X25, [X31+136]
	515 Move X28, [X31+112]
	516 Move X27, [X31+120]
	517 Move X29, [X31+96]
	518 Move X30, [X31+104]
	519 Add W9, W9, 1
	520 Move [X8+24], W31
	521 Move [X8+28], W9
	522 Add X31, X31, 192
	523 Return X0
	524 Call 0x1C17F20
	525 Call 0x1C17F28
	526 Call 0x1C17F20
	527 Call 0x1C17F20
	528 Call 0x1C17F20
	529 Move X19, X0
	530 Move X22, X31
	531 Move X19, X0
	532 Move X22, X31
	533 Move X19, X0
	534 Move X22, X31
	535 Move X19, X0
	536 Move X8, 0x7BD000
	537 Move X8, [X8+3064]
	538 Move X1, [X8]
	539 Add X0, X31, 64
	540 Call Enumerator<ResourceHandle>.Dispose, X0
	541 Compare X22, 0
	542 JumpIfEqual {563}
	543 Move X0, X22
	544 Call 0x1C17F18
	545 Move X19, X0
	546 Move X8, 0x7BD000
	547 Move X8, [X8+3064]
	548 Move X1, [X8]
	549 Add X0, X31, 64
	550 Call Enumerator<ResourceHandle>.Dispose, X0
	551 Compare X22, 0
	552 JumpIfEqual {563}
	553 Move X0, X22
	554 Call 0x1C17F18
	555 Move X19, X0
	556 Move X8, 0x7BD000
	557 Move X8, [X8+3064]
	558 Move X1, [X8]
	559 Add X0, X31, 64
	560 Call Enumerator<ResourceHandle>.Dispose, X0
	561 Compare X22, 0
	562 JumpIfNotEqual {565}
	563 Move X0, X19
	564 Call 0x1D2D690
	565 Move X0, X22
	566 Call 0x1C17F18
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Call 0x3EB2AD0
	569 Move X21, [X0]
	570 Call 0x3EB2AE0
	571 Move X8, 0x7BD000
	572 Move X8, [X8+3160]
	573 Add X0, X31, 32
	574 Move X1, [X8]
	575 Call Enumerator<RendererListHandle>.Dispose, X0
	576 Compare X21, 0
	577 JumpIfEqual {492}
	578 Move X0, X21
	579 Call 0x1C17F18
	580 Move X19, X0
	581 Move X21, X31
	582 Move X19, X0
	583 Move X8, 0x7BD000
	584 Move X8, [X8+3160]
	585 Move X1, [X8]
	586 Add X0, X31, 32
	587 Call Enumerator<RendererListHandle>.Dispose, X0
	588 Compare X21, 0
	589 JumpIfEqual {563}
	590 Move X0, X21
	591 Call 0x1C17F18
	592 Call 0x1991590

Method: System.Void ExecutePassImmediatly(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphPass pass)

Disassembly:
	0x0398F9F4 ADD X0, X31, 0x30
	0x0398F9F8 BL 0x2BC8CD4
	0x0398F9FC TBZ X0, 0x0, 0x398FB0C
	0x0398FA00 LDR X0, [X28]
	0x0398FA04 LDR X22, [X31 + 0x40]
	0x0398FA08 LDR W8, [X0 + 0xE0]
	0x0398FA0C CBNZ W8, 0x398FA14
	0x0398FA10 BL 0x1C16DFC
	0x0398FA14 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call RenderGraph.CompilePassImmediatly, X0, X1
	005 Move W8, [X19+104]
	006 Move X1, X0
	007 Move X0, X19
	008 Subtract W2, W8, 1
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call RenderGraph.ExecuteCompiledPass, X0, X1, X2
	012 Return 

Method: System.Void ExecuteCompiledPass(ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo passInfo, System.Int32 passIndex)

Disassembly:
	0x03994778 LDRB W8, [X8 + 0x24]
	0x0399477C CBZ W8, 0x3994798
	0x03994780 LDR X8, [X22]
	0x03994784 LDR X1, [X21 + 0x30]
	0x03994788 MOV X0, X22
	0x0399478C LDR X9, [X8 + 0x208]
	0x03994790 LDR X2, [X8 + 0x210]
	0x03994794 BLR X9
	0x03994798 LDR X8, [X21 + 0x10]
	0x0399479C CBZ X8, 0x39947E4
	0x039947A0 LDR W9, [X8 + 0x18]
	0x039947A4 CMP W9, W20
	0x039947A8 B.LS 0x39947E8
	0x039947AC ADD X8, X8, X23, 0x3, LSL
	0x039947B0 LDR X8, [X8 + 0x20]
	0x039947B4 CBZ X8, 0x39947E4
	0x039947B8 LDR X8, [X8 + 0x28]
	0x039947BC CBZ X8, 0x3994750
	0x039947C0 LDR X4, [X8 + 0x18]
	0x039947C4 LDR X0, [X8 + 0x40]
	0x039947C8 LDR X3, [X8 + 0x28]
	0x039947CC MOV X1, X19
	0x039947D0 MOV X2, X22
	0x039947D4 LDP X20, X19, [X31 + 0x20]
	0x039947D8 LDP X22, X21, [X31 + 0x10]
	0x039947DC LDP X30, X23, [X31], #0x30
	0x039947E0 BR X4
	0x039947E4 BL 0x1C16F20
	0x039947E8 BL 0x1C16F28
	0x039947EC SUB X31, X31, 0xE0
	0x039947F0 STP X29, X30, [X31 + 0x80]
	0x039947F4 STP X28, X27, [X31 + 0x90]
	0x039947F8 STP X26, X25, [X31 + 0xA0]
	0x039947FC STP X24, X23, [X31 + 0xB0]
	0x03994800 STP X22, X21, [X31 + 0xC0]
	0x03994804 STP X20, X19, [X31 + 0xD0]
	0x03994808 ADRP X20, 0xA4D000
	0x0399480C LDRB W8, [X20 + 0xADE]
	0x03994810 MOV X19, X0
	0x03994814 TBNZ X8, 0x0, 0x39948D4
	0x03994818 ADRP X0, 0x788000
	0x0399481C LDR X0, [X0 + 0x470]
	0x03994820 BL 0x1C16CF4
	0x03994824 ADRP X0, 0x7BC000
	0x03994828 LDR X0, [X0 + 0xD48]
	0x0399482C BL 0x1C16CF4
	0x03994830 ADRP X0, 0x7BC000
	0x03994834 LDR X0, [X0 + 0xD50]
	0x03994838 BL 0x1C16CF4
	0x0399483C ADRP X0, 0x7BC000
	0x03994840 LDR X0, [X0 + 0xD58]
	0x03994844 BL 0x1C16CF4
	0x03994848 ADRP X0, 0x7BC000
	0x0399484C LDR X0, [X0 + 0xD60]
	0x03994850 BL 0x1C16CF4
	0x03994854 ADRP X0, 0x7BC000
	0x03994858 LDR X0, [X0 + 0xD68]
	0x0399485C BL 0x1C16CF4
	0x03994860 ADRP X0, 0x7BC000
	0x03994864 LDR X0, [X0 + 0xD70]
	0x03994868 BL 0x1C16CF4
	0x0399486C ADRP X0, 0x7BC000
	0x03994870 LDR X0, [X0 + 0xA20]
	0x03994874 BL 0x1C16CF4
	0x03994878 ADRP X0, 0x7BC000
	0x0399487C LDR X0, [X0 + 0xA28]
	0x03994880 BL 0x1C16CF4
	0x03994884 ADRP X0, 0x7BC000
	0x03994888 LDR X0, [X0 + 0xD78]
	0x0399488C BL 0x1C16CF4
	0x03994890 ADRP X0, 0x7BC000
	0x03994894 LDR X0, [X0 + 0xD80]
	0x03994898 BL 0x1C16CF4
	0x0399489C ADRP X0, 0x7BC000
	0x039948A0 LDR X0, [X0 + 0xD88]
	0x039948A4 BL 0x1C16CF4
	0x039948A8 ADRP X0, 0x7BC000
	0x039948AC LDR X0, [X0 + 0xD90]
	0x039948B0 BL 0x1C16CF4
	0x039948B4 ADRP X0, 0x7BC000
	0x039948B8 LDR X0, [X0 + 0xD98]
	0x039948BC BL 0x1C16CF4
	0x039948C0 ADRP X0, 0x7BC000
	0x039948C4 LDR X0, [X0 + 0xDA0]
	0x039948C8 BL 0x1C16CF4
	0x039948CC MOVZ W8, 0x1
	0x039948D0 STRB W8, [X20 + 0xADE]
	0x039948D4 MOVI V0.2D, 0x0
	0x039948D8 STR X31, [X31 + 0x70]
	0x039948DC STP X31, X31, [X31 + 0x40]
	0x039948E0 STP X31, X31, [X31 + 0x30]
	0x039948E4 STP V0, V0, [X31 + 0x50]
	0x039948E8 LDR X0, [X19 + 0x18]
	0x039948EC CBZ X0, 0x3994A9C
	0x039948F0 ADRP X8, 0x7BC000
	0x039948F4 LDR X8, [X8 + 0xD78]
	0x039948F8 ADRP X28, 0x7BC000
	0x039948FC ADRP X29, 0x788000
	0x03994900 ADRP X21, 0x7BC000
	0x03994904 ADRP X26, 0x7BC000
	0x03994908 ADRP X22, 0x7BC000
	0x0399490C ADRP X23, 0x7BC000
	0x03994910 ADRP X24, 0x7BC000
	0x03994914 LDR X28, [X28 + 0xD60]
	0x03994918 LDR X29, [X29 + 0x470]
	0x0399491C LDR X21, [X21 + 0xDA0]
	0x03994920 LDR X26, [X26 + 0xD80]
	0x03994924 LDR X22, [X22 + 0xD58]
	0x03994928 LDR X23, [X23 + 0xD98]
	0x0399492C LDR X24, [X24 + 0xD90]
	0x03994930 LDR X1, [X8]
	0x03994934 ADRP X25, 0x7BC000
	0x03994938 ADRP X27, 0x7BC000
	0x0399493C LDR X25, [X25 + 0xD88]
	0x03994940 LDR X27, [X27 + 0xD48]
	0x03994944 ADD X8, X31, 0x8
	0x03994948 BL 0x2F47D7C
	0x0399494C LDUR V0, [X31 + 0x8]
	0x03994950 LDUR V1, [X31 + 0x18]
	0x03994954 LDR X8, [X31 + 0x28]
	0x03994958 STP V0, V1, [X31 + 0x50]
	0x0399495C STR X8, [X31 + 0x70]
	0x03994960 LDR X1, [X28]
	0x03994964 ADD X0, X31, 0x50
	0x03994968 BL 0x2BB3A04
	0x0399496C TBZ X0, 0x0, 0x39949A4
	0x03994970 LDR X0, [X19 + 0x10]
	0x03994974 CBZ X0, 0x3994A94
	0x03994978 LDP X1, X2, [X31 + 0x68]
	0x0399497C LDR X20, [X31 + 0x60]
	0x03994980 LDR X4, [X29]
	0x03994984 ADD X3, X31, 0x48
	0x03994988 BL 0x29C538C
	0x0399498C LDR X0, [X31 + 0x48]
	0x03994990 CBZ X0, 0x3994A98
	0x03994994 LDR X2, [X21]
	0x03994998 MOV X1, X20
	0x0399499C BL 0x2602314
	0x039949A0 B 0x3994960
	0x039949A4 LDR X1, [X27]
	0x039949A8 ADD X0, X31, 0x50
	0x039949AC BL 0x2BB3A00
	0x039949B0 LDR X8, [X19 + 0x18]
	0x039949B4 CBZ X8, 0x3994A9C
	0x039949B8 LDP W2, W9, [X8 + 0x18]
	0x039949BC ADD W9, W9, 0x1
	0x039949C0 CMP W2, 0x1
	0x039949C4 STP W31, W9, [X8 + 0x18]
	0x039949C8 B.LT 0x39949DC
	0x039949CC LDR X0, [X8 + 0x10]
	0x039949D0 MOV W1, W31
	0x039949D4 MOV X3, X31
	0x039949D8 BL 0x339FA34
	0x039949DC LDR X0, [X19 + 0x20]
	0x039949E0 CBZ X0, 0x3994A9C
	0x039949E4 LDR X1, [X26]
	0x039949E8 ADD X8, X31, 0x30
	0x039949EC BL 0x301CB58
	0x039949F0 LDR X1, [X22]
	0x039949F4 ADD X0, X31, 0x30
	0x039949F8 BL 0x2BC4350
	0x039949FC TBZ X0, 0x0, 0x3994A30
	0x03994A00 LDR X0, [X23]
	0x03994A04 LDR X20, [X31 + 0x40]
	0x03994A08 LDR W8, [X0 + 0xE0]
	0x03994A0C CBNZ W8, 0x3994A14
	0x03994A10 BL 0x1C16DFC
	0x03994A14 LDR X0, [X24]
	0x03994A18 BL 0x25E5C20
	0x03994A1C CBZ X0, 0x3994A90
	0x03994A20 LDR X2, [X25]
	0x03994A24 MOV X1, X20
	0x03994A28 BL 0x25E5AB8
	0x03994A2C B 0x39949F0
	0x03994A30 ADRP X8, 0x7BC000
	0x03994A34 LDR X8, [X8 + 0xD50]
	0x03994A38 ADD X0, X31, 0x30
	0x03994A3C LDR X1, [X8]
	0x03994A40 BL 0x2BC434C
	0x03994A44 LDR X8, [X19 + 0x20]
	0x03994A48 CBZ X8, 0x3994A9C
	0x03994A4C LDP W2, W9, [X8 + 0x18]
	0x03994A50 ADD W9, W9, 0x1
	0x03994A54 CMP W2, 0x1
	0x03994A58 STP W31, W9, [X8 + 0x18]
	0x03994A5C B.LT 0x3994A70
	0x03994A60 LDR X0, [X8 + 0x10]
	0x03994A64 MOV W1, W31
	0x03994A68 MOV X3, X31
	0x03994A6C BL 0x339FA34
	0x03994A70 LDP X20, X19, [X31 + 0xD0]
	0x03994A74 LDP X22, X21, [X31 + 0xC0]
	0x03994A78 LDP X24, X23, [X31 + 0xB0]
	0x03994A7C LDP X26, X25, [X31 + 0xA0]
	0x03994A80 LDP X28, X27, [X31 + 0x90]
	0x03994A84 LDP X29, X30, [X31 + 0x80]
	0x03994A88 ADD X31, X31, 0xE0
	0x03994A8C RET
	0x03994A90 BL 0x1C16F20
	0x03994A94 BL 0x1C16F20
	0x03994A98 BL 0x1C16F20
	0x03994A9C BL 0x1C16F20
	0x03994AA0 B 0x3994B1C
	0x03994AA4 B 0x3994AC0
	0x03994AA8 B 0x3994AC0
	0x03994AAC B 0x3994AC0
	0x03994AB0 B 0x3994AC0
	0x03994AB4 B 0x3994B1C
	0x03994AB8 B 0x3994B1C
	0x03994ABC B 0x3994B1C
	0x03994AC0 CMP W1, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move [X31+24], W31
	010 Move W8, [X1+28]
	011 Compare W8, 0
	012 JumpIfNotEqual {78}
	013 Move X21, X0
	014 Move X0, [X1]
	015 Move X20, X1
	016 Compare X0, 0
	017 JumpIfEqual {87}
	018 Move X8, [X0]
	019 Move W19, W2
	020 Move X9, [X8+408]
	021 Move X1, [X8+416]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {88}
	027 Move X8, [X21+88]
	028 Compare X8, 0
	029 JumpIfEqual {113}
	030 Move X9, [X20]
	031 Compare X9, 0
	032 JumpIfEqual {114}
	033 Move X1, [X8+24]
	034 Move X2, [X9+32]
	035 Move [X31+8], W31
	036 Add X0, X31, 8
	037 Move X3, X31
	038 Call ProfilingScope..ctor, X0, X1, X2
	039 Move W8, [X31+8]
	040 Move [X31+24], W8
	041 Move X0, X21
	042 Move X1, X20
	043 Call RenderGraph.LogRenderPassBegin, X0, X1
	044 Move X24, [X21+56]
	045 Compare X24, 0
	046 JumpIfEqual {115}
	047 Move W1, 1
	048 Move X0, X24
	049 Call RenderGraphLogger.IncrementIndentation, X0, X1
	050 Move X2, [X21+88]
	051 Move X0, X21
	052 Move X1, X20
	053 Call RenderGraph.PreRenderPassExecute, X0, X1, X2
	054 Move X0, [X20]
	055 Compare X0, 0
	056 JumpIfEqual {118}
	057 Move X8, [X0]
	058 Move X1, [X21+88]
	059 Move X9, [X8+376]
	060 Move X2, [X8+384]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X2, [X21+88]
	063 Move X0, X21
	064 Move X1, X20
	065 Call RenderGraph.PostRenderPassExecute, X0, X1, X2
	066 Move X22, X31
	067 Move W1, 1
	068 Move X0, X24
	069 Call RenderGraphLogger.DecrementIndentation, X0, X1
	070 Compare X22, 0
	071 JumpIfNotEqual {119}
	072 Move X24, X31
	073 Add X0, X31, 24
	074 Move X1, X31
	075 Call ProfilingScope.Dispose, X0
	076 Compare X24, 0
	077 JumpIfNotEqual {116}
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X30, [X31+16]
	085 Add X31, X31, 80
	086 Return 
	087 Call 0x1C17F20
	088 Move X19, [X20]
	089 Move X0, X19
	090 Call 0x19913C0
	091 Move X0, 0x7BD000
	092 Move X19, [X19+16]
	093 Move X0, [X0+3304]
	094 Call 0x1C17D08
	095 Move X1, X19
	096 Move X2, X31
	097 Call String.Format, X0, X1
	098 Move X19, X0
	099 Move X0, 0x760000
	100 Move X0, [X0+1456]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X1, X19
	104 Move X2, X31
	105 Move X20, X0
	106 Call InvalidOperationException..ctor, X0, X1
	107 Move X0, 0x7BD000
	108 Move X0, [X0+3312]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X20
	112 Call 0x1C17DEC
	113 Call 0x1C17F20
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Move X0, X24
	117 Call 0x1C17F18
	118 Call 0x1C17F20
	119 Move X0, X22
	120 Call 0x1C17F18
	121 Move X23, X1
	122 Move X22, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X22
	125 Call 0x3EB2AD0
	126 Move X8, [X0]
	127 Move [X31], X8
	128 Call 0x3EB2AE0
	129 Move X22, [X31]
	130 Move [X31], X31
	131 Move W1, 1
	132 Move X0, X24
	133 Call RenderGraphLogger.DecrementIndentation, X0, X1
	134 Move X8, [X31]
	135 Compare X8, 0
	136 JumpIfEqual {143}
	137 Move X0, [X31]
	138 Call 0x1C17F18
	139 Move X23, X1
	140 Move X22, X0
	141 Move X23, X1
	142 Move X22, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X22
	145 Call 0x3EB2AD0
	146 Move X24, [X0]
	147 Call 0x3EB2AE0
	148 Move X24, X31
	149 Move X23, X1
	150 Move X22, X0
	151 Add X0, X31, 24
	152 Move X1, X31
	153 Call ProfilingScope.Dispose, X0
	154 Compare X24, 0
	155 JumpIfEqual {160}
	156 Move X0, X24
	157 Call 0x1C17F18
	158 Move X23, X1
	159 Move X22, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, X22
	162 Call 0x3EB2AD0
	163 Move X22, X0
	164 Move X0, 0x760000
	165 Move X0, [X0+2000]
	166 Call 0x1C17D08
	167 Move X8, [X22]
	168 Move X1, [X8]
	169 Call 0x1C18270
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {209}
	174 Move X22, [X22]
	175 Call 0x3EB2AE0
	176 Move W8, 1
	177 Move [X21+80], W8
	178 Move X20, [X20]
	179 Move X0, X20
	180 Call 0x19913C0
	181 Move X20, [X20+16]
	182 Move [X31+28], W19
	183 Move X0, 0x760000
	184 Move X0, [X0+1880]
	185 Call 0x1C17D08
	186 Add X1, X31, 28
	187 Call 0x1C17E04
	188 Move X19, X0
	189 Move X0, 0x7BD000
	190 Move X0, [X0+3320]
	191 Call 0x1C17D08
	192 Move X1, X20
	193 Move X2, X19
	194 Move X3, X31
	195 Call String.Format, X0, X1, X2
	196 Move X19, X0
	197 Move X0, 0x760000
	198 Move X0, [X0+2600]
	199 Call 0x1C17D08
	200 Call 0x19913D0
	201 Move X0, X19
	202 Move X1, X31
	203 Call Debug.LogError, X0
	204 Move X0, X22
	205 Move X1, X31
	206 Call Debug.LogException, X0
	207 Move X0, X22
	208 Call 0x1C17F18
	209 Move W0, 8
	210 Call 0x3EB2AF0
	211 Move X8, [X22]
	212 Move [X0], X8
	213 Move X1, 0x521000
	214 Add X1, X1, 3672
	215 Move X2, X31
	216 Call 0x3EB2B00
	217 Move X22, X0
	218 Call 0x3EB2AE0
	219 Move X0, X22
	220 Call 0x1D2D690
	221 Call 0x1991590

Method: System.Void ExecuteRenderGraph()

Disassembly:
	0x0398F0AC LDR X0, [X22]
	0x0398F0B0 LDR W8, [X0 + 0xE0]
	0x0398F0B4 CBNZ W8, 0x398F0C0
	0x0398F0B8 BL 0x1C16DFC
	0x0398F0BC LDR X0, [X22]
	0x0398F0C0 LDR X8, [X0 + 0xB8]
	0x0398F0C4 MOV X1, X21
	0x0398F0C8 MOV X2, X20
	0x0398F0CC ADD X0, X8, 0x30
	0x0398F0D0 BL 0x1C24138
	0x0398F0D4 CMP X20, X0
	0x0398F0D8 MOV X20, X0
	0x0398F0DC B.NE 0x398F084
	0x0398F0E0 LDP X20, X19, [X31 + 0x20]
	0x0398F0E4 LDP X22, X21, [X31 + 0x10]
	0x0398F0E8 LDP X30, X23, [X31], #0x30
	0x0398F0EC RET
	0x0398F0F0 MOV X0, X21
	0x0398F0F4 BL 0x1C171E0
	0x0398F0F8 STP X30, X21, [X31 - 0x20]!
	0x0398F0FC STP X20, X19, [X31 + 0x10]
	0x0398F100 ADRP X21, 0xA52000
	0x0398F104 LDRB W8, [X21 + 0xAAE]
	0x0398F108 MOV W20, W2
	0x0398F10C MOV X19, X1
	0x0398F110 TBNZ X8, 0x0, 0x398F140
	0x0398F114 ADRP X0, 0x7C1000
	0x0398F118 LDR X0, [X0 + 0xBD8]
	0x0398F11C BL 0x1C16CF4
	0x0398F120 ADRP X0, 0x7C1000
	0x0398F124 LDR X0, [X0 + 0xBE0]
	0x0398F128 BL 0x1C16CF4
	0x0398F12C ADRP X0, 0x7C1000
	0x0398F130 LDR X0, [X0 + 0xBE8]
	0x0398F134 BL 0x1C16CF4
	0x0398F138 MOVZ W8, 0x1
	0x0398F13C STRB W8, [X21 + 0xAAE]
	0x0398F140 CBZ X19, 0x398F1A8
	0x0398F144 ADRP X8, 0x7C1000
	0x0398F148 LDR X8, [X8 + 0xBD8]
	0x0398F14C MOV X0, X19
	0x0398F150 MOV W1, W20
	0x0398F154 MOV W2, W31
	0x0398F158 LDR X3, [X8]
	0x0398F15C BL 0x2B42F04
	0x0398F160 LDR W8, [X19 + 0x18]
	0x0398F164 CMP W8, 0x1
	0x0398F168 B.LT 0x398F19C
	0x0398F16C ADRP X21, 0x7C1000
	0x0398F170 LDR X21, [X21 + 0xBE0]
	0x0398F174 MOV W20, W31
	0x0398F178 LDR X2, [X21]
	0x0398F17C MOV X0, X19
	0x0398F180 MOV W1, W20
	0x0398F184 BL 0x2B42FB4
	0x0398F188 BL 0x398F1AC
	0x0398F18C LDR W8, [X19 + 0x18]
	0x0398F190 ADD W20, W20, 0x1
	0x0398F194 CMP W20, W8
	0x0398F198 B.LT 0x398F178
	0x0398F19C LDP X20, X19, [X31 + 0x10]
	0x0398F1A0 LDP X30, X21, [X31], #0x20
	0x0398F1A4 RET
	0x0398F1A8 BL 0x1C16F20
	0x0398F1AC STP X30, X21, [X31 - 0x20]!
	0x0398F1B0 STP X20, X19, [X31 + 0x10]
	0x0398F1B4 ADRP X20, 0xA52000
	0x0398F1B8 LDRB W8, [X20 + 0xAD1]
	0x0398F1BC MOV X19, X0
	0x0398F1C0 TBNZ X8, 0x0, 0x398F1F0
	0x0398F1C4 ADRP X0, 0x76B000
	0x0398F1C8 LDR X0, [X0 + 0x858]
	0x0398F1CC BL 0x1C16CF4
	0x0398F1D0 ADRP X0, 0x768000
	0x0398F1D4 LDR X0, [X0 + 0xB70]
	0x0398F1D8 BL 0x1C16CF4
	0x0398F1DC ADRP X0, 0x765000
	0x0398F1E0 LDR X0, [X0 + 0xE30]
	0x0398F1E4 BL 0x1C16CF4
	0x0398F1E8 MOVZ W8, 0x1
	0x0398F1EC STRB W8, [X20 + 0xAD1]
	0x0398F1F0 LDR X21, [X19]
	0x0398F1F4 CBNZ X21, 0x398F220
	0x0398F1F8 ADRP X8, 0x765000
	0x0398F1FC LDR X8, [X8 + 0xE30]
	0x0398F200 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA53000
	007 Move W8, [X20+2754]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7C2000
	014 Move X0, [X0+2856]
	015 Call 0x1C17CF4
	016 Move X0, 0x7C2000
	017 Move X0, [X0+2864]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2754], W8
	024 Move [X31+8], W31
	025 Move X8, [X19+88]
	026 Compare X8, 0
	027 JumpIfEqual {68}
	028 Move X9, 0x7C2000
	029 Move X9, [X9+2848]
	030 Move X20, [X8+24]
	031 Move W0, 1
	032 Move X1, [X9]
	033 Call 0x2236BC0, X0
	034 Move X2, X0
	035 Add X0, X31, 8
	036 Move X1, X20
	037 Move X3, X31
	038 Call ProfilingScope..ctor, X0, X1, X2
	039 Move X0, [X19+128]
	040 Compare X0, 0
	041 JumpIfEqual {58}
	042 Move X21, 0x7C2000
	043 Move X21, [X21+2856]
	044 Move W20, W31
	045 Move W8, [X0+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X2, [X21]
	048 Move W1, W20
	049 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	050 Move X1, X0
	051 Move X0, X19
	052 Move W2, W20
	053 Call RenderGraph.ExecuteCompiledPass, X0, X1, X2
	054 Move X0, [X19+128]
	055 Add W20, W20, 1
	056 Compare X0, 0
	057 JumpIfNotEqual {45}
	058 Call 0x1C17F20
	059 Add X0, X31, 8
	060 Move X1, X31
	061 Call ProfilingScope.Dispose, X0
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Add X31, X31, 48
	067 Return 
	068 Call 0x1C17F20
	069 Move X19, X0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X0, X19
	072 Call 0x3EB2AD0
	073 Move X20, [X0]
	074 Call 0x3EB2AE0
	075 Add X0, X31, 8
	076 Move X1, X31
	077 Call ProfilingScope.Dispose, X0
	078 Compare X20, 0
	079 JumpIfEqual {62}
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Move X20, X31
	083 Move X19, X0
	084 Add X0, X31, 8
	085 Move X1, X31
	086 Call ProfilingScope.Dispose, X0
	087 Compare X20, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X19
	090 Call 0x1D2D690
	091 Move X0, X20
	092 Call 0x1C17F18
	093 Call 0x1991590

Method: System.Void PreRenderPassSetRenderTargets(in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo passInfo, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext)

Disassembly:
	0x039952DC LDR X8, [X31 + 0x8]
	0x039952E0 LDR X8, [X8 + 0x28]
	0x039952E4 LDR X9, [X31 + 0x1C8]
	0x039952E8 CMP X8, X9
	0x039952EC B.NE 0x399602C
	0x039952F0 ADD X31, X31, 0x1D0
	0x039952F4 LDP X20, X19, [X31 + 0x50]
	0x039952F8 LDP X22, X21, [X31 + 0x40]
	0x039952FC LDP X24, X23, [X31 + 0x30]
	0x03995300 LDP X26, X25, [X31 + 0x20]
	0x03995304 LDP X28, X27, [X31 + 0x10]
	0x03995308 LDP X29, X30, [X31], #0x60
	0x0399530C RET
	0x03995310 ADRP X19, 0x7BB000
	0x03995314 LDR X19, [X19 + 0x8C0]
	0x03995318 LDR X0, [X19]
	0x0399531C LDR W8, [X0 + 0xE0]
	0x03995320 CBNZ W8, 0x3995328
	0x03995324 BL 0x1C16DFC
	0x03995328 ADRP X20, 0xA4C000
	0x0399532C LDRB W8, [X20 + 0xB43]
	0x03995330 CBNZ W8, 0x3995348
	0x03995334 ADRP X0, 0x7BB000
	0x03995338 LDR X0, [X0 + 0x8C0]
	0x0399533C BL 0x1C16CF4
	0x03995340 MOVZ W8, 0x1
	0x03995344 STRB W8, [X20 + 0xB43]
	0x03995348 LDR X0, [X19]
	0x0399534C LDR W8, [X0 + 0xE0]
	0x03995350 CBNZ W8, 0x399535C
	0x03995354 BL 0x1C16DFC
	0x03995358 LDR X0, [X19]
	0x0399535C LDR X8, [X0 + 0xB8]
	0x03995360 LDRB W8, [X8 + 0x10]
	0x03995364 CBZ W8, 0x3995FD8
	0x03995368 LDR X0, [X23 + 0xB0]
	0x0399536C CBZ X0, 0x3995FD4
	0x03995370 ADRP X8, 0x7BB000
	0x03995374 LDR X1, [X23 + 0xA0]
	0x03995378 LDR X8, [X8 + 0xA30]
	0x0399537C ADD X2, X31, 0x118
	0x03995380 LDR X3, [X8]
	0x03995384 BL 0x2AA6B2C
	0x03995388 TBNZ X0, 0x0, 0x3995400
	0x0399538C LDR X0, [X19]
	0x03995390 LDR W8, [X0 + 0xE0]
	0x03995394 CBNZ W8, 0x39953A0
	0x03995398 BL 0x1C16DFC
	0x0399539C LDR X0, [X19]
	0x039953A0 LDR X8, [X0 + 0xB8]
	0x039953A4 LDR X8, [X8 + 0x28]
	0x039953A8 CBZ X8, 0x39953C4
	0x039953AC LDR X2, [X23 + 0xA0]
	0x039953B0 LDR X9, [X8 + 0x18]
	0x039953B4 LDR X0, [X8 + 0x40]
	0x039953B8 LDR X3, [X8 + 0x28]
	0x039953BC MOV X1, X23
	0x039953C0 BLR X9
	0x039953C4 ADRP X8, 0x7BB000
	0x039953C8 LDR X8, [X8 + 0xDE0]
	0x039953CC LDR X0, [X8]
	0x039953D0 BL 0x1C16F10
	0x039953D4 MOV X20, X0
	0x039953D8 BL 0x398B5FC
	0x039953DC STR X20, [X27 + 0x28]
	0x039953E0 LDR X0, [X23 + 0xB0]
	0x039953E4 CBZ X0, 0x3995FD4
	0x039953E8 ADRP X8, 0x7BB000
	0x039953EC LDR X1, [X23 + 0xA0]
	0x039953F0 LDR X8, [X8 + 0xDB8]
	0x039953F4 MOV X2, X20
	0x039953F8 LDR X3, [X8]
	0x039953FC BL 0x2AA5098
	0x03995400 LDR X0, [X27 + 0x28]
	0x03995404 CBZ X0, 0x3995FD4
	0x03995408 BL 0x398B45C
	0x0399540C ADRP X26, 0x786000
	0x03995410 ADRP X28, 0x7BB000
	0x03995414 LDR X8, [X23 + 0x78]
	0x03995418 LDR X26, [X26 + 0x798]
	0x0399541C LDR X28, [X28 + 0xDC0]
	0x03995420 STR X23, [X31 + 0x38]
	0x03995424 ADRP X19, 0x75F000
	0x03995428 LDR X19, [X19 + 0xE30]
	0x0399542C MOV W20, W31
	0x03995430 CBZ X8, 0x3995FD4
	0x03995434 MOV W21, W31
	0x03995438 SXTW X29, W20
	0x0399543C LDR W9, [X8 + 0x18]
	0x03995440 CMP W20, W9
	0x03995444 B.CS 0x3995FE4
	0x03995448 ADD X9, X8, X29, 0x3, LSL
	0x0399544C LDR X0, [X9 + 0x20]
	0x03995450 CBZ X0, 0x3995FD4
	0x03995454 LDR W9, [X0 + 0x18]
	0x03995458 CMP W21, W9
	0x0399545C B.GE 0x39955F0
	0x03995460 ADRP X8, 0x7BB000
	0x03995464 LDR X8, [X8 + 0xBE0]
	0x03995468 MOV W1, W21
	0x0399546C LDR X2, [X8]
	0x03995470 BL 0x2B42FB4
	0x03995474 STR X31, [X27 + 0x10]
	0x03995478 STP X31, X31, [X31 + 0xF0]
	0x0399547C LDR X8, [X23 + 0x10]
	0x03995480 CBZ X8, 0x3995FD4
	0x03995484 MOV X22, X0
	0x03995488 MOV X0, X8
	0x0399548C MOV W1, W20
	0x03995490 MOV W2, W21
	0x03995494 BL 0x3996288
	0x03995498 STR X0, [X31 + 0xF0]
	0x0399549C LDR X0, [X23 + 0x10]
	0x039954A0 CBZ X0, 0x3995FD4
	0x039954A4 MOV W1, W20
	0x039954A8 MOV W2, W21
	0x039954AC BL 0x3996334
	0x039954B0 AND W8, W0, 0x1
	0x039954B4 MOVI V0.2D, 0xFFFFFFFFFFFFFFFF
	0x039954B8 MOV W24, W0
	0x039954BC STRB W8, [X31 + 0xF8]
	0x039954C0 STUR D0, [X27 + 0xC]
	0x039954C4 LDR X0, [X19]
	0x039954C8 LDR X25, [X22 + 0x8]
	0x039954CC BL 0x1C16F10
	0x039954D0 LDR X2, [X26]
	0x039954D4 MOV X1, X25
	0x039954D8 MOV X23, X0
	0x039954DC BL 0x2FDC030
	0x039954E0 STR X23, [X27 + 0x18]
	0x039954E4 LDR X0, [X19]
	0x039954E8 LDR X22, [X22]
	0x039954EC BL 0x1C16F10
	0x039954F0 LDR X2, [X26]
	0x039954F4 MOV X1, X22
	0x039954F8 MOV X25, X0
	0x039954FC BL 0x2FDC030
	0x03995500 STR X25, [X27 + 0x20]
	0x03995504 TBZ X24, 0x0, 0x3995520
	0x03995508 ADD X1, X31, 0xF0
	0x0399550C MOV X2, X23
	0x03995510 BL 0x3994F40
	0x03995514 LDR X2, [X27 + 0x20]
	0x03995518 ADD X1, X31, 0xF0
	0x0399551C BL 0x3994F40
	0x03995520 LDR X8, [X27 + 0x28]
	0x03995524 CBZ X8, 0x3995FD4
	0x03995528 LDR X8, [X8 + 0x18]
	0x0399552C CBZ X8, 0x3995FD4
	0x03995530 LDR W9, [X8 + 0x18]
	0x03995534 CMP W20, W9
	0x03995538 B.CS 0x3995FE4
	0x0399553C ADD X8, X8, X29, 0x3, LSL
	0x03995540 LDR V0, [X31 + 0xF]
	0x03995544 LDR V1, [X27 + 0x1]
	0x03995548 LDR X9, [X27 + 0x20]
	0x0399554C LDR X0, [X8 + 0x20]
	0x03995550 STP V0, V1, [X27 + 0xB0]
	0x03995554 STR X9, [X27 + 0xD0]
	0x03995558 CBZ X0, 0x3995FD4
	0x0399555C LDP V0, V1, [X27 + 0xB0]
	0x03995560 LDR X8, [X27 + 0xD0]
	0x03995564 LDR X10, [X28]
	0x03995568 STP V0, V1, [X27 + 0x30]
	0x0399556C STR X8, [X27 + 0x50]
	0x03995570 LDR W9, [X0 + 0x1C]
	0x03995574 LDR X8, [X0 + 0x10]
	0x03995578 ADD W9, W9, 0x1
	0x0399557C STR W9, [X0 + 0x1C]
	0x03995580 CBZ X8, 0x3995FD4
	0x03995584 LDRSW X9, [X0 + 0x18]
	0x03995588 LDR W11, [X8 + 0x18]
	0x0399558C CMP W9, W11
	0x03995590 B.CS 0x39955B8
	0x03995594 ADD W10, W9, 0x1
	0x03995598 STR W10, [X0 + 0x18]
	0x0399559C LDR X10, [X27 + 0x50]
	0x039955A0 LDP V1, V0, [X27 + 0x30]
	0x039955A4 MOVZ W11, 0x28
	0x039955A8 MADD X8, X9, X11, X8
	0x039955AC STR X10, [X8 + 0x40]
	0x039955B0 STP V1, V0, [X8 + 0x20]
	0x039955B4 B 0x39955DC
	0x039955B8 LDR X8, [X10 + 0x20]
	0x039955BC LDP V0, V1, [X27 + 0x30]
	0x039955C0 LDR X9, [X27 + 0x50]
	0x039955C4 ADD X1, X31, 0x150
	0x039955C8 LDR X8, [X8 + 0xC0]
	0x039955CC LDR X2, [X8 + 0x70]
	0x039955D0 STP V0, V1, [X27 + 0x60]
	0x039955D4 STR X9, [X27 + 0x80]
	0x039955D8 BL 0x313D79C
	0x039955DC LDR X23, [X31 + 0x38]
	0x039955E0 ADD W21, W21, 0x1
	0x039955E4 LDR X8, [X23 + 0x78]
	0x039955E8 CBNZ X8, 0x399543C
	0x039955EC B 0x3995FD4
	0x039955F0 ADD W20, W20, 0x1
	0x039955F4 CMP W20, 0x2
	0x039955F8 B.NE 0x3995430
	0x039955FC LDR X0, [X23 + 0x80]
	0x03995600 CBZ X0, 0x3995FD4
	0x03995604 ADD X9, X31, 0x150
	0x03995608 ADD X8, X31, 0x1A0
	0x0399560C ADD X10, X31, 0x120
	0x03995610 ADD X11, X9, 0x9
	0x03995614 ADD X9, X9, 0x10
	0x03995618 ADD X20, X8, 0x9
	0x0399561C ADD X26, X8, 0x10
	0x03995620 STP X9, X11, [X31 + 0x58]
	0x03995624 ADD X28, X8, 0x14
	0x03995628 ADD X11, X10, 0x9
	0x0399562C ADD X9, X10, 0x14
	0x03995630 ADD X8, X8, 0x25
	0x03995634 MOV W1, W31
	0x03995638 STP X9, X11, [X31 + 0x48]
	0x0399563C STR X8, [X31 + 0x10]
	0x03995640 LDR W8, [X0 + 0x18]
	0x03995644 CMP W1, W8
	0x03995648 B.GE 0x39952DC
	0x0399564C ADRP X8, 0x7BB000
	0x03995650 LDR X8, [X8 + 0xB28]
	0x03995654 STR W1, [X31 + 0x6C]
	0x03995658 LDR X2, [X8]
	0x0399565C BL 0x2B4260C
	0x03995660 STRH W31, [X31 + 0xEC]
	0x03995664 STRB W31, [X31 + 0xEE]
	0x03995668 LDR X8, [X0]
	0x0399566C CBZ X8, 0x3995FD4
	0x03995670 LDR X9, [X8 + 0x10]
	0x03995674 LDRB W10, [X0 + 0x1C]
	0x03995678 LDRB W8, [X8 + 0x48]
	0x0399567C ADRP X19, 0x7B9000
	0x03995680 STR X9, [X31 + 0x20]
	0x03995684 LDRB W9, [X0 + 0x40]
	0x03995688 STR W8, [X31 + 0x34]
	0x0399568C MOV X21, X0
	0x03995690 MOVZ W1, 0x2
	0x03995694 STP W9, W10, [X31 + 0x2C]
	0x03995698 LDR X19, [X19 + 0xE28]
	0x0399569C LDR X0, [X19]
	0x039956A0 BL 0x1C16D6C
	0x039956A4 LDR X8, [X19]
	0x039956A8 STR X0, [X31 + 0x70]
	0x039956AC MOVZ W1, 0x2
	0x039956B0 MOV X0, X8
	0x039956B4 BL 0x1C16D6C
	0x039956B8 LDR W9, [X21 + 0x24]
	0x039956BC LDR W8, [X21 + 0x20]
	0x039956C0 MOV X22, X0

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X22, 0xA4D000
	015 Move W8, [X22+2755]
	016 Move X20, X2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x787000
	024 Move X0, [X0+2296]
	025 Call 0x1C17CF4
	026 Move X0, 0x7BC000
	027 Move X0, [X0+3368]
	028 Call 0x1C17CF4
	029 Move X0, 0x7BC000
	030 Move X0, [X0+2696]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2755], W8
	034 Move X24, [X21]
	035 Compare X24, 0
	036 JumpIfEqual {285}
	037 Move X25, 0x7BC000
	038 Move X25, [X25+2696]
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move X0, [X25]
	041 Move [X31+120], X8
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X0, X31, 120
	047 Call TextureHandle.IsValid, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {54}
	052 Move W8, [X24+64]
	053 Add W31, W8, 1
	054 Compare X20, 0
	055 JumpIfEqual {285}
	056 Move X0, [X20+32]
	057 Compare X0, 0
	058 JumpIfEqual {285}
	059 Move X8, 0x7BC000
	060 Move X8, [X8+3368]
	061 Move W9, [X24+64]
	062 Move X23, 0x787000
	063 Move X2, [X8]
	064 Move X23, [X23+2296]
	065 Add W1, W9, 1
	066 Call 0x2242288, X0, X1
	067 Move W8, [X24+64]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X26, [X24+56]
	070 Compare X26, 0
	071 JumpIfEqual {285}
	072 Move X21, X0
	073 Move W27, W31
	074 Move W28, 40
	075 Move X0, [X25]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move W8, [X26+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X29, W27
	083 Add X8, X26, X29
	084 Add X22, X8, 32
	085 Move X0, X22
	086 Call TextureHandle.IsValid, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {286}
	091 Move X0, [X19+16]
	092 Compare X0, 0
	093 JumpIfEqual {285}
	094 Move W8, [X26+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X1, X22
	097 Call RenderGraphResourceRegistry.GetTexture, X0, X1
	098 Add X8, X31, 40
	099 Move X1, X31
	100 Call RTHandle.op_Implicit, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move X8, [X31+72]
	104 Move [X31+80], V0
	105 Move [X31+88], V1
	106 Move [X31+112], X8
	107 Compare X21, 0
	108 JumpIfEqual {285}
	109 Move V0, [X31+80]
	110 Move V1, [X31+96]
	111 Move X8, [X31+112]
	112 Move [X31], V0
	113 Move [X31+8], V1
	114 Move [X31+32], X8
	115 Move W8, [X21+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X31+32]
	118 Move V1, [X31]
	119 Move V0, [X31+16]
	120 NotImplemented "Instruction NOP not yet implemented."
	121 NotImplemented "Instruction MADD not yet implemented."
	122 Add W27, W27, 1
	123 Move [X9+64], X8
	124 Move [X9+32], V1
	125 Move [X9+40], V0
	126 Move W8, [X24+64]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X0, [X25]
	130 Move [X31+120], X8
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Add X0, X31, 120
	136 Call TextureHandle.IsValid, X0
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {304}
	141 Move X0, [X19+16]
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move X19, [X20+24]
	144 Move [X31+120], X8
	145 Compare X0, 0
	146 JumpIfEqual {285}
	147 Add X1, X31, 120
	148 Call RenderGraphResourceRegistry.GetTexture, X0, X1
	149 Move X8, [X23]
	150 Move X20, X0
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move X0, X19
	157 Move X1, X21
	158 Move X2, X20
	159 Move X3, X31
	160 Call CoreUtils.SetRenderTarget, X0, X1, X2
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 Move X0, [X25]
	163 Move [X31+120], X8
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {168}
	167 Call 0x1C17DFC
	168 Add X0, X31, 120
	169 Call TextureHandle.IsValid, X0
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {218}
	174 Move W8, [X24+64]
	175 Move X20, [X20+24]
	176 Move X0, [X19+16]
	177 Move TEMP, X8
	178 And TEMP, TEMP, -2147483648
	179 Compare TEMP, -2147483648
	180 JumpIfEqual {245}
	181 Move X8, [X24+56]
	182 Compare X8, 0
	183 JumpIfEqual {285}
	184 Compare X0, 0
	185 JumpIfEqual {285}
	186 Move W9, [X8+24]
	187 Compare W9, 0
	188 JumpIfEqual {284}
	189 Add X1, X8, 32
	190 Call RenderGraphResourceRegistry.GetTexture, X0, X1
	191 Move X21, X0
	192 Move X0, [X19+16]
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 Move [X31+120], X8
	195 Compare X0, 0
	196 JumpIfEqual {285}
	197 Add X1, X31, 120
	198 Call RenderGraphResourceRegistry.GetTexture, X0, X1
	199 Move X8, [X23]
	200 Move X19, X0
	201 Move W9, [X8+224]
	202 Compare W9, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X8
	205 Call 0x1C17DFC
	206 Move TEMP, 0
	207 Not TEMP
	208 Move W4, TEMP
	209 Move TEMP, 0
	210 Not TEMP
	211 Move W5, TEMP
	212 Move X0, X20
	213 Move X1, X21
	214 Move X2, X19
	215 Move W3, W31
	216 Move X6, X31
	217 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	218 Move X8, [X24+56]
	219 Compare X8, 0
	220 JumpIfEqual {285}
	221 Move X0, [X19+16]
	222 Compare X0, 0
	223 JumpIfEqual {285}
	224 Move W9, [X8+24]
	225 Compare W9, 0
	226 JumpIfEqual {284}
	227 Move X19, [X20+24]
	228 Add X1, X8, 32
	229 Call RenderGraphResourceRegistry.GetTexture, X0, X1
	230 Move X8, [X23]
	231 Move X20, X0
	232 Move W9, [X8+224]
	233 Compare W9, 0
	234 JumpIfNotEqual {237}
	235 Move X0, X8
	236 Call 0x1C17DFC
	237 Move TEMP, 0
	238 Not TEMP
	239 Move W4, TEMP
	240 Move TEMP, 0
	241 Not TEMP
	242 Move W5, TEMP
	243 Move X0, X19
	244 Move X1, X20
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 Move [X31+120], X8
	247 Compare X0, 0
	248 JumpIfEqual {285}
	249 Add X1, X31, 120
	250 Call RenderGraphResourceRegistry.GetTexture, X0, X1
	251 Move X8, [X23]
	252 Move X19, X0
	253 Move W9, [X8+224]
	254 Compare W9, 0
	255 JumpIfNotEqual {258}
	256 Move X0, X8
	257 Call 0x1C17DFC
	258 Move TEMP, 0
	259 Not TEMP
	260 Move W4, TEMP
	261 Move TEMP, 0
	262 Not TEMP
	263 Move W5, TEMP
	264 Move X0, X20
	265 Move X1, X19
	266 Move W2, W31
	267 Move W3, W31
	268 Move X6, X31
	269 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	270 Move X20, [X31+208]
	271 Move X19, [X31+216]
	272 Move X22, [X31+192]
	273 Move X21, [X31+200]
	274 Move X24, [X31+176]
	275 Move X23, [X31+184]
	276 Move X26, [X31+160]
	277 Move X25, [X31+168]
	278 Move X28, [X31+144]
	279 Move X27, [X31+152]
	280 Move X29, [X31+128]
	281 Move X30, [X31+136]
	282 Add X31, X31, 224
	283 Return 
	284 Call 0x1C17F28
	285 Call 0x1C17F20
	286 Move X0, 0x75F000
	287 Move X0, [X0+1456]
	288 Call 0x1C17D08
	289 Call 0x1C17F10
	290 Move X19, X0
	291 Move X0, 0x7BC000
	292 Move X0, [X0+3376]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X19
	296 Move X2, X31
	297 Call InvalidOperationException..ctor, X0, X1
	298 Move X0, 0x7BC000
	299 Move X0, [X0+3384]
	300 Call 0x1C17D08
	301 Move X1, X0
	302 Move X0, X19
	303 Call 0x1C17DEC
	304 Move X0, 0x75F000
	305 Move X0, [X0+1456]
	306 Call 0x1C17D08
	307 Call 0x1C17F10
	308 Move X19, X0
	309 Move X0, 0x7BC000
	310 Move X0, [X0+3392]

Method: System.Void PreRenderPassExecute(in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo passInfo, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext)

Disassembly:
	0x03994DC4 BL 0x1C16F20
	0x03994DC8 B 0x3994E2C
	0x03994DCC B 0x3994DD4
	0x03994DD0 B 0x3994DD4
	0x03994DD4 CMP W1, 0x1
	0x03994DD8 B.NE 0x3994E20
	0x03994DDC BL 0x3EB1AD0
	0x03994DE0 LDR X21, [X0]
	0x03994DE4 BL 0x3EB1AE0
	0x03994DE8 LDR X1, [X22]
	0x03994DEC ADD X0, X31, 0x20
	0x03994DF0 BL 0x2BBDD9C
	0x03994DF4 CBZ X21, 0x3994DB4
	0x03994DF8 MOV X0, X21
	0x03994DFC BL 0x1C16F18
	0x03994E00 LDP X20, X19, [X31 + 0x70]
	0x03994E04 LDP X22, X21, [X31 + 0x60]
	0x03994E08 LDP X24, X23, [X31 + 0x50]
	0x03994E0C LDR X30, [X31 + 0x40]
	0x03994E10 ADD X31, X31, 0x80
	0x03994E14 RET
	0x03994E18 BL 0x1C16F20
	0x03994E1C BL 0x1C16F28
	0x03994E20 MOV X19, X0
	0x03994E24 MOV X21, X31
	0x03994E28 B 0x3994E30
	0x03994E2C MOV X19, X0
	0x03994E30 LDR X1, [X22]
	0x03994E34 ADD X0, X31, 0x20
	0x03994E38 BL 0x2BBDD9C
	0x03994E3C CBNZ X21, 0x3994E48
	0x03994E40 MOV X0, X19
	0x03994E44 BL 0x1D2C690
	0x03994E48 MOV X0, X21
	0x03994E4C BL 0x1C16F18
	0x03994E50 BL 0x1990590
	0x03994E54 STR X30, [X31 - 0x30]!
	0x03994E58 STP X22, X21, [X31 + 0x10]
	0x03994E5C STP X20, X19, [X31 + 0x20]
	0x03994E60 ADRP X21, 0xA4D000
	0x03994E64 LDRB W8, [X21 + 0xACC]
	0x03994E68 MOV X20, X1
	0x03994E6C MOV X19, X0
	0x03994E70 TBNZ X8, 0x0, 0x3994EA0
	0x03994E74 ADRP X0, 0x7BC000
	0x03994E78 LDR X0, [X0 + 0xDA8]
	0x03994E7C BL 0x1C16CF4
	0x03994E80 ADRP X0, 0x7BC000
	0x03994E84 LDR X0, [X0 + 0xDB0]
	0x03994E88 BL 0x1C16CF4
	0x03994E8C ADRP X0, 0x7BC000
	0x03994E90 LDR X0, [X0 + 0x598]
	0x03994E94 BL 0x1C16CF4
	0x03994E98 MOVZ W8, 0x1
	0x03994E9C STRB W8, [X21 + 0xACC]
	0x03994EA0 STR X31, [X31 + 0x8]
	0x03994EA4 CBZ X20, 0x3994F3C
	0x03994EA8 LDR X8, [X20]
	0x03994EAC MOV X0, X20
	0x03994EB0 LDP X9, X1, [X8 + 0x158]
	0x03994EB4 BLR X9
	0x03994EB8 LDR X8, [X19 + 0x48]
	0x03994EBC CBZ X8, 0x3994F3C
	0x03994EC0 ADRP X9, 0x7BC000
	0x03994EC4 LDR X9, [X9 + 0xDB0]
	0x03994EC8 MOV W21, W0
	0x03994ECC ADD X2, X31, 0x8
	0x03994ED0 MOV X0, X8
	0x03994ED4 LDR X3, [X9]
	0x03994ED8 MOV W1, W21
	0x03994EDC BL 0x2A150AC
	0x03994EE0 TBNZ X0, 0x0, 0x3994F28
	0x03994EE4 ADRP X8, 0x7BC000
	0x03994EE8 LDR X8, [X8 + 0x598]
	0x03994EEC LDR X0, [X8]
	0x03994EF0 BL 0x1C16F10
	0x03994EF4 MOV X1, X20
	0x03994EF8 MOV X2, X31
	0x03994EFC MOV X22, X0
	0x03994F00 BL 0x39B19AC
	0x03994F04 STR X22, [X31 + 0x8]
	0x03994F08 LDR X0, [X19 + 0x48]
	0x03994F0C CBZ X0, 0x3994F3C
	0x03994F10 ADRP X8, 0x7BC000
	0x03994F14 LDR X8, [X8 + 0xDA8]
	0x03994F18 MOV W1, W21
	0x03994F1C MOV X2, X22
	0x03994F20 LDR X3, [X8]
	0x03994F24 BL 0x2A1368C
	0x03994F28 LDR X0, [X31 + 0x8]
	0x03994F2C LDP X20, X19, [X31 + 0x20]
	0x03994F30 LDP X22, X21, [X31 + 0x10]
	0x03994F34 LDR X30, [X31], #0x30
	0x03994F38 RET
	0x03994F3C BL 0x1C16F20
	0x03994F40 SUB X31, X31, 0x80
	0x03994F44 STR X30, [X31 + 0x40]
	0x03994F48 STP X24, X23, [X31 + 0x50]
	0x03994F4C STP X22, X21, [X31 + 0x60]
	0x03994F50 STP X20, X19, [X31 + 0x70]
	0x03994F54 ADRP X21, 0xA4D000
	0x03994F58 LDRB W8, [X21 + 0xACD]
	0x03994F5C MOV X20, X2
	0x03994F60 MOV X19, X1
	0x03994F64 TBNZ X8, 0x0, 0x3994FAC
	0x03994F68 ADRP X0, 0x78A000
	0x03994F6C LDR X0, [X0 + 0xB18]
	0x03994F70 BL 0x1C16CF4
	0x03994F74 ADRP X0, 0x78A000
	0x03994F78 LDR X0, [X0 + 0xB28]
	0x03994F7C BL 0x1C16CF4
	0x03994F80 ADRP X0, 0x78A000
	0x03994F84 LDR X0, [X0 + 0xB38]
	0x03994F88 BL 0x1C16CF4
	0x03994F8C ADRP X0, 0x78A000
	0x03994F90 LDR X0, [X0 + 0xB50]
	0x03994F94 BL 0x1C16CF4
	0x03994F98 ADRP X0, 0x75F000
	0x03994F9C LDR X0, [X0 + 0x5A8]
	0x03994FA0 BL 0x1C16CF4
	0x03994FA4 MOVZ W8, 0x1
	0x03994FA8 STRB W8, [X21 + 0xACD]
	0x03994FAC STP X31, X31, [X31 + 0x20]
	0x03994FB0 STR X31, [X31 + 0x30]
	0x03994FB4 CBZ X20, 0x399509C
	0x03994FB8 ADRP X8, 0x78A000
	0x03994FBC LDR X8, [X8 + 0xB50]
	0x03994FC0 ADRP X23, 0x78A000
	0x03994FC4 ADRP X24, 0x75F000
	0x03994FC8 ADRP X22, 0x78A000
	0x03994FCC LDR X1, [X8]
	0x03994FD0 LDR X23, [X23 + 0xB28]
	0x03994FD4 LDR X24, [X24 + 0x5A8]
	0x03994FD8 LDR X22, [X22 + 0xB18]
	0x03994FDC ADD X8, X31, 0x8
	0x03994FE0 MOV X0, X20
	0x03994FE4 BL 0x2FDD2BC
	0x03994FE8 LDUR V0, [X31 + 0x8]
	0x03994FEC LDR X8, [X31 + 0x18]
	0x03994FF0 STR V0, [X31 + 0x2]
	0x03994FF4 STR X8, [X31 + 0x30]
	0x03994FF8 LDR X1, [X23]
	0x03994FFC ADD X0, X31, 0x20
	0x03995000 BL 0x2BBDDA0
	0x03995004 TBZ X0, 0x0, 0x3995078
	0x03995008 LDR W21, [X19 + 0xC]
	0x0399500C LDR W20, [X31 + 0x30]
	0x03995010 ADDS W31, W21, 0x1
	0x03995014 MOV W0, W20
	0x03995018 B.EQ 0x399503C
	0x0399501C LDR X0, [X24]
	0x03995020 LDR W8, [X0 + 0xE0]
	0x03995024 CBNZ W8, 0x399502C
	0x03995028 BL 0x1C16DFC
	0x0399502C MOV W0, W21
	0x03995030 MOV W1, W20
	0x03995034 MOV X2, X31
	0x03995038 BL 0x337EE94
	0x0399503C LDR W21, [X19 + 0x10]
	0x03995040 STR W0, [X19 + 0xC]
	0x03995044 ADDS W31, W21, 0x1
	0x03995048 B.EQ 0x3995070
	0x0399504C LDR X0, [X24]
	0x03995050 LDR W8, [X0 + 0xE0]
	0x03995054 CBNZ W8, 0x399505C
	0x03995058 BL 0x1C16DFC
	0x0399505C MOV W0, W21
	0x03995060 MOV W1, W20
	0x03995064 MOV X2, X31
	0x03995068 BL 0x337EDF0
	0x0399506C MOV W20, W0
	0x03995070 STR W20, [X19 + 0x10]
	0x03995074 B 0x3994FF8
	0x03995078 LDR X1, [X22]
	0x0399507C ADD X0, X31, 0x20
	0x03995080 BL 0x2BBDD9C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X22, 0xA4E000
	015 Move W8, [X22+2756]
	016 Move X19, X2
	017 Move X21, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x7BD000
	024 Move X0, [X0+3360]
	025 Call 0x1C17CF4
	026 Move X0, 0x7BD000
	027 Move X0, [X0+2856]
	028 Call 0x1C17CF4
	029 Move X0, 0x78B000
	030 Move X0, [X0+2840]
	031 Call 0x1C17CF4
	032 Move X0, 0x78B000
	033 Move X0, [X0+2856]
	034 Call 0x1C17CF4
	035 Move X0, 0x78B000
	036 Move X0, [X0+2872]
	037 Call 0x1C17CF4
	038 Move X0, 0x78B000
	039 Move X0, [X0+2896]
	040 Call 0x1C17CF4
	041 Move X0, 0x7BD000
	042 Move X0, [X0+3200]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X22+2756], W8
	046 Move [X31+32], X31
	047 Move [X31+40], X31
	048 Move [X31+48], X31
	049 Compare X19, 0
	050 JumpIfEqual {185}
	051 Move X29, 0x78B000
	052 Move X23, 0x78B000
	053 Move X27, 0x78B000
	054 Move X28, 0x7BD000
	055 Move X26, 0x7BD000
	056 Move X24, 0x7BD000
	057 Move X29, [X29+2896]
	058 Move X23, [X23+2856]
	059 Move X27, [X27+2840]
	060 Move X28, [X28+3200]
	061 Move X8, [X19+24]
	062 Move X25, [X21]
	063 Move X26, [X26+3360]
	064 Move X24, [X24+2856]
	065 Move W22, W31
	066 Move [X20+96], X8
	067 Move X8, [X21+8]
	068 Compare X8, 0
	069 JumpIfEqual {185}
	070 Move W9, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X8, W22
	073 Move X0, [X8+32]
	074 Compare X0, 0
	075 JumpIfEqual {185}
	076 Move X1, [X29]
	077 Add X8, X31, 8
	078 Call List`1<Int32>.GetEnumerator, X0
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X8, [X31+24]
	081 Move [X31+2], V0
	082 Move [X31+48], X8
	083 Move X1, [X23]
	084 Add X0, X31, 32
	085 Call Enumerator<Int32>.MoveNext, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {97}
	090 Move X0, [X20+16]
	091 Compare X0, 0
	092 JumpIfEqual {102}
	093 Move W3, [X31+48]
	094 Move X1, X19
	095 Move W2, W22
	096 Call RenderGraphResourceRegistry.CreatePooledResource, X0, X1, X2, X3
	097 Move X1, [X27]
	098 Add X0, X31, 32
	099 Call Enumerator<Int32>.Dispose, X0
	100 Add W22, W22, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Call 0x1C17F20
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Call 0x3EB2AD0
	105 Move X8, [X0]
	106 Move [X31], X8
	107 Call 0x3EB2AE0
	108 Move X1, [X27]
	109 Add X0, X31, 32
	110 Call Enumerator<Int32>.Dispose, X0
	111 Move X0, [X31]
	112 Compare X0, 0
	113 JumpIfEqual {100}
	114 Call 0x1C17F18
	115 Move X0, X20
	116 Move X1, X21
	117 Move X2, X19
	118 Call RenderGraph.PreRenderPassSetRenderTargets, X0, X1, X2
	119 Move W8, [X21+64]
	120 Compare W8, 0
	121 JumpIfEqual {156}
	122 Move X0, [X28]
	123 Move X22, [X19+24]
	124 Add X23, X19, 16
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X23
	130 Move X1, X22
	131 Move X2, X31
	132 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	133 Move X0, [X19+24]
	134 Compare X0, 0
	135 JumpIfEqual {185}
	136 Move X1, X31
	137 Call CommandBuffer.Clear, X0
	138 Compare X25, 0
	139 JumpIfEqual {185}
	140 Move X0, [X26]
	141 Move X22, [X25+16]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X22
	147 Move X1, X31
	148 Call CommandBufferPool.Get, X0
	149 Compare X0, 0
	150 JumpIfEqual {185}
	151 Move W1, 2
	152 Move X2, X31
	153 Move X22, X0
	154 Call CommandBuffer.SetExecutionFlags, X0, X1
	155 Move [X19+24], X22
	156 Move W1, [X21+32]
	157 Add W31, W1, 1
	158 Move X0, [X20+128]
	159 Compare X0, 0
	160 JumpIfEqual {185}
	161 Move X2, [X24]
	162 Move X19, [X19+24]
	163 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	164 Compare X19, 0
	165 JumpIfEqual {185}
	166 Move X1, [X0+48]
	167 Move X2, [X0+56]
	168 Move X0, X19
	169 Move X3, X31
	170 Call CommandBuffer.WaitOnAsyncGraphicsFence, X0, X1
	171 Move X20, [X31+144]
	172 Move X19, [X31+152]
	173 Move X22, [X31+128]
	174 Move X21, [X31+136]
	175 Move X24, [X31+112]
	176 Move X23, [X31+120]
	177 Move X26, [X31+96]
	178 Move X25, [X31+104]
	179 Move X28, [X31+80]
	180 Move X27, [X31+88]
	181 Move X29, [X31+64]
	182 Move X30, [X31+72]
	183 Add X31, X31, 160
	184 Return 
	185 Call 0x1C17F20
	186 Call 0x1C17F28
	187 Move X19, X0
	188 Move X20, X31
	189 Move X20, [X31]
	190 Move X19, X0
	191 Move X1, [X27]
	192 Add X0, X31, 32
	193 Call Enumerator<Int32>.Dispose, X0
	194 Compare X20, 0
	195 JumpIfNotEqual {198}
	196 Move X0, X19
	197 Call 0x1D2D690
	198 Move X0, X20
	199 Call 0x1C17F18
	200 Call 0x1991590

Method: System.Void PostRenderPassExecute(ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo passInfo, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext)

Disassembly:
	0x03995084 LDP X20, X19, [X31 + 0x70]
	0x03995088 LDP X22, X21, [X31 + 0x60]
	0x0399508C LDP X24, X23, [X31 + 0x50]
	0x03995090 LDR X30, [X31 + 0x40]
	0x03995094 ADD X31, X31, 0x80
	0x03995098 RET
	0x0399509C BL 0x1C16F20
	0x039950A0 B 0x39950B0
	0x039950A4 B 0x39950B0
	0x039950A8 B 0x39950B0
	0x039950AC B 0x39950B0
	0x039950B0 MOV X19, X0
	0x039950B4 CMP W1, 0x1
	0x039950B8 B.NE 0x39950E4
	0x039950BC MOV X0, X19
	0x039950C0 BL 0x3EB1AD0
	0x039950C4 LDR X20, [X0]
	0x039950C8 BL 0x3EB1AE0
	0x039950CC LDR X1, [X22]
	0x039950D0 ADD X0, X31, 0x20
	0x039950D4 BL 0x2BBDD9C
	0x039950D8 CBZ X20, 0x3995084
	0x039950DC MOV X0, X20
	0x039950E0 BL 0x1C16F18
	0x039950E4 MOV X20, X31
	0x039950E8 B 0x39950F0
	0x039950EC MOV X19, X0
	0x039950F0 LDR X1, [X22]
	0x039950F4 ADD X0, X31, 0x20
	0x039950F8 BL 0x2BBDD9C
	0x039950FC CBNZ X20, 0x3995108
	0x03995100 MOV X0, X19
	0x03995104 BL 0x1D2C690
	0x03995108 MOV X0, X20
	0x0399510C BL 0x1C16F18
	0x03995110 BL 0x1990590
	0x03995114 STP X29, X30, [X31 - 0x60]!
	0x03995118 STP X28, X27, [X31 + 0x10]
	0x0399511C STP X26, X25, [X31 + 0x20]
	0x03995120 STP X24, X23, [X31 + 0x30]
	0x03995124 STP X22, X21, [X31 + 0x40]
	0x03995128 STP X20, X19, [X31 + 0x50]
	0x0399512C SUB X31, X31, 0x1D0
	0x03995130 MRS X8, 0xC000
	0x03995134 STR X8, [X31 + 0x8]
	0x03995138 LDR X8, [X8 + 0x28]
	0x0399513C ADRP X19, 0xA4C000
	0x03995140 MOV X23, X0
	0x03995144 ADD X27, X31, 0xF0
	0x03995148 STR X8, [X31 + 0x1C8]
	0x0399514C LDRB W8, [X19 + 0xACE]
	0x03995150 TBNZ X8, 0x0, 0x3995294
	0x03995154 ADRP X0, 0x7BB000
	0x03995158 LDR X0, [X0 + 0xDB8]
	0x0399515C BL 0x1C16CF4
	0x03995160 ADRP X0, 0x7BB000
	0x03995164 LDR X0, [X0 + 0xA30]
	0x03995168 BL 0x1C16CF4
	0x0399516C ADRP X0, 0x7BB000
	0x03995170 LDR X0, [X0 + 0xB28]
	0x03995174 BL 0x1C16CF4
	0x03995178 ADRP X0, 0x7BB000
	0x0399517C LDR X0, [X0 + 0xBE0]
	0x03995180 BL 0x1C16CF4
	0x03995184 ADRP X0, 0x7BB000
	0x03995188 LDR X0, [X0 + 0xBE8]
	0x0399518C BL 0x1C16CF4
	0x03995190 ADRP X0, 0x7BB000
	0x03995194 LDR X0, [X0 + 0xB30]
	0x03995198 BL 0x1C16CF4
	0x0399519C ADRP X0, 0x789000
	0x039951A0 LDR X0, [X0 + 0xB18]
	0x039951A4 BL 0x1C16CF4
	0x039951A8 ADRP X0, 0x7BB000
	0x039951AC LDR X0, [X0 + 0xBF8]
	0x039951B0 BL 0x1C16CF4
	0x039951B4 ADRP X0, 0x7BB000
	0x039951B8 LDR X0, [X0 + 0xC00]
	0x039951BC BL 0x1C16CF4
	0x039951C0 ADRP X0, 0x789000
	0x039951C4 LDR X0, [X0 + 0xB28]
	0x039951C8 BL 0x1C16CF4
	0x039951CC ADRP X0, 0x789000
	0x039951D0 LDR X0, [X0 + 0xB38]
	0x039951D4 BL 0x1C16CF4
	0x039951D8 ADRP X0, 0x7BB000
	0x039951DC LDR X0, [X0 + 0xC08]
	0x039951E0 BL 0x1C16CF4
	0x039951E4 ADRP X0, 0x7B9000
	0x039951E8 LDR X0, [X0 + 0xE28]
	0x039951EC BL 0x1C16CF4
	0x039951F0 ADRP X0, 0x75F000
	0x039951F4 LDR X0, [X0 + 0xE10]
	0x039951F8 BL 0x1C16CF4
	0x039951FC ADRP X0, 0x7BB000
	0x03995200 LDR X0, [X0 + 0xDC0]
	0x03995204 BL 0x1C16CF4
	0x03995208 ADRP X0, 0x7BB000
	0x0399520C LDR X0, [X0 + 0xDC8]
	0x03995210 BL 0x1C16CF4
	0x03995214 ADRP X0, 0x789000
	0x03995218 LDR X0, [X0 + 0xB50]
	0x0399521C BL 0x1C16CF4
	0x03995220 ADRP X0, 0x7BB000
	0x03995224 LDR X0, [X0 + 0xC10]
	0x03995228 BL 0x1C16CF4
	0x0399522C ADRP X0, 0x762000
	0x03995230 LDR X0, [X0 + 0xB70]
	0x03995234 BL 0x1C16CF4
	0x03995238 ADRP X0, 0x786000
	0x0399523C LDR X0, [X0 + 0x798]
	0x03995240 BL 0x1C16CF4
	0x03995244 ADRP X0, 0x7BB000
	0x03995248 LDR X0, [X0 + 0xDD0]
	0x0399524C BL 0x1C16CF4
	0x03995250 ADRP X0, 0x7BB000
	0x03995254 LDR X0, [X0 + 0xDD8]
	0x03995258 BL 0x1C16CF4
	0x0399525C ADRP X0, 0x75F000
	0x03995260 LDR X0, [X0 + 0xE30]
	0x03995264 BL 0x1C16CF4
	0x03995268 ADRP X0, 0x7BB000
	0x0399526C LDR X0, [X0 + 0xDE0]
	0x03995270 BL 0x1C16CF4
	0x03995274 ADRP X0, 0x7BB000
	0x03995278 LDR X0, [X0 + 0x8C0]
	0x0399527C BL 0x1C16CF4
	0x03995280 ADRP X0, 0x789000
	0x03995284 LDR X0, [X0 + 0x730]
	0x03995288 BL 0x1C16CF4
	0x0399528C MOVZ W8, 0x1
	0x03995290 STRB W8, [X19 + 0xACE]
	0x03995294 MOVI V0.2D, 0x0
	0x03995298 STP X31, X31, [X27 + 0x20]
	0x0399529C STP X31, X31, [X31 + 0xD0]
	0x039952A0 STR X31, [X31 + 0xE0]
	0x039952A4 STP X31, X31, [X31 + 0xB0]
	0x039952A8 STR X31, [X31 + 0xC0]
	0x039952AC STRH W31, [X31 + 0xAC]
	0x039952B0 STRB W31, [X31 + 0xAE]
	0x039952B4 STP X31, X31, [X31 + 0x98]
	0x039952B8 STR X31, [X31 + 0x90]
	0x039952BC STUR W31, [X31 + 0x8B]
	0x039952C0 STR W31, [X31 + 0x88]
	0x039952C4 STP X31, X31, [X27 + 0x90]
	0x039952C8 STR V0, [X27 + 0x1]
	0x039952CC STR V0, [X31 + 0xF]
	0x039952D0 STR W31, [X31 + 0x190]
	0x039952D4 LDRB W8, [X23 + 0x50]
	0x039952D8 CBZ W8, 0x3995310

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X22, 0xA4D000
	012 Move W8, [X22+2757]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x7BC000
	021 Move X0, [X0+3360]
	022 Call 0x1C17CF4
	023 Move X0, 0x78A000
	024 Move X0, [X0+2840]
	025 Call 0x1C17CF4
	026 Move X0, 0x78A000
	027 Move X0, [X0+2856]
	028 Call 0x1C17CF4
	029 Move X0, 0x78A000
	030 Move X0, [X0+2872]
	031 Call 0x1C17CF4
	032 Move X0, 0x78A000
	033 Move X0, [X0+2896]
	034 Call 0x1C17CF4
	035 Move X0, 0x7BC000
	036 Move X0, [X0+3200]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2757], W8
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move W8, [X20+40]
	044 Compare W8, 0
	045 JumpIfEqual {55}
	046 Compare X19, 0
	047 JumpIfEqual {156}
	048 Move X0, [X19+24]
	049 Compare X0, 0
	050 JumpIfEqual {156}
	051 Move X1, X31
	052 Call CommandBuffer.CreateAsyncGraphicsFence, X0
	053 Move [X20+48], X0
	054 Move [X20+56], X1
	055 Move W8, [X20+64]
	056 Compare W8, 0
	057 JumpIfEqual {87}
	058 Compare X19, 0
	059 JumpIfEqual {156}
	060 Move X8, 0x7BC000
	061 Move X8, [X8+3200]
	062 Move X24, 0x7BC000
	063 Move X22, [X19+24]
	064 Add X23, X19, 16
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Move X24, [X24+3360]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W2, 1
	072 Move X0, X23
	073 Move X1, X22
	074 Move X3, X31
	075 Call ScriptableRenderContext.ExecuteCommandBufferAsync, X0, X1, X2
	076 Move X0, [X24]
	077 Move X22, [X19+24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X22
	083 Move X1, X31
	084 Call CommandBufferPool.Release, X0
	085 Move X8, [X21+96]
	086 Move [X19+24], X8
	087 Move X0, [X21+24]
	088 Compare X0, 0
	089 JumpIfEqual {156}
	090 Move X25, 0x78A000
	091 Move X26, 0x78A000
	092 Move X24, 0x78A000
	093 Move X25, [X25+2896]
	094 Move X26, [X26+2856]
	095 Move X24, [X24+2840]
	096 Call RenderGraphObjectPool.ReleaseAllTempAlloc, X0
	097 Move W22, W31
	098 Move X8, [X20+16]
	099 Compare X8, 0
	100 JumpIfEqual {156}
	101 Move W9, [X8+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X8, X8, W22
	104 Move X0, [X8+32]
	105 Compare X0, 0
	106 JumpIfEqual {156}
	107 Move X1, [X25]
	108 Add X8, X31, 8
	109 Call List`1<Int32>.GetEnumerator, X0
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 Move X8, [X31+24]
	112 Move [X31+2], V0
	113 Move [X31+48], X8
	114 Move X1, [X26]
	115 Add X0, X31, 32
	116 Call Enumerator<Int32>.MoveNext, X0
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {128}
	121 Move X0, [X21+16]
	122 Compare X0, 0
	123 JumpIfEqual {133}
	124 Move W3, [X31+48]
	125 Move X1, X19
	126 Move W2, W22
	127 Call RenderGraphResourceRegistry.ReleasePooledResource, X0, X1, X2, X3
	128 Move X1, [X24]
	129 Add X0, X31, 32
	130 Call Enumerator<Int32>.Dispose, X0
	131 Add W22, W22, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Call 0x1C17F20
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Call 0x3EB2AD0
	136 Move X23, [X0]
	137 Call 0x3EB2AE0
	138 Move X1, [X24]
	139 Add X0, X31, 32
	140 Call Enumerator<Int32>.Dispose, X0
	141 Compare X23, 0
	142 JumpIfEqual {131}
	143 Move X0, X23
	144 Call 0x1C17F18
	145 Move X20, [X31+128]
	146 Move X19, [X31+136]
	147 Move X22, [X31+112]
	148 Move X21, [X31+120]
	149 Move X24, [X31+96]
	150 Move X23, [X31+104]
	151 Move X26, [X31+80]
	152 Move X25, [X31+88]
	153 Move X30, [X31+64]
	154 Add X31, X31, 144
	155 Return 
	156 Call 0x1C17F20
	157 Call 0x1C17F28
	158 Move X19, X0
	159 Move X23, X31
	160 Move X19, X0
	161 Move X1, [X24]
	162 Add X0, X31, 32
	163 Call Enumerator<Int32>.Dispose, X0
	164 Compare X23, 0
	165 JumpIfNotEqual {168}
	166 Move X0, X19
	167 Call 0x1D2D690
	168 Move X0, X23
	169 Call 0x1C17F18
	170 Call 0x1991590

Method: System.Void ClearRenderPasses()

Disassembly:
	0x0398F734 ADRP X8, 0x7C1000
	0x0398F738 LDR X8, [X8 + 0xC10]
	0x0398F73C LDR X1, [X8]
	0x0398F740 ADD X8, X31, 0x8
	0x0398F744 BL 0x304A5A4
	0x0398F748 LDUR V0, [X31 + 0x8]
	0x0398F74C LDR X8, [X31 + 0x18]
	0x0398F750 STR V0, [X31 + 0x3]
	0x0398F754 STR X8, [X31 + 0x40]
	0x0398F758 LDR X1, [X27]
	0x0398F75C ADD X0, X31, 0x30
	0x0398F760 BL 0x2BC8CD4
	0x0398F764 TBZ X0, 0x0, 0x398F840
	0x0398F768 LDR X22, [X31 + 0x40]
	0x0398F76C STR X22, [X31 + 0x28]
	0x0398F770 LDR X8, [X19 + 0x78]
	0x0398F774 CBZ X8, 0x398FB50
	0x0398F778 LDR W9, [X8 + 0x18]
	0x0398F77C CMP W24, W9
	0x0398F780 B.CS 0x398FB30
	0x0398F784 LDR X0, [X28]
	0x0398F788 ADD X8, X8, X26, 0x3, LSL
	0x0398F78C LDR X23, [X8 + 0x20]
	0x0398F790 LDR W9, [X0 + 0xE0]
	0x0398F794 CBNZ W9, 0x398F79C
	0x0398F798 BL 0x1C16DFC
	0x0398F79C MOV X0, X22
	0x0398F7A0 BL 0x398FDA8
	0x0398F7A4 MOV W1, W0
	0x0398F7A8 CBZ X23, 0x398FB58
	0x0398F7AC LDR X2, [X29]
	0x0398F7B0 MOV X0, X23
	0x0398F7B4 BL 0x2B42FB4
	0x0398F7B8 MOV X22, X0
	0x0398F7BC LDR X0, [X19 + 0x10]
	0x0398F7C0 CBZ X0, 0x398FB40
	0x0398F7C4 ADD X1, X31, 0x28
	0x0398F7C8 BL 0x398FDFC
	0x0398F7CC MOV W8, W0
	0x0398F7D0 LDR X0, [X22 + 0x8]
	0x0398F7D4 AND W8, W8, 0x1
	0x0398F7D8 STRB W8, [X22 + 0x14]
	0x0398F7DC CBZ X0, 0x398FB48
	0x0398F7E0 LDR W10, [X0 + 0x1C]
	0x0398F7E4 LDR X8, [X0 + 0x10]
	0x0398F7E8 LDR X9, [X25]
	0x0398F7EC ADD W10, W10, 0x1
	0x0398F7F0 STR W10, [X0 + 0x1C]
	0x0398F7F4 CBZ X8, 0x398FB38
	0x0398F7F8 LDRSW X10, [X0 + 0x18]
	0x0398F7FC LDR W11, [X8 + 0x18]
	0x0398F800 CMP W10, W11
	0x0398F804 B.CS 0x398F81C
	0x0398F808 ADD W9, W10, 0x1
	0x0398F80C ADD X8, X8, X10, 0x2, LSL
	0x0398F810 STR W9, [X0 + 0x18]
	0x0398F814 STR W20, [X8 + 0x20]
	0x0398F818 B 0x398F830
	0x0398F81C LDR X8, [X9 + 0x20]
	0x0398F820 LDR X8, [X8 + 0xC0]
	0x0398F824 LDR X2, [X8 + 0x70]
	0x0398F828 MOV W1, W20
	0x0398F82C BL 0x2FDC70C
	0x0398F830 LDR W8, [X22 + 0x10]
	0x0398F834 ADD W8, W8, 0x1
	0x0398F838 STR W8, [X22 + 0x10]
	0x0398F83C B 0x398F758
	0x0398F840 ADRP X8, 0x7C1000
	0x0398F844 LDR X8, [X8 + 0xBF8]
	0x0398F848 ADD X0, X31, 0x30
	0x0398F84C LDR X1, [X8]
	0x0398F850 BL 0x2BC8CD0
	0x0398F854 LDR X8, [X21]
	0x0398F858 CBZ X8, 0x398FCDC
	0x0398F85C LDR X8, [X8 + 0x58]
	0x0398F860 CBZ X8, 0x398FCDC
	0x0398F864 LDR W9, [X8 + 0x18]
	0x0398F868 CMP W24, W9
	0x0398F86C B.CS 0x398FD00
	0x0398F870 ADD X8, X8, X26, 0x3, LSL
	0x0398F874 LDR X0, [X8 + 0x20]
	0x0398F878 CBZ X0, 0x398FCDC
	0x0398F87C ADRP X8, 0x7C1000
	0x0398F880 LDR X8, [X8 + 0xC10]
	0x0398F884 LDR X1, [X8]
	0x0398F888 ADD X8, X31, 0x8
	0x0398F88C BL 0x304A5A4
	0x0398F890 LDUR V0, [X31 + 0x8]
	0x0398F894 LDR X8, [X31 + 0x18]
	0x0398F898 STR V0, [X31 + 0x3]
	0x0398F89C STR X8, [X31 + 0x40]
	0x0398F8A0 LDR X1, [X27]
	0x0398F8A4 ADD X0, X31, 0x30
	0x0398F8A8 BL 0x2BC8CD4
	0x0398F8AC TBZ X0, 0x0, 0x398F990
	0x0398F8B0 LDR X22, [X31 + 0x40]
	0x0398F8B4 STR X22, [X31 + 0x20]
	0x0398F8B8 LDR X8, [X19 + 0x78]
	0x0398F8BC CBZ X8, 0x398FB80

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xA53000
	007 Move W8, [X20+2758]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x7C2000
	014 Move X0, [X0+2960]
	015 Call 0x1C17CF4
	016 Move X0, 0x7C2000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C2000
	020 Move X0, [X0+2976]
	021 Call 0x1C17CF4
	022 Move X0, 0x7C2000
	023 Move X0, [X0+2984]
	024 Call 0x1C17CF4
	025 Move X0, 0x7C2000
	026 Move X0, [X0+2992]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2758], W8
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move X0, [X19+32]
	034 Compare X0, 0
	035 JumpIfEqual {83}
	036 Move X8, 0x7C2000
	037 Move X8, [X8+2992]
	038 Move X21, 0x7C2000
	039 Move X20, 0x7C2000
	040 Move X1, [X8]
	041 Move X21, [X21+2968]
	042 Move X20, [X20+2960]
	043 Add X8, X31, 8
	044 Call List`1<Object>.GetEnumerator, X0
	045 Move X1, [X21]
	046 Add X0, X31, 8
	047 Call Enumerator<Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {60}
	052 Move X0, [X31+24]
	053 Compare X0, 0
	054 JumpIfEqual {82}
	055 Move X8, [X0]
	056 Move X1, [X19+24]
	057 Move X9, [X8+392]
	058 Move X2, [X8+400]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X1, [X20]
	061 Add X0, X31, 8
	062 Call Enumerator<Object>.Dispose, X0
	063 Move X8, [X19+32]
	064 Compare X8, 0
	065 JumpIfEqual {83}
	066 Move W2, [X8+24]
	067 Move W9, [X8+28]
	068 Add W9, W9, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X8+24], W31
	071 Move [X8+28], W9
	072 Move X0, [X8+16]
	073 Move W1, W31
	074 Move X3, X31
	075 Call Array.Clear, X0, X1, X2
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Add X31, X31, 64
	081 Return 
	082 Call 0x1C17F20
	083 Call 0x1C17F20
	084 Move X20, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X20
	087 Call 0x3EB2AD0
	088 Move X21, [X0]
	089 Call 0x3EB2AE0
	090 Move X8, 0x7C2000
	091 Move X8, [X8+2960]
	092 Add X0, X31, 8
	093 Move X1, [X8]
	094 Call Enumerator<Object>.Dispose, X0
	095 Compare X21, 0
	096 JumpIfEqual {63}
	097 Move X0, X21
	098 Call 0x1C17F18
	099 Move X21, X31
	100 Move X20, X0
	101 Move X8, 0x7C2000
	102 Move X8, [X8+2960]
	103 Move X1, [X8]
	104 Add X0, X31, 8
	105 Call Enumerator<Object>.Dispose, X0
	106 Compare X21, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X20
	109 Call 0x1D2D690
	110 Move X0, X21
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void ReleaseImmediateModeResources()

Disassembly:
	0x03995CC0 BL 0x1C16F20
	0x03995CC4 B 0x399602C
	0x03995CC8 BL 0x1C16F20
	0x03995CCC B 0x399602C
	0x03995CD0 BL 0x1C16F28
	0x03995CD4 B 0x399602C
	0x03995CD8 BL 0x1C16F20
	0x03995CDC B 0x399602C
	0x03995CE0 BL 0x1C16F20
	0x03995CE4 B 0x399602C
	0x03995CE8 BL 0x1C16F28
	0x03995CEC B 0x399602C
	0x03995CF0 BL 0x1C16F20
	0x03995CF4 B 0x399602C
	0x03995CF8 BL 0x1C16F20
	0x03995CFC B 0x399602C
	0x03995D00 BL 0x1C16F20
	0x03995D04 B 0x399602C
	0x03995D08 BL 0x1C16F28
	0x03995D0C B 0x399602C
	0x03995D10 BL 0x1C16F20
	0x03995D14 B 0x399602C
	0x03995D18 BL 0x1C16F20
	0x03995D1C B 0x399602C
	0x03995D20 BL 0x1C16F20
	0x03995D24 B 0x399602C
	0x03995D28 BL 0x1C16F28
	0x03995D2C B 0x399602C
	0x03995D30 BL 0x1C16F20
	0x03995D34 B 0x399602C
	0x03995D38 BL 0x1C16F20
	0x03995D3C B 0x399602C
	0x03995D40 BL 0x1C16F28
	0x03995D44 B 0x399602C
	0x03995D48 BL 0x1C16F20
	0x03995D4C B 0x399602C
	0x03995D50 BL 0x1C16F20
	0x03995D54 B 0x399602C
	0x03995D58 BL 0x1C16F20
	0x03995D5C B 0x399602C
	0x03995D60 BL 0x1C16F28
	0x03995D64 B 0x399602C
	0x03995D68 BL 0x1C16F20
	0x03995D6C B 0x399602C
	0x03995D70 B 0x3995E40
	0x03995D74 B 0x3995E70
	0x03995D78 B 0x3995DD0
	0x03995D7C B 0x3995DD0
	0x03995D80 B 0x3995DD0
	0x03995D84 B 0x3995DD0
	0x03995D88 B 0x3995DD0
	0x03995D8C B 0x3995E00
	0x03995D90 B 0x3995E00
	0x03995D94 B 0x3995E00
	0x03995D98 B 0x3995E00
	0x03995D9C B 0x3995E00
	0x03995DA0 B 0x3995DD0
	0x03995DA4 B 0x3995DD0
	0x03995DA8 B 0x3995DD0
	0x03995DAC B 0x3995DD0
	0x03995DB0 B 0x3995DD0
	0x03995DB4 B 0x3995E00
	0x03995DB8 B 0x3995E00
	0x03995DBC B 0x3995E00
	0x03995DC0 B 0x3995E00
	0x03995DC4 B 0x3995E00
	0x03995DC8 B 0x3995E40
	0x03995DCC B 0x3995E70
	0x03995DD0 CMP W1, 0x1
	0x03995DD4 B.NE 0x3996008
	0x03995DD8 BL 0x3EB1AD0
	0x03995DDC LDR X24, [X0]
	0x03995DE0 BL 0x3EB1AE0
	0x03995DE4 ADRP X8, 0x789000
	0x03995DE8 LDR X8, [X8 + 0xB18]
	0x03995DEC ADD X0, X31, 0xB0
	0x03995DF0 LDR X1, [X8]
	0x03995DF4 BL 0x2BBDD9C
	0x03995DF8 CBZ X24, 0x3995CB0
	0x03995DFC B 0x3995FF4
	0x03995E00 CMP W1, 0x1
	0x03995E04 B.NE 0x3995FFC
	0x03995E08 BL 0x3EB1AD0
	0x03995E0C LDR X24, [X0]
	0x03995E10 BL 0x3EB1AE0
	0x03995E14 ADRP X8, 0x789000
	0x03995E18 LDR X8, [X8 + 0xB18]
	0x03995E1C ADD X0, X31, 0xB0
	0x03995E20 LDR X1, [X8]
	0x03995E24 BL 0x2BBDD9C
	0x03995E28 CBZ X24, 0x3995B30
	0x03995E2C B 0x3995FF4
	0x03995E30 B 0x3995E40
	0x03995E34 B 0x3995E70
	0x03995E38 B 0x3995E40
	0x03995E3C B 0x3995E70
	0x03995E40 CMP W1, 0x1
	0x03995E44 B.NE 0x3996020
	0x03995E48 BL 0x3EB1AD0
	0x03995E4C LDR X24, [X0]
	0x03995E50 BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0xA4D000
	010 Move W8, [X20+2759]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x78A000
	017 Move X0, [X0+2840]
	018 Call 0x1C17CF4
	019 Move X0, 0x78A000
	020 Move X0, [X0+2856]
	021 Call 0x1C17CF4
	022 Move X0, 0x78A000
	023 Move X0, [X0+2872]
	024 Call 0x1C17CF4
	025 Move X0, 0x78A000
	026 Move X0, [X0+2896]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2759], W8
	030 Move X23, 0x78A000
	031 Move X24, 0x78A000
	032 Move X22, 0x78A000
	033 Move X23, [X23+2896]
	034 Move X24, [X24+2856]
	035 Move X22, [X22+2840]
	036 Move W20, W31
	037 Move [X31+32], X31
	038 Move [X31+40], X31
	039 Move [X31+48], X31
	040 Move X8, [X19+112]
	041 Compare X8, 0
	042 JumpIfEqual {96}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X8, W20
	046 Move X0, [X8+32]
	047 Compare X0, 0
	048 JumpIfEqual {96}
	049 Move X1, [X23]
	050 Add X8, X31, 8
	051 Call List`1<Int32>.GetEnumerator, X0
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+24]
	054 Move [X31+2], V0
	055 Move [X31+48], X8
	056 Move X1, [X24]
	057 Add X0, X31, 32
	058 Call Enumerator<Int32>.MoveNext, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {70}
	063 Move X0, [X19+16]
	064 Compare X0, 0
	065 JumpIfEqual {75}
	066 Move X1, [X19+88]
	067 Move W3, [X31+48]
	068 Move W2, W20
	069 Call RenderGraphResourceRegistry.ReleasePooledResource, X0, X1, X2, X3
	070 Move X1, [X22]
	071 Add X0, X31, 32
	072 Call Enumerator<Int32>.Dispose, X0
	073 Add W20, W20, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Call 0x1C17F20
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Call 0x3EB2AD0
	078 Move X21, [X0]
	079 Call 0x3EB2AE0
	080 Move X1, [X22]
	081 Add X0, X31, 32
	082 Call Enumerator<Int32>.Dispose, X0
	083 Compare X21, 0
	084 JumpIfEqual {73}
	085 Move X0, X21
	086 Call 0x1C17F18
	087 Move X20, [X31+112]
	088 Move X19, [X31+120]
	089 Move X22, [X31+96]
	090 Move X21, [X31+104]
	091 Move X24, [X31+80]
	092 Move X23, [X31+88]
	093 Move X30, [X31+64]
	094 Add X31, X31, 128
	095 Return 
	096 Call 0x1C17F20
	097 Call 0x1C17F28
	098 Move X19, X0
	099 Move X21, X31
	100 Move X19, X0
	101 Move X1, [X22]
	102 Add X0, X31, 32
	103 Call Enumerator<Int32>.Dispose, X0
	104 Compare X21, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X19
	107 Call 0x1D2D690
	108 Move X0, X21
	109 Call 0x1C17F18
	110 Call 0x1991590

Method: System.Void LogFrameInformation()

Disassembly:
	0x0398ED5C ADD X0, X8, 0x20
	0x0398ED60 BL 0x1C24138
	0x0398ED64 CMP X20, X0
	0x0398ED68 MOV X20, X0
	0x0398ED6C B.NE 0x398ED14
	0x0398ED70 LDP X20, X19, [X31 + 0x20]
	0x0398ED74 LDP X22, X21, [X31 + 0x10]
	0x0398ED78 LDP X30, X23, [X31], #0x30
	0x0398ED7C RET
	0x0398ED80 MOV X0, X21
	0x0398ED84 BL 0x1C171E0
	0x0398ED88 STP X30, X23, [X31 - 0x30]!
	0x0398ED8C STP X22, X21, [X31 + 0x10]
	0x0398ED90 STP X20, X19, [X31 + 0x20]
	0x0398ED94 ADRP X20, 0xA53000
	0x0398ED98 ADRP X22, 0x7C2000
	0x0398ED9C LDRB W8, [X20 + 0xAAA]
	0x0398EDA0 LDR X22, [X22 + 0x8C0]
	0x0398EDA4 MOV X19, X0
	0x0398EDA8 TBNZ X8, 0x0, 0x398EDCC
	0x0398EDAC ADRP X0, 0x7C2000
	0x0398EDB0 LDR X0, [X0 + 0xBD0]
	0x0398EDB4 BL 0x1C16CF4
	0x0398EDB8 ADRP X0, 0x7C2000
	0x0398EDBC LDR X0, [X0 + 0x8C0]
	0x0398EDC0 BL 0x1C16CF4
	0x0398EDC4 MOVZ W8, 0x1
	0x0398EDC8 STRB W8, [X20 + 0xAAA]
	0x0398EDCC LDR X0, [X22]
	0x0398EDD0 LDR W8, [X0 + 0xE0]
	0x0398EDD4 CBNZ W8, 0x398EDE0
	0x0398EDD8 BL 0x1C16DFC
	0x0398EDDC LDR X0, [X22]
	0x0398EDE0 LDR X8, [X0 + 0xB8]
	0x0398EDE4 ADRP X23, 0x7C2000
	0x0398EDE8 LDR X20, [X8 + 0x28]
	0x0398EDEC LDR X23, [X23 + 0xBD0]
	0x0398EDF0 MOV X0, X20
	0x0398EDF4 MOV X1, X19
	0x0398EDF8 MOV X2, X31
	0x0398EDFC BL 0x33C0DE4
	0x0398EE00 MOV X21, X0
	0x0398EE04 CBZ X0, 0x398EE18
	0x0398EE08 LDR X1, [X23]
	0x0398EE0C LDR X8, [X21]
	0x0398EE10 CMP X8, X1
	0x0398EE14 B.NE 0x398EE5C
	0x0398EE18 LDR X0, [X22]
	0x0398EE1C LDR W8, [X0 + 0xE0]
	0x0398EE20 CBNZ W8, 0x398EE2C
	0x0398EE24 BL 0x1C16DFC
	0x0398EE28 LDR X0, [X22]
	0x0398EE2C LDR X8, [X0 + 0xB8]
	0x0398EE30 MOV X1, X21
	0x0398EE34 MOV X2, X20
	0x0398EE38 ADD X0, X8, 0x28
	0x0398EE3C BL 0x1C24138
	0x0398EE40 CMP X20, X0
	0x0398EE44 MOV X20, X0
	0x0398EE48 B.NE 0x398EDF0
	0x0398EE4C LDP X20, X19, [X31 + 0x20]
	0x0398EE50 LDP X22, X21, [X31 + 0x10]
	0x0398EE54 LDP X30, X23, [X31], #0x30
	0x0398EE58 RET
	0x0398EE5C MOV X0, X21
	0x0398EE60 BL 0x1C171E0
	0x0398EE64 STP X30, X23, [X31 - 0x30]!
	0x0398EE68 STP X22, X21, [X31 + 0x10]
	0x0398EE6C STP X20, X19, [X31 + 0x20]
	0x0398EE70 ADRP X20, 0xA53000
	0x0398EE74 ADRP X22, 0x7C2000
	0x0398EE78 LDRB W8, [X20 + 0xAAB]
	0x0398EE7C LDR X22, [X22 + 0x8C0]
	0x0398EE80 MOV X19, X0
	0x0398EE84 TBNZ X8, 0x0, 0x398EEA8
	0x0398EE88 ADRP X0, 0x7C2000
	0x0398EE8C LDR X0, [X0 + 0xBD0]
	0x0398EE90 BL 0x1C16CF4
	0x0398EE94 ADRP X0, 0x7C2000
	0x0398EE98 LDR X0, [X0 + 0x8C0]
	0x0398EE9C BL 0x1C16CF4
	0x0398EEA0 MOVZ W8, 0x1
	0x0398EEA4 STRB W8, [X20 + 0xAAB]
	0x0398EEA8 LDR X0, [X22]
	0x0398EEAC LDR W8, [X0 + 0xE0]
	0x0398EEB0 CBNZ W8, 0x398EEBC
	0x0398EEB4 BL 0x1C16DFC
	0x0398EEB8 LDR X0, [X22]
	0x0398EEBC LDR X8, [X0 + 0xB8]
	0x0398EEC0 ADRP X23, 0x7C2000
	0x0398EEC4 LDR X20, [X8 + 0x28]
	0x0398EEC8 LDR X23, [X23 + 0xBD0]
	0x0398EECC MOV X0, X20
	0x0398EED0 MOV X1, X19
	0x0398EED4 MOV X2, X31
	0x0398EED8 BL 0x33C0FDC
	0x0398EEDC MOV X21, X0
	0x0398EEE0 CBZ X0, 0x398EEF4
	0x0398EEE4 LDR X1, [X23]
	0x0398EEE8 LDR X8, [X21]
	0x0398EEEC CMP X8, X1
	0x0398EEF0 B.NE 0x398EF38
	0x0398EEF4 LDR X0, [X22]
	0x0398EEF8 LDR W8, [X0 + 0xE0]
	0x0398EEFC CBNZ W8, 0x398EF08
	0x0398EF00 BL 0x1C16DFC
	0x0398EF04 LDR X0, [X22]
	0x0398EF08 LDR X8, [X0 + 0xB8]
	0x0398EF0C MOV X1, X21
	0x0398EF10 MOV X2, X20
	0x0398EF14 ADD X0, X8, 0x28
	0x0398EF18 BL 0x1C24138
	0x0398EF1C CMP X20, X0
	0x0398EF20 MOV X20, X0
	0x0398EF24 B.NE 0x398EECC
	0x0398EF28 LDP X20, X19, [X31 + 0x20]
	0x0398EF2C LDP X22, X21, [X31 + 0x10]
	0x0398EF30 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA54000
	007 Move W8, [X20+2760]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x766000
	014 Move X0, [X0+2504]
	015 Call 0x1C17CF4
	016 Move X0, 0x766000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0x78F000
	020 Move X0, [X0+1120]
	021 Call 0x1C17CF4
	022 Move X0, 0x766000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0x7C3000
	026 Move X0, [X0+2824]
	027 Call 0x1C17CF4
	028 Move X0, 0x7C3000
	029 Move X0, [X0+2832]
	030 Call 0x1C17CF4
	031 Move X0, 0x7C3000
	032 Move X0, [X0+2840]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2760], W8
	036 Move X8, [X19+48]
	037 Compare X8, 0
	038 JumpIfEqual {140}
	039 Move W8, [X8+36]
	040 Compare W8, 0
	041 JumpIfEqual {134}
	042 Move X8, 0x7C3000
	043 Move X9, 0x7C3000
	044 Move X8, [X8+2824]
	045 Move X9, [X9+2840]
	046 Move X1, [X19+160]
	047 Move X21, 0x766000
	048 Move X0, [X8]
	049 Move X2, [X9]
	050 Move X20, [X19+56]
	051 Move X21, [X21+2504]
	052 Move X3, X31
	053 Call String.Concat, X0, X1, X2
	054 Move X22, [X21]
	055 Move X21, X0
	056 Move X8, [X22+56]
	057 Compare X8, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X22
	060 Call 0x1C5D6E0
	061 Move X8, [X22+56]
	062 Move X0, [X8+16]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X8, [X22+56]
	074 Move X0, [X8+16]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Compare X20, 0
	082 JumpIfEqual {140}
	083 Move X8, [X0+184]
	084 Move X0, X20
	085 Move X1, X21
	086 Move X2, [X8]
	087 Call RenderGraphLogger.LogLine, X0, X1, X2
	088 Move X8, [X19+48]
	089 Compare X8, 0
	090 JumpIfEqual {140}
	091 Move W8, [X8+35]
	092 Compare W8, 0
	093 JumpIfNotEqual {134}
	094 Move X8, 0x766000
	095 Move X20, [X19+56]
	096 Move X8, [X8+2512]
	097 Move W1, 1
	098 Move X0, [X8]
	099 Call 0x1C17D6C
	100 Move X8, [X19+32]
	101 Compare X8, 0
	102 JumpIfEqual {140}
	103 Move X9, 0x766000
	104 Move W8, [X8+24]
	105 Move X9, [X9+1880]
	106 Move X19, X0
	107 Add X1, X31, 12
	108 Move [X31+12], W8
	109 Move X0, [X9]
	110 Call 0x1C17E04
	111 Compare X19, 0
	112 JumpIfEqual {140}
	113 Move X21, X0
	114 Compare X0, 0
	115 JumpIfEqual {122}
	116 Move X8, [X19]
	117 Move X0, X21
	118 Move X1, [X8+64]
	119 Call 0x1C17E00
	120 Compare X0, 0
	121 JumpIfEqual {142}
	122 Move W8, [X19+24]
	123 Compare W8, 0
	124 JumpIfEqual {141}
	125 Move [X19+32], X21
	126 Compare X20, 0
	127 JumpIfEqual {140}
	128 Move X8, 0x7C3000
	129 Move X8, [X8+2832]
	130 Move X0, X20
	131 Move X2, X19
	132 Move X1, [X8]
	133 Call RenderGraphLogger.LogLine, X0, X1, X2
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move X30, [X31+48]
	139 Return 
	140 Call 0x1C17F20
	141 Call 0x1C17F28
	142 Call 0x1C17F44
	143 Move X1, X31
	144 Call 0x1C17DEC

Method: System.Void LogRendererListsCreation()

Disassembly:
	0x03993BC0 ADRP X10, 0x7BD000
	0x03993BC4 ADRP X11, 0x7BD000
	0x03993BC8 ADRP X12, 0x7BD000
	0x03993BCC LDR X10, [X10 + 0xD18]
	0x03993BD0 LDR X11, [X11 + 0xD10]
	0x03993BD4 LDR X12, [X12 + 0xD00]
	0x03993BD8 CMP W9, 0x0
	0x03993BDC LDR X23, [X10]
	0x03993BE0 CSEL X9, X11, X12, EQ
	0x03993BE4 LDR X24, [X9]
	0x03993BE8 CBZ X24, 0x3993C04
	0x03993BEC LDR X8, [X22]
	0x03993BF0 MOV X0, X24
	0x03993BF4 LDR X1, [X8 + 0x40]
	0x03993BF8 BL 0x1C16E00
	0x03993BFC CBZ X0, 0x3993D10
	0x03993C00 LDR W8, [X22 + 0x18]
	0x03993C04 CMP W8, 0x1
	0x03993C08 B.LS 0x3993D0C
	0x03993C0C STR X24, [X22 + 0x28]
	0x03993C10 LDR X24, [X27 + 0x10]
	0x03993C14 CBZ X24, 0x3993C30
	0x03993C18 LDR X8, [X22]
	0x03993C1C MOV X0, X24
	0x03993C20 LDR X1, [X8 + 0x40]
	0x03993C24 BL 0x1C16E00
	0x03993C28 CBZ X0, 0x3993D10
	0x03993C2C LDR W8, [X22 + 0x18]
	0x03993C30 CMP W8, 0x2
	0x03993C34 B.LS 0x3993D0C
	0x03993C38 STR X24, [X22 + 0x30]
	0x03993C3C CBZ X20, 0x3993D08
	0x03993C40 MOV X0, X20
	0x03993C44 MOV X1, X23
	0x03993C48 MOV X2, X22
	0x03993C4C BL 0x39904A0
	0x03993C50 LDR X20, [X21 + 0x38]
	0x03993C54 CBZ X20, 0x3993D08
	0x03993C58 MOVZ W1, 0x1
	0x03993C5C MOV X0, X20
	0x03993C60 BL 0x399740C
	0x03993C64 LDR W8, [X19 + 0x20]
	0x03993C68 ADDS W31, W8, 0x1
	0x03993C6C B.EQ 0x3993CE0
	0x03993C70 LDR X21, [X21 + 0x38]
	0x03993C74 LDR X0, [X25]
	0x03993C78 MOVZ W1, 0x1
	0x03993C7C BL 0x1C16D6C
	0x03993C80 MOV X22, X0
	0x03993C84 LDR W8, [X19 + 0x20]
	0x03993C88 LDR X0, [X26]
	0x03993C8C STR W8, [X31 + 0x8]
	0x03993C90 ADD X1, X31, 0x8
	0x03993C94 BL 0x1C16E04
	0x03993C98 CBZ X22, 0x3993D1C
	0x03993C9C MOV X19, X0
	0x03993CA0 CBZ X0, 0x3993CB8
	0x03993CA4 LDR X8, [X22]
	0x03993CA8 LDR X1, [X8 + 0x40]
	0x03993CAC MOV X0, X19
	0x03993CB0 BL 0x1C16E00
	0x03993CB4 CBZ X0, 0x3993D28
	0x03993CB8 LDR W8, [X22 + 0x18]
	0x03993CBC CBZ W8, 0x3993D20
	0x03993CC0 STR X19, [X22 + 0x20]
	0x03993CC4 CBZ X21, 0x3993D24
	0x03993CC8 ADRP X8, 0x7BD000
	0x03993CCC LDR X8, [X8 + 0xD08]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA4F000
	007 Move W8, [X19+2761]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x761000
	014 Move X0, [X0+1880]
	015 Call 0x1C17CF4
	016 Move X0, 0x7BE000
	017 Move X0, [X0+3264]
	018 Call 0x1C17CF4
	019 Move X0, 0x761000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0x7BE000
	023 Move X0, [X0+3280]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+2761], W8
	027 Move X8, [X20+48]
	028 Compare X8, 0
	029 JumpIfEqual {79}
	030 Move W8, [X8+36]
	031 Compare W8, 0
	032 JumpIfEqual {73}
	033 Move X8, 0x761000
	034 Move X8, [X8+2512]
	035 Move X19, [X20+56]
	036 Move W1, 1
	037 Move X0, [X8]
	038 Call 0x1C17D6C
	039 Move X8, [X20+40]
	040 Compare X8, 0
	041 JumpIfEqual {79}
	042 Move X9, 0x761000
	043 Move X9, [X9+1880]
	044 Move X20, X0
	045 Move W8, [X8+24]
	046 Add X1, X31, 12
	047 Move X0, [X9]
	048 Move [X31+12], W8
	049 Call 0x1C17E04
	050 Compare X20, 0
	051 JumpIfEqual {79}
	052 Move X21, X0
	053 Compare X0, 0
	054 JumpIfEqual {61}
	055 Move X8, [X20]
	056 Move X0, X21
	057 Move X1, [X8+64]
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {81}
	061 Move W8, [X20+24]
	062 Compare W8, 0
	063 JumpIfEqual {80}
	064 Move [X20+32], X21
	065 Compare X19, 0
	066 JumpIfEqual {79}
	067 Move X8, 0x7BE000
	068 Move X8, [X8+3280]
	069 Move X0, X19
	070 Move X2, X20
	071 Move X1, [X8]
	072 Call RenderGraphLogger.LogLine, X0, X1, X2
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Move X21, [X31+24]
	077 Add X31, X31, 48
	078 Return 
	079 Call 0x1C17F20
	080 Call 0x1C17F28
	081 Call 0x1C17F44
	082 Move X1, X31
	083 Call 0x1C17DEC

Method: System.Void LogRenderPassBegin(in UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph/CompiledPassInfo passInfo)

Disassembly:
	0x03994AC4 B.NE 0x3994AF0
	0x03994AC8 BL 0x3EB1AD0
	0x03994ACC LDR X8, [X0]
	0x03994AD0 STR X8, [X31]
	0x03994AD4 BL 0x3EB1AE0
	0x03994AD8 LDR X1, [X27]
	0x03994ADC ADD X0, X31, 0x50
	0x03994AE0 BL 0x2BB3A00
	0x03994AE4 LDR X0, [X31]
	0x03994AE8 CBZ X0, 0x39949B0
	0x03994AEC B 0x3994B50
	0x03994AF0 MOV X19, X0
	0x03994AF4 STR X31, [X31]
	0x03994AF8 B 0x3994B00
	0x03994AFC MOV X19, X0
	0x03994B00 LDR X1, [X27]
	0x03994B04 ADD X0, X31, 0x50
	0x03994B08 BL 0x2BB3A00
	0x03994B0C LDR X8, [X31]
	0x03994B10 CBZ X8, 0x3994B80
	0x03994B14 LDR X0, [X31]
	0x03994B18 BL 0x1C16F18
	0x03994B1C CMP W1, 0x1
	0x03994B20 B.NE 0x3994B54
	0x03994B24 BL 0x3EB1AD0
	0x03994B28 LDR X8, [X0]
	0x03994B2C STR X8, [X31]
	0x03994B30 BL 0x3EB1AE0
	0x03994B34 ADRP X8, 0x7BC000
	0x03994B38 LDR X8, [X8 + 0xD50]
	0x03994B3C ADD X0, X31, 0x30
	0x03994B40 LDR X1, [X8]
	0x03994B44 BL 0x2BC434C
	0x03994B48 LDR X0, [X31]
	0x03994B4C CBZ X0, 0x3994A44
	0x03994B50 BL 0x1C16F18
	0x03994B54 MOV X19, X0
	0x03994B58 STR X31, [X31]
	0x03994B5C B 0x3994B64
	0x03994B60 MOV X19, X0
	0x03994B64 ADRP X8, 0x7BC000
	0x03994B68 LDR X8, [X8 + 0xD50]
	0x03994B6C LDR X1, [X8]
	0x03994B70 ADD X0, X31, 0x30
	0x03994B74 BL 0x2BC434C
	0x03994B78 LDR X8, [X31]
	0x03994B7C CBNZ X8, 0x3994B88
	0x03994B80 MOV X0, X19
	0x03994B84 BL 0x1D2C690
	0x03994B88 LDR X0, [X31]
	0x03994B8C BL 0x1C16F18
	0x03994B90 BL 0x1990590
	0x03994B94 STP X30, X23, [X31 - 0x30]!
	0x03994B98 STP X22, X21, [X31 + 0x10]
	0x03994B9C STP X20, X19, [X31 + 0x20]
	0x03994BA0 ADRP X23, 0xA4D000
	0x03994BA4 LDRB W8, [X23 + 0xB1E]
	0x03994BA8 MOV W21, W3
	0x03994BAC MOV W22, W2
	0x03994BB0 MOV X20, X1
	0x03994BB4 MOV X19, X0
	0x03994BB8 TBNZ X8, 0x0, 0x3994BD0
	0x03994BBC ADRP X0, 0x788000
	0x03994BC0 LDR X0, [X0 + 0xA80]
	0x03994BC4 BL 0x1C16CF4
	0x03994BC8 MOVZ W8, 0x1
	0x03994BCC STRB W8, [X23 + 0xB1E]
	0x03994BD0 LDR X8, [X19 + 0x10]
	0x03994BD4 CBZ X8, 0x3994CB8
	0x03994BD8 LDR W9, [X8 + 0x18]
	0x03994BDC CMP W9, W22
	0x03994BE0 B.LS 0x3994CBC
	0x03994BE4 SXTW X23, W22
	0x03994BE8 ADD X8, X8, X23, 0x3, LSL
	0x03994BEC LDR X8, [X8 + 0x20]
	0x03994BF0 CBZ X8, 0x3994CB8
	0x03994BF4 LDR X0, [X8 + 0x10]
	0x03994BF8 CBZ X0, 0x3994CB8
	0x03994BFC ADRP X8, 0x788000
	0x03994C00 LDR X8, [X8 + 0xA80]
	0x03994C04 MOV W1, W21
	0x03994C08 LDR X2, [X8]
	0x03994C0C BL 0x2B40178
	0x03994C10 LDR X21, [X0]
	0x03994C14 CBZ X21, 0x3994CB8
	0x03994C18 LDRB W8, [X21 + 0x10]
	0x03994C1C CBZ W8, 0x3994C30
	0x03994C20 LDP X20, X19, [X31 + 0x20]
	0x03994C24 LDP X22, X21, [X31 + 0x10]
	0x03994C28 LDP X30, X23, [X31], #0x30
	0x03994C2C RET
	0x03994C30 LDR X8, [X19 + 0x10]
	0x03994C34 CBZ X8, 0x3994CB8
	0x03994C38 LDR W9, [X8 + 0x18]
	0x03994C3C CMP W9, W22
	0x03994C40 B.LS 0x3994CBC
	0x03994C44 ADD X8, X8, X23, 0x3, LSL
	0x03994C48 LDR X8, [X8 + 0x20]
	0x03994C4C CBZ X8, 0x3994CB8
	0x03994C50 LDR X8, [X8 + 0x30]
	0x03994C54 CBZ X8, 0x3994C70
	0x03994C58 LDR X9, [X8 + 0x18]
	0x03994C5C LDR X0, [X8 + 0x40]
	0x03994C60 LDR X3, [X8 + 0x28]
	0x03994C64 MOV X1, X20
	0x03994C68 MOV X2, X21
	0x03994C6C BLR X9
	0x03994C70 LDR X8, [X19 + 0x20]
	0x03994C74 CBZ X8, 0x3994CB8
	0x03994C78 LDRB W8, [X8 + 0x24]
	0x03994C7C CBZ W8, 0x3994C98
	0x03994C80 LDR X8, [X21]
	0x03994C84 LDR X1, [X19 + 0x30]
	0x03994C88 MOV X0, X21
	0x03994C8C LDR X9, [X8 + 0x218]
	0x03994C90 LDR X2, [X8 + 0x220]
	0x03994C94 BLR X9
	0x03994C98 LDR X8, [X21]
	0x03994C9C LDR W1, [X19 + 0x38]
	0x03994CA0 MOV X0, X21
	0x03994CA4 LDP X20, X19, [X31 + 0x20]
	0x03994CA8 LDP X3, X2, [X8 + 0x1E8]
	0x03994CAC LDP X22, X21, [X31 + 0x10]
	0x03994CB0 LDP X30, X23, [X31], #0x30
	0x03994CB4 BR X3
	0x03994CB8 BL 0x1C16F20
	0x03994CBC BL 0x1C16F28
	0x03994CC0 SUB X31, X31, 0x80
	0x03994CC4 STR X30, [X31 + 0x40]
	0x03994CC8 STP X24, X23, [X31 + 0x50]
	0x03994CCC STP X22, X21, [X31 + 0x60]
	0x03994CD0 STP X20, X19, [X31 + 0x70]
	0x03994CD4 ADRP X20, 0xA4D000
	0x03994CD8 LDRB W8, [X20 + 0xAC7]
	0x03994CDC MOV X19, X0
	0x03994CE0 TBNZ X8, 0x0, 0x3994D1C
	0x03994CE4 ADRP X0, 0x78A000
	0x03994CE8 LDR X0, [X0 + 0xB18]
	0x03994CEC BL 0x1C16CF4
	0x03994CF0 ADRP X0, 0x78A000
	0x03994CF4 LDR X0, [X0 + 0xB28]
	0x03994CF8 BL 0x1C16CF4
	0x03994CFC ADRP X0, 0x78A000
	0x03994D00 LDR X0, [X0 + 0xB38]
	0x03994D04 BL 0x1C16CF4
	0x03994D08 ADRP X0, 0x78A000
	0x03994D0C LDR X0, [X0 + 0xB50]
	0x03994D10 BL 0x1C16CF4
	0x03994D14 MOVZ W8, 0x1
	0x03994D18 STRB W8, [X20 + 0xAC7]
	0x03994D1C ADRP X23, 0x78A000
	0x03994D20 ADRP X24, 0x78A000
	0x03994D24 ADRP X22, 0x78A000
	0x03994D28 LDR X23, [X23 + 0xB50]
	0x03994D2C LDR X24, [X24 + 0xB28]
	0x03994D30 LDR X22, [X22 + 0xB18]
	0x03994D34 MOV W20, W31
	0x03994D38 STP X31, X31, [X31 + 0x20]
	0x03994D3C STR X31, [X31 + 0x30]
	0x03994D40 LDR X8, [X19 + 0x70]
	0x03994D44 CBZ X8, 0x3994E18
	0x03994D48 LDR W9, [X8 + 0x18]
	0x03994D4C CMP W20, W9
	0x03994D50 B.CS 0x3994E1C
	0x03994D54 ADD X8, X8, W20, 0x3, SXTW
	0x03994D58 LDR X0, [X8 + 0x20]
	0x03994D5C CBZ X0, 0x3994E18
	0x03994D60 LDR X1, [X23]
	0x03994D64 ADD X8, X31, 0x8
	0x03994D68 BL 0x2FDD2BC
	0x03994D6C LDUR V0, [X31 + 0x8]
	0x03994D70 LDR X8, [X31 + 0x18]
	0x03994D74 STR V0, [X31 + 0x2]
	0x03994D78 STR X8, [X31 + 0x30]
	0x03994D7C LDR X1, [X24]
	0x03994D80 ADD X0, X31, 0x20
	0x03994D84 BL 0x2BBDDA0
	0x03994D88 TBZ X0, 0x0, 0x3994DA8
	0x03994D8C LDR X0, [X19 + 0x10]
	0x03994D90 CBZ X0, 0x3994DC4
	0x03994D94 LDR X1, [X19 + 0x58]
	0x03994D98 LDR W3, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0xA4E000
	013 Move W8, [X20+2762]
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x760000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0x760000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x7BD000
	027 Move X0, [X0+3328]
	028 Call 0x1C17CF4
	029 Move X0, 0x7BD000
	030 Move X0, [X0+3336]
	031 Call 0x1C17CF4
	032 Move X0, 0x7BD000
	033 Move X0, [X0+3344]
	034 Call 0x1C17CF4
	035 Move X0, 0x7BD000
	036 Move X0, [X0+3352]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+2762], W8
	040 Move X8, [X21+48]
	041 Compare X8, 0
	042 JumpIfEqual {174}
	043 Move W8, [X8+36]
	044 Compare W8, 0
	045 JumpIfEqual {162}
	046 Move X25, 0x760000
	047 Move X25, [X25+2512]
	048 Move X27, [X19]
	049 Move X20, [X21+56]
	050 Move W1, 3
	051 Move X0, [X25]
	052 Call 0x1C17D6C
	053 Compare X27, 0
	054 JumpIfEqual {174}
	055 Move X26, 0x760000
	056 Move X26, [X26+1880]
	057 Move X22, X0
	058 Move W8, [X27+24]
	059 Add X1, X31, 12
	060 Move X0, [X26]
	061 Move [X31+12], W8
	062 Call 0x1C17E04
	063 Compare X22, 0
	064 JumpIfEqual {174}
	065 Move X23, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X22]
	069 Move X0, X23
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {176}
	074 Move W8, [X22+24]
	075 Compare W8, 0
	076 JumpIfEqual {175}
	077 Move [X22+32], X23
	078 Move W9, [X27+40]
	079 Move X10, 0x7BD000
	080 Move X11, 0x7BD000
	081 Move X12, 0x7BD000
	082 Move X10, [X10+3352]
	083 Move X11, [X11+3344]
	084 Move X12, [X12+3328]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X23, [X10]
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Move X24, [X9]
	089 Compare X24, 0
	090 JumpIfEqual {98}
	091 Move X8, [X22]
	092 Move X0, X24
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {176}
	097 Move W8, [X22+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X22+40], X24
	100 Move X24, [X27+16]
	101 Compare X24, 0
	102 JumpIfEqual {110}
	103 Move X8, [X22]
	104 Move X0, X24
	105 Move X1, [X8+64]
	106 Call 0x1C17E00
	107 Compare X0, 0
	108 JumpIfEqual {176}
	109 Move W8, [X22+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X22+48], X24
	112 Compare X20, 0
	113 JumpIfEqual {174}
	114 Move X0, X20
	115 Move X1, X23
	116 Move X2, X22
	117 Call RenderGraphLogger.LogLine, X0, X1, X2
	118 Move X20, [X21+56]
	119 Compare X20, 0
	120 JumpIfEqual {174}
	121 Move W1, 1
	122 Move X0, X20
	123 Call RenderGraphLogger.IncrementIndentation, X0, X1
	124 Move W8, [X19+32]
	125 Add W31, W8, 1
	126 Move X21, [X21+56]
	127 Move X0, [X25]
	128 Move W1, 1
	129 Call 0x1C17D6C
	130 Move X22, X0
	131 Move W8, [X19+32]
	132 Move X0, [X26]
	133 Move [X31+8], W8
	134 Add X1, X31, 8
	135 Call 0x1C17E04
	136 Compare X22, 0
	137 JumpIfEqual {179}
	138 Move X19, X0
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X22]
	142 Move X1, [X8+64]
	143 Move X0, X19
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {182}
	147 Move W8, [X22+24]
	148 Compare W8, 0
	149 JumpIfEqual {180}
	150 Move [X22+32], X19
	151 Compare X21, 0
	152 JumpIfEqual {181}
	153 Move X8, 0x7BD000
	154 Move X8, [X8+3336]
	155 Move X1, [X8]
	156 Move X0, X21
	157 Move X2, X22
	158 Call RenderGraphLogger.LogLine, X0, X1, X2
	159 Move W1, 1
	160 Move X0, X20
	161 Call RenderGraphLogger.DecrementIndentation, X0, X1
	162 Move X20, [X31+80]
	163 Move X19, [X31+88]
	164 Move X22, [X31+64]
	165 Move X21, [X31+72]
	166 Move X24, [X31+48]
	167 Move X23, [X31+56]
	168 Move X26, [X31+32]
	169 Move X25, [X31+40]
	170 Move X30, [X31+16]
	171 Move X27, [X31+24]
	172 Add X31, X31, 96
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F28
	176 Call 0x1C17F44
	177 Move X1, X31
	178 Call 0x1C17DEC
	179 Call 0x1C17F20
	180 Call 0x1C17F28
	181 Call 0x1C17F20
	182 Call 0x1C17F44
	183 Move X1, X31
	184 Call 0x1C17DEC
	185 Move X21, X0
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X0, X21
	188 Call 0x3EB2AD0
	189 Move X19, [X0]
	190 Call 0x3EB2AE0
	191 Move W1, 1
	192 Move X0, X20
	193 Call RenderGraphLogger.DecrementIndentation, X0, X1
	194 Compare X19, 0
	195 JumpIfEqual {162}
	196 Move X0, X19
	197 Call 0x1C17F18
	198 Move X19, X31
	199 Move X21, X0
	200 Move W1, 1
	201 Move X0, X20
	202 Call RenderGraphLogger.DecrementIndentation, X0, X1
	203 Compare X19, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X21
	206 Call 0x1D2D690
	207 Move X0, X19
	208 Call 0x1C17F18
	209 Call 0x1991590

Method: System.Void LogCulledPasses()

Disassembly:
	0x03991534 MOV X0, X21
	0x03991538 BL 0x1D2C690
	0x0399153C MOV X0, X22
	0x03991540 BL 0x1C16F18
	0x03991544 BL 0x1990590
	0x03991548 STP X30, X23, [X31 - 0x30]!
	0x0399154C STP X22, X21, [X31 + 0x10]
	0x03991550 STP X20, X19, [X31 + 0x20]
	0x03991554 ADRP X23, 0xA50000
	0x03991558 ADRP X22, 0x7BF000
	0x0399155C LDRB W8, [X23 + 0xABA]
	0x03991560 LDR X22, [X22 + 0xA88]
	0x03991564 MOV X19, X2
	0x03991568 MOV X21, X1
	0x0399156C MOV X20, X0
	0x03991570 TBNZ X8, 0x0, 0x3991594
	0x03991574 ADRP X0, 0x7BF000
	0x03991578 LDR X0, [X0 + 0xA88]
	0x0399157C BL 0x1C16CF4
	0x03991580 ADRP X0, 0x7BF000
	0x03991584 LDR X0, [X0 + 0x618]
	0x03991588 BL 0x1C16CF4
	0x0399158C MOVZ W8, 0x1
	0x03991590 STRB W8, [X23 + 0xABA]
	0x03991594 LDR X0, [X22]
	0x03991598 LDR W8, [X0 + 0xE0]
	0x0399159C CBNZ W8, 0x39915A4
	0x039915A0 BL 0x1C16DFC
	0x039915A4 ADRP X23, 0xA50000
	0x039915A8 LDRB W8, [X23 + 0xB42]
	0x039915AC CBNZ W8, 0x39915C4
	0x039915B0 ADRP X0, 0x7BF000
	0x039915B4 LDR X0, [X0 + 0xA88]
	0x039915B8 BL 0x1C16CF4
	0x039915BC MOVZ W8, 0x1
	0x039915C0 STRB W8, [X23 + 0xB42]
	0x039915C4 LDR X0, [X22]
	0x039915C8 LDR W8, [X0 + 0xE0]
	0x039915CC CBNZ W8, 0x39915D8
	0x039915D0 BL 0x1C16DFC
	0x039915D4 LDR X0, [X22]
	0x039915D8 LDR X8, [X0 + 0xB8]
	0x039915DC LDR X8, [X8]
	0x039915E0 STR X8, [X19]
	0x039915E4 LDRB W8, [X21 + 0x44]
	0x039915E8 TBNZ X8, 0x0, 0x3991604
	0x039915EC LDR W8, [X21 + 0x20]
	0x039915F0 CBZ W8, 0x3991628
	0x039915F4 LDR X8, [X20 + 0x40]
	0x039915F8 CBZ X8, 0x3991760
	0x039915FC LDR X8, [X8 + 0x38]
	0x03991600 STR X8, [X19]
	0x03991604 LDR X0, [X22]
	0x03991608 LDR W8, [X0 + 0xE0]
	0x0399160C CBNZ W8, 0x3991614
	0x03991610 BL 0x1C16DFC
	0x03991614 MOV X0, X19
	0x03991618 LDP X20, X19, [X31 + 0x20]
	0x0399161C LDP X22, X21, [X31 + 0x10]
	0x03991620 LDP X30, X23, [X31], #0x30
	0x03991624 B 0x398D2E8
	0x03991628 LDP S0, S1, [X21 + 0x68]
	0x0399162C LDP S2, S4, [X21 + 0x70]
	0x03991630 ADRP X8, 0xFFFFFFFFFD158000
	0x03991634 FMOV S5, -1
	0x03991638 LDR V3, [X8 + 0xF20]
	0x0399163C FMUL S6, S0, S0
	0x03991640 FMUL S7, S1, S1
	0x03991644 FADD S5, S4, S5
	0x03991648 FADD S6, S6, S7
	0x0399164C FMUL S7, S2, S2
	0x03991650 FADD S6, S7, S6
	0x03991654 FMUL S5, S5, S5
	0x03991658 FADD S7, S6, S5
	0x0399165C FCMP S7, S3
	0x03991660 B.MI 0x3991674
	0x03991664 FMUL S4, S4, S4
	0x03991668 FADD S4, S4, S6
	0x0399166C FCMP S4, S3
	0x03991670 B.PL 0x39916D4
	0x03991674 ADRP X8, 0x7BF000
	0x03991678 LDR X8, [X8 + 0x618]
	0x0399167C LDR W23, [X21 + 0x30]
	0x03991680 LDR X0, [X8]
	0x03991684 LDR W8, [X0 + 0xE0]
	0x03991688 CBNZ W8, 0x3991690
	0x0399168C BL 0x1C16DFC
	0x03991690 MOV X0, X31
	0x03991694 BL 0x39DD084
	0x03991698 CMP W23, W0
	0x0399169C B.NE 0x39916B0
	0x039916A0 LDR X8, [X20 + 0x40]
	0x039916A4 CBZ X8, 0x3991760
	0x039916A8 LDR X8, [X8 + 0x50]
	0x039916AC B 0x3991600
	0x039916B0 LDR W8, [X21 + 0x30]
	0x039916B4 CMP W8, 0x2
	0x039916B8 B.EQ 0x3991740
	0x039916BC CMP W8, 0x3
	0x039916C0 B.NE 0x3991604
	0x039916C4 LDR X8, [X20 + 0x40]
	0x039916C8 CBZ X8, 0x3991760
	0x039916CC LDR X8, [X8 + 0x68]
	0x039916D0 B 0x3991600
	0x039916D4 FMOV S4, -1
	0x039916D8 FADD S0, S0, S4
	0x039916DC FADD S1, S1, S4
	0x039916E0 FADD S2, S2, S4
	0x039916E4 FMUL S0, S0, S0
	0x039916E8 FMUL S1, S1, S1
	0x039916EC FADD S0, S0, S1
	0x039916F0 FMUL S1, S2, S2
	0x039916F4 FADD S0, S1, S0
	0x039916F8 FADD S0, S5, S0
	0x039916FC FCMP S0, S3
	0x03991700 B.PL 0x3991604
	0x03991704 ADRP X8, 0x7BF000
	0x03991708 LDR X8, [X8 + 0x618]
	0x0399170C LDR W23, [X21 + 0x30]
	0x03991710 LDR X0, [X8]
	0x03991714 LDR W8, [X0 + 0xE0]
	0x03991718 CBNZ W8, 0x3991720
	0x0399171C BL 0x1C16DFC
	0x03991720 MOV X0, X31
	0x03991724 BL 0x39DD084
	0x03991728 CMP W23, W0
	0x0399172C B.NE 0x3991750
	0x03991730 LDR X8, [X20 + 0x40]
	0x03991734 CBZ X8, 0x3991760
	0x03991738 LDR X8, [X8 + 0x70]
	0x0399173C B 0x3991600
	0x03991740 LDR X8, [X20 + 0x40]
	0x03991744 CBZ X8, 0x3991760
	0x03991748 LDR X8, [X8 + 0x30]
	0x0399174C B 0x3991600
	0x03991750 LDR W8, [X21 + 0x30]
	0x03991754 CMP W8, 0x2
	0x03991758 B.EQ 0x39915F4
	0x0399175C B 0x3991604
	0x03991760 BL 0x1C16F20
	0x03991764 SUB X31, X31, 0x140
	0x03991768 STR D8, [X31 + 0xD0]
	0x0399176C STP X29, X30, [X31 + 0xE0]
	0x03991770 STP X28, X27, [X31 + 0xF0]
	0x03991774 STP X26, X25, [X31 + 0x100]
	0x03991778 STP X24, X23, [X31 + 0x110]
	0x0399177C STP X22, X21, [X31 + 0x120]
	0x03991780 STP X20, X19, [X31 + 0x130]
	0x03991784 ADRP X20, 0xA50000
	0x03991788 LDRB W8, [X20 + 0xABB]
	0x0399178C MOV W19, W2
	0x03991790 MOV X21, X0
	0x03991794 STR X1, [X31 + 0x8]
	0x03991798 TBNZ X8, 0x0, 0x39917F8
	0x0399179C ADRP X0, 0x7BF000
	0x039917A0 LDR X0, [X0 + 0xBE0]
	0x039917A4 BL 0x1C16CF4
	0x039917A8 ADRP X0, 0x7BF000
	0x039917AC LDR X0, [X0 + 0xBF8]
	0x039917B0 BL 0x1C16CF4
	0x039917B4 ADRP X0, 0x7BF000
	0x039917B8 LDR X0, [X0 + 0xC00]
	0x039917BC BL 0x1C16CF4
	0x039917C0 ADRP X0, 0x7BF000
	0x039917C4 LDR X0, [X0 + 0xC08]
	0x039917C8 BL 0x1C16CF4
	0x039917CC ADRP X0, 0x7BF000
	0x039917D0 LDR X0, [X0 + 0xC10]
	0x039917D4 BL 0x1C16CF4
	0x039917D8 ADRP X0, 0x7BF000
	0x039917DC LDR X0, [X0 + 0x280]
	0x039917E0 BL 0x1C16CF4
	0x039917E4 ADRP X0, 0x78D000
	0x039917E8 LDR X0, [X0 + 0x730]
	0x039917EC BL 0x1C16CF4
	0x039917F0 MOVZ W8, 0x1
	0x039917F4 STRB W8, [X20 + 0xABB]
	0x039917F8 ADRP X29, 0x7BF000
	0x039917FC ADRP X26, 0x78D000
	0x03991800 ADRP X28, 0x7BF000
	0x03991804 ADRP X20, 0x7BF000
	0x03991808 ADRP X8, 0xFFFFFFFFFD15C000
	0x0399180C LDR X29, [X29 + 0xC00]
	0x03991810 LDR X26, [X26 + 0x730]
	0x03991814 LDR X28, [X28 + 0xBE0]
	0x03991818 LDR X20, [X20 + 0x280]
	0x0399181C LDR V8, [X8 + 0x640]
	0x03991820 MOV W27, W31
	0x03991824 STP X31, X31, [X31 + 0xB0]
	0x03991828 STR X31, [X31 + 0xC0]
	0x0399182C STR W31, [X31 + 0xAC]
	0x03991830 STR X31, [X31 + 0xA0]
	0x03991834 LDR X8, [X21 + 0x78]
	0x03991838 CBZ X8, 0x3991AA4
	0x0399183C LDR W9, [X8 + 0x18]
	0x03991840 CMP W27, W9
	0x03991844 B.CS 0x3991AA8
	0x03991848 LDR X9, [X31 + 0x8]
	0x0399184C LDR X9, [X9]
	0x03991850 CBZ X9, 0x3991AA4
	0x03991854 LDR X9, [X9 + 0x58]
	0x03991858 CBZ X9, 0x3991AA4
	0x0399185C LDR W10, [X9 + 0x18]
	0x03991860 CMP W27, W10
	0x03991864 B.CS 0x3991AA8
	0x03991868 SXTW X10, W27
	0x0399186C ADD X9, X9, X10, 0x3, LSL
	0x03991870 LDR X0, [X9 + 0x20]
	0x03991874 CBZ X0, 0x3991AA4
	0x03991878 ADD X8, X8, X10, 0x3, LSL
	0x0399187C LDR X22, [X8 + 0x20]
	0x03991880 ADRP X8, 0x7BF000
	0x03991884 LDR X8, [X8 + 0xC10]
	0x03991888 LDR X1, [X8]
	0x0399188C ADD X8, X31, 0x88
	0x03991890 BL 0x304A5A4
	0x03991894 LDUR V0, [X31 + 0x88]
	0x03991898 LDR X8, [X31 + 0x98]
	0x0399189C STR V0, [X31 + 0xB]
	0x039918A0 STR X8, [X31 + 0xC0]
	0x039918A4 LDR X1, [X29]
	0x039918A8 ADD X0, X31, 0xB0
	0x039918AC BL 0x2BC8CD4
	0x039918B0 TBZ X0, 0x0, 0x39919C0
	0x039918B4 LDR X23, [X31 + 0xC0]
	0x039918B8 LDR X0, [X26]
	0x039918BC STR X23, [X31 + 0xD8]
	0x039918C0 LDR W8, [X0 + 0xE0]
	0x039918C4 CBNZ W8, 0x39918CC
	0x039918C8 BL 0x1C16DFC
	0x039918CC MOV X0, X23
	0x039918D0 BL 0x398FDA8
	0x039918D4 MOV W1, W0
	0x039918D8 CBZ X22, 0x39919E4
	0x039918DC LDR X2, [X28]
	0x039918E0 MOV X0, X22
	0x039918E4 BL 0x2B42FB4
	0x039918E8 MOV X23, X0
	0x039918EC MOV X0, X21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xA51000
	015 Move W8, [X19+2763]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x763000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0x7C0000
	025 Move X0, [X0+2856]
	026 Call 0x1C17CF4
	027 Move X0, 0x7C0000
	028 Move X0, [X0+2864]
	029 Call 0x1C17CF4
	030 Move X0, 0x763000
	031 Move X0, [X0+1880]
	032 Call 0x1C17CF4
	033 Move X0, 0x7C0000
	034 Move X0, [X0+3056]
	035 Call 0x1C17CF4
	036 Move X0, 0x763000
	037 Move X0, [X0+2512]
	038 Call 0x1C17CF4
	039 Move X0, 0x764000
	040 Move X0, [X0+4064]
	041 Call 0x1C17CF4
	042 Move X0, 0x7C0000
	043 Move X0, [X0+3128]
	044 Call 0x1C17CF4
	045 Move X0, 0x7C0000
	046 Move X0, [X0+3136]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X19+2763], W8
	050 Move X8, [X20+48]
	051 Compare X8, 0
	052 JumpIfEqual {248}
	053 Move W8, [X8+36]
	054 Compare W8, 0
	055 JumpIfEqual {222}
	056 Move X8, 0x763000
	057 Move X8, [X8+2504]
	058 Move X19, [X20+56]
	059 Move X21, [X8]
	060 Move X8, [X21+56]
	061 Compare X8, 0
	062 JumpIfNotEqual {66}
	063 Move X0, X21
	064 Call 0x1C5D6E0
	065 Move X8, [X21+56]
	066 Move X0, [X8+16]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X8, [X21+56]
	078 Move X0, [X8+16]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Compare X19, 0
	086 JumpIfEqual {248}
	087 Move X9, 0x7C0000
	088 Move X8, [X0+184]
	089 Move X9, [X9+3128]
	090 Move X0, X19
	091 Move X2, [X8]
	092 Move X1, [X9]
	093 Call RenderGraphLogger.LogLine, X0, X1, X2
	094 Move X0, [X20+56]
	095 Compare X0, 0
	096 JumpIfEqual {248}
	097 Move W1, 1
	098 Move [X31], X0
	099 Call RenderGraphLogger.IncrementIndentation, X0, X1
	100 Move X8, [X20+128]
	101 Compare X8, 0
	102 JumpIfEqual {179}
	103 Move X28, 0x7C0000
	104 Move X29, 0x7C0000
	105 Move X27, 0x763000
	106 Move X26, 0x763000
	107 Move X19, 0x7C0000
	108 Move X28, [X28+2856]
	109 Move X29, [X29+3056]
	110 Move X27, [X27+2512]
	111 Move X26, [X26+1880]
	112 Move X19, [X19+3136]
	113 Move W21, W31
	114 Move W9, [X8+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X2, [X28]
	117 Move X0, X8
	118 Move W1, W21
	119 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	120 Move W8, [X0+28]
	121 Compare W8, 0
	122 JumpIfEqual {175}
	123 Move X0, [X20+32]
	124 Compare X0, 0
	125 JumpIfEqual {238}
	126 Move X2, [X29]
	127 Move W1, W21
	128 Call List`1<Object>.get_Item, X0, X1
	129 Move X24, X0
	130 Move X22, [X20+56]
	131 Move X0, [X27]
	132 Move W1, 2
	133 Call 0x1C17D6C
	134 Compare X24, 0
	135 JumpIfEqual {236}
	136 Move X23, X0
	137 Move W8, [X24+24]
	138 Move X0, [X26]
	139 Move [X31+12], W8
	140 Add X1, X31, 12
	141 Call 0x1C17E04
	142 Compare X23, 0
	143 JumpIfEqual {239}
	144 Move X25, X0
	145 Compare X0, 0
	146 JumpIfEqual {153}
	147 Move X8, [X23]
	148 Move X1, [X8+64]
	149 Move X0, X25
	150 Call 0x1C17E00
	151 Compare X0, 0
	152 JumpIfEqual {242}
	153 Move W8, [X23+24]
	154 Compare W8, 0
	155 JumpIfEqual {237}
	156 Move [X23+32], X25
	157 Move X24, [X24+16]
	158 Compare X24, 0
	159 JumpIfEqual {167}
	160 Move X8, [X23]
	161 Move X1, [X8+64]
	162 Move X0, X24
	163 Call 0x1C17E00
	164 Compare X0, 0
	165 JumpIfEqual {245}
	166 Move W8, [X23+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move [X23+40], X24
	169 Compare X22, 0
	170 JumpIfEqual {240}
	171 Move X1, [X19]
	172 Move X0, X22
	173 Move X2, X23
	174 Call RenderGraphLogger.LogLine, X0, X1, X2
	175 Move X8, [X20+128]
	176 Add W21, W21, 1
	177 Compare X8, 0
	178 JumpIfNotEqual {114}
	179 Call 0x1C17F20
	180 Move X8, 0x763000
	181 Move X8, [X8+2504]
	182 Move X20, [X20+56]
	183 Move X19, [X31]
	184 Move X21, [X8]
	185 Move X8, [X21+56]
	186 Compare X8, 0
	187 JumpIfNotEqual {191}
	188 Move X0, X21
	189 Call 0x1C5D6E0
	190 Move X8, [X21+56]
	191 Move X0, [X8+16]
	192 Move W8, [X0+309]
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {198}
	197 Call 0x1C5D684
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move X8, [X21+56]
	203 Move X0, [X8+16]
	204 Move W8, [X0+309]
	205 Move TEMP, X8
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {210}
	209 Call 0x1C5D684
	210 Compare X20, 0
	211 JumpIfEqual {249}
	212 Move X8, [X0+184]
	213 Move X2, [X8]
	214 Move X8, 0x764000
	215 Move X8, [X8+4064]
	216 Move X1, [X8]
	217 Move X0, X20
	218 Call RenderGraphLogger.LogLine, X0, X1, X2
	219 Move W1, 1
	220 Move X0, X19
	221 Call RenderGraphLogger.DecrementIndentation, X0, X1
	222 Move X20, [X31+96]
	223 Move X19, [X31+104]
	224 Move X22, [X31+80]
	225 Move X21, [X31+88]
	226 Move X24, [X31+64]
	227 Move X23, [X31+72]
	228 Move X26, [X31+48]
	229 Move X25, [X31+56]
	230 Move X28, [X31+32]
	231 Move X27, [X31+40]
	232 Move X29, [X31+16]
	233 Move X30, [X31+24]
	234 Add X31, X31, 112
	235 Return 
	236 Call 0x1C17F20
	237 Call 0x1C17F28
	238 Call 0x1C17F20
	239 Call 0x1C17F20
	240 Call 0x1C17F20
	241 Call 0x1C17F28
	242 Call 0x1C17F44
	243 Move X1, X31
	244 Call 0x1C17DEC
	245 Call 0x1C17F44
	246 Move X1, X31
	247 Call 0x1C17DEC
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Move X19, [X31]
	251 Move X20, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X20
	254 Call 0x3EB2AD0
	255 Move X21, [X0]
	256 Call 0x3EB2AE0
	257 Move W1, 1
	258 Move X0, X19
	259 Call RenderGraphLogger.DecrementIndentation, X0, X1
	260 Compare X21, 0
	261 JumpIfEqual {222}
	262 Move X0, X21
	263 Call 0x1C17F18
	264 Move X21, X31
	265 Move X20, X0
	266 Move X0, [X31]
	267 Move W1, 1
	268 Call RenderGraphLogger.DecrementIndentation, X0, X1
	269 Compare X21, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X20
	272 Call 0x1D2D690
	273 Move X0, X21
	274 Call 0x1C17F18
	275 Call 0x1991590

Method: UnityEngine.Rendering.ProfilingSampler GetDefaultProfilingSampler(System.String name)

Disassembly:
	0x03995E54 ADRP X8, 0x7BB000
	0x03995E58 LDR X8, [X8 + 0xBF8]
	0x03995E5C ADD X0, X31, 0xD0
	0x03995E60 LDR X1, [X8]
	0x03995E64 BL 0x2BC8CD0
	0x03995E68 CBZ X24, 0x39959B0
	0x03995E6C B 0x3995FF4
	0x03995E70 CMP W1, 0x1
	0x03995E74 B.NE 0x3996014
	0x03995E78 BL 0x3EB1AD0
	0x03995E7C LDR X24, [X0]
	0x03995E80 BL 0x3EB1AE0
	0x03995E84 ADRP X8, 0x7BB000
	0x03995E88 LDR X8, [X8 + 0xBF8]
	0x03995E8C ADD X0, X31, 0xD0
	0x03995E90 LDR X1, [X8]
	0x03995E94 BL 0x2BC8CD0
	0x03995E98 CBZ X24, 0x399589C
	0x03995E9C B 0x3995FF4
	0x03995EA0 LDR X8, [X27 + 0x28]
	0x03995EA4 CBZ X8, 0x3995FD4
	0x03995EA8 LDR X0, [X8 + 0x10]
	0x03995EAC LDRH W8, [X31 + 0xEC]
	0x03995EB0 LDRB W9, [X31 + 0xEE]
	0x03995EB4 LDR X19, [X31 + 0x38]
	0x03995EB8 STRH W8, [X31 + 0x7C]
	0x03995EBC STRB W9, [X31 + 0x7E]
	0x03995EC0 CBZ X0, 0x3995FD4
	0x03995EC4 LDRH W8, [X31 + 0x7C]
	0x03995EC8 LDRB W9, [X31 + 0x7E]
	0x03995ECC STRH W8, [X31 + 0x80]
	0x03995ED0 STRB W9, [X31 + 0x82]
	0x03995ED4 ADRP X9, 0x7BB000
	0x03995ED8 LDR W10, [X0 + 0x1C]
	0x03995EDC LDR X8, [X0 + 0x10]
	0x03995EE0 LDR X9, [X9 + 0xDC8]
	0x03995EE4 ADD W10, W10, 0x1
	0x03995EE8 LDR X9, [X9]
	0x03995EEC STR W10, [X0 + 0x1C]
	0x03995EF0 CBZ X8, 0x3995FD4
	0x03995EF4 LDRSW X10, [X0 + 0x18]
	0x03995EF8 LDR W11, [X8 + 0x18]
	0x03995EFC CMP W10, W11
	0x03995F00 B.CS 0x3995F60
	0x03995F04 ADD W9, W10, 0x1
	0x03995F08 MOVZ W11, 0x28
	0x03995F0C MADD X8, X10, X11, X8
	0x03995F10 STR W9, [X0 + 0x18]
	0x03995F14 LDR X10, [X31 + 0x20]
	0x03995F18 LDR X9, [X31 + 0x70]
	0x03995F1C STR X22, [X8 + 0x30]
	0x03995F20 STRH W31, [X8 + 0x3A]
	0x03995F24 STP X10, X9, [X8 + 0x20]
	0x03995F28 LDR W9, [X31 + 0x30]
	0x03995F2C LDR W10, [X31 + 0x18]
	0x03995F30 STRB W9, [X8 + 0x38]
	0x03995F34 LDR W9, [X31 + 0x2C]
	0x03995F38 STRB W9, [X8 + 0x39]
	0x03995F3C LDR W9, [X31 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA4D000
	007 Move W8, [X21+2764]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x7BC000
	015 Move X0, [X0+3496]
	016 Call 0x1C17CF4
	017 Move X0, 0x7BC000
	018 Move X0, [X0+3504]
	019 Call 0x1C17CF4
	020 Move X0, 0x7BC000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2764], W8
	025 Move [X31+8], X31
	026 Compare X20, 0
	027 JumpIfEqual {73}
	028 Move X8, [X20]
	029 Move X0, X20
	030 Move X9, [X8+344]
	031 Move X1, [X8+352]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X19+72]
	034 Compare X8, 0
	035 JumpIfEqual {73}
	036 Move X9, 0x7BC000
	037 Move X9, [X9+3504]
	038 Move W21, W0
	039 Add X2, X31, 8
	040 Move X0, X8
	041 Move X3, [X9]
	042 Move W1, W21
	043 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {66}
	048 Move X8, 0x7BC000
	049 Move X8, [X8+1432]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X1, X20
	053 Move X2, X31
	054 Move X22, X0
	055 Call ProfilingSampler..ctor, X0, X1
	056 Move [X31+8], X22
	057 Move X0, [X19+72]
	058 Compare X0, 0
	059 JumpIfEqual {73}
	060 Move X8, 0x7BC000
	061 Move X8, [X8+3496]
	062 Move W1, W21
	063 Move X2, X22
	064 Move X3, [X8]
	065 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	066 Move X0, [X31+8]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Void UpdateImportedResourceLifeTime(ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugData/ResourceDebugData data, System.Collections.Generic.List`1<System.Int32> passList)

Disassembly:
	0x03995F40 STP W10, W9, [X8 + 0x3C]
	0x03995F44 LDR W9, [X31 + 0x34]
	0x03995F48 STRB W9, [X8 + 0x44]
	0x03995F4C LDRB W9, [X31 + 0x82]
	0x03995F50 LDRH W10, [X31 + 0x80]
	0x03995F54 STRB W9, [X8 + 0x47]
	0x03995F58 STURH W10, [X8 + 0x45]
	0x03995F5C B 0x3995FC4
	0x03995F60 LDR X8, [X9 + 0x20]
	0x03995F64 LDR X10, [X31 + 0x20]
	0x03995F68 LDRH W9, [X31 + 0x80]
	0x03995F6C ADD X1, X31, 0x1A0
	0x03995F70 LDR X8, [X8 + 0xC0]
	0x03995F74 LDR X2, [X8 + 0x70]
	0x03995F78 LDR X8, [X31 + 0x70]
	0x03995F7C STR X22, [X27 + 0xC0]
	0x03995F80 STP X10, X8, [X27 + 0xB0]
	0x03995F84 LDR W10, [X31 + 0x30]
	0x03995F88 LDRB W8, [X31 + 0x82]
	0x03995F8C STRH W31, [X31 + 0x1BA]
	0x03995F90 STRB W10, [X31 + 0x1B8]
	0x03995F94 LDR W10, [X31 + 0x2C]
	0x03995F98 STRB W10, [X31 + 0x1B9]
	0x03995F9C LDR W10, [X31 + 0x18]
	0x03995FA0 STR W10, [X31 + 0x1BC]
	0x03995FA4 LDR W10, [X31 + 0x1C]
	0x03995FA8 STR W10, [X31 + 0x1C0]
	0x03995FAC LDR W10, [X31 + 0x34]
	0x03995FB0 STRB W10, [X31 + 0x1C4]
	0x03995FB4 LDR X10, [X31 + 0x10]
	0x03995FB8 STRB W8, [X10 + 0x2]
	0x03995FBC STRH W9, [X10]
	0x03995FC0 BL 0x313A630
	0x03995FC4 LDR W1, [X31 + 0x6C]
	0x03995FC8 LDR X0, [X19 + 0x80]
	0x03995FCC ADD W1, W1, 0x1
	0x03995FD0 CBNZ X0, 0x3995640
	0x03995FD4 BL 0x1C16F20
	0x03995FD8 MOV X0, X23
	0x03995FDC BL 0x39960CC
	0x03995FE0 B 0x39952DC
	0x03995FE4 BL 0x1C16F28
	0x03995FE8 BL 0x1C16F44
	0x03995FEC MOV X1, X31
	0x03995FF0 BL 0x1C16DEC
	0x03995FF4 MOV X0, X24
	0x03995FF8 BL 0x1C16F18
	0x03995FFC MOV X19, X0
	0x03996000 MOV X24, X31
	0x03996004 B 0x39960A0
	0x03996008 MOV X19, X0
	0x0399600C MOV X24, X31
	0x03996010 B 0x399607C
	0x03996014 MOV X19, X0
	0x03996018 MOV X24, X31
	0x0399601C B 0x3996058
	0x03996020 MOV X19, X0
	0x03996024 MOV X24, X31
	0x03996028 B 0x3996034
	0x0399602C BL 0x3EB1B20
	0x03996030 MOV X19, X0
	0x03996034 ADRP X8, 0x7BA000
	0x03996038 LDR X8, [X8 + 0xBF8]
	0x0399603C LDR X1, [X8]
	0x03996040 ADD X0, X31, 0xD0
	0x03996044 BL 0x2BC8CD0
	0x03996048 CBZ X24, 0x39960B8
	0x0399604C MOV X0, X24
	0x03996050 BL 0x1C16F18
	0x03996054 MOV X19, X0
	0x03996058 ADRP X8, 0x7BA000
	0x0399605C LDR X8, [X8 + 0xBF8]
	0x03996060 LDR X1, [X8]
	0x03996064 ADD X0, X31, 0xD0
	0x03996068 BL 0x2BC8CD0
	0x0399606C CBZ X24, 0x39960B8
	0x03996070 MOV X0, X24
	0x03996074 BL 0x1C16F18
	0x03996078 MOV X19, X0
	0x0399607C ADRP X8, 0x788000
	0x03996080 LDR X8, [X8 + 0xB18]
	0x03996084 LDR X1, [X8]
	0x03996088 ADD X0, X31, 0xB0
	0x0399608C BL 0x2BBDD9C
	0x03996090 CBZ X24, 0x39960B8
	0x03996094 MOV X0, X24
	0x03996098 BL 0x1C16F18
	0x0399609C MOV X19, X0
	0x039960A0 ADRP X8, 0x788000
	0x039960A4 LDR X8, [X8 + 0xB18]
	0x039960A8 LDR X1, [X8]
	0x039960AC ADD X0, X31, 0xB0
	0x039960B0 BL 0x2BBDD9C
	0x039960B4 CBNZ X24, 0x39960C0
	0x039960B8 MOV X0, X19
	0x039960BC BL 0x1D2C690
	0x039960C0 MOV X0, X24
	0x039960C4 BL 0x1C16F18
	0x039960C8 BL 0x1990590
	0x039960CC SUB X31, X31, 0x70
	0x039960D0 STR X30, [X31 + 0x30]
	0x039960D4 STP X24, X23, [X31 + 0x40]
	0x039960D8 STP X22, X21, [X31 + 0x50]
	0x039960DC STP X20, X19, [X31 + 0x60]
	0x039960E0 ADRP X20, 0xA4B000
	0x039960E4 LDRB W8, [X20 + 0xACF]
	0x039960E8 MOV X19, X0
	0x039960EC TBNZ X8, 0x0, 0x399614C
	0x039960F0 ADRP X0, 0x7BA000
	0x039960F4 LDR X0, [X0 + 0xDE8]
	0x039960F8 BL 0x1C16CF4
	0x039960FC ADRP X0, 0x7BA000
	0x03996100 LDR X0, [X0 + 0xDF0]
	0x03996104 BL 0x1C16CF4
	0x03996108 ADRP X0, 0x7BA000
	0x0399610C LDR X0, [X0 + 0xDF8]
	0x03996110 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0xA4D000
	010 Move W8, [X21+2765]
	011 Move X20, X2
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x78A000
	018 Move X0, [X0+2840]
	019 Call 0x1C17CF4
	020 Move X0, 0x78A000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move X0, 0x78A000
	024 Move X0, [X0+2872]
	025 Call 0x1C17CF4
	026 Move X0, 0x78A000
	027 Move X0, [X0+2896]
	028 Call 0x1C17CF4
	029 Move X0, 0x75F000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+2765], W8
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X31+48], X31
	037 Compare X20, 0
	038 JumpIfEqual {101}
	039 Move X8, 0x78A000
	040 Move X8, [X8+2896]
	041 Move X23, 0x78A000
	042 Move X24, 0x75F000
	043 Move X22, 0x78A000
	044 Move X1, [X8]
	045 Move X23, [X23+2856]
	046 Move X24, [X24+1448]
	047 Move X22, [X22+2840]
	048 Add X8, X31, 8
	049 Move X0, X20
	050 Call List`1<Int32>.GetEnumerator, X0
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move X8, [X31+24]
	053 Move [X31+2], V0
	054 Move [X31+48], X8
	055 Move X1, [X23]
	056 Add X0, X31, 32
	057 Call Enumerator<Int32>.MoveNext, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {89}
	062 Move W21, [X19+12]
	063 Move W20, [X31+48]
	064 Add W31, W21, 1
	065 Move W0, W20
	066 Move X0, [X24]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W0, W21
	072 Move W1, W20
	073 Move X2, X31
	074 Call Math.Min, X0, X1
	075 Move W21, [X19+16]
	076 Move [X19+12], W0
	077 Add W31, W21, 1
	078 Move X0, [X24]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move W0, W21
	084 Move W1, W20
	085 Move X2, X31
	086 Call Math.Max, X0, X1
	087 Move W20, W0
	088 Move [X19+16], W20
	089 Move X1, [X22]
	090 Add X0, X31, 32
	091 Call Enumerator<Int32>.Dispose, X0
	092 Move X20, [X31+112]
	093 Move X19, [X31+120]
	094 Move X22, [X31+96]
	095 Move X21, [X31+104]
	096 Move X24, [X31+80]
	097 Move X23, [X31+88]
	098 Move X30, [X31+64]
	099 Add X31, X31, 128
	100 Return 
	101 Call 0x1C17F20
	102 Move X19, X0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X19
	105 Call 0x3EB2AD0
	106 Move X20, [X0]
	107 Call 0x3EB2AE0
	108 Move X1, [X22]
	109 Add X0, X31, 32
	110 Call Enumerator<Int32>.Dispose, X0
	111 Compare X20, 0
	112 JumpIfEqual {92}
	113 Move X0, X20
	114 Call 0x1C17F18
	115 Move X20, X31
	116 Move X19, X0
	117 Move X1, [X22]
	118 Add X0, X31, 32
	119 Call Enumerator<Int32>.Dispose, X0
	120 Compare X20, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X19
	123 Call 0x1D2D690
	124 Move X0, X20
	125 Call 0x1C17F18
	126 Call 0x1991590

Method: System.Void GenerateDebugData()

Disassembly:
	0x03996114 ADRP X0, 0x7BA000
	0x03996118 LDR X0, [X0 + 0xE00]
	0x0399611C BL 0x1C16CF4
	0x03996120 ADRP X0, 0x7BA000
	0x03996124 LDR X0, [X0 + 0xE08]
	0x03996128 BL 0x1C16CF4
	0x0399612C ADRP X0, 0x7BA000
	0x03996130 LDR X0, [X0 + 0xE10]
	0x03996134 BL 0x1C16CF4
	0x03996138 ADRP X0, 0x7BA000
	0x0399613C LDR X0, [X0 + 0x8C0]
	0x03996140 BL 0x1C16CF4
	0x03996144 MOVZ W8, 0x1
	0x03996148 STRB W8, [X20 + 0xACF]
	0x0399614C MOVI V0.2D, 0x0
	0x03996150 STR X31, [X31 + 0x20]
	0x03996154 STP V0, V0, [X31]
	0x03996158 LDR X0, [X19 + 0xB0]
	0x0399615C CBZ X0, 0x3996218
	0x03996160 ADRP X8, 0x7BA000
	0x03996164 LDR X8, [X8 + 0xDF0]
	0x03996168 ADRP X21, 0x7BA000
	0x0399616C LDR X21, [X21 + 0xE00]
	0x03996170 ADRP X24, 0x7BA000
	0x03996174 LDR X1, [X8]
	0x03996178 ADRP X22, 0x7BA000
	0x0399617C ADRP X23, 0x7BA000
	0x03996180 LDR X24, [X24 + 0x8C0]
	0x03996184 LDR X22, [X22 + 0xDE8]
	0x03996188 LDR X23, [X23 + 0xDF8]
	0x0399618C ADD X8, X31, 0x0
	0x03996190 BL 0x2AA54BC
	0x03996194 LDR X1, [X21]
	0x03996198 ADD X0, X31, 0x0
	0x0399619C BL 0x2C0A728
	0x039961A0 TBZ X0, 0x0, 0x39961E4
	0x039961A4 LDR X0, [X24]
	0x039961A8 LDR X20, [X31 + 0x10]
	0x039961AC LDR W8, [X0 + 0xE0]
	0x039961B0 CBNZ W8, 0x39961BC
	0x039961B4 BL 0x1C16DFC
	0x039961B8 LDR X0, [X24]
	0x039961BC LDR X8, [X0 + 0xB8]
	0x039961C0 LDR X8, [X8 + 0x30]
	0x039961C4 CBZ X8, 0x3996194
	0x039961C8 LDR X0, [X8 + 0x40]
	0x039961CC LDR X9, [X8 + 0x18]
	0x039961D0 LDR X3, [X8 + 0x28]
	0x039961D4 MOV X1, X19
	0x039961D8 MOV X2, X20
	0x039961DC BLR X9
	0x039961E0 B 0x3996194
	0x039961E4 LDR X1, [X23]
	0x039961E8 ADD X0, X31, 0x0
	0x039961EC BL 0x2C0A83C
	0x039961F0 LDR X0, [X19 + 0xB0]
	0x039961F4 CBZ X0, 0x3996218
	0x039961F8 LDR X1, [X22]
	0x039961FC BL 0x2AA5220
	0x03996200 LDP X20, X19, [X31 + 0x60]
	0x03996204 LDP X22, X21, [X31 + 0x50]
	0x03996208 LDP X24, X23, [X31 + 0x40]
	0x0399620C LDR X30, [X31 + 0x30]
	0x03996210 ADD X31, X31, 0x70
	0x03996214 RET
	0x03996218 BL 0x1C16F20
	0x0399621C B 0x3996224
	0x03996220 B 0x3996224
	0x03996224 MOV X20, X0
	0x03996228 CMP W1, 0x1
	0x0399622C B.NE 0x3996258
	0x03996230 MOV X0, X20
	0x03996234 BL 0x3EB1AD0
	0x03996238 LDR X21, [X0]
	0x0399623C BL 0x3EB1AE0
	0x03996240 LDR X1, [X23]
	0x03996244 ADD X0, X31, 0x0
	0x03996248 BL 0x2C0A83C
	0x0399624C CBZ X21, 0x39961F0
	0x03996250 MOV X0, X21
	0x03996254 BL 0x1C16F18
	0x03996258 MOV X21, X31
	0x0399625C B 0x3996264
	0x03996260 MOV X20, X0
	0x03996264 LDR X1, [X23]
	0x03996268 ADD X0, X31, 0x0
	0x0399626C BL 0x2C0A83C
	0x03996270 CBNZ X21, 0x399627C
	0x03996274 MOV X0, X20
	0x03996278 BL 0x1D2C690
	0x0399627C MOV X0, X21
	0x03996280 BL 0x1C16F18
	0x03996284 BL 0x1990590
	0x03996288 STR X30, [X31 - 0x30]!
	0x0399628C STP X22, X21, [X31 + 0x10]
	0x03996290 STP X20, X19, [X31 + 0x20]
	0x03996294 ADRP X22, 0xA4B000
	0x03996298 LDRB W8, [X22 + 0xB05]
	0x0399629C MOV W19, W2
	0x039962A0 MOV W20, W1
	0x039962A4 MOV X21, X0
	0x039962A8 TBNZ X8, 0x0, 0x39962C0
	0x039962AC ADRP X0, 0x786000
	0x039962B0 LDR X0, [X0 + 0xA80]
	0x039962B4 BL 0x1C16CF4
	0x039962B8 MOVZ W8, 0x1
	0x039962BC STRB W8, [X22 + 0xB05]
	0x039962C0 MOV X0, X21
	0x039962C4 MOV W1, W20
	0x039962C8 MOV W2, W19
	0x039962CC BL 0x3999754
	0x039962D0 LDR X8, [X21 + 0x10]
	0x039962D4 CBZ X8, 0x399632C
	0x039962D8 LDR W9, [X8 + 0x18]
	0x039962DC CMP W9, W20
	0x039962E0 B.LS 0x3996330
	0x039962E4 ADD X8, X8, W20, 0x3, SXTW
	0x039962E8 LDR X8, [X8 + 0x20]
	0x039962EC CBZ X8, 0x399632C
	0x039962F0 LDR X0, [X8 + 0x10]
	0x039962F4 CBZ X0, 0x399632C
	0x039962F8 ADRP X8, 0x786000
	0x039962FC LDR X8, [X8 + 0xA80]
	0x03996300 MOV W1, W19
	0x03996304 LDR X2, [X8]
	0x03996308 BL 0x2B40178
	0x0399630C LDR X0, [X0]
	0x03996310 CBZ X0, 0x399632C
	0x03996314 LDR X8, [X0]
	0x03996318 LDP X20, X19, [X31 + 0x20]
	0x0399631C LDP X22, X21, [X31 + 0x10]
	0x03996320 LDP X2, X1, [X8 + 0x188]
	0x03996324 LDR X30, [X31], #0x30
	0x03996328 BR X2
	0x0399632C BL 0x1C16F20
	0x03996330 BL 0x1C16F28
	0x03996334 STR X30, [X31 - 0x30]!
	0x03996338 STP X22, X21, [X31 + 0x10]
	0x0399633C STP X20, X19, [X31 + 0x20]
	0x03996340 ADRP X22, 0xA4B000
	0x03996344 LDRB W8, [X22 + 0xB09]
	0x03996348 MOV W19, W2
	0x0399634C MOV W20, W1
	0x03996350 MOV X21, X0
	0x03996354 TBNZ X8, 0x0, 0x399636C
	0x03996358 ADRP X0, 0x786000
	0x0399635C LDR X0, [X0 + 0xA80]
	0x03996360 BL 0x1C16CF4
	0x03996364 MOVZ W8, 0x1
	0x03996368 STRB W8, [X22 + 0xB09]
	0x0399636C MOV X0, X21
	0x03996370 MOV W1, W20
	0x03996374 MOV W2, W19
	0x03996378 BL 0x3999754
	0x0399637C LDR X8, [X21 + 0x10]
	0x03996380 CBZ X8, 0x39963D4
	0x03996384 LDR W9, [X8 + 0x18]
	0x03996388 CMP W9, W20
	0x0399638C B.LS 0x39963D8
	0x03996390 ADD X8, X8, W20, 0x3, SXTW
	0x03996394 LDR X8, [X8 + 0x20]
	0x03996398 CBZ X8, 0x39963D4
	0x0399639C LDR X0, [X8 + 0x10]
	0x039963A0 CBZ X0, 0x39963D4
	0x039963A4 ADRP X8, 0x786000
	0x039963A8 LDR X8, [X8 + 0xA80]
	0x039963AC MOV W1, W19
	0x039963B0 LDR X2, [X8]
	0x039963B4 BL 0x2B40178
	0x039963B8 LDR X8, [X0]
	0x039963BC CBZ X8, 0x39963D4
	0x039963C0 LDRB W0, [X8 + 0x10]
	0x039963C4 LDP X20, X19, [X31 + 0x20]
	0x039963C8 LDP X22, X21, [X31 + 0x10]
	0x039963CC LDR X30, [X31], #0x30
	0x039963D0 RET
	0x039963D4 BL 0x1C16F20
	0x039963D8 BL 0x1C16F28
	0x039963DC STR X30, [X31 - 0x30]!
	0x039963E0 STP X22, X21, [X31 + 0x10]
	0x039963E4 STP X20, X19, [X31 + 0x20]
	0x039963E8 ADRP X22, 0xA4B000
	0x039963EC ADRP X20, 0x7BA000
	0x039963F0 ADRP X21, 0x7BA000
	0x039963F4 ADRP X19, 0x7BA000
	0x039963F8 LDRB W8, [X22 + 0xAD0]
	0x039963FC LDR X20, [X20 + 0x8C0]
	0x03996400 LDR X21, [X21 + 0xE18]
	0x03996404 LDR X19, [X19 + 0xE20]
	0x03996408 TBNZ X8, 0x0, 0x3996438
	0x0399640C ADRP X0, 0x7BA000
	0x03996410 LDR X0, [X0 + 0xE20]
	0x03996414 BL 0x1C16CF4
	0x03996418 ADRP X0, 0x7BA000
	0x0399641C LDR X0, [X0 + 0xE18]
	0x03996420 BL 0x1C16CF4
	0x03996424 ADRP X0, 0x7BA000
	0x03996428 LDR X0, [X0 + 0x8C0]
	0x0399642C BL 0x1C16CF4
	0x03996430 MOVZ W8, 0x1
	0x03996434 STRB W8, [X22 + 0xAD0]
	0x03996438 LDR X8, [X20]
	0x0399643C MOVZ W9, 0x8
	0x03996440 LDR X8, [X8 + 0xB8]
	0x03996444 STR W9, [X8]
	0x03996448 LDR X0, [X21]
	0x0399644C BL 0x1C16F10
	0x03996450 LDR X1, [X19]
	0x03996454 MOV X19, X0
	0x03996458 BL 0x301B7C4
	0x0399645C LDR X8, [X20]
	0x03996460 LDP X22, X21, [X31 + 0x10]
	0x03996464 LDR X8, [X8 + 0xB8]
	0x03996468 STR X19, [X8 + 0x8]
	0x0399646C LDP X20, X19, [X31 + 0x20]
	0x03996470 STRB W31, [X8 + 0x10]
	0x03996474 LDR X30, [X31], #0x30
	0x03996478 RET
	0x0399647C MOV X1, X31
	0x03996480 B 0x33BDD8C
	0x03996484 STR X30, [X31 - 0x30]!
	0x03996488 STP X22, X21, [X31 + 0x10]
	0x0399648C STP X20, X19, [X31 + 0x20]
	0x03996490 LDR X8, [X2 + 0x8]
	0x03996494 STP X1, X2, [X0 + 0x20]
	0x03996498 MOV X19, X0
	0x0399649C MOV X20, X2
	0x039964A0 STR X8, [X0 + 0x10]
	0x039964A4 LDRB W22, [X2 + 0x52]
	0x039964A8 STR X0, [X0 + 0x40]
	0x039964AC MOV X0, X2
	0x039964B0 MOV X21, X1
	0x039964B4 BL 0x1C16D84
	0x039964B8 TBZ X0, 0x0, 0x39964D0
	0x039964BC CMP W22, 0x1
	0x039964C0 B.NE 0x39964D8
	0x039964C4 ADRP X8, 0xFFFFFFFFFE261000
	0x039964C8 ADD X8, X8, 0xC6C
	0x039964CC B 0x399654C
	0x039964D0 CBZ W22, 0x39964EC
	0x039964D4 CBZ X21, 0x399656C
	0x039964D8 LDR X8, [X19 + 0x10]
	0x039964DC LDR X9, [X19 + 0x20]
	0x039964E0 STR X8, [X19 + 0x18]
	0x039964E4 STR X9, [X19 + 0x40]
	0x039964E8 B 0x3996550
	0x039964EC LDRB W8, [X19 + 0x70]
	0x039964F0 CBZ W8, 0x399651C
	0x039964F4 MOV X0, X20
	0x039964F8 BL 0x1C16D7C
	0x039964FC MOV W21, W0
	0x03996500 MOV X0, X20
	0x03996504 BL 0x1C17238
	0x03996508 TBZ X21, 0x0, 0x3996528
	0x0399650C TBZ X0, 0x0, 0x3996538
	0x03996510 ADRP X8, 0xFFFFFFFFFE261000
	0x03996514 ADD X8, X8, 0xD68
	0x03996518 B 0x399654C
	0x0399651C ADRP X8, 0xFFFFFFFFFE261000
	0x03996520 ADD X8, X8, 0xC4C
	0x03996524 B 0x399654C
	0x03996528 TBZ X0, 0x0, 0x3996544
	0x0399652C ADRP X8, 0xFFFFFFFFFE261000
	0x03996530 ADD X8, X8, 0xCA8
	0x03996534 B 0x399654C
	0x03996538 ADRP X8, 0xFFFFFFFFFE261000
	0x0399653C ADD X8, X8, 0xD2C
	0x03996540 B 0x399654C
	0x03996544 ADRP X8, 0xFFFFFFFFFE261000
	0x03996548 ADD X8, X8, 0xC7C
	0x0399654C STR X8, [X19 + 0x18]
	0x03996550 ADRP X8, 0xFFFFFFFFFE261000
	0x03996554 ADD X8, X8, 0xC04
	0x03996558 STR X8, [X19 + 0x38]
	0x0399655C LDP X20, X19, [X31 + 0x20]
	0x03996560 LDP X22, X21, [X31 + 0x10]
	0x03996564 LDR X30, [X31], #0x30
	0x03996568 RET
	0x0399656C ADRP X1, 0xFFFFFFFFFD185000
	0x03996570 ADD X1, X1, 0xEE3
	0x03996574 MOV X0, X31
	0x03996578 BL 0x1C16F3C
	0x0399657C MOV X1, X31
	0x03996580 BL 0x1C16DEC
	0x03996584 LDR X8, [X0 + 0x40]
	0x03996588 LDR X3, [X0 + 0x18]
	0x0399658C LDR X2, [X0 + 0x28]
	0x03996590 MOV X0, X8
	0x03996594 BR X3
	0x03996598 SUB X31, X31, 0x20
	0x0399659C STP X31, X30, [X31 + 0x8]
	0x039965A0 STR X1, [X31]
	0x039965A4 ADD X1, X31, 0x0
	0x039965A8 BL 0x1C16CB0
	0x039965AC LDR X30, [X31 + 0x10]
	0x039965B0 ADD X31, X31, 0x20
	0x039965B4 RET
	0x039965B8 MOV X0, X1
	0x039965BC MOV X1, X31
	0x039965C0 B 0x1C16CB4
	0x039965C4 STR X30, [X31 - 0x30]!
	0x039965C8 STP X22, X21, [X31 + 0x10]
	0x039965CC STP X20, X19, [X31 + 0x20]
	0x039965D0 LDR X8, [X2 + 0x8]
	0x039965D4 STP X1, X2, [X0 + 0x20]
	0x039965D8 MOV X19, X0
	0x039965DC MOV X20, X2
	0x039965E0 STR X8, [X0 + 0x10]
	0x039965E4 LDRB W22, [X2 + 0x52]
	0x039965E8 STR X0, [X0 + 0x40]
	0x039965EC MOV X0, X2
	0x039965F0 MOV X21, X1
	0x039965F4 BL 0x1C16D84
	0x039965F8 TBZ X0, 0x0, 0x3996610
	0x039965FC CMP W22, 0x2
	0x03996600 B.NE 0x399664C
	0x03996604 ADRP X8, 0xFFFFFFFFFE261000
	0x03996608 ADD X8, X8, 0xE70
	0x0399660C B 0x3996690
	0x03996610 CMP W22, 0x1
	0x03996614 B.NE 0x3996648
	0x03996618 LDRB W8, [X19 + 0x70]
	0x0399661C CBZ W8, 0x3996660
	0x03996620 MOV X0, X20
	0x03996624 BL 0x1C16D7C
	0x03996628 MOV W21, W0
	0x0399662C MOV X0, X20
	0x03996630 BL 0x1C17238
	0x03996634 TBZ X21, 0x0, 0x399666C
	0x03996638 TBZ X0, 0x0, 0x399667C
	0x0399663C ADRP X8, 0xFFFFFFFFFE261000
	0x03996640 ADD X8, X8, 0xF8C
	0x03996644 B 0x3996690
	0x03996648 CBZ X21, 0x39966B0
	0x0399664C LDR X8, [X19 + 0x10]
	0x03996650 LDR X9, [X19 + 0x20]
	0x03996654 STR X8, [X19 + 0x18]
	0x03996658 STR X9, [X19 + 0x40]
	0x0399665C B 0x3996694
	0x03996660 ADRP X8, 0xFFFFFFFFFE261000
	0x03996664 ADD X8, X8, 0xE4C
	0x03996668 B 0x3996690
	0x0399666C TBZ X0, 0x0, 0x3996688
	0x03996670 ADRP X8, 0xFFFFFFFFFE261000
	0x03996674 ADD X8, X8, 0xEB4
	0x03996678 B 0x3996690
	0x0399667C ADRP X8, 0xFFFFFFFFFE261000
	0x03996680 ADD X8, X8, 0xF40
	0x03996684 B 0x3996690
	0x03996688 ADRP X8, 0xFFFFFFFFFE261000
	0x0399668C ADD X8, X8, 0xE84
	0x03996690 STR X8, [X19 + 0x18]
	0x03996694 ADRP X8, 0xFFFFFFFFFE261000
	0x03996698 ADD X8, X8, 0xDF4
	0x0399669C STR X8, [X19 + 0x38]
	0x039966A0 LDP X20, X19, [X31 + 0x20]
	0x039966A4 LDP X22, X21, [X31 + 0x10]
	0x039966A8 LDR X30, [X31], #0x30
	0x039966AC RET
	0x039966B0 ADRP X1, 0xFFFFFFFFFD185000
	0x039966B4 ADD X1, X1, 0xEE3
	0x039966B8 MOV X0, X31
	0x039966BC BL 0x1C16F3C
	0x039966C0 MOV X1, X31
	0x039966C4 BL 0x1C16DEC
	0x039966C8 LDR X8, [X0 + 0x40]
	0x039966CC LDR X4, [X0 + 0x18]
	0x039966D0 LDR X3, [X0 + 0x28]
	0x039966D4 MOV X0, X8
	0x039966D8 BR X4
	0x039966DC SUB X31, X31, 0x30
	0x039966E0 STP X31, X30, [X31 + 0x18]
	0x039966E4 STP X1, X2, [X31 + 0x8]
	0x039966E8 ADD X1, X31, 0x8
	0x039966EC MOV X2, X3
	0x039966F0 MOV X3, X4
	0x039966F4 BL 0x1C16CB0
	0x039966F8 LDR X30, [X31 + 0x20]
	0x039966FC ADD X31, X31, 0x30
	0x03996700 RET
	0x03996704 MOV X0, X1
	0x03996708 MOV X1, X31
	0x0399670C B 0x1C16CB4
	0x03996710 STR X30, [X31 - 0x20]!
	0x03996714 STP X20, X19, [X31 + 0x10]
	0x03996718 ADRP X19, 0xA4B000
	0x0399671C ADRP X20, 0x7BA000
	0x03996720 LDRB W8, [X19 + 0xAD3]
	0x03996724 LDR X20, [X20 + 0xB60]
	0x03996728 TBNZ X8, 0x0, 0x3996740
	0x0399672C ADRP X0, 0x7BA000
	0x03996730 LDR X0, [X0 + 0xB60]
	0x03996734 BL 0x1C16CF4
	0x03996738 MOVZ W8, 0x1
	0x0399673C STRB W8, [X19 + 0xAD3]
	0x03996740 LDR X0, [X20]
	0x03996744 BL 0x1C16F10
	0x03996748 MOV X1, X31
	0x0399674C MOV X19, X0
	0x03996750 BL 0x33BDD8C
	0x03996754 LDR X8, [X20]
	0x03996758 LDR X8, [X8 + 0xB8]
	0x0399675C STR X19, [X8]
	0x03996760 LDP X20, X19, [X31 + 0x10]
	0x03996764 LDR X30, [X31], #0x20
	0x03996768 RET
	0x0399676C MOV X1, X31
	0x03996770 B 0x33BDD8C
	0x03996774 STR X30, [X31 - 0x10]!
	0x03996778 CBZ X1, 0x3996798
	0x0399677C CBZ X2, 0x3996798
	0x03996780 LDR X0, [X1 + 0x10]
	0x03996784 CBZ X0, 0x3996798
	0x03996788 LDR X1, [X2 + 0x18]
	0x0399678C MOV X2, X31
	0x03996790 LDR X30, [X31], #0x10
	0x03996794 B 0x39B1AA8
	0x03996798 BL 0x1C16F20
	0x0399679C STR X30, [X31 - 0x10]!
	0x039967A0 CBZ X1, 0x39967C0
	0x039967A4 CBZ X2, 0x39967C0
	0x039967A8 LDR X0, [X1 + 0x10]
	0x039967AC CBZ X0, 0x39967C0
	0x039967B0 LDR X1, [X2 + 0x18]
	0x039967B4 MOV X2, X31
	0x039967B8 LDR X30, [X31], #0x10
	0x039967BC B 0x39B1B0C
	0x039967C0 BL 0x1C16F20
	0x039967C4 STR X30, [X31 - 0x10]!
	0x039967C8 STP X2, X1, [X0 + 0x8]
	0x039967CC STRB W31, [X0]
	0x039967D0 CBZ X1, 0x39967E4
	0x039967D4 MOV X0, X1
	0x039967D8 MOV X1, X2
	0x039967DC LDR X30, [X31], #0x10
	0x039967E0 B 0x398E204
	0x039967E4 BL 0x1C16F20
	0x039967E8 MOVZ W1, 0x1
	0x039967EC B 0x39967F0
	0x039967F0 STP X30, X19, [X31 - 0x10]!
	0x039967F4 LDRB W8, [X0]
	0x039967F8 CBNZ W8, 0x399681C
	0x039967FC MOV X19, X0
	0x03996800 TBZ X1, 0x0, 0x3996814
	0x03996804 LDR X0, [X19 + 0x10]
	0x03996808 CBZ X0, 0x3996824
	0x0399680C LDR X1, [X19 + 0x8]
	0x03996810 BL 0x398E444
	0x03996814 MOVZ W8, 0x1
	0x03996818 STRB W8, [X19]
	0x0399681C LDP X30, X19, [X31], #0x10
	0x03996820 RET
	0x03996824 BL 0x1C16F20
	0x03996828 STP X30, X21, [X31 - 0x20]!
	0x0399682C STP X20, X19, [X31 + 0x10]
	0x03996830 MOV X21, X0
	0x03996834 LDR X0, [X0 + 0x8]
	0x03996838 CBZ X0, 0x399686C
	0x0399683C MOV W19, W2
	0x03996840 MOV X20, X1
	0x03996844 BL 0x3996874
	0x03996848 LDR X0, [X21]
	0x0399684C CBZ X0, 0x399686C
	0x03996850 LDR X1, [X20]
	0x03996854 MOV W2, W19
	0x03996858 BL 0x399694C
	0x0399685C LDR X0, [X20]
	0x03996860 LDP X20, X19, [X31 + 0x10]
	0x03996864 LDP X30, X21, [X31], #0x20
	0x03996868 RET
	0x0399686C BL 0x1C16F20
	0x03996870 RET
	0x03996874 STR X30, [X31 - 0x30]!
	0x03996878 STP X22, X21, [X31 + 0x10]
	0x0399687C STP X20, X19, [X31 + 0x20]
	0x03996880 ADRP X22, 0xA4B000
	0x03996884 ADRP X21, 0x788000
	0x03996888 LDRB W8, [X22 + 0xB03]
	0x0399688C LDR X21, [X21 + 0x730]
	0x03996890 MOV X19, X1
	0x03996894 MOV X20, X0
	0x03996898 TBNZ X8, 0x0, 0x39968BC
	0x0399689C ADRP X0, 0x786000
	0x039968A0 LDR X0, [X0 + 0xA80]
	0x039968A4 BL 0x1C16CF4
	0x039968A8 ADRP X0, 0x788000
	0x039968AC LDR X0, [X0 + 0x730]
	0x039968B0 BL 0x1C16CF4
	0x039968B4 MOVZ W8, 0x1
	0x039968B8 STRB W8, [X22 + 0xB03]
	0x039968BC MOV X0, X20
	0x039968C0 MOV X1, X19
	0x039968C4 BL 0x39996E4
	0x039968C8 LDR X8, [X19]
	0x039968CC LDR X0, [X21]
	0x039968D0 LDR X20, [X20 + 0x10]
	0x039968D4 STR X8, [X31 + 0x8]
	0x039968D8 LDR W8, [X0 + 0xE0]
	0x039968DC CBNZ W8, 0x39968E4
	0x039968E0 BL 0x1C16DFC
	0x039968E4 ADD X0, X31, 0x8
	0x039968E8 BL 0x3997E7C
	0x039968EC CBZ X20, 0x3996944
	0x039968F0 LDR W8, [X20 + 0x18]
	0x039968F4 CMP W0, W8
	0x039968F8 B.CS 0x3996948
	0x039968FC ADD X8, X20, W0, 0x3, SXTW
	0x03996900 LDR X8, [X8 + 0x20]
	0x03996904 CBZ X8, 0x3996944
	0x03996908 LDR X0, [X8 + 0x10]
	0x0399690C CBZ X0, 0x3996944
	0x03996910 ADRP X8, 0x786000
	0x03996914 LDR X8, [X8 + 0xA80]
	0x03996918 LDRH W1, [X19]
	0x0399691C LDR X2, [X8]
	0x03996920 BL 0x2B40178
	0x03996924 LDR X0, [X0]
	0x03996928 CBZ X0, 0x3996944
	0x0399692C LDR X8, [X0]
	0x03996930 LDP X20, X19, [X31 + 0x20]
	0x03996934 LDP X22, X21, [X31 + 0x10]
	0x03996938 LDP X2, X1, [X8 + 0x1A8]
	0x0399693C LDR X30, [X31], #0x30
	0x03996940 BR X2
	0x03996944 BL 0x1C16F20
	0x03996948 BL 0x1C16F28
	0x0399694C SUB X31, X31, 0x40
	0x03996950 STP X30, X23, [X31 + 0x10]
	0x03996954 STP X22, X21, [X31 + 0x20]
	0x03996958 STP X20, X19, [X31 + 0x30]
	0x0399695C ADRP X23, 0xA4B000
	0x03996960 STR X1, [X31 + 0x8]
	0x03996964 ADRP X22, 0x75D000
	0x03996968 LDRB W8, [X23 + 0xAE8]
	0x0399696C LDR X22, [X22 + 0x5A8]
	0x03996970 MOV W21, W2
	0x03996974 MOV X20, X1
	0x03996978 MOV X19, X0
	0x0399697C TBNZ X8, 0x0, 0x3996994
	0x03996980 ADRP X0, 0x75D000
	0x03996984 LDR X0, [X0 + 0x5A8]
	0x03996988 BL 0x1C16CF4
	0x0399698C MOVZ W8, 0x1
	0x03996990 STRB W8, [X23 + 0xAE8]
	0x03996994 LDR X0, [X22]
	0x03996998 LDR W22, [X19 + 0x40]
	0x0399699C LDR W8, [X0 + 0xE0]
	0x039969A0 CBNZ W8, 0x39969A8
	0x039969A4 BL 0x1C16DFC
	0x039969A8 MOV W0, W22
	0x039969AC MOV W1, W21
	0x039969B0 MOV X2, X31
	0x039969B4 BL 0x337EDF0
	0x039969B8 LDR X8, [X19 + 0x38]
	0x039969BC STR W0, [X19 + 0x40]
	0x039969C0 CBZ X8, 0x39969F8
	0x039969C4 LDR W9, [X8 + 0x18]
	0x039969C8 CMP W9, W21
	0x039969CC B.LS 0x39969FC
	0x039969D0 ADD X8, X8, W21, 0x3, SXTW
	0x039969D4 ADD X1, X31, 0x8
	0x039969D8 MOV X0, X19
	0x039969DC STR X20, [X8 + 0x20]
	0x039969E0 BL 0x3996D84
	0x039969E4 LDP X20, X19, [X31 + 0x30]
	0x039969E8 LDP X22, X21, [X31 + 0x20]
	0x039969EC LDP X30, X23, [X31 + 0x10]
	0x039969F0 ADD X31, X31, 0x40
	0x039969F4 RET
	0x039969F8 BL 0x1C16F20
	0x039969FC BL 0x1C16F28
	0x03996A00 STP X30, X21, [X31 - 0x20]!
	0x03996A04 STP X20, X19, [X31 + 0x10]
	0x03996A08 MOV W20, W2
	0x03996A0C MOV X19, X1
	0x03996A10 MOV X21, X0
	0x03996A14 TBZ X2, 0x1, 0x3996A28
	0x03996A18 LDR X0, [X21 + 0x8]
	0x03996A1C CBZ X0, 0x3996A84
	0x03996A20 MOV X1, X19
	0x03996A24 BL 0x3996874
	0x03996A28 TBZ X20, 0x0, 0x3996A60
	0x03996A2C LDR X0, [X21 + 0x8]
	0x03996A30 CBZ X0, 0x3996A84
	0x03996A34 MOV X1, X19
	0x03996A38 BL 0x398FDFC
	0x03996A3C TBNZ X0, 0x0, 0x3996A60
	0x03996A40 LDR X0, [X21 + 0x8]
	0x03996A44 CBZ X0, 0x3996A84
	0x03996A48 MOV X1, X19
	0x03996A4C BL 0x3996A88
	0x03996A50 TBZ X0, 0x0, 0x3996A60
	0x03996A54 MOV X0, X21
	0x03996A58 MOV X1, X19
	0x03996A5C BL 0x3996B24
	0x03996A60 LDR X0, [X21]
	0x03996A64 CBZ X0, 0x3996A84
	0x03996A68 LDR X1, [X19]
	0x03996A6C MOV W2, W20
	0x03996A70 BL 0x3996B64
	0x03996A74 LDR X0, [X19]
	0x03996A78 LDP X20, X19, [X31 + 0x10]
	0x03996A7C LDP X30, X21, [X31], #0x20
	0x03996A80 RET
	0x03996A84 BL 0x1C16F20
	0x03996A88 STR X30, [X31 - 0x30]!
	0x03996A8C STP X22, X21, [X31 + 0x10]
	0x03996A90 STP X20, X19, [X31 + 0x20]
	0x03996A94 ADRP X22, 0xA4B000
	0x03996A98 ADRP X21, 0x7BA000
	0x03996A9C LDRB W8, [X22 + 0xAFB]
	0x03996AA0 LDR X21, [X21 + 0xA88]
	0x03996AA4 MOV X19, X1
	0x03996AA8 MOV X20, X0
	0x03996AAC TBNZ X8, 0x0, 0x3996AC4
	0x03996AB0 ADRP X0, 0x7BA000
	0x03996AB4 LDR X0, [X0 + 0xA88]
	0x03996AB8 BL 0x1C16CF4
	0x03996ABC MOVZ W8, 0x1
	0x03996AC0 STRB W8, [X22 + 0xAFB]
	0x03996AC4 LDR X8, [X19]
	0x03996AC8 LDR X0, [X21]
	0x03996ACC STR X8, [X31 + 0x8]
	0x03996AD0 LDR W8, [X0 + 0xE0]
	0x03996AD4 CBNZ W8, 0x3996ADC
	0x03996AD8 BL 0x1C16DFC
	0x03996ADC ADD X0, X31, 0x8
	0x03996AE0 BL 0x398D2E8
	0x03996AE4 TBZ X0, 0x0, 0x3996B08
	0x03996AE8 MOV X0, X20
	0x03996AEC MOV X1, X19
	0x03996AF0 BL 0x3991AE4
	0x03996AF4 CBZ X0, 0x3996B20
	0x03996AF8 LDR X8, [X0]
	0x03996AFC LDP X9, X1, [X8 + 0x1B8]
	0x03996B00 BLR X9
	0x03996B04 B 0x3996B0C
	0x03996B08 MOV W0, W31
	0x03996B0C LDP X20, X19, [X31 + 0x20]
	0x03996B10 LDP X22, X21, [X31 + 0x10]
	0x03996B14 AND W0, W0, 0x1
	0x03996B18 LDR X30, [X31], #0x30
	0x03996B1C RET
	0x03996B20 BL 0x1C16F20
	0x03996B24 STR X30, [X31 - 0x20]!
	0x03996B28 STP X20, X19, [X31 + 0x10]
	0x03996B2C MOV X20, X0
	0x03996B30 LDR X0, [X0 + 0x8]
	0x03996B34 CBZ X0, 0x3996B60
	0x03996B38 MOV X19, X1
	0x03996B3C BL 0x3996874
	0x03996B40 LDR X0, [X20]
	0x03996B44 CBZ X0, 0x3996B60
	0x03996B48 MOV X1, X19
	0x03996B4C BL 0x3996D84
	0x03996B50 LDR X0, [X19]
	0x03996B54 LDP X20, X19, [X31 + 0x10]
	0x03996B58 LDR X30, [X31], #0x20
	0x03996B5C RET
	0x03996B60 BL 0x1C16F20
	0x03996B64 STR X30, [X31 - 0x20]!
	0x03996B68 STP X20, X19, [X31 + 0x10]
	0x03996B6C MOV W20, W2
	0x03996B70 MOV X19, X0
	0x03996B74 STR X1, [X31 + 0x8]
	0x03996B78 STUR X1, [X0 + 0x2C]
	0x03996B7C TBZ X2, 0x0, 0x3996B8C
	0x03996B80 ADD X1, X31, 0x8
	0x03996B84 MOV X0, X19
	0x03996B88 BL 0x3996C8C
	0x03996B8C TBZ X20, 0x1, 0x3996B9C
	0x03996B90 ADD X1, X31, 0x8
	0x03996B94 MOV X0, X19
	0x03996B98 BL 0x3996D84
	0x03996B9C LDP X20, X19, [X31 + 0x10]
	0x03996BA0 LDR X30, [X31], #0x20
	0x03996BA4 RET
	0x03996BA8 SUB X31, X31, 0x130
	0x03996BAC STP X29, X30, [X31 + 0x100]
	0x03996BB0 STP X22, X21, [X31 + 0x110]
	0x03996BB4 STP X20, X19, [X31 + 0x120]
	0x03996BB8 STR X31, [X31 + 0xF8]
	0x03996BBC MOV X20, X0
	0x03996BC0 LDR X0, [X0 + 0x8]
	0x03996BC4 CBZ X0, 0x3996C88
	0x03996BC8 MOV X19, X1
	0x03996BCC BL 0x398FDFC
	0x03996BD0 TBNZ X0, 0x0, 0x3996C5C
	0x03996BD4 LDR X0, [X20 + 0x8]
	0x03996BD8 CBZ X0, 0x3996C88
	0x03996BDC MOV X1, X19
	0x03996BE0 BL 0x3996A88
	0x03996BE4 TBZ X0, 0x0, 0x3996C5C
	0x03996BE8 LDR X0, [X20 + 0x8]
	0x03996BEC CBZ X0, 0x3996C88
	0x03996BF0 MOV X1, X19
	0x03996BF4 BL 0x3991AE4
	0x03996BF8 CBZ X0, 0x3996C88
	0x03996BFC ADRP X8, 0xFFFFFFFFFD156000
	0x03996C00 LDR V0, [X8 + 0xBB]
	0x03996C04 MOVZ W8, 0x1
	0x03996C08 STRB W8, [X0 + 0x96]
	0x03996C0C ADD X1, X0, 0x30
	0x03996C10 STUR V0, [X0 + 0x98]
	0x03996C14 LDR X21, [X20 + 0x10]
	0x03996C18 ADD X0, X31, 0x80
	0x03996C1C MOVZ W2, 0x78
	0x03996C20 BL 0x3EB1AC0
	0x03996C24 CBZ X21, 0x3996C88
	0x03996C28 ADD X0, X31, 0x8
	0x03996C2C ADD X1, X31, 0x80
	0x03996C30 MOVZ W2, 0x78
	0x03996C34 BL 0x3EB1AC0
	0x03996C38 ADD X1, X31, 0x8
	0x03996C3C ADD X2, X31, 0xF8
	0x03996C40 MOV X0, X21
	0x03996C44 ADD X22, X31, 0xF8
	0x03996C48 BL 0x3991548
	0x03996C4C TBNZ X0, 0x0, 0x3996C70
	0x03996C50 MOV X0, X20
	0x03996C54 MOV X1, X19
	0x03996C58 BL 0x3996B24
	0x03996C5C LDR X0, [X20]
	0x03996C60 CBZ X0, 0x3996C88
	0x03996C64 MOV X1, X19
	0x03996C68 BL 0x3996C8C
	0x03996C6C MOV X22, X19
	0x03996C70 LDR X0, [X22]
	0x03996C74 LDP X20, X19, [X31 + 0x120]
	0x03996C78 LDP X22, X21, [X31 + 0x110]
	0x03996C7C LDP X29, X30, [X31 + 0x100]
	0x03996C80 ADD X31, X31, 0x130
	0x03996C84 RET
	0x03996C88 BL 0x1C16F20
	0x03996C8C STR X30, [X31 - 0x30]!
	0x03996C90 STP X22, X21, [X31 + 0x10]
	0x03996C94 STP X20, X19, [X31 + 0x20]
	0x03996C98 ADRP X22, 0xA4B000
	0x03996C9C ADRP X21, 0x788000
	0x03996CA0 LDRB W8, [X22 + 0xAE5]
	0x03996CA4 LDR X21, [X21 + 0x730]
	0x03996CA8 MOV X19, X1
	0x03996CAC MOV X20, X0
	0x03996CB0 TBNZ X8, 0x0, 0x3996CD4
	0x03996CB4 ADRP X0, 0x7BA000
	0x03996CB8 LDR X0, [X0 + 0xE28]
	0x03996CBC BL 0x1C16CF4
	0x03996CC0 ADRP X0, 0x788000
	0x03996CC4 LDR X0, [X0 + 0x730]
	0x03996CC8 BL 0x1C16CF4
	0x03996CCC MOVZ W8, 0x1
	0x03996CD0 STRB W8, [X22 + 0xAE5]
	0x03996CD4 LDR X8, [X19]
	0x03996CD8 LDR X0, [X21]
	0x03996CDC LDR X20, [X20 + 0x50]
	0x03996CE0 STR X8, [X31 + 0x8]
	0x03996CE4 LDR W8, [X0 + 0xE0]
	0x03996CE8 CBNZ W8, 0x3996CF0
	0x03996CEC BL 0x1C16DFC
	0x03996CF0 ADD X0, X31, 0x8
	0x03996CF4 BL 0x3997E7C
	0x03996CF8 CBZ X20, 0x3996D7C
	0x03996CFC LDR W8, [X20 + 0x18]
	0x03996D00 CMP W0, W8
	0x03996D04 B.CS 0x3996D80
	0x03996D08 ADD X8, X20, W0, 0x3, SXTW
	0x03996D0C LDR X0, [X8 + 0x20]
	0x03996D10 CBZ X0, 0x3996D7C
	0x03996D14 ADRP X9, 0x7BA000
	0x03996D18 LDR X9, [X9 + 0xE28]
	0x03996D1C LDR W10, [X0 + 0x1C]
	0x03996D20 LDR X1, [X19]
	0x03996D24 LDR X8, [X0 + 0x10]
	0x03996D28 LDR X9, [X9]
	0x03996D2C ADD W10, W10, 0x1
	0x03996D30 STR W10, [X0 + 0x1C]
	0x03996D34 CBZ X8, 0x3996D7C
	0x03996D38 LDRSW X10, [X0 + 0x18]
	0x03996D3C LDR W11, [X8 + 0x18]
	0x03996D40 CMP W10, W11
	0x03996D44 B.CS 0x3996D5C
	0x03996D48 ADD W9, W10, 0x1
	0x03996D4C ADD X8, X8, X10, 0x3, LSL
	0x03996D50 STR W9, [X0 + 0x18]
	0x03996D54 STR X1, [X8 + 0x20]
	0x03996D58 B 0x3996D6C
	0x03996D5C LDR X8, [X9 + 0x20]
	0x03996D60 LDR X8, [X8 + 0xC0]
	0x03996D64 LDR X2, [X8 + 0x70]
	0x03996D68 BL 0x30499F4
	0x03996D6C LDP X20, X19, [X31 + 0x20]
	0x03996D70 LDP X22, X21, [X31 + 0x10]
	0x03996D74 LDR X30, [X31], #0x30
	0x03996D78 RET
	0x03996D7C BL 0x1C16F20
	0x03996D80 BL 0x1C16F28
	0x03996D84 STR X30, [X31 - 0x30]!
	0x03996D88 STP X22, X21, [X31 + 0x10]
	0x03996D8C STP X20, X19, [X31 + 0x20]
	0x03996D90 ADRP X22, 0xA4B000
	0x03996D94 ADRP X21, 0x788000
	0x03996D98 LDRB W8, [X22 + 0xAE4]
	0x03996D9C LDR X21, [X21 + 0x730]
	0x03996DA0 MOV X19, X1
	0x03996DA4 MOV X20, X0
	0x03996DA8 TBNZ X8, 0x0, 0x3996DCC
	0x03996DAC ADRP X0, 0x7BA000
	0x03996DB0 LDR X0, [X0 + 0xE28]
	0x03996DB4 BL 0x1C16CF4
	0x03996DB8 ADRP X0, 0x788000
	0x03996DBC LDR X0, [X0 + 0x730]
	0x03996DC0 BL 0x1C16CF4
	0x03996DC4 MOVZ W8, 0x1
	0x03996DC8 STRB W8, [X22 + 0xAE4]
	0x03996DCC LDR X8, [X19]
	0x03996DD0 LDR X0, [X21]
	0x03996DD4 LDR X20, [X20 + 0x58]
	0x03996DD8 STR X8, [X31 + 0x8]
	0x03996DDC LDR W8, [X0 + 0xE0]
	0x03996DE0 CBNZ W8, 0x3996DE8
	0x03996DE4 BL 0x1C16DFC
	0x03996DE8 ADD X0, X31, 0x8
	0x03996DEC BL 0x3997E7C
	0x03996DF0 CBZ X20, 0x3996E74
	0x03996DF4 LDR W8, [X20 + 0x18]
	0x03996DF8 CMP W0, W8
	0x03996DFC B.CS 0x3996E78
	0x03996E00 ADD X8, X20, W0, 0x3, SXTW
	0x03996E04 LDR X0, [X8 + 0x20]
	0x03996E08 CBZ X0, 0x3996E74
	0x03996E0C ADRP X9, 0x7BA000
	0x03996E10 LDR X9, [X9 + 0xE28]
	0x03996E14 LDR W10, [X0 + 0x1C]
	0x03996E18 LDR X1, [X19]
	0x03996E1C LDR X8, [X0 + 0x10]
	0x03996E20 LDR X9, [X9]
	0x03996E24 ADD W10, W10, 0x1
	0x03996E28 STR W10, [X0 + 0x1C]
	0x03996E2C CBZ X8, 0x3996E74
	0x03996E30 LDRSW X10, [X0 + 0x18]
	0x03996E34 LDR W11, [X8 + 0x18]
	0x03996E38 CMP W10, W11
	0x03996E3C B.CS 0x3996E54
	0x03996E40 ADD W9, W10, 0x1
	0x03996E44 ADD X8, X8, X10, 0x3, LSL
	0x03996E48 STR W9, [X0 + 0x18]
	0x03996E4C STR X1, [X8 + 0x20]
	0x03996E50 B 0x3996E64
	0x03996E54 LDR X8, [X9 + 0x20]
	0x03996E58 LDR X8, [X8 + 0xC0]
	0x03996E5C LDR X2, [X8 + 0x70]
	0x03996E60 BL 0x30499F4
	0x03996E64 LDP X20, X19, [X31 + 0x20]
	0x03996E68 LDP X22, X21, [X31 + 0x10]
	0x03996E6C LDR X30, [X31], #0x30
	0x03996E70 RET
	0x03996E74 BL 0x1C16F20
	0x03996E78 BL 0x1C16F28
	0x03996E7C STR X30, [X31 - 0x20]!
	0x03996E80 STP X20, X19, [X31 + 0x10]
	0x03996E84 MOV X20, X0
	0x03996E88 LDR X0, [X0 + 0x8]
	0x03996E8C CBZ X0, 0x3996EC8
	0x03996E90 MOV X19, X1
	0x03996E94 BL 0x3996874
	0x03996E98 LDR X0, [X20]
	0x03996E9C CBZ X0, 0x3996EC8
	0x03996EA0 MOV X1, X19
	0x03996EA4 BL 0x3996D84
	0x03996EA8 LDR X0, [X20]
	0x03996EAC CBZ X0, 0x3996EC8
	0x03996EB0 MOV X1, X19
	0x03996EB4 BL 0x3996C8C
	0x03996EB8 LDR X0, [X19]
	0x03996EBC LDP X20, X19, [X31 + 0x10]
	0x03996EC0 LDR X30, [X31], #0x20
	0x03996EC4 RET
	0x03996EC8 BL 0x1C16F20
	0x03996ECC STR X30, [X31 - 0x20]!
	0x03996ED0 STP X20, X19, [X31 + 0x10]
	0x03996ED4 LDR X8, [X0]
	0x03996ED8 CBZ X8, 0x3996F18
	0x03996EDC MOV X19, X0
	0x03996EE0 LDR X0, [X0 + 0x8]
	0x03996EE4 CBZ X0, 0x3996F18
	0x03996EE8 LDR W2, [X8 + 0x18]
	0x03996EEC BL 0x398CB08
	0x03996EF0 STR X0, [X31 + 0x8]
	0x03996EF4 MOV X20, X0
	0x03996EF8 LDR X0, [X19]
	0x03996EFC CBZ X0, 0x3996F18
	0x03996F00 ADD X1, X31, 0x8
	0x03996F04 BL 0x3996F1C
	0x03996F08 MOV X0, X20
	0x03996F0C LDP X20, X19, [X31 + 0x10]
	0x03996F10 LDR X30, [X31], #0x20
	0x03996F14 RET
	0x03996F18 BL 0x1C16F20
	0x03996F1C STR X30, [X31 - 0x30]!
	0x03996F20 STP X22, X21, [X31 + 0x10]
	0x03996F24 STP X20, X19, [X31 + 0x20]
	0x03996F28 ADRP X22, 0xA4B000
	0x03996F2C ADRP X21, 0x788000
	0x03996F30 LDRB W8, [X22 + 0xAE6]
	0x03996F34 LDR X21, [X21 + 0x730]
	0x03996F38 MOV X19, X1
	0x03996F3C MOV X20, X0
	0x03996F40 TBNZ X8, 0x0, 0x3996F64
	0x03996F44 ADRP X0, 0x7BA000
	0x03996F48 LDR X0, [X0 + 0xE28]
	0x03996F4C BL 0x1C16CF4
	0x03996F50 ADRP X0, 0x788000
	0x03996F54 LDR X0, [X0 + 0x730]
	0x03996F58 BL 0x1C16CF4
	0x03996F5C MOVZ W8, 0x1
	0x03996F60 STRB W8, [X22 + 0xAE6]
	0x03996F64 LDR X8, [X19]
	0x03996F68 LDR X0, [X21]
	0x03996F6C LDR X20, [X20 + 0x60]
	0x03996F70 STR X8, [X31 + 0x8]
	0x03996F74 LDR W8, [X0 + 0xE0]
	0x03996F78 CBNZ W8, 0x3996F80
	0x03996F7C BL 0x1C16DFC
	0x03996F80 ADD X0, X31, 0x8
	0x03996F84 BL 0x3997E7C
	0x03996F88 CBZ X20, 0x399700C
	0x03996F8C LDR W8, [X20 + 0x18]
	0x03996F90 CMP W0, W8
	0x03996F94 B.CS 0x3997010
	0x03996F98 ADD X8, X20, W0, 0x3, SXTW
	0x03996F9C LDR X0, [X8 + 0x20]
	0x03996FA0 CBZ X0, 0x399700C
	0x03996FA4 ADRP X9, 0x7BA000
	0x03996FA8 LDR X9, [X9 + 0xE28]
	0x03996FAC LDR W10, [X0 + 0x1C]
	0x03996FB0 LDR X1, [X19]
	0x03996FB4 LDR X8, [X0 + 0x10]
	0x03996FB8 LDR X9, [X9]
	0x03996FBC ADD W10, W10, 0x1
	0x03996FC0 STR W10, [X0 + 0x1C]
	0x03996FC4 CBZ X8, 0x399700C
	0x03996FC8 LDRSW X10, [X0 + 0x18]
	0x03996FCC LDR W11, [X8 + 0x18]
	0x03996FD0 CMP W10, W11
	0x03996FD4 B.CS 0x3996FEC
	0x03996FD8 ADD W9, W10, 0x1
	0x03996FDC ADD X8, X8, X10, 0x3, LSL
	0x03996FE0 STR W9, [X0 + 0x18]
	0x03996FE4 STR X1, [X8 + 0x20]
	0x03996FE8 B 0x3996FFC
	0x03996FEC LDR X8, [X9 + 0x20]
	0x03996FF0 LDR X8, [X8 + 0xC0]
	0x03996FF4 LDR X2, [X8 + 0x70]
	0x03996FF8 BL 0x30499F4
	0x03996FFC LDP X20, X19, [X31 + 0x20]
	0x03997000 LDP X22, X21, [X31 + 0x10]
	0x03997004 LDR X30, [X31], #0x30
	0x03997008 RET
	0x0399700C BL 0x1C16F20
	0x03997010 BL 0x1C16F28
	0x03997014 SUB X31, X31, 0xA0
	0x03997018 STR X30, [X31 + 0x80]
	0x0399701C STP X20, X19, [X31 + 0x90]
	0x03997020 MOVI V0.2D, 0x0
	0x03997024 STR X31, [X31 + 0x70]
	0x03997028 STP V0, V0, [X31 + 0x50]
	0x0399702C STP V0, V0, [X31 + 0x30]
	0x03997030 STP V0, V0, [X31 + 0x10]
	0x03997034 STR V0, [X31]
	0x03997038 MOV X19, X0
	0x0399703C LDR X0, [X0 + 0x8]
	0x03997040 CBZ X0, 0x3997094
	0x03997044 ADD X8, X31, 0x0
	0x03997048 BL 0x398D154
	0x0399704C LDR X8, [X19]
	0x03997050 CBZ X8, 0x3997094
	0x03997054 LDR X0, [X19 + 0x8]
	0x03997058 CBZ X0, 0x3997094
	0x0399705C LDR W2, [X8 + 0x18]
	0x03997060 ADD X1, X31, 0x0
	0x03997064 BL 0x398CB08
	0x03997068 STR X0, [X31 + 0x88]
	0x0399706C MOV X20, X0
	0x03997070 LDR X0, [X19]
	0x03997074 CBZ X0, 0x3997094
	0x03997078 ADD X1, X31, 0x88
	0x0399707C BL 0x3996F1C
	0x03997080 MOV X0, X20
	0x03997084 LDP X20, X19, [X31 + 0x90]
	0x03997088 LDR X30, [X31 + 0x80]
	0x0399708C ADD X31, X31, 0xA0
	0x03997090 RET
	0x03997094 BL 0x1C16F20
	0x03997098 STP X30, X19, [X31 - 0x10]!
	0x0399709C LDR X0, [X0]
	0x039970A0 CBZ X0, 0x39970BC
	0x039970A4 MOV X19, X1
	0x039970A8 LDR X1, [X1]
	0x039970AC BL 0x39970C0
	0x039970B0 LDR X0, [X19]
	0x039970B4 LDP X30, X19, [X31], #0x10
	0x039970B8 RET
	0x039970BC BL 0x1C16F20
	0x039970C0 STP X30, X21, [X31 - 0x20]!
	0x039970C4 STP X20, X19, [X31 + 0x10]
	0x039970C8 ADRP X21, 0xA4A000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 464
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move [X31+8], X8
	016 Move X8, [X8+40]
	017 Move X19, 0xA4C000
	018 Move X23, X0
	019 Add X27, X31, 240
	020 Move [X31+456], X8
	021 Move W8, [X19+2766]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {106}
	026 Move X0, 0x7BB000
	027 Move X0, [X0+3512]
	028 Call 0x1C17CF4
	029 Move X0, 0x7BB000
	030 Move X0, [X0+2608]
	031 Call 0x1C17CF4
	032 Move X0, 0x7BB000
	033 Move X0, [X0+2856]
	034 Call 0x1C17CF4
	035 Move X0, 0x7BB000
	036 Move X0, [X0+3040]
	037 Call 0x1C17CF4
	038 Move X0, 0x7BB000
	039 Move X0, [X0+3048]
	040 Call 0x1C17CF4
	041 Move X0, 0x7BB000
	042 Move X0, [X0+2864]
	043 Call 0x1C17CF4
	044 Move X0, 0x789000
	045 Move X0, [X0+2840]
	046 Call 0x1C17CF4
	047 Move X0, 0x7BB000
	048 Move X0, [X0+3064]
	049 Call 0x1C17CF4
	050 Move X0, 0x7BB000
	051 Move X0, [X0+3072]
	052 Call 0x1C17CF4
	053 Move X0, 0x789000
	054 Move X0, [X0+2856]
	055 Call 0x1C17CF4
	056 Move X0, 0x789000
	057 Move X0, [X0+2872]
	058 Call 0x1C17CF4
	059 Move X0, 0x7BB000
	060 Move X0, [X0+3080]
	061 Call 0x1C17CF4
	062 Move X0, 0x7B9000
	063 Move X0, [X0+3624]
	064 Call 0x1C17CF4
	065 Move X0, 0x75F000
	066 Move X0, [X0+3600]
	067 Call 0x1C17CF4
	068 Move X0, 0x7BB000
	069 Move X0, [X0+3520]
	070 Call 0x1C17CF4
	071 Move X0, 0x7BB000
	072 Move X0, [X0+3528]
	073 Call 0x1C17CF4
	074 Move X0, 0x789000
	075 Move X0, [X0+2896]
	076 Call 0x1C17CF4
	077 Move X0, 0x7BB000
	078 Move X0, [X0+3088]
	079 Call 0x1C17CF4
	080 Move X0, 0x762000
	081 Move X0, [X0+2928]
	082 Call 0x1C17CF4
	083 Move X0, 0x786000
	084 Move X0, [X0+1944]
	085 Call 0x1C17CF4
	086 Move X0, 0x7BB000
	087 Move X0, [X0+3536]
	088 Call 0x1C17CF4
	089 Move X0, 0x7BB000
	090 Move X0, [X0+3544]
	091 Call 0x1C17CF4
	092 Move X0, 0x75F000
	093 Move X0, [X0+3632]
	094 Call 0x1C17CF4
	095 Move X0, 0x7BB000
	096 Move X0, [X0+3552]
	097 Call 0x1C17CF4
	098 Move X0, 0x7BB000
	099 Move X0, [X0+2240]
	100 Call 0x1C17CF4
	101 Move X0, 0x789000
	102 Move X0, [X0+1840]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X19+2766], W8
	106 NotImplemented "Instruction MOVI not yet implemented."
	107 Move [X27+32], X31
	108 Move [X27+40], X31
	109 Move [X31+208], X31
	110 Move [X31+216], X31
	111 Move [X31+224], X31
	112 Move [X31+176], X31
	113 Move [X31+184], X31
	114 Move [X31+192], X31
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Move [X31+174], W31
	117 Move [X31+152], X31
	118 Move [X31+160], X31
	119 Move [X31+144], X31
	120 Move [X31+139], W31
	121 Move [X31+136], W31
	122 Move [X27+144], X31
	123 Move [X27+152], X31
	124 Move [X27+1], V0
	125 Move [X31+15], V0
	126 Move [X31+400], W31
	127 Move W8, [X23+80]
	128 Compare W8, 0
	129 JumpIfEqual {148}
	130 Move X8, [X31+8]
	131 Move X8, [X8+40]
	132 Move X9, [X31+456]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X31, X31, 464
	135 Move X20, [X31+80]
	136 Move X19, [X31+88]
	137 Move X22, [X31+64]
	138 Move X21, [X31+72]
	139 Move X24, [X31+48]
	140 Move X23, [X31+56]
	141 Move X26, [X31+32]
	142 Move X25, [X31+40]
	143 Move X28, [X31+16]
	144 Move X27, [X31+24]
	145 Move X29, [X31+96]
	146 Move X30, [X31+104]
	147 Return 
	148 Move X19, 0x7BB000
	149 Move X19, [X19+2240]
	150 Move X0, [X19]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X20, 0xA4C000
	156 Move W8, [X20+2883]
	157 Compare W8, 0
	158 JumpIfNotEqual {164}
	159 Move X0, 0x7BB000
	160 Move X0, [X0+2240]
	161 Call 0x1C17CF4
	162 Move W8, 1
	163 Move [X20+2883], W8
	164 Move X0, [X19]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X19]
	170 Move X8, [X0+184]
	171 Move W8, [X8+16]
	172 Compare W8, 0
	173 JumpIfEqual {977}
	174 Move X0, [X23+176]
	175 Compare X0, 0
	176 JumpIfEqual {976}
	177 Move X8, 0x7BB000
	178 Move X1, [X23+160]
	179 Move X8, [X8+2608]
	180 Add X2, X31, 280
	181 Move X3, [X8]
	182 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {219}
	187 Move X0, [X19]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {193}
	191 Call 0x1C17DFC
	192 Move X0, [X19]
	193 Move X8, [X0+184]
	194 Move X8, [X8+40]
	195 Compare X8, 0
	196 JumpIfEqual {203}
	197 Move X2, [X23+160]
	198 Move X9, [X8+24]
	199 Move X0, [X8+64]
	200 Move X3, [X8+40]
	201 Move X1, X23
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X8, 0x7BB000
	204 Move X8, [X8+3552]
	205 Move X0, [X8]
	206 Call 0x1C17F10
	207 Move X20, X0
	208 Call RenderGraphDebugData..ctor, X0
	209 Move [X27+40], X20
	210 Move X0, [X23+176]
	211 Compare X0, 0
	212 JumpIfEqual {976}
	213 Move X8, 0x7BB000
	214 Move X1, [X23+160]
	215 Move X8, [X8+3512]
	216 Move X2, X20
	217 Move X3, [X8]
	218 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	219 Move X0, [X27+40]
	220 Compare X0, 0
	221 JumpIfEqual {976}
	222 Call RenderGraphDebugData.Clear, X0
	223 Move X26, 0x786000
	224 Move X28, 0x7BB000
	225 Move X8, [X23+120]
	226 Move X26, [X26+1944]
	227 Move X28, [X28+3520]
	228 Move [X31+56], X23
	229 Move X19, 0x75F000
	230 Move X19, [X19+3632]
	231 Move W20, W31
	232 Compare X8, 0
	233 JumpIfEqual {976}
	234 Move W21, W31
	235 Move X29, W20
	236 Move W9, [X8+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Add X9, X8, X29
	239 Move X0, [X9+32]
	240 Compare X0, 0
	241 JumpIfEqual {976}
	242 Move W9, [X0+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X8, 0x7BB000
	245 Move X8, [X8+3040]
	246 Move W1, W21
	247 Move X2, [X8]
	248 Call DynamicArray`1<CompiledResourceInfo>.get_Item, X0, X1
	249 Move [X27+16], X31
	250 Move [X31+240], X31
	251 Move [X31+248], X31
	252 Move X8, [X23+16]
	253 Compare X8, 0
	254 JumpIfEqual {976}
	255 Move X22, X0
	256 Move X0, X8
	257 Move W1, W20
	258 Move W2, W21
	259 Call RenderGraphResourceRegistry.GetRenderGraphResourceName, X0, X1, X2
	260 Move [X31+240], X0
	261 Move X0, [X23+16]
	262 Compare X0, 0
	263 JumpIfEqual {976}
	264 Move W1, W20
	265 Move W2, W21
	266 Call RenderGraphResourceRegistry.IsRenderGraphResourceImported, X0, X1, X2
	267 And W8, W0, 1
	268 NotImplemented "Instruction MOVI not yet implemented."
	269 Move W24, W0
	270 Move [X31+248], W8
	271 Move [X27+12], D0
	272 Move X0, [X19]
	273 Move X25, [X22+8]
	274 Call 0x1C17F10
	275 Move X2, [X26]
	276 Move X1, X25
	277 Move X23, X0
	278 Call List`1<Int32>..ctor, X0, X1
	279 Move [X27+24], X23
	280 Move X0, [X19]
	281 Move X22, [X22]
	282 Call 0x1C17F10
	283 Move X2, [X26]
	284 Move X1, X22
	285 Move X25, X0
	286 Call List`1<Int32>..ctor, X0, X1
	287 Move [X27+32], X25
	288 Move TEMP, X24
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfNotEqual {298}
	292 Add X1, X31, 240
	293 Move X2, X23
	294 Call RenderGraph.UpdateImportedResourceLifeTime, X0, X1, X2
	295 Move X2, [X27+32]
	296 Add X1, X31, 240
	297 Call RenderGraph.UpdateImportedResourceLifeTime, X0, X1, X2
	298 Move X8, [X27+40]
	299 Compare X8, 0
	300 JumpIfEqual {976}
	301 Move X8, [X8+24]
	302 Compare X8, 0
	303 JumpIfEqual {976}
	304 Move W9, [X8+24]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Add X8, X8, X29
	307 Move V0, [X31+15]
	308 Move V1, [X27+1]
	309 Move X9, [X27+32]
	310 Move X0, [X8+32]
	311 Move [X27+176], V0
	312 Move [X27+184], V1
	313 Move [X27+208], X9
	314 Compare X0, 0
	315 JumpIfEqual {976}
	316 Move V0, [X27+176]
	317 Move V1, [X27+192]
	318 Move X8, [X27+208]
	319 Move X10, [X28]
	320 Move [X27+48], V0
	321 Move [X27+56], V1
	322 Move [X27+80], X8
	323 Move W9, [X0+28]
	324 Move X8, [X0+16]
	325 Add W9, W9, 1
	326 Move [X0+28], W9
	327 Compare X8, 0
	328 JumpIfEqual {976}
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Move W11, [X8+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Add W10, W9, 1
	333 Move [X0+24], W10
	334 Move X10, [X27+80]
	335 Move V1, [X27+48]
	336 Move V0, [X27+64]
	337 Move W11, 40
	338 NotImplemented "Instruction MADD not yet implemented."
	339 Move [X8+64], X10
	340 Move [X8+32], V1
	341 Move [X8+40], V0
	342 Move X8, [X10+32]
	343 Move V0, [X27+48]
	344 Move V1, [X27+64]
	345 Move X9, [X27+80]
	346 Add X1, X31, 336
	347 Move X8, [X8+192]
	348 Move X2, [X8+112]
	349 Move [X27+96], V0
	350 Move [X27+104], V1
	351 Move [X27+128], X9
	352 Call List`1<ResourceDebugData>.AddWithResize, X0, X1
	353 Move X23, [X31+56]
	354 Add W21, W21, 1
	355 Move X8, [X23+120]
	356 Compare X8, 0
	357 JumpIfNotEqual {236}
	358 Add W20, W20, 1
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X0, [X23+128]
	361 Compare X0, 0
	362 JumpIfEqual {976}
	363 Add X9, X31, 336
	364 Add X8, X31, 416
	365 Add X10, X31, 288
	366 Add X11, X9, 9
	367 Add X9, X9, 16
	368 Add X20, X8, 9
	369 Add X26, X8, 16
	370 Move [X31+88], X9
	371 Move [X31+96], X11
	372 Add X28, X8, 20
	373 Add X11, X10, 9
	374 Add X9, X10, 20
	375 Add X8, X8, 37
	376 Move W1, W31
	377 Move [X31+72], X9
	378 Move [X31+80], X11
	379 Move [X31+16], X8
	380 Move W8, [X0+24]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X8, 0x7BB000
	383 Move X8, [X8+2856]
	384 Move [X31+108], W1
	385 Move X2, [X8]
	386 Call DynamicArray`1<CompiledPassInfo>.get_Item, X0, X1
	387 NotImplemented "Instruction STRH not yet implemented."
	388 Move [X31+238], W31
	389 Move X8, [X0]
	390 Compare X8, 0
	391 JumpIfEqual {976}
	392 Move X9, [X8+16]
	393 Move W10, [X0+28]
	394 Move W8, [X8+72]
	395 Move X19, 0x7B9000
	396 Move [X31+32], X9
	397 Move W9, [X0+64]
	398 Move [X31+52], W8
	399 Move X21, X0
	400 Move W1, 2
	401 Move [X31+44], W9
	402 Move [X31+48], W10
	403 Move X19, [X19+3624]
	404 Move X0, [X19]
	405 Call 0x1C17D6C
	406 Move X8, [X19]
	407 Move [X31+112], X0
	408 Move W1, 2
	409 Move X0, X8
	410 Call 0x1C17D6C
	411 Move W9, [X21+36]
	412 Move W8, [X21+32]
	413 Move X22, X0
	414 Move W23, W31
	415 Move [X31+64], X21
	416 Move [X31+24], W8
	417 Move [X31+28], W9
	418 Move X8, 0x75F000
	419 Move X8, [X8+3632]
	420 Move X0, [X8]
	421 Call 0x1C17F10
	422 Move X8, 0x762000
	423 Move X8, [X8+2928]
	424 Move X24, X0
	425 Move X1, [X8]
	426 Call List`1<Int32>..ctor, X0
	427 Move X8, [X31+112]
	428 Compare X8, 0
	429 JumpIfEqual {976}
	430 Move X19, [X31+112]
	431 Compare X24, 0
	432 JumpIfEqual {439}
	433 Move X8, [X19]
	434 Move X0, X24
	435 Move X1, [X8+64]
	436 Call 0x1C17E00
	437 Compare X0, 0
	438 JumpIfEqual {980}
	439 Move W8, [X19+24]
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Move X29, W23
	442 Add X21, X19, X29
	443 Move [X21+32], X24
	444 Move X8, 0x75F000
	445 Move X8, [X8+3632]
	446 Move X0, [X8]
	447 Call 0x1C17F10
	448 Move X8, 0x762000
	449 Move X8, [X8+2928]
	450 Move X24, X0
	451 Move X1, [X8]
	452 Call List`1<Int32>..ctor, X0
	453 Compare X22, 0
	454 JumpIfEqual {976}
	455 Compare X24, 0
	456 JumpIfEqual {463}
	457 Move X8, [X22]
	458 Move X0, X24
	459 Move X1, [X8+64]
	460 Call 0x1C17E00
	461 Compare X0, 0
	462 JumpIfEqual {980}
	463 Move W8, [X22+24]
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Move X8, [X31+64]
	466 Add X19, X22, X29
	467 Move [X19+32], X24
	468 Move X8, [X8]
	469 Compare X8, 0
	470 JumpIfEqual {976}
	471 Move X8, [X8+80]
	472 Compare X8, 0
	473 JumpIfEqual {976}
	474 Move W9, [X8+24]
	475 NotImplemented "Instruction CMP not yet implemented."
	476 Add X8, X8, X29
	477 Move X0, [X8+32]
	478 Compare X0, 0
	479 JumpIfEqual {976}
	480 Move X8, 0x7BB000
	481 Move X8, [X8+3088]
	482 Move X1, [X8]
	483 Add X8, X31, 416
	484 Call List`1<ResourceHandle>.GetEnumerator, X0
	485 Move V0, [X27+11]
	486 Move X8, [X27+192]
	487 Move [X31+13], V0
	488 Move [X31+224], X8
	489 Move X8, 0x7BB000
	490 Move X8, [X8+3072]
	491 Move X1, [X8]
	492 Add X0, X31, 208
	493 Call Enumerator<ResourceHandle>.MoveNext, X0
	494 Move TEMP, X0
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {536}
	498 Move X8, [X31+112]
	499 Move W8, [X8+24]
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Move X8, 0x789000
	502 Move X8, [X8+1840]
	503 Move X25, [X31+224]
	504 Move X24, [X21]
	505 Move X0, [X8]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {510}
	509 Call 0x1C17DFC
	510 Move X0, X25
	511 Call ResourceHandle.op_Implicit, X0
	512 Move W1, W0
	513 Compare X24, 0
	514 JumpIfEqual {828}
	515 Move X9, 0x75F000
	516 Move W10, [X24+28]
	517 Move X8, [X24+16]
	518 Move X9, [X9+3600]
	519 Add W10, W10, 1
	520 Move X9, [X9]
	521 Move [X24+28], W10
	522 Compare X8, 0
	523 JumpIfEqual {829}
	524 NotImplemented "Instruction LDRSW not yet implemented."
	525 Move W11, [X8+24]
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Add W9, W10, 1
	528 Add X8, X8, X10
	529 Move [X24+24], W9
	530 Move [X8+32], W1
	531 Move X8, [X9+32]
	532 Move X8, [X8+192]
	533 Move X2, [X8+112]
	534 Move X0, X24
	535 Call List`1<Int32>.AddWithResize, X0, X1
	536 Move X8, 0x7BB000
	537 Move X8, [X8+3064]
	538 Add X0, X31, 208
	539 Move X1, [X8]
	540 Call Enumerator<ResourceHandle>.Dispose, X0
	541 Move X8, [X31+64]
	542 Move X8, [X8]
	543 Compare X8, 0
	544 JumpIfEqual {976}
	545 Move X8, [X8+88]
	546 Compare X8, 0
	547 JumpIfEqual {976}
	548 Move W9, [X8+24]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Add X8, X8, X29
	551 Move X0, [X8+32]
	552 Compare X0, 0
	553 JumpIfEqual {976}
	554 Move X8, 0x7BB000
	555 Move X8, [X8+3088]
	556 Move X1, [X8]
	557 Add X8, X31, 416
	558 Call List`1<ResourceHandle>.GetEnumerator, X0
	559 Move V0, [X27+11]
	560 Move X8, [X27+192]
	561 Move [X31+13], V0
	562 Move [X31+224], X8
	563 Move X8, 0x7BB000
	564 Move X8, [X8+3072]
	565 Move X1, [X8]
	566 Add X0, X31, 208
	567 Call Enumerator<ResourceHandle>.MoveNext, X0
	568 Move TEMP, X0
	569 And TEMP, TEMP, 1
	570 Compare TEMP, 1
	571 JumpIfNotEqual {609}
	572 Move W8, [X22+24]
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Move X8, 0x789000
	575 Move X8, [X8+1840]
	576 Move X25, [X31+224]
	577 Move X24, [X19]
	578 Move X0, [X8]
	579 Move W8, [X0+224]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X0, X25
	584 Call ResourceHandle.op_Implicit, X0
	585 Move W1, W0
	586 Compare X24, 0
	587 JumpIfEqual {831}
	588 Move X9, 0x75F000
	589 Move W10, [X24+28]
	590 Move X8, [X24+16]
	591 Move X9, [X9+3600]
	592 Add W10, W10, 1
	593 Move X9, [X9]
	594 Move [X24+28], W10
	595 Compare X8, 0
	596 JumpIfEqual {832}
	597 NotImplemented "Instruction LDRSW not yet implemented."
	598 Move W11, [X8+24]
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Add W9, W10, 1
	601 Add X8, X8, X10
	602 Move [X24+24], W9
	603 Move [X8+32], W1
	604 Move X8, [X9+32]
	605 Move X8, [X8+192]
	606 Move X2, [X8+112]
	607 Move X0, X24
	608 Call List`1<Int32>.AddWithResize, X0, X1
	609 Move X8, 0x7BB000
	610 Move X8, [X8+3064]
	611 Add X0, X31, 208
	612 Move X1, [X8]
	613 Call Enumerator<ResourceHandle>.Dispose, X0
	614 Move X8, [X31+64]
	615 Move X8, [X8+8]
	616 Compare X8, 0
	617 JumpIfEqual {976}
	618 Move W9, [X8+24]
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Add X8, X8, X29
	621 Move X0, [X8+32]
	622 Compare X0, 0
	623 JumpIfEqual {976}
	624 Move X8, 0x789000
	625 Move X8, [X8+2896]
	626 Move X1, [X8]
	627 Add X8, X31, 416
	628 Call List`1<Int32>.GetEnumerator, X0
	629 Move V0, [X27+11]
	630 Move X8, [X27+192]
	631 Move [X31+11], V0
	632 Move [X31+192], X8
	633 Move X8, 0x789000
	634 Move X8, [X8+2856]
	635 Move X1, [X8]
	636 Add X0, X31, 176
	637 Call Enumerator<Int32>.MoveNext, X0
	638 Move TEMP, X0
	639 And TEMP, TEMP, 1
	640 Compare TEMP, 1
	641 JumpIfNotEqual {715}
	642 Move X8, [X27+40]
	643 Compare X8, 0
	644 JumpIfEqual {835}
	645 Move X8, [X8+24]
	646 Compare X8, 0
	647 JumpIfEqual {836}
	648 Move W9, [X8+24]
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Add X8, X8, X29
	651 Move X0, [X8+32]
	652 Compare X0, 0
	653 JumpIfEqual {834}
	654 Move X8, 0x7BB000
	655 Move W24, [X31+192]
	656 Move X8, [X8+3536]
	657 Move X2, [X8]
	658 Add X8, X31, 416
	659 Move W1, W24
	660 Call List`1<ResourceDebugData>.get_Item, X0, X1
	661 Move X8, [X27+176]
	662 Move W9, [X31+424]
	663 NotImplemented "Instruction LDRH not yet implemented."
	664 Move W11, [X20+2]
	665 Move V0, [X26]
	666 Move X12, [X26+16]
	667 NotImplemented "Instruction STRH not yet implemented."
	668 Move [X31+174], W11
	669 Move [X31+9], V0
	670 Move [X31+160], X12
	671 Move TEMP, X9
	672 And TEMP, TEMP, 1
	673 Compare TEMP, 1
	674 JumpIfEqual {633}
	675 Move X10, [X27+40]
	676 Compare X10, 0
	677 JumpIfEqual {843}
	678 Move X10, [X10+24]
	679 Compare X10, 0
	680 JumpIfEqual {842}
	681 Move W11, [X10+24]
	682 NotImplemented "Instruction CMP not yet implemented."
	683 Add X10, X10, X29
	684 NotImplemented "Instruction LDRH not yet implemented."
	685 Move W12, [X31+174]
	686 Move V0, [X31+9]
	687 Move X13, [X31+160]
	688 Move X0, [X10+32]
	689 NotImplemented "Instruction STRH not yet implemented."
	690 Move [X31+130], W12
	691 Move [X27+11], V0
	692 Move [X27+192], X13
	693 Compare X0, 0
	694 JumpIfEqual {845}
	695 Move X10, 0x7BB000
	696 Move X10, [X10+3544]
	697 Move [X27+96], X8
	698 Move W8, [X31+130]
	699 Move X11, [X31+96]
	700 Move [X31+344], W9
	701 NotImplemented "Instruction LDRH not yet implemented."
	702 Move X3, [X10]
	703 Move [X11+2], W8
	704 Move W8, [X31+108]
	705 Move V0, [X27+11]
	706 Move X10, [X27+192]
	707 NotImplemented "Instruction STRH not yet implemented."
	708 Move [X31+348], W8
	709 Move X8, [X31+88]
	710 Move [X8+16], X10
	711 Move [X8], V0
	712 Add X2, X31, 336
	713 Move W1, W24
	714 Call List`1<ResourceDebugData>.set_Item, X0, X1, X2
	715 Move X8, 0x789000
	716 Move X8, [X8+2840]
	717 Add X0, X31, 176
	718 Move X1, [X8]
	719 Call Enumerator<Int32>.Dispose, X0
	720 Move X8, [X31+64]
	721 Move X8, [X8+16]
	722 Compare X8, 0
	723 JumpIfEqual {976}
	724 Move W9, [X8+24]
	725 NotImplemented "Instruction CMP not yet implemented."
	726 Add X8, X8, X29
	727 Move X0, [X8+32]
	728 Compare X0, 0
	729 JumpIfEqual {976}
	730 Move X8, 0x789000
	731 Move X8, [X8+2896]
	732 Move X1, [X8]
	733 Add X8, X31, 416
	734 Call List`1<Int32>.GetEnumerator, X0
	735 Move V0, [X27+11]
	736 Move X8, [X27+192]
	737 Move [X31+11], V0
	738 Move [X31+192], X8
	739 Move X8, 0x789000
	740 Move X8, [X8+2856]
	741 Move X1, [X8]
	742 Add X0, X31, 176
	743 Call Enumerator<Int32>.MoveNext, X0
	744 Move TEMP, X0
	745 And TEMP, TEMP, 1
	746 Compare TEMP, 1
	747 JumpIfNotEqual {821}
	748 Move X8, [X27+40]
	749 Compare X8, 0
	750 JumpIfEqual {839}
	751 Move X8, [X8+24]
	752 Compare X8, 0
	753 JumpIfEqual {840}
	754 Move W9, [X8+24]
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Add X8, X8, X29
	757 Move X0, [X8+32]
	758 Compare X0, 0
	759 JumpIfEqual {838}
	760 Move X8, 0x7BB000
	761 Move W24, [X31+192]
	762 Move X8, [X8+3536]
	763 Move X2, [X8]
	764 Add X8, X31, 416
	765 Move W1, W24
	766 Call List`1<ResourceDebugData>.get_Item, X0, X1
	767 Move X8, [X27+176]
	768 Move W9, [X31+424]
	769 Move W10, [X20]
	770 NotImplemented "Instruction LDUR not yet implemented."
	771 Move V0, [X28]
	772 Move W12, [X28+16]
	773 Move [X31+136], W10
	774 Move [X31+139], W11
	775 Move [X27+9], V0
	776 Move [X31+400], W12
	777 Move TEMP, X9
	778 And TEMP, TEMP, 1
	779 Compare TEMP, 1
	780 JumpIfEqual {739}
	781 Move X10, [X27+40]
	782 Compare X10, 0
	783 JumpIfEqual {847}
	784 Move X10, [X10+24]
	785 Compare X10, 0
	786 JumpIfEqual {846}
	787 Move W11, [X10+24]
	788 NotImplemented "Instruction CMP not yet implemented."
	789 Add X10, X10, X29
	790 Move W11, [X31+136]
	791 NotImplemented "Instruction LDUR not yet implemented."
	792 Move V0, [X27+9]
	793 Move W13, [X31+400]
	794 Move X0, [X10+32]
	795 Move [X31+128], W11
	796 Move [X31+131], W12
	797 Move [X27+11], V0
	798 Move [X31+432], W13
	799 Compare X0, 0
	800 JumpIfEqual {849}
	801 Move X10, 0x7BB000
	802 Move X10, [X10+3544]
	803 Move [X27+48], X8
	804 NotImplemented "Instruction LDUR not yet implemented."
	805 Move X11, [X31+80]
	806 Move [X31+296], W9
	807 Move W9, [X31+128]
	808 Move X3, [X10]
	809 Move [X11+3], W8
	810 Move W8, [X31+108]
	811 Move V0, [X27+11]
	812 Move W10, [X31+432]
	813 Move [X11], W9
	814 Move [X31+304], W8
	815 Move X8, [X31+72]
	816 Move [X8+16], W10
	817 Move [X8], V0
	818 Add X2, X31, 288
	819 Move W1, W24
	820 Call List`1<ResourceDebugData>.set_Item, X0, X1, X2
	821 Move X8, 0x789000
	822 Move X8, [X8+2840]
	823 Add X0, X31, 176
	824 Move X1, [X8]
	825 Call Enumerator<Int32>.Dispose, X0
	826 Add W23, W23, 1
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Call 0x1C17F20
	829 Call 0x1C17F20
	830 Call 0x1C17F28
	831 Call 0x1C17F20
	832 Call 0x1C17F20
	833 Call 0x1C17F28
	834 Call 0x1C17F20
	835 Call 0x1C17F20
	836 Call 0x1C17F20
	837 Call 0x1C17F28
	838 Call 0x1C17F20
	839 Call 0x1C17F20
	840 Call 0x1C17F20
	841 Call 0x1C17F28
	842 Call 0x1C17F20
	843 Call 0x1C17F20
	844 Call 0x1C17F28
	845 Call 0x1C17F20
	846 Call 0x1C17F20
	847 Call 0x1C17F20
	848 Call 0x1C17F28
	849 Call 0x1C17F20
	850 NotImplemented "Instruction CMP not yet implemented."
	851 Call 0x3EB2AD0
	852 Move X24, [X0]
	853 Call 0x3EB2AE0
	854 Move X8, 0x789000
	855 Move X8, [X8+2840]
	856 Add X0, X31, 176
	857 Move X1, [X8]
	858 Call Enumerator<Int32>.Dispose, X0
	859 Compare X24, 0
	860 JumpIfEqual {826}
	861 NotImplemented "Instruction CMP not yet implemented."
	862 Call 0x3EB2AD0
	863 Move X24, [X0]
	864 Call 0x3EB2AE0
	865 Move X8, 0x789000
	866 Move X8, [X8+2840]
	867 Add X0, X31, 176
	868 Move X1, [X8]
	869 Call Enumerator<Int32>.Dispose, X0
	870 Compare X24, 0
	871 JumpIfEqual {720}
	872 NotImplemented "Instruction CMP not yet implemented."
	873 Call 0x3EB2AD0
	874 Move X24, [X0]
	875 Call 0x3EB2AE0
	876 Move X8, 0x7BB000
	877 Move X8, [X8+3064]
	878 Add X0, X31, 208
	879 Move X1, [X8]
	880 Call Enumerator<ResourceHandle>.Dispose, X0
	881 Compare X24, 0
	882 JumpIfEqual {614}
	883 NotImplemented "Instruction CMP not yet implemented."
	884 Call 0x3EB2AD0
	885 Move X24, [X0]
	886 Call 0x3EB2AE0
	887 Move X8, 0x7BB000
	888 Move X8, [X8+3064]
	889 Add X0, X31, 208
	890 Move X1, [X8]
	891 Call Enumerator<ResourceHandle>.Dispose, X0
	892 Compare X24, 0
	893 JumpIfEqual {541}
	894 Move X8, [X27+40]
	895 Compare X8, 0
	896 JumpIfEqual {976}
	897 Move X0, [X8+16]
	898 NotImplemented "Instruction LDRH not yet implemented."
	899 Move W9, [X31+238]
	900 Move X19, [X31+56]
	901 NotImplemented "Instruction STRH not yet implemented."
	902 Move [X31+126], W9
	903 Compare X0, 0
	904 JumpIfEqual {976}
	905 NotImplemented "Instruction LDRH not yet implemented."
	906 Move W9, [X31+126]
	907 NotImplemented "Instruction STRH not yet implemented."
	908 Move [X31+130], W9
	909 Move X9, 0x7BB000
	910 Move W10, [X0+28]
	911 Move X8, [X0+16]
	912 Move X9, [X9+3528]
	913 Add W10, W10, 1
	914 Move X9, [X9]
	915 Move [X0+28], W10
	916 Compare X8, 0
	917 JumpIfEqual {976}
	918 NotImplemented "Instruction LDRSW not yet implemented."
	919 Move W11, [X8+24]
	920 NotImplemented "Instruction CMP not yet implemented."
	921 Add W9, W10, 1
	922 Move W11, 40
	923 NotImplemented "Instruction MADD not yet implemented."
	924 Move [X0+24], W9
	925 Move X10, [X31+32]
	926 Move X9, [X31+112]
	927 Move [X8+48], X22
	928 NotImplemented "Instruction STRH not yet implemented."
	929 Move [X8+32], X10
	930 Move [X8+40], X9
	931 Move W9, [X31+48]
	932 Move W10, [X31+24]
	933 Move [X8+56], W9
	934 Move W9, [X31+44]
	935 Move [X8+57], W9
	936 Move W9, [X31+28]
	937 Move [X8+60], W10
	938 Move [X8+64], W9
	939 Move W9, [X31+52]
	940 Move [X8+68], W9
	941 Move W9, [X31+130]
	942 NotImplemented "Instruction LDRH not yet implemented."
	943 Move [X8+71], W9
	944 NotImplemented "Instruction STURH not yet implemented."
	945 Move X8, [X9+32]
	946 Move X10, [X31+32]
	947 NotImplemented "Instruction LDRH not yet implemented."
	948 Add X1, X31, 416
	949 Move X8, [X8+192]
	950 Move X2, [X8+112]
	951 Move X8, [X31+112]
	952 Move [X27+192], X22
	953 Move [X27+176], X10
	954 Move [X27+184], X8
	955 Move W10, [X31+48]
	956 Move W8, [X31+130]
	957 NotImplemented "Instruction STRH not yet implemented."
	958 Move [X31+440], W10
	959 Move W10, [X31+44]
	960 Move [X31+441], W10
	961 Move W10, [X31+24]
	962 Move [X31+444], W10
	963 Move W10, [X31+28]
	964 Move [X31+448], W10
	965 Move W10, [X31+52]
	966 Move [X31+452], W10
	967 Move X10, [X31+16]
	968 Move [X10+2], W8
	969 NotImplemented "Instruction STRH not yet implemented."
	970 Call List`1<PassDebugData>.AddWithResize, X0, X1
	971 Move W1, [X31+108]
	972 Move X0, [X19+128]
	973 Add W1, W1, 1
	974 Compare X0, 0
	975 JumpIfNotEqual {380}
	976 Call 0x1C17F20
	977 Move X0, X23
	978 Call RenderGraph.CleanupDebugData, X0
	979 Call 0x1C17F28
	980 Call 0x1C17F44
	981 Move X1, X31
	982 Call 0x1C17DEC
	983 Move X0, X24
	984 Call 0x1C17F18
	985 Move X19, X0
	986 Move X24, X31
	987 Move X19, X0
	988 Move X24, X31
	989 Move X19, X0
	990 Move X24, X31
	991 Move X19, X0
	992 Move X24, X31
	993 Call 0x3EB2B20
	994 Move X19, X0
	995 Move X8, 0x7BA000
	996 Move X8, [X8+3064]
	997 Move X1, [X8]
	998 Add X0, X31, 208
	999 Call Enumerator<ResourceHandle>.Dispose, X0
	1000 Compare X24, 0
	1001 JumpIfEqual {1032}
	1002 Move X0, X24
	1003 Call 0x1C17F18
	1004 Move X19, X0
	1005 Move X8, 0x7BA000
	1006 Move X8, [X8+3064]
	1007 Move X1, [X8]
	1008 Add X0, X31, 208
	1009 Call Enumerator<ResourceHandle>.Dispose, X0
	1010 Compare X24, 0
	1011 JumpIfEqual {1032}
	1012 Move X0, X24
	1013 Call 0x1C17F18
	1014 Move X19, X0
	1015 Move X8, 0x788000
	1016 Move X8, [X8+2840]
	1017 Move X1, [X8]
	1018 Add X0, X31, 176
	1019 Call Enumerator<Int32>.Dispose, X0
	1020 Compare X24, 0
	1021 JumpIfEqual {1032}
	1022 Move X0, X24
	1023 Call 0x1C17F18
	1024 Move X19, X0
	1025 Move X8, 0x788000
	1026 Move X8, [X8+2840]
	1027 Move X1, [X8]
	1028 Add X0, X31, 176
	1029 Call Enumerator<Int32>.Dispose, X0
	1030 Compare X24, 0
	1031 JumpIfNotEqual {1034}
	1032 Move X0, X19
	1033 Call 0x1D2D690
	1034 Move X0, X24
	1035 Call 0x1C17F18
	1036 Call 0x1991590

Method: System.Void CleanupDebugData()

Disassembly:
	0x039970CC LDRB W8, [X21 + 0xAE7]
	0x039970D0 MOV X19, X1
	0x039970D4 MOV X20, X0
	0x039970D8 TBNZ X8, 0x0, 0x39970F0
	0x039970DC ADRP X0, 0x7B9000
	0x039970E0 LDR X0, [X0 + 0xCD8]
	0x039970E4 BL 0x1C16CF4
	0x039970E8 MOVZ W8, 0x1
	0x039970EC STRB W8, [X21 + 0xAE7]
	0x039970F0 LDR X0, [X20 + 0x68]
	0x039970F4 CBZ X0, 0x3997160
	0x039970F8 ADRP X9, 0x7B9000
	0x039970FC LDR X9, [X9 + 0xCD8]
	0x03997100 LDR W10, [X0 + 0x1C]
	0x03997104 LDR X8, [X0 + 0x10]
	0x03997108 LDR X9, [X9]
	0x0399710C ADD W10, W10, 0x1
	0x03997110 STR W10, [X0 + 0x1C]
	0x03997114 CBZ X8, 0x3997160
	0x03997118 LDRSW X10, [X0 + 0x18]
	0x0399711C LDR W11, [X8 + 0x18]
	0x03997120 CMP W10, W11
	0x03997124 B.CS 0x3997144
	0x03997128 ADD W9, W10, 0x1
	0x0399712C ADD X8, X8, X10, 0x3, LSL
	0x03997130 STR W9, [X0 + 0x18]
	0x03997134 STR X19, [X8 + 0x20]
	0x03997138 LDP X20, X19, [X31 + 0x10]
	0x0399713C LDP X30, X21, [X31], #0x20
	0x03997140 RET
	0x03997144 LDR X8, [X9 + 0x20]
	0x03997148 MOV X1, X19
	0x0399714C LDP X20, X19, [X31 + 0x10]
	0x03997150 LDR X8, [X8 + 0xC0]
	0x03997154 LDR X2, [X8 + 0x70]
	0x03997158 LDP X30, X21, [X31], #0x20
	0x0399715C B 0x3046F84
	0x03997160 BL 0x1C16F20
	0x03997164 STP X30, X19, [X31 - 0x10]!
	0x03997168 LDR X0, [X0]
	0x0399716C CBZ X0, 0x3997184
	0x03997170 MOV X19, X1
	0x03997174 BL 0x3996C8C
	0x03997178 LDR X0, [X19]
	0x0399717C LDP X30, X19, [X31], #0x10
	0x03997180 RET
	0x03997184 BL 0x1C16F20
	0x03997188 STR X30, [X31 - 0x20]!
	0x0399718C STP X20, X19, [X31 + 0x10]
	0x03997190 MOV X20, X0
	0x03997194 LDR X0, [X0]
	0x03997198 CBZ X0, 0x39971C4
	0x0399719C MOV X19, X1
	0x039971A0 BL 0x3996D84
	0x039971A4 LDR X0, [X20 + 0x8]
	0x039971A8 CBZ X0, 0x39971C4
	0x039971AC MOV X1, X19
	0x039971B0 BL 0x3996874
	0x039971B4 LDR X0, [X19]
	0x039971B8 LDP X20, X19, [X31 + 0x10]
	0x039971BC LDR X30, [X31], #0x20
	0x039971C0 RET
	0x039971C4 BL 0x1C16F20
	0x039971C8 STR X30, [X31 - 0x20]!
	0x039971CC STP X20, X19, [X31 + 0x10]
	0x039971D0 LDR X8, [X0]
	0x039971D4 CBZ X8, 0x3997214
	0x039971D8 MOV X19, X0
	0x039971DC LDR X0, [X0 + 0x8]
	0x039971E0 CBZ X0, 0x3997214
	0x039971E4 LDR W2, [X8 + 0x18]
	0x039971E8 BL 0x398D524
	0x039971EC STR X0, [X31 + 0x8]
	0x039971F0 MOV X20, X0
	0x039971F4 LDR X0, [X19]
	0x039971F8 CBZ X0, 0x3997214
	0x039971FC ADD X1, X31, 0x8
	0x03997200 BL 0x3996F1C
	0x03997204 MOV X0, X20
	0x03997208 LDP X20, X19, [X31 + 0x10]
	0x0399720C LDR X30, [X31], #0x20
	0x03997210 RET
	0x03997214 BL 0x1C16F20
	0x03997218 SUB X31, X31, 0x40
	0x0399721C STP X31, X30, [X31 + 0x18]
	0x03997220 STP X20, X19, [X31 + 0x30]
	0x03997224 STP X31, X31, [X31 + 0x8]
	0x03997228 MOV X19, X0
	0x0399722C LDR X0, [X0 + 0x8]
	0x03997230 CBZ X0, 0x3997284
	0x03997234 ADD X8, X31, 0x8
	0x03997238 BL 0x398D63C
	0x0399723C LDR X8, [X19]
	0x03997240 CBZ X8, 0x3997284
	0x03997244 LDR X0, [X19 + 0x8]
	0x03997248 CBZ X0, 0x3997284
	0x0399724C LDR W2, [X8 + 0x18]
	0x03997250 ADD X1, X31, 0x8
	0x03997254 BL 0x398D524
	0x03997258 STR X0, [X31 + 0x28]
	0x0399725C MOV X20, X0
	0x03997260 LDR X0, [X19]
	0x03997264 CBZ X0, 0x3997284
	0x03997268 ADD X1, X31, 0x28
	0x0399726C BL 0x3996F1C
	0x03997270 MOV X0, X20
	0x03997274 LDP X20, X19, [X31 + 0x30]
	0x03997278 LDR X30, [X31 + 0x20]
	0x0399727C ADD X31, X31, 0x40
	0x03997280 RET
	0x03997284 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0xA4B000
	010 Move W8, [X20+2767]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x7BA000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move X0, 0x7BA000
	020 Move X0, [X0+3568]
	021 Call 0x1C17CF4
	022 Move X0, 0x7BA000
	023 Move X0, [X0+3576]
	024 Call 0x1C17CF4
	025 Move X0, 0x7BA000
	026 Move X0, [X0+3584]
	027 Call 0x1C17CF4
	028 Move X0, 0x7BA000
	029 Move X0, [X0+3592]
	030 Call 0x1C17CF4
	031 Move X0, 0x7BA000
	032 Move X0, [X0+3600]
	033 Call 0x1C17CF4
	034 Move X0, 0x7BA000
	035 Move X0, [X0+2240]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2767], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+32], X31
	041 Move [X31], V0
	042 Move [X31+8], V0
	043 Move X0, [X19+176]
	044 Compare X0, 0
	045 JumpIfEqual {100}
	046 Move X8, 0x7BA000
	047 Move X8, [X8+3568]
	048 Move X21, 0x7BA000
	049 Move X21, [X21+3584]
	050 Move X24, 0x7BA000
	051 Move X1, [X8]
	052 Move X22, 0x7BA000
	053 Move X23, 0x7BA000
	054 Move X24, [X24+2240]
	055 Move X22, [X22+3560]
	056 Move X23, [X23+3576]
	057 Add X8, X31, 0
	058 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	059 Move X1, [X21]
	060 Add X0, X31, 0
	061 Call Enumerator<Object, Object>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {83}
	066 Move X0, [X24]
	067 Move X20, [X31+16]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X24]
	073 Move X8, [X0+184]
	074 Move X8, [X8+48]
	075 Compare X8, 0
	076 JumpIfEqual {59}
	077 Move X0, [X8+64]
	078 Move X9, [X8+24]
	079 Move X3, [X8+40]
	080 Move X1, X19
	081 Move X2, X20
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X1, [X23]
	084 Add X0, X31, 0
	085 Call Enumerator<Object, Object>.Dispose, X0
	086 Move X0, [X19+176]
	087 Compare X0, 0
	088 JumpIfEqual {100}
	089 Move X1, [X22]
	090 Call Dictionary`2<Object, Object>.Clear, X0
	091 Move X20, [X31+96]
	092 Move X19, [X31+104]
	093 Move X22, [X31+80]
	094 Move X21, [X31+88]
	095 Move X24, [X31+64]
	096 Move X23, [X31+72]
	097 Move X30, [X31+48]
	098 Add X31, X31, 112
	099 Return 
	100 Call 0x1C17F20
	101 Move X20, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Call 0x3EB2AD0
	105 Move X21, [X0]
	106 Call 0x3EB2AE0
	107 Move X1, [X23]
	108 Add X0, X31, 0
	109 Call Enumerator<Object, Object>.Dispose, X0
	110 Compare X21, 0
	111 JumpIfEqual {86}
	112 Move X0, X21
	113 Call 0x1C17F18
	114 Move X21, X31
	115 Move X20, X0
	116 Move X1, [X23]
	117 Add X0, X31, 0
	118 Call Enumerator<Object, Object>.Dispose, X0
	119 Compare X21, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X20
	122 Call 0x1D2D690
	123 Move X0, X21
	124 Call 0x1C17F18
	125 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x039973DC LDR X0, [X0 + 0x68]
	0x039973E0 RET
	0x039973E4 STR X1, [X0 + 0x68]
	0x039973E8 RET
	0x039973EC LDR X0, [X0 + 0x70]
	0x039973F0 RET
	0x039973F4 STR X1, [X0 + 0x70]
	0x039973F8 RET
	0x039973FC LDR X0, [X0 + 0x78]
	0x03997400 RET
	0x03997404 STR X1, [X0 + 0x78]
	0x03997408 RET
	0x0399740C STR X30, [X31 - 0x30]!
	0x03997410 STP X22, X21, [X31 + 0x10]
	0x03997414 STP X20, X19, [X31 + 0x20]
	0x03997418 ADRP X22, 0xA4A000
	0x0399741C ADRP X21, 0x75C000
	0x03997420 LDRB W8, [X22 + 0xAD7]
	0x03997424 LDR X21, [X21 + 0x5A8]
	0x03997428 MOV W20, W1
	0x0399742C MOV X19, X0
	0x03997430 TBNZ X8, 0x0, 0x3997448
	0x03997434 ADRP X0, 0x75C000
	0x03997438 LDR X0, [X0 + 0x5A8]
	0x0399743C BL 0x1C16CF4
	0x03997440 MOVZ W8, 0x1
	0x03997444 STRB W8, [X22 + 0xAD7]
	0x03997448 LDR X0, [X21]
	0x0399744C LDR W21, [X19 + 0x20]
	0x03997450 LDR W8, [X0 + 0xE0]
	0x03997454 CBNZ W8, 0x399745C
	0x03997458 BL 0x1C16DFC
	0x0399745C CMP W20, 0x0
	0x03997460 CSNEG W8, W20, W20, PL
	0x03997464 ADD W8, W21, W8
	0x03997468 STR W8, [X19 + 0x20]
	0x0399746C LDP X20, X19, [X31 + 0x20]
	0x03997470 LDP X22, X21, [X31 + 0x10]
	0x03997474 LDR X30, [X31], #0x30
	0x03997478 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA4B000
	007 Move X20, 0x7BA000
	008 Move X21, 0x7BA000
	009 Move X19, 0x7BA000
	010 Move W8, [X22+2768]
	011 Move X20, [X20+2240]
	012 Move X21, [X21+3608]
	013 Move X19, [X19+3616]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x7BA000
	019 Move X0, [X0+3616]
	020 Call 0x1C17CF4
	021 Move X0, 0x7BA000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move X0, 0x7BA000
	025 Move X0, [X0+2240]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2768], W8
	029 Move X8, [X20]
	030 Move W9, 8
	031 Move X8, [X8+184]
	032 Move [X8], W9
	033 Move X0, [X21]
	034 Call 0x1C17F10
	035 Move X1, [X19]
	036 Move X19, X0
	037 Call List`1<Object>..ctor, X0
	038 Move X8, [X20]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X8, [X8+184]
	042 Move [X8+8], X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move [X8+16], W31
	046 Move X30, [X31+48]
	047 Return 

