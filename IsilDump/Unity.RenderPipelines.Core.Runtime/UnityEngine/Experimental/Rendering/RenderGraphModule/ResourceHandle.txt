Type: UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle

Method: System.Int32 get_index()

Disassembly:
	0x0399A74C LDR X0, [X20]
	0x0399A750 LDR W8, [X0 + 0xE0]

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType get_type()

Disassembly:
	0x0399B424 ADRP X22, 0x7B6000
	0x0399B428 ADRP X21, 0x758000

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_type(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType value)

Disassembly:
	0x0399B42C LDRB W8, [X23 + 0xB4E]
	0x0399B430 LDR X22, [X22 + 0x40]

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.Int32 get_iType()

Disassembly:
	0x03998E7C ADRP X8, 0x786000
	0x03998E80 LDR X8, [X8 + 0xB18]
	0x03998E84 LDR X1, [X8]
	0x03998E88 ADD X0, X31, 0x30
	0x03998E8C BL 0x2BBDD9C
	0x03998E90 CBZ X22, 0x3998C58
	0x03998E94 B 0x3998F30
	0x03998E98 B 0x3998E9C
	0x03998E9C MOV X21, X1
	0x03998EA0 MOV X20, X0
	0x03998EA4 CMP W21, 0x1
	0x03998EA8 B.NE 0x3998F08
	0x03998EAC MOV X0, X20
	0x03998EB0 BL 0x3EB1AD0
	0x03998EB4 LDR X22, [X0]
	0x03998EB8 BL 0x3EB1AE0
	0x03998EBC B 0x3998E7C
	0x03998EC0 ADRP X8, 0x7B8000
	0x03998EC4 LDR X8, [X8 + 0xF58]
	0x03998EC8 ADD X0, X31, 0x50
	0x03998ECC LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA4A000
	006 Move X21, 0x787000
	007 Move W8, [X20+2858]
	008 Move X21, [X21+1840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x787000
	015 Move X0, [X0+1840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2858], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, [X19+4]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void .ctor(System.Int32 value, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourceType type, System.Boolean shared)

Disassembly:
	0x03998F5C B 0x3998F88
	0x03998F60 B 0x3998F88
	0x03998F64 B 0x3998F88
	0x03998F68 B 0x3998F88
	0x03998F6C B 0x3998F88
	0x03998F70 B 0x3998F88
	0x03998F74 B 0x3998F88
	0x03998F78 B 0x3998F88
	0x03998F7C B 0x3998F88
	0x03998F80 B 0x3998F88
	0x03998F84 B 0x3998F88
	0x03998F88 MOV X21, X1
	0x03998F8C MOV X20, X0
	0x03998F90 CMP W21, 0x1
	0x03998F94 B.NE 0x3998FC8
	0x03998F98 MOV X0, X20
	0x03998F9C BL 0x3EB1AD0
	0x03998FA0 LDR X19, [X0]
	0x03998FA4 BL 0x3EB1AE0
	0x03998FA8 ADRP X8, 0x7B8000
	0x03998FAC LDR X8, [X8 + 0xF58]
	0x03998FB0 ADD X0, X31, 0x50
	0x03998FB4 LDR X1, [X8]
	0x03998FB8 BL 0x2BF5448
	0x03998FBC CBZ X19, 0x3998ED4
	0x03998FC0 MOV X0, X19
	0x03998FC4 BL 0x1C16F18
	0x03998FC8 MOV X19, X31
	0x03998FCC B 0x3998FD4
	0x03998FD0 MOV X20, X0
	0x03998FD4 ADRP X8, 0x7B8000
	0x03998FD8 LDR X8, [X8 + 0xF58]
	0x03998FDC LDR X1, [X8]
	0x03998FE0 ADD X0, X31, 0x50
	0x03998FE4 BL 0x2BF5448
	0x03998FE8 CBNZ X19, 0x3998FF4
	0x03998FEC MOV X0, X20
	0x03998FF0 BL 0x1D2C690
	0x03998FF4 MOV X0, X19
	0x03998FF8 BL 0x1C16F18

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xA4A000
	009 Move X23, 0x787000
	010 Move W8, [X24+2859]
	011 Move X23, [X23+1840]
	012 Move W21, W3
	013 Move W19, W2
	014 Move W22, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x787000
	021 Move X0, [X0+1840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2859], W8
	025 Move X0, [X23]
	026 And W22, W22, 0xFFFF
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {33}
	030 Call 0x1C17DFC
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Move X9, [X0+184]
	034 And W31, W21, 1
	035 Add X10, X9, 4
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move W9, [X9]
	038 Or W9, W9, W22
	039 Move [X20], W9
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move [X20+4], W19
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 

Method: System.Int32 op_Implicit(UnityEngine.Experimental.Rendering.RenderGraphModule.ResourceHandle handle)

Disassembly:
	0x03990DA8 MOV X20, X2
	0x03990DAC MOV W21, W1
	0x03990DB0 MOV X22, X0
	0x03990DB4 TBNZ X8, 0x0, 0x3990DE4
	0x03990DB8 ADRP X0, 0x7C0000
	0x03990DBC LDR X0, [X0 + 0xB28]
	0x03990DC0 BL 0x1C16CF4
	0x03990DC4 ADRP X0, 0x764000
	0x03990DC8 LDR X0, [X0 + 0xE28]
	0x03990DCC BL 0x1C16CF4
	0x03990DD0 ADRP X0, 0x78D000
	0x03990DD4 LDR X0, [X0 + 0xF38]
	0x03990DD8 BL 0x1C16CF4
	0x03990DDC MOVZ W8, 0x1
	0x03990DE0 STRB W8, [X23 + 0xAB4]
	0x03990DE4 STR W31, [X19]
	0x03990DE8 LDR X0, [X20]
	0x03990DEC CBZ X0, 0x3990E98
	0x03990DF0 LDR W8, [X0 + 0x18]
	0x03990DF4 CMP W8, 0x1
	0x03990DF8 B.LT 0x3990E70

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA52000
	006 Move X21, 0x78F000
	007 Move W8, [X20+2860]
	008 Move X21, [X21+1840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78F000
	015 Move X0, [X0+1840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2860], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 And W0, W19, 0xFFFF
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean IsValid()

Disassembly:
	0x039991D0 CMP X10, X9
	0x039991D4 CSEL X0, X8, X31, EQ
	0x039991D8 LDP X20, X19, [X31 + 0x10]
	0x039991DC LDP X30, X21, [X31], #0x20
	0x039991E0 RET
	0x039991E4 BL 0x1C16F20
	0x039991E8 BL 0x1C16F28
	0x039991EC STR X30, [X31 - 0x50]!
	0x039991F0 STP X26, X25, [X31 + 0x10]
	0x039991F4 STP X24, X23, [X31 + 0x20]
	0x039991F8 STP X22, X21, [X31 + 0x30]
	0x039991FC STP X20, X19, [X31 + 0x40]
	0x03999200 ADRP X25, 0xA48000
	0x03999204 ADRP X26, 0x7B7000
	0x03999208 ADRP X24, 0x7B7000
	0x0399920C ADRP X20, 0x7B7000
	0x03999210 ADRP X23, 0x7B7000
	0x03999214 ADRP X22, 0x7B7000
	0x03999218 ADRP X21, 0x7B7000
	0x0399921C LDR X26, [X26 + 0x9B8]
	0x03999220 LDRB W8, [X25 + 0xAFE]
	0x03999224 LDR X24, [X24 + 0x9C0]
	0x03999228 LDR X20, [X20 + 0x9C8]
	0x0399922C LDR X23, [X23 + 0x958]
	0x03999230 LDR X22, [X22 + 0x9D0]
	0x03999234 LDR X21, [X21 + 0x9D8]
	0x03999238 MOV X19, X0
	0x0399923C TBNZ X8, 0x0, 0x3999290
	0x03999240 ADRP X0, 0x7B7000
	0x03999244 LDR X0, [X0 + 0x9C8]
	0x03999248 BL 0x1C16CF4
	0x0399924C ADRP X0, 0x7B7000
	0x03999250 LDR X0, [X0 + 0x9C0]
	0x03999254 BL 0x1C16CF4
	0x03999258 ADRP X0, 0x7B7000
	0x0399925C LDR X0, [X0 + 0x9D8]
	0x03999260 BL 0x1C16CF4
	0x03999264 ADRP X0, 0x7B7000
	0x03999268 LDR X0, [X0 + 0x9D0]
	0x0399926C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA49000
	005 Move W8, [X20+2861]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x786000
	012 Move X0, [X0+1840]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2861], W8
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move W19, W8
	018 ShiftRight W19, 16
	019 And W19, W19, 0x7FFF
	020 Compare W19, 0
	021 JumpIfEqual {34}
	022 Move X20, 0x786000
	023 Move X20, [X20+1840]
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move W9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W0, 1
	034 Move W0, W31
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Call 0x1C17DFC
	039 Move X8, [X20]
	040 Move X8, [X8+184]
	041 Move W8, [X8+4]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSET not yet implemented."
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0

Method: System.Void NewFrame(System.Int32 executionIndex)

Disassembly:
	0x0399A488 LDR V0, [X8 + 0xC1]
	0x0399A48C STR W31, [X0 + 0x10]
	0x0399A490 STR X1, [X0 + 0x28]
	0x0399A494 STUR V0, [X0 + 0x14]
	0x0399A498 RET
	0x0399A49C STR X30, [X31 - 0x20]!
	0x0399A4A0 STP X20, X19, [X31 + 0x10]
	0x0399A4A4 ADRP X19, 0xA47000
	0x0399A4A8 ADRP X20, 0x759000
	0x0399A4AC LDRB W8, [X19 + 0xB30]
	0x0399A4B0 LDR X20, [X20 + 0x988]
	0x0399A4B4 TBNZ X8, 0x0, 0x399A4CC
	0x0399A4B8 ADRP X0, 0x759000
	0x0399A4BC LDR X0, [X0 + 0x988]
	0x0399A4C0 BL 0x1C16CF4
	0x0399A4C4 MOVZ W8, 0x1
	0x0399A4C8 STRB W8, [X19 + 0xB30]
	0x0399A4CC LDR X0, [X20]
	0x0399A4D0 LDP X20, X19, [X31 + 0x10]
	0x0399A4D4 LDR X30, [X31], #0x20
	0x0399A4D8 RET
	0x0399A4DC MOV W0, W31
	0x0399A4E0 RET
	0x0399A4E4 LDR W8, [X0 + 0x14]
	0x0399A4E8 ADD W8, W8, 0x1
	0x0399A4EC STR W8, [X0 + 0x14]
	0x0399A4F0 RET
	0x0399A4F4 LDRB W8, [X0 + 0x13]
	0x0399A4F8 CBZ W8, 0x399A50C
	0x0399A4FC LDR W8, [X0 + 0x14]
	0x0399A500 CMP W8, 0x0
	0x0399A504 CSET W0, EQ
	0x0399A508 RET
	0x0399A50C MOV W0, W31
	0x0399A510 RET
	0x0399A514 RET
	0x0399A518 RET
	0x0399A51C RET
	0x0399A520 RET
	0x0399A524 RET
	0x0399A528 RET
	0x0399A52C MOV W0, W31
	0x0399A530 RET
	0x0399A534 MOV X1, X31
	0x0399A538 B 0x33BDD8C
	0x0399A53C STR X30, [X31 - 0x20]!
	0x0399A540 STP X20, X19, [X31 + 0x10]
	0x0399A544 ADRP X20, 0xA47000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA48000
	006 Move X20, 0x785000
	007 Move W8, [X21+2862]
	008 Move X20, [X20+1840]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x785000
	015 Move X0, [X0+1840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2862], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 0xFFFF
	027 Move W10, 0x5AC30000
	028 Multiply W9, W9, W10
	029 Move W21, [X8]
	030 And W10, W19, 0xFFFF0000
	031 Xor W9, W9, W10
	032 Move [X8], W9
	033 Compare W9, 0
	034 JumpIfEqual {44}
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {41}
	038 Call 0x1C17DFC
	039 Move X0, [X20]
	040 Move X8, [X0+184]
	041 Move W9, [X8]
	042 Move W8, [X8+4]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W19, W31
	045 Add W19, W19, 0x10000
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move [X8], W19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 

Method: System.Void .cctor()

Disassembly:
	0x0399B434 LDR X21, [X21 + 0x9C8]
	0x0399B438 MOV X19, X1
	0x0399B43C MOV X20, X0
	0x0399B440 TBNZ X8, 0x0, 0x399B464
	0x0399B444 ADRP X0, 0x758000
	0x0399B448 LDR X0, [X0 + 0x9C8]
	0x0399B44C BL 0x1C16CF4
	0x0399B450 ADRP X0, 0x7B6000
	0x0399B454 LDR X0, [X0 + 0x40]
	0x0399B458 BL 0x1C16CF4
	0x0399B45C MOVZ W8, 0x1
	0x0399B460 STRB W8, [X23 + 0xB4E]
	0x0399B464 LDR X1, [X20 + 0x80]
	0x0399B468 LDR X0, [X22]
	0x0399B46C MOV X2, X31
	0x0399B470 BL 0x321B938
	0x0399B474 LDR X21, [X21]
	0x0399B478 MOV X20, X0
	0x0399B47C LDR X8, [X21 + 0x38]
	0x0399B480 CBNZ X8, 0x399B490

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA47000
	005 Move X20, 0x784000
	006 Move W8, [X19+2863]
	007 Move X20, [X20+1840]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x784000
	013 Move X0, [X0+1840]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2863], W8
	017 Move X8, [X20]
	018 Move X9, -48943104
	019 Move V0, [X9+3840]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

