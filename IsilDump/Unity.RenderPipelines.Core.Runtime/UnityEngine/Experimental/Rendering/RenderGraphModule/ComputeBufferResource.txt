Type: UnityEngine.Experimental.Rendering.RenderGraphModule.ComputeBufferResource

Method: System.String GetName()

Disassembly:
	0x039992C0 MOV X20, X0
	0x039992C4 BL 0x398BD38
	0x039992C8 STR X20, [X19 + 0x28]
	0x039992CC LDR X0, [X22]
	0x039992D0 BL 0x1C16F10
	0x039992D4 LDR X2, [X21]
	0x039992D8 MOVZ W1, 0x100
	0x039992DC MOV X20, X0
	0x039992E0 BL 0x304375C
	0x039992E4 STR X20, [X19 + 0x48]
	0x039992E8 MOV X0, X19
	0x039992EC LDP X20, X19, [X31 + 0x40]
	0x039992F0 LDP X22, X21, [X31 + 0x30]
	0x039992F4 LDP X24, X23, [X31 + 0x20]
	0x039992F8 LDP X26, X25, [X31 + 0x10]
	0x039992FC MOV X1, X31
	0x03999300 LDR X30, [X31], #0x50
	0x03999304 B 0x33BDD8C
	0x03999308 STR X30, [X31 - 0x30]!
	0x0399930C STP X22, X21, [X31 + 0x10]
	0x03999310 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA49000
	006 Move X20, 0x7B8000
	007 Move W8, [X21+2796]
	008 Move X20, [X20+3768]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7B8000
	015 Move X0, [X0+3768]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2796], W8
	019 Move W8, [X19+16]
	020 Add X9, X19, 64
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0

Method: System.Void CreatePooledGraphicsResource()

Disassembly:
	0x03999314 ADRP X21, 0xA48000
	0x03999318 ADRP X22, 0x7B7000
	0x0399931C ADRP X20, 0x7B7000
	0x03999320 LDRB W8, [X21 + 0xB28]
	0x03999324 LDR X22, [X22 + 0xFB0]
	0x03999328 LDR X20, [X20 + 0xFB8]
	0x0399932C MOV X19, X0
	0x03999330 TBNZ X8, 0x0, 0x3999354
	0x03999334 ADRP X0, 0x7B7000
	0x03999338 LDR X0, [X0 + 0xFB8]
	0x0399933C BL 0x1C16CF4
	0x03999340 ADRP X0, 0x7B7000
	0x03999344 LDR X0, [X0 + 0xFB0]
	0x03999348 BL 0x1C16CF4
	0x0399934C MOVZ W8, 0x1
	0x03999350 STRB W8, [X21 + 0xB28]
	0x03999354 LDR X0, [X22]
	0x03999358 BL 0x1C16F10
	0x0399935C LDR X1, [X20]
	0x03999360 MOV X20, X0
	0x03999364 BL 0x2B3FB40
	0x03999368 STR X20, [X19 + 0x10]
	0x0399936C MOV X0, X19
	0x03999370 LDP X20, X19, [X31 + 0x20]
	0x03999374 LDP X22, X21, [X31 + 0x10]
	0x03999378 MOV X1, X31
	0x0399937C LDR X30, [X31], #0x30
	0x03999380 B 0x33BDD8C
	0x03999384 STR X30, [X31 - 0x30]!
	0x03999388 STP X22, X21, [X31 + 0x10]
	0x0399938C STP X20, X19, [X31 + 0x20]
	0x03999390 LDR X8, [X2 + 0x8]
	0x03999394 STP X1, X2, [X0 + 0x20]
	0x03999398 MOV X19, X0
	0x0399939C MOV X20, X2
	0x039993A0 STR X8, [X0 + 0x10]
	0x039993A4 LDRB W22, [X2 + 0x52]
	0x039993A8 STR X0, [X0 + 0x40]
	0x039993AC MOV X0, X2
	0x039993B0 MOV X21, X1
	0x039993B4 BL 0x1C16D84
	0x039993B8 TBZ X0, 0x0, 0x39993D0
	0x039993BC CMP W22, 0x2
	0x039993C0 B.NE 0x399940C
	0x039993C4 ADRP X8, 0xFFFFFFFFFE25F000
	0x039993C8 ADD X8, X8, 0x3E4
	0x039993CC B 0x3999450
	0x039993D0 CMP W22, 0x1
	0x039993D4 B.NE 0x3999408
	0x039993D8 LDRB W8, [X19 + 0x70]
	0x039993DC CBZ W8, 0x3999420
	0x039993E0 MOV X0, X20
	0x039993E4 BL 0x1C16D7C
	0x039993E8 MOV W21, W0
	0x039993EC MOV X0, X20
	0x039993F0 BL 0x1C17238
	0x039993F4 TBZ X21, 0x0, 0x399942C
	0x039993F8 TBZ X0, 0x0, 0x399943C
	0x039993FC ADRP X8, 0xFFFFFFFFFE25F000
	0x03999400 ADD X8, X8, 0x500
	0x03999404 B 0x3999450
	0x03999408 CBZ X21, 0x3999470
	0x0399940C LDR X8, [X19 + 0x10]
	0x03999410 LDR X9, [X19 + 0x20]
	0x03999414 STR X8, [X19 + 0x18]
	0x03999418 STR X9, [X19 + 0x40]
	0x0399941C B 0x3999454
	0x03999420 ADRP X8, 0xFFFFFFFFFE25F000
	0x03999424 ADD X8, X8, 0x3C0
	0x03999428 B 0x3999450
	0x0399942C TBZ X0, 0x0, 0x3999448
	0x03999430 ADRP X8, 0xFFFFFFFFFE25F000
	0x03999434 ADD X8, X8, 0x428
	0x03999438 B 0x3999450
	0x0399943C ADRP X8, 0xFFFFFFFFFE25F000
	0x03999440 ADD X8, X8, 0x4B4
	0x03999444 B 0x3999450
	0x03999448 ADRP X8, 0xFFFFFFFFFE25F000
	0x0399944C ADD X8, X8, 0x3F8
	0x03999450 STR X8, [X19 + 0x18]
	0x03999454 ADRP X8, 0xFFFFFFFFFE25F000
	0x03999458 ADD X8, X8, 0x368
	0x0399945C STR X8, [X19 + 0x38]
	0x03999460 LDP X20, X19, [X31 + 0x20]
	0x03999464 LDP X22, X21, [X31 + 0x10]
	0x03999468 LDR X30, [X31], #0x30
	0x0399946C RET
	0x03999470 ADRP X1, 0xFFFFFFFFFD182000
	0x03999474 ADD X1, X1, 0xEE3
	0x03999478 MOV X0, X31
	0x0399947C BL 0x1C16F3C
	0x03999480 MOV X1, X31
	0x03999484 BL 0x1C16DEC
	0x03999488 STP X30, X21, [X31 - 0x20]!
	0x0399948C STP X20, X19, [X31 + 0x10]
	0x03999490 ADRP X21, 0xA48000
	0x03999494 ADRP X20, 0x785000
	0x03999498 LDRB W8, [X21 + 0xB2E]
	0x0399949C LDR X20, [X20 + 0x730]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA49000
	007 Move W8, [X20+2797]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7B8000
	014 Move X0, [X0+2528]
	015 Call 0x1C17CF4
	016 Move X0, 0x7B8000
	017 Move X0, [X0+3776]
	018 Call 0x1C17CF4
	019 Move X0, 0x7B8000
	020 Move X0, [X0+3784]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2797], W8
	024 Move X2, X19
	025 Add X2, X2, 72
	026 Move X8, [X2]
	027 Compare X8, 0
	028 JumpIfNotEqual {89}
	029 Move X20, [X19+40]
	030 Compare X20, 0
	031 JumpIfEqual {88}
	032 Move X8, 0x7B8000
	033 Move X8, [X8+2528]
	034 Move X9, [X20]
	035 Move X8, [X8]
	036 Move W11, [X9+304]
	037 Move W10, [X8+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, [X9+200]
	040 Add X9, X9, X10
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0x7B8000
	044 Move X22, 0x7B8000
	045 Move X8, [X8+3784]
	046 Move X22, [X22+3776]
	047 Move W9, [X2-24]
	048 Move W10, [X2-20]
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 Move W12, 23
	051 Move X3, [X8]
	052 NotImplemented "Instruction MADD not yet implemented."
	053 Move W9, 0x27F7
	054 NotImplemented "Instruction MADD not yet implemented."
	055 NotImplemented "Instruction MOVK not yet implemented."
	056 Add W21, W8, W9
	057 Move X0, X20
	058 Move W1, W21
	059 Call 0x25C8C34, X0, X1, X2
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {70}
	064 Move X8, [X19]
	065 Move X1, [X19+64]
	066 Move X0, X19
	067 Move X9, [X8+472]
	068 Move X2, [X8+480]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move [X19+24], W21
	071 Move X2, [X19+72]
	072 Move X3, [X22]
	073 Move X0, X20
	074 Move W1, W21
	075 Call 0x25C90FC, X0, X1, X2
	076 Move X0, [X19+72]
	077 Compare X0, 0
	078 JumpIfEqual {88}
	079 Move X1, [X19+64]
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X2, X31
	085 Move X30, [X31+48]
	086 Call ComputeBuffer.set_name, X0, X1
	087 Return 
	088 Call 0x1C17F20
	089 Move X8, [X19]
	090 Move X0, X19
	091 Move X9, [X8+392]
	092 Move X1, [X8+400]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X19, X0
	095 Move X0, 0x7B8000
	096 Move X0, [X0+3792]
	097 Call 0x1C17D08
	098 Move X1, X19
	099 Move X2, X31
	100 Call String.Format, X0, X1
	101 Move X19, X0
	102 Move X0, 0x75B000
	103 Move X0, [X0+1456]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X1, X19
	107 Move X2, X31
	108 Move X20, X0
	109 Call InvalidOperationException..ctor, X0, X1
	110 Move X0, 0x7B8000
	111 Move X0, [X0+3800]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X20
	115 Call 0x1C17DEC

Method: System.Void ReleasePooledGraphicsResource(System.Int32 frameIndex)

Disassembly:
	0x039994A0 MOV W19, W0
	0x039994A4 TBNZ X8, 0x0, 0x39994BC
	0x039994A8 ADRP X0, 0x785000
	0x039994AC LDR X0, [X0 + 0x730]
	0x039994B0 BL 0x1C16CF4
	0x039994B4 MOVZ W8, 0x1
	0x039994B8 STRB W8, [X21 + 0xB2E]
	0x039994BC LDR X0, [X20]
	0x039994C0 LDR W8, [X0 + 0xE0]
	0x039994C4 CBNZ W8, 0x39994D0
	0x039994C8 BL 0x1C16DFC
	0x039994CC LDR X0, [X20]
	0x039994D0 LDR X8, [X0 + 0xB8]
	0x039994D4 AND W9, W19, 0xFFFF
	0x039994D8 MOVZ W10, 0x5AC30000
	0x039994DC MUL W9, W9, W10
	0x039994E0 LDR W21, [X8]
	0x039994E4 AND W10, W19, 0xFFFF0000
	0x039994E8 EOR W9, W9, W10, 0x0
	0x039994EC STR W9, [X8]
	0x039994F0 CBZ W9, 0x3999514
	0x039994F4 LDR W9, [X0 + 0xE0]
	0x039994F8 CBNZ W9, 0x3999508
	0x039994FC BL 0x1C16DFC
	0x03999500 LDR X0, [X20]
	0x03999504 LDR X8, [X0 + 0xB8]
	0x03999508 LDP W9, W8, [X8]
	0x0399950C CMP W9, W8
	0x03999510 B.NE 0x399953C
	0x03999514 MOV W19, W31
	0x03999518 ADD W19, W19, 0x10000
	0x0399951C CMP W21, W19
	0x03999520 B.EQ 0x3999518
	0x03999524 LDR W8, [X0 + 0xE0]
	0x03999528 CBNZ W8, 0x3999534
	0x0399952C BL 0x1C16DFC
	0x03999530 LDR X0, [X20]
	0x03999534 LDR X8, [X0 + 0xB8]
	0x03999538 STR W19, [X8]
	0x0399953C LDP X20, X19, [X31 + 0x10]
	0x03999540 LDP X30, X21, [X31], #0x20
	0x03999544 RET
	0x03999548 STP X30, X25, [X31 - 0x40]!
	0x0399954C STP X24, X23, [X31 + 0x10]
	0x03999550 STP X22, X21, [X31 + 0x20]
	0x03999554 STP X20, X19, [X31 + 0x30]
	0x03999558 ADRP X20, 0xA48000
	0x0399955C LDRB W8, [X20 + 0xB1A]
	0x03999560 MOV X19, X0
	0x03999564 TBNZ X8, 0x0, 0x399957C
	0x03999568 ADRP X0, 0x783000
	0x0399956C LDR X0, [X0 + 0xA80]
	0x03999570 BL 0x1C16CF4
	0x03999574 MOVZ W8, 0x1
	0x03999578 STRB W8, [X20 + 0xB1A]
	0x0399957C ADRP X23, 0x783000
	0x03999580 LDR X23, [X23 + 0xA80]
	0x03999584 MOV W22, W31
	0x03999588 LDR X8, [X19 + 0x10]
	0x0399958C CBZ X8, 0x399969C
	0x03999590 LDR W9, [X8 + 0x18]
	0x03999594 CMP W22, W9
	0x03999598 B.CS 0x39996A0
	0x0399959C SXTW X24, W22
	0x039995A0 ADD X8, X8, X24, 0x3, LSL
	0x039995A4 LDR X25, [X8 + 0x20]
	0x039995A8 CBZ X25, 0x399969C
	0x039995AC LDR W8, [X25 + 0x18]
	0x039995B0 CMP W8, 0x1
	0x039995B4 B.LT 0x399967C
	0x039995B8 MOV W20, W31
	0x039995BC LDR X8, [X19 + 0x10]
	0x039995C0 CBZ X8, 0x399969C
	0x039995C4 LDR W9, [X8 + 0x18]
	0x039995C8 CMP W22, W9
	0x039995CC B.CS 0x39996A0
	0x039995D0 ADD X8, X8, X24, 0x3, LSL
	0x039995D4 LDR X8, [X8 + 0x20]
	0x039995D8 CBZ X8, 0x399969C
	0x039995DC LDR X0, [X8 + 0x10]
	0x039995E0 CBZ X0, 0x399969C
	0x039995E4 LDR X2, [X23]
	0x039995E8 MOV W1, W20
	0x039995EC BL 0x2B40178
	0x039995F0 LDR X21, [X0]
	0x039995F4 CBZ X21, 0x399969C
	0x039995F8 LDR X8, [X21]
	0x039995FC MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA49000
	006 Move W8, [X21+2798]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7B8000
	014 Move X0, [X0+2528]
	015 Call 0x1C17CF4
	016 Move X0, 0x7B8000
	017 Move X0, [X0+3808]
	018 Call 0x1C17CF4
	019 Move X0, 0x7B8000
	020 Move X0, [X0+3816]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2798], W8
	024 Move X2, [X19+72]
	025 Compare X2, 0
	026 JumpIfEqual {65}
	027 Move X21, [X19+40]
	028 Compare X21, 0
	029 JumpIfEqual {55}
	030 Move X8, 0x7B8000
	031 Move X8, [X8+2528]
	032 Move X9, [X21]
	033 Move X8, [X8]
	034 Move W11, [X9+304]
	035 Move W10, [X8+304]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, [X9+200]
	038 Add X9, X9, X10
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x7B8000
	042 Move W1, [X19+24]
	043 Move X8, [X8+3808]
	044 Move X0, X21
	045 Move W3, W20
	046 Move X4, [X8]
	047 Call 0x25C8B20, X0, X1, X2, X3
	048 Move X8, 0x7B8000
	049 Move W1, [X19+24]
	050 Move X2, [X19+72]
	051 Move X8, [X8+3816]
	052 Move X0, X21
	053 Move X3, [X8]
	054 Call 0x25C91A4, X0, X1, X2
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X1, X31
	060 Move X3, [X8+376]
	061 Move X2, [X8+384]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 CallNoReturn X3
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move X9, [X8+392]
	068 Move X1, [X8+400]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X19, X0
	071 Move X0, 0x7B8000
	072 Move X0, [X0+3824]
	073 Call 0x1C17D08
	074 Move X20, X0
	075 Move X0, 0x7B8000
	076 Move X0, [X0+3832]
	077 Call 0x1C17D08
	078 Move X2, X0
	079 Move X0, X20
	080 Move X1, X19
	081 Move X3, X31
	082 Call String.Concat, X0, X1, X2
	083 Move X19, X0
	084 Move X0, 0x75B000
	085 Move X0, [X0+1456]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X1, X19
	089 Move X2, X31
	090 Move X20, X0
	091 Call InvalidOperationException..ctor, X0, X1
	092 Move X0, 0x7B8000
	093 Move X0, [X0+3840]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X20
	097 Call 0x1C17DEC

Method: System.Void CreateGraphicsResource(System.String name = )

Disassembly:
	0x03999600 LDP X9, X1, [X8 + 0x198]
	0x03999604 BLR X9
	0x03999608 LDR W8, [X21 + 0x20]
	0x0399960C LDR W9, [X19 + 0x3C]
	0x03999610 TBNZ X0, 0x0, 0x3999644
	0x03999614 CMP W8, W9
	0x03999618 B.NE 0x3999644
	0x0399961C LDR X8, [X21]
	0x03999620 MOV X0, X21
	0x03999624 LDP X9, X1, [X8 + 0x188]
	0x03999628 BLR X9
	0x0399962C LDR X8, [X21]
	0x03999630 MOV X1, X0
	0x03999634 MOV X0, X21
	0x03999638 LDP X9, X2, [X8 + 0x1D8]
	0x0399963C BLR X9
	0x03999640 B 0x399966C
	0x03999644 TBZ X0, 0x0, 0x399966C
	0x03999648 ADD W8, W8, 0x1E
	0x0399964C CMP W8, W9
	0x03999650 B.GE 0x399966C
	0x03999654 LDRB W8, [X21 + 0x12]
	0x03999658 CBNZ W8, 0x399966C
	0x0399965C LDR X8, [X21]
	0x03999660 MOV X0, X21
	0x03999664 LDP X9, X1, [X8 + 0x1F8]
	0x03999668 BLR X9
	0x0399966C LDR W8, [X25 + 0x18]
	0x03999670 ADD W20, W20, 0x1
	0x03999674 CMP W20, W8
	0x03999678 B.LT 0x39995BC
	0x0399967C ADD W22, W22, 0x1
	0x03999680 CMP W22, 0x2
	0x03999684 B.NE 0x3999588
	0x03999688 LDP X20, X19, [X31 + 0x30]
	0x0399968C LDP X22, X21, [X31 + 0x20]
	0x03999690 LDP X24, X23, [X31 + 0x10]
	0x03999694 LDP X30, X25, [X31], #0x40
	0x03999698 RET
	0x0399969C BL 0x1C16F20
	0x039996A0 BL 0x1C16F28
	0x039996A4 STP X30, X19, [X31 - 0x10]!
	0x039996A8 ADRP X19, 0xA48000
	0x039996AC LDRB W8, [X19 + 0xB47]
	0x039996B0 CBNZ W8, 0x39996C8
	0x039996B4 ADRP X0, 0x7B7000
	0x039996B8 LDR X0, [X0 + 0x960]
	0x039996BC BL 0x1C16CF4
	0x039996C0 MOVZ W8, 0x1
	0x039996C4 STRB W8, [X19 + 0xB47]
	0x039996C8 ADRP X8, 0x7B7000
	0x039996CC LDR X8, [X8 + 0x960]
	0x039996D0 LDR X8, [X8]
	0x039996D4 LDR X8, [X8 + 0xB8]
	0x039996D8 STR X31, [X8]
	0x039996DC LDP X30, X19, [X31], #0x10
	0x039996E0 RET
	0x039996E4 STR X30, [X31 - 0x30]!
	0x039996E8 STP X22, X21, [X31 + 0x10]
	0x039996EC STP X20, X19, [X31 + 0x20]
	0x039996F0 ADRP X21, 0xA48000
	0x039996F4 ADRP X22, 0x785000
	0x039996F8 LDRB W8, [X21 + 0xB01]
	0x039996FC LDR X22, [X22 + 0x730]
	0x03999700 MOV X20, X1
	0x03999704 MOV X19, X0
	0x03999708 TBNZ X8, 0x0, 0x3999720
	0x0399970C ADRP X0, 0x785000
	0x03999710 LDR X0, [X0 + 0x730]
	0x03999714 BL 0x1C16CF4
	0x03999718 MOVZ W8, 0x1
	0x0399971C STRB W8, [X21 + 0xB01]
	0x03999720 LDR X0, [X22]
	0x03999724 LDR W8, [X0 + 0xE0]
	0x03999728 CBNZ W8, 0x3999730
	0x0399972C BL 0x1C16DFC
	0x03999730 LDR W1, [X20 + 0x4]
	0x03999734 LDRH W2, [X20]
	0x03999738 MOV X0, X19
	0x0399973C LDP X20, X19, [X31 + 0x20]
	0x03999740 LDP X22, X21, [X31 + 0x10]
	0x03999744 LDR X30, [X31], #0x30
	0x03999748 B 0x3999754
	0x0399974C LDRH W0, [X0]
	0x03999750 RET
	0x03999754 STR X30, [X31 - 0x30]!
	0x03999758 STP X22, X21, [X31 + 0x10]
	0x0399975C STP X20, X19, [X31 + 0x20]
	0x03999760 ADRP X22, 0xA48000
	0x03999764 LDRB W8, [X22 + 0xB02]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xA49000
	011 Move X21, 0x784000
	012 Move X25, 0x75B000
	013 Move W8, [X22+2799]
	014 Move X21, [X21+1264]
	015 Move X25, [X25+2440]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x7B8000
	023 Move X0, [X0+3848]
	024 Call 0x1C17CF4
	025 Move X0, 0x784000
	026 Move X0, [X0+1264]
	027 Call 0x1C17CF4
	028 Move X0, 0x75B000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0x75B000
	032 Move X0, [X0+2440]
	033 Call 0x1C17CF4
	034 Move X0, 0x7B8000
	035 Move X0, [X0+3856]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2799], W8
	039 Move X0, [X21]
	040 Move W22, [X19+48]
	041 Move W23, [X19+52]
	042 Move W24, [X19+56]
	043 Call 0x1C17F10
	044 Move W1, W22
	045 Move W2, W23
	046 Move W3, W24
	047 Move X4, X31
	048 Move X21, X0
	049 Call ComputeBuffer..ctor, X0, X1, X2, X3
	050 Move [X19+72], X21
	051 Move X1, [X25]
	052 Move X0, X20
	053 Move X2, X31
	054 Call String.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {90}
	059 Move X22, 0x75B000
	060 Move W8, [X19+48]
	061 Move X22, [X22+1880]
	062 Add X1, X31, 12
	063 Move [X31+12], W8
	064 Move X0, [X22]
	065 Call 0x1C17E04
	066 Move X20, X0
	067 Move W8, [X19+52]
	068 Move X0, [X22]
	069 Add X1, X31, 8
	070 Move [X31+8], W8
	071 Call 0x1C17E04
	072 Move X9, 0x7B8000
	073 Move W8, [X19+56]
	074 Move X9, [X9+3848]
	075 Move X22, X0
	076 Add X1, X31, 4
	077 Move [X31+4], W8
	078 Move X0, [X9]
	079 Call 0x1C17E04
	080 Move X8, 0x7B8000
	081 Move X8, [X8+3856]
	082 Move X3, X0
	083 Move X1, X20
	084 Move X2, X22
	085 Move X8, [X8]
	086 Move X4, X31
	087 Move X0, X8
	088 Call String.Format, X0, X1, X2, X3
	089 Move X20, X0
	090 Compare X21, 0
	091 JumpIfEqual {106}
	092 Move X0, X21
	093 Move X1, X20
	094 Move X2, X31
	095 Call ComputeBuffer.set_name, X0, X1
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X22, [X31+48]
	099 Move X21, [X31+56]
	100 Move X24, [X31+32]
	101 Move X23, [X31+40]
	102 Move X30, [X31+16]
	103 Move X25, [X31+24]
	104 Add X31, X31, 80
	105 Return 
	106 Call 0x1C17F20

Method: System.Void ReleaseGraphicsResource()

Disassembly:
	0x03999768 MOV W19, W2
	0x0399976C MOV W20, W1
	0x03999770 MOV X21, X0
	0x03999774 TBNZ X8, 0x0, 0x399978C
	0x03999778 ADRP X0, 0x783000
	0x0399977C LDR X0, [X0 + 0xA88]
	0x03999780 BL 0x1C16CF4
	0x03999784 MOVZ W8, 0x1
	0x03999788 STRB W8, [X22 + 0xB02]
	0x0399978C LDR X8, [X21 + 0x10]
	0x03999790 CBZ X8, 0x39997D0
	0x03999794 LDR W9, [X8 + 0x18]
	0x03999798 CMP W9, W20
	0x0399979C B.LS 0x39997D4
	0x039997A0 ADD X8, X8, W20, 0x3, SXTW
	0x039997A4 LDR X8, [X8 + 0x20]
	0x039997A8 CBZ X8, 0x39997D0
	0x039997AC LDR X8, [X8 + 0x10]
	0x039997B0 CBZ X8, 0x39997D0
	0x039997B4 LDR W8, [X8 + 0x18]
	0x039997B8 CMP W8, W19
	0x039997BC B.LE 0x39997D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA49000
	005 Move W8, [X20+2800]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7B8000
	012 Move X0, [X0+3864]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2800], W8
	016 Move X20, 0x7B8000
	017 Move X0, [X19+72]
	018 Move X20, [X20+3864]
	019 Compare X0, 0
	020 JumpIfEqual {23}
	021 Move X1, X31
	022 Call ComputeBuffer.Release, X0
	023 Move X1, [X20]
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Call 0x25C9ED0, X0
	029 Return 

Method: System.Void LogCreation(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger logger)

Disassembly:
	0x039997C0 LDP X20, X19, [X31 + 0x20]
	0x039997C4 LDP X22, X21, [X31 + 0x10]
	0x039997C8 LDR X30, [X31], #0x30
	0x039997CC RET
	0x039997D0 BL 0x1C16F20
	0x039997D4 BL 0x1C16F28
	0x039997D8 STR W20, [X31 + 0xC]
	0x039997DC ADRP X0, 0x7B7000
	0x039997E0 LDR X0, [X0 + 0xCA8]
	0x039997E4 BL 0x1C16D08
	0x039997E8 ADD X1, X31, 0xC
	0x039997EC BL 0x1C16E04
	0x039997F0 MOV X20, X0
	0x039997F4 STR W19, [X31 + 0x8]
	0x039997F8 ADRP X0, 0x75A000
	0x039997FC LDR X0, [X0 + 0x758]
	0x03999800 BL 0x1C16D08
	0x03999804 ADD X1, X31, 0x8
	0x03999808 BL 0x1C16E04
	0x0399980C MOV X19, X0
	0x03999810 ADRP X0, 0x7B7000
	0x03999814 LDR X0, [X0 + 0xFC0]
	0x03999818 BL 0x1C16D08
	0x0399981C MOV X1, X20
	0x03999820 MOV X2, X19
	0x03999824 MOV X3, X31
	0x03999828 BL 0x3227BD4
	0x0399982C MOV X19, X0
	0x03999830 ADRP X0, 0x762000
	0x03999834 LDR X0, [X0 + 0x578]
	0x03999838 BL 0x1C16D08
	0x0399983C BL 0x1C16F10
	0x03999840 MOV X1, X19
	0x03999844 MOV X2, X31
	0x03999848 MOV X20, X0
	0x0399984C BL 0x3314A68
	0x03999850 ADRP X0, 0x7B7000
	0x03999854 LDR X0, [X0 + 0xFC8]
	0x03999858 BL 0x1C16D08
	0x0399985C MOV X1, X0
	0x03999860 MOV X0, X20
	0x03999864 BL 0x1C16DEC
	0x03999868 STR X30, [X31 - 0x30]!
	0x0399986C STP X22, X21, [X31 + 0x10]
	0x03999870 STP X20, X19, [X31 + 0x20]
	0x03999874 ADRP X22, 0xA48000
	0x03999878 ADRP X21, 0x785000
	0x0399987C LDRB W8, [X22 + 0xB04]
	0x03999880 LDR X21, [X21 + 0x730]
	0x03999884 MOV X19, X1
	0x03999888 MOV X20, X0
	0x0399988C TBNZ X8, 0x0, 0x39998B0
	0x03999890 ADRP X0, 0x783000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA49000
	008 Move X22, 0x7B8000
	009 Move X21, 0x75B000
	010 Move W8, [X23+2801]
	011 Move X22, [X22+3872]
	012 Move X21, [X21+2504]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x75B000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0x7B8000
	023 Move X0, [X0+3872]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2801], W8
	027 Move X1, [X20+64]
	028 Move X0, [X22]
	029 Move X2, X31
	030 Call String.Concat, X0, X1
	031 Move X21, [X21]
	032 Move X20, X0
	033 Move X8, [X21+56]
	034 Compare X8, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X21
	037 Call 0x1C5D6E0
	038 Move X8, [X21+56]
	039 Move X0, [X8+16]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X8, [X21+56]
	051 Move X0, [X8+16]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Compare X19, 0
	059 JumpIfEqual {72}
	060 Move X8, [X0+184]
	061 Move X0, X19
	062 Move X1, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X2, [X8]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Call RenderGraphLogger.LogLine, X0, X1, X2
	071 Return 
	072 Call 0x1C17F20

Method: System.Void LogRelease(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger logger)

Disassembly:
	0x03999894 LDR X0, [X0 + 0xA80]
	0x03999898 BL 0x1C16CF4
	0x0399989C ADRP X0, 0x785000
	0x039998A0 LDR X0, [X0 + 0x730]
	0x039998A4 BL 0x1C16CF4
	0x039998A8 MOVZ W8, 0x1
	0x039998AC STRB W8, [X22 + 0xB04]
	0x039998B0 MOV X0, X20
	0x039998B4 MOV X1, X19
	0x039998B8 BL 0x39996E4
	0x039998BC LDR X8, [X19]
	0x039998C0 LDR X0, [X21]
	0x039998C4 LDR X20, [X20 + 0x10]
	0x039998C8 STR X8, [X31 + 0x8]
	0x039998CC LDR W8, [X0 + 0xE0]
	0x039998D0 CBNZ W8, 0x39998D8
	0x039998D4 BL 0x1C16DFC
	0x039998D8 ADD X0, X31, 0x8
	0x039998DC BL 0x3997E7C
	0x039998E0 CBZ X20, 0x3999938
	0x039998E4 LDR W8, [X20 + 0x18]
	0x039998E8 CMP W0, W8
	0x039998EC B.CS 0x399993C
	0x039998F0 ADD X8, X20, W0, 0x3, SXTW
	0x039998F4 LDR X8, [X8 + 0x20]
	0x039998F8 CBZ X8, 0x3999938
	0x039998FC LDR X0, [X8 + 0x10]
	0x03999900 CBZ X0, 0x3999938
	0x03999904 ADRP X8, 0x783000
	0x03999908 LDR X8, [X8 + 0xA80]
	0x0399990C LDRH W1, [X19]
	0x03999910 LDR X2, [X8]
	0x03999914 BL 0x2B40178
	0x03999918 LDR X0, [X0]
	0x0399991C CBZ X0, 0x3999938
	0x03999920 LDR X8, [X0]
	0x03999924 LDP X20, X19, [X31 + 0x20]
	0x03999928 LDP X22, X21, [X31 + 0x10]
	0x0399992C LDP X2, X1, [X8 + 0x188]
	0x03999930 LDR X30, [X31], #0x30
	0x03999934 BR X2
	0x03999938 BL 0x1C16F20
	0x0399993C BL 0x1C16F28
	0x03999940 STR X30, [X31 - 0x30]!
	0x03999944 STP X22, X21, [X31 + 0x10]
	0x03999948 STP X20, X19, [X31 + 0x20]
	0x0399994C ADRP X22, 0xA48000
	0x03999950 ADRP X21, 0x785000
	0x03999954 LDRB W8, [X22 + 0xB0A]
	0x03999958 LDR X21, [X21 + 0x730]
	0x0399995C MOV X19, X1
	0x03999960 MOV X20, X0
	0x03999964 TBNZ X8, 0x0, 0x3999988

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA49000
	008 Move X22, 0x7B8000
	009 Move X21, 0x75B000
	010 Move W8, [X23+2802]
	011 Move X22, [X22+3880]
	012 Move X21, [X21+2504]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x75B000
	020 Move X0, [X0+2504]
	021 Call 0x1C17CF4
	022 Move X0, 0x7B8000
	023 Move X0, [X0+3880]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2802], W8
	027 Move X1, [X20+64]
	028 Move X0, [X22]
	029 Move X2, X31
	030 Call String.Concat, X0, X1
	031 Move X21, [X21]
	032 Move X20, X0
	033 Move X8, [X21+56]
	034 Compare X8, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X21
	037 Call 0x1C5D6E0
	038 Move X8, [X21+56]
	039 Move X0, [X8+16]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X8, [X21+56]
	051 Move X0, [X8+16]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Compare X19, 0
	059 JumpIfEqual {72}
	060 Move X8, [X0+184]
	061 Move X0, X19
	062 Move X1, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X2, [X8]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Call RenderGraphLogger.LogLine, X0, X1, X2
	071 Return 
	072 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03999968 ADRP X0, 0x783000
	0x0399996C LDR X0, [X0 + 0xA80]
	0x03999970 BL 0x1C16CF4
	0x03999974 ADRP X0, 0x785000
	0x03999978 LDR X0, [X0 + 0x730]
	0x0399997C BL 0x1C16CF4
	0x03999980 MOVZ W8, 0x1
	0x03999984 STRB W8, [X22 + 0xB0A]
	0x03999988 MOV X0, X20
	0x0399998C MOV X1, X19
	0x03999990 BL 0x39996E4
	0x03999994 LDR X8, [X19]
	0x03999998 LDR X0, [X21]
	0x0399999C LDR X20, [X20 + 0x10]
	0x039999A0 STR X8, [X31 + 0x8]
	0x039999A4 LDR W8, [X0 + 0xE0]
	0x039999A8 CBNZ W8, 0x39999B0
	0x039999AC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA49000
	006 Move X21, 0x7B8000
	007 Move W8, [X20+2803]
	008 Move X21, [X21+3888]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7B8000
	015 Move X0, [X0+3888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2803], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x25C9E94, X0
	026 Return 

