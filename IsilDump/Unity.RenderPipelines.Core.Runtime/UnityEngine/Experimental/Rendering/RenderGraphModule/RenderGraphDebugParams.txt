Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphDebugParams

Method: System.Void RegisterDebug(System.String name, UnityEngine.Rendering.DebugUI/Panel debugPanel = null)

Disassembly:
	0x0398BA18 MOVZ W1, 0x2
	0x0398BA1C LDR X0, [X8]
	0x0398BA20 BL 0x1C16D6C
	0x0398BA24 STR X0, [X19 + 0x78]
	0x0398BA28 ADRP X8, 0x7C5000
	0x0398BA2C LDR X8, [X8 + 0x938]
	0x0398BA30 LDR X0, [X8]
	0x0398BA34 BL 0x1C16F10
	0x0398BA38 ADRP X8, 0x7C5000
	0x0398BA3C LDR X8, [X8 + 0x928]
	0x0398BA40 MOV X21, X0
	0x0398BA44 LDR X1, [X8]
	0x0398BA48 BL 0x2B41D28
	0x0398BA4C STR X21, [X19 + 0x80]
	0x0398BA50 ADRP X8, 0x7C3000
	0x0398BA54 LDR X8, [X8 + 0xAD8]
	0x0398BA58 LDR X0, [X8]
	0x0398BA5C BL 0x1C16F10
	0x0398BA60 ADRP X8, 0x7C3000
	0x0398BA64 LDR X8, [X8 + 0xAD0]
	0x0398BA68 MOV X21, X0
	0x0398BA6C LDR X1, [X8]
	0x0398BA70 BL 0x2600728
	0x0398BA74 STR X21, [X19 + 0x88]
	0x0398BA78 ADRP X8, 0x7C5000
	0x0398BA7C LDR X8, [X8 + 0x910]
	0x0398BA80 LDR X0, [X8]
	0x0398BA84 BL 0x1C16F10
	0x0398BA88 ADRP X8, 0x7C5000
	0x0398BA8C LDR X8, [X8 + 0x900]
	0x0398BA90 MOV X21, X0
	0x0398BA94 LDR X1, [X8]
	0x0398BA98 BL 0x2AA4804
	0x0398BA9C STR X21, [X19 + 0xB0]
	0x0398BAA0 ADRP X8, 0x7C5000
	0x0398BAA4 LDR X8, [X8 + 0x968]
	0x0398BAA8 MOV X0, X19
	0x0398BAAC MOV X1, X31
	0x0398BAB0 LDR X8, [X8]
	0x0398BAB4 STR X8, [X19 + 0xB8]
	0x0398BAB8 BL 0x33BDD8C
	0x0398BABC STR X20, [X19 + 0xB8]
	0x0398BAC0 ADRP X8, 0x7C5000
	0x0398BAC4 LDP X20, X21, [X19 + 0x30]
	0x0398BAC8 LDR X8, [X8 + 0x960]
	0x0398BACC LDR X0, [X8]
	0x0398BAD0 BL 0x1C16F10
	0x0398BAD4 MOV X1, X20
	0x0398BAD8 MOV X2, X21
	0x0398BADC MOV X22, X0
	0x0398BAE0 BL 0x398BEC0
	0x0398BAE4 MOV X21, X31
	0x0398BAE8 MOVZ W8, 0x1
	0x0398BAEC STR X22, [X19 + 0x10]
	0x0398BAF0 LDR X0, [X27]
	0x0398BAF4 LDR X23, [X19 + 0x78]
	0x0398BAF8 MOV W22, W8
	0x0398BAFC BL 0x1C16F10
	0x0398BB00 LDR X1, [X29]
	0x0398BB04 MOV X20, X0
	0x0398BB08 BL 0x2B42710
	0x0398BB0C CBZ X23, 0x398BC18
	0x0398BB10 CBZ X20, 0x398BB28
	0x0398BB14 LDR X8, [X23]
	0x0398BB18 MOV X0, X20
	0x0398BB1C LDR X1, [X8 + 0x40]
	0x0398BB20 BL 0x1C16E00
	0x0398BB24 CBZ X0, 0x398BC20
	0x0398BB28 LDR W8, [X23 + 0x18]
	0x0398BB2C CMP X21, X8
	0x0398BB30 B.CS 0x398BC1C
	0x0398BB34 MOV W8, W31
	0x0398BB38 ADD X9, X23, X21, 0x3, LSL
	0x0398BB3C MOVZ W21, 0x1
	0x0398BB40 STR X20, [X9 + 0x20]
	0x0398BB44 TBNZ X22, 0x0, 0x398BAF0
	0x0398BB48 LDR X0, [X24]
	0x0398BB4C LDR W8, [X0 + 0xE0]
	0x0398BB50 CBNZ W8, 0x398BB5C
	0x0398BB54 BL 0x1C16DFC
	0x0398BB58 LDR X0, [X24]
	0x0398BB5C LDR X8, [X0 + 0xB8]
	0x0398BB60 LDR X0, [X8 + 0x8]
	0x0398BB64 CBZ X0, 0x398BC18
	0x0398BB68 ADRP X9, 0x7C5000
	0x0398BB6C LDR W10, [X0 + 0x1C]
	0x0398BB70 LDR X8, [X0 + 0x10]
	0x0398BB74 LDR X9, [X9 + 0x940]
	0x0398BB78 ADD W10, W10, 0x1
	0x0398BB7C LDR X9, [X9]
	0x0398BB80 STR W10, [X0 + 0x1C]
	0x0398BB84 CBZ X8, 0x398BC18
	0x0398BB88 LDRSW X10, [X0 + 0x18]
	0x0398BB8C LDR W11, [X8 + 0x18]
	0x0398BB90 CMP W10, W11
	0x0398BB94 B.CS 0x398BBAC
	0x0398BB98 ADD W9, W10, 0x1
	0x0398BB9C ADD X8, X8, X10, 0x3, LSL
	0x0398BBA0 STR W9, [X0 + 0x18]
	0x0398BBA4 STR X19, [X8 + 0x20]
	0x0398BBA8 B 0x398BBC0
	0x0398BBAC LDR X8, [X9 + 0x20]
	0x0398BBB0 MOV X1, X19
	0x0398BBB4 LDR X8, [X8 + 0xC0]
	0x0398BBB8 LDR X2, [X8 + 0x70]
	0x0398BBBC BL 0x301BF90
	0x0398BBC0 LDR X8, [X24]
	0x0398BBC4 LDR X8, [X8 + 0xB8]
	0x0398BBC8 LDR X8, [X8 + 0x18]
	0x0398BBCC CBZ X8, 0x398BBFC
	0x0398BBD0 LDR X3, [X8 + 0x18]
	0x0398BBD4 LDR X0, [X8 + 0x40]
	0x0398BBD8 LDR X2, [X8 + 0x28]
	0x0398BBDC MOV X1, X19
	0x0398BBE0 LDP X20, X19, [X31 + 0x50]
	0x0398BBE4 LDP X22, X21, [X31 + 0x40]
	0x0398BBE8 LDP X24, X23, [X31 + 0x30]
	0x0398BBEC LDP X26, X25, [X31 + 0x20]
	0x0398BBF0 LDP X28, X27, [X31 + 0x10]
	0x0398BBF4 LDP X29, X30, [X31], #0x60
	0x0398BBF8 BR X3
	0x0398BBFC LDP X20, X19, [X31 + 0x50]
	0x0398BC00 LDP X22, X21, [X31 + 0x40]
	0x0398BC04 LDP X24, X23, [X31 + 0x30]
	0x0398BC08 LDP X26, X25, [X31 + 0x20]
	0x0398BC0C LDP X28, X27, [X31 + 0x10]
	0x0398BC10 LDP X29, X30, [X31], #0x60
	0x0398BC14 RET
	0x0398BC18 BL 0x1C16F20
	0x0398BC1C BL 0x1C16F28
	0x0398BC20 BL 0x1C16F44
	0x0398BC24 MOV X1, X31
	0x0398BC28 BL 0x1C16DEC
	0x0398BC2C STR X30, [X31 - 0x50]!
	0x0398BC30 STP X26, X25, [X31 + 0x10]
	0x0398BC34 STP X24, X23, [X31 + 0x20]
	0x0398BC38 STP X22, X21, [X31 + 0x30]
	0x0398BC3C STP X20, X19, [X31 + 0x40]
	0x0398BC40 ADRP X25, 0xA56000
	0x0398BC44 ADRP X26, 0x7C5000
	0x0398BC48 ADRP X20, 0x7C5000
	0x0398BC4C ADRP X24, 0x7C5000
	0x0398BC50 ADRP X23, 0x7C5000
	0x0398BC54 ADRP X22, 0x7C5000
	0x0398BC58 ADRP X21, 0x7C5000
	0x0398BC5C LDR X26, [X26 + 0x970]
	0x0398BC60 LDRB W8, [X25 + 0xADC]
	0x0398BC64 LDR X20, [X20 + 0x978]
	0x0398BC68 LDR X24, [X24 + 0x980]
	0x0398BC6C LDR X23, [X23 + 0x988]
	0x0398BC70 LDR X22, [X22 + 0x990]
	0x0398BC74 LDR X21, [X21 + 0x998]
	0x0398BC78 MOV X19, X0
	0x0398BC7C TBNZ X8, 0x0, 0x398BCD0
	0x0398BC80 ADRP X0, 0x7C5000
	0x0398BC84 LDR X0, [X0 + 0x978]
	0x0398BC88 BL 0x1C16CF4
	0x0398BC8C ADRP X0, 0x7C5000
	0x0398BC90 LDR X0, [X0 + 0x970]
	0x0398BC94 BL 0x1C16CF4
	0x0398BC98 ADRP X0, 0x7C5000
	0x0398BC9C LDR X0, [X0 + 0x998]
	0x0398BCA0 BL 0x1C16CF4
	0x0398BCA4 ADRP X0, 0x7C5000
	0x0398BCA8 LDR X0, [X0 + 0x988]
	0x0398BCAC BL 0x1C16CF4
	0x0398BCB0 ADRP X0, 0x7C5000
	0x0398BCB4 LDR X0, [X0 + 0x980]
	0x0398BCB8 BL 0x1C16CF4
	0x0398BCBC ADRP X0, 0x7C5000
	0x0398BCC0 LDR X0, [X0 + 0x990]
	0x0398BCC4 BL 0x1C16CF4
	0x0398BCC8 MOVZ W8, 0x1
	0x0398BCCC STRB W8, [X25 + 0xADC]
	0x0398BCD0 LDR X0, [X26]
	0x0398BCD4 BL 0x1C16F10
	0x0398BCD8 LDR X1, [X20]
	0x0398BCDC MOV X20, X0
	0x0398BCE0 BL 0x29C30B0
	0x0398BCE4 STR X20, [X19 + 0x10]
	0x0398BCE8 LDR X0, [X24]
	0x0398BCEC BL 0x1C16F10
	0x0398BCF0 LDR X1, [X23]
	0x0398BCF4 MOV X20, X0
	0x0398BCF8 BL 0x2F46638
	0x0398BCFC STR X20, [X19 + 0x18]
	0x0398BD00 LDR X0, [X22]
	0x0398BD04 BL 0x1C16F10
	0x0398BD08 LDR X1, [X21]
	0x0398BD0C MOV X20, X0
	0x0398BD10 BL 0x301B7C4
	0x0398BD14 STR X20, [X19 + 0x20]
	0x0398BD18 MOV X0, X19
	0x0398BD1C LDP X20, X19, [X31 + 0x40]
	0x0398BD20 LDP X22, X21, [X31 + 0x30]
	0x0398BD24 LDP X24, X23, [X31 + 0x20]
	0x0398BD28 LDP X26, X25, [X31 + 0x10]
	0x0398BD2C MOV X1, X31
	0x0398BD30 LDR X30, [X31], #0x50
	0x0398BD34 B 0x33BDD8C
	0x0398BD38 STR X30, [X31 - 0x30]!
	0x0398BD3C STP X22, X21, [X31 + 0x10]
	0x0398BD40 STP X20, X19, [X31 + 0x20]
	0x0398BD44 ADRP X21, 0xA56000
	0x0398BD48 ADRP X22, 0x7C5000
	0x0398BD4C ADRP X20, 0x7C5000
	0x0398BD50 LDRB W8, [X21 + 0xADB]
	0x0398BD54 LDR X22, [X22 + 0x9A0]
	0x0398BD58 LDR X20, [X20 + 0x9A8]
	0x0398BD5C MOV X19, X0
	0x0398BD60 TBNZ X8, 0x0, 0x398BD84
	0x0398BD64 ADRP X0, 0x7C5000
	0x0398BD68 LDR X0, [X0 + 0x9A8]
	0x0398BD6C BL 0x1C16CF4
	0x0398BD70 ADRP X0, 0x7C5000
	0x0398BD74 LDR X0, [X0 + 0x9A0]
	0x0398BD78 BL 0x1C16CF4
	0x0398BD7C MOVZ W8, 0x1
	0x0398BD80 STRB W8, [X21 + 0xADB]
	0x0398BD84 LDR X0, [X22]
	0x0398BD88 BL 0x1C16F10
	0x0398BD8C LDR X1, [X20]
	0x0398BD90 MOV X20, X0
	0x0398BD94 BL 0x2AA4804
	0x0398BD98 STR X20, [X19 + 0x10]
	0x0398BD9C MOV X0, X19
	0x0398BDA0 LDP X20, X19, [X31 + 0x20]
	0x0398BDA4 LDP X22, X21, [X31 + 0x10]
	0x0398BDA8 MOV X1, X31
	0x0398BDAC LDR X30, [X31], #0x30
	0x0398BDB0 B 0x33BDD8C
	0x0398BDB4 SUB X31, X31, 0x80
	0x0398BDB8 STP X30, X21, [X31 + 0x60]
	0x0398BDBC STP X20, X19, [X31 + 0x70]
	0x0398BDC0 ADRP X21, 0xA56000
	0x0398BDC4 ADRP X20, 0x7C5000
	0x0398BDC8 LDRB W8, [X21 + 0xAD4]
	0x0398BDCC LDR X20, [X20 + 0x9B0]
	0x0398BDD0 MOV X19, X0
	0x0398BDD4 TBNZ X8, 0x0, 0x398BDF8
	0x0398BDD8 ADRP X0, 0x7C5000
	0x0398BDDC LDR X0, [X0 + 0x9B0]
	0x0398BDE0 BL 0x1C16CF4
	0x0398BDE4 ADRP X0, 0x768000
	0x0398BDE8 LDR X0, [X0 + 0x988]
	0x0398BDEC BL 0x1C16CF4
	0x0398BDF0 MOVZ W8, 0x1
	0x0398BDF4 STRB W8, [X21 + 0xAD4]
	0x0398BDF8 ADRP X21, 0x768000
	0x0398BDFC LDR X21, [X21 + 0x988]
	0x0398BE00 MOV X0, X19
	0x0398BE04 MOV X1, X31
	0x0398BE08 BL 0x33BDD8C
	0x0398BE0C MOV X0, X31
	0x0398BE10 BL 0x3C1B398
	0x0398BE14 LDR X8, [X20]
	0x0398BE18 MOV X20, X0
	0x0398BE1C LDR W9, [X8 + 0xE0]
	0x0398BE20 CBNZ W9, 0x398BE2C
	0x0398BE24 MOV X0, X8
	0x0398BE28 BL 0x1C16DFC
	0x0398BE2C MOV X0, X20
	0x0398BE30 MOV X1, X31
	0x0398BE34 BL 0x39D67FC
	0x0398BE38 STR X0, [X19 + 0x18]
	0x0398BE3C MOV X0, X31
	0x0398BE40 BL 0x3C1B370
	0x0398BE44 MOV X1, X31
	0x0398BE48 BL 0x39D67FC
	0x0398BE4C STR X0, [X19 + 0x20]
	0x0398BE50 LDR X8, [X21]
	0x0398BE54 FMOV S0, W31
	0x0398BE58 MOVZ W0, 0x1
	0x0398BE5C MOVZ W1, 0x1
	0x0398BE60 STP X8, X31, [X31 + 0x50]
	0x0398BE64 MOVZ W8, 0x1
	0x0398BE68 MOVZ W2, 0x1
	0x0398BE6C MOVZ W3, 0x20
	0x0398BE70 MOVZ W4, 0x4
	0x0398BE74 MOVZ W7, 0x2
	0x0398BE78 MOV W5, W31
	0x0398BE7C MOV W6, W31
	0x0398BE80 STR W31, [X31 + 0x48]
	0x0398BE84 STR W31, [X31 + 0x40]
	0x0398BE88 STRB W31, [X31 + 0x38]
	0x0398BE8C STRB W31, [X31 + 0x30]
	0x0398BE90 STRB W31, [X31 + 0x8]
	0x0398BE94 STR W8, [X31 + 0x28]
	0x0398BE98 STR W8, [X31 + 0x20]
	0x0398BE9C STRB W8, [X31 + 0x18]
	0x0398BEA0 STRB W8, [X31 + 0x10]
	0x0398BEA4 STRB W31, [X31]
	0x0398BEA8 BL 0x39CB244
	0x0398BEAC STR X0, [X19 + 0x28]
	0x0398BEB0 LDP X20, X19, [X31 + 0x70]
	0x0398BEB4 LDP X30, X21, [X31 + 0x60]
	0x0398BEB8 ADD X31, X31, 0x80
	0x0398BEBC RET
	0x0398BEC0 STP X29, X30, [X31 - 0x60]!
	0x0398BEC4 STP X28, X27, [X31 + 0x10]
	0x0398BEC8 STP X26, X25, [X31 + 0x20]
	0x0398BECC STP X24, X23, [X31 + 0x30]
	0x0398BED0 STP X22, X21, [X31 + 0x40]
	0x0398BED4 STP X20, X19, [X31 + 0x50]
	0x0398BED8 ADRP X26, 0xA56000
	0x0398BEDC ADRP X27, 0x7C5000
	0x0398BEE0 ADRP X25, 0x7C5000
	0x0398BEE4 ADRP X22, 0x7C5000
	0x0398BEE8 ADRP X24, 0x7C5000
	0x0398BEEC ADRP X23, 0x7C5000
	0x0398BEF0 ADRP X29, 0x7C5000
	0x0398BEF4 LDR X27, [X27 + 0x9B8]
	0x0398BEF8 LDRB W8, [X26 + 0xAFF]
	0x0398BEFC LDR X25, [X25 + 0x9C0]
	0x0398BF00 LDR X22, [X22 + 0x9C8]
	0x0398BF04 LDR X24, [X24 + 0x958]
	0x0398BF08 LDR X23, [X23 + 0x9D0]
	0x0398BF0C LDR X29, [X29 + 0x9D8]
	0x0398BF10 MOV X20, X2
	0x0398BF14 MOV X21, X1
	0x0398BF18 MOV X19, X0
	0x0398BF1C TBNZ X8, 0x0, 0x398BFB8
	0x0398BF20 ADRP X0, 0x7C5000
	0x0398BF24 LDR X0, [X0 + 0x9E0]
	0x0398BF28 BL 0x1C16CF4
	0x0398BF2C ADRP X0, 0x7C5000
	0x0398BF30 LDR X0, [X0 + 0x9C8]
	0x0398BF34 BL 0x1C16CF4
	0x0398BF38 ADRP X0, 0x7C5000
	0x0398BF3C LDR X0, [X0 + 0x9C0]
	0x0398BF40 BL 0x1C16CF4
	0x0398BF44 ADRP X0, 0x7C5000
	0x0398BF48 LDR X0, [X0 + 0x9D8]
	0x0398BF4C BL 0x1C16CF4
	0x0398BF50 ADRP X0, 0x7C5000
	0x0398BF54 LDR X0, [X0 + 0x9D0]
	0x0398BF58 BL 0x1C16CF4
	0x0398BF5C ADRP X0, 0x7C5000
	0x0398BF60 LDR X0, [X0 + 0x958]
	0x0398BF64 BL 0x1C16CF4
	0x0398BF68 ADRP X0, 0x7C5000
	0x0398BF6C LDR X0, [X0 + 0x9E8]
	0x0398BF70 BL 0x1C16CF4
	0x0398BF74 ADRP X0, 0x7C5000
	0x0398BF78 LDR X0, [X0 + 0x9F0]
	0x0398BF7C BL 0x1C16CF4
	0x0398BF80 ADRP X0, 0x7C5000
	0x0398BF84 LDR X0, [X0 + 0x9B8]
	0x0398BF88 BL 0x1C16CF4
	0x0398BF8C ADRP X0, 0x7C5000
	0x0398BF90 LDR X0, [X0 + 0x9F8]
	0x0398BF94 BL 0x1C16CF4
	0x0398BF98 ADRP X0, 0x7C5000
	0x0398BF9C LDR X0, [X0 + 0xA00]
	0x0398BFA0 BL 0x1C16CF4
	0x0398BFA4 ADRP X0, 0x7C5000
	0x0398BFA8 LDR X0, [X0 + 0xA08]
	0x0398BFAC BL 0x1C16CF4
	0x0398BFB0 MOVZ W8, 0x1
	0x0398BFB4 STRB W8, [X26 + 0xAFF]
	0x0398BFB8 ADRP X28, 0x7C5000
	0x0398BFBC ADRP X26, 0x7C5000
	0x0398BFC0 LDR X28, [X28 + 0x9F8]
	0x0398BFC4 LDR X26, [X26 + 0xA00]
	0x0398BFC8 LDR X0, [X27]
	0x0398BFCC ADRP X27, 0x7C5000
	0x0398BFD0 LDR X27, [X27 + 0x9E0]
	0x0398BFD4 MOVZ W1, 0x2
	0x0398BFD8 BL 0x1C16D6C
	0x0398BFDC STR X0, [X19 + 0x10]
	0x0398BFE0 LDR X0, [X25]
	0x0398BFE4 BL 0x1C16F10
	0x0398BFE8 LDR X1, [X22]
	0x0398BFEC MOV X22, X0
	0x0398BFF0 BL 0x2B40278
	0x0398BFF4 STR X22, [X19 + 0x18]
	0x0398BFF8 LDR X0, [X24]
	0x0398BFFC BL 0x1C16F10
	0x0398C000 MOV X22, X0
	0x0398C004 BL 0x398BD38
	0x0398C008 STR X22, [X19 + 0x28]
	0x0398C00C LDR X0, [X23]
	0x0398C010 BL 0x1C16F10
	0x0398C014 LDR X2, [X29]
	0x0398C018 MOVZ W1, 0x100
	0x0398C01C MOV X22, X0
	0x0398C020 BL 0x304375C
	0x0398C024 MOV X0, X19
	0x0398C028 MOV X1, X31
	0x0398C02C STR X22, [X19 + 0x48]
	0x0398C030 BL 0x33BDD8C
	0x0398C034 LDR X22, [X19 + 0x10]
	0x0398C038 MOV X23, X31
	0x0398C03C MOVZ W8, 0x1
	0x0398C040 STR X21, [X19 + 0x20]
	0x0398C044 STR X20, [X19 + 0x30]
	0x0398C048 LDR X0, [X28]
	0x0398C04C MOV W21, W8
	0x0398C050 BL 0x1C16F10
	0x0398C054 MOV X20, X0
	0x0398C058 BL 0x3999308
	0x0398C05C CBZ X22, 0x398C194
	0x0398C060 CBZ X20, 0x398C078
	0x0398C064 LDR X8, [X22]
	0x0398C068 MOV X0, X20
	0x0398C06C LDR X1, [X8 + 0x40]
	0x0398C070 BL 0x1C16E00
	0x0398C074 CBZ X0, 0x398C19C
	0x0398C078 LDR W8, [X22 + 0x18]
	0x0398C07C CMP X23, X8
	0x0398C080 B.CS 0x398C198
	0x0398C084 ADD X9, X22, X23, 0x3, LSL
	0x0398C088 STR X20, [X9 + 0x20]
	0x0398C08C LDR X22, [X19 + 0x10]
	0x0398C090 MOV W8, W31
	0x0398C094 MOVZ W23, 0x1
	0x0398C098 TBNZ X21, 0x0, 0x398C048
	0x0398C09C CBZ X22, 0x398C194
	0x0398C0A0 LDR W8, [X22 + 0x18]
	0x0398C0A4 CBZ W8, 0x398C198
	0x0398C0A8 LDR X0, [X26]
	0x0398C0AC LDR X21, [X22 + 0x20]
	0x0398C0B0 BL 0x1C16F10
	0x0398C0B4 ADRP X8, 0x7C4000
	0x0398C0B8 LDR X8, [X8 + 0x9E8]
	0x0398C0BC MOV X1, X19
	0x0398C0C0 MOV X20, X0
	0x0398C0C4 LDR X2, [X8]
	0x0398C0C8 BL 0x3999384
	0x0398C0CC CBZ X21, 0x398C194
	0x0398C0D0 STR X20, [X21 + 0x28]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31], X2
	015 Move X23, 0xA57000
	016 Move X24, 0x7C6000
	017 Move X22, 0x7C6000
	018 Move X21, 0x7C6000
	019 Move X20, 0x7C6000
	020 Move W8, [X23+2707]
	021 Move X24, [X24+1864]
	022 Move X22, [X22+1872]
	023 Move X21, [X21+1880]
	024 Move X20, [X20+1888]
	025 Move X26, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {117}
	031 Move X0, 0x769000
	032 Move X0, [X0+3368]
	033 Call 0x1C17CF4
	034 Move X0, 0x76A000
	035 Move X0, [X0+3696]
	036 Call 0x1C17CF4
	037 Move X0, 0x7C6000
	038 Move X0, [X0+1896]
	039 Call 0x1C17CF4
	040 Move X0, 0x7C6000
	041 Move X0, [X0+1904]
	042 Call 0x1C17CF4
	043 Move X0, 0x7C6000
	044 Move X0, [X0+1880]
	045 Call 0x1C17CF4
	046 Move X0, 0x7C6000
	047 Move X0, [X0+1912]
	048 Call 0x1C17CF4
	049 Move X0, 0x7C6000
	050 Move X0, [X0+1920]
	051 Call 0x1C17CF4
	052 Move X0, 0x7C6000
	053 Move X0, [X0+1928]
	054 Call 0x1C17CF4
	055 Move X0, 0x772000
	056 Move X0, [X0+2368]
	057 Call 0x1C17CF4
	058 Move X0, 0x7C6000
	059 Move X0, [X0+1936]
	060 Call 0x1C17CF4
	061 Move X0, 0x7C6000
	062 Move X0, [X0+1944]
	063 Call 0x1C17CF4
	064 Move X0, 0x7C6000
	065 Move X0, [X0+1872]
	066 Call 0x1C17CF4
	067 Move X0, 0x7C6000
	068 Move X0, [X0+1864]
	069 Call 0x1C17CF4
	070 Move X0, 0x7C6000
	071 Move X0, [X0+1952]
	072 Call 0x1C17CF4
	073 Move X0, 0x7C6000
	074 Move X0, [X0+1960]
	075 Call 0x1C17CF4
	076 Move X0, 0x7C6000
	077 Move X0, [X0+1968]
	078 Call 0x1C17CF4
	079 Move X0, 0x7C6000
	080 Move X0, [X0+1976]
	081 Call 0x1C17CF4
	082 Move X0, 0x7C6000
	083 Move X0, [X0+1984]
	084 Call 0x1C17CF4
	085 Move X0, 0x7C6000
	086 Move X0, [X0+1992]
	087 Call 0x1C17CF4
	088 Move X0, 0x7C6000
	089 Move X0, [X0+2000]
	090 Call 0x1C17CF4
	091 Move X0, 0x7C6000
	092 Move X0, [X0+2008]
	093 Call 0x1C17CF4
	094 Move X0, 0x7C6000
	095 Move X0, [X0+2016]
	096 Call 0x1C17CF4
	097 Move X0, 0x7C6000
	098 Move X0, [X0+2024]
	099 Call 0x1C17CF4
	100 Move X0, 0x7C6000
	101 Move X0, [X0+2032]
	102 Call 0x1C17CF4
	103 Move X0, 0x7C6000
	104 Move X0, [X0+2040]
	105 Call 0x1C17CF4
	106 Move X0, 0x7C6000
	107 Move X0, [X0+2048]
	108 Call 0x1C17CF4
	109 Move X0, 0x7C6000
	110 Move X0, [X0+2056]
	111 Call 0x1C17CF4
	112 Move X0, 0x7C6000
	113 Move X0, [X0+1888]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X23+2707], W8
	117 Move X0, [X24]
	118 Call 0x1C17F10
	119 Move X1, [X22]
	120 Move X22, X0
	121 Call List`1<Object>..ctor, X0
	122 Move X0, [X21]
	123 Call 0x1C17F10
	124 Move X1, X31
	125 Move X23, X0
	126 Call Container..ctor, X0
	127 Move X1, [X20]
	128 Move X0, X26
	129 Move X2, X31
	130 Call String.Concat, X0, X1
	131 Compare X23, 0
	132 JumpIfEqual {474}
	133 Move X29, 0x7C6000
	134 Move X29, [X29+1896]
	135 Move [X23+40], X0
	136 Move X27, 0x7C6000
	137 Move X24, [X23+72]
	138 Move X0, [X29]
	139 Move X27, [X27+2048]
	140 Call 0x1C17F10
	141 Move X1, X31
	142 Move X25, X0
	143 Call BoolField..ctor, X0
	144 Move X0, [X27]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {150}
	148 Call 0x1C17DFC
	149 Move X0, [X27]
	150 Move [X31+8], X26
	151 Compare X25, 0
	152 JumpIfEqual {474}
	153 Move X8, [X0+184]
	154 Move X21, 0x772000
	155 Move X21, [X21+2368]
	156 Move X26, 0x7C6000
	157 Move X1, [X8]
	158 Move X2, [X8+8]
	159 Move X20, 0x769000
	160 Move X28, 0x7C6000
	161 Move X26, [X26+1968]
	162 Move X20, [X20+3368]
	163 Move X28, [X28+1976]
	164 Move X0, X25
	165 Move X3, X31
	166 Call Widget.set_nameAndTooltip, X0, X1
	167 Move X0, [X21]
	168 Call 0x1C17F10
	169 Move X2, [X26]
	170 Move X1, X19
	171 Move X3, X31
	172 Move X26, X0
	173 Call Func`1<Boolean>..ctor, X0, X1, X2
	174 Move [X25+72], X26
	175 Move X0, [X20]
	176 Call 0x1C17F10
	177 Move X2, [X28]
	178 Move X1, X19
	179 Move X3, X31
	180 Move X26, X0
	181 Call Action`1<Boolean>..ctor, X0, X1, X2
	182 Move [X25+80], X26
	183 Compare X24, 0
	184 JumpIfEqual {474}
	185 Move X28, 0x7C6000
	186 Move X28, [X28+1952]
	187 Move X0, X24
	188 Move X1, X25
	189 Move X2, [X28]
	190 Call 0x2498EC8, X0, X1
	191 Move X0, [X29]
	192 Move X24, [X23+72]
	193 Call 0x1C17F10
	194 Move X1, X31
	195 Move X25, X0
	196 Call BoolField..ctor, X0
	197 Compare X25, 0
	198 JumpIfEqual {474}
	199 Move X8, [X27]
	200 Move X26, 0x7C6000
	201 Move X27, 0x7C6000
	202 Move X0, X25
	203 Move X8, [X8+184]
	204 Move X3, X31
	205 Move X1, [X8+16]
	206 Move X2, [X8+24]
	207 Move X26, [X26+1984]
	208 Move X27, [X27+1992]
	209 Call Widget.set_nameAndTooltip, X0, X1
	210 Move X0, [X21]
	211 Call 0x1C17F10
	212 Move X2, [X26]
	213 Move X1, X19
	214 Move X3, X31
	215 Move X26, X0
	216 Call Func`1<Boolean>..ctor, X0, X1, X2
	217 Move [X25+72], X26
	218 Move X0, [X20]
	219 Call 0x1C17F10
	220 Move X2, [X27]
	221 Move X1, X19
	222 Move X3, X31
	223 Move X26, X0
	224 Call Action`1<Boolean>..ctor, X0, X1, X2
	225 Move [X25+80], X26
	226 Compare X24, 0
	227 JumpIfEqual {474}
	228 Move X2, [X28]
	229 Move X0, X24
	230 Move X1, X25
	231 Call 0x2498EC8, X0, X1
	232 Move X0, [X29]
	233 Move X24, [X23+72]
	234 Call 0x1C17F10
	235 Move X1, X31
	236 Move X25, X0
	237 Call BoolField..ctor, X0
	238 Compare X25, 0
	239 JumpIfEqual {474}
	240 Move X8, 0x7C6000
	241 Move X8, [X8+2048]
	242 Move X26, 0x7C6000
	243 Move X27, 0x7C6000
	244 Move X0, X25
	245 Move X8, [X8]
	246 Move X3, X31
	247 Move X8, [X8+184]
	248 Move X1, [X8+32]
	249 Move X2, [X8+40]
	250 Move X26, [X26+2000]
	251 Move X27, [X27+2008]
	252 Call Widget.set_nameAndTooltip, X0, X1
	253 Move X0, [X21]
	254 Call 0x1C17F10
	255 Move X2, [X26]
	256 Move X1, X19
	257 Move X3, X31
	258 Move X26, X0
	259 Call Func`1<Boolean>..ctor, X0, X1, X2
	260 Move [X25+72], X26
	261 Move X0, [X20]
	262 Call 0x1C17F10
	263 Move X2, [X27]
	264 Move X1, X19
	265 Move X3, X31
	266 Move X26, X0
	267 Call Action`1<Boolean>..ctor, X0, X1, X2
	268 Move [X25+80], X26
	269 Compare X24, 0
	270 JumpIfEqual {474}
	271 Move X2, [X28]
	272 Move X0, X24
	273 Move X1, X25
	274 Call 0x2498EC8, X0, X1
	275 Move X0, [X29]
	276 Move X24, [X23+72]
	277 Call 0x1C17F10
	278 Move X1, X31
	279 Move X25, X0
	280 Call BoolField..ctor, X0
	281 Compare X25, 0
	282 JumpIfEqual {474}
	283 Move X8, 0x7C6000
	284 Move X8, [X8+2048]
	285 Move X26, 0x7C6000
	286 Move X27, 0x7C6000
	287 Move X0, X25
	288 Move X8, [X8]
	289 Move X3, X31
	290 Move X8, [X8+184]
	291 Move X1, [X8+48]
	292 Move X2, [X8+56]
	293 Move X26, [X26+2016]
	294 Move X27, [X27+2024]
	295 Call Widget.set_nameAndTooltip, X0, X1
	296 Move X0, [X21]
	297 Call 0x1C17F10
	298 Move X2, [X26]
	299 Move X1, X19
	300 Move X3, X31
	301 Move X26, X0
	302 Call Func`1<Boolean>..ctor, X0, X1, X2
	303 Move [X25+72], X26
	304 Move X0, [X20]
	305 Call 0x1C17F10
	306 Move X2, [X27]
	307 Move X1, X19
	308 Move X3, X31
	309 Move X26, X0
	310 Call Action`1<Boolean>..ctor, X0, X1, X2
	311 Move [X25+80], X26
	312 Compare X24, 0
	313 JumpIfEqual {474}
	314 Move X2, [X28]
	315 Move X21, 0x7C6000
	316 Move X21, [X21+1904]
	317 Move X0, X24
	318 Move X1, X25
	319 Call 0x2498EC8, X0, X1
	320 Move X0, [X21]
	321 Move X24, [X23+72]
	322 Call 0x1C17F10
	323 Move X1, X31
	324 Move X25, X0
	325 Call Button..ctor, X0
	326 Compare X25, 0
	327 JumpIfEqual {474}
	328 Move X27, 0x7C6000
	329 Move X27, [X27+2048]
	330 Move X20, 0x76A000
	331 Move X26, 0x7C6000
	332 Move X0, X25
	333 Move X8, [X27]
	334 Move X3, X31
	335 Move X8, [X8+184]
	336 Move X1, [X8+64]
	337 Move X2, [X8+72]
	338 Move X20, [X20+3696]
	339 Move X26, [X26+2032]
	340 Call Widget.set_nameAndTooltip, X0, X1
	341 Move X0, [X20]
	342 Call 0x1C17F10
	343 Move X2, [X26]
	344 Move X1, X19
	345 Move X3, X31
	346 Move X26, X0
	347 Call Action..ctor, X0, X1, X2
	348 Move [X25+72], X26
	349 Compare X24, 0
	350 JumpIfEqual {474}
	351 Move X2, [X28]
	352 Move X0, X24
	353 Move X1, X25
	354 Call 0x2498EC8, X0, X1
	355 Move X0, [X21]
	356 Move X24, [X23+72]
	357 Call 0x1C17F10
	358 Move X1, X31
	359 Move X25, X0
	360 Call Button..ctor, X0
	361 Compare X25, 0
	362 JumpIfEqual {474}
	363 Move X8, [X27]
	364 Move X21, 0x7C6000
	365 Move X0, X25
	366 Move X3, X31
	367 Move X8, [X8+184]
	368 Move X1, [X8+80]
	369 Move X2, [X8+88]
	370 Move X21, [X21+2040]
	371 Call Widget.set_nameAndTooltip, X0, X1
	372 Move X0, [X20]
	373 Call 0x1C17F10
	374 Move X2, [X21]
	375 Move X1, X19
	376 Move X3, X31
	377 Move X26, X0
	378 Call Action..ctor, X0, X1, X2
	379 Move [X25+72], X26
	380 Compare X24, 0
	381 JumpIfEqual {474}
	382 Move X2, [X28]
	383 Move X0, X24
	384 Move X1, X25
	385 Call 0x2498EC8, X0, X1
	386 Compare X22, 0
	387 JumpIfEqual {474}
	388 Move X9, 0x7C6000
	389 Move X9, [X9+1936]
	390 Move W10, [X22+28]
	391 Move X8, [X22+16]
	392 Move X21, [X31+8]
	393 Move X9, [X9]
	394 Add W10, W10, 1
	395 Move [X22+28], W10
	396 Compare X8, 0
	397 JumpIfEqual {474}
	398 NotImplemented "Instruction LDRSW not yet implemented."
	399 Move W11, [X8+24]
	400 Move X20, 0x7C6000
	401 Move X20, [X20+1944]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Add W9, W10, 1
	404 Add X8, X8, X10
	405 Move [X22+24], W9
	406 Move [X8+32], X23
	407 Move X8, [X9+32]
	408 Move X0, X22
	409 Move X1, X23
	410 Move X8, [X8+192]
	411 Move X2, [X8+112]
	412 Call List`1<Object>.AddWithResize, X0, X1
	413 Move X1, [X20]
	414 Move X0, X22
	415 Call List`1<Object>.ToArray, X0
	416 Move X20, [X31]
	417 Move [X19+16], X0
	418 Compare X20, 0
	419 JumpIfEqual {421}
	420 Move X0, X20
	421 Move X8, 0x7C5000
	422 Move X8, [X8+1912]
	423 Move X0, [X8]
	424 Move W8, [X0+224]
	425 Compare W8, 0
	426 JumpIfNotEqual {428}
	427 Call 0x1C17DFC
	428 Move X0, X31
	429 Call DebugManager.get_instance
	430 Compare X21, 0
	431 JumpIfEqual {474}
	432 Compare X0, 0
	433 JumpIfEqual {474}
	434 Move X9, 0x7C5000
	435 Move W8, [X21+16]
	436 Move X9, [X9+2056]
	437 Move W2, 1
	438 Move W3, W31
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move X9, [X9]
	441 Move W4, W31
	442 Move X5, X31
	443 NotImplemented "Instruction CSEL not yet implemented."
	444 Call DebugManager.GetPanel, X0, X1, X2, X3, X4
	445 Compare X19, 0
	446 JumpIfEqual {474}
	447 Compare X20, 0
	448 JumpIfNotEqual {474}
	449 Move [X19+24], X0
	450 Compare X0, 0
	451 JumpIfEqual {474}
	452 Move X0, [X0+40]
	453 Compare X0, 0
	454 JumpIfEqual {474}
	455 Move X8, 0x7C5000
	456 Move X8, [X8+1960]
	457 Move X1, [X19+16]
	458 Move X20, [X31+96]
	459 Move X19, [X31+104]
	460 Move X22, [X31+80]
	461 Move X21, [X31+88]
	462 Move X2, [X8]
	463 Move X24, [X31+64]
	464 Move X23, [X31+72]
	465 Move X26, [X31+48]
	466 Move X25, [X31+56]
	467 Move X28, [X31+32]
	468 Move X27, [X31+40]
	469 Move X29, [X31+16]
	470 Move X30, [X31+24]
	471 Add X31, X31, 112
	472 Call 0x249901C, X0, X1
	473 Return 
	474 Call 0x1C17F20

Method: System.Void UnRegisterDebug(System.String name)

Disassembly:
	0x0398C0D4 LDR X8, [X19 + 0x10]
	0x0398C0D8 CBZ X8, 0x398C194
	0x0398C0DC LDR W9, [X8 + 0x18]
	0x0398C0E0 CBZ W9, 0x398C198
	0x0398C0E4 LDR X0, [X26]
	0x0398C0E8 LDR X21, [X8 + 0x20]
	0x0398C0EC BL 0x1C16F10
	0x0398C0F0 ADRP X8, 0x7C4000
	0x0398C0F4 LDR X8, [X8 + 0x9F0]
	0x0398C0F8 MOV X1, X19
	0x0398C0FC MOV X20, X0
	0x0398C100 LDR X2, [X8]
	0x0398C104 BL 0x3999384
	0x0398C108 CBZ X21, 0x398C194
	0x0398C10C STR X20, [X21 + 0x30]
	0x0398C110 LDR X8, [X19 + 0x10]
	0x0398C114 CBZ X8, 0x398C194
	0x0398C118 LDR W9, [X8 + 0x18]
	0x0398C11C CBZ W9, 0x398C198
	0x0398C120 LDR X21, [X8 + 0x20]
	0x0398C124 ADRP X8, 0x7C4000
	0x0398C128 LDR X8, [X8 + 0xA08]
	0x0398C12C LDR X0, [X8]
	0x0398C130 BL 0x1C16F10
	0x0398C134 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA56000
	005 Move W8, [X20+2708]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7C5000
	012 Move X0, [X0+2064]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2708], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {34}
	019 Move X0, [X8+40]
	020 Compare X0, 0
	021 JumpIfEqual {34}
	022 Move X8, 0x7C5000
	023 Move X8, [X8+2064]
	024 Add X19, X19, 16
	025 Move X1, [X19]
	026 Move X2, [X8]
	027 Call 0x24992D0, X0, X1
	028 Move [X19], X31
	029 Move [X19+8], X31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0398C138 MOV X20, X0
	0x0398C13C BL 0x399BB30

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <RegisterDebug>b__10_0()

Disassembly:
	0x0398C140 CBZ X21, 0x398C194
	0x0398C144 STR X20, [X21 + 0x20]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void <RegisterDebug>b__10_1(System.Boolean value)

Disassembly:
	0x0398C148 LDR X8, [X19 + 0x10]
	0x0398C14C CBZ X8, 0x398C194
	0x0398C150 LDR W9, [X8 + 0x18]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Boolean <RegisterDebug>b__10_2()

Disassembly:
	0x0398C154 CMP W9, 0x1
	0x0398C158 B.LS 0x398C198

ISIL:
	001 Move W0, [X0+34]
	002 Return X0

Method: System.Void <RegisterDebug>b__10_3(System.Boolean value)

Disassembly:
	0x0398C15C LDR X0, [X27]
	0x0398C160 LDR X20, [X8 + 0x28]
	0x0398C164 BL 0x1C16F10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+34], W8
	003 Return 

Method: System.Boolean <RegisterDebug>b__10_4()

Disassembly:
	0x0398C168 MOV X19, X0
	0x0398C16C BL 0x3999000

ISIL:
	001 Move W0, [X0+35]
	002 Return X0

Method: System.Void <RegisterDebug>b__10_5(System.Boolean value)

Disassembly:
	0x0398C170 CBZ X20, 0x398C194
	0x0398C174 STR X19, [X20 + 0x20]
	0x0398C178 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+35], W8
	003 Return 

Method: System.Boolean <RegisterDebug>b__10_6()

Disassembly:
	0x0398C17C LDP X22, X21, [X31 + 0x40]
	0x0398C180 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void <RegisterDebug>b__10_7(System.Boolean value)

Disassembly:
	0x0398C184 LDP X26, X25, [X31 + 0x20]
	0x0398C188 LDP X28, X27, [X31 + 0x10]
	0x0398C18C LDP X29, X30, [X31], #0x60

ISIL:
	001 And W8, W1, 1
	002 Move [X0+36], W8
	003 Return 

Method: System.Void <RegisterDebug>b__10_8()

Disassembly:
	0x0398C190 RET
	0x0398C194 BL 0x1C16F20
	0x0398C198 BL 0x1C16F28
	0x0398C19C BL 0x1C16F44
	0x0398C1A0 MOV X1, X31
	0x0398C1A4 BL 0x1C16DEC
	0x0398C1A8 STR X30, [X31 - 0x20]!
	0x0398C1AC STP X20, X19, [X31 + 0x10]
	0x0398C1B0 ADRP X20, 0xA55000
	0x0398C1B4 LDRB W8, [X20 + 0xA9D]
	0x0398C1B8 MOV X19, X0
	0x0398C1BC TBNZ X8, 0x0, 0x398C1E0
	0x0398C1C0 ADRP X0, 0x7C4000
	0x0398C1C4 LDR X0, [X0 + 0xA10]
	0x0398C1C8 BL 0x1C16CF4
	0x0398C1CC ADRP X0, 0x7C4000
	0x0398C1D0 LDR X0, [X0 + 0x8C0]
	0x0398C1D4 BL 0x1C16CF4
	0x0398C1D8 MOVZ W8, 0x1
	0x0398C1DC STRB W8, [X20 + 0xA9D]
	0x0398C1E0 LDR X0, [X19 + 0x10]
	0x0398C1E4 CBZ X0, 0x398C278
	0x0398C1E8 BL 0x398C27C
	0x0398C1EC LDR X0, [X19 + 0x40]
	0x0398C1F0 CBZ X0, 0x398C278
	0x0398C1F4 BL 0x398C31C
	0x0398C1F8 LDR X0, [X19 + 0x18]
	0x0398C1FC CBZ X0, 0x398C278
	0x0398C200 ADRP X20, 0x7C4000
	0x0398C204 LDR X20, [X20 + 0x8C0]
	0x0398C208 BL 0x398C35C
	0x0398C20C LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA56000
	005 Move W8, [X20+2709]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x768000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x7C5000
	015 Move X0, [X0+2072]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2709], W8
	019 Move W8, [X19+36]
	020 Compare W8, 0
	021 JumpIfNotEqual {34}
	022 Move X8, 0x768000
	023 Move X8, [X8+2600]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, 0x7C5000
	030 Move X8, [X8+2072]
	031 Move X1, X31
	032 Move X0, [X8]
	033 Call Debug.Log, X0
	034 Move W8, 1
	035 Move [X19+37], W8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 

Method: System.Void <RegisterDebug>b__10_9()

Disassembly:
	0x0398C210 LDR W8, [X0 + 0xE0]
	0x0398C214 CBNZ W8, 0x398C220
	0x0398C218 BL 0x1C16DFC
	0x0398C21C LDR X0, [X20]
	0x0398C220 LDR X8, [X0 + 0xB8]
	0x0398C224 LDR X0, [X8 + 0x8]
	0x0398C228 CBZ X0, 0x398C278
	0x0398C22C ADRP X8, 0x7C4000
	0x0398C230 LDR X8, [X8 + 0xA10]
	0x0398C234 MOV X1, X19
	0x0398C238 LDR X2, [X8]
	0x0398C23C BL 0x301D7A8
	0x0398C240 LDR X8, [X20]
	0x0398C244 LDR X8, [X8 + 0xB8]
	0x0398C248 LDR X8, [X8 + 0x20]
	0x0398C24C CBZ X8, 0x398C26C
	0x0398C250 LDR X3, [X8 + 0x18]
	0x0398C254 LDR X0, [X8 + 0x40]
	0x0398C258 LDR X2, [X8 + 0x28]
	0x0398C25C MOV X1, X19
	0x0398C260 LDP X20, X19, [X31 + 0x10]
	0x0398C264 LDR X30, [X31], #0x20
	0x0398C268 BR X3
	0x0398C26C LDP X20, X19, [X31 + 0x10]
	0x0398C270 LDR X30, [X31], #0x20
	0x0398C274 RET
	0x0398C278 BL 0x1C16F20
	0x0398C27C STP X30, X21, [X31 - 0x20]!
	0x0398C280 STP X20, X19, [X31 + 0x10]
	0x0398C284 ADRP X20, 0xA55000
	0x0398C288 LDRB W8, [X20 + 0xB23]
	0x0398C28C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA56000
	005 Move W8, [X20+2710]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x768000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x7C5000
	015 Move X0, [X0+2080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2710], W8
	019 Move W8, [X19+36]
	020 Compare W8, 0
	021 JumpIfNotEqual {34}
	022 Move X8, 0x768000
	023 Move X8, [X8+2600]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, 0x7C5000
	030 Move X8, [X8+2080]
	031 Move X1, X31
	032 Move X0, [X8]
	033 Call Debug.Log, X0
	034 Move W8, 1
	035 Move [X19+38], W8
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 

