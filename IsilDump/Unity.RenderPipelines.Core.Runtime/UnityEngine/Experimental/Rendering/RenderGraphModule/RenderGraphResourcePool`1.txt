Type: UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphResourcePool`1

Method: System.Void ReleaseInternalResource(Type res)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String GetResourceName(Type res)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int64 GetResourceSize(Type res)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String GetResourceTypeName()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetSortIndex(Type res)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void ReleaseResource(System.Int32 hash, Type resource, System.Int32 currentFrameIndex)

Disassembly:
	0x025C8B20 MOV X1, X21
	0x025C8B24 MOV X3, X31
	0x025C8B28 BL 0x39904A0
	0x025C8B2C ADD W23, W23, 0x1
	0x025C8B30 B 0x25C8A60
	0x025C8B34 MOV X21, X31
	0x025C8B38 MOVZ W22, 0xA
	0x025C8B3C LDR X8, [X20]
	0x025C8B40 ADD X0, X31, 0x30
	0x025C8B44 LDR X8, [X8 + 0xC0]
	0x025C8B48 LDR X1, [X8 + 0x210]
	0x025C8B4C BL 0x2BB1FE0
	0x025C8B50 CBNZ X21, 0x25C8C98
	0x025C8B54 CMP W22, 0xA
	0x025C8B58 B.EQ 0x25C8B60
	0x025C8B5C CBNZ W22, 0x25C8BF0
	0x025C8B60 LDR X0, [X26]
	0x025C8B64 ADD X1, X31, 0x8
	0x025C8B68 STR S8, [X31 + 0x8]
	0x025C8B6C BL 0x1C16E04
	0x025C8B70 ADRP X8, 0x1B55000
	0x025C8B74 LDR X8, [X8 + 0x108]
	0x025C8B78 MOV X1, X0
	0x025C8B7C MOV X2, X31
	0x025C8B80 LDR X8, [X8]
	0x025C8B84 MOV X0, X8
	0x025C8B88 BL 0x321EFD0
	0x025C8B8C LDR X21, [X25]
	0x025C8B90 MOV X20, X0
	0x025C8B94 LDR X8, [X21 + 0x38]
	0x025C8B98 CBNZ X8, 0x25C8BA8
	0x025C8B9C MOV X0, X21
	0x025C8BA0 BL 0x1C5C6E0
	0x025C8BA4 LDR X8, [X21 + 0x38]
	0x025C8BA8 LDR X0, [X8 + 0x10]
	0x025C8BAC LDRB W8, [X0 + 0x135]
	0x025C8BB0 TBNZ X8, 0x0, 0x25C8BB8
	0x025C8BB4 BL 0x1C5C684
	0x025C8BB8 LDR W8, [X0 + 0xE0]
	0x025C8BBC CBNZ W8, 0x25C8BC4
	0x025C8BC0 BL 0x1C16DFC
	0x025C8BC4 LDR X8, [X21 + 0x38]
	0x025C8BC8 LDR X0, [X8 + 0x10]
	0x025C8BCC LDRB W8, [X0 + 0x135]
	0x025C8BD0 TBNZ X8, 0x0, 0x25C8BD8
	0x025C8BD4 BL 0x1C5C684
	0x025C8BD8 LDR X8, [X0 + 0xB8]
	0x025C8BDC MOV X0, X19
	0x025C8BE0 MOV X1, X20
	0x025C8BE4 MOV X3, X31
	0x025C8BE8 LDR X2, [X8]
	0x025C8BEC BL 0x39904A0
	0x025C8BF0 LDP X20, X19, [X31 + 0xE0]
	0x025C8BF4 LDP X22, X21, [X31 + 0xD0]
	0x025C8BF8 LDP X24, X23, [X31 + 0xC0]
	0x025C8BFC LDP X26, X25, [X31 + 0xB0]
	0x025C8C00 LDP X28, X27, [X31 + 0xA0]
	0x025C8C04 LDP X29, X30, [X31 + 0x90]
	0x025C8C08 LDP D9, D8, [X31 + 0x80]
	0x025C8C0C ADD X31, X31, 0xF0
	0x025C8C10 RET
	0x025C8C14 MOV X26, X31
	0x025C8C18 CBZ X23, 0x25C8C74
	0x025C8C1C LDR X8, [X23]
	0x025C8C20 LDR X1, [X27]
	0x025C8C24 LDRH W9, [X8 + 0x12E]
	0x025C8C28 CBZ X9, 0x25C8C4C
	0x025C8C2C LDR X10, [X8 + 0xB0]
	0x025C8C30 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, X0
	011 Move X0, [X0+16]
	012 Compare X0, 0
	013 JumpIfEqual {88}
	014 Move X8, [X4+32]
	015 Move W20, W3
	016 Move X21, X2
	017 Add X2, X31, 24
	018 Move X8, [X8+192]
	019 Move X19, X4
	020 Move W23, W1
	021 Move X3, [X8+16]
	022 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {52}
	027 Move X8, [X19+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Call 0x1C17F10
	037 Move X8, [X19+32]
	038 Move X24, X0
	039 Move X8, [X8+192]
	040 Move X1, [X8+40]
	041 Call 0x25EDBE8, X0
	042 Move [X31+24], X24
	043 Move X0, [X22+16]
	044 Compare X0, 0
	045 JumpIfEqual {88}
	046 Move X8, [X19+32]
	047 Move W1, W23
	048 Move X2, X24
	049 Move X8, [X8+192]
	050 Move X3, [X8+48]
	051 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	052 Move X8, [X22]
	053 Move X23, [X31+24]
	054 Move X0, X22
	055 Move X1, X21
	056 Move X9, [X8+504]
	057 Move X2, [X8+512]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move [X31], X31
	060 Move [X31+8], X31
	061 Move X8, [X19+32]
	062 Move W22, W0
	063 Add X0, X31, 0
	064 Move X1, X21
	065 Move X8, [X8+192]
	066 Move W2, W20
	067 Move X3, [X8+80]
	068 Call ValueTuple`2<Object, Int32>..ctor, X0, X1, X2
	069 Compare X23, 0
	070 JumpIfEqual {88}
	071 Move X8, [X19+32]
	072 Move X2, [X31]
	073 Move X3, [X31+8]
	074 Move X0, X23
	075 Move W1, W22
	076 Move X8, [X8+192]
	077 Move X4, [X8+88]
	078 Call 0x25EDDDC, X0, X1, X2
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X22, [X31+48]
	082 Move X21, [X31+56]
	083 Move X24, [X31+32]
	084 Move X23, [X31+40]
	085 Move X30, [X31+16]
	086 Add X31, X31, 80
	087 Return 
	088 Call 0x1C17F20

Method: System.Boolean TryGetResource(System.Int32 hashCode, out Type resource)

Disassembly:
	0x025C8C34 LDUR X11, [X10 - 0x8]
	0x025C8C38 CMP X11, X1
	0x025C8C3C B.EQ 0x25C8C5C
	0x025C8C40 SUBS X9, X9, 0x1
	0x025C8C44 ADD X10, X10, 0x10
	0x025C8C48 B.NE 0x25C8C34
	0x025C8C4C MOV X0, X23
	0x025C8C50 MOV W2, W31
	0x025C8C54 BL 0x1C5C788
	0x025C8C58 B 0x25C8C68
	0x025C8C5C LDRSW X9, [X10]
	0x025C8C60 ADD X8, X8, X9, 0x4, LSL
	0x025C8C64 ADD X0, X8, 0x138
	0x025C8C68 LDP X8, X1, [X0]
	0x025C8C6C MOV X0, X23
	0x025C8C70 BLR X8
	0x025C8C74 CBZ X26, 0x25C8CD8
	0x025C8C78 MOV X0, X26
	0x025C8C7C BL 0x1C16F18
	0x025C8C80 MOV X0, X26
	0x025C8C84 BL 0x1C16F18
	0x025C8C88 BL 0x1C16F20
	0x025C8C8C BL 0x1C16F20
	0x025C8C90 MOV X0, X23
	0x025C8C94 BL 0x1C16F18
	0x025C8C98 MOV X0, X21
	0x025C8C9C BL 0x1C16F18
	0x025C8CA0 MOV X25, X1
	0x025C8CA4 MOV X24, X0
	0x025C8CA8 CBNZ X23, 0x25C8C1C
	0x025C8CAC B 0x25C8C74
	0x025C8CB0 B 0x25C8D3C
	0x025C8CB4 B 0x25C8D3C
	0x025C8CB8 B 0x25C8D3C
	0x025C8CBC B 0x25C8D3C
	0x025C8CC0 B 0x25C8CD0
	0x025C8CC4 B 0x25C8CD0
	0x025C8CC8 B 0x25C8CD0
	0x025C8CCC B 0x25C8CD0
	0x025C8CD0 MOV X25, X1
	0x025C8CD4 MOV X24, X0
	0x025C8CD8 CMP W25, 0x1
	0x025C8CDC ADRP X25, 0x1B2B000
	0x025C8CE0 ADRP X26, 0x1B2B000
	0x025C8CE4 ADRP X27, 0x1B2B000
	0x025C8CE8 LDR X25, [X25 + 0x9C8]
	0x025C8CEC LDR X26, [X26 + 0xA90]
	0x025C8CF0 LDR X27, [X27 + 0x758]
	0x025C8CF4 B.NE 0x25C8D10
	0x025C8CF8 MOV X0, X24
	0x025C8CFC BL 0x3EB1AD0
	0x025C8D00 LDR X23, [X0]
	0x025C8D04 BL 0x3EB1AE0
	0x025C8D08 MOV W24, W31
	0x025C8D0C B 0x25C884C
	0x025C8D10 MOV X23, X31
	0x025C8D14 B 0x25C8D1C
	0x025C8D18 MOV X24, X0
	0x025C8D1C LDR X8, [X20]
	0x025C8D20 LDR X8, [X8 + 0xC0]
	0x025C8D24 LDR X1, [X8 + 0x108]
	0x025C8D28 ADD X0, X31, 0x50
	0x025C8D2C BL 0x2BF5448
	0x025C8D30 CBZ X23, 0x25C8D84
	0x025C8D34 MOV X0, X23
	0x025C8D38 BL 0x1C16F18
	0x025C8D3C MOV X24, X0
	0x025C8D40 CMP W1, 0x1
	0x025C8D44 B.NE 0x25C8D60
	0x025C8D48 MOV X0, X24
	0x025C8D4C BL 0x3EB1AD0
	0x025C8D50 LDR X21, [X0]
	0x025C8D54 BL 0x3EB1AE0
	0x025C8D58 MOV W22, W31
	0x025C8D5C B 0x25C8B3C
	0x025C8D60 MOV X21, X31
	0x025C8D64 B 0x25C8D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X0, [X0+16]
	008 Compare X0, 0
	009 JumpIfEqual {89}
	010 Move X8, [X3+32]
	011 Move X19, X3
	012 Move X20, X2
	013 Add X2, X31, 8
	014 Move X8, [X8+192]
	015 Move X3, [X8+16]
	016 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {62}
	021 Move X0, [X31+8]
	022 Compare X0, 0
	023 JumpIfEqual {89}
	024 Move W8, [X0+32]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+112]
	029 Call 0x25EE534, X0
	030 Move X8, [X31+8]
	031 Compare X8, 0
	032 JumpIfEqual {89}
	033 Move X21, X0
	034 Compare X0, 0
	035 JumpIfEqual {89}
	036 Move X9, [X19+32]
	037 Move W22, [X8+32]
	038 Move X9, [X9+192]
	039 Move X1, [X9+120]
	040 Move W9, [X1+309]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X21]
	049 Subtract W22, W22, 1
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X21
	060 Move W2, W31
	061 Call 0x1C5D788
	062 Move W0, W31
	063 Move [X20], X31
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X2, [X0+8]
	069 Move X0, X21
	070 Move W1, W22
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move [X20], X0
	073 Move X0, [X31+8]
	074 Compare X0, 0
	075 JumpIfEqual {89}
	076 Move X8, [X19+32]
	077 Move W9, [X0+32]
	078 Move X8, [X8+192]
	079 Subtract W1, W9, 1
	080 Move X2, [X8+136]
	081 Call 0x25EF954, X0, X1
	082 Move W0, 1
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Void Cleanup()

Disassembly:
	0x025C8D68 MOV X24, X0
	0x025C8D6C LDR X8, [X20]
	0x025C8D70 LDR X8, [X8 + 0xC0]
	0x025C8D74 LDR X1, [X8 + 0x210]
	0x025C8D78 ADD X0, X31, 0x30
	0x025C8D7C BL 0x2BB1FE0
	0x025C8D80 CBNZ X21, 0x25C8D8C
	0x025C8D84 MOV X0, X24
	0x025C8D88 BL 0x1D2C690
	0x025C8D8C MOV X0, X21
	0x025C8D90 BL 0x1C16F18
	0x025C8D94 BL 0x1990590
	0x025C8D98 ADD W8, W0, 0xA
	0x025C8D9C CMP W8, W1
	0x025C8DA0 CSET W0, LT
	0x025C8DA4 RET
	0x025C8DA8 STP X30, X23, [X31 - 0x30]!
	0x025C8DAC STP X22, X21, [X31 + 0x10]
	0x025C8DB0 STP X20, X19, [X31 + 0x20]
	0x025C8DB4 ADRP X21, 0x1E11000
	0x025C8DB8 LDRB W8, [X21 + 0xF34]
	0x025C8DBC MOV X20, X1
	0x025C8DC0 MOV X19, X0
	0x025C8DC4 TBNZ X8, 0x0, 0x25C8DE8
	0x025C8DC8 ADRP X0, 0x1B2C000
	0x025C8DCC LDR X0, [X0 + 0xE20]
	0x025C8DD0 BL 0x1C16CF4
	0x025C8DD4 ADRP X0, 0x1B2C000
	0x025C8DD8 LDR X0, [X0 + 0xE30]
	0x025C8DDC BL 0x1C16CF4
	0x025C8DE0 MOVZ W8, 0x1
	0x025C8DE4 STRB W8, [X21 + 0xF34]
	0x025C8DE8 LDR X8, [X20 + 0x20]
	0x025C8DEC ADRP X23, 0x1B2C000
	0x025C8DF0 ADRP X22, 0x1B2C000
	0x025C8DF4 LDR X8, [X8 + 0xC0]
	0x025C8DF8 LDR X0, [X8 + 0x8]
	0x025C8DFC LDRB W8, [X0 + 0x135]
	0x025C8E00 LDR X23, [X23 + 0xE30]
	0x025C8E04 LDR X22, [X22 + 0xE20]
	0x025C8E08 TBNZ X8, 0x0, 0x25C8E10
	0x025C8E0C BL 0x1C5C684
	0x025C8E10 BL 0x1C16F10
	0x025C8E14 LDR X8, [X20 + 0x20]
	0x025C8E18 MOV X21, X0
	0x025C8E1C LDR X8, [X8 + 0xC0]
	0x025C8E20 LDR X1, [X8 + 0x218]
	0x025C8E24 BL 0x2A12DD4
	0x025C8E28 STR X21, [X19 + 0x10]
	0x025C8E2C LDR X0, [X23]
	0x025C8E30 BL 0x1C16F10
	0x025C8E34 LDR X2, [X22]
	0x025C8E38 MOVZ W1, 0x20
	0x025C8E3C MOV X21, X0
	0x025C8E40 BL 0x2FDBF80
	0x025C8E44 STR X21, [X19 + 0x18]
	0x025C8E48 LDR X8, [X20 + 0x20]
	0x025C8E4C LDR X8, [X8 + 0xC0]
	0x025C8E50 LDR X0, [X8 + 0x110]
	0x025C8E54 LDRB W8, [X0 + 0x135]
	0x025C8E58 TBNZ X8, 0x0, 0x25C8E60
	0x025C8E5C BL 0x1C5C684
	0x025C8E60 BL 0x1C16F10
	0x025C8E64 LDR X8, [X20 + 0x20]
	0x025C8E68 MOV X20, X0
	0x025C8E6C LDR X8, [X8 + 0xC0]
	0x025C8E70 LDR X1, [X8 + 0x220]
	0x025C8E74 BL 0x2F40E88
	0x025C8E78 STR X20, [X19 + 0x20]
	0x025C8E7C MOV X0, X19
	0x025C8E80 LDP X20, X19, [X31 + 0x20]
	0x025C8E84 LDP X22, X21, [X31 + 0x10]
	0x025C8E88 MOV X1, X31
	0x025C8E8C LDP X30, X23, [X31], #0x30
	0x025C8E90 B 0x3999048
	0x025C8E94 MOV X1, X31
	0x025C8E98 B 0x399A534
	0x025C8E9C STP X30, X19, [X31 - 0x10]!
	0x025C8EA0 CBZ X0, 0x25C8EBC
	0x025C8EA4 MOV X2, X31
	0x025C8EA8 MOV X19, X0
	0x025C8EAC BL 0x399A484
	0x025C8EB0 STR X31, [X19 + 0x48]
	0x025C8EB4 LDP X30, X19, [X31], #0x10
	0x025C8EB8 RET
	0x025C8EBC BL 0x1C16F20
	0x025C8EC0 LDR X8, [X0 + 0x48]
	0x025C8EC4 CMP X8, 0x0
	0x025C8EC8 CSET W0, NE
	0x025C8ECC RET
	0x025C8ED0 STR X31, [X0 + 0x48]
	0x025C8ED4 RET
	0x025C8ED8 MOV X1, X31
	0x025C8EDC B 0x399A534
	0x025C8EE0 STP X30, X19, [X31 - 0x10]!
	0x025C8EE4 CBZ X0, 0x25C8F00
	0x025C8EE8 MOV X2, X31
	0x025C8EEC MOV X19, X0
	0x025C8EF0 BL 0x399A484
	0x025C8EF4 STR X31, [X19 + 0xA8]
	0x025C8EF8 LDP X30, X19, [X31], #0x10
	0x025C8EFC RET
	0x025C8F00 BL 0x1C16F20
	0x025C8F04 LDR X8, [X0 + 0xA8]
	0x025C8F08 CMP X8, 0x0
	0x025C8F0C CSET W0, NE
	0x025C8F10 RET
	0x025C8F14 STR X31, [X0 + 0xA8]
	0x025C8F18 RET
	0x025C8F1C MOV X1, X31
	0x025C8F20 B 0x399A534
	0x025C8F24 STR X30, [X31 - 0x20]!
	0x025C8F28 STP X20, X19, [X31 + 0x10]
	0x025C8F2C CBZ X0, 0x25C8F6C
	0x025C8F30 MOV X20, X2
	0x025C8F34 MOV X2, X31
	0x025C8F38 MOV X19, X0
	0x025C8F3C BL 0x399A484
	0x025C8F40 LDR X8, [X20 + 0x20]
	0x025C8F44 MOV X0, X19
	0x025C8F48 LDR X8, [X8 + 0xC0]
	0x025C8F4C LDR X8, [X8]
	0x025C8F50 LDR X8, [X8 + 0x80]
	0x025C8F54 ADD X1, X8, 0x20
	0x025C8F58 BL 0x1C16D18
	0x025C8F5C LDP X20, X19, [X31 + 0x10]
	0x025C8F60 STR X31, [X0]
	0x025C8F64 LDR X30, [X31], #0x20
	0x025C8F68 RET
	0x025C8F6C BL 0x1C16F20
	0x025C8F70 STR X30, [X31 - 0x10]!
	0x025C8F74 LDR X8, [X1 + 0x20]
	0x025C8F78 LDR X8, [X8 + 0xC0]
	0x025C8F7C LDR X8, [X8]
	0x025C8F80 LDR X8, [X8 + 0x80]
	0x025C8F84 ADD X1, X8, 0x20
	0x025C8F88 BL 0x1C16D18
	0x025C8F8C LDR X8, [X0]
	0x025C8F90 CMP X8, 0x0
	0x025C8F94 CSET W0, NE
	0x025C8F98 LDR X30, [X31], #0x10
	0x025C8F9C RET
	0x025C8FA0 STR X30, [X31 - 0x10]!
	0x025C8FA4 LDR X8, [X1 + 0x20]
	0x025C8FA8 LDR X8, [X8 + 0xC0]
	0x025C8FAC LDR X8, [X8]
	0x025C8FB0 LDR X8, [X8 + 0x80]
	0x025C8FB4 ADD X1, X8, 0x20
	0x025C8FB8 BL 0x1C16D18
	0x025C8FBC STR X31, [X0]
	0x025C8FC0 LDR X30, [X31], #0x10
	0x025C8FC4 RET
	0x025C8FC8 STR X30, [X31 - 0x20]!
	0x025C8FCC STP X20, X19, [X31 + 0x10]
	0x025C8FD0 MOV X19, X1
	0x025C8FD4 MOV X1, X31
	0x025C8FD8 MOV X20, X0
	0x025C8FDC BL 0x34B2C94
	0x025C8FE0 STR X19, [X20 + 0x18]
	0x025C8FE4 LDP X20, X19, [X31 + 0x10]
	0x025C8FE8 LDR X30, [X31], #0x20
	0x025C8FEC RET
	0x025C8FF0 STR X30, [X31 - 0x30]!
	0x025C8FF4 STP X22, X21, [X31 + 0x10]
	0x025C8FF8 STP X20, X19, [X31 + 0x20]
	0x025C8FFC ADRP X22, 0x1E11000
	0x025C9000 LDRB W8, [X22 + 0xF35]
	0x025C9004 MOV X20, X2
	0x025C9008 MOV X19, X1
	0x025C900C MOV X21, X0
	0x025C9010 TBNZ X8, 0x0, 0x25C9034
	0x025C9014 ADRP X0, 0x1B2A000
	0x025C9018 LDR X0, [X0 + 0xA28]
	0x025C901C BL 0x1C16CF4
	0x025C9020 ADRP X0, 0x1B54000
	0x025C9024 LDR X0, [X0 + 0x110]
	0x025C9028 BL 0x1C16CF4
	0x025C902C MOVZ W8, 0x1
	0x025C9030 STRB W8, [X22 + 0xF35]
	0x025C9034 LDR X8, [X21 + 0x18]
	0x025C9038 CBZ X8, 0x25C90B8
	0x025C903C LDR X8, [X20 + 0x20]
	0x025C9040 LDR X8, [X8 + 0xC0]
	0x025C9044 LDR X0, [X8 + 0x10]
	0x025C9048 LDRB W8, [X0 + 0x135]
	0x025C904C TBNZ X8, 0x0, 0x25C9054
	0x025C9050 BL 0x1C5C684
	0x025C9054 CBZ X19, 0x25C9178
	0x025C9058 LDR X8, [X19]
	0x025C905C LDRB W10, [X0 + 0x130]
	0x025C9060 LDRB W9, [X8 + 0x130]
	0x025C9064 CMP W9, W10
	0x025C9068 B.CC 0x25C9080
	0x025C906C LDR X11, [X8 + 0xC8]
	0x025C9070 ADD X10, X11, X10, 0x3, LSL
	0x025C9074 LDUR X10, [X10 - 0x8]
	0x025C9078 CMP X10, X0
	0x025C907C B.EQ 0x25C9108
	0x025C9080 ADRP X21, 0x1B54000
	0x025C9084 ADRP X20, 0x1B2A000
	0x025C9088 LDR X21, [X21 + 0x110]
	0x025C908C LDR X20, [X20 + 0xA28]
	0x025C9090 MOV X0, X19
	0x025C9094 MOV X1, X31
	0x025C9098 BL 0x33BE520
	0x025C909C LDR X19, [X21]
	0x025C90A0 CBZ X0, 0x25C90C8
	0x025C90A4 LDR X8, [X0]
	0x025C90A8 LDP X9, X1, [X8 + 0x168]
	0x025C90AC BLR X9
	0x025C90B0 MOV X1, X0
	0x025C90B4 B 0x25C90CC
	0x025C90B8 LDP X20, X19, [X31 + 0x20]
	0x025C90BC LDP X22, X21, [X31 + 0x10]
	0x025C90C0 LDR X30, [X31], #0x30
	0x025C90C4 RET
	0x025C90C8 MOV X1, X31
	0x025C90CC MOV X0, X19
	0x025C90D0 MOV X2, X31
	0x025C90D4 BL 0x321B938
	0x025C90D8 LDR X8, [X20]
	0x025C90DC MOV X19, X0
	0x025C90E0 LDR W9, [X8 + 0xE0]
	0x025C90E4 CBNZ W9, 0x25C90F0
	0x025C90E8 MOV X0, X8
	0x025C90EC BL 0x1C16DFC
	0x025C90F0 MOV X0, X19
	0x025C90F4 LDP X20, X19, [X31 + 0x20]
	0x025C90F8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X21, 0x1E12000
	012 Move W8, [X21+3889]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x1B2C000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B2C000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3889], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+80], X31
	029 Move [X31+48], V0
	030 Move [X31+56], V0
	031 Move X0, [X20+16]
	032 Compare X0, 0
	033 JumpIfEqual {215}
	034 Move X8, [X19+32]
	035 Move X25, 0x1B2C000
	036 Move X26, 0x1B2C000
	037 Move X8, [X8+192]
	038 Move X1, [X8+144]
	039 Move X25, [X25+3584]
	040 Move X26, [X26+3608]
	041 Add X8, X31, 8
	042 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X8, [X31+40]
	046 Move [X31+48], V0
	047 Move [X31+56], V1
	048 Move [X31+80], X8
	049 Move X8, [X19+32]
	050 Move X8, [X8+192]
	051 Move X1, [X8+256]
	052 Add X0, X31, 48
	053 Call Enumerator<Int32, Object>.MoveNext, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {165}
	058 Move X0, [X31+72]
	059 Compare X0, 0
	060 JumpIfEqual {203}
	061 Move X8, [X19+32]
	062 Move X8, [X8+192]
	063 Move X1, [X8+200]
	064 Call 0x25EF01C, X0
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {157}
	068 Move X8, [X21]
	069 Move X1, [X26]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X21
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X21
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {131}
	093 Move X8, [X19+32]
	094 Move X8, [X8+192]
	095 Move X1, [X8+208]
	096 Move W8, [X1+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {104}
	101 Move X0, X1
	102 Call 0x1C5D684
	103 Move X1, X0
	104 Move X8, [X21]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X21
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X9, [X0]
	121 Move X1, [X0+8]
	122 Add X8, X31, 8
	123 Move X0, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X8, [X20]
	126 Move X1, [X31+16]
	127 Move X9, [X8+440]
	128 Move X2, [X8+448]
	129 Move X0, X20
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X23, X31
	132 Compare X21, 0
	133 JumpIfEqual {155}
	134 Move X8, [X21]
	135 Move X1, [X25]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X21
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X21
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X23, 0
	156 JumpIfEqual {49}
	157 Call 0x1C17F20
	158 Move X24, X1
	159 Move X22, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, X22
	162 Call 0x3EB2AD0
	163 Move X23, [X0]
	164 Call 0x3EB2AE0
	165 Move X20, X31
	166 Move X8, [X19+32]
	167 Add X0, X31, 48
	168 Move X8, [X8+192]
	169 Move X1, [X8+264]
	170 Call Enumerator<Int32, Object>.Dispose, X0
	171 Compare X20, 0
	172 JumpIfNotEqual {216}
	173 Move X20, [X31+160]
	174 Move X19, [X31+168]
	175 Move X22, [X31+144]
	176 Move X21, [X31+152]
	177 Move X24, [X31+128]
	178 Move X23, [X31+136]
	179 Move X26, [X31+112]
	180 Move X25, [X31+120]
	181 Move X30, [X31+96]
	182 Add X31, X31, 176
	183 Return 
	184 Move X23, X31
	185 Compare X21, 0
	186 JumpIfEqual {211}
	187 Move X8, [X21]
	188 Move X1, [X25]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X21
	199 Move W2, W31
	200 Call 0x1C5D788
	201 Move X0, X23
	202 Call 0x1C17F18
	203 Call 0x1C17F20
	204 NotImplemented "Instruction LDRSW not yet implemented."
	205 Add X8, X8, X9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X21
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Compare X23, 0
	212 JumpIfEqual {224}
	213 Move X0, X23
	214 Call 0x1C17F18
	215 Call 0x1C17F20
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Move X24, X1
	219 Move X22, X0
	220 Compare X21, 0
	221 JumpIfNotEqual {187}
	222 Move X24, X1
	223 Move X22, X0
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X22
	226 Call 0x3EB2AD0
	227 Move X20, [X0]
	228 Call 0x3EB2AE0
	229 Move X20, X31
	230 Move X22, X0
	231 Move X8, [X19+32]
	232 Move X8, [X8+192]
	233 Move X1, [X8+264]
	234 Add X0, X31, 48
	235 Call Enumerator<Int32, Object>.Dispose, X0
	236 Compare X20, 0
	237 JumpIfNotEqual {240}
	238 Move X0, X22
	239 Call 0x1D2D690
	240 Move X0, X20
	241 Call 0x1C17F18
	242 Call 0x1991590

Method: System.Void RegisterFrameAllocation(System.Int32 hash, Type value)

Disassembly:
	0x025C90FC MOV X1, X31
	0x025C9100 LDR X30, [X31], #0x30
	0x025C9104 B 0x3C0649C
	0x025C9108 LDR X21, [X21 + 0x18]
	0x025C910C CBZ X21, 0x25C9178
	0x025C9110 LDR X10, [X20 + 0x20]
	0x025C9114 LDR X10, [X10 + 0xC0]
	0x025C9118 LDR X1, [X10 + 0x10]
	0x025C911C LDRB W10, [X1 + 0x135]
	0x025C9120 TBNZ X10, 0x0, 0x25C9138
	0x025C9124 MOV X0, X1
	0x025C9128 BL 0x1C5C684
	0x025C912C LDR X8, [X19]
	0x025C9130 MOV X1, X0
	0x025C9134 LDRB W9, [X8 + 0x130]
	0x025C9138 LDRB W10, [X1 + 0x130]
	0x025C913C CMP W9, W10
	0x025C9140 B.CC 0x25C917C
	0x025C9144 LDR X8, [X8 + 0xC8]
	0x025C9148 ADD X8, X8, X10, 0x3, LSL
	0x025C914C LDUR X8, [X8 - 0x8]
	0x025C9150 CMP X8, X1
	0x025C9154 B.NE 0x25C917C
	0x025C9158 LDR X3, [X21 + 0x18]
	0x025C915C LDR X0, [X21 + 0x40]
	0x025C9160 LDR X2, [X21 + 0x28]
	0x025C9164 MOV X1, X19
	0x025C9168 LDP X20, X19, [X31 + 0x20]
	0x025C916C LDP X22, X21, [X31 + 0x10]
	0x025C9170 LDR X30, [X31], #0x30
	0x025C9174 BR X3
	0x025C9178 BL 0x1C16F20
	0x025C917C MOV X0, X19
	0x025C9180 BL 0x1C171E0
	0x025C9184 STR X30, [X31 - 0x20]!
	0x025C9188 STP X20, X19, [X31 + 0x10]
	0x025C918C MOV X19, X1
	0x025C9190 MOV X1, X31
	0x025C9194 MOV X20, X0
	0x025C9198 BL 0x34B2C94
	0x025C919C STR X19, [X20 + 0x18]
	0x025C91A0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Add W31, W1, 1
	006 Move X19, [X0+32]
	007 Move [X31], X31
	008 Move [X31+8], X31
	009 Move X8, [X3+32]
	010 Move X20, X3
	011 Add X0, X31, 0
	012 Move X8, [X8+192]
	013 Move X3, [X8+288]
	014 Call ValueTuple`2<Int32, Object>..ctor, X0, X1, X2
	015 Compare X19, 0
	016 JumpIfEqual {46}
	017 Move X8, [X20+32]
	018 Move W10, [X19+28]
	019 Move X1, [X31]
	020 Move X2, [X31+8]
	021 Move X9, [X8+192]
	022 Move X8, [X19+16]
	023 Add W10, W10, 1
	024 Move X9, [X9+296]
	025 Move [X19+28], W10
	026 Compare X8, 0
	027 JumpIfEqual {46}
	028 NotImplemented "Instruction LDRSW not yet implemented."
	029 Move W11, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add W9, W10, 1
	032 Add X8, X8, X10
	033 Move [X19+24], W9
	034 Move [X8+32], X1
	035 Move [X8+40], X2
	036 Move X8, [X9+32]
	037 Move X0, X19
	038 Move X8, [X8+192]
	039 Move X3, [X8+112]
	040 Call List`1<ValueTuple`2<Int32, Object>>.AddWithResize, X0, X1
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Add X31, X31, 48
	045 Return 
	046 Call 0x1C17F20

Method: System.Void UnregisterFrameAllocation(System.Int32 hash, Type value)

Disassembly:
	0x025C91A4 LDR X30, [X31], #0x20
	0x025C91A8 RET
	0x025C91AC STR X30, [X31 - 0x30]!
	0x025C91B0 STP X22, X21, [X31 + 0x10]
	0x025C91B4 STP X20, X19, [X31 + 0x20]
	0x025C91B8 ADRP X22, 0x1E10000
	0x025C91BC LDRB W8, [X22 + 0xF36]
	0x025C91C0 MOV X20, X2
	0x025C91C4 MOV X19, X1
	0x025C91C8 MOV X21, X0
	0x025C91CC TBNZ X8, 0x0, 0x25C91F0
	0x025C91D0 ADRP X0, 0x1B2A000
	0x025C91D4 LDR X0, [X0 + 0xA28]
	0x025C91D8 BL 0x1C16CF4
	0x025C91DC ADRP X0, 0x1B54000
	0x025C91E0 LDR X0, [X0 + 0x110]
	0x025C91E4 BL 0x1C16CF4
	0x025C91E8 MOVZ W8, 0x1
	0x025C91EC STRB W8, [X22 + 0xF36]
	0x025C91F0 LDR X8, [X21 + 0x18]
	0x025C91F4 CBZ X8, 0x25C9274
	0x025C91F8 LDR X8, [X20 + 0x20]
	0x025C91FC LDR X8, [X8 + 0xC0]
	0x025C9200 LDR X0, [X8 + 0x10]
	0x025C9204 LDRB W8, [X0 + 0x135]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Add W31, W1, 1
	006 Move X20, [X0+32]
	007 Move [X31], X31
	008 Move [X31+8], X31
	009 Move X8, [X3+32]
	010 Move X19, X3
	011 Add X0, X31, 0
	012 Move X8, [X8+192]
	013 Move X3, [X8+288]
	014 Call ValueTuple`2<Int32, Object>..ctor, X0, X1, X2
	015 Compare X20, 0
	016 JumpIfEqual {29}
	017 Move X8, [X19+32]
	018 Move X1, [X31]
	019 Move X2, [X31+8]
	020 Move X0, X20
	021 Move X8, [X8+192]
	022 Move X3, [X8+304]
	023 Call List`1<ValueTuple`2<Int32, Object>>.Remove, X0, X1
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return 
	029 Call 0x1C17F20

Method: System.Void CheckFrameAllocation(System.Boolean onException, System.Int32 frameIndex)

Disassembly:
	0x025C9208 TBNZ X8, 0x0, 0x25C9210
	0x025C920C BL 0x1C5C684
	0x025C9210 CBZ X19, 0x25C9344
	0x025C9214 LDR X8, [X19]
	0x025C9218 LDRB W10, [X0 + 0x130]
	0x025C921C LDRB W9, [X8 + 0x130]
	0x025C9220 CMP W9, W10
	0x025C9224 B.CC 0x25C923C
	0x025C9228 LDR X11, [X8 + 0xC8]
	0x025C922C ADD X10, X11, X10, 0x3, LSL
	0x025C9230 LDUR X10, [X10 - 0x8]
	0x025C9234 CMP X10, X0
	0x025C9238 B.EQ 0x25C92C4
	0x025C923C ADRP X21, 0x1B54000
	0x025C9240 ADRP X20, 0x1B2A000
	0x025C9244 LDR X21, [X21 + 0x110]
	0x025C9248 LDR X20, [X20 + 0xA28]
	0x025C924C MOV X0, X19
	0x025C9250 MOV X1, X31
	0x025C9254 BL 0x33BE520
	0x025C9258 LDR X19, [X21]
	0x025C925C CBZ X0, 0x25C9284
	0x025C9260 LDR X8, [X0]
	0x025C9264 LDP X9, X1, [X8 + 0x168]
	0x025C9268 BLR X9
	0x025C926C MOV X1, X0
	0x025C9270 B 0x25C9288
	0x025C9274 LDP X20, X19, [X31 + 0x20]
	0x025C9278 LDP X22, X21, [X31 + 0x10]
	0x025C927C LDR X30, [X31], #0x30
	0x025C9280 RET
	0x025C9284 MOV X1, X31
	0x025C9288 MOV X0, X19
	0x025C928C MOV X2, X31
	0x025C9290 BL 0x321B938
	0x025C9294 LDR X8, [X20]
	0x025C9298 MOV X19, X0
	0x025C929C LDR W9, [X8 + 0xE0]
	0x025C92A0 CBNZ W9, 0x25C92AC
	0x025C92A4 MOV X0, X8
	0x025C92A8 BL 0x1C16DFC
	0x025C92AC MOV X0, X19
	0x025C92B0 LDP X20, X19, [X31 + 0x20]
	0x025C92B4 LDP X22, X21, [X31 + 0x10]
	0x025C92B8 MOV X1, X31
	0x025C92BC LDR X30, [X31], #0x30
	0x025C92C0 B 0x3C0649C
	0x025C92C4 LDR X21, [X21 + 0x18]
	0x025C92C8 CBZ X21, 0x25C9344
	0x025C92CC LDR X10, [X20 + 0x20]
	0x025C92D0 LDR X10, [X10 + 0xC0]
	0x025C92D4 LDP X1, X10, [X10 + 0x10]
	0x025C92D8 LDRB W11, [X1 + 0x135]
	0x025C92DC LDR X3, [X10]
	0x025C92E0 TBNZ X11, 0x0, 0x25C9300
	0x025C92E4 MOV X0, X1
	0x025C92E8 STR X3, [X31 + 0x8]
	0x025C92EC BL 0x1C5C684
	0x025C92F0 LDR X8, [X19]
	0x025C92F4 LDR X3, [X31 + 0x8]
	0x025C92F8 MOV X1, X0
	0x025C92FC LDRB W9, [X8 + 0x130]
	0x025C9300 LDRB W10, [X1 + 0x130]
	0x025C9304 CMP W9, W10
	0x025C9308 B.CC 0x25C9348
	0x025C930C LDR X8, [X8 + 0xC8]
	0x025C9310 ADD X8, X8, X10, 0x3, LSL
	0x025C9314 LDUR X8, [X8 - 0x8]
	0x025C9318 CMP X8, X1
	0x025C931C B.NE 0x25C9348
	0x025C9320 LDR X8, [X20 + 0x20]
	0x025C9324 MOV X0, X21
	0x025C9328 MOV X1, X19
	0x025C932C LDP X20, X19, [X31 + 0x20]
	0x025C9330 LDR X8, [X8 + 0xC0]
	0x025C9334 LDP X22, X21, [X31 + 0x10]
	0x025C9338 LDR X2, [X8 + 0x18]
	0x025C933C LDR X30, [X31], #0x30
	0x025C9340 BR X3
	0x025C9344 BL 0x1C16F20
	0x025C9348 MOV X0, X19
	0x025C934C BL 0x1C171E0
	0x025C9350 MOV X2, X31
	0x025C9354 B 0x34DC3BC
	0x025C9358 STR X30, [X31 - 0x30]!
	0x025C935C STP X22, X21, [X31 + 0x10]
	0x025C9360 STP X20, X19, [X31 + 0x20]
	0x025C9364 ADRP X22, 0x1E10000
	0x025C9368 LDRB W8, [X22 + 0xF37]
	0x025C936C MOV X19, X2
	0x025C9370 MOV X21, X1
	0x025C9374 MOV X20, X0
	0x025C9378 TBNZ X8, 0x0, 0x25C9390
	0x025C937C ADRP X0, 0x1B52000
	0x025C9380 LDR X0, [X0 + 0x880]
	0x025C9384 BL 0x1C16CF4
	0x025C9388 MOVZ W8, 0x1
	0x025C938C STRB W8, [X22 + 0xF37]
	0x025C9390 LDR X8, [X20 + 0x20]
	0x025C9394 CBNZ X8, 0x25C93D4
	0x025C9398 ADRP X8, 0x1B52000
	0x025C939C LDR X8, [X8 + 0x880]
	0x025C93A0 STR X21, [X20 + 0x20]
	0x025C93A4 LDR X0, [X8]
	0x025C93A8 LDR W8, [X0 + 0xE0]
	0x025C93AC CBNZ W8, 0x25C93B4
	0x025C93B0 BL 0x1C16DFC
	0x025C93B4 MOV X0, X20
	0x025C93B8 MOV X1, X31
	0x025C93BC BL 0x34B2584
	0x025C93C0 MOV X0, X20
	0x025C93C4 LDP X20, X19, [X31 + 0x20]
	0x025C93C8 LDP X22, X21, [X31 + 0x10]
	0x025C93CC LDR X30, [X31], #0x30
	0x025C93D0 RET
	0x025C93D4 ADRP X0, 0x1B53000
	0x025C93D8 LDR X0, [X0 + 0x1D0]
	0x025C93DC BL 0x1C16D08
	0x025C93E0 BL 0x1C16F10
	0x025C93E4 MOV X20, X0
	0x025C93E8 ADRP X0, 0x1B54000
	0x025C93EC LDR X0, [X0 + 0x118]
	0x025C93F0 BL 0x1C16D08
	0x025C93F4 MOV X1, X0
	0x025C93F8 MOV X0, X20
	0x025C93FC MOV X2, X31
	0x025C9400 BL 0x3C363D0
	0x025C9404 MOV X0, X20
	0x025C9408 MOV X1, X19
	0x025C940C BL 0x1C16DEC
	0x025C9410 STR X30, [X31 - 0x30]!
	0x025C9414 STP X22, X21, [X31 + 0x10]
	0x025C9418 STP X20, X19, [X31 + 0x20]
	0x025C941C ADRP X22, 0x1E10000
	0x025C9420 LDRB W8, [X22 + 0xF38]
	0x025C9424 MOV X20, X2
	0x025C9428 MOV X19, X1
	0x025C942C MOV X21, X0
	0x025C9430 TBNZ X8, 0x0, 0x25C9454
	0x025C9434 ADRP X0, 0x1B2A000
	0x025C9438 LDR X0, [X0 + 0xA28]
	0x025C943C BL 0x1C16CF4
	0x025C9440 ADRP X0, 0x1B54000
	0x025C9444 LDR X0, [X0 + 0x110]
	0x025C9448 BL 0x1C16CF4
	0x025C944C MOVZ W8, 0x1
	0x025C9450 STRB W8, [X22 + 0xF38]
	0x025C9454 LDR X8, [X20 + 0x20]
	0x025C9458 LDR X8, [X8 + 0xC0]
	0x025C945C LDR X0, [X8 + 0x10]
	0x025C9460 LDRB W8, [X0 + 0x135]
	0x025C9464 TBNZ X8, 0x0, 0x25C946C
	0x025C9468 BL 0x1C5C684
	0x025C946C CBZ X19, 0x25C9580
	0x025C9470 LDR X8, [X19]
	0x025C9474 LDRB W10, [X0 + 0x130]
	0x025C9478 LDRB W9, [X8 + 0x130]
	0x025C947C CMP W9, W10
	0x025C9480 B.CC 0x25C9498
	0x025C9484 LDR X11, [X8 + 0xC8]
	0x025C9488 ADD X10, X11, X10, 0x3, LSL
	0x025C948C LDUR X10, [X10 - 0x8]
	0x025C9490 CMP X10, X0
	0x025C9494 B.EQ 0x25C9510

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0x1E11000
	012 Move W8, [X21+3890]
	013 Move X20, X3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x1B2B000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x1B2B000
	025 Move X0, [X0+2440]
	026 Call 0x1C17CF4
	027 Move X0, 0x1B55000
	028 Move X0, [X0+216]
	029 Call 0x1C17CF4
	030 Move X0, 0x1B55000
	031 Move X0, [X0+224]
	032 Call 0x1C17CF4
	033 Move X0, 0x1B55000
	034 Move X0, [X0+232]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3890], W8
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+32], V0
	040 Move [X31+40], V0
	041 Move X9, [X19+32]
	042 Compare X9, 0
	043 JumpIfEqual {166}
	044 Move W8, [X9+24]
	045 Compare W8, 0
	046 JumpIfEqual {145}
	047 Move TEMP, X23
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {54}
	051 Move X8, 0x1B2B000
	052 Move X8, [X8+2440]
	053 Move X21, [X8]
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+488]
	057 Move X1, [X8+496]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, 0x1B55000
	060 Move X8, [X8+216]
	061 Move X9, 0x1B55000
	062 Move X9, [X9+232]
	063 Move X1, X0
	064 Move X8, [X8]
	065 Move X3, X31
	066 Move X2, [X9]
	067 Move X0, X8
	068 Call String.Concat, X0, X1, X2
	069 Move X9, [X19+32]
	070 Compare X9, 0
	071 JumpIfEqual {166}
	072 Move X21, X0
	073 Move X8, [X20+32]
	074 Move X26, 0x1B55000
	075 Move X0, X9
	076 Move X8, [X8+192]
	077 Move X1, [X8+328]
	078 Move X26, [X26+224]
	079 Add X8, X31, 0
	080 Call List`1<ValueTuple`2<Int32, Object>>.GetEnumerator, X0
	081 Move V0, [X31]
	082 Move V1, [X31+16]
	083 Move [X31+32], V0
	084 Move [X31+40], V1
	085 Move X8, [X20+32]
	086 Move X8, [X8+192]
	087 Move X1, [X8+376]
	088 Add X0, X31, 32
	089 Call Enumerator<ValueTuple`2<Int32, Object>>.MoveNext, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {120}
	094 Move W25, [X31+48]
	095 Move X24, [X31+56]
	096 Move TEMP, X23
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {112}
	100 Move X8, [X19]
	101 Move X9, [X8+456]
	102 Move X2, [X8+464]
	103 Move X0, X19
	104 Move X1, X24
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X1, [X26]
	107 Move X2, X0
	108 Move X0, X21
	109 Move X3, X31
	110 Call String.Concat, X0, X1, X2
	111 Move X21, X0
	112 Move X8, [X20+32]
	113 Move X8, [X8+192]
	114 Move X4, [X8+368]
	115 Move X0, X19
	116 Move W1, W25
	117 Move X2, X24
	118 Move W3, W22
	119 Call 0x25C8B20, X0, X1, X2, X3
	120 Move X22, X31
	121 Move W23, 7
	122 Move X8, [X20+32]
	123 Add X0, X31, 32
	124 Move X8, [X8+192]
	125 Move X1, [X8+384]
	126 Call Enumerator<ValueTuple`2<Int32, Object>>.Dispose, X0
	127 Compare X22, 0
	128 JumpIfNotEqual {167}
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Compare W23, 0
	131 JumpIfNotEqual {155}
	132 Move X8, 0x1B2B000
	133 Move X8, [X8+2600]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X21
	140 Move X1, X31
	141 Call Debug.LogWarning, X0
	142 Move X9, [X19+32]
	143 Compare X9, 0
	144 JumpIfEqual {166}
	145 Move W2, [X9+24]
	146 Move W8, [X9+28]
	147 Add W8, W8, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X9+24], W31
	150 Move [X9+28], W8
	151 Move X0, [X9+16]
	152 Move W1, W31
	153 Move X3, X31
	154 Call Array.Clear, X0, X1, X2
	155 Move X20, [X31+128]
	156 Move X19, [X31+136]
	157 Move X22, [X31+112]
	158 Move X21, [X31+120]
	159 Move X24, [X31+96]
	160 Move X23, [X31+104]
	161 Move X26, [X31+80]
	162 Move X25, [X31+88]
	163 Move X30, [X31+64]
	164 Add X31, X31, 144
	165 Return 
	166 Call 0x1C17F20
	167 Move X0, X22
	168 Call 0x1C17F18
	169 Move X23, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, X23
	172 Call 0x3EB2AD0
	173 Move X22, [X0]
	174 Call 0x3EB2AE0
	175 Move W23, W31
	176 Move X22, X31
	177 Move X23, X0
	178 Move X8, [X20+32]
	179 Move X8, [X8+192]
	180 Move X1, [X8+384]
	181 Add X0, X31, 32
	182 Call Enumerator<ValueTuple`2<Int32, Object>>.Dispose, X0
	183 Compare X22, 0
	184 JumpIfNotEqual {187}
	185 Move X0, X23
	186 Call 0x1D2D690
	187 Move X0, X22
	188 Call 0x1C17F18
	189 Call 0x1991590

Method: System.Void LogResources(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphLogger logger)

Disassembly:
	0x025C9498 ADRP X21, 0x1B54000
	0x025C949C ADRP X20, 0x1B2A000
	0x025C94A0 LDR X21, [X21 + 0x110]
	0x025C94A4 LDR X20, [X20 + 0xA28]
	0x025C94A8 MOV X0, X19
	0x025C94AC MOV X1, X31
	0x025C94B0 BL 0x33BE520
	0x025C94B4 LDR X19, [X21]
	0x025C94B8 CBZ X0, 0x25C94D0
	0x025C94BC LDR X8, [X0]
	0x025C94C0 LDP X9, X1, [X8 + 0x168]
	0x025C94C4 BLR X9
	0x025C94C8 MOV X1, X0
	0x025C94CC B 0x25C94D4
	0x025C94D0 MOV X1, X31
	0x025C94D4 MOV X0, X19
	0x025C94D8 MOV X2, X31
	0x025C94DC BL 0x321B938
	0x025C94E0 LDR X8, [X20]
	0x025C94E4 MOV X19, X0
	0x025C94E8 LDR W9, [X8 + 0xE0]
	0x025C94EC CBNZ W9, 0x25C94F8
	0x025C94F0 MOV X0, X8
	0x025C94F4 BL 0x1C16DFC
	0x025C94F8 MOV X0, X19
	0x025C94FC LDP X20, X19, [X31 + 0x20]
	0x025C9500 LDP X22, X21, [X31 + 0x10]
	0x025C9504 MOV X1, X31
	0x025C9508 LDR X30, [X31], #0x30
	0x025C950C B 0x3C0649C
	0x025C9510 LDR X21, [X21 + 0x20]
	0x025C9514 CBZ X21, 0x25C958C
	0x025C9518 LDR X10, [X20 + 0x20]
	0x025C951C LDR X10, [X10 + 0xC0]
	0x025C9520 LDR X1, [X10 + 0x10]
	0x025C9524 LDRB W10, [X1 + 0x135]
	0x025C9528 TBNZ X10, 0x0, 0x25C9540
	0x025C952C MOV X0, X1
	0x025C9530 BL 0x1C5C684
	0x025C9534 LDR X8, [X19]
	0x025C9538 MOV X1, X0
	0x025C953C LDRB W9, [X8 + 0x130]
	0x025C9540 LDRB W10, [X1 + 0x130]
	0x025C9544 CMP W9, W10
	0x025C9548 B.CC 0x25C9584
	0x025C954C LDR X8, [X8 + 0xC8]
	0x025C9550 ADD X8, X8, X10, 0x3, LSL
	0x025C9554 LDUR X8, [X8 - 0x8]
	0x025C9558 CMP X8, X1
	0x025C955C B.NE 0x25C9584
	0x025C9560 LDR X3, [X21 + 0x18]
	0x025C9564 LDR X0, [X21 + 0x40]
	0x025C9568 LDR X2, [X21 + 0x28]
	0x025C956C MOV X1, X19
	0x025C9570 LDP X20, X19, [X31 + 0x20]
	0x025C9574 LDP X22, X21, [X31 + 0x10]
	0x025C9578 LDR X30, [X31], #0x30
	0x025C957C BR X3
	0x025C9580 BL 0x1C16F20
	0x025C9584 MOV X0, X19
	0x025C9588 BL 0x1C171E0
	0x025C958C ADRP X0, 0x1B53000
	0x025C9590 LDR X0, [X0 + 0x1D0]
	0x025C9594 BL 0x1C16D08
	0x025C9598 BL 0x1C16F10
	0x025C959C MOV X19, X0
	0x025C95A0 ADRP X0, 0x1B54000
	0x025C95A4 LDR X0, [X0 + 0x120]
	0x025C95A8 BL 0x1C16D08
	0x025C95AC MOV X1, X0
	0x025C95B0 MOV X0, X19
	0x025C95B4 MOV X2, X31
	0x025C95B8 BL 0x3C363D0
	0x025C95BC MOV X0, X19
	0x025C95C0 MOV X1, X20
	0x025C95C4 BL 0x1C16DEC
	0x025C95C8 MOV X2, X31
	0x025C95CC B 0x34DC3BC
	0x025C95D0 STR X30, [X31 - 0x30]!
	0x025C95D4 STP X22, X21, [X31 + 0x10]
	0x025C95D8 STP X20, X19, [X31 + 0x20]
	0x025C95DC ADRP X22, 0x1E10000
	0x025C95E0 LDRB W8, [X22 + 0xF39]
	0x025C95E4 MOV X19, X2
	0x025C95E8 MOV X21, X1
	0x025C95EC MOV X20, X0
	0x025C95F0 TBNZ X8, 0x0, 0x25C9608
	0x025C95F4 ADRP X0, 0x1B52000
	0x025C95F8 LDR X0, [X0 + 0x880]
	0x025C95FC BL 0x1C16CF4
	0x025C9600 MOVZ W8, 0x1
	0x025C9604 STRB W8, [X22 + 0xF39]
	0x025C9608 LDR X8, [X20 + 0x20]
	0x025C960C CBNZ X8, 0x25C964C
	0x025C9610 ADRP X8, 0x1B52000
	0x025C9614 LDR X8, [X8 + 0x880]
	0x025C9618 STR X21, [X20 + 0x20]
	0x025C961C LDR X0, [X8]
	0x025C9620 LDR W8, [X0 + 0xE0]
	0x025C9624 CBNZ W8, 0x25C962C
	0x025C9628 BL 0x1C16DFC
	0x025C962C MOV X0, X20
	0x025C9630 MOV X1, X31
	0x025C9634 BL 0x34B2584
	0x025C9638 MOV X0, X20
	0x025C963C LDP X20, X19, [X31 + 0x20]
	0x025C9640 LDP X22, X21, [X31 + 0x10]
	0x025C9644 LDR X30, [X31], #0x30
	0x025C9648 RET
	0x025C964C ADRP X0, 0x1B53000
	0x025C9650 LDR X0, [X0 + 0x1D0]
	0x025C9654 BL 0x1C16D08
	0x025C9658 BL 0x1C16F10
	0x025C965C MOV X20, X0
	0x025C9660 ADRP X0, 0x1B54000
	0x025C9664 LDR X0, [X0 + 0x118]
	0x025C9668 BL 0x1C16D08
	0x025C966C MOV X1, X0
	0x025C9670 MOV X0, X20
	0x025C9674 MOV X2, X31
	0x025C9678 BL 0x3C363D0
	0x025C967C MOV X0, X20
	0x025C9680 MOV X1, X19
	0x025C9684 BL 0x1C16DEC
	0x025C9688 STR X30, [X31 - 0x30]!
	0x025C968C STP X22, X21, [X31 + 0x10]
	0x025C9690 STP X20, X19, [X31 + 0x20]
	0x025C9694 ADRP X22, 0x1E10000
	0x025C9698 LDRB W8, [X22 + 0xF3A]
	0x025C969C MOV X20, X2
	0x025C96A0 MOV X19, X1
	0x025C96A4 MOV X21, X0
	0x025C96A8 TBNZ X8, 0x0, 0x25C96CC
	0x025C96AC ADRP X0, 0x1B2A000
	0x025C96B0 LDR X0, [X0 + 0xA28]
	0x025C96B4 BL 0x1C16CF4
	0x025C96B8 ADRP X0, 0x1B54000
	0x025C96BC LDR X0, [X0 + 0x110]
	0x025C96C0 BL 0x1C16CF4
	0x025C96C4 MOVZ W8, 0x1
	0x025C96C8 STRB W8, [X22 + 0xF3A]
	0x025C96CC LDR X8, [X20 + 0x20]
	0x025C96D0 LDR X8, [X8 + 0xC0]
	0x025C96D4 LDR X0, [X8 + 0x10]
	0x025C96D8 LDRB W8, [X0 + 0x135]
	0x025C96DC TBNZ X8, 0x0, 0x25C96E4
	0x025C96E0 BL 0x1C5C684
	0x025C96E4 CBZ X19, 0x25C97F8
	0x025C96E8 LDR X8, [X19]
	0x025C96EC LDRB W10, [X0 + 0x130]
	0x025C96F0 LDRB W9, [X8 + 0x130]
	0x025C96F4 CMP W9, W10
	0x025C96F8 B.CC 0x25C9710
	0x025C96FC LDR X11, [X8 + 0xC8]
	0x025C9700 ADD X10, X11, X10, 0x3, LSL
	0x025C9704 LDUR X10, [X10 - 0x8]
	0x025C9708 CMP X10, X0
	0x025C970C B.EQ 0x25C9788
	0x025C9710 ADRP X21, 0x1B54000
	0x025C9714 ADRP X20, 0x1B2A000
	0x025C9718 LDR X21, [X21 + 0x110]
	0x025C971C LDR X20, [X20 + 0xA28]
	0x025C9720 MOV X0, X19
	0x025C9724 MOV X1, X31
	0x025C9728 BL 0x33BE520
	0x025C972C LDR X19, [X21]
	0x025C9730 CBZ X0, 0x25C9748
	0x025C9734 LDR X8, [X0]
	0x025C9738 LDP X9, X1, [X8 + 0x168]
	0x025C973C BLR X9
	0x025C9740 MOV X1, X0
	0x025C9744 B 0x25C974C
	0x025C9748 MOV X1, X31
	0x025C974C MOV X0, X19
	0x025C9750 MOV X2, X31
	0x025C9754 BL 0x321B938
	0x025C9758 LDR X8, [X20]
	0x025C975C MOV X19, X0
	0x025C9760 LDR W9, [X8 + 0xE0]
	0x025C9764 CBNZ W9, 0x25C9770
	0x025C9768 MOV X0, X8
	0x025C976C BL 0x1C16DFC
	0x025C9770 MOV X0, X19
	0x025C9774 LDP X20, X19, [X31 + 0x20]
	0x025C9778 LDP X22, X21, [X31 + 0x10]
	0x025C977C MOV X1, X31
	0x025C9780 LDR X30, [X31], #0x30
	0x025C9784 B 0x3C0649C
	0x025C9788 LDR X21, [X21 + 0x20]
	0x025C978C CBZ X21, 0x25C9804
	0x025C9790 LDR X10, [X20 + 0x20]
	0x025C9794 LDR X10, [X10 + 0xC0]
	0x025C9798 LDR X1, [X10 + 0x10]
	0x025C979C LDRB W10, [X1 + 0x135]
	0x025C97A0 TBNZ X10, 0x0, 0x25C97B8
	0x025C97A4 MOV X0, X1
	0x025C97A8 BL 0x1C5C684
	0x025C97AC LDR X8, [X19]
	0x025C97B0 MOV X1, X0
	0x025C97B4 LDRB W9, [X8 + 0x130]
	0x025C97B8 LDRB W10, [X1 + 0x130]
	0x025C97BC CMP W9, W10
	0x025C97C0 B.CC 0x25C97FC
	0x025C97C4 LDR X8, [X8 + 0xC8]
	0x025C97C8 ADD X8, X8, X10, 0x3, LSL
	0x025C97CC LDUR X8, [X8 - 0x8]
	0x025C97D0 CMP X8, X1
	0x025C97D4 B.NE 0x25C97FC
	0x025C97D8 LDR X3, [X21 + 0x18]
	0x025C97DC LDR X0, [X21 + 0x40]
	0x025C97E0 LDR X2, [X21 + 0x28]
	0x025C97E4 MOV X1, X19
	0x025C97E8 LDP X20, X19, [X31 + 0x20]
	0x025C97EC LDP X22, X21, [X31 + 0x10]
	0x025C97F0 LDR X30, [X31], #0x30
	0x025C97F4 BR X3
	0x025C97F8 BL 0x1C16F20
	0x025C97FC MOV X0, X19
	0x025C9800 BL 0x1C171E0
	0x025C9804 ADRP X0, 0x1B53000
	0x025C9808 LDR X0, [X0 + 0x1D0]
	0x025C980C BL 0x1C16D08
	0x025C9810 BL 0x1C16F10
	0x025C9814 MOV X19, X0
	0x025C9818 ADRP X0, 0x1B54000
	0x025C981C LDR X0, [X0 + 0x120]
	0x025C9820 BL 0x1C16D08
	0x025C9824 MOV X1, X0
	0x025C9828 MOV X0, X19
	0x025C982C MOV X2, X31
	0x025C9830 BL 0x3C363D0
	0x025C9834 MOV X0, X19
	0x025C9838 MOV X1, X20
	0x025C983C BL 0x1C16DEC
	0x025C9840 MOV X2, X31
	0x025C9844 B 0x34DC3BC
	0x025C9848 STR X30, [X31 - 0x30]!
	0x025C984C STP X22, X21, [X31 + 0x10]
	0x025C9850 STP X20, X19, [X31 + 0x20]
	0x025C9854 ADRP X22, 0x1E10000
	0x025C9858 LDRB W8, [X22 + 0xF3B]
	0x025C985C MOV X19, X2
	0x025C9860 MOV X21, X1
	0x025C9864 MOV X20, X0
	0x025C9868 TBNZ X8, 0x0, 0x25C9880
	0x025C986C ADRP X0, 0x1B52000
	0x025C9870 LDR X0, [X0 + 0x880]
	0x025C9874 BL 0x1C16CF4
	0x025C9878 MOVZ W8, 0x1
	0x025C987C STRB W8, [X22 + 0xF3B]
	0x025C9880 LDR X8, [X20 + 0x20]
	0x025C9884 CBNZ X8, 0x25C98C4
	0x025C9888 ADRP X8, 0x1B52000
	0x025C988C LDR X8, [X8 + 0x880]
	0x025C9890 STR X21, [X20 + 0x20]
	0x025C9894 LDR X0, [X8]
	0x025C9898 LDR W8, [X0 + 0xE0]
	0x025C989C CBNZ W8, 0x25C98A4
	0x025C98A0 BL 0x1C16DFC
	0x025C98A4 MOV X0, X20
	0x025C98A8 MOV X1, X31
	0x025C98AC BL 0x34B2584
	0x025C98B0 MOV X0, X20
	0x025C98B4 LDP X20, X19, [X31 + 0x20]
	0x025C98B8 LDP X22, X21, [X31 + 0x10]
	0x025C98BC LDR X30, [X31], #0x30
	0x025C98C0 RET
	0x025C98C4 ADRP X0, 0x1B53000
	0x025C98C8 LDR X0, [X0 + 0x1D0]
	0x025C98CC BL 0x1C16D08
	0x025C98D0 BL 0x1C16F10
	0x025C98D4 MOV X20, X0
	0x025C98D8 ADRP X0, 0x1B54000
	0x025C98DC LDR X0, [X0 + 0x118]
	0x025C98E0 BL 0x1C16D08
	0x025C98E4 MOV X1, X0
	0x025C98E8 MOV X0, X20
	0x025C98EC MOV X2, X31
	0x025C98F0 BL 0x3C363D0
	0x025C98F4 MOV X0, X20
	0x025C98F8 MOV X1, X19
	0x025C98FC BL 0x1C16DEC
	0x025C9900 STR X30, [X31 - 0x30]!
	0x025C9904 STP X22, X21, [X31 + 0x10]
	0x025C9908 STP X20, X19, [X31 + 0x20]
	0x025C990C ADRP X22, 0x1E10000
	0x025C9910 LDRB W8, [X22 + 0xF3C]
	0x025C9914 MOV X19, X2
	0x025C9918 MOV X20, X1
	0x025C991C MOV X21, X0
	0x025C9920 TBNZ X8, 0x0, 0x25C9944
	0x025C9924 ADRP X0, 0x1B2A000
	0x025C9928 LDR X0, [X0 + 0xA28]
	0x025C992C BL 0x1C16CF4
	0x025C9930 ADRP X0, 0x1B54000
	0x025C9934 LDR X0, [X0 + 0x110]
	0x025C9938 BL 0x1C16CF4
	0x025C993C MOVZ W8, 0x1
	0x025C9940 STRB W8, [X22 + 0xF3C]
	0x025C9944 LDR X8, [X19 + 0x20]
	0x025C9948 LDR X8, [X8 + 0xC0]
	0x025C994C LDR X0, [X8 + 0x10]
	0x025C9950 LDRB W8, [X0 + 0x135]
	0x025C9954 TBNZ X8, 0x0, 0x25C995C
	0x025C9958 BL 0x1C5C684
	0x025C995C CBZ X20, 0x25C9A80
	0x025C9960 LDR X8, [X20]
	0x025C9964 LDRB W10, [X0 + 0x130]
	0x025C9968 LDRB W9, [X8 + 0x130]
	0x025C996C CMP W9, W10
	0x025C9970 B.CC 0x25C9988
	0x025C9974 LDR X11, [X8 + 0xC8]
	0x025C9978 ADD X10, X11, X10, 0x3, LSL
	0x025C997C LDUR X10, [X10 - 0x8]
	0x025C9980 CMP X10, X0
	0x025C9984 B.EQ 0x25C9A00
	0x025C9988 ADRP X19, 0x1B54000
	0x025C998C ADRP X21, 0x1B2A000
	0x025C9990 LDR X19, [X19 + 0x110]
	0x025C9994 LDR X21, [X21 + 0xA28]
	0x025C9998 MOV X0, X20
	0x025C999C MOV X1, X31
	0x025C99A0 BL 0x33BE520
	0x025C99A4 LDR X19, [X19]
	0x025C99A8 CBZ X0, 0x25C99C0
	0x025C99AC LDR X8, [X0]
	0x025C99B0 LDP X9, X1, [X8 + 0x168]
	0x025C99B4 BLR X9
	0x025C99B8 MOV X1, X0
	0x025C99BC B 0x25C99C4
	0x025C99C0 MOV X1, X31
	0x025C99C4 MOV X0, X19
	0x025C99C8 MOV X2, X31
	0x025C99CC BL 0x321B938
	0x025C99D0 LDR X8, [X21]
	0x025C99D4 MOV X19, X0
	0x025C99D8 LDR W9, [X8 + 0xE0]
	0x025C99DC CBNZ W9, 0x25C99E8
	0x025C99E0 MOV X0, X8
	0x025C99E4 BL 0x1C16DFC
	0x025C99E8 MOV X0, X19
	0x025C99EC LDP X20, X19, [X31 + 0x20]
	0x025C99F0 LDP X22, X21, [X31 + 0x10]
	0x025C99F4 MOV X1, X31
	0x025C99F8 LDR X30, [X31], #0x30
	0x025C99FC B 0x3C0649C
	0x025C9A00 LDR X21, [X21 + 0x20]
	0x025C9A04 CBZ X21, 0x25C9A8C
	0x025C9A08 LDR X10, [X19 + 0x20]
	0x025C9A0C LDR X10, [X10 + 0xC0]
	0x025C9A10 LDP X1, X10, [X10 + 0x10]
	0x025C9A14 LDRB W11, [X1 + 0x135]
	0x025C9A18 LDR X3, [X10]
	0x025C9A1C TBNZ X11, 0x0, 0x25C9A3C
	0x025C9A20 MOV X0, X1
	0x025C9A24 STR X3, [X31 + 0x8]
	0x025C9A28 BL 0x1C5C684
	0x025C9A2C LDR X8, [X20]
	0x025C9A30 LDR X3, [X31 + 0x8]
	0x025C9A34 MOV X1, X0
	0x025C9A38 LDRB W9, [X8 + 0x130]
	0x025C9A3C LDRB W10, [X1 + 0x130]
	0x025C9A40 CMP W9, W10
	0x025C9A44 B.CC 0x25C9A84
	0x025C9A48 LDR X8, [X8 + 0xC8]
	0x025C9A4C ADD X8, X8, X10, 0x3, LSL
	0x025C9A50 LDUR X8, [X8 - 0x8]
	0x025C9A54 CMP X8, X1
	0x025C9A58 B.NE 0x25C9A84
	0x025C9A5C LDR X8, [X19 + 0x20]
	0x025C9A60 MOV X0, X21
	0x025C9A64 MOV X1, X20
	0x025C9A68 LDP X20, X19, [X31 + 0x20]
	0x025C9A6C LDR X8, [X8 + 0xC0]
	0x025C9A70 LDP X22, X21, [X31 + 0x10]
	0x025C9A74 LDR X2, [X8 + 0x18]
	0x025C9A78 LDR X30, [X31], #0x30
	0x025C9A7C BR X3
	0x025C9A80 BL 0x1C16F20
	0x025C9A84 MOV X0, X20
	0x025C9A88 BL 0x1C171E0
	0x025C9A8C ADRP X0, 0x1B53000
	0x025C9A90 LDR X0, [X0 + 0x1D0]
	0x025C9A94 BL 0x1C16D08
	0x025C9A98 BL 0x1C16F10
	0x025C9A9C MOV X20, X0
	0x025C9AA0 ADRP X0, 0x1B54000
	0x025C9AA4 LDR X0, [X0 + 0x120]
	0x025C9AA8 BL 0x1C16D08
	0x025C9AAC MOV X1, X0
	0x025C9AB0 MOV X0, X20
	0x025C9AB4 MOV X2, X31
	0x025C9AB8 BL 0x3C363D0
	0x025C9ABC MOV X0, X20
	0x025C9AC0 MOV X1, X19
	0x025C9AC4 BL 0x1C16DEC
	0x025C9AC8 STR X30, [X31 - 0x30]!
	0x025C9ACC STP X22, X21, [X31 + 0x10]
	0x025C9AD0 STP X20, X19, [X31 + 0x20]
	0x025C9AD4 MOV W21, W1
	0x025C9AD8 MOV X1, X31
	0x025C9ADC MOV X22, X3
	0x025C9AE0 MOV W19, W2
	0x025C9AE4 MOV X20, X0
	0x025C9AE8 BL 0x33BDD8C
	0x025C9AEC LDR X8, [X22 + 0x20]
	0x025C9AF0 LDR X8, [X8 + 0xC0]
	0x025C9AF4 LDR X0, [X8]
	0x025C9AF8 LDRB W8, [X0 + 0x135]
	0x025C9AFC TBNZ X8, 0x0, 0x25C9B04
	0x025C9B00 BL 0x1C5C684
	0x025C9B04 MOV W1, W21
	0x025C9B08 BL 0x1C16D6C
	0x025C9B0C STR X0, [X20 + 0x10]
	0x025C9B10 STR W19, [X20 + 0x18]
	0x025C9B14 LDP X20, X19, [X31 + 0x20]
	0x025C9B18 LDP X22, X21, [X31 + 0x10]
	0x025C9B1C LDR X30, [X31], #0x30
	0x025C9B20 RET
	0x025C9B24 STP X30, X19, [X31 - 0x10]!
	0x025C9B28 LDR X8, [X0 + 0x10]
	0x025C9B2C CBZ X8, 0x25C9B64
	0x025C9B30 LDR X9, [X2 + 0x20]
	0x025C9B34 LDR W3, [X0 + 0x18]
	0x025C9B38 LDR W2, [X8 + 0x18]
	0x025C9B3C MOV X19, X0
	0x025C9B40 LDR X9, [X9 + 0xC0]
	0x025C9B44 MOV X0, X1
	0x025C9B48 MOV X1, X8
	0x025C9B4C LDR X4, [X9 + 0x18]
	0x025C9B50 LDR X9, [X4]
	0x025C9B54 BLR X9
	0x025C9B58 LDR X0, [X19 + 0x10]
	0x025C9B5C LDP X30, X19, [X31], #0x10
	0x025C9B60 RET
	0x025C9B64 BL 0x1C16F20
	0x025C9B68 RET
	0x025C9B6C LDR W0, [X0 + 0x10]
	0x025C9B70 RET
	0x025C9B74 LDR W8, [X0 + 0x10]
	0x025C9B78 CMP W8, 0x1
	0x025C9B7C CSET W0, EQ
	0x025C9B80 RET
	0x025C9B84 LDR X0, [X0 + 0x18]
	0x025C9B88 RET
	0x025C9B8C LDP X8, X1, [X0 + 0x20]
	0x025C9B90 MOV X0, X8
	0x025C9B94 RET
	0x025C9B98 STP X30, X21, [X31 - 0x20]!
	0x025C9B9C STP X20, X19, [X31 + 0x10]
	0x025C9BA0 MOV X20, X1
	0x025C9BA4 MOV X1, X31
	0x025C9BA8 MOV X19, X2
	0x025C9BAC MOV X21, X0
	0x025C9BB0 BL 0x33BDD8C
	0x025C9BB4 STP X20, X19, [X21 + 0x20]
	0x025C9BB8 LDP X20, X19, [X31 + 0x10]
	0x025C9BBC MOVZ W8, 0x1
	0x025C9BC0 STR W8, [X21 + 0x10]
	0x025C9BC4 LDP X30, X21, [X31], #0x20
	0x025C9BC8 RET
	0x025C9BCC STP X30, X21, [X31 - 0x20]!
	0x025C9BD0 STP X20, X19, [X31 + 0x10]
	0x025C9BD4 MOV W20, W1
	0x025C9BD8 MOV X1, X31
	0x025C9BDC MOV X19, X2
	0x025C9BE0 MOV X21, X0
	0x025C9BE4 BL 0x33BDD8C
	0x025C9BE8 STR W20, [X21 + 0x10]
	0x025C9BEC STR X19, [X21 + 0x18]
	0x025C9BF0 LDP X20, X19, [X31 + 0x10]
	0x025C9BF4 LDP X30, X21, [X31], #0x20
	0x025C9BF8 RET
	0x025C9BFC LDR W0, [X0 + 0x10]
	0x025C9C00 RET
	0x025C9C04 LDR W8, [X0 + 0x10]
	0x025C9C08 CMP W8, 0x1
	0x025C9C0C CSET W0, EQ
	0x025C9C10 RET
	0x025C9C14 LDR X0, [X0 + 0x18]
	0x025C9C18 RET
	0x025C9C1C LDR X0, [X0 + 0x20]
	0x025C9C20 RET
	0x025C9C24 STR X30, [X31 - 0x20]!
	0x025C9C28 STP X20, X19, [X31 + 0x10]
	0x025C9C2C MOV X19, X1
	0x025C9C30 MOV X1, X31
	0x025C9C34 MOV X20, X0
	0x025C9C38 BL 0x33BDD8C
	0x025C9C3C MOVZ W8, 0x1
	0x025C9C40 STR W8, [X20 + 0x10]
	0x025C9C44 STR X19, [X20 + 0x20]
	0x025C9C48 LDP X20, X19, [X31 + 0x10]
	0x025C9C4C LDR X30, [X31], #0x20
	0x025C9C50 RET
	0x025C9C54 STP X30, X21, [X31 - 0x20]!
	0x025C9C58 STP X20, X19, [X31 + 0x10]
	0x025C9C5C MOV W20, W1
	0x025C9C60 MOV X1, X31
	0x025C9C64 MOV X19, X2
	0x025C9C68 MOV X21, X0
	0x025C9C6C BL 0x33BDD8C
	0x025C9C70 STR W20, [X21 + 0x10]
	0x025C9C74 STR X19, [X21 + 0x18]
	0x025C9C78 LDP X20, X19, [X31 + 0x10]
	0x025C9C7C LDP X30, X21, [X31], #0x20
	0x025C9C80 RET
	0x025C9C84 STR X30, [X31 - 0x10]!
	0x025C9C88 LDR X8, [X1 + 0x20]
	0x025C9C8C LDR X8, [X8 + 0xC0]
	0x025C9C90 LDR X8, [X8]
	0x025C9C94 LDR X1, [X8 + 0x80]
	0x025C9C98 BL 0x1C16D18
	0x025C9C9C LDR W0, [X0]
	0x025C9CA0 LDR X30, [X31], #0x10
	0x025C9CA4 RET
	0x025C9CA8 STR X30, [X31 - 0x10]!
	0x025C9CAC LDR X8, [X1 + 0x20]
	0x025C9CB0 LDR X8, [X8 + 0xC0]
	0x025C9CB4 LDR X1, [X8 + 0x10]
	0x025C9CB8 LDR X8, [X1]
	0x025C9CBC BLR X8
	0x025C9CC0 CMP W0, 0x1
	0x025C9CC4 CSET W0, EQ
	0x025C9CC8 LDR X30, [X31], #0x10
	0x025C9CCC RET
	0x025C9CD0 STR X30, [X31 - 0x10]!
	0x025C9CD4 LDR X8, [X1 + 0x20]
	0x025C9CD8 LDR X8, [X8 + 0xC0]
	0x025C9CDC LDR X8, [X8]
	0x025C9CE0 LDR X8, [X8 + 0x80]
	0x025C9CE4 ADD X1, X8, 0x20
	0x025C9CE8 BL 0x1C16D18
	0x025C9CEC LDR X0, [X0]
	0x025C9CF0 LDR X30, [X31], #0x10
	0x025C9CF4 RET
	0x025C9CF8 STP X29, X30, [X31 - 0x30]!
	0x025C9CFC STP X22, X21, [X31 + 0x10]
	0x025C9D00 STP X20, X19, [X31 + 0x20]
	0x025C9D04 ADD X29, X31, 0x0
	0x025C9D08 SUB X31, X31, 0x10
	0x025C9D0C MRS X22, 0xC000
	0x025C9D10 LDR X8, [X22 + 0x28]
	0x025C9D14 MOV X19, X1
	0x025C9D18 STUR X8, [X29 - 0x8]
	0x025C9D1C LDR X8, [X2 + 0x20]
	0x025C9D20 LDR X8, [X8 + 0xC0]
	0x025C9D24 LDR X9, [X8 + 0x18]
	0x025C9D28 LDR W20, [X9 + 0xFC]
	0x025C9D2C ADD X9, X31, 0x0
	0x025C9D30 ADD X10, X20, 0xF
	0x025C9D34 AND X10, X10, 0x1FFFFFFFF
	0x025C9D38 SUB X21, X9, X10
	0x025C9D3C ADD X31, X21, 0x0
	0x025C9D40 LDR X8, [X8]
	0x025C9D44 LDR X8, [X8 + 0x80]
	0x025C9D48 ADD X1, X8, 0x40
	0x025C9D4C BL 0x1C16D18
	0x025C9D50 MOV X1, X0
	0x025C9D54 MOV X0, X21
	0x025C9D58 MOV X2, X20
	0x025C9D5C BL 0x3EB1AC0
	0x025C9D60 MOV X0, X19
	0x025C9D64 MOV X1, X21
	0x025C9D68 MOV X2, X20
	0x025C9D6C BL 0x3EB1AC0
	0x025C9D70 LDR X8, [X22 + 0x28]
	0x025C9D74 LDUR X9, [X29 - 0x8]
	0x025C9D78 CMP X8, X9
	0x025C9D7C B.NE 0x25C9D94
	0x025C9D80 ADD X31, X29, 0x0
	0x025C9D84 LDP X20, X19, [X31 + 0x20]
	0x025C9D88 LDP X22, X21, [X31 + 0x10]
	0x025C9D8C LDP X29, X30, [X31], #0x30
	0x025C9D90 RET
	0x025C9D94 BL 0x3EB1B20

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D9
	003 Move [X31+136], D8
	004 Move [X31+144], X29
	005 Move [X31+152], X30
	006 Move [X31+160], X28
	007 Move [X31+168], X27
	008 Move [X31+176], X26
	009 Move [X31+184], X25
	010 Move [X31+192], X24
	011 Move [X31+200], X23
	012 Move [X31+208], X22
	013 Move [X31+216], X21
	014 Move [X31+224], X20
	015 Move [X31+232], X19
	016 Move X21, 0x1E11000
	017 Move W8, [X21+3891]
	018 Move X20, X2
	019 Move X19, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {54}
	025 Move X0, 0x1B2B000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0x1B2B000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x1B2B000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x1B2B000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x1B2B000
	038 Move X0, [X0+2704]
	039 Call 0x1C17CF4
	040 Move X0, 0x1B55000
	041 Move X0, [X0+240]
	042 Call 0x1C17CF4
	043 Move X0, 0x1B55000
	044 Move X0, [X0+248]
	045 Call 0x1C17CF4
	046 Move X0, 0x1B55000
	047 Move X0, [X0+256]
	048 Call 0x1C17CF4
	049 Move X0, 0x1B55000
	050 Move X0, [X0+264]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+3891], W8
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X31+112], X31
	056 Move [X31+80], V0
	057 Move [X31+88], V0
	058 Move [X31+48], V0
	059 Move [X31+56], V0
	060 Add X20, X20, 32
	061 Move X8, [X20]
	062 Move X8, [X8+192]
	063 Move X0, [X8+400]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Call 0x1C17F10
	071 Move X8, [X20]
	072 Move X21, X0
	073 Move X8, [X8+192]
	074 Move X1, [X8+408]
	075 Call List`1<ResourceLogInfo<Object>>..ctor, X0
	076 Move X0, [X22+16]
	077 Compare X0, 0
	078 JumpIfEqual {594}
	079 Move X8, [X20]
	080 Move X27, 0x1B2B000
	081 Move X29, 0x1B2B000
	082 Move X27, [X27+3584]
	083 Move X29, [X29+3608]
	084 Move X8, [X8+192]
	085 Move X28, 0x1B55000
	086 Move X1, [X8+144]
	087 Move X28, [X28+248]
	088 Add X8, X31, 8
	089 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move X8, [X31+40]
	093 Move [X31+80], V0
	094 Move [X31+88], V1
	095 Move [X31+112], X8
	096 Move X8, [X20]
	097 Move X8, [X8+192]
	098 Move X1, [X8+256]
	099 Add X0, X31, 80
	100 Call Enumerator<Int32, Object>.MoveNext, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {248}
	105 Move X0, [X31+104]
	106 Compare X0, 0
	107 JumpIfEqual {593}
	108 Move X8, [X20]
	109 Move X8, [X8+192]
	110 Move X1, [X8+200]
	111 Call 0x25EF01C, X0
	112 Move X23, X0
	113 Compare X0, 0
	114 JumpIfEqual {240}
	115 Move X8, [X23]
	116 Move X1, [X29]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X23
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X23
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {212}
	140 Move X8, [X20]
	141 Move X8, [X8+192]
	142 Move X1, [X8+208]
	143 Move W8, [X1+309]
	144 Move TEMP, X8
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {151}
	148 Move X0, X1
	149 Call 0x1C5D684
	150 Move X1, X0
	151 Move X8, [X23]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Compare X9, 0
	154 JumpIfEqual {161}
	155 Move X10, [X8+176]
	156 Add X10, X10, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X9, X9, 1
	160 Add X10, X10, 16
	161 Move X0, X23
	162 Move W2, W31
	163 Call 0x1C5D788
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add X8, X8, X9
	166 Add X0, X8, 312
	167 Move X9, [X0]
	168 Move X1, [X0+8]
	169 Add X8, X31, 8
	170 Move X0, X23
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X8, [X22]
	173 Move X25, [X31+16]
	174 Move X9, [X8+456]
	175 Move X2, [X8+464]
	176 Move X0, X22
	177 Move X1, X25
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X8, [X22]
	180 Move X24, X0
	181 Move X9, [X8+472]
	182 Move X2, [X8+480]
	183 Move X0, X22
	184 Move X1, X25
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare X21, 0
	187 JumpIfEqual {238}
	188 Move X8, [X20]
	189 Move W10, [X21+28]
	190 Move X9, [X8+192]
	191 Move X8, [X21+16]
	192 Add W10, W10, 1
	193 Move X9, [X9+432]
	194 Move [X21+28], W10
	195 Compare X8, 0
	196 JumpIfEqual {239}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W11, [X8+24]
	199 Move X2, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add W9, W10, 1
	202 Add X8, X8, X10
	203 Move [X21+24], W9
	204 Move [X8+32], X24
	205 Move [X8+40], X2
	206 Move X8, [X9+32]
	207 Move X8, [X8+192]
	208 Move X3, [X8+112]
	209 Move X0, X21
	210 Move X1, X24
	211 Call List`1<ResourceLogInfo<Object>>.AddWithResize, X0, X1
	212 Move X26, X31
	213 Compare X23, 0
	214 JumpIfEqual {236}
	215 Move X8, [X23]
	216 Move X1, [X27]
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X23
	227 Move W2, W31
	228 Call 0x1C5D788
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Add X8, X8, X9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X23
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Compare X26, 0
	237 JumpIfEqual {96}
	238 Call 0x1C17F20
	239 Call 0x1C17F20
	240 Call 0x1C17F20
	241 Move X25, X1
	242 Move X24, X0
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X0, X24
	245 Call 0x3EB2AD0
	246 Move X26, [X0]
	247 Call 0x3EB2AE0
	248 Move X25, 0x1B2B000
	249 Move X26, 0x1B2B000
	250 Move X27, 0x1B2B000
	251 Move X25, [X25+2504]
	252 Move X26, [X26+2704]
	253 Move X27, [X27+1880]
	254 Move X23, X31
	255 Move W24, 6
	256 Move X8, [X20]
	257 Add X0, X31, 80
	258 Move X8, [X8+192]
	259 Move X1, [X8+264]
	260 Call Enumerator<Int32, Object>.Dispose, X0
	261 Compare X23, 0
	262 JumpIfNotEqual {595}
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Compare W24, 0
	265 JumpIfNotEqual {547}
	266 Move X8, [X22]
	267 Move X0, X22
	268 Move X9, [X8+488]
	269 Move X1, [X8+496]
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X8, 0x1B55000
	272 Move X8, [X8+240]
	273 Move X9, 0x1B55000
	274 Move X1, X0
	275 Move X3, X31
	276 Move X8, [X8]
	277 Move X9, [X9+256]
	278 Move X0, X8
	279 Move X2, [X9]
	280 Call String.Concat, X0, X1, X2
	281 Move X23, [X25]
	282 Move X22, X0
	283 Move X8, [X23+56]
	284 Compare X8, 0
	285 JumpIfNotEqual {289}
	286 Move X0, X23
	287 Call 0x1C5D6E0
	288 Move X8, [X23+56]
	289 Move X0, [X8+16]
	290 Move W8, [X0+309]
	291 Move TEMP, X8
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfEqual {296}
	295 Call 0x1C5D684
	296 Move W8, [X0+224]
	297 Compare W8, 0
	298 JumpIfNotEqual {300}
	299 Call 0x1C17DFC
	300 Move X8, [X23+56]
	301 Move X0, [X8+16]
	302 Move W8, [X0+309]
	303 Move TEMP, X8
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {308}
	307 Call 0x1C5D684
	308 Compare X19, 0
	309 JumpIfEqual {594}
	310 Move X8, [X0+184]
	311 Move X0, X19
	312 Move X1, X22
	313 Move X3, X31
	314 Move X2, [X8]
	315 Call RenderGraphLogger.LogLine, X0, X1, X2
	316 Move X8, [X20]
	317 Move X8, [X8+192]
	318 Move X0, [X8+456]
	319 Move W8, [X0+309]
	320 Move TEMP, X8
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {325}
	324 Call 0x1C5D684
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Move X8, [X20]
	330 Move X8, [X8+192]
	331 Move X0, [X8+456]
	332 Move W8, [X0+309]
	333 Move TEMP, X8
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfEqual {338}
	337 Call 0x1C5D684
	338 Move X8, [X0+184]
	339 Move X22, [X8+8]
	340 Compare X22, 0
	341 JumpIfNotEqual {406}
	342 Move X8, [X20]
	343 Move X8, [X8+192]
	344 Move X0, [X8+456]
	345 Move W8, [X0+309]
	346 Move TEMP, X8
	347 And TEMP, TEMP, 1
	348 Compare TEMP, 1
	349 JumpIfEqual {351}
	350 Call 0x1C5D684
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move X8, [X20]
	356 Move X8, [X8+192]
	357 Move X0, [X8+456]
	358 Move W9, [X0+309]
	359 Move TEMP, X9
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfEqual {366}
	363 Call 0x1C5D684
	364 Move X8, [X20]
	365 Move X8, [X8+192]
	366 Move X8, [X8+448]
	367 Move X9, [X0+184]
	368 Move W10, [X8+309]
	369 Move X23, [X9]
	370 Move TEMP, X10
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {377}
	374 Move X0, X8
	375 Call 0x1C5D684
	376 Move X8, X0
	377 Move X0, X8
	378 Call 0x1C17F10
	379 Move X8, [X20]
	380 Move X1, X23
	381 Move X22, X0
	382 Move X8, [X8+192]
	383 Move X2, [X8+464]
	384 Move X3, [X8+472]
	385 Call Comparison`1<ResourceLogInfo<Object>>..ctor, X0, X1, X2
	386 Move X8, [X20]
	387 Move X8, [X8+192]
	388 Move X0, [X8+456]
	389 Move W9, [X0+309]
	390 Move TEMP, X9
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfEqual {397}
	394 Call 0x1C5D684
	395 Move X8, [X20]
	396 Move X8, [X8+192]
	397 Move X9, [X0+184]
	398 Move [X9+8], X22
	399 Move X0, [X8+456]
	400 Move W8, [X0+309]
	401 Move TEMP, X8
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfEqual {406}
	405 Call 0x1C5D684
	406 Compare X21, 0
	407 JumpIfEqual {594}
	408 Move X8, [X20]
	409 Move X0, X21
	410 Move X1, X22
	411 Move X8, [X8+192]
	412 Move X2, [X8+480]
	413 Call List`1<ResourceLogInfo<Object>>.Sort, X0, X1
	414 Move X8, [X20]
	415 Move X0, X21
	416 Move X8, [X8+192]
	417 Move X1, [X8+488]
	418 Add X8, X31, 8
	419 Call List`1<ResourceLogInfo<Object>>.GetEnumerator, X0
	420 NotImplemented "Instruction LDUR not yet implemented."
	421 NotImplemented "Instruction LDUR not yet implemented."
	422 Move W23, W31
	423 Move S8, W31
	424 Move W24, 0x35800000
	425 Move [X31+48], V0
	426 Move [X31+56], V1
	427 Move X8, [X20]
	428 Move X8, [X8+192]
	429 Move X1, [X8+520]
	430 Add X0, X31, 48
	431 Call Enumerator<ResourceLogInfo<Object>>.MoveNext, X0
	432 Move TEMP, X0
	433 And TEMP, TEMP, 1
	434 Compare TEMP, 1
	435 JumpIfNotEqual {491}
	436 Move X21, [X31+64]
	437 Move X8, [X31+72]
	438 Move X0, [X27]
	439 Move S0, W24
	440 Move [X31+8], W23
	441 NotImplemented "Instruction SCVTF not yet implemented."
	442 Multiply S9, S1, S0
	443 Add S8, S8, S9
	444 Add X1, X31, 8
	445 Call 0x1C17E04
	446 Move X22, X0
	447 Move X0, [X26]
	448 Move [X31+4], S9
	449 Add X1, X31, 4
	450 Call 0x1C17E04
	451 Move X2, X0
	452 Move X0, [X28]
	453 Move X1, X22
	454 Move X3, X21
	455 Move X4, X31
	456 Call String.Format, X0, X1, X2, X3
	457 Move X22, [X25]
	458 Move X21, X0
	459 Move X8, [X22+56]
	460 Compare X8, 0
	461 JumpIfNotEqual {465}
	462 Move X0, X22
	463 Call 0x1C5D6E0
	464 Move X8, [X22+56]
	465 Move X0, [X8+16]
	466 Move W8, [X0+309]
	467 Move TEMP, X8
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfEqual {472}
	471 Call 0x1C5D684
	472 Move W8, [X0+224]
	473 Compare W8, 0
	474 JumpIfNotEqual {476}
	475 Call 0x1C17DFC
	476 Move X8, [X22+56]
	477 Move X0, [X8+16]
	478 Move W8, [X0+309]
	479 Move TEMP, X8
	480 And TEMP, TEMP, 1
	481 Compare TEMP, 1
	482 JumpIfEqual {484}
	483 Call 0x1C5D684
	484 Move X8, [X0+184]
	485 Move X2, [X8]
	486 Move X0, X19
	487 Move X1, X21
	488 Move X3, X31
	489 Call RenderGraphLogger.LogLine, X0, X1, X2
	490 Add W23, W23, 1
	491 Move X21, X31
	492 Move W22, 10
	493 Move X8, [X20]
	494 Add X0, X31, 48
	495 Move X8, [X8+192]
	496 Move X1, [X8+528]
	497 Call Enumerator<ResourceLogInfo<Object>>.Dispose, X0
	498 Compare X21, 0
	499 JumpIfNotEqual {597}
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Compare W22, 0
	502 JumpIfNotEqual {547}
	503 Move X0, [X26]
	504 Add X1, X31, 8
	505 Move [X31+8], S8
	506 Call 0x1C17E04
	507 Move X8, 0x1B55000
	508 Move X8, [X8+264]
	509 Move X1, X0
	510 Move X2, X31
	511 Move X8, [X8]
	512 Move X0, X8
	513 Call String.Format, X0, X1
	514 Move X21, [X25]
	515 Move X20, X0
	516 Move X8, [X21+56]
	517 Compare X8, 0
	518 JumpIfNotEqual {522}
	519 Move X0, X21
	520 Call 0x1C5D6E0
	521 Move X8, [X21+56]
	522 Move X0, [X8+16]
	523 Move W8, [X0+309]
	524 Move TEMP, X8
	525 And TEMP, TEMP, 1
	526 Compare TEMP, 1
	527 JumpIfEqual {529}
	528 Call 0x1C5D684
	529 Move W8, [X0+224]
	530 Compare W8, 0
	531 JumpIfNotEqual {533}
	532 Call 0x1C17DFC
	533 Move X8, [X21+56]
	534 Move X0, [X8+16]
	535 Move W8, [X0+309]
	536 Move TEMP, X8
	537 And TEMP, TEMP, 1
	538 Compare TEMP, 1
	539 JumpIfEqual {541}
	540 Call 0x1C5D684
	541 Move X8, [X0+184]
	542 Move X0, X19
	543 Move X1, X20
	544 Move X3, X31
	545 Move X2, [X8]
	546 Call RenderGraphLogger.LogLine, X0, X1, X2
	547 Move X20, [X31+224]
	548 Move X19, [X31+232]
	549 Move X22, [X31+208]
	550 Move X21, [X31+216]
	551 Move X24, [X31+192]
	552 Move X23, [X31+200]
	553 Move X26, [X31+176]
	554 Move X25, [X31+184]
	555 Move X28, [X31+160]
	556 Move X27, [X31+168]
	557 Move X29, [X31+144]
	558 Move X30, [X31+152]
	559 Move D9, [X31+128]
	560 Move D8, [X31+136]
	561 Add X31, X31, 240
	562 Return 
	563 Move X26, X31
	564 Compare X23, 0
	565 JumpIfEqual {587}
	566 Move X8, [X23]
	567 Move X1, [X27]
	568 NotImplemented "Instruction LDRH not yet implemented."
	569 Compare X9, 0
	570 JumpIfEqual {577}
	571 Move X10, [X8+176]
	572 Add X10, X10, 8
	573 NotImplemented "Instruction LDUR not yet implemented."
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Subtract X9, X9, 1
	576 Add X10, X10, 16
	577 Move X0, X23
	578 Move W2, W31
	579 Call 0x1C5D788
	580 NotImplemented "Instruction LDRSW not yet implemented."
	581 Add X8, X8, X9
	582 Add X0, X8, 312
	583 Move X8, [X0]
	584 Move X1, [X0+8]
	585 Move X0, X23
	586 NotImplemented "Instruction BLR not yet implemented."
	587 Compare X26, 0
	588 JumpIfEqual {605}
	589 Move X0, X26
	590 Call 0x1C17F18
	591 Move X0, X26
	592 Call 0x1C17F18
	593 Call 0x1C17F20
	594 Call 0x1C17F20
	595 Move X0, X23
	596 Call 0x1C17F18
	597 Move X0, X21
	598 Call 0x1C17F18
	599 Move X25, X1
	600 Move X24, X0
	601 Compare X23, 0
	602 JumpIfNotEqual {566}
	603 Move X25, X1
	604 Move X24, X0
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move X25, 0x1B2B000
	607 Move X26, 0x1B2B000
	608 Move X27, 0x1B2B000
	609 Move X25, [X25+2504]
	610 Move X26, [X26+2704]
	611 Move X27, [X27+1880]
	612 Move X0, X24
	613 Call 0x3EB2AD0
	614 Move X23, [X0]
	615 Call 0x3EB2AE0
	616 Move W24, W31
	617 Move X23, X31
	618 Move X24, X0
	619 Move X8, [X20]
	620 Move X8, [X8+192]
	621 Move X1, [X8+264]
	622 Add X0, X31, 80
	623 Call Enumerator<Int32, Object>.Dispose, X0
	624 Compare X23, 0
	625 JumpIfEqual {644}
	626 Move X0, X23
	627 Call 0x1C17F18
	628 Move X24, X0
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Move X0, X24
	631 Call 0x3EB2AD0
	632 Move X21, [X0]
	633 Call 0x3EB2AE0
	634 Move W22, W31
	635 Move X21, X31
	636 Move X24, X0
	637 Move X8, [X20]
	638 Move X8, [X8+192]
	639 Move X1, [X8+528]
	640 Add X0, X31, 48
	641 Call Enumerator<ResourceLogInfo<Object>>.Dispose, X0
	642 Compare X21, 0
	643 JumpIfNotEqual {646}
	644 Move X0, X24
	645 Call 0x1D2D690
	646 Move X0, X21
	647 Call 0x1C17F18
	648 Call 0x1991590

Method: System.Boolean ShouldReleaseResource(System.Int32 lastUsedFrameIndex, System.Int32 currentFrameIndex)

Disassembly:
	0x025C9D98 STP X29, X30, [X31 - 0x50]!
	0x025C9D9C STR X25, [X31 + 0x10]
	0x025C9DA0 STP X24, X23, [X31 + 0x20]
	0x025C9DA4 STP X22, X21, [X31 + 0x30]

ISIL:
	001 Add W8, W0, 10
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor()

Disassembly:
	0x025C9DA8 STP X20, X19, [X31 + 0x40]
	0x025C9DAC ADD X29, X31, 0x0
	0x025C9DB0 SUB X31, X31, 0x10
	0x025C9DB4 MRS X25, 0xC000
	0x025C9DB8 LDR X8, [X25 + 0x28]
	0x025C9DBC MOV X19, X2
	0x025C9DC0 MOV X20, X1
	0x025C9DC4 MOV X22, X0
	0x025C9DC8 STUR X8, [X29 - 0x8]
	0x025C9DCC STUR X1, [X29 - 0x10]
	0x025C9DD0 LDR X8, [X2 + 0x20]
	0x025C9DD4 LDR X8, [X8 + 0xC0]
	0x025C9DD8 LDR X8, [X8 + 0x18]
	0x025C9DDC LDR W21, [X8 + 0xFC]
	0x025C9DE0 ADD X8, X31, 0x0
	0x025C9DE4 ADD X9, X21, 0xF
	0x025C9DE8 AND X9, X9, 0x1FFFFFFFF
	0x025C9DEC SUB X23, X8, X9
	0x025C9DF0 ADD X31, X23, 0x0
	0x025C9DF4 MOV X1, X31
	0x025C9DF8 BL 0x33BDD8C
	0x025C9DFC LDR X8, [X19 + 0x20]
	0x025C9E00 MOVZ W1, 0x4
	0x025C9E04 LDR X8, [X8 + 0xC0]
	0x025C9E08 LDR X8, [X8]
	0x025C9E0C LDR X24, [X8 + 0x80]
	0x025C9E10 MOV X0, X24
	0x025C9E14 BL 0x1C16D14
	0x025C9E18 MOV X0, X22
	0x025C9E1C MOV X1, X24
	0x025C9E20 BL 0x1C16D18
	0x025C9E24 MOVZ W8, 0x1
	0x025C9E28 STR W8, [X0]
	0x025C9E2C LDR X19, [X19 + 0x20]
	0x025C9E30 MOV X0, X23
	0x025C9E34 MOV X2, X21
	0x025C9E38 LDR X8, [X19 + 0xC0]
	0x025C9E3C LDR X8, [X8 + 0x18]
	0x025C9E40 LDR W8, [X8 + 0x28]
	0x025C9E44 CMP W8, 0x0
	0x025C9E48 SUB X8, X29, 0x10
	0x025C9E4C CSEL X1, X20, X8, LT
	0x025C9E50 BL 0x3EB1AC0
	0x025C9E54 LDR X8, [X19 + 0xC0]
	0x025C9E58 MOV X0, X22
	0x025C9E5C MOV X2, X23
	0x025C9E60 MOV W3, W21
	0x025C9E64 LDR X8, [X8]
	0x025C9E68 LDR X8, [X8 + 0x80]
	0x025C9E6C ADD X1, X8, 0x40
	0x025C9E70 BL 0x1C16D1C
	0x025C9E74 LDR X8, [X25 + 0x28]
	0x025C9E78 LDUR X9, [X29 - 0x8]
	0x025C9E7C CMP X8, X9
	0x025C9E80 B.NE 0x25C9EA0
	0x025C9E84 ADD X31, X29, 0x0
	0x025C9E88 LDP X20, X19, [X31 + 0x40]
	0x025C9E8C LDP X22, X21, [X31 + 0x30]
	0x025C9E90 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1E11000
	008 Move W8, [X21+3892]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1B2C000
	016 Move X0, [X0+3616]
	017 Call 0x1C17CF4
	018 Move X0, 0x1B2C000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3892], W8
	023 Move X8, [X20+32]
	024 Move X23, 0x1B2C000
	025 Move X22, 0x1B2C000
	026 Move X8, [X8+192]
	027 Move X0, [X8+8]
	028 Move W8, [X0+309]
	029 Move X23, [X23+3632]
	030 Move X22, [X22+3616]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Call 0x1C17F10
	037 Move X8, [X20+32]
	038 Move X21, X0
	039 Move X8, [X8+192]
	040 Move X1, [X8+536]
	041 Call Dictionary`2<Int32, Object>..ctor, X0
	042 Move [X19+16], X21
	043 Move X0, [X23]
	044 Call 0x1C17F10
	045 Move X2, [X22]
	046 Move W1, 32
	047 Move X21, X0
	048 Call List`1<Int32>..ctor, X0, X1
	049 Move [X19+24], X21
	050 Move X8, [X20+32]
	051 Move X8, [X8+192]
	052 Move X0, [X8+272]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Call 0x1C17F10
	060 Move X8, [X20+32]
	061 Move X20, X0
	062 Move X8, [X8+192]
	063 Move X1, [X8+544]
	064 Call List`1<ValueTuple`2<Int32, Object>>..ctor, X0
	065 Move [X19+32], X20
	066 Move X0, X19
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X1, X31
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Call IRenderGraphResourcePool..ctor, X0
	075 Return 

