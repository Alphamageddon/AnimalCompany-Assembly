Type: UnityEngine.Experimental.Rendering.XRSystem

Method: UnityEngine.XR.XRDisplaySubsystem GetActiveDisplay()

Disassembly:
	0x03989E38 LDP X22, X21, [X31 + 0x10]
	0x03989E3C LDR X30, [X31], #0x30
	0x03989E40 B 0x39863F0
	0x03989E44 STR X30, [X31 - 0x30]!
	0x03989E48 STP X22, X21, [X31 + 0x10]
	0x03989E4C STP X20, X19, [X31 + 0x20]
	0x03989E50 ADRP X19, 0xA58000
	0x03989E54 ADRP X20, 0x7C7000
	0x03989E58 LDRB W8, [X19 + 0xA87]
	0x03989E5C LDR X20, [X20 + 0x500]
	0x03989E60 TBNZ X8, 0x0, 0x3989E90
	0x03989E64 ADRP X0, 0x792000
	0x03989E68 LDR X0, [X0 + 0x8F8]
	0x03989E6C BL 0x1C16CF4
	0x03989E70 ADRP X0, 0x76A000
	0x03989E74 LDR X0, [X0 + 0x598]
	0x03989E78 BL 0x1C16CF4
	0x03989E7C ADRP X0, 0x7C7000
	0x03989E80 LDR X0, [X0 + 0x500]
	0x03989E84 BL 0x1C16CF4
	0x03989E88 MOVZ W8, 0x1
	0x03989E8C STRB W8, [X19 + 0xA87]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA59000
	005 Move X19, 0x7C8000
	006 Move W8, [X20+2679]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7C8000
	013 Move X0, [X0+1280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2679], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean get_displayActive()

Disassembly:
	0x0398628C ADRP X8, 0x7CA000
	0x03986290 LDR X8, [X8 + 0x4B0]
	0x03986294 MOV W1, W19
	0x03986298 LDR X2, [X8]
	0x0398629C ADD X8, X31, 0x8
	0x039862A0 BL 0x30DFDE8
	0x039862A4 LDP S0, S1, [X31 + 0x88]
	0x039862A8 LDP S2, S3, [X31 + 0x90]
	0x039862AC LDP X20, X19, [X31 + 0xC0]
	0x039862B0 LDP X30, X21, [X31 + 0xB0]
	0x039862B4 ADD X31, X31, 0xD0
	0x039862B8 RET
	0x039862BC BL 0x1C16F20
	0x039862C0 SUB X31, X31, 0xD0
	0x039862C4 STP X30, X21, [X31 + 0xB0]
	0x039862C8 STP X20, X19, [X31 + 0xC0]
	0x039862CC ADRP X21, 0xA5B000
	0x039862D0 LDRB W8, [X21 + 0xA6F]
	0x039862D4 MOV W19, W1
	0x039862D8 MOV X20, X0
	0x039862DC TBNZ X8, 0x0, 0x39862F4
	0x039862E0 ADRP X0, 0x7CA000
	0x039862E4 LDR X0, [X0 + 0x4B0]
	0x039862E8 BL 0x1C16CF4
	0x039862EC MOVZ W8, 0x1
	0x039862F0 STRB W8, [X21 + 0xA6F]
	0x039862F4 LDR X0, [X20 + 0x10]
	0x039862F8 CBZ X0, 0x3986328
	0x039862FC ADRP X8, 0x7CA000
	0x03986300 LDR X8, [X8 + 0x4B0]
	0x03986304 MOV W1, W19
	0x03986308 LDR X2, [X8]
	0x0398630C ADD X8, X31, 0x8
	0x03986310 BL 0x30DFDE8
	0x03986314 LDR W0, [X31 + 0xA0]
	0x03986318 LDP X20, X19, [X31 + 0xC0]
	0x0398631C LDP X30, X21, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA5C000
	005 Move X19, 0x7CB000
	006 Move W8, [X20+2680]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7CB000
	013 Move X0, [X0+1280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2680], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X8, [X8+24]
	025 Compare X8, 0
	026 JumpIfEqual {43}
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {36}
	030 Call 0x1C17DFC
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X8, [X8+24]
	034 Compare X8, 0
	035 JumpIfEqual {48}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X0, X8
	039 Move X1, X31
	040 Move X30, [X31+32]
	041 Call IntegratedSubsystem.get_running, X0
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: System.Boolean get_isHDRDisplayOutputActive()

Disassembly:
	0x03989E90 LDR X0, [X20]
	0x03989E94 ADRP X22, 0x76A000
	0x03989E98 LDR W8, [X0 + 0xE0]
	0x03989E9C LDR X22, [X22 + 0x598]
	0x03989EA0 CBNZ W8, 0x3989EAC
	0x03989EA4 BL 0x1C16DFC
	0x03989EA8 LDR X0, [X20]
	0x03989EAC LDR X8, [X22]
	0x03989EB0 LDR X9, [X0 + 0xB8]
	0x03989EB4 LDR W10, [X8 + 0xE0]
	0x03989EB8 LDR X19, [X9 + 0x28]
	0x03989EBC CBNZ W10, 0x3989EC8
	0x03989EC0 MOV X0, X8
	0x03989EC4 BL 0x1C16DFC
	0x03989EC8 ADRP X21, 0x792000
	0x03989ECC LDR X21, [X21 + 0x8F8]
	0x03989ED0 MOV X0, X19
	0x03989ED4 MOV X1, X31
	0x03989ED8 MOV X2, X31
	0x03989EDC BL 0x3C354F8
	0x03989EE0 LDR X8, [X20]
	0x03989EE4 TBZ X0, 0x0, 0x3989F2C
	0x03989EE8 LDR W9, [X8 + 0xE0]
	0x03989EEC CBNZ W9, 0x3989EFC
	0x03989EF0 MOV X0, X8
	0x03989EF4 BL 0x1C16DFC
	0x03989EF8 LDR X8, [X20]
	0x03989EFC LDR X0, [X21]
	0x03989F00 LDR X8, [X8 + 0xB8]
	0x03989F04 LDR W9, [X0 + 0xE0]
	0x03989F08 LDR X19, [X8 + 0x28]
	0x03989F0C CBNZ W9, 0x3989F14
	0x03989F10 BL 0x1C16DFC
	0x03989F14 MOV X0, X19
	0x03989F18 MOV X1, X31
	0x03989F1C BL 0x39E1DF8
	0x03989F20 LDR X8, [X20]
	0x03989F24 LDR X9, [X8 + 0xB8]
	0x03989F28 STR X31, [X9 + 0x28]
	0x03989F2C LDR W9, [X8 + 0xE0]
	0x03989F30 CBNZ W9, 0x3989F40
	0x03989F34 MOV X0, X8
	0x03989F38 BL 0x1C16DFC
	0x03989F3C LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA59000
	005 Move X19, 0x7C8000
	006 Move W8, [X20+2681]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x775000
	013 Move X0, [X0+368]
	014 Call 0x1C17CF4
	015 Move X0, 0x76F000
	016 Move X0, [X0+4056]
	017 Call 0x1C17CF4
	018 Move X0, 0x7C8000
	019 Move X0, [X0+1280]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2681], W8
	023 Move X0, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move X0, [X8+24]
	031 Compare X0, 0
	032 JumpIfEqual {49}
	033 Move X1, X31
	034 Call XRDisplaySubsystem.get_hdrOutputSettings, X0
	035 Compare X0, 0
	036 JumpIfEqual {49}
	037 Move X1, X31
	038 Call HDROutputSettings.get_active, X0
	039 Move X8, 0x76F000
	040 Move X8, [X8+4056]
	041 And W1, W0, 1
	042 Add X0, X31, 12
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move X2, [X8]
	045 Call Nullable`1<Boolean>..ctor, X0, X1
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return X0

Method: System.Boolean get_singlePassAllowed()

Disassembly:
	0x03989F40 LDR X0, [X22]
	0x03989F44 LDR X8, [X8 + 0xB8]
	0x03989F48 LDR W9, [X0 + 0xE0]
	0x03989F4C LDR X19, [X8 + 0x30]
	0x03989F50 CBNZ W9, 0x3989F58
	0x03989F54 BL 0x1C16DFC
	0x03989F58 MOV X0, X19
	0x03989F5C MOV X1, X31
	0x03989F60 MOV X2, X31
	0x03989F64 BL 0x3C354F8
	0x03989F68 TBZ X0, 0x0, 0x3989FB4
	0x03989F6C LDR X0, [X20]
	0x03989F70 LDR W8, [X0 + 0xE0]
	0x03989F74 CBNZ W8, 0x3989F80
	0x03989F78 BL 0x1C16DFC
	0x03989F7C LDR X0, [X20]
	0x03989F80 LDR X8, [X21]
	0x03989F84 LDR X9, [X0 + 0xB8]
	0x03989F88 LDR W10, [X8 + 0xE0]
	0x03989F8C LDR X19, [X9 + 0x30]
	0x03989F90 CBNZ W10, 0x3989F9C
	0x03989F94 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA59000
	005 Move X19, 0x7C8000
	006 Move W8, [X20+2682]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7C8000
	013 Move X0, [X0+1280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2682], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+72]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_singlePassAllowed(System.Boolean value)

Disassembly:
	0x03989F98 BL 0x1C16DFC
	0x03989F9C MOV X0, X19
	0x03989FA0 MOV X1, X31
	0x03989FA4 BL 0x39E1DF8
	0x03989FA8 LDR X8, [X20]
	0x03989FAC LDR X8, [X8 + 0xB8]
	0x03989FB0 STR X31, [X8 + 0x30]
	0x03989FB4 LDP X20, X19, [X31 + 0x20]
	0x03989FB8 LDP X22, X21, [X31 + 0x10]
	0x03989FBC LDR X30, [X31], #0x30
	0x03989FC0 RET
	0x03989FC4 STP X30, X21, [X31 - 0x20]!
	0x03989FC8 STP X20, X19, [X31 + 0x10]
	0x03989FCC ADRP X21, 0xA58000
	0x03989FD0 ADRP X20, 0x7C7000
	0x03989FD4 LDRB W8, [X21 + 0xA89]
	0x03989FD8 LDR X20, [X20 + 0x500]
	0x03989FDC MOV X19, X0
	0x03989FE0 TBNZ X8, 0x0, 0x3989FF8
	0x03989FE4 ADRP X0, 0x7C7000
	0x03989FE8 LDR X0, [X0 + 0x500]
	0x03989FEC BL 0x1C16CF4
	0x03989FF0 MOVZ W8, 0x1
	0x03989FF4 STRB W8, [X21 + 0xA89]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA59000
	006 Move X20, 0x7C8000
	007 Move W8, [X21+2683]
	008 Move X20, [X20+1280]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C8000
	015 Move X0, [X0+1280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2683], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move [X8+72], W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: UnityEngine.Rendering.FoveatedRenderingCaps get_foveatedRenderingCaps()

Disassembly:
	0x03989FF8 LDR X0, [X20]
	0x03989FFC LDR W8, [X0 + 0xE0]
	0x0398A000 CBNZ W8, 0x398A00C
	0x0398A004 BL 0x1C16DFC
	0x0398A008 LDR X0, [X20]
	0x0398A00C LDR X8, [X0 + 0xB8]
	0x0398A010 STR X19, [X8 + 0x38]
	0x0398A014 LDP X20, X19, [X31 + 0x10]
	0x0398A018 LDP X30, X21, [X31], #0x20
	0x0398A01C RET
	0x0398A020 STR X30, [X31 - 0x20]!
	0x0398A024 STP X20, X19, [X31 + 0x10]
	0x0398A028 ADRP X20, 0xA57000
	0x0398A02C ADRP X19, 0x769000
	0x0398A030 LDRB W8, [X20 + 0xA8A]
	0x0398A034 LDR X19, [X19 + 0x598]
	0x0398A038 TBNZ X8, 0x0, 0x398A05C
	0x0398A03C ADRP X0, 0x769000
	0x0398A040 LDR X0, [X0 + 0x598]
	0x0398A044 BL 0x1C16CF4
	0x0398A048 ADRP X0, 0x7C6000
	0x0398A04C LDR X0, [X0 + 0x500]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA58000
	005 Move X19, 0x7C7000
	006 Move W8, [X20+2684]
	007 Call 0x3EB26F4
	008 Return X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7C7000
	014 Move X0, [X0+1280]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2684], W8
	018 Move X0, [X19]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {24}
	022 Call 0x1C17DFC
	023 Move X0, [X19]
	024 Move X8, [X0+184]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, [X8+76]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.Void set_foveatedRenderingCaps(UnityEngine.Rendering.FoveatedRenderingCaps value)

Disassembly:
	0x0398A050 BL 0x1C16CF4
	0x0398A054 MOVZ W8, 0x1
	0x0398A058 STRB W8, [X20 + 0xA8A]
	0x0398A05C MOV X0, X31
	0x0398A060 BL 0x3C4BB34
	0x0398A064 LDR X8, [X19]
	0x0398A068 MOV X19, X0
	0x0398A06C LDR W9, [X8 + 0xE0]
	0x0398A070 CBNZ W9, 0x398A07C
	0x0398A074 MOV X0, X8
	0x0398A078 BL 0x1C16DFC
	0x0398A07C MOV X0, X19
	0x0398A080 MOV X1, X31
	0x0398A084 MOV X2, X31
	0x0398A088 BL 0x3C354F8
	0x0398A08C TBZ X0, 0x0, 0x398A0B4
	0x0398A090 ADRP X8, 0x7C6000
	0x0398A094 LDR X8, [X8 + 0x500]
	0x0398A098 LDR X0, [X8]
	0x0398A09C LDR W8, [X0 + 0xE0]
	0x0398A0A0 CBNZ W8, 0x398A0A8
	0x0398A0A4 BL 0x1C16DFC
	0x0398A0A8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA58000
	006 Move X20, 0x7C7000
	007 Move W8, [X21+2685]
	008 Move X20, [X20+1280]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C7000
	015 Move X0, [X0+1280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2685], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+76], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Boolean get_dumpDebugInfo()

Disassembly:
	0x0398A0AC LDR X30, [X31], #0x20
	0x0398A0B0 B 0x39894DC
	0x0398A0B4 LDP X20, X19, [X31 + 0x10]
	0x0398A0B8 LDR X30, [X31], #0x20
	0x0398A0BC RET
	0x0398A0C0 SUB X31, X31, 0x1F0
	0x0398A0C4 STP X29, X30, [X31 + 0x1C0]
	0x0398A0C8 STP X22, X21, [X31 + 0x1D0]
	0x0398A0CC STP X20, X19, [X31 + 0x1E0]
	0x0398A0D0 ADRP X22, 0xA57000
	0x0398A0D4 ADRP X21, 0x7C6000
	0x0398A0D8 LDRB W8, [X22 + 0xA8E]
	0x0398A0DC LDR X21, [X21 + 0x500]
	0x0398A0E0 MOV X19, X1
	0x0398A0E4 MOV X20, X0
	0x0398A0E8 TBNZ X8, 0x0, 0x398A100
	0x0398A0EC ADRP X0, 0x7C6000
	0x0398A0F0 LDR X0, [X0 + 0x500]
	0x0398A0F4 BL 0x1C16CF4
	0x0398A0F8 MOVZ W8, 0x1
	0x0398A0FC STRB W8, [X22 + 0xA8E]
	0x0398A100 ADD X0, X31, 0xE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA58000
	005 Move X19, 0x7C7000
	006 Move W8, [X20+2686]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7C7000
	013 Move X0, [X0+1280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2686], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+80]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_dumpDebugInfo(System.Boolean value)

Disassembly:
	0x0398A104 MOVZ W2, 0xE0
	0x0398A108 MOV W1, W31
	0x0398A10C BL 0x3EB1B10
	0x0398A110 ADD X0, X31, 0x0
	0x0398A114 MOVZ W2, 0xE0
	0x0398A118 MOV W1, W31
	0x0398A11C BL 0x3EB1B10
	0x0398A120 LDR X0, [X21]
	0x0398A124 LDR W8, [X0 + 0xE0]
	0x0398A128 CBNZ W8, 0x398A130
	0x0398A12C BL 0x1C16DFC
	0x0398A130 ADRP X22, 0xA57000
	0x0398A134 LDRB W8, [X22 + 0xB41]
	0x0398A138 CBNZ W8, 0x398A150
	0x0398A13C ADRP X0, 0x7C6000
	0x0398A140 LDR X0, [X0 + 0x500]
	0x0398A144 BL 0x1C16CF4
	0x0398A148 MOVZ W8, 0x1
	0x0398A14C STRB W8, [X22 + 0xB41]
	0x0398A150 LDR X0, [X21]
	0x0398A154 LDR W8, [X0 + 0xE0]
	0x0398A158 CBNZ W8, 0x398A164
	0x0398A15C BL 0x1C16DFC
	0x0398A160 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA58000
	006 Move X20, 0x7C7000
	007 Move W8, [X21+2687]
	008 Move X20, [X20+1280]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C7000
	015 Move X0, [X0+1280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2687], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move [X8+80], W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void Initialize(System.Func`2<UnityEngine.Experimental.Rendering.XRPassCreateInfo, UnityEngine.Experimental.Rendering.XRPass> passAllocator, UnityEngine.Shader occlusionMeshPS, UnityEngine.Shader mirrorViewPS)

Disassembly:
	0x0398A164 LDR X8, [X0 + 0xB8]
	0x0398A168 LDRB W8, [X8 + 0x48]
	0x0398A16C CBZ W8, 0x398A22C
	0x0398A170 LDR W8, [X19 + 0x58]
	0x0398A174 CMP W8, 0x5
	0x0398A178 B.NE 0x398A22C
	0x0398A17C MOV X0, X19
	0x0398A180 MOV X1, X31
	0x0398A184 BL 0x3E66054
	0x0398A188 CMP W0, 0x2
	0x0398A18C B.NE 0x398A22C
	0x0398A190 LDR W8, [X19 + 0x44]
	0x0398A194 CMP W8, 0x2
	0x0398A198 B.NE 0x398A22C
	0x0398A19C ADD X3, X31, 0xE0
	0x0398A1A0 MOV X0, X19
	0x0398A1A4 MOV X1, X20
	0x0398A1A8 MOV W2, W31
	0x0398A1AC MOV X4, X31
	0x0398A1B0 BL 0x3E65F9C
	0x0398A1B4 ADD X3, X31, 0x0
	0x0398A1B8 MOVZ W2, 0x1
	0x0398A1BC MOV X0, X19
	0x0398A1C0 MOV X1, X20
	0x0398A1C4 MOV X4, X31
	0x0398A1C8 BL 0x3E65F9C
	0x0398A1CC LDR W8, [X31 + 0x178]
	0x0398A1D0 MOV W0, W31
	0x0398A1D4 CBNZ W8, 0x398A230
	0x0398A1D8 LDR W8, [X31 + 0x98]
	0x0398A1DC CMP W8, 0x1
	0x0398A1E0 B.NE 0x398A22C
	0x0398A1E4 LDR V0, [X31 + 0x160]
	0x0398A1E8 LDR V1, [X31 + 0x80]
	0x0398A1EC FCMP S0, S1
	0x0398A1F0 B.NE 0x398A22C
	0x0398A1F4 LDR V0, [X31 + 0x8C]
	0x0398A1F8 LDR V1, [X31 + 0x16C]
	0x0398A1FC FCMP S1, S0
	0x0398A200 B.NE 0x398A22C
	0x0398A204 LDR V0, [X31 + 0x88]
	0x0398A208 LDR V1, [X31 + 0x168]
	0x0398A20C FCMP S1, S0
	0x0398A210 B.NE 0x398A22C
	0x0398A214 LDR V0, [X31 + 0x84]
	0x0398A218 LDR V1, [X31 + 0x164]
	0x0398A21C FCMP S1, S0
	0x0398A220 B.NE 0x398A22C
	0x0398A224 MOVZ W0, 0x1
	0x0398A228 B 0x398A230
	0x0398A22C MOV W0, W31
	0x0398A230 LDP X20, X19, [X31 + 0x1E0]
	0x0398A234 LDP X22, X21, [X31 + 0x1D0]
	0x0398A238 LDP X29, X30, [X31 + 0x1C0]
	0x0398A23C ADD X31, X31, 0x1F0
	0x0398A240 RET
	0x0398A244 STR X29, [X31 - 0x60]!
	0x0398A248 STP X30, X27, [X31 + 0x10]
	0x0398A24C STP X26, X25, [X31 + 0x20]
	0x0398A250 STP X24, X23, [X31 + 0x30]
	0x0398A254 STP X22, X21, [X31 + 0x40]
	0x0398A258 STP X20, X19, [X31 + 0x50]
	0x0398A25C SUB X31, X31, 0x9C0
	0x0398A260 MRS X25, 0xC000
	0x0398A264 MOV X19, X8
	0x0398A268 LDR X8, [X25 + 0x28]
	0x0398A26C ADRP X23, 0xA57000
	0x0398A270 ADRP X26, 0x7C6000
	0x0398A274 MOV X21, X1
	0x0398A278 STR X8, [X31 + 0x9B8]
	0x0398A27C LDRB W8, [X23 + 0xA90]
	0x0398A280 LDR X26, [X26 + 0x500]
	0x0398A284 MOV X20, X0
	0x0398A288 ADD X27, X31, 0x320
	0x0398A28C ADD X22, X31, 0xE0
	0x0398A290 TBNZ X8, 0x0, 0x398A2B4
	0x0398A294 ADRP X0, 0x7C6000
	0x0398A298 LDR X0, [X0 + 0x530]
	0x0398A29C BL 0x1C16CF4
	0x0398A2A0 ADRP X0, 0x7C6000
	0x0398A2A4 LDR X0, [X0 + 0x500]
	0x0398A2A8 BL 0x1C16CF4
	0x0398A2AC MOVZ W8, 0x1
	0x0398A2B0 STRB W8, [X23 + 0xA90]
	0x0398A2B4 MOVI V0.2D, 0x0
	0x0398A2B8 ADD X0, X31, 0xE0
	0x0398A2BC MOVZ W2, 0xE0
	0x0398A2C0 MOV X1, X20
	0x0398A2C4 STR W31, [X31 + 0x1F0]
	0x0398A2C8 STP V0, V0, [X31 + 0x1D0]
	0x0398A2CC STR V0, [X31 + 0x1C]
	0x0398A2D0 BL 0x3EB1AC0
	0x0398A2D4 LDUR V0, [X22 + 0x38]
	0x0398A2D8 LDUR V1, [X22 + 0x48]
	0x0398A2DC LDUR V2, [X22 + 0x58]
	0x0398A2E0 LDR W8, [X31 + 0x148]
	0x0398A2E4 ADD X0, X31, 0x200
	0x0398A2E8 STP V0, V1, [X31 + 0x200]
	0x0398A2EC LDR W22, [X31 + 0x200]
	0x0398A2F0 LDR W23, [X31 + 0x204]
	0x0398A2F4 MOV X1, X31
	0x0398A2F8 STR V2, [X31 + 0x22]
	0x0398A2FC STR W8, [X31 + 0x230]
	0x0398A300 BL 0x3C2255C
	0x0398A304 MOV W24, W0
	0x0398A308 ADD X0, X31, 0x200
	0x0398A30C MOV X1, X31
	0x0398A310 BL 0x3C224C4
	0x0398A314 LDR W5, [X31 + 0x210]
	0x0398A318 MOV W4, W0
	0x0398A31C ADD X0, X31, 0x1C0
	0x0398A320 MOV W1, W22
	0x0398A324 MOV W2, W23
	0x0398A328 MOV W3, W24
	0x0398A32C MOV X6, X31
	0x0398A330 BL 0x3C2289C
	0x0398A334 LDR W8, [X20 + 0x58]
	0x0398A338 ADD X0, X20, 0x38
	0x0398A33C MOV X1, X31
	0x0398A340 STR W8, [X31 + 0x1E0]
	0x0398A344 LDR W8, [X20 + 0x44]
	0x0398A348 STR W8, [X31 + 0x1CC]
	0x0398A34C LDR W8, [X20 + 0x60]
	0x0398A350 STR W8, [X31 + 0x1E8]
	0x0398A354 BL 0x3C22668
	0x0398A358 AND W1, W0, 0x1
	0x0398A35C ADD X0, X31, 0x1C0
	0x0398A360 MOV X2, X31
	0x0398A364 BL 0x3C226C4
	0x0398A368 MOVI V0.2D, 0x0
	0x0398A36C ADD X0, X31, 0x238
	0x0398A370 MOVZ W2, 0xE7
	0x0398A374 MOV W1, W31
	0x0398A378 STP V0, V0, [X31 + 0x360]
	0x0398A37C STP V0, V0, [X31 + 0x340]
	0x0398A380 STP V0, V0, [X31 + 0x320]
	0x0398A384 BL 0x3EB1B10
	0x0398A388 ADD X0, X31, 0x0
	0x0398A38C MOVZ W2, 0xE0
	0x0398A390 MOV X1, X20
	0x0398A394 BL 0x3EB1AC0
	0x0398A398 LDP V0, V1, [X31 + 0x10]
	0x0398A39C LDR X8, [X31 + 0x30]
	0x0398A3A0 LDP V2, V3, [X31 + 0x1C0]
	0x0398A3A4 LDR V4, [X31 + 0x1E]
	0x0398A3A8 LDR W9, [X31 + 0x1F0]
	0x0398A3AC ADD X0, X27, 0x60
	0x0398A3B0 MOVZ W2, 0x630
	0x0398A3B4 MOV X1, X21
	0x0398A3B8 STP V0, V1, [X31 + 0x320]
	0x0398A3BC STR X8, [X31 + 0x340]
	0x0398A3C0 STUR V2, [X27 + 0x28]
	0x0398A3C4 STUR V3, [X27 + 0x38]
	0x0398A3C8 STUR V4, [X27 + 0x48]
	0x0398A3CC STR W9, [X31 + 0x378]
	0x0398A3D0 BL 0x3EB1AC0
	0x0398A3D4 LDR X0, [X26]
	0x0398A3D8 LDR W8, [X0 + 0xE0]
	0x0398A3DC CBNZ W8, 0x398A3E8
	0x0398A3E0 BL 0x1C16DFC
	0x0398A3E4 LDR X0, [X26]
	0x0398A3E8 LDR X8, [X0 + 0xB8]
	0x0398A3EC LDR X9, [X8]
	0x0398A3F0 CBZ X9, 0x398A48C
	0x0398A3F4 LDR X9, [X9 + 0x10]
	0x0398A3F8 CBZ X9, 0x398A48C
	0x0398A3FC LDR X21, [X8 + 0x28]
	0x0398A400 LDRB W8, [X20 + 0xCC]
	0x0398A404 LDR X22, [X20 + 0xD8]
	0x0398A408 LDR W23, [X9 + 0x18]
	0x0398A40C LDR W24, [X20 + 0xD0]
	0x0398A410 ADD X9, X31, 0x238
	0x0398A414 ADD X0, X9, 0x7
	0x0398A418 MOVZ W2, 0xE0
	0x0398A41C MOV X1, X20
	0x0398A420 AND W26, W8, 0x1
	0x0398A424 BL 0x3EB1AC0
	0x0398A428 ADD X1, X31, 0x320
	0x0398A42C MOVZ W2, 0x690
	0x0398A430 MOV X0, X19
	0x0398A434 BL 0x3EB1AC0
	0x0398A438 ADD X0, X19, 0x6A9
	0x0398A43C ADD X1, X31, 0x238
	0x0398A440 MOVZ W2, 0xE7
	0x0398A444 STR X21, [X19 + 0x690]
	0x0398A448 STR X22, [X19 + 0x698]
	0x0398A44C STR W23, [X19 + 0x6A0]
	0x0398A450 STR W24, [X19 + 0x6A4]
	0x0398A454 STRB W26, [X19 + 0x6A8]
	0x0398A458 BL 0x3EB1AC0
	0x0398A45C LDR X8, [X25 + 0x28]
	0x0398A460 LDR X9, [X31 + 0x9B8]
	0x0398A464 CMP X8, X9
	0x0398A468 B.NE 0x398A490
	0x0398A46C ADD X31, X31, 0x9C0
	0x0398A470 LDP X20, X19, [X31 + 0x50]
	0x0398A474 LDP X22, X21, [X31 + 0x40]
	0x0398A478 LDP X24, X23, [X31 + 0x30]
	0x0398A47C LDP X26, X25, [X31 + 0x20]
	0x0398A480 LDP X30, X27, [X31 + 0x10]
	0x0398A484 LDR X29, [X31], #0x60
	0x0398A488 RET
	0x0398A48C BL 0x1C16F20
	0x0398A490 BL 0x3EB1B20
	0x0398A494 SUB X31, X31, 0x1B0
	0x0398A498 STR D8, [X31 + 0x170]
	0x0398A49C STR X29, [X31 + 0x178]
	0x0398A4A0 STP X30, X23, [X31 + 0x180]
	0x0398A4A4 STP X22, X21, [X31 + 0x190]
	0x0398A4A8 STP X20, X19, [X31 + 0x1A0]
	0x0398A4AC ADRP X23, 0xA57000
	0x0398A4B0 ADRP X22, 0x7C6000
	0x0398A4B4 MOV X19, X8
	0x0398A4B8 LDRB W8, [X23 + 0xA8F]
	0x0398A4BC LDR X22, [X22 + 0x578]
	0x0398A4C0 MOV X20, X1
	0x0398A4C4 MOV X21, X0
	0x0398A4C8 TBNZ X8, 0x0, 0x398A4E0
	0x0398A4CC ADRP X0, 0x7C6000
	0x0398A4D0 LDR X0, [X0 + 0x578]
	0x0398A4D4 BL 0x1C16CF4
	0x0398A4D8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA58000
	008 Move W8, [X22+2688]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x7C7000
	017 Move X0, [X0+1696]
	018 Call 0x1C17CF4
	019 Move X0, 0x792000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move X0, 0x76A000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x7C7000
	026 Move X0, [X0+1704]
	027 Call 0x1C17CF4
	028 Move X0, 0x7C7000
	029 Move X0, [X0+1400]
	030 Call 0x1C17CF4
	031 Move X0, 0x7C7000
	032 Move X0, [X0+1280]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2688], W8
	036 Compare X21, 0
	037 JumpIfEqual {247}
	038 Move X22, 0x7C7000
	039 Move X22, [X22+1280]
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Move [X8+8], X21
	048 Call XRSystem.RefreshDeviceInfo
	049 Move X0, X31
	050 Call SystemInfo.get_foveatedRenderingCaps
	051 Move X23, 0xA58000
	052 Move W8, [X23+2876]
	053 Move W21, W0
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x7C7000
	057 Move X0, [X0+1280]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+2876], W8
	061 Move X0, [X22]
	062 Move X23, 0x76A000
	063 Move W8, [X0+224]
	064 Move X23, [X23+1432]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X22]
	069 Move X8, [X0+184]
	070 Move [X8+76], W21
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {126}
	084 Move X0, [X22]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {90}
	088 Call 0x1C17DFC
	089 Move X0, [X22]
	090 Move X8, [X23]
	091 Move X9, [X0+184]
	092 Move W10, [X8+224]
	093 Move X21, [X9+40]
	094 Compare W10, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X0, X21
	099 Move X1, X31
	100 Move X2, X31
	101 Call Object.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {126}
	106 Move X8, 0x792000
	107 Move X8, [X8+2296]
	108 Move X0, [X8]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X20
	114 Move X1, X31
	115 Call CoreUtils.CreateEngineMaterial, X0
	116 Move X8, [X22]
	117 Move X20, X0
	118 Move W9, [X8+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {124}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move X8, [X22]
	124 Move X8, [X8+184]
	125 Move [X8+40], X20
	126 Move X0, [X23]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X21, 0x7C7000
	132 Move X21, [X21+1400]
	133 Move X0, X19
	134 Move X1, X31
	135 Move X2, X31
	136 Call Object.op_Inequality, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {183}
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X22]
	147 Move X8, [X23]
	148 Move X9, [X0+184]
	149 Move W10, [X8+224]
	150 Move X20, [X9+48]
	151 Compare W10, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X8
	154 Call 0x1C17DFC
	155 Move X0, X20
	156 Move X1, X31
	157 Move X2, X31
	158 Call Object.op_Equality, X0, X1
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {183}
	163 Move X8, 0x792000
	164 Move X8, [X8+2296]
	165 Move X0, [X8]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X0, X19
	171 Move X1, X31
	172 Call CoreUtils.CreateEngineMaterial, X0
	173 Move X8, [X22]
	174 Move X19, X0
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {181}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Move X8, [X22]
	181 Move X8, [X8+184]
	182 Move [X8+48], X19
	183 Move X0, [X21]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X19, 0xA58000
	189 Move W8, [X19+2877]
	190 Compare W8, 0
	191 JumpIfNotEqual {197}
	192 Move X0, 0x7C7000
	193 Move X0, [X0+1400]
	194 Call 0x1C17CF4
	195 Move W8, 1
	196 Move [X19+2877], W8
	197 Move X0, [X21]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X21]
	203 Move X8, [X0+184]
	204 Move W8, [X8]
	205 Compare W8, 0
	206 JumpIfEqual {240}
	207 Move X8, 0x7C7000
	208 Move X8, [X8+1696]
	209 Move X19, 0x7C7000
	210 Move X0, [X8]
	211 Move X19, [X19+1704]
	212 Call 0x1C17F10
	213 Move X2, [X19]
	214 Move X1, X31
	215 Move X3, X31
	216 Move X19, X0
	217 Call Action`2<Object, Object>..ctor, X0, X1, X2
	218 Move X0, [X22]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X20, 0xA58000
	224 Move W8, [X20+2878]
	225 Compare W8, 0
	226 JumpIfNotEqual {232}
	227 Move X0, 0x7C7000
	228 Move X0, [X0+1280]
	229 Call 0x1C17CF4
	230 Move W8, 1
	231 Move [X20+2878], W8
	232 Move X0, [X22]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {238}
	236 Call 0x1C17DFC
	237 Move X0, [X22]
	238 Move X8, [X0+184]
	239 Move [X8+56], X19
	240 Move X20, [X31+32]
	241 Move X19, [X31+40]
	242 Move X22, [X31+16]
	243 Move X21, [X31+24]
	244 Move X30, [X31+48]
	245 Move X23, [X31+56]
	246 Return 
	247 Move X0, 0x76F000
	248 Move X0, [X0+1320]
	249 Call 0x1C17D08
	250 Call 0x1C17F10
	251 Move X19, X0
	252 Move X0, 0x7C7000
	253 Move X0, [X0+1712]
	254 Call 0x1C17D08
	255 Move X1, X0
	256 Move X0, X19
	257 Move X2, X31
	258 Call ArgumentNullException..ctor, X0, X1
	259 Move X0, 0x7C7000
	260 Move X0, [X0+1720]
	261 Call 0x1C17D08
	262 Move X1, X0
	263 Move X0, X19
	264 Call 0x1C17DEC

Method: System.Void SetDisplayMSAASamples(UnityEngine.Rendering.MSAASamples msaaSamples)

Disassembly:
	0x0398A79C LDP S8, S10, [X31 + 0x10]
	0x0398A7A0 LDR W8, [X0 + 0xE0]
	0x0398A7A4 CBNZ W8, 0x398A7AC
	0x0398A7A8 BL 0x1C16DFC
	0x0398A7AC FABS S0, S11
	0x0398A7B0 FABS S1, S9
	0x0398A7B4 FABS S2, S10
	0x0398A7B8 FABS S3, S8
	0x0398A7BC LDP X20, X19, [X31 + 0x50]
	0x0398A7C0 LDP X30, X21, [X31 + 0x40]
	0x0398A7C4 LDP D9, D8, [X31 + 0x30]
	0x0398A7C8 LDP D11, D10, [X31 + 0x20]
	0x0398A7CC FADD S1, S0, S1
	0x0398A7D0 FADD S3, S3, S2
	0x0398A7D4 FDIV S0, S0, S1
	0x0398A7D8 FDIV S1, S2, S3
	0x0398A7DC ADD X31, X31, 0x60
	0x0398A7E0 RET
	0x0398A7E4 MOV X1, X31
	0x0398A7E8 B 0x33BDD8C
	0x0398A7EC STR X1, [X0]
	0x0398A7F0 RET
	0x0398A7F4 STR X30, [X31 - 0x10]!
	0x0398A7F8 LDR X0, [X0]
	0x0398A7FC CBZ X0, 0x398A808
	0x0398A800 LDR X30, [X31], #0x10
	0x0398A804 B 0x398A80C
	0x0398A808 BL 0x1C16F20
	0x0398A80C SUB X31, X31, 0x30
	0x0398A810 STP X30, X0, [X31 + 0x10]
	0x0398A814 STP X20, X19, [X31 + 0x20]
	0x0398A818 ADD X9, X31, 0x18
	0x0398A81C STRB W31, [X0 + 0x50]
	0x0398A820 STP X31, X9, [X31]
	0x0398A824 LDR X9, [X0 + 0x58]
	0x0398A828 CBZ X9, 0x398A88C
	0x0398A82C LDR X9, [X9 + 0x18]
	0x0398A830 CBZ X9, 0x398A890
	0x0398A834 LDR X9, [X0 + 0x30]
	0x0398A838 MOV X8, X0
	0x0398A83C CBZ X9, 0x398A8D8
	0x0398A840 LDRB W9, [X9 + 0x23]
	0x0398A844 CBNZ W9, 0x398A874
	0x0398A848 MOV X0, X8
	0x0398A84C BL 0x398DD5C
	0x0398A850 LDR X0, [X31 + 0x18]
	0x0398A854 BL 0x398DF88
	0x0398A858 LDR X8, [X31 + 0x18]
	0x0398A85C LDR X0, [X8 + 0x10]
	0x0398A860 CBZ X0, 0x398A8DC
	0x0398A864 LDR W1, [X8 + 0x94]
	0x0398A868 BL 0x398DF34
	0x0398A86C LDR X0, [X31 + 0x18]
	0x0398A870 BL 0x398E0AC
	0x0398A874 ADD X0, X31, 0x0
	0x0398A878 BL 0x1BF7AA8
	0x0398A87C LDP X20, X19, [X31 + 0x20]
	0x0398A880 LDR X30, [X31 + 0x10]
	0x0398A884 ADD X31, X31, 0x30
	0x0398A888 RET
	0x0398A88C BL 0x1C16F20
	0x0398A890 ADRP X0, 0x769000
	0x0398A894 LDR X0, [X0 + 0x5B0]
	0x0398A898 BL 0x1C16D08
	0x0398A89C BL 0x1C16F10
	0x0398A8A0 MOV X19, X0
	0x0398A8A4 ADRP X0, 0x7C6000
	0x0398A8A8 LDR X0, [X0 + 0x730]
	0x0398A8AC BL 0x1C16D08
	0x0398A8B0 MOV X1, X0
	0x0398A8B4 MOV X0, X19
	0x0398A8B8 MOV X2, X31
	0x0398A8BC BL 0x337DF1C
	0x0398A8C0 ADRP X0, 0x7C6000
	0x0398A8C4 LDR X0, [X0 + 0x738]
	0x0398A8C8 BL 0x1C16D08
	0x0398A8CC MOV X1, X0
	0x0398A8D0 MOV X0, X19
	0x0398A8D4 BL 0x1C16DEC
	0x0398A8D8 BL 0x1C16F20
	0x0398A8DC BL 0x1C16F20
	0x0398A8E0 B 0x398A8F4
	0x0398A8E4 B 0x398A8F4
	0x0398A8E8 MOV X19, X0
	0x0398A8EC B 0x398A8F8
	0x0398A8F0 B 0x398A8F4
	0x0398A8F4 MOV X19, X0
	0x0398A8F8 CMP W1, 0x1
	0x0398A8FC B.NE 0x398A9DC
	0x0398A900 MOV X0, X19
	0x0398A904 BL 0x3EB1AD0
	0x0398A908 MOV X19, X0
	0x0398A90C ADRP X0, 0x769000
	0x0398A910 LDR X0, [X0 + 0x7D0]
	0x0398A914 BL 0x1C16D08
	0x0398A918 LDR X8, [X19]
	0x0398A91C LDR X1, [X8]
	0x0398A920 BL 0x1C17270
	0x0398A924 TBZ X0, 0x0, 0x398A99C
	0x0398A928 LDR X19, [X19]
	0x0398A92C BL 0x3EB1AE0
	0x0398A930 ADRP X0, 0x769000
	0x0398A934 LDR X0, [X0 + 0xA28]
	0x0398A938 BL 0x1C16D08
	0x0398A93C LDR W8, [X0 + 0xE0]
	0x0398A940 CBNZ W8, 0x398A948
	0x0398A944 BL 0x1C16DFC
	0x0398A948 ADRP X0, 0x7C6000
	0x0398A94C LDR X0, [X0 + 0x740]
	0x0398A950 BL 0x1C16D08
	0x0398A954 MOV X1, X31
	0x0398A958 BL 0x3C0649C
	0x0398A95C LDR X8, [X31 + 0x18]
	0x0398A960 LDRB W9, [X8 + 0x50]
	0x0398A964 CBNZ W9, 0x398A990
	0x0398A968 ADRP X0, 0x769000
	0x0398A96C LDR X0, [X0 + 0xA28]
	0x0398A970 BL 0x1C16D08
	0x0398A974 LDR W8, [X0 + 0xE0]
	0x0398A978 CBNZ W8, 0x398A980
	0x0398A97C BL 0x1C16DFC
	0x0398A980 MOV X0, X19
	0x0398A984 MOV X1, X31
	0x0398A988 BL 0x3C02C84
	0x0398A98C LDR X8, [X31 + 0x18]
	0x0398A990 MOVZ W9, 0x1
	0x0398A994 STRB W9, [X8 + 0x50]
	0x0398A998 B 0x398A874
	0x0398A99C MOVZ W0, 0x8
	0x0398A9A0 BL 0x3EB1AF0
	0x0398A9A4 LDR X8, [X19]
	0x0398A9A8 STR X8, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xA58000
	007 Move X20, 0x7C7000
	008 Move W8, [X21+2689]
	009 Move X20, [X20+1280]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x7C7000
	016 Move X0, [X0+1768]
	017 Call 0x1C17CF4
	018 Move X0, 0x7C7000
	019 Move X0, [X0+1776]
	020 Call 0x1C17CF4
	021 Move X0, 0x7C7000
	022 Move X0, [X0+1784]
	023 Call 0x1C17CF4
	024 Move X0, 0x7C7000
	025 Move X0, [X0+1792]
	026 Call 0x1C17CF4
	027 Move X0, 0x7C7000
	028 Move X0, [X0+1744]
	029 Call 0x1C17CF4
	030 Move X0, 0x792000
	031 Move X0, [X0+192]
	032 Call 0x1C17CF4
	033 Move X0, 0x7C7000
	034 Move X0, [X0+1280]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2689], W8
	038 Move X0, [X20]
	039 Move [X31+8], X31
	040 Move [X31+16], X31
	041 Move [X31+24], X31
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X20]
	047 Move X8, [X0+184]
	048 Move W9, [X8+32]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {56}
	053 Call 0x1C17DFC
	054 Move X8, [X20]
	055 Move X8, [X8+184]
	056 Move [X8+32], W19
	057 Move X9, 0x792000
	058 Move X9, [X9+192]
	059 Move X19, [X8+16]
	060 Move X0, [X9]
	061 Move W9, [X0+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, 0x7C7000
	066 Move X8, [X8+1744]
	067 Move X0, X19
	068 Move X1, [X8]
	069 Call 0x229939C, X0
	070 Move X8, [X20]
	071 Move X8, [X8+184]
	072 Move X0, [X8+16]
	073 Compare X0, 0
	074 JumpIfEqual {115}
	075 Move X8, 0x7C7000
	076 Move X8, [X8+1792]
	077 Move X1, [X8]
	078 Add X8, X31, 8
	079 Call List`1<Object>.GetEnumerator, X0
	080 Move X21, 0x7C7000
	081 Move X21, [X21+1776]
	082 Move X1, [X21]
	083 Add X0, X31, 8
	084 Call Enumerator<Object>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {103}
	089 Move X0, [X20]
	090 Move X19, [X31+24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Compare X19, 0
	096 JumpIfEqual {114}
	097 Move X8, [X20]
	098 Move X8, [X8+184]
	099 Move W1, [X8+32]
	100 Move X0, X19
	101 Move X2, X31
	102 Call XRDisplaySubsystem.SetMSAALevel, X0, X1
	103 Move X8, 0x7C7000
	104 Move X8, [X8+1768]
	105 Add X0, X31, 8
	106 Move X1, [X8]
	107 Call Enumerator<Object>.Dispose, X0
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X30, [X31+32]
	111 Move X21, [X31+40]
	112 Add X31, X31, 64
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Move X19, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Call 0x3EB2AD0
	120 Move X20, [X0]
	121 Call 0x3EB2AE0
	122 Move X8, 0x7C7000
	123 Move X8, [X8+1768]
	124 Add X0, X31, 8
	125 Move X1, [X8]
	126 Call Enumerator<Object>.Dispose, X0
	127 Compare X20, 0
	128 JumpIfEqual {108}
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Move X20, X31
	132 Move X19, X0
	133 Move X8, 0x7C7000
	134 Move X8, [X8+1768]
	135 Move X1, [X8]
	136 Add X0, X31, 8
	137 Call Enumerator<Object>.Dispose, X0
	138 Compare X20, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X19
	141 Call 0x1D2D690
	142 Move X0, X20
	143 Call 0x1C17F18
	144 Call 0x1991590

Method: UnityEngine.Rendering.MSAASamples GetDisplayMSAASamples()

Disassembly:
	0x0398A9AC ADRP X1, 0x52A000
	0x0398A9B0 ADD X1, X1, 0xE58
	0x0398A9B4 MOV X2, X31
	0x0398A9B8 BL 0x3EB1B00
	0x0398A9BC B 0x398A9D8
	0x0398A9C0 B 0x398A9D8
	0x0398A9C4 MOV X20, X1
	0x0398A9C8 MOV X19, X0
	0x0398A9CC BL 0x3EB1AE0
	0x0398A9D0 MOV W1, W20
	0x0398A9D4 B 0x398A9DC
	0x0398A9D8 MOV X19, X0
	0x0398A9DC MOVZ W8, 0x1
	0x0398A9E0 CMP W1, W8
	0x0398A9E4 B.NE 0x398AA04
	0x0398A9E8 MOV X0, X19
	0x0398A9EC BL 0x3EB1AD0
	0x0398A9F0 LDR X8, [X0]
	0x0398A9F4 STR X8, [X31]
	0x0398A9F8 BL 0x3EB1AE0
	0x0398A9FC B 0x398A874
	0x0398AA00 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA58000
	005 Move X19, 0x7C7000
	006 Move W8, [X20+2690]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7C7000
	013 Move X0, [X0+1280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2690], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+32]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void SetRenderScale(System.Single renderScale)

Disassembly:
	0x0398AA04 ADD X0, X31, 0x0
	0x0398AA08 BL 0x1BF7AA8
	0x0398AA0C MOV X0, X19
	0x0398AA10 BL 0x1D2C690
	0x0398AA14 BL 0x1990590
	0x0398AA18 SUB X31, X31, 0x70
	0x0398AA1C STP X29, X30, [X31 + 0x10]
	0x0398AA20 STP X28, X27, [X31 + 0x20]
	0x0398AA24 STP X26, X25, [X31 + 0x30]
	0x0398AA28 STP X24, X23, [X31 + 0x40]
	0x0398AA2C STP X22, X21, [X31 + 0x50]
	0x0398AA30 STP X20, X19, [X31 + 0x60]
	0x0398AA34 STR X2, [X31]
	0x0398AA38 ADRP X23, 0xA57000
	0x0398AA3C ADRP X24, 0x7C6000
	0x0398AA40 ADRP X22, 0x7C6000
	0x0398AA44 ADRP X21, 0x7C6000
	0x0398AA48 ADRP X20, 0x7C6000
	0x0398AA4C LDRB W8, [X23 + 0xA93]
	0x0398AA50 LDR X24, [X24 + 0x748]
	0x0398AA54 LDR X22, [X22 + 0x750]
	0x0398AA58 LDR X21, [X21 + 0x758]
	0x0398AA5C LDR X20, [X20 + 0x760]
	0x0398AA60 MOV X26, X1
	0x0398AA64 MOV X19, X0
	0x0398AA68 TBNZ X8, 0x0, 0x398ABC4
	0x0398AA6C ADRP X0, 0x769000
	0x0398AA70 LDR X0, [X0 + 0xD28]
	0x0398AA74 BL 0x1C16CF4
	0x0398AA78 ADRP X0, 0x76A000
	0x0398AA7C LDR X0, [X0 + 0xE70]
	0x0398AA80 BL 0x1C16CF4
	0x0398AA84 ADRP X0, 0x7C6000
	0x0398AA88 LDR X0, [X0 + 0x768]
	0x0398AA8C BL 0x1C16CF4
	0x0398AA90 ADRP X0, 0x7C6000
	0x0398AA94 LDR X0, [X0 + 0x770]
	0x0398AA98 BL 0x1C16CF4
	0x0398AA9C ADRP X0, 0x7C6000
	0x0398AAA0 LDR X0, [X0 + 0x758]
	0x0398AAA4 BL 0x1C16CF4
	0x0398AAA8 ADRP X0, 0x7C6000
	0x0398AAAC LDR X0, [X0 + 0x778]
	0x0398AAB0 BL 0x1C16CF4
	0x0398AAB4 ADRP X0, 0x7C6000
	0x0398AAB8 LDR X0, [X0 + 0x780]
	0x0398AABC BL 0x1C16CF4
	0x0398AAC0 ADRP X0, 0x7C6000
	0x0398AAC4 LDR X0, [X0 + 0x788]
	0x0398AAC8 BL 0x1C16CF4
	0x0398AACC ADRP X0, 0x772000
	0x0398AAD0 LDR X0, [X0 + 0x940]
	0x0398AAD4 BL 0x1C16CF4
	0x0398AAD8 ADRP X0, 0x7C6000
	0x0398AADC LDR X0, [X0 + 0x790]
	0x0398AAE0 BL 0x1C16CF4
	0x0398AAE4 ADRP X0, 0x7C6000
	0x0398AAE8 LDR X0, [X0 + 0x798]
	0x0398AAEC BL 0x1C16CF4
	0x0398AAF0 ADRP X0, 0x7C6000
	0x0398AAF4 LDR X0, [X0 + 0x750]
	0x0398AAF8 BL 0x1C16CF4
	0x0398AAFC ADRP X0, 0x7C6000
	0x0398AB00 LDR X0, [X0 + 0x748]
	0x0398AB04 BL 0x1C16CF4
	0x0398AB08 ADRP X0, 0x7C6000
	0x0398AB0C LDR X0, [X0 + 0x7A0]
	0x0398AB10 BL 0x1C16CF4
	0x0398AB14 ADRP X0, 0x7C6000
	0x0398AB18 LDR X0, [X0 + 0x7A8]
	0x0398AB1C BL 0x1C16CF4
	0x0398AB20 ADRP X0, 0x7C6000
	0x0398AB24 LDR X0, [X0 + 0x7B0]
	0x0398AB28 BL 0x1C16CF4
	0x0398AB2C ADRP X0, 0x7C6000
	0x0398AB30 LDR X0, [X0 + 0x7B8]
	0x0398AB34 BL 0x1C16CF4
	0x0398AB38 ADRP X0, 0x7C6000
	0x0398AB3C LDR X0, [X0 + 0x7C0]
	0x0398AB40 BL 0x1C16CF4
	0x0398AB44 ADRP X0, 0x7C6000
	0x0398AB48 LDR X0, [X0 + 0x7C8]
	0x0398AB4C BL 0x1C16CF4
	0x0398AB50 ADRP X0, 0x7C6000
	0x0398AB54 LDR X0, [X0 + 0x7D0]
	0x0398AB58 BL 0x1C16CF4
	0x0398AB5C ADRP X0, 0x7C6000
	0x0398AB60 LDR X0, [X0 + 0x7D8]
	0x0398AB64 BL 0x1C16CF4
	0x0398AB68 ADRP X0, 0x7C6000
	0x0398AB6C LDR X0, [X0 + 0x7E0]
	0x0398AB70 BL 0x1C16CF4
	0x0398AB74 ADRP X0, 0x7C6000
	0x0398AB78 LDR X0, [X0 + 0x7E8]
	0x0398AB7C BL 0x1C16CF4
	0x0398AB80 ADRP X0, 0x7C6000
	0x0398AB84 LDR X0, [X0 + 0x7F0]
	0x0398AB88 BL 0x1C16CF4
	0x0398AB8C ADRP X0, 0x7C6000
	0x0398AB90 LDR X0, [X0 + 0x7F8]
	0x0398AB94 BL 0x1C16CF4
	0x0398AB98 ADRP X0, 0x7C6000
	0x0398AB9C LDR X0, [X0 + 0x800]
	0x0398ABA0 BL 0x1C16CF4
	0x0398ABA4 ADRP X0, 0x7C6000
	0x0398ABA8 LDR X0, [X0 + 0x808]
	0x0398ABAC BL 0x1C16CF4
	0x0398ABB0 ADRP X0, 0x7C6000
	0x0398ABB4 LDR X0, [X0 + 0x760]
	0x0398ABB8 BL 0x1C16CF4
	0x0398ABBC MOVZ W8, 0x1
	0x0398ABC0 STRB W8, [X23 + 0xA93]
	0x0398ABC4 LDR X0, [X24]
	0x0398ABC8 BL 0x1C16F10
	0x0398ABCC LDR X1, [X22]
	0x0398ABD0 MOV X22, X0
	0x0398ABD4 BL 0x301B7C4
	0x0398ABD8 LDR X0, [X21]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D8
	003 Move [X31+48], X30
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, 0xA58000
	008 Move X20, 0x7C7000
	009 Move W8, [X19+2691]
	010 Move X20, [X20+1280]
	011 Move V8, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x7C7000
	017 Move X0, [X0+1768]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C7000
	020 Move X0, [X0+1776]
	021 Call 0x1C17CF4
	022 Move X0, 0x7C7000
	023 Move X0, [X0+1784]
	024 Call 0x1C17CF4
	025 Move X0, 0x7C7000
	026 Move X0, [X0+1792]
	027 Call 0x1C17CF4
	028 Move X0, 0x7C7000
	029 Move X0, [X0+1744]
	030 Call 0x1C17CF4
	031 Move X0, 0x792000
	032 Move X0, [X0+192]
	033 Call 0x1C17CF4
	034 Move X0, 0x7C7000
	035 Move X0, [X0+1280]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+2691], W8
	039 Move X0, [X20]
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Move X19, 0x792000
	044 Move W8, [X0+224]
	045 Move X19, [X19+192]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X20]
	050 Move X8, [X19]
	051 Move X9, [X0+184]
	052 Move X21, 0x7C7000
	053 Move W10, [X8+224]
	054 Move X19, [X9+16]
	055 Move X21, [X21+1744]
	056 Compare W10, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X1, [X21]
	061 Move X0, X19
	062 Call 0x229939C, X0
	063 Move X8, [X20]
	064 Move X8, [X8+184]
	065 Move X0, [X8+16]
	066 Compare X0, 0
	067 JumpIfEqual {101}
	068 Move X8, 0x7C7000
	069 Move X8, [X8+1792]
	070 Move X20, 0x7C7000
	071 Move X19, 0x7C7000
	072 Move X1, [X8]
	073 Move X20, [X20+1776]
	074 Move X19, [X19+1768]
	075 Add X8, X31, 8
	076 Call List`1<Object>.GetEnumerator, X0
	077 Move X1, [X20]
	078 Add X0, X31, 8
	079 Call Enumerator<Object>.MoveNext, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {90}
	084 Move X0, [X31+24]
	085 Compare X0, 0
	086 JumpIfEqual {100}
	087 Move V0, V8
	088 Move X1, X31
	089 Call XRDisplaySubsystem.set_scaleOfAllRenderTargets, X0, V0
	090 Move X1, [X19]
	091 Add X0, X31, 8
	092 Call Enumerator<Object>.Dispose, X0
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X30, [X31+48]
	096 Move X21, [X31+56]
	097 Move V8, [X31+32]
	098 Add X31, X31, 80
	099 Return 
	100 Call 0x1C17F20
	101 Call 0x1C17F20
	102 Move X19, X0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X19
	105 Call 0x3EB2AD0
	106 Move X20, [X0]
	107 Call 0x3EB2AE0
	108 Move X8, 0x7C7000
	109 Move X8, [X8+1768]
	110 Add X0, X31, 8
	111 Move X1, [X8]
	112 Call Enumerator<Object>.Dispose, X0
	113 Compare X20, 0
	114 JumpIfEqual {93}
	115 Move X0, X20
	116 Call 0x1C17F18
	117 Move X20, X31
	118 Move X19, X0
	119 Move X8, 0x7C7000
	120 Move X8, [X8+1768]
	121 Move X1, [X8]
	122 Add X0, X31, 8
	123 Call Enumerator<Object>.Dispose, X0
	124 Compare X20, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X19
	127 Call 0x1D2D690
	128 Move X0, X20
	129 Call 0x1C17F18
	130 Call 0x1991590

Method: UnityEngine.Experimental.Rendering.XRLayout NewLayout()

Disassembly:
	0x0398ABDC BL 0x1C16F10
	0x0398ABE0 MOV X1, X31
	0x0398ABE4 MOV X23, X0
	0x0398ABE8 BL 0x39ADAE0
	0x0398ABEC LDR X1, [X20]
	0x0398ABF0 MOV X0, X26
	0x0398ABF4 MOV X2, X31
	0x0398ABF8 BL 0x321B938
	0x0398ABFC CBZ X23, 0x398B0D0
	0x0398AC00 ADRP X29, 0x7C6000
	0x0398AC04 LDR X29, [X29 + 0x768]
	0x0398AC08 STR X0, [X23 + 0x28]
	0x0398AC0C ADRP X27, 0x7C6000
	0x0398AC10 LDR X24, [X23 + 0x48]
	0x0398AC14 LDR X0, [X29]
	0x0398AC18 LDR X27, [X27 + 0x800]
	0x0398AC1C BL 0x1C16F10
	0x0398AC20 MOV X1, X31
	0x0398AC24 MOV X25, X0
	0x0398AC28 BL 0x39A2C94
	0x0398AC2C LDR X0, [X27]
	0x0398AC30 LDR W8, [X0 + 0xE0]
	0x0398AC34 CBNZ W8, 0x398AC40
	0x0398AC38 BL 0x1C16DFC
	0x0398AC3C LDR X0, [X27]
	0x0398AC40 STR X26, [X31 + 0x8]
	0x0398AC44 CBZ X25, 0x398B0D0
	0x0398AC48 LDR X8, [X0 + 0xB8]
	0x0398AC4C ADRP X21, 0x772000
	0x0398AC50 LDR X21, [X21 + 0x940]
	0x0398AC54 ADRP X26, 0x7C6000
	0x0398AC58 LDP X1, X2, [X8]
	0x0398AC5C ADRP X20, 0x769000
	0x0398AC60 ADRP X28, 0x7C6000
	0x0398AC64 LDR X26, [X26 + 0x7B0]
	0x0398AC68 LDR X20, [X20 + 0xD28]
	0x0398AC6C LDR X28, [X28 + 0x7B8]
	0x0398AC70 MOV X0, X25
	0x0398AC74 MOV X3, X31
	0x0398AC78 BL 0x39AE800
	0x0398AC7C LDR X0, [X21]
	0x0398AC80 BL 0x1C16F10
	0x0398AC84 LDR X2, [X26]
	0x0398AC88 MOV X1, X19
	0x0398AC8C MOV X3, X31
	0x0398AC90 MOV X26, X0
	0x0398AC94 BL 0x2D27194
	0x0398AC98 STR X26, [X25 + 0x48]
	0x0398AC9C LDR X0, [X20]
	0x0398ACA0 BL 0x1C16F10
	0x0398ACA4 LDR X2, [X28]
	0x0398ACA8 MOV X1, X19
	0x0398ACAC MOV X3, X31
	0x0398ACB0 MOV X26, X0
	0x0398ACB4 BL 0x29818C8
	0x0398ACB8 STR X26, [X25 + 0x50]
	0x0398ACBC CBZ X24, 0x398B0D0
	0x0398ACC0 ADRP X28, 0x7C6000
	0x0398ACC4 LDR X28, [X28 + 0x7A0]
	0x0398ACC8 MOV X0, X24
	0x0398ACCC MOV X1, X25
	0x0398ACD0 LDR X2, [X28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA58000
	005 Move X19, 0x7C7000
	006 Move W8, [X20+2692]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x76A000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x7C7000
	016 Move X0, [X0+1328]
	017 Call 0x1C17CF4
	018 Move X0, 0x7C7000
	019 Move X0, [X0+1280]
	020 Call 0x1C17CF4
	021 Move X0, 0x7C7000
	022 Move X0, [X0+1800]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+2692], W8
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call XRSystem.RefreshDeviceInfo
	032 Move X0, [X19]
	033 Move X8, [X0+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfEqual {72}
	037 Move X8, [X8+16]
	038 Compare X8, 0
	039 JumpIfEqual {72}
	040 Move W8, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0x76A000
	043 Move X8, [X8+2600]
	044 Move X20, 0x7C7000
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Move X20, [X20+1800]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X1, X31
	053 Call Debug.LogWarning, X0
	054 Move X0, [X19]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Call XRSystem.EndLayout
	060 Move X0, [X19]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X19]
	066 Move X8, [X0+184]
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X0, [X8]
	070 Move X30, [X31+32]
	071 Return X0
	072 Call 0x1C17F20

Method: System.Void EndLayout()

Disassembly:
	0x0398ACD4 BL 0x2497EC8
	0x0398ACD8 LDR X0, [X29]
	0x0398ACDC LDR X24, [X23 + 0x48]
	0x0398ACE0 BL 0x1C16F10
	0x0398ACE4 MOV X1, X31
	0x0398ACE8 MOV X25, X0
	0x0398ACEC BL 0x39A2C94
	0x0398ACF0 CBZ X25, 0x398B0D0
	0x0398ACF4 LDR X8, [X27]
	0x0398ACF8 ADRP X26, 0x7C6000
	0x0398ACFC ADRP X27, 0x7C6000
	0x0398AD00 MOV X0, X25
	0x0398AD04 LDR X8, [X8 + 0xB8]
	0x0398AD08 MOV X3, X31
	0x0398AD0C LDP X1, X2, [X8 + 0x10]
	0x0398AD10 LDR X26, [X26 + 0x7C0]
	0x0398AD14 LDR X27, [X27 + 0x7C8]
	0x0398AD18 BL 0x39AE800
	0x0398AD1C LDR X0, [X21]
	0x0398AD20 BL 0x1C16F10
	0x0398AD24 LDR X2, [X26]
	0x0398AD28 MOV X1, X19
	0x0398AD2C MOV X3, X31
	0x0398AD30 MOV X26, X0
	0x0398AD34 BL 0x2D27194
	0x0398AD38 STR X26, [X25 + 0x48]
	0x0398AD3C LDR X0, [X20]
	0x0398AD40 BL 0x1C16F10
	0x0398AD44 LDR X2, [X27]
	0x0398AD48 MOV X1, X19
	0x0398AD4C MOV X3, X31
	0x0398AD50 MOV X26, X0
	0x0398AD54 BL 0x29818C8
	0x0398AD58 STR X26, [X25 + 0x50]
	0x0398AD5C CBZ X24, 0x398B0D0
	0x0398AD60 LDR X2, [X28]
	0x0398AD64 MOV X0, X24
	0x0398AD68 MOV X1, X25
	0x0398AD6C BL 0x2497EC8
	0x0398AD70 LDR X0, [X29]
	0x0398AD74 LDR X24, [X23 + 0x48]
	0x0398AD78 BL 0x1C16F10
	0x0398AD7C MOV X1, X31
	0x0398AD80 MOV X25, X0
	0x0398AD84 BL 0x39A2C94
	0x0398AD88 CBZ X25, 0x398B0D0
	0x0398AD8C ADRP X8, 0x7C6000
	0x0398AD90 LDR X8, [X8 + 0x800]
	0x0398AD94 ADRP X26, 0x7C6000
	0x0398AD98 ADRP X27, 0x7C6000
	0x0398AD9C MOV X0, X25
	0x0398ADA0 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA58000
	005 Move X19, 0x7C7000
	006 Move W8, [X20+2693]
	007 Move X19, [X19+1280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7C7000
	013 Move X0, [X0+1280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2693], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA58000
	023 Move W8, [X20+2879]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x7C7000
	027 Move X0, [X0+1280]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2879], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move W8, [X8+80]
	039 Compare W8, 0
	040 JumpIfEqual {52}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X0, [X8]
	048 Compare X0, 0
	049 JumpIfEqual {66}
	050 Call XRLayout.LogDebugInfo, X0
	051 Move X0, [X19]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X19]
	057 Move X8, [X0+184]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {66}
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Call XRLayout.Clear, X0
	065 Return 
	066 Call 0x1C17F20

Method: System.Void RenderMirrorView(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Camera camera)

Disassembly:
	0x0398ADA4 MOV X3, X31
	0x0398ADA8 LDR X8, [X8 + 0xB8]
	0x0398ADAC LDP X1, X2, [X8 + 0x20]
	0x0398ADB0 LDR X26, [X26 + 0x7D0]
	0x0398ADB4 LDR X27, [X27 + 0x7D8]
	0x0398ADB8 BL 0x39AE800
	0x0398ADBC LDR X0, [X21]
	0x0398ADC0 BL 0x1C16F10
	0x0398ADC4 LDR X2, [X26]
	0x0398ADC8 MOV X1, X19
	0x0398ADCC MOV X3, X31
	0x0398ADD0 MOV X26, X0
	0x0398ADD4 BL 0x2D27194
	0x0398ADD8 STR X26, [X25 + 0x48]
	0x0398ADDC LDR X0, [X20]
	0x0398ADE0 BL 0x1C16F10
	0x0398ADE4 LDR X2, [X27]
	0x0398ADE8 MOV X1, X19
	0x0398ADEC MOV X3, X31
	0x0398ADF0 MOV X26, X0
	0x0398ADF4 BL 0x29818C8
	0x0398ADF8 STR X26, [X25 + 0x50]
	0x0398ADFC CBZ X24, 0x398B0D0
	0x0398AE00 LDR X2, [X28]
	0x0398AE04 MOV X0, X24
	0x0398AE08 MOV X1, X25
	0x0398AE0C BL 0x2497EC8
	0x0398AE10 LDR X0, [X29]
	0x0398AE14 LDR X24, [X23 + 0x48]
	0x0398AE18 BL 0x1C16F10
	0x0398AE1C MOV X1, X31
	0x0398AE20 MOV X25, X0
	0x0398AE24 BL 0x39A2C94
	0x0398AE28 CBZ X25, 0x398B0D0
	0x0398AE2C ADRP X8, 0x7C6000
	0x0398AE30 LDR X8, [X8 + 0x800]
	0x0398AE34 ADRP X26, 0x7C6000
	0x0398AE38 ADRP X27, 0x7C6000
	0x0398AE3C MOV X0, X25
	0x0398AE40 LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA58000
	007 Move X21, 0x7C7000
	008 Move W8, [X22+2694]
	009 Move X21, [X21+1280]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x7C7000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move X0, 0x7C7000
	020 Move X0, [X0+1280]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2694], W8
	024 Move X0, [X21]
	025 Move X22, 0x7C7000
	026 Move W8, [X0+224]
	027 Move X22, [X22+1408]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X0+184]
	033 Move X0, [X22]
	034 Move X21, [X8+48]
	035 Move W9, [X0+224]
	036 Move X22, [X8+24]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X19
	042 Move X2, X21
	043 Move X3, X22
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call XRMirrorView.RenderMirrorView, X0, X1, X2, X3
	050 Return 

Method: System.Void Dispose()

Disassembly:
	0x0398AE44 MOV X3, X31
	0x0398AE48 LDR X8, [X8 + 0xB8]
	0x0398AE4C LDP X1, X2, [X8 + 0x30]
	0x0398AE50 LDR X26, [X26 + 0x7E0]
	0x0398AE54 LDR X27, [X27 + 0x7E8]
	0x0398AE58 BL 0x39AE800
	0x0398AE5C LDR X0, [X21]
	0x0398AE60 BL 0x1C16F10
	0x0398AE64 LDR X2, [X26]
	0x0398AE68 MOV X1, X19
	0x0398AE6C MOV X3, X31
	0x0398AE70 MOV X26, X0
	0x0398AE74 BL 0x2D27194
	0x0398AE78 STR X26, [X25 + 0x48]
	0x0398AE7C LDR X0, [X20]
	0x0398AE80 BL 0x1C16F10
	0x0398AE84 LDR X2, [X27]
	0x0398AE88 MOV X1, X19
	0x0398AE8C MOV X3, X31
	0x0398AE90 MOV X26, X0
	0x0398AE94 BL 0x29818C8
	0x0398AE98 STR X26, [X25 + 0x50]
	0x0398AE9C CBZ X24, 0x398B0D0
	0x0398AEA0 LDR X2, [X28]
	0x0398AEA4 ADRP X21, 0x7C6000
	0x0398AEA8 LDR X21, [X21 + 0x770]
	0x0398AEAC MOV X0, X24
	0x0398AEB0 MOV X1, X25
	0x0398AEB4 BL 0x2497EC8
	0x0398AEB8 LDR X0, [X21]
	0x0398AEBC LDR X24, [X23 + 0x48]
	0x0398AEC0 BL 0x1C16F10
	0x0398AEC4 MOV X1, X31
	0x0398AEC8 MOV X25, X0
	0x0398AECC BL 0x39AE818
	0x0398AED0 CBZ X25, 0x398B0D0
	0x0398AED4 ADRP X27, 0x7C6000
	0x0398AED8 LDR X27, [X27 + 0x800]
	0x0398AEDC ADRP X20, 0x76A000
	0x0398AEE0 ADRP X26, 0x7C6000
	0x0398AEE4 MOV X0, X25
	0x0398AEE8 LDR X8, [X27]
	0x0398AEEC MOV X3, X31
	0x0398AEF0 LDR X8, [X8 + 0xB8]
	0x0398AEF4 LDP X1, X2, [X8 + 0x40]
	0x0398AEF8 LDR X20, [X20 + 0xE70]
	0x0398AEFC LDR X26, [X26 + 0x7F0]
	0x0398AF00 BL 0x39AE800
	0x0398AF04 LDR X0, [X20]
	0x0398AF08 BL 0x1C16F10
	0x0398AF0C LDR X2, [X26]
	0x0398AF10 MOV X1, X19
	0x0398AF14 MOV X3, X31
	0x0398AF18 MOV X26, X0
	0x0398AF1C BL 0x3314368
	0x0398AF20 STR X26, [X25 + 0x48]
	0x0398AF24 CBZ X24, 0x398B0D0
	0x0398AF28 LDR X2, [X28]
	0x0398AF2C MOV X0, X24
	0x0398AF30 MOV X1, X25
	0x0398AF34 BL 0x2497EC8
	0x0398AF38 LDR X0, [X21]
	0x0398AF3C LDR X24, [X23 + 0x48]
	0x0398AF40 BL 0x1C16F10
	0x0398AF44 MOV X1, X31
	0x0398AF48 MOV X25, X0
	0x0398AF4C BL 0x39AE818
	0x0398AF50 CBZ X25, 0x398B0D0
	0x0398AF54 LDR X8, [X27]
	0x0398AF58 ADRP X21, 0x7C6000
	0x0398AF5C MOV X0, X25
	0x0398AF60 MOV X3, X31
	0x0398AF64 LDR X8, [X8 + 0xB8]
	0x0398AF68 LDP X1, X2, [X8 + 0x50]
	0x0398AF6C LDR X21, [X21 + 0x7F8]
	0x0398AF70 BL 0x39AE800
	0x0398AF74 LDR X0, [X20]
	0x0398AF78 BL 0x1C16F10
	0x0398AF7C LDR X2, [X21]
	0x0398AF80 MOV X1, X19
	0x0398AF84 MOV X3, X31
	0x0398AF88 MOV X26, X0
	0x0398AF8C BL 0x3314368
	0x0398AF90 STR X26, [X25 + 0x48]
	0x0398AF94 CBZ X24, 0x398B0D0
	0x0398AF98 LDR X2, [X28]
	0x0398AF9C MOV X0, X24
	0x0398AFA0 MOV X1, X25
	0x0398AFA4 BL 0x2497EC8
	0x0398AFA8 CBZ X22, 0x398B0D0
	0x0398AFAC ADRP X9, 0x7C6000
	0x0398AFB0 LDR X9, [X9 + 0x790]
	0x0398AFB4 LDR W10, [X22 + 0x1C]
	0x0398AFB8 LDR X8, [X22 + 0x10]
	0x0398AFBC LDR X21, [X31 + 0x8]
	0x0398AFC0 LDR X9, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA58000
	007 Move X20, 0x7C7000
	008 Move W8, [X19+2695]
	009 Move X20, [X20+1280]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x792000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x76A000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x7C7000
	021 Move X0, [X0+1280]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+2695], W8
	025 Move X0, [X20]
	026 Move X22, 0x76A000
	027 Move W8, [X0+224]
	028 Move X22, [X22+1432]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X22]
	034 Move X9, [X0+184]
	035 Move W10, [X8+224]
	036 Move X19, [X9+40]
	037 Compare W10, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X21, 0x792000
	042 Move X21, [X21+2296]
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move X8, [X20]
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X8, [X20]
	058 Move X0, [X21]
	059 Move X8, [X8+184]
	060 Move W9, [X0+224]
	061 Move X19, [X8+40]
	062 Compare W9, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X19
	066 Move X1, X31
	067 Call CoreUtils.Destroy, X0
	068 Move X8, [X20]
	069 Move X9, [X8+184]
	070 Move [X9+40], X31
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X20]
	077 Move X0, [X22]
	078 Move X8, [X8+184]
	079 Move W9, [X0+224]
	080 Move X19, [X8+48]
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X19
	085 Move X1, X31
	086 Move X2, X31
	087 Call Object.op_Inequality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {112}
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X20]
	098 Move X8, [X21]
	099 Move X9, [X0+184]
	100 Move W10, [X8+224]
	101 Move X19, [X9+48]
	102 Compare W10, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X1, X31
	108 Call CoreUtils.Destroy, X0
	109 Move X8, [X20]
	110 Move X8, [X8+184]
	111 Move [X8+48], X31
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X30, [X31+48]
	117 Return 

Method: System.Void SetDisplayZRange(System.Single zNear, System.Single zFar)

Disassembly:
	0x03986320 ADD X31, X31, 0xD0
	0x03986324 RET
	0x03986328 BL 0x1C16F20
	0x0398632C STR X30, [X31 - 0x20]!
	0x03986330 STP X20, X19, [X31 + 0x10]
	0x03986334 ADRP X20, 0xA5B000
	0x03986338 LDRB W8, [X20 + 0xA67]
	0x0398633C MOV X19, X0
	0x03986340 TBNZ X8, 0x0, 0x3986358
	0x03986344 ADRP X0, 0x7CA000
	0x03986348 LDR X0, [X0 + 0x550]
	0x0398634C BL 0x1C16CF4
	0x03986350 MOVZ W8, 0x1
	0x03986354 STRB W8, [X20 + 0xA67]
	0x03986358 LDR X8, [X19 + 0x10]
	0x0398635C CBZ X8, 0x3986370
	0x03986360 LDR W0, [X8 + 0x18]
	0x03986364 LDP X20, X19, [X31 + 0x10]
	0x03986368 LDR X30, [X31], #0x20
	0x0398636C RET
	0x03986370 BL 0x1C16F20
	0x03986374 STR X30, [X31 - 0x30]!
	0x03986378 STP X22, X21, [X31 + 0x10]
	0x0398637C STP X20, X19, [X31 + 0x20]
	0x03986380 ADRP X21, 0xA5B000
	0x03986384 ADRP X22, 0x7CA000
	0x03986388 ADRP X20, 0x7CA000
	0x0398638C LDRB W8, [X21 + 0xA59]
	0x03986390 LDR X22, [X22 + 0x558]
	0x03986394 LDR X20, [X20 + 0x560]
	0x03986398 MOV X19, X0
	0x0398639C TBNZ X8, 0x0, 0x39863C0
	0x039863A0 ADRP X0, 0x7CA000
	0x039863A4 LDR X0, [X0 + 0x560]
	0x039863A8 BL 0x1C16CF4
	0x039863AC ADRP X0, 0x7CA000
	0x039863B0 LDR X0, [X0 + 0x558]
	0x039863B4 BL 0x1C16CF4
	0x039863B8 MOVZ W8, 0x1
	0x039863BC STRB W8, [X21 + 0xA59]
	0x039863C0 LDR X0, [X22]
	0x039863C4 BL 0x1C16F10
	0x039863C8 LDR X1, [X20]
	0x039863CC MOV X20, X0
	0x039863D0 BL 0x2F49774
	0x039863D4 STR X20, [X19 + 0x10]
	0x039863D8 MOV X0, X19
	0x039863DC LDP X20, X19, [X31 + 0x20]
	0x039863E0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA5C000
	007 Move X19, 0x7CB000
	008 Move W8, [X20+2696]
	009 Move X19, [X19+1280]
	010 Move V8, V1
	011 Move V9, V0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7CB000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2696], W8
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X8, [X8+24]
	029 Compare X8, 0
	030 JumpIfEqual {58}
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {40}
	034 Call 0x1C17DFC
	035 Move X8, [X19]
	036 Move X8, [X8+184]
	037 Move X8, [X8+24]
	038 Compare X8, 0
	039 JumpIfEqual {64}
	040 Move X0, X8
	041 Move V0, V9
	042 Move X1, X31
	043 Call XRDisplaySubsystem.set_zNear, X0, V0
	044 Move X8, [X19]
	045 Move X8, [X8+184]
	046 Move X0, [X8+24]
	047 Compare X0, 0
	048 JumpIfEqual {64}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move V0, V8
	053 Move X1, X31
	054 Move D9, [X31+48]
	055 Move D8, [X31+56]
	056 Call XRDisplaySubsystem.set_zFar, X0, V0
	057 Return 
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move D9, [X31+48]
	062 Move D8, [X31+56]
	063 Return 
	064 Call 0x1C17F20

Method: System.Void SetLayoutOverride(System.Action`2<UnityEngine.Experimental.Rendering.XRLayout, UnityEngine.Camera> action)

Disassembly:
	0x0398AFC4 ADD W10, W10, 0x1
	0x0398AFC8 STR W10, [X22 + 0x1C]
	0x0398AFCC CBZ X8, 0x398B0D0
	0x0398AFD0 LDRSW X10, [X22 + 0x18]
	0x0398AFD4 LDR W11, [X8 + 0x18]
	0x0398AFD8 ADRP X20, 0x7C6000
	0x0398AFDC LDR X20, [X20 + 0x798]
	0x0398AFE0 CMP W10, W11
	0x0398AFE4 B.CS 0x398AFFC
	0x0398AFE8 ADD W9, W10, 0x1
	0x0398AFEC ADD X8, X8, X10, 0x3, LSL
	0x0398AFF0 STR W9, [X22 + 0x18]
	0x0398AFF4 STR X23, [X8 + 0x20]
	0x0398AFF8 B 0x398B014
	0x0398AFFC LDR X8, [X9 + 0x20]
	0x0398B000 MOV X0, X22
	0x0398B004 MOV X1, X23
	0x0398B008 LDR X8, [X8 + 0xC0]
	0x0398B00C LDR X2, [X8 + 0x70]
	0x0398B010 BL 0x301BF90
	0x0398B014 LDR X1, [X20]
	0x0398B018 MOV X0, X22
	0x0398B01C BL 0x301DDC4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA58000
	006 Move X20, 0x7C7000
	007 Move W8, [X21+2697]
	008 Move X20, [X20+1280]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7C7000
	015 Move X0, [X0+1280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2697], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+56], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void XRSystemInit()

Disassembly:
	0x0398B020 LDR X20, [X31]
	0x0398B024 STR X0, [X19 + 0x10]
	0x0398B028 CBZ X20, 0x398B034
	0x0398B02C MOV X0, X20
	0x0398B030 B 0x398B090
	0x0398B034 ADRP X8, 0x7C5000
	0x0398B038 LDR X8, [X8 + 0x778]
	0x0398B03C LDR X0, [X8]
	0x0398B040 LDR W8, [X0 + 0xE0]
	0x0398B044 CBNZ W8, 0x398B04C
	0x0398B048 BL 0x1C16DFC
	0x0398B04C MOV X0, X31
	0x0398B050 BL 0x399C120
	0x0398B054 CBZ X21, 0x398B0D0
	0x0398B058 CBZ X0, 0x398B0D0
	0x0398B05C ADRP X9, 0x7C5000
	0x0398B060 LDR W8, [X21 + 0x10]
	0x0398B064 LDR X9, [X9 + 0x808]
	0x0398B068 MOVZ W2, 0x1
	0x0398B06C MOV W3, W31
	0x0398B070 CMP W8, 0x0
	0x0398B074 LDR X9, [X9]
	0x0398B078 MOV W4, W31
	0x0398B07C MOV X5, X31
	0x0398B080 CSEL X1, X9, X21, EQ
	0x0398B084 BL 0x399C198
	0x0398B088 CBZ X19, 0x398B0D0
	0x0398B08C CBNZ X20, 0x398B0D0
	0x0398B090 STR X0, [X19 + 0x18]
	0x0398B094 CBZ X0, 0x398B0D0
	0x0398B098 LDR X0, [X0 + 0x28]
	0x0398B09C CBZ X0, 0x398B0D0
	0x0398B0A0 ADRP X8, 0x7C5000
	0x0398B0A4 LDR X8, [X8 + 0x7A8]
	0x0398B0A8 LDR X1, [X19 + 0x10]
	0x0398B0AC LDP X20, X19, [X31 + 0x60]
	0x0398B0B0 LDP X22, X21, [X31 + 0x50]
	0x0398B0B4 LDR X2, [X8]
	0x0398B0B8 LDP X24, X23, [X31 + 0x40]
	0x0398B0BC LDP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA57000
	005 Move X19, 0x769000
	006 Move W8, [X20+2698]
	007 Move X19, [X19+1432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x769000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x7C6000
	016 Move X0, [X0+1280]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2698], W8
	020 Move X0, X31
	021 Call GraphicsSettings.get_currentRenderPipeline
	022 Move X8, [X19]
	023 Move X19, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {49}
	037 Move X8, 0x7C6000
	038 Move X8, [X8+1280]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Call XRSystem.RefreshDeviceInfo
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 

Method: System.Void RefreshDeviceInfo()

Disassembly:
	0x0398A4DC STRB W8, [X23 + 0xA8F]
	0x0398A4E0 LDR X0, [X22]
	0x0398A4E4 LDR V1, [X20 + 0x8]
	0x0398A4E8 LDR V8, [X21 + 0x38]
	0x0398A4EC LDR W8, [X0 + 0xE0]
	0x0398A4F0 CBNZ W8, 0x398A504
	0x0398A4F4 STR V1, [X31]
	0x0398A4F8 BL 0x1C16DFC
	0x0398A4FC LDR V1, [X31]
	0x0398A500 LDR X0, [X22]
	0x0398A504 LDR X8, [X0 + 0xB8]
	0x0398A508 LDRB W8, [X8 + 0x1]
	0x0398A50C CBZ W8, 0x398A518
	0x0398A510 MOV X21, X31
	0x0398A514 B 0x398A51C
	0x0398A518 LDR X21, [X20 + 0x90]
	0x0398A51C UNIMPLEMENTED
	0x0398A520 MOV V0.D[1], V0.D[0]
	0x00000000 INVALID
	0x0398A528 ADD X0, X31, 0x50
	0x0398A52C MOVZ W2, 0xE0
	0x0398A530 MOV X1, X20
	0x0398A534 STR V0, [X31]
	0x0398A538 BL 0x3EB1AC0
	0x0398A53C LDP V6, V0, [X31 + 0xB0]
	0x0398A540 LDP V2, V4, [X31 + 0x90]
	0x0398A544 MOVI V1.2D, 0x0
	0x0398A548 LDP V3, V5, [X31 + 0x90]
	0x0398A54C STP V6, V0, [X31 + 0x30]
	0x0398A550 STP V2, V4, [X31 + 0x10]
	0x0398A554 LDP V7, V2, [X31 + 0xB0]
	0x0398A558 LDR W8, [X20 + 0x98]
	0x0398A55C STP V1, V1, [X19 + 0x80]
	0x0398A560 STP V1, V1, [X19 + 0x60]
	0x0398A564 STP V1, V1, [X19 + 0x40]
	0x0398A568 LDP V1, V0, [X31 + 0x30]
	0x0398A56C STR X31, [X19 + 0xA0]
	0x0398A570 STP V7, V2, [X19 + 0x20]
	0x0398A574 STP V3, V5, [X19]
	0x0398A578 LDP V2, V3, [X20]
	0x0398A57C LDP V4, V5, [X20 + 0x20]
	0x0398A580 LDR V6, [X31]
	0x0398A584 STP V1, V0, [X31 + 0x150]
	0x0398A588 LDP V1, V0, [X31 + 0x10]
	0x0398A58C ADD X0, X31, 0x130
	0x0398A590 STP V5, V6, [X19 + 0x70]
	0x0398A594 STR X21, [X19 + 0x90]
	0x0398A598 STR W8, [X19 + 0x98]
	0x0398A59C STP V3, V4, [X19 + 0x50]
	0x0398A5A0 STR V2, [X19 + 0x4]
	0x0398A5A4 STP V1, V0, [X31 + 0x130]
	0x0398A5A8 BL 0x398A744
	0x0398A5AC STP S0, S1, [X19 + 0x9C]
	0x0398A5B0 LDP X20, X19, [X31 + 0x1A0]
	0x0398A5B4 LDP X22, X21, [X31 + 0x190]
	0x0398A5B8 LDP X30, X23, [X31 + 0x180]
	0x0398A5BC LDR X29, [X31 + 0x178]
	0x0398A5C0 LDR V8, [X31 + 0x170]
	0x0398A5C4 ADD X31, X31, 0x1B0
	0x0398A5C8 RET
	0x0398A5CC SUB X31, X31, 0x50
	0x0398A5D0 STP X30, X19, [X31 + 0x40]
	0x0398A5D4 LDP V5, V4, [X1 + 0x20]
	0x0398A5D8 LDP V7, V6, [X1]
	0x0398A5DC MOV X19, X0
	0x0398A5E0 STP V5, V4, [X0 + 0x20]
	0x0398A5E4 STP V7, V6, [X0]
	0x0398A5E8 LDP V4, V5, [X2]
	0x0398A5EC LDP V6, V7, [X2 + 0x20]
	0x0398A5F0 STP S0, S1, [X0 + 0x80]
	0x0398A5F4 STP S2, S3, [X0 + 0x88]
	0x0398A5F8 STR X3, [X0 + 0x90]
	0x0398A5FC STR W4, [X0 + 0x98]
	0x0398A600 STP V6, V7, [X0 + 0x60]
	0x0398A604 STP V4, V5, [X0 + 0x40]
	0x0398A608 LDP V1, V0, [X1 + 0x20]
	0x0398A60C LDP V3, V2, [X1]
	0x0398A610 ADD X0, X31, 0x0
	0x0398A614 STP V1, V0, [X31 + 0x20]
	0x0398A618 STP V3, V2, [X31]
	0x0398A61C BL 0x398A744
	0x0398A620 STP S0, S1, [X19 + 0x9C]
	0x0398A624 LDP X30, X19, [X31 + 0x40]
	0x0398A628 ADD X31, X31, 0x50
	0x0398A62C RET
	0x0398A630 STR X30, [X31 - 0x40]!
	0x0398A634 STP X24, X23, [X31 + 0x10]
	0x0398A638 STP X22, X21, [X31 + 0x20]
	0x0398A63C STP X20, X19, [X31 + 0x30]
	0x0398A640 ADRP X19, 0xA57000
	0x0398A644 ADRP X24, 0x7C6000
	0x0398A648 ADRP X20, 0x7C6000
	0x0398A64C ADRP X23, 0x7C6000
	0x0398A650 ADRP X22, 0x7C6000
	0x0398A654 ADRP X21, 0x7C6000
	0x0398A658 LDRB W8, [X19 + 0xA91]
	0x0398A65C LDR X24, [X24 + 0x710]
	0x0398A660 LDR X20, [X20 + 0x500]
	0x0398A664 LDR X23, [X23 + 0x718]
	0x0398A668 LDR X22, [X22 + 0x720]
	0x0398A66C LDR X21, [X21 + 0x728]
	0x0398A670 TBNZ X8, 0x0, 0x398A6B8
	0x0398A674 ADRP X0, 0x7C6000
	0x0398A678 LDR X0, [X0 + 0x720]
	0x0398A67C BL 0x1C16CF4
	0x0398A680 ADRP X0, 0x7C6000
	0x0398A684 LDR X0, [X0 + 0x718]
	0x0398A688 BL 0x1C16CF4
	0x0398A68C ADRP X0, 0x7C6000
	0x0398A690 LDR X0, [X0 + 0x710]
	0x0398A694 BL 0x1C16CF4
	0x0398A698 ADRP X0, 0x7C6000
	0x0398A69C LDR X0, [X0 + 0x728]
	0x0398A6A0 BL 0x1C16CF4
	0x0398A6A4 ADRP X0, 0x7C6000
	0x0398A6A8 LDR X0, [X0 + 0x500]
	0x0398A6AC BL 0x1C16CF4
	0x0398A6B0 MOVZ W8, 0x1
	0x0398A6B4 STRB W8, [X19 + 0xA91]
	0x0398A6B8 LDR X0, [X24]
	0x0398A6BC BL 0x1C16F10
	0x0398A6C0 MOV X19, X0
	0x0398A6C4 BL 0x3986374
	0x0398A6C8 LDR X8, [X20]
	0x0398A6CC LDR X8, [X8 + 0xB8]
	0x0398A6D0 STR X19, [X8]
	0x0398A6D4 LDR X8, [X20]
	0x0398A6D8 LDR X8, [X8 + 0xB8]
	0x0398A6DC STR X31, [X8 + 0x8]
	0x0398A6E0 LDR X0, [X23]
	0x0398A6E4 BL 0x1C16F10
	0x0398A6E8 LDR X1, [X22]
	0x0398A6EC MOV X19, X0
	0x0398A6F0 BL 0x301B7C4
	0x0398A6F4 LDR X8, [X20]
	0x0398A6F8 MOVZ W22, 0x1
	0x0398A6FC LDR X8, [X8 + 0xB8]
	0x0398A700 STR X19, [X8 + 0x10]
	0x0398A704 STR W22, [X8 + 0x20]
	0x0398A708 STR X31, [X8 + 0x38]
	0x0398A70C LDR X0, [X21]
	0x0398A710 BL 0x1C16F10
	0x0398A714 MOV X19, X0
	0x0398A718 BL 0x3988098
	0x0398A71C LDR X8, [X20]
	0x0398A720 LDP X24, X23, [X31 + 0x10]
	0x0398A724 LDR X8, [X8 + 0xB8]
	0x0398A728 STR X19, [X8 + 0x40]
	0x0398A72C STRB W22, [X8 + 0x48]
	0x0398A730 LDP X20, X19, [X31 + 0x30]
	0x0398A734 LDP X22, X21, [X31 + 0x20]
	0x0398A738 STRB W31, [X8 + 0x50]
	0x0398A73C LDR X30, [X31], #0x40
	0x0398A740 RET
	0x0398A744 SUB X31, X31, 0x60
	0x0398A748 STP D11, D10, [X31 + 0x20]
	0x0398A74C STP D9, D8, [X31 + 0x30]
	0x0398A750 STP X30, X21, [X31 + 0x40]
	0x0398A754 STP X20, X19, [X31 + 0x50]
	0x0398A758 ADRP X21, 0xA57000
	0x0398A75C ADRP X20, 0x769000
	0x0398A760 LDRB W8, [X21 + 0xA92]
	0x0398A764 LDR X20, [X20 + 0x5A8]
	0x0398A768 MOV X19, X0
	0x0398A76C TBNZ X8, 0x0, 0x398A784
	0x0398A770 ADRP X0, 0x769000
	0x0398A774 LDR X0, [X0 + 0x5A8]
	0x0398A778 BL 0x1C16CF4
	0x0398A77C MOVZ W8, 0x1
	0x0398A780 STRB W8, [X21 + 0xA92]
	0x0398A784 ADD X8, X31, 0x8
	0x0398A788 MOV X0, X19
	0x0398A78C MOV X1, X31
	0x0398A790 BL 0x3C26F38
	0x0398A794 LDR X0, [X20]
	0x0398A798 LDP S11, S9, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA58000
	006 Move X20, 0x7C7000
	007 Move W8, [X19+2699]
	008 Move X20, [X20+1280]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x7C7000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move X0, 0x7C7000
	017 Move X0, [X0+1736]
	018 Call 0x1C17CF4
	019 Move X0, 0x76A000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X0, 0x7C7000
	023 Move X0, [X0+1744]
	024 Call 0x1C17CF4
	025 Move X0, 0x792000
	026 Move X0, [X0+192]
	027 Call 0x1C17CF4
	028 Move X0, 0x7C7000
	029 Move X0, [X0+1560]
	030 Call 0x1C17CF4
	031 Move X0, 0x7C7000
	032 Move X0, [X0+1280]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+2699], W8
	036 Move X0, [X20]
	037 Move X19, 0x792000
	038 Move W8, [X0+224]
	039 Move X19, [X19+192]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X19]
	045 Move X9, [X0+184]
	046 Move X21, 0x7C7000
	047 Move W10, [X8+224]
	048 Move X19, [X9+16]
	049 Move X21, [X21+1744]
	050 Compare W10, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X1, [X21]
	055 Move X0, X19
	056 Call 0x229939C, X0
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X9, [X8+16]
	060 Compare X9, 0
	061 JumpIfEqual {178}
	062 Move W10, [X0+224]
	063 Move W19, [X9+24]
	064 Compare W10, 0
	065 JumpIfNotEqual {69}
	066 Call 0x1C17DFC
	067 Move X0, [X20]
	068 Move X8, [X0+184]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X8+16]
	071 Compare X8, 0
	072 JumpIfEqual {178}
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W9, [X0+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {84}
	078 Call 0x1C17DFC
	079 Move X8, [X20]
	080 Move X8, [X8+184]
	081 Move X8, [X8+16]
	082 Compare X8, 0
	083 JumpIfEqual {178}
	084 Move X9, 0x7C7000
	085 Move X9, [X9+1736]
	086 Move X0, X8
	087 Move W1, W31
	088 Move X2, [X9]
	089 Call List`1<Object>.get_Item, X0, X1
	090 Move X8, [X20]
	091 Move X8, [X8+184]
	092 Move [X8+24], X0
	093 Compare X0, 0
	094 JumpIfEqual {178}
	095 Move W1, 1
	096 Move X2, X31
	097 Call XRDisplaySubsystem.set_disableLegacyRenderer, X0, X1
	098 Move X8, [X20]
	099 Move X0, X31
	100 Move X8, [X8+184]
	101 Move X19, [X8+24]
	102 Call QualitySettings.get_activeColorSpace
	103 Compare X19, 0
	104 JumpIfEqual {178}
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 Move X0, X19
	108 Move X2, X31
	109 Call XRDisplaySubsystem.set_sRGB, X0, X1
	110 Move X8, [X20]
	111 Move X8, [X8+184]
	112 Move X0, [X8+24]
	113 Compare X0, 0
	114 JumpIfEqual {178}
	115 Move X20, 0x7C7000
	116 Move X20, [X20+1560]
	117 Move W1, 1
	118 Move X2, X31
	119 Call XRDisplaySubsystem.set_textureLayout, X0, X1
	120 Move X0, [X20]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X19, 0xA58000
	126 Move W8, [X19+2875]
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0x7C7000
	130 Move X0, [X0+1560]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X19+2875], W8
	134 Move X0, [X20]
	135 Move X19, 0x76A000
	136 Move W8, [X0+224]
	137 Move X19, [X19+1448]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X20]
	142 Move X8, [X19]
	143 Move X9, [X0+184]
	144 Move W10, [X8+224]
	145 Move W19, [X9]
	146 Compare W10, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X8
	149 Call 0x1C17DFC
	150 Move W1, 2
	151 Move W0, W19
	152 Move X2, X31
	153 Call Math.Max, X0, X1
	154 Move X21, 0xA58000
	155 Move W8, [X21+2880]
	156 Move W19, W0
	157 Compare W8, 0
	158 JumpIfNotEqual {164}
	159 Move X0, 0x7C7000
	160 Move X0, [X0+1560]
	161 Call 0x1C17CF4
	162 Move W8, 1
	163 Move [X21+2880], W8
	164 Move X0, [X20]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X20]
	170 Move X8, [X0+184]
	171 Move [X8], W19
	172 Move [X8+24], X31
	173 Move X20, [X31+16]
	174 Move X19, [X31+24]
	175 Move X30, [X31+32]
	176 Move X21, [X31+40]
	177 Return 
	178 Call 0x1C17F20
	179 Move X0, 0x773000
	180 Move X0, [X0+1880]
	181 Call 0x1C17D08
	182 Call 0x1C17F10
	183 Move X19, X0
	184 Move X0, 0x7C7000
	185 Move X0, [X0+1752]
	186 Call 0x1C17D08
	187 Move X1, X0
	188 Move X0, X19
	189 Move X2, X31
	190 Call NotImplementedException..ctor, X0, X1
	191 Move X0, 0x7C7000
	192 Move X0, [X0+1760]
	193 Call 0x1C17D08
	194 Move X1, X0
	195 Move X0, X19
	196 Call 0x1C17DEC

Method: System.Void CreateDefaultLayout(UnityEngine.Camera camera)

Disassembly:
	0x039863E4 MOV X1, X31
	0x039863E8 LDR X30, [X31], #0x30
	0x039863EC B 0x33BDD8C
	0x039863F0 STP D15, D14, [X31 - 0xA0]!
	0x039863F4 STP D13, D12, [X31 + 0x10]
	0x039863F8 STP D11, D10, [X31 + 0x20]
	0x039863FC STP D9, D8, [X31 + 0x30]
	0x03986400 STP X29, X30, [X31 + 0x40]
	0x03986404 STP X28, X27, [X31 + 0x50]
	0x03986408 STP X26, X25, [X31 + 0x60]
	0x0398640C STP X24, X23, [X31 + 0x70]
	0x03986410 STP X22, X21, [X31 + 0x80]
	0x03986414 STP X20, X19, [X31 + 0x90]
	0x03986418 SUB X31, X31, 0x2F0
	0x0398641C STP X0, X1, [X31 + 0x20]
	0x03986420 ADRP X23, 0xA5B000
	0x03986424 ADRP X21, 0x76D000
	0x03986428 LDRB W8, [X23 + 0xA5A]
	0x0398642C LDR X21, [X21 + 0x970]
	0x03986430 MOV X22, X3
	0x03986434 MOV X20, X2
	0x03986438 ADD X19, X31, 0x210
	0x0398643C TBNZ X8, 0x0, 0x39864A8
	0x03986440 ADRP X0, 0x76D000
	0x03986444 LDR X0, [X0 + 0x970]
	0x03986448 BL 0x1C16CF4
	0x0398644C ADRP X0, 0x7CA000
	0x03986450 LDR X0, [X0 + 0x568]
	0x03986454 BL 0x1C16CF4
	0x03986458 ADRP X0, 0x7CA000
	0x0398645C LDR X0, [X0 + 0x570]
	0x03986460 BL 0x1C16CF4
	0x03986464 ADRP X0, 0x76D000
	0x03986468 LDR X0, [X0 + 0x598]
	0x0398646C BL 0x1C16CF4
	0x03986470 ADRP X0, 0x7CA000
	0x03986474 LDR X0, [X0 + 0x578]
	0x03986478 BL 0x1C16CF4
	0x0398647C ADRP X0, 0x7CA000
	0x03986480 LDR X0, [X0 + 0x580]
	0x03986484 BL 0x1C16CF4
	0x03986488 ADRP X0, 0x7CA000
	0x0398648C LDR X0, [X0 + 0x500]
	0x03986490 BL 0x1C16CF4
	0x03986494 ADRP X0, 0x7CA000
	0x03986498 LDR X0, [X0 + 0x588]
	0x0398649C BL 0x1C16CF4
	0x039864A0 MOVZ W8, 0x1
	0x039864A4 STRB W8, [X23 + 0xA5A]
	0x039864A8 LDR X0, [X21]
	0x039864AC MOVI V0.2D, 0x0
	0x039864B0 STR X31, [X31 + 0x2E8]
	0x039864B4 STR X31, [X31 + 0x2E0]
	0x039864B8 STRB W31, [X31 + 0x2D8]
	0x039864BC STR X31, [X31 + 0x2D0]
	0x039864C0 STR W31, [X31 + 0x28C]
	0x039864C4 STP V0, V0, [X31 + 0x2B0]
	0x039864C8 STP V0, V0, [X31 + 0x290]
	0x039864CC STUR V0, [X19 + 0x6C]
	0x039864D0 STP V0, V0, [X31 + 0x260]
	0x039864D4 STR V0, [X31 + 0x25]
	0x039864D8 STUR V0, [X19 + 0x2C]
	0x039864DC STP V0, V0, [X31 + 0x220]
	0x039864E0 STP V0, V0, [X31 + 0x200]
	0x039864E4 STP V0, V0, [X31 + 0x1E0]
	0x039864E8 STR V0, [X31 + 0x1D]
	0x039864EC STR X31, [X31 + 0x1C0]
	0x039864F0 STP V0, V0, [X31 + 0x1A0]
	0x039864F4 LDR W8, [X0 + 0xE0]
	0x039864F8 CBNZ W8, 0x3986500
	0x039864FC BL 0x1C16DFC
	0x03986500 MOV X0, X31
	0x03986504 BL 0x3C01AB0
	0x03986508 CMP W0, 0xB
	0x0398650C B.NE 0x398652C
	0x03986510 ADRP X21, 0x7CA000
	0x03986514 LDR X21, [X21 + 0x578]
	0x03986518 LDR X0, [X21]
	0x0398651C LDR W8, [X0 + 0xE0]
	0x03986520 CBZ W8, 0x3986534
	0x03986524 CBNZ X22, 0x3986540
	0x03986528 B 0x3986EE8
	0x0398652C CBNZ X22, 0x398654C
	0x03986530 B 0x3986EE8
	0x03986534 BL 0x1C16DFC
	0x03986538 LDR X0, [X21]
	0x0398653C CBZ X22, 0x3986EE8
	0x03986540 LDR X8, [X0 + 0xB8]
	0x03986544 LDRB W8, [X8 + 0x1]
	0x03986548 CBZ W8, 0x3986EE8
	0x0398654C MOV X0, X22
	0x03986550 MOV X1, X31
	0x03986554 BL 0x3C989A8
	0x03986558 TBZ X0, 0x0, 0x3986EE8
	0x0398655C ADRP X8, 0x76D000
	0x03986560 LDR X8, [X8 + 0x598]
	0x03986564 LDR X0, [X8]
	0x03986568 LDR W8, [X0 + 0xE0]
	0x0398656C CBNZ W8, 0x3986574
	0x03986570 BL 0x1C16DFC
	0x03986574 MOV X0, X20
	0x03986578 MOV X1, X31
	0x0398657C MOV X2, X31
	0x03986580 BL 0x3C3883C
	0x03986584 TBNZ X0, 0x0, 0x3986EE8
	0x03986588 MOV X0, X22
	0x0398658C MOV X1, X31
	0x03986590 BL 0x3E65DF8
	0x03986594 MOV W23, W0
	0x03986598 ADD X2, X31, 0x2E0
	0x0398659C MOV X0, X22
	0x039865A0 MOV X1, X31
	0x039865A4 MOV W3, W23
	0x039865A8 MOV X4, X31
	0x039865AC BL 0x3E65E34
	0x039865B0 TBZ X0, 0x0, 0x3986E60
	0x039865B4 ADRP X21, 0x7CA000
	0x039865B8 LDR X21, [X21 + 0x580]
	0x039865BC LDR X0, [X21]
	0x039865C0 LDR W8, [X0 + 0xE0]
	0x039865C4 CBNZ W8, 0x39865D0
	0x039865C8 BL 0x1C16DFC
	0x039865CC LDR X0, [X21]
	0x039865D0 LDR X8, [X0 + 0xB8]
	0x039865D4 LDR X1, [X31 + 0x20]
	0x039865D8 ADD X0, X31, 0x2D8
	0x039865DC MOV X3, X31
	0x039865E0 LDR X2, [X8 + 0x8]
	0x039865E4 BL 0x39B1DB0
	0x039865E8 LDR X0, [X31 + 0x28]
	0x039865EC CBZ X0, 0x3986F58
	0x039865F0 MOV X1, X31
	0x039865F4 BL 0x3C040B4
	0x039865F8 ADRP X8, 0x76D000
	0x039865FC LDR X8, [X8 + 0x598]
	0x03986600 MOV X24, X0
	0x03986604 LDR X0, [X8]
	0x03986608 LDR W8, [X0 + 0xE0]
	0x0398660C CBNZ W8, 0x3986614
	0x03986610 BL 0x1C16DFC
	0x03986614 MOV X0, X24
	0x03986618 MOV X1, X31
	0x0398661C MOV X2, X31
	0x03986620 BL 0x3C354F8
	0x03986624 TBZ X0, 0x0, 0x3986644
	0x03986628 LDR X0, [X31 + 0x28]
	0x0398662C MOV X1, X31
	0x03986630 BL 0x3C040B4
	0x03986634 ADD X8, X31, 0x130
	0x03986638 MOV X1, X31
	0x0398663C BL 0x3C4B274
	0x03986640 B 0x3986660
	0x03986644 MOVI V0.2D, 0x0
	0x03986648 STR X31, [X31 + 0x150]
	0x0398664C STP V0, V0, [X31 + 0x130]
	0x03986650 ADD X0, X31, 0x130
	0x03986654 MOVZ W1, 0x2
	0x03986658 MOV X2, X31
	0x0398665C BL 0x3C4B004
	0x03986660 LDP V0, V1, [X31 + 0x130]
	0x03986664 LDR X8, [X31 + 0x150]
	0x03986668 LDR X0, [X31 + 0x20]
	0x0398666C STP V0, V1, [X31 + 0x1A0]
	0x03986670 STR X8, [X31 + 0x1C0]
	0x03986674 CBZ X0, 0x3986F60
	0x03986678 LDP V0, V1, [X31 + 0x1A0]
	0x0398667C LDR X8, [X31 + 0x1C0]
	0x03986680 STP V0, V1, [X31 + 0x170]
	0x03986684 STR X8, [X31 + 0x190]
	0x03986688 ADD X1, X31, 0x170
	0x0398668C MOV X2, X31
	0x03986690 BL 0x3C4D998
	0x03986694 LDRB W8, [X31 + 0x2E8]
	0x03986698 TBNZ X8, 0x0, 0x3986E38
	0x0398669C LDR W8, [X31 + 0x2EC]
	0x039866A0 CMP W8, 0x1
	0x039866A4 B.LT 0x3986E54
	0x039866A8 ADRP X23, 0x771000
	0x039866AC LDR X23, [X23 + 0x270]
	0x039866B0 MOV W22, W31
	0x039866B4 ADRP X24, 0xA52000
	0x039866B8 ADD X0, X31, 0x2E0
	0x039866BC ADD X2, X31, 0x290
	0x039866C0 MOV W1, W22
	0x039866C4 MOV X3, X31
	0x039866C8 BL 0x3E660CC
	0x039866CC LDR V12, [X31 + 0x2A4]
	0x039866D0 LDR V15, [X31 + 0x2A8]
	0x039866D4 LDR V13, [X31 + 0x29C]
	0x039866D8 LDR V14, [X31 + 0x2A0]
	0x039866DC LDR V0, [X31 + 0x2B4]
	0x039866E0 LDR V9, [X31 + 0x2B8]
	0x039866E4 LDR V10, [X31 + 0x2AC]
	0x039866E8 LDR V11, [X31 + 0x2B0]
	0x039866EC STR S0, [X31 + 0x1C]
	0x039866F0 LDR X0, [X31 + 0x28]
	0x039866F4 MOV X1, X31
	0x039866F8 BL 0x3C040B4
	0x039866FC ADRP X8, 0x76D000
	0x03986700 LDR X8, [X8 + 0x598]
	0x03986704 MOV X25, X0
	0x03986708 LDR X0, [X8]
	0x0398670C LDR W8, [X0 + 0xE0]
	0x03986710 CBNZ W8, 0x3986718
	0x03986714 BL 0x1C16DFC
	0x03986718 MOV X0, X25
	0x0398671C MOV X1, X31
	0x03986720 MOV X2, X31
	0x03986724 BL 0x3C354F8
	0x03986728 TBNZ X0, 0x0, 0x3986754
	0x0398672C LDR X0, [X31 + 0x28]
	0x03986730 MOV X1, X31
	0x03986734 BL 0x3C03AD4
	0x03986738 CMP W0, 0x2
	0x0398673C B.EQ 0x3986754
	0x03986740 LDR X0, [X31 + 0x28]
	0x03986744 MOV X1, X31
	0x03986748 BL 0x3C03AD4
	0x0398674C CMP W0, 0x4
	0x03986750 B.NE 0x3986760
	0x03986754 LDR V0, [X31 + 0x2A8]
	0x03986758 FNEG S15, S15
	0x0398675C FADD S14, S14, S0
	0x03986760 ADRP X8, 0x7CA000
	0x03986764 LDR X8, [X8 + 0x570]
	0x03986768 LDR X0, [X8]
	0x0398676C LDR W8, [X0 + 0xE0]
	0x03986770 CBNZ W8, 0x3986778
	0x03986774 BL 0x1C16DFC
	0x03986778 MOV X0, X31
	0x0398677C BL 0x3C10718
	0x03986780 LDRB W8, [X31 + 0x2C8]
	0x03986784 MOV X25, X0
	0x03986788 TBNZ X8, 0x0, 0x39867A4
	0x0398678C CBZ X25, 0x3986F50
	0x03986790 MOV X0, X25
	0x03986794 MOV X1, X31
	0x03986798 BL 0x3C10770
	0x0398679C TBNZ X0, 0x0, 0x39867A8
	0x039867A0 B 0x3986B54
	0x039867A4 CBZ X25, 0x3986F48
	0x039867A8 MOV X0, X25
	0x039867AC MOV X1, X31
	0x039867B0 BL 0x3C10770
	0x039867B4 TBZ X0, 0x0, 0x39867CC
	0x039867B8 MOV X0, X25
	0x039867BC MOV X1, X31
	0x039867C0 BL 0x3C109A4
	0x039867C4 MOV W28, W0
	0x039867C8 B 0x39867D0
	0x039867CC MOV W28, W31
	0x039867D0 LDRB W27, [X31 + 0x2C8]
	0x039867D4 LDR W29, [X31 + 0x2CC]
	0x039867D8 MOV W0, W28
	0x039867DC MOV X1, X31
	0x039867E0 BL 0x3C10ED4
	0x039867E4 SBFM W8, W27, 0x0, 0x0
	0x039867E8 MOV W26, W0
	0x039867EC AND W29, W8, W29, 0x0
	0x039867F0 MOV W0, W29
	0x039867F4 MOV X1, X31
	0x039867F8 BL 0x3C10ED4
	0x039867FC MOV W27, W0
	0x03986800 LDR X0, [X21]
	0x03986804 LDR W8, [X0 + 0xE0]
	0x03986808 CBNZ W8, 0x3986814
	0x0398680C BL 0x1C16DFC
	0x03986810 LDR X0, [X21]
	0x03986814 LDR X8, [X0 + 0xB8]
	0x03986818 LDR X0, [X8]
	0x0398681C MOV W1, W28
	0x03986820 MOV X2, X31
	0x03986824 BL 0x39EB400
	0x03986828 MOVZ W1, 0x3
	0x0398682C MOV X0, X20
	0x03986830 MOV X2, X31
	0x03986834 BL 0x39EB4C0
	0x03986838 ADD X1, X31, 0x28C
	0x0398683C MOV W0, W29
	0x03986840 MOV X2, X31
	0x03986844 BL 0x39EB034
	0x03986848 LDR X8, [X21]
	0x0398684C LDR X8, [X8 + 0xB8]
	0x03986850 LDR X0, [X8]
	0x03986854 CBZ X0, 0x3986F38
	0x03986858 LDR W1, [X8 + 0x30]
	0x0398685C LDR W2, [X31 + 0x28C]
	0x03986860 MOV X3, X31
	0x03986864 BL 0x3C12650
	0x03986868 LDRB W8, [X24 + 0xAC0]
	0x0398686C CBNZ W8, 0x3986880
	0x03986870 MOV X0, X23
	0x03986874 BL 0x1C16CF4
	0x03986878 MOVZ W8, 0x1
	0x0398687C STRB W8, [X24 + 0xAC0]
	0x03986880 LDR X8, [X23]
	0x03986884 LDR X8, [X8 + 0xB8]
	0x03986888 LDUR V0, [X8 + 0x6C]
	0x0398688C LDP V3, V1, [X8 + 0x50]
	0x03986890 LDR V2, [X8 + 0x4]
	0x03986894 STUR V0, [X19 + 0x6C]
	0x03986898 STP V3, V1, [X31 + 0x260]
	0x0398689C STR V2, [X31 + 0x25]
	0x039868A0 CBZ W27, 0x39868FC
	0x039868A4 CMP W27, 0x2
	0x039868A8 FMOV S8, W31
	0x039868AC B.NE 0x3986940
	0x039868B0 ADRP X8, 0x7CA000
	0x039868B4 LDR X8, [X8 + 0x568]
	0x039868B8 LDR X0, [X8]
	0x039868BC LDR W8, [X0 + 0xE0]
	0x039868C0 CBNZ W8, 0x39868D4
	0x039868C4 BL 0x1C16DFC
	0x039868C8 ADRP X8, 0x7CA000
	0x039868CC LDR X8, [X8 + 0x568]
	0x039868D0 LDR X0, [X8]
	0x039868D4 LDR X8, [X0 + 0xB8]
	0x039868D8 ADD X9, X8, 0x100
	0x039868DC LDP V0, V1, [X8 + 0x100]
	0x039868E0 LDUR V2, [X9 + 0x2C]
	0x039868E4 LDR V3, [X8 + 0x12]
	0x039868E8 ADD X8, X8, 0x13C
	0x039868EC STP V0, V1, [X31 + 0x250]
	0x039868F0 STUR V2, [X19 + 0x6C]
	0x039868F4 STR V3, [X31 + 0x27]
	0x039868F8 B 0x398693C
	0x039868FC ADRP X8, 0x7CA000
	0x03986900 LDR X8, [X8 + 0x568]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 0x2000
	012 Subtract X31, X31, 3184
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X23+40]
	015 Move X20, 0xA5C000
	016 Move X24, 0x7CB000
	017 Move X19, X0
	018 Move [X31+11368], X8
	019 Move W8, [X20+2700]
	020 Move X24, [X24+1280]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x7CB000
	026 Move X0, [X0+1280]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2700], W8
	030 Add X0, X31, 2520
	031 Move W2, 224
	032 Move W1, W31
	033 Call 0x3EB2B10
	034 Add X0, X31, 4096
	035 Add X0, X0, 3752
	036 Move W2, 1584
	037 Move W1, W31
	038 Call 0x3EB2B10
	039 Add X0, X31, 2296
	040 Move W2, 224
	041 Move W1, W31
	042 Call 0x3EB2B10
	043 Add X0, X31, 2072
	044 Move W2, 224
	045 Move W1, W31
	046 Call 0x3EB2B10
	047 Move X0, [X24]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X24]
	053 Move X8, [X0+184]
	054 Move X8, [X8+24]
	055 Compare X8, 0
	056 JumpIfEqual {338}
	057 Move W20, W31
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X24]
	063 Move X8, [X0+184]
	064 Move X0, [X8+24]
	065 Compare X0, 0
	066 JumpIfEqual {337}
	067 Move X1, X31
	068 Call XRDisplaySubsystem.GetRenderPassCount, X0
	069 Move X8, [X24]
	070 Move W21, W0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X24]
	077 Move X9, [X8+184]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X9+24]
	080 Compare X0, 0
	081 JumpIfEqual {337}
	082 Add X2, X31, 2520
	083 Move W1, W20
	084 Move X3, X31
	085 Call XRDisplaySubsystem.GetRenderPass, X0, X1, X2
	086 Move X8, [X24]
	087 Move X8, [X8+184]
	088 Move X0, [X8+24]
	089 Compare X0, 0
	090 JumpIfEqual {337}
	091 Move W2, [X31+2728]
	092 Add X3, X31, 4096
	093 Add X3, X3, 3752
	094 Move X1, X19
	095 Move X4, X31
	096 Call XRDisplaySubsystem.GetCullingParameters, X0, X1, X2, X3
	097 Add X0, X31, 1848
	098 Add X1, X31, 2520
	099 Move W2, 224
	100 Call 0x3EB2AC0
	101 Add X1, X31, 1848
	102 Move X0, X19
	103 Call XRSystem.CanUseSinglePass, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {215}
	108 Move X0, [X24]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X24]
	114 Move X8, [X0+184]
	115 Add X0, X31, 1624
	116 Add X1, X31, 2520
	117 Move W2, 224
	118 Move X22, [X8+8]
	119 Call 0x3EB2AC0
	120 Add X0, X31, 4096
	121 Add X1, X31, 4096
	122 Add X0, X0, 232
	123 Add X1, X1, 3752
	124 Move W2, 1584
	125 Call 0x3EB2AC0
	126 Add X8, X31, 4096
	127 Add X1, X31, 4096
	128 Add X8, X8, 1816
	129 Add X0, X31, 1624
	130 Add X1, X1, 232
	131 Call XRSystem.BuildPass, X0, X1
	132 Compare X22, 0
	133 JumpIfEqual {337}
	134 Move X25, [X22+24]
	135 Move X21, [X22+64]
	136 Add X0, X31, 0x2000
	137 Add X1, X31, 4096
	138 Add X0, X0, 1240
	139 Add X1, X1, 1816
	140 Move W2, 1936
	141 Call 0x3EB2AC0
	142 Move X2, [X22+40]
	143 Add X1, X31, 0x2000
	144 Add X1, X1, 1240
	145 Move X0, X21
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X21, X0
	148 Add X0, X31, 2520
	149 Move X1, X31
	150 Call XRRenderPass.GetRenderParameterCount, X0
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W22, W31
	153 Add X0, X31, 2520
	154 Add X3, X31, 2296
	155 Move X1, X19
	156 Move W2, W22
	157 Move X4, X31
	158 Call XRRenderPass.GetRenderParameter, X0, X1, X2, X3
	159 Add X0, X31, 0x2000
	160 Add X0, X0, 1240
	161 Add X1, X31, 2520
	162 Move W2, 224
	163 Call 0x3EB2AC0
	164 Add X0, X31, 4096
	165 Add X0, X0, 1816
	166 Add X1, X31, 2296
	167 Move W2, 224
	168 Call 0x3EB2AC0
	169 Move X0, [X24]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Add X1, X31, 0x2000
	175 Add X0, X31, 1232
	176 Add X1, X1, 1240
	177 Move W2, 224
	178 Call 0x3EB2AC0
	179 Add X1, X31, 4096
	180 Add X0, X31, 1008
	181 Add X1, X1, 1816
	182 Move W2, 224
	183 Call 0x3EB2AC0
	184 Add X8, X31, 1456
	185 Add X0, X31, 1232
	186 Add X1, X31, 1008
	187 Call XRSystem.BuildView, X0, X1
	188 Compare X21, 0
	189 JumpIfEqual {337}
	190 Add X0, X31, 840
	191 Add X1, X31, 1456
	192 Move W2, 168
	193 Call 0x3EB2AC0
	194 Add X1, X31, 840
	195 Move X0, X21
	196 Call XRPass.AddView, X0, X1
	197 Add X0, X31, 2520
	198 Move X1, X31
	199 Add W22, W22, 1
	200 Call XRRenderPass.GetRenderParameterCount, X0
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, [X24]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {208}
	206 Call 0x1C17DFC
	207 Move X0, [X24]
	208 Move X8, [X0+184]
	209 Move X0, [X8]
	210 Compare X0, 0
	211 JumpIfEqual {337}
	212 Move X1, X19
	213 Move X2, X21
	214 Call XRLayout.AddPass, X0, X1, X2
	215 Add X0, X31, 2520
	216 Move X1, X31
	217 Call XRRenderPass.GetRenderParameterCount, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move W21, W31
	220 Add X0, X31, 2520
	221 Add X3, X31, 2072
	222 Move X1, X19
	223 Move W2, W21
	224 Move X4, X31
	225 Call XRRenderPass.GetRenderParameter, X0, X1, X2, X3
	226 Move X0, [X24]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X24]
	232 Move X8, [X0+184]
	233 Add X0, X31, 616
	234 Add X1, X31, 2520
	235 Move W2, 224
	236 Move X25, [X8+8]
	237 Call 0x3EB2AC0
	238 Add X1, X31, 4096
	239 Add X0, X31, 2744
	240 Add X1, X1, 3752
	241 Move W2, 1584
	242 Call 0x3EB2AC0
	243 Add X8, X31, 4096
	244 Add X8, X8, 1816
	245 Add X0, X31, 616
	246 Add X1, X31, 2744
	247 Call XRSystem.BuildPass, X0, X1
	248 Compare X25, 0
	249 JumpIfEqual {337}
	250 Move X26, [X25+24]
	251 Move X22, [X25+64]
	252 Add X0, X31, 0x2000
	253 Add X1, X31, 4096
	254 Add X0, X0, 1240
	255 Add X1, X1, 1816
	256 Move W2, 1936
	257 Call 0x3EB2AC0
	258 Move X2, [X25+40]
	259 Add X1, X31, 0x2000
	260 Add X1, X1, 1240
	261 Move X0, X22
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move X22, X0
	264 Add X0, X31, 392
	265 Add X1, X31, 2520
	266 Move W2, 224
	267 Call 0x3EB2AC0
	268 Add X0, X31, 168
	269 Add X1, X31, 2072
	270 Move W2, 224
	271 Call 0x3EB2AC0
	272 Add X8, X31, 0x2000
	273 Add X8, X8, 1240
	274 Add X0, X31, 392
	275 Add X1, X31, 168
	276 Call XRSystem.BuildView, X0, X1
	277 Compare X22, 0
	278 JumpIfEqual {337}
	279 Add X1, X31, 0x2000
	280 Add X0, X31, 0
	281 Add X1, X1, 1240
	282 Move W2, 168
	283 Call 0x3EB2AC0
	284 Add X1, X31, 0
	285 Move X0, X22
	286 Call XRPass.AddView, X0, X1
	287 Move X8, [X24]
	288 Move X8, [X8+184]
	289 Move X0, [X8]
	290 Compare X0, 0
	291 JumpIfEqual {337}
	292 Move X1, X19
	293 Move X2, X22
	294 Call XRLayout.AddPass, X0, X1, X2
	295 Add X0, X31, 2520
	296 Move X1, X31
	297 Add W21, W21, 1
	298 Call XRRenderPass.GetRenderParameterCount, X0
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move X0, [X24]
	301 Add W20, W20, 1
	302 Move X10, [X9+56]
	303 Compare X10, 0
	304 JumpIfEqual {321}
	305 Move W11, [X8+224]
	306 Compare W11, 0
	307 JumpIfNotEqual {315}
	308 Move X0, X8
	309 Call 0x1C17DFC
	310 Move X8, [X24]
	311 Move X9, [X8+184]
	312 Move X10, [X9+56]
	313 Compare X10, 0
	314 JumpIfEqual {337}
	315 Move X1, [X9]
	316 Move X8, [X10+24]
	317 Move X0, [X10+64]
	318 Move X3, [X10+40]
	319 Move X2, X19
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move X8, [X23+40]
	322 Move X9, [X31+11368]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Add X31, X31, 0x2000
	325 Add X31, X31, 3184
	326 Move X20, [X31+64]
	327 Move X19, [X31+72]
	328 Move X22, [X31+48]
	329 Move X21, [X31+56]
	330 Move X24, [X31+32]
	331 Move X23, [X31+40]
	332 Move X26, [X31+16]
	333 Move X25, [X31+24]
	334 Move X29, [X31+80]
	335 Move X30, [X31+88]
	336 Return 
	337 Call 0x1C17F20
	338 Move X0, 0x779000
	339 Move X0, [X0+2584]
	340 Call 0x1C17D08
	341 Call 0x1C17F10
	342 Move X19, X0
	343 Move X0, 0x7CB000
	344 Move X0, [X0+1288]
	345 Call 0x1C17D08
	346 Move X1, X0
	347 Move X0, X19
	348 Move X2, X31
	349 Call NullReferenceException..ctor, X0, X1
	350 Move X0, 0x7CB000
	351 Move X0, [X0+1296]
	352 Call 0x1C17D08
	353 Move X1, X0
	354 Move X0, X19
	355 Call 0x1C17DEC
	356 Call 0x3EB2B20

Method: System.Void ReconfigurePass(UnityEngine.Experimental.Rendering.XRPass xrPass, UnityEngine.Camera camera)

Disassembly:
	0x03986A84 LDP V0, V1, [X31 + 0x1D0]
	0x03986A88 LDP V2, V3, [X31 + 0x1F0]
	0x03986A8C LDR X0, [X8]
	0x03986A90 LDR W1, [X8 + 0x34]
	0x03986A94 STP V0, V1, [X31 + 0x130]
	0x03986A98 STP V2, V3, [X31 + 0x150]
	0x03986A9C CBZ X0, 0x3986F3C
	0x03986AA0 LDP V0, V1, [X31 + 0x130]
	0x03986AA4 LDP V2, V3, [X31 + 0x150]
	0x03986AA8 STP V0, V1, [X31 + 0x70]
	0x03986AAC STP V2, V3, [X31 + 0x90]
	0x03986AB0 ADD X2, X31, 0x70
	0x03986AB4 MOV X3, X31
	0x03986AB8 BL 0x3C127C4
	0x03986ABC LDR X8, [X21]
	0x03986AC0 LDR X8, [X8 + 0xB8]
	0x03986AC4 LDR X26, [X8]
	0x03986AC8 LDR W27, [X8 + 0x28]
	0x03986ACC MOV X0, X25
	0x03986AD0 MOV X1, X31
	0x03986AD4 BL 0x3C10770
	0x03986AD8 TBZ X0, 0x0, 0x3986AF0
	0x03986ADC MOV X0, X25
	0x03986AE0 MOV X1, X31
	0x03986AE4 BL 0x3C10BC0
	0x03986AE8 SCVTF S0, W0
	0x03986AEC B 0x3986AF8
	0x03986AF0 MOVZ W8, 0x43200000
	0x03986AF4 FMOV S0, W8
	0x03986AF8 CBZ X26, 0x3986F40
	0x03986AFC MOV X0, X26
	0x03986B00 MOV W1, W27
	0x03986B04 MOV X2, X31
	0x03986B08 BL 0x3C125FC
	0x03986B0C LDR X0, [X21]
	0x03986B10 LDR W8, [X0 + 0xE0]
	0x03986B14 CBNZ W8, 0x3986B20
	0x03986B18 BL 0x1C16DFC
	0x03986B1C LDR X0, [X21]
	0x03986B20 LDR X8, [X0 + 0xB8]
	0x03986B24 LDR X0, [X8]
	0x03986B28 CBZ X0, 0x3986F44
	0x03986B2C LDR V0, [X31 + 0x2D0]
	0x03986B30 LDRB W9, [X31 + 0x2C8]
	0x03986B34 LDR W1, [X8 + 0x2C]
	0x03986B38 MOVZ W8, 0x43200000
	0x03986B3C SCVTF S0, S0
	0x03986B40 ANDS W31, W9, 0x1
	0x03986B44 FMOV S1, W8
	0x03986B48 FCSEL S0, S1, S0, EQ
	0x03986B4C MOV X2, X31
	0x03986B50 BL 0x3C125FC
	0x03986B54 LDR X0, [X31 + 0x290]
	0x03986B58 CBZ X0, 0x3986F24
	0x03986B5C MOV X1, X31
	0x03986B60 BL 0x3C202A4
	0x03986B64 TBZ X0, 0x0, 0x3986B70
	0x03986B68 MOV W25, W31
	0x03986B6C B 0x3986BA8
	0x03986B70 LDR X0, [X31 + 0x290]
	0x03986B74 CBZ X0, 0x3986F4C
	0x03986B78 MOV X1, X31
	0x03986B7C BL 0x3C201A0
	0x03986B80 CMP W0, 0x8
	0x03986B84 B.NE 0x3986B90
	0x03986B88 MOVZ W25, 0x1
	0x03986B8C B 0x3986BA8
	0x03986B90 LDR X0, [X31 + 0x290]
	0x03986B94 CBZ X0, 0x3986F54
	0x03986B98 MOV X1, X31
	0x03986B9C BL 0x3C201A0
	0x03986BA0 CMP W0, 0x3B
	0x03986BA4 CSET W25, EQ
	0x03986BA8 LDR X0, [X21]
	0x03986BAC LDR W8, [X0 + 0xE0]
	0x03986BB0 CBNZ W8, 0x3986BBC
	0x03986BB4 BL 0x1C16DFC
	0x03986BB8 LDR X0, [X21]
	0x03986BBC LDR X8, [X0 + 0xB8]
	0x03986BC0 LDR X0, [X8]
	0x03986BC4 CBZ X0, 0x3986F1C
	0x03986BC8 LDR W1, [X8 + 0x20]
	0x03986BCC CMP W25, 0x0
	0x03986BD0 FMOV S0, 1
	0x03986BD4 FMOV S1, W31
	0x03986BD8 FCSEL S0, S1, S0, EQ
	0x03986BDC MOV X2, X31
	0x03986BE0 BL 0x3C125FC
	0x03986BE4 LDR X0, [X21]
	0x03986BE8 LDR W8, [X0 + 0xE0]
	0x03986BEC CBNZ W8, 0x3986BF8
	0x03986BF0 BL 0x1C16DFC
	0x03986BF4 LDR X0, [X21]
	0x03986BF8 LDR X8, [X0 + 0xB8]
	0x03986BFC LDR X25, [X8]
	0x03986C00 LDR W26, [X8 + 0x24]
	0x03986C04 MOV X0, X31
	0x03986C08 BL 0x3C113A8
	0x03986C0C CBZ X25, 0x3986F20
	0x03986C10 CMP W0, 0x1
	0x03986C14 FMOV S0, 1
	0x03986C18 FMOV S1, W31
	0x03986C1C FCSEL S0, S1, S0, EQ
	0x03986C20 MOV X0, X25
	0x03986C24 MOV W1, W26
	0x03986C28 MOV X2, X31
	0x03986C2C BL 0x3C125FC
	0x03986C30 LDR X0, [X21]
	0x03986C34 LDR W8, [X0 + 0xE0]
	0x03986C38 CBNZ W8, 0x3986C44
	0x03986C3C BL 0x1C16DFC
	0x03986C40 LDR X0, [X21]
	0x03986C44 LDR X8, [X0 + 0xB8]
	0x03986C48 LDR X0, [X8]
	0x03986C4C CBZ X0, 0x3986F30
	0x03986C50 LDR W1, [X8 + 0x10]
	0x03986C54 LDR X2, [X31 + 0x290]
	0x03986C58 MOV X3, X31
	0x03986C5C BL 0x3C12828
	0x03986C60 LDR X8, [X21]
	0x03986C64 LDR X8, [X8 + 0xB8]
	0x03986C68 LDR X0, [X8]
	0x03986C6C CBZ X0, 0x3986F34
	0x03986C70 LDR W1, [X8 + 0x18]
	0x03986C74 MOV V0.16B, V12.16B
	0x03986C78 MOV V1.16B, V15.16B
	0x03986C7C MOV V2.16B, V13.16B
	0x03986C80 MOV V3.16B, V14.16B
	0x03986C84 MOV X2, X31
	0x03986C88 BL 0x3C12720
	0x03986C8C LDR X8, [X21]
	0x03986C90 LDR X8, [X8 + 0xB8]
	0x03986C94 LDR X0, [X8]
	0x03986C98 CBZ X0, 0x3986F28
	0x03986C9C LDR W1, [X8 + 0x1C]
	0x03986CA0 LDR V0, [X31 + 0x1C]
	0x03986CA4 MOV V1.16B, V9.16B
	0x03986CA8 MOV V2.16B, V10.16B
	0x03986CAC MOV V3.16B, V11.16B
	0x03986CB0 MOV X2, X31
	0x03986CB4 BL 0x3C12720
	0x03986CB8 LDR X8, [X21]
	0x03986CBC LDR X8, [X8 + 0xB8]
	0x03986CC0 LDR X0, [X8]
	0x03986CC4 CBZ X0, 0x3986F18
	0x03986CC8 LDR V0, [X31 + 0x298]
	0x03986CCC LDR W1, [X8 + 0x14]
	0x03986CD0 SCVTF S0, S0
	0x03986CD4 MOV X2, X31
	0x03986CD8 BL 0x3C125FC
	0x03986CDC ADRP X8, 0x7CA000
	0x03986CE0 LDR X8, [X8 + 0x500]
	0x03986CE4 LDR X0, [X8]
	0x03986CE8 LDR W8, [X0 + 0xE0]
	0x03986CEC CBNZ W8, 0x3986CF4
	0x03986CF0 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 4096
	009 Subtract X31, X31, 592
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X22+40]
	012 Move X21, 0xA5C000
	013 Move X19, X1
	014 Move X20, X0
	015 Move [X31+4680], X8
	016 Move W8, [X21+2701]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x7CB000
	022 Move X0, [X0+1280]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2701], W8
	026 Add X0, X31, 1288
	027 Move W2, 224
	028 Move W1, W31
	029 Call 0x3EB2B10
	030 Add X0, X31, 3096
	031 Move W2, 1584
	032 Move W1, W31
	033 Call 0x3EB2B10
	034 Add X0, X31, 1064
	035 Move W2, 224
	036 Move W1, W31
	037 Call 0x3EB2B10
	038 Compare X20, 0
	039 JumpIfEqual {171}
	040 Move X0, X20
	041 Call XRPass.get_viewCount, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X23, 0x7CB000
	044 Move X23, [X23+1280]
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X23]
	051 Move X8, [X0+184]
	052 Move X8, [X8+24]
	053 Compare X8, 0
	054 JumpIfEqual {158}
	055 Move W9, [X0+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {64}
	058 Call 0x1C17DFC
	059 Move X8, [X23]
	060 Move X8, [X8+184]
	061 Move X8, [X8+24]
	062 Compare X8, 0
	063 JumpIfEqual {171}
	064 Move W1, [X20+36]
	065 Add X2, X31, 1288
	066 Move X0, X8
	067 Move X3, X31
	068 Call XRDisplaySubsystem.GetRenderPass, X0, X1, X2
	069 Move X8, [X23]
	070 Move X8, [X8+184]
	071 Move X0, [X8+24]
	072 Compare X0, 0
	073 JumpIfEqual {171}
	074 Move W2, [X31+1496]
	075 Add X3, X31, 3096
	076 Move X1, X19
	077 Move X4, X31
	078 Call XRDisplaySubsystem.GetCullingParameters, X0, X1, X2, X3
	079 Move W21, [X31+1496]
	080 Add X0, X31, 1512
	081 Add X1, X31, 3096
	082 Move W2, 1584
	083 Call 0x3EB2AC0
	084 Add X2, X31, 1512
	085 Move X0, X20
	086 Move W1, W21
	087 Call XRPass.AssignCullingParams, X0, X1, X2
	088 Add X0, X31, 1288
	089 Move X1, X31
	090 Call XRRenderPass.GetRenderParameterCount, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W21, W31
	093 Add X0, X31, 1288
	094 Add X3, X31, 1064
	095 Move X1, X19
	096 Move W2, W21
	097 Move X4, X31
	098 Call XRRenderPass.GetRenderParameter, X0, X1, X2, X3
	099 Add X0, X31, 840
	100 Add X1, X31, 1288
	101 Move W2, 224
	102 Call 0x3EB2AC0
	103 Add X0, X31, 616
	104 Add X1, X31, 1064
	105 Move W2, 224
	106 Call 0x3EB2AC0
	107 Move X0, [X23]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Add X0, X31, 392
	113 Add X1, X31, 840
	114 Move W2, 224
	115 Call 0x3EB2AC0
	116 Add X0, X31, 168
	117 Add X1, X31, 616
	118 Move W2, 224
	119 Call 0x3EB2AC0
	120 Add X8, X31, 0
	121 Add X0, X31, 392
	122 Add X1, X31, 168
	123 Call XRSystem.BuildView, X0, X1
	124 Add X2, X31, 0
	125 Move X0, X20
	126 Move W1, W21
	127 Call XRPass.AssignView, X0, X1, X2
	128 Add X0, X31, 1288
	129 Move X1, X31
	130 Add W21, W21, 1
	131 Call XRRenderPass.GetRenderParameterCount, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, [X23]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {139}
	137 Call 0x1C17DFC
	138 Move X0, [X23]
	139 Move X9, [X0+184]
	140 Move X8, [X9+56]
	141 Compare X8, 0
	142 JumpIfEqual {158}
	143 Move W10, [X0+224]
	144 Compare W10, 0
	145 JumpIfNotEqual {152}
	146 Call 0x1C17DFC
	147 Move X8, [X23]
	148 Move X9, [X8+184]
	149 Move X8, [X9+56]
	150 Compare X8, 0
	151 JumpIfEqual {171}
	152 Move X1, [X9]
	153 Move X9, [X8+24]
	154 Move X0, [X8+64]
	155 Move X3, [X8+40]
	156 Move X2, X19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X8, [X22+40]
	159 Move X9, [X31+4680]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X31, X31, 4096
	162 Add X31, X31, 592
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X30, [X31+16]
	168 Move X23, [X31+24]
	169 Move X29, [X31+64]
	170 Return 
	171 Call 0x1C17F20
	172 Call 0x3EB2B20

Method: System.Boolean CanUseSinglePass(UnityEngine.Camera camera, UnityEngine.XR.XRDisplaySubsystem/XRRenderPass renderPass)

Disassembly:
	0x0398B0C0 LDP X28, X27, [X31 + 0x20]
	0x0398B0C4 LDP X29, X30, [X31 + 0x10]
	0x0398B0C8 ADD X31, X31, 0x70
	0x0398B0CC B 0x249801C
	0x0398B0D0 BL 0x1C16F20
	0x0398B0D4 STR X30, [X31 - 0x20]!
	0x0398B0D8 STP X20, X19, [X31 + 0x10]
	0x0398B0DC ADRP X20, 0xA56000
	0x0398B0E0 LDRB W8, [X20 + 0xA94]
	0x0398B0E4 MOV X19, X0
	0x0398B0E8 TBNZ X8, 0x0, 0x398B100
	0x0398B0EC ADRP X0, 0x7C5000
	0x0398B0F0 LDR X0, [X0 + 0x810]
	0x0398B0F4 BL 0x1C16CF4
	0x0398B0F8 MOVZ W8, 0x1
	0x0398B0FC STRB W8, [X20 + 0xA94]
	0x0398B100 LDR X8, [X19 + 0x18]
	0x0398B104 CBZ X8, 0x398B134
	0x0398B108 LDR X0, [X8 + 0x28]
	0x0398B10C CBZ X0, 0x398B134
	0x0398B110 ADRP X8, 0x7C5000
	0x0398B114 LDR X8, [X8 + 0x810]
	0x0398B118 LDR X1, [X19 + 0x10]!
	0x0398B11C LDR X2, [X8]
	0x0398B120 BL 0x24982D0
	0x0398B124 STP X31, X31, [X19]
	0x0398B128 LDP X20, X19, [X31 + 0x10]
	0x0398B12C LDR X30, [X31], #0x20
	0x0398B130 RET
	0x0398B134 BL 0x1C16F20
	0x0398B138 MOV X1, X31
	0x0398B13C B 0x33BDD8C
	0x0398B140 LDRB W0, [X0 + 0x20]
	0x0398B144 RET
	0x0398B148 AND W8, W1, 0x1
	0x0398B14C STRB W8, [X0 + 0x20]
	0x0398B150 RET
	0x0398B154 LDRB W0, [X0 + 0x22]
	0x0398B158 RET
	0x0398B15C AND W8, W1, 0x1
	0x0398B160 STRB W8, [X0 + 0x22]
	0x0398B164 RET
	0x0398B168 LDRB W0, [X0 + 0x23]
	0x0398B16C RET
	0x0398B170 AND W8, W1, 0x1
	0x0398B174 STRB W8, [X0 + 0x23]
	0x0398B178 RET
	0x0398B17C LDRB W0, [X0 + 0x24]
	0x0398B180 RET
	0x0398B184 AND W8, W1, 0x1
	0x0398B188 STRB W8, [X0 + 0x24]
	0x0398B18C RET
	0x0398B190 STR X30, [X31 - 0x20]!
	0x0398B194 STP X20, X19, [X31 + 0x10]
	0x0398B198 ADRP X20, 0xA56000
	0x0398B19C LDRB W8, [X20 + 0xA95]
	0x0398B1A0 MOV X19, X0
	0x0398B1A4 TBNZ X8, 0x0, 0x398B1C8
	0x0398B1A8 ADRP X0, 0x768000
	0x0398B1AC LDR X0, [X0 + 0xA28]
	0x0398B1B0 BL 0x1C16CF4
	0x0398B1B4 ADRP X0, 0x7C5000
	0x0398B1B8 LDR X0, [X0 + 0x818]
	0x0398B1BC BL 0x1C16CF4
	0x0398B1C0 MOVZ W8, 0x1
	0x0398B1C4 STRB W8, [X20 + 0xA95]
	0x0398B1C8 LDRB W8, [X19 + 0x24]
	0x0398B1CC CBNZ W8, 0x398B1FC
	0x0398B1D0 ADRP X8, 0x768000
	0x0398B1D4 LDR X8, [X8 + 0xA28]
	0x0398B1D8 LDR X0, [X8]
	0x0398B1DC LDR W8, [X0 + 0xE0]
	0x0398B1E0 CBNZ W8, 0x398B1E8
	0x0398B1E4 BL 0x1C16DFC
	0x0398B1E8 ADRP X8, 0x7C5000
	0x0398B1EC LDR X8, [X8 + 0x818]
	0x0398B1F0 MOV X1, X31
	0x0398B1F4 LDR X0, [X8]
	0x0398B1F8 BL 0x3C06048
	0x0398B1FC MOVZ W8, 0x1
	0x0398B200 STRB W8, [X19 + 0x25]
	0x0398B204 LDP X20, X19, [X31 + 0x10]
	0x0398B208 LDR X30, [X31], #0x20
	0x0398B20C RET
	0x0398B210 STR X30, [X31 - 0x20]!
	0x0398B214 STP X20, X19, [X31 + 0x10]
	0x0398B218 ADRP X20, 0xA56000
	0x0398B21C LDRB W8, [X20 + 0xA96]
	0x0398B220 MOV X19, X0
	0x0398B224 TBNZ X8, 0x0, 0x398B248
	0x0398B228 ADRP X0, 0x768000
	0x0398B22C LDR X0, [X0 + 0xA28]
	0x0398B230 BL 0x1C16CF4
	0x0398B234 ADRP X0, 0x7C5000
	0x0398B238 LDR X0, [X0 + 0x820]
	0x0398B23C BL 0x1C16CF4
	0x0398B240 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+448], X29
	003 Move [X31+456], X30
	004 Move [X31+464], X22
	005 Move [X31+472], X21
	006 Move [X31+480], X20
	007 Move [X31+488], X19
	008 Move X22, 0xA57000
	009 Move X21, 0x7C6000
	010 Move W8, [X22+2702]
	011 Move X21, [X21+1280]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x7C6000
	019 Move X0, [X0+1280]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2702], W8
	023 Add X0, X31, 224
	024 Move W2, 224
	025 Move W1, W31
	026 Call 0x3EB2B10
	027 Add X0, X31, 0
	028 Move W2, 224
	029 Move W1, W31
	030 Call 0x3EB2B10
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X22, 0xA57000
	037 Move W8, [X22+2881]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x7C6000
	041 Move X0, [X0+1280]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+2881], W8
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Move X8, [X0+184]
	052 Move W8, [X8+72]
	053 Compare W8, 0
	054 JumpIfEqual {94}
	055 Move W8, [X19+88]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X19
	058 Move X1, X31
	059 Call XRRenderPass.GetRenderParameterCount, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X19+68]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X3, X31, 224
	064 Move X0, X19
	065 Move X1, X20
	066 Move W2, W31
	067 Move X4, X31
	068 Call XRRenderPass.GetRenderParameter, X0, X1, X2, X3
	069 Add X3, X31, 0
	070 Move W2, 1
	071 Move X0, X19
	072 Move X1, X20
	073 Move X4, X31
	074 Call XRRenderPass.GetRenderParameter, X0, X1, X2, X3
	075 Move W8, [X31+376]
	076 Move W0, W31
	077 Compare W8, 0
	078 JumpIfNotEqual {95}
	079 Move W8, [X31+152]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move V0, [X31+352]
	082 Move V1, [X31+128]
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 Move V0, [X31+140]
	085 Move V1, [X31+364]
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Move V0, [X31+136]
	088 Move V1, [X31+360]
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move V0, [X31+132]
	091 Move V1, [X31+356]
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move W0, 1
	094 Move W0, W31
	095 Move X20, [X31+480]
	096 Move X19, [X31+488]
	097 Move X22, [X31+464]
	098 Move X21, [X31+472]
	099 Move X29, [X31+448]
	100 Move X30, [X31+456]
	101 Add X31, X31, 496
	102 Return X0

Method: UnityEngine.Experimental.Rendering.XRView BuildView(UnityEngine.XR.XRDisplaySubsystem/XRRenderPass renderPass, UnityEngine.XR.XRDisplaySubsystem/XRRenderParameter renderParameter)

Disassembly:
	0x0398B494 ADRP X0, 0x7C5000
	0x0398B498 LDR X0, [X0 + 0x898]
	0x0398B49C BL 0x1C16CF4
	0x0398B4A0 ADRP X0, 0x7C5000
	0x0398B4A4 LDR X0, [X0 + 0x8A0]
	0x0398B4A8 BL 0x1C16CF4
	0x0398B4AC MOVZ W8, 0x1
	0x0398B4B0 STRB W8, [X20 + 0xA98]
	0x0398B4B4 LDR X8, [X19 + 0x10]
	0x0398B4B8 CBZ X8, 0x398B5E8
	0x0398B4BC LDP W2, W9, [X8 + 0x18]
	0x0398B4C0 ADD W9, W9, 0x1
	0x0398B4C4 CMP W2, 0x1
	0x0398B4C8 STP W31, W9, [X8 + 0x18]
	0x0398B4CC B.LT 0x398B4E0
	0x0398B4D0 LDR X0, [X8 + 0x10]
	0x0398B4D4 MOV W1, W31
	0x0398B4D8 MOV X3, X31
	0x0398B4DC BL 0x339FA34
	0x0398B4E0 LDR X21, [X19 + 0x18]
	0x0398B4E4 CBZ X21, 0x398B5E8
	0x0398B4E8 LDR W8, [X21 + 0x18]
	0x0398B4EC CBZ W8, 0x398B5EC
	0x0398B4F0 LDR X8, [X21 + 0x20]
	0x0398B4F4 CBZ X8, 0x398B568
	0x0398B4F8 MOV X8, X31
	0x0398B4FC MOVZ W9, 0x1
	0x0398B500 LDR X10, [X19 + 0x18]
	0x0398B504 CBZ X10, 0x398B5E8
	0x0398B508 MOV W20, W9
	0x0398B50C LDR W9, [X10 + 0x18]
	0x0398B510 CMP X8, X9
	0x0398B514 B.CS 0x398B5EC
	0x0398B518 ADD X8, X10, X8, 0x3, LSL
	0x0398B51C LDR X8, [X8 + 0x20]
	0x0398B520 CBZ X8, 0x398B5E8
	0x0398B524 LDP W2, W9, [X8 + 0x18]
	0x0398B528 ADD W9, W9, 0x1
	0x0398B52C CMP W2, 0x1
	0x0398B530 STP W31, W9, [X8 + 0x18]
	0x0398B534 B.LT 0x398B548
	0x0398B538 LDR X0, [X8 + 0x10]
	0x0398B53C MOV W1, W31
	0x0398B540 MOV X3, X31
	0x0398B544 BL 0x339FA34
	0x0398B548 MOV W9, W31
	0x0398B54C MOVZ W8, 0x1
	0x0398B550 TBNZ X20, 0x0, 0x398B500
	0x0398B554 LDP X20, X19, [X31 + 0x30]
	0x0398B558 LDP X22, X21, [X31 + 0x20]
	0x0398B55C LDP X24, X23, [X31 + 0x10]
	0x0398B560 LDP X30, X25, [X31], #0x40
	0x0398B564 RET
	0x0398B568 ADRP X22, 0x7C5000
	0x0398B56C LDR X22, [X22 + 0x8A0]
	0x0398B570 LDR X0, [X22]
	0x0398B574 BL 0x1C16F10
	0x0398B578 ADRP X23, 0x7C5000
	0x0398B57C LDR X23, [X23 + 0x898]
	0x0398B580 MOV X20, X0
	0x0398B584 LDR X1, [X23]
	0x0398B588 BL 0x313CEF4
	0x0398B58C MOV X25, X31
	0x0398B590 MOVZ W24, 0x1
	0x0398B594 CBZ X20, 0x398B5AC
	0x0398B598 LDR X8, [X21]
	0x0398B59C MOV X0, X20
	0x0398B5A0 LDR X1, [X8 + 0x40]
	0x0398B5A4 BL 0x1C16E00
	0x0398B5A8 CBZ X0, 0x398B5F0
	0x0398B5AC LDR W8, [X21 + 0x18]
	0x0398B5B0 CMP X25, X8
	0x0398B5B4 B.CS 0x398B5EC
	0x0398B5B8 ADD X8, X21, X25, 0x3, LSL
	0x0398B5BC STR X20, [X8 + 0x20]
	0x0398B5C0 TBZ X24, 0x0, 0x398B4F8
	0x0398B5C4 LDR X0, [X22]
	0x0398B5C8 LDR X21, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+368], D8
	003 Move [X31+376], X29
	004 Move [X31+384], X30
	005 Move [X31+392], X23
	006 Move [X31+400], X22
	007 Move [X31+408], X21
	008 Move [X31+416], X20
	009 Move [X31+424], X19
	010 Move X23, 0xA57000
	011 Move X22, 0x7C6000
	012 Move X19, X8
	013 Move W8, [X23+2703]
	014 Move X22, [X22+1400]
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x7C6000
	022 Move X0, [X0+1400]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2703], W8
	026 Move X0, [X22]
	027 Move V1, [X20+8]
	028 Move V8, [X21+56]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {36}
	032 Move [X31], V1
	033 Call 0x1C17DFC
	034 Move V1, [X31]
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move W8, [X8+1]
	038 Compare W8, 0
	039 JumpIfEqual {41}
	040 Move X21, X31
	041 Move X21, [X20+144]
	042 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	043 Move V0.D[1], V0.D[0]
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 Add X0, X31, 80
	046 Move W2, 224
	047 Move X1, X20
	048 Move [X31], V0
	049 Call 0x3EB2AC0
	050 Move V6, [X31+176]
	051 Move V0, [X31+192]
	052 Move V2, [X31+144]
	053 Move V4, [X31+160]
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move V3, [X31+144]
	056 Move V5, [X31+160]
	057 Move [X31+48], V6
	058 Move [X31+56], V0
	059 Move [X31+16], V2
	060 Move [X31+24], V4
	061 Move V7, [X31+176]
	062 Move V2, [X31+192]
	063 Move W8, [X20+152]
	064 Move [X19+128], V1
	065 Move [X19+136], V1
	066 Move [X19+96], V1
	067 Move [X19+104], V1
	068 Move [X19+64], V1
	069 Move [X19+72], V1
	070 Move V1, [X31+48]
	071 Move V0, [X31+64]
	072 Move [X19+160], X31
	073 Move [X19+32], V7
	074 Move [X19+40], V2
	075 Move [X19], V3
	076 Move [X19+8], V5
	077 Move V2, [X20]
	078 Move V3, [X20+16]
	079 Move V4, [X20+32]
	080 Move V5, [X20+48]
	081 Move V6, [X31]
	082 Move [X31+336], V1
	083 Move [X31+344], V0
	084 Move V1, [X31+16]
	085 Move V0, [X31+32]
	086 Add X0, X31, 304
	087 Move [X19+112], V5
	088 Move [X19+120], V6
	089 Move [X19+144], X21
	090 Move [X19+152], W8
	091 Move [X19+80], V3
	092 Move [X19+88], V4
	093 Move [X19+4], V2
	094 Move [X31+304], V1
	095 Move [X31+312], V0
	096 Call XRView.ComputeEyeCenterUV, X0
	097 Move [X19+156], S0
	098 Move [X19+164], S1
	099 Move X20, [X31+416]
	100 Move X19, [X31+424]
	101 Move X22, [X31+400]
	102 Move X21, [X31+408]
	103 Move X30, [X31+384]
	104 Move X23, [X31+392]
	105 Move X29, [X31+376]
	106 Move V8, [X31+368]
	107 Add X31, X31, 432
	108 Return X0

Method: UnityEngine.Experimental.Rendering.XRPassCreateInfo BuildPass(UnityEngine.XR.XRDisplaySubsystem/XRRenderPass xrRenderPass, UnityEngine.Rendering.ScriptableCullingParameters cullingParameters)

Disassembly:
	0x0398B244 STRB W8, [X20 + 0xA96]
	0x0398B248 LDRB W8, [X19 + 0x24]
	0x0398B24C CBNZ W8, 0x398B27C
	0x0398B250 ADRP X8, 0x768000
	0x0398B254 LDR X8, [X8 + 0xA28]
	0x0398B258 LDR X0, [X8]
	0x0398B25C LDR W8, [X0 + 0xE0]
	0x0398B260 CBNZ W8, 0x398B268
	0x0398B264 BL 0x1C16DFC
	0x0398B268 ADRP X8, 0x7C5000
	0x0398B26C LDR X8, [X8 + 0x820]
	0x0398B270 MOV X1, X31
	0x0398B274 LDR X0, [X8]
	0x0398B278 BL 0x3C06048
	0x0398B27C MOVZ W8, 0x1
	0x0398B280 STRB W8, [X19 + 0x26]
	0x0398B284 LDP X20, X19, [X31 + 0x10]
	0x0398B288 LDR X30, [X31], #0x20
	0x0398B28C RET
	0x0398B290 STP X29, X30, [X31 - 0x60]!
	0x0398B294 STP X28, X27, [X31 + 0x10]
	0x0398B298 STP X26, X25, [X31 + 0x20]
	0x0398B29C STP X24, X23, [X31 + 0x30]
	0x0398B2A0 STP X22, X21, [X31 + 0x40]
	0x0398B2A4 STP X20, X19, [X31 + 0x50]
	0x0398B2A8 ADRP X21, 0xA56000
	0x0398B2AC ADRP X19, 0x7C5000
	0x0398B2B0 ADRP X20, 0x7C5000
	0x0398B2B4 ADRP X29, 0x7C5000
	0x0398B2B8 ADRP X27, 0x7C5000
	0x0398B2BC ADRP X28, 0x7C5000
	0x0398B2C0 ADRP X25, 0x7C5000
	0x0398B2C4 ADRP X26, 0x7C5000
	0x0398B2C8 ADRP X23, 0x7C5000
	0x0398B2CC ADRP X24, 0x7C5000
	0x0398B2D0 ADRP X14, 0x7C5000
	0x0398B2D4 ADRP X22, 0x7C5000
	0x0398B2D8 ADRP X12, 0x7C5000
	0x0398B2DC ADRP X13, 0x7C5000
	0x0398B2E0 LDR X19, [X19 + 0x828]
	0x0398B2E4 LDR X20, [X20 + 0x830]
	0x0398B2E8 LDR X29, [X29 + 0x800]
	0x0398B2EC LDR X27, [X27 + 0x838]
	0x0398B2F0 LDR X28, [X28 + 0x840]
	0x0398B2F4 LDR X25, [X25 + 0x848]
	0x0398B2F8 LDR X26, [X26 + 0x850]
	0x0398B2FC LDR X23, [X23 + 0x858]
	0x0398B300 LDRB W8, [X21 + 0xA97]
	0x0398B304 LDR X24, [X24 + 0x860]
	0x0398B308 LDR X14, [X14 + 0x868]
	0x0398B30C LDR X22, [X22 + 0x870]
	0x0398B310 LDR X12, [X12 + 0x878]
	0x0398B314 LDR X13, [X13 + 0x880]
	0x0398B318 TBNZ X8, 0x0, 0x398B3D8
	0x0398B31C ADRP X0, 0x7C5000
	0x0398B320 LDR X0, [X0 + 0x800]
	0x0398B324 BL 0x1C16CF4
	0x0398B328 ADRP X0, 0x7C5000
	0x0398B32C LDR X0, [X0 + 0x830]
	0x0398B330 BL 0x1C16CF4
	0x0398B334 ADRP X0, 0x7C5000
	0x0398B338 LDR X0, [X0 + 0x840]
	0x0398B33C BL 0x1C16CF4
	0x0398B340 ADRP X0, 0x7C5000
	0x0398B344 LDR X0, [X0 + 0x880]
	0x0398B348 BL 0x1C16CF4
	0x0398B34C ADRP X0, 0x7C5000
	0x0398B350 LDR X0, [X0 + 0x878]
	0x0398B354 BL 0x1C16CF4
	0x0398B358 ADRP X0, 0x7C5000
	0x0398B35C LDR X0, [X0 + 0x858]
	0x0398B360 BL 0x1C16CF4
	0x0398B364 ADRP X0, 0x7C5000
	0x0398B368 LDR X0, [X0 + 0x868]
	0x0398B36C BL 0x1C16CF4
	0x0398B370 ADRP X0, 0x7C5000
	0x0398B374 LDR X0, [X0 + 0x848]
	0x0398B378 BL 0x1C16CF4
	0x0398B37C ADRP X0, 0x7C5000
	0x0398B380 LDR X0, [X0 + 0x838]
	0x0398B384 BL 0x1C16CF4
	0x0398B388 ADRP X0, 0x7C5000
	0x0398B38C LDR X0, [X0 + 0x850]
	0x0398B390 BL 0x1C16CF4
	0x0398B394 ADRP X0, 0x7C5000
	0x0398B398 LDR X0, [X0 + 0x870]
	0x0398B39C BL 0x1C16CF4
	0x0398B3A0 ADRP X0, 0x7C5000
	0x0398B3A4 LDR X0, [X0 + 0x860]
	0x0398B3A8 BL 0x1C16CF4
	0x0398B3AC ADRP X0, 0x7C5000
	0x0398B3B0 LDR X0, [X0 + 0x828]
	0x0398B3B4 BL 0x1C16CF4
	0x0398B3B8 ADRP X14, 0x7C5000
	0x0398B3BC ADRP X13, 0x7C5000
	0x0398B3C0 ADRP X12, 0x7C5000
	0x0398B3C4 LDR X14, [X14 + 0x868]
	0x0398B3C8 LDR X13, [X13 + 0x880]
	0x0398B3CC LDR X12, [X12 + 0x878]
	0x0398B3D0 MOVZ W8, 0x1
	0x0398B3D4 STRB W8, [X21 + 0xA97]
	0x0398B3D8 LDR X8, [X29]
	0x0398B3DC LDR X9, [X19]
	0x0398B3E0 LDR X10, [X20]
	0x0398B3E4 LDP X20, X19, [X31 + 0x50]
	0x0398B3E8 LDR X8, [X8 + 0xB8]
	0x0398B3EC STP X9, X10, [X8]
	0x0398B3F0 LDR X8, [X29]
	0x0398B3F4 LDR X9, [X27]
	0x0398B3F8 LDR X11, [X28]
	0x0398B3FC LDP X28, X27, [X31 + 0x10]
	0x0398B400 LDR X10, [X8 + 0xB8]
	0x0398B404 STP X9, X11, [X10 + 0x10]
	0x0398B408 LDR X9, [X8 + 0xB8]
	0x0398B40C LDR X10, [X25]
	0x0398B410 LDR X11, [X26]
	0x0398B414 LDP X26, X25, [X31 + 0x20]
	0x0398B418 STP X10, X11, [X9 + 0x20]
	0x0398B41C LDR X9, [X8 + 0xB8]
	0x0398B420 LDR X10, [X23]
	0x0398B424 LDR X11, [X24]
	0x0398B428 LDP X24, X23, [X31 + 0x30]
	0x0398B42C STP X10, X11, [X9 + 0x30]
	0x0398B430 LDR X9, [X8 + 0xB8]
	0x0398B434 LDR X10, [X14]
	0x0398B438 LDR X11, [X22]
	0x0398B43C LDP X22, X21, [X31 + 0x40]
	0x0398B440 STP X10, X11, [X9 + 0x40]
	0x0398B444 LDR X8, [X8 + 0xB8]
	0x0398B448 LDR X9, [X12]
	0x0398B44C LDR X10, [X13]
	0x0398B450 STP X9, X10, [X8 + 0x50]
	0x0398B454 LDP X29, X30, [X31], #0x60
	0x0398B458 RET
	0x0398B45C STP X30, X25, [X31 - 0x40]!
	0x0398B460 STP X24, X23, [X31 + 0x10]
	0x0398B464 STP X22, X21, [X31 + 0x20]
	0x0398B468 STP X20, X19, [X31 + 0x30]
	0x0398B46C ADRP X20, 0xA56000
	0x0398B470 LDRB W8, [X20 + 0xA98]
	0x0398B474 MOV X19, X0
	0x0398B478 TBNZ X8, 0x0, 0x398B4B4
	0x0398B47C ADRP X0, 0x7C5000
	0x0398B480 LDR X0, [X0 + 0x888]
	0x0398B484 BL 0x1C16CF4
	0x0398B488 ADRP X0, 0x7C5000
	0x0398B48C LDR X0, [X0 + 0x890]
	0x0398B490 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 2496
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X19, X8
	015 Move X8, [X25+40]
	016 Move X23, 0xA57000
	017 Move X26, 0x7C6000
	018 Move X21, X1
	019 Move [X31+2488], X8
	020 Move W8, [X23+2704]
	021 Move X26, [X26+1280]
	022 Move X20, X0
	023 Add X27, X31, 800
	024 Add X22, X31, 224
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x7C6000
	030 Move X0, [X0+1328]
	031 Call 0x1C17CF4
	032 Move X0, 0x7C6000
	033 Move X0, [X0+1280]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2704], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Add X0, X31, 224
	039 Move W2, 224
	040 Move X1, X20
	041 Move [X31+496], W31
	042 Move [X31+464], V0
	043 Move [X31+472], V0
	044 Move [X31+28], V0
	045 Call 0x3EB2AC0
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move W8, [X31+328]
	050 Add X0, X31, 512
	051 Move [X31+512], V0
	052 Move [X31+520], V1
	053 Move W22, [X31+512]
	054 Move W23, [X31+516]
	055 Move X1, X31
	056 Move [X31+34], V2
	057 Move [X31+560], W8
	058 Call RenderTextureDescriptor.get_colorFormat, X0
	059 Move W24, W0
	060 Add X0, X31, 512
	061 Move X1, X31
	062 Call RenderTextureDescriptor.get_depthBufferBits, X0
	063 Move W5, [X31+528]
	064 Move W4, W0
	065 Add X0, X31, 448
	066 Move W1, W22
	067 Move W2, W23
	068 Move W3, W24
	069 Move X6, X31
	070 Call RenderTextureDescriptor..ctor, X0, X1, X2, X3, X4, X5
	071 Move W8, [X20+88]
	072 Add X0, X20, 56
	073 Move X1, X31
	074 Move [X31+480], W8
	075 Move W8, [X20+68]
	076 Move [X31+460], W8
	077 Move W8, [X20+96]
	078 Move [X31+488], W8
	079 Call RenderTextureDescriptor.get_sRGB, X0
	080 And W1, W0, 1
	081 Add X0, X31, 448
	082 Move X2, X31
	083 Call RenderTextureDescriptor.set_sRGB, X0, X1
	084 NotImplemented "Instruction MOVI not yet implemented."
	085 Add X0, X31, 568
	086 Move W2, 231
	087 Move W1, W31
	088 Move [X31+864], V0
	089 Move [X31+872], V0
	090 Move [X31+832], V0
	091 Move [X31+840], V0
	092 Move [X31+800], V0
	093 Move [X31+808], V0
	094 Call 0x3EB2B10
	095 Add X0, X31, 0
	096 Move W2, 224
	097 Move X1, X20
	098 Call 0x3EB2AC0
	099 Move V0, [X31+16]
	100 Move V1, [X31+32]
	101 Move X8, [X31+48]
	102 Move V2, [X31+448]
	103 Move V3, [X31+464]
	104 Move V4, [X31+30]
	105 Move W9, [X31+496]
	106 Add X0, X27, 96
	107 Move W2, 1584
	108 Move X1, X21
	109 Move [X31+800], V0
	110 Move [X31+808], V1
	111 Move [X31+832], X8
	112 Move [X27+40], V2
	113 Move [X27+56], V3
	114 Move [X27+72], V4
	115 Move [X31+888], W9
	116 Call 0x3EB2AC0
	117 Move X0, [X26]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X26]
	123 Move X8, [X0+184]
	124 Move X9, [X8]
	125 Compare X9, 0
	126 JumpIfEqual {170}
	127 Move X9, [X9+16]
	128 Compare X9, 0
	129 JumpIfEqual {170}
	130 Move X21, [X8+40]
	131 Move W8, [X20+204]
	132 Move X22, [X20+216]
	133 Move W23, [X9+24]
	134 Move W24, [X20+208]
	135 Add X9, X31, 568
	136 Add X0, X9, 7
	137 Move W2, 224
	138 Move X1, X20
	139 And W26, W8, 1
	140 Call 0x3EB2AC0
	141 Add X1, X31, 800
	142 Move W2, 1680
	143 Move X0, X19
	144 Call 0x3EB2AC0
	145 Add X0, X19, 1705
	146 Add X1, X31, 568
	147 Move W2, 231
	148 Move [X19+1680], X21
	149 Move [X19+1688], X22
	150 Move [X19+1696], W23
	151 Move [X19+1700], W24
	152 Move [X19+1704], W26
	153 Call 0x3EB2AC0
	154 Move X8, [X25+40]
	155 Move X9, [X31+2488]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add X31, X31, 2496
	158 Move X20, [X31+80]
	159 Move X19, [X31+88]
	160 Move X22, [X31+64]
	161 Move X21, [X31+72]
	162 Move X24, [X31+48]
	163 Move X23, [X31+56]
	164 Move X26, [X31+32]
	165 Move X25, [X31+40]
	166 Move X30, [X31+16]
	167 Move X27, [X31+24]
	168 Move X29, [X31+96]
	169 Return X0
	170 Call 0x1C17F20
	171 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x0398B630 ADRP X0, 0x7C5000
	0x0398B634 LDR X0, [X0 + 0x8B8]
	0x0398B638 BL 0x1C16CF4
	0x0398B63C ADRP X0, 0x7C5000
	0x0398B640 LDR X0, [X0 + 0x8B0]
	0x0398B644 BL 0x1C16CF4
	0x0398B648 ADRP X0, 0x7C5000
	0x0398B64C LDR X0, [X0 + 0x8A8]
	0x0398B650 BL 0x1C16CF4
	0x0398B654 MOVZ W8, 0x1
	0x0398B658 STRB W8, [X22 + 0xA99]
	0x0398B65C LDR X0, [X23]
	0x0398B660 BL 0x1C16F10
	0x0398B664 LDR X1, [X20]
	0x0398B668 MOV X20, X0
	0x0398B66C BL 0x3139D88
	0x0398B670 STR X20, [X19 + 0x10]
	0x0398B674 LDR X0, [X21]
	0x0398B678 MOVZ W1, 0x2
	0x0398B67C BL 0x1C16D6C
	0x0398B680 STR X0, [X19 + 0x18]
	0x0398B684 MOV X0, X19
	0x0398B688 LDP X20, X19, [X31 + 0x20]
	0x0398B68C LDP X22, X21, [X31 + 0x10]
	0x0398B690 MOV X1, X31
	0x0398B694 LDP X30, X23, [X31], #0x30
	0x0398B698 B 0x33BDD8C
	0x0398B69C LDR X0, [X0 + 0xB8]
	0x0398B6A0 RET
	0x0398B6A4 STR X1, [X0 + 0xB8]
	0x0398B6A8 RET
	0x0398B6AC STR X30, [X31 - 0x20]!
	0x0398B6B0 STP X20, X19, [X31 + 0x10]
	0x0398B6B4 ADRP X20, 0xA56000
	0x0398B6B8 ADRP X19, 0x7C5000
	0x0398B6BC LDRB W8, [X20 + 0xA9A]
	0x0398B6C0 LDR X19, [X19 + 0x8C0]
	0x0398B6C4 TBNZ X8, 0x0, 0x398B6DC
	0x0398B6C8 ADRP X0, 0x7C5000
	0x0398B6CC LDR X0, [X0 + 0x8C0]
	0x0398B6D0 BL 0x1C16CF4
	0x0398B6D4 MOVZ W8, 0x1
	0x0398B6D8 STRB W8, [X20 + 0xA9A]
	0x0398B6DC LDR X0, [X19]
	0x0398B6E0 LDR W8, [X0 + 0xE0]
	0x0398B6E4 CBNZ W8, 0x398B6F0
	0x0398B6E8 BL 0x1C16DFC
	0x0398B6EC LDR X0, [X19]
	0x0398B6F0 LDR X8, [X0 + 0xB8]
	0x0398B6F4 LDP X20, X19, [X31 + 0x10]
	0x0398B6F8 LDRB W0, [X8 + 0x10]
	0x0398B6FC LDR X30, [X31], #0x20
	0x0398B700 RET
	0x0398B704 STP X30, X21, [X31 - 0x20]!
	0x0398B708 STP X20, X19, [X31 + 0x10]
	0x0398B70C ADRP X21, 0xA56000
	0x0398B710 ADRP X20, 0x7C5000
	0x0398B714 LDRB W8, [X21 + 0xA9B]
	0x0398B718 LDR X20, [X20 + 0x8C0]
	0x0398B71C MOV W19, W0
	0x0398B720 TBNZ X8, 0x0, 0x398B738
	0x0398B724 ADRP X0, 0x7C5000
	0x0398B728 LDR X0, [X0 + 0x8C0]
	0x0398B72C BL 0x1C16CF4
	0x0398B730 MOVZ W8, 0x1
	0x0398B734 STRB W8, [X21 + 0xA9B]
	0x0398B738 LDR X0, [X20]
	0x0398B73C LDR W8, [X0 + 0xE0]
	0x0398B740 CBNZ W8, 0x398B74C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xA57000
	009 Move X24, 0x7C6000
	010 Move X20, 0x7C6000
	011 Move X23, 0x7C6000
	012 Move X22, 0x7C6000
	013 Move X21, 0x7C6000
	014 Move W8, [X19+2705]
	015 Move X24, [X24+1808]
	016 Move X20, [X20+1280]
	017 Move X23, [X23+1816]
	018 Move X22, [X22+1824]
	019 Move X21, [X21+1832]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x7C6000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0x7C6000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x7C6000
	031 Move X0, [X0+1808]
	032 Call 0x1C17CF4
	033 Move X0, 0x7C6000
	034 Move X0, [X0+1832]
	035 Call 0x1C17CF4
	036 Move X0, 0x7C6000
	037 Move X0, [X0+1280]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+2705], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Call XRLayout..ctor, X0
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move [X8], X19
	048 Move X8, [X20]
	049 Move X8, [X8+184]
	050 Move [X8+8], X31
	051 Move X0, [X23]
	052 Call 0x1C17F10
	053 Move X1, [X22]
	054 Move X19, X0
	055 Call List`1<Object>..ctor, X0
	056 Move X8, [X20]
	057 Move W22, 1
	058 Move X8, [X8+184]
	059 Move [X8+16], X19
	060 Move [X8+32], W22
	061 Move [X8+56], X31
	062 Move X0, [X21]
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Call XRPass..ctor, X0
	066 Move X8, [X20]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X8, [X8+184]
	070 Move [X8+64], X19
	071 Move [X8+72], W22
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move [X8+80], W31
	077 Move X30, [X31+64]
	078 Return 

