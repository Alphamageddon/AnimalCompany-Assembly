Type: UnityEngine.Experimental.Rendering.XRBuiltinShaderConstants

Method: System.Void UpdateBuiltinShaderConstants(UnityEngine.Matrix4x4 viewMatrix, UnityEngine.Matrix4x4 projMatrix, System.Boolean renderIntoTexture, System.Int32 viewIndex)

Disassembly:
	0x03984E84 ADRP X0, 0x7CC000
	0x03984E88 LDR X0, [X0 + 0x4A8]
	0x03984E8C BL 0x1C16CF4
	0x03984E90 ADRP X0, 0x7CC000
	0x03984E94 LDR X0, [X0 + 0x4F8]
	0x03984E98 BL 0x1C16CF4
	0x03984E9C ADRP X0, 0x7CC000
	0x03984EA0 LDR X0, [X0 + 0x4F0]
	0x03984EA4 BL 0x1C16CF4
	0x03984EA8 ADRP X0, 0x7CC000
	0x03984EAC LDR X0, [X0 + 0x4C0]
	0x03984EB0 BL 0x1C16CF4
	0x03984EB4 ADRP X0, 0x7CC000
	0x03984EB8 LDR X0, [X0 + 0x4E8]
	0x03984EBC BL 0x1C16CF4
	0x03984EC0 ADRP X0, 0x7CC000
	0x03984EC4 LDR X0, [X0 + 0x4B8]
	0x03984EC8 BL 0x1C16CF4
	0x03984ECC ADRP X0, 0x7CC000
	0x03984ED0 LDR X0, [X0 + 0x4E0]
	0x03984ED4 BL 0x1C16CF4
	0x03984ED8 ADRP X0, 0x7CC000
	0x03984EDC LDR X0, [X0 + 0x4D0]
	0x03984EE0 BL 0x1C16CF4
	0x03984EE4 ADRP X0, 0x7CC000
	0x03984EE8 LDR X0, [X0 + 0x4D8]
	0x03984EEC BL 0x1C16CF4
	0x03984EF0 ADRP X0, 0x7CC000
	0x03984EF4 LDR X0, [X0 + 0x4C8]
	0x03984EF8 BL 0x1C16CF4
	0x03984EFC MOVZ W8, 0x1
	0x03984F00 STRB W8, [X20 + 0xA53]
	0x03984F04 LDR X0, [X22]
	0x03984F08 MOV X1, X31
	0x03984F0C BL 0x3C124EC
	0x03984F10 LDR X8, [X19]
	0x03984F14 MOV X1, X31
	0x03984F18 LDR X8, [X8 + 0xB8]
	0x03984F1C STR W0, [X8]
	0x03984F20 LDR X0, [X29]
	0x03984F24 BL 0x3C124EC
	0x03984F28 LDR X8, [X19]
	0x03984F2C MOV X1, X31
	0x03984F30 LDR X8, [X8 + 0xB8]
	0x03984F34 STR W0, [X8 + 0x4]
	0x03984F38 LDR X0, [X28]
	0x03984F3C BL 0x3C124EC
	0x03984F40 LDR X8, [X19]
	0x03984F44 MOV X1, X31
	0x03984F48 LDR X8, [X8 + 0xB8]
	0x03984F4C STR W0, [X8 + 0x8]
	0x03984F50 LDR X0, [X27]
	0x03984F54 BL 0x3C124EC
	0x03984F58 LDR X8, [X19]
	0x03984F5C MOV X1, X31
	0x03984F60 LDR X8, [X8 + 0xB8]
	0x03984F64 STR W0, [X8 + 0xC]
	0x03984F68 LDR X0, [X26]
	0x03984F6C BL 0x3C124EC
	0x03984F70 LDR X8, [X19]
	0x03984F74 MOV X1, X31
	0x03984F78 LDR X8, [X8 + 0xB8]
	0x03984F7C STR W0, [X8 + 0x10]
	0x03984F80 LDR X0, [X25]
	0x03984F84 BL 0x3C124EC
	0x03984F88 LDR X8, [X19]
	0x03984F8C MOV X1, X31
	0x03984F90 LDR X8, [X8 + 0xB8]
	0x03984F94 STR W0, [X8 + 0x14]
	0x03984F98 LDR X0, [X24]
	0x03984F9C BL 0x3C124EC
	0x03984FA0 LDR X8, [X19]
	0x03984FA4 MOV X1, X31
	0x03984FA8 LDR X8, [X8 + 0xB8]
	0x03984FAC STR W0, [X8 + 0x18]
	0x03984FB0 LDR X0, [X23]
	0x03984FB4 BL 0x3C124EC
	0x03984FB8 LDR X8, [X19]
	0x03984FBC MOV X1, X31
	0x03984FC0 LDR X8, [X8 + 0xB8]
	0x03984FC4 STR W0, [X8 + 0x1C]
	0x03984FC8 ADRP X8, 0x7CC000
	0x03984FCC LDR X8, [X8 + 0x4F8]
	0x03984FD0 LDR X0, [X8]
	0x03984FD4 BL 0x3C124EC
	0x03984FD8 LDR X8, [X19]
	0x03984FDC MOVZ W1, 0x2
	0x03984FE0 LDR X8, [X8 + 0xB8]
	0x03984FE4 STR W0, [X8 + 0x20]
	0x03984FE8 LDR X0, [X21]
	0x03984FEC BL 0x1C16D6C
	0x03984FF0 LDR X8, [X19]
	0x03984FF4 MOVZ W1, 0x2
	0x03984FF8 LDR X8, [X8 + 0xB8]
	0x03984FFC STR X0, [X8 + 0x28]
	0x03985000 LDR X0, [X21]
	0x03985004 BL 0x1C16D6C
	0x03985008 LDR X8, [X19]
	0x0398500C MOVZ W1, 0x2
	0x03985010 LDR X8, [X8 + 0xB8]
	0x03985014 STR X0, [X8 + 0x30]
	0x03985018 LDR X0, [X21]
	0x0398501C BL 0x1C16D6C
	0x03985020 LDR X8, [X19]
	0x03985024 MOVZ W1, 0x2
	0x03985028 LDR X8, [X8 + 0xB8]
	0x0398502C STR X0, [X8 + 0x38]
	0x03985030 LDR X0, [X21]
	0x03985034 BL 0x1C16D6C
	0x03985038 LDR X8, [X19]
	0x0398503C MOVZ W1, 0x2
	0x03985040 LDR X8, [X8 + 0xB8]
	0x03985044 STR X0, [X8 + 0x40]
	0x03985048 LDR X0, [X21]
	0x0398504C BL 0x1C16D6C
	0x03985050 LDR X8, [X19]
	0x03985054 MOVZ W1, 0x2
	0x03985058 LDR X8, [X8 + 0xB8]
	0x0398505C STR X0, [X8 + 0x48]
	0x03985060 LDR X0, [X21]
	0x03985064 BL 0x1C16D6C
	0x03985068 LDR X8, [X19]
	0x0398506C MOVZ W1, 0x2
	0x03985070 LDR X8, [X8 + 0xB8]
	0x03985074 STR X0, [X8 + 0x50]
	0x03985078 LDR X0, [X21]
	0x0398507C BL 0x1C16D6C
	0x03985080 LDR X8, [X19]
	0x03985084 MOVZ W1, 0x2
	0x03985088 LDR X8, [X8 + 0xB8]
	0x0398508C STR X0, [X8 + 0x58]
	0x03985090 LDR X0, [X21]
	0x03985094 BL 0x1C16D6C
	0x03985098 LDR X8, [X19]
	0x0398509C MOVZ W1, 0x2
	0x039850A0 LDR X8, [X8 + 0xB8]
	0x039850A4 STR X0, [X8 + 0x60]
	0x039850A8 ADRP X8, 0x7C9000
	0x039850AC LDR X8, [X8 + 0x48]
	0x039850B0 LDR X0, [X8]
	0x039850B4 BL 0x1C16D6C
	0x039850B8 LDR X8, [X19]
	0x039850BC LDP X20, X19, [X31 + 0x50]
	0x039850C0 LDP X22, X21, [X31 + 0x40]
	0x039850C4 LDP X24, X23, [X31 + 0x30]
	0x039850C8 LDR X8, [X8 + 0xB8]
	0x039850CC LDP X26, X25, [X31 + 0x20]
	0x039850D0 LDP X28, X27, [X31 + 0x10]
	0x039850D4 STR X0, [X8 + 0x68]
	0x039850D8 LDP X29, X30, [X31], #0x60
	0x039850DC RET
	0x039850E0 STP D9, D8, [X31 - 0x40]!
	0x039850E4 STP X30, X23, [X31 + 0x10]
	0x039850E8 STP X22, X21, [X31 + 0x20]
	0x039850EC STP X20, X19, [X31 + 0x30]
	0x039850F0 ADRP X23, 0xA5C000
	0x039850F4 ADRP X22, 0x76E000
	0x039850F8 LDRB W8, [X23 + 0xA54]
	0x039850FC LDR X22, [X22 + 0x598]
	0x03985100 MOV W21, W2
	0x03985104 MOV X19, X1
	0x03985108 MOV X20, X0
	0x0398510C TBNZ X8, 0x0, 0x3985130
	0x03985110 ADRP X0, 0x76E000
	0x03985114 LDR X0, [X0 + 0x598]
	0x03985118 BL 0x1C16CF4
	0x0398511C ADRP X0, 0x7CB000
	0x03985120 LDR X0, [X0 + 0x500]
	0x03985124 BL 0x1C16CF4
	0x03985128 MOVZ W8, 0x1
	0x0398512C STRB W8, [X23 + 0xA54]
	0x03985130 LDR X0, [X22]
	0x03985134 LDR W8, [X0 + 0xE0]
	0x03985138 CBNZ W8, 0x3985140
	0x0398513C BL 0x1C16DFC
	0x03985140 MOV X0, X19
	0x03985144 MOV X1, X31
	0x03985148 MOV X2, X31
	0x0398514C BL 0x3C3883C
	0x03985150 TBZ X0, 0x0, 0x3985168
	0x03985154 LDP X20, X19, [X31 + 0x30]
	0x03985158 LDP X22, X21, [X31 + 0x20]
	0x0398515C LDP X30, X23, [X31 + 0x10]
	0x03985160 LDP D9, D8, [X31], #0x40
	0x03985164 RET
	0x03985168 CBZ X19, 0x3985288
	0x0398516C MOV X0, X19
	0x03985170 MOV X1, X31
	0x03985174 BL 0x3C03AD4
	0x03985178 CMP W0, 0x1
	0x0398517C B.EQ 0x3985194
	0x03985180 MOV X0, X19
	0x03985184 MOV X1, X31
	0x03985188 BL 0x3C03AD4
	0x0398518C CMP W0, 0x8
	0x03985190 B.NE 0x39851D0
	0x03985194 MOV X0, X19
	0x03985198 MOV X1, X31
	0x0398519C BL 0x3C040B4
	0x039851A0 LDR X8, [X22]
	0x039851A4 MOV X22, X0
	0x039851A8 LDR W9, [X8 + 0xE0]
	0x039851AC CBNZ W9, 0x39851B8
	0x039851B0 MOV X0, X8
	0x039851B4 BL 0x1C16DFC
	0x039851B8 MOV X0, X22
	0x039851BC MOV X1, X31
	0x039851C0 MOV X2, X31
	0x039851C4 BL 0x3C3883C
	0x039851C8 AND W8, W0, 0x1
	0x039851CC B 0x39851D4
	0x039851D0 MOV W8, W31
	0x039851D4 ADRP X22, 0x7CB000
	0x039851D8 LDR X22, [X22 + 0x500]
	0x039851DC AND W21, W21, W8, 0x0
	0x039851E0 LDR X0, [X22]
	0x039851E4 LDR W9, [X0 + 0xE0]
	0x039851E8 CBNZ W9, 0x39851F0
	0x039851EC BL 0x1C16DFC
	0x039851F0 BL 0x398528C
	0x039851F4 ANDS W31, W0, W21, 0x0
	0x039851F8 B.EQ 0x3985250
	0x039851FC MOV X0, X19
	0x03985200 MOV X1, X31
	0x03985204 BL 0x3C035DC
	0x03985208 MOV X0, X19
	0x0398520C MOV X1, X31
	0x03985210 MOV V8.16B, V0.16B
	0x03985214 BL 0x3C03618
	0x03985218 LDR X0, [X22]
	0x0398521C MOV V9.16B, V0.16B
	0x03985220 LDR W8, [X0 + 0xE0]
	0x03985224 CBNZ W8, 0x398522C
	0x03985228 BL 0x1C16DFC
	0x0398522C MOV V0.16B, V8.16B
	0x03985230 MOV V1.16B, V9.16B
	0x03985234 BL 0x3985320
	0x03985238 MOV X0, X19
	0x0398523C LDP X20, X19, [X31 + 0x30]
	0x03985240 LDP X22, X21, [X31 + 0x20]
	0x03985244 LDP X30, X23, [X31 + 0x10]
	0x03985248 LDP D9, D8, [X31], #0x40
	0x0398524C B 0x39853E4
	0x03985250 LDR X0, [X22]
	0x03985254 LDR W8, [X0 + 0xE0]
	0x03985258 CBNZ W8, 0x3985264
	0x0398525C BL 0x1C16DFC
	0x03985260 LDR X0, [X22]
	0x03985264 LDR X8, [X0 + 0xB8]
	0x03985268 MOV X0, X20
	0x0398526C MOV X1, X19
	0x03985270 LDP X20, X19, [X31 + 0x30]
	0x03985274 LDR X2, [X8 + 0x40]
	0x03985278 LDP X22, X21, [X31 + 0x20]
	0x0398527C LDP X30, X23, [X31 + 0x10]
	0x03985280 LDP D9, D8, [X31], #0x40
	0x03985284 B 0x3985904
	0x03985288 BL 0x1C16F20
	0x0398528C STR X30, [X31 - 0x20]!
	0x03985290 STP X20, X19, [X31 + 0x10]
	0x03985294 ADRP X20, 0xA5C000
	0x03985298 ADRP X19, 0x7CB000
	0x0398529C LDRB W8, [X20 + 0xA78]
	0x039852A0 LDR X19, [X19 + 0x500]
	0x039852A4 TBNZ X8, 0x0, 0x39852BC
	0x039852A8 ADRP X0, 0x7CB000
	0x039852AC LDR X0, [X0 + 0x500]
	0x039852B0 BL 0x1C16CF4
	0x039852B4 MOVZ W8, 0x1
	0x039852B8 STRB W8, [X20 + 0xA78]
	0x039852BC LDR X0, [X19]
	0x039852C0 LDR W8, [X0 + 0xE0]
	0x039852C4 CBNZ W8, 0x39852D0
	0x039852C8 BL 0x1C16DFC
	0x039852CC LDR X0, [X19]
	0x039852D0 LDR X8, [X0 + 0xB8]
	0x039852D4 LDR X8, [X8 + 0x18]
	0x039852D8 CBZ X8, 0x398530C
	0x039852DC LDR W9, [X0 + 0xE0]
	0x039852E0 CBNZ W9, 0x39852F8
	0x039852E4 BL 0x1C16DFC
	0x039852E8 LDR X8, [X19]
	0x039852EC LDR X8, [X8 + 0xB8]
	0x039852F0 LDR X8, [X8 + 0x18]
	0x039852F4 CBZ X8, 0x398531C
	0x039852F8 LDP X20, X19, [X31 + 0x10]
	0x039852FC MOV X0, X8
	0x03985300 MOV X1, X31
	0x03985304 LDR X30, [X31], #0x20
	0x03985308 B 0x3C989A8
	0x0398530C LDP X20, X19, [X31 + 0x10]
	0x03985310 MOV W0, W31
	0x03985314 LDR X30, [X31], #0x20
	0x03985318 RET
	0x0398531C BL 0x1C16F20
	0x03985320 STP D9, D8, [X31 - 0x30]!
	0x03985324 STR X30, [X31 + 0x10]
	0x03985328 STP X20, X19, [X31 + 0x20]
	0x0398532C ADRP X20, 0xA5C000
	0x03985330 ADRP X19, 0x7CB000
	0x03985334 LDRB W8, [X20 + 0xA88]
	0x03985338 LDR X19, [X19 + 0x500]
	0x0398533C MOV V8.16B, V1.16B
	0x03985340 MOV V9.16B, V0.16B
	0x03985344 TBNZ X8, 0x0, 0x398535C
	0x03985348 ADRP X0, 0x7CB000
	0x0398534C LDR X0, [X0 + 0x500]
	0x03985350 BL 0x1C16CF4
	0x03985354 MOVZ W8, 0x1
	0x03985358 STRB W8, [X20 + 0xA88]
	0x0398535C LDR X0, [X19]
	0x03985360 LDR W8, [X0 + 0xE0]
	0x03985364 CBNZ W8, 0x3985370
	0x03985368 BL 0x1C16DFC
	0x0398536C LDR X0, [X19]
	0x03985370 LDR X8, [X0 + 0xB8]
	0x03985374 LDR X8, [X8 + 0x18]
	0x03985378 CBZ X8, 0x39853D0
	0x0398537C LDR W9, [X0 + 0xE0]
	0x03985380 CBNZ W9, 0x3985398
	0x03985384 BL 0x1C16DFC
	0x03985388 LDR X8, [X19]
	0x0398538C LDR X8, [X8 + 0xB8]
	0x03985390 LDR X8, [X8 + 0x18]
	0x03985394 CBZ X8, 0x39853E0
	0x03985398 MOV X0, X8
	0x0398539C MOV V0.16B, V9.16B
	0x039853A0 MOV X1, X31
	0x039853A4 BL 0x3E6565C
	0x039853A8 LDR X8, [X19]
	0x039853AC LDR X8, [X8 + 0xB8]
	0x039853B0 LDR X0, [X8 + 0x18]
	0x039853B4 CBZ X0, 0x39853E0
	0x039853B8 LDP X20, X19, [X31 + 0x20]
	0x039853BC LDR X30, [X31 + 0x10]
	0x039853C0 MOV V0.16B, V8.16B
	0x039853C4 MOV X1, X31
	0x039853C8 LDP D9, D8, [X31], #0x30
	0x039853CC B 0x3E656A8
	0x039853D0 LDP X20, X19, [X31 + 0x20]
	0x039853D4 LDR X30, [X31 + 0x10]
	0x039853D8 LDP D9, D8, [X31], #0x30
	0x039853DC RET
	0x039853E0 BL 0x1C16F20
	0x039853E4 STP X29, X30, [X31 - 0x50]!
	0x039853E8 STP X26, X25, [X31 + 0x10]
	0x039853EC STP X24, X23, [X31 + 0x20]
	0x039853F0 STP X22, X21, [X31 + 0x30]
	0x039853F4 STP X20, X19, [X31 + 0x40]
	0x039853F8 SUB X31, X31, 0x2000
	0x039853FC SUB X31, X31, 0xC70
	0x03985400 MRS X23, 0xC000
	0x03985404 LDR X8, [X23 + 0x28]
	0x03985408 ADRP X20, 0xA5C000
	0x0398540C ADRP X24, 0x7CB000
	0x03985410 MOV X19, X0

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 1664
	010 Move X24, 0xA5E000
	011 Move X23, 0x7CD000
	012 Move W8, [X24+2640]
	013 Move X23, [X23+1192]
	014 Move W19, W3
	015 Move W20, W2
	016 Move X22, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x7CD000
	023 Move X0, [X0+1192]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2640], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X23]
	033 Move X8, [X0+184]
	034 Move V0, [X22+32]
	035 Move V1, [X22+48]
	036 Move V2, [X22]
	037 Move V3, [X22+16]
	038 Move X8, [X8+40]
	039 Move [X31+103], V1
	040 Move [X31+102], V0
	041 Move [X31+101], V3
	042 Move [X31+100], V2
	043 Compare X8, 0
	044 JumpIfEqual {461}
	045 Move V0, [X31+100]
	046 Move V1, [X31+101]
	047 Move V2, [X31+102]
	048 Move V3, [X31+103]
	049 Move [X31+96], V0
	050 Move [X31+97], V1
	051 Move [X31+98], V2
	052 Move [X31+99], V3
	053 Move W9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move V0, [X31+98]
	056 Move V1, [X31+99]
	057 Move V2, [X31+96]
	058 Move V3, [X31+97]
	059 Move X22, W19
	060 Add X8, X8, X22
	061 Move [X8+64], V0
	062 Move [X8+72], V1
	063 Move [X8+32], V2
	064 Move [X8+40], V3
	065 Move X8, [X23]
	066 Move V0, [X21+32]
	067 Move V1, [X21+48]
	068 Move V2, [X21]
	069 Move V3, [X21+16]
	070 Move X8, [X8+184]
	071 Move X8, [X8+56]
	072 Move [X31+95], V1
	073 Move [X31+94], V0
	074 Move [X31+93], V3
	075 Move [X31+92], V2
	076 Compare X8, 0
	077 JumpIfEqual {461}
	078 Move V0, [X31+92]
	079 Move V1, [X31+93]
	080 Move V2, [X31+94]
	081 Move V3, [X31+95]
	082 Move [X31+88], V0
	083 Move [X31+89], V1
	084 Move [X31+90], V2
	085 Move [X31+91], V3
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move V0, [X31+90]
	089 Move V1, [X31+91]
	090 Move V2, [X31+88]
	091 Move V3, [X31+89]
	092 Add X8, X8, X22
	093 Move [X8+64], V0
	094 Move [X8+72], V1
	095 Move [X8+32], V2
	096 Move [X8+40], V3
	097 Move X8, [X23]
	098 Move X8, [X8+184]
	099 Move X9, [X8+40]
	100 Compare X9, 0
	101 JumpIfEqual {461}
	102 Move W10, [X9+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X9, X9, X22
	105 Move V0, [X9+64]
	106 Move V1, [X9+80]
	107 Move V2, [X9+32]
	108 Move V3, [X9+48]
	109 Move X21, [X8+72]
	110 And W1, W20, 1
	111 Add X8, X31, 1280
	112 Add X0, X31, 1216
	113 Move X2, X31
	114 Move [X31+79], V1
	115 Move [X31+78], V0
	116 Move [X31+77], V3
	117 Move [X31+76], V2
	118 Call GL.GetGPUProjectionMatrix, X0, X1
	119 Move V0, [X31+80]
	120 Move V1, [X31+81]
	121 Move V2, [X31+82]
	122 Move V3, [X31+83]
	123 Move [X31+84], V0
	124 Move [X31+85], V1
	125 Move [X31+86], V2
	126 Move [X31+87], V3
	127 Compare X21, 0
	128 JumpIfEqual {461}
	129 Move V0, [X31+84]
	130 Move V1, [X31+85]
	131 Move V2, [X31+86]
	132 Move V3, [X31+87]
	133 Move [X31+72], V0
	134 Move [X31+73], V1
	135 Move [X31+74], V2
	136 Move [X31+75], V3
	137 Move W8, [X21+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move V0, [X31+74]
	140 Move V1, [X31+75]
	141 Move V2, [X31+72]
	142 Move V3, [X31+73]
	143 Add X8, X21, X22
	144 Move [X8+64], V0
	145 Move [X8+72], V1
	146 Move [X8+32], V2
	147 Move [X8+40], V3
	148 Move X8, [X23]
	149 Move X8, [X8+184]
	150 Move X9, [X8+72]
	151 Compare X9, 0
	152 JumpIfEqual {461}
	153 Move W10, [X9+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add X9, X9, X22
	156 Move V0, [X9+64]
	157 Move V1, [X9+80]
	158 Move V2, [X9+32]
	159 Move V3, [X9+48]
	160 Move X20, [X8+88]
	161 Move [X31+83], V1
	162 Move [X31+82], V0
	163 Move [X31+81], V3
	164 Move [X31+80], V2
	165 Move X8, [X8+56]
	166 Compare X8, 0
	167 JumpIfEqual {461}
	168 Move W9, [X8+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add X8, X8, X22
	171 Move V2, [X8+32]
	172 Move V3, [X8+48]
	173 Move V4, [X8+64]
	174 Move V5, [X8+80]
	175 Move V0, [X31+80]
	176 Move V1, [X31+81]
	177 Move [X31+69], V3
	178 Move [X31+71], V5
	179 Move [X31+70], V4
	180 Move [X31+68], V2
	181 Move [X31+896], V0
	182 Move [X31+904], V1
	183 Move V0, [X31+82]
	184 Move V1, [X31+83]
	185 Move V2, [X31+70]
	186 Move V3, [X31+71]
	187 Move V4, [X31+68]
	188 Move V5, [X31+69]
	189 Add X8, X31, 960
	190 Add X0, X31, 896
	191 Add X1, X31, 832
	192 Move X2, X31
	193 Move [X31+928], V0
	194 Move [X31+936], V1
	195 Move [X31+864], V2
	196 Move [X31+872], V3
	197 Move [X31+832], V4
	198 Move [X31+840], V5
	199 Call Matrix4x4.op_Multiply, X0, X1
	200 Move V0, [X31+960]
	201 Move V1, [X31+976]
	202 Move V2, [X31+992]
	203 Move V3, [X31+1008]
	204 Move [X31+64], V0
	205 Move [X31+65], V1
	206 Move [X31+66], V2
	207 Move [X31+67], V3
	208 Compare X20, 0
	209 JumpIfEqual {461}
	210 Move V0, [X31+64]
	211 Move V1, [X31+65]
	212 Move V2, [X31+66]
	213 Move V3, [X31+67]
	214 Move [X31+768], V0
	215 Move [X31+776], V1
	216 Move [X31+800], V2
	217 Move [X31+808], V3
	218 Move W8, [X20+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move V0, [X31+800]
	221 Move V1, [X31+816]
	222 Move V2, [X31+768]
	223 Move V3, [X31+784]
	224 Add X8, X20, X22
	225 Move [X8+64], V0
	226 Move [X8+72], V1
	227 Move [X8+32], V2
	228 Move [X8+40], V3
	229 Move X8, [X23]
	230 Move X8, [X8+184]
	231 Move X9, [X8+40]
	232 Compare X9, 0
	233 JumpIfEqual {461}
	234 Move W10, [X9+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Add X9, X9, X22
	237 Move V0, [X9+64]
	238 Move V1, [X9+80]
	239 Move V2, [X9+32]
	240 Move V3, [X9+48]
	241 Move X20, [X8+48]
	242 Add X8, X31, 704
	243 Add X0, X31, 640
	244 Move X1, X31
	245 Move [X31+672], V0
	246 Move [X31+680], V1
	247 Move [X31+640], V2
	248 Move [X31+648], V3
	249 Call Matrix4x4.Inverse, X0
	250 Move V0, [X31+704]
	251 Move V1, [X31+720]
	252 Move V2, [X31+736]
	253 Move V3, [X31+752]
	254 Move [X31+960], V0
	255 Move [X31+968], V1
	256 Move [X31+992], V2
	257 Move [X31+1000], V3
	258 Compare X20, 0
	259 JumpIfEqual {461}
	260 Move V0, [X31+960]
	261 Move V1, [X31+976]
	262 Move V2, [X31+992]
	263 Move V3, [X31+1008]
	264 Move [X31+576], V0
	265 Move [X31+584], V1
	266 Move [X31+608], V2
	267 Move [X31+616], V3
	268 Move W8, [X20+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move V0, [X31+608]
	271 Move V1, [X31+624]
	272 Move V2, [X31+576]
	273 Move V3, [X31+592]
	274 Add X8, X20, X22
	275 Move [X8+64], V0
	276 Move [X8+72], V1
	277 Move [X8+32], V2
	278 Move [X8+40], V3
	279 Move X8, [X23]
	280 Move X8, [X8+184]
	281 Move X9, [X8+56]
	282 Compare X9, 0
	283 JumpIfEqual {461}
	284 Move W10, [X9+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add X9, X9, X22
	287 Move V0, [X9+64]
	288 Move V1, [X9+80]
	289 Move V2, [X9+32]
	290 Move V3, [X9+48]
	291 Move X20, [X8+64]
	292 Add X8, X31, 512
	293 Add X0, X31, 448
	294 Move X1, X31
	295 Move [X31+480], V0
	296 Move [X31+488], V1
	297 Move [X31+448], V2
	298 Move [X31+456], V3
	299 Call Matrix4x4.Inverse, X0
	300 Move V0, [X31+512]
	301 Move V1, [X31+528]
	302 Move V2, [X31+544]
	303 Move V3, [X31+560]
	304 Move [X31+704], V0
	305 Move [X31+712], V1
	306 Move [X31+736], V2
	307 Move [X31+744], V3
	308 Compare X20, 0
	309 JumpIfEqual {461}
	310 Move V0, [X31+704]
	311 Move V1, [X31+720]
	312 Move V2, [X31+736]
	313 Move V3, [X31+752]
	314 Move [X31+384], V0
	315 Move [X31+392], V1
	316 Move [X31+416], V2
	317 Move [X31+424], V3
	318 Move W8, [X20+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move V0, [X31+416]
	321 Move V1, [X31+432]
	322 Move V2, [X31+384]
	323 Move V3, [X31+400]
	324 Add X8, X20, X22
	325 Move [X8+64], V0
	326 Move [X8+72], V1
	327 Move [X8+32], V2
	328 Move [X8+40], V3
	329 Move X8, [X23]
	330 Move X8, [X8+184]
	331 Move X9, [X8+72]
	332 Compare X9, 0
	333 JumpIfEqual {461}
	334 Move W10, [X9+24]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Add X9, X9, X22
	337 Move V0, [X9+64]
	338 Move V1, [X9+80]
	339 Move V2, [X9+32]
	340 Move V3, [X9+48]
	341 Move X20, [X8+80]
	342 Add X8, X31, 320
	343 Add X0, X31, 256
	344 Move X1, X31
	345 Move [X31+288], V0
	346 Move [X31+296], V1
	347 Move [X31+256], V2
	348 Move [X31+264], V3
	349 Call Matrix4x4.Inverse, X0
	350 Move V0, [X31+320]
	351 Move V1, [X31+336]
	352 Move V2, [X31+352]
	353 Move V3, [X31+368]
	354 Move [X31+512], V0
	355 Move [X31+520], V1
	356 Move [X31+544], V2
	357 Move [X31+552], V3
	358 Compare X20, 0
	359 JumpIfEqual {461}
	360 Move V0, [X31+512]
	361 Move V1, [X31+528]
	362 Move V2, [X31+544]
	363 Move V3, [X31+560]
	364 Move [X31+192], V0
	365 Move [X31+200], V1
	366 Move [X31+224], V2
	367 Move [X31+232], V3
	368 Move W8, [X20+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move V0, [X31+224]
	371 Move V1, [X31+240]
	372 Move V2, [X31+192]
	373 Move V3, [X31+208]
	374 Add X8, X20, X22
	375 Move [X8+64], V0
	376 Move [X8+72], V1
	377 Move [X8+32], V2
	378 Move [X8+40], V3
	379 Move X8, [X23]
	380 Move X8, [X8+184]
	381 Move X9, [X8+88]
	382 Compare X9, 0
	383 JumpIfEqual {461}
	384 Move W10, [X9+24]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Add X9, X9, X22
	387 Move V0, [X9+64]
	388 Move V1, [X9+80]
	389 Move V2, [X9+32]
	390 Move V3, [X9+48]
	391 Move X20, [X8+96]
	392 Add X8, X31, 128
	393 Add X0, X31, 64
	394 Move X1, X31
	395 Move [X31+96], V0
	396 Move [X31+104], V1
	397 Move [X31+64], V2
	398 Move [X31+72], V3
	399 Call Matrix4x4.Inverse, X0
	400 Move V0, [X31+128]
	401 Move V1, [X31+144]
	402 Move V2, [X31+160]
	403 Move V3, [X31+176]
	404 Move [X31+320], V0
	405 Move [X31+328], V1
	406 Move [X31+352], V2
	407 Move [X31+360], V3
	408 Compare X20, 0
	409 JumpIfEqual {461}
	410 Move V0, [X31+320]
	411 Move V1, [X31+336]
	412 Move V2, [X31+352]
	413 Move V3, [X31+368]
	414 Move [X31], V0
	415 Move [X31+8], V1
	416 Move [X31+32], V2
	417 Move [X31+40], V3
	418 Move W8, [X20+24]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move V0, [X31+32]
	421 Move V1, [X31+48]
	422 Move V2, [X31]
	423 Move V3, [X31+16]
	424 Add X8, X20, X22
	425 Move [X8+64], V0
	426 Move [X8+72], V1
	427 Move [X8+32], V2
	428 Move [X8+40], V3
	429 Move X8, [X23]
	430 Move X9, [X8+184]
	431 Move X8, [X9+64]
	432 Compare X8, 0
	433 JumpIfEqual {461}
	434 Move W10, [X8+24]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move X20, [X9+104]
	437 Add X8, X8, X22
	438 Add X0, X8, 32
	439 Move W1, 3
	440 Move X2, X31
	441 Call Matrix4x4.GetColumn, X0, X1
	442 Compare X20, 0
	443 JumpIfEqual {461}
	444 Move W8, [X20+24]
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Add X8, X20, X22
	447 Move [X8+32], S0
	448 Move [X8+40], S1
	449 Move [X8+40], S2
	450 Move [X8+48], S3
	451 Add X31, X31, 1664
	452 Move X20, [X31+48]
	453 Move X19, [X31+56]
	454 Move X22, [X31+32]
	455 Move X21, [X31+40]
	456 Move X24, [X31+16]
	457 Move X23, [X31+24]
	458 Move X29, [X31+64]
	459 Move X30, [X31+72]
	460 Return 
	461 Call 0x1C17F20
	462 Call 0x1C17F28

Method: System.Void SetBuiltinShaderConstants(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03985414 STR X8, [X31 + 0x2C68]
	0x03985418 LDRB W8, [X20 + 0xA8C]
	0x0398541C LDR X24, [X24 + 0x500]
	0x03985420 TBNZ X8, 0x0, 0x3985438
	0x03985424 ADRP X0, 0x7CB000
	0x03985428 LDR X0, [X0 + 0x500]
	0x0398542C BL 0x1C16CF4
	0x03985430 MOVZ W8, 0x1
	0x03985434 STRB W8, [X20 + 0xA8C]
	0x03985438 ADD X0, X31, 0x9D8
	0x0398543C MOVZ W2, 0xE0
	0x03985440 MOV W1, W31
	0x03985444 BL 0x3EB1B10
	0x03985448 ADD X0, X31, 0x1000
	0x0398544C ADD X0, X0, 0xEA8
	0x03985450 MOVZ W2, 0x630
	0x03985454 MOV W1, W31
	0x03985458 BL 0x3EB1B10
	0x0398545C ADD X0, X31, 0x8F8
	0x03985460 MOVZ W2, 0xE0
	0x03985464 MOV W1, W31
	0x03985468 BL 0x3EB1B10
	0x0398546C ADD X0, X31, 0x818
	0x03985470 MOVZ W2, 0xE0
	0x03985474 MOV W1, W31
	0x03985478 BL 0x3EB1B10
	0x0398547C LDR X0, [X24]
	0x03985480 LDR W8, [X0 + 0xE0]
	0x03985484 CBNZ W8, 0x3985490
	0x03985488 BL 0x1C16DFC
	0x0398548C LDR X0, [X24]
	0x03985490 LDR X8, [X0 + 0xB8]
	0x03985494 LDR X8, [X8 + 0x18]
	0x03985498 CBZ X8, 0x39858B8
	0x0398549C MOV W20, W31
	0x039854A0 LDR W8, [X0 + 0xE0]
	0x039854A4 CBNZ W8, 0x39854B0
	0x039854A8 BL 0x1C16DFC
	0x039854AC LDR X0, [X24]
	0x039854B0 LDR X8, [X0 + 0xB8]
	0x039854B4 LDR X0, [X8 + 0x18]
	0x039854B8 CBZ X0, 0x39858B4
	0x039854BC MOV X1, X31
	0x039854C0 BL 0x3E65804
	0x039854C4 LDR X8, [X24]
	0x039854C8 MOV W21, W0
	0x039854CC LDR W9, [X8 + 0xE0]
	0x039854D0 CBNZ W9, 0x39854E0
	0x039854D4 MOV X0, X8
	0x039854D8 BL 0x1C16DFC
	0x039854DC LDR X8, [X24]
	0x039854E0 LDR X9, [X8 + 0xB8]
	0x039854E4 CMP W20, W21
	0x039854E8 B.GE 0x3985844
	0x039854EC LDR X0, [X9 + 0x18]
	0x039854F0 CBZ X0, 0x39858B4
	0x039854F4 ADD X2, X31, 0x9D8
	0x039854F8 MOV W1, W20
	0x039854FC MOV X3, X31
	0x03985500 BL 0x3E65840
	0x03985504 LDR X8, [X24]
	0x03985508 LDR X8, [X8 + 0xB8]
	0x0398550C LDR X0, [X8 + 0x18]
	0x03985510 CBZ X0, 0x39858B4
	0x03985514 LDR W2, [X31 + 0xAA8]
	0x03985518 ADD X3, X31, 0x1000
	0x0398551C ADD X3, X3, 0xEA8
	0x03985520 MOV X1, X19
	0x03985524 MOV X4, X31
	0x03985528 BL 0x3E65B80
	0x0398552C ADD X0, X31, 0x738
	0x03985530 ADD X1, X31, 0x9D8
	0x03985534 MOVZ W2, 0xE0
	0x03985538 BL 0x3EB1AC0
	0x0398553C ADD X1, X31, 0x738
	0x03985540 MOV X0, X19
	0x03985544 BL 0x398A0C0
	0x03985548 TBZ X0, 0x0, 0x39856EC
	0x0398554C LDR X0, [X24]
	0x03985550 LDR W8, [X0 + 0xE0]
	0x03985554 CBNZ W8, 0x3985560
	0x03985558 BL 0x1C16DFC
	0x0398555C LDR X0, [X24]
	0x03985560 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA5D000
	006 Move X20, 0x7CC000
	007 Move W8, [X21+2641]
	008 Move X20, [X20+1192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7CC000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2641], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Compare X19, 0
	026 JumpIfEqual {94}
	027 Move X8, [X0+184]
	028 Move X0, X19
	029 Move X3, X31
	030 Move X2, [X8+40]
	031 Move W1, [X8]
	032 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	033 Move X8, [X20]
	034 Move X0, X19
	035 Move X3, X31
	036 Move X8, [X8+184]
	037 Move W1, [X8+4]
	038 Move X2, [X8+48]
	039 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	040 Move X8, [X20]
	041 Move X0, X19
	042 Move X3, X31
	043 Move X8, [X8+184]
	044 Move W1, [X8+8]
	045 Move X2, [X8+56]
	046 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	047 Move X8, [X20]
	048 Move X0, X19
	049 Move X3, X31
	050 Move X8, [X8+184]
	051 Move W1, [X8+12]
	052 Move X2, [X8+64]
	053 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	054 Move X8, [X20]
	055 Move X0, X19
	056 Move X3, X31
	057 Move X8, [X8+184]
	058 Move W1, [X8+16]
	059 Move X2, [X8+72]
	060 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	061 Move X8, [X20]
	062 Move X0, X19
	063 Move X3, X31
	064 Move X8, [X8+184]
	065 Move W1, [X8+20]
	066 Move X2, [X8+80]
	067 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	068 Move X8, [X20]
	069 Move X0, X19
	070 Move X3, X31
	071 Move X8, [X8+184]
	072 Move W1, [X8+24]
	073 Move X2, [X8+88]
	074 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	075 Move X8, [X20]
	076 Move X0, X19
	077 Move X3, X31
	078 Move X8, [X8+184]
	079 Move W1, [X8+28]
	080 Move X2, [X8+96]
	081 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	082 Move X8, [X20]
	083 Move X0, X19
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X3, X31
	087 Move X8, [X8+184]
	088 Move W1, [X8+32]
	089 Move X2, [X8+104]
	090 Move X30, [X31+32]
	091 Move X21, [X31+40]
	092 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	093 Return 
	094 Call 0x1C17F20

Method: System.Void Update(UnityEngine.Experimental.Rendering.XRPass xrPass, UnityEngine.Rendering.CommandBuffer cmd, System.Boolean renderIntoTexture)

Disassembly:
	0x03985564 ADD X0, X31, 0x658
	0x03985568 ADD X1, X31, 0x9D8
	0x0398556C MOVZ W2, 0xE0
	0x03985570 LDR X22, [X8 + 0x8]
	0x03985574 BL 0x3EB1AC0
	0x03985578 ADD X0, X31, 0x1000
	0x0398557C ADD X1, X31, 0x1000
	0x03985580 ADD X0, X0, 0xE8
	0x03985584 ADD X1, X1, 0xEA8
	0x03985588 MOVZ W2, 0x630
	0x0398558C BL 0x3EB1AC0
	0x03985590 ADD X8, X31, 0x1000
	0x03985594 ADD X1, X31, 0x1000
	0x03985598 ADD X8, X8, 0x718
	0x0398559C ADD X0, X31, 0x658
	0x039855A0 ADD X1, X1, 0xE8
	0x039855A4 BL 0x398A244
	0x039855A8 CBZ X22, 0x39858B4
	0x039855AC LDR X25, [X22 + 0x18]
	0x039855B0 LDR X21, [X22 + 0x40]
	0x039855B4 ADD X0, X31, 0x2000
	0x039855B8 ADD X1, X31, 0x1000
	0x039855BC ADD X0, X0, 0x4D8
	0x039855C0 ADD X1, X1, 0x718
	0x039855C4 MOVZ W2, 0x790
	0x039855C8 BL 0x3EB1AC0
	0x039855CC LDR X2, [X22 + 0x28]
	0x039855D0 ADD X1, X31, 0x2000
	0x039855D4 ADD X1, X1, 0x4D8
	0x039855D8 MOV X0, X21
	0x039855DC BLR X25
	0x039855E0 MOV X21, X0
	0x039855E4 ADD X0, X31, 0x9D8
	0x039855E8 MOV X1, X31
	0x039855EC BL 0x3E66054
	0x039855F0 CMP W0, 0x1
	0x039855F4 B.LT 0x39856BC
	0x039855F8 MOV W22, W31
	0x039855FC ADD X0, X31, 0x9D8
	0x03985600 ADD X3, X31, 0x8F8
	0x03985604 MOV X1, X19
	0x03985608 MOV W2, W22
	0x0398560C MOV X4, X31
	0x03985610 BL 0x3E65F9C
	0x03985614 ADD X0, X31, 0x2000
	0x03985618 ADD X0, X0, 0x4D8
	0x0398561C ADD X1, X31, 0x9D8
	0x03985620 MOVZ W2, 0xE0
	0x03985624 BL 0x3EB1AC0
	0x03985628 ADD X0, X31, 0x1000
	0x0398562C ADD X0, X0, 0x718
	0x03985630 ADD X1, X31, 0x8F8
	0x03985634 MOVZ W2, 0xE0
	0x03985638 BL 0x3EB1AC0
	0x0398563C LDR X0, [X24]
	0x03985640 LDR W8, [X0 + 0xE0]
	0x03985644 CBNZ W8, 0x398564C
	0x03985648 BL 0x1C16DFC
	0x0398564C ADD X1, X31, 0x2000
	0x03985650 ADD X0, X31, 0x4D0
	0x03985654 ADD X1, X1, 0x4D8
	0x03985658 MOVZ W2, 0xE0
	0x0398565C BL 0x3EB1AC0
	0x03985660 ADD X1, X31, 0x1000
	0x03985664 ADD X0, X31, 0x3F0
	0x03985668 ADD X1, X1, 0x718
	0x0398566C MOVZ W2, 0xE0
	0x03985670 BL 0x3EB1AC0
	0x03985674 ADD X8, X31, 0x5B0
	0x03985678 ADD X0, X31, 0x4D0
	0x0398567C ADD X1, X31, 0x3F0
	0x03985680 BL 0x398A494
	0x03985684 CBZ X21, 0x39858B4
	0x03985688 ADD X0, X31, 0x348
	0x0398568C ADD X1, X31, 0x5B0
	0x03985690 MOVZ W2, 0xA8
	0x03985694 BL 0x3EB1AC0
	0x03985698 ADD X1, X31, 0x348
	0x0398569C MOV X0, X21
	0x039856A0 BL 0x3988C30
	0x039856A4 ADD X0, X31, 0x9D8
	0x039856A8 MOV X1, X31
	0x039856AC ADD W22, W22, 0x1
	0x039856B0 BL 0x3E66054
	0x039856B4 CMP W22, W0
	0x039856B8 B.LT 0x39855FC
	0x039856BC LDR X0, [X24]
	0x039856C0 LDR W8, [X0 + 0xE0]
	0x039856C4 CBNZ W8, 0x39856D0
	0x039856C8 BL 0x1C16DFC
	0x039856CC LDR X0, [X24]
	0x039856D0 LDR X8, [X0 + 0xB8]
	0x039856D4 LDR X0, [X8]
	0x039856D8 CBZ X0, 0x39858B4
	0x039856DC MOV X1, X19
	0x039856E0 MOV X2, X21
	0x039856E4 BL 0x3985904
	0x039856E8 B 0x3985838
	0x039856EC ADD X0, X31, 0x9D8
	0x039856F0 MOV X1, X31
	0x039856F4 BL 0x3E66054
	0x039856F8 CMP W0, 0x1
	0x039856FC B.LT 0x3985838
	0x03985700 MOV W21, W31
	0x03985704 ADD X0, X31, 0x9D8
	0x03985708 ADD X3, X31, 0x818
	0x0398570C MOV X1, X19
	0x03985710 MOV W2, W21
	0x03985714 MOV X4, X31
	0x03985718 BL 0x3E65F9C
	0x0398571C LDR X0, [X24]
	0x03985720 LDR W8, [X0 + 0xE0]
	0x03985724 CBNZ W8, 0x3985730
	0x03985728 BL 0x1C16DFC
	0x0398572C LDR X0, [X24]
	0x03985730 LDR X8, [X0 + 0xB8]
	0x03985734 ADD X0, X31, 0x268
	0x03985738 ADD X1, X31, 0x9D8
	0x0398573C MOVZ W2, 0xE0
	0x03985740 LDR X25, [X8 + 0x8]
	0x03985744 BL 0x3EB1AC0
	0x03985748 ADD X1, X31, 0x1000
	0x0398574C ADD X0, X31, 0xAB8
	0x03985750 ADD X1, X1, 0xEA8
	0x03985754 MOVZ W2, 0x630
	0x03985758 BL 0x3EB1AC0
	0x0398575C ADD X8, X31, 0x1000
	0x03985760 ADD X8, X8, 0x718
	0x03985764 ADD X0, X31, 0x268
	0x03985768 ADD X1, X31, 0xAB8
	0x0398576C BL 0x398A244
	0x03985770 CBZ X25, 0x39858B4
	0x03985774 LDR X26, [X25 + 0x18]
	0x03985778 LDR X22, [X25 + 0x40]
	0x0398577C ADD X0, X31, 0x2000
	0x03985780 ADD X1, X31, 0x1000
	0x03985784 ADD X0, X0, 0x4D8
	0x03985788 ADD X1, X1, 0x718
	0x0398578C MOVZ W2, 0x790
	0x03985790 BL 0x3EB1AC0
	0x03985794 LDR X2, [X25 + 0x28]
	0x03985798 ADD X1, X31, 0x2000
	0x0398579C ADD X1, X1, 0x4D8
	0x039857A0 MOV X0, X22
	0x039857A4 BLR X26
	0x039857A8 MOV X22, X0
	0x039857AC ADD X0, X31, 0x188
	0x039857B0 ADD X1, X31, 0x9D8
	0x039857B4 MOVZ W2, 0xE0
	0x039857B8 BL 0x3EB1AC0
	0x039857BC ADD X0, X31, 0xA8
	0x039857C0 ADD X1, X31, 0x818
	0x039857C4 MOVZ W2, 0xE0
	0x039857C8 BL 0x3EB1AC0
	0x039857CC ADD X8, X31, 0x2000
	0x039857D0 ADD X8, X8, 0x4D8
	0x039857D4 ADD X0, X31, 0x188
	0x039857D8 ADD X1, X31, 0xA8
	0x039857DC BL 0x398A494
	0x039857E0 CBZ X22, 0x39858B4
	0x039857E4 ADD X1, X31, 0x2000
	0x039857E8 ADD X0, X31, 0x0
	0x039857EC ADD X1, X1, 0x4D8
	0x039857F0 MOVZ W2, 0xA8
	0x039857F4 BL 0x3EB1AC0
	0x039857F8 ADD X1, X31, 0x0
	0x039857FC MOV X0, X22
	0x03985800 BL 0x3988C30
	0x03985804 LDR X8, [X24]
	0x03985808 LDR X8, [X8 + 0xB8]
	0x0398580C LDR X0, [X8]
	0x03985810 CBZ X0, 0x39858B4
	0x03985814 MOV X1, X19
	0x03985818 MOV X2, X22
	0x0398581C BL 0x3985904
	0x03985820 ADD X0, X31, 0x9D8
	0x03985824 MOV X1, X31
	0x03985828 ADD W21, W21, 0x1
	0x0398582C BL 0x3E66054
	0x03985830 CMP W21, W0
	0x03985834 B.LT 0x3985704
	0x03985838 LDR X0, [X24]
	0x0398583C ADD W20, W20, 0x1
	0x03985840 B 0x39854A0
	0x03985844 LDR X10, [X9 + 0x38]
	0x03985848 CBZ X10, 0x3985884
	0x0398584C LDR W11, [X8 + 0xE0]
	0x03985850 CBNZ W11, 0x398586C
	0x03985854 MOV X0, X8
	0x03985858 BL 0x1C16DFC
	0x0398585C LDR X8, [X24]
	0x03985860 LDR X9, [X8 + 0xB8]
	0x03985864 LDR X10, [X9 + 0x38]
	0x03985868 CBZ X10, 0x39858B4
	0x0398586C LDR X1, [X9]
	0x03985870 LDR X8, [X10 + 0x18]
	0x03985874 LDR X0, [X10 + 0x40]
	0x03985878 LDR X3, [X10 + 0x28]
	0x0398587C MOV X2, X19
	0x03985880 BLR X8
	0x03985884 LDR X8, [X23 + 0x28]
	0x03985888 LDR X9, [X31 + 0x2C68]
	0x0398588C CMP X8, X9
	0x03985890 B.NE 0x3985900
	0x03985894 ADD X31, X31, 0x2000
	0x03985898 ADD X31, X31, 0xC70
	0x0398589C LDP X20, X19, [X31 + 0x40]
	0x039858A0 LDP X22, X21, [X31 + 0x30]
	0x039858A4 LDP X24, X23, [X31 + 0x20]
	0x039858A8 LDP X26, X25, [X31 + 0x10]
	0x039858AC LDP X29, X30, [X31], #0x50
	0x039858B0 RET
	0x039858B4 BL 0x1C16F20
	0x039858B8 ADRP X0, 0x779000
	0x039858BC LDR X0, [X0 + 0xA18]
	0x039858C0 BL 0x1C16D08
	0x039858C4 BL 0x1C16F10
	0x039858C8 MOV X19, X0
	0x039858CC ADRP X0, 0x7CB000
	0x039858D0 LDR X0, [X0 + 0x508]
	0x039858D4 BL 0x1C16D08
	0x039858D8 MOV X1, X0
	0x039858DC MOV X0, X19
	0x039858E0 MOV X2, X31
	0x039858E4 BL 0x33803F4
	0x039858E8 ADRP X0, 0x7CB000
	0x039858EC LDR X0, [X0 + 0x510]
	0x039858F0 BL 0x1C16D08
	0x039858F4 MOV X1, X0
	0x039858F8 MOV X0, X19
	0x039858FC BL 0x1C16DEC
	0x03985900 BL 0x3EB1B20
	0x03985904 SUB X31, X31, 0x40
	0x03985908 STR X30, [X31 + 0x10]
	0x0398590C STP X22, X21, [X31 + 0x20]
	0x03985910 STP X20, X19, [X31 + 0x30]
	0x03985914 ADRP X22, 0xA5C000
	0x03985918 LDRB W8, [X22 + 0xA56]
	0x0398591C MOV X20, X2
	0x03985920 MOV X21, X1
	0x03985924 MOV X19, X0
	0x03985928 TBNZ X8, 0x0, 0x398594C
	0x0398592C ADRP X0, 0x7CB000
	0x03985930 LDR X0, [X0 + 0x518]
	0x03985934 BL 0x1C16CF4
	0x03985938 ADRP X0, 0x7CB000
	0x0398593C LDR X0, [X0 + 0x520]
	0x03985940 BL 0x1C16CF4
	0x03985944 MOVZ W8, 0x1
	0x03985948 STRB W8, [X22 + 0xA56]
	0x0398594C CBZ X20, 0x39859F4
	0x03985950 LDR X0, [X20 + 0x18]
	0x03985954 CBZ X0, 0x39859F4
	0x03985958 ADRP X22, 0x7CB000
	0x0398595C LDR X22, [X22 + 0x520]
	0x03985960 BL 0x3987B0C
	0x03985964 LDR X3, [X22]
	0x03985968 LDR X19, [X19 + 0x10]
	0x0398596C ADD X0, X31, 0x0
	0x03985970 MOV X1, X21
	0x03985974 MOV X2, X20
	0x03985978 STP X31, X31, [X31]
	0x0398597C BL 0x27ABC80
	0x03985980 CBZ X19, 0x39859F4
	0x03985984 ADRP X9, 0x7CB000
	0x03985988 LDR X9, [X9 + 0x518]
	0x0398598C LDR W10, [X19 + 0x1C]
	0x03985990 LDP X1, X2, [X31]
	0x03985994 LDR X8, [X19 + 0x10]
	0x03985998 LDR X9, [X9]
	0x0398599C ADD W10, W10, 0x1
	0x039859A0 STR W10, [X19 + 0x1C]
	0x039859A4 CBZ X8, 0x39859F4
	0x039859A8 LDRSW X10, [X19 + 0x18]
	0x039859AC LDR W11, [X8 + 0x18]
	0x039859B0 CMP W10, W11
	0x039859B4 B.CS 0x39859CC
	0x039859B8 ADD W9, W10, 0x1
	0x039859BC ADD X8, X8, X10, 0x4, LSL
	0x039859C0 STR W9, [X19 + 0x18]
	0x039859C4 STP X1, X2, [X8 + 0x20]
	0x039859C8 B 0x39859E0
	0x039859CC LDR X8, [X9 + 0x20]
	0x039859D0 MOV X0, X19
	0x039859D4 LDR X8, [X8 + 0xC0]
	0x039859D8 LDR X3, [X8 + 0x70]
	0x039859DC BL 0x2F49F80
	0x039859E0 LDP X20, X19, [X31 + 0x30]
	0x039859E4 LDP X22, X21, [X31 + 0x20]
	0x039859E8 LDR X30, [X31 + 0x10]
	0x039859EC ADD X31, X31, 0x40
	0x039859F0 RET
	0x039859F4 BL 0x1C16F20
	0x039859F8 STP X30, X21, [X31 - 0x20]!
	0x039859FC STP X20, X19, [X31 + 0x10]
	0x03985A00 ADRP X21, 0xA5C000
	0x03985A04 LDRB W8, [X21 + 0xA55]
	0x03985A08 MOV X19, X2
	0x03985A0C MOV X20, X1
	0x03985A10 TBNZ X8, 0x0, 0x3985A28
	0x03985A14 ADRP X0, 0x7CB000
	0x03985A18 LDR X0, [X0 + 0x500]
	0x03985A1C BL 0x1C16CF4
	0x03985A20 MOVZ W8, 0x1
	0x03985A24 STRB W8, [X21 + 0xA55]
	0x03985A28 CBZ X20, 0x3985A80
	0x03985A2C MOV X0, X20
	0x03985A30 BL 0x398632C
	0x03985A34 CMP W0, 0x1
	0x03985A38 B.LT 0x3985A74
	0x03985A3C ADRP X8, 0x7CB000
	0x03985A40 LDR X8, [X8 + 0x500]
	0x03985A44 LDR X0, [X8]
	0x03985A48 LDR W8, [X0 + 0xE0]
	0x03985A4C CBNZ W8, 0x3985A54
	0x03985A50 BL 0x1C16DFC
	0x03985A54 MOV X0, X20
	0x03985A58 MOV X1, X19
	0x03985A5C BL 0x3985A84
	0x03985A60 LDR X0, [X20 + 0x18]
	0x03985A64 CBZ X0, 0x3985A80
	0x03985A68 LDP X20, X19, [X31 + 0x10]
	0x03985A6C LDP X30, X21, [X31], #0x20
	0x03985A70 B 0x3987B0C
	0x03985A74 LDP X20, X19, [X31 + 0x10]
	0x03985A78 LDP X30, X21, [X31], #0x20
	0x03985A7C RET
	0x03985A80 BL 0x1C16F20
	0x03985A84 STR X29, [X31 - 0x40]!
	0x03985A88 STP X30, X23, [X31 + 0x10]
	0x03985A8C STP X22, X21, [X31 + 0x20]
	0x03985A90 STP X20, X19, [X31 + 0x30]
	0x03985A94 SUB X31, X31, 0x1000
	0x03985A98 SUB X31, X31, 0x250
	0x03985A9C MRS X22, 0xC000
	0x03985AA0 LDR X8, [X22 + 0x28]
	0x03985AA4 ADRP X21, 0xA5C000
	0x03985AA8 MOV X19, X1
	0x03985AAC MOV X20, X0
	0x03985AB0 STR X8, [X31 + 0x1248]
	0x03985AB4 LDRB W8, [X21 + 0xA8D]
	0x03985AB8 TBNZ X8, 0x0, 0x3985AD0
	0x03985ABC ADRP X0, 0x7CB000
	0x03985AC0 LDR X0, [X0 + 0x500]
	0x03985AC4 BL 0x1C16CF4
	0x03985AC8 MOVZ W8, 0x1
	0x03985ACC STRB W8, [X21 + 0xA8D]
	0x03985AD0 ADD X0, X31, 0x508
	0x03985AD4 MOVZ W2, 0xE0
	0x03985AD8 MOV W1, W31
	0x03985ADC BL 0x3EB1B10
	0x03985AE0 ADD X0, X31, 0xC18
	0x03985AE4 MOVZ W2, 0x630
	0x03985AE8 MOV W1, W31
	0x03985AEC BL 0x3EB1B10
	0x03985AF0 ADD X0, X31, 0x428
	0x03985AF4 MOVZ W2, 0xE0
	0x03985AF8 MOV W1, W31
	0x03985AFC BL 0x3EB1B10
	0x03985B00 CBZ X20, 0x3985CEC
	0x03985B04 MOV X0, X20
	0x03985B08 BL 0x398632C
	0x03985B0C CMP W0, 0x1
	0x03985B10 B.LT 0x3985CC0
	0x03985B14 ADRP X23, 0x7CB000
	0x03985B18 LDR X23, [X23 + 0x500]
	0x03985B1C LDR X0, [X23]
	0x03985B20 LDR W8, [X0 + 0xE0]
	0x03985B24 CBNZ W8, 0x3985B30
	0x03985B28 BL 0x1C16DFC
	0x03985B2C LDR X0, [X23]
	0x03985B30 LDR X8, [X0 + 0xB8]
	0x03985B34 LDR X8, [X8 + 0x18]
	0x03985B38 CBZ X8, 0x3985CC0
	0x03985B3C LDR W9, [X0 + 0xE0]
	0x03985B40 CBNZ W9, 0x3985B58
	0x03985B44 BL 0x1C16DFC
	0x03985B48 LDR X8, [X23]
	0x03985B4C LDR X8, [X8 + 0xB8]
	0x03985B50 LDR X8, [X8 + 0x18]
	0x03985B54 CBZ X8, 0x3985CEC
	0x03985B58 LDR W1, [X20 + 0x24]
	0x03985B5C ADD X2, X31, 0x508
	0x03985B60 MOV X0, X8
	0x03985B64 MOV X3, X31
	0x03985B68 BL 0x3E65840
	0x03985B6C LDR X8, [X23]
	0x03985B70 LDR X8, [X8 + 0xB8]
	0x03985B74 LDR X0, [X8 + 0x18]
	0x03985B78 CBZ X0, 0x3985CEC
	0x03985B7C LDR W2, [X31 + 0x5D8]
	0x03985B80 ADD X3, X31, 0xC18
	0x03985B84 MOV X1, X19
	0x03985B88 MOV X4, X31
	0x03985B8C BL 0x3E65B80
	0x03985B90 LDR W21, [X31 + 0x5D8]
	0x03985B94 ADD X0, X31, 0x5E8
	0x03985B98 ADD X1, X31, 0xC18
	0x03985B9C MOVZ W2, 0x630
	0x03985BA0 BL 0x3EB1AC0
	0x03985BA4 ADD X2, X31, 0x5E8
	0x03985BA8 MOV X0, X20
	0x03985BAC MOV W1, W21
	0x03985BB0 BL 0x3988BA0
	0x03985BB4 ADD X0, X31, 0x508
	0x03985BB8 MOV X1, X31
	0x03985BBC BL 0x3E66054
	0x03985BC0 CMP W0, 0x1
	0x03985BC4 B.LT 0x3985C6C
	0x03985BC8 MOV W21, W31
	0x03985BCC ADD X0, X31, 0x508
	0x03985BD0 ADD X3, X31, 0x428
	0x03985BD4 MOV X1, X19
	0x03985BD8 MOV W2, W21
	0x03985BDC MOV X4, X31
	0x03985BE0 BL 0x3E65F9C
	0x03985BE4 ADD X0, X31, 0x348
	0x03985BE8 ADD X1, X31, 0x508
	0x03985BEC MOVZ W2, 0xE0
	0x03985BF0 BL 0x3EB1AC0
	0x03985BF4 ADD X0, X31, 0x268
	0x03985BF8 ADD X1, X31, 0x428
	0x03985BFC MOVZ W2, 0xE0
	0x03985C00 BL 0x3EB1AC0
	0x03985C04 LDR X0, [X23]
	0x03985C08 LDR W8, [X0 + 0xE0]
	0x03985C0C CBNZ W8, 0x3985C14
	0x03985C10 BL 0x1C16DFC
	0x03985C14 ADD X0, X31, 0x188
	0x03985C18 ADD X1, X31, 0x348
	0x03985C1C MOVZ W2, 0xE0
	0x03985C20 BL 0x3EB1AC0
	0x03985C24 ADD X0, X31, 0xA8
	0x03985C28 ADD X1, X31, 0x268
	0x03985C2C MOVZ W2, 0xE0
	0x03985C30 BL 0x3EB1AC0
	0x03985C34 ADD X8, X31, 0x0
	0x03985C38 ADD X0, X31, 0x188
	0x03985C3C ADD X1, X31, 0xA8
	0x03985C40 BL 0x398A494
	0x03985C44 ADD X2, X31, 0x0
	0x03985C48 MOV X0, X20
	0x03985C4C MOV W1, W21
	0x03985C50 BL 0x3988AA0
	0x03985C54 ADD X0, X31, 0x508
	0x03985C58 MOV X1, X31
	0x03985C5C ADD W21, W21, 0x1
	0x03985C60 BL 0x3E66054
	0x03985C64 CMP W21, W0
	0x03985C68 B.LT 0x3985BCC
	0x03985C6C LDR X0, [X23]
	0x03985C70 LDR W8, [X0 + 0xE0]
	0x03985C74 CBNZ W8, 0x3985C80
	0x03985C78 BL 0x1C16DFC
	0x03985C7C LDR X0, [X23]
	0x03985C80 LDR X9, [X0 + 0xB8]
	0x03985C84 LDR X8, [X9 + 0x38]
	0x03985C88 CBZ X8, 0x3985CC0
	0x03985C8C LDR W10, [X0 + 0xE0]
	0x03985C90 CBNZ W10, 0x3985CA8
	0x03985C94 BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 1792
	012 Move X21, 0xA5D000
	013 Move W8, [X21+2642]
	014 Move W22, W2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x7CC000
	022 Move X0, [X0+1192]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2642], W8
	026 Compare X20, 0
	027 JumpIfEqual {562}
	028 Move X0, X20
	029 Call XRPass.get_viewCount, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X31, 1728
	032 Move X0, X20
	033 Move W1, W31
	034 Call XRPass.GetViewMatrix, X0, X1
	035 Add X8, X31, 1664
	036 Move X0, X20
	037 Move W1, W31
	038 Call XRPass.GetProjMatrix, X0, X1
	039 Compare X19, 0
	040 JumpIfEqual {562}
	041 Move V0, [X31+108]
	042 Move V1, [X31+109]
	043 Move V2, [X31+110]
	044 Move V3, [X31+111]
	045 Move [X31+100], V0
	046 Move [X31+101], V1
	047 Move V0, [X31+104]
	048 Move V1, [X31+105]
	049 Move [X31+102], V2
	050 Move [X31+103], V3
	051 Move V2, [X31+106]
	052 Move V3, [X31+107]
	053 Add X1, X31, 1600
	054 Add X2, X31, 1536
	055 Move X0, X19
	056 Move X3, X31
	057 Move [X31+96], V0
	058 Move [X31+97], V1
	059 Move [X31+98], V2
	060 Move [X31+99], V3
	061 Call CommandBuffer.SetViewProjectionMatrices, X0, X1, X2
	062 Move X0, X20
	063 Call XRPass.get_viewCount, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X23, 0x7CC000
	066 Move X23, [X23+1192]
	067 Move X24, X31
	068 Move X21, X31
	069 Move W25, 32
	070 And W22, W22, 1
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X26, [X8+40]
	080 Add X8, X31, 1728
	081 Move X0, X20
	082 Move W1, W21
	083 Call XRPass.GetProjMatrix, X0, X1
	084 Compare X26, 0
	085 JumpIfEqual {562}
	086 Move V0, [X31+108]
	087 Move V1, [X31+109]
	088 Move V2, [X31+110]
	089 Move V3, [X31+111]
	090 Move [X31+92], V0
	091 Move [X31+93], V1
	092 Move [X31+94], V2
	093 Move [X31+95], V3
	094 Move W8, [X26+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move V0, [X31+94]
	097 Move V1, [X31+95]
	098 Move V2, [X31+92]
	099 Move V3, [X31+93]
	100 Add X8, X26, X25
	101 Move [X8+32], V0
	102 Move [X8+40], V1
	103 Move X0, X20
	104 Move [X8], V2
	105 Move [X8+8], V3
	106 Move X8, [X23]
	107 Move W1, W21
	108 Move X8, [X8+184]
	109 Move X26, [X8+56]
	110 Add X8, X31, 1664
	111 Call XRPass.GetViewMatrix, X0, X1
	112 Compare X26, 0
	113 JumpIfEqual {562}
	114 Move V0, [X31+104]
	115 Move V1, [X31+105]
	116 Move V2, [X31+106]
	117 Move V3, [X31+107]
	118 Move [X31+88], V0
	119 Move [X31+89], V1
	120 Move [X31+90], V2
	121 Move [X31+91], V3
	122 Move W8, [X26+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move V0, [X31+90]
	125 Move V1, [X31+91]
	126 Move V2, [X31+88]
	127 Move V3, [X31+89]
	128 Add X8, X26, X25
	129 Move [X8+32], V0
	130 Move [X8+40], V1
	131 Move [X8], V2
	132 Move [X8+8], V3
	133 Move X8, [X23]
	134 Move X8, [X8+184]
	135 Move X9, [X8+40]
	136 Compare X9, 0
	137 JumpIfEqual {562}
	138 Move W10, [X9+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X9, X9, X25
	141 Move V0, [X9+32]
	142 Move V1, [X9+48]
	143 Move V2, [X9]
	144 Move V3, [X9+16]
	145 Move X26, [X8+72]
	146 Add X8, X31, 1280
	147 Add X0, X31, 1216
	148 Move W1, W22
	149 Move X2, X31
	150 Move [X31+79], V1
	151 Move [X31+78], V0
	152 Move [X31+77], V3
	153 Move [X31+76], V2
	154 Call GL.GetGPUProjectionMatrix, X0, X1
	155 Move V0, [X31+80]
	156 Move V1, [X31+81]
	157 Move V2, [X31+82]
	158 Move V3, [X31+83]
	159 Move [X31+84], V0
	160 Move [X31+85], V1
	161 Move [X31+86], V2
	162 Move [X31+87], V3
	163 Compare X26, 0
	164 JumpIfEqual {562}
	165 Move V0, [X31+84]
	166 Move V1, [X31+85]
	167 Move V2, [X31+86]
	168 Move V3, [X31+87]
	169 Move [X31+72], V0
	170 Move [X31+73], V1
	171 Move [X31+74], V2
	172 Move [X31+75], V3
	173 Move W8, [X26+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move V0, [X31+74]
	176 Move V1, [X31+75]
	177 Move V2, [X31+72]
	178 Move V3, [X31+73]
	179 Add X8, X26, X25
	180 Move [X8+32], V0
	181 Move [X8+40], V1
	182 Move [X8], V2
	183 Move [X8+8], V3
	184 Move X8, [X23]
	185 Move X8, [X8+184]
	186 Move X9, [X8+72]
	187 Compare X9, 0
	188 JumpIfEqual {562}
	189 Move W10, [X9+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add X9, X9, X25
	192 Move V0, [X9+32]
	193 Move V1, [X9+48]
	194 Move V2, [X9]
	195 Move V3, [X9+16]
	196 Move X26, [X8+88]
	197 Move [X31+83], V1
	198 Move [X31+82], V0
	199 Move [X31+81], V3
	200 Move [X31+80], V2
	201 Move X8, [X8+56]
	202 Compare X8, 0
	203 JumpIfEqual {562}
	204 Move W9, [X8+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Add X8, X8, X25
	207 Move V2, [X8]
	208 Move V3, [X8+16]
	209 Move V4, [X8+32]
	210 Move V5, [X8+48]
	211 Move V0, [X31+80]
	212 Move V1, [X31+81]
	213 Move [X31+69], V3
	214 Move [X31+71], V5
	215 Move [X31+70], V4
	216 Move [X31+68], V2
	217 Move [X31+896], V0
	218 Move [X31+904], V1
	219 Move V0, [X31+82]
	220 Move V1, [X31+83]
	221 Move V2, [X31+70]
	222 Move V3, [X31+71]
	223 Move V4, [X31+68]
	224 Move V5, [X31+69]
	225 Add X8, X31, 960
	226 Add X0, X31, 896
	227 Add X1, X31, 832
	228 Move X2, X31
	229 Move [X31+928], V0
	230 Move [X31+936], V1
	231 Move [X31+864], V2
	232 Move [X31+872], V3
	233 Move [X31+832], V4
	234 Move [X31+840], V5
	235 Call Matrix4x4.op_Multiply, X0, X1
	236 Move V0, [X31+960]
	237 Move V1, [X31+976]
	238 Move V2, [X31+992]
	239 Move V3, [X31+1008]
	240 Move [X31+64], V0
	241 Move [X31+65], V1
	242 Move [X31+66], V2
	243 Move [X31+67], V3
	244 Compare X26, 0
	245 JumpIfEqual {562}
	246 Move V0, [X31+64]
	247 Move V1, [X31+65]
	248 Move V2, [X31+66]
	249 Move V3, [X31+67]
	250 Move [X31+768], V0
	251 Move [X31+776], V1
	252 Move [X31+800], V2
	253 Move [X31+808], V3
	254 Move W8, [X26+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move V0, [X31+800]
	257 Move V1, [X31+816]
	258 Move V2, [X31+768]
	259 Move V3, [X31+784]
	260 Add X8, X26, X25
	261 Move [X8+32], V0
	262 Move [X8+40], V1
	263 Move [X8], V2
	264 Move [X8+8], V3
	265 Move X8, [X23]
	266 Move X8, [X8+184]
	267 Move X9, [X8+40]
	268 Compare X9, 0
	269 JumpIfEqual {562}
	270 Move W10, [X9+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Add X9, X9, X25
	273 Move V0, [X9+32]
	274 Move V1, [X9+48]
	275 Move V2, [X9]
	276 Move V3, [X9+16]
	277 Move X26, [X8+48]
	278 Add X8, X31, 704
	279 Add X0, X31, 640
	280 Move X1, X31
	281 Move [X31+672], V0
	282 Move [X31+680], V1
	283 Move [X31+640], V2
	284 Move [X31+648], V3
	285 Call Matrix4x4.Inverse, X0
	286 Move V0, [X31+704]
	287 Move V1, [X31+720]
	288 Move V2, [X31+736]
	289 Move V3, [X31+752]
	290 Move [X31+960], V0
	291 Move [X31+968], V1
	292 Move [X31+992], V2
	293 Move [X31+1000], V3
	294 Compare X26, 0
	295 JumpIfEqual {562}
	296 Move V0, [X31+960]
	297 Move V1, [X31+976]
	298 Move V2, [X31+992]
	299 Move V3, [X31+1008]
	300 Move [X31+576], V0
	301 Move [X31+584], V1
	302 Move [X31+608], V2
	303 Move [X31+616], V3
	304 Move W8, [X26+24]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move V0, [X31+608]
	307 Move V1, [X31+624]
	308 Move V2, [X31+576]
	309 Move V3, [X31+592]
	310 Add X8, X26, X25
	311 Move [X8+32], V0
	312 Move [X8+40], V1
	313 Move [X8], V2
	314 Move [X8+8], V3
	315 Move X8, [X23]
	316 Move X8, [X8+184]
	317 Move X9, [X8+56]
	318 Compare X9, 0
	319 JumpIfEqual {562}
	320 Move W10, [X9+24]
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Add X9, X9, X25
	323 Move V0, [X9+32]
	324 Move V1, [X9+48]
	325 Move V2, [X9]
	326 Move V3, [X9+16]
	327 Move X26, [X8+64]
	328 Add X8, X31, 512
	329 Add X0, X31, 448
	330 Move X1, X31
	331 Move [X31+480], V0
	332 Move [X31+488], V1
	333 Move [X31+448], V2
	334 Move [X31+456], V3
	335 Call Matrix4x4.Inverse, X0
	336 Move V0, [X31+512]
	337 Move V1, [X31+528]
	338 Move V2, [X31+544]
	339 Move V3, [X31+560]
	340 Move [X31+704], V0
	341 Move [X31+712], V1
	342 Move [X31+736], V2
	343 Move [X31+744], V3
	344 Compare X26, 0
	345 JumpIfEqual {562}
	346 Move V0, [X31+704]
	347 Move V1, [X31+720]
	348 Move V2, [X31+736]
	349 Move V3, [X31+752]
	350 Move [X31+384], V0
	351 Move [X31+392], V1
	352 Move [X31+416], V2
	353 Move [X31+424], V3
	354 Move W8, [X26+24]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move V0, [X31+416]
	357 Move V1, [X31+432]
	358 Move V2, [X31+384]
	359 Move V3, [X31+400]
	360 Add X8, X26, X25
	361 Move [X8+32], V0
	362 Move [X8+40], V1
	363 Move [X8], V2
	364 Move [X8+8], V3
	365 Move X8, [X23]
	366 Move X8, [X8+184]
	367 Move X9, [X8+72]
	368 Compare X9, 0
	369 JumpIfEqual {562}
	370 Move W10, [X9+24]
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Add X9, X9, X25
	373 Move V0, [X9+32]
	374 Move V1, [X9+48]
	375 Move V2, [X9]
	376 Move V3, [X9+16]
	377 Move X26, [X8+80]
	378 Add X8, X31, 320
	379 Add X0, X31, 256
	380 Move X1, X31
	381 Move [X31+288], V0
	382 Move [X31+296], V1
	383 Move [X31+256], V2
	384 Move [X31+264], V3
	385 Call Matrix4x4.Inverse, X0
	386 Move V0, [X31+320]
	387 Move V1, [X31+336]
	388 Move V2, [X31+352]
	389 Move V3, [X31+368]
	390 Move [X31+512], V0
	391 Move [X31+520], V1
	392 Move [X31+544], V2
	393 Move [X31+552], V3
	394 Compare X26, 0
	395 JumpIfEqual {562}
	396 Move V0, [X31+512]
	397 Move V1, [X31+528]
	398 Move V2, [X31+544]
	399 Move V3, [X31+560]
	400 Move [X31+192], V0
	401 Move [X31+200], V1
	402 Move [X31+224], V2
	403 Move [X31+232], V3
	404 Move W8, [X26+24]
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move V0, [X31+224]
	407 Move V1, [X31+240]
	408 Move V2, [X31+192]
	409 Move V3, [X31+208]
	410 Add X8, X26, X25
	411 Move [X8+32], V0
	412 Move [X8+40], V1
	413 Move [X8], V2
	414 Move [X8+8], V3
	415 Move X8, [X23]
	416 Move X8, [X8+184]
	417 Move X9, [X8+88]
	418 Compare X9, 0
	419 JumpIfEqual {562}
	420 Move W10, [X9+24]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Add X9, X9, X25
	423 Move V0, [X9+32]
	424 Move V1, [X9+48]
	425 Move V2, [X9]
	426 Move V3, [X9+16]
	427 Move X26, [X8+96]
	428 Add X8, X31, 128
	429 Add X0, X31, 64
	430 Move X1, X31
	431 Move [X31+96], V0
	432 Move [X31+104], V1
	433 Move [X31+64], V2
	434 Move [X31+72], V3
	435 Call Matrix4x4.Inverse, X0
	436 Move V0, [X31+128]
	437 Move V1, [X31+144]
	438 Move V2, [X31+160]
	439 Move V3, [X31+176]
	440 Move [X31+320], V0
	441 Move [X31+328], V1
	442 Move [X31+352], V2
	443 Move [X31+360], V3
	444 Compare X26, 0
	445 JumpIfEqual {562}
	446 Move V0, [X31+320]
	447 Move V1, [X31+336]
	448 Move V2, [X31+352]
	449 Move V3, [X31+368]
	450 Move [X31], V0
	451 Move [X31+8], V1
	452 Move [X31+32], V2
	453 Move [X31+40], V3
	454 Move W8, [X26+24]
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move V0, [X31+32]
	457 Move V1, [X31+48]
	458 Move V2, [X31]
	459 Move V3, [X31+16]
	460 Add X8, X26, X25
	461 Move [X8+32], V0
	462 Move [X8+40], V1
	463 Move [X8], V2
	464 Move [X8+8], V3
	465 Move X8, [X23]
	466 Move X9, [X8+184]
	467 Move X8, [X9+64]
	468 Compare X8, 0
	469 JumpIfEqual {562}
	470 Move W10, [X8+24]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X26, [X9+104]
	473 Add X0, X8, X25
	474 Move W1, 3
	475 Move X2, X31
	476 Call Matrix4x4.GetColumn, X0, X1
	477 Compare X26, 0
	478 JumpIfEqual {562}
	479 Move W8, [X26+24]
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Add X8, X26, X24
	482 Add X21, X21, 1
	483 Add X25, X25, 64
	484 Add X24, X24, 16
	485 Move [X8+32], S0
	486 Move [X8+40], S1
	487 Move [X8+40], S2
	488 Move [X8+48], S3
	489 Move W1, [X8]
	490 Move X2, [X8+40]
	491 Move X0, X19
	492 Move X3, X31
	493 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	494 Move X8, [X23]
	495 Move X0, X19
	496 Move X3, X31
	497 Move X8, [X8+184]
	498 Move W1, [X8+4]
	499 Move X2, [X8+48]
	500 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	501 Move X8, [X23]
	502 Move X0, X19
	503 Move X3, X31
	504 Move X8, [X8+184]
	505 Move W1, [X8+8]
	506 Move X2, [X8+56]
	507 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	508 Move X8, [X23]
	509 Move X0, X19
	510 Move X3, X31
	511 Move X8, [X8+184]
	512 Move W1, [X8+12]
	513 Move X2, [X8+64]
	514 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	515 Move X8, [X23]
	516 Move X0, X19
	517 Move X3, X31
	518 Move X8, [X8+184]
	519 Move W1, [X8+16]
	520 Move X2, [X8+72]
	521 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	522 Move X8, [X23]
	523 Move X0, X19
	524 Move X3, X31
	525 Move X8, [X8+184]
	526 Move W1, [X8+20]
	527 Move X2, [X8+80]
	528 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	529 Move X8, [X23]
	530 Move X0, X19
	531 Move X3, X31
	532 Move X8, [X8+184]
	533 Move W1, [X8+24]
	534 Move X2, [X8+88]
	535 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	536 Move X8, [X23]
	537 Move X0, X19
	538 Move X3, X31
	539 Move X8, [X8+184]
	540 Move W1, [X8+28]
	541 Move X2, [X8+96]
	542 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	543 Move X8, [X23]
	544 Move X0, X19
	545 Move X3, X31
	546 Move X8, [X8+184]
	547 Move W1, [X8+32]
	548 Move X2, [X8+104]
	549 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	550 Add X31, X31, 1792
	551 Move X20, [X31+64]
	552 Move X19, [X31+72]
	553 Move X22, [X31+48]
	554 Move X21, [X31+56]
	555 Move X24, [X31+32]
	556 Move X23, [X31+40]
	557 Move X26, [X31+16]
	558 Move X25, [X31+24]
	559 Move X29, [X31+80]
	560 Move X30, [X31+88]
	561 Return 
	562 Call 0x1C17F20
	563 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03985DF8 LDR W8, [X0 + 0x1C]
	0x03985DFC CMP W2, 0x1
	0x03985E00 ADD W8, W8, 0x1
	0x03985E04 STP W31, W8, [X0 + 0x18]
	0x03985E08 B.LT 0x3985E2C
	0x03985E0C LDR X0, [X0 + 0x10]
	0x03985E10 LDP X20, X19, [X31 + 0x30]
	0x03985E14 LDP X22, X21, [X31 + 0x20]
	0x03985E18 LDP X24, X23, [X31 + 0x10]
	0x03985E1C MOV W1, W31
	0x03985E20 MOV X3, X31
	0x03985E24 LDR X30, [X31], #0x40
	0x03985E28 B 0x339FA34
	0x03985E2C LDP X20, X19, [X31 + 0x30]
	0x03985E30 LDP X22, X21, [X31 + 0x20]
	0x03985E34 LDP X24, X23, [X31 + 0x10]
	0x03985E38 LDR X30, [X31], #0x40
	0x03985E3C RET
	0x03985E40 SUB X31, X31, 0x90
	0x03985E44 STP D9, D8, [X31 + 0x20]
	0x03985E48 STP X29, X30, [X31 + 0x30]
	0x03985E4C STP X28, X27, [X31 + 0x40]
	0x03985E50 STP X26, X25, [X31 + 0x50]
	0x03985E54 STP X24, X23, [X31 + 0x60]
	0x03985E58 STP X22, X21, [X31 + 0x70]
	0x03985E5C STP X20, X19, [X31 + 0x80]
	0x03985E60 ADRP X22, 0xA5C000
	0x03985E64 ADRP X20, 0x76E000
	0x03985E68 ADRP X26, 0x76E000
	0x03985E6C ADRP X21, 0x7CB000
	0x03985E70 LDRB W8, [X22 + 0xA58]
	0x03985E74 LDR X20, [X20 + 0x8F0]
	0x03985E78 LDR X26, [X26 + 0x758]
	0x03985E7C LDR X21, [X21 + 0x500]
	0x03985E80 MOV X19, X0
	0x03985E84 TBNZ X8, 0x0, 0x3985F14
	0x03985E88 ADRP X0, 0x76E000
	0x03985E8C LDR X0, [X0 + 0xB58]
	0x03985E90 BL 0x1C16CF4
	0x03985E94 ADRP X0, 0x76E000
	0x03985E98 LDR X0, [X0 + 0xA28]
	0x03985E9C BL 0x1C16CF4
	0x03985EA0 ADRP X0, 0x76E000
	0x03985EA4 LDR X0, [X0 + 0x758]
	0x03985EA8 BL 0x1C16CF4
	0x03985EAC ADRP X0, 0x7CB000
	0x03985EB0 LDR X0, [X0 + 0x530]
	0x03985EB4 BL 0x1C16CF4
	0x03985EB8 ADRP X0, 0x7CB000
	0x03985EBC LDR X0, [X0 + 0x538]
	0x03985EC0 BL 0x1C16CF4
	0x03985EC4 ADRP X0, 0x76E000
	0x03985EC8 LDR X0, [X0 + 0x9D0]
	0x03985ECC BL 0x1C16CF4
	0x03985ED0 ADRP X0, 0x76E000
	0x03985ED4 LDR X0, [X0 + 0xA90]
	0x03985ED8 BL 0x1C16CF4
	0x03985EDC ADRP X0, 0x76E000
	0x03985EE0 LDR X0, [X0 + 0x8F0]
	0x03985EE4 BL 0x1C16CF4
	0x03985EE8 ADRP X0, 0x7CB000
	0x03985EEC LDR X0, [X0 + 0x500]
	0x03985EF0 BL 0x1C16CF4
	0x03985EF4 ADRP X0, 0x7CB000
	0x03985EF8 LDR X0, [X0 + 0x540]
	0x03985EFC BL 0x1C16CF4
	0x03985F00 ADRP X0, 0x7CB000
	0x03985F04 LDR X0, [X0 + 0x548]
	0x03985F08 BL 0x1C16CF4
	0x03985F0C MOVZ W8, 0x1
	0x03985F10 STRB W8, [X22 + 0xA58]
	0x03985F14 LDR X0, [X20]
	0x03985F18 ADRP X22, 0x76E000
	0x03985F1C LDR X22, [X22 + 0xB58]
	0x03985F20 BL 0x1C16F10
	0x03985F24 MOV X1, X31
	0x03985F28 MOV X20, X0
	0x03985F2C BL 0x3231AC4
	0x03985F30 MOV X0, X31
	0x03985F34 BL 0x3C3C88C
	0x03985F38 LDR X8, [X26]
	0x03985F3C STR W0, [X31 + 0x1C]
	0x03985F40 ADD X1, X31, 0x1C
	0x03985F44 MOV X0, X8
	0x03985F48 BL 0x1C16E04
	0x03985F4C LDR X8, [X21]
	0x03985F50 MOV X21, X0
	0x03985F54 LDR W9, [X8 + 0xE0]
	0x03985F58 CBNZ W9, 0x3985F64
	0x03985F5C MOV X0, X8
	0x03985F60 BL 0x1C16DFC
	0x03985F64 BL 0x398528C
	0x03985F68 LDR X8, [X22]
	0x03985F6C AND W9, W0, 0x1
	0x03985F70 ADD X1, X31, 0x18
	0x03985F74 STRB W9, [X31 + 0x18]
	0x03985F78 MOV X0, X8
	0x03985F7C BL 0x1C16E04
	0x03985F80 CBZ X20, 0x39861F4
	0x03985F84 ADRP X8, 0x7CB000
	0x03985F88 LDR X8, [X8 + 0x548]
	0x03985F8C MOV X3, X0
	0x03985F90 MOV X0, X20
	0x03985F94 MOV X2, X21
	0x03985F98 LDR X1, [X8]
	0x03985F9C MOV X4, X31
	0x03985FA0 BL 0x3234D98
	0x03985FA4 MOV X0, X20
	0x03985FA8 MOV X1, X31
	0x03985FAC BL 0x3233888
	0x03985FB0 LDR X0, [X19 + 0x10]
	0x03985FB4 CBZ X0, 0x39861F4
	0x03985FB8 ADRP X28, 0x76E000
	0x03985FBC ADRP X29, 0x76E000
	0x03985FC0 ADRP X27, 0x7CB000
	0x03985FC4 LDR X28, [X28 + 0x9D0]
	0x03985FC8 LDR X29, [X29 + 0xA90]
	0x03985FCC LDR X27, [X27 + 0x540]
	0x03985FD0 MOV W21, W31
	0x03985FD4 LDR W8, [X0 + 0x18]
	0x03985FD8 CMP W21, W8
	0x03985FDC B.GE 0x39861F8
	0x03985FE0 ADRP X8, 0x7CB000
	0x03985FE4 LDR X8, [X8 + 0x538]
	0x03985FE8 MOV W1, W21
	0x03985FEC LDR X2, [X8]
	0x03985FF0 BL 0x2F49C7C
	0x03985FF4 CBZ X1, 0x39861F4
	0x03985FF8 MOV X0, X1
	0x03985FFC MOV X22, X1
	0x03986000 BL 0x398632C
	0x03986004 CMP W0, 0x1
	0x03986008 B.LT 0x39861E8
	0x0398600C MOV W23, W31
	0x03986010 MOV X0, X22
	0x03986014 MOV W1, W23
	0x03986018 BL 0x3986250
	0x0398601C LDR X0, [X28]
	0x03986020 MOVZ W1, 0x6
	0x03986024 MOV V9.16B, V2.16B
	0x03986028 MOV V8.16B, V3.16B
	0x0398602C BL 0x1C16D6C
	0x03986030 MOV X24, X0
	0x03986034 LDR W8, [X22 + 0x24]
	0x03986038 LDR X0, [X26]
	0x0398603C ADD X1, X31, 0x1C
	0x03986040 STR W8, [X31 + 0x1C]
	0x03986044 BL 0x1C16E04
	0x03986048 CBZ X24, 0x39861F4
	0x0398604C MOV X25, X0
	0x03986050 CBZ X0, 0x3986068
	0x03986054 LDR X8, [X24]
	0x03986058 MOV X0, X25
	0x0398605C LDR X1, [X8 + 0x40]
	0x03986060 BL 0x1C16E00
	0x03986064 CBZ X0, 0x3986244
	0x03986068 LDR W8, [X24 + 0x18]
	0x0398606C CBZ W8, 0x3986240
	0x03986070 STR X25, [X24 + 0x20]
	0x03986074 LDR W8, [X22 + 0x28]
	0x03986078 LDR X0, [X26]
	0x0398607C ADD X1, X31, 0x18
	0x03986080 STR W8, [X31 + 0x18]
	0x03986084 BL 0x1C16E04
	0x03986088 MOV X25, X0
	0x0398608C CBZ X0, 0x39860A4
	0x03986090 LDR X8, [X24]
	0x03986094 MOV X0, X25
	0x03986098 LDR X1, [X8 + 0x40]
	0x0398609C BL 0x1C16E00
	0x039860A0 CBZ X0, 0x3986244
	0x039860A4 LDR W8, [X24 + 0x18]
	0x039860A8 CMP W8, 0x1
	0x039860AC B.LS 0x3986240
	0x039860B0 STR X25, [X24 + 0x28]
	0x039860B4 LDR X0, [X26]
	0x039860B8 ADD X1, X31, 0x14
	0x039860BC STR W23, [X31 + 0x14]
	0x039860C0 BL 0x1C16E04
	0x039860C4 MOV X25, X0
	0x039860C8 CBZ X0, 0x39860E0
	0x039860CC LDR X8, [X24]
	0x039860D0 MOV X0, X25
	0x039860D4 LDR X1, [X8 + 0x40]
	0x039860D8 BL 0x1C16E00
	0x039860DC CBZ X0, 0x3986244

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xA5D000
	014 Move X22, 0x7CC000
	015 Move X19, 0x7CC000
	016 Move X29, 0x7CC000
	017 Move X28, 0x7CC000
	018 Move X27, 0x7CC000
	019 Move X26, 0x7CC000
	020 Move X25, 0x7CC000
	021 Move X24, 0x7CC000
	022 Move X23, 0x7CC000
	023 Move X21, 0x773000
	024 Move X22, [X22+1208]
	025 Move X19, [X19+1192]
	026 Move X29, [X29+1216]
	027 Move X28, [X28+1224]
	028 Move X27, [X27+1232]
	029 Move X26, [X26+1240]
	030 Move X25, [X25+1248]
	031 Move W8, [X20+2643]
	032 Move X24, [X24+1256]
	033 Move X23, [X23+1264]
	034 Move X21, [X21+2440]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {77}
	039 Move X0, 0x773000
	040 Move X0, [X0+2440]
	041 Call 0x1C17CF4
	042 Move X0, 0x7CA000
	043 Move X0, [X0+72]
	044 Call 0x1C17CF4
	045 Move X0, 0x7CC000
	046 Move X0, [X0+1192]
	047 Call 0x1C17CF4
	048 Move X0, 0x7CC000
	049 Move X0, [X0+1272]
	050 Call 0x1C17CF4
	051 Move X0, 0x7CC000
	052 Move X0, [X0+1264]
	053 Call 0x1C17CF4
	054 Move X0, 0x7CC000
	055 Move X0, [X0+1216]
	056 Call 0x1C17CF4
	057 Move X0, 0x7CC000
	058 Move X0, [X0+1256]
	059 Call 0x1C17CF4
	060 Move X0, 0x7CC000
	061 Move X0, [X0+1208]
	062 Call 0x1C17CF4
	063 Move X0, 0x7CC000
	064 Move X0, [X0+1248]
	065 Call 0x1C17CF4
	066 Move X0, 0x7CC000
	067 Move X0, [X0+1232]
	068 Call 0x1C17CF4
	069 Move X0, 0x7CC000
	070 Move X0, [X0+1240]
	071 Call 0x1C17CF4
	072 Move X0, 0x7CC000
	073 Move X0, [X0+1224]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+2643], W8
	077 Move X0, [X22]
	078 Move X1, X31
	079 Call Shader.PropertyToID, X0
	080 Move X8, [X19]
	081 Move X1, X31
	082 Move X8, [X8+184]
	083 Move [X8], W0
	084 Move X0, [X29]
	085 Call Shader.PropertyToID, X0
	086 Move X8, [X19]
	087 Move X1, X31
	088 Move X8, [X8+184]
	089 Move [X8+4], W0
	090 Move X0, [X28]
	091 Call Shader.PropertyToID, X0
	092 Move X8, [X19]
	093 Move X1, X31
	094 Move X8, [X8+184]
	095 Move [X8+8], W0
	096 Move X0, [X27]
	097 Call Shader.PropertyToID, X0
	098 Move X8, [X19]
	099 Move X1, X31
	100 Move X8, [X8+184]
	101 Move [X8+12], W0
	102 Move X0, [X26]
	103 Call Shader.PropertyToID, X0
	104 Move X8, [X19]
	105 Move X1, X31
	106 Move X8, [X8+184]
	107 Move [X8+16], W0
	108 Move X0, [X25]
	109 Call Shader.PropertyToID, X0
	110 Move X8, [X19]
	111 Move X1, X31
	112 Move X8, [X8+184]
	113 Move [X8+20], W0
	114 Move X0, [X24]
	115 Call Shader.PropertyToID, X0
	116 Move X8, [X19]
	117 Move X1, X31
	118 Move X8, [X8+184]
	119 Move [X8+24], W0
	120 Move X0, [X23]
	121 Call Shader.PropertyToID, X0
	122 Move X8, [X19]
	123 Move X1, X31
	124 Move X8, [X8+184]
	125 Move [X8+28], W0
	126 Move X8, 0x7CC000
	127 Move X8, [X8+1272]
	128 Move X0, [X8]
	129 Call Shader.PropertyToID, X0
	130 Move X8, [X19]
	131 Move W1, 2
	132 Move X8, [X8+184]
	133 Move [X8+32], W0
	134 Move X0, [X21]
	135 Call 0x1C17D6C
	136 Move X8, [X19]
	137 Move W1, 2
	138 Move X8, [X8+184]
	139 Move [X8+40], X0
	140 Move X0, [X21]
	141 Call 0x1C17D6C
	142 Move X8, [X19]
	143 Move W1, 2
	144 Move X8, [X8+184]
	145 Move [X8+48], X0
	146 Move X0, [X21]
	147 Call 0x1C17D6C
	148 Move X8, [X19]
	149 Move W1, 2
	150 Move X8, [X8+184]
	151 Move [X8+56], X0
	152 Move X0, [X21]
	153 Call 0x1C17D6C
	154 Move X8, [X19]
	155 Move W1, 2
	156 Move X8, [X8+184]
	157 Move [X8+64], X0
	158 Move X0, [X21]
	159 Call 0x1C17D6C
	160 Move X8, [X19]
	161 Move W1, 2
	162 Move X8, [X8+184]
	163 Move [X8+72], X0
	164 Move X0, [X21]
	165 Call 0x1C17D6C
	166 Move X8, [X19]
	167 Move W1, 2
	168 Move X8, [X8+184]
	169 Move [X8+80], X0
	170 Move X0, [X21]
	171 Call 0x1C17D6C
	172 Move X8, [X19]
	173 Move W1, 2
	174 Move X8, [X8+184]
	175 Move [X8+88], X0
	176 Move X0, [X21]
	177 Call 0x1C17D6C
	178 Move X8, [X19]
	179 Move W1, 2
	180 Move X8, [X8+184]
	181 Move [X8+96], X0
	182 Move X8, 0x7C9000
	183 Move X8, [X8+72]
	184 Move X0, [X8]
	185 Call 0x1C17D6C
	186 Move X8, [X19]
	187 Move X20, [X31+80]
	188 Move X19, [X31+88]
	189 Move X22, [X31+64]
	190 Move X21, [X31+72]
	191 Move X24, [X31+48]
	192 Move X23, [X31+56]
	193 Move X8, [X8+184]
	194 Move X26, [X31+32]
	195 Move X25, [X31+40]
	196 Move X28, [X31+16]
	197 Move X27, [X31+24]
	198 Move [X8+104], X0
	199 Move X29, [X31+96]
	200 Move X30, [X31+104]
	201 Return 

