Type: UnityEngine.Experimental.Rendering.XRMirrorView

Method: System.Void RenderMirrorView(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Camera camera, UnityEngine.Material mat, UnityEngine.XR.XRDisplaySubsystem display)

Disassembly:
	0x039873F0 CBZ X0, 0x3987434
	0x039873F4 MOV W1, W31
	0x039873F8 BL 0x39874C0
	0x039873FC ADRP X8, 0x76C000
	0x03987400 LDR X8, [X8 + 0x598]
	0x03987404 MOV X19, X0
	0x03987408 LDR X8, [X8]
	0x0398740C LDR W9, [X8 + 0xE0]
	0x03987410 CBNZ W9, 0x398741C
	0x03987414 MOV X0, X8
	0x03987418 BL 0x1C16DFC
	0x0398741C MOV X0, X19
	0x03987420 LDP X20, X19, [X31 + 0x10]
	0x03987424 MOV X1, X31
	0x03987428 MOV X2, X31
	0x0398742C LDR X30, [X31], #0x20
	0x03987430 B 0x3C354F8
	0x03987434 BL 0x1C16F20
	0x03987438 STR X30, [X31 - 0x20]!
	0x0398743C STP X20, X19, [X31 + 0x10]
	0x03987440 ADRP X20, 0xA5A000
	0x03987444 LDRB W8, [X20 + 0xA5F]
	0x03987448 MOV X19, X0
	0x0398744C TBNZ X8, 0x0, 0x3987464
	0x03987450 ADRP X0, 0x76C000
	0x03987454 LDR X0, [X0 + 0x598]
	0x03987458 BL 0x1C16CF4
	0x0398745C MOVZ W8, 0x1
	0x03987460 STRB W8, [X20 + 0xA5F]
	0x03987464 LDR X0, [X19 + 0x10]
	0x03987468 CBZ X0, 0x39874BC
	0x0398746C BL 0x398632C
	0x03987470 CMP W0, 0x1
	0x03987474 B.LT 0x39874AC
	0x03987478 ADRP X8, 0x76C000
	0x0398747C LDR X8, [X8 + 0x598]
	0x03987480 LDR X19, [X19 + 0x20]
	0x03987484 LDR X0, [X8]
	0x03987488 LDR W8, [X0 + 0xE0]
	0x0398748C CBNZ W8, 0x3987494
	0x03987490 BL 0x1C16DFC
	0x03987494 MOV X0, X19
	0x03987498 LDP X20, X19, [X31 + 0x10]
	0x0398749C MOV X1, X31
	0x039874A0 MOV X2, X31
	0x039874A4 LDR X30, [X31], #0x20
	0x039874A8 B 0x3C354F8
	0x039874AC LDP X20, X19, [X31 + 0x10]
	0x039874B0 MOV W0, W31
	0x039874B4 LDR X30, [X31], #0x20
	0x039874B8 RET
	0x039874BC BL 0x1C16F20
	0x039874C0 SUB X31, X31, 0xD0
	0x039874C4 STP X30, X21, [X31 + 0xB0]
	0x039874C8 STP X20, X19, [X31 + 0xC0]
	0x039874CC ADRP X21, 0xA5A000
	0x039874D0 LDRB W8, [X21 + 0xA6E]
	0x039874D4 MOV W19, W1
	0x039874D8 MOV X20, X0
	0x039874DC TBNZ X8, 0x0, 0x39874F4
	0x039874E0 ADRP X0, 0x7C9000
	0x039874E4 LDR X0, [X0 + 0x4B0]
	0x039874E8 BL 0x1C16CF4
	0x039874EC MOVZ W8, 0x1
	0x039874F0 STRB W8, [X21 + 0xA6E]
	0x039874F4 LDR X0, [X20 + 0x10]
	0x039874F8 CBZ X0, 0x3987528
	0x039874FC ADRP X8, 0x7C9000
	0x03987500 LDR X8, [X8 + 0x4B0]
	0x03987504 MOV W1, W19
	0x03987508 LDR X2, [X8]
	0x0398750C ADD X8, X31, 0x8
	0x03987510 BL 0x30DFDE8
	0x03987514 LDR X0, [X31 + 0x98]
	0x03987518 LDP X20, X19, [X31 + 0xC0]
	0x0398751C LDP X30, X21, [X31 + 0xB0]
	0x03987520 ADD X31, X31, 0xD0
	0x03987524 RET
	0x03987528 BL 0x1C16F20
	0x0398752C SUB X31, X31, 0x100
	0x03987530 STR X29, [X31 + 0xC0]
	0x03987534 STP X30, X23, [X31 + 0xD0]
	0x03987538 STP X22, X21, [X31 + 0xE0]
	0x0398753C STP X20, X19, [X31 + 0xF0]
	0x03987540 ADRP X21, 0xA5A000
	0x03987544 LDRB W8, [X21 + 0xA5D]
	0x03987548 MOV X19, X1
	0x0398754C MOV X20, X0
	0x03987550 TBNZ X8, 0x0, 0x3987580
	0x03987554 ADRP X0, 0x76C000
	0x03987558 LDR X0, [X0 + 0x598]
	0x0398755C BL 0x1C16CF4
	0x03987560 ADRP X0, 0x7C9000
	0x03987564 LDR X0, [X0 + 0x5F8]
	0x03987568 BL 0x1C16CF4
	0x0398756C ADRP X0, 0x7C9000
	0x03987570 LDR X0, [X0 + 0x600]
	0x03987574 BL 0x1C16CF4
	0x03987578 MOVZ W8, 0x1
	0x0398757C STRB W8, [X21 + 0xA5D]
	0x03987580 MOV X0, X20
	0x03987584 STRB W31, [X31 + 0xC8]
	0x03987588 BL 0x3987438
	0x0398758C TBZ X0, 0x0, 0x3987778
	0x03987590 ADRP X21, 0x7C9000
	0x03987594 LDR X21, [X21 + 0x5F8]
	0x03987598 LDR X0, [X21]
	0x0398759C LDR W8, [X0 + 0xE0]
	0x039875A0 CBNZ W8, 0x39875AC
	0x039875A4 BL 0x1C16DFC
	0x039875A8 LDR X0, [X21]
	0x039875AC LDR X8, [X0 + 0xB8]
	0x039875B0 ADD X0, X31, 0xC8
	0x039875B4 MOV X1, X19
	0x039875B8 MOV X3, X31
	0x039875BC LDR X2, [X8]
	0x039875C0 BL 0x39B1DB0
	0x039875C4 LDR X0, [X20 + 0x10]
	0x039875C8 CBZ X0, 0x3987790
	0x039875CC BL 0x398632C
	0x039875D0 CMP W0, 0x1
	0x039875D4 B.LE 0x39876C0
	0x039875D8 ADRP X8, 0x76C000
	0x039875DC LDR X8, [X8 + 0x598]
	0x039875E0 LDR X21, [X20 + 0x18]
	0x039875E4 LDR X0, [X8]
	0x039875E8 LDR W8, [X0 + 0xE0]
	0x039875EC CBNZ W8, 0x39875F4
	0x039875F0 BL 0x1C16DFC
	0x039875F4 MOV X0, X21
	0x039875F8 MOV X1, X31
	0x039875FC MOV X2, X31
	0x03987600 BL 0x3C354F8
	0x03987604 TBZ X0, 0x0, 0x398776C
	0x03987608 MOV X0, X31
	0x0398760C BL 0x3C3BD4C
	0x03987610 TBZ X0, 0x0, 0x398776C
	0x03987614 LDR X0, [X20 + 0x10]
	0x03987618 CBZ X0, 0x398779C
	0x0398761C MOV X1, X19
	0x03987620 BL 0x398784C
	0x03987624 CBZ X19, 0x39877A0
	0x03987628 ADRP X22, 0x7C9000
	0x0398762C LDR X22, [X22 + 0x600]
	0x03987630 LDR X1, [X22]
	0x03987634 MOV X0, X19
	0x03987638 MOV X2, X31
	0x0398763C BL 0x3C4D0E0
	0x03987640 ADRP X23, 0xA51000
	0x03987644 LDRB W8, [X23 + 0xAC0]
	0x03987648 LDR X21, [X20 + 0x18]
	0x0398764C CBNZ W8, 0x3987664
	0x03987650 ADRP X0, 0x770000
	0x03987654 LDR X0, [X0 + 0x270]
	0x03987658 BL 0x1C16CF4
	0x0398765C MOVZ W8, 0x1
	0x03987660 STRB W8, [X23 + 0xAC0]
	0x03987664 ADRP X8, 0x770000
	0x03987668 LDR X8, [X8 + 0x270]
	0x0398766C LDR X8, [X8]
	0x03987670 LDR X8, [X8 + 0xB8]
	0x03987674 LDP V1, V0, [X8 + 0x60]
	0x03987678 LDP V2, V3, [X8 + 0x40]
	0x0398767C STP V1, V0, [X31 + 0xA0]
	0x03987680 STP V2, V3, [X31 + 0x80]
	0x03987684 LDR X3, [X20 + 0x20]
	0x03987688 ADD X2, X31, 0x80
	0x0398768C MOV X0, X19
	0x03987690 MOV X1, X21
	0x03987694 MOV X4, X31
	0x03987698 BL 0x3C4F0D4
	0x0398769C LDR X1, [X22]
	0x039876A0 MOV X0, X19
	0x039876A4 MOV X2, X31
	0x039876A8 BL 0x3C4D124
	0x039876AC LDR X0, [X20 + 0x10]
	0x039876B0 CBZ X0, 0x39877A4
	0x039876B4 MOV X1, X19
	0x039876B8 BL 0x3987918
	0x039876BC B 0x398776C
	0x039876C0 LDR X0, [X20 + 0x10]
	0x039876C4 CBZ X0, 0x3987794
	0x039876C8 MOV W1, W31
	0x039876CC BL 0x39874C0
	0x039876D0 ADRP X8, 0x76C000
	0x039876D4 LDR X8, [X8 + 0x598]
	0x039876D8 MOV X21, X0
	0x039876DC LDR X0, [X8]
	0x039876E0 LDR W8, [X0 + 0xE0]
	0x039876E4 CBNZ W8, 0x39876EC
	0x039876E8 BL 0x1C16DFC
	0x039876EC MOV X0, X21
	0x039876F0 MOV X1, X31
	0x039876F4 MOV X2, X31
	0x039876F8 BL 0x3C354F8
	0x039876FC TBZ X0, 0x0, 0x398776C
	0x03987700 ADRP X22, 0xA51000
	0x03987704 LDRB W8, [X22 + 0xAC0]
	0x03987708 CBNZ W8, 0x3987720
	0x0398770C ADRP X0, 0x770000
	0x03987710 LDR X0, [X0 + 0x270]
	0x03987714 BL 0x1C16CF4
	0x03987718 MOVZ W8, 0x1
	0x0398771C STRB W8, [X22 + 0xAC0]
	0x03987720 ADRP X8, 0x770000
	0x03987724 LDR X8, [X8 + 0x270]
	0x03987728 LDR X8, [X8]
	0x0398772C LDR X8, [X8 + 0xB8]
	0x03987730 LDP V1, V0, [X8 + 0x60]
	0x03987734 LDP V2, V3, [X8 + 0x40]
	0x03987738 STP V1, V0, [X31 + 0x60]
	0x0398773C STP V2, V3, [X31 + 0x40]
	0x03987740 CBZ X19, 0x3987798
	0x03987744 LDP V0, V1, [X31 + 0x40]
	0x03987748 LDP V2, V3, [X31 + 0x60]
	0x0398774C LDR X3, [X20 + 0x20]
	0x03987750 STP V0, V1, [X31]
	0x03987754 STP V2, V3, [X31 + 0x20]
	0x03987758 ADD X2, X31, 0x0
	0x0398775C MOV X0, X19
	0x03987760 MOV X1, X21
	0x03987764 MOV X4, X31
	0x03987768 BL 0x3C4F0D4
	0x0398776C ADD X0, X31, 0xC8
	0x03987770 MOV X1, X31
	0x03987774 BL 0x39B1DB4
	0x03987778 LDP X20, X19, [X31 + 0xF0]
	0x0398777C LDP X22, X21, [X31 + 0xE0]
	0x03987780 LDP X30, X23, [X31 + 0xD0]
	0x03987784 LDR X29, [X31 + 0xC0]
	0x03987788 ADD X31, X31, 0x100
	0x0398778C RET
	0x03987790 BL 0x1C16F20
	0x03987794 BL 0x1C16F20
	0x03987798 BL 0x1C16F20
	0x0398779C BL 0x1C16F20
	0x039877A0 BL 0x1C16F20
	0x039877A4 BL 0x1C16F20
	0x039877A8 B 0x39877E8
	0x039877AC B 0x39877E8
	0x039877B0 B 0x39877E8
	0x039877B4 B 0x39877E8
	0x039877B8 B 0x39877E8
	0x039877BC B 0x39877E8
	0x039877C0 B 0x39877E8
	0x039877C4 B 0x39877E8
	0x039877C8 B 0x39877E8
	0x039877CC B 0x39877E8
	0x039877D0 B 0x39877E8
	0x039877D4 B 0x39877E8
	0x039877D8 B 0x39877E8
	0x039877DC B 0x39877E8
	0x039877E0 B 0x39877E8
	0x039877E4 B 0x39877E8
	0x039877E8 MOV X19, X0
	0x039877EC CMP W1, 0x1
	0x039877F0 B.NE 0x398781C
	0x039877F4 MOV X0, X19
	0x039877F8 BL 0x3EB1AD0
	0x039877FC LDR X20, [X0]
	0x03987800 BL 0x3EB1AE0
	0x03987804 ADD X0, X31, 0xC8
	0x03987808 MOV X1, X31
	0x0398780C BL 0x39B1DB4
	0x03987810 CBZ X20, 0x3987778
	0x03987814 MOV X0, X20
	0x03987818 BL 0x1C16F18
	0x0398781C MOV X20, X31
	0x03987820 B 0x3987828
	0x03987824 MOV X19, X0
	0x03987828 ADD X0, X31, 0xC8
	0x0398782C MOV X1, X31
	0x03987830 BL 0x39B1DB4
	0x03987834 CBNZ X20, 0x3987840
	0x03987838 MOV X0, X19
	0x0398783C BL 0x1D2C690
	0x03987840 MOV X0, X20
	0x03987844 BL 0x1C16F18
	0x03987848 BL 0x1990590
	0x0398784C STP X30, X21, [X31 - 0x20]!
	0x03987850 STP X20, X19, [X31 + 0x10]
	0x03987854 ADRP X21, 0xA5A000
	0x03987858 LDRB W8, [X21 + 0xA71]
	0x0398785C MOV X19, X1
	0x03987860 MOV X20, X0
	0x03987864 TBNZ X8, 0x0, 0x3987888
	0x03987868 ADRP X0, 0x7C9000
	0x0398786C LDR X0, [X0 + 0x608]
	0x03987870 BL 0x1C16CF4
	0x03987874 ADRP X0, 0x7C9000
	0x03987878 LDR X0, [X0 + 0x610]
	0x0398787C BL 0x1C16CF4
	0x03987880 MOVZ W8, 0x1
	0x03987884 STRB W8, [X21 + 0xA71]
	0x03987888 MOV X0, X20
	0x0398788C BL 0x398632C
	0x03987890 CMP W0, 0x1
	0x03987894 B.LT 0x39878D8
	0x03987898 MOV X0, X20
	0x0398789C BL 0x398632C
	0x039878A0 CMP W0, 0x2
	0x039878A4 B.LT 0x39878D8
	0x039878A8 MOV X0, X31
	0x039878AC BL 0x3C3C37C
	0x039878B0 CBZ X19, 0x3987914
	0x039878B4 TBZ X0, 0x0, 0x39878E4
	0x039878B8 ADRP X8, 0x7C9000
	0x039878BC LDR X8, [X8 + 0x608]
	0x039878C0 MOV X0, X19
	0x039878C4 LDP X20, X19, [X31 + 0x10]
	0x039878C8 MOV X2, X31
	0x039878CC LDR X1, [X8]
	0x039878D0 LDP X30, X21, [X31], #0x20
	0x039878D4 B 0x3C4D124
	0x039878D8 LDP X20, X19, [X31 + 0x10]
	0x039878DC LDP X30, X21, [X31], #0x20
	0x039878E0 RET
	0x039878E4 ADRP X8, 0x7C9000
	0x039878E8 LDR X8, [X8 + 0x610]
	0x039878EC MOV X0, X19
	0x039878F0 MOV X2, X31
	0x039878F4 LDR X1, [X8]
	0x039878F8 BL 0x3C4D124
	0x039878FC MOV X0, X19
	0x03987900 LDP X20, X19, [X31 + 0x10]
	0x03987904 MOVZ W1, 0x1
	0x03987908 MOV X2, X31
	0x0398790C LDP X30, X21, [X31], #0x20
	0x03987910 B 0x3C4D8CC
	0x03987914 BL 0x1C16F20
	0x03987918 SUB X31, X31, 0x40
	0x0398791C STP X30, X23, [X31 + 0x10]
	0x03987920 STP X22, X21, [X31 + 0x20]
	0x03987924 STP X20, X19, [X31 + 0x30]
	0x03987928 ADRP X21, 0xA5A000
	0x0398792C LDRB W8, [X21 + 0xA70]
	0x03987930 MOV X19, X1
	0x03987934 MOV X20, X0
	0x03987938 TBNZ X8, 0x0, 0x3987968
	0x0398793C ADRP X0, 0x7C9000
	0x03987940 LDR X0, [X0 + 0x618]
	0x03987944 BL 0x1C16CF4
	0x03987948 ADRP X0, 0x7C9000
	0x0398794C LDR X0, [X0 + 0x608]
	0x03987950 BL 0x1C16CF4
	0x03987954 ADRP X0, 0x7C9000
	0x03987958 LDR X0, [X0 + 0x610]
	0x0398795C BL 0x1C16CF4
	0x03987960 MOVZ W8, 0x1
	0x03987964 STRB W8, [X21 + 0xA70]
	0x03987968 MOV X0, X20
	0x0398796C BL 0x398632C
	0x03987970 CMP W0, 0x1
	0x03987974 B.LT 0x3987A2C
	0x03987978 MOV X0, X20
	0x0398797C BL 0x398632C
	0x03987980 CMP W0, 0x2
	0x03987984 B.LT 0x3987A2C
	0x03987988 MOV X0, X20
	0x0398798C BL 0x398632C
	0x03987990 ADRP X22, 0x7C9000
	0x03987994 LDR X22, [X22 + 0x618]
	0x03987998 MOV W21, W0
	0x0398799C LDR X8, [X22]
	0x039879A0 LDR W9, [X8 + 0xE0]
	0x039879A4 CBNZ W9, 0x39879B0
	0x039879A8 MOV X0, X8
	0x039879AC BL 0x1C16DFC
	0x039879B0 ADRP X23, 0xA5A000
	0x039879B4 LDRB W8, [X23 + 0xB3B]
	0x039879B8 CBNZ W8, 0x39879D0
	0x039879BC ADRP X0, 0x7C9000
	0x039879C0 LDR X0, [X0 + 0x618]
	0x039879C4 BL 0x1C16CF4
	0x039879C8 MOVZ W8, 0x1
	0x039879CC STRB W8, [X23 + 0xB3B]
	0x039879D0 LDR X0, [X22]
	0x039879D4 LDR W8, [X0 + 0xE0]
	0x039879D8 CBNZ W8, 0x39879E4
	0x039879DC BL 0x1C16DFC
	0x039879E0 LDR X0, [X22]
	0x039879E4 LDR X8, [X0 + 0xB8]
	0x039879E8 LDR W8, [X8]
	0x039879EC CMP W21, W8
	0x039879F0 B.GT 0x3987A80
	0x039879F4 MOV X0, X31
	0x039879F8 BL 0x3C3C37C
	0x039879FC CBZ X19, 0x3987B08
	0x03987A00 TBZ X0, 0x0, 0x3987A40
	0x03987A04 ADRP X8, 0x7C9000
	0x03987A08 LDR X8, [X8 + 0x608]
	0x03987A0C MOV X0, X19
	0x03987A10 LDP X20, X19, [X31 + 0x30]
	0x03987A14 LDP X22, X21, [X31 + 0x20]
	0x03987A18 LDR X1, [X8]
	0x03987A1C LDP X30, X23, [X31 + 0x10]
	0x03987A20 MOV X2, X31
	0x03987A24 ADD X31, X31, 0x40
	0x03987A28 B 0x3C4D0E0
	0x03987A2C LDP X20, X19, [X31 + 0x30]
	0x03987A30 LDP X22, X21, [X31 + 0x20]
	0x03987A34 LDP X30, X23, [X31 + 0x10]
	0x03987A38 ADD X31, X31, 0x40
	0x03987A3C RET
	0x03987A40 ADRP X8, 0x7C9000
	0x03987A44 LDR X8, [X8 + 0x610]
	0x03987A48 MOV X0, X19
	0x03987A4C MOV X2, X31
	0x03987A50 LDR X1, [X8]
	0x03987A54 BL 0x3C4D0E0
	0x03987A58 MOV X0, X20
	0x03987A5C BL 0x398632C
	0x03987A60 MOV W1, W0
	0x03987A64 MOV X0, X19
	0x03987A68 LDP X20, X19, [X31 + 0x30]
	0x03987A6C LDP X22, X21, [X31 + 0x20]
	0x03987A70 LDP X30, X23, [X31 + 0x10]
	0x03987A74 MOV X2, X31
	0x03987A78 ADD X31, X31, 0x40
	0x03987A7C B 0x3C4D8CC
	0x03987A80 ADRP X0, 0x7C9000
	0x03987A84 LDR X0, [X0 + 0x618]
	0x03987A88 BL 0x1C16D08
	0x03987A8C BL 0x19903D0
	0x03987A90 MOV X0, X31
	0x03987A94 BL 0x399AB34
	0x03987A98 STR W0, [X31 + 0xC]
	0x03987A9C ADRP X0, 0x76C000
	0x03987AA0 LDR X0, [X0 + 0x758]
	0x03987AA4 BL 0x1C16D08
	0x03987AA8 ADD X1, X31, 0xC
	0x03987AAC BL 0x1C16E04
	0x03987AB0 MOV X19, X0
	0x03987AB4 ADRP X0, 0x7C9000
	0x03987AB8 LDR X0, [X0 + 0x620]
	0x03987ABC BL 0x1C16D08
	0x03987AC0 MOV X1, X19
	0x03987AC4 MOV X2, X31
	0x03987AC8 BL 0x321EFD0
	0x03987ACC MOV X19, X0
	0x03987AD0 ADRP X0, 0x775000
	0x03987AD4 LDR X0, [X0 + 0x758]
	0x03987AD8 BL 0x1C16D08
	0x03987ADC BL 0x1C16F10
	0x03987AE0 MOV X1, X19
	0x03987AE4 MOV X2, X31
	0x03987AE8 MOV X20, X0
	0x03987AEC BL 0x33802E4
	0x03987AF0 ADRP X0, 0x7C9000
	0x03987AF4 LDR X0, [X0 + 0x628]
	0x03987AF8 BL 0x1C16D08
	0x03987AFC MOV X1, X0
	0x03987B00 MOV X0, X20
	0x03987B04 BL 0x1C16DEC
	0x03987B08 BL 0x1C16F20
	0x03987B0C STR X30, [X31 - 0x20]!
	0x03987B10 STP X20, X19, [X31 + 0x10]
	0x03987B14 ADRP X20, 0xA5A000
	0x03987B18 LDRB W8, [X20 + 0xA5E]
	0x03987B1C MOV X19, X0
	0x03987B20 TBNZ X8, 0x0, 0x3987B38
	0x03987B24 ADRP X0, 0x76C000
	0x03987B28 LDR X0, [X0 + 0x598]
	0x03987B2C BL 0x1C16CF4
	0x03987B30 MOVZ W8, 0x1
	0x03987B34 STRB W8, [X20 + 0xA5E]
	0x03987B38 MOV X0, X19
	0x03987B3C STR W31, [X31 + 0xC]
	0x03987B40 BL 0x3987438
	0x03987B44 TBZ X0, 0x0, 0x3987BB8
	0x03987B48 LDR X0, [X19 + 0x10]
	0x03987B4C CBZ X0, 0x3987BD0
	0x03987B50 BL 0x398632C
	0x03987B54 CMP W0, 0x2
	0x03987B58 B.LT 0x3987BB8
	0x03987B5C ADD X1, X31, 0xC
	0x03987B60 MOV X0, X19
	0x03987B64 BL 0x3987BD4
	0x03987B68 TBZ X0, 0x0, 0x3987BB8
	0x03987B6C ADRP X8, 0x76C000
	0x03987B70 LDR X8, [X8 + 0x598]
	0x03987B74 LDR X20, [X19 + 0x18]
	0x03987B78 LDR X0, [X8]
	0x03987B7C LDR W8, [X0 + 0xE0]
	0x03987B80 CBNZ W8, 0x3987B88
	0x03987B84 BL 0x1C16DFC
	0x03987B88 MOV X0, X20
	0x03987B8C MOV X1, X31
	0x03987B90 MOV X2, X31
	0x03987B94 BL 0x3C3883C
	0x03987B98 LDR W20, [X31 + 0xC]
	0x03987B9C TBNZ X0, 0x0, 0x3987BAC
	0x03987BA0 LDR W8, [X19 + 0x28]
	0x03987BA4 CMP W20, W8
	0x03987BA8 B.EQ 0x3987BC4
	0x03987BAC MOV X0, X19
	0x03987BB0 BL 0x3987CC8
	0x03987BB4 B 0x3987BC0
	0x03987BB8 MOV W20, W31
	0x03987BBC STR X31, [X19 + 0x18]
	0x03987BC0 STR W20, [X19 + 0x28]
	0x03987BC4 LDP X20, X19, [X31 + 0x10]
	0x03987BC8 LDR X30, [X31], #0x20
	0x03987BCC RET
	0x03987BD0 BL 0x1C16F20
	0x03987BD4 STP X30, X25, [X31 - 0x40]!
	0x03987BD8 STP X24, X23, [X31 + 0x10]
	0x03987BDC STP X22, X21, [X31 + 0x20]
	0x03987BE0 STP X20, X19, [X31 + 0x30]
	0x03987BE4 ADRP X21, 0xA5A000
	0x03987BE8 LDRB W8, [X21 + 0xA60]
	0x03987BEC MOV X19, X1
	0x03987BF0 MOV X20, X0
	0x03987BF4 TBNZ X8, 0x0, 0x3987C0C
	0x03987BF8 ADRP X0, 0x76C000
	0x03987BFC LDR X0, [X0 + 0x598]
	0x03987C00 BL 0x1C16CF4
	0x03987C04 MOVZ W8, 0x1
	0x03987C08 STRB W8, [X21 + 0xA60]
	0x03987C0C MOVZ W8, 0x11
	0x03987C10 STR W8, [X19]
	0x03987C14 LDR X0, [X20 + 0x10]
	0x03987C18 CBZ X0, 0x3987CA4
	0x03987C1C ADRP X24, 0x76C000
	0x03987C20 LDR X24, [X24 + 0x598]
	0x03987C24 MOV W21, W31
	0x03987C28 MOVZ W25, 0x17
	0x03987C2C BL 0x398632C
	0x03987C30 MOV W22, W0
	0x03987C34 CMP W21, W0
	0x03987C38 B.GE 0x3987CAC
	0x03987C3C LDR X0, [X20 + 0x10]
	0x03987C40 CBZ X0, 0x3987CA4
	0x03987C44 MOV W1, W21
	0x03987C48 BL 0x39874C0
	0x03987C4C LDR X8, [X24]
	0x03987C50 MOV X23, X0
	0x03987C54 LDR W9, [X8 + 0xE0]
	0x03987C58 CBNZ W9, 0x3987C64
	0x03987C5C MOV X0, X8
	0x03987C60 BL 0x1C16DFC
	0x03987C64 MOV X0, X23
	0x03987C68 MOV X1, X31
	0x03987C6C MOV X2, X31
	0x03987C70 BL 0x3C354F8
	0x03987C74 TBZ X0, 0x0, 0x3987CA8
	0x03987C78 CBZ X23, 0x3987CA4
	0x03987C7C LDR X8, [X23]
	0x03987C80 LDR W22, [X19]
	0x03987C84 MOV X0, X23
	0x03987C88 LDP X9, X1, [X8 + 0x158]
	0x03987C8C BLR X9
	0x03987C90 MADD W8, W22, W25, W0
	0x03987C94 STR W8, [X19]
	0x03987C98 LDR X0, [X20 + 0x10]
	0x03987C9C ADD W21, W21, 0x1
	0x03987CA0 CBNZ X0, 0x3987C2C
	0x03987CA4 BL 0x1C16F20
	0x03987CA8 STR W31, [X19]
	0x03987CAC CMP W21, W22
	0x03987CB0 LDP X20, X19, [X31 + 0x30]
	0x03987CB4 LDP X22, X21, [X31 + 0x20]
	0x03987CB8 LDP X24, X23, [X31 + 0x10]
	0x03987CBC CSET W0, GE
	0x03987CC0 LDP X30, X25, [X31], #0x40
	0x03987CC4 RET
	0x03987CC8 STR D8, [X31 - 0x70]!
	0x03987CCC STP X29, X30, [X31 + 0x10]
	0x03987CD0 STP X28, X27, [X31 + 0x20]
	0x03987CD4 STP X26, X25, [X31 + 0x30]
	0x03987CD8 STP X24, X23, [X31 + 0x40]
	0x03987CDC STP X22, X21, [X31 + 0x50]
	0x03987CE0 STP X20, X19, [X31 + 0x60]
	0x03987CE4 ADRP X20, 0xA5A000
	0x03987CE8 ADRP X19, 0x794000
	0x03987CEC LDRB W8, [X20 + 0xA61]
	0x03987CF0 LDR X19, [X19 + 0x8F8]
	0x03987CF4 MOV X26, X0
	0x03987CF8 TBNZ X8, 0x0, 0x3987D34
	0x03987CFC ADRP X0, 0x794000
	0x03987D00 LDR X0, [X0 + 0x8F8]
	0x03987D04 BL 0x1C16CF4
	0x03987D08 ADRP X0, 0x773000
	0x03987D0C LDR X0, [X0 + 0x700]
	0x03987D10 BL 0x1C16CF4
	0x03987D14 ADRP X0, 0x79C000
	0x03987D18 LDR X0, [X0 + 0x8D0]
	0x03987D1C BL 0x1C16CF4
	0x03987D20 ADRP X0, 0x76E000
	0x03987D24 LDR X0, [X0 + 0x9B0]
	0x03987D28 BL 0x1C16CF4
	0x03987D2C MOVZ W8, 0x1
	0x03987D30 STRB W8, [X20 + 0xA61]
	0x03987D34 LDR X0, [X19]
	0x03987D38 ADRP X19, 0x773000
	0x03987D3C LDR X20, [X26 + 0x18]
	0x03987D40 LDR W8, [X0 + 0xE0]
	0x03987D44 LDR X19, [X19 + 0x700]
	0x03987D48 CBNZ W8, 0x3987D50
	0x03987D4C BL 0x1C16DFC
	0x03987D50 MOV X0, X20
	0x03987D54 MOV X1, X31
	0x03987D58 BL 0x39E1DF8
	0x03987D5C LDR X0, [X19]
	0x03987D60 BL 0x1C16F10
	0x03987D64 MOV X1, X31
	0x03987D68 MOV X20, X0
	0x03987D6C BL 0x3C17028
	0x03987D70 STR X20, [X26 + 0x18]
	0x03987D74 CBZ X20, 0x3988000
	0x03987D78 MOV X0, X20
	0x03987D7C MOV W1, W31
	0x03987D80 MOV X2, X31
	0x03987D84 BL 0x3C170A8
	0x03987D88 LDR X0, [X26 + 0x10]
	0x03987D8C CBZ X0, 0x3988000
	0x03987D90 ADRP X25, 0x76E000
	0x03987D94 ADRP X24, 0x79C000
	0x03987D98 LDR X25, [X25 + 0x9B0]
	0x03987D9C LDR X24, [X24 + 0x8D0]
	0x03987DA0 MOV W21, W31
	0x03987DA4 MOV W20, W31
	0x03987DA8 MOV W22, W31
	0x03987DAC BL 0x398632C
	0x03987DB0 CMP W22, W0
	0x03987DB4 B.GE 0x3987E04
	0x03987DB8 LDR X0, [X26 + 0x10]
	0x03987DBC CBZ X0, 0x3988000
	0x03987DC0 MOV W1, W22
	0x03987DC4 BL 0x39874C0
	0x03987DC8 CBZ X0, 0x3988000
	0x03987DCC MOV X1, X31
	0x03987DD0 MOV X23, X0
	0x03987DD4 BL 0x3C17618
	0x03987DD8 ADD W21, W0, W21
	0x03987DDC MOV X0, X23
	0x03987DE0 MOV W1, W31
	0x03987DE4 MOV X2, X31
	0x03987DE8 BL 0x3C19298
	0x03987DEC MOV W8, W0
	0x03987DF0 LDR X0, [X26 + 0x10]
	0x03987DF4 ADD W20, W8, W20
	0x03987DF8 ADD W22, W22, 0x1
	0x03987DFC CBNZ X0, 0x3987DAC
	0x03987E00 B 0x3988000
	0x03987E04 LDR X0, [X25]
	0x03987E08 MOV W1, W21
	0x03987E0C BL 0x1C16D6C
	0x03987E10 LDR X8, [X24]
	0x03987E14 MOV X21, X0
	0x03987E18 MOV W1, W20
	0x03987E1C MOV X0, X8
	0x03987E20 BL 0x1C16D6C
	0x03987E24 LDR X8, [X26 + 0x10]
	0x03987E28 CBZ X8, 0x3988000
	0x03987E2C MOV X20, X0
	0x03987E30 MOV W22, W31
	0x03987E34 MOV W19, W31
	0x03987E38 MOV W23, W31
	0x03987E3C MOVZ X27, 0x1
	0x03987E40 MOVZ W28, 0xC
	0x03987E44 MOV X0, X8
	0x03987E48 BL 0x398632C
	0x03987E4C CMP W23, W0
	0x03987E50 B.GE 0x3987FAC
	0x03987E54 LDR X0, [X26 + 0x10]
	0x03987E58 CBZ X0, 0x3988000
	0x03987E5C MOV W1, W23
	0x03987E60 STR W23, [X31 + 0xC]
	0x03987E64 BL 0x39874C0
	0x03987E68 CBZ X0, 0x3988000
	0x03987E6C MOV W1, W31
	0x03987E70 MOV X2, X31
	0x03987E74 MOV X24, X0
	0x03987E78 STR W19, [X31 + 0x8]
	0x03987E7C BL 0x3C191E8
	0x03987E80 MOV X23, X0
	0x03987E84 MOV X0, X24
	0x03987E88 MOV X1, X31
	0x03987E8C BL 0x3C17EBC
	0x03987E90 CBZ X0, 0x3988000
	0x03987E94 MOV X1, X21
	0x03987E98 MOV W2, W22
	0x03987E9C MOV X3, X31
	0x03987EA0 MOV X25, X26
	0x03987EA4 BL 0x339FC34
	0x03987EA8 MOV X0, X24
	0x03987EAC MOV X1, X31
	0x03987EB0 BL 0x3C17EBC
	0x03987EB4 CBZ X0, 0x3988000
	0x03987EB8 LDR W8, [X31 + 0xC]
	0x03987EBC MOV W9, W22
	0x03987EC0 MOV X29, X31
	0x03987EC4 SUB X19, X9, 0x1
	0x03987EC8 SCVTF S8, W8
	0x03987ECC UBFM X8, X9, 0x20, 0x1F
	0x03987ED0 LDRSW X9, [X0 + 0x18]
	0x03987ED4 CMP X29, X9
	0x03987ED8 B.GE 0x3987F1C
	0x03987EDC CBZ X21, 0x3988000
	0x03987EE0 LDR W9, [X21 + 0x18]
	0x03987EE4 ADD X29, X29, 0x1
	0x03987EE8 ADD X10, X19, X29
	0x03987EEC CMP X10, X9
	0x03987EF0 B.CS 0x3988004
	0x03987EF4 ADD X26, X8, X27
	0x03987EF8 SBFM X8, X8, 0x20, 0x3F
	0x03987EFC MADD X8, X8, X28, X21
	0x03987F00 MOV X0, X24
	0x03987F04 MOV X1, X31
	0x03987F08 STR S8, [X8 + 0x28]
	0x03987F0C BL 0x3C17EBC
	0x03987F10 MOV X8, X26
	0x03987F14 CBNZ X0, 0x3987ED0
	0x03987F18 B 0x3988000
	0x03987F1C CBZ X23, 0x3988000
	0x03987F20 LDR W8, [X23 + 0x18]
	0x03987F24 LDR W19, [X31 + 0x8]
	0x03987F28 MOV X26, X25
	0x03987F2C UBFM X9, X8, 0x20, 0x1F
	0x03987F30 CMP X9, 0x1
	0x03987F34 B.LT 0x3987F80
	0x03987F38 MOV W9, W19
	0x03987F3C SXTW X10, W8
	0x03987F40 UBFM X11, X9, 0x20, 0x1F
	0x03987F44 ADD X12, X23, 0x20
	0x03987F48 CBZ X8, 0x3988004
	0x03987F4C CBZ X20, 0x3988000
	0x03987F50 LDR W13, [X20 + 0x18]
	0x03987F54 CMP X9, X13
	0x03987F58 B.CS 0x3988004
	0x03987F5C LDR W13, [X12], #0x4
	0x03987F60 ADD X14, X20, X11, 0x1F, ASR
	0x03987F64 SUB X10, X10, 0x1
	0x03987F68 ADD X11, X11, X27
	0x03987F6C ADD X9, X9, 0x1
	0x03987F70 ADD W13, W13, W22
	0x03987F74 SUB X8, X8, 0x1
	0x03987F78 STRH W13, [X14 + 0x20]
	0x03987F7C CBNZ X10, 0x3987F48
	0x03987F80 MOV X0, X24
	0x03987F84 MOV X1, X31
	0x03987F88 BL 0x3C17618
	0x03987F8C LDR W9, [X23 + 0x18]
	0x03987F90 LDR W23, [X31 + 0xC]
	0x03987F94 LDR X8, [X26 + 0x10]
	0x03987F98 ADD W22, W0, W22
	0x03987F9C ADD W19, W19, W9
	0x03987FA0 ADD W23, W23, 0x1
	0x03987FA4 CBNZ X8, 0x3987E44
	0x03987FA8 B 0x3988000
	0x03987FAC LDR X0, [X26 + 0x18]
	0x03987FB0 CBZ X0, 0x3988000
	0x03987FB4 MOV X1, X21
	0x03987FB8 MOV X2, X31
	0x03987FBC BL 0x3C17F08
	0x03987FC0 LDR X0, [X26 + 0x18]
	0x03987FC4 CBZ X0, 0x3988000
	0x03987FC8 MOV X1, X20
	0x03987FCC LDP X20, X19, [X31 + 0x60]
	0x03987FD0 LDP X22, X21, [X31 + 0x50]
	0x03987FD4 LDP X24, X23, [X31 + 0x40]
	0x03987FD8 LDP X26, X25, [X31 + 0x30]
	0x03987FDC LDP X28, X27, [X31 + 0x20]
	0x03987FE0 LDP X29, X30, [X31 + 0x10]
	0x03987FE4 MOVZ W4, 0x1
	0x03987FE8 MOV W2, W31
	0x03987FEC MOV W3, W31
	0x03987FF0 MOV W5, W31
	0x03987FF4 MOV X6, X31
	0x03987FF8 LDR V8, [X31], #0x70
	0x03987FFC B 0x3C19998
	0x03988000 BL 0x1C16F20
	0x03988004 BL 0x1C16F28
	0x03988008 STR X30, [X31 - 0x30]!
	0x0398800C STP X22, X21, [X31 + 0x10]
	0x03988010 STP X20, X19, [X31 + 0x20]
	0x03988014 ADRP X21, 0xA59000
	0x03988018 ADRP X22, 0x7C8000
	0x0398801C ADRP X19, 0x7C8000
	0x03988020 ADRP X20, 0x7C8000
	0x03988024 LDRB W8, [X21 + 0xA62]
	0x03988028 LDR X22, [X22 + 0x598]
	0x0398802C LDR X19, [X19 + 0x630]
	0x03988030 LDR X20, [X20 + 0x5F8]
	0x03988034 TBNZ X8, 0x0, 0x3988064
	0x03988038 ADRP X0, 0x7C8000
	0x0398803C LDR X0, [X0 + 0x598]
	0x03988040 BL 0x1C16CF4
	0x03988044 ADRP X0, 0x7C8000
	0x03988048 LDR X0, [X0 + 0x5F8]
	0x0398804C BL 0x1C16CF4
	0x03988050 ADRP X0, 0x7C8000
	0x03988054 LDR X0, [X0 + 0x630]
	0x03988058 BL 0x1C16CF4
	0x0398805C MOVZ W8, 0x1
	0x03988060 STRB W8, [X21 + 0xA62]
	0x03988064 LDR X0, [X22]
	0x03988068 BL 0x1C16F10
	0x0398806C LDR X1, [X19]
	0x03988070 MOV X2, X31
	0x03988074 MOV X19, X0
	0x03988078 BL 0x39B19AC
	0x0398807C LDR X8, [X20]
	0x03988080 LDP X22, X21, [X31 + 0x10]
	0x03988084 LDR X8, [X8 + 0xB8]
	0x03988088 STR X19, [X8]
	0x0398808C LDP X20, X19, [X31 + 0x20]
	0x03988090 LDR X30, [X31], #0x30
	0x03988094 RET
	0x03988098 STP X30, X23, [X31 - 0x30]!
	0x0398809C STP X22, X21, [X31 + 0x10]
	0x039880A0 STP X20, X19, [X31 + 0x20]
	0x039880A4 ADRP X23, 0xA59000
	0x039880A8 ADRP X22, 0x7C8000
	0x039880AC ADRP X20, 0x7C8000

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 752
	022 Move [X31+32], X0
	023 Move [X31+40], X1
	024 Move X23, 0xA5B000
	025 Move X21, 0x76D000
	026 Move W8, [X23+2650]
	027 Move X21, [X21+2416]
	028 Move X22, X3
	029 Move X20, X2
	030 Add X19, X31, 528
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0x76D000
	036 Move X0, [X0+2416]
	037 Call 0x1C17CF4
	038 Move X0, 0x7CA000
	039 Move X0, [X0+1384]
	040 Call 0x1C17CF4
	041 Move X0, 0x7CA000
	042 Move X0, [X0+1392]
	043 Call 0x1C17CF4
	044 Move X0, 0x76D000
	045 Move X0, [X0+1432]
	046 Call 0x1C17CF4
	047 Move X0, 0x7CA000
	048 Move X0, [X0+1400]
	049 Call 0x1C17CF4
	050 Move X0, 0x7CA000
	051 Move X0, [X0+1408]
	052 Call 0x1C17CF4
	053 Move X0, 0x7CA000
	054 Move X0, [X0+1280]
	055 Call 0x1C17CF4
	056 Move X0, 0x7CA000
	057 Move X0, [X0+1416]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+2650], W8
	061 Move X0, [X21]
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 Move [X31+744], X31
	064 Move [X31+736], X31
	065 Move [X31+728], W31
	066 Move [X31+720], X31
	067 Move [X31+652], W31
	068 Move [X31+688], V0
	069 Move [X31+696], V0
	070 Move [X31+656], V0
	071 Move [X31+664], V0
	072 Move [X19+108], V0
	073 Move [X31+608], V0
	074 Move [X31+616], V0
	075 Move [X31+37], V0
	076 Move [X19+44], V0
	077 Move [X31+544], V0
	078 Move [X31+552], V0
	079 Move [X31+512], V0
	080 Move [X31+520], V0
	081 Move [X31+480], V0
	082 Move [X31+488], V0
	083 Move [X31+29], V0
	084 Move [X31+448], X31
	085 Move [X31+416], V0
	086 Move [X31+424], V0
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X31
	092 Call Application.get_platform
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X21, 0x7CA000
	095 Move X21, [X21+1400]
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfEqual {104}
	100 Compare X22, 0
	101 JumpIfNotEqual {108}
	102 Compare X22, 0
	103 JumpIfNotEqual {112}
	104 Call 0x1C17DFC
	105 Move X0, [X21]
	106 Compare X22, 0
	107 JumpIfEqual {840}
	108 Move X8, [X0+184]
	109 Move W8, [X8+1]
	110 Compare W8, 0
	111 JumpIfEqual {840}
	112 Move X0, X22
	113 Move X1, X31
	114 Call IntegratedSubsystem.get_running, X0
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {840}
	119 Move X8, 0x76D000
	120 Move X8, [X8+1432]
	121 Move X0, [X8]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X20
	127 Move X1, X31
	128 Move X2, X31
	129 Call Object.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {840}
	134 Move X0, X22
	135 Move X1, X31
	136 Call XRDisplaySubsystem.GetPreferredMirrorBlitMode, X0
	137 Move W23, W0
	138 Add X2, X31, 736
	139 Move X0, X22
	140 Move X1, X31
	141 Move W3, W23
	142 Move X4, X31
	143 Call XRDisplaySubsystem.GetMirrorViewBlitDesc, X0, X1, X2, X3
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {799}
	148 Move X21, 0x7CA000
	149 Move X21, [X21+1408]
	150 Move X0, [X21]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X21]
	156 Move X8, [X0+184]
	157 Move X1, [X31+32]
	158 Add X0, X31, 728
	159 Move X3, X31
	160 Move X2, [X8+8]
	161 Call ProfilingScope..ctor, X0, X1, X2
	162 Move X0, [X31+40]
	163 Compare X0, 0
	164 JumpIfEqual {878}
	165 Move X1, X31
	166 Call Camera.get_targetTexture, X0
	167 Move X8, 0x76D000
	168 Move X8, [X8+1432]
	169 Move X24, X0
	170 Move X0, [X8]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X24
	176 Move X1, X31
	177 Move X2, X31
	178 Call Object.op_Inequality, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {189}
	183 Move X0, [X31+40]
	184 Move X1, X31
	185 Call Camera.get_targetTexture, X0
	186 Add X8, X31, 304
	187 Move X1, X31
	188 Call RenderTargetIdentifier.op_Implicit, X0
	189 NotImplemented "Instruction MOVI not yet implemented."
	190 Move [X31+336], X31
	191 Move [X31+304], V0
	192 Move [X31+312], V0
	193 Add X0, X31, 304
	194 Move W1, 2
	195 Move X2, X31
	196 Call RenderTargetIdentifier..ctor, X0, X1
	197 Move V0, [X31+304]
	198 Move V1, [X31+320]
	199 Move X8, [X31+336]
	200 Move X0, [X31+32]
	201 Move [X31+416], V0
	202 Move [X31+424], V1
	203 Move [X31+448], X8
	204 Compare X0, 0
	205 JumpIfEqual {880}
	206 Move V0, [X31+416]
	207 Move V1, [X31+432]
	208 Move X8, [X31+448]
	209 Move [X31+368], V0
	210 Move [X31+376], V1
	211 Move [X31+400], X8
	212 Add X1, X31, 368
	213 Move X2, X31
	214 Call CommandBuffer.SetRenderTarget, X0, X1
	215 Move W8, [X31+744]
	216 Move TEMP, X8
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {789}
	220 Move W8, [X31+748]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X23, 0x771000
	223 Move X23, [X23+624]
	224 Move W22, W31
	225 Move X24, 0xA52000
	226 Add X0, X31, 736
	227 Add X2, X31, 656
	228 Move W1, W22
	229 Move X3, X31
	230 Call XRMirrorViewBlitDesc.GetBlitParameter, X0, X1, X2
	231 Move V12, [X31+676]
	232 Move V15, [X31+680]
	233 Move V13, [X31+668]
	234 Move V14, [X31+672]
	235 Move V0, [X31+692]
	236 Move V9, [X31+696]
	237 Move V10, [X31+684]
	238 Move V11, [X31+688]
	239 Move [X31+28], S0
	240 Move X0, [X31+40]
	241 Move X1, X31
	242 Call Camera.get_targetTexture, X0
	243 Move X8, 0x76D000
	244 Move X8, [X8+1432]
	245 Move X25, X0
	246 Move X0, [X8]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X0, X25
	252 Move X1, X31
	253 Move X2, X31
	254 Call Object.op_Inequality, X0, X1
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfEqual {267}
	259 Move X0, [X31+40]
	260 Move X1, X31
	261 Call Camera.get_cameraType, X0
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X0, [X31+40]
	264 Move X1, X31
	265 Call Camera.get_cameraType, X0
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move V0, [X31+680]
	268 NotImplemented "Instruction FNEG not yet implemented."
	269 Add S14, S14, S0
	270 Move X8, 0x7CA000
	271 Move X8, [X8+1392]
	272 Move X0, [X8]
	273 Move W8, [X0+224]
	274 Compare W8, 0
	275 JumpIfNotEqual {277}
	276 Call 0x1C17DFC
	277 Move X0, X31
	278 Call HDROutputSettings.get_main
	279 Move W8, [X31+712]
	280 Move X25, X0
	281 Move TEMP, X8
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfEqual {294}
	285 Compare X25, 0
	286 JumpIfEqual {876}
	287 Move X0, X25
	288 Move X1, X31
	289 Call HDROutputSettings.get_active, X0
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {296}
	294 Compare X25, 0
	295 JumpIfEqual {874}
	296 Move X0, X25
	297 Move X1, X31
	298 Call HDROutputSettings.get_active, X0
	299 Move TEMP, X0
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfNotEqual {307}
	303 Move X0, X25
	304 Move X1, X31
	305 Call HDROutputSettings.get_displayColorGamut, X0
	306 Move W28, W0
	307 Move W28, W31
	308 Move W27, [X31+712]
	309 Move W29, [X31+716]
	310 Move W0, W28
	311 Move X1, X31
	312 Call ColorGamutUtility.GetColorPrimaries, X0
	313 NotImplemented "Instruction SBFM not yet implemented."
	314 Move W26, W0
	315 And W29, W8, W29
	316 Move W0, W29
	317 Move X1, X31
	318 Call ColorGamutUtility.GetColorPrimaries, X0
	319 Move W27, W0
	320 Move X0, [X21]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {326}
	324 Call 0x1C17DFC
	325 Move X0, [X21]
	326 Move X8, [X0+184]
	327 Move X0, [X8]
	328 Move W1, W28
	329 Move X2, X31
	330 Call HDROutputUtils.ConfigureHDROutput, X0, X1
	331 Move W1, 3
	332 Move X0, X20
	333 Move X2, X31
	334 Call HDROutputUtils.ConfigureHDROutput, X0, X1
	335 Add X1, X31, 652
	336 Move W0, W29
	337 Move X2, X31
	338 Call HDROutputUtils.GetColorEncodingForGamut, X0, X1
	339 Move X8, [X21]
	340 Move X8, [X8+184]
	341 Move X0, [X8]
	342 Compare X0, 0
	343 JumpIfEqual {870}
	344 Move W1, [X8+48]
	345 Move W2, [X31+652]
	346 Move X3, X31
	347 Call MaterialPropertyBlock.SetInteger, X0, X1, X2
	348 Move W8, [X24+2752]
	349 Compare W8, 0
	350 JumpIfNotEqual {355}
	351 Move X0, X23
	352 Call 0x1C17CF4
	353 Move W8, 1
	354 Move [X24+2752], W8
	355 Move X8, [X23]
	356 Move X8, [X8+184]
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 Move V3, [X8+80]
	359 Move V1, [X8+96]
	360 Move V2, [X8+4]
	361 Move [X19+108], V0
	362 Move [X31+608], V3
	363 Move [X31+616], V1
	364 Move [X31+37], V2
	365 Compare W27, 0
	366 JumpIfEqual {390}
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move S8, W31
	369 Move X8, 0x7CA000
	370 Move X8, [X8+1384]
	371 Move X0, [X8]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {379}
	375 Call 0x1C17DFC
	376 Move X8, 0x7CA000
	377 Move X8, [X8+1384]
	378 Move X0, [X8]
	379 Move X8, [X0+184]
	380 Add X9, X8, 256
	381 Move V0, [X8+256]
	382 Move V1, [X8+272]
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 Move V3, [X8+18]
	385 Add X8, X8, 316
	386 Move [X31+592], V0
	387 Move [X31+600], V1
	388 Move [X19+108], V2
	389 Move [X31+39], V3
	390 Move X8, 0x7CA000
	391 Move X8, [X8+1384]
	392 Move X0, [X8]
	393 Move W8, [X0+224]
	394 Compare W8, 0
	395 JumpIfNotEqual {400}
	396 Call 0x1C17DFC
	397 Move X8, 0x7CA000
	398 Move X8, [X8+1384]
	399 Move X0, [X8]
	400 Move X8, [X0+184]
	401 NotImplemented "Instruction LDUR not yet implemented."
	402 Move V2, [X8+16]
	403 Move V1, [X8+32]
	404 Move V3, [X8+60]
	405 Move [X19+108], V0
	406 Move [X31+608], V2
	407 Move [X31+616], V1
	408 Move [X31+37], V3
	409 Move V8, [X8]
	410 Move W8, [X24+2752]
	411 Compare W8, 0
	412 JumpIfNotEqual {417}
	413 Move X0, X23
	414 Call 0x1C17CF4
	415 Move W8, 1
	416 Move [X24+2752], W8
	417 Move X8, [X23]
	418 Move X8, [X8+184]
	419 NotImplemented "Instruction LDUR not yet implemented."
	420 Move V3, [X8+80]
	421 Move V1, [X8+96]
	422 Move V2, [X8+4]
	423 Move [X19+44], V0
	424 Move [X31+544], V3
	425 Move [X31+552], V1
	426 Move [X31+33], V2
	427 Compare W26, 0
	428 JumpIfEqual {447}
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move S0, W31
	431 Move X8, 0x7CA000
	432 Move X8, [X8+1384]
	433 Move X0, [X8]
	434 Move W8, [X0+224]
	435 Compare W8, 0
	436 JumpIfNotEqual {441}
	437 Call 0x1C17DFC
	438 Move X8, 0x7CA000
	439 Move X8, [X8+1384]
	440 Move X0, [X8]
	441 Move X8, [X0+184]
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 Move V2, [X8+208]
	444 Move V1, [X8+224]
	445 Move V3, [X8+12]
	446 Add X8, X8, 252
	447 Move X8, 0x7CA000
	448 Move X8, [X8+1384]
	449 Move X0, [X8]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {457}
	453 Call 0x1C17DFC
	454 Move X8, 0x7CA000
	455 Move X8, [X8+1384]
	456 Move X0, [X8]
	457 Move X8, [X0+184]
	458 NotImplemented "Instruction LDUR not yet implemented."
	459 Move V2, [X8+144]
	460 Move V1, [X8+160]
	461 Move V3, [X8+8]
	462 Add X8, X8, 188
	463 Move [X19+44], V0
	464 Move [X31+544], V2
	465 Move [X31+552], V1
	466 Move [X31+33], V3
	467 Move V0, [X8]
	468 Move V1, [X31+592]
	469 Move V2, [X31+608]
	470 Move V3, [X31+39]
	471 NotImplemented "Instruction LDUR not yet implemented."
	472 Add X8, X31, 176
	473 Move [X31+240], V1
	474 Move [X31+248], V2
	475 Move V1, [X31+528]
	476 Move V2, [X31+544]
	477 Move [X31+17], V3
	478 Move V3, [X31+35]
	479 Move [X8+108], V4
	480 NotImplemented "Instruction LDUR not yet implemented."
	481 Move [X31+176], V1
	482 Move [X31+184], V2
	483 Move [X31+13], V3
	484 Move [X31+300], S8
	485 Move [X8+44], V4
	486 Move [X31+236], S0
	487 Add X8, X31, 304
	488 Add X0, X31, 240
	489 Add X1, X31, 176
	490 Move X2, X31
	491 Call Matrix4x4.op_Multiply, X0, X1
	492 Move V0, [X31+304]
	493 Move V1, [X31+320]
	494 Move V2, [X31+336]
	495 Move V3, [X31+352]
	496 Move X0, [X21]
	497 Move [X31+464], V0
	498 Move [X31+472], V1
	499 Move [X31+496], V2
	500 Move [X31+504], V3
	501 Move W8, [X0+224]
	502 Compare W8, 0
	503 JumpIfNotEqual {506}
	504 Call 0x1C17DFC
	505 Move X0, [X21]
	506 Move X8, [X0+184]
	507 Move V0, [X31+464]
	508 Move V1, [X31+480]
	509 Move V2, [X31+496]
	510 Move V3, [X31+512]
	511 Move X0, [X8]
	512 Move W1, [X8+52]
	513 Move [X31+304], V0
	514 Move [X31+312], V1
	515 Move [X31+336], V2
	516 Move [X31+344], V3
	517 Compare X0, 0
	518 JumpIfEqual {871}
	519 Move V0, [X31+304]
	520 Move V1, [X31+320]
	521 Move V2, [X31+336]
	522 Move V3, [X31+352]
	523 Move [X31+112], V0
	524 Move [X31+120], V1
	525 Move [X31+144], V2
	526 Move [X31+152], V3
	527 Add X2, X31, 112
	528 Move X3, X31
	529 Call MaterialPropertyBlock.SetMatrix, X0, X1, X2
	530 Move X8, [X21]
	531 Move X8, [X8+184]
	532 Move X26, [X8]
	533 Move W27, [X8+40]
	534 Move X0, X25
	535 Move X1, X31
	536 Call HDROutputSettings.get_active, X0
	537 Move TEMP, X0
	538 And TEMP, TEMP, 1
	539 Compare TEMP, 1
	540 JumpIfNotEqual {545}
	541 Move X0, X25
	542 Move X1, X31
	543 Call HDROutputSettings.get_maxToneMapLuminance, X0
	544 NotImplemented "Instruction SCVTF not yet implemented."
	545 Move W8, 0x43200000
	546 Move S0, W8
	547 Compare X26, 0
	548 JumpIfEqual {872}
	549 Move X0, X26
	550 Move W1, W27
	551 Move X2, X31
	552 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	553 Move X0, [X21]
	554 Move W8, [X0+224]
	555 Compare W8, 0
	556 JumpIfNotEqual {559}
	557 Call 0x1C17DFC
	558 Move X0, [X21]
	559 Move X8, [X0+184]
	560 Move X0, [X8]
	561 Compare X0, 0
	562 JumpIfEqual {873}
	563 Move V0, [X31+720]
	564 Move W9, [X31+712]
	565 Move W1, [X8+44]
	566 Move W8, 0x43200000
	567 NotImplemented "Instruction SCVTF not yet implemented."
	568 And W31, W9, 1
	569 Move S1, W8
	570 NotImplemented "Instruction FCSEL not yet implemented."
	571 Move X2, X31
	572 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	573 Move X0, [X31+656]
	574 Compare X0, 0
	575 JumpIfEqual {865}
	576 Move X1, X31
	577 Call RenderTexture.get_sRGB, X0
	578 Move TEMP, X0
	579 And TEMP, TEMP, 1
	580 Compare TEMP, 1
	581 JumpIfNotEqual {583}
	582 Move W25, W31
	583 Move X0, [X31+656]
	584 Compare X0, 0
	585 JumpIfEqual {875}
	586 Move X1, X31
	587 Call RenderTexture.get_graphicsFormat, X0
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move W25, 1
	590 Move X0, [X31+656]
	591 Compare X0, 0
	592 JumpIfEqual {877}
	593 Move X1, X31
	594 Call RenderTexture.get_graphicsFormat, X0
	595 NotImplemented "Instruction CMP not yet implemented."
	596 NotImplemented "Instruction CSET not yet implemented."
	597 Move X0, [X21]
	598 Move W8, [X0+224]
	599 Compare W8, 0
	600 JumpIfNotEqual {603}
	601 Call 0x1C17DFC
	602 Move X0, [X21]
	603 Move X8, [X0+184]
	604 Move X0, [X8]
	605 Compare X0, 0
	606 JumpIfEqual {863}
	607 Move W1, [X8+32]
	608 NotImplemented "Instruction CMP not yet implemented."
	609 Move S0, 1
	610 Move S1, W31
	611 NotImplemented "Instruction FCSEL not yet implemented."
	612 Move X2, X31
	613 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	614 Move X0, [X21]
	615 Move W8, [X0+224]
	616 Compare W8, 0
	617 JumpIfNotEqual {620}
	618 Call 0x1C17DFC
	619 Move X0, [X21]
	620 Move X8, [X0+184]
	621 Move X25, [X8]
	622 Move W26, [X8+36]
	623 Move X0, X31
	624 Call QualitySettings.get_activeColorSpace
	625 Compare X25, 0
	626 JumpIfEqual {864}
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Move S0, 1
	629 Move S1, W31
	630 NotImplemented "Instruction FCSEL not yet implemented."
	631 Move X0, X25
	632 Move W1, W26
	633 Move X2, X31
	634 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	635 Move X0, [X21]
	636 Move W8, [X0+224]
	637 Compare W8, 0
	638 JumpIfNotEqual {641}
	639 Call 0x1C17DFC
	640 Move X0, [X21]
	641 Move X8, [X0+184]
	642 Move X0, [X8]
	643 Compare X0, 0
	644 JumpIfEqual {868}
	645 Move W1, [X8+16]
	646 Move X2, [X31+656]
	647 Move X3, X31
	648 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	649 Move X8, [X21]
	650 Move X8, [X8+184]
	651 Move X0, [X8]
	652 Compare X0, 0
	653 JumpIfEqual {869}
	654 Move W1, [X8+24]
	655 Move V0, V12
	656 Move V1, V15
	657 Move V2, V13
	658 Move V3, V14
	659 Move X2, X31
	660 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	661 Move X8, [X21]
	662 Move X8, [X8+184]
	663 Move X0, [X8]
	664 Compare X0, 0
	665 JumpIfEqual {866}
	666 Move W1, [X8+28]
	667 Move V0, [X31+28]
	668 Move V1, V9
	669 Move V2, V10
	670 Move V3, V11
	671 Move X2, X31
	672 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	673 Move X8, [X21]
	674 Move X8, [X8+184]
	675 Move X0, [X8]
	676 Compare X0, 0
	677 JumpIfEqual {862}
	678 Move V0, [X31+664]
	679 Move W1, [X8+20]
	680 NotImplemented "Instruction SCVTF not yet implemented."
	681 Move X2, X31
	682 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	683 Move X8, 0x7CA000
	684 Move X8, [X8+1280]
	685 Move X0, [X8]
	686 Move W8, [X0+224]
	687 Compare W8, 0
	688 JumpIfNotEqual {690}
	689 Call 0x1C17DFC
	690 Move X8, 0xA5B000
	691 Move W8, [X8+2873]
	692 Compare W8, 0
	693 JumpIfNotEqual {700}
	694 Move X0, 0x7CA000
	695 Move X0, [X0+1280]
	696 Call 0x1C17CF4
	697 Move X8, 0xA5B000
	698 Move W9, 1
	699 Move [X8+2873], W9
	700 Move X8, 0x7CA000
	701 Move X8, [X8+1280]
	702 Move X0, [X8]
	703 Move W8, [X0+224]
	704 Compare W8, 0
	705 JumpIfNotEqual {710}
	706 Call 0x1C17DFC
	707 Move X8, 0x7CA000
	708 Move X8, [X8+1280]
	709 Move X0, [X8]
	710 Move X8, [X0+184]
	711 Move W8, [X8+76]
	712 Move TEMP, X8
	713 And TEMP, TEMP, 2
	714 Compare TEMP, 2
	715 JumpIfNotEqual {735}
	716 Move X0, [X31+704]
	717 Move X1, X31
	718 Move X2, X31
	719 Call IntPtr.op_Inequality, X0, X1
	720 Move TEMP, X0
	721 And TEMP, TEMP, 1
	722 Compare TEMP, 1
	723 JumpIfNotEqual {735}
	724 Move X1, [X31+704]
	725 Move X25, [X31+32]
	726 Move X2, X31
	727 Move X0, X25
	728 Call CommandBuffer.ConfigureFoveatedRendering, X0, X1
	729 Move X8, 0x7CA000
	730 Move X8, [X8+1416]
	731 Move X1, [X8]
	732 Move X0, X25
	733 Move X2, X31
	734 Call CommandBuffer.EnableShaderKeyword, X0, X1
	735 Move X0, [X31+656]
	736 Compare X0, 0
	737 JumpIfEqual {867}
	738 Move X8, [X0]
	739 Move X9, [X8+456]
	740 Move X1, [X8+464]
	741 NotImplemented "Instruction BLR not yet implemented."
	742 Move W8, [X24+2752]
	743 NotImplemented "Instruction CMP not yet implemented."
	744 NotImplemented "Instruction CSET not yet implemented."
	745 Compare W8, 0
	746 JumpIfNotEqual {751}
	747 Move X0, X23
	748 Call 0x1C17CF4
	749 Move W8, 1
	750 Move [X24+2752], W8
	751 Move X8, [X23]
	752 Move X0, [X21]
	753 Move X8, [X8+184]
	754 Move V0, [X8+96]
	755 Move V1, [X8+112]
	756 Move V3, [X8+64]
	757 Move V2, [X8+80]
	758 Move [X31+336], V0
	759 Move [X31+344], V1
	760 Move [X31+304], V3
	761 Move [X31+312], V2
	762 Move W8, [X0+224]
	763 Compare W8, 0
	764 JumpIfNotEqual {767}
	765 Call 0x1C17DFC
	766 Move X0, [X21]
	767 Move X8, [X0+184]
	768 Move V0, [X31+304]
	769 Move V1, [X31+320]
	770 Move V2, [X31+336]
	771 Move V3, [X31+352]
	772 Move X7, [X8]
	773 Move [X31+48], V0
	774 Move [X31+56], V1
	775 Move [X31+80], V2
	776 Move [X31+88], V3
	777 Move X0, [X31+32]
	778 Add X1, X31, 48
	779 Move W4, 2
	780 Move W5, 4
	781 Move W6, 1
	782 Move X2, X20
	783 Move W3, W25
	784 Move [X31], X31
	785 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	786 Move W8, [X31+748]
	787 Add W22, W22, 1
	788 NotImplemented "Instruction CMP not yet implemented."
	789 Move W8, [X31+745]
	790 Move X1, [X31+32]
	791 And W2, W8, 1
	792 Move X0, X22
	793 Move W3, W23
	794 Move X4, X31
	795 Call XRDisplaySubsystem.AddGraphicsThreadMirrorViewBlit, X0, X1, X2, X3
	796 Add X0, X31, 728
	797 Move X1, X31
	798 Call ProfilingScope.Dispose, X0
	799 Move X19, 0x7CA000
	800 Move X19, [X19+1280]
	801 Move X0, [X19]
	802 Move W8, [X0+224]
	803 Compare W8, 0
	804 JumpIfNotEqual {806}
	805 Call 0x1C17DFC
	806 Move X20, 0xA5B000
	807 Move W8, [X20+2873]
	808 Compare W8, 0
	809 JumpIfNotEqual {815}
	810 Move X0, 0x7CA000
	811 Move X0, [X0+1280]
	812 Call 0x1C17CF4
	813 Move W8, 1
	814 Move [X20+2873], W8
	815 Move X0, [X19]
	816 Move W8, [X0+224]
	817 Compare W8, 0
	818 JumpIfNotEqual {821}
	819 Call 0x1C17DFC
	820 Move X0, [X19]
	821 Move X8, [X0+184]
	822 Move W8, [X8+76]
	823 Move TEMP, X8
	824 And TEMP, TEMP, 2
	825 Compare TEMP, 2
	826 JumpIfNotEqual {840}
	827 Move X19, [X31+32]
	828 Compare X19, 0
	829 JumpIfEqual {879}
	830 Move X8, 0x7CA000
	831 Move X8, [X8+1416]
	832 Move X0, X19
	833 Move X2, X31
	834 Move X1, [X8]
	835 Call CommandBuffer.DisableShaderKeyword, X0, X1
	836 Move X0, X19
	837 Move X1, X31
	838 Move X2, X31
	839 Call CommandBuffer.ConfigureFoveatedRendering, X0, X1
	840 Add X31, X31, 752
	841 Move X20, [X31+144]
	842 Move X19, [X31+152]
	843 Move X22, [X31+128]
	844 Move X21, [X31+136]
	845 Move X24, [X31+112]
	846 Move X23, [X31+120]
	847 Move X26, [X31+96]
	848 Move X25, [X31+104]
	849 Move X28, [X31+80]
	850 Move X27, [X31+88]
	851 Move X29, [X31+64]
	852 Move X30, [X31+72]
	853 Move D9, [X31+48]
	854 Move D8, [X31+56]
	855 Move D11, [X31+32]
	856 Move D10, [X31+40]
	857 Move D13, [X31+16]
	858 Move D12, [X31+24]
	859 Move D15, [X31+160]
	860 Move D14, [X31+168]
	861 Return 
	862 Call 0x1C17F20
	863 Call 0x1C17F20
	864 Call 0x1C17F20
	865 Call 0x1C17F20
	866 Call 0x1C17F20
	867 Call 0x1C17F20
	868 Call 0x1C17F20
	869 Call 0x1C17F20
	870 Call 0x1C17F20
	871 Call 0x1C17F20
	872 Call 0x1C17F20
	873 Call 0x1C17F20
	874 Call 0x1C17F20
	875 Call 0x1C17F20
	876 Call 0x1C17F20
	877 Call 0x1C17F20
	878 Call 0x1C17F20
	879 Call 0x1C17F20
	880 Call 0x1C17F20
	881 Move X20, X0
	882 NotImplemented "Instruction CMP not yet implemented."
	883 Move X0, X20
	884 Call 0x3EB2AD0
	885 Move X21, [X0]
	886 Call 0x3EB2AE0
	887 Add X0, X31, 728
	888 Move X1, X31
	889 Call ProfilingScope.Dispose, X0
	890 Compare X21, 0
	891 JumpIfEqual {799}
	892 Move X0, X21
	893 Call 0x1C17F18
	894 Move X21, X31
	895 Move X20, X0
	896 Add X0, X31, 728
	897 Move X1, X31
	898 Call ProfilingScope.Dispose, X0
	899 Compare X21, 0
	900 JumpIfNotEqual {903}
	901 Move X0, X20
	902 Call 0x1D2D690
	903 Move X0, X21
	904 Call 0x1C17F18
	905 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x039880B0 ADRP X21, 0x7C8000
	0x039880B4 LDRB W8, [X23 + 0xA63]
	0x039880B8 LDR X22, [X22 + 0x638]
	0x039880BC LDR X20, [X20 + 0x640]
	0x039880C0 LDR X21, [X21 + 0x5F8]
	0x039880C4 MOV X19, X0
	0x039880C8 TBNZ X8, 0x0, 0x39880F8
	0x039880CC ADRP X0, 0x7C8000
	0x039880D0 LDR X0, [X0 + 0x640]
	0x039880D4 BL 0x1C16CF4
	0x039880D8 ADRP X0, 0x7C8000
	0x039880DC LDR X0, [X0 + 0x638]
	0x039880E0 BL 0x1C16CF4
	0x039880E4 ADRP X0, 0x7C8000
	0x039880E8 LDR X0, [X0 + 0x5F8]
	0x039880EC BL 0x1C16CF4
	0x039880F0 MOVZ W8, 0x1
	0x039880F4 STRB W8, [X23 + 0xA63]
	0x039880F8 MOV X0, X19
	0x039880FC MOV X1, X31
	0x03988100 BL 0x33BDD8C
	0x03988104 LDR X0, [X22]
	0x03988108 BL 0x1C16F10
	0x0398810C LDR X2, [X20]
	0x03988110 MOVZ W1, 0x2
	0x03988114 MOV X20, X0
	0x03988118 BL 0x30DF94C
	0x0398811C STR X20, [X19 + 0x10]
	0x03988120 LDR X0, [X21]
	0x03988124 BL 0x1C16F10
	0x03988128 MOV X1, X31
	0x0398812C MOV X20, X0
	0x03988130 BL 0x33BDD8C
	0x03988134 STR X19, [X20 + 0x10]
	0x03988138 STR X20, [X19 + 0x18]
	0x0398813C LDP X20, X19, [X31 + 0x20]
	0x03988140 LDP X22, X21, [X31 + 0x10]
	0x03988144 LDP X30, X23, [X31], #0x30
	0x03988148 RET
	0x0398814C STP X29, X30, [X31 - 0x30]!
	0x03988150 STP X22, X21, [X31 + 0x10]
	0x03988154 STP X20, X19, [X31 + 0x20]
	0x03988158 SUB X31, X31, 0xF30
	0x0398815C MRS X21, 0xC000
	0x03988160 LDR X8, [X21 + 0x28]
	0x03988164 ADRP X22, 0xA59000
	0x03988168 ADRP X20, 0x7C8000
	0x0398816C MOV X19, X0
	0x03988170 STR X8, [X31 + 0xF28]
	0x03988174 LDRB W8, [X22 + 0xA64]
	0x03988178 LDR X20, [X20 + 0x648]
	0x0398817C TBNZ X8, 0x0, 0x39881A0
	0x03988180 ADRP X0, 0x7C8000
	0x03988184 LDR X0, [X0 + 0x650]
	0x03988188 BL 0x1C16CF4
	0x0398818C ADRP X0, 0x7C8000
	0x03988190 LDR X0, [X0 + 0x648]
	0x03988194 BL 0x1C16CF4
	0x03988198 MOVZ W8, 0x1
	0x0398819C STRB W8, [X22 + 0xA64]
	0x039881A0 LDR X0, [X20]
	0x039881A4 ADRP X20, 0x7C8000
	0x039881A8 LDR W8, [X0 + 0xE0]
	0x039881AC LDR X20, [X20 + 0x650]
	0x039881B0 CBNZ W8, 0x39881B8
	0x039881B4 BL 0x1C16DFC
	0x039881B8 LDR X0, [X20]
	0x039881BC BL 0x2D55510
	0x039881C0 MOV X20, X0
	0x039881C4 ADD X0, X31, 0x798
	0x039881C8 MOVZ W2, 0x790
	0x039881CC MOV X1, X19
	0x039881D0 BL 0x3EB1AC0
	0x039881D4 CBZ X20, 0x398821C
	0x039881D8 ADD X0, X31, 0x8
	0x039881DC ADD X1, X31, 0x798
	0x039881E0 MOVZ W2, 0x790
	0x039881E4 BL 0x3EB1AC0
	0x039881E8 ADD X1, X31, 0x8
	0x039881EC MOV X0, X20
	0x039881F0 BL 0x3988224
	0x039881F4 LDR X8, [X21 + 0x28]
	0x039881F8 LDR X9, [X31 + 0xF28]
	0x039881FC CMP X8, X9
	0x03988200 B.NE 0x3988220
	0x03988204 MOV X0, X20
	0x03988208 ADD X31, X31, 0xF30
	0x0398820C LDP X20, X19, [X31 + 0x20]
	0x03988210 LDP X22, X21, [X31 + 0x10]
	0x03988214 LDP X29, X30, [X31], #0x30
	0x03988218 RET
	0x0398821C BL 0x1C16F20
	0x03988220 BL 0x3EB1B20
	0x03988224 STP X29, X30, [X31 - 0x40]!
	0x03988228 STP X24, X23, [X31 + 0x10]
	0x0398822C STP X22, X21, [X31 + 0x20]
	0x03988230 STP X20, X19, [X31 + 0x30]
	0x03988234 SUB X31, X31, 0x1000
	0x03988238 SUB X31, X31, 0x5B0
	0x0398823C MRS X22, 0xC000
	0x03988240 LDR X8, [X22 + 0x28]
	0x03988244 ADRP X21, 0xA59000
	0x03988248 MOV X19, X1
	0x0398824C MOV X20, X0
	0x03988250 STR X8, [X31 + 0x15A8]
	0x03988254 LDRB W8, [X21 + 0xA75]
	0x03988258 TBNZ X8, 0x0, 0x3988270
	0x0398825C ADRP X0, 0x7C8000
	0x03988260 LDR X0, [X0 + 0x658]
	0x03988264 BL 0x1C16CF4
	0x03988268 MOVZ W8, 0x1
	0x0398826C STRB W8, [X21 + 0xA75]
	0x03988270 LDR X8, [X20 + 0x10]
	0x03988274 CBZ X8, 0x39883A8
	0x03988278 LDP W2, W9, [X8 + 0x18]
	0x0398827C ADD X23, X31, 0x58
	0x03988280 ADD W9, W9, 0x1
	0x03988284 CMP W2, 0x1
	0x03988288 STP W31, W9, [X8 + 0x18]
	0x0398828C B.LT 0x39882A0
	0x03988290 LDR X0, [X8 + 0x10]
	0x03988294 MOV W1, W31
	0x03988298 MOV X3, X31
	0x0398829C BL 0x339FA34
	0x039882A0 LDRB W8, [X19 + 0x6A8]
	0x039882A4 ADD X0, X31, 0xE18
	0x039882A8 MOVZ W2, 0x790
	0x039882AC MOV X1, X19
	0x039882B0 AND W8, W8, 0x1
	0x039882B4 STRB W8, [X20 + 0x20]
	0x039882B8 LDR W8, [X19 + 0x6A0]
	0x039882BC ADD X24, X31, 0xE18
	0x039882C0 STR W8, [X20 + 0x24]
	0x039882C4 LDR W21, [X19 + 0x6A4]
	0x039882C8 BL 0x3EB1AC0
	0x039882CC ADD X1, X24, 0x60
	0x039882D0 ADD X0, X31, 0x7E8
	0x039882D4 MOVZ W2, 0x630
	0x039882D8 BL 0x3EB1AC0
	0x039882DC ADD X2, X31, 0x7E8
	0x039882E0 MOV X0, X20
	0x039882E4 MOV W1, W21
	0x039882E8 BL 0x3988BA0
	0x039882EC LDR X8, [X19 + 0x20]
	0x039882F0 LDP V0, V1, [X19]
	0x039882F4 MOVI V2.2D, 0x0
	0x039882F8 ADD X0, X31, 0x30
	0x039882FC ADD X1, X31, 0x0
	0x03988300 MOVN W3, 0x0
	0x03988304 MOVN W4, 0x0
	0x03988308 MOV W2, W31
	0x0398830C MOV X5, X31
	0x03988310 STR X31, [X31 + 0x50]
	0x03988314 STR X8, [X31 + 0x20]
	0x03988318 STP V0, V1, [X31]
	0x0398831C STP V2, V2, [X31 + 0x30]
	0x03988320 BL 0x3C4B098
	0x03988324 LDR X8, [X31 + 0x50]
	0x03988328 LDP V1, V0, [X31 + 0x30]
	0x0398832C ADD X0, X31, 0x58
	0x03988330 MOVZ W2, 0x790
	0x03988334 MOV X1, X19
	0x03988338 STR X8, [X20 + 0x50]
	0x0398833C STP V1, V0, [X20 + 0x30]
	0x03988340 BL 0x3EB1AC0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xA5A000
	014 Move X24, 0x7C9000
	015 Move X20, 0x7C9000
	016 Move X23, 0x7C9000
	017 Move X22, 0x7C9000
	018 Move X21, 0x7C9000
	019 Move X29, 0x7C9000
	020 Move X28, 0x7C9000
	021 Move X27, 0x7C9000
	022 Move X26, 0x7C9000
	023 Move X25, 0x7C9000
	024 Move X24, [X24+1424]
	025 Move X20, [X20+1408]
	026 Move X23, [X23+1432]
	027 Move X22, [X22+1440]
	028 Move X21, [X21+1448]
	029 Move X29, [X29+1456]
	030 Move X28, [X28+1464]
	031 Move X27, [X27+1472]
	032 Move X26, [X26+1480]
	033 Move W8, [X19+2651]
	034 Move X25, [X25+1488]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {83}
	039 Move X0, 0x7C9000
	040 Move X0, [X0+1424]
	041 Call 0x1C17CF4
	042 Move X0, 0x7C9000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x7C9000
	046 Move X0, [X0+1408]
	047 Call 0x1C17CF4
	048 Move X0, 0x7C9000
	049 Move X0, [X0+1496]
	050 Call 0x1C17CF4
	051 Move X0, 0x7C9000
	052 Move X0, [X0+1488]
	053 Call 0x1C17CF4
	054 Move X0, 0x7C9000
	055 Move X0, [X0+1440]
	056 Call 0x1C17CF4
	057 Move X0, 0x7C9000
	058 Move X0, [X0+1504]
	059 Call 0x1C17CF4
	060 Move X0, 0x7C9000
	061 Move X0, [X0+1512]
	062 Call 0x1C17CF4
	063 Move X0, 0x7C9000
	064 Move X0, [X0+1520]
	065 Call 0x1C17CF4
	066 Move X0, 0x7C9000
	067 Move X0, [X0+1472]
	068 Call 0x1C17CF4
	069 Move X0, 0x7C9000
	070 Move X0, [X0+1464]
	071 Call 0x1C17CF4
	072 Move X0, 0x7C9000
	073 Move X0, [X0+1480]
	074 Call 0x1C17CF4
	075 Move X0, 0x7C9000
	076 Move X0, [X0+1448]
	077 Call 0x1C17CF4
	078 Move X0, 0x7C9000
	079 Move X0, [X0+1456]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X19+2651], W8
	083 Move X0, [X24]
	084 Call 0x1C17F10
	085 Move X1, X31
	086 Move X19, X0
	087 Call MaterialPropertyBlock..ctor, X0
	088 Move X8, [X20]
	089 Move X8, [X8+184]
	090 Move [X8], X19
	091 Move X0, [X23]
	092 Call 0x1C17F10
	093 Move X1, [X22]
	094 Move X2, X31
	095 Move X19, X0
	096 Call ProfilingSampler..ctor, X0, X1
	097 Move X8, [X20]
	098 Move X1, X31
	099 Move X8, [X8+184]
	100 Move [X8+8], X19
	101 Move X0, [X21]
	102 Call Shader.PropertyToID, X0
	103 Move X8, [X20]
	104 Move X1, X31
	105 Move X8, [X8+184]
	106 Move [X8+16], W0
	107 Move X0, [X29]
	108 Call Shader.PropertyToID, X0
	109 Move X8, [X20]
	110 Move X1, X31
	111 Move X8, [X8+184]
	112 Move [X8+20], W0
	113 Move X0, [X28]
	114 Call Shader.PropertyToID, X0
	115 Move X8, [X20]
	116 Move X1, X31
	117 Move X8, [X8+184]
	118 Move [X8+24], W0
	119 Move X0, [X27]
	120 Call Shader.PropertyToID, X0
	121 Move X8, [X20]
	122 Move X1, X31
	123 Move X8, [X8+184]
	124 Move [X8+28], W0
	125 Move X0, [X26]
	126 Call Shader.PropertyToID, X0
	127 Move X8, [X20]
	128 Move X1, X31
	129 Move X8, [X8+184]
	130 Move [X8+32], W0
	131 Move X0, [X25]
	132 Call Shader.PropertyToID, X0
	133 Move X8, [X20]
	134 Move X1, X31
	135 Move X8, [X8+184]
	136 Move [X8+36], W0
	137 Move X8, 0x7C9000
	138 Move X8, [X8+1496]
	139 Move X0, [X8]
	140 Call Shader.PropertyToID, X0
	141 Move X8, [X20]
	142 Move X1, X31
	143 Move X8, [X8+184]
	144 Move [X8+40], W0
	145 Move X8, 0x7C9000
	146 Move X8, [X8+1504]
	147 Move X0, [X8]
	148 Call Shader.PropertyToID, X0
	149 Move X8, [X20]
	150 Move X1, X31
	151 Move X8, [X8+184]
	152 Move [X8+44], W0
	153 Move X8, 0x7C9000
	154 Move X8, [X8+1520]
	155 Move X0, [X8]
	156 Call Shader.PropertyToID, X0
	157 Move X8, [X20]
	158 Move X1, X31
	159 Move X8, [X8+184]
	160 Move [X8+48], W0
	161 Move X8, 0x7C9000
	162 Move X8, [X8+1512]
	163 Move X0, [X8]
	164 Call Shader.PropertyToID, X0
	165 Move X8, [X20]
	166 Move X20, [X31+80]
	167 Move X19, [X31+88]
	168 Move X22, [X31+64]
	169 Move X21, [X31+72]
	170 Move X24, [X31+48]
	171 Move X23, [X31+56]
	172 Move X8, [X8+184]
	173 Move X26, [X31+32]
	174 Move X25, [X31+40]
	175 Move X28, [X31+16]
	176 Move X27, [X31+24]
	177 Move [X8+52], W0
	178 Move X29, [X31+96]
	179 Move X30, [X31+104]
	180 Return 

