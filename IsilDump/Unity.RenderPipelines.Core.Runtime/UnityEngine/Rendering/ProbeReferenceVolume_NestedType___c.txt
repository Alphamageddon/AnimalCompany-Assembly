Type: UnityEngine.Rendering.ProbeReferenceVolume/<>c

Method: System.Void .cctor()

Disassembly:
	0x039C56E4 LDR X8, [X19 + 0x10]
	0x039C56E8 CBZ X8, 0x39C5928
	0x039C56EC ADRP X10, 0x78D000
	0x039C56F0 LDR W9, [X21 + 0x20]
	0x039C56F4 LDR X10, [X10 + 0x9D8]
	0x039C56F8 ADD X0, X8, 0x1D8
	0x039C56FC ADD W1, W9, 0x1
	0x039C5700 LDR X2, [X10]
	0x039C5704 BL 0x21720E0
	0x039C5708 LDR X8, [X19 + 0x10]
	0x039C570C CBZ X8, 0x39C5928
	0x039C5710 LDR X0, [X25]
	0x039C5714 LDR X23, [X8 + 0x1D0]
	0x039C5718 BL 0x1C16F10
	0x039C571C ADRP X8, 0x730000
	0x039C5720 LDR X8, [X8 + 0x798]
	0x039C5724 MOV X2, X31
	0x039C5728 MOV X22, X0
	0x039C572C LDR X1, [X8]
	0x039C5730 BL 0x3C6CE5C
	0x039C5734 CBZ X23, 0x39C5928
	0x039C5738 CBZ X22, 0x39C5750
	0x039C573C LDR X8, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA1D000
	005 Move X20, 0x78E000
	006 Move W8, [X19+3265]
	007 Move X20, [X20+1304]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78E000
	013 Move X0, [X0+1304]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3265], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x039C5740 MOV X0, X22
	0x039C5744 LDR X1, [X8 + 0x40]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.ctor>b__120_0(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo x)

Disassembly:
	0x039C5748 BL 0x1C16E00
	0x039C574C CBZ X0, 0x39C5948
	0x039C5750 LDR W8, [X23 + 0x18]
	0x039C5754 CBZ W8, 0x39C5944
	0x039C5758 STR X22, [X23 + 0x20]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {6}
	003 Move X0, X1
	004 Call CellInfo.Clear, X0
	005 Return 
	006 Move [X31-16], X30
	007 Call 0x1C17F20

Method: System.Void <.ctor>b__120_1(UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo x)

Disassembly:
	0x039C575C LDR X8, [X19 + 0x10]
	0x039C5760 CBZ X8, 0x39C5928
	0x039C5764 LDR X8, [X8 + 0x1D8]
	0x039C5768 CBZ X8, 0x39C5928
	0x039C576C LDR W9, [X8 + 0x18]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {6}
	003 Move X0, X1
	004 Call BlendingCellInfo.Clear, X0
	005 Return 
	006 Move [X31-16], X30
	007 Call 0x1C17F20

Method: System.Single <RegisterDebug>b__171_7()

Disassembly:
	0x039C5770 CBZ W9, 0x39C5944
	0x039C5774 STR W31, [X8 + 0x20]

ISIL:
	001 Move S0, W31
	002 Return V0

Method: System.Single <RegisterDebug>b__171_16()

Disassembly:
	0x039C5778 ADRP X8, 0x78D000
	0x039C577C LDR X8, [X8 + 0xA10]
	0x039C5780 MOV X0, X21

ISIL:
	001 Move X8, -49127424
	002 Move V0, [X8+512]
	003 Return V0

Method: System.Single <RegisterDebug>b__171_17()

Disassembly:
	0x039C5784 LDR X1, [X8]
	0x039C5788 ADD X8, X31, 0x18

ISIL:
	001 Move S0, 10
	002 Return V0

Method: System.Int32 <RegisterDebug>b__171_22()

Disassembly:
	0x039C578C BL 0x2DBE924
	0x039C5790 LDUR V0, [X31 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 <RegisterDebug>b__171_23()

Disassembly:
	0x039C5794 LDR X8, [X31 + 0x28]
	0x039C5798 MOVZ W23, 0x1
	0x039C579C STR V0, [X31 + 0x3]
	0x039C57A0 STR X8, [X31 + 0x40]
	0x039C57A4 LDR X1, [X26]
	0x039C57A8 ADD X0, X31, 0x30
	0x039C57AC BL 0x2BC3C64
	0x039C57B0 TBZ X0, 0x0, 0x39C583C
	0x039C57B4 LDR X8, [X19 + 0x10]
	0x039C57B8 CBZ X8, 0x39C591C
	0x039C57BC LDR X22, [X31 + 0x40]
	0x039C57C0 LDR X24, [X8 + 0x1D0]
	0x039C57C4 LDR X0, [X25]
	0x039C57C8 BL 0x1C16F10
	0x039C57CC MOV X21, X0
	0x039C57D0 MOV X1, X22
	0x039C57D4 MOV X2, X31
	0x039C57D8 BL 0x3C6CE5C
	0x039C57DC CBZ X24, 0x39C5920
	0x039C57E0 CBZ X21, 0x39C57F8
	0x039C57E4 LDR X8, [X24]
	0x039C57E8 LDR X1, [X8 + 0x40]
	0x039C57EC MOV X0, X21
	0x039C57F0 BL 0x1C16E00
	0x039C57F4 CBZ X0, 0x39C592C
	0x039C57F8 LDR W8, [X24 + 0x18]
	0x039C57FC CMP W23, W8
	0x039C5800 B.CS 0x39C5924
	0x039C5804 SXTW X8, W23
	0x039C5808 ADD X9, X24, X8, 0x3, LSL
	0x039C580C STR X21, [X9 + 0x20]
	0x039C5810 LDR X9, [X19 + 0x10]
	0x039C5814 CBZ X9, 0x39C5914
	0x039C5818 LDR X9, [X9 + 0x1D8]
	0x039C581C CBZ X9, 0x39C5918
	0x039C5820 LDR W10, [X9 + 0x18]
	0x039C5824 CMP W23, W10
	0x039C5828 B.CS 0x39C5910

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1D000
	005 Move X19, 0x78D000
	006 Move W8, [X20+3266]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78D000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3266], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA1D000
	023 Move W8, [X20+3257]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x78D000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3257], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+8]
	039 Compare X8, 0
	040 JumpIfEqual {47}
	041 Move W8, [X8+52]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Subtract W0, W8, 1
	045 Move X30, [X31+32]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Int32 <RegisterDebug>b__171_26()

Disassembly:
	0x039C582C ADD X8, X9, X8, 0x2, LSL
	0x039C5830 STR W23, [X8 + 0x20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 <RegisterDebug>b__171_27()

Disassembly:
	0x039C5834 ADD W23, W23, 0x1
	0x039C5838 B 0x39C57A4
	0x039C583C ADRP X8, 0x78D000
	0x039C5840 LDR X8, [X8 + 0x9E8]
	0x039C5844 ADD X0, X31, 0x30
	0x039C5848 LDR X1, [X8]
	0x039C584C BL 0x2BC3C60
	0x039C5850 LDR X8, [X19 + 0x10]
	0x039C5854 CBZ X8, 0x39C5928
	0x039C5858 LDR X9, [X8 + 0xF0]
	0x039C585C STR X20, [X8 + 0x1E0]
	0x039C5860 CBZ X9, 0x39C5928
	0x039C5864 LDR X9, [X9 + 0x70]
	0x039C5868 LDR X0, [X8 + 0x1F0]
	0x039C586C STR X9, [X8 + 0x1E8]
	0x039C5870 CBZ X0, 0x39C5928
	0x039C5874 LDR X9, [X8 + 0x1D0]
	0x039C5878 STR X9, [X0 + 0x60]
	0x039C587C LDR X1, [X8 + 0x1D8]
	0x039C5880 ADRP X8, 0x78C000
	0x039C5884 LDR X8, [X8 + 0xE0]
	0x039C5888 LDR X2, [X8]
	0x039C588C BL 0x2BA9724
	0x039C5890 LDR X9, [X19 + 0x10]
	0x039C5894 CBZ X9, 0x39C5928
	0x039C5898 LDR X8, [X9 + 0x190]
	0x039C589C CBZ X8, 0x39C5928
	0x039C58A0 LDR X9, [X9 + 0x1D0]
	0x039C58A4 CBZ X9, 0x39C5928
	0x039C58A8 LDR W10, [X8 + 0x44]
	0x039C58AC LDR W9, [X9 + 0x18]
	0x039C58B0 CMP W10, W9
	0x039C58B4 B.LT 0x39C58BC
	0x039C58B8 STR W31, [X8 + 0x44]
	0x039C58BC LDP X20, X19, [X31 + 0xE0]
	0x039C58C0 LDP X22, X21, [X31 + 0xD0]
	0x039C58C4 LDP X24, X23, [X31 + 0xC0]
	0x039C58C8 LDP X26, X25, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1D000
	005 Move X19, 0x78D000
	006 Move W8, [X20+3267]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78D000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3267], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA1D000
	023 Move W8, [X20+3257]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x78D000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3257], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+8]
	039 Compare X8, 0
	040 JumpIfEqual {47}
	041 Move W8, [X8+52]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Subtract W0, W8, 1
	045 Move X30, [X31+32]
	046 Return X0
	047 Call 0x1C17F20

Method: System.Single <RegisterDebug>b__171_32()

Disassembly:
	0x039C58CC LDP X28, X27, [X31 + 0xA0]
	0x039C58D0 LDP X29, X30, [X31 + 0x90]
	0x039C58D4 ADD X31, X31, 0xF0

ISIL:
	001 Move X8, -49127424
	002 Move V0, [X8+1040]
	003 Return V0

Method: System.Single <RegisterDebug>b__171_33()

Disassembly:
	0x039C58D8 RET
	0x039C58DC STP X0, X1, [X31 + 0x8]
	0x039C58E0 MOV X22, X31

ISIL:
	001 Move X8, -49127424
	002 Move V0, [X8+188]
	003 Return V0

Method: System.Single <RegisterDebug>b__171_36()

Disassembly:
	0x039C58E4 LDR X1, [X28]
	0x039C58E8 ADD X0, X31, 0x50

ISIL:
	001 Move S0, W31
	002 Return V0

Method: System.Int32 <RegisterDebug>b__171_39()

Disassembly:
	0x039C58EC BL 0x2BC434C
	0x039C58F0 ADRP X25, 0x759000
	0x039C58F4 LDP X0, X1, [X31 + 0x8]
	0x039C58F8 LDR X25, [X25 + 0xBD0]
	0x039C58FC CBZ X22, 0x39C598C
	0x039C5900 MOV X0, X22
	0x039C5904 BL 0x1C16F18
	0x039C5908 BL 0x1C16F20
	0x039C590C BL 0x1C16F20
	0x039C5910 BL 0x1C16F28
	0x039C5914 BL 0x1C16F20
	0x039C5918 BL 0x1C16F20
	0x039C591C BL 0x1C16F20
	0x039C5920 BL 0x1C16F20
	0x039C5924 BL 0x1C16F28
	0x039C5928 BL 0x1C16F20
	0x039C592C BL 0x1C16F44
	0x039C5930 MOV X1, X31
	0x039C5934 BL 0x1C16DEC
	0x039C5938 BL 0x1C16F20
	0x039C593C MOV X0, X22
	0x039C5940 BL 0x1C16F18
	0x039C5944 BL 0x1C16F28
	0x039C5948 BL 0x1C16F44
	0x039C594C MOV X1, X31
	0x039C5950 BL 0x1C16DEC
	0x039C5954 STP X0, X1, [X31 + 0x8]
	0x039C5958 B 0x39C58E4
	0x039C595C B 0x39C5984
	0x039C5960 B 0x39C5984
	0x039C5964 B 0x39C5984
	0x039C5968 B 0x39C5984
	0x039C596C B 0x39C59F8
	0x039C5970 B 0x39C59F8
	0x039C5974 B 0x39C59F8
	0x039C5978 B 0x39C5984
	0x039C597C B 0x39C5984

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1D000
	005 Move X19, 0x78D000
	006 Move W8, [X20+3268]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78D000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3268], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA1D000
	023 Move W8, [X20+3257]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x78D000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3257], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+8]
	039 Compare X8, 0
	040 JumpIfEqual {46}
	041 Move W0, [X8+356]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void <RegisterDebug>b__171_40(System.Int32 value)

Disassembly:
	0x039C5980 B 0x39C5984
	0x039C5984 ADRP X25, 0x759000
	0x039C5988 LDR X25, [X25 + 0xBD0]
	0x039C598C CMP W1, 0x1
	0x039C5990 B.NE 0x39C59C0
	0x039C5994 BL 0x3EB1AD0
	0x039C5998 LDR X22, [X0]
	0x039C599C BL 0x3EB1AE0
	0x039C59A0 ADRP X8, 0x78D000
	0x039C59A4 LDR X8, [X8 + 0x9E0]
	0x039C59A8 ADD X0, X31, 0x70
	0x039C59AC LDR X1, [X8]
	0x039C59B0 BL 0x2BC434C
	0x039C59B4 CBZ X22, 0x39C5638
	0x039C59B8 MOV X0, X22
	0x039C59BC BL 0x1C16F18
	0x039C59C0 MOV X19, X0
	0x039C59C4 MOV X22, X31
	0x039C59C8 B 0x39C59D0
	0x039C59CC MOV X19, X0
	0x039C59D0 ADRP X8, 0x78D000
	0x039C59D4 LDR X8, [X8 + 0x9E0]
	0x039C59D8 LDR X1, [X8]
	0x039C59DC ADD X0, X31, 0x70
	0x039C59E0 BL 0x2BC434C
	0x039C59E4 CBZ X22, 0x39C5A54
	0x039C59E8 MOV X0, X22
	0x039C59EC BL 0x1C16F18
	0x039C59F0 B 0x39C59F8
	0x039C59F4 B 0x39C59F8
	0x039C59F8 CMP W1, 0x1
	0x039C59FC B.NE 0x39C5A2C
	0x039C5A00 BL 0x3EB1AD0
	0x039C5A04 LDR X21, [X0]
	0x039C5A08 BL 0x3EB1AE0
	0x039C5A0C ADRP X8, 0x78D000
	0x039C5A10 LDR X8, [X8 + 0x9E8]
	0x039C5A14 ADD X0, X31, 0x30
	0x039C5A18 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1D000
	006 Move X20, 0x78D000
	007 Move W8, [X21+3269]
	008 Move X20, [X20+3912]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78D000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3269], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0xA1D000
	025 Move W8, [X21+3257]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x78D000
	029 Move X0, [X0+3912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3257], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move W1, W19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call ProbeReferenceVolume.SetNumberOfCellsLoadedPerFrame, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Int32 <RegisterDebug>b__171_41()

Disassembly:
	0x039C5A1C BL 0x2BC3C60
	0x039C5A20 CBZ X21, 0x39C5850

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 <RegisterDebug>b__171_43()

Disassembly:
	0x039C5A24 MOV X0, X21
	0x039C5A28 BL 0x1C16F18
	0x039C5A2C MOV X19, X0
	0x039C5A30 MOV X21, X31
	0x039C5A34 B 0x39C5A3C
	0x039C5A38 MOV X19, X0
	0x039C5A3C ADRP X8, 0x78D000
	0x039C5A40 LDR X8, [X8 + 0x9E8]
	0x039C5A44 LDR X1, [X8]
	0x039C5A48 ADD X0, X31, 0x30
	0x039C5A4C BL 0x2BC3C60
	0x039C5A50 CBNZ X21, 0x39C5A5C
	0x039C5A54 MOV X0, X19
	0x039C5A58 BL 0x1D2C690
	0x039C5A5C MOV X0, X21
	0x039C5A60 BL 0x1C16F18
	0x039C5A64 BL 0x1990590
	0x039C5A68 STP X30, X21, [X31 - 0x20]!
	0x039C5A6C STP X20, X19, [X31 + 0x10]
	0x039C5A70 ADRP X21, 0xA1C000
	0x039C5A74 ADRP X20, 0x72E000
	0x039C5A78 LDRB W8, [X21 + 0xCCF]
	0x039C5A7C LDR X20, [X20 + 0xC90]
	0x039C5A80 MOV X19, X0
	0x039C5A84 TBNZ X8, 0x0, 0x39C5AA8
	0x039C5A88 ADRP X0, 0x78D000
	0x039C5A8C LDR X0, [X0 + 0xA20]
	0x039C5A90 BL 0x1C16CF4
	0x039C5A94 ADRP X0, 0x72E000
	0x039C5A98 LDR X0, [X0 + 0xC90]
	0x039C5A9C BL 0x1C16CF4
	0x039C5AA0 MOVZ W8, 0x1
	0x039C5AA4 STRB W8, [X21 + 0xCCF]
	0x039C5AA8 LDR X0, [X20]
	0x039C5AAC ADRP X20, 0x78D000
	0x039C5AB0 LDR W8, [X0 + 0xE0]
	0x039C5AB4 LDR X20, [X20 + 0xA20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1D000
	005 Move X19, 0x78D000
	006 Move W8, [X20+3270]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78D000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3270], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA1D000
	023 Move W8, [X20+3257]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x78D000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3257], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+8]
	039 Compare X8, 0
	040 JumpIfEqual {46}
	041 Move W0, [X8+360]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void <RegisterDebug>b__171_44(System.Int32 value)

Disassembly:
	0x039C5AB8 CBNZ W8, 0x39C5AC0
	0x039C5ABC BL 0x1C16DFC
	0x039C5AC0 MOV X0, X31
	0x039C5AC4 BL 0x3C46DFC
	0x039C5AC8 LDR X8, [X20]
	0x039C5ACC MOV X20, X0
	0x039C5AD0 LDR W9, [X8 + 0xE0]
	0x039C5AD4 CBNZ W9, 0x39C5AE0
	0x039C5AD8 MOV X0, X8
	0x039C5ADC BL 0x1C16DFC
	0x039C5AE0 AND X0, X20, 0x0
	0x039C5AE4 BL 0x39C5BC4
	0x039C5AE8 MOV X1, X0
	0x039C5AEC MOV X0, X19
	0x039C5AF0 BL 0x39C536C
	0x039C5AF4 LDR X8, [X19 + 0x10]
	0x039C5AF8 CBZ X8, 0x39C5B90
	0x039C5AFC LDR X9, [X8 + 0x190]
	0x039C5B00 CBZ X9, 0x39C5B90
	0x039C5B04 STR W31, [X9 + 0x44]
	0x039C5B08 LDR X8, [X8 + 0xF0]
	0x039C5B0C CBZ X8, 0x39C5B90
	0x039C5B10 LDR X0, [X8 + 0x78]
	0x039C5B14 MOV X1, X31
	0x039C5B18 BL 0x32277A8
	0x039C5B1C LDR X8, [X19 + 0x10]
	0x039C5B20 TBZ X0, 0x0, 0x39C5B2C
	0x039C5B24 CBNZ X8, 0x39C5BA8
	0x039C5B28 B 0x39C5B90
	0x039C5B2C CBZ X8, 0x39C5B90
	0x039C5B30 MOVZ W20, 0x5
	0x039C5B34 LDR X9, [X8 + 0x1D0]
	0x039C5B38 CBZ X9, 0x39C5B90
	0x039C5B3C LDR W10, [X9 + 0x18]
	0x039C5B40 SUB X21, X20, 0x4
	0x039C5B44 CMP W21, W10
	0x039C5B48 B.GE 0x39C5BA8
	0x039C5B4C CMP W21, W10
	0x039C5B50 B.CS 0x39C5BC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1D000
	006 Move X20, 0x78D000
	007 Move W8, [X21+3271]
	008 Move X20, [X20+3912]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78D000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3271], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0xA1D000
	025 Move W8, [X21+3257]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x78D000
	029 Move X0, [X0+3912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3257], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move W1, W19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call ProbeReferenceVolume.set_numberOfCellsBlendedPerFrame, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Int32 <RegisterDebug>b__171_45()

Disassembly:
	0x039C5B54 LDR X0, [X9, X20, LSL #3]
	0x039C5B58 CBZ X0, 0x39C5B90

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Single <RegisterDebug>b__171_46()

Disassembly:
	0x039C5B5C MOV X1, X31
	0x039C5B60 BL 0x3C69940
	0x039C5B64 LDR X8, [X19 + 0x10]
	0x039C5B68 CBZ X8, 0x39C5B90
	0x039C5B6C LDR X8, [X8 + 0xF0]
	0x039C5B70 CBZ X8, 0x39C5B90
	0x039C5B74 LDR X1, [X8 + 0x78]
	0x039C5B78 MOV X2, X31
	0x039C5B7C BL 0x321BA08
	0x039C5B80 TBNZ X0, 0x0, 0x39C5B94
	0x039C5B84 LDR X8, [X19 + 0x10]
	0x039C5B88 ADD X20, X20, 0x1
	0x039C5B8C CBNZ X8, 0x39C5B34
	0x039C5B90 BL 0x1C16F20
	0x039C5B94 LDR X8, [X19 + 0x10]
	0x039C5B98 CBZ X8, 0x39C5B90
	0x039C5B9C LDR X9, [X8 + 0x190]
	0x039C5BA0 CBZ X9, 0x39C5B90
	0x039C5BA4 STR W21, [X9 + 0x44]
	0x039C5BA8 LDR X8, [X8 + 0x190]
	0x039C5BAC CBZ X8, 0x39C5B90
	0x039C5BB0 LDR W0, [X8 + 0x44]
	0x039C5BB4 LDP X20, X19, [X31 + 0x10]
	0x039C5BB8 LDP X30, X21, [X31], #0x20
	0x039C5BBC RET
	0x039C5BC0 BL 0x1C16F28
	0x039C5BC4 SUB X31, X31, 0x30
	0x039C5BC8 STP X30, X21, [X31 + 0x10]
	0x039C5BCC STP X20, X19, [X31 + 0x20]
	0x039C5BD0 ADRP X21, 0xA1C000
	0x039C5BD4 ADRP X20, 0x78D000
	0x039C5BD8 LDRB W8, [X21 + 0xCE4]
	0x039C5BDC LDR X20, [X20 + 0xA20]
	0x039C5BE0 MOV X19, X0
	0x039C5BE4 TBNZ X8, 0x0, 0x39C5C14
	0x039C5BE8 ADRP X0, 0x78D000
	0x039C5BEC LDR X0, [X0 + 0xA20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1D000
	005 Move X19, 0x78D000
	006 Move W8, [X20+3272]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78D000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3272], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA1D000
	023 Move W8, [X20+3257]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x78D000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3257], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+8]
	039 Compare X8, 0
	040 JumpIfEqual {46}
	041 Move V0, [X8+364]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return V0
	046 Call 0x1C17F20

Method: System.Void <RegisterDebug>b__171_47(System.Single value)

Disassembly:
	0x039C5BF0 BL 0x1C16CF4
	0x039C5BF4 ADRP X0, 0x759000
	0x039C5BF8 LDR X0, [X0 + 0x748]
	0x039C5BFC BL 0x1C16CF4
	0x039C5C00 ADRP X0, 0x730000
	0x039C5C04 LDR X0, [X0 + 0x278]
	0x039C5C08 BL 0x1C16CF4
	0x039C5C0C MOVZ W8, 0x1
	0x039C5C10 STRB W8, [X21 + 0xCE4]
	0x039C5C14 LDR X0, [X20]
	0x039C5C18 ADRP X21, 0x759000
	0x039C5C1C LDR W8, [X0 + 0xE0]
	0x039C5C20 LDR X21, [X21 + 0x748]
	0x039C5C24 CBNZ W8, 0x39C5C30
	0x039C5C28 BL 0x1C16DFC
	0x039C5C2C LDR X0, [X20]
	0x039C5C30 LDR X8, [X0 + 0xB8]
	0x039C5C34 LDR X0, [X21]
	0x039C5C38 ADD X1, X31, 0x8
	0x039C5C3C LDR X20, [X8]
	0x039C5C40 STR W19, [X31 + 0x8]
	0x039C5C44 BL 0x1C16E04
	0x039C5C48 CBZ X20, 0x39C5C88
	0x039C5C4C MOV X1, X0
	0x039C5C50 MOV X0, X20
	0x039C5C54 MOV X2, X31
	0x039C5C58 BL 0x32CFB70
	0x039C5C5C CBZ X0, 0x39C5C78
	0x039C5C60 ADRP X8, 0x730000
	0x039C5C64 LDR X8, [X8 + 0x278]
	0x039C5C68 LDR X1, [X8]
	0x039C5C6C LDR X8, [X0]
	0x039C5C70 CMP X8, X1
	0x039C5C74 B.NE 0x39C5C8C
	0x039C5C78 LDP X20, X19, [X31 + 0x20]
	0x039C5C7C LDP X30, X21, [X31 + 0x10]
	0x039C5C80 ADD X31, X31, 0x30
	0x039C5C84 RET
	0x039C5C88 BL 0x1C16F20
	0x039C5C8C BL 0x1C171E0
	0x039C5C90 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA1D000
	006 Move X19, 0x78D000
	007 Move W8, [X20+3273]
	008 Move X19, [X19+3912]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78D000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3273], W8
	019 Move X0, [X19]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, 0xA1D000
	025 Move W8, [X20+3257]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x78D000
	029 Move X0, [X0+3912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3257], W8
	033 Move X0, [X19]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X19]
	039 Move X8, [X0+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V0, V8
	047 Move X1, X31
	048 Move V8, [X31+32]
	049 Call ProbeReferenceVolume.set_turnoverRate, X0, V0
	050 Return 
	051 Call 0x1C17F20

Method: System.Single <RegisterDebug>b__171_48()

Disassembly:
	0x039C5C94 STP X20, X19, [X31 + 0x10]
	0x039C5C98 MOV W19, W1

ISIL:
	001 Move S0, W31
	002 Return V0

Method: System.Single <RegisterDebug>b__171_49()

Disassembly:
	0x039C5C9C MOV X20, X0
	0x039C5CA0 CBZ W1, 0x39C5CDC

ISIL:
	001 Move S0, 1
	002 Return V0

Method: System.Single <RegisterDebug>b__171_54()

Disassembly:
	0x039C5CA4 LDR X8, [X20 + 0x10]
	0x039C5CA8 CBZ X8, 0x39C5D18
	0x039C5CAC LDR X8, [X8 + 0x1D0]
	0x039C5CB0 CBZ X8, 0x39C5D18
	0x039C5CB4 LDR W9, [X8 + 0x18]
	0x039C5CB8 CMP W9, W19
	0x039C5CBC B.LS 0x39C5D1C
	0x039C5CC0 ADD X8, X8, W19, 0x3, SXTW
	0x039C5CC4 LDR X0, [X8 + 0x20]
	0x039C5CC8 CBZ X0, 0x39C5D18
	0x039C5CCC MOV X1, X31
	0x039C5CD0 BL 0x3C69940
	0x039C5CD4 MOV X1, X0
	0x039C5CD8 B 0x39C5CE0
	0x039C5CDC MOV X1, X31
	0x039C5CE0 LDR X8, [X20 + 0x10]
	0x039C5CE4 CBZ X8, 0x39C5D18
	0x039C5CE8 LDR X0, [X8 + 0xF0]
	0x039C5CEC CBZ X0, 0x39C5D18
	0x039C5CF0 LDR V0, [X0 + 0x80]
	0x039C5CF4 BL 0x39C5D20
	0x039C5CF8 LDR X8, [X20 + 0x10]
	0x039C5CFC CBZ X8, 0x39C5D18
	0x039C5D00 LDR X8, [X8 + 0x190]
	0x039C5D04 CBZ X8, 0x39C5D18
	0x039C5D08 STR W19, [X8 + 0x44]
	0x039C5D0C LDP X20, X19, [X31 + 0x10]
	0x039C5D10 LDR X30, [X31], #0x20
	0x039C5D14 RET
	0x039C5D18 BL 0x1C16F20
	0x039C5D1C BL 0x1C16F28
	0x039C5D20 SUB X31, X31, 0x60
	0x039C5D24 STP D9, D8, [X31 + 0x20]
	0x039C5D28 STP X30, X23, [X31 + 0x30]
	0x039C5D2C STP X22, X21, [X31 + 0x40]
	0x039C5D30 STP X20, X19, [X31 + 0x50]
	0x039C5D34 ADRP X20, 0xA1C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1D000
	005 Move X19, 0x78D000
	006 Move W8, [X20+3274]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78D000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3274], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA1D000
	023 Move W8, [X20+3257]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x78D000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3257], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X0, [X8+8]
	039 Compare X0, 0
	040 JumpIfEqual {47}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Call ProbeReferenceVolume.get_scenarioBlendingFactor, X0
	046 Return V0
	047 Call 0x1C17F20

Method: System.Void <RegisterDebug>b__171_55(System.Single value)

Disassembly:
	0x039C5D38 ADRP X22, 0x78C000
	0x039C5D3C LDRB W8, [X20 + 0xCE6]
	0x039C5D40 LDR X22, [X22 + 0xF48]
	0x039C5D44 MOV V8.16B, V0.16B
	0x039C5D48 MOV X21, X1
	0x039C5D4C MOV X19, X0
	0x039C5D50 TBNZ X8, 0x0, 0x39C5DC8
	0x039C5D54 ADRP X0, 0x72E000
	0x039C5D58 LDR X0, [X0 + 0xA28]
	0x039C5D5C BL 0x1C16CF4
	0x039C5D60 ADRP X0, 0x78D000
	0x039C5D64 LDR X0, [X0 + 0x360]
	0x039C5D68 BL 0x1C16CF4
	0x039C5D6C ADRP X0, 0x78D000
	0x039C5D70 LDR X0, [X0 + 0x368]
	0x039C5D74 BL 0x1C16CF4
	0x039C5D78 ADRP X0, 0x78D000
	0x039C5D7C LDR X0, [X0 + 0x370]
	0x039C5D80 BL 0x1C16CF4
	0x039C5D84 ADRP X0, 0x78D000
	0x039C5D88 LDR X0, [X0 + 0x378]
	0x039C5D8C BL 0x1C16CF4
	0x039C5D90 ADRP X0, 0x78D000
	0x039C5D94 LDR X0, [X0 + 0x260]
	0x039C5D98 BL 0x1C16CF4
	0x039C5D9C ADRP X0, 0x78C000
	0x039C5DA0 LDR X0, [X0 + 0xF48]
	0x039C5DA4 BL 0x1C16CF4
	0x039C5DA8 ADRP X0, 0x78D000
	0x039C5DAC LDR X0, [X0 + 0xA28]
	0x039C5DB0 BL 0x1C16CF4
	0x039C5DB4 ADRP X0, 0x78D000
	0x039C5DB8 LDR X0, [X0 + 0xA30]
	0x039C5DBC BL 0x1C16CF4
	0x039C5DC0 MOVZ W8, 0x1
	0x039C5DC4 STRB W8, [X20 + 0xCE6]
	0x039C5DC8 LDR X0, [X22]
	0x039C5DCC STP X31, X31, [X31 + 0x8]
	0x039C5DD0 STR X31, [X31 + 0x18]
	0x039C5DD4 LDR W8, [X0 + 0xE0]
	0x039C5DD8 CBNZ W8, 0x39C5DE0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA1D000
	006 Move X19, 0x78D000
	007 Move W8, [X20+3275]
	008 Move X19, [X19+3912]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78D000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3275], W8
	019 Move X0, [X19]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, 0xA1D000
	025 Move W8, [X20+3257]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x78D000
	029 Move X0, [X0+3912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3257], W8
	033 Move X0, [X19]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X19]
	039 Move X8, [X0+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V0, V8
	047 Move X1, X31
	048 Move V8, [X31+32]
	049 Call ProbeReferenceVolume.set_scenarioBlendingFactor, X0, V0
	050 Return 
	051 Call 0x1C17F20

Method: System.Single <RegisterDebug>b__171_56()

Disassembly:
	0x039C5DDC BL 0x1C16DFC
	0x039C5DE0 ADRP X23, 0xA1C000

ISIL:
	001 Move S0, W31
	002 Return V0

Method: System.Single <RegisterDebug>b__171_57()

Disassembly:
	0x039C5DE4 LDRB W8, [X23 + 0xCB9]
	0x039C5DE8 CBNZ W8, 0x39C5E00

ISIL:
	001 Move S0, 1
	002 Return V0

