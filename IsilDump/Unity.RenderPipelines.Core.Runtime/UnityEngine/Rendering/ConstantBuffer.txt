Type: UnityEngine.Rendering.ConstantBuffer

Method: System.Void PushGlobal(UnityEngine.Rendering.CommandBuffer cmd, in CBType data, System.Int32 shaderId)

Disassembly:
	0x021A6158 MOV X2, X23
	0x021A615C BL 0x3EB1AC0
	0x021A6160 LDR X8, [X19 + 0x38]
	0x021A6164 LDR X0, [X8 + 0x8]
	0x021A6168 LDRB W9, [X0 + 0x135]
	0x021A616C TBNZ X9, 0x0, 0x21A6178
	0x021A6170 BL 0x1C5C684
	0x021A6174 LDR X8, [X19 + 0x38]
	0x021A6178 LDR X1, [X8 + 0x28]
	0x021A617C SUB X4, X29, 0x28
	0x021A6180 SUB X5, X29, 0x20
	0x021A6184 MOV X2, X24
	0x021A6188 MOV X3, X26
	0x021A618C STUR X27, [X29 - 0x28]
	0x021A6190 BL 0x1C17728
	0x021A6194 LDP X8, X9, [X29 - 0x20]
	0x021A6198 SUB X0, X29, 0x38
	0x021A619C MOV X1, X20
	0x021A61A0 MOV X2, X31
	0x021A61A4 STP X8, X9, [X29 - 0x38]
	0x021A61A8 BL 0x3C22F58
	0x021A61AC ADD W28, W28, 0x1
	0x021A61B0 CMP W22, W28
	0x021A61B4 B.NE 0x21A6120
	0x021A61B8 LDUR X8, [X29 - 0x40]
	0x021A61BC LDR X8, [X8 + 0x28]
	0x021A61C0 LDUR X9, [X29 - 0x8]
	0x021A61C4 CMP X8, X9
	0x021A61C8 B.NE 0x21A61EC
	0x021A61CC ADD X31, X29, 0x0
	0x021A61D0 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X20, X3
	009 Move W19, W2
	010 Move X22, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X20
	015 Call 0x1C5D6E0
	016 Move X8, [X20+56]
	017 Move X0, [X8]
	018 Call 0x299C378
	019 Compare X0, 0
	020 JumpIfEqual {40}
	021 Move X8, [X20+56]
	022 Move X1, X21
	023 Move X2, X22
	024 Move X23, X0
	025 Move X3, [X8+48]
	026 Call 0x299D378, X0, X1, X2
	027 Move X8, [X20+56]
	028 Move X1, X21
	029 Move W2, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X3, [X8+56]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X0, X23
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Call 0x299D474, X0, X1, X2
	039 Return 
	040 Call 0x1C17F20

Method: System.Void PushGlobal(in CBType data, System.Int32 shaderId)

Disassembly:
	0x021A60DC STP X31, X31, [X29 - 0x38]
	0x021A60E0 LDR X1, [X28]
	0x021A60E4 LDUR X28, [X29 - 0x50]
	0x021A60E8 SUB X3, X29, 0x28
	0x021A60EC MOV X2, X31
	0x021A60F0 LDR X0, [X1]
	0x021A60F4 STUR X28, [X29 - 0x28]
	0x021A60F8 LDR X8, [X1 + 0x10]
	0x021A60FC MOV X4, X28
	0x021A6100 BLR X8
	0x021A6104 LDUR X2, [X29 - 0x48]
	0x021A6108 MOV X0, X26
	0x021A610C MOV X1, X28
	0x021A6110 BL 0x3EB1AC0
	0x021A6114 CMP W22, 0x1
	0x021A6118 B.LT 0x21A61B8
	0x021A611C MOV W28, W31
	0x021A6120 LDR X8, [X19 + 0x38]
	0x021A6124 SUB X3, X29, 0x20
	0x021A6128 MOV X2, X31
	0x021A612C MOV X4, X25
	0x021A6130 LDR X1, [X8 + 0x10]
	0x021A6134 SUB X8, X29, 0x28
	0x021A6138 LDR X0, [X1]
	0x021A613C STUR W28, [X29 - 0x28]
	0x021A6140 STP X21, X8, [X29 - 0x20]
	0x021A6144 STUR X25, [X29 - 0x10]
	0x021A6148 LDR X8, [X1 + 0x10]
	0x021A614C BLR X8
	0x021A6150 MOV X0, X27
	0x021A6154 MOV X1, X25

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move W19, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X20
	013 Call 0x1C5D6E0
	014 Move X8, [X20+56]
	015 Move X0, [X8]
	016 Move X8, [X0]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {37}
	020 Move X8, [X20+56]
	021 Move X1, X21
	022 Move X22, X0
	023 Move X2, [X8+48]
	024 Move X8, [X2]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X20+56]
	027 Move X0, X22
	028 Move W1, W19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X2, [X8+56]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X3, [X2]
	035 Move X30, [X31+48]
	036 CallNoReturn X3
	037 Call 0x1C17F20

Method: System.Void Push(UnityEngine.Rendering.CommandBuffer cmd, in CBType data, UnityEngine.ComputeShader cs, System.Int32 shaderId)

Disassembly:
	0x021A5FB0 STP X0, X1, [X31]
	0x021A5FB4 ADD X0, X31, 0x0
	0x021A5FB8 MOV X1, X20
	0x021A5FBC MOV X2, X31
	0x021A5FC0 BL 0x3C22F58
	0x021A5FC4 SUBS X22, X22, 0x1
	0x021A5FC8 B.NE 0x21A5F94
	0x021A5FCC LDP X20, X19, [X31 + 0x40]
	0x021A5FD0 LDP X22, X21, [X31 + 0x30]
	0x021A5FD4 LDR X30, [X31 + 0x20]
	0x021A5FD8 ADD X31, X31, 0x50
	0x021A5FDC RET
	0x021A5FE0 STP X29, X30, [X31 - 0x60]!
	0x021A5FE4 STP X28, X27, [X31 + 0x10]
	0x021A5FE8 STP X26, X25, [X31 + 0x20]
	0x021A5FEC STP X24, X23, [X31 + 0x30]
	0x021A5FF0 STP X22, X21, [X31 + 0x40]
	0x021A5FF4 STP X20, X19, [X31 + 0x50]
	0x021A5FF8 ADD X29, X31, 0x0
	0x021A5FFC SUB X31, X31, 0x50
	0x021A6000 MRS X8, 0xC000
	0x021A6004 STUR X8, [X29 - 0x40]
	0x021A6008 LDR X8, [X8 + 0x28]
	0x021A600C MOV X19, X3
	0x021A6010 MOV X20, X2
	0x021A6014 MOV X21, X1
	0x021A6018 STUR X8, [X29 - 0x8]
	0x021A601C LDR X28, [X3 + 0x38]
	0x021A6020 MOV W22, W0
	0x021A6024 CBNZ X28, 0x21A6034
	0x021A6028 MOV X0, X19
	0x021A602C BL 0x1C5C6E0
	0x021A6030 LDR X28, [X19 + 0x38]
	0x021A6034 LDR X0, [X28 + 0x8]
	0x021A6038 LDR X8, [X28 + 0x18]
	0x021A603C LDR W26, [X0 + 0xFC]
	0x021A6040 LDRB W9, [X0 + 0x135]
	0x021A6044 LDR W23, [X8 + 0xFC]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X21, X4
	010 Move W19, W3
	011 Move X20, X2
	012 Move X23, X1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X21
	017 Call 0x1C5D6E0
	018 Move X8, [X21+56]
	019 Move X0, [X8]
	020 Move X8, [X0]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {46}
	024 Move X8, [X21+56]
	025 Move X1, X22
	026 Move X2, X23
	027 Move X24, X0
	028 Move X3, [X8+48]
	029 Move X8, [X3]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X21+56]
	032 Move X0, X24
	033 Move X1, X22
	034 Move X2, X20
	035 Move X4, [X8+56]
	036 Move W3, W19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X5, [X4]
	042 Move X24, [X31+16]
	043 Move X23, [X31+24]
	044 Move X30, [X31+64]
	045 CallNoReturn X5
	046 Call 0x1C17F20

Method: System.Void Push(in CBType data, UnityEngine.ComputeShader cs, System.Int32 shaderId)

Disassembly:
	0x021A5EA8 BL 0x3EB1AE0
	0x021A5EAC MOVZ W21, 0x1
	0x021A5EB0 CBNZ X19, 0x21A5D80
	0x021A5EB4 B 0x21A5DE0
	0x021A5EB8 MOV X20, X31
	0x021A5EBC B 0x21A5EC4
	0x021A5EC0 MOV X21, X0
	0x021A5EC4 CBZ X19, 0x21A5F28
	0x021A5EC8 ADRP X10, 0x1F4E000
	0x021A5ECC LDR X8, [X19]
	0x021A5ED0 LDR X10, [X10 + 0xE00]
	0x021A5ED4 LDRH W9, [X8 + 0x12E]
	0x021A5ED8 LDR X1, [X10]
	0x021A5EDC CBZ X9, 0x21A5F00
	0x021A5EE0 LDR X10, [X8 + 0xB0]
	0x021A5EE4 ADD X10, X10, 0x8
	0x021A5EE8 LDUR X11, [X10 - 0x8]
	0x021A5EEC CMP X11, X1
	0x021A5EF0 B.EQ 0x21A5F10
	0x021A5EF4 SUBS X9, X9, 0x1
	0x021A5EF8 ADD X10, X10, 0x10
	0x021A5EFC B.NE 0x21A5EE8
	0x021A5F00 MOV X0, X19
	0x021A5F04 MOV W2, W31
	0x021A5F08 BL 0x1C5C788
	0x021A5F0C B 0x21A5F1C
	0x021A5F10 LDRSW X9, [X10]
	0x021A5F14 ADD X8, X8, X9, 0x4, LSL
	0x021A5F18 ADD X0, X8, 0x138
	0x021A5F1C LDP X8, X1, [X0]
	0x021A5F20 MOV X0, X19
	0x021A5F24 BLR X8
	0x021A5F28 CBNZ X20, 0x21A5F34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X21, X3
	009 Move W19, W2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X21
	015 Call 0x1C5D6E0
	016 Move X8, [X21+56]
	017 Move X0, [X8]
	018 Move X8, [X0]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 Move X8, [X21+56]
	023 Move X1, X22
	024 Move X23, X0
	025 Move X2, [X8+48]
	026 Move X8, [X2]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X21+56]
	029 Move X1, X20
	030 Move W2, W19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X3, [X8+56]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X0, X23
	037 Move X4, [X3]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 CallNoReturn X4
	041 Call 0x1C17F20

Method: System.Void Push(UnityEngine.Rendering.CommandBuffer cmd, in CBType data, UnityEngine.Material mat, System.Int32 shaderId)

Disassembly:
	0x021A6048 TBNZ X9, 0x0, 0x21A605C
	0x021A604C BL 0x1C5C684
	0x021A6050 LDR W8, [X0 + 0xFC]
	0x021A6054 LDR X28, [X19 + 0x38]
	0x021A6058 B 0x21A6060
	0x021A605C MOV W8, W26
	0x021A6060 ADD W8, W8, 0x10
	0x021A6064 ADD X8, X8, 0xF
	0x021A6068 ADD X9, X31, 0x0
	0x021A606C AND X8, X8, 0x1FFFFFFFF
	0x021A6070 SUB X24, X9, X8
	0x021A6074 ADD X31, X24, 0x0
	0x021A6078 ADD X9, X23, 0xF
	0x021A607C ADD X8, X31, 0x0
	0x021A6080 AND X27, X9, 0x1FFFFFFFF
	0x021A6084 SUB X25, X8, X27
	0x021A6088 ADD X31, X25, 0x0
	0x021A608C ADD X9, X26, 0xF
	0x021A6090 ADD X8, X31, 0x0
	0x021A6094 AND X9, X9, 0x1FFFFFFFF
	0x021A6098 SUB X8, X8, X9
	0x021A609C STP X8, X26, [X29 - 0x50]
	0x021A60A0 ADD X31, X8, 0x0
	0x021A60A4 ADD X8, X31, 0x0
	0x021A60A8 MOV X2, X26
	0x021A60AC SUB X26, X8, X9
	0x021A60B0 ADD X31, X26, 0x0
	0x021A60B4 MOV X0, X26
	0x021A60B8 MOV W1, W31
	0x021A60BC BL 0x3EB1B10
	0x021A60C0 ADD X8, X31, 0x0
	0x021A60C4 SUB X27, X8, X27
	0x021A60C8 ADD X31, X27, 0x0
	0x021A60CC MOV X0, X27
	0x021A60D0 MOV W1, W31
	0x021A60D4 MOV X2, X23
	0x021A60D8 BL 0x3EB1B10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X21, X4
	010 Move W19, W3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X23, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X21
	017 Call 0x1C5D6E0
	018 Move X8, [X21+56]
	019 Move X0, [X8]
	020 Move X8, [X0]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {45}
	024 Move X8, [X21+56]
	025 Move X1, X23
	026 Move X2, X22
	027 Move X24, X0
	028 Move X3, [X8+48]
	029 Move X8, [X3]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X21+56]
	032 Move X0, X24
	033 Move X1, X20
	034 Move W2, W19
	035 Move X3, [X8+56]
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X24, [X31+16]
	041 Move X23, [X31+24]
	042 Move X4, [X3]
	043 Move X30, [X31+64]
	044 CallNoReturn X4
	045 Call 0x1C17F20

Method: System.Void Push(in CBType data, UnityEngine.Material mat, System.Int32 shaderId)

Disassembly:
	0x021A5F2C MOV X0, X21
	0x021A5F30 BL 0x1D2C690
	0x021A5F34 MOV X0, X20
	0x021A5F38 BL 0x1C16F18
	0x021A5F3C BL 0x1990590
	0x021A5F40 SUB X31, X31, 0x50
	0x021A5F44 STR X30, [X31 + 0x20]
	0x021A5F48 STP X22, X21, [X31 + 0x30]
	0x021A5F4C STP X20, X19, [X31 + 0x40]
	0x021A5F50 LDR X8, [X3 + 0x38]
	0x021A5F54 MOV X19, X3
	0x021A5F58 MOV X20, X2
	0x021A5F5C MOV X21, X1
	0x021A5F60 MOV W22, W0
	0x021A5F64 CBNZ X8, 0x21A5F74
	0x021A5F68 MOV X0, X19
	0x021A5F6C BL 0x1C5C6E0
	0x021A5F70 LDR X8, [X19 + 0x38]
	0x021A5F74 STP X31, X31, [X31 + 0x10]
	0x021A5F78 STP X31, X31, [X31]
	0x021A5F7C LDR X0, [X8]
	0x021A5F80 BL 0x2278000
	0x021A5F84 CMP W22, 0x1
	0x021A5F88 STRB W0, [X31 + 0x28]
	0x021A5F8C B.LT 0x21A5FCC
	0x021A5F90 MOV W22, W22
	0x021A5F94 LDR X8, [X19 + 0x38]
	0x021A5F98 LDR V0, [X21], #0x10
	0x021A5F9C ADD X0, X31, 0x28
	0x021A5FA0 ADD X1, X31, 0x10
	0x021A5FA4 STR V0, [X31 + 0x1]
	0x021A5FA8 LDR X2, [X8 + 0x28]
	0x021A5FAC BL 0x29B2C74

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X21, X3
	009 Move W19, W2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X21
	015 Call 0x1C5D6E0
	016 Move X8, [X21+56]
	017 Move X0, [X8]
	018 Move X8, [X0]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 Move X8, [X21+56]
	023 Move X1, X22
	024 Move X23, X0
	025 Move X2, [X8+48]
	026 Move X8, [X2]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X21+56]
	029 Move X1, X20
	030 Move W2, W19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X3, [X8+56]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X0, X23
	037 Move X4, [X3]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 CallNoReturn X4
	041 Call 0x1C17F20

Method: System.Void UpdateData(UnityEngine.Rendering.CommandBuffer cmd, in CBType data)

Disassembly:
	0x021A6744 ADD X31, X8, 0x0
	0x021A6748 ADD X10, X25, 0xF
	0x021A674C ADD X8, X31, 0x0
	0x021A6750 AND X28, X10, 0x1FFFFFFFF
	0x021A6754 SUB X23, X8, X28
	0x021A6758 ADD X31, X23, 0x0
	0x021A675C ADD X8, X31, 0x0
	0x021A6760 SUB X20, X8, X9
	0x021A6764 STUR X25, [X29 - 0xA0]
	0x021A6768 ADD X31, X20, 0x0
	0x021A676C MOV X0, X20
	0x021A6770 MOV W1, W31
	0x021A6774 BL 0x3EB1B10
	0x021A6778 ADD X8, X31, 0x0
	0x021A677C SUB X28, X8, X28
	0x021A6780 ADD X31, X28, 0x0
	0x021A6784 MOV X0, X28
	0x021A6788 MOV W1, W31
	0x021A678C MOV X2, X25
	0x021A6790 BL 0x3EB1B10
	0x021A6794 ADD X8, X31, 0x0
	0x021A6798 SUB X0, X8, X27
	0x021A679C STP X31, X31, [X29 - 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move X8, [X0]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, [X21+56]
	020 Move X1, X20
	021 Move X2, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, [X8+48]
	025 Move X4, [X3]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 CallNoReturn X4
	029 Call 0x1C17F20

Method: System.Void UpdateData(in CBType data)

Disassembly:
	0x021A65C0 STP X28, X27, [X31 + 0x10]
	0x021A65C4 STP X26, X25, [X31 + 0x20]
	0x021A65C8 STP X24, X23, [X31 + 0x30]
	0x021A65CC STP X22, X21, [X31 + 0x40]
	0x021A65D0 STP X20, X19, [X31 + 0x50]
	0x021A65D4 ADD X29, X31, 0x0
	0x021A65D8 SUB X31, X31, 0xF0
	0x021A65DC STP X4, X6, [X29 - 0xE0]
	0x021A65E0 STUR X3, [X29 - 0xD0]
	0x021A65E4 STUR X1, [X29 - 0x98]
	0x021A65E8 MRS X8, 0xC000
	0x021A65EC STUR X8, [X29 - 0xF0]
	0x021A65F0 LDR X8, [X8 + 0x28]
	0x021A65F4 LDR X24, [X29 + 0x60]
	0x021A65F8 MOV X19, X7
	0x021A65FC MOV X21, X5
	0x021A6600 STUR X8, [X29 - 0x10]
	0x021A6604 LDR X22, [X24 + 0x38]
	0x021A6608 MOV W23, W2
	0x021A660C MOV W26, W0
	0x021A6610 CBNZ X22, 0x21A6620

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X0, [X8]
	013 Move X8, [X0]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Compare X0, 0
	016 JumpIfEqual {25}
	017 Move X8, [X20+56]
	018 Move X1, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, [X8+48]
	022 Move X3, [X2]
	023 Move X30, [X31+32]
	024 CallNoReturn X3
	025 Call 0x1C17F20

Method: System.Void SetGlobal(UnityEngine.Rendering.CommandBuffer cmd, System.Int32 shaderId)

Disassembly:
	0x021A6564 LDR X2, [X8 + 0x58]
	0x021A6568 STR X9, [X31 + 0x40]
	0x021A656C BL 0x29B2C74
	0x021A6570 MOV X23, X0
	0x021A6574 MOV X22, X1
	0x021A6578 SUBS X24, X24, 0x1
	0x021A657C ADD W20, W20, 0x1
	0x021A6580 B.NE 0x21A6510
	0x021A6584 LDR X25, [X31 + 0x38]
	0x021A6588 LDR W28, [X31 + 0x34]
	0x021A658C LDR X29, [X31 + 0x50]
	0x021A6590 MOV W20, W25
	0x021A6594 B 0x21A65A4
	0x021A6598 LDR X29, [X31 + 0x50]
	0x021A659C MOV X25, X8
	0x021A65A0 MOV X20, X10
	0x021A65A4 CMP W20, W25
	0x021A65A8 CSET W24, LT
	0x021A65AC B.LT 0x21A6330
	0x021A65B0 CMP W27, W26
	0x021A65B4 B.LT 0x21A6330
	0x021A65B8 B 0x21A62E4
	0x021A65BC STP X29, X30, [X31 - 0x60]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move X8, [X0]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, [X21+56]
	020 Move X1, X20
	021 Move W2, W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, [X8+40]
	025 Move X4, [X3]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 CallNoReturn X4
	029 Call 0x1C17F20

Method: System.Void SetGlobal(System.Int32 shaderId)

Disassembly:
	0x021A6510 MOV X0, X23
	0x021A6514 MOV X1, X22
	0x021A6518 MOV X2, X29
	0x021A651C MOV X3, X25
	0x021A6520 MOV X4, X31
	0x021A6524 BL 0x3C22C3C
	0x021A6528 TBZ X0, 0x0, 0x21A64D0
	0x021A652C LDR X10, [X31 + 0x28]
	0x021A6530 ADD X0, X31, 0xA0
	0x021A6534 ADD X1, X31, 0x70
	0x021A6538 ADD W28, W28, 0x1
	0x021A653C LDRSW X8, [X10]
	0x021A6540 ADD W9, W8, 0x1
	0x021A6544 STR W9, [X10]
	0x021A6548 LDR X9, [X31 + 0x20]
	0x021A654C STR W20, [X9, X8, LSL #2]
	0x021A6550 LDR X8, [X31 + 0x50]
	0x021A6554 LDR X9, [X31 + 0x40]
	0x021A6558 LDR X8, [X8 + 0x38]
	0x021A655C LDR V0, [X9], #0x10
	0x021A6560 STR V0, [X31 + 0x7]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move W19, W0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X0, [X8]
	013 Move X8, [X0]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Compare X0, 0
	016 JumpIfEqual {25}
	017 Move X8, [X20+56]
	018 Move W1, W19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, [X8+40]
	022 Move X3, [X2]
	023 Move X30, [X31+32]
	024 CallNoReturn X3
	025 Call 0x1C17F20

Method: System.Void Set(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.ComputeShader cs, System.Int32 shaderId)

Disassembly:
	0x021A6314 MOV W20, W31
	0x021A6318 SXTW X9, W25
	0x021A631C ADD X8, X8, 0x10
	0x021A6320 STP X23, X22, [X31 + 0x20]
	0x021A6324 STP X8, X9, [X31 + 0x8]
	0x021A6328 STR X25, [X31 + 0x38]
	0x021A632C STR X29, [X31 + 0x50]
	0x021A6330 SXTW X8, W20
	0x021A6334 STR X8, [X31 + 0x18]
	0x021A6338 SBFM X8, X20, 0x3C, 0x1F
	0x021A633C STR X8, [X31 + 0x40]
	0x021A6340 CMP W27, W26
	0x021A6344 B.EQ 0x21A6488
	0x021A6348 CMP W20, W25
	0x021A634C B.NE 0x21A6388
	0x021A6350 CMP W27, W26
	0x021A6354 B.GE 0x21A6474
	0x021A6358 ADD W8, W28, W26
	0x021A635C MOV W9, W27
	0x021A6360 LDRSW X10, [X19]
	0x021A6364 ADD W11, W10, 0x1
	0x021A6368 STR W11, [X19]
	0x021A636C STR W9, [X21, X10, LSL #2]
	0x021A6370 ADD W9, W9, 0x1
	0x021A6374 CMP W26, W9
	0x021A6378 B.NE 0x21A6360
	0x021A637C SUB W28, W8, W27

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move W19, W2
	009 Move X20, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Move X8, [X21+56]
	016 Move X0, [X8]
	017 Move X8, [X0]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Compare X0, 0
	020 JumpIfEqual {33}
	021 Move X8, [X21+56]
	022 Move X1, X22
	023 Move X2, X20
	024 Move W3, W19
	025 Move X4, [X8+40]
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X5, [X4]
	031 Move X30, [X31+48]
	032 CallNoReturn X5
	033 Call 0x1C17F20

Method: System.Void Set(UnityEngine.ComputeShader cs, System.Int32 shaderId)

Disassembly:
	0x021A625C STRB W0, [X31 + 0xA8]
	0x021A6260 LDR X8, [X29 + 0x38]
	0x021A6264 LDR X0, [X8 + 0x10]
	0x021A6268 BL 0x2278000
	0x021A626C CMP W26, W25
	0x021A6270 STRB W0, [X31 + 0xA0]
	0x021A6274 STR W31, [X22]
	0x021A6278 STR W31, [X19]
	0x021A627C B.NE 0x21A62CC
	0x021A6280 STP X31, X31, [X31 + 0x90]
	0x021A6284 STP X31, X31, [X31 + 0x80]
	0x021A6288 LDR X8, [X29 + 0x38]
	0x021A628C LDR X1, [X31 + 0x48]
	0x021A6290 ADD X2, X31, 0x90
	0x021A6294 MOV W0, W26
	0x021A6298 LDR X3, [X8 + 0x20]
	0x021A629C BL 0x21A5F40
	0x021A62A0 LDR X8, [X29 + 0x38]
	0x021A62A4 LDR X1, [X31 + 0x58]
	0x021A62A8 ADD X2, X31, 0x80
	0x021A62AC MOV W0, W26
	0x021A62B0 LDR X3, [X8 + 0x28]
	0x021A62B4 BL 0x21A5F40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move X8, [X0]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, [X21+56]
	020 Move X1, X20
	021 Move W2, W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, [X8+40]
	025 Move X4, [X3]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 CallNoReturn X4
	029 Call 0x1C17F20

Method: System.Void Set(UnityEngine.Material mat, System.Int32 shaderId)

Disassembly:
	0x021A62B8 LDP X0, X1, [X31 + 0x90]
	0x021A62BC LDP X2, X3, [X31 + 0x80]
	0x021A62C0 MOV X4, X31
	0x021A62C4 BL 0x3C22E34
	0x021A62C8 TBNZ X0, 0x0, 0x21A62E0
	0x021A62CC CMP W25, 0x0
	0x021A62D0 CSET W24, GT
	0x021A62D4 B.GT 0x21A6308
	0x021A62D8 CMP W26, 0x1
	0x021A62DC B.GE 0x21A6308
	0x021A62E0 MOV W28, W31
	0x021A62E4 MOV W0, W28
	0x021A62E8 LDP X20, X19, [X31 + 0x100]
	0x021A62EC LDP X22, X21, [X31 + 0xF0]
	0x021A62F0 LDP X24, X23, [X31 + 0xE0]
	0x021A62F4 LDP X26, X25, [X31 + 0xD0]
	0x021A62F8 LDP X28, X27, [X31 + 0xC0]
	0x021A62FC LDP X29, X30, [X31 + 0xB0]
	0x021A6300 ADD X31, X31, 0x110
	0x021A6304 RET
	0x021A6308 LDR X8, [X31 + 0x58]
	0x021A630C MOV W28, W31
	0x021A6310 MOV W27, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X21, X2
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {14}
	011 Move X0, X21
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move X8, [X0]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, [X21+56]
	020 Move X1, X20
	021 Move W2, W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, [X8+40]
	025 Move X4, [X3]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 CallNoReturn X4
	029 Call 0x1C17F20

Method: System.Void ReleaseAll()

Disassembly:
	0x0399E860 STR W31, [X0 + 0x24]
	0x0399E864 MOV X2, X31
	0x0399E868 STP X8, X8, [X0]
	0x0399E86C MOV X0, X8
	0x0399E870 B 0x3C001B4
	0x0399E874 STR X30, [X31 - 0x40]!
	0x0399E878 STP X24, X23, [X31 + 0x10]
	0x0399E87C STP X22, X21, [X31 + 0x20]
	0x0399E880 STP X20, X19, [X31 + 0x30]
	0x0399E884 CBZ X1, 0x399E920
	0x0399E888 LDR W8, [X1 + 0x10]
	0x0399E88C LDP X24, X22, [X0 + 0x8]
	0x0399E890 MOV X20, X1
	0x0399E894 MOV X19, X0
	0x0399E898 UBFM W9, W8, 0x1F, 0x1E
	0x0399E89C ADD W9, W9, 0x4
	0x0399E8A0 ADD X23, X24, W9, SXTW
	0x0399E8A4 CMP X23, X22
	0x0399E8A8 B.CS 0x399E904
	0x0399E8AC STR W8, [X24], #0x4
	0x0399E8B0 STR X24, [X19 + 0x8]
	0x0399E8B4 LDR W8, [X20 + 0x10]
	0x0399E8B8 CMP W8, 0x1
	0x0399E8BC B.LT 0x399E8EC
	0x0399E8C0 MOV W21, W31
	0x0399E8C4 MOV X0, X20
	0x0399E8C8 MOV W1, W21
	0x0399E8CC MOV X2, X31
	0x0399E8D0 BL 0x3222A1C
	0x0399E8D4 STRH W0, [X24], #0x2
	0x0399E8D8 LDR W8, [X20 + 0x10]
	0x0399E8DC ADD W21, W21, 0x1
	0x0399E8E0 CMP W21, W8
	0x0399E8E4 B.LT 0x399E8C4
	0x0399E8E8 LDR X24, [X19 + 0x8]
	0x0399E8EC LDR W9, [X19 + 0x24]
	0x0399E8F0 UBFM W8, W8, 0x1F, 0x1E
	0x0399E8F4 ADD X8, X24, W8, SXTW
	0x0399E8F8 STR X8, [X19 + 0x8]
	0x0399E8FC ADD W8, W9, 0x1
	0x0399E900 STR W8, [X19 + 0x24]
	0x0399E904 CMP X23, X22
	0x0399E908 LDP X20, X19, [X31 + 0x30]
	0x0399E90C LDP X22, X21, [X31 + 0x20]
	0x0399E910 LDP X24, X23, [X31 + 0x10]
	0x0399E914 CSET W0, CC
	0x0399E918 LDR X30, [X31], #0x40
	0x0399E91C RET
	0x0399E920 BL 0x1C16F20
	0x0399E924 STP X30, X21, [X31 - 0x20]!
	0x0399E928 STP X20, X19, [X31 + 0x10]
	0x0399E92C LDR X8, [X0]
	0x0399E930 MOV X21, X1
	0x0399E934 LDR W19, [X8]
	0x0399E938 CBZ W19, 0x399E974
	0x0399E93C ADD X1, X8, 0x4
	0x0399E940 MOV X20, X0
	0x0399E944 STR X1, [X0]
	0x0399E948 MOV X0, X31
	0x0399E94C MOV W2, W31
	0x0399E950 MOV W3, W19
	0x0399E954 MOV X4, X31
	0x0399E958 BL 0x322EAD4
	0x0399E95C STR X0, [X21]
	0x0399E960 LDR X8, [X20]
	0x0399E964 UBFM W9, W19, 0x1F, 0x1E
	0x0399E968 ADD X8, X8, W9, SXTW
	0x0399E96C STR X8, [X20]
	0x0399E970 B 0x399E978
	0x0399E974 STR X31, [X21]
	0x0399E978 CMP W19, 0x0
	0x0399E97C LDP X20, X19, [X31 + 0x10]
	0x0399E980 CSET W0, NE
	0x0399E984 LDP X30, X21, [X31], #0x20
	0x0399E988 RET
	0x0399E98C LDR W0, [X1]
	0x0399E990 RET
	0x0399E994 STP X30, X21, [X31 - 0x20]!
	0x0399E998 STP X20, X19, [X31 + 0x10]
	0x0399E99C LDR X8, [X2 + 0x8]
	0x0399E9A0 STP X1, X2, [X0 + 0x20]
	0x0399E9A4 MOV X19, X0
	0x0399E9A8 MOV X20, X1
	0x0399E9AC STR X8, [X0 + 0x10]
	0x0399E9B0 LDRB W21, [X2 + 0x52]
	0x0399E9B4 STR X0, [X0 + 0x40]
	0x0399E9B8 MOV X0, X2
	0x0399E9BC BL 0x1C16D84
	0x0399E9C0 TBZ X0, 0x0, 0x399E9D8
	0x0399E9C4 CBNZ W21, 0x399E9DC
	0x0399E9C8 ADRP X8, 0xFFFFFFFFFE25A000
	0x0399E9CC ADD X8, X8, 0xB14
	0x0399E9D0 STR X8, [X19 + 0x18]
	0x0399E9D4 B 0x399E9EC
	0x0399E9D8 CBZ X20, 0x399EA04
	0x0399E9DC LDR X8, [X19 + 0x10]
	0x0399E9E0 LDR X9, [X19 + 0x20]
	0x0399E9E4 STR X8, [X19 + 0x18]
	0x0399E9E8 STR X9, [X19 + 0x40]
	0x0399E9EC ADRP X8, 0xFFFFFFFFFE25A000
	0x0399E9F0 ADD X8, X8, 0xACC
	0x0399E9F4 STR X8, [X19 + 0x38]
	0x0399E9F8 LDP X20, X19, [X31 + 0x10]
	0x0399E9FC LDP X30, X21, [X31], #0x20
	0x0399EA00 RET
	0x0399EA04 ADRP X1, 0xFFFFFFFFFD17D000
	0x0399EA08 ADD X1, X1, 0xEE3
	0x0399EA0C MOV X0, X31
	0x0399EA10 BL 0x1C16F3C
	0x0399EA14 MOV X1, X31
	0x0399EA18 BL 0x1C16DEC
	0x0399EA1C LDR X8, [X0 + 0x40]
	0x0399EA20 LDR X2, [X0 + 0x18]
	0x0399EA24 LDR X1, [X0 + 0x28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, 0xA44000
	007 Move X21, 0x781000
	008 Move W8, [X19+2910]
	009 Move X21, [X21+1392]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x781000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move X0, 0x7B4000
	018 Move X0, [X0+576]
	019 Call 0x1C17CF4
	020 Move X0, 0x7B4000
	021 Move X0, [X0+584]
	022 Call 0x1C17CF4
	023 Move X0, 0x7B4000
	024 Move X0, [X0+592]
	025 Call 0x1C17CF4
	026 Move X0, 0x7B4000
	027 Move X0, [X0+600]
	028 Call 0x1C17CF4
	029 Move X0, 0x7B4000
	030 Move X0, [X0+608]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2910], W8
	034 Move X0, [X21]
	035 Move [X31+8], X31
	036 Move [X31+16], X31
	037 Move [X31+24], X31
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X0, [X8]
	045 Compare X0, 0
	046 JumpIfEqual {100}
	047 Move X8, 0x7B4000
	048 Move X8, [X8+608]
	049 Move X20, 0x7B4000
	050 Move X19, 0x7B4000
	051 Move X1, [X8]
	052 Move X20, [X20+584]
	053 Move X19, [X19+576]
	054 Add X8, X31, 8
	055 Call List`1<Object>.GetEnumerator, X0
	056 Move X1, [X20]
	057 Add X0, X31, 8
	058 Call Enumerator<Object>.MoveNext, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {70}
	063 Move X0, [X31+24]
	064 Compare X0, 0
	065 JumpIfEqual {99}
	066 Move X8, [X0]
	067 Move X9, [X8+376]
	068 Move X1, [X8+384]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X1, [X19]
	071 Add X0, X31, 8
	072 Call Enumerator<Object>.Dispose, X0
	073 Move X0, [X21]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X21]
	079 Move X8, [X0+184]
	080 Move X8, [X8]
	081 Compare X8, 0
	082 JumpIfEqual {100}
	083 Move W2, [X8+24]
	084 Move W9, [X8+28]
	085 Add W9, W9, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X8+24], W31
	088 Move [X8+28], W9
	089 Move X0, [X8+16]
	090 Move W1, W31
	091 Move X3, X31
	092 Call Array.Clear, X0, X1, X2
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Add X31, X31, 64
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Move X19, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X19
	104 Call 0x3EB2AD0
	105 Move X20, [X0]
	106 Call 0x3EB2AE0
	107 Move X8, 0x7B4000
	108 Move X8, [X8+576]
	109 Add X0, X31, 8
	110 Move X1, [X8]
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X20, 0
	113 JumpIfEqual {73}
	114 Move X0, X20
	115 Call 0x1C17F18
	116 Move X20, X31
	117 Move X19, X0
	118 Move X8, 0x7B4000
	119 Move X8, [X8+576]
	120 Move X1, [X8]
	121 Add X0, X31, 8
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X20, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X19
	126 Call 0x1D2D690
	127 Move X0, X20
	128 Call 0x1C17F18
	129 Call 0x1991590

Method: System.Void Register(UnityEngine.Rendering.ConstantBufferBase cb)

Disassembly:
	0x0399EA28 MOV X0, X8
	0x0399EA2C BR X2
	0x0399EA30 STR X30, [X31 - 0x10]!
	0x0399EA34 MOV X3, X2
	0x0399EA38 MOV X2, X1
	0x0399EA3C ADD X1, X31, 0x8
	0x0399EA40 STR X31, [X31 + 0x8]
	0x0399EA44 BL 0x1C16CB0
	0x0399EA48 LDR X30, [X31], #0x10
	0x0399EA4C RET
	0x0399EA50 STR X30, [X31 - 0x10]!
	0x0399EA54 MOV X0, X1
	0x0399EA58 MOV X1, X31
	0x0399EA5C BL 0x1C16CB4
	0x0399EA60 CBZ X0, 0x399EA74
	0x0399EA64 BL 0x1C16E08
	0x0399EA68 LDR V0, [X0]
	0x0399EA6C LDR X30, [X31], #0x10
	0x0399EA70 RET
	0x0399EA74 BL 0x1C16F20
	0x0399EA78 FMOV V0.2S, 0x0
	0x0399EA7C MOVZ W8, 0x3F800000
	0x0399EA80 MOVZ W9, 0x100
	0x0399EA84 MOVZ W10, 0xBF800000
	0x0399EA88 MOVZ W11, 0x1
	0x0399EA8C STRH W31, [X0 + 0x10]
	0x0399EA90 STRH W31, [X0 + 0x28]
	0x0399EA94 STUR X31, [X0 + 0x34]
	0x0399EA98 STUR D0, [X0 + 0x14]
	0x0399EA9C STR W8, [X0 + 0x1C]
	0x0399EAA0 STRH W9, [X0 + 0x20]
	0x0399EAA4 STR W10, [X0 + 0x24]
	0x0399EAA8 STUR D0, [X0 + 0x2C]
	0x0399EAAC STRB W11, [X0 + 0x44]
	0x0399EAB0 RET
	0x0399EAB4 LDRB W0, [X0 + 0x44]
	0x0399EAB8 RET
	0x0399EABC STRB W1, [X0 + 0x44]
	0x0399EAC0 RET
	0x0399EAC4 LDR X0, [X0 + 0x48]
	0x0399EAC8 RET
	0x0399EACC STR X1, [X0 + 0x48]
	0x0399EAD0 RET
	0x0399EAD4 AND W8, W1, 0x1
	0x0399EAD8 STRB W8, [X0 + 0x29]
	0x0399EADC RET
	0x0399EAE0 LDRB W8, [X0 + 0x29]
	0x0399EAE4 CBZ W8, 0x399EAF0
	0x0399EAE8 MOVZ W0, 0x1
	0x0399EAEC RET
	0x0399EAF0 LDRB W8, [X0 + 0x44]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA44000
	006 Move X20, 0x781000
	007 Move W8, [X21+2911]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x781000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move X0, 0x7B4000
	018 Move X0, [X0+616]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2911], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {63}
	032 Move X9, 0x7B4000
	033 Move X9, [X9+616]
	034 Move W10, [X0+28]
	035 Move X8, [X0+16]
	036 Move X9, [X9]
	037 Add W10, W10, 1
	038 Move [X0+28], W10
	039 Compare X8, 0
	040 JumpIfEqual {63}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move W11, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W9, W10, 1
	045 Add X8, X8, X10
	046 Move [X0+24], W9
	047 Move [X8+32], X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move X8, [X9+32]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X8, [X8+192]
	058 Move X2, [X8+112]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call List`1<Object>.AddWithResize, X0, X1
	062 Return 
	063 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0399EAF4 CMP W8, 0x4
	0x0399EAF8 CSET W0, EQ

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x0399EAFC RET
	0x0399EB00 STP X30, X21, [X31 - 0x20]!
	0x0399EB04 STP X20, X19, [X31 + 0x10]
	0x0399EB08 ADRP X21, 0xA43000
	0x0399EB0C ADRP X20, 0x7B3000
	0x0399EB10 LDRB W8, [X21 + 0xB6B]
	0x0399EB14 LDR X20, [X20 + 0x2D8]
	0x0399EB18 MOV X19, X0
	0x0399EB1C TBNZ X8, 0x0, 0x399EB34
	0x0399EB20 ADRP X0, 0x7B3000
	0x0399EB24 LDR X0, [X0 + 0x2D8]
	0x0399EB28 BL 0x1C16CF4
	0x0399EB2C MOVZ W8, 0x1
	0x0399EB30 STRB W8, [X21 + 0xB6B]
	0x0399EB34 LDR X0, [X20]
	0x0399EB38 LDR W8, [X0 + 0xE0]
	0x0399EB3C CBNZ W8, 0x399EB48
	0x0399EB40 BL 0x1C16DFC
	0x0399EB44 LDR X0, [X20]
	0x0399EB48 LDR X8, [X0 + 0xB8]
	0x0399EB4C LDRB W9, [X19 + 0x28]
	0x0399EB50 LDRB W10, [X8 + 0x40]
	0x0399EB54 CBZ W9, 0x399EBF4
	0x0399EB58 MOV W11, W31
	0x0399EB5C CMP W10, W11
	0x0399EB60 B.NE 0x399EB8C
	0x0399EB64 LDR W9, [X0 + 0xE0]
	0x0399EB68 CBNZ W9, 0x399EB78
	0x0399EB6C BL 0x1C16DFC
	0x0399EB70 LDR X0, [X20]
	0x0399EB74 LDR X8, [X0 + 0xB8]
	0x0399EB78 LDR V0, [X8 + 0x3C]
	0x0399EB7C LDR V1, [X19 + 0x1C]
	0x0399EB80 FCMP S0, S1
	0x0399EB84 B.EQ 0x399EC34

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA44000
	007 Move X22, 0x7B4000
	008 Move X19, 0x7B4000
	009 Move X20, 0x781000
	010 Move W8, [X21+2912]
	011 Move X22, [X22+624]
	012 Move X19, [X19+632]
	013 Move X20, [X20+1392]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x781000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move X0, 0x7B4000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move X0, 0x7B4000
	025 Move X0, [X0+624]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2912], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

