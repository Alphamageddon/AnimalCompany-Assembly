Type: UnityEngine.Rendering.LensFlareComponentSRP

Method: UnityEngine.Rendering.LensFlareDataSRP get_lensFlareData()

Disassembly:
	0x039D1938 STP X24, X23, [X31 + 0x40]
	0x039D193C STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_lensFlareData(UnityEngine.Rendering.LensFlareDataSRP value)

Disassembly:
	0x039D1940 STP X20, X19, [X31 + 0x60]
	0x039D1944 ADRP X28, 0xA10000

ISIL:
	001 Move [X0+32], X1

Method: System.Single celestialProjectedOcclusionRadius(UnityEngine.Camera mainCam)

Disassembly:
	0x039CEE9C LDR X24, [X31 + 0x310]
	0x039CEEA0 TBZ X0, 0x0, 0x39CEEB0
	0x039CEEA4 CBZ X24, 0x39CFFB8
	0x039CEEA8 LDR V1, [X24 + 0x20]
	0x039CEEAC B 0x39CEEBC
	0x039CEEB0 CBZ X24, 0x39CFFBC
	0x039CEEB4 LDR V0, [X24 + 0x20]
	0x039CEEB8 FNEG S1, S0
	0x039CEEBC ADRP X8, 0xFFFFFFFFFD11C000
	0x039CEEC0 LDR V0, [X8 + 0x64]
	0x039CEEC4 ADD X0, X31, 0x13C
	0x039CEEC8 ADD X1, X31, 0x138
	0x039CEECC STR S1, [X31 + 0xE4]
	0x039CEED0 FMUL S0, S1, S0
	0x039CEED4 BL 0x3EB1BC0
	0x039CEED8 LDR V0, [X31 + 0x138]
	0x039CEEDC LDR V1, [X31 + 0x13C]
	0x039CEEE0 STR S0, [X31 + 0x2FC]
	0x039CEEE4 STR S1, [X31 + 0x300]
	0x039CEEE8 STP S1, S0, [X31 + 0xFC]
	0x039CEEEC LDR V0, [X24 + 0x14]
	0x039CEEF0 FADD S0, S0, S0
	0x039CEEF4 STR S0, [X31 + 0x2F8]
	0x039CEEF8 LDR W9, [X24 + 0x64]
	0x039CEEFC LDR W8, [X24 + 0x6C]
	0x039CEF00 STR S0, [X31 + 0x12C]
	0x039CEF04 SUB W10, W9, 0x1
	0x039CEF08 CMP W10, 0x3
	0x039CEF0C CSEL W27, W9, W31, CC
	0x039CEF10 CBZ W8, 0x39CEF8C
	0x039CEF14 CMP W8, 0x1
	0x039CEF18 B.EQ 0x39CEF58
	0x039CEF1C CMP W8, 0x2
	0x039CEF20 B.NE 0x39CEFBC
	0x039CEF24 ADRP X8, 0x784000
	0x039CEF28 LDR X8, [X8 + 0xE60]
	0x039CEF2C LDR X1, [X8]
	0x039CEF30 MOV X0, X19
	0x039CEF34 MOV X2, X31
	0x039CEF38 BL 0x3C4D124
	0x039CEF3C ADRP X8, 0x784000
	0x039CEF40 LDR X8, [X8 + 0xE58]
	0x039CEF44 LDR X1, [X8]
	0x039CEF48 MOV X0, X19
	0x039CEF4C MOV X2, X31
	0x039CEF50 BL 0x3C4D0E0
	0x039CEF54 B 0x39CEFBC
	0x039CEF58 ADRP X8, 0x784000
	0x039CEF5C LDR X8, [X8 + 0xE60]
	0x039CEF60 LDR X1, [X8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA14000
	008 Move X21, 0x785000
	009 Move W8, [X22+3344]
	010 Move X21, [X21+3640]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x785000
	018 Move X0, [X0+3640]
	019 Call 0x1C17CF4
	020 Move X0, 0x726000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3344], W8
	025 Move X0, [X21]
	026 Move X22, 0x726000
	027 Move W8, [X0+224]
	028 Move X22, [X22+1448]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X21]
	033 Move X8, [X22]
	034 Move X9, [X0+184]
	035 Move W10, [X8+224]
	036 Move V8, [X9]
	037 Compare W10, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Compare X20, 0
	042 JumpIfEqual {60}
	043 NotImplemented "Instruction FCVT not yet implemented."
	044 Call 0x3EB2DD0
	045 Move X0, X20
	046 Move X1, X31
	047 Move V8, V0
	048 Call Camera.get_farClipPlane, X0
	049 Move V1, [X19+92]
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+8]
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 Multiply S0, S0, S2
	057 Multiply S0, S1, S0
	058 Move V8, [X31+48]
	059 Return V0
	060 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x039D1A1C STR S8, [X0 + 0x24]
	0x039D1A20 STR X0, [X19 + 0x18]
	0x039D1A24 LDP X22, X21, [X31 + 0x50]
	0x039D1A28 STR X8, [X19 + 0x30]
	0x039D1A2C LDP X20, X19, [X31 + 0x60]
	0x039D1A30 LDP X24, X23, [X31 + 0x40]
	0x039D1A34 LDP X26, X25, [X31 + 0x30]
	0x039D1A38 LDP X28, X27, [X31 + 0x20]
	0x039D1A3C LDR X30, [X31 + 0x10]
	0x039D1A40 LDP D9, D8, [X31], #0x70
	0x039D1A44 RET
	0x039D1A48 BL 0x1C16F28
	0x039D1A4C BL 0x1C16F20
	0x039D1A50 STR X29, [X31 - 0x60]!
	0x039D1A54 STP X30, X27, [X31 + 0x10]
	0x039D1A58 STP X26, X25, [X31 + 0x20]
	0x039D1A5C STP X24, X23, [X31 + 0x30]
	0x039D1A60 STP X22, X21, [X31 + 0x40]
	0x039D1A64 STP X20, X19, [X31 + 0x50]
	0x039D1A68 SUB X31, X31, 0x1000
	0x039D1A6C SUB X31, X31, 0x710
	0x039D1A70 MRS X19, 0xC000
	0x039D1A74 LDR X8, [X19 + 0x28]
	0x039D1A78 ADRP X21, 0xA10000
	0x039D1A7C ADRP X20, 0x781000
	0x039D1A80 STR X8, [X31 + 0x1708]
	0x039D1A84 LDRB W8, [X21 + 0xD1A]
	0x039D1A88 LDR X20, [X20 + 0xE98]
	0x039D1A8C TBNZ X8, 0x0, 0x39D1AE0
	0x039D1A90 ADRP X0, 0x781000
	0x039D1A94 LDR X0, [X0 + 0xEA0]
	0x039D1A98 BL 0x1C16CF4
	0x039D1A9C ADRP X0, 0x781000
	0x039D1AA0 LDR X0, [X0 + 0xEA8]
	0x039D1AA4 BL 0x1C16CF4
	0x039D1AA8 ADRP X0, 0x781000
	0x039D1AAC LDR X0, [X0 + 0xEB0]
	0x039D1AB0 BL 0x1C16CF4
	0x039D1AB4 ADRP X0, 0x781000
	0x039D1AB8 LDR X0, [X0 + 0xEB8]
	0x039D1ABC BL 0x1C16CF4
	0x039D1AC0 ADRP X0, 0x74D000
	0x039D1AC4 LDR X0, [X0 + 0x570]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA11000
	006 Move X20, 0x723000
	007 Move W8, [X21+3345]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x782000
	015 Move X0, [X0+3480]
	016 Call 0x1C17CF4
	017 Move X0, 0x723000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3345], W8
	022 Move X0, [X20]
	023 Move X21, 0x782000
	024 Move X20, [X19+32]
	025 Move W8, [X0+224]
	026 Move X21, [X21+3480]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object.op_Implicit, X0
	033 Move X8, [X21]
	034 Move W20, W0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Call LensFlareCommonSRP.get_Instance
	041 Compare X0, 0
	042 JumpIfEqual {60}
	043 Move X1, X19
	044 Move TEMP, X20
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {54}
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call LensFlareCommonSRP.AddData, X0, X1
	053 Return 
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call LensFlareCommonSRP.RemoveData, X0, X1
	059 Return 
	060 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x039D1AC8 BL 0x1C16CF4
	0x039D1ACC ADRP X0, 0x781000
	0x039D1AD0 LDR X0, [X0 + 0xE98]
	0x039D1AD4 BL 0x1C16CF4
	0x039D1AD8 MOVZ W8, 0x1
	0x039D1ADC STRB W8, [X21 + 0xD1A]
	0x039D1AE0 ADRP X25, 0x74D000
	0x039D1AE4 ADRP X24, 0x781000
	0x039D1AE8 ADRP X23, 0x781000
	0x039D1AEC ADRP X22, 0x781000
	0x039D1AF0 ADRP X21, 0x781000
	0x039D1AF4 LDR X25, [X25 + 0x570]
	0x039D1AF8 LDR X24, [X24 + 0xEA0]
	0x039D1AFC LDR X23, [X23 + 0xEB0]
	0x039D1B00 LDR X22, [X22 + 0xEB8]
	0x039D1B04 LDR X21, [X21 + 0xEA8]
	0x039D1B08 ADD X0, X31, 0x1000
	0x039D1B0C ADD X0, X0, 0x608
	0x039D1B10 MOVZ W2, 0x100
	0x039D1B14 ADD X26, X31, 0x1000
	0x039D1B18 MOV W1, W31
	0x039D1B1C ADD X26, X26, 0x608
	0x039D1B20 BL 0x3EB1B10
	0x039D1B24 ADD X0, X31, 0x1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA11000
	006 Move X21, 0x782000
	007 Move W8, [X20+3346]
	008 Move X21, [X21+3480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x782000
	015 Move X0, [X0+3480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3346], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call LensFlareCommonSRP.get_Instance
	025 Compare X0, 0
	026 JumpIfEqual {34}
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call LensFlareCommonSRP.RemoveData, X0, X1
	033 Return 
	034 Call 0x1C17F20

Method: System.Void OnValidate()

Disassembly:
	0x039D1948 ADRP X27, 0x722000
	0x039D194C LDRB W8, [X28 + 0xD19]
	0x039D1950 LDR X27, [X27 + 0xAC8]
	0x039D1954 MOV W25, W7
	0x039D1958 MOV W23, W6
	0x039D195C MOV W22, W5
	0x039D1960 MOV V8.16B, V1.16B
	0x039D1964 MOV V9.16B, V0.16B
	0x039D1968 MOV W21, W4
	0x039D196C MOV W20, W3
	0x039D1970 MOV W24, W2
	0x039D1974 MOV X26, X1
	0x039D1978 MOV X19, X0
	0x039D197C TBNZ X8, 0x0, 0x39D19A0
	0x039D1980 ADRP X0, 0x722000
	0x039D1984 LDR X0, [X0 + 0x638]
	0x039D1988 BL 0x1C16CF4
	0x039D198C ADRP X0, 0x722000
	0x039D1990 LDR X0, [X0 + 0xAC8]
	0x039D1994 BL 0x1C16CF4
	0x039D1998 MOVZ W8, 0x1
	0x039D199C STRB W8, [X28 + 0xD19]
	0x039D19A0 MOV X0, X19
	0x039D19A4 MOV X1, X31
	0x039D19A8 BL 0x33A51F0
	0x039D19AC LDR X0, [X27]
	0x039D19B0 MOVZ W1, 0x1
	0x039D19B4 BL 0x1C16D6C
	0x039D19B8 STR X0, [X19 + 0x10]
	0x039D19BC CBZ X0, 0x39D1A4C
	0x039D19C0 LDR W8, [X0 + 0x18]
	0x039D19C4 CBZ W8, 0x39D1A48
	0x039D19C8 ADRP X8, 0x722000
	0x039D19CC LDR X8, [X8 + 0x638]
	0x039D19D0 AND W9, W25, 0x1
	0x039D19D4 AND W10, W23, 0x1
	0x039D19D8 AND W11, W22, 0x1
	0x039D19DC STR X26, [X0 + 0x20]
	0x039D19E0 STP W24, W21, [X19 + 0x20]
	0x039D19E4 STRB W11, [X19 + 0x2C]
	0x039D19E8 STRB W10, [X19 + 0x2D]
	0x039D19EC STRB W9, [X19 + 0x2E]
	0x039D19F0 STR W20, [X19 + 0x28]
	0x039D19F4 LDR X0, [X8]
	0x039D19F8 MOVZ W1, 0x2
	0x039D19FC BL 0x1C16D6C
	0x039D1A00 CBZ X0, 0x39D1A4C
	0x039D1A04 LDR W8, [X0 + 0x18]
	0x039D1A08 CBZ W8, 0x39D1A48
	0x039D1A0C CMP W8, 0x1
	0x039D1A10 STR S9, [X0 + 0x20]
	0x039D1A14 B.EQ 0x39D1A48
	0x039D1A18 LDR X8, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA11000
	006 Move W8, [X20+3347]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x782000
	013 Move X0, [X0+3480]
	014 Call 0x1C17CF4
	015 Move X0, 0x723000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3347], W8
	020 Move X21, 0x782000
	021 Move X21, [X21+3480]
	022 Move X0, X19
	023 Move X1, X31
	024 Call Behaviour.get_isActiveAndEnabled, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {60}
	029 Move X8, 0x723000
	030 Move X8, [X8+1432]
	031 Move X20, [X19+32]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {60}
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Call LensFlareCommonSRP.get_Instance
	051 Compare X0, 0
	052 JumpIfEqual {75}
	053 Move X1, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call LensFlareCommonSRP.AddData, X0, X1
	059 Return 
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Call LensFlareCommonSRP.get_Instance
	066 Compare X0, 0
	067 JumpIfEqual {75}
	068 Move X1, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call LensFlareCommonSRP.RemoveData, X0, X1
	074 Return 
	075 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039D1B28 ADD X0, X0, 0x408
	0x039D1B2C MOVZ W2, 0x200
	0x039D1B30 MOV W1, W31
	0x039D1B34 BL 0x3EB1B10
	0x039D1B38 ADD X0, X31, 0x1000
	0x039D1B3C ADD X0, X0, 0x8
	0x039D1B40 MOVZ W2, 0x400
	0x039D1B44 MOV W1, W31
	0x039D1B48 BL 0x3EB1B10
	0x039D1B4C ADD X0, X31, 0x8
	0x039D1B50 MOVZ W2, 0x1000
	0x039D1B54 MOV W1, W31
	0x039D1B58 BL 0x3EB1B10
	0x039D1B5C LDR X0, [X20]
	0x039D1B60 MOV X27, X31
	0x039D1B64 LDR W8, [X0 + 0xE0]
	0x039D1B68 CBNZ W8, 0x39D1B74
	0x039D1B6C BL 0x1C16DFC
	0x039D1B70 LDR X0, [X20]
	0x039D1B74 LDR X8, [X0 + 0xB8]
	0x039D1B78 LDR X8, [X8]
	0x039D1B7C CBZ X8, 0x39D1D94
	0x039D1B80 LDRSW X8, [X8 + 0x18]
	0x039D1B84 CMP X27, X8
	0x039D1B88 B.GE 0x39D1BC8
	0x039D1B8C LDR W8, [X0 + 0xE0]
	0x039D1B90 CBNZ W8, 0x39D1B9C
	0x039D1B94 BL 0x1C16DFC
	0x039D1B98 LDR X0, [X20]
	0x039D1B9C LDR X8, [X0 + 0xB8]
	0x039D1BA0 LDR X8, [X8]
	0x039D1BA4 CBZ X8, 0x39D1D94
	0x039D1BA8 LDR W9, [X8 + 0x18]
	0x039D1BAC CMP X27, X9
	0x039D1BB0 B.CS 0x39D1D98
	0x039D1BB4 ADD X8, X8, X27, 0x2, LSL
	0x039D1BB8 LDR V0, [X8 + 0x20]
	0x039D1BBC ADD X27, X27, 0x1
	0x039D1BC0 STR S0, [X26], #0x4
	0x039D1BC4 B 0x39D1B64
	0x039D1BC8 ADD X27, X31, 0x1000
	0x039D1BCC MOV X26, X31
	0x039D1BD0 ADD X27, X27, 0x408
	0x039D1BD4 LDR W8, [X0 + 0xE0]
	0x039D1BD8 CBNZ W8, 0x39D1BE4
	0x039D1BDC BL 0x1C16DFC
	0x039D1BE0 LDR X0, [X20]
	0x039D1BE4 LDR X8, [X0 + 0xB8]
	0x039D1BE8 LDR X8, [X8 + 0x8]
	0x039D1BEC CBZ X8, 0x39D1D94
	0x039D1BF0 LDRSW X8, [X8 + 0x18]
	0x039D1BF4 CMP X26, X8
	0x039D1BF8 B.GE 0x39D1C38
	0x039D1BFC LDR W8, [X0 + 0xE0]
	0x039D1C00 CBNZ W8, 0x39D1C0C
	0x039D1C04 BL 0x1C16DFC
	0x039D1C08 LDR X0, [X20]
	0x039D1C0C LDR X8, [X0 + 0xB8]
	0x039D1C10 LDR X8, [X8 + 0x8]
	0x039D1C14 CBZ X8, 0x39D1D94
	0x039D1C18 LDR W9, [X8 + 0x18]
	0x039D1C1C CMP X26, X9
	0x039D1C20 B.CS 0x39D1D98
	0x039D1C24 ADD X8, X8, X26, 0x2, LSL
	0x039D1C28 LDR V0, [X8 + 0x20]
	0x039D1C2C ADD X26, X26, 0x1
	0x039D1C30 STR S0, [X27], #0x4
	0x039D1C34 B 0x39D1BD4
	0x039D1C38 ADD X27, X31, 0x1000
	0x039D1C3C MOV X26, X31
	0x039D1C40 ADD X27, X27, 0x8
	0x039D1C44 LDR W8, [X0 + 0xE0]
	0x039D1C48 CBNZ W8, 0x39D1C54
	0x039D1C4C BL 0x1C16DFC
	0x039D1C50 LDR X0, [X20]
	0x039D1C54 LDR X8, [X0 + 0xB8]
	0x039D1C58 LDR X8, [X8 + 0x10]
	0x039D1C5C CBZ X8, 0x39D1D94
	0x039D1C60 LDRSW X8, [X8 + 0x18]
	0x039D1C64 CMP X26, X8
	0x039D1C68 B.GE 0x39D1CA8
	0x039D1C6C LDR W8, [X0 + 0xE0]
	0x039D1C70 CBNZ W8, 0x39D1C7C
	0x039D1C74 BL 0x1C16DFC
	0x039D1C78 LDR X0, [X20]
	0x039D1C7C LDR X8, [X0 + 0xB8]
	0x039D1C80 LDR X8, [X8 + 0x10]
	0x039D1C84 CBZ X8, 0x39D1D94
	0x039D1C88 LDR W9, [X8 + 0x18]
	0x039D1C8C CMP X26, X9
	0x039D1C90 B.CS 0x39D1D98
	0x039D1C94 ADD X8, X8, X26, 0x2, LSL
	0x039D1C98 LDR V0, [X8 + 0x20]
	0x039D1C9C ADD X26, X26, 0x1
	0x039D1CA0 STR S0, [X27], #0x4
	0x039D1CA4 B 0x39D1C44
	0x039D1CA8 MOV X26, X31
	0x039D1CAC ADD X27, X31, 0x8
	0x039D1CB0 LDR W8, [X0 + 0xE0]
	0x039D1CB4 CBNZ W8, 0x39D1CC0
	0x039D1CB8 BL 0x1C16DFC
	0x039D1CBC LDR X0, [X20]
	0x039D1CC0 LDR X8, [X0 + 0xB8]
	0x039D1CC4 LDR X8, [X8 + 0x18]
	0x039D1CC8 CBZ X8, 0x39D1D94
	0x039D1CCC LDRSW X8, [X8 + 0x18]
	0x039D1CD0 CMP X26, X8
	0x039D1CD4 B.GE 0x39D1D14
	0x039D1CD8 LDR W8, [X0 + 0xE0]
	0x039D1CDC CBNZ W8, 0x39D1CE8
	0x039D1CE0 BL 0x1C16DFC
	0x039D1CE4 LDR X0, [X20]
	0x039D1CE8 LDR X8, [X0 + 0xB8]
	0x039D1CEC LDR X8, [X8 + 0x18]
	0x039D1CF0 CBZ X8, 0x39D1D94
	0x039D1CF4 LDR W9, [X8 + 0x18]
	0x039D1CF8 CMP X26, X9
	0x039D1CFC B.CS 0x39D1D98
	0x039D1D00 ADD X8, X8, X26, 0x2, LSL
	0x039D1D04 LDR V0, [X8 + 0x20]
	0x039D1D08 ADD X26, X26, 0x1
	0x039D1D0C STR S0, [X27], #0x4
	0x039D1D10 B 0x39D1CB0
	0x039D1D14 LDR X0, [X25]
	0x039D1D18 LDR W8, [X0 + 0xE0]
	0x039D1D1C CBNZ W8, 0x39D1D24
	0x039D1D20 BL 0x1C16DFC
	0x039D1D24 LDR X1, [X24]
	0x039D1D28 ADD X0, X31, 0x1000
	0x039D1D2C ADD X0, X0, 0x608
	0x039D1D30 BL 0x21A5614
	0x039D1D34 LDR X1, [X23]
	0x039D1D38 ADD X0, X31, 0x1000
	0x039D1D3C ADD X0, X0, 0x408
	0x039D1D40 BL 0x21A56AC
	0x039D1D44 LDR X1, [X22]
	0x039D1D48 ADD X0, X31, 0x1000
	0x039D1D4C ADD X0, X0, 0x8
	0x039D1D50 BL 0x21A56F8
	0x039D1D54 LDR X1, [X21]
	0x039D1D58 ADD X0, X31, 0x8
	0x039D1D5C BL 0x21A5660
	0x039D1D60 LDR X8, [X19 + 0x28]
	0x039D1D64 LDR X9, [X31 + 0x1708]
	0x039D1D68 CMP X8, X9
	0x039D1D6C B.NE 0x39D1D9C
	0x039D1D70 ADD X31, X31, 0x1000
	0x039D1D74 ADD X31, X31, 0x710
	0x039D1D78 LDP X20, X19, [X31 + 0x50]
	0x039D1D7C LDP X22, X21, [X31 + 0x40]
	0x039D1D80 LDP X24, X23, [X31 + 0x30]
	0x039D1D84 LDP X26, X25, [X31 + 0x20]
	0x039D1D88 LDP X30, X27, [X31 + 0x10]
	0x039D1D8C LDR X29, [X31], #0x60
	0x039D1D90 RET
	0x039D1D94 BL 0x1C16F20
	0x039D1D98 BL 0x1C16F28
	0x039D1D9C BL 0x3EB1B20
	0x039D1DA0 STR X30, [X31 - 0x50]!
	0x039D1DA4 STP X26, X25, [X31 + 0x10]
	0x039D1DA8 STP X24, X23, [X31 + 0x20]
	0x039D1DAC STP X22, X21, [X31 + 0x30]
	0x039D1DB0 STP X20, X19, [X31 + 0x40]
	0x039D1DB4 ADRP X21, 0xA10000
	0x039D1DB8 ADRP X22, 0x781000
	0x039D1DBC LDRB W8, [X21 + 0xD1B]
	0x039D1DC0 LDR X22, [X22 + 0xE98]
	0x039D1DC4 MOV X19, X1
	0x039D1DC8 MOV X20, X0
	0x039D1DCC TBNZ X8, 0x0, 0x39D1E20
	0x039D1DD0 ADRP X0, 0x781000
	0x039D1DD4 LDR X0, [X0 + 0xEC0]
	0x039D1DD8 BL 0x1C16CF4
	0x039D1DDC ADRP X0, 0x781000
	0x039D1DE0 LDR X0, [X0 + 0xEC8]
	0x039D1DE4 BL 0x1C16CF4
	0x039D1DE8 ADRP X0, 0x781000
	0x039D1DEC LDR X0, [X0 + 0xED0]
	0x039D1DF0 BL 0x1C16CF4
	0x039D1DF4 ADRP X0, 0x781000
	0x039D1DF8 LDR X0, [X0 + 0xED8]
	0x039D1DFC BL 0x1C16CF4
	0x039D1E00 ADRP X0, 0x74D000
	0x039D1E04 LDR X0, [X0 + 0x570]
	0x039D1E08 BL 0x1C16CF4
	0x039D1E0C ADRP X0, 0x781000
	0x039D1E10 LDR X0, [X0 + 0xE98]
	0x039D1E14 BL 0x1C16CF4
	0x039D1E18 MOVZ W8, 0x1
	0x039D1E1C STRB W8, [X21 + 0xD1B]
	0x039D1E20 LDR X0, [X22]
	0x039D1E24 ADRP X21, 0x74D000
	0x039D1E28 LDR W8, [X0 + 0xE0]
	0x039D1E2C LDR X21, [X21 + 0x570]
	0x039D1E30 CBNZ W8, 0x39D1E3C
	0x039D1E34 BL 0x1C16DFC
	0x039D1E38 LDR X0, [X22]
	0x039D1E3C LDR X8, [X21]
	0x039D1E40 LDR X9, [X0 + 0xB8]
	0x039D1E44 ADRP X26, 0x781000
	0x039D1E48 ADRP X25, 0x781000
	0x039D1E4C ADRP X24, 0x781000
	0x039D1E50 ADRP X23, 0x781000
	0x039D1E54 LDR X26, [X26 + 0xEC0]
	0x039D1E58 LDR W10, [X8 + 0xE0]
	0x039D1E5C LDR W21, [X9 + 0x20]
	0x039D1E60 LDR X25, [X25 + 0xED0]
	0x039D1E64 LDR X24, [X24 + 0xED8]
	0x039D1E68 LDR X23, [X23 + 0xEC8]
	0x039D1E6C CBNZ W10, 0x39D1E78
	0x039D1E70 MOV X0, X8
	0x039D1E74 BL 0x1C16DFC
	0x039D1E78 LDR X3, [X26]
	0x039D1E7C MOV X0, X20
	0x039D1E80 MOV X1, X19
	0x039D1E84 MOV W2, W21
	0x039D1E88 BL 0x21A5380
	0x039D1E8C LDR X8, [X22]
	0x039D1E90 LDR X3, [X25]
	0x039D1E94 MOV X0, X20
	0x039D1E98 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+400], X29
	003 Move [X31+408], X30
	004 Move [X31+416], X24
	005 Move [X31+424], X23
	006 Move [X31+432], X22
	007 Move [X31+440], X21
	008 Move [X31+448], X20
	009 Move [X31+456], X19
	010 Move X20, 0xA11000
	011 Move X22, 0x72A000
	012 Move W8, [X20+3348]
	013 Move X22, [X22+1936]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x72A000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move X0, 0x72A000
	023 Move X0, [X0+1936]
	024 Call 0x1C17CF4
	025 Move X0, 0x782000
	026 Move X0, [X0+3704]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3348], W8
	030 Move X8, -49160192
	031 Move V0, [X8+1000]
	032 Move W8, 0x42C80000
	033 Move [X31+392], X31
	034 Move [X19+48], W8
	035 Move [X19+40], D0
	036 Move X0, [X22]
	037 Move W1, 2
	038 Call 0x1C17D6C
	039 Move X20, X0
	040 Add X0, X31, 360
	041 Move S0, W31
	042 Move S1, 1
	043 Move X1, X31
	044 Move [X31+360], X31
	045 Move [X31+368], X31
	046 Move [X31+384], W31
	047 Move [X31+376], X31
	048 Call Keyframe..ctor, X0, V0, V1
	049 Compare X20, 0
	050 JumpIfEqual {241}
	051 Add X24, X31, 128
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move [X31+20], V0
	055 Move [X24+204], V1
	056 Move W8, [X20+24]
	057 Compare W8, 0
	058 JumpIfEqual {240}
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move V1, [X31+20]
	061 Add X0, X31, 288
	062 Move X1, X31
	063 Move [X20+44], V0
	064 Move [X20+2], V1
	065 Move S0, 1
	066 Move S1, W31
	067 Move [X31+288], X31
	068 Move [X31+296], X31
	069 Move [X31+312], W31
	070 Move [X31+304], X31
	071 Call Keyframe..ctor, X0, V0, V1
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move V1, [X31+18]
	074 Move [X24+140], V0
	075 Move [X31+16], V1
	076 Move W8, [X20+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move V1, [X31+16]
	080 Move X23, 0x72A000
	081 Move X23, [X23+1840]
	082 Move [X20+72], V0
	083 Move [X20+60], V1
	084 Move X0, [X23]
	085 Call 0x1C17F10
	086 Move X1, X20
	087 Move X2, X31
	088 Move X21, X0
	089 Call AnimationCurve..ctor, X0, X1
	090 Move [X19+56], X21
	091 Move X0, [X22]
	092 Move W1, 2
	093 Call 0x1C17D6C
	094 Move X20, X0
	095 Add X0, X31, 224
	096 Move S0, W31
	097 Move S1, 1
	098 Move X1, X31
	099 Move [X31+224], X31
	100 Move [X31+232], X31
	101 Move [X31+248], W31
	102 Move [X31+240], X31
	103 Call Keyframe..ctor, X0, V0, V1
	104 Compare X20, 0
	105 JumpIfEqual {241}
	106 Move V0, [X31+14]
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 Move [X31+12], V0
	109 Move [X24+76], V1
	110 Move W8, [X20+24]
	111 Compare W8, 0
	112 JumpIfEqual {240}
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 Move V1, [X31+12]
	115 Add X0, X31, 160
	116 Move X1, X31
	117 Move [X20+44], V0
	118 Move [X20+2], V1
	119 Move S0, 1
	120 Move S1, W31
	121 Move [X31+160], X31
	122 Move [X31+168], X31
	123 Move [X31+184], W31
	124 Move [X31+176], X31
	125 Call Keyframe..ctor, X0, V0, V1
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 Move V1, [X31+10]
	128 Move [X24+12], V0
	129 Move [X31+8], V1
	130 Move W8, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 Move V1, [X31+8]
	134 Move [X20+72], V0
	135 Move [X20+60], V1
	136 Move X0, [X23]
	137 Call 0x1C17F10
	138 Move X1, X20
	139 Move X2, X31
	140 Move X21, X0
	141 Call AnimationCurve..ctor, X0, X1
	142 Move W8, 1
	143 Move [X19+64], X21
	144 Move [X19+72], W8
	145 Move X0, [X22]
	146 Move W1, 2
	147 Call 0x1C17D6C
	148 Move X20, X0
	149 Add X0, X31, 96
	150 Move S0, W31
	151 Move S1, 1
	152 Move X1, X31
	153 Move [X31+96], X31
	154 Move [X31+104], X31
	155 Move [X31+120], W31
	156 Move [X31+112], X31
	157 Call Keyframe..ctor, X0, V0, V1
	158 Compare X20, 0
	159 JumpIfEqual {241}
	160 Move V0, [X31+6]
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 Move [X31+4], V0
	163 Move [X31+76], V1
	164 Move W8, [X20+24]
	165 Compare W8, 0
	166 JumpIfEqual {240}
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 Move V1, [X31+4]
	169 Add X0, X31, 32
	170 Move X1, X31
	171 Move [X20+44], V0
	172 Move [X20+2], V1
	173 Move S0, 1
	174 Move S1, 1
	175 Move [X31+32], X31
	176 Move [X31+40], X31
	177 Move [X31+56], W31
	178 Move [X31+48], X31
	179 Call Keyframe..ctor, X0, V0, V1
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 Move V1, [X31+2]
	182 Move [X31+12], V0
	183 Move [X31], V1
	184 Move W8, [X20+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 Move V1, [X31]
	188 Move X22, 0x782000
	189 Move [X20+72], V0
	190 Move [X20+60], V1
	191 Move X0, [X23]
	192 Move X22, [X22+3704]
	193 Call 0x1C17F10
	194 Move X1, X20
	195 Move X2, X31
	196 Move X21, X0
	197 Call AnimationCurve..ctor, X0, X1
	198 Move X9, -49160192
	199 Move V0, [X9+152]
	200 Move W8, 0xCCCD
	201 NotImplemented "Instruction MOVK not yet implemented."
	202 Move [X19+92], W8
	203 Move W8, 32
	204 Move [X19+104], D0
	205 Move S0, W31
	206 Move S1, W31
	207 Move S2, 1
	208 Move S3, 1
	209 Move X0, X31
	210 Move [X19+80], X21
	211 Move [X19+100], W8
	212 Call AnimationCurve.Linear, V0, V1, V2, V3
	213 Move X8, -49160192
	214 Move X20, X0
	215 Move V0, [X8]
	216 Move X0, [X22]
	217 Move [X31+392], D0
	218 Call 0x1C17F10
	219 Move S0, 1
	220 Add X3, X31, 392
	221 Move X1, X20
	222 Move W2, W31
	223 Move X4, X31
	224 Move X21, X0
	225 Call TextureCurve..ctor, X0, X1, V0, X2, X3
	226 Move X0, X19
	227 Move X1, X31
	228 Move [X19+120], X21
	229 Call MonoBehaviour..ctor, X0
	230 Move X20, [X31+448]
	231 Move X19, [X31+456]
	232 Move X22, [X31+432]
	233 Move X21, [X31+440]
	234 Move X24, [X31+416]
	235 Move X23, [X31+424]
	236 Move X29, [X31+400]
	237 Move X30, [X31+408]
	238 Add X31, X31, 464
	239 Return 
	240 Call 0x1C17F28
	241 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039D1E9C LDR X8, [X8 + 0xB8]
	0x039D1EA0 LDR W2, [X8 + 0x24]
	0x039D1EA4 BL 0x21A5448
	0x039D1EA8 LDR X8, [X22]
	0x039D1EAC LDR X3, [X24]
	0x039D1EB0 MOV X0, X20
	0x039D1EB4 MOV X1, X19
	0x039D1EB8 LDR X8, [X8 + 0xB8]
	0x039D1EBC LDR W2, [X8 + 0x28]
	0x039D1EC0 BL 0x21A54AC
	0x039D1EC4 LDR X8, [X22]
	0x039D1EC8 LDR X3, [X23]
	0x039D1ECC MOV X0, X20
	0x039D1ED0 MOV X1, X19
	0x039D1ED4 LDR X8, [X8 + 0xB8]
	0x039D1ED8 LDP X20, X19, [X31 + 0x40]
	0x039D1EDC LDP X22, X21, [X31 + 0x30]
	0x039D1EE0 LDP X24, X23, [X31 + 0x20]
	0x039D1EE4 LDR W2, [X8 + 0x2C]
	0x039D1EE8 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA11000
	005 Move X20, 0x782000
	006 Move W8, [X19+3349]
	007 Move X20, [X20+3640]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x782000
	013 Move X0, [X0+3640]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3349], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 0xE9A5
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 Move X8, [X8+184]
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

