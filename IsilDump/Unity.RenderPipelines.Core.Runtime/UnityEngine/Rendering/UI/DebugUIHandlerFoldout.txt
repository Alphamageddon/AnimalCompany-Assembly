Type: UnityEngine.Rendering.UI.DebugUIHandlerFoldout

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x039FB888 BLR X9
	0x039FB88C LDR X0, [X19 + 0x68]
	0x039FB890 CBZ X0, 0x39FB8B0
	0x039FB894 LDR X8, [X0]
	0x039FB898 LDP S2, S3, [X19 + 0x28]
	0x039FB89C LDP S0, S1, [X19 + 0x20]
	0x039FB8A0 LDR X2, [X8 + 0x2A8]
	0x039FB8A4 LDR X1, [X8 + 0x2B0]
	0x039FB8A8 LDP X30, X19, [X31], #0x10
	0x039FB8AC BR X2
	0x039FB8B0 BL 0x1C16F20
	0x039FB8B4 AND W1, W1, 0x1
	0x039FB8B8 MOVZ W2, 0x1
	0x039FB8BC B 0x39FB8C0
	0x039FB8C0 STR X30, [X31 - 0x30]!
	0x039FB8C4 STP X22, X21, [X31 + 0x10]
	0x039FB8C8 STP X20, X19, [X31 + 0x20]
	0x039FB8CC ADRP X22, 0x9E6000
	0x039FB8D0 LDRB W8, [X22 + 0xEFA]
	0x039FB8D4 MOV W20, W2
	0x039FB8D8 MOV W21, W1
	0x039FB8DC MOV X19, X0
	0x039FB8E0 TBNZ X8, 0x0, 0x39FB8F8
	0x039FB8E4 ADRP X0, 0x758000
	0x039FB8E8 LDR X0, [X0 + 0xCE0]
	0x039FB8EC BL 0x1C16CF4
	0x039FB8F0 MOVZ W8, 0x1
	0x039FB8F4 STRB W8, [X22 + 0xEFA]
	0x039FB8F8 LDR X0, [X19 + 0x70]
	0x039FB8FC CBZ X0, 0x39FB95C
	0x039FB900 ADRP X8, 0x758000
	0x039FB904 LDR X8, [X8 + 0xCE0]
	0x039FB908 LDR X1, [X8]
	0x039FB90C BL 0x2D19E54
	0x039FB910 LDR X8, [X19 + 0x70]
	0x039FB914 CBZ X8, 0x39FB95C
	0x039FB918 LDR W9, [X8 + 0x70]
	0x039FB91C TBZ X21, 0x0, 0x39FB928
	0x039FB920 LDR W10, [X8 + 0x74]
	0x039FB924 B 0x39FB92C
	0x039FB928 MOVZ W10, 0x1
	0x039FB92C LDR X11, [X8]
	0x039FB930 MUL W9, W9, W20
	0x039FB934 MADD W1, W9, W10, W0
	0x039FB938 MOV X0, X8
	0x039FB93C LDR X12, [X11 + 0x238]
	0x039FB940 LDR X2, [X11 + 0x240]
	0x039FB944 BLR X12
	0x039FB948 MOV X0, X19
	0x039FB94C LDP X20, X19, [X31 + 0x20]
	0x039FB950 LDP X22, X21, [X31 + 0x10]
	0x039FB954 LDR X30, [X31], #0x30
	0x039FB958 B 0x39FB72C
	0x039FB95C BL 0x1C16F20
	0x039FB960 AND W1, W1, 0x1
	0x039FB964 MOVN W2, 0x0
	0x039FB968 B 0x39FB8C0
	0x039FB96C ADRP X8, 0xFFFFFFFFFD0F1000
	0x039FB970 ADRP X9, 0xFFFFFFFFFD0F0000
	0x039FB974 LDR V0, [X8 + 0xEB]
	0x039FB978 LDR V1, [X9 + 0x77]
	0x039FB97C MOV X1, X31
	0x039FB980 STP V0, V1, [X0 + 0x20]
	0x039FB984 B 0x3C36C30
	0x039FB988 STR X30, [X31 - 0x30]!
	0x039FB98C STP X22, X21, [X31 + 0x10]
	0x039FB990 STP X20, X19, [X31 + 0x20]
	0x039FB994 ADRP X22, 0x9E6000
	0x039FB998 ADRP X21, 0x758000
	0x039FB99C LDRB W8, [X22 + 0xEFC]
	0x039FB9A0 LDR X21, [X21 + 0xCE8]
	0x039FB9A4 MOV X20, X1
	0x039FB9A8 MOV X19, X0
	0x039FB9AC TBNZ X8, 0x0, 0x39FB9DC
	0x039FB9B0 ADRP X0, 0x724000
	0x039FB9B4 LDR X0, [X0 + 0x9C0]
	0x039FB9B8 BL 0x1C16CF4
	0x039FB9BC ADRP X0, 0x758000
	0x039FB9C0 LDR X0, [X0 + 0xCF0]
	0x039FB9C4 BL 0x1C16CF4
	0x039FB9C8 ADRP X0, 0x758000
	0x039FB9CC LDR X0, [X0 + 0xCE8]
	0x039FB9D0 BL 0x1C16CF4
	0x039FB9D4 MOVZ W8, 0x1
	0x039FB9D8 STRB W8, [X22 + 0xEFC]
	0x039FB9DC STR X20, [X19 + 0x58]
	0x039FB9E0 LDR X1, [X21]
	0x039FB9E4 MOV X0, X19
	0x039FB9E8 BL 0x21A8CFC
	0x039FB9EC STR X0, [X19 + 0x68]
	0x039FB9F0 CBZ X0, 0x39FBB04
	0x039FB9F4 LDR X8, [X19 + 0x60]
	0x039FB9F8 CBZ X8, 0x39FBB04
	0x039FB9FC LDR X9, [X8]
	0x039FBA00 LDR X1, [X0 + 0x28]
	0x039FBA04 ADRP X20, 0x724000
	0x039FBA08 MOV X0, X8
	0x039FBA0C LDR X10, [X9 + 0x5E8]
	0x039FBA10 LDR X2, [X9 + 0x5F0]
	0x039FBA14 LDR X20, [X20 + 0x9C0]
	0x039FBA18 BLR X10
	0x039FBA1C LDR X1, [X20]
	0x039FBA20 MOV X0, X19
	0x039FBA24 BL 0x21A3894
	0x039FBA28 LDR X8, [X19 + 0x68]
	0x039FBA2C CBZ X8, 0x39FBB04
	0x039FBA30 LDR W8, [X8 + 0x48]
	0x039FBA34 MOV X19, X0
	0x039FBA38 CMP W8, 0x2
	0x039FBA3C B.EQ 0x39FBA74
	0x039FBA40 CMP W8, 0x1
	0x039FBA44 B.NE 0x39FBAF4
	0x039FBA48 ADRP X20, 0x758000
	0x039FBA4C LDR X20, [X20 + 0xCF0]
	0x039FBA50 LDR X0, [X20]
	0x039FBA54 LDR W8, [X0 + 0xE0]
	0x039FBA58 CBNZ W8, 0x39FBA64
	0x039FBA5C BL 0x1C16DFC
	0x039FBA60 LDR X0, [X20]
	0x039FBA64 CBZ X19, 0x39FBB04
	0x039FBA68 LDR X8, [X0 + 0xB8]
	0x039FBA6C LDR W8, [X8]
	0x039FBA70 B 0x39FBA9C
	0x039FBA74 ADRP X20, 0x758000
	0x039FBA78 LDR X20, [X20 + 0xCF0]
	0x039FBA7C LDR X0, [X20]
	0x039FBA80 LDR W8, [X0 + 0xE0]
	0x039FBA84 CBNZ W8, 0x39FBA90
	0x039FBA88 BL 0x1C16DFC
	0x039FBA8C LDR X0, [X20]
	0x039FBA90 CBZ X19, 0x39FBB04
	0x039FBA94 LDR X8, [X0 + 0xB8]
	0x039FBA98 LDR W8, [X8 + 0x8]
	0x039FBA9C LDR X10, [X19]
	0x039FBAA0 MOVZ W9, 0x437F0000
	0x039FBAA4 FMOV S0, W9
	0x039FBAA8 UBFM X9, X8, 0x18, 0x3F
	0x039FBAAC UCVTF S1, W9
	0x039FBAB0 UBFM W9, W8, 0x10, 0x17
	0x039FBAB4 LDR X2, [X10 + 0x2A8]
	0x039FBAB8 LDR X1, [X10 + 0x2B0]
	0x039FBABC MOV X0, X19
	0x039FBAC0 LDP X20, X19, [X31 + 0x20]
	0x039FBAC4 LDP X22, X21, [X31 + 0x10]
	0x039FBAC8 UCVTF S2, W9
	0x039FBACC UBFM W9, W8, 0x8, 0xF
	0x039FBAD0 AND W8, W8, 0xFF
	0x039FBAD4 UCVTF S4, W9
	0x039FBAD8 UCVTF S5, W8
	0x039FBADC FDIV S3, S1, S0
	0x039FBAE0 FDIV S2, S2, S0
	0x039FBAE4 FDIV S1, S4, S0
	0x039FBAE8 FDIV S0, S5, S0
	0x039FBAEC LDR X30, [X31], #0x30
	0x039FBAF0 BR X2
	0x039FBAF4 LDP X20, X19, [X31 + 0x20]
	0x039FBAF8 LDP X22, X21, [X31 + 0x10]
	0x039FBAFC LDR X30, [X31], #0x30
	0x039FBB00 RET
	0x039FBB04 BL 0x1C16F20
	0x039FBB08 MOV W0, W31
	0x039FBB0C RET
	0x039FBB10 ADRP X8, 0xFFFFFFFFFD0F1000
	0x039FBB14 ADRP X9, 0xFFFFFFFFFD0F0000
	0x039FBB18 LDR V0, [X8 + 0xEB]
	0x039FBB1C LDR V1, [X9 + 0x77]
	0x039FBB20 MOV X1, X31
	0x039FBB24 STP V0, V1, [X0 + 0x20]
	0x039FBB28 B 0x3C36C30
	0x039FBB2C STR X30, [X31 - 0x20]!
	0x039FBB30 STP X20, X19, [X31 + 0x10]
	0x039FBB34 ADRP X20, 0x9E6000
	0x039FBB38 ADRP X19, 0x758000
	0x039FBB3C LDRB W8, [X20 + 0xEFD]
	0x039FBB40 LDR X19, [X19 + 0xCF0]
	0x039FBB44 TBNZ X8, 0x0, 0x39FBB5C
	0x039FBB48 ADRP X0, 0x758000
	0x039FBB4C LDR X0, [X0 + 0xCF0]
	0x039FBB50 BL 0x1C16CF4
	0x039FBB54 MOVZ W8, 0x1
	0x039FBB58 STRB W8, [X20 + 0xEFD]
	0x039FBB5C LDR X8, [X19]
	0x039FBB60 MOVZ W9, 0xB4E7
	0x039FBB64 MOVK W9, 0x1E030000
	0x039FBB68 MOVZ W10, 0x4BE7
	0x039FBB6C LDR X8, [X8 + 0xB8]
	0x039FBB70 MOVK W10, 0x1E030000
	0x039FBB74 STR W9, [X8]
	0x039FBB78 LDR X8, [X19]
	0x039FBB7C MOVZ W9, 0xB4E7
	0x039FBB80 MOVK W9, 0xFF030000
	0x039FBB84 LDR X8, [X8 + 0xB8]
	0x039FBB88 STR W9, [X8 + 0x4]
	0x039FBB8C LDR X8, [X19]
	0x039FBB90 LDP X20, X19, [X31 + 0x10]
	0x039FBB94 LDR X9, [X8 + 0xB8]
	0x039FBB98 STR W10, [X9 + 0x8]
	0x039FBB9C LDR X8, [X8 + 0xB8]
	0x039FBBA0 MOVZ W9, 0x4BE7
	0x039FBBA4 MOVK W9, 0xFF030000
	0x039FBBA8 STR W9, [X8 + 0xC]
	0x039FBBAC LDR X30, [X31], #0x20
	0x039FBBB0 RET
	0x039FBBB4 STR X30, [X31 - 0x30]!
	0x039FBBB8 STP X22, X21, [X31 + 0x10]
	0x039FBBBC STP X20, X19, [X31 + 0x20]
	0x039FBBC0 ADRP X22, 0x9E6000
	0x039FBBC4 ADRP X21, 0x758000
	0x039FBBC8 LDRB W8, [X22 + 0xEFE]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x9E7000
	015 Move X21, 0x759000
	016 Move W8, [X22+3821]
	017 Move X21, [X21+3256]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x759000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0x759000
	028 Move X0, [X0+3256]
	029 Call 0x1C17CF4
	030 Move X0, 0x759000
	031 Move X0, [X0+3264]
	032 Call 0x1C17CF4
	033 Move X0, 0x759000
	034 Move X0, [X0+3272]
	035 Call 0x1C17CF4
	036 Move X0, 0x6FD000
	037 Move X0, [X0+464]
	038 Call 0x1C17CF4
	039 Move X0, 0x6F9000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x720000
	043 Move X0, [X0+3184]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+3821], W8
	047 Move [X19+88], X20
	048 Move X1, [X21]
	049 Move X0, X19
	050 Call 0x21A9CFC, X0
	051 Move [X19+112], X0
	052 Move X8, 0x759000
	053 Move X8, [X8+2536]
	054 Move X0, X19
	055 Move X1, [X8]
	056 Call 0x21A4894, X0
	057 Move X8, [X19+112]
	058 Move [X19+120], X0
	059 Compare X8, 0
	060 JumpIfEqual {234}
	061 Move X0, [X19+96]
	062 Compare X0, 0
	063 JumpIfEqual {234}
	064 Move X9, [X0]
	065 Move X1, [X8+40]
	066 Move X8, [X9+1512]
	067 Move X2, [X9+1520]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X19+112]
	070 Compare X8, 0
	071 JumpIfEqual {234}
	072 Move X8, [X8+96]
	073 Compare X8, 0
	074 JumpIfEqual {220}
	075 Move X8, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X27, 0x759000
	078 Move X29, 0x720000
	079 Move X26, 0x759000
	080 Move X27, [X27+3264]
	081 Move X29, [X29+3184]
	082 Move X26, [X26+3272]
	083 And X24, X8, 0
	084 NotImplemented "Instruction SCVTF not yet implemented."
	085 Move W8, 0x43660000
	086 Move S1, W8
	087 Move X28, X31
	088 Move W23, 0x42C80000
	089 Move W25, 0x43570000
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Move X0, [X19+96]
	092 Compare X0, 0
	093 JumpIfEqual {234}
	094 Move X1, X31
	095 Call Component.get_gameObject, X0
	096 Move X8, 0x759000
	097 Move X8, [X8+2536]
	098 Move X20, X0
	099 Move X0, X19
	100 Move X1, [X8]
	101 Call 0x21A4894, X0
	102 Compare X0, 0
	103 JumpIfEqual {234}
	104 Move X8, 0x6F9000
	105 Move X8, [X8+1432]
	106 Move X21, [X0+32]
	107 Move X8, [X8]
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X8, 0x6FD000
	114 Move X8, [X8+464]
	115 Move X0, X20
	116 Move X1, X21
	117 Move X2, [X8]
	118 Call 0x222E488, X0, X1
	119 Compare X0, 0
	120 JumpIfEqual {234}
	121 Move X1, [X27]
	122 Move X20, X0
	123 Call 0x21E61FC, X0
	124 Compare X0, 0
	125 JumpIfEqual {234}
	126 Move X8, [X0]
	127 Move W1, 1
	128 Move X9, [X8+760]
	129 Move X2, [X8+768]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X0, X20
	132 Move X1, X31
	133 Call GameObject.get_transform, X0
	134 Move X8, [X19+96]
	135 Compare X8, 0
	136 JumpIfEqual {234}
	137 Move X21, X0
	138 Move X0, X8
	139 Move X1, X31
	140 Call Component.get_transform, X0
	141 Move X8, [X29]
	142 Compare X0, 0
	143 JumpIfEqual {149}
	144 Move X9, [X0]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSEL not yet implemented."
	147 Compare X21, 0
	148 JumpIfNotEqual {152}
	149 Move X22, X31
	150 Compare X21, 0
	151 JumpIfEqual {234}
	152 Move X9, [X21]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move S0, W31
	155 Move S1, 1
	156 Move X0, X21
	157 Move X1, X31
	158 Call RectTransform.set_anchorMin, X0, X1
	159 Move S0, W31
	160 Move S1, 1
	161 Move X0, X21
	162 Move X1, X31
	163 Call RectTransform.set_anchorMax, X0, X1
	164 Move S1, 26
	165 Move S0, W23
	166 Move X0, X21
	167 Move X1, X31
	168 Call RectTransform.set_sizeDelta, X0, X1
	169 Compare X22, 0
	170 JumpIfEqual {234}
	171 Move X0, X22
	172 Move X1, X31
	173 Call RectTransform.get_anchoredPosition, X0
	174 Add X22, X28, 1
	175 NotImplemented "Instruction SCVTF not yet implemented."
	176 Multiply S2, S8, S2
	177 Move S3, W25
	178 Add S2, S2, S3
	179 Add S0, S2, S0
	180 Move X0, X21
	181 Move X1, X31
	182 Call RectTransform.set_anchoredPosition, X0, X1
	183 Move S0, W31
	184 Move S1, 0.5
	185 Move X0, X21
	186 Move X1, X31
	187 Call RectTransform.set_pivot, X0, X1
	188 Move S0, W31
	189 Move S1, W31
	190 Move S2, 13
	191 Move X0, X21
	192 Move X1, X31
	193 Call Transform.set_eulerAngles, X0, X1
	194 Move X1, [X26]
	195 Move X0, X20
	196 Call 0x21E62E4, X0
	197 Compare X0, 0
	198 JumpIfEqual {234}
	199 Move W1, 15
	200 Move X2, X31
	201 Move X20, X0
	202 Call Text.set_fontSize, X0, X1
	203 Move X8, [X19+112]
	204 Compare X8, 0
	205 JumpIfEqual {234}
	206 Move X8, [X8+96]
	207 Compare X8, 0
	208 JumpIfEqual {234}
	209 Move W9, [X8+24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X9, [X20]
	212 Add X8, X8, X28
	213 Move X1, [X8+32]
	214 Move X0, X20
	215 Move X8, [X9+1512]
	216 Move X2, [X9+1520]
	217 NotImplemented "Instruction BLR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X28, X22
	220 Move X0, X19
	221 Move X20, [X31+96]
	222 Move X19, [X31+104]
	223 Move X22, [X31+80]
	224 Move X21, [X31+88]
	225 Move X24, [X31+64]
	226 Move X23, [X31+72]
	227 Move X26, [X31+48]
	228 Move X25, [X31+56]
	229 Move X28, [X31+32]
	230 Move X27, [X31+40]
	231 Move X29, [X31+16]
	232 Move X30, [X31+24]
	233 Move V8, [X31+112]
	234 Call 0x1C17F20
	235 Call 0x1C17F28

Method: System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)

Disassembly:
	0x039FBBF4 MOVZ W8, 0x1
	0x039FBBF8 STRB W8, [X22 + 0xEFE]
	0x039FBBFC STR X20, [X19 + 0x58]
	0x039FBC00 LDR X1, [X21]
	0x039FBC04 MOV X0, X19
	0x039FBC08 BL 0x21A8CFC
	0x039FBC0C CBZ X0, 0x39FBC7C
	0x039FBC10 MOV X20, X0
	0x039FBC14 LDR X0, [X19 + 0x60]
	0x039FBC18 CBZ X0, 0x39FBC7C
	0x039FBC1C LDR X8, [X0]
	0x039FBC20 LDR X1, [X20 + 0x28]
	0x039FBC24 ADRP X21, 0x758000
	0x039FBC28 LDR X9, [X8 + 0x5E8]
	0x039FBC2C LDR X2, [X8 + 0x5F0]
	0x039FBC30 LDR X21, [X21 + 0xD00]
	0x039FBC34 BLR X9
	0x039FBC38 LDR X1, [X21]
	0x039FBC3C LDR X19, [X19 + 0x68]
	0x039FBC40 MOV X0, X20
	0x039FBC44 BL 0x2D1A074
	0x039FBC48 CBZ X0, 0x39FBC7C
	0x039FBC4C MOV X1, X31
	0x039FBC50 BL 0x3C389D4
	0x039FBC54 CBZ X19, 0x39FBC7C
	0x039FBC58 LDR X8, [X19]
	0x039FBC5C MOV X1, X0
	0x039FBC60 MOV X0, X19
	0x039FBC64 LDP X20, X19, [X31 + 0x20]
	0x039FBC68 LDR X3, [X8 + 0x5E8]
	0x039FBC6C LDR X2, [X8 + 0x5F0]
	0x039FBC70 LDP X22, X21, [X31 + 0x10]
	0x039FBC74 LDR X30, [X31], #0x30
	0x039FBC78 BR X3
	0x039FBC7C BL 0x1C16F20
	0x039FBC80 STP X30, X19, [X31 - 0x10]!
	0x039FBC84 MOV X19, X0
	0x039FBC88 LDR X0, [X0 + 0x60]
	0x039FBC8C CBZ X0, 0x39FBCD4
	0x039FBC90 LDR X8, [X0]
	0x039FBC94 LDP S2, S3, [X19 + 0x38]
	0x039FBC98 LDP S0, S1, [X19 + 0x30]
	0x039FBC9C LDR X9, [X8 + 0x2A8]
	0x039FBCA0 LDR X1, [X8 + 0x2B0]
	0x039FBCA4 BLR X9
	0x039FBCA8 LDR X0, [X19 + 0x68]
	0x039FBCAC CBZ X0, 0x39FBCD4
	0x039FBCB0 LDR X8, [X0]
	0x039FBCB4 LDP S2, S3, [X19 + 0x38]
	0x039FBCB8 LDP S0, S1, [X19 + 0x30]
	0x039FBCBC LDR X9, [X8 + 0x2A8]
	0x039FBCC0 LDR X1, [X8 + 0x2B0]
	0x039FBCC4 BLR X9
	0x039FBCC8 MOVZ W0, 0x1
	0x039FBCCC LDP X30, X19, [X31], #0x10
	0x039FBCD0 RET
	0x039FBCD4 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9E7000
	007 Move W8, [X22+3822]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x756000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3822], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {39}
	024 Move X8, [X19+104]
	025 Compare X8, 0
	026 JumpIfEqual {78}
	027 Move W8, [X8+288]
	028 Compare W8, 0
	029 JumpIfEqual {39}
	030 Move X0, [X19+120]
	031 Compare X0, 0
	032 JumpIfEqual {78}
	033 Move X1, X20
	034 Call DebugUIHandlerContainer.IsDirectChild, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X0, [X19+96]
	040 Compare X0, 0
	041 JumpIfEqual {78}
	042 Move X8, [X0]
	043 Move S2, [X19+56]
	044 Move S3, [X19+60]
	045 Move S0, [X19+48]
	046 Move S1, [X19+52]
	047 Move X9, [X8+680]
	048 Move X1, [X8+688]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W0, 1
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X0, [X19+120]
	058 Compare X0, 0
	059 JumpIfEqual {78}
	060 Call DebugUIHandlerContainer.GetLastItem, X0
	061 Move X8, 0x756000
	062 Move X8, [X8+1912]
	063 Move X19, X0
	064 Move X8, [X8]
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X31
	071 Call DebugManager.get_instance
	072 Compare X0, 0
	073 JumpIfEqual {78}
	074 Move X1, X19
	075 Move W2, W31
	076 Move X3, X31
	077 Call DebugManager.ChangeSelection, X0, X1, X2
	078 Call 0x1C17F20

Method: System.Void OnDeselection()

Disassembly:
	0x039FBCD8 STP X30, X19, [X31 - 0x10]!
	0x039FBCDC MOV X19, X0
	0x039FBCE0 LDR X0, [X0 + 0x60]
	0x039FBCE4 CBZ X0, 0x39FBD24
	0x039FBCE8 LDR X8, [X0]
	0x039FBCEC LDP S2, S3, [X19 + 0x28]
	0x039FBCF0 LDP S0, S1, [X19 + 0x20]
	0x039FBCF4 LDR X9, [X8 + 0x2A8]
	0x039FBCF8 LDR X1, [X8 + 0x2B0]
	0x039FBCFC BLR X9
	0x039FBD00 LDR X0, [X19 + 0x68]
	0x039FBD04 CBZ X0, 0x39FBD24

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+96]
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 Move X9, [X0]
	007 Move S2, [X8+40]
	008 Move S3, [X8+44]
	009 Move S0, [X8+32]
	010 Move S1, [X8+36]
	011 Move X2, [X9+680]
	012 Move X1, [X9+688]
	013 Move X30, [X31+16]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Void OnIncrement(System.Boolean fast)

Disassembly:
	0x039FBD08 LDR X8, [X0]
	0x039FBD0C LDP S2, S3, [X19 + 0x28]
	0x039FBD10 LDP S0, S1, [X19 + 0x20]
	0x039FBD14 LDR X2, [X8 + 0x2A8]
	0x039FBD18 LDR X1, [X8 + 0x2B0]
	0x039FBD1C LDP X30, X19, [X31], #0x10
	0x039FBD20 BR X2
	0x039FBD24 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+112]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move W9, 1
	006 Move [X8+80], W9
	007 Move X30, [X31+16]
	008 Call DebugUIHandlerFoldout.UpdateValue, X0
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnDecrement(System.Boolean fast)

Disassembly:
	0x039FBD28 ADRP X8, 0xFFFFFFFFFD0F1000
	0x039FBD2C ADRP X9, 0xFFFFFFFFFD0F0000
	0x039FBD30 LDR V0, [X8 + 0xEB]
	0x039FBD34 LDR V1, [X9 + 0x77]
	0x039FBD38 MOV X1, X31
	0x039FBD3C STP V0, V1, [X0 + 0x20]
	0x039FBD40 B 0x3C36C30

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+112]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move [X8+80], W31
	006 Move X30, [X31+16]
	007 Call DebugUIHandlerFoldout.UpdateValue, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void OnAction()

Disassembly:
	0x039FBD44 STR X30, [X31 - 0x30]!
	0x039FBD48 STP X22, X21, [X31 + 0x10]
	0x039FBD4C STP X20, X19, [X31 + 0x20]
	0x039FBD50 ADRP X21, 0x9E6000
	0x039FBD54 ADRP X22, 0x758000
	0x039FBD58 LDRB W8, [X21 + 0xEFF]
	0x039FBD5C LDR X22, [X22 + 0xD08]
	0x039FBD60 MOV X20, X1
	0x039FBD64 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+112]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+80]
	006 Xor W9, W9, 1
	007 Move [X8+80], W9
	008 Move X30, [X31+16]
	009 Call DebugUIHandlerFoldout.UpdateValue, X0
	010 Return 
	011 Call 0x1C17F20

Method: System.Void UpdateValue()

Disassembly:
	0x039FBBCC LDR X21, [X21 + 0xCF8]
	0x039FBBD0 MOV X20, X1
	0x039FBBD4 MOV X19, X0
	0x039FBBD8 TBNZ X8, 0x0, 0x39FBBFC
	0x039FBBDC ADRP X0, 0x758000
	0x039FBBE0 LDR X0, [X0 + 0xCF8]
	0x039FBBE4 BL 0x1C16CF4
	0x039FBBE8 ADRP X0, 0x758000
	0x039FBBEC LDR X0, [X0 + 0xD00]
	0x039FBBF0 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+112]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move X0, [X0+104]
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move W1, [X8+80]
	009 Move X2, X31
	010 Move X30, [X31+16]
	011 Call Toggle.set_isOn, X0, X1
	012 Return 
	013 Call 0x1C17F20

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget Next()

Disassembly:
	0x039FBD68 TBNZ X8, 0x0, 0x39FBD80
	0x039FBD6C ADRP X0, 0x758000
	0x039FBD70 LDR X0, [X0 + 0xD08]
	0x039FBD74 BL 0x1C16CF4
	0x039FBD78 MOVZ W8, 0x1
	0x039FBD7C STRB W8, [X21 + 0xEFF]
	0x039FBD80 LDR X2, [X22]
	0x039FBD84 MOV X0, X19
	0x039FBD88 MOV X1, X20
	0x039FBD8C BL 0x29B0940
	0x039FBD90 STR W31, [X19 + 0x88]
	0x039FBD94 LDP X20, X19, [X31 + 0x20]
	0x039FBD98 LDP X22, X21, [X31 + 0x10]
	0x039FBD9C LDR X30, [X31], #0x30
	0x039FBDA0 RET
	0x039FBDA4 LDR W8, [X0 + 0x88]
	0x039FBDA8 LDR X9, [X0]
	0x039FBDAC ADD W8, W8, 0x1
	0x039FBDB0 STR W8, [X0 + 0x88]
	0x039FBDB4 LDR X2, [X9 + 0x208]
	0x039FBDB8 LDR X1, [X9 + 0x210]
	0x039FBDBC BR X2
	0x039FBDC0 LDR W8, [X0 + 0x88]
	0x039FBDC4 LDR X9, [X0]
	0x039FBDC8 SUB W8, W8, 0x1
	0x039FBDCC STR W8, [X0 + 0x88]
	0x039FBDD0 LDR X2, [X9 + 0x208]
	0x039FBDD4 LDR X1, [X9 + 0x210]
	0x039FBDD8 BR X2
	0x039FBDDC STR X30, [X31 - 0x40]!
	0x039FBDE0 STP X24, X23, [X31 + 0x10]
	0x039FBDE4 STP X22, X21, [X31 + 0x20]
	0x039FBDE8 STP X20, X19, [X31 + 0x30]
	0x039FBDEC ADRP X20, 0x9E6000
	0x039FBDF0 LDRB W8, [X20 + 0xF00]
	0x039FBDF4 MOV X19, X0
	0x039FBDF8 TBNZ X8, 0x0, 0x39FBE34
	0x039FBDFC ADRP X0, 0x758000
	0x039FBE00 LDR X0, [X0 + 0xD10]
	0x039FBE04 BL 0x1C16CF4
	0x039FBE08 ADRP X0, 0x758000
	0x039FBE0C LDR X0, [X0 + 0xD18]
	0x039FBE10 BL 0x1C16CF4
	0x039FBE14 ADRP X0, 0x6F8000
	0x039FBE18 LDR X0, [X0 + 0x5A8]
	0x039FBE1C BL 0x1C16CF4
	0x039FBE20 ADRP X0, 0x758000
	0x039FBE24 LDR X0, [X0 + 0xD20]
	0x039FBE28 BL 0x1C16CF4
	0x039FBE2C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E7000
	006 Move W8, [X20+3823]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6F9000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3823], W8
	017 Move X8, [X19+112]
	018 Compare X8, 0
	019 JumpIfEqual {71}
	020 Move W8, [X8+80]
	021 Compare W8, 0
	022 JumpIfEqual {58}
	023 Move X21, 0x6F9000
	024 Move X21, [X21+1432]
	025 Move X20, [X19+120]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {58}
	039 Move X0, [X19+120]
	040 Compare X0, 0
	041 JumpIfEqual {71}
	042 Call DebugUIHandlerContainer.GetFirstItem, X0
	043 Move X8, [X21]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {65}
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call DebugUIHandlerWidget.Next, X0
	064 Return X0
	065 Move X0, X20
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039FBE30 STRB W8, [X20 + 0xF00]
	0x039FBE34 LDR X0, [X19 + 0x80]
	0x039FBE38 CBZ X0, 0x39FBF44
	0x039FBE3C ADRP X8, 0x758000
	0x039FBE40 ADRP X9, 0x758000
	0x039FBE44 LDR X8, [X8 + 0xD20]
	0x039FBE48 LDR X9, [X9 + 0xD18]

ISIL:
	001 Move X8, -49340416
	002 Move X9, -49344512
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

