Type: UnityEngine.Rendering.UI.DebugUIHandlerCanvas

Method: System.Void OnEnable()

Disassembly:
	0x039F7A0C MOV X1, X31
	0x039F7A10 MOV X2, X31
	0x039F7A14 BL 0x3C354F8
	0x039F7A18 TBZ X0, 0x0, 0x39F7734
	0x039F7A1C CBZ X23, 0x39F7B40
	0x039F7A20 LDR X8, [X23 + 0x58]
	0x039F7A24 CBZ X8, 0x39F7B3C
	0x039F7A28 LDR X24, [X8 + 0x38]
	0x039F7A2C MOV X0, X22
	0x039F7A30 MOV X1, X31
	0x039F7A34 BL 0x39AF5C8
	0x039F7A38 MOV X1, X0
	0x039F7A3C CBZ X24, 0x39F7B38
	0x039F7A40 MOV X0, X24
	0x039F7A44 MOV X2, X31
	0x039F7A48 BL 0x322BD1C
	0x039F7A4C ANDS W31, W0, 0x1
	0x039F7A50 CSEL X21, X23, X21, NE
	0x039F7A54 B 0x39F7734
	0x039F7A58 MOV X22, X31
	0x039F7A5C CBZ X20, 0x39F7AC0
	0x039F7A60 LDR X8, [X20]
	0x039F7A64 ADRP X10, 0x6FC000
	0x039F7A68 LDRH W9, [X8 + 0x12E]
	0x039F7A6C LDR X10, [X10 + 0xE00]
	0x039F7A70 LDR X1, [X10]
	0x039F7A74 CBZ X9, 0x39F7A98
	0x039F7A78 LDR X10, [X8 + 0xB0]
	0x039F7A7C ADD X10, X10, 0x8
	0x039F7A80 LDUR X11, [X10 - 0x8]
	0x039F7A84 CMP X11, X1
	0x039F7A88 B.EQ 0x39F7AA8
	0x039F7A8C SUBS X9, X9, 0x1
	0x039F7A90 ADD X10, X10, 0x10
	0x039F7A94 B.NE 0x39F7A80
	0x039F7A98 MOV X0, X20
	0x039F7A9C MOV W2, W31
	0x039F7AA0 BL 0x1C5C788
	0x039F7AA4 B 0x39F7AB4
	0x039F7AA8 LDRSW X9, [X10]
	0x039F7AAC ADD X8, X8, X9, 0x4, LSL
	0x039F7AB0 ADD X0, X8, 0x138
	0x039F7AB4 LDP X8, X1, [X0]
	0x039F7AB8 MOV X0, X20
	0x039F7ABC BLR X8
	0x039F7AC0 CBNZ X22, 0x39F7B30
	0x039F7AC4 LDR W1, [X19 + 0x48]
	0x039F7AC8 MOV X0, X19
	0x039F7ACC MOV X2, X21
	0x039F7AD0 BL 0x39F81C4
	0x039F7AD4 LDP X20, X19, [X31 + 0xC0]
	0x039F7AD8 LDP X22, X21, [X31 + 0xB0]
	0x039F7ADC LDP X24, X23, [X31 + 0xA0]
	0x039F7AE0 LDP X26, X25, [X31 + 0x90]
	0x039F7AE4 LDP X28, X27, [X31 + 0x80]
	0x039F7AE8 LDP X29, X30, [X31 + 0x70]
	0x039F7AEC LDP D9, D8, [X31 + 0x60]
	0x039F7AF0 LDP D11, D10, [X31 + 0x50]
	0x039F7AF4 LDR V12, [X31 + 0x40]
	0x039F7AF8 ADD X31, X31, 0xD0
	0x039F7AFC RET
	0x039F7B00 BL 0x1C16F20
	0x039F7B04 BL 0x1C16F20
	0x039F7B08 BL 0x1C16F20
	0x039F7B0C BL 0x1C16F20
	0x039F7B10 BL 0x1C16F20
	0x039F7B14 BL 0x1C16F20
	0x039F7B18 BL 0x1C16F20
	0x039F7B1C BL 0x1C16F20
	0x039F7B20 BL 0x1C16F20
	0x039F7B24 BL 0x1C16F20
	0x039F7B28 BL 0x1C16F20
	0x039F7B2C BL 0x1C16F20
	0x039F7B30 MOV X0, X22
	0x039F7B34 BL 0x1C16F18
	0x039F7B38 BL 0x1C16F20
	0x039F7B3C BL 0x1C16F20
	0x039F7B40 BL 0x1C16F20
	0x039F7B44 B 0x39F7C64
	0x039F7B48 B 0x39F7C64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9EB000
	006 Move W8, [X20+3779]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0x75A000
	013 Move X0, [X0+1912]
	014 Call 0x1C17CF4
	015 Move X0, 0x75D000
	016 Move X0, [X0+2736]
	017 Call 0x1C17CF4
	018 Move X0, 0x75D000
	019 Move X0, [X0+2744]
	020 Call 0x1C17CF4
	021 Move X0, 0x75D000
	022 Move X0, [X0+2752]
	023 Call 0x1C17CF4
	024 Move X0, 0x75D000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0x75D000
	028 Move X0, [X0+2768]
	029 Call 0x1C17CF4
	030 Move X0, 0x75D000
	031 Move X0, [X0+2776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3779], W8
	035 Move X8, [X19+56]
	036 Compare X8, 0
	037 JumpIfNotEqual {48}
	038 Move X8, 0x75D000
	039 Move X8, [X8+2776]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X8, 0x75D000
	043 Move X8, [X8+2760]
	044 Move X20, X0
	045 Move X1, [X8]
	046 Call List`1<Object>..ctor, X0
	047 Move [X19+56], X20
	048 Move X8, [X19+40]
	049 Compare X8, 0
	050 JumpIfNotEqual {61}
	051 Move X8, 0x75D000
	052 Move X8, [X8+2744]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0x75D000
	056 Move X8, [X8+2736]
	057 Move X20, X0
	058 Move X1, [X8]
	059 Call Dictionary`2<Object, Object>..ctor, X0
	060 Move [X19+40], X20
	061 Move X21, 0x75A000
	062 Move X8, [X19+64]
	063 Move X21, [X21+1912]
	064 Compare X8, 0
	065 JumpIfNotEqual {76}
	066 Move X8, 0x75D000
	067 Move X8, [X8+2768]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Move X8, 0x75D000
	071 Move X8, [X8+2752]
	072 Move X20, X0
	073 Move X1, [X8]
	074 Call List`1<Object>..ctor, X0
	075 Move [X19+64], X20
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X31
	082 Call DebugManager.get_instance
	083 Compare X0, 0
	084 JumpIfEqual {93}
	085 Move X1, X19
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X2, X31
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Call DebugManager.RegisterRootCanvas, X0, X1
	092 Return 
	093 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x039F7B4C B 0x39F7C64
	0x039F7B50 B 0x39F7C64
	0x039F7B54 B 0x39F7C64
	0x039F7B58 B 0x39F7C64
	0x039F7B5C B 0x39F7C64
	0x039F7B60 B 0x39F7C64
	0x039F7B64 B 0x39F7BE4
	0x039F7B68 B 0x39F7BE4
	0x039F7B6C B 0x39F7BE4
	0x039F7B70 B 0x39F7C64
	0x039F7B74 B 0x39F7C64
	0x039F7B78 B 0x39F7C64
	0x039F7B7C B 0x39F7C64
	0x039F7B80 B 0x39F7C64
	0x039F7B84 B 0x39F7C64
	0x039F7B88 B 0x39F7C64
	0x039F7B8C B 0x39F7C64
	0x039F7B90 B 0x39F7C64
	0x039F7B94 B 0x39F7C64
	0x039F7B98 B 0x39F7C64
	0x039F7B9C B 0x39F7C64
	0x039F7BA0 B 0x39F7C64
	0x039F7BA4 B 0x39F7C64
	0x039F7BA8 B 0x39F7C64
	0x039F7BAC B 0x39F7C64
	0x039F7BB0 B 0x39F7C64
	0x039F7BB4 B 0x39F7BE4
	0x039F7BB8 B 0x39F7C64
	0x039F7BBC B 0x39F7C64
	0x039F7BC0 B 0x39F7BE4
	0x039F7BC4 B 0x39F7C64
	0x039F7BC8 B 0x39F7C64
	0x039F7BCC B 0x39F7C64
	0x039F7BD0 B 0x39F7BE4
	0x039F7BD4 B 0x39F7BE4
	0x039F7BD8 B 0x39F7BE4
	0x039F7BDC MOV X21, X31
	0x039F7BE0 B 0x39F7C64
	0x039F7BE4 ADRP X26, 0x75C000
	0x039F7BE8 ADRP X27, 0x75C000
	0x039F7BEC ADRP X25, 0x75C000
	0x039F7BF0 LDR X26, [X26 + 0xB80]
	0x039F7BF4 LDR X27, [X27 + 0xB28]
	0x039F7BF8 LDR X25, [X25 + 0xB08]
	0x039F7BFC CMP W1, 0x1
	0x039F7C00 B.NE 0x39F7C30
	0x039F7C04 BL 0x3EB1AD0
	0x039F7C08 LDR X20, [X0]
	0x039F7C0C BL 0x3EB1AE0
	0x039F7C10 ADRP X8, 0x75C000
	0x039F7C14 LDR X8, [X8 + 0xB10]
	0x039F7C18 ADD X0, X31, 0x20
	0x039F7C1C LDR X1, [X8]
	0x039F7C20 BL 0x2BC434C
	0x039F7C24 CBZ X20, 0x39F75EC
	0x039F7C28 MOV X0, X20
	0x039F7C2C BL 0x1C16F18
	0x039F7C30 MOV X19, X0
	0x039F7C34 MOV X20, X31
	0x039F7C38 B 0x39F7C40
	0x039F7C3C MOV X19, X0
	0x039F7C40 ADRP X8, 0x75C000
	0x039F7C44 LDR X8, [X8 + 0xB10]
	0x039F7C48 LDR X1, [X8]
	0x039F7C4C ADD X0, X31, 0x20
	0x039F7C50 BL 0x2BC434C
	0x039F7C54 CBZ X20, 0x39F7CF4
	0x039F7C58 MOV X0, X20
	0x039F7C5C BL 0x1C16F18
	0x039F7C60 B 0x39F7C64
	0x039F7C64 CMP W1, 0x1
	0x039F7C68 B.NE 0x39F7C7C
	0x039F7C6C BL 0x3EB1AD0
	0x039F7C70 LDR X22, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9EB000
	006 Move X21, 0x75A000
	007 Move W8, [X20+3780]
	008 Move X21, [X21+1912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x75A000
	015 Move X0, [X0+1912]
	016 Call 0x1C17CF4
	017 Move X0, 0x75D000
	018 Move X0, [X0+2784]
	019 Call 0x1C17CF4
	020 Move X0, 0x75D000
	021 Move X0, [X0+2792]
	022 Call 0x1C17CF4
	023 Move X0, 0x6FD000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3780], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call DebugManager.get_instance
	035 Compare X0, 0
	036 JumpIfEqual {91}
	037 Move X1, X31
	038 Call DebugManager.GetState, X0
	039 Move W8, [X19+32]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X19
	042 Call DebugUIHandlerCanvas.ResetAllHierarchy, X0
	043 Move X0, X19
	044 Call DebugUIHandlerCanvas.HandleInput, X0
	045 Move X0, [X19+64]
	046 Compare X0, 0
	047 JumpIfEqual {86}
	048 Move W1, [X19+72]
	049 Move W8, [X0+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X21, 0x75D000
	052 Move X21, [X21+2792]
	053 Move X2, [X21]
	054 Call List`1<Object>.get_Item, X0, X1
	055 Move X8, 0x6FD000
	056 Move X8, [X8+1432]
	057 Move X20, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X20
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {86}
	072 Move X0, [X19+64]
	073 Compare X0, 0
	074 JumpIfEqual {91}
	075 Move W1, [X19+72]
	076 Move X2, [X21]
	077 Call List`1<Object>.get_Item, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {91}
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Call DebugUIHandlerPanel.UpdateScroll, X0
	085 Return 
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return 
	091 Call 0x1C17F20

Method: System.Void RequestHierarchyReset()

Disassembly:
	0x039F830C LDR X2, [X22]
	0x039F8310 BL 0x301BCCC
	0x039F8314 CBZ X0, 0x39F83BC

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+32], W8
	005 Return 

Method: System.Void ResetAllHierarchy()

Disassembly:
	0x039F7C74 BL 0x3EB1AE0
	0x039F7C78 B 0x39F7A5C
	0x039F7C7C MOV X19, X0
	0x039F7C80 MOV X22, X31
	0x039F7C84 B 0x39F7C8C
	0x039F7C88 MOV X19, X0
	0x039F7C8C CBZ X20, 0x39F7CF0
	0x039F7C90 LDR X8, [X20]
	0x039F7C94 ADRP X10, 0x6FC000
	0x039F7C98 LDRH W9, [X8 + 0x12E]
	0x039F7C9C LDR X10, [X10 + 0xE00]
	0x039F7CA0 LDR X1, [X10]
	0x039F7CA4 CBZ X9, 0x39F7CC8
	0x039F7CA8 LDR X10, [X8 + 0xB0]
	0x039F7CAC ADD X10, X10, 0x8
	0x039F7CB0 LDUR X11, [X10 - 0x8]
	0x039F7CB4 CMP X11, X1
	0x039F7CB8 B.EQ 0x39F7CD8
	0x039F7CBC SUBS X9, X9, 0x1
	0x039F7CC0 ADD X10, X10, 0x10
	0x039F7CC4 B.NE 0x39F7CB0
	0x039F7CC8 MOV X0, X20
	0x039F7CCC MOV W2, W31
	0x039F7CD0 BL 0x1C5C788
	0x039F7CD4 B 0x39F7CE4
	0x039F7CD8 LDRSW X9, [X10]
	0x039F7CDC ADD X8, X8, X9, 0x4, LSL
	0x039F7CE0 ADD X0, X8, 0x138
	0x039F7CE4 LDP X8, X1, [X0]
	0x039F7CE8 MOV X0, X20
	0x039F7CEC BLR X8
	0x039F7CF0 CBNZ X22, 0x39F7CFC
	0x039F7CF4 MOV X0, X19
	0x039F7CF8 BL 0x1D2C690
	0x039F7CFC MOV X0, X22
	0x039F7D00 BL 0x1C16F18
	0x039F7D04 BL 0x1990590
	0x039F7D08 STR X30, [X31 - 0x10]!
	0x039F7D0C STR X1, [X0 + 0x60]
	0x039F7D10 CBZ X1, 0x39F7D34
	0x039F7D14 LDR X0, [X0 + 0x20]
	0x039F7D18 CBZ X0, 0x39F7D34
	0x039F7D1C LDR X8, [X0]
	0x039F7D20 LDR X1, [X1 + 0x18]
	0x039F7D24 LDR X3, [X8 + 0x5E8]
	0x039F7D28 LDR X2, [X8 + 0x5F0]
	0x039F7D2C LDR X30, [X31], #0x10
	0x039F7D30 BR X3
	0x039F7D34 BL 0x1C16F20
	0x039F7D38 SUB X31, X31, 0x90
	0x039F7D3C STP X29, X30, [X31 + 0x30]
	0x039F7D40 STP X28, X27, [X31 + 0x40]
	0x039F7D44 STP X26, X25, [X31 + 0x50]
	0x039F7D48 STP X24, X23, [X31 + 0x60]
	0x039F7D4C STP X22, X21, [X31 + 0x70]
	0x039F7D50 STP X20, X19, [X31 + 0x80]
	0x039F7D54 ADRP X19, 0x9EA000
	0x039F7D58 LDRB W8, [X19 + 0xEC7]
	0x039F7D5C MOV X22, X1
	0x039F7D60 STP X4, X3, [X31]
	0x039F7D64 STP X2, X0, [X31 + 0x18]
	0x039F7D68 TBNZ X8, 0x0, 0x39F7DF8
	0x039F7D6C ADRP X0, 0x6FC000
	0x039F7D70 LDR X0, [X0 + 0xA28]
	0x039F7D74 BL 0x1C16CF4
	0x039F7D78 ADRP X0, 0x75C000
	0x039F7D7C LDR X0, [X0 + 0xB88]
	0x039F7D80 BL 0x1C16CF4
	0x039F7D84 ADRP X0, 0x75C000
	0x039F7D88 LDR X0, [X0 + 0xB30]
	0x039F7D8C BL 0x1C16CF4
	0x039F7D90 ADRP X0, 0x75C000
	0x039F7D94 LDR X0, [X0 + 0xB90]
	0x039F7D98 BL 0x1C16CF4
	0x039F7D9C ADRP X0, 0x75A000
	0x039F7DA0 LDR X0, [X0 + 0xB58]
	0x039F7DA4 BL 0x1C16CF4
	0x039F7DA8 ADRP X0, 0x75C000
	0x039F7DAC LDR X0, [X0 + 0xB68]
	0x039F7DB0 BL 0x1C16CF4
	0x039F7DB4 ADRP X0, 0x6FC000
	0x039F7DB8 LDR X0, [X0 + 0x598]
	0x039F7DBC BL 0x1C16CF4
	0x039F7DC0 ADRP X0, 0x75A000
	0x039F7DC4 LDR X0, [X0 + 0xBC0]
	0x039F7DC8 BL 0x1C16CF4
	0x039F7DCC ADRP X0, 0x75A000
	0x039F7DD0 LDR X0, [X0 + 0xBC8]
	0x039F7DD4 BL 0x1C16CF4
	0x039F7DD8 ADRP X0, 0x75C000
	0x039F7DDC LDR X0, [X0 + 0xB98]
	0x039F7DE0 BL 0x1C16CF4
	0x039F7DE4 ADRP X0, 0x75C000
	0x039F7DE8 LDR X0, [X0 + 0xBA0]
	0x039F7DEC BL 0x1C16CF4
	0x039F7DF0 MOVZ W8, 0x1
	0x039F7DF4 STRB W8, [X19 + 0xEC7]
	0x039F7DF8 STR X31, [X31 + 0x28]
	0x039F7DFC CBZ X22, 0x39F81C0
	0x039F7E00 STR X31, [X31 + 0x10]
	0x039F7E04 ADRP X20, 0x75A000
	0x039F7E08 ADRP X21, 0x75A000
	0x039F7E0C ADRP X26, 0x75A000
	0x039F7E10 ADRP X27, 0x75C000
	0x039F7E14 LDR X20, [X20 + 0xB58]
	0x039F7E18 LDR X21, [X21 + 0xBC0]
	0x039F7E1C LDR X26, [X26 + 0xBC8]
	0x039F7E20 LDR X27, [X27 + 0xB88]
	0x039F7E24 MOV X23, X31
	0x039F7E28 MOV W24, W31
	0x039F7E2C MOV X25, X31
	0x039F7E30 LDR X8, [X22]
	0x039F7E34 LDR X1, [X20]
	0x039F7E38 LDRH W9, [X8 + 0x12E]
	0x039F7E3C CBZ X9, 0x39F7E60
	0x039F7E40 LDR X10, [X8 + 0xB0]
	0x039F7E44 ADD X10, X10, 0x8
	0x039F7E48 LDUR X11, [X10 - 0x8]
	0x039F7E4C CMP X11, X1
	0x039F7E50 B.EQ 0x39F7E70
	0x039F7E54 SUBS X9, X9, 0x1
	0x039F7E58 ADD X10, X10, 0x10
	0x039F7E5C B.NE 0x39F7E48
	0x039F7E60 MOV X0, X22
	0x039F7E64 MOV W2, W31
	0x039F7E68 BL 0x1C5C788
	0x039F7E6C B 0x39F7E7C
	0x039F7E70 LDRSW X9, [X10]
	0x039F7E74 ADD X8, X8, X9, 0x4, LSL
	0x039F7E78 ADD X0, X8, 0x138
	0x039F7E7C LDP X8, X1, [X0]
	0x039F7E80 MOV X0, X22
	0x039F7E84 BLR X8
	0x039F7E88 CBZ X0, 0x39F81C0
	0x039F7E8C LDR X1, [X21]
	0x039F7E90 BL 0x2497BA8
	0x039F7E94 CMP W24, W0
	0x039F7E98 B.GE 0x39F81A0
	0x039F7E9C LDR X8, [X22]
	0x039F7EA0 LDR X1, [X20]
	0x039F7EA4 LDRH W9, [X8 + 0x12E]
	0x039F7EA8 CBZ X9, 0x39F7ECC
	0x039F7EAC LDR X10, [X8 + 0xB0]
	0x039F7EB0 ADD X10, X10, 0x8
	0x039F7EB4 LDUR X11, [X10 - 0x8]
	0x039F7EB8 CMP X11, X1
	0x039F7EBC B.EQ 0x39F7EDC
	0x039F7EC0 SUBS X9, X9, 0x1
	0x039F7EC4 ADD X10, X10, 0x10
	0x039F7EC8 B.NE 0x39F7EB4
	0x039F7ECC MOV X0, X22
	0x039F7ED0 MOV W2, W31
	0x039F7ED4 BL 0x1C5C788
	0x039F7ED8 B 0x39F7EE8
	0x039F7EDC LDRSW X9, [X10]
	0x039F7EE0 ADD X8, X8, X9, 0x4, LSL
	0x039F7EE4 ADD X0, X8, 0x138
	0x039F7EE8 LDP X8, X1, [X0]
	0x039F7EEC MOV X0, X22
	0x039F7EF0 BLR X8
	0x039F7EF4 CBZ X0, 0x39F81C0
	0x039F7EF8 LDR X2, [X26]
	0x039F7EFC MOV W1, W24
	0x039F7F00 BL 0x2497990
	0x039F7F04 CBZ X0, 0x39F81C0
	0x039F7F08 MOV X1, X31
	0x039F7F0C MOV X28, X0
	0x039F7F10 BL 0x39AE6D0
	0x039F7F14 TBNZ X0, 0x0, 0x39F8198
	0x039F7F18 MOV X0, X28
	0x039F7F1C MOV X1, X31
	0x039F7F20 BL 0x39AE1C8
	0x039F7F24 TBNZ X0, 0x0, 0x39F8198
	0x039F7F28 LDR X8, [X31 + 0x20]
	0x039F7F2C MOV X0, X28
	0x039F7F30 MOV X1, X31
	0x039F7F34 LDR X19, [X8 + 0x28]
	0x039F7F38 BL 0x33BE520
	0x039F7F3C CBZ X19, 0x39F81C0
	0x039F7F40 LDR X3, [X27]
	0x039F7F44 MOV X1, X0
	0x039F7F48 ADD X2, X31, 0x28
	0x039F7F4C MOV X0, X19
	0x039F7F50 BL 0x2AA6B2C
	0x039F7F54 TBZ X0, 0x0, 0x39F8014
	0x039F7F58 ADRP X8, 0x6FC000
	0x039F7F5C LDR X8, [X8 + 0x598]
	0x039F7F60 LDR X19, [X31 + 0x28]
	0x039F7F64 LDR X0, [X8]
	0x039F7F68 LDR W8, [X0 + 0xE0]
	0x039F7F6C CBNZ W8, 0x39F7F74
	0x039F7F70 BL 0x1C16DFC
	0x039F7F74 ADRP X8, 0x75C000
	0x039F7F78 LDR X8, [X8 + 0xB68]
	0x039F7F7C LDR X1, [X31 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x9EB000
	010 Move W8, [X20+3781]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x725000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x6FD000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x6FD000
	023 Move X0, [X0+3608]
	024 Call 0x1C17CF4
	025 Move X0, 0x6FF000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3781], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call Component.get_transform, X0
	033 Compare X0, 0
	034 JumpIfEqual {160}
	035 Move X22, 0x6FD000
	036 Move X22, [X22+3584]
	037 Move X1, X31
	038 Call Transform.GetEnumerator, X0
	039 Move X20, X0
	040 Compare X0, 0
	041 JumpIfEqual {161}
	042 Move X23, 0x6FD000
	043 Move X24, 0x6FF000
	044 Move X25, 0x725000
	045 Move X23, [X23+3608]
	046 Move X24, [X24+1592]
	047 Move X25, [X25+2296]
	048 Move X8, [X20]
	049 Move X1, [X23]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X20
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X20
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {117}
	073 Move X8, [X20]
	074 Move X1, [X23]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X20
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X20
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X0, 0
	096 JumpIfEqual {159}
	097 Move X8, [X0]
	098 Move X1, [X24]
	099 Move W10, [X8+304]
	100 Move W9, [X1+304]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X8+200]
	103 Add X8, X8, X9
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X1, X31
	107 Call Component.get_gameObject, X0
	108 Move X21, X0
	109 Move X0, [X25]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X21
	115 Move X1, X31
	116 Call CoreUtils.Destroy, X0
	117 Move X21, X31
	118 Move X1, [X22]
	119 Move X0, X20
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {145}
	123 Move X8, [X0]
	124 Move X1, [X22]
	125 Move X20, X0
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X20
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X20
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Compare X21, 0
	146 JumpIfNotEqual {162}
	147 Move X0, X19
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X22, [X31+32]
	151 Move X21, [X31+40]
	152 Move X24, [X31+16]
	153 Move X23, [X31+24]
	154 Move X30, [X31+64]
	155 Move X25, [X31+72]
	156 Call DebugUIHandlerCanvas.Rebuild, X0
	157 Return 
	158 Call 0x1C181E0
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Move X0, X21
	163 Call 0x1C17F18
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Call 0x3EB2AD0
	166 Move X21, [X0]
	167 Call 0x3EB2AE0
	168 Move X19, X0
	169 Move X21, X31
	170 Move X19, X0
	171 Move X1, [X22]
	172 Move X0, X20
	173 Call 0x1C17E00
	174 Move X20, X0
	175 Compare X0, 0
	176 JumpIfEqual {198}
	177 Move X8, [X20]
	178 Move X1, [X22]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X20
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X20
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X21, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X19
	201 Call 0x1D2D690
	202 Move X0, X21
	203 Call 0x1C17F18
	204 Call 0x1991590

Method: System.Void Rebuild()

Disassembly:
	0x039F8318 MOV X1, X31
	0x039F831C BL 0x3C32ECC
	0x039F8320 CBZ X0, 0x39F83BC
	0x039F8324 ADRP X23, 0x6FB000
	0x039F8328 LDR X23, [X23 + 0x598]
	0x039F832C MOVZ W1, 0x1
	0x039F8330 MOV X2, X31
	0x039F8334 BL 0x3C357B4
	0x039F8338 STR W21, [X19 + 0x48]
	0x039F833C LDR X0, [X23]
	0x039F8340 LDR W8, [X0 + 0xE0]
	0x039F8344 CBNZ W8, 0x39F834C
	0x039F8348 BL 0x1C16DFC
	0x039F834C MOV X0, X20
	0x039F8350 MOV X1, X31
	0x039F8354 MOV X2, X31
	0x039F8358 BL 0x3C3883C
	0x039F835C TBZ X0, 0x0, 0x39F8380
	0x039F8360 LDR X0, [X19 + 0x40]
	0x039F8364 CBZ X0, 0x39F83BC
	0x039F8368 LDR X2, [X22]
	0x039F836C MOV W1, W21
	0x039F8370 BL 0x301BCCC
	0x039F8374 CBZ X0, 0x39F83BC
	0x039F8378 BL 0x39F850C
	0x039F837C MOV X20, X0
	0x039F8380 MOV X0, X19
	0x039F8384 MOV X1, X20
	0x039F8388 LDP X20, X19, [X31 + 0x40]
	0x039F838C LDP X22, X21, [X31 + 0x30]
	0x039F8390 LDP X24, X23, [X31 + 0x20]
	0x039F8394 LDP X26, X25, [X31 + 0x10]
	0x039F8398 MOVZ W2, 0x1
	0x039F839C LDR X30, [X31], #0x50
	0x039F83A0 B 0x39F8560
	0x039F83A4 LDP X20, X19, [X31 + 0x40]
	0x039F83A8 LDP X22, X21, [X31 + 0x30]
	0x039F83AC LDP X24, X23, [X31 + 0x20]
	0x039F83B0 LDP X26, X25, [X31 + 0x10]
	0x039F83B4 LDR X30, [X31], #0x50
	0x039F83B8 RET
	0x039F83BC BL 0x1C16F20
	0x039F83C0 STR X30, [X31 - 0x30]!
	0x039F83C4 STP X22, X21, [X31 + 0x10]
	0x039F83C8 STP X20, X19, [X31 + 0x20]
	0x039F83CC ADRP X20, 0x9E9000
	0x039F83D0 ADRP X22, 0x75B000
	0x039F83D4 LDRB W8, [X20 + 0xEC8]
	0x039F83D8 LDR X22, [X22 + 0xBC0]
	0x039F83DC MOV X21, X1
	0x039F83E0 MOV X19, X0
	0x039F83E4 TBNZ X8, 0x0, 0x39F8438
	0x039F83E8 ADRP X0, 0x75B000
	0x039F83EC LDR X0, [X0 + 0xBC8]
	0x039F83F0 BL 0x1C16CF4
	0x039F83F4 ADRP X0, 0x75B000
	0x039F83F8 LDR X0, [X0 + 0xBD0]
	0x039F83FC BL 0x1C16CF4
	0x039F8400 ADRP X0, 0x75B000
	0x039F8404 LDR X0, [X0 + 0xA88]
	0x039F8408 BL 0x1C16CF4
	0x039F840C ADRP X0, 0x75B000
	0x039F8410 LDR X0, [X0 + 0xAE8]
	0x039F8414 BL 0x1C16CF4
	0x039F8418 ADRP X0, 0x75B000
	0x039F841C LDR X0, [X0 + 0xBD8]
	0x039F8420 BL 0x1C16CF4
	0x039F8424 ADRP X0, 0x75B000
	0x039F8428 LDR X0, [X0 + 0xBC0]
	0x039F842C BL 0x1C16CF4
	0x039F8430 MOVZ W8, 0x1
	0x039F8434 STRB W8, [X20 + 0xEC8]
	0x039F8438 LDR X0, [X22]
	0x039F843C BL 0x1C16F10
	0x039F8440 MOV X1, X31
	0x039F8444 MOV X20, X0
	0x039F8448 BL 0x33BDD8C
	0x039F844C CBZ X20, 0x39F8500
	0x039F8450 MOV X0, X21
	0x039F8454 MOV X1, X31
	0x039F8458 STR X21, [X20 + 0x10]
	0x039F845C BL 0x32277A8
	0x039F8460 TBZ X0, 0x0, 0x39F8478
	0x039F8464 LDP X20, X19, [X31 + 0x20]
	0x039F8468 LDP X22, X21, [X31 + 0x10]
	0x039F846C MOV X0, X31
	0x039F8470 LDR X30, [X31], #0x30
	0x039F8474 RET
	0x039F8478 LDR X0, [X19 + 0x40]
	0x039F847C CBZ X0, 0x39F8500
	0x039F8480 ADRP X8, 0x75B000
	0x039F8484 LDR W1, [X19 + 0x48]
	0x039F8488 LDR X8, [X8 + 0xAE8]
	0x039F848C LDR X2, [X8]
	0x039F8490 BL 0x301BCCC
	0x039F8494 CBZ X0, 0x39F8500
	0x039F8498 ADRP X8, 0x75B000
	0x039F849C LDR X8, [X8 + 0xBC8]
	0x039F84A0 LDR X1, [X8]
	0x039F84A4 BL 0x21A453C
	0x039F84A8 ADRP X8, 0x75B000
	0x039F84AC LDR X8, [X8 + 0xA88]
	0x039F84B0 MOV X19, X0
	0x039F84B4 LDR X8, [X8]
	0x039F84B8 MOV X0, X8
	0x039F84BC BL 0x1C16F10
	0x039F84C0 ADRP X8, 0x75B000
	0x039F84C4 LDR X8, [X8 + 0xBD8]
	0x039F84C8 MOV X1, X20
	0x039F84CC MOV X3, X31
	0x039F84D0 MOV X21, X0
	0x039F84D4 LDR X2, [X8]
	0x039F84D8 BL 0x2D2F428
	0x039F84DC ADRP X8, 0x75B000
	0x039F84E0 LDR X8, [X8 + 0xBD0]
	0x039F84E4 MOV X0, X19
	0x039F84E8 MOV X1, X21
	0x039F84EC LDP X20, X19, [X31 + 0x20]
	0x039F84F0 LDR X2, [X8]
	0x039F84F4 LDP X22, X21, [X31 + 0x10]
	0x039F84F8 LDR X30, [X31], #0x30
	0x039F84FC B 0x21C570C
	0x039F8500 BL 0x1C16F20
	0x039F8504 MOV X1, X31
	0x039F8508 B 0x33BDD8C
	0x039F850C STP X30, X21, [X31 - 0x20]!
	0x039F8510 STP X20, X19, [X31 + 0x10]
	0x039F8514 ADRP X20, 0x9E9000
	0x039F8518 ADRP X21, 0x75B000
	0x039F851C LDRB W8, [X20 + 0xF09]
	0x039F8520 LDR X21, [X21 + 0x9E8]
	0x039F8524 MOV X19, X0
	0x039F8528 TBNZ X8, 0x0, 0x39F8540
	0x039F852C ADRP X0, 0x75B000
	0x039F8530 LDR X0, [X0 + 0x9E8]
	0x039F8534 BL 0x1C16CF4
	0x039F8538 MOVZ W8, 0x1
	0x039F853C STRB W8, [X20 + 0xF09]
	0x039F8540 LDR X1, [X21]
	0x039F8544 MOV X0, X19
	0x039F8548 BL 0x21A3894
	0x039F854C CBZ X0, 0x39F855C
	0x039F8550 LDP X20, X19, [X31 + 0x10]
	0x039F8554 LDP X30, X21, [X31], #0x20
	0x039F8558 B 0x39F6800
	0x039F855C BL 0x1C16F20
	0x039F8560 STP X30, X23, [X31 - 0x30]!
	0x039F8564 STP X22, X21, [X31 + 0x10]
	0x039F8568 STP X20, X19, [X31 + 0x20]
	0x039F856C ADRP X22, 0x9E9000
	0x039F8570 ADRP X23, 0x6FB000
	0x039F8574 LDRB W8, [X22 + 0xECA]
	0x039F8578 LDR X23, [X23 + 0x598]
	0x039F857C MOV W20, W2
	0x039F8580 MOV X21, X1
	0x039F8584 MOV X19, X0
	0x039F8588 TBNZ X8, 0x0, 0x39F85AC
	0x039F858C ADRP X0, 0x6FB000
	0x039F8590 LDR X0, [X0 + 0x598]
	0x039F8594 BL 0x1C16CF4
	0x039F8598 ADRP X0, 0x6FD000
	0x039F859C LDR X0, [X0 + 0x278]
	0x039F85A0 BL 0x1C16CF4
	0x039F85A4 MOVZ W8, 0x1
	0x039F85A8 STRB W8, [X22 + 0xECA]
	0x039F85AC LDR X0, [X23]
	0x039F85B0 LDR W8, [X0 + 0xE0]
	0x039F85B4 CBNZ W8, 0x39F85BC
	0x039F85B8 BL 0x1C16DFC
	0x039F85BC MOV X0, X21
	0x039F85C0 MOV X1, X31
	0x039F85C4 MOV X2, X31
	0x039F85C8 BL 0x3C3883C
	0x039F85CC TBNZ X0, 0x0, 0x39F86B0
	0x039F85D0 LDR X0, [X23]
	0x039F85D4 LDR X22, [X19 + 0x50]
	0x039F85D8 LDR W8, [X0 + 0xE0]
	0x039F85DC CBNZ W8, 0x39F85E4
	0x039F85E0 BL 0x1C16DFC
	0x039F85E4 MOV X0, X22
	0x039F85E8 MOV X1, X31
	0x039F85EC MOV X2, X31
	0x039F85F0 BL 0x3C354F8
	0x039F85F4 TBZ X0, 0x0, 0x39F860C
	0x039F85F8 LDR X0, [X19 + 0x50]
	0x039F85FC CBZ X0, 0x39F86D0
	0x039F8600 LDR X8, [X0]
	0x039F8604 LDP X9, X1, [X8 + 0x1A8]
	0x039F8608 BLR X9
	0x039F860C LDR X22, [X19 + 0x50]
	0x039F8610 MOV X0, X19
	0x039F8614 MOV X1, X21
	0x039F8618 STR X21, [X19 + 0x50]
	0x039F861C BL 0x39F86D4
	0x039F8620 LDR X0, [X19 + 0x50]
	0x039F8624 CBZ X0, 0x39F86D0
	0x039F8628 LDR X8, [X0]
	0x039F862C AND W1, W20, 0x1
	0x039F8630 MOV X2, X22
	0x039F8634 LDP X9, X3, [X8 + 0x198]
	0x039F8638 BLR X9
	0x039F863C TBZ X0, 0x0, 0x39F8680
	0x039F8640 LDR X0, [X23]
	0x039F8644 LDR X20, [X19 + 0x50]
	0x039F8648 LDR W8, [X0 + 0xE0]
	0x039F864C CBNZ W8, 0x39F8654
	0x039F8650 BL 0x1C16DFC
	0x039F8654 MOV X0, X20
	0x039F8658 MOV X1, X31
	0x039F865C MOV X2, X31
	0x039F8660 BL 0x3C3883C
	0x039F8664 TBNZ X0, 0x0, 0x39F8698
	0x039F8668 LDR X8, [X19 + 0x50]
	0x039F866C CBZ X8, 0x39F86D0
	0x039F8670 LDR X8, [X8 + 0x58]
	0x039F8674 CBZ X8, 0x39F8698
	0x039F8678 LDR X8, [X8 + 0x38]
	0x039F867C B 0x39F86AC
	0x039F8680 MOV X0, X19
	0x039F8684 TBZ X20, 0x0, 0x39F86C0
	0x039F8688 LDP X20, X19, [X31 + 0x20]
	0x039F868C LDP X22, X21, [X31 + 0x10]
	0x039F8690 LDP X30, X23, [X31], #0x30
	0x039F8694 B 0x39F87AC
	0x039F8698 ADRP X8, 0x6FD000
	0x039F869C LDR X8, [X8 + 0x278]
	0x039F86A0 LDR X8, [X8]
	0x039F86A4 LDR X8, [X8 + 0xB8]
	0x039F86A8 LDR X8, [X8]
	0x039F86AC STR X8, [X19 + 0x58]
	0x039F86B0 LDP X20, X19, [X31 + 0x20]
	0x039F86B4 LDP X22, X21, [X31 + 0x10]
	0x039F86B8 LDP X30, X23, [X31], #0x30
	0x039F86BC RET
	0x039F86C0 LDP X20, X19, [X31 + 0x20]
	0x039F86C4 LDP X22, X21, [X31 + 0x10]
	0x039F86C8 LDP X30, X23, [X31], #0x30
	0x039F86CC B 0x39F8870
	0x039F86D0 BL 0x1C16F20
	0x039F86D4 STR X30, [X31 - 0x30]!
	0x039F86D8 STP X22, X21, [X31 + 0x10]
	0x039F86DC STP X20, X19, [X31 + 0x20]
	0x039F86E0 ADRP X21, 0x9E9000
	0x039F86E4 LDRB W8, [X21 + 0xED2]
	0x039F86E8 MOV X19, X1
	0x039F86EC MOV X20, X0
	0x039F86F0 TBNZ X8, 0x0, 0x39F8720
	0x039F86F4 ADRP X0, 0x75B000
	0x039F86F8 LDR X0, [X0 + 0xAE0]
	0x039F86FC BL 0x1C16CF4
	0x039F8700 ADRP X0, 0x75B000
	0x039F8704 LDR X0, [X0 + 0xAE8]
	0x039F8708 BL 0x1C16CF4
	0x039F870C ADRP X0, 0x6FB000
	0x039F8710 LDR X0, [X0 + 0x598]
	0x039F8714 BL 0x1C16CF4
	0x039F8718 MOVZ W8, 0x1
	0x039F871C STRB W8, [X21 + 0xED2]
	0x039F8720 LDR X0, [X20 + 0x40]
	0x039F8724 CBZ X0, 0x39F8798
	0x039F8728 LDR W1, [X20 + 0x48]
	0x039F872C LDR W8, [X0 + 0x18]
	0x039F8730 CMP W1, W8
	0x039F8734 B.GE 0x39F8798
	0x039F8738 ADRP X22, 0x75B000
	0x039F873C LDR X22, [X22 + 0xAE8]
	0x039F8740 LDR X2, [X22]
	0x039F8744 BL 0x301BCCC
	0x039F8748 ADRP X8, 0x6FB000
	0x039F874C LDR X8, [X8 + 0x598]
	0x039F8750 MOV X21, X0
	0x039F8754 LDR X8, [X8]
	0x039F8758 LDR W9, [X8 + 0xE0]
	0x039F875C CBNZ W9, 0x39F8768
	0x039F8760 MOV X0, X8
	0x039F8764 BL 0x1C16DFC
	0x039F8768 MOV X0, X21
	0x039F876C MOV X1, X31
	0x039F8770 MOV X2, X31
	0x039F8774 BL 0x3C354F8
	0x039F8778 TBZ X0, 0x0, 0x39F8798
	0x039F877C LDR X0, [X20 + 0x40]
	0x039F8780 CBZ X0, 0x39F87A8
	0x039F8784 LDR W1, [X20 + 0x48]
	0x039F8788 LDR X2, [X22]
	0x039F878C BL 0x301BCCC
	0x039F8790 CBZ X0, 0x39F87A8
	0x039F8794 STR X19, [X0 + 0x58]
	0x039F8798 LDP X20, X19, [X31 + 0x20]
	0x039F879C LDP X22, X21, [X31 + 0x10]
	0x039F87A0 LDR X30, [X31], #0x30
	0x039F87A4 RET
	0x039F87A8 BL 0x1C16F20
	0x039F87AC STP X30, X21, [X31 - 0x20]!
	0x039F87B0 STP X20, X19, [X31 + 0x10]
	0x039F87B4 ADRP X20, 0x9E9000
	0x039F87B8 ADRP X21, 0x6FB000
	0x039F87BC LDRB W8, [X20 + 0xECE]
	0x039F87C0 LDR X21, [X21 + 0x598]
	0x039F87C4 MOV X19, X0
	0x039F87C8 TBNZ X8, 0x0, 0x39F87E0
	0x039F87CC ADRP X0, 0x6FB000
	0x039F87D0 LDR X0, [X0 + 0x598]
	0x039F87D4 BL 0x1C16CF4
	0x039F87D8 MOVZ W8, 0x1
	0x039F87DC STRB W8, [X20 + 0xECE]
	0x039F87E0 LDR X0, [X21]
	0x039F87E4 LDR X20, [X19 + 0x50]
	0x039F87E8 LDR W8, [X0 + 0xE0]
	0x039F87EC CBNZ W8, 0x39F87F4
	0x039F87F0 BL 0x1C16DFC
	0x039F87F4 MOV X0, X20
	0x039F87F8 MOV X1, X31
	0x039F87FC MOV X2, X31
	0x039F8800 BL 0x3C3883C
	0x039F8804 TBNZ X0, 0x0, 0x39F8860
	0x039F8808 LDR X0, [X19 + 0x50]
	0x039F880C CBZ X0, 0x39F886C
	0x039F8810 LDR X8, [X0]
	0x039F8814 LDP X9, X1, [X8 + 0x1F8]
	0x039F8818 BLR X9
	0x039F881C LDR X8, [X21]
	0x039F8820 MOV X20, X0
	0x039F8824 LDR W9, [X8 + 0xE0]
	0x039F8828 CBNZ W9, 0x39F8834
	0x039F882C MOV X0, X8
	0x039F8830 BL 0x1C16DFC
	0x039F8834 MOV X0, X20
	0x039F8838 MOV X1, X31
	0x039F883C MOV X2, X31
	0x039F8840 BL 0x3C354F8
	0x039F8844 TBZ X0, 0x0, 0x39F8860
	0x039F8848 MOV X0, X19
	0x039F884C MOV X1, X20
	0x039F8850 LDP X20, X19, [X31 + 0x10]
	0x039F8854 MOVZ W2, 0x1
	0x039F8858 LDP X30, X21, [X31], #0x20
	0x039F885C B 0x39F8560
	0x039F8860 LDP X20, X19, [X31 + 0x10]
	0x039F8864 LDP X30, X21, [X31], #0x20
	0x039F8868 RET
	0x039F886C BL 0x1C16F20
	0x039F8870 STP X30, X21, [X31 - 0x20]!
	0x039F8874 STP X20, X19, [X31 + 0x10]
	0x039F8878 ADRP X20, 0x9E9000
	0x039F887C ADRP X21, 0x6FB000
	0x039F8880 LDRB W8, [X20 + 0xECB]
	0x039F8884 LDR X21, [X21 + 0x598]
	0x039F8888 MOV X19, X0
	0x039F888C TBNZ X8, 0x0, 0x39F88A4
	0x039F8890 ADRP X0, 0x6FB000
	0x039F8894 LDR X0, [X0 + 0x598]
	0x039F8898 BL 0x1C16CF4
	0x039F889C MOVZ W8, 0x1
	0x039F88A0 STRB W8, [X20 + 0xECB]
	0x039F88A4 LDR X0, [X21]
	0x039F88A8 LDR X20, [X19 + 0x50]
	0x039F88AC LDR W8, [X0 + 0xE0]
	0x039F88B0 CBNZ W8, 0x39F88B8
	0x039F88B4 BL 0x1C16DFC
	0x039F88B8 MOV X0, X20
	0x039F88BC MOV X1, X31
	0x039F88C0 MOV X2, X31
	0x039F88C4 BL 0x3C3883C
	0x039F88C8 TBNZ X0, 0x0, 0x39F8924
	0x039F88CC LDR X0, [X19 + 0x50]
	0x039F88D0 CBZ X0, 0x39F8930
	0x039F88D4 LDR X8, [X0]
	0x039F88D8 LDP X9, X1, [X8 + 0x1E8]
	0x039F88DC BLR X9
	0x039F88E0 LDR X8, [X21]
	0x039F88E4 MOV X20, X0
	0x039F88E8 LDR W9, [X8 + 0xE0]
	0x039F88EC CBNZ W9, 0x39F88F8
	0x039F88F0 MOV X0, X8
	0x039F88F4 BL 0x1C16DFC
	0x039F88F8 MOV X0, X20
	0x039F88FC MOV X1, X31
	0x039F8900 MOV X2, X31
	0x039F8904 BL 0x3C354F8
	0x039F8908 TBZ X0, 0x0, 0x39F8924
	0x039F890C MOV X0, X19
	0x039F8910 MOV X1, X20
	0x039F8914 LDP X20, X19, [X31 + 0x10]
	0x039F8918 MOV W2, W31
	0x039F891C LDP X30, X21, [X31], #0x20
	0x039F8920 B 0x39F8560
	0x039F8924 LDP X20, X19, [X31 + 0x10]
	0x039F8928 LDP X30, X21, [X31], #0x20
	0x039F892C RET
	0x039F8930 BL 0x1C16F20
	0x039F8934 STR X30, [X31 - 0x20]!
	0x039F8938 STP X20, X19, [X31 + 0x10]
	0x039F893C ADRP X20, 0x9E9000
	0x039F8940 LDRB W8, [X20 + 0xECC]
	0x039F8944 MOV X19, X0
	0x039F8948 TBNZ X8, 0x0, 0x39F8960
	0x039F894C ADRP X0, 0x75B000
	0x039F8950 LDR X0, [X0 + 0xAE0]
	0x039F8954 BL 0x1C16CF4
	0x039F8958 MOVZ W8, 0x1
	0x039F895C STRB W8, [X20 + 0xECC]
	0x039F8960 LDR X8, [X19 + 0x40]
	0x039F8964 CBZ X8, 0x39F89A4
	0x039F8968 LDR W9, [X19 + 0x48]
	0x039F896C LDR W8, [X8 + 0x18]
	0x039F8970 MOV X0, X19
	0x039F8974 LDP X20, X19, [X31 + 0x10]
	0x039F8978 ADD W9, W9, 0x1
	0x039F897C CMP W9, W8
	0x039F8980 SUB W10, W8, 0x1
	0x039F8984 CSEL W8, W9, W31, LT
	0x039F8988 CMP W8, W10
	0x039F898C CSEL W9, W10, W8, GT
	0x039F8990 CMP W8, 0x0
	0x039F8994 CSEL W1, W31, W9, LT
	0x039F8998 MOV X2, X31
	0x039F899C LDR X30, [X31], #0x20
	0x039F89A0 B 0x39F81C4
	0x039F89A4 BL 0x1C16F20
	0x039F89A8 STR X30, [X31 - 0x20]!
	0x039F89AC STP X20, X19, [X31 + 0x10]
	0x039F89B0 ADRP X20, 0x9E9000
	0x039F89B4 LDRB W8, [X20 + 0xECD]
	0x039F89B8 MOV X19, X0
	0x039F89BC TBNZ X8, 0x0, 0x39F89D4
	0x039F89C0 ADRP X0, 0x75B000
	0x039F89C4 LDR X0, [X0 + 0xAE0]
	0x039F89C8 BL 0x1C16CF4
	0x039F89CC MOVZ W8, 0x1
	0x039F89D0 STRB W8, [X20 + 0xECD]
	0x039F89D4 LDR W9, [X19 + 0x48]
	0x039F89D8 LDR X8, [X19 + 0x40]
	0x039F89DC SUBS W9, W9, 0x1
	0x039F89E0 B.MI 0x39F89EC
	0x039F89E4 CBNZ X8, 0x39F89F8
	0x039F89E8 B 0x39F8A24
	0x039F89EC CBZ X8, 0x39F8A24
	0x039F89F0 LDR W9, [X8 + 0x18]
	0x039F89F4 SUB W9, W9, 0x1
	0x039F89F8 LDR W8, [X8 + 0x18]
	0x039F89FC MOV X0, X19
	0x039F8A00 LDP X20, X19, [X31 + 0x10]
	0x039F8A04 MOV X2, X31
	0x039F8A08 SUB W8, W8, 0x1
	0x039F8A0C CMP W9, W8
	0x039F8A10 CSEL W8, W8, W9, GT
	0x039F8A14 CMP W9, 0x0
	0x039F8A18 CSEL W1, W31, W8, LT
	0x039F8A1C LDR X30, [X31], #0x20
	0x039F8A20 B 0x39F81C4
	0x039F8A24 BL 0x1C16F20
	0x039F8A28 STR D8, [X31 - 0x30]!
	0x039F8A2C STP X30, X21, [X31 + 0x10]
	0x039F8A30 STP X20, X19, [X31 + 0x20]
	0x039F8A34 ADRP X21, 0x9E9000
	0x039F8A38 ADRP X20, 0x6FB000
	0x039F8A3C LDRB W8, [X21 + 0xECF]
	0x039F8A40 LDR X20, [X20 + 0x598]
	0x039F8A44 MOV V8.16B, V0.16B
	0x039F8A48 MOV X19, X0
	0x039F8A4C TBNZ X8, 0x0, 0x39F8A70
	0x039F8A50 ADRP X0, 0x758000
	0x039F8A54 LDR X0, [X0 + 0x778]
	0x039F8A58 BL 0x1C16CF4
	0x039F8A5C ADRP X0, 0x6FB000
	0x039F8A60 LDR X0, [X0 + 0x598]
	0x039F8A64 BL 0x1C16CF4
	0x039F8A68 MOVZ W8, 0x1
	0x039F8A6C STRB W8, [X21 + 0xECF]
	0x039F8A70 LDR X0, [X20]
	0x039F8A74 LDR X20, [X19 + 0x50]
	0x039F8A78 LDR W8, [X0 + 0xE0]
	0x039F8A7C CBNZ W8, 0x39F8A84
	0x039F8A80 BL 0x1C16DFC
	0x039F8A84 MOV X0, X20
	0x039F8A88 MOV X1, X31
	0x039F8A8C MOV X2, X31
	0x039F8A90 BL 0x3C3883C
	0x039F8A94 TBZ X0, 0x0, 0x39F8AA8
	0x039F8A98 LDP X20, X19, [X31 + 0x20]
	0x039F8A9C LDP X30, X21, [X31 + 0x10]
	0x039F8AA0 LDR V8, [X31], #0x30
	0x039F8AA4 RET
	0x039F8AA8 ADRP X8, 0x758000
	0x039F8AAC LDR X8, [X8 + 0x778]
	0x039F8AB0 LDR X0, [X8]
	0x039F8AB4 LDR W8, [X0 + 0xE0]
	0x039F8AB8 CBNZ W8, 0x39F8AC0
	0x039F8ABC BL 0x1C16DFC
	0x039F8AC0 MOV X0, X31
	0x039F8AC4 BL 0x399C120
	0x039F8AC8 CBZ X0, 0x39F8B10
	0x039F8ACC MOVZ W1, 0x7
	0x039F8AD0 MOV X2, X31
	0x039F8AD4 BL 0x39A82AC
	0x039F8AD8 LDR X0, [X19 + 0x50]
	0x039F8ADC CBZ X0, 0x39F8B10
	0x039F8AE0 LDR X8, [X0]
	0x039F8AE4 FCMP S8, 0x0
	0x039F8AE8 B.PL 0x39F8AF4
	0x039F8AEC LDP X3, X2, [X8 + 0x1D8]
	0x039F8AF0 B 0x39F8AF8
	0x039F8AF4 LDP X3, X2, [X8 + 0x1C8]
	0x039F8AF8 LDP X20, X19, [X31 + 0x20]
	0x039F8AFC LDP X30, X21, [X31 + 0x10]
	0x039F8B00 FCMP S0, 0x0
	0x039F8B04 CSET W1, NE
	0x039F8B08 LDR V8, [X31], #0x30
	0x039F8B0C BR X3
	0x039F8B10 BL 0x1C16F20
	0x039F8B14 STP X30, X21, [X31 - 0x20]!
	0x039F8B18 STP X20, X19, [X31 + 0x10]
	0x039F8B1C ADRP X21, 0x9E9000
	0x039F8B20 ADRP X20, 0x6FB000
	0x039F8B24 LDRB W8, [X21 + 0xED0]
	0x039F8B28 LDR X20, [X20 + 0x598]
	0x039F8B2C MOV X19, X0
	0x039F8B30 TBNZ X8, 0x0, 0x39F8B48
	0x039F8B34 ADRP X0, 0x6FB000
	0x039F8B38 LDR X0, [X0 + 0x598]
	0x039F8B3C BL 0x1C16CF4
	0x039F8B40 MOVZ W8, 0x1
	0x039F8B44 STRB W8, [X21 + 0xED0]
	0x039F8B48 LDR X0, [X20]
	0x039F8B4C LDR X20, [X19 + 0x50]
	0x039F8B50 LDR W8, [X0 + 0xE0]
	0x039F8B54 CBNZ W8, 0x39F8B5C
	0x039F8B58 BL 0x1C16DFC
	0x039F8B5C MOV X0, X20
	0x039F8B60 MOV X1, X31
	0x039F8B64 MOV X2, X31
	0x039F8B68 BL 0x3C3883C
	0x039F8B6C TBZ X0, 0x0, 0x39F8B7C
	0x039F8B70 LDP X20, X19, [X31 + 0x10]
	0x039F8B74 LDP X30, X21, [X31], #0x20
	0x039F8B78 RET
	0x039F8B7C LDR X0, [X19 + 0x50]
	0x039F8B80 CBZ X0, 0x39F8B98
	0x039F8B84 LDR X8, [X0]
	0x039F8B88 LDP X20, X19, [X31 + 0x10]
	0x039F8B8C LDP X2, X1, [X8 + 0x1B8]
	0x039F8B90 LDP X30, X21, [X31], #0x20
	0x039F8B94 BR X2
	0x039F8B98 BL 0x1C16F20
	0x039F8B9C MOV X1, X31
	0x039F8BA0 B 0x3C36C30
	0x039F8BA4 STR X30, [X31 - 0x20]!
	0x039F8BA8 STP X20, X19, [X31 + 0x10]
	0x039F8BAC ADRP X19, 0x9E9000
	0x039F8BB0 ADRP X20, 0x75B000
	0x039F8BB4 LDRB W8, [X19 + 0xED3]
	0x039F8BB8 LDR X20, [X20 + 0xB80]
	0x039F8BBC TBNZ X8, 0x0, 0x39F8BD4
	0x039F8BC0 ADRP X0, 0x75B000
	0x039F8BC4 LDR X0, [X0 + 0xB80]
	0x039F8BC8 BL 0x1C16CF4
	0x039F8BCC MOVZ W8, 0x1
	0x039F8BD0 STRB W8, [X19 + 0xED3]
	0x039F8BD4 LDR X0, [X20]
	0x039F8BD8 BL 0x1C16F10
	0x039F8BDC MOV X1, X31
	0x039F8BE0 MOV X19, X0
	0x039F8BE4 BL 0x33BDD8C
	0x039F8BE8 LDR X8, [X20]
	0x039F8BEC LDR X8, [X8 + 0xB8]
	0x039F8BF0 STR X19, [X8]
	0x039F8BF4 LDP X20, X19, [X31 + 0x10]
	0x039F8BF8 LDR X30, [X31], #0x20
	0x039F8BFC RET
	0x039F8C00 MOV X1, X31
	0x039F8C04 B 0x33BDD8C
	0x039F8C08 STP X30, X19, [X31 - 0x10]!
	0x039F8C0C CBZ X1, 0x39F8C48
	0x039F8C10 MOV X19, X1
	0x039F8C14 MOV X0, X1
	0x039F8C18 MOV X1, X31
	0x039F8C1C BL 0x39AE6D0
	0x039F8C20 TBZ X0, 0x0, 0x39F8C2C
	0x039F8C24 MOV W8, W31
	0x039F8C28 B 0x39F8C3C
	0x039F8C2C MOV X0, X19
	0x039F8C30 MOV X1, X31
	0x039F8C34 BL 0x39AE1C8
	0x039F8C38 EOR W8, W0, 0x1
	0x039F8C3C AND W0, W8, 0x1
	0x039F8C40 LDP X30, X19, [X31], #0x10
	0x039F8C44 RET
	0x039F8C48 BL 0x1C16F20
	0x039F8C4C STR X30, [X31 - 0x10]!
	0x039F8C50 CBZ X1, 0x39F8C74
	0x039F8C54 MOV X0, X1
	0x039F8C58 MOV X1, X31
	0x039F8C5C BL 0x3C32ECC
	0x039F8C60 CBZ X0, 0x39F8C74
	0x039F8C64 MOV W1, W31
	0x039F8C68 MOV X2, X31
	0x039F8C6C LDR X30, [X31], #0x10
	0x039F8C70 B 0x3C357B4
	0x039F8C74 BL 0x1C16F20
	0x039F8C78 STR X30, [X31 - 0x10]!
	0x039F8C7C CBZ X1, 0x39F8CA0
	0x039F8C80 LDR X8, [X1 + 0x58]
	0x039F8C84 CBZ X8, 0x39F8CA0
	0x039F8C88 LDR X8, [X8 + 0x38]
	0x039F8C8C LDR X1, [X0 + 0x10]
	0x039F8C90 MOV X2, X31
	0x039F8C94 MOV X0, X8
	0x039F8C98 LDR X30, [X31], #0x10
	0x039F8C9C B 0x321BA08
	0x039F8CA0 BL 0x1C16F20
	0x039F8CA4 STP X30, X23, [X31 - 0x30]!
	0x039F8CA8 STP X22, X21, [X31 + 0x10]
	0x039F8CAC STP X20, X19, [X31 + 0x20]
	0x039F8CB0 ADRP X23, 0x9E9000
	0x039F8CB4 ADRP X22, 0x75B000
	0x039F8CB8 ADRP X21, 0x75B000
	0x039F8CBC LDRB W8, [X23 + 0xED4]
	0x039F8CC0 LDR X22, [X22 + 0xBE0]
	0x039F8CC4 LDR X21, [X21 + 0x9E8]
	0x039F8CC8 MOV X20, X1
	0x039F8CCC MOV X19, X0
	0x039F8CD0 TBNZ X8, 0x0, 0x39F8D6C
	0x039F8CD4 ADRP X0, 0x6FD000
	0x039F8CD8 LDR X0, [X0 + 0x5B0]
	0x039F8CDC BL 0x1C16CF4
	0x039F8CE0 ADRP X0, 0x75B000
	0x039F8CE4 LDR X0, [X0 + 0x9E8]
	0x039F8CE8 BL 0x1C16CF4
	0x039F8CEC ADRP X0, 0x75B000
	0x039F8CF0 LDR X0, [X0 + 0xBE8]
	0x039F8CF4 BL 0x1C16CF4
	0x039F8CF8 ADRP X0, 0x75B000
	0x039F8CFC LDR X0, [X0 + 0xBF0]
	0x039F8D00 BL 0x1C16CF4
	0x039F8D04 ADRP X0, 0x75B000

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+64], D12
	003 Move [X31+80], D11
	004 Move [X31+88], D10
	005 Move [X31+96], D9
	006 Move [X31+104], D8
	007 Move [X31+112], X29
	008 Move [X31+120], X30
	009 Move [X31+128], X28
	010 Move [X31+136], X27
	011 Move [X31+144], X26
	012 Move [X31+152], X25
	013 Move [X31+160], X24
	014 Move [X31+168], X23
	015 Move [X31+176], X22
	016 Move [X31+184], X21
	017 Move [X31+192], X20
	018 Move [X31+200], X19
	019 Move X20, 0x9EA000
	020 Move W8, [X20+3782]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {109}
	026 Move X0, 0x752000
	027 Move X0, [X0+1712]
	028 Call 0x1C17CF4
	029 Move X0, 0x759000
	030 Move X0, [X0+1912]
	031 Call 0x1C17CF4
	032 Move X0, 0x75C000
	033 Move X0, [X0+2800]
	034 Call 0x1C17CF4
	035 Move X0, 0x75C000
	036 Move X0, [X0+2808]
	037 Call 0x1C17CF4
	038 Move X0, 0x75C000
	039 Move X0, [X0+2816]
	040 Call 0x1C17CF4
	041 Move X0, 0x75C000
	042 Move X0, [X0+2824]
	043 Call 0x1C17CF4
	044 Move X0, 0x75C000
	045 Move X0, [X0+2832]
	046 Call 0x1C17CF4
	047 Move X0, 0x75C000
	048 Move X0, [X0+2840]
	049 Call 0x1C17CF4
	050 Move X0, 0x75C000
	051 Move X0, [X0+2848]
	052 Call 0x1C17CF4
	053 Move X0, 0x75C000
	054 Move X0, [X0+2856]
	055 Call 0x1C17CF4
	056 Move X0, 0x75C000
	057 Move X0, [X0+2864]
	058 Call 0x1C17CF4
	059 Move X0, 0x75C000
	060 Move X0, [X0+2872]
	061 Call 0x1C17CF4
	062 Move X0, 0x75C000
	063 Move X0, [X0+2880]
	064 Call 0x1C17CF4
	065 Move X0, 0x6FC000
	066 Move X0, [X0+3584]
	067 Call 0x1C17CF4
	068 Move X0, 0x75C000
	069 Move X0, [X0+2888]
	070 Call 0x1C17CF4
	071 Move X0, 0x6FC000
	072 Move X0, [X0+3608]
	073 Call 0x1C17CF4
	074 Move X0, 0x75C000
	075 Move X0, [X0+2896]
	076 Call 0x1C17CF4
	077 Move X0, 0x75C000
	078 Move X0, [X0+2904]
	079 Call 0x1C17CF4
	080 Move X0, 0x75C000
	081 Move X0, [X0+2912]
	082 Call 0x1C17CF4
	083 Move X0, 0x6FC000
	084 Move X0, [X0+1448]
	085 Call 0x1C17CF4
	086 Move X0, 0x75C000
	087 Move X0, [X0+2920]
	088 Call 0x1C17CF4
	089 Move X0, 0x6FC000
	090 Move X0, [X0+1432]
	091 Call 0x1C17CF4
	092 Move X0, 0x75C000
	093 Move X0, [X0+2928]
	094 Call 0x1C17CF4
	095 Move X0, 0x725000
	096 Move X0, [X0+432]
	097 Call 0x1C17CF4
	098 Move X0, 0x6FC000
	099 Move X0, [X0+1728]
	100 Call 0x1C17CF4
	101 Move X0, 0x75C000
	102 Move X0, [X0+2936]
	103 Call 0x1C17CF4
	104 Move X0, 0x75C000
	105 Move X0, [X0+2944]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X20+3782], W8
	109 Move [X31+32], X31
	110 Move [X31+40], X31
	111 Move [X31+48], X31
	112 Move [X31+72], X31
	113 Move X0, [X19+40]
	114 Compare X0, 0
	115 JumpIfEqual {582}
	116 Move X8, 0x75C000
	117 Move X8, [X8+2816]
	118 Move X1, [X8]
	119 Call Dictionary`2<Object, Object>.Clear, X0
	120 Move X0, [X19+56]
	121 Compare X0, 0
	122 JumpIfEqual {582}
	123 Move X8, 0x75C000
	124 Move X8, [X8+2912]
	125 Move X23, 0x75C000
	126 Move X24, 0x6FC000
	127 Move X25, 0x725000
	128 Move X22, 0x75C000
	129 Move X27, 0x75C000
	130 Move X28, 0x6FC000
	131 Move X29, 0x75C000
	132 Move X23, [X23+2840]
	133 Move X24, [X24+1728]
	134 Move X25, [X25+432]
	135 Move X22, [X22+2800]
	136 Move X27, [X27+2808]
	137 Move X28, [X28+3608]
	138 Move X29, [X29+2888]
	139 Move X1, [X8]
	140 Add X8, X31, 8
	141 Call List`1<Object>.GetEnumerator, X0
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move X8, [X31+24]
	144 Move [X31+2], V0
	145 Move [X31+48], X8
	146 Move X1, [X23]
	147 Add X0, X31, 32
	148 Call Enumerator<Object>.MoveNext, X0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {197}
	153 Move X26, [X31+48]
	154 Compare X26, 0
	155 JumpIfEqual {572}
	156 Move X0, [X24]
	157 Move X20, [X26+16]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X1, [X25]
	163 Move X2, [X22]
	164 Move X0, X20
	165 Call 0x1C1803C
	166 Move X20, X0
	167 Move X1, X31
	168 Move X2, X31
	169 Call Type.op_Inequality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {146}
	174 Move X8, 0x6FC000
	175 Move X8, [X8+1432]
	176 Move X21, [X26+24]
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X21
	183 Move X1, X31
	184 Move X2, X31
	185 Call Object.op_Inequality, X0, X1
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {146}
	190 Move X0, [X19+40]
	191 Compare X0, 0
	192 JumpIfEqual {581}
	193 Move X2, [X26+24]
	194 Move X3, [X27]
	195 Move X1, X20
	196 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	197 Move X8, 0x75C000
	198 Move X8, [X8+2832]
	199 Add X0, X31, 32
	200 Move X1, [X8]
	201 Call Enumerator<Object>.Dispose, X0
	202 Move X26, 0x75C000
	203 Move X27, 0x75C000
	204 Move X25, 0x75C000
	205 Move X26, [X26+2944]
	206 Move X27, [X27+2856]
	207 Move X25, [X25+2824]
	208 Move X8, [X19+64]
	209 Compare X8, 0
	210 JumpIfEqual {582}
	211 Move W2, [X8+24]
	212 Move W9, [X8+28]
	213 Add W9, W9, 1
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move [X8+24], W31
	216 Move [X8+28], W9
	217 Move X0, [X8+16]
	218 Move W1, W31
	219 Move X3, X31
	220 Call Array.Clear, X0, X1, X2
	221 Move X8, 0x759000
	222 Move X8, [X8+1912]
	223 Move X0, [X8]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, X31
	229 Call DebugManager.get_instance
	230 Compare X0, 0
	231 JumpIfEqual {582}
	232 Move X1, X31
	233 Call DebugManager.GetState, X0
	234 Move [X19+32], W0
	235 Move X0, X31
	236 Call DebugManager.get_instance
	237 Compare X0, 0
	238 JumpIfEqual {582}
	239 Move X1, X31
	240 Call DebugManager.get_panels, X0
	241 Move X8, 0x752000
	242 Move X8, [X8+1712]
	243 Move X20, X0
	244 Move X0, X19
	245 Move X1, [X8]
	246 Call 0x21A4F50, X0
	247 Compare X0, 0
	248 JumpIfEqual {582}
	249 Move X1, X31
	250 Call RectTransform.get_rect, X0
	251 Move X8, 0x6FC000
	252 Move X8, [X8+1448]
	253 Move V8, V2
	254 Move V9, V3
	255 Move X0, [X8]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move V0, V8
	261 Move V1, V9
	262 Move X0, X31
	263 Call Math.Min, V0, V1
	264 Move X0, X31
	265 Move V8, V0
	266 Call Screen.get_height
	267 Move W21, W0
	268 Move X0, X31
	269 Call Screen.get_width
	270 Move W1, W0
	271 Move W0, W21
	272 Move X2, X31
	273 Call Math.Min, X0, X1
	274 Move W21, W0
	275 Move X0, X31
	276 Call Screen.get_safeArea
	277 Compare X20, 0
	278 JumpIfEqual {582}
	279 Move X8, 0x75C000
	280 Move X8, [X8+2928]
	281 NotImplemented "Instruction SCVTF not yet implemented."
	282 NotImplemented "Instruction FNEG not yet implemented."
	283 NotImplemented "Instruction FDIV not yet implemented."
	284 Move X1, [X8]
	285 Move V10, V3
	286 Move S3, 5
	287 Multiply S12, S11, S1
	288 Multiply S0, S0, S11
	289 Move X0, X20
	290 Add S8, S12, S3
	291 Add S9, S0, S3
	292 Call ReadOnlyCollection`1<Object>.GetEnumerator, X0
	293 Multiply S0, S10, S11
	294 Add S1, S12, S12
	295 Move X20, X0
	296 Move X21, X31
	297 Add S10, S0, S1
	298 Compare X20, 0
	299 JumpIfEqual {571}
	300 Move X8, [X20]
	301 Move X1, [X28]
	302 NotImplemented "Instruction LDRH not yet implemented."
	303 Compare X9, 0
	304 JumpIfEqual {311}
	305 Move X10, [X8+176]
	306 Add X10, X10, 8
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Subtract X9, X9, 1
	310 Add X10, X10, 16
	311 Move X0, X20
	312 Move W2, W31
	313 Call 0x1C5D788
	314 NotImplemented "Instruction LDRSW not yet implemented."
	315 Add X8, X8, X9
	316 Add X0, X8, 312
	317 Move X8, [X0]
	318 Move X1, [X0+8]
	319 Move X0, X20
	320 NotImplemented "Instruction BLR not yet implemented."
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {520}
	325 Move X8, [X20]
	326 Move X1, [X29]
	327 NotImplemented "Instruction LDRH not yet implemented."
	328 Compare X9, 0
	329 JumpIfEqual {336}
	330 Move X10, [X8+176]
	331 Add X10, X10, 8
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Subtract X9, X9, 1
	335 Add X10, X10, 16
	336 Move X0, X20
	337 Move W2, W31
	338 Call 0x1C5D788
	339 NotImplemented "Instruction LDRSW not yet implemented."
	340 Add X8, X8, X9
	341 Add X0, X8, 312
	342 Move X8, [X0]
	343 Move X1, [X0+8]
	344 Move X0, X20
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X22, X0
	347 Compare X0, 0
	348 JumpIfEqual {573}
	349 Move X0, X22
	350 Move X1, X31
	351 Call Panel.get_isEditorOnly, X0
	352 Move TEMP, X0
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {298}
	356 Move X8, [X26]
	357 Move X23, [X22+40]
	358 Move W9, [X8+224]
	359 Compare W9, 0
	360 JumpIfNotEqual {364}
	361 Move X0, X8
	362 Call 0x1C17DFC
	363 Move X8, [X26]
	364 Move X9, [X8+184]
	365 Move X24, [X9+8]
	366 Compare X24, 0
	367 JumpIfNotEqual {390}
	368 Move W9, [X8+224]
	369 Compare W9, 0
	370 JumpIfNotEqual {374}
	371 Move X0, X8
	372 Call 0x1C17DFC
	373 Move X8, [X26]
	374 Move X8, [X8+184]
	375 Move X0, [X27]
	376 Move X25, [X8]
	377 Call 0x1C17F10
	378 Move X8, 0x75C000
	379 Move X8, [X8+2936]
	380 Move X24, X0
	381 Move X2, [X8]
	382 Move X1, X25
	383 Move X3, X31
	384 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	385 Move X8, [X26]
	386 Move X25, 0x75C000
	387 Move X8, [X8+184]
	388 Move [X8+8], X24
	389 Move X25, [X25+2824]
	390 Move X2, [X25]
	391 Move X0, X23
	392 Move X1, X24
	393 Call 0x21C0ABC, X0, X1
	394 Compare W0, 0
	395 JumpIfEqual {298}
	396 Move X23, [X19+48]
	397 Move X0, X19
	398 Move X1, X31
	399 Call Component.get_transform, X0
	400 Move X8, 0x6FC000
	401 Move X8, [X8+1432]
	402 Move X24, X0
	403 Move X0, [X8]
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfNotEqual {408}
	407 Call 0x1C17DFC
	408 Move X8, 0x75C000
	409 Move X8, [X8+2920]
	410 Move X3, [X8]
	411 Move X0, X23
	412 Move X1, X24
	413 Move W2, W31
	414 Call 0x222E4F8, X0, X1, X2
	415 Compare X0, 0
	416 JumpIfEqual {576}
	417 Move X1, X31
	418 Call Component.get_gameObject, X0
	419 Move X23, X0
	420 Compare X0, 0
	421 JumpIfEqual {577}
	422 Move X1, [X22+24]
	423 Move X0, X23
	424 Move X2, X31
	425 Call Object.set_name, X0, X1
	426 Move X8, 0x75C000
	427 Move X8, [X8+2880]
	428 Move X1, [X8]
	429 Move X0, X23
	430 Call 0x21E62E4, X0
	431 Move X24, X0
	432 Compare X0, 0
	433 JumpIfEqual {575}
	434 Move X0, X24
	435 Move V0, V9
	436 Move V1, V8
	437 Move X1, X31
	438 Call RectTransform.set_anchoredPosition, X0, X1
	439 Move W1, 1
	440 Move X0, X24
	441 Move V0, V10
	442 Move X2, X31
	443 Call RectTransform.SetSizeWithCurrentAnchors, X0, X1, V0
	444 Move X8, 0x75C000
	445 Move X8, [X8+2872]
	446 Move X1, [X8]
	447 Move X0, X23
	448 Call 0x21E62E4, X0
	449 Move X24, X0
	450 Compare X0, 0
	451 JumpIfEqual {579}
	452 Move X0, X24
	453 Move X1, X22
	454 Call DebugUIHandlerPanel.SetPanel, X0, X1
	455 Move [X24+56], X19
	456 Move X0, [X19+64]
	457 Compare X0, 0
	458 JumpIfEqual {580}
	459 Move X9, 0x75C000
	460 Move W10, [X0+28]
	461 Move X8, [X0+16]
	462 Move X9, [X9+2896]
	463 Add W10, W10, 1
	464 Move X9, [X9]
	465 Move [X0+28], W10
	466 Compare X8, 0
	467 JumpIfEqual {578}
	468 NotImplemented "Instruction LDRSW not yet implemented."
	469 Move W11, [X8+24]
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Add W9, W10, 1
	472 Add X8, X8, X10
	473 Move [X0+24], W9
	474 Move [X8+32], X24
	475 Move X8, [X9+32]
	476 Move X8, [X8+192]
	477 Move X2, [X8+112]
	478 Move X1, X24
	479 Call List`1<Object>.AddWithResize, X0, X1
	480 Move X8, 0x75C000
	481 Move X8, [X8+2864]
	482 Move X1, [X8]
	483 Move X0, X23
	484 Call 0x21E62E4, X0
	485 Move [X31+72], X31
	486 Compare X0, 0
	487 JumpIfEqual {574}
	488 Move X2, [X0+32]
	489 Add X4, X31, 72
	490 Move X0, X19
	491 Move X1, X22
	492 Move X3, X31
	493 Call DebugUIHandlerCanvas.Traverse, X0, X1, X2, X3, X4
	494 Move X23, [X31+72]
	495 Move X0, X23
	496 Move X1, X31
	497 Move X2, X31
	498 Call Object.op_Inequality, X0, X1
	499 Move TEMP, X0
	500 And TEMP, TEMP, 1
	501 Compare TEMP, 1
	502 JumpIfNotEqual {298}
	503 Compare X23, 0
	504 JumpIfEqual {587}
	505 Move X8, [X23+88]
	506 Compare X8, 0
	507 JumpIfEqual {586}
	508 Move X24, [X8+56]
	509 Move X0, X22
	510 Move X1, X31
	511 Call Panel.get_queryPath, X0
	512 Move X1, X0
	513 Compare X24, 0
	514 JumpIfEqual {585}
	515 Move X0, X24
	516 Move X2, X31
	517 Call String.Contains, X0, X1
	518 And W31, W0, 1
	519 NotImplemented "Instruction CSEL not yet implemented."
	520 Move X22, X31
	521 Compare X20, 0
	522 JumpIfEqual {546}
	523 Move X8, [X20]
	524 Move X10, 0x6FC000
	525 NotImplemented "Instruction LDRH not yet implemented."
	526 Move X10, [X10+3584]
	527 Move X1, [X10]
	528 Compare X9, 0
	529 JumpIfEqual {536}
	530 Move X10, [X8+176]
	531 Add X10, X10, 8
	532 NotImplemented "Instruction LDUR not yet implemented."
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Subtract X9, X9, 1
	535 Add X10, X10, 16
	536 Move X0, X20
	537 Move W2, W31
	538 Call 0x1C5D788
	539 NotImplemented "Instruction LDRSW not yet implemented."
	540 Add X8, X8, X9
	541 Add X0, X8, 312
	542 Move X8, [X0]
	543 Move X1, [X0+8]
	544 Move X0, X20
	545 NotImplemented "Instruction BLR not yet implemented."
	546 Compare X22, 0
	547 JumpIfNotEqual {583}
	548 Move W1, [X19+72]
	549 Move X0, X19
	550 Move X2, X21
	551 Call DebugUIHandlerCanvas.ActivatePanel, X0, X1, X2
	552 Move X20, [X31+192]
	553 Move X19, [X31+200]
	554 Move X22, [X31+176]
	555 Move X21, [X31+184]
	556 Move X24, [X31+160]
	557 Move X23, [X31+168]
	558 Move X26, [X31+144]
	559 Move X25, [X31+152]
	560 Move X28, [X31+128]
	561 Move X27, [X31+136]
	562 Move X29, [X31+112]
	563 Move X30, [X31+120]
	564 Move D9, [X31+96]
	565 Move D8, [X31+104]
	566 Move D11, [X31+80]
	567 Move D10, [X31+88]
	568 Move V12, [X31+64]
	569 Add X31, X31, 208
	570 Return 
	571 Call 0x1C17F20
	572 Call 0x1C17F20
	573 Call 0x1C17F20
	574 Call 0x1C17F20
	575 Call 0x1C17F20
	576 Call 0x1C17F20
	577 Call 0x1C17F20
	578 Call 0x1C17F20
	579 Call 0x1C17F20
	580 Call 0x1C17F20
	581 Call 0x1C17F20
	582 Call 0x1C17F20
	583 Move X0, X22
	584 Call 0x1C17F18
	585 Call 0x1C17F20
	586 Call 0x1C17F20
	587 Call 0x1C17F20
	588 Move X21, X31
	589 Move X26, 0x75C000
	590 Move X27, 0x75C000
	591 Move X25, 0x75C000
	592 Move X26, [X26+2944]
	593 Move X27, [X27+2856]
	594 Move X25, [X25+2824]
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Call 0x3EB2AD0
	597 Move X20, [X0]
	598 Call 0x3EB2AE0
	599 Move X8, 0x75C000
	600 Move X8, [X8+2832]
	601 Add X0, X31, 32
	602 Move X1, [X8]
	603 Call Enumerator<Object>.Dispose, X0
	604 Compare X20, 0
	605 JumpIfEqual {208}
	606 Move X0, X20
	607 Call 0x1C17F18
	608 Move X19, X0
	609 Move X20, X31
	610 Move X19, X0
	611 Move X8, 0x75C000
	612 Move X8, [X8+2832]
	613 Move X1, [X8]
	614 Add X0, X31, 32
	615 Call Enumerator<Object>.Dispose, X0
	616 Compare X20, 0
	617 JumpIfEqual {654}
	618 Move X0, X20
	619 Call 0x1C17F18
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Call 0x3EB2AD0
	622 Move X22, [X0]
	623 Call 0x3EB2AE0
	624 Move X19, X0
	625 Move X22, X31
	626 Move X19, X0
	627 Compare X20, 0
	628 JumpIfEqual {652}
	629 Move X8, [X20]
	630 Move X10, 0x6FC000
	631 NotImplemented "Instruction LDRH not yet implemented."
	632 Move X10, [X10+3584]
	633 Move X1, [X10]
	634 Compare X9, 0
	635 JumpIfEqual {642}
	636 Move X10, [X8+176]
	637 Add X10, X10, 8
	638 NotImplemented "Instruction LDUR not yet implemented."
	639 NotImplemented "Instruction CMP not yet implemented."
	640 Subtract X9, X9, 1
	641 Add X10, X10, 16
	642 Move X0, X20
	643 Move W2, W31
	644 Call 0x1C5D788
	645 NotImplemented "Instruction LDRSW not yet implemented."
	646 Add X8, X8, X9
	647 Add X0, X8, 312
	648 Move X8, [X0]
	649 Move X1, [X0+8]
	650 Move X0, X20
	651 NotImplemented "Instruction BLR not yet implemented."
	652 Compare X22, 0
	653 JumpIfNotEqual {656}
	654 Move X0, X19
	655 Call 0x1D2D690
	656 Move X0, X22
	657 Call 0x1C17F18
	658 Call 0x1991590

Method: System.Void Traverse(UnityEngine.Rendering.DebugUI/IContainer container, UnityEngine.Transform parentTransform, UnityEngine.Rendering.UI.DebugUIHandlerWidget parentUIHandler, ref UnityEngine.Rendering.UI.DebugUIHandlerWidget selectedHandler)

Disassembly:
	0x039F8D38 LDR X0, [X0 + 0xC18]
	0x039F8D3C BL 0x1C16CF4
	0x039F8D40 ADRP X0, 0x75B000
	0x039F8D44 LDR X0, [X0 + 0xC20]
	0x039F8D48 BL 0x1C16CF4
	0x039F8D4C ADRP X0, 0x75B000
	0x039F8D50 LDR X0, [X0 + 0xBE0]
	0x039F8D54 BL 0x1C16CF4
	0x039F8D58 ADRP X0, 0x75A000
	0x039F8D5C LDR X0, [X0 + 0x690]
	0x039F8D60 BL 0x1C16CF4
	0x039F8D64 MOVZ W8, 0x1
	0x039F8D68 STRB W8, [X23 + 0xED4]
	0x039F8D6C STR X20, [X19 + 0x58]
	0x039F8D70 LDR X1, [X22]
	0x039F8D74 MOV X0, X19
	0x039F8D78 BL 0x21A8CFC
	0x039F8D7C STR X0, [X19 + 0x98]
	0x039F8D80 LDR X1, [X21]
	0x039F8D84 MOV X0, X19
	0x039F8D88 BL 0x21A3894
	0x039F8D8C LDR X8, [X19 + 0x98]
	0x039F8D90 STR X0, [X19 + 0xA0]
	0x039F8D94 CBZ X8, 0x39F9008
	0x039F8D98 LDR X0, [X19 + 0x60]
	0x039F8D9C CBZ X0, 0x39F9008
	0x039F8DA0 LDR X9, [X0]
	0x039F8DA4 LDR X1, [X8 + 0x28]
	0x039F8DA8 ADRP X21, 0x75A000
	0x039F8DAC ADRP X20, 0x75B000
	0x039F8DB0 LDR X8, [X9 + 0x5E8]
	0x039F8DB4 LDR X2, [X9 + 0x5F0]
	0x039F8DB8 LDR X21, [X21 + 0x690]
	0x039F8DBC LDR X20, [X20 + 0xBE8]
	0x039F8DC0 BLR X8
	0x039F8DC4 LDR X0, [X21]
	0x039F8DC8 LDR X23, [X19 + 0x78]
	0x039F8DCC BL 0x1C16F10
	0x039F8DD0 LDR X2, [X20]
	0x039F8DD4 MOV X1, X19
	0x039F8DD8 MOV X3, X31
	0x039F8DDC MOV X20, X0
	0x039F8DE0 BL 0x2D27F24
	0x039F8DE4 CBZ X23, 0x39F9008
	0x039F8DE8 ADRP X22, 0x6FD000
	0x039F8DEC LDR X22, [X22 + 0x5B0]
	0x039F8DF0 STR X20, [X23 + 0x70]
	0x039F8DF4 ADRP X20, 0x75B000
	0x039F8DF8 LDR X23, [X19 + 0x78]
	0x039F8DFC LDR X0, [X22]
	0x039F8E00 LDR X20, [X20 + 0xBF0]
	0x039F8E04 BL 0x1C16F10
	0x039F8E08 LDR X2, [X20]
	0x039F8E0C MOV X1, X19
	0x039F8E10 MOV X3, X31
	0x039F8E14 MOV X20, X0
	0x039F8E18 BL 0x2A6DA40
	0x039F8E1C CBZ X23, 0x39F9008
	0x039F8E20 STR X20, [X23 + 0x78]
	0x039F8E24 LDR X1, [X19 + 0x78]
	0x039F8E28 CBZ X1, 0x39F9008
	0x039F8E2C LDR X8, [X19 + 0x80]
	0x039F8E30 ADRP X20, 0x75B000
	0x039F8E34 LDR X20, [X20 + 0xBF8]
	0x039F8E38 MOV X0, X19
	0x039F8E3C STR X8, [X1 + 0x50]
	0x039F8E40 BL 0x39F900C
	0x039F8E44 LDR X0, [X21]
	0x039F8E48 LDR X23, [X19 + 0x80]
	0x039F8E4C BL 0x1C16F10
	0x039F8E50 LDR X2, [X20]
	0x039F8E54 MOV X1, X19
	0x039F8E58 MOV X3, X31
	0x039F8E5C MOV X20, X0
	0x039F8E60 BL 0x2D27F24
	0x039F8E64 CBZ X23, 0x39F9008
	0x039F8E68 STR X20, [X23 + 0x70]
	0x039F8E6C LDR X0, [X22]
	0x039F8E70 ADRP X20, 0x75B000
	0x039F8E74 LDR X23, [X19 + 0x80]
	0x039F8E78 LDR X20, [X20 + 0xC00]
	0x039F8E7C BL 0x1C16F10
	0x039F8E80 LDR X2, [X20]
	0x039F8E84 MOV X1, X19
	0x039F8E88 MOV X3, X31
	0x039F8E8C MOV X20, X0
	0x039F8E90 BL 0x2A6DA40
	0x039F8E94 CBZ X23, 0x39F9008
	0x039F8E98 STR X20, [X23 + 0x78]
	0x039F8E9C LDR X1, [X19 + 0x80]
	0x039F8EA0 CBZ X1, 0x39F9008
	0x039F8EA4 LDR X8, [X19 + 0x78]
	0x039F8EA8 ADRP X20, 0x75B000
	0x039F8EAC MOV X0, X19
	0x039F8EB0 STR X8, [X1 + 0x48]
	0x039F8EB4 LDR X8, [X19 + 0x88]
	0x039F8EB8 LDR X20, [X20 + 0xC08]
	0x039F8EBC STR X8, [X1 + 0x50]
	0x039F8EC0 BL 0x39F900C
	0x039F8EC4 LDR X0, [X21]
	0x039F8EC8 LDR X23, [X19 + 0x88]
	0x039F8ECC BL 0x1C16F10
	0x039F8ED0 LDR X2, [X20]
	0x039F8ED4 MOV X1, X19
	0x039F8ED8 MOV X3, X31
	0x039F8EDC MOV X20, X0
	0x039F8EE0 BL 0x2D27F24
	0x039F8EE4 CBZ X23, 0x39F9008
	0x039F8EE8 STR X20, [X23 + 0x70]
	0x039F8EEC LDR X0, [X22]
	0x039F8EF0 ADRP X20, 0x75B000
	0x039F8EF4 LDR X23, [X19 + 0x88]
	0x039F8EF8 LDR X20, [X20 + 0xC10]
	0x039F8EFC BL 0x1C16F10
	0x039F8F00 LDR X2, [X20]
	0x039F8F04 MOV X1, X19
	0x039F8F08 MOV X3, X31
	0x039F8F0C MOV X20, X0
	0x039F8F10 BL 0x2A6DA40
	0x039F8F14 CBZ X23, 0x39F9008
	0x039F8F18 STR X20, [X23 + 0x78]
	0x039F8F1C LDR X1, [X19 + 0x88]
	0x039F8F20 CBZ X1, 0x39F9008
	0x039F8F24 LDR X8, [X19 + 0x80]
	0x039F8F28 STR X8, [X1 + 0x48]
	0x039F8F2C LDR X8, [X19 + 0x98]
	0x039F8F30 CBZ X8, 0x39F9008
	0x039F8F34 LDRB W8, [X8 + 0x61]
	0x039F8F38 CBZ W8, 0x39F8F44
	0x039F8F3C LDR X8, [X19 + 0x90]
	0x039F8F40 B 0x39F8F48
	0x039F8F44 MOV X8, X31
	0x039F8F48 MOV X0, X19
	0x039F8F4C STR X8, [X1 + 0x50]
	0x039F8F50 BL 0x39F900C
	0x039F8F54 LDR X0, [X19 + 0x90]
	0x039F8F58 CBZ X0, 0x39F9008
	0x039F8F5C MOV X1, X31
	0x039F8F60 BL 0x3C32ECC
	0x039F8F64 LDR X8, [X19 + 0x98]
	0x039F8F68 CBZ X8, 0x39F9008
	0x039F8F6C CBZ X0, 0x39F9008
	0x039F8F70 LDRB W1, [X8 + 0x61]
	0x039F8F74 ADRP X20, 0x75B000
	0x039F8F78 LDR X20, [X20 + 0xC18]
	0x039F8F7C MOV X2, X31
	0x039F8F80 BL 0x3C357B4
	0x039F8F84 LDR X0, [X21]
	0x039F8F88 LDR X23, [X19 + 0x90]
	0x039F8F8C BL 0x1C16F10
	0x039F8F90 LDR X2, [X20]
	0x039F8F94 MOV X1, X19
	0x039F8F98 MOV X3, X31
	0x039F8F9C MOV X20, X0
	0x039F8FA0 BL 0x2D27F24
	0x039F8FA4 CBZ X23, 0x39F9008
	0x039F8FA8 STR X20, [X23 + 0x70]
	0x039F8FAC LDR X0, [X22]
	0x039F8FB0 ADRP X20, 0x75B000
	0x039F8FB4 LDR X21, [X19 + 0x90]
	0x039F8FB8 LDR X20, [X20 + 0xC20]
	0x039F8FBC BL 0x1C16F10
	0x039F8FC0 LDR X2, [X20]
	0x039F8FC4 MOV X1, X19
	0x039F8FC8 MOV X3, X31
	0x039F8FCC MOV X20, X0
	0x039F8FD0 BL 0x2A6DA40
	0x039F8FD4 CBZ X21, 0x39F9008
	0x039F8FD8 STR X20, [X21 + 0x78]
	0x039F8FDC LDR X1, [X19 + 0x90]
	0x039F8FE0 CBZ X1, 0x39F9008
	0x039F8FE4 LDR X8, [X19 + 0x88]
	0x039F8FE8 MOV X0, X19
	0x039F8FEC STR X8, [X1 + 0x48]
	0x039F8FF0 BL 0x39F900C
	0x039F8FF4 MOV X0, X19
	0x039F8FF8 LDP X20, X19, [X31 + 0x20]
	0x039F8FFC LDP X22, X21, [X31 + 0x10]
	0x039F9000 LDP X30, X23, [X31], #0x30
	0x039F9004 B 0x39F910C
	0x039F9008 BL 0x1C16F20
	0x039F900C STR X30, [X31 - 0x40]!
	0x039F9010 STP X24, X23, [X31 + 0x10]
	0x039F9014 STP X22, X21, [X31 + 0x20]
	0x039F9018 STP X20, X19, [X31 + 0x30]
	0x039F901C ADRP X21, 0x9E8000
	0x039F9020 LDRB W8, [X21 + 0xED6]
	0x039F9024 MOV X19, X1
	0x039F9028 MOV X20, X0
	0x039F902C TBNZ X8, 0x0, 0x39F9068
	0x039F9030 ADRP X0, 0x75A000
	0x039F9034 LDR X0, [X0 + 0xC28]
	0x039F9038 BL 0x1C16CF4
	0x039F903C ADRP X0, 0x75A000
	0x039F9040 LDR X0, [X0 + 0xC30]
	0x039F9044 BL 0x1C16CF4
	0x039F9048 ADRP X0, 0x75A000
	0x039F904C LDR X0, [X0 + 0xC38]
	0x039F9050 BL 0x1C16CF4
	0x039F9054 ADRP X0, 0x759000
	0x039F9058 LDR X0, [X0 + 0x690]
	0x039F905C BL 0x1C16CF4
	0x039F9060 MOVZ W8, 0x1
	0x039F9064 STRB W8, [X21 + 0xED6]
	0x039F9068 CBZ X19, 0x39F9108
	0x039F906C ADRP X22, 0x759000
	0x039F9070 LDR X22, [X22 + 0x690]
	0x039F9074 STR X20, [X19 + 0x40]
	0x039F9078 ADRP X21, 0x75A000
	0x039F907C ADRP X23, 0x75A000
	0x039F9080 LDR X0, [X22]
	0x039F9084 ADRP X24, 0x75A000
	0x039F9088 LDR X21, [X21 + 0xC28]
	0x039F908C LDR X23, [X23 + 0xC30]
	0x039F9090 LDR X24, [X24 + 0xC38]
	0x039F9094 BL 0x1C16F10
	0x039F9098 LDR X2, [X21]
	0x039F909C MOV X1, X20
	0x039F90A0 MOV X3, X31
	0x039F90A4 MOV X21, X0
	0x039F90A8 BL 0x2D27F24
	0x039F90AC STR X21, [X19 + 0x80]
	0x039F90B0 LDR X0, [X22]
	0x039F90B4 BL 0x1C16F10
	0x039F90B8 LDR X2, [X23]
	0x039F90BC MOV X1, X20
	0x039F90C0 MOV X3, X31
	0x039F90C4 MOV X21, X0
	0x039F90C8 BL 0x2D27F24
	0x039F90CC STR X21, [X19 + 0x88]
	0x039F90D0 LDR X0, [X22]
	0x039F90D4 BL 0x1C16F10
	0x039F90D8 LDR X2, [X24]
	0x039F90DC MOV X1, X20
	0x039F90E0 MOV X3, X31
	0x039F90E4 MOV X21, X0
	0x039F90E8 BL 0x2D27F24
	0x039F90EC STR X21, [X19 + 0x90]
	0x039F90F0 MOV X0, X19
	0x039F90F4 LDP X20, X19, [X31 + 0x30]
	0x039F90F8 LDP X22, X21, [X31 + 0x20]
	0x039F90FC LDP X24, X23, [X31 + 0x10]
	0x039F9100 LDR X30, [X31], #0x40
	0x039F9104 B 0x39FB2B0
	0x039F9108 BL 0x1C16F20
	0x039F910C STP X30, X21, [X31 - 0x20]!
	0x039F9110 STP X20, X19, [X31 + 0x10]
	0x039F9114 ADRP X21, 0x9E8000
	0x039F9118 ADRP X20, 0x6FA000
	0x039F911C LDRB W8, [X21 + 0xED8]
	0x039F9120 LDR X20, [X20 + 0x598]
	0x039F9124 MOV X19, X0
	0x039F9128 TBNZ X8, 0x0, 0x39F914C
	0x039F912C ADRP X0, 0x75A000
	0x039F9130 LDR X0, [X0 + 0xC40]
	0x039F9134 BL 0x1C16CF4
	0x039F9138 ADRP X0, 0x6FA000
	0x039F913C LDR X0, [X0 + 0x598]
	0x039F9140 BL 0x1C16CF4
	0x039F9144 MOVZ W8, 0x1
	0x039F9148 STRB W8, [X21 + 0xED8]
	0x039F914C LDR X0, [X20]
	0x039F9150 LDR X20, [X19 + 0x70]
	0x039F9154 LDR W8, [X0 + 0xE0]
	0x039F9158 CBNZ W8, 0x39F9160
	0x039F915C BL 0x1C16DFC
	0x039F9160 MOV X0, X20
	0x039F9164 MOV X1, X31
	0x039F9168 MOV X2, X31
	0x039F916C BL 0x3C354F8
	0x039F9170 TBZ X0, 0x0, 0x39F91B0
	0x039F9174 LDR X0, [X19 + 0x98]
	0x039F9178 CBZ X0, 0x39F91BC
	0x039F917C ADRP X8, 0x75A000
	0x039F9180 LDR X19, [X19 + 0x70]
	0x039F9184 LDR X8, [X8 + 0xC40]
	0x039F9188 LDR X1, [X8]
	0x039F918C BL 0x2D19B24
	0x039F9190 CBZ X19, 0x39F91BC
	0x039F9194 LDR X8, [X19]
	0x039F9198 MOV X0, X19
	0x039F919C LDP X20, X19, [X31 + 0x10]
	0x039F91A0 LDR X2, [X8 + 0x2A8]
	0x039F91A4 LDR X1, [X8 + 0x2B0]
	0x039F91A8 LDP X30, X21, [X31], #0x20
	0x039F91AC BR X2
	0x039F91B0 LDP X20, X19, [X31 + 0x10]
	0x039F91B4 LDP X30, X21, [X31], #0x20
	0x039F91B8 RET
	0x039F91BC BL 0x1C16F20
	0x039F91C0 STR D8, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x9EA000
	015 Move W8, [X19+3783]
	016 Move X22, X1
	017 Move [X31], X4
	018 Move [X31+8], X3
	019 Move [X31+24], X2
	020 Move [X31+32], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {60}
	025 Move X0, 0x6FC000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0x75C000
	029 Move X0, [X0+2952]
	030 Call 0x1C17CF4
	031 Move X0, 0x75C000
	032 Move X0, [X0+2864]
	033 Call 0x1C17CF4
	034 Move X0, 0x75C000
	035 Move X0, [X0+2960]
	036 Call 0x1C17CF4
	037 Move X0, 0x75A000
	038 Move X0, [X0+2904]
	039 Call 0x1C17CF4
	040 Move X0, 0x75C000
	041 Move X0, [X0+2920]
	042 Call 0x1C17CF4
	043 Move X0, 0x6FC000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move X0, 0x75A000
	047 Move X0, [X0+3008]
	048 Call 0x1C17CF4
	049 Move X0, 0x75A000
	050 Move X0, [X0+3016]
	051 Call 0x1C17CF4
	052 Move X0, 0x75C000
	053 Move X0, [X0+2968]
	054 Call 0x1C17CF4
	055 Move X0, 0x75C000
	056 Move X0, [X0+2976]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+3783], W8
	060 Move [X31+40], X31
	061 Compare X22, 0
	062 JumpIfEqual {348}
	063 Move [X31+16], X31
	064 Move X20, 0x75A000
	065 Move X21, 0x75A000
	066 Move X26, 0x75A000
	067 Move X27, 0x75C000
	068 Move X20, [X20+2904]
	069 Move X21, [X21+3008]
	070 Move X26, [X26+3016]
	071 Move X27, [X27+2952]
	072 Move X23, X31
	073 Move W24, W31
	074 Move X25, X31
	075 Move X8, [X22]
	076 Move X1, [X20]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Compare X9, 0
	079 JumpIfEqual {86}
	080 Move X10, [X8+176]
	081 Add X10, X10, 8
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract X9, X9, 1
	085 Add X10, X10, 16
	086 Move X0, X22
	087 Move W2, W31
	088 Call 0x1C5D788
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X22
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Compare X0, 0
	097 JumpIfEqual {348}
	098 Move X1, [X21]
	099 Call 0x2498BA8, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X22]
	102 Move X1, [X20]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X22
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X22
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Compare X0, 0
	123 JumpIfEqual {348}
	124 Move X2, [X26]
	125 Move W1, W24
	126 Call 0x2498990, X0, X1
	127 Compare X0, 0
	128 JumpIfEqual {348}
	129 Move X1, X31
	130 Move X28, X0
	131 Call Widget.get_isEditorOnly, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {333}
	136 Move X0, X28
	137 Move X1, X31
	138 Call Widget.get_isHidden, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {333}
	143 Move X8, [X31+32]
	144 Move X0, X28
	145 Move X1, X31
	146 Move X19, [X8+40]
	147 Call "il2cpp_vm_object_is_inst", X0
	148 Compare X19, 0
	149 JumpIfEqual {348}
	150 Move X3, [X27]
	151 Move X1, X0
	152 Add X2, X31, 40
	153 Move X0, X19
	154 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {213}
	159 Move X8, 0x6FC000
	160 Move X8, [X8+1432]
	161 Move X19, [X31+40]
	162 Move X0, [X8]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {167}
	166 Call 0x1C17DFC
	167 Move X8, 0x75C000
	168 Move X8, [X8+2920]
	169 Move X1, [X31+24]
	170 Move X0, X19
	171 Move W2, W31
	172 Move X3, [X8]
	173 Call 0x222E4F8, X0, X1, X2
	174 Compare X0, 0
	175 JumpIfEqual {348}
	176 Move X1, X31
	177 Call Component.get_gameObject, X0
	178 Compare X0, 0
	179 JumpIfEqual {348}
	180 Move X1, [X28+40]
	181 Move X2, X31
	182 Move X19, X0
	183 Call Object.set_name, X0, X1
	184 Move X8, 0x75C000
	185 Move X8, [X8+2960]
	186 Move X0, X19
	187 Move X1, [X8]
	188 Call 0x21E62E4, X0
	189 Move X1, X31
	190 Move X2, X31
	191 Move X29, X0
	192 Call Object.op_Equality, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {247}
	197 Move X0, X28
	198 Move X1, X31
	199 Call "il2cpp_vm_object_is_inst", X0
	200 Move X8, 0x75C000
	201 Move X8, [X8+2976]
	202 Move X10, [X31+16]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X19, [X8]
	205 NotImplemented "Instruction CSEL not yet implemented."
	206 Move [X31+16], X10
	207 Compare X0, 0
	208 JumpIfEqual {231}
	209 Compare X10, 0
	210 JumpIfEqual {348}
	211 Move X8, [X10]
	212 Move X0, X10
	213 Move X0, X28
	214 Move X1, X31
	215 Call "il2cpp_vm_object_is_inst", X0
	216 Move X8, 0x75B000
	217 Move X8, [X8+2968]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CSEL not yet implemented."
	220 Move X19, [X8]
	221 Compare X0, 0
	222 JumpIfEqual {231}
	223 Compare X25, 0
	224 JumpIfEqual {348}
	225 Move X8, [X25]
	226 Move X0, X25
	227 Move X9, [X8+360]
	228 Move X1, [X8+368]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X1, X0
	231 Move X1, X31
	232 Move X0, X19
	233 Move X2, X31
	234 Call String.Concat, X0, X1
	235 Move X8, 0x6FB000
	236 Move X8, [X8+2600]
	237 Move X19, X0
	238 Move X8, [X8]
	239 Move W9, [X8+224]
	240 Compare W9, 0
	241 JumpIfNotEqual {244}
	242 Move X0, X8
	243 Call 0x1C17DFC
	244 Move X0, X19
	245 Move X1, X31
	246 Call Debug.LogWarning, X0
	247 Move X8, [X31+32]
	248 Move X1, X31
	249 Move X0, [X8+88]
	250 Call String.IsNullOrEmpty, X0
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {268}
	255 Move X0, [X28+56]
	256 Compare X0, 0
	257 JumpIfEqual {348}
	258 Move X8, [X31+32]
	259 Move X2, X31
	260 Move X1, [X8+88]
	261 Call String.Equals, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {268}
	266 Move X8, [X31]
	267 Move [X8], X29
	268 Move X8, 0x6FB000
	269 Move X8, [X8+1432]
	270 Move X0, [X8]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X23
	276 Move X1, X31
	277 Move X2, X31
	278 Call Object.op_Inequality, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {286}
	283 Compare X23, 0
	284 JumpIfEqual {348}
	285 Move [X23+80], X29
	286 Compare X29, 0
	287 JumpIfEqual {348}
	288 Move X9, [X31+8]
	289 Move X8, [X29]
	290 Move X0, X29
	291 Move X1, X28
	292 Move [X29+64], X9
	293 Move [X29+72], X23
	294 Move X9, [X8+392]
	295 Move X2, [X8+400]
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X8, 0x75B000
	298 Move X8, [X8+2864]
	299 Move X0, X19
	300 Move X1, [X8]
	301 Call 0x21E62E4, X0
	302 Move X8, 0x6FB000
	303 Move X8, [X8+1432]
	304 Move X19, X0
	305 Move X8, [X8]
	306 Move W9, [X8+224]
	307 Compare W9, 0
	308 JumpIfNotEqual {311}
	309 Move X0, X8
	310 Call 0x1C17DFC
	311 Move X0, X19
	312 Move X1, X31
	313 Move X2, X31
	314 Call Object.op_Inequality, X0, X1
	315 Move TEMP, X0
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfNotEqual {332}
	319 Move X1, [X20]
	320 Move X0, X28
	321 Call 0x1C17E00
	322 Compare X0, 0
	323 JumpIfEqual {332}
	324 Compare X19, 0
	325 JumpIfEqual {348}
	326 Move X1, X0
	327 Move X2, [X19+32]
	328 Move X0, [X31+32]
	329 Move X4, [X31]
	330 Move X3, X29
	331 Call DebugUIHandlerCanvas.Traverse, X0, X1, X2, X3, X4
	332 Move X23, X29
	333 Add W24, W24, 1
	334 Move X20, [X31+128]
	335 Move X19, [X31+136]
	336 Move X22, [X31+112]
	337 Move X21, [X31+120]
	338 Move X24, [X31+96]
	339 Move X23, [X31+104]
	340 Move X26, [X31+80]
	341 Move X25, [X31+88]
	342 Move X28, [X31+64]
	343 Move X27, [X31+72]
	344 Move X29, [X31+48]
	345 Move X30, [X31+56]
	346 Add X31, X31, 144
	347 Return 
	348 Call 0x1C17F20

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget GetWidgetFromPath(System.String queryPath)

Disassembly:
	0x039F93C0 MOV W1, W31
	0x039F93C4 MOV X2, X31
	0x039F93C8 LDR X30, [X31], #0x10
	0x039F93CC B 0x3E47488
	0x039F93D0 BL 0x1C16F20
	0x039F93D4 STR X30, [X31 - 0x10]!
	0x039F93D8 LDR X0, [X0 + 0x68]
	0x039F93DC CBZ X0, 0x39F93F8
	0x039F93E0 LDRB W8, [X0 + 0x120]
	0x039F93E4 MOV X2, X31
	0x039F93E8 CMP W8, 0x0
	0x039F93EC CSET W1, EQ
	0x039F93F0 LDR X30, [X31], #0x10
	0x039F93F4 B 0x3E47488
	0x039F93F8 BL 0x1C16F20
	0x039F93FC STP X30, X21, [X31 - 0x20]!
	0x039F9400 STP X20, X19, [X31 + 0x10]
	0x039F9404 ADRP X20, 0x9E8000
	0x039F9408 LDRB W8, [X20 + 0xED9]
	0x039F940C MOV X19, X0
	0x039F9410 TBNZ X8, 0x0, 0x39F9428
	0x039F9414 ADRP X0, 0x6FA000
	0x039F9418 LDR X0, [X0 + 0x598]
	0x039F941C BL 0x1C16CF4
	0x039F9420 MOVZ W8, 0x1
	0x039F9424 STRB W8, [X20 + 0xED9]
	0x039F9428 LDR X8, [X19 + 0x68]
	0x039F942C CBZ X8, 0x39F94C0
	0x039F9430 LDRB W8, [X8 + 0x120]
	0x039F9434 CBZ W8, 0x39F94A0
	0x039F9438 ADRP X21, 0x6FA000
	0x039F943C LDR X21, [X21 + 0x598]
	0x039F9440 LDR X20, [X19 + 0xA0]
	0x039F9444 LDR X0, [X21]
	0x039F9448 LDR W8, [X0 + 0xE0]
	0x039F944C CBNZ W8, 0x39F9454
	0x039F9450 BL 0x1C16DFC
	0x039F9454 MOV X0, X20
	0x039F9458 MOV X1, X31
	0x039F945C MOV X2, X31
	0x039F9460 BL 0x3C3883C
	0x039F9464 TBNZ X0, 0x0, 0x39F94A0
	0x039F9468 LDR X0, [X19 + 0xA0]
	0x039F946C CBZ X0, 0x39F94C0
	0x039F9470 BL 0x39F6800
	0x039F9474 LDR X8, [X21]
	0x039F9478 MOV X20, X0
	0x039F947C LDR W9, [X8 + 0xE0]
	0x039F9480 CBNZ W9, 0x39F948C
	0x039F9484 MOV X0, X8
	0x039F9488 BL 0x1C16DFC
	0x039F948C MOV X0, X20
	0x039F9490 MOV X1, X31
	0x039F9494 MOV X2, X31
	0x039F9498 BL 0x3C3883C
	0x039F949C TBZ X0, 0x0, 0x39F94B0
	0x039F94A0 MOV X0, X19
	0x039F94A4 LDP X20, X19, [X31 + 0x10]
	0x039F94A8 LDP X30, X21, [X31], #0x20
	0x039F94AC B 0x39F66FC
	0x039F94B0 MOV X0, X20
	0x039F94B4 LDP X20, X19, [X31 + 0x10]
	0x039F94B8 LDP X30, X21, [X31], #0x20
	0x039F94BC RET
	0x039F94C0 BL 0x1C16F20
	0x039F94C4 ADRP X8, 0xFFFFFFFFFD0F3000
	0x039F94C8 ADRP X9, 0xFFFFFFFFFD0F2000
	0x039F94CC LDR V0, [X8 + 0xEB]
	0x039F94D0 LDR V1, [X9 + 0x77]
	0x039F94D4 MOV X1, X31
	0x039F94D8 STP V0, V1, [X0 + 0x20]
	0x039F94DC B 0x3C36C30
	0x039F94E0 STR X30, [X31 - 0x20]!
	0x039F94E4 STP X20, X19, [X31 + 0x10]
	0x039F94E8 ADRP X20, 0x9E8000
	0x039F94EC LDRB W8, [X20 + 0xEDA]
	0x039F94F0 MOV X19, X0
	0x039F94F4 TBNZ X8, 0x0, 0x39F950C
	0x039F94F8 ADRP X0, 0x75A000
	0x039F94FC LDR X0, [X0 + 0xC40]
	0x039F9500 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9E9000
	007 Move X22, 0x75B000
	008 Move W8, [X20+3784]
	009 Move X22, [X22+3008]
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x75B000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move X0, 0x75B000
	020 Move X0, [X0+3024]
	021 Call 0x1C17CF4
	022 Move X0, 0x75B000
	023 Move X0, [X0+2696]
	024 Call 0x1C17CF4
	025 Move X0, 0x75B000
	026 Move X0, [X0+2792]
	027 Call 0x1C17CF4
	028 Move X0, 0x75B000
	029 Move X0, [X0+3032]
	030 Call 0x1C17CF4
	031 Move X0, 0x75B000
	032 Move X0, [X0+3008]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3784], W8
	036 Move X0, [X22]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call Object..ctor, X0
	041 Compare X20, 0
	042 JumpIfEqual {97}
	043 Move X0, X21
	044 Move X1, X31
	045 Move [X20+16], X21
	046 Call String.IsNullOrEmpty, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {58}
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X0, X31
	056 Move X30, [X31+48]
	057 Return X0
	058 Move X0, [X19+64]
	059 Compare X0, 0
	060 JumpIfEqual {97}
	061 Move X8, 0x75B000
	062 Move W1, [X19+72]
	063 Move X8, [X8+2792]
	064 Move X2, [X8]
	065 Call List`1<Object>.get_Item, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {97}
	068 Move X8, 0x75B000
	069 Move X8, [X8+3016]
	070 Move X1, [X8]
	071 Call 0x21A553C, X0
	072 Move X8, 0x75B000
	073 Move X8, [X8+2696]
	074 Move X19, X0
	075 Move X8, [X8]
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X8, 0x75B000
	079 Move X8, [X8+3032]
	080 Move X1, X20
	081 Move X3, X31
	082 Move X21, X0
	083 Move X2, [X8]
	084 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	085 Move X8, 0x75B000
	086 Move X8, [X8+3024]
	087 Move X0, X19
	088 Move X1, X21
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X2, [X8]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Call 0x21C670C, X0, X1
	096 Return X0
	097 Call 0x1C17F20

Method: System.Void ActivatePanel(System.Int32 index, UnityEngine.Rendering.UI.DebugUIHandlerWidget selectedWidget = null)

Disassembly:
	0x039F91C4 STR X30, [X31 + 0x8]
	0x039F91C8 STP X24, X23, [X31 + 0x10]
	0x039F91CC STP X22, X21, [X31 + 0x20]
	0x039F91D0 STP X20, X19, [X31 + 0x30]
	0x039F91D4 ADRP X24, 0x9E8000
	0x039F91D8 LDRB W8, [X24 + 0xED5]
	0x039F91DC MOV W23, W4
	0x039F91E0 MOV W22, W3
	0x039F91E4 MOV W21, W2
	0x039F91E8 MOV W20, W1
	0x039F91EC MOV V8.16B, V0.16B
	0x039F91F0 MOV X19, X0
	0x039F91F4 TBNZ X8, 0x0, 0x39F920C
	0x039F91F8 ADRP X0, 0x75A000
	0x039F91FC LDR X0, [X0 + 0xC40]
	0x039F9200 BL 0x1C16CF4
	0x039F9204 MOVZ W8, 0x1
	0x039F9208 STRB W8, [X24 + 0xED5]
	0x039F920C LDR X0, [X19 + 0x98]
	0x039F9210 CBZ X0, 0x39F9278
	0x039F9214 ADRP X8, 0x75A000
	0x039F9218 LDR X8, [X8 + 0xC40]
	0x039F921C LDR X1, [X8]
	0x039F9220 BL 0x2D19B24
	0x039F9224 LDR X0, [X19 + 0x98]
	0x039F9228 CBZ X0, 0x39F9278
	0x039F922C LDR X8, [X0]
	0x039F9230 ANDS W31, W23, 0x1
	0x039F9234 FCSEL S3, S8, S3, NE
	0x039F9238 ANDS W31, W22, 0x1
	0x039F923C LDR X9, [X8 + 0x238]
	0x039F9240 LDR X1, [X8 + 0x240]
	0x039F9244 FCSEL S2, S8, S2, NE
	0x039F9248 ANDS W31, W21, 0x1
	0x039F924C FCSEL S1, S8, S1, NE
	0x039F9250 ANDS W31, W20, 0x1
	0x039F9254 FCSEL S0, S8, S0, NE
	0x039F9258 BLR X9
	0x039F925C MOV X0, X19
	0x039F9260 LDP X20, X19, [X31 + 0x30]
	0x039F9264 LDP X22, X21, [X31 + 0x20]
	0x039F9268 LDP X24, X23, [X31 + 0x10]
	0x039F926C LDR X30, [X31 + 0x8]
	0x039F9270 LDR V8, [X31], #0x40
	0x039F9274 B 0x39F910C
	0x039F9278 BL 0x1C16F20
	0x039F927C B 0x39FB2B0
	0x039F9280 STR X30, [X31 - 0x30]!
	0x039F9284 STP X22, X21, [X31 + 0x10]
	0x039F9288 STP X20, X19, [X31 + 0x20]
	0x039F928C ADRP X22, 0x9E8000
	0x039F9290 LDRB W8, [X22 + 0xED7]
	0x039F9294 MOV X20, X2
	0x039F9298 MOV W21, W1
	0x039F929C MOV X19, X0
	0x039F92A0 TBNZ X8, 0x0, 0x39F92B8
	0x039F92A4 ADRP X0, 0x757000
	0x039F92A8 LDR X0, [X0 + 0x778]
	0x039F92AC BL 0x1C16CF4
	0x039F92B0 MOVZ W8, 0x1
	0x039F92B4 STRB W8, [X22 + 0xED7]
	0x039F92B8 TBNZ X21, 0x0, 0x39F92E0
	0x039F92BC LDR X8, [X19 + 0x68]
	0x039F92C0 CBZ X8, 0x39F9360
	0x039F92C4 LDRB W8, [X8 + 0x120]
	0x039F92C8 CBZ W8, 0x39F92E0
	0x039F92CC LDR X0, [X19 + 0xA0]
	0x039F92D0 CBZ X0, 0x39F9360
	0x039F92D4 MOV X1, X20
	0x039F92D8 BL 0x39F640C
	0x039F92DC TBZ X0, 0x0, 0x39F9314
	0x039F92E0 LDR X0, [X19 + 0x60]
	0x039F92E4 CBZ X0, 0x39F9360
	0x039F92E8 LDR X8, [X0]
	0x039F92EC LDP S2, S3, [X19 + 0x38]
	0x039F92F0 LDP S0, S1, [X19 + 0x30]
	0x039F92F4 LDR X9, [X8 + 0x2A8]
	0x039F92F8 LDR X1, [X8 + 0x2B0]
	0x039F92FC BLR X9
	0x039F9300 LDP X20, X19, [X31 + 0x20]
	0x039F9304 LDP X22, X21, [X31 + 0x10]
	0x039F9308 MOVZ W0, 0x1
	0x039F930C LDR X30, [X31], #0x30
	0x039F9310 RET
	0x039F9314 LDR X0, [X19 + 0xA0]
	0x039F9318 CBZ X0, 0x39F9360
	0x039F931C BL 0x39F650C
	0x039F9320 ADRP X8, 0x757000
	0x039F9324 LDR X8, [X8 + 0x778]
	0x039F9328 MOV X19, X0
	0x039F932C LDR X8, [X8]
	0x039F9330 LDR W9, [X8 + 0xE0]
	0x039F9334 CBNZ W9, 0x39F9340
	0x039F9338 MOV X0, X8
	0x039F933C BL 0x1C16DFC
	0x039F9340 MOV X0, X31
	0x039F9344 BL 0x399C120
	0x039F9348 CBZ X0, 0x39F9360
	0x039F934C MOV X1, X19
	0x039F9350 MOV W2, W31
	0x039F9354 MOV X3, X31
	0x039F9358 BL 0x39A9954
	0x039F935C B 0x39F9300
	0x039F9360 BL 0x1C16F20
	0x039F9364 STR X30, [X31 - 0x10]!
	0x039F9368 MOV X8, X0
	0x039F936C LDR X0, [X0 + 0x60]
	0x039F9370 CBZ X0, 0x39F9390
	0x039F9374 LDR X9, [X0]
	0x039F9378 LDP S2, S3, [X8 + 0x28]
	0x039F937C LDP S0, S1, [X8 + 0x20]
	0x039F9380 LDR X2, [X9 + 0x2A8]
	0x039F9384 LDR X1, [X9 + 0x2B0]
	0x039F9388 LDR X30, [X31], #0x10
	0x039F938C BR X2
	0x039F9390 BL 0x1C16F20
	0x039F9394 STR X30, [X31 - 0x10]!
	0x039F9398 LDR X0, [X0 + 0x68]
	0x039F939C CBZ X0, 0x39F93B0
	0x039F93A0 MOVZ W1, 0x1
	0x039F93A4 MOV X2, X31
	0x039F93A8 LDR X30, [X31], #0x10
	0x039F93AC B 0x3E47488
	0x039F93B0 BL 0x1C16F20
	0x039F93B4 STR X30, [X31 - 0x10]!
	0x039F93B8 LDR X0, [X0 + 0x68]
	0x039F93BC CBZ X0, 0x39F93D0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x9E9000
	011 Move W8, [X22+3785]
	012 Move X20, X2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x75B000
	020 Move X0, [X0+2984]
	021 Call 0x1C17CF4
	022 Move X0, 0x75B000
	023 Move X0, [X0+2992]
	024 Call 0x1C17CF4
	025 Move X0, 0x75B000
	026 Move X0, [X0+2784]
	027 Call 0x1C17CF4
	028 Move X0, 0x75B000
	029 Move X0, [X0+2792]
	030 Call 0x1C17CF4
	031 Move X0, 0x6FB000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x75B000
	035 Move X0, [X0+3000]
	036 Call 0x1C17CF4
	037 Move X0, 0x75B000
	038 Move X0, [X0+2944]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+3785], W8
	042 Move X22, [X19+64]
	043 Compare X22, 0
	044 JumpIfEqual {157}
	045 Move W8, [X22+24]
	046 Compare W8, 0
	047 JumpIfEqual {147}
	048 Move X25, 0x75B000
	049 Move X25, [X25+2944]
	050 Subtract W10, W8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move X0, [X25]
	054 Move W9, [X0+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X25]
	059 Move X8, [X0+184]
	060 Move X26, 0x75B000
	061 Move X23, [X8+16]
	062 Move X26, [X26+2992]
	063 Compare X23, 0
	064 JumpIfNotEqual {86}
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X25]
	070 Move X9, 0x75B000
	071 Move X8, [X0+184]
	072 Move X9, [X9+2984]
	073 Move X24, [X8]
	074 Move X0, [X9]
	075 Call 0x1C17F10
	076 Move X8, 0x75B000
	077 Move X8, [X8+3000]
	078 Move X1, X24
	079 Move X3, X31
	080 Move X23, X0
	081 Move X2, [X8]
	082 Call Action`1<Object>..ctor, X0, X1, X2
	083 Move X8, [X25]
	084 Move X8, [X8+184]
	085 Move [X8+16], X23
	086 Move X2, [X26]
	087 Move X0, X22
	088 Move X1, X23
	089 Call List`1<Object>.ForEach, X0, X1
	090 Move X0, [X19+64]
	091 Compare X0, 0
	092 JumpIfEqual {157}
	093 Move X22, 0x75B000
	094 Move X22, [X22+2792]
	095 Move W1, W21
	096 Move X2, [X22]
	097 Call List`1<Object>.get_Item, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {157}
	100 Move X1, X31
	101 Call Component.get_gameObject, X0
	102 Compare X0, 0
	103 JumpIfEqual {157}
	104 Move X23, 0x6FB000
	105 Move X23, [X23+1432]
	106 Move W1, 1
	107 Move X2, X31
	108 Call GameObject.SetActive, X0, X1
	109 Move [X19+72], W21
	110 Move X0, [X23]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X0, X20
	116 Move X1, X31
	117 Move X2, X31
	118 Call Object.op_Equality, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {133}
	123 Move X0, [X19+64]
	124 Compare X0, 0
	125 JumpIfEqual {157}
	126 Move X2, [X22]
	127 Move W1, W21
	128 Call List`1<Object>.get_Item, X0, X1
	129 Compare X0, 0
	130 JumpIfEqual {157}
	131 Call DebugUIHandlerPanel.GetFirstItem, X0
	132 Move X20, X0
	133 Move X0, X19
	134 Move X1, X20
	135 Move X20, [X31+64]
	136 Move X19, [X31+72]
	137 Move X22, [X31+48]
	138 Move X21, [X31+56]
	139 Move X24, [X31+32]
	140 Move X23, [X31+40]
	141 Move X26, [X31+16]
	142 Move X25, [X31+24]
	143 Move W2, 1
	144 Move X30, [X31+80]
	145 Call DebugUIHandlerCanvas.ChangeSelection, X0, X1, X2
	146 Return 
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Move X24, [X31+32]
	152 Move X23, [X31+40]
	153 Move X26, [X31+16]
	154 Move X25, [X31+24]
	155 Move X30, [X31+80]
	156 Return 
	157 Call 0x1C17F20

Method: System.Void ChangeSelection(UnityEngine.Rendering.UI.DebugUIHandlerWidget widget, System.Boolean fromNext)

Disassembly:
	0x039F9560 LDR X0, [X0 + 0xC40]
	0x039F9564 BL 0x1C16CF4
	0x039F9568 MOVZ W8, 0x1
	0x039F956C STRB W8, [X20 + 0xEDB]
	0x039F9570 LDR X0, [X19 + 0x98]
	0x039F9574 CBZ X0, 0x39F9598
	0x039F9578 ADRP X8, 0x75A000
	0x039F957C LDR X8, [X8 + 0xC40]
	0x039F9580 LDR X1, [X8]
	0x039F9584 BL 0x2D19B24
	0x039F9588 LDP X20, X19, [X31 + 0x10]
	0x039F958C MOV V0.16B, V1.16B
	0x039F9590 LDR X30, [X31], #0x20
	0x039F9594 RET
	0x039F9598 BL 0x1C16F20
	0x039F959C MOVZ W2, 0x1
	0x039F95A0 MOV W1, W31
	0x039F95A4 MOV W3, W31
	0x039F95A8 MOV W4, W31
	0x039F95AC B 0x39F91C0
	0x039F95B0 STR X30, [X31 - 0x20]!
	0x039F95B4 STP X20, X19, [X31 + 0x10]
	0x039F95B8 ADRP X20, 0x9E8000
	0x039F95BC LDRB W8, [X20 + 0xEDC]
	0x039F95C0 MOV X19, X0
	0x039F95C4 TBNZ X8, 0x0, 0x39F95DC
	0x039F95C8 ADRP X0, 0x75A000
	0x039F95CC LDR X0, [X0 + 0xC40]
	0x039F95D0 BL 0x1C16CF4
	0x039F95D4 MOVZ W8, 0x1
	0x039F95D8 STRB W8, [X20 + 0xEDC]
	0x039F95DC LDR X0, [X19 + 0x98]
	0x039F95E0 CBZ X0, 0x39F9604
	0x039F95E4 ADRP X8, 0x75A000
	0x039F95E8 LDR X8, [X8 + 0xC40]
	0x039F95EC LDR X1, [X8]
	0x039F95F0 BL 0x2D19B24
	0x039F95F4 LDP X20, X19, [X31 + 0x10]
	0x039F95F8 MOV V0.16B, V2.16B
	0x039F95FC LDR X30, [X31], #0x20
	0x039F9600 RET
	0x039F9604 BL 0x1C16F20
	0x039F9608 MOVZ W3, 0x1
	0x039F960C MOV W1, W31
	0x039F9610 MOV W2, W31
	0x039F9614 MOV W4, W31
	0x039F9618 B 0x39F91C0
	0x039F961C STR X30, [X31 - 0x20]!
	0x039F9620 STP X20, X19, [X31 + 0x10]
	0x039F9624 ADRP X20, 0x9E8000
	0x039F9628 LDRB W8, [X20 + 0xEDD]
	0x039F962C MOV X19, X0
	0x039F9630 TBNZ X8, 0x0, 0x39F9648
	0x039F9634 ADRP X0, 0x75A000
	0x039F9638 LDR X0, [X0 + 0xC40]
	0x039F963C BL 0x1C16CF4
	0x039F9640 MOVZ W8, 0x1
	0x039F9644 STRB W8, [X20 + 0xEDD]
	0x039F9648 LDR X0, [X19 + 0x98]
	0x039F964C CBZ X0, 0x39F9670
	0x039F9650 ADRP X8, 0x75A000
	0x039F9654 LDR X8, [X8 + 0xC40]
	0x039F9658 LDR X1, [X8]
	0x039F965C BL 0x2D19B24
	0x039F9660 LDP X20, X19, [X31 + 0x10]
	0x039F9664 MOV V0.16B, V3.16B
	0x039F9668 LDR X30, [X31], #0x20
	0x039F966C RET
	0x039F9670 BL 0x1C16F20
	0x039F9674 MOVZ W4, 0x1
	0x039F9678 MOV W1, W31
	0x039F967C MOV W2, W31
	0x039F9680 MOV W3, W31
	0x039F9684 B 0x39F91C0
	0x039F9688 STR X30, [X31 - 0x10]!
	0x039F968C LDR X8, [X0 + 0x98]
	0x039F9690 CBZ X8, 0x39F96A0
	0x039F9694 LDR V0, [X8 + 0x64]
	0x039F9698 LDR X30, [X31], #0x10
	0x039F969C RET
	0x039F96A0 BL 0x1C16F20
	0x039F96A4 STR X30, [X31 - 0x10]!
	0x039F96A8 LDR X8, [X0 + 0x98]
	0x039F96AC CBZ X8, 0x39F96BC
	0x039F96B0 LDR V0, [X8 + 0x68]
	0x039F96B4 LDR X30, [X31], #0x10
	0x039F96B8 RET
	0x039F96BC BL 0x1C16F20
	0x039F96C0 STR X30, [X31 - 0x10]!
	0x039F96C4 LDR X8, [X0 + 0x98]
	0x039F96C8 CBZ X8, 0x39F96DC
	0x039F96CC LDR V0, [X8 + 0x6C]
	0x039F96D0 SCVTF S0, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9E9000
	008 Move X23, 0x6FB000
	009 Move W8, [X22+3786]
	010 Move X23, [X23+1432]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6FB000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x6FD000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3786], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {118}
	039 Move X0, [X23]
	040 Move X22, [X19+80]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X22
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {60}
	053 Move X0, [X19+80]
	054 Compare X0, 0
	055 JumpIfEqual {133}
	056 Move X8, [X0]
	057 Move X9, [X8+424]
	058 Move X1, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X22, [X19+80]
	061 Move X0, X19
	062 Move X1, X21
	063 Move [X19+80], X21
	064 Call DebugUIHandlerCanvas.SetScrollTarget, X0, X1
	065 Move X0, [X19+80]
	066 Compare X0, 0
	067 JumpIfEqual {133}
	068 Move X8, [X0]
	069 And W1, W20, 1
	070 Move X2, X22
	071 Move X9, [X8+408]
	072 Move X3, [X8+416]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {99}
	078 Move X0, [X23]
	079 Move X20, [X19+80]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X20
	085 Move X1, X31
	086 Move X2, X31
	087 Call Object.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {112}
	092 Move X8, [X19+80]
	093 Compare X8, 0
	094 JumpIfEqual {133}
	095 Move X8, [X8+88]
	096 Compare X8, 0
	097 JumpIfEqual {112}
	098 Move X8, [X8+56]
	099 Move X0, X19
	100 Move TEMP, X20
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {125}
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Call DebugUIHandlerCanvas.SelectNextItem, X0
	111 Return 
	112 Move X8, 0x6FD000
	113 Move X8, [X8+632]
	114 Move X8, [X8]
	115 Move X8, [X8+184]
	116 Move X8, [X8]
	117 Move [X19+88], X8
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Move X23, [X31+56]
	124 Return 
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X30, [X31+48]
	130 Move X23, [X31+56]
	131 Call DebugUIHandlerCanvas.SelectPreviousItem, X0
	132 Return 
	133 Call 0x1C17F20

Method: System.Void SelectPreviousItem()

Disassembly:
	0x039F9870 B 0x39F9884
	0x039F9874 LDR W9, [X10]
	0x039F9878 ADD W9, W9, 0x1
	0x039F987C ADD X8, X8, W9, 0x4, SXTW
	0x039F9880 ADD X0, X8, 0x138
	0x039F9884 LDP X8, X1, [X0]
	0x039F9888 MOV X0, X20
	0x039F988C BLR X8
	0x039F9890 MOV X21, X0
	0x039F9894 CBZ X0, 0x39F9A08
	0x039F9898 LDR X8, [X21]
	0x039F989C LDR X1, [X24]
	0x039F98A0 LDRB W10, [X8 + 0x130]
	0x039F98A4 LDRB W9, [X1 + 0x130]
	0x039F98A8 CMP W10, W9
	0x039F98AC B.CC 0x39F9A00
	0x039F98B0 LDR X8, [X8 + 0xC8]
	0x039F98B4 ADD X8, X8, X9, 0x3, LSL
	0x039F98B8 LDUR X8, [X8 - 0x8]
	0x039F98BC CMP X8, X1
	0x039F98C0 B.NE 0x39F9A00
	0x039F98C4 MOV X0, X21
	0x039F98C8 MOV X1, X31
	0x039F98CC BL 0x3C32ECC
	0x039F98D0 CBZ X0, 0x39F9A0C
	0x039F98D4 MOV X1, X31
	0x039F98D8 BL 0x3C35834
	0x039F98DC TBZ X0, 0x0, 0x39F97D8
	0x039F98E0 LDR X1, [X25]
	0x039F98E4 MOV X0, X21
	0x039F98E8 BL 0x21A3894
	0x039F98EC MOV X21, X0
	0x039F98F0 LDR X0, [X26]
	0x039F98F4 LDR W8, [X0 + 0xE0]
	0x039F98F8 CBNZ W8, 0x39F9900
	0x039F98FC BL 0x1C16DFC
	0x039F9900 MOV X0, X21
	0x039F9904 MOV X1, X31
	0x039F9908 MOV X2, X31
	0x039F990C BL 0x3C354F8
	0x039F9910 TBZ X0, 0x0, 0x39F97D8
	0x039F9914 CBZ X19, 0x39F9A10
	0x039F9918 LDR W10, [X19 + 0x1C]
	0x039F991C LDR X8, [X19 + 0x10]
	0x039F9920 LDR X9, [X27]
	0x039F9924 ADD W10, W10, 0x1
	0x039F9928 STR W10, [X19 + 0x1C]
	0x039F992C CBZ X8, 0x39F9A14
	0x039F9930 LDRSW X10, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E9000
	006 Move X21, 0x6FB000
	007 Move W8, [X20+3787]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3787], W8
	019 Move X0, [X21]
	020 Move X20, [X19+80]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {64}
	033 Move X0, [X19+80]
	034 Compare X0, 0
	035 JumpIfEqual {69}
	036 Move X8, [X0]
	037 Move X9, [X8+488]
	038 Move X1, [X8+496]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {64}
	055 Move X0, X19
	056 Move X1, X20
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W2, W31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call DebugUIHandlerCanvas.ChangeSelection, X0, X1, X2
	063 Return 
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Call 0x1C17F20

Method: System.Void SelectNextPanel()

Disassembly:
	0x039F9934 LDR W11, [X8 + 0x18]
	0x039F9938 CMP W10, W11
	0x039F993C B.CS 0x39F9954
	0x039F9940 ADD W9, W10, 0x1
	0x039F9944 ADD X8, X8, X10, 0x3, LSL
	0x039F9948 STR W9, [X19 + 0x18]
	0x039F994C STR X21, [X8 + 0x20]
	0x039F9950 B 0x39F97D8
	0x039F9954 LDR X8, [X9 + 0x20]
	0x039F9958 LDR X8, [X8 + 0xC0]
	0x039F995C LDR X2, [X8 + 0x70]
	0x039F9960 MOV X0, X19
	0x039F9964 MOV X1, X21
	0x039F9968 BL 0x301BF90
	0x039F996C B 0x39F97D8
	0x039F9970 MOV X21, X31
	0x039F9974 LDR X1, [X22]
	0x039F9978 MOV X0, X20
	0x039F997C BL 0x1C16E00
	0x039F9980 CBZ X0, 0x39F99E0
	0x039F9984 LDR X8, [X0]
	0x039F9988 LDR X1, [X22]
	0x039F998C MOV X20, X0
	0x039F9990 LDRH W9, [X8 + 0x12E]
	0x039F9994 CBZ X9, 0x39F99B8
	0x039F9998 LDR X10, [X8 + 0xB0]
	0x039F999C ADD X10, X10, 0x8
	0x039F99A0 LDUR X11, [X10 - 0x8]
	0x039F99A4 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E9000
	005 Move W8, [X20+3788]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x75B000
	012 Move X0, [X0+2784]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3788], W8
	016 Move X8, [X19+64]
	017 Compare X8, 0
	018 JumpIfEqual {36}
	019 Move W9, [X19+72]
	020 Move W8, [X8+24]
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Add W9, W9, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Subtract W10, W8, 1
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Call DebugUIHandlerCanvas.ActivatePanel, X0, X1, X2
	035 Return 
	036 Call 0x1C17F20

Method: System.Void SelectPreviousPanel()

Disassembly:
	0x039F99A8 B.EQ 0x39F99C8
	0x039F99AC SUBS X9, X9, 0x1
	0x039F99B0 ADD X10, X10, 0x10
	0x039F99B4 B.NE 0x39F99A0
	0x039F99B8 MOV X0, X20
	0x039F99BC MOV W2, W31
	0x039F99C0 BL 0x1C5C788
	0x039F99C4 B 0x39F99D4
	0x039F99C8 LDRSW X9, [X10]
	0x039F99CC ADD X8, X8, X9, 0x4, LSL
	0x039F99D0 ADD X0, X8, 0x138
	0x039F99D4 LDP X8, X1, [X0]
	0x039F99D8 MOV X0, X20
	0x039F99DC BLR X8
	0x039F99E0 CBNZ X21, 0x39F9A20
	0x039F99E4 MOV X0, X19
	0x039F99E8 LDP X20, X19, [X31 + 0x40]
	0x039F99EC LDP X22, X21, [X31 + 0x30]
	0x039F99F0 LDP X24, X23, [X31 + 0x20]
	0x039F99F4 LDP X26, X25, [X31 + 0x10]
	0x039F99F8 LDP X30, X27, [X31], #0x50
	0x039F99FC RET
	0x039F9A00 MOV X0, X21
	0x039F9A04 BL 0x1C171E0
	0x039F9A08 BL 0x1C16F20
	0x039F9A0C BL 0x1C16F20
	0x039F9A10 BL 0x1C16F20
	0x039F9A14 BL 0x1C16F20
	0x039F9A18 BL 0x1C16F20
	0x039F9A1C BL 0x1C16F20
	0x039F9A20 MOV X0, X21
	0x039F9A24 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E9000
	005 Move W8, [X20+3789]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x75B000
	012 Move X0, [X0+2784]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3789], W8
	016 Move W9, [X19+72]
	017 Move X8, [X19+64]
	018 Subtract W9, W9, 1
	019 Compare X8, 0
	020 JumpIfNotEqual {25}
	021 Compare X8, 0
	022 JumpIfEqual {38}
	023 Move W9, [X8+24]
	024 Subtract W9, W9, 1
	025 Move W8, [X8+24]
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, X31
	030 Subtract W8, W8, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move X30, [X31+32]
	036 Call DebugUIHandlerCanvas.ActivatePanel, X0, X1, X2
	037 Return 
	038 Call 0x1C17F20

Method: System.Void SelectNextItem()

Disassembly:
	0x039F97AC CBZ X0, 0x39F9A1C
	0x039F97B0 ADRP X23, 0x6FA000
	0x039F97B4 ADRP X24, 0x6FC000
	0x039F97B8 ADRP X25, 0x75A000
	0x039F97BC ADRP X26, 0x6FA000
	0x039F97C0 ADRP X27, 0x75A000
	0x039F97C4 LDR X23, [X23 + 0xE18]
	0x039F97C8 LDR X24, [X24 + 0x638]
	0x039F97CC LDR X25, [X25 + 0xC58]
	0x039F97D0 LDR X26, [X26 + 0x598]
	0x039F97D4 LDR X27, [X27 + 0xC60]
	0x039F97D8 LDR X8, [X20]
	0x039F97DC LDR X1, [X23]
	0x039F97E0 LDRH W9, [X8 + 0x12E]
	0x039F97E4 CBZ X9, 0x39F9808
	0x039F97E8 LDR X10, [X8 + 0xB0]
	0x039F97EC ADD X10, X10, 0x8
	0x039F97F0 LDUR X11, [X10 - 0x8]
	0x039F97F4 CMP X11, X1
	0x039F97F8 B.EQ 0x39F9818
	0x039F97FC SUBS X9, X9, 0x1
	0x039F9800 ADD X10, X10, 0x10
	0x039F9804 B.NE 0x39F97F0
	0x039F9808 MOV X0, X20
	0x039F980C MOV W2, W31
	0x039F9810 BL 0x1C5C788
	0x039F9814 B 0x39F9824
	0x039F9818 LDRSW X9, [X10]
	0x039F981C ADD X8, X8, X9, 0x4, LSL
	0x039F9820 ADD X0, X8, 0x138
	0x039F9824 LDP X8, X1, [X0]
	0x039F9828 MOV X0, X20
	0x039F982C BLR X8
	0x039F9830 TBZ X0, 0x0, 0x39F9970
	0x039F9834 LDR X8, [X20]
	0x039F9838 LDR X1, [X23]
	0x039F983C LDRH W9, [X8 + 0x12E]
	0x039F9840 CBZ X9, 0x39F9864
	0x039F9844 LDR X10, [X8 + 0xB0]
	0x039F9848 ADD X10, X10, 0x8
	0x039F984C LDUR X11, [X10 - 0x8]
	0x039F9850 CMP X11, X1
	0x039F9854 B.EQ 0x39F9874
	0x039F9858 SUBS X9, X9, 0x1
	0x039F985C ADD X10, X10, 0x10
	0x039F9860 B.NE 0x39F984C
	0x039F9864 MOVZ W2, 0x1
	0x039F9868 MOV X0, X20
	0x039F986C BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E9000
	006 Move X21, 0x6FB000
	007 Move W8, [X20+3790]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3790], W8
	019 Move X0, [X21]
	020 Move X20, [X19+80]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {64}
	033 Move X0, [X19+80]
	034 Compare X0, 0
	035 JumpIfEqual {69}
	036 Move X8, [X0]
	037 Move X9, [X8+504]
	038 Move X1, [X8+512]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {64}
	055 Move X0, X19
	056 Move X1, X20
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W2, 1
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call DebugUIHandlerCanvas.ChangeSelection, X0, X1, X2
	063 Return 
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 
	069 Call 0x1C17F20

Method: System.Void ChangeSelectionValue(System.Single multiplier)

Disassembly:
	0x039F9A28 B 0x39F9A58
	0x039F9A2C B 0x39F9A58
	0x039F9A30 B 0x39F9A58
	0x039F9A34 B 0x39F9A58
	0x039F9A38 B 0x39F9A58
	0x039F9A3C B 0x39F9A58
	0x039F9A40 B 0x39F9A58
	0x039F9A44 B 0x39F9A58
	0x039F9A48 B 0x39F9A58
	0x039F9A4C B 0x39F9A58
	0x039F9A50 B 0x39F9A58
	0x039F9A54 B 0x39F9A58
	0x039F9A58 CMP W1, 0x1
	0x039F9A5C B.NE 0x39F9A70
	0x039F9A60 BL 0x3EB1AD0
	0x039F9A64 LDR X21, [X0]
	0x039F9A68 BL 0x3EB1AE0
	0x039F9A6C B 0x39F9974
	0x039F9A70 MOV X19, X0
	0x039F9A74 MOV X21, X31
	0x039F9A78 B 0x39F9A80
	0x039F9A7C MOV X19, X0
	0x039F9A80 LDR X1, [X22]
	0x039F9A84 MOV X0, X20
	0x039F9A88 BL 0x1C16E00
	0x039F9A8C MOV X20, X0
	0x039F9A90 CBZ X0, 0x39F9AEC
	0x039F9A94 LDR X8, [X20]
	0x039F9A98 LDR X1, [X22]
	0x039F9A9C LDRH W9, [X8 + 0x12E]
	0x039F9AA0 CBZ X9, 0x39F9AC4
	0x039F9AA4 LDR X10, [X8 + 0xB0]
	0x039F9AA8 ADD X10, X10, 0x8
	0x039F9AAC LDUR X11, [X10 - 0x8]
	0x039F9AB0 CMP X11, X1
	0x039F9AB4 B.EQ 0x39F9AD4
	0x039F9AB8 SUBS X9, X9, 0x1
	0x039F9ABC ADD X10, X10, 0x10
	0x039F9AC0 B.NE 0x39F9AAC
	0x039F9AC4 MOV X0, X20
	0x039F9AC8 MOV W2, W31
	0x039F9ACC BL 0x1C5C788
	0x039F9AD0 B 0x39F9AE0
	0x039F9AD4 LDRSW X9, [X10]
	0x039F9AD8 ADD X8, X8, X9, 0x4, LSL
	0x039F9ADC ADD X0, X8, 0x138
	0x039F9AE0 LDP X8, X1, [X0]
	0x039F9AE4 MOV X0, X20
	0x039F9AE8 BLR X8
	0x039F9AEC CBNZ X21, 0x39F9AF8
	0x039F9AF0 MOV X0, X19
	0x039F9AF4 BL 0x1D2C690
	0x039F9AF8 MOV X0, X21
	0x039F9AFC BL 0x1C16F18
	0x039F9B00 BL 0x1990590
	0x039F9B04 MOV X1, X31
	0x039F9B08 B 0x33BDD8C
	0x039F9B0C MOV X1, X31
	0x039F9B10 B 0x3C36C30

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9E9000
	007 Move X20, 0x6FB000
	008 Move W8, [X21+3791]
	009 Move X20, [X20+1432]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x758000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move X0, 0x6FB000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3791], W8
	024 Move X0, [X20]
	025 Move X20, [X19+80]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {44}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Move V8, [X31+48]
	043 Return 
	044 Move X8, 0x758000
	045 Move X8, [X8+1912]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call DebugManager.get_instance
	053 Compare X0, 0
	054 JumpIfEqual {75}
	055 Move W1, 7
	056 Move X2, X31
	057 Call DebugManager.GetAction, X0, X1
	058 Move X0, [X19+80]
	059 Compare X0, 0
	060 JumpIfEqual {75}
	061 Move X8, [X0]
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X3, [X8+472]
	064 Move X2, [X8+480]
	065 Move X3, [X8+456]
	066 Move X2, [X8+464]
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move V8, [X31+48]
	074 CallNoReturn X3
	075 Call 0x1C17F20

Method: System.Void ActivateSelection()

Disassembly:
	0x039F9B14 STR X30, [X31 - 0x30]!
	0x039F9B18 STP X22, X21, [X31 + 0x10]
	0x039F9B1C STP X20, X19, [X31 + 0x20]
	0x039F9B20 ADRP X22, 0x9E8000
	0x039F9B24 ADRP X21, 0x6FA000
	0x039F9B28 LDRB W8, [X22 + 0xEE2]
	0x039F9B2C LDR X21, [X21 + 0x598]
	0x039F9B30 MOV X19, X1
	0x039F9B34 MOV X20, X0
	0x039F9B38 TBNZ X8, 0x0, 0x39F9B50
	0x039F9B3C ADRP X0, 0x6FA000
	0x039F9B40 LDR X0, [X0 + 0x598]
	0x039F9B44 BL 0x1C16CF4
	0x039F9B48 MOVZ W8, 0x1
	0x039F9B4C STRB W8, [X22 + 0xEE2]
	0x039F9B50 LDR X0, [X21]
	0x039F9B54 LDR X20, [X20 + 0x10]
	0x039F9B58 LDR W8, [X0 + 0xE0]
	0x039F9B5C CBNZ W8, 0x39F9B64
	0x039F9B60 BL 0x1C16DFC
	0x039F9B64 MOV X0, X19
	0x039F9B68 MOV X1, X20
	0x039F9B6C LDP X20, X19, [X31 + 0x20]
	0x039F9B70 LDP X22, X21, [X31 + 0x10]
	0x039F9B74 MOV X2, X31
	0x039F9B78 LDR X30, [X31], #0x30
	0x039F9B7C B 0x3C3883C
	0x039F9B80 STR X30, [X31 - 0x30]!
	0x039F9B84 STP X22, X21, [X31 + 0x10]
	0x039F9B88 STP X20, X19, [X31 + 0x20]
	0x039F9B8C ADRP X20, 0x9E8000
	0x039F9B90 LDRB W8, [X20 + 0xEE3]
	0x039F9B94 MOV W21, W1
	0x039F9B98 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9E9000
	006 Move X20, 0x6FB000
	007 Move W8, [X21+3792]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3792], W8
	019 Move X0, [X20]
	020 Move X20, [X19+80]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {38}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X0, [X19+80]
	039 Compare X0, 0
	040 JumpIfEqual {49}
	041 Move X8, [X0]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, [X8+440]
	045 Move X1, [X8+448]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 CallNoReturn X2
	049 Call 0x1C17F20

Method: System.Void HandleInput()

Disassembly:
	0x039F7F80 MOV X0, X19
	0x039F7F84 MOV W2, W31
	0x039F7F88 LDR X3, [X8]
	0x039F7F8C BL 0x222D4F8
	0x039F7F90 CBZ X0, 0x39F81C0
	0x039F7F94 MOV X1, X31
	0x039F7F98 BL 0x3C32ECC
	0x039F7F9C CBZ X0, 0x39F81C0
	0x039F7FA0 LDR X1, [X28 + 0x28]
	0x039F7FA4 MOV X2, X31
	0x039F7FA8 MOV X19, X0
	0x039F7FAC BL 0x3C38A84
	0x039F7FB0 ADRP X8, 0x75C000
	0x039F7FB4 LDR X8, [X8 + 0xB90]
	0x039F7FB8 MOV X0, X19
	0x039F7FBC LDR X1, [X8]
	0x039F7FC0 BL 0x21E52E4
	0x039F7FC4 MOV X1, X31
	0x039F7FC8 MOV X2, X31
	0x039F7FCC MOV X29, X0
	0x039F7FD0 BL 0x3C3883C
	0x039F7FD4 TBZ X0, 0x0, 0x39F8094
	0x039F7FD8 MOV X0, X28
	0x039F7FDC MOV X1, X31
	0x039F7FE0 BL 0x33BE520
	0x039F7FE4 ADRP X8, 0x75C000
	0x039F7FE8 LDR X8, [X8 + 0xBA0]
	0x039F7FEC LDR X10, [X31 + 0x10]
	0x039F7FF0 CMP X0, 0x0
	0x039F7FF4 LDR X19, [X8]
	0x039F7FF8 CSEL X10, X10, X0, EQ
	0x039F7FFC STR X10, [X31 + 0x10]
	0x039F8000 CBZ X0, 0x39F8054
	0x039F8004 CBZ X10, 0x39F81C0
	0x039F8008 LDR X8, [X10]
	0x039F800C MOV X0, X10
	0x039F8010 B 0x39F8044
	0x039F8014 MOV X0, X28
	0x039F8018 MOV X1, X31
	0x039F801C BL 0x33BE520
	0x039F8020 ADRP X8, 0x75B000
	0x039F8024 LDR X8, [X8 + 0xB98]
	0x039F8028 CMP X0, 0x0
	0x039F802C CSEL X25, X25, X0, EQ
	0x039F8030 LDR X19, [X8]
	0x039F8034 CBZ X0, 0x39F8054
	0x039F8038 CBZ X25, 0x39F81C0
	0x039F803C LDR X8, [X25]
	0x039F8040 MOV X0, X25
	0x039F8044 LDP X9, X1, [X8 + 0x168]
	0x039F8048 BLR X9
	0x039F804C MOV X1, X0
	0x039F8050 B 0x39F8058
	0x039F8054 MOV X1, X31
	0x039F8058 MOV X0, X19
	0x039F805C MOV X2, X31
	0x039F8060 BL 0x321B938
	0x039F8064 ADRP X8, 0x6FB000
	0x039F8068 LDR X8, [X8 + 0xA28]
	0x039F806C MOV X19, X0
	0x039F8070 LDR X8, [X8]
	0x039F8074 LDR W9, [X8 + 0xE0]
	0x039F8078 CBNZ W9, 0x39F8084
	0x039F807C MOV X0, X8
	0x039F8080 BL 0x1C16DFC
	0x039F8084 MOV X0, X19
	0x039F8088 MOV X1, X31
	0x039F808C BL 0x3C06A04
	0x039F8090 B 0x39F8198
	0x039F8094 LDR X8, [X31 + 0x20]
	0x039F8098 MOV X1, X31
	0x039F809C LDR X0, [X8 + 0x58]
	0x039F80A0 BL 0x32277A8
	0x039F80A4 TBNZ X0, 0x0, 0x39F80CC
	0x039F80A8 LDR X0, [X28 + 0x38]
	0x039F80AC CBZ X0, 0x39F81C0
	0x039F80B0 LDR X8, [X31 + 0x20]
	0x039F80B4 MOV X2, X31
	0x039F80B8 LDR X1, [X8 + 0x58]
	0x039F80BC BL 0x322693C
	0x039F80C0 TBZ X0, 0x0, 0x39F80CC
	0x039F80C4 LDR X8, [X31]
	0x039F80C8 STR X29, [X8]
	0x039F80CC ADRP X8, 0x6FB000
	0x039F80D0 LDR X8, [X8 + 0x598]
	0x039F80D4 LDR X0, [X8]
	0x039F80D8 LDR W8, [X0 + 0xE0]
	0x039F80DC CBNZ W8, 0x39F80E4
	0x039F80E0 BL 0x1C16DFC
	0x039F80E4 MOV X0, X23
	0x039F80E8 MOV X1, X31
	0x039F80EC MOV X2, X31
	0x039F80F0 BL 0x3C354F8
	0x039F80F4 TBZ X0, 0x0, 0x39F8100
	0x039F80F8 CBZ X23, 0x39F81C0
	0x039F80FC STR X29, [X23 + 0x50]
	0x039F8100 CBZ X29, 0x39F81C0
	0x039F8104 LDR X9, [X31 + 0x8]
	0x039F8108 LDR X8, [X29]
	0x039F810C MOV X0, X29
	0x039F8110 MOV X1, X28
	0x039F8114 STP X9, X23, [X29 + 0x40]
	0x039F8118 LDP X9, X2, [X8 + 0x188]
	0x039F811C BLR X9
	0x039F8120 ADRP X8, 0x75B000
	0x039F8124 LDR X8, [X8 + 0xB30]
	0x039F8128 MOV X0, X19
	0x039F812C LDR X1, [X8]
	0x039F8130 BL 0x21E52E4
	0x039F8134 ADRP X8, 0x6FB000
	0x039F8138 LDR X8, [X8 + 0x598]
	0x039F813C MOV X19, X0
	0x039F8140 LDR X8, [X8]
	0x039F8144 LDR W9, [X8 + 0xE0]
	0x039F8148 CBNZ W9, 0x39F8154
	0x039F814C MOV X0, X8
	0x039F8150 BL 0x1C16DFC
	0x039F8154 MOV X0, X19
	0x039F8158 MOV X1, X31
	0x039F815C MOV X2, X31
	0x039F8160 BL 0x3C354F8
	0x039F8164 TBZ X0, 0x0, 0x39F8194
	0x039F8168 LDR X1, [X20]
	0x039F816C MOV X0, X28
	0x039F8170 BL 0x1C16E00
	0x039F8174 CBZ X0, 0x39F8194
	0x039F8178 CBZ X19, 0x39F81C0
	0x039F817C MOV X1, X0
	0x039F8180 LDR X2, [X19 + 0x20]
	0x039F8184 LDR X0, [X31 + 0x20]
	0x039F8188 LDR X4, [X31]
	0x039F818C MOV X3, X29
	0x039F8190 BL 0x39F7D38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9EB000
	006 Move X21, 0x75A000
	007 Move W8, [X20+3793]
	008 Move X21, [X21+1912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x75A000
	015 Move X0, [X0+1912]
	016 Call 0x1C17CF4
	017 Move X0, 0x6FD000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3793], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call DebugManager.get_instance
	029 Compare X0, 0
	030 JumpIfEqual {158}
	031 Move W1, 1
	032 Move X2, X31
	033 Call DebugManager.GetAction, X0, X1
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move X0, X19
	036 Call DebugUIHandlerCanvas.SelectPreviousPanel, X0
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X31
	043 Call DebugManager.get_instance
	044 Compare X0, 0
	045 JumpIfEqual {158}
	046 Move W1, 2
	047 Move X2, X31
	048 Call DebugManager.GetAction, X0, X1
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move X0, X19
	051 Call DebugUIHandlerCanvas.SelectNextPanel, X0
	052 Move X0, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X31
	058 Call DebugManager.get_instance
	059 Compare X0, 0
	060 JumpIfEqual {158}
	061 Move W1, 3
	062 Move X2, X31
	063 Call DebugManager.GetAction, X0, X1
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move X0, X19
	066 Call DebugUIHandlerCanvas.ActivateSelection, X0
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X31
	073 Call DebugManager.get_instance
	074 Compare X0, 0
	075 JumpIfEqual {158}
	076 Move W1, 4
	077 Move X2, X31
	078 Call DebugManager.GetAction, X0, X1
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move X8, 0x6FC000
	081 Move X8, [X8+1432]
	082 Move X20, [X19+80]
	083 Move X0, [X8]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X31
	090 Move X2, X31
	091 Call Object.op_Inequality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {112}
	096 Move X0, [X21]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X31
	102 Call DebugManager.get_instance
	103 Move X8, [X19+80]
	104 Compare X8, 0
	105 JumpIfEqual {158}
	106 Compare X0, 0
	107 JumpIfEqual {158}
	108 Move X1, [X8+88]
	109 Move X2, X31
	110 Move X3, X31
	111 Call DebugManager.TogglePersistent, X0, X1, X2
	112 Move X0, [X21]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X31
	118 Call DebugManager.get_instance
	119 Compare X0, 0
	120 JumpIfEqual {158}
	121 Move W1, 6
	122 Move X2, X31
	123 Call DebugManager.GetAction, X0, X1
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move X0, X19
	126 Call DebugUIHandlerCanvas.ChangeSelectionValue, X0, V0
	127 Move X0, [X21]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X31
	133 Call DebugManager.get_instance
	134 Compare X0, 0
	135 JumpIfEqual {158}
	136 Move W1, 5
	137 Move X2, X31
	138 Call DebugManager.GetAction, X0, X1
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 Move X0, X19
	141 Move X20, [X31+16]
	142 Move X19, [X31+24]
	143 Move X30, [X31+32]
	144 Move X21, [X31+40]
	145 Call DebugUIHandlerCanvas.SelectNextItem, X0
	146 Return 
	147 Move X20, [X31+16]
	148 Move X19, [X31+24]
	149 Move X30, [X31+32]
	150 Move X21, [X31+40]
	151 Return 
	152 Move X20, [X31+16]
	153 Move X19, [X31+24]
	154 Move X30, [X31+32]
	155 Move X21, [X31+40]
	156 Call DebugUIHandlerCanvas.SelectPreviousItem, X0
	157 Return 
	158 Call 0x1C17F20

Method: System.Void SetScrollTarget(UnityEngine.Rendering.UI.DebugUIHandlerWidget widget)

Disassembly:
	0x039F96D4 LDR X30, [X31], #0x10
	0x039F96D8 RET
	0x039F96DC BL 0x1C16F20
	0x039F96E0 STP X30, X27, [X31 - 0x50]!
	0x039F96E4 STP X26, X25, [X31 + 0x10]
	0x039F96E8 STP X24, X23, [X31 + 0x20]
	0x039F96EC STP X22, X21, [X31 + 0x30]
	0x039F96F0 STP X20, X19, [X31 + 0x40]
	0x039F96F4 ADRP X21, 0x9E8000
	0x039F96F8 ADRP X22, 0x75A000
	0x039F96FC ADRP X19, 0x75A000
	0x039F9700 LDRB W8, [X21 + 0xEE1]
	0x039F9704 LDR X22, [X22 + 0xC48]
	0x039F9708 LDR X19, [X19 + 0xC50]
	0x039F970C MOV X20, X0
	0x039F9710 TBNZ X8, 0x0, 0x39F977C
	0x039F9714 ADRP X0, 0x75A000
	0x039F9718 LDR X0, [X0 + 0xC58]
	0x039F971C BL 0x1C16CF4
	0x039F9720 ADRP X0, 0x6FA000
	0x039F9724 LDR X0, [X0 + 0xE00]
	0x039F9728 BL 0x1C16CF4
	0x039F972C ADRP X0, 0x6FA000
	0x039F9730 LDR X0, [X0 + 0xE18]
	0x039F9734 BL 0x1C16CF4
	0x039F9738 ADRP X0, 0x75A000
	0x039F973C LDR X0, [X0 + 0xC60]
	0x039F9740 BL 0x1C16CF4
	0x039F9744 ADRP X0, 0x75A000
	0x039F9748 LDR X0, [X0 + 0xC50]
	0x039F974C BL 0x1C16CF4
	0x039F9750 ADRP X0, 0x75A000
	0x039F9754 LDR X0, [X0 + 0xC48]
	0x039F9758 BL 0x1C16CF4
	0x039F975C ADRP X0, 0x6FA000
	0x039F9760 LDR X0, [X0 + 0x598]
	0x039F9764 BL 0x1C16CF4
	0x039F9768 ADRP X0, 0x6FC000
	0x039F976C LDR X0, [X0 + 0x638]
	0x039F9770 BL 0x1C16CF4
	0x039F9774 MOVZ W8, 0x1
	0x039F9778 STRB W8, [X21 + 0xEE1]
	0x039F977C LDR X0, [X22]
	0x039F9780 BL 0x1C16F10
	0x039F9784 LDR X1, [X19]
	0x039F9788 MOV X19, X0
	0x039F978C BL 0x301B7C4
	0x039F9790 LDR X0, [X20 + 0x20]
	0x039F9794 CBZ X0, 0x39F9A18
	0x039F9798 ADRP X22, 0x6FA000
	0x039F979C LDR X22, [X22 + 0xE00]
	0x039F97A0 MOV X1, X31
	0x039F97A4 BL 0x3C4100C
	0x039F97A8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9E9000
	007 Move W8, [X21+3794]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x75B000
	015 Move X0, [X0+2784]
	016 Call 0x1C17CF4
	017 Move X0, 0x75B000
	018 Move X0, [X0+2792]
	019 Call 0x1C17CF4
	020 Move X0, 0x6FB000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3794], W8
	025 Move X0, [X20+64]
	026 Compare X0, 0
	027 JumpIfEqual {61}
	028 Move W1, [X20+72]
	029 Move W8, [X0+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, 0x75B000
	032 Move X22, [X22+2792]
	033 Move X2, [X22]
	034 Call List`1<Object>.get_Item, X0, X1
	035 Move X8, 0x6FB000
	036 Move X8, [X8+1432]
	037 Move X21, X0
	038 Move X8, [X8]
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {61}
	052 Move X0, [X20+64]
	053 Compare X0, 0
	054 JumpIfEqual {67}
	055 Move W1, [X20+72]
	056 Move X2, [X22]
	057 Call List`1<Object>.get_Item, X0, X1
	058 Compare X0, 0
	059 JumpIfEqual {67}
	060 Move [X0+88], X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039F9B9C TBNZ X8, 0x0, 0x39F9BB4
	0x039F9BA0 ADRP X0, 0x758000

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

