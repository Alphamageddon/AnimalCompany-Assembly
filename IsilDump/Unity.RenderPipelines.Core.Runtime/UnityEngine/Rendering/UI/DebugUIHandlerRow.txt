Type: UnityEngine.Rendering.UI.DebugUIHandlerRow

Method: System.Void OnEnable()

Disassembly:
	0x039FE0C4 B 0x39FE114
	0x039FE0C8 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X0+128], W31
	002 Return 

Method: UnityEngine.GameObject GetChild(System.Int32 index)

Disassembly:
	0x039FE0CC MOVN W9, 0x0
	0x039FE0D0 STR W9, [X19 + 0x10]
	0x039FE0D4 CBZ X8, 0x39FE120
	0x039FE0D8 LDR X9, [X8 + 0x78]
	0x039FE0DC CBZ X9, 0x39FE120
	0x039FE0E0 LDR X9, [X9 + 0x48]
	0x039FE0E4 CBZ X9, 0x39FE120
	0x039FE0E8 LDR X19, [X8 + 0x68]
	0x039FE0EC LDR X8, [X9 + 0x18]
	0x039FE0F0 LDR X0, [X9 + 0x40]
	0x039FE0F4 LDR X1, [X9 + 0x28]
	0x039FE0F8 BLR X8
	0x039FE0FC CBZ X19, 0x39FE120
	0x039FE100 AND W1, W0, 0x1
	0x039FE104 MOV X0, X19
	0x039FE108 MOV X2, X31
	0x039FE10C BL 0x3E47488
	0x039FE110 MOV W0, W31
	0x039FE114 LDP X20, X19, [X31 + 0x10]
	0x039FE118 LDR X30, [X31], #0x20
	0x039FE11C RET
	0x039FE120 BL 0x1C16F20
	0x039FE124 LDR X0, [X0 + 0x18]
	0x039FE128 RET
	0x039FE12C STP X30, X19, [X31 - 0x10]!
	0x039FE130 ADRP X0, 0x6F5000
	0x039FE134 LDR X0, [X0 + 0xB40]
	0x039FE138 BL 0x1C16D08
	0x039FE13C BL 0x1C16F10
	0x039FE140 MOV X1, X31
	0x039FE144 MOV X19, X0
	0x039FE148 BL 0x3380310
	0x039FE14C ADRP X0, 0x755000
	0x039FE150 LDR X0, [X0 + 0xEA0]
	0x039FE154 BL 0x1C16D08
	0x039FE158 MOV X1, X0
	0x039FE15C MOV X0, X19
	0x039FE160 BL 0x1C16DEC
	0x039FE164 LDR X0, [X0 + 0x18]
	0x039FE168 RET
	0x039FE16C STR X30, [X31 - 0x30]!
	0x039FE170 STP X22, X21, [X31 + 0x10]
	0x039FE174 STP X20, X19, [X31 + 0x20]
	0x039FE178 ADRP X22, 0x9E3000
	0x039FE17C ADRP X21, 0x755000
	0x039FE180 LDRB W8, [X22 + 0xF1D]
	0x039FE184 LDR X21, [X21 + 0xEA8]
	0x039FE188 MOV X20, X1
	0x039FE18C MOV X19, X0
	0x039FE190 TBNZ X8, 0x0, 0x39FE1A8
	0x039FE194 ADRP X0, 0x755000
	0x039FE198 LDR X0, [X0 + 0xEA8]
	0x039FE19C BL 0x1C16CF4
	0x039FE1A0 MOVZ W8, 0x1
	0x039FE1A4 STRB W8, [X22 + 0xF1D]
	0x039FE1A8 STR X20, [X19 + 0x58]
	0x039FE1AC LDR X1, [X21]
	0x039FE1B0 MOV X0, X19
	0x039FE1B4 BL 0x21A8CFC
	0x039FE1B8 STR X0, [X19 + 0x70]
	0x039FE1BC CBZ X0, 0x39FE1F4
	0x039FE1C0 LDR X8, [X19 + 0x60]
	0x039FE1C4 CBZ X8, 0x39FE1F4
	0x039FE1C8 LDR X9, [X8]
	0x039FE1CC LDR X1, [X0 + 0x28]
	0x039FE1D0 MOV X0, X8
	0x039FE1D4 LDR X10, [X9 + 0x5E8]
	0x039FE1D8 LDR X2, [X9 + 0x5F0]
	0x039FE1DC BLR X10
	0x039FE1E0 MOV X0, X19
	0x039FE1E4 LDP X20, X19, [X31 + 0x20]
	0x039FE1E8 LDP X22, X21, [X31 + 0x10]
	0x039FE1EC LDR X30, [X31], #0x30
	0x039FE1F0 B 0x39FE1F8
	0x039FE1F4 BL 0x1C16F20
	0x039FE1F8 SUB X31, X31, 0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9E4000
	007 Move W8, [X21+3858]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6F6000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3858], W8
	019 Move TEMP, X19
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {94}
	023 Move X0, X20
	024 Move X1, X31
	025 Call Component.get_gameObject, X0
	026 Compare X0, 0
	027 JumpIfEqual {101}
	028 Move X22, 0x6F6000
	029 Move X22, [X22+1432]
	030 Move X1, X31
	031 Call GameObject.get_transform, X0
	032 Move X8, [X22]
	033 Move X21, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X21
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {94}
	047 Move X0, X20
	048 Move X1, X31
	049 Call Component.get_gameObject, X0
	050 Compare X0, 0
	051 JumpIfEqual {101}
	052 Move X1, X31
	053 Call GameObject.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {101}
	056 Move W1, 1
	057 Move X2, X31
	058 Call Transform.GetChild, X0, X1
	059 Move X8, [X22]
	060 Move X20, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Inequality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {94}
	074 Compare X20, 0
	075 JumpIfEqual {101}
	076 Move X0, X20
	077 Move X1, X31
	078 Call Transform.get_childCount, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X20
	081 Move W1, W19
	082 Move X2, X31
	083 Call Transform.GetChild, X0, X1
	084 Compare X0, 0
	085 JumpIfEqual {101}
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X1, X31
	091 Move X30, [X31+48]
	092 Call Component.get_gameObject, X0
	093 Return X0
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X0, X31
	099 Move X30, [X31+48]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Boolean TryGetChild(System.Int32 index, out UnityEngine.GameObject child)

Disassembly:
	0x039FE1FC STP X30, X21, [X31 + 0x10]
	0x039FE200 STP X20, X19, [X31 + 0x20]
	0x039FE204 ADRP X21, 0x9E3000
	0x039FE208 ADRP X20, 0x6F5000
	0x039FE20C LDRB W8, [X21 + 0xF1F]
	0x039FE210 LDR X20, [X20 + 0x598]
	0x039FE214 MOV X19, X0
	0x039FE218 TBNZ X8, 0x0, 0x39FE248
	0x039FE21C ADRP X0, 0x755000
	0x039FE220 LDR X0, [X0 + 0xEB0]
	0x039FE224 BL 0x1C16CF4
	0x039FE228 ADRP X0, 0x6F5000
	0x039FE22C LDR X0, [X0 + 0x598]
	0x039FE230 BL 0x1C16CF4
	0x039FE234 ADRP X0, 0x6FA000
	0x039FE238 LDR X0, [X0 + 0x98]
	0x039FE23C BL 0x1C16CF4
	0x039FE240 MOVZ W8, 0x1
	0x039FE244 STRB W8, [X21 + 0xF1F]
	0x039FE248 LDR X0, [X20]
	0x039FE24C LDR X20, [X19 + 0x68]
	0x039FE250 LDR W8, [X0 + 0xE0]
	0x039FE254 CBNZ W8, 0x39FE25C
	0x039FE258 BL 0x1C16DFC
	0x039FE25C MOV X0, X20
	0x039FE260 MOV X1, X31
	0x039FE264 MOV X2, X31
	0x039FE268 BL 0x3C354F8
	0x039FE26C TBZ X0, 0x0, 0x39FE2C4
	0x039FE270 LDR X0, [X19 + 0x70]
	0x039FE274 CBZ X0, 0x39FE2D4
	0x039FE278 ADRP X8, 0x755000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9E4000
	008 Move X22, 0x6F6000
	009 Move W8, [X23+3859]
	010 Move X22, [X22+1432]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x6F6000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3859], W8
	023 Move X0, X21
	024 Move W1, W20
	025 Call DebugUIHandlerRow.GetChild, X0, X1
	026 Move [X19], X0
	027 Move X20, X0
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X1, X31
	039 Move X2, X31
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call Object.op_Inequality, X0, X1
	043 Return X0

Method: System.Boolean IsActive(UnityEngine.Rendering.DebugUI/Table table, System.Int32 index, UnityEngine.GameObject child)

Disassembly:
	0x039FE27C LDR X19, [X19 + 0x68]
	0x039FE280 LDR X8, [X8 + 0xEB0]
	0x039FE284 LDR X1, [X8]
	0x039FE288 BL 0x2D1A540
	0x039FE28C ADRP X8, 0x6FA000
	0x039FE290 LDR X8, [X8 + 0x98]
	0x039FE294 STR W0, [X31 + 0xC]
	0x039FE298 ADD X0, X31, 0xC
	0x039FE29C MOV X2, X31
	0x039FE2A0 LDR X1, [X8]
	0x039FE2A4 BL 0x3399C34
	0x039FE2A8 CBZ X19, 0x39FE2D4
	0x039FE2AC LDR X8, [X19]
	0x039FE2B0 MOV X1, X0
	0x039FE2B4 MOV X0, X19
	0x039FE2B8 LDR X9, [X8 + 0x5E8]
	0x039FE2BC LDR X2, [X8 + 0x5F0]
	0x039FE2C0 BLR X9
	0x039FE2C4 LDP X20, X19, [X31 + 0x20]
	0x039FE2C8 LDP X30, X21, [X31 + 0x10]
	0x039FE2CC ADD X31, X31, 0x30
	0x039FE2D0 RET
	0x039FE2D4 BL 0x1C16F20
	0x039FE2D8 STP X30, X19, [X31 - 0x10]!
	0x039FE2DC MOV X19, X0
	0x039FE2E0 LDR X0, [X0 + 0x60]
	0x039FE2E4 CBZ X0, 0x39FE32C
	0x039FE2E8 LDR X8, [X0]
	0x039FE2EC LDP S2, S3, [X19 + 0x38]
	0x039FE2F0 LDP S0, S1, [X19 + 0x30]
	0x039FE2F4 LDR X9, [X8 + 0x2A8]
	0x039FE2F8 LDR X1, [X8 + 0x2B0]
	0x039FE2FC BLR X9
	0x039FE300 LDR X0, [X19 + 0x68]
	0x039FE304 CBZ X0, 0x39FE32C
	0x039FE308 LDR X8, [X0]
	0x039FE30C LDP S2, S3, [X19 + 0x38]
	0x039FE310 LDP S0, S1, [X19 + 0x30]
	0x039FE314 LDR X9, [X8 + 0x2A8]
	0x039FE318 LDR X1, [X8 + 0x2B0]
	0x039FE31C BLR X9
	0x039FE320 MOVZ W0, 0x1
	0x039FE324 LDP X30, X19, [X31], #0x10
	0x039FE328 RET
	0x039FE32C BL 0x1C16F20
	0x039FE330 STP X30, X19, [X31 - 0x10]!
	0x039FE334 MOV X19, X0
	0x039FE338 LDR X0, [X0 + 0x60]
	0x039FE33C CBZ X0, 0x39FE37C
	0x039FE340 LDR X8, [X0]
	0x039FE344 LDP S2, S3, [X19 + 0x28]
	0x039FE348 LDP S0, S1, [X19 + 0x20]
	0x039FE34C LDR X9, [X8 + 0x2A8]
	0x039FE350 LDR X1, [X8 + 0x2B0]
	0x039FE354 BLR X9
	0x039FE358 LDR X0, [X19 + 0x68]
	0x039FE35C CBZ X0, 0x39FE37C
	0x039FE360 LDR X8, [X0]
	0x039FE364 LDP S2, S3, [X19 + 0x28]
	0x039FE368 LDP S0, S1, [X19 + 0x20]
	0x039FE36C LDR X2, [X8 + 0x2A8]
	0x039FE370 LDR X1, [X8 + 0x2B0]
	0x039FE374 LDP X30, X19, [X31], #0x10
	0x039FE378 BR X2
	0x039FE37C BL 0x1C16F20
	0x039FE380 AND W1, W1, 0x1
	0x039FE384 MOVZ W2, 0x1
	0x039FE388 B 0x39FE38C
	0x039FE38C STR X30, [X31 - 0x30]!
	0x039FE390 STP X22, X21, [X31 + 0x10]
	0x039FE394 STP X20, X19, [X31 + 0x20]
	0x039FE398 ADRP X22, 0x9E3000
	0x039FE39C LDRB W8, [X22 + 0xF1E]
	0x039FE3A0 MOV W20, W2
	0x039FE3A4 MOV W21, W1
	0x039FE3A8 MOV X19, X0
	0x039FE3AC TBNZ X8, 0x0, 0x39FE3C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9E4000
	007 Move W8, [X22+3860]
	008 Move X19, X3
	009 Move W20, W2
	010 Move X21, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x756000
	016 Move X0, [X0+3632]
	017 Call 0x1C17CF4
	018 Move X0, 0x6F6000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x722000
	022 Move X0, [X0+232]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3860], W8
	026 Move [X31+8], X31
	027 Compare X21, 0
	028 JumpIfEqual {97}
	029 Move X0, X21
	030 Move W1, W20
	031 Move X2, X31
	032 Call Table.GetColumnVisibility, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {88}
	037 Compare X19, 0
	038 JumpIfEqual {97}
	039 Move X0, X19
	040 Move X1, X31
	041 Call GameObject.get_transform, X0
	042 Compare X0, 0
	043 JumpIfEqual {97}
	044 Move X8, 0x722000
	045 Move X8, [X8+232]
	046 Move X2, X31
	047 Move X1, [X8]
	048 Call Transform.Find, X0, X1
	049 Move X8, 0x6F6000
	050 Move X8, [X8+1432]
	051 Move X19, X0
	052 Move X8, [X8]
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X19
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {89}
	066 Compare X19, 0
	067 JumpIfEqual {97}
	068 Move X8, 0x756000
	069 Move X8, [X8+3632]
	070 Add X1, X31, 8
	071 Move X0, X19
	072 Move X2, [X8]
	073 Call 0x21A5990, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {89}
	078 Move X0, [X31+8]
	079 Compare X0, 0
	080 JumpIfEqual {97}
	081 Move X8, [X0]
	082 Move X9, [X8+1496]
	083 Move X1, [X8+1504]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X1, X31
	086 Call String.IsNullOrEmpty, X0
	087 Xor W8, W0, 1
	088 Move W8, W31
	089 Move W8, 1
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 And W0, W8, 1
	095 Move X30, [X31+48]
	096 Return X0
	097 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x039FE3B0 ADRP X0, 0x755000
	0x039FE3B4 LDR X0, [X0 + 0xEB0]
	0x039FE3B8 BL 0x1C16CF4
	0x039FE3BC MOVZ W8, 0x1
	0x039FE3C0 STRB W8, [X22 + 0xF1E]
	0x039FE3C4 LDR X0, [X19 + 0x70]
	0x039FE3C8 CBZ X0, 0x39FE440
	0x039FE3CC ADRP X8, 0x755000
	0x039FE3D0 LDR X8, [X8 + 0xEB0]
	0x039FE3D4 LDR X1, [X8]
	0x039FE3D8 BL 0x2D1A540
	0x039FE3DC TBZ X20, 0x1F, 0x39FE3F4
	0x039FE3E0 CBNZ W0, 0x39FE3F4
	0x039FE3E4 LDP X20, X19, [X31 + 0x20]
	0x039FE3E8 LDP X22, X21, [X31 + 0x10]
	0x039FE3EC LDR X30, [X31], #0x30
	0x039FE3F0 RET
	0x039FE3F4 LDR X8, [X19 + 0x70]
	0x039FE3F8 CBZ X8, 0x39FE440
	0x039FE3FC LDR W9, [X8 + 0x70]
	0x039FE400 TBZ X21, 0x0, 0x39FE40C
	0x039FE404 LDR W10, [X8 + 0x74]
	0x039FE408 B 0x39FE410
	0x039FE40C MOVZ W10, 0x1
	0x039FE410 LDR X11, [X8]
	0x039FE414 MUL W9, W9, W20
	0x039FE418 MADD W1, W9, W10, W0
	0x039FE41C MOV X0, X8
	0x039FE420 LDR X12, [X11 + 0x238]
	0x039FE424 LDR X2, [X11 + 0x240]
	0x039FE428 BLR X12
	0x039FE42C MOV X0, X19
	0x039FE430 LDP X20, X19, [X31 + 0x20]
	0x039FE434 LDP X22, X21, [X31 + 0x10]
	0x039FE438 LDR X30, [X31], #0x30
	0x039FE43C B 0x39FE1F8
	0x039FE440 BL 0x1C16F20
	0x039FE444 AND W1, W1, 0x1
	0x039FE448 MOVN W2, 0x0
	0x039FE44C B 0x39FE38C
	0x039FE450 ADRP X8, 0xFFFFFFFFFD0EE000
	0x039FE454 ADRP X9, 0xFFFFFFFFFD0ED000
	0x039FE458 LDR V0, [X8 + 0xEB]
	0x039FE45C LDR V1, [X9 + 0x77]
	0x039FE460 MOV X1, X31
	0x039FE464 STP V0, V1, [X0 + 0x20]
	0x039FE468 B 0x3C36C30
	0x039FE46C STR W31, [X0 + 0x78]
	0x039FE470 RET
	0x039FE474 STR X30, [X31 - 0x30]!
	0x039FE478 STP X22, X21, [X31 + 0x10]
	0x039FE47C STP X20, X19, [X31 + 0x20]
	0x039FE480 ADRP X22, 0x9E3000
	0x039FE484 ADRP X21, 0x755000
	0x039FE488 LDRB W8, [X22 + 0xF20]
	0x039FE48C LDR X21, [X21 + 0xEB8]
	0x039FE490 MOV X20, X1
	0x039FE494 MOV X19, X0
	0x039FE498 TBNZ X8, 0x0, 0x39FE4B0
	0x039FE49C ADRP X0, 0x755000
	0x039FE4A0 LDR X0, [X0 + 0xEB8]
	0x039FE4A4 BL 0x1C16CF4
	0x039FE4A8 MOVZ W8, 0x1
	0x039FE4AC STRB W8, [X22 + 0xF20]
	0x039FE4B0 STR X20, [X19 + 0x58]
	0x039FE4B4 LDR X1, [X21]
	0x039FE4B8 MOV X0, X19
	0x039FE4BC BL 0x21A8CFC
	0x039FE4C0 STR X0, [X19 + 0x70]
	0x039FE4C4 CBZ X0, 0x39FE4F4
	0x039FE4C8 LDR X8, [X19 + 0x60]
	0x039FE4CC CBZ X8, 0x39FE4F4
	0x039FE4D0 LDR X9, [X8]
	0x039FE4D4 LDR X1, [X0 + 0x28]
	0x039FE4D8 LDP X20, X19, [X31 + 0x20]
	0x039FE4DC LDP X22, X21, [X31 + 0x10]
	0x039FE4E0 LDR X3, [X9 + 0x5E8]
	0x039FE4E4 LDR X2, [X9 + 0x5F0]
	0x039FE4E8 MOV X0, X8
	0x039FE4EC LDR X30, [X31], #0x30
	0x039FE4F0 BR X3
	0x039FE4F4 BL 0x1C16F20
	0x039FE4F8 STP X30, X19, [X31 - 0x10]!
	0x039FE4FC MOV X19, X0
	0x039FE500 LDR X0, [X0 + 0x60]
	0x039FE504 CBZ X0, 0x39FE54C
	0x039FE508 LDR X8, [X0]
	0x039FE50C LDP S2, S3, [X19 + 0x38]
	0x039FE510 LDP S0, S1, [X19 + 0x30]
	0x039FE514 LDR X9, [X8 + 0x2A8]
	0x039FE518 LDR X1, [X8 + 0x2B0]
	0x039FE51C BLR X9
	0x039FE520 LDR X0, [X19 + 0x68]
	0x039FE524 CBZ X0, 0x39FE54C
	0x039FE528 LDR X8, [X0]
	0x039FE52C LDP S2, S3, [X19 + 0x38]
	0x039FE530 LDP S0, S1, [X19 + 0x30]
	0x039FE534 LDR X9, [X8 + 0x2A8]
	0x039FE538 LDR X1, [X8 + 0x2B0]
	0x039FE53C BLR X9
	0x039FE540 MOVZ W0, 0x1
	0x039FE544 LDP X30, X19, [X31], #0x10
	0x039FE548 RET
	0x039FE54C BL 0x1C16F20
	0x039FE550 STP X30, X19, [X31 - 0x10]!
	0x039FE554 MOV X19, X0
	0x039FE558 LDR X0, [X0 + 0x60]
	0x039FE55C CBZ X0, 0x39FE59C
	0x039FE560 LDR X8, [X0]
	0x039FE564 LDP S2, S3, [X19 + 0x28]
	0x039FE568 LDP S0, S1, [X19 + 0x20]
	0x039FE56C LDR X9, [X8 + 0x2A8]
	0x039FE570 LDR X1, [X8 + 0x2B0]
	0x039FE574 BLR X9
	0x039FE578 LDR X0, [X19 + 0x68]
	0x039FE57C CBZ X0, 0x39FE59C
	0x039FE580 LDR X8, [X0]
	0x039FE584 LDP S2, S3, [X19 + 0x28]
	0x039FE588 LDP S0, S1, [X19 + 0x20]
	0x039FE58C LDR X2, [X8 + 0x2A8]
	0x039FE590 LDR X1, [X8 + 0x2B0]
	0x039FE594 LDP X30, X19, [X31], #0x10
	0x039FE598 BR X2
	0x039FE59C BL 0x1C16F20
	0x039FE5A0 STR D8, [X31 - 0x30]!
	0x039FE5A4 STP X30, X21, [X31 + 0x10]
	0x039FE5A8 STP X20, X19, [X31 + 0x20]
	0x039FE5AC ADRP X20, 0x9E3000
	0x039FE5B0 LDRB W8, [X20 + 0xF21]
	0x039FE5B4 MOV X19, X0
	0x039FE5B8 TBNZ X8, 0x0, 0x39FE5DC
	0x039FE5BC ADRP X0, 0x755000
	0x039FE5C0 LDR X0, [X0 + 0xEC0]
	0x039FE5C4 BL 0x1C16CF4
	0x039FE5C8 ADRP X0, 0x6F5000
	0x039FE5CC LDR X0, [X0 + 0xA90]
	0x039FE5D0 BL 0x1C16CF4
	0x039FE5D4 MOVZ W8, 0x1
	0x039FE5D8 STRB W8, [X20 + 0xF21]
	0x039FE5DC LDR X0, [X19 + 0x70]
	0x039FE5E0 CBZ X0, 0x39FE71C
	0x039FE5E4 LDR V8, [X19 + 0x78]
	0x039FE5E8 LDR V0, [X0 + 0x50]
	0x039FE5EC FCMP S8, S0
	0x039FE5F0 B.LT 0x39FE6FC
	0x039FE5F4 LDR X8, [X0]
	0x039FE5F8 LDP X9, X1, [X8 + 0x1F8]
	0x039FE5FC BLR X9
	0x039FE600 LDR X8, [X19 + 0x70]
	0x039FE604 CBZ X8, 0x39FE71C
	0x039FE608 LDR X9, [X8]
	0x039FE60C LDR X20, [X19 + 0x68]
	0x039FE610 MOV X21, X0
	0x039FE614 MOV X0, X8
	0x039FE618 LDR X10, [X9 + 0x208]
	0x039FE61C LDR X2, [X9 + 0x210]
	0x039FE620 MOV X1, X21
	0x039FE624 BLR X10
	0x039FE628 CBZ X20, 0x39FE71C
	0x039FE62C LDR X8, [X20]
	0x039FE630 MOV X1, X0
	0x039FE634 MOV X0, X20
	0x039FE638 LDR X9, [X8 + 0x5E8]
	0x039FE63C LDR X2, [X8 + 0x5F0]
	0x039FE640 BLR X9
	0x039FE644 CBZ X21, 0x39FE6E4
	0x039FE648 ADRP X8, 0x6F5000
	0x039FE64C LDR X8, [X8 + 0xA90]
	0x039FE650 LDR X9, [X21]
	0x039FE654 LDR X8, [X8]
	0x039FE658 CMP X9, X8
	0x039FE65C B.NE 0x39FE6E4
	0x039FE660 LDR X20, [X19 + 0x68]
	0x039FE664 MOV X0, X21
	0x039FE668 BL 0x1C16E08
	0x039FE66C LDR V0, [X0]
	0x039FE670 FCMP S0, 0x0
	0x039FE674 B.NE 0x39FE6AC
	0x039FE678 ADRP X21, 0x755000
	0x039FE67C LDR X21, [X21 + 0xEC0]
	0x039FE680 LDR X0, [X21]
	0x039FE684 LDR W8, [X0 + 0xE0]
	0x039FE688 CBNZ W8, 0x39FE694
	0x039FE68C BL 0x1C16DFC
	0x039FE690 LDR X0, [X21]
	0x039FE694 LDR X8, [X0 + 0xB8]
	0x039FE698 ADD X9, X8, 0x4
	0x039FE69C ADD X10, X8, 0x8
	0x039FE6A0 ADD X11, X8, 0xC
	0x039FE6A4 CBNZ X20, 0x39FE6C0
	0x039FE6A8 B 0x39FE71C
	0x039FE6AC ADD X8, X19, 0x20
	0x039FE6B0 ADD X9, X19, 0x24
	0x039FE6B4 ADD X10, X19, 0x28
	0x039FE6B8 ADD X11, X19, 0x2C
	0x039FE6BC CBZ X20, 0x39FE71C
	0x039FE6C0 LDR V3, [X11]
	0x039FE6C4 LDR X11, [X20]
	0x039FE6C8 LDR V2, [X10]
	0x039FE6CC LDR V1, [X9]
	0x039FE6D0 LDR V0, [X8]
	0x039FE6D4 LDR X8, [X11 + 0x2A8]
	0x039FE6D8 LDR X1, [X11 + 0x2B0]
	0x039FE6DC MOV X0, X20
	0x039FE6E0 BLR X8
	0x039FE6E4 LDR X8, [X19 + 0x70]
	0x039FE6E8 CBZ X8, 0x39FE71C
	0x039FE6EC LDR V0, [X19 + 0x78]
	0x039FE6F0 LDR V1, [X8 + 0x50]
	0x039FE6F4 FSUB S8, S0, S1
	0x039FE6F8 STR S8, [X19 + 0x78]
	0x039FE6FC MOV X0, X31
	0x039FE700 BL 0x3C3C714
	0x039FE704 FADD S0, S8, S0
	0x039FE708 STR S0, [X19 + 0x78]
	0x039FE70C LDP X20, X19, [X31 + 0x20]
	0x039FE710 LDP X30, X21, [X31 + 0x10]
	0x039FE714 LDR V8, [X31], #0x30
	0x039FE718 RET
	0x039FE71C BL 0x1C16F20
	0x039FE720 ADRP X8, 0xFFFFFFFFFD0EE000
	0x039FE724 ADRP X9, 0xFFFFFFFFFD0ED000
	0x039FE728 LDR V0, [X8 + 0xEB]
	0x039FE72C LDR V1, [X9 + 0x77]
	0x039FE730 MOV X1, X31
	0x039FE734 STP V0, V1, [X0 + 0x20]
	0x039FE738 B 0x3C36C30
	0x039FE73C STR X30, [X31 - 0x20]!
	0x039FE740 STP X20, X19, [X31 + 0x10]
	0x039FE744 ADRP X19, 0x9E3000
	0x039FE748 ADRP X20, 0x755000
	0x039FE74C LDRB W8, [X19 + 0xF22]
	0x039FE750 LDR X20, [X20 + 0xEC0]
	0x039FE754 TBNZ X8, 0x0, 0x39FE76C
	0x039FE758 ADRP X0, 0x755000
	0x039FE75C LDR X0, [X0 + 0xEC0]
	0x039FE760 BL 0x1C16CF4
	0x039FE764 MOVZ W8, 0x1
	0x039FE768 STRB W8, [X19 + 0xF22]
	0x039FE76C LDR X8, [X20]
	0x039FE770 ADRP X9, 0xFFFFFFFFFD0EC000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+48], D10
	003 Move [X31+64], D9
	004 Move [X31+72], D8
	005 Move [X31+80], X29
	006 Move [X31+88], X30
	007 Move [X31+96], X28
	008 Move [X31+104], X27
	009 Move [X31+112], X26
	010 Move [X31+120], X25
	011 Move [X31+128], X24
	012 Move [X31+136], X23
	013 Move [X31+144], X22
	014 Move [X31+152], X21
	015 Move [X31+160], X20
	016 Move [X31+168], X19
	017 Move X21, 0x9E4000
	018 Move X20, 0x756000
	019 Move W8, [X21+3861]
	020 Move X20, [X20+3640]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {52}
	026 Move X0, 0x756000
	027 Move X0, [X0+3640]
	028 Call 0x1C17CF4
	029 Move X0, 0x756000
	030 Move X0, [X0+2960]
	031 Call 0x1C17CF4
	032 Move X0, 0x756000
	033 Move X0, [X0+3648]
	034 Call 0x1C17CF4
	035 Move X0, 0x756000
	036 Move X0, [X0+3656]
	037 Call 0x1C17CF4
	038 Move X0, 0x756000
	039 Move X0, [X0+3664]
	040 Call 0x1C17CF4
	041 Move X0, 0x6F6000
	042 Move X0, [X0+1432]
	043 Call 0x1C17CF4
	044 Move X0, 0x754000
	045 Move X0, [X0+3008]
	046 Call 0x1C17CF4
	047 Move X0, 0x754000
	048 Move X0, [X0+1728]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+3861], W8
	052 Move X1, [X20]
	053 Move X0, X19
	054 Move [X31+56], X31
	055 Move [X31+32], X31
	056 Move [X31+40], X31
	057 Move [X31+16], X31
	058 Move [X31+24], X31
	059 Move [X31+8], X31
	060 Call 0x21A9CFC, X0
	061 Compare X0, 0
	062 JumpIfEqual {278}
	063 Move X8, [X0]
	064 Move X20, X0
	065 Move X9, [X8+408]
	066 Move X1, [X8+416]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {77}
	070 Move X8, 0x754000
	071 Move X8, [X8+1728]
	072 Move X9, [X0]
	073 Move X8, [X8]
	074 Move W11, [X9+304]
	075 Move W10, [X8+304]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X21, X31
	078 Move X9, [X9+200]
	079 Add X9, X9, X10
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X8, -49360896
	084 Move V8, [X19+128]
	085 Move V9, [X8+188]
	086 Move V10, V8
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move X8, -49360896
	089 Move V0, [X8+864]
	090 Add S10, S8, S0
	091 Move [X19+128], S10
	092 Move X0, X31
	093 Call Time.get_deltaTime
	094 Add S0, S10, S0
	095 Move [X19+128], S0
	096 Move X0, [X20+72]
	097 Compare X0, 0
	098 JumpIfEqual {278}
	099 Move X25, 0x754000
	100 Move X27, 0x6F6000
	101 Move X28, 0x756000
	102 Move X29, 0x756000
	103 Move X26, 0x756000
	104 Move X25, [X25+3008]
	105 Move X27, [X27+1432]
	106 Move X28, [X28+3648]
	107 Move X29, [X29+3664]
	108 Move X26, [X26+3656]
	109 Move W22, W31
	110 Move X1, [X25]
	111 Call 0x2498BA8, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X2, X31, 56
	114 Move X0, X19
	115 Move W1, W22
	116 Call DebugUIHandlerRow.TryGetChild, X0, X1, X2
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {198}
	121 Move X23, [X31+56]
	122 Move X1, X21
	123 Move W2, W22
	124 Move X3, X23
	125 Call DebugUIHandlerRow.IsActive, X0, X1, X2, X3
	126 Move X8, [X27]
	127 Move W24, W0
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move X0, X23
	134 Move X1, X31
	135 Move X2, X31
	136 Call Object.op_Inequality, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {147}
	141 Compare X23, 0
	142 JumpIfEqual {278}
	143 And W1, W24, 1
	144 Move X0, X23
	145 Move X2, X31
	146 Call GameObject.SetActive, X0, X1
	147 NotImplemented "Instruction FCMP not yet implemented."
	148 NotImplemented "Instruction CSET not yet implemented."
	149 NotImplemented "Instruction ORN not yet implemented."
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {198}
	154 Compare X23, 0
	155 JumpIfEqual {278}
	156 Move X2, [X28]
	157 Add X1, X31, 40
	158 Move X0, X23
	159 Call 0x21E7600, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {168}
	164 Move X0, [X31+40]
	165 Compare X0, 0
	166 JumpIfEqual {278}
	167 Call DebugUIHandlerColor.UpdateColor, X0
	168 Move X2, [X29]
	169 Add X1, X31, 32
	170 Move X0, X23
	171 Call 0x21E7600, X0, X1
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {183}
	176 Move X0, [X31+32]
	177 Compare X0, 0
	178 JumpIfEqual {278}
	179 Move X8, [X0]
	180 Move X9, [X8+520]
	181 Move X1, [X8+528]
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X2, [X26]
	184 Add X1, X31, 24
	185 Move X0, X23
	186 Call 0x21E7600, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {198}
	191 Move X0, [X31+24]
	192 Compare X0, 0
	193 JumpIfEqual {278}
	194 Move X8, [X0]
	195 Move X9, [X8+520]
	196 Move X1, [X8+528]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X0, [X20+72]
	199 Add W22, W22, 1
	200 Compare X0, 0
	201 JumpIfNotEqual {110}
	202 Move X0, X19
	203 Move W1, W31
	204 Call DebugUIHandlerRow.GetChild, X0, X1
	205 Compare X0, 0
	206 JumpIfEqual {278}
	207 Move X27, 0x756000
	208 Move X27, [X27+2960]
	209 Move X1, [X27]
	210 Call 0x21E62E4, X0
	211 Move X8, [X20+72]
	212 Compare X8, 0
	213 JumpIfEqual {278}
	214 Move X22, X0
	215 Move X26, X31
	216 Move W23, W31
	217 Move X1, [X25]
	218 Move X0, X8
	219 Call 0x2498BA8, X0
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Compare X22, 0
	222 JumpIfEqual {278}
	223 Add X2, X31, 16
	224 Move X0, X19
	225 Move W1, W23
	226 Move [X22+72], X26
	227 Call DebugUIHandlerRow.TryGetChild, X0, X1, X2
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {267}
	232 Move X24, [X31+16]
	233 Move X1, X21
	234 Move W2, W23
	235 Move X3, X24
	236 Call DebugUIHandlerRow.IsActive, X0, X1, X2, X3
	237 Move X8, [X20+72]
	238 And W31, W0, 1
	239 NotImplemented "Instruction CSEL not yet implemented."
	240 Compare X8, 0
	241 JumpIfEqual {278}
	242 Add W23, W23, 1
	243 Move X1, [X25]
	244 Move X0, X8
	245 Call 0x2498BA8, X0
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X2, X31, 8
	248 Move X0, X19
	249 Move W1, W23
	250 Call DebugUIHandlerRow.TryGetChild, X0, X1, X2
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {263}
	255 Move X3, [X31+8]
	256 Move X1, X21
	257 Move W2, W23
	258 Call DebugUIHandlerRow.IsActive, X0, X1, X2, X3
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {268}
	263 Move X8, [X20+72]
	264 Add W23, W23, 1
	265 Compare X8, 0
	266 JumpIfNotEqual {243}
	267 Add W23, W23, 1
	268 Compare X24, 0
	269 JumpIfEqual {278}
	270 Move X1, [X27]
	271 Move X0, X24
	272 Call 0x21E62E4, X0
	273 Move [X22+80], X0
	274 Move X22, X0
	275 Move X8, [X20+72]
	276 Compare X8, 0
	277 JumpIfNotEqual {217}
	278 Call 0x1C17F20
	279 Move [X22+80], X31
	280 Move X20, [X31+160]
	281 Move X19, [X31+168]
	282 Move X22, [X31+144]
	283 Move X21, [X31+152]
	284 Move X24, [X31+128]
	285 Move X23, [X31+136]
	286 Move X26, [X31+112]
	287 Move X25, [X31+120]
	288 Move X28, [X31+96]
	289 Move X27, [X31+104]
	290 Move X29, [X31+80]
	291 Move X30, [X31+88]
	292 Move D9, [X31+64]
	293 Move D8, [X31+72]
	294 Move V10, [X31+48]
	295 Add X31, X31, 176
	296 Return 

Method: System.Void .ctor()

Disassembly:
	0x039FE774 LDR V0, [X9 + 0xA9]
	0x039FE778 LDP X20, X19, [X31 + 0x10]
	0x039FE77C LDR X8, [X8 + 0xB8]
	0x039FE780 STR V0, [X8]
	0x039FE784 LDR X30, [X31], #0x20
	0x039FE788 RET
	0x039FE78C STR W31, [X0 + 0x80]

ISIL:
	001 Move X8, -49352704
	002 Move X9, -49356800
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

