Type: UnityEngine.Rendering.UI.DebugUIHandlerObjectList

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x039FCD44 STR X30, [X31 - 0x40]!
	0x039FCD48 STP X24, X23, [X31 + 0x10]
	0x039FCD4C STP X22, X21, [X31 + 0x20]
	0x039FCD50 STP X20, X19, [X31 + 0x30]
	0x039FCD54 ADRP X23, 0x9E5000
	0x039FCD58 ADRP X24, 0x757000
	0x039FCD5C ADRP X20, 0x757000
	0x039FCD60 ADRP X22, 0x757000
	0x039FCD64 ADRP X21, 0x757000
	0x039FCD68 LDRB W8, [X23 + 0xF0F]
	0x039FCD6C LDR X24, [X24 + 0xE08]
	0x039FCD70 LDR X20, [X20 + 0xE10]
	0x039FCD74 LDR X22, [X22 + 0xE18]
	0x039FCD78 LDR X21, [X21 + 0xE20]
	0x039FCD7C MOV X19, X0
	0x039FCD80 TBNZ X8, 0x0, 0x39FCDBC
	0x039FCD84 ADRP X0, 0x757000
	0x039FCD88 LDR X0, [X0 + 0xE10]
	0x039FCD8C BL 0x1C16CF4
	0x039FCD90 ADRP X0, 0x757000
	0x039FCD94 LDR X0, [X0 + 0xE20]
	0x039FCD98 BL 0x1C16CF4
	0x039FCD9C ADRP X0, 0x757000
	0x039FCDA0 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9E6000
	007 Move X22, 0x758000
	008 Move W8, [X21+3839]
	009 Move X22, [X22+3336]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x758000
	017 Move X0, [X0+3336]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3839], W8
	021 Move X2, [X22]
	022 Move X0, X19
	023 Move X1, X20
	024 Call 0x29B1940, X0, X1
	025 Move [X19+136], W31
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return 

Method: System.Void OnIncrement(System.Boolean fast)

Disassembly:
	0x039FCDA4 BL 0x1C16CF4
	0x039FCDA8 ADRP X0, 0x757000
	0x039FCDAC LDR X0, [X0 + 0xE08]
	0x039FCDB0 BL 0x1C16CF4
	0x039FCDB4 MOVZ W8, 0x1
	0x039FCDB8 STRB W8, [X23 + 0xF0F]
	0x039FCDBC LDR X0, [X24]

ISIL:
	001 Move W8, [X0+136]
	002 Move X9, [X0]
	003 Add W8, W8, 1
	004 Move [X0+136], W8
	005 Move X2, [X9+520]
	006 Move X1, [X9+528]
	007 CallNoReturn X2

Method: System.Void OnDecrement(System.Boolean fast)

Disassembly:
	0x039FCDC0 BL 0x1C16F10
	0x039FCDC4 LDR X1, [X20]
	0x039FCDC8 MOV X20, X0
	0x039FCDCC BL 0x301B7C4
	0x039FCDD0 STR X20, [X19 + 0x30]
	0x039FCDD4 LDR X0, [X22]
	0x039FCDD8 BL 0x1C16F10

ISIL:
	001 Move W8, [X0+136]
	002 Move X9, [X0]
	003 Subtract W8, W8, 1
	004 Move [X0+136], W8
	005 Move X2, [X9+520]
	006 Move X1, [X9+528]
	007 CallNoReturn X2

Method: System.Void UpdateValueLabel()

Disassembly:
	0x039FCDDC LDR X1, [X21]
	0x039FCDE0 MOV X20, X0
	0x039FCDE4 BL 0x301B7C4
	0x039FCDE8 STR X20, [X19 + 0x38]
	0x039FCDEC MOV X0, X19
	0x039FCDF0 LDP X20, X19, [X31 + 0x30]
	0x039FCDF4 LDP X22, X21, [X31 + 0x20]
	0x039FCDF8 LDP X24, X23, [X31 + 0x10]
	0x039FCDFC MOV X1, X31
	0x039FCE00 LDR X30, [X31], #0x40
	0x039FCE04 B 0x3C36C30
	0x039FCE08 STR X30, [X31 - 0x10]!
	0x039FCE0C CBZ X1, 0x39FCE28
	0x039FCE10 LDR X8, [X1 + 0x58]
	0x039FCE14 LDR X9, [X0 + 0x10]
	0x039FCE18 CMP X8, X9
	0x039FCE1C CSET W0, EQ
	0x039FCE20 LDR X30, [X31], #0x10
	0x039FCE24 RET
	0x039FCE28 BL 0x1C16F20
	0x039FCE2C LDR X8, [X0 + 0x10]
	0x039FCE30 CMP X1, X8
	0x039FCE34 CSET W0, EQ
	0x039FCE38 RET
	0x039FCE3C STR W31, [X0 + 0x80]
	0x039FCE40 RET
	0x039FCE44 STR X30, [X31 - 0x30]!
	0x039FCE48 STP X22, X21, [X31 + 0x10]
	0x039FCE4C STP X20, X19, [X31 + 0x20]
	0x039FCE50 ADRP X22, 0x9E5000
	0x039FCE54 ADRP X21, 0x757000
	0x039FCE58 LDRB W8, [X22 + 0xF10]
	0x039FCE5C LDR X21, [X21 + 0xE28]
	0x039FCE60 MOV X20, X1
	0x039FCE64 MOV X19, X0
	0x039FCE68 TBNZ X8, 0x0, 0x39FCE80
	0x039FCE6C ADRP X0, 0x757000
	0x039FCE70 LDR X0, [X0 + 0xE28]
	0x039FCE74 BL 0x1C16CF4
	0x039FCE78 MOVZ W8, 0x1
	0x039FCE7C STRB W8, [X22 + 0xF10]
	0x039FCE80 STR X20, [X19 + 0x58]
	0x039FCE84 LDR X1, [X21]
	0x039FCE88 MOV X0, X19
	0x039FCE8C BL 0x21A8CFC
	0x039FCE90 STR X0, [X19 + 0x78]
	0x039FCE94 CBZ X0, 0x39FCECC
	0x039FCE98 LDR X8, [X19 + 0x60]
	0x039FCE9C CBZ X8, 0x39FCECC
	0x039FCEA0 LDR X9, [X8]
	0x039FCEA4 LDR X1, [X0 + 0x28]
	0x039FCEA8 MOV X0, X8
	0x039FCEAC LDR X10, [X9 + 0x5E8]
	0x039FCEB0 LDR X2, [X9 + 0x5F0]
	0x039FCEB4 BLR X10
	0x039FCEB8 MOV X0, X19
	0x039FCEBC LDP X20, X19, [X31 + 0x20]
	0x039FCEC0 LDP X22, X21, [X31 + 0x10]
	0x039FCEC4 LDR X30, [X31], #0x30
	0x039FCEC8 B 0x39FCED0
	0x039FCECC BL 0x1C16F20
	0x039FCED0 SUB X31, X31, 0x40
	0x039FCED4 STR D8, [X31 + 0x10]
	0x039FCED8 STR X30, [X31 + 0x18]
	0x039FCEDC STP X22, X21, [X31 + 0x20]
	0x039FCEE0 STP X20, X19, [X31 + 0x30]
	0x039FCEE4 ADRP X20, 0x9E5000
	0x039FCEE8 LDRB W8, [X20 + 0xF11]
	0x039FCEEC MOV X19, X0
	0x039FCEF0 TBNZ X8, 0x0, 0x39FCF08
	0x039FCEF4 ADRP X0, 0x6F7000
	0x039FCEF8 LDR X0, [X0 + 0xA90]
	0x039FCEFC BL 0x1C16CF4
	0x039FCF00 MOVZ W8, 0x1
	0x039FCF04 STRB W8, [X20 + 0xF11]
	0x039FCF08 LDR X0, [X19 + 0x78]
	0x039FCF0C CBZ X0, 0x39FCFD4
	0x039FCF10 LDR X8, [X0]
	0x039FCF14 LDP X9, X1, [X8 + 0x1F8]
	0x039FCF18 BLR X9
	0x039FCF1C CBZ X0, 0x39FCFD4
	0x039FCF20 ADRP X22, 0x6F7000
	0x039FCF24 LDR X22, [X22 + 0xA90]
	0x039FCF28 LDR X8, [X0]
	0x039FCF2C LDR X1, [X22]
	0x039FCF30 LDR X8, [X8 + 0x40]
	0x039FCF34 LDR X9, [X1 + 0x40]
	0x039FCF38 CMP X8, X9
	0x039FCF3C B.NE 0x39FCFD8
	0x039FCF40 BL 0x1C16E08
	0x039FCF44 LDR V8, [X0]
	0x039FCF48 LDR X0, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x9E6000
	009 Move W8, [X20+3840]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x758000
	016 Move X0, [X0+3344]
	017 Call 0x1C17CF4
	018 Move X0, 0x758000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move X0, 0x6F8000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0x758000
	025 Move X0, [X0+3360]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3840], W8
	029 Move X0, [X19+128]
	030 Compare X0, 0
	031 JumpIfEqual {111}
	032 Move X8, 0x758000
	033 Move X9, 0x758000
	034 Move X8, [X8+3360]
	035 Move X9, [X9+3352]
	036 Move X21, [X8]
	037 Move X1, [X9]
	038 Call Field`1<Object>.GetValue, X0
	039 Compare X0, 0
	040 JumpIfEqual {97}
	041 Move X23, 0x6F8000
	042 Move X23, [X23+1448]
	043 Move X20, X0
	044 Move W22, [X19+136]
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W8, [X20+24]
	051 Move X24, 0x9E2000
	052 Move W9, [X24+6]
	053 Subtract W21, W8, 1
	054 Compare W9, 0
	055 JumpIfEqual {60}
	056 Move TEMP, X21
	057 And TEMP, TEMP, -2147483648
	058 Compare TEMP, -2147483648
	059 JumpIfNotEqual {83}
	060 Move X0, 0x72F000
	061 Move X0, [X0+3840]
	062 Call 0x1C17CF4
	063 Move X0, 0x6F8000
	064 Move X0, [X0+1448]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X24+6], W8
	068 Move TEMP, X21
	069 And TEMP, TEMP, -2147483648
	070 Compare TEMP, -2147483648
	071 JumpIfNotEqual {83}
	072 Move X0, [X23]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X8, 0x72F000
	078 Move X8, [X8+3840]
	079 Move W0, W31
	080 Move W1, W21
	081 Move X2, [X8]
	082 Call 0x22171C0, X0, X1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSEL not yet implemented."
	087 Move [X19+136], W8
	088 Move W9, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X20, W8
	091 Move X0, [X8+32]
	092 Compare X0, 0
	093 JumpIfEqual {111}
	094 Move X1, X31
	095 Call Object.get_name, X0
	096 Move X21, X0
	097 Move X8, 0x758000
	098 Move X8, [X8+3344]
	099 Move X0, X19
	100 Move X1, X21
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X2, [X8]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Call 0x29B1BEC, X0, X1
	110 Return 
	111 Call 0x1C17F20
	112 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x039FCF4C LDR X20, [X19 + 0x68]
	0x039FCF50 LDR X21, [X19 + 0x78]
	0x039FCF54 ADD X1, X31, 0xC
	0x039FCF58 STR S8, [X31 + 0xC]
	0x039FCF5C BL 0x1C16E04
	0x039FCF60 CBZ X21, 0x39FCFD4
	0x039FCF64 LDR X8, [X21]
	0x039FCF68 MOV X1, X0
	0x039FCF6C MOV X0, X21
	0x039FCF70 LDR X9, [X8 + 0x208]
	0x039FCF74 LDR X2, [X8 + 0x210]
	0x039FCF78 BLR X9
	0x039FCF7C CBZ X20, 0x39FCFD4
	0x039FCF80 LDR X8, [X20]
	0x039FCF84 MOV X1, X0
	0x039FCF88 MOV X0, X20
	0x039FCF8C LDR X9, [X8 + 0x5E8]
	0x039FCF90 LDR X2, [X8 + 0x5F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E6000
	006 Move X21, 0x758000
	007 Move W8, [X20+3841]
	008 Move X21, [X21+3368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x758000
	015 Move X0, [X0+3368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3841], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x29B1C80, X0
	026 Return 

