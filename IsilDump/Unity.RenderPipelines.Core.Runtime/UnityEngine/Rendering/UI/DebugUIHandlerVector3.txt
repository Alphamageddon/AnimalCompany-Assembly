Type: UnityEngine.Rendering.UI.DebugUIHandlerVector3

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x03A0076C MOVZ W2, 0x1
	0x03A00770 MOV W1, W31
	0x03A00774 MOV W3, W31
	0x03A00778 MOV W4, W31
	0x03A0077C B 0x3A0039C
	0x03A00780 STR X30, [X31 - 0x20]!
	0x03A00784 STP X20, X19, [X31 + 0x10]
	0x03A00788 ADRP X20, 0x9E1000
	0x03A0078C LDRB W8, [X20 + 0xF3F]
	0x03A00790 MOV X19, X0
	0x03A00794 TBNZ X8, 0x0, 0x3A007AC
	0x03A00798 ADRP X0, 0x753000
	0x03A0079C LDR X0, [X0 + 0xFD8]
	0x03A007A0 BL 0x1C16CF4
	0x03A007A4 MOVZ W8, 0x1
	0x03A007A8 STRB W8, [X20 + 0xF3F]
	0x03A007AC LDR X0, [X19 + 0x90]
	0x03A007B0 CBZ X0, 0x3A007D4
	0x03A007B4 ADRP X8, 0x753000
	0x03A007B8 LDR X8, [X8 + 0xFD8]
	0x03A007BC LDR X1, [X8]
	0x03A007C0 BL 0x2D1ADA8
	0x03A007C4 LDP X20, X19, [X31 + 0x10]
	0x03A007C8 MOV V0.16B, V2.16B
	0x03A007CC LDR X30, [X31], #0x20
	0x03A007D0 RET
	0x03A007D4 BL 0x1C16F20
	0x03A007D8 MOVZ W3, 0x1
	0x03A007DC MOV W1, W31
	0x03A007E0 MOV W2, W31
	0x03A007E4 MOV W4, W31
	0x03A007E8 B 0x3A0039C
	0x03A007EC STR X30, [X31 - 0x20]!
	0x03A007F0 STP X20, X19, [X31 + 0x10]
	0x03A007F4 ADRP X20, 0x9E1000
	0x03A007F8 LDRB W8, [X20 + 0xF40]
	0x03A007FC MOV X19, X0
	0x03A00800 TBNZ X8, 0x0, 0x3A00818
	0x03A00804 ADRP X0, 0x753000
	0x03A00808 LDR X0, [X0 + 0xFD8]
	0x03A0080C BL 0x1C16CF4
	0x03A00810 MOVZ W8, 0x1
	0x03A00814 STRB W8, [X20 + 0xF40]
	0x03A00818 LDR X0, [X19 + 0x90]
	0x03A0081C CBZ X0, 0x3A00840
	0x03A00820 ADRP X8, 0x753000
	0x03A00824 LDR X8, [X8 + 0xFD8]
	0x03A00828 LDR X1, [X8]
	0x03A0082C BL 0x2D1ADA8
	0x03A00830 LDP X20, X19, [X31 + 0x10]
	0x03A00834 MOV V0.16B, V3.16B
	0x03A00838 LDR X30, [X31], #0x20
	0x03A0083C RET
	0x03A00840 BL 0x1C16F20
	0x03A00844 MOVZ W4, 0x1
	0x03A00848 MOV W1, W31
	0x03A0084C MOV W2, W31
	0x03A00850 MOV W3, W31
	0x03A00854 B 0x3A0039C
	0x03A00858 STR X30, [X31 - 0x10]!
	0x03A0085C LDR X8, [X0 + 0x90]
	0x03A00860 CBZ X8, 0x3A00870
	0x03A00864 LDR V0, [X8 + 0x60]
	0x03A00868 LDR X30, [X31], #0x10
	0x03A0086C RET
	0x03A00870 BL 0x1C16F20
	0x03A00874 STR X30, [X31 - 0x10]!
	0x03A00878 LDR X8, [X0 + 0x90]
	0x03A0087C CBZ X8, 0x3A0088C
	0x03A00880 LDR V0, [X8 + 0x64]
	0x03A00884 LDR X30, [X31], #0x10
	0x03A00888 RET
	0x03A0088C BL 0x1C16F20
	0x03A00890 STR X30, [X31 - 0x10]!
	0x03A00894 LDR X8, [X0 + 0x90]
	0x03A00898 CBZ X8, 0x3A008AC
	0x03A0089C LDR V0, [X8 + 0x68]
	0x03A008A0 SCVTF S0, S0
	0x03A008A4 LDR X30, [X31], #0x10
	0x03A008A8 RET
	0x03A008AC BL 0x1C16F20
	0x03A008B0 LDR X0, [X0 + 0x40]
	0x03A008B4 RET
	0x03A008B8 STR X1, [X0 + 0x40]
	0x03A008BC RET
	0x03A008C0 LDR X0, [X0 + 0x48]
	0x03A008C4 RET
	0x03A008C8 STR X1, [X0 + 0x48]
	0x03A008CC RET
	0x03A008D0 LDR X0, [X0 + 0x50]
	0x03A008D4 RET
	0x03A008D8 STR X1, [X0 + 0x50]
	0x03A008DC RET
	0x03A008E0 RET
	0x03A008E4 STR X1, [X0 + 0x58]
	0x03A008E8 RET
	0x03A008EC LDR X0, [X0 + 0x58]
	0x03A008F0 RET
	0x03A008F4 MOVZ W0, 0x1
	0x03A008F8 RET
	0x03A008FC RET
	0x03A00900 RET
	0x03A00904 RET
	0x03A00908 RET
	0x03A0090C STR X30, [X31 - 0x30]!
	0x03A00910 STP X22, X21, [X31 + 0x10]
	0x03A00914 STP X20, X19, [X31 + 0x20]
	0x03A00918 ADRP X20, 0x9E1000
	0x03A0091C ADRP X21, 0x6F3000
	0x03A00920 LDRB W8, [X20 + 0xF41]
	0x03A00924 LDR X21, [X21 + 0x598]
	0x03A00928 MOV X19, X0
	0x03A0092C TBNZ X8, 0x0, 0x3A00944
	0x03A00930 ADRP X0, 0x6F3000
	0x03A00934 LDR X0, [X0 + 0x598]
	0x03A00938 BL 0x1C16CF4
	0x03A0093C MOVZ W8, 0x1
	0x03A00940 STRB W8, [X20 + 0xF41]
	0x03A00944 MOV X22, X19
	0x03A00948 LDR X20, [X22 + 0x48]!
	0x03A0094C LDR X0, [X21]
	0x03A00950 LDR W8, [X0 + 0xE0]
	0x03A00954 CBNZ W8, 0x3A0095C
	0x03A00958 BL 0x1C16DFC
	0x03A0095C MOV X0, X20
	0x03A00960 MOV X1, X31
	0x03A00964 MOV X2, X31
	0x03A00968 BL 0x3C354F8
	0x03A0096C TBNZ X0, 0x0, 0x3A009A4
	0x03A00970 LDR X20, [X19 + 0x40]!
	0x03A00974 LDR X0, [X21]
	0x03A00978 LDR W8, [X0 + 0xE0]
	0x03A0097C CBNZ W8, 0x3A00984
	0x03A00980 BL 0x1C16DFC
	0x03A00984 MOV X0, X20
	0x03A00988 MOV X1, X31
	0x03A0098C MOV X2, X31
	0x03A00990 BL 0x3C354F8
	0x03A00994 MOV W8, W0
	0x03A00998 MOV X0, X31
	0x03A0099C MOV X22, X19
	0x03A009A0 TBZ X8, 0x0, 0x3A009A8
	0x03A009A4 LDR X0, [X22]
	0x03A009A8 LDP X20, X19, [X31 + 0x20]
	0x03A009AC LDP X22, X21, [X31 + 0x10]
	0x03A009B0 LDR X30, [X31], #0x30
	0x03A009B4 RET
	0x03A009B8 STR X30, [X31 - 0x30]!
	0x03A009BC STP X22, X21, [X31 + 0x10]
	0x03A009C0 STP X20, X19, [X31 + 0x20]
	0x03A009C4 ADRP X20, 0x9E1000
	0x03A009C8 ADRP X22, 0x753000
	0x03A009CC ADRP X21, 0x753000
	0x03A009D0 LDRB W8, [X20 + 0xF43]
	0x03A009D4 LDR X22, [X22 + 0xA30]
	0x03A009D8 LDR X21, [X21 + 0xFE0]
	0x03A009DC MOV X19, X0
	0x03A009E0 TBNZ X8, 0x0, 0x3A00A10
	0x03A009E4 ADRP X0, 0x753000
	0x03A009E8 LDR X0, [X0 + 0xFE0]
	0x03A009EC BL 0x1C16CF4
	0x03A009F0 ADRP X0, 0x753000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9E2000
	008 Move X22, 0x754000
	009 Move X21, 0x754000
	010 Move W8, [X23+3888]
	011 Move X22, [X22+3872]
	012 Move X21, [X21+2536]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {51}
	019 Move X0, 0x6F6000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0x754000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0x754000
	026 Move X0, [X0+3880]
	027 Call 0x1C17CF4
	028 Move X0, 0x754000
	029 Move X0, [X0+3888]
	030 Call 0x1C17CF4
	031 Move X0, 0x754000
	032 Move X0, [X0+3896]
	033 Call 0x1C17CF4
	034 Move X0, 0x754000
	035 Move X0, [X0+3904]
	036 Call 0x1C17CF4
	037 Move X0, 0x754000
	038 Move X0, [X0+3912]
	039 Call 0x1C17CF4
	040 Move X0, 0x754000
	041 Move X0, [X0+3920]
	042 Call 0x1C17CF4
	043 Move X0, 0x754000
	044 Move X0, [X0+3872]
	045 Call 0x1C17CF4
	046 Move X0, 0x753000
	047 Move X0, [X0+1680]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X23+3888], W8
	051 Move [X19+88], X20
	052 Move X1, [X22]
	053 Move X0, X19
	054 Call 0x21A9CFC, X0
	055 Move [X19+136], X0
	056 Move X1, [X21]
	057 Move X0, X19
	058 Call 0x21A4894, X0
	059 Move X8, [X19+136]
	060 Move [X19+144], X0
	061 Compare X8, 0
	062 JumpIfEqual {181}
	063 Move X0, [X19+96]
	064 Compare X0, 0
	065 JumpIfEqual {181}
	066 Move X9, [X0]
	067 Move X1, [X8+40]
	068 Move X21, 0x753000
	069 Move X20, 0x754000
	070 Move X8, [X9+1512]
	071 Move X2, [X9+1520]
	072 Move X21, [X21+1680]
	073 Move X20, [X20+3880]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X0, [X21]
	076 Move X23, [X19+112]
	077 Call 0x1C17F10
	078 Move X2, [X20]
	079 Move X1, X19
	080 Move X3, X31
	081 Move X20, X0
	082 Call Func`1<Single>..ctor, X0, X1, X2
	083 Compare X23, 0
	084 JumpIfEqual {181}
	085 Move X22, 0x6F6000
	086 Move X22, [X22+1456]
	087 Move [X23+112], X20
	088 Move X20, 0x754000
	089 Move X23, [X19+112]
	090 Move X0, [X22]
	091 Move X20, [X20+3888]
	092 Call 0x1C17F10
	093 Move X2, [X20]
	094 Move X1, X19
	095 Move X3, X31
	096 Move X20, X0
	097 Call Action`1<Single>..ctor, X0, X1, X2
	098 Compare X23, 0
	099 JumpIfEqual {181}
	100 Move [X23+120], X20
	101 Move X1, [X19+112]
	102 Compare X1, 0
	103 JumpIfEqual {181}
	104 Move X8, [X19+120]
	105 Move X20, 0x754000
	106 Move X20, [X20+3896]
	107 Move X0, X19
	108 Move [X1+80], X8
	109 Call DebugUIHandlerVector3.SetupSettings, X0, X1
	110 Move X0, [X21]
	111 Move X23, [X19+120]
	112 Call 0x1C17F10
	113 Move X2, [X20]
	114 Move X1, X19
	115 Move X3, X31
	116 Move X20, X0
	117 Call Func`1<Single>..ctor, X0, X1, X2
	118 Compare X23, 0
	119 JumpIfEqual {181}
	120 Move [X23+112], X20
	121 Move X0, [X22]
	122 Move X20, 0x754000
	123 Move X23, [X19+120]
	124 Move X20, [X20+3904]
	125 Call 0x1C17F10
	126 Move X2, [X20]
	127 Move X1, X19
	128 Move X3, X31
	129 Move X20, X0
	130 Call Action`1<Single>..ctor, X0, X1, X2
	131 Compare X23, 0
	132 JumpIfEqual {181}
	133 Move [X23+120], X20
	134 Move X1, [X19+120]
	135 Compare X1, 0
	136 JumpIfEqual {181}
	137 Move X8, [X19+112]
	138 Move X20, 0x754000
	139 Move X0, X19
	140 Move [X1+72], X8
	141 Move X8, [X19+128]
	142 Move X20, [X20+3912]
	143 Move [X1+80], X8
	144 Call DebugUIHandlerVector3.SetupSettings, X0, X1
	145 Move X0, [X21]
	146 Move X23, [X19+128]
	147 Call 0x1C17F10
	148 Move X2, [X20]
	149 Move X1, X19
	150 Move X3, X31
	151 Move X20, X0
	152 Call Func`1<Single>..ctor, X0, X1, X2
	153 Compare X23, 0
	154 JumpIfEqual {181}
	155 Move [X23+112], X20
	156 Move X0, [X22]
	157 Move X20, 0x754000
	158 Move X21, [X19+128]
	159 Move X20, [X20+3920]
	160 Call 0x1C17F10
	161 Move X2, [X20]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X20, X0
	165 Call Action`1<Single>..ctor, X0, X1, X2
	166 Compare X21, 0
	167 JumpIfEqual {181}
	168 Move [X21+120], X20
	169 Move X1, [X19+128]
	170 Compare X1, 0
	171 JumpIfEqual {181}
	172 Move X8, [X19+120]
	173 Move X0, X19
	174 Move X20, [X31+32]
	175 Move X19, [X31+40]
	176 Move X22, [X31+16]
	177 Move X21, [X31+24]
	178 Move [X1+72], X8
	179 Move X30, [X31+48]
	180 Move X23, [X31+56]
	181 Call 0x1C17F20

Method: System.Void SetValue(System.Single v, System.Boolean x = False, System.Boolean y = False, System.Boolean z = False)

Disassembly:
	0x03A00AF4 CBNZ W8, 0x3A00AFC
	0x03A00AF8 BL 0x1C16DFC
	0x03A00AFC MOV X0, X22
	0x03A00B00 MOV X1, X31
	0x03A00B04 MOV X2, X31
	0x03A00B08 BL 0x3C3883C
	0x03A00B0C TBNZ X0, 0x0, 0x3A00C54
	0x03A00B10 LDR X0, [X23]
	0x03A00B14 LDR X22, [X19 + 0x138]
	0x03A00B18 LDR W8, [X0 + 0xE0]
	0x03A00B1C CBNZ W8, 0x3A00B24
	0x03A00B20 BL 0x1C16DFC
	0x03A00B24 MOV X0, X22
	0x03A00B28 MOV X1, X31
	0x03A00B2C MOV X2, X31
	0x03A00B30 BL 0x3C3883C
	0x03A00B34 TBNZ X0, 0x0, 0x3A00C54
	0x03A00B38 LDR X0, [X23]
	0x03A00B3C LDR X22, [X19 + 0x128]
	0x03A00B40 LDR W8, [X0 + 0xE0]
	0x03A00B44 CBNZ W8, 0x3A00B4C
	0x03A00B48 BL 0x1C16DFC
	0x03A00B4C MOV X0, X22
	0x03A00B50 MOV X1, X31
	0x03A00B54 MOV X2, X31
	0x03A00B58 BL 0x3C3883C
	0x03A00B5C TBNZ X0, 0x0, 0x3A00C54
	0x03A00B60 LDR X0, [X19 + 0x130]
	0x03A00B64 CBZ X0, 0x3A00C7C
	0x03A00B68 MOV X1, X31
	0x03A00B6C BL 0x3C357F8
	0x03A00B70 AND W8, W0, 0x1
	0x03A00B74 AND W9, W21, 0x1
	0x03A00B78 CMP W8, W9
	0x03A00B7C B.EQ 0x3A00B94
	0x03A00B80 LDR X0, [X19 + 0x130]
	0x03A00B84 CBZ X0, 0x3A00C7C
	0x03A00B88 AND W1, W21, 0x1
	0x03A00B8C MOV X2, X31
	0x03A00B90 BL 0x3C357B4

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x9E2000
	009 Move W8, [X23+3889]
	010 Move W21, W3
	011 Move W20, W2
	012 Move W19, W1
	013 Move V8, V0
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x754000
	020 Move X0, [X0+3952]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+3889], W8
	024 Move X0, [X22+136]
	025 Compare X0, 0
	026 JumpIfEqual {51}
	027 Move X8, 0x754000
	028 Move X8, [X8+3952]
	029 Move X1, [X8]
	030 Call Field`1<Vector3>.GetValue, X0
	031 Move X0, [X22+136]
	032 Compare X0, 0
	033 JumpIfEqual {51}
	034 Move X8, [X0]
	035 And W31, W21, 1
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 And W31, W20, 1
	038 Move X2, [X8+568]
	039 Move X1, [X8+576]
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 And W31, W19, 1
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X30, [X31+16]
	047 Move X23, [X31+24]
	048 NotImplemented "Instruction FCSEL not yet implemented."
	049 Move V8, [X31+64]
	050 CallNoReturn X2
	051 Call 0x1C17F20

Method: System.Void SetupSettings(UnityEngine.Rendering.UI.DebugUIHandlerIndirectFloatField field)

Disassembly:
	0x03A009F4 LDR X0, [X0 + 0xA30]
	0x03A009F8 BL 0x1C16CF4
	0x03A009FC ADRP X0, 0x753000
	0x03A00A00 LDR X0, [X0 + 0xA38]
	0x03A00A04 BL 0x1C16CF4
	0x03A00A08 MOVZ W8, 0x1
	0x03A00A0C STRB W8, [X20 + 0xF43]
	0x03A00A10 MOV X0, X19
	0x03A00A14 MOV X1, X31
	0x03A00A18 BL 0x3E475D8
	0x03A00A1C LDR X0, [X22]
	0x03A00A20 LDR X20, [X19 + 0x118]
	0x03A00A24 BL 0x1C16F10
	0x03A00A28 LDR X2, [X21]
	0x03A00A2C MOV X1, X19
	0x03A00A30 MOV X3, X31
	0x03A00A34 MOV X21, X0
	0x03A00A38 BL 0x27259E8
	0x03A00A3C CBZ X20, 0x3A00A74
	0x03A00A40 ADRP X8, 0x753000
	0x03A00A44 LDR X8, [X8 + 0xA38]
	0x03A00A48 MOV X0, X20
	0x03A00A4C MOV X1, X21
	0x03A00A50 LDR X2, [X8]
	0x03A00A54 BL 0x27288B4
	0x03A00A58 LDRB W1, [X19 + 0x120]
	0x03A00A5C MOV X0, X19
	0x03A00A60 LDP X20, X19, [X31 + 0x20]
	0x03A00A64 LDP X22, X21, [X31 + 0x10]
	0x03A00A68 MOVZ W2, 0x1
	0x03A00A6C LDR X30, [X31], #0x30
	0x03A00A70 B 0x3A00A90
	0x03A00A74 BL 0x1C16F20
	0x03A00A78 AND W1, W1, 0x1
	0x03A00A7C MOVZ W2, 0x1
	0x03A00A80 B 0x3A00A90
	0x03A00A84 LDRB W1, [X0 + 0x120]
	0x03A00A88 MOV W2, W31
	0x03A00A8C B 0x3A00A90
	0x03A00A90 STP X30, X23, [X31 - 0x30]!
	0x03A00A94 STP X22, X21, [X31 + 0x10]
	0x03A00A98 STP X20, X19, [X31 + 0x20]
	0x03A00A9C ADRP X22, 0x9E1000
	0x03A00AA0 ADRP X23, 0x6F3000
	0x03A00AA4 LDRB W8, [X22 + 0xF44]
	0x03A00AA8 LDR X23, [X23 + 0x598]
	0x03A00AAC MOV W20, W2
	0x03A00AB0 MOV W21, W1
	0x03A00AB4 MOV X19, X0
	0x03A00AB8 TBNZ X8, 0x0, 0x3A00AE8
	0x03A00ABC ADRP X0, 0x6F6000
	0x03A00AC0 LDR X0, [X0 + 0x920]
	0x03A00AC4 BL 0x1C16CF4
	0x03A00AC8 ADRP X0, 0x6F3000
	0x03A00ACC LDR X0, [X0 + 0x598]
	0x03A00AD0 BL 0x1C16CF4
	0x03A00AD4 ADRP X0, 0x71A000
	0x03A00AD8 LDR X0, [X0 + 0xC70]
	0x03A00ADC BL 0x1C16CF4
	0x03A00AE0 MOVZ W8, 0x1
	0x03A00AE4 STRB W8, [X22 + 0xF44]
	0x03A00AE8 LDR X0, [X23]
	0x03A00AEC LDR X22, [X19 + 0x130]
	0x03A00AF0 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9E2000
	009 Move W8, [X21+3890]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x754000
	017 Move X0, [X0+3928]
	018 Call 0x1C17CF4
	019 Move X0, 0x754000
	020 Move X0, [X0+3936]
	021 Call 0x1C17CF4
	022 Move X0, 0x754000
	023 Move X0, [X0+3944]
	024 Call 0x1C17CF4
	025 Move X0, 0x753000
	026 Move X0, [X0+1680]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3890], W8
	030 Compare X19, 0
	031 JumpIfEqual {75}
	032 Move X22, 0x753000
	033 Move X22, [X22+1680]
	034 Move [X19+64], X20
	035 Move X21, 0x754000
	036 Move X23, 0x754000
	037 Move X0, [X22]
	038 Move X24, 0x754000
	039 Move X21, [X21+3928]
	040 Move X23, [X23+3936]
	041 Move X24, [X24+3944]
	042 Call 0x1C17F10
	043 Move X2, [X21]
	044 Move X1, X20
	045 Move X3, X31
	046 Move X21, X0
	047 Call Func`1<Single>..ctor, X0, X1, X2
	048 Move [X19+128], X21
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X2, [X23]
	052 Move X1, X20
	053 Move X3, X31
	054 Move X21, X0
	055 Call Func`1<Single>..ctor, X0, X1, X2
	056 Move [X19+136], X21
	057 Move X0, [X22]
	058 Call 0x1C17F10
	059 Move X2, [X24]
	060 Move X1, X20
	061 Move X3, X31
	062 Move X21, X0
	063 Call Func`1<Single>..ctor, X0, X1, X2
	064 Move [X19+144], X21
	065 Move X0, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Call DebugUIHandlerIndirectFloatField.UpdateValueLabel, X0
	074 Return 
	075 Call 0x1C17F20

Method: System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)

Disassembly:
	0x03A00B94 LDR X0, [X19 + 0x138]
	0x03A00B98 CBZ X0, 0x3A00C7C
	0x03A00B9C MOV X1, X31
	0x03A00BA0 BL 0x3C357F8
	0x03A00BA4 EOR W8, W0, W21, 0x0
	0x03A00BA8 TBNZ X8, 0x0, 0x3A00BC4
	0x03A00BAC LDR X0, [X19 + 0x138]
	0x03A00BB0 CBZ X0, 0x3A00C7C
	0x03A00BB4 ORN W8, W31, W21, 0x0
	0x03A00BB8 AND W1, W8, 0x1
	0x03A00BBC MOV X2, X31
	0x03A00BC0 BL 0x3C357B4
	0x03A00BC4 LDR X0, [X19 + 0x128]
	0x03A00BC8 CBZ X0, 0x3A00C7C
	0x03A00BCC MOV X1, X31
	0x03A00BD0 BL 0x3C357F8
	0x03A00BD4 AND W8, W0, 0x1
	0x03A00BD8 AND W9, W21, 0x1
	0x03A00BDC CMP W8, W9
	0x03A00BE0 B.EQ 0x3A00BF8
	0x03A00BE4 LDR X0, [X19 + 0x128]
	0x03A00BE8 CBZ X0, 0x3A00C7C
	0x03A00BEC AND W1, W21, 0x1
	0x03A00BF0 MOV X2, X31
	0x03A00BF4 BL 0x3C357B4
	0x03A00BF8 TBZ X20, 0x0, 0x3A00C54
	0x03A00BFC MOV X0, X19
	0x03A00C00 MOV X1, X31
	0x03A00C04 BL 0x3C32E90
	0x03A00C08 CBZ X0, 0x3A00C7C
	0x03A00C0C MOV X1, X31
	0x03A00C10 BL 0x3C3F49C
	0x03A00C14 ADRP X8, 0x6F6000
	0x03A00C18 LDR X8, [X8 + 0x920]
	0x03A00C1C MOV X19, X0
	0x03A00C20 LDR X8, [X8]
	0x03A00C24 LDR W9, [X8 + 0xE0]
	0x03A00C28 CBNZ W9, 0x3A00C34
	0x03A00C2C MOV X0, X8
	0x03A00C30 BL 0x1C16DFC
	0x03A00C34 CBZ X19, 0x3A00C64
	0x03A00C38 ADRP X8, 0x71A000
	0x03A00C3C LDR X8, [X8 + 0xC70]
	0x03A00C40 LDR X9, [X19]
	0x03A00C44 LDR X8, [X8]
	0x03A00C48 CMP X9, X8
	0x03A00C4C CSEL X0, X19, X31, EQ
	0x03A00C50 B 0x3A00C68
	0x03A00C54 LDP X20, X19, [X31 + 0x20]
	0x03A00C58 LDP X22, X21, [X31 + 0x10]
	0x03A00C5C LDP X30, X23, [X31], #0x30
	0x03A00C60 RET
	0x03A00C64 MOV X0, X31
	0x03A00C68 LDP X20, X19, [X31 + 0x20]
	0x03A00C6C LDP X22, X21, [X31 + 0x10]
	0x03A00C70 MOV X1, X31
	0x03A00C74 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9E2000
	007 Move W8, [X22+3891]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x751000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3891], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {39}
	024 Move X8, [X19+104]
	025 Compare X8, 0
	026 JumpIfEqual {78}
	027 Move W8, [X8+288]
	028 Compare W8, 0
	029 JumpIfEqual {39}
	030 Move X0, [X19+144]
	031 Compare X0, 0
	032 JumpIfEqual {78}
	033 Move X1, X20
	034 Call DebugUIHandlerContainer.IsDirectChild, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X0, [X19+96]
	040 Compare X0, 0
	041 JumpIfEqual {78}
	042 Move X8, [X0]
	043 Move S2, [X19+56]
	044 Move S3, [X19+60]
	045 Move S0, [X19+48]
	046 Move S1, [X19+52]
	047 Move X9, [X8+680]
	048 Move X1, [X8+688]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W0, 1
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X0, [X19+144]
	058 Compare X0, 0
	059 JumpIfEqual {78}
	060 Call DebugUIHandlerContainer.GetLastItem, X0
	061 Move X8, 0x751000
	062 Move X8, [X8+1912]
	063 Move X19, X0
	064 Move X8, [X8]
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X31
	071 Call DebugManager.get_instance
	072 Compare X0, 0
	073 JumpIfEqual {78}
	074 Move X1, X19
	075 Move W2, W31
	076 Move X3, X31
	077 Call DebugManager.ChangeSelection, X0, X1, X2
	078 Call 0x1C17F20

Method: System.Void OnDeselection()

Disassembly:
	0x03A00C78 B 0x3E34120
	0x03A00C7C BL 0x1C16F20
	0x03A00C80 MOV X1, X31
	0x03A00C84 B 0x3E469E0
	0x03A00C88 MOV X1, X31
	0x03A00C8C B 0x33A51F0
	0x03A00C90 MOV X1, X31
	0x03A00C94 B 0x33A51F0
	0x03A00C98 STP X30, X21, [X31 - 0x20]!
	0x03A00C9C STP X20, X19, [X31 + 0x10]
	0x03A00CA0 ADRP X21, 0x9E1000
	0x03A00CA4 ADRP X20, 0x753000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+96]
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 Move X9, [X0]
	007 Move S2, [X8+40]
	008 Move S3, [X8+44]
	009 Move S0, [X8+32]
	010 Move S1, [X8+36]
	011 Move X2, [X9+680]
	012 Move X1, [X9+688]
	013 Move X30, [X31+16]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Void OnIncrement(System.Boolean fast)

Disassembly:
	0x03A00CA8 LDRB W8, [X21 + 0xF45]
	0x03A00CAC LDR X20, [X20 + 0xFE8]
	0x03A00CB0 MOV X19, X0
	0x03A00CB4 TBNZ X8, 0x0, 0x3A00CCC
	0x03A00CB8 ADRP X0, 0x753000
	0x03A00CBC LDR X0, [X0 + 0xFE8]
	0x03A00CC0 BL 0x1C16CF4
	0x03A00CC4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnDecrement(System.Boolean fast)

Disassembly:
	0x03A00CC8 STRB W8, [X21 + 0xF45]
	0x03A00CCC MOV X0, X19
	0x03A00CD0 MOV X1, X31
	0x03A00CD4 BL 0x3C389D4
	0x03A00CD8 LDR X8, [X20]
	0x03A00CDC MOV X20, X0
	0x03A00CE0 MOV X0, X8
	0x03A00CE4 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, W31
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnAction()

Disassembly:
	0x03A00CE8 MOV X1, X20
	0x03A00CEC MOV X21, X0
	0x03A00CF0 BL 0x3A00D04
	0x03A00CF4 STR X21, [X19 + 0x40]
	0x03A00CF8 LDP X20, X19, [X31 + 0x10]
	0x03A00CFC LDP X30, X21, [X31], #0x20
	0x03A00D00 RET
	0x03A00D04 STR X30, [X31 - 0x30]!
	0x03A00D08 STP X22, X21, [X31 + 0x10]
	0x03A00D0C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move W8, [X0+288]
	006 Move X2, X31
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Call Toggle.set_isOn, X0, X1
	011 Return 
	012 Call 0x1C17F20

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget Next()

Disassembly:
	0x03A00D10 ADRP X22, 0x9E1000
	0x03A00D14 ADRP X21, 0x753000
	0x03A00D18 LDRB W8, [X22 + 0xF47]
	0x03A00D1C LDR X21, [X21 + 0xFF0]
	0x03A00D20 MOV X20, X1
	0x03A00D24 MOV X19, X0
	0x03A00D28 TBNZ X8, 0x0, 0x3A00D4C
	0x03A00D2C ADRP X0, 0x750000
	0x03A00D30 LDR X0, [X0 + 0x598]
	0x03A00D34 BL 0x1C16CF4
	0x03A00D38 ADRP X0, 0x753000
	0x03A00D3C LDR X0, [X0 + 0xFF0]
	0x03A00D40 BL 0x1C16CF4
	0x03A00D44 MOVZ W8, 0x1
	0x03A00D48 STRB W8, [X22 + 0xF47]
	0x03A00D4C LDR X0, [X21]
	0x03A00D50 ADRP X21, 0x750000
	0x03A00D54 LDR W8, [X0 + 0xE0]
	0x03A00D58 LDR X21, [X21 + 0x598]
	0x03A00D5C CBNZ W8, 0x3A00D64
	0x03A00D60 BL 0x1C16DFC
	0x03A00D64 MOV X0, X19
	0x03A00D68 MOV X1, X31
	0x03A00D6C BL 0x3A4225C
	0x03A00D70 LDR X0, [X21]
	0x03A00D74 BL 0x1C16F10
	0x03A00D78 MOV X1, X20
	0x03A00D7C MOV X2, X31
	0x03A00D80 MOV X21, X0
	0x03A00D84 BL 0x39B19AC
	0x03A00D88 STR X21, [X19 + 0x38]
	0x03A00D8C LDP X20, X19, [X31 + 0x20]
	0x03A00D90 LDP X22, X21, [X31 + 0x10]
	0x03A00D94 LDR X30, [X31], #0x30
	0x03A00D98 RET
	0x03A00D9C MOVZ W8, 0x1
	0x03A00DA0 MOV W0, W31
	0x03A00DA4 STR W8, [X3]
	0x03A00DA8 STR W31, [X4]
	0x03A00DAC RET
	0x03A00DB0 STP X30, X23, [X31 - 0x30]!
	0x03A00DB4 STP X22, X21, [X31 + 0x10]
	0x03A00DB8 STP X20, X19, [X31 + 0x20]
	0x03A00DBC ADRP X23, 0x9E1000
	0x03A00DC0 ADRP X22, 0x753000
	0x03A00DC4 LDRB W8, [X23 + 0xF46]
	0x03A00DC8 LDR X22, [X22 + 0xFF8]
	0x03A00DCC MOV X21, X2
	0x03A00DD0 MOV X20, X1
	0x03A00DD4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E2000
	006 Move W8, [X20+3892]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6F4000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3892], W8
	017 Move X8, [X19+104]
	018 Compare X8, 0
	019 JumpIfEqual {71}
	020 Move W8, [X8+288]
	021 Compare W8, 0
	022 JumpIfEqual {58}
	023 Move X21, 0x6F4000
	024 Move X21, [X21+1432]
	025 Move X20, [X19+144]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {58}
	039 Move X0, [X19+144]
	040 Compare X0, 0
	041 JumpIfEqual {71}
	042 Call DebugUIHandlerContainer.GetFirstItem, X0
	043 Move X8, [X21]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {65}
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call DebugUIHandlerWidget.Next, X0
	064 Return X0
	065 Move X0, X20
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A00DD8 TBNZ X8, 0x0, 0x3A00E2C
	0x03A00DDC ADRP X0, 0x6F3000
	0x03A00DE0 LDR X0, [X0 + 0xA28]
	0x03A00DE4 BL 0x1C16CF4
	0x03A00DE8 ADRP X0, 0x6F3000
	0x03A00DEC LDR X0, [X0 + 0x9D0]
	0x03A00DF0 BL 0x1C16CF4

ISIL:
	001 Move X8, -49360896
	002 Move X9, -49364992
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

Method: System.Single <SetWidget>b__7_0()

Disassembly:
	0x03A00DF4 ADRP X0, 0x6F3000
	0x03A00DF8 LDR X0, [X0 + 0x598]
	0x03A00DFC BL 0x1C16CF4
	0x03A00E00 ADRP X0, 0x753000
	0x03A00E04 LDR X0, [X0 + 0xFF8]
	0x03A00E08 BL 0x1C16CF4
	0x03A00E0C ADRP X0, 0x754000
	0x03A00E10 LDR X0, [X0]
	0x03A00E14 BL 0x1C16CF4
	0x03A00E18 ADRP X0, 0x754000
	0x03A00E1C LDR X0, [X0 + 0x8]
	0x03A00E20 BL 0x1C16CF4
	0x03A00E24 MOVZ W8, 0x1
	0x03A00E28 STRB W8, [X23 + 0xF46]
	0x03A00E2C LDR X0, [X22]
	0x03A00E30 ADD X22, X21, 0x18
	0x03A00E34 LDR W8, [X0 + 0xE0]
	0x03A00E38 CBNZ W8, 0x3A00E40
	0x03A00E3C BL 0x1C16DFC
	0x03A00E40 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E2000
	005 Move W8, [X20+3893]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x754000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3893], W8
	016 Move X0, [X19+136]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x754000
	020 Move X8, [X8+3952]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Field`1<Vector3>.GetValue, X0
	026 Return V0
	027 Call 0x1C17F20

Method: System.Void <SetWidget>b__7_1(System.Single v)

Disassembly:
	0x03A00E44 MOV X1, X31
	0x03A00E48 BL 0x3A83C1C
	0x03A00E4C TBNZ X0, 0x0, 0x3A00E64
	0x03A00E50 LDR W8, [X21 + 0x180]

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Move W3, W31
	004 Call DebugUIHandlerVector3.SetValue, X0, V0, X1, X2, X3
	005 Return 

Method: System.Single <SetWidget>b__7_2()

Disassembly:
	0x03A00E54 CMP W8, 0x4
	0x03A00E58 B.EQ 0x3A00E64
	0x03A00E5C CMP W8, 0x10
	0x03A00E60 B.NE 0x3A00E74
	0x03A00E64 LDP X20, X19, [X31 + 0x20]
	0x03A00E68 LDP X22, X21, [X31 + 0x10]
	0x03A00E6C LDP X30, X23, [X31], #0x30
	0x03A00E70 RET
	0x03A00E74 ADRP X8, 0x6F3000
	0x03A00E78 LDR X8, [X8 + 0x598]
	0x03A00E7C LDR X21, [X19 + 0x28]
	0x03A00E80 LDR X0, [X8]
	0x03A00E84 LDR W8, [X0 + 0xE0]
	0x03A00E88 CBNZ W8, 0x3A00E90
	0x03A00E8C BL 0x1C16DFC
	0x03A00E90 MOV X0, X21
	0x03A00E94 MOV X1, X31
	0x03A00E98 MOV X2, X31
	0x03A00E9C BL 0x3C3883C
	0x03A00EA0 TBZ X0, 0x0, 0x3A00F18
	0x03A00EA4 ADRP X8, 0x6F3000
	0x03A00EA8 LDR X8, [X8 + 0x9D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E2000
	005 Move W8, [X20+3894]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x754000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3894], W8
	016 Move X0, [X19+136]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x754000
	020 Move X8, [X8+3952]
	021 Move X1, [X8]
	022 Call Field`1<Vector3>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V1
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__7_3(System.Single v)

Disassembly:
	0x03A00EAC MOVZ W1, 0x1
	0x03A00EB0 LDR X0, [X8]
	0x03A00EB4 BL 0x1C16D6C
	0x03A00EB8 MOV X20, X0

ISIL:
	001 Move W2, 1
	002 Move W1, W31
	003 Move W3, W31
	004 Call DebugUIHandlerVector3.SetValue, X0, V0, X1, X2, X3
	005 Return 

Method: System.Single <SetWidget>b__7_4()

Disassembly:
	0x03A00EBC MOV X0, X19
	0x03A00EC0 MOV X1, X31
	0x03A00EC4 BL 0x3C389D4
	0x03A00EC8 CBZ X20, 0x3A01018
	0x03A00ECC MOV X19, X0
	0x03A00ED0 CBZ X0, 0x3A00EE8
	0x03A00ED4 LDR X8, [X20]
	0x03A00ED8 MOV X0, X19
	0x03A00EDC LDR X1, [X8 + 0x40]
	0x03A00EE0 BL 0x1C16E00
	0x03A00EE4 CBZ X0, 0x3A01020
	0x03A00EE8 LDR W8, [X20 + 0x18]
	0x03A00EEC CBZ W8, 0x3A0101C
	0x03A00EF0 STR X19, [X20 + 0x20]
	0x03A00EF4 ADRP X8, 0x6F3000
	0x03A00EF8 LDR X8, [X8 + 0xA28]
	0x03A00EFC LDR X0, [X8]
	0x03A00F00 LDR W8, [X0 + 0xE0]
	0x03A00F04 CBNZ W8, 0x3A00F0C
	0x03A00F08 BL 0x1C16DFC
	0x03A00F0C ADRP X8, 0x754000
	0x03A00F10 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E2000
	005 Move W8, [X20+3895]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x754000
	012 Move X0, [X0+3952]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3895], W8
	016 Move X0, [X19+136]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x754000
	020 Move X8, [X8+3952]
	021 Move X1, [X8]
	022 Call Field`1<Vector3>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V2
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__7_5(System.Single v)

Disassembly:
	0x03A00F14 B 0x3A00FFC
	0x03A00F18 LDR W21, [X19 + 0x34]
	0x03A00F1C TBNZ X21, 0x1F, 0x3A00F8C
	0x03A00F20 LDR X0, [X19 + 0x28]

ISIL:
	001 Move W3, 1
	002 Move W1, W31
	003 Move W2, W31
	004 Call DebugUIHandlerVector3.SetValue, X0, V0, X1, X2, X3
	005 Return 

Method: System.Single <SetupSettings>b__9_0()

Disassembly:
	0x03A00F24 CBZ X0, 0x3A01018
	0x03A00F28 MOV X1, X31
	0x03A00F2C BL 0x3C14FD4
	0x03A00F30 CMP W21, W0
	0x03A00F34 B.GE 0x3A00F8C
	0x03A00F38 LDR X1, [X19 + 0x40]
	0x03A00F3C CBZ X1, 0x3A01018

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+136]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+96]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Single <SetupSettings>b__9_1()

Disassembly:
	0x03A00F40 LDR W8, [X19 + 0x1C]
	0x03A00F44 STR W8, [X1 + 0x10]
	0x03A00F48 LDR W8, [X19 + 0x24]
	0x03A00F4C STR W8, [X1 + 0xC8]
	0x03A00F50 LDR X8, [X19 + 0x28]
	0x03A00F54 LDR W9, [X19 + 0x34]
	0x03A00F58 LDRB W10, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+136]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+100]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Single <SetupSettings>b__9_2()

Disassembly:
	0x03A00F5C LDRB W11, [X19 + 0x38]
	0x03A00F60 STR X8, [X1 + 0xE0]
	0x03A00F64 STR W9, [X1 + 0xE8]
	0x03A00F68 STRB W10, [X1 + 0xEC]
	0x03A00F6C STRB W11, [X1 + 0xED]
	0x03A00F70 CBZ X20, 0x3A01018
	0x03A00F74 MOV X0, X20
	0x03A00F78 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+136]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move V0, [X8+104]
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Move X30, [X31+16]
	008 Return V0
	009 Call 0x1C17F20

