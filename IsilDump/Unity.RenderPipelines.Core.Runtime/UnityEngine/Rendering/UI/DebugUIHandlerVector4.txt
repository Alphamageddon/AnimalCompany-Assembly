Type: UnityEngine.Rendering.UI.DebugUIHandlerVector4

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x03A00F7C LDP X22, X21, [X31 + 0x10]
	0x03A00F80 MOV X2, X31
	0x03A00F84 LDP X30, X23, [X31], #0x30
	0x03A00F88 B 0x3A4E96C
	0x03A00F8C ADRP X8, 0x6F3000
	0x03A00F90 LDR X8, [X8 + 0x9D0]
	0x03A00F94 MOVZ W1, 0x1
	0x03A00F98 LDR X0, [X8]
	0x03A00F9C BL 0x1C16D6C
	0x03A00FA0 MOV X20, X0
	0x03A00FA4 MOV X0, X19
	0x03A00FA8 MOV X1, X31
	0x03A00FAC BL 0x3C389D4
	0x03A00FB0 CBZ X20, 0x3A01018
	0x03A00FB4 MOV X19, X0
	0x03A00FB8 CBZ X0, 0x3A00FD0
	0x03A00FBC LDR X8, [X20]
	0x03A00FC0 MOV X0, X19
	0x03A00FC4 LDR X1, [X8 + 0x40]
	0x03A00FC8 BL 0x1C16E00
	0x03A00FCC CBZ X0, 0x3A01020
	0x03A00FD0 LDR W8, [X20 + 0x18]
	0x03A00FD4 CBZ W8, 0x3A0101C
	0x03A00FD8 STR X19, [X20 + 0x20]
	0x03A00FDC ADRP X8, 0x6F3000
	0x03A00FE0 LDR X8, [X8 + 0xA28]
	0x03A00FE4 LDR X0, [X8]
	0x03A00FE8 LDR W8, [X0 + 0xE0]
	0x03A00FEC CBNZ W8, 0x3A00FF4
	0x03A00FF0 BL 0x1C16DFC
	0x03A00FF4 ADRP X8, 0x754000
	0x03A00FF8 LDR X8, [X8 + 0x8]
	0x03A00FFC LDR X0, [X8]
	0x03A01000 MOV X1, X20
	0x03A01004 LDP X20, X19, [X31 + 0x20]
	0x03A01008 LDP X22, X21, [X31 + 0x10]
	0x03A0100C MOV X2, X31
	0x03A01010 LDP X30, X23, [X31], #0x30
	0x03A01014 B 0x3C06C24
	0x03A01018 BL 0x1C16F20
	0x03A0101C BL 0x1C16F28
	0x03A01020 BL 0x1C16F44
	0x03A01024 MOV X1, X31
	0x03A01028 BL 0x1C16DEC
	0x03A0102C AND W8, W3, 0x1
	0x03A01030 AND W9, W4, 0x1
	0x03A01034 STR X1, [X0 + 0xE0]
	0x03A01038 STR W2, [X0 + 0xE8]
	0x03A0103C STRB W8, [X0 + 0xEC]
	0x03A01040 STRB W9, [X0 + 0xED]
	0x03A01044 RET
	0x03A01048 STR X30, [X31 - 0x10]!
	0x03A0104C LDR X8, [X0 + 0x40]
	0x03A01050 CBZ X8, 0x3A01070
	0x03A01054 LDR X0, [X8 + 0xF0]
	0x03A01058 CBZ X0, 0x3A01068
	0x03A0105C MOV X1, X31
	0x03A01060 LDR X30, [X31], #0x10
	0x03A01064 B 0x39D4B1C
	0x03A01068 LDR X30, [X31], #0x10
	0x03A0106C RET
	0x03A01070 BL 0x1C16F20
	0x03A01074 LDR X0, [X0 + 0xF0]
	0x03A01078 CBZ X0, 0x3A01084
	0x03A0107C MOV X1, X31
	0x03A01080 B 0x39D4B1C
	0x03A01084 RET
	0x03A01088 RET
	0x03A0108C LDR W8, [X0 + 0x48]
	0x03A01090 ADDS W31, W8, 0x1
	0x03A01094 B.EQ 0x3A0109C
	0x03A01098 RET
	0x03A0109C MOVZ W8, 0x1
	0x03A010A0 STR W8, [X0 + 0x48]
	0x03A010A4 RET
	0x03A010A8 LDR W8, [X0 + 0x48]
	0x03A010AC ADDS W31, W8, 0x1
	0x03A010B0 B.EQ 0x3A010B8
	0x03A010B4 RET
	0x03A010B8 STR W31, [X0 + 0x48]
	0x03A010BC RET
	0x03A010C0 MOVZ W8, 0x258
	0x03A010C4 MOVZ W9, 0x1
	0x03A010C8 MOVN W10, 0x0
	0x03A010CC MOV X1, X31
	0x03A010D0 STR W8, [X0 + 0x1C]
	0x03A010D4 STRB W9, [X0 + 0x20]
	0x03A010D8 STR W10, [X0 + 0x48]
	0x03A010DC B 0x3A6BA9C
	0x03A010E0 SUB X31, X31, 0x60
	0x03A010E4 STR X30, [X31 + 0x40]
	0x03A010E8 STP X20, X19, [X31 + 0x50]
	0x03A010EC MOV X1, X31
	0x03A010F0 MOV X20, X2
	0x03A010F4 MOV X19, X0
	0x03A010F8 BL 0x3A43DE8
	0x03A010FC LDRB W8, [X19 + 0xEC]
	0x03A01100 CBZ W8, 0x3A01128
	0x03A01104 LDR W8, [X20 + 0x120]
	0x03A01108 LDP V1, V0, [X20 + 0x100]
	0x03A0110C LDR V2, [X20 + 0xF]
	0x03A01110 ADD X1, X31, 0x0
	0x03A01114 MOV X0, X19
	0x03A01118 STR W8, [X31 + 0x30]
	0x03A0111C STP V1, V0, [X31 + 0x10]
	0x03A01120 STR V2, [X31]
	0x03A01124 BL 0x3A01138
	0x03A01128 LDP X20, X19, [X31 + 0x50]
	0x03A0112C LDR X30, [X31 + 0x40]
	0x03A01130 ADD X31, X31, 0x60
	0x03A01134 RET
	0x03A01138 STR X30, [X31 - 0x30]!
	0x03A0113C STP X22, X21, [X31 + 0x10]
	0x03A01140 STP X20, X19, [X31 + 0x20]
	0x03A01144 ADRP X22, 0x9E0000
	0x03A01148 ADRP X21, 0x753000
	0x03A0114C LDRB W8, [X22 + 0xF48]
	0x03A01150 LDR X21, [X21 + 0x10]
	0x03A01154 MOV X19, X1
	0x03A01158 MOV X20, X0
	0x03A0115C TBNZ X8, 0x0, 0x3A01180
	0x03A01160 ADRP X0, 0x753000
	0x03A01164 LDR X0, [X0 + 0x10]
	0x03A01168 BL 0x1C16CF4
	0x03A0116C ADRP X0, 0x753000
	0x03A01170 LDR X0, [X0 + 0x18]
	0x03A01174 BL 0x1C16CF4
	0x03A01178 MOVZ W8, 0x1
	0x03A0117C STRB W8, [X22 + 0xF48]
	0x03A01180 ADRP X22, 0x753000
	0x03A01184 LDR X22, [X22 + 0x18]
	0x03A01188 MOVZ W8, 0x1
	0x03A0118C MOV X0, X19
	0x03A01190 MOV W1, W31
	0x03A01194 MOV X2, X31
	0x03A01198 STR W8, [X19 + 0x8]
	0x03A0119C BL 0x3C22520
	0x03A011A0 LDR X0, [X21]
	0x03A011A4 LDR W8, [X0 + 0xE0]
	0x03A011A8 CBNZ W8, 0x3A011B0
	0x03A011AC BL 0x1C16DFC
	0x03A011B0 LDR X6, [X22]
	0x03A011B4 ADD X0, X20, 0xF0
	0x03A011B8 MOV X1, X19
	0x03A011BC LDP X20, X19, [X31 + 0x20]
	0x03A011C0 LDP X22, X21, [X31 + 0x10]
	0x03A011C4 FMOV S0, W31
	0x03A011C8 MOVZ W5, 0x1
	0x03A011CC MOV W2, W31
	0x03A011D0 MOV W3, W31
	0x03A011D4 MOV W4, W31
	0x03A011D8 MOV X7, X31
	0x03A011DC LDR X30, [X31], #0x30
	0x03A011E0 B 0x3A6D184
	0x03A011E4 STR X30, [X31 - 0x30]!
	0x03A011E8 STP X22, X21, [X31 + 0x10]
	0x03A011EC STP X20, X19, [X31 + 0x20]
	0x03A011F0 ADRP X21, 0x9E0000
	0x03A011F4 ADRP X22, 0x751000
	0x03A011F8 LDRB W8, [X21 + 0xF49]
	0x03A011FC LDR X22, [X22 + 0xE28]
	0x03A01200 MOV X19, X1
	0x03A01204 MOV X20, X0
	0x03A01208 TBNZ X8, 0x0, 0x3A01220
	0x03A0120C ADRP X0, 0x751000
	0x03A01210 LDR X0, [X0 + 0xE28]
	0x03A01214 BL 0x1C16CF4
	0x03A01218 MOVZ W8, 0x1
	0x03A0121C STRB W8, [X21 + 0xF49]
	0x03A01220 LDR X0, [X22]
	0x03A01224 LDR W8, [X0 + 0xE0]
	0x03A01228 CBNZ W8, 0x3A01230
	0x03A0122C BL 0x1C16DFC
	0x03A01230 MOV X0, X20
	0x03A01234 MOV X1, X19
	0x03A01238 LDP X20, X19, [X31 + 0x20]
	0x03A0123C LDP X22, X21, [X31 + 0x10]
	0x03A01240 FMOV S0, 1
	0x03A01244 FMOV S1, 1
	0x03A01248 FMOV S2, W31
	0x03A0124C FMOV S3, W31
	0x03A01250 FMOV S4, W31
	0x03A01254 MOV W2, W31
	0x03A01258 MOV X3, X31
	0x03A0125C LDR X30, [X31], #0x30
	0x03A01260 B 0x39E2260
	0x03A01264 SUB X31, X31, 0xE0
	0x03A01268 STR X30, [X31 + 0x90]
	0x03A0126C STP X26, X25, [X31 + 0xA0]
	0x03A01270 STP X24, X23, [X31 + 0xB0]
	0x03A01274 STP X22, X21, [X31 + 0xC0]
	0x03A01278 STP X20, X19, [X31 + 0xD0]
	0x03A0127C ADRP X23, 0x9E0000
	0x03A01280 ADRP X25, 0x752000
	0x03A01284 LDRB W8, [X23 + 0xF4A]
	0x03A01288 LDR X25, [X25 + 0xFE8]
	0x03A0128C MOV W19, W3
	0x03A01290 MOV X20, X2
	0x03A01294 MOV X22, X1
	0x03A01298 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9E2000
	008 Move X22, 0x754000
	009 Move X21, 0x754000
	010 Move W8, [X23+3896]
	011 Move X22, [X22+3960]
	012 Move X21, [X21+2536]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x6F6000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0x754000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0x754000
	026 Move X0, [X0+3968]
	027 Call 0x1C17CF4
	028 Move X0, 0x754000
	029 Move X0, [X0+3976]
	030 Call 0x1C17CF4
	031 Move X0, 0x754000
	032 Move X0, [X0+3984]
	033 Call 0x1C17CF4
	034 Move X0, 0x754000
	035 Move X0, [X0+3992]
	036 Call 0x1C17CF4
	037 Move X0, 0x754000
	038 Move X0, [X0+4000]
	039 Call 0x1C17CF4
	040 Move X0, 0x753000
	041 Move X0, [X0+4008]
	042 Call 0x1C17CF4
	043 Move X0, 0x753000
	044 Move X0, [X0+4016]
	045 Call 0x1C17CF4
	046 Move X0, 0x753000
	047 Move X0, [X0+4024]
	048 Call 0x1C17CF4
	049 Move X0, 0x753000
	050 Move X0, [X0+3960]
	051 Call 0x1C17CF4
	052 Move X0, 0x752000
	053 Move X0, [X0+1680]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+3896], W8
	057 Move [X19+88], X20
	058 Move X1, [X22]
	059 Move X0, X19
	060 Call 0x21A9CFC, X0
	061 Move [X19+144], X0
	062 Move X1, [X21]
	063 Move X0, X19
	064 Call 0x21A4894, X0
	065 Move X8, [X19+144]
	066 Move [X19+152], X0
	067 Compare X8, 0
	068 JumpIfEqual {222}
	069 Move X0, [X19+96]
	070 Compare X0, 0
	071 JumpIfEqual {222}
	072 Move X9, [X0]
	073 Move X1, [X8+40]
	074 Move X21, 0x752000
	075 Move X20, 0x753000
	076 Move X8, [X9+1512]
	077 Move X2, [X9+1520]
	078 Move X21, [X21+1680]
	079 Move X20, [X20+3968]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X0, [X21]
	082 Move X23, [X19+112]
	083 Call 0x1C17F10
	084 Move X2, [X20]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X20, X0
	088 Call Func`1<Single>..ctor, X0, X1, X2
	089 Compare X23, 0
	090 JumpIfEqual {222}
	091 Move X22, 0x6F5000
	092 Move X22, [X22+1456]
	093 Move [X23+112], X20
	094 Move X20, 0x753000
	095 Move X23, [X19+112]
	096 Move X0, [X22]
	097 Move X20, [X20+3976]
	098 Call 0x1C17F10
	099 Move X2, [X20]
	100 Move X1, X19
	101 Move X3, X31
	102 Move X20, X0
	103 Call Action`1<Single>..ctor, X0, X1, X2
	104 Compare X23, 0
	105 JumpIfEqual {222}
	106 Move [X23+120], X20
	107 Move X1, [X19+112]
	108 Compare X1, 0
	109 JumpIfEqual {222}
	110 Move X8, [X19+120]
	111 Move X20, 0x753000
	112 Move X20, [X20+3984]
	113 Move X0, X19
	114 Move [X1+80], X8
	115 Call DebugUIHandlerVector4.SetupSettings, X0, X1
	116 Move X0, [X21]
	117 Move X23, [X19+120]
	118 Call 0x1C17F10
	119 Move X2, [X20]
	120 Move X1, X19
	121 Move X3, X31
	122 Move X20, X0
	123 Call Func`1<Single>..ctor, X0, X1, X2
	124 Compare X23, 0
	125 JumpIfEqual {222}
	126 Move [X23+112], X20
	127 Move X0, [X22]
	128 Move X20, 0x753000
	129 Move X23, [X19+120]
	130 Move X20, [X20+3992]
	131 Call 0x1C17F10
	132 Move X2, [X20]
	133 Move X1, X19
	134 Move X3, X31
	135 Move X20, X0
	136 Call Action`1<Single>..ctor, X0, X1, X2
	137 Compare X23, 0
	138 JumpIfEqual {222}
	139 Move [X23+120], X20
	140 Move X1, [X19+120]
	141 Compare X1, 0
	142 JumpIfEqual {222}
	143 Move X8, [X19+112]
	144 Move X20, 0x753000
	145 Move X0, X19
	146 Move [X1+72], X8
	147 Move X8, [X19+128]
	148 Move X20, [X20+4000]
	149 Move [X1+80], X8
	150 Call DebugUIHandlerVector4.SetupSettings, X0, X1
	151 Move X0, [X21]
	152 Move X23, [X19+128]
	153 Call 0x1C17F10
	154 Move X2, [X20]
	155 Move X1, X19
	156 Move X3, X31
	157 Move X20, X0
	158 Call Func`1<Single>..ctor, X0, X1, X2
	159 Compare X23, 0
	160 JumpIfEqual {222}
	161 Move [X23+112], X20
	162 Move X0, [X22]
	163 Move X20, 0x753000
	164 Move X23, [X19+128]
	165 Move X20, [X20+4008]
	166 Call 0x1C17F10
	167 Move X2, [X20]
	168 Move X1, X19
	169 Move X3, X31
	170 Move X20, X0
	171 Call Action`1<Single>..ctor, X0, X1, X2
	172 Compare X23, 0
	173 JumpIfEqual {222}
	174 Move [X23+120], X20
	175 Move X1, [X19+128]
	176 Compare X1, 0
	177 JumpIfEqual {222}
	178 Move X8, [X19+120]
	179 Move X20, 0x753000
	180 Move X0, X19
	181 Move [X1+72], X8
	182 Move X8, [X19+136]
	183 Move X20, [X20+4016]
	184 Move [X1+80], X8
	185 Call DebugUIHandlerVector4.SetupSettings, X0, X1
	186 Move X0, [X21]
	187 Move X23, [X19+136]
	188 Call 0x1C17F10
	189 Move X2, [X20]
	190 Move X1, X19
	191 Move X3, X31
	192 Move X20, X0
	193 Call Func`1<Single>..ctor, X0, X1, X2
	194 Compare X23, 0
	195 JumpIfEqual {222}
	196 Move [X23+112], X20
	197 Move X0, [X22]
	198 Move X20, 0x753000
	199 Move X21, [X19+136]
	200 Move X20, [X20+4024]
	201 Call 0x1C17F10
	202 Move X2, [X20]
	203 Move X1, X19
	204 Move X3, X31
	205 Move X20, X0
	206 Call Action`1<Single>..ctor, X0, X1, X2
	207 Compare X21, 0
	208 JumpIfEqual {222}
	209 Move [X21+120], X20
	210 Move X1, [X19+136]
	211 Compare X1, 0
	212 JumpIfEqual {222}
	213 Move X8, [X19+128]
	214 Move X0, X19
	215 Move X20, [X31+32]
	216 Move X19, [X31+40]
	217 Move X22, [X31+16]
	218 Move X21, [X31+24]
	219 Move [X1+72], X8
	220 Move X30, [X31+48]
	221 Move X23, [X31+56]
	222 Call 0x1C17F20

Method: System.Void SetValue(System.Single v, System.Boolean x = False, System.Boolean y = False, System.Boolean z = False, System.Boolean w = False)

Disassembly:
	0x03A0139C FMOV S3, W31
	0x03A013A0 MOV X0, X22
	0x03A013A4 MOV X2, X31
	0x03A013A8 LDR W1, [X8 + 0xA4]
	0x03A013AC BL 0x3C12720
	0x03A013B0 ADRP X22, 0x9D7000
	0x03A013B4 LDRB W8, [X22 + 0xAC0]
	0x03A013B8 CBNZ W8, 0x3A013D0
	0x03A013BC ADRP X0, 0x6F6000
	0x03A013C0 LDR X0, [X0 + 0x270]
	0x03A013C4 BL 0x1C16CF4
	0x03A013C8 MOVZ W8, 0x1
	0x03A013CC STRB W8, [X22 + 0xAC0]
	0x03A013D0 ADRP X8, 0x6F6000
	0x03A013D4 LDR X8, [X8 + 0x270]
	0x03A013D8 LDR X8, [X8]
	0x03A013DC LDR X8, [X8 + 0xB8]
	0x03A013E0 LDP V1, V0, [X8 + 0x60]
	0x03A013E4 LDP V2, V3, [X8 + 0x40]
	0x03A013E8 STP V1, V0, [X31 + 0x70]
	0x03A013EC STP V2, V3, [X31 + 0x50]
	0x03A013F0 CBZ X21, 0x3A01450
	0x03A013F4 LDR X8, [X25]
	0x03A013F8 LDP V0, V1, [X31 + 0x50]
	0x03A013FC LDP V2, V3, [X31 + 0x70]
	0x03A01400 ADD X1, X31, 0x10
	0x03A01404 LDR X8, [X8 + 0xB8]
	0x03A01408 MOVZ W5, 0x3
	0x03A0140C MOVZ W6, 0x1
	0x03A01410 MOV X0, X21
	0x03A01414 LDR X7, [X8]
	0x03A01418 MOV X2, X20
	0x03A0141C MOV W3, W19
	0x03A01420 MOV W4, W31
	0x03A01424 STP V0, V1, [X31 + 0x10]
	0x03A01428 STP V2, V3, [X31 + 0x30]
	0x03A0142C STR X31, [X31]
	0x03A01430 BL 0x3C4F388
	0x03A01434 LDP X20, X19, [X31 + 0xD0]
	0x03A01438 LDP X22, X21, [X31 + 0xC0]
	0x03A0143C LDP X24, X23, [X31 + 0xB0]
	0x03A01440 LDP X26, X25, [X31 + 0xA0]
	0x03A01444 LDR X30, [X31 + 0x90]
	0x03A01448 ADD X31, X31, 0xE0
	0x03A0144C RET

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x9E1000
	010 Move W8, [X24+3897]
	011 Move W22, W4
	012 Move W21, W3
	013 Move W20, W2
	014 Move W19, W1
	015 Move V8, V0
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x753000
	022 Move X0, [X0+4056]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+3897], W8
	026 Move X0, [X23+144]
	027 Compare X0, 0
	028 JumpIfEqual {56}
	029 Move X8, 0x753000
	030 Move X8, [X8+4056]
	031 Move X1, [X8]
	032 Call Field`1<Vector4>.GetValue, X0
	033 Move X0, [X23+144]
	034 Compare X0, 0
	035 JumpIfEqual {56}
	036 Move X8, [X0]
	037 And W31, W22, 1
	038 NotImplemented "Instruction FCSEL not yet implemented."
	039 And W31, W21, 1
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 And W31, W20, 1
	042 Move X2, [X8+568]
	043 Move X1, [X8+576]
	044 NotImplemented "Instruction FCSEL not yet implemented."
	045 And W31, W19, 1
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+8]
	053 NotImplemented "Instruction FCSEL not yet implemented."
	054 Move V8, [X31+64]
	055 CallNoReturn X2
	056 Call 0x1C17F20

Method: System.Void SetupSettings(UnityEngine.Rendering.UI.DebugUIHandlerIndirectFloatField field)

Disassembly:
	0x03A0129C TBNZ X8, 0x0, 0x3A012C0
	0x03A012A0 ADRP X0, 0x752000
	0x03A012A4 LDR X0, [X0 + 0xFE8]
	0x03A012A8 BL 0x1C16CF4
	0x03A012AC ADRP X0, 0x753000
	0x03A012B0 LDR X0, [X0 + 0x20]
	0x03A012B4 BL 0x1C16CF4
	0x03A012B8 MOVZ W8, 0x1
	0x03A012BC STRB W8, [X23 + 0xF4A]
	0x03A012C0 LDR X0, [X25]
	0x03A012C4 LDR W8, [X0 + 0xE0]
	0x03A012C8 CBNZ W8, 0x3A012D4
	0x03A012CC BL 0x1C16DFC
	0x03A012D0 LDR X0, [X25]
	0x03A012D4 LDR X8, [X0 + 0xB8]
	0x03A012D8 LDR X0, [X8]
	0x03A012DC CBZ X0, 0x3A01450
	0x03A012E0 ADRP X26, 0x753000
	0x03A012E4 LDR X26, [X26 + 0x20]
	0x03A012E8 MOV X1, X31
	0x03A012EC BL 0x3C11F88
	0x03A012F0 CBZ X22, 0x3A01354
	0x03A012F4 LDR X0, [X25]
	0x03A012F8 LDR W8, [X0 + 0xE0]
	0x03A012FC CBNZ W8, 0x3A01308
	0x03A01300 BL 0x1C16DFC
	0x03A01304 LDR X0, [X25]
	0x03A01308 LDR X8, [X26]
	0x03A0130C LDR X9, [X0 + 0xB8]
	0x03A01310 LDR W10, [X8 + 0xE0]
	0x03A01314 LDR X23, [X9]
	0x03A01318 CBNZ W10, 0x3A01328
	0x03A0131C MOV X0, X8
	0x03A01320 BL 0x1C16DFC
	0x03A01324 LDR X8, [X26]
	0x03A01328 LDR X8, [X8 + 0xB8]
	0x03A0132C MOV X0, X22
	0x03A01330 MOV X1, X31
	0x03A01334 LDR W24, [X8 + 0xA0]
	0x03A01338 BL 0x39D4944
	0x03A0133C CBZ X23, 0x3A01450
	0x03A01340 MOV X2, X0
	0x03A01344 MOV X0, X23
	0x03A01348 MOV W1, W24
	0x03A0134C MOV X3, X31
	0x03A01350 BL 0x3C12828
	0x03A01354 LDR X0, [X25]
	0x03A01358 LDR W8, [X0 + 0xE0]
	0x03A0135C CBNZ W8, 0x3A01368
	0x03A01360 BL 0x1C16DFC
	0x03A01364 LDR X0, [X25]
	0x03A01368 LDR X8, [X26]
	0x03A0136C LDR X9, [X0 + 0xB8]
	0x03A01370 LDR W10, [X8 + 0xE0]
	0x03A01374 LDR X22, [X9]
	0x03A01378 CBNZ W10, 0x3A01384
	0x03A0137C MOV X0, X8
	0x03A01380 BL 0x1C16DFC
	0x03A01384 CBZ X22, 0x3A01450
	0x03A01388 LDR X8, [X26]
	0x03A0138C FMOV S0, 1
	0x03A01390 FMOV S1, 1
	0x03A01394 FMOV S2, W31
	0x03A01398 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9E1000
	009 Move W8, [X21+3898]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x753000
	017 Move X0, [X0+4032]
	018 Call 0x1C17CF4
	019 Move X0, 0x753000
	020 Move X0, [X0+4040]
	021 Call 0x1C17CF4
	022 Move X0, 0x753000
	023 Move X0, [X0+4048]
	024 Call 0x1C17CF4
	025 Move X0, 0x752000
	026 Move X0, [X0+1680]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3898], W8
	030 Compare X19, 0
	031 JumpIfEqual {75}
	032 Move X22, 0x752000
	033 Move X22, [X22+1680]
	034 Move [X19+64], X20
	035 Move X21, 0x753000
	036 Move X23, 0x753000
	037 Move X0, [X22]
	038 Move X24, 0x753000
	039 Move X21, [X21+4032]
	040 Move X23, [X23+4040]
	041 Move X24, [X24+4048]
	042 Call 0x1C17F10
	043 Move X2, [X21]
	044 Move X1, X20
	045 Move X3, X31
	046 Move X21, X0
	047 Call Func`1<Single>..ctor, X0, X1, X2
	048 Move [X19+128], X21
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X2, [X23]
	052 Move X1, X20
	053 Move X3, X31
	054 Move X21, X0
	055 Call Func`1<Single>..ctor, X0, X1, X2
	056 Move [X19+136], X21
	057 Move X0, [X22]
	058 Call 0x1C17F10
	059 Move X2, [X24]
	060 Move X1, X20
	061 Move X3, X31
	062 Move X21, X0
	063 Call Func`1<Single>..ctor, X0, X1, X2
	064 Move [X19+144], X21
	065 Move X0, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Call DebugUIHandlerIndirectFloatField.UpdateValueLabel, X0
	074 Return 
	075 Call 0x1C17F20

Method: System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)

Disassembly:
	0x03A01450 BL 0x1C16F20
	0x03A01454 STR X30, [X31 - 0x40]!
	0x03A01458 STP X24, X23, [X31 + 0x10]
	0x03A0145C STP X22, X21, [X31 + 0x20]
	0x03A01460 STP X20, X19, [X31 + 0x30]
	0x03A01464 ADRP X20, 0x9E0000
	0x03A01468 LDRB W8, [X20 + 0xF4B]
	0x03A0146C MOV X21, X2
	0x03A01470 MOV X19, X0
	0x03A01474 TBNZ X8, 0x0, 0x3A01498
	0x03A01478 ADRP X0, 0x71A000
	0x03A0147C LDR X0, [X0 + 0x8F8]
	0x03A01480 BL 0x1C16CF4
	0x03A01484 ADRP X0, 0x752000
	0x03A01488 LDR X0, [X0 + 0xFE8]
	0x03A0148C BL 0x1C16CF4
	0x03A01490 MOVZ W8, 0x1
	0x03A01494 STRB W8, [X20 + 0xF4B]
	0x03A01498 STRB W31, [X31 + 0x8]
	0x03A0149C LDR X20, [X21]
	0x03A014A0 LDR X2, [X19 + 0x38]
	0x03A014A4 ADRP X24, 0x71A000
	0x03A014A8 ADRP X23, 0x752000
	0x03A014AC LDR X24, [X24 + 0x8F8]
	0x03A014B0 LDR X23, [X23 + 0xFE8]
	0x03A014B4 ADD X0, X31, 0x8
	0x03A014B8 MOV X1, X20
	0x03A014BC MOV X3, X31
	0x03A014C0 BL 0x39B1DB0
	0x03A014C4 LDRB W8, [X19 + 0xEC]
	0x03A014C8 CBZ W8, 0x3A01530
	0x03A014CC LDR X0, [X24]
	0x03A014D0 LDR X22, [X19 + 0xF0]
	0x03A014D4 LDR W8, [X0 + 0xE0]
	0x03A014D8 CBNZ W8, 0x3A014E0
	0x03A014DC BL 0x1C16DFC
	0x03A014E0 MOVN W4, 0x0
	0x03A014E4 MOVN W5, 0x0
	0x03A014E8 MOV X0, X20
	0x03A014EC MOV X1, X22
	0x03A014F0 MOV W2, W31
	0x03A014F4 MOV W3, W31
	0x03A014F8 MOV X6, X31
	0x03A014FC BL 0x39E2DCC
	0x03A01500 LDR X0, [X21 + 0x1D0]
	0x03A01504 CBZ X0, 0x3A01634
	0x03A01508 MOV X1, X31
	0x03A0150C BL 0x3A44BD0
	0x03A01510 MOV X22, X0
	0x03A01514 LDR X0, [X23]
	0x03A01518 LDR W8, [X0 + 0xE0]
	0x03A0151C CBNZ W8, 0x3A01524
	0x03A01520 BL 0x1C16DFC
	0x03A01524 MOV X0, X20
	0x03A01528 MOV X1, X22
	0x03A0152C BL 0x3A011E4
	0x03A01530 LDRB W8, [X19 + 0xED]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9E1000
	007 Move W8, [X22+3899]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x750000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3899], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {39}
	024 Move X8, [X19+104]
	025 Compare X8, 0
	026 JumpIfEqual {78}
	027 Move W8, [X8+288]
	028 Compare W8, 0
	029 JumpIfEqual {39}
	030 Move X0, [X19+152]
	031 Compare X0, 0
	032 JumpIfEqual {78}
	033 Move X1, X20
	034 Call DebugUIHandlerContainer.IsDirectChild, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X0, [X19+96]
	040 Compare X0, 0
	041 JumpIfEqual {78}
	042 Move X8, [X0]
	043 Move S2, [X19+56]
	044 Move S3, [X19+60]
	045 Move S0, [X19+48]
	046 Move S1, [X19+52]
	047 Move X9, [X8+680]
	048 Move X1, [X8+688]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W0, 1
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X0, [X19+152]
	058 Compare X0, 0
	059 JumpIfEqual {78}
	060 Call DebugUIHandlerContainer.GetLastItem, X0
	061 Move X8, 0x750000
	062 Move X8, [X8+1912]
	063 Move X19, X0
	064 Move X8, [X8]
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X31
	071 Call DebugManager.get_instance
	072 Compare X0, 0
	073 JumpIfEqual {78}
	074 Move X1, X19
	075 Move W2, W31
	076 Move X3, X31
	077 Call DebugManager.ChangeSelection, X0, X1, X2
	078 Call 0x1C17F20

Method: System.Void OnDeselection()

Disassembly:
	0x03A01534 LDR X0, [X21 + 0x1D0]
	0x03A01538 CBZ W8, 0x3A01594
	0x03A0153C CBZ X0, 0x3A01638
	0x03A01540 MOV X1, X31
	0x03A01544 BL 0x3A44BD0
	0x03A01548 MOV X22, X0
	0x03A0154C LDR X0, [X21 + 0x1D0]
	0x03A01550 CBZ X0, 0x3A0163C
	0x03A01554 MOV X1, X31
	0x03A01558 BL 0x3A49678
	0x03A0155C MOV X21, X0
	0x03A01560 LDR X0, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+96]
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 Move X9, [X0]
	007 Move S2, [X8+40]
	008 Move S3, [X8+44]
	009 Move S0, [X8+32]
	010 Move S1, [X8+36]
	011 Move X2, [X9+680]
	012 Move X1, [X9+688]
	013 Move X30, [X31+16]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Void OnIncrement(System.Boolean fast)

Disassembly:
	0x03A01564 LDR W8, [X0 + 0xE0]
	0x03A01568 CBNZ W8, 0x3A01570
	0x03A0156C BL 0x1C16DFC
	0x03A01570 MOVN W4, 0x0
	0x03A01574 MOVN W5, 0x0
	0x03A01578 MOV X0, X20
	0x03A0157C MOV X1, X22
	0x03A01580 MOV X2, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnDecrement(System.Boolean fast)

Disassembly:
	0x03A01584 MOV W3, W31
	0x03A01588 MOV X6, X31
	0x03A0158C BL 0x39E7980
	0x03A01590 B 0x3A015D4
	0x03A01594 CBZ X0, 0x3A01640
	0x03A01598 MOV X1, X31
	0x03A0159C BL 0x3A44BD0
	0x03A015A0 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, W31
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnAction()

Disassembly:
	0x03A015A4 LDR X0, [X24]
	0x03A015A8 LDR W8, [X0 + 0xE0]
	0x03A015AC CBNZ W8, 0x3A015B4
	0x03A015B0 BL 0x1C16DFC
	0x03A015B4 MOVN W4, 0x0
	0x03A015B8 MOVN W5, 0x0
	0x03A015BC MOV X0, X20
	0x03A015C0 MOV X1, X21
	0x03A015C4 MOV W2, W31
	0x03A015C8 MOV W3, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move W8, [X0+288]
	006 Move X2, X31
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Call Toggle.set_isOn, X0, X1
	011 Return 
	012 Call 0x1C17F20

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget Next()

Disassembly:
	0x03A015CC MOV X6, X31
	0x03A015D0 BL 0x39E2DCC
	0x03A015D4 LDRB W8, [X19 + 0xEC]
	0x03A015D8 CBZ W8, 0x3A015E4
	0x03A015DC LDR X21, [X19 + 0xF0]
	0x03A015E0 B 0x3A015E8
	0x03A015E4 MOV X21, X31
	0x03A015E8 LDR X0, [X23]
	0x03A015EC LDR X22, [X19 + 0xE0]
	0x03A015F0 LDR W19, [X19 + 0xE8]
	0x03A015F4 LDR W8, [X0 + 0xE0]
	0x03A015F8 CBNZ W8, 0x3A01600
	0x03A015FC BL 0x1C16DFC
	0x03A01600 MOV X0, X20
	0x03A01604 MOV X1, X21
	0x03A01608 MOV X2, X22
	0x03A0160C MOV W3, W19
	0x03A01610 BL 0x3A01264
	0x03A01614 ADD X0, X31, 0x8
	0x03A01618 MOV X1, X31
	0x03A0161C BL 0x39B1DB4
	0x03A01620 LDP X20, X19, [X31 + 0x30]
	0x03A01624 LDP X22, X21, [X31 + 0x20]
	0x03A01628 LDP X24, X23, [X31 + 0x10]
	0x03A0162C LDR X30, [X31], #0x40
	0x03A01630 RET
	0x03A01634 BL 0x1C16F20
	0x03A01638 BL 0x1C16F20
	0x03A0163C BL 0x1C16F20
	0x03A01640 BL 0x1C16F20
	0x03A01644 B 0x3A01668
	0x03A01648 B 0x3A01668
	0x03A0164C B 0x3A01668
	0x03A01650 B 0x3A01668
	0x03A01654 B 0x3A01668
	0x03A01658 B 0x3A01668
	0x03A0165C B 0x3A01668
	0x03A01660 B 0x3A01668
	0x03A01664 B 0x3A01668
	0x03A01668 MOV X19, X0
	0x03A0166C CMP W1, 0x1
	0x03A01670 B.NE 0x3A0169C
	0x03A01674 MOV X0, X19
	0x03A01678 BL 0x3EB1AD0
	0x03A0167C LDR X20, [X0]
	0x03A01680 BL 0x3EB1AE0
	0x03A01684 ADD X0, X31, 0x8
	0x03A01688 MOV X1, X31
	0x03A0168C BL 0x39B1DB4
	0x03A01690 CBZ X20, 0x3A01620

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E1000
	006 Move W8, [X20+3900]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6F3000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3900], W8
	017 Move X8, [X19+104]
	018 Compare X8, 0
	019 JumpIfEqual {71}
	020 Move W8, [X8+288]
	021 Compare W8, 0
	022 JumpIfEqual {58}
	023 Move X21, 0x6F3000
	024 Move X21, [X21+1432]
	025 Move X20, [X19+152]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {58}
	039 Move X0, [X19+152]
	040 Compare X0, 0
	041 JumpIfEqual {71}
	042 Call DebugUIHandlerContainer.GetFirstItem, X0
	043 Move X8, [X21]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {65}
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call DebugUIHandlerWidget.Next, X0
	064 Return X0
	065 Move X0, X20
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A01694 MOV X0, X20
	0x03A01698 BL 0x1C16F18
	0x03A0169C MOV X20, X31
	0x03A016A0 B 0x3A016A8
	0x03A016A4 MOV X19, X0
	0x03A016A8 ADD X0, X31, 0x8
	0x03A016AC MOV X1, X31

ISIL:
	001 Move X8, -49364992
	002 Move X9, -49369088
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

Method: System.Single <SetWidget>b__8_0()

Disassembly:
	0x03A016B0 BL 0x39B1DB4
	0x03A016B4 CBNZ X20, 0x3A016C0
	0x03A016B8 MOV X0, X19
	0x03A016BC BL 0x1D2C690
	0x03A016C0 MOV X0, X20
	0x03A016C4 BL 0x1C16F18
	0x03A016C8 BL 0x1990590
	0x03A016CC STP X30, X21, [X31 - 0x20]!
	0x03A016D0 STP X20, X19, [X31 + 0x10]
	0x03A016D4 ADRP X19, 0x9E0000
	0x03A016D8 ADRP X21, 0x74F000
	0x03A016DC ADRP X20, 0x752000
	0x03A016E0 LDRB W8, [X19 + 0xF4C]
	0x03A016E4 LDR X21, [X21 + 0x590]
	0x03A016E8 LDR X20, [X20 + 0xFE8]
	0x03A016EC TBNZ X8, 0x0, 0x3A01710
	0x03A016F0 ADRP X0, 0x752000
	0x03A016F4 LDR X0, [X0 + 0xFE8]
	0x03A016F8 BL 0x1C16CF4
	0x03A016FC ADRP X0, 0x74F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E1000
	005 Move W8, [X20+3901]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x753000
	012 Move X0, [X0+4056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3901], W8
	016 Move X0, [X19+144]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x753000
	020 Move X8, [X8+4056]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Field`1<Vector4>.GetValue, X0
	026 Return V0
	027 Call 0x1C17F20

Method: System.Void <SetWidget>b__8_1(System.Single x)

Disassembly:
	0x03A01700 LDR X0, [X0 + 0x590]
	0x03A01704 BL 0x1C16CF4
	0x03A01708 MOVZ W8, 0x1
	0x03A0170C STRB W8, [X19 + 0xF4C]
	0x03A01710 LDR X0, [X21]

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Move W3, W31
	004 Move W4, W31
	005 Call DebugUIHandlerVector4.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetWidget>b__8_2()

Disassembly:
	0x03A01714 BL 0x1C16F10
	0x03A01718 MOV X1, X31
	0x03A0171C MOV X19, X0
	0x03A01720 BL 0x3C122EC
	0x03A01724 LDR X8, [X20]
	0x03A01728 LDR X8, [X8 + 0xB8]
	0x03A0172C STR X19, [X8]
	0x03A01730 LDP X20, X19, [X31 + 0x10]
	0x03A01734 LDP X30, X21, [X31], #0x20
	0x03A01738 RET
	0x03A0173C STP X30, X23, [X31 - 0x30]!
	0x03A01740 STP X22, X21, [X31 + 0x10]
	0x03A01744 STP X20, X19, [X31 + 0x20]
	0x03A01748 ADRP X23, 0x9E0000
	0x03A0174C ADRP X22, 0x6F2000
	0x03A01750 ADRP X20, 0x753000
	0x03A01754 ADRP X21, 0x753000
	0x03A01758 MOV X19, X8
	0x03A0175C LDRB W8, [X23 + 0xF4D]
	0x03A01760 LDR X22, [X22 + 0x618]
	0x03A01764 LDR X20, [X20 + 0x28]
	0x03A01768 LDR X21, [X21 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E1000
	005 Move W8, [X20+3902]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x753000
	012 Move X0, [X0+4056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3902], W8
	016 Move X0, [X19+144]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x753000
	020 Move X8, [X8+4056]
	021 Move X1, [X8]
	022 Call Field`1<Vector4>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V1
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__8_3(System.Single x)

Disassembly:
	0x03A0176C TBNZ X8, 0x0, 0x3A0179C
	0x03A01770 ADRP X0, 0x6F2000
	0x03A01774 LDR X0, [X0 + 0x618]
	0x03A01778 BL 0x1C16CF4
	0x03A0177C ADRP X0, 0x753000

ISIL:
	001 Move W2, 1
	002 Move W1, W31
	003 Move W3, W31
	004 Move W4, W31
	005 Call DebugUIHandlerVector4.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetWidget>b__8_4()

Disassembly:
	0x03A01780 LDR X0, [X0 + 0x30]
	0x03A01784 BL 0x1C16CF4
	0x03A01788 ADRP X0, 0x753000
	0x03A0178C LDR X0, [X0 + 0x28]
	0x03A01790 BL 0x1C16CF4
	0x03A01794 MOVZ W8, 0x1
	0x03A01798 STRB W8, [X23 + 0xF4D]
	0x03A0179C LDR X0, [X22]
	0x03A017A0 MOVZ W1, 0x481E
	0x03A017A4 BL 0x1C16D6C
	0x03A017A8 LDR X1, [X20]
	0x03A017AC MOV X2, X31
	0x03A017B0 MOV X20, X0
	0x03A017B4 BL 0x32C5BD8
	0x03A017B8 LDR X0, [X22]
	0x03A017BC MOVZ W1, 0x5CCC
	0x03A017C0 BL 0x1C16D6C
	0x03A017C4 LDR X1, [X21]
	0x03A017C8 MOV X2, X31
	0x03A017CC MOV X21, X0
	0x03A017D0 BL 0x32C5BD8
	0x03A017D4 ADRP X8, 0xFFFFFFFFFD0ED000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E1000
	005 Move W8, [X20+3903]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x753000
	012 Move X0, [X0+4056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3903], W8
	016 Move X0, [X19+144]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x753000
	020 Move X8, [X8+4056]
	021 Move X1, [X8]
	022 Call Field`1<Vector4>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V2
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__8_5(System.Single x)

Disassembly:
	0x03A017D8 LDR V0, [X8 + 0x40]
	0x03A017DC STP X20, X21, [X19]
	0x03A017E0 STRB W31, [X19 + 0x18]
	0x03A017E4 STUR W31, [X19 + 0x19]
	0x03A017E8 STR D0, [X19 + 0x10]

ISIL:
	001 Move W3, 1
	002 Move W1, W31
	003 Move W2, W31
	004 Move W4, W31
	005 Call DebugUIHandlerVector4.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetWidget>b__8_6()

Disassembly:
	0x03A017EC STR W31, [X19 + 0x1C]
	0x03A017F0 LDP X20, X19, [X31 + 0x20]
	0x03A017F4 LDP X22, X21, [X31 + 0x10]
	0x03A017F8 LDP X30, X23, [X31], #0x30
	0x03A017FC RET
	0x03A01800 MOV X1, X31
	0x03A01804 B 0x33BDD8C
	0x03A01808 LDR W0, [X0 + 0x2C]
	0x03A0180C RET
	0x03A01810 STR W1, [X0 + 0x2C]
	0x03A01814 RET
	0x03A01818 LDR W0, [X0 + 0x30]
	0x03A0181C RET
	0x03A01820 STR W1, [X0 + 0x30]
	0x03A01824 RET
	0x03A01828 STR X30, [X31 - 0x10]!
	0x03A0182C LDR X8, [X0 + 0x40]
	0x03A01830 CBZ X8, 0x3A01840
	0x03A01834 LDR V0, [X8 + 0x48]
	0x03A01838 LDR X30, [X31], #0x10
	0x03A0183C RET
	0x03A01840 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E1000
	005 Move W8, [X20+3904]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x753000
	012 Move X0, [X0+4056]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3904], W8
	016 Move X0, [X19+144]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x753000
	020 Move X8, [X8+4056]
	021 Move X1, [X8]
	022 Call Field`1<Vector4>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V3
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__8_7(System.Single x)

Disassembly:
	0x03A01844 LDR W0, [X0 + 0x20]
	0x03A01848 RET
	0x03A0184C STR X30, [X31 - 0x10]!
	0x03A01850 CBZ X0, 0x3A01868
	0x03A01854 CMP W1, 0x1

ISIL:
	001 Move W4, 1
	002 Move W1, W31
	003 Move W2, W31
	004 Move W3, W31
	005 Call DebugUIHandlerVector4.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetupSettings>b__10_0()

Disassembly:
	0x03A01858 CSINC W8, W1, W31, GT
	0x03A0185C STR W8, [X0 + 0x20]
	0x03A01860 LDR X30, [X31], #0x10
	0x03A01864 RET
	0x03A01868 BL 0x1C16F20
	0x03A0186C LDR W0, [X0 + 0x24]
	0x03A01870 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+144]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+96]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Single <SetupSettings>b__10_1()

Disassembly:
	0x03A01874 STR X30, [X31 - 0x10]!
	0x03A01878 CBZ X0, 0x3A01890
	0x03A0187C CMP W1, 0x1
	0x03A01880 CSINC W8, W1, W31, GT
	0x03A01884 STR W8, [X0 + 0x24]
	0x03A01888 LDR X30, [X31], #0x10
	0x03A0188C RET

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+144]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+100]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Single <SetupSettings>b__10_2()

Disassembly:
	0x03A01890 BL 0x1C16F20
	0x03A01894 LDR W0, [X0 + 0x28]
	0x03A01898 RET
	0x03A0189C STR X30, [X31 - 0x10]!
	0x03A018A0 CBZ X0, 0x3A018B8
	0x03A018A4 CMP W1, 0x1
	0x03A018A8 CSINC W8, W1, W31, GT
	0x03A018AC STR W8, [X0 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+144]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move V0, [X8+104]
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Move X30, [X31+16]
	008 Return V0
	009 Call 0x1C17F20

