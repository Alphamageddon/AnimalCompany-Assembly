Type: UnityEngine.Rendering.UI.DebugUIHandlerBitField

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x039F6B4C STP X30, X21, [X31 - 0x20]!
	0x039F6B50 STP X20, X19, [X31 + 0x10]
	0x039F6B54 ADRP X20, 0x9EB000
	0x039F6B58 ADRP X21, 0x75A000
	0x039F6B5C LDRB W8, [X20 + 0xEC4]
	0x039F6B60 LDR X21, [X21 + 0x778]
	0x039F6B64 MOV X19, X0
	0x039F6B68 TBNZ X8, 0x0, 0x39F6BA4
	0x039F6B6C ADRP X0, 0x75A000
	0x039F6B70 LDR X0, [X0 + 0x778]
	0x039F6B74 BL 0x1C16CF4
	0x039F6B78 ADRP X0, 0x75D000
	0x039F6B7C LDR X0, [X0 + 0xAE0]
	0x039F6B80 BL 0x1C16CF4
	0x039F6B84 ADRP X0, 0x75D000
	0x039F6B88 LDR X0, [X0 + 0xAE8]
	0x039F6B8C BL 0x1C16CF4
	0x039F6B90 ADRP X0, 0x6FD000
	0x039F6B94 LDR X0, [X0 + 0x598]
	0x039F6B98 BL 0x1C16CF4
	0x039F6B9C MOVZ W8, 0x1
	0x039F6BA0 STRB W8, [X20 + 0xEC4]
	0x039F6BA4 LDR X0, [X21]
	0x039F6BA8 LDR W8, [X0 + 0xE0]
	0x039F6BAC CBNZ W8, 0x39F6BB4
	0x039F6BB0 BL 0x1C16DFC
	0x039F6BB4 MOV X0, X31
	0x039F6BB8 BL 0x399C120
	0x039F6BBC CBZ X0, 0x39F6C70
	0x039F6BC0 MOV X1, X31
	0x039F6BC4 BL 0x39A97B8
	0x039F6BC8 LDR W8, [X19 + 0x20]
	0x039F6BCC CMP W8, W0
	0x039F6BD0 B.EQ 0x39F6BDC
	0x039F6BD4 MOV X0, X19
	0x039F6BD8 BL 0x39F6C74
	0x039F6BDC MOV X0, X19
	0x039F6BE0 BL 0x39F6F80
	0x039F6BE4 LDR X0, [X19 + 0x40]
	0x039F6BE8 CBZ X0, 0x39F6C64
	0x039F6BEC LDR W1, [X19 + 0x48]
	0x039F6BF0 LDR W8, [X0 + 0x18]
	0x039F6BF4 CMP W1, W8
	0x039F6BF8 B.GE 0x39F6C64
	0x039F6BFC ADRP X21, 0x75D000
	0x039F6C00 LDR X21, [X21 + 0xAE8]
	0x039F6C04 LDR X2, [X21]
	0x039F6C08 BL 0x301BCCC
	0x039F6C0C ADRP X8, 0x6FD000
	0x039F6C10 LDR X8, [X8 + 0x598]
	0x039F6C14 MOV X20, X0
	0x039F6C18 LDR X8, [X8]
	0x039F6C1C LDR W9, [X8 + 0xE0]
	0x039F6C20 CBNZ W9, 0x39F6C2C
	0x039F6C24 MOV X0, X8
	0x039F6C28 BL 0x1C16DFC
	0x039F6C2C MOV X0, X20
	0x039F6C30 MOV X1, X31
	0x039F6C34 MOV X2, X31
	0x039F6C38 BL 0x3C354F8
	0x039F6C3C TBZ X0, 0x0, 0x39F6C64
	0x039F6C40 LDR X0, [X19 + 0x40]
	0x039F6C44 CBZ X0, 0x39F6C70
	0x039F6C48 LDR W1, [X19 + 0x48]
	0x039F6C4C LDR X2, [X21]
	0x039F6C50 BL 0x301BCCC
	0x039F6C54 CBZ X0, 0x39F6C70
	0x039F6C58 LDP X20, X19, [X31 + 0x10]
	0x039F6C5C LDP X30, X21, [X31], #0x20
	0x039F6C60 B 0x39F7194
	0x039F6C64 LDP X20, X19, [X31 + 0x10]
	0x039F6C68 LDP X30, X21, [X31], #0x20
	0x039F6C6C RET
	0x039F6C70 BL 0x1C16F20
	0x039F6C74 STP X30, X25, [X31 - 0x40]!
	0x039F6C78 STP X24, X23, [X31 + 0x10]
	0x039F6C7C STP X22, X21, [X31 + 0x20]
	0x039F6C80 STP X20, X19, [X31 + 0x30]
	0x039F6C84 ADRP X20, 0x9EB000
	0x039F6C88 LDRB W8, [X20 + 0xEC5]
	0x039F6C8C MOV X19, X0
	0x039F6C90 TBNZ X8, 0x0, 0x39F6CCC
	0x039F6C94 ADRP X0, 0x725000
	0x039F6C98 LDR X0, [X0 + 0x8F8]
	0x039F6C9C BL 0x1C16CF4
	0x039F6CA0 ADRP X0, 0x6FD000
	0x039F6CA4 LDR X0, [X0 + 0xE00]
	0x039F6CA8 BL 0x1C16CF4
	0x039F6CAC ADRP X0, 0x6FD000
	0x039F6CB0 LDR X0, [X0 + 0xE18]
	0x039F6CB4 BL 0x1C16CF4
	0x039F6CB8 ADRP X0, 0x6FF000
	0x039F6CBC LDR X0, [X0 + 0x638]
	0x039F6CC0 BL 0x1C16CF4
	0x039F6CC4 MOVZ W8, 0x1
	0x039F6CC8 STRB W8, [X20 + 0xEC5]
	0x039F6CCC MOV X0, X19
	0x039F6CD0 MOV X1, X31
	0x039F6CD4 BL 0x3C32E90
	0x039F6CD8 CBZ X0, 0x39F6EB4
	0x039F6CDC ADRP X22, 0x6FD000
	0x039F6CE0 LDR X22, [X22 + 0xE00]
	0x039F6CE4 MOV X1, X31
	0x039F6CE8 BL 0x3C4100C
	0x039F6CEC MOV X20, X0
	0x039F6CF0 CBZ X0, 0x39F6EB8
	0x039F6CF4 ADRP X23, 0x6FD000
	0x039F6CF8 ADRP X24, 0x6FF000
	0x039F6CFC ADRP X25, 0x725000
	0x039F6D00 LDR X23, [X23 + 0xE18]
	0x039F6D04 LDR X24, [X24 + 0x638]
	0x039F6D08 LDR X25, [X25 + 0x8F8]
	0x039F6D0C LDR X8, [X20]
	0x039F6D10 LDR X1, [X23]
	0x039F6D14 LDRH W9, [X8 + 0x12E]
	0x039F6D18 CBZ X9, 0x39F6D3C
	0x039F6D1C LDR X10, [X8 + 0xB0]
	0x039F6D20 ADD X10, X10, 0x8
	0x039F6D24 LDUR X11, [X10 - 0x8]
	0x039F6D28 CMP X11, X1
	0x039F6D2C B.EQ 0x39F6D4C
	0x039F6D30 SUBS X9, X9, 0x1
	0x039F6D34 ADD X10, X10, 0x10
	0x039F6D38 B.NE 0x39F6D24
	0x039F6D3C MOV X0, X20
	0x039F6D40 MOV W2, W31
	0x039F6D44 BL 0x1C5C788
	0x039F6D48 B 0x39F6D58
	0x039F6D4C LDRSW X9, [X10]
	0x039F6D50 ADD X8, X8, X9, 0x4, LSL
	0x039F6D54 ADD X0, X8, 0x138
	0x039F6D58 LDP X8, X1, [X0]
	0x039F6D5C MOV X0, X20
	0x039F6D60 BLR X8
	0x039F6D64 TBZ X0, 0x0, 0x39F6E20
	0x039F6D68 LDR X8, [X20]
	0x039F6D6C LDR X1, [X23]
	0x039F6D70 LDRH W9, [X8 + 0x12E]
	0x039F6D74 CBZ X9, 0x39F6D98
	0x039F6D78 LDR X10, [X8 + 0xB0]
	0x039F6D7C ADD X10, X10, 0x8
	0x039F6D80 LDUR X11, [X10 - 0x8]
	0x039F6D84 CMP X11, X1
	0x039F6D88 B.EQ 0x39F6DA8
	0x039F6D8C SUBS X9, X9, 0x1
	0x039F6D90 ADD X10, X10, 0x10
	0x039F6D94 B.NE 0x39F6D80
	0x039F6D98 MOVZ W2, 0x1
	0x039F6D9C MOV X0, X20
	0x039F6DA0 BL 0x1C5C788
	0x039F6DA4 B 0x39F6DB8
	0x039F6DA8 LDR W9, [X10]
	0x039F6DAC ADD W9, W9, 0x1
	0x039F6DB0 ADD X8, X8, W9, 0x4, SXTW
	0x039F6DB4 ADD X0, X8, 0x138
	0x039F6DB8 LDP X8, X1, [X0]
	0x039F6DBC MOV X0, X20
	0x039F6DC0 BLR X8
	0x039F6DC4 CBZ X0, 0x39F6EB0
	0x039F6DC8 LDR X8, [X0]
	0x039F6DCC LDR X1, [X24]
	0x039F6DD0 LDRB W10, [X8 + 0x130]
	0x039F6DD4 LDRB W9, [X1 + 0x130]
	0x039F6DD8 CMP W10, W9
	0x039F6DDC B.CC 0x39F6EAC
	0x039F6DE0 LDR X8, [X8 + 0xC8]
	0x039F6DE4 ADD X8, X8, X9, 0x3, LSL
	0x039F6DE8 LDUR X8, [X8 - 0x8]
	0x039F6DEC CMP X8, X1
	0x039F6DF0 B.NE 0x39F6EAC
	0x039F6DF4 MOV X1, X31
	0x039F6DF8 BL 0x3C32ECC
	0x039F6DFC MOV X21, X0
	0x039F6E00 LDR X0, [X25]
	0x039F6E04 LDR W8, [X0 + 0xE0]
	0x039F6E08 CBNZ W8, 0x39F6E10
	0x039F6E0C BL 0x1C16DFC
	0x039F6E10 MOV X0, X21
	0x039F6E14 MOV X1, X31
	0x039F6E18 BL 0x39E1DF8
	0x039F6E1C B 0x39F6D0C
	0x039F6E20 MOV X21, X31
	0x039F6E24 LDR X1, [X22]
	0x039F6E28 MOV X0, X20
	0x039F6E2C BL 0x1C16E00
	0x039F6E30 CBZ X0, 0x39F6E90
	0x039F6E34 LDR X8, [X0]
	0x039F6E38 LDR X1, [X22]
	0x039F6E3C MOV X20, X0
	0x039F6E40 LDRH W9, [X8 + 0x12E]
	0x039F6E44 CBZ X9, 0x39F6E68
	0x039F6E48 LDR X10, [X8 + 0xB0]
	0x039F6E4C ADD X10, X10, 0x8
	0x039F6E50 LDUR X11, [X10 - 0x8]
	0x039F6E54 CMP X11, X1
	0x039F6E58 B.EQ 0x39F6E78
	0x039F6E5C SUBS X9, X9, 0x1
	0x039F6E60 ADD X10, X10, 0x10
	0x039F6E64 B.NE 0x39F6E50
	0x039F6E68 MOV X0, X20
	0x039F6E6C MOV W2, W31
	0x039F6E70 BL 0x1C5C788
	0x039F6E74 B 0x39F6E84

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x9EC000
	014 Move X22, 0x75E000
	015 Move X21, 0x75E000
	016 Move W8, [X23+3773]
	017 Move X22, [X22+2528]
	018 Move X21, [X21+2536]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0x75E000
	026 Move X0, [X0+2544]
	027 Call 0x1C17CF4
	028 Move X0, 0x75E000
	029 Move X0, [X0+2536]
	030 Call 0x1C17CF4
	031 Move X0, 0x726000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x75E000
	035 Move X0, [X0+2552]
	036 Call 0x1C17CF4
	037 Move X0, 0x75E000
	038 Move X0, [X0+2560]
	039 Call 0x1C17CF4
	040 Move X0, 0x75E000
	041 Move X0, [X0+2528]
	042 Call 0x1C17CF4
	043 Move X0, 0x75E000
	044 Move X0, [X0+2568]
	045 Call 0x1C17CF4
	046 Move X0, 0x75E000
	047 Move X0, [X0+2576]
	048 Call 0x1C17CF4
	049 Move X0, 0x75E000
	050 Move X0, [X0+2584]
	051 Call 0x1C17CF4
	052 Move X0, 0x75E000
	053 Move X0, [X0+2592]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+3773], W8
	057 Move [X19+88], X20
	058 Move X1, [X22]
	059 Move X0, X19
	060 Call 0x21A9CFC, X0
	061 Move [X19+120], X0
	062 Move X1, [X21]
	063 Move X0, X19
	064 Call 0x21A4894, X0
	065 Move X8, [X19+120]
	066 Move [X19+128], X0
	067 Compare X8, 0
	068 JumpIfEqual {213}
	069 Move X0, [X19+96]
	070 Compare X0, 0
	071 JumpIfEqual {213}
	072 Move X9, [X0]
	073 Move X1, [X8+40]
	074 Move X8, [X9+1512]
	075 Move X2, [X9+1520]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X19+120]
	078 Compare X8, 0
	079 JumpIfEqual {213}
	080 Move X25, [X8+96]
	081 Compare X25, 0
	082 JumpIfEqual {213}
	083 Move X8, [X25+24]
	084 Move X24, 0x75E000
	085 Move X24, [X24+2584]
	086 Move W20, W31
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X29, 0x75E000
	089 Move X27, 0x75E000
	090 Move X29, [X29+2544]
	091 Move X27, [X27+2560]
	092 Move X26, X31
	093 And X8, X8, 0
	094 Add X28, X25, 32
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X19+112]
	097 Compare X0, 0
	098 JumpIfEqual {213}
	099 Move W8, [X0+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X2, [X24]
	102 Move X22, [X28]
	103 Move W1, W20
	104 Call List`1<Object>.get_Item, X0, X1
	105 Move X8, 0x75E000
	106 Move X8, [X8+2568]
	107 Move X21, X0
	108 Move X8, [X8]
	109 Move X0, X8
	110 Call 0x1C17F10
	111 Move X8, 0x75E000
	112 Move X8, [X8+2552]
	113 Move X1, X19
	114 Move X3, X31
	115 Move X23, X0
	116 Move X2, [X8]
	117 Call Func`2<Int32, Boolean>..ctor, X0, X1, X2
	118 Compare X21, 0
	119 JumpIfEqual {213}
	120 Move [X21+120], X23
	121 Move X0, [X29]
	122 Call 0x1C17F10
	123 Move X2, [X27]
	124 Move X1, X19
	125 Move X3, X31
	126 Move X23, X0
	127 Call Action`2<Int32, Boolean>..ctor, X0, X1, X2
	128 Move [X21+128], X23
	129 Move X8, [X19+120]
	130 Compare X8, 0
	131 JumpIfEqual {213}
	132 Move X8, [X8+96]
	133 Compare X8, 0
	134 JumpIfEqual {213}
	135 Move W8, [X8+24]
	136 Subtract W8, W8, 1
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, [X19+112]
	139 Compare X0, 0
	140 JumpIfEqual {213}
	141 Move X2, [X24]
	142 Add W1, W20, 1
	143 Call List`1<Object>.get_Item, X0, X1
	144 Move X0, X31
	145 Subtract W1, W20, 1
	146 Move [X21+80], X0
	147 Move X0, [X19+112]
	148 Compare X0, 0
	149 JumpIfEqual {213}
	150 Move X2, [X24]
	151 Call List`1<Object>.get_Item, X0, X1
	152 Move X0, X31
	153 Move [X21+64], X19
	154 Move [X21+72], X0
	155 Move [X21+136], W20
	156 Compare X22, 0
	157 JumpIfEqual {213}
	158 Move X23, [X21+96]
	159 Move X0, X22
	160 Move X1, X31
	161 Call GUIContent.get_text, X0
	162 Compare X23, 0
	163 JumpIfEqual {213}
	164 Move X8, [X23]
	165 Move X1, X0
	166 Move X0, X23
	167 Move X9, [X8+1512]
	168 Move X2, [X8+1520]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X0, X21
	171 Call DebugUIHandlerIndirectToggle.Init, X0
	172 Add W20, W20, 1
	173 Move W8, [X25+24]
	174 Add X26, X26, 1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X0, [X19+112]
	177 Compare X0, 0
	178 JumpIfEqual {213}
	179 Move X22, 0x726000
	180 Move X23, 0x75E000
	181 Move X22, [X22+2296]
	182 Move X23, [X23+2592]
	183 Move W8, [X0+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X2, [X24]
	186 Move W1, W20
	187 Call List`1<Object>.get_Item, X0, X1
	188 Compare X0, 0
	189 JumpIfEqual {213}
	190 Move X1, X31
	191 Call Component.get_gameObject, X0
	192 Move X8, [X22]
	193 Move X21, X0
	194 Move W9, [X8+224]
	195 Compare W9, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X8
	198 Call 0x1C17DFC
	199 Move X0, X21
	200 Move X1, X31
	201 Call CoreUtils.Destroy, X0
	202 Move X0, [X19+112]
	203 Compare X0, 0
	204 JumpIfEqual {213}
	205 Move X3, [X23]
	206 Move W1, W20
	207 Move X2, X31
	208 Call List`1<Object>.set_Item, X0, X1, X2
	209 Move X0, [X19+112]
	210 Add W20, W20, 1
	211 Compare X0, 0
	212 JumpIfNotEqual {183}
	213 Call 0x1C17F20
	214 Move X20, [X31+80]
	215 Move X19, [X31+88]
	216 Move X22, [X31+64]
	217 Move X21, [X31+72]
	218 Move X24, [X31+48]
	219 Move X23, [X31+56]
	220 Move X26, [X31+32]
	221 Move X25, [X31+40]
	222 Move X28, [X31+16]
	223 Move X27, [X31+24]
	224 Move X29, [X31+96]
	225 Move X30, [X31+104]
	226 Return 
	227 Call 0x1C17F28

Method: System.Boolean GetValue(System.Int32 index)

Disassembly:
	0x039F6F24 ADD X10, X10, 0x8
	0x039F6F28 LDUR X11, [X10 - 0x8]
	0x039F6F2C CMP X11, X1
	0x039F6F30 B.EQ 0x39F6F50
	0x039F6F34 SUBS X9, X9, 0x1
	0x039F6F38 ADD X10, X10, 0x10
	0x039F6F3C B.NE 0x39F6F28
	0x039F6F40 MOV X0, X20
	0x039F6F44 MOV W2, W31
	0x039F6F48 BL 0x1C5C788
	0x039F6F4C B 0x39F6F5C
	0x039F6F50 LDRSW X9, [X10]
	0x039F6F54 ADD X8, X8, X9, 0x4, LSL
	0x039F6F58 ADD X0, X8, 0x138
	0x039F6F5C LDP X8, X1, [X0]
	0x039F6F60 MOV X0, X20
	0x039F6F64 BLR X8
	0x039F6F68 CBNZ X21, 0x39F6F74
	0x039F6F6C MOV X0, X19
	0x039F6F70 BL 0x1D2C690
	0x039F6F74 MOV X0, X21
	0x039F6F78 BL 0x1C16F18
	0x039F6F7C BL 0x1990590
	0x039F6F80 STP X30, X21, [X31 - 0x20]!
	0x039F6F84 STP X20, X19, [X31 + 0x10]
	0x039F6F88 ADRP X20, 0x9EB000
	0x039F6F8C ADRP X21, 0x75A000
	0x039F6F90 LDRB W8, [X20 + 0xED1]
	0x039F6F94 LDR X21, [X21 + 0x778]
	0x039F6F98 MOV X19, X0
	0x039F6F9C TBNZ X8, 0x0, 0x39F6FC0
	0x039F6FA0 ADRP X0, 0x75A000
	0x039F6FA4 LDR X0, [X0 + 0x778]
	0x039F6FA8 BL 0x1C16CF4
	0x039F6FAC ADRP X0, 0x6FD000
	0x039F6FB0 LDR X0, [X0 + 0x598]
	0x039F6FB4 BL 0x1C16CF4
	0x039F6FB8 MOVZ W8, 0x1
	0x039F6FBC STRB W8, [X20 + 0xED1]
	0x039F6FC0 LDR X0, [X21]
	0x039F6FC4 LDR W8, [X0 + 0xE0]
	0x039F6FC8 CBNZ W8, 0x39F6FD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9EC000
	006 Move W8, [X21+3774]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x707000
	014 Move X0, [X0+2536]
	015 Call 0x1C17CF4
	016 Move X0, 0x75E000
	017 Move X0, [X0+2624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3774], W8
	021 Compare W19, 0
	022 JumpIfEqual {45}
	023 Move X0, [X20+120]
	024 Compare X0, 0
	025 JumpIfEqual {51}
	026 Move X8, 0x75E000
	027 Move X8, [X8+2624]
	028 Move X21, 0x707000
	029 Add W20, W19, 31
	030 Move X1, [X8]
	031 Move X21, [X21+2536]
	032 Call Field`1<Object>.GetValue, X0
	033 Move X8, [X21]
	034 Move X19, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Call Convert.ToInt32, X0
	043 NotImplemented "Instruction LSRV not yet implemented."
	044 And W0, W8, 1
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void SetValue(System.Int32 index, System.Boolean value)

Disassembly:
	0x039F6FCC BL 0x1C16DFC
	0x039F6FD0 MOV X0, X31
	0x039F6FD4 BL 0x399C120
	0x039F6FD8 CBZ X0, 0x39F7190
	0x039F6FDC MOVZ W1, 0x1
	0x039F6FE0 MOV X2, X31
	0x039F6FE4 BL 0x39A82AC
	0x039F6FE8 FCMP S0, 0x0
	0x039F6FEC B.EQ 0x39F6FF8
	0x039F6FF0 MOV X0, X19
	0x039F6FF4 BL 0x39F89A8
	0x039F6FF8 LDR X0, [X21]
	0x039F6FFC LDR W8, [X0 + 0xE0]
	0x039F7000 CBNZ W8, 0x39F7008
	0x039F7004 BL 0x1C16DFC
	0x039F7008 MOV X0, X31
	0x039F700C BL 0x399C120
	0x039F7010 CBZ X0, 0x39F7190
	0x039F7014 MOVZ W1, 0x2
	0x039F7018 MOV X2, X31
	0x039F701C BL 0x39A82AC
	0x039F7020 FCMP S0, 0x0
	0x039F7024 B.EQ 0x39F7030
	0x039F7028 MOV X0, X19
	0x039F702C BL 0x39F8934
	0x039F7030 LDR X0, [X21]
	0x039F7034 LDR W8, [X0 + 0xE0]
	0x039F7038 CBNZ W8, 0x39F7040
	0x039F703C BL 0x1C16DFC
	0x039F7040 MOV X0, X31
	0x039F7044 BL 0x399C120
	0x039F7048 CBZ X0, 0x39F7190
	0x039F704C MOVZ W1, 0x3
	0x039F7050 MOV X2, X31
	0x039F7054 BL 0x39A82AC
	0x039F7058 FCMP S0, 0x0
	0x039F705C B.EQ 0x39F7068
	0x039F7060 MOV X0, X19
	0x039F7064 BL 0x39F8B14
	0x039F7068 LDR X0, [X21]
	0x039F706C LDR W8, [X0 + 0xE0]
	0x039F7070 CBNZ W8, 0x39F7078
	0x039F7074 BL 0x1C16DFC
	0x039F7078 MOV X0, X31
	0x039F707C BL 0x399C120
	0x039F7080 CBZ X0, 0x39F7190
	0x039F7084 MOVZ W1, 0x4
	0x039F7088 MOV X2, X31
	0x039F708C BL 0x39A82AC
	0x039F7090 FCMP S0, 0x0
	0x039F7094 B.EQ 0x39F70FC
	0x039F7098 ADRP X8, 0x6FC000
	0x039F709C LDR X8, [X8 + 0x598]
	0x039F70A0 LDR X20, [X19 + 0x50]
	0x039F70A4 LDR X0, [X8]
	0x039F70A8 LDR W8, [X0 + 0xE0]
	0x039F70AC CBNZ W8, 0x39F70B4
	0x039F70B0 BL 0x1C16DFC
	0x039F70B4 MOV X0, X20
	0x039F70B8 MOV X1, X31
	0x039F70BC MOV X2, X31
	0x039F70C0 BL 0x3C354F8
	0x039F70C4 TBZ X0, 0x0, 0x39F70FC
	0x039F70C8 LDR X0, [X21]
	0x039F70CC LDR W8, [X0 + 0xE0]
	0x039F70D0 CBNZ W8, 0x39F70D8
	0x039F70D4 BL 0x1C16DFC
	0x039F70D8 MOV X0, X31
	0x039F70DC BL 0x399C120
	0x039F70E0 LDR X8, [X19 + 0x50]
	0x039F70E4 CBZ X8, 0x39F7190
	0x039F70E8 CBZ X0, 0x39F7190
	0x039F70EC LDR X1, [X8 + 0x58]
	0x039F70F0 MOV X2, X31
	0x039F70F4 MOV X3, X31
	0x039F70F8 BL 0x39A9BF4
	0x039F70FC LDR X0, [X21]
	0x039F7100 LDR W8, [X0 + 0xE0]
	0x039F7104 CBNZ W8, 0x39F710C
	0x039F7108 BL 0x1C16DFC
	0x039F710C MOV X0, X31
	0x039F7110 BL 0x399C120
	0x039F7114 CBZ X0, 0x39F7190
	0x039F7118 MOVZ W1, 0x6
	0x039F711C MOV X2, X31
	0x039F7120 BL 0x39A82AC
	0x039F7124 FCMP S0, 0x0
	0x039F7128 B.EQ 0x39F7134
	0x039F712C MOV X0, X19
	0x039F7130 BL 0x39F8A28
	0x039F7134 LDR X0, [X21]
	0x039F7138 LDR W8, [X0 + 0xE0]
	0x039F713C CBNZ W8, 0x39F7144
	0x039F7140 BL 0x1C16DFC
	0x039F7144 MOV X0, X31
	0x039F7148 BL 0x399C120
	0x039F714C CBZ X0, 0x39F7190
	0x039F7150 MOVZ W1, 0x5
	0x039F7154 MOV X2, X31
	0x039F7158 BL 0x39A82AC
	0x039F715C FCMP S0, 0x0
	0x039F7160 B.EQ 0x39F7178
	0x039F7164 MOV X0, X19
	0x039F7168 B.PL 0x39F7184
	0x039F716C LDP X20, X19, [X31 + 0x10]
	0x039F7170 LDP X30, X21, [X31], #0x20
	0x039F7174 B 0x39F87AC
	0x039F7178 LDP X20, X19, [X31 + 0x10]
	0x039F717C LDP X30, X21, [X31], #0x20
	0x039F7180 RET
	0x039F7184 LDP X20, X19, [X31 + 0x10]
	0x039F7188 LDP X30, X21, [X31], #0x20
	0x039F718C B 0x39F8870
	0x039F7190 BL 0x1C16F20
	0x039F7194 STP D11, D10, [X31 - 0x40]!
	0x039F7198 STP D9, D8, [X31 + 0x10]
	0x039F719C STP X30, X21, [X31 + 0x20]
	0x039F71A0 STP X20, X19, [X31 + 0x30]
	0x039F71A4 ADRP X21, 0x9EA000
	0x039F71A8 ADRP X20, 0x6FC000
	0x039F71AC LDRB W8, [X21 + 0xF08]
	0x039F71B0 LDR X20, [X20 + 0x598]
	0x039F71B4 MOV X19, X0
	0x039F71B8 TBNZ X8, 0x0, 0x39F71DC
	0x039F71BC ADRP X0, 0x6FE000
	0x039F71C0 LDR X0, [X0 + 0x6B8]
	0x039F71C4 BL 0x1C16CF4
	0x039F71C8 ADRP X0, 0x6FC000
	0x039F71CC LDR X0, [X0 + 0x598]
	0x039F71D0 BL 0x1C16CF4
	0x039F71D4 MOVZ W8, 0x1
	0x039F71D8 STRB W8, [X21 + 0xF08]
	0x039F71DC LDR X0, [X20]
	0x039F71E0 LDR X20, [X19 + 0x58]
	0x039F71E4 LDR W8, [X0 + 0xE0]
	0x039F71E8 CBNZ W8, 0x39F71F0
	0x039F71EC BL 0x1C16DFC
	0x039F71F0 MOV X0, X20
	0x039F71F4 MOV X1, X31
	0x039F71F8 MOV X2, X31
	0x039F71FC BL 0x3C3883C
	0x039F7200 TBZ X0, 0x0, 0x39F7218
	0x039F7204 LDP X20, X19, [X31 + 0x30]
	0x039F7208 LDP X30, X21, [X31 + 0x20]
	0x039F720C LDP D9, D8, [X31 + 0x10]
	0x039F7210 LDP D11, D10, [X31], #0x40
	0x039F7214 RET
	0x039F7218 LDR X0, [X19 + 0x58]
	0x039F721C CBZ X0, 0x39F7308
	0x039F7220 ADRP X8, 0x6FE000
	0x039F7224 LDR X8, [X8 + 0x6B8]
	0x039F7228 LDR X1, [X8]
	0x039F722C BL 0x21A3894
	0x039F7230 MOV X1, X0
	0x039F7234 MOV X0, X19
	0x039F7238 BL 0x39FC398
	0x039F723C LDR X1, [X19 + 0x50]
	0x039F7240 MOV X0, X19
	0x039F7244 MOV V8.16B, V0.16B
	0x039F7248 BL 0x39FC398
	0x039F724C LDR X0, [X19 + 0x48]
	0x039F7250 CBZ X0, 0x39F7308
	0x039F7254 MOV X1, X31
	0x039F7258 MOV V9.16B, V0.16B
	0x039F725C BL 0x3C3E51C
	0x039F7260 LDR X0, [X19 + 0x40]
	0x039F7264 CBZ X0, 0x39F7308
	0x039F7268 MOV X1, X31
	0x039F726C MOV V10.16B, V3.16B
	0x039F7270 BL 0x3C3E51C
	0x039F7274 LDR X0, [X19 + 0x28]
	0x039F7278 CBZ X0, 0x39F7308
	0x039F727C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0x9EC000
	011 Move W8, [X22+3775]
	012 Move W19, W2
	013 Move W20, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x707000
	020 Move X0, [X0+2536]
	021 Call 0x1C17CF4
	022 Move X0, 0x75D000
	023 Move X0, [X0+2632]
	024 Call 0x1C17CF4
	025 Move X0, 0x6FD000
	026 Move X0, [X0+3576]
	027 Call 0x1C17CF4
	028 Move X0, 0x75D000
	029 Move X0, [X0+2640]
	030 Call 0x1C17CF4
	031 Move X0, 0x75D000
	032 Move X0, [X0+2648]
	033 Call 0x1C17CF4
	034 Move X0, 0x75D000
	035 Move X0, [X0+2656]
	036 Call 0x1C17CF4
	037 Move X0, 0x75D000
	038 Move X0, [X0+2624]
	039 Call 0x1C17CF4
	040 Move X0, 0x75D000
	041 Move X0, [X0+2664]
	042 Call 0x1C17CF4
	043 Move X0, 0x75D000
	044 Move X0, [X0+2672]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+3775], W8
	048 Move X25, 0x6FD000
	049 Move X24, 0x75D000
	050 Move X25, [X25+3576]
	051 Move X24, [X24+2664]
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Compare W20, 0
	056 JumpIfEqual {105}
	057 Move X0, [X21+120]
	058 Compare X0, 0
	059 JumpIfEqual {165}
	060 Move X8, 0x75D000
	061 Move X8, [X8+2624]
	062 Move X22, 0x706000
	063 Move X1, [X8]
	064 Move X22, [X22+2536]
	065 Call Field`1<Object>.GetValue, X0
	066 Move X8, [X22]
	067 Move X22, X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X22
	074 Move X1, X31
	075 Call Convert.ToInt32, X0
	076 Move X21, [X21+120]
	077 Compare X21, 0
	078 JumpIfEqual {165}
	079 Move X8, [X21+104]
	080 Compare X8, 0
	081 JumpIfEqual {165}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X9, X8, W20
	085 Move X8, [X25]
	086 Move W9, [X9+32]
	087 Move X20, [X21+112]
	088 And W31, W19, 1
	089 Move W10, [X8+224]
	090 NotImplemented "Instruction BIC not yet implemented."
	091 Or W9, W9, W0
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 Compare W10, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Move W1, W19
	099 Move X2, X31
	100 Call Enum.ToObject, X0, X1
	101 Move X2, [X24]
	102 Move X1, X0
	103 Move X0, X21
	104 Call Field`1<Object>.SetValue, X0, X1
	105 Move X22, [X21+120]
	106 Compare X22, 0
	107 JumpIfEqual {165}
	108 Move X0, [X25]
	109 Move X23, [X22+112]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X23
	115 Move W1, W31
	116 Move X2, X31
	117 Call Enum.ToObject, X0, X1
	118 Move X2, [X24]
	119 Move X1, X0
	120 Move X0, X22
	121 Call Field`1<Object>.SetValue, X0, X1
	122 Move X0, [X21+112]
	123 Compare X0, 0
	124 JumpIfEqual {165}
	125 Move X8, 0x75D000
	126 Move X8, [X8+2672]
	127 Move X1, [X8]
	128 Add X8, X31, 8
	129 Call List`1<Object>.GetEnumerator, X0
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move X8, [X31+24]
	132 Move X22, 0x75D000
	133 Move [X31+2], V0
	134 Move [X31+48], X8
	135 Move X22, [X22+2648]
	136 Move X1, [X22]
	137 Add X0, X31, 32
	138 Call Enumerator<Object>.MoveNext, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {150}
	143 Move X0, [X31+48]
	144 Compare X0, 0
	145 JumpIfEqual {136}
	146 Move X8, [X0+120]
	147 Compare X8, 0
	148 JumpIfEqual {136}
	149 Call DebugUIHandlerIndirectToggle.UpdateValueLabel, X0
	150 Move X8, 0x75D000
	151 Move X8, [X8+2640]
	152 Add X0, X31, 32
	153 Move X1, [X8]
	154 Call Enumerator<Object>.Dispose, X0
	155 Move X20, [X31+112]
	156 Move X19, [X31+120]
	157 Move X22, [X31+96]
	158 Move X21, [X31+104]
	159 Move X24, [X31+80]
	160 Move X23, [X31+88]
	161 Move X30, [X31+64]
	162 Move X25, [X31+72]
	163 Add X31, X31, 128
	164 Return 
	165 Call 0x1C17F20
	166 Call 0x1C17F28
	167 Move X23, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X23
	170 Call 0x3EB2AD0
	171 Move X22, [X0]
	172 Call 0x3EB2AE0
	173 Move X8, 0x75D000
	174 Move X8, [X8+2640]
	175 Add X0, X31, 32
	176 Move X1, [X8]
	177 Call Enumerator<Object>.Dispose, X0
	178 Compare X22, 0
	179 JumpIfEqual {57}
	180 Move X0, X22
	181 Call 0x1C17F18
	182 Move X22, X31
	183 Move X23, X0
	184 Move X8, 0x75D000
	185 Move X8, [X8+2640]
	186 Move X1, [X8]
	187 Add X0, X31, 32
	188 Call Enumerator<Object>.Dispose, X0
	189 Compare X22, 0
	190 JumpIfNotEqual {193}
	191 Move X0, X23
	192 Call 0x1D2D690
	193 Move X0, X22
	194 Call 0x1C17F18
	195 Call 0x1991590

Method: System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)

Disassembly:
	0x039F7328 STP X29, X30, [X31 + 0x70]
	0x039F732C STP X28, X27, [X31 + 0x80]
	0x039F7330 STP X26, X25, [X31 + 0x90]
	0x039F7334 STP X24, X23, [X31 + 0xA0]
	0x039F7338 STP X22, X21, [X31 + 0xB0]
	0x039F733C STP X20, X19, [X31 + 0xC0]
	0x039F7340 ADRP X20, 0x9EA000
	0x039F7344 LDRB W8, [X20 + 0xEC6]
	0x039F7348 MOV X19, X0
	0x039F734C TBNZ X8, 0x0, 0x39F749C
	0x039F7350 ADRP X0, 0x752000
	0x039F7354 LDR X0, [X0 + 0x6B0]
	0x039F7358 BL 0x1C16CF4
	0x039F735C ADRP X0, 0x759000
	0x039F7360 LDR X0, [X0 + 0x778]
	0x039F7364 BL 0x1C16CF4
	0x039F7368 ADRP X0, 0x75C000
	0x039F736C LDR X0, [X0 + 0xAF0]
	0x039F7370 BL 0x1C16CF4
	0x039F7374 ADRP X0, 0x75C000
	0x039F7378 LDR X0, [X0 + 0xAF8]
	0x039F737C BL 0x1C16CF4
	0x039F7380 ADRP X0, 0x75C000
	0x039F7384 LDR X0, [X0 + 0xB00]
	0x039F7388 BL 0x1C16CF4
	0x039F738C ADRP X0, 0x75C000
	0x039F7390 LDR X0, [X0 + 0xB08]
	0x039F7394 BL 0x1C16CF4
	0x039F7398 ADRP X0, 0x75C000
	0x039F739C LDR X0, [X0 + 0xB10]
	0x039F73A0 BL 0x1C16CF4
	0x039F73A4 ADRP X0, 0x75C000
	0x039F73A8 LDR X0, [X0 + 0xB18]
	0x039F73AC BL 0x1C16CF4
	0x039F73B0 ADRP X0, 0x75C000
	0x039F73B4 LDR X0, [X0 + 0xB20]
	0x039F73B8 BL 0x1C16CF4
	0x039F73BC ADRP X0, 0x75C000
	0x039F73C0 LDR X0, [X0 + 0xB28]
	0x039F73C4 BL 0x1C16CF4
	0x039F73C8 ADRP X0, 0x75C000
	0x039F73CC LDR X0, [X0 + 0xB30]
	0x039F73D0 BL 0x1C16CF4
	0x039F73D4 ADRP X0, 0x75C000
	0x039F73D8 LDR X0, [X0 + 0xB38]
	0x039F73DC BL 0x1C16CF4
	0x039F73E0 ADRP X0, 0x75C000
	0x039F73E4 LDR X0, [X0 + 0xB40]
	0x039F73E8 BL 0x1C16CF4
	0x039F73EC ADRP X0, 0x6FC000
	0x039F73F0 LDR X0, [X0 + 0xE00]
	0x039F73F4 BL 0x1C16CF4
	0x039F73F8 ADRP X0, 0x75C000
	0x039F73FC LDR X0, [X0 + 0xB48]
	0x039F7400 BL 0x1C16CF4
	0x039F7404 ADRP X0, 0x6FC000
	0x039F7408 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9EB000
	007 Move W8, [X22+3776]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x75A000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3776], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {39}
	024 Move X8, [X19+104]
	025 Compare X8, 0
	026 JumpIfEqual {78}
	027 Move W8, [X8+288]
	028 Compare W8, 0
	029 JumpIfEqual {39}
	030 Move X0, [X19+128]
	031 Compare X0, 0
	032 JumpIfEqual {78}
	033 Move X1, X20
	034 Call DebugUIHandlerContainer.IsDirectChild, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X0, [X19+96]
	040 Compare X0, 0
	041 JumpIfEqual {78}
	042 Move X8, [X0]
	043 Move S2, [X19+56]
	044 Move S3, [X19+60]
	045 Move S0, [X19+48]
	046 Move S1, [X19+52]
	047 Move X9, [X8+680]
	048 Move X1, [X8+688]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W0, 1
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X0, [X19+128]
	058 Compare X0, 0
	059 JumpIfEqual {78}
	060 Call DebugUIHandlerContainer.GetLastItem, X0
	061 Move X8, 0x75A000
	062 Move X8, [X8+1912]
	063 Move X19, X0
	064 Move X8, [X8]
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X31
	071 Call DebugManager.get_instance
	072 Compare X0, 0
	073 JumpIfEqual {78}
	074 Move X1, X19
	075 Move W2, W31
	076 Move X3, X31
	077 Call DebugManager.ChangeSelection, X0, X1, X2
	078 Call 0x1C17F20

Method: System.Void OnDeselection()

Disassembly:
	0x039F759C BL 0x3C354F8
	0x039F75A0 TBZ X0, 0x0, 0x39F7524
	0x039F75A4 LDR X0, [X19 + 0x28]
	0x039F75A8 CBZ X0, 0x39F7B28
	0x039F75AC LDR X2, [X26 + 0x18]
	0x039F75B0 LDR X3, [X27]
	0x039F75B4 MOV X1, X20
	0x039F75B8 BL 0x2AA5098
	0x039F75BC B 0x39F7524
	0x039F75C0 ADRP X8, 0x75C000
	0x039F75C4 LDR X8, [X8 + 0xB10]
	0x039F75C8 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+96]
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 Move X9, [X0]
	007 Move S2, [X8+40]
	008 Move S3, [X8+44]
	009 Move S0, [X8+32]
	010 Move S1, [X8+36]
	011 Move X2, [X9+680]
	012 Move X1, [X9+688]
	013 Move X30, [X31+16]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Void OnIncrement(System.Boolean fast)

Disassembly:
	0x039F75CC LDR X1, [X8]
	0x039F75D0 BL 0x2BC434C
	0x039F75D4 ADRP X26, 0x75C000
	0x039F75D8 ADRP X27, 0x75C000
	0x039F75DC ADRP X25, 0x75C000
	0x039F75E0 LDR X26, [X26 + 0xB80]
	0x039F75E4 LDR X27, [X27 + 0xB28]
	0x039F75E8 LDR X25, [X25 + 0xB08]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnDecrement(System.Boolean fast)

Disassembly:
	0x039F75EC LDR X8, [X19 + 0x40]
	0x039F75F0 CBZ X8, 0x39F7B2C
	0x039F75F4 LDP W2, W9, [X8 + 0x18]
	0x039F75F8 ADD W9, W9, 0x1
	0x039F75FC CMP W2, 0x1
	0x039F7600 STP W31, W9, [X8 + 0x18]
	0x039F7604 B.LT 0x39F7618
	0x039F7608 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, W31
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnAction()

Disassembly:
	0x039F760C MOV W1, W31
	0x039F7610 MOV X3, X31
	0x039F7614 BL 0x339FA34
	0x039F7618 ADRP X8, 0x759000
	0x039F761C LDR X8, [X8 + 0x778]
	0x039F7620 LDR X0, [X8]
	0x039F7624 LDR W8, [X0 + 0xE0]
	0x039F7628 CBNZ W8, 0x39F7630
	0x039F762C BL 0x1C16DFC
	0x039F7630 MOV X0, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move W8, [X0+288]
	006 Move X2, X31
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Call Toggle.set_isOn, X0, X1
	011 Return 
	012 Call 0x1C17F20

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget Next()

Disassembly:
	0x039F7634 BL 0x399C120
	0x039F7638 CBZ X0, 0x39F7B2C
	0x039F763C MOV X1, X31
	0x039F7640 BL 0x39A97B8
	0x039F7644 STR W0, [X19 + 0x20]
	0x039F7648 MOV X0, X31
	0x039F764C BL 0x399C120
	0x039F7650 CBZ X0, 0x39F7B2C
	0x039F7654 MOV X1, X31
	0x039F7658 BL 0x39A9090
	0x039F765C ADRP X8, 0x752000
	0x039F7660 LDR X8, [X8 + 0x6B0]
	0x039F7664 MOV X20, X0
	0x039F7668 MOV X0, X19
	0x039F766C LDR X1, [X8]
	0x039F7670 BL 0x21A3F50
	0x039F7674 CBZ X0, 0x39F7B2C
	0x039F7678 MOV X1, X31
	0x039F767C BL 0x3C3E51C
	0x039F7680 ADRP X8, 0x6FC000
	0x039F7684 LDR X8, [X8 + 0x5A8]
	0x039F7688 MOV V8.16B, V2.16B
	0x039F768C MOV V9.16B, V3.16B
	0x039F7690 LDR X0, [X8]
	0x039F7694 LDR W8, [X0 + 0xE0]
	0x039F7698 CBNZ W8, 0x39F76A0
	0x039F769C BL 0x1C16DFC
	0x039F76A0 MOV V0.16B, V8.16B
	0x039F76A4 MOV V1.16B, V9.16B
	0x039F76A8 MOV X0, X31
	0x039F76AC BL 0x337EEBC
	0x039F76B0 MOV X0, X31
	0x039F76B4 MOV V8.16B, V0.16B
	0x039F76B8 BL 0x3C0E0D8
	0x039F76BC MOV W21, W0
	0x039F76C0 MOV X0, X31
	0x039F76C4 BL 0x3C0E0B0
	0x039F76C8 MOV W1, W0
	0x039F76CC MOV W0, W21
	0x039F76D0 MOV X2, X31
	0x039F76D4 BL 0x337EE94
	0x039F76D8 MOV W21, W0
	0x039F76DC MOV X0, X31
	0x039F76E0 BL 0x3C0E1A0
	0x039F76E4 CBZ X20, 0x39F7B2C
	0x039F76E8 ADRP X8, 0x75C000
	0x039F76EC LDR X8, [X8 + 0xB70]
	0x039F76F0 SCVTF S2, W21
	0x039F76F4 FNEG S1, S1
	0x039F76F8 FDIV S11, S8, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9EB000
	006 Move W8, [X20+3777]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6FD000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3777], W8
	017 Move X8, [X19+104]
	018 Compare X8, 0
	019 JumpIfEqual {69}
	020 Move W8, [X8+288]
	021 Compare W8, 0
	022 JumpIfEqual {58}
	023 Move X21, 0x6FD000
	024 Move X21, [X21+1432]
	025 Move X20, [X19+128]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {58}
	039 Move X0, [X19+128]
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Call DebugUIHandlerContainer.GetFirstItem, X0
	043 Move X8, [X21]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {63}
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Move X0, X20
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039F7890 CBZ W0, 0x39F7734
	0x039F7894 LDR X23, [X19 + 0x30]
	0x039F7898 MOV X0, X19
	0x039F789C MOV X1, X31
	0x039F78A0 BL 0x3C32E90
	0x039F78A4 ADRP X8, 0x6FC000
	0x039F78A8 LDR X8, [X8 + 0x598]

ISIL:
	001 Move X8, -49324032
	002 Move X9, -49328128
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

