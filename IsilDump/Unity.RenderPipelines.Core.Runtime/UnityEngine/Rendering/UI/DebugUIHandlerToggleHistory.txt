Type: UnityEngine.Rendering.UI.DebugUIHandlerToggleHistory

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x039FEAC4 LDR X1, [X25]
	0x039FEAC8 LDR X21, [X19 + 0x78]
	0x039FEACC MOV X0, X20
	0x039FEAD0 BL 0x21E52E4
	0x039FEAD4 CBZ X21, 0x39FEB38
	0x039FEAD8 MOV X20, X0
	0x039FEADC CBZ X0, 0x39FEAF4
	0x039FEAE0 LDR X8, [X21]
	0x039FEAE4 MOV X0, X20
	0x039FEAE8 LDR X1, [X8 + 0x40]
	0x039FEAEC BL 0x1C16E00
	0x039FEAF0 CBZ X0, 0x39FEB40
	0x039FEAF4 LDR W8, [X21 + 0x18]
	0x039FEAF8 ADD X9, X23, 0x1
	0x039FEAFC CMP X9, X8
	0x039FEB00 B.CS 0x39FEB3C
	0x039FEB04 ADD X8, X21, X23, 0x3, LSL
	0x039FEB08 ADD X23, X23, 0x1
	0x039FEB0C CMP X24, X23
	0x039FEB10 STR X20, [X8 + 0x28]
	0x039FEB14 B.NE 0x39FE96C
	0x039FEB18 LDP X20, X19, [X31 + 0x60]
	0x039FEB1C LDP X22, X21, [X31 + 0x50]
	0x039FEB20 LDP X24, X23, [X31 + 0x40]
	0x039FEB24 LDP X26, X25, [X31 + 0x30]
	0x039FEB28 LDP X28, X27, [X31 + 0x20]
	0x039FEB2C LDP X29, X30, [X31 + 0x10]
	0x039FEB30 LDR V8, [X31], #0x70
	0x039FEB34 RET
	0x039FEB38 BL 0x1C16F20
	0x039FEB3C BL 0x1C16F28
	0x039FEB40 BL 0x1C16F44
	0x039FEB44 MOV X1, X31
	0x039FEB48 BL 0x1C16DEC
	0x039FEB4C STP X29, X30, [X31 - 0x60]!
	0x039FEB50 STP X28, X27, [X31 + 0x10]
	0x039FEB54 STP X26, X25, [X31 + 0x20]
	0x039FEB58 STP X24, X23, [X31 + 0x30]
	0x039FEB5C STP X22, X21, [X31 + 0x40]
	0x039FEB60 STP X20, X19, [X31 + 0x50]
	0x039FEB64 ADRP X20, 0x9E3000
	0x039FEB68 LDRB W8, [X20 + 0xF24]
	0x039FEB6C MOV X19, X0
	0x039FEB70 TBNZ X8, 0x0, 0x39FEBA0
	0x039FEB74 ADRP X0, 0x755000
	0x039FEB78 LDR X0, [X0 + 0xED0]
	0x039FEB7C BL 0x1C16CF4
	0x039FEB80 ADRP X0, 0x6F5000
	0x039FEB84 LDR X0, [X0 + 0x598]
	0x039FEB88 BL 0x1C16CF4
	0x039FEB8C ADRP X0, 0x6F5000
	0x039FEB90 LDR X0, [X0 + 0xA90]
	0x039FEB94 BL 0x1C16CF4
	0x039FEB98 MOVZ W8, 0x1
	0x039FEB9C STRB W8, [X20 + 0xF24]
	0x039FEBA0 LDR X0, [X19 + 0x70]
	0x039FEBA4 CBZ X0, 0x39FED78
	0x039FEBA8 ADRP X22, 0x6F5000
	0x039FEBAC ADRP X23, 0x6F5000
	0x039FEBB0 LDR X22, [X22 + 0x598]
	0x039FEBB4 LDR X23, [X23 + 0xA90]
	0x039FEBB8 ADD X25, X19, 0x20
	0x039FEBBC ADD X26, X19, 0x24
	0x039FEBC0 ADD X27, X19, 0x28
	0x039FEBC4 ADD X28, X19, 0x2C
	0x039FEBC8 MOVZ W29, 0x4
	0x039FEBCC MOV X1, X31
	0x039FEBD0 SUB X24, X29, 0x4
	0x039FEBD4 BL 0x39AE9B4
	0x039FEBD8 CMP X24, W0, SXTW
	0x039FEBDC B.GE 0x39FED7C
	0x039FEBE0 LDR X8, [X19 + 0x78]
	0x039FEBE4 CBZ X8, 0x39FED78
	0x039FEBE8 LDR W9, [X8 + 0x18]
	0x039FEBEC CMP X24, W9, SXTW
	0x039FEBF0 B.GE 0x39FED6C
	0x039FEBF4 CMP X24, X9
	0x039FEBF8 B.CS 0x39FED98
	0x039FEBFC LDR X0, [X22]
	0x039FEC00 LDR X20, [X8, X29, LSL #3]
	0x039FEC04 LDR W9, [X0 + 0xE0]
	0x039FEC08 CBNZ W9, 0x39FEC10
	0x039FEC0C BL 0x1C16DFC
	0x039FEC10 MOV X0, X20
	0x039FEC14 MOV X1, X31
	0x039FEC18 MOV X2, X31
	0x039FEC1C BL 0x3C354F8
	0x039FEC20 TBZ X0, 0x0, 0x39FED6C
	0x039FEC24 LDR X8, [X19 + 0x70]
	0x039FEC28 CBZ X8, 0x39FED78
	0x039FEC2C LDR X8, [X8 + 0x48]
	0x039FEC30 CBZ X8, 0x39FED78
	0x039FEC34 LDR W9, [X8 + 0x18]
	0x039FEC38 CMP X24, X9
	0x039FEC3C B.CS 0x39FED98
	0x039FEC40 LDR X0, [X8, X29, LSL #3]
	0x039FEC44 CBZ X0, 0x39FED78
	0x039FEC48 LDR X8, [X0]
	0x039FEC4C LDP X9, X1, [X8 + 0x1F8]
	0x039FEC50 BLR X9
	0x039FEC54 LDR X8, [X19 + 0x78]
	0x039FEC58 CBZ X8, 0x39FED78
	0x039FEC5C LDR W9, [X8 + 0x18]
	0x039FEC60 CMP X24, X9
	0x039FEC64 B.CS 0x39FED98
	0x039FEC68 LDR X9, [X19 + 0x70]
	0x039FEC6C CBZ X9, 0x39FED78
	0x039FEC70 LDR X9, [X9 + 0x48]
	0x039FEC74 CBZ X9, 0x39FED78
	0x039FEC78 LDR W10, [X9 + 0x18]
	0x039FEC7C CMP X24, X10
	0x039FEC80 B.CS 0x39FED98
	0x039FEC84 MOV X20, X0
	0x039FEC88 LDR X0, [X9, X29, LSL #3]
	0x039FEC8C CBZ X0, 0x39FED78
	0x039FEC90 LDR X9, [X0]
	0x039FEC94 LDR X21, [X8, X29, LSL #3]
	0x039FEC98 MOV X1, X20
	0x039FEC9C LDR X8, [X9 + 0x208]
	0x039FECA0 LDR X2, [X9 + 0x210]
	0x039FECA4 BLR X8
	0x039FECA8 CBZ X21, 0x39FED78
	0x039FECAC LDR X8, [X21]
	0x039FECB0 MOV X1, X0
	0x039FECB4 MOV X0, X21
	0x039FECB8 LDR X9, [X8 + 0x5E8]
	0x039FECBC LDR X2, [X8 + 0x5F0]
	0x039FECC0 BLR X9
	0x039FECC4 CBZ X20, 0x39FED6C
	0x039FECC8 LDR X8, [X23]
	0x039FECCC LDR X9, [X20]
	0x039FECD0 CMP X9, X8
	0x039FECD4 B.NE 0x39FED6C
	0x039FECD8 LDR X8, [X19 + 0x78]
	0x039FECDC CBZ X8, 0x39FED78
	0x039FECE0 LDR W9, [X8 + 0x18]
	0x039FECE4 CMP X24, X9
	0x039FECE8 B.CS 0x39FED98
	0x039FECEC LDR X21, [X8, X29, LSL #3]
	0x039FECF0 MOV X0, X20
	0x039FECF4 BL 0x1C16E08
	0x039FECF8 LDR V0, [X0]
	0x039FECFC MOV X11, X28
	0x039FED00 MOV X10, X27
	0x039FED04 MOV X9, X26
	0x039FED08 FCMP S0, 0x0
	0x039FED0C MOV X8, X25
	0x039FED10 B.NE 0x39FED44
	0x039FED14 ADRP X9, 0x755000
	0x039FED18 LDR X9, [X9 + 0xED0]
	0x039FED1C LDR X0, [X9]
	0x039FED20 LDR W8, [X0 + 0xE0]
	0x039FED24 CBNZ W8, 0x39FED34
	0x039FED28 MOV X20, X9
	0x039FED2C BL 0x1C16DFC
	0x039FED30 LDR X0, [X20]
	0x039FED34 LDR X8, [X0 + 0xB8]
	0x039FED38 ADD X9, X8, 0x4
	0x039FED3C ADD X10, X8, 0x8
	0x039FED40 ADD X11, X8, 0xC
	0x039FED44 CBZ X21, 0x39FED78
	0x039FED48 LDR V3, [X11]
	0x039FED4C LDR X11, [X21]
	0x039FED50 LDR V2, [X10]
	0x039FED54 LDR V1, [X9]
	0x039FED58 LDR V0, [X8]
	0x039FED5C LDR X8, [X11 + 0x2A8]
	0x039FED60 LDR X1, [X11 + 0x2B0]
	0x039FED64 MOV X0, X21
	0x039FED68 BLR X8
	0x039FED6C LDR X0, [X19 + 0x70]
	0x039FED70 ADD X29, X29, 0x1
	0x039FED74 CBNZ X0, 0x39FEBCC
	0x039FED78 BL 0x1C16F20
	0x039FED7C LDP X20, X19, [X31 + 0x50]
	0x039FED80 LDP X22, X21, [X31 + 0x40]
	0x039FED84 LDP X24, X23, [X31 + 0x30]
	0x039FED88 LDP X26, X25, [X31 + 0x20]
	0x039FED8C LDP X28, X27, [X31 + 0x10]
	0x039FED90 LDP X29, X30, [X31], #0x60
	0x039FED94 RET
	0x039FED98 BL 0x1C16F28
	0x039FED9C STR D8, [X31 - 0x20]!
	0x039FEDA0 STP X30, X19, [X31 + 0x10]
	0x039FEDA4 MOV X19, X0
	0x039FEDA8 LDR X0, [X0 + 0x70]
	0x039FEDAC CBZ X0, 0x39FEDF4
	0x039FEDB0 LDR V8, [X19 + 0x80]
	0x039FEDB4 MOV X1, X31
	0x039FEDB8 BL 0x39AE9D0
	0x039FEDBC FCMP S8, S0
	0x039FEDC0 B.LT 0x39FEDF4
	0x039FEDC4 LDR X8, [X19]
	0x039FEDC8 MOV X0, X19
	0x039FEDCC LDR X9, [X8 + 0x208]
	0x039FEDD0 LDR X1, [X8 + 0x210]
	0x039FEDD4 BLR X9
	0x039FEDD8 LDR X0, [X19 + 0x70]
	0x039FEDDC CBZ X0, 0x39FEE14
	0x039FEDE0 LDR V8, [X19 + 0x80]
	0x039FEDE4 MOV X1, X31
	0x039FEDE8 BL 0x39AE9D0
	0x039FEDEC FSUB S0, S8, S0
	0x039FEDF0 STR S0, [X19 + 0x80]
	0x039FEDF4 LDR V8, [X19 + 0x80]
	0x039FEDF8 MOV X0, X31
	0x039FEDFC BL 0x3C3C714
	0x039FEE00 FADD S0, S8, S0
	0x039FEE04 STR S0, [X19 + 0x80]
	0x039FEE08 LDP X30, X19, [X31 + 0x10]
	0x039FEE0C LDR V8, [X31], #0x20
	0x039FEE10 RET
	0x039FEE14 BL 0x1C16F20
	0x039FEE18 ADRP X8, 0xFFFFFFFFFD0EE000
	0x039FEE1C ADRP X9, 0xFFFFFFFFFD0ED000
	0x039FEE20 LDR V0, [X8 + 0xEB]
	0x039FEE24 LDR V1, [X9 + 0x77]
	0x039FEE28 MOV X1, X31
	0x039FEE2C STP V0, V1, [X0 + 0x20]
	0x039FEE30 B 0x3C36C30
	0x039FEE34 STR X30, [X31 - 0x20]!
	0x039FEE38 STP X20, X19, [X31 + 0x10]
	0x039FEE3C ADRP X19, 0x9E3000
	0x039FEE40 ADRP X20, 0x755000

ISIL:
	001 Move [X31-160], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Move X19, 0x9E4000
	021 Move W8, [X19+3865]
	022 Move X21, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {48}
	028 Move X0, 0x722000
	029 Move X0, [X0+2496]
	030 Call 0x1C17CF4
	031 Move X0, 0x756000
	032 Move X0, [X0+3696]
	033 Call 0x1C17CF4
	034 Move X0, 0x756000
	035 Move X0, [X0+3704]
	036 Call 0x1C17CF4
	037 Move X0, 0x756000
	038 Move X0, [X0+3712]
	039 Call 0x1C17CF4
	040 Move X0, 0x6F6000
	041 Move X0, [X0+1432]
	042 Call 0x1C17CF4
	043 Move X0, 0x756000
	044 Move X0, [X0+3720]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+3865], W8
	048 Move X19, 0x756000
	049 Move X19, [X19+3720]
	050 Move [X31+8], X21
	051 Compare X21, 0
	052 JumpIfEqual {65}
	053 Move X8, 0x756000
	054 Move X8, [X8+3704]
	055 Move X9, [X21]
	056 Move X8, [X8]
	057 Move W11, [X9+304]
	058 Move W10, [X8+304]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, [X9+200]
	061 Add X9, X9, X10
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W21, W31
	065 Move X0, [X19]
	066 Move W1, W21
	067 Call 0x1C17D6C
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X20+128], X0
	070 Move W8, 0x43660000
	071 Move X26, 0x756000
	072 Move X28, 0x722000
	073 Move X29, 0x756000
	074 NotImplemented "Instruction SCVTF not yet implemented."
	075 Move W19, W21
	076 Move X9, -49360896
	077 Move X10, -49360896
	078 Move S1, W8
	079 Move X8, -49360896
	080 Move X21, 0x6FE000
	081 Move X26, [X26+3712]
	082 Move X28, [X28+2496]
	083 Move X29, [X29+3696]
	084 Move V8, [X9+852]
	085 Move V9, [X10+80]
	086 Move V10, [X8+1080]
	087 Move X21, [X21+3848]
	088 Move X27, X31
	089 NotImplemented "Instruction FDIV not yet implemented."
	090 Move X25, 0x9DC000
	091 Move X22, [X20+104]
	092 Move X0, X20
	093 Move X1, X31
	094 Call Component.get_transform, X0
	095 Move X8, 0x6F6000
	096 Move X8, [X8+1432]
	097 Move X23, X0
	098 Move X8, [X8]
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X2, [X26]
	105 Move X0, X22
	106 Move X1, X23
	107 Call 0x222E488, X0, X1
	108 Compare X0, 0
	109 JumpIfEqual {252}
	110 Move X1, X31
	111 Move X22, X0
	112 Call Component.get_transform, X0
	113 Compare X0, 0
	114 JumpIfEqual {252}
	115 Move X1, X31
	116 Call Transform.get_position, X0
	117 Move X0, X22
	118 Move X1, X31
	119 Move V13, V0
	120 Move V11, V1
	121 Move V12, V2
	122 Call Component.get_transform, X0
	123 Compare X0, 0
	124 JumpIfEqual {252}
	125 Add W8, W27, 1
	126 NotImplemented "Instruction SCVTF not yet implemented."
	127 Multiply S0, S14, S0
	128 Add S0, S0, S13
	129 Move V1, V11
	130 Move V2, V12
	131 Move X1, X31
	132 Call Transform.set_position, X0, X1
	133 Move X0, X22
	134 Move X1, X31
	135 Call Component.get_transform, X0
	136 Compare X0, 0
	137 JumpIfEqual {252}
	138 Move W1, W31
	139 Move X2, X31
	140 Call Transform.GetChild, X0, X1
	141 Compare X0, 0
	142 JumpIfEqual {252}
	143 Move X1, [X28]
	144 Call 0x21A4894, X0
	145 Move X23, X0
	146 Move X0, X31
	147 Call Texture2D.get_whiteTexture
	148 Move W8, [X25+1935]
	149 Move X24, X0
	150 Compare W8, 0
	151 JumpIfNotEqual {156}
	152 Move X0, X21
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X25+1935], W8
	156 Move X8, [X21]
	157 Move S0, -1
	158 Move S1, -1
	159 Move S2, 2
	160 Move X8, [X8+184]
	161 Move S3, 2
	162 Move X0, X24
	163 Move X1, X31
	164 Move S4, [X8]
	165 Move S5, [X8+4]
	166 Call Sprite.Create, X0, X1, X2
	167 Compare X23, 0
	168 JumpIfEqual {252}
	169 Move X1, X0
	170 Move X0, X23
	171 Move X2, X31
	172 Call Image.set_sprite, X0, X1
	173 Move X8, [X23]
	174 Move X0, X23
	175 Move V0, V8
	176 Move V1, V8
	177 Move X9, [X8+680]
	178 Move X1, [X8+688]
	179 Move V2, V8
	180 Move V3, V9
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X0, X23
	183 Move X1, X31
	184 Call Component.get_transform, X0
	185 Compare X0, 0
	186 JumpIfEqual {252}
	187 Move W1, W31
	188 Move X2, X31
	189 Call Transform.GetChild, X0, X1
	190 Compare X0, 0
	191 JumpIfEqual {252}
	192 Move X1, [X28]
	193 Call 0x21A4894, X0
	194 Compare X0, 0
	195 JumpIfEqual {252}
	196 Move X8, [X0]
	197 Move S3, 1
	198 Move V0, V10
	199 Move V1, V10
	200 Move X9, [X8+680]
	201 Move X1, [X8+688]
	202 Move V2, V10
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X1, [X29]
	205 Move X23, [X20+128]
	206 Move X0, X22
	207 Call 0x21A4894, X0
	208 Compare X23, 0
	209 JumpIfEqual {252}
	210 Move X22, X0
	211 Compare X0, 0
	212 JumpIfEqual {219}
	213 Move X8, [X23]
	214 Move X0, X22
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {254}
	219 Move W8, [X23+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add X8, X23, X27
	222 Add X27, X27, 1
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move [X8+32], X22
	225 Move X0, X20
	226 Move X1, [X31+8]
	227 Move X20, [X31+144]
	228 Move X19, [X31+152]
	229 Move X22, [X31+128]
	230 Move X21, [X31+136]
	231 Move X24, [X31+112]
	232 Move X23, [X31+120]
	233 Move X26, [X31+96]
	234 Move X25, [X31+104]
	235 Move X28, [X31+80]
	236 Move X27, [X31+88]
	237 Move X29, [X31+64]
	238 Move X30, [X31+72]
	239 Move D9, [X31+48]
	240 Move D8, [X31+56]
	241 Move D11, [X31+32]
	242 Move D10, [X31+40]
	243 Move D13, [X31+16]
	244 Move D12, [X31+24]
	245 Move V14, [X31+160]
	246 Call DebugUIHandlerToggle.SetWidget, X0, X1
	247 Return 
	248 Move X0, X21
	249 Move X1, X31
	250 Call HistoryBoolField.get_historyDepth, X0
	251 Move W21, W0
	252 Call 0x1C17F20
	253 Call 0x1C17F28
	254 Call 0x1C17F44
	255 Move X1, X31
	256 Call 0x1C17DEC

Method: System.Void UpdateValueLabel()

Disassembly:
	0x039FEE44 LDRB W8, [X19 + 0xF25]
	0x039FEE48 LDR X20, [X20 + 0xED0]
	0x039FEE4C TBNZ X8, 0x0, 0x39FEE64
	0x039FEE50 ADRP X0, 0x755000
	0x039FEE54 LDR X0, [X0 + 0xED0]
	0x039FEE58 BL 0x1C16CF4
	0x039FEE5C MOVZ W8, 0x1
	0x039FEE60 STRB W8, [X19 + 0xF25]
	0x039FEE64 LDR X8, [X20]
	0x039FEE68 ADRP X9, 0xFFFFFFFFFD0EC000
	0x039FEE6C LDR V0, [X9 + 0xA9]
	0x039FEE70 LDP X20, X19, [X31 + 0x10]
	0x039FEE74 LDR X8, [X8 + 0xB8]
	0x039FEE78 STR V0, [X8]
	0x039FEE7C LDR X30, [X31], #0x20
	0x039FEE80 RET
	0x039FEE84 STR X30, [X31 - 0x30]!
	0x039FEE88 STP X22, X21, [X31 + 0x10]
	0x039FEE8C STP X20, X19, [X31 + 0x20]
	0x039FEE90 ADRP X22, 0x9E3000
	0x039FEE94 ADRP X21, 0x755000
	0x039FEE98 LDRB W8, [X22 + 0xF26]
	0x039FEE9C LDR X21, [X21 + 0x9E8]
	0x039FEEA0 MOV X20, X1
	0x039FEEA4 MOV X19, X0
	0x039FEEA8 TBNZ X8, 0x0, 0x39FEEC0
	0x039FEEAC ADRP X0, 0x755000
	0x039FEEB0 LDR X0, [X0 + 0x9E8]
	0x039FEEB4 BL 0x1C16CF4
	0x039FEEB8 MOVZ W8, 0x1
	0x039FEEBC STRB W8, [X22 + 0xF26]
	0x039FEEC0 STR X20, [X19 + 0x58]
	0x039FEEC4 LDR X1, [X21]
	0x039FEEC8 MOV X0, X19
	0x039FEECC BL 0x21A3894
	0x039FEED0 STR X0, [X19 + 0x60]
	0x039FEED4 LDP X20, X19, [X31 + 0x20]
	0x039FEED8 LDP X22, X21, [X31 + 0x10]
	0x039FEEDC LDR X30, [X31], #0x30
	0x039FEEE0 RET
	0x039FEEE4 STR X30, [X31 - 0x30]!
	0x039FEEE8 STP X22, X21, [X31 + 0x10]
	0x039FEEEC STP X20, X19, [X31 + 0x20]
	0x039FEEF0 ADRP X22, 0x9E3000
	0x039FEEF4 LDRB W8, [X22 + 0xF27]
	0x039FEEF8 MOV X20, X2
	0x039FEEFC MOV W21, W1
	0x039FEF00 MOV X19, X0
	0x039FEF04 TBNZ X8, 0x0, 0x39FEF1C
	0x039FEF08 ADRP X0, 0x752000
	0x039FEF0C LDR X0, [X0 + 0x778]
	0x039FEF10 BL 0x1C16CF4
	0x039FEF14 MOVZ W8, 0x1
	0x039FEF18 STRB W8, [X22 + 0xF27]
	0x039FEF1C TBNZ X21, 0x0, 0x39FEF34
	0x039FEF20 LDR X0, [X19 + 0x60]
	0x039FEF24 CBZ X0, 0x39FEF98
	0x039FEF28 MOV X1, X20
	0x039FEF2C BL 0x39F640C
	0x039FEF30 TBZ X0, 0x0, 0x39FEF3C
	0x039FEF34 MOV W0, W31
	0x039FEF38 B 0x39FEF88
	0x039FEF3C LDR X0, [X19 + 0x60]
	0x039FEF40 CBZ X0, 0x39FEF98
	0x039FEF44 BL 0x39F650C
	0x039FEF48 ADRP X8, 0x752000
	0x039FEF4C LDR X8, [X8 + 0x778]
	0x039FEF50 MOV X19, X0
	0x039FEF54 LDR X8, [X8]
	0x039FEF58 LDR W9, [X8 + 0xE0]
	0x039FEF5C CBNZ W9, 0x39FEF68
	0x039FEF60 MOV X0, X8
	0x039FEF64 BL 0x1C16DFC
	0x039FEF68 MOV X0, X31
	0x039FEF6C BL 0x399C120
	0x039FEF70 CBZ X0, 0x39FEF98
	0x039FEF74 MOV X1, X19
	0x039FEF78 MOV W2, W31
	0x039FEF7C MOV X3, X31
	0x039FEF80 BL 0x39A9954
	0x039FEF84 MOVZ W0, 0x1
	0x039FEF88 LDP X20, X19, [X31 + 0x20]
	0x039FEF8C LDP X22, X21, [X31 + 0x10]
	0x039FEF90 LDR X30, [X31], #0x30
	0x039FEF94 RET
	0x039FEF98 BL 0x1C16F20
	0x039FEF9C STP X30, X21, [X31 - 0x20]!
	0x039FEFA0 STP X20, X19, [X31 + 0x10]
	0x039FEFA4 ADRP X20, 0x9E3000
	0x039FEFA8 ADRP X21, 0x6F5000
	0x039FEFAC LDRB W8, [X20 + 0xF28]
	0x039FEFB0 LDR X21, [X21 + 0x598]
	0x039FEFB4 MOV X19, X0
	0x039FEFB8 TBNZ X8, 0x0, 0x39FEFD0
	0x039FEFBC ADRP X0, 0x6F5000
	0x039FEFC0 LDR X0, [X0 + 0x598]
	0x039FEFC4 BL 0x1C16CF4
	0x039FEFC8 MOVZ W8, 0x1
	0x039FEFCC STRB W8, [X20 + 0xF28]
	0x039FEFD0 LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x9E4000
	009 Move W8, [X20+3866]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x756000
	016 Move X0, [X0+3704]
	017 Call 0x1C17CF4
	018 Move X0, 0x6F6000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3866], W8
	023 Move X0, X19
	024 Call DebugUIHandlerToggle.UpdateValueLabel, X0
	025 Move X20, [X19+120]
	026 Compare X20, 0
	027 JumpIfEqual {87}
	028 Move X8, 0x756000
	029 Move X8, [X8+3704]
	030 Move X9, [X20]
	031 Move X8, [X8]
	032 Move W11, [X9+304]
	033 Move W10, [X8+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, [X9+200]
	036 Add X9, X9, X10
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, X20
	040 Move X1, X31
	041 Call HistoryBoolField.get_historyDepth, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X24, 0x6F6000
	044 Move X24, [X24+1432]
	045 Move X21, X31
	046 Move W23, W0
	047 Move X8, [X19+128]
	048 Compare X8, 0
	049 JumpIfEqual {116}
	050 Move W9, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X24]
	054 Add X8, X8, X21
	055 Move X22, [X8+32]
	056 Move W9, [X0+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X22
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Inequality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {85}
	068 Move X8, [X19+128]
	069 Compare X8, 0
	070 JumpIfEqual {116}
	071 Move W9, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X8, X21
	074 Move X22, [X8+32]
	075 Move X0, X20
	076 Move W1, W21
	077 Move X2, X31
	078 Call HistoryBoolField.GetHistoryValue, X0, X1
	079 Compare X22, 0
	080 JumpIfEqual {116}
	081 And W1, W0, 1
	082 Move X0, X22
	083 Move X2, X31
	084 Call Toggle.set_isOn, X0, X1
	085 Add X21, X21, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X19
	088 Move X1, X31
	089 Call Behaviour.get_isActiveAndEnabled, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {108}
	094 Move X0, X19
	095 Call DebugUIHandlerToggleHistory.RefreshAfterSanitization, X0
	096 Move X1, X0
	097 Move X0, X19
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X2, X31
	105 Move X30, [X31+64]
	106 Call MonoBehaviour.StartCoroutine, X0, X1
	107 Return 
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move X30, [X31+64]
	115 Return 
	116 Call 0x1C17F20
	117 Call 0x1C17F28

Method: System.Collections.IEnumerator RefreshAfterSanitization()

Disassembly:
	0x039FEFD4 LDR X20, [X19 + 0x60]
	0x039FEFD8 LDR W8, [X0 + 0xE0]
	0x039FEFDC CBNZ W8, 0x39FEFE4
	0x039FEFE0 BL 0x1C16DFC
	0x039FEFE4 MOV X0, X20
	0x039FEFE8 MOV X1, X31
	0x039FEFEC MOV X2, X31
	0x039FEFF0 BL 0x3C3883C
	0x039FEFF4 TBNZ X0, 0x0, 0x39FF030
	0x039FEFF8 LDR X0, [X19 + 0x60]
	0x039FEFFC CBZ X0, 0x39FF050
	0x039FF000 BL 0x39F6800
	0x039FF004 LDR X8, [X21]
	0x039FF008 MOV X20, X0
	0x039FF00C LDR W9, [X8 + 0xE0]
	0x039FF010 CBNZ W9, 0x39FF01C
	0x039FF014 MOV X0, X8
	0x039FF018 BL 0x1C16DFC
	0x039FF01C MOV X0, X20
	0x039FF020 MOV X1, X31
	0x039FF024 MOV X2, X31
	0x039FF028 BL 0x3C3883C
	0x039FF02C TBZ X0, 0x0, 0x39FF040
	0x039FF030 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E4000
	006 Move X21, 0x756000
	007 Move W8, [X20+3867]
	008 Move X21, [X21+3728]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x756000
	015 Move X0, [X0+3728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3867], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x039FF05C LDR V0, [X8 + 0xEB]
	0x039FF060 LDR V1, [X9 + 0x77]
	0x039FF064 MOV X1, X31
	0x039FF068 STP V0, V1, [X0 + 0x20]
	0x039FF06C B 0x3C36C30
	0x039FF070 STP X30, X23, [X31 - 0x30]!
	0x039FF074 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X8, -49356800
	002 Move X9, -49360896
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

