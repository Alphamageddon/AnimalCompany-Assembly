Type: UnityEngine.Rendering.UI.DebugUIHandlerColor

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x039F9CA4 ADD X9, X22, W20, 0x2, SXTW
	0x039F9CA8 LDR W1, [X9 + 0x20]
	0x039F9CAC LDR X9, [X8 + 0x238]
	0x039F9CB0 LDR X2, [X8 + 0x240]
	0x039F9CB4 BLR X9
	0x039F9CB8 LDR X0, [X19 + 0x80]
	0x039F9CBC CBZ X0, 0x39F9CEC
	0x039F9CC0 MOV W1, W20
	0x039F9CC4 MOV X2, X31
	0x039F9CC8 BL 0x39AED78
	0x039F9CCC LDR X8, [X19]
	0x039F9CD0 MOV X0, X19
	0x039F9CD4 LDP X20, X19, [X31 + 0x20]
	0x039F9CD8 LDP X22, X21, [X31 + 0x10]
	0x039F9CDC LDR X2, [X8 + 0x208]
	0x039F9CE0 LDR X1, [X8 + 0x210]
	0x039F9CE4 LDR X30, [X31], #0x30
	0x039F9CE8 BR X2
	0x039F9CEC BL 0x1C16F20
	0x039F9CF0 BL 0x1C16F28
	0x039F9CF4 STR X30, [X31 - 0x30]!
	0x039F9CF8 STP X22, X21, [X31 + 0x10]
	0x039F9CFC STP X20, X19, [X31 + 0x20]
	0x039F9D00 ADRP X20, 0x9E8000
	0x039F9D04 LDRB W8, [X20 + 0xEE4]
	0x039F9D08 MOV W21, W1
	0x039F9D0C MOV X19, X0
	0x039F9D10 TBNZ X8, 0x0, 0x39F9D28
	0x039F9D14 ADRP X0, 0x758000
	0x039F9D18 LDR X0, [X0 + 0xC80]
	0x039F9D1C BL 0x1C16CF4
	0x039F9D20 MOVZ W8, 0x1
	0x039F9D24 STRB W8, [X20 + 0xEE4]
	0x039F9D28 LDR X0, [X19 + 0x80]
	0x039F9D2C CBZ X0, 0x39F9E94
	0x039F9D30 LDR X22, [X0 + 0x68]
	0x039F9D34 CBZ X22, 0x39F9E94
	0x039F9D38 LDR X8, [X22 + 0x18]
	0x039F9D3C CBZ X8, 0x39F9DB4
	0x039F9D40 MOV X1, X31
	0x039F9D44 BL 0x39AED54
	0x039F9D48 CBZ W0, 0x39F9DC4
	0x039F9D4C MOV W20, W0
	0x039F9D50 TBZ X21, 0x0, 0x39F9E08
	0x039F9D54 LDR X0, [X19 + 0x80]
	0x039F9D58 CBZ X0, 0x39F9E94
	0x039F9D5C LDR X8, [X0 + 0x70]
	0x039F9D60 CBNZ X8, 0x39F9D7C
	0x039F9D64 MOV X1, X31
	0x039F9D68 BL 0x39AEDFC
	0x039F9D6C LDR X8, [X19 + 0x80]
	0x039F9D70 CBZ X8, 0x39F9E94
	0x039F9D74 LDR X8, [X8 + 0x70]
	0x039F9D78 CBZ X8, 0x39F9E94
	0x039F9D7C LDR W9, [X8 + 0x18]
	0x039F9D80 SUB W10, W9, 0x1
	0x039F9D84 AND W11, W10, W10, 0x1F
	0x039F9D88 MOV W10, W9
	0x039F9D8C SUB W10, W10, 0x1
	0x039F9D90 CMP W10, 0x1
	0x039F9D94 B.LT 0x39F9E1C
	0x039F9D98 CMP W10, W9
	0x039F9D9C B.CS 0x39F9E90
	0x039F9DA0 ADD X12, X8, W10, 0x2, UXTW
	0x039F9DA4 LDR W12, [X12 + 0x20]
	0x039F9DA8 CMP W20, W12
	0x039F9DAC B.LE 0x39F9D8C
	0x039F9DB0 B 0x39F9E20
	0x039F9DB4 LDP X20, X19, [X31 + 0x20]
	0x039F9DB8 LDP X22, X21, [X31 + 0x10]
	0x039F9DBC LDR X30, [X31], #0x30
	0x039F9DC0 RET
	0x039F9DC4 TBZ X21, 0x0, 0x39F9E10
	0x039F9DC8 LDR X0, [X19 + 0x80]
	0x039F9DCC CBZ X0, 0x39F9E94
	0x039F9DD0 LDR X8, [X0 + 0x70]
	0x039F9DD4 CBNZ X8, 0x39F9DF0
	0x039F9DD8 MOV X1, X31
	0x039F9DDC BL 0x39AEDFC
	0x039F9DE0 LDR X8, [X19 + 0x80]
	0x039F9DE4 CBZ X8, 0x39F9E94
	0x039F9DE8 LDR X8, [X8 + 0x70]
	0x039F9DEC CBZ X8, 0x39F9E94
	0x039F9DF0 LDR X9, [X8 + 0x18]
	0x039F9DF4 CBZ W9, 0x39F9E90
	0x039F9DF8 MOV X10, INVALID
	0x039F9DFC ADD X9, X10, X9, 0x20, LSL
	0x039F9E00 ADD X8, X8, X9, 0x1E, ASR
	0x039F9E04 B 0x39F9E2C
	0x039F9E08 SUB W20, W20, 0x1
	0x039F9E0C B 0x39F9E30
	0x039F9E10 LDR W8, [X22 + 0x18]
	0x039F9E14 SUB W20, W8, 0x1
	0x039F9E18 B 0x39F9E30
	0x039F9E1C MOV W10, W11
	0x039F9E20 CMP W10, W9
	0x039F9E24 B.CS 0x39F9E90
	0x039F9E28 ADD X8, X8, W10, 0x2, SXTW
	0x039F9E2C LDR W20, [X8 + 0x20]
	0x039F9E30 LDR W8, [X22 + 0x18]
	0x039F9E34 CMP W20, W8
	0x039F9E38 B.CS 0x39F9E90
	0x039F9E3C LDR X0, [X19 + 0x80]
	0x039F9E40 CBZ X0, 0x39F9E94
	0x039F9E44 LDR X8, [X0]
	0x039F9E48 ADD X9, X22, W20, 0x2, SXTW
	0x039F9E4C LDR W1, [X9 + 0x20]
	0x039F9E50 LDR X9, [X8 + 0x238]
	0x039F9E54 LDR X2, [X8 + 0x240]
	0x039F9E58 BLR X9
	0x039F9E5C LDR X0, [X19 + 0x80]
	0x039F9E60 CBZ X0, 0x39F9E94
	0x039F9E64 MOV W1, W20
	0x039F9E68 MOV X2, X31
	0x039F9E6C BL 0x39AED78
	0x039F9E70 LDR X8, [X19]
	0x039F9E74 MOV X0, X19
	0x039F9E78 LDP X20, X19, [X31 + 0x20]
	0x039F9E7C LDP X22, X21, [X31 + 0x10]
	0x039F9E80 LDR X2, [X8 + 0x208]
	0x039F9E84 LDR X1, [X8 + 0x210]
	0x039F9E88 LDR X30, [X31], #0x30
	0x039F9E8C BR X2
	0x039F9E90 BL 0x1C16F28
	0x039F9E94 BL 0x1C16F20
	0x039F9E98 STR X30, [X31 - 0x20]!
	0x039F9E9C STP X20, X19, [X31 + 0x10]
	0x039F9EA0 ADRP X20, 0x9E8000
	0x039F9EA4 LDRB W8, [X20 + 0xEE5]
	0x039F9EA8 MOV X19, X0
	0x039F9EAC TBNZ X8, 0x0, 0x39F9EC4
	0x039F9EB0 ADRP X0, 0x75A000
	0x039F9EB4 LDR X0, [X0 + 0xC68]
	0x039F9EB8 BL 0x1C16CF4
	0x039F9EBC MOVZ W8, 0x1
	0x039F9EC0 STRB W8, [X20 + 0xEE5]
	0x039F9EC4 LDR X0, [X19 + 0x80]
	0x039F9EC8 CBZ X0, 0x39F9F28
	0x039F9ECC MOV X1, X31
	0x039F9ED0 BL 0x39AED54
	0x039F9ED4 LDR X8, [X19 + 0x80]
	0x039F9ED8 CBZ X8, 0x39F9F28
	0x039F9EDC LDR X8, [X8 + 0x60]
	0x039F9EE0 CBZ X8, 0x39F9F28
	0x039F9EE4 LDR W10, [X8 + 0x18]
	0x039F9EE8 BIC W9, W0, W0, 0x1F
	0x039F9EEC CMP W9, W10
	0x039F9EF0 B.CS 0x39F9F2C
	0x039F9EF4 ADD X8, X8, W9, 0x3, UXTW
	0x039F9EF8 LDR X0, [X8 + 0x20]
	0x039F9EFC CBZ X0, 0x39F9F28
	0x039F9F00 ADRP X20, 0x75A000
	0x039F9F04 LDR X20, [X20 + 0xC68]
	0x039F9F08 MOV X1, X31
	0x039F9F0C BL 0x3C69940
	0x039F9F10 LDR X2, [X20]
	0x039F9F14 MOV X1, X0
	0x039F9F18 MOV X0, X19
	0x039F9F1C LDP X20, X19, [X31 + 0x10]
	0x039F9F20 LDR X30, [X31], #0x20
	0x039F9F24 B 0x29B0BEC
	0x039F9F28 BL 0x1C16F20
	0x039F9F2C BL 0x1C16F28
	0x039F9F30 STP X30, X21, [X31 - 0x20]!
	0x039F9F34 STP X20, X19, [X31 + 0x10]
	0x039F9F38 ADRP X20, 0x9E8000
	0x039F9F3C ADRP X21, 0x75A000
	0x039F9F40 LDRB W8, [X20 + 0xEE6]
	0x039F9F44 LDR X21, [X21 + 0xC70]
	0x039F9F48 MOV X19, X0
	0x039F9F4C TBNZ X8, 0x0, 0x39F9F64
	0x039F9F50 ADRP X0, 0x75A000
	0x039F9F54 LDR X0, [X0 + 0xC70]
	0x039F9F58 BL 0x1C16CF4
	0x039F9F5C MOVZ W8, 0x1
	0x039F9F60 STRB W8, [X20 + 0xEE6]
	0x039F9F64 LDR X1, [X21]
	0x039F9F68 MOV X0, X19
	0x039F9F6C LDP X20, X19, [X31 + 0x10]
	0x039F9F70 LDP X30, X21, [X31], #0x20
	0x039F9F74 B 0x29B0C80
	0x039F9F78 STR D12, [X31 - 0x80]!
	0x039F9F7C STP D11, D10, [X31 + 0x10]
	0x039F9F80 STP D9, D8, [X31 + 0x20]
	0x039F9F84 STP X30, X27, [X31 + 0x30]
	0x039F9F88 STP X26, X25, [X31 + 0x40]
	0x039F9F8C STP X24, X23, [X31 + 0x50]
	0x039F9F90 STP X22, X21, [X31 + 0x60]
	0x039F9F94 STP X20, X19, [X31 + 0x70]
	0x039F9F98 ADRP X21, 0x9E8000
	0x039F9F9C LDRB W8, [X21 + 0xEE7]
	0x039F9FA0 MOV X19, X1
	0x039F9FA4 MOV X20, X0
	0x039F9FA8 TBNZ X8, 0x0, 0x39F9FFC
	0x039F9FAC ADRP X0, 0x726000
	0x039F9FB0 LDR X0, [X0 + 0x9D8]
	0x039F9FB4 BL 0x1C16CF4
	0x039F9FB8 ADRP X0, 0x75A000
	0x039F9FBC LDR X0, [X0 + 0xC78]
	0x039F9FC0 BL 0x1C16CF4
	0x039F9FC4 ADRP X0, 0x75A000
	0x039F9FC8 LDR X0, [X0 + 0xC80]
	0x039F9FCC BL 0x1C16CF4
	0x039F9FD0 ADRP X0, 0x75A000
	0x039F9FD4 LDR X0, [X0 + 0xC88]
	0x039F9FD8 BL 0x1C16CF4
	0x039F9FDC ADRP X0, 0x6FA000
	0x039F9FE0 LDR X0, [X0 + 0x598]
	0x039F9FE4 BL 0x1C16CF4
	0x039F9FE8 ADRP X0, 0x75A000
	0x039F9FEC LDR X0, [X0 + 0xC90]
	0x039F9FF0 BL 0x1C16CF4
	0x039F9FF4 MOVZ W8, 0x1
	0x039F9FF8 STRB W8, [X21 + 0xEE7]
	0x039F9FFC ADRP X22, 0x75A000
	0x039FA000 LDR X22, [X22 + 0xC90]
	0x039FA004 CBZ X19, 0x39FA03C
	0x039FA008 ADRP X8, 0x759000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9E9000
	008 Move X22, 0x75B000
	009 Move X21, 0x75B000
	010 Move W8, [X23+3796]
	011 Move X22, [X22+3040]
	012 Move X21, [X21+2536]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x6FD000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0x75B000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move X0, 0x75B000
	026 Move X0, [X0+3048]
	027 Call 0x1C17CF4
	028 Move X0, 0x75B000
	029 Move X0, [X0+3056]
	030 Call 0x1C17CF4
	031 Move X0, 0x75B000
	032 Move X0, [X0+3064]
	033 Call 0x1C17CF4
	034 Move X0, 0x75B000
	035 Move X0, [X0+3072]
	036 Call 0x1C17CF4
	037 Move X0, 0x75B000
	038 Move X0, [X0+3080]
	039 Call 0x1C17CF4
	040 Move X0, 0x75B000
	041 Move X0, [X0+3088]
	042 Call 0x1C17CF4
	043 Move X0, 0x75B000
	044 Move X0, [X0+3096]
	045 Call 0x1C17CF4
	046 Move X0, 0x75B000
	047 Move X0, [X0+3104]
	048 Call 0x1C17CF4
	049 Move X0, 0x75B000
	050 Move X0, [X0+3040]
	051 Call 0x1C17CF4
	052 Move X0, 0x75A000
	053 Move X0, [X0+1680]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+3796], W8
	057 Move [X19+88], X20
	058 Move X1, [X22]
	059 Move X0, X19
	060 Call 0x21A9CFC, X0
	061 Move [X19+152], X0
	062 Move X1, [X21]
	063 Move X0, X19
	064 Call 0x21A4894, X0
	065 Move X8, [X19+152]
	066 Move [X19+160], X0
	067 Compare X8, 0
	068 JumpIfEqual {246}
	069 Move X0, [X19+96]
	070 Compare X0, 0
	071 JumpIfEqual {246}
	072 Move X9, [X0]
	073 Move X1, [X8+40]
	074 Move X21, 0x75A000
	075 Move X20, 0x75B000
	076 Move X8, [X9+1512]
	077 Move X2, [X9+1520]
	078 Move X21, [X21+1680]
	079 Move X20, [X20+3048]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X0, [X21]
	082 Move X23, [X19+120]
	083 Call 0x1C17F10
	084 Move X2, [X20]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X20, X0
	088 Call Func`1<Single>..ctor, X0, X1, X2
	089 Compare X23, 0
	090 JumpIfEqual {246}
	091 Move X22, 0x6FD000
	092 Move X22, [X22+1456]
	093 Move [X23+112], X20
	094 Move X20, 0x75B000
	095 Move X23, [X19+120]
	096 Move X0, [X22]
	097 Move X20, [X20+3056]
	098 Call 0x1C17F10
	099 Move X2, [X20]
	100 Move X1, X19
	101 Move X3, X31
	102 Move X20, X0
	103 Call Action`1<Single>..ctor, X0, X1, X2
	104 Compare X23, 0
	105 JumpIfEqual {246}
	106 Move [X23+120], X20
	107 Move X1, [X19+120]
	108 Compare X1, 0
	109 JumpIfEqual {246}
	110 Move X8, [X19+128]
	111 Move X20, 0x75B000
	112 Move X20, [X20+3064]
	113 Move X0, X19
	114 Move [X1+80], X8
	115 Call DebugUIHandlerColor.SetupSettings, X0, X1
	116 Move X0, [X21]
	117 Move X23, [X19+128]
	118 Call 0x1C17F10
	119 Move X2, [X20]
	120 Move X1, X19
	121 Move X3, X31
	122 Move X20, X0
	123 Call Func`1<Single>..ctor, X0, X1, X2
	124 Compare X23, 0
	125 JumpIfEqual {246}
	126 Move [X23+112], X20
	127 Move X0, [X22]
	128 Move X20, 0x75B000
	129 Move X23, [X19+128]
	130 Move X20, [X20+3072]
	131 Call 0x1C17F10
	132 Move X2, [X20]
	133 Move X1, X19
	134 Move X3, X31
	135 Move X20, X0
	136 Call Action`1<Single>..ctor, X0, X1, X2
	137 Compare X23, 0
	138 JumpIfEqual {246}
	139 Move [X23+120], X20
	140 Move X1, [X19+128]
	141 Compare X1, 0
	142 JumpIfEqual {246}
	143 Move X8, [X19+120]
	144 Move X20, 0x75B000
	145 Move X0, X19
	146 Move [X1+72], X8
	147 Move X8, [X19+136]
	148 Move X20, [X20+3080]
	149 Move [X1+80], X8
	150 Call DebugUIHandlerColor.SetupSettings, X0, X1
	151 Move X0, [X21]
	152 Move X23, [X19+136]
	153 Call 0x1C17F10
	154 Move X2, [X20]
	155 Move X1, X19
	156 Move X3, X31
	157 Move X20, X0
	158 Call Func`1<Single>..ctor, X0, X1, X2
	159 Compare X23, 0
	160 JumpIfEqual {246}
	161 Move [X23+112], X20
	162 Move X0, [X22]
	163 Move X20, 0x75B000
	164 Move X23, [X19+136]
	165 Move X20, [X20+3088]
	166 Call 0x1C17F10
	167 Move X2, [X20]
	168 Move X1, X19
	169 Move X3, X31
	170 Move X20, X0
	171 Call Action`1<Single>..ctor, X0, X1, X2
	172 Compare X23, 0
	173 JumpIfEqual {246}
	174 Move [X23+120], X20
	175 Move X1, [X19+136]
	176 Compare X1, 0
	177 JumpIfEqual {246}
	178 Move X8, [X19+128]
	179 Move [X1+72], X8
	180 Move X8, [X19+152]
	181 Compare X8, 0
	182 JumpIfEqual {246}
	183 Move W8, [X8+97]
	184 Compare W8, 0
	185 JumpIfEqual {187}
	186 Move X8, [X19+144]
	187 Move X8, X31
	188 Move X0, X19
	189 Move [X1+80], X8
	190 Call DebugUIHandlerColor.SetupSettings, X0, X1
	191 Move X0, [X19+144]
	192 Compare X0, 0
	193 JumpIfEqual {246}
	194 Move X1, X31
	195 Call Component.get_gameObject, X0
	196 Move X8, [X19+152]
	197 Compare X8, 0
	198 JumpIfEqual {246}
	199 Compare X0, 0
	200 JumpIfEqual {246}
	201 Move W1, [X8+97]
	202 Move X20, 0x75B000
	203 Move X20, [X20+3096]
	204 Move X2, X31
	205 Call GameObject.SetActive, X0, X1
	206 Move X0, [X21]
	207 Move X23, [X19+144]
	208 Call 0x1C17F10
	209 Move X2, [X20]
	210 Move X1, X19
	211 Move X3, X31
	212 Move X20, X0
	213 Call Func`1<Single>..ctor, X0, X1, X2
	214 Compare X23, 0
	215 JumpIfEqual {246}
	216 Move [X23+112], X20
	217 Move X0, [X22]
	218 Move X20, 0x75B000
	219 Move X21, [X19+144]
	220 Move X20, [X20+3104]
	221 Call 0x1C17F10
	222 Move X2, [X20]
	223 Move X1, X19
	224 Move X3, X31
	225 Move X20, X0
	226 Call Action`1<Single>..ctor, X0, X1, X2
	227 Compare X21, 0
	228 JumpIfEqual {246}
	229 Move [X21+120], X20
	230 Move X1, [X19+144]
	231 Compare X1, 0
	232 JumpIfEqual {246}
	233 Move X8, [X19+136]
	234 Move X0, X19
	235 Move [X1+72], X8
	236 Call DebugUIHandlerColor.SetupSettings, X0, X1
	237 Move X0, X19
	238 Move X20, [X31+32]
	239 Move X19, [X31+40]
	240 Move X22, [X31+16]
	241 Move X21, [X31+24]
	242 Move X30, [X31+48]
	243 Move X23, [X31+56]
	244 Call DebugUIHandlerColor.UpdateColor, X0
	245 Return 
	246 Call 0x1C17F20

Method: System.Void SetValue(System.Single x, System.Boolean r = False, System.Boolean g = False, System.Boolean b = False, System.Boolean a = False)

Disassembly:
	0x039FA1C0 LDR V12, [X31], #0x80
	0x039FA1C4 B 0x29B0940
	0x039FA1C8 MOV X0, X19
	0x039FA1CC MOV X1, X31
	0x039FA1D0 BL 0x39AF264
	0x039FA1D4 MOV W21, W0
	0x039FA1D8 B 0x39FA040
	0x039FA1DC BL 0x1C16F20
	0x039FA1E0 BL 0x1C16F44
	0x039FA1E4 MOV X1, X31
	0x039FA1E8 BL 0x1C16DEC
	0x039FA1EC BL 0x1C16F28
	0x039FA1F0 STP X30, X25, [X31 - 0x40]!
	0x039FA1F4 STP X24, X23, [X31 + 0x10]
	0x039FA1F8 STP X22, X21, [X31 + 0x20]
	0x039FA1FC STP X20, X19, [X31 + 0x30]
	0x039FA200 ADRP X20, 0x9E7000
	0x039FA204 LDRB W8, [X20 + 0xEE8]
	0x039FA208 MOV X19, X0
	0x039FA20C TBNZ X8, 0x0, 0x39FA230
	0x039FA210 ADRP X0, 0x759000
	0x039FA214 LDR X0, [X0 + 0xC80]
	0x039FA218 BL 0x1C16CF4
	0x039FA21C ADRP X0, 0x6F9000
	0x039FA220 LDR X0, [X0 + 0x598]
	0x039FA224 BL 0x1C16CF4
	0x039FA228 MOVZ W8, 0x1
	0x039FA22C STRB W8, [X20 + 0xEE8]
	0x039FA230 LDR X0, [X19 + 0x80]
	0x039FA234 CBZ X0, 0x39FA404
	0x039FA238 MOV X1, X31
	0x039FA23C BL 0x39AED54
	0x039FA240 LDR X8, [X19 + 0x80]
	0x039FA244 CBZ X8, 0x39FA404
	0x039FA248 LDR X8, [X8 + 0x60]
	0x039FA24C CBZ X8, 0x39FA404
	0x039FA250 LDR W10, [X8 + 0x18]
	0x039FA254 BIC W9, W0, W0, 0x1F
	0x039FA258 CMP W9, W10
	0x039FA25C B.CS 0x39FA408
	0x039FA260 ADD X8, X8, W9, 0x3, UXTW
	0x039FA264 LDR X0, [X8 + 0x20]
	0x039FA268 CBZ X0, 0x39FA404
	0x039FA26C LDR X20, [X19 + 0x78]
	0x039FA270 MOV X1, X31
	0x039FA274 BL 0x3C69940
	0x039FA278 CBZ X20, 0x39FA404

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x9E8000
	010 Move W8, [X24+3797]
	011 Move W23, W4
	012 Move W22, W3
	013 Move W21, W2
	014 Move W20, W1
	015 Move V8, V0
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x75A000
	022 Move X0, [X0+3136]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+3797], W8
	026 Move X0, [X19+152]
	027 Compare X0, 0
	028 JumpIfEqual {59}
	029 Move X8, 0x75A000
	030 Move X8, [X8+3136]
	031 Move X1, [X8]
	032 Call Field`1<Color>.GetValue, X0
	033 Move X0, [X19+152]
	034 Compare X0, 0
	035 JumpIfEqual {59}
	036 Move X8, [X0]
	037 And W31, W23, 1
	038 NotImplemented "Instruction FCSEL not yet implemented."
	039 And W31, W22, 1
	040 Move X9, [X8+568]
	041 Move X1, [X8+576]
	042 NotImplemented "Instruction FCSEL not yet implemented."
	043 And W31, W21, 1
	044 NotImplemented "Instruction FCSEL not yet implemented."
	045 And W31, W20, 1
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, X19
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+8]
	056 Move V8, [X31+64]
	057 Call DebugUIHandlerColor.UpdateColor, X0
	058 Return 
	059 Call 0x1C17F20

Method: System.Void SetupSettings(UnityEngine.Rendering.UI.DebugUIHandlerIndirectFloatField field)

Disassembly:
	0x039FA00C LDR X8, [X8 + 0xC80]
	0x039FA010 LDR X9, [X19]
	0x039FA014 LDR X8, [X8]
	0x039FA018 LDRB W11, [X9 + 0x130]
	0x039FA01C LDRB W10, [X8 + 0x130]
	0x039FA020 CMP W11, W10
	0x039FA024 B.CC 0x39FA03C
	0x039FA028 LDR X9, [X9 + 0xC8]
	0x039FA02C ADD X9, X9, X10, 0x3, LSL
	0x039FA030 LDUR X9, [X9 - 0x8]
	0x039FA034 CMP X9, X8
	0x039FA038 B.EQ 0x39FA1C8
	0x039FA03C MOV W21, W31
	0x039FA040 LDR X0, [X22]
	0x039FA044 MOV W1, W21
	0x039FA048 BL 0x1C16D6C
	0x039FA04C CMP W21, 0x1
	0x039FA050 STR X0, [X20 + 0x88]
	0x039FA054 B.LT 0x39FA190
	0x039FA058 ADRP X23, 0x6F9000
	0x039FA05C ADRP X24, 0x759000
	0x039FA060 ADRP X26, 0x725000
	0x039FA064 ADRP X9, 0xFFFFFFFFFD0F0000
	0x039FA068 LDR X23, [X23 + 0x598]
	0x039FA06C LDR X24, [X24 + 0xC88]
	0x039FA070 LDR X26, [X26 + 0x9D8]
	0x039FA074 LDR V8, [X9 + 0x438]
	0x039FA078 MOVZ W8, 0x43660000
	0x039FA07C SCVTF S0, W21
	0x039FA080 FMOV S1, W8
	0x039FA084 MOV X25, X31
	0x039FA088 FDIV S12, S1, S0
	0x039FA08C MOV W27, W21
	0x039FA090 LDR X21, [X20 + 0x78]
	0x039FA094 MOV X0, X20
	0x039FA098 MOV X1, X31
	0x039FA09C BL 0x3C32E90
	0x039FA0A0 LDR X8, [X23]
	0x039FA0A4 MOV X22, X0
	0x039FA0A8 LDR W9, [X8 + 0xE0]
	0x039FA0AC CBNZ W9, 0x39FA0B8
	0x039FA0B0 MOV X0, X8
	0x039FA0B4 BL 0x1C16DFC
	0x039FA0B8 LDR X2, [X24]
	0x039FA0BC MOV X0, X21
	0x039FA0C0 MOV X1, X22
	0x039FA0C4 BL 0x222D488
	0x039FA0C8 CBZ X0, 0x39FA1DC
	0x039FA0CC MOV X1, X31
	0x039FA0D0 MOV X21, X0
	0x039FA0D4 BL 0x3C32E90
	0x039FA0D8 CBZ X0, 0x39FA1DC
	0x039FA0DC MOV X1, X31
	0x039FA0E0 BL 0x3C3F58C
	0x039FA0E4 MOV X0, X21
	0x039FA0E8 MOV X1, X31
	0x039FA0EC MOV V11.16B, V0.16B
	0x039FA0F0 MOV V9.16B, V1.16B
	0x039FA0F4 MOV V10.16B, V2.16B
	0x039FA0F8 BL 0x3C32E90
	0x039FA0FC CBZ X0, 0x39FA1DC
	0x039FA100 ADD W8, W25, 0x1
	0x039FA104 SCVTF S0, W8
	0x039FA108 FMUL S0, S12, S0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9E8000
	009 Move W8, [X21+3798]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x75A000
	017 Move X0, [X0+3112]
	018 Call 0x1C17CF4
	019 Move X0, 0x75A000
	020 Move X0, [X0+3120]
	021 Call 0x1C17CF4
	022 Move X0, 0x75A000
	023 Move X0, [X0+3128]
	024 Call 0x1C17CF4
	025 Move X0, 0x759000
	026 Move X0, [X0+1680]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3798], W8
	030 Compare X19, 0
	031 JumpIfEqual {75}
	032 Move X22, 0x759000
	033 Move X22, [X22+1680]
	034 Move [X19+64], X20
	035 Move X21, 0x75A000
	036 Move X23, 0x75A000
	037 Move X0, [X22]
	038 Move X24, 0x75A000
	039 Move X21, [X21+3112]
	040 Move X23, [X23+3120]
	041 Move X24, [X24+3128]
	042 Call 0x1C17F10
	043 Move X2, [X21]
	044 Move X1, X20
	045 Move X3, X31
	046 Move X21, X0
	047 Call Func`1<Single>..ctor, X0, X1, X2
	048 Move [X19+128], X21
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X2, [X23]
	052 Move X1, X20
	053 Move X3, X31
	054 Move X21, X0
	055 Call Func`1<Single>..ctor, X0, X1, X2
	056 Move [X19+136], X21
	057 Move X0, [X22]
	058 Call 0x1C17F10
	059 Move X2, [X24]
	060 Move X1, X20
	061 Move X3, X31
	062 Move X21, X0
	063 Call Func`1<Single>..ctor, X0, X1, X2
	064 Move [X19+144], X21
	065 Move X0, X19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Call DebugUIHandlerIndirectFloatField.UpdateValueLabel, X0
	074 Return 
	075 Call 0x1C17F20

Method: System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)

Disassembly:
	0x039FA280 MOV X1, X0
	0x039FA284 MOV X0, X20
	0x039FA288 LDR X9, [X8 + 0x5E8]
	0x039FA28C LDR X2, [X8 + 0x5F0]
	0x039FA290 BLR X9
	0x039FA294 LDR X20, [X19 + 0x80]
	0x039FA298 CBZ X20, 0x39FA3B8
	0x039FA29C ADRP X8, 0x759000
	0x039FA2A0 LDR X8, [X8 + 0xC80]
	0x039FA2A4 LDR X9, [X20]
	0x039FA2A8 LDR X8, [X8]
	0x039FA2AC LDRB W11, [X9 + 0x130]
	0x039FA2B0 LDRB W10, [X8 + 0x130]
	0x039FA2B4 CMP W11, W10
	0x039FA2B8 B.CC 0x39FA3B8
	0x039FA2BC LDR X9, [X9 + 0xC8]
	0x039FA2C0 ADD X9, X9, X10, 0x3, LSL
	0x039FA2C4 LDUR X9, [X9 - 0x8]
	0x039FA2C8 CMP X9, X8
	0x039FA2CC B.NE 0x39FA3B8
	0x039FA2D0 MOV X0, X20
	0x039FA2D4 MOV X1, X31
	0x039FA2D8 BL 0x39AF264
	0x039FA2DC CMP W0, 0x1
	0x039FA2E0 B.LT 0x39FA3B8
	0x039FA2E4 ADRP X24, 0x6F9000
	0x039FA2E8 LDR X24, [X24 + 0x598]
	0x039FA2EC MOV X21, X31
	0x039FA2F0 MOV W23, W0
	0x039FA2F4 LDR X8, [X19 + 0x88]
	0x039FA2F8 CBZ X8, 0x39FA404
	0x039FA2FC LDR W9, [X8 + 0x18]
	0x039FA300 CMP X21, W9, SXTW
	0x039FA304 B.GE 0x39FA3AC
	0x039FA308 CMP X21, X9
	0x039FA30C B.CS 0x39FA408
	0x039FA310 LDR X0, [X24]
	0x039FA314 ADD X8, X8, X21, 0x3, LSL
	0x039FA318 LDR X22, [X8 + 0x20]
	0x039FA31C LDR W9, [X0 + 0xE0]
	0x039FA320 CBNZ W9, 0x39FA328
	0x039FA324 BL 0x1C16DFC
	0x039FA328 MOV X0, X22
	0x039FA32C MOV X1, X31
	0x039FA330 MOV X2, X31
	0x039FA334 BL 0x3C354F8
	0x039FA338 TBZ X0, 0x0, 0x39FA3AC
	0x039FA33C LDR X8, [X19 + 0x88]
	0x039FA340 CBZ X8, 0x39FA404
	0x039FA344 LDR W9, [X8 + 0x18]
	0x039FA348 CMP X21, X9
	0x039FA34C B.CS 0x39FA408
	0x039FA350 ADD X8, X8, X21, 0x3, LSL
	0x039FA354 LDR X22, [X8 + 0x20]
	0x039FA358 LDR X25, [X20 + 0x60]
	0x039FA35C MOV X0, X20
	0x039FA360 MOV W1, W21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9E8000
	007 Move W8, [X22+3799]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x757000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3799], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {39}
	024 Move X8, [X19+104]
	025 Compare X8, 0
	026 JumpIfEqual {78}
	027 Move W8, [X8+288]
	028 Compare W8, 0
	029 JumpIfEqual {39}
	030 Move X0, [X19+160]
	031 Compare X0, 0
	032 JumpIfEqual {78}
	033 Move X1, X20
	034 Call DebugUIHandlerContainer.IsDirectChild, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X0, [X19+96]
	040 Compare X0, 0
	041 JumpIfEqual {78}
	042 Move X8, [X0]
	043 Move S2, [X19+56]
	044 Move S3, [X19+60]
	045 Move S0, [X19+48]
	046 Move S1, [X19+52]
	047 Move X9, [X8+680]
	048 Move X1, [X8+688]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move W0, 1
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X0, [X19+160]
	058 Compare X0, 0
	059 JumpIfEqual {78}
	060 Call DebugUIHandlerContainer.GetLastItem, X0
	061 Move X8, 0x757000
	062 Move X8, [X8+1912]
	063 Move X19, X0
	064 Move X8, [X8]
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X31
	071 Call DebugManager.get_instance
	072 Compare X0, 0
	073 JumpIfEqual {78}
	074 Move X1, X19
	075 Move W2, W31
	076 Move X3, X31
	077 Call DebugManager.ChangeSelection, X0, X1, X2
	078 Call 0x1C17F20

Method: System.Void OnDeselection()

Disassembly:
	0x039FA364 MOV X2, X31
	0x039FA368 BL 0x39AF27C
	0x039FA36C CBZ X25, 0x39FA404
	0x039FA370 LDR W8, [X25 + 0x18]
	0x039FA374 CMP W0, W8
	0x039FA378 B.CS 0x39FA408
	0x039FA37C ADD X8, X25, W0, 0x3, SXTW
	0x039FA380 LDR X0, [X8 + 0x20]
	0x039FA384 CBZ X0, 0x39FA404
	0x039FA388 MOV X1, X31
	0x039FA38C BL 0x3C69940
	0x039FA390 CBZ X22, 0x39FA404

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+96]
	004 Compare X0, 0
	005 JumpIfEqual {15}
	006 Move X9, [X0]
	007 Move S2, [X8+40]
	008 Move S3, [X8+44]
	009 Move S0, [X8+32]
	010 Move S1, [X8+36]
	011 Move X2, [X9+680]
	012 Move X1, [X9+688]
	013 Move X30, [X31+16]
	014 CallNoReturn X2
	015 Call 0x1C17F20

Method: System.Void OnIncrement(System.Boolean fast)

Disassembly:
	0x039FA394 LDR X8, [X22]
	0x039FA398 MOV X1, X0
	0x039FA39C MOV X0, X22
	0x039FA3A0 LDR X9, [X8 + 0x5E8]
	0x039FA3A4 LDR X2, [X8 + 0x5F0]
	0x039FA3A8 BLR X9
	0x039FA3AC ADD X21, X21, 0x1
	0x039FA3B0 CMP X23, X21

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnDecrement(System.Boolean fast)

Disassembly:
	0x039FA3B4 B.NE 0x39FA2F4
	0x039FA3B8 MOV X0, X19
	0x039FA3BC MOV X1, X31
	0x039FA3C0 BL 0x3C32454
	0x039FA3C4 TBZ X0, 0x0, 0x39FA3F0
	0x039FA3C8 MOV X0, X19
	0x039FA3CC BL 0x39FA40C
	0x039FA3D0 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, W31
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call Toggle.set_isOn, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void OnAction()

Disassembly:
	0x039FA3D4 MOV X0, X19
	0x039FA3D8 LDP X20, X19, [X31 + 0x30]
	0x039FA3DC LDP X22, X21, [X31 + 0x20]
	0x039FA3E0 LDP X24, X23, [X31 + 0x10]
	0x039FA3E4 MOV X2, X31
	0x039FA3E8 LDP X30, X25, [X31], #0x40
	0x039FA3EC B 0x3C366FC
	0x039FA3F0 LDP X20, X19, [X31 + 0x30]
	0x039FA3F4 LDP X22, X21, [X31 + 0x20]
	0x039FA3F8 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {12}
	005 Move W8, [X0+288]
	006 Move X2, X31
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Call Toggle.set_isOn, X0, X1
	011 Return 
	012 Call 0x1C17F20

Method: System.Void UpdateColor()

Disassembly:
	0x039FA10C FADD S0, S0, S11
	0x039FA110 MOV V1.16B, V9.16B
	0x039FA114 MOV V2.16B, V10.16B
	0x039FA118 MOV X1, X31
	0x039FA11C BL 0x3C3F62C
	0x039FA120 LDR X1, [X26]
	0x039FA124 MOV X0, X21
	0x039FA128 BL 0x21A3894
	0x039FA12C CBZ X0, 0x39FA1DC
	0x039FA130 LDR X8, [X0]
	0x039FA134 FMOV S3, 1
	0x039FA138 MOV V0.16B, V8.16B
	0x039FA13C MOV V1.16B, V8.16B
	0x039FA140 LDR X9, [X8 + 0x2A8]
	0x039FA144 LDR X1, [X8 + 0x2B0]
	0x039FA148 MOV V2.16B, V8.16B
	0x039FA14C MOV X21, X0
	0x039FA150 BLR X9
	0x039FA154 LDR X22, [X20 + 0x88]
	0x039FA158 CBZ X22, 0x39FA1DC
	0x039FA15C LDR X8, [X22]
	0x039FA160 MOV X0, X21
	0x039FA164 LDR X1, [X8 + 0x40]
	0x039FA168 BL 0x1C16E00
	0x039FA16C CBZ X0, 0x39FA1E0
	0x039FA170 LDR W8, [X22 + 0x18]
	0x039FA174 CMP X25, X8
	0x039FA178 B.CS 0x39FA1EC
	0x039FA17C ADD X8, X22, X25, 0x3, LSL
	0x039FA180 ADD X25, X25, 0x1
	0x039FA184 CMP X27, X25
	0x039FA188 STR X21, [X8 + 0x20]
	0x039FA18C B.NE 0x39FA090
	0x039FA190 ADRP X8, 0x759000
	0x039FA194 LDR X8, [X8 + 0xC78]
	0x039FA198 MOV X0, X20
	0x039FA19C MOV X1, X19
	0x039FA1A0 LDP X20, X19, [X31 + 0x70]
	0x039FA1A4 LDR X2, [X8]
	0x039FA1A8 LDP X22, X21, [X31 + 0x60]
	0x039FA1AC LDP X24, X23, [X31 + 0x50]
	0x039FA1B0 LDP X26, X25, [X31 + 0x40]
	0x039FA1B4 LDP X30, X27, [X31 + 0x30]
	0x039FA1B8 LDP D9, D8, [X31 + 0x20]
	0x039FA1BC LDP D11, D10, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9E8000
	006 Move X20, 0x6FA000
	007 Move W8, [X21+3800]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x75A000
	015 Move X0, [X0+3136]
	016 Call 0x1C17CF4
	017 Move X0, 0x6FA000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3800], W8
	022 Move X0, [X20]
	023 Move X20, [X19+112]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {55}
	036 Move X0, [X19+152]
	037 Compare X0, 0
	038 JumpIfEqual {60}
	039 Move X8, 0x75A000
	040 Move X19, [X19+112]
	041 Move X8, [X8+3136]
	042 Move X1, [X8]
	043 Call Field`1<Color>.GetValue, X0
	044 Compare X19, 0
	045 JumpIfEqual {60}
	046 Move X8, [X19]
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, [X8+680]
	051 Move X1, [X8+688]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 CallNoReturn X2
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Call 0x1C17F20

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget Next()

Disassembly:
	0x039FA3FC LDP X30, X25, [X31], #0x40
	0x039FA400 RET
	0x039FA404 BL 0x1C16F20
	0x039FA408 BL 0x1C16F28
	0x039FA40C STP X30, X21, [X31 - 0x20]!
	0x039FA410 STP X20, X19, [X31 + 0x10]
	0x039FA414 ADRP X20, 0x9E7000
	0x039FA418 ADRP X21, 0x759000
	0x039FA41C LDRB W8, [X20 + 0xEE9]
	0x039FA420 LDR X21, [X21 + 0xC98]
	0x039FA424 MOV X19, X0
	0x039FA428 TBNZ X8, 0x0, 0x39FA440
	0x039FA42C ADRP X0, 0x759000
	0x039FA430 LDR X0, [X0 + 0xC98]
	0x039FA434 BL 0x1C16CF4
	0x039FA438 MOVZ W8, 0x1
	0x039FA43C STRB W8, [X20 + 0xEE9]
	0x039FA440 LDR X0, [X21]
	0x039FA444 BL 0x1C16F10
	0x039FA448 MOV X1, X31
	0x039FA44C MOV X20, X0
	0x039FA450 BL 0x33BDD8C
	0x039FA454 STR W31, [X20 + 0x10]
	0x039FA458 STR X19, [X20 + 0x20]
	0x039FA45C MOV X0, X20
	0x039FA460 LDP X20, X19, [X31 + 0x10]
	0x039FA464 LDP X30, X21, [X31], #0x20
	0x039FA468 RET
	0x039FA46C STR X30, [X31 - 0x20]!
	0x039FA470 STP X20, X19, [X31 + 0x10]
	0x039FA474 MOV W19, W1
	0x039FA478 MOV X1, X31
	0x039FA47C MOV X20, X0
	0x039FA480 BL 0x33BDD8C
	0x039FA484 STR W19, [X20 + 0x10]
	0x039FA488 LDP X20, X19, [X31 + 0x10]
	0x039FA48C LDR X30, [X31], #0x20
	0x039FA490 RET
	0x039FA494 B 0x39F9F30
	0x039FA498 RET
	0x039FA49C STR X30, [X31 - 0x20]!
	0x039FA4A0 STP X20, X19, [X31 + 0x10]
	0x039FA4A4 LDR W8, [X0 + 0x10]
	0x039FA4A8 CMP W8, 0x1
	0x039FA4AC B.EQ 0x39FA4C4
	0x039FA4B0 CBNZ W8, 0x39FA55C
	0x039FA4B4 MOVZ W8, 0x1
	0x039FA4B8 STR X31, [X0 + 0x18]
	0x039FA4BC STR W8, [X0 + 0x10]
	0x039FA4C0 B 0x39FA560

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9E8000
	006 Move W8, [X20+3801]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6FA000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3801], W8
	017 Move X8, [X19+104]
	018 Compare X8, 0
	019 JumpIfEqual {71}
	020 Move W8, [X8+288]
	021 Compare W8, 0
	022 JumpIfEqual {58}
	023 Move X21, 0x6FA000
	024 Move X21, [X21+1432]
	025 Move X20, [X19+160]
	026 Move X0, [X21]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {58}
	039 Move X0, [X19+160]
	040 Compare X0, 0
	041 JumpIfEqual {71}
	042 Call DebugUIHandlerContainer.GetFirstItem, X0
	043 Move X8, [X21]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {65}
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call DebugUIHandlerWidget.Next, X0
	064 Return X0
	065 Move X0, X20
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039FA4C4 LDR X20, [X0 + 0x20]
	0x039FA4C8 MOVN W8, 0x0
	0x039FA4CC STR W8, [X0 + 0x10]
	0x039FA4D0 CBZ X20, 0x39FA570
	0x039FA4D4 LDR X19, [X20 + 0x80]
	0x039FA4D8 CBZ X19, 0x39FA570
	0x039FA4DC LDR X8, [X19 + 0x80]

ISIL:
	001 Move X8, -49336320
	002 Move X9, -49340416
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

Method: System.Single <SetWidget>b__9_0()

Disassembly:
	0x039FA4E0 CBZ X8, 0x39FA570
	0x039FA4E4 LDR X9, [X8 + 0x18]
	0x039FA4E8 LDR X0, [X8 + 0x40]
	0x039FA4EC LDR X1, [X8 + 0x28]
	0x039FA4F0 BLR X9
	0x039FA4F4 MOV W1, W0
	0x039FA4F8 MOV X0, X19
	0x039FA4FC MOV X2, X31
	0x039FA500 BL 0x39AED78
	0x039FA504 LDR X0, [X20 + 0x80]
	0x039FA508 CBZ X0, 0x39FA570
	0x039FA50C LDR X19, [X20 + 0x78]
	0x039FA510 LDR X20, [X0 + 0x60]
	0x039FA514 MOV X1, X31
	0x039FA518 BL 0x39AED54
	0x039FA51C CBZ X20, 0x39FA570
	0x039FA520 LDR W8, [X20 + 0x18]
	0x039FA524 CMP W0, W8
	0x039FA528 B.CS 0x39FA574
	0x039FA52C ADD X8, X20, W0, 0x3, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E8000
	005 Move W8, [X20+3802]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x75A000
	012 Move X0, [X0+3136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3802], W8
	016 Move X0, [X19+152]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x75A000
	020 Move X8, [X8+3136]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Field`1<Color>.GetValue, X0
	026 Return V0
	027 Call 0x1C17F20

Method: System.Void <SetWidget>b__9_1(System.Single x)

Disassembly:
	0x039FA530 LDR X0, [X8 + 0x20]
	0x039FA534 CBZ X0, 0x39FA570
	0x039FA538 MOV X1, X31
	0x039FA53C BL 0x3C69940
	0x039FA540 CBZ X19, 0x39FA570

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Move W3, W31
	004 Move W4, W31
	005 Call DebugUIHandlerColor.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetWidget>b__9_2()

Disassembly:
	0x039FA544 LDR X8, [X19]
	0x039FA548 MOV X1, X0
	0x039FA54C MOV X0, X19
	0x039FA550 LDR X9, [X8 + 0x5E8]
	0x039FA554 LDR X2, [X8 + 0x5F0]
	0x039FA558 BLR X9
	0x039FA55C MOV W8, W31
	0x039FA560 LDP X20, X19, [X31 + 0x10]
	0x039FA564 MOV W0, W8
	0x039FA568 LDR X30, [X31], #0x20
	0x039FA56C RET
	0x039FA570 BL 0x1C16F20
	0x039FA574 BL 0x1C16F28
	0x039FA578 LDR X0, [X0 + 0x18]
	0x039FA57C RET
	0x039FA580 STP X30, X19, [X31 - 0x10]!
	0x039FA584 ADRP X0, 0x6F9000
	0x039FA588 LDR X0, [X0 + 0xB40]
	0x039FA58C BL 0x1C16D08
	0x039FA590 BL 0x1C16F10
	0x039FA594 MOV X1, X31
	0x039FA598 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E8000
	005 Move W8, [X20+3803]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x75A000
	012 Move X0, [X0+3136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3803], W8
	016 Move X0, [X19+152]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x75A000
	020 Move X8, [X8+3136]
	021 Move X1, [X8]
	022 Call Field`1<Color>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V1
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__9_3(System.Single x)

Disassembly:
	0x039FA59C BL 0x3380310
	0x039FA5A0 ADRP X0, 0x759000
	0x039FA5A4 LDR X0, [X0 + 0xCA0]
	0x039FA5A8 BL 0x1C16D08
	0x039FA5AC MOV X1, X0

ISIL:
	001 Move W2, 1
	002 Move W1, W31
	003 Move W3, W31
	004 Move W4, W31
	005 Call DebugUIHandlerColor.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetWidget>b__9_4()

Disassembly:
	0x039FA5B0 MOV X0, X19
	0x039FA5B4 BL 0x1C16DEC
	0x039FA5B8 LDR X0, [X0 + 0x18]
	0x039FA5BC RET
	0x039FA5C0 STR X30, [X31 - 0x30]!
	0x039FA5C4 STP X22, X21, [X31 + 0x10]
	0x039FA5C8 STP X20, X19, [X31 + 0x20]
	0x039FA5CC ADRP X22, 0x9E7000
	0x039FA5D0 ADRP X21, 0x759000
	0x039FA5D4 LDRB W8, [X22 + 0xEEA]
	0x039FA5D8 LDR X21, [X21 + 0xCA8]
	0x039FA5DC MOV X20, X1
	0x039FA5E0 MOV X19, X0
	0x039FA5E4 TBNZ X8, 0x0, 0x39FA5FC
	0x039FA5E8 ADRP X0, 0x759000
	0x039FA5EC LDR X0, [X0 + 0xCA8]
	0x039FA5F0 BL 0x1C16CF4
	0x039FA5F4 MOVZ W8, 0x1
	0x039FA5F8 STRB W8, [X22 + 0xEEA]
	0x039FA5FC STR X20, [X19 + 0x58]
	0x039FA600 LDR X1, [X21]
	0x039FA604 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E8000
	005 Move W8, [X20+3804]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x75A000
	012 Move X0, [X0+3136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3804], W8
	016 Move X0, [X19+152]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x75A000
	020 Move X8, [X8+3136]
	021 Move X1, [X8]
	022 Call Field`1<Color>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V2
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__9_5(System.Single x)

Disassembly:
	0x039FA608 BL 0x21A8CFC
	0x039FA60C STR X0, [X19 + 0x70]
	0x039FA610 CBZ X0, 0x39FA648
	0x039FA614 LDR X8, [X19 + 0x60]
	0x039FA618 CBZ X8, 0x39FA648

ISIL:
	001 Move W3, 1
	002 Move W1, W31
	003 Move W2, W31
	004 Move W4, W31
	005 Call DebugUIHandlerColor.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetWidget>b__9_6()

Disassembly:
	0x039FA61C LDR X9, [X8]
	0x039FA620 LDR X1, [X0 + 0x28]
	0x039FA624 MOV X0, X8
	0x039FA628 LDR X10, [X9 + 0x5E8]
	0x039FA62C LDR X2, [X9 + 0x5F0]
	0x039FA630 BLR X10
	0x039FA634 MOV X0, X19
	0x039FA638 LDP X20, X19, [X31 + 0x20]
	0x039FA63C LDP X22, X21, [X31 + 0x10]
	0x039FA640 LDR X30, [X31], #0x30
	0x039FA644 B 0x39FA64C
	0x039FA648 BL 0x1C16F20
	0x039FA64C STR X30, [X31 - 0x20]!
	0x039FA650 STP X20, X19, [X31 + 0x10]
	0x039FA654 ADRP X19, 0x9E7000
	0x039FA658 LDRB W8, [X19 + 0xEEC]
	0x039FA65C MOV X20, X0
	0x039FA660 TBNZ X8, 0x0, 0x39FA684
	0x039FA664 ADRP X0, 0x759000
	0x039FA668 LDR X0, [X0 + 0xCB0]
	0x039FA66C BL 0x1C16CF4
	0x039FA670 ADRP X0, 0x704000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9E8000
	005 Move W8, [X20+3805]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x75A000
	012 Move X0, [X0+3136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3805], W8
	016 Move X0, [X19+152]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x75A000
	020 Move X8, [X8+3136]
	021 Move X1, [X8]
	022 Call Field`1<Color>.GetValue, X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move V0, V3
	026 Move X30, [X31+32]
	027 Return V0
	028 Call 0x1C17F20

Method: System.Void <SetWidget>b__9_7(System.Single x)

Disassembly:
	0x039FA674 LDR X0, [X0 + 0x358]
	0x039FA678 BL 0x1C16CF4
	0x039FA67C MOVZ W8, 0x1
	0x039FA680 STRB W8, [X19 + 0xEEC]
	0x039FA684 LDR X0, [X20 + 0x70]

ISIL:
	001 Move W4, 1
	002 Move W1, W31
	003 Move W2, W31
	004 Move W3, W31
	005 Call DebugUIHandlerColor.SetValue, X0, V0, X1, X2, X3, X4
	006 Return 

Method: System.Single <SetupSettings>b__11_0()

Disassembly:
	0x039FA688 CBZ X0, 0x39FA70C
	0x039FA68C ADRP X8, 0x759000
	0x039FA690 LDR X8, [X8 + 0xCB0]
	0x039FA694 LDR X19, [X20 + 0x68]
	0x039FA698 LDR X1, [X8]
	0x039FA69C BL 0x2D1A2CC
	0x039FA6A0 STR S0, [X31 + 0xC]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+152]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+100]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Single <SetupSettings>b__11_1()

Disassembly:
	0x039FA6A4 LDR X8, [X20 + 0x70]
	0x039FA6A8 CBZ X8, 0x39FA70C
	0x039FA6AC ADRP X20, 0x704000
	0x039FA6B0 LDR X20, [X20 + 0x358]
	0x039FA6B4 ADD X0, X8, 0x78
	0x039FA6B8 MOV X1, X31
	0x039FA6BC BL 0x337B6E0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+152]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+104]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Single <SetupSettings>b__11_2()

Disassembly:
	0x039FA6C0 LDR X8, [X20]
	0x039FA6C4 MOV X1, X0
	0x039FA6C8 MOV X2, X31
	0x039FA6CC MOV X0, X8
	0x039FA6D0 BL 0x321B938
	0x039FA6D4 MOV X1, X0
	0x039FA6D8 ADD X0, X31, 0xC
	0x039FA6DC MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+152]
	003 Compare X8, 0
	004 JumpIfEqual {9}
	005 Move V0, [X8+108]
	006 NotImplemented "Instruction SCVTF not yet implemented."
	007 Move X30, [X31+16]
	008 Return V0
	009 Call 0x1C17F20

