Type: UnityEngine.Rendering.UI.DebugUIHandlerWidget

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget get_parentUIHandler()

Disassembly:
	0x03A018B0 LDR X30, [X31], #0x10
	0x03A018B4 RET

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_parentUIHandler(UnityEngine.Rendering.UI.DebugUIHandlerWidget value)

Disassembly:
	0x03A018B8 BL 0x1C16F20
	0x03A018BC LDR W8, [X0 + 0x30]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget get_previousUIHandler()

Disassembly:
	0x03A018C0 CMP W8, 0x2
	0x03A018C4 CSET W0, EQ

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_previousUIHandler(UnityEngine.Rendering.UI.DebugUIHandlerWidget value)

Disassembly:
	0x03A018C8 RET
	0x03A018CC STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget get_nextUIHandler()

Disassembly:
	0x03A018D0 CBZ X0, 0x3A018EC
	0x03A018D4 ANDS W31, W1, 0x1

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_nextUIHandler(UnityEngine.Rendering.UI.DebugUIHandlerWidget value)

Disassembly:
	0x03A018D8 MOVZ W8, 0x2
	0x03A018DC CSEL W8, W8, W31, NE

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03A018E0 STR W8, [X0 + 0x30]

ISIL:
	001 Return 

Method: System.Void SetWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x03A018E4 LDR X30, [X31], #0x10
	0x03A018E8 RET

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: UnityEngine.Rendering.DebugUI/Widget GetWidget()

Disassembly:
	0x03A018EC BL 0x1C16F20
	0x03A018F0 LDR W8, [X0 + 0x30]

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: T CastWidget()

Disassembly:
	0x021A9CFC LDP X8, X1, [X0]
	0x021A9D00 MOV X0, X22
	0x021A9D04 BLR X8
	0x021A9D08 CBZ X23, 0x21A9C48
	0x021A9D0C MOV X0, X23
	0x021A9D10 BL 0x1C16F18
	0x021A9D14 BL 0x1990590
	0x021A9D18 STP X29, X30, [X31 - 0x60]!
	0x021A9D1C STP X28, X27, [X31 + 0x10]
	0x021A9D20 STP X26, X25, [X31 + 0x20]
	0x021A9D24 STP X24, X23, [X31 + 0x30]
	0x021A9D28 STP X22, X21, [X31 + 0x40]
	0x021A9D2C STP X20, X19, [X31 + 0x50]
	0x021A9D30 ADD X29, X31, 0x0
	0x021A9D34 SUB X31, X31, 0x40
	0x021A9D38 STUR X1, [X29 - 0x28]
	0x021A9D3C MRS X8, 0xC000
	0x021A9D40 STUR X8, [X29 - 0x40]
	0x021A9D44 LDR X8, [X8 + 0x28]
	0x021A9D48 MOV X27, X3
	0x021A9D4C MOV X21, X2
	0x021A9D50 MOV X20, X0
	0x021A9D54 STUR X8, [X29 - 0x8]
	0x021A9D58 STUR X2, [X29 - 0x20]
	0x021A9D5C LDR X19, [X3 + 0x38]
	0x021A9D60 CBNZ X19, 0x21A9DB4
	0x021A9D64 ADRP X0, 0x1F72000
	0x021A9D68 LDR X0, [X0 + 0x918]
	0x021A9D6C BL 0x1C16CF4
	0x021A9D70 ADRP X0, 0x1F4A000
	0x021A9D74 LDR X0, [X0 + 0xE00]
	0x021A9D78 BL 0x1C16CF4
	0x021A9D7C ADRP X0, 0x1F72000
	0x021A9D80 LDR X0, [X0 + 0x920]
	0x021A9D84 BL 0x1C16CF4
	0x021A9D88 ADRP X0, 0x1F72000
	0x021A9D8C LDR X0, [X0 + 0x928]
	0x021A9D90 BL 0x1C16CF4
	0x021A9D94 ADRP X0, 0x1F72000
	0x021A9D98 LDR X0, [X0 + 0x930]
	0x021A9D9C BL 0x1C16CF4
	0x021A9DA0 LDR X19, [X27 + 0x38]
	0x021A9DA4 CBNZ X19, 0x21A9DB4
	0x021A9DA8 MOV X0, X27
	0x021A9DAC BL 0x1C5C6E0
	0x021A9DB0 LDR X19, [X27 + 0x38]
	0x021A9DB4 LDR X8, [X19 + 0x8]
	0x021A9DB8 ADD X9, X31, 0x0
	0x021A9DBC LDR W10, [X8 + 0xFC]
	0x021A9DC0 STP X20, X10, [X29 - 0x38]
	0x021A9DC4 ADD X10, X10, 0xF
	0x021A9DC8 AND X10, X10, 0x1FFFFFFFF
	0x021A9DCC SUB X24, X9, X10
	0x021A9DD0 ADD X31, X24, 0x0
	0x021A9DD4 LDR X9, [X20 + 0x58]
	0x021A9DD8 CBZ X9, 0x21A9F18
	0x021A9DDC LDR W8, [X8 + 0x28]
	0x021A9DE0 LDUR X2, [X29 - 0x30]
	0x021A9DE4 MOV X0, X24
	0x021A9DE8 CMP W8, 0x0
	0x021A9DEC SUB X8, X29, 0x20
	0x021A9DF0 CSEL X1, X21, X8, LT
	0x021A9DF4 BL 0x3EB1AC0
	0x021A9DF8 LDUR X8, [X29 - 0x28]
	0x021A9DFC CBZ X8, 0x21AA1CC
	0x021A9E00 LDP X8, X1, [X19 + 0x8]
	0x021A9E04 LDUR X19, [X29 - 0x38]
	0x021A9E08 LDR W9, [X8 + 0x28]
	0x021A9E0C LDR X0, [X1]
	0x021A9E10 MOV X8, X24
	0x021A9E14 TBNZ X9, 0x1F, 0x21A9E1C
	0x021A9E18 LDR X8, [X24]
	0x021A9E1C STUR X8, [X29 - 0x18]
	0x021A9E20 LDR X8, [X1 + 0x10]
	0x021A9E24 LDUR X2, [X29 - 0x28]
	0x021A9E28 SUB X3, X29, 0x18
	0x021A9E2C SUB X4, X29, 0x10
	0x021A9E30 BLR X8
	0x021A9E34 LDR X1, [X19 + 0x60]
	0x021A9E38 LDUR X25, [X29 - 0x10]
	0x021A9E3C CBNZ X1, 0x21A9E5C
	0x021A9E40 LDR X0, [X19 + 0x58]
	0x021A9E44 CBZ X0, 0x21AA1EC
	0x021A9E48 LDR X8, [X0]
	0x021A9E4C LDR X1, [X8 + 0x3A0]
	0x021A9E50 LDR X9, [X8 + 0x398]
	0x021A9E54 BLR X9
	0x021A9E58 MOV X1, X0
	0x021A9E5C CBZ X25, 0x21AA1E0
	0x021A9E60 MOV X0, X25
	0x021A9E64 MOV X2, X31
	0x021A9E68 BL 0x3D9C6C8
	0x021A9E6C LDR X0, [X19 + 0x58]
	0x021A9E70 CBZ X0, 0x21AA1E4
	0x021A9E74 LDR X8, [X0]
	0x021A9E78 LDR X1, [X8 + 0x3A0]
	0x021A9E7C LDR X9, [X8 + 0x398]
	0x021A9E80 BLR X9
	0x021A9E84 CBZ X0, 0x21AA1E8
	0x021A9E88 LDR X8, [X0]
	0x021A9E8C LDP X9, X2, [X8 + 0x198]
	0x021A9E90 MOV X1, X25
	0x021A9E94 BLR X9
	0x021A9E98 LDR X1, [X19 + 0x58]
	0x021A9E9C MOV X0, X19
	0x021A9EA0 MOV X2, X31
	0x021A9EA4 BL 0x3D8F968
	0x021A9EA8 MOV W19, W31
	0x021A9EAC MOV X26, X31
	0x021A9EB0 ADRP X10, 0x1F4A000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X1+56]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {22}
	013 Move X0, 0x1F4B000
	014 Move X0, [X0+2096]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, [X19+56]
	022 Move X1, [X8]
	023 Move X21, [X20+88]
	024 Move W8, [X1+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {32}
	029 Move X0, X1
	030 Call 0x1C5D684
	031 Move X1, X0
	032 Move X0, X21
	033 Call 0x1C17E00
	034 Move X8, [X19+56]
	035 Move X24, X0
	036 Move X23, [X8]
	037 Move W8, [X23+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X23
	043 Call 0x1C5D684
	044 Move X23, X0
	045 Compare X24, 0
	046 JumpIfEqual {78}
	047 Move X0, X24
	048 Move X1, X23
	049 Call 0x1C17E00
	050 Move X22, X0
	051 Compare X0, 0
	052 JumpIfEqual {134}
	053 Compare X21, 0
	054 JumpIfEqual {81}
	055 Move X0, [X20+88]
	056 Compare X0, 0
	057 JumpIfEqual {133}
	058 Move X1, X31
	059 Call "il2cpp_vm_object_is_inst", X0
	060 Compare X0, 0
	061 JumpIfEqual {133}
	062 Move X8, [X0]
	063 Move X9, [X8+360]
	064 Move X1, [X8+368]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X20, X0
	067 Compare X22, 0
	068 JumpIfEqual {86}
	069 Move X0, X22
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Return X0
	078 Move X22, X31
	079 Compare X21, 0
	080 JumpIfNotEqual {55}
	081 Move X8, 0x1F4B000
	082 Move X8, [X8+2096]
	083 Move X20, [X8]
	084 Compare X22, 0
	085 JumpIfNotEqual {69}
	086 Move X8, [X19+56]
	087 Move X0, 0x1F4B000
	088 Move X21, [X8+8]
	089 Move X0, [X0+1728]
	090 Call 0x1C17D08
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X21
	096 Move X1, X31
	097 Call Type.GetTypeFromHandle, X0
	098 Move X22, X0
	099 Move X0, 0x1F73000
	100 Move X0, [X0+2312]
	101 Call 0x1C17D08
	102 Move X21, X0
	103 Move X0, 0x1F73000
	104 Move X0, [X0+2320]
	105 Call 0x1C17D08
	106 Move X23, X0
	107 Move X3, X31
	108 Compare X22, 0
	109 JumpIfEqual {116}
	110 Move X8, [X22]
	111 Move X0, X22
	112 Move X9, [X8+360]
	113 Move X1, [X8+368]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X3, X0
	116 Move X0, X23
	117 Move X1, X20
	118 Move X2, X21
	119 Move X4, X31
	120 Call String.Concat, X0, X1, X2, X3
	121 Move X20, X0
	122 Move X0, 0x1F4B000
	123 Move X0, [X0+1456]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X20
	127 Move X2, X31
	128 Move X21, X0
	129 Call InvalidOperationException..ctor, X0, X1
	130 Move X0, X21
	131 Move X1, X19
	132 Call 0x1C17DEC
	133 Call 0x1C17F20
	134 Move X0, X24
	135 Move X1, X23
	136 Call 0x1C181E0

Method: System.Boolean OnSelection(System.Boolean fromNext, UnityEngine.Rendering.UI.DebugUIHandlerWidget previous)

Disassembly:
	0x03A018F4 CMP W8, 0x1
	0x03A018F8 CSET W0, EQ

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void OnDeselection()

Disassembly:
	0x03A018FC RET

ISIL:
	001 Return 

Method: System.Void OnAction()

Disassembly:
	0x03A01900 STR X30, [X31 - 0x10]!

ISIL:
	001 Return 

Method: System.Void OnIncrement(System.Boolean fast)

Disassembly:
	0x03A01904 CBZ X0, 0x3A01918

ISIL:
	001 Return 

Method: System.Void OnDecrement(System.Boolean fast)

Disassembly:
	0x03A01908 AND W8, W1, 0x1

ISIL:
	001 Return 

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget Previous()

Disassembly:
	0x03A0190C STR W8, [X0 + 0x30]
	0x03A01910 LDR X30, [X31], #0x10
	0x03A01914 RET
	0x03A01918 BL 0x1C16F20
	0x03A0191C LDR W8, [X0 + 0x2C]
	0x03A01920 SUB W8, W8, 0x1
	0x03A01924 CMP W8, 0x3
	0x03A01928 B.HI 0x3A01940
	0x03A0192C AND X8, X8, 0xF
	0x03A01930 MOVZ W9, 0xD
	0x03A01934 LSRV W8, W9, W8
	0x03A01938 AND W0, W8, 0x1
	0x03A0193C RET
	0x03A01940 MOV W0, W31
	0x03A01944 RET
	0x03A01948 LDR W8, [X0 + 0x2C]
	0x03A0194C TBZ X1, 0x0, 0x3A01964
	0x03A01950 CMP W8, 0x2
	0x03A01954 B.EQ 0x3A01988
	0x03A01958 CBNZ W8, 0x3A01990
	0x03A0195C MOVZ W8, 0x1
	0x03A01960 B 0x3A0198C
	0x03A01964 SUB W9, W8, 0x3
	0x03A01968 CMP W9, 0x2
	0x03A0196C B.CS 0x3A01978
	0x03A01970 MOVZ W8, 0x2
	0x03A01974 B 0x3A0198C
	0x03A01978 CMP W8, 0x1
	0x03A0197C B.NE 0x3A01990
	0x03A01980 STR W31, [X0 + 0x2C]
	0x03A01984 RET
	0x03A01988 MOVZ W8, 0x3
	0x03A0198C STR W8, [X0 + 0x2C]
	0x03A01990 RET
	0x03A01994 LDR W8, [X0 + 0x2C]
	0x03A01998 SUB W8, W8, 0x2
	0x03A0199C CMP W8, 0x3
	0x03A019A0 CSET W0, CC
	0x03A019A4 RET
	0x03A019A8 LDR W8, [X0 + 0x2C]
	0x03A019AC TBZ X1, 0x0, 0x3A019C4
	0x03A019B0 CMP W8, 0x1
	0x03A019B4 B.EQ 0x3A019E8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9E1000
	007 Move X21, 0x6F3000
	008 Move W8, [X20+3905]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6F3000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3905], W8
	020 Move X22, X19
	021 Add X22, X22, 72
	022 Move X20, [X22]
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {54}
	036 Add X19, X19, 64
	037 Move X20, [X19]
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move W8, W0
	048 Move X0, X31
	049 Move X22, X19
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {55}
	054 Move X0, [X22]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0

Method: UnityEngine.Rendering.UI.DebugUIHandlerWidget Next()

Disassembly:
	0x039F76FC LDR X1, [X8]
	0x039F7700 MOV V10.16B, V3.16B
	0x039F7704 FMOV S3, 5
	0x039F7708 FMUL S12, S11, S1
	0x039F770C FMUL S0, S0, S11
	0x039F7710 MOV X0, X20
	0x039F7714 FADD S8, S12, S3
	0x039F7718 FADD S9, S0, S3
	0x039F771C BL 0x2551B1C
	0x039F7720 FMUL S0, S10, S11
	0x039F7724 FADD S1, S12, S12
	0x039F7728 MOV X20, X0
	0x039F772C MOV X21, X31
	0x039F7730 FADD S10, S0, S1
	0x039F7734 CBZ X20, 0x39F7B00
	0x039F7738 LDR X8, [X20]
	0x039F773C LDR X1, [X28]
	0x039F7740 LDRH W9, [X8 + 0x12E]
	0x039F7744 CBZ X9, 0x39F7768
	0x039F7748 LDR X10, [X8 + 0xB0]
	0x039F774C ADD X10, X10, 0x8
	0x039F7750 LDUR X11, [X10 - 0x8]
	0x039F7754 CMP X11, X1
	0x039F7758 B.EQ 0x39F7778
	0x039F775C SUBS X9, X9, 0x1
	0x039F7760 ADD X10, X10, 0x10
	0x039F7764 B.NE 0x39F7750
	0x039F7768 MOV X0, X20
	0x039F776C MOV W2, W31
	0x039F7770 BL 0x1C5C788
	0x039F7774 B 0x39F7784
	0x039F7778 LDRSW X9, [X10]
	0x039F777C ADD X8, X8, X9, 0x4, LSL
	0x039F7780 ADD X0, X8, 0x138
	0x039F7784 LDP X8, X1, [X0]
	0x039F7788 MOV X0, X20
	0x039F778C BLR X8
	0x039F7790 TBZ X0, 0x0, 0x39F7A58
	0x039F7794 LDR X8, [X20]
	0x039F7798 LDR X1, [X29]
	0x039F779C LDRH W9, [X8 + 0x12E]
	0x039F77A0 CBZ X9, 0x39F77C4
	0x039F77A4 LDR X10, [X8 + 0xB0]
	0x039F77A8 ADD X10, X10, 0x8
	0x039F77AC LDUR X11, [X10 - 0x8]
	0x039F77B0 CMP X11, X1
	0x039F77B4 B.EQ 0x39F77D4
	0x039F77B8 SUBS X9, X9, 0x1
	0x039F77BC ADD X10, X10, 0x10
	0x039F77C0 B.NE 0x39F77AC
	0x039F77C4 MOV X0, X20
	0x039F77C8 MOV W2, W31
	0x039F77CC BL 0x1C5C788
	0x039F77D0 B 0x39F77E0
	0x039F77D4 LDRSW X9, [X10]
	0x039F77D8 ADD X8, X8, X9, 0x4, LSL
	0x039F77DC ADD X0, X8, 0x138
	0x039F77E0 LDP X8, X1, [X0]
	0x039F77E4 MOV X0, X20
	0x039F77E8 BLR X8
	0x039F77EC MOV X22, X0
	0x039F77F0 CBZ X0, 0x39F7B08
	0x039F77F4 MOV X0, X22
	0x039F77F8 MOV X1, X31
	0x039F77FC BL 0x39AF5D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9EB000
	006 Move X21, 0x6FD000
	007 Move W8, [X20+3906]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FD000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3906], W8
	019 Move X0, [X21]
	020 Move X20, [X19+80]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Move X20, [X19+80]
	034 Add X19, X19, 64
	035 Move X20, [X19]
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move X20, X31
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {82}
	050 Move X0, [X21]
	051 Move X19, [X19]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {81}
	064 Compare X19, 0
	065 JumpIfEqual {88}
	066 Move X0, [X21]
	067 Move X20, [X19+80]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Inequality, X0, X1
	076 Add X19, X19, 64
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {50}
	081 Move X20, X31
	082 Move X0, X20
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Return X0
	088 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039F78AC MOV X24, X0
	0x039F78B0 LDR X0, [X8]
	0x039F78B4 LDR W8, [X0 + 0xE0]
	0x039F78B8 CBNZ W8, 0x39F78C0
	0x039F78BC BL 0x1C16DFC
	0x039F78C0 ADRP X8, 0x75C000
	0x039F78C4 LDR X8, [X8 + 0xB68]

ISIL:
	001 Move X8, -49324032
	002 Move X9, -49328128
	003 Move V0, [X8+235]
	004 Move V1, [X9+119]
	005 Move X1, X31
	006 Move [X0+32], V0
	007 Move [X0+40], V1
	008 Call MonoBehaviour..ctor, X0
	009 Return 

