Type: UnityEngine.Rendering.Texture3DParameter

Method: System.Void .ctor(UnityEngine.Texture value, System.Boolean overrideState = False)

Disassembly:
	0x039F4DE0 LDP X20, X19, [X31 + 0x30]
	0x039F4DE4 LDP X22, X21, [X31 + 0x20]
	0x039F4DE8 LDP X24, X23, [X31 + 0x10]
	0x039F4DEC LDR X30, [X31], #0x40
	0x039F4DF0 RET
	0x039F4DF4 BL 0x1C16F20
	0x039F4DF8 SUB X31, X31, 0x50
	0x039F4DFC STR X30, [X31 + 0x20]
	0x039F4E00 STP X22, X21, [X31 + 0x30]
	0x039F4E04 STP X20, X19, [X31 + 0x40]
	0x039F4E08 ADRP X21, 0x9ED000
	0x039F4E0C LDRB W8, [X21 + 0xEAF]
	0x039F4E10 MOV X19, X1
	0x039F4E14 MOV X20, X0
	0x039F4E18 TBNZ X8, 0x0, 0x39F4E54
	0x039F4E1C ADRP X0, 0x728000
	0x039F4E20 LDR X0, [X0 + 0x988]
	0x039F4E24 BL 0x1C16CF4
	0x039F4E28 ADRP X0, 0x728000
	0x039F4E2C LDR X0, [X0 + 0x990]
	0x039F4E30 BL 0x1C16CF4
	0x039F4E34 ADRP X0, 0x728000
	0x039F4E38 LDR X0, [X0 + 0x998]
	0x039F4E3C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9EE000
	008 Move X23, 0x760000
	009 Move W8, [X22+3739]
	010 Move X23, [X23+2384]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x760000
	019 Move X0, [X0+2384]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3739], W8
	023 Move X3, [X23]
	024 And W2, W20, 1
	025 Move X0, X21
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call VolumeParameter`1<Object>..ctor, X0, X1, X2
	034 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x039F4E40 ADRP X0, 0x728000
	0x039F4E44 LDR X0, [X0 + 0x9A0]
	0x039F4E48 BL 0x1C16CF4
	0x039F4E4C MOVZ W8, 0x1
	0x039F4E50 STRB W8, [X21 + 0xEAF]
	0x039F4E54 STP X31, X31, [X31 + 0x8]
	0x039F4E58 STR X31, [X31 + 0x18]
	0x039F4E5C LDR X0, [X20 + 0x18]
	0x039F4E60 CBZ X0, 0x39F4F08
	0x039F4E64 ADRP X8, 0x728000
	0x039F4E68 LDR X8, [X8 + 0x9A0]
	0x039F4E6C ADRP X22, 0x728000
	0x039F4E70 ADRP X21, 0x728000
	0x039F4E74 LDR X1, [X8]
	0x039F4E78 LDR X22, [X22 + 0x990]
	0x039F4E7C LDR X21, [X21 + 0x988]
	0x039F4E80 ADD X8, X31, 0x8
	0x039F4E84 BL 0x301CB58
	0x039F4E88 LDR X1, [X22]
	0x039F4E8C ADD X0, X31, 0x8
	0x039F4E90 BL 0x2BC4350
	0x039F4E94 MOV W20, W0
	0x039F4E98 TBZ X0, 0x0, 0x39F4ED0
	0x039F4E9C LDR X0, [X31 + 0x18]
	0x039F4EA0 CBZ X0, 0x39F4F00
	0x039F4EA4 MOV X1, X31
	0x039F4EA8 BL 0x33BE520
	0x039F4EAC CBZ X0, 0x39F4F04
	0x039F4EB0 LDR X8, [X0]
	0x039F4EB4 LDR X9, [X8 + 0x298]
	0x039F4EB8 LDR X2, [X8 + 0x2A0]
	0x039F4EBC MOV X1, X19
	0x039F4EC0 BLR X9
	0x039F4EC4 TBZ X0, 0x0, 0x39F4E88
	0x039F4EC8 MOVZ W19, 0x4
	0x039F4ECC B 0x39F4ED4
	0x039F4ED0 MOVZ W19, 0x5
	0x039F4ED4 LDR X1, [X21]
	0x039F4ED8 ADD X0, X31, 0x8
	0x039F4EDC BL 0x2BC434C
	0x039F4EE0 CMP W19, 0x4
	0x039F4EE4 CSET W8, EQ
	0x039F4EE8 AND W0, W20, W8, 0x0
	0x039F4EEC LDP X20, X19, [X31 + 0x40]
	0x039F4EF0 LDP X22, X21, [X31 + 0x30]
	0x039F4EF4 LDR X30, [X31 + 0x20]
	0x039F4EF8 ADD X31, X31, 0x50
	0x039F4EFC RET
	0x039F4F00 BL 0x1C16F20
	0x039F4F04 BL 0x1C16F20
	0x039F4F08 BL 0x1C16F20
	0x039F4F0C B 0x39F4F1C
	0x039F4F10 B 0x39F4F1C
	0x039F4F14 B 0x39F4F1C
	0x039F4F18 B 0x39F4F1C
	0x039F4F1C MOV X19, X0
	0x039F4F20 CMP W1, 0x1
	0x039F4F24 B.NE 0x39F4F50
	0x039F4F28 MOV X0, X19
	0x039F4F2C BL 0x3EB1AD0
	0x039F4F30 LDR X20, [X0]
	0x039F4F34 BL 0x3EB1AE0
	0x039F4F38 LDR X1, [X21]
	0x039F4F3C ADD X0, X31, 0x8
	0x039F4F40 BL 0x2BC434C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9EE000
	007 Move X22, 0x760000
	008 Move X21, 0x700000
	009 Move W8, [X20+3740]
	010 Move X22, [X22+2392]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x728000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x700000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x760000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3740], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call VolumeParameter`1<Object>.GetHashCode, X0
	031 Move X8, [X19]
	032 Move W20, W0
	033 Move X0, X19
	034 Move X9, [X8+536]
	035 Move X1, [X8+544]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move X8, [X19]
	053 Move X20, 0x728000
	054 Move X0, X19
	055 Move X9, [X8+536]
	056 Move X1, [X8+544]
	057 Move X20, [X20+2296]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call CoreUtils.GetTextureHash, X0
	069 Move W8, 23
	070 Multiply W20, W0, W8
	071 Move W0, W20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0

