Type: UnityEngine.Rendering.NoInterpTextureParameter

Method: System.Void .ctor(UnityEngine.Texture value, System.Boolean overrideState = False)

Disassembly:
	0x039F4B18 LDR X0, [X0 + 0x9C8]
	0x039F4B1C BL 0x1C16D08
	0x039F4B20 MOV X1, X0
	0x039F4B24 MOV X0, X19
	0x039F4B28 BL 0x1C16DEC
	0x039F4B2C SUB X31, X31, 0x60
	0x039F4B30 STR X30, [X31 + 0x20]
	0x039F4B34 STP X24, X23, [X31 + 0x30]
	0x039F4B38 STP X22, X21, [X31 + 0x40]
	0x039F4B3C STP X20, X19, [X31 + 0x50]
	0x039F4B40 ADRP X21, 0x9ED000
	0x039F4B44 LDRB W8, [X21 + 0xEAE]
	0x039F4B48 MOV X19, X1
	0x039F4B4C MOV X20, X0
	0x039F4B50 TBNZ X8, 0x0, 0x39F4B98
	0x039F4B54 ADRP X0, 0x728000
	0x039F4B58 LDR X0, [X0 + 0x988]
	0x039F4B5C BL 0x1C16CF4
	0x039F4B60 ADRP X0, 0x728000
	0x039F4B64 LDR X0, [X0 + 0x990]
	0x039F4B68 BL 0x1C16CF4
	0x039F4B6C ADRP X0, 0x728000
	0x039F4B70 LDR X0, [X0 + 0x998]
	0x039F4B74 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9EE000
	008 Move X23, 0x760000
	009 Move W8, [X22+3735]
	010 Move X23, [X23+2384]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x760000
	019 Move X0, [X0+2384]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3735], W8
	023 Move X3, [X23]
	024 And W2, W20, 1
	025 Move X0, X21
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call VolumeParameter`1<Object>..ctor, X0, X1, X2
	034 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x039F4B78 ADRP X0, 0x728000
	0x039F4B7C LDR X0, [X0 + 0x9A0]
	0x039F4B80 BL 0x1C16CF4
	0x039F4B84 ADRP X0, 0x6FF000
	0x039F4B88 LDR X0, [X0 + 0x6C0]
	0x039F4B8C BL 0x1C16CF4
	0x039F4B90 MOVZ W8, 0x1
	0x039F4B94 STRB W8, [X21 + 0xEAE]
	0x039F4B98 STP X31, X31, [X31 + 0x8]
	0x039F4B9C STR X31, [X31 + 0x18]
	0x039F4BA0 LDR X0, [X20 + 0x18]
	0x039F4BA4 CBZ X0, 0x39F4C60
	0x039F4BA8 ADRP X8, 0x728000
	0x039F4BAC LDR X8, [X8 + 0x9A0]
	0x039F4BB0 ADRP X23, 0x728000
	0x039F4BB4 ADRP X24, 0x6FF000
	0x039F4BB8 ADRP X22, 0x728000
	0x039F4BBC LDR X1, [X8]
	0x039F4BC0 LDR X23, [X23 + 0x990]
	0x039F4BC4 LDR X24, [X24 + 0x6C0]
	0x039F4BC8 LDR X22, [X22 + 0x988]
	0x039F4BCC ADD X8, X31, 0x8
	0x039F4BD0 BL 0x301CB58
	0x039F4BD4 LDR X1, [X23]
	0x039F4BD8 ADD X0, X31, 0x8
	0x039F4BDC BL 0x2BC4350
	0x039F4BE0 MOV W20, W0
	0x039F4BE4 TBZ X0, 0x0, 0x39F4C28
	0x039F4BE8 LDR X0, [X31 + 0x18]
	0x039F4BEC CBZ X0, 0x39F4C5C
	0x039F4BF0 MOV X1, X31
	0x039F4BF4 BL 0x33BE520
	0x039F4BF8 MOV X21, X0
	0x039F4BFC LDR X0, [X24]
	0x039F4C00 LDR W8, [X0 + 0xE0]
	0x039F4C04 CBNZ W8, 0x39F4C0C
	0x039F4C08 BL 0x1C16DFC
	0x039F4C0C MOV X0, X21
	0x039F4C10 MOV X1, X19
	0x039F4C14 MOV X2, X31
	0x039F4C18 BL 0x3395194
	0x039F4C1C TBZ X0, 0x0, 0x39F4BD4
	0x039F4C20 MOVZ W19, 0x4
	0x039F4C24 B 0x39F4C2C
	0x039F4C28 MOVZ W19, 0x5
	0x039F4C2C LDR X1, [X22]
	0x039F4C30 ADD X0, X31, 0x8
	0x039F4C34 BL 0x2BC434C
	0x039F4C38 CMP W19, 0x4
	0x039F4C3C CSET W8, EQ
	0x039F4C40 AND W0, W20, W8, 0x0
	0x039F4C44 LDP X20, X19, [X31 + 0x50]
	0x039F4C48 LDP X22, X21, [X31 + 0x40]
	0x039F4C4C LDP X24, X23, [X31 + 0x30]
	0x039F4C50 LDR X30, [X31 + 0x20]
	0x039F4C54 ADD X31, X31, 0x60
	0x039F4C58 RET
	0x039F4C5C BL 0x1C16F20
	0x039F4C60 BL 0x1C16F20
	0x039F4C64 B 0x39F4C74
	0x039F4C68 B 0x39F4C74
	0x039F4C6C B 0x39F4C74
	0x039F4C70 B 0x39F4C74
	0x039F4C74 MOV X19, X0
	0x039F4C78 CMP W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9EE000
	007 Move X22, 0x760000
	008 Move X21, 0x700000
	009 Move W8, [X20+3736]
	010 Move X22, [X22+2392]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x728000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x700000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x760000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3736], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call VolumeParameter`1<Object>.GetHashCode, X0
	031 Move X8, [X19]
	032 Move W20, W0
	033 Move X0, X19
	034 Move X9, [X8+536]
	035 Move X1, [X8+544]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move X8, [X19]
	053 Move X20, 0x728000
	054 Move X0, X19
	055 Move X9, [X8+536]
	056 Move X1, [X8+544]
	057 Move X20, [X20+2296]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call CoreUtils.GetTextureHash, X0
	069 Move W8, 23
	070 Multiply W20, W0, W8
	071 Move W0, W20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0

