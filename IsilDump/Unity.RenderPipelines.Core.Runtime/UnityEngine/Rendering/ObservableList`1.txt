Type: UnityEngine.Rendering.ObservableList`1

Method: System.Void add_ItemAdded(UnityEngine.Rendering.ListChangedEventHandler`1<T> value)

Disassembly:
	0x024986E0 MOV X1, X31
	0x024986E4 MOV X0, X20
	0x024986E8 MOV X2, X22
	0x024986EC BL 0x1C24138
	0x024986F0 CMP X22, X0
	0x024986F4 MOV X22, X0
	0x024986F8 B.NE 0x2498690
	0x024986FC LDP X20, X19, [X31 + 0x30]
	0x02498700 LDP X22, X21, [X31 + 0x20]
	0x02498704 LDP X24, X23, [X31 + 0x10]
	0x02498708 LDR X30, [X31], #0x40
	0x0249870C RET
	0x02498710 MOV X0, X24
	0x02498714 MOV X1, X23
	0x02498718 BL 0x1C171E0
	0x0249871C STR X30, [X31 - 0x40]!
	0x02498720 STP X24, X23, [X31 + 0x10]
	0x02498724 STP X22, X21, [X31 + 0x20]
	0x02498728 STP X20, X19, [X31 + 0x30]
	0x0249872C MOV X20, X0
	0x02498730 LDR X22, [X20 + 0x18]!
	0x02498734 MOV X19, X2
	0x02498738 MOV X21, X1
	0x0249873C MOV X0, X22
	0x02498740 MOV X1, X21
	0x02498744 MOV X2, X31
	0x02498748 BL 0x33C0FDC
	0x0249874C LDR X8, [X19 + 0x20]
	0x02498750 MOV X24, X0
	0x02498754 LDR X8, [X8 + 0xC0]
	0x02498758 LDR X23, [X8 + 0x8]
	0x0249875C LDRB W8, [X23 + 0x135]
	0x02498760 TBNZ X8, 0x0, 0x2498770
	0x02498764 MOV X0, X23
	0x02498768 BL 0x1C5C684
	0x0249876C MOV X23, X0
	0x02498770 CBZ X24, 0x249878C
	0x02498774 MOV X0, X24
	0x02498778 MOV X1, X23
	0x0249877C BL 0x1C16E00
	0x02498780 MOV X1, X0
	0x02498784 CBNZ X0, 0x2498790
	0x02498788 B 0x24987BC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Add X20, X20, 24
	010 Move X22, [X20]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X31
	016 Call Delegate.Combine, X0, X1
	017 Move X8, [X19+32]
	018 Move X24, X0
	019 Move X8, [X8+192]
	020 Move X23, [X8+8]
	021 Move W8, [X23+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X23
	027 Call 0x1C5D684
	028 Move X23, X0
	029 Compare X24, 0
	030 JumpIfEqual {37}
	031 Move X0, X24
	032 Move X1, X23
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {38}
	037 Move X1, X31
	038 Move X0, X20
	039 Move X2, X22
	040 Call 0x1C25138
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, X0
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return 
	051 Move X0, X24
	052 Move X1, X23
	053 Call 0x1C181E0

Method: System.Void remove_ItemAdded(UnityEngine.Rendering.ListChangedEventHandler`1<T> value)

Disassembly:
	0x0249878C MOV X1, X31
	0x02498790 MOV X0, X20
	0x02498794 MOV X2, X22
	0x02498798 BL 0x1C24138
	0x0249879C CMP X22, X0
	0x024987A0 MOV X22, X0
	0x024987A4 B.NE 0x249873C
	0x024987A8 LDP X20, X19, [X31 + 0x30]
	0x024987AC LDP X22, X21, [X31 + 0x20]
	0x024987B0 LDP X24, X23, [X31 + 0x10]
	0x024987B4 LDR X30, [X31], #0x40
	0x024987B8 RET
	0x024987BC MOV X0, X24
	0x024987C0 MOV X1, X23
	0x024987C4 BL 0x1C171E0
	0x024987C8 STR X30, [X31 - 0x40]!
	0x024987CC STP X24, X23, [X31 + 0x10]
	0x024987D0 STP X22, X21, [X31 + 0x20]
	0x024987D4 STP X20, X19, [X31 + 0x30]
	0x024987D8 MOV X20, X0
	0x024987DC LDR X22, [X20 + 0x20]!
	0x024987E0 MOV X19, X2
	0x024987E4 MOV X21, X1
	0x024987E8 MOV X0, X22
	0x024987EC MOV X1, X21
	0x024987F0 MOV X2, X31
	0x024987F4 BL 0x33C0DE4
	0x024987F8 LDR X8, [X19 + 0x20]
	0x024987FC MOV X24, X0
	0x02498800 LDR X8, [X8 + 0xC0]
	0x02498804 LDR X23, [X8 + 0x8]
	0x02498808 LDRB W8, [X23 + 0x135]
	0x0249880C TBNZ X8, 0x0, 0x249881C
	0x02498810 MOV X0, X23
	0x02498814 BL 0x1C5C684
	0x02498818 MOV X23, X0
	0x0249881C CBZ X24, 0x2498838
	0x02498820 MOV X0, X24
	0x02498824 MOV X1, X23
	0x02498828 BL 0x1C16E00
	0x0249882C MOV X1, X0
	0x02498830 CBNZ X0, 0x249883C
	0x02498834 B 0x2498868

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Add X20, X20, 24
	010 Move X22, [X20]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X31
	016 Call Delegate.Remove, X0, X1
	017 Move X8, [X19+32]
	018 Move X24, X0
	019 Move X8, [X8+192]
	020 Move X23, [X8+8]
	021 Move W8, [X23+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X23
	027 Call 0x1C5D684
	028 Move X23, X0
	029 Compare X24, 0
	030 JumpIfEqual {37}
	031 Move X0, X24
	032 Move X1, X23
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {38}
	037 Move X1, X31
	038 Move X0, X20
	039 Move X2, X22
	040 Call 0x1C25138
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, X0
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return 
	051 Move X0, X24
	052 Move X1, X23
	053 Call 0x1C181E0

Method: System.Void add_ItemRemoved(UnityEngine.Rendering.ListChangedEventHandler`1<T> value)

Disassembly:
	0x02498838 MOV X1, X31
	0x0249883C MOV X0, X20
	0x02498840 MOV X2, X22
	0x02498844 BL 0x1C24138
	0x02498848 CMP X22, X0
	0x0249884C MOV X22, X0
	0x02498850 B.NE 0x24987E8
	0x02498854 LDP X20, X19, [X31 + 0x30]
	0x02498858 LDP X22, X21, [X31 + 0x20]
	0x0249885C LDP X24, X23, [X31 + 0x10]
	0x02498860 LDR X30, [X31], #0x40
	0x02498864 RET
	0x02498868 MOV X0, X24
	0x0249886C MOV X1, X23
	0x02498870 BL 0x1C171E0
	0x02498874 STR X30, [X31 - 0x40]!
	0x02498878 STP X24, X23, [X31 + 0x10]
	0x0249887C STP X22, X21, [X31 + 0x20]
	0x02498880 STP X20, X19, [X31 + 0x30]
	0x02498884 MOV X20, X0
	0x02498888 LDR X22, [X20 + 0x20]!
	0x0249888C MOV X19, X2
	0x02498890 MOV X21, X1
	0x02498894 MOV X0, X22
	0x02498898 MOV X1, X21
	0x0249889C MOV X2, X31
	0x024988A0 BL 0x33C0FDC
	0x024988A4 LDR X8, [X19 + 0x20]
	0x024988A8 MOV X24, X0
	0x024988AC LDR X8, [X8 + 0xC0]
	0x024988B0 LDR X23, [X8 + 0x8]
	0x024988B4 LDRB W8, [X23 + 0x135]
	0x024988B8 TBNZ X8, 0x0, 0x24988C8
	0x024988BC MOV X0, X23
	0x024988C0 BL 0x1C5C684
	0x024988C4 MOV X23, X0
	0x024988C8 CBZ X24, 0x24988E4
	0x024988CC MOV X0, X24
	0x024988D0 MOV X1, X23
	0x024988D4 BL 0x1C16E00
	0x024988D8 MOV X1, X0
	0x024988DC CBNZ X0, 0x24988E8
	0x024988E0 B 0x2498914

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Add X20, X20, 32
	010 Move X22, [X20]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X31
	016 Call Delegate.Combine, X0, X1
	017 Move X8, [X19+32]
	018 Move X24, X0
	019 Move X8, [X8+192]
	020 Move X23, [X8+8]
	021 Move W8, [X23+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X23
	027 Call 0x1C5D684
	028 Move X23, X0
	029 Compare X24, 0
	030 JumpIfEqual {37}
	031 Move X0, X24
	032 Move X1, X23
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {38}
	037 Move X1, X31
	038 Move X0, X20
	039 Move X2, X22
	040 Call 0x1C25138
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, X0
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return 
	051 Move X0, X24
	052 Move X1, X23
	053 Call 0x1C181E0

Method: System.Void remove_ItemRemoved(UnityEngine.Rendering.ListChangedEventHandler`1<T> value)

Disassembly:
	0x024988E4 MOV X1, X31
	0x024988E8 MOV X0, X20
	0x024988EC MOV X2, X22
	0x024988F0 BL 0x1C24138
	0x024988F4 CMP X22, X0
	0x024988F8 MOV X22, X0
	0x024988FC B.NE 0x2498894
	0x02498900 LDP X20, X19, [X31 + 0x30]
	0x02498904 LDP X22, X21, [X31 + 0x20]
	0x02498908 LDP X24, X23, [X31 + 0x10]
	0x0249890C LDR X30, [X31], #0x40
	0x02498910 RET
	0x02498914 MOV X0, X24
	0x02498918 MOV X1, X23
	0x0249891C BL 0x1C171E0
	0x02498920 STP X29, X30, [X31 - 0x40]!
	0x02498924 STP X24, X23, [X31 + 0x10]
	0x02498928 STP X22, X21, [X31 + 0x20]
	0x0249892C STP X20, X19, [X31 + 0x30]
	0x02498930 ADD X29, X31, 0x0
	0x02498934 SUB X31, X31, 0x20
	0x02498938 MRS X24, 0xC000
	0x0249893C LDR X8, [X24 + 0x28]
	0x02498940 STUR X8, [X29 - 0x8]
	0x02498944 LDR X8, [X3 + 0x20]
	0x02498948 LDR X8, [X8 + 0xC0]
	0x0249894C LDR X9, [X8 + 0x28]
	0x02498950 LDR W20, [X9 + 0xFC]
	0x02498954 ADD X9, X31, 0x0
	0x02498958 ADD X10, X20, 0xF
	0x0249895C AND X10, X10, 0x1FFFFFFFF
	0x02498960 SUB X21, X9, X10
	0x02498964 ADD X31, X21, 0x0
	0x02498968 LDR X22, [X0 + 0x10]
	0x0249896C CBZ X22, 0x2498A34
	0x02498970 MOV W23, W1
	0x02498974 LDR X1, [X8 + 0x18]
	0x02498978 MOV X19, X2
	0x0249897C LDRB W8, [X1 + 0x135]
	0x02498980 TBNZ X8, 0x0, 0x2498990
	0x02498984 MOV X0, X1
	0x02498988 BL 0x1C5C684
	0x0249898C MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Add X20, X20, 32
	010 Move X22, [X20]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X31
	016 Call Delegate.Remove, X0, X1
	017 Move X8, [X19+32]
	018 Move X24, X0
	019 Move X8, [X8+192]
	020 Move X23, [X8+8]
	021 Move W8, [X23+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X23
	027 Call 0x1C5D684
	028 Move X23, X0
	029 Compare X24, 0
	030 JumpIfEqual {37}
	031 Move X0, X24
	032 Move X1, X23
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {38}
	037 Move X1, X31
	038 Move X0, X20
	039 Move X2, X22
	040 Call 0x1C25138
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, X0
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return 
	051 Move X0, X24
	052 Move X1, X23
	053 Call 0x1C181E0

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02498990 STUR W23, [X29 - 0xC]
	0x02498994 LDR X8, [X22]
	0x02498998 LDRH W9, [X8 + 0x12E]
	0x0249899C CBZ X9, 0x24989C0
	0x024989A0 LDR X10, [X8 + 0xB0]
	0x024989A4 ADD X10, X10, 0x8
	0x024989A8 LDUR X11, [X10 - 0x8]
	0x024989AC CMP X11, X1
	0x024989B0 B.EQ 0x24989D0
	0x024989B4 SUBS X9, X9, 0x1
	0x024989B8 ADD X10, X10, 0x10
	0x024989BC B.NE 0x24989A8
	0x024989C0 MOV X0, X22
	0x024989C4 MOV W2, W31
	0x024989C8 BL 0x1C5C788
	0x024989CC B 0x24989DC
	0x024989D0 LDRSW X9, [X10]
	0x024989D4 ADD X8, X8, X9, 0x4, LSL
	0x024989D8 ADD X0, X8, 0x138
	0x024989DC SUB X8, X29, 0xC
	0x024989E0 STP X8, X21, [X29 - 0x20]
	0x024989E4 LDR X1, [X0 + 0x8]
	0x024989E8 SUB X3, X29, 0x20
	0x024989EC MOV X2, X22
	0x024989F0 MOV X4, X21
	0x024989F4 LDP X0, X8, [X1 + 0x8]
	0x024989F8 BLR X8
	0x024989FC MOV X0, X19
	0x02498A00 MOV X1, X21
	0x02498A04 MOV X2, X20
	0x02498A08 BL 0x3EB1AC0
	0x02498A0C LDR X8, [X24 + 0x28]
	0x02498A10 LDUR X9, [X29 - 0x8]
	0x02498A14 CMP X8, X9
	0x02498A18 B.NE 0x2498A38
	0x02498A1C ADD X31, X29, 0x0
	0x02498A20 LDP X20, X19, [X31 + 0x30]
	0x02498A24 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {43}
	007 Move X8, [X2+32]
	008 Move W19, W1
	009 Move X8, [X8+192]
	010 Move X1, [X8+24]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move X0, X20
	030 Move W2, W31
	031 Call 0x1C5D788
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Add X8, X8, X9
	034 Add X0, X8, 312
	035 Move X3, [X0]
	036 Move X2, [X0+8]
	037 Move X0, X20
	038 Move W1, W19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Void set_Item(System.Int32 index, T value)

Disassembly:
	0x02498A28 LDP X24, X23, [X31 + 0x10]
	0x02498A2C LDP X29, X30, [X31], #0x40
	0x02498A30 RET
	0x02498A34 BL 0x1C16F20
	0x02498A38 BL 0x3EB1B20
	0x02498A3C STP X29, X30, [X31 - 0x60]!
	0x02498A40 STP X28, X27, [X31 + 0x10]
	0x02498A44 STP X26, X25, [X31 + 0x20]
	0x02498A48 STP X24, X23, [X31 + 0x30]
	0x02498A4C STP X22, X21, [X31 + 0x40]
	0x02498A50 STP X20, X19, [X31 + 0x50]
	0x02498A54 ADD X29, X31, 0x0
	0x02498A58 SUB X31, X31, 0x40
	0x02498A5C MRS X22, 0xC000
	0x02498A60 LDR X8, [X22 + 0x28]
	0x02498A64 STUR X8, [X29 - 0x8]
	0x02498A68 STP X2, X2, [X29 - 0x38]
	0x02498A6C LDR X8, [X3 + 0x20]
	0x02498A70 LDR X8, [X8 + 0xC0]
	0x02498A74 LDR X9, [X8 + 0x28]
	0x02498A78 LDR W24, [X9 + 0xFC]
	0x02498A7C ADD X9, X31, 0x0
	0x02498A80 ADD X10, X24, 0xF
	0x02498A84 AND X10, X10, 0x1FFFFFFFF
	0x02498A88 SUB X26, X9, X10
	0x02498A8C ADD X31, X26, 0x0
	0x02498A90 ADD X9, X31, 0x0
	0x02498A94 SUB X25, X9, X10
	0x02498A98 ADD X31, X25, 0x0
	0x02498A9C ADD X9, X31, 0x0
	0x02498AA0 SUB X21, X9, X10
	0x02498AA4 ADD X31, X21, 0x0
	0x02498AA8 LDR X27, [X0 + 0x10]
	0x02498AAC CBZ X27, 0x2498CF4
	0x02498AB0 MOV W20, W1
	0x02498AB4 LDR X1, [X8 + 0x18]
	0x02498AB8 LDR X28, [X0 + 0x20]
	0x02498ABC MOV X23, X3
	0x02498AC0 MOV X19, X0
	0x02498AC4 LDRB W8, [X1 + 0x135]
	0x02498AC8 TBNZ X8, 0x0, 0x2498AD8
	0x02498ACC MOV X0, X1
	0x02498AD0 BL 0x1C5C684
	0x02498AD4 MOV X1, X0
	0x02498AD8 STUR W20, [X29 - 0xC]
	0x02498ADC LDR X8, [X27]
	0x02498AE0 STUR X22, [X29 - 0x40]
	0x02498AE4 LDRH W9, [X8 + 0x12E]
	0x02498AE8 CBZ X9, 0x2498B0C
	0x02498AEC LDR X10, [X8 + 0xB0]
	0x02498AF0 ADD X10, X10, 0x8
	0x02498AF4 LDUR X11, [X10 - 0x8]
	0x02498AF8 CMP X11, X1
	0x02498AFC B.EQ 0x2498B1C
	0x02498B00 SUBS X9, X9, 0x1
	0x02498B04 ADD X10, X10, 0x10
	0x02498B08 B.NE 0x2498AF4
	0x02498B0C MOV X0, X27
	0x02498B10 MOV W2, W31
	0x02498B14 BL 0x1C5C788
	0x02498B18 B 0x2498B28
	0x02498B1C LDRSW X9, [X10]
	0x02498B20 ADD X8, X8, X9, 0x4, LSL
	0x02498B24 ADD X0, X8, 0x138
	0x02498B28 SUB X22, X29, 0xC
	0x02498B2C STP X22, X26, [X29 - 0x28]
	0x02498B30 LDR X1, [X0 + 0x8]
	0x02498B34 SUB X3, X29, 0x28
	0x02498B38 MOV X2, X27
	0x02498B3C MOV X4, X26
	0x02498B40 LDP X0, X8, [X1 + 0x8]
	0x02498B44 BLR X8
	0x02498B48 LDR X8, [X23 + 0x20]
	0x02498B4C LDR X8, [X8 + 0xC0]
	0x02498B50 LDP X9, X1, [X8 + 0x28]
	0x02498B54 LDR W8, [X9 + 0x28]
	0x02498B58 LDR X0, [X1]
	0x02498B5C TBNZ X8, 0x1F, 0x2498B64
	0x02498B60 LDR X26, [X26]
	0x02498B64 STUR W20, [X29 - 0xC]
	0x02498B68 STP X28, X22, [X29 - 0x28]
	0x02498B6C STUR X26, [X29 - 0x18]
	0x02498B70 LDR X8, [X1 + 0x10]
	0x02498B74 SUB X3, X29, 0x28
	0x02498B78 MOV X2, X19
	0x02498B7C MOV X4, X26
	0x02498B80 BLR X8
	0x02498B84 LDR X22, [X23 + 0x20]
	0x02498B88 LDUR X28, [X29 - 0x38]
	0x02498B8C LDR X26, [X19 + 0x10]
	0x02498B90 MOV X0, X25
	0x02498B94 LDR X8, [X22 + 0xC0]
	0x02498B98 MOV X2, X24
	0x02498B9C LDR X8, [X8 + 0x28]
	0x02498BA0 LDR W8, [X8 + 0x28]
	0x02498BA4 CMP W8, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, [X0+16]
	009 Compare X24, 0
	010 JumpIfEqual {109}
	011 Move X8, [X3+32]
	012 Move W20, W1
	013 Move X23, [X0+32]
	014 Move X22, X3
	015 Move X8, [X8+192]
	016 Move X19, X2
	017 Move X21, X0
	018 Move X1, [X8+24]
	019 Move W8, [X1+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {27}
	024 Move X0, X1
	025 Call 0x1C5D684
	026 Move X1, X0
	027 Move X8, [X24]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move X0, X24
	038 Move W2, W31
	039 Call 0x1C5D788
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 Add X8, X8, X9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X24
	046 Move W1, W20
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X22+32]
	049 Move X3, X0
	050 Move X0, X21
	051 Move X1, X23
	052 Move X8, [X8+192]
	053 Move W2, W20
	054 Move X4, [X8+48]
	055 Call 0x2498D0C, X0, X1, X2, X3
	056 Move X23, [X21+16]
	057 Compare X23, 0
	058 JumpIfEqual {109}
	059 Move X8, [X22+32]
	060 Move X8, [X8+192]
	061 Move X1, [X8+24]
	062 Move W8, [X1+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X1
	068 Call 0x1C5D684
	069 Move X1, X0
	070 Move X8, [X23]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X23
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X3, [X0+8]
	089 Move X0, X23
	090 Move W1, W20
	091 Move X2, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X8, [X22+32]
	094 Move X1, [X21+24]
	095 Move X0, X21
	096 Move W2, W20
	097 Move X8, [X8+192]
	098 Move X3, X19
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X4, [X8+48]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X30, [X31+64]
	107 Call 0x2498D0C, X0, X1, X2, X3
	108 Return 
	109 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x02498BA8 SUB X8, X29, 0x30
	0x02498BAC CSEL X1, X28, X8, LT
	0x02498BB0 BL 0x3EB1AC0
	0x02498BB4 CBZ X26, 0x2498CF4
	0x02498BB8 LDR X8, [X22 + 0xC0]
	0x02498BBC LDR X1, [X8 + 0x18]
	0x02498BC0 LDRB W9, [X1 + 0x135]
	0x02498BC4 TBNZ X9, 0x0, 0x2498BDC
	0x02498BC8 MOV X0, X1
	0x02498BCC BL 0x1C5C684
	0x02498BD0 LDR X8, [X23 + 0x20]
	0x02498BD4 MOV X1, X0
	0x02498BD8 LDR X8, [X8 + 0xC0]
	0x02498BDC LDR X8, [X8 + 0x28]
	0x02498BE0 LDR W8, [X8 + 0x28]
	0x02498BE4 TBNZ X8, 0x1F, 0x2498BEC
	0x02498BE8 LDR X25, [X25]
	0x02498BEC STUR W20, [X29 - 0xC]
	0x02498BF0 LDR X8, [X26]
	0x02498BF4 LDRH W9, [X8 + 0x12E]
	0x02498BF8 CBZ X9, 0x2498C1C
	0x02498BFC LDR X10, [X8 + 0xB0]
	0x02498C00 ADD X10, X10, 0x8
	0x02498C04 LDUR X11, [X10 - 0x8]
	0x02498C08 CMP X11, X1
	0x02498C0C B.EQ 0x2498C2C
	0x02498C10 SUBS X9, X9, 0x1
	0x02498C14 ADD X10, X10, 0x10
	0x02498C18 B.NE 0x2498C04
	0x02498C1C MOVZ W2, 0x1
	0x02498C20 MOV X0, X26
	0x02498C24 BL 0x1C5C788
	0x02498C28 B 0x2498C3C
	0x02498C2C LDR W9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+64]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x02498C30 ADD W9, W9, 0x1
	0x02498C34 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x02498C38 ADD X0, X8, 0x138
	0x02498C3C SUB X27, X29, 0xC
	0x02498C40 STP X27, X25, [X29 - 0x28]
	0x02498C44 LDR X1, [X0 + 0x8]
	0x02498C48 SUB X3, X29, 0x28

ISIL:
	001 Move X8, [X1+32]
	002 Move W1, W31
	003 Move X8, [X8+192]
	004 Move X2, [X8+80]

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x02498C4C MOV X2, X26
	0x02498C50 MOV X4, X25
	0x02498C54 LDP X0, X8, [X1 + 0x8]
	0x02498C58 BLR X8
	0x02498C5C LDR X23, [X23 + 0x20]
	0x02498C60 LDR X22, [X19 + 0x18]
	0x02498C64 MOV X0, X21
	0x02498C68 MOV X2, X24
	0x02498C6C LDR X8, [X23 + 0xC0]
	0x02498C70 LDR X8, [X8 + 0x28]
	0x02498C74 LDR W8, [X8 + 0x28]
	0x02498C78 CMP W8, 0x0
	0x02498C7C SUB X8, X29, 0x30
	0x02498C80 CSEL X1, X28, X8, LT
	0x02498C84 BL 0x3EB1AC0
	0x02498C88 LDR X8, [X23 + 0xC0]
	0x02498C8C LDP X9, X1, [X8 + 0x28]
	0x02498C90 LDR W8, [X9 + 0x28]
	0x02498C94 LDR X0, [X1]
	0x02498C98 TBNZ X8, 0x1F, 0x2498CA0
	0x02498C9C LDR X21, [X21]
	0x02498CA0 STUR W20, [X29 - 0xC]
	0x02498CA4 STP X22, X27, [X29 - 0x28]
	0x02498CA8 STUR X21, [X29 - 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move X8, [X21+32]
	011 Move X8, [X8+192]
	012 Move X0, [X8+88]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X21+32]
	021 Move W1, W20
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X2, [X8+96]
	025 Call List`1<Object>..ctor, X0, X1
	026 Move [X19+16], X21
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<T> collection)

Disassembly:
	0x02498CAC LDR X8, [X1 + 0x10]
	0x02498CB0 SUB X3, X29, 0x28
	0x02498CB4 MOV X2, X19
	0x02498CB8 MOV X4, X21
	0x02498CBC BLR X8
	0x02498CC0 LDUR X8, [X29 - 0x40]
	0x02498CC4 LDR X8, [X8 + 0x28]
	0x02498CC8 LDUR X9, [X29 - 0x8]
	0x02498CCC CMP X8, X9
	0x02498CD0 B.NE 0x2498CF8
	0x02498CD4 ADD X31, X29, 0x0
	0x02498CD8 LDP X20, X19, [X31 + 0x50]
	0x02498CDC LDP X22, X21, [X31 + 0x40]
	0x02498CE0 LDP X24, X23, [X31 + 0x30]
	0x02498CE4 LDP X26, X25, [X31 + 0x20]
	0x02498CE8 LDP X28, X27, [X31 + 0x10]
	0x02498CEC LDP X29, X30, [X31], #0x60
	0x02498CF0 RET
	0x02498CF4 BL 0x1C16F20
	0x02498CF8 BL 0x3EB1B20
	0x02498CFC STP X30, X19, [X31 - 0x10]!
	0x02498D00 LDR X19, [X0 + 0x10]
	0x02498D04 CBZ X19, 0x2498D80
	0x02498D08 LDR X8, [X1 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move X8, [X21+32]
	011 Move X8, [X8+192]
	012 Move X0, [X8+88]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X21+32]
	021 Move X1, X20
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X2, [X8+112]
	025 Call List`1<Object>..ctor, X0, X1
	026 Move [X19+16], X21
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void OnEvent(UnityEngine.Rendering.ListChangedEventHandler`1<T> e, System.Int32 index, T item)

Disassembly:
	0x02498D0C LDR X8, [X8 + 0xC0]
	0x02498D10 LDR X1, [X8 + 0x40]
	0x02498D14 LDRB W8, [X1 + 0x135]
	0x02498D18 TBNZ X8, 0x0, 0x2498D28
	0x02498D1C MOV X0, X1
	0x02498D20 BL 0x1C5C684
	0x02498D24 MOV X1, X0
	0x02498D28 LDR X8, [X19]
	0x02498D2C LDRH W9, [X8 + 0x12E]
	0x02498D30 CBZ X9, 0x2498D54
	0x02498D34 LDR X10, [X8 + 0xB0]
	0x02498D38 ADD X10, X10, 0x8
	0x02498D3C LDUR X11, [X10 - 0x8]
	0x02498D40 CMP X11, X1
	0x02498D44 B.EQ 0x2498D64
	0x02498D48 SUBS X9, X9, 0x1
	0x02498D4C ADD X10, X10, 0x10
	0x02498D50 B.NE 0x2498D3C
	0x02498D54 MOV X0, X19
	0x02498D58 MOV W2, W31
	0x02498D5C BL 0x1C5C788
	0x02498D60 B 0x2498D70
	0x02498D64 LDRSW X9, [X10]
	0x02498D68 ADD X8, X8, X9, 0x4, LSL
	0x02498D6C ADD X0, X8, 0x138
	0x02498D70 LDP X2, X1, [X0]
	0x02498D74 MOV X0, X19
	0x02498D78 LDP X30, X19, [X31], #0x10
	0x02498D7C BR X2
	0x02498D80 BL 0x1C16F20
	0x02498D84 MOV W0, W31
	0x02498D88 RET
	0x02498D8C LDR X8, [X1 + 0x20]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {43}
	003 Move [X31-48], X30
	004 Move [X31-40], X23
	005 Move [X31+16], X22
	006 Move [X31+24], X21
	007 Move [X31+32], X20
	008 Move [X31+40], X19
	009 Move X8, [X4+32]
	010 Move X19, X0
	011 Move X23, X4
	012 Move X21, X3
	013 Move X8, [X8+192]
	014 Move W22, W2
	015 Move X20, X1
	016 Move X0, [X8+120]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X23+32]
	025 Move W1, W22
	026 Move X2, X21
	027 Move X23, X0
	028 Move X8, [X8+192]
	029 Move X3, [X8+128]
	030 Call 0x2EF2E0C, X0, X1, X2
	031 Move X4, [X20+24]
	032 Move X0, [X20+64]
	033 Move X3, [X20+40]
	034 Move X1, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X2, X23
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 CallNoReturn X4
	043 Return 

Method: System.Boolean Contains(T item)

Disassembly:
	0x02498D90 MOV W1, W31
	0x02498D94 LDR X8, [X8 + 0xC0]
	0x02498D98 LDR X2, [X8 + 0x50]
	0x02498D9C LDR X3, [X2]
	0x02498DA0 BR X3
	0x02498DA4 STP X30, X21, [X31 - 0x20]!
	0x02498DA8 STP X20, X19, [X31 + 0x10]
	0x02498DAC MOV W20, W1
	0x02498DB0 MOV X1, X31
	0x02498DB4 MOV X21, X2
	0x02498DB8 MOV X19, X0
	0x02498DBC BL 0x33BDD8C
	0x02498DC0 LDR X8, [X21 + 0x20]
	0x02498DC4 LDR X8, [X8 + 0xC0]
	0x02498DC8 LDR X0, [X8 + 0x58]
	0x02498DCC LDRB W8, [X0 + 0x135]
	0x02498DD0 TBNZ X8, 0x0, 0x2498DD8
	0x02498DD4 BL 0x1C5C684
	0x02498DD8 BL 0x1C16F10
	0x02498DDC LDR X8, [X21 + 0x20]
	0x02498DE0 MOV W1, W20
	0x02498DE4 MOV X21, X0
	0x02498DE8 LDR X8, [X8 + 0xC0]
	0x02498DEC LDR X2, [X8 + 0x60]
	0x02498DF0 LDR X8, [X2]
	0x02498DF4 BLR X8
	0x02498DF8 STR X21, [X19 + 0x10]
	0x02498DFC LDP X20, X19, [X31 + 0x10]
	0x02498E00 LDP X30, X21, [X31], #0x20
	0x02498E04 RET
	0x02498E08 STP X30, X21, [X31 - 0x20]!
	0x02498E0C STP X20, X19, [X31 + 0x10]
	0x02498E10 MOV X20, X1
	0x02498E14 MOV X1, X31
	0x02498E18 MOV X21, X2
	0x02498E1C MOV X19, X0
	0x02498E20 BL 0x33BDD8C
	0x02498E24 LDR X8, [X21 + 0x20]
	0x02498E28 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+64]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 4
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 4
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Int32 IndexOf(T item)

Disassembly:
	0x02498E2C LDR X0, [X8 + 0x58]
	0x02498E30 LDRB W8, [X0 + 0x135]
	0x02498E34 TBNZ X8, 0x0, 0x2498E3C
	0x02498E38 BL 0x1C5C684
	0x02498E3C BL 0x1C16F10
	0x02498E40 LDR X8, [X21 + 0x20]
	0x02498E44 MOV X1, X20
	0x02498E48 MOV X21, X0
	0x02498E4C LDR X8, [X8 + 0xC0]
	0x02498E50 LDR X2, [X8 + 0x70]
	0x02498E54 LDR X8, [X2]
	0x02498E58 BLR X8
	0x02498E5C STR X21, [X19 + 0x10]
	0x02498E60 LDP X20, X19, [X31 + 0x10]
	0x02498E64 LDP X30, X21, [X31], #0x20
	0x02498E68 RET
	0x02498E6C STP X29, X30, [X31 - 0x50]!
	0x02498E70 STR X25, [X31 + 0x10]
	0x02498E74 STP X24, X23, [X31 + 0x20]
	0x02498E78 STP X22, X21, [X31 + 0x30]
	0x02498E7C STP X20, X19, [X31 + 0x40]
	0x02498E80 ADD X29, X31, 0x0
	0x02498E84 SUB X31, X31, 0x30
	0x02498E88 MRS X25, 0xC000
	0x02498E8C LDR X8, [X25 + 0x28]
	0x02498E90 MOV W22, W2
	0x02498E94 ADD X9, X31, 0x0
	0x02498E98 STUR X8, [X29 - 0x8]
	0x02498E9C STUR X3, [X29 - 0x28]
	0x02498EA0 LDR X24, [X4 + 0x20]
	0x02498EA4 LDR X8, [X24 + 0xC0]
	0x02498EA8 LDR X8, [X8 + 0x28]
	0x02498EAC LDR W2, [X8 + 0xFC]
	0x02498EB0 ADD X10, X2, 0xF
	0x02498EB4 AND X10, X10, 0x1FFFFFFFF
	0x02498EB8 SUB X23, X9, X10
	0x02498EBC ADD X31, X23, 0x0
	0x02498EC0 CBZ X1, 0x2498F68
	0x02498EC4 LDR W8, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+16]
	005 Compare X20, 0
	006 JumpIfEqual {44}
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X1, [X8+24]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Move X8, [X20]
	020 NotImplemented "Instruction LDRH not yet implemented."
	021 Compare X9, 0
	022 JumpIfEqual {29}
	023 Move X10, [X8+176]
	024 Add X10, X10, 8
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Subtract X9, X9, 1
	028 Add X10, X10, 16
	029 Move W2, 2
	030 Move X0, X20
	031 Call 0x1C5D788
	032 Move W9, [X10]
	033 Add W9, W9, 2
	034 Add X8, X8, W9
	035 Add X0, X8, 312
	036 Move X3, [X0]
	037 Move X2, [X0+8]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Call 0x1C17F20

Method: System.Void Add(T item)

Disassembly:
	0x02498EC8 MOV X19, X1
	0x02498ECC MOV X21, X0
	0x02498ED0 MOV X0, X23
	0x02498ED4 CMP W8, 0x0
	0x02498ED8 SUB X8, X29, 0x28
	0x02498EDC CSEL X1, X3, X8, LT
	0x02498EE0 MOV X20, X4
	0x02498EE4 BL 0x3EB1AC0
	0x02498EE8 LDR X8, [X24 + 0xC0]
	0x02498EEC LDR X0, [X8 + 0x78]
	0x02498EF0 LDRB W8, [X0 + 0x135]
	0x02498EF4 TBNZ X8, 0x0, 0x2498EFC
	0x02498EF8 BL 0x1C5C684
	0x02498EFC BL 0x1C16F10
	0x02498F00 LDR X8, [X20 + 0x20]
	0x02498F04 MOV X24, X0
	0x02498F08 LDR X8, [X8 + 0xC0]
	0x02498F0C LDR X9, [X8 + 0x28]
	0x02498F10 LDR X1, [X8 + 0x80]
	0x02498F14 LDR W9, [X9 + 0x28]
	0x02498F18 LDR X8, [X1]
	0x02498F1C TBNZ X9, 0x1F, 0x2498F24
	0x02498F20 LDR X23, [X23]
	0x02498F24 SUB X9, X29, 0xC
	0x02498F28 STUR W22, [X29 - 0xC]
	0x02498F2C STP X9, X23, [X29 - 0x20]
	0x02498F30 LDR X9, [X1 + 0x10]
	0x02498F34 SUB X3, X29, 0x20
	0x02498F38 MOV X0, X8
	0x02498F3C MOV X2, X24
	0x02498F40 MOV X4, X23
	0x02498F44 BLR X9
	0x02498F48 LDR X8, [X20 + 0x20]
	0x02498F4C MOV X0, X19
	0x02498F50 MOV X1, X21
	0x02498F54 MOV X2, X24
	0x02498F58 LDR X8, [X8 + 0xC0]
	0x02498F5C LDR X3, [X8 + 0x88]
	0x02498F60 LDR X8, [X3]
	0x02498F64 BLR X8
	0x02498F68 LDR X8, [X25 + 0x28]
	0x02498F6C LDUR X9, [X29 - 0x8]
	0x02498F70 CMP X8, X9
	0x02498F74 B.NE 0x2498F94
	0x02498F78 ADD X31, X29, 0x0
	0x02498F7C LDP X20, X19, [X31 + 0x40]
	0x02498F80 LDP X22, X21, [X31 + 0x30]
	0x02498F84 LDP X24, X23, [X31 + 0x20]
	0x02498F88 LDR X25, [X31 + 0x10]
	0x02498F8C LDP X29, X30, [X31], #0x50
	0x02498F90 RET
	0x02498F94 BL 0x3EB1B20
	0x02498F98 STP X29, X30, [X31 - 0x40]!
	0x02498F9C STR X23, [X31 + 0x10]
	0x02498FA0 STP X22, X21, [X31 + 0x20]
	0x02498FA4 STP X20, X19, [X31 + 0x30]
	0x02498FA8 ADD X29, X31, 0x0
	0x02498FAC SUB X31, X31, 0x20
	0x02498FB0 MRS X22, 0xC000
	0x02498FB4 LDR X8, [X22 + 0x28]
	0x02498FB8 MOV X21, X2
	0x02498FBC ADD X9, X31, 0x0
	0x02498FC0 STUR X8, [X29 - 0x8]
	0x02498FC4 STUR X1, [X29 - 0x20]
	0x02498FC8 LDR X23, [X2 + 0x20]
	0x02498FCC LDR X8, [X23 + 0xC0]
	0x02498FD0 LDR X8, [X8 + 0x28]
	0x02498FD4 LDR W2, [X8 + 0xFC]
	0x02498FD8 ADD X10, X2, 0xF
	0x02498FDC AND X10, X10, 0x1FFFFFFFF
	0x02498FE0 SUB X20, X9, X10
	0x02498FE4 ADD X31, X20, 0x0
	0x02498FE8 LDR W8, [X8 + 0x28]
	0x02498FEC LDR X19, [X0 + 0x10]
	0x02498FF0 MOV X0, X20
	0x02498FF4 CMP W8, 0x0
	0x02498FF8 SUB X8, X29, 0x20
	0x02498FFC CSEL X1, X1, X8, LT
	0x02499000 BL 0x3EB1AC0
	0x02499004 CBZ X19, 0x24990D8
	0x02499008 LDR X8, [X23 + 0xC0]
	0x0249900C LDR X1, [X8 + 0x40]
	0x02499010 LDRB W9, [X1 + 0x135]
	0x02499014 TBNZ X9, 0x0, 0x249902C
	0x02499018 MOV X0, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, [X0+16]
	008 Compare X22, 0
	009 JumpIfEqual {98}
	010 Move X8, [X2+32]
	011 Move X19, X1
	012 Move X21, X2
	013 Move X20, X0
	014 Move X8, [X8+192]
	015 Move X1, [X8+64]
	016 Move W8, [X1+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X1
	022 Call 0x1C5D684
	023 Move X1, X0
	024 Move X8, [X22]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X22
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X22
	044 Move X1, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X22, [X20+16]
	047 Compare X22, 0
	048 JumpIfEqual {98}
	049 Move X8, [X21+32]
	050 Move X23, [X20+24]
	051 Move X8, [X8+192]
	052 Move X1, [X8+24]
	053 Move W8, [X1+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X1
	059 Call 0x1C5D684
	060 Move X1, X0
	061 Move X8, [X22]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 2
	072 Move X0, X22
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 2
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X2, [X0+8]
	080 Move X0, X22
	081 Move X1, X19
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, [X21+32]
	084 Move W2, W0
	085 Move X0, X20
	086 Move X3, X19
	087 Move X8, [X8+192]
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X1, X23
	093 Move X4, [X8+48]
	094 Move X30, [X31+48]
	095 Move X23, [X31+56]
	096 Call 0x2498D0C, X0, X1, X2, X3
	097 Return 
	098 Call 0x1C17F20

Method: System.Void Add(T[] items)

Disassembly:
	0x0249901C BL 0x1C5C684
	0x02499020 LDR X8, [X21 + 0x20]
	0x02499024 MOV X1, X0
	0x02499028 LDR X8, [X8 + 0xC0]
	0x0249902C LDR X8, [X8 + 0x28]
	0x02499030 LDR W8, [X8 + 0x28]
	0x02499034 TBNZ X8, 0x1F, 0x249903C
	0x02499038 LDR X20, [X20]
	0x0249903C LDR X8, [X19]
	0x02499040 LDRH W9, [X8 + 0x12E]
	0x02499044 CBZ X9, 0x2499068
	0x02499048 LDR X10, [X8 + 0xB0]
	0x0249904C ADD X10, X10, 0x8
	0x02499050 LDUR X11, [X10 - 0x8]
	0x02499054 CMP X11, X1
	0x02499058 B.EQ 0x2499078
	0x0249905C SUBS X9, X9, 0x1
	0x02499060 ADD X10, X10, 0x10
	0x02499064 B.NE 0x2499050
	0x02499068 MOVZ W2, 0x4
	0x0249906C MOV X0, X19
	0x02499070 BL 0x1C5C788
	0x02499074 B 0x2499088
	0x02499078 LDR W9, [X10]
	0x0249907C ADD W9, W9, 0x4
	0x02499080 ADD X8, X8, W9, 0x4, SXTW
	0x02499084 ADD X0, X8, 0x138
	0x02499088 STUR X20, [X29 - 0x18]
	0x0249908C LDR X1, [X0 + 0x8]
	0x02499090 SUB X3, X29, 0x18
	0x02499094 SUB X4, X29, 0xC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {35}
	009 Move X8, [X1+24]
	010 Move X20, X1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X19, X2
	013 Move X21, X0
	014 Move X22, X31
	015 And X8, X8, 0
	016 Add X23, X20, 32
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, [X19+32]
	019 Move X1, [X23]
	020 Move X0, X21
	021 Move X8, [X8+192]
	022 Move X2, [X8+176]
	023 Call 0x2498EC8, X0, X1
	024 Move W8, [X20+24]
	025 Add X22, X22, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Return 
	034 Call 0x1C17F28
	035 Call 0x1C17F20

Method: System.Void Insert(System.Int32 index, T item)

Disassembly:
	0x02499098 MOV X2, X19
	0x0249909C LDP X0, X8, [X1 + 0x8]
	0x024990A0 BLR X8
	0x024990A4 LDURB W8, [X29 - 0xC]
	0x024990A8 LDR X9, [X22 + 0x28]
	0x024990AC LDUR X10, [X29 - 0x8]
	0x024990B0 CMP W8, 0x0
	0x024990B4 CSET W0, NE
	0x024990B8 CMP X9, X10
	0x024990BC B.NE 0x24990DC
	0x024990C0 ADD X31, X29, 0x0
	0x024990C4 LDP X20, X19, [X31 + 0x30]
	0x024990C8 LDP X22, X21, [X31 + 0x20]
	0x024990CC LDR X23, [X31 + 0x10]
	0x024990D0 LDP X29, X30, [X31], #0x40
	0x024990D4 RET
	0x024990D8 BL 0x1C16F20
	0x024990DC BL 0x3EB1B20
	0x024990E0 STP X29, X30, [X31 - 0x40]!
	0x024990E4 STR X23, [X31 + 0x10]
	0x024990E8 STP X22, X21, [X31 + 0x20]
	0x024990EC STP X20, X19, [X31 + 0x30]
	0x024990F0 ADD X29, X31, 0x0
	0x024990F4 SUB X31, X31, 0x20
	0x024990F8 MRS X22, 0xC000
	0x024990FC LDR X8, [X22 + 0x28]
	0x02499100 MOV X21, X2
	0x02499104 ADD X9, X31, 0x0
	0x02499108 STUR X8, [X29 - 0x8]
	0x0249910C STUR X1, [X29 - 0x20]
	0x02499110 LDR X23, [X2 + 0x20]
	0x02499114 LDR X8, [X23 + 0xC0]
	0x02499118 LDR X8, [X8 + 0x28]
	0x0249911C LDR W2, [X8 + 0xFC]
	0x02499120 ADD X10, X2, 0xF
	0x02499124 AND X10, X10, 0x1FFFFFFFF
	0x02499128 SUB X20, X9, X10
	0x0249912C ADD X31, X20, 0x0
	0x02499130 LDR W8, [X8 + 0x28]
	0x02499134 LDR X19, [X0 + 0x10]
	0x02499138 MOV X0, X20
	0x0249913C CMP W8, 0x0
	0x02499140 SUB X8, X29, 0x20
	0x02499144 CSEL X1, X1, X8, LT
	0x02499148 BL 0x3EB1AC0
	0x0249914C CBZ X19, 0x2499218
	0x02499150 LDR X8, [X23 + 0xC0]
	0x02499154 LDR X1, [X8 + 0x18]
	0x02499158 LDRB W9, [X1 + 0x135]
	0x0249915C TBNZ X9, 0x0, 0x2499174
	0x02499160 MOV X0, X1
	0x02499164 BL 0x1C5C684
	0x02499168 LDR X8, [X21 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, [X0+16]
	008 Compare X23, 0
	009 JumpIfEqual {63}
	010 Move X8, [X3+32]
	011 Move W20, W1
	012 Move X22, X3
	013 Move X19, X2
	014 Move X8, [X8+192]
	015 Move X21, X0
	016 Move X1, [X8+24]
	017 Move W8, [X1+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X1
	023 Call 0x1C5D684
	024 Move X1, X0
	025 Move X8, [X23]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 3
	036 Move X0, X23
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 3
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X3, [X0+8]
	044 Move X0, X23
	045 Move W1, W20
	046 Move X2, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X22+32]
	049 Move X1, [X21+24]
	050 Move X0, X21
	051 Move W2, W20
	052 Move X8, [X8+192]
	053 Move X3, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X4, [X8+48]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Call 0x2498D0C, X0, X1, X2, X3
	062 Return 
	063 Call 0x1C17F20

Method: System.Boolean Remove(T item)

Disassembly:
	0x0249916C MOV X1, X0
	0x02499170 LDR X8, [X8 + 0xC0]
	0x02499174 LDR X8, [X8 + 0x28]
	0x02499178 LDR W8, [X8 + 0x28]
	0x0249917C TBNZ X8, 0x1F, 0x2499184
	0x02499180 LDR X20, [X20]
	0x02499184 LDR X8, [X19]
	0x02499188 LDRH W9, [X8 + 0x12E]
	0x0249918C CBZ X9, 0x24991B0
	0x02499190 LDR X10, [X8 + 0xB0]
	0x02499194 ADD X10, X10, 0x8
	0x02499198 LDUR X11, [X10 - 0x8]
	0x0249919C CMP X11, X1
	0x024991A0 B.EQ 0x24991C0
	0x024991A4 SUBS X9, X9, 0x1
	0x024991A8 ADD X10, X10, 0x10
	0x024991AC B.NE 0x2499198
	0x024991B0 MOVZ W2, 0x2
	0x024991B4 MOV X0, X19
	0x024991B8 BL 0x1C5C788
	0x024991BC B 0x24991D0
	0x024991C0 LDR W9, [X10]
	0x024991C4 ADD W9, W9, 0x2
	0x024991C8 ADD X8, X8, W9, 0x4, SXTW
	0x024991CC ADD X0, X8, 0x138
	0x024991D0 STUR X20, [X29 - 0x18]
	0x024991D4 LDR X1, [X0 + 0x8]
	0x024991D8 SUB X3, X29, 0x18
	0x024991DC SUB X4, X29, 0xC
	0x024991E0 MOV X2, X19
	0x024991E4 LDP X0, X8, [X1 + 0x8]
	0x024991E8 BLR X8
	0x024991EC LDUR W0, [X29 - 0xC]
	0x024991F0 LDR X8, [X22 + 0x28]
	0x024991F4 LDUR X9, [X29 - 0x8]
	0x024991F8 CMP X8, X9
	0x024991FC B.NE 0x249921C
	0x02499200 ADD X31, X29, 0x0
	0x02499204 LDP X20, X19, [X31 + 0x30]
	0x02499208 LDP X22, X21, [X31 + 0x20]
	0x0249920C LDR X23, [X31 + 0x10]
	0x02499210 LDP X29, X30, [X31], #0x40
	0x02499214 RET
	0x02499218 BL 0x1C16F20
	0x0249921C BL 0x3EB1B20
	0x02499220 STP X29, X30, [X31 - 0x60]!
	0x02499224 STP X28, X27, [X31 + 0x10]
	0x02499228 STP X26, X25, [X31 + 0x20]
	0x0249922C STP X24, X23, [X31 + 0x30]
	0x02499230 STP X22, X21, [X31 + 0x40]
	0x02499234 STP X20, X19, [X31 + 0x50]
	0x02499238 ADD X29, X31, 0x0
	0x0249923C SUB X31, X31, 0x30
	0x02499240 MRS X27, 0xC000
	0x02499244 LDR X8, [X27 + 0x28]
	0x02499248 ADD X9, X31, 0x0
	0x0249924C MOV X23, X2
	0x02499250 MOV X21, X1
	0x02499254 STUR X8, [X29 - 0x8]
	0x02499258 STUR X1, [X29 - 0x30]
	0x0249925C LDR X28, [X2 + 0x20]
	0x02499260 MOV X19, X0
	0x02499264 LDR X8, [X28 + 0xC0]
	0x02499268 LDR X8, [X8 + 0x28]
	0x0249926C LDR W22, [X8 + 0xFC]
	0x02499270 ADD X10, X22, 0xF
	0x02499274 AND X10, X10, 0x1FFFFFFFF
	0x02499278 SUB X25, X9, X10
	0x0249927C ADD X31, X25, 0x0
	0x02499280 ADD X9, X31, 0x0
	0x02499284 SUB X24, X9, X10
	0x02499288 ADD X31, X24, 0x0
	0x0249928C ADD X9, X31, 0x0
	0x02499290 SUB X20, X9, X10
	0x02499294 ADD X31, X20, 0x0
	0x02499298 LDR W8, [X8 + 0x28]
	0x0249929C LDR X26, [X0 + 0x10]
	0x024992A0 MOV X0, X25
	0x024992A4 MOV X2, X22
	0x024992A8 CMP W8, 0x0
	0x024992AC SUB X8, X29, 0x30
	0x024992B0 CSEL X1, X1, X8, LT
	0x024992B4 BL 0x3EB1AC0
	0x024992B8 CBZ X26, 0x24994BC
	0x024992BC LDR X8, [X28 + 0xC0]
	0x024992C0 LDR X1, [X8 + 0x40]
	0x024992C4 LDRB W9, [X1 + 0x135]
	0x024992C8 TBNZ X9, 0x0, 0x24992E0
	0x024992CC MOV X0, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, [X0+16]
	008 Compare X22, 0
	009 JumpIfEqual {104}
	010 Move X8, [X2+32]
	011 Move X19, X1
	012 Move X21, X2
	013 Move X20, X0
	014 Move X8, [X8+192]
	015 Move X1, [X8+24]
	016 Move W8, [X1+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X1
	022 Call 0x1C5D684
	023 Move X1, X0
	024 Move X8, [X22]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 2
	035 Move X0, X22
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 2
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X22
	044 Move X1, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X23, [X20+16]
	047 Compare X23, 0
	048 JumpIfEqual {104}
	049 Move X8, [X21+32]
	050 Move W22, W0
	051 Move X8, [X8+192]
	052 Move X1, [X8+64]
	053 Move W8, [X1+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X1
	059 Call 0x1C5D684
	060 Move X1, X0
	061 Move X8, [X23]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 6
	072 Move X0, X23
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 6
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X2, [X0+8]
	080 Move X0, X23
	081 Move X1, X19
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move W23, W0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {96}
	088 Move X8, [X21+32]
	089 Move X1, [X20+32]
	090 Move X0, X20
	091 Move W2, W22
	092 Move X8, [X8+192]
	093 Move X3, X19
	094 Move X4, [X8+48]
	095 Call 0x2498D0C, X0, X1, X2, X3
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 And W0, W23, 1
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return X0
	104 Call 0x1C17F20

Method: System.Int32 Remove(T[] items)

Disassembly:
	0x024992D0 BL 0x1C5C684
	0x024992D4 LDR X8, [X23 + 0x20]
	0x024992D8 MOV X1, X0
	0x024992DC LDR X8, [X8 + 0xC0]
	0x024992E0 LDR X8, [X8 + 0x28]
	0x024992E4 LDR W8, [X8 + 0x28]
	0x024992E8 TBNZ X8, 0x1F, 0x24992F0
	0x024992EC LDR X25, [X25]
	0x024992F0 LDR X8, [X26]
	0x024992F4 LDRH W9, [X8 + 0x12E]
	0x024992F8 CBZ X9, 0x249931C
	0x024992FC LDR X10, [X8 + 0xB0]
	0x02499300 ADD X10, X10, 0x8
	0x02499304 LDUR X11, [X10 - 0x8]
	0x02499308 CMP X11, X1
	0x0249930C B.EQ 0x249932C
	0x02499310 SUBS X9, X9, 0x1
	0x02499314 ADD X10, X10, 0x10
	0x02499318 B.NE 0x2499304
	0x0249931C MOVZ W2, 0x2
	0x02499320 MOV X0, X26
	0x02499324 BL 0x1C5C788
	0x02499328 B 0x249933C
	0x0249932C LDR W9, [X10]
	0x02499330 ADD W9, W9, 0x2
	0x02499334 ADD X8, X8, W9, 0x4, SXTW
	0x02499338 ADD X0, X8, 0x138
	0x0249933C STUR X25, [X29 - 0x28]
	0x02499340 LDR X1, [X0 + 0x8]
	0x02499344 SUB X3, X29, 0x28
	0x02499348 MOV X2, X26
	0x0249934C MOV X4, X25
	0x02499350 LDP X0, X8, [X1 + 0x8]
	0x02499354 BLR X8
	0x02499358 LDR X28, [X23 + 0x20]
	0x0249935C LDP X25, X26, [X19 + 0x10]
	0x02499360 MOV X0, X24
	0x02499364 MOV X2, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {31}
	010 Move X8, [X1+24]
	011 Move X20, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X19, X2
	014 Move X21, X0
	015 Move X23, X31
	016 Move W22, W31
	017 And X8, X8, 0
	018 Add X24, X20, 32
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, [X19+32]
	021 Move X1, [X24]
	022 Move X0, X21
	023 Move X8, [X8+192]
	024 Move X2, [X8+200]
	025 Call 0x249916C, X0, X1
	026 Move W8, [X20+24]
	027 And W9, W0, 1
	028 Add X23, X23, 1
	029 Add W22, W22, W9
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W22, W31
	032 Move W0, W22
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X22, [X31+32]
	036 Move X21, [X31+40]
	037 Move X24, [X31+16]
	038 Move X23, [X31+24]
	039 Move X30, [X31+64]
	040 Return X0
	041 Call 0x1C17F28

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x02499368 LDR X8, [X28 + 0xC0]
	0x0249936C LDR X8, [X8 + 0x28]
	0x02499370 LDR W8, [X8 + 0x28]
	0x02499374 CMP W8, 0x0
	0x02499378 SUB X8, X29, 0x30
	0x0249937C CSEL X1, X21, X8, LT
	0x02499380 BL 0x3EB1AC0
	0x02499384 CBZ X25, 0x24994BC
	0x02499388 LDR X8, [X28 + 0xC0]
	0x0249938C LDR X1, [X8 + 0x18]
	0x02499390 LDRB W9, [X1 + 0x135]
	0x02499394 TBNZ X9, 0x0, 0x24993AC
	0x02499398 MOV X0, X1
	0x0249939C BL 0x1C5C684
	0x024993A0 LDR X8, [X23 + 0x20]
	0x024993A4 MOV X1, X0
	0x024993A8 LDR X8, [X8 + 0xC0]
	0x024993AC LDR X8, [X8 + 0x28]
	0x024993B0 LDR W8, [X8 + 0x28]
	0x024993B4 TBNZ X8, 0x1F, 0x24993BC
	0x024993B8 LDR X24, [X24]
	0x024993BC LDR X8, [X25]
	0x024993C0 LDRH W9, [X8 + 0x12E]
	0x024993C4 CBZ X9, 0x24993E8
	0x024993C8 LDR X10, [X8 + 0xB0]
	0x024993CC ADD X10, X10, 0x8
	0x024993D0 LDUR X11, [X10 - 0x8]
	0x024993D4 CMP X11, X1
	0x024993D8 B.EQ 0x24993F8
	0x024993DC SUBS X9, X9, 0x1
	0x024993E0 ADD X10, X10, 0x10
	0x024993E4 B.NE 0x24993D0
	0x024993E8 MOVZ W2, 0x2
	0x024993EC MOV X0, X25
	0x024993F0 BL 0x1C5C788
	0x024993F4 B 0x2499408
	0x024993F8 LDR W9, [X10]
	0x024993FC ADD W9, W9, 0x2
	0x02499400 ADD X8, X8, W9, 0x4, SXTW
	0x02499404 ADD X0, X8, 0x138
	0x02499408 STUR X24, [X29 - 0x28]
	0x0249940C LDR X1, [X0 + 0x8]
	0x02499410 SUB X3, X29, 0x28
	0x02499414 SUB X4, X29, 0xC
	0x02499418 MOV X2, X25
	0x0249941C LDP X0, X8, [X1 + 0x8]
	0x02499420 SUB X24, X29, 0xC
	0x02499424 BLR X8
	0x02499428 LDR X25, [X23 + 0x20]
	0x0249942C LDUR W23, [X29 - 0xC]
	0x02499430 MOV X0, X20
	0x02499434 MOV X2, X22
	0x02499438 LDR X8, [X25 + 0xC0]
	0x0249943C LDR X8, [X8 + 0x28]
	0x02499440 LDR W8, [X8 + 0x28]
	0x02499444 CMP W8, 0x0
	0x02499448 SUB X8, X29, 0x30
	0x0249944C CSEL X1, X21, X8, LT
	0x02499450 BL 0x3EB1AC0
	0x02499454 LDR X8, [X25 + 0xC0]
	0x02499458 LDP X9, X1, [X8 + 0x28]
	0x0249945C LDR W8, [X9 + 0x28]
	0x02499460 LDR X0, [X1]
	0x02499464 TBNZ X8, 0x1F, 0x249946C
	0x02499468 LDR X20, [X20]
	0x0249946C STUR W23, [X29 - 0xC]
	0x02499470 STP X26, X24, [X29 - 0x28]
	0x02499474 STUR X20, [X29 - 0x18]
	0x02499478 LDR X8, [X1 + 0x10]
	0x0249947C SUB X3, X29, 0x28
	0x02499480 MOV X2, X19
	0x02499484 MOV X4, X20
	0x02499488 BLR X8
	0x0249948C LDR X8, [X27 + 0x28]
	0x02499490 LDUR X9, [X29 - 0x8]
	0x02499494 CMP X8, X9
	0x02499498 B.NE 0x24994C0
	0x0249949C ADD X31, X29, 0x0
	0x024994A0 LDP X20, X19, [X31 + 0x50]
	0x024994A4 LDP X22, X21, [X31 + 0x40]
	0x024994A8 LDP X24, X23, [X31 + 0x30]
	0x024994AC LDP X26, X25, [X31 + 0x20]
	0x024994B0 LDP X28, X27, [X31 + 0x10]
	0x024994B4 LDP X29, X30, [X31], #0x60

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, [X0+16]
	008 Compare X22, 0
	009 JumpIfEqual {97}
	010 Move X8, [X2+32]
	011 Move W19, W1
	012 Move X21, X2
	013 Move X20, X0
	014 Move X8, [X8+192]
	015 Move X1, [X8+24]
	016 Move W8, [X1+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {24}
	021 Move X0, X1
	022 Call 0x1C5D684
	023 Move X1, X0
	024 Move X8, [X22]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move X0, X22
	035 Move W2, W31
	036 Call 0x1C5D788
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Add X8, X8, X9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X22
	043 Move W1, W19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X23, [X20+16]
	046 Compare X23, 0
	047 JumpIfEqual {97}
	048 Move X8, [X21+32]
	049 Move X22, X0
	050 Move X8, [X8+192]
	051 Move X1, [X8+24]
	052 Move W8, [X1+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {60}
	057 Move X0, X1
	058 Call 0x1C5D684
	059 Move X1, X0
	060 Move X8, [X23]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 4
	071 Move X0, X23
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 4
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X2, [X0+8]
	079 Move X0, X23
	080 Move W1, W19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X21+32]
	083 Move X1, [X20+32]
	084 Move X0, X20
	085 Move W2, W19
	086 Move X8, [X8+192]
	087 Move X3, X22
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X4, [X8+48]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Call 0x2498D0C, X0, X1, X2, X3
	096 Return 
	097 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x024994B8 RET
	0x024994BC BL 0x1C16F20
	0x024994C0 BL 0x3EB1B20
	0x024994C4 STP X29, X30, [X31 - 0x60]!
	0x024994C8 STR X27, [X31 + 0x10]
	0x024994CC STP X26, X25, [X31 + 0x20]
	0x024994D0 STP X24, X23, [X31 + 0x30]
	0x024994D4 STP X22, X21, [X31 + 0x40]
	0x024994D8 STP X20, X19, [X31 + 0x50]
	0x024994DC ADD X29, X31, 0x0
	0x024994E0 SUB X31, X31, 0x10
	0x024994E4 MRS X26, 0xC000
	0x024994E8 LDR X8, [X26 + 0x28]
	0x024994EC MOV X19, X2
	0x024994F0 MOV X20, X1
	0x024994F4 MOV X22, X0
	0x024994F8 STUR X8, [X29 - 0x8]
	0x024994FC LDR X8, [X2 + 0x20]
	0x02499500 LDR X8, [X8 + 0xC0]
	0x02499504 LDR X8, [X8 + 0x28]
	0x02499508 LDR W21, [X8 + 0xFC]
	0x0249950C ADD X8, X31, 0x0
	0x02499510 ADD X9, X21, 0xF
	0x02499514 AND X9, X9, 0x1FFFFFFFF
	0x02499518 SUB X23, X8, X9
	0x0249951C ADD X31, X23, 0x0
	0x02499520 ADD X8, X31, 0x0
	0x02499524 SUB X24, X8, X9
	0x02499528 ADD X31, X24, 0x0
	0x0249952C ADD X8, X31, 0x0
	0x02499530 SUB X25, X8, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+216]
	009 Call 0x2498BA8, X0
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X19+32]
	012 Move X0, X20
	013 Move X8, [X8+192]
	014 Move X1, [X8+216]
	015 Call 0x2498BA8, X0
	016 Move X8, [X19+32]
	017 Subtract W1, W0, 1
	018 Move X0, X20
	019 Move X8, [X8+192]
	020 Move X2, [X8+224]
	021 Call 0x2499368, X0, X1
	022 Move X8, [X19+32]
	023 Move X0, X20
	024 Move X8, [X8+192]
	025 Move X1, [X8+216]
	026 Call 0x2498BA8, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 

Method: System.Void CopyTo(T[] array, System.Int32 arrayIndex)

Disassembly:
	0x02499534 ADD X31, X25, 0x0
	0x02499538 MOV X0, X25
	0x0249953C MOV W1, W31
	0x02499540 MOV X2, X21
	0x02499544 BL 0x3EB1B10
	0x02499548 CBZ X20, 0x2499624
	0x0249954C LDR X8, [X20 + 0x18]
	0x02499550 CMP W8, 0x1
	0x02499554 B.LT 0x24995F0
	0x02499558 MOV X27, X31
	0x0249955C AND X8, X8, 0x0
	0x02499560 CMP X27, W8, UXTW
	0x02499564 B.CS 0x2499620
	0x02499568 LDR X8, [X20]
	0x0249956C MOV X0, X23
	0x02499570 MOV X2, X21
	0x02499574 LDR W8, [X8 + 0x104]
	0x02499578 NOP
	0x0249957C MADD X8, X27, X8, X20
	0x02499580 ADD X1, X8, 0x20
	0x02499584 BL 0x3EB1AC0
	0x02499588 MOV X0, X25
	0x0249958C MOV X1, X23
	0x02499590 MOV X2, X21
	0x02499594 BL 0x3EB1AC0
	0x02499598 MOV X0, X24
	0x0249959C MOV X1, X25
	0x024995A0 MOV X2, X21
	0x024995A4 BL 0x3EB1AC0
	0x024995A8 LDR X8, [X19 + 0x20]
	0x024995AC MOV X4, X24
	0x024995B0 LDR X8, [X8 + 0xC0]
	0x024995B4 LDR X9, [X8 + 0x28]
	0x024995B8 LDR W9, [X9 + 0x28]
	0x024995BC TBNZ X9, 0x1F, 0x24995C4
	0x024995C0 LDR X4, [X24]
	0x024995C4 LDR X1, [X8 + 0xB0]
	0x024995C8 SUB X3, X29, 0x10
	0x024995CC MOV X2, X22
	0x024995D0 LDR X0, [X1]
	0x024995D4 STUR X4, [X29 - 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+16]
	006 Compare X21, 0
	007 JumpIfEqual {48}
	008 Move X8, [X3+32]
	009 Move X20, X1
	010 Move W19, W2
	011 Move X8, [X8+192]
	012 Move X1, [X8+64]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X8, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 5
	032 Move X0, X21
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 5
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X4, [X0]
	039 Move X3, [X0+8]
	040 Move X1, X20
	041 Move W2, W19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X0, X21
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator()

Disassembly:
	0x024995D8 LDR X8, [X1 + 0x10]
	0x024995DC BLR X8
	0x024995E0 LDR W8, [X20 + 0x18]
	0x024995E4 ADD X27, X27, 0x1
	0x024995E8 CMP X27, W8, SXTW
	0x024995EC B.LT 0x2499560
	0x024995F0 LDR X8, [X26 + 0x28]
	0x024995F4 LDUR X9, [X29 - 0x8]
	0x024995F8 CMP X8, X9
	0x024995FC B.NE 0x2499628
	0x02499600 ADD X31, X29, 0x0
	0x02499604 LDP X20, X19, [X31 + 0x50]
	0x02499608 LDP X22, X21, [X31 + 0x40]
	0x0249960C LDP X24, X23, [X31 + 0x30]
	0x02499610 LDP X26, X25, [X31 + 0x20]
	0x02499614 LDR X27, [X31 + 0x10]
	0x02499618 LDP X29, X30, [X31], #0x60
	0x0249961C RET
	0x02499620 BL 0x1C16F28
	0x02499624 BL 0x1C16F20
	0x02499628 BL 0x3EB1B20
	0x0249962C STP X29, X30, [X31 - 0x60]!
	0x02499630 STP X28, X27, [X31 + 0x10]
	0x02499634 STP X26, X25, [X31 + 0x20]
	0x02499638 STP X24, X23, [X31 + 0x30]
	0x0249963C STP X22, X21, [X31 + 0x40]
	0x02499640 STP X20, X19, [X31 + 0x50]
	0x02499644 ADD X29, X31, 0x0
	0x02499648 SUB X31, X31, 0x30
	0x0249964C MRS X27, 0xC000
	0x02499650 LDR X8, [X27 + 0x28]
	0x02499654 ADD X9, X31, 0x0
	0x02499658 MOV X23, X3
	0x0249965C MOV X22, X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Compare X19, 0
	005 JumpIfEqual {39}
	006 Move X8, [X1+32]
	007 Move X8, [X8+192]
	008 Move X1, [X8+104]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move X0, X19
	028 Move W2, W31
	029 Call 0x1C5D788
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Add X8, X8, X9
	032 Add X0, X8, 312
	033 Move X2, [X0]
	034 Move X1, [X0+8]
	035 Move X0, X19
	036 Move X30, [X31+16]
	037 Move X19, [X31+24]
	038 CallNoReturn X2
	039 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x02499660 STUR X8, [X29 - 0x8]
	0x02499664 STUR X2, [X29 - 0x30]
	0x02499668 LDR X28, [X3 + 0x20]
	0x0249966C MOV W20, W1

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+256]
	004 Call 0x24995D8, X0
	005 Return X0

