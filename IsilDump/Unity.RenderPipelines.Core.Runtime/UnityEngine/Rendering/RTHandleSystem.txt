Type: UnityEngine.Rendering.RTHandleSystem

Method: UnityEngine.Rendering.RTHandleProperties get_rtHandleProperties()

Disassembly:
	0x039D8580 BL 0x1C16E04
	0x039D8584 MOV X22, X0
	0x039D8588 CBZ X0, 0x39D85A0
	0x039D858C LDR X8, [X20]
	0x039D8590 MOV X0, X22

ISIL:
	001 Move V1, [X0+64]
	002 Move V0, [X0+80]
	003 Move V2, [X0+3]
	004 Move [X8+16], V1
	005 Move [X8+24], V0
	006 Move [X8], V2
	007 Return X0

Method: System.Void .ctor()

Disassembly:
	0x039D3E84 LDR X20, [X20 + 0x8]
	0x039D3E88 MOV X19, X0
	0x039D3E8C TBNZ X8, 0x0, 0x39D3F70
	0x039D3E90 ADRP X0, 0x780000
	0x039D3E94 LDR X0, [X0 + 0x10]
	0x039D3E98 BL 0x1C16CF4
	0x039D3E9C ADRP X0, 0x780000
	0x039D3EA0 LDR X0, [X0 + 0x18]
	0x039D3EA4 BL 0x1C16CF4
	0x039D3EA8 ADRP X0, 0x780000
	0x039D3EAC LDR X0, [X0 + 0x20]
	0x039D3EB0 BL 0x1C16CF4
	0x039D3EB4 ADRP X0, 0x780000
	0x039D3EB8 LDR X0, [X0 + 0x28]
	0x039D3EBC BL 0x1C16CF4
	0x039D3EC0 ADRP X0, 0x780000
	0x039D3EC4 LDR X0, [X0 + 0x30]
	0x039D3EC8 BL 0x1C16CF4
	0x039D3ECC ADRP X0, 0x780000
	0x039D3ED0 LDR X0, [X0 + 0x38]
	0x039D3ED4 BL 0x1C16CF4
	0x039D3ED8 ADRP X0, 0x780000
	0x039D3EDC LDR X0, [X0 + 0x40]
	0x039D3EE0 BL 0x1C16CF4
	0x039D3EE4 ADRP X0, 0x780000
	0x039D3EE8 LDR X0, [X0 + 0x48]
	0x039D3EEC BL 0x1C16CF4
	0x039D3EF0 ADRP X0, 0x780000
	0x039D3EF4 LDR X0, [X0 + 0x50]
	0x039D3EF8 BL 0x1C16CF4
	0x039D3EFC ADRP X0, 0x780000
	0x039D3F00 LDR X0, [X0 + 0x58]
	0x039D3F04 BL 0x1C16CF4
	0x039D3F08 ADRP X0, 0x780000
	0x039D3F0C LDR X0, [X0 + 0x60]
	0x039D3F10 BL 0x1C16CF4
	0x039D3F14 ADRP X0, 0x780000
	0x039D3F18 LDR X0, [X0 + 0x68]
	0x039D3F1C BL 0x1C16CF4
	0x039D3F20 ADRP X0, 0x780000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA0F000
	007 Move X22, 0x780000
	008 Move X21, 0x780000
	009 Move W8, [X20+3402]
	010 Move X22, [X22+4016]
	011 Move X21, [X21+4024]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x780000
	018 Move X0, [X0+4024]
	019 Call 0x1C17CF4
	020 Move X0, 0x780000
	021 Move X0, [X0+4016]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3402], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X1, [X21]
	031 Move X20, X0
	032 Call HashSet`1<Object>..ctor, X0
	033 Move [X19+24], X20
	034 Move X0, [X22]
	035 Call 0x1C17F10
	036 Move X1, [X21]
	037 Move X20, X0
	038 Call HashSet`1<Object>..ctor, X0
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X19+40], X20
	041 Move [X19+96], D0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Void Dispose()

Disassembly:
	0x039D3DD0 LDR X8, [X8]
	0x039D3DD4 MOV W2, W20

ISIL:
	001 Move W1, 1
	002 Call RTHandleSystem.Dispose, X0, X1
	003 Return 

Method: System.Void Initialize(System.Int32 width, System.Int32 height)

Disassembly:
	0x039D7D04 LDR X8, [X19]
	0x039D7D08 MOV W21, W0
	0x039D7D0C MOV X0, X19
	0x039D7D10 LDP X9, X1, [X8 + 0x1A8]
	0x039D7D14 BLR X9
	0x039D7D18 MOV W22, W0
	0x039D7D1C MOV X0, X19
	0x039D7D20 MOV X1, X31
	0x039D7D24 BL 0x3C205C8
	0x039D7D28 MOV W23, W0
	0x039D7D2C MOV X0, X19
	0x039D7D30 MOV X1, X31
	0x039D7D34 BL 0x3C201A0
	0x039D7D38 LDR X8, [X19]
	0x039D7D3C MOV W24, W0
	0x039D7D40 MOV X0, X19
	0x039D7D44 LDP X9, X1, [X8 + 0x1C8]
	0x039D7D48 BLR X9
	0x039D7D4C LDR X25, [X20 + 0x58]
	0x039D7D50 MOV W26, W0
	0x039D7D54 MOV X0, X19
	0x039D7D58 MOV X1, X31
	0x039D7D5C BL 0x3C20224
	0x039D7D60 LDRB W29, [X20 + 0x50]
	0x039D7D64 MOV W20, W0
	0x039D7D68 MOV X0, X19
	0x039D7D6C MOV X1, X31
	0x039D7D70 BL 0x3C20648
	0x039D7D74 MOV W27, W0
	0x039D7D78 MOV X0, X19
	0x039D7D7C MOV X1, X31
	0x039D7D80 BL 0x3C20750
	0x039D7D84 LDR X8, [X28]
	0x039D7D88 MOV W28, W0
	0x039D7D8C LDR W9, [X8 + 0xE0]
	0x039D7D90 CBNZ W9, 0x39D7D9C
	0x039D7D94 MOV X0, X8
	0x039D7D98 BL 0x1C16DFC
	0x039D7D9C CMP W29, 0x0
	0x039D7DA0 CSET W7, NE
	0x039D7DA4 AND W8, W28, 0x1
	0x039D7DA8 AND W6, W20, 0x1
	0x039D7DAC MOV W0, W21
	0x039D7DB0 MOV W1, W22
	0x039D7DB4 MOV W2, W23
	0x039D7DB8 MOV W3, W24
	0x039D7DBC MOV W4, W26
	0x039D7DC0 MOV X5, X25
	0x039D7DC4 STR X31, [X31 + 0x10]
	0x039D7DC8 STRB W8, [X31 + 0x8]
	0x039D7DCC STR W27, [X31]
	0x039D7DD0 BL 0x39E8760
	0x039D7DD4 MOV X1, X0
	0x039D7DD8 MOV X0, X19
	0x039D7DDC MOV X2, X31
	0x039D7DE0 BL 0x3C38A84
	0x039D7DE4 MOV X0, X19
	0x039D7DE8 LDP X20, X19, [X31 + 0x70]
	0x039D7DEC LDP X22, X21, [X31 + 0x60]
	0x039D7DF0 LDP X24, X23, [X31 + 0x50]
	0x039D7DF4 LDP X26, X25, [X31 + 0x40]
	0x039D7DF8 LDP X28, X27, [X31 + 0x30]
	0x039D7DFC LDP X29, X30, [X31 + 0x20]
	0x039D7E00 MOV X1, X31
	0x039D7E04 ADD X31, X31, 0x80
	0x039D7E08 B 0x3C20A14
	0x039D7E0C BL 0x1C16F20
	0x039D7E10 LDR W0, [X0 + 0x60]
	0x039D7E14 RET
	0x039D7E18 LDR W0, [X0 + 0x64]
	0x039D7E1C RET
	0x039D7E20 SUB X31, X31, 0xF0
	0x039D7E24 STR D8, [X31 + 0x80]
	0x039D7E28 STP X29, X30, [X31 + 0x90]
	0x039D7E2C STP X28, X27, [X31 + 0xA0]
	0x039D7E30 STP X26, X25, [X31 + 0xB0]
	0x039D7E34 STP X24, X23, [X31 + 0xC0]
	0x039D7E38 STP X22, X21, [X31 + 0xD0]
	0x039D7E3C STP X20, X19, [X31 + 0xE0]
	0x039D7E40 ADRP X19, 0xA0A000
	0x039D7E44 LDRB W8, [X19 + 0xD55]
	0x039D7E48 LDR W24, [X31 + 0x120]
	0x039D7E4C MOV V8.16B, V0.16B
	0x039D7E50 MOV W22, W5
	0x039D7E54 MOV W28, W4
	0x039D7E58 MOV W27, W3
	0x039D7E5C MOV X20, X0
	0x039D7E60 STP W6, W7, [X31 + 0x2C]
	0x039D7E64 STP W1, W2, [X31 + 0x88]
	0x039D7E68 TBNZ X8, 0x0, 0x39D7EC8
	0x039D7E6C ADRP X0, 0x744000
	0x039D7E70 LDR X0, [X0 + 0x8F8]
	0x039D7E74 BL 0x1C16CF4
	0x039D7E78 ADRP X0, 0x71C000
	0x039D7E7C LDR X0, [X0 + 0xA28]
	0x039D7E80 BL 0x1C16CF4
	0x039D7E84 ADRP X0, 0x77B000
	0x039D7E88 LDR X0, [X0 + 0xF40]
	0x039D7E8C BL 0x1C16CF4
	0x039D7E90 ADRP X0, 0x77C000
	0x039D7E94 LDR X0, [X0 + 0xC0]
	0x039D7E98 BL 0x1C16CF4
	0x039D7E9C ADRP X0, 0x71E000
	0x039D7EA0 LDR X0, [X0 + 0x130]
	0x039D7EA4 BL 0x1C16CF4
	0x039D7EA8 ADRP X0, 0x77C000
	0x039D7EAC LDR X0, [X0 + 0x130]
	0x039D7EB0 BL 0x1C16CF4
	0x039D7EB4 ADRP X0, 0x77C000
	0x039D7EB8 LDR X0, [X0 + 0xC8]
	0x039D7EBC BL 0x1C16CF4
	0x039D7EC0 MOVZ W8, 0x1
	0x039D7EC4 STRB W8, [X19 + 0xD55]
	0x039D7EC8 LDRB W19, [X31 + 0x128]
	0x039D7ECC CMP W24, 0x1
	0x039D7ED0 CSET W21, NE
	0x039D7ED4 B.NE 0x39D7F0C
	0x039D7ED8 TBZ X19, 0x0, 0x39D7F0C
	0x039D7EDC ADRP X8, 0x71C000
	0x039D7EE0 LDR X8, [X8 + 0xA28]
	0x039D7EE4 LDR X0, [X8]
	0x039D7EE8 LDR W8, [X0 + 0xE0]
	0x039D7EEC CBNZ W8, 0x39D7EF4
	0x039D7EF0 BL 0x1C16DFC
	0x039D7EF4 ADRP X8, 0x77C000
	0x039D7EF8 LDR X8, [X8 + 0xC8]
	0x039D7EFC MOV X1, X31
	0x039D7F00 LDR X0, [X8]
	0x039D7F04 BL 0x3C06A04
	0x039D7F08 MOV W19, W31
	0x039D7F0C LDR W9, [X31 + 0x140]
	0x039D7F10 LDR W8, [X31 + 0x138]
	0x039D7F14 LDRB W23, [X31 + 0xF8]
	0x039D7F18 CMP W24, 0x1
	0x039D7F1C STP W8, W9, [X31 + 0x34]
	0x039D7F20 LDR W8, [X31 + 0x118]
	0x039D7F24 STP W21, W8, [X31 + 0x24]
	0x039D7F28 LDR W8, [X31 + 0xF0]
	0x039D7F2C STR W8, [X31 + 0x4C]
	0x039D7F30 B.EQ 0x39D7F68
	0x039D7F34 TBZ X23, 0x0, 0x39D7F68
	0x039D7F38 ADRP X8, 0x71C000
	0x039D7F3C LDR X8, [X8 + 0xA28]
	0x039D7F40 LDR X0, [X8]
	0x039D7F44 LDR W8, [X0 + 0xE0]
	0x039D7F48 CBNZ W8, 0x39D7F50
	0x039D7F4C BL 0x1C16DFC
	0x039D7F50 ADRP X8, 0x77C000
	0x039D7F54 LDR X8, [X8 + 0x130]
	0x039D7F58 MOV X1, X31
	0x039D7F5C LDR X0, [X8]
	0x039D7F60 BL 0x3C06A04
	0x039D7F64 MOV W23, W31
	0x039D7F68 STR X20, [X31 + 0x40]
	0x039D7F6C ADRP X26, 0x71E000
	0x039D7F70 LDRB W21, [X31 + 0x130]
	0x039D7F74 LDRB W8, [X31 + 0x110]
	0x039D7F78 LDRB W25, [X31 + 0x108]
	0x039D7F7C LDRB W29, [X31 + 0x100]
	0x039D7F80 LDR X26, [X26 + 0x130]
	0x039D7F84 STR W22, [X31 + 0x3C]
	0x039D7F88 CBNZ W28, 0x39D80AC
	0x039D7F8C TBNZ X8, 0x0, 0x39D80AC
	0x039D7F90 LDR X0, [X26]
	0x039D7F94 BL 0x1C16F10
	0x039D7F98 LDP W1, W2, [X31 + 0x88]
	0x039D7F9C MOV W3, W31
	0x039D7FA0 MOV W4, W22
	0x039D7FA4 MOV X5, X31
	0x039D7FA8 MOV X26, X0
	0x039D7FAC BL 0x3C216E8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X22, 0xA0B000
	014 Move W8, [X22+3403]
	015 Move W20, W2
	016 Move W21, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x71D000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x77B000
	026 Move X0, [X0+728]
	027 Call 0x1C17CF4
	028 Move X0, 0x77D000
	029 Move X0, [X0+216]
	030 Call 0x1C17CF4
	031 Move X0, 0x77D000
	032 Move X0, [X0+224]
	033 Call 0x1C17CF4
	034 Move X0, 0x77D000
	035 Move X0, [X0+232]
	036 Call 0x1C17CF4
	037 Move X0, 0x77D000
	038 Move X0, [X0+240]
	039 Call 0x1C17CF4
	040 Move X0, 0x77D000
	041 Move X0, [X0+248]
	042 Call 0x1C17CF4
	043 Move X0, 0x77D000
	044 Move X0, [X0+256]
	045 Call 0x1C17CF4
	046 Move X0, 0x77D000
	047 Move X0, [X0+264]
	048 Call 0x1C17CF4
	049 Move X0, 0x77D000
	050 Move X0, [X0+272]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+3403], W8
	054 Move [X31+32], X31
	055 Move [X31+40], X31
	056 Move [X31+48], X31
	057 Move X0, [X19+24]
	058 Compare X0, 0
	059 JumpIfEqual {165}
	060 Move W8, [X0+32]
	061 Compare W8, 0
	062 JumpIfEqual {119}
	063 Move X8, 0x77D000
	064 Move X9, 0x77D000
	065 Move X8, [X8+256]
	066 Move X9, [X9+240]
	067 Move X24, 0x77D000
	068 Move X27, 0x77D000
	069 Move X24, [X24+224]
	070 Move X27, [X27+272]
	071 Move X1, [X9]
	072 Move X26, 0x77D000
	073 Move X25, 0x71D000
	074 Move X28, 0x77D000
	075 Move X23, [X8]
	076 Move X26, [X26+264]
	077 Move X25, [X25+2600]
	078 Move X28, [X28+216]
	079 Add X8, X31, 8
	080 Call HashSet`1<Object>.GetEnumerator, X0
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X8, [X31+24]
	083 Move [X31+2], V0
	084 Move [X31+48], X8
	085 Move X1, [X24]
	086 Move X22, X23
	087 Add X0, X31, 32
	088 Call Enumerator<Object>.MoveNext, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {102}
	093 Move X8, [X31+48]
	094 Compare X8, 0
	095 JumpIfEqual {164}
	096 Move X0, [X27]
	097 Move X2, [X8+88]
	098 Move X1, X22
	099 Move X3, X31
	100 Call String.Format, X0, X1, X2
	101 Move X23, X0
	102 Move X1, [X28]
	103 Add X0, X31, 32
	104 Call Enumerator<Object>.Dispose, X0
	105 Move X0, [X26]
	106 Move X1, X22
	107 Move X2, X31
	108 Call String.Format, X0, X1
	109 Move X8, [X25]
	110 Move X22, X0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X22
	117 Move X1, X31
	118 Call Debug.LogError, X0
	119 Move X22, 0x77B000
	120 Move X22, [X22+728]
	121 Move [X19+96], W21
	122 Move [X19+100], W20
	123 Move X0, [X22]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X20, 0xA0B000
	129 Move W8, [X20+3421]
	130 Compare W8, 0
	131 JumpIfNotEqual {137}
	132 Move X0, 0x77B000
	133 Move X0, [X0+728]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X20+3421], W8
	137 Move X0, [X22]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X22]
	143 Move X8, [X0+184]
	144 Move X0, [X8+48]
	145 Compare X0, 0
	146 JumpIfEqual {165}
	147 Move X1, X31
	148 Call DynamicResolutionHandler.RequestsHardwareDynamicResolution, X0
	149 And W8, W0, 1
	150 Move [X19+16], W8
	151 Move X20, [X31+144]
	152 Move X19, [X31+152]
	153 Move X22, [X31+128]
	154 Move X21, [X31+136]
	155 Move X24, [X31+112]
	156 Move X23, [X31+120]
	157 Move X26, [X31+96]
	158 Move X25, [X31+104]
	159 Move X28, [X31+80]
	160 Move X27, [X31+88]
	161 Move X30, [X31+64]
	162 Add X31, X31, 160
	163 Return 
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Move X23, X0
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X23
	169 Call 0x3EB2AD0
	170 Move X24, [X0]
	171 Call 0x3EB2AE0
	172 Move X8, 0x77D000
	173 Move X8, [X8+216]
	174 Add X0, X31, 32
	175 Move X1, [X8]
	176 Call Enumerator<Object>.Dispose, X0
	177 Compare X24, 0
	178 JumpIfEqual {105}
	179 Move X0, X24
	180 Call 0x1C17F18
	181 Move X24, X31
	182 Move X23, X0
	183 Move X8, 0x77D000
	184 Move X8, [X8+216]
	185 Move X1, [X8]
	186 Add X0, X31, 32
	187 Call Enumerator<Object>.Dispose, X0
	188 Compare X24, 0
	189 JumpIfNotEqual {192}
	190 Move X0, X23
	191 Call 0x1D2D690
	192 Move X0, X24
	193 Call 0x1C17F18
	194 Call 0x1991590

Method: System.Void Initialize(System.Int32 width, System.Int32 height, System.Boolean useLegacyDynamicResControl = False)

Disassembly:
	0x039D8040 MOV X0, X26
	0x039D8044 MOV X2, X31
	0x039D8048 BL 0x3C1ABDC
	0x039D804C MOV X0, X26
	0x039D8050 MOV V0.16B, V8.16B
	0x039D8054 MOV X1, X31
	0x039D8058 BL 0x3C1AC5C
	0x039D805C MOV X0, X26
	0x039D8060 MOV W1, W24
	0x039D8064 MOV X2, X31
	0x039D8068 BL 0x3C20684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W3
	005 Move X19, X0
	006 Call RTHandleSystem.Initialize, X0, X1, X2
	007 Move TEMP, X20
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {13}
	011 Move W8, 1
	012 Move [X19+16], W8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Void Release(UnityEngine.Rendering.RTHandle rth)

Disassembly:
	0x039D35A0 CBNZ X20, 0x39D35AC
	0x039D35A4 MOV X0, X19
	0x039D35A8 BL 0x1D2C690
	0x039D35AC MOV X0, X20

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {6}
	003 Move X0, X1
	004 Call RTHandle.Release, X0
	005 Return 
	006 Return 

Method: System.Void Remove(UnityEngine.Rendering.RTHandle rth)

Disassembly:
	0x039D5BD8 LDR W10, [X31 + 0x9C]
	0x039D5BDC LDR W6, [X31 + 0x8C]
	0x039D5BE0 STR W8, [X31 + 0x60]
	0x039D5BE4 STR W9, [X31 + 0x58]
	0x039D5BE8 STR W10, [X31 + 0x38]
	0x039D5BEC LDP W10, W14, [X31 + 0xE8]
	0x039D5BF0 AND W8, W0, 0x1
	0x039D5BF4 AND W9, W25, 0x1
	0x039D5BF8 AND W11, W23, 0x1
	0x039D5BFC AND W10, W10, 0x1
	0x039D5C00 AND W12, W22, 0x1
	0x039D5C04 AND W13, W21, 0x1
	0x039D5C08 MOV V0.16B, V8.16B
	0x039D5C0C MOV X0, X28
	0x039D5C10 MOV W3, W19
	0x039D5C14 MOV W4, W19
	0x039D5C18 MOV W5, W19
	0x039D5C1C MOV W7, W29
	0x039D5C20 STR W27, [X31 + 0x40]
	0x039D5C24 STR W26, [X31 + 0x10]
	0x039D5C28 STR W14, [X31 + 0x8]
	0x039D5C2C STRB W8, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA0D000
	006 Move W8, [X21+3404]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x77E000
	014 Move X0, [X0+3920]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3404], W8
	018 Move X0, [X20+24]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x77E000
	022 Move X8, [X8+3920]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call HashSet`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void ResetReferenceSize(System.Int32 width, System.Int32 height)

Disassembly:
	0x039D38CC LDP D13, D12, [X31 + 0x10]
	0x039D38D0 LDP D15, D14, [X31], #0x70
	0x039D38D4 RET

ISIL:
	001 Move W3, 1
	002 Move [X0+96], W1
	003 Move [X0+100], W2
	004 Call RTHandleSystem.SetReferenceSize, X0, X1, X2, X3
	005 Return 

Method: System.Void SetReferenceSize(System.Int32 width, System.Int32 height)

Disassembly:
	0x039D38A4 LDP D11, D10, [X31 + 0x20]
	0x039D38A8 LDP D13, D12, [X31 + 0x10]

ISIL:
	001 Move W3, W31
	002 Call RTHandleSystem.SetReferenceSize, X0, X1, X2, X3
	003 Return 

Method: System.Void SetReferenceSize(System.Int32 width, System.Int32 height, System.Boolean reset)

Disassembly:
	0x039D8748 MOV X0, X19
	0x039D874C MOV X1, X31
	0x039D8750 BL 0x33BDD8C
	0x039D8754 LDR X0, [X22]
	0x039D8758 BL 0x1C16F10
	0x039D875C MOV X1, X31
	0x039D8760 MOV X22, X0
	0x039D8764 STP X31, X31, [X0 + 0x20]
	0x039D8768 BL 0x33BDD8C
	0x039D876C SCVTF S0, W21
	0x039D8770 SCVTF S1, W20
	0x039D8774 STR X22, [X19 + 0x10]
	0x039D8778 STR X31, [X22 + 0x28]
	0x039D877C STP S0, S1, [X22 + 0x20]
	0x039D8780 STP W21, W20, [X19 + 0x18]
	0x039D8784 STRB W24, [X19 + 0x20]
	0x039D8788 LDR X0, [X23]
	0x039D878C LDR W8, [X0 + 0xE0]
	0x039D8790 CBNZ W8, 0x39D879C
	0x039D8794 BL 0x1C16DFC
	0x039D8798 LDR X0, [X23]
	0x039D879C LDR X8, [X0 + 0xB8]
	0x039D87A0 LDR X20, [X8 + 0x8]
	0x039D87A4 CBNZ X20, 0x39D87F8
	0x039D87A8 LDR W8, [X0 + 0xE0]
	0x039D87AC CBNZ W8, 0x39D87B8
	0x039D87B0 BL 0x1C16DFC
	0x039D87B4 LDR X0, [X23]
	0x039D87B8 ADRP X9, 0x77B000
	0x039D87BC LDR X8, [X0 + 0xB8]
	0x039D87C0 LDR X9, [X9 + 0x178]
	0x039D87C4 LDR X21, [X8]
	0x039D87C8 LDR X0, [X9]
	0x039D87CC BL 0x1C16F10
	0x039D87D0 ADRP X8, 0x77B000
	0x039D87D4 LDR X8, [X8 + 0x168]
	0x039D87D8 MOV X1, X21
	0x039D87DC MOV X3, X31
	0x039D87E0 MOV X20, X0
	0x039D87E4 LDR X2, [X8]
	0x039D87E8 BL 0x2725C6C
	0x039D87EC LDR X0, [X23]
	0x039D87F0 LDR X8, [X0 + 0xB8]
	0x039D87F4 STR X20, [X8 + 0x8]
	0x039D87F8 LDR W8, [X0 + 0xE0]
	0x039D87FC CBNZ W8, 0x39D8808
	0x039D8800 BL 0x1C16DFC
	0x039D8804 LDR X0, [X23]
	0x039D8808 LDR X8, [X0 + 0xB8]
	0x039D880C ADRP X25, 0x77B000
	0x039D8810 ADRP X24, 0x77B000
	0x039D8814 LDR X21, [X8 + 0x10]
	0x039D8818 LDR X25, [X25 + 0x160]
	0x039D881C LDR X24, [X24 + 0x158]
	0x039D8820 CBNZ X21, 0x39D8874
	0x039D8824 LDR W8, [X0 + 0xE0]
	0x039D8828 CBNZ W8, 0x39D8834
	0x039D882C BL 0x1C16DFC
	0x039D8830 LDR X0, [X23]
	0x039D8834 ADRP X9, 0x77B000
	0x039D8838 LDR X8, [X0 + 0xB8]
	0x039D883C LDR X9, [X9 + 0x178]
	0x039D8840 LDR X22, [X8]
	0x039D8844 LDR X0, [X9]
	0x039D8848 BL 0x1C16F10
	0x039D884C ADRP X8, 0x77B000
	0x039D8850 LDR X8, [X8 + 0x170]
	0x039D8854 MOV X1, X22
	0x039D8858 MOV X3, X31
	0x039D885C MOV X21, X0
	0x039D8860 LDR X2, [X8]
	0x039D8864 BL 0x2725C6C
	0x039D8868 LDR X8, [X23]
	0x039D886C LDR X8, [X8 + 0xB8]
	0x039D8870 STR X21, [X8 + 0x10]
	0x039D8874 LDR X0, [X25]
	0x039D8878 BL 0x1C16F10
	0x039D887C LDR X4, [X24]
	0x039D8880 MOVZ W3, 0x1
	0x039D8884 MOV X1, X20
	0x039D8888 MOV X2, X21
	0x039D888C MOV X22, X0
	0x039D8890 BL 0x2493C20
	0x039D8894 STR X22, [X19 + 0x28]
	0x039D8898 LDP X20, X19, [X31 + 0x30]
	0x039D889C LDP X22, X21, [X31 + 0x20]
	0x039D88A0 LDP X24, X23, [X31 + 0x10]
	0x039D88A4 LDP X30, X25, [X31], #0x40
	0x039D88A8 RET
	0x039D88AC MOV X1, X31
	0x039D88B0 STP X31, X31, [X0 + 0x20]
	0x039D88B4 B 0x33BDD8C
	0x039D88B8 STP X30, X21, [X31 - 0x20]!
	0x039D88BC STP X20, X19, [X31 + 0x10]
	0x039D88C0 MOV X8, X0
	0x039D88C4 LDR X0, [X0 + 0x10]
	0x039D88C8 CBZ X0, 0x39D8938
	0x039D88CC LDRB W4, [X8 + 0x20]
	0x039D88D0 MOV X19, X1

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xA0A000
	012 Move W8, [X20+3405]
	013 Move W23, W3
	014 Move W21, W2
	015 Move W22, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x77A000
	022 Move X0, [X0+728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3405], W8
	026 Move X20, X19
	027 Add X20, X20, 64
	028 Move V0, [X20]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSINC not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W24, [X20+32]
	033 Move W25, [X20+36]
	034 NotImplemented "Instruction CSINC not yet implemented."
	035 Move [X20-16], V0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W10, S0
	039 Move W8, W25
	040 Move W9, W24
	041 Move TEMP, X23
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {53}
	045 Move X0, X19
	046 Move W1, W22
	047 Move W2, W21
	048 Move W3, W31
	049 Call RTHandleSystem.Resize, X0, X1, X2, X3
	050 Move W9, [X19+96]
	051 Move W8, [X19+100]
	052 Move W10, [X19+48]
	053 Move X23, 0x77A000
	054 Move X23, [X23+728]
	055 Move W11, W22
	056 Move W12, W9
	057 NotImplemented "Instruction BFM not yet implemented."
	058 NotImplemented "Instruction BFM not yet implemented."
	059 Move [X19+64], X11
	060 Move [X19+72], X12
	061 Compare W10, 0
	062 JumpIfNotEqual {67}
	063 Move W24, W9
	064 Move W25, W8
	065 Move [X19+48], X11
	066 Move [X19+56], X12
	067 Move X0, X19
	068 Move X1, X20
	069 Call RTHandleSystem.CalculateRatioAgainstMaxSize, X0, X1
	070 Move X0, [X23]
	071 Move V9, V0
	072 Move V8, V1
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X20, 0xA0A000
	078 Move W8, [X20+3421]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x77A000
	082 Move X0, [X0+728]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+3421], W8
	086 Move X0, [X23]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X23]
	092 Move X8, [X0+184]
	093 Move X0, [X8+48]
	094 Compare X0, 0
	095 JumpIfEqual {130}
	096 Move X1, X31
	097 Call DynamicResolutionHandler.HardwareDynamicResIsEnabled, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {107}
	102 Move W8, [X19+16]
	103 Compare W8, 0
	104 JumpIfEqual {107}
	105 Move S0, [X19+80]
	106 Move S1, [X19+84]
	107 Move S0, [X19+48]
	108 Move S1, [X19+52]
	109 NotImplemented "Instruction SCVTF not yet implemented."
	110 NotImplemented "Instruction SCVTF not yet implemented."
	111 NotImplemented "Instruction SCVTF not yet implemented."
	112 NotImplemented "Instruction SCVTF not yet implemented."
	113 NotImplemented "Instruction FDIV not yet implemented."
	114 NotImplemented "Instruction FDIV not yet implemented."
	115 Move [X19+80], S9
	116 Move [X19+88], S8
	117 Move [X19+88], S0
	118 Move [X19+96], S1
	119 Move X20, [X31+64]
	120 Move X19, [X31+72]
	121 Move X22, [X31+48]
	122 Move X21, [X31+56]
	123 Move X24, [X31+32]
	124 Move X23, [X31+40]
	125 Move X30, [X31+16]
	126 Move X25, [X31+24]
	127 Move D9, [X31+80]
	128 Move D8, [X31+88]
	129 Return 
	130 Call 0x1C17F20

Method: UnityEngine.Vector2 CalculateRatioAgainstMaxSize(in UnityEngine.Vector2Int viewportSize)

Disassembly:
	0x039D399C MOV W1, W20
	0x039D39A0 LDP X20, X19, [X31 + 0x60]
	0x039D39A4 LDP X22, X21, [X31 + 0x50]
	0x039D39A8 LDP X30, X23, [X31 + 0x40]
	0x039D39AC LDP D9, D8, [X31 + 0x30]
	0x039D39B0 LDP D11, D10, [X31 + 0x20]
	0x039D39B4 LDP D13, D12, [X31 + 0x10]
	0x039D39B8 MOV X3, X31
	0x039D39BC LDP D15, D14, [X31], #0x70
	0x039D39C0 B 0x39DA0DC
	0x039D39C4 LDP X20, X19, [X31 + 0x60]
	0x039D39C8 LDP X22, X21, [X31 + 0x50]
	0x039D39CC LDP X30, X23, [X31 + 0x40]
	0x039D39D0 LDP D9, D8, [X31 + 0x30]
	0x039D39D4 LDP D11, D10, [X31 + 0x20]
	0x039D39D8 LDP D13, D12, [X31 + 0x10]
	0x039D39DC LDP D15, D14, [X31], #0x70
	0x039D39E0 RET
	0x039D39E4 BL 0x1C16F20
	0x039D39E8 STR X30, [X31 - 0x20]!
	0x039D39EC STP X20, X19, [X31 + 0x10]
	0x039D39F0 LDR W0, [X2]
	0x039D39F4 MOV X1, X31
	0x039D39F8 MOV X19, X2
	0x039D39FC MOV X20, X3
	0x039D3A00 BL 0x3C2B340
	0x039D3A04 STR W0, [X19]
	0x039D3A08 LDR W0, [X20]
	0x039D3A0C MOV X1, X31
	0x039D3A10 BL 0x3C2B340
	0x039D3A14 STR W0, [X20]
	0x039D3A18 LDP X20, X19, [X31 + 0x10]
	0x039D3A1C LDR X30, [X31], #0x20
	0x039D3A20 RET
	0x039D3A24 STP X30, X25, [X31 - 0x40]!
	0x039D3A28 STP X24, X23, [X31 + 0x10]
	0x039D3A2C STP X22, X21, [X31 + 0x20]
	0x039D3A30 STP X20, X19, [X31 + 0x30]
	0x039D3A34 ADRP X25, 0xA0E000
	0x039D3A38 LDRB W8, [X25 + 0xD26]
	0x039D3A3C MOV W23, W5
	0x039D3A40 MOV W24, W4
	0x039D3A44 MOV X20, X3
	0x039D3A48 MOV X21, X2
	0x039D3A4C MOV X22, X1
	0x039D3A50 MOV X19, X0
	0x039D3A54 TBNZ X8, 0x0, 0x39D3A9C
	0x039D3A58 ADRP X0, 0x720000
	0x039D3A5C LDR X0, [X0 + 0xA28]
	0x039D3A60 BL 0x1C16CF4
	0x039D3A64 ADRP X0, 0x720000
	0x039D3A68 LDR X0, [X0 + 0xAC8]
	0x039D3A6C BL 0x1C16CF4
	0x039D3A70 ADRP X0, 0x77F000
	0x039D3A74 LDR X0, [X0 + 0xFD8]
	0x039D3A78 BL 0x1C16CF4
	0x039D3A7C ADRP X0, 0x77F000
	0x039D3A80 LDR X0, [X0 + 0xFE0]
	0x039D3A84 BL 0x1C16CF4
	0x039D3A88 ADRP X0, 0x77F000
	0x039D3A8C LDR X0, [X0 + 0xFE8]
	0x039D3A90 BL 0x1C16CF4
	0x039D3A94 MOVZ W8, 0x1
	0x039D3A98 STRB W8, [X25 + 0xD26]
	0x039D3A9C CMP W23, W24
	0x039D3AA0 B.NE 0x39D3AF4
	0x039D3AA4 MOV W0, W23
	0x039D3AA8 MOV X1, X31
	0x039D3AAC BL 0x3C2B340
	0x039D3AB0 MOV W24, W0
	0x039D3AB4 MOV W0, W23
	0x039D3AB8 MOV X1, X31
	0x039D3ABC BL 0x3C2B340
	0x039D3AC0 MOV W4, W0
	0x039D3AC4 MOV X0, X19
	0x039D3AC8 MOV X1, X22
	0x039D3ACC MOV X2, X21
	0x039D3AD0 MOV X3, X20
	0x039D3AD4 MOV W5, W24
	0x039D3AD8 LDP X20, X19, [X31 + 0x30]
	0x039D3ADC LDP X22, X21, [X31 + 0x20]
	0x039D3AE0 LDP X24, X23, [X31 + 0x10]
	0x039D3AE4 MOVN W6, 0x0
	0x039D3AE8 MOV X7, X31
	0x039D3AEC LDP X30, X25, [X31], #0x40
	0x039D3AF0 B 0x39DA660
	0x039D3AF4 ADRP X8, 0x720000
	0x039D3AF8 LDR X8, [X8 + 0xAC8]
	0x039D3AFC MOVZ W1, 0x5
	0x039D3B00 LDR X0, [X8]
	0x039D3B04 BL 0x1C16D6C
	0x039D3B08 CBZ X0, 0x39D3BF0
	0x039D3B0C LDR X8, [X0 + 0x18]
	0x039D3B10 MOV X21, X0
	0x039D3B14 CBZ W8, 0x39D3BEC
	0x039D3B18 ADRP X9, 0x77F000
	0x039D3B1C LDR X9, [X9 + 0xFE8]
	0x039D3B20 LDR X9, [X9]
	0x039D3B24 STR X9, [X21 + 0x20]
	0x039D3B28 CBZ X20, 0x39D3B44
	0x039D3B2C LDR X8, [X20]
	0x039D3B30 MOV X0, X20
	0x039D3B34 LDP X9, X1, [X8 + 0x168]
	0x039D3B38 BLR X9
	0x039D3B3C LDR X8, [X21 + 0x18]
	0x039D3B40 B 0x39D3B48
	0x039D3B44 MOV X0, X31
	0x039D3B48 CMP W8, 0x1
	0x039D3B4C B.LS 0x39D3BEC
	0x039D3B50 CMP W8, 0x2
	0x039D3B54 STR X0, [X21 + 0x28]
	0x039D3B58 B.EQ 0x39D3BEC
	0x039D3B5C ADRP X9, 0x77F000
	0x039D3B60 LDR X9, [X9 + 0xFE0]
	0x039D3B64 LDR X9, [X9]
	0x039D3B68 STR X9, [X21 + 0x30]
	0x039D3B6C LDR X9, [X19 + 0x10]
	0x039D3B70 CBZ X9, 0x39D3BF0
	0x039D3B74 CMP W8, 0x3
	0x039D3B78 B.LS 0x39D3BEC
	0x039D3B7C LDR X9, [X9 + 0x58]
	0x039D3B80 CMP W8, 0x4
	0x039D3B84 STR X9, [X21 + 0x38]
	0x039D3B88 B.EQ 0x39D3BEC
	0x039D3B8C ADRP X8, 0x77F000
	0x039D3B90 LDR X8, [X8 + 0xFD8]
	0x039D3B94 MOV X0, X21
	0x039D3B98 MOV X1, X31
	0x039D3B9C LDR X8, [X8]
	0x039D3BA0 STR X8, [X21 + 0x40]
	0x039D3BA4 BL 0x32278CC

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xA0F000
	014 Move X21, 0x77F000
	015 Move W8, [X22+3406]
	016 Move X21, [X21+728]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x77F000
	024 Move X0, [X0+728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3406], W8
	028 Move X0, [X21]
	029 Move W22, [X20+96]
	030 Move W24, [X20+100]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X23, 0xA0F000
	036 Move W8, [X23+3421]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x77F000
	040 Move X0, [X0+728]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+3421], W8
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move X0, [X8+48]
	052 Compare X0, 0
	053 JumpIfEqual {171}
	054 Move X1, X31
	055 Call DynamicResolutionHandler.HardwareDynamicResIsEnabled, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {150}
	060 Move W8, [X20+16]
	061 Compare W8, 0
	062 JumpIfEqual {150}
	063 Move X0, [X21]
	064 Move X25, [X19]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move W8, [X23+3421]
	070 Compare W8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, 0x77F000
	073 Move X0, [X0+728]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X23+3421], W8
	077 Move X0, [X21]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X21]
	083 Move X8, [X0+184]
	084 Move X8, [X8+48]
	085 Compare X8, 0
	086 JumpIfEqual {171}
	087 Move W9, [X8+72]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W8, [X8+76]
	090 Move X9, X25
	091 ShiftRight X9, 32
	092 And X9, X9, 0x7FFFFFFF
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W8, [X0+224]
	095 Move S9, [X19]
	096 Move S8, [X19+4]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move W8, [X23+3421]
	101 Compare W8, 0
	102 JumpIfNotEqual {108}
	103 Move X0, 0x77F000
	104 Move X0, [X0+728]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X23+3421], W8
	108 Move X0, [X21]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X21]
	114 Move X8, [X0+184]
	115 Move X8, [X8+48]
	116 Compare X8, 0
	117 JumpIfEqual {171}
	118 Move W9, [X23+3421]
	119 Move S11, [X8+72]
	120 Move S10, [X8+76]
	121 Compare W9, 0
	122 JumpIfNotEqual {128}
	123 Move X0, X21
	124 Call 0x1C17CF4
	125 Move X0, [X21]
	126 Move W8, 1
	127 Move [X23+3421], W8
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X21]
	133 Move X8, [X0+184]
	134 Move X0, [X8+48]
	135 Compare X0, 0
	136 JumpIfEqual {171}
	137 Move X1, [X20+96]
	138 NotImplemented "Instruction SCVTF not yet implemented."
	139 NotImplemented "Instruction SCVTF not yet implemented."
	140 NotImplemented "Instruction SCVTF not yet implemented."
	141 NotImplemented "Instruction SCVTF not yet implemented."
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 NotImplemented "Instruction FDIV not yet implemented."
	144 Move X2, X31
	145 Call DynamicResolutionHandler.ApplyScalesOnSize, X0, X1, X2
	146 Move X22, X0
	147 Move X24, X0
	148 ShiftRight X24, 32
	149 And X24, X24, 0x7FFFFFFF
	150 Move S0, [X19]
	151 Move S1, [X19+4]
	152 NotImplemented "Instruction SCVTF not yet implemented."
	153 NotImplemented "Instruction SCVTF not yet implemented."
	154 Move X20, [X31+80]
	155 Move X19, [X31+88]
	156 Move X22, [X31+64]
	157 Move X21, [X31+72]
	158 Move X24, [X31+48]
	159 Move X23, [X31+56]
	160 Move X30, [X31+32]
	161 Move X25, [X31+40]
	162 Move D9, [X31+16]
	163 Move D8, [X31+24]
	164 NotImplemented "Instruction SCVTF not yet implemented."
	165 NotImplemented "Instruction SCVTF not yet implemented."
	166 NotImplemented "Instruction FDIV not yet implemented."
	167 NotImplemented "Instruction FDIV not yet implemented."
	168 Move D11, [X31+96]
	169 Move D10, [X31+104]
	170 Return X0
	171 Call 0x1C17F20

Method: System.Void SetHardwareDynamicResolutionState(System.Boolean enableHWDynamicRes)

Disassembly:
	0x039D80D4 BL 0x3C3C4BC
	0x039D80D8 ANDS W31, W0, 0x1
	0x039D80DC CSEL W20, W20, W31, NE
	0x039D80E0 LDR X0, [X26]
	0x039D80E4 BL 0x1C16F10
	0x039D80E8 LDP W1, W2, [X31 + 0x88]
	0x039D80EC MOVZ W5, 0x1
	0x039D80F0 MOV W3, W28
	0x039D80F4 MOV W4, W22
	0x039D80F8 MOV X6, X31
	0x039D80FC MOV X26, X0
	0x039D8100 BL 0x3C21AA8
	0x039D8104 CBZ X26, 0x39D8344
	0x039D8108 MOVZ W1, 0x3D
	0x039D810C MOV X0, X26
	0x039D8110 MOV X2, X31
	0x039D8114 BL 0x3C396EC
	0x039D8118 MOV X0, X26
	0x039D811C MOV W1, W27
	0x039D8120 MOV X2, X31
	0x039D8124 MOV W28, W27
	0x039D8128 BL 0x3C20604
	0x039D812C LDR W1, [X31 + 0x2C]
	0x039D8130 MOV X0, X26
	0x039D8134 MOV X2, X31
	0x039D8138 BL 0x3C1AB5C
	0x039D813C LDR W1, [X31 + 0x30]
	0x039D8140 MOV X0, X26
	0x039D8144 MOV X2, X31
	0x039D8148 BL 0x3C1AA10
	0x039D814C LDR X8, [X26]
	0x039D8150 LDR W1, [X31 + 0x4C]
	0x039D8154 MOV X0, X26
	0x039D8158 LDP X9, X2, [X8 + 0x1D8]
	0x039D815C BLR X9
	0x039D8160 AND W1, W23, 0x1
	0x039D8164 MOV X0, X26
	0x039D8168 MOV X2, X31
	0x039D816C BL 0x3C2070C
	0x039D8170 AND W1, W29, 0x1
	0x039D8174 MOV X0, X26
	0x039D8178 MOV X2, X31
	0x039D817C BL 0x3C20260
	0x039D8180 AND W1, W25, 0x1
	0x039D8184 MOV X0, X26
	0x039D8188 MOV X2, X31
	0x039D818C BL 0x3C20584
	0x039D8190 LDR W1, [X31 + 0x28]
	0x039D8194 MOV X0, X26
	0x039D8198 MOV X2, X31
	0x039D819C BL 0x3C1ABDC
	0x039D81A0 MOV X0, X26
	0x039D81A4 MOV V0.16B, V8.16B
	0x039D81A8 MOV X1, X31
	0x039D81AC BL 0x3C1AC5C
	0x039D81B0 MOV X0, X26
	0x039D81B4 MOV W1, W24
	0x039D81B8 MOV X2, X31
	0x039D81BC BL 0x3C20684
	0x039D81C0 AND W1, W19, 0x1
	0x039D81C4 MOV X0, X26
	0x039D81C8 MOV X2, X31
	0x039D81CC BL 0x3C206C8
	0x039D81D0 LDR X25, [X31 + 0x40]
	0x039D81D4 MOV X0, X26
	0x039D81D8 MOV X2, X31
	0x039D81DC LDRB W8, [X25 + 0x10]
	0x039D81E0 AND W8, W21, W8, 0x0
	0x039D81E4 AND W1, W8, 0x1
	0x039D81E8 BL 0x3C2078C
	0x039D81EC LDR W1, [X31 + 0x34]
	0x039D81F0 MOV X0, X26
	0x039D81F4 MOV X2, X31
	0x039D81F8 BL 0x3C20324
	0x039D81FC MOV X0, X26
	0x039D8200 MOV W1, W20
	0x039D8204 MOV X2, X31
	0x039D8208 BL 0x3C204FC
	0x039D820C LDR W1, [X31 + 0x38]
	0x039D8210 MOV X0, X26
	0x039D8214 MOV X2, X31
	0x039D8218 BL 0x3C202E0
	0x039D821C ADRP X8, 0x743000
	0x039D8220 LDR X8, [X8 + 0x8F8]
	0x039D8224 LDR X0, [X8]
	0x039D8228 LDR W8, [X0 + 0xE0]
	0x039D822C CBNZ W8, 0x39D8234
	0x039D8230 BL 0x1C16DFC
	0x039D8234 LDR X20, [X31 + 0x148]
	0x039D8238 ADRP X22, 0x77B000
	0x039D823C LDR W27, [X31 + 0x24]
	0x039D8240 LDR X22, [X22 + 0xC0]
	0x039D8244 LDP W0, W1, [X31 + 0x88]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xA0A000
	010 Move W8, [X21+3407]
	011 Move X19, X0
	012 And W20, W1, 1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x77C000
	018 Move X0, [X0+280]
	019 Call 0x1C17CF4
	020 Move X0, 0x77C000
	021 Move X0, [X0+288]
	022 Call 0x1C17CF4
	023 Move X0, 0x77C000
	024 Move X0, [X0+248]
	025 Call 0x1C17CF4
	026 Move X0, 0x71C000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3407], W8
	031 Move W8, [X19+16]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X19+24]
	034 Move [X19+16], W20
	035 Compare X8, 0
	036 JumpIfEqual {101}
	037 Move W1, [X8+32]
	038 Move X8, 0x77C000
	039 Move X8, [X8+280]
	040 Add X20, X19, 32
	041 Move X0, X20
	042 Move X2, [X8]
	043 Call Array.Resize, X0, X1
	044 Move X0, [X19+24]
	045 Compare X0, 0
	046 JumpIfEqual {101}
	047 Move X8, 0x77C000
	048 Move X1, [X20]
	049 Move X8, [X8+288]
	050 Move X2, [X8]
	051 Call HashSet`1<Object>.CopyTo, X0, X1
	052 Move X8, [X20]
	053 Compare X8, 0
	054 JumpIfEqual {101}
	055 Move W22, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X24, 0x71C000
	058 Move X24, [X24+1432]
	059 Move W23, W31
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X8, W23
	063 Move X25, [X8+32]
	064 Compare X25, 0
	065 JumpIfEqual {101}
	066 Move X0, [X24]
	067 Move X21, [X25+24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X21
	073 Move X1, X31
	074 Call Object.op_Implicit, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {96}
	079 Compare X21, 0
	080 JumpIfEqual {101}
	081 Move X0, X21
	082 Move X1, X31
	083 Call RenderTexture.Release, X0
	084 Move W8, [X19+16]
	085 Compare W8, 0
	086 JumpIfEqual {88}
	087 Move W8, [X25+82]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Move X0, X21
	091 Move X2, X31
	092 Call RenderTexture.set_useDynamicScale, X0, X1
	093 Move X0, X21
	094 Move X1, X31
	095 Call RenderTexture.Create, X0
	096 Add W23, W23, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, [X20]
	099 Compare X8, 0
	100 JumpIfNotEqual {60}
	101 Call 0x1C17F20
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Move X25, [X31+72]
	110 Return 
	111 Call 0x1C17F28

Method: System.Void SwitchResizeMode(UnityEngine.Rendering.RTHandle rth, UnityEngine.Rendering.RTHandleSystem/ResizeMode mode)

Disassembly:
	0x039D339C CMP W19, 0x3
	0x039D33A0 B.HI 0x39D34F0
	0x039D33A4 ADR X8, 0x10
	0x039D33A8 LDRB W9, [X29, X28, LSL]
	0x039D33AC ADD X8, X8, X9, 0x2, LSL
	0x039D33B0 BR X8
	0x039D33B4 LDR X0, [X27]
	0x039D33B8 LDR W8, [X0 + 0xE0]
	0x039D33BC CBNZ W8, 0x39D33C4
	0x039D33C0 BL 0x1C16DFC
	0x039D33C4 CMP W24, 0x0
	0x039D33C8 CSET W3, NE
	0x039D33CC LDP S4, S5, [X31 + 0x18]
	0x039D33D0 MOV X0, X21
	0x039D33D4 MOV X1, X20
	0x039D33D8 MOV V0.16B, V8.16B
	0x039D33DC MOV V1.16B, V9.16B
	0x039D33E0 MOV V2.16B, V11.16B
	0x039D33E4 MOV V3.16B, V10.16B
	0x039D33E8 MOV W2, W25
	0x039D33EC MOV W4, W23
	0x039D33F0 MOV X5, X31
	0x039D33F4 STP S15, S14, [X31]
	0x039D33F8 STP S13, S12, [X31 + 0x8]
	0x039D33FC BL 0x39E3648
	0x039D3400 B 0x39D34F0
	0x039D3404 LDR X0, [X27]
	0x039D3408 LDR W8, [X0 + 0xE0]
	0x039D340C CBNZ W8, 0x39D3414
	0x039D3410 BL 0x1C16DFC
	0x039D3414 CMP W24, 0x0
	0x039D3418 CSET W3, NE
	0x039D341C LDP S4, S5, [X31 + 0x18]
	0x039D3420 MOV X0, X21
	0x039D3424 MOV X1, X20
	0x039D3428 MOV V0.16B, V8.16B
	0x039D342C MOV V1.16B, V9.16B
	0x039D3430 MOV V2.16B, V11.16B
	0x039D3434 MOV V3.16B, V10.16B
	0x039D3438 MOV W2, W25
	0x039D343C MOV W4, W23
	0x039D3440 MOV X5, X31
	0x039D3444 STP S15, S14, [X31]
	0x039D3448 STP S13, S12, [X31 + 0x8]
	0x039D344C BL 0x39E3B40
	0x039D3450 B 0x39D34F0
	0x039D3454 LDR X0, [X27]
	0x039D3458 LDR W8, [X0 + 0xE0]
	0x039D345C CBNZ W8, 0x39D3464
	0x039D3460 BL 0x1C16DFC
	0x039D3464 CMP W24, 0x0
	0x039D3468 CSET W3, NE
	0x039D346C LDP S4, S5, [X31 + 0x18]
	0x039D3470 MOV X0, X21
	0x039D3474 MOV X1, X20
	0x039D3478 MOV V0.16B, V8.16B
	0x039D347C MOV V1.16B, V9.16B
	0x039D3480 MOV V2.16B, V11.16B
	0x039D3484 MOV V3.16B, V10.16B
	0x039D3488 MOV W2, W25
	0x039D348C MOV W4, W23
	0x039D3490 MOV X5, X31
	0x039D3494 STP S15, S14, [X31]
	0x039D3498 STP S13, S12, [X31 + 0x8]
	0x039D349C BL 0x39E3D58
	0x039D34A0 B 0x39D34F0
	0x039D34A4 LDR X0, [X27]
	0x039D34A8 LDR W8, [X0 + 0xE0]
	0x039D34AC CBNZ W8, 0x39D34B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA0F000
	007 Move W8, [X22+3408]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x780000
	016 Move X0, [X0+3904]
	017 Call 0x1C17CF4
	018 Move X0, 0x780000
	019 Move X0, [X0+3912]
	020 Call 0x1C17CF4
	021 Move X0, 0x780000
	022 Move X0, [X0+3920]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3408], W8
	026 Compare X19, 0
	027 JumpIfEqual {88}
	028 Move W8, [X19+168]
	029 Compare W8, 0
	030 JumpIfEqual {45}
	031 Compare W21, 0
	032 JumpIfEqual {51}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X20+24]
	035 Compare X0, 0
	036 JumpIfEqual {88}
	037 Move X8, 0x780000
	038 Move X8, [X8+3920]
	039 Move X1, X19
	040 Move X2, [X8]
	041 Call HashSet`1<Object>.Remove, X0, X1
	042 Move X0, [X20+40]
	043 Compare X0, 0
	044 JumpIfNotEqual {77}
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Move X0, [X20+40]
	052 Compare X0, 0
	053 JumpIfEqual {88}
	054 Move X8, 0x780000
	055 Move X8, [X8+3912]
	056 Move X1, X19
	057 Move X2, [X8]
	058 Call HashSet`1<Object>.Contains, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {66}
	063 Move X0, X20
	064 Move X1, X19
	065 Call RTHandleSystem.DemandResize, X0, X1
	066 Move X0, [X20+40]
	067 Compare X0, 0
	068 JumpIfEqual {88}
	069 Move X8, 0x780000
	070 Move X8, [X8+3920]
	071 Move X1, X19
	072 Move X2, [X8]
	073 Call HashSet`1<Object>.Remove, X0, X1
	074 Move X0, [X20+24]
	075 Compare X0, 0
	076 JumpIfEqual {88}
	077 Move X8, 0x780000
	078 Move X8, [X8+3904]
	079 Move X1, X19
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X2, [X8]
	085 Move X30, [X31+48]
	086 Call HashSet`1<Object>.Add, X0, X1
	087 Return 
	088 Call 0x1C17F20

Method: System.Void DemandResize(UnityEngine.Rendering.RTHandle rth)

Disassembly:
	0x039D8BBC CBZ X0, 0x39D8C34
	0x039D8BC0 ADRP X22, 0x77B000
	0x039D8BC4 LDR X22, [X22 + 0x188]
	0x039D8BC8 LDR X1, [X21]
	0x039D8BCC LDR X2, [X22]
	0x039D8BD0 BL 0x2493D8C
	0x039D8BD4 LDR X0, [X20]
	0x039D8BD8 CBZ X0, 0x39D8C34
	0x039D8BDC LDR X1, [X19 + 0x18]
	0x039D8BE0 LDR X2, [X22]
	0x039D8BE4 BL 0x2493D8C
	0x039D8BE8 STP X31, X31, [X21]
	0x039D8BEC ADRP X20, 0xA00000
	0x039D8BF0 LDRB W8, [X20 + 0xE5A]
	0x039D8BF4 CBNZ W8, 0x39D8C0C
	0x039D8BF8 ADRP X0, 0x722000
	0x039D8BFC LDR X0, [X0 + 0x9A0]
	0x039D8C00 BL 0x1C16CF4
	0x039D8C04 MOVZ W8, 0x1
	0x039D8C08 STRB W8, [X20 + 0xE5A]
	0x039D8C0C ADRP X8, 0x722000
	0x039D8C10 LDR X8, [X8 + 0x9A0]
	0x039D8C14 LDP X22, X21, [X31 + 0x10]
	0x039D8C18 LDR X8, [X8]
	0x039D8C1C LDR X8, [X8 + 0xB8]
	0x039D8C20 LDR V0, [X8]
	0x039D8C24 STR V0, [X19 + 0x2]
	0x039D8C28 LDP X20, X19, [X31 + 0x20]
	0x039D8C2C LDR X30, [X31], #0x30
	0x039D8C30 RET
	0x039D8C34 BL 0x1C16F20
	0x039D8C38 STR X30, [X31 - 0x20]!
	0x039D8C3C STP X20, X19, [X31 + 0x10]
	0x039D8C40 ADRP X19, 0xA09000
	0x039D8C44 ADRP X20, 0x77B000
	0x039D8C48 LDRB W8, [X19 + 0xD62]
	0x039D8C4C LDR X20, [X20 + 0x150]
	0x039D8C50 TBNZ X8, 0x0, 0x39D8C68
	0x039D8C54 ADRP X0, 0x77B000
	0x039D8C58 LDR X0, [X0 + 0x150]
	0x039D8C5C BL 0x1C16CF4
	0x039D8C60 MOVZ W8, 0x1
	0x039D8C64 STRB W8, [X19 + 0xD62]
	0x039D8C68 LDR X0, [X20]
	0x039D8C6C BL 0x1C16F10
	0x039D8C70 MOV X1, X31
	0x039D8C74 MOV X19, X0
	0x039D8C78 BL 0x33BDD8C
	0x039D8C7C LDR X8, [X20]
	0x039D8C80 LDR X8, [X8 + 0xB8]
	0x039D8C84 STR X19, [X8]
	0x039D8C88 LDP X20, X19, [X31 + 0x10]
	0x039D8C8C LDR X30, [X31], #0x20
	0x039D8C90 RET
	0x039D8C94 MOV X1, X31
	0x039D8C98 B 0x33BDD8C
	0x039D8C9C RET
	0x039D8CA0 RET
	0x039D8CA4 STR X30, [X31 - 0x20]!
	0x039D8CA8 STP X20, X19, [X31 + 0x10]
	0x039D8CAC ADRP X20, 0xA09000
	0x039D8CB0 ADRP X19, 0x77A000
	0x039D8CB4 LDRB W8, [X20 + 0xD63]
	0x039D8CB8 LDR X19, [X19 + 0xFD0]
	0x039D8CBC TBNZ X8, 0x0, 0x39D8CD4
	0x039D8CC0 ADRP X0, 0x77A000
	0x039D8CC4 LDR X0, [X0 + 0xFD0]
	0x039D8CC8 BL 0x1C16CF4
	0x039D8CCC MOVZ W8, 0x1
	0x039D8CD0 STRB W8, [X20 + 0xD63]
	0x039D8CD4 LDR X0, [X19]
	0x039D8CD8 LDR W8, [X0 + 0xE0]
	0x039D8CDC CBNZ W8, 0x39D8CE8
	0x039D8CE0 BL 0x1C16DFC
	0x039D8CE4 LDR X0, [X19]
	0x039D8CE8 LDR X8, [X0 + 0xB8]
	0x039D8CEC LDP X20, X19, [X31 + 0x10]
	0x039D8CF0 LDR W0, [X8 + 0x10]
	0x039D8CF4 LDR X30, [X31], #0x20
	0x039D8CF8 RET
	0x039D8CFC LDR X0, [X0 + 0x10]
	0x039D8D00 RET
	0x039D8D04 SUB X31, X31, 0xD0
	0x039D8D08 STP X29, X30, [X31 + 0x70]
	0x039D8D0C STP X28, X27, [X31 + 0x80]
	0x039D8D10 STP X26, X25, [X31 + 0x90]
	0x039D8D14 STP X24, X23, [X31 + 0xA0]
	0x039D8D18 STP X22, X21, [X31 + 0xB0]
	0x039D8D1C STP X20, X19, [X31 + 0xC0]
	0x039D8D20 STP W4, W5, [X31 + 0x68]
	0x039D8D24 ADRP X27, 0xA09000
	0x039D8D28 ADRP X24, 0x77B000
	0x039D8D2C ADRP X29, 0x725000
	0x039D8D30 ADRP X21, 0x725000
	0x039D8D34 LDRB W8, [X27 + 0xD64]
	0x039D8D38 LDR X24, [X24 + 0x190]
	0x039D8D3C LDR X29, [X29 + 0x888]
	0x039D8D40 LDR X21, [X21 + 0x890]
	0x039D8D44 MOV W23, W7
	0x039D8D48 MOV X26, X6
	0x039D8D4C MOV W25, W3
	0x039D8D50 MOV W20, W2
	0x039D8D54 MOV W22, W1
	0x039D8D58 MOV X19, X0
	0x039D8D5C AND W28, W7, 0x1
	0x039D8D60 TBNZ X8, 0x0, 0x39D8DC0
	0x039D8D64 ADRP X0, 0x77B000
	0x039D8D68 LDR X0, [X0 + 0x198]
	0x039D8D6C BL 0x1C16CF4
	0x039D8D70 ADRP X0, 0x77B000
	0x039D8D74 LDR X0, [X0 + 0x1A0]
	0x039D8D78 BL 0x1C16CF4
	0x039D8D7C ADRP X0, 0x725000
	0x039D8D80 LDR X0, [X0 + 0x890]
	0x039D8D84 BL 0x1C16CF4
	0x039D8D88 ADRP X0, 0x725000
	0x039D8D8C LDR X0, [X0 + 0x888]
	0x039D8D90 BL 0x1C16CF4
	0x039D8D94 ADRP X0, 0x77B000
	0x039D8D98 LDR X0, [X0 + 0x190]
	0x039D8D9C BL 0x1C16CF4
	0x039D8DA0 ADRP X0, 0x71F000
	0x039D8DA4 LDR X0, [X0 + 0x2C8]
	0x039D8DA8 BL 0x1C16CF4
	0x039D8DAC ADRP X0, 0x778000
	0x039D8DB0 LDR X0, [X0 + 0x9B0]
	0x039D8DB4 BL 0x1C16CF4
	0x039D8DB8 MOVZ W8, 0x1
	0x039D8DBC STRB W8, [X27 + 0xD64]
	0x039D8DC0 LDR X0, [X24]
	0x039D8DC4 BL 0x1C16F10
	0x039D8DC8 ADRP X8, 0x77B000
	0x039D8DCC LDR X8, [X8 + 0x1A0]
	0x039D8DD0 MOV X27, X0
	0x039D8DD4 LDR X1, [X8]
	0x039D8DD8 BL 0x29FA6A0
	0x039D8DDC STR X27, [X19 + 0x30]
	0x039D8DE0 LDR X0, [X29]
	0x039D8DE4 BL 0x1C16F10
	0x039D8DE8 LDR X1, [X21]
	0x039D8DEC MOV X27, X0
	0x039D8DF0 BL 0x2A09A9C
	0x039D8DF4 STR X27, [X19 + 0x38]
	0x039D8DF8 LDR X0, [X29]
	0x039D8DFC BL 0x1C16F10
	0x039D8E00 LDR X1, [X21]
	0x039D8E04 MOV X27, X0
	0x039D8E08 BL 0x2A09A9C
	0x039D8E0C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0xA0A000
	015 Move W8, [X21+3409]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x744000
	023 Move X0, [X0+2296]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3409], W8
	027 Compare X20, 0
	028 JumpIfEqual {183}
	029 Move X1, [X19+96]
	030 Move X19, [X20+24]
	031 Move X0, X20
	032 Move [X20+172], X1
	033 Call RTHandle.GetScaledSize, X0, X1
	034 Move X22, 0xA0A000
	035 Move W8, [X22+3422]
	036 Move X21, X0
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x744000
	040 Move X0, [X0+1584]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+3422], W8
	044 Move X8, 0x744000
	045 Move X8, [X8+1584]
	046 Move X10, X21
	047 ShiftRight X10, 32
	048 And X10, X10, 0x7FFFFFFF
	049 Move X8, [X8]
	050 Move X8, [X8+184]
	051 Move W9, [X8+8]
	052 Move W8, [X8+12]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Compare X19, 0
	058 JumpIfEqual {183}
	059 Move X8, [X19]
	060 Move X0, X19
	061 Move X9, [X8+392]
	062 Move X1, [X8+400]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move X9, [X8+424]
	068 Move X1, [X8+432]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X20, [X31+112]
	072 Move X19, [X31+120]
	073 Move X22, [X31+96]
	074 Move X21, [X31+104]
	075 Move X24, [X31+80]
	076 Move X23, [X31+88]
	077 Move X26, [X31+64]
	078 Move X25, [X31+72]
	079 Move X28, [X31+48]
	080 Move X27, [X31+56]
	081 Move X29, [X31+32]
	082 Move X30, [X31+40]
	083 Add X31, X31, 128
	084 Return 
	085 Move X28, 0x744000
	086 Move X28, [X28+2296]
	087 Move X0, X19
	088 Move X1, X31
	089 Call RenderTexture.Release, X0
	090 Move X8, [X19]
	091 Move X0, X19
	092 Move W1, W22
	093 Move X9, [X8+408]
	094 Move X2, [X8+416]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X19]
	097 Move X0, X19
	098 Move W1, W21
	099 Move X9, [X8+440]
	100 Move X2, [X8+448]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, [X19]
	103 Move X0, X19
	104 Move X9, [X8+392]
	105 Move X1, [X8+400]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X19]
	108 Move W21, W0
	109 Move X0, X19
	110 Move X9, [X8+424]
	111 Move X1, [X8+432]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move W22, W0
	114 Move X0, X19
	115 Move X1, X31
	116 Call RenderTexture.get_volumeDepth, X0
	117 Move W23, W0
	118 Move X0, X19
	119 Move X1, X31
	120 Call RenderTexture.get_graphicsFormat, X0
	121 Move X8, [X19]
	122 Move W24, W0
	123 Move X0, X19
	124 Move X9, [X8+456]
	125 Move X1, [X8+464]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move X25, [X20+88]
	128 Move W26, W0
	129 Move X0, X19
	130 Move X1, X31
	131 Call RenderTexture.get_useMipMap, X0
	132 Move W29, [X20+80]
	133 Move W20, W0
	134 Move X0, X19
	135 Move X1, X31
	136 Call RenderTexture.get_antiAliasing, X0
	137 Move W27, W0
	138 Move X0, X19
	139 Move X1, X31
	140 Call RenderTexture.get_useDynamicScale, X0
	141 Move X8, [X28]
	142 Move W28, W0
	143 Move W9, [X8+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X8
	147 Call 0x1C17DFC
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CSET not yet implemented."
	150 And W8, W28, 1
	151 And W6, W20, 1
	152 Move W0, W21
	153 Move W1, W22
	154 Move W2, W23
	155 Move W3, W24
	156 Move W4, W26
	157 Move X5, X25
	158 Move [X31+16], X31
	159 Move [X31+8], W8
	160 Move [X31], W27
	161 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	162 Move X1, X0
	163 Move X0, X19
	164 Move X2, X31
	165 Call Object.set_name, X0, X1
	166 Move X0, X19
	167 Move X20, [X31+112]
	168 Move X19, [X31+120]
	169 Move X22, [X31+96]
	170 Move X21, [X31+104]
	171 Move X24, [X31+80]
	172 Move X23, [X31+88]
	173 Move X26, [X31+64]
	174 Move X25, [X31+72]
	175 Move X28, [X31+48]
	176 Move X27, [X31+56]
	177 Move X29, [X31+32]
	178 Move X30, [X31+40]
	179 Move X1, X31
	180 Add X31, X31, 128
	181 Call RenderTexture.Create, X0
	182 Return 
	183 Call 0x1C17F20

Method: System.Int32 GetMaxWidth()

Disassembly:
	0x039D8E10 MOV X1, X31
	0x039D8E14 STR X27, [X19 + 0x40]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Int32 GetMaxHeight()

Disassembly:
	0x039D8E18 BL 0x33BDD8C
	0x039D8E1C STP W22, W20, [X19 + 0x18]

ISIL:
	001 Move W0, [X0+100]
	002 Return X0

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x039D8594 LDR X1, [X8 + 0x40]
	0x039D8598 BL 0x1C16E00
	0x039D859C CBZ X0, 0x39D86A4
	0x039D85A0 LDR W8, [X20 + 0x18]
	0x039D85A4 CMP W8, 0x2
	0x039D85A8 B.LS 0x39D86A0
	0x039D85AC STR X22, [X20 + 0x30]
	0x039D85B0 LDR X8, [X21]
	0x039D85B4 MOV X0, X21
	0x039D85B8 LDP X9, X1, [X8 + 0x188]
	0x039D85BC BLR X9
	0x039D85C0 LDR X8, [X26]
	0x039D85C4 STR W0, [X31 + 0xC]
	0x039D85C8 ADD X1, X31, 0xC
	0x039D85CC MOV X0, X8
	0x039D85D0 BL 0x1C16E04
	0x039D85D4 MOV X22, X0
	0x039D85D8 CBZ X0, 0x39D85F0
	0x039D85DC LDR X8, [X20]
	0x039D85E0 MOV X0, X22
	0x039D85E4 LDR X1, [X8 + 0x40]
	0x039D85E8 BL 0x1C16E00
	0x039D85EC CBZ X0, 0x39D86A4
	0x039D85F0 LDR W8, [X20 + 0x18]
	0x039D85F4 CMP W8, 0x3
	0x039D85F8 B.LS 0x39D86A0
	0x039D85FC STR X22, [X20 + 0x38]
	0x039D8600 LDR X8, [X21]
	0x039D8604 MOV X0, X21
	0x039D8608 LDP X9, X1, [X8 + 0x1A8]
	0x039D860C BLR X9
	0x039D8610 LDR X8, [X26]
	0x039D8614 STR W0, [X31 + 0x8]
	0x039D8618 ADD X1, X31, 0x8
	0x039D861C MOV X0, X8
	0x039D8620 BL 0x1C16E04
	0x039D8624 MOV X21, X0
	0x039D8628 CBZ X0, 0x39D8640
	0x039D862C LDR X8, [X20]
	0x039D8630 MOV X0, X21
	0x039D8634 LDR X1, [X8 + 0x40]
	0x039D8638 BL 0x1C16E00
	0x039D863C CBZ X0, 0x39D86A4
	0x039D8640 LDR W8, [X20 + 0x18]
	0x039D8644 CMP W8, 0x4
	0x039D8648 B.LS 0x39D86A0
	0x039D864C STR X21, [X20 + 0x40]
	0x039D8650 LDR X0, [X28]
	0x039D8654 MOV X1, X20
	0x039D8658 MOV X2, X31
	0x039D865C BL 0x3227C5C
	0x039D8660 ADD W24, W24, 0x1
	0x039D8664 CMP W23, W24
	0x039D8668 MOV X22, X0
	0x039D866C B.EQ 0x39D867C
	0x039D8670 LDR X8, [X19]
	0x039D8674 CBNZ X8, 0x39D84D0
	0x039D8678 BL 0x1C16F20
	0x039D867C MOV X0, X22
	0x039D8680 LDP X20, X19, [X31 + 0x60]
	0x039D8684 LDP X22, X21, [X31 + 0x50]
	0x039D8688 LDP X24, X23, [X31 + 0x40]
	0x039D868C LDP X26, X25, [X31 + 0x30]
	0x039D8690 LDP X28, X27, [X31 + 0x20]
	0x039D8694 LDR X30, [X31 + 0x10]
	0x039D8698 ADD X31, X31, 0x70
	0x039D869C RET
	0x039D86A0 BL 0x1C16F28
	0x039D86A4 BL 0x1C16F44
	0x039D86A8 MOV X1, X31
	0x039D86AC BL 0x1C16DEC
	0x039D86B0 STP X30, X25, [X31 - 0x40]!
	0x039D86B4 STP X24, X23, [X31 + 0x10]
	0x039D86B8 STP X22, X21, [X31 + 0x20]
	0x039D86BC STP X20, X19, [X31 + 0x30]
	0x039D86C0 ADRP X25, 0xA09000
	0x039D86C4 ADRP X22, 0x77B000
	0x039D86C8 ADRP X23, 0x77B000
	0x039D86CC LDRB W8, [X25 + 0xD5F]
	0x039D86D0 LDR X22, [X22 + 0x148]
	0x039D86D4 LDR X23, [X23 + 0x150]
	0x039D86D8 MOV W20, W2
	0x039D86DC MOV W21, W1
	0x039D86E0 MOV X19, X0
	0x039D86E4 AND W24, W3, 0x1
	0x039D86E8 TBNZ X8, 0x0, 0x39D8748
	0x039D86EC ADRP X0, 0x77B000
	0x039D86F0 LDR X0, [X0 + 0x148]
	0x039D86F4 BL 0x1C16CF4
	0x039D86F8 ADRP X0, 0x77B000
	0x039D86FC LDR X0, [X0 + 0x158]
	0x039D8700 BL 0x1C16CF4
	0x039D8704 ADRP X0, 0x77B000
	0x039D8708 LDR X0, [X0 + 0x160]
	0x039D870C BL 0x1C16CF4
	0x039D8710 ADRP X0, 0x77B000
	0x039D8714 LDR X0, [X0 + 0x168]
	0x039D8718 BL 0x1C16CF4
	0x039D871C ADRP X0, 0x77B000
	0x039D8720 LDR X0, [X0 + 0x170]
	0x039D8724 BL 0x1C16CF4
	0x039D8728 ADRP X0, 0x77B000
	0x039D872C LDR X0, [X0 + 0x150]
	0x039D8730 BL 0x1C16CF4
	0x039D8734 ADRP X0, 0x77B000
	0x039D8738 LDR X0, [X0 + 0x178]
	0x039D873C BL 0x1C16CF4
	0x039D8740 MOVZ W8, 0x1
	0x039D8744 STRB W8, [X25 + 0xD5F]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA0A000
	009 Move W8, [X21+3410]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x77C000
	017 Move X0, [X0+280]
	018 Call 0x1C17CF4
	019 Move X0, 0x77C000
	020 Move X0, [X0+296]
	021 Call 0x1C17CF4
	022 Move X0, 0x77C000
	023 Move X0, [X0+288]
	024 Call 0x1C17CF4
	025 Move X0, 0x77C000
	026 Move X0, [X0+248]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3410], W8
	030 Move TEMP, X20
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {116}
	034 Move X8, [X19+24]
	035 Compare X8, 0
	036 JumpIfEqual {124}
	037 Move X21, 0x77C000
	038 Move W1, [X8+32]
	039 Move X21, [X21+280]
	040 Add X20, X19, 32
	041 Move X0, X20
	042 Move X2, [X21]
	043 Call Array.Resize, X0, X1
	044 Move X0, [X19+24]
	045 Compare X0, 0
	046 JumpIfEqual {124}
	047 Move X22, 0x77C000
	048 Move X1, [X20]
	049 Move X22, [X22+288]
	050 Move X2, [X22]
	051 Call HashSet`1<Object>.CopyTo, X0, X1
	052 Move X8, [X20]
	053 Compare X8, 0
	054 JumpIfEqual {124}
	055 Move X9, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X23, X31
	058 And X24, X9, 0
	059 Move W9, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, X23
	062 Move X0, [X8+32]
	063 Compare X0, 0
	064 JumpIfEqual {66}
	065 Call RTHandle.Release, X0
	066 Add X23, X23, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X8, [X20]
	069 Compare X8, 0
	070 JumpIfNotEqual {59}
	071 Move X0, [X19+24]
	072 Compare X0, 0
	073 JumpIfEqual {124}
	074 Move X23, 0x77C000
	075 Move X23, [X23+296]
	076 Move X1, [X23]
	077 Call HashSet`1<Object>.Clear, X0
	078 Move X8, [X19+40]
	079 Compare X8, 0
	080 JumpIfEqual {124}
	081 Move W1, [X8+32]
	082 Move X2, [X21]
	083 Move X0, X20
	084 Call Array.Resize, X0, X1
	085 Move X0, [X19+40]
	086 Compare X0, 0
	087 JumpIfEqual {124}
	088 Move X1, [X20]
	089 Move X2, [X22]
	090 Call HashSet`1<Object>.CopyTo, X0, X1
	091 Move X8, [X20]
	092 Compare X8, 0
	093 JumpIfEqual {124}
	094 Move X9, [X8+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X21, X31
	097 And X22, X9, 0
	098 Move W9, [X8+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X8, X8, X21
	101 Move X0, [X8+32]
	102 Compare X0, 0
	103 JumpIfEqual {105}
	104 Call RTHandle.Release, X0
	105 Add X21, X21, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X20]
	108 Compare X8, 0
	109 JumpIfNotEqual {98}
	110 Move X0, [X19+40]
	111 Compare X0, 0
	112 JumpIfEqual {124}
	113 Move X1, [X23]
	114 Call HashSet`1<Object>.Clear, X0
	115 Move [X20], X31
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X24, [X31+16]
	121 Move X23, [X31+24]
	122 Move X30, [X31+64]
	123 Return 
	124 Call 0x1C17F20
	125 Call 0x1C17F28

Method: System.Void Resize(System.Int32 width, System.Int32 height, System.Boolean sizeChanged)

Disassembly:
	0x039D88D4 ADD X1, X8, 0x28
	0x039D88D8 BL 0x39D893C
	0x039D88DC MOV X20, X0
	0x039D88E0 CBZ X0, 0x39D88EC
	0x039D88E4 LDR V0, [X20 + 0x2]
	0x039D88E8 B 0x39D8920
	0x039D88EC ADRP X21, 0xA00000
	0x039D88F0 LDRB W8, [X21 + 0xE5A]
	0x039D88F4 CBNZ W8, 0x39D890C
	0x039D88F8 ADRP X0, 0x722000
	0x039D88FC LDR X0, [X0 + 0x9A0]
	0x039D8900 BL 0x1C16CF4
	0x039D8904 MOVZ W8, 0x1
	0x039D8908 STRB W8, [X21 + 0xE5A]
	0x039D890C ADRP X8, 0x722000
	0x039D8910 LDR X8, [X8 + 0x9A0]
	0x039D8914 LDR X8, [X8]
	0x039D8918 LDR X8, [X8 + 0xB8]
	0x039D891C LDR V0, [X8]
	0x039D8920 STR V0, [X19]
	0x039D8924 CMP X20, 0x0
	0x039D8928 LDP X20, X19, [X31 + 0x10]
	0x039D892C CSET W0, NE
	0x039D8930 LDP X30, X21, [X31], #0x20
	0x039D8934 RET
	0x039D8938 BL 0x1C16F20
	0x039D893C STP D11, D10, [X31 - 0x70]!
	0x039D8940 STP D9, D8, [X31 + 0x10]
	0x039D8944 STR X30, [X31 + 0x20]
	0x039D8948 STP X26, X25, [X31 + 0x30]
	0x039D894C STP X24, X23, [X31 + 0x40]
	0x039D8950 STP X22, X21, [X31 + 0x50]
	0x039D8954 STP X20, X19, [X31 + 0x60]
	0x039D8958 ADRP X22, 0x77B000
	0x039D895C LDR X22, [X22 + 0x180]
	0x039D8960 MOV W24, W4
	0x039D8964 MOV W20, W3
	0x039D8968 MOV W21, W2
	0x039D896C MOV X23, X1
	0x039D8970 MOV X19, X0
	0x039D8974 ADRP X25, 0xA09000
	0x039D8978 MOVZ W26, 0x1
	0x039D897C LDRB W8, [X25 + 0xD60]
	0x039D8980 TBNZ X8, 0x0, 0x39D8990
	0x039D8984 MOV X0, X22
	0x039D8988 BL 0x1C16CF4
	0x039D898C STRB W26, [X25 + 0xD60]
	0x039D8990 LDR X0, [X19 + 0x10]
	0x039D8994 CBZ X0, 0x39D89BC
	0x039D8998 AND W4, W24, 0x1
	0x039D899C MOV X1, X23
	0x039D89A0 MOV W2, W21
	0x039D89A4 MOV W3, W20
	0x039D89A8 BL 0x39D893C
	0x039D89AC CBNZ X0, 0x39D8A38
	0x039D89B0 LDR X19, [X19 + 0x18]
	0x039D89B4 CBNZ X19, 0x39D897C
	0x039D89B8 BL 0x1C16F20
	0x039D89BC LDR V0, [X19 + 0x20]
	0x039D89C0 FMOV S10, W31
	0x039D89C4 FMOV S11, W31
	0x039D89C8 TBZ X24, 0x0, 0x39D8A0C
	0x039D89CC MOVZ W9, 0x7F800000
	0x039D89D0 LDR V1, [X19 + 0x24]
	0x039D89D4 FMOV S2, W9
	0x039D89D8 FCVTZS W8, S0
	0x039D89DC MOVZ W10, 0x80000000
	0x039D89E0 FCMP S0, S2
	0x039D89E4 CSEL W8, W10, W8, EQ
	0x039D89E8 SDIV W9, W8, W21
	0x039D89EC MSUB W8, W9, W21, W8
	0x039D89F0 FCVTZS W9, S1
	0x039D89F4 FCMP S1, S2
	0x039D89F8 CSEL W9, W10, W9, EQ
	0x039D89FC SDIV W10, W9, W20
	0x039D8A00 MSUB W9, W10, W20, W9
	0x039D8A04 SCVTF S11, W8
	0x039D8A08 SCVTF S10, W9
	0x039D8A0C SCVTF S8, W21
	0x039D8A10 FSUB S0, S0, S11
	0x039D8A14 FCMP S0, S8
	0x039D8A18 B.LT 0x39D8A30
	0x039D8A1C LDR V0, [X19 + 0x24]
	0x039D8A20 SCVTF S9, W20
	0x039D8A24 FSUB S0, S0, S10
	0x039D8A28 FCMP S0, S9
	0x039D8A2C B.GE 0x39D8A40
	0x039D8A30 MOV X19, X31
	0x039D8A34 B 0x39D8B00
	0x039D8A38 MOV X19, X0
	0x039D8A3C B 0x39D8B00
	0x039D8A40 LDR X0, [X23]
	0x039D8A44 CBZ X0, 0x39D89B8
	0x039D8A48 LDR X1, [X22]
	0x039D8A4C BL 0x2493CB0
	0x039D8A50 STR X0, [X19 + 0x10]
	0x039D8A54 LDR X0, [X23]
	0x039D8A58 CBZ X0, 0x39D89B8
	0x039D8A5C LDR X1, [X22]
	0x039D8A60 BL 0x2493CB0
	0x039D8A64 LDP S0, S1, [X19 + 0x28]
	0x039D8A68 LDP S2, S4, [X19 + 0x20]
	0x039D8A6C LDR X8, [X19 + 0x10]
	0x039D8A70 STR X0, [X19 + 0x18]
	0x039D8A74 FADD S3, S11, S0
	0x039D8A78 FADD S1, S10, S1
	0x039D8A7C FSUB S2, S2, S11
	0x039D8A80 FSUB S0, S4, S10
	0x039D8A84 STP S3, S1, [X19 + 0x28]
	0x039D8A88 STP S2, S0, [X19 + 0x20]
	0x039D8A8C CBZ X8, 0x39D89B8
	0x039D8A90 FADD S3, S3, S8
	0x039D8A94 FSUB S2, S2, S8
	0x039D8A98 CMP W21, W20
	0x039D8A9C STP S3, S1, [X8 + 0x28]
	0x039D8AA0 STR S2, [X8 + 0x20]
	0x039D8AA4 B.LE 0x39D8ACC
	0x039D8AA8 STR S9, [X8 + 0x24]
	0x039D8AAC CBZ X0, 0x39D89B8
	0x039D8AB0 LDR V0, [X19 + 0x28]
	0x039D8AB4 STR S0, [X0 + 0x28]
	0x039D8AB8 LDR V0, [X19 + 0x2C]
	0x039D8ABC FADD S0, S0, S9
	0x039D8AC0 STR S0, [X0 + 0x2C]
	0x039D8AC4 LDR V0, [X19 + 0x20]
	0x039D8AC8 B 0x39D8AEC
	0x039D8ACC STR S0, [X8 + 0x24]
	0x039D8AD0 CBZ X0, 0x39D89B8
	0x039D8AD4 LDR V0, [X19 + 0x28]
	0x039D8AD8 STR S0, [X0 + 0x28]
	0x039D8ADC LDR V0, [X19 + 0x2C]
	0x039D8AE0 FADD S0, S0, S9
	0x039D8AE4 STR S0, [X0 + 0x2C]
	0x039D8AE8 MOV V0.16B, V8.16B
	0x039D8AEC STR S0, [X0 + 0x20]
	0x039D8AF0 LDR V0, [X19 + 0x24]
	0x039D8AF4 FSUB S0, S0, S9
	0x039D8AF8 STR S0, [X0 + 0x24]
	0x039D8AFC STP S8, S9, [X19 + 0x20]
	0x039D8B00 MOV X0, X19
	0x039D8B04 LDP X20, X19, [X31 + 0x60]
	0x039D8B08 LDP X22, X21, [X31 + 0x50]
	0x039D8B0C LDP X24, X23, [X31 + 0x40]
	0x039D8B10 LDP X26, X25, [X31 + 0x30]
	0x039D8B14 LDR X30, [X31 + 0x20]
	0x039D8B18 LDP D9, D8, [X31 + 0x10]
	0x039D8B1C LDP D11, D10, [X31], #0x70
	0x039D8B20 RET
	0x039D8B24 STP X30, X19, [X31 - 0x10]!
	0x039D8B28 MOV X19, X0
	0x039D8B2C LDR X0, [X0 + 0x10]
	0x039D8B30 CBZ X0, 0x39D8B5C
	0x039D8B34 ADD X1, X19, 0x28
	0x039D8B38 BL 0x39D8B60
	0x039D8B3C LDR X8, [X19 + 0x10]
	0x039D8B40 CBZ X8, 0x39D8B5C
	0x039D8B44 LDR V0, [X19 + 0x18]
	0x039D8B48 STR X31, [X8 + 0x28]
	0x039D8B4C UNIMPLEMENTED
	0x039D8B50 STR D0, [X8 + 0x20]
	0x039D8B54 LDP X30, X19, [X31], #0x10
	0x039D8B58 RET
	0x039D8B5C BL 0x1C16F20
	0x039D8B60 STR X30, [X31 - 0x30]!
	0x039D8B64 STP X22, X21, [X31 + 0x10]
	0x039D8B68 STP X20, X19, [X31 + 0x20]
	0x039D8B6C ADRP X21, 0xA09000
	0x039D8B70 LDRB W8, [X21 + 0xD61]
	0x039D8B74 MOV X20, X1
	0x039D8B78 MOV X19, X0
	0x039D8B7C TBNZ X8, 0x0, 0x39D8B94
	0x039D8B80 ADRP X0, 0x77B000
	0x039D8B84 LDR X0, [X0 + 0x188]
	0x039D8B88 BL 0x1C16CF4
	0x039D8B8C MOVZ W8, 0x1
	0x039D8B90 STRB W8, [X21 + 0xD61]
	0x039D8B94 MOV X21, X19
	0x039D8B98 LDR X0, [X21 + 0x10]!
	0x039D8B9C CBZ X0, 0x39D8BE8
	0x039D8BA0 MOV X1, X20
	0x039D8BA4 BL 0x39D8B60
	0x039D8BA8 LDR X0, [X19 + 0x18]
	0x039D8BAC CBZ X0, 0x39D8C34
	0x039D8BB0 MOV X1, X20
	0x039D8BB4 BL 0x39D8B60
	0x039D8BB8 LDR X0, [X20]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X23, 0xA0A000
	015 Move X22, 0x71C000
	016 Move W8, [X23+3411]
	017 Move X22, [X22+1448]
	018 Move W19, W2
	019 Move W20, W1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x77C000
	026 Move X0, [X0+280]
	027 Call 0x1C17CF4
	028 Move X0, 0x744000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move X0, 0x77C000
	032 Move X0, [X0+288]
	033 Call 0x1C17CF4
	034 Move X0, 0x77C000
	035 Move X0, [X0+248]
	036 Call 0x1C17CF4
	037 Move X0, 0x71C000
	038 Move X0, [X0+1448]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+3411], W8
	042 Move X0, [X22]
	043 Move W22, [X21+96]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W20
	049 Move W1, W22
	050 Move X2, X31
	051 Call Math.Max, X0, X1
	052 Move W1, [X21+100]
	053 Move [X21+96], W0
	054 Move W0, W19
	055 Move X2, X31
	056 Call Math.Max, X0, X1
	057 Move X8, [X21+24]
	058 Move [X21+100], W0
	059 Compare X8, 0
	060 JumpIfEqual {198}
	061 Move X9, 0x77C000
	062 Move X9, [X9+280]
	063 Move W1, [X8+32]
	064 Move W20, [X21+96]
	065 Add X19, X21, 32
	066 Move X2, [X9]
	067 Move W22, W0
	068 Move X0, X19
	069 Call Array.Resize, X0, X1
	070 Move X0, [X21+24]
	071 Compare X0, 0
	072 JumpIfEqual {198}
	073 Move X8, 0x77C000
	074 Move X8, [X8+288]
	075 Move X1, [X19]
	076 Move X2, [X8]
	077 Call HashSet`1<Object>.CopyTo, X0, X1
	078 Move X8, [X19]
	079 Move [X31+24], X19
	080 Compare X8, 0
	081 JumpIfEqual {198}
	082 Move W9, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move [X31+40], W9
	085 Move W19, W31
	086 NotImplemented "Instruction BFM not yet implemented."
	087 Move [X31+32], X20
	088 Move W9, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X8, W19
	091 Move X22, [X8+32]
	092 Compare X22, 0
	093 JumpIfEqual {198}
	094 Move X21, [X22+24]
	095 Move [X22+172], X20
	096 Compare X21, 0
	097 JumpIfEqual {198}
	098 Move X0, X21
	099 Move X1, X31
	100 Call RenderTexture.Release, X0
	101 Move X0, X22
	102 Move X1, X20
	103 Call RTHandle.GetScaledSize, X0, X1
	104 Move X8, [X21]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X20, X0
	107 ShiftRight X20, 32
	108 And X20, X20, 0x7FFFFFFF
	109 NotImplemented "Instruction CSINC not yet implemented."
	110 Move X9, [X8+408]
	111 Move X2, [X8+416]
	112 Move X0, X21
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X8, [X21]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CSINC not yet implemented."
	117 Move X0, X21
	118 Move X9, [X8+440]
	119 Move X2, [X8+448]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, [X21]
	122 Move X0, X21
	123 Move X9, [X8+392]
	124 Move X1, [X8+400]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X8, [X21]
	127 Move [X31+44], W0
	128 Move X0, X21
	129 Move X9, [X8+424]
	130 Move X1, [X8+432]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move W24, W0
	133 Move X0, X21
	134 Move X1, X31
	135 Call RenderTexture.get_volumeDepth, X0
	136 Move W25, W0
	137 Move X0, X21
	138 Move X1, X31
	139 Call RenderTexture.get_graphicsFormat, X0
	140 Move X8, [X21]
	141 Move W26, W0
	142 Move X0, X21
	143 Move X9, [X8+456]
	144 Move X1, [X8+464]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X27, [X22+88]
	147 Move W28, W0
	148 Move X0, X21
	149 Move X1, X31
	150 Call RenderTexture.get_useMipMap, X0
	151 Move W23, [X22+80]
	152 Move W22, W0
	153 Move X0, X21
	154 Move X1, X31
	155 Call RenderTexture.get_antiAliasing, X0
	156 Move W29, W0
	157 Move X0, X21
	158 Move X1, X31
	159 Call RenderTexture.get_useDynamicScale, X0
	160 Move X8, 0x744000
	161 Move X8, [X8+2296]
	162 Move W20, W0
	163 Move X8, [X8]
	164 Move W9, [X8+224]
	165 Compare W9, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X8
	168 Call 0x1C17DFC
	169 Move W0, [X31+44]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSET not yet implemented."
	172 And W8, W20, 1
	173 And W6, W22, 1
	174 Move W1, W24
	175 Move W2, W25
	176 Move W3, W26
	177 Move W4, W28
	178 Move X5, X27
	179 Move [X31+16], X31
	180 Move [X31+8], W8
	181 Move [X31], W29
	182 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	183 Move X1, X0
	184 Move X0, X21
	185 Move X2, X31
	186 Call Object.set_name, X0, X1
	187 Move X0, X21
	188 Move X1, X31
	189 Call RenderTexture.Create, X0
	190 Move W8, [X31+40]
	191 Move X20, [X31+32]
	192 Add W19, W19, 1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, [X31+24]
	195 Move X8, [X8]
	196 Compare X8, 0
	197 JumpIfNotEqual {88}
	198 Call 0x1C17F20
	199 Move X20, [X31+128]
	200 Move X19, [X31+136]
	201 Move X22, [X31+112]
	202 Move X21, [X31+120]
	203 Move X24, [X31+96]
	204 Move X23, [X31+104]
	205 Move X26, [X31+80]
	206 Move X25, [X31+88]
	207 Move X28, [X31+64]
	208 Move X27, [X31+72]
	209 Move X29, [X31+48]
	210 Move X30, [X31+56]
	211 Add X31, X31, 144
	212 Return 
	213 Call 0x1C17F28

Method: UnityEngine.Rendering.RTHandle Alloc(System.Int32 width, System.Int32 height, System.Int32 slices = 1, UnityEngine.Rendering.DepthBits depthBufferBits = 0, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat = 4, UnityEngine.FilterMode filterMode = 0, UnityEngine.TextureWrapMode wrapMode = 0, UnityEngine.Rendering.TextureDimension dimension = 2, System.Boolean enableRandomWrite = False, System.Boolean useMipMap = False, System.Boolean autoGenerateMips = True, System.Boolean isShadowMap = False, System.Int32 anisoLevel = 1, System.Single mipMapBias = 0, UnityEngine.Rendering.MSAASamples msaaSamples = 1, System.Boolean bindTextureMS = False, System.Boolean useDynamicScale = False, UnityEngine.RenderTextureMemoryless memoryless = 0, UnityEngine.VRTextureUsage vrUsage = 0, System.String name = )

Disassembly:
	0x039D623C LDP V2, V0, [X24 + 0x10]
	0x039D6240 LDR V1, [X24]
	0x039D6244 MOV W22, W0
	0x039D6248 ADD X0, X31, 0x80
	0x039D624C MOV X1, X31
	0x039D6250 STR W8, [X31 + 0xB0]
	0x039D6254 STP V2, V0, [X31 + 0x90]
	0x039D6258 STR V1, [X31 + 0x8]
	0x039D625C BL 0x3C22BBC
	0x039D6260 CBZ X26, 0x39D6304
	0x039D6264 LDR X10, [X31 + 0x70]
	0x039D6268 LDR W8, [X24 + 0x28]
	0x039D626C LDR W9, [X24 + 0x30]
	0x039D6270 LDR W1, [X31 + 0x6C]
	0x039D6274 STR X10, [X31 + 0x48]
	0x039D6278 LDR W10, [X31 + 0x7C]
	0x039D627C LDP W4, W5, [X31 + 0xC8]
	0x039D6280 STR W8, [X31 + 0x40]
	0x039D6284 STR W9, [X31 + 0x38]
	0x039D6288 AND W8, W0, 0x1
	0x039D628C AND W9, W22, 0x1
	0x039D6290 AND W10, W10, 0x1
	0x039D6294 AND W11, W21, 0x1
	0x039D6298 AND W12, W20, 0x1
	0x039D629C AND W7, W19, 0x1
	0x039D62A0 MOV V0.16B, V10.16B
	0x039D62A4 MOV V1.16B, V9.16B
	0x039D62A8 MOV V2.16B, V8.16B
	0x039D62AC MOV X0, X26
	0x039D62B0 MOV W2, W27
	0x039D62B4 MOV W3, W28
	0x039D62B8 MOV W6, W29
	0x039D62BC STR W23, [X31 + 0x20]
	0x039D62C0 STR W25, [X31 + 0x18]
	0x039D62C4 STRB W8, [X31 + 0x30]
	0x039D62C8 STRB W9, [X31 + 0x28]
	0x039D62CC STRB W10, [X31 + 0x10]
	0x039D62D0 STRB W11, [X31 + 0x8]
	0x039D62D4 STRB W12, [X31]
	0x039D62D8 BL 0x39D5DC4
	0x039D62DC LDP X20, X19, [X31 + 0x130]
	0x039D62E0 LDP X22, X21, [X31 + 0x120]
	0x039D62E4 LDP X24, X23, [X31 + 0x110]
	0x039D62E8 LDP X26, X25, [X31 + 0x100]
	0x039D62EC LDP X28, X27, [X31 + 0xF0]
	0x039D62F0 LDP X29, X30, [X31 + 0xE0]
	0x039D62F4 LDP D9, D8, [X31 + 0xD0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+144], X20
	004 Move [X31+152], X19
	005 Move W9, W3
	006 Move W3, [X31+224]
	007 Move W8, W4
	008 Move W11, [X31+168]
	009 Move W12, [X31+176]
	010 Move W13, [X31+184]
	011 Move W14, [X31+192]
	012 Move W17, [X31+216]
	013 Move W4, [X31+232]
	014 Move W10, [X31+160]
	015 Move W15, [X31+200]
	016 Move W16, [X31+208]
	017 Move W19, [X31+240]
	018 Move X20, [X31+248]
	019 And W3, W3, 1
	020 Move [X31+88], W4
	021 And W17, W17, 1
	022 And W14, W14, 1
	023 And W13, W13, 1
	024 And W12, W12, 1
	025 And W11, W11, 1
	026 Move [X31+8], W6
	027 Move [X31+80], W3
	028 Move [X31], W5
	029 Move W3, W7
	030 Move W4, W7
	031 Move W5, W7
	032 Move W6, W9
	033 Move W7, W8
	034 Move [X31+104], X20
	035 Move [X31+96], W19
	036 Move [X31+64], W16
	037 Move [X31+56], W15
	038 Move [X31+16], W10
	039 Move [X31+72], W17
	040 Move [X31+48], W14
	041 Move [X31+40], W13
	042 Move [X31+32], W12
	043 Move [X31+24], W11
	044 Call RTHandleSystem.Alloc, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, V0, X16, X17, X18, X19, X20, X21
	045 Move X20, [X31+144]
	046 Move X19, [X31+152]
	047 Move X30, [X31+128]
	048 Add X31, X31, 160
	049 Return X0

Method: UnityEngine.Rendering.RTHandle Alloc(System.Int32 width, System.Int32 height, UnityEngine.TextureWrapMode wrapModeU, UnityEngine.TextureWrapMode wrapModeV, UnityEngine.TextureWrapMode wrapModeW = 0, System.Int32 slices = 1, UnityEngine.Rendering.DepthBits depthBufferBits = 0, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat = 4, UnityEngine.FilterMode filterMode = 0, UnityEngine.Rendering.TextureDimension dimension = 2, System.Boolean enableRandomWrite = False, System.Boolean useMipMap = False, System.Boolean autoGenerateMips = True, System.Boolean isShadowMap = False, System.Int32 anisoLevel = 1, System.Single mipMapBias = 0, UnityEngine.Rendering.MSAASamples msaaSamples = 1, System.Boolean bindTextureMS = False, System.Boolean useDynamicScale = False, UnityEngine.RenderTextureMemoryless memoryless = 0, UnityEngine.VRTextureUsage vrUsage = 0, System.String name = )

Disassembly:
	0x039D6454 STP X29, X30, [X31 + 0xA0]
	0x039D6458 STP X28, X27, [X31 + 0xB0]
	0x039D645C STP X26, X25, [X31 + 0xC0]
	0x039D6460 STP X24, X23, [X31 + 0xD0]
	0x039D6464 STP X22, X21, [X31 + 0xE0]
	0x039D6468 STP X20, X19, [X31 + 0xF0]
	0x039D646C STP W7, W2, [X31 + 0x80]
	0x039D6470 STP W5, W6, [X31 + 0x98]
	0x039D6474 STP W3, W4, [X31 + 0x88]
	0x039D6478 CBZ X1, 0x39D658C
	0x039D647C LDRB W9, [X31 + 0x118]
	0x039D6480 LDRB W8, [X31 + 0x110]
	0x039D6484 MOV X19, X1
	0x039D6488 MOV X25, X0
	0x039D648C LDR X1, [X0 + 0x60]
	0x039D6490 STP W9, W8, [X31 + 0x70]
	0x039D6494 LDRB W9, [X31 + 0x108]
	0x039D6498 LDRB W8, [X31 + 0x100]
	0x039D649C LDR X0, [X19 + 0x40]
	0x039D64A0 LDR X2, [X19 + 0x28]
	0x039D64A4 LDR X29, [X31 + 0x150]
	0x039D64A8 STP W9, W8, [X31 + 0x78]
	0x039D64AC LDR X8, [X19 + 0x18]
	0x039D64B0 LDR W20, [X31 + 0x148]
	0x039D64B4 LDR W21, [X31 + 0x140]
	0x039D64B8 LDRB W22, [X31 + 0x138]
	0x039D64BC LDRB W23, [X31 + 0x130]
	0x039D64C0 LDR W24, [X31 + 0x128]
	0x039D64C4 LDR W26, [X31 + 0x120]
	0x039D64C8 MOV V8.16B, V0.16B
	0x039D64CC BLR X8
	0x039D64D0 UBFM X8, X0, 0x20, 0x3F
	0x039D64D4 CMP W0, 0x1
	0x039D64D8 CSINC W28, W0, W31, GT
	0x039D64DC CMP W8, 0x1
	0x039D64E0 CSINC W27, W8, W31, GT
	0x039D64E4 AND W8, W22, 0x1
	0x039D64E8 LDP W10, W11, [X31 + 0x70]
	0x039D64EC LDP W12, W13, [X31 + 0x78]
	0x039D64F0 STRB W8, [X31 + 0x40]
	0x039D64F4 LDP W8, W3, [X31 + 0x80]
	0x039D64F8 LDP W4, W5, [X31 + 0x88]
	0x039D64FC LDP W6, W7, [X31 + 0x98]
	0x039D6500 AND W9, W23, 0x1
	0x039D6504 AND W10, W10, 0x1
	0x039D6508 AND W11, W11, 0x1
	0x039D650C AND W12, W12, 0x1
	0x039D6510 AND W13, W13, 0x1
	0x039D6514 MOV V0.16B, V8.16B
	0x039D6518 MOV X0, X25
	0x039D651C MOV W1, W28
	0x039D6520 MOV W2, W27
	0x039D6524 STR X29, [X31 + 0x58]
	0x039D6528 STR W20, [X31 + 0x50]
	0x039D652C STR W21, [X31 + 0x48]
	0x039D6530 STR W24, [X31 + 0x30]
	0x039D6534 STR W26, [X31 + 0x28]
	0x039D6538 STRB W9, [X31 + 0x38]
	0x039D653C STRB W10, [X31 + 0x20]
	0x039D6540 STRB W11, [X31 + 0x18]
	0x039D6544 STRB W12, [X31 + 0x10]
	0x039D6548 STRB W13, [X31 + 0x8]
	0x039D654C STR W8, [X31]
	0x039D6550 BL 0x39D7E20
	0x039D6554 CBZ X0, 0x39D658C
	0x039D6558 MOV W8, W28
	0x039D655C BFM X8, X27, 0x20, 0x1F
	0x039D6560 STR X19, [X0 + 0xA0]
	0x039D6564 LDP X20, X19, [X31 + 0xF0]
	0x039D6568 LDP X22, X21, [X31 + 0xE0]
	0x039D656C LDP X24, X23, [X31 + 0xD0]
	0x039D6570 LDP X26, X25, [X31 + 0xC0]
	0x039D6574 LDP X28, X27, [X31 + 0xB0]
	0x039D6578 LDP X29, X30, [X31 + 0xA0]
	0x039D657C LDR V8, [X31 + 0x90]
	0x039D6580 STUR X8, [X0 + 0xAC]
	0x039D6584 ADD X31, X31, 0x100
	0x039D6588 RET
	0x039D658C BL 0x1C16F20
	0x039D6590 SUB X31, X31, 0x140
	0x039D6594 STR D8, [X31 + 0xD0]
	0x039D6598 STP X29, X30, [X31 + 0xE0]
	0x039D659C STP X28, X27, [X31 + 0xF0]
	0x039D65A0 STP X26, X25, [X31 + 0x100]
	0x039D65A4 STP X24, X23, [X31 + 0x110]
	0x039D65A8 STP X22, X21, [X31 + 0x120]
	0x039D65AC STP X20, X19, [X31 + 0x130]
	0x039D65B0 ADRP X20, 0xA0B000
	0x039D65B4 ADRP X19, 0x77A000
	0x039D65B8 LDRB W8, [X20 + 0xD3B]
	0x039D65BC LDR X19, [X19 + 0x9B0]
	0x039D65C0 MOV X27, X6
	0x039D65C4 MOV V8.16B, V0.16B
	0x039D65C8 MOV W26, W5
	0x039D65CC MOV W24, W4
	0x039D65D0 MOV W21, W3
	0x039D65D4 MOV W22, W2
	0x039D65D8 MOV X25, X1
	0x039D65DC MOV X23, X0
	0x039D65E0 TBNZ X8, 0x0, 0x39D65F8
	0x039D65E4 ADRP X0, 0x77A000
	0x039D65E8 LDR X0, [X0 + 0x9B0]
	0x039D65EC BL 0x1C16CF4
	0x039D65F0 MOVZ W8, 0x1
	0x039D65F4 STRB W8, [X20 + 0xD3B]
	0x039D65F8 LDR X0, [X19]
	0x039D65FC MOVI V0.2D, 0x0
	0x039D6600 STR W31, [X31 + 0xC0]
	0x039D6604 STP V0, V0, [X31 + 0xA0]
	0x039D6608 STR V0, [X31 + 0x9]
	0x039D660C LDR W8, [X0 + 0xE0]
	0x039D6610 STP W22, W21, [X31 + 0xD8]
	0x039D6614 STR X23, [X31 + 0x88]
	0x039D6618 STR W24, [X31 + 0x84]
	0x039D661C STR X27, [X31 + 0x78]
	0x039D6620 CBNZ W8, 0x39D662C
	0x039D6624 BL 0x1C16DFC
	0x039D6628 LDR X0, [X19]
	0x039D662C LDR W9, [X25 + 0xC]
	0x039D6630 LDR X8, [X0 + 0xB8]
	0x039D6634 LDP V0, V1, [X25 + 0x10]
	0x039D6638 LDR V2, [X25]
	0x039D663C STR W9, [X31 + 0x74]
	0x039D6640 LDR W9, [X25 + 0x30]
	0x039D6644 LDR X27, [X8]
	0x039D6648 ADD X0, X31, 0x90
	0x039D664C MOV X1, X31
	0x039D6650 STR W9, [X31 + 0xC0]
	0x039D6654 STP V0, V1, [X31 + 0xA0]
	0x039D6658 STR V2, [X31 + 0x9]
	0x039D665C BL 0x3C224C4
	0x039D6660 LDR W8, [X25 + 0x30]
	0x039D6664 LDP V2, V0, [X25 + 0x10]
	0x039D6668 LDR V1, [X25]
	0x039D666C MOV W28, W0
	0x039D6670 ADD X0, X31, 0x90
	0x039D6674 MOV X1, X31
	0x039D6678 STR W8, [X31 + 0xC0]
	0x039D667C STP V2, V0, [X31 + 0xA0]
	0x039D6680 STR V1, [X31 + 0x9]
	0x039D6684 BL 0x3C22060
	0x039D6688 LDP V1, V0, [X25]
	0x039D668C LDR V2, [X25 + 0x2]
	0x039D6690 LDR W8, [X25 + 0x30]
	0x039D6694 LDR W19, [X25 + 0x20]
	0x039D6698 MOV W29, W0
	0x039D669C ADD X0, X31, 0x90
	0x039D66A0 MOV X1, X31
	0x039D66A4 STP V1, V0, [X31 + 0x90]
	0x039D66A8 STR V2, [X31 + 0xB]
	0x039D66AC STR W8, [X31 + 0xC0]
	0x039D66B0 BL 0x3C22B64
	0x039D66B4 LDR W8, [X25 + 0x30]
	0x039D66B8 LDP V2, V0, [X25 + 0x10]
	0x039D66BC LDR V1, [X25]
	0x039D66C0 MOV W20, W0
	0x039D66C4 ADD X0, X31, 0x90
	0x039D66C8 MOV X1, X31
	0x039D66CC STR W8, [X31 + 0xC0]
	0x039D66D0 STP V2, V0, [X31 + 0xA0]
	0x039D66D4 STR V1, [X31 + 0x9]
	0x039D66D8 BL 0x3C22B1C
	0x039D66DC LDR W8, [X25 + 0x30]
	0x039D66E0 LDP V2, V0, [X25 + 0x10]
	0x039D66E4 LDR V1, [X25]
	0x039D66E8 MOV W21, W0
	0x039D66EC ADD X0, X31, 0x90
	0x039D66F0 MOV X1, X31
	0x039D66F4 STR W8, [X31 + 0xC0]
	0x039D66F8 STP V2, V0, [X31 + 0xA0]
	0x039D66FC STR V1, [X31 + 0x9]
	0x039D6700 BL 0x3C22B38
	0x039D6704 LDP V0, V2, [X25]
	0x039D6708 LDR V1, [X25 + 0x2]
	0x039D670C LDR W8, [X25 + 0x30]
	0x039D6710 LDR W24, [X25 + 0x8]
	0x039D6714 MOV W22, W0
	0x039D6718 ADD X0, X31, 0x90
	0x039D671C MOV X1, X31
	0x039D6720 STP V0, V2, [X31 + 0x90]
	0x039D6724 STR V1, [X31 + 0xB]
	0x039D6728 STR W8, [X31 + 0xC0]
	0x039D672C BL 0x3C22B90
	0x039D6730 LDR W8, [X25 + 0x30]
	0x039D6734 LDP V2, V0, [X25 + 0x10]
	0x039D6738 LDR V1, [X25]
	0x039D673C MOV W23, W0
	0x039D6740 ADD X0, X31, 0x90
	0x039D6744 MOV X1, X31
	0x039D6748 STR W8, [X31 + 0xC0]
	0x039D674C STP V2, V0, [X31 + 0xA0]
	0x039D6750 STR V1, [X31 + 0x9]
	0x039D6754 BL 0x3C22BBC
	0x039D6758 CBZ X27, 0x39D67F8
	0x039D675C LDR X10, [X31 + 0x78]
	0x039D6760 LDR W8, [X25 + 0x28]
	0x039D6764 LDR W9, [X25 + 0x30]
	0x039D6768 LDR X1, [X31 + 0x88]
	0x039D676C STR X10, [X31 + 0x50]
	0x039D6770 LDR W10, [X31 + 0x84]
	0x039D6774 LDR W2, [X31 + 0x74]
	0x039D6778 LDP W5, W6, [X31 + 0xD8]
	0x039D677C STR W8, [X31 + 0x48]
	0x039D6780 STR W9, [X31 + 0x40]
	0x039D6784 AND W8, W0, 0x1
	0x039D6788 AND W9, W23, 0x1
	0x039D678C AND W10, W10, 0x1
	0x039D6790 AND W11, W22, 0x1
	0x039D6794 AND W12, W21, 0x1
	0x039D6798 AND W13, W20, 0x1
	0x039D679C MOV V0.16B, V8.16B
	0x039D67A0 MOV X0, X27
	0x039D67A4 MOV W3, W28
	0x039D67A8 MOV W4, W29
	0x039D67AC MOV W7, W19
	0x039D67B0 STR W24, [X31 + 0x28]
	0x039D67B4 STR W26, [X31 + 0x20]
	0x039D67B8 STRB W8, [X31 + 0x38]
	0x039D67BC STRB W9, [X31 + 0x30]
	0x039D67C0 STRB W10, [X31 + 0x18]
	0x039D67C4 STRB W11, [X31 + 0x10]
	0x039D67C8 STRB W12, [X31 + 0x8]
	0x039D67CC STRB W13, [X31]
	0x039D67D0 BL 0x39D644C
	0x039D67D4 LDP X20, X19, [X31 + 0x130]
	0x039D67D8 LDP X22, X21, [X31 + 0x120]
	0x039D67DC LDP X24, X23, [X31 + 0x110]
	0x039D67E0 LDP X26, X25, [X31 + 0x100]
	0x039D67E4 LDP X28, X27, [X31 + 0xF0]
	0x039D67E8 LDP X29, X30, [X31 + 0xE0]
	0x039D67EC LDR V8, [X31 + 0xD0]
	0x039D67F0 ADD X31, X31, 0x140
	0x039D67F4 RET
	0x039D67F8 BL 0x1C16F20
	0x039D67FC STP X30, X21, [X31 - 0x20]!
	0x039D6800 STP X20, X19, [X31 + 0x10]
	0x039D6804 ADRP X21, 0xA0B000
	0x039D6808 ADRP X20, 0x77A000
	0x039D680C LDRB W8, [X21 + 0xD3C]
	0x039D6810 LDR X20, [X20 + 0x9B0]
	0x039D6814 MOV X19, X0
	0x039D6818 TBNZ X8, 0x0, 0x39D6830
	0x039D681C ADRP X0, 0x77A000
	0x039D6820 LDR X0, [X0 + 0x9B0]
	0x039D6824 BL 0x1C16CF4
	0x039D6828 MOVZ W8, 0x1
	0x039D682C STRB W8, [X21 + 0xD3C]
	0x039D6830 LDR X0, [X20]
	0x039D6834 LDR W8, [X0 + 0xE0]
	0x039D6838 CBNZ W8, 0x39D6844
	0x039D683C BL 0x1C16DFC
	0x039D6840 LDR X0, [X20]
	0x039D6844 LDR X8, [X0 + 0xB8]
	0x039D6848 LDR X0, [X8]
	0x039D684C CBZ X0, 0x39D6860
	0x039D6850 MOV X1, X19
	0x039D6854 LDP X20, X19, [X31 + 0x10]
	0x039D6858 LDP X30, X21, [X31], #0x20
	0x039D685C B 0x39D6864
	0x039D6860 BL 0x1C16F20
	0x039D6864 SUB X31, X31, 0x60
	0x039D6868 STR X30, [X31 + 0x30]
	0x039D686C STP X22, X21, [X31 + 0x40]
	0x039D6870 STP X20, X19, [X31 + 0x50]
	0x039D6874 ADRP X20, 0xA0B000
	0x039D6878 ADRP X22, 0x77D000
	0x039D687C LDRB W8, [X20 + 0xD57]
	0x039D6880 LDR X22, [X22 + 0xC0]
	0x039D6884 MOV X19, X1
	0x039D6888 MOV X21, X0
	0x039D688C TBNZ X8, 0x0, 0x39D68A4
	0x039D6890 ADRP X0, 0x77D000
	0x039D6894 LDR X0, [X0 + 0xC0]
	0x039D6898 BL 0x1C16CF4
	0x039D689C MOVZ W8, 0x1
	0x039D68A0 STRB W8, [X20 + 0xD57]
	0x039D68A4 LDR X0, [X22]
	0x039D68A8 BL 0x1C16F10
	0x039D68AC MOV X1, X31
	0x039D68B0 MOV X20, X0
	0x039D68B4 BL 0x33BDD8C
	0x039D68B8 MOVI V0.2D, 0x0
	0x039D68BC ADD X0, X31, 0x0
	0x039D68C0 MOV X1, X19
	0x039D68C4 MOV X2, X31
	0x039D68C8 STP X21, X31, [X20 + 0x10]
	0x039D68CC STR X19, [X20 + 0x20]
	0x039D68D0 STR X31, [X31 + 0x20]
	0x039D68D4 STP V0, V0, [X31]
	0x039D68D8 BL 0x3C4B0C4
	0x039D68DC LDR X8, [X31 + 0x20]
	0x039D68E0 LDP V0, V1, [X31]
	0x039D68E4 STRH W31, [X20 + 0x50]
	0x039D68E8 STRB W31, [X20 + 0xA8]
	0x039D68EC STR X8, [X20 + 0x48]
	0x039D68F0 STUR V1, [X20 + 0x38]
	0x039D68F4 STUR V0, [X20 + 0x28]
	0x039D68F8 STRB W31, [X20 + 0x52]
	0x039D68FC CBZ X19, 0x39D6928
	0x039D6900 MOV X0, X19
	0x039D6904 MOV X1, X31
	0x039D6908 BL 0x3C389D4
	0x039D690C STR X0, [X20 + 0x58]
	0x039D6910 MOV X0, X20
	0x039D6914 LDP X20, X19, [X31 + 0x50]
	0x039D6918 LDP X22, X21, [X31 + 0x40]
	0x039D691C LDR X30, [X31 + 0x30]
	0x039D6920 ADD X31, X31, 0x60
	0x039D6924 RET
	0x039D6928 BL 0x1C16F20
	0x039D692C STP X30, X21, [X31 - 0x20]!
	0x039D6930 STP X20, X19, [X31 + 0x10]
	0x039D6934 ADRP X21, 0xA0B000
	0x039D6938 ADRP X20, 0x77A000
	0x039D693C LDRB W8, [X21 + 0xD3D]
	0x039D6940 LDR X20, [X20 + 0x9B0]
	0x039D6944 MOV X19, X0
	0x039D6948 TBNZ X8, 0x0, 0x39D6960
	0x039D694C ADRP X0, 0x77A000
	0x039D6950 LDR X0, [X0 + 0x9B0]
	0x039D6954 BL 0x1C16CF4
	0x039D6958 MOVZ W8, 0x1
	0x039D695C STRB W8, [X21 + 0xD3D]
	0x039D6960 LDR X0, [X20]
	0x039D6964 LDR W8, [X0 + 0xE0]
	0x039D6968 CBNZ W8, 0x39D6974
	0x039D696C BL 0x1C16DFC
	0x039D6970 LDR X0, [X20]
	0x039D6974 LDR X8, [X0 + 0xB8]
	0x039D6978 LDR X0, [X8]
	0x039D697C CBZ X0, 0x39D6990
	0x039D6980 MOV X1, X19
	0x039D6984 LDP X20, X19, [X31 + 0x10]
	0x039D6988 LDP X30, X21, [X31], #0x20
	0x039D698C B 0x39D6994
	0x039D6990 BL 0x1C16F20
	0x039D6994 SUB X31, X31, 0x60
	0x039D6998 STR X30, [X31 + 0x30]
	0x039D699C STP X22, X21, [X31 + 0x40]
	0x039D69A0 STP X20, X19, [X31 + 0x50]
	0x039D69A4 ADRP X20, 0xA0B000
	0x039D69A8 ADRP X22, 0x77D000
	0x039D69AC LDRB W8, [X20 + 0xD56]
	0x039D69B0 LDR X22, [X22 + 0xC0]
	0x039D69B4 MOV X19, X1
	0x039D69B8 MOV X21, X0
	0x039D69BC TBNZ X8, 0x0, 0x39D69D4
	0x039D69C0 ADRP X0, 0x77D000
	0x039D69C4 LDR X0, [X0 + 0xC0]
	0x039D69C8 BL 0x1C16CF4
	0x039D69CC MOVZ W8, 0x1
	0x039D69D0 STRB W8, [X20 + 0xD56]
	0x039D69D4 LDR X0, [X22]
	0x039D69D8 BL 0x1C16F10
	0x039D69DC MOV X1, X31
	0x039D69E0 MOV X20, X0
	0x039D69E4 BL 0x33BDD8C
	0x039D69E8 MOVI V0.2D, 0x0
	0x039D69EC ADD X0, X31, 0x0
	0x039D69F0 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D8
	003 Move [X31+144], X29
	004 Move [X31+152], X30
	005 Move [X31+160], X28
	006 Move [X31+168], X27
	007 Move [X31+176], X26
	008 Move [X31+184], X25
	009 Move [X31+192], X24
	010 Move [X31+200], X23
	011 Move [X31+208], X22
	012 Move [X31+216], X21
	013 Move [X31+224], X20
	014 Move [X31+232], X19
	015 Move X19, 0xA0C000
	016 Move W8, [X19+3412]
	017 Move W22, [X31+304]
	018 Move V8, V0
	019 Move W29, W7
	020 Move W27, W6
	021 Move W21, W3
	022 Move X23, X0
	023 Move [X31+32], W4
	024 Move [X31+36], W5
	025 Move [X31+72], X2
	026 Move [X31+140], W1
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {48}
	031 Move X0, 0x746000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x71E000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x77E000
	038 Move X0, [X0+192]
	039 Call 0x1C17CF4
	040 Move X0, 0x720000
	041 Move X0, [X0+304]
	042 Call 0x1C17CF4
	043 Move X0, 0x77E000
	044 Move X0, [X0+200]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+3412], W8
	048 Move W9, [X31+336]
	049 Move W8, [X31+328]
	050 Move W19, [X31+256]
	051 Move W24, [X31+248]
	052 Move W20, [X31+312]
	053 Move [X31+48], W8
	054 Move [X31+52], W9
	055 Move W8, [X31+296]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X31+40], W8
	058 Move TEMP, X20
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {75}
	062 Move X8, 0x71E000
	063 Move X8, [X8+2600]
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, 0x77E000
	070 Move X8, [X8+200]
	071 Move X1, X31
	072 Move X0, [X8]
	073 Call Debug.LogWarning, X0
	074 Move W20, W31
	075 Move X9, [X31+344]
	076 Move X25, 0x720000
	077 Move W8, [X31+288]
	078 Move W28, [X31+280]
	079 Move [X31+56], X9
	080 Move [X31+64], X23
	081 Move W9, [X31+320]
	082 Move W26, [X31+272]
	083 Move [X31+44], W9
	084 Move W9, [X31+264]
	085 Move [X31+136], W9
	086 Move X25, [X25+304]
	087 Compare W29, 0
	088 JumpIfNotEqual {205}
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {205}
	093 Move X0, [X25]
	094 Move W23, [X31+240]
	095 Call 0x1C17F10
	096 Move X29, [X31+72]
	097 Move W1, [X31+140]
	098 Move W3, W31
	099 Move W4, W23
	100 Move W2, W29
	101 Move X5, X31
	102 Move X25, X0
	103 Call RenderTexture..ctor, X0, X1, X2, X3, X4
	104 Compare X25, 0
	105 JumpIfEqual {393}
	106 Move W1, 61
	107 Move X0, X25
	108 Move X2, X31
	109 Call Object.set_hideFlags, X0, X1
	110 Move X0, X25
	111 Move W1, W27
	112 Move X2, X31
	113 Call RenderTexture.set_volumeDepth, X0, X1
	114 Move X0, X25
	115 Move W1, W24
	116 Move X2, X31
	117 Call Texture.set_filterMode, X0, X1
	118 Move X0, X25
	119 Move W1, W21
	120 Move X2, X31
	121 Call Texture.set_wrapModeU, X0, X1
	122 Move W1, [X31+32]
	123 Move X0, X25
	124 Move X2, X31
	125 Call Texture.set_wrapModeV, X0, X1
	126 Move W1, [X31+36]
	127 Move X0, X25
	128 Move X2, X31
	129 Call Texture.set_wrapModeW, X0, X1
	130 Move X8, [X25]
	131 Move X0, X25
	132 Move W1, W19
	133 Move X9, [X8+472]
	134 Move X2, [X8+480]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move W8, [X31+136]
	137 Move X0, X25
	138 Move X2, X31
	139 And W1, W8, 1
	140 Call RenderTexture.set_enableRandomWrite, X0, X1
	141 And W21, W26, 1
	142 Move X0, X25
	143 Move W1, W21
	144 Move X2, X31
	145 Call RenderTexture.set_useMipMap, X0, X1
	146 And W1, W28, 1
	147 Move X0, X25
	148 Move X2, X31
	149 Call RenderTexture.set_autoGenerateMips, X0, X1
	150 Move W1, [X31+40]
	151 Move X0, X25
	152 Move X2, X31
	153 Call Texture.set_anisoLevel, X0, X1
	154 Move X0, X25
	155 Move V0, V8
	156 Move X1, X31
	157 Call Texture.set_mipMapBias, X0, V0
	158 Move X0, X25
	159 Move W1, W22
	160 Move X2, X31
	161 Call RenderTexture.set_antiAliasing, X0, X1
	162 And W1, W20, 1
	163 Move X0, X25
	164 Move X2, X31
	165 Call RenderTexture.set_bindTextureMS, X0, X1
	166 Move X26, [X31+64]
	167 Move W28, [X31+44]
	168 Move X0, X25
	169 Move X2, X31
	170 Move W8, [X26+16]
	171 And W8, W28, W8
	172 And W1, W8, 1
	173 Call RenderTexture.set_useDynamicScale, X0, X1
	174 Move W1, [X31+48]
	175 Move X0, X25
	176 Move X2, X31
	177 Call RenderTexture.set_memorylessMode, X0, X1
	178 Move W1, [X31+52]
	179 Move X0, X25
	180 Move X2, X31
	181 Call RenderTexture.set_vrUsage, X0, X1
	182 Move X8, 0x746000
	183 Move X8, [X8+2296]
	184 Move X0, [X8]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move W24, [X31+140]
	190 Move W2, W27
	191 Move X27, [X31+56]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 NotImplemented "Instruction CSET not yet implemented."
	194 And W8, W28, 1
	195 Move W0, W24
	196 Move W1, W29
	197 Move W3, W23
	198 Move W4, W19
	199 Move X5, X27
	200 Move W6, W21
	201 Move [X31+16], X31
	202 Move [X31+8], W8
	203 Move [X31], W22
	204 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	205 And W8, W8, 1
	206 Move W9, 3
	207 NotImplemented "Instruction CSINC not yet implemented."
	208 Move [X31+28], W9
	209 Compare W8, 0
	210 JumpIfEqual {212}
	211 Move [X31+24], W31
	212 Move W0, 13
	213 Move W1, 16
	214 Move X2, X31
	215 Move W23, 13
	216 Call SystemInfo.IsFormatSupported, X0, X1
	217 And W31, W0, 1
	218 NotImplemented "Instruction CSEL not yet implemented."
	219 Move [X31+24], W8
	220 Move X0, [X25]
	221 Call 0x1C17F10
	222 Move W1, [X31+140]
	223 Move W4, [X31+28]
	224 Move W5, 1
	225 Move X2, [X31+72]
	226 Move W3, W29
	227 Move X6, X31
	228 Move X25, X0
	229 Call RenderTexture..ctor, X0, X1, X2, X3, X4, X5
	230 Compare X25, 0
	231 JumpIfEqual {393}
	232 Move W1, 61
	233 Move X0, X25
	234 Move X2, X31
	235 Call Object.set_hideFlags, X0, X1
	236 Move X0, X25
	237 Move W1, W27
	238 Move X2, X31
	239 Call RenderTexture.set_volumeDepth, X0, X1
	240 Move X0, X25
	241 Move W1, W24
	242 Move X2, X31
	243 Call Texture.set_filterMode, X0, X1
	244 Move X0, X25
	245 Move W1, W21
	246 Move X2, X31
	247 Call Texture.set_wrapModeU, X0, X1
	248 Move W1, [X31+32]
	249 Move X0, X25
	250 Move X2, X31
	251 Call Texture.set_wrapModeV, X0, X1
	252 Move W1, [X31+36]
	253 Move X0, X25
	254 Move X2, X31
	255 Call Texture.set_wrapModeW, X0, X1
	256 Move X8, [X25]
	257 Move X0, X25
	258 Move W1, W19
	259 Move X9, [X8+472]
	260 Move X2, [X8+480]
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move W8, [X31+136]
	263 Move X0, X25
	264 Move X2, X31
	265 And W1, W8, 1
	266 Call RenderTexture.set_enableRandomWrite, X0, X1
	267 And W21, W26, 1
	268 Move X0, X25
	269 Move W1, W21
	270 Move X2, X31
	271 Call RenderTexture.set_useMipMap, X0, X1
	272 And W1, W28, 1
	273 Move X0, X25
	274 Move X2, X31
	275 Call RenderTexture.set_autoGenerateMips, X0, X1
	276 Move W1, [X31+40]
	277 Move X0, X25
	278 Move X2, X31
	279 Call Texture.set_anisoLevel, X0, X1
	280 Move X0, X25
	281 Move V0, V8
	282 Move X1, X31
	283 Call Texture.set_mipMapBias, X0, V0
	284 Move W1, [X31+24]
	285 Move X0, X25
	286 Move X2, X31
	287 Call RenderTexture.set_stencilFormat, X0, X1
	288 Move X0, X25
	289 Move W1, W22
	290 Move X2, X31
	291 Call RenderTexture.set_antiAliasing, X0, X1
	292 And W1, W20, 1
	293 Move X0, X25
	294 Move X2, X31
	295 Call RenderTexture.set_bindTextureMS, X0, X1
	296 Move X26, [X31+64]
	297 Move W28, [X31+44]
	298 Move X0, X25
	299 Move X2, X31
	300 Move W8, [X26+16]
	301 And W8, W28, W8
	302 And W1, W8, 1
	303 Call RenderTexture.set_useDynamicScale, X0, X1
	304 Move W1, [X31+48]
	305 Move X0, X25
	306 Move X2, X31
	307 Call RenderTexture.set_memorylessMode, X0, X1
	308 Move W1, [X31+52]
	309 Move X0, X25
	310 Move X2, X31
	311 Call RenderTexture.set_vrUsage, X0, X1
	312 Move X8, 0x746000
	313 Move X8, [X8+2296]
	314 Move X0, [X8]
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move W24, [X31+140]
	320 Move X29, [X31+72]
	321 Move W2, W27
	322 Move X27, [X31+56]
	323 Move W3, [X31+28]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 NotImplemented "Instruction CSET not yet implemented."
	326 Move W0, W24
	327 Move W1, W29
	328 Move X4, X27
	329 Move W5, W21
	330 Move W7, W22
	331 Move [X31], X31
	332 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7
	333 Move X1, X0
	334 Move X0, X25
	335 Move X2, X31
	336 Call Object.set_name, X0, X1
	337 Move X20, 0x77E000
	338 Move X20, [X20+192]
	339 Move W8, [X31+136]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move X0, X25
	342 Move X1, X31
	343 And W19, W28, 1
	344 NotImplemented "Instruction CSET not yet implemented."
	345 And W23, W8, 1
	346 Call RenderTexture.Create, X0
	347 Move X0, [X20]
	348 Call 0x1C17F10
	349 Move X1, X31
	350 Move X21, X0
	351 Call Object..ctor, X0
	352 NotImplemented "Instruction MOVI not yet implemented."
	353 Add X0, X31, 80
	354 Move X1, X25
	355 Move X2, X31
	356 Move [X21+16], X26
	357 Move [X21+24], X25
	358 Move [X21+32], X31
	359 Move [X31+112], X31
	360 Move [X31+80], V0
	361 Move [X31+88], V0
	362 Call RenderTargetIdentifier..ctor, X0, X1
	363 Move V0, [X31+80]
	364 Move V1, [X31+96]
	365 Move X8, [X31+112]
	366 Move W9, W24
	367 NotImplemented "Instruction BFM not yet implemented."
	368 Move [X21+168], W31
	369 Move [X21+81], W23
	370 Move [X21+80], W22
	371 Move [X21+82], W19
	372 Move [X21+88], X27
	373 Move [X21+72], X8
	374 Move [X21+56], V1
	375 Move [X21+40], V0
	376 Move [X21+172], X9
	377 Move X0, X21
	378 Move X20, [X31+224]
	379 Move X19, [X31+232]
	380 Move X22, [X31+208]
	381 Move X21, [X31+216]
	382 Move X24, [X31+192]
	383 Move X23, [X31+200]
	384 Move X26, [X31+176]
	385 Move X25, [X31+184]
	386 Move X28, [X31+160]
	387 Move X27, [X31+168]
	388 Move X29, [X31+144]
	389 Move X30, [X31+152]
	390 Move V8, [X31+128]
	391 Add X31, X31, 240
	392 Return X0
	393 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle Alloc(UnityEngine.Vector2 scaleFactor, System.Int32 slices = 1, UnityEngine.Rendering.DepthBits depthBufferBits = 0, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat = 4, UnityEngine.FilterMode filterMode = 0, UnityEngine.TextureWrapMode wrapMode = 0, UnityEngine.Rendering.TextureDimension dimension = 2, System.Boolean enableRandomWrite = False, System.Boolean useMipMap = False, System.Boolean autoGenerateMips = True, System.Boolean isShadowMap = False, System.Int32 anisoLevel = 1, System.Single mipMapBias = 0, UnityEngine.Rendering.MSAASamples msaaSamples = 1, System.Boolean bindTextureMS = False, System.Boolean useDynamicScale = False, UnityEngine.RenderTextureMemoryless memoryless = 0, UnityEngine.VRTextureUsage vrUsage = 0, System.String name = )

Disassembly:
	0x039D6DC4 CBZ X0, 0x39D6F30
	0x039D6DC8 LDR W8, [X0 + 0x20]
	0x039D6DCC CBZ W8, 0x39D6EA0
	0x039D6DD0 ADRP X8, 0x77D000
	0x039D6DD4 ADRP X9, 0x77D000
	0x039D6DD8 LDR X8, [X8 + 0x100]
	0x039D6DDC LDR X9, [X9 + 0xF0]
	0x039D6DE0 ADRP X24, 0x77D000
	0x039D6DE4 ADRP X27, 0x77D000
	0x039D6DE8 LDR X24, [X24 + 0xE0]
	0x039D6DEC LDR X27, [X27 + 0x110]
	0x039D6DF0 LDR X1, [X9]
	0x039D6DF4 ADRP X26, 0x77D000
	0x039D6DF8 ADRP X25, 0x71D000
	0x039D6DFC ADRP X28, 0x77D000
	0x039D6E00 LDR X23, [X8]
	0x039D6E04 LDR X26, [X26 + 0x108]
	0x039D6E08 LDR X25, [X25 + 0xA28]
	0x039D6E0C LDR X28, [X28 + 0xD8]
	0x039D6E10 ADD X8, X31, 0x8
	0x039D6E14 BL 0x2DBE924
	0x039D6E18 LDUR V0, [X31 + 0x8]
	0x039D6E1C LDR X8, [X31 + 0x18]
	0x039D6E20 STR V0, [X31 + 0x2]
	0x039D6E24 STR X8, [X31 + 0x30]
	0x039D6E28 LDR X1, [X24]
	0x039D6E2C MOV X22, X23
	0x039D6E30 ADD X0, X31, 0x20
	0x039D6E34 BL 0x2BC3C64
	0x039D6E38 TBZ X0, 0x0, 0x39D6E60
	0x039D6E3C LDR X8, [X31 + 0x30]
	0x039D6E40 CBZ X8, 0x39D6F2C
	0x039D6E44 LDR X0, [X27]
	0x039D6E48 LDR X2, [X8 + 0x58]
	0x039D6E4C MOV X1, X22
	0x039D6E50 MOV X3, X31
	0x039D6E54 BL 0x3227BD4
	0x039D6E58 MOV X23, X0
	0x039D6E5C B 0x39D6E28
	0x039D6E60 LDR X1, [X28]
	0x039D6E64 ADD X0, X31, 0x20
	0x039D6E68 BL 0x2BC3C60
	0x039D6E6C LDR X0, [X26]
	0x039D6E70 MOV X1, X22
	0x039D6E74 MOV X2, X31
	0x039D6E78 BL 0x321EFD0
	0x039D6E7C LDR X8, [X25]
	0x039D6E80 MOV X22, X0
	0x039D6E84 LDR W9, [X8 + 0xE0]
	0x039D6E88 CBNZ W9, 0x39D6E94
	0x039D6E8C MOV X0, X8
	0x039D6E90 BL 0x1C16DFC
	0x039D6E94 MOV X0, X22
	0x039D6E98 MOV X1, X31
	0x039D6E9C BL 0x3C0649C
	0x039D6EA0 ADRP X22, 0x77B000
	0x039D6EA4 LDR X22, [X22 + 0x2D8]
	0x039D6EA8 STP W21, W20, [X19 + 0x60]
	0x039D6EAC LDR X0, [X22]
	0x039D6EB0 LDR W8, [X0 + 0xE0]
	0x039D6EB4 CBNZ W8, 0x39D6EBC
	0x039D6EB8 BL 0x1C16DFC
	0x039D6EBC ADRP X20, 0xA0B000
	0x039D6EC0 LDRB W8, [X20 + 0xD5D]
	0x039D6EC4 CBNZ W8, 0x39D6EDC
	0x039D6EC8 ADRP X0, 0x77B000
	0x039D6ECC LDR X0, [X0 + 0x2D8]
	0x039D6ED0 BL 0x1C16CF4
	0x039D6ED4 MOVZ W8, 0x1
	0x039D6ED8 STRB W8, [X20 + 0xD5D]
	0x039D6EDC LDR X0, [X22]
	0x039D6EE0 LDR W8, [X0 + 0xE0]
	0x039D6EE4 CBNZ W8, 0x39D6EF0
	0x039D6EE8 BL 0x1C16DFC
	0x039D6EEC LDR X0, [X22]
	0x039D6EF0 LDR X8, [X0 + 0xB8]
	0x039D6EF4 LDR X0, [X8 + 0x30]
	0x039D6EF8 CBZ X0, 0x39D6F30
	0x039D6EFC MOV X1, X31
	0x039D6F00 BL 0x399FCB8
	0x039D6F04 AND W8, W0, 0x1
	0x039D6F08 STRB W8, [X19 + 0x10]
	0x039D6F0C LDP X20, X19, [X31 + 0x90]
	0x039D6F10 LDP X22, X21, [X31 + 0x80]
	0x039D6F14 LDP X24, X23, [X31 + 0x70]
	0x039D6F18 LDP X26, X25, [X31 + 0x60]
	0x039D6F1C LDP X28, X27, [X31 + 0x50]
	0x039D6F20 LDR X30, [X31 + 0x40]
	0x039D6F24 ADD X31, X31, 0xA0
	0x039D6F28 RET
	0x039D6F2C BL 0x1C16F20
	0x039D6F30 BL 0x1C16F20
	0x039D6F34 B 0x39D6F3C
	0x039D6F38 B 0x39D6F3C
	0x039D6F3C MOV X23, X0
	0x039D6F40 CMP W1, 0x1
	0x039D6F44 B.NE 0x39D6F78
	0x039D6F48 MOV X0, X23
	0x039D6F4C BL 0x3EB1AD0
	0x039D6F50 LDR X24, [X0]
	0x039D6F54 BL 0x3EB1AE0
	0x039D6F58 ADRP X8, 0x77D000
	0x039D6F5C LDR X8, [X8 + 0xD8]
	0x039D6F60 ADD X0, X31, 0x20
	0x039D6F64 LDR X1, [X8]
	0x039D6F68 BL 0x2BC3C60
	0x039D6F6C CBZ X24, 0x39D6E6C
	0x039D6F70 MOV X0, X24
	0x039D6F74 BL 0x1C16F18
	0x039D6F78 MOV X24, X31
	0x039D6F7C B 0x39D6F84
	0x039D6F80 MOV X23, X0
	0x039D6F84 ADRP X8, 0x77D000
	0x039D6F88 LDR X8, [X8 + 0xD8]
	0x039D6F8C LDR X1, [X8]
	0x039D6F90 ADD X0, X31, 0x20
	0x039D6F94 BL 0x2BC3C60
	0x039D6F98 CBNZ X24, 0x39D6FA4
	0x039D6F9C MOV X0, X23
	0x039D6FA0 BL 0x1D2C690
	0x039D6FA4 MOV X0, X24
	0x039D6FA8 BL 0x1C16F18
	0x039D6FAC BL 0x1990590
	0x039D6FB0 STP X30, X23, [X31 - 0x30]!
	0x039D6FB4 STP X22, X21, [X31 + 0x10]
	0x039D6FB8 STP X20, X19, [X31 + 0x20]
	0x039D6FBC ADRP X23, 0xA0B000
	0x039D6FC0 ADRP X22, 0x77A000
	0x039D6FC4 LDRB W8, [X23 + 0xD42]
	0x039D6FC8 LDR X22, [X22 + 0x9B0]
	0x039D6FCC MOV W19, W2
	0x039D6FD0 MOV W20, W1
	0x039D6FD4 MOV W21, W0
	0x039D6FD8 TBNZ X8, 0x0, 0x39D6FF0
	0x039D6FDC ADRP X0, 0x77A000
	0x039D6FE0 LDR X0, [X0 + 0x9B0]
	0x039D6FE4 BL 0x1C16CF4
	0x039D6FE8 MOVZ W8, 0x1
	0x039D6FEC STRB W8, [X23 + 0xD42]
	0x039D6FF0 LDR X0, [X22]
	0x039D6FF4 LDR W8, [X0 + 0xE0]
	0x039D6FF8 CBNZ W8, 0x39D7004
	0x039D6FFC BL 0x1C16DFC
	0x039D7000 LDR X0, [X22]
	0x039D7004 LDR X8, [X0 + 0xB8]
	0x039D7008 LDR X22, [X8]
	0x039D700C CBZ X22, 0x39D703C
	0x039D7010 MOV X0, X22
	0x039D7014 MOV W1, W21
	0x039D7018 MOV W2, W20
	0x039D701C BL 0x39D6D04
	0x039D7020 TBZ X19, 0x0, 0x39D702C
	0x039D7024 MOVZ W8, 0x1
	0x039D7028 STRB W8, [X22 + 0x10]
	0x039D702C LDP X20, X19, [X31 + 0x20]
	0x039D7030 LDP X22, X21, [X31 + 0x10]
	0x039D7034 LDP X30, X23, [X31], #0x30
	0x039D7038 RET
	0x039D703C BL 0x1C16F20
	0x039D7040 STR X30, [X31 - 0x20]!
	0x039D7044 STP X20, X19, [X31 + 0x10]
	0x039D7048 MOV W20, W3
	0x039D704C MOV X19, X0
	0x039D7050 BL 0x39D6D04
	0x039D7054 TBZ X20, 0x0, 0x39D7060
	0x039D7058 MOVZ W8, 0x1
	0x039D705C STRB W8, [X19 + 0x10]
	0x039D7060 LDP X20, X19, [X31 + 0x10]
	0x039D7064 LDR X30, [X31], #0x20
	0x039D7068 RET
	0x039D706C STP X30, X21, [X31 - 0x20]!
	0x039D7070 STP X20, X19, [X31 + 0x10]
	0x039D7074 ADRP X21, 0xA0A000
	0x039D7078 ADRP X20, 0x779000
	0x039D707C LDRB W8, [X21 + 0xD44]
	0x039D7080 LDR X20, [X20 + 0x9B0]
	0x039D7084 MOV W19, W0
	0x039D7088 TBNZ X8, 0x0, 0x39D70A0
	0x039D708C ADRP X0, 0x779000
	0x039D7090 LDR X0, [X0 + 0x9B0]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+160], D12
	003 Move [X31+176], D11
	004 Move [X31+184], D10
	005 Move [X31+192], D9
	006 Move [X31+200], D8
	007 Move [X31+208], X29
	008 Move [X31+216], X30
	009 Move [X31+224], X28
	010 Move [X31+232], X27
	011 Move [X31+240], X26
	012 Move [X31+248], X25
	013 Move [X31+256], X24
	014 Move [X31+264], X23
	015 Move [X31+272], X22
	016 Move [X31+280], X21
	017 Move [X31+288], X20
	018 Move [X31+296], X19
	019 Move V9, V0
	020 Move V0, [X0+96]
	021 Move X28, 0xA04000
	022 Move W8, [X28+1495]
	023 Move V10, V2
	024 Move V8, V1
	025 Move X19, X0
	026 NotImplemented "Instruction SCVTF not yet implemented."
	027 Move [X31+124], W7
	028 Move [X31+136], W6
	029 Move [X31+140], W1
	030 Move [X31+152], W4
	031 Move [X31+156], W5
	032 Move [X31+144], W2
	033 Move [X31+148], W3
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x71E000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X28+1495], W8
	041 Move X29, 0x71E000
	042 Move X29, [X29+1448]
	043 Multiply S12, S9, S11
	044 Move X0, [X29]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 NotImplemented "Instruction FCVT not yet implemented."
	050 Add X0, X31, 168
	051 Move V0, V11
	052 Call 0x3EB2C00
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move D1, -0.5
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move V0, [X31+168]
	057 Move D1, -1
	058 Move D1, 0.5
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move V0, [X31+168]
	061 Move D1, 1
	062 NotImplemented "Instruction FCVTZS not yet implemented."
	063 Add D1, D0, D1
	064 And X31, X8, 1
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 Add D0, D11, D1
	067 NotImplemented "Instruction FRINTP not yet implemented."
	068 Add D0, D11, D1
	069 NotImplemented "Instruction FRINTM not yet implemented."
	070 Move X9, 0x7FF00000
	071 Move V1, [X19+100]
	072 Move D2, X9
	073 NotImplemented "Instruction FCVTZS not yet implemented."
	074 Move W10, 0x80000000
	075 Move W11, [X28+1495]
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSINC not yet implemented."
	080 NotImplemented "Instruction SCVTF not yet implemented."
	081 Move [X31+120], W8
	082 Compare W11, 0
	083 JumpIfNotEqual {89}
	084 Move X0, 0x71E000
	085 Move X0, [X0+1448]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X28+1495], W8
	089 Move X0, [X29]
	090 Multiply S12, S8, S11
	091 Move [X31+128], X19
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X24, [X31+376]
	097 Move W26, [X31+368]
	098 Move W25, [X31+360]
	099 Move W27, [X31+352]
	100 Move W23, [X31+344]
	101 Move W20, [X31+336]
	102 Move W21, [X31+328]
	103 Move W22, [X31+320]
	104 Move W19, [X31+312]
	105 Move W29, [X31+304]
	106 NotImplemented "Instruction FCVT not yet implemented."
	107 Add X0, X31, 168
	108 Move V0, V11
	109 Call 0x3EB2C00
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move W6, [X31+152]
	112 Move W7, [X31+156]
	113 Move W4, [X31+144]
	114 Move W5, [X31+148]
	115 Move W14, [X31+136]
	116 Move W3, [X31+140]
	117 Move W13, [X31+124]
	118 Move D1, -0.5
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Move V0, [X31+168]
	121 Move D1, -1
	122 Move W6, [X31+152]
	123 Move W7, [X31+156]
	124 Move W4, [X31+144]
	125 Move W5, [X31+148]
	126 Move W14, [X31+136]
	127 Move W3, [X31+140]
	128 Move W13, [X31+124]
	129 Move D1, 0.5
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 Move V0, [X31+168]
	132 Move D1, 1
	133 NotImplemented "Instruction FCVTZS not yet implemented."
	134 Add D1, D0, D1
	135 And X31, X8, 1
	136 NotImplemented "Instruction FCSEL not yet implemented."
	137 Add D0, D11, D1
	138 NotImplemented "Instruction FRINTP not yet implemented."
	139 Add D0, D11, D1
	140 NotImplemented "Instruction FRINTM not yet implemented."
	141 Move X8, 0x7FF00000
	142 Move D1, X8
	143 NotImplemented "Instruction FCVTZS not yet implemented."
	144 NotImplemented "Instruction FCMP not yet implemented."
	145 Move W8, 0x80000000
	146 And W11, W19, 1
	147 Move W19, [X31+120]
	148 NotImplemented "Instruction CSEL not yet implemented."
	149 Move X0, [X31+128]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 NotImplemented "Instruction CSINC not yet implemented."
	152 And W8, W27, 1
	153 And W9, W23, 1
	154 And W10, W22, 1
	155 And W12, W29, 1
	156 And W13, W13, 1
	157 Move V0, V10
	158 Move W1, W19
	159 Move W2, W28
	160 Move [X31+88], X24
	161 Move [X31+80], W26
	162 Move [X31+72], W25
	163 Move [X31+48], W20
	164 Move [X31+40], W21
	165 Move [X31+64], W8
	166 Move [X31+56], W9
	167 Move [X31+32], W10
	168 Move [X31+24], W11
	169 Move [X31+16], W12
	170 Move [X31+8], W13
	171 Move [X31], W14
	172 Call RTHandleSystem.AllocAutoSizedRenderTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, V0, X14, X15, X16, X17, X18, X19
	173 Compare X0, 0
	174 JumpIfEqual {199}
	175 Move W8, W19
	176 NotImplemented "Instruction BFM not yet implemented."
	177 Move [X0+148], S9
	178 Move [X0+156], S8
	179 Move X20, [X31+288]
	180 Move X19, [X31+296]
	181 Move X22, [X31+272]
	182 Move X21, [X31+280]
	183 Move X24, [X31+256]
	184 Move X23, [X31+264]
	185 Move X26, [X31+240]
	186 Move X25, [X31+248]
	187 Move X28, [X31+224]
	188 Move X27, [X31+232]
	189 Move X29, [X31+208]
	190 Move X30, [X31+216]
	191 Move D9, [X31+192]
	192 Move D8, [X31+200]
	193 Move D11, [X31+176]
	194 Move D10, [X31+184]
	195 Move V12, [X31+160]
	196 Move [X0+172], X8
	197 Add X31, X31, 304
	198 Return X0
	199 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle Alloc(UnityEngine.Rendering.ScaleFunc scaleFunc, System.Int32 slices = 1, UnityEngine.Rendering.DepthBits depthBufferBits = 0, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat = 4, UnityEngine.FilterMode filterMode = 0, UnityEngine.TextureWrapMode wrapMode = 0, UnityEngine.Rendering.TextureDimension dimension = 2, System.Boolean enableRandomWrite = False, System.Boolean useMipMap = False, System.Boolean autoGenerateMips = True, System.Boolean isShadowMap = False, System.Int32 anisoLevel = 1, System.Single mipMapBias = 0, UnityEngine.Rendering.MSAASamples msaaSamples = 1, System.Boolean bindTextureMS = False, System.Boolean useDynamicScale = False, UnityEngine.RenderTextureMemoryless memoryless = 0, UnityEngine.VRTextureUsage vrUsage = 0, System.String name = )

Disassembly:
	0x039D744C STR X8, [X0 + 0x10]
	0x039D7450 LDRB W21, [X2 + 0x52]
	0x039D7454 STR X0, [X0 + 0x40]
	0x039D7458 MOV X0, X2
	0x039D745C BL 0x1C16D84
	0x039D7460 TBZ X0, 0x0, 0x39D747C
	0x039D7464 CMP W21, 0x1
	0x039D7468 B.NE 0x39D7480
	0x039D746C ADRP X8, 0xFFFFFFFFFE222000
	0x039D7470 ADD X8, X8, 0xA54
	0x039D7474 STR X8, [X19 + 0x18]
	0x039D7478 B 0x39D7490
	0x039D747C CBZ X20, 0x39D74A8
	0x039D7480 LDR X8, [X19 + 0x10]
	0x039D7484 LDR X9, [X19 + 0x20]
	0x039D7488 STR X8, [X19 + 0x18]
	0x039D748C STR X9, [X19 + 0x40]
	0x039D7490 ADRP X8, 0xFFFFFFFFFE222000
	0x039D7494 ADD X8, X8, 0xA04
	0x039D7498 STR X8, [X19 + 0x38]
	0x039D749C LDP X20, X19, [X31 + 0x10]
	0x039D74A0 LDP X30, X21, [X31], #0x20
	0x039D74A4 RET
	0x039D74A8 ADRP X1, 0xFFFFFFFFFD144000
	0x039D74AC ADD X1, X1, 0xEE3
	0x039D74B0 MOV X0, X31
	0x039D74B4 BL 0x1C16F3C
	0x039D74B8 MOV X1, X31
	0x039D74BC BL 0x1C16DEC
	0x039D74C0 LDR X8, [X0 + 0x40]
	0x039D74C4 LDR X3, [X0 + 0x18]
	0x039D74C8 LDR X2, [X0 + 0x28]
	0x039D74CC MOV X0, X8
	0x039D74D0 BR X3
	0x039D74D4 SUB X31, X31, 0x50
	0x039D74D8 STP X30, X23, [X31 + 0x20]
	0x039D74DC STP X22, X21, [X31 + 0x30]
	0x039D74E0 STP X20, X19, [X31 + 0x40]
	0x039D74E4 ADRP X23, 0xA0A000
	0x039D74E8 STR X1, [X31 + 0x18]
	0x039D74EC ADRP X22, 0x744000
	0x039D74F0 LDRB W8, [X23 + 0xD49]
	0x039D74F4 LDR X22, [X22 + 0x630]
	0x039D74F8 MOV X19, X3
	0x039D74FC MOV X20, X2
	0x039D7500 MOV X21, X0
	0x039D7504 TBNZ X8, 0x0, 0x39D751C
	0x039D7508 ADRP X0, 0x744000
	0x039D750C LDR X0, [X0 + 0x630]
	0x039D7510 BL 0x1C16CF4
	0x039D7514 MOVZ W8, 0x1
	0x039D7518 STRB W8, [X23 + 0xD49]
	0x039D751C LDR X0, [X22]
	0x039D7520 ADD X1, X31, 0x18
	0x039D7524 STP X31, X31, [X31 + 0x8]
	0x039D7528 BL 0x1C16E04
	0x039D752C STR X0, [X31 + 0x8]
	0x039D7530 ADD X1, X31, 0x8
	0x039D7534 MOV X0, X21
	0x039D7538 MOV X2, X20
	0x039D753C MOV X3, X19
	0x039D7540 BL 0x1C16CB0
	0x039D7544 LDP X20, X19, [X31 + 0x40]
	0x039D7548 LDP X22, X21, [X31 + 0x30]
	0x039D754C LDP X30, X23, [X31 + 0x20]
	0x039D7550 ADD X31, X31, 0x50
	0x039D7554 RET
	0x039D7558 STR X30, [X31 - 0x10]!
	0x039D755C MOV X0, X1
	0x039D7560 MOV X1, X31
	0x039D7564 BL 0x1C16CB4
	0x039D7568 CBZ X0, 0x39D757C
	0x039D756C BL 0x1C16E08
	0x039D7570 LDR X0, [X0]
	0x039D7574 LDR X30, [X31], #0x10
	0x039D7578 RET
	0x039D757C BL 0x1C16F20
	0x039D7580 LDP V1, V0, [X0 + 0x40]
	0x039D7584 LDR V2, [X0 + 0x3]
	0x039D7588 STP V1, V0, [X8 + 0x10]
	0x039D758C STR V2, [X8]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+144], D8
	003 Move [X31+160], X29
	004 Move [X31+168], X30
	005 Move [X31+176], X28
	006 Move [X31+184], X27
	007 Move [X31+192], X26
	008 Move [X31+200], X25
	009 Move [X31+208], X24
	010 Move [X31+216], X23
	011 Move [X31+224], X22
	012 Move [X31+232], X21
	013 Move [X31+240], X20
	014 Move [X31+248], X19
	015 Move [X31+128], W7
	016 Move [X31+132], W2
	017 Move [X31+152], W5
	018 Move [X31+156], W6
	019 Move [X31+136], W3
	020 Move [X31+140], W4
	021 Compare X1, 0
	022 JumpIfEqual {107}
	023 Move W9, [X31+280]
	024 Move W8, [X31+272]
	025 Move X19, X1
	026 Move X25, X0
	027 Move X1, [X0+96]
	028 Move [X31+112], W9
	029 Move [X31+116], W8
	030 Move W9, [X31+264]
	031 Move W8, [X31+256]
	032 Move X0, [X19+64]
	033 Move X2, [X19+40]
	034 Move X29, [X31+336]
	035 Move [X31+120], W9
	036 Move [X31+124], W8
	037 Move X8, [X19+24]
	038 Move W20, [X31+328]
	039 Move W21, [X31+320]
	040 Move W22, [X31+312]
	041 Move W23, [X31+304]
	042 Move W24, [X31+296]
	043 Move W26, [X31+288]
	044 Move V8, V0
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, X0
	047 ShiftRight X8, 32
	048 And X8, X8, 0x7FFFFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSINC not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSINC not yet implemented."
	053 And W8, W22, 1
	054 Move W10, [X31+112]
	055 Move W11, [X31+116]
	056 Move W12, [X31+120]
	057 Move W13, [X31+124]
	058 Move [X31+64], W8
	059 Move W8, [X31+128]
	060 Move W3, [X31+132]
	061 Move W4, [X31+136]
	062 Move W5, [X31+140]
	063 Move W6, [X31+152]
	064 Move W7, [X31+156]
	065 And W9, W23, 1
	066 And W10, W10, 1
	067 And W11, W11, 1
	068 And W12, W12, 1
	069 And W13, W13, 1
	070 Move V0, V8
	071 Move X0, X25
	072 Move W1, W28
	073 Move W2, W27
	074 Move [X31+88], X29
	075 Move [X31+80], W20
	076 Move [X31+72], W21
	077 Move [X31+48], W24
	078 Move [X31+40], W26
	079 Move [X31+56], W9
	080 Move [X31+32], W10
	081 Move [X31+24], W11
	082 Move [X31+16], W12
	083 Move [X31+8], W13
	084 Move [X31], W8
	085 Call RTHandleSystem.AllocAutoSizedRenderTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, V0, X14, X15, X16, X17, X18, X19
	086 Compare X0, 0
	087 JumpIfEqual {107}
	088 Move W8, W28
	089 NotImplemented "Instruction BFM not yet implemented."
	090 Move [X0+160], X19
	091 Move X20, [X31+240]
	092 Move X19, [X31+248]
	093 Move X22, [X31+224]
	094 Move X21, [X31+232]
	095 Move X24, [X31+208]
	096 Move X23, [X31+216]
	097 Move X26, [X31+192]
	098 Move X25, [X31+200]
	099 Move X28, [X31+176]
	100 Move X27, [X31+184]
	101 Move X29, [X31+160]
	102 Move X30, [X31+168]
	103 Move V8, [X31+144]
	104 Move [X0+172], X8
	105 Add X31, X31, 256
	106 Return X0
	107 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle AllocAutoSizedRenderTexture(System.Int32 width, System.Int32 height, System.Int32 slices, UnityEngine.Rendering.DepthBits depthBufferBits, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, UnityEngine.FilterMode filterMode, UnityEngine.TextureWrapMode wrapMode, UnityEngine.Rendering.TextureDimension dimension, System.Boolean enableRandomWrite, System.Boolean useMipMap, System.Boolean autoGenerateMips, System.Boolean isShadowMap, System.Int32 anisoLevel, System.Single mipMapBias, UnityEngine.Rendering.MSAASamples msaaSamples, System.Boolean bindTextureMS, System.Boolean useDynamicScale, UnityEngine.RenderTextureMemoryless memoryless, UnityEngine.VRTextureUsage vrUsage, System.String name)

Disassembly:
	0x039D8E20 STR W25, [X19 + 0x20]
	0x039D8E24 STRB W28, [X19 + 0x24]
	0x039D8E28 ADRP X8, 0x778000
	0x039D8E2C LDR X8, [X8 + 0x9B0]
	0x039D8E30 LDR X0, [X8]
	0x039D8E34 LDR W8, [X0 + 0xE0]
	0x039D8E38 CBNZ W8, 0x39D8E40
	0x039D8E3C BL 0x1C16DFC
	0x039D8E40 ADRP X27, 0x77B000
	0x039D8E44 LDR X27, [X27 + 0x198]
	0x039D8E48 LDR W5, [X31 + 0x68]
	0x039D8E4C STP X26, X31, [X31 + 0x50]
	0x039D8E50 MOVZ W26, 0x1
	0x039D8E54 AND W8, W23, 0x1
	0x039D8E58 FMOV S0, W31
	0x039D8E5C MOVZ W2, 0x1
	0x039D8E60 MOVZ W6, 0x1
	0x039D8E64 MOVZ W7, 0x2
	0x039D8E68 MOV W0, W22
	0x039D8E6C MOV W1, W20
	0x039D8E70 MOV W3, W31
	0x039D8E74 MOV W4, W25
	0x039D8E78 STR W31, [X31 + 0x48]
	0x039D8E7C STR W31, [X31 + 0x40]
	0x039D8E80 STRB W31, [X31 + 0x38]
	0x039D8E84 STRB W31, [X31 + 0x30]
	0x039D8E88 STRB W31, [X31 + 0x18]
	0x039D8E8C STRB W31, [X31 + 0x10]
	0x039D8E90 STR W26, [X31 + 0x28]
	0x039D8E94 STR W26, [X31 + 0x20]
	0x039D8E98 STRB W8, [X31 + 0x8]
	0x039D8E9C STRB W31, [X31]
	0x039D8EA0 BL 0x39CB244
	0x039D8EA4 STR X0, [X19 + 0x10]
	0x039D8EA8 STRB W26, [X19 + 0x25]
	0x039D8EAC TBZ X23, 0x0, 0x39D8EC8
	0x039D8EB0 LDP W1, W2, [X19 + 0x18]
	0x039D8EB4 MOV X0, X19
	0x039D8EB8 BL 0x39D8F78
	0x039D8EBC MOV W26, W0
	0x039D8EC0 CMP W0, 0x1
	0x039D8EC4 B.LT 0x39D8F34
	0x039D8EC8 ADRP X21, 0x71F000
	0x039D8ECC LDR X21, [X21 + 0x2C8]
	0x039D8ED0 MOV W23, W31
	0x039D8ED4 LDR X0, [X19 + 0x10]
	0x039D8ED8 MOV X1, X31
	0x039D8EDC BL 0x39D49C4
	0x039D8EE0 LDR X8, [X21]
	0x039D8EE4 MOV X24, X0
	0x039D8EE8 LDR W9, [X8 + 0xE0]
	0x039D8EEC CBNZ W9, 0x39D8EF8
	0x039D8EF0 MOV X0, X8
	0x039D8EF4 BL 0x1C16DFC
	0x039D8EF8 MOV X0, X24
	0x039D8EFC MOV W1, W23
	0x039D8F00 MOV X2, X31
	0x039D8F04 BL 0x3C0FC10
	0x039D8F08 FMOV S0, W31
	0x039D8F0C FMOV S1, W31
	0x039D8F10 FMOV S2, W31
	0x039D8F14 FMOV S3, W31
	0x039D8F18 MOVZ W1, 0x1
	0x039D8F1C MOV W0, W31
	0x039D8F20 MOV X2, X31
	0x039D8F24 BL 0x3C1041C
	0x039D8F28 ADD W23, W23, 0x1
	0x039D8F2C CMP W26, W23
	0x039D8F30 B.NE 0x39D8ED4
	0x039D8F34 LDR X0, [X27]
	0x039D8F38 BL 0x1C16F10
	0x039D8F3C LDR W8, [X31 + 0x6C]
	0x039D8F40 MOV W1, W22
	0x039D8F44 MOV W2, W20
	0x039D8F48 MOV X23, X0
	0x039D8F4C AND W3, W8, 0x1
	0x039D8F50 BL 0x39D86B0
	0x039D8F54 STR X23, [X19 + 0x28]
	0x039D8F58 LDP X20, X19, [X31 + 0xC0]
	0x039D8F5C LDP X22, X21, [X31 + 0xB0]
	0x039D8F60 LDP X24, X23, [X31 + 0xA0]
	0x039D8F64 LDP X26, X25, [X31 + 0x90]
	0x039D8F68 LDP X28, X27, [X31 + 0x80]
	0x039D8F6C LDP X29, X30, [X31 + 0x70]
	0x039D8F70 ADD X31, X31, 0xD0
	0x039D8F74 RET
	0x039D8F78 STR D8, [X31 - 0x20]!
	0x039D8F7C STR X30, [X31 + 0x8]
	0x039D8F80 STP X20, X19, [X31 + 0x10]
	0x039D8F84 LDRB W8, [X0 + 0x24]
	0x039D8F88 CBZ W8, 0x39D9038
	0x039D8F8C ADRP X19, 0xA09000
	0x039D8F90 LDRB W8, [X19 + 0xE38]
	0x039D8F94 CMP W1, W2
	0x039D8F98 CSEL W20, W1, W2, GT
	0x039D8F9C CBNZ W8, 0x39D8FB4
	0x039D8FA0 ADRP X0, 0x71B000
	0x039D8FA4 LDR X0, [X0 + 0x5A8]
	0x039D8FA8 BL 0x1C16CF4
	0x039D8FAC MOVZ W8, 0x1
	0x039D8FB0 STRB W8, [X19 + 0xE38]
	0x039D8FB4 ADRP X19, 0x71B000
	0x039D8FB8 LDR X19, [X19 + 0x5A8]
	0x039D8FBC SCVTF S8, W20
	0x039D8FC0 LDR X0, [X19]
	0x039D8FC4 LDR W8, [X0 + 0xE0]
	0x039D8FC8 CBNZ W8, 0x39D8FD0
	0x039D8FCC BL 0x1C16DFC
	0x039D8FD0 FCVT S0, S8
	0x039D8FD4 FMOV D1, 2
	0x039D8FD8 MOV X0, X31
	0x039D8FDC BL 0x337ECD0
	0x039D8FE0 ADRP X20, 0xA00000
	0x039D8FE4 LDRB W8, [X20 + 0xA23]
	0x039D8FE8 MOV V8.16B, V0.16B
	0x039D8FEC CBNZ W8, 0x39D9004
	0x039D8FF0 ADRP X0, 0x71B000
	0x039D8FF4 LDR X0, [X0 + 0x5A8]
	0x039D8FF8 BL 0x1C16CF4
	0x039D8FFC MOVZ W8, 0x1
	0x039D9000 STRB W8, [X20 + 0xA23]
	0x039D9004 LDR X0, [X19]
	0x00000000 INVALID
	0x039D900C LDR W8, [X0 + 0xE0]
	0x039D9010 CBNZ W8, 0x39D9018
	0x039D9014 BL 0x1C16DFC
	0x039D9018 MOVZ W8, 0x7F800000
	0x039D901C FRINTM S0, S8
	0x039D9020 FMOV S1, W8
	0x039D9024 FCVTMS W9, S8
	0x039D9028 FCMP S0, S1
	0x039D902C ORR W8, W31, 0x80000001
	0x039D9030 CSINC W0, W8, W9, EQ
	0x039D9034 B 0x39D903C
	0x039D9038 MOVZ W0, 0x1
	0x039D903C LDP X20, X19, [X31 + 0x10]
	0x039D9040 LDR X30, [X31 + 0x8]
	0x039D9044 LDR V8, [X31], #0x20
	0x039D9048 RET
	0x039D904C STR X30, [X31 - 0x20]!
	0x039D9050 STP X20, X19, [X31 + 0x10]
	0x039D9054 ADRP X20, 0xA08000
	0x039D9058 LDRB W8, [X20 + 0xD65]
	0x039D905C MOV X19, X0
	0x039D9060 TBNZ X8, 0x0, 0x39D9078
	0x039D9064 ADRP X0, 0x777000
	0x039D9068 LDR X0, [X0 + 0x9B0]
	0x039D906C BL 0x1C16CF4
	0x039D9070 MOVZ W8, 0x1
	0x039D9074 STRB W8, [X20 + 0xD65]
	0x039D9078 MOV X0, X19
	0x039D907C BL 0x39D90C4
	0x039D9080 LDRB W8, [X19 + 0x25]
	0x039D9084 CBZ W8, 0x39D90B8
	0x039D9088 ADRP X8, 0x777000
	0x039D908C LDR X8, [X8 + 0x9B0]
	0x039D9090 LDR X19, [X19 + 0x10]
	0x039D9094 LDR X0, [X8]
	0x039D9098 LDR W8, [X0 + 0xE0]
	0x039D909C CBNZ W8, 0x39D90A4
	0x039D90A0 BL 0x1C16DFC
	0x039D90A4 MOV X0, X19
	0x039D90A8 LDP X20, X19, [X31 + 0x10]
	0x039D90AC MOV X1, X31
	0x039D90B0 LDR X30, [X31], #0x20
	0x039D90B4 B 0x39CB45C
	0x039D90B8 LDP X20, X19, [X31 + 0x10]
	0x039D90BC LDR X30, [X31], #0x20
	0x039D90C0 RET
	0x039D90C4 STR X30, [X31 - 0x20]!
	0x039D90C8 STP X20, X19, [X31 + 0x10]
	0x039D90CC ADRP X20, 0xA08000
	0x039D90D0 LDRB W8, [X20 + 0xD66]
	0x039D90D4 MOV X19, X0
	0x039D90D8 TBNZ X8, 0x0, 0x39D90FC
	0x039D90DC ADRP X0, 0x744000
	0x039D90E0 LDR X0, [X0 + 0x8D0]
	0x039D90E4 BL 0x1C16CF4
	0x039D90E8 ADRP X0, 0x77A000
	0x039D90EC LDR X0, [X0 + 0x1A8]
	0x039D90F0 BL 0x1C16CF4
	0x039D90F4 MOVZ W8, 0x1
	0x039D90F8 STRB W8, [X20 + 0xD66]
	0x039D90FC LDR X0, [X19 + 0x28]
	0x039D9100 CBZ X0, 0x39D9140
	0x039D9104 BL 0x39D8B24
	0x039D9108 LDR X0, [X19 + 0x30]
	0x039D910C CBZ X0, 0x39D9140
	0x039D9110 ADRP X8, 0x77A000
	0x039D9114 LDR X8, [X8 + 0x1A8]
	0x039D9118 LDR X1, [X8]
	0x039D911C BL 0x29FB268
	0x039D9120 LDR X0, [X19 + 0x38]
	0x039D9124 CBZ X0, 0x39D9140
	0x039D9128 ADRP X8, 0x744000
	0x039D912C LDR X8, [X8 + 0x8D0]
	0x039D9130 LDP X20, X19, [X31 + 0x10]
	0x039D9134 LDR X1, [X8]
	0x039D9138 LDR X30, [X31], #0x20
	0x039D913C B 0x2A0A4C4
	0x039D9140 BL 0x1C16F20
	0x039D9144 SUB X31, X31, 0xE0
	0x039D9148 STP D11, D10, [X31 + 0x80]
	0x039D914C STP D9, D8, [X31 + 0x90]
	0x039D9150 STP X30, X25, [X31 + 0xA0]
	0x039D9154 STP X24, X23, [X31 + 0xB0]
	0x039D9158 STP X22, X21, [X31 + 0xC0]
	0x039D915C STP X20, X19, [X31 + 0xD0]
	0x039D9160 ADRP X21, 0xA08000
	0x039D9164 LDRB W8, [X21 + 0xD67]
	0x039D9168 MOV X19, X1
	0x039D916C MOV X20, X0
	0x039D9170 TBNZ X8, 0x0, 0x39D91A0
	0x039D9174 ADRP X0, 0x779000
	0x039D9178 LDR X0, [X0 + 0xE28]
	0x039D917C BL 0x1C16CF4
	0x039D9180 ADRP X0, 0x744000
	0x039D9184 LDR X0, [X0 + 0x8D0]
	0x039D9188 BL 0x1C16CF4
	0x039D918C ADRP X0, 0x779000
	0x039D9190 LDR X0, [X0 + 0xFD0]
	0x039D9194 BL 0x1C16CF4
	0x039D9198 MOVZ W8, 0x1
	0x039D919C STRB W8, [X21 + 0xD67]
	0x039D91A0 LDRB W8, [X20 + 0x24]
	0x039D91A4 CBZ W8, 0x39D91C4
	0x039D91A8 LDP W1, W2, [X20 + 0x18]
	0x039D91AC MOV X0, X20
	0x039D91B0 BL 0x39D8F78
	0x039D91B4 MOV W21, W0
	0x039D91B8 CMP W0, 0x1
	0x039D91BC B.GE 0x39D91C8
	0x039D91C0 B 0x39D92A8
	0x039D91C4 MOVZ W21, 0x1
	0x039D91C8 ADRP X24, 0x779000
	0x039D91CC ADRP X25, 0x779000
	0x039D91D0 LDR X24, [X24 + 0xFD0]
	0x039D91D4 LDR X25, [X25 + 0xE28]
	0x039D91D8 MOV W22, W31
	0x039D91DC LDR X0, [X20 + 0x10]
	0x039D91E0 ADD X8, X31, 0x28
	0x039D91E4 MOV X1, X31
	0x039D91E8 BL 0x39CDF64
	0x039D91EC LDUR V0, [X31 + 0x28]
	0x039D91F0 LDUR V1, [X31 + 0x38]
	0x039D91F4 LDR X8, [X31 + 0x48]
	0x039D91F8 STP V0, V1, [X31 + 0x50]
	0x039D91FC STR X8, [X31 + 0x70]
	0x039D9200 CBZ X19, 0x39D92E0
	0x039D9204 LDP V0, V1, [X31 + 0x50]
	0x039D9208 LDR X8, [X31 + 0x70]
	0x039D920C ADD X1, X31, 0x0
	0x039D9210 MOV X0, X19
	0x039D9214 MOV W2, W22
	0x039D9218 MOV X3, X31
	0x039D921C STP V0, V1, [X31]
	0x039D9220 STR X8, [X31 + 0x20]
	0x039D9224 BL 0x3C4DCC4
	0x039D9228 MOV X0, X31
	0x039D922C BL 0x3C1B398
	0x039D9230 LDR X8, [X24]
	0x039D9234 MOV X23, X0
	0x039D9238 LDR W9, [X8 + 0xE0]
	0x039D923C CBNZ W9, 0x39D924C
	0x039D9240 MOV X0, X8
	0x039D9244 BL 0x1C16DFC
	0x039D9248 LDR X8, [X24]
	0x039D924C LDR X8, [X8 + 0xB8]
	0x039D9250 LDR X0, [X25]
	0x039D9254 LDP S10, S8, [X8]
	0x039D9258 LDR W9, [X0 + 0xE0]
	0x039D925C LDP S11, S9, [X8 + 0x8]
	0x039D9260 CBNZ W9, 0x39D9268
	0x039D9264 BL 0x1C16DFC
	0x039D9268 MOVZ W3, 0x1
	0x039D926C MOV X0, X19
	0x039D9270 MOV X1, X23
	0x039D9274 MOV V0.16B, V10.16B
	0x039D9278 MOV V1.16B, V8.16B
	0x039D927C MOV V2.16B, V11.16B
	0x039D9280 MOV V3.16B, V9.16B
	0x039D9284 MOV V4.16B, V10.16B
	0x039D9288 MOV V5.16B, V8.16B
	0x039D928C MOV V6.16B, V11.16B
	0x039D9290 MOV V7.16B, V9.16B
	0x039D9294 MOV W2, W22
	0x039D9298 BL 0x39D92E4
	0x039D929C ADD W22, W22, 0x1
	0x039D92A0 CMP W21, W22
	0x039D92A4 B.NE 0x39D91DC
	0x039D92A8 LDR X0, [X20 + 0x38]
	0x039D92AC CBZ X0, 0x39D92E0
	0x039D92B0 ADRP X8, 0x744000
	0x039D92B4 LDR X8, [X8 + 0x8D0]
	0x039D92B8 LDR X1, [X8]
	0x039D92BC BL 0x2A0A4C4
	0x039D92C0 LDP X20, X19, [X31 + 0xD0]
	0x039D92C4 LDP X22, X21, [X31 + 0xC0]
	0x039D92C8 LDP X24, X23, [X31 + 0xB0]
	0x039D92CC LDP X30, X25, [X31 + 0xA0]
	0x039D92D0 LDP D9, D8, [X31 + 0x90]
	0x039D92D4 LDP D11, D10, [X31 + 0x80]
	0x039D92D8 ADD X31, X31, 0xE0
	0x039D92DC RET
	0x039D92E0 BL 0x1C16F20
	0x039D92E4 STP D15, D14, [X31 - 0x80]!
	0x039D92E8 STP D13, D12, [X31 + 0x10]
	0x039D92EC STP D11, D10, [X31 + 0x20]
	0x039D92F0 STP D9, D8, [X31 + 0x30]
	0x039D92F4 STP X30, X25, [X31 + 0x40]
	0x039D92F8 STP X24, X23, [X31 + 0x50]
	0x039D92FC STP X22, X21, [X31 + 0x60]
	0x039D9300 STP X20, X19, [X31 + 0x70]
	0x039D9304 ADRP X23, 0xA08000
	0x039D9308 ADRP X24, 0x779000
	0x039D930C LDRB W8, [X23 + 0xDD8]
	0x039D9310 LDR X24, [X24 + 0xE28]
	0x039D9314 MOV W19, W3
	0x039D9318 MOV W22, W2
	0x039D931C MOV V8.16B, V7.16B
	0x039D9320 MOV V9.16B, V6.16B
	0x039D9324 MOV V10.16B, V5.16B
	0x039D9328 MOV V11.16B, V4.16B
	0x039D932C MOV V12.16B, V3.16B
	0x039D9330 MOV V13.16B, V2.16B
	0x039D9334 MOV V14.16B, V1.16B
	0x039D9338 MOV V15.16B, V0.16B
	0x039D933C MOV X21, X1
	0x039D9340 MOV X20, X0
	0x039D9344 TBNZ X8, 0x0, 0x39D9368

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D8
	003 Move [X31+144], X29
	004 Move [X31+152], X30
	005 Move [X31+160], X28
	006 Move [X31+168], X27
	007 Move [X31+176], X26
	008 Move [X31+184], X25
	009 Move [X31+192], X24
	010 Move [X31+200], X23
	011 Move [X31+208], X22
	012 Move [X31+216], X21
	013 Move [X31+224], X20
	014 Move [X31+232], X19
	015 Move X19, 0xA0A000
	016 Move W8, [X19+3413]
	017 Move W24, [X31+288]
	018 Move V8, V0
	019 Move W22, W5
	020 Move W28, W4
	021 Move W27, W3
	022 Move X20, X0
	023 Move [X31+44], W6
	024 Move [X31+48], W7
	025 Move [X31+136], W1
	026 Move [X31+140], W2
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {54}
	031 Move X0, 0x744000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x71C000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x77B000
	038 Move X0, [X0+3904]
	039 Call 0x1C17CF4
	040 Move X0, 0x77C000
	041 Move X0, [X0+192]
	042 Call 0x1C17CF4
	043 Move X0, 0x71E000
	044 Move X0, [X0+304]
	045 Call 0x1C17CF4
	046 Move X0, 0x77C000
	047 Move X0, [X0+304]
	048 Call 0x1C17CF4
	049 Move X0, 0x77C000
	050 Move X0, [X0+200]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X19+3413], W8
	054 Move W19, [X31+296]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move TEMP, X19
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {74}
	061 Move X8, 0x71C000
	062 Move X8, [X8+2600]
	063 Move X0, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X8, 0x77C000
	069 Move X8, [X8+200]
	070 Move X1, X31
	071 Move X0, [X8]
	072 Call Debug.LogWarning, X0
	073 Move W19, W31
	074 Move W9, [X31+320]
	075 Move W8, [X31+312]
	076 Move W23, [X31+248]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X31+52], W8
	079 Move [X31+56], W9
	080 Move W8, [X31+280]
	081 Move [X31+36], W21
	082 Move [X31+40], W8
	083 Move W8, [X31+240]
	084 Move [X31+76], W8
	085 Move TEMP, X23
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {102}
	089 Move X8, 0x71C000
	090 Move X8, [X8+2600]
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X8, 0x77C000
	097 Move X8, [X8+304]
	098 Move X1, X31
	099 Move X0, [X8]
	100 Call Debug.LogWarning, X0
	101 Move W23, W31
	102 Move [X31+64], X20
	103 Move X26, 0x71E000
	104 Move W21, [X31+304]
	105 Move W8, [X31+272]
	106 Move W25, [X31+264]
	107 Move W29, [X31+256]
	108 Move X26, [X26+304]
	109 Move [X31+60], W22
	110 Compare W28, 0
	111 JumpIfNotEqual {189}
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {189}
	116 Move X0, [X26]
	117 Call 0x1C17F10
	118 Move W1, [X31+136]
	119 Move W2, [X31+140]
	120 Move W3, W31
	121 Move W4, W22
	122 Move X5, X31
	123 Move X26, X0
	124 Call RenderTexture..ctor, X0, X1, X2, X3, X4
	125 Compare X26, 0
	126 JumpIfEqual {370}
	127 Move W1, 61
	128 Move X0, X26
	129 Move X2, X31
	130 Call Object.set_hideFlags, X0, X1
	131 Move X0, X26
	132 Move W1, W27
	133 Move X2, X31
	134 Move W28, W27
	135 Call RenderTexture.set_volumeDepth, X0, X1
	136 Move W1, [X31+44]
	137 Move X0, X26
	138 Move X2, X31
	139 Call Texture.set_filterMode, X0, X1
	140 Move W1, [X31+48]
	141 Move X0, X26
	142 Move X2, X31
	143 Call Texture.set_wrapMode, X0, X1
	144 Move X8, [X26]
	145 Move W1, [X31+76]
	146 Move X0, X26
	147 Move X9, [X8+472]
	148 Move X2, [X8+480]
	149 NotImplemented "Instruction BLR not yet implemented."
	150 And W1, W23, 1
	151 Move X0, X26
	152 Move X2, X31
	153 Call RenderTexture.set_enableRandomWrite, X0, X1
	154 And W1, W29, 1
	155 Move X0, X26
	156 Move X2, X31
	157 Call RenderTexture.set_useMipMap, X0, X1
	158 And W1, W25, 1
	159 Move X0, X26
	160 Move X2, X31
	161 Call RenderTexture.set_autoGenerateMips, X0, X1
	162 Move W1, [X31+40]
	163 Move X0, X26
	164 Move X2, X31
	165 Call Texture.set_anisoLevel, X0, X1
	166 Move X0, X26
	167 Move V0, V8
	168 Move X1, X31
	169 Call Texture.set_mipMapBias, X0, V0
	170 Move X0, X26
	171 Move W1, W24
	172 Move X2, X31
	173 Call RenderTexture.set_antiAliasing, X0, X1
	174 And W1, W19, 1
	175 Move X0, X26
	176 Move X2, X31
	177 Call RenderTexture.set_bindTextureMS, X0, X1
	178 Move X25, [X31+64]
	179 Move X0, X26
	180 Move X2, X31
	181 Move W8, [X25+16]
	182 And W8, W21, W8
	183 And W1, W8, 1
	184 Call RenderTexture.set_useDynamicScale, X0, X1
	185 Move W1, [X31+52]
	186 Move X0, X26
	187 Move X2, X31
	188 Call RenderTexture.set_memorylessMode, X0, X1
	189 And W8, W8, 1
	190 Move W9, 3
	191 NotImplemented "Instruction CSINC not yet implemented."
	192 Compare W8, 0
	193 JumpIfEqual {195}
	194 Move W20, W31
	195 Move W0, 13
	196 Move W1, 16
	197 Move X2, X31
	198 Move W20, 13
	199 Call SystemInfo.IsFormatSupported, X0, X1
	200 And W31, W0, 1
	201 NotImplemented "Instruction CSEL not yet implemented."
	202 Move X0, [X26]
	203 Call 0x1C17F10
	204 Move W1, [X31+136]
	205 Move W2, [X31+140]
	206 Move W5, 1
	207 Move W3, W28
	208 Move W4, W22
	209 Move X6, X31
	210 Move X26, X0
	211 Call RenderTexture..ctor, X0, X1, X2, X3, X4, X5
	212 Compare X26, 0
	213 JumpIfEqual {370}
	214 Move W1, 61
	215 Move X0, X26
	216 Move X2, X31
	217 Call Object.set_hideFlags, X0, X1
	218 Move X0, X26
	219 Move W1, W27
	220 Move X2, X31
	221 Move W28, W27
	222 Call RenderTexture.set_volumeDepth, X0, X1
	223 Move W1, [X31+44]
	224 Move X0, X26
	225 Move X2, X31
	226 Call Texture.set_filterMode, X0, X1
	227 Move W1, [X31+48]
	228 Move X0, X26
	229 Move X2, X31
	230 Call Texture.set_wrapMode, X0, X1
	231 Move X8, [X26]
	232 Move W1, [X31+76]
	233 Move X0, X26
	234 Move X9, [X8+472]
	235 Move X2, [X8+480]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 And W1, W23, 1
	238 Move X0, X26
	239 Move X2, X31
	240 Call RenderTexture.set_enableRandomWrite, X0, X1
	241 And W1, W29, 1
	242 Move X0, X26
	243 Move X2, X31
	244 Call RenderTexture.set_useMipMap, X0, X1
	245 And W1, W25, 1
	246 Move X0, X26
	247 Move X2, X31
	248 Call RenderTexture.set_autoGenerateMips, X0, X1
	249 Move W1, [X31+40]
	250 Move X0, X26
	251 Move X2, X31
	252 Call Texture.set_anisoLevel, X0, X1
	253 Move X0, X26
	254 Move V0, V8
	255 Move X1, X31
	256 Call Texture.set_mipMapBias, X0, V0
	257 Move X0, X26
	258 Move W1, W24
	259 Move X2, X31
	260 Call RenderTexture.set_antiAliasing, X0, X1
	261 And W1, W19, 1
	262 Move X0, X26
	263 Move X2, X31
	264 Call RenderTexture.set_bindTextureMS, X0, X1
	265 Move X25, [X31+64]
	266 Move X0, X26
	267 Move X2, X31
	268 Move W8, [X25+16]
	269 And W8, W21, W8
	270 And W1, W8, 1
	271 Call RenderTexture.set_useDynamicScale, X0, X1
	272 Move W1, [X31+52]
	273 Move X0, X26
	274 Move X2, X31
	275 Call RenderTexture.set_memorylessMode, X0, X1
	276 Move X0, X26
	277 Move W1, W20
	278 Move X2, X31
	279 Call RenderTexture.set_stencilFormat, X0, X1
	280 Move W1, [X31+56]
	281 Move X0, X26
	282 Move X2, X31
	283 Call RenderTexture.set_vrUsage, X0, X1
	284 Move X8, 0x743000
	285 Move X8, [X8+2296]
	286 Move X0, [X8]
	287 Move W8, [X0+224]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Move X20, [X31+328]
	292 Move X22, 0x77B000
	293 Move W27, [X31+36]
	294 Move X22, [X22+192]
	295 Move W0, [X31+136]
	296 Move W1, [X31+140]
	297 Move W3, [X31+60]
	298 Move W4, [X31+76]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 NotImplemented "Instruction CSET not yet implemented."
	301 And W8, W21, 1
	302 And W6, W29, 1
	303 Move W2, W28
	304 Move X5, X20
	305 And W19, W21, 1
	306 Move [X31+16], X31
	307 Move [X31+8], W8
	308 Move [X31], W24
	309 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	310 Move X1, X0
	311 Move X0, X26
	312 Move X2, X31
	313 Call Object.set_name, X0, X1
	314 Move X0, X26
	315 Move X1, X31
	316 Call RenderTexture.Create, X0
	317 Move X0, [X22]
	318 Call 0x1C17F10
	319 Move X1, X31
	320 Move X21, X0
	321 Call Object..ctor, X0
	322 NotImplemented "Instruction MOVI not yet implemented."
	323 Add X0, X31, 80
	324 Move X1, X26
	325 Move X2, X31
	326 Move [X21+16], X25
	327 Move [X21+24], X26
	328 Move [X21+32], X31
	329 Move [X31+112], X31
	330 Move [X31+80], V0
	331 Move [X31+88], V0
	332 Call RenderTargetIdentifier..ctor, X0, X1
	333 Move V0, [X31+80]
	334 Move V1, [X31+96]
	335 Move X8, [X31+112]
	336 And W9, W23, 1
	337 Move W10, 1
	338 Move [X21+80], W27
	339 Move [X21+82], W19
	340 Move [X21+81], W9
	341 Move [X21+168], W10
	342 Move [X21+72], X8
	343 Move [X21+56], V1
	344 Move [X21+40], V0
	345 Move [X21+88], X20
	346 Move X0, [X25+24]
	347 Compare X0, 0
	348 JumpIfEqual {370}
	349 Move X8, 0x77A000
	350 Move X8, [X8+3904]
	351 Move X1, X21
	352 Move X2, [X8]
	353 Call HashSet`1<Object>.Add, X0, X1
	354 Move X0, X21
	355 Move X20, [X31+224]
	356 Move X19, [X31+232]
	357 Move X22, [X31+208]
	358 Move X21, [X31+216]
	359 Move X24, [X31+192]
	360 Move X23, [X31+200]
	361 Move X26, [X31+176]
	362 Move X25, [X31+184]
	363 Move X28, [X31+160]
	364 Move X27, [X31+168]
	365 Move X29, [X31+144]
	366 Move X30, [X31+152]
	367 Move V8, [X31+128]
	368 Add X31, X31, 240
	369 Return X0
	370 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle Alloc(UnityEngine.RenderTexture texture)

Disassembly:
	0x039D7994 CBZ X8, 0x39D7B94
	0x039D7998 ADRP X9, 0x77C000
	0x039D799C LDR X9, [X9 + 0x118]
	0x039D79A0 LDR W1, [X8 + 0x20]
	0x039D79A4 LDR W20, [X21 + 0x60]
	0x039D79A8 ADD X19, X21, 0x20
	0x039D79AC LDR X2, [X9]
	0x039D79B0 MOV W22, W0
	0x039D79B4 MOV X0, X19
	0x039D79B8 BL 0x2142E6C
	0x039D79BC LDR X0, [X21 + 0x18]
	0x039D79C0 CBZ X0, 0x39D7B94
	0x039D79C4 ADRP X8, 0x77C000
	0x039D79C8 LDR X8, [X8 + 0x120]
	0x039D79CC LDR X1, [X19]
	0x039D79D0 LDR X2, [X8]
	0x039D79D4 BL 0x2DC057C
	0x039D79D8 LDR X8, [X19]
	0x039D79DC STR X19, [X31 + 0x18]
	0x039D79E0 CBZ X8, 0x39D7B94
	0x039D79E4 LDR W9, [X8 + 0x18]
	0x039D79E8 CMP W9, 0x1
	0x039D79EC STR W9, [X31 + 0x28]
	0x039D79F0 B.LT 0x39D7B98
	0x039D79F4 MOV W19, W31
	0x039D79F8 BFM X20, X22, 0x20, 0x1F
	0x039D79FC STR X20, [X31 + 0x20]
	0x039D7A00 LDR W9, [X8 + 0x18]
	0x039D7A04 CMP W19, W9
	0x039D7A08 B.CS 0x39D7BB8
	0x039D7A0C ADD X8, X8, W19, 0x3, SXTW
	0x039D7A10 LDR X22, [X8 + 0x20]
	0x039D7A14 CBZ X22, 0x39D7B94
	0x039D7A18 LDR X21, [X22 + 0x18]
	0x039D7A1C STUR X20, [X22 + 0xAC]
	0x039D7A20 CBZ X21, 0x39D7B94
	0x039D7A24 MOV X0, X21
	0x039D7A28 MOV X1, X31
	0x039D7A2C BL 0x3C20A50
	0x039D7A30 MOV X0, X22
	0x039D7A34 MOV X1, X20
	0x039D7A38 BL 0x39D4C30
	0x039D7A3C LDR X8, [X21]
	0x039D7A40 CMP W0, 0x1
	0x039D7A44 UBFM X20, X0, 0x20, 0x3F
	0x039D7A48 CSINC W1, W0, W31, GT
	0x039D7A4C LDP X9, X2, [X8 + 0x198]
	0x039D7A50 MOV X0, X21
	0x039D7A54 BLR X9
	0x039D7A58 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X20, 0xA0B000
	008 Move X22, 0x77D000
	009 Move W8, [X20+3414]
	010 Move X22, [X22+192]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x77D000
	018 Move X0, [X0+192]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3414], W8
	022 Move X0, [X22]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Add X0, X31, 0
	029 Move X1, X19
	030 Move X2, X31
	031 Move [X20+16], X21
	032 Move [X20+24], X19
	033 Move [X20+32], X31
	034 Move [X31+32], X31
	035 Move [X31], V0
	036 Move [X31+8], V0
	037 Call RenderTargetIdentifier..ctor, X0, X1
	038 Move X8, [X31+32]
	039 Move V0, [X31]
	040 Move V1, [X31+16]
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Move [X20+168], W31
	043 Move [X20+72], X8
	044 Move [X20+56], V1
	045 Move [X20+40], V0
	046 Move [X20+82], W31
	047 Compare X19, 0
	048 JumpIfEqual {61}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Object.get_name, X0
	052 Move [X20+88], X0
	053 Move X0, X20
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X22, [X31+64]
	057 Move X21, [X31+72]
	058 Move X30, [X31+48]
	059 Add X31, X31, 96
	060 Return X0
	061 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle Alloc(UnityEngine.Texture texture)

Disassembly:
	0x039D7864 BL 0x1C16DFC
	0x039D7868 LDR X0, [X23]
	0x039D786C LDR X8, [X0 + 0xB8]
	0x039D7870 LDR X0, [X8 + 0x30]
	0x039D7874 CBZ X0, 0x39D78D0
	0x039D7878 MOV X1, X31
	0x039D787C BL 0x399EC3C
	0x039D7880 TBZ X0, 0x0, 0x39D7894
	0x039D7884 LDRB W8, [X19 + 0x10]
	0x039D7888 CBZ W8, 0x39D7894
	0x039D788C LDP S0, S1, [X19 + 0x50]
	0x039D7890 B 0x39D78B0
	0x039D7894 LDP S0, S1, [X19 + 0x30]
	0x039D7898 SCVTF S2, W25
	0x039D789C SCVTF S3, W24
	0x039D78A0 SCVTF S0, S0
	0x039D78A4 SCVTF S1, S1
	0x039D78A8 FDIV S0, S0, S3
	0x039D78AC FDIV S1, S1, S2
	0x039D78B0 STP S9, S8, [X19 + 0x50]
	0x039D78B4 STP S0, S1, [X19 + 0x58]
	0x039D78B8 LDP X20, X19, [X31 + 0x40]
	0x039D78BC LDP X22, X21, [X31 + 0x30]
	0x039D78C0 LDP X24, X23, [X31 + 0x20]
	0x039D78C4 LDP X30, X25, [X31 + 0x10]
	0x039D78C8 LDP D9, D8, [X31], #0x50
	0x039D78CC RET
	0x039D78D0 BL 0x1C16F20
	0x039D78D4 SUB X31, X31, 0x90
	0x039D78D8 STP X29, X30, [X31 + 0x30]
	0x039D78DC STP X28, X27, [X31 + 0x40]
	0x039D78E0 STP X26, X25, [X31 + 0x50]
	0x039D78E4 STP X24, X23, [X31 + 0x60]
	0x039D78E8 STP X22, X21, [X31 + 0x70]
	0x039D78EC STP X20, X19, [X31 + 0x80]
	0x039D78F0 ADRP X23, 0xA0A000
	0x039D78F4 ADRP X22, 0x71C000
	0x039D78F8 LDRB W8, [X23 + 0xD53]
	0x039D78FC LDR X22, [X22 + 0x5A8]
	0x039D7900 MOV W19, W2
	0x039D7904 MOV W20, W1
	0x039D7908 MOV X21, X0
	0x039D790C TBNZ X8, 0x0, 0x39D7954
	0x039D7910 ADRP X0, 0x77C000
	0x039D7914 LDR X0, [X0 + 0x118]
	0x039D7918 BL 0x1C16CF4
	0x039D791C ADRP X0, 0x744000
	0x039D7920 LDR X0, [X0 + 0x8F8]
	0x039D7924 BL 0x1C16CF4
	0x039D7928 ADRP X0, 0x77C000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X20, 0xA0B000
	008 Move X22, 0x77D000
	009 Move W8, [X20+3415]
	010 Move X22, [X22+192]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x77D000
	018 Move X0, [X0+192]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3415], W8
	022 Move X0, [X22]
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X20, X0
	026 Call Object..ctor, X0
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Add X0, X31, 0
	029 Move X1, X19
	030 Move X2, X31
	031 Move [X20+16], X21
	032 Move [X20+24], X31
	033 Move [X20+32], X19
	034 Move [X31+32], X31
	035 Move [X31], V0
	036 Move [X31+8], V0
	037 Call RenderTargetIdentifier..ctor, X0, X1
	038 Move X8, [X31+32]
	039 Move V0, [X31]
	040 Move V1, [X31+16]
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Move [X20+168], W31
	043 Move [X20+72], X8
	044 Move [X20+56], V1
	045 Move [X20+40], V0
	046 Move [X20+82], W31
	047 Compare X19, 0
	048 JumpIfEqual {61}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Object.get_name, X0
	052 Move [X20+88], X0
	053 Move X0, X20
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X22, [X31+64]
	057 Move X21, [X31+72]
	058 Move X30, [X31+48]
	059 Add X31, X31, 96
	060 Return X0
	061 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle Alloc(UnityEngine.Rendering.RenderTargetIdentifier texture)

Disassembly:
	0x039D7A5C CMP W20, 0x1
	0x039D7A60 CSINC W1, W20, W31, GT
	0x039D7A64 MOV X0, X21
	0x039D7A68 LDP X9, X2, [X8 + 0x1B8]
	0x039D7A6C BLR X9
	0x039D7A70 LDR X8, [X21]
	0x039D7A74 MOV X0, X21
	0x039D7A78 LDP X9, X1, [X8 + 0x188]
	0x039D7A7C BLR X9
	0x039D7A80 LDR X8, [X21]
	0x039D7A84 STR W0, [X31 + 0x2C]
	0x039D7A88 MOV X0, X21
	0x039D7A8C LDP X9, X1, [X8 + 0x1A8]
	0x039D7A90 BLR X9
	0x039D7A94 MOV W24, W0
	0x039D7A98 MOV X0, X21
	0x039D7A9C MOV X1, X31
	0x039D7AA0 BL 0x3C205C8
	0x039D7AA4 MOV W25, W0
	0x039D7AA8 MOV X0, X21
	0x039D7AAC MOV X1, X31
	0x039D7AB0 BL 0x3C201A0
	0x039D7AB4 LDR X8, [X21]
	0x039D7AB8 MOV W26, W0
	0x039D7ABC MOV X0, X21
	0x039D7AC0 LDP X9, X1, [X8 + 0x1C8]
	0x039D7AC4 BLR X9
	0x039D7AC8 LDR X27, [X22 + 0x58]
	0x039D7ACC MOV W28, W0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0xA0B000
	008 Move X21, 0x71D000
	009 Move W8, [X22+3416]
	010 Move X21, [X21+2440]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x71D000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3416], W8
	022 Move X8, [X20+32]
	023 Move V1, [X20]
	024 Move V0, [X20+16]
	025 Move X2, [X21]
	026 Add X1, X31, 0
	027 Move X0, X19
	028 Move [X31+32], X8
	029 Move [X31], V1
	030 Move [X31+8], V0
	031 Call RTHandleSystem.Alloc, X0, X1, X2
	032 Move X20, [X31+80]
	033 Move X19, [X31+88]
	034 Move X22, [X31+64]
	035 Move X21, [X31+72]
	036 Move X30, [X31+48]
	037 Add X31, X31, 96
	038 Return X0

Method: UnityEngine.Rendering.RTHandle Alloc(UnityEngine.Rendering.RenderTargetIdentifier texture, System.String name)

Disassembly:
	0x039D7B74 LDR W8, [X31 + 0x28]
	0x039D7B78 LDR X20, [X31 + 0x20]
	0x039D7B7C ADD W19, W19, 0x1
	0x039D7B80 CMP W8, W19
	0x039D7B84 B.EQ 0x39D7B98
	0x039D7B88 LDR X8, [X31 + 0x18]
	0x039D7B8C LDR X8, [X8]
	0x039D7B90 CBNZ X8, 0x39D7A00
	0x039D7B94 BL 0x1C16F20
	0x039D7B98 LDP X20, X19, [X31 + 0x80]
	0x039D7B9C LDP X22, X21, [X31 + 0x70]
	0x039D7BA0 LDP X24, X23, [X31 + 0x60]
	0x039D7BA4 LDP X26, X25, [X31 + 0x50]
	0x039D7BA8 LDP X28, X27, [X31 + 0x40]
	0x039D7BAC LDP X29, X30, [X31 + 0x30]
	0x039D7BB0 ADD X31, X31, 0x90
	0x039D7BB4 RET
	0x039D7BB8 BL 0x1C16F28
	0x039D7BBC SUB X31, X31, 0x80
	0x039D7BC0 STP X29, X30, [X31 + 0x20]
	0x039D7BC4 STP X28, X27, [X31 + 0x30]
	0x039D7BC8 STP X26, X25, [X31 + 0x40]
	0x039D7BCC STP X24, X23, [X31 + 0x50]
	0x039D7BD0 STP X22, X21, [X31 + 0x60]
	0x039D7BD4 STP X20, X19, [X31 + 0x70]
	0x039D7BD8 ADRP X21, 0xA0A000
	0x039D7BDC LDRB W8, [X21 + 0xD51]
	0x039D7BE0 MOV X20, X1
	0x039D7BE4 MOV X19, X0
	0x039D7BE8 TBNZ X8, 0x0, 0x39D7C00
	0x039D7BEC ADRP X0, 0x744000
	0x039D7BF0 LDR X0, [X0 + 0x8F8]
	0x039D7BF4 BL 0x1C16CF4
	0x039D7BF8 MOVZ W8, 0x1
	0x039D7BFC STRB W8, [X21 + 0xD51]
	0x039D7C00 CBZ X20, 0x39D7E0C
	0x039D7C04 LDR X1, [X19 + 0x60]
	0x039D7C08 LDR X19, [X20 + 0x18]
	0x039D7C0C MOV X0, X20
	0x039D7C10 STUR X1, [X20 + 0xAC]
	0x039D7C14 BL 0x39D4C30
	0x039D7C18 ADRP X22, 0xA0A000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0xA0B000
	009 Move X23, 0x77D000
	010 Move W8, [X22+3417]
	011 Move X23, [X23+192]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x77D000
	020 Move X0, [X0+192]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3417], W8
	024 Move X0, [X23]
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X22, X0
	028 Call Object..ctor, X0
	029 Move [X22+16], X21
	030 Move X8, [X20+32]
	031 Move V1, [X20]
	032 Move V0, [X20+16]
	033 Move X0, X22
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Move [X31+32], X8
	037 Move [X31], V1
	038 Move [X31+8], V0
	039 Move [X22+24], X31
	040 Move [X22+32], X31
	041 Move V0, [X31]
	042 Move V1, [X31+16]
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move [X22+168], W31
	045 Move [X22+82], W31
	046 Move [X22+72], X8
	047 Move [X22+56], V1
	048 Move [X22+40], V0
	049 Move [X22+88], X19
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X22, [X31+64]
	053 Move X21, [X31+72]
	054 Add X31, X31, 96
	055 Return X0

Method: UnityEngine.Rendering.RTHandle Alloc(UnityEngine.Rendering.RTHandle tex)

Disassembly:
	0x039D9348 ADRP X0, 0x77A000
	0x039D934C LDR X0, [X0 + 0x1B0]
	0x039D9350 BL 0x1C16CF4
	0x039D9354 ADRP X0, 0x779000
	0x039D9358 LDR X0, [X0 + 0xE28]
	0x039D935C BL 0x1C16CF4
	0x039D9360 MOVZ W8, 0x1
	0x039D9364 STRB W8, [X23 + 0xDD8]
	0x039D9368 LDR X0, [X24]
	0x039D936C ADRP X25, 0x77A000
	0x039D9370 LDR W8, [X0 + 0xE0]
	0x039D9374 LDR X25, [X25 + 0x1B0]
	0x039D9378 CBNZ W8, 0x39D9384
	0x039D937C BL 0x1C16DFC
	0x039D9380 LDR X0, [X24]
	0x039D9384 LDR X8, [X25]
	0x039D9388 LDR X9, [X0 + 0xB8]
	0x039D938C LDR W10, [X8 + 0xE0]
	0x039D9390 LDR X23, [X9 + 0x20]
	0x039D9394 CBNZ W10, 0x39D93A0
	0x039D9398 MOV X0, X8
	0x039D939C BL 0x1C16DFC
	0x039D93A0 CBZ X23, 0x39D94BC
	0x039D93A4 LDR X8, [X25]
	0x039D93A8 MOV X0, X23
	0x039D93AC MOV X2, X21
	0x039D93B0 MOV X3, X31
	0x039D93B4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA09000
	005 Move X19, 0x71B000
	006 Move W8, [X20+3418]
	007 Move X19, [X19+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x71B000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x77B000
	016 Move X0, [X0+208]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3418], W8
	020 Move X0, [X19]
	021 Move X19, 0x77B000
	022 Move W8, [X0+224]
	023 Move X19, [X19+208]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X1, X31
	029 Call Debug.LogError, X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X0, X31
	033 Move X30, [X31+32]
	034 Return X0

Method: System.String DumpRTInfo()

Disassembly:
	0x039D93B8 LDR W1, [X8]
	0x039D93BC BL 0x3C12828
	0x039D93C0 LDR X8, [X24]
	0x039D93C4 LDR X8, [X8 + 0xB8]
	0x039D93C8 LDR X0, [X8 + 0x20]
	0x039D93CC CBZ X0, 0x39D94BC
	0x039D93D0 LDR X8, [X25]
	0x039D93D4 MOV V0.16B, V15.16B
	0x039D93D8 MOV V1.16B, V14.16B
	0x039D93DC MOV V2.16B, V13.16B
	0x039D93E0 LDR X8, [X8 + 0xB8]
	0x039D93E4 MOV V3.16B, V12.16B
	0x039D93E8 MOV X2, X31
	0x039D93EC LDR W1, [X8 + 0x8]
	0x039D93F0 BL 0x3C12720
	0x039D93F4 LDR X8, [X24]
	0x039D93F8 LDR X8, [X8 + 0xB8]
	0x039D93FC LDR X0, [X8 + 0x20]
	0x039D9400 CBZ X0, 0x39D94BC
	0x039D9404 LDR X8, [X25]
	0x039D9408 MOV V0.16B, V11.16B
	0x039D940C MOV V1.16B, V10.16B
	0x039D9410 MOV V2.16B, V9.16B
	0x039D9414 LDR X8, [X8 + 0xB8]
	0x039D9418 MOV V3.16B, V8.16B
	0x039D941C MOV X2, X31
	0x039D9420 LDR W1, [X8 + 0xC]
	0x039D9424 BL 0x3C12720
	0x039D9428 LDR X8, [X24]
	0x039D942C LDR X8, [X8 + 0xB8]
	0x039D9430 LDR X0, [X8 + 0x20]
	0x039D9434 CBZ X0, 0x39D94BC
	0x039D9438 LDR X8, [X25]
	0x039D943C SCVTF S0, W22
	0x039D9440 MOV X2, X31
	0x039D9444 LDR X8, [X8 + 0xB8]
	0x039D9448 LDR W1, [X8 + 0x10]
	0x039D944C BL 0x3C125FC
	0x039D9450 CBZ X21, 0x39D94BC
	0x039D9454 LDR X8, [X21]
	0x039D9458 MOV X0, X21
	0x039D945C LDP X9, X1, [X8 + 0x1C8]
	0x039D9460 BLR X9
	0x039D9464 MOV W1, W31
	0x039D9468 BL 0x39E1E80
	0x039D946C LDR X8, [X24]
	0x039D9470 MOV X21, X0
	0x039D9474 LDR W9, [X8 + 0xE0]
	0x039D9478 CBNZ W9, 0x39D9484
	0x039D947C MOV X0, X8
	0x039D9480 BL 0x1C16DFC
	0x039D9484 ANDS W31, W19, 0x1
	0x039D9488 MOV X0, X20
	0x039D948C MOV X1, X21
	0x039D9490 LDP X20, X19, [X31 + 0x70]
	0x039D9494 LDP X22, X21, [X31 + 0x60]
	0x039D9498 LDP X24, X23, [X31 + 0x50]
	0x039D949C LDP X30, X25, [X31 + 0x40]
	0x039D94A0 LDP D9, D8, [X31 + 0x30]
	0x039D94A4 LDP D11, D10, [X31 + 0x20]
	0x039D94A8 LDP D13, D12, [X31 + 0x10]
	0x039D94AC MOVZ W8, 0x2
	0x039D94B0 CINC W2, W8, NE
	0x039D94B4 LDP D15, D14, [X31], #0x80
	0x039D94B8 B 0x39E20B0
	0x039D94BC BL 0x1C16F20
	0x039D94C0 STR X30, [X31 - 0x20]!
	0x039D94C4 STP X20, X19, [X31 + 0x10]
	0x039D94C8 ADRP X20, 0xA08000
	0x039D94CC LDRB W8, [X20 + 0xD68]
	0x039D94D0 MOV X19, X1
	0x039D94D4 TBNZ X8, 0x0, 0x39D94F8
	0x039D94D8 ADRP X0, 0x71C000
	0x039D94DC LDR X0, [X0 + 0x130]
	0x039D94E0 BL 0x1C16CF4
	0x039D94E4 ADRP X0, 0x744000
	0x039D94E8 LDR X0, [X0 + 0x250]
	0x039D94EC BL 0x1C16CF4
	0x039D94F0 MOVZ W8, 0x1
	0x039D94F4 STRB W8, [X20 + 0xD68]
	0x039D94F8 CBZ X19, 0x39D9530
	0x039D94FC ADRP X9, 0x71C000
	0x039D9500 LDR X9, [X9 + 0x130]
	0x039D9504 LDR X8, [X19]
	0x039D9508 LDR X9, [X9]
	0x039D950C LDRB W11, [X8 + 0x130]
	0x039D9510 LDRB W10, [X9 + 0x130]
	0x039D9514 CMP W11, W10
	0x039D9518 B.CS 0x39D9538
	0x039D951C ADRP X9, 0x744000
	0x039D9520 LDR X9, [X9 + 0x250]
	0x039D9524 LDR X9, [X9]
	0x039D9528 CMP X8, X9
	0x039D952C B 0x39D9574
	0x039D9530 MOV W0, W31
	0x039D9534 B 0x39D9580
	0x039D9538 LDR X11, [X8 + 0xC8]
	0x039D953C ADD X10, X11, X10, 0x3, LSL
	0x039D9540 ADRP X11, 0x744000
	0x039D9544 LDUR X10, [X10 - 0x8]
	0x039D9548 LDR X11, [X11 + 0x250]
	0x039D954C CMP X10, X9
	0x039D9550 LDR X11, [X11]
	0x039D9554 CSEL X0, X19, X31, EQ
	0x039D9558 CMP X8, X11
	0x039D955C B.EQ 0x39D957C
	0x039D9560 CBZ X0, 0x39D9580
	0x039D9564 LDR X8, [X0]
	0x039D9568 LDP X9, X1, [X8 + 0x1C8]
	0x039D956C BLR X9
	0x039D9570 CMP W0, 0x2
	0x039D9574 CSET W0, EQ
	0x039D9578 B 0x39D9580
	0x039D957C MOVZ W0, 0x1
	0x039D9580 LDP X20, X19, [X31 + 0x10]
	0x039D9584 LDR X30, [X31], #0x20
	0x039D9588 RET
	0x039D958C STR X30, [X31 - 0x50]!
	0x039D9590 STP X26, X25, [X31 + 0x10]
	0x039D9594 STP X24, X23, [X31 + 0x20]
	0x039D9598 STP X22, X21, [X31 + 0x30]
	0x039D959C STP X20, X19, [X31 + 0x40]
	0x039D95A0 ADRP X21, 0xA08000
	0x039D95A4 LDRB W8, [X21 + 0xD69]
	0x039D95A8 MOV X19, X2
	0x039D95AC MOV X20, X1
	0x039D95B0 TBNZ X8, 0x0, 0x39D95C8
	0x039D95B4 ADRP X0, 0x77A000
	0x039D95B8 LDR X0, [X0 + 0x90]
	0x039D95BC BL 0x1C16CF4
	0x039D95C0 MOVZ W8, 0x1
	0x039D95C4 STRB W8, [X21 + 0xD69]
	0x039D95C8 CBZ X20, 0x39D97CC
	0x039D95CC LDR X8, [X20]
	0x039D95D0 ADRP X22, 0x77A000
	0x039D95D4 MOV X0, X20
	0x039D95D8 LDP X9, X1, [X8 + 0x178]
	0x039D95DC LDR X22, [X22 + 0x90]
	0x039D95E0 BLR X9
	0x039D95E4 LDR X8, [X22]
	0x039D95E8 MOV W21, W0
	0x039D95EC LDR W9, [X8 + 0xE0]
	0x039D95F0 CBNZ W9, 0x39D95FC
	0x039D95F4 MOV X0, X8
	0x039D95F8 BL 0x1C16DFC
	0x039D95FC MOV W0, W21
	0x039D9600 MOV X1, X31
	0x039D9604 BL 0x3C61A54
	0x039D9608 CBZ X19, 0x39D97CC
	0x039D960C LDR X8, [X19]
	0x039D9610 MOV W21, W0
	0x039D9614 MOV X0, X19
	0x039D9618 LDP X9, X1, [X8 + 0x178]
	0x039D961C BLR X9
	0x039D9620 MOV X1, X31
	0x039D9624 BL 0x3C61A54
	0x039D9628 CMP W21, 0x1
	0x039D962C B.EQ 0x39D9638
	0x039D9630 CMP W0, 0x1
	0x039D9634 B.NE 0x39D97A8
	0x039D9638 CMP W21, W0
	0x039D963C B.NE 0x39D97B0
	0x039D9640 LDR X8, [X20]
	0x039D9644 MOV X0, X20
	0x039D9648 LDP X9, X1, [X8 + 0x178]
	0x039D964C BLR X9
	0x039D9650 LDR X8, [X22]
	0x039D9654 MOV W21, W0
	0x039D9658 LDR W9, [X8 + 0xE0]
	0x039D965C CBNZ W9, 0x39D9668
	0x039D9660 MOV X0, X8
	0x039D9664 BL 0x1C16DFC
	0x039D9668 MOV W0, W21
	0x039D966C MOV X1, X31
	0x039D9670 BL 0x3C61DDC
	0x039D9674 LDR X8, [X20]
	0x039D9678 MOV W21, W0
	0x039D967C MOV X0, X20
	0x039D9680 LDP X9, X1, [X8 + 0x178]
	0x039D9684 BLR X9
	0x039D9688 MOV X1, X31
	0x039D968C BL 0x3C61DA0
	0x039D9690 LDR X8, [X20]
	0x039D9694 MOV W22, W0
	0x039D9698 MOV X0, X20
	0x039D969C LDP X9, X1, [X8 + 0x178]
	0x039D96A0 BLR X9
	0x039D96A4 MOV X1, X31
	0x039D96A8 BL 0x3C61D64
	0x039D96AC LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X19, 0xA09000
	014 Move W8, [X19+3419]
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x77B000
	021 Move X0, [X0+280]
	022 Call 0x1C17CF4
	023 Move X0, 0x77B000
	024 Move X0, [X0+288]
	025 Call 0x1C17CF4
	026 Move X0, 0x77B000
	027 Move X0, [X0+248]
	028 Call 0x1C17CF4
	029 Move X0, 0x71B000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0x71B000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0x77B000
	036 Move X0, [X0+312]
	037 Call 0x1C17CF4
	038 Move X0, 0x77B000
	039 Move X0, [X0+320]
	040 Call 0x1C17CF4
	041 Move X0, 0x71B000
	042 Move X0, [X0+2440]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X19+3419], W8
	046 Move X8, [X20+24]
	047 Compare X8, 0
	048 JumpIfEqual {198}
	049 Move X9, 0x71B000
	050 Move X10, 0x77B000
	051 Move X9, [X9+2440]
	052 Move X10, [X10+280]
	053 Move W1, [X8+32]
	054 Add X19, X20, 32
	055 Move X22, [X9]
	056 Move X2, [X10]
	057 Move X0, X19
	058 Call Array.Resize, X0, X1
	059 Move X0, [X20+24]
	060 Compare X0, 0
	061 JumpIfEqual {198}
	062 Move X8, 0x77B000
	063 Move X8, [X8+288]
	064 Move X1, [X19]
	065 Move X2, [X8]
	066 Call HashSet`1<Object>.CopyTo, X0, X1
	067 Move X8, [X19]
	068 Compare X8, 0
	069 JumpIfEqual {198}
	070 Move W23, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X25, 0x71B000
	073 Move X26, 0x71B000
	074 Move X27, 0x77B000
	075 Move X28, 0x77B000
	076 Move X25, [X25+2512]
	077 Move X26, [X26+1880]
	078 Move X27, [X27+312]
	079 Move X28, [X28+320]
	080 Move W24, W31
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X8, W24
	084 Move X8, [X8+32]
	085 Compare X8, 0
	086 JumpIfEqual {198}
	087 Move X0, [X25]
	088 Move X21, [X8+24]
	089 Move W1, 5
	090 Call 0x1C17D6C
	091 Compare X0, 0
	092 JumpIfEqual {198}
	093 Move X20, X0
	094 Compare X22, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X0, X22
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {214}
	102 Move W8, [X20+24]
	103 Compare W8, 0
	104 JumpIfEqual {213}
	105 Move [X20+32], X22
	106 Move X0, [X26]
	107 Add X1, X31, 28
	108 Move [X31+28], W24
	109 Call 0x1C17E04
	110 Move X22, X0
	111 Compare X0, 0
	112 JumpIfEqual {119}
	113 Move X8, [X20]
	114 Move X0, X22
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {214}
	119 Move W8, [X20+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X20+40], X22
	122 Compare X21, 0
	123 JumpIfEqual {198}
	124 Move X0, X21
	125 Move X1, X31
	126 Call RenderTexture.get_format, X0
	127 Move X8, [X27]
	128 Move [X31+24], W0
	129 Add X1, X31, 24
	130 Move X0, X8
	131 Call 0x1C17E04
	132 Move X22, X0
	133 Compare X0, 0
	134 JumpIfEqual {141}
	135 Move X8, [X20]
	136 Move X0, X22
	137 Move X1, [X8+64]
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {214}
	141 Move W8, [X20+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X20+48], X22
	144 Move X8, [X21]
	145 Move X0, X21
	146 Move X9, [X8+392]
	147 Move X1, [X8+400]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X26]
	150 Move [X31+12], W0
	151 Add X1, X31, 12
	152 Move X0, X8
	153 Call 0x1C17E04
	154 Move X22, X0
	155 Compare X0, 0
	156 JumpIfEqual {163}
	157 Move X8, [X20]
	158 Move X0, X22
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {214}
	163 Move W8, [X20+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X20+56], X22
	166 Move X8, [X21]
	167 Move X0, X21
	168 Move X9, [X8+424]
	169 Move X1, [X8+432]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X8, [X26]
	172 Move [X31+8], W0
	173 Add X1, X31, 8
	174 Move X0, X8
	175 Call 0x1C17E04
	176 Move X21, X0
	177 Compare X0, 0
	178 JumpIfEqual {185}
	179 Move X8, [X20]
	180 Move X0, X21
	181 Move X1, [X8+64]
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {214}
	185 Move W8, [X20+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X20+64], X21
	188 Move X0, [X28]
	189 Move X1, X20
	190 Move X2, X31
	191 Call String.Format, X0, X1
	192 Add W24, W24, 1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X22, X0
	195 Move X8, [X19]
	196 Compare X8, 0
	197 JumpIfNotEqual {81}
	198 Call 0x1C17F20
	199 Move X0, X22
	200 Move X20, [X31+96]
	201 Move X19, [X31+104]
	202 Move X22, [X31+80]
	203 Move X21, [X31+88]
	204 Move X24, [X31+64]
	205 Move X23, [X31+72]
	206 Move X26, [X31+48]
	207 Move X25, [X31+56]
	208 Move X28, [X31+32]
	209 Move X27, [X31+40]
	210 Move X30, [X31+16]
	211 Add X31, X31, 112
	212 Return X0
	213 Call 0x1C17F28
	214 Call 0x1C17F44
	215 Move X1, X31
	216 Call 0x1C17DEC

