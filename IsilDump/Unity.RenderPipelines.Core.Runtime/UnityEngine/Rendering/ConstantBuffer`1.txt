Type: UnityEngine.Rendering.ConstantBuffer`1

Method: System.Void .ctor()

Disassembly:
	0x0299D298 MOV W4, W0
	0x0299D29C MOV X0, X20
	0x0299D2A0 MOV X1, X21
	0x0299D2A4 MOV W2, W19
	0x0299D2A8 LDP X20, X19, [X31 + 0x20]
	0x0299D2AC LDP X22, X21, [X31 + 0x10]
	0x0299D2B0 MOV W3, W31
	0x0299D2B4 MOV X5, X31
	0x0299D2B8 LDR X30, [X31], #0x30
	0x0299D2BC B 0x3C4FDA8
	0x0299D2C0 BL 0x1C16F20
	0x0299D2C4 STP X30, X21, [X31 - 0x20]!
	0x0299D2C8 STP X20, X19, [X31 + 0x10]
	0x0299D2CC ADRP X21, 0x1A3D000
	0x0299D2D0 LDRB W8, [X21 + 0xF26]
	0x0299D2D4 MOV W19, W1
	0x0299D2D8 MOV X20, X0
	0x0299D2DC TBNZ X8, 0x0, 0x299D2F4
	0x0299D2E0 ADRP X0, 0x1758000
	0x0299D2E4 LDR X0, [X0 + 0x9D8]
	0x0299D2E8 BL 0x1C16CF4
	0x0299D2EC MOVZ W8, 0x1
	0x0299D2F0 STRB W8, [X21 + 0xF26]
	0x0299D2F4 LDR X0, [X20 + 0x10]
	0x0299D2F8 CBZ X0, 0x299D344
	0x0299D2FC ADRP X8, 0x1758000
	0x0299D300 LDR X8, [X8 + 0x9D8]
	0x0299D304 MOV W1, W19
	0x0299D308 LDR X2, [X8]
	0x0299D30C BL 0x2DAB03C
	0x0299D310 LDR X20, [X20 + 0x20]
	0x0299D314 CBZ X20, 0x299D344
	0x0299D318 MOV X0, X20
	0x0299D31C MOV X1, X31
	0x0299D320 BL 0x3C3AC88
	0x0299D324 MOV W3, W0
	0x0299D328 MOV W0, W19
	0x0299D32C MOV X1, X20
	0x0299D330 LDP X20, X19, [X31 + 0x10]
	0x0299D334 MOV W2, W31
	0x0299D338 MOV X4, X31
	0x0299D33C LDP X30, X21, [X31], #0x20
	0x0299D340 B 0x3C143D4
	0x0299D344 BL 0x1C16F20
	0x0299D348 STR X30, [X31 - 0x30]!
	0x0299D34C STP X22, X21, [X31 + 0x10]
	0x0299D350 STP X20, X19, [X31 + 0x20]
	0x0299D354 LDR X21, [X0 + 0x20]
	0x0299D358 CBZ X21, 0x299D3A4
	0x0299D35C MOV X22, X1
	0x0299D360 MOV X0, X21
	0x0299D364 MOV X1, X31
	0x0299D368 MOV W19, W3
	0x0299D36C MOV X20, X2
	0x0299D370 BL 0x3C3AC88
	0x0299D374 CBZ X22, 0x299D3A4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1A3E000
	008 Move X22, 0x1758000
	009 Move X21, 0x175E000
	010 Move W8, [X23+3868]
	011 Move X22, [X22+3592]
	012 Move X21, [X21+1672]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x1780000
	020 Move X0, [X0+1264]
	021 Call 0x1C17CF4
	022 Move X0, 0x175E000
	023 Move X0, [X0+1672]
	024 Call 0x1C17CF4
	025 Move X0, 0x1758000
	026 Move X0, [X0+3592]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+3868], W8
	030 Move X0, [X22]
	031 Move X22, 0x1780000
	032 Move X22, [X22+1264]
	033 Call 0x1C17F10
	034 Move X1, [X21]
	035 Move X21, X0
	036 Call HashSet`1<Int32>..ctor, X0
	037 Move [X19+16], X21
	038 Move X8, [X20+32]
	039 Move X8, [X8+192]
	040 Move X0, [X8+8]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move W1, 1
	048 Call 0x1C17D6C
	049 Move [X19+24], X0
	050 Move X0, X19
	051 Move X1, X31
	052 Call ConstantBufferBase..ctor, X0
	053 Move X0, [X22]
	054 Call 0x1C17F10
	055 Move W1, 1
	056 Move W2, 128
	057 Move W3, 8
	058 Move X4, X31
	059 Move X20, X0
	060 Call ComputeBuffer..ctor, X0, X1, X2, X3
	061 Move [X19+32], X20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 

Method: System.Void UpdateData(UnityEngine.Rendering.CommandBuffer cmd, in CBType data)

Disassembly:
	0x0299D378 MOV W5, W0
	0x0299D37C MOV X0, X22
	0x0299D380 MOV X1, X20
	0x0299D384 MOV W2, W19
	0x0299D388 MOV X3, X21
	0x0299D38C LDP X20, X19, [X31 + 0x20]
	0x0299D390 LDP X22, X21, [X31 + 0x10]
	0x0299D394 MOV W4, W31
	0x0299D398 MOV X6, X31
	0x0299D39C LDR X30, [X31], #0x30
	0x0299D3A0 B 0x3C4ED04
	0x0299D3A4 BL 0x1C16F20
	0x0299D3A8 STP X30, X21, [X31 - 0x20]!
	0x0299D3AC STP X20, X19, [X31 + 0x10]
	0x0299D3B0 LDR X20, [X0 + 0x20]
	0x0299D3B4 CBZ X20, 0x299D3F4
	0x0299D3B8 MOV X21, X1
	0x0299D3BC MOV X0, X20
	0x0299D3C0 MOV X1, X31
	0x0299D3C4 MOV W19, W2
	0x0299D3C8 BL 0x3C3AC88
	0x0299D3CC CBZ X21, 0x299D3F4
	0x0299D3D0 MOV W1, W19
	0x0299D3D4 MOV X2, X20
	0x0299D3D8 LDP X20, X19, [X31 + 0x10]
	0x0299D3DC MOV W4, W0
	0x0299D3E0 MOV X0, X21
	0x0299D3E4 MOV W3, W31
	0x0299D3E8 MOV X5, X31
	0x0299D3EC LDP X30, X21, [X31], #0x20
	0x0299D3F0 B 0x3C3B7D8
	0x0299D3F4 BL 0x1C16F20
	0x0299D3F8 STP X30, X21, [X31 - 0x20]!
	0x0299D3FC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+256], X29
	003 Move [X31+272], X30
	004 Move [X31+280], X21
	005 Move [X31+288], X20
	006 Move [X31+296], X19
	007 Move X21, [X0+24]
	008 Move X8, X2
	009 Move X20, X0
	010 Move X19, X1
	011 Add X0, X31, 128
	012 Move W2, 128
	013 Move X1, X8
	014 Call 0x3EB2AC0
	015 Compare X21, 0
	016 JumpIfEqual {42}
	017 Add X0, X31, 0
	018 Add X1, X31, 128
	019 Move W2, 128
	020 Call 0x3EB2AC0
	021 Move W8, [X21+24]
	022 Compare W8, 0
	023 JumpIfEqual {43}
	024 Add X0, X21, 32
	025 Add X1, X31, 0
	026 Move W2, 128
	027 Call 0x3EB2AC0
	028 Compare X19, 0
	029 JumpIfEqual {42}
	030 Move X2, [X20+24]
	031 Move X1, [X20+32]
	032 Move X0, X19
	033 Move X20, [X31+288]
	034 Move X19, [X31+296]
	035 Move X30, [X31+272]
	036 Move X21, [X31+280]
	037 Move X29, [X31+256]
	038 Move X3, X31
	039 Add X31, X31, 304
	040 Call CommandBuffer.SetBufferData, X0, X1, X2
	041 Return 
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.Void UpdateData(in CBType data)

Disassembly:
	0x0299D400 LDR X20, [X0 + 0x20]
	0x0299D404 CBZ X20, 0x299D444
	0x0299D408 MOV X21, X1
	0x0299D40C MOV X0, X20
	0x0299D410 MOV X1, X31
	0x0299D414 MOV W19, W2
	0x0299D418 BL 0x3C3AC88
	0x0299D41C CBZ X21, 0x299D444
	0x0299D420 MOV W1, W19
	0x0299D424 MOV X2, X20
	0x0299D428 LDP X20, X19, [X31 + 0x10]
	0x0299D42C MOV W4, W0
	0x0299D430 MOV X0, X21
	0x0299D434 MOV W3, W31
	0x0299D438 MOV X5, X31
	0x0299D43C LDP X30, X21, [X31], #0x20
	0x0299D440 B 0x3C15DE8
	0x0299D444 BL 0x1C16F20
	0x0299D448 STP X30, X21, [X31 - 0x20]!
	0x0299D44C STP X20, X19, [X31 + 0x10]
	0x0299D450 MOV W19, W3
	0x0299D454 MOV X20, X1
	0x0299D458 MOV X21, X0
	0x0299D45C BL 0x299D0E0
	0x0299D460 MOV X1, X20
	0x0299D464 MOV W2, W19
	0x0299D468 LDP X20, X19, [X31 + 0x10]
	0x0299D46C MOV X0, X21
	0x0299D470 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X20
	005 Move [X31+280], X19
	006 Move X20, [X0+24]
	007 Move X19, X0
	008 Add X0, X31, 128
	009 Move W2, 128
	010 Call 0x3EB2AC0
	011 Compare X20, 0
	012 JumpIfEqual {36}
	013 Add X0, X31, 0
	014 Add X1, X31, 128
	015 Move W2, 128
	016 Call 0x3EB2AC0
	017 Move W8, [X20+24]
	018 Compare W8, 0
	019 JumpIfEqual {37}
	020 Add X0, X20, 32
	021 Add X1, X31, 0
	022 Move W2, 128
	023 Call 0x3EB2AC0
	024 Move X0, [X19+32]
	025 Compare X0, 0
	026 JumpIfEqual {36}
	027 Move X1, [X19+24]
	028 Move X20, [X31+272]
	029 Move X19, [X31+280]
	030 Move X29, [X31+256]
	031 Move X30, [X31+264]
	032 Move X2, X31
	033 Add X31, X31, 288
	034 Call ComputeBuffer.SetData, X0, X1
	035 Return 
	036 Call 0x1C17F20
	037 Call 0x1C17F28

Method: System.Void SetGlobal(UnityEngine.Rendering.CommandBuffer cmd, System.Int32 shaderId)

Disassembly:
	0x0299D474 B 0x299D22C
	0x0299D478 STR X30, [X31 - 0x20]!
	0x0299D47C STP X20, X19, [X31 + 0x10]
	0x0299D480 MOV W19, W2
	0x0299D484 MOV X20, X0
	0x0299D488 BL 0x299D18C
	0x0299D48C MOV X0, X20
	0x0299D490 MOV W1, W19
	0x0299D494 LDP X20, X19, [X31 + 0x10]
	0x0299D498 LDR X30, [X31], #0x20
	0x0299D49C B 0x299D2C4
	0x0299D4A0 SUB X31, X31, 0x70
	0x0299D4A4 STP X30, X23, [X31 + 0x40]
	0x0299D4A8 STP X22, X21, [X31 + 0x50]
	0x0299D4AC STP X20, X19, [X31 + 0x60]
	0x0299D4B0 ADRP X20, 0x1A3D000
	0x0299D4B4 LDRB W8, [X20 + 0xF27]
	0x0299D4B8 MOV X19, X0
	0x0299D4BC TBNZ X8, 0x0, 0x299D510
	0x0299D4C0 ADRP X0, 0x177E000
	0x0299D4C4 LDR X0, [X0 + 0x8F8]
	0x0299D4C8 BL 0x1C16CF4
	0x0299D4CC ADRP X0, 0x175D000
	0x0299D4D0 LDR X0, [X0 + 0x830]
	0x0299D4D4 BL 0x1C16CF4
	0x0299D4D8 ADRP X0, 0x175D000
	0x0299D4DC LDR X0, [X0 + 0x838]
	0x0299D4E0 BL 0x1C16CF4
	0x0299D4E4 ADRP X0, 0x175D000
	0x0299D4E8 LDR X0, [X0 + 0x840]
	0x0299D4EC BL 0x1C16CF4
	0x0299D4F0 ADRP X0, 0x175D000
	0x0299D4F4 LDR X0, [X0 + 0x678]
	0x0299D4F8 BL 0x1C16CF4
	0x0299D4FC ADRP X0, 0x175D000
	0x0299D500 LDR X0, [X0 + 0x848]
	0x0299D504 BL 0x1C16CF4
	0x0299D508 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A3E000
	007 Move W8, [X22+3869]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1759000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3869], W8
	020 Move X0, [X21+16]
	021 Compare X0, 0
	022 JumpIfEqual {49}
	023 Move X8, 0x1759000
	024 Move X8, [X8+2520]
	025 Move W1, W19
	026 Move X2, [X8]
	027 Call HashSet`1<Int32>.Add, X0, X1
	028 Move X21, [X21+32]
	029 Compare X21, 0
	030 JumpIfEqual {49}
	031 Move X0, X21
	032 Move X1, X31
	033 Call ComputeBuffer.get_stride, X0
	034 Compare X20, 0
	035 JumpIfEqual {49}
	036 Move W4, W0
	037 Move X0, X20
	038 Move X1, X21
	039 Move W2, W19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move W3, W31
	045 Move X5, X31
	046 Move X30, [X31+48]
	047 Call CommandBuffer.SetGlobalConstantBuffer, X0, X1, X2, X3, X4
	048 Return 
	049 Call 0x1C17F20

Method: System.Void SetGlobal(System.Int32 shaderId)

Disassembly:
	0x0299D50C STRB W8, [X20 + 0xF27]
	0x0299D510 STP X31, X31, [X31 + 0x20]
	0x0299D514 STR X31, [X31 + 0x30]
	0x0299D518 LDR X0, [X19 + 0x10]
	0x0299D51C CBZ X0, 0x299D5E0
	0x0299D520 ADRP X8, 0x175D000
	0x0299D524 LDR X8, [X8 + 0x848]
	0x0299D528 ADRP X20, 0x175D000
	0x0299D52C LDR X20, [X20 + 0x838]
	0x0299D530 ADRP X23, 0x175D000
	0x0299D534 LDR X1, [X8]
	0x0299D538 ADRP X22, 0x177E000
	0x0299D53C ADRP X21, 0x175D000
	0x0299D540 LDR X23, [X23 + 0x678]
	0x0299D544 LDR X22, [X22 + 0x8F8]
	0x0299D548 LDR X21, [X21 + 0x830]
	0x0299D54C ADD X8, X31, 0x8
	0x0299D550 BL 0x2DAAA30
	0x0299D554 LDUR V0, [X31 + 0x8]
	0x0299D558 LDR X8, [X31 + 0x18]
	0x0299D55C STR V0, [X31 + 0x2]
	0x0299D560 STR X8, [X31 + 0x30]
	0x0299D564 LDR X1, [X20]
	0x0299D568 ADD X0, X31, 0x20
	0x0299D56C BL 0x2BBDA6C
	0x0299D570 TBZ X0, 0x0, 0x299D590
	0x0299D574 LDR W0, [X31 + 0x30]
	0x0299D578 MOV X1, X31
	0x0299D57C MOV W2, W31
	0x0299D580 MOV W3, W31
	0x0299D584 MOV X4, X31
	0x0299D588 BL 0x3C143D4
	0x0299D58C B 0x299D564

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1A3E000
	006 Move W8, [X21+3870]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1759000
	014 Move X0, [X0+2520]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3870], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {43}
	021 Move X8, 0x1759000
	022 Move X8, [X8+2520]
	023 Move W1, W19
	024 Move X2, [X8]
	025 Call HashSet`1<Int32>.Add, X0, X1
	026 Move X20, [X20+32]
	027 Compare X20, 0
	028 JumpIfEqual {43}
	029 Move X0, X20
	030 Move X1, X31
	031 Call ComputeBuffer.get_stride, X0
	032 Move W3, W0
	033 Move W0, W19
	034 Move X1, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move W2, W31
	038 Move X4, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Shader.SetGlobalConstantBuffer, X0, X1, X2, X3
	042 Return 
	043 Call 0x1C17F20

Method: System.Void Set(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.ComputeShader cs, System.Int32 shaderId)

Disassembly:
	0x0299D590 LDR X1, [X21]
	0x0299D594 ADD X0, X31, 0x20
	0x0299D598 BL 0x2BBDA68
	0x0299D59C LDR X0, [X19 + 0x10]
	0x0299D5A0 CBZ X0, 0x299D5E0
	0x0299D5A4 LDR X1, [X23]
	0x0299D5A8 BL 0x2DAA53C
	0x0299D5AC LDR X0, [X22]
	0x0299D5B0 LDR X19, [X19 + 0x20]
	0x0299D5B4 LDR W8, [X0 + 0xE0]
	0x0299D5B8 CBNZ W8, 0x299D5C0
	0x0299D5BC BL 0x1C16DFC
	0x0299D5C0 MOV X0, X19
	0x0299D5C4 MOV X1, X31
	0x0299D5C8 BL 0x39E9814
	0x0299D5CC LDP X20, X19, [X31 + 0x60]
	0x0299D5D0 LDP X22, X21, [X31 + 0x50]
	0x0299D5D4 LDP X30, X23, [X31 + 0x40]
	0x0299D5D8 ADD X31, X31, 0x70
	0x0299D5DC RET
	0x0299D5E0 BL 0x1C16F20
	0x0299D5E4 B 0x299D5E8
	0x0299D5E8 MOV X21, X0
	0x0299D5EC CMP W1, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, [X0+32]
	007 Compare X21, 0
	008 JumpIfEqual {31}
	009 Move X22, X1
	010 Move X0, X21
	011 Move X1, X31
	012 Move W19, W3
	013 Move X20, X2
	014 Call ComputeBuffer.get_stride, X0
	015 Compare X22, 0
	016 JumpIfEqual {31}
	017 Move W5, W0
	018 Move X0, X22
	019 Move X1, X20
	020 Move W2, W19
	021 Move X3, X21
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move W4, W31
	027 Move X6, X31
	028 Move X30, [X31+48]
	029 Call CommandBuffer.SetComputeConstantBufferParam, X0, X1, X2, X3, X4, X5
	030 Return 
	031 Call 0x1C17F20

Method: System.Void Set(UnityEngine.ComputeShader cs, System.Int32 shaderId)

Disassembly:
	0x0299D5F0 B.NE 0x299D624
	0x0299D5F4 MOV X0, X21
	0x0299D5F8 BL 0x3EB1AD0
	0x0299D5FC LDR X20, [X0]
	0x0299D600 BL 0x3EB1AE0
	0x0299D604 ADRP X8, 0x175D000
	0x0299D608 LDR X8, [X8 + 0x830]
	0x0299D60C ADD X0, X31, 0x20
	0x0299D610 LDR X1, [X8]
	0x0299D614 BL 0x2BBDA68
	0x0299D618 CBZ X20, 0x299D59C
	0x0299D61C MOV X0, X20
	0x0299D620 BL 0x1C16F18
	0x0299D624 MOV X20, X31
	0x0299D628 B 0x299D630
	0x0299D62C MOV X21, X0
	0x0299D630 ADRP X8, 0x175D000
	0x0299D634 LDR X8, [X8 + 0x830]
	0x0299D638 LDR X1, [X8]
	0x0299D63C ADD X0, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+32]
	006 Compare X20, 0
	007 JumpIfEqual {27}
	008 Move X21, X1
	009 Move X0, X20
	010 Move X1, X31
	011 Move W19, W2
	012 Call ComputeBuffer.get_stride, X0
	013 Compare X21, 0
	014 JumpIfEqual {27}
	015 Move W1, W19
	016 Move X2, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W4, W0
	020 Move X0, X21
	021 Move W3, W31
	022 Move X5, X31
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call ComputeShader.SetConstantBuffer, X0, X1, X2, X3, X4
	026 Return 
	027 Call 0x1C17F20

Method: System.Void Set(UnityEngine.Material mat, System.Int32 shaderId)

Disassembly:
	0x0299D640 BL 0x2BBDA68
	0x0299D644 CBNZ X20, 0x299D650
	0x0299D648 MOV X0, X21
	0x0299D64C BL 0x1D2C690
	0x0299D650 MOV X0, X20
	0x0299D654 BL 0x1C16F18
	0x0299D658 BL 0x1990590
	0x0299D65C STP X30, X23, [X31 - 0x30]!
	0x0299D660 STP X22, X21, [X31 + 0x10]
	0x0299D664 STP X20, X19, [X31 + 0x20]
	0x0299D668 ADRP X23, 0x1A3D000
	0x0299D66C ADRP X22, 0x1757000
	0x0299D670 ADRP X21, 0x175D000
	0x0299D674 LDRB W8, [X23 + 0xF28]
	0x0299D678 LDR X22, [X22 + 0xE08]
	0x0299D67C LDR X21, [X21 + 0x688]
	0x0299D680 MOV X20, X1
	0x0299D684 MOV X19, X0
	0x0299D688 TBNZ X8, 0x0, 0x299D6B8
	0x0299D68C ADRP X0, 0x177F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+32]
	006 Compare X20, 0
	007 JumpIfEqual {27}
	008 Move X21, X1
	009 Move X0, X20
	010 Move X1, X31
	011 Move W19, W2
	012 Call ComputeBuffer.get_stride, X0
	013 Compare X21, 0
	014 JumpIfEqual {27}
	015 Move W1, W19
	016 Move X2, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W4, W0
	020 Move X0, X21
	021 Move W3, W31
	022 Move X5, X31
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call Material.SetConstantBuffer, X0, X1, X2, X3, X4
	026 Return 
	027 Call 0x1C17F20

Method: System.Void PushGlobal(UnityEngine.Rendering.CommandBuffer cmd, in CBType data, System.Int32 shaderId)

Disassembly:
	0x0299D690 LDR X0, [X0 + 0x4F0]
	0x0299D694 BL 0x1C16CF4
	0x0299D698 ADRP X0, 0x175D000
	0x0299D69C LDR X0, [X0 + 0x688]
	0x0299D6A0 BL 0x1C16CF4
	0x0299D6A4 ADRP X0, 0x1757000
	0x0299D6A8 LDR X0, [X0 + 0xE08]
	0x0299D6AC BL 0x1C16CF4
	0x0299D6B0 MOVZ W8, 0x1
	0x0299D6B4 STRB W8, [X23 + 0xF28]
	0x0299D6B8 LDR X0, [X22]
	0x0299D6BC ADRP X22, 0x177F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W3
	006 Move X20, X1
	007 Move X21, X0
	008 Call 0x299D378, X0, X1, X2
	009 Move X1, X20
	010 Move W2, W19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X0, X21
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Call 0x299D474, X0, X1, X2
	017 Return 

Method: System.Void PushGlobal(in CBType data, System.Int32 shaderId)

Disassembly:
	0x0299D6C0 LDR X22, [X22 + 0x4F0]
	0x0299D6C4 BL 0x1C16F10
	0x0299D6C8 LDR X1, [X21]
	0x0299D6CC MOV X21, X0
	0x0299D6D0 BL 0x2DA9EF4
	0x0299D6D4 STR X21, [X19 + 0x10]
	0x0299D6D8 LDR X8, [X20 + 0x20]
	0x0299D6DC LDR X8, [X8 + 0xC0]
	0x0299D6E0 LDR X0, [X8 + 0x8]
	0x0299D6E4 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Move X20, X0
	006 Call 0x299D400, X0, X1
	007 Move X0, X20
	008 Move W1, W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Call 0x299D50C, X0, X1
	013 Return 

Method: System.Void Release()

Disassembly:
	0x0299D6E8 TBNZ X8, 0x0, 0x299D6F0
	0x0299D6EC BL 0x1C5C684
	0x0299D6F0 MOVZ W1, 0x1
	0x0299D6F4 BL 0x1C16D6C
	0x0299D6F8 STR X0, [X19 + 0x18]
	0x0299D6FC MOV X0, X19
	0x0299D700 MOV X1, X31
	0x0299D704 BL 0x399DB88
	0x0299D708 LDR X0, [X22]
	0x0299D70C BL 0x1C16F10
	0x0299D710 MOVZ W1, 0x1
	0x0299D714 MOVZ W2, 0x1000
	0x0299D718 MOVZ W3, 0x8
	0x0299D71C MOV X4, X31
	0x0299D720 MOV X20, X0
	0x0299D724 BL 0x3C3AC18
	0x0299D728 STR X20, [X19 + 0x20]
	0x0299D72C LDP X20, X19, [X31 + 0x20]
	0x0299D730 LDP X22, X21, [X31 + 0x10]
	0x0299D734 LDP X30, X23, [X31], #0x30
	0x0299D738 RET
	0x0299D73C STP X29, X30, [X31 - 0x30]!
	0x0299D740 STP X22, X21, [X31 + 0x10]
	0x0299D744 STP X20, X19, [X31 + 0x20]
	0x0299D748 SUB X31, X31, 0x2000
	0x0299D74C SUB X31, X31, 0x10
	0x0299D750 MRS X21, 0xC000
	0x0299D754 LDR X9, [X21 + 0x28]
	0x0299D758 MOV X8, X2
	0x0299D75C MOV X19, X0
	0x0299D760 MOV X20, X1
	0x0299D764 STR X9, [X31 + 0x2008]
	0x0299D768 LDR X22, [X0 + 0x18]
	0x0299D76C ADD X0, X31, 0x1000
	0x0299D770 ADD X0, X0, 0x8
	0x0299D774 MOVZ W2, 0x1000
	0x0299D778 MOV X1, X8
	0x0299D77C BL 0x3EB1AC0
	0x0299D780 CBZ X22, 0x299D7EC
	0x0299D784 ADD X1, X31, 0x1000
	0x0299D788 ADD X0, X31, 0x8
	0x0299D78C ADD X1, X1, 0x8
	0x0299D790 MOVZ W2, 0x1000
	0x0299D794 BL 0x3EB1AC0
	0x0299D798 LDR W8, [X22 + 0x18]
	0x0299D79C CBZ W8, 0x299D7F0
	0x0299D7A0 ADD X0, X22, 0x20
	0x0299D7A4 ADD X1, X31, 0x8
	0x0299D7A8 MOVZ W2, 0x1000
	0x0299D7AC BL 0x3EB1AC0
	0x0299D7B0 CBZ X20, 0x299D7EC
	0x0299D7B4 LDP X2, X1, [X19 + 0x18]
	0x0299D7B8 MOV X0, X20
	0x0299D7BC MOV X3, X31
	0x0299D7C0 BL 0x3C4E6DC
	0x0299D7C4 LDR X8, [X21 + 0x28]
	0x0299D7C8 LDR X9, [X31 + 0x2008]
	0x0299D7CC CMP X8, X9
	0x0299D7D0 B.NE 0x299D7F4
	0x0299D7D4 ADD X31, X31, 0x2000
	0x0299D7D8 ADD X31, X31, 0x10
	0x0299D7DC LDP X20, X19, [X31 + 0x20]
	0x0299D7E0 LDP X22, X21, [X31 + 0x10]
	0x0299D7E4 LDP X29, X30, [X31], #0x30
	0x0299D7E8 RET
	0x0299D7EC BL 0x1C16F20
	0x0299D7F0 BL 0x1C16F28
	0x0299D7F4 BL 0x3EB1B20
	0x0299D7F8 STR X29, [X31 - 0x30]!
	0x0299D7FC STP X30, X21, [X31 + 0x10]
	0x0299D800 STP X20, X19, [X31 + 0x20]
	0x0299D804 SUB X31, X31, 0x2000
	0x0299D808 SUB X31, X31, 0x10
	0x0299D80C MRS X20, 0xC000
	0x0299D810 LDR X8, [X20 + 0x28]
	0x0299D814 MOV X19, X0
	0x0299D818 MOVZ W2, 0x1000
	0x0299D81C STR X8, [X31 + 0x2008]
	0x0299D820 LDR X21, [X0 + 0x18]
	0x0299D824 ADD X0, X31, 0x1000
	0x0299D828 ADD X0, X0, 0x8
	0x0299D82C BL 0x3EB1AC0
	0x0299D830 CBZ X21, 0x299D89C
	0x0299D834 ADD X1, X31, 0x1000
	0x0299D838 ADD X0, X31, 0x8
	0x0299D83C ADD X1, X1, 0x8
	0x0299D840 MOVZ W2, 0x1000
	0x0299D844 BL 0x3EB1AC0
	0x0299D848 LDR W8, [X21 + 0x18]
	0x0299D84C CBZ W8, 0x299D8A0
	0x0299D850 ADD X0, X21, 0x20
	0x0299D854 ADD X1, X31, 0x8
	0x0299D858 MOVZ W2, 0x1000
	0x0299D85C BL 0x3EB1AC0
	0x0299D860 LDR X0, [X19 + 0x20]
	0x0299D864 CBZ X0, 0x299D89C
	0x0299D868 LDR X1, [X19 + 0x18]
	0x0299D86C MOV X2, X31
	0x0299D870 BL 0x3C3ACC4
	0x0299D874 LDR X8, [X20 + 0x28]
	0x0299D878 LDR X9, [X31 + 0x2008]
	0x0299D87C CMP X8, X9
	0x0299D880 B.NE 0x299D8A4
	0x0299D884 ADD X31, X31, 0x2000
	0x0299D888 ADD X31, X31, 0x10
	0x0299D88C LDP X20, X19, [X31 + 0x20]
	0x0299D890 LDP X30, X21, [X31 + 0x10]
	0x0299D894 LDR X29, [X31], #0x30
	0x0299D898 RET
	0x0299D89C BL 0x1C16F20
	0x0299D8A0 BL 0x1C16F28

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0x1A3E000
	009 Move W8, [X20+3871]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x177F000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move X0, 0x175E000
	019 Move X0, [X0+2096]
	020 Call 0x1C17CF4
	021 Move X0, 0x175E000
	022 Move X0, [X0+2104]
	023 Call 0x1C17CF4
	024 Move X0, 0x175E000
	025 Move X0, [X0+2112]
	026 Call 0x1C17CF4
	027 Move X0, 0x175E000
	028 Move X0, [X0+1656]
	029 Call 0x1C17CF4
	030 Move X0, 0x175E000
	031 Move X0, [X0+2120]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3871], W8
	035 Move [X31+32], X31
	036 Move [X31+40], X31
	037 Move [X31+48], X31
	038 Move X0, [X19+16]
	039 Compare X0, 0
	040 JumpIfEqual {96}
	041 Move X8, 0x175E000
	042 Move X8, [X8+2120]
	043 Move X20, 0x175E000
	044 Move X20, [X20+2104]
	045 Move X23, 0x175E000
	046 Move X1, [X8]
	047 Move X22, 0x177F000
	048 Move X21, 0x175E000
	049 Move X23, [X23+1656]
	050 Move X22, [X22+2296]
	051 Move X21, [X21+2096]
	052 Add X8, X31, 8
	053 Call HashSet`1<Int32>.GetEnumerator, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+24]
	056 Move [X31+2], V0
	057 Move [X31+48], X8
	058 Move X1, [X20]
	059 Add X0, X31, 32
	060 Call Enumerator<Int32>.MoveNext, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {71}
	065 Move W0, [X31+48]
	066 Move X1, X31
	067 Move W2, W31
	068 Move W3, W31
	069 Move X4, X31
	070 Call Shader.SetGlobalConstantBuffer, X0, X1, X2, X3
	071 Move X1, [X21]
	072 Add X0, X31, 32
	073 Call Enumerator<Int32>.Dispose, X0
	074 Move X0, [X19+16]
	075 Compare X0, 0
	076 JumpIfEqual {96}
	077 Move X1, [X23]
	078 Call HashSet`1<Int32>.Clear, X0
	079 Move X0, [X22]
	080 Move X19, [X19+32]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X19
	086 Move X1, X31
	087 Call CoreUtils.SafeRelease, X0
	088 Move X20, [X31+96]
	089 Move X19, [X31+104]
	090 Move X22, [X31+80]
	091 Move X21, [X31+88]
	092 Move X30, [X31+64]
	093 Move X23, [X31+72]
	094 Add X31, X31, 112
	095 Return 
	096 Call 0x1C17F20
	097 Move X21, X0
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, X21
	100 Call 0x3EB2AD0
	101 Move X20, [X0]
	102 Call 0x3EB2AE0
	103 Move X8, 0x175E000
	104 Move X8, [X8+2096]
	105 Add X0, X31, 32
	106 Move X1, [X8]
	107 Call Enumerator<Int32>.Dispose, X0
	108 Compare X20, 0
	109 JumpIfEqual {74}
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Move X20, X31
	113 Move X21, X0
	114 Move X8, 0x175E000
	115 Move X8, [X8+2096]
	116 Move X1, [X8]
	117 Add X0, X31, 32
	118 Call Enumerator<Int32>.Dispose, X0
	119 Compare X20, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X21
	122 Call 0x1D2D690
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Call 0x1991590

