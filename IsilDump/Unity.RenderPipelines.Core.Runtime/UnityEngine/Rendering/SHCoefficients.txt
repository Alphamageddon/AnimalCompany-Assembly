Type: UnityEngine.Rendering.SHCoefficients

Method: System.Void .ctor(UnityEngine.Rendering.SphericalHarmonicsL2 sh)

Disassembly:
	0x039DF158 STRB W8, [X21 + 0xDA2]
	0x039DF15C CBZ X19, 0x39DF1B4
	0x039DF160 ADRP X21, 0x774000
	0x039DF164 LDR X21, [X21 + 0x330]
	0x039DF168 LDR X8, [X19]
	0x039DF16C LDR X1, [X21]
	0x039DF170 LDR X8, [X8 + 0x40]
	0x039DF174 LDR X9, [X1 + 0x40]
	0x039DF178 CMP X8, X9
	0x039DF17C B.NE 0x39DF1B8
	0x039DF180 LDRB W20, [X20]
	0x039DF184 MOV X0, X19
	0x039DF188 BL 0x1C16E08
	0x039DF18C LDRB W8, [X0]
	0x039DF190 LDR X0, [X21]
	0x039DF194 ADD X1, X31, 0x8
	0x039DF198 AND W8, W8, W20, 0x0
	0x039DF19C STRB W8, [X31 + 0x8]
	0x039DF1A0 BL 0x1C16E04
	0x039DF1A4 LDP X20, X19, [X31 + 0x20]
	0x039DF1A8 LDP X30, X21, [X31 + 0x10]
	0x039DF1AC ADD X31, X31, 0x30
	0x039DF1B0 RET
	0x039DF1B4 BL 0x1C16F20
	0x039DF1B8 MOV X0, X19
	0x039DF1BC BL 0x1C171E0
	0x039DF1C0 SUB X31, X31, 0x30
	0x039DF1C4 STP X30, X21, [X31 + 0x10]
	0x039DF1C8 STP X20, X19, [X31 + 0x20]
	0x039DF1CC ADRP X21, 0xA02000
	0x039DF1D0 LDRB W8, [X21 + 0xDA3]
	0x039DF1D4 MOV X19, X1
	0x039DF1D8 MOV X20, X0
	0x039DF1DC TBNZ X8, 0x0, 0x39DF1F4
	0x039DF1E0 ADRP X0, 0x774000
	0x039DF1E4 LDR X0, [X0 + 0x330]
	0x039DF1E8 BL 0x1C16CF4
	0x039DF1EC MOVZ W8, 0x1
	0x039DF1F0 STRB W8, [X21 + 0xDA3]
	0x039DF1F4 CBZ X19, 0x39DF24C
	0x039DF1F8 ADRP X21, 0x774000
	0x039DF1FC LDR X21, [X21 + 0x330]
	0x039DF200 LDR X8, [X19]
	0x039DF204 LDR X1, [X21]
	0x039DF208 LDR X8, [X8 + 0x40]
	0x039DF20C LDR X9, [X1 + 0x40]
	0x039DF210 CMP X8, X9
	0x039DF214 B.NE 0x39DF250
	0x039DF218 LDRB W20, [X20]
	0x039DF21C MOV X0, X19
	0x039DF220 BL 0x1C16E08
	0x039DF224 LDRB W8, [X0]
	0x039DF228 LDR X0, [X21]
	0x039DF22C ADD X1, X31, 0x8
	0x039DF230 ORR W8, W8, W20, 0x0
	0x039DF234 STRB W8, [X31 + 0x8]
	0x039DF238 BL 0x1C16E04
	0x039DF23C LDP X20, X19, [X31 + 0x20]
	0x039DF240 LDP X30, X21, [X31 + 0x10]
	0x039DF244 ADD X31, X31, 0x30
	0x039DF248 RET
	0x039DF24C BL 0x1C16F20
	0x039DF250 MOV X0, X19
	0x039DF254 BL 0x1C171E0
	0x039DF258 SUB X31, X31, 0x30
	0x039DF25C STP X30, X21, [X31 + 0x10]
	0x039DF260 STP X20, X19, [X31 + 0x20]
	0x039DF264 ADRP X21, 0xA02000
	0x039DF268 ADRP X20, 0x774000
	0x039DF26C LDRB W8, [X21 + 0xDA4]
	0x039DF270 LDR X20, [X20 + 0x330]
	0x039DF274 MOV X19, X0
	0x039DF278 TBNZ X8, 0x0, 0x39DF290
	0x039DF27C ADRP X0, 0x774000
	0x039DF280 LDR X0, [X0 + 0x330]
	0x039DF284 BL 0x1C16CF4
	0x039DF288 MOVZ W8, 0x1
	0x039DF28C STRB W8, [X21 + 0xDA4]
	0x039DF290 LDRB W8, [X19]
	0x039DF294 LDR X0, [X20]
	0x039DF298 ADD X1, X31, 0x8
	0x039DF29C ORN W8, W31, W8, 0x0
	0x039DF2A0 STRB W8, [X31 + 0x8]
	0x039DF2A4 BL 0x1C16E04
	0x039DF2A8 LDP X20, X19, [X31 + 0x20]
	0x039DF2AC LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Subtract X31, X31, 784
	007 Move X19, X0
	008 Add X0, X31, 672
	009 Move W2, 108
	010 Move X20, X1
	011 Call 0x3EB2AC0
	012 Add X0, X31, 672
	013 Move W1, W31
	014 Call SHCoefficients.GetSHA, X0, X1
	015 Add X0, X31, 560
	016 Move W2, 108
	017 Move X1, X20
	018 Move [X19], S0
	019 Move [X19+8], S1
	020 Move [X19+8], S2
	021 Move [X19+16], S3
	022 Call 0x3EB2AC0
	023 Add X0, X31, 560
	024 Move W1, 1
	025 Move W21, 1
	026 Call SHCoefficients.GetSHA, X0, X1
	027 Add X0, X31, 448
	028 Move W2, 108
	029 Move X1, X20
	030 Move [X19+16], S0
	031 Move [X19+24], S1
	032 Move [X19+24], S2
	033 Move [X19+32], S3
	034 Call 0x3EB2AC0
	035 Add X0, X31, 448
	036 Move W1, 2
	037 Call SHCoefficients.GetSHA, X0, X1
	038 Add X0, X31, 336
	039 Move W2, 108
	040 Move X1, X20
	041 Move [X19+32], S0
	042 Move [X19+40], S1
	043 Move [X19+40], S2
	044 Move [X19+48], S3
	045 Call 0x3EB2AC0
	046 Add X0, X31, 336
	047 Move W1, W31
	048 Call SHCoefficients.GetSHB, X0, X1
	049 Add X0, X31, 224
	050 Move W2, 108
	051 Move X1, X20
	052 Move [X19+48], S0
	053 Move [X19+56], S1
	054 Move [X19+56], S2
	055 Move [X19+64], S3
	056 Call 0x3EB2AC0
	057 Add X0, X31, 224
	058 Move W1, 1
	059 Call SHCoefficients.GetSHB, X0, X1
	060 Add X0, X31, 112
	061 Move W2, 108
	062 Move X1, X20
	063 Move [X19+64], S0
	064 Move [X19+72], S1
	065 Move [X19+72], S2
	066 Move [X19+80], S3
	067 Call 0x3EB2AC0
	068 Add X0, X31, 112
	069 Move W1, 2
	070 Call SHCoefficients.GetSHB, X0, X1
	071 Add X0, X31, 0
	072 Move W2, 108
	073 Move X1, X20
	074 Move [X19+80], S0
	075 Move [X19+88], S1
	076 Move [X19+88], S2
	077 Move [X19+96], S3
	078 Call 0x3EB2AC0
	079 Add X0, X31, 0
	080 Call SHCoefficients.GetSHC, X0
	081 Move [X19+96], S0
	082 Move [X19+104], S1
	083 Move [X19+104], S2
	084 Move [X19+112], S3
	085 Move X20, 0xA03000
	086 Move W8, [X20+3641]
	087 Compare W8, 0
	088 JumpIfNotEqual {93}
	089 Move X0, 0x71C000
	090 Move X0, [X0+2464]
	091 Call 0x1C17CF4
	092 Move [X20+3641], W21
	093 Move X8, 0x71C000
	094 Move X8, [X8+2464]
	095 Move X8, [X8]
	096 Move X8, [X8+184]
	097 Move V0, [X8+1]
	098 Move [X19+7], V0
	099 Add X31, X31, 784
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X30, [X31+16]
	103 Move X21, [X31+24]
	104 Move X29, [X31+48]
	105 Return 

Method: System.Void .ctor(UnityEngine.Rendering.SphericalHarmonicsL2 sh, UnityEngine.Vector4 probesOcclusion)

Disassembly:
	0x039DF454 MOV X19, X0
	0x039DF458 LDR W9, [X8 + 0xE0]
	0x039DF45C CBNZ W9, 0x39DF468
	0x039DF460 MOV X0, X8
	0x039DF464 BL 0x1C16DFC
	0x039DF468 MOVZ W1, 0x2
	0x039DF46C MOV W0, W20
	0x039DF470 MOV X2, X31
	0x039DF474 BL 0x33224A0
	0x039DF478 MOV X1, X0
	0x039DF47C MOV X0, X19
	0x039DF480 MOV X2, X31
	0x039DF484 BL 0x321EFD0
	0x039DF488 CBZ X0, 0x39DF504
	0x039DF48C ADRP X19, 0x71C000
	0x039DF490 ADRP X20, 0x774000
	0x039DF494 ADRP X21, 0x774000
	0x039DF498 LDR X19, [X19 + 0x600]
	0x039DF49C LDR X20, [X20 + 0x340]
	0x039DF4A0 LDR X21, [X21 + 0x338]
	0x039DF4A4 MOVZ W1, 0x20
	0x039DF4A8 MOVZ W2, 0x30

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], D11
	003 Move [X31+120], D10
	004 Move [X31+128], D9
	005 Move [X31+136], D8
	006 Move [X31+144], X30
	007 Move [X31+152], X19
	008 Move X19, X0
	009 Add X0, X31, 0
	010 Move W2, 108
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move V11, V0
	015 Call 0x3EB2AC0
	016 Add X1, X31, 0
	017 Move X0, X19
	018 Call SHCoefficients..ctor, X0, X1
	019 Move [X19+112], S11
	020 Move [X19+120], S10
	021 Move [X19+120], S9
	022 Move [X19+128], S8
	023 Move X30, [X31+144]
	024 Move X19, [X31+152]
	025 Move D9, [X31+128]
	026 Move D8, [X31+136]
	027 Move D11, [X31+112]
	028 Move D10, [X31+120]
	029 Add X31, X31, 160
	030 Return 

Method: UnityEngine.Vector4 GetSHA(UnityEngine.Rendering.SphericalHarmonicsL2 sh, System.Int32 i)

Disassembly:
	0x039DF2B0 ADD X31, X31, 0x30
	0x039DF2B4 RET
	0x039DF2B8 EOR W8, W1, W0, 0x0
	0x039DF2BC ANDS X31, X8, 0xFF
	0x039DF2C0 CSET W0, EQ
	0x039DF2C4 RET
	0x039DF2C8 EOR W8, W1, W0, 0x0
	0x039DF2CC ANDS X31, X8, 0xFF
	0x039DF2D0 CSET W0, NE
	0x039DF2D4 RET
	0x039DF2D8 STP X30, X21, [X31 - 0x20]!
	0x039DF2DC STP X20, X19, [X31 + 0x10]
	0x039DF2E0 ADRP X21, 0xA02000
	0x039DF2E4 LDRB W8, [X21 + 0xDA5]
	0x039DF2E8 MOV X20, X1
	0x039DF2EC MOV X19, X0
	0x039DF2F0 TBNZ X8, 0x0, 0x39DF308
	0x039DF2F4 ADRP X0, 0x774000
	0x039DF2F8 LDR X0, [X0 + 0x330]
	0x039DF2FC BL 0x1C16CF4
	0x039DF300 MOVZ W8, 0x1
	0x039DF304 STRB W8, [X21 + 0xDA5]
	0x039DF308 CBZ X20, 0x39DF324
	0x039DF30C ADRP X8, 0x774000
	0x039DF310 LDR X8, [X8 + 0x330]
	0x039DF314 LDR X9, [X20]
	0x039DF318 LDR X8, [X8]
	0x039DF31C CMP X9, X8
	0x039DF320 B.EQ 0x39DF32C
	0x039DF324 MOV W0, W31
	0x039DF328 B 0x39DF344
	0x039DF32C MOV X0, X20
	0x039DF330 BL 0x1C16E08
	0x039DF334 LDRB W8, [X0]
	0x039DF338 LDRB W9, [X19]
	0x039DF33C CMP W8, W9
	0x039DF340 CSET W0, EQ
	0x039DF344 LDP X20, X19, [X31 + 0x10]
	0x039DF348 LDP X30, X21, [X31], #0x20
	0x039DF34C RET
	0x039DF350 STR X30, [X31 - 0x10]!
	0x039DF354 MOV X1, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W2, 3
	009 Move X3, X31
	010 Move W19, W1
	011 Move X20, X0
	012 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	013 Move W2, 1
	014 Move X0, X20
	015 Move W1, W19
	016 Move X3, X31
	017 Move V8, V0
	018 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	019 Move W2, 2
	020 Move X0, X20
	021 Move W1, W19
	022 Move X3, X31
	023 Move V9, V0
	024 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	025 Move X0, X20
	026 Move W1, W19
	027 Move W2, W31
	028 Move X3, X31
	029 Move V10, V0
	030 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	031 Move W2, 6
	032 Move X0, X20
	033 Move W1, W19
	034 Move X3, X31
	035 Move V11, V0
	036 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	037 Subtract S3, S11, S0
	038 Move V0, V8
	039 Move V1, V9
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X30, [X31+32]
	043 Move D9, [X31+16]
	044 Move D8, [X31+24]
	045 Move V2, V10
	046 Move D11, [X31+64]
	047 Move D10, [X31+72]
	048 Return X0

Method: UnityEngine.Vector4 GetSHB(UnityEngine.Rendering.SphericalHarmonicsL2 sh, System.Int32 i)

Disassembly:
	0x039DF358 BL 0x3319718
	0x039DF35C MOVZ W8, 0x156D
	0x039DF360 MOVK W8, 0x69700000
	0x039DF364 ADD W0, W0, W8
	0x039DF368 LDR X30, [X31], #0x10
	0x039DF36C RET
	0x039DF370 MOVZ W0, 0x10
	0x039DF374 RET
	0x039DF378 LDRH W8, [X0]
	0x039DF37C CMP W8, 0x0
	0x039DF380 CSET W0, EQ
	0x039DF384 RET
	0x039DF388 LDRSH W8, [X0]
	0x039DF38C ADDS W31, W8, 0x1
	0x039DF390 CSET W0, EQ
	0x039DF394 RET
	0x039DF398 SUB X31, X31, 0x40
	0x039DF39C STP X30, X23, [X31 + 0x10]
	0x039DF3A0 STP X22, X21, [X31 + 0x20]
	0x039DF3A4 STP X20, X19, [X31 + 0x30]
	0x039DF3A8 ADRP X23, 0xA02000
	0x039DF3AC ADRP X21, 0x774000
	0x039DF3B0 ADRP X22, 0x71F000
	0x039DF3B4 ADRP X20, 0x71D000
	0x039DF3B8 LDRB W8, [X23 + 0xDA6]
	0x039DF3BC LDR X21, [X21 + 0x318]
	0x039DF3C0 LDR X22, [X22 + 0x6D8]
	0x039DF3C4 LDR X20, [X20 + 0x9E8]
	0x039DF3C8 MOV X19, X0
	0x039DF3CC TBNZ X8, 0x0, 0x39DF420
	0x039DF3D0 ADRP X0, 0x71D000
	0x039DF3D4 LDR X0, [X0 + 0x9E8]
	0x039DF3D8 BL 0x1C16CF4
	0x039DF3DC ADRP X0, 0x71C000
	0x039DF3E0 LDR X0, [X0 + 0x600]
	0x039DF3E4 BL 0x1C16CF4
	0x039DF3E8 ADRP X0, 0x71F000

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W2, 4
	008 Move X3, X31
	009 Move W19, W1
	010 Move X20, X0
	011 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	012 Move W2, 5
	013 Move X0, X20
	014 Move W1, W19
	015 Move X3, X31
	016 Move V8, V0
	017 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	018 Move W2, 6
	019 Move X0, X20
	020 Move W1, W19
	021 Move X3, X31
	022 Move V9, V0
	023 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	024 Move W2, 7
	025 Move X0, X20
	026 Move W1, W19
	027 Move X3, X31
	028 Move V10, V0
	029 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	030 Move S1, 3
	031 Multiply S2, S10, S1
	032 Move V3, V0
	033 Move V0, V8
	034 Move V1, V9
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+24]
	038 Move D9, [X31+8]
	039 Move D8, [X31+16]
	040 Move V10, [X31+48]
	041 Return X0

Method: UnityEngine.Vector4 GetSHC(UnityEngine.Rendering.SphericalHarmonicsL2 sh)

Disassembly:
	0x039DF3EC LDR X0, [X0 + 0x6D8]
	0x039DF3F0 BL 0x1C16CF4
	0x039DF3F4 ADRP X0, 0x774000
	0x039DF3F8 LDR X0, [X0 + 0x338]
	0x039DF3FC BL 0x1C16CF4
	0x039DF400 ADRP X0, 0x774000
	0x039DF404 LDR X0, [X0 + 0x340]
	0x039DF408 BL 0x1C16CF4
	0x039DF40C ADRP X0, 0x774000
	0x039DF410 LDR X0, [X0 + 0x318]
	0x039DF414 BL 0x1C16CF4
	0x039DF418 MOVZ W8, 0x1
	0x039DF41C STRB W8, [X23 + 0xDA6]
	0x039DF420 MOVZ W8, 0x10
	0x039DF424 ADD X0, X31, 0xC
	0x039DF428 MOV X1, X31
	0x039DF42C STR W8, [X31 + 0xC]
	0x039DF430 BL 0x3399B00
	0x039DF434 LDR X8, [X21]
	0x039DF438 LDR X2, [X22]
	0x039DF43C MOV X1, X0
	0x039DF440 MOV X3, X31
	0x039DF444 MOV X0, X8
	0x039DF448 BL 0x32274B8
	0x039DF44C LDR X8, [X20]
	0x039DF450 LDRH W20, [X19]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move W2, 8
	006 Move W1, W31
	007 Move X3, X31
	008 Move X19, X0
	009 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	010 Move W1, 1
	011 Move W2, 8
	012 Move X0, X19
	013 Move X3, X31
	014 Move V8, V0
	015 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	016 Move W1, 2
	017 Move W2, 8
	018 Move X0, X19
	019 Move X3, X31
	020 Move V9, V0
	021 Call SphericalHarmonicsL2.get_Item, X0, X1, X2
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Move S3, 1
	025 Move V2, V0
	026 Move V0, V8
	027 Move V1, V9
	028 Move D9, [X31+32]
	029 Move D8, [X31+40]
	030 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.SHCoefficients other)

Disassembly:
	0x039DF4AC MOV X3, X31
	0x039DF4B0 BL 0x32296D0
	0x039DF4B4 LDR X8, [X19]
	0x039DF4B8 MOV X19, X0
	0x039DF4BC LDR W9, [X8 + 0xE0]
	0x039DF4C0 CBNZ W9, 0x39DF4CC
	0x039DF4C4 MOV X0, X8
	0x039DF4C8 BL 0x1C16DFC
	0x039DF4CC LDR X1, [X20]
	0x039DF4D0 LDR X2, [X21]
	0x039DF4D4 MOV X0, X19
	0x039DF4D8 MOV X3, X31
	0x039DF4DC BL 0x3632D08
	0x039DF4E0 CBZ X0, 0x39DF504
	0x039DF4E4 MOVZ W1, 0x2E
	0x039DF4E8 MOV X2, X31
	0x039DF4EC BL 0x322BC38
	0x039DF4F0 LDP X20, X19, [X31 + 0x30]
	0x039DF4F4 LDP X22, X21, [X31 + 0x20]
	0x039DF4F8 LDP X30, X23, [X31 + 0x10]
	0x039DF4FC ADD X31, X31, 0x40
	0x039DF500 RET
	0x039DF504 BL 0x1C16F20
	0x039DF508 LDRH W8, [X0]
	0x039DF50C LSRV W8, W8, W1
	0x039DF510 AND W0, W8, 0x1
	0x039DF514 RET
	0x039DF518 AND W8, W1, 0xFFFF
	0x039DF51C LSRV W8, W8, W0
	0x039DF520 AND W0, W8, 0x1
	0x039DF524 RET
	0x039DF528 LDRH W8, [X0]
	0x039DF52C MOVZ W9, 0x1
	0x039DF530 LSLV W9, W9, W1
	0x039DF534 ANDS W31, W2, 0x1
	0x039DF538 ORR W10, W9, W8, 0x0
	0x039DF53C BIC W8, W8, W9, 0x0
	0x039DF540 CSEL W8, W10, W8, NE
	0x039DF544 STRH W8, [X0]
	0x039DF548 RET
	0x039DF54C LDRH W8, [X1]
	0x039DF550 MOVZ W9, 0x1
	0x039DF554 LSLV W9, W9, W0
	0x039DF558 ANDS W31, W2, 0x1
	0x039DF55C ORR W10, W9, W8, 0x0
	0x039DF560 BIC W8, W8, W9, 0x0
	0x039DF564 CSEL W8, W10, W8, NE
	0x039DF568 STRH W8, [X1]
	0x039DF56C RET
	0x039DF570 STRH W1, [X0]
	0x039DF574 RET
	0x039DF578 STP X30, X23, [X31 - 0x30]!
	0x039DF57C STP X22, X21, [X31 + 0x10]
	0x039DF580 STP X20, X19, [X31 + 0x20]
	0x039DF584 ADRP X21, 0xA02000
	0x039DF588 LDRB W8, [X21 + 0xDA7]
	0x039DF58C MOV X19, X1
	0x039DF590 MOV X20, X0
	0x039DF594 TBNZ X8, 0x0, 0x39DF5B8
	0x039DF598 ADRP X0, 0x774000
	0x039DF59C LDR X0, [X0 + 0x320]
	0x039DF5A0 BL 0x1C16CF4
	0x039DF5A4 ADRP X0, 0x774000
	0x039DF5A8 LDR X0, [X0 + 0x328]
	0x039DF5AC BL 0x1C16CF4
	0x039DF5B0 MOVZ W8, 0x1
	0x039DF5B4 STRB W8, [X21 + 0xDA7]
	0x039DF5B8 STRH W31, [X20]
	0x039DF5BC CBZ X19, 0x39DF618
	0x039DF5C0 ADRP X8, 0x774000
	0x039DF5C4 LDR X8, [X8 + 0x320]
	0x039DF5C8 MOV X0, X19
	0x039DF5CC LDR X1, [X8]
	0x039DF5D0 BL 0x21BE3F4
	0x039DF5D4 SUBS W21, W0, 0x1
	0x039DF5D8 B.MI 0x39DF618
	0x039DF5DC ADRP X22, 0x774000
	0x039DF5E0 LDR X22, [X22 + 0x328]
	0x039DF5E4 MOVZ W23, 0x1
	0x039DF5E8 LDR X2, [X22]
	0x039DF5EC MOV X0, X19
	0x039DF5F0 MOV W1, W21
	0x039DF5F4 BL 0x21C0E94
	0x039DF5F8 CMP W0, 0xF
	0x039DF5FC B.HI 0x39DF610
	0x039DF600 LDRH W8, [X20]
	0x039DF604 LSLV W9, W23, W0
	0x039DF608 ORR W8, W8, W9, 0x0
	0x039DF60C STRH W8, [X20]
	0x039DF610 SUBS W21, W21, 0x1
	0x039DF614 B.PL 0x39DF5E8
	0x039DF618 LDP X20, X19, [X31 + 0x20]
	0x039DF61C LDP X22, X21, [X31 + 0x10]
	0x039DF620 LDP X30, X23, [X31], #0x30
	0x039DF624 RET
	0x039DF628 ORN W8, W31, W0, 0x0
	0x039DF62C AND X0, X8, 0xFFFF
	0x039DF630 RET
	0x039DF634 ORR W8, W1, W0, 0x0
	0x039DF638 AND X0, X8, 0xFFFF
	0x039DF63C RET
	0x039DF640 AND W8, W0, W1, 0x0
	0x039DF644 AND X0, X8, 0xFFFF
	0x039DF648 RET
	0x039DF64C SUB X31, X31, 0x30
	0x039DF650 STP X30, X21, [X31 + 0x10]
	0x039DF654 STP X20, X19, [X31 + 0x20]
	0x039DF658 ADRP X21, 0xA02000
	0x039DF65C LDRB W8, [X21 + 0xDA8]
	0x039DF660 MOV X19, X1
	0x039DF664 MOV X20, X0
	0x039DF668 TBNZ X8, 0x0, 0x39DF680
	0x039DF66C ADRP X0, 0x774000
	0x039DF670 LDR X0, [X0 + 0x348]
	0x039DF674 BL 0x1C16CF4
	0x039DF678 MOVZ W8, 0x1
	0x039DF67C STRB W8, [X21 + 0xDA8]
	0x039DF680 CBZ X19, 0x39DF6D8
	0x039DF684 ADRP X21, 0x774000
	0x039DF688 LDR X21, [X21 + 0x348]
	0x039DF68C LDR X8, [X19]
	0x039DF690 LDR X1, [X21]
	0x039DF694 LDR X8, [X8 + 0x40]
	0x039DF698 LDR X9, [X1 + 0x40]
	0x039DF69C CMP X8, X9
	0x039DF6A0 B.NE 0x39DF6DC
	0x039DF6A4 LDRH W20, [X20]
	0x039DF6A8 MOV X0, X19
	0x039DF6AC BL 0x1C16E08
	0x039DF6B0 LDRH W8, [X0]
	0x039DF6B4 LDR X0, [X21]

ISIL:
	001 Move V0, [X1]
	002 Move V1, [X0]
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 Move V0, [X1+4]
	005 Move V1, [X0+4]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V0, [X1+8]
	008 Move V1, [X0+8]
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move V0, [X1+12]
	011 Move V1, [X0+12]
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move V0, [X1+16]
	014 Move V1, [X0+16]
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move V0, [X1+20]
	017 Move V1, [X0+20]
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move V0, [X1+24]
	020 Move V1, [X0+24]
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move V0, [X1+28]
	023 Move V1, [X0+28]
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move V0, [X1+32]
	026 Move V1, [X0+32]
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move V0, [X1+36]
	029 Move V1, [X0+36]
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move V0, [X1+40]
	032 Move V1, [X0+40]
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move V0, [X1+44]
	035 Move V1, [X0+44]
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move V0, [X1+48]
	038 Move V1, [X0+48]
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move V0, [X1+52]
	041 Move V1, [X0+52]
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move V0, [X1+56]
	044 Move V1, [X0+56]
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move V0, [X1+60]
	047 Move V1, [X0+60]
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Move V0, [X1+64]
	050 Move V1, [X0+64]
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move V0, [X1+68]
	053 Move V1, [X0+68]
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move V0, [X1+72]
	056 Move V1, [X0+72]
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move V0, [X1+76]
	059 Move V1, [X0+76]
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move V0, [X1+80]
	062 Move V1, [X0+80]
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move V0, [X1+84]
	065 Move V1, [X0+84]
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move V0, [X1+88]
	068 Move V1, [X0+88]
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move V0, [X1+92]
	071 Move V1, [X0+92]
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move V0, [X1+96]
	074 Move V1, [X0+96]
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move V0, [X1+100]
	077 Move V1, [X0+100]
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move V0, [X1+104]
	080 Move V1, [X0+104]
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 Move V0, [X1+108]
	083 Move V1, [X0+108]
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move V0, [X1+112]
	086 Move V1, [X0+112]
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move V0, [X1+116]
	089 Move V1, [X0+116]
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move V0, [X1+120]
	092 Move V1, [X0+120]
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move V0, [X1+124]
	095 Move V1, [X0+124]
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Return X0
	099 Move W0, W31
	100 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x039DF6B8 ADD X1, X31, 0x8
	0x039DF6BC AND W8, W8, W20, 0x0
	0x039DF6C0 STRH W8, [X31 + 0x8]
	0x039DF6C4 BL 0x1C16E04
	0x039DF6C8 LDP X20, X19, [X31 + 0x20]
	0x039DF6CC LDP X30, X21, [X31 + 0x10]
	0x039DF6D0 ADD X31, X31, 0x30
	0x039DF6D4 RET
	0x039DF6D8 BL 0x1C16F20
	0x039DF6DC MOV X0, X19
	0x039DF6E0 BL 0x1C171E0
	0x039DF6E4 SUB X31, X31, 0x30
	0x039DF6E8 STP X30, X21, [X31 + 0x10]
	0x039DF6EC STP X20, X19, [X31 + 0x20]
	0x039DF6F0 ADRP X21, 0xA02000
	0x039DF6F4 LDRB W8, [X21 + 0xDA9]
	0x039DF6F8 MOV X19, X1
	0x039DF6FC MOV X20, X0
	0x039DF700 TBNZ X8, 0x0, 0x39DF718
	0x039DF704 ADRP X0, 0x774000
	0x039DF708 LDR X0, [X0 + 0x348]
	0x039DF70C BL 0x1C16CF4
	0x039DF710 MOVZ W8, 0x1
	0x039DF714 STRB W8, [X21 + 0xDA9]
	0x039DF718 CBZ X19, 0x39DF770
	0x039DF71C ADRP X21, 0x774000
	0x039DF720 LDR X21, [X21 + 0x348]
	0x039DF724 LDR X8, [X19]
	0x039DF728 LDR X1, [X21]
	0x039DF72C LDR X8, [X8 + 0x40]
	0x039DF730 LDR X9, [X1 + 0x40]
	0x039DF734 CMP X8, X9
	0x039DF738 B.NE 0x39DF774
	0x039DF73C LDRH W20, [X20]
	0x039DF740 MOV X0, X19
	0x039DF744 BL 0x1C16E08

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0xA03000
	007 Move W8, [X21+3480]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x775000
	015 Move X0, [X0+744]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3480], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x775000
	022 Move X8, [X8+744]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move X1, X0
	030 Add X0, X31, 0
	031 Move W2, 128
	032 Call 0x3EB2B30
	033 Add X1, X31, 0
	034 Move X0, X19
	035 Call SHCoefficients.Equals, X0, X1
	036 Move X20, [X31+144]
	037 Move X19, [X31+152]
	038 Move X30, [X31+128]
	039 Move X21, [X31+136]
	040 And W0, W0, 1
	041 Add X31, X31, 160
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x039DF748 LDRH W8, [X0]
	0x039DF74C LDR X0, [X21]
	0x039DF750 ADD X1, X31, 0x8
	0x039DF754 ORR W8, W8, W20, 0x0
	0x039DF758 STRH W8, [X31 + 0x8]
	0x039DF75C BL 0x1C16E04
	0x039DF760 LDP X20, X19, [X31 + 0x20]
	0x039DF764 LDP X30, X21, [X31 + 0x10]
	0x039DF768 ADD X31, X31, 0x30
	0x039DF76C RET
	0x039DF770 BL 0x1C16F20
	0x039DF774 MOV X0, X19
	0x039DF778 BL 0x1C171E0
	0x039DF77C SUB X31, X31, 0x30
	0x039DF780 STP X30, X21, [X31 + 0x10]
	0x039DF784 STP X20, X19, [X31 + 0x20]
	0x039DF788 ADRP X21, 0xA02000
	0x039DF78C ADRP X20, 0x774000
	0x039DF790 LDRB W8, [X21 + 0xDAA]
	0x039DF794 LDR X20, [X20 + 0x348]
	0x039DF798 MOV X19, X0
	0x039DF79C TBNZ X8, 0x0, 0x39DF7B4
	0x039DF7A0 ADRP X0, 0x774000
	0x039DF7A4 LDR X0, [X0 + 0x348]
	0x039DF7A8 BL 0x1C16CF4
	0x039DF7AC MOVZ W8, 0x1
	0x039DF7B0 STRB W8, [X21 + 0xDAA]
	0x039DF7B4 LDRH W8, [X19]
	0x039DF7B8 LDR X0, [X20]
	0x039DF7BC ADD X1, X31, 0x8
	0x039DF7C0 ORN W8, W31, W8, 0x0
	0x039DF7C4 STRH W8, [X31 + 0x8]
	0x039DF7C8 BL 0x1C16E04
	0x039DF7CC LDP X20, X19, [X31 + 0x20]
	0x039DF7D0 LDP X30, X21, [X31 + 0x10]
	0x039DF7D4 ADD X31, X31, 0x30
	0x039DF7D8 RET
	0x039DF7DC EOR W8, W1, W0, 0x0
	0x039DF7E0 ANDS X31, X8, 0xFFFF
	0x039DF7E4 CSET W0, EQ
	0x039DF7E8 RET
	0x039DF7EC EOR W8, W1, W0, 0x0
	0x039DF7F0 ANDS X31, X8, 0xFFFF
	0x039DF7F4 CSET W0, NE
	0x039DF7F8 RET
	0x039DF7FC STP X30, X21, [X31 - 0x20]!
	0x039DF800 STP X20, X19, [X31 + 0x10]
	0x039DF804 ADRP X21, 0xA02000
	0x039DF808 LDRB W8, [X21 + 0xDAB]
	0x039DF80C MOV X20, X1
	0x039DF810 MOV X19, X0
	0x039DF814 TBNZ X8, 0x0, 0x39DF82C
	0x039DF818 ADRP X0, 0x774000
	0x039DF81C LDR X0, [X0 + 0x348]
	0x039DF820 BL 0x1C16CF4
	0x039DF824 MOVZ W8, 0x1
	0x039DF828 STRB W8, [X21 + 0xDAB]
	0x039DF82C CBZ X20, 0x39DF848
	0x039DF830 ADRP X8, 0x774000
	0x039DF834 LDR X8, [X8 + 0x348]
	0x039DF838 LDR X9, [X20]
	0x039DF83C LDR X8, [X8]
	0x039DF840 CMP X9, X8
	0x039DF844 B.EQ 0x39DF850
	0x039DF848 MOV W0, W31
	0x039DF84C B 0x39DF868
	0x039DF850 MOV X0, X20
	0x039DF854 BL 0x1C16E08
	0x039DF858 LDRH W8, [X0]
	0x039DF85C LDRH W9, [X19]
	0x039DF860 CMP W8, W9
	0x039DF864 CSET W0, EQ
	0x039DF868 LDP X20, X19, [X31 + 0x10]
	0x039DF86C LDP X30, X21, [X31], #0x20
	0x039DF870 RET
	0x039DF874 STR X30, [X31 - 0x10]!
	0x039DF878 MOV X1, X31
	0x039DF87C BL 0x3398CDC
	0x039DF880 MOVZ W8, 0x156D
	0x039DF884 MOVK W8, 0x69700000
	0x039DF888 ADD W0, W0, W8
	0x039DF88C LDR X30, [X31], #0x10
	0x039DF890 RET
	0x039DF894 MOVZ W0, 0x20
	0x039DF898 RET
	0x039DF89C LDR W8, [X0]
	0x039DF8A0 CMP W8, 0x0
	0x039DF8A4 CSET W0, EQ
	0x039DF8A8 RET
	0x039DF8AC LDR W8, [X0]
	0x039DF8B0 ADDS W31, W8, 0x1
	0x039DF8B4 CSET W0, EQ
	0x039DF8B8 RET

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+192], D15
	003 Move [X31+200], D14
	004 Move [X31+208], D13
	005 Move [X31+216], D12
	006 Move [X31+224], D11
	007 Move [X31+232], D10
	008 Move [X31+240], D9
	009 Move [X31+248], D8
	010 Move [X31+256], X29
	011 Move [X31+272], X30
	012 Move [X31+280], X21
	013 Move [X31+288], X20
	014 Move [X31+296], X19
	015 Move X21, 0xA03000
	016 Move X20, 0x73D000
	017 Move W8, [X21+3481]
	018 Move X20, [X20+2832]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x775000
	025 Move X0, [X0+752]
	026 Call 0x1C17CF4
	027 Move X0, 0x73D000
	028 Move X0, [X0+2832]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3481], W8
	032 Move X0, [X20]
	033 Move S0, [X19]
	034 Move S1, [X19+4]
	035 Move S2, [X19+8]
	036 Move S3, [X19+12]
	037 Move S4, [X19+16]
	038 Move S5, [X19+20]
	039 Move S6, [X19+24]
	040 Move S7, [X19+28]
	041 Move S16, [X19+32]
	042 Move S17, [X19+36]
	043 Move S18, [X19+40]
	044 Move S19, [X19+44]
	045 Move S20, [X19+48]
	046 Move S21, [X19+52]
	047 Move S22, [X19+56]
	048 Move S23, [X19+60]
	049 Move S24, [X19+64]
	050 Move S25, [X19+68]
	051 Move S26, [X19+72]
	052 Move S27, [X19+76]
	053 Move S28, [X19+80]
	054 Move S29, [X19+84]
	055 Move S30, [X19+88]
	056 Move S31, [X19+92]
	057 Move S8, [X19+96]
	058 Move S9, [X19+100]
	059 Move S10, [X19+104]
	060 Move S11, [X19+108]
	061 Move S12, [X19+112]
	062 Move S13, [X19+116]
	063 Move S14, [X19+120]
	064 Move S15, [X19+124]
	065 Move X19, 0x775000
	066 Move W8, [X0+224]
	067 Move X19, [X19+752]
	068 Compare W8, 0
	069 JumpIfNotEqual {119}
	070 Move [X31+268], S0
	071 Move [X31+264], S1
	072 Move [X31+184], S3
	073 Move [X31+192], S2
	074 Move [X31+176], S5
	075 Move [X31+184], S4
	076 Move [X31+168], S7
	077 Move [X31+176], S6
	078 Move [X31+160], S17
	079 Move [X31+168], S16
	080 Move [X31+152], S19
	081 Move [X31+160], S18
	082 Move [X31+144], S21
	083 Move [X31+152], S20
	084 Move [X31+136], S23
	085 Move [X31+144], S22
	086 Move [X31+128], S25
	087 Move [X31+136], S24
	088 Move [X31+120], S27
	089 Move [X31+128], S26
	090 Move [X31+112], S29
	091 Move [X31+120], S28
	092 Move [X31+104], S31
	093 Move [X31+112], S30
	094 Call 0x1C17DFC
	095 Move S31, [X31+104]
	096 Move S30, [X31+108]
	097 Move S29, [X31+112]
	098 Move S28, [X31+116]
	099 Move S27, [X31+120]
	100 Move S26, [X31+124]
	101 Move S25, [X31+128]
	102 Move S24, [X31+132]
	103 Move S23, [X31+136]
	104 Move S22, [X31+140]
	105 Move S21, [X31+144]
	106 Move S20, [X31+148]
	107 Move S19, [X31+152]
	108 Move S18, [X31+156]
	109 Move S17, [X31+160]
	110 Move S16, [X31+164]
	111 Move S7, [X31+168]
	112 Move S6, [X31+172]
	113 Move S5, [X31+176]
	114 Move S4, [X31+180]
	115 Move S3, [X31+184]
	116 Move S2, [X31+188]
	117 Move V1, [X31+264]
	118 Move V0, [X31+268]
	119 Move X0, [X19]
	120 Move [X31+88], S14
	121 Move [X31+96], S15
	122 Move [X31+80], S12
	123 Move [X31+88], S13
	124 Move [X31+72], S10
	125 Move [X31+80], S11
	126 Move [X31+64], S8
	127 Move [X31+72], S9
	128 Move [X31+56], S30
	129 Move [X31+64], S31
	130 Move [X31+48], S28
	131 Move [X31+56], S29
	132 Move [X31+40], S26
	133 Move [X31+48], S27
	134 Move [X31+32], S24
	135 Move [X31+40], S25
	136 Move [X31+24], S22
	137 Move [X31+32], S23
	138 Move [X31+16], S20
	139 Move [X31+24], S21
	140 Move [X31+8], S18
	141 Move [X31+16], S19
	142 Move [X31], S16
	143 Move [X31+8], S17
	144 Call 0x21EAA90, X0, X1, X2, X3, X4, X5, X6, X7
	145 Move X20, [X31+288]
	146 Move X19, [X31+296]
	147 Move X30, [X31+272]
	148 Move X21, [X31+280]
	149 Move X29, [X31+256]
	150 Move D9, [X31+240]
	151 Move D8, [X31+248]
	152 Move D11, [X31+224]
	153 Move D10, [X31+232]
	154 Move D13, [X31+208]
	155 Move D12, [X31+216]
	156 Move D15, [X31+192]
	157 Move D14, [X31+200]
	158 Add X31, X31, 304
	159 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.SHCoefficients left, UnityEngine.Rendering.SHCoefficients right)

Disassembly:
	0x039DF8BC STP X30, X21, [X31 - 0x20]!
	0x039DF8C0 STP X20, X19, [X31 + 0x10]
	0x039DF8C4 ADRP X21, 0xA02000
	0x039DF8C8 ADRP X20, 0x71D000
	0x039DF8CC LDRB W8, [X21 + 0xDAC]
	0x039DF8D0 LDR X20, [X20 + 0x9E8]
	0x039DF8D4 MOV X19, X0
	0x039DF8D8 TBNZ X8, 0x0, 0x39DF8F0
	0x039DF8DC ADRP X0, 0x71D000
	0x039DF8E0 LDR X0, [X0 + 0x9E8]
	0x039DF8E4 BL 0x1C16CF4
	0x039DF8E8 MOVZ W8, 0x1
	0x039DF8EC STRB W8, [X21 + 0xDAC]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move X19, X0
	005 Add X0, X31, 0
	006 Move W2, 128
	007 Call 0x3EB2AC0
	008 Add X1, X31, 0
	009 Move X0, X19
	010 Call SHCoefficients.Equals, X0, X1
	011 Move X30, [X31+128]
	012 Move X19, [X31+136]
	013 And W0, W0, 1
	014 Add X31, X31, 144
	015 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Rendering.SHCoefficients left, UnityEngine.Rendering.SHCoefficients right)

Disassembly:
	0x039DF8F0 LDR X0, [X20]
	0x039DF8F4 LDR W19, [X19]
	0x039DF8F8 LDR W8, [X0 + 0xE0]
	0x039DF8FC CBNZ W8, 0x39DF904
	0x039DF900 BL 0x1C16DFC
	0x039DF904 MOV X0, X19
	0x039DF908 LDP X20, X19, [X31 + 0x10]
	0x039DF90C MOVZ W1, 0x2
	0x039DF910 MOV X2, X31
	0x039DF914 LDP X30, X21, [X31], #0x20
	0x039DF918 B 0x3322520
	0x039DF91C SUB X31, X31, 0x40
	0x039DF920 STP X30, X23, [X31 + 0x10]
	0x039DF924 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move X19, X0
	005 Add X0, X31, 0
	006 Move W2, 128
	007 Call 0x3EB2AC0
	008 Add X1, X31, 0
	009 Move X0, X19
	010 Call SHCoefficients.Equals, X0, X1
	011 Move X30, [X31+128]
	012 Move X19, [X31+136]
	013 NotImplemented "Instruction ORN not yet implemented."
	014 And W0, W8, 1
	015 Add X31, X31, 144
	016 Return X0

