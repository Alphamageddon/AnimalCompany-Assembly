Type: UnityEngine.Rendering.DebugUI/Field`1

Method: System.Func`1<T> get_getter()

Disassembly:
	0x02D1A730 STP S0, S1, [X31 + 0x8]
	0x02D1A734 LDR X8, [X19 + 0x20]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_getter(System.Func`1<T> value)

Disassembly:
	0x02D1A738 ADD X1, X31, 0x8
	0x02D1A73C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Action`1<T> get_setter()

Disassembly:
	0x02D1A740 LDR X0, [X8 + 0x18]
	0x02D1A744 BL 0x1C16E04

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_setter(System.Action`1<T> value)

Disassembly:
	0x02D1A748 LDP X20, X19, [X31 + 0x20]
	0x02D1A74C LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Object UnityEngine.Rendering.DebugUI.IValueField.ValidateValue(System.Object value)

Disassembly:
	0x02D1A750 ADD X31, X31, 0x30
	0x02D1A754 RET
	0x02D1A758 BL 0x1C16F20
	0x02D1A75C BL 0x1C171E0
	0x02D1A760 RET
	0x02D1A764 SUB X31, X31, 0x20
	0x02D1A768 STP X30, X19, [X31 + 0x10]
	0x02D1A76C LDR X8, [X0 + 0x48]
	0x02D1A770 CBZ X8, 0x2D1A7AC
	0x02D1A774 MOV X19, X1
	0x02D1A778 LDR X9, [X8 + 0x18]
	0x02D1A77C LDR X0, [X8 + 0x40]
	0x02D1A780 LDR X1, [X8 + 0x28]
	0x02D1A784 BLR X9
	0x02D1A788 STP S0, S1, [X31 + 0x8]
	0x02D1A78C LDR X8, [X19 + 0x20]
	0x02D1A790 ADD X1, X31, 0x8
	0x02D1A794 LDR X8, [X8 + 0xC0]
	0x02D1A798 LDR X0, [X8 + 0x18]
	0x02D1A79C BL 0x1C16E04
	0x02D1A7A0 LDP X30, X19, [X31 + 0x10]
	0x02D1A7A4 ADD X31, X31, 0x20
	0x02D1A7A8 RET
	0x02D1A7AC BL 0x1C16F20
	0x02D1A7B0 STR X30, [X31 - 0x10]!
	0x02D1A7B4 LDR X8, [X0 + 0x48]
	0x02D1A7B8 CBZ X8, 0x2D1A7D0
	0x02D1A7BC LDR X2, [X8 + 0x18]
	0x02D1A7C0 LDR X0, [X8 + 0x40]
	0x02D1A7C4 LDR X1, [X8 + 0x28]
	0x02D1A7C8 LDR X30, [X31], #0x10
	0x02D1A7CC BR X2
	0x02D1A7D0 BL 0x1C16F20
	0x02D1A7D4 STR X30, [X31 - 0x20]!
	0x02D1A7D8 STP X20, X19, [X31 + 0x10]
	0x02D1A7DC LDR X8, [X2 + 0x20]
	0x02D1A7E0 MOV X20, X1
	0x02D1A7E4 MOV X19, X0
	0x02D1A7E8 LDR X8, [X8 + 0xC0]
	0x02D1A7EC LDR X1, [X8 + 0x18]
	0x02D1A7F0 LDRB W8, [X1 + 0x135]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X1
	008 Move X19, X2
	009 Move X20, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+24]
	012 Move W8, [X1+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X1
	018 Call 0x1C5D684
	019 Move X1, X0
	020 Compare X21, 0
	021 JumpIfEqual {47}
	022 Move X8, [X21]
	023 Move X9, [X1+64]
	024 Move X0, X21
	025 Move X8, [X8+64]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Call 0x1C17E08
	028 Move X8, [X20]
	029 Move W1, [X0]
	030 Move X0, X20
	031 Move X9, [X8+552]
	032 Move X2, [X8+560]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 And W8, W0, 1
	035 Move [X31+12], W8
	036 Move X8, [X19+32]
	037 Add X1, X31, 12
	038 Move X8, [X8+192]
	039 Move X0, [X8+24]
	040 Call 0x1C17E04
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Add X31, X31, 48
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C181E0

Method: T ValidateValue(T value)

Disassembly:
	0x02D1A7F4 TBNZ X8, 0x0, 0x2D1A804
	0x02D1A7F8 MOV X0, X1

ISIL:
	001 And W0, W1, 1
	002 Return X0

Method: System.Object UnityEngine.Rendering.DebugUI.IValueField.GetValue()

Disassembly:
	0x02D1A7FC BL 0x1C5C684
	0x02D1A800 MOV X1, X0
	0x02D1A804 CBZ X20, 0x2D1A844
	0x02D1A808 LDR X8, [X20]
	0x02D1A80C LDR X9, [X1 + 0x40]
	0x02D1A810 MOV X0, X20
	0x02D1A814 LDR X8, [X8 + 0x40]
	0x02D1A818 CMP X8, X9
	0x02D1A81C B.NE 0x2D1A848
	0x02D1A820 BL 0x1C16E08
	0x02D1A824 LDR X8, [X19]
	0x02D1A828 LDP S0, S1, [X0]
	0x02D1A82C MOV X0, X19
	0x02D1A830 LDP X20, X19, [X31 + 0x10]
	0x02D1A834 LDR X2, [X8 + 0x238]
	0x02D1A838 LDR X1, [X8 + 0x240]
	0x02D1A83C LDR X30, [X31], #0x20
	0x02D1A840 BR X2
	0x02D1A844 BL 0x1C16F20
	0x02D1A848 BL 0x1C171E0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0+72]
	005 Compare X8, 0
	006 JumpIfEqual {23}
	007 Move X19, X1
	008 Move X9, [X8+24]
	009 Move X0, [X8+64]
	010 Move X1, [X8+40]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 And W8, W0, 1
	013 Move [X31+12], W8
	014 Move X8, [X19+32]
	015 Add X1, X31, 12
	016 Move X8, [X8+192]
	017 Move X0, [X8+24]
	018 Call 0x1C17E04
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Add X31, X31, 32
	022 Return X0
	023 Call 0x1C17F20

Method: T GetValue()

Disassembly:
	0x02D1A84C SUB X31, X31, 0x40
	0x02D1A850 STP D9, D8, [X31 + 0x10]
	0x02D1A854 STP X30, X21, [X31 + 0x20]
	0x02D1A858 STP X20, X19, [X31 + 0x30]
	0x02D1A85C LDR X8, [X0]
	0x02D1A860 MOV X20, X1
	0x02D1A864 MOV X19, X0
	0x02D1A868 LDR X9, [X8 + 0x228]
	0x02D1A86C LDR X1, [X8 + 0x230]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+72]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move X2, [X8+24]
	006 Move X0, [X8+64]
	007 Move X1, [X8+40]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void SetValue(System.Object value)

Disassembly:
	0x02D1A870 BLR X9
	0x02D1A874 LDR X8, [X19 + 0x48]
	0x02D1A878 CBZ X8, 0x2D1A970
	0x02D1A87C LDR X9, [X8 + 0x18]
	0x02D1A880 LDR X0, [X8 + 0x40]
	0x02D1A884 LDR X1, [X8 + 0x28]
	0x02D1A888 MOV V8.16B, V0.16B
	0x02D1A88C MOV V9.16B, V1.16B
	0x02D1A890 BLR X9
	0x02D1A894 STP S0, S1, [X31 + 0x8]
	0x02D1A898 LDR X8, [X20 + 0x20]
	0x02D1A89C ADD X1, X31, 0x8
	0x02D1A8A0 LDR X8, [X8 + 0xC0]
	0x02D1A8A4 LDR X0, [X8 + 0x18]
	0x02D1A8A8 BL 0x1C16E04
	0x02D1A8AC ADRP X21, 0x16BF000
	0x02D1A8B0 LDRB W8, [X21 + 0x820]
	0x02D1A8B4 MOV X20, X0
	0x02D1A8B8 CBZ W8, 0x2D1A8C4
	0x02D1A8BC CBNZ X20, 0x2D1A8DC
	0x02D1A8C0 B 0x2D1A8F4
	0x02D1A8C4 ADRP X0, 0x13E1000
	0x02D1A8C8 LDR X0, [X0 + 0xF08]
	0x02D1A8CC BL 0x1C16CF4
	0x02D1A8D0 MOVZ W8, 0x1
	0x02D1A8D4 STRB W8, [X21 + 0x820]
	0x02D1A8D8 CBZ X20, 0x2D1A8F4
	0x02D1A8DC ADRP X8, 0x13E1000
	0x02D1A8E0 LDR X8, [X8 + 0xF08]
	0x02D1A8E4 LDR X9, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+24]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Compare X19, 0
	018 JumpIfEqual {34}
	019 Move X8, [X19]
	020 Move X9, [X1+64]
	021 Move X0, X19
	022 Move X8, [X8+64]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Call 0x1C17E08
	025 Move X8, [X20]
	026 Move W1, [X0]
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X3, [X8+568]
	031 Move X2, [X8+576]
	032 Move X30, [X31+32]
	033 CallNoReturn X3
	034 Call 0x1C17F20
	035 Call 0x1C181E0

Method: System.Void SetValue(T value)

Disassembly:
	0x02D1A8E8 LDR X8, [X8]
	0x02D1A8EC CMP X9, X8
	0x02D1A8F0 B.EQ 0x2D1A94C
	0x02D1A8F4 LDR X8, [X19 + 0x50]
	0x02D1A8F8 CBZ X8, 0x2D1A970
	0x02D1A8FC LDR X9, [X8 + 0x18]
	0x02D1A900 LDR X0, [X8 + 0x40]
	0x02D1A904 LDR X1, [X8 + 0x28]
	0x02D1A908 MOV V0.16B, V8.16B
	0x02D1A90C MOV V1.16B, V9.16B
	0x02D1A910 BLR X9
	0x02D1A914 LDR X8, [X19 + 0x58]
	0x02D1A918 CBZ X8, 0x2D1A938
	0x02D1A91C LDR X9, [X8 + 0x18]
	0x02D1A920 LDR X0, [X8 + 0x40]
	0x02D1A924 LDR X2, [X8 + 0x28]
	0x02D1A928 MOV X1, X19
	0x02D1A92C MOV V0.16B, V8.16B
	0x02D1A930 MOV V1.16B, V9.16B
	0x02D1A934 BLR X9
	0x02D1A938 LDP X20, X19, [X31 + 0x30]
	0x02D1A93C LDP X30, X21, [X31 + 0x20]
	0x02D1A940 LDP D9, D8, [X31 + 0x10]
	0x02D1A944 ADD X31, X31, 0x40
	0x02D1A948 RET
	0x02D1A94C MOV X0, X20
	0x02D1A950 BL 0x1C16E08
	0x02D1A954 LDR V0, [X0]
	0x02D1A958 FCMP S8, S0
	0x02D1A95C B.NE 0x2D1A8F4
	0x02D1A960 LDR V0, [X0 + 0x4]
	0x02D1A964 FCMP S9, S0
	0x02D1A968 B.EQ 0x2D1A938
	0x02D1A96C B 0x2D1A8F4
	0x02D1A970 BL 0x1C16F20
	0x02D1A974 MOV X1, X31
	0x02D1A978 B 0x39ADE04
	0x02D1A97C LDR X0, [X0 + 0x48]
	0x02D1A980 RET
	0x02D1A984 STR X1, [X0 + 0x48]
	0x02D1A988 RET
	0x02D1A98C LDR X0, [X0 + 0x50]
	0x02D1A990 RET
	0x02D1A994 STR X1, [X0 + 0x50]
	0x02D1A998 RET
	0x02D1A99C SUB X31, X31, 0x30
	0x02D1A9A0 STP X30, X21, [X31 + 0x10]
	0x02D1A9A4 STP X20, X19, [X31 + 0x20]
	0x02D1A9A8 LDR X8, [X2 + 0x20]
	0x02D1A9AC MOV X21, X1
	0x02D1A9B0 MOV X19, X2
	0x02D1A9B4 MOV X20, X0
	0x02D1A9B8 LDR X8, [X8 + 0xC0]
	0x02D1A9BC LDR X1, [X8 + 0x18]
	0x02D1A9C0 LDRB W8, [X1 + 0x135]
	0x02D1A9C4 TBNZ X8, 0x0, 0x2D1A9D4
	0x02D1A9C8 MOV X0, X1
	0x02D1A9CC BL 0x1C5C684
	0x02D1A9D0 MOV X1, X0
	0x02D1A9D4 CBZ X21, 0x2D1AA3C
	0x02D1A9D8 LDR X8, [X21]
	0x02D1A9DC LDR X9, [X1 + 0x40]
	0x02D1A9E0 MOV X0, X21
	0x02D1A9E4 LDR X8, [X8 + 0x40]
	0x02D1A9E8 CMP X8, X9
	0x02D1A9EC B.NE 0x2D1AA40
	0x02D1A9F0 BL 0x1C16E08
	0x02D1A9F4 LDR X8, [X20]
	0x02D1A9F8 LDP S0, S1, [X0]
	0x02D1A9FC LDR V2, [X0 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x16C2000
	007 Move W8, [X22+1991]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x13DA000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1991], W8
	020 Move X8, [X19]
	021 And W1, W21, 1
	022 Move X0, X19
	023 Move X9, [X8+552]
	024 Move X2, [X8+560]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 And W8, W0, 1
	027 Move [X31+12], W8
	028 Move X8, [X19+72]
	029 Compare X8, 0
	030 JumpIfEqual {84}
	031 Move X9, [X8+24]
	032 Move X0, [X8+64]
	033 Move X1, [X8+40]
	034 Move X21, 0x13DA000
	035 Move X21, [X21+2904]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 And W8, W0, 1
	038 Move [X31+8], W8
	039 Move X8, [X20+32]
	040 Add X1, X31, 8
	041 Move X8, [X8+192]
	042 Move X0, [X8+24]
	043 Call 0x1C17E04
	044 Move X8, [X21]
	045 Move X21, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X8, [X20+32]
	052 Add X0, X31, 12
	053 Move X1, X21
	054 Move X8, [X8+192]
	055 Move X2, [X8+72]
	056 Call Boolean.Equals, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {78}
	061 Move X8, [X19+80]
	062 Compare X8, 0
	063 JumpIfEqual {84}
	064 Move W1, [X31+12]
	065 Move X9, [X8+24]
	066 Move X0, [X8+64]
	067 Move X2, [X8+40]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X19+88]
	070 Compare X8, 0
	071 JumpIfEqual {78}
	072 Move W2, [X31+12]
	073 Move X9, [X8+24]
	074 Move X0, [X8+64]
	075 Move X3, [X8+40]
	076 Move X1, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 
	084 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02D1AA00 MOV X0, X20
	0x02D1AA04 LDR X9, [X8 + 0x228]

ISIL:
	001 Move X1, X31
	002 Call Widget..ctor, X0
	003 Return 

