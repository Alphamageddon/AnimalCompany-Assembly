Type: UnityEngine.Rendering.ConstantBufferSingleton`1

Method: UnityEngine.Rendering.ConstantBufferSingleton`1<CBType> get_instance()

Disassembly:
	0x0299C378 SUB X31, X31, 0x130
	0x0299C37C STR X29, [X31 + 0x100]
	0x0299C380 STP X30, X21, [X31 + 0x110]
	0x0299C384 STP X20, X19, [X31 + 0x120]
	0x0299C388 LDR X21, [X0 + 0x18]
	0x0299C38C MOV X8, X2
	0x0299C390 MOV X20, X0
	0x0299C394 MOV X19, X1
	0x0299C398 ADD X0, X31, 0x80
	0x0299C39C MOVZ W2, 0x80
	0x0299C3A0 MOV X1, X8
	0x0299C3A4 BL 0x3EB1AC0
	0x0299C3A8 CBZ X21, 0x299C3F8
	0x0299C3AC ADD X0, X31, 0x0
	0x0299C3B0 ADD X1, X31, 0x80
	0x0299C3B4 MOVZ W2, 0x80
	0x0299C3B8 BL 0x3EB1AC0
	0x0299C3BC LDR W8, [X21 + 0x18]
	0x0299C3C0 CBZ W8, 0x299C3FC
	0x0299C3C4 ADD X0, X21, 0x20
	0x0299C3C8 ADD X1, X31, 0x0
	0x0299C3CC MOVZ W2, 0x80
	0x0299C3D0 BL 0x3EB1AC0
	0x0299C3D4 CBZ X19, 0x299C3F8
	0x0299C3D8 LDP X2, X1, [X20 + 0x18]
	0x0299C3DC MOV X0, X19
	0x0299C3E0 LDP X20, X19, [X31 + 0x120]
	0x0299C3E4 LDP X30, X21, [X31 + 0x110]
	0x0299C3E8 LDR X29, [X31 + 0x100]
	0x0299C3EC MOV X3, X31
	0x0299C3F0 ADD X31, X31, 0x130
	0x0299C3F4 B 0x3C4E6DC
	0x0299C3F8 BL 0x1C16F20
	0x0299C3FC BL 0x1C16F28
	0x0299C400 SUB X31, X31, 0x120
	0x0299C404 STP X29, X30, [X31 + 0x100]
	0x0299C408 STP X20, X19, [X31 + 0x110]
	0x0299C40C LDR X20, [X0 + 0x18]
	0x0299C410 MOV X19, X0
	0x0299C414 ADD X0, X31, 0x80
	0x0299C418 MOVZ W2, 0x80
	0x0299C41C BL 0x3EB1AC0
	0x0299C420 CBZ X20, 0x299C46C
	0x0299C424 ADD X0, X31, 0x0
	0x0299C428 ADD X1, X31, 0x80
	0x0299C42C MOVZ W2, 0x80
	0x0299C430 BL 0x3EB1AC0
	0x0299C434 LDR W8, [X20 + 0x18]
	0x0299C438 CBZ W8, 0x299C470
	0x0299C43C ADD X0, X20, 0x20
	0x0299C440 ADD X1, X31, 0x0
	0x0299C444 MOVZ W2, 0x80
	0x0299C448 BL 0x3EB1AC0
	0x0299C44C LDR X0, [X19 + 0x20]
	0x0299C450 CBZ X0, 0x299C46C
	0x0299C454 LDR X1, [X19 + 0x18]
	0x0299C458 LDP X20, X19, [X31 + 0x110]
	0x0299C45C LDP X29, X30, [X31 + 0x100]
	0x0299C460 MOV X2, X31
	0x0299C464 ADD X31, X31, 0x120
	0x0299C468 B 0x3C3ACC4
	0x0299C46C BL 0x1C16F20
	0x0299C470 BL 0x1C16F28
	0x0299C474 STR X30, [X31 - 0x30]!
	0x0299C478 STP X22, X21, [X31 + 0x10]
	0x0299C47C STP X20, X19, [X31 + 0x20]
	0x0299C480 ADRP X22, 0x1A3E000
	0x0299C484 LDRB W8, [X22 + 0xF1D]
	0x0299C488 MOV W19, W2
	0x0299C48C MOV X20, X1
	0x0299C490 MOV X21, X0
	0x0299C494 TBNZ X8, 0x0, 0x299C4AC
	0x0299C498 ADRP X0, 0x1759000
	0x0299C49C LDR X0, [X0 + 0x9D8]
	0x0299C4A0 BL 0x1C16CF4
	0x0299C4A4 MOVZ W8, 0x1
	0x0299C4A8 STRB W8, [X22 + 0xF1D]
	0x0299C4AC LDR X0, [X21 + 0x10]
	0x0299C4B0 CBZ X0, 0x299C508
	0x0299C4B4 ADRP X8, 0x1759000
	0x0299C4B8 LDR X8, [X8 + 0x9D8]
	0x0299C4BC MOV W1, W19
	0x0299C4C0 LDR X2, [X8]
	0x0299C4C4 BL 0x2DAB03C
	0x0299C4C8 LDR X21, [X21 + 0x20]
	0x0299C4CC CBZ X21, 0x299C508
	0x0299C4D0 MOV X0, X21
	0x0299C4D4 MOV X1, X31
	0x0299C4D8 BL 0x3C3AC88
	0x0299C4DC CBZ X20, 0x299C508
	0x0299C4E0 MOV W4, W0
	0x0299C4E4 MOV X0, X20
	0x0299C4E8 MOV X1, X21
	0x0299C4EC MOV W2, W19
	0x0299C4F0 LDP X20, X19, [X31 + 0x20]
	0x0299C4F4 LDP X22, X21, [X31 + 0x10]
	0x0299C4F8 MOV W3, W31
	0x0299C4FC MOV X5, X31
	0x0299C500 LDR X30, [X31], #0x30
	0x0299C504 B 0x3C4FDA8
	0x0299C508 BL 0x1C16F20
	0x0299C50C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1A3F000
	005 Move W8, [X20+3862]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1783000
	012 Move X0, [X0+1392]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3862], W8
	016 Move X0, [X19+32]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+192]
	024 Move X0, [X8+8]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+184]
	032 Move X8, [X8]
	033 Compare X8, 0
	034 JumpIfNotEqual {128}
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Call 0x1C17F10
	051 Move X8, [X19+32]
	052 Move X20, X0
	053 Move W9, [X8+309]
	054 Move TEMP, X9
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {61}
	058 Move X0, X8
	059 Call 0x1C5D684
	060 Move X8, X0
	061 Move X8, [X8+192]
	062 Move X0, X20
	063 Move X8, [X8+24]
	064 Move X8, [X8+32]
	065 Move X8, [X8+192]
	066 Move X1, [X8+40]
	067 Call 0x299D298, X0
	068 Move X0, [X19+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Move X0, [X8+8]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+184]
	084 Move [X8], X20
	085 Move X0, [X19+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X8, [X0+192]
	093 Move X0, [X8+8]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move X0, [X19+32]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+192]
	108 Move X0, [X8+8]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move X8, 0x1783000
	116 Move X8, [X8+1392]
	117 Move X9, [X0+184]
	118 Move X8, [X8]
	119 Move X20, [X9]
	120 Move W10, [X8+224]
	121 Compare W10, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X31
	127 Call ConstantBuffer.Register, X0
	128 Move X0, [X19+32]
	129 Move W8, [X0+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {135}
	134 Call 0x1C5D684
	135 Move X8, [X0+192]
	136 Move X0, [X8+8]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move X8, [X0+184]
	144 Move X20, [X31+16]
	145 Move X19, [X31+24]
	146 Move X0, [X8]
	147 Move X30, [X31+32]
	148 Return X0

Method: System.Void set_instance(UnityEngine.Rendering.ConstantBufferSingleton`1<CBType> value)

Disassembly:
	0x0299C510 STP X20, X19, [X31 + 0x10]
	0x0299C514 ADRP X21, 0x1A3E000
	0x0299C518 LDRB W8, [X21 + 0xF1E]
	0x0299C51C MOV W19, W1
	0x0299C520 MOV X20, X0
	0x0299C524 TBNZ X8, 0x0, 0x299C53C
	0x0299C528 ADRP X0, 0x1759000
	0x0299C52C LDR X0, [X0 + 0x9D8]
	0x0299C530 BL 0x1C16CF4
	0x0299C534 MOVZ W8, 0x1
	0x0299C538 STRB W8, [X21 + 0xF1E]
	0x0299C53C LDR X0, [X20 + 0x10]
	0x0299C540 CBZ X0, 0x299C58C
	0x0299C544 ADRP X8, 0x1759000
	0x0299C548 LDR X8, [X8 + 0x9D8]
	0x0299C54C MOV W1, W19
	0x0299C550 LDR X2, [X8]
	0x0299C554 BL 0x2DAB03C
	0x0299C558 LDR X20, [X20 + 0x20]
	0x0299C55C CBZ X20, 0x299C58C
	0x0299C560 MOV X0, X20
	0x0299C564 MOV X1, X31
	0x0299C568 BL 0x3C3AC88
	0x0299C56C MOV W3, W0
	0x0299C570 MOV W0, W19
	0x0299C574 MOV X1, X20
	0x0299C578 LDP X20, X19, [X31 + 0x10]
	0x0299C57C MOV W2, W31
	0x0299C580 MOV X4, X31
	0x0299C584 LDP X30, X21, [X31], #0x20
	0x0299C588 B 0x3C143D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+184]
	024 Move [X8], X20
	025 Move X0, [X19+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Move X0, [X8+8]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {44}
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call 0x1C5D684
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 

Method: System.Void Release()

Disassembly:
	0x0299C58C BL 0x1C16F20
	0x0299C590 STR X30, [X31 - 0x30]!
	0x0299C594 STP X22, X21, [X31 + 0x10]
	0x0299C598 STP X20, X19, [X31 + 0x20]
	0x0299C59C LDR X21, [X0 + 0x20]
	0x0299C5A0 CBZ X21, 0x299C5EC
	0x0299C5A4 MOV X22, X1
	0x0299C5A8 MOV X0, X21
	0x0299C5AC MOV X1, X31
	0x0299C5B0 MOV W19, W3
	0x0299C5B4 MOV X20, X2
	0x0299C5B8 BL 0x3C3AC88
	0x0299C5BC CBZ X22, 0x299C5EC
	0x0299C5C0 MOV W5, W0
	0x0299C5C4 MOV X0, X22
	0x0299C5C8 MOV X1, X20
	0x0299C5CC MOV W2, W19
	0x0299C5D0 MOV X3, X21
	0x0299C5D4 LDP X20, X19, [X31 + 0x20]
	0x0299C5D8 LDP X22, X21, [X31 + 0x10]
	0x0299C5DC MOV W4, W31
	0x0299C5E0 MOV X6, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {33}
	005 Move X19, X1
	006 Call 0x299D6E8, X0
	007 Move X8, [X19+32]
	008 Move X8, [X8+192]
	009 Move X0, [X8+8]
	010 Move W9, [X0+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Call 0x1C5D684
	016 Move X8, [X19+32]
	017 Move X8, [X8+192]
	018 Move X9, [X0+184]
	019 Move [X9], X31
	020 Move X0, [X8+8]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {30}
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Call 0x1C5D684
	029 Return 
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Return 
	033 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0299C5E4 LDR X30, [X31], #0x30
	0x0299C5E8 B 0x3C4ED04
	0x0299C5EC BL 0x1C16F20
	0x0299C5F0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+40]
	004 Call 0x299D298, X0
	005 Return 

