Type: UnityEngine.Rendering.DebugUpdater

Method: System.Void RuntimeInit()

Disassembly:
	0x039B0C90 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Return 

Method: System.Void SetEnabled(System.Boolean enabled)

Disassembly:
	0x039B0C94 LDR X30, [X31], #0x30
	0x039B0C98 B 0x2FDED04
	0x039B0C9C SUB X31, X31, 0x40

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {5}
	005 Call DebugUpdater.DisableRuntime
	006 Return 

Method: System.Void EnableRuntime()

Disassembly:
	0x039B0CA0 STP X30, X21, [X31 + 0x20]
	0x039B0CA4 STP X20, X19, [X31 + 0x30]
	0x039B0CA8 ADRP X21, 0xA31000
	0x039B0CAC LDRB W8, [X21 + 0xC37]
	0x039B0CB0 MOV X20, X1
	0x039B0CB4 MOV X19, X0
	0x039B0CB8 TBNZ X8, 0x0, 0x39B0CD0
	0x039B0CBC ADRP X0, 0x7A1000
	0x039B0CC0 LDR X0, [X0 + 0xD98]
	0x039B0CC4 BL 0x1C16CF4
	0x039B0CC8 MOVZ W8, 0x1
	0x039B0CCC STRB W8, [X21 + 0xC37]
	0x039B0CD0 LDR X8, [X20 + 0x10]
	0x039B0CD4 LDR V0, [X20]
	0x039B0CD8 ADD X0, X31, 0x0
	0x039B0CDC STR X8, [X31 + 0x10]
	0x039B0CE0 STR V0, [X31]
	0x039B0CE4 BL 0x39B0D68
	0x039B0CE8 LDR X8, [X19 + 0x10]
	0x039B0CEC CBZ X8, 0x39B0D64
	0x039B0CF0 ADRP X10, 0x7A1000
	0x039B0CF4 LDR X10, [X10 + 0xD98]
	0x039B0CF8 LDR W11, [X8 + 0x1C]
	0x039B0CFC LDR X9, [X8 + 0x10]
	0x039B0D00 LDR X10, [X10]
	0x039B0D04 ADD W11, W11, 0x1
	0x039B0D08 STR W11, [X8 + 0x1C]
	0x039B0D0C CBZ X9, 0x39B0D64
	0x039B0D10 LDRSW X11, [X8 + 0x18]
	0x039B0D14 LDR W12, [X9 + 0x18]
	0x039B0D18 MOV W1, W0
	0x039B0D1C CMP W11, W12
	0x039B0D20 B.CS 0x39B0D44
	0x039B0D24 LDP X20, X19, [X31 + 0x30]
	0x039B0D28 LDP X30, X21, [X31 + 0x20]
	0x039B0D2C ADD W10, W11, 0x1
	0x039B0D30 ADD X9, X9, X11, 0x2, LSL
	0x039B0D34 STR W10, [X8 + 0x18]
	0x039B0D38 STR W1, [X9 + 0x20]
	0x039B0D3C ADD X31, X31, 0x40
	0x039B0D40 RET
	0x039B0D44 LDR X9, [X10 + 0x20]
	0x039B0D48 LDP X20, X19, [X31 + 0x30]
	0x039B0D4C LDP X30, X21, [X31 + 0x20]
	0x039B0D50 MOV X0, X8
	0x039B0D54 LDR X9, [X9 + 0xC0]
	0x039B0D58 LDR X2, [X9 + 0x70]
	0x039B0D5C ADD X31, X31, 0x40
	0x039B0D60 B 0x2FDF178
	0x039B0D64 BL 0x1C16F20
	0x039B0D68 LDR V2, [X0 + 0x14]
	0x039B0D6C FCMP S2, 0x0
	0x039B0D70 B.EQ 0x39B0DF0
	0x039B0D74 LDR V0, [X0 + 0x8]
	0x039B0D78 FCMP S0, 0x0
	0x039B0D7C B.EQ 0x39B0DF0
	0x039B0D80 ADRP X8, 0xFFFFFFFFFD13A000
	0x039B0D84 LDR V1, [X0 + 0x4]
	0x039B0D88 LDR V3, [X8 + 0x5C]
	0x039B0D8C FMUL S1, S1, S3
	0x039B0D90 FCMP S2, S1
	0x039B0D94 B.LE 0x39B0DAC
	0x039B0D98 FCMP S0, S1
	0x039B0D9C B.PL 0x39B0DAC
	0x039B0DA0 LDR V3, [X0 + 0x10]
	0x039B0DA4 FCMP S3, S1
	0x039B0DA8 B.MI 0x39B0E08
	0x039B0DAC FCMP S2, S1
	0x039B0DB0 B.PL 0x39B0DF8
	0x039B0DB4 FCMP S0, S1
	0x039B0DB8 B.GT 0x39B0E00
	0x039B0DBC LDR V2, [X0 + 0x10]
	0x039B0DC0 FCMP S2, S1
	0x039B0DC4 B.GT 0x39B0E00
	0x039B0DC8 FCMP S2, S1
	0x039B0DCC B.PL 0x39B0DF8
	0x039B0DD0 FCMP S0, S1
	0x039B0DD4 B.PL 0x39B0DF8
	0x039B0DD8 LDR V0, [X0 + 0xC]
	0x039B0DDC FMOV S1, 0.5
	0x039B0DE0 FCMP S0, S1
	0x039B0DE4 B.LE 0x39B0DF8
	0x039B0DE8 MOVZ W0, 0x1
	0x039B0DEC RET
	0x039B0DF0 MOV W0, W31
	0x039B0DF4 RET
	0x039B0DF8 MOVZ W0, 0x4
	0x039B0DFC RET
	0x039B0E00 MOVZ W0, 0x2
	0x039B0E04 RET
	0x039B0E08 MOVZ W0, 0x3
	0x039B0E0C RET
	0x039B0E10 STR D12, [X31 - 0x50]!
	0x039B0E14 STP D11, D10, [X31 + 0x8]
	0x039B0E18 STP D9, D8, [X31 + 0x18]
	0x039B0E1C STR X30, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA32000
	006 Move X21, 0x7A2000
	007 Move X20, 0x744000
	008 Move W8, [X19+3112]
	009 Move X21, [X21+3296]
	010 Move X20, [X20+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x7A1000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A2000
	019 Move X0, [X0+3296]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A2000
	022 Move X0, [X0+3304]
	023 Call 0x1C17CF4
	024 Move X0, 0x744000
	025 Move X0, [X0+2648]
	026 Call 0x1C17CF4
	027 Move X0, 0x744000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x7A2000
	031 Move X0, [X0+3312]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+3112], W8
	035 Move X8, [X21]
	036 Move X0, [X20]
	037 Move X8, [X8+184]
	038 Move W9, [X0+224]
	039 Move X19, [X8]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {56}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Move X8, 0x744000
	057 Move X8, [X8+2648]
	058 Move X0, [X8]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X19, X0
	062 Call GameObject..ctor, X0
	063 Compare X19, 0
	064 JumpIfEqual {115}
	065 Move X8, 0x7A2000
	066 Move X8, [X8+3312]
	067 Move X0, X19
	068 Move X2, X31
	069 Move X1, [X8]
	070 Call Object.set_name, X0, X1
	071 Move X8, 0x7A2000
	072 Move X8, [X8+3304]
	073 Move X0, X19
	074 Move X1, [X8]
	075 Call 0x21E61FC, X0
	076 Move X8, [X21]
	077 Move X8, [X8+184]
	078 Move [X8], X0
	079 Move X8, [X21]
	080 Move X0, X31
	081 Move X8, [X8+184]
	082 Move X21, [X8]
	083 Call Screen.get_orientation
	084 Compare X21, 0
	085 JumpIfEqual {115}
	086 Move [X21+32], W0
	087 Move X0, [X20]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X19
	093 Move X1, X31
	094 Call Object.DontDestroyOnLoad, X0
	095 Move X8, 0x7A1000
	096 Move X8, [X8+1912]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X31
	103 Call DebugManager.get_instance
	104 Compare X0, 0
	105 JumpIfEqual {115}
	106 Move X1, X31
	107 Call DebugManager.EnableInputActions, X0
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X0, X31
	111 Move X30, [X31+32]
	112 Move X21, [X31+40]
	113 Call EnhancedTouchSupport.Enable
	114 Return 
	115 Call 0x1C17F20

Method: System.Void DisableRuntime()

Disassembly:
	0x039B0E20 STP X22, X21, [X31 + 0x30]
	0x039B0E24 STP X20, X19, [X31 + 0x40]
	0x039B0E28 ADRP X20, 0xA31000
	0x039B0E2C LDRB W8, [X20 + 0xC38]
	0x039B0E30 MOV X19, X0
	0x039B0E34 TBNZ X8, 0x0, 0x39B0E58
	0x039B0E38 ADRP X0, 0x7A1000
	0x039B0E3C LDR X0, [X0 + 0xD90]
	0x039B0E40 BL 0x1C16CF4
	0x039B0E44 ADRP X0, 0x7A1000
	0x039B0E48 LDR X0, [X0 + 0xDA0]
	0x039B0E4C BL 0x1C16CF4
	0x039B0E50 MOVZ W8, 0x1
	0x039B0E54 STRB W8, [X20 + 0xC38]
	0x039B0E58 LDR X0, [X19 + 0x10]
	0x039B0E5C CBZ X0, 0x39B0EE4
	0x039B0E60 ADRP X21, 0x7A1000
	0x039B0E64 LDR X21, [X21 + 0xDA0]
	0x039B0E68 ADRP X22, 0xFFFFFFFFFD1E6000
	0x039B0E6C MOV W20, W31
	0x039B0E70 FMOV S8, W31
	0x039B0E74 ADD X22, X22, 0xDC2
	0x039B0E78 FMOV S10, 1
	0x039B0E7C FMOV S9, W31
	0x039B0E80 FMOV S12, W31
	0x039B0E84 FMOV S11, W31
	0x039B0E88 LDR W8, [X0 + 0x18]
	0x039B0E8C CMP W20, W8
	0x039B0E90 B.GE 0x39B0EE8
	0x039B0E94 LDR X2, [X21]
	0x039B0E98 MOV W1, W20
	0x039B0E9C BL 0x2FDEE88
	0x039B0EA0 SUB W8, W0, 0x1
	0x039B0EA4 CMP W8, 0x3
	0x039B0EA8 B.HI 0x39B0ED8
	0x039B0EAC ADR X9, 0x10
	0x039B0EB0 LDRB W10, [X22, X8, LSL]
	0x039B0EB4 ADD X9, X9, X10, 0x2, LSL
	0x039B0EB8 BR X9
	0x039B0EBC FADD S11, S11, S10
	0x039B0EC0 B 0x39B0ED8
	0x039B0EC4 FADD S12, S12, S10
	0x039B0EC8 B 0x39B0ED8
	0x039B0ECC FADD S9, S9, S10
	0x039B0ED0 B 0x39B0ED8
	0x039B0ED4 FADD S8, S8, S10
	0x039B0ED8 LDR X0, [X19 + 0x10]
	0x039B0EDC ADD W20, W20, 0x1
	0x039B0EE0 CBNZ X0, 0x39B0E88
	0x039B0EE4 BL 0x1C16F20
	0x039B0EE8 SCVTF S0, W8
	0x039B0EEC FDIV S1, S8, S0
	0x039B0EF0 FDIV S2, S12, S0
	0x039B0EF4 FDIV S3, S9, S0
	0x039B0EF8 FDIV S0, S11, S0
	0x039B0EFC STP S0, S2, [X19 + 0x18]
	0x039B0F00 STP S3, S1, [X19 + 0x20]
	0x039B0F04 LDP X20, X19, [X31 + 0x40]
	0x039B0F08 LDP X22, X21, [X31 + 0x30]
	0x039B0F0C LDR X30, [X31 + 0x28]
	0x039B0F10 LDP D9, D8, [X31 + 0x18]
	0x039B0F14 LDP D11, D10, [X31 + 0x8]
	0x039B0F18 LDR V12, [X31], #0x50
	0x039B0F1C RET
	0x039B0F20 STR X30, [X31 - 0x20]!
	0x039B0F24 STP X20, X19, [X31 + 0x10]
	0x039B0F28 ADRP X20, 0xA31000
	0x039B0F2C LDRB W8, [X20 + 0xC39]
	0x039B0F30 MOV X19, X0
	0x039B0F34 TBNZ X8, 0x0, 0x39B0F4C
	0x039B0F38 ADRP X0, 0x7A1000
	0x039B0F3C LDR X0, [X0 + 0xDA8]
	0x039B0F40 BL 0x1C16CF4
	0x039B0F44 MOVZ W8, 0x1
	0x039B0F48 STRB W8, [X20 + 0xC39]
	0x039B0F4C LDR X8, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA32000
	006 Move X20, 0x7A1000
	007 Move W8, [X19+3113]
	008 Move X20, [X20+1912]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x76C000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x7A1000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move X0, 0x7A2000
	020 Move X0, [X0+3296]
	021 Call 0x1C17CF4
	022 Move X0, 0x744000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3113], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call DebugManager.get_instance
	034 Compare X0, 0
	035 JumpIfEqual {91}
	036 Move X20, 0x7A2000
	037 Move X21, 0x744000
	038 Move X20, [X20+3296]
	039 Move X21, [X21+1432]
	040 Move W1, W31
	041 Move X2, X31
	042 Move X19, X0
	043 Call DebugManager.set_displayRuntimeUI, X0, X1
	044 Move X0, X19
	045 Move W1, W31
	046 Move X2, X31
	047 Call DebugManager.set_displayPersistentRuntimeUI, X0, X1
	048 Move X8, [X20]
	049 Move X0, [X21]
	050 Move X8, [X8+184]
	051 Move W9, [X0+224]
	052 Move X19, [X8]
	053 Compare W9, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {86}
	064 Move X8, [X20]
	065 Move X8, [X8+184]
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {91}
	069 Move X1, X31
	070 Call Component.get_gameObject, X0
	071 Move X8, 0x76C000
	072 Move X8, [X8+2296]
	073 Move X19, X0
	074 Move X8, [X8]
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X0, X19
	081 Move X1, X31
	082 Call CoreUtils.Destroy, X0
	083 Move X8, [X20]
	084 Move X8, [X8+184]
	085 Move [X8], X31
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return 
	091 Call 0x1C17F20

Method: System.Void HandleInternalEventSystemComponents(System.Boolean uiEnabled)

Disassembly:
	0x039B0F50 CBZ X8, 0x39B0F70
	0x039B0F54 LDR W9, [X8 + 0x1C]
	0x039B0F58 ADD W9, W9, 0x1
	0x039B0F5C STP W31, W9, [X8 + 0x18]
	0x039B0F60 STP X31, X31, [X19 + 0x18]
	0x039B0F64 LDP X20, X19, [X31 + 0x10]
	0x039B0F68 LDR X30, [X31], #0x20
	0x039B0F6C RET
	0x039B0F70 BL 0x1C16F20
	0x039B0F74 UNIMPLEMENTED
	0x039B0F78 STR V1, [X0]
	0x039B0F7C STP S0, S0, [X0 + 0x10]
	0x039B0F80 RET
	0x039B0F84 STP X30, X23, [X31 - 0x30]!
	0x039B0F88 STP X22, X21, [X31 + 0x10]
	0x039B0F8C STP X20, X19, [X31 + 0x20]
	0x039B0F90 ADRP X22, 0xA31000
	0x039B0F94 ADRP X23, 0x7A1000
	0x039B0F98 ADRP X21, 0x7A1000
	0x039B0F9C LDRB W8, [X22 + 0xC3A]
	0x039B0FA0 LDR X23, [X23 + 0xDB0]
	0x039B0FA4 LDR X21, [X21 + 0xDB8]
	0x039B0FA8 MOV W19, W1
	0x039B0FAC MOV X20, X0
	0x039B0FB0 TBNZ X8, 0x0, 0x39B0FE0
	0x039B0FB4 ADRP X0, 0x7A1000
	0x039B0FB8 LDR X0, [X0 + 0xDB8]
	0x039B0FBC BL 0x1C16CF4
	0x039B0FC0 ADRP X0, 0x7A1000
	0x039B0FC4 LDR X0, [X0 + 0xDC0]
	0x039B0FC8 BL 0x1C16CF4
	0x039B0FCC ADRP X0, 0x7A1000
	0x039B0FD0 LDR X0, [X0 + 0xDB0]
	0x039B0FD4 BL 0x1C16CF4
	0x039B0FD8 MOVZ W8, 0x1
	0x039B0FDC STRB W8, [X22 + 0xC3A]
	0x039B0FE0 LDR X0, [X23]
	0x039B0FE4 BL 0x1C16F10
	0x039B0FE8 LDR X1, [X21]
	0x039B0FEC MOV X21, X0
	0x039B0FF0 BL 0x2FBECCC
	0x039B0FF4 MOV X0, X20
	0x039B0FF8 MOV X1, X31
	0x039B0FFC STR X21, [X20 + 0x10]
	0x039B1000 BL 0x33BDD8C
	0x039B1004 LDR X0, [X20 + 0x10]
	0x039B1008 CBZ X0, 0x39B102C
	0x039B100C ADRP X8, 0x7A0000
	0x039B1010 LDR X8, [X8 + 0xDC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA32000
	007 Move X21, 0x7A2000
	008 Move X20, 0x744000
	009 Move W8, [X22+3114]
	010 Move X21, [X21+3296]
	011 Move X20, [X20+1432]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x7A2000
	018 Move X0, [X0+3296]
	019 Call 0x1C17CF4
	020 Move X0, 0x744000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3114], W8
	025 Move X8, [X21]
	026 Move X0, [X20]
	027 Move X8, [X8+184]
	028 Move W9, [X0+224]
	029 Move X20, [X8]
	030 Compare W9, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {47}
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return 
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {68}
	052 Move TEMP, X19
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {61}
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Call DebugUpdater.DestroyDebugEventSystem, X0
	067 Return 
	068 Call 0x1C17F20

Method: System.Void EnsureExactlyOneEventSystem()

Disassembly:
	0x039B1014 MOV W1, W19
	0x039B1018 LDP X20, X19, [X31 + 0x20]
	0x039B101C LDP X22, X21, [X31 + 0x10]
	0x039B1020 LDR X2, [X8]
	0x039B1024 LDP X30, X23, [X31], #0x30
	0x039B1028 B 0x2FBF050
	0x039B102C BL 0x1C16F20
	0x039B1030 SUB X31, X31, 0x80
	0x039B1034 STP X30, X21, [X31 + 0x60]
	0x039B1038 STP X20, X19, [X31 + 0x70]
	0x039B103C ADRP X21, 0xA30000
	0x039B1040 LDRB W8, [X21 + 0xC3B]
	0x039B1044 MOV X19, X1
	0x039B1048 MOV X20, X0
	0x039B104C TBNZ X8, 0x0, 0x39B1064
	0x039B1050 ADRP X0, 0x7A0000
	0x039B1054 LDR X0, [X0 + 0xDC8]
	0x039B1058 BL 0x1C16CF4
	0x039B105C MOVZ W8, 0x1
	0x039B1060 STRB W8, [X21 + 0xC3B]
	0x039B1064 LDR X0, [X20 + 0x10]
	0x039B1068 LDR X8, [X19 + 0x10]
	0x039B106C LDR V0, [X19]
	0x039B1070 STR X8, [X31 + 0x10]
	0x039B1074 STR V0, [X31]
	0x039B1078 CBZ X0, 0x39B1114
	0x039B107C LDR V0, [X31]
	0x039B1080 LDR X8, [X31 + 0x10]
	0x039B1084 ADRP X9, 0x7A0000
	0x039B1088 LDR X9, [X9 + 0xDC8]
	0x039B108C STR V0, [X31 + 0x2]
	0x039B1090 STR X8, [X31 + 0x30]
	0x039B1094 LDR W11, [X0 + 0x1C]
	0x039B1098 LDR X8, [X0 + 0x10]
	0x039B109C LDR X10, [X9]
	0x039B10A0 ADD W9, W11, 0x1
	0x039B10A4 STR W9, [X0 + 0x1C]
	0x039B10A8 CBZ X8, 0x39B1114
	0x039B10AC LDRSW X9, [X0 + 0x18]
	0x039B10B0 LDR W11, [X8 + 0x18]
	0x039B10B4 CMP W9, W11
	0x039B10B8 B.CS 0x39B10E0
	0x039B10BC ADD W10, W9, 0x1
	0x039B10C0 STR W10, [X0 + 0x18]
	0x039B10C4 LDR X10, [X31 + 0x30]
	0x039B10C8 LDR V0, [X31 + 0x2]
	0x039B10CC MOVZ W11, 0x18
	0x039B10D0 MADD X8, X9, X11, X8
	0x039B10D4 STR X10, [X8 + 0x30]
	0x039B10D8 STR V0, [X8 + 0x2]
	0x039B10DC B 0x39B1104
	0x039B10E0 LDR X8, [X10 + 0x20]
	0x039B10E4 LDR V0, [X31 + 0x2]
	0x039B10E8 LDR X9, [X31 + 0x30]
	0x039B10EC ADD X1, X31, 0x40
	0x039B10F0 LDR X8, [X8 + 0xC0]
	0x039B10F4 LDR X2, [X8 + 0x70]
	0x039B10F8 STR V0, [X31 + 0x4]
	0x039B10FC STR X9, [X31 + 0x50]
	0x039B1100 BL 0x2FBF570
	0x039B1104 LDP X20, X19, [X31 + 0x70]
	0x039B1108 LDP X30, X21, [X31 + 0x60]
	0x039B110C ADD X31, X31, 0x80
	0x039B1110 RET
	0x039B1114 BL 0x1C16F20
	0x039B1118 SUB X31, X31, 0x1C0
	0x039B111C STR X29, [X31 + 0x180]
	0x039B1120 STP X30, X23, [X31 + 0x190]
	0x039B1124 STP X22, X21, [X31 + 0x1A0]
	0x039B1128 STP X20, X19, [X31 + 0x1B0]
	0x039B112C ADRP X20, 0xA30000
	0x039B1130 LDRB W8, [X20 + 0xC3C]
	0x039B1134 MOV X19, X0
	0x039B1138 TBNZ X8, 0x0, 0x39B1168
	0x039B113C ADRP X0, 0x7A0000
	0x039B1140 LDR X0, [X0 + 0x7A0]
	0x039B1144 BL 0x1C16CF4
	0x039B1148 ADRP X0, 0x7A0000
	0x039B114C LDR X0, [X0 + 0xDD0]
	0x039B1150 BL 0x1C16CF4
	0x039B1154 ADRP X0, 0x7A0000
	0x039B1158 LDR X0, [X0 + 0xDD8]
	0x039B115C BL 0x1C16CF4
	0x039B1160 MOVZ W8, 0x1
	0x039B1164 STRB W8, [X20 + 0xC3C]
	0x039B1168 MVNI V0.4S, 0x80, 0x10
	0x039B116C MOVN W8, 0x80800000
	0x039B1170 STR V0, [X31 + 0x13]
	0x039B1174 MVNI V0.2S, 0x80, 0x10
	0x039B1178 STR D0, [X31 + 0x140]
	0x039B117C UNIMPLEMENTED
	0x039B1180 STR V0, [X31 + 0x15]
	0x039B1184 UNIMPLEMENTED
	0x039B1188 STP X31, X31, [X31 + 0x170]
	0x039B118C STR X31, [X31 + 0x168]
	0x039B1190 STP X31, X31, [X31 + 0x120]
	0x039B1194 STR D0, [X31 + 0x160]
	0x039B1198 STR X31, [X31 + 0x118]
	0x039B119C LDR X0, [X19 + 0x10]
	0x039B11A0 CBZ X0, 0x39B12AC
	0x039B11A4 ADRP X23, 0x7A0000
	0x039B11A8 ADRP X22, 0x7A0000
	0x039B11AC LDR X23, [X23 + 0xDD8]
	0x039B11B0 LDR X22, [X22 + 0x7A0]
	0x039B11B4 MOV W20, W31
	0x039B11B8 ADD X21, X31, 0x118
	0x039B11BC LDR W8, [X0 + 0x18]
	0x039B11C0 CMP W20, W8
	0x039B11C4 B.GE 0x39B12B0
	0x039B11C8 LDR X2, [X23]
	0x039B11CC ADD X8, X31, 0xE0
	0x039B11D0 MOV W1, W20
	0x039B11D4 BL 0x2FBF1D4
	0x039B11D8 LDR X8, [X31 + 0xF0]
	0x039B11DC LDR V0, [X31 + 0xE]
	0x039B11E0 LDR X0, [X22]
	0x039B11E4 STR X8, [X31 + 0x110]
	0x039B11E8 STR V0, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA31000
	007 Move X22, 0x743000
	008 Move W8, [X20+3115]
	009 Move X22, [X22+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x744000
	016 Move X0, [X0+3696]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A1000
	019 Move X0, [X0+3320]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A1000
	022 Move X0, [X0+3328]
	023 Call 0x1C17CF4
	024 Move X0, 0x743000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x7A1000
	028 Move X0, [X0+3336]
	029 Call 0x1C17CF4
	030 Move X0, 0x743000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A1000
	034 Move X0, [X0+3344]
	035 Call 0x1C17CF4
	036 Move X0, 0x7A1000
	037 Move X0, [X0+3352]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+3115], W8
	041 Move X0, [X22]
	042 Move X21, 0x7A1000
	043 Move X20, 0x7A1000
	044 Move W8, [X0+224]
	045 Move X21, [X21+3336]
	046 Move X20, [X20+3320]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X21]
	051 Call 0x222E200
	052 Move X1, [X20]
	053 Move X20, X0
	054 Move X0, X19
	055 Call 0x21A4894, X0
	056 Compare X20, 0
	057 JumpIfEqual {138}
	058 Move X8, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X21, X0
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Inequality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {92}
	074 Move X8, 0x743000
	075 Move X8, [X8+2600]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, 0x7A1000
	082 Move X8, [X8+3344]
	083 Move X1, X31
	084 Move X0, [X8]
	085 Call Debug.Log, X0
	086 Move X0, X19
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Move X8, [X20+24]
	093 Compare X8, 0
	094 JumpIfEqual {118}
	095 Move X8, 0x744000
	096 Move X8, [X8+3696]
	097 Move X0, [X8]
	098 Call 0x1C17F10
	099 Move X8, 0x7A1000
	100 Move X8, [X8+3328]
	101 Move X1, X19
	102 Move X3, X31
	103 Move X20, X0
	104 Move X2, [X8]
	105 Call Action..ctor, X0, X1, X2
	106 Move X1, X20
	107 Call DebugUpdater.DoAfterInputModuleUpdated, X0, X1
	108 Move X1, X0
	109 Move X0, X19
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X2, X31
	115 Move X30, [X31+48]
	116 Call MonoBehaviour.StartCoroutine, X0, X1
	117 Return 
	118 Move X8, 0x743000
	119 Move X8, [X8+2600]
	120 Move X0, [X8]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X8, 0x7A1000
	126 Move X8, [X8+3352]
	127 Move X1, X31
	128 Move X0, [X8]
	129 Call Debug.Log, X0
	130 Move X0, X19
	131 Move X20, [X31+32]
	132 Move X19, [X31+40]
	133 Move X22, [X31+16]
	134 Move X21, [X31+24]
	135 Move X30, [X31+48]
	136 Call DebugUpdater.CreateDebugEventSystem, X0
	137 Return 
	138 Call 0x1C17F20

Method: System.Collections.IEnumerator DoAfterInputModuleUpdated(System.Action action)

Disassembly:
	0x039B142C STR S0, [X19 + 0x10]
	0x039B1430 LDR V0, [X19 + 0x14]
	0x039B1434 LDR V1, [X21 + 0x14]
	0x039B1438 LDR X8, [X20 + 0x18]
	0x039B143C LDR X0, [X20 + 0x40]
	0x039B1440 LDR X1, [X20 + 0x28]
	0x039B1444 BLR X8
	0x039B1448 STR S0, [X19 + 0x14]
	0x039B144C LDP X20, X19, [X31 + 0x10]
	0x039B1450 LDP X30, X21, [X31], #0x20
	0x039B1454 RET
	0x039B1458 BL 0x1C16F20
	0x039B145C STR X30, [X31 - 0x30]!
	0x039B1460 STP X22, X21, [X31 + 0x10]
	0x039B1464 STP X20, X19, [X31 + 0x20]
	0x039B1468 ADRP X21, 0xA30000
	0x039B146C LDRB W8, [X21 + 0xC3D]
	0x039B1470 MOV W19, W1
	0x039B1474 MOV X20, X0
	0x039B1478 TBNZ X8, 0x0, 0x39B14A8
	0x039B147C ADRP X0, 0x7A0000
	0x039B1480 LDR X0, [X0 + 0xDE0]
	0x039B1484 BL 0x1C16CF4
	0x039B1488 ADRP X0, 0x7A0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA31000
	006 Move X21, 0x7A1000
	007 Move W8, [X20+3116]
	008 Move X21, [X21+3384]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7A1000
	015 Move X0, [X0+3384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3116], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void CheckInputModuleExists()

Disassembly:
	0x039B14B4 ADRP X22, 0x7A0000
	0x039B14B8 LDR X21, [X21 + 0xDC0]
	0x039B14BC LDR X22, [X22 + 0xDE0]
	0x039B14C0 LDR W8, [X0 + 0x18]
	0x039B14C4 CMP W8, W19
	0x039B14C8 B.LT 0x39B14E4
	0x039B14CC LDR X2, [X22]
	0x039B14D0 MOV W1, W31
	0x039B14D4 BL 0x2FC152C
	0x039B14D8 LDR X0, [X20 + 0x10]
	0x039B14DC CBNZ X0, 0x39B14C0
	0x039B14E0 BL 0x1C16F20
	0x039B14E4 LDR X2, [X21]
	0x039B14E8 MOV W1, W19
	0x039B14EC LDP X20, X19, [X31 + 0x20]
	0x039B14F0 LDP X22, X21, [X31 + 0x10]
	0x039B14F4 LDR X30, [X31], #0x30
	0x039B14F8 B 0x2FBF050
	0x039B14FC STR X30, [X31 - 0x20]!
	0x039B1500 STP X20, X19, [X31 + 0x10]
	0x039B1504 ADRP X20, 0xA30000
	0x039B1508 LDRB W8, [X20 + 0xC3E]
	0x039B150C MOV X19, X0
	0x039B1510 TBNZ X8, 0x0, 0x39B1528
	0x039B1514 ADRP X0, 0x7A0000
	0x039B1518 LDR X0, [X0 + 0xDE8]
	0x039B151C BL 0x1C16CF4
	0x039B1520 MOVZ W8, 0x1
	0x039B1524 STRB W8, [X20 + 0xC3E]
	0x039B1528 LDR X8, [X19 + 0x10]
	0x039B152C CBZ X8, 0x39B1548
	0x039B1530 LDR W9, [X8 + 0x1C]
	0x039B1534 LDP X20, X19, [X31 + 0x10]
	0x039B1538 ADD W9, W9, 0x1
	0x039B153C STP W31, W9, [X8 + 0x18]
	0x039B1540 LDR X30, [X31], #0x20
	0x039B1544 RET
	0x039B1548 BL 0x1C16F20
	0x039B154C STR X30, [X31 - 0x60]!
	0x039B1550 STP X28, X27, [X31 + 0x10]
	0x039B1554 STP X26, X25, [X31 + 0x20]
	0x039B1558 STP X24, X23, [X31 + 0x30]
	0x039B155C STP X22, X21, [X31 + 0x40]
	0x039B1560 STP X20, X19, [X31 + 0x50]
	0x039B1564 ADRP X19, 0xA30000
	0x039B1568 ADRP X21, 0x7A0000
	0x039B156C LDRB W8, [X19 + 0xC3F]
	0x039B1570 LDR X21, [X21 + 0xDF0]
	0x039B1574 TBNZ X8, 0x0, 0x39B15EC
	0x039B1578 ADRP X0, 0x7A0000
	0x039B157C LDR X0, [X0 + 0x7A0]
	0x039B1580 BL 0x1C16CF4
	0x039B1584 ADRP X0, 0x787000
	0x039B1588 LDR X0, [X0 + 0x7F8]
	0x039B158C BL 0x1C16CF4
	0x039B1590 ADRP X0, 0x7A0000
	0x039B1594 LDR X0, [X0 + 0xDF8]
	0x039B1598 BL 0x1C16CF4
	0x039B159C ADRP X0, 0x7A0000
	0x039B15A0 LDR X0, [X0 + 0xE00]
	0x039B15A4 BL 0x1C16CF4
	0x039B15A8 ADRP X0, 0x7A0000
	0x039B15AC LDR X0, [X0 + 0xE08]
	0x039B15B0 BL 0x1C16CF4
	0x039B15B4 ADRP X0, 0x7A0000
	0x039B15B8 LDR X0, [X0 + 0xE10]
	0x039B15BC BL 0x1C16CF4
	0x039B15C0 ADRP X0, 0x7A0000
	0x039B15C4 LDR X0, [X0 + 0xE18]
	0x039B15C8 BL 0x1C16CF4
	0x039B15CC ADRP X0, 0x7A0000
	0x039B15D0 LDR X0, [X0 + 0xE20]
	0x039B15D4 BL 0x1C16CF4
	0x039B15D8 ADRP X0, 0x7A0000
	0x039B15DC LDR X0, [X0 + 0xDF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA31000
	006 Move X20, 0x76A000
	007 Move W8, [X19+3117]
	008 Move X20, [X20+3576]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x743000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x76A000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x743000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A1000
	023 Move X0, [X0+3392]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3117], W8
	027 Move X0, [X20]
	028 Move X21, 0x743000
	029 Move W8, [X0+224]
	030 Move X21, [X21+1432]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call EventSystem.get_current
	036 Move X8, [X21]
	037 Move X19, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {92}
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X31
	057 Call EventSystem.get_current
	058 Compare X0, 0
	059 JumpIfEqual {97}
	060 Move X8, [X21]
	061 Move X19, [X0+40]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {92}
	075 Move X8, 0x743000
	076 Move X8, [X8+2600]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X8, 0x7A1000
	083 Move X8, [X8+3392]
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X1, X31
	087 Move X0, [X8]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Call Debug.LogWarning, X0
	091 Return 
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Return 
	097 Call 0x1C17F20

Method: System.Void AssignDefaultActions()

Disassembly:
	0x039B15E0 BL 0x1C16CF4
	0x039B15E4 MOVZ W8, 0x1
	0x039B15E8 STRB W8, [X19 + 0xC3F]
	0x039B15EC ADRP X23, 0x787000
	0x039B15F0 LDR X23, [X23 + 0x7F8]
	0x039B15F4 LDR X0, [X21]
	0x039B15F8 ADRP X20, 0x7A0000
	0x039B15FC ADRP X22, 0x7A0000
	0x039B1600 ADRP X28, 0x7A0000
	0x039B1604 ADRP X27, 0x7A0000
	0x039B1608 ADRP X26, 0x7A0000
	0x039B160C ADRP X25, 0x7A0000
	0x039B1610 ADRP X24, 0x7A0000
	0x039B1614 LDR X20, [X20 + 0xDF8]
	0x039B1618 LDR X22, [X22 + 0x7A0]
	0x039B161C LDR X28, [X28 + 0xE00]
	0x039B1620 LDR W8, [X0 + 0xE0]
	0x039B1624 LDR X27, [X27 + 0xE08]
	0x039B1628 LDR X26, [X26 + 0xE10]
	0x039B162C LDR X25, [X25 + 0xE18]
	0x039B1630 LDR X24, [X24 + 0xE20]
	0x039B1634 CBNZ W8, 0x39B1640
	0x039B1638 BL 0x1C16DFC
	0x039B163C LDR X0, [X21]
	0x039B1640 LDR X8, [X0 + 0xB8]
	0x039B1644 LDR X0, [X23]
	0x039B1648 LDR X19, [X8]
	0x039B164C BL 0x1C16F10
	0x039B1650 LDR X2, [X20]
	0x039B1654 MOV X1, X19
	0x039B1658 MOV X3, X31
	0x039B165C MOV X20, X0
	0x039B1660 BL 0x2D3E540
	0x039B1664 LDR X8, [X22]
	0x039B1668 LDR X8, [X8 + 0xB8]
	0x039B166C STR X20, [X8]
	0x039B1670 LDR X8, [X21]
	0x039B1674 LDR X0, [X23]
	0x039B1678 LDR X8, [X8 + 0xB8]
	0x039B167C LDR X19, [X8]
	0x039B1680 BL 0x1C16F10
	0x039B1684 LDR X2, [X28]
	0x039B1688 MOV X1, X19
	0x039B168C MOV X3, X31
	0x039B1690 MOV X20, X0
	0x039B1694 BL 0x2D3E540
	0x039B1698 LDR X8, [X22]
	0x039B169C LDR X8, [X8 + 0xB8]
	0x039B16A0 STR X20, [X8 + 0x8]
	0x039B16A4 LDR X8, [X21]
	0x039B16A8 LDR X0, [X23]
	0x039B16AC LDR X8, [X8 + 0xB8]
	0x039B16B0 LDR X19, [X8]
	0x039B16B4 BL 0x1C16F10
	0x039B16B8 LDR X2, [X27]
	0x039B16BC MOV X1, X19
	0x039B16C0 MOV X3, X31
	0x039B16C4 MOV X20, X0
	0x039B16C8 BL 0x2D3E540
	0x039B16CC LDR X8, [X22]
	0x039B16D0 LDR X8, [X8 + 0xB8]
	0x039B16D4 STR X20, [X8 + 0x10]
	0x039B16D8 LDR X8, [X21]
	0x039B16DC LDR X0, [X23]
	0x039B16E0 LDR X8, [X8 + 0xB8]
	0x039B16E4 LDR X19, [X8]
	0x039B16E8 BL 0x1C16F10
	0x039B16EC LDR X2, [X26]
	0x039B16F0 MOV X1, X19
	0x039B16F4 MOV X3, X31
	0x039B16F8 MOV X20, X0
	0x039B16FC BL 0x2D3E540
	0x039B1700 LDR X8, [X22]
	0x039B1704 LDR X8, [X8 + 0xB8]
	0x039B1708 STR X20, [X8 + 0x18]
	0x039B170C LDR X8, [X21]
	0x039B1710 LDR X0, [X23]
	0x039B1714 LDR X8, [X8 + 0xB8]
	0x039B1718 LDR X19, [X8]
	0x039B171C BL 0x1C16F10
	0x039B1720 LDR X2, [X25]
	0x039B1724 MOV X1, X19
	0x039B1728 MOV X3, X31
	0x039B172C MOV X20, X0
	0x039B1730 BL 0x2D3E540
	0x039B1734 LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA31000
	005 Move X20, 0x76A000
	006 Move W8, [X19+3118]
	007 Move X20, [X20+3576]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x76A000
	013 Move X0, [X0+3576]
	014 Call 0x1C17CF4
	015 Move X0, 0x799000
	016 Move X0, [X0+888]
	017 Call 0x1C17CF4
	018 Move X0, 0x743000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A1000
	022 Move X0, [X0+3400]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+3118], W8
	026 Move X0, [X20]
	027 Move X19, 0x743000
	028 Move W8, [X0+224]
	029 Move X19, [X19+1432]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call EventSystem.get_current
	035 Move X8, [X19]
	036 Move X19, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {98}
	050 Move X0, [X20]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X31
	056 Call EventSystem.get_current
	057 Compare X0, 0
	058 JumpIfEqual {103}
	059 Move X19, [X0+40]
	060 Compare X19, 0
	061 JumpIfEqual {98}
	062 Move X8, 0x799000
	063 Move X8, [X8+888]
	064 Move X9, [X19]
	065 Move X8, [X8]
	066 Move W11, [X9+304]
	067 Move W10, [X8+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X9+200]
	070 Add X9, X9, X10
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X19
	074 Move X1, X31
	075 Call "il2cpp_vm_object_is_inst", X0
	076 Compare X0, 0
	077 JumpIfEqual {103}
	078 Move X8, 0x7A1000
	079 Move X8, [X8+3400]
	080 Move X2, X31
	081 Move X1, [X8]
	082 Call Type.GetMethod, X0, X1
	083 Move X1, X31
	084 Move X2, X31
	085 Move X20, X0
	086 Call MethodInfo.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {98}
	091 Compare X20, 0
	092 JumpIfEqual {103}
	093 Move X0, X20
	094 Move X1, X19
	095 Move X2, X31
	096 Move X3, X31
	097 Call MethodBase.Invoke, X0, X1, X2
	098 Move X20, [X31+16]
	099 Move X19, [X31+24]
	100 Move X30, [X31+32]
	101 Call DebugUpdater.CheckInputModuleExists, X0
	102 Return 
	103 Call 0x1C17F20

Method: System.Void CreateDebugEventSystem()

Disassembly:
	0x039B134C LDR V0, [X21 + 0x5]
	0x039B1350 LDP X22, X21, [X31 + 0x1A0]
	0x039B1354 LDP X30, X23, [X31 + 0x190]
	0x039B1358 STR X8, [X19 + 0x28]
	0x039B135C STUR V0, [X19 + 0x18]
	0x039B1360 LDR X8, [X31 + 0x160]
	0x039B1364 LDR V0, [X31 + 0x15]
	0x039B1368 STR X8, [X19 + 0x40]
	0x039B136C STR V0, [X19 + 0x3]
	0x039B1370 LDR X8, [X31 + 0x140]
	0x039B1374 LDR V0, [X31 + 0x13]
	0x039B1378 STR X8, [X19 + 0x58]
	0x039B137C STUR V0, [X19 + 0x48]
	0x039B1380 LDP X20, X19, [X31 + 0x1B0]
	0x039B1384 ADD X31, X31, 0x1C0
	0x039B1388 RET
	0x039B138C STP X30, X21, [X31 - 0x20]!
	0x039B1390 STP X20, X19, [X31 + 0x10]
	0x039B1394 CBZ X2, 0x39B1458
	0x039B1398 MOV X21, X1
	0x039B139C MOV X19, X0
	0x039B13A0 LDR V1, [X1]
	0x039B13A4 LDR V0, [X0]
	0x039B13A8 LDR X8, [X2 + 0x18]
	0x039B13AC LDR X0, [X2 + 0x40]
	0x039B13B0 LDR X1, [X2 + 0x28]
	0x039B13B4 MOV X20, X2
	0x039B13B8 BLR X8
	0x039B13BC STR S0, [X19]
	0x039B13C0 LDR V0, [X19 + 0x4]
	0x039B13C4 LDR V1, [X21 + 0x4]
	0x039B13C8 LDR X8, [X20 + 0x18]
	0x039B13CC LDR X0, [X20 + 0x40]
	0x039B13D0 LDR X1, [X20 + 0x28]
	0x039B13D4 BLR X8
	0x039B13D8 STR S0, [X19 + 0x4]
	0x039B13DC LDR V0, [X19 + 0x8]
	0x039B13E0 LDR V1, [X21 + 0x8]
	0x039B13E4 LDR X8, [X20 + 0x18]
	0x039B13E8 LDR X0, [X20 + 0x40]
	0x039B13EC LDR X1, [X20 + 0x28]
	0x039B13F0 BLR X8
	0x039B13F4 STR S0, [X19 + 0x8]
	0x039B13F8 LDR V0, [X19 + 0xC]
	0x039B13FC LDR V1, [X21 + 0xC]
	0x039B1400 LDR X8, [X20 + 0x18]
	0x039B1404 LDR X0, [X20 + 0x40]
	0x039B1408 LDR X1, [X20 + 0x28]
	0x039B140C BLR X8
	0x039B1410 STR S0, [X19 + 0xC]
	0x039B1414 LDR V0, [X19 + 0x10]
	0x039B1418 LDR V1, [X21 + 0x10]
	0x039B141C LDR X8, [X20 + 0x18]
	0x039B1420 LDR X0, [X20 + 0x40]
	0x039B1424 LDR X1, [X20 + 0x28]
	0x039B1428 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA31000
	006 Move W8, [X20+3119]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x744000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x7A1000
	016 Move X0, [X0+3360]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A1000
	019 Move X0, [X0+3368]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A1000
	022 Move X0, [X0+3376]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3119], W8
	026 Move X0, X19
	027 Move X1, X31
	028 Call Component.get_gameObject, X0
	029 Compare X0, 0
	030 JumpIfEqual {66}
	031 Move X8, 0x7A1000
	032 Move X8, [X8+3368]
	033 Move X1, [X8]
	034 Call 0x21E61FC, X0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Component.get_gameObject, X0
	038 Compare X0, 0
	039 JumpIfEqual {66}
	040 Move X8, 0x7A1000
	041 Move X8, [X8+3376]
	042 Move X20, 0x744000
	043 Move X21, 0x7A1000
	044 Move X1, [X8]
	045 Move X20, [X20+3696]
	046 Move X21, [X21+3360]
	047 Call 0x21E61FC, X0
	048 Move X0, [X20]
	049 Call 0x1C17F10
	050 Move X2, [X21]
	051 Move X1, X19
	052 Move X3, X31
	053 Move X20, X0
	054 Call Action..ctor, X0, X1, X2
	055 Move X1, X20
	056 Call DebugUpdater.DoAfterInputModuleUpdated, X0, X1
	057 Move X1, X0
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X2, X31
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Call MonoBehaviour.StartCoroutine, X0, X1
	065 Return 
	066 Call 0x1C17F20

Method: System.Void DestroyDebugEventSystem()

Disassembly:
	0x039B11EC STR V0, [X31 + 0xE]
	0x039B11F0 STR X8, [X31 + 0xF0]
	0x039B11F4 LDR W8, [X0 + 0xE0]
	0x039B11F8 CBNZ W8, 0x39B1204
	0x039B11FC BL 0x1C16DFC
	0x039B1200 LDR X0, [X22]
	0x039B1204 LDR X8, [X0 + 0xB8]
	0x039B1208 LDR V0, [X31 + 0xE]
	0x039B120C LDR X9, [X31 + 0xF0]
	0x039B1210 ADD X0, X31, 0x150
	0x039B1214 LDR X2, [X8 + 0x8]
	0x039B1218 ADD X1, X31, 0xC0
	0x039B121C STR V0, [X31 + 0xC]
	0x039B1220 STR X9, [X31 + 0xD0]
	0x039B1224 BL 0x39B138C
	0x039B1228 LDR V0, [X31 + 0x10]
	0x039B122C LDR X8, [X31 + 0x110]
	0x039B1230 LDR X9, [X22]
	0x039B1234 ADD X0, X31, 0x130
	0x039B1238 STR V0, [X31 + 0xA]
	0x039B123C STR X8, [X31 + 0xB0]
	0x039B1240 LDR X8, [X9 + 0xB8]
	0x039B1244 ADD X1, X31, 0xA0
	0x039B1248 LDR X2, [X8 + 0x10]
	0x039B124C BL 0x39B138C
	0x039B1250 LDR V0, [X31 + 0x10]
	0x039B1254 LDR X8, [X31 + 0x110]
	0x039B1258 LDR X9, [X22]
	0x039B125C ADD X0, X31, 0x168
	0x039B1260 STR V0, [X31 + 0x8]
	0x039B1264 STR X8, [X31 + 0x90]
	0x039B1268 LDR X8, [X9 + 0xB8]
	0x039B126C ADD X1, X31, 0x80
	0x039B1270 LDR X2, [X8]
	0x039B1274 BL 0x39B138C
	0x039B1278 LDR V0, [X31 + 0x10]
	0x039B127C LDR X8, [X31 + 0x110]
	0x039B1280 LDR X9, [X22]
	0x039B1284 ADD X0, X31, 0x118
	0x039B1288 STR V0, [X31 + 0x6]
	0x039B128C STR X8, [X31 + 0x70]
	0x039B1290 LDR X8, [X9 + 0xB8]
	0x039B1294 ADD X1, X31, 0x60
	0x039B1298 LDR X2, [X8 + 0x18]
	0x039B129C BL 0x39B138C
	0x039B12A0 LDR X0, [X19 + 0x10]
	0x039B12A4 ADD W20, W20, 0x1
	0x039B12A8 CBNZ X0, 0x39B11BC
	0x039B12AC BL 0x1C16F20
	0x039B12B0 LDR V0, [X21]
	0x039B12B4 LDR X8, [X31 + 0x128]
	0x039B12B8 LDR X0, [X22]
	0x039B12BC STR V0, [X31 + 0xE]
	0x039B12C0 STR X8, [X31 + 0xF0]
	0x039B12C4 LDR W8, [X0 + 0xE0]
	0x039B12C8 CBNZ W8, 0x39B12D4
	0x039B12CC BL 0x1C16DFC
	0x039B12D0 LDR X0, [X22]
	0x039B12D4 LDR X8, [X0 + 0xB8]
	0x039B12D8 LDR V0, [X31 + 0xE]
	0x039B12DC LDR X9, [X31 + 0xF0]
	0x039B12E0 ADD X0, X31, 0x150
	0x039B12E4 LDR X2, [X8 + 0x20]
	0x039B12E8 ADD X1, X31, 0x40
	0x039B12EC STR V0, [X31 + 0x4]
	0x039B12F0 STR X9, [X31 + 0x50]
	0x039B12F4 BL 0x39B138C
	0x039B12F8 LDR V0, [X21]
	0x039B12FC LDR X8, [X31 + 0x128]
	0x039B1300 LDR X9, [X22]
	0x039B1304 ADD X0, X31, 0x130
	0x039B1308 STR V0, [X31 + 0x2]
	0x039B130C STR X8, [X31 + 0x30]
	0x039B1310 LDR X8, [X9 + 0xB8]
	0x039B1314 ADD X1, X31, 0x20
	0x039B1318 LDR X2, [X8 + 0x20]
	0x039B131C BL 0x39B138C
	0x039B1320 LDR V0, [X21]
	0x039B1324 LDR X8, [X31 + 0x128]
	0x039B1328 LDR X9, [X22]
	0x039B132C ADD X0, X31, 0x168
	0x039B1330 STR V0, [X31]
	0x039B1334 STR X8, [X31 + 0x10]
	0x039B1338 LDR X8, [X9 + 0xB8]
	0x039B133C ADD X1, X31, 0x0
	0x039B1340 LDR X2, [X8 + 0x28]
	0x039B1344 BL 0x39B138C
	0x039B1348 LDP X8, X29, [X31 + 0x178]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xA31000
	009 Move X23, 0x7A1000
	010 Move X20, 0x799000
	011 Move X21, 0x743000
	012 Move W8, [X22+3120]
	013 Move X23, [X23+3320]
	014 Move X20, [X20+1368]
	015 Move X21, [X21+1432]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x744000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0x7A1000
	025 Move X0, [X0+3320]
	026 Call 0x1C17CF4
	027 Move X0, 0x799000
	028 Move X0, [X0+1368]
	029 Call 0x1C17CF4
	030 Move X0, 0x76B000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A1000
	034 Move X0, [X0+3360]
	035 Call 0x1C17CF4
	036 Move X0, 0x743000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3120], W8
	041 Move X1, [X23]
	042 Move X0, X19
	043 Call 0x21A4894, X0
	044 Move X1, [X20]
	045 Move X20, X0
	046 Move X0, X19
	047 Call 0x21A4894, X0
	048 Move X8, [X21]
	049 Move X21, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X22, 0x76B000
	056 Move X22, [X22+2296]
	057 Move X0, X21
	058 Move X1, X31
	059 Call Object.op_Implicit, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {89}
	064 Move X0, [X22]
	065 Move X24, 0x744000
	066 Move X23, 0x7A1000
	067 Move W8, [X0+224]
	068 Move X24, [X24+3696]
	069 Move X23, [X23+3360]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X31
	075 Call CoreUtils.Destroy, X0
	076 Move X0, [X24]
	077 Call 0x1C17F10
	078 Move X2, [X23]
	079 Move X1, X19
	080 Move X3, X31
	081 Move X21, X0
	082 Call Action..ctor, X0, X1, X2
	083 Move X1, X21
	084 Call DebugUpdater.DoAfterInputModuleUpdated, X0, X1
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call MonoBehaviour.StartCoroutine, X0, X1
	089 Move X0, [X22]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X1, X31
	102 Move X30, [X31+64]
	103 Call CoreUtils.Destroy, X0
	104 Return 

Method: System.Void Update()

Disassembly:
	0x039B1738 LDR X8, [X8 + 0xB8]
	0x039B173C STR X20, [X8 + 0x20]
	0x039B1740 LDR X8, [X21]
	0x039B1744 LDR X0, [X23]
	0x039B1748 LDR X8, [X8 + 0xB8]
	0x039B174C LDR X19, [X8]
	0x039B1750 BL 0x1C16F10
	0x039B1754 LDR X2, [X24]
	0x039B1758 MOV X1, X19
	0x039B175C MOV X3, X31
	0x039B1760 MOV X20, X0
	0x039B1764 BL 0x2D3E540
	0x039B1768 LDR X8, [X22]
	0x039B176C LDP X22, X21, [X31 + 0x40]
	0x039B1770 LDP X24, X23, [X31 + 0x30]
	0x039B1774 LDP X26, X25, [X31 + 0x20]
	0x039B1778 LDR X8, [X8 + 0xB8]
	0x039B177C LDP X28, X27, [X31 + 0x10]
	0x039B1780 STR X20, [X8 + 0x28]
	0x039B1784 LDP X20, X19, [X31 + 0x50]
	0x039B1788 LDR X30, [X31], #0x60
	0x039B178C RET
	0x039B1790 STR X30, [X31 - 0x20]!
	0x039B1794 STP X20, X19, [X31 + 0x10]
	0x039B1798 ADRP X19, 0xA30000
	0x039B179C ADRP X20, 0x7A0000
	0x039B17A0 LDRB W8, [X19 + 0xC40]
	0x039B17A4 LDR X20, [X20 + 0xDF0]
	0x039B17A8 TBNZ X8, 0x0, 0x39B17C0
	0x039B17AC ADRP X0, 0x7A0000
	0x039B17B0 LDR X0, [X0 + 0xDF0]
	0x039B17B4 BL 0x1C16CF4
	0x039B17B8 MOVZ W8, 0x1
	0x039B17BC STRB W8, [X19 + 0xC40]
	0x039B17C0 LDR X0, [X20]
	0x039B17C4 BL 0x1C16F10
	0x039B17C8 MOV X1, X31
	0x039B17CC MOV X19, X0
	0x039B17D0 BL 0x33BDD8C
	0x039B17D4 LDR X8, [X20]
	0x039B17D8 LDR X8, [X8 + 0xB8]
	0x039B17DC STR X19, [X8]
	0x039B17E0 LDP X20, X19, [X31 + 0x10]
	0x039B17E4 LDR X30, [X31], #0x20
	0x039B17E8 RET
	0x039B17EC MOV X1, X31
	0x039B17F0 B 0x33BDD8C
	0x039B17F4 FADD S0, S0, S1
	0x039B17F8 RET
	0x039B17FC FCMP S0, S1
	0x039B1800 FCSEL S2, S0, S1, MI
	0x039B1804 FCMP S1, 0x0
	0x039B1808 FCSEL S0, S2, S0, GT
	0x039B180C RET
	0x039B1810 FCMP S0, S1
	0x039B1814 FCSEL S0, S0, S1, GT
	0x039B1818 RET
	0x039B181C FMOV S2, 1
	0x039B1820 FADD S2, S0, S2
	0x039B1824 FCMP S1, 0x0
	0x039B1828 FCSEL S0, S2, S0, GT
	0x039B182C RET
	0x039B1830 FCMP S1, 0x0
	0x039B1834 FMOV S1, W31
	0x039B1838 FCSEL S0, S0, S1, GT
	0x039B183C RET
	0x039B1840 FDIV S0, S0, S1
	0x039B1844 FCMP S1, 0x0
	0x039B1848 FMOV S1, W31
	0x039B184C FCSEL S0, S0, S1, GT
	0x039B1850 RET
	0x039B1854 STR X30, [X31 - 0x20]!
	0x039B1858 STP X20, X19, [X31 + 0x10]
	0x039B185C ADRP X19, 0xA30000
	0x039B1860 ADRP X20, 0x7A0000
	0x039B1864 LDRB W8, [X19 + 0xC41]
	0x039B1868 LDR X20, [X20 + 0xE28]
	0x039B186C TBNZ X8, 0x0, 0x39B1884
	0x039B1870 ADRP X0, 0x7A0000
	0x039B1874 LDR X0, [X0 + 0xE28]
	0x039B1878 BL 0x1C16CF4
	0x039B187C MOVZ W8, 0x1
	0x039B1880 STRB W8, [X19 + 0xC41]
	0x039B1884 LDR X0, [X20]
	0x039B1888 LDR X8, [X0 + 0xB8]
	0x039B188C LDR X8, [X8]
	0x039B1890 CBNZ X8, 0x39B18BC
	0x039B1894 BL 0x1C16F10
	0x039B1898 MOV X1, X31
	0x039B189C MOV X19, X0
	0x039B18A0 BL 0x33BDD8C
	0x039B18A4 LDR X8, [X20]
	0x039B18A8 LDR X8, [X8 + 0xB8]
	0x039B18AC STR X19, [X8]
	0x039B18B0 LDR X8, [X20]
	0x039B18B4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA31000
	006 Move X21, 0x7A0000
	007 Move W8, [X20+3121]
	008 Move X21, [X21+1912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7A0000
	015 Move X0, [X0+1912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3121], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call DebugManager.get_instance
	026 Compare X0, 0
	027 JumpIfEqual {110}
	028 Move W21, [X19+36]
	029 Move X1, X31
	030 Move X20, X0
	031 Call DebugManager.get_displayRuntimeUI, X0
	032 And W8, W0, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X20
	035 Move X1, X31
	036 Call DebugManager.get_displayRuntimeUI, X0
	037 And W0, W0, 1
	038 Call DebugUpdater.HandleInternalEventSystemComponents, X0
	039 Move X0, X20
	040 Move X1, X31
	041 Call DebugManager.UpdateActions, X0
	042 Move X0, X20
	043 Move W1, W31
	044 Move X2, X31
	045 Call DebugManager.GetAction, X0, X1
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move X0, X20
	048 Move X1, X31
	049 Call DebugManager.GetActionToggleDebugMenuWithTouch, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {62}
	054 Move X0, X20
	055 Move X1, X31
	056 Call DebugManager.get_displayRuntimeUI, X0
	057 NotImplemented "Instruction ORN not yet implemented."
	058 And W1, W8, 1
	059 Move X0, X20
	060 Move X2, X31
	061 Call DebugManager.set_displayRuntimeUI, X0, X1
	062 Move X0, X20
	063 Move X1, X31
	064 Call DebugManager.get_displayRuntimeUI, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {88}
	069 Move W1, 8
	070 Move X0, X20
	071 Move X2, X31
	072 Call DebugManager.GetAction, X0, X1
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Move X0, X20
	075 Move X1, X31
	076 Call DebugManager.Reset, X0
	077 Move X0, X20
	078 Move X1, X31
	079 Call DebugManager.GetActionReleaseScrollTarget, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {88}
	084 Move X0, X20
	085 Move X1, X31
	086 Move X2, X31
	087 Call DebugManager.SetScrollTarget, X0, X1
	088 Move W21, [X19+32]
	089 Move X0, X31
	090 Call Screen.get_orientation
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Call DebugUpdater.RefreshRuntimeUINextFrame
	093 Move X1, X0
	094 Move X0, X19
	095 Move X2, X31
	096 Call MonoBehaviour.StartCoroutine, X0, X1
	097 Move X0, X31
	098 Call Screen.get_orientation
	099 Move [X19+32], W0
	100 Move X0, X20
	101 Move X1, X31
	102 Call DebugManager.get_displayRuntimeUI, X0
	103 And W8, W0, 1
	104 Move [X19+36], W8
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X30, [X31+32]
	108 Move X21, [X31+40]
	109 Return 
	110 Call 0x1C17F20

Method: System.Collections.IEnumerator RefreshRuntimeUINextFrame()

Disassembly:
	0x039B18B8 LDR X8, [X8]
	0x039B18BC LDP X20, X19, [X31 + 0x10]
	0x039B18C0 MOV X0, X8
	0x039B18C4 LDR X30, [X31], #0x20
	0x039B18C8 RET
	0x039B18CC MOV X1, X31
	0x039B18D0 B 0x33BDD8C
	0x039B18D4 RET
	0x039B18D8 RET
	0x039B18DC B 0x39B18E0
	0x039B18E0 STP X30, X19, [X31 - 0x10]!
	0x039B18E4 ADRP X19, 0xA30000
	0x039B18E8 LDRB W8, [X19 + 0xC42]
	0x039B18EC TBNZ X8, 0x0, 0x39B1904
	0x039B18F0 ADRP X0, 0x76A000
	0x039B18F4 LDR X0, [X0 + 0x558]
	0x039B18F8 BL 0x1C16CF4
	0x039B18FC MOVZ W8, 0x1
	0x039B1900 STRB W8, [X19 + 0xC42]
	0x039B1904 ADRP X19, 0xA2F000
	0x039B1908 LDRB W8, [X19 + 0xFA1]
	0x039B190C CBNZ W8, 0x39B1924

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA31000
	005 Move X20, 0x7A1000
	006 Move W8, [X19+3122]
	007 Move X20, [X20+3408]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x7A1000
	013 Move X0, [X0+3408]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3122], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move [X19+16], W31
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void .ctor()

Disassembly:
	0x039B1938 CBZ X8, 0x39B1958
	0x039B193C LDR X0, [X8 + 0x170]

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

