Type: UnityEngine.Rendering.ProbeVolumeSceneData

Method: System.String GetSceneGUID(UnityEngine.SceneManagement.Scene scene)

Disassembly:
	0x039C6BC4 LDP X28, X27, [X31 + 0x80]
	0x039C6BC8 LDP X29, X30, [X31 + 0x70]
	0x039C6BCC ADD X31, X31, 0xD0
	0x039C6BD0 RET
	0x039C6BD4 BL 0x1C16F28
	0x039C6BD8 UBFM X8, X1, 0x20, 0x3F
	0x039C6BDC LDR V0, [X0]
	0x039C6BE0 FMOV S1, W1
	0x039C6BE4 UNIMPLEMENTED
	0x039C6BE8 UBFM X9, X2, 0x20, 0x3F
	0x039C6BEC UNIMPLEMENTED
	0x039C6BF0 UNIMPLEMENTED
	0x039C6BF4 ADD S0.4S, S0.4S, S1.4S
	0x039C6BF8 STR V0, [X0]
	0x039C6BFC RET
	0x039C6C00 SUB X31, X31, 0x140
	0x039C6C04 STP X29, X30, [X31 + 0xE0]
	0x039C6C08 STP X28, X27, [X31 + 0xF0]
	0x039C6C0C STP X26, X25, [X31 + 0x100]
	0x039C6C10 STP X24, X23, [X31 + 0x110]
	0x039C6C14 STP X22, X21, [X31 + 0x120]
	0x039C6C18 STP X20, X19, [X31 + 0x130]
	0x039C6C1C STR W3, [X31 + 0x2C]
	0x039C6C20 ADRP X20, 0xA1B000
	0x039C6C24 ADRP X21, 0x72D000
	0x039C6C28 LDRB W8, [X20 + 0xCD4]
	0x039C6C2C LDR X21, [X21 + 0x598]
	0x039C6C30 MOV X22, X2
	0x039C6C34 MOV X19, X1
	0x039C6C38 MOV X26, X0
	0x039C6C3C TBNZ X8, 0x0, 0x39C6C9C
	0x039C6C40 ADRP X0, 0x78C000
	0x039C6C44 LDR X0, [X0 + 0x5D0]
	0x039C6C48 BL 0x1C16CF4
	0x039C6C4C ADRP X0, 0x756000
	0x039C6C50 LDR X0, [X0 + 0x2B8]
	0x039C6C54 BL 0x1C16CF4
	0x039C6C58 ADRP X0, 0x783000
	0x039C6C5C LDR X0, [X0 + 0x6A0]
	0x039C6C60 BL 0x1C16CF4
	0x039C6C64 ADRP X0, 0x72D000
	0x039C6C68 LDR X0, [X0 + 0x598]
	0x039C6C6C BL 0x1C16CF4
	0x039C6C70 ADRP X0, 0x78C000
	0x039C6C74 LDR X0, [X0 + 0xA68]
	0x039C6C78 BL 0x1C16CF4
	0x039C6C7C ADRP X0, 0x78C000
	0x039C6C80 LDR X0, [X0 + 0xA88]
	0x039C6C84 BL 0x1C16CF4
	0x039C6C88 ADRP X0, 0x78C000
	0x039C6C8C LDR X0, [X0 + 0xA80]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA1C000
	007 Move X20, 0x78D000
	008 Move W8, [X21+3300]
	009 Move X20, [X20+2592]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x78D000
	016 Move X0, [X0+2592]
	017 Call 0x1C17CF4
	018 Move X0, 0x759000
	019 Move X0, [X0+1864]
	020 Call 0x1C17CF4
	021 Move X0, 0x730000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3300], W8
	026 Move X0, [X20]
	027 Move X21, 0x759000
	028 Move W8, [X0+224]
	029 Move X21, [X21+1864]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X0, [X21]
	036 Add X1, X31, 8
	037 Move X20, [X8]
	038 Move [X31+8], W19
	039 Call 0x1C17E04
	040 Compare X20, 0
	041 JumpIfEqual {59}
	042 Move X1, X0
	043 Move X0, X20
	044 Move X2, X31
	045 Call PropertyInfo.GetValue, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {53}
	048 Move X8, 0x730000
	049 Move X8, [X8+632]
	050 Move X1, [X8]
	051 Move X8, [X0]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Add X31, X31, 48
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C181E0

Method: System.String get_lightingScenario()

Disassembly:
	0x039C913C BL 0x2BE0DC4
	0x039C9140 CBZ X21, 0x39C8C98

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.String get_otherScenario()

Disassembly:
	0x039C9144 B 0x39C91A8
	0x039C9148 MOV X21, X31

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Single get_scenarioBlendingFactor()

Disassembly:
	0x039C914C B 0x39C9154
	0x039C9150 MOV X20, X0

ISIL:
	001 Move V0, [X0+128]
	002 Return V0

Method: System.Void SetActiveScenario(System.String scenario)

Disassembly:
	0x039C9154 ADRP X8, 0x789000
	0x039C9158 LDR X8, [X8 + 0xBE0]
	0x039C915C LDR X1, [X8]
	0x039C9160 ADD X0, X31, 0x130
	0x039C9164 BL 0x2BE0DC4
	0x039C9168 CBZ X21, 0x39C91D4
	0x039C916C MOV X0, X21
	0x039C9170 BL 0x1C16F18
	0x039C9174 MOV X20, X0
	0x039C9178 CMP W1, 0x1
	0x039C917C B.NE 0x39C91B0
	0x039C9180 MOV X0, X20
	0x039C9184 BL 0x3EB1AD0
	0x039C9188 LDR X21, [X0]
	0x039C918C BL 0x3EB1AE0
	0x039C9190 ADRP X8, 0x789000
	0x039C9194 LDR X8, [X8 + 0x9E0]
	0x039C9198 ADD X0, X31, 0x80
	0x039C919C LDR X1, [X8]
	0x039C91A0 BL 0x2BC434C
	0x039C91A4 CBZ X21, 0x39C8F5C
	0x039C91A8 MOV X0, X21
	0x039C91AC BL 0x1C16F18
	0x039C91B0 MOV X21, X31
	0x039C91B4 B 0x39C91BC
	0x039C91B8 MOV X20, X0
	0x039C91BC ADRP X8, 0x789000
	0x039C91C0 LDR X8, [X8 + 0x9E0]
	0x039C91C4 LDR X1, [X8]
	0x039C91C8 ADD X0, X31, 0x80
	0x039C91CC BL 0x2BC434C
	0x039C91D0 CBNZ X21, 0x39C91DC
	0x039C91D4 MOV X0, X20
	0x039C91D8 BL 0x1D2C690
	0x039C91DC MOV X0, X21
	0x039C91E0 BL 0x1C16F18
	0x039C91E4 BL 0x1990590
	0x039C91E8 STP X30, X21, [X31 - 0x20]!
	0x039C91EC STP X20, X19, [X31 + 0x10]
	0x039C91F0 ADRP X20, 0xA18000
	0x039C91F4 ADRP X21, 0x789000
	0x039C91F8 LDRB W8, [X20 + 0xCEC]
	0x039C91FC LDR X21, [X21 + 0xC58]
	0x039C9200 MOV X19, X1
	0x039C9204 TBNZ X8, 0x0, 0x39C921C
	0x039C9208 ADRP X0, 0x789000
	0x039C920C LDR X0, [X0 + 0xC58]
	0x039C9210 BL 0x1C16CF4
	0x039C9214 MOVZ W8, 0x1
	0x039C9218 STRB W8, [X20 + 0xCEC]
	0x039C921C LDR X0, [X21]
	0x039C9220 BL 0x22537A0
	0x039C9224 CBZ X0, 0x39C92B4
	0x039C9228 MOV X1, X31
	0x039C922C MOV X20, X0
	0x039C9230 BL 0x3C389D4
	0x039C9234 CBZ X19, 0x39C92B4
	0x039C9238 STR X0, [X19 + 0x10]
	0x039C923C MOVN W0, 0x4
	0x039C9240 MOV X1, X31
	0x039C9244 STR X20, [X19 + 0x50]
	0x039C9248 BL 0x3C35CBC
	0x039C924C ADRP X9, 0xFFFFFFFFFD124000
	0x039C9250 LDR V0, [X9 + 0xAF8]
	0x039C9254 MOVZ W8, 0x1
	0x039C9258 STR W8, [X19 + 0x20]
	0x039C925C STRB W8, [X19 + 0x24]
	0x039C9260 STR W8, [X19 + 0x30]
	0x039C9264 STRB W8, [X19 + 0x34]
	0x039C9268 ADRP X8, 0xFFFFFFFFFD124000
	0x039C926C STR D0, [X19 + 0x28]
	0x039C9270 LDR V0, [X8 + 0xFB0]
	0x039C9274 MOVZ X8, 0x126F
	0x039C9278 MOVK X8, 0xBA830000
	0x039C927C MOVZ W9, 0x100
	0x039C9280 MOVK X8, 0xA
	0x039C9284 STURH W31, [X19 + 0x25]
	0x039C9288 STRB W31, [X19 + 0x27]
	0x039C928C STURH W31, [X19 + 0x35]
	0x039C9290 STRB W31, [X19 + 0x3B]
	0x039C9294 STUR W9, [X19 + 0x37]
	0x039C9298 STUR X8, [X19 + 0x44]
	0x039C929C STUR D0, [X19 + 0x3C]
	0x039C92A0 STR W0, [X19 + 0x4C]
	0x039C92A4 MOV X1, X19
	0x039C92A8 LDP X20, X19, [X31 + 0x10]
	0x039C92AC LDP X30, X21, [X31], #0x20
	0x039C92B0 B 0x39C92B8
	0x039C92B4 BL 0x1C16F20
	0x039C92B8 STP X30, X23, [X31 - 0x30]!
	0x039C92BC STP X22, X21, [X31 + 0x10]
	0x039C92C0 STP X20, X19, [X31 + 0x20]
	0x039C92C4 ADRP X22, 0xA18000
	0x039C92C8 ADRP X23, 0x72B000
	0x039C92CC ADRP X20, 0x72B000
	0x039C92D0 ADRP X21, 0x788000
	0x039C92D4 LDRB W8, [X22 + 0xCED]
	0x039C92D8 LDR X23, [X23 + 0x1D0]
	0x039C92DC LDR X20, [X20 + 0x1C0]
	0x039C92E0 LDR X21, [X21 + 0xF48]
	0x039C92E4 MOV X19, X1
	0x039C92E8 TBNZ X8, 0x0, 0x39C9324
	0x039C92EC ADRP X0, 0x72B000
	0x039C92F0 LDR X0, [X0 + 0x1B8]
	0x039C92F4 BL 0x1C16CF4
	0x039C92F8 ADRP X0, 0x72B000
	0x039C92FC LDR X0, [X0 + 0x1C0]
	0x039C9300 BL 0x1C16CF4
	0x039C9304 ADRP X0, 0x72B000
	0x039C9308 LDR X0, [X0 + 0x1D0]
	0x039C930C BL 0x1C16CF4
	0x039C9310 ADRP X0, 0x788000
	0x039C9314 LDR X0, [X0 + 0xF48]
	0x039C9318 BL 0x1C16CF4
	0x039C931C MOVZ W8, 0x1
	0x039C9320 STRB W8, [X22 + 0xCED]
	0x039C9324 LDR X0, [X23]
	0x039C9328 BL 0x1C16F10
	0x039C932C LDR X1, [X20]
	0x039C9330 MOV X20, X0
	0x039C9334 BL 0x301B7C4
	0x039C9338 LDR X0, [X21]
	0x039C933C LDR W8, [X0 + 0xE0]
	0x039C9340 CBNZ W8, 0x39C9348
	0x039C9344 BL 0x1C16DFC
	0x039C9348 CBZ X20, 0x39C93C8
	0x039C934C LDR X8, [X21]
	0x039C9350 ADRP X10, 0x72B000
	0x039C9354 LDR X9, [X8 + 0xB8]
	0x039C9358 LDR X10, [X10 + 0x1B8]
	0x039C935C LDR W11, [X20 + 0x1C]
	0x039C9360 LDR X8, [X20 + 0x10]
	0x039C9364 LDR X1, [X9]
	0x039C9368 LDR X9, [X10]
	0x039C936C ADD W10, W11, 0x1
	0x039C9370 STR W10, [X20 + 0x1C]
	0x039C9374 CBZ X8, 0x39C93C8
	0x039C9378 LDRSW X10, [X20 + 0x18]
	0x039C937C LDR W11, [X8 + 0x18]
	0x039C9380 CMP W10, W11
	0x039C9384 B.CS 0x39C939C
	0x039C9388 ADD W9, W10, 0x1
	0x039C938C ADD X8, X8, X10, 0x3, LSL
	0x039C9390 STR W9, [X20 + 0x18]
	0x039C9394 STR X1, [X8 + 0x20]
	0x039C9398 B 0x39C93B0
	0x039C939C LDR X8, [X9 + 0x20]
	0x039C93A0 MOV X0, X20
	0x039C93A4 LDR X8, [X8 + 0xC0]
	0x039C93A8 LDR X2, [X8 + 0x70]
	0x039C93AC BL 0x301BF90
	0x039C93B0 CBZ X19, 0x39C93C8
	0x039C93B4 STR X20, [X19 + 0x58]
	0x039C93B8 LDP X20, X19, [X31 + 0x20]
	0x039C93BC LDP X22, X21, [X31 + 0x10]
	0x039C93C0 LDP X30, X23, [X31], #0x30
	0x039C93C4 RET
	0x039C93C8 BL 0x1C16F20
	0x039C93CC SUB X31, X31, 0x110
	0x039C93D0 STP X29, X30, [X31 + 0xB0]
	0x039C93D4 STP X28, X27, [X31 + 0xC0]
	0x039C93D8 STP X26, X25, [X31 + 0xD0]
	0x039C93DC STP X24, X23, [X31 + 0xE0]
	0x039C93E0 STP X22, X21, [X31 + 0xF0]
	0x039C93E4 STP X20, X19, [X31 + 0x100]
	0x039C93E8 ADRP X20, 0xA18000
	0x039C93EC LDRB W8, [X20 + 0xCEE]
	0x039C93F0 MOV X19, X0
	0x039C93F4 TBNZ X8, 0x0, 0x39C9478
	0x039C93F8 ADRP X0, 0x789000
	0x039C93FC LDR X0, [X0 + 0xC60]
	0x039C9400 BL 0x1C16CF4
	0x039C9404 ADRP X0, 0x789000
	0x039C9408 LDR X0, [X0 + 0xC68]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0xA19000
	009 Move W8, [X21+3301]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x78A000
	017 Move X0, [X0+864]
	018 Call 0x1C17CF4
	019 Move X0, 0x78A000
	020 Move X0, [X0+872]
	021 Call 0x1C17CF4
	022 Move X0, 0x78A000
	023 Move X0, [X0+880]
	024 Call 0x1C17CF4
	025 Move X0, 0x78A000
	026 Move X0, [X0+888]
	027 Call 0x1C17CF4
	028 Move X0, 0x789000
	029 Move X0, [X0+3912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3301], W8
	033 Move [X31+32], X31
	034 Move [X31+40], X31
	035 Move [X31+48], X31
	036 Move X0, [X19+112]
	037 Move X1, X20
	038 Move X2, X31
	039 Call String.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {46}
	044 Move V0, [X19+128]
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 Move X21, 0x789000
	047 Move X21, [X21+3912]
	048 Move [X19+112], X20
	049 Move [X19+120], X31
	050 Move [X19+128], W31
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X22, 0xA19000
	057 Move W8, [X22+3257]
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x789000
	061 Move X0, [X0+3912]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X22+3257], W8
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Move X8, [X8+8]
	073 Compare X8, 0
	074 JumpIfEqual {175}
	075 Move X0, [X8+392]
	076 Compare X0, 0
	077 JumpIfEqual {175}
	078 Move X8, 0x78A000
	079 Move X8, [X8+888]
	080 Move X23, 0x78A000
	081 Move X20, 0x78A000
	082 Move X1, [X8]
	083 Move X23, [X23+872]
	084 Move X20, [X20+864]
	085 Add X8, X31, 8
	086 Call List`1<Object>.GetEnumerator, X0
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X8, [X31+24]
	089 Move [X31+2], V0
	090 Move [X31+48], X8
	091 Move X1, [X23]
	092 Add X0, X31, 32
	093 Call Enumerator<Object>.MoveNext, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {104}
	098 Move X0, [X31+48]
	099 Compare X0, 0
	100 JumpIfEqual {174}
	101 Move X1, [X19+112]
	102 Move X2, [X19+120]
	103 Call ProbeVolumePerSceneData.UpdateActiveScenario, X0, X1, X2
	104 Move X1, [X20]
	105 Add X0, X31, 32
	106 Call Enumerator<Object>.Dispose, X0
	107 Move X0, [X21]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move W8, [X22+3257]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x789000
	116 Move X0, [X0+3912]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X22+3257], W8
	120 Move X0, [X21]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X21]
	126 Move X8, [X0+184]
	127 Move X0, [X8+8]
	128 Compare X0, 0
	129 JumpIfEqual {175}
	130 Move X1, X31
	131 Call ProbeReferenceVolume.get_enableScenarioBlending, X0
	132 Move X8, [X21]
	133 Move W19, W0
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move W8, [X22+3257]
	140 Compare W8, 0
	141 JumpIfNotEqual {147}
	142 Move X0, 0x789000
	143 Move X0, [X0+3912]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X22+3257], W8
	147 Move X0, [X21]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X21]
	153 Move X8, [X0+184]
	154 Move X0, [X8+8]
	155 Compare X0, 0
	156 JumpIfEqual {175}
	157 Move TEMP, X19
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {164}
	161 Move W1, 1
	162 Move X2, X31
	163 Call ProbeReferenceVolume.ScenarioBlendingChanged, X0, X1
	164 Move X1, X31
	165 Call ProbeReferenceVolume.UnloadAllCells, X0
	166 Move X20, [X31+96]
	167 Move X19, [X31+104]
	168 Move X22, [X31+80]
	169 Move X21, [X31+88]
	170 Move X30, [X31+64]
	171 Move X23, [X31+72]
	172 Add X31, X31, 112
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X19, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X19
	179 Call 0x3EB2AD0
	180 Move X20, [X0]
	181 Call 0x3EB2AE0
	182 Move X8, 0x78A000
	183 Move X8, [X8+864]
	184 Add X0, X31, 32
	185 Move X1, [X8]
	186 Call Enumerator<Object>.Dispose, X0
	187 Compare X20, 0
	188 JumpIfEqual {107}
	189 Move X0, X20
	190 Call 0x1C17F18
	191 Move X20, X31
	192 Move X19, X0
	193 Move X8, 0x78A000
	194 Move X8, [X8+864]
	195 Move X1, [X8]
	196 Add X0, X31, 32
	197 Call Enumerator<Object>.Dispose, X0
	198 Compare X20, 0
	199 JumpIfNotEqual {202}
	200 Move X0, X19
	201 Call 0x1D2D690
	202 Move X0, X20
	203 Call 0x1C17F18
	204 Call 0x1991590

Method: System.Void BlendLightingScenario(System.String otherScenario, System.Single blendingFactor)

Disassembly:
	0x039C6D20 MUL W23, W8, W24
	0x039C6D24 MOV X0, X26
	0x039C6D28 MOV X1, X19
	0x039C6D2C MOV X2, X20
	0x039C6D30 MOV W3, W23
	0x039C6D34 STR W31, [X31 + 0xDC]
	0x039C6D38 STR W8, [X31 + 0x1C]
	0x039C6D3C BL 0x2235868
	0x039C6D40 ADRP X24, 0x78C000
	0x039C6D44 LDR X24, [X24 + 0xA68]
	0x039C6D48 STP X0, X1, [X31 + 0xC8]
	0x039C6D4C ADD X4, X31, 0xDC
	0x039C6D50 MOV X0, X26
	0x039C6D54 LDR X5, [X24]
	0x039C6D58 MOV X1, X19
	0x039C6D5C MOV X2, X20
	0x039C6D60 MOV W3, W23
	0x039C6D64 BL 0x22356CC
	0x039C6D68 LDR X5, [X24]
	0x039C6D6C STP X0, X1, [X31 + 0xB8]
	0x039C6D70 ADD X4, X31, 0xDC
	0x039C6D74 MOV X0, X26
	0x039C6D78 MOV X1, X19
	0x039C6D7C MOV X2, X20
	0x039C6D80 MOV W3, W23
	0x039C6D84 STR X26, [X31 + 0x20]
	0x039C6D88 BL 0x22356CC
	0x039C6D8C ADD W10, W20, 0xF
	0x039C6D90 CMP W20, 0x0
	0x039C6D94 CSEL W10, W10, W20, LT
	0x039C6D98 AND W10, W10, 0xFFFFFFF0
	0x039C6D9C LDR W9, [X31 + 0xDC]
	0x039C6DA0 MOVZ W11, 0x10
	0x039C6DA4 SUBS W10, W20, W10
	0x039C6DA8 SUB W10, W11, W10
	0x039C6DAC CSEL W10, W31, W10, EQ
	0x039C6DB0 ADD W10, W10, W20
	0x039C6DB4 MOV X8, X0
	0x039C6DB8 MOV W0, W31
	0x039C6DBC CMP W9, W10
	0x039C6DC0 STP X8, X1, [X31 + 0xA8]
	0x039C6DC4 B.NE 0x39C70D4
	0x039C6DC8 LDR X0, [X21]
	0x039C6DCC LDR W8, [X0 + 0xE0]
	0x039C6DD0 CBNZ W8, 0x39C6DD8
	0x039C6DD4 BL 0x1C16DFC
	0x039C6DD8 MOV X0, X22
	0x039C6DDC MOV X1, X31
	0x039C6DE0 BL 0x3C38948
	0x039C6DE4 MOV X19, X31
	0x039C6DE8 MOV X21, X31
	0x039C6DEC TBZ X0, 0x0, 0x39C6E08
	0x039C6DF0 CBZ X22, 0x39C70CC
	0x039C6DF4 LDR X1, [X25]
	0x039C6DF8 MOV X0, X22
	0x039C6DFC BL 0x229BE9C
	0x039C6E00 MOV X21, X0
	0x039C6E04 MOV X19, X1
	0x039C6E08 LDR X20, [X31 + 0x20]
	0x039C6E0C LDR X5, [X24]
	0x039C6E10 ADD X4, X31, 0xDC
	0x039C6E14 MOV X1, X21
	0x039C6E18 MOV X0, X20
	0x039C6E1C MOV X2, X19
	0x039C6E20 MOV W3, W23
	0x039C6E24 STR W31, [X31 + 0xDC]
	0x039C6E28 BL 0x22356CC
	0x039C6E2C LDR X5, [X24]
	0x039C6E30 STP X0, X1, [X31 + 0x98]
	0x039C6E34 ADD X4, X31, 0xDC
	0x039C6E38 MOV X0, X20
	0x039C6E3C MOV X1, X21
	0x039C6E40 MOV X2, X19
	0x039C6E44 MOV W3, W23
	0x039C6E48 BL 0x22356CC
	0x039C6E4C LDR X5, [X24]
	0x039C6E50 STP X0, X1, [X31 + 0x88]
	0x039C6E54 ADD X4, X31, 0xDC
	0x039C6E58 MOV X0, X20
	0x039C6E5C MOV X1, X21
	0x039C6E60 MOV X2, X19
	0x039C6E64 MOV W3, W23
	0x039C6E68 BL 0x22356CC
	0x039C6E6C LDR X5, [X24]
	0x039C6E70 STP X0, X1, [X31 + 0x78]
	0x039C6E74 ADD X4, X31, 0xDC
	0x039C6E78 MOV X0, X20
	0x039C6E7C MOV X1, X21
	0x039C6E80 MOV X2, X19
	0x039C6E84 MOV W3, W23
	0x039C6E88 BL 0x22356CC
	0x039C6E8C STP X0, X1, [X31 + 0x68]
	0x039C6E90 CBZ X21, 0x39C6EC8
	0x039C6E94 ADD W9, W19, 0xF
	0x039C6E98 CMP W19, 0x0
	0x039C6E9C CSEL W9, W9, W19, LT
	0x039C6EA0 AND W9, W9, 0xFFFFFFF0
	0x039C6EA4 LDR W8, [X31 + 0xDC]
	0x039C6EA8 SUBS W9, W19, W9
	0x039C6EAC MOVZ W10, 0x10
	0x039C6EB0 SUB W9, W10, W9
	0x039C6EB4 CSEL W9, W31, W9, EQ
	0x039C6EB8 ADD W9, W9, W19
	0x039C6EBC CMP W8, W9
	0x039C6EC0 MOV W0, W31
	0x039C6EC4 B.NE 0x39C70D4
	0x039C6EC8 LDR X10, [X31 + 0x20]
	0x039C6ECC LDR X8, [X10 + 0x20]
	0x039C6ED0 CBZ X8, 0x39C70CC
	0x039C6ED4 ADRP X22, 0x756000
	0x039C6ED8 LDR X22, [X22 + 0x2B8]
	0x039C6EDC MOV X25, X31
	0x039C6EE0 MOV W26, W31
	0x039C6EE4 MOVZ W27, 0x28
	0x039C6EE8 STR X21, [X31 + 0x10]
	0x039C6EEC LDRSW X8, [X8 + 0x18]
	0x039C6EF0 CMP X25, X8
	0x039C6EF4 B.GE 0x39C70D0
	0x039C6EF8 LDR X8, [X10 + 0x28]
	0x039C6EFC CBZ X8, 0x39C70CC
	0x039C6F00 LDR W9, [X8 + 0x18]
	0x039C6F04 CMP X25, X9
	0x039C6F08 B.CS 0x39C70F4
	0x039C6F0C ADD X8, X8, X27
	0x039C6F10 LDR W9, [X8 + 0x4]
	0x039C6F14 ADRP X8, 0x78C000
	0x039C6F18 LDR X8, [X8 + 0x5D0]
	0x039C6F1C ADD X0, X31, 0xC8
	0x039C6F20 STR W9, [X31 + 0x64]
	0x039C6F24 LDR X3, [X8]
	0x039C6F28 LDR W8, [X31 + 0x1C]
	0x039C6F2C MUL W24, W8, W26
	0x039C6F30 MUL W23, W8, W9
	0x039C6F34 MOV W1, W24
	0x039C6F38 MOV W2, W23
	0x039C6F3C BL 0x23EC640
	0x039C6F40 LDR X3, [X22]
	0x039C6F44 STP X1, X0, [X31 + 0x50]
	0x039C6F48 ADD X0, X31, 0xB8
	0x039C6F4C MOV W1, W24
	0x039C6F50 MOV W2, W23
	0x039C6F54 BL 0x23CA8FC
	0x039C6F58 LDR X3, [X22]
	0x039C6F5C STP X1, X0, [X31 + 0x40]
	0x039C6F60 ADD X0, X31, 0xA8
	0x039C6F64 MOV W1, W24
	0x039C6F68 MOV W2, W23
	0x039C6F6C BL 0x23CA8FC
	0x039C6F70 STP X0, X1, [X31 + 0x30]
	0x039C6F74 CBZ X21, 0x39C6FE4
	0x039C6F78 LDR X3, [X22]
	0x039C6F7C ADD X0, X31, 0x98
	0x039C6F80 MOV W1, W24
	0x039C6F84 MOV W2, W23
	0x039C6F88 BL 0x23CA8FC
	0x039C6F8C LDR X3, [X22]
	0x039C6F90 MOV X28, X0
	0x039C6F94 MOV X29, X1
	0x039C6F98 ADD X0, X31, 0x88
	0x039C6F9C MOV W1, W24
	0x039C6FA0 MOV W2, W23
	0x039C6FA4 BL 0x23CA8FC
	0x039C6FA8 LDR X3, [X22]
	0x039C6FAC MOV X19, X0
	0x039C6FB0 MOV X21, X1
	0x039C6FB4 ADD X0, X31, 0x78
	0x039C6FB8 MOV W1, W24
	0x039C6FBC MOV W2, W23
	0x039C6FC0 BL 0x23CA8FC
	0x039C6FC4 LDR X3, [X22]
	0x039C6FC8 MOV X20, X0
	0x039C6FCC MOV X22, X1
	0x039C6FD0 ADD X0, X31, 0x68
	0x039C6FD4 MOV W1, W24
	0x039C6FD8 MOV W2, W23
	0x039C6FDC BL 0x23CA8FC
	0x039C6FE0 B 0x39C7000
	0x039C6FE4 MOV X28, X31
	0x039C6FE8 MOV X29, X31
	0x039C6FEC MOV X19, X31
	0x039C6FF0 MOV X20, X31
	0x039C6FF4 MOV X22, X31
	0x039C6FF8 MOV X0, X31
	0x039C6FFC MOV X1, X31
	0x039C7000 LDR X10, [X31 + 0x20]
	0x039C7004 LDR X8, [X10 + 0x20]
	0x039C7008 CBZ X8, 0x39C70CC
	0x039C700C LDR W9, [X8 + 0x18]
	0x039C7010 CMP X25, X9
	0x039C7014 B.CS 0x39C70F4
	0x039C7018 ADD X8, X8, X25, 0x3, LSL
	0x039C701C LDR X8, [X8 + 0x20]
	0x039C7020 LDR W9, [X31 + 0x2C]
	0x039C7024 CBZ W9, 0x39C7068
	0x039C7028 CBZ X8, 0x39C70CC
	0x039C702C LDR X11, [X31 + 0x58]
	0x039C7030 LDR X9, [X31 + 0x50]
	0x039C7034 STP X28, X29, [X8 + 0x140]
	0x039C7038 STP X19, X21, [X8 + 0x150]
	0x039C703C STP X20, X22, [X8 + 0x160]
	0x039C7040 STP X11, X9, [X8 + 0x110]
	0x039C7044 LDR X11, [X31 + 0x48]
	0x039C7048 LDR X9, [X31 + 0x40]
	0x039C704C STR X0, [X8 + 0x170]
	0x039C7050 STP X11, X9, [X8 + 0x120]
	0x039C7054 LDR X11, [X31 + 0x30]
	0x039C7058 LDR X9, [X31 + 0x38]
	0x039C705C STP X11, X9, [X8 + 0x130]
	0x039C7060 ADD X8, X8, 0x178
	0x039C7064 B 0x39C70A4
	0x039C7068 CBZ X8, 0x39C70CC
	0x039C706C LDR X11, [X31 + 0x58]
	0x039C7070 LDR X9, [X31 + 0x50]
	0x039C7074 STP X28, X29, [X8 + 0xD0]
	0x039C7078 STP X19, X21, [X8 + 0xE0]
	0x039C707C STP X20, X22, [X8 + 0xF0]
	0x039C7080 STP X11, X9, [X8 + 0xA0]
	0x039C7084 LDR X11, [X31 + 0x48]
	0x039C7088 LDR X9, [X31 + 0x40]
	0x039C708C STR X0, [X8 + 0x100]
	0x039C7090 STP X11, X9, [X8 + 0xB0]
	0x039C7094 LDR X11, [X31 + 0x30]
	0x039C7098 LDR X9, [X31 + 0x38]
	0x039C709C STP X11, X9, [X8 + 0xC0]
	0x039C70A0 ADD X8, X8, 0x108
	0x039C70A4 LDR W9, [X31 + 0x64]
	0x039C70A8 STR X1, [X8]
	0x039C70AC ADRP X22, 0x755000
	0x039C70B0 LDR X8, [X10 + 0x20]
	0x039C70B4 LDR X21, [X31 + 0x10]
	0x039C70B8 LDR X22, [X22 + 0x2B8]
	0x039C70BC ADD W26, W26, W9
	0x039C70C0 ADD X25, X25, 0x1
	0x039C70C4 ADD X27, X27, 0x10
	0x039C70C8 CBNZ X8, 0x39C6EEC
	0x039C70CC BL 0x1C16F20
	0x039C70D0 MOVZ W0, 0x1
	0x039C70D4 LDP X20, X19, [X31 + 0x130]
	0x039C70D8 LDP X22, X21, [X31 + 0x120]
	0x039C70DC LDP X24, X23, [X31 + 0x110]
	0x039C70E0 LDP X26, X25, [X31 + 0x100]
	0x039C70E4 LDP X28, X27, [X31 + 0xF0]
	0x039C70E8 LDP X29, X30, [X31 + 0xE0]
	0x039C70EC ADD X31, X31, 0x140
	0x039C70F0 RET
	0x039C70F4 BL 0x1C16F28
	0x039C70F8 STP X30, X21, [X31 - 0x20]!
	0x039C70FC STP X20, X19, [X31 + 0x10]
	0x039C7100 ADRP X21, 0xA1A000
	0x039C7104 ADRP X20, 0x78B000
	0x039C7108 LDRB W8, [X21 + 0xCD5]
	0x039C710C LDR X20, [X20 + 0xA90]
	0x039C7110 MOV X19, X0
	0x039C7114 TBNZ X8, 0x0, 0x39C712C
	0x039C7118 ADRP X0, 0x78B000
	0x039C711C LDR X0, [X0 + 0xA90]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], D9
	003 Move [X31+40], D8
	004 Move [X31+48], X30
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X20, 0xA1C000
	011 Move X22, 0x78C000
	012 Move W8, [X20+3302]
	013 Move X22, [X22+3912]
	014 Move V8, V0
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x72E000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x78D000
	025 Move X0, [X0+864]
	026 Call 0x1C17CF4
	027 Move X0, 0x78D000
	028 Move X0, [X0+872]
	029 Call 0x1C17CF4
	030 Move X0, 0x78D000
	031 Move X0, [X0+880]
	032 Call 0x1C17CF4
	033 Move X0, 0x78D000
	034 Move X0, [X0+888]
	035 Call 0x1C17CF4
	036 Move X0, 0x78D000
	037 Move X0, [X0+608]
	038 Call 0x1C17CF4
	039 Move X0, 0x78C000
	040 Move X0, [X0+3912]
	041 Call 0x1C17CF4
	042 Move X0, 0x78D000
	043 Move X0, [X0+2600]
	044 Call 0x1C17CF4
	045 Move X0, 0x78D000
	046 Move X0, [X0+2608]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+3302], W8
	050 Move X0, [X22]
	051 Move [X31+8], X31
	052 Move [X31+16], X31
	053 Move [X31+24], X31
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X23, 0xA1C000
	059 Move W8, [X23+3257]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x78C000
	063 Move X0, [X0+3912]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X23+3257], W8
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X22]
	073 Move X8, [X0+184]
	074 Move X0, [X8+8]
	075 Compare X0, 0
	076 JumpIfEqual {275}
	077 Move X1, X31
	078 Call ProbeReferenceVolume.get_enableScenarioBlending, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {200}
	083 Move X1, [X19+112]
	084 Move S0, 1
	085 NotImplemented "Instruction FMIN not yet implemented."
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Move S1, W31
	088 Move X0, X21
	089 Move X2, X31
	090 NotImplemented "Instruction FCSEL not yet implemented."
	091 Call String.op_Equality, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {103}
	096 Move X0, X21
	097 Move X1, X31
	098 Call String.IsNullOrEmpty, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {104}
	103 Move X21, X31
	104 Move X1, [X19+120]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move S0, W31
	107 Move X0, X21
	108 Move X2, X31
	109 NotImplemented "Instruction FCSEL not yet implemented."
	110 Call String.op_Equality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {143}
	115 Move X20, 0xA14000
	116 Move W8, [X20+1450]
	117 Move V9, [X19+128]
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0x735000
	121 Move X0, [X0+1208]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X20+1450], W8
	125 Move X8, 0x735000
	126 Move X8, [X8+1208]
	127 Move X9, -49131520
	128 Move V0, [X9+576]
	129 NotImplemented "Instruction FABS not yet implemented."
	130 Move X8, [X8]
	131 NotImplemented "Instruction FABS not yet implemented."
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 NotImplemented "Instruction FCSEL not yet implemented."
	134 Move X8, [X8+184]
	135 Multiply S0, S1, S0
	136 Move S1, 8
	137 Move V3, [X8]
	138 Multiply S1, S3, S1
	139 NotImplemented "Instruction FCMP not yet implemented."
	140 NotImplemented "Instruction FCSEL not yet implemented."
	141 NotImplemented "Instruction FABD not yet implemented."
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 Move X1, [X19+120]
	144 Move X0, X21
	145 Move X2, X31
	146 Call String.op_Inequality, X0, X1
	147 Move W20, W0
	148 Move [X19+120], X21
	149 Move [X19+128], S8
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {238}
	154 Move X0, [X22]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move W8, [X23+3257]
	160 Compare W8, 0
	161 JumpIfNotEqual {167}
	162 Move X0, 0x78C000
	163 Move X0, [X0+3912]
	164 Call 0x1C17CF4
	165 Move W8, 1
	166 Move [X23+3257], W8
	167 Move X0, [X22]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {173}
	171 Call 0x1C17DFC
	172 Move X0, [X22]
	173 Move X8, [X0+184]
	174 Move X8, [X8+8]
	175 Compare X8, 0
	176 JumpIfEqual {275}
	177 Move X0, [X8+392]
	178 Compare X0, 0
	179 JumpIfEqual {275}
	180 Move X8, 0x78D000
	181 Move X8, [X8+888]
	182 Move X1, [X8]
	183 Add X8, X31, 8
	184 Call List`1<Object>.GetEnumerator, X0
	185 Move X21, 0x78D000
	186 Move X21, [X21+872]
	187 Move X1, [X21]
	188 Add X0, X31, 8
	189 Call Enumerator<Object>.MoveNext, X0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {233}
	194 Move X0, [X31+24]
	195 Compare X0, 0
	196 JumpIfEqual {274}
	197 Move X1, [X19+112]
	198 Move X2, [X19+120]
	199 Call ProbeVolumePerSceneData.UpdateActiveScenario, X0, X1, X2
	200 Move X8, 0x78D000
	201 Move X8, [X8+608]
	202 Move X0, [X8]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X31
	208 Call ProbeBrickBlendingPool.get_isSupported
	209 Move X8, 0x72E000
	210 Move X8, [X8+2600]
	211 Move W19, W0
	212 Move X8, [X8]
	213 Move W9, [X8+224]
	214 Compare W9, 0
	215 JumpIfEqual {222}
	216 Move TEMP, X19
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {228}
	220 Move X8, 0x78D000
	221 Move X8, [X8+2600]
	222 Move X0, X8
	223 Call 0x1C17DFC
	224 Move TEMP, X19
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {220}
	228 Move X8, 0x78C000
	229 Move X8, [X8+2608]
	230 Move X0, [X8]
	231 Move X1, X31
	232 Call Debug.LogError, X0
	233 Move X8, 0x78C000
	234 Move X8, [X8+864]
	235 Add X0, X31, 8
	236 Move X1, [X8]
	237 Call Enumerator<Object>.Dispose, X0
	238 Move X0, [X22]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move W8, [X23+3257]
	244 Compare W8, 0
	245 JumpIfNotEqual {251}
	246 Move X0, 0x78B000
	247 Move X0, [X0+3912]
	248 Call 0x1C17CF4
	249 Move W8, 1
	250 Move [X23+3257], W8
	251 Move X0, [X22]
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {257}
	255 Call 0x1C17DFC
	256 Move X0, [X22]
	257 Move X8, [X0+184]
	258 Move X0, [X8+8]
	259 Compare X0, 0
	260 JumpIfEqual {275}
	261 And W1, W20, 1
	262 Move X2, X31
	263 Call ProbeReferenceVolume.ScenarioBlendingChanged, X0, X1
	264 Move X20, [X31+80]
	265 Move X19, [X31+88]
	266 Move X22, [X31+64]
	267 Move X21, [X31+72]
	268 Move X30, [X31+48]
	269 Move X23, [X31+56]
	270 Move D9, [X31+32]
	271 Move D8, [X31+40]
	272 Add X31, X31, 96
	273 Return 
	274 Call 0x1C17F20
	275 Call 0x1C17F20
	276 Move X19, X0
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X0, X19
	279 Call 0x3EB2AD0
	280 Move X21, [X0]
	281 Call 0x3EB2AE0
	282 Move X8, 0x78C000
	283 Move X8, [X8+864]
	284 Add X0, X31, 8
	285 Move X1, [X8]
	286 Call Enumerator<Object>.Dispose, X0
	287 Compare X21, 0
	288 JumpIfEqual {238}
	289 Move X0, X21
	290 Call 0x1C17F18
	291 Move X21, X31
	292 Move X19, X0
	293 Move X8, 0x78C000
	294 Move X8, [X8+864]
	295 Move X1, [X8]
	296 Add X0, X31, 8
	297 Call Enumerator<Object>.Dispose, X0
	298 Compare X21, 0
	299 JumpIfNotEqual {302}
	300 Move X0, X19
	301 Call 0x1D2D690
	302 Move X0, X21
	303 Call 0x1C17F18
	304 Call 0x1991590

Method: System.Void .ctor(UnityEngine.Object parentAsset, System.String parentSceneDataPropertyName)

Disassembly:
	0x039C940C BL 0x1C16CF4
	0x039C9410 ADRP X0, 0x789000
	0x039C9414 LDR X0, [X0 + 0x9E0]
	0x039C9418 BL 0x1C16CF4
	0x039C941C ADRP X0, 0x751000
	0x039C9420 LDR X0, [X0 + 0xFC8]
	0x039C9424 BL 0x1C16CF4
	0x039C9428 ADRP X0, 0x789000
	0x039C942C LDR X0, [X0 + 0x9F8]
	0x039C9430 BL 0x1C16CF4
	0x039C9434 ADRP X0, 0x751000
	0x039C9438 LDR X0, [X0 + 0xFD0]
	0x039C943C BL 0x1C16CF4
	0x039C9440 ADRP X0, 0x751000
	0x039C9444 LDR X0, [X0 + 0xFD8]
	0x039C9448 BL 0x1C16CF4
	0x039C944C ADRP X0, 0x789000
	0x039C9450 LDR X0, [X0 + 0xA08]
	0x039C9454 BL 0x1C16CF4
	0x039C9458 ADRP X0, 0x751000
	0x039C945C LDR X0, [X0 + 0xFE0]
	0x039C9460 BL 0x1C16CF4
	0x039C9464 ADRP X0, 0x789000
	0x039C9468 LDR X0, [X0 + 0xA18]
	0x039C946C BL 0x1C16CF4
	0x039C9470 MOVZ W8, 0x1
	0x039C9474 STRB W8, [X20 + 0xCEE]
	0x039C9478 STP X31, X31, [X31 + 0x60]
	0x039C947C STR X31, [X31 + 0x70]
	0x039C9480 STP X31, X31, [X31 + 0x40]
	0x039C9484 STR X31, [X31 + 0x50]
	0x039C9488 LDR X0, [X19 + 0x68]
	0x039C948C CBZ X0, 0x39C9670
	0x039C9490 ADRP X8, 0x789000
	0x039C9494 LDR X8, [X8 + 0xA18]
	0x039C9498 ADRP X23, 0x789000
	0x039C949C ADRP X24, 0x751000
	0x039C94A0 ADRP X25, 0x751000
	0x039C94A4 ADRP X26, 0x789000
	0x039C94A8 LDR X23, [X23 + 0x9F8]
	0x039C94AC LDR X24, [X24 + 0xFE0]
	0x039C94B0 LDR X25, [X25 + 0xFD0]
	0x039C94B4 LDR X26, [X26 + 0xC60]
	0x039C94B8 LDR X1, [X8]
	0x039C94BC ADRP X27, 0x789000
	0x039C94C0 ADRP X22, 0x751000
	0x039C94C4 ADRP X21, 0x789000
	0x039C94C8 LDR X27, [X27 + 0xC68]
	0x039C94CC LDR X22, [X22 + 0xFC8]
	0x039C94D0 LDR X21, [X21 + 0x9E0]
	0x039C94D4 ADD X8, X31, 0x80
	0x039C94D8 BL 0x301CB58
	0x039C94DC LDR V0, [X31 + 0x8]
	0x039C94E0 LDR X8, [X31 + 0x90]
	0x039C94E4 STR V0, [X31 + 0x6]
	0x039C94E8 STR X8, [X31 + 0x70]
	0x039C94EC LDR X1, [X23]
	0x039C94F0 ADD X0, X31, 0x60
	0x039C94F4 BL 0x2BC4350
	0x039C94F8 TBZ X0, 0x0, 0x39C95E4
	0x039C94FC LDR X28, [X31 + 0x70]
	0x039C9500 CBZ X28, 0x39C9660
	0x039C9504 LDR X0, [X28 + 0x18]
	0x039C9508 CBZ X0, 0x39C9664
	0x039C950C LDR X1, [X24]
	0x039C9510 ADD X8, X31, 0x10
	0x039C9514 BL 0x301CB58
	0x039C9518 LDR V0, [X31 + 0x1]
	0x039C951C LDR X8, [X31 + 0x20]
	0x039C9520 ADD X29, X28, 0x20
	0x039C9524 STR V0, [X31 + 0x4]
	0x039C9528 STR X8, [X31 + 0x50]
	0x039C952C LDR X1, [X25]
	0x039C9530 ADD X0, X31, 0x40
	0x039C9534 BL 0x2BC4350
	0x039C9538 TBZ X0, 0x0, 0x39C9594
	0x039C953C LDP V2, V0, [X29 + 0x10]
	0x039C9540 LDR V1, [X29]
	0x039C9544 LDR X0, [X19 + 0x60]
	0x039C9548 LDR X20, [X31 + 0x50]
	0x039C954C STP V2, V0, [X31 + 0x20]
	0x039C9550 STR V1, [X31 + 0x1]
	0x039C9554 CBZ X0, 0x39C95AC
	0x039C9558 LDP V0, V1, [X31 + 0x10]
	0x039C955C LDR V2, [X31 + 0x3]
	0x039C9560 LDR X3, [X26]
	0x039C9564 STP V0, V1, [X31 + 0x80]
	0x039C9568 STR V2, [X31 + 0xA]
	0x039C956C ADD X2, X31, 0x80
	0x039C9570 MOV X1, X20
	0x039C9574 BL 0x2AAB648
	0x039C9578 LDR X0, [X19 + 0x58]
	0x039C957C CBZ X0, 0x39C95B4
	0x039C9580 LDR X2, [X28 + 0x50]
	0x039C9584 LDR X3, [X27]
	0x039C9588 MOV X1, X20
	0x039C958C BL 0x2AA5084
	0x039C9590 B 0x39C952C
	0x039C9594 MOV X20, X31
	0x039C9598 LDR X1, [X22]
	0x039C959C ADD X0, X31, 0x40
	0x039C95A0 BL 0x2BC434C
	0x039C95A4 CBZ X20, 0x39C94EC
	0x039C95A8 B 0x39C9668
	0x039C95AC BL 0x1C16F20
	0x039C95B0 B 0x39C9674
	0x039C95B4 BL 0x1C16F20
	0x039C95B8 B 0x39C9674
	0x039C95BC B 0x39C95CC
	0x039C95C0 B 0x39C95CC
	0x039C95C4 B 0x39C95CC
	0x039C95C8 B 0x39C95CC
	0x039C95CC CMP W1, 0x1
	0x039C95D0 B.NE 0x39C9610
	0x039C95D4 BL 0x3EB1AD0
	0x039C95D8 LDR X20, [X0]
	0x039C95DC BL 0x3EB1AE0
	0x039C95E0 B 0x39C9598
	0x039C95E4 LDR X1, [X21]
	0x039C95E8 ADD X0, X31, 0x60
	0x039C95EC BL 0x2BC434C
	0x039C95F0 LDP X20, X19, [X31 + 0x100]
	0x039C95F4 LDP X22, X21, [X31 + 0xF0]
	0x039C95F8 LDP X24, X23, [X31 + 0xE0]
	0x039C95FC LDP X26, X25, [X31 + 0xD0]
	0x039C9600 LDP X28, X27, [X31 + 0xC0]
	0x039C9604 LDP X29, X30, [X31 + 0xB0]
	0x039C9608 ADD X31, X31, 0x110
	0x039C960C RET
	0x039C9610 STR X1, [X31 + 0x8]
	0x039C9614 MOV X19, X0
	0x039C9618 MOV X20, X31
	0x039C961C LDR X1, [X22]
	0x039C9620 ADD X0, X31, 0x40
	0x039C9624 BL 0x2BC434C
	0x039C9628 LDR X1, [X31 + 0x8]
	0x039C962C MOV X0, X19
	0x039C9630 CBNZ X20, 0x39C9680
	0x039C9634 CMP W1, 0x1
	0x039C9638 B.NE 0x39C9674
	0x039C963C BL 0x3EB1AD0
	0x039C9640 LDR X19, [X0]
	0x039C9644 BL 0x3EB1AE0
	0x039C9648 LDR X1, [X21]
	0x039C964C ADD X0, X31, 0x60
	0x039C9650 BL 0x2BC434C
	0x039C9654 CBZ X19, 0x39C95F0
	0x039C9658 MOV X0, X19
	0x039C965C BL 0x1C16F18
	0x039C9660 BL 0x1C16F20
	0x039C9664 BL 0x1C16F20
	0x039C9668 MOV X0, X20
	0x039C966C BL 0x1C16F18
	0x039C9670 BL 0x1C16F20
	0x039C9674 MOV X20, X0
	0x039C9678 MOV X19, X31
	0x039C967C B 0x39C968C
	0x039C9680 MOV X0, X20
	0x039C9684 BL 0x1C16F18
	0x039C9688 MOV X20, X0
	0x039C968C LDR X1, [X21]
	0x039C9690 ADD X0, X31, 0x60
	0x039C9694 BL 0x2BC434C
	0x039C9698 CBNZ X19, 0x39C96A4
	0x039C969C MOV X0, X20
	0x039C96A0 BL 0x1D2C690
	0x039C96A4 MOV X0, X19
	0x039C96A8 BL 0x1C16F18
	0x039C96AC BL 0x1990590
	0x039C96B0 MOV X19, X0
	0x039C96B4 STR X1, [X31 + 0x8]
	0x039C96B8 B 0x39C961C
	0x039C96BC B 0x39C9634
	0x039C96C0 B 0x39C9634
	0x039C96C4 B 0x39C9634
	0x039C96C8 B 0x39C9634
	0x039C96CC B 0x39C9634
	0x039C96D0 B 0x39C9634
	0x039C96D4 STR X29, [X31 - 0x50]!
	0x039C96D8 STP X30, X25, [X31 + 0x10]
	0x039C96DC STP X24, X23, [X31 + 0x20]
	0x039C96E0 STP X22, X21, [X31 + 0x30]
	0x039C96E4 STP X20, X19, [X31 + 0x40]
	0x039C96E8 SUB X31, X31, 0x1D0
	0x039C96EC ADRP X20, 0xA18000
	0x039C96F0 LDRB W8, [X20 + 0xCEA]
	0x039C96F4 MOV X19, X0
	0x039C96F8 TBNZ X8, 0x0, 0x39C98CC
	0x039C96FC ADRP X0, 0x789000
	0x039C9700 LDR X0, [X0 + 0xC70]
	0x039C9704 BL 0x1C16CF4
	0x039C9708 ADRP X0, 0x789000
	0x039C970C LDR X0, [X0 + 0xC78]
	0x039C9710 BL 0x1C16CF4
	0x039C9714 ADRP X0, 0x789000
	0x039C9718 LDR X0, [X0 + 0xC80]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xA19000
	014 Move X9, 0x789000
	015 Move W8, [X22+3303]
	016 Move X9, [X9+3912]
	017 Move X20, X2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {85}
	024 Move X0, 0x78A000
	025 Move X0, [X0+2872]
	026 Move X23, X9
	027 Call 0x1C17CF4
	028 Move X0, 0x78A000
	029 Move X0, [X0+2880]
	030 Call 0x1C17CF4
	031 Move X0, 0x786000
	032 Move X0, [X0+904]
	033 Call 0x1C17CF4
	034 Move X0, 0x78A000
	035 Move X0, [X0+2888]
	036 Call 0x1C17CF4
	037 Move X0, 0x786000
	038 Move X0, [X0+896]
	039 Call 0x1C17CF4
	040 Move X0, 0x78A000
	041 Move X0, [X0+2896]
	042 Call 0x1C17CF4
	043 Move X0, 0x78A000
	044 Move X0, [X0+2904]
	045 Call 0x1C17CF4
	046 Move X0, 0x78A000
	047 Move X0, [X0+2912]
	048 Call 0x1C17CF4
	049 Move X0, 0x78A000
	050 Move X0, [X0+2920]
	051 Call 0x1C17CF4
	052 Move X0, 0x78A000
	053 Move X0, [X0+2928]
	054 Call 0x1C17CF4
	055 Move X0, 0x78A000
	056 Move X0, [X0+2936]
	057 Call 0x1C17CF4
	058 Move X0, 0x78A000
	059 Move X0, [X0+2944]
	060 Call 0x1C17CF4
	061 Move X0, 0x78A000
	062 Move X0, [X0+2952]
	063 Call 0x1C17CF4
	064 Move X0, 0x78A000
	065 Move X0, [X0+2960]
	066 Call 0x1C17CF4
	067 Move X0, 0x78A000
	068 Move X0, [X0+2968]
	069 Call 0x1C17CF4
	070 Move X0, 0x78A000
	071 Move X0, [X0+2976]
	072 Call 0x1C17CF4
	073 Move X0, 0x78A000
	074 Move X0, [X0+2984]
	075 Call 0x1C17CF4
	076 Move X0, 0x78A000
	077 Move X0, [X0+2992]
	078 Call 0x1C17CF4
	079 Move X0, 0x789000
	080 Move X0, [X0+3912]
	081 Call 0x1C17CF4
	082 Move X9, X23
	083 Move W8, 1
	084 Move [X22+3303], W8
	085 Move X25, 0x78A000
	086 Move X24, 0x78A000
	087 Move X22, 0x786000
	088 Move X25, [X25+2896]
	089 Move X24, [X24+2880]
	090 Move X22, [X22+896]
	091 Move X0, [X9]
	092 Move X29, 0x78A000
	093 Move X28, 0x78A000
	094 Move X23, 0x78A000
	095 Move X27, 0x78A000
	096 Move X26, 0x78A000
	097 Move X29, [X29+2968]
	098 Move X28, [X28+2928]
	099 Move W8, [X0+224]
	100 Move X23, [X23+2960]
	101 Move X27, [X27+2944]
	102 Move X26, [X26+2984]
	103 Compare W8, 0
	104 JumpIfNotEqual {118}
	105 Move X29, X28
	106 Move X28, X23
	107 Move X23, X27
	108 Move X27, X26
	109 Move X26, X9
	110 Call 0x1C17DFC
	111 Move X0, [X26]
	112 Move X26, X27
	113 Move X27, X23
	114 Move X23, X28
	115 Move X28, X29
	116 Move X29, 0x78A000
	117 Move X29, [X29+2968]
	118 Move X8, [X0+184]
	119 Move X0, X19
	120 Move X1, X31
	121 Move X8, [X8]
	122 Move [X19+112], X8
	123 Call Object..ctor, X0
	124 Move [X19+56], X21
	125 Move [X19+64], X20
	126 Move X0, [X25]
	127 Call 0x1C17F10
	128 Move X1, [X24]
	129 Move X20, X0
	130 Call Dictionary`2<Object, Bounds>..ctor, X0
	131 Move [X19+72], X20
	132 Move X0, [X22]
	133 Call 0x1C17F10
	134 Move X8, 0x786000
	135 Move X8, [X8+904]
	136 Move X20, X0
	137 Move X1, [X8]
	138 Call Dictionary`2<Object, Boolean>..ctor, X0
	139 Move [X19+80], X20
	140 Move X8, 0x78A000
	141 Move X8, [X8+2904]
	142 Move X0, [X8]
	143 Call 0x1C17F10
	144 Move X8, 0x78A000
	145 Move X8, [X8+2872]
	146 Move X20, X0
	147 Move X1, [X8]
	148 Call Dictionary`2<Object, Object>..ctor, X0
	149 Move [X19+88], X20
	150 Move X8, 0x78A000
	151 Move X8, [X8+2912]
	152 Move X0, [X8]
	153 Call 0x1C17F10
	154 Move X8, 0x78A000
	155 Move X8, [X8+2888]
	156 Move X20, X0
	157 Move X1, [X8]
	158 Call Dictionary`2<Object, ProbeVolumeBakingProcessSettings>..ctor, X0
	159 Move [X19+96], X20
	160 Move X8, 0x78A000
	161 Move X8, [X8+2976]
	162 Move X0, [X8]
	163 Call 0x1C17F10
	164 Move X8, 0x78A000
	165 Move X8, [X8+2952]
	166 Move X20, X0
	167 Move X1, [X8]
	168 Call List`1<Object>..ctor, X0
	169 Move [X19+104], X20
	170 Move X8, 0x78A000
	171 Move X8, [X8+2992]
	172 Move X0, [X8]
	173 Call 0x1C17F10
	174 Move X8, 0x78A000
	175 Move X8, [X8+2920]
	176 Move X20, X0
	177 Move X1, [X8]
	178 Call List`1<SerializableBoundItem>..ctor, X0
	179 Move [X19+16], X20
	180 Move X0, [X29]
	181 Call 0x1C17F10
	182 Move X1, [X28]
	183 Move X20, X0
	184 Call List`1<SerializableHasPVItem>..ctor, X0
	185 Move [X19+24], X20
	186 Move X0, [X23]
	187 Call 0x1C17F10
	188 Move X1, [X27]
	189 Move X20, X0
	190 Call List`1<SerializablePVProfile>..ctor, X0
	191 Move [X19+32], X20
	192 Move X0, [X26]
	193 Call 0x1C17F10
	194 Move X8, 0x78A000
	195 Move X8, [X8+2936]
	196 Move X20, X0
	197 Move X1, [X8]
	198 Call List`1<SerializablePVBakeSettings>..ctor, X0
	199 Move [X19+40], X20
	200 Move X0, X19
	201 Move X20, [X31+80]
	202 Move X19, [X31+88]
	203 Move X22, [X31+64]
	204 Move X21, [X31+72]
	205 Move X24, [X31+48]
	206 Move X23, [X31+56]
	207 Move X26, [X31+32]
	208 Move X25, [X31+40]
	209 Move X28, [X31+16]
	210 Move X27, [X31+24]
	211 Move X29, [X31+96]
	212 Move X30, [X31+104]

Method: System.Void SetParentObject(UnityEngine.Object parent, System.String parentSceneDataPropertyName)

Disassembly:
	0x039C98F4 STR X31, [X31 + 0x60]
	0x039C98F8 STP X31, X31, [X31 + 0x38]

ISIL:
	001 Move [X0+56], X1
	002 Move [X0+64], X2
	003 Call ProbeVolumeSceneData.UpdateBakingSets, X0
	004 Return 

Method: System.Void OnAfterDeserialize()

Disassembly:
	0x039C98FC STP V0, V0, [X31 + 0x80]
	0x039C9900 STR V0, [X31 + 0x7]
	0x039C9904 STR X31, [X31 + 0x48]
	0x039C9908 LDR X8, [X19 + 0x48]
	0x039C990C CBZ X8, 0x39C9F60
	0x039C9910 LDR X8, [X19 + 0x50]
	0x039C9914 CBZ X8, 0x39C9F60
	0x039C9918 LDR X8, [X19 + 0x60]
	0x039C991C CBZ X8, 0x39C9F60
	0x039C9920 LDR X8, [X19 + 0x58]
	0x039C9924 CBZ X8, 0x39C9F60
	0x039C9928 LDR X9, [X19 + 0x10]
	0x039C992C CBZ X9, 0x39C9F60
	0x039C9930 LDR X8, [X19 + 0x18]
	0x039C9934 CBZ X8, 0x39C9F60
	0x039C9938 LDR X10, [X19 + 0x28]
	0x039C993C CBZ X10, 0x39C9F60
	0x039C9940 LDR X10, [X19 + 0x20]
	0x039C9944 CBZ X10, 0x39C9F60
	0x039C9948 LDR X10, [X19 + 0x30]
	0x039C994C CBZ X10, 0x39C9F60
	0x039C9950 LDP W2, W10, [X9 + 0x18]
	0x039C9954 ADD W10, W10, 0x1
	0x039C9958 CMP W2, 0x1
	0x039C995C STP W31, W10, [X9 + 0x18]
	0x039C9960 B.LT 0x39C997C
	0x039C9964 LDR X0, [X9 + 0x10]
	0x039C9968 MOV W1, W31
	0x039C996C MOV X3, X31
	0x039C9970 BL 0x339FA34
	0x039C9974 LDR X8, [X19 + 0x18]
	0x039C9978 CBZ X8, 0x39C9FB4
	0x039C997C LDP W2, W9, [X8 + 0x18]
	0x039C9980 ADD W9, W9, 0x1
	0x039C9984 CMP W2, 0x1
	0x039C9988 STP W31, W9, [X8 + 0x18]
	0x039C998C B.LT 0x39C99A0
	0x039C9990 LDR X0, [X8 + 0x10]
	0x039C9994 MOV W1, W31
	0x039C9998 MOV X3, X31
	0x039C999C BL 0x339FA34
	0x039C99A0 LDR X8, [X19 + 0x20]
	0x039C99A4 CBZ X8, 0x39C9FB4
	0x039C99A8 LDP W2, W9, [X8 + 0x18]
	0x039C99AC ADD W9, W9, 0x1
	0x039C99B0 CMP W2, 0x1
	0x039C99B4 STP W31, W9, [X8 + 0x18]
	0x039C99B8 B.LT 0x39C99CC
	0x039C99BC LDR X0, [X8 + 0x10]
	0x039C99C0 MOV W1, W31
	0x039C99C4 MOV X3, X31
	0x039C99C8 BL 0x339FA34
	0x039C99CC LDR X8, [X19 + 0x28]
	0x039C99D0 CBZ X8, 0x39C9FB4
	0x039C99D4 LDP W2, W9, [X8 + 0x18]
	0x039C99D8 ADD W9, W9, 0x1
	0x039C99DC CMP W2, 0x1
	0x039C99E0 STP W31, W9, [X8 + 0x18]
	0x039C99E4 B.LT 0x39C99F8
	0x039C99E8 LDR X0, [X8 + 0x10]
	0x039C99EC MOV W1, W31
	0x039C99F0 MOV X3, X31
	0x039C99F4 BL 0x339FA34
	0x039C99F8 LDR X8, [X19 + 0x30]
	0x039C99FC CBZ X8, 0x39C9FB4
	0x039C9A00 LDP W2, W9, [X8 + 0x18]
	0x039C9A04 ADD W9, W9, 0x1
	0x039C9A08 CMP W2, 0x1
	0x039C9A0C STP W31, W9, [X8 + 0x18]
	0x039C9A10 B.LT 0x39C9A24
	0x039C9A14 LDR X0, [X8 + 0x10]
	0x039C9A18 MOV W1, W31
	0x039C9A1C MOV X3, X31
	0x039C9A20 BL 0x339FA34
	0x039C9A24 LDR X0, [X19 + 0x48]
	0x039C9A28 CBZ X0, 0x39C9FB4
	0x039C9A2C ADRP X8, 0x789000
	0x039C9A30 LDR X8, [X8 + 0xC90]
	0x039C9A34 LDR X1, [X8]
	0x039C9A38 BL 0x2A8C618
	0x039C9A3C CBZ X0, 0x39C9FB4
	0x039C9A40 ADRP X8, 0x789000
	0x039C9A44 LDR X8, [X8 + 0xD18]
	0x039C9A48 LDR X1, [X8]
	0x039C9A4C ADD X8, X31, 0x190
	0x039C9A50 BL 0x2EC40C0
	0x039C9A54 LDR V0, [X31 + 0x19]
	0x039C9A58 LDR X8, [X31 + 0x1A0]
	0x039C9A5C ADRP X21, 0x789000
	0x039C9A60 ADRP X22, 0x789000
	0x039C9A64 LDR X21, [X21 + 0xCE0]
	0x039C9A68 LDR X22, [X22 + 0xC70]
	0x039C9A6C STR V0, [X31 + 0x10]
	0x039C9A70 STR X8, [X31 + 0x110]
	0x039C9A74 ADRP X24, 0x789000
	0x039C9A78 LDR X24, [X24 + 0xD28]
	0x039C9A7C ADD X9, X31, 0x140
	0x039C9A80 ADD X23, X9, 0x8
	0x039C9A84 LDR X1, [X21]
	0x039C9A88 ADD X0, X31, 0x100
	0x039C9A8C BL 0x2C06B68
	0x039C9A90 TBZ X0, 0x0, 0x39C9B58
	0x039C9A94 LDR X0, [X19 + 0x48]
	0x039C9A98 CBZ X0, 0x39C9F88
	0x039C9A9C LDR X20, [X31 + 0x110]
	0x039C9AA0 LDR X2, [X22]
	0x039C9AA4 ADD X8, X31, 0x190
	0x039C9AA8 MOV X1, X20
	0x039C9AAC BL 0x2A8C798
	0x039C9AB0 LDR V0, [X31 + 0x19]
	0x039C9AB4 LDR X8, [X31 + 0x1A0]
	0x039C9AB8 STR V0, [X31 + 0xE]
	0x039C9ABC STR X8, [X31 + 0xF0]
	0x039C9AC0 LDR X0, [X19 + 0x10]
	0x039C9AC4 STR V0, [X31 + 0x19]
	0x039C9AC8 STR X8, [X31 + 0x1A0]
	0x039C9ACC CBZ X0, 0x39C9F8C
	0x039C9AD0 LDR V0, [X31 + 0x19]
	0x039C9AD4 LDR X8, [X31 + 0x1A0]
	0x039C9AD8 LDR X9, [X24]
	0x039C9ADC STR V0, [X31 + 0x12]
	0x039C9AE0 STR X8, [X31 + 0x130]
	0x039C9AE4 LDR W10, [X0 + 0x1C]
	0x039C9AE8 LDR X8, [X0 + 0x10]
	0x039C9AEC ADD W10, W10, 0x1
	0x039C9AF0 STR W10, [X0 + 0x1C]
	0x039C9AF4 CBZ X8, 0x39C9F84
	0x039C9AF8 LDRSW X10, [X0 + 0x18]
	0x039C9AFC LDR W11, [X8 + 0x18]
	0x039C9B00 CMP W10, W11
	0x039C9B04 B.CS 0x39C9B2C
	0x039C9B08 ADD W9, W10, 0x1
	0x039C9B0C ADD X8, X8, X10, 0x5, LSL
	0x039C9B10 STR W9, [X0 + 0x18]
	0x039C9B14 STR X20, [X8 + 0x20]
	0x039C9B18 LDR X9, [X31 + 0x130]
	0x039C9B1C LDR V0, [X31 + 0x12]
	0x039C9B20 STR X9, [X8 + 0x38]
	0x039C9B24 STUR V0, [X8 + 0x28]
	0x039C9B28 B 0x39C9A84
	0x039C9B2C LDR X8, [X9 + 0x20]
	0x039C9B30 LDR X9, [X31 + 0x130]
	0x039C9B34 LDR V0, [X31 + 0x12]
	0x039C9B38 LDR X8, [X8 + 0xC0]
	0x039C9B3C LDR X2, [X8 + 0x70]
	0x039C9B40 STR X20, [X31 + 0x140]
	0x039C9B44 STR X9, [X23 + 0x10]
	0x039C9B48 STR V0, [X23]
	0x039C9B4C ADD X1, X31, 0x140
	0x039C9B50 BL 0x31262B4
	0x039C9B54 B 0x39C9A84
	0x039C9B58 ADRP X8, 0x789000
	0x039C9B5C LDR X8, [X8 + 0xCA8]
	0x039C9B60 ADD X0, X31, 0x100
	0x039C9B64 LDR X1, [X8]
	0x039C9B68 BL 0x2C06B64
	0x039C9B6C LDR X0, [X19 + 0x50]
	0x039C9B70 CBZ X0, 0x39C9FB4
	0x039C9B74 ADRP X8, 0x785000
	0x039C9B78 LDR X8, [X8 + 0x260]
	0x039C9B7C LDR X1, [X8]
	0x039C9B80 BL 0x2A89534
	0x039C9B84 CBZ X0, 0x39C9FB4
	0x039C9B88 ADRP X8, 0x789000
	0x039C9B8C LDR X8, [X8 + 0xD20]
	0x039C9B90 LDR X1, [X8]
	0x039C9B94 ADD X8, X31, 0x190
	0x039C9B98 BL 0x2EC3AD4
	0x039C9B9C LDR V0, [X31 + 0x19]
	0x039C9BA0 LDR X8, [X31 + 0x1A0]
	0x039C9BA4 ADRP X22, 0x789000
	0x039C9BA8 ADRP X23, 0x789000
	0x039C9BAC LDR X22, [X22 + 0xCD8]
	0x039C9BB0 LDR X23, [X23 + 0xC88]
	0x039C9BB4 STR V0, [X31 + 0xC]
	0x039C9BB8 STR X8, [X31 + 0xD0]
	0x039C9BBC ADRP X24, 0x789000
	0x039C9BC0 LDR X24, [X24 + 0xD38]
	0x039C9BC4 MOV X20, X31
	0x039C9BC8 LDR X1, [X22]
	0x039C9BCC ADD X0, X31, 0xC0
	0x039C9BD0 BL 0x2C06378
	0x039C9BD4 TBZ X0, 0x0, 0x39C9C5C
	0x039C9BD8 LDR X0, [X19 + 0x50]
	0x039C9BDC CBZ X0, 0x39C9F94
	0x039C9BE0 LDR X21, [X31 + 0xD0]
	0x039C9BE4 LDR X2, [X23]
	0x039C9BE8 MOV X1, X21
	0x039C9BEC BL 0x2A896B4
	0x039C9BF0 MOV W8, W0
	0x039C9BF4 LDR X0, [X19 + 0x18]
	0x039C9BF8 CBZ X0, 0x39C9F98
	0x039C9BFC LDR W11, [X0 + 0x1C]
	0x039C9C00 LDR X9, [X0 + 0x10]
	0x039C9C04 LDR X10, [X24]
	0x039C9C08 ADD W11, W11, 0x1
	0x039C9C0C STR W11, [X0 + 0x1C]
	0x039C9C10 CBZ X9, 0x39C9F90
	0x039C9C14 LDRSW X11, [X0 + 0x18]
	0x039C9C18 LDR W12, [X9 + 0x18]
	0x039C9C1C AND X20, X20, 0xFFFFFFFF
	0x039C9C20 BFM X20, X8, 0x0, 0x0
	0x039C9C24 CMP W11, W12
	0x039C9C28 B.CS 0x39C9C40
	0x039C9C2C ADD W8, W11, 0x1
	0x039C9C30 ADD X9, X9, X11, 0x4, LSL
	0x039C9C34 STR W8, [X0 + 0x18]
	0x039C9C38 STP X21, X20, [X9 + 0x20]
	0x039C9C3C B 0x39C9BC8
	0x039C9C40 LDR X8, [X10 + 0x20]
	0x039C9C44 LDR X8, [X8 + 0xC0]
	0x039C9C48 LDR X3, [X8 + 0x70]
	0x039C9C4C MOV X1, X21
	0x039C9C50 MOV X2, X20
	0x039C9C54 BL 0x3129124
	0x039C9C58 B 0x39C9BC8
	0x039C9C5C ADRP X8, 0x789000
	0x039C9C60 LDR X8, [X8 + 0xCB0]
	0x039C9C64 ADD X0, X31, 0xC0
	0x039C9C68 LDR X1, [X8]
	0x039C9C6C BL 0x2C06374
	0x039C9C70 LDR X0, [X19 + 0x60]
	0x039C9C74 CBZ X0, 0x39C9FB4
	0x039C9C78 ADRP X8, 0x789000
	0x039C9C7C LDR X8, [X8 + 0xC98]
	0x039C9C80 LDR X1, [X8]
	0x039C9C84 BL 0x2AAB444
	0x039C9C88 CBZ X0, 0x39C9FB4
	0x039C9C8C ADRP X8, 0x789000
	0x039C9C90 LDR X8, [X8 + 0xD08]
	0x039C9C94 ADD X20, X31, 0x190
	0x039C9C98 LDR X1, [X8]
	0x039C9C9C ADD X8, X31, 0x190
	0x039C9CA0 BL 0x2EC815C
	0x039C9CA4 LDR V0, [X31 + 0x19]
	0x039C9CA8 LDR X8, [X31 + 0x1A0]
	0x039C9CAC ADRP X22, 0x789000
	0x039C9CB0 ADRP X23, 0x789000
	0x039C9CB4 ADRP X24, 0x789000
	0x039C9CB8 LDR X22, [X22 + 0xCC8]
	0x039C9CBC LDR X23, [X23 + 0xC78]
	0x039C9CC0 LDR X24, [X24 + 0xD30]
	0x039C9CC4 ADD X21, X20, 0x8
	0x039C9CC8 STR V0, [X31 + 0xA]
	0x039C9CCC STR X8, [X31 + 0xB0]
	0x039C9CD0 MOVZ W25, 0x38
	0x039C9CD4 LDR X1, [X22]
	0x039C9CD8 ADD X0, X31, 0xA0
	0x039C9CDC BL 0x2C0C104
	0x039C9CE0 TBZ X0, 0x0, 0x39C9DAC
	0x039C9CE4 LDR X0, [X19 + 0x60]
	0x039C9CE8 CBZ X0, 0x39C9FA0
	0x039C9CEC LDR X20, [X31 + 0xB0]
	0x039C9CF0 LDR X2, [X23]
	0x039C9CF4 ADD X8, X31, 0x190
	0x039C9CF8 MOV X1, X20
	0x039C9CFC BL 0x2AAB5C4
	0x039C9D00 LDP V0, V1, [X31 + 0x190]
	0x039C9D04 LDR V2, [X31 + 0x1B]
	0x039C9D08 STP V0, V1, [X31 + 0x70]
	0x039C9D0C STR V2, [X31 + 0x9]
	0x039C9D10 LDR X0, [X19 + 0x28]
	0x039C9D14 STP V0, V1, [X31]
	0x039C9D18 STR V2, [X31 + 0x2]
	0x039C9D1C CBZ X0, 0x39C9FA4
	0x039C9D20 LDP V0, V1, [X31]
	0x039C9D24 LDR V2, [X31 + 0x2]
	0x039C9D28 LDR X9, [X24]
	0x039C9D2C STP V0, V1, [X31 + 0x160]
	0x039C9D30 STR V2, [X31 + 0x18]
	0x039C9D34 LDR W10, [X0 + 0x1C]
	0x039C9D38 LDR X8, [X0 + 0x10]
	0x039C9D3C ADD W10, W10, 0x1
	0x039C9D40 STR W10, [X0 + 0x1C]
	0x039C9D44 CBZ X8, 0x39C9F9C
	0x039C9D48 LDRSW X10, [X0 + 0x18]
	0x039C9D4C LDR W11, [X8 + 0x18]
	0x039C9D50 CMP W10, W11
	0x039C9D54 B.CS 0x39C9D80
	0x039C9D58 ADD W9, W10, 0x1
	0x039C9D5C MADD X8, X10, X25, X8
	0x039C9D60 STR W9, [X0 + 0x18]
	0x039C9D64 STR X20, [X8 + 0x20]
	0x039C9D68 LDP V1, V0, [X31 + 0x170]
	0x039C9D6C LDR V2, [X31 + 0x16]
	0x039C9D70 STUR V0, [X8 + 0x48]
	0x039C9D74 STUR V1, [X8 + 0x38]
	0x039C9D78 STUR V2, [X8 + 0x28]
	0x039C9D7C B 0x39C9CD4
	0x039C9D80 LDR X8, [X9 + 0x20]
	0x039C9D84 LDP V2, V0, [X31 + 0x170]
	0x039C9D88 LDR V1, [X31 + 0x16]
	0x039C9D8C LDR X8, [X8 + 0xC0]
	0x039C9D90 LDR X2, [X8 + 0x70]
	0x039C9D94 STR X20, [X31 + 0x190]
	0x039C9D98 STP V2, V0, [X21 + 0x10]
	0x039C9D9C STR V1, [X21]
	0x039C9DA0 ADD X1, X31, 0x190
	0x039C9DA4 BL 0x312BD98
	0x039C9DA8 B 0x39C9CD4
	0x039C9DAC ADRP X8, 0x789000
	0x039C9DB0 LDR X8, [X8 + 0xCC0]
	0x039C9DB4 ADD X0, X31, 0xA0
	0x039C9DB8 LDR X1, [X8]
	0x039C9DBC BL 0x2C0C100
	0x039C9DC0 LDR X0, [X19 + 0x58]
	0x039C9DC4 CBZ X0, 0x39C9FB4
	0x039C9DC8 ADRP X8, 0x789000
	0x039C9DCC LDR X8, [X8 + 0xCA0]
	0x039C9DD0 LDR X1, [X8]
	0x039C9DD4 BL 0x2AA4E98
	0x039C9DD8 CBZ X0, 0x39C9FB4
	0x039C9DDC ADRP X8, 0x789000
	0x039C9DE0 LDR X8, [X8 + 0xD10]
	0x039C9DE4 LDR X1, [X8]
	0x039C9DE8 ADD X8, X31, 0x0
	0x039C9DEC BL 0x2EC7020
	0x039C9DF0 LDR V0, [X31]
	0x039C9DF4 LDR X8, [X31 + 0x10]
	0x039C9DF8 ADRP X21, 0x789000
	0x039C9DFC ADRP X22, 0x789000
	0x039C9E00 LDR X21, [X21 + 0xCD0]
	0x039C9E04 LDR X22, [X22 + 0xC80]
	0x039C9E08 STR V0, [X31 + 0x5]
	0x039C9E0C STR X8, [X31 + 0x60]
	0x039C9E10 ADRP X23, 0x789000
	0x039C9E14 LDR X23, [X23 + 0xD40]
	0x039C9E18 LDR X1, [X21]
	0x039C9E1C ADD X0, X31, 0x50
	0x039C9E20 BL 0x2C0B090
	0x039C9E24 TBZ X0, 0x0, 0x39C9EA0
	0x039C9E28 LDR X0, [X19 + 0x58]
	0x039C9E2C CBZ X0, 0x39C9FAC
	0x039C9E30 LDR X20, [X31 + 0x60]
	0x039C9E34 LDR X2, [X22]
	0x039C9E38 MOV X1, X20
	0x039C9E3C BL 0x2AA5018
	0x039C9E40 MOV X2, X0
	0x039C9E44 LDR X0, [X19 + 0x20]
	0x039C9E48 CBZ X0, 0x39C9FB0
	0x039C9E4C LDR W10, [X0 + 0x1C]
	0x039C9E50 LDR X8, [X0 + 0x10]
	0x039C9E54 LDR X9, [X23]
	0x039C9E58 ADD W10, W10, 0x1
	0x039C9E5C STR W10, [X0 + 0x1C]
	0x039C9E60 CBZ X8, 0x39C9FA8
	0x039C9E64 LDRSW X10, [X0 + 0x18]
	0x039C9E68 LDR W11, [X8 + 0x18]
	0x039C9E6C CMP W10, W11
	0x039C9E70 B.CS 0x39C9E88
	0x039C9E74 ADD W9, W10, 0x1
	0x039C9E78 ADD X8, X8, X10, 0x4, LSL
	0x039C9E7C STR W9, [X0 + 0x18]
	0x039C9E80 STP X20, X2, [X8 + 0x20]
	0x039C9E84 B 0x39C9E18
	0x039C9E88 LDR X8, [X9 + 0x20]
	0x039C9E8C LDR X8, [X8 + 0xC0]
	0x039C9E90 LDR X3, [X8 + 0x70]
	0x039C9E94 MOV X1, X20
	0x039C9E98 BL 0x312F088
	0x039C9E9C B 0x39C9E18
	0x039C9EA0 ADRP X8, 0x789000
	0x039C9EA4 LDR X8, [X8 + 0xCB8]
	0x039C9EA8 ADD X0, X31, 0x50
	0x039C9EAC LDR X1, [X8]
	0x039C9EB0 BL 0x2C0B08C
	0x039C9EB4 LDR X0, [X19 + 0x68]
	0x039C9EB8 CBZ X0, 0x39C9FB4
	0x039C9EBC ADRP X8, 0x789000
	0x039C9EC0 LDR X8, [X8 + 0xA18]
	0x039C9EC4 LDR X1, [X8]
	0x039C9EC8 ADD X8, X31, 0x38
	0x039C9ECC BL 0x301CB58
	0x039C9ED0 ADRP X20, 0x789000
	0x039C9ED4 ADRP X21, 0x789000
	0x039C9ED8 LDR X20, [X20 + 0x9F8]
	0x039C9EDC LDR X21, [X21 + 0xC30]
	0x039C9EE0 LDR X1, [X20]
	0x039C9EE4 ADD X0, X31, 0x38
	0x039C9EE8 BL 0x2BC4350
	0x039C9EEC TBZ X0, 0x0, 0x39C9F4C
	0x039C9EF0 LDR X0, [X19 + 0x30]
	0x039C9EF4 CBZ X0, 0x39C9F7C
	0x039C9EF8 LDR W10, [X0 + 0x1C]
	0x039C9EFC LDR X1, [X31 + 0x48]
	0x039C9F00 LDR X8, [X0 + 0x10]
	0x039C9F04 LDR X9, [X21]
	0x039C9F08 ADD W10, W10, 0x1
	0x039C9F0C STR W10, [X0 + 0x1C]
	0x039C9F10 CBZ X8, 0x39C9F80
	0x039C9F14 LDRSW X10, [X0 + 0x18]
	0x039C9F18 LDR W11, [X8 + 0x18]
	0x039C9F1C CMP W10, W11
	0x039C9F20 B.CS 0x39C9F38
	0x039C9F24 ADD W9, W10, 0x1
	0x039C9F28 ADD X8, X8, X10, 0x3, LSL
	0x039C9F2C STR W9, [X0 + 0x18]
	0x039C9F30 STR X1, [X8 + 0x20]
	0x039C9F34 B 0x39C9EE0
	0x039C9F38 LDR X8, [X9 + 0x20]
	0x039C9F3C LDR X8, [X8 + 0xC0]
	0x039C9F40 LDR X2, [X8 + 0x70]
	0x039C9F44 BL 0x301BF90
	0x039C9F48 B 0x39C9EE0
	0x039C9F4C ADRP X8, 0x789000
	0x039C9F50 LDR X8, [X8 + 0x9E0]
	0x039C9F54 ADD X0, X31, 0x38
	0x039C9F58 LDR X1, [X8]
	0x039C9F5C BL 0x2BC434C
	0x039C9F60 ADD X31, X31, 0x1D0
	0x039C9F64 LDP X20, X19, [X31 + 0x40]
	0x039C9F68 LDP X22, X21, [X31 + 0x30]
	0x039C9F6C LDP X24, X23, [X31 + 0x20]
	0x039C9F70 LDP X30, X25, [X31 + 0x10]
	0x039C9F74 LDR X29, [X31], #0x50
	0x039C9F78 RET
	0x039C9F7C BL 0x1C16F20
	0x039C9F80 BL 0x1C16F20
	0x039C9F84 BL 0x1C16F20
	0x039C9F88 BL 0x1C16F20
	0x039C9F8C BL 0x1C16F20
	0x039C9F90 BL 0x1C16F20
	0x039C9F94 BL 0x1C16F20
	0x039C9F98 BL 0x1C16F20
	0x039C9F9C BL 0x1C16F20
	0x039C9FA0 BL 0x1C16F20
	0x039C9FA4 BL 0x1C16F20
	0x039C9FA8 BL 0x1C16F20
	0x039C9FAC BL 0x1C16F20
	0x039C9FB0 BL 0x1C16F20
	0x039C9FB4 BL 0x1C16F20
	0x039C9FB8 B 0x39CA000
	0x039C9FBC B 0x39CA064
	0x039C9FC0 B 0x39CA0C8
	0x039C9FC4 B 0x39CA12C
	0x039C9FC8 B 0x39CA194
	0x039C9FCC B 0x39CA000
	0x039C9FD0 B 0x39CA000
	0x039C9FD4 B 0x39CA064
	0x039C9FD8 B 0x39CA064
	0x039C9FDC B 0x39CA0C8
	0x039C9FE0 B 0x39CA0C8
	0x039C9FE4 B 0x39CA12C
	0x039C9FE8 B 0x39CA12C
	0x039C9FEC B 0x39CA000
	0x039C9FF0 B 0x39CA064
	0x039C9FF4 B 0x39CA0C8
	0x039C9FF8 B 0x39CA12C
	0x039C9FFC B 0x39CA194
	0x039CA000 MOV X20, X0
	0x039CA004 CMP W1, 0x1
	0x039CA008 B.NE 0x39CA038
	0x039CA00C MOV X0, X20
	0x039CA010 BL 0x3EB1AD0
	0x039CA014 LDR X21, [X0]
	0x039CA018 BL 0x3EB1AE0
	0x039CA01C ADRP X8, 0x788000
	0x039CA020 LDR X8, [X8 + 0xCB8]
	0x039CA024 ADD X0, X31, 0x50
	0x039CA028 LDR X1, [X8]
	0x039CA02C BL 0x2C0B08C
	0x039CA030 CBZ X21, 0x39C9EB4
	0x039CA034 B 0x39CA160
	0x039CA038 MOV X21, X31
	0x039CA03C B 0x39CA044
	0x039CA040 MOV X20, X0
	0x039CA044 ADRP X8, 0x788000
	0x039CA048 LDR X8, [X8 + 0xCB8]
	0x039CA04C LDR X1, [X8]
	0x039CA050 ADD X0, X31, 0x50
	0x039CA054 BL 0x2C0B08C
	0x039CA058 CBZ X21, 0x39CA1F4
	0x039CA05C MOV X0, X21
	0x039CA060 BL 0x1C16F18
	0x039CA064 MOV X20, X0
	0x039CA068 CMP W1, 0x1
	0x039CA06C B.NE 0x39CA09C
	0x039CA070 MOV X0, X20
	0x039CA074 BL 0x3EB1AD0
	0x039CA078 LDR X21, [X0]
	0x039CA07C BL 0x3EB1AE0
	0x039CA080 ADRP X8, 0x788000
	0x039CA084 LDR X8, [X8 + 0xCC0]
	0x039CA088 ADD X0, X31, 0xA0
	0x039CA08C LDR X1, [X8]
	0x039CA090 BL 0x2C0C100
	0x039CA094 CBZ X21, 0x39C9DC0
	0x039CA098 B 0x39CA160
	0x039CA09C MOV X21, X31
	0x039CA0A0 B 0x39CA0A8
	0x039CA0A4 MOV X20, X0
	0x039CA0A8 ADRP X8, 0x788000
	0x039CA0AC LDR X8, [X8 + 0xCC0]
	0x039CA0B0 LDR X1, [X8]
	0x039CA0B4 ADD X0, X31, 0xA0
	0x039CA0B8 BL 0x2C0C100
	0x039CA0BC CBZ X21, 0x39CA1F4
	0x039CA0C0 MOV X0, X21
	0x039CA0C4 BL 0x1C16F18
	0x039CA0C8 MOV X20, X0
	0x039CA0CC CMP W1, 0x1
	0x039CA0D0 B.NE 0x39CA100
	0x039CA0D4 MOV X0, X20
	0x039CA0D8 BL 0x3EB1AD0
	0x039CA0DC LDR X21, [X0]
	0x039CA0E0 BL 0x3EB1AE0
	0x039CA0E4 ADRP X8, 0x788000
	0x039CA0E8 LDR X8, [X8 + 0xCB0]
	0x039CA0EC ADD X0, X31, 0xC0
	0x039CA0F0 LDR X1, [X8]
	0x039CA0F4 BL 0x2C06374
	0x039CA0F8 CBZ X21, 0x39C9C70
	0x039CA0FC B 0x39CA160
	0x039CA100 MOV X21, X31
	0x039CA104 B 0x39CA10C
	0x039CA108 MOV X20, X0
	0x039CA10C ADRP X8, 0x788000
	0x039CA110 LDR X8, [X8 + 0xCB0]
	0x039CA114 LDR X1, [X8]
	0x039CA118 ADD X0, X31, 0xC0
	0x039CA11C BL 0x2C06374
	0x039CA120 CBZ X21, 0x39CA1F4
	0x039CA124 MOV X0, X21
	0x039CA128 BL 0x1C16F18
	0x039CA12C MOV X20, X0
	0x039CA130 CMP W1, 0x1
	0x039CA134 B.NE 0x39CA168
	0x039CA138 MOV X0, X20
	0x039CA13C BL 0x3EB1AD0
	0x039CA140 LDR X21, [X0]
	0x039CA144 BL 0x3EB1AE0
	0x039CA148 ADRP X8, 0x788000
	0x039CA14C LDR X8, [X8 + 0xCA8]
	0x039CA150 ADD X0, X31, 0x100
	0x039CA154 LDR X1, [X8]
	0x039CA158 BL 0x2C06B64
	0x039CA15C CBZ X21, 0x39C9B6C
	0x039CA160 MOV X0, X21
	0x039CA164 BL 0x1C16F18
	0x039CA168 MOV X21, X31
	0x039CA16C B 0x39CA174
	0x039CA170 MOV X20, X0
	0x039CA174 ADRP X8, 0x788000
	0x039CA178 LDR X8, [X8 + 0xCA8]
	0x039CA17C LDR X1, [X8]
	0x039CA180 ADD X0, X31, 0x100
	0x039CA184 BL 0x2C06B64
	0x039CA188 CBZ X21, 0x39CA1F4
	0x039CA18C MOV X0, X21
	0x039CA190 BL 0x1C16F18
	0x039CA194 MOV X20, X0
	0x039CA198 CMP W1, 0x1
	0x039CA19C B.NE 0x39CA1D0
	0x039CA1A0 MOV X0, X20
	0x039CA1A4 BL 0x3EB1AD0
	0x039CA1A8 LDR X19, [X0]
	0x039CA1AC BL 0x3EB1AE0
	0x039CA1B0 ADRP X8, 0x788000
	0x039CA1B4 LDR X8, [X8 + 0x9E0]
	0x039CA1B8 ADD X0, X31, 0x38
	0x039CA1BC LDR X1, [X8]
	0x039CA1C0 BL 0x2BC434C
	0x039CA1C4 CBZ X19, 0x39C9F60
	0x039CA1C8 MOV X0, X19
	0x039CA1CC BL 0x1C16F18
	0x039CA1D0 MOV X19, X31
	0x039CA1D4 B 0x39CA1DC
	0x039CA1D8 MOV X20, X0
	0x039CA1DC ADRP X8, 0x788000
	0x039CA1E0 LDR X8, [X8 + 0x9E0]
	0x039CA1E4 LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+384], X29
	003 Move [X31+392], X30
	004 Move [X31+400], X24
	005 Move [X31+408], X23
	006 Move [X31+416], X22
	007 Move [X31+424], X21
	008 Move [X31+432], X20
	009 Move [X31+440], X19
	010 Move X20, 0xA19000
	011 Move W8, [X20+3304]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {130}
	017 Move X0, 0x786000
	018 Move X0, [X0+712]
	019 Call 0x1C17CF4
	020 Move X0, 0x78A000
	021 Move X0, [X0+3000]
	022 Call 0x1C17CF4
	023 Move X0, 0x78A000
	024 Move X0, [X0+3008]
	025 Call 0x1C17CF4
	026 Move X0, 0x78A000
	027 Move X0, [X0+3016]
	028 Call 0x1C17CF4
	029 Move X0, 0x78A000
	030 Move X0, [X0+2872]
	031 Call 0x1C17CF4
	032 Move X0, 0x78A000
	033 Move X0, [X0+2880]
	034 Call 0x1C17CF4
	035 Move X0, 0x786000
	036 Move X0, [X0+904]
	037 Call 0x1C17CF4
	038 Move X0, 0x78A000
	039 Move X0, [X0+2888]
	040 Call 0x1C17CF4
	041 Move X0, 0x786000
	042 Move X0, [X0+896]
	043 Call 0x1C17CF4
	044 Move X0, 0x78A000
	045 Move X0, [X0+2896]
	046 Call 0x1C17CF4
	047 Move X0, 0x78A000
	048 Move X0, [X0+2904]
	049 Call 0x1C17CF4
	050 Move X0, 0x78A000
	051 Move X0, [X0+2912]
	052 Call 0x1C17CF4
	053 Move X0, 0x78A000
	054 Move X0, [X0+2528]
	055 Call 0x1C17CF4
	056 Move X0, 0x78A000
	057 Move X0, [X0+3024]
	058 Call 0x1C17CF4
	059 Move X0, 0x78A000
	060 Move X0, [X0+3032]
	061 Call 0x1C17CF4
	062 Move X0, 0x78A000
	063 Move X0, [X0+3040]
	064 Call 0x1C17CF4
	065 Move X0, 0x78A000
	066 Move X0, [X0+3048]
	067 Call 0x1C17CF4
	068 Move X0, 0x78A000
	069 Move X0, [X0+3056]
	070 Call 0x1C17CF4
	071 Move X0, 0x78A000
	072 Move X0, [X0+3064]
	073 Call 0x1C17CF4
	074 Move X0, 0x78A000
	075 Move X0, [X0+3072]
	076 Call 0x1C17CF4
	077 Move X0, 0x78A000
	078 Move X0, [X0+3080]
	079 Call 0x1C17CF4
	080 Move X0, 0x78A000
	081 Move X0, [X0+2552]
	082 Call 0x1C17CF4
	083 Move X0, 0x78A000
	084 Move X0, [X0+3088]
	085 Call 0x1C17CF4
	086 Move X0, 0x78A000
	087 Move X0, [X0+3096]
	088 Call 0x1C17CF4
	089 Move X0, 0x78A000
	090 Move X0, [X0+3104]
	091 Call 0x1C17CF4
	092 Move X0, 0x78A000
	093 Move X0, [X0+2568]
	094 Call 0x1C17CF4
	095 Move X0, 0x78A000
	096 Move X0, [X0+3112]
	097 Call 0x1C17CF4
	098 Move X0, 0x78A000
	099 Move X0, [X0+3120]
	100 Call 0x1C17CF4
	101 Move X0, 0x78A000
	102 Move X0, [X0+3128]
	103 Call 0x1C17CF4
	104 Move X0, 0x78A000
	105 Move X0, [X0+3136]
	106 Call 0x1C17CF4
	107 Move X0, 0x78A000
	108 Move X0, [X0+3144]
	109 Call 0x1C17CF4
	110 Move X0, 0x78A000
	111 Move X0, [X0+2584]
	112 Call 0x1C17CF4
	113 Move X0, 0x78A000
	114 Move X0, [X0+3152]
	115 Call 0x1C17CF4
	116 Move X0, 0x78A000
	117 Move X0, [X0+2952]
	118 Call 0x1C17CF4
	119 Move X0, 0x78A000
	120 Move X0, [X0+2976]
	121 Call 0x1C17CF4
	122 Move X0, 0x789000
	123 Move X0, [X0+3912]
	124 Call 0x1C17CF4
	125 Move X0, 0x72B000
	126 Move X0, [X0+2440]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X20+3304], W8
	130 NotImplemented "Instruction MOVI not yet implemented."
	131 Move [X31+224], X31
	132 Move [X31+128], X31
	133 Move [X31+136], X31
	134 Move [X31+320], V0
	135 Move [X31+328], V0
	136 Move [X31+288], V0
	137 Move [X31+296], V0
	138 Move [X31+256], V0
	139 Move [X31+264], V0
	140 Move [X31+15], V0
	141 Move [X31+192], V0
	142 Move [X31+200], V0
	143 Move [X31+160], V0
	144 Move [X31+168], V0
	145 Move [X31+144], X31
	146 Move X8, [X19+16]
	147 Compare X8, 0
	148 JumpIfEqual {472}
	149 Move X8, [X19+24]
	150 Compare X8, 0
	151 JumpIfEqual {472}
	152 Move X8, [X19+32]
	153 Compare X8, 0
	154 JumpIfEqual {472}
	155 Move X8, [X19+40]
	156 Compare X8, 0
	157 JumpIfEqual {472}
	158 Move X8, 0x78A000
	159 Move X8, [X8+2896]
	160 Move X0, [X8]
	161 Call 0x1C17F10
	162 Move X8, 0x78A000
	163 Move X8, [X8+2880]
	164 Move X20, X0
	165 Move X1, [X8]
	166 Call Dictionary`2<Object, Bounds>..ctor, X0
	167 Move [X19+72], X20
	168 Move X8, 0x786000
	169 Move X8, [X8+896]
	170 Move X0, [X8]
	171 Call 0x1C17F10
	172 Move X8, 0x786000
	173 Move X8, [X8+904]
	174 Move X20, X0
	175 Move X1, [X8]
	176 Call Dictionary`2<Object, Boolean>..ctor, X0
	177 Move [X19+80], X20
	178 Move X8, 0x78A000
	179 Move X8, [X8+2904]
	180 Move X0, [X8]
	181 Call 0x1C17F10
	182 Move X8, 0x78A000
	183 Move X8, [X8+2872]
	184 Move X20, X0
	185 Move X1, [X8]
	186 Call Dictionary`2<Object, Object>..ctor, X0
	187 Move [X19+88], X20
	188 Move X8, 0x78A000
	189 Move X8, [X8+2912]
	190 Move X0, [X8]
	191 Call 0x1C17F10
	192 Move X8, 0x78A000
	193 Move X8, [X8+2888]
	194 Move X20, X0
	195 Move X1, [X8]
	196 Call Dictionary`2<Object, ProbeVolumeBakingProcessSettings>..ctor, X0
	197 Move [X19+96], X20
	198 Move X8, 0x78A000
	199 Move X8, [X8+2976]
	200 Move X0, [X8]
	201 Call 0x1C17F10
	202 Move X8, 0x78A000
	203 Move X8, [X8+2952]
	204 Move X20, X0
	205 Move X1, [X8]
	206 Call List`1<Object>..ctor, X0
	207 Move X0, [X19+16]
	208 Move [X19+104], X20
	209 Compare X0, 0
	210 JumpIfEqual {489}
	211 Move X8, 0x78A000
	212 Move X8, [X8+3136]
	213 Move X1, [X8]
	214 Add X8, X31, 48
	215 Call List`1<SerializableBoundItem>.GetEnumerator, X0
	216 Move V0, [X31+48]
	217 Move V1, [X31+64]
	218 Move V2, [X31+5]
	219 Move X20, 0x78A000
	220 Move X20, [X20+3056]
	221 Move [X31+304], V0
	222 Move [X31+312], V1
	223 Move [X31+21], V2
	224 Move X22, 0x78A000
	225 Move X22, [X22+3016]
	226 Add X8, X31, 304
	227 Add X21, X8, 24
	228 Move X1, [X20]
	229 Add X0, X31, 304
	230 Call Enumerator<SerializableBoundItem>.MoveNext, X0
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {250}
	235 Move X0, [X19+72]
	236 Move X8, [X21+16]
	237 Move V0, [X21]
	238 Move X1, [X31+320]
	239 Move [X31+64], X8
	240 Move [X31+3], V0
	241 Compare X0, 0
	242 JumpIfEqual {482}
	243 Move V0, [X31+3]
	244 Move X8, [X31+64]
	245 Move X3, [X22]
	246 Move [X31+22], V0
	247 Move [X31+368], X8
	248 Add X2, X31, 352
	249 Call Dictionary`2<Object, Bounds>.Add, X0, X1, X2
	250 Move X8, 0x78A000
	251 Move X8, [X8+3040]
	252 Add X0, X31, 304
	253 Move X1, [X8]
	254 Call Enumerator<SerializableBoundItem>.Dispose, X0
	255 Move X0, [X19+24]
	256 Compare X0, 0
	257 JumpIfEqual {489}
	258 Move X8, 0x78A000
	259 Move X8, [X8+3144]
	260 Move X1, [X8]
	261 Add X8, X31, 48
	262 Call List`1<SerializableHasPVItem>.GetEnumerator, X0
	263 Move V0, [X31+48]
	264 Move V1, [X31+64]
	265 Move X20, 0x78A000
	266 Move X20, [X20+3072]
	267 Move X21, 0x786000
	268 Move [X31+272], V0
	269 Move [X31+280], V1
	270 Move X21, [X21+712]
	271 Move X1, [X20]
	272 Add X0, X31, 272
	273 Call Enumerator<SerializableHasPVItem>.MoveNext, X0
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {286}
	278 Move X0, [X19+80]
	279 Compare X0, 0
	280 JumpIfEqual {483}
	281 Move W8, [X31+296]
	282 Move X1, [X31+288]
	283 Move X3, [X21]
	284 And W2, W8, 1
	285 Call Dictionary`2<Object, Boolean>.Add, X0, X1, X2
	286 Move X8, 0x78A000
	287 Move X8, [X8+3048]
	288 Add X0, X31, 272
	289 Move X1, [X8]
	290 Call Enumerator<SerializableHasPVItem>.Dispose, X0
	291 Move X0, [X19+32]
	292 Compare X0, 0
	293 JumpIfEqual {489}
	294 Move X8, 0x78A000
	295 Move X8, [X8+3152]
	296 Move X1, [X8]
	297 Add X8, X31, 48
	298 Call List`1<SerializablePVProfile>.GetEnumerator, X0
	299 Move V0, [X31+48]
	300 Move V1, [X31+64]
	301 Move X20, 0x78A000
	302 Move X20, [X20+3080]
	303 Move X21, 0x78A000
	304 Move [X31+240], V0
	305 Move [X31+248], V1
	306 Move X21, [X21+3000]
	307 Move X1, [X20]
	308 Add X0, X31, 240
	309 Call Enumerator<SerializablePVProfile>.MoveNext, X0
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {321}
	314 Move X0, [X19+88]
	315 Compare X0, 0
	316 JumpIfEqual {484}
	317 Move X1, [X31+256]
	318 Move X2, [X31+264]
	319 Move X3, [X21]
	320 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	321 Move X8, 0x78A000
	322 Move X8, [X8+3032]
	323 Add X0, X31, 240
	324 Move X1, [X8]
	325 Call Enumerator<SerializablePVProfile>.Dispose, X0
	326 Move X0, [X19+40]
	327 Compare X0, 0
	328 JumpIfEqual {489}
	329 Move X8, 0x78A000
	330 Move X8, [X8+3128]
	331 Move X1, [X8]
	332 Add X8, X31, 48
	333 Call List`1<SerializablePVBakeSettings>.GetEnumerator, X0
	334 Add X0, X31, 160
	335 Add X1, X31, 48
	336 Move W2, 72
	337 Add X20, X31, 160
	338 Call 0x3EB2AC0
	339 Move X21, 0x78A000
	340 Move X22, 0x78A000
	341 Move X21, [X21+3064]
	342 Move X22, [X22+3008]
	343 Add X20, X20, 24
	344 Move X1, [X21]
	345 Add X0, X31, 160
	346 Call Enumerator<SerializablePVBakeSettings>.MoveNext, X0
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfNotEqual {370}
	351 Move V2, [X20+16]
	352 Move V0, [X20+32]
	353 Move V1, [X20]
	354 Move X0, [X19+96]
	355 Move X1, [X31+176]
	356 Move [X31+16], V2
	357 Move [X31+24], V0
	358 Move [X31], V1
	359 Compare X0, 0
	360 JumpIfEqual {485}
	361 Move V0, [X31]
	362 Move V1, [X31+16]
	363 Move V2, [X31+2]
	364 Move X3, [X22]
	365 Move [X31+48], V0
	366 Move [X31+56], V1
	367 Move [X31+5], V2
	368 Add X2, X31, 48
	369 Call Dictionary`2<Object, ProbeVolumeBakingProcessSettings>.Add, X0, X1, X2
	370 Move X8, 0x78A000
	371 Move X8, [X8+3024]
	372 Add X0, X31, 160
	373 Move X1, [X8]
	374 Call Enumerator<SerializablePVBakeSettings>.Dispose, X0
	375 Move X0, [X19+112]
	376 Move X1, X31
	377 Call String.IsNullOrEmpty, X0
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {393}
	382 Move X20, 0x789000
	383 Move X20, [X20+3912]
	384 Move X0, [X20]
	385 Move W8, [X0+224]
	386 Compare W8, 0
	387 JumpIfNotEqual {390}
	388 Call 0x1C17DFC
	389 Move X0, [X20]
	390 Move X8, [X0+184]
	391 Move X8, [X8]
	392 Move [X19+112], X8
	393 Move X0, [X19+48]
	394 Compare X0, 0
	395 JumpIfEqual {489}
	396 Move X8, 0x78A000
	397 Move X8, [X8+2584]
	398 Move X1, [X8]
	399 Add X8, X31, 0
	400 Call List`1<Object>.GetEnumerator, X0
	401 Move V0, [X31]
	402 Move X8, [X31+16]
	403 Move X21, 0x78A000
	404 Move X22, 0x78A000
	405 Move X21, [X21+2552]
	406 Move X22, [X22+3120]
	407 Move X24, 0x126F
	408 NotImplemented "Instruction MOVK not yet implemented."
	409 Move W23, 1
	410 Move [X31+8], V0
	411 Move [X31+144], X8
	412 NotImplemented "Instruction MOVK not yet implemented."
	413 Move X1, [X21]
	414 Add X0, X31, 128
	415 Call Enumerator<Object>.MoveNext, X0
	416 Move TEMP, X0
	417 And TEMP, TEMP, 1
	418 Compare TEMP, 1
	419 JumpIfNotEqual {456}
	420 Move X20, [X31+144]
	421 Compare X20, 0
	422 JumpIfEqual {487}
	423 Move W8, [X20+32]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move [X20+68], X24
	427 Move TEMP, 4
	428 Not TEMP
	429 Move W0, TEMP
	430 Move X1, X31
	431 Call LayerMask.op_Implicit, X0
	432 Move [X20+76], W0
	433 Move [X20+32], W23
	434 Move X0, [X19+104]
	435 Compare X0, 0
	436 JumpIfEqual {488}
	437 Move W10, [X0+28]
	438 Move X8, [X0+16]
	439 Move X9, [X22]
	440 Add W10, W10, 1
	441 Move [X0+28], W10
	442 Compare X8, 0
	443 JumpIfEqual {486}
	444 NotImplemented "Instruction LDRSW not yet implemented."
	445 Move W11, [X8+24]
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Add W9, W10, 1
	448 Add X8, X8, X10
	449 Move [X0+24], W9
	450 Move [X8+32], X20
	451 Move X8, [X9+32]
	452 Move X8, [X8+192]
	453 Move X2, [X8+112]
	454 Move X1, X20
	455 Call List`1<Object>.AddWithResize, X0, X1
	456 Move X8, 0x78A000
	457 Move X8, [X8+2528]
	458 Add X0, X31, 128
	459 Move X1, [X8]
	460 Call Enumerator<Object>.Dispose, X0
	461 Move X8, 0x72B000
	462 Move X0, [X19+120]
	463 Move X8, [X8+2440]
	464 Move X2, X31
	465 Move X1, [X8]
	466 Call String.op_Equality, X0, X1
	467 Move TEMP, X0
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfNotEqual {472}
	471 Move [X19+120], X31
	472 Move X20, [X31+432]
	473 Move X19, [X31+440]
	474 Move X22, [X31+416]
	475 Move X21, [X31+424]
	476 Move X24, [X31+400]
	477 Move X23, [X31+408]
	478 Move X29, [X31+384]
	479 Move X30, [X31+392]
	480 Add X31, X31, 448
	481 Return 
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F20
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Move X20, X0
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Move X0, X20
	493 Call 0x3EB2AD0
	494 Move X21, [X0]
	495 Call 0x3EB2AE0
	496 Move X8, 0x789000
	497 Move X8, [X8+3024]
	498 Add X0, X31, 160
	499 Move X1, [X8]
	500 Call Enumerator<SerializablePVBakeSettings>.Dispose, X0
	501 Compare X21, 0
	502 JumpIfEqual {375}
	503 Move X21, X31
	504 Move X20, X0
	505 Move X8, 0x789000
	506 Move X8, [X8+3024]
	507 Move X1, [X8]
	508 Add X0, X31, 160
	509 Call Enumerator<SerializablePVBakeSettings>.Dispose, X0
	510 Compare X21, 0
	511 JumpIfEqual {610}
	512 Move X0, X21
	513 Call 0x1C17F18
	514 Move X20, X0
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move X0, X20
	517 Call 0x3EB2AD0
	518 Move X21, [X0]
	519 Call 0x3EB2AE0
	520 Move X8, 0x789000
	521 Move X8, [X8+3032]
	522 Add X0, X31, 240
	523 Move X1, [X8]
	524 Call Enumerator<SerializablePVProfile>.Dispose, X0
	525 Compare X21, 0
	526 JumpIfEqual {326}
	527 Move X21, X31
	528 Move X20, X0
	529 Move X8, 0x789000
	530 Move X8, [X8+3032]
	531 Move X1, [X8]
	532 Add X0, X31, 240
	533 Call Enumerator<SerializablePVProfile>.Dispose, X0
	534 Compare X21, 0
	535 JumpIfEqual {610}
	536 Move X0, X21
	537 Call 0x1C17F18
	538 Move X20, X0
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move X0, X20
	541 Call 0x3EB2AD0
	542 Move X21, [X0]
	543 Call 0x3EB2AE0
	544 Move X8, 0x789000
	545 Move X8, [X8+3048]
	546 Add X0, X31, 272
	547 Move X1, [X8]
	548 Call Enumerator<SerializableHasPVItem>.Dispose, X0
	549 Compare X21, 0
	550 JumpIfEqual {291}
	551 Move X21, X31
	552 Move X20, X0
	553 Move X8, 0x789000
	554 Move X8, [X8+3048]
	555 Move X1, [X8]
	556 Add X0, X31, 272
	557 Call Enumerator<SerializableHasPVItem>.Dispose, X0
	558 Compare X21, 0
	559 JumpIfEqual {610}
	560 Move X0, X21
	561 Call 0x1C17F18
	562 Move X20, X0
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Move X0, X20
	565 Call 0x3EB2AD0
	566 Move X21, [X0]
	567 Call 0x3EB2AE0
	568 Move X8, 0x789000
	569 Move X8, [X8+3040]
	570 Add X0, X31, 304
	571 Move X1, [X8]
	572 Call Enumerator<SerializableBoundItem>.Dispose, X0
	573 Compare X21, 0
	574 JumpIfEqual {255}
	575 Move X21, X31
	576 Move X20, X0
	577 Move X8, 0x789000
	578 Move X8, [X8+3040]
	579 Move X1, [X8]
	580 Add X0, X31, 304
	581 Call Enumerator<SerializableBoundItem>.Dispose, X0
	582 Compare X21, 0
	583 JumpIfEqual {610}
	584 Move X0, X21
	585 Call 0x1C17F18
	586 Move X20, X0
	587 NotImplemented "Instruction CMP not yet implemented."
	588 Move X0, X20
	589 Call 0x3EB2AD0
	590 Move X21, [X0]
	591 Call 0x3EB2AE0
	592 Move X8, 0x789000
	593 Move X8, [X8+2528]
	594 Add X0, X31, 128
	595 Move X1, [X8]
	596 Call Enumerator<Object>.Dispose, X0
	597 Compare X21, 0
	598 JumpIfEqual {461}
	599 Move X0, X21
	600 Call 0x1C17F18
	601 Move X21, X31
	602 Move X20, X0
	603 Move X8, 0x789000
	604 Move X8, [X8+2528]
	605 Move X1, [X8]
	606 Add X0, X31, 128
	607 Call Enumerator<Object>.Dispose, X0
	608 Compare X21, 0
	609 JumpIfNotEqual {612}
	610 Move X0, X20
	611 Call 0x1D2D690
	612 Move X0, X21
	613 Call 0x1C17F18
	614 Call 0x1991590

Method: System.Void UpdateBakingSets()

Disassembly:
	0x039C971C BL 0x1C16CF4
	0x039C9720 ADRP X0, 0x789000
	0x039C9724 LDR X0, [X0 + 0xC88]
	0x039C9728 BL 0x1C16CF4
	0x039C972C ADRP X0, 0x789000
	0x039C9730 LDR X0, [X0 + 0xC90]
	0x039C9734 BL 0x1C16CF4
	0x039C9738 ADRP X0, 0x789000
	0x039C973C LDR X0, [X0 + 0xC98]
	0x039C9740 BL 0x1C16CF4
	0x039C9744 ADRP X0, 0x789000
	0x039C9748 LDR X0, [X0 + 0xCA0]
	0x039C974C BL 0x1C16CF4
	0x039C9750 ADRP X0, 0x785000
	0x039C9754 LDR X0, [X0 + 0x260]
	0x039C9758 BL 0x1C16CF4
	0x039C975C ADRP X0, 0x789000
	0x039C9760 LDR X0, [X0 + 0x9E0]
	0x039C9764 BL 0x1C16CF4
	0x039C9768 ADRP X0, 0x789000
	0x039C976C LDR X0, [X0 + 0xCA8]
	0x039C9770 BL 0x1C16CF4
	0x039C9774 ADRP X0, 0x789000
	0x039C9778 LDR X0, [X0 + 0xCB0]
	0x039C977C BL 0x1C16CF4
	0x039C9780 ADRP X0, 0x789000
	0x039C9784 LDR X0, [X0 + 0xCB8]
	0x039C9788 BL 0x1C16CF4
	0x039C978C ADRP X0, 0x789000
	0x039C9790 LDR X0, [X0 + 0xCC0]
	0x039C9794 BL 0x1C16CF4
	0x039C9798 ADRP X0, 0x789000
	0x039C979C LDR X0, [X0 + 0xCC8]
	0x039C97A0 BL 0x1C16CF4
	0x039C97A4 ADRP X0, 0x789000
	0x039C97A8 LDR X0, [X0 + 0xCD0]
	0x039C97AC BL 0x1C16CF4
	0x039C97B0 ADRP X0, 0x789000
	0x039C97B4 LDR X0, [X0 + 0xCD8]
	0x039C97B8 BL 0x1C16CF4
	0x039C97BC ADRP X0, 0x789000
	0x039C97C0 LDR X0, [X0 + 0x9F8]
	0x039C97C4 BL 0x1C16CF4
	0x039C97C8 ADRP X0, 0x789000
	0x039C97CC LDR X0, [X0 + 0xCE0]
	0x039C97D0 BL 0x1C16CF4
	0x039C97D4 ADRP X0, 0x789000
	0x039C97D8 LDR X0, [X0 + 0xCE8]
	0x039C97DC BL 0x1C16CF4
	0x039C97E0 ADRP X0, 0x789000
	0x039C97E4 LDR X0, [X0 + 0xA08]
	0x039C97E8 BL 0x1C16CF4
	0x039C97EC ADRP X0, 0x789000
	0x039C97F0 LDR X0, [X0 + 0xCF0]
	0x039C97F4 BL 0x1C16CF4
	0x039C97F8 ADRP X0, 0x789000
	0x039C97FC LDR X0, [X0 + 0xCF8]
	0x039C9800 BL 0x1C16CF4
	0x039C9804 ADRP X0, 0x789000
	0x039C9808 LDR X0, [X0 + 0xD00]
	0x039C980C BL 0x1C16CF4
	0x039C9810 ADRP X0, 0x789000
	0x039C9814 LDR X0, [X0 + 0xD08]
	0x039C9818 BL 0x1C16CF4
	0x039C981C ADRP X0, 0x789000
	0x039C9820 LDR X0, [X0 + 0xD10]
	0x039C9824 BL 0x1C16CF4
	0x039C9828 ADRP X0, 0x789000
	0x039C982C LDR X0, [X0 + 0xD18]
	0x039C9830 BL 0x1C16CF4
	0x039C9834 ADRP X0, 0x789000
	0x039C9838 LDR X0, [X0 + 0xD20]
	0x039C983C BL 0x1C16CF4
	0x039C9840 ADRP X0, 0x789000
	0x039C9844 LDR X0, [X0 + 0xD28]
	0x039C9848 BL 0x1C16CF4
	0x039C984C ADRP X0, 0x789000
	0x039C9850 LDR X0, [X0 + 0xD30]
	0x039C9854 BL 0x1C16CF4
	0x039C9858 ADRP X0, 0x789000
	0x039C985C LDR X0, [X0 + 0xC30]
	0x039C9860 BL 0x1C16CF4
	0x039C9864 ADRP X0, 0x789000
	0x039C9868 LDR X0, [X0 + 0xD38]
	0x039C986C BL 0x1C16CF4
	0x039C9870 ADRP X0, 0x789000
	0x039C9874 LDR X0, [X0 + 0xD40]
	0x039C9878 BL 0x1C16CF4
	0x039C987C ADRP X0, 0x789000
	0x039C9880 LDR X0, [X0 + 0xD48]
	0x039C9884 BL 0x1C16CF4
	0x039C9888 ADRP X0, 0x789000
	0x039C988C LDR X0, [X0 + 0xD50]
	0x039C9890 BL 0x1C16CF4
	0x039C9894 ADRP X0, 0x789000
	0x039C9898 LDR X0, [X0 + 0xD58]
	0x039C989C BL 0x1C16CF4
	0x039C98A0 ADRP X0, 0x789000
	0x039C98A4 LDR X0, [X0 + 0xD60]
	0x039C98A8 BL 0x1C16CF4
	0x039C98AC ADRP X0, 0x789000
	0x039C98B0 LDR X0, [X0 + 0xD68]
	0x039C98B4 BL 0x1C16CF4
	0x039C98B8 ADRP X0, 0x789000
	0x039C98BC LDR X0, [X0 + 0xA18]
	0x039C98C0 BL 0x1C16CF4
	0x039C98C4 MOVZ W8, 0x1
	0x039C98C8 STRB W8, [X20 + 0xCEA]
	0x039C98CC MOVI V0.2D, 0x0
	0x039C98D0 STP X31, X31, [X31 + 0x100]
	0x039C98D4 STR X31, [X31 + 0x110]
	0x039C98D8 STP X31, X31, [X31 + 0xE0]
	0x039C98DC STR X31, [X31 + 0xF0]
	0x039C98E0 STP X31, X31, [X31 + 0xC0]
	0x039C98E4 STR X31, [X31 + 0xD0]
	0x039C98E8 STP X31, X31, [X31 + 0xA0]
	0x039C98EC STR X31, [X31 + 0xB0]
	0x039C98F0 STP X31, X31, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0xA19000
	010 Move W8, [X20+3305]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x78A000
	017 Move X0, [X0+2528]
	018 Call 0x1C17CF4
	019 Move X0, 0x78A000
	020 Move X0, [X0+2552]
	021 Call 0x1C17CF4
	022 Move X0, 0x78A000
	023 Move X0, [X0+2568]
	024 Call 0x1C17CF4
	025 Move X0, 0x78A000
	026 Move X0, [X0+2584]
	027 Call 0x1C17CF4
	028 Move X0, 0x72C000
	029 Move X0, [X0+456]
	030 Call 0x1C17CF4
	031 Move X0, 0x72B000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3305], W8
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Move X0, [X19+48]
	040 Compare X0, 0
	041 JumpIfEqual {108}
	042 Move X8, 0x78A000
	043 Move X8, [X8+2584]
	044 Move X23, 0x78A000
	045 Move X24, 0x72B000
	046 Move X22, 0x78A000
	047 Move X1, [X8]
	048 Move X23, [X23+2552]
	049 Move X24, [X24+1432]
	050 Move X22, [X22+2528]
	051 Add X8, X31, 8
	052 Call List`1<Object>.GetEnumerator, X0
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X8, [X31+24]
	055 Move [X31+2], V0
	056 Move [X31+48], X8
	057 Move X1, [X23]
	058 Add X0, X31, 32
	059 Call Enumerator<Object>.MoveNext, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {92}
	064 Move X20, [X31+48]
	065 Compare X20, 0
	066 JumpIfEqual {106}
	067 Move X0, [X24]
	068 Move X21, [X20+80]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {84}
	081 Move X0, X19
	082 Move X1, X20
	083 Call ProbeVolumeSceneData.InitializeBakingSet, X0, X1, X2
	084 Move X8, [X20+88]
	085 Compare X8, 0
	086 JumpIfEqual {107}
	087 Move W8, [X8+24]
	088 Compare W8, 0
	089 JumpIfNotEqual {57}
	090 Move X1, X20
	091 Call ProbeVolumeSceneData.InitializeScenarios, X0, X1
	092 Move X1, [X22]
	093 Add X0, X31, 32
	094 Call Enumerator<Object>.Dispose, X0
	095 Move X0, X19
	096 Call ProbeVolumeSceneData.SyncBakingSetSettings, X0
	097 Move X20, [X31+112]
	098 Move X19, [X31+120]
	099 Move X22, [X31+96]
	100 Move X21, [X31+104]
	101 Move X24, [X31+80]
	102 Move X23, [X31+88]
	103 Move X30, [X31+64]
	104 Add X31, X31, 128
	105 Return 
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Call 0x1C17F20
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Call 0x3EB2AD0
	111 Move X20, [X0]
	112 Call 0x3EB2AE0
	113 Move X1, [X22]
	114 Add X0, X31, 32
	115 Call Enumerator<Object>.Dispose, X0
	116 Compare X20, 0
	117 JumpIfEqual {95}
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Move X19, X0
	121 Move X20, X31
	122 Move X19, X0
	123 Move X1, [X22]
	124 Add X0, X31, 32
	125 Call Enumerator<Object>.Dispose, X0
	126 Compare X20, 0
	127 JumpIfNotEqual {130}
	128 Move X0, X19
	129 Call 0x1D2D690
	130 Move X0, X20
	131 Call 0x1C17F18
	132 Call 0x1991590

Method: System.Void OnBeforeSerialize()

Disassembly:
	0x039CA6D4 FADD V1.2S, V1.2S, V3.2S
	0x039CA6D8 FADD V1.2S, V2.2S, V1.2S
	0x039CA6DC UNIMPLEMENTED
	0x039CA6E0 FADD V1.2S, V2.2S, V1.2S
	0x039CA6E4 FCMP S1, S0
	0x039CA6E8 B.PL 0x39CA724
	0x039CA6EC LDP D1, D2, [X0 + 0x20]
	0x039CA6F0 LDP D3, D4, [X1 + 0x20]
	0x039CA6F4 FSUB V1.2S, V1.2S, V3.2S
	0x00000000 INVALID
	0x039CA6FC FSUB V2.2S, V2.2S, V4.2S
	0x039CA700 UNIMPLEMENTED
	0x00000000 INVALID
	0x039CA708 FADD V1.2S, V1.2S, V3.2S
	0x039CA70C FADD V1.2S, V2.2S, V1.2S
	0x039CA710 UNIMPLEMENTED
	0x039CA714 FADD V1.2S, V2.2S, V1.2S
	0x039CA718 FCMP S1, S0
	0x039CA71C CSET W0, MI
	0x039CA720 RET
	0x039CA724 MOV W0, W31
	0x039CA728 RET
	0x039CA72C SUB X31, X31, 0xF0
	0x039CA730 STR X30, [X31 + 0xC0]
	0x039CA734 STP X22, X21, [X31 + 0xD0]
	0x039CA738 STP X20, X19, [X31 + 0xE0]
	0x039CA73C ADRP X22, 0xA17000
	0x039CA740 ADRP X21, 0x788000
	0x039CA744 LDRB W8, [X22 + 0xCF3]
	0x039CA748 LDR X21, [X21 + 0xD90]
	0x039CA74C MOV X19, X1
	0x039CA750 MOV X20, X0
	0x039CA754 TBNZ X8, 0x0, 0x39CA76C
	0x039CA758 ADRP X0, 0x788000
	0x039CA75C LDR X0, [X0 + 0xD90]
	0x039CA760 BL 0x1C16CF4
	0x039CA764 MOVZ W8, 0x1
	0x039CA768 STRB W8, [X22 + 0xCF3]
	0x039CA76C LDP V1, V0, [X20 + 0x10]
	0x039CA770 LDR V3, [X20]
	0x039CA774 LDR X0, [X21]
	0x039CA778 STP V1, V0, [X31 + 0xA0]
	0x039CA77C LDP V1, V0, [X19 + 0x10]
	0x039CA780 LDR V2, [X19]
	0x039CA784 STP V0, V3, [X31 + 0x80]
	0x039CA788 STP V2, V1, [X31 + 0x60]
	0x039CA78C LDR W8, [X0 + 0xE0]
	0x039CA790 CBNZ W8, 0x39CA798
	0x039CA794 BL 0x1C16DFC
	0x039CA798 LDP V0, V1, [X31 + 0x90]
	0x039CA79C LDR V2, [X31 + 0xB]
	0x039CA7A0 LDP V3, V4, [X31 + 0x60]
	0x039CA7A4 LDR V5, [X31 + 0x8]
	0x039CA7A8 ADD X0, X31, 0x30
	0x039CA7AC ADD X1, X31, 0x0
	0x039CA7B0 STP V0, V1, [X31 + 0x30]
	0x039CA7B4 STR V2, [X31 + 0x5]
	0x039CA7B8 STP V3, V4, [X31]
	0x039CA7BC STR V5, [X31 + 0x2]
	0x039CA7C0 BL 0x39CA67C
	0x039CA7C4 LDP X20, X19, [X31 + 0xE0]
	0x039CA7C8 LDP X22, X21, [X31 + 0xD0]
	0x039CA7CC LDR X30, [X31 + 0xC0]
	0x039CA7D0 ORN W8, W31, W0, 0x0
	0x039CA7D4 AND W0, W8, 0x1
	0x039CA7D8 ADD X31, X31, 0xF0
	0x039CA7DC RET
	0x039CA7E0 SUB X31, X31, 0xB0
	0x039CA7E4 STP X30, X21, [X31 + 0x90]
	0x039CA7E8 STP X20, X19, [X31 + 0xA0]
	0x039CA7EC ADRP X21, 0xA17000
	0x039CA7F0 LDRB W8, [X21 + 0xCF4]
	0x039CA7F4 MOV X19, X1
	0x039CA7F8 MOV X20, X0
	0x039CA7FC TBNZ X8, 0x0, 0x39CA814
	0x039CA800 ADRP X0, 0x788000
	0x039CA804 LDR X0, [X0 + 0xD90]
	0x039CA808 BL 0x1C16CF4
	0x039CA80C MOVZ W8, 0x1
	0x039CA810 STRB W8, [X21 + 0xCF4]
	0x039CA814 CBZ X19, 0x39CA830
	0x039CA818 ADRP X21, 0x788000
	0x039CA81C LDR X21, [X21 + 0xD90]
	0x039CA820 LDR X8, [X19]
	0x039CA824 LDR X0, [X21]
	0x039CA828 CMP X8, X0
	0x039CA82C B.EQ 0x39CA838
	0x039CA830 MOV W0, W31
	0x039CA834 B 0x39CA8A8
	0x039CA838 LDP V1, V0, [X20 + 0x10]
	0x039CA83C LDR V2, [X20]
	0x039CA840 STP V1, V0, [X31 + 0x70]
	0x039CA844 STR V2, [X31 + 0x6]
	0x039CA848 LDR W8, [X0 + 0xE0]
	0x039CA84C CBZ W8, 0x39CA858
	0x039CA850 MOV X1, X0
	0x039CA854 B 0x39CA864
	0x039CA858 BL 0x1C16DFC
	0x039CA85C LDR X1, [X21]
	0x039CA860 LDR X0, [X19]
	0x039CA864 LDP V0, V1, [X31 + 0x60]
	0x039CA868 LDR V2, [X31 + 0x8]
	0x039CA86C STP V0, V1, [X31 + 0x30]
	0x039CA870 STR V2, [X31 + 0x5]
	0x039CA874 LDR X8, [X0 + 0x40]
	0x039CA878 LDR X9, [X1 + 0x40]
	0x039CA87C MOV X0, X19
	0x039CA880 CMP X8, X9
	0x039CA884 B.NE 0x39CA8BC
	0x039CA888 BL 0x1C16E08
	0x039CA88C LDP V0, V1, [X0]
	0x039CA890 LDR V2, [X0 + 0x2]
	0x039CA894 ADD X0, X31, 0x30
	0x039CA898 ADD X1, X31, 0x0
	0x039CA89C STP V0, V1, [X31]
	0x039CA8A0 STR V2, [X31 + 0x2]
	0x039CA8A4 BL 0x39CA67C
	0x039CA8A8 LDP X20, X19, [X31 + 0xA0]
	0x039CA8AC LDP X30, X21, [X31 + 0x90]
	0x039CA8B0 AND W0, W0, 0x1
	0x039CA8B4 ADD X31, X31, 0xB0
	0x039CA8B8 RET
	0x039CA8BC BL 0x1C171E0
	0x039CA8C0 STR X30, [X31 - 0x40]!
	0x039CA8C4 STP X24, X23, [X31 + 0x10]
	0x039CA8C8 STP X22, X21, [X31 + 0x20]
	0x039CA8CC STP X20, X19, [X31 + 0x30]
	0x039CA8D0 MOV X1, X31
	0x039CA8D4 MOV X19, X0
	0x039CA8D8 BL 0x338FE0C
	0x039CA8DC MOV W20, W0
	0x039CA8E0 ADD X0, X19, 0x4
	0x039CA8E4 MOV X1, X31
	0x039CA8E8 BL 0x338FE0C
	0x039CA8EC MOV W21, W0
	0x039CA8F0 ADD X0, X19, 0x8
	0x039CA8F4 MOV X1, X31
	0x039CA8F8 BL 0x338FE0C
	0x039CA8FC MOV W22, W0
	0x039CA900 ADD X0, X19, 0xC
	0x039CA904 MOV X1, X31
	0x039CA908 BL 0x338FE0C
	0x039CA90C EOR W8, W20, W21, 0x2
	0x039CA910 EOR W8, W8, W22, 0x2
	0x039CA914 EOR W23, W8, W0, 0x1
	0x039CA918 ADD X0, X19, 0x10
	0x039CA91C MOV X1, X31
	0x039CA920 BL 0x338FE0C
	0x039CA924 MOV W20, W0
	0x039CA928 ADD X0, X19, 0x14
	0x039CA92C MOV X1, X31
	0x039CA930 BL 0x338FE0C
	0x039CA934 MOV W21, W0
	0x039CA938 ADD X0, X19, 0x18
	0x039CA93C MOV X1, X31
	0x039CA940 BL 0x338FE0C
	0x039CA944 MOV W22, W0
	0x039CA948 ADD X0, X19, 0x1C
	0x039CA94C MOV X1, X31
	0x039CA950 BL 0x338FE0C
	0x039CA954 EOR W8, W20, W21, 0x2
	0x039CA958 EOR W8, W8, W22, 0x2
	0x039CA95C EOR W24, W8, W0, 0x1
	0x039CA960 ADD X0, X19, 0x20
	0x039CA964 MOV X1, X31
	0x039CA968 BL 0x338FE0C
	0x039CA96C MOV W20, W0
	0x039CA970 ADD X0, X19, 0x24
	0x039CA974 MOV X1, X31
	0x039CA978 BL 0x338FE0C
	0x039CA97C MOV W21, W0
	0x039CA980 ADD X0, X19, 0x28
	0x039CA984 MOV X1, X31
	0x039CA988 BL 0x338FE0C
	0x039CA98C MOV W22, W0
	0x039CA990 ADD X0, X19, 0x2C
	0x039CA994 MOV X1, X31
	0x039CA998 BL 0x338FE0C
	0x039CA99C EOR W8, W20, W21, 0x2
	0x039CA9A0 MOVZ W9, 0x17
	0x039CA9A4 EOR W8, W8, W22, 0x2
	0x039CA9A8 MADD W10, W23, W9, W24
	0x039CA9AC EOR W8, W8, W0, 0x1
	0x039CA9B0 LDP X20, X19, [X31 + 0x30]
	0x039CA9B4 LDP X22, X21, [X31 + 0x20]
	0x039CA9B8 LDP X24, X23, [X31 + 0x10]
	0x039CA9BC MADD W8, W10, W9, W8
	0x039CA9C0 MOVZ W9, 0x27F7
	0x039CA9C4 MOVK W9, 0x30000
	0x039CA9C8 ADD W0, W8, W9
	0x039CA9CC LDR X30, [X31], #0x40
	0x039CA9D0 RET
	0x039CA9D4 STR X30, [X31 - 0x20]!
	0x039CA9D8 STP X20, X19, [X31 + 0x10]
	0x039CA9DC ADRP X19, 0xA17000
	0x039CA9E0 LDRB W8, [X19 + 0xCF5]
	0x039CA9E4 TBNZ X8, 0x0, 0x39CA9FC
	0x039CA9E8 ADRP X0, 0x788000
	0x039CA9EC LDR X0, [X0 + 0xD90]
	0x039CA9F0 BL 0x1C16CF4
	0x039CA9F4 MOVZ W8, 0x1
	0x039CA9F8 STRB W8, [X19 + 0xCF5]
	0x039CA9FC ADRP X20, 0xA0E000
	0x039CAA00 ADRP X19, 0x788000
	0x039CAA04 LDRB W8, [X20 + 0xE5A]
	0x039CAA08 LDR X19, [X19 + 0xD90]
	0x039CAA0C CBNZ W8, 0x39CAA24
	0x039CAA10 ADRP X0, 0x730000
	0x039CAA14 LDR X0, [X0 + 0x9A0]
	0x039CAA18 BL 0x1C16CF4
	0x039CAA1C MOVZ W8, 0x1
	0x039CAA20 STRB W8, [X20 + 0xE5A]
	0x039CAA24 ADRP X8, 0x730000
	0x039CAA28 LDR X8, [X8 + 0x9A0]
	0x039CAA2C LDR X9, [X19]
	0x039CAA30 LDP X20, X19, [X31 + 0x10]
	0x039CAA34 LDR X8, [X8]
	0x039CAA38 LDR X9, [X9 + 0xB8]
	0x039CAA3C LDR X8, [X8 + 0xB8]
	0x039CAA40 LDP S0, S1, [X8]
	0x039CAA44 LDP S2, S3, [X8 + 0x8]
	0x039CAA48 STP S0, S1, [X9]
	0x039CAA4C STP S2, S3, [X9 + 0x8]
	0x039CAA50 STP S0, S1, [X9 + 0x10]
	0x039CAA54 STP S2, S3, [X9 + 0x18]
	0x039CAA58 STP S0, S1, [X9 + 0x20]
	0x039CAA5C STP S2, S3, [X9 + 0x28]
	0x039CAA60 LDR X30, [X31], #0x20
	0x039CAA64 RET
	0x039CAA68 STP D9, D8, [X31 - 0x40]!
	0x039CAA6C STR X30, [X31 + 0x10]
	0x039CAA70 STP X22, X21, [X31 + 0x20]
	0x039CAA74 STP X20, X19, [X31 + 0x30]
	0x039CAA78 MOV X19, X3
	0x039CAA7C MOV X21, X2
	0x039CAA80 MOV X22, X1
	0x039CAA84 MOVZ W2, 0x1
	0x039CAA88 MOV W1, W31
	0x039CAA8C MOV X3, X31
	0x039CAA90 MOV X20, X0
	0x039CAA94 BL 0x3C50050
	0x039CAA98 MOVZ W2, 0x2
	0x039CAA9C MOV X0, X20
	0x039CAAA0 MOV W1, W31
	0x039CAAA4 MOV X3, X31
	0x039CAAA8 MOV V8.16B, V0.16B
	0x039CAAAC BL 0x3C50050
	0x039CAAB0 MOVZ W2, 0x3
	0x039CAAB4 MOV X0, X20
	0x039CAAB8 MOV W1, W31
	0x039CAABC MOV X3, X31
	0x039CAAC0 MOV V9.16B, V0.16B
	0x039CAAC4 BL 0x3C50050
	0x039CAAC8 MOVZ W1, 0x1
	0x039CAACC MOVZ W2, 0x1
	0x039CAAD0 MOV X0, X20
	0x039CAAD4 MOV X3, X31
	0x039CAAD8 STP S8, S9, [X22]
	0x039CAADC STR S0, [X22 + 0x8]
	0x039CAAE0 BL 0x3C50050
	0x039CAAE4 MOVZ W1, 0x1
	0x039CAAE8 MOVZ W2, 0x2
	0x039CAAEC MOV X0, X20
	0x039CAAF0 MOV X3, X31
	0x039CAAF4 MOV V8.16B, V0.16B
	0x039CAAF8 BL 0x3C50050
	0x039CAAFC MOVZ W1, 0x1
	0x039CAB00 MOVZ W2, 0x3
	0x039CAB04 MOV X0, X20
	0x039CAB08 MOV X3, X31
	0x039CAB0C MOV V9.16B, V0.16B
	0x039CAB10 BL 0x3C50050
	0x039CAB14 MOVZ W1, 0x2
	0x039CAB18 MOVZ W2, 0x1
	0x039CAB1C MOV X0, X20
	0x039CAB20 MOV X3, X31
	0x039CAB24 STP S8, S9, [X21]
	0x039CAB28 STR S0, [X21 + 0x8]
	0x039CAB2C BL 0x3C50050
	0x039CAB30 MOVZ W1, 0x2
	0x039CAB34 MOVZ W2, 0x2
	0x039CAB38 MOV X0, X20
	0x039CAB3C MOV X3, X31
	0x039CAB40 MOV V8.16B, V0.16B
	0x039CAB44 BL 0x3C50050
	0x039CAB48 MOVZ W1, 0x2
	0x039CAB4C MOVZ W2, 0x3
	0x039CAB50 MOV X0, X20
	0x039CAB54 MOV X3, X31
	0x039CAB58 MOV V9.16B, V0.16B
	0x039CAB5C BL 0x3C50050
	0x039CAB60 STP S8, S9, [X19]
	0x039CAB64 STR S0, [X19 + 0x8]
	0x039CAB68 LDP X20, X19, [X31 + 0x30]
	0x039CAB6C LDP X22, X21, [X31 + 0x20]
	0x039CAB70 LDR X30, [X31 + 0x10]
	0x039CAB74 LDP D9, D8, [X31], #0x40
	0x039CAB78 RET
	0x039CAB7C STP D9, D8, [X31 - 0x50]!
	0x039CAB80 STR X30, [X31 + 0x10]
	0x039CAB84 STP X24, X23, [X31 + 0x20]
	0x039CAB88 STP X22, X21, [X31 + 0x30]
	0x039CAB8C STP X20, X19, [X31 + 0x40]
	0x039CAB90 MOV X22, X3
	0x039CAB94 MOV X23, X2
	0x039CAB98 MOV X24, X1
	0x039CAB9C MOVZ W2, 0x4
	0x039CABA0 MOV W1, W31
	0x039CABA4 MOV X3, X31
	0x039CABA8 MOV X19, X5
	0x039CABAC MOV X21, X4
	0x039CABB0 MOV X20, X0
	0x039CABB4 BL 0x3C50050
	0x039CABB8 MOVZ W1, 0x1
	0x039CABBC MOVZ W2, 0x4
	0x039CABC0 MOV X0, X20
	0x039CABC4 MOV X3, X31
	0x039CABC8 MOV V8.16B, V0.16B
	0x039CABCC BL 0x3C50050
	0x039CABD0 MOVZ W1, 0x2
	0x039CABD4 MOVZ W2, 0x4
	0x039CABD8 MOV X0, X20
	0x039CABDC MOV X3, X31
	0x039CABE0 MOV V9.16B, V0.16B
	0x039CABE4 BL 0x3C50050
	0x039CABE8 MOVZ W2, 0x5
	0x039CABEC MOV X0, X20
	0x039CABF0 MOV W1, W31
	0x039CABF4 MOV X3, X31
	0x039CABF8 STP S8, S9, [X24]
	0x039CABFC STR S0, [X24 + 0x8]
	0x039CAC00 BL 0x3C50050
	0x039CAC04 MOVZ W1, 0x1
	0x039CAC08 MOVZ W2, 0x5
	0x039CAC0C MOV X0, X20
	0x039CAC10 MOV X3, X31
	0x039CAC14 MOV V8.16B, V0.16B
	0x039CAC18 BL 0x3C50050
	0x039CAC1C MOVZ W1, 0x2
	0x039CAC20 MOVZ W2, 0x5
	0x039CAC24 MOV X0, X20
	0x039CAC28 MOV X3, X31
	0x039CAC2C MOV V9.16B, V0.16B
	0x039CAC30 BL 0x3C50050
	0x039CAC34 MOVZ W2, 0x6
	0x039CAC38 MOV X0, X20
	0x039CAC3C MOV W1, W31
	0x039CAC40 MOV X3, X31
	0x039CAC44 STP S8, S9, [X23]
	0x039CAC48 STR S0, [X23 + 0x8]
	0x039CAC4C BL 0x3C50050
	0x039CAC50 MOVZ W1, 0x1
	0x039CAC54 MOVZ W2, 0x6
	0x039CAC58 MOV X0, X20
	0x039CAC5C MOV X3, X31
	0x039CAC60 MOV V8.16B, V0.16B
	0x039CAC64 BL 0x3C50050
	0x039CAC68 MOVZ W1, 0x2
	0x039CAC6C MOVZ W2, 0x6
	0x039CAC70 MOV X0, X20
	0x039CAC74 MOV X3, X31
	0x039CAC78 MOV V9.16B, V0.16B
	0x039CAC7C BL 0x3C50050
	0x039CAC80 MOVZ W2, 0x7
	0x039CAC84 MOV X0, X20
	0x039CAC88 MOV W1, W31
	0x039CAC8C MOV X3, X31
	0x039CAC90 STP S8, S9, [X22]
	0x039CAC94 STR S0, [X22 + 0x8]
	0x039CAC98 BL 0x3C50050
	0x039CAC9C MOVZ W1, 0x1
	0x039CACA0 MOVZ W2, 0x7
	0x039CACA4 MOV X0, X20
	0x039CACA8 MOV X3, X31
	0x039CACAC MOV V8.16B, V0.16B
	0x039CACB0 BL 0x3C50050
	0x039CACB4 MOVZ W1, 0x2
	0x039CACB8 MOVZ W2, 0x7
	0x039CACBC MOV X0, X20
	0x039CACC0 MOV X3, X31
	0x039CACC4 MOV V9.16B, V0.16B
	0x039CACC8 BL 0x3C50050
	0x039CACCC MOVZ W2, 0x8
	0x039CACD0 MOV X0, X20
	0x039CACD4 MOV W1, W31
	0x039CACD8 MOV X3, X31
	0x039CACDC STP S8, S9, [X21]
	0x039CACE0 STR S0, [X21 + 0x8]
	0x039CACE4 BL 0x3C50050
	0x039CACE8 MOVZ W1, 0x1
	0x039CACEC MOVZ W2, 0x8
	0x039CACF0 MOV X0, X20
	0x039CACF4 MOV X3, X31
	0x039CACF8 MOV V8.16B, V0.16B
	0x039CACFC BL 0x3C50050
	0x039CAD00 MOVZ W1, 0x2
	0x039CAD04 MOVZ W2, 0x8
	0x039CAD08 MOV X0, X20
	0x039CAD0C MOV X3, X31
	0x039CAD10 MOV V9.16B, V0.16B
	0x039CAD14 BL 0x3C50050
	0x039CAD18 STP S8, S9, [X19]
	0x039CAD1C STR S0, [X19 + 0x8]
	0x039CAD20 LDP X20, X19, [X31 + 0x40]
	0x039CAD24 LDP X22, X21, [X31 + 0x30]
	0x039CAD28 LDP X24, X23, [X31 + 0x20]
	0x039CAD2C LDR X30, [X31 + 0x10]
	0x039CAD30 LDP D9, D8, [X31], #0x50
	0x039CAD34 RET
	0x039CAD38 STP D9, D8, [X31 - 0x20]!
	0x039CAD3C STP X30, X19, [X31 + 0x10]
	0x039CAD40 MOV W1, W31
	0x039CAD44 MOV W2, W31
	0x039CAD48 MOV X3, X31
	0x039CAD4C MOV V8.16B, V2.16B
	0x039CAD50 MOV V9.16B, V1.16B
	0x039CAD54 MOV X19, X0
	0x039CAD58 BL 0x3C5019C
	0x039CAD5C MOVZ W1, 0x1
	0x039CAD60 MOV X0, X19
	0x039CAD64 MOV W2, W31
	0x039CAD68 MOV V0.16B, V9.16B
	0x039CAD6C MOV X3, X31
	0x039CAD70 BL 0x3C5019C
	0x039CAD74 MOV X0, X19
	0x039CAD78 LDP X30, X19, [X31 + 0x10]
	0x039CAD7C MOVZ W1, 0x2
	0x039CAD80 MOV W2, W31
	0x039CAD84 MOV V0.16B, V8.16B
	0x039CAD88 MOV X3, X31
	0x039CAD8C LDP D9, D8, [X31], #0x20
	0x039CAD90 B 0x3C5019C
	0x039CAD94 STP D9, D8, [X31 - 0x20]!
	0x039CAD98 STP X30, X19, [X31 + 0x10]
	0x039CAD9C MOVZ W2, 0x1
	0x039CADA0 MOV W1, W31
	0x039CADA4 MOV X3, X31
	0x039CADA8 MOV V8.16B, V2.16B
	0x039CADAC MOV V9.16B, V1.16B
	0x039CADB0 MOV X19, X0
	0x039CADB4 BL 0x3C5019C
	0x039CADB8 MOVZ W2, 0x2
	0x039CADBC MOV X0, X19
	0x039CADC0 MOV W1, W31
	0x039CADC4 MOV V0.16B, V9.16B
	0x039CADC8 MOV X3, X31
	0x039CADCC BL 0x3C5019C
	0x039CADD0 MOV X0, X19
	0x039CADD4 LDP X30, X19, [X31 + 0x10]
	0x039CADD8 MOVZ W2, 0x3
	0x039CADDC MOV W1, W31
	0x039CADE0 MOV V0.16B, V8.16B
	0x039CADE4 MOV X3, X31
	0x039CADE8 LDP D9, D8, [X31], #0x20
	0x039CADEC B 0x3C5019C
	0x039CADF0 STP D9, D8, [X31 - 0x20]!
	0x039CADF4 STP X30, X19, [X31 + 0x10]
	0x039CADF8 MOVZ W1, 0x1
	0x039CADFC MOVZ W2, 0x1
	0x039CAE00 MOV X3, X31
	0x039CAE04 MOV V8.16B, V2.16B
	0x039CAE08 MOV V9.16B, V1.16B
	0x039CAE0C MOV X19, X0
	0x039CAE10 BL 0x3C5019C
	0x039CAE14 MOVZ W1, 0x1
	0x039CAE18 MOVZ W2, 0x2
	0x039CAE1C MOV X0, X19
	0x039CAE20 MOV V0.16B, V9.16B
	0x039CAE24 MOV X3, X31
	0x039CAE28 BL 0x3C5019C
	0x039CAE2C MOV X0, X19
	0x039CAE30 LDP X30, X19, [X31 + 0x10]
	0x039CAE34 MOVZ W1, 0x1
	0x039CAE38 MOVZ W2, 0x3
	0x039CAE3C MOV V0.16B, V8.16B
	0x039CAE40 MOV X3, X31
	0x039CAE44 LDP D9, D8, [X31], #0x20
	0x039CAE48 B 0x3C5019C
	0x039CAE4C STP D9, D8, [X31 - 0x20]!
	0x039CAE50 STP X30, X19, [X31 + 0x10]
	0x039CAE54 MOVZ W1, 0x2
	0x039CAE58 MOVZ W2, 0x1
	0x039CAE5C MOV X3, X31
	0x039CAE60 MOV V8.16B, V2.16B
	0x039CAE64 MOV V9.16B, V1.16B
	0x039CAE68 MOV X19, X0
	0x039CAE6C BL 0x3C5019C
	0x039CAE70 MOVZ W1, 0x2
	0x039CAE74 MOVZ W2, 0x2
	0x039CAE78 MOV X0, X19
	0x039CAE7C MOV V0.16B, V9.16B
	0x039CAE80 MOV X3, X31
	0x039CAE84 BL 0x3C5019C
	0x039CAE88 MOV X0, X19
	0x039CAE8C LDP X30, X19, [X31 + 0x10]
	0x039CAE90 MOVZ W1, 0x2
	0x039CAE94 MOVZ W2, 0x3
	0x039CAE98 MOV V0.16B, V8.16B
	0x039CAE9C MOV X3, X31
	0x039CAEA0 LDP D9, D8, [X31], #0x20
	0x039CAEA4 B 0x3C5019C
	0x039CAEA8 STP D13, D12, [X31 - 0x40]!
	0x039CAEAC STP D11, D10, [X31 + 0x10]
	0x039CAEB0 STP D9, D8, [X31 + 0x20]
	0x039CAEB4 STP X30, X19, [X31 + 0x30]
	0x039CAEB8 LDP S11, S12, [X31 + 0x40]
	0x039CAEBC LDR V13, [X31 + 0x48]
	0x039CAEC0 MOV V8.16B, V5.16B
	0x039CAEC4 MOV V9.16B, V4.16B
	0x039CAEC8 MOV V10.16B, V3.16B
	0x039CAECC MOV X19, X0
	0x039CAED0 BL 0x39CAD94
	0x039CAED4 MOV X0, X19
	0x039CAED8 MOV V0.16B, V10.16B
	0x039CAEDC MOV V1.16B, V9.16B
	0x039CAEE0 MOV V2.16B, V8.16B
	0x039CAEE4 BL 0x39CADF0
	0x039CAEE8 MOV X0, X19
	0x039CAEEC MOV V0.16B, V11.16B
	0x039CAEF0 LDP X30, X19, [X31 + 0x30]
	0x039CAEF4 LDP D9, D8, [X31 + 0x20]
	0x039CAEF8 LDP D11, D10, [X31 + 0x10]
	0x039CAEFC MOV V1.16B, V12.16B
	0x039CAF00 MOV V2.16B, V13.16B
	0x039CAF04 LDP D13, D12, [X31], #0x40
	0x039CAF08 B 0x39CAE4C
	0x039CAF0C STP D9, D8, [X31 - 0x30]!
	0x039CAF10 STR X30, [X31 + 0x10]
	0x039CAF14 STP X20, X19, [X31 + 0x20]
	0x039CAF18 MOV W19, W1
	0x039CAF1C MOV W1, W31
	0x039CAF20 MOV W2, W19
	0x039CAF24 MOV X3, X31
	0x039CAF28 MOV V8.16B, V2.16B
	0x039CAF2C MOV V9.16B, V1.16B
	0x039CAF30 MOV X20, X0
	0x039CAF34 BL 0x3C5019C
	0x039CAF38 MOVZ W1, 0x1
	0x039CAF3C MOV X0, X20
	0x039CAF40 MOV W2, W19
	0x039CAF44 MOV V0.16B, V9.16B
	0x039CAF48 MOV X3, X31
	0x039CAF4C BL 0x3C5019C
	0x039CAF50 MOV X0, X20
	0x039CAF54 MOV W2, W19
	0x039CAF58 LDP X20, X19, [X31 + 0x20]
	0x039CAF5C LDR X30, [X31 + 0x10]
	0x039CAF60 MOVZ W1, 0x2
	0x039CAF64 MOV V0.16B, V8.16B
	0x039CAF68 MOV X3, X31
	0x039CAF6C LDP D9, D8, [X31], #0x30
	0x039CAF70 B 0x3C5019C
	0x039CAF74 STP D9, D8, [X31 - 0x30]!
	0x039CAF78 STR X30, [X31 + 0x10]
	0x039CAF7C STP X20, X19, [X31 + 0x20]
	0x039CAF80 MOV W19, W1
	0x039CAF84 MOV W1, W31
	0x039CAF88 MOV W2, W19
	0x039CAF8C MOV X3, X31
	0x039CAF90 MOV X20, X0
	0x039CAF94 BL 0x3C50050
	0x039CAF98 MOVZ W1, 0x1
	0x039CAF9C MOV X0, X20
	0x039CAFA0 MOV W2, W19
	0x039CAFA4 MOV X3, X31
	0x039CAFA8 MOV V8.16B, V0.16B
	0x039CAFAC BL 0x3C50050
	0x039CAFB0 MOVZ W1, 0x2
	0x039CAFB4 MOV X0, X20
	0x039CAFB8 MOV W2, W19
	0x039CAFBC MOV X3, X31
	0x039CAFC0 MOV V9.16B, V0.16B
	0x039CAFC4 BL 0x3C50050
	0x039CAFC8 LDP X20, X19, [X31 + 0x20]
	0x039CAFCC LDR X30, [X31 + 0x10]
	0x039CAFD0 MOV V2.16B, V0.16B
	0x039CAFD4 MOV V0.16B, V8.16B
	0x039CAFD8 MOV V1.16B, V9.16B
	0x039CAFDC LDP D9, D8, [X31], #0x30
	0x039CAFE0 RET
	0x039CAFE4 MOV X1, X31
	0x039CAFE8 B 0x33BDD8C
	0x039CAFEC MOV X1, X31
	0x039CAFF0 B 0x33BDD8C
	0x039CAFF4 STP X30, X19, [X31 - 0x10]!
	0x039CAFF8 ADRP X19, 0xA17000
	0x039CAFFC LDRB W8, [X19 + 0xCF6]
	0x039CB000 TBNZ X8, 0x0, 0x39CB018
	0x039CB004 ADRP X0, 0x787000
	0x039CB008 LDR X0, [X0 + 0xD98]
	0x039CB00C BL 0x1C16CF4
	0x039CB010 MOVZ W8, 0x1
	0x039CB014 STRB W8, [X19 + 0xCF6]
	0x039CB018 MOV X0, X31
	0x039CB01C BL 0x3C3BACC
	0x039CB020 CMP W0, 0xB
	0x039CB024 B.EQ 0x39CB048
	0x039CB028 MOV X0, X31
	0x039CB02C BL 0x3C3BACC
	0x039CB030 CMP W0, 0x11
	0x039CB034 B.EQ 0x39CB048
	0x039CB038 MOV X0, X31
	0x039CB03C BL 0x3C3BACC
	0x039CB040 CMP W0, 0x4
	0x039CB044 B.NE 0x39CB054
	0x039CB048 MOV W0, W31
	0x039CB04C LDP X30, X19, [X31], #0x10
	0x039CB050 RET
	0x039CB054 ADRP X19, 0x787000
	0x039CB058 LDR X19, [X19 + 0xD98]
	0x039CB05C LDR X0, [X19]
	0x039CB060 LDR W8, [X0 + 0xE0]
	0x039CB064 CBNZ W8, 0x39CB070
	0x039CB068 BL 0x1C16DFC
	0x039CB06C LDR X0, [X19]
	0x039CB070 LDR X8, [X0 + 0xB8]
	0x039CB074 LDRB W8, [X8 + 0x3C]
	0x039CB078 CMP W8, 0x0
	0x039CB07C CSET W0, NE
	0x039CB080 B 0x39CB04C
	0x039CB084 SUB X31, X31, 0x90
	0x039CB088 STP X30, X23, [X31 + 0x60]
	0x039CB08C STP X22, X21, [X31 + 0x70]
	0x039CB090 STP X20, X19, [X31 + 0x80]
	0x039CB094 ADRP X19, 0xA16000
	0x039CB098 ADRP X22, 0x787000
	0x039CB09C LDRB W8, [X19 + 0xCF7]
	0x039CB0A0 LDR X22, [X22 + 0xD98]
	0x039CB0A4 TBNZ X8, 0x0, 0x39CB0E0
	0x039CB0A8 ADRP X0, 0x787000
	0x039CB0AC LDR X0, [X0 + 0xD98]
	0x039CB0B0 BL 0x1C16CF4
	0x039CB0B4 ADRP X0, 0x785000
	0x039CB0B8 LDR X0, [X0 + 0x9B0]
	0x039CB0BC BL 0x1C16CF4
	0x039CB0C0 ADRP X0, 0x785000
	0x039CB0C4 LDR X0, [X0 + 0x618]
	0x039CB0C8 BL 0x1C16CF4
	0x039CB0CC ADRP X0, 0x728000
	0x039CB0D0 LDR X0, [X0 + 0x988]
	0x039CB0D4 BL 0x1C16CF4
	0x039CB0D8 MOVZ W8, 0x1
	0x039CB0DC STRB W8, [X19 + 0xCF7]
	0x039CB0E0 LDR X0, [X22]
	0x039CB0E4 LDR W8, [X0 + 0xE0]
	0x039CB0E8 CBNZ W8, 0x39CB0F4
	0x039CB0EC BL 0x1C16DFC
	0x039CB0F0 LDR X0, [X22]
	0x039CB0F4 LDR X8, [X0 + 0xB8]
	0x039CB0F8 STR W31, [X8 + 0x38]
	0x039CB0FC BL 0x39CAFF4
	0x039CB100 TBZ X0, 0x0, 0x39CB230
	0x039CB104 LDR X0, [X22]
	0x039CB108 LDR W8, [X0 + 0xE0]
	0x039CB10C CBNZ W8, 0x39CB118
	0x039CB110 BL 0x1C16DFC
	0x039CB114 LDR X0, [X22]
	0x039CB118 LDR X8, [X0 + 0xB8]
	0x039CB11C LDR X9, [X8 + 0x30]
	0x039CB120 CBNZ X9, 0x39CB230
	0x039CB124 LDR W9, [X0 + 0xE0]
	0x039CB128 CBNZ W9, 0x39CB138
	0x039CB12C BL 0x1C16DFC
	0x039CB130 LDR X8, [X22]
	0x039CB134 LDR X8, [X8 + 0xB8]
	0x039CB138 ADRP X21, 0x785000
	0x039CB13C LDR X21, [X21 + 0x618]
	0x039CB140 LDP W9, W10, [X8 + 0x24]
	0x039CB144 LDR W19, [X8 + 0x20]
	0x039CB148 LDR X0, [X21]
	0x039CB14C ADD W9, W9, 0x1
	0x039CB150 MUL W9, W9, W10
	0x039CB154 CMP W9, 0x1
	0x039CB158 LDR W8, [X0 + 0xE0]
	0x039CB15C CSINC W20, W9, W31, GT
	0x039CB160 CBNZ W8, 0x39CB168
	0x039CB164 BL 0x1C16DFC
	0x039CB168 ADRP X23, 0xA16000
	0x039CB16C LDRB W8, [X23 + 0xB3B]
	0x039CB170 CBNZ W8, 0x39CB188
	0x039CB174 ADRP X0, 0x785000
	0x039CB178 LDR X0, [X0 + 0x618]
	0x039CB17C BL 0x1C16CF4
	0x039CB180 MOVZ W8, 0x1
	0x039CB184 STRB W8, [X23 + 0xB3B]
	0x039CB188 LDR X0, [X21]
	0x039CB18C LDR W8, [X0 + 0xE0]
	0x039CB190 CBNZ W8, 0x39CB19C
	0x039CB194 BL 0x1C16DFC
	0x039CB198 LDR X0, [X21]
	0x039CB19C ADRP X8, 0x785000
	0x039CB1A0 LDR X8, [X8 + 0x9B0]
	0x039CB1A4 LDR X9, [X0 + 0xB8]
	0x039CB1A8 LDR X8, [X8]
	0x039CB1AC LDR W21, [X9]
	0x039CB1B0 LDR W10, [X8 + 0xE0]
	0x039CB1B4 CBNZ W10, 0x39CB1C0
	0x039CB1B8 MOV X0, X8
	0x039CB1BC BL 0x1C16DFC
	0x039CB1C0 ADRP X8, 0x728000
	0x039CB1C4 LDR X8, [X8 + 0x988]
	0x039CB1C8 FMOV S0, W31
	0x039CB1CC MOVZ W4, 0x31
	0x039CB1D0 MOVZ W7, 0x5
	0x039CB1D4 LDR X8, [X8]
	0x039CB1D8 MOV W0, W19
	0x039CB1DC MOV W1, W20
	0x039CB1E0 MOV W2, W21
	0x039CB1E4 STR X8, [X31 + 0x50]
	0x039CB1E8 MOVZ W8, 0x1
	0x039CB1EC MOV W3, W31
	0x039CB1F0 MOV W5, W31
	0x039CB1F4 MOV W6, W31
	0x039CB1F8 STR W31, [X31 + 0x48]
	0x039CB1FC STR W31, [X31 + 0x40]
	0x039CB200 STRB W31, [X31 + 0x38]
	0x039CB204 STRB W31, [X31 + 0x30]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 464
	011 Move X20, 0xA18000
	012 Move W8, [X20+3306]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {134}
	018 Move X0, 0x789000
	019 Move X0, [X0+3184]
	020 Call 0x1C17CF4
	021 Move X0, 0x789000
	022 Move X0, [X0+3192]
	023 Call 0x1C17CF4
	024 Move X0, 0x789000
	025 Move X0, [X0+3200]
	026 Call 0x1C17CF4
	027 Move X0, 0x789000
	028 Move X0, [X0+3208]
	029 Call 0x1C17CF4
	030 Move X0, 0x789000
	031 Move X0, [X0+3216]
	032 Call 0x1C17CF4
	033 Move X0, 0x789000
	034 Move X0, [X0+3224]
	035 Call 0x1C17CF4
	036 Move X0, 0x789000
	037 Move X0, [X0+3232]
	038 Call 0x1C17CF4
	039 Move X0, 0x785000
	040 Move X0, [X0+608]
	041 Call 0x1C17CF4
	042 Move X0, 0x789000
	043 Move X0, [X0+2528]
	044 Call 0x1C17CF4
	045 Move X0, 0x789000
	046 Move X0, [X0+3240]
	047 Call 0x1C17CF4
	048 Move X0, 0x789000
	049 Move X0, [X0+3248]
	050 Call 0x1C17CF4
	051 Move X0, 0x789000
	052 Move X0, [X0+3256]
	053 Call 0x1C17CF4
	054 Move X0, 0x789000
	055 Move X0, [X0+3264]
	056 Call 0x1C17CF4
	057 Move X0, 0x789000
	058 Move X0, [X0+3272]
	059 Call 0x1C17CF4
	060 Move X0, 0x789000
	061 Move X0, [X0+3280]
	062 Call 0x1C17CF4
	063 Move X0, 0x789000
	064 Move X0, [X0+3288]
	065 Call 0x1C17CF4
	066 Move X0, 0x789000
	067 Move X0, [X0+2552]
	068 Call 0x1C17CF4
	069 Move X0, 0x789000
	070 Move X0, [X0+3296]
	071 Call 0x1C17CF4
	072 Move X0, 0x789000
	073 Move X0, [X0+3304]
	074 Call 0x1C17CF4
	075 Move X0, 0x789000
	076 Move X0, [X0+2568]
	077 Call 0x1C17CF4
	078 Move X0, 0x789000
	079 Move X0, [X0+3312]
	080 Call 0x1C17CF4
	081 Move X0, 0x789000
	082 Move X0, [X0+3320]
	083 Call 0x1C17CF4
	084 Move X0, 0x789000
	085 Move X0, [X0+3328]
	086 Call 0x1C17CF4
	087 Move X0, 0x789000
	088 Move X0, [X0+3336]
	089 Call 0x1C17CF4
	090 Move X0, 0x789000
	091 Move X0, [X0+3344]
	092 Call 0x1C17CF4
	093 Move X0, 0x789000
	094 Move X0, [X0+3352]
	095 Call 0x1C17CF4
	096 Move X0, 0x789000
	097 Move X0, [X0+3360]
	098 Call 0x1C17CF4
	099 Move X0, 0x789000
	100 Move X0, [X0+3368]
	101 Call 0x1C17CF4
	102 Move X0, 0x789000
	103 Move X0, [X0+3376]
	104 Call 0x1C17CF4
	105 Move X0, 0x789000
	106 Move X0, [X0+3120]
	107 Call 0x1C17CF4
	108 Move X0, 0x789000
	109 Move X0, [X0+3384]
	110 Call 0x1C17CF4
	111 Move X0, 0x789000
	112 Move X0, [X0+3392]
	113 Call 0x1C17CF4
	114 Move X0, 0x789000
	115 Move X0, [X0+3400]
	116 Call 0x1C17CF4
	117 Move X0, 0x789000
	118 Move X0, [X0+3408]
	119 Call 0x1C17CF4
	120 Move X0, 0x789000
	121 Move X0, [X0+3416]
	122 Call 0x1C17CF4
	123 Move X0, 0x789000
	124 Move X0, [X0+3424]
	125 Call 0x1C17CF4
	126 Move X0, 0x789000
	127 Move X0, [X0+3432]
	128 Call 0x1C17CF4
	129 Move X0, 0x789000
	130 Move X0, [X0+2584]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X20+3306], W8
	134 NotImplemented "Instruction MOVI not yet implemented."
	135 Move [X31+256], X31
	136 Move [X31+264], X31
	137 Move [X31+272], X31
	138 Move [X31+224], X31
	139 Move [X31+232], X31
	140 Move [X31+240], X31
	141 Move [X31+192], X31
	142 Move [X31+200], X31
	143 Move [X31+208], X31
	144 Move [X31+160], X31
	145 Move [X31+168], X31
	146 Move [X31+176], X31
	147 Move [X31+80], X31
	148 Move [X31+88], X31
	149 Move [X31+96], X31
	150 Move [X31+56], X31
	151 Move [X31+64], X31
	152 Move [X31+128], V0
	153 Move [X31+136], V0
	154 Move [X31+7], V0
	155 Move [X31+72], X31
	156 Move X8, [X19+72]
	157 Compare X8, 0
	158 JumpIfEqual {613}
	159 Move X8, [X19+80]
	160 Compare X8, 0
	161 JumpIfEqual {613}
	162 Move X8, [X19+96]
	163 Compare X8, 0
	164 JumpIfEqual {613}
	165 Move X8, [X19+88]
	166 Compare X8, 0
	167 JumpIfEqual {613}
	168 Move X9, [X19+16]
	169 Compare X9, 0
	170 JumpIfEqual {613}
	171 Move X8, [X19+24]
	172 Compare X8, 0
	173 JumpIfEqual {613}
	174 Move X10, [X19+40]
	175 Compare X10, 0
	176 JumpIfEqual {613}
	177 Move X10, [X19+32]
	178 Compare X10, 0
	179 JumpIfEqual {613}
	180 Move X10, [X19+48]
	181 Compare X10, 0
	182 JumpIfEqual {613}
	183 Move W2, [X9+24]
	184 Move W10, [X9+28]
	185 Add W10, W10, 1
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X9+24], W31
	188 Move [X9+28], W10
	189 Move X0, [X9+16]
	190 Move W1, W31
	191 Move X3, X31
	192 Call Array.Clear, X0, X1, X2
	193 Move X8, [X19+24]
	194 Compare X8, 0
	195 JumpIfEqual {638}
	196 Move W2, [X8+24]
	197 Move W9, [X8+28]
	198 Add W9, W9, 1
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move [X8+24], W31
	201 Move [X8+28], W9
	202 Move X0, [X8+16]
	203 Move W1, W31
	204 Move X3, X31
	205 Call Array.Clear, X0, X1, X2
	206 Move X8, [X19+32]
	207 Compare X8, 0
	208 JumpIfEqual {638}
	209 Move W2, [X8+24]
	210 Move W9, [X8+28]
	211 Add W9, W9, 1
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move [X8+24], W31
	214 Move [X8+28], W9
	215 Move X0, [X8+16]
	216 Move W1, W31
	217 Move X3, X31
	218 Call Array.Clear, X0, X1, X2
	219 Move X8, [X19+40]
	220 Compare X8, 0
	221 JumpIfEqual {638}
	222 Move W2, [X8+24]
	223 Move W9, [X8+28]
	224 Add W9, W9, 1
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move [X8+24], W31
	227 Move [X8+28], W9
	228 Move X0, [X8+16]
	229 Move W1, W31
	230 Move X3, X31
	231 Call Array.Clear, X0, X1, X2
	232 Move X8, [X19+48]
	233 Compare X8, 0
	234 JumpIfEqual {638}
	235 Move W2, [X8+24]
	236 Move W9, [X8+28]
	237 Add W9, W9, 1
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move [X8+24], W31
	240 Move [X8+28], W9
	241 Move X0, [X8+16]
	242 Move W1, W31
	243 Move X3, X31
	244 Call Array.Clear, X0, X1, X2
	245 Move X0, [X19+72]
	246 Compare X0, 0
	247 JumpIfEqual {638}
	248 Move X8, 0x789000
	249 Move X8, [X8+3216]
	250 Move X1, [X8]
	251 Call Dictionary`2<Object, Bounds>.get_Keys, X0
	252 Compare X0, 0
	253 JumpIfEqual {638}
	254 Move X8, 0x789000
	255 Move X8, [X8+3352]
	256 Move X1, [X8]
	257 Add X8, X31, 400
	258 Call KeyCollection<Object, Bounds>.GetEnumerator, X0
	259 Move V0, [X31+25]
	260 Move X8, [X31+416]
	261 Move X21, 0x789000
	262 Move X22, 0x789000
	263 Move X21, [X21+3296]
	264 Move X22, [X22+3184]
	265 Move [X31+16], V0
	266 Move [X31+272], X8
	267 Move X24, 0x789000
	268 Move X24, [X24+3368]
	269 Add X9, X31, 320
	270 Add X23, X9, 8
	271 Move X1, [X21]
	272 Add X0, X31, 256
	273 Call Enumerator<Object, Bounds>.MoveNext, X0
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {327}
	278 Move X0, [X19+72]
	279 Compare X0, 0
	280 JumpIfEqual {627}
	281 Move X20, [X31+272]
	282 Move X2, [X22]
	283 Add X8, X31, 400
	284 Move X1, X20
	285 Call Dictionary`2<Object, Bounds>.get_Item, X0, X1
	286 Move V0, [X31+25]
	287 Move X8, [X31+416]
	288 Move [X31+14], V0
	289 Move [X31+240], X8
	290 Move X0, [X19+16]
	291 Move [X31+25], V0
	292 Move [X31+416], X8
	293 Compare X0, 0
	294 JumpIfEqual {628}
	295 Move V0, [X31+25]
	296 Move X8, [X31+416]
	297 Move X9, [X24]
	298 Move [X31+18], V0
	299 Move [X31+304], X8
	300 Move W10, [X0+28]
	301 Move X8, [X0+16]
	302 Add W10, W10, 1
	303 Move [X0+28], W10
	304 Compare X8, 0
	305 JumpIfEqual {626}
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Move W11, [X8+24]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Add W9, W10, 1
	310 Add X8, X8, X10
	311 Move [X0+24], W9
	312 Move [X8+32], X20
	313 Move X9, [X31+304]
	314 Move V0, [X31+18]
	315 Move [X8+56], X9
	316 Move [X8+40], V0
	317 Move X8, [X9+32]
	318 Move X9, [X31+304]
	319 Move V0, [X31+18]
	320 Move X8, [X8+192]
	321 Move X2, [X8+112]
	322 Move [X31+320], X20
	323 Move [X23+16], X9
	324 Move [X23], V0
	325 Add X1, X31, 320
	326 Call List`1<SerializableBoundItem>.AddWithResize, X0, X1
	327 Move X8, 0x789000
	328 Move X8, [X8+3240]
	329 Add X0, X31, 256
	330 Move X1, [X8]
	331 Call Enumerator<Object, Bounds>.Dispose, X0
	332 Move X0, [X19+80]
	333 Compare X0, 0
	334 JumpIfEqual {638}
	335 Move X8, 0x785000
	336 Move X8, [X8+608]
	337 Move X1, [X8]
	338 Call Dictionary`2<Object, Boolean>.get_Keys, X0
	339 Compare X0, 0
	340 JumpIfEqual {638}
	341 Move X8, 0x789000
	342 Move X8, [X8+3360]
	343 Move X1, [X8]
	344 Add X8, X31, 400
	345 Call KeyCollection<Object, Boolean>.GetEnumerator, X0
	346 Move V0, [X31+25]
	347 Move X8, [X31+416]
	348 Move X22, 0x789000
	349 Move X23, 0x789000
	350 Move X22, [X22+3288]
	351 Move X23, [X23+3208]
	352 Move [X31+12], V0
	353 Move [X31+208], X8
	354 Move X24, 0x789000
	355 Move X24, [X24+3384]
	356 Move X20, X31
	357 Move X1, [X22]
	358 Add X0, X31, 192
	359 Call Enumerator<Object, Boolean>.MoveNext, X0
	360 Move TEMP, X0
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {398}
	364 Move X0, [X19+80]
	365 Compare X0, 0
	366 JumpIfEqual {630}
	367 Move X21, [X31+208]
	368 Move X2, [X23]
	369 Move X1, X21
	370 Call Dictionary`2<Object, Boolean>.get_Item, X0, X1
	371 Move W8, W0
	372 Move X0, [X19+24]
	373 Compare X0, 0
	374 JumpIfEqual {631}
	375 Move W11, [X0+28]
	376 Move X9, [X0+16]
	377 Move X10, [X24]
	378 Add W11, W11, 1
	379 Move [X0+28], W11
	380 Compare X9, 0
	381 JumpIfEqual {629}
	382 NotImplemented "Instruction LDRSW not yet implemented."
	383 Move W12, [X9+24]
	384 And X20, X20, 0xFFFFFFFF
	385 NotImplemented "Instruction BFM not yet implemented."
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Add W8, W11, 1
	388 Add X9, X9, X11
	389 Move [X0+24], W8
	390 Move [X9+32], X21
	391 Move [X9+40], X20
	392 Move X8, [X10+32]
	393 Move X8, [X8+192]
	394 Move X3, [X8+112]
	395 Move X1, X21
	396 Move X2, X20
	397 Call List`1<SerializableHasPVItem>.AddWithResize, X0, X1
	398 Move X8, 0x789000
	399 Move X8, [X8+3248]
	400 Add X0, X31, 192
	401 Move X1, [X8]
	402 Call Enumerator<Object, Boolean>.Dispose, X0
	403 Move X0, [X19+96]
	404 Compare X0, 0
	405 JumpIfEqual {638}
	406 Move X8, 0x789000
	407 Move X8, [X8+3224]
	408 Move X1, [X8]
	409 Call Dictionary`2<Object, ProbeVolumeBakingProcessSettings>.get_Keys, X0
	410 Compare X0, 0
	411 JumpIfEqual {638}
	412 Move X8, 0x789000
	413 Move X8, [X8+3336]
	414 Add X20, X31, 400
	415 Move X1, [X8]
	416 Add X8, X31, 400
	417 Call KeyCollection<Object, ProbeVolumeBakingProcessSettings>.GetEnumerator, X0
	418 Move V0, [X31+25]
	419 Move X8, [X31+416]
	420 Move X22, 0x789000
	421 Move X23, 0x789000
	422 Move X24, 0x789000
	423 Move X22, [X22+3272]
	424 Move X23, [X23+3192]
	425 Move X24, [X24+3376]
	426 Add X21, X20, 8
	427 Move [X31+10], V0
	428 Move [X31+176], X8
	429 Move W25, 56
	430 Move X1, [X22]
	431 Add X0, X31, 160
	432 Call Enumerator<Object, ProbeVolumeBakingProcessSettings>.MoveNext, X0
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfNotEqual {495}
	437 Move X0, [X19+96]
	438 Compare X0, 0
	439 JumpIfEqual {633}
	440 Move X20, [X31+176]
	441 Move X2, [X23]
	442 Add X8, X31, 400
	443 Move X1, X20
	444 Call Dictionary`2<Object, ProbeVolumeBakingProcessSettings>.get_Item, X0, X1
	445 Move V0, [X31+400]
	446 Move V1, [X31+416]
	447 Move V2, [X31+27]
	448 Move [X31+112], V0
	449 Move [X31+120], V1
	450 Move [X31+9], V2
	451 Move X0, [X19+40]
	452 Move [X31], V0
	453 Move [X31+8], V1
	454 Move [X31+2], V2
	455 Compare X0, 0
	456 JumpIfEqual {634}
	457 Move V0, [X31]
	458 Move V1, [X31+16]
	459 Move V2, [X31+2]
	460 Move X9, [X24]
	461 Move [X31+352], V0
	462 Move [X31+360], V1
	463 Move [X31+24], V2
	464 Move W10, [X0+28]
	465 Move X8, [X0+16]
	466 Add W10, W10, 1
	467 Move [X0+28], W10
	468 Compare X8, 0
	469 JumpIfEqual {632}
	470 NotImplemented "Instruction LDRSW not yet implemented."
	471 Move W11, [X8+24]
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Add W9, W10, 1
	474 NotImplemented "Instruction MADD not yet implemented."
	475 Move [X0+24], W9
	476 Move [X8+32], X20
	477 Move V1, [X31+368]
	478 Move V0, [X31+384]
	479 Move V2, [X31+22]
	480 Move [X8+72], V0
	481 Move [X8+56], V1
	482 Move [X8+40], V2
	483 Move X8, [X9+32]
	484 Move V2, [X31+368]
	485 Move V0, [X31+384]
	486 Move V1, [X31+22]
	487 Move X8, [X8+192]
	488 Move X2, [X8+112]
	489 Move [X31+400], X20
	490 Move [X21+16], V2
	491 Move [X21+24], V0
	492 Move [X21], V1
	493 Add X1, X31, 400
	494 Call List`1<SerializablePVBakeSettings>.AddWithResize, X0, X1
	495 Move X8, 0x789000
	496 Move X8, [X8+3264]
	497 Add X0, X31, 160
	498 Move X1, [X8]
	499 Call Enumerator<Object, ProbeVolumeBakingProcessSettings>.Dispose, X0
	500 Move X0, [X19+88]
	501 Compare X0, 0
	502 JumpIfEqual {638}
	503 Move X8, 0x789000
	504 Move X8, [X8+3232]
	505 Move X1, [X8]
	506 Call Dictionary`2<Object, Object>.get_Keys, X0
	507 Compare X0, 0
	508 JumpIfEqual {638}
	509 Move X8, 0x789000
	510 Move X8, [X8+3344]
	511 Move X1, [X8]
	512 Add X8, X31, 0
	513 Call KeyCollection<Object, Object>.GetEnumerator, X0
	514 Move V0, [X31]
	515 Move X8, [X31+16]
	516 Move X21, 0x789000
	517 Move X22, 0x789000
	518 Move X21, [X21+3280]
	519 Move X22, [X22+3200]
	520 Move [X31+5], V0
	521 Move [X31+96], X8
	522 Move X23, 0x789000
	523 Move X23, [X23+3392]
	524 Move X1, [X21]
	525 Add X0, X31, 80
	526 Call Enumerator<Object, Object>.MoveNext, X0
	527 Move TEMP, X0
	528 And TEMP, TEMP, 1
	529 Compare TEMP, 1
	530 JumpIfNotEqual {562}
	531 Move X0, [X19+88]
	532 Compare X0, 0
	533 JumpIfEqual {636}
	534 Move X20, [X31+96]
	535 Move X2, [X22]
	536 Move X1, X20
	537 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	538 Move X2, X0
	539 Move X0, [X19+32]
	540 Compare X0, 0
	541 JumpIfEqual {637}
	542 Move W10, [X0+28]
	543 Move X8, [X0+16]
	544 Move X9, [X23]
	545 Add W10, W10, 1
	546 Move [X0+28], W10
	547 Compare X8, 0
	548 JumpIfEqual {635}
	549 NotImplemented "Instruction LDRSW not yet implemented."
	550 Move W11, [X8+24]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Add W9, W10, 1
	553 Add X8, X8, X10
	554 Move [X0+24], W9
	555 Move [X8+32], X20
	556 Move [X8+40], X2
	557 Move X8, [X9+32]
	558 Move X8, [X8+192]
	559 Move X3, [X8+112]
	560 Move X1, X20
	561 Call List`1<SerializablePVProfile>.AddWithResize, X0, X1
	562 Move X8, 0x789000
	563 Move X8, [X8+3256]
	564 Add X0, X31, 80
	565 Move X1, [X8]
	566 Call Enumerator<Object, Object>.Dispose, X0
	567 Move X0, [X19+104]
	568 Compare X0, 0
	569 JumpIfEqual {638}
	570 Move X8, 0x789000
	571 Move X8, [X8+2584]
	572 Move X1, [X8]
	573 Add X8, X31, 56
	574 Call List`1<Object>.GetEnumerator, X0
	575 Move X20, 0x789000
	576 Move X21, 0x789000
	577 Move X20, [X20+2552]
	578 Move X21, [X21+3120]
	579 Move X1, [X20]
	580 Add X0, X31, 56
	581 Call Enumerator<Object>.MoveNext, X0
	582 Move TEMP, X0
	583 And TEMP, TEMP, 1
	584 Compare TEMP, 1
	585 JumpIfNotEqual {608}
	586 Move X0, [X19+48]
	587 Compare X0, 0
	588 JumpIfEqual {624}
	589 Move W10, [X0+28]
	590 Move X1, [X31+72]
	591 Move X8, [X0+16]
	592 Move X9, [X21]
	593 Add W10, W10, 1
	594 Move [X0+28], W10
	595 Compare X8, 0
	596 JumpIfEqual {625}
	597 NotImplemented "Instruction LDRSW not yet implemented."
	598 Move W11, [X8+24]
	599 NotImplemented "Instruction CMP not yet implemented."
	600 Add W9, W10, 1
	601 Add X8, X8, X10
	602 Move [X0+24], W9
	603 Move [X8+32], X1
	604 Move X8, [X9+32]
	605 Move X8, [X8+192]
	606 Move X2, [X8+112]
	607 Call List`1<Object>.AddWithResize, X0, X1
	608 Move X8, 0x789000
	609 Move X8, [X8+2528]
	610 Add X0, X31, 56
	611 Move X1, [X8]
	612 Call Enumerator<Object>.Dispose, X0
	613 Add X31, X31, 464
	614 Move X20, [X31+64]
	615 Move X19, [X31+72]
	616 Move X22, [X31+48]
	617 Move X21, [X31+56]
	618 Move X24, [X31+32]
	619 Move X23, [X31+40]
	620 Move X30, [X31+16]
	621 Move X25, [X31+24]
	622 Move X29, [X31+80]
	623 Return 
	624 Call 0x1C17F20
	625 Call 0x1C17F20
	626 Call 0x1C17F20
	627 Call 0x1C17F20
	628 Call 0x1C17F20
	629 Call 0x1C17F20
	630 Call 0x1C17F20
	631 Call 0x1C17F20
	632 Call 0x1C17F20
	633 Call 0x1C17F20
	634 Call 0x1C17F20
	635 Call 0x1C17F20
	636 Call 0x1C17F20
	637 Call 0x1C17F20
	638 Call 0x1C17F20
	639 Move X20, X0
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Move X0, X20
	642 Call 0x3EB2AD0
	643 Move X21, [X0]
	644 Call 0x3EB2AE0
	645 Move X8, 0x788000
	646 Move X8, [X8+3256]
	647 Add X0, X31, 80
	648 Move X1, [X8]
	649 Call Enumerator<Object, Object>.Dispose, X0
	650 Compare X21, 0
	651 JumpIfEqual {567}
	652 Move X21, X31
	653 Move X20, X0
	654 Move X8, 0x788000
	655 Move X8, [X8+3256]
	656 Move X1, [X8]
	657 Add X0, X31, 80
	658 Call Enumerator<Object, Object>.Dispose, X0
	659 Compare X21, 0
	660 JumpIfEqual {761}
	661 Move X0, X21
	662 Call 0x1C17F18
	663 Move X20, X0
	664 NotImplemented "Instruction CMP not yet implemented."
	665 Move X0, X20
	666 Call 0x3EB2AD0
	667 Move X21, [X0]
	668 Call 0x3EB2AE0
	669 Move X8, 0x788000
	670 Move X8, [X8+3264]
	671 Add X0, X31, 160
	672 Move X1, [X8]
	673 Call Enumerator<Object, ProbeVolumeBakingProcessSettings>.Dispose, X0
	674 Compare X21, 0
	675 JumpIfEqual {500}
	676 Move X21, X31
	677 Move X20, X0
	678 Move X8, 0x788000
	679 Move X8, [X8+3264]
	680 Move X1, [X8]
	681 Add X0, X31, 160
	682 Call Enumerator<Object, ProbeVolumeBakingProcessSettings>.Dispose, X0
	683 Compare X21, 0
	684 JumpIfEqual {761}
	685 Move X0, X21
	686 Call 0x1C17F18
	687 Move X20, X0
	688 NotImplemented "Instruction CMP not yet implemented."
	689 Move X0, X20
	690 Call 0x3EB2AD0
	691 Move X21, [X0]
	692 Call 0x3EB2AE0
	693 Move X8, 0x788000
	694 Move X8, [X8+3248]
	695 Add X0, X31, 192
	696 Move X1, [X8]
	697 Call Enumerator<Object, Boolean>.Dispose, X0
	698 Compare X21, 0
	699 JumpIfEqual {403}
	700 Move X21, X31
	701 Move X20, X0
	702 Move X8, 0x788000
	703 Move X8, [X8+3248]
	704 Move X1, [X8]
	705 Add X0, X31, 192
	706 Call Enumerator<Object, Boolean>.Dispose, X0
	707 Compare X21, 0
	708 JumpIfEqual {761}
	709 Move X0, X21
	710 Call 0x1C17F18
	711 Move X20, X0
	712 NotImplemented "Instruction CMP not yet implemented."
	713 Move X0, X20
	714 Call 0x3EB2AD0
	715 Move X21, [X0]
	716 Call 0x3EB2AE0
	717 Move X8, 0x788000
	718 Move X8, [X8+3240]
	719 Add X0, X31, 256
	720 Move X1, [X8]
	721 Call Enumerator<Object, Bounds>.Dispose, X0
	722 Compare X21, 0
	723 JumpIfEqual {332}
	724 Move X0, X21
	725 Call 0x1C17F18
	726 Move X21, X31
	727 Move X20, X0
	728 Move X8, 0x788000
	729 Move X8, [X8+3240]
	730 Move X1, [X8]
	731 Add X0, X31, 256
	732 Call Enumerator<Object, Bounds>.Dispose, X0
	733 Compare X21, 0
	734 JumpIfEqual {761}
	735 Move X0, X21
	736 Call 0x1C17F18
	737 Move X20, X0
	738 NotImplemented "Instruction CMP not yet implemented."
	739 Move X0, X20
	740 Call 0x3EB2AD0
	741 Move X19, [X0]
	742 Call 0x3EB2AE0
	743 Move X8, 0x788000
	744 Move X8, [X8+2528]
	745 Add X0, X31, 56
	746 Move X1, [X8]
	747 Call Enumerator<Object>.Dispose, X0
	748 Compare X19, 0
	749 JumpIfEqual {613}
	750 Move X0, X19
	751 Call 0x1C17F18
	752 Move X19, X31
	753 Move X20, X0
	754 Move X8, 0x788000
	755 Move X8, [X8+2528]
	756 Move X1, [X8]
	757 Add X0, X31, 56
	758 Call Enumerator<Object>.Dispose, X0
	759 Compare X19, 0
	760 JumpIfNotEqual {763}
	761 Move X0, X20
	762 Call 0x1D2D690
	763 Move X0, X19
	764 Call 0x1C17F18
	765 Call 0x1991590

Method: UnityEngine.Rendering.ProbeVolumeSceneData/BakingSet CreateNewBakingSet(System.String name)

Disassembly:
	0x039CB208 STRB W31, [X31 + 0x18]
	0x039CB20C STRB W31, [X31 + 0x8]
	0x039CB210 STR W8, [X31 + 0x28]
	0x039CB214 STR W8, [X31 + 0x20]
	0x039CB218 STRB W8, [X31 + 0x10]
	0x039CB21C STRB W8, [X31]
	0x039CB220 BL 0x39CB244
	0x039CB224 LDR X8, [X22]
	0x039CB228 LDR X8, [X8 + 0xB8]
	0x039CB22C STR X0, [X8 + 0x30]
	0x039CB230 LDP X20, X19, [X31 + 0x80]
	0x039CB234 LDP X22, X21, [X31 + 0x70]
	0x039CB238 LDP X30, X23, [X31 + 0x60]
	0x039CB23C ADD X31, X31, 0x90
	0x039CB240 RET
	0x039CB244 SUB X31, X31, 0xE0
	0x039CB248 STR D8, [X31 + 0x80]
	0x039CB24C STR X30, [X31 + 0x88]
	0x039CB250 STP X28, X27, [X31 + 0x90]
	0x039CB254 STP X26, X25, [X31 + 0xA0]
	0x039CB258 STP X24, X23, [X31 + 0xB0]
	0x039CB25C STP X22, X21, [X31 + 0xC0]
	0x039CB260 STP X20, X19, [X31 + 0xD0]
	0x039CB264 ADRP X28, 0xA16000
	0x039CB268 ADRP X27, 0x785000
	0x039CB26C LDRB W8, [X28 + 0xD35]
	0x039CB270 LDR X27, [X27 + 0x9B0]
	0x039CB274 MOV V8.16B, V0.16B
	0x039CB278 MOV W25, W7
	0x039CB27C MOV W19, W6
	0x039CB280 MOV W26, W5
	0x039CB284 MOV W24, W4
	0x039CB288 MOV W20, W3
	0x039CB28C MOV W21, W2
	0x039CB290 MOV W22, W1
	0x039CB294 MOV W23, W0
	0x039CB298 TBNZ X8, 0x0, 0x39CB2B0
	0x039CB29C ADRP X0, 0x785000
	0x039CB2A0 LDR X0, [X0 + 0x9B0]
	0x039CB2A4 BL 0x1C16CF4
	0x039CB2A8 MOVZ W8, 0x1
	0x039CB2AC STRB W8, [X28 + 0xD35]
	0x039CB2B0 LDR X0, [X27]
	0x039CB2B4 LDR W8, [X0 + 0xE0]
	0x039CB2B8 CBNZ W8, 0x39CB2C4
	0x039CB2BC BL 0x1C16DFC
	0x039CB2C0 LDR X0, [X27]
	0x039CB2C4 LDR X8, [X0 + 0xB8]
	0x039CB2C8 LDR X0, [X8]
	0x039CB2CC CBZ X0, 0x39CB394
	0x039CB2D0 LDR X8, [X31 + 0x130]
	0x039CB2D4 LDR W9, [X31 + 0x128]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA17000
	006 Move X21, 0x788000
	007 Move W8, [X19+3307]
	008 Move X21, [X21+3440]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x788000
	015 Move X0, [X0+3440]
	016 Call 0x1C17CF4
	017 Move X0, 0x788000
	018 Move X0, [X0+3120]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3307], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Call BakingSet..ctor, X0
	026 Move X0, X20
	027 Move X1, X19
	028 Call ProbeVolumeSceneData.InitializeBakingSet, X0, X1, X2
	029 Move X0, [X20+104]
	030 Compare X0, 0
	031 JumpIfEqual {59}
	032 Move X9, 0x788000
	033 Move X9, [X9+3120]
	034 Move W10, [X0+28]
	035 Move X8, [X0+16]
	036 Move X9, [X9]
	037 Add W10, W10, 1
	038 Move [X0+28], W10
	039 Compare X8, 0
	040 JumpIfEqual {59}
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Move W11, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W9, W10, 1
	045 Add X8, X8, X10
	046 Move [X0+24], W9
	047 Move [X8+32], X19
	048 Move X8, [X9+32]
	049 Move X1, X19
	050 Move X8, [X8+192]
	051 Move X2, [X8+112]
	052 Call List`1<Object>.AddWithResize, X0, X1
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Void InitializeBakingSet(UnityEngine.Rendering.ProbeVolumeSceneData/BakingSet set, System.String name)

Disassembly:
	0x039CA1E8 ADD X0, X31, 0x38
	0x039CA1EC BL 0x2BC434C
	0x039CA1F0 CBNZ X19, 0x39CA1FC
	0x039CA1F4 MOV X0, X20
	0x039CA1F8 BL 0x1D2C690
	0x039CA1FC MOV X0, X19
	0x039CA200 BL 0x1C16F18
	0x039CA204 BL 0x1990590
	0x039CA208 STP X30, X21, [X31 - 0x20]!
	0x039CA20C STP X20, X19, [X31 + 0x10]
	0x039CA210 ADRP X19, 0xA17000
	0x039CA214 ADRP X21, 0x788000
	0x039CA218 LDRB W8, [X19 + 0xCEB]
	0x039CA21C LDR X21, [X21 + 0xD70]
	0x039CA220 MOV X20, X0
	0x039CA224 TBNZ X8, 0x0, 0x39CA248
	0x039CA228 ADRP X0, 0x788000
	0x039CA22C LDR X0, [X0 + 0xD70]
	0x039CA230 BL 0x1C16CF4
	0x039CA234 ADRP X0, 0x788000
	0x039CA238 LDR X0, [X0 + 0xC30]
	0x039CA23C BL 0x1C16CF4
	0x039CA240 MOVZ W8, 0x1
	0x039CA244 STRB W8, [X19 + 0xCEB]
	0x039CA248 LDR X0, [X21]
	0x039CA24C BL 0x1C16F10
	0x039CA250 MOV X19, X0
	0x039CA254 BL 0x39CA2D8
	0x039CA258 MOV X0, X20
	0x039CA25C MOV X1, X19
	0x039CA260 BL 0x39C91E8
	0x039CA264 LDR X0, [X20 + 0x68]
	0x039CA268 CBZ X0, 0x39CA2D4
	0x039CA26C ADRP X9, 0x788000
	0x039CA270 LDR X9, [X9 + 0xC30]
	0x039CA274 LDR W10, [X0 + 0x1C]
	0x039CA278 LDR X8, [X0 + 0x10]
	0x039CA27C LDR X9, [X9]
	0x039CA280 ADD W10, W10, 0x1
	0x039CA284 STR W10, [X0 + 0x1C]
	0x039CA288 CBZ X8, 0x39CA2D4
	0x039CA28C LDRSW X10, [X0 + 0x18]
	0x039CA290 LDR W11, [X8 + 0x18]
	0x039CA294 CMP W10, W11
	0x039CA298 B.CS 0x39CA2B0
	0x039CA29C ADD W9, W10, 0x1
	0x039CA2A0 ADD X8, X8, X10, 0x3, LSL
	0x039CA2A4 STR W9, [X0 + 0x18]
	0x039CA2A8 STR X19, [X8 + 0x20]
	0x039CA2AC B 0x39CA2C4
	0x039CA2B0 LDR X8, [X9 + 0x20]
	0x039CA2B4 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA18000
	006 Move X21, 0x789000
	007 Move W8, [X20+3308]
	008 Move X21, [X21+3160]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x789000
	015 Move X0, [X0+3160]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3308], W8
	019 Move X0, [X21]
	020 Call 0x22547A0
	021 Compare X0, 0
	022 JumpIfEqual {62}
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object.get_name, X0
	026 Compare X19, 0
	027 JumpIfEqual {62}
	028 Move [X19+16], X0
	029 Move TEMP, 4
	030 Not TEMP
	031 Move W0, TEMP
	032 Move X1, X31
	033 Move [X19+80], X20
	034 Call LayerMask.op_Implicit, X0
	035 Move X9, -49135616
	036 Move V0, [X9+2808]
	037 Move W8, 1
	038 Move [X19+32], W8
	039 Move [X19+36], W8
	040 Move [X19+48], W8
	041 Move [X19+52], W8
	042 Move X8, -49135616
	043 Move [X19+40], D0
	044 Move V0, [X8+4016]
	045 Move X8, 0x126F
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 Move W9, 256
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 NotImplemented "Instruction STURH not yet implemented."
	050 Move [X19+39], W31
	051 NotImplemented "Instruction STURH not yet implemented."
	052 Move [X19+59], W31
	053 Move [X19+55], W9
	054 Move [X19+68], X8
	055 Move [X19+60], D0
	056 Move [X19+76], W0
	057 Move X1, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call 0x1C17F20

Method: System.Void InitializeScenarios(UnityEngine.Rendering.ProbeVolumeSceneData/BakingSet set)

Disassembly:
	0x039CA2B8 LDR X8, [X8 + 0xC0]
	0x039CA2BC LDR X2, [X8 + 0x70]
	0x039CA2C0 BL 0x301BF90
	0x039CA2C4 MOV X0, X19
	0x039CA2C8 LDP X20, X19, [X31 + 0x10]
	0x039CA2CC LDP X30, X21, [X31], #0x20
	0x039CA2D0 RET
	0x039CA2D4 BL 0x1C16F20
	0x039CA2D8 STR X30, [X31 - 0x30]!
	0x039CA2DC STP X22, X21, [X31 + 0x10]
	0x039CA2E0 STP X20, X19, [X31 + 0x20]
	0x039CA2E4 ADRP X20, 0xA17000
	0x039CA2E8 ADRP X22, 0x72A000
	0x039CA2EC ADRP X21, 0x72A000
	0x039CA2F0 LDRB W8, [X20 + 0xCF2]
	0x039CA2F4 LDR X22, [X22 + 0x1D0]
	0x039CA2F8 LDR X21, [X21 + 0x1C0]
	0x039CA2FC MOV X19, X0
	0x039CA300 TBNZ X8, 0x0, 0x39CA324
	0x039CA304 ADRP X0, 0x72A000
	0x039CA308 LDR X0, [X0 + 0x1C0]
	0x039CA30C BL 0x1C16CF4
	0x039CA310 ADRP X0, 0x72A000
	0x039CA314 LDR X0, [X0 + 0x1D0]
	0x039CA318 BL 0x1C16CF4
	0x039CA31C MOVZ W8, 0x1
	0x039CA320 STRB W8, [X20 + 0xCF2]
	0x039CA324 LDR X0, [X22]
	0x039CA328 BL 0x1C16F10
	0x039CA32C LDR X1, [X21]
	0x039CA330 MOV X20, X0
	0x039CA334 BL 0x301B7C4
	0x039CA338 STR X20, [X19 + 0x18]
	0x039CA33C LDR X0, [X22]
	0x039CA340 BL 0x1C16F10
	0x039CA344 LDR X1, [X21]
	0x039CA348 MOV X20, X0
	0x039CA34C BL 0x301B7C4
	0x039CA350 STR X20, [X19 + 0x58]
	0x039CA354 MOV X0, X19
	0x039CA358 LDP X20, X19, [X31 + 0x20]
	0x039CA35C LDP X22, X21, [X31 + 0x10]
	0x039CA360 MOV X1, X31
	0x039CA364 LDR X30, [X31], #0x30
	0x039CA368 B 0x33BDD8C
	0x039CA36C STP X30, X21, [X31 - 0x20]!
	0x039CA370 STP X20, X19, [X31 + 0x10]
	0x039CA374 ADRP X21, 0xA17000
	0x039CA378 ADRP X19, 0x788000
	0x039CA37C ADRP X20, 0x729000
	0x039CA380 LDRB W8, [X21 + 0xCEF]
	0x039CA384 LDR X19, [X19 + 0xD78]
	0x039CA388 LDR X20, [X20 + 0x6C0]
	0x039CA38C TBNZ X8, 0x0, 0x39CA3C8
	0x039CA390 ADRP X0, 0x788000
	0x039CA394 LDR X0, [X0 + 0xA20]
	0x039CA398 BL 0x1C16CF4
	0x039CA39C ADRP X0, 0x788000
	0x039CA3A0 LDR X0, [X0 + 0xD78]
	0x039CA3A4 BL 0x1C16CF4
	0x039CA3A8 ADRP X0, 0x729000
	0x039CA3AC LDR X0, [X0 + 0x6C0]
	0x039CA3B0 BL 0x1C16CF4
	0x039CA3B4 ADRP X0, 0x788000
	0x039CA3B8 LDR X0, [X0 + 0xD80]
	0x039CA3BC BL 0x1C16CF4
	0x039CA3C0 MOVZ W8, 0x1
	0x039CA3C4 STRB W8, [X21 + 0xCEF]
	0x039CA3C8 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA18000
	008 Move X23, 0x72B000
	009 Move X20, 0x72B000
	010 Move X21, 0x788000
	011 Move W8, [X22+3309]
	012 Move X23, [X23+464]
	013 Move X20, [X20+448]
	014 Move X21, [X21+3912]
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x72B000
	021 Move X0, [X0+440]
	022 Call 0x1C17CF4
	023 Move X0, 0x72B000
	024 Move X0, [X0+448]
	025 Call 0x1C17CF4
	026 Move X0, 0x72B000
	027 Move X0, [X0+464]
	028 Call 0x1C17CF4
	029 Move X0, 0x788000
	030 Move X0, [X0+3912]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3309], W8
	034 Move X0, [X23]
	035 Call 0x1C17F10
	036 Move X1, [X20]
	037 Move X20, X0
	038 Call List`1<Object>..ctor, X0
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Compare X20, 0
	045 JumpIfEqual {80}
	046 Move X8, [X21]
	047 Move X10, 0x72B000
	048 Move X9, [X8+184]
	049 Move X10, [X10+440]
	050 Move W11, [X20+28]
	051 Move X8, [X20+16]
	052 Move X1, [X9]
	053 Move X9, [X10]
	054 Add W10, W11, 1
	055 Move [X20+28], W10
	056 Compare X8, 0
	057 JumpIfEqual {80}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W11, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W9, W10, 1
	062 Add X8, X8, X10
	063 Move [X20+24], W9
	064 Move [X8+32], X1
	065 Move X8, [X9+32]
	066 Move X0, X20
	067 Move X8, [X8+192]
	068 Move X2, [X8+112]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Compare X19, 0
	071 JumpIfEqual {80}
	072 Move [X19+88], X20
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void SyncBakingSetSettings()

Disassembly:
	0x039CA3CC LDR X19, [X19]
	0x039CA3D0 LDR W8, [X0 + 0xE0]
	0x039CA3D4 CBNZ W8, 0x39CA3DC
	0x039CA3D8 BL 0x1C16DFC
	0x039CA3DC MOV X0, X19
	0x039CA3E0 MOV X1, X31
	0x039CA3E4 BL 0x338C698
	0x039CA3E8 CBZ X0, 0x39CA424
	0x039CA3EC ADRP X8, 0x788000
	0x039CA3F0 LDR X8, [X8 + 0xD80]
	0x039CA3F4 ADRP X19, 0x788000
	0x039CA3F8 MOVZ W2, 0x24
	0x039CA3FC MOV X3, X31
	0x039CA400 LDR X1, [X8]
	0x039CA404 LDR X19, [X19 + 0xA20]
	0x039CA408 BL 0x3397828
	0x039CA40C LDR X8, [X19]
	0x039CA410 LDP X20, X19, [X31 + 0x10]
	0x039CA414 LDR X8, [X8 + 0xB8]
	0x039CA418 STR X0, [X8]
	0x039CA41C LDP X30, X21, [X31], #0x20
	0x039CA420 RET
	0x039CA424 BL 0x1C16F20
	0x039CA428 SUB X31, X31, 0x50
	0x039CA42C STP X30, X25, [X31 + 0x10]
	0x039CA430 STP X24, X23, [X31 + 0x20]
	0x039CA434 STP X22, X21, [X31 + 0x30]
	0x039CA438 STP X20, X19, [X31 + 0x40]
	0x039CA43C ADRP X21, 0xA17000
	0x039CA440 LDRB W8, [X21 + 0xCF0]
	0x039CA444 MOV X20, X1
	0x039CA448 MOV X19, X0
	0x039CA44C TBNZ X8, 0x0, 0x39CA488
	0x039CA450 ADRP X0, 0x729000
	0x039CA454 LDR X0, [X0 + 0x758]
	0x039CA458 BL 0x1C16CF4
	0x039CA45C ADRP X0, 0x72A000
	0x039CA460 LDR X0, [X0 + 0x1B8]
	0x039CA464 BL 0x1C16CF4
	0x039CA468 ADRP X0, 0x732000
	0x039CA46C LDR X0, [X0 + 0x110]
	0x039CA470 BL 0x1C16CF4
	0x039CA474 ADRP X0, 0x72F000
	0x039CA478 LDR X0, [X0 + 0xC98]
	0x039CA47C BL 0x1C16CF4
	0x039CA480 MOVZ W8, 0x1
	0x039CA484 STRB W8, [X21 + 0xCF0]
	0x039CA488 LDR X0, [X19 + 0x58]
	0x039CA48C CBZ X0, 0x39CA58C
	0x039CA490 ADRP X22, 0x732000
	0x039CA494 LDR X22, [X22 + 0x110]
	0x039CA498 MOV X1, X20
	0x039CA49C LDR X2, [X22]
	0x039CA4A0 BL 0x301C318
	0x039CA4A4 TBZ X0, 0x0, 0x39CA50C
	0x039CA4A8 ADRP X24, 0x729000
	0x039CA4AC ADRP X25, 0x72F000
	0x039CA4B0 LDR X24, [X24 + 0x758]
	0x039CA4B4 LDR X25, [X25 + 0xC98]
	0x039CA4B8 MOVZ W23, 0x1
	0x039CA4BC LDR X0, [X24]
	0x039CA4C0 ADD X1, X31, 0xC
	0x039CA4C4 STR W23, [X31 + 0xC]
	0x039CA4C8 BL 0x1C16E04
	0x039CA4CC LDR X8, [X25]
	0x039CA4D0 MOV X2, X0
	0x039CA4D4 MOV X1, X20
	0x039CA4D8 MOV X3, X31
	0x039CA4DC MOV X0, X8
	0x039CA4E0 BL 0x3227BD4
	0x039CA4E4 LDR X8, [X19 + 0x58]
	0x039CA4E8 CBZ X8, 0x39CA58C
	0x039CA4EC LDR X2, [X22]
	0x039CA4F0 MOV X21, X0
	0x039CA4F4 MOV X0, X8
	0x039CA4F8 MOV X1, X21
	0x039CA4FC ADD W23, W23, 0x1
	0x039CA500 BL 0x301C318
	0x039CA504 TBNZ X0, 0x0, 0x39CA4BC
	0x039CA508 B 0x39CA510
	0x039CA50C MOV X21, X20
	0x039CA510 LDR X0, [X19 + 0x58]
	0x039CA514 CBZ X0, 0x39CA58C
	0x039CA518 ADRP X9, 0x72A000
	0x039CA51C LDR X9, [X9 + 0x1B8]
	0x039CA520 LDR W10, [X0 + 0x1C]
	0x039CA524 LDR X8, [X0 + 0x10]
	0x039CA528 LDR X9, [X9]
	0x039CA52C ADD W10, W10, 0x1
	0x039CA530 STR W10, [X0 + 0x1C]
	0x039CA534 CBZ X8, 0x39CA58C
	0x039CA538 LDRSW X10, [X0 + 0x18]
	0x039CA53C LDR W11, [X8 + 0x18]
	0x039CA540 CMP W10, W11
	0x039CA544 B.CS 0x39CA55C
	0x039CA548 ADD W9, W10, 0x1
	0x039CA54C ADD X8, X8, X10, 0x3, LSL
	0x039CA550 STR W9, [X0 + 0x18]
	0x039CA554 STR X21, [X8 + 0x20]
	0x039CA558 B 0x39CA570
	0x039CA55C LDR X8, [X9 + 0x20]
	0x039CA560 MOV X1, X21
	0x039CA564 LDR X8, [X8 + 0xC0]
	0x039CA568 LDR X2, [X8 + 0x70]
	0x039CA56C BL 0x301BF90
	0x039CA570 MOV X0, X21
	0x039CA574 LDP X20, X19, [X31 + 0x40]
	0x039CA578 LDP X22, X21, [X31 + 0x30]
	0x039CA57C LDP X24, X23, [X31 + 0x20]
	0x039CA580 LDP X30, X25, [X31 + 0x10]
	0x039CA584 ADD X31, X31, 0x50
	0x039CA588 RET
	0x039CA58C BL 0x1C16F20
	0x039CA590 STP X30, X21, [X31 - 0x20]!
	0x039CA594 STP X20, X19, [X31 + 0x10]
	0x039CA598 ADRP X21, 0xA17000
	0x039CA59C LDRB W8, [X21 + 0xCF1]
	0x039CA5A0 MOV X19, X1
	0x039CA5A4 MOV X20, X0
	0x039CA5A8 TBNZ X8, 0x0, 0x39CA5C0
	0x039CA5AC ADRP X0, 0x788000
	0x039CA5B0 LDR X0, [X0 + 0xD88]
	0x039CA5B4 BL 0x1C16CF4
	0x039CA5B8 MOVZ W8, 0x1
	0x039CA5BC STRB W8, [X21 + 0xCF1]
	0x039CA5C0 LDR X0, [X20 + 0x58]
	0x039CA5C4 CBZ X0, 0x39CA5E4
	0x039CA5C8 ADRP X8, 0x788000
	0x039CA5CC LDR X8, [X8 + 0xD88]
	0x039CA5D0 MOV X1, X19
	0x039CA5D4 LDP X20, X19, [X31 + 0x10]
	0x039CA5D8 LDR X2, [X8]
	0x039CA5DC LDP X30, X21, [X31], #0x20
	0x039CA5E0 B 0x301D7A8
	0x039CA5E4 BL 0x1C16F20
	0x039CA5E8 LDP V0, V1, [X0]
	0x039CA5EC LDP V2, V3, [X1]
	0x039CA5F0 LDR V4, [X0 + 0x2]
	0x039CA5F4 LDR V5, [X1 + 0x2]
	0x039CA5F8 FADD V0.4S, V0.4S, V2.4S
	0x039CA5FC FADD V1.4S, V1.4S, V3.4S
	0x039CA600 FADD V2.4S, V4.4S, V5.4S
	0x039CA604 STP V0, V1, [X8]
	0x039CA608 STR V2, [X8 + 0x2]
	0x039CA60C RET
	0x039CA610 LDP V0, V1, [X0]
	0x039CA614 LDP V2, V3, [X1]
	0x039CA618 LDR V4, [X0 + 0x2]
	0x039CA61C LDR V5, [X1 + 0x2]
	0x039CA620 FSUB V0.4S, V0.4S, V2.4S
	0x039CA624 FSUB V1.4S, V1.4S, V3.4S
	0x039CA628 FSUB V2.4S, V4.4S, V5.4S
	0x039CA62C STP V0, V1, [X8]
	0x039CA630 STR V2, [X8 + 0x2]
	0x039CA634 RET
	0x039CA638 LDP V1, V2, [X0]
	0x039CA63C LDR V3, [X0 + 0x2]
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x039CA64C STP V1, V2, [X8]
	0x039CA650 STR V0, [X8 + 0x2]
	0x039CA654 RET
	0x039CA658 LDP V1, V2, [X0]
	0x039CA65C LDR V3, [X0 + 0x2]
	0x039CA660 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x039CA670 STP V1, V2, [X8]
	0x039CA674 STR V0, [X8 + 0x2]
	0x039CA678 RET
	0x039CA67C LDP D0, D3, [X1]
	0x039CA680 LDP D1, D2, [X0]
	0x039CA684 ADRP X8, 0xFFFFFFFFFD11F000
	0x039CA688 FSUB V1.2S, V1.2S, V0.2S
	0x00000000 INVALID
	0x039CA690 LDR V0, [X8 + 0xF20]
	0x039CA694 FSUB V2.2S, V2.2S, V3.2S
	0x039CA698 UNIMPLEMENTED
	0x00000000 INVALID
	0x039CA6A0 FADD V1.2S, V1.2S, V3.2S
	0x039CA6A4 FADD V1.2S, V2.2S, V1.2S
	0x039CA6A8 UNIMPLEMENTED
	0x039CA6AC FADD V1.2S, V2.2S, V1.2S
	0x039CA6B0 FCMP S1, S0
	0x039CA6B4 B.PL 0x39CA724
	0x039CA6B8 LDP D1, D2, [X0 + 0x10]
	0x039CA6BC LDP D3, D4, [X1 + 0x10]
	0x039CA6C0 FSUB V1.2S, V1.2S, V3.2S
	0x00000000 INVALID
	0x039CA6C8 FSUB V2.2S, V2.2S, V4.2S
	0x039CA6CC UNIMPLEMENTED
	0x00000000 INVALID

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X20, 0xA18000
	015 Move W8, [X20+3310]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x789000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move X0, 0x789000
	025 Move X0, [X0+3176]
	026 Call 0x1C17CF4
	027 Move X0, 0x789000
	028 Move X0, [X0+2528]
	029 Call 0x1C17CF4
	030 Move X0, 0x751000
	031 Move X0, [X0+4040]
	032 Call 0x1C17CF4
	033 Move X0, 0x789000
	034 Move X0, [X0+2552]
	035 Call 0x1C17CF4
	036 Move X0, 0x751000
	037 Move X0, [X0+4048]
	038 Call 0x1C17CF4
	039 Move X0, 0x751000
	040 Move X0, [X0+4056]
	041 Call 0x1C17CF4
	042 Move X0, 0x789000
	043 Move X0, [X0+2568]
	044 Call 0x1C17CF4
	045 Move X0, 0x751000
	046 Move X0, [X0+4064]
	047 Call 0x1C17CF4
	048 Move X0, 0x789000
	049 Move X0, [X0+2584]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+3310], W8
	053 Move [X31+96], X31
	054 Move [X31+104], X31
	055 Move [X31+112], X31
	056 Move [X31+64], X31
	057 Move [X31+72], X31
	058 Move [X31+80], X31
	059 Move X0, [X19+104]
	060 Compare X0, 0
	061 JumpIfEqual {194}
	062 Move X8, 0x789000
	063 Move X8, [X8+2584]
	064 Move X23, 0x789000
	065 Move X24, 0x751000
	066 Move X25, 0x751000
	067 Move X26, 0x789000
	068 Move X23, [X23+2552]
	069 Move X24, [X24+4064]
	070 Move X25, [X25+4048]
	071 Move X26, [X26+3168]
	072 Move X1, [X8]
	073 Move X27, 0x789000
	074 Move X22, 0x751000
	075 Move X21, 0x789000
	076 Move X27, [X27+3176]
	077 Move X22, [X22+4040]
	078 Move X21, [X21+2528]
	079 Add X8, X31, 128
	080 Call List`1<Object>.GetEnumerator, X0
	081 Move V0, [X31+8]
	082 Move X8, [X31+144]
	083 Move [X31+6], V0
	084 Move [X31+112], X8
	085 Move X1, [X23]
	086 Add X0, X31, 96
	087 Call Enumerator<Object>.MoveNext, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {152}
	092 Move X28, [X31+112]
	093 Compare X28, 0
	094 JumpIfEqual {190}
	095 Move X0, [X28+24]
	096 Compare X0, 0
	097 JumpIfEqual {191}
	098 Move X1, [X24]
	099 Add X8, X31, 16
	100 Call List`1<Object>.GetEnumerator, X0
	101 Move V0, [X31+1]
	102 Move X8, [X31+32]
	103 Add X29, X28, 32
	104 Move [X31+4], V0
	105 Move [X31+80], X8
	106 Move X1, [X25]
	107 Add X0, X31, 64
	108 Call Enumerator<Object>.MoveNext, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {140}
	113 Move V2, [X29+16]
	114 Move V0, [X29+32]
	115 Move V1, [X29]
	116 Move X0, [X19+96]
	117 Move X20, [X31+80]
	118 Move [X31+32], V2
	119 Move [X31+40], V0
	120 Move [X31+1], V1
	121 Compare X0, 0
	122 JumpIfEqual {146}
	123 Move V0, [X31+16]
	124 Move V1, [X31+32]
	125 Move V2, [X31+3]
	126 Move X3, [X26]
	127 Move [X31+128], V0
	128 Move [X31+136], V1
	129 Move [X31+10], V2
	130 Add X2, X31, 128
	131 Move X1, X20
	132 Call Dictionary`2<Object, ProbeVolumeBakingProcessSettings>.set_Item, X0, X1, X2
	133 Move X0, [X19+88]
	134 Compare X0, 0
	135 JumpIfEqual {147}
	136 Move X2, [X28+80]
	137 Move X3, [X27]
	138 Move X1, X20
	139 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	140 Move X20, X31
	141 Move X1, [X22]
	142 Add X0, X31, 64
	143 Call Enumerator<Object>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfEqual {85}
	146 Call 0x1C17F20
	147 Call 0x1C17F20
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Call 0x3EB2AD0
	150 Move X20, [X0]
	151 Call 0x3EB2AE0
	152 Move X1, [X21]
	153 Add X0, X31, 96
	154 Call Enumerator<Object>.Dispose, X0
	155 Move X20, [X31+256]
	156 Move X19, [X31+264]
	157 Move X22, [X31+240]
	158 Move X21, [X31+248]
	159 Move X24, [X31+224]
	160 Move X23, [X31+232]
	161 Move X26, [X31+208]
	162 Move X25, [X31+216]
	163 Move X28, [X31+192]
	164 Move X27, [X31+200]
	165 Move X29, [X31+176]
	166 Move X30, [X31+184]
	167 Add X31, X31, 272
	168 Return 
	169 Move [X31+8], X1
	170 Move X19, X0
	171 Move X20, X31
	172 Move X1, [X22]
	173 Add X0, X31, 64
	174 Call Enumerator<Object>.Dispose, X0
	175 Move X1, [X31+8]
	176 Move X0, X19
	177 Compare X20, 0
	178 JumpIfNotEqual {197}
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3EB2AD0
	181 Move X19, [X0]
	182 Call 0x3EB2AE0
	183 Move X1, [X21]
	184 Add X0, X31, 96
	185 Call Enumerator<Object>.Dispose, X0
	186 Compare X19, 0
	187 JumpIfEqual {155}
	188 Move X0, X19
	189 Call 0x1C17F18
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Move X0, X20
	193 Call 0x1C17F18
	194 Call 0x1C17F20
	195 Move X20, X0
	196 Move X19, X31
	197 Move X0, X20
	198 Call 0x1C17F18
	199 Move X20, X0
	200 Move X1, [X21]
	201 Add X0, X31, 96
	202 Call Enumerator<Object>.Dispose, X0
	203 Compare X19, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X20
	206 Call 0x1D2D690
	207 Move X0, X19
	208 Call 0x1C17F18
	209 Call 0x1991590
	210 Move X19, X0
	211 Move [X31+8], X1

Method: System.Void .cctor()

Disassembly:
	0x039CB36C BL 0x39D5454
	0x039CB370 LDP X20, X19, [X31 + 0xD0]
	0x039CB374 LDP X22, X21, [X31 + 0xC0]
	0x039CB378 LDP X24, X23, [X31 + 0xB0]
	0x039CB37C LDP X26, X25, [X31 + 0xA0]
	0x039CB380 LDP X28, X27, [X31 + 0x90]
	0x039CB384 LDR X30, [X31 + 0x88]
	0x039CB388 LDR V8, [X31 + 0x80]
	0x039CB38C ADD X31, X31, 0xE0
	0x039CB390 RET
	0x039CB394 BL 0x1C16F20
	0x039CB398 STR X30, [X31 - 0x20]!
	0x039CB39C STP X20, X19, [X31 + 0x10]
	0x039CB3A0 ADRP X19, 0xA16000
	0x039CB3A4 ADRP X20, 0x787000
	0x039CB3A8 LDRB W8, [X19 + 0xCF8]
	0x039CB3AC LDR X20, [X20 + 0xD98]
	0x039CB3B0 TBNZ X8, 0x0, 0x39CB3D4
	0x039CB3B4 ADRP X0, 0x787000
	0x039CB3B8 LDR X0, [X0 + 0xD98]
	0x039CB3BC BL 0x1C16CF4
	0x039CB3C0 ADRP X0, 0x785000
	0x039CB3C4 LDR X0, [X0 + 0x9B0]
	0x039CB3C8 BL 0x1C16CF4
	0x039CB3CC MOVZ W8, 0x1
	0x039CB3D0 STRB W8, [X19 + 0xCF8]
	0x039CB3D4 LDR X0, [X20]
	0x039CB3D8 LDR W8, [X0 + 0xE0]
	0x039CB3DC CBNZ W8, 0x39CB3E4
	0x039CB3E0 BL 0x1C16DFC
	0x039CB3E4 BL 0x39CAFF4
	0x039CB3E8 TBZ X0, 0x0, 0x39CB450
	0x039CB3EC LDR X0, [X20]
	0x039CB3F0 LDR W8, [X0 + 0xE0]
	0x039CB3F4 CBNZ W8, 0x39CB400
	0x039CB3F8 BL 0x1C16DFC
	0x039CB3FC LDR X0, [X20]
	0x039CB400 LDR X8, [X0 + 0xB8]
	0x039CB404 LDR X19, [X8 + 0x30]
	0x039CB408 CBZ X19, 0x39CB450
	0x039CB40C LDR W8, [X0 + 0xE0]
	0x039CB410 CBNZ W8, 0x39CB424
	0x039CB414 BL 0x1C16DFC
	0x039CB418 LDR X8, [X20]
	0x039CB41C LDR X8, [X8 + 0xB8]
	0x039CB420 LDR X19, [X8 + 0x30]
	0x039CB424 ADRP X8, 0x785000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA17000
	006 Move X19, 0x788000
	007 Move X20, 0x729000
	008 Move W8, [X21+3311]
	009 Move X19, [X19+3448]
	010 Move X20, [X20+1728]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x788000
	016 Move X0, [X0+2592]
	017 Call 0x1C17CF4
	018 Move X0, 0x788000
	019 Move X0, [X0+3448]
	020 Call 0x1C17CF4
	021 Move X0, 0x729000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X0, 0x788000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3311], W8
	029 Move X0, [X20]
	030 Move X19, [X19]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 Call Type.GetTypeFromHandle, X0
	038 Compare X0, 0
	039 JumpIfEqual {56}
	040 Move X8, 0x788000
	041 Move X8, [X8+3456]
	042 Move X19, 0x788000
	043 Move W2, 36
	044 Move X3, X31
	045 Move X1, [X8]
	046 Move X19, [X19+2592]
	047 Call Type.GetProperty, X0, X1, X2
	048 Move X8, [X19]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X8, [X8+184]
	052 Move [X8], X0
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Call 0x1C17F20

