Type: UnityEngine.Rendering.DebugUI/Panel

Method: UnityEngine.Rendering.DebugUI/Flags get_flags()

Disassembly:
	0x039B0598 TBZ X0, 0x0, 0x39B05D0
	0x039B059C ADRP X8, 0x743000

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_flags(UnityEngine.Rendering.DebugUI/Flags value)

Disassembly:
	0x039B05A0 LDR X8, [X8 + 0xA28]
	0x039B05A4 LDR X0, [X8]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.String get_displayName()

Disassembly:
	0x039B05A8 LDR W8, [X0 + 0xE0]
	0x039B05AC CBNZ W8, 0x39B05B4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_displayName(System.String value)

Disassembly:
	0x039B05B0 BL 0x1C16DFC
	0x039B05B4 ADRP X8, 0x7A1000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Int32 get_groupIndex()

Disassembly:
	0x039B05B8 LDR X8, [X8 + 0xD40]
	0x039B05BC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_groupIndex(System.Int32 value)

Disassembly:
	0x039B05C0 MOV X1, X31
	0x039B05C4 LDR X0, [X8]

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.String get_queryPath()

Disassembly:
	0x039B05C8 LDP X30, X21, [X31], #0x20
	0x039B05CC B 0x3C06A04

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean get_isEditorOnly()

Disassembly:
	0x039B05D0 LDP X20, X19, [X31 + 0x10]
	0x039B05D4 LDP X30, X21, [X31], #0x20
	0x039B05D8 RET

ISIL:
	001 Move W8, [X0+16]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Boolean get_isRuntimeOnly()

Disassembly:
	0x039B05DC BL 0x1C16F20
	0x039B05E0 STR X30, [X31 - 0x20]!
	0x039B05E4 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W8, [X0+16]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Boolean get_isInactiveInEditor()

Disassembly:
	0x039B05E8 ADRP X19, 0xA31000
	0x039B05EC ADRP X20, 0x76A000
	0x039B05F0 LDRB W8, [X19 + 0xC2E]
	0x039B05F4 LDR X20, [X20 + 0xDF8]
	0x039B05F8 TBNZ X8, 0x0, 0x39B0634
	0x039B05FC ADRP X0, 0x76A000
	0x039B0600 LDR X0, [X0 + 0xDF8]
	0x039B0604 BL 0x1C16CF4
	0x039B0608 ADRP X0, 0x799000
	0x039B060C LDR X0, [X0 + 0x378]
	0x039B0610 BL 0x1C16CF4
	0x039B0614 ADRP X0, 0x743000
	0x039B0618 LDR X0, [X0 + 0x598]
	0x039B061C BL 0x1C16CF4
	0x039B0620 ADRP X0, 0x7A1000
	0x039B0624 LDR X0, [X0 + 0xD48]
	0x039B0628 BL 0x1C16CF4
	0x039B062C MOVZ W8, 0x1
	0x039B0630 STRB W8, [X19 + 0xC2E]
	0x039B0634 LDR X0, [X20]
	0x039B0638 ADRP X19, 0x743000
	0x039B063C LDR W8, [X0 + 0xE0]
	0x039B0640 LDR X19, [X19 + 0x598]
	0x039B0644 CBNZ W8, 0x39B064C
	0x039B0648 BL 0x1C16DFC
	0x039B064C MOV X0, X31
	0x039B0650 BL 0x3E4FF90
	0x039B0654 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA32000
	005 Move W8, [X20+3105]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x744000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3105], W8
	016 Move W8, [X19+16]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 4
	019 Compare TEMP, 4
	020 JumpIfEqual {22}
	021 Move W8, W31
	022 Move X8, 0x744000
	023 Move X8, [X8+2416]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Xor W8, W0, 1
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 And W0, W8, 1
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Boolean get_editorForceUpdate()

Disassembly:
	0x039B0658 MOV X19, X0
	0x039B065C LDR W9, [X8 + 0xE0]
	0x039B0660 CBNZ W9, 0x39B066C

ISIL:
	001 Move W8, [X0+16]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> get_children()

Disassembly:
	0x039B0664 MOV X0, X8
	0x039B0668 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_children(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> value)

Disassembly:
	0x039B066C MOV X0, X19
	0x039B0670 MOV X1, X31

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Void add_onSetDirty(System.Action`1<UnityEngine.Rendering.DebugUI/Panel> value)

Disassembly:
	0x039B0674 MOV X2, X31
	0x039B0678 BL 0x3C354F8
	0x039B067C TBZ X0, 0x0, 0x39B0728
	0x039B0680 LDR X0, [X20]
	0x039B0684 LDR W8, [X0 + 0xE0]
	0x039B0688 CBNZ W8, 0x39B0690
	0x039B068C BL 0x1C16DFC
	0x039B0690 MOV X0, X31
	0x039B0694 BL 0x3E4FF90
	0x039B0698 CBZ X0, 0x39B0734
	0x039B069C LDR X19, [X0 + 0x28]
	0x039B06A0 CBZ X19, 0x39B0728
	0x039B06A4 ADRP X8, 0x799000
	0x039B06A8 LDR X8, [X8 + 0x378]
	0x039B06AC LDR X9, [X19]
	0x039B06B0 LDR X8, [X8]
	0x039B06B4 LDRB W11, [X9 + 0x130]
	0x039B06B8 LDRB W10, [X8 + 0x130]
	0x039B06BC CMP W11, W10
	0x039B06C0 B.CC 0x39B0728
	0x039B06C4 LDR X9, [X9 + 0xC8]
	0x039B06C8 ADD X9, X9, X10, 0x3, LSL
	0x039B06CC LDUR X9, [X9 - 0x8]
	0x039B06D0 CMP X9, X8
	0x039B06D4 B.NE 0x39B0728
	0x039B06D8 MOV X0, X19
	0x039B06DC MOV X1, X31
	0x039B06E0 BL 0x33BE520
	0x039B06E4 CBZ X0, 0x39B0734
	0x039B06E8 ADRP X8, 0x7A1000
	0x039B06EC LDR X8, [X8 + 0xD48]
	0x039B06F0 MOV X2, X31
	0x039B06F4 LDR X1, [X8]
	0x039B06F8 BL 0x33975F8
	0x039B06FC MOV X1, X31
	0x039B0700 MOV X2, X31
	0x039B0704 MOV X20, X0
	0x039B0708 BL 0x32CE528
	0x039B070C TBZ X0, 0x0, 0x39B0728
	0x039B0710 CBZ X20, 0x39B0734
	0x039B0714 MOV X0, X20
	0x039B0718 MOV X1, X19
	0x039B071C MOV X2, X31
	0x039B0720 MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA32000
	009 Move W8, [X21+3106]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7A2000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3106], W8
	021 Move X24, 0x7A2000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+320]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onSetDirty(System.Action`1<UnityEngine.Rendering.DebugUI/Panel> value)

Disassembly:
	0x039B0724 BL 0x32CE4E0
	0x039B0728 LDP X20, X19, [X31 + 0x10]
	0x039B072C LDR X30, [X31], #0x20
	0x039B0730 B 0x39B04B4
	0x039B0734 BL 0x1C16F20
	0x039B0738 STP X30, X21, [X31 - 0x20]!
	0x039B073C STP X20, X19, [X31 + 0x10]
	0x039B0740 ADRP X20, 0xA31000
	0x039B0744 ADRP X21, 0x7A0000
	0x039B0748 LDRB W8, [X20 + 0xC31]
	0x039B074C LDR X21, [X21 + 0x778]
	0x039B0750 MOV X19, X0
	0x039B0754 TBNZ X8, 0x0, 0x39B076C
	0x039B0758 ADRP X0, 0x7A0000
	0x039B075C LDR X0, [X0 + 0x778]
	0x039B0760 BL 0x1C16CF4
	0x039B0764 MOVZ W8, 0x1
	0x039B0768 STRB W8, [X20 + 0xC31]
	0x039B076C LDR X0, [X21]
	0x039B0770 LDR W8, [X0 + 0xE0]
	0x039B0774 CBNZ W8, 0x39B077C
	0x039B0778 BL 0x1C16DFC
	0x039B077C MOV X0, X31
	0x039B0780 BL 0x399C120
	0x039B0784 CBZ X0, 0x39B08B4
	0x039B0788 LDRB W21, [X19 + 0x24]
	0x039B078C MOV X1, X31
	0x039B0790 MOV X20, X0
	0x039B0794 BL 0x399D46C
	0x039B0798 AND W8, W0, 0x1
	0x039B079C CMP W21, W8
	0x039B07A0 B.EQ 0x39B07B8
	0x039B07A4 MOV X0, X20
	0x039B07A8 MOV X1, X31
	0x039B07AC BL 0x399D46C
	0x039B07B0 AND W0, W0, 0x1
	0x039B07B4 BL 0x39AFF50
	0x039B07B8 MOV X0, X20
	0x039B07BC MOV X1, X31
	0x039B07C0 BL 0x39A8254
	0x039B07C4 MOV X0, X20
	0x039B07C8 MOV W1, W31
	0x039B07CC MOV X2, X31
	0x039B07D0 BL 0x39A82AC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA32000
	009 Move W8, [X21+3107]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7A2000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3107], W8
	021 Move X24, 0x7A2000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+320]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x039B07D4 FCMP S0, 0x0
	0x039B07D8 B.NE 0x39B07EC
	0x039B07DC MOV X0, X20
	0x039B07E0 MOV X1, X31
	0x039B07E4 BL 0x39A82E4
	0x039B07E8 TBZ X0, 0x0, 0x39B080C
	0x039B07EC MOV X0, X20
	0x039B07F0 MOV X1, X31
	0x039B07F4 BL 0x399D46C
	0x039B07F8 ORN W8, W31, W0, 0x0
	0x039B07FC AND W1, W8, 0x1
	0x039B0800 MOV X0, X20
	0x039B0804 MOV X2, X31
	0x039B0808 BL 0x39AB5FC
	0x039B080C MOV X0, X20
	0x039B0810 MOV X1, X31
	0x039B0814 BL 0x399D46C
	0x039B0818 TBZ X0, 0x0, 0x39B0860
	0x039B081C MOVZ W1, 0x8
	0x039B0820 MOV X0, X20
	0x039B0824 MOV X2, X31
	0x039B0828 BL 0x39A82AC
	0x039B082C FCMP S0, 0x0
	0x039B0830 B.EQ 0x39B0840
	0x039B0834 MOV X0, X20
	0x039B0838 MOV X1, X31
	0x039B083C BL 0x39A978C
	0x039B0840 MOV X0, X20
	0x039B0844 MOV X1, X31
	0x039B0848 BL 0x39A856C
	0x039B084C TBZ X0, 0x0, 0x39B0860
	0x039B0850 MOV X0, X20
	0x039B0854 MOV X1, X31
	0x039B0858 MOV X2, X31
	0x039B085C BL 0x39A9974
	0x039B0860 LDR W21, [X19 + 0x20]
	0x039B0864 MOV X0, X31
	0x039B0868 BL 0x3C0E150
	0x039B086C CMP W21, W0
	0x039B0870 B.EQ 0x39B0894
	0x039B0874 BL 0x39B08B8
	0x039B0878 MOV X1, X0
	0x039B087C MOV X0, X19
	0x039B0880 MOV X2, X31
	0x039B0884 BL 0x3C366FC
	0x039B0888 MOV X0, X31
	0x039B088C BL 0x3C0E150
	0x039B0890 STR W0, [X19 + 0x20]
	0x039B0894 MOV X0, X20
	0x039B0898 MOV X1, X31
	0x039B089C BL 0x399D46C
	0x039B08A0 AND W8, W0, 0x1
	0x039B08A4 STRB W8, [X19 + 0x24]
	0x039B08A8 LDP X20, X19, [X31 + 0x10]
	0x039B08AC LDP X30, X21, [X31], #0x20
	0x039B08B0 RET
	0x039B08B4 BL 0x1C16F20
	0x039B08B8 STR X30, [X31 - 0x20]!
	0x039B08BC STP X20, X19, [X31 + 0x10]
	0x039B08C0 ADRP X19, 0xA31000
	0x039B08C4 ADRP X20, 0x7A1000
	0x039B08C8 LDRB W8, [X19 + 0xC32]
	0x039B08CC LDR X20, [X20 + 0xD50]
	0x039B08D0 TBNZ X8, 0x0, 0x39B08E8
	0x039B08D4 ADRP X0, 0x7A1000
	0x039B08D8 LDR X0, [X0 + 0xD50]
	0x039B08DC BL 0x1C16CF4
	0x039B08E0 MOVZ W8, 0x1
	0x039B08E4 STRB W8, [X19 + 0xC32]
	0x039B08E8 LDR X0, [X20]
	0x039B08EC BL 0x1C16F10
	0x039B08F0 MOV X1, X31
	0x039B08F4 MOV X19, X0
	0x039B08F8 BL 0x33BDD8C
	0x039B08FC STR W31, [X19 + 0x10]
	0x039B0900 MOV X0, X19
	0x039B0904 LDP X20, X19, [X31 + 0x10]
	0x039B0908 LDR X30, [X31], #0x20
	0x039B090C RET
	0x039B0910 STR X30, [X31 - 0x20]!
	0x039B0914 STP X20, X19, [X31 + 0x10]
	0x039B0918 MOV W19, W1
	0x039B091C MOV X1, X31
	0x039B0920 MOV X20, X0
	0x039B0924 BL 0x33BDD8C
	0x039B0928 STR W19, [X20 + 0x10]
	0x039B092C LDP X20, X19, [X31 + 0x10]
	0x039B0930 LDR X30, [X31], #0x20
	0x039B0934 RET
	0x039B0938 MOV X1, X31
	0x039B093C B 0x3C36C30
	0x039B0940 RET
	0x039B0944 STR X30, [X31 - 0x20]!
	0x039B0948 STP X20, X19, [X31 + 0x10]
	0x039B094C ADRP X20, 0xA31000
	0x039B0950 LDRB W8, [X20 + 0xC33]
	0x039B0954 MOV X19, X0
	0x039B0958 TBNZ X8, 0x0, 0x39B0970
	0x039B095C ADRP X0, 0x7A1000
	0x039B0960 LDR X0, [X0 + 0xD58]
	0x039B0964 BL 0x1C16CF4
	0x039B0968 MOVZ W8, 0x1
	0x039B096C STRB W8, [X20 + 0xC33]
	0x039B0970 LDR W8, [X19 + 0x10]
	0x039B0974 CMP W8, 0x2
	0x039B0978 B.EQ 0x39B09F4
	0x039B097C CMP W8, 0x1
	0x039B0980 B.EQ 0x39B09BC
	0x039B0984 CBNZ W8, 0x39B0A14
	0x039B0988 MOVN W8, 0x0
	0x039B098C STR W8, [X19 + 0x10]
	0x039B0990 ADRP X8, 0x7A1000
	0x039B0994 LDR X8, [X8 + 0xD58]
	0x039B0998 LDR X0, [X8]
	0x039B099C BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA32000
	008 Move X22, 0x7A2000
	009 Move W8, [X20+3108]
	010 Move X22, [X22+3280]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x7A2000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move X0, 0x7A2000
	020 Move X0, [X0+3040]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A2000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A2000
	026 Move X0, [X0+3064]
	027 Call 0x1C17CF4
	028 Move X0, 0x7A2000
	029 Move X0, [X0+3072]
	030 Call 0x1C17CF4
	031 Move X0, 0x7A2000
	032 Move X0, [X0+3024]
	033 Call 0x1C17CF4
	034 Move X0, 0x7A2000
	035 Move X0, [X0+3288]
	036 Call 0x1C17CF4
	037 Move X0, 0x7A2000
	038 Move X0, [X0+3280]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+3108], W8
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X8, [X0+184]
	049 Move X20, [X8+8]
	050 Compare X20, 0
	051 JumpIfNotEqual {73}
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X22]
	057 Move X9, 0x7A2000
	058 Move X8, [X0+184]
	059 Move X9, [X9+320]
	060 Move X21, [X8]
	061 Move X0, [X9]
	062 Call 0x1C17F10
	063 Move X8, 0x7A2000
	064 Move X8, [X8+3288]
	065 Move X1, X21
	066 Move X3, X31
	067 Move X20, X0
	068 Move X2, [X8]
	069 Call Action`1<Object>..ctor, X0, X1, X2
	070 Move X8, [X22]
	071 Move X8, [X8+184]
	072 Move [X8+8], X20
	073 Compare X19, 0
	074 JumpIfEqual {131}
	075 Move X21, 0x7A2000
	076 Move X23, 0x7A2000
	077 Move X22, 0x7A2000
	078 Move X21, [X21+3024]
	079 Move X23, [X23+3032]
	080 Move X22, [X22+3040]
	081 Move X0, X19
	082 Move X1, X31
	083 Move [X19+48], X20
	084 Call Object..ctor, X0
	085 Move X0, [X21]
	086 Call 0x1C17F10
	087 Move X1, [X23]
	088 Move X20, X0
	089 Call 0x2498C38, X0
	090 Move [X19+40], X20
	091 Move X0, [X22]
	092 Call 0x1C17F10
	093 Move X8, [X19]
	094 Move X1, X19
	095 Move X3, X31
	096 Move X21, X0
	097 Move X2, [X8+464]
	098 Call 0x2EF2FC8, X0, X1, X2
	099 Compare X20, 0
	100 JumpIfEqual {131}
	101 Move X8, 0x7A2000
	102 Move X8, [X8+3064]
	103 Move X0, X20
	104 Move X1, X21
	105 Move X2, [X8]
	106 Call 0x24986E0, X0, X1
	107 Move X0, [X22]
	108 Move X20, [X19+40]
	109 Call 0x1C17F10
	110 Move X8, [X19]
	111 Move X1, X19
	112 Move X3, X31
	113 Move X21, X0
	114 Move X2, [X8+480]
	115 Call 0x2EF2FC8, X0, X1, X2
	116 Compare X20, 0
	117 JumpIfEqual {131}
	118 Move X8, 0x7A2000
	119 Move X8, [X8+3072]
	120 Move X0, X20
	121 Move X1, X21
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X2, [X8]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 Move X23, [X31+56]
	129 Call 0x2498838, X0, X1
	130 Return 
	131 Call 0x1C17F20

Method: System.Void OnItemAdded(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> sender, UnityEngine.Rendering.ListChangedEventArgs`1<UnityEngine.Rendering.DebugUI/Widget> e)

Disassembly:
	0x039B09A0 MOV X1, X31
	0x039B09A4 MOV X20, X0
	0x039B09A8 BL 0x3C3A624
	0x039B09AC MOVZ W0, 0x1
	0x039B09B0 STR X20, [X19 + 0x18]
	0x039B09B4 STR W0, [X19 + 0x10]
	0x039B09B8 B 0x39B0A18
	0x039B09BC MOVN W8, 0x0
	0x039B09C0 STR W8, [X19 + 0x10]
	0x039B09C4 ADRP X8, 0x7A1000
	0x039B09C8 LDR X8, [X8 + 0xD58]
	0x039B09CC LDR X0, [X8]
	0x039B09D0 BL 0x1C16F10
	0x039B09D4 MOV X1, X31
	0x039B09D8 MOV X20, X0
	0x039B09DC BL 0x3C3A624
	0x039B09E0 MOVZ W8, 0x2
	0x039B09E4 STR X20, [X19 + 0x18]
	0x039B09E8 STR W8, [X19 + 0x10]
	0x039B09EC MOVZ W0, 0x1
	0x039B09F0 B 0x39B0A18
	0x039B09F4 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X2, 0
	005 JumpIfEqual {28}
	006 Move X19, X0
	007 Move X0, [X2+24]
	008 Move X20, X2
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X8, [X0]
	012 Move X1, X19
	013 Move X9, [X8+392]
	014 Move X2, [X8+400]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X20+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, [X0]
	020 Move X1, X19
	021 Move X9, [X8+424]
	022 Move X2, [X8+432]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Call 0x1C17F20

Method: System.Void OnItemRemoved(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> sender, UnityEngine.Rendering.ListChangedEventArgs`1<UnityEngine.Rendering.DebugUI/Widget> e)

Disassembly:
	0x039B0AC0 MOVN W8, 0x0
	0x039B0AC4 STR W8, [X19 + 0x10]
	0x039B0AC8 ADRP X8, 0x7A0000
	0x039B0ACC LDR X8, [X8 + 0x778]
	0x039B0AD0 LDR X0, [X8]
	0x039B0AD4 LDR W8, [X0 + 0xE0]
	0x039B0AD8 CBNZ W8, 0x39B0AE0
	0x039B0ADC BL 0x1C16DFC
	0x039B0AE0 MOV X0, X31
	0x039B0AE4 BL 0x399C120
	0x039B0AE8 CBZ X0, 0x39B0B04
	0x039B0AEC MOV X1, X31
	0x039B0AF0 BL 0x39A5654
	0x039B0AF4 MOV W0, W31
	0x039B0AF8 LDP X20, X19, [X31 + 0x10]
	0x039B0AFC LDR X30, [X31], #0x20
	0x039B0B00 RET
	0x039B0B04 BL 0x1C16F20
	0x039B0B08 LDR X0, [X0 + 0x18]
	0x039B0B0C RET
	0x039B0B10 STP X30, X19, [X31 - 0x10]!
	0x039B0B14 ADRP X0, 0x743000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X2, 0
	005 JumpIfEqual {30}
	006 Move X19, X0
	007 Move X0, [X2+24]
	008 Move X20, X2
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X8, [X0]
	012 Move X1, X31
	013 Move X9, [X8+392]
	014 Move X2, [X8+400]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X20+24]
	017 Compare X0, 0
	018 JumpIfEqual {30}
	019 Move X8, [X0]
	020 Move X1, X31
	021 Move X9, [X8+424]
	022 Move X2, [X8+432]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Call Panel.SetDirty, X0
	029 Return 
	030 Call 0x1C17F20

Method: System.Void SetDirty()

Disassembly:
	0x039B09F8 MOVN W9, 0x0
	0x039B09FC STR W9, [X19 + 0x10]
	0x039B0A00 CBZ X8, 0x39B0A24
	0x039B0A04 LDR X9, [X8 + 0x18]
	0x039B0A08 LDR X0, [X8 + 0x40]
	0x039B0A0C LDR X1, [X8 + 0x28]
	0x039B0A10 BLR X9
	0x039B0A14 MOV W0, W31
	0x039B0A18 LDP X20, X19, [X31 + 0x10]
	0x039B0A1C LDR X30, [X31], #0x20
	0x039B0A20 RET
	0x039B0A24 BL 0x1C16F20
	0x039B0A28 LDR X0, [X0 + 0x18]
	0x039B0A2C RET
	0x039B0A30 STP X30, X19, [X31 - 0x10]!
	0x039B0A34 ADRP X0, 0x743000
	0x039B0A38 LDR X0, [X0 + 0xB40]
	0x039B0A3C BL 0x1C16D08
	0x039B0A40 BL 0x1C16F10
	0x039B0A44 MOV X1, X31
	0x039B0A48 MOV X19, X0
	0x039B0A4C BL 0x3380310
	0x039B0A50 ADRP X0, 0x7A1000
	0x039B0A54 LDR X0, [X0 + 0xD60]
	0x039B0A58 BL 0x1C16D08
	0x039B0A5C MOV X1, X0
	0x039B0A60 MOV X0, X19
	0x039B0A64 BL 0x1C16DEC
	0x039B0A68 LDR X0, [X0 + 0x18]
	0x039B0A6C RET
	0x039B0A70 RET
	0x039B0A74 STR X30, [X31 - 0x20]!
	0x039B0A78 STP X20, X19, [X31 + 0x10]
	0x039B0A7C ADRP X20, 0xA31000
	0x039B0A80 LDRB W8, [X20 + 0xC34]
	0x039B0A84 MOV X19, X0
	0x039B0A88 TBNZ X8, 0x0, 0x39B0AA0
	0x039B0A8C ADRP X0, 0x7A0000
	0x039B0A90 LDR X0, [X0 + 0x778]
	0x039B0A94 BL 0x1C16CF4
	0x039B0A98 MOVZ W8, 0x1
	0x039B0A9C STRB W8, [X20 + 0xC34]
	0x039B0AA0 LDR W8, [X19 + 0x10]
	0x039B0AA4 CMP W8, 0x1
	0x039B0AA8 B.EQ 0x39B0AC0
	0x039B0AAC CBNZ W8, 0x39B0AF4
	0x039B0AB0 MOVZ W0, 0x1
	0x039B0AB4 STR X31, [X19 + 0x18]
	0x039B0AB8 STR W0, [X19 + 0x10]
	0x039B0ABC B 0x39B0AF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA32000
	007 Move W8, [X20+3109]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x7A2000
	014 Move X0, [X0+3008]
	015 Call 0x1C17CF4
	016 Move X0, 0x7A2000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3109], W8
	021 Move X0, [X19+40]
	022 Compare X0, 0
	023 JumpIfEqual {60}
	024 Move X8, 0x7A2000
	025 Move X8, [X8+3008]
	026 Move X1, [X8]
	027 Call 0x2498BA8, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X22, 0x7A2000
	030 Move X22, [X22+3016]
	031 Move W20, W0
	032 Move W21, W31
	033 Move X0, [X19+40]
	034 Compare X0, 0
	035 JumpIfEqual {60}
	036 Move X2, [X22]
	037 Move W1, W21
	038 Call 0x2498990, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {60}
	041 Move X8, [X0]
	042 Move X9, [X8+488]
	043 Move X1, [X8+496]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Add W21, W21, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X19+48]
	048 Compare X8, 0
	049 JumpIfEqual {60}
	050 Move X3, [X8+24]
	051 Move X0, [X8+64]
	052 Move X2, [X8+40]
	053 Move X1, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 CallNoReturn X3
	060 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x039B0B18 LDR X0, [X0 + 0xB40]
	0x039B0B1C BL 0x1C16D08
	0x039B0B20 BL 0x1C16F10
	0x039B0B24 MOV X1, X31
	0x039B0B28 MOV X19, X0
	0x039B0B2C BL 0x3380310
	0x039B0B30 ADRP X0, 0x7A1000
	0x039B0B34 LDR X0, [X0 + 0xD68]
	0x039B0B38 BL 0x1C16D08
	0x039B0B3C MOV X1, X0
	0x039B0B40 MOV X0, X19
	0x039B0B44 BL 0x1C16DEC
	0x039B0B48 LDR X0, [X0 + 0x18]
	0x039B0B4C RET
	0x039B0B50 STP X30, X23, [X31 - 0x30]!
	0x039B0B54 STP X22, X21, [X31 + 0x10]
	0x039B0B58 STP X20, X19, [X31 + 0x20]
	0x039B0B5C ADRP X22, 0xA31000
	0x039B0B60 ADRP X23, 0x7A1000
	0x039B0B64 ADRP X21, 0x7A1000
	0x039B0B68 LDRB W8, [X22 + 0xC35]
	0x039B0B6C LDR X23, [X23 + 0xD70]
	0x039B0B70 LDR X21, [X21 + 0xD78]
	0x039B0B74 MOV W19, W1
	0x039B0B78 MOV X20, X0
	0x039B0B7C TBNZ X8, 0x0, 0x39B0BAC
	0x039B0B80 ADRP X0, 0x7A1000
	0x039B0B84 LDR X0, [X0 + 0xD78]
	0x039B0B88 BL 0x1C16CF4
	0x039B0B8C ADRP X0, 0x7A1000
	0x039B0B90 LDR X0, [X0 + 0xD80]
	0x039B0B94 BL 0x1C16CF4
	0x039B0B98 ADRP X0, 0x7A1000
	0x039B0B9C LDR X0, [X0 + 0xD70]
	0x039B0BA0 BL 0x1C16CF4
	0x039B0BA4 MOVZ W8, 0x1
	0x039B0BA8 STRB W8, [X22 + 0xC35]
	0x039B0BAC LDR X0, [X23]
	0x039B0BB0 BL 0x1C16F10
	0x039B0BB4 LDR X1, [X21]
	0x039B0BB8 MOV X21, X0
	0x039B0BBC BL 0x2FDE980
	0x039B0BC0 MOV X0, X20
	0x039B0BC4 MOV X1, X31
	0x039B0BC8 STR X21, [X20 + 0x10]
	0x039B0BCC BL 0x33BDD8C
	0x039B0BD0 LDR X0, [X20 + 0x10]
	0x039B0BD4 CBZ X0, 0x39B0BF8
	0x039B0BD8 ADRP X8, 0x7A1000
	0x039B0BDC LDR X8, [X8 + 0xD80]
	0x039B0BE0 MOV W1, W19
	0x039B0BE4 LDP X20, X19, [X31 + 0x20]
	0x039B0BE8 LDP X22, X21, [X31 + 0x10]
	0x039B0BEC LDR X2, [X8]
	0x039B0BF0 LDP X30, X23, [X31], #0x30
	0x039B0BF4 B 0x2FDED04

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA32000
	009 Move W8, [X20+3110]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x7A2000
	016 Move X0, [X0+3008]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A2000
	019 Move X0, [X0+3016]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3110], W8
	023 Move X0, [X19+24]
	024 Compare X0, 0
	025 JumpIfEqual {69}
	026 Move X8, [X0]
	027 Move X9, [X8+344]
	028 Move X1, [X8+352]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X19+40]
	031 Compare X8, 0
	032 JumpIfEqual {69}
	033 Move X9, 0x7A2000
	034 Move X9, [X9+3008]
	035 Add W20, W0, 391
	036 Move X0, X8
	037 Move X1, [X9]
	038 Call 0x2498BA8, X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X23, 0x7A2000
	041 Move X23, [X23+3016]
	042 Move W21, W0
	043 Move W22, W31
	044 Move W24, 23
	045 Move X0, [X19+40]
	046 Compare X0, 0
	047 JumpIfEqual {69}
	048 Move X2, [X23]
	049 Move W1, W22
	050 Call 0x2498990, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {69}
	053 Move X8, [X0]
	054 Move X9, [X8+344]
	055 Move X1, [X8+352]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Add W22, W22, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction MADD not yet implemented."
	060 Move W0, W20
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Return X0
	069 Call 0x1C17F20

Method: System.Int32 System.IComparable<UnityEngine.Rendering.DebugUI.Panel>.CompareTo(UnityEngine.Rendering.DebugUI/Panel other)

Disassembly:
	0x039B0BF8 BL 0x1C16F20
	0x039B0BFC STR X30, [X31 - 0x30]!
	0x039B0C00 STP X22, X21, [X31 + 0x10]
	0x039B0C04 STP X20, X19, [X31 + 0x20]
	0x039B0C08 ADRP X21, 0xA31000
	0x039B0C0C LDRB W8, [X21 + 0xC36]
	0x039B0C10 MOV W19, W1
	0x039B0C14 MOV X20, X0
	0x039B0C18 TBNZ X8, 0x0, 0x39B0C48
	0x039B0C1C ADRP X0, 0x7A1000
	0x039B0C20 LDR X0, [X0 + 0xD88]
	0x039B0C24 BL 0x1C16CF4

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {12}
	003 Move [X31-16], X30
	004 Move W8, [X0+32]
	005 Add X0, X31, 12
	006 Move X2, X31
	007 Move [X31+12], W8
	008 Move W1, [X1+32]
	009 Call Int32.CompareTo, X0, X1
	010 Move X30, [X31+16]
	011 Return X0
	012 Move W0, 1
	013 Return X0

