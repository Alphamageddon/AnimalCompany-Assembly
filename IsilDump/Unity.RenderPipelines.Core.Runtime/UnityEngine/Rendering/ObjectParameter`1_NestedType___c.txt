Type: UnityEngine.Rendering.ObjectParameter`1/<>c

Method: System.Void .cctor()

Disassembly:
	0x0236C7B8 ADD X9, X8, 0x135
	0x0236C7BC LDRH W9, [X9]
	0x0236C7C0 B 0x236C7C8
	0x0236C7C4 MOV X0, X8
	0x0236C7C8 LDR X10, [X0 + 0xC0]
	0x0236C7CC LDR X10, [X10 + 0x8]
	0x0236C7D0 LDR X21, [X10]
	0x0236C7D4 TBNZ X9, 0x0, 0x236C7E4
	0x0236C7D8 MOV X0, X8
	0x0236C7DC BL 0x1C5C684
	0x0236C7E0 MOV X8, X0
	0x0236C7E4 LDR X8, [X8 + 0xC0]
	0x0236C7E8 MOV X0, X20
	0x0236C7EC LDR X1, [X8 + 0x8]
	0x0236C7F0 BLR X21
	0x0236C7F4 LDR X0, [X19 + 0x20]
	0x0236C7F8 LDRB W8, [X0 + 0x135]
	0x0236C7FC TBNZ X8, 0x0, 0x236C804
	0x0236C800 BL 0x1C5C684
	0x0236C804 LDR X8, [X0 + 0xC0]
	0x0236C808 LDR X0, [X8 + 0x10]
	0x0236C80C LDRB W8, [X0 + 0x135]
	0x0236C810 TBNZ X8, 0x0, 0x236C818
	0x0236C814 BL 0x1C5C684
	0x0236C818 LDR X8, [X0 + 0xB8]
	0x0236C81C STR X20, [X8]
	0x0236C820 LDR X0, [X19 + 0x20]
	0x0236C824 LDRB W8, [X0 + 0x135]
	0x0236C828 TBNZ X8, 0x0, 0x236C830
	0x0236C82C BL 0x1C5C684
	0x0236C830 LDR X8, [X0 + 0xC0]
	0x0236C834 LDR X0, [X8 + 0x10]
	0x0236C838 LDRB W8, [X0 + 0x135]
	0x0236C83C TBNZ X8, 0x0, 0x236C84C
	0x0236C840 LDP X20, X19, [X31 + 0x10]
	0x0236C844 LDP X30, X21, [X31], #0x20
	0x0236C848 B 0x1C5C684
	0x0236C84C LDP X20, X19, [X31 + 0x10]
	0x0236C850 LDP X30, X21, [X31], #0x20
	0x0236C854 RET
	0x0236C858 MOV X1, X31
	0x0236C85C B 0x33BDD8C
	0x0236C860 STP X29, X30, [X31 - 0x50]!
	0x0236C864 STR X25, [X31 + 0x10]
	0x0236C868 STP X24, X23, [X31 + 0x20]
	0x0236C86C STP X22, X21, [X31 + 0x30]
	0x0236C870 STP X20, X19, [X31 + 0x40]
	0x0236C874 ADD X29, X31, 0x0
	0x0236C878 SUB X31, X31, 0x30
	0x0236C87C MRS X24, 0xC000
	0x0236C880 LDR X8, [X24 + 0x28]
	0x0236C884 ADD X10, X31, 0x0
	0x0236C888 MOV X21, X2
	0x0236C88C MOV X19, X1
	0x0236C890 STUR X8, [X29 - 0x8]
	0x0236C894 LDR X8, [X2 + 0x20]
	0x0236C898 LDR X8, [X8 + 0xC0]
	0x0236C89C LDR X9, [X8 + 0x38]
	0x0236C8A0 LDR W9, [X9 + 0xFC]
	0x0236C8A4 ADD X9, X9, 0xF
	0x0236C8A8 AND X9, X9, 0x1FFFFFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+8]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+8]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move [X8], X20
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call 0x1C5D684
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

Method: System.Void .ctor()

Disassembly:
	0x0236C8AC SUB X20, X10, X9
	0x0236C8B0 ADD X31, X20, 0x0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <set_value>b__9_0(System.Reflection.FieldInfo t)

Disassembly:
	0x0236C8B4 LDR X0, [X8 + 0x18]
	0x0236C8B8 LDRB W8, [X0 + 0x135]
	0x0236C8BC TBNZ X8, 0x0, 0x236C8C4
	0x0236C8C0 BL 0x1C5C684
	0x0236C8C4 CBZ X19, 0x236C8D4
	0x0236C8C8 LDR X8, [X19]
	0x0236C8CC CMP X8, X0
	0x0236C8D0 B.EQ 0x236C90C
	0x0236C8D4 MOVZ W0, 0x28
	0x0236C8D8 MOV X1, X31
	0x0236C8DC BL 0x339D764
	0x0236C8E0 LDR X8, [X24 + 0x28]
	0x0236C8E4 LDUR X9, [X29 - 0x8]
	0x0236C8E8 CMP X8, X9
	0x0236C8EC B.NE 0x236CAE8
	0x0236C8F0 ADD X31, X29, 0x0
	0x0236C8F4 LDP X20, X19, [X31 + 0x40]
	0x0236C8F8 LDP X22, X21, [X31 + 0x30]
	0x0236C8FC LDP X24, X23, [X31 + 0x20]
	0x0236C900 LDR X25, [X31 + 0x10]
	0x0236C904 LDP X29, X30, [X31], #0x50
	0x0236C908 RET
	0x0236C90C LDR X8, [X21 + 0x20]
	0x0236C910 MOV X0, X19
	0x0236C914 LDR X8, [X8 + 0xC0]
	0x0236C918 LDR X8, [X8 + 0x18]
	0x0236C91C LDR X8, [X8 + 0x80]
	0x0236C920 ADD X1, X8, 0x20
	0x0236C924 BL 0x1C16D18
	0x0236C928 LDR X22, [X0]
	0x0236C92C CBZ X22, 0x236C8D4
	0x0236C930 LDR X8, [X21 + 0x20]
	0x0236C934 MOVZ W1, 0x8
	0x0236C938 LDR X8, [X8 + 0xC0]
	0x0236C93C LDR X8, [X8 + 0x18]
	0x0236C940 LDR X8, [X8 + 0x80]
	0x0236C944 ADD X23, X8, 0x20
	0x0236C948 MOV X0, X23
	0x0236C94C BL 0x1C16D14
	0x0236C950 MOV X0, X19
	0x0236C954 MOV X1, X23
	0x0236C958 BL 0x1C16D18
	0x0236C95C STR X31, [X0]
	0x0236C960 LDR X8, [X21 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x206E000
	006 Move W8, [X20+2235]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1D88000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X0, 0x1DB1000
	016 Move X0, [X0+2880]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2235], W8
	020 Compare X19, 0
	021 JumpIfEqual {54}
	022 Move X8, [X19]
	023 Move X20, 0x1DB1000
	024 Move X21, 0x1D88000
	025 Move X0, X19
	026 Move X9, [X8+600]
	027 Move X1, [X8+608]
	028 Move X20, [X20+2880]
	029 Move X21, [X21+1728]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X21]
	032 Move X20, [X20]
	033 Move X19, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Compare X19, 0
	043 JumpIfEqual {54}
	044 Move X8, [X19]
	045 Move X1, X0
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X3, [X8+664]
	050 Move X2, [X8+672]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 CallNoReturn X3
	054 Call 0x1C17F20

Method: System.Int32 <set_value>b__9_1(System.Reflection.FieldInfo t)

Disassembly:
	0x0236C964 MOV X0, X19
	0x0236C968 LDR X8, [X8 + 0xC0]
	0x0236C96C LDR X8, [X8 + 0x18]
	0x0236C970 LDR X8, [X8 + 0x80]
	0x0236C974 ADD X1, X8, 0x40
	0x0236C978 BL 0x1C16D18
	0x0236C97C LDR X8, [X21 + 0x20]
	0x0236C980 LDRH W23, [X0]
	0x0236C984 LDR X8, [X8 + 0xC0]
	0x0236C988 LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X2, [X8+568]
	007 Move X8, [X8+576]
	008 Move X1, X8
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

