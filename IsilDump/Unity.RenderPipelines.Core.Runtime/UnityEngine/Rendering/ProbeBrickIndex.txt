Type: UnityEngine.Rendering.ProbeBrickIndex

Method: System.Int32 get_estimatedVMemCost()

Disassembly:
	0x039B4DA8 LDUR X0, [X11 + 0xC]
	0x039B4DAC LDR W11, [X11 + 0x14]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_estimatedVMemCost(System.Int32 value)

Disassembly:
	0x039B4DB0 SUB W13, W15, W13
	0x039B4DB4 ADD W15, W12, W28

ISIL:
	001 Move [X0+56], W1
	002 Return 

Method: System.Int32 GetVoxelSubdivLevel()

Disassembly:
	0x039B4DB8 CSEL W12, W12, W27, GT
	0x039B4DBC CMP W26, W29
	0x039B4DC0 CSEL W17, W26, W29, GT
	0x039B4DC4 AND X9, X9, 0x0
	0x039B4DC8 STP W12, W17, [X20]
	0x039B4DCC AND X12, X0, 0x0
	0x039B4DD0 ADD W10, W22, W21
	0x039B4DD4 CMP W13, W24
	0x039B4DD8 SUB W8, W8, W0
	0x039B4DDC SUB X9, X9, X12
	0x039B4DE0 ADD W14, W28, W26
	0x039B4DE4 ADD W16, W13, W28
	0x039B4DE8 CSEL W13, W13, W24, GT
	0x039B4DEC SUB W10, W10, W11
	0x039B4DF0 CMP W15, W8
	0x039B4DF4 UBFM X9, X9, 0x20, 0x3F
	0x039B4DF8 LDR X11, [X31 + 0x18]
	0x039B4DFC STR W13, [X20 + 0x8]
	0x039B4E00 CSEL W8, W15, W8, LT
	0x039B4E04 CMP W14, W9
	0x039B4E08 LDP X20, X19, [X31 + 0x70]
	0x039B4E0C LDP X22, X21, [X31 + 0x60]
	0x039B4E10 LDP X24, X23, [X31 + 0x50]
	0x039B4E14 LDP X26, X25, [X31 + 0x40]
	0x039B4E18 LDP X28, X27, [X31 + 0x30]
	0x039B4E1C LDP X29, X30, [X31 + 0x20]
	0x039B4E20 CSEL W9, W14, W9, LT
	0x039B4E24 CMP W16, W10
	0x039B4E28 CSEL W10, W16, W10, LT
	0x039B4E2C STP W8, W9, [X11]
	0x039B4E30 STR W10, [X11 + 0x8]
	0x039B4E34 ADD X31, X31, 0x80
	0x039B4E38 RET
	0x039B4E3C SUB X31, X31, 0x90
	0x039B4E40 STR D8, [X31 + 0x20]
	0x039B4E44 STP X29, X30, [X31 + 0x30]
	0x039B4E48 STP X28, X27, [X31 + 0x40]
	0x039B4E4C STP X26, X25, [X31 + 0x50]
	0x039B4E50 STP X24, X23, [X31 + 0x60]
	0x039B4E54 STP X22, X21, [X31 + 0x70]
	0x039B4E58 STP X20, X19, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA2E000
	005 Move X19, 0x79E000
	006 Move W8, [X20+3159]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x79E000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3159], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0xA2E000
	023 Move W8, [X20+3257]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x79E000
	027 Move X0, [X0+3912]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3257], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+8]
	039 Compare X8, 0
	040 JumpIfEqual {50}
	041 Move W8, [X8+52]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W9, 3
	045 Subtract W8, W8, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Int32 SizeOfPhysicalIndexFromBudget(UnityEngine.Rendering.ProbeVolumeTextureMemoryBudget memoryBudget)

Disassembly:
	0x039B4E5C STR X4, [X31 + 0x28]
	0x039B4E60 STR X2, [X31 + 0x18]
	0x039B4E64 ADRP X24, 0xA2D000
	0x039B4E68 ADRP X25, 0x79D000
	0x039B4E6C LDRB W8, [X24 + 0xC60]
	0x039B4E70 LDR X25, [X25 + 0xF48]
	0x039B4E74 MOV X21, X6
	0x039B4E78 MOV W19, W5
	0x039B4E7C MOV X22, X3
	0x039B4E80 MOV X23, X1
	0x039B4E84 MOV X20, X0
	0x039B4E88 TBNZ X8, 0x0, 0x39B4EAC
	0x039B4E8C ADRP X0, 0x73F000
	0x039B4E90 LDR X0, [X0 + 0x5A8]
	0x039B4E94 BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W0, 0x9000
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 Return X0
	007 Move W0, 0x4800
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Return X0
	010 Move W0, 0x2400
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 Return X0

Method: System.Void .ctor(UnityEngine.Rendering.ProbeVolumeTextureMemoryBudget memoryBudget)

Disassembly:
	0x039B4E98 ADRP X0, 0x79D000
	0x039B4E9C LDR X0, [X0 + 0xF48]
	0x039B4EA0 BL 0x1C16CF4
	0x039B4EA4 MOVZ W8, 0x1
	0x039B4EA8 STRB W8, [X24 + 0xC60]
	0x039B4EAC LDR X0, [X25]
	0x039B4EB0 LDR W29, [X21 + 0x8]
	0x039B4EB4 LDUR X28, [X21 + 0x24]
	0x039B4EB8 LDR W26, [X21 + 0x2C]
	0x039B4EBC LDR W8, [X0 + 0xE0]
	0x039B4EC0 MOV W24, W29
	0x039B4EC4 CBNZ W8, 0x39B4ED0
	0x039B4EC8 BL 0x1C16DFC
	0x039B4ECC LDR W24, [X21 + 0x8]
	0x039B4ED0 SCVTF S1, W29
	0x039B4ED4 FMOV S0, 3
	0x039B4ED8 BL 0x3EB1B50
	0x039B4EDC MOVZ W9, 0x7F800000
	0x039B4EE0 FMOV S8, W9
	0x039B4EE4 FCVTZS W8, S0
	0x039B4EE8 MOVZ W27, 0x80000000
	0x039B4EEC FCMP S0, S8
	0x039B4EF0 SCVTF S1, W24
	0x039B4EF4 FMOV S0, 3
	0x039B4EF8 CSEL W29, W27, W8, EQ
	0x039B4EFC BL 0x3EB1B50
	0x039B4F00 ADRP X25, 0xA2D000
	0x039B4F04 LDRB W8, [X25 + 0xCB9]
	0x039B4F08 FCVTZS W9, S0
	0x039B4F0C FCMP S0, S8
	0x039B4F10 CSEL W24, W27, W9, EQ
	0x039B4F14 CBNZ W8, 0x39B4F2C
	0x039B4F18 ADRP X0, 0x79D000
	0x039B4F1C LDR X0, [X0 + 0xF48]
	0x039B4F20 BL 0x1C16CF4
	0x039B4F24 MOVZ W8, 0x1
	0x039B4F28 STRB W8, [X25 + 0xCB9]
	0x039B4F2C ADRP X25, 0x79D000
	0x039B4F30 LDR X25, [X25 + 0xF48]
	0x039B4F34 LDR X0, [X25]
	0x039B4F38 LDR W8, [X0 + 0xE0]
	0x039B4F3C CBNZ W8, 0x39B4F48
	0x039B4F40 BL 0x1C16DFC
	0x039B4F44 LDR X0, [X25]
	0x039B4F48 LDR X8, [X0 + 0xB8]
	0x039B4F4C LDR X8, [X8 + 0x8]
	0x039B4F50 CBZ X8, 0x39B51A0
	0x039B4F54 LDR X11, [X31 + 0x18]
	0x039B4F58 LDR X12, [X31 + 0x28]
	0x039B4F5C AND X8, X28, 0x0
	0x039B4F60 SUB X13, X23, X8
	0x039B4F64 SUB X8, X22, X8
	0x039B4F68 LDR V0, [X21 + 0x8]
	0x039B4F6C SUB X9, X23, X28
	0x039B4F70 SUB X10, X22, X28
	0x039B4F74 SUB W11, W11, W26
	0x039B4F78 SUB W12, W12, W26
	0x039B4F7C UBFM X8, X8, 0x20, 0x3F
	0x039B4F80 SDIV W25, W9, W29
	0x039B4F84 SDIV W9, W11, W29
	0x039B4F88 LDP W26, W23, [X21 + 0xC]
	0x039B4F8C SDIV W27, W10, W24
	0x039B4F90 SDIV W28, W12, W24
	0x039B4F94 SDIV W8, W8, W24
	0x039B4F98 LDR W24, [X21 + 0x14]
	0x039B4F9C STR W9, [X31 + 0x28]
	0x039B4FA0 UBFM X9, X13, 0x20, 0x3F
	0x039B4FA4 SDIV W9, W9, W29
	0x039B4FA8 SCVTF S1, S0
	0x039B4FAC FMOV S0, 3
	0x039B4FB0 UBFM X29, X9, 0x20, 0x1F
	0x039B4FB4 UBFM X22, X8, 0x20, 0x1F
	0x039B4FB8 BL 0x3EB1B50
	0x039B4FBC MOVZ W9, 0x7F800000
	0x039B4FC0 ADRP X13, 0x73F000
	0x039B4FC4 FMOV S1, W9
	0x039B4FC8 LDP W11, W9, [X21 + 0x18]
	0x039B4FCC LDR W12, [X21]
	0x039B4FD0 LDR X13, [X13 + 0x5A8]
	0x039B4FD4 FCVTZS W8, S0
	0x039B4FD8 MOVZ W10, 0x80000000
	0x039B4FDC FCMP S0, S1
	0x039B4FE0 CSEL W8, W10, W8, EQ
	0x039B4FE4 LDR X0, [X13]
	0x039B4FE8 SDIV W15, W26, W8
	0x039B4FEC SDIV W13, W23, W8
	0x039B4FF0 SDIV W14, W24, W8
	0x039B4FF4 SDIV W11, W11, W8
	0x039B4FF8 SDIV W8, W9, W8
	0x039B4FFC LDR W9, [X31 + 0x28]
	0x039B5000 MOVZ W10, 0xF3
	0x039B5004 STP W15, W25, [X31 + 0xC]
	0x039B5008 SUB W24, W25, W15
	0x039B500C SUB W25, W9, W14
	0x039B5010 SUB X9, X29, X13, 0x20, LSL
	0x039B5014 UBFM X8, X8, 0x20, 0x1F
	0x039B5018 SUB W26, W27, W15
	0x039B501C SUB W27, W28, W14
	0x039B5020 MUL W12, W12, W10
	0x039B5024 LDR W10, [X0 + 0xE0]
	0x039B5028 UBFM X28, X9, 0x20, 0x3F
	0x039B502C SUB X8, X8, X13, 0x20, LSL
	0x039B5030 SUB W11, W11, W15
	0x039B5034 ADD W9, W12, W28
	0x039B5038 UBFM X21, X8, 0x20, 0x3F
	0x039B503C SUB X14, X22, X13, 0x20, LSL
	0x039B5040 MUL W23, W11, W21
	0x039B5044 MADD W8, W24, W21, W9
	0x039B5048 UBFM X29, X14, 0x20, 0x3F
	0x039B504C MADD W8, W23, W25, W8
	0x039B5050 STR W12, [X31 + 0x28]
	0x039B5054 STR W11, [X31 + 0x8]
	0x039B5058 STR W8, [X31 + 0x18]
	0x039B505C CBNZ W10, 0x39B5064
	0x039B5060 BL 0x1C16DFC
	0x039B5064 SUB W1, W27, 0x1
	0x039B5068 MOV W0, W31
	0x039B506C MOV X2, X31
	0x039B5070 BL 0x337EDF0
	0x039B5074 STR W0, [X31 + 0x14]
	0x039B5078 SUB W1, W26, 0x1
	0x039B507C MOV W0, W31
	0x039B5080 MOV X2, X31
	0x039B5084 BL 0x337EDF0
	0x039B5088 MOV W22, W0
	0x039B508C SUB W1, W29, 0x1
	0x039B5090 MOV W0, W31
	0x039B5094 MOV X2, X31
	0x039B5098 BL 0x337EDF0
	0x039B509C LDR W9, [X31 + 0x28]
	0x039B50A0 LDP W10, W1, [X31 + 0x14]
	0x039B50A4 LDR W8, [X20 + 0x74]
	0x039B50A8 MOV X2, X31
	0x039B50AC MADD W9, W10, W23, W9
	0x039B50B0 MADD W9, W22, W21, W9
	0x039B50B4 ADD W22, W9, W0
	0x039B50B8 MOV W0, W8
	0x039B50BC BL 0x337EE94
	0x039B50C0 LDR W8, [X20 + 0x78]
	0x039B50C4 STR W0, [X20 + 0x74]
	0x039B50C8 MOV W1, W22
	0x039B50CC MOV X2, X31
	0x039B50D0 MOV W0, W8
	0x039B50D4 BL 0x337EDF0
	0x039B50D8 CMP W24, W26
	0x039B50DC STR W0, [X20 + 0x78]
	0x039B50E0 B.GE 0x39B5170
	0x039B50E4 LDR W8, [X31 + 0x10]
	0x039B50E8 LDR W9, [X31 + 0x8]
	0x039B50EC MADD W8, W9, W25, W8
	0x039B50F0 LDR W9, [X31 + 0xC]
	0x039B50F4 SUB W8, W8, W9
	0x039B50F8 LDR W9, [X31 + 0x28]
	0x039B50FC MADD W8, W8, W21, W9
	0x039B5100 ADD W8, W8, W28
	0x039B5104 SUB W9, W29, W28
	0x039B5108 CMP W25, W27
	0x039B510C MOV W10, W8
	0x039B5110 MOV W11, W25
	0x039B5114 B.GE 0x39B5160
	0x039B5118 CMP W28, W29
	0x039B511C B.GE 0x39B5150
	0x039B5120 LDR X12, [X20 + 0x30]
	0x039B5124 CBZ X12, 0x39B51A0
	0x039B5128 LDR W13, [X12 + 0x18]
	0x039B512C MOV W14, W9
	0x039B5130 MOV W15, W10
	0x039B5134 CMP W15, W13
	0x039B5138 B.CS 0x39B519C
	0x039B513C ADD X16, X12, W15, 0x2, SXTW
	0x039B5140 SUBS W14, W14, 0x1
	0x039B5144 ADD W15, W15, 0x1
	0x039B5148 STR W19, [X16 + 0x20]
	0x039B514C B.NE 0x39B5134
	0x039B5150 ADD W11, W11, 0x1
	0x039B5154 CMP W11, W27
	0x039B5158 ADD W10, W10, W23
	0x039B515C B.NE 0x39B5118
	0x039B5160 ADD W24, W24, 0x1
	0x039B5164 CMP W24, W26
	0x039B5168 ADD W8, W8, W21
	0x039B516C B.NE 0x39B5108
	0x039B5170 MOVZ W8, 0x1
	0x039B5174 STRB W8, [X20 + 0x70]
	0x039B5178 LDP X20, X19, [X31 + 0x80]
	0x039B517C LDP X22, X21, [X31 + 0x70]
	0x039B5180 LDP X24, X23, [X31 + 0x60]
	0x039B5184 LDP X26, X25, [X31 + 0x50]
	0x039B5188 LDP X28, X27, [X31 + 0x40]
	0x039B518C LDP X29, X30, [X31 + 0x30]
	0x039B5190 LDR V8, [X31 + 0x20]
	0x039B5194 ADD X31, X31, 0x90
	0x039B5198 RET
	0x039B519C BL 0x1C16F28
	0x039B51A0 BL 0x1C16F20
	0x039B51A4 STR X30, [X31 - 0x20]!
	0x039B51A8 STP X20, X19, [X31 + 0x10]
	0x039B51AC LDRB W8, [X0 + 0x70]
	0x039B51B0 MOV X19, X0
	0x039B51B4 MOV X20, X1
	0x039B51B8 CBZ W8, 0x39B51C4
	0x039B51BC MOV X0, X19
	0x039B51C0 BL 0x39B486C
	0x039B51C4 LDR X8, [X19 + 0x28]
	0x039B51C8 STR X8, [X20]
	0x039B51CC LDP X20, X19, [X31 + 0x10]
	0x039B51D0 LDR X30, [X31], #0x20
	0x039B51D4 RET
	0x039B51D8 STP X30, X21, [X31 - 0x20]!
	0x039B51DC STP X20, X19, [X31 + 0x10]
	0x039B51E0 ADRP X21, 0xA2C000
	0x039B51E4 ADRP X20, 0x766000
	0x039B51E8 LDRB W8, [X21 + 0xC5B]
	0x039B51EC LDR X20, [X20 + 0x8F8]
	0x039B51F0 MOV X19, X0
	0x039B51F4 TBNZ X8, 0x0, 0x39B520C
	0x039B51F8 ADRP X0, 0x766000
	0x039B51FC LDR X0, [X0 + 0x8F8]
	0x039B5200 BL 0x1C16CF4
	0x039B5204 MOVZ W8, 0x1
	0x039B5208 STRB W8, [X21 + 0xC5B]
	0x039B520C LDR X0, [X20]
	0x039B5210 LDR X20, [X19 + 0x28]
	0x039B5214 LDR W8, [X0 + 0xE0]
	0x039B5218 CBNZ W8, 0x39B5220
	0x039B521C BL 0x1C16DFC
	0x039B5220 MOV X0, X20
	0x039B5224 MOV X1, X31
	0x039B5228 BL 0x39E9814
	0x039B522C STR X31, [X19 + 0x28]
	0x039B5230 LDP X20, X19, [X31 + 0x10]
	0x039B5234 LDP X30, X21, [X31], #0x20
	0x039B5238 RET
	0x039B523C MOV W0, W1
	0x039B5240 BFM W0, W2, 0x4, 0x2
	0x039B5244 RET
	0x039B5248 STP D9, D8, [X31 - 0x50]!
	0x039B524C STP X30, X25, [X31 + 0x10]
	0x039B5250 STP X24, X23, [X31 + 0x20]
	0x039B5254 STP X22, X21, [X31 + 0x30]
	0x039B5258 STP X20, X19, [X31 + 0x40]
	0x039B525C ADRP X23, 0xA2C000
	0x039B5260 LDRB W8, [X23 + 0xC5C]
	0x039B5264 MOV W21, W3
	0x039B5268 MOV X20, X2
	0x039B526C MOV W22, W1
	0x039B5270 MOV X19, X0
	0x039B5274 TBNZ X8, 0x0, 0x39B5298
	0x039B5278 ADRP X0, 0x73E000
	0x039B527C LDR X0, [X0 + 0xA28]
	0x039B5280 BL 0x1C16CF4
	0x039B5284 ADRP X0, 0x79D000
	0x039B5288 LDR X0, [X0 + 0x78]
	0x039B528C BL 0x1C16CF4
	0x039B5290 MOVZ W8, 0x1
	0x039B5294 STRB W8, [X23 + 0xC5C]
	0x039B5298 ADRP X23, 0xA23000
	0x039B529C LDRB W8, [X23 + 0xABE]
	0x039B52A0 MOVZ W9, 0x43730000
	0x039B52A4 SCVTF S8, W22
	0x039B52A8 FMOV S9, W9
	0x039B52AC CBNZ W8, 0x39B52C4
	0x039B52B0 ADRP X0, 0x73E000
	0x039B52B4 LDR X0, [X0 + 0x5A8]
	0x039B52B8 BL 0x1C16CF4
	0x039B52BC MOVZ W8, 0x1
	0x039B52C0 STRB W8, [X23 + 0xABE]
	0x039B52C4 ADRP X8, 0x73E000
	0x039B52C8 LDR X8, [X8 + 0x5A8]
	0x039B52CC FDIV S8, S8, S9
	0x039B52D0 LDR X0, [X8]
	0x039B52D4 LDR W8, [X0 + 0xE0]
	0x039B52D8 CBNZ W8, 0x39B52E0
	0x039B52DC BL 0x1C16DFC
	0x039B52E0 LDR W10, [X19 + 0x18]
	0x039B52E4 MOVZ W9, 0x7F800000
	0x039B52E8 FRINTP S0, S8
	0x039B52EC FMOV S1, W9
	0x039B52F0 FCVTPS W8, S8
	0x039B52F4 FCMP S0, S1
	0x039B52F8 MOVZ W9, 0x80000000
	0x039B52FC CSEL W23, W9, W8, EQ
	0x039B5300 CMP W10, 0x1
	0x039B5304 B.LT 0x39B5384
	0x039B5308 MOV W22, W31
	0x039B530C LDR X0, [X19 + 0x10]
	0x039B5310 CBZ X0, 0x39B5424
	0x039B5314 MOV W1, W22
	0x039B5318 MOV X2, X31
	0x039B531C BL 0x33575D0
	0x039B5320 TBNZ X0, 0x0, 0x39B5374
	0x039B5324 LDR W8, [X19 + 0x18]
	0x039B5328 ADD W24, W22, W23
	0x039B532C CMP W24, W8
	0x039B5330 B.GE 0x39B5374
	0x039B5334 CMP W22, W24
	0x039B5338 B.GE 0x39B5368
	0x039B533C MOV W25, W31
	0x039B5340 LDR X0, [X19 + 0x10]
	0x039B5344 CBZ X0, 0x39B5424
	0x039B5348 ADD W1, W22, W25
	0x039B534C MOV X2, X31
	0x039B5350 BL 0x33575D0
	0x039B5354 TBNZ X0, 0x0, 0x39B536C
	0x039B5358 ADD W25, W25, 0x1
	0x039B535C CMP W23, W25
	0x039B5360 B.NE 0x39B5340
	0x039B5364 B 0x39B53BC
	0x039B5368 MOV W25, W31
	0x039B536C CMP W25, W23
	0x039B5370 B.EQ 0x39B53BC
	0x039B5374 LDR W8, [X19 + 0x18]
	0x039B5378 ADD W22, W22, 0x1
	0x039B537C CMP W22, W8

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xA2E000
	015 Move X23, 0x79E000
	016 Move W8, [X21+3160]
	017 Move X23, [X23+3920]
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {86}
	024 Move X0, 0x777000
	025 Move X0, [X0+1448]
	026 Call 0x1C17CF4
	027 Move X0, 0x769000
	028 Move X0, [X0+1264]
	029 Call 0x1C17CF4
	030 Move X0, 0x79E000
	031 Move X0, [X0+3928]
	032 Call 0x1C17CF4
	033 Move X0, 0x79E000
	034 Move X0, [X0+3936]
	035 Call 0x1C17CF4
	036 Move X0, 0x79E000
	037 Move X0, [X0+3944]
	038 Call 0x1C17CF4
	039 Move X0, 0x79E000
	040 Move X0, [X0+3952]
	041 Call 0x1C17CF4
	042 Move X0, 0x741000
	043 Move X0, [X0+3672]
	044 Call 0x1C17CF4
	045 Move X0, 0x79E000
	046 Move X0, [X0+3960]
	047 Call 0x1C17CF4
	048 Move X0, 0x79E000
	049 Move X0, [X0+3968]
	050 Call 0x1C17CF4
	051 Move X0, 0x79E000
	052 Move X0, [X0+3976]
	053 Call 0x1C17CF4
	054 Move X0, 0x79E000
	055 Move X0, [X0+3984]
	056 Call 0x1C17CF4
	057 Move X0, 0x79E000
	058 Move X0, [X0+3992]
	059 Call 0x1C17CF4
	060 Move X0, 0x79E000
	061 Move X0, [X0+4000]
	062 Call 0x1C17CF4
	063 Move X0, 0x79E000
	064 Move X0, [X0+4008]
	065 Call 0x1C17CF4
	066 Move X0, 0x79E000
	067 Move X0, [X0+4016]
	068 Call 0x1C17CF4
	069 Move X0, 0x79E000
	070 Move X0, [X0+4024]
	071 Call 0x1C17CF4
	072 Move X0, 0x79E000
	073 Move X0, [X0+3920]
	074 Call 0x1C17CF4
	075 Move X0, 0x79E000
	076 Move X0, [X0+4032]
	077 Call 0x1C17CF4
	078 Move X0, 0x79E000
	079 Move X0, [X0+4040]
	080 Call 0x1C17CF4
	081 Move X0, 0x79E000
	082 Move X0, [X0+4048]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X21+3160], W8
	086 Move X0, [X23]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X23]
	092 Move X8, [X0+184]
	093 Move X25, 0x79E000
	094 Move X24, 0x79E000
	095 Move X21, [X8+8]
	096 Move X25, [X25+3984]
	097 Move X24, [X24+3976]
	098 Compare X21, 0
	099 JumpIfNotEqual {121}
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X23]
	105 Move X9, 0x79D000
	106 Move X8, [X0+184]
	107 Move X9, [X9+4032]
	108 Move X22, [X8]
	109 Move X0, [X9]
	110 Call 0x1C17F10
	111 Move X8, 0x79D000
	112 Move X8, [X8+4008]
	113 Move X1, X22
	114 Move X3, X31
	115 Move X21, X0
	116 Move X2, [X8]
	117 Call UnityAction`1<Object>..ctor, X0, X1, X2
	118 Move X8, [X23]
	119 Move X8, [X8+184]
	120 Move [X8+8], X21
	121 Move X0, [X25]
	122 Call 0x1C17F10
	123 Move X4, [X24]
	124 Move X1, X21
	125 Move X2, X31
	126 Move W3, W31
	127 Move X22, X0
	128 Call 0x2494C20, X0, X1, X2, X3
	129 Compare X19, 0
	130 JumpIfEqual {335}
	131 Move [X19+88], X22
	132 Move X0, [X23]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X23]
	138 Move X8, [X0+184]
	139 Move X25, 0x79D000
	140 Move X24, 0x79D000
	141 Move X21, [X8+16]
	142 Move X25, [X25+3992]
	143 Move X24, [X24+3968]
	144 Compare X21, 0
	145 JumpIfNotEqual {167}
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {151}
	149 Call 0x1C17DFC
	150 Move X0, [X23]
	151 Move X9, 0x79D000
	152 Move X8, [X0+184]
	153 Move X9, [X9+4040]
	154 Move X22, [X8]
	155 Move X0, [X9]
	156 Call 0x1C17F10
	157 Move X8, 0x79D000
	158 Move X8, [X8+4016]
	159 Move X1, X22
	160 Move X3, X31
	161 Move X21, X0
	162 Move X2, [X8]
	163 Call UnityAction`1<Object>..ctor, X0, X1, X2
	164 Move X8, [X23]
	165 Move X8, [X8+184]
	166 Move [X8+16], X21
	167 Move X0, [X25]
	168 Call 0x1C17F10
	169 Move X4, [X24]
	170 Move X1, X21
	171 Move X2, X31
	172 Move W3, W31
	173 Move X22, X0
	174 Call 0x2494C20, X0, X1, X2, X3
	175 Move [X19+96], X22
	176 Move X0, [X23]
	177 Move W8, [X0+224]
	178 Compare W8, 0
	179 JumpIfNotEqual {182}
	180 Call 0x1C17DFC
	181 Move X0, [X23]
	182 Move X8, [X0+184]
	183 Move X29, 0x79D000
	184 Move X28, 0x79D000
	185 Move X27, 0x79D000
	186 Move X26, 0x79D000
	187 Move X25, 0x79D000
	188 Move X24, 0x79D000
	189 Move X29, [X29+4000]
	190 Move X28, [X28+3960]
	191 Move X21, [X8+24]
	192 Move X27, [X27+3944]
	193 Move X26, [X26+3928]
	194 Move X25, [X25+3952]
	195 Move X24, [X24+3936]
	196 Compare X21, 0
	197 JumpIfNotEqual {219}
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X23]
	203 Move X9, 0x79D000
	204 Move X8, [X0+184]
	205 Move X9, [X9+4048]
	206 Move X22, [X8]
	207 Move X0, [X9]
	208 Call 0x1C17F10
	209 Move X8, 0x79D000
	210 Move X8, [X8+4024]
	211 Move X1, X22
	212 Move X3, X31
	213 Move X21, X0
	214 Move X2, [X8]
	215 Call UnityAction`1<Object>..ctor, X0, X1, X2
	216 Move X8, [X23]
	217 Move X8, [X8+184]
	218 Move [X8+24], X21
	219 Move X0, [X29]
	220 Call 0x1C17F10
	221 Move X4, [X28]
	222 Move X1, X21
	223 Move X2, X31
	224 Move W3, W31
	225 Move X22, X0
	226 Call 0x2494C20, X0, X1, X2, X3
	227 Move X8, -49045504
	228 Move V0, [X8+56]
	229 Move X0, X19
	230 Move X1, X31
	231 Move [X19+104], X22
	232 Move [X19+116], D0
	233 Call Object..ctor, X0
	234 Move [X19+64], X31
	235 Move [X19+60], W31
	236 Move X0, [X27]
	237 Call 0x1C17F10
	238 Move X1, [X26]
	239 Move X21, X0
	240 Call Dictionary`2<Vector3Int, Object>..ctor, X0
	241 Move [X19+72], X21
	242 Move X0, [X25]
	243 Call 0x1C17F10
	244 Move X1, [X24]
	245 Move X21, X0
	246 Call Dictionary`2<Object, Object>..ctor, X0
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move [X19+80], X21
	249 Move [X19+112], W31
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X8, -49061888
	253 Move V8, [X8+128]
	254 Move X8, -49061888
	255 Move V8, [X8+132]
	256 Move X8, -49065984
	257 Move V8, [X8+4060]
	258 Move X20, 0xA24000
	259 Move W8, [X20+2750]
	260 Compare W8, 0
	261 JumpIfNotEqual {267}
	262 Move X0, 0x73F000
	263 Move X0, [X0+1448]
	264 Call 0x1C17CF4
	265 Move W8, 1
	266 Move [X20+2750], W8
	267 Move X8, 0x73F000
	268 Move X8, [X8+1448]
	269 Move X20, 0x776000
	270 Move X23, 0x740000
	271 Move X22, 0x768000
	272 Move X0, [X8]
	273 Move W8, [X0+224]
	274 Move X20, [X20+1448]
	275 Move X23, [X23+3672]
	276 Move X22, [X22+1264]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Move W8, 0x43730000
	281 Move S0, W8
	282 Move W9, 0x7F800000
	283 NotImplemented "Instruction FDIV not yet implemented."
	284 Move S1, W9
	285 NotImplemented "Instruction FRINTP not yet implemented."
	286 Move W10, 0x80000000
	287 NotImplemented "Instruction FCVTPS not yet implemented."
	288 NotImplemented "Instruction FCMP not yet implemented."
	289 NotImplemented "Instruction CSEL not yet implemented."
	290 Move [X19+24], W8
	291 Move [X19+32], W8
	292 Move X0, [X20]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 NotImplemented "Instruction CSINC not yet implemented."
	295 Call 0x1C17F10
	296 Move W1, W20
	297 Move X2, X31
	298 Move X21, X0
	299 Call BitArray..ctor, X0, X1
	300 Move W24, [X19+24]
	301 Move [X19+16], X21
	302 Move X0, [X23]
	303 Move W8, 243
	304 Multiply W20, W24, W8
	305 Move W1, W20
	306 Call 0x1C17D6C
	307 Move [X19+48], X0
	308 Move X0, [X22]
	309 Call 0x1C17F10
	310 Move W2, 4
	311 Move W3, 16
	312 Move W1, W20
	313 Move X4, X31
	314 Move X21, X0
	315 Call ComputeBuffer..ctor, X0, X1, X2, X3
	316 Move W8, 972
	317 Multiply W8, W24, W8
	318 Move [X19+40], X21
	319 Move [X19+28], W31
	320 Move [X19+56], W8
	321 Move X0, X19
	322 Move X20, [X31+96]
	323 Move X19, [X31+104]
	324 Move X22, [X31+80]
	325 Move X21, [X31+88]
	326 Move X24, [X31+64]
	327 Move X23, [X31+72]
	328 Move X26, [X31+48]
	329 Move X25, [X31+56]
	330 Move X28, [X31+32]
	331 Move X27, [X31+40]
	332 Move X29, [X31+16]
	333 Move X30, [X31+24]
	334 Move V8, [X31+112]
	335 Call 0x1C17F20

Method: System.Int32 GetRemainingChunkCount()

Disassembly:
	0x039B5864 LDR X2, [X8]
	0x039B5868 MOV X1, X22

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void UploadIndexData()

Disassembly:
	0x039B586C MOV X3, X31
	0x039B5870 BL 0x24AD1FC
	0x039B5874 LDR X8, [X25]
	0x039B5878 LDR X8, [X8 + 0xB8]
	0x039B587C STR X24, [X8 + 0x20]
	0x039B5880 CBZ X21, 0x39B59D8
	0x039B5884 LDR X2, [X27]
	0x039B5888 MOV X0, X21
	0x039B588C MOV X1, X24
	0x039B5890 BL 0x301C7DC
	0x039B5894 MOV W1, W0
	0x039B5898 ADDS W31, W1, 0x1
	0x039B589C B.EQ 0x39B58BC
	0x039B58A0 LDR X0, [X31 + 0xA8]
	0x039B58A4 CBZ X0, 0x39B59F0
	0x039B58A8 LDR X2, [X26]
	0x039B58AC BL 0x301BCCC
	0x039B58B0 MOV X21, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {22}
	007 Move W2, [X19+116]
	008 Move W8, [X19+120]
	009 Move X1, [X19+48]
	010 Move X5, X31
	011 Subtract W8, W8, W2
	012 Add W4, W8, 1
	013 Move W3, W2
	014 Call ComputeBuffer.SetData, X0, X1, X2, X3, X4
	015 Move X8, -49045504
	016 Move V0, [X8+56]
	017 Move [X19+112], W31
	018 Move [X19+116], D0
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return 
	022 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x039B5380 B.LT 0x39B530C
	0x039B5384 TBNZ X21, 0x0, 0x39B53B4
	0x039B5388 ADRP X8, 0x73E000
	0x039B538C LDR X8, [X8 + 0xA28]
	0x039B5390 LDR X0, [X8]
	0x039B5394 LDR W8, [X0 + 0xE0]
	0x039B5398 CBNZ W8, 0x39B53A0
	0x039B539C BL 0x1C16DFC
	0x039B53A0 ADRP X8, 0x79D000
	0x039B53A4 LDR X8, [X8 + 0x78]
	0x039B53A8 MOV X1, X31
	0x039B53AC LDR X0, [X8]
	0x039B53B0 BL 0x3C0649C
	0x039B53B4 MOV W0, W31
	0x039B53B8 B 0x39B540C
	0x039B53BC CMP W22, W24
	0x039B53C0 STP W22, W23, [X20]
	0x039B53C4 B.GE 0x39B53F0
	0x039B53C8 MOV W20, W31
	0x039B53CC LDR X0, [X19 + 0x10]
	0x039B53D0 CBZ X0, 0x39B5424
	0x039B53D4 ADD W1, W22, W20
	0x039B53D8 MOVZ W2, 0x1
	0x039B53DC MOV X3, X31
	0x039B53E0 BL 0x33576AC
	0x039B53E4 ADD W20, W20, 0x1
	0x039B53E8 CMP W23, W20
	0x039B53EC B.NE 0x39B53CC
	0x039B53F0 LDP W8, W9, [X19 + 0x1C]
	0x039B53F4 MOVZ W0, 0x1
	0x039B53F8 SUB W10, W24, W8
	0x039B53FC CMP W10, 0x0
	0x039B5400 SUB W9, W9, W23
	0x039B5404 CSEL W8, W24, W8, GT
	0x039B5408 STP W8, W9, [X19 + 0x1C]
	0x039B540C LDP X20, X19, [X31 + 0x40]
	0x039B5410 LDP X22, X21, [X31 + 0x30]
	0x039B5414 LDP X24, X23, [X31 + 0x20]
	0x039B5418 LDP X30, X25, [X31 + 0x10]
	0x039B541C LDP D9, D8, [X31], #0x50
	0x039B5420 RET
	0x039B5424 BL 0x1C16F20
	0x039B5428 SUB X31, X31, 0x130
	0x039B542C STP X29, X30, [X31 + 0xD0]
	0x039B5430 STP X28, X27, [X31 + 0xE0]
	0x039B5434 STP X26, X25, [X31 + 0xF0]
	0x039B5438 STP X24, X23, [X31 + 0x100]
	0x039B543C STP X22, X21, [X31 + 0x110]
	0x039B5440 STP X20, X19, [X31 + 0x120]
	0x039B5444 ADRP X20, 0xA2C000
	0x039B5448 LDRB W8, [X20 + 0xC5D]
	0x039B544C MOV X21, X4
	0x039B5450 MOV X19, X0
	0x039B5454 STP W6, W7, [X31 + 0x10]
	0x039B5458 STR W5, [X31 + 0x20]
	0x039B545C STR X3, [X31 + 0x18]
	0x039B5460 STR X2, [X31 + 0x28]
	0x039B5464 STR X1, [X31 + 0x48]
	0x039B5468 TBNZ X8, 0x0, 0x39B557C
	0x039B546C ADRP X0, 0x79D000
	0x039B5470 LDR X0, [X0 + 0x80]
	0x039B5474 BL 0x1C16CF4
	0x039B5478 ADRP X0, 0x79D000
	0x039B547C LDR X0, [X0 + 0x88]
	0x039B5480 BL 0x1C16CF4
	0x039B5484 ADRP X0, 0x79D000
	0x039B5488 LDR X0, [X0 + 0x90]
	0x039B548C BL 0x1C16CF4
	0x039B5490 ADRP X0, 0x79D000
	0x039B5494 LDR X0, [X0 + 0x98]
	0x039B5498 BL 0x1C16CF4
	0x039B549C ADRP X0, 0x79D000
	0x039B54A0 LDR X0, [X0 + 0xA0]
	0x039B54A4 BL 0x1C16CF4
	0x039B54A8 ADRP X0, 0x79D000
	0x039B54AC LDR X0, [X0 + 0xA8]
	0x039B54B0 BL 0x1C16CF4
	0x039B54B4 ADRP X0, 0x79D000
	0x039B54B8 LDR X0, [X0 + 0xB0]
	0x039B54BC BL 0x1C16CF4
	0x039B54C0 ADRP X0, 0x79D000
	0x039B54C4 LDR X0, [X0 + 0xB8]
	0x039B54C8 BL 0x1C16CF4
	0x039B54CC ADRP X0, 0x79D000
	0x039B54D0 LDR X0, [X0 + 0xC0]
	0x039B54D4 BL 0x1C16CF4
	0x039B54D8 ADRP X0, 0x765000
	0x039B54DC LDR X0, [X0 + 0x410]
	0x039B54E0 BL 0x1C16CF4
	0x039B54E4 ADRP X0, 0x79D000
	0x039B54E8 LDR X0, [X0 + 0xC8]
	0x039B54EC BL 0x1C16CF4
	0x039B54F0 ADRP X0, 0x79D000
	0x039B54F4 LDR X0, [X0 + 0xD0]
	0x039B54F8 BL 0x1C16CF4
	0x039B54FC ADRP X0, 0x79D000
	0x039B5500 LDR X0, [X0 + 0xD8]
	0x039B5504 BL 0x1C16CF4
	0x039B5508 ADRP X0, 0x79D000
	0x039B550C LDR X0, [X0 + 0xE0]
	0x039B5510 BL 0x1C16CF4
	0x039B5514 ADRP X0, 0x79D000
	0x039B5518 LDR X0, [X0 + 0xE8]
	0x039B551C BL 0x1C16CF4
	0x039B5520 ADRP X0, 0x79D000
	0x039B5524 LDR X0, [X0 + 0xF0]
	0x039B5528 BL 0x1C16CF4
	0x039B552C ADRP X0, 0x79D000
	0x039B5530 LDR X0, [X0 + 0xF8]
	0x039B5534 BL 0x1C16CF4
	0x039B5538 ADRP X0, 0x79D000
	0x039B553C LDR X0, [X0 + 0x100]
	0x039B5540 BL 0x1C16CF4
	0x039B5544 ADRP X0, 0x79D000
	0x039B5548 LDR X0, [X0 + 0x108]
	0x039B554C BL 0x1C16CF4
	0x039B5550 ADRP X0, 0x79C000
	0x039B5554 LDR X0, [X0 + 0xF48]
	0x039B5558 BL 0x1C16CF4
	0x039B555C ADRP X0, 0x79D000
	0x039B5560 LDR X0, [X0 + 0x110]
	0x039B5564 BL 0x1C16CF4
	0x039B5568 ADRP X0, 0x79C000
	0x039B556C LDR X0, [X0 + 0xF50]
	0x039B5570 BL 0x1C16CF4
	0x039B5574 MOVZ W8, 0x1
	0x039B5578 STRB W8, [X20 + 0xC5D]
	0x039B557C ADRP X8, 0x79C000
	0x039B5580 LDR X8, [X8 + 0xF48]
	0x039B5584 MOVI V0.2D, 0x0
	0x039B5588 STP V0, V0, [X31 + 0xB0]
	0x039B558C STR X31, [X31 + 0xA8]
	0x039B5590 LDR X0, [X8]
	0x039B5594 ADRP X20, 0x79D000
	0x039B5598 LDR W8, [X0 + 0xE0]
	0x039B559C LDR X20, [X20 + 0x108]
	0x039B55A0 CBNZ W8, 0x39B55A8
	0x039B55A4 BL 0x1C16DFC
	0x039B55A8 LDR X8, [X20]
	0x039B55AC LDR X9, [X31 + 0x48]
	0x039B55B0 LDR X8, [X8 + 0xB8]
	0x039B55B4 STR X9, [X8]
	0x039B55B8 LDR X0, [X19 + 0x58]
	0x039B55BC CBZ X0, 0x39B5B84
	0x039B55C0 ADRP X8, 0x79D000
	0x039B55C4 LDR X8, [X8 + 0xE8]
	0x039B55C8 LDR X1, [X8]
	0x039B55CC BL 0x2493CB0
	0x039B55D0 LDR X8, [X19 + 0x50]
	0x039B55D4 CBZ X8, 0x39B5B84
	0x039B55D8 ADRP X9, 0x79D000
	0x039B55DC LDR X9, [X9 + 0x80]
	0x039B55E0 LDR X1, [X31 + 0x48]
	0x039B55E4 MOV X2, X0
	0x039B55E8 MOV X0, X8
	0x039B55EC LDR X3, [X9]
	0x039B55F0 STR X2, [X31 + 0x38]
	0x039B55F4 BL 0x2AA5098
	0x039B55F8 CBZ X21, 0x39B5B84
	0x039B55FC LDR W8, [X21 + 0x18]
	0x039B5600 ADRP X23, 0x79D000
	0x039B5604 LDR X23, [X23 + 0xA0]
	0x039B5608 CMP W8, 0x1
	0x039B560C B.LT 0x39B5AD8
	0x039B5610 ADRP X28, 0x79D000
	0x039B5614 ADRP X25, 0x79C000
	0x039B5618 ADRP X27, 0x79D000
	0x039B561C ADRP X20, 0x765000
	0x039B5620 ADRP X26, 0x79D000
	0x039B5624 LDR X28, [X28 + 0x90]
	0x039B5628 LDR X25, [X25 + 0xF50]
	0x039B562C LDR X27, [X27 + 0xC8]
	0x039B5630 LDR X20, [X20 + 0x410]
	0x039B5634 LDR X26, [X26 + 0xD8]
	0x039B5638 MOV W1, W31
	0x039B563C MOV W29, W31
	0x039B5640 STR X21, [X31 + 0x8]
	0x039B5644 ADRP X8, 0x79D000
	0x039B5648 LDR X8, [X8 + 0xE0]
	0x039B564C MOV X0, X21
	0x039B5650 STR W1, [X31 + 0x24]
	0x039B5654 LDR X2, [X8]
	0x039B5658 BL 0x3120484
	0x039B565C LDR X8, [X31 + 0x18]
	0x039B5660 LDR W9, [X31 + 0x20]
	0x039B5664 SUB W8, W8, W29
	0x039B5668 CMP W8, W9
	0x039B566C CSEL W8, W9, W8, GT
	0x039B5670 CMP W8, 0x1
	0x039B5674 B.LT 0x39B5AC4
	0x039B5678 LDR W10, [X31 + 0x14]
	0x039B567C UBFM X9, X0, 0x20, 0x3F
	0x039B5680 ADD W8, W29, W8
	0x039B5684 MADD W9, W1, W10, W9
	0x039B5688 LDR W10, [X31 + 0x10]
	0x039B568C MUL W9, W9, W10
	0x039B5690 STP W9, W8, [X31 + 0x30]
	0x039B5694 STR X0, [X31 + 0x40]
	0x039B5698 ADRP X8, 0x79C000
	0x039B569C LDR X8, [X8 + 0xF48]
	0x039B56A0 LDR X0, [X8]
	0x039B56A4 LDR X8, [X31 + 0x28]
	0x039B56A8 LDR W9, [X0 + 0xE0]
	0x039B56AC ADD X8, X8, W29, 0x4, SXTW
	0x039B56B0 LDP X24, X21, [X8]
	0x039B56B4 CBNZ W9, 0x39B56BC
	0x039B56B8 BL 0x1C16DFC
	0x039B56BC LDR X8, [X31 + 0x38]
	0x039B56C0 CBZ X8, 0x39B5B84
	0x039B56C4 LDR X3, [X8 + 0x10]
	0x039B56C8 MOV X1, X24
	0x039B56CC MOV X2, X21
	0x039B56D0 MOV X22, X8
	0x039B56D4 BL 0x39B48B4
	0x039B56D8 LDR X0, [X22 + 0x18]
	0x039B56DC CBZ X0, 0x39B5B84
	0x039B56E0 ADRP X9, 0x79D000
	0x039B56E4 LDR W10, [X0 + 0x1C]
	0x039B56E8 LDR X8, [X0 + 0x10]
	0x039B56EC LDR X9, [X9 + 0xB8]
	0x039B56F0 ADD W10, W10, 0x1
	0x039B56F4 LDR X9, [X9]
	0x039B56F8 STR W10, [X0 + 0x1C]
	0x039B56FC CBZ X8, 0x39B5B84
	0x039B5700 LDR X10, [X31 + 0x40]
	0x039B5704 LDR W13, [X31 + 0x30]
	0x039B5708 LDRSW X11, [X0 + 0x18]
	0x039B570C LDR W12, [X8 + 0x18]
	0x039B5710 ADD W10, W10, W13
	0x039B5714 UBFM X13, X21, 0x4, 0x3F
	0x039B5718 UBFM W13, W13, 0x1C, 0x1F
	0x039B571C CMP W11, W12
	0x039B5720 BFM W10, W13, 0x4, 0x2
	0x039B5724 B.CS 0x39B5744
	0x039B5728 MOVZ W12, 0x14
	0x039B572C ADD W9, W11, 0x1
	0x039B5730 MADD X8, X11, X12, X8
	0x039B5734 STR W9, [X0 + 0x18]
	0x039B5738 STP X24, X21, [X8 + 0x20]
	0x039B573C STR W10, [X8 + 0x30]
	0x039B5740 B 0x39B5760
	0x039B5744 LDR X8, [X9 + 0x20]
	0x039B5748 ADD X1, X31, 0x88
	0x039B574C LDR X8, [X8 + 0xC0]
	0x039B5750 LDR X2, [X8 + 0x70]
	0x039B5754 STP X24, X21, [X31 + 0x88]
	0x039B5758 STR W10, [X31 + 0x98]
	0x039B575C BL 0x311D784
	0x039B5760 LDR X8, [X31 + 0x38]
	0x039B5764 LDR X0, [X8 + 0x10]
	0x039B5768 CBZ X0, 0x39B5B84
	0x039B576C ADRP X8, 0x79D000
	0x039B5770 LDR X8, [X8 + 0xB0]
	0x039B5774 LDR X1, [X8]
	0x039B5778 ADD X8, X31, 0x88
	0x039B577C BL 0x2DD2668
	0x039B5780 LDUR V0, [X31 + 0x88]
	0x039B5784 LDUR V1, [X31 + 0x98]
	0x039B5788 STP V0, V1, [X31 + 0xB0]
	0x039B578C LDR X1, [X23]
	0x039B5790 ADD X0, X31, 0xB0
	0x039B5794 BL 0x2BD0BE4
	0x039B5798 TBZ X0, 0x0, 0x39B59A0
	0x039B579C LDR X0, [X19 + 0x48]
	0x039B57A0 CBZ X0, 0x39B59D0
	0x039B57A4 LDR X24, [X31 + 0xC0]
	0x039B57A8 LDR W21, [X31 + 0xC8]
	0x039B57AC LDR X4, [X28]
	0x039B57B0 ADD X3, X31, 0xA8
	0x039B57B4 MOV X1, X24
	0x039B57B8 MOV X2, X21
	0x039B57BC BL 0x2B28B3C
	0x039B57C0 TBNZ X0, 0x0, 0x39B5804
	0x039B57C4 LDR X0, [X19 + 0x60]
	0x039B57C8 CBZ X0, 0x39B5A00
	0x039B57CC ADRP X8, 0x79D000
	0x039B57D0 LDR X8, [X8 + 0xF0]
	0x039B57D4 LDR X1, [X8]
	0x039B57D8 BL 0x2493CB0
	0x039B57DC STR X0, [X31 + 0xA8]
	0x039B57E0 MOV X3, X0
	0x039B57E4 LDR X0, [X19 + 0x48]
	0x039B57E8 CBZ X0, 0x39B5A08
	0x039B57EC ADRP X8, 0x79D000
	0x039B57F0 LDR X8, [X8 + 0x88]
	0x039B57F4 LDR X4, [X8]
	0x039B57F8 MOV X1, X24
	0x039B57FC MOV X2, X21
	0x039B5800 BL 0x2B26FC0
	0x039B5804 LDR X8, [X25]
	0x039B5808 LDR X21, [X31 + 0xA8]
	0x039B580C LDR W9, [X8 + 0xE0]
	0x039B5810 CBNZ W9, 0x39B5820
	0x039B5814 MOV X0, X8
	0x039B5818 BL 0x1C16DFC
	0x039B581C LDR X8, [X25]
	0x039B5820 LDR X9, [X8 + 0xB8]
	0x039B5824 LDR X24, [X9 + 0x20]
	0x039B5828 CBNZ X24, 0x39B5880
	0x039B582C LDR W9, [X8 + 0xE0]
	0x039B5830 CBNZ W9, 0x39B5840
	0x039B5834 MOV X0, X8
	0x039B5838 BL 0x1C16DFC
	0x039B583C LDR X8, [X25]
	0x039B5840 LDR X8, [X8 + 0xB8]
	0x039B5844 LDR X22, [X8]
	0x039B5848 ADRP X8, 0x79D000
	0x039B584C LDR X8, [X8 + 0x100]
	0x039B5850 LDR X0, [X8]
	0x039B5854 BL 0x1C16F10
	0x039B5858 ADRP X8, 0x79D000
	0x039B585C LDR X8, [X8 + 0x110]
	0x039B5860 MOV X24, X0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X20, 0xA2D000
	015 Move W8, [X20+3161]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {80}
	021 Move X0, 0x79D000
	022 Move X0, [X0+4056]
	023 Call 0x1C17CF4
	024 Move X0, 0x79D000
	025 Move X0, [X0+4064]
	026 Call 0x1C17CF4
	027 Move X0, 0x79D000
	028 Move X0, [X0+4072]
	029 Call 0x1C17CF4
	030 Move X0, 0x79D000
	031 Move X0, [X0+4080]
	032 Call 0x1C17CF4
	033 Move X0, 0x79D000
	034 Move X0, [X0+4088]
	035 Call 0x1C17CF4
	036 Move X0, 0x79E000
	037 Move X0, [X0]
	038 Call 0x1C17CF4
	039 Move X0, 0x79E000
	040 Move X0, [X0+8]
	041 Call 0x1C17CF4
	042 Move X0, 0x79E000
	043 Move X0, [X0+16]
	044 Call 0x1C17CF4
	045 Move X0, 0x79E000
	046 Move X0, [X0+24]
	047 Call 0x1C17CF4
	048 Move X0, 0x79E000
	049 Move X0, [X0+32]
	050 Call 0x1C17CF4
	051 Move X0, 0x79E000
	052 Move X0, [X0+40]
	053 Call 0x1C17CF4
	054 Move X0, 0x79E000
	055 Move X0, [X0+48]
	056 Call 0x1C17CF4
	057 Move X0, 0x79E000
	058 Move X0, [X0+56]
	059 Call 0x1C17CF4
	060 Move X0, 0x79E000
	061 Move X0, [X0+64]
	062 Call 0x1C17CF4
	063 Move X0, 0x79E000
	064 Move X0, [X0+72]
	065 Call 0x1C17CF4
	066 Move X0, 0x79E000
	067 Move X0, [X0+80]
	068 Call 0x1C17CF4
	069 Move X0, 0x79E000
	070 Move X0, [X0+88]
	071 Call 0x1C17CF4
	072 Move X0, 0x79E000
	073 Move X0, [X0+96]
	074 Call 0x1C17CF4
	075 Move X0, 0x79E000
	076 Move X0, [X0+104]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X20+3161], W8
	080 Move [X31+80], X31
	081 Move [X31+88], X31
	082 Move [X31+96], X31
	083 Move [X31+48], X31
	084 Move [X31+56], X31
	085 Move [X31+64], X31
	086 Move [X31+24], X31
	087 Move [X31+32], X31
	088 Move [X31+40], X31
	089 Move X11, [X19+48]
	090 Compare X11, 0
	091 JumpIfEqual {284}
	092 Move W8, [X11+24]
	093 Move X9, X8
	094 ShiftRight X9, 32
	095 And X9, X9, 0x7FFFFFFF
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X9, X31
	098 Move X10, W8
	099 Add X11, X11, 32
	100 Move TEMP, 0
	101 Not TEMP
	102 Move W12, TEMP
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X11], W12
	105 Add X9, X9, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, [X19+16]
	108 Move W9, 1
	109 Subtract W8, W8, 1
	110 Move [X19+112], W9
	111 Move [X19+116], W31
	112 Move [X19+120], W8
	113 Move [X19+28], W31
	114 Compare X0, 0
	115 JumpIfEqual {284}
	116 Move W1, W31
	117 Move X2, X31
	118 Call BitArray.SetAll, X0, X1
	119 Move X0, [X19+72]
	120 Compare X0, 0
	121 JumpIfEqual {284}
	122 Move X8, 0x79D000
	123 Move X8, [X8+4080]
	124 Move X1, [X8]
	125 Call Dictionary`2<Vector3Int, Object>.get_Values, X0
	126 Compare X0, 0
	127 JumpIfEqual {284}
	128 Move X8, 0x79E000
	129 Move X8, [X8+96]
	130 Move X24, 0x79E000
	131 Move X27, 0x79E000
	132 Move X28, 0x79E000
	133 Move X29, 0x79E000
	134 Move X23, 0x79D000
	135 Move X20, 0x79E000
	136 Move X25, 0x79E000
	137 Move X26, 0x79E000
	138 Move X24, [X24+32]
	139 Move X27, [X27+64]
	140 Move X28, [X28+16]
	141 Move X29, [X29+88]
	142 Move X23, [X23+4088]
	143 Move X20, [X20+72]
	144 Move X25, [X25+24]
	145 Move X26, [X26+80]
	146 Move X1, [X8]
	147 Add X8, X31, 0
	148 Call ValueCollection<Vector3Int, Object>.GetEnumerator, X0
	149 Move V0, [X31]
	150 Move X8, [X31+16]
	151 Move [X31+5], V0
	152 Move [X31+96], X8
	153 Move X1, [X24]
	154 Add X0, X31, 80
	155 Call Enumerator<Vector3Int, Object>.MoveNext, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {201}
	160 Move X21, [X31+96]
	161 Compare X21, 0
	162 JumpIfEqual {282}
	163 Move X1, [X27]
	164 Add X8, X31, 0
	165 Move X0, X21
	166 Call List`1<Object>.GetEnumerator, X0
	167 Move V0, [X31]
	168 Move X8, [X31+16]
	169 Move [X31+3], V0
	170 Move [X31+64], X8
	171 Move X1, [X28]
	172 Add X0, X31, 48
	173 Call Enumerator<Object>.MoveNext, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {184}
	178 Move X0, [X19+104]
	179 Compare X0, 0
	180 JumpIfEqual {196}
	181 Move X1, [X31+64]
	182 Move X2, [X29]
	183 Call 0x2494D8C, X0, X1
	184 Move X22, X31
	185 Move X1, [X23]
	186 Add X0, X31, 48
	187 Call Enumerator<Object>.Dispose, X0
	188 Compare X22, 0
	189 JumpIfNotEqual {280}
	190 Move X0, [X19+96]
	191 Compare X0, 0
	192 JumpIfEqual {279}
	193 Move X2, [X20]
	194 Move X1, X21
	195 Call 0x2494D8C, X0, X1
	196 Call 0x1C17F20
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Call 0x3EB2AD0
	199 Move X22, [X0]
	200 Call 0x3EB2AE0
	201 Move X8, 0x79E000
	202 Move X8, [X8+8]
	203 Add X0, X31, 80
	204 Move X1, [X8]
	205 Call Enumerator<Vector3Int, Object>.Dispose, X0
	206 Move X0, [X19+72]
	207 Compare X0, 0
	208 JumpIfEqual {284}
	209 Move X8, 0x79D000
	210 Move X8, [X8+4064]
	211 Move X1, [X8]
	212 Call Dictionary`2<Vector3Int, Object>.Clear, X0
	213 Move X0, [X19+80]
	214 Compare X0, 0
	215 JumpIfEqual {284}
	216 Move X8, 0x79D000
	217 Move X8, [X8+4072]
	218 Move X1, [X8]
	219 Call Dictionary`2<Object, Object>.get_Values, X0
	220 Compare X0, 0
	221 JumpIfEqual {284}
	222 Move X8, 0x79E000
	223 Move X8, [X8+104]
	224 Move X1, [X8]
	225 Add X8, X31, 24
	226 Call ValueCollection<Object, Object>.GetEnumerator, X0
	227 Move X1, [X25]
	228 Add X0, X31, 24
	229 Call Enumerator<Object, Object>.MoveNext, X0
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfNotEqual {240}
	234 Move X0, [X19+88]
	235 Compare X0, 0
	236 JumpIfEqual {278}
	237 Move X1, [X31+40]
	238 Move X2, [X26]
	239 Call 0x2494D8C, X0, X1
	240 Move X8, 0x79E000
	241 Move X8, [X8]
	242 Add X0, X31, 24
	243 Move X1, [X8]
	244 Call Enumerator<Object, Object>.Dispose, X0
	245 Move X0, [X19+80]
	246 Compare X0, 0
	247 JumpIfEqual {284}
	248 Move X8, 0x79D000
	249 Move X8, [X8+4056]
	250 Move X1, [X8]
	251 Call Dictionary`2<Object, Object>.Clear, X0
	252 Move X20, [X31+192]
	253 Move X19, [X31+200]
	254 Move X22, [X31+176]
	255 Move X21, [X31+184]
	256 Move X24, [X31+160]
	257 Move X23, [X31+168]
	258 Move X26, [X31+144]
	259 Move X25, [X31+152]
	260 Move X28, [X31+128]
	261 Move X27, [X31+136]
	262 Move X29, [X31+112]
	263 Move X30, [X31+120]
	264 Add X31, X31, 208
	265 Return 
	266 Move X20, X0
	267 Move X21, X1
	268 Move X22, X31
	269 Move X1, [X23]
	270 Add X0, X31, 48
	271 Call Enumerator<Object>.Dispose, X0
	272 Move X1, X21
	273 Move X0, X20
	274 Compare X22, 0
	275 JumpIfEqual {287}
	276 Move X0, X22
	277 Call 0x1C17F18
	278 Call 0x1C17F20
	279 Call 0x1C17F20
	280 Move X0, X22
	281 Call 0x1C17F18
	282 Call 0x1C17F20
	283 Call 0x1C17F28
	284 Call 0x1C17F20
	285 Move X21, X1
	286 Move X20, X0
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Call 0x3EB2AD0
	289 Move X21, [X0]
	290 Call 0x3EB2AE0
	291 Move X8, 0x79E000
	292 Move X8, [X8+8]
	293 Add X0, X31, 80
	294 Move X1, [X8]
	295 Call Enumerator<Vector3Int, Object>.Dispose, X0
	296 Compare X21, 0
	297 JumpIfEqual {206}
	298 Move X20, X0
	299 Move X21, X31
	300 Move X20, X0
	301 Move X8, 0x79E000
	302 Move X8, [X8+8]
	303 Move X1, [X8]
	304 Add X0, X31, 80
	305 Call Enumerator<Vector3Int, Object>.Dispose, X0
	306 Compare X21, 0
	307 JumpIfEqual {334}
	308 Move X0, X21
	309 Call 0x1C17F18
	310 Move X20, X0
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X0, X20
	313 Call 0x3EB2AD0
	314 Move X21, [X0]
	315 Call 0x3EB2AE0
	316 Move X8, 0x79E000
	317 Move X8, [X8]
	318 Add X0, X31, 24
	319 Move X1, [X8]
	320 Call Enumerator<Object, Object>.Dispose, X0
	321 Compare X21, 0
	322 JumpIfEqual {245}
	323 Move X0, X21
	324 Call 0x1C17F18
	325 Move X21, X31
	326 Move X20, X0
	327 Move X8, 0x79E000
	328 Move X8, [X8]
	329 Move X1, [X8]
	330 Add X0, X31, 24
	331 Call Enumerator<Object, Object>.Dispose, X0
	332 Compare X21, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X20
	335 Call 0x1D2D690
	336 Move X0, X21
	337 Call 0x1C17F18
	338 Call 0x1991590

Method: System.Void MapBrickToVoxels(UnityEngine.Rendering.ProbeBrickIndex/Brick brick, System.Collections.Generic.HashSet`1<UnityEngine.Vector3Int> voxels)

Disassembly:
	0x039B58B4 CBNZ X0, 0x39B5944
	0x039B58B8 B 0x39B59F8
	0x039B58BC LDR X0, [X19 + 0x68]
	0x039B58C0 CBZ X0, 0x39B5A28
	0x039B58C4 ADRP X8, 0x79D000
	0x039B58C8 LDR X8, [X8 + 0xF8]
	0x039B58CC LDR X1, [X8]
	0x039B58D0 BL 0x2493CB0
	0x039B58D4 MOV X21, X0
	0x039B58D8 CBZ X0, 0x39B5A20
	0x039B58DC LDR X8, [X31 + 0x48]
	0x039B58E0 STR X8, [X21 + 0x10]
	0x039B58E4 LDR X0, [X31 + 0xA8]
	0x039B58E8 CBZ X0, 0x39B5A18
	0x039B58EC ADRP X9, 0x79D000
	0x039B58F0 LDR W10, [X0 + 0x1C]
	0x039B58F4 LDR X8, [X0 + 0x10]
	0x039B58F8 LDR X9, [X9 + 0xC0]
	0x039B58FC ADD W10, W10, 0x1
	0x039B5900 LDR X9, [X9]
	0x039B5904 STR W10, [X0 + 0x1C]
	0x039B5908 CBZ X8, 0x39B5A10
	0x039B590C LDRSW X10, [X0 + 0x18]
	0x039B5910 LDR W11, [X8 + 0x18]
	0x039B5914 CMP W10, W11
	0x039B5918 B.CS 0x39B5930
	0x039B591C ADD W9, W10, 0x1
	0x039B5920 ADD X8, X8, X10, 0x3, LSL
	0x039B5924 STR W9, [X0 + 0x18]
	0x039B5928 STR X21, [X8 + 0x20]
	0x039B592C B 0x39B5944
	0x039B5930 LDR X8, [X9 + 0x20]
	0x039B5934 LDR X8, [X8 + 0xC0]
	0x039B5938 LDR X2, [X8 + 0x70]
	0x039B593C MOV X1, X21
	0x039B5940 BL 0x301BF90
	0x039B5944 LDR X0, [X21 + 0x18]
	0x039B5948 CBZ X0, 0x39B59E0
	0x039B594C LDR W10, [X0 + 0x1C]
	0x039B5950 LDR X8, [X0 + 0x10]
	0x039B5954 LDR X9, [X20]
	0x039B5958 ADD W10, W10, 0x1
	0x039B595C STR W10, [X0 + 0x1C]
	0x039B5960 CBZ X8, 0x39B59E8
	0x039B5964 LDRSW X10, [X0 + 0x18]
	0x039B5968 LDR W11, [X8 + 0x18]
	0x039B596C CMP W10, W11
	0x039B5970 B.CS 0x39B5988
	0x039B5974 ADD W9, W10, 0x1
	0x039B5978 ADD X8, X8, X10, 0x1, LSL
	0x039B597C STR W9, [X0 + 0x18]
	0x039B5980 STRH W29, [X8 + 0x20]
	0x039B5984 B 0x39B578C
	0x039B5988 LDR X8, [X9 + 0x20]
	0x039B598C LDR X8, [X8 + 0xC0]
	0x039B5990 LDR X2, [X8 + 0x70]
	0x039B5994 MOV W1, W29
	0x039B5998 BL 0x30BEC28
	0x039B599C B 0x39B578C
	0x039B59A0 ADRP X8, 0x79D000
	0x039B59A4 LDR X8, [X8 + 0x98]
	0x039B59A8 ADD X0, X31, 0xB0
	0x039B59AC LDR X1, [X8]
	0x039B59B0 BL 0x2BD0BE0
	0x039B59B4 LDR W8, [X31 + 0x34]
	0x039B59B8 LDR X0, [X31 + 0x40]
	0x039B59BC ADD W29, W29, 0x1
	0x039B59C0 CMP W29, W8
	0x039B59C4 ADD W0, W0, 0x4
	0x039B59C8 B.NE 0x39B5694
	0x039B59CC B 0x39B5ABC
	0x039B59D0 BL 0x1C16F20
	0x039B59D4 B 0x39B5B98
	0x039B59D8 BL 0x1C16F20
	0x039B59DC B 0x39B5B98
	0x039B59E0 BL 0x1C16F20
	0x039B59E4 B 0x39B5B98
	0x039B59E8 BL 0x1C16F20
	0x039B59EC B 0x39B5B98
	0x039B59F0 BL 0x1C16F20
	0x039B59F4 B 0x39B5B98
	0x039B59F8 BL 0x1C16F20
	0x039B59FC B 0x39B5B98
	0x039B5A00 BL 0x1C16F20
	0x039B5A04 B 0x39B5B98
	0x039B5A08 BL 0x1C16F20
	0x039B5A0C B 0x39B5B98
	0x039B5A10 BL 0x1C16F20
	0x039B5A14 B 0x39B5B98
	0x039B5A18 BL 0x1C16F20
	0x039B5A1C B 0x39B5B98
	0x039B5A20 BL 0x1C16F20
	0x039B5A24 B 0x39B5B98
	0x039B5A28 BL 0x1C16F20
	0x039B5A2C B 0x39B5B98
	0x039B5A30 B 0x39B5A84
	0x039B5A34 B 0x39B5A84
	0x039B5A38 B 0x39B5A84
	0x039B5A3C B 0x39B5A84
	0x039B5A40 B 0x39B5A84
	0x039B5A44 B 0x39B5A84
	0x039B5A48 B 0x39B5A84
	0x039B5A4C B 0x39B5A84
	0x039B5A50 B 0x39B5A84
	0x039B5A54 B 0x39B5A84
	0x039B5A58 B 0x39B5A84
	0x039B5A5C B 0x39B5A84
	0x039B5A60 B 0x39B5A84
	0x039B5A64 B 0x39B5A84
	0x039B5A68 B 0x39B5A84
	0x039B5A6C B 0x39B5A84
	0x039B5A70 B 0x39B5A84
	0x039B5A74 B 0x39B5A84
	0x039B5A78 B 0x39B5A84
	0x039B5A7C B 0x39B5A84
	0x039B5A80 B 0x39B5A84
	0x039B5A84 MOV X22, X0
	0x039B5A88 CMP W1, 0x1
	0x039B5A8C B.NE 0x39B5B88
	0x039B5A90 MOV X0, X22
	0x039B5A94 BL 0x3EB1AD0
	0x039B5A98 LDR X21, [X0]
	0x039B5A9C BL 0x3EB1AE0
	0x039B5AA0 ADRP X8, 0x79D000
	0x039B5AA4 LDR X8, [X8 + 0x98]
	0x039B5AA8 ADD X0, X31, 0xB0
	0x039B5AAC LDR X1, [X8]
	0x039B5AB0 BL 0x2BD0BE0
	0x039B5AB4 CBZ X21, 0x39B59B4
	0x039B5AB8 B 0x39B5B90
	0x039B5ABC LDR W29, [X31 + 0x34]
	0x039B5AC0 LDR X21, [X31 + 0x8]
	0x039B5AC4 LDR W1, [X31 + 0x24]
	0x039B5AC8 LDR W8, [X21 + 0x18]
	0x039B5ACC ADD W1, W1, 0x1
	0x039B5AD0 CMP W1, W8
	0x039B5AD4 B.LT 0x39B5644
	0x039B5AD8 LDR X8, [X31 + 0x38]
	0x039B5ADC CBZ X8, 0x39B5B84
	0x039B5AE0 LDR X0, [X8 + 0x10]
	0x039B5AE4 CBZ X0, 0x39B5B84
	0x039B5AE8 ADRP X8, 0x79D000
	0x039B5AEC LDR X8, [X8 + 0xB0]
	0x039B5AF0 LDR X21, [X31 + 0x130]
	0x039B5AF4 LDR X1, [X8]
	0x039B5AF8 ADD X8, X31, 0x88
	0x039B5AFC BL 0x2DD2668
	0x039B5B00 LDUR V0, [X31 + 0x88]
	0x039B5B04 LDUR V1, [X31 + 0x98]
	0x039B5B08 STP V0, V1, [X31 + 0xB0]
	0x039B5B0C LDR X1, [X23]
	0x039B5B10 ADD X0, X31, 0xB0
	0x039B5B14 BL 0x2BD0BE4
	0x039B5B18 TBZ X0, 0x0, 0x39B5B50
	0x039B5B1C LDR W8, [X31 + 0xC8]
	0x039B5B20 LDR X1, [X31 + 0xC0]
	0x039B5B24 LDP V1, V0, [X21]
	0x039B5B28 LDR V2, [X21 + 0x2]
	0x039B5B2C AND X9, X20, 0x0
	0x039B5B30 ORR X20, X9, X8, 0x0
	0x039B5B34 STP V1, V0, [X31 + 0x50]
	0x039B5B38 STR V2, [X31 + 0x7]
	0x039B5B3C ADD X3, X31, 0x50
	0x039B5B40 MOV X0, X19
	0x039B5B44 MOV X2, X20
	0x039B5B48 BL 0x39B5C48
	0x039B5B4C B 0x39B5B0C
	0x039B5B50 ADRP X8, 0x79D000
	0x039B5B54 LDR X8, [X8 + 0x98]
	0x039B5B58 ADD X0, X31, 0xB0
	0x039B5B5C LDR X1, [X8]
	0x039B5B60 BL 0x2BD0BE0
	0x039B5B64 LDP X20, X19, [X31 + 0x120]
	0x039B5B68 LDP X22, X21, [X31 + 0x110]
	0x039B5B6C LDP X24, X23, [X31 + 0x100]
	0x039B5B70 LDP X26, X25, [X31 + 0xF0]
	0x039B5B74 LDP X28, X27, [X31 + 0xE0]
	0x039B5B78 LDP X29, X30, [X31 + 0xD0]
	0x039B5B7C ADD X31, X31, 0x130
	0x039B5B80 RET
	0x039B5B84 BL 0x1C16F20
	0x039B5B88 MOV X21, X31
	0x039B5B8C B 0x39B5B9C
	0x039B5B90 MOV X0, X21
	0x039B5B94 BL 0x1C16F18
	0x039B5B98 MOV X22, X0
	0x039B5B9C ADRP X8, 0x79D000
	0x039B5BA0 LDR X8, [X8 + 0x98]
	0x039B5BA4 LDR X1, [X8]
	0x039B5BA8 ADD X0, X31, 0xB0
	0x039B5BAC BL 0x2BD0BE0
	0x039B5BB0 CBNZ X21, 0x39B5BBC
	0x039B5BB4 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D10
	003 Move [X31+32], D9
	004 Move [X31+40], D8
	005 Move [X31+48], X29
	006 Move [X31+56], X30
	007 Move [X31+64], X28
	008 Move [X31+72], X27
	009 Move [X31+80], X26
	010 Move [X31+88], X25
	011 Move [X31+96], X24
	012 Move [X31+104], X23
	013 Move [X31+112], X22
	014 Move [X31+120], X21
	015 Move [X31+128], X20
	016 Move [X31+136], X19
	017 Move X23, 0xA2D000
	018 Move X22, 0x79D000
	019 Move W8, [X23+3162]
	020 Move X22, [X22+3912]
	021 Move X19, X3
	022 Move X20, X2
	023 Move X21, X1
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x79E000
	029 Move X0, [X0+112]
	030 Call 0x1C17CF4
	031 Move X0, 0x79D000
	032 Move X0, [X0+3912]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+3162], W8
	036 Move X23, X20
	037 ShiftRight X23, 32
	038 And X23, X23, 0x7FFFFFFF
	039 Call ProbeBrickIndex.GetVoxelSubdivLevel, X0
	040 Subtract W8, W23, W0
	041 NotImplemented "Instruction BIC not yet implemented."
	042 NotImplemented "Instruction SCVTF not yet implemented."
	043 Move S0, 3
	044 Call 0x3EB2B50
	045 Move X0, [X22]
	046 Move V8, V0
	047 Move X9, X21
	048 ShiftRight X9, 32
	049 And X9, X9, 0x7FFFFFFF
	050 Move [X31+24], X9
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 NotImplemented "Instruction SCVTF not yet implemented."
	056 Move S0, 3
	057 Call 0x3EB2B50
	058 Move W8, 0x7F800000
	059 Move S9, W8
	060 NotImplemented "Instruction FCVTZS not yet implemented."
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Move W23, 0x80000000
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Call ProbeBrickIndex.GetVoxelSubdivLevel, X0
	065 NotImplemented "Instruction SCVTF not yet implemented."
	066 Move S0, 3
	067 Call 0x3EB2B50
	068 NotImplemented "Instruction FCVTZS not yet implemented."
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 NotImplemented "Instruction FCVTZS not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X25, 0xA24000
	075 Move W8, [X25+2595]
	076 NotImplemented "Instruction SCVTF not yet implemented."
	077 Move S1, 1
	078 NotImplemented "Instruction SCVTF not yet implemented."
	079 NotImplemented "Instruction FDIV not yet implemented."
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x73F000
	083 Move X0, [X0+1448]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X25+2595], W8
	087 Move X21, 0x73F000
	088 Move X21, [X21+1448]
	089 Move X9, [X31+24]
	090 Multiply S10, S8, S10
	091 Move X0, [X21]
	092 NotImplemented "Instruction SCVTF not yet implemented."
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfEqual {103}
	096 Move W8, 0x7F800000
	097 NotImplemented "Instruction FRINTM not yet implemented."
	098 Move S1, W8
	099 NotImplemented "Instruction FCVTMS not yet implemented."
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Move W8, 0x80000000
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Call 0x1C17DFC
	104 Move W8, [X25+2595]
	105 Move W9, 0x7F800000
	106 NotImplemented "Instruction FRINTM not yet implemented."
	107 Move S1, W9
	108 NotImplemented "Instruction FCVTMS not yet implemented."
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move W9, 0x80000000
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Compare W8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, 0x73F000
	115 Move X0, [X0+1448]
	116 Call 0x1C17CF4
	117 Move W8, 1
	118 Move [X25+2595], W8
	119 Move X0, [X21]
	120 NotImplemented "Instruction SCVTF not yet implemented."
	121 Multiply S9, S8, S9
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfEqual {132}
	125 Move W8, 0x7F800000
	126 NotImplemented "Instruction FRINTM not yet implemented."
	127 Move S1, W8
	128 NotImplemented "Instruction FCVTMS not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Move W8, 0x80000000
	131 NotImplemented "Instruction CSEL not yet implemented."
	132 Call 0x1C17DFC
	133 Move W8, [X25+2595]
	134 Move W9, 0x7F800000
	135 NotImplemented "Instruction FRINTM not yet implemented."
	136 Move S1, W9
	137 NotImplemented "Instruction FCVTMS not yet implemented."
	138 NotImplemented "Instruction FCMP not yet implemented."
	139 Move W9, 0x80000000
	140 NotImplemented "Instruction CSEL not yet implemented."
	141 Compare W8, 0
	142 JumpIfNotEqual {148}
	143 Move X0, 0x73F000
	144 Move X0, [X0+1448]
	145 Call 0x1C17CF4
	146 Move W8, 1
	147 Move [X25+2595], W8
	148 Move X0, [X21]
	149 Multiply S8, S8, S10
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move W9, 0x7F800000
	155 NotImplemented "Instruction FRINTM not yet implemented."
	156 Move S1, W9
	157 NotImplemented "Instruction FCVTMS not yet implemented."
	158 Move W10, 0x80000000
	159 NotImplemented "Instruction FCMP not yet implemented."
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 Multiply W21, W24, W23
	162 Multiply W9, W20, W23
	163 Multiply W20, W8, W23
	164 Move [X31+24], X9
	165 Add W8, W20, W22
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move [X31+12], W8
	168 Move X8, [X31+24]
	169 Move X28, 0x79E000
	170 Move X28, [X28+112]
	171 Add W27, W21, W22
	172 Add W26, W8, W22
	173 Move X8, [X31+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X29, [X31+24]
	176 Move W22, W20
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Compare X19, 0
	179 JumpIfEqual {214}
	180 Move X24, X29
	181 ShiftRight X24, 32
	182 And X24, X24, 0x7FFFFFFF
	183 Move W25, W21
	184 Move X3, [X28]
	185 Move W8, W25
	186 Or X1, X24, X8
	187 Move X0, X19
	188 Move X2, X22
	189 Call HashSet`1<Vector3Int>.Add, X0, X1
	190 Add W25, W25, W23
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add W29, W29, W23
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move W8, [X31+12]
	195 Add W20, W20, W23
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X20, [X31+128]
	198 Move X19, [X31+136]
	199 Move X22, [X31+112]
	200 Move X21, [X31+120]
	201 Move X24, [X31+96]
	202 Move X23, [X31+104]
	203 Move X26, [X31+80]
	204 Move X25, [X31+88]
	205 Move X28, [X31+64]
	206 Move X27, [X31+72]
	207 Move X29, [X31+48]
	208 Move X30, [X31+56]
	209 Move D9, [X31+32]
	210 Move D8, [X31+40]
	211 Move V10, [X31+16]
	212 Add X31, X31, 144
	213 Return 
	214 Call 0x1C17F20

Method: System.Void ClearVoxel(UnityEngine.Vector3Int pos, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellInfo)

Disassembly:
	0x039B5BE8 LDR X8, [X8 + 0x98]
	0x039B5BEC ADD X0, X31, 0xB0
	0x039B5BF0 LDR X1, [X8]
	0x039B5BF4 BL 0x2BD0BE0
	0x039B5BF8 CBZ X19, 0x39B5B64
	0x039B5BFC MOV X0, X19
	0x039B5C00 BL 0x1C16F18
	0x039B5C04 MOV X19, X31
	0x039B5C08 B 0x39B5C10
	0x039B5C0C MOV X22, X0
	0x039B5C10 ADRP X8, 0x79D000
	0x039B5C14 LDR X8, [X8 + 0x98]
	0x039B5C18 LDR X1, [X8]
	0x039B5C1C ADD X0, X31, 0xB0
	0x039B5C20 BL 0x2BD0BE0
	0x039B5C24 CBZ X19, 0x39B5BB4
	0x039B5C28 MOV X0, X19
	0x039B5C2C BL 0x1C16F18
	0x039B5C30 BL 0x1990590
	0x039B5C34 LDP W9, W8, [X0 + 0x4]
	0x039B5C38 LDR W10, [X0]
	0x039B5C3C MADD W8, W8, W2, W9
	0x039B5C40 MADD W0, W8, W1, W10
	0x039B5C44 RET
	0x039B5C48 SUB X31, X31, 0xF0
	0x039B5C4C STR X30, [X31 + 0xA0]
	0x039B5C50 STP X26, X25, [X31 + 0xB0]
	0x039B5C54 STP X24, X23, [X31 + 0xC0]
	0x039B5C58 STP X22, X21, [X31 + 0xD0]
	0x039B5C5C STP X20, X19, [X31 + 0xE0]
	0x039B5C60 ADRP X23, 0xA2C000
	0x039B5C64 LDRB W8, [X23 + 0xC5F]
	0x039B5C68 MOV X19, X3
	0x039B5C6C MOV X22, X2
	0x039B5C70 MOV X20, X1
	0x039B5C74 MOV X21, X0
	0x039B5C78 TBNZ X8, 0x0, 0x39B5CCC
	0x039B5C7C ADRP X0, 0x79D000
	0x039B5C80 LDR X0, [X0 + 0x118]
	0x039B5C84 BL 0x1C16CF4
	0x039B5C88 ADRP X0, 0x79D000
	0x039B5C8C LDR X0, [X0 + 0x120]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X19, X3
	008 Move X20, X2
	009 Move X21, X1
	010 Move X22, X0
	011 Move [X31+120], W31
	012 Move [X31+112], X31
	013 Move [X31+104], W31
	014 Move [X31+96], X31
	015 Call ProbeBrickIndex.GetVoxelSubdivLevel, X0
	016 Move V0, [X19]
	017 Move V1, [X19+16]
	018 Move V2, [X19+2]
	019 Move W3, W0
	020 And X2, X20, 0
	021 Add X4, X31, 112
	022 Add X5, X31, 96
	023 Add X6, X31, 48
	024 Move X0, X22
	025 Move X1, X21
	026 Move [X31+48], V0
	027 Move [X31+56], V1
	028 Move [X31+5], V2
	029 Call ProbeBrickIndex.ClipToIndexSpace, X0, X1, X2, X3, X4, X5
	030 Move X1, [X31+112]
	031 Move W2, [X31+120]
	032 Move V1, [X19]
	033 Move V0, [X19+16]
	034 Move X3, [X31+96]
	035 Move V2, [X19+2]
	036 Move W4, [X31+104]
	037 Add X6, X31, 0
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W5, TEMP
	041 Move X0, X22
	042 Move [X31], V1
	043 Move [X31+8], V0
	044 Move [X31+2], V2
	045 Call ProbeBrickIndex.UpdatePhysicalIndex, X0, X1, X2, X3, X4
	046 Move X20, [X31+160]
	047 Move X19, [X31+168]
	048 Move X22, [X31+144]
	049 Move X21, [X31+152]
	050 Move X30, [X31+128]
	051 Add X31, X31, 176
	052 Return 

Method: System.Void GetRuntimeResources(ref UnityEngine.Rendering.ProbeReferenceVolume/RuntimeResources rr)

Disassembly:
	0x039B61A4 LDP V0, V1, [X31 + 0xE0]
	0x039B61A8 LDR X8, [X31 + 0x100]
	0x039B61AC STP W21, W9, [X31 + 0x70]
	0x039B61B0 AND X9, X10, 0x0
	0x039B61B4 LDR X10, [X31 + 0x20]
	0x039B61B8 ORR X2, X9, X26, 0x0
	0x039B61BC STR X8, [X10 + 0x20]
	0x039B61C0 STP V0, V1, [X10]
	0x039B61C4 ADD X3, X31, 0x70
	0x039B61C8 MOV X0, X19
	0x039B61CC MOV X1, X25
	0x039B61D0 STR X2, [X31 + 0x18]
	0x039B61D4 BL 0x39B5C48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+112]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {11}
	009 Move X0, X19
	010 Call ProbeBrickIndex.UploadIndexData, X0
	011 Move X8, [X19+40]
	012 Move [X20], X8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Void Cleanup()

Disassembly:
	0x039B61D8 B 0x39B6078
	0x039B61DC LDR W9, [X31 + 0x3C]
	0x039B61E0 LDP V0, V1, [X31 + 0xE0]
	0x039B61E4 LDR X8, [X31 + 0x100]
	0x039B61E8 STP W21, W9, [X31 + 0x40]
	0x039B61EC LDP X9, X10, [X31 + 0x8]
	0x039B61F0 AND X9, X9, 0x0
	0x039B61F4 STR X8, [X10 + 0x20]
	0x039B61F8 STP V0, V1, [X10]
	0x039B61FC ORR X2, X9, X26, 0x0
	0x039B6200 ADD X3, X31, 0x40
	0x039B6204 MOV X0, X19
	0x039B6208 MOV X1, X25
	0x039B620C STR X2, [X31 + 0x8]
	0x039B6210 BL 0x39B4BE8
	0x039B6214 LDR X0, [X19 + 0x60]
	0x039B6218 CBZ X0, 0x39B6318
	0x039B621C ADRP X8, 0x79C000
	0x039B6220 LDR X8, [X8 + 0x48]
	0x039B6224 LDR X2, [X8]
	0x039B6228 MOV X1, X27
	0x039B622C BL 0x2493D8C
	0x039B6230 LDR X0, [X19 + 0x48]
	0x039B6234 CBZ X0, 0x39B631C
	0x039B6238 ADRP X8, 0x79C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA2C000
	006 Move X20, 0x766000
	007 Move W8, [X21+3163]
	008 Move X20, [X20+2296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x766000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3163], W8
	019 Move X0, [X20]
	020 Move X20, [X19+40]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call CoreUtils.SafeRelease, X0
	028 Move [X19+40], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Int32 MergeIndex(System.Int32 index, System.Int32 size)

Disassembly:
	0x039B623C LDR X8, [X8 + 0x138]
	0x039B6240 LDR X3, [X8]
	0x039B6244 MOV X1, X25

ISIL:
	001 Move W0, W1
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Return X0

Method: System.Boolean AssignIndexChunksToCell(System.Int32 bricksCount, ref UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellUpdateInfo, System.Boolean ignoreErrorLog)

Disassembly:
	0x039B6248 MOV X2, X26
	0x039B624C BL 0x2B2849C
	0x039B6250 B 0x39B6078
	0x039B6254 ADRP X8, 0x79C000
	0x039B6258 LDR X8, [X8 + 0x98]
	0x039B625C ADD X0, X31, 0xC0
	0x039B6260 LDR X1, [X8]
	0x039B6264 BL 0x2BD0BE0
	0x039B6268 LDR X0, [X19 + 0x58]
	0x039B626C LDR X20, [X31 + 0x30]
	0x039B6270 CBZ X0, 0x39B6310
	0x039B6274 ADRP X8, 0x79C000
	0x039B6278 LDR X8, [X8 + 0x50]
	0x039B627C LDR X1, [X31 + 0x28]
	0x039B6280 LDR X2, [X8]
	0x039B6284 BL 0x2493D8C
	0x039B6288 LDR X0, [X19 + 0x50]
	0x039B628C LDR W22, [X31 + 0x3C]
	0x039B6290 CBZ X0, 0x39B6310
	0x039B6294 ADRP X8, 0x79C000
	0x039B6298 LDR X1, [X20 + 0x10]
	0x039B629C LDR X8, [X8 + 0x130]
	0x039B62A0 LDR X2, [X8]
	0x039B62A4 BL 0x2AA64F8
	0x039B62A8 ADD W8, W22, W21
	0x039B62AC CMP W21, W8
	0x039B62B0 B.GE 0x39B62DC
	0x039B62B4 MOV W20, W22
	0x039B62B8 LDR X0, [X19 + 0x10]
	0x039B62BC CBZ X0, 0x39B6310
	0x039B62C0 MOV W1, W21
	0x039B62C4 MOV W2, W31
	0x039B62C8 MOV X3, X31
	0x039B62CC BL 0x33576AC
	0x039B62D0 SUBS W20, W20, 0x1
	0x039B62D4 ADD W21, W21, 0x1
	0x039B62D8 B.NE 0x39B62B8
	0x039B62DC LDR W8, [X19 + 0x20]
	0x039B62E0 ADD W8, W8, W22
	0x039B62E4 STR W8, [X19 + 0x20]
	0x039B62E8 LDP X20, X19, [X31 + 0x160]
	0x039B62EC LDP X22, X21, [X31 + 0x150]
	0x039B62F0 LDP X24, X23, [X31 + 0x140]
	0x039B62F4 LDP X26, X25, [X31 + 0x130]
	0x039B62F8 LDP X28, X27, [X31 + 0x120]
	0x039B62FC LDP X29, X30, [X31 + 0x110]
	0x039B6300 ADD X31, X31, 0x170
	0x039B6304 RET
	0x039B6308 BL 0x1C16F20
	0x039B630C BL 0x1C16F20
	0x039B6310 BL 0x1C16F20
	0x039B6314 BL 0x1C16F20
	0x039B6318 BL 0x1C16F20
	0x039B631C BL 0x1C16F20
	0x039B6320 B 0x39B6360
	0x039B6324 B 0x39B6360
	0x039B6328 B 0x39B6360
	0x039B632C B 0x39B6360
	0x039B6330 B 0x39B6360
	0x039B6334 B 0x39B6360
	0x039B6338 B 0x39B6360
	0x039B633C B 0x39B6360
	0x039B6340 B 0x39B6360
	0x039B6344 B 0x39B6360
	0x039B6348 B 0x39B6360
	0x039B634C B 0x39B6360
	0x039B6350 B 0x39B6360
	0x039B6354 B 0x39B6360
	0x039B6358 B 0x39B6360
	0x039B635C B 0x39B6360
	0x039B6360 MOV X25, X0
	0x039B6364 CMP W1, 0x1
	0x039B6368 B.NE 0x39B639C
	0x039B636C MOV X0, X25
	0x039B6370 BL 0x3EB1AD0
	0x039B6374 LDR X24, [X0]
	0x039B6378 BL 0x3EB1AE0
	0x039B637C ADRP X8, 0x79C000
	0x039B6380 LDR X8, [X8 + 0x98]
	0x039B6384 ADD X0, X31, 0xC0
	0x039B6388 LDR X1, [X8]
	0x039B638C BL 0x2BD0BE0
	0x039B6390 CBZ X24, 0x39B6268
	0x039B6394 MOV X0, X24
	0x039B6398 BL 0x1C16F18
	0x039B639C MOV X24, X31
	0x039B63A0 B 0x39B63A8
	0x039B63A4 MOV X25, X0
	0x039B63A8 ADRP X8, 0x79C000
	0x039B63AC LDR X8, [X8 + 0x98]
	0x039B63B0 LDR X1, [X8]
	0x039B63B4 ADD X0, X31, 0xC0
	0x039B63B8 BL 0x2BD0BE0
	0x039B63BC CBNZ X24, 0x39B63C8
	0x039B63C0 MOV X0, X25
	0x039B63C4 BL 0x1D2C690
	0x039B63C8 MOV X0, X24
	0x039B63CC BL 0x1C16F18
	0x039B63D0 BL 0x1990590
	0x039B63D4 SUB X31, X31, 0x160
	0x039B63D8 STP X29, X30, [X31 + 0x100]
	0x039B63DC STP X28, X27, [X31 + 0x110]
	0x039B63E0 STP X26, X25, [X31 + 0x120]
	0x039B63E4 STP X24, X23, [X31 + 0x130]
	0x039B63E8 STP X22, X21, [X31 + 0x140]
	0x039B63EC STP X20, X19, [X31 + 0x150]
	0x039B63F0 ADRP X24, 0xA2B000
	0x039B63F4 LDRB W8, [X24 + 0xC62]
	0x039B63F8 MOV X19, X5
	0x039B63FC MOV X21, X3
	0x039B6400 MOV X23, X2
	0x039B6404 MOV X22, X1
	0x039B6408 MOV X20, X0
	0x039B640C TBNZ X8, 0x0, 0x39B6454
	0x039B6410 ADRP X0, 0x79C000
	0x039B6414 LDR X0, [X0 + 0x158]
	0x039B6418 BL 0x1C16CF4
	0x039B641C ADRP X0, 0x79C000
	0x039B6420 LDR X0, [X0 + 0x160]
	0x039B6424 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xA2C000
	012 Move W8, [X23+3164]
	013 Move W21, W3
	014 Move X20, X2
	015 Move W22, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x73E000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x79D000
	025 Move X0, [X0+120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3164], W8
	029 Move X23, 0xA23000
	030 Move W8, [X23+2750]
	031 Move W9, 0x43730000
	032 NotImplemented "Instruction SCVTF not yet implemented."
	033 Move S9, W9
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x73E000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+2750], W8
	041 Move X8, 0x73E000
	042 Move X8, [X8+1448]
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W10, [X19+24]
	050 Move W9, 0x7F800000
	051 NotImplemented "Instruction FRINTP not yet implemented."
	052 Move S1, W9
	053 NotImplemented "Instruction FCVTPS not yet implemented."
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move W9, 0x80000000
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W22, W31
	059 Move X0, [X19+16]
	060 Compare X0, 0
	061 JumpIfEqual {141}
	062 Move W1, W22
	063 Move X2, X31
	064 Call BitArray.get_Item, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {88}
	069 Move W8, [X19+24]
	070 Add W24, W22, W23
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W25, W31
	074 Move X0, [X19+16]
	075 Compare X0, 0
	076 JumpIfEqual {141}
	077 Add W1, W22, W25
	078 Move X2, X31
	079 Call BitArray.get_Item, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {87}
	084 Add W25, W25, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W25, W31
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W8, [X19+24]
	089 Add W22, W22, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move TEMP, X21
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {107}
	095 Move X8, 0x73E000
	096 Move X8, [X8+2600]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X8, 0x79D000
	103 Move X8, [X8+120]
	104 Move X1, X31
	105 Move X0, [X8]
	106 Call Debug.LogError, X0
	107 Move W0, W31
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X20], W22
	110 Move [X20+4], W23
	111 Move W20, W31
	112 Move X0, [X19+16]
	113 Compare X0, 0
	114 JumpIfEqual {141}
	115 Add W1, W22, W20
	116 Move W2, 1
	117 Move X3, X31
	118 Call BitArray.set_Item, X0, X1, X2
	119 Add W20, W20, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W8, [X19+28]
	122 Move W9, [X19+32]
	123 Move W0, 1
	124 Subtract W10, W24, W8
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract W9, W9, W23
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 Move [X19+28], W8
	129 Move [X19+32], W9
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X24, [X31+32]
	135 Move X23, [X31+40]
	136 Move X30, [X31+16]
	137 Move X25, [X31+24]
	138 Move D9, [X31+80]
	139 Move D8, [X31+88]
	140 Return X0
	141 Call 0x1C17F20

Method: System.Void AddBricks(UnityEngine.Rendering.ProbeReferenceVolume/Cell cell, Unity.Collections.NativeArray`1<UnityEngine.Rendering.ProbeBrickIndex/Brick> bricks, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> allocations, System.Int32 allocationSize, System.Int32 poolWidth, System.Int32 poolHeight, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellInfo)

Disassembly:
	0x039B6428 ADRP X0, 0x79C000
	0x039B642C LDR X0, [X0 + 0x168]
	0x039B6430 BL 0x1C16CF4
	0x039B6434 ADRP X0, 0x79C000
	0x039B6438 LDR X0, [X0 + 0x170]
	0x039B643C BL 0x1C16CF4
	0x039B6440 ADRP X0, 0x79B000
	0x039B6444 LDR X0, [X0 + 0xF48]
	0x039B6448 BL 0x1C16CF4
	0x039B644C MOVZ W8, 0x1
	0x039B6450 STRB W8, [X24 + 0xC62]
	0x039B6454 MOVI V0.2D, 0x0
	0x039B6458 STR W31, [X31 + 0xF8]
	0x039B645C STR X31, [X31 + 0xF0]
	0x039B6460 STR W31, [X31 + 0xE8]
	0x039B6464 STR X31, [X31 + 0xE0]
	0x039B6468 STR X31, [X31 + 0xD0]
	0x039B646C STP V0, V0, [X31 + 0xB0]
	0x039B6470 BL 0x39B3DB8
	0x039B6474 LDP V0, V1, [X19]
	0x039B6478 LDR V2, [X19 + 0x2]
	0x039B647C MOV W3, W0
	0x039B6480 AND X2, X23, 0x0
	0x039B6484 ADD X4, X31, 0xF0
	0x039B6488 ADD X5, X31, 0xE0
	0x039B648C ADD X6, X31, 0x80
	0x039B6490 MOV X0, X20
	0x039B6494 MOV X1, X22
	0x039B6498 STP V0, V1, [X31 + 0x80]
	0x039B649C STR V2, [X31 + 0xA]
	0x039B64A0 BL 0x39B4C90
	0x039B64A4 CBZ X21, 0x39B6670
	0x039B64A8 ADRP X8, 0x79C000
	0x039B64AC LDR X8, [X8 + 0x170]
	0x039B64B0 MOV X0, X21
	0x039B64B4 LDR X1, [X8]
	0x039B64B8 ADD X8, X31, 0x58
	0x039B64BC BL 0x311E60C
	0x039B64C0 LDR W10, [X31 + 0xF0]
	0x039B64C4 LDR W9, [X31 + 0xF4]
	0x039B64C8 LDUR V0, [X31 + 0x58]
	0x039B64CC LDUR V1, [X31 + 0x68]
	0x039B64D0 LDR X8, [X31 + 0x78]
	0x039B64D4 STP W9, W10, [X31 + 0x18]
	0x039B64D8 LDR W9, [X31 + 0xF8]
	0x039B64DC LDP W27, W26, [X31 + 0xE0]
	0x039B64E0 LDR W21, [X31 + 0xE8]
	0x039B64E4 STP V0, V1, [X31 + 0xB0]
	0x039B64E8 STR W9, [X31 + 0x14]
	0x039B64EC STR X8, [X31 + 0xD0]
	0x039B64F0 ADRP X8, 0x79C000
	0x039B64F4 LDR X8, [X8 + 0x160]
	0x039B64F8 LDR X1, [X8]
	0x039B64FC ADD X0, X31, 0xB0
	0x039B6500 BL 0x2BE04D8
	0x039B6504 TBZ X0, 0x0, 0x39B663C
	0x039B6508 ADRP X8, 0x79B000
	0x039B650C LDR X8, [X8 + 0xF48]
	0x039B6510 LDR X28, [X31 + 0xC0]
	0x039B6514 LDP W29, W25, [X31 + 0xC8]
	0x039B6518 LDR W24, [X31 + 0xD0]
	0x039B651C LDR X0, [X8]
	0x039B6520 LDR W8, [X0 + 0xE0]
	0x039B6524 CBNZ W8, 0x39B652C
	0x039B6528 BL 0x1C16DFC
	0x039B652C SCVTF S1, W25
	0x039B6530 FMOV S0, 3
	0x039B6534 BL 0x3EB1B50
	0x039B6538 ADRP X8, 0xA2B000
	0x039B653C LDRB W8, [X8 + 0xCBA]
	0x039B6540 MOVZ W10, 0x7F800000
	0x039B6544 FMOV S1, W10
	0x039B6548 FCVTZS W9, S0
	0x039B654C FCMP S0, S1
	0x039B6550 MOVZ W10, 0x80000000
	0x039B6554 CSEL W25, W10, W9, EQ
	0x039B6558 CBNZ W8, 0x39B6574
	0x039B655C ADRP X0, 0x765000
	0x039B6560 LDR X0, [X0 + 0x638]
	0x039B6564 BL 0x1C16CF4
	0x039B6568 ADRP X8, 0xA2B000
	0x039B656C MOVZ W9, 0x1
	0x039B6570 STRB W9, [X8 + 0xCBA]
	0x039B6574 ADRP X9, 0x765000
	0x039B6578 LDR X9, [X9 + 0x638]
	0x039B657C LDR W10, [X20 + 0x3C]
	0x039B6580 LDR W14, [X31 + 0x1C]
	0x039B6584 UBFM X8, X28, 0x20, 0x3F
	0x039B6588 LDR X9, [X9]
	0x039B658C SUB W13, W28, W10
	0x039B6590 CMP W14, W13
	0x039B6594 CSEL W1, W14, W13, GT
	0x039B6598 LDR W13, [X31 + 0x18]
	0x039B659C LDR W11, [X20 + 0x44]
	0x039B65A0 LDR X9, [X9 + 0xB8]
	0x039B65A4 AND X12, X23, 0x0
	0x039B65A8 CMP W13, W8
	0x039B65AC CSEL W8, W13, W8, GT
	0x039B65B0 LDR W13, [X31 + 0x14]
	0x039B65B4 BFM X1, X8, 0x20, 0x1F
	0x039B65B8 SUB W8, W29, W11
	0x039B65BC LDP V1, V0, [X19 + 0x10]
	0x039B65C0 CMP W13, W8
	0x039B65C4 CSEL W8, W13, W8, GT
	0x039B65C8 ORR X23, X12, X8, 0x0
	0x039B65CC LDP W12, W8, [X9 + 0x10]
	0x039B65D0 LDR W9, [X9 + 0xC]
	0x039B65D4 LDR V2, [X19]
	0x039B65D8 STR V0, [X31 + 0x4]
	0x039B65DC MUL W12, W25, W12
	0x039B65E0 MADD W9, W25, W9, W28
	0x039B65E4 ADD X12, X28, X12, 0x20, LSL
	0x039B65E8 SUB W9, W9, W10
	0x039B65EC MADD W8, W8, W25, W29
	0x039B65F0 UBFM X10, X12, 0x20, 0x3F
	0x039B65F4 CMP W27, W9
	0x039B65F8 SUB W8, W8, W11
	0x039B65FC CSEL W3, W27, W9, LT
	0x039B6600 CMP W26, W10
	0x039B6604 CSEL W9, W26, W10, LT
	0x039B6608 CMP W21, W8
	0x039B660C CSEL W8, W21, W8, LT
	0x039B6610 BFM X3, X9, 0x20, 0x1F
	0x039B6614 AND X9, X22, 0x0
	0x039B6618 ORR X22, X9, X8, 0x0
	0x039B661C STP V2, V1, [X31 + 0x20]
	0x039B6620 ADD X6, X31, 0x20
	0x039B6624 MOV X0, X20
	0x039B6628 MOV X2, X23
	0x039B662C MOV X4, X22
	0x039B6630 MOV W5, W24
	0x039B6634 BL 0x39B4E3C
	0x039B6638 B 0x39B64F0
	0x039B663C ADRP X8, 0x79C000
	0x039B6640 LDR X8, [X8 + 0x158]
	0x039B6644 ADD X0, X31, 0xB0
	0x039B6648 LDR X1, [X8]
	0x039B664C BL 0x2BE04D4
	0x039B6650 LDP X20, X19, [X31 + 0x150]
	0x039B6654 LDP X22, X21, [X31 + 0x140]
	0x039B6658 LDP X24, X23, [X31 + 0x130]
	0x039B665C LDP X26, X25, [X31 + 0x120]
	0x039B6660 LDP X28, X27, [X31 + 0x110]
	0x039B6664 LDP X29, X30, [X31 + 0x100]
	0x039B6668 ADD X31, X31, 0x160
	0x039B666C RET
	0x039B6670 BL 0x1C16F20
	0x039B6674 B 0x39B6680
	0x039B6678 B 0x39B6680
	0x039B667C B 0x39B6680
	0x039B6680 MOV X19, X0
	0x039B6684 CMP W1, 0x1
	0x039B6688 B.NE 0x39B66BC
	0x039B668C MOV X0, X19
	0x039B6690 BL 0x3EB1AD0
	0x039B6694 LDR X20, [X0]
	0x039B6698 BL 0x3EB1AE0
	0x039B669C ADRP X8, 0x79C000
	0x039B66A0 LDR X8, [X8 + 0x158]
	0x039B66A4 ADD X0, X31, 0xB0
	0x039B66A8 LDR X1, [X8]
	0x039B66AC BL 0x2BE04D4
	0x039B66B0 CBZ X20, 0x39B6650
	0x039B66B4 MOV X0, X20
	0x039B66B8 BL 0x1C16F18
	0x039B66BC MOV X20, X31
	0x039B66C0 B 0x39B66C8
	0x039B66C4 MOV X19, X0
	0x039B66C8 ADRP X8, 0x79C000
	0x039B66CC LDR X8, [X8 + 0x158]
	0x039B66D0 LDR X1, [X8]
	0x039B66D4 ADD X0, X31, 0xB0
	0x039B66D8 BL 0x2BE04D4
	0x039B66DC CBNZ X20, 0x39B66E8
	0x039B66E0 MOV X0, X19
	0x039B66E4 BL 0x1D2C690
	0x039B66E8 MOV X0, X20
	0x039B66EC BL 0x1C16F18
	0x039B66F0 BL 0x1990590
	0x039B66F4 STR X1, [X0]
	0x039B66F8 STP W2, W3, [X0 + 0x8]
	0x039B66FC RET
	0x039B6700 LDR X8, [X0]
	0x039B6704 CMP W8, W1
	0x039B6708 B.NE 0x39B6740
	0x039B670C UBFM X9, X1, 0x20, 0x3F
	0x039B6710 UBFM X8, X8, 0x20, 0x3F
	0x039B6714 CMP W8, W9
	0x039B6718 MOV W8, W31
	0x039B671C B.NE 0x39B6744
	0x039B6720 LDR W9, [X0 + 0x8]
	0x039B6724 CMP W9, W2
	0x039B6728 B.NE 0x39B6744
	0x039B672C LDR W8, [X0 + 0xC]
	0x039B6730 UBFM X9, X2, 0x20, 0x3F
	0x039B6734 CMP W8, W9
	0x039B6738 CSET W8, EQ
	0x039B673C B 0x39B6744
	0x039B6740 MOV W8, W31
	0x039B6744 MOV W0, W8
	0x039B6748 RET
	0x039B674C STR X30, [X31 - 0x20]!
	0x039B6750 STP X20, X19, [X31 + 0x10]
	0x039B6754 ADRP X20, 0xA2B000
	0x039B6758 LDRB W8, [X20 + 0xC63]
	0x039B675C MOV X19, X0
	0x039B6760 TBNZ X8, 0x0, 0x39B6778
	0x039B6764 ADRP X0, 0x764000
	0x039B6768 LDR X0, [X0 + 0x418]
	0x039B676C BL 0x1C16CF4
	0x039B6770 MOVZ W8, 0x1
	0x039B6774 STRB W8, [X20 + 0xC63]
	0x039B6778 LDR X8, [X19 + 0x18]
	0x039B677C STR X31, [X19 + 0x10]
	0x039B6780 CBZ X8, 0x39B679C
	0x039B6784 LDR W9, [X8 + 0x1C]
	0x039B6788 LDP X20, X19, [X31 + 0x10]
	0x039B678C ADD W9, W9, 0x1
	0x039B6790 STP W31, W9, [X8 + 0x18]
	0x039B6794 LDR X30, [X31], #0x20
	0x039B6798 RET
	0x039B679C BL 0x1C16F20
	0x039B67A0 STR X30, [X31 - 0x30]!
	0x039B67A4 STP X22, X21, [X31 + 0x10]
	0x039B67A8 STP X20, X19, [X31 + 0x20]
	0x039B67AC ADRP X21, 0xA2B000
	0x039B67B0 ADRP X22, 0x764000
	0x039B67B4 ADRP X20, 0x764000
	0x039B67B8 LDRB W8, [X21 + 0xC64]
	0x039B67BC LDR X22, [X22 + 0x480]
	0x039B67C0 LDR X20, [X20 + 0x488]
	0x039B67C4 MOV X19, X0
	0x039B67C8 TBNZ X8, 0x0, 0x39B67EC
	0x039B67CC ADRP X0, 0x764000
	0x039B67D0 LDR X0, [X0 + 0x488]
	0x039B67D4 BL 0x1C16CF4
	0x039B67D8 ADRP X0, 0x764000
	0x039B67DC LDR X0, [X0 + 0x480]
	0x039B67E0 BL 0x1C16CF4
	0x039B67E4 MOVZ W8, 0x1
	0x039B67E8 STRB W8, [X21 + 0xC64]
	0x039B67EC LDR X0, [X22]
	0x039B67F0 BL 0x1C16F10
	0x039B67F4 LDR X1, [X20]
	0x039B67F8 MOV X20, X0
	0x039B67FC BL 0x30BE430
	0x039B6800 STR X20, [X19 + 0x18]
	0x039B6804 MOV X0, X19
	0x039B6808 LDP X20, X19, [X31 + 0x20]
	0x039B680C LDP X22, X21, [X31 + 0x10]
	0x039B6810 MOV X1, X31
	0x039B6814 LDR X30, [X31], #0x30
	0x039B6818 B 0x33BDD8C
	0x039B681C STR X30, [X31 - 0x20]!
	0x039B6820 STP X20, X19, [X31 + 0x10]
	0x039B6824 ADRP X20, 0xA2B000
	0x039B6828 LDRB W8, [X20 + 0xC65]
	0x039B682C MOV X19, X0
	0x039B6830 TBNZ X8, 0x0, 0x39B6854
	0x039B6834 ADRP X0, 0x79C000
	0x039B6838 LDR X0, [X0 + 0x178]
	0x039B683C BL 0x1C16CF4
	0x039B6840 ADRP X0, 0x79C000
	0x039B6844 LDR X0, [X0 + 0x180]
	0x039B6848 BL 0x1C16CF4
	0x039B684C MOVZ W8, 0x1
	0x039B6850 STRB W8, [X20 + 0xC65]
	0x039B6854 LDR X0, [X19 + 0x10]
	0x039B6858 CBZ X0, 0x39B688C
	0x039B685C ADRP X8, 0x79C000
	0x039B6860 LDR X8, [X8 + 0x178]
	0x039B6864 LDR X1, [X8]
	0x039B6868 BL 0x2DD2130
	0x039B686C LDR X8, [X19 + 0x18]
	0x039B6870 CBZ X8, 0x39B688C
	0x039B6874 LDR W9, [X8 + 0x1C]
	0x039B6878 LDP X20, X19, [X31 + 0x10]
	0x039B687C ADD W9, W9, 0x1
	0x039B6880 STP W31, W9, [X8 + 0x18]
	0x039B6884 LDR X30, [X31], #0x20
	0x039B6888 RET
	0x039B688C BL 0x1C16F20
	0x039B6890 STR X30, [X31 - 0x40]!
	0x039B6894 STP X24, X23, [X31 + 0x10]
	0x039B6898 STP X22, X21, [X31 + 0x20]
	0x039B689C STP X20, X19, [X31 + 0x30]
	0x039B68A0 ADRP X23, 0xA2B000
	0x039B68A4 ADRP X24, 0x79C000
	0x039B68A8 ADRP X20, 0x79C000
	0x039B68AC ADRP X22, 0x79C000
	0x039B68B0 ADRP X21, 0x79C000
	0x039B68B4 LDRB W8, [X23 + 0xC66]
	0x039B68B8 LDR X24, [X24 + 0x188]
	0x039B68BC LDR X20, [X20 + 0x190]
	0x039B68C0 LDR X22, [X22 + 0x198]
	0x039B68C4 LDR X21, [X21 + 0x1A0]
	0x039B68C8 MOV X19, X0
	0x039B68CC TBNZ X8, 0x0, 0x39B6908
	0x039B68D0 ADRP X0, 0x79C000
	0x039B68D4 LDR X0, [X0 + 0x190]
	0x039B68D8 BL 0x1C16CF4
	0x039B68DC ADRP X0, 0x79C000
	0x039B68E0 LDR X0, [X0 + 0x188]
	0x039B68E4 BL 0x1C16CF4
	0x039B68E8 ADRP X0, 0x79C000
	0x039B68EC LDR X0, [X0 + 0x1A0]
	0x039B68F0 BL 0x1C16CF4
	0x039B68F4 ADRP X0, 0x79C000
	0x039B68F8 LDR X0, [X0 + 0x198]
	0x039B68FC BL 0x1C16CF4
	0x039B6900 MOVZ W8, 0x1
	0x039B6904 STRB W8, [X23 + 0xC66]
	0x039B6908 LDR X0, [X24]
	0x039B690C BL 0x1C16F10
	0x039B6910 LDR X1, [X20]
	0x039B6914 MOV X20, X0
	0x039B6918 BL 0x2DD1AE0
	0x039B691C STR X20, [X19 + 0x10]
	0x039B6920 LDR X0, [X22]
	0x039B6924 BL 0x1C16F10
	0x039B6928 LDR X1, [X21]
	0x039B692C MOV X20, X0
	0x039B6930 BL 0x311CEE0
	0x039B6934 STR X20, [X19 + 0x18]
	0x039B6938 MOV X0, X19
	0x039B693C LDP X20, X19, [X31 + 0x30]
	0x039B6940 LDP X22, X21, [X31 + 0x20]
	0x039B6944 LDP X24, X23, [X31 + 0x10]
	0x039B6948 MOV X1, X31
	0x039B694C LDR X30, [X31], #0x40
	0x039B6950 B 0x33BDD8C
	0x039B6954 STR X30, [X31 - 0x20]!
	0x039B6958 STP X20, X19, [X31 + 0x10]
	0x039B695C ADRP X19, 0xA2B000
	0x039B6960 ADRP X20, 0x79B000
	0x039B6964 LDRB W8, [X19 + 0xC67]
	0x039B6968 LDR X20, [X20 + 0xF50]
	0x039B696C TBNZ X8, 0x0, 0x39B6984
	0x039B6970 ADRP X0, 0x79B000
	0x039B6974 LDR X0, [X0 + 0xF50]
	0x039B6978 BL 0x1C16CF4
	0x039B697C MOVZ W8, 0x1
	0x039B6980 STRB W8, [X19 + 0xC67]
	0x039B6984 LDR X0, [X20]
	0x039B6988 BL 0x1C16F10
	0x039B698C MOV X1, X31
	0x039B6990 MOV X19, X0
	0x039B6994 BL 0x33BDD8C
	0x039B6998 LDR X8, [X20]
	0x039B699C LDR X8, [X8 + 0xB8]
	0x039B69A0 STR X19, [X8]
	0x039B69A4 LDP X20, X19, [X31 + 0x10]
	0x039B69A8 LDR X30, [X31], #0x20
	0x039B69AC RET
	0x039B69B0 MOV X1, X31
	0x039B69B4 B 0x33BDD8C
	0x039B69B8 CBZ X1, 0x39B69C4
	0x039B69BC MOV X0, X1
	0x039B69C0 B 0x39B681C
	0x039B69C4 STR X30, [X31 - 0x10]!
	0x039B69C8 BL 0x1C16F20
	0x039B69CC STR X30, [X31 - 0x20]!
	0x039B69D0 STP X20, X19, [X31 + 0x10]
	0x039B69D4 ADRP X20, 0xA2B000
	0x039B69D8 LDRB W8, [X20 + 0xC68]
	0x039B69DC MOV X19, X1
	0x039B69E0 TBNZ X8, 0x0, 0x39B69F8
	0x039B69E4 ADRP X0, 0x79C000
	0x039B69E8 LDR X0, [X0 + 0x1A8]
	0x039B69EC BL 0x1C16CF4
	0x039B69F0 MOVZ W8, 0x1
	0x039B69F4 STRB W8, [X20 + 0xC68]
	0x039B69F8 CBZ X19, 0x39B6A34
	0x039B69FC LDP W2, W8, [X19 + 0x18]
	0x039B6A00 ADD W8, W8, 0x1
	0x039B6A04 CMP W2, 0x1
	0x039B6A08 STP W31, W8, [X19 + 0x18]
	0x039B6A0C B.LT 0x39B6A28
	0x039B6A10 LDR X0, [X19 + 0x10]
	0x039B6A14 LDP X20, X19, [X31 + 0x10]
	0x039B6A18 MOV W1, W31
	0x039B6A1C MOV X3, X31
	0x039B6A20 LDR X30, [X31], #0x20
	0x039B6A24 B 0x339FA34
	0x039B6A28 LDP X20, X19, [X31 + 0x10]
	0x039B6A2C LDR X30, [X31], #0x20
	0x039B6A30 RET
	0x039B6A34 BL 0x1C16F20
	0x039B6A38 CBZ X1, 0x39B6A44
	0x039B6A3C MOV X0, X1
	0x039B6A40 B 0x39B674C
	0x039B6A44 STR X30, [X31 - 0x10]!
	0x039B6A48 BL 0x1C16F20
	0x039B6A4C STR X30, [X31 - 0x20]!
	0x039B6A50 STP X20, X19, [X31 + 0x10]
	0x039B6A54 ADRP X20, 0xA2B000
	0x039B6A58 LDRB W8, [X20 + 0xC69]
	0x039B6A5C MOV X19, X1
	0x039B6A60 TBNZ X8, 0x0, 0x39B6A78
	0x039B6A64 ADRP X0, 0x79C000
	0x039B6A68 LDR X0, [X0 + 0x108]
	0x039B6A6C BL 0x1C16CF4
	0x039B6A70 MOVZ W8, 0x1
	0x039B6A74 STRB W8, [X20 + 0xC69]
	0x039B6A78 CBZ X19, 0x39B6AA8
	0x039B6A7C ADRP X8, 0x79C000
	0x039B6A80 LDR X8, [X8 + 0x108]
	0x039B6A84 LDR X9, [X19 + 0x10]
	0x039B6A88 LDP X20, X19, [X31 + 0x10]
	0x039B6A8C LDR X8, [X8]
	0x039B6A90 LDR X8, [X8 + 0xB8]
	0x039B6A94 LDR X8, [X8]
	0x039B6A98 CMP X9, X8
	0x039B6A9C CSET W0, EQ
	0x039B6AA0 LDR X30, [X31], #0x20
	0x039B6AA4 RET
	0x039B6AA8 BL 0x1C16F20
	0x039B6AAC STR X30, [X31 - 0x20]!
	0x039B6AB0 STP X20, X19, [X31 + 0x10]
	0x039B6AB4 ADRP X20, 0xA2B000
	0x039B6AB8 LDRB W8, [X20 + 0xC6A]
	0x039B6ABC MOV X19, X1
	0x039B6AC0 TBNZ X8, 0x0, 0x39B6AD8
	0x039B6AC4 ADRP X0, 0x79C000
	0x039B6AC8 LDR X0, [X0 + 0x108]
	0x039B6ACC BL 0x1C16CF4
	0x039B6AD0 MOVZ W8, 0x1
	0x039B6AD4 STRB W8, [X20 + 0xC6A]
	0x039B6AD8 CBZ X19, 0x39B6B08
	0x039B6ADC ADRP X8, 0x79C000
	0x039B6AE0 LDR X8, [X8 + 0x108]
	0x039B6AE4 LDR X9, [X19 + 0x10]
	0x039B6AE8 LDP X20, X19, [X31 + 0x10]
	0x039B6AEC LDR X8, [X8]
	0x039B6AF0 LDR X8, [X8 + 0xB8]
	0x039B6AF4 LDR X8, [X8]
	0x039B6AF8 CMP X9, X8
	0x039B6AFC CSET W0, EQ
	0x039B6B00 LDR X30, [X31], #0x20
	0x039B6B04 RET
	0x039B6B08 BL 0x1C16F20
	0x039B6B0C LDR W0, [X0 + 0x10]
	0x039B6B10 RET
	0x039B6B14 STR W1, [X0 + 0x10]
	0x039B6B18 RET
	0x039B6B1C SUB X31, X31, 0xA0
	0x039B6B20 STR X30, [X31 + 0x50]
	0x039B6B24 STP X26, X25, [X31 + 0x60]
	0x039B6B28 STP X24, X23, [X31 + 0x70]
	0x039B6B2C STP X22, X21, [X31 + 0x80]
	0x039B6B30 STP X20, X19, [X31 + 0x90]
	0x039B6B34 ADRP X26, 0xA2B000
	0x039B6B38 ADRP X25, 0x79C000
	0x039B6B3C ADRP X23, 0x79C000
	0x039B6B40 ADRP X24, 0x79C000
	0x039B6B44 LDRB W8, [X26 + 0xC6B]
	0x039B6B48 LDR X25, [X25 + 0x1B0]
	0x039B6B4C LDR X23, [X23 + 0x1B8]
	0x039B6B50 LDR X24, [X24 + 0x1C0]
	0x039B6B54 MOV W22, W3
	0x039B6B58 MOV W20, W2
	0x039B6B5C MOV W21, W1
	0x039B6B60 MOV X19, X0
	0x039B6B64 TBNZ X8, 0x0, 0x39B6B94
	0x039B6B68 ADRP X0, 0x79C000
	0x039B6B6C LDR X0, [X0 + 0x1B8]
	0x039B6B70 BL 0x1C16CF4
	0x039B6B74 ADRP X0, 0x79C000
	0x039B6B78 LDR X0, [X0 + 0x1B0]
	0x039B6B7C BL 0x1C16CF4
	0x039B6B80 ADRP X0, 0x79C000
	0x039B6B84 LDR X0, [X0 + 0x1C0]
	0x039B6B88 BL 0x1C16CF4
	0x039B6B8C MOVZ W8, 0x1
	0x039B6B90 STRB W8, [X26 + 0xC6B]
	0x039B6B94 MOV X0, X19
	0x039B6B98 MOV X1, X31
	0x039B6B9C STR W31, [X31 + 0x5C]
	0x039B6BA0 BL 0x33BDD8C
	0x039B6BA4 AND W22, W22, 0x1
	0x039B6BA8 STR W31, [X19 + 0x70]
	0x039B6BAC STR X31, [X19 + 0x68]
	0x039B6BB0 STR W20, [X19 + 0x84]
	0x039B6BB4 STRB W22, [X19 + 0x88]
	0x039B6BB8 LDR X0, [X25]
	0x039B6BBC BL 0x1C16F10
	0x039B6BC0 LDR X2, [X23]
	0x039B6BC4 MOVZ W1, 0x100
	0x039B6BC8 MOV X23, X0
	0x039B6BCC BL 0x2604DA0
	0x039B6BD0 STR X23, [X19 + 0x78]
	0x039B6BD4 LDR X3, [X24]
	0x039B6BD8 MUL W8, W21, W21
	0x039B6BDC UBFM W0, W8, 0x1E, 0x1D
	0x039B6BE0 ADD X8, X31, 0x0
	0x039B6BE4 ADD X6, X31, 0x5C
	0x039B6BE8 MOVZ W4, 0x1
	0x039B6BEC MOV W1, W31
	0x039B6BF0 MOV W2, W20
	0x039B6BF4 MOV W5, W22
	0x039B6BF8 BL 0x39B6C88
	0x039B6BFC ADD X0, X19, 0x18
	0x039B6C00 ADD X1, X31, 0x0
	0x039B6C04 MOVZ W2, 0x50
	0x039B6C08 BL 0x3EB1AC0
	0x039B6C0C LDR W8, [X31 + 0x5C]
	0x039B6C10 LDP W9, W10, [X19 + 0x58]
	0x039B6C14 LDR W11, [X19 + 0x60]
	0x039B6C18 LDP X22, X21, [X31 + 0x80]
	0x039B6C1C STR W8, [X19 + 0x10]
	0x039B6C20 ADD W8, W9, 0x1FF
	0x039B6C24 CMP W9, 0x0
	0x039B6C28 CSEL W8, W8, W9, LT
	0x039B6C2C ADD W9, W10, 0x3
	0x039B6C30 CMP W10, 0x0

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X20, 0xA2C000
	015 Move W8, [X20+3165]
	016 Move X21, X4
	017 Move X19, X0
	018 Move [X31+16], W6
	019 Move [X31+20], W7
	020 Move [X31+32], W5
	021 Move [X31+24], X3
	022 Move [X31+40], X2
	023 Move [X31+72], X1
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {96}
	028 Move X0, 0x79D000
	029 Move X0, [X0+128]
	030 Call 0x1C17CF4
	031 Move X0, 0x79D000
	032 Move X0, [X0+136]
	033 Call 0x1C17CF4
	034 Move X0, 0x79D000
	035 Move X0, [X0+144]
	036 Call 0x1C17CF4
	037 Move X0, 0x79D000
	038 Move X0, [X0+152]
	039 Call 0x1C17CF4
	040 Move X0, 0x79D000
	041 Move X0, [X0+160]
	042 Call 0x1C17CF4
	043 Move X0, 0x79D000
	044 Move X0, [X0+168]
	045 Call 0x1C17CF4
	046 Move X0, 0x79D000
	047 Move X0, [X0+176]
	048 Call 0x1C17CF4
	049 Move X0, 0x79D000
	050 Move X0, [X0+184]
	051 Call 0x1C17CF4
	052 Move X0, 0x79D000
	053 Move X0, [X0+192]
	054 Call 0x1C17CF4
	055 Move X0, 0x765000
	056 Move X0, [X0+1040]
	057 Call 0x1C17CF4
	058 Move X0, 0x79D000
	059 Move X0, [X0+200]
	060 Call 0x1C17CF4
	061 Move X0, 0x79D000
	062 Move X0, [X0+208]
	063 Call 0x1C17CF4
	064 Move X0, 0x79D000
	065 Move X0, [X0+216]
	066 Call 0x1C17CF4
	067 Move X0, 0x79D000
	068 Move X0, [X0+224]
	069 Call 0x1C17CF4
	070 Move X0, 0x79D000
	071 Move X0, [X0+232]
	072 Call 0x1C17CF4
	073 Move X0, 0x79D000
	074 Move X0, [X0+240]
	075 Call 0x1C17CF4
	076 Move X0, 0x79D000
	077 Move X0, [X0+248]
	078 Call 0x1C17CF4
	079 Move X0, 0x79D000
	080 Move X0, [X0+256]
	081 Call 0x1C17CF4
	082 Move X0, 0x79D000
	083 Move X0, [X0+264]
	084 Call 0x1C17CF4
	085 Move X0, 0x79C000
	086 Move X0, [X0+3912]
	087 Call 0x1C17CF4
	088 Move X0, 0x79D000
	089 Move X0, [X0+272]
	090 Call 0x1C17CF4
	091 Move X0, 0x79C000
	092 Move X0, [X0+3920]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X20+3165], W8
	096 Move X8, 0x79C000
	097 Move X8, [X8+3912]
	098 NotImplemented "Instruction MOVI not yet implemented."
	099 Move [X31+176], V0
	100 Move [X31+184], V0
	101 Move [X31+168], X31
	102 Move X0, [X8]
	103 Move X20, 0x79D000
	104 Move W8, [X0+224]
	105 Move X20, [X20+264]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X8, [X20]
	110 Move X9, [X31+72]
	111 Move X8, [X8+184]
	112 Move [X8], X9
	113 Move X0, [X19+88]
	114 Compare X0, 0
	115 JumpIfEqual {489}
	116 Move X8, 0x79D000
	117 Move X8, [X8+232]
	118 Move X1, [X8]
	119 Call 0x2494CB0, X0
	120 Move X8, [X19+80]
	121 Compare X8, 0
	122 JumpIfEqual {489}
	123 Move X9, 0x79D000
	124 Move X9, [X9+128]
	125 Move X1, [X31+72]
	126 Move X2, X0
	127 Move X0, X8
	128 Move X3, [X9]
	129 Move [X31+56], X2
	130 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	131 Compare X21, 0
	132 JumpIfEqual {489}
	133 Move W8, [X21+24]
	134 Move X23, 0x79D000
	135 Move X23, [X23+160]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X28, 0x79D000
	138 Move X25, 0x79C000
	139 Move X27, 0x79D000
	140 Move X20, 0x765000
	141 Move X26, 0x79D000
	142 Move X28, [X28+144]
	143 Move X25, [X25+3920]
	144 Move X27, [X27+200]
	145 Move X20, [X20+1040]
	146 Move X26, [X26+216]
	147 Move W1, W31
	148 Move W29, W31
	149 Move [X31+8], X21
	150 Move X8, 0x79D000
	151 Move X8, [X8+224]
	152 Move X0, X21
	153 Move [X31+36], W1
	154 Move X2, [X8]
	155 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	156 Move X8, [X31+24]
	157 Move W9, [X31+32]
	158 Subtract W8, W8, W29
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W10, [X31+20]
	163 Move X9, X0
	164 ShiftRight X9, 32
	165 And X9, X9, 0x7FFFFFFF
	166 Add W8, W29, W8
	167 NotImplemented "Instruction MADD not yet implemented."
	168 Move W10, [X31+16]
	169 Multiply W9, W9, W10
	170 Move [X31+48], W9
	171 Move [X31+52], W8
	172 Move [X31+64], X0
	173 Move X8, 0x79C000
	174 Move X8, [X8+3912]
	175 Move X0, [X8]
	176 Move X8, [X31+40]
	177 Move W9, [X0+224]
	178 Add X8, X8, W29
	179 Move X24, [X8]
	180 Move X21, [X8+8]
	181 Compare W9, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X8, [X31+56]
	185 Compare X8, 0
	186 JumpIfEqual {489}
	187 Move X3, [X8+16]
	188 Move X1, X24
	189 Move X2, X21
	190 Move X22, X8
	191 Call ProbeBrickIndex.MapBrickToVoxels, X0, X1, X2
	192 Move X0, [X22+24]
	193 Compare X0, 0
	194 JumpIfEqual {489}
	195 Move X9, 0x79D000
	196 Move W10, [X0+28]
	197 Move X8, [X0+16]
	198 Move X9, [X9+184]
	199 Add W10, W10, 1
	200 Move X9, [X9]
	201 Move [X0+28], W10
	202 Compare X8, 0
	203 JumpIfEqual {489}
	204 Move X10, [X31+64]
	205 Move W13, [X31+48]
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Move W12, [X8+24]
	208 Add W10, W10, W13
	209 Move X13, X21
	210 ShiftRight X13, 4
	211 And X13, X13, 0x7FFFFFFF
	212 Move W13, W13
	213 ShiftRight W13, 28
	214 And W13, W13, 0x7FFFFFFF
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction BFM not yet implemented."
	217 Move W12, 20
	218 Add W9, W11, 1
	219 NotImplemented "Instruction MADD not yet implemented."
	220 Move [X0+24], W9
	221 Move [X8+32], X24
	222 Move [X8+40], X21
	223 Move [X8+48], W10
	224 Move X8, [X9+32]
	225 Add X1, X31, 136
	226 Move X8, [X8+192]
	227 Move X2, [X8+112]
	228 Move [X31+136], X24
	229 Move [X31+144], X21
	230 Move [X31+152], W10
	231 Call List`1<ReservedBrick>.AddWithResize, X0, X1
	232 Move X8, [X31+56]
	233 Move X0, [X8+16]
	234 Compare X0, 0
	235 JumpIfEqual {489}
	236 Move X8, 0x79D000
	237 Move X8, [X8+176]
	238 Move X1, [X8]
	239 Add X8, X31, 136
	240 Call HashSet`1<Vector3Int>.GetEnumerator, X0
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 Move [X31+176], V0
	244 Move [X31+184], V1
	245 Move X1, [X23]
	246 Add X0, X31, 176
	247 Call Enumerator<Vector3Int>.MoveNext, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {392}
	252 Move X0, [X19+72]
	253 Compare X0, 0
	254 JumpIfEqual {402}
	255 Move X24, [X31+192]
	256 Move W21, [X31+200]
	257 Move X4, [X28]
	258 Add X3, X31, 168
	259 Move X1, X24
	260 Move X2, X21
	261 Call Dictionary`2<Vector3Int, Object>.TryGetValue, X0, X1, X2
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfEqual {284}
	266 Move X0, [X19+96]
	267 Compare X0, 0
	268 JumpIfEqual {408}
	269 Move X8, 0x79D000
	270 Move X8, [X8+240]
	271 Move X1, [X8]
	272 Call 0x2494CB0, X0
	273 Move [X31+168], X0
	274 Move X3, X0
	275 Move X0, [X19+72]
	276 Compare X0, 0
	277 JumpIfEqual {409}
	278 Move X8, 0x79D000
	279 Move X8, [X8+136]
	280 Move X4, [X8]
	281 Move X1, X24
	282 Move X2, X21
	283 Call Dictionary`2<Vector3Int, Object>.Add, X0, X1, X2
	284 Move X8, [X25]
	285 Move X21, [X31+168]
	286 Move W9, [X8+224]
	287 Compare W9, 0
	288 JumpIfNotEqual {292}
	289 Move X0, X8
	290 Call 0x1C17DFC
	291 Move X8, [X25]
	292 Move X9, [X8+184]
	293 Move X24, [X9+32]
	294 Compare X24, 0
	295 JumpIfNotEqual {318}
	296 Move W9, [X8+224]
	297 Compare W9, 0
	298 JumpIfNotEqual {302}
	299 Move X0, X8
	300 Call 0x1C17DFC
	301 Move X8, [X25]
	302 Move X8, [X8+184]
	303 Move X22, [X8]
	304 Move X8, 0x79D000
	305 Move X8, [X8+256]
	306 Move X0, [X8]
	307 Call 0x1C17F10
	308 Move X8, 0x79D000
	309 Move X8, [X8+272]
	310 Move X24, X0
	311 Move X2, [X8]
	312 Move X1, X22
	313 Move X3, X31
	314 Call Predicate`1<Object>..ctor, X0, X1, X2
	315 Move X8, [X25]
	316 Move X8, [X8+184]
	317 Move [X8+32], X24
	318 Compare X21, 0
	319 JumpIfEqual {403}
	320 Move X2, [X27]
	321 Move X0, X21
	322 Move X1, X24
	323 Call List`1<Object>.FindIndex, X0, X1
	324 Move W1, W0
	325 Add W31, W1, 1
	326 Move X0, [X31+168]
	327 Compare X0, 0
	328 JumpIfEqual {406}
	329 Move X2, [X26]
	330 Call List`1<Object>.get_Item, X0, X1
	331 Move X21, X0
	332 Compare X0, 0
	333 JumpIfNotEqual {370}
	334 Move X0, [X19+104]
	335 Compare X0, 0
	336 JumpIfEqual {413}
	337 Move X8, 0x79D000
	338 Move X8, [X8+248]
	339 Move X1, [X8]
	340 Call 0x2494CB0, X0
	341 Move X21, X0
	342 Compare X0, 0
	343 JumpIfEqual {412}
	344 Move X8, [X31+72]
	345 Move [X21+16], X8
	346 Move X0, [X31+168]
	347 Compare X0, 0
	348 JumpIfEqual {411}
	349 Move X9, 0x79D000
	350 Move W10, [X0+28]
	351 Move X8, [X0+16]
	352 Move X9, [X9+192]
	353 Add W10, W10, 1
	354 Move X9, [X9]
	355 Move [X0+28], W10
	356 Compare X8, 0
	357 JumpIfEqual {410}
	358 NotImplemented "Instruction LDRSW not yet implemented."
	359 Move W11, [X8+24]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Add W9, W10, 1
	362 Add X8, X8, X10
	363 Move [X0+24], W9
	364 Move [X8+32], X21
	365 Move X8, [X9+32]
	366 Move X8, [X8+192]
	367 Move X2, [X8+112]
	368 Move X1, X21
	369 Call List`1<Object>.AddWithResize, X0, X1
	370 Move X0, [X21+24]
	371 Compare X0, 0
	372 JumpIfEqual {404}
	373 Move W10, [X0+28]
	374 Move X8, [X0+16]
	375 Move X9, [X20]
	376 Add W10, W10, 1
	377 Move [X0+28], W10
	378 Compare X8, 0
	379 JumpIfEqual {405}
	380 NotImplemented "Instruction LDRSW not yet implemented."
	381 Move W11, [X8+24]
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Add W9, W10, 1
	384 Add X8, X8, X10
	385 Move [X0+24], W9
	386 NotImplemented "Instruction STRH not yet implemented."
	387 Move X8, [X9+32]
	388 Move X8, [X8+192]
	389 Move X2, [X8+112]
	390 Move W1, W29
	391 Call List`1<UInt16>.AddWithResize, X0, X1
	392 Move X8, 0x79D000
	393 Move X8, [X8+152]
	394 Add X0, X31, 176
	395 Move X1, [X8]
	396 Call Enumerator<Vector3Int>.Dispose, X0
	397 Move W8, [X31+52]
	398 Move X0, [X31+64]
	399 Add W29, W29, 1
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Add W0, W0, 4
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Call 0x1C17F20
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Call 0x1C17F20
	412 Call 0x1C17F20
	413 Call 0x1C17F20
	414 Move X22, X0
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X22
	417 Call 0x3EB2AD0
	418 Move X21, [X0]
	419 Call 0x3EB2AE0
	420 Move X8, 0x79D000
	421 Move X8, [X8+152]
	422 Add X0, X31, 176
	423 Move X1, [X8]
	424 Call Enumerator<Vector3Int>.Dispose, X0
	425 Compare X21, 0
	426 JumpIfEqual {397}
	427 Move W29, [X31+52]
	428 Move X21, [X31+8]
	429 Move W1, [X31+36]
	430 Move W8, [X21+24]
	431 Add W1, W1, 1
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move X8, [X31+56]
	434 Compare X8, 0
	435 JumpIfEqual {489}
	436 Move X0, [X8+16]
	437 Compare X0, 0
	438 JumpIfEqual {489}
	439 Move X8, 0x79D000
	440 Move X8, [X8+176]
	441 Move X21, [X31+304]
	442 Move X1, [X8]
	443 Add X8, X31, 136
	444 Call HashSet`1<Vector3Int>.GetEnumerator, X0
	445 NotImplemented "Instruction LDUR not yet implemented."
	446 NotImplemented "Instruction LDUR not yet implemented."
	447 Move [X31+176], V0
	448 Move [X31+184], V1
	449 Move X1, [X23]
	450 Add X0, X31, 176
	451 Call Enumerator<Vector3Int>.MoveNext, X0
	452 Move TEMP, X0
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfNotEqual {470}
	456 Move W8, [X31+200]
	457 Move X1, [X31+192]
	458 Move V1, [X21]
	459 Move V0, [X21+16]
	460 Move V2, [X21+2]
	461 And X9, X20, 0
	462 Or X20, X9, X8
	463 Move [X31+80], V1
	464 Move [X31+88], V0
	465 Move [X31+7], V2
	466 Add X3, X31, 80
	467 Move X0, X19
	468 Move X2, X20
	469 Call ProbeBrickIndex.UpdateIndexForVoxel, X0, X1, X2
	470 Move X8, 0x79D000
	471 Move X8, [X8+152]
	472 Add X0, X31, 176
	473 Move X1, [X8]
	474 Call Enumerator<Vector3Int>.Dispose, X0
	475 Move X20, [X31+288]
	476 Move X19, [X31+296]
	477 Move X22, [X31+272]
	478 Move X21, [X31+280]
	479 Move X24, [X31+256]
	480 Move X23, [X31+264]
	481 Move X26, [X31+240]
	482 Move X25, [X31+248]
	483 Move X28, [X31+224]
	484 Move X27, [X31+232]
	485 Move X29, [X31+208]
	486 Move X30, [X31+216]
	487 Add X31, X31, 304
	488 Return 
	489 Call 0x1C17F20
	490 Move X21, X31
	491 Move X0, X21
	492 Call 0x1C17F18
	493 Move X22, X0
	494 Move X8, 0x79D000
	495 Move X8, [X8+152]
	496 Move X1, [X8]
	497 Add X0, X31, 176
	498 Call Enumerator<Vector3Int>.Dispose, X0
	499 Compare X21, 0
	500 JumpIfNotEqual {503}
	501 Move X0, X22
	502 Call 0x1D2D690
	503 Move X0, X21
	504 Call 0x1C17F18
	505 Move X22, X0
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Move X0, X22
	508 Call 0x3EB2AD0
	509 Move X19, [X0]
	510 Call 0x3EB2AE0
	511 Move X8, 0x79D000
	512 Move X8, [X8+152]
	513 Add X0, X31, 176
	514 Move X1, [X8]
	515 Call Enumerator<Vector3Int>.Dispose, X0
	516 Compare X19, 0
	517 JumpIfEqual {475}
	518 Move X0, X19
	519 Call 0x1C17F18
	520 Move X19, X31
	521 Move X22, X0
	522 Move X8, 0x79D000
	523 Move X8, [X8+152]
	524 Move X1, [X8]
	525 Add X0, X31, 176
	526 Call Enumerator<Vector3Int>.Dispose, X0
	527 Compare X19, 0
	528 JumpIfEqual {501}
	529 Move X0, X19
	530 Call 0x1C17F18
	531 Call 0x1991590

Method: System.Void RemoveBricks(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo)

Disassembly:
	0x039B6E70 MOV W5, W27
	0x039B6E74 MOV X6, X20
	0x039B6E78 BL 0x39B7E04
	0x039B6E7C MOV X9, X31
	0x039B6E80 STR X0, [X31]
	0x039B6E84 TBZ X26, 0x0, 0x39B6EE4
	0x039B6E88 ADRP X8, 0x79C000
	0x039B6E8C LDR X8, [X8 + 0x1D0]
	0x039B6E90 MOV X0, X21
	0x039B6E94 MOV X2, X31
	0x039B6E98 LDR X1, [X8]
	0x039B6E9C BL 0x321B938
	0x039B6EA0 MOV X4, X0
	0x039B6EA4 MOVZ W3, 0x5
	0x039B6EA8 MOV W0, W23
	0x039B6EAC MOV W1, W22
	0x039B6EB0 MOV W2, W25
	0x039B6EB4 MOV W5, W31
	0x039B6EB8 MOV X6, X20
	0x039B6EBC BL 0x39B7E04
	0x039B6EC0 CBZ X0, 0x39B6EE0
	0x039B6EC4 ADRP X8, 0x79C000
	0x039B6EC8 LDR X8, [X8 + 0x1C8]
	0x039B6ECC LDR X9, [X0]
	0x039B6ED0 LDR X8, [X8]
	0x039B6ED4 CMP X9, X8
	0x039B6ED8 CSEL X9, X0, X31, EQ
	0x039B6EDC B 0x39B6EE4
	0x039B6EE0 MOV X9, X31
	0x039B6EE4 LDR W8, [X31 + 0x18]
	0x039B6EE8 CMP W8, 0x2
	0x039B6EEC B.NE 0x39B6FEC
	0x039B6EF0 ADRP X8, 0x79C000
	0x039B6EF4 LDR X8, [X8 + 0x1E0]
	0x039B6EF8 MOV X0, X21
	0x039B6EFC MOV X2, X31
	0x039B6F00 STR X9, [X31 + 0x18]
	0x039B6F04 LDR X1, [X8]
	0x039B6F08 BL 0x321B938
	0x039B6F0C AND W26, W24, 0x1
	0x039B6F10 MOV X4, X0
	0x039B6F14 MOV W0, W23
	0x039B6F18 MOV W1, W22
	0x039B6F1C MOV W2, W25
	0x039B6F20 MOV W3, W28
	0x039B6F24 MOV W5, W26
	0x039B6F28 MOV X6, X20
	0x039B6F2C BL 0x39B7E04
	0x039B6F30 ADRP X8, 0x79C000
	0x039B6F34 LDR X8, [X8 + 0x1D8]
	0x039B6F38 MOV X24, X0
	0x039B6F3C MOV X0, X21
	0x039B6F40 MOV X2, X31
	0x039B6F44 LDR X1, [X8]
	0x039B6F48 BL 0x321B938
	0x039B6F4C MOV X4, X0
	0x039B6F50 MOV W0, W23
	0x039B6F54 MOV W1, W22
	0x039B6F58 MOV W2, W25
	0x039B6F5C MOV W3, W28
	0x039B6F60 MOV W5, W26
	0x039B6F64 MOV X6, X20
	0x039B6F68 BL 0x39B7E04
	0x039B6F6C ADRP X8, 0x79C000
	0x039B6F70 LDR X8, [X8 + 0x1F8]
	0x039B6F74 MOV X29, X0
	0x039B6F78 MOV X0, X21
	0x039B6F7C MOV X2, X31
	0x039B6F80 LDR X1, [X8]
	0x039B6F84 BL 0x321B938
	0x039B6F88 MOV X4, X0
	0x039B6F8C MOV W0, W23
	0x039B6F90 MOV W1, W22
	0x039B6F94 MOV W2, W25
	0x039B6F98 MOV W3, W28
	0x039B6F9C MOV W5, W26
	0x039B6FA0 MOV X6, X20
	0x039B6FA4 BL 0x39B7E04
	0x039B6FA8 ADRP X8, 0x79C000
	0x039B6FAC LDR X8, [X8 + 0x208]
	0x039B6FB0 MOV X27, X0
	0x039B6FB4 MOV X0, X21
	0x039B6FB8 MOV X2, X31
	0x039B6FBC LDR X1, [X8]
	0x039B6FC0 BL 0x321B938
	0x039B6FC4 MOV X4, X0
	0x039B6FC8 MOV W0, W23
	0x039B6FCC MOV W1, W22
	0x039B6FD0 MOV W2, W25
	0x039B6FD4 MOV W3, W28
	0x039B6FD8 MOV W5, W26
	0x039B6FDC MOV X6, X20
	0x039B6FE0 BL 0x39B7E04
	0x039B6FE4 LDR X9, [X31 + 0x18]
	0x039B6FE8 B 0x39B6FFC
	0x039B6FEC MOV X24, X31
	0x039B6FF0 MOV X29, X31
	0x039B6FF4 MOV X27, X31
	0x039B6FF8 MOV X0, X31
	0x039B6FFC LDR X10, [X31 + 0x10]
	0x039B7000 LDR X8, [X31 + 0x8]
	0x039B7004 STP X29, X27, [X19 + 0x20]
	0x039B7008 STP X0, X9, [X19 + 0x30]
	0x039B700C STP W23, W22, [X19 + 0x40]
	0x039B7010 STP X10, X8, [X19]
	0x039B7014 LDR X8, [X31]
	0x039B7018 STP W25, W31, [X19 + 0x48]
	0x039B701C LDP X22, X21, [X31 + 0x60]
	0x039B7020 LDP X26, X25, [X31 + 0x40]
	0x039B7024 STP X8, X24, [X19 + 0x10]
	0x039B7028 LDP X20, X19, [X31 + 0x70]
	0x039B702C LDP X24, X23, [X31 + 0x50]
	0x039B7030 LDP X28, X27, [X31 + 0x30]
	0x039B7034 LDP X29, X30, [X31 + 0x20]
	0x039B7038 ADD X31, X31, 0x80
	0x039B703C RET
	0x039B7040 LDR W0, [X0 + 0x80]
	0x039B7044 RET
	0x039B7048 SUB X31, X31, 0x80
	0x039B704C STR X30, [X31 + 0x50]
	0x039B7050 STP X22, X21, [X31 + 0x60]
	0x039B7054 STP X20, X19, [X31 + 0x70]
	0x039B7058 ADRP X20, 0xA2A000
	0x039B705C ADRP X22, 0x73C000
	0x039B7060 LDRB W8, [X20 + 0xC6C]
	0x039B7064 LDR X22, [X22 + 0x598]
	0x039B7068 MOV X19, X0
	0x039B706C TBNZ X8, 0x0, 0x39B7090
	0x039B7070 ADRP X0, 0x73C000
	0x039B7074 LDR X0, [X0 + 0x598]
	0x039B7078 BL 0x1C16CF4
	0x039B707C ADRP X0, 0x79B000
	0x039B7080 LDR X0, [X0 + 0x1C0]
	0x039B7084 BL 0x1C16CF4
	0x039B7088 MOVZ W8, 0x1
	0x039B708C STRB W8, [X20 + 0xC6C]
	0x039B7090 STR W31, [X31 + 0x5C]
	0x039B7094 MOV X20, X19
	0x039B7098 LDR X21, [X20 + 0x18]!
	0x039B709C LDR X0, [X22]
	0x039B70A0 LDR W8, [X0 + 0xE0]
	0x039B70A4 CBNZ W8, 0x39B70AC
	0x039B70A8 BL 0x1C16DFC
	0x039B70AC MOV X0, X21
	0x039B70B0 MOV X1, X31
	0x039B70B4 MOV X2, X31
	0x039B70B8 BL 0x3C3883C
	0x039B70BC TBZ X0, 0x0, 0x39B7118
	0x039B70C0 MOV X0, X20
	0x039B70C4 BL 0x39B712C
	0x039B70C8 ADRP X11, 0x79B000
	0x039B70CC LDP W8, W9, [X19 + 0x58]
	0x039B70D0 LDR W10, [X19 + 0x60]
	0x039B70D4 LDR W2, [X19 + 0x84]
	0x039B70D8 LDRB W5, [X19 + 0x88]
	0x039B70DC LDR X11, [X11 + 0x1C0]
	0x039B70E0 MUL W8, W9, W8
	0x039B70E4 MUL W0, W8, W10
	0x039B70E8 ADD X8, X31, 0x0
	0x039B70EC LDR X3, [X11]
	0x039B70F0 ADD X6, X31, 0x5C
	0x039B70F4 MOVZ W4, 0x1
	0x039B70F8 MOV W1, W31
	0x039B70FC BL 0x39B6C88
	0x039B7100 ADD X1, X31, 0x0
	0x039B7104 MOVZ W2, 0x50
	0x039B7108 MOV X0, X20
	0x039B710C BL 0x3EB1AC0
	0x039B7110 LDR W8, [X31 + 0x5C]
	0x039B7114 STR W8, [X19 + 0x10]
	0x039B7118 LDP X20, X19, [X31 + 0x70]
	0x039B711C LDP X22, X21, [X31 + 0x60]
	0x039B7120 LDR X30, [X31 + 0x50]
	0x039B7124 ADD X31, X31, 0x80
	0x039B7128 RET
	0x039B712C STP X30, X21, [X31 - 0x20]!
	0x039B7130 STP X20, X19, [X31 + 0x10]
	0x039B7134 ADRP X21, 0xA2A000
	0x039B7138 ADRP X20, 0x764000
	0x039B713C LDRB W8, [X21 + 0xC75]
	0x039B7140 LDR X20, [X20 + 0x8F8]
	0x039B7144 MOV X19, X0
	0x039B7148 TBNZ X8, 0x0, 0x39B7160
	0x039B714C ADRP X0, 0x764000
	0x039B7150 LDR X0, [X0 + 0x8F8]
	0x039B7154 BL 0x1C16CF4
	0x039B7158 MOVZ W8, 0x1
	0x039B715C STRB W8, [X21 + 0xC75]
	0x039B7160 LDR X0, [X20]
	0x039B7164 LDR X20, [X19]
	0x039B7168 LDR W8, [X0 + 0xE0]
	0x039B716C CBNZ W8, 0x39B7174
	0x039B7170 BL 0x1C16DFC
	0x039B7174 MOV X0, X20
	0x039B7178 MOV X1, X31
	0x039B717C BL 0x39E1DF8
	0x039B7180 LDR X0, [X19 + 0x8]
	0x039B7184 MOV X1, X31
	0x039B7188 BL 0x39E1DF8
	0x039B718C LDR X0, [X19 + 0x10]
	0x039B7190 MOV X1, X31
	0x039B7194 BL 0x39E1DF8
	0x039B7198 LDR X0, [X19 + 0x18]
	0x039B719C MOV X1, X31
	0x039B71A0 BL 0x39E1DF8
	0x039B71A4 LDR X0, [X19 + 0x20]
	0x039B71A8 MOV X1, X31
	0x039B71AC BL 0x39E1DF8
	0x039B71B0 LDR X0, [X19 + 0x28]
	0x039B71B4 MOV X1, X31
	0x039B71B8 BL 0x39E1DF8
	0x039B71BC LDR X0, [X19 + 0x30]
	0x039B71C0 MOV X1, X31
	0x039B71C4 BL 0x39E1DF8
	0x039B71C8 LDR X0, [X19 + 0x38]
	0x039B71CC MOV X1, X31
	0x039B71D0 BL 0x39E1DF8
	0x039B71D4 MOVI V0.2D, 0x0
	0x039B71D8 STP V0, V0, [X19 + 0x20]
	0x039B71DC STP V0, V0, [X19]
	0x039B71E0 LDP X20, X19, [X31 + 0x10]
	0x039B71E4 LDP X30, X21, [X31], #0x20
	0x039B71E8 RET
	0x039B71EC MOVZ W0, 0x80
	0x039B71F0 RET
	0x039B71F4 MOVZ W0, 0x2000
	0x039B71F8 RET
	0x039B71FC LDR W0, [X0 + 0x58]
	0x039B7200 RET
	0x039B7204 LDR W0, [X0 + 0x5C]
	0x039B7208 RET
	0x039B720C LDR W1, [X0 + 0x60]
	0x039B7210 LDR X0, [X0 + 0x58]
	0x039B7214 RET
	0x039B7218 STR X30, [X31 - 0x30]!
	0x039B721C STP X22, X21, [X31 + 0x10]
	0x039B7220 STP X20, X19, [X31 + 0x20]
	0x039B7224 ADRP X22, 0xA2A000
	0x039B7228 ADRP X21, 0x73E000
	0x039B722C LDRB W8, [X22 + 0xC6D]
	0x039B7230 LDR X21, [X21 + 0x130]
	0x039B7234 MOV X19, X1
	0x039B7238 MOV X20, X0
	0x039B723C TBNZ X8, 0x0, 0x39B7254
	0x039B7240 ADRP X0, 0x73E000
	0x039B7244 LDR X0, [X0 + 0x130]
	0x039B7248 BL 0x1C16CF4
	0x039B724C MOVZ W8, 0x1
	0x039B7250 STRB W8, [X22 + 0xC6D]
	0x039B7254 LDR X9, [X20 + 0x18]
	0x039B7258 LDR X8, [X21]
	0x039B725C CBZ X9, 0x39B7290
	0x039B7260 LDR X10, [X9]
	0x039B7264 LDRB W11, [X8 + 0x130]
	0x039B7268 LDRB W12, [X10 + 0x130]
	0x039B726C CMP W12, W11
	0x039B7270 B.CS 0x39B727C
	0x039B7274 MOV X9, X31
	0x039B7278 B 0x39B7290
	0x039B727C LDR X10, [X10 + 0xC8]
	0x039B7280 ADD X10, X10, X11, 0x3, LSL
	0x039B7284 LDUR X10, [X10 - 0x8]
	0x039B7288 CMP X10, X8
	0x039B728C CSEL X9, X9, X31, EQ
	0x039B7290 STR X9, [X19 + 0x10]
	0x039B7294 LDR X9, [X20 + 0x20]
	0x039B7298 CBZ X9, 0x39B72CC
	0x039B729C LDR X10, [X9]
	0x039B72A0 LDRB W11, [X8 + 0x130]
	0x039B72A4 LDRB W12, [X10 + 0x130]
	0x039B72A8 CMP W12, W11
	0x039B72AC B.CS 0x39B72B8
	0x039B72B0 MOV X9, X31
	0x039B72B4 B 0x39B72CC
	0x039B72B8 LDR X10, [X10 + 0xC8]
	0x039B72BC ADD X10, X10, X11, 0x3, LSL
	0x039B72C0 LDUR X10, [X10 - 0x8]
	0x039B72C4 CMP X10, X8
	0x039B72C8 CSEL X9, X9, X31, EQ
	0x039B72CC STR X9, [X19 + 0x18]
	0x039B72D0 LDR X9, [X20 + 0x28]
	0x039B72D4 CBZ X9, 0x39B7308
	0x039B72D8 LDR X10, [X9]
	0x039B72DC LDRB W11, [X8 + 0x130]
	0x039B72E0 LDRB W12, [X10 + 0x130]
	0x039B72E4 CMP W12, W11
	0x039B72E8 B.CS 0x39B72F4
	0x039B72EC MOV X9, X31
	0x039B72F0 B 0x39B7308
	0x039B72F4 LDR X10, [X10 + 0xC8]
	0x039B72F8 ADD X10, X10, X11, 0x3, LSL
	0x039B72FC LDUR X10, [X10 - 0x8]
	0x039B7300 CMP X10, X8
	0x039B7304 CSEL X9, X9, X31, EQ
	0x039B7308 STR X9, [X19 + 0x20]
	0x039B730C LDR X9, [X20 + 0x30]
	0x039B7310 CBZ X9, 0x39B7344
	0x039B7314 LDR X10, [X9]
	0x039B7318 LDRB W11, [X8 + 0x130]
	0x039B731C LDRB W12, [X10 + 0x130]
	0x039B7320 CMP W12, W11
	0x039B7324 B.CS 0x39B7330
	0x039B7328 MOV X9, X31
	0x039B732C B 0x39B7344
	0x039B7330 LDR X10, [X10 + 0xC8]
	0x039B7334 ADD X10, X10, X11, 0x3, LSL
	0x039B7338 LDUR X10, [X10 - 0x8]
	0x039B733C CMP X10, X8
	0x039B7340 CSEL X9, X9, X31, EQ
	0x039B7344 STR X9, [X19 + 0x28]
	0x039B7348 LDR X9, [X20 + 0x38]
	0x039B734C CBZ X9, 0x39B7380
	0x039B7350 LDR X10, [X9]
	0x039B7354 LDRB W11, [X8 + 0x130]
	0x039B7358 LDRB W12, [X10 + 0x130]
	0x039B735C CMP W12, W11
	0x039B7360 B.CS 0x39B736C
	0x039B7364 MOV X9, X31
	0x039B7368 B 0x39B7380
	0x039B736C LDR X10, [X10 + 0xC8]
	0x039B7370 ADD X10, X10, X11, 0x3, LSL
	0x039B7374 LDUR X10, [X10 - 0x8]
	0x039B7378 CMP X10, X8
	0x039B737C CSEL X9, X9, X31, EQ
	0x039B7380 STR X9, [X19 + 0x30]
	0x039B7384 LDR X9, [X20 + 0x40]
	0x039B7388 CBZ X9, 0x39B73BC
	0x039B738C LDR X10, [X9]
	0x039B7390 LDRB W11, [X8 + 0x130]
	0x039B7394 LDRB W12, [X10 + 0x130]
	0x039B7398 CMP W12, W11
	0x039B739C B.CS 0x39B73A8
	0x039B73A0 MOV X9, X31
	0x039B73A4 B 0x39B73BC
	0x039B73A8 LDR X10, [X10 + 0xC8]
	0x039B73AC ADD X10, X10, X11, 0x3, LSL
	0x039B73B0 LDUR X10, [X10 - 0x8]
	0x039B73B4 CMP X10, X8
	0x039B73B8 CSEL X9, X9, X31, EQ
	0x039B73BC STR X9, [X19 + 0x38]
	0x039B73C0 LDR X9, [X20 + 0x48]
	0x039B73C4 CBZ X9, 0x39B73DC
	0x039B73C8 LDR X10, [X9]
	0x039B73CC LDRB W11, [X8 + 0x130]
	0x039B73D0 LDRB W12, [X10 + 0x130]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X28
	005 Move [X31+296], X27
	006 Move [X31+304], X26
	007 Move [X31+312], X25
	008 Move [X31+320], X24
	009 Move [X31+328], X23
	010 Move [X31+336], X22
	011 Move [X31+344], X21
	012 Move [X31+352], X20
	013 Move [X31+360], X19
	014 Move X20, 0xA2C000
	015 Move W8, [X20+3166]
	016 Move X22, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {84}
	022 Move X0, 0x79D000
	023 Move X0, [X0+296]
	024 Call 0x1C17CF4
	025 Move X0, 0x79D000
	026 Move X0, [X0+304]
	027 Call 0x1C17CF4
	028 Move X0, 0x79D000
	029 Move X0, [X0+312]
	030 Call 0x1C17CF4
	031 Move X0, 0x79D000
	032 Move X0, [X0+280]
	033 Call 0x1C17CF4
	034 Move X0, 0x79D000
	035 Move X0, [X0+288]
	036 Call 0x1C17CF4
	037 Move X0, 0x79D000
	038 Move X0, [X0+152]
	039 Call 0x1C17CF4
	040 Move X0, 0x79D000
	041 Move X0, [X0+160]
	042 Call 0x1C17CF4
	043 Move X0, 0x79D000
	044 Move X0, [X0+168]
	045 Call 0x1C17CF4
	046 Move X0, 0x79D000
	047 Move X0, [X0+176]
	048 Call 0x1C17CF4
	049 Move X0, 0x79D000
	050 Move X0, [X0+200]
	051 Call 0x1C17CF4
	052 Move X0, 0x79D000
	053 Move X0, [X0+320]
	054 Call 0x1C17CF4
	055 Move X0, 0x79D000
	056 Move X0, [X0+328]
	057 Call 0x1C17CF4
	058 Move X0, 0x79D000
	059 Move X0, [X0+216]
	060 Call 0x1C17CF4
	061 Move X0, 0x79D000
	062 Move X0, [X0+72]
	063 Call 0x1C17CF4
	064 Move X0, 0x79D000
	065 Move X0, [X0+80]
	066 Call 0x1C17CF4
	067 Move X0, 0x79D000
	068 Move X0, [X0+88]
	069 Call 0x1C17CF4
	070 Move X0, 0x79D000
	071 Move X0, [X0+256]
	072 Call 0x1C17CF4
	073 Move X0, 0x79D000
	074 Move X0, [X0+264]
	075 Call 0x1C17CF4
	076 Move X0, 0x79D000
	077 Move X0, [X0+336]
	078 Call 0x1C17CF4
	079 Move X0, 0x79C000
	080 Move X0, [X0+3920]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X20+3166], W8
	084 NotImplemented "Instruction MOVI not yet implemented."
	085 Move [X31+192], V0
	086 Move [X31+200], V0
	087 Compare X22, 0
	088 JumpIfEqual {344}
	089 Move X0, [X19+80]
	090 Compare X0, 0
	091 JumpIfEqual {344}
	092 Move X8, 0x79D000
	093 Move X8, [X8+296]
	094 Move X1, [X22+16]
	095 Move X2, [X8]
	096 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {328}
	101 Move X9, 0x79D000
	102 Move W21, [X22+48]
	103 Move W20, [X22+52]
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move X8, [X22+88]
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 Move X9, [X9+264]
	108 Move [X31+256], X8
	109 Move [X31+224], V0
	110 Move [X31+232], V1
	111 Move X9, [X9]
	112 Move X1, [X22+16]
	113 Move X8, [X9+184]
	114 Move [X8], X1
	115 Move X0, [X19+80]
	116 Compare X0, 0
	117 JumpIfEqual {344}
	118 Move X8, 0x79D000
	119 Move X8, [X8+288]
	120 Move X2, [X8]
	121 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {344}
	124 Move [X31+40], X0
	125 Move X0, [X0+16]
	126 Move [X31+60], W20
	127 Compare X0, 0
	128 JumpIfEqual {344}
	129 Move [X31+48], X22
	130 Move X8, 0x79C000
	131 Move X8, [X8+176]
	132 Move X1, [X8]
	133 Add X8, X31, 160
	134 Call HashSet`1<Vector3Int>.GetEnumerator, X0
	135 Move V0, [X31+160]
	136 Move V1, [X31+176]
	137 Add X8, X31, 112
	138 Move X23, 0x79C000
	139 Move X22, 0x79C000
	140 Move X24, 0x79B000
	141 Move X20, 0x79C000
	142 Add X9, X31, 64
	143 Move X23, [X23+160]
	144 Move X22, [X22+280]
	145 Move X24, [X24+3920]
	146 Move X20, [X20+200]
	147 Add X8, X8, 8
	148 Move [X31+32], X8
	149 Add X8, X9, 8
	150 Move [X31+16], X8
	151 Move [X31+192], V0
	152 Move [X31+200], V1
	153 Move X1, [X23]
	154 Add X0, X31, 192
	155 Call Enumerator<Vector3Int>.MoveNext, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {290}
	160 Move X0, [X19+72]
	161 Compare X0, 0
	162 JumpIfEqual {342}
	163 Move X25, [X31+208]
	164 Move W26, [X31+216]
	165 Move X3, [X22]
	166 Move X1, X25
	167 Move X2, X26
	168 Call Dictionary`2<Vector3Int, Object>.get_Item, X0, X1
	169 Move X8, [X24]
	170 Move X27, X0
	171 Move W9, [X8+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {177}
	174 Move X0, X8
	175 Call 0x1C17DFC
	176 Move X8, [X24]
	177 Move X9, [X8+184]
	178 Move X28, [X9+40]
	179 Compare X28, 0
	180 JumpIfNotEqual {203}
	181 Move W9, [X8+224]
	182 Compare W9, 0
	183 JumpIfNotEqual {187}
	184 Move X0, X8
	185 Call 0x1C17DFC
	186 Move X8, [X24]
	187 Move X8, [X8+184]
	188 Move X29, [X8]
	189 Move X8, 0x79C000
	190 Move X8, [X8+256]
	191 Move X0, [X8]
	192 Call 0x1C17F10
	193 Move X8, 0x79C000
	194 Move X8, [X8+336]
	195 Move X28, X0
	196 Move X2, [X8]
	197 Move X1, X29
	198 Move X3, X31
	199 Call Predicate`1<Object>..ctor, X0, X1, X2
	200 Move X8, [X24]
	201 Move X8, [X8+184]
	202 Move [X8+40], X28
	203 Compare X27, 0
	204 JumpIfEqual {343}
	205 Move X2, [X20]
	206 Move X0, X27
	207 Move X1, X28
	208 Call List`1<Object>.FindIndex, X0, X1
	209 Move W28, W0
	210 Move TEMP, X0
	211 And TEMP, TEMP, -2147483648
	212 Compare TEMP, -2147483648
	213 JumpIfEqual {153}
	214 Move X8, 0x79C000
	215 Move X29, [X19+104]
	216 Move X8, [X8+216]
	217 Move X2, [X8]
	218 Move X0, X27
	219 Move W1, W28
	220 Call List`1<Object>.get_Item, X0, X1
	221 Move X1, X0
	222 Compare X29, 0
	223 JumpIfEqual {345}
	224 Move X8, 0x79C000
	225 Move X8, [X8+88]
	226 Move X2, [X8]
	227 Move X0, X29
	228 Call 0x2494D8C, X0, X1
	229 Move X8, 0x79C000
	230 Move X8, [X8+320]
	231 Move X2, [X8]
	232 Move X0, X27
	233 Move W1, W28
	234 Call List`1<Object>.RemoveAt, X0, X1
	235 Move W8, [X27+24]
	236 Move X10, [X31+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move W9, [X31+60]
	239 Move V0, [X31+224]
	240 Move V1, [X31+240]
	241 Move X8, [X31+256]
	242 Move [X31+112], W21
	243 Move [X31+116], W9
	244 And X9, X10, 0
	245 Move X10, [X31+32]
	246 Or X2, X9, X26
	247 Move [X10+32], X8
	248 Move [X10], V0
	249 Move [X10+8], V1
	250 Add X3, X31, 112
	251 Move X0, X19
	252 Move X1, X25
	253 Move [X31+24], X2
	254 Call ProbeBrickIndex.UpdateIndexForVoxel, X0, X1, X2
	255 Move W9, [X31+60]
	256 Move V0, [X31+224]
	257 Move V1, [X31+240]
	258 Move X8, [X31+256]
	259 Move [X31+64], W21
	260 Move [X31+68], W9
	261 Move X9, [X31+8]
	262 Move X10, [X31+16]
	263 And X9, X9, 0
	264 Move [X10+32], X8
	265 Move [X10], V0
	266 Move [X10+8], V1
	267 Or X2, X9, X26
	268 Add X3, X31, 64
	269 Move X0, X19
	270 Move X1, X25
	271 Move [X31+8], X2
	272 Call ProbeBrickIndex.ClearVoxel, X0, X1, X2
	273 Move X0, [X19+96]
	274 Compare X0, 0
	275 JumpIfEqual {346}
	276 Move X8, 0x79C000
	277 Move X8, [X8+72]
	278 Move X2, [X8]
	279 Move X1, X27
	280 Call 0x2494D8C, X0, X1
	281 Move X0, [X19+72]
	282 Compare X0, 0
	283 JumpIfEqual {347}
	284 Move X8, 0x79C000
	285 Move X8, [X8+312]
	286 Move X3, [X8]
	287 Move X1, X25
	288 Move X2, X26
	289 Call Dictionary`2<Vector3Int, Object>.Remove, X0, X1
	290 Move X8, 0x79C000
	291 Move X8, [X8+152]
	292 Add X0, X31, 192
	293 Move X1, [X8]
	294 Call Enumerator<Vector3Int>.Dispose, X0
	295 Move X0, [X19+88]
	296 Move X20, [X31+48]
	297 Compare X0, 0
	298 JumpIfEqual {344}
	299 Move X8, 0x79C000
	300 Move X8, [X8+80]
	301 Move X1, [X31+40]
	302 Move X2, [X8]
	303 Call 0x2494D8C, X0, X1
	304 Move X0, [X19+80]
	305 Move W22, [X31+60]
	306 Compare X0, 0
	307 JumpIfEqual {344}
	308 Move X8, 0x79C000
	309 Move X1, [X20+16]
	310 Move X8, [X8+304]
	311 Move X2, [X8]
	312 Call Dictionary`2<Object, Object>.Remove, X0, X1
	313 Add W8, W22, W21
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move W20, W22
	316 Move X0, [X19+16]
	317 Compare X0, 0
	318 JumpIfEqual {344}
	319 Move W1, W21
	320 Move W2, W31
	321 Move X3, X31
	322 Call BitArray.set_Item, X0, X1, X2
	323 Subtract W20, W20, 1
	324 Add W21, W21, 1
	325 Move W8, [X19+32]
	326 Add W8, W8, W22
	327 Move [X19+32], W8
	328 Move X20, [X31+352]
	329 Move X19, [X31+360]
	330 Move X22, [X31+336]
	331 Move X21, [X31+344]
	332 Move X24, [X31+320]
	333 Move X23, [X31+328]
	334 Move X26, [X31+304]
	335 Move X25, [X31+312]
	336 Move X28, [X31+288]
	337 Move X27, [X31+296]
	338 Move X29, [X31+272]
	339 Move X30, [X31+280]
	340 Add X31, X31, 368
	341 Return 
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Call 0x1C17F20
	347 Call 0x1C17F20
	348 Move X25, X0
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X0, X25
	351 Call 0x3EB2AD0
	352 Move X24, [X0]
	353 Call 0x3EB2AE0
	354 Move X8, 0x79C000
	355 Move X8, [X8+152]
	356 Add X0, X31, 192
	357 Move X1, [X8]
	358 Call Enumerator<Vector3Int>.Dispose, X0
	359 Compare X24, 0
	360 JumpIfEqual {295}
	361 Move X0, X24
	362 Call 0x1C17F18
	363 Move X24, X31
	364 Move X25, X0
	365 Move X8, 0x79C000
	366 Move X8, [X8+152]
	367 Move X1, [X8]
	368 Add X0, X31, 192
	369 Call Enumerator<Vector3Int>.Dispose, X0
	370 Compare X24, 0
	371 JumpIfNotEqual {374}
	372 Move X0, X25
	373 Call 0x1D2D690
	374 Move X0, X24
	375 Call 0x1C17F18
	376 Call 0x1991590

Method: System.Void UpdateIndexForVoxel(UnityEngine.Vector3Int voxel, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellInfo)

Disassembly:
	0x039B6C48 CSEL W10, W10, W11, LT
	0x039B6C4C MUL W8, W9, W8
	0x039B6C50 SBFM W9, W10, 0x2, 0x1F
	0x039B6C54 MUL W8, W8, W9
	0x039B6C58 STR W8, [X19 + 0x80]
	0x039B6C5C LDP X20, X19, [X31 + 0x90]
	0x039B6C60 LDP X24, X23, [X31 + 0x70]
	0x039B6C64 LDP X26, X25, [X31 + 0x60]
	0x039B6C68 LDR X30, [X31 + 0x50]
	0x039B6C6C ADD X31, X31, 0xA0
	0x039B6C70 RET
	0x039B6C74 MOVZ W8, 0x4
	0x039B6C78 STR W1, [X2]
	0x039B6C7C STR W1, [X3]
	0x039B6C80 STR W8, [X4]
	0x039B6C84 RET
	0x039B6C88 SUB X31, X31, 0x80
	0x039B6C8C STP X29, X30, [X31 + 0x20]
	0x039B6C90 STP X28, X27, [X31 + 0x30]
	0x039B6C94 STP X26, X25, [X31 + 0x40]
	0x039B6C98 STP X24, X23, [X31 + 0x50]
	0x039B6C9C STP X22, X21, [X31 + 0x60]
	0x039B6CA0 STP X20, X19, [X31 + 0x70]
	0x039B6CA4 ADRP X22, 0xA2B000
	0x039B6CA8 LDRB W9, [X22 + 0xC74]
	0x039B6CAC MOV X20, X6
	0x039B6CB0 MOV W26, W5
	0x039B6CB4 MOV W24, W4
	0x039B6CB8 MOV X21, X3
	0x039B6CBC MOV W25, W1
	0x039B6CC0 MOV W27, W0
	0x039B6CC4 MOV X19, X8
	0x039B6CC8 STR W2, [X31 + 0x18]
	0x039B6CCC TBNZ X9, 0x0, 0x39B6D44
	0x039B6CD0 ADRP X0, 0x79C000
	0x039B6CD4 LDR X0, [X0 + 0x1C8]
	0x039B6CD8 BL 0x1C16CF4
	0x039B6CDC ADRP X0, 0x79C000
	0x039B6CE0 LDR X0, [X0 + 0x1D0]
	0x039B6CE4 BL 0x1C16CF4
	0x039B6CE8 ADRP X0, 0x79C000
	0x039B6CEC LDR X0, [X0 + 0x1D8]
	0x039B6CF0 BL 0x1C16CF4
	0x039B6CF4 ADRP X0, 0x79C000
	0x039B6CF8 LDR X0, [X0 + 0x1E0]
	0x039B6CFC BL 0x1C16CF4
	0x039B6D00 ADRP X0, 0x79C000
	0x039B6D04 LDR X0, [X0 + 0x1E8]
	0x039B6D08 BL 0x1C16CF4
	0x039B6D0C ADRP X0, 0x79C000
	0x039B6D10 LDR X0, [X0 + 0x1F0]
	0x039B6D14 BL 0x1C16CF4
	0x039B6D18 ADRP X0, 0x79C000
	0x039B6D1C LDR X0, [X0 + 0x1F8]
	0x039B6D20 BL 0x1C16CF4
	0x039B6D24 ADRP X0, 0x79C000
	0x039B6D28 LDR X0, [X0 + 0x200]
	0x039B6D2C BL 0x1C16CF4
	0x039B6D30 ADRP X0, 0x79C000
	0x039B6D34 LDR X0, [X0 + 0x208]
	0x039B6D38 BL 0x1C16CF4
	0x039B6D3C MOVZ W8, 0x1
	0x039B6D40 STRB W8, [X22 + 0xC74]
	0x039B6D44 ADRP X8, 0x79C000
	0x039B6D48 ADRP X29, 0x79C000
	0x039B6D4C LDR X8, [X8 + 0x200]
	0x039B6D50 LDR X29, [X29 + 0x1F0]
	0x039B6D54 ADD W9, W27, 0x3F
	0x039B6D58 CMP W27, 0x0
	0x039B6D5C MOVZ W10, 0x3F
	0x039B6D60 MOVK W10, 0x1000000
	0x039B6D64 CSEL W9, W9, W27, LT
	0x039B6D68 MOVZ W22, 0x800
	0x039B6D6C CMP W27, W10
	0x039B6D70 SBFM W9, W9, 0x6, 0x1F
	0x039B6D74 MOVZ W23, 0x800
	0x039B6D78 B.GT 0x39B6DA4
	0x039B6D7C ADD W10, W9, 0x1FF
	0x039B6D80 ADD W11, W9, 0x3FE
	0x039B6D84 CMP W10, 0x0
	0x039B6D88 MOVZ W13, 0x8040
	0x039B6D8C CSEL W10, W11, W10, LT
	0x039B6D90 UBFM W12, W9, 0x1E, 0x1D
	0x039B6D94 CMP W27, W13
	0x039B6D98 SBFM W10, W10, 0x9, 0x1F
	0x039B6D9C CSEL W23, W12, W22, LT
	0x039B6DA0 UBFM W22, W10, 0x1E, 0x1D
	0x039B6DA4 MOVN W10, 0xFFFC0000
	0x039B6DA8 STR W31, [X20]
	0x039B6DAC ORR W11, W31, 0x7FFFE
	0x039B6DB0 ADD W10, W9, W10
	0x039B6DB4 LDR X1, [X8]
	0x039B6DB8 ADD W9, W9, W11
	0x039B6DBC CMP W10, 0x0
	0x039B6DC0 CSEL W8, W9, W10, LT
	0x039B6DC4 MOVZ W12, 0x8
	0x039B6DC8 MOVZ W13, 0x6D
	0x039B6DCC ANDS W31, W25, 0x1
	0x039B6DD0 SBFM W8, W8, 0x12, 0x1F
	0x039B6DD4 MOV X0, X21
	0x039B6DD8 MOV X2, X31
	0x039B6DDC UBFM W25, W8, 0x1E, 0x1D
	0x039B6DE0 CSEL W28, W13, W12, NE
	0x039B6DE4 BL 0x321B938
	0x039B6DE8 AND W27, W24, 0x1
	0x039B6DEC MOV X4, X0
	0x039B6DF0 MOVZ W3, 0x30
	0x039B6DF4 MOV W0, W23
	0x039B6DF8 MOV W1, W22
	0x039B6DFC MOV W2, W25
	0x039B6E00 MOV W5, W27
	0x039B6E04 MOV X6, X20
	0x039B6E08 BL 0x39B7E04
	0x039B6E0C LDR X1, [X29]
	0x039B6E10 STR X0, [X31 + 0x10]
	0x039B6E14 MOV X0, X21
	0x039B6E18 MOV X2, X31
	0x039B6E1C BL 0x321B938
	0x039B6E20 MOV X4, X0
	0x039B6E24 MOV W0, W23
	0x039B6E28 MOV W1, W22
	0x039B6E2C MOV W2, W25
	0x039B6E30 MOV W3, W28
	0x039B6E34 MOV W5, W27
	0x039B6E38 MOV X6, X20
	0x039B6E3C BL 0x39B7E04
	0x039B6E40 ADRP X8, 0x79C000
	0x039B6E44 LDR X8, [X8 + 0x1E8]
	0x039B6E48 STR X0, [X31 + 0x8]
	0x039B6E4C MOV X0, X21
	0x039B6E50 MOV X2, X31
	0x039B6E54 LDR X1, [X8]
	0x039B6E58 BL 0x321B938
	0x039B6E5C MOV X4, X0
	0x039B6E60 MOV W0, W23
	0x039B6E64 MOV W1, W22
	0x039B6E68 MOV W2, W25
	0x039B6E6C MOV W3, W28

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X23, 0xA2C000
	012 Move W8, [X23+3167]
	013 Move X19, X3
	014 Move X22, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x79D000
	022 Move X0, [X0+280]
	023 Call 0x1C17CF4
	024 Move X0, 0x79D000
	025 Move X0, [X0+288]
	026 Call 0x1C17CF4
	027 Move X0, 0x79C000
	028 Move X0, [X0+4088]
	029 Call 0x1C17CF4
	030 Move X0, 0x79D000
	031 Move X0, [X0+16]
	032 Call 0x1C17CF4
	033 Move X0, 0x79D000
	034 Move X0, [X0+40]
	035 Call 0x1C17CF4
	036 Move X0, 0x79D000
	037 Move X0, [X0+64]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3167], W8
	041 Move [X31+128], X31
	042 Move [X31+136], X31
	043 Move [X31+144], X31
	044 Move V1, [X19+16]
	045 Move V0, [X19+32]
	046 Move V2, [X19]
	047 And X22, X22, 0
	048 Add X3, X31, 80
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X22
	052 Move [X31+96], V1
	053 Move [X31+104], V0
	054 Move [X31+5], V2
	055 Call ProbeBrickIndex.ClearVoxel, X0, X1, X2
	056 Move X0, [X21+72]
	057 Compare X0, 0
	058 JumpIfEqual {131}
	059 Move X8, 0x79D000
	060 Move X8, [X8+280]
	061 Move X1, X20
	062 Move X2, X22
	063 Move X3, [X8]
	064 Call Dictionary`2<Vector3Int, Object>.get_Item, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {131}
	067 Move X8, 0x79D000
	068 Move X8, [X8+64]
	069 Move X25, 0x79D000
	070 Move X26, 0x79D000
	071 Move X24, 0x79C000
	072 Move X1, [X8]
	073 Move X25, [X25+16]
	074 Move X26, [X26+288]
	075 Move X24, [X24+4088]
	076 Add X8, X31, 56
	077 Call List`1<Object>.GetEnumerator, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X8, [X31+72]
	080 Move [X31+8], V0
	081 Move [X31+144], X8
	082 Move X1, [X25]
	083 Add X0, X31, 128
	084 Call Enumerator<Object>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {114}
	089 Move X8, [X31+144]
	090 Compare X8, 0
	091 JumpIfEqual {129}
	092 Move X0, [X21+80]
	093 Compare X0, 0
	094 JumpIfEqual {130}
	095 Move X1, [X8+16]
	096 Move X2, [X26]
	097 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	098 Compare X0, 0
	099 JumpIfEqual {128}
	100 Move V2, [X19+16]
	101 Move V0, [X19+32]
	102 Move V1, [X19]
	103 Move X3, [X0+24]
	104 And X8, X23, 0
	105 Or X23, X8, X22
	106 Move [X31+16], V2
	107 Move [X31+24], V0
	108 Move [X31], V1
	109 Add X5, X31, 0
	110 Move X0, X21
	111 Move X1, X20
	112 Move X2, X23
	113 Call ProbeBrickIndex.UpdateIndexForVoxel, X0, X1, X2, X3, X4
	114 Move X1, [X24]
	115 Add X0, X31, 128
	116 Call Enumerator<Object>.Dispose, X0
	117 Move X20, [X31+224]
	118 Move X19, [X31+232]
	119 Move X22, [X31+208]
	120 Move X21, [X31+216]
	121 Move X24, [X31+192]
	122 Move X23, [X31+200]
	123 Move X26, [X31+176]
	124 Move X25, [X31+184]
	125 Move X30, [X31+160]
	126 Add X31, X31, 240
	127 Return 
	128 Call 0x1C17F20
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Move X19, X0
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X19
	135 Call 0x3EB2AD0
	136 Move X20, [X0]
	137 Call 0x3EB2AE0
	138 Move X1, [X24]
	139 Add X0, X31, 128
	140 Call Enumerator<Object>.Dispose, X0
	141 Compare X20, 0
	142 JumpIfEqual {117}
	143 Move X0, X20
	144 Call 0x1C17F18
	145 Move X20, X31
	146 Move X19, X0
	147 Move X1, [X24]
	148 Add X0, X31, 128
	149 Call Enumerator<Object>.Dispose, X0
	150 Compare X20, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X19
	153 Call 0x1D2D690
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Call 0x1991590

Method: System.Void UpdatePhysicalIndex(UnityEngine.Vector3Int brickMin, UnityEngine.Vector3Int brickMax, System.Int32 value, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellInfo)

Disassembly:
	0x039B5E3C BL 0x1C16F18
	0x039B5E40 MOV X20, X31
	0x039B5E44 B 0x39B5E4C
	0x039B5E48 MOV X19, X0
	0x039B5E4C LDR X1, [X24]
	0x039B5E50 ADD X0, X31, 0x80
	0x039B5E54 BL 0x2BC434C
	0x039B5E58 CBNZ X20, 0x39B5E64
	0x039B5E5C MOV X0, X19
	0x039B5E60 BL 0x1D2C690
	0x039B5E64 MOV X0, X20
	0x039B5E68 BL 0x1C16F18
	0x039B5E6C BL 0x1990590
	0x039B5E70 SUB X31, X31, 0x170
	0x039B5E74 STP X29, X30, [X31 + 0x110]
	0x039B5E78 STP X28, X27, [X31 + 0x120]
	0x039B5E7C STP X26, X25, [X31 + 0x130]
	0x039B5E80 STP X24, X23, [X31 + 0x140]
	0x039B5E84 STP X22, X21, [X31 + 0x150]
	0x039B5E88 STP X20, X19, [X31 + 0x160]
	0x039B5E8C ADRP X20, 0xA2C000
	0x039B5E90 LDRB W8, [X20 + 0xC5E]
	0x039B5E94 MOV X22, X1
	0x039B5E98 MOV X19, X0
	0x039B5E9C TBNZ X8, 0x0, 0x39B5F98
	0x039B5EA0 ADRP X0, 0x79D000
	0x039B5EA4 LDR X0, [X0 + 0x128]
	0x039B5EA8 BL 0x1C16CF4
	0x039B5EAC ADRP X0, 0x79D000
	0x039B5EB0 LDR X0, [X0 + 0x130]
	0x039B5EB4 BL 0x1C16CF4
	0x039B5EB8 ADRP X0, 0x79D000
	0x039B5EBC LDR X0, [X0 + 0x138]
	0x039B5EC0 BL 0x1C16CF4
	0x039B5EC4 ADRP X0, 0x79D000
	0x039B5EC8 LDR X0, [X0 + 0x118]
	0x039B5ECC BL 0x1C16CF4
	0x039B5ED0 ADRP X0, 0x79D000
	0x039B5ED4 LDR X0, [X0 + 0x120]
	0x039B5ED8 BL 0x1C16CF4
	0x039B5EDC ADRP X0, 0x79D000
	0x039B5EE0 LDR X0, [X0 + 0x98]
	0x039B5EE4 BL 0x1C16CF4
	0x039B5EE8 ADRP X0, 0x79D000
	0x039B5EEC LDR X0, [X0 + 0xA0]
	0x039B5EF0 BL 0x1C16CF4
	0x039B5EF4 ADRP X0, 0x79D000
	0x039B5EF8 LDR X0, [X0 + 0xA8]
	0x039B5EFC BL 0x1C16CF4
	0x039B5F00 ADRP X0, 0x79D000
	0x039B5F04 LDR X0, [X0 + 0xB0]
	0x039B5F08 BL 0x1C16CF4
	0x039B5F0C ADRP X0, 0x79D000
	0x039B5F10 LDR X0, [X0 + 0xC8]
	0x039B5F14 BL 0x1C16CF4
	0x039B5F18 ADRP X0, 0x79D000
	0x039B5F1C LDR X0, [X0 + 0x140]
	0x039B5F20 BL 0x1C16CF4
	0x039B5F24 ADRP X0, 0x79D000
	0x039B5F28 LDR X0, [X0 + 0x148]
	0x039B5F2C BL 0x1C16CF4
	0x039B5F30 ADRP X0, 0x79D000
	0x039B5F34 LDR X0, [X0 + 0xD8]
	0x039B5F38 BL 0x1C16CF4
	0x039B5F3C ADRP X0, 0x79D000
	0x039B5F40 LDR X0, [X0 + 0x48]
	0x039B5F44 BL 0x1C16CF4
	0x039B5F48 ADRP X0, 0x79D000
	0x039B5F4C LDR X0, [X0 + 0x50]
	0x039B5F50 BL 0x1C16CF4
	0x039B5F54 ADRP X0, 0x79D000
	0x039B5F58 LDR X0, [X0 + 0x58]
	0x039B5F5C BL 0x1C16CF4
	0x039B5F60 ADRP X0, 0x79D000
	0x039B5F64 LDR X0, [X0 + 0x100]
	0x039B5F68 BL 0x1C16CF4
	0x039B5F6C ADRP X0, 0x79D000
	0x039B5F70 LDR X0, [X0 + 0x108]
	0x039B5F74 BL 0x1C16CF4
	0x039B5F78 ADRP X0, 0x79D000
	0x039B5F7C LDR X0, [X0 + 0x150]
	0x039B5F80 BL 0x1C16CF4
	0x039B5F84 ADRP X0, 0x79C000
	0x039B5F88 LDR X0, [X0 + 0xF50]
	0x039B5F8C BL 0x1C16CF4
	0x039B5F90 MOVZ W8, 0x1
	0x039B5F94 STRB W8, [X20 + 0xC5E]
	0x039B5F98 MOVI V0.2D, 0x0
	0x039B5F9C STP V0, V0, [X31 + 0xC0]
	0x039B5FA0 CBZ X22, 0x39B6310
	0x039B5FA4 LDR X0, [X19 + 0x50]
	0x039B5FA8 CBZ X0, 0x39B6310
	0x039B5FAC ADRP X8, 0x79D000
	0x039B5FB0 LDR X8, [X8 + 0x128]
	0x039B5FB4 LDR X1, [X22 + 0x10]
	0x039B5FB8 LDR X2, [X8]
	0x039B5FBC BL 0x2AA528C
	0x039B5FC0 TBZ X0, 0x0, 0x39B62E8
	0x039B5FC4 ADRP X9, 0x79D000
	0x039B5FC8 LDP W21, W20, [X22 + 0x30]
	0x039B5FCC LDUR V0, [X22 + 0x38]
	0x039B5FD0 LDR X8, [X22 + 0x58]
	0x039B5FD4 LDUR V1, [X22 + 0x48]
	0x039B5FD8 LDR X9, [X9 + 0x108]
	0x039B5FDC STR X8, [X31 + 0x100]
	0x039B5FE0 STP V0, V1, [X31 + 0xE0]
	0x039B5FE4 LDR X9, [X9]
	0x039B5FE8 LDR X1, [X22 + 0x10]
	0x039B5FEC LDR X8, [X9 + 0xB8]
	0x039B5FF0 STR X1, [X8]
	0x039B5FF4 LDR X0, [X19 + 0x50]
	0x039B5FF8 CBZ X0, 0x39B6310
	0x039B5FFC ADRP X8, 0x79D000
	0x039B6000 LDR X8, [X8 + 0x120]
	0x039B6004 LDR X2, [X8]
	0x039B6008 BL 0x2AA5018
	0x039B600C CBZ X0, 0x39B6310
	0x039B6010 STR X0, [X31 + 0x28]
	0x039B6014 LDR X0, [X0 + 0x10]
	0x039B6018 STR W20, [X31 + 0x3C]
	0x039B601C CBZ X0, 0x39B6310
	0x039B6020 STR X22, [X31 + 0x30]
	0x039B6024 ADRP X8, 0x79C000
	0x039B6028 LDR X8, [X8 + 0xB0]
	0x039B602C LDR X1, [X8]
	0x039B6030 ADD X8, X31, 0xA0
	0x039B6034 BL 0x2DD2668
	0x039B6038 LDP V0, V1, [X31 + 0xA0]
	0x039B603C ADD X8, X31, 0x70
	0x039B6040 ADRP X23, 0x79C000
	0x039B6044 ADRP X22, 0x79C000
	0x039B6048 ADRP X24, 0x79B000
	0x039B604C ADRP X20, 0x79C000
	0x039B6050 ADD X9, X31, 0x40
	0x039B6054 LDR X23, [X23 + 0xA0]
	0x039B6058 LDR X22, [X22 + 0x118]
	0x039B605C LDR X24, [X24 + 0xF50]
	0x039B6060 LDR X20, [X20 + 0xC8]
	0x039B6064 ADD X8, X8, 0x8
	0x039B6068 STR X8, [X31 + 0x20]
	0x039B606C ADD X8, X9, 0x8
	0x039B6070 STR X8, [X31 + 0x10]
	0x039B6074 STP V0, V1, [X31 + 0xC0]
	0x039B6078 LDR X1, [X23]
	0x039B607C ADD X0, X31, 0xC0
	0x039B6080 BL 0x2BD0BE4
	0x039B6084 TBZ X0, 0x0, 0x39B6254
	0x039B6088 LDR X0, [X19 + 0x48]
	0x039B608C CBZ X0, 0x39B6308
	0x039B6090 LDR X25, [X31 + 0xD0]
	0x039B6094 LDR W26, [X31 + 0xD8]
	0x039B6098 LDR X3, [X22]
	0x039B609C MOV X1, X25
	0x039B60A0 MOV X2, X26
	0x039B60A4 BL 0x2B26F08
	0x039B60A8 LDR X8, [X24]
	0x039B60AC MOV X27, X0
	0x039B60B0 LDR W9, [X8 + 0xE0]
	0x039B60B4 CBNZ W9, 0x39B60C4
	0x039B60B8 MOV X0, X8
	0x039B60BC BL 0x1C16DFC
	0x039B60C0 LDR X8, [X24]
	0x039B60C4 LDR X9, [X8 + 0xB8]
	0x039B60C8 LDR X28, [X9 + 0x28]
	0x039B60CC CBNZ X28, 0x39B6124
	0x039B60D0 LDR W9, [X8 + 0xE0]
	0x039B60D4 CBNZ W9, 0x39B60E4
	0x039B60D8 MOV X0, X8
	0x039B60DC BL 0x1C16DFC
	0x039B60E0 LDR X8, [X24]
	0x039B60E4 LDR X8, [X8 + 0xB8]
	0x039B60E8 LDR X29, [X8]
	0x039B60EC ADRP X8, 0x79C000
	0x039B60F0 LDR X8, [X8 + 0x100]
	0x039B60F4 LDR X0, [X8]
	0x039B60F8 BL 0x1C16F10
	0x039B60FC ADRP X8, 0x79C000
	0x039B6100 LDR X8, [X8 + 0x150]
	0x039B6104 MOV X28, X0
	0x039B6108 LDR X2, [X8]
	0x039B610C MOV X1, X29
	0x039B6110 MOV X3, X31
	0x039B6114 BL 0x24AD1FC
	0x039B6118 LDR X8, [X24]
	0x039B611C LDR X8, [X8 + 0xB8]
	0x039B6120 STR X28, [X8 + 0x28]
	0x039B6124 CBZ X27, 0x39B630C
	0x039B6128 LDR X2, [X20]
	0x039B612C MOV X0, X27
	0x039B6130 MOV X1, X28
	0x039B6134 BL 0x301C7DC
	0x039B6138 MOV W28, W0
	0x039B613C TBNZ X0, 0x1F, 0x39B6078
	0x039B6140 ADRP X8, 0x79C000
	0x039B6144 LDR X29, [X19 + 0x68]
	0x039B6148 LDR X8, [X8 + 0xD8]
	0x039B614C LDR X2, [X8]
	0x039B6150 MOV X0, X27
	0x039B6154 MOV W1, W28
	0x039B6158 BL 0x301BCCC
	0x039B615C MOV X1, X0
	0x039B6160 CBZ X29, 0x39B6314
	0x039B6164 ADRP X8, 0x79C000
	0x039B6168 LDR X8, [X8 + 0x58]
	0x039B616C LDR X2, [X8]
	0x039B6170 MOV X0, X29
	0x039B6174 BL 0x2493D8C
	0x039B6178 ADRP X8, 0x79C000
	0x039B617C LDR X8, [X8 + 0x140]
	0x039B6180 LDR X2, [X8]
	0x039B6184 MOV X0, X27
	0x039B6188 MOV W1, W28
	0x039B618C BL 0x301DA48
	0x039B6190 LDR W8, [X27 + 0x18]
	0x039B6194 LDR X10, [X31 + 0x18]
	0x039B6198 CMP W8, 0x1
	0x039B619C B.LT 0x39B61DC
	0x039B61A0 LDR W9, [X31 + 0x3C]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D8
	003 Move [X31+48], X29
	004 Move [X31+56], X30
	005 Move [X31+64], X28
	006 Move [X31+72], X27
	007 Move [X31+80], X26
	008 Move [X31+88], X25
	009 Move [X31+96], X24
	010 Move [X31+104], X23
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move [X31+40], X4
	016 Move [X31+24], X2
	017 Move X24, 0xA2D000
	018 Move X25, 0x79D000
	019 Move W8, [X24+3168]
	020 Move X25, [X25+3912]
	021 Move X21, X6
	022 Move W19, W5
	023 Move X22, X3
	024 Move X23, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x73F000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move X0, 0x79D000
	034 Move X0, [X0+3912]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+3168], W8
	038 Move X0, [X25]
	039 Move W29, [X21+8]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move W26, [X21+44]
	042 Move W8, [X0+224]
	043 Move W24, W29
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move W24, [X21+8]
	048 NotImplemented "Instruction SCVTF not yet implemented."
	049 Move S0, 3
	050 Call 0x3EB2B50
	051 Move W9, 0x7F800000
	052 Move S8, W9
	053 NotImplemented "Instruction FCVTZS not yet implemented."
	054 Move W27, 0x80000000
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 Move S0, 3
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Call 0x3EB2B50
	060 Move X25, 0xA2D000
	061 Move W8, [X25+3257]
	062 NotImplemented "Instruction FCVTZS not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x79D000
	068 Move X0, [X0+3912]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X25+3257], W8
	072 Move X25, 0x79D000
	073 Move X25, [X25+3912]
	074 Move X0, [X25]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X25]
	080 Move X8, [X0+184]
	081 Move X8, [X8+8]
	082 Compare X8, 0
	083 JumpIfEqual {252}
	084 Move X11, [X31+24]
	085 Move X12, [X31+40]
	086 And X8, X28, 0
	087 Subtract X13, X23, X8
	088 Subtract X8, X22, X8
	089 Move V0, [X21+8]
	090 Subtract X9, X23, X28
	091 Subtract X10, X22, X28
	092 Subtract W11, W11, W26
	093 Subtract W12, W12, W26
	094 Move X8, X8
	095 ShiftRight X8, 32
	096 And X8, X8, 0x7FFFFFFF
	097 NotImplemented "Instruction SDIV not yet implemented."
	098 NotImplemented "Instruction SDIV not yet implemented."
	099 Move W26, [X21+12]
	100 Move W23, [X21+16]
	101 NotImplemented "Instruction SDIV not yet implemented."
	102 NotImplemented "Instruction SDIV not yet implemented."
	103 NotImplemented "Instruction SDIV not yet implemented."
	104 Move W24, [X21+20]
	105 Move [X31+40], W9
	106 Move X9, X13
	107 ShiftRight X9, 32
	108 And X9, X9, 0x7FFFFFFF
	109 NotImplemented "Instruction SDIV not yet implemented."
	110 NotImplemented "Instruction SCVTF not yet implemented."
	111 Move S0, 3
	112 Move X29, X9
	113 ShiftRight X29, 32
	114 And X29, X29, 0x7FFFFFFF
	115 Move X22, X8
	116 ShiftRight X22, 32
	117 And X22, X22, 0x7FFFFFFF
	118 Call 0x3EB2B50
	119 Move W9, 0x7F800000
	120 Move X13, 0x73F000
	121 Move S1, W9
	122 Move W11, [X21+24]
	123 Move W9, [X21+28]
	124 Move W12, [X21]
	125 Move X13, [X13+1448]
	126 NotImplemented "Instruction FCVTZS not yet implemented."
	127 Move W10, 0x80000000
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Move X0, [X13]
	131 NotImplemented "Instruction SDIV not yet implemented."
	132 NotImplemented "Instruction SDIV not yet implemented."
	133 NotImplemented "Instruction SDIV not yet implemented."
	134 NotImplemented "Instruction SDIV not yet implemented."
	135 NotImplemented "Instruction SDIV not yet implemented."
	136 Move W9, [X31+40]
	137 Move W10, 243
	138 Move [X31+12], W15
	139 Move [X31+16], W25
	140 Subtract W24, W25, W15
	141 Subtract W25, W9, W14
	142 Subtract X9, X29, X13
	143 Move X8, X8
	144 ShiftRight X8, 32
	145 And X8, X8, 0x7FFFFFFF
	146 Subtract W26, W27, W15
	147 Subtract W27, W28, W14
	148 Multiply W12, W12, W10
	149 Move W10, [X0+224]
	150 Move X28, X9
	151 ShiftRight X28, 32
	152 And X28, X28, 0x7FFFFFFF
	153 Subtract X8, X8, X13
	154 Subtract W11, W11, W15
	155 Add W9, W12, W28
	156 Move X21, X8
	157 ShiftRight X21, 32
	158 And X21, X21, 0x7FFFFFFF
	159 Subtract X14, X22, X13
	160 Multiply W23, W11, W21
	161 NotImplemented "Instruction MADD not yet implemented."
	162 Move X29, X14
	163 ShiftRight X29, 32
	164 And X29, X29, 0x7FFFFFFF
	165 NotImplemented "Instruction MADD not yet implemented."
	166 Move [X31+40], W12
	167 Move [X31+8], W11
	168 Move [X31+24], W8
	169 Compare W10, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Subtract W1, W27, 1
	173 Move W0, W31
	174 Move X2, X31
	175 Call Math.Max, X0, X1
	176 Move [X31+20], W0
	177 Subtract W1, W26, 1
	178 Move W0, W31
	179 Move X2, X31
	180 Call Math.Max, X0, X1
	181 Move W22, W0
	182 Subtract W1, W29, 1
	183 Move W0, W31
	184 Move X2, X31
	185 Call Math.Max, X0, X1
	186 Move W9, [X31+40]
	187 Move W10, [X31+20]
	188 Move W1, [X31+24]
	189 Move W8, [X20+116]
	190 Move X2, X31
	191 NotImplemented "Instruction MADD not yet implemented."
	192 NotImplemented "Instruction MADD not yet implemented."
	193 Add W22, W9, W0
	194 Move W0, W8
	195 Call Math.Min, X0, X1
	196 Move W8, [X20+120]
	197 Move [X20+116], W0
	198 Move W1, W22
	199 Move X2, X31
	200 Move W0, W8
	201 Call Math.Max, X0, X1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move [X20+120], W0
	204 Move W8, [X31+16]
	205 Move W9, [X31+8]
	206 NotImplemented "Instruction MADD not yet implemented."
	207 Move W9, [X31+12]
	208 Subtract W8, W8, W9
	209 Move W9, [X31+40]
	210 NotImplemented "Instruction MADD not yet implemented."
	211 Add W8, W8, W28
	212 Subtract W9, W29, W28
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W10, W8
	215 Move W11, W25
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X12, [X20+48]
	218 Compare X12, 0
	219 JumpIfEqual {252}
	220 Move W13, [X12+24]
	221 Move W14, W9
	222 Move W15, W10
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add X16, X12, W15
	225 Subtract W14, W14, 1
	226 Add W15, W15, 1
	227 Move [X16+32], W19
	228 Add W11, W11, 1
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add W10, W10, W23
	231 Add W24, W24, 1
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add W8, W8, W21
	234 Move W8, 1
	235 Move [X20+112], W8
	236 Move X20, [X31+128]
	237 Move X19, [X31+136]
	238 Move X22, [X31+112]
	239 Move X21, [X31+120]
	240 Move X24, [X31+96]
	241 Move X23, [X31+104]
	242 Move X26, [X31+80]
	243 Move X25, [X31+88]
	244 Move X28, [X31+64]
	245 Move X27, [X31+72]
	246 Move X29, [X31+48]
	247 Move X30, [X31+56]
	248 Move V8, [X31+32]
	249 Add X31, X31, 144
	250 Return 
	251 Call 0x1C17F28
	252 Call 0x1C17F20

Method: System.Void ClipToIndexSpace(UnityEngine.Vector3Int pos, System.Int32 subdiv, out UnityEngine.Vector3Int outMinpos, out UnityEngine.Vector3Int outMaxpos, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellInfo)

Disassembly:
	0x039B5C90 BL 0x1C16CF4
	0x039B5C94 ADRP X0, 0x79C000
	0x039B5C98 LDR X0, [X0 + 0xFF8]
	0x039B5C9C BL 0x1C16CF4
	0x039B5CA0 ADRP X0, 0x79D000
	0x039B5CA4 LDR X0, [X0 + 0x10]
	0x039B5CA8 BL 0x1C16CF4
	0x039B5CAC ADRP X0, 0x79D000
	0x039B5CB0 LDR X0, [X0 + 0x28]
	0x039B5CB4 BL 0x1C16CF4
	0x039B5CB8 ADRP X0, 0x79D000
	0x039B5CBC LDR X0, [X0 + 0x40]
	0x039B5CC0 BL 0x1C16CF4
	0x039B5CC4 MOVZ W8, 0x1
	0x039B5CC8 STRB W8, [X23 + 0xC5F]
	0x039B5CCC STP X31, X31, [X31 + 0x80]
	0x039B5CD0 STR X31, [X31 + 0x90]
	0x039B5CD4 LDP V1, V0, [X19 + 0x10]
	0x039B5CD8 LDR V2, [X19]
	0x039B5CDC AND X22, X22, 0x0
	0x039B5CE0 ADD X3, X31, 0x50
	0x039B5CE4 MOV X0, X21
	0x039B5CE8 MOV X1, X20
	0x039B5CEC MOV X2, X22
	0x039B5CF0 STP V1, V0, [X31 + 0x60]
	0x039B5CF4 STR V2, [X31 + 0x5]
	0x039B5CF8 BL 0x39B4BE8
	0x039B5CFC LDR X0, [X21 + 0x48]
	0x039B5D00 CBZ X0, 0x39B5DF4
	0x039B5D04 ADRP X8, 0x79D000
	0x039B5D08 LDR X8, [X8 + 0x118]
	0x039B5D0C MOV X1, X20
	0x039B5D10 MOV X2, X22
	0x039B5D14 LDR X3, [X8]
	0x039B5D18 BL 0x2B26F08
	0x039B5D1C CBZ X0, 0x39B5DF4
	0x039B5D20 ADRP X8, 0x79D000
	0x039B5D24 LDR X8, [X8 + 0x40]
	0x039B5D28 ADRP X25, 0x79D000
	0x039B5D2C ADRP X26, 0x79D000
	0x039B5D30 ADRP X24, 0x79C000
	0x039B5D34 LDR X1, [X8]
	0x039B5D38 LDR X25, [X25 + 0x10]
	0x039B5D3C LDR X26, [X26 + 0x120]
	0x039B5D40 LDR X24, [X24 + 0xFF8]
	0x039B5D44 ADD X8, X31, 0x38
	0x039B5D48 BL 0x301CB58
	0x039B5D4C LDUR V0, [X31 + 0x38]
	0x039B5D50 LDR X8, [X31 + 0x48]
	0x039B5D54 STR V0, [X31 + 0x8]
	0x039B5D58 STR X8, [X31 + 0x90]
	0x039B5D5C LDR X1, [X25]
	0x039B5D60 ADD X0, X31, 0x80
	0x039B5D64 BL 0x2BC4350
	0x039B5D68 TBZ X0, 0x0, 0x39B5DC0
	0x039B5D6C LDR X8, [X31 + 0x90]
	0x039B5D70 CBZ X8, 0x39B5DEC
	0x039B5D74 LDR X0, [X21 + 0x50]
	0x039B5D78 CBZ X0, 0x39B5DF0
	0x039B5D7C LDR X1, [X8 + 0x10]
	0x039B5D80 LDR X2, [X26]
	0x039B5D84 BL 0x2AA5018
	0x039B5D88 CBZ X0, 0x39B5DE8
	0x039B5D8C LDP V2, V0, [X19 + 0x10]
	0x039B5D90 LDR V1, [X19]
	0x039B5D94 LDR X3, [X0 + 0x18]
	0x039B5D98 AND X8, X23, 0x0
	0x039B5D9C ORR X23, X8, X22, 0x0
	0x039B5DA0 STP V2, V0, [X31 + 0x10]
	0x039B5DA4 STR V1, [X31]
	0x039B5DA8 ADD X5, X31, 0x0
	0x039B5DAC MOV X0, X21
	0x039B5DB0 MOV X1, X20
	0x039B5DB4 MOV X2, X23
	0x039B5DB8 BL 0x39B63D4
	0x039B5DBC B 0x39B5D5C
	0x039B5DC0 LDR X1, [X24]
	0x039B5DC4 ADD X0, X31, 0x80
	0x039B5DC8 BL 0x2BC434C
	0x039B5DCC LDP X20, X19, [X31 + 0xE0]
	0x039B5DD0 LDP X22, X21, [X31 + 0xD0]
	0x039B5DD4 LDP X24, X23, [X31 + 0xC0]
	0x039B5DD8 LDP X26, X25, [X31 + 0xB0]
	0x039B5DDC LDR X30, [X31 + 0xA0]
	0x039B5DE0 ADD X31, X31, 0xF0
	0x039B5DE4 RET
	0x039B5DE8 BL 0x1C16F20
	0x039B5DEC BL 0x1C16F20
	0x039B5DF0 BL 0x1C16F20
	0x039B5DF4 BL 0x1C16F20
	0x039B5DF8 B 0x39B5E0C
	0x039B5DFC B 0x39B5E0C
	0x039B5E00 B 0x39B5E0C
	0x039B5E04 B 0x39B5E0C
	0x039B5E08 B 0x39B5E0C
	0x039B5E0C MOV X19, X0
	0x039B5E10 CMP W1, 0x1
	0x039B5E14 B.NE 0x39B5E40
	0x039B5E18 MOV X0, X19
	0x039B5E1C BL 0x3EB1AD0
	0x039B5E20 LDR X20, [X0]
	0x039B5E24 BL 0x3EB1AE0
	0x039B5E28 LDR X1, [X24]
	0x039B5E2C ADD X0, X31, 0x80
	0x039B5E30 BL 0x2BC434C
	0x039B5E34 CBZ X20, 0x39B5DCC
	0x039B5E38 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+16], X2
	015 Move [X31+24], X5
	016 Move [X31], X0
	017 Move X22, 0xA2D000
	018 Move X21, 0x79D000
	019 Move W8, [X22+3169]
	020 Move X21, [X21+3912]
	021 Move X24, X6
	022 Move X20, X4
	023 Move W25, W3
	024 Move X19, X1
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x79D000
	030 Move X0, [X0+3912]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3169], W8
	034 Move X0, [X21]
	035 Move X26, X19
	036 ShiftRight X26, 32
	037 And X26, X26, 0x7FFFFFFF
	038 Move [X31+8], X19
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 NotImplemented "Instruction SCVTF not yet implemented."
	044 Move S0, 3
	045 Call 0x3EB2B50
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move W9, 0x7F800000
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move W21, [X24+44]
	050 Move W12, [X24+20]
	051 Move X19, 0xA2D000
	052 Move S1, W9
	053 NotImplemented "Instruction FCVTZS not yet implemented."
	054 Move W10, 0x80000000
	055 Move X23, [X24+24]
	056 Move W22, [X24+32]
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move W9, [X19+3258]
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 And X8, X11, 0
	061 Add X8, X8, X25
	062 Add W27, W11, W25
	063 Add W24, W12, W21
	064 Move X29, X8
	065 ShiftRight X29, 32
	066 And X29, X29, 0x7FFFFFFF
	067 Compare W9, 0
	068 JumpIfNotEqual {74}
	069 Move X0, 0x767000
	070 Move X0, [X0+1592]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X19+3258], W8
	074 Move X11, 0x767000
	075 Move X11, [X11+1592]
	076 Move X13, [X31]
	077 Move X15, [X31+8]
	078 And X9, X23, 0
	079 Add X9, X9, X25
	080 Move X11, [X11]
	081 Move W12, [X13+60]
	082 Move W13, [X13+68]
	083 Add W8, W23, W25
	084 Move X11, [X11+184]
	085 Subtract W12, W15, W12
	086 Move X15, [X31+16]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move W11, [X11+20]
	090 Subtract W13, W15, W13
	091 Add W15, W12, W28
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 And X9, X9, 0
	096 Move [X20], W12
	097 Move [X20+4], W17
	098 And X12, X0, 0
	099 Add W10, W22, W21
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract W8, W8, W0
	102 Subtract X9, X9, X12
	103 Add W14, W28, W26
	104 Add W16, W13, W28
	105 NotImplemented "Instruction CSEL not yet implemented."
	106 Subtract W10, W10, W11
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, X9
	109 ShiftRight X9, 32
	110 And X9, X9, 0x7FFFFFFF
	111 Move X11, [X31+24]
	112 Move [X20+8], W13
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X20, [X31+112]
	116 Move X19, [X31+120]
	117 Move X22, [X31+96]
	118 Move X21, [X31+104]
	119 Move X24, [X31+80]
	120 Move X23, [X31+88]
	121 Move X26, [X31+64]
	122 Move X25, [X31+72]
	123 Move X28, [X31+48]
	124 Move X27, [X31+56]
	125 Move X29, [X31+32]
	126 Move X30, [X31+40]
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Move [X11], W8
	131 Move [X11+4], W9
	132 Move [X11+8], W10
	133 Add X31, X31, 128
	134 Return 

Method: System.Void UpdateIndexForVoxel(UnityEngine.Vector3Int voxel, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickIndex/ReservedBrick> bricks, System.Collections.Generic.List`1<System.UInt16> indices, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellInfo)

Disassembly:
	0x039B73D4 CMP W12, W11
	0x039B73D8 B.CS 0x39B73E4
	0x039B73DC MOV X8, X31
	0x039B73E0 B 0x39B73F8
	0x039B73E4 LDR X10, [X10 + 0xC8]
	0x039B73E8 ADD X10, X10, X11, 0x3, LSL
	0x039B73EC LDUR X10, [X10 - 0x8]
	0x039B73F0 CMP X10, X8
	0x039B73F4 CSEL X8, X9, X31, EQ
	0x039B73F8 STR X8, [X19 + 0x40]
	0x039B73FC LDR X8, [X20 + 0x50]
	0x039B7400 LDP X22, X21, [X31 + 0x10]
	0x039B7404 STR X8, [X19 + 0x48]
	0x039B7408 LDP X20, X19, [X31 + 0x20]
	0x039B740C LDR X30, [X31], #0x30
	0x039B7410 RET
	0x039B7414 STR X30, [X31 - 0x20]!
	0x039B7418 STP X20, X19, [X31 + 0x10]
	0x039B741C ADRP X20, 0xA2A000
	0x039B7420 LDRB W8, [X20 + 0xC6E]
	0x039B7424 MOV X19, X0
	0x039B7428 TBNZ X8, 0x0, 0x39B7440
	0x039B742C ADRP X0, 0x79B000
	0x039B7430 LDR X0, [X0 + 0x210]
	0x039B7434 BL 0x1C16CF4
	0x039B7438 MOVZ W8, 0x1
	0x039B743C STRB W8, [X20 + 0xC6E]
	0x039B7440 LDR X0, [X19 + 0x78]
	0x039B7444 CBZ X0, 0x39B746C
	0x039B7448 ADRP X8, 0x79B000
	0x039B744C LDR X8, [X8 + 0x210]
	0x039B7450 LDR X1, [X8]
	0x039B7454 BL 0x2604EE8
	0x039B7458 STR W31, [X19 + 0x70]
	0x039B745C STR X31, [X19 + 0x68]
	0x039B7460 LDP X20, X19, [X31 + 0x10]
	0x039B7464 LDR X30, [X31], #0x20
	0x039B7468 RET
	0x039B746C BL 0x1C16F20
	0x039B7470 ADD W8, W0, W1
	0x039B7474 SUB W8, W8, 0x1
	0x039B7478 SDIV W0, W8, W1
	0x039B747C RET
	0x039B7480 STP X30, X25, [X31 - 0x40]!
	0x039B7484 STP X24, X23, [X31 + 0x10]
	0x039B7488 STP X22, X21, [X31 + 0x20]
	0x039B748C STP X20, X19, [X31 + 0x30]
	0x039B7490 ADRP X23, 0xA2A000
	0x039B7494 LDRB W8, [X23 + 0xC6F]
	0x039B7498 MOV W19, W3
	0x039B749C MOV X20, X2
	0x039B74A0 MOV W22, W1
	0x039B74A4 MOV X21, X0
	0x039B74A8 TBNZ X8, 0x0, 0x39B74F0
	0x039B74AC ADRP X0, 0x73C000
	0x039B74B0 LDR X0, [X0 + 0xA28]
	0x039B74B4 BL 0x1C16CF4
	0x039B74B8 ADRP X0, 0x79B000
	0x039B74BC LDR X0, [X0 + 0x218]
	0x039B74C0 BL 0x1C16CF4
	0x039B74C4 ADRP X0, 0x79B000
	0x039B74C8 LDR X0, [X0 + 0x220]
	0x039B74CC BL 0x1C16CF4
	0x039B74D0 ADRP X0, 0x79B000
	0x039B74D4 LDR X0, [X0 + 0x228]
	0x039B74D8 BL 0x1C16CF4
	0x039B74DC ADRP X0, 0x79B000
	0x039B74E0 LDR X0, [X0 + 0x230]
	0x039B74E4 BL 0x1C16CF4
	0x039B74E8 MOVZ W8, 0x1
	0x039B74EC STRB W8, [X23 + 0xC6F]
	0x039B74F0 LDR X0, [X21 + 0x78]
	0x039B74F4 CBZ X0, 0x39B75A8
	0x039B74F8 ADRP X24, 0x79B000
	0x039B74FC ADRP X23, 0x79B000
	0x039B7500 LDR X24, [X24 + 0x220]
	0x039B7504 LDR X23, [X23 + 0x218]
	0x039B7508 SXTW X22, W22
	0x039B750C MOVZ W25, 0xC
	0x039B7510 CMP W22, 0x1
	0x039B7514 B.LT 0x39B75AC
	0x039B7518 LDR W8, [X0 + 0x18]
	0x039B751C CMP W8, 0x0
	0x039B7520 B.LE 0x39B75AC
	0x039B7524 LDR X1, [X24]
	0x039B7528 BL 0x26052B8
	0x039B752C CBZ X20, 0x39B75A8
	0x039B7530 LDR W11, [X20 + 0x1C]
	0x039B7534 LDR X9, [X20 + 0x10]
	0x039B7538 LDR X10, [X23]
	0x039B753C ADD W11, W11, 0x1
	0x039B7540 STR W11, [X20 + 0x1C]
	0x039B7544 CBZ X9, 0x39B75A8
	0x039B7548 LDRSW X11, [X20 + 0x18]
	0x039B754C LDR W12, [X9 + 0x18]
	0x039B7550 MOV X8, X0
	0x039B7554 CMP W11, W12
	0x039B7558 B.CS 0x39B7574
	0x039B755C ADD W10, W11, 0x1
	0x039B7560 MADD X9, X11, X25, X9
	0x039B7564 STR W10, [X20 + 0x18]
	0x039B7568 STR X8, [X9 + 0x20]
	0x039B756C STR W1, [X9 + 0x28]
	0x039B7570 B 0x39B7590
	0x039B7574 LDR X9, [X10 + 0x20]
	0x039B7578 AND X2, X1, 0x0
	0x039B757C MOV X0, X20
	0x039B7580 MOV X1, X8
	0x039B7584 LDR X9, [X9 + 0xC0]
	0x039B7588 LDR X3, [X9 + 0x70]
	0x039B758C BL 0x31207AC
	0x039B7590 LDR W8, [X21 + 0x80]
	0x039B7594 LDR X0, [X21 + 0x78]
	0x039B7598 SUB X22, X22, 0x1
	0x039B759C SUB W8, W8, 0x1
	0x039B75A0 STR W8, [X21 + 0x80]
	0x039B75A4 CBNZ X0, 0x39B7510
	0x039B75A8 BL 0x1C16F20
	0x039B75AC CMP W22, 0x1
	0x039B75B0 B.LT 0x39B7680
	0x039B75B4 MOVZ W24, 0x1
	0x039B75B8 MOVZ W25, 0xC
	0x039B75BC LDR W2, [X21 + 0x70]
	0x039B75C0 LDR W8, [X21 + 0x60]
	0x039B75C4 CMP W2, W8
	0x039B75C8 B.GE 0x39B7688
	0x039B75CC CBZ X20, 0x39B75A8
	0x039B75D0 LDR W10, [X20 + 0x1C]
	0x039B75D4 LDR X1, [X21 + 0x68]
	0x039B75D8 LDR X8, [X20 + 0x10]
	0x039B75DC LDR X9, [X23]
	0x039B75E0 ADD W10, W10, 0x1
	0x039B75E4 STR W10, [X20 + 0x1C]
	0x039B75E8 CBZ X8, 0x39B75A8
	0x039B75EC LDRSW X10, [X20 + 0x18]
	0x039B75F0 LDR W11, [X8 + 0x18]
	0x039B75F4 CMP W10, W11
	0x039B75F8 B.CS 0x39B7614
	0x039B75FC ADD W9, W10, 0x1
	0x039B7600 MADD X8, X10, X25, X8
	0x039B7604 STR W9, [X20 + 0x18]
	0x039B7608 STR X1, [X8 + 0x20]
	0x039B760C STR W2, [X8 + 0x28]
	0x039B7610 B 0x39B7628
	0x039B7614 LDR X8, [X9 + 0x20]
	0x039B7618 MOV X0, X20
	0x039B761C LDR X8, [X8 + 0xC0]
	0x039B7620 LDR X3, [X8 + 0x70]
	0x039B7624 BL 0x31207AC
	0x039B7628 LDR W9, [X21 + 0x68]
	0x039B762C LDR W8, [X21 + 0x80]
	0x039B7630 LDR W10, [X21 + 0x58]
	0x039B7634 ADD W9, W9, 0x200
	0x039B7638 SUB W8, W8, 0x1
	0x039B763C CMP W9, W10
	0x039B7640 STR W8, [X21 + 0x80]
	0x039B7644 STR W9, [X21 + 0x68]
	0x039B7648 B.LT 0x39B7670
	0x039B764C LDR W8, [X21 + 0x6C]
	0x039B7650 LDR W9, [X21 + 0x5C]
	0x039B7654 ADD W8, W8, 0x4
	0x039B7658 CMP W8, W9
	0x039B765C STP W31, W8, [X21 + 0x68]
	0x039B7660 B.LT 0x39B7670
	0x039B7664 LDR W8, [X21 + 0x70]
	0x039B7668 ADD W8, W8, 0x4
	0x039B766C STP W31, W8, [X21 + 0x6C]
	0x039B7670 MOV W8, W24
	0x039B7674 CMP X8, X22
	0x039B7678 ADD W24, W24, 0x1
	0x039B767C B.LT 0x39B75BC
	0x039B7680 MOVZ W0, 0x1
	0x039B7684 B 0x39B76BC
	0x039B7688 TBNZ X19, 0x0, 0x39B76B8
	0x039B768C ADRP X8, 0x73C000
	0x039B7690 LDR X8, [X8 + 0xA28]
	0x039B7694 LDR X0, [X8]
	0x039B7698 LDR W8, [X0 + 0xE0]
	0x039B769C CBNZ W8, 0x39B76A4
	0x039B76A0 BL 0x1C16DFC
	0x039B76A4 ADRP X8, 0x79B000
	0x039B76A8 LDR X8, [X8 + 0x230]
	0x039B76AC MOV X1, X31
	0x039B76B0 LDR X0, [X8]
	0x039B76B4 BL 0x3C0649C
	0x039B76B8 MOV W0, W31
	0x039B76BC LDP X20, X19, [X31 + 0x30]
	0x039B76C0 LDP X22, X21, [X31 + 0x20]
	0x039B76C4 LDP X24, X23, [X31 + 0x10]
	0x039B76C8 LDP X30, X25, [X31], #0x40
	0x039B76CC RET
	0x039B76D0 SUB X31, X31, 0x70
	0x039B76D4 STP X30, X23, [X31 + 0x40]
	0x039B76D8 STP X22, X21, [X31 + 0x50]
	0x039B76DC STP X20, X19, [X31 + 0x60]
	0x039B76E0 ADRP X21, 0xA2A000
	0x039B76E4 LDRB W8, [X21 + 0xC70]
	0x039B76E8 MOV X20, X1
	0x039B76EC MOV X19, X0
	0x039B76F0 TBNZ X8, 0x0, 0x39B7744

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X28
	005 Move [X31+280], X27
	006 Move [X31+288], X26
	007 Move [X31+296], X25
	008 Move [X31+304], X24
	009 Move [X31+312], X23
	010 Move [X31+320], X22
	011 Move [X31+328], X21
	012 Move [X31+336], X20
	013 Move [X31+344], X19
	014 Move X24, 0xA2B000
	015 Move W8, [X24+3170]
	016 Move X19, X5
	017 Move X21, X3
	018 Move X23, X2
	019 Move X22, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x79C000
	026 Move X0, [X0+344]
	027 Call 0x1C17CF4
	028 Move X0, 0x79C000
	029 Move X0, [X0+352]
	030 Call 0x1C17CF4
	031 Move X0, 0x79C000
	032 Move X0, [X0+360]
	033 Call 0x1C17CF4
	034 Move X0, 0x79C000
	035 Move X0, [X0+368]
	036 Call 0x1C17CF4
	037 Move X0, 0x79B000
	038 Move X0, [X0+3912]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X24+3170], W8
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+248], W31
	044 Move [X31+240], X31
	045 Move [X31+232], W31
	046 Move [X31+224], X31
	047 Move [X31+208], X31
	048 Move [X31+176], V0
	049 Move [X31+184], V0
	050 Call ProbeBrickIndex.GetVoxelSubdivLevel, X0
	051 Move V0, [X19]
	052 Move V1, [X19+16]
	053 Move V2, [X19+2]
	054 Move W3, W0
	055 And X2, X23, 0
	056 Add X4, X31, 240
	057 Add X5, X31, 224
	058 Add X6, X31, 128
	059 Move X0, X20
	060 Move X1, X22
	061 Move [X31+128], V0
	062 Move [X31+136], V1
	063 Move [X31+10], V2
	064 Call ProbeBrickIndex.ClipToIndexSpace, X0, X1, X2, X3, X4, X5
	065 Compare X21, 0
	066 JumpIfEqual {202}
	067 Move X8, 0x79C000
	068 Move X8, [X8+368]
	069 Move X0, X21
	070 Move X1, [X8]
	071 Add X8, X31, 88
	072 Call List`1<ReservedBrick>.GetEnumerator, X0
	073 Move W10, [X31+240]
	074 Move W9, [X31+244]
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Move X8, [X31+120]
	078 Move [X31+24], W9
	079 Move [X31+28], W10
	080 Move W9, [X31+248]
	081 Move W27, [X31+224]
	082 Move W26, [X31+228]
	083 Move W21, [X31+232]
	084 Move [X31+176], V0
	085 Move [X31+184], V1
	086 Move [X31+20], W9
	087 Move [X31+208], X8
	088 Move X8, 0x79C000
	089 Move X8, [X8+352]
	090 Move X1, [X8]
	091 Add X0, X31, 176
	092 Call Enumerator<ReservedBrick>.MoveNext, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {183}
	097 Move X8, 0x79B000
	098 Move X8, [X8+3912]
	099 Move X28, [X31+192]
	100 Move W29, [X31+200]
	101 Move W25, [X31+204]
	102 Move W24, [X31+208]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Move S0, 3
	110 Call 0x3EB2B50
	111 Move X8, 0xA2B000
	112 Move W8, [X8+3258]
	113 Move W10, 0x7F800000
	114 Move S1, W10
	115 NotImplemented "Instruction FCVTZS not yet implemented."
	116 NotImplemented "Instruction FCMP not yet implemented."
	117 Move W10, 0x80000000
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Compare W8, 0
	120 JumpIfNotEqual {127}
	121 Move X0, 0x765000
	122 Move X0, [X0+1592]
	123 Call 0x1C17CF4
	124 Move X8, 0xA2B000
	125 Move W9, 1
	126 Move [X8+3258], W9
	127 Move X9, 0x765000
	128 Move X9, [X9+1592]
	129 Move W10, [X20+60]
	130 Move W14, [X31+28]
	131 Move X8, X28
	132 ShiftRight X8, 32
	133 And X8, X8, 0x7FFFFFFF
	134 Move X9, [X9]
	135 Subtract W13, W28, W10
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 Move W13, [X31+24]
	139 Move W11, [X20+68]
	140 Move X9, [X9+184]
	141 And X12, X23, 0
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CSEL not yet implemented."
	144 Move W13, [X31+20]
	145 NotImplemented "Instruction BFM not yet implemented."
	146 Subtract W8, W29, W11
	147 Move V1, [X19+16]
	148 Move V0, [X19+32]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 Or X23, X12, X8
	152 Move W12, [X9+16]
	153 Move W8, [X9+20]
	154 Move W9, [X9+12]
	155 Move V2, [X19]
	156 Move [X31+4], V0
	157 Multiply W12, W25, W12
	158 NotImplemented "Instruction MADD not yet implemented."
	159 Add X12, X28, X12
	160 Subtract W9, W9, W10
	161 NotImplemented "Instruction MADD not yet implemented."
	162 Move X10, X12
	163 ShiftRight X10, 32
	164 And X10, X10, 0x7FFFFFFF
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract W8, W8, W11
	167 NotImplemented "Instruction CSEL not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSEL not yet implemented."
	172 NotImplemented "Instruction BFM not yet implemented."
	173 And X9, X22, 0
	174 Or X22, X9, X8
	175 Move [X31+32], V2
	176 Move [X31+40], V1
	177 Add X6, X31, 32
	178 Move X0, X20
	179 Move X2, X23
	180 Move X4, X22
	181 Move W5, W24
	182 Call ProbeBrickIndex.UpdatePhysicalIndex, X0, X1, X2, X3, X4
	183 Move X8, 0x79C000
	184 Move X8, [X8+344]
	185 Add X0, X31, 176
	186 Move X1, [X8]
	187 Call Enumerator<ReservedBrick>.Dispose, X0
	188 Move X20, [X31+336]
	189 Move X19, [X31+344]
	190 Move X22, [X31+320]
	191 Move X21, [X31+328]
	192 Move X24, [X31+304]
	193 Move X23, [X31+312]
	194 Move X26, [X31+288]
	195 Move X25, [X31+296]
	196 Move X28, [X31+272]
	197 Move X27, [X31+280]
	198 Move X29, [X31+256]
	199 Move X30, [X31+264]
	200 Add X31, X31, 352
	201 Return 
	202 Call 0x1C17F20
	203 Move X19, X0
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, X19
	206 Call 0x3EB2AD0
	207 Move X20, [X0]
	208 Call 0x3EB2AE0
	209 Move X8, 0x79C000
	210 Move X8, [X8+344]
	211 Add X0, X31, 176
	212 Move X1, [X8]
	213 Call Enumerator<ReservedBrick>.Dispose, X0
	214 Compare X20, 0
	215 JumpIfEqual {188}
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Move X20, X31
	219 Move X19, X0
	220 Move X8, 0x79C000
	221 Move X8, [X8+344]
	222 Move X1, [X8]
	223 Add X0, X31, 176
	224 Call Enumerator<ReservedBrick>.Dispose, X0
	225 Compare X20, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X19
	228 Call 0x1D2D690
	229 Move X0, X20
	230 Call 0x1C17F18
	231 Call 0x1991590

