Type: UnityEngine.Rendering.DebugUI/EnumField`1

Method: System.Int32[] get_enumValues()

Disassembly:
	0x02BAA71C BL 0x1C5C684
	0x02BAA720 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_enumValues(System.Int32[] value)

Disassembly:
	0x02BAA724 CBNZ W8, 0x2BAA72C
	0x02BAA728 BL 0x1C16DFC
	0x02BAA72C LDR X8, [X25 + 0x20]
	0x02BAA730 STR X23, [X31 + 0x8]
	0x02BAA734 LDR X8, [X8 + 0xC0]
	0x02BAA738 LDR X0, [X8 + 0x10]
	0x02BAA73C LDRB W8, [X0 + 0x135]
	0x02BAA740 TBNZ X8, 0x0, 0x2BAA748
	0x02BAA744 BL 0x1C5C684
	0x02BAA748 LDR X8, [X0 + 0xB8]
	0x02BAA74C LDR X23, [X8 + 0x8]
	0x02BAA750 CBNZ X23, 0x2BAA7FC
	0x02BAA754 LDR X8, [X25 + 0x20]
	0x02BAA758 LDR X8, [X8 + 0xC0]
	0x02BAA75C LDR X0, [X8 + 0x10]
	0x02BAA760 LDRB W8, [X0 + 0x135]
	0x02BAA764 TBNZ X8, 0x0, 0x2BAA76C
	0x02BAA768 BL 0x1C5C684
	0x02BAA76C LDR W8, [X0 + 0xE0]
	0x02BAA770 CBNZ W8, 0x2BAA778
	0x02BAA774 BL 0x1C16DFC
	0x02BAA778 LDR X8, [X25 + 0x20]
	0x02BAA77C LDR X8, [X8 + 0xC0]
	0x02BAA780 LDR X0, [X8 + 0x10]
	0x02BAA784 LDRB W8, [X0 + 0x135]
	0x02BAA788 TBNZ X8, 0x0, 0x2BAA790
	0x02BAA78C BL 0x1C5C684
	0x02BAA790 ADRP X9, 0x1572000
	0x02BAA794 LDR X8, [X0 + 0xB8]
	0x02BAA798 LDR X9, [X9 + 0xD68]
	0x02BAA79C LDR X24, [X8]
	0x02BAA7A0 LDR X0, [X9]
	0x02BAA7A4 BL 0x1C16F10
	0x02BAA7A8 LDR X8, [X25 + 0x20]
	0x02BAA7AC MOV X23, X0
	0x02BAA7B0 LDR X8, [X8 + 0xC0]
	0x02BAA7B4 LDR X2, [X8 + 0x18]
	0x02BAA7B8 MOV X1, X24
	0x02BAA7BC MOV X3, X31
	0x02BAA7C0 BL 0x2D2F428
	0x02BAA7C4 LDR X8, [X25 + 0x20]
	0x02BAA7C8 LDR X8, [X8 + 0xC0]
	0x02BAA7CC LDR X0, [X8 + 0x10]
	0x02BAA7D0 LDRB W9, [X0 + 0x135]
	0x02BAA7D4 TBNZ X9, 0x0, 0x2BAA7E4
	0x02BAA7D8 BL 0x1C5C684
	0x02BAA7DC LDR X8, [X25 + 0x20]
	0x02BAA7E0 LDR X8, [X8 + 0xC0]
	0x02BAA7E4 LDR X9, [X0 + 0xB8]
	0x02BAA7E8 STR X23, [X9 + 0x8]
	0x02BAA7EC LDR X0, [X8 + 0x10]
	0x02BAA7F0 LDRB W8, [X0 + 0x135]
	0x02BAA7F4 TBNZ X8, 0x0, 0x2BAA7FC
	0x02BAA7F8 BL 0x1C5C684
	0x02BAA7FC ADRP X8, 0x1572000
	0x02BAA800 LDR X8, [X8 + 0xD60]
	0x02BAA804 LDR X2, [X8]
	0x02BAA808 MOV X0, X22
	0x02BAA80C MOV X1, X23
	0x02BAA810 BL 0x21DA490
	0x02BAA814 MOV X22, X0
	0x02BAA818 CBZ X0, 0x2BAACAC
	0x02BAA81C ADRP X10, 0x1574000
	0x02BAA820 LDR X8, [X22]
	0x02BAA824 LDR X10, [X10 + 0xBD8]
	0x02BAA828 LDRH W9, [X8 + 0x12E]
	0x02BAA82C LDR X1, [X10]
	0x02BAA830 CBZ X9, 0x2BAA854
	0x02BAA834 LDR X10, [X8 + 0xB0]
	0x02BAA838 ADD X10, X10, 0x8
	0x02BAA83C LDUR X11, [X10 - 0x8]
	0x02BAA840 CMP X11, X1
	0x02BAA844 B.EQ 0x2BAA864
	0x02BAA848 SUBS X9, X9, 0x1
	0x02BAA84C ADD X10, X10, 0x10
	0x02BAA850 B.NE 0x2BAA83C
	0x02BAA854 MOV X0, X22
	0x02BAA858 MOV W2, W31
	0x02BAA85C BL 0x1C5C788
	0x02BAA860 B 0x2BAA870
	0x02BAA864 LDRSW X9, [X10]
	0x02BAA868 ADD X8, X8, X9, 0x4, LSL
	0x02BAA86C ADD X0, X8, 0x138
	0x02BAA870 LDP X8, X1, [X0]
	0x02BAA874 MOV X0, X22
	0x02BAA878 BLR X8
	0x02BAA87C MOV X22, X0
	0x02BAA880 CBZ X0, 0x2BAACB0
	0x02BAA884 ADRP X29, 0x1549000
	0x02BAA888 ADRP X28, 0x1574000
	0x02BAA88C ADRP X20, 0x1549000
	0x02BAA890 ADRP X26, 0x1549000
	0x02BAA894 ADRP X27, 0x154A000
	0x02BAA898 LDR X29, [X29 + 0xE18]
	0x02BAA89C LDR X28, [X28 + 0xC08]
	0x02BAA8A0 LDR X20, [X20 + 0xDF8]
	0x02BAA8A4 LDR X26, [X26 + 0x758]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1832000
	009 Move W8, [X21+1507]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x154A000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x1575000
	020 Move X0, [X0+2992]
	021 Call 0x1C17CF4
	022 Move X0, 0x1575000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move X0, 0x1551000
	026 Move X0, [X0+1520]
	027 Call 0x1C17CF4
	028 Move X0, 0x154B000
	029 Move X0, [X0+1136]
	030 Call 0x1C17CF4
	031 Move X0, 0x154D000
	032 Move X0, [X0+3832]
	033 Call 0x1C17CF4
	034 Move X0, 0x1575000
	035 Move X0, [X0+3008]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1507], W8
	039 Compare X19, 0
	040 JumpIfEqual {70}
	041 Move X8, 0x1575000
	042 Move X8, [X8+3000]
	043 Move X22, 0x1575000
	044 Move X23, 0x154B000
	045 Move X0, X19
	046 Move X1, [X8]
	047 Move X22, [X22+2992]
	048 Move X23, [X23+1136]
	049 Call Enumerable.Distinct, X0
	050 Move X1, [X22]
	051 Call Enumerable.Count, X0
	052 Move X2, [X23]
	053 Move W1, W0
	054 Add X0, X31, 8
	055 Move [X31+8], X31
	056 Call Nullable`1<Int32>..ctor, X0, X1
	057 Move X1, [X22]
	058 Move W24, [X31+8]
	059 Move W21, [X31+12]
	060 Move X0, X19
	061 Call Enumerable.Count, X0
	062 Move X2, [X23]
	063 Move W1, W0
	064 Add X0, X31, 8
	065 Move [X31+8], X31
	066 Call Nullable`1<Int32>..ctor, X0, X1
	067 Move X9, [X31+8]
	068 And W31, W24, 255
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move W21, W31
	071 Move W8, W31
	072 Move X9, X31
	073 Move X10, X9
	074 ShiftRight X10, 32
	075 And X10, X10, 0x7FFFFFFF
	076 And W31, W9, 255
	077 NotImplemented "Instruction CSET not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Xor W8, W8, W9
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {104}
	084 Compare X20, 0
	085 JumpIfEqual {113}
	086 Move X8, 0x1575000
	087 Move X0, [X20+40]
	088 Move X8, [X8+3008]
	089 Move X2, X31
	090 Move X1, [X8]
	091 Call String.Concat, X0, X1
	092 Move X8, 0x154A000
	093 Move X8, [X8+2600]
	094 Move X21, X0
	095 Move X8, [X8]
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move X0, X21
	102 Move X1, X31
	103 Call Debug.LogWarning, X0
	104 Move [X20+104], X19
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Return 
	113 Call 0x1C17F20

Method: System.Void AutoFillFromType(System.Type enumType)

Disassembly:
	0x02BAA8A8 LDR X27, [X27 + 0xE10]
	0x02BAA8AC MOV X19, X25
	0x02BAA8B0 LDR X8, [X22]
	0x02BAA8B4 LDR X1, [X29]
	0x02BAA8B8 LDRH W9, [X8 + 0x12E]
	0x02BAA8BC CBZ X9, 0x2BAA8E0
	0x02BAA8C0 LDR X10, [X8 + 0xB0]
	0x02BAA8C4 ADD X10, X10, 0x8
	0x02BAA8C8 LDUR X11, [X10 - 0x8]
	0x02BAA8CC CMP X11, X1
	0x02BAA8D0 B.EQ 0x2BAA8F0
	0x02BAA8D4 SUBS X9, X9, 0x1
	0x02BAA8D8 ADD X10, X10, 0x10
	0x02BAA8DC B.NE 0x2BAA8C8
	0x02BAA8E0 MOV X0, X22
	0x02BAA8E4 MOV W2, W31
	0x02BAA8E8 BL 0x1C5C788
	0x02BAA8EC B 0x2BAA8FC
	0x02BAA8F0 LDRSW X9, [X10]
	0x02BAA8F4 ADD X8, X8, X9, 0x4, LSL
	0x02BAA8F8 ADD X0, X8, 0x138
	0x02BAA8FC LDP X8, X1, [X0]
	0x02BAA900 MOV X0, X22
	0x02BAA904 BLR X8
	0x02BAA908 TBZ X0, 0x0, 0x2BAAB38
	0x02BAA90C LDR X8, [X22]
	0x02BAA910 ADRP X10, 0x1574000
	0x02BAA914 LDRH W9, [X8 + 0x12E]
	0x02BAA918 LDR X10, [X10 + 0xBE0]
	0x02BAA91C LDR X1, [X10]
	0x02BAA920 CBZ X9, 0x2BAA944
	0x02BAA924 LDR X10, [X8 + 0xB0]
	0x02BAA928 ADD X10, X10, 0x8
	0x02BAA92C LDUR X11, [X10 - 0x8]
	0x02BAA930 CMP X11, X1
	0x02BAA934 B.EQ 0x2BAA954
	0x02BAA938 SUBS X9, X9, 0x1
	0x02BAA93C ADD X10, X10, 0x10
	0x02BAA940 B.NE 0x2BAA92C
	0x02BAA944 MOV X0, X22
	0x02BAA948 MOV W2, W31
	0x02BAA94C BL 0x1C5C788
	0x02BAA950 B 0x2BAA960
	0x02BAA954 LDRSW X9, [X10]
	0x02BAA958 ADD X8, X8, X9, 0x4, LSL
	0x02BAA95C ADD X0, X8, 0x138
	0x02BAA960 LDP X8, X1, [X0]
	0x02BAA964 MOV X0, X22
	0x02BAA968 BLR X8
	0x02BAA96C ADRP X8, 0x1574000
	0x02BAA970 LDR X8, [X8 + 0xBC8]
	0x02BAA974 MOV X23, X0
	0x02BAA978 LDR X1, [X8]
	0x02BAA97C BL 0x21A891C
	0x02BAA980 CBZ X0, 0x2BAA98C
	0x02BAA984 LDR X25, [X0 + 0x18]
	0x02BAA988 B 0x2BAAA08
	0x02BAA98C LDR X8, [X19 + 0x20]
	0x02BAA990 LDR X8, [X8 + 0xC0]
	0x02BAA994 LDR X0, [X8 + 0x20]
	0x02BAA998 LDRB W8, [X0 + 0x135]
	0x02BAA99C TBNZ X8, 0x0, 0x2BAA9A4
	0x02BAA9A0 BL 0x1C5C684
	0x02BAA9A4 LDR W8, [X0 + 0xE0]
	0x02BAA9A8 CBNZ W8, 0x2BAA9B0
	0x02BAA9AC BL 0x1C16DFC
	0x02BAA9B0 LDR X8, [X19 + 0x20]
	0x02BAA9B4 LDR X8, [X8 + 0xC0]
	0x02BAA9B8 LDR X0, [X8 + 0x20]
	0x02BAA9BC LDRB W8, [X0 + 0x135]
	0x02BAA9C0 TBNZ X8, 0x0, 0x2BAA9C8
	0x02BAA9C4 BL 0x1C5C684
	0x02BAA9C8 CBZ X23, 0x2BAAC64
	0x02BAA9CC LDR X8, [X0 + 0xB8]
	0x02BAA9D0 LDR X9, [X23]
	0x02BAA9D4 LDR X24, [X8]
	0x02BAA9D8 LDP X8, X1, [X9 + 0x1A8]
	0x02BAA9DC MOV X0, X23
	0x02BAA9E0 BLR X8
	0x02BAA9E4 MOV X1, X0
	0x02BAA9E8 CBZ X24, 0x2BAAC68
	0x02BAA9EC ADRP X8, 0x1574000
	0x02BAA9F0 LDR X8, [X8 + 0xC28]
	0x02BAA9F4 LDR X2, [X8]
	0x02BAA9F8 MOV X0, X24
	0x02BAA9FC MOV X3, X31
	0x02BAAA00 BL 0x3632EA0
	0x02BAAA04 MOV X25, X0
	0x02BAAA08 ADRP X8, 0x1574000
	0x02BAAA0C LDR X8, [X8 + 0xBD0]
	0x02BAAA10 LDR X0, [X8]
	0x02BAAA14 BL 0x1C16F10
	0x02BAAA18 MOV X24, X0
	0x02BAAA1C MOV X1, X25
	0x02BAAA20 MOV X2, X31
	0x02BAAA24 BL 0x3C6CE5C
	0x02BAAA28 LDR X0, [X31 + 0x38]
	0x02BAAA2C CBZ X0, 0x2BAAC58
	0x02BAAA30 LDR W10, [X0 + 0x1C]
	0x02BAAA34 LDR X8, [X0 + 0x10]
	0x02BAAA38 LDR X9, [X28]
	0x02BAAA3C ADD W10, W10, 0x1
	0x02BAAA40 STR W10, [X0 + 0x1C]
	0x02BAAA44 CBZ X8, 0x2BAAC50
	0x02BAAA48 LDRSW X10, [X0 + 0x18]
	0x02BAAA4C LDR W11, [X8 + 0x18]
	0x02BAAA50 CMP W10, W11
	0x02BAAA54 B.CS 0x2BAAA6C
	0x02BAAA58 ADD W9, W10, 0x1
	0x02BAAA5C ADD X8, X8, X10, 0x3, LSL
	0x02BAAA60 STR W9, [X0 + 0x18]
	0x02BAAA64 STR X24, [X8 + 0x20]
	0x02BAAA68 B 0x2BAAA80
	0x02BAAA6C LDR X8, [X9 + 0x20]
	0x02BAAA70 LDR X8, [X8 + 0xC0]
	0x02BAAA74 LDR X2, [X8 + 0x70]
	0x02BAAA78 MOV X1, X24
	0x02BAAA7C BL 0x301BF90
	0x02BAAA80 CBZ X23, 0x2BAAC5C
	0x02BAAA84 LDR X8, [X23]
	0x02BAAA88 LDR X24, [X31 + 0x20]
	0x02BAAA8C LDP X9, X1, [X8 + 0x1A8]
	0x02BAAA90 MOV X0, X23
	0x02BAAA94 BLR X9
	0x02BAAA98 MOV X23, X0
	0x02BAAA9C LDR X0, [X20]
	0x02BAAAA0 LDR W8, [X0 + 0xE0]
	0x02BAAAA4 CBNZ W8, 0x2BAAAAC
	0x02BAAAA8 BL 0x1C16DFC
	0x02BAAAAC MOV X0, X21
	0x02BAAAB0 MOV X1, X23
	0x02BAAAB4 MOV X2, X31
	0x02BAAAB8 BL 0x33AF150
	0x02BAAABC CBZ X24, 0x2BAAC4C
	0x02BAAAC0 CBZ X0, 0x2BAAC54
	0x02BAAAC4 LDR X8, [X0]
	0x02BAAAC8 LDR X1, [X26]
	0x02BAAACC LDR X8, [X8 + 0x40]
	0x02BAAAD0 LDR X9, [X1 + 0x40]
	0x02BAAAD4 CMP X8, X9
	0x02BAAAD8 B.NE 0x2BAAC48
	0x02BAAADC BL 0x1C16E08
	0x02BAAAE0 LDR W10, [X24 + 0x1C]
	0x02BAAAE4 LDR W1, [X0]
	0x02BAAAE8 LDR X8, [X24 + 0x10]
	0x02BAAAEC LDR X9, [X27]
	0x02BAAAF0 ADD W10, W10, 0x1
	0x02BAAAF4 STR W10, [X24 + 0x1C]
	0x02BAAAF8 CBZ X8, 0x2BAAC60
	0x02BAAAFC LDRSW X10, [X24 + 0x18]
	0x02BAAB00 LDR W11, [X8 + 0x18]
	0x02BAAB04 CMP W10, W11
	0x02BAAB08 B.CS 0x2BAAB20
	0x02BAAB0C ADD W9, W10, 0x1
	0x02BAAB10 ADD X8, X8, X10, 0x2, LSL
	0x02BAAB14 STR W9, [X24 + 0x18]
	0x02BAAB18 STR W1, [X8 + 0x20]
	0x02BAAB1C B 0x2BAA8B0
	0x02BAAB20 LDR X8, [X9 + 0x20]
	0x02BAAB24 LDR X8, [X8 + 0xC0]
	0x02BAAB28 LDR X2, [X8 + 0x70]
	0x02BAAB2C MOV X0, X24
	0x02BAAB30 BL 0x2FDC70C
	0x02BAAB34 B 0x2BAA8B0
	0x02BAAB38 MOV X23, X31
	0x02BAAB3C MOVZ W19, 0xB
	0x02BAAB40 CBZ X22, 0x2BAABA4
	0x02BAAB44 LDR X8, [X22]
	0x02BAAB48 ADRP X10, 0x1549000
	0x02BAAB4C LDRH W9, [X8 + 0x12E]
	0x02BAAB50 LDR X10, [X10 + 0xE00]
	0x02BAAB54 LDR X1, [X10]
	0x02BAAB58 CBZ X9, 0x2BAAB7C
	0x02BAAB5C LDR X10, [X8 + 0xB0]
	0x02BAAB60 ADD X10, X10, 0x8
	0x02BAAB64 LDUR X11, [X10 - 0x8]
	0x02BAAB68 CMP X11, X1
	0x02BAAB6C B.EQ 0x2BAAB8C
	0x02BAAB70 SUBS X9, X9, 0x1
	0x02BAAB74 ADD X10, X10, 0x10
	0x02BAAB78 B.NE 0x2BAAB64
	0x02BAAB7C MOV X0, X22
	0x02BAAB80 MOV W2, W31
	0x02BAAB84 BL 0x1C5C788
	0x02BAAB88 B 0x2BAAB98
	0x02BAAB8C LDRSW X9, [X10]
	0x02BAAB90 ADD X8, X8, X9, 0x4, LSL
	0x02BAAB94 ADD X0, X8, 0x138
	0x02BAAB98 LDP X8, X1, [X0]
	0x02BAAB9C MOV X0, X22
	0x02BAABA0 BLR X8
	0x02BAABA4 CBNZ X23, 0x2BAACBC
	0x02BAABA8 CMP W19, 0xB
	0x02BAABAC B.EQ 0x2BAABB4
	0x02BAABB0 CBNZ W19, 0x2BAABF8
	0x02BAABB4 LDR X0, [X31 + 0x38]
	0x02BAABB8 CBZ X0, 0x2BAACC4
	0x02BAABBC ADRP X8, 0x1574000
	0x02BAABC0 LDR X8, [X8 + 0xC10]
	0x02BAABC4 LDR X1, [X8]
	0x02BAABC8 BL 0x301DDC4
	0x02BAABCC LDR X19, [X31 + 0x8]
	0x02BAABD0 STR X0, [X19 + 0x60]
	0x02BAABD4 LDR X0, [X31 + 0x20]
	0x02BAABD8 CBZ X0, 0x2BAACC8
	0x02BAABDC ADRP X8, 0x154A000
	0x02BAABE0 LDR X8, [X8 + 0xE18]
	0x02BAABE4 LDR X1, [X8]
	0x02BAABE8 BL 0x2FDE4C8
	0x02BAABEC MOV X1, X0
	0x02BAABF0 MOV X0, X19
	0x02BAABF4 BL 0x2BAA36C
	0x02BAABF8 MOV X19, X31
	0x02BAABFC ADRP X8, 0x1574000
	0x02BAAC00 LDR X8, [X8 + 0xC20]
	0x02BAAC04 LDR X1, [X8]
	0x02BAAC08 ADD X0, X31, 0x10
	0x02BAAC0C BL 0x24A69BC
	0x02BAAC10 CBNZ X19, 0x2BAACB4
	0x02BAAC14 ADRP X8, 0x1574000
	0x02BAAC18 LDR X8, [X8 + 0xC18]
	0x02BAAC1C ADD X0, X31, 0x28
	0x02BAAC20 LDR X1, [X8]
	0x02BAAC24 BL 0x24A69BC
	0x02BAAC28 LDP X20, X19, [X31 + 0x90]
	0x02BAAC2C LDP X22, X21, [X31 + 0x80]
	0x02BAAC30 LDP X24, X23, [X31 + 0x70]
	0x02BAAC34 LDP X26, X25, [X31 + 0x60]
	0x02BAAC38 LDP X28, X27, [X31 + 0x50]
	0x02BAAC3C LDP X29, X30, [X31 + 0x40]
	0x02BAAC40 ADD X31, X31, 0xA0
	0x02BAAC44 RET
	0x02BAAC48 BL 0x1C171E0
	0x02BAAC4C BL 0x1C16F20
	0x02BAAC50 BL 0x1C16F20
	0x02BAAC54 BL 0x1C16F20
	0x02BAAC58 BL 0x1C16F20
	0x02BAAC5C BL 0x1C16F20
	0x02BAAC60 BL 0x1C16F20
	0x02BAAC64 BL 0x1C16F20
	0x02BAAC68 BL 0x1C16F20
	0x02BAAC6C ADRP X0, 0x1551000
	0x02BAAC70 LDR X0, [X0 + 0x578]
	0x02BAAC74 BL 0x1C16D08
	0x02BAAC78 BL 0x1C16F10
	0x02BAAC7C MOV X19, X0
	0x02BAAC80 ADRP X0, 0x1574000
	0x02BAAC84 LDR X0, [X0 + 0xC30]
	0x02BAAC88 BL 0x1C16D08
	0x02BAAC8C MOV X1, X0
	0x02BAAC90 MOV X0, X19
	0x02BAAC94 MOV X2, X31
	0x02BAAC98 BL 0x3314A68
	0x02BAAC9C MOV X0, X19
	0x02BAACA0 MOV X1, X25
	0x02BAACA4 BL 0x1C16DEC
	0x02BAACA8 BL 0x1C16F20
	0x02BAACAC BL 0x1C16F20
	0x02BAACB0 BL 0x1C16F20
	0x02BAACB4 MOV X0, X19
	0x02BAACB8 BL 0x1C16F18
	0x02BAACBC MOV X0, X23
	0x02BAACC0 BL 0x1C16F18
	0x02BAACC4 BL 0x1C16F20
	0x02BAACC8 BL 0x1C16F20
	0x02BAACCC B 0x2BAAD14
	0x02BAACD0 B 0x2BAAD14
	0x02BAACD4 B 0x2BAAD14
	0x02BAACD8 B 0x2BAAD04
	0x02BAACDC B 0x2BAAD14
	0x02BAACE0 B 0x2BAAD14
	0x02BAACE4 B 0x2BAAD14
	0x02BAACE8 B 0x2BAAD14
	0x02BAACEC B 0x2BAAD14
	0x02BAACF0 B 0x2BAAD5C
	0x02BAACF4 B 0x2BAAD04
	0x02BAACF8 B 0x2BAAD14
	0x02BAACFC B 0x2BAAD14
	0x02BAAD00 B 0x2BAAD14
	0x02BAAD04 MOV X21, X1
	0x02BAAD08 MOV X20, X0
	0x02BAAD0C B 0x2BAAE2C
	0x02BAAD10 B 0x2BAAD14
	0x02BAAD14 MOV X21, X1
	0x02BAAD18 MOV X20, X0
	0x02BAAD1C B 0x2BAADF4
	0x02BAAD20 B 0x2BAAD5C
	0x02BAAD24 B 0x2BAAD5C
	0x02BAAD28 B 0x2BAAD5C
	0x02BAAD2C B 0x2BAAD5C
	0x02BAAD30 B 0x2BAAD5C
	0x02BAAD34 B 0x2BAAD5C
	0x02BAAD38 B 0x2BAAD5C
	0x02BAAD3C B 0x2BAAD5C
	0x02BAAD40 B 0x2BAAD5C
	0x02BAAD44 B 0x2BAAD5C
	0x02BAAD48 B 0x2BAAD5C
	0x02BAAD4C B 0x2BAAD5C
	0x02BAAD50 B 0x2BAAD5C
	0x02BAAD54 B 0x2BAAD5C
	0x02BAAD58 B 0x2BAAD5C
	0x02BAAD5C MOV X21, X1
	0x02BAAD60 MOV X20, X0
	0x02BAAD64 CMP W21, 0x1
	0x02BAAD68 B.NE 0x2BAAD88
	0x02BAAD6C MOV X0, X20
	0x02BAAD70 BL 0x3EB1AD0
	0x02BAAD74 LDR X23, [X0]
	0x02BAAD78 BL 0x3EB1AE0
	0x02BAAD7C MOV W19, W31
	0x02BAAD80 CBNZ X22, 0x2BAAB44
	0x02BAAD84 B 0x2BAABA4
	0x02BAAD88 MOV X23, X31
	0x02BAAD8C CBZ X22, 0x2BAADF0
	0x02BAAD90 LDR X8, [X22]
	0x02BAAD94 ADRP X10, 0x1549000
	0x02BAAD98 LDRH W9, [X8 + 0x12E]
	0x02BAAD9C LDR X10, [X10 + 0xE00]
	0x02BAADA0 LDR X1, [X10]
	0x02BAADA4 CBZ X9, 0x2BAADC8
	0x02BAADA8 LDR X10, [X8 + 0xB0]
	0x02BAADAC ADD X10, X10, 0x8
	0x02BAADB0 LDUR X11, [X10 - 0x8]
	0x02BAADB4 CMP X11, X1
	0x02BAADB8 B.EQ 0x2BAADD8
	0x02BAADBC SUBS X9, X9, 0x1
	0x02BAADC0 ADD X10, X10, 0x10
	0x02BAADC4 B.NE 0x2BAADB0
	0x02BAADC8 MOV X0, X22
	0x02BAADCC MOV W2, W31
	0x02BAADD0 BL 0x1C5C788
	0x02BAADD4 B 0x2BAADE4
	0x02BAADD8 LDRSW X9, [X10]
	0x02BAADDC ADD X8, X8, X9, 0x4, LSL
	0x02BAADE0 ADD X0, X8, 0x138
	0x02BAADE4 LDP X8, X1, [X0]
	0x02BAADE8 MOV X0, X22
	0x02BAADEC BLR X8
	0x02BAADF0 CBNZ X23, 0x2BAAE64
	0x02BAADF4 CMP W21, 0x1
	0x02BAADF8 B.NE 0x2BAAE10
	0x02BAADFC MOV X0, X20
	0x02BAAE00 BL 0x3EB1AD0
	0x02BAAE04 LDR X19, [X0]
	0x02BAAE08 BL 0x3EB1AE0
	0x02BAAE0C B 0x2BAABFC
	0x02BAAE10 MOV X19, X31
	0x02BAAE14 ADRP X8, 0x1574000
	0x02BAAE18 LDR X8, [X8 + 0xC20]
	0x02BAAE1C LDR X1, [X8]
	0x02BAAE20 ADD X0, X31, 0x10
	0x02BAAE24 BL 0x24A69BC
	0x02BAAE28 CBNZ X19, 0x2BAAE74
	0x02BAAE2C CMP W21, 0x1
	0x02BAAE30 B.NE 0x2BAAE6C
	0x02BAAE34 MOV X0, X20
	0x02BAAE38 BL 0x3EB1AD0
	0x02BAAE3C LDR X19, [X0]
	0x02BAAE40 BL 0x3EB1AE0
	0x02BAAE44 ADRP X8, 0x1574000
	0x02BAAE48 LDR X8, [X8 + 0xC18]
	0x02BAAE4C ADD X0, X31, 0x28
	0x02BAAE50 LDR X1, [X8]
	0x02BAAE54 BL 0x24A69BC
	0x02BAAE58 CBZ X19, 0x2BAAC28
	0x02BAAE5C MOV X0, X19
	0x02BAAE60 BL 0x1C16F18
	0x02BAAE64 MOV X0, X23
	0x02BAAE68 BL 0x1C16F18
	0x02BAAE6C MOV X19, X31
	0x02BAAE70 B 0x2BAAE8C
	0x02BAAE74 MOV X0, X19
	0x02BAAE78 BL 0x1C16F18
	0x02BAAE7C MOV X21, X1
	0x02BAAE80 MOV X20, X0
	0x02BAAE84 B 0x2BAAE14
	0x02BAAE88 MOV X20, X0
	0x02BAAE8C ADRP X8, 0x1574000
	0x02BAAE90 LDR X8, [X8 + 0xC18]
	0x02BAAE94 LDR X1, [X8]
	0x02BAAE98 ADD X0, X31, 0x28
	0x02BAAE9C BL 0x24A69BC
	0x02BAAEA0 CBNZ X19, 0x2BAAEAC
	0x02BAAEA4 MOV X0, X20
	0x02BAAEA8 BL 0x1D2C690
	0x02BAAEAC MOV X0, X19
	0x02BAAEB0 BL 0x1C16F18
	0x02BAAEB4 MOV X21, X1
	0x02BAAEB8 MOV X20, X0
	0x02BAAEBC CBNZ X22, 0x2BAAD90
	0x02BAAEC0 B 0x2BAADF0
	0x02BAAEC4 BL 0x1990590
	0x02BAAEC8 LDR X8, [X1 + 0x20]
	0x02BAAECC LDR X8, [X8 + 0xC0]
	0x02BAAED0 LDR X1, [X8 + 0x38]
	0x02BAAED4 B 0x2D1A1B4
	0x02BAAED8 STR X30, [X31 - 0x30]!
	0x02BAAEDC STP X22, X21, [X31 + 0x10]
	0x02BAAEE0 STP X20, X19, [X31 + 0x20]
	0x02BAAEE4 ADRP X21, 0x1831000
	0x02BAAEE8 ADRP X22, 0x1551000
	0x02BAAEEC ADRP X20, 0x1574000
	0x02BAAEF0 LDRB W8, [X21 + 0x5E8]
	0x02BAAEF4 LDR X22, [X22 + 0x600]
	0x02BAAEF8 LDR X20, [X20 + 0xC38]
	0x02BAAEFC MOV X19, X0
	0x02BAAF00 TBNZ X8, 0x0, 0x2BAAF24
	0x02BAAF04 ADRP X0, 0x1551000
	0x02BAAF08 LDR X0, [X0 + 0x600]
	0x02BAAF0C BL 0x1C16CF4
	0x02BAAF10 ADRP X0, 0x1574000
	0x02BAAF14 LDR X0, [X0 + 0xC38]
	0x02BAAF18 BL 0x1C16CF4
	0x02BAAF1C MOVZ W8, 0x1
	0x02BAAF20 STRB W8, [X21 + 0x5E8]
	0x02BAAF24 LDR X0, [X22]
	0x02BAAF28 BL 0x1C16F10
	0x02BAAF2C LDR X1, [X20]
	0x02BAAF30 MOVZ W2, 0x8
	0x02BAAF34 MOV X3, X31
	0x02BAAF38 MOV X20, X0
	0x02BAAF3C BL 0x3633518
	0x02BAAF40 LDR X0, [X19 + 0x20]
	0x02BAAF44 LDRB W8, [X0 + 0x135]
	0x02BAAF48 TBNZ X8, 0x0, 0x2BAAF50
	0x02BAAF4C BL 0x1C5C684
	0x02BAAF50 LDR X8, [X0 + 0xC0]
	0x02BAAF54 LDR X0, [X8 + 0x20]
	0x02BAAF58 LDRB W8, [X0 + 0x135]
	0x02BAAF5C TBNZ X8, 0x0, 0x2BAAF64
	0x02BAAF60 BL 0x1C5C684
	0x02BAAF64 LDR X8, [X0 + 0xB8]
	0x02BAAF68 STR X20, [X8]
	0x02BAAF6C LDR X0, [X19 + 0x20]
	0x02BAAF70 LDRB W8, [X0 + 0x135]
	0x02BAAF74 TBNZ X8, 0x0, 0x2BAAF7C
	0x02BAAF78 BL 0x1C5C684
	0x02BAAF7C LDR X8, [X0 + 0xC0]
	0x02BAAF80 LDR X0, [X8 + 0x20]
	0x02BAAF84 LDRB W8, [X0 + 0x135]
	0x02BAAF88 TBNZ X8, 0x0, 0x2BAAF9C
	0x02BAAF8C LDP X20, X19, [X31 + 0x20]
	0x02BAAF90 LDP X22, X21, [X31 + 0x10]
	0x02BAAF94 LDR X30, [X31], #0x30
	0x02BAAF98 B 0x1C5C684
	0x02BAAF9C LDP X20, X19, [X31 + 0x20]
	0x02BAAFA0 LDP X22, X21, [X31 + 0x10]
	0x02BAAFA4 LDR X30, [X31], #0x30
	0x02BAAFA8 RET
	0x02BAAFAC LDR X0, [X0 + 0x68]
	0x02BAAFB0 RET
	0x02BAAFB4 STR X30, [X31 - 0x40]!
	0x02BAAFB8 STP X24, X23, [X31 + 0x10]
	0x02BAAFBC STP X22, X21, [X31 + 0x20]
	0x02BAAFC0 STP X20, X19, [X31 + 0x30]
	0x02BAAFC4 ADRP X21, 0x1831000
	0x02BAAFC8 LDRB W8, [X21 + 0x5E9]
	0x02BAAFCC MOV X19, X1
	0x02BAAFD0 MOV X20, X0
	0x02BAAFD4 TBNZ X8, 0x0, 0x2BAB034
	0x02BAAFD8 ADRP X0, 0x1549000
	0x02BAAFDC LDR X0, [X0 + 0xA28]
	0x02BAAFE0 BL 0x1C16CF4
	0x02BAAFE4 ADRP X0, 0x1574000
	0x02BAAFE8 LDR X0, [X0 + 0xBB0]
	0x02BAAFEC BL 0x1C16CF4
	0x02BAAFF0 ADRP X0, 0x1574000
	0x02BAAFF4 LDR X0, [X0 + 0xBB8]
	0x02BAAFF8 BL 0x1C16CF4
	0x02BAAFFC ADRP X0, 0x1550000
	0x02BAB000 LDR X0, [X0 + 0x5F0]
	0x02BAB004 BL 0x1C16CF4
	0x02BAB008 ADRP X0, 0x1549000
	0x02BAB00C LDR X0, [X0 + 0x470]
	0x02BAB010 BL 0x1C16CF4
	0x02BAB014 ADRP X0, 0x154B000
	0x02BAB018 LDR X0, [X0 + 0xEF8]
	0x02BAB01C BL 0x1C16CF4
	0x02BAB020 ADRP X0, 0x1573000
	0x02BAB024 LDR X0, [X0 + 0xBC0]
	0x02BAB028 BL 0x1C16CF4
	0x02BAB02C MOVZ W8, 0x1
	0x02BAB030 STRB W8, [X21 + 0x5E9]
	0x02BAB034 CBZ X19, 0x2BAB0AC
	0x02BAB038 ADRP X8, 0x1573000
	0x02BAB03C LDR X8, [X8 + 0xBB8]
	0x02BAB040 ADRP X22, 0x1573000
	0x02BAB044 ADRP X23, 0x1549000
	0x02BAB048 MOV X0, X19
	0x02BAB04C LDR X1, [X8]
	0x02BAB050 LDR X22, [X22 + 0xBB0]
	0x02BAB054 LDR X23, [X23 + 0x470]
	0x02BAB058 BL 0x21C0304
	0x02BAB05C LDR X1, [X22]
	0x02BAB060 BL 0x21BCD2C
	0x02BAB064 LDR X2, [X23]
	0x02BAB068 MOV W1, W0
	0x02BAB06C ADD X0, X31, 0x8
	0x02BAB070 STR X31, [X31 + 0x8]
	0x02BAB074 BL 0x24341FC
	0x02BAB078 LDR X1, [X22]
	0x02BAB07C LDP W24, W21, [X31 + 0x8]
	0x02BAB080 MOV X0, X19
	0x02BAB084 BL 0x21BCD2C
	0x02BAB088 LDR X2, [X23]
	0x02BAB08C MOV W1, W0
	0x02BAB090 ADD X0, X31, 0x8
	0x02BAB094 STR X31, [X31 + 0x8]
	0x02BAB098 BL 0x24341FC
	0x02BAB09C LDR X9, [X31 + 0x8]
	0x02BAB0A0 ANDS W31, W24, 0xFF
	0x02BAB0A4 CSET W8, NE
	0x02BAB0A8 B 0x2BAB0B8
	0x02BAB0AC MOV W21, W31
	0x02BAB0B0 MOV W8, W31
	0x02BAB0B4 MOV X9, X31
	0x02BAB0B8 UBFM X10, X9, 0x20, 0x3F
	0x02BAB0BC ANDS W31, W9, 0xFF
	0x02BAB0C0 CSET W9, EQ
	0x02BAB0C4 CMP W21, W10
	0x02BAB0C8 B.NE 0x2BAB0D4
	0x02BAB0CC EOR W8, W8, W9, 0x0
	0x02BAB0D0 TBNZ X8, 0x0, 0x2BAB11C
	0x02BAB0D4 CBZ X20, 0x2BAB134
	0x02BAB0D8 ADRP X8, 0x1573000
	0x02BAB0DC LDR X0, [X20 + 0x28]
	0x02BAB0E0 LDR X8, [X8 + 0xBC0]
	0x02BAB0E4 MOV X2, X31
	0x02BAB0E8 LDR X1, [X8]
	0x02BAB0EC BL 0x321B938
	0x02BAB0F0 ADRP X8, 0x1548000
	0x02BAB0F4 LDR X8, [X8 + 0xA28]
	0x02BAB0F8 MOV X21, X0
	0x02BAB0FC LDR X8, [X8]
	0x02BAB100 LDR W9, [X8 + 0xE0]
	0x02BAB104 CBNZ W9, 0x2BAB110
	0x02BAB108 MOV X0, X8
	0x02BAB10C BL 0x1C16DFC
	0x02BAB110 MOV X0, X21
	0x02BAB114 MOV X1, X31
	0x02BAB118 BL 0x3C06A04
	0x02BAB11C STR X19, [X20 + 0x68]
	0x02BAB120 LDP X20, X19, [X31 + 0x30]
	0x02BAB124 LDP X22, X21, [X31 + 0x20]
	0x02BAB128 LDP X24, X23, [X31 + 0x10]
	0x02BAB12C LDR X30, [X31], #0x40
	0x02BAB130 RET
	0x02BAB134 BL 0x1C16F20
	0x02BAB138 SUB X31, X31, 0xA0
	0x02BAB13C STP X29, X30, [X31 + 0x40]
	0x02BAB140 STP X28, X27, [X31 + 0x50]
	0x02BAB144 STP X26, X25, [X31 + 0x60]
	0x02BAB148 STP X24, X23, [X31 + 0x70]
	0x02BAB14C STP X22, X21, [X31 + 0x80]
	0x02BAB150 STP X20, X19, [X31 + 0x90]
	0x02BAB154 STR X0, [X31 + 0x8]
	0x02BAB158 ADRP X20, 0x1830000
	0x02BAB15C ADRP X19, 0x1548000
	0x02BAB160 LDRB W8, [X20 + 0x5EA]
	0x02BAB164 LDR X19, [X19 + 0x6C0]
	0x02BAB168 MOV X25, X2
	0x02BAB16C MOV X21, X1
	0x02BAB170 TBNZ X8, 0x0, 0x2BAB284
	0x02BAB174 ADRP X0, 0x1573000
	0x02BAB178 LDR X0, [X0 + 0xBC8]
	0x02BAB17C BL 0x1C16CF4
	0x02BAB180 ADRP X0, 0x1548000
	0x02BAB184 LDR X0, [X0 + 0xDF8]
	0x02BAB188 BL 0x1C16CF4
	0x02BAB18C ADRP X0, 0x1571000
	0x02BAB190 LDR X0, [X0 + 0xD60]
	0x02BAB194 BL 0x1C16CF4
	0x02BAB198 ADRP X0, 0x1571000
	0x02BAB19C LDR X0, [X0 + 0xD68]
	0x02BAB1A0 BL 0x1C16CF4
	0x02BAB1A4 ADRP X0, 0x1573000
	0x02BAB1A8 LDR X0, [X0 + 0xBD0]
	0x02BAB1AC BL 0x1C16CF4
	0x02BAB1B0 ADRP X0, 0x1548000
	0x02BAB1B4 LDR X0, [X0 + 0xE00]
	0x02BAB1B8 BL 0x1C16CF4
	0x02BAB1BC ADRP X0, 0x1573000
	0x02BAB1C0 LDR X0, [X0 + 0xBD8]
	0x02BAB1C4 BL 0x1C16CF4
	0x02BAB1C8 ADRP X0, 0x1573000
	0x02BAB1CC LDR X0, [X0 + 0xBE0]
	0x02BAB1D0 BL 0x1C16CF4
	0x02BAB1D4 ADRP X0, 0x1548000
	0x02BAB1D8 LDR X0, [X0 + 0xE18]
	0x02BAB1DC BL 0x1C16CF4
	0x02BAB1E0 ADRP X0, 0x1548000
	0x02BAB1E4 LDR X0, [X0 + 0x758]
	0x02BAB1E8 BL 0x1C16CF4
	0x02BAB1EC ADRP X0, 0x1573000
	0x02BAB1F0 LDR X0, [X0 + 0xBE8]
	0x02BAB1F4 BL 0x1C16CF4
	0x02BAB1F8 ADRP X0, 0x1573000
	0x02BAB1FC LDR X0, [X0 + 0xBF0]
	0x02BAB200 BL 0x1C16CF4
	0x02BAB204 ADRP X0, 0x1573000
	0x02BAB208 LDR X0, [X0 + 0xBF8]
	0x02BAB20C BL 0x1C16CF4
	0x02BAB210 ADRP X0, 0x1573000
	0x02BAB214 LDR X0, [X0 + 0xC00]
	0x02BAB218 BL 0x1C16CF4
	0x02BAB21C ADRP X0, 0x1549000
	0x02BAB220 LDR X0, [X0 + 0xE10]
	0x02BAB224 BL 0x1C16CF4
	0x02BAB228 ADRP X0, 0x1573000
	0x02BAB22C LDR X0, [X0 + 0xC08]
	0x02BAB230 BL 0x1C16CF4
	0x02BAB234 ADRP X0, 0x1549000
	0x02BAB238 LDR X0, [X0 + 0xE18]
	0x02BAB23C BL 0x1C16CF4
	0x02BAB240 ADRP X0, 0x1573000
	0x02BAB244 LDR X0, [X0 + 0xC10]
	0x02BAB248 BL 0x1C16CF4
	0x02BAB24C ADRP X0, 0x1573000
	0x02BAB250 LDR X0, [X0 + 0xC18]
	0x02BAB254 BL 0x1C16CF4
	0x02BAB258 ADRP X0, 0x1573000
	0x02BAB25C LDR X0, [X0 + 0xC20]
	0x02BAB260 BL 0x1C16CF4
	0x02BAB264 ADRP X0, 0x1548000
	0x02BAB268 LDR X0, [X0 + 0x6C0]
	0x02BAB26C BL 0x1C16CF4
	0x02BAB270 ADRP X0, 0x1573000
	0x02BAB274 LDR X0, [X0 + 0xC28]
	0x02BAB278 BL 0x1C16CF4
	0x02BAB27C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x1832000
	015 Move X19, 0x154A000
	016 Move W8, [X20+1508]
	017 Move X19, [X19+1728]
	018 Move X25, X2
	019 Move X21, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {93}
	025 Move X0, 0x1575000
	026 Move X0, [X0+3016]
	027 Call 0x1C17CF4
	028 Move X0, 0x154A000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0x1573000
	032 Move X0, [X0+3424]
	033 Call 0x1C17CF4
	034 Move X0, 0x1573000
	035 Move X0, [X0+3432]
	036 Call 0x1C17CF4
	037 Move X0, 0x1575000
	038 Move X0, [X0+3024]
	039 Call 0x1C17CF4
	040 Move X0, 0x154A000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x1575000
	044 Move X0, [X0+3032]
	045 Call 0x1C17CF4
	046 Move X0, 0x1575000
	047 Move X0, [X0+3040]
	048 Call 0x1C17CF4
	049 Move X0, 0x154A000
	050 Move X0, [X0+3608]
	051 Call 0x1C17CF4
	052 Move X0, 0x154A000
	053 Move X0, [X0+1880]
	054 Call 0x1C17CF4
	055 Move X0, 0x1575000
	056 Move X0, [X0+3048]
	057 Call 0x1C17CF4
	058 Move X0, 0x1575000
	059 Move X0, [X0+3056]
	060 Call 0x1C17CF4
	061 Move X0, 0x1575000
	062 Move X0, [X0+3064]
	063 Call 0x1C17CF4
	064 Move X0, 0x1575000
	065 Move X0, [X0+3072]
	066 Call 0x1C17CF4
	067 Move X0, 0x154B000
	068 Move X0, [X0+3600]
	069 Call 0x1C17CF4
	070 Move X0, 0x1575000
	071 Move X0, [X0+3080]
	072 Call 0x1C17CF4
	073 Move X0, 0x154B000
	074 Move X0, [X0+3608]
	075 Call 0x1C17CF4
	076 Move X0, 0x1575000
	077 Move X0, [X0+3088]
	078 Call 0x1C17CF4
	079 Move X0, 0x1575000
	080 Move X0, [X0+3096]
	081 Call 0x1C17CF4
	082 Move X0, 0x1575000
	083 Move X0, [X0+3104]
	084 Call 0x1C17CF4
	085 Move X0, 0x154A000
	086 Move X0, [X0+1728]
	087 Call 0x1C17CF4
	088 Move X0, 0x1575000
	089 Move X0, [X0+3112]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X20+1508], W8
	093 Move X0, [X19]
	094 Move [X31+48], X31
	095 Move [X31+56], X31
	096 Move [X31+32], X31
	097 Move [X31+40], X31
	098 Move [X31+16], X31
	099 Move [X31+24], X31
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X21
	105 Move X1, X31
	106 Move X2, X31
	107 Call Type.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {549}
	112 Compare X21, 0
	113 JumpIfEqual {564}
	114 Move X8, [X21]
	115 Move X0, X21
	116 Move X9, [X8+1416]
	117 Move X1, [X8+1424]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {549}
	123 Move X8, 0x1575000
	124 Move X8, [X8+3072]
	125 Move X20, 0x1575000
	126 Move X19, 0x1575000
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Move X20, [X20+3056]
	130 Move X19, [X19+3064]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X1, [X20]
	135 Add X0, X31, 56
	136 Call ListPool`1<Object>.Get, X0
	137 Move X8, X0
	138 Move X0, [X19]
	139 Move [X31+40], X8
	140 Move [X31+48], X1
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X8, 0x1575000
	146 Move X8, [X8+3048]
	147 Move X1, [X8]
	148 Add X0, X31, 32
	149 Call 0x2EF3344, X0
	150 Move [X31+16], X0
	151 Move [X31+24], X1
	152 Move X8, [X21]
	153 Move X9, [X8+1672]
	154 Move X2, [X8+1680]
	155 Move W1, 24
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X8, [X25+32]
	159 Move X22, X0
	160 Move X8, [X8+192]
	161 Move X0, [X8+16]
	162 Move W8, [X0+309]
	163 Move TEMP, X8
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {168}
	167 Call 0x1C5D684
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move X8, [X25+32]
	173 Move [X31+8], X23
	174 Move X8, [X8+192]
	175 Move X0, [X8+16]
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Move X8, [X0+184]
	183 Move X23, [X8+8]
	184 Compare X23, 0
	185 JumpIfNotEqual {241}
	186 Move X8, [X25+32]
	187 Move X8, [X8+192]
	188 Move X0, [X8+16]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X8, [X25+32]
	200 Move X8, [X8+192]
	201 Move X0, [X8+16]
	202 Move W8, [X0+309]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {208}
	207 Call 0x1C5D684
	208 Move X9, 0x1573000
	209 Move X8, [X0+184]
	210 Move X9, [X9+3432]
	211 Move X24, [X8]
	212 Move X0, [X9]
	213 Call 0x1C17F10
	214 Move X8, [X25+32]
	215 Move X23, X0
	216 Move X8, [X8+192]
	217 Move X2, [X8+24]
	218 Move X1, X24
	219 Move X3, X31
	220 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	221 Move X8, [X25+32]
	222 Move X8, [X8+192]
	223 Move X0, [X8+16]
	224 Move W9, [X0+309]
	225 Move TEMP, X9
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {232}
	229 Call 0x1C5D684
	230 Move X8, [X25+32]
	231 Move X8, [X8+192]
	232 Move X9, [X0+184]
	233 Move [X9+8], X23
	234 Move X0, [X8+16]
	235 Move W8, [X0+309]
	236 Move TEMP, X8
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {241}
	240 Call 0x1C5D684
	241 Move X8, 0x1573000
	242 Move X8, [X8+3424]
	243 Move X2, [X8]
	244 Move X0, X22
	245 Move X1, X23
	246 Call Enumerable.Where, X0, X1
	247 Move X22, X0
	248 Compare X0, 0
	249 JumpIfEqual {565}
	250 Move X10, 0x1575000
	251 Move X8, [X22]
	252 Move X10, [X10+3032]
	253 NotImplemented "Instruction LDRH not yet implemented."
	254 Move X1, [X10]
	255 Compare X9, 0
	256 JumpIfEqual {263}
	257 Move X10, [X8+176]
	258 Add X10, X10, 8
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract X9, X9, 1
	262 Add X10, X10, 16
	263 Move X0, X22
	264 Move W2, W31
	265 Call 0x1C5D788
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add X8, X8, X9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X1, [X0+8]
	271 Move X0, X22
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move X22, X0
	274 Compare X0, 0
	275 JumpIfEqual {566}
	276 Move X29, 0x154A000
	277 Move X28, 0x1575000
	278 Move X20, 0x154A000
	279 Move X26, 0x154A000
	280 Move X27, 0x154B000
	281 Move X29, [X29+3608]
	282 Move X28, [X28+3080]
	283 Move X20, [X20+3576]
	284 Move X26, [X26+1880]
	285 Move X27, [X27+3600]
	286 Move X19, X25
	287 Move X8, [X22]
	288 Move X1, [X29]
	289 NotImplemented "Instruction LDRH not yet implemented."
	290 Compare X9, 0
	291 JumpIfEqual {298}
	292 Move X10, [X8+176]
	293 Add X10, X10, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X9, X9, 1
	297 Add X10, X10, 16
	298 Move X0, X22
	299 Move W2, W31
	300 Call 0x1C5D788
	301 NotImplemented "Instruction LDRSW not yet implemented."
	302 Add X8, X8, X9
	303 Add X0, X8, 312
	304 Move X8, [X0]
	305 Move X1, [X0+8]
	306 Move X0, X22
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {462}
	312 Move X8, [X22]
	313 Move X10, 0x1575000
	314 NotImplemented "Instruction LDRH not yet implemented."
	315 Move X10, [X10+3040]
	316 Move X1, [X10]
	317 Compare X9, 0
	318 JumpIfEqual {325}
	319 Move X10, [X8+176]
	320 Add X10, X10, 8
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Subtract X9, X9, 1
	324 Add X10, X10, 16
	325 Move X0, X22
	326 Move W2, W31
	327 Call 0x1C5D788
	328 NotImplemented "Instruction LDRSW not yet implemented."
	329 Add X8, X8, X9
	330 Add X0, X8, 312
	331 Move X8, [X0]
	332 Move X1, [X0+8]
	333 Move X0, X22
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Move X8, 0x1575000
	336 Move X8, [X8+3016]
	337 Move X23, X0
	338 Move X1, [X8]
	339 Call 0x21A991C, X0
	340 Compare X0, 0
	341 JumpIfEqual {343}
	342 Move X25, [X0+24]
	343 Move X8, [X19+32]
	344 Move X8, [X8+192]
	345 Move X0, [X8+32]
	346 Move W8, [X0+309]
	347 Move TEMP, X8
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {352}
	351 Call 0x1C5D684
	352 Move W8, [X0+224]
	353 Compare W8, 0
	354 JumpIfNotEqual {356}
	355 Call 0x1C17DFC
	356 Move X8, [X19+32]
	357 Move X8, [X8+192]
	358 Move X0, [X8+32]
	359 Move W8, [X0+309]
	360 Move TEMP, X8
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {365}
	364 Call 0x1C5D684
	365 Compare X23, 0
	366 JumpIfEqual {547}
	367 Move X8, [X0+184]
	368 Move X9, [X23]
	369 Move X24, [X8]
	370 Move X8, [X9+424]
	371 Move X1, [X9+432]
	372 Move X0, X23
	373 NotImplemented "Instruction BLR not yet implemented."
	374 Move X1, X0
	375 Compare X24, 0
	376 JumpIfEqual {548}
	377 Move X8, 0x1575000
	378 Move X8, [X8+3112]
	379 Move X2, [X8]
	380 Move X0, X24
	381 Move X3, X31
	382 Call Regex.Replace, X0, X1, X2
	383 Move X25, X0
	384 Move X8, 0x1575000
	385 Move X8, [X8+3024]
	386 Move X0, [X8]
	387 Call 0x1C17F10
	388 Move X24, X0
	389 Move X1, X25
	390 Move X2, X31
	391 Call GUIContent..ctor, X0, X1
	392 Move X0, [X31+56]
	393 Compare X0, 0
	394 JumpIfEqual {544}
	395 Move W10, [X0+28]
	396 Move X8, [X0+16]
	397 Move X9, [X28]
	398 Add W10, W10, 1
	399 Move [X0+28], W10
	400 Compare X8, 0
	401 JumpIfEqual {542}
	402 NotImplemented "Instruction LDRSW not yet implemented."
	403 Move W11, [X8+24]
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Add W9, W10, 1
	406 Add X8, X8, X10
	407 Move [X0+24], W9
	408 Move [X8+32], X24
	409 Move X8, [X9+32]
	410 Move X8, [X8+192]
	411 Move X2, [X8+112]
	412 Move X1, X24
	413 Call List`1<Object>.AddWithResize, X0, X1
	414 Compare X23, 0
	415 JumpIfEqual {545}
	416 Move X8, [X23]
	417 Move X24, [X31+32]
	418 Move X9, [X8+424]
	419 Move X1, [X8+432]
	420 Move X0, X23
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Move X23, X0
	423 Move X0, [X20]
	424 Move W8, [X0+224]
	425 Compare W8, 0
	426 JumpIfNotEqual {428}
	427 Call 0x1C17DFC
	428 Move X0, X21
	429 Move X1, X23
	430 Move X2, X31
	431 Call Enum.Parse, X0, X1
	432 Compare X24, 0
	433 JumpIfEqual {541}
	434 Compare X0, 0
	435 JumpIfEqual {543}
	436 Move X8, [X0]
	437 Move X1, [X26]
	438 Move X8, [X8+64]
	439 Move X9, [X1+64]
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Call 0x1C17E08
	442 Move W10, [X24+28]
	443 Move W1, [X0]
	444 Move X8, [X24+16]
	445 Move X9, [X27]
	446 Add W10, W10, 1
	447 Move [X24+28], W10
	448 Compare X8, 0
	449 JumpIfEqual {546}
	450 NotImplemented "Instruction LDRSW not yet implemented."
	451 Move W11, [X8+24]
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Add W9, W10, 1
	454 Add X8, X8, X10
	455 Move [X24+24], W9
	456 Move [X8+32], W1
	457 Move X8, [X9+32]
	458 Move X8, [X8+192]
	459 Move X2, [X8+112]
	460 Move X0, X24
	461 Call List`1<Int32>.AddWithResize, X0, X1
	462 Move X23, X31
	463 Move W19, 11
	464 Compare X22, 0
	465 JumpIfEqual {489}
	466 Move X8, [X22]
	467 Move X10, 0x154A000
	468 NotImplemented "Instruction LDRH not yet implemented."
	469 Move X10, [X10+3584]
	470 Move X1, [X10]
	471 Compare X9, 0
	472 JumpIfEqual {479}
	473 Move X10, [X8+176]
	474 Add X10, X10, 8
	475 NotImplemented "Instruction LDUR not yet implemented."
	476 NotImplemented "Instruction CMP not yet implemented."
	477 Subtract X9, X9, 1
	478 Add X10, X10, 16
	479 Move X0, X22
	480 Move W2, W31
	481 Call 0x1C5D788
	482 NotImplemented "Instruction LDRSW not yet implemented."
	483 Add X8, X8, X9
	484 Add X0, X8, 312
	485 Move X8, [X0]
	486 Move X1, [X0+8]
	487 Move X0, X22
	488 NotImplemented "Instruction BLR not yet implemented."
	489 Compare X23, 0
	490 JumpIfNotEqual {569}
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Compare W19, 0
	493 JumpIfNotEqual {513}
	494 Move X0, [X31+56]
	495 Compare X0, 0
	496 JumpIfEqual {571}
	497 Move X8, 0x1575000
	498 Move X8, [X8+3088]
	499 Move X1, [X8]
	500 Call List`1<Object>.ToArray, X0
	501 Move X19, [X31+8]
	502 Move [X19+96], X0
	503 Move X0, [X31+32]
	504 Compare X0, 0
	505 JumpIfEqual {572}
	506 Move X8, 0x154B000
	507 Move X8, [X8+3608]
	508 Move X1, [X8]
	509 Call List`1<Int32>.ToArray, X0
	510 Move X1, X0
	511 Move X0, X19
	512 Call 0x2BAA724, X0, X1
	513 Move X19, X31
	514 Move X8, 0x1575000
	515 Move X8, [X8+3104]
	516 Move X1, [X8]
	517 Add X0, X31, 16
	518 Call 0x24A79BC, X0
	519 Compare X19, 0
	520 JumpIfNotEqual {567}
	521 Move X8, 0x1575000
	522 Move X8, [X8+3096]
	523 Add X0, X31, 40
	524 Move X1, [X8]
	525 Call 0x24A79BC, X0
	526 Move X20, [X31+144]
	527 Move X19, [X31+152]
	528 Move X22, [X31+128]
	529 Move X21, [X31+136]
	530 Move X24, [X31+112]
	531 Move X23, [X31+120]
	532 Move X26, [X31+96]
	533 Move X25, [X31+104]
	534 Move X28, [X31+80]
	535 Move X27, [X31+88]
	536 Move X29, [X31+64]
	537 Move X30, [X31+72]
	538 Add X31, X31, 160
	539 Return 
	540 Call 0x1C181E0
	541 Call 0x1C17F20
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Call 0x1C17F20
	545 Call 0x1C17F20
	546 Call 0x1C17F20
	547 Call 0x1C17F20
	548 Call 0x1C17F20
	549 Move X0, 0x1551000
	550 Move X0, [X0+1400]
	551 Call 0x1C17D08
	552 Call 0x1C17F10
	553 Move X19, X0
	554 Move X0, 0x1574000
	555 Move X0, [X0+3120]
	556 Call 0x1C17D08
	557 Move X1, X0
	558 Move X0, X19
	559 Move X2, X31
	560 Call ArgumentException..ctor, X0, X1
	561 Move X0, X19
	562 Move X1, X25
	563 Call 0x1C17DEC
	564 Call 0x1C17F20
	565 Call 0x1C17F20
	566 Call 0x1C17F20
	567 Move X0, X19
	568 Call 0x1C17F18
	569 Move X0, X23
	570 Call 0x1C17F18
	571 Call 0x1C17F20
	572 Call 0x1C17F20
	573 Move X21, X1
	574 Move X20, X0
	575 Move X21, X1
	576 Move X20, X0
	577 Move X21, X1
	578 Move X20, X0
	579 NotImplemented "Instruction CMP not yet implemented."
	580 Move X0, X20
	581 Call 0x3EB2AD0
	582 Move X23, [X0]
	583 Call 0x3EB2AE0
	584 Move W19, W31
	585 Compare X22, 0
	586 JumpIfNotEqual {466}
	587 Move X23, X31
	588 Compare X22, 0
	589 JumpIfEqual {613}
	590 Move X8, [X22]
	591 Move X10, 0x1549000
	592 NotImplemented "Instruction LDRH not yet implemented."
	593 Move X10, [X10+3584]
	594 Move X1, [X10]
	595 Compare X9, 0
	596 JumpIfEqual {603}
	597 Move X10, [X8+176]
	598 Add X10, X10, 8
	599 NotImplemented "Instruction LDUR not yet implemented."
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Subtract X9, X9, 1
	602 Add X10, X10, 16
	603 Move X0, X22
	604 Move W2, W31
	605 Call 0x1C5D788
	606 NotImplemented "Instruction LDRSW not yet implemented."
	607 Add X8, X8, X9
	608 Add X0, X8, 312
	609 Move X8, [X0]
	610 Move X1, [X0+8]
	611 Move X0, X22
	612 NotImplemented "Instruction BLR not yet implemented."
	613 Compare X23, 0
	614 JumpIfNotEqual {642}
	615 NotImplemented "Instruction CMP not yet implemented."
	616 Move X0, X20
	617 Call 0x3EB2AD0
	618 Move X19, [X0]
	619 Call 0x3EB2AE0
	620 Move X19, X31
	621 Move X8, 0x1574000
	622 Move X8, [X8+3104]
	623 Move X1, [X8]
	624 Add X0, X31, 16
	625 Call 0x24A79BC, X0
	626 Compare X19, 0
	627 JumpIfNotEqual {645}
	628 NotImplemented "Instruction CMP not yet implemented."
	629 Move X0, X20
	630 Call 0x3EB2AD0
	631 Move X19, [X0]
	632 Call 0x3EB2AE0
	633 Move X8, 0x1574000
	634 Move X8, [X8+3096]
	635 Add X0, X31, 40
	636 Move X1, [X8]
	637 Call 0x24A79BC, X0
	638 Compare X19, 0
	639 JumpIfEqual {526}
	640 Move X0, X19
	641 Call 0x1C17F18
	642 Move X0, X23
	643 Call 0x1C17F18
	644 Move X19, X31
	645 Move X0, X19
	646 Call 0x1C17F18
	647 Move X21, X1
	648 Move X20, X0
	649 Move X20, X0
	650 Move X8, 0x1574000
	651 Move X8, [X8+3096]
	652 Move X1, [X8]
	653 Add X0, X31, 40
	654 Call 0x24A79BC, X0
	655 Compare X19, 0
	656 JumpIfNotEqual {659}
	657 Move X0, X20
	658 Call 0x1D2D690
	659 Move X0, X19
	660 Call 0x1C17F18
	661 Move X21, X1
	662 Move X20, X0
	663 Compare X22, 0
	664 JumpIfNotEqual {590}
	665 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x02BAB280 STRB W8, [X20 + 0x5EA]
	0x02BAB284 LDR X0, [X19]
	0x02BAB288 STP X31, X31, [X31 + 0x30]
	0x02BAB28C STP X31, X31, [X31 + 0x20]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+56]
	004 Call Field`1<Int32>..ctor, X0
	005 Return 

Method: System.Void .cctor()

Disassembly:
	0x02BAB290 STP X31, X31, [X31 + 0x10]
	0x02BAB294 LDR W8, [X0 + 0xE0]
	0x02BAB298 CBNZ W8, 0x2BAB2A0
	0x02BAB29C BL 0x1C16DFC
	0x02BAB2A0 MOV X0, X21
	0x02BAB2A4 MOV X1, X31
	0x02BAB2A8 MOV X2, X31
	0x02BAB2AC BL 0x3395194
	0x02BAB2B0 TBNZ X0, 0x0, 0x2BAB8C0
	0x02BAB2B4 CBZ X21, 0x2BAB8FC
	0x02BAB2B8 LDR X8, [X21]
	0x02BAB2BC MOV X0, X21
	0x02BAB2C0 LDR X9, [X8 + 0x588]
	0x02BAB2C4 LDR X1, [X8 + 0x590]
	0x02BAB2C8 BLR X9
	0x02BAB2CC TBZ X0, 0x0, 0x2BAB8C0
	0x02BAB2D0 ADRP X8, 0x1573000
	0x02BAB2D4 LDR X8, [X8 + 0xC00]
	0x02BAB2D8 ADRP X20, 0x1573000
	0x02BAB2DC ADRP X19, 0x1573000
	0x02BAB2E0 LDR X0, [X8]
	0x02BAB2E4 LDR W8, [X0 + 0xE0]
	0x02BAB2E8 LDR X20, [X20 + 0xBF0]
	0x02BAB2EC LDR X19, [X19 + 0xBF8]
	0x02BAB2F0 CBNZ W8, 0x2BAB2F8
	0x02BAB2F4 BL 0x1C16DFC
	0x02BAB2F8 LDR X1, [X20]
	0x02BAB2FC ADD X0, X31, 0x38
	0x02BAB300 BL 0x2EF26F4
	0x02BAB304 MOV X8, X0
	0x02BAB308 LDR X0, [X19]
	0x02BAB30C STP X8, X1, [X31 + 0x28]
	0x02BAB310 LDR W8, [X0 + 0xE0]
	0x02BAB314 CBNZ W8, 0x2BAB31C
	0x02BAB318 BL 0x1C16DFC
	0x02BAB31C ADRP X8, 0x1573000
	0x02BAB320 LDR X8, [X8 + 0xBE8]
	0x02BAB324 LDR X1, [X8]
	0x02BAB328 ADD X0, X31, 0x20
	0x02BAB32C BL 0x2EF2344
	0x02BAB330 STP X0, X1, [X31 + 0x10]
	0x02BAB334 LDR X8, [X21]
	0x02BAB338 LDR X9, [X8 + 0x688]
	0x02BAB33C LDR X2, [X8 + 0x690]
	0x02BAB340 MOVZ W1, 0x18
	0x02BAB344 MOV X0, X21
	0x02BAB348 BLR X9
	0x02BAB34C LDR X8, [X25 + 0x20]
	0x02BAB350 MOV X22, X0
	0x02BAB354 LDR X8, [X8 + 0xC0]
	0x02BAB358 LDR X0, [X8 + 0x10]
	0x02BAB35C LDRB W8, [X0 + 0x135]
	0x02BAB360 TBNZ X8, 0x0, 0x2BAB368

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1831000
	007 Move X22, 0x1551000
	008 Move X20, 0x1574000
	009 Move W8, [X21+1509]
	010 Move X22, [X22+1536]
	011 Move X20, [X20+3128]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1551000
	018 Move X0, [X0+1536]
	019 Call 0x1C17CF4
	020 Move X0, 0x1574000
	021 Move X0, [X0+3128]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1509], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move W2, 8
	029 Move X3, X31
	030 Move X20, X0
	031 Call Regex..ctor, X0, X1, X2
	032 Move X0, [X19+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, [X8+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+184]
	048 Move [X8], X20
	049 Move X0, [X19+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, [X8+32]
	058 Move W8, [X0+309]
	059 Move TEMP, X8
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {70}
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Call 0x1C5D684
	069 Return 
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 

