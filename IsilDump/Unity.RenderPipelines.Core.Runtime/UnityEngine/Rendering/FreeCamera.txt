Type: UnityEngine.Rendering.FreeCamera

Method: System.Void OnEnable()

Disassembly:
	0x0399D6A0 LDR X0, [X20]

ISIL:
No ISIL was generated
Method: System.Void RegisterInputs()

Disassembly:
	0x0399D6A4 LDR X8, [X0 + 0xB8]
	0x0399D6A8 LDR X0, [X8]
	0x0399D6AC CBZ X0, 0x399D6CC
	0x0399D6B0 ADRP X8, 0x7B4000
	0x0399D6B4 LDR X8, [X8 + 0x210]
	0x0399D6B8 MOV X1, X19
	0x0399D6BC LDP X20, X19, [X31 + 0x10]
	0x0399D6C0 LDR X2, [X8]
	0x0399D6C4 LDP X30, X21, [X31], #0x20
	0x0399D6C8 B 0x2493D8C
	0x0399D6CC BL 0x1C16F20
	0x0399D6D0 STR X30, [X31 - 0x40]!
	0x0399D6D4 STP X24, X23, [X31 + 0x10]
	0x0399D6D8 STP X22, X21, [X31 + 0x20]
	0x0399D6DC STP X20, X19, [X31 + 0x30]
	0x0399D6E0 ADRP X20, 0xA44000
	0x0399D6E4 ADRP X19, 0x7B4000
	0x0399D6E8 LDRB W8, [X20 + 0xB5C]
	0x0399D6EC LDR X19, [X19 + 0x218]
	0x0399D6F0 TBNZ X8, 0x0, 0x399D744
	0x0399D6F4 ADRP X0, 0x7B3000
	0x0399D6F8 LDR X0, [X0 + 0xD20]
	0x0399D6FC BL 0x1C16CF4
	0x0399D700 ADRP X0, 0x7B4000
	0x0399D704 LDR X0, [X0 + 0x220]
	0x0399D708 BL 0x1C16CF4
	0x0399D70C ADRP X0, 0x7B4000
	0x0399D710 LDR X0, [X0 + 0x228]
	0x0399D714 BL 0x1C16CF4
	0x0399D718 ADRP X0, 0x7B4000
	0x0399D71C LDR X0, [X0 + 0x230]
	0x0399D720 BL 0x1C16CF4
	0x0399D724 ADRP X0, 0x7B4000
	0x0399D728 LDR X0, [X0 + 0x218]
	0x0399D72C BL 0x1C16CF4
	0x0399D730 ADRP X0, 0x7B4000
	0x0399D734 LDR X0, [X0 + 0x238]
	0x0399D738 BL 0x1C16CF4
	0x0399D73C MOVZ W8, 0x1
	0x0399D740 STRB W8, [X20 + 0xB5C]
	0x0399D744 LDR X0, [X19]
	0x0399D748 ADRP X24, 0x7B4000
	0x0399D74C ADRP X20, 0x7B4000
	0x0399D750 ADRP X23, 0x7B4000
	0x0399D754 ADRP X22, 0x7B4000
	0x0399D758 ADRP X21, 0x7B3000
	0x0399D75C LDR X24, [X24 + 0x238]
	0x0399D760 LDR W8, [X0 + 0xE0]
	0x0399D764 LDR X20, [X20 + 0x230]
	0x0399D768 LDR X23, [X23 + 0x228]
	0x0399D76C LDR X22, [X22 + 0x220]
	0x0399D770 LDR X21, [X21 + 0xD20]
	0x0399D774 CBNZ W8, 0x399D780
	0x0399D778 BL 0x1C16DFC
	0x0399D77C LDR X0, [X19]
	0x0399D780 LDR X8, [X0 + 0xB8]
	0x0399D784 LDR X0, [X24]
	0x0399D788 LDR X19, [X8]
	0x0399D78C BL 0x1C16F10
	0x0399D790 LDR X2, [X20]
	0x0399D794 MOV X1, X19
	0x0399D798 MOV X3, X31
	0x0399D79C MOV X20, X0
	0x0399D7A0 BL 0x2725C6C
	0x0399D7A4 LDR X0, [X23]
	0x0399D7A8 BL 0x1C16F10
	0x0399D7AC LDR X4, [X22]
	0x0399D7B0 MOVZ W3, 0x1
	0x0399D7B4 MOV X1, X31
	0x0399D7B8 MOV X2, X20
	0x0399D7BC MOV X19, X0
	0x0399D7C0 BL 0x2493C20
	0x0399D7C4 LDR X8, [X21]
	0x0399D7C8 LDP X22, X21, [X31 + 0x20]
	0x0399D7CC LDP X24, X23, [X31 + 0x10]
	0x0399D7D0 LDR X8, [X8 + 0xB8]
	0x0399D7D4 STR X19, [X8]
	0x0399D7D8 LDP X20, X19, [X31 + 0x30]
	0x0399D7DC LDR X30, [X31], #0x40
	0x0399D7E0 RET
	0x0399D7E4 STR X30, [X31 - 0x20]!
	0x0399D7E8 STP X20, X19, [X31 + 0x10]
	0x0399D7EC ADRP X19, 0xA44000
	0x0399D7F0 ADRP X20, 0x7B4000
	0x0399D7F4 LDRB W8, [X19 + 0xB5D]
	0x0399D7F8 LDR X20, [X20 + 0x218]
	0x0399D7FC TBNZ X8, 0x0, 0x399D814
	0x0399D800 ADRP X0, 0x7B4000
	0x0399D804 LDR X0, [X0 + 0x218]
	0x0399D808 BL 0x1C16CF4
	0x0399D80C MOVZ W8, 0x1
	0x0399D810 STRB W8, [X19 + 0xB5D]
	0x0399D814 LDR X0, [X20]
	0x0399D818 BL 0x1C16F10
	0x0399D81C MOV X1, X31
	0x0399D820 MOV X19, X0
	0x0399D824 BL 0x33BDD8C
	0x0399D828 LDR X8, [X20]
	0x0399D82C LDR X8, [X8 + 0xB8]
	0x0399D830 STR X19, [X8]
	0x0399D834 LDP X20, X19, [X31 + 0x10]
	0x0399D838 LDR X30, [X31], #0x20
	0x0399D83C RET
	0x0399D840 MOV X1, X31
	0x0399D844 B 0x33BDD8C
	0x0399D848 CBZ X1, 0x399D858
	0x0399D84C MOV X0, X1
	0x0399D850 MOV X1, X31
	0x0399D854 B 0x3C4C310
	0x0399D858 STR X30, [X31 - 0x10]!
	0x0399D85C BL 0x1C16F20
	0x0399D860 SUB X31, X31, 0x40
	0x0399D864 STP X30, X21, [X31 + 0x20]
	0x0399D868 STP X20, X19, [X31 + 0x30]
	0x0399D86C ADRP X19, 0xA44000
	0x0399D870 ADRP X21, 0x781000
	0x0399D874 LDRB W8, [X19 + 0xB5E]
	0x0399D878 LDR X21, [X21 + 0x570]
	0x0399D87C TBNZ X8, 0x0, 0x399D8D0
	0x0399D880 ADRP X0, 0x781000
	0x0399D884 LDR X0, [X0 + 0x570]
	0x0399D888 BL 0x1C16CF4
	0x0399D88C ADRP X0, 0x7B4000
	0x0399D890 LDR X0, [X0 + 0x240]
	0x0399D894 BL 0x1C16CF4
	0x0399D898 ADRP X0, 0x7B4000
	0x0399D89C LDR X0, [X0 + 0x248]
	0x0399D8A0 BL 0x1C16CF4
	0x0399D8A4 ADRP X0, 0x7B4000
	0x0399D8A8 LDR X0, [X0 + 0x250]
	0x0399D8AC BL 0x1C16CF4
	0x0399D8B0 ADRP X0, 0x7B4000
	0x0399D8B4 LDR X0, [X0 + 0x258]
	0x0399D8B8 BL 0x1C16CF4
	0x0399D8BC ADRP X0, 0x7B4000
	0x0399D8C0 LDR X0, [X0 + 0x260]
	0x0399D8C4 BL 0x1C16CF4
	0x0399D8C8 MOVZ W8, 0x1
	0x0399D8CC STRB W8, [X19 + 0xB5E]
	0x0399D8D0 LDR X0, [X21]
	0x0399D8D4 STP X31, X31, [X31 + 0x8]
	0x0399D8D8 STR X31, [X31 + 0x18]
	0x0399D8DC LDR W8, [X0 + 0xE0]
	0x0399D8E0 CBNZ W8, 0x399D8EC
	0x0399D8E4 BL 0x1C16DFC
	0x0399D8E8 LDR X0, [X21]
	0x0399D8EC LDR X8, [X0 + 0xB8]
	0x0399D8F0 LDR X0, [X8]
	0x0399D8F4 CBZ X0, 0x399D9A8
	0x0399D8F8 ADRP X8, 0x7B4000
	0x0399D8FC LDR X8, [X8 + 0x260]
	0x0399D900 ADRP X20, 0x7B4000
	0x0399D904 ADRP X19, 0x7B4000
	0x0399D908 LDR X1, [X8]
	0x0399D90C LDR X20, [X20 + 0x248]
	0x0399D910 LDR X19, [X19 + 0x240]
	0x0399D914 ADD X8, X31, 0x8
	0x0399D918 BL 0x301CB58
	0x0399D91C LDR X1, [X20]
	0x0399D920 ADD X0, X31, 0x8
	0x0399D924 BL 0x2BC4350
	0x0399D928 TBZ X0, 0x0, 0x399D944
	0x0399D92C LDR X0, [X31 + 0x18]
	0x0399D930 CBZ X0, 0x399D9A4
	0x0399D934 LDR X8, [X0]
	0x0399D938 LDP X9, X1, [X8 + 0x178]
	0x0399D93C BLR X9
	0x0399D940 B 0x399D91C
	0x0399D944 LDR X1, [X19]
	0x0399D948 ADD X0, X31, 0x8
	0x0399D94C BL 0x2BC434C
	0x0399D950 LDR X0, [X21]
	0x0399D954 LDR W8, [X0 + 0xE0]
	0x0399D958 CBNZ W8, 0x399D964
	0x0399D95C BL 0x1C16DFC
	0x0399D960 LDR X0, [X21]
	0x0399D964 LDR X8, [X0 + 0xB8]
	0x0399D968 LDR X8, [X8]
	0x0399D96C CBZ X8, 0x399D9A8
	0x0399D970 LDP W2, W9, [X8 + 0x18]
	0x0399D974 ADD W9, W9, 0x1
	0x0399D978 CMP W2, 0x1
	0x0399D97C STP W31, W9, [X8 + 0x18]
	0x0399D980 B.LT 0x399D994
	0x0399D984 LDR X0, [X8 + 0x10]
	0x0399D988 MOV W1, W31
	0x0399D98C MOV X3, X31
	0x0399D990 BL 0x339FA34
	0x0399D994 LDP X20, X19, [X31 + 0x30]
	0x0399D998 LDP X30, X21, [X31 + 0x20]
	0x0399D99C ADD X31, X31, 0x40
	0x0399D9A0 RET
	0x0399D9A4 BL 0x1C16F20
	0x0399D9A8 BL 0x1C16F20
	0x0399D9AC B 0x399D9B4
	0x0399D9B0 B 0x399D9B4
	0x0399D9B4 MOV X19, X0
	0x0399D9B8 CMP W1, 0x1
	0x0399D9BC B.NE 0x399D9F0
	0x0399D9C0 MOV X0, X19
	0x0399D9C4 BL 0x3EB1AD0
	0x0399D9C8 LDR X20, [X0]
	0x0399D9CC BL 0x3EB1AE0
	0x0399D9D0 ADRP X8, 0x7B4000
	0x0399D9D4 LDR X8, [X8 + 0x240]
	0x0399D9D8 ADD X0, X31, 0x8
	0x0399D9DC LDR X1, [X8]
	0x0399D9E0 BL 0x2BC434C
	0x0399D9E4 CBZ X20, 0x399D950
	0x0399D9E8 MOV X0, X20
	0x0399D9EC BL 0x1C16F18
	0x0399D9F0 MOV X20, X31
	0x0399D9F4 B 0x399D9FC
	0x0399D9F8 MOV X19, X0
	0x0399D9FC ADRP X8, 0x7B4000
	0x0399DA00 LDR X8, [X8 + 0x240]
	0x0399DA04 LDR X1, [X8]
	0x0399DA08 ADD X0, X31, 0x8
	0x0399DA0C BL 0x2BC434C
	0x0399DA10 CBNZ X20, 0x399DA1C
	0x0399DA14 MOV X0, X19
	0x0399DA18 BL 0x1D2C690
	0x0399DA1C MOV X0, X20
	0x0399DA20 BL 0x1C16F18
	0x0399DA24 BL 0x1990590
	0x0399DA28 STP X30, X21, [X31 - 0x20]!
	0x0399DA2C STP X20, X19, [X31 + 0x10]
	0x0399DA30 ADRP X21, 0xA44000
	0x0399DA34 ADRP X20, 0x781000
	0x0399DA38 LDRB W8, [X21 + 0xB5F]
	0x0399DA3C LDR X20, [X20 + 0x570]
	0x0399DA40 MOV X19, X0
	0x0399DA44 TBNZ X8, 0x0, 0x399DA68
	0x0399DA48 ADRP X0, 0x781000
	0x0399DA4C LDR X0, [X0 + 0x570]
	0x0399DA50 BL 0x1C16CF4
	0x0399DA54 ADRP X0, 0x7B4000
	0x0399DA58 LDR X0, [X0 + 0x268]
	0x0399DA5C BL 0x1C16CF4
	0x0399DA60 MOVZ W8, 0x1
	0x0399DA64 STRB W8, [X21 + 0xB5F]
	0x0399DA68 LDR X0, [X20]
	0x0399DA6C LDR W8, [X0 + 0xE0]
	0x0399DA70 CBNZ W8, 0x399DA7C
	0x0399DA74 BL 0x1C16DFC
	0x0399DA78 LDR X0, [X20]
	0x0399DA7C LDR X8, [X0 + 0xB8]
	0x0399DA80 LDR X0, [X8]
	0x0399DA84 CBZ X0, 0x399DAF0
	0x0399DA88 ADRP X9, 0x7B4000
	0x0399DA8C LDR X9, [X9 + 0x268]
	0x0399DA90 LDR W10, [X0 + 0x1C]
	0x0399DA94 LDR X8, [X0 + 0x10]
	0x0399DA98 LDR X9, [X9]
	0x0399DA9C ADD W10, W10, 0x1
	0x0399DAA0 STR W10, [X0 + 0x1C]
	0x0399DAA4 CBZ X8, 0x399DAF0
	0x0399DAA8 LDRSW X10, [X0 + 0x18]
	0x0399DAAC LDR W11, [X8 + 0x18]
	0x0399DAB0 CMP W10, W11
	0x0399DAB4 B.CS 0x399DAD4
	0x0399DAB8 ADD W9, W10, 0x1
	0x0399DABC ADD X8, X8, X10, 0x3, LSL
	0x0399DAC0 STR W9, [X0 + 0x18]
	0x0399DAC4 STR X19, [X8 + 0x20]
	0x0399DAC8 LDP X20, X19, [X31 + 0x10]
	0x0399DACC LDP X30, X21, [X31], #0x20
	0x0399DAD0 RET
	0x0399DAD4 LDR X8, [X9 + 0x20]
	0x0399DAD8 MOV X1, X19
	0x0399DADC LDP X20, X19, [X31 + 0x10]
	0x0399DAE0 LDR X8, [X8 + 0xC0]
	0x0399DAE4 LDR X2, [X8 + 0x70]
	0x0399DAE8 LDP X30, X21, [X31], #0x20
	0x0399DAEC B 0x301BF90
	0x0399DAF0 BL 0x1C16F20
	0x0399DAF4 MOV X1, X31
	0x0399DAF8 B 0x33BDD8C
	0x0399DAFC STR X30, [X31 - 0x30]!
	0x0399DB00 STP X22, X21, [X31 + 0x10]
	0x0399DB04 STP X20, X19, [X31 + 0x20]
	0x0399DB08 ADRP X21, 0xA44000
	0x0399DB0C ADRP X22, 0x7B4000
	0x0399DB10 ADRP X19, 0x7B4000
	0x0399DB14 ADRP X20, 0x781000
	0x0399DB18 LDRB W8, [X21 + 0xB60]
	0x0399DB1C LDR X22, [X22 + 0x270]
	0x0399DB20 LDR X19, [X19 + 0x278]
	0x0399DB24 LDR X20, [X20 + 0x570]
	0x0399DB28 TBNZ X8, 0x0, 0x399DB58
	0x0399DB2C ADRP X0, 0x781000
	0x0399DB30 LDR X0, [X0 + 0x570]
	0x0399DB34 BL 0x1C16CF4
	0x0399DB38 ADRP X0, 0x7B4000
	0x0399DB3C LDR X0, [X0 + 0x278]
	0x0399DB40 BL 0x1C16CF4
	0x0399DB44 ADRP X0, 0x7B4000
	0x0399DB48 LDR X0, [X0 + 0x270]
	0x0399DB4C BL 0x1C16CF4
	0x0399DB50 MOVZ W8, 0x1
	0x0399DB54 STRB W8, [X21 + 0xB60]
	0x0399DB58 LDR X0, [X22]
	0x0399DB5C BL 0x1C16F10
	0x0399DB60 LDR X1, [X19]
	0x0399DB64 MOV X19, X0
	0x0399DB68 BL 0x301B7C4
	0x0399DB6C LDR X8, [X20]
	0x0399DB70 LDP X22, X21, [X31 + 0x10]
	0x0399DB74 LDR X8, [X8 + 0xB8]
	0x0399DB78 STR X19, [X8]
	0x0399DB7C LDP X20, X19, [X31 + 0x20]
	0x0399DB80 LDR X30, [X31], #0x30
	0x0399DB84 RET
	0x0399DB88 MOV X1, X31
	0x0399DB8C B 0x33BDD8C
	0x0399DB90 MOV X1, X31
	0x0399DB94 B 0x33A51F0
	0x0399DB98 MOV X1, X31
	0x0399DB9C B 0x33A51F0
	0x0399DBA0 STP X30, X19, [X31 - 0x10]!
	0x0399DBA4 CMP W0, 0x8
	0x0399DBA8 B.HI 0x399DBCC
	0x0399DBAC MOVZ W8, 0x1
	0x0399DBB0 LSLV W8, W8, W0
	0x0399DBB4 MOVZ W9, 0x114
	0x0399DBB8 ANDS W31, W8, W9, 0x0
	0x0399DBBC B.EQ 0x399DBCC
	0x0399DBC0 STR W8, [X1]
	0x0399DBC4 LDP X30, X19, [X31], #0x10
	0x0399DBC8 RET
	0x0399DBCC ADRP X0, 0x756000
	0x0399DBD0 LDR X0, [X0 + 0x7D0]
	0x0399DBD4 BL 0x1C16D08
	0x0399DBD8 BL 0x1C16F10
	0x0399DBDC MOV X19, X0
	0x0399DBE0 ADRP X0, 0x7B4000
	0x0399DBE4 LDR X0, [X0 + 0x280]
	0x0399DBE8 BL 0x1C16D08
	0x0399DBEC MOV X1, X0
	0x0399DBF0 MOV X0, X19
	0x0399DBF4 MOV X2, X31
	0x0399DBF8 BL 0x33B2C70
	0x0399DBFC ADRP X0, 0x7B4000
	0x0399DC00 LDR X0, [X0 + 0x288]
	0x0399DC04 BL 0x1C16D08
	0x0399DC08 MOV X1, X0
	0x0399DC0C MOV X0, X19
	0x0399DC10 BL 0x1C16DEC
	0x0399DC14 ADD W8, W0, W0, 0x1, LSL
	0x0399DC18 ADD W0, W8, W1
	0x0399DC1C RET
	0x0399DC20 ADD X8, X2, W0, 0x2, SXTW
	0x0399DC24 STR X2, [X3]
	0x0399DC28 STR X8, [X4]
	0x0399DC2C ADD X8, X8, W0, 0x2, SXTW
	0x0399DC30 STR X8, [X5]
	0x0399DC34 ADD X8, X8, W0, 0x2, SXTW
	0x0399DC38 STR X8, [X6]
	0x0399DC3C RET
	0x0399DC40 CMP W2, 0x2
	0x0399DC44 B.LT 0x399DD70
	0x0399DC48 MOVZ W8, 0x1
	0x0399DC4C CMP W8, W2
	0x0399DC50 UBFM W9, W8, 0x1F, 0x1E
	0x0399DC54 B.GE 0x399DD64
	0x0399DC58 MOV W10, W31
	0x0399DC5C MOV W14, W8
	0x0399DC60 ADD W11, W14, W8
	0x0399DC64 CMP W11, W2
	0x0399DC68 CSEL W11, W2, W11, GT
	0x0399DC6C CMP W14, W11
	0x0399DC70 MOV W13, W14
	0x0399DC74 MOV W15, W10
	0x0399DC78 MOV W12, W10
	0x0399DC7C B.GE 0x399DCD0
	0x0399DC80 CMP W10, W14
	0x0399DC84 MOV W13, W14
	0x0399DC88 MOV W15, W10
	0x0399DC8C MOV W12, W10
	0x0399DC90 B.GE 0x399DCD0
	0x0399DC94 MOV W12, W10
	0x0399DC98 MOV W15, W10
	0x0399DC9C MOV W13, W14
	0x0399DCA0 LDR W16, [X0, W15, SXTW]
	0x0399DCA4 LDR W17, [X0, W13, SXTW]
	0x0399DCA8 CMP W16, W17
	0x0399DCAC CSEL W16, W17, W16, HI
	0x0399DCB0 CINC W13, W13, HI
	0x0399DCB4 CINC W15, W15, LS
	0x0399DCB8 STR W16, [X1, W12, SXTW]
	0x0399DCBC CMP W13, W11
	0x0399DCC0 ADD W12, W12, 0x1
	0x0399DCC4 B.GE 0x399DCD0
	0x0399DCC8 CMP W15, W14
	0x0399DCCC B.LT 0x399DCA0
	0x0399DCD0 CMP W15, W14
	0x0399DCD4 B.GE 0x399DCFC
	0x0399DCD8 SXTW X16, W15
	0x0399DCDC SXTW X14, W14
	0x0399DCE0 ADD X15, X0, W15, 0x2, SXTW
	0x0399DCE4 LDR W17, [X15], #0x4
	0x0399DCE8 ADD X16, X16, 0x1
	0x0399DCEC CMP X16, X14
	0x0399DCF0 STR W17, [X1, W12, SXTW]
	0x0399DCF4 ADD W12, W12, 0x1
	0x0399DCF8 B.LT 0x399DCE4
	0x0399DCFC CMP W13, W11
	0x0399DD00 B.GE 0x399DD28
	0x0399DD04 SXTW X14, W13
	0x0399DD08 SXTW X15, W11
	0x0399DD0C ADD X13, X0, W13, 0x2, SXTW
	0x0399DD10 LDR W16, [X13], #0x4
	0x0399DD14 ADD X14, X14, 0x1
	0x0399DD18 CMP X14, X15
	0x0399DD1C STR W16, [X1, W12, SXTW]
	0x0399DD20 ADD W12, W12, 0x1
	0x0399DD24 B.LT 0x399DD10
	0x0399DD28 CMP W10, W11
	0x0399DD2C B.GE 0x399DD54
	0x0399DD30 SXTW X12, W10
	0x0399DD34 ADD X13, X1, W10, 0x2, SXTW
	0x0399DD38 ADD X14, X0, W10, 0x2, SXTW
	0x0399DD3C SXTW X11, W11
	0x0399DD40 LDR W15, [X13], #0x4
	0x0399DD44 ADD X12, X12, 0x1
	0x0399DD48 CMP X12, X11
	0x0399DD4C STR W15, [X14], #0x4
	0x0399DD50 B.LT 0x399DD40
	0x0399DD54 ADD W10, W10, W9
	0x0399DD58 ADD W14, W10, W8
	0x0399DD5C CMP W14, W2
	0x0399DD60 B.LT 0x399DC60
	0x0399DD64 CMP W9, W2
	0x0399DD68 MOV W8, W9
	0x0399DD6C B.LT 0x399DC4C
	0x0399DD70 RET
	0x0399DD74 STR X30, [X31 - 0x30]!
	0x0399DD78 STP X22, X21, [X31 + 0x10]
	0x0399DD7C STP X20, X19, [X31 + 0x20]
	0x0399DD80 ADRP X22, 0xA44000
	0x0399DD84 LDRB W8, [X22 + 0xB61]
	0x0399DD88 MOV X21, X2
	0x0399DD8C MOV W20, W1
	0x0399DD90 MOV X19, X0
	0x0399DD94 TBNZ X8, 0x0, 0x399DDB8
	0x0399DD98 ADRP X0, 0x756000
	0x0399DD9C LDR X0, [X0 + 0x5A8]
	0x0399DDA0 BL 0x1C16CF4
	0x0399DDA4 ADRP X0, 0x77F000
	0x0399DDA8 LDR X0, [X0 + 0xD08]
	0x0399DDAC BL 0x1C16CF4
	0x0399DDB0 MOVZ W8, 0x1
	0x0399DDB4 STRB W8, [X22 + 0xB61]
	0x0399DDB8 CBZ X19, 0x399DE7C
	0x0399DDBC ADRP X8, 0x756000
	0x0399DDC0 LDR X8, [X8 + 0x5A8]
	0x0399DDC4 LDR X0, [X8]
	0x0399DDC8 LDR W8, [X0 + 0xE0]
	0x0399DDCC CBNZ W8, 0x399DDD4
	0x0399DDD0 BL 0x1C16DFC
	0x0399DDD4 LDR W1, [X19 + 0x18]
	0x0399DDD8 MOV W0, W20
	0x0399DDDC MOV X2, X31
	0x0399DDE0 BL 0x337EE94
	0x0399DDE4 CBZ W0, 0x399DE34
	0x0399DDE8 MOV W20, W0
	0x0399DDEC LDR X0, [X21]
	0x0399DDF0 CBZ X0, 0x399DE00
	0x0399DDF4 LDR W8, [X0 + 0x18]
	0x0399DDF8 CMP W20, W8
	0x0399DDFC B.LE 0x399DE44
	0x0399DE00 ADRP X8, 0x77F000
	0x0399DE04 LDR X8, [X8 + 0xD08]
	0x0399DE08 MOV W1, W20
	0x0399DE0C LDR X0, [X8]
	0x0399DE10 BL 0x1C16D6C
	0x0399DE14 STR X0, [X21]
	0x0399DE18 LDR W8, [X19 + 0x18]
	0x0399DE1C ADD X9, X19, 0x20
	0x0399DE20 CMP W8, 0x0
	0x0399DE24 CSEL X8, X31, X9, EQ
	0x0399DE28 CBNZ X0, 0x399DE54

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X26, 0xA45000
	015 Move X24, 0x7A8000
	016 Move X20, 0x7B5000
	017 Move X23, 0x7B5000
	018 Move X28, 0x7B5000
	019 Move X27, 0x7B5000
	020 Move X25, 0x7B5000
	021 Move X29, 0x7AC000
	022 Move X22, 0x77F000
	023 Move X21, 0x77F000
	024 Move X24, [X24+3944]
	025 Move X20, [X20+368]
	026 Move X23, [X23+376]
	027 Move X28, [X28+384]
	028 Move X27, [X27+392]
	029 Move X25, [X25+400]
	030 Move X29, [X29+1736]
	031 Move X22, [X22+1280]
	032 Move X21, [X21+1248]
	033 Move W8, [X26+2902]
	034 Move X19, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {137}
	039 Move X0, 0x7A8000
	040 Move X0, [X0+3944]
	041 Call 0x1C17CF4
	042 Move X0, 0x77F000
	043 Move X0, [X0+1208]
	044 Call 0x1C17CF4
	045 Move X0, 0x7B5000
	046 Move X0, [X0+408]
	047 Call 0x1C17CF4
	048 Move X0, 0x7B5000
	049 Move X0, [X0+416]
	050 Call 0x1C17CF4
	051 Move X0, 0x7B5000
	052 Move X0, [X0+424]
	053 Call 0x1C17CF4
	054 Move X0, 0x77F000
	055 Move X0, [X0+1216]
	056 Call 0x1C17CF4
	057 Move X0, 0x7B5000
	058 Move X0, [X0+432]
	059 Call 0x1C17CF4
	060 Move X0, 0x7B5000
	061 Move X0, [X0+368]
	062 Call 0x1C17CF4
	063 Move X0, 0x7B5000
	064 Move X0, [X0+440]
	065 Call 0x1C17CF4
	066 Move X0, 0x7B5000
	067 Move X0, [X0+448]
	068 Call 0x1C17CF4
	069 Move X0, 0x7B5000
	070 Move X0, [X0+456]
	071 Call 0x1C17CF4
	072 Move X0, 0x75E000
	073 Move X0, [X0+1136]
	074 Call 0x1C17CF4
	075 Move X0, 0x77F000
	076 Move X0, [X0+1232]
	077 Call 0x1C17CF4
	078 Move X0, 0x7B5000
	079 Move X0, [X0+464]
	080 Call 0x1C17CF4
	081 Move X0, 0x7B5000
	082 Move X0, [X0+472]
	083 Call 0x1C17CF4
	084 Move X0, 0x77F000
	085 Move X0, [X0+1248]
	086 Call 0x1C17CF4
	087 Move X0, 0x7B5000
	088 Move X0, [X0+480]
	089 Call 0x1C17CF4
	090 Move X0, 0x7B5000
	091 Move X0, [X0+376]
	092 Call 0x1C17CF4
	093 Move X0, 0x7B5000
	094 Move X0, [X0+488]
	095 Call 0x1C17CF4
	096 Move X0, 0x77F000
	097 Move X0, [X0+1256]
	098 Call 0x1C17CF4
	099 Move X0, 0x7B5000
	100 Move X0, [X0+496]
	101 Call 0x1C17CF4
	102 Move X0, 0x7B5000
	103 Move X0, [X0+504]
	104 Call 0x1C17CF4
	105 Move X0, 0x77F000
	106 Move X0, [X0+1264]
	107 Call 0x1C17CF4
	108 Move X0, 0x77F000
	109 Move X0, [X0+1272]
	110 Call 0x1C17CF4
	111 Move X0, 0x77F000
	112 Move X0, [X0+1280]
	113 Call 0x1C17CF4
	114 Move X0, 0x7B5000
	115 Move X0, [X0+400]
	116 Call 0x1C17CF4
	117 Move X0, 0x77F000
	118 Move X0, [X0+1288]
	119 Call 0x1C17CF4
	120 Move X0, 0x7AC000
	121 Move X0, [X0+1736]
	122 Call 0x1C17CF4
	123 Move X0, 0x7B5000
	124 Move X0, [X0+512]
	125 Call 0x1C17CF4
	126 Move X0, 0x77F000
	127 Move X0, [X0+1312]
	128 Call 0x1C17CF4
	129 Move X0, 0x7B5000
	130 Move X0, [X0+392]
	131 Call 0x1C17CF4
	132 Move X0, 0x7B5000
	133 Move X0, [X0+384]
	134 Call 0x1C17CF4
	135 Move W8, 1
	136 Move [X26+2902], W8
	137 Move X0, [X24]
	138 Move [X31+64], X31
	139 Move [X31+72], X31
	140 Move [X31+80], X31
	141 Move [X31+32], X31
	142 Move [X31+40], X31
	143 Move [X31+48], X31
	144 Call 0x1C17F10
	145 Move X1, [X20]
	146 Move X2, X31
	147 Move X20, X0
	148 Call InputActionMap..ctor, X0, X1
	149 Move X1, [X23]
	150 Move X3, [X28]
	151 Move X0, X20
	152 Move W2, W31
	153 Move X4, X31
	154 Move X5, X31
	155 Move X6, X31
	156 Move X7, X31
	157 Move [X31], X31
	158 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	159 Move [X19+56], X0
	160 Move X1, [X27]
	161 Move X3, [X25]
	162 Move X0, X20
	163 Move W2, W31
	164 Move X4, X31
	165 Move X5, X31
	166 Move X6, X31
	167 Move X7, X31
	168 Move [X31], X31
	169 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	170 Move [X19+64], X0
	171 Move X8, 0x75E000
	172 Move X8, [X8+1136]
	173 Move X0, X20
	174 Move W2, W31
	175 Move X4, X31
	176 Move X1, [X8]
	177 Move X8, 0x7B5000
	178 Move X8, [X8+480]
	179 Move X5, X31
	180 Move X6, X31
	181 Move X7, X31
	182 Move X3, [X8]
	183 Move [X31], X31
	184 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	185 Move [X19+72], X0
	186 Move X8, 0x7B5000
	187 Move X8, [X8+488]
	188 Move X0, X20
	189 Move W2, W31
	190 Move X3, X31
	191 Move X1, [X8]
	192 Move X4, X31
	193 Move X5, X31
	194 Move X6, X31
	195 Move X7, X31
	196 Move [X31], X31
	197 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	198 Move [X19+80], X0
	199 Move X8, 0x7B5000
	200 Move X0, [X19+56]
	201 Move X8, [X8+512]
	202 Move X2, X31
	203 Move X3, X31
	204 Move X4, X31
	205 Move X1, [X8]
	206 Add X8, X31, 8
	207 Move X5, X31
	208 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	209 Move X9, 0x7B5000
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 Move X8, [X31+24]
	212 Move X9, [X9+472]
	213 Add X0, X31, 64
	214 Move X2, X31
	215 Move [X31+80], X8
	216 Move X1, [X9]
	217 Add X8, X31, 8
	218 Move [X31+4], V0
	219 Call BindingSyntax.WithProcessor, X0, X1
	220 Move X0, [X19+64]
	221 Move X1, [X29]
	222 Add X8, X31, 8
	223 Move X2, X31
	224 Move X3, X31
	225 Move X4, X31
	226 Call InputActionSetupExtensions.AddCompositeBinding, X0, X1, X2, X3
	227 Move X9, 0x77F000
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 Move X8, [X31+24]
	230 Move X1, [X22]
	231 Move X9, [X9+1208]
	232 Add X0, X31, 32
	233 Move [X31+48], X8
	234 Add X8, X31, 8
	235 Move X2, [X9]
	236 Move X3, X31
	237 Move X4, X31
	238 Move X5, X31
	239 Move [X31+2], V0
	240 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	241 Move X9, 0x7B5000
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 Move X8, [X31+24]
	244 Move X1, [X22]
	245 Move X9, [X9+432]
	246 Add X0, X31, 32
	247 Move [X31+48], X8
	248 Add X8, X31, 8
	249 Move X2, [X9]
	250 Move X3, X31
	251 Move X4, X31
	252 Move X5, X31
	253 Move [X31+2], V0
	254 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	255 Move X9, 0x77F000
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 Move X8, [X31+24]
	258 Move X1, [X21]
	259 Move X9, [X9+1232]
	260 Add X0, X31, 32
	261 Move [X31+48], X8
	262 Add X8, X31, 8
	263 Move X2, [X9]
	264 Move X3, X31
	265 Move X4, X31
	266 Move X5, X31
	267 Move [X31+2], V0
	268 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	269 Move X9, 0x7B5000
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 Move X8, [X31+24]
	272 Move X1, [X21]
	273 Move X9, [X9+448]
	274 Add X0, X31, 32
	275 Move [X31+48], X8
	276 Add X8, X31, 8
	277 Move X2, [X9]
	278 Move X3, X31
	279 Move X4, X31
	280 Move X5, X31
	281 Move [X31+2], V0
	282 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	283 Move X20, 0x77F000
	284 NotImplemented "Instruction LDUR not yet implemented."
	285 Move X8, [X31+24]
	286 Move X20, [X20+1288]
	287 Move X9, 0x77F000
	288 Add X0, X31, 32
	289 Move X3, X31
	290 Move X1, [X20]
	291 Move X9, [X9+1256]
	292 Move [X31+48], X8
	293 Add X8, X31, 8
	294 Move X4, X31
	295 Move X2, [X9]
	296 Move X5, X31
	297 Move [X31+2], V0
	298 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	299 Move X9, 0x7B5000
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 Move X8, [X31+24]
	302 Move X1, [X20]
	303 Move X9, [X9+456]
	304 Add X0, X31, 32
	305 Move [X31+48], X8
	306 Add X8, X31, 8
	307 Move X2, [X9]
	308 Move X3, X31
	309 Move X4, X31
	310 Move X5, X31
	311 Move [X31+2], V0
	312 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	313 Move X20, 0x77F000
	314 NotImplemented "Instruction LDUR not yet implemented."
	315 Move X8, [X31+24]
	316 Move X20, [X20+1216]
	317 Move X9, 0x77F000
	318 Add X0, X31, 32
	319 Move X3, X31
	320 Move X1, [X20]
	321 Move X9, [X9+1272]
	322 Move [X31+48], X8
	323 Add X8, X31, 8
	324 Move X4, X31
	325 Move X2, [X9]
	326 Move X5, X31
	327 Move [X31+2], V0
	328 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	329 Move X9, 0x7B5000
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 Move X8, [X31+24]
	332 Move X1, [X20]
	333 Move X9, [X9+464]
	334 Add X0, X31, 32
	335 Move [X31+48], X8
	336 Add X8, X31, 8
	337 Move X2, [X9]
	338 Move X3, X31
	339 Move X4, X31
	340 Move X5, X31
	341 Move [X31+2], V0
	342 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	343 Move X0, [X19+72]
	344 Move X1, [X29]
	345 Add X8, X31, 8
	346 Move X2, X31
	347 Move X3, X31
	348 Move X4, X31
	349 Call InputActionSetupExtensions.AddCompositeBinding, X0, X1, X2, X3
	350 Move X9, 0x7B5000
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 Move X8, [X31+24]
	353 Move X1, [X22]
	354 Move X9, [X9+496]
	355 Add X0, X31, 32
	356 Move [X31+48], X8
	357 Add X8, X31, 8
	358 Move X2, [X9]
	359 Move X3, X31
	360 Move X4, X31
	361 Move X5, X31
	362 Move [X31+2], V0
	363 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	364 Move X9, 0x7B5000
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 Move X8, [X31+24]
	367 Move X1, [X21]
	368 Move X9, [X9+424]
	369 Add X0, X31, 32
	370 Move [X31+48], X8
	371 Add X8, X31, 8
	372 Move X2, [X9]
	373 Move X3, X31
	374 Move X4, X31
	375 Move X5, X31
	376 Move [X31+2], V0
	377 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	378 Move X0, [X19+80]
	379 Move X1, [X29]
	380 Add X8, X31, 8
	381 Move X2, X31
	382 Move X3, X31
	383 Move X4, X31
	384 Call InputActionSetupExtensions.AddCompositeBinding, X0, X1, X2, X3
	385 Move X9, 0x7B5000
	386 NotImplemented "Instruction LDUR not yet implemented."
	387 Move X8, [X31+24]
	388 Move X1, [X22]
	389 Move X9, [X9+440]
	390 Add X0, X31, 32
	391 Move [X31+48], X8
	392 Add X8, X31, 8
	393 Move X2, [X9]
	394 Move X3, X31
	395 Move X4, X31
	396 Move X5, X31
	397 Move [X31+2], V0
	398 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	399 Move X9, 0x7B5000
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 Move X8, [X31+24]
	402 Move X1, [X21]
	403 Move X9, [X9+408]
	404 Add X0, X31, 32
	405 Move [X31+48], X8
	406 Add X8, X31, 8
	407 Move X2, [X9]
	408 Move X3, X31
	409 Move X4, X31
	410 Move X5, X31
	411 Move [X31+2], V0
	412 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	413 Move X9, 0x77F000
	414 NotImplemented "Instruction LDUR not yet implemented."
	415 Move X8, [X31+24]
	416 Move X1, [X22]
	417 Move X9, [X9+1312]
	418 Add X0, X31, 32
	419 Move [X31+48], X8
	420 Add X8, X31, 8
	421 Move X2, [X9]
	422 Move X3, X31
	423 Move X4, X31
	424 Move X5, X31
	425 Move [X31+2], V0
	426 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	427 Move X9, 0x77F000
	428 NotImplemented "Instruction LDUR not yet implemented."
	429 Move X8, [X31+24]
	430 Move X1, [X21]
	431 Move X9, [X9+1264]
	432 Add X0, X31, 32
	433 Move [X31+48], X8
	434 Add X8, X31, 8
	435 Move X2, [X9]
	436 Move X3, X31
	437 Move X4, X31
	438 Move X5, X31
	439 Move [X31+2], V0
	440 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	441 Move X9, 0x7B5000
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 Move X8, [X31+24]
	444 Move X1, [X22]
	445 Move X9, [X9+504]
	446 Add X0, X31, 32
	447 Move [X31+48], X8
	448 Add X8, X31, 8
	449 Move X2, [X9]
	450 Move X3, X31
	451 Move X4, X31
	452 Move X5, X31
	453 Move [X31+2], V0
	454 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	455 Move X9, 0x7B5000
	456 NotImplemented "Instruction LDUR not yet implemented."
	457 Move X8, [X31+24]
	458 Move X1, [X21]
	459 Move X9, [X9+416]
	460 Add X0, X31, 32
	461 Move [X31+48], X8
	462 Add X8, X31, 8
	463 Move X2, [X9]
	464 Move X3, X31
	465 Move X4, X31
	466 Move X5, X31
	467 Move [X31+2], V0
	468 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	469 Move X0, [X19+64]
	470 Compare X0, 0
	471 JumpIfEqual {503}
	472 Move X1, X31
	473 Call InputAction.Enable, X0
	474 Move X0, [X19+56]
	475 Compare X0, 0
	476 JumpIfEqual {503}
	477 Move X1, X31
	478 Call InputAction.Enable, X0
	479 Move X0, [X19+72]
	480 Compare X0, 0
	481 JumpIfEqual {503}
	482 Move X1, X31
	483 Call InputAction.Enable, X0
	484 Move X0, [X19+80]
	485 Compare X0, 0
	486 JumpIfEqual {503}
	487 Move X1, X31
	488 Call InputAction.Enable, X0
	489 Move X20, [X31+176]
	490 Move X19, [X31+184]
	491 Move X22, [X31+160]
	492 Move X21, [X31+168]
	493 Move X24, [X31+144]
	494 Move X23, [X31+152]
	495 Move X26, [X31+128]
	496 Move X25, [X31+136]
	497 Move X28, [X31+112]
	498 Move X27, [X31+120]
	499 Move X29, [X31+96]
	500 Move X30, [X31+104]
	501 Add X31, X31, 192
	502 Return 
	503 Call 0x1C17F20

Method: System.Void UpdateInputs()

Disassembly:
	0x0399DE2C MOV X1, X31
	0x0399DE30 B 0x399DE64
	0x0399DE34 LDP X20, X19, [X31 + 0x20]
	0x0399DE38 LDP X22, X21, [X31 + 0x10]
	0x0399DE3C LDR X30, [X31], #0x30
	0x0399DE40 RET
	0x0399DE44 LDR W8, [X19 + 0x18]
	0x0399DE48 ADD X9, X19, 0x20
	0x0399DE4C CMP W8, 0x0
	0x0399DE50 CSEL X8, X31, X9, EQ
	0x0399DE54 LDR W9, [X0 + 0x18]
	0x0399DE58 ADD X10, X0, 0x20
	0x0399DE5C CMP W9, 0x0
	0x0399DE60 CSEL X1, X31, X10, EQ
	0x0399DE64 MOV W2, W20
	0x0399DE68 LDP X20, X19, [X31 + 0x20]
	0x0399DE6C LDP X22, X21, [X31 + 0x10]
	0x0399DE70 MOV X0, X8
	0x0399DE74 LDR X30, [X31], #0x30
	0x0399DE78 B 0x399DC40
	0x0399DE7C BL 0x1C16F20
	0x0399DE80 STR X30, [X31 - 0x40]!
	0x0399DE84 STP X24, X23, [X31 + 0x10]
	0x0399DE88 STP X22, X21, [X31 + 0x20]
	0x0399DE8C STP X20, X19, [X31 + 0x30]
	0x0399DE90 ADRP X24, 0xA44000
	0x0399DE94 ADRP X23, 0x756000
	0x0399DE98 LDRB W8, [X24 + 0xB62]
	0x0399DE9C LDR X23, [X23 + 0x5A8]
	0x0399DEA0 MOV X19, X3
	0x0399DEA4 MOV W22, W2
	0x0399DEA8 MOV X20, X1
	0x0399DEAC MOV X21, X0
	0x0399DEB0 TBNZ X8, 0x0, 0x399DEEC
	0x0399DEB4 ADRP X0, 0x7B4000
	0x0399DEB8 LDR X0, [X0 + 0x290]
	0x0399DEBC BL 0x1C16CF4
	0x0399DEC0 ADRP X0, 0x756000
	0x0399DEC4 LDR X0, [X0 + 0x5A8]
	0x0399DEC8 BL 0x1C16CF4
	0x0399DECC ADRP X0, 0x7B4000
	0x0399DED0 LDR X0, [X0 + 0x298]
	0x0399DED4 BL 0x1C16CF4
	0x0399DED8 ADRP X0, 0x7B4000
	0x0399DEDC LDR X0, [X0 + 0x2A0]
	0x0399DEE0 BL 0x1C16CF4
	0x0399DEE4 MOVZ W8, 0x1
	0x0399DEE8 STRB W8, [X24 + 0xB62]
	0x0399DEEC LDR X0, [X23]
	0x0399DEF0 LDR W8, [X0 + 0xE0]
	0x0399DEF4 CBNZ W8, 0x399DEFC
	0x0399DEF8 BL 0x1C16DFC
	0x0399DEFC MOV W0, W22
	0x0399DF00 MOV W1, W20
	0x0399DF04 MOV X2, X31
	0x0399DF08 BL 0x337EE94
	0x0399DF0C CBZ X21, 0x399DF90
	0x0399DF10 MOV W22, W0
	0x0399DF14 CBZ W0, 0x399DF90
	0x0399DF18 LDR X8, [X19]
	0x0399DF1C CBZ X8, 0x399DF2C
	0x0399DF20 LDR W8, [X19 + 0x8]
	0x0399DF24 CMP W8, W22
	0x0399DF28 B.GE 0x399DF44
	0x0399DF2C ADRP X8, 0x7B4000
	0x0399DF30 LDR X8, [X8 + 0x290]
	0x0399DF34 MOV X0, X19
	0x0399DF38 MOV W1, W20
	0x0399DF3C LDR X2, [X8]
	0x0399DF40 BL 0x21722E0
	0x0399DF44 ADRP X23, 0x7B4000
	0x0399DF48 LDR X23, [X23 + 0x298]
	0x0399DF4C MOV X0, X21
	0x0399DF50 MOV X1, X20
	0x0399DF54 LDR X2, [X23]
	0x0399DF58 BL 0x22226A4
	0x0399DF5C LDP X8, X1, [X19]
	0x0399DF60 LDR X2, [X23]
	0x0399DF64 MOV X19, X0
	0x0399DF68 MOV X0, X8
	0x0399DF6C BL 0x22226A4
	0x0399DF70 MOV X1, X0
	0x0399DF74 MOV X0, X19
	0x0399DF78 MOV W2, W22
	0x0399DF7C LDP X20, X19, [X31 + 0x30]
	0x0399DF80 LDP X22, X21, [X31 + 0x20]
	0x0399DF84 LDP X24, X23, [X31 + 0x10]
	0x0399DF88 LDR X30, [X31], #0x40
	0x0399DF8C B 0x399DC40
	0x0399DF90 LDP X20, X19, [X31 + 0x30]
	0x0399DF94 LDP X22, X21, [X31 + 0x20]
	0x0399DF98 LDP X24, X23, [X31 + 0x10]
	0x0399DF9C LDR X30, [X31], #0x40
	0x0399DFA0 RET
	0x0399DFA4 CMP W1, 0x1
	0x0399DFA8 B.LT 0x399E00C
	0x0399DFAC MOV X8, X31
	0x0399DFB0 MOV X9, X31
	0x0399DFB4 MOV W10, W1
	0x0399DFB8 SUB X11, X0, 0x4
	0x0399DFBC MOVZ W12, 0x1
	0x0399DFC0 MOV X13, X12
	0x0399DFC4 MOV X14, X8
	0x0399DFC8 CBZ W9, 0x399DFF8
	0x0399DFCC AND X15, X14, 0x0
	0x0399DFD0 LDR W16, [X15, X0, LSL]
	0x0399DFD4 LDR W17, [X11, X14, LSL]
	0x0399DFD8 CMP W16, W17
	0x0399DFDC B.CS 0x399DFF8
	0x0399DFE0 SUB X13, X13, 0x1
	0x0399DFE4 STR W17, [X0, X15, LSL]
	0x0399DFE8 STR W16, [X14, X11, LSL]
	0x0399DFEC CMP X13, 0x1
	0x0399DFF0 SUB X14, X14, 0x4
	0x0399DFF4 B.GT 0x399DFCC
	0x0399DFF8 ADD X9, X9, 0x1
	0x0399DFFC ADD X8, X8, 0x4
	0x0399E000 CMP X9, X10
	0x0399E004 ADD X12, X12, 0x1
	0x0399E008 B.NE 0x399DFC0
	0x0399E00C RET
	0x0399E010 STP X30, X21, [X31 - 0x20]!
	0x0399E014 STP X20, X19, [X31 + 0x10]
	0x0399E018 ADRP X21, 0xA43000
	0x0399E01C LDRB W8, [X21 + 0xB63]
	0x0399E020 MOV W20, W1
	0x0399E024 MOV X19, X0
	0x0399E028 TBNZ X8, 0x0, 0x399E040
	0x0399E02C ADRP X0, 0x755000
	0x0399E030 LDR X0, [X0 + 0x5A8]
	0x0399E034 BL 0x1C16CF4
	0x0399E038 MOVZ W8, 0x1
	0x0399E03C STRB W8, [X21 + 0xB63]
	0x0399E040 CBZ X19, 0x399E09C
	0x0399E044 ADRP X8, 0x755000
	0x0399E048 LDR X8, [X8 + 0x5A8]
	0x0399E04C LDR X0, [X8]
	0x0399E050 LDR W8, [X0 + 0xE0]
	0x0399E054 CBNZ W8, 0x399E05C
	0x0399E058 BL 0x1C16DFC
	0x0399E05C LDR W0, [X19 + 0x18]
	0x0399E060 MOV W1, W20
	0x0399E064 MOV X2, X31
	0x0399E068 BL 0x337EE94
	0x0399E06C CBZ W0, 0x399E090
	0x0399E070 LDR W8, [X19 + 0x18]
	0x0399E074 ADD X9, X19, 0x20
	0x0399E078 LDP X20, X19, [X31 + 0x10]
	0x0399E07C MOV W1, W0
	0x0399E080 CMP W8, 0x0
	0x0399E084 CSEL X0, X31, X9, EQ
	0x0399E088 LDP X30, X21, [X31], #0x20
	0x0399E08C B 0x399DFA4
	0x0399E090 LDP X20, X19, [X31 + 0x10]
	0x0399E094 LDP X30, X21, [X31], #0x20
	0x0399E098 RET
	0x0399E09C BL 0x1C16F20
	0x0399E0A0 STP X30, X23, [X31 - 0x30]!
	0x0399E0A4 STP X22, X21, [X31 + 0x10]
	0x0399E0A8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA45000
	007 Move W8, [X20+2903]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x77F000
	014 Move X0, [X0+960]
	015 Call 0x1C17CF4
	016 Move X0, 0x761000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0x75B000
	020 Move X0, [X0+4056]
	021 Call 0x1C17CF4
	022 Move X0, 0x75B000
	023 Move X0, [X0+3056]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2903], W8
	027 Move X0, [X19+56]
	028 Move [X19+88], X31
	029 Move [X19+112], W31
	030 Move [X19+114], W31
	031 Compare X0, 0
	032 JumpIfEqual {175}
	033 Move X20, 0x77F000
	034 Move X20, [X20+960]
	035 Move X1, [X20]
	036 Call InputAction.ReadValue, X0
	037 Move V2, [X19+36]
	038 Move W8, 0xD70A
	039 NotImplemented "Instruction MOVK not yet implemented."
	040 Move V0.S[1], V1.S[0]
	041 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	042 NotImplemented "Instruction INVALID not yet implemented."
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 Move [X19+88], D0
	045 Move X21, 0xA44000
	046 Move W8, [X21+3996]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x7AB000
	050 Move X0, [X0+192]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+3996], W8
	054 Move X8, 0x7AB000
	055 Move X8, [X8+192]
	056 Move X8, [X8]
	057 Move X8, [X8+184]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {77}
	061 Move X1, X31
	062 Call Keyboard.get_leftShiftKey, X0
	063 Compare X0, 0
	064 JumpIfEqual {77}
	065 Move X1, X31
	066 Call ButtonControl.get_isPressed, X0
	067 Move X8, 0x75B000
	068 Move X8, [X8+4056]
	069 And W1, W0, 1
	070 Add X0, X31, 12
	071 NotImplemented "Instruction STRH not yet implemented."
	072 Move X2, [X8]
	073 Call Nullable`1<Boolean>..ctor, X0, X1
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 Move W8, W31
	078 Move [X19+113], W8
	079 Move X21, 0xA3D000
	080 Move W8, [X21+2071]
	081 Compare W8, 0
	082 JumpIfNotEqual {88}
	083 Move X0, 0x77F000
	084 Move X0, [X0+1320]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X21+2071], W8
	088 Move X8, 0x77F000
	089 Move X8, [X8+1320]
	090 Move X8, [X8]
	091 Move X8, [X8+184]
	092 Move X8, [X8]
	093 Compare X8, 0
	094 JumpIfEqual {111}
	095 Move X0, [X8+424]
	096 Compare X0, 0
	097 JumpIfEqual {111}
	098 Move X1, X31
	099 Call ButtonControl.get_isPressed, X0
	100 Move X8, 0x75B000
	101 Move X8, [X8+4056]
	102 And W1, W0, 1
	103 Add X0, X31, 8
	104 NotImplemented "Instruction STRH not yet implemented."
	105 Move X2, [X8]
	106 Call Nullable`1<Boolean>..ctor, X0, X1
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 And W31, W8, 255
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W8, 1
	111 Move X21, 0xA44000
	112 Move W8, [X21+3992]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x7AA000
	116 Move X0, [X0+3808]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X21+3992], W8
	120 Move X8, 0x7AA000
	121 Move X8, [X8+3808]
	122 Move X8, [X8]
	123 Move X8, [X8+184]
	124 Move X0, [X8]
	125 Compare X0, 0
	126 JumpIfEqual {145}
	127 Move X1, X31
	128 Call Gamepad.get_xButton, X0
	129 Compare X0, 0
	130 JumpIfEqual {146}
	131 Move X1, X31
	132 Call ButtonControl.get_isPressed, X0
	133 Move X8, 0x75A000
	134 Move X8, [X8+4056]
	135 And W1, W0, 1
	136 Add X0, X31, 4
	137 NotImplemented "Instruction STRH not yet implemented."
	138 Move X2, [X8]
	139 Call Nullable`1<Boolean>..ctor, X0, X1
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSET not yet implemented."
	143 And W31, W9, 255
	144 NotImplemented "Instruction CSET not yet implemented."
	145 Move W8, W31
	146 Move W9, W31
	147 Move W8, W31
	148 And W8, W9, W8
	149 Move X0, [X19+72]
	150 Move [X19+114], W8
	151 Compare X0, 0
	152 JumpIfEqual {175}
	153 Move X1, [X20]
	154 Call InputAction.ReadValue, X0
	155 Move X0, [X19+64]
	156 Move [X19+96], S1
	157 Compare X0, 0
	158 JumpIfEqual {175}
	159 Move X1, [X20]
	160 Call InputAction.ReadValue, X0
	161 Move X0, [X19+80]
	162 Move [X19+100], S1
	163 Move [X19+108], S0
	164 Compare X0, 0
	165 JumpIfEqual {175}
	166 Move X1, [X20]
	167 Call InputAction.ReadValue, X0
	168 Move [X19+108], S1
	169 Move X20, [X31+32]
	170 Move X19, [X31+40]
	171 Move X30, [X31+16]
	172 Move X21, [X31+24]
	173 Add X31, X31, 48
	174 Return 
	175 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x0399E0AC ADRP X23, 0xA43000
	0x0399E0B0 ADRP X22, 0x755000
	0x0399E0B4 LDRB W8, [X23 + 0xB64]
	0x0399E0B8 LDR X22, [X22 + 0x5A8]
	0x0399E0BC MOV W21, W2
	0x0399E0C0 MOV X19, X1
	0x0399E0C4 MOV X20, X0
	0x0399E0C8 TBNZ X8, 0x0, 0x399E0F8
	0x0399E0CC ADRP X0, 0x755000
	0x0399E0D0 LDR X0, [X0 + 0x5A8]
	0x0399E0D4 BL 0x1C16CF4
	0x0399E0D8 ADRP X0, 0x7B3000
	0x0399E0DC LDR X0, [X0 + 0x298]
	0x0399E0E0 BL 0x1C16CF4
	0x0399E0E4 ADRP X0, 0x7B3000
	0x0399E0E8 LDR X0, [X0 + 0x2A0]
	0x0399E0EC BL 0x1C16CF4
	0x0399E0F0 MOVZ W8, 0x1
	0x0399E0F4 STRB W8, [X23 + 0xB64]
	0x0399E0F8 LDR X0, [X22]
	0x0399E0FC LDR W8, [X0 + 0xE0]
	0x0399E100 CBNZ W8, 0x399E108
	0x0399E104 BL 0x1C16DFC
	0x0399E108 MOV W0, W19
	0x0399E10C MOV W1, W21
	0x0399E110 MOV X2, X31
	0x0399E114 BL 0x337EE94
	0x0399E118 CBZ X20, 0x399E150
	0x0399E11C MOV W21, W0
	0x0399E120 CBZ W0, 0x399E150
	0x0399E124 ADRP X8, 0x7B3000
	0x0399E128 LDR X8, [X8 + 0x298]
	0x0399E12C MOV X0, X20
	0x0399E130 MOV X1, X19
	0x0399E134 LDR X2, [X8]
	0x0399E138 BL 0x22226A4
	0x0399E13C MOV W1, W21
	0x0399E140 LDP X20, X19, [X31 + 0x20]
	0x0399E144 LDP X22, X21, [X31 + 0x10]
	0x0399E148 LDP X30, X23, [X31], #0x30
	0x0399E14C B 0x399DFA4
	0x0399E150 LDP X20, X19, [X31 + 0x20]
	0x0399E154 LDP X22, X21, [X31 + 0x10]
	0x0399E158 LDP X30, X23, [X31], #0x30
	0x0399E15C RET
	0x0399E160 STR X23, [X31 - 0x30]!
	0x0399E164 STP X22, X21, [X31 + 0x10]
	0x0399E168 STP X20, X19, [X31 + 0x20]
	0x0399E16C MOVZ W8, 0x20
	0x0399E170 SDIV W8, W8, W2
	0x0399E174 CMP W8, 0x1
	0x0399E178 B.LT 0x399E2C8
	0x0399E17C ADRP X13, 0xFFFFFFFFFD14C000
	0x0399E180 ADD W11, W3, W3, 0x1, LSL
	0x0399E184 MOVZ W17, 0x2
	0x0399E188 LDR V0, [X13 + 0x79]
	0x0399E18C ADD X10, X1, W3, 0x2, SXTW
	0x0399E190 UNIMPLEMENTED
	0x0399E194 SUB X17, X11, 0x1
	0x0399E198 SUB W16, W3, 0x1
	0x0399E19C SBFM X14, X3, 0x3E, 0x1F
	0x0399E1A0 MOV W15, W3
	0x0399E1A4 ADD X13, X10, W3, 0x2, SXTW
	0x0399E1A8 UNIMPLEMENTED
	0x0399E1AC ADD X17, X11, 0x1
	0x0399E1B0 MOV W9, W31
	0x0399E1B4 MOV W12, W4
	0x0399E1B8 ADD X5, X13, X14
	0x0399E1BC AND X14, X17, 0x0
	0x0399E1C0 SUB X15, X15, 0x1
	0x0399E1C4 MOV W16, W16
	0x0399E1C8 CMP W11, 0x1
	0x0399E1CC MOV X17, X5
	0x0399E1D0 B.LT 0x399E210
	0x0399E1D4 MOV X5, X14
	0x0399E1D8 MOV X6, X1
	0x0399E1DC MOV V3.16B, V0.16B
	0x00000000 INVALID
	0x0399E1E4 UNIMPLEMENTED
	0x0399E1E8 FMOV W7, S4
	0x0399E1EC TBZ X7, 0x0, 0x399E1F4
	0x0399E1F0 STR W31, [X6]
	0x0399E1F4 UNIMPLEMENTED
	0x0399E1F8 TBZ X7, 0x0, 0x399E200
	0x0399E1FC STR W31, [X6 + 0x4]
	0x00000000 INVALID
	0x0399E204 SUBS X5, X5, 0x2
	0x0399E208 ADD X6, X6, 0x8
	0x0399E20C B.NE 0x399E1E0
	0x0399E210 CMP W4, 0x1
	0x0399E214 MUL W5, W9, W2
	0x0399E218 B.LT 0x399E248
	0x0399E21C AND X6, X5, 0x1F
	0x0399E220 MOV X7, X12
	0x0399E224 MOV X19, X0
	0x0399E228 LDR W20, [X19], #0x4
	0x0399E22C SUBS X7, X7, 0x1
	0x0399E230 LSRV X20, X20, X6
	0x0399E234 AND X20, X20, X16, 0x0
	0x0399E238 LDR W21, [X10, X20, LSL #2]
	0x0399E23C ADD W21, W21, 0x1
	0x0399E240 STR W21, [X10, X20, LSL #2]
	0x0399E244 B.NE 0x399E228
	0x0399E248 CMP W3, 0x1
	0x0399E24C B.LE 0x399E274
	0x0399E250 MOV X6, X15
	0x0399E254 MOV X7, X13
	0x0399E258 MOV X19, X10
	0x0399E25C LDR W20, [X7]
	0x0399E260 LDR W21, [X19], #0x4
	0x0399E264 SUBS X6, X6, 0x1
	0x0399E268 ADD W20, W21, W20
	0x0399E26C STR W20, [X7 + 0x4]!
	0x0399E270 B.NE 0x399E25C
	0x0399E274 CMP W4, 0x1
	0x0399E278 B.LT 0x399E2B4
	0x0399E27C MOV X6, X12
	0x0399E280 AND X5, X5, 0x1F
	0x0399E284 MOV X7, X0
	0x0399E288 LDR W19, [X7], #0x4
	0x0399E28C SUBS X6, X6, 0x1
	0x0399E290 LSRV X20, X19, X5
	0x0399E294 AND X20, X20, X16, 0x0
	0x0399E298 LDR W21, [X1, X20, LSL #2]
	0x0399E29C LDR W22, [X13, X20, LSL #2]
	0x0399E2A0 ADD W23, W21, 0x1
	0x0399E2A4 ADD W21, W21, W22
	0x0399E2A8 STR W23, [X1, X20, LSL #2]
	0x0399E2AC STR W19, [X17, W21, UXTW]
	0x0399E2B0 B.NE 0x399E288
	0x0399E2B4 ADD W9, W9, 0x1
	0x0399E2B8 CMP W9, W8
	0x0399E2BC MOV X5, X0
	0x0399E2C0 MOV X0, X17
	0x0399E2C4 B.NE 0x399E1C8
	0x0399E2C8 LDP X20, X19, [X31 + 0x20]
	0x0399E2CC LDP X22, X21, [X31 + 0x10]
	0x0399E2D0 LDR X23, [X31], #0x30
	0x0399E2D4 RET
	0x0399E2D8 SUB X31, X31, 0x40
	0x0399E2DC STP X30, X23, [X31 + 0x10]
	0x0399E2E0 STP X22, X21, [X31 + 0x20]
	0x0399E2E4 STP X20, X19, [X31 + 0x30]
	0x0399E2E8 ADRP X23, 0xA43000
	0x0399E2EC LDRB W8, [X23 + 0xB65]
	0x0399E2F0 MOV W19, W3
	0x0399E2F4 MOV X22, X2
	0x0399E2F8 MOV W20, W1
	0x0399E2FC MOV X21, X0
	0x0399E300 TBNZ X8, 0x0, 0x399E324
	0x0399E304 ADRP X0, 0x755000
	0x0399E308 LDR X0, [X0 + 0x5A8]
	0x0399E30C BL 0x1C16CF4
	0x0399E310 ADRP X0, 0x77E000
	0x0399E314 LDR X0, [X0 + 0xD08]
	0x0399E318 BL 0x1C16CF4
	0x0399E31C MOVZ W8, 0x1
	0x0399E320 STRB W8, [X23 + 0xB65]
	0x0399E324 STR W31, [X31 + 0xC]
	0x0399E328 CBZ X21, 0x399E400
	0x0399E32C ADRP X8, 0x755000
	0x0399E330 LDR X8, [X8 + 0x5A8]
	0x0399E334 LDR X0, [X8]
	0x0399E338 LDR W8, [X0 + 0xE0]
	0x0399E33C CBNZ W8, 0x399E344
	0x0399E340 BL 0x1C16DFC
	0x0399E344 LDR W1, [X21 + 0x18]
	0x0399E348 MOV W0, W20
	0x0399E34C MOV X2, X31
	0x0399E350 BL 0x337EE94
	0x0399E354 MOV W20, W0
	0x0399E358 ADD X1, X31, 0xC
	0x0399E35C MOV W0, W19
	0x0399E360 BL 0x399DBA0
	0x0399E364 CBZ W20, 0x399E3EC
	0x0399E368 LDR W23, [X31 + 0xC]
	0x0399E36C LDR X0, [X22]
	0x0399E370 ADD W8, W23, W23, 0x1, LSL
	0x0399E374 ADD W1, W8, W20
	0x0399E378 CBZ X0, 0x399E388
	0x0399E37C LDR W8, [X0 + 0x18]
	0x0399E380 CMP W1, W8
	0x0399E384 B.LE 0x399E3B8
	0x0399E388 ADRP X8, 0x77E000
	0x0399E38C LDR X8, [X8 + 0xD08]
	0x0399E390 LDR X0, [X8]
	0x0399E394 BL 0x1C16D6C
	0x0399E398 STR X0, [X22]
	0x0399E39C LDR W8, [X21 + 0x18]
	0x0399E3A0 ADD X9, X21, 0x20
	0x0399E3A4 CMP W8, 0x0
	0x0399E3A8 CSEL X8, X31, X9, EQ
	0x0399E3AC CBNZ X0, 0x399E3C8
	0x0399E3B0 MOV X1, X31
	0x0399E3B4 B 0x399E3D8
	0x0399E3B8 LDR W8, [X21 + 0x18]
	0x0399E3BC ADD X9, X21, 0x20
	0x0399E3C0 CMP W8, 0x0
	0x0399E3C4 CSEL X8, X31, X9, EQ
	0x0399E3C8 LDR W9, [X0 + 0x18]
	0x0399E3CC ADD X10, X0, 0x20
	0x0399E3D0 CMP W9, 0x0
	0x0399E3D4 CSEL X1, X31, X10, EQ
	0x0399E3D8 MOV X0, X8
	0x0399E3DC MOV W2, W19
	0x0399E3E0 MOV W3, W23
	0x0399E3E4 MOV W4, W20
	0x0399E3E8 BL 0x399E160
	0x0399E3EC LDP X20, X19, [X31 + 0x30]
	0x0399E3F0 LDP X22, X21, [X31 + 0x20]
	0x0399E3F4 LDP X30, X23, [X31 + 0x10]
	0x0399E3F8 ADD X31, X31, 0x40
	0x0399E3FC RET
	0x0399E400 BL 0x1C16F20
	0x0399E404 SUB X31, X31, 0x50
	0x0399E408 STP X30, X25, [X31 + 0x10]
	0x0399E40C STP X24, X23, [X31 + 0x20]
	0x0399E410 STP X22, X21, [X31 + 0x30]
	0x0399E414 STP X20, X19, [X31 + 0x40]
	0x0399E418 ADRP X25, 0xA43000
	0x0399E41C ADRP X24, 0x755000
	0x0399E420 LDRB W8, [X25 + 0xB66]
	0x0399E424 LDR X24, [X24 + 0x5A8]
	0x0399E428 MOV W19, W4
	0x0399E42C MOV X20, X3
	0x0399E430 MOV W23, W2
	0x0399E434 MOV X21, X1
	0x0399E438 MOV X22, X0
	0x0399E43C TBNZ X8, 0x0, 0x399E478
	0x0399E440 ADRP X0, 0x7B3000
	0x0399E444 LDR X0, [X0 + 0x290]
	0x0399E448 BL 0x1C16CF4
	0x0399E44C ADRP X0, 0x755000
	0x0399E450 LDR X0, [X0 + 0x5A8]
	0x0399E454 BL 0x1C16CF4
	0x0399E458 ADRP X0, 0x7B3000
	0x0399E45C LDR X0, [X0 + 0x298]
	0x0399E460 BL 0x1C16CF4
	0x0399E464 ADRP X0, 0x7B3000
	0x0399E468 LDR X0, [X0 + 0x2A0]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA44000
	010 Move X21, 0x7B3000
	011 Move W8, [X20+2904]
	012 Move X21, [X21+1912]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x7B3000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2904], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call DebugManager.get_instance
	029 Compare X0, 0
	030 JumpIfEqual {260}
	031 Call DebugManager.get_displayRuntimeUI, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {45}
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Move D9, [X31+16]
	041 Move D8, [X31+24]
	042 Move D11, [X31+64]
	043 Move D10, [X31+72]
	044 Return 
	045 Move X0, X19
	046 Call FreeCamera.UpdateInputs, X0
	047 Move V1, [X19+96]
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Move S2, [X19+40]
	050 Move S0, [X19+44]
	051 Multiply S1, S1, S0
	052 Add S1, S2, S1
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move [X19+40], S1
	055 Move [X19+40], S0
	056 Move V0, [X19+88]
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move V0, [X19+92]
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move V0, [X19+100]
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Move V0, [X19+104]
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move V0, [X19+108]
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move X0, X19
	067 Move X1, X31
	068 Call Component.get_transform, X0
	069 Compare X0, 0
	070 JumpIfEqual {260}
	071 Move X1, X31
	072 Call Transform.get_localEulerAngles, X0
	073 Move X0, X19
	074 Move X1, X31
	075 Move V9, V0
	076 Call Component.get_transform, X0
	077 Compare X0, 0
	078 JumpIfEqual {260}
	079 Move X1, X31
	080 Call Transform.get_localEulerAngles, X0
	081 Move V0, [X19+92]
	082 Move W8, 0x42B40000
	083 Move V8, V1
	084 Move S1, W8
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 Subtract S0, S9, S0
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move S1, W31
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 Move W8, 0x42B40000
	091 Move S1, W8
	092 NotImplemented "Instruction FMIN not yet implemented."
	093 Move W8, 0x43870000
	094 Move S1, W8
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 Move V9, V0
	097 Move W8, 0x43870000
	098 Move S9, W8
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move W8, 0x43B40000
	101 Move S1, W8
	102 NotImplemented "Instruction FMIN not yet implemented."
	103 Move W8, 0x43870000
	104 Move S0, W8
	105 NotImplemented "Instruction FCMP not yet implemented."
	106 Move S9, W31
	107 Move W8, 0x43870000
	108 Move S9, W8
	109 Move V10, [X19+88]
	110 Move X0, X19
	111 Move X1, X31
	112 Call Component.get_transform, X0
	113 Move X20, X0
	114 Move X0, X19
	115 Move X1, X31
	116 Call Component.get_transform, X0
	117 Compare X0, 0
	118 JumpIfEqual {260}
	119 Move X1, X31
	120 Add S8, S8, S10
	121 Call Transform.get_localEulerAngles, X0
	122 Move X8, -48967680
	123 Move V3, [X8+260]
	124 Move X0, X31
	125 Multiply S0, S9, S3
	126 Multiply S1, S8, S3
	127 Multiply S2, S2, S3
	128 Call Quaternion.Internal_FromEulerRad, X0
	129 Compare X20, 0
	130 JumpIfEqual {260}
	131 Move X0, X20
	132 Move X1, X31
	133 Call Transform.set_localRotation, X0, X1
	134 Move X0, X31
	135 Call Time.get_deltaTime
	136 Move V1, [X19+40]
	137 Move W8, [X19+114]
	138 Multiply S11, S0, S1
	139 Compare W8, 0
	140 JumpIfEqual {254}
	141 Move V0, [X19+48]
	142 Multiply S11, S11, S0
	143 Move X0, X19
	144 Move X1, X31
	145 Call Component.get_transform, X0
	146 Compare X0, 0
	147 JumpIfEqual {260}
	148 Move X1, X31
	149 Move X20, X0
	150 Call Transform.get_position, X0
	151 Move X0, X19
	152 Move X1, X31
	153 Move V8, V0
	154 Move V9, V1
	155 Move V10, V2
	156 Call Component.get_transform, X0
	157 Compare X0, 0
	158 JumpIfEqual {260}
	159 Move X1, X31
	160 Call Transform.get_forward, X0
	161 Move V3, [X19+100]
	162 Multiply S0, S11, S0
	163 Multiply S1, S11, S1
	164 Multiply S2, S11, S2
	165 Multiply S0, S3, S0
	166 Multiply S1, S3, S1
	167 Multiply S2, S3, S2
	168 Add S0, S8, S0
	169 Add S1, S9, S1
	170 Add S2, S10, S2
	171 Move X0, X20
	172 Move X1, X31
	173 Call Transform.set_position, X0, X1
	174 Move X0, X19
	175 Move X1, X31
	176 Call Component.get_transform, X0
	177 Compare X0, 0
	178 JumpIfEqual {260}
	179 Move X1, X31
	180 Move X20, X0
	181 Call Transform.get_position, X0
	182 Move X0, X19
	183 Move X1, X31
	184 Move V8, V0
	185 Move V9, V1
	186 Move V10, V2
	187 Call Component.get_transform, X0
	188 Compare X0, 0
	189 JumpIfEqual {260}
	190 Move X1, X31
	191 Call Transform.get_right, X0
	192 Move V3, [X19+104]
	193 Multiply S0, S11, S0
	194 Multiply S1, S11, S1
	195 Multiply S2, S11, S2
	196 Multiply S0, S3, S0
	197 Multiply S1, S3, S1
	198 Multiply S2, S3, S2
	199 Add S0, S8, S0
	200 Add S1, S9, S1
	201 Add S2, S10, S2
	202 Move X0, X20
	203 Move X1, X31
	204 Call Transform.set_position, X0, X1
	205 Move X0, X19
	206 Move X1, X31
	207 Call Component.get_transform, X0
	208 Compare X0, 0
	209 JumpIfEqual {260}
	210 Move X1, X31
	211 Move X20, X0
	212 Call Transform.get_position, X0
	213 Move X21, 0xA3B000
	214 Move W8, [X21+1926]
	215 Move V8, V0
	216 Move V9, V1
	217 Move V10, V2
	218 Compare W8, 0
	219 JumpIfNotEqual {225}
	220 Move X0, 0x756000
	221 Move X0, [X0+1440]
	222 Call 0x1C17CF4
	223 Move W8, 1
	224 Move [X21+1926], W8
	225 Move X8, 0x756000
	226 Move X8, [X8+1440]
	227 Move V3, [X19+108]
	228 Move X0, X20
	229 Move X20, [X31+48]
	230 Move X19, [X31+56]
	231 Move X8, [X8]
	232 Move X30, [X31+32]
	233 Move X21, [X31+40]
	234 Move X1, X31
	235 Move X8, [X8+184]
	236 Move S0, [X8+24]
	237 Move S1, [X8+28]
	238 Move V2, [X8+32]
	239 Multiply S0, S11, S0
	240 Multiply S1, S11, S1
	241 Multiply S0, S0, S3
	242 Multiply S1, S1, S3
	243 Add S0, S8, S0
	244 Add S1, S9, S1
	245 Move D9, [X31+16]
	246 Move D8, [X31+24]
	247 Multiply S2, S11, S2
	248 Multiply S2, S2, S3
	249 Add S2, S10, S2
	250 Move D11, [X31+64]
	251 Move D10, [X31+72]
	252 Call Transform.set_position, X0, X1
	253 Return 
	254 Move W8, [X19+112]
	255 Compare W8, 0
	256 JumpIfEqual {143}
	257 Move W8, [X19+113]
	258 Compare W8, 0
	259 JumpIfNotEqual {141}
	260 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x0399E4F4 MOV X1, X21
	0x0399E4F8 LDR X2, [X25]
	0x0399E4FC BL 0x22226A4
	0x0399E500 LDP X8, X1, [X20]
	0x0399E504 LDR X2, [X25]
	0x0399E508 MOV X20, X0
	0x0399E50C MOV X0, X8

ISIL:
	001 Move X8, -48959488
	002 Move V0, [X8+233]
	003 Move W8, 0x41200000
	004 Move X1, X31
	005 Move [X0+48], W8
	006 Move [X0+2], V0
	007 Call MonoBehaviour..ctor, X0
	008 Return 

