Type: UnityEngine.Rendering.DebugUI/Foldout

Method: System.Boolean get_isReadOnly()

Disassembly:
	0x039AF1E8 MOV X0, X19
	0x039AF1EC MOV X1, X31

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.String[] get_columnLabels()

Disassembly:
	0x039AF1F0 BL 0x3C69940
	0x039AF1F4 CBZ X0, 0x39AF23C

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_columnLabels(System.String[] value)

Disassembly:
	0x039AF1F8 MOVZ W1, 0x2F
	0x039AF1FC MOV W2, W31

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String[] get_columnTooltips()

Disassembly:
	0x039AF200 MOV X3, X31
	0x039AF204 BL 0x3229AE8

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_columnTooltips(System.String[] value)

Disassembly:
	0x039AF208 CBZ X0, 0x39AF23C
	0x039AF20C LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x039A7ED4 MOVZ W8, 0x1

ISIL:
	001 Call Container..ctor, X0
	002 Return 

Method: System.Void .ctor(System.String displayName, UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> children, System.String[] columnLabels = null, System.String[] columnTooltips = null)

Disassembly:
	0x039AF210 CMP W8, 0x1
	0x039AF214 B.EQ 0x39AF224
	0x039AF218 CBZ W8, 0x39AF240
	0x039AF21C ADD X8, X0, 0x20
	0x039AF220 B 0x39AF22C
	0x039AF224 ADRP X8, 0x744000
	0x039AF228 LDR X8, [X8 + 0x988]
	0x039AF22C LDR X0, [X8]
	0x039AF230 LDP X20, X19, [X31 + 0x10]
	0x039AF234 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X4
	006 Move X20, X3
	007 Move X21, X0
	008 Call Container..ctor, X0, X1, X2
	009 Move [X21+96], X20
	010 Move [X21+104], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Move X21, [X31+40]
	015 Return 

Method: System.Boolean GetValue()

Disassembly:
	0x039AF238 RET
	0x039AF23C BL 0x1C16F20

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Object UnityEngine.Rendering.DebugUI.IValueField.GetValue()

Disassembly:
	0x039AF240 BL 0x1C16F28
	0x039AF244 LDR X0, [X0 + 0x60]
	0x039AF248 RET
	0x039AF24C STR X1, [X0 + 0x60]
	0x039AF250 RET
	0x039AF254 LDR X0, [X0 + 0x90]
	0x039AF258 RET
	0x039AF25C STR X1, [X0 + 0x90]
	0x039AF260 RET
	0x039AF264 LDR X8, [X0 + 0x90]
	0x039AF268 CBZ X8, 0x39AF274
	0x039AF26C LDR W0, [X8 + 0x18]
	0x039AF270 RET
	0x039AF274 MOV W0, W31
	0x039AF278 RET
	0x039AF27C STR X30, [X31 - 0x10]!
	0x039AF280 LDR X8, [X0 + 0x90]
	0x039AF284 CBZ X8, 0x39AF2B4
	0x039AF288 LDR W9, [X8 + 0x18]
	0x039AF28C CMP W9, W1
	0x039AF290 B.LS 0x39AF2B8
	0x039AF294 ADD X8, X8, W1, 0x3, SXTW
	0x039AF298 LDR X8, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA33000
	007 Move X20, 0x745000
	008 Move W8, [X21+3070]
	009 Move X20, [X20+2904]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x745000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3070], W8
	020 Move W8, [X19+80]
	021 Move X0, [X20]
	022 Add X1, X31, 12
	023 Move [X31+12], W8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Void SetValue(System.Object value)

Disassembly:
	0x039AF29C CBZ X8, 0x39AF2B4
	0x039AF2A0 LDR X2, [X8 + 0x18]
	0x039AF2A4 LDR X0, [X8 + 0x40]
	0x039AF2A8 LDR X1, [X8 + 0x28]
	0x039AF2AC LDR X30, [X31], #0x10
	0x039AF2B0 BR X2
	0x039AF2B4 BL 0x1C16F20
	0x039AF2B8 BL 0x1C16F28
	0x039AF2BC B 0x399C0B4
	0x039AF2C0 LDR X0, [X0 + 0x70]
	0x039AF2C4 RET
	0x039AF2C8 STR X30, [X31 - 0x30]!
	0x039AF2CC STP X22, X21, [X31 + 0x10]
	0x039AF2D0 STP X20, X19, [X31 + 0x20]
	0x039AF2D4 ADRP X22, 0xA32000
	0x039AF2D8 ADRP X21, 0x7A2000
	0x039AF2DC LDRB W8, [X22 + 0xC19]
	0x039AF2E0 LDR X21, [X21 + 0xC98]
	0x039AF2E4 MOV X19, X1
	0x039AF2E8 MOV X20, X0
	0x039AF2EC TBNZ X8, 0x0, 0x39AF304
	0x039AF2F0 ADRP X0, 0x7A2000
	0x039AF2F4 LDR X0, [X0 + 0xC98]
	0x039AF2F8 BL 0x1C16CF4
	0x039AF2FC MOVZ W8, 0x1
	0x039AF300 STRB W8, [X22 + 0xC19]
	0x039AF304 STR X19, [X20 + 0x70]
	0x039AF308 LDR X2, [X21]
	0x039AF30C MOV X0, X20
	0x039AF310 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA33000
	006 Move W8, [X21+3071]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x745000
	014 Move X0, [X0+2904]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3071], W8
	018 Compare X19, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x745000
	021 Move X8, [X8+2904]
	022 Move X9, [X19]
	023 Move X0, X19
	024 Move X1, [X8]
	025 Move X8, [X9+64]
	026 Move X9, [X1+64]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Call 0x1C17E08
	029 Move W8, [X0]
	030 Move [X20+80], W8
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Call 0x1C17F20
	037 Call 0x1C181E0

Method: System.Object ValidateValue(System.Object value)

Disassembly:
	0x039AF314 LDP X20, X19, [X31 + 0x20]
	0x039AF318 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, X1
	002 Return X0

Method: System.Void SetValue(System.Boolean value)

Disassembly:
	0x039AF31C LDR X30, [X31], #0x30
	0x039AF320 B 0x2BAA4F0
	0x039AF324 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

