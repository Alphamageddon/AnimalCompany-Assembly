Type: UnityEngine.Rendering.Texture2DAtlas

Method: System.Int32 get_maxMipLevelPadding()

Disassembly:
	0x039D9CA4 BL 0x3C61A54
	0x039D9CA8 CMP W0, 0x1
	0x039D9CAC B.NE 0x39D9D34
	0x039D9CB0 LDR X8, [X20]
	0x039D9CB4 MOV X0, X20
	0x039D9CB8 LDP X9, X1, [X8 + 0x178]
	0x039D9CBC BLR X9
	0x039D9CC0 LDR X8, [X23]
	0x039D9CC4 MOV W22, W0
	0x039D9CC8 LDR W9, [X8 + 0xE0]
	0x039D9CCC CBNZ W9, 0x39D9CD8
	0x039D9CD0 MOV X0, X8
	0x039D9CD4 BL 0x1C16DFC
	0x039D9CD8 MOV W0, W22
	0x039D9CDC MOV X1, X31
	0x039D9CE0 BL 0x3C61C38
	0x039D9CE4 LDR X8, [X20]
	0x039D9CE8 ANDS W31, W0, 0x1
	0x039D9CEC MOV X0, X20
	0x039D9CF0 LDP X9, X1, [X8 + 0x178]
	0x039D9CF4 MOVZ W8, 0x12
	0x039D9CF8 CINC W25, W8, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA09000
	005 Move X19, 0x77A000
	006 Move W8, [X20+3427]
	007 Move X19, [X19+4048]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x77A000
	013 Move X0, [X0+4048]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3427], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.Rendering.RTHandle get_AtlasTexture()

Disassembly:
	0x039D9CFC BLR X9
	0x039D9D00 LDR X8, [X23]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.FilterMode filterMode = 0, System.Boolean powerOfTwoPadding = False, System.String name = , System.Boolean useMipMap = True)

Disassembly:
	0x039D9D04 MOV W22, W0
	0x039D9D08 LDR W9, [X8 + 0xE0]
	0x039D9D0C CBNZ W9, 0x39D9D18
	0x039D9D10 MOV X0, X8
	0x039D9D14 BL 0x1C16DFC
	0x039D9D18 MOV W0, W22
	0x039D9D1C MOV X1, X31
	0x039D9D20 BL 0x3C61D28
	0x039D9D24 CMP W0, 0x0
	0x039D9D28 MOVZ W8, 0x14
	0x039D9D2C CSEL W22, W8, W25, EQ
	0x039D9D30 B 0x39D9D38
	0x039D9D34 MOVZ W22, 0x12
	0x039D9D38 LDR X0, [X24]
	0x039D9D3C ADRP X25, 0x77A000
	0x039D9D40 LDR W8, [X0 + 0xE0]
	0x039D9D44 LDR X25, [X25 + 0x1B0]
	0x039D9D48 CBNZ W8, 0x39D9D54
	0x039D9D4C BL 0x1C16DFC
	0x039D9D50 LDR X0, [X24]
	0x039D9D54 LDR X8, [X25]
	0x039D9D58 LDR X9, [X0 + 0xB8]
	0x039D9D5C LDR W10, [X8 + 0xE0]
	0x039D9D60 LDR X23, [X9 + 0x20]
	0x039D9D64 CBNZ W10, 0x39D9D70
	0x039D9D68 MOV X0, X8
	0x039D9D6C BL 0x1C16DFC
	0x039D9D70 CBZ X23, 0x39D9E68
	0x039D9D74 LDR X8, [X25]
	0x039D9D78 MOV X0, X23
	0x039D9D7C MOV X2, X20
	0x039D9D80 MOV X3, X31
	0x039D9D84 LDR X8, [X8 + 0xB8]
	0x039D9D88 LDR W1, [X8]
	0x039D9D8C BL 0x3C12828
	0x039D9D90 LDR X8, [X24]
	0x039D9D94 LDR X8, [X8 + 0xB8]
	0x039D9D98 LDR X0, [X8 + 0x20]
	0x039D9D9C CBZ X0, 0x39D9E68
	0x039D9DA0 LDR X8, [X25]
	0x039D9DA4 MOV V0.16B, V15.16B
	0x039D9DA8 MOV V1.16B, V14.16B
	0x039D9DAC MOV V2.16B, V13.16B
	0x039D9DB0 LDR X8, [X8 + 0xB8]
	0x039D9DB4 MOV V3.16B, V12.16B
	0x039D9DB8 MOV X2, X31
	0x039D9DBC LDR W1, [X8 + 0x8]
	0x039D9DC0 BL 0x3C12720
	0x039D9DC4 LDR X8, [X24]
	0x039D9DC8 LDR X8, [X8 + 0xB8]
	0x039D9DCC LDR X0, [X8 + 0x20]
	0x039D9DD0 CBZ X0, 0x39D9E68
	0x039D9DD4 LDR X8, [X25]
	0x039D9DD8 MOV V0.16B, V11.16B
	0x039D9DDC MOV V1.16B, V10.16B
	0x039D9DE0 MOV V2.16B, V9.16B
	0x039D9DE4 LDR X8, [X8 + 0xB8]
	0x039D9DE8 MOV V3.16B, V8.16B
	0x039D9DEC MOV X2, X31
	0x039D9DF0 LDR W1, [X8 + 0xC]
	0x039D9DF4 BL 0x3C12720
	0x039D9DF8 LDR X8, [X24]
	0x039D9DFC LDR X8, [X8 + 0xB8]
	0x039D9E00 LDR X0, [X8 + 0x20]
	0x039D9E04 CBZ X0, 0x39D9E68
	0x039D9E08 LDR X8, [X25]
	0x039D9E0C SCVTF S0, W21
	0x039D9E10 MOV X2, X31
	0x039D9E14 LDR X8, [X8 + 0xB8]
	0x039D9E18 LDR W1, [X8 + 0x10]
	0x039D9E1C BL 0x3C125FC
	0x039D9E20 LDR X8, [X20]
	0x039D9E24 MOV X0, X20
	0x039D9E28 LDP X9, X1, [X8 + 0x1C8]
	0x039D9E2C BLR X9
	0x039D9E30 MOV W1, W31
	0x039D9E34 BL 0x39E1E80
	0x039D9E38 MOV X1, X0
	0x039D9E3C MOV X0, X19
	0x039D9E40 MOV W2, W22
	0x039D9E44 LDP X20, X19, [X31 + 0x70]
	0x039D9E48 LDP X22, X21, [X31 + 0x60]
	0x039D9E4C LDP X24, X23, [X31 + 0x50]
	0x039D9E50 LDP X30, X25, [X31 + 0x40]
	0x039D9E54 LDP D9, D8, [X31 + 0x30]
	0x039D9E58 LDP D11, D10, [X31 + 0x20]
	0x039D9E5C LDP D13, D12, [X31 + 0x10]
	0x039D9E60 LDP D15, D14, [X31], #0x80
	0x039D9E64 B 0x39E20B0
	0x039D9E68 BL 0x1C16F20
	0x039D9E6C STP D11, D10, [X31 - 0x60]!
	0x039D9E70 STP D9, D8, [X31 + 0x10]
	0x039D9E74 STP X30, X25, [X31 + 0x20]
	0x039D9E78 STP X24, X23, [X31 + 0x30]
	0x039D9E7C STP X22, X21, [X31 + 0x40]
	0x039D9E80 STP X20, X19, [X31 + 0x50]
	0x039D9E84 ADRP X22, 0xA08000
	0x039D9E88 LDRB W8, [X22 + 0xDDF]
	0x039D9E8C MOV W21, W2
	0x039D9E90 MOV V8.16B, V3.16B
	0x039D9E94 MOV V9.16B, V2.16B
	0x039D9E98 MOV V10.16B, V1.16B
	0x039D9E9C MOV V11.16B, V0.16B
	0x039D9EA0 MOV X20, X1
	0x039D9EA4 MOV X19, X0
	0x039D9EA8 TBNZ X8, 0x0, 0x39D9ED8
	0x039D9EAC ADRP X0, 0x77A000
	0x039D9EB0 LDR X0, [X0 + 0x1B0]
	0x039D9EB4 BL 0x1C16CF4
	0x039D9EB8 ADRP X0, 0x779000
	0x039D9EBC LDR X0, [X0 + 0xE28]
	0x039D9EC0 BL 0x1C16CF4
	0x039D9EC4 ADRP X0, 0x77A000
	0x039D9EC8 LDR X0, [X0 + 0x90]
	0x039D9ECC BL 0x1C16CF4
	0x039D9ED0 MOVZ W8, 0x1
	0x039D9ED4 STRB W8, [X22 + 0xDDF]
	0x039D9ED8 CBZ X20, 0x39DA0D8
	0x039D9EDC LDR X8, [X20]
	0x039D9EE0 ADRP X23, 0x77A000
	0x039D9EE4 MOV X0, X20
	0x039D9EE8 LDP X9, X1, [X8 + 0x178]
	0x039D9EEC LDR X23, [X23 + 0x90]
	0x039D9EF0 BLR X9
	0x039D9EF4 LDR X8, [X23]
	0x039D9EF8 MOV W22, W0
	0x039D9EFC LDR W9, [X8 + 0xE0]
	0x039D9F00 CBNZ W9, 0x39D9F0C
	0x039D9F04 MOV X0, X8
	0x039D9F08 BL 0x1C16DFC
	0x039D9F0C ADRP X24, 0x779000
	0x039D9F10 LDR X24, [X24 + 0xE28]
	0x039D9F14 MOV W0, W22
	0x039D9F18 MOV X1, X31
	0x039D9F1C BL 0x3C61A54
	0x039D9F20 CMP W0, 0x1
	0x039D9F24 B.NE 0x39D9FAC
	0x039D9F28 LDR X8, [X20]
	0x039D9F2C MOV X0, X20
	0x039D9F30 LDP X9, X1, [X8 + 0x178]
	0x039D9F34 BLR X9
	0x039D9F38 LDR X8, [X23]
	0x039D9F3C MOV W22, W0
	0x039D9F40 LDR W9, [X8 + 0xE0]
	0x039D9F44 CBNZ W9, 0x39D9F50
	0x039D9F48 MOV X0, X8
	0x039D9F4C BL 0x1C16DFC
	0x039D9F50 MOV W0, W22
	0x039D9F54 MOV X1, X31
	0x039D9F58 BL 0x3C61C38
	0x039D9F5C LDR X8, [X20]
	0x039D9F60 ANDS W31, W0, 0x1
	0x039D9F64 MOV X0, X20
	0x039D9F68 LDP X9, X1, [X8 + 0x178]
	0x039D9F6C MOVZ W8, 0xF
	0x039D9F70 CINC W25, W8, NE
	0x039D9F74 BLR X9

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move [X31+104], W4
	015 Move [X31+108], W5
	016 Move X27, 0xA09000
	017 Move X24, 0x77B000
	018 Move X29, 0x725000
	019 Move X21, 0x725000
	020 Move W8, [X27+3428]
	021 Move X24, [X24+400]
	022 Move X29, [X29+2184]
	023 Move X21, [X21+2192]
	024 Move W23, W7
	025 Move X26, X6
	026 Move W25, W3
	027 Move W20, W2
	028 Move W22, W1
	029 Move X19, X0
	030 And W28, W7, 1
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {58}
	035 Move X0, 0x77B000
	036 Move X0, [X0+408]
	037 Call 0x1C17CF4
	038 Move X0, 0x77B000
	039 Move X0, [X0+416]
	040 Call 0x1C17CF4
	041 Move X0, 0x725000
	042 Move X0, [X0+2192]
	043 Call 0x1C17CF4
	044 Move X0, 0x725000
	045 Move X0, [X0+2184]
	046 Call 0x1C17CF4
	047 Move X0, 0x77B000
	048 Move X0, [X0+400]
	049 Call 0x1C17CF4
	050 Move X0, 0x71F000
	051 Move X0, [X0+712]
	052 Call 0x1C17CF4
	053 Move X0, 0x778000
	054 Move X0, [X0+2480]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X27+3428], W8
	058 Move X0, [X24]
	059 Call 0x1C17F10
	060 Move X8, 0x77B000
	061 Move X8, [X8+416]
	062 Move X27, X0
	063 Move X1, [X8]
	064 Call Dictionary`2<Int32, ValueTuple`2<Vector4, Vector2Int>>..ctor, X0
	065 Move [X19+48], X27
	066 Move X0, [X29]
	067 Call 0x1C17F10
	068 Move X1, [X21]
	069 Move X27, X0
	070 Call Dictionary`2<Int32, Int32>..ctor, X0
	071 Move [X19+56], X27
	072 Move X0, [X29]
	073 Call 0x1C17F10
	074 Move X1, [X21]
	075 Move X27, X0
	076 Call Dictionary`2<Int32, Int32>..ctor, X0
	077 Move X0, X19
	078 Move X1, X31
	079 Move [X19+64], X27
	080 Call Object..ctor, X0
	081 Move [X19+24], W22
	082 Move [X19+28], W20
	083 Move [X19+32], W25
	084 Move [X19+36], W28
	085 Move X8, 0x778000
	086 Move X8, [X8+2480]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X27, 0x77B000
	093 Move X27, [X27+408]
	094 Move W5, [X31+104]
	095 Move [X31+80], X26
	096 Move [X31+88], X31
	097 Move W26, 1
	098 And W8, W23, 1
	099 Move S0, W31
	100 Move W2, 1
	101 Move W6, 1
	102 Move W7, 2
	103 Move W0, W22
	104 Move W1, W20
	105 Move W3, W31
	106 Move W4, W25
	107 Move [X31+72], W31
	108 Move [X31+64], W31
	109 Move [X31+56], W31
	110 Move [X31+48], W31
	111 Move [X31+24], W31
	112 Move [X31+16], W31
	113 Move [X31+40], W26
	114 Move [X31+32], W26
	115 Move [X31+8], W8
	116 Move [X31], W31
	117 Call RTHandles.Alloc, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, V0, X13, X14, X15, X16, X17, X18
	118 Move [X19+16], X0
	119 Move [X19+37], W26
	120 Move TEMP, X23
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {130}
	124 Move W1, [X19+24]
	125 Move W2, [X19+28]
	126 Move X0, X19
	127 Call Texture2DAtlas.GetTextureMipmapCount, X0, X1, X2
	128 Move W26, W0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X21, 0x71F000
	131 Move X21, [X21+712]
	132 Move W23, W31
	133 Move X0, [X19+16]
	134 Move X1, X31
	135 Call RTHandle.op_Implicit, X0
	136 Move X8, [X21]
	137 Move X24, X0
	138 Move W9, [X8+224]
	139 Compare W9, 0
	140 JumpIfNotEqual {143}
	141 Move X0, X8
	142 Call 0x1C17DFC
	143 Move X0, X24
	144 Move W1, W23
	145 Move X2, X31
	146 Call Graphics.SetRenderTarget, X0, X1
	147 Move S0, W31
	148 Move S1, W31
	149 Move S2, W31
	150 Move S3, W31
	151 Move W1, 1
	152 Move W0, W31
	153 Move X2, X31
	154 Call GL.Clear, X0, X1, X2
	155 Add W23, W23, 1
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, [X27]
	158 Call 0x1C17F10
	159 Move W8, [X31+108]
	160 Move W1, W22
	161 Move W2, W20
	162 Move X23, X0
	163 And W3, W8, 1
	164 Call AtlasAllocator..ctor, X0, X1, X2, X3
	165 Move [X19+40], X23
	166 Move X20, [X31+192]
	167 Move X19, [X31+200]
	168 Move X22, [X31+176]
	169 Move X21, [X31+184]
	170 Move X24, [X31+160]
	171 Move X23, [X31+168]
	172 Move X26, [X31+144]
	173 Move X25, [X31+152]
	174 Move X28, [X31+128]
	175 Move X27, [X31+136]
	176 Move X29, [X31+112]
	177 Move X30, [X31+120]
	178 Add X31, X31, 208
	179 Return 

Method: System.Void Release()

Disassembly:
	0x039DA04C FMOV S2, W31
	0x039DA050 LDR X8, [X8 + 0xB8]
	0x039DA054 FMOV S3, W31
	0x039DA058 MOV X2, X31
	0x039DA05C LDR W1, [X8 + 0x8]
	0x039DA060 BL 0x3C12720
	0x039DA064 LDR X8, [X24]
	0x039DA068 LDR X8, [X8 + 0xB8]
	0x039DA06C LDR X0, [X8 + 0x20]
	0x039DA070 CBZ X0, 0x39DA0D8
	0x039DA074 LDR X8, [X25]
	0x039DA078 MOV V0.16B, V11.16B
	0x039DA07C MOV V1.16B, V10.16B
	0x039DA080 MOV V2.16B, V9.16B
	0x039DA084 LDR X8, [X8 + 0xB8]
	0x039DA088 MOV V3.16B, V8.16B
	0x039DA08C MOV X2, X31
	0x039DA090 LDR W1, [X8 + 0xC]
	0x039DA094 BL 0x3C12720
	0x039DA098 LDR X8, [X20]
	0x039DA09C MOV X0, X20
	0x039DA0A0 LDP X9, X1, [X8 + 0x1C8]
	0x039DA0A4 BLR X9
	0x039DA0A8 MOV W1, W31
	0x039DA0AC BL 0x39E1E80
	0x039DA0B0 MOV X1, X0
	0x039DA0B4 MOV X0, X19
	0x039DA0B8 MOV W2, W22
	0x039DA0BC LDP X20, X19, [X31 + 0x50]
	0x039DA0C0 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA08000
	005 Move W8, [X20+3429]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x777000
	012 Move X0, [X0+2480]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3429], W8
	016 Move X0, X19
	017 Call Texture2DAtlas.ResetAllocator, X0
	018 Move W8, [X19+37]
	019 Compare W8, 0
	020 JumpIfEqual {36}
	021 Move X8, 0x777000
	022 Move X8, [X8+2480]
	023 Move X19, [X19+16]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Call RTHandles.Release, X0
	035 Return 
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 

Method: System.Void ResetAllocator()

Disassembly:
	0x039DA0C4 LDP X24, X23, [X31 + 0x30]
	0x039DA0C8 LDP X30, X25, [X31 + 0x20]
	0x039DA0CC LDP D9, D8, [X31 + 0x10]
	0x039DA0D0 LDP D11, D10, [X31], #0x60
	0x039DA0D4 B 0x39E20B0
	0x039DA0D8 BL 0x1C16F20
	0x039DA0DC STR X30, [X31 - 0x30]!
	0x039DA0E0 STP X22, X21, [X31 + 0x10]
	0x039DA0E4 STP X20, X19, [X31 + 0x20]
	0x039DA0E8 ADRP X22, 0xA07000
	0x039DA0EC LDRB W8, [X22 + 0xD6B]
	0x039DA0F0 MOV W20, W2
	0x039DA0F4 MOV W19, W1
	0x039DA0F8 MOV X21, X0
	0x039DA0FC TBNZ X8, 0x0, 0x39DA114
	0x039DA100 ADRP X0, 0x743000
	0x039DA104 LDR X0, [X0 + 0x8B0]
	0x039DA108 BL 0x1C16CF4
	0x039DA10C MOVZ W8, 0x1
	0x039DA110 STRB W8, [X22 + 0xD6B]
	0x039DA114 LDR X0, [X21 + 0x38]
	0x039DA118 CBZ X0, 0x39DA148
	0x039DA11C ADRP X8, 0x743000
	0x039DA120 LDR X8, [X8 + 0x8B0]
	0x039DA124 ANDS W31, W20, 0x1
	0x039DA128 MOV W1, W19
	0x039DA12C LDP X20, X19, [X31 + 0x20]
	0x039DA130 LDR X3, [X8]
	0x039DA134 LDP X22, X21, [X31 + 0x10]
	0x039DA138 MOVZ W8, 0x1
	0x039DA13C CINC W2, W8, NE
	0x039DA140 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA08000
	005 Move W8, [X20+3430]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x744000
	012 Move X0, [X0+2256]
	013 Call 0x1C17CF4
	014 Move X0, 0x77A000
	015 Move X0, [X0+424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3430], W8
	019 Move X0, [X19+40]
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 Call AtlasAllocator.Reset, X0
	023 Move X0, [X19+48]
	024 Compare X0, 0
	025 JumpIfEqual {41}
	026 Move X8, 0x77A000
	027 Move X8, [X8+424]
	028 Move X1, [X8]
	029 Call Dictionary`2<Int32, ValueTuple`2<Vector4, Vector2Int>>.Clear, X0
	030 Move X0, [X19+56]
	031 Compare X0, 0
	032 JumpIfEqual {41}
	033 Move X8, 0x744000
	034 Move X8, [X8+2256]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, [X8]
	038 Move X30, [X31+32]
	039 Call Dictionary`2<Int32, Int32>.Clear, X0
	040 Return 
	041 Call 0x1C17F20

Method: System.Void ClearTarget(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x039DA144 B 0x2A0A330
	0x039DA148 BL 0x1C16F20
	0x039DA14C STP X30, X21, [X31 - 0x20]!
	0x039DA150 STP X20, X19, [X31 + 0x10]
	0x039DA154 ADRP X21, 0xA07000
	0x039DA158 LDRB W8, [X21 + 0xD6C]
	0x039DA15C MOV W19, W1
	0x039DA160 MOV X20, X0
	0x039DA164 TBNZ X8, 0x0, 0x39DA17C
	0x039DA168 ADRP X0, 0x743000
	0x039DA16C LDR X0, [X0 + 0x8B0]
	0x039DA170 BL 0x1C16CF4
	0x039DA174 MOVZ W8, 0x1
	0x039DA178 STRB W8, [X21 + 0xD6C]
	0x039DA17C LDR X0, [X20 + 0x38]
	0x039DA180 CBZ X0, 0x39DA1A4
	0x039DA184 ADRP X8, 0x743000
	0x039DA188 LDR X8, [X8 + 0x8B0]
	0x039DA18C MOV W1, W19
	0x039DA190 LDP X20, X19, [X31 + 0x10]
	0x039DA194 MOV W2, W31
	0x039DA198 LDR X3, [X8]
	0x039DA19C LDP X30, X21, [X31], #0x20
	0x039DA1A0 B 0x2A0A330
	0x039DA1A4 BL 0x1C16F20
	0x039DA1A8 STP D15, D14, [X31 - 0x80]!
	0x039DA1AC STP D13, D12, [X31 + 0x10]
	0x039DA1B0 STP D11, D10, [X31 + 0x20]
	0x039DA1B4 STP D9, D8, [X31 + 0x30]
	0x039DA1B8 STR X30, [X31 + 0x40]
	0x039DA1BC STP X24, X23, [X31 + 0x50]
	0x039DA1C0 STP X22, X21, [X31 + 0x60]
	0x039DA1C4 STP X20, X19, [X31 + 0x70]
	0x039DA1C8 ADRP X24, 0xA07000
	0x039DA1CC LDRB W8, [X24 + 0xD6D]
	0x039DA1D0 MOV W19, W4
	0x039DA1D4 MOV W22, W3
	0x039DA1D8 MOV V8.16B, V7.16B
	0x039DA1DC MOV V9.16B, V6.16B
	0x039DA1E0 MOV V10.16B, V5.16B
	0x039DA1E4 MOV V11.16B, V4.16B
	0x039DA1E8 MOV X20, X2
	0x039DA1EC MOV V12.16B, V3.16B
	0x039DA1F0 MOV V13.16B, V2.16B
	0x039DA1F4 MOV V14.16B, V1.16B
	0x039DA1F8 MOV V15.16B, V0.16B
	0x039DA1FC MOV X23, X1
	0x039DA200 MOV X21, X0
	0x039DA204 TBNZ X8, 0x0, 0x39DA228
	0x039DA208 ADRP X0, 0x741000
	0x039DA20C LDR X0, [X0 + 0x8F8]
	0x039DA210 BL 0x1C16CF4
	0x039DA214 ADRP X0, 0x743000
	0x039DA218 LDR X0, [X0 + 0x8B0]
	0x039DA21C BL 0x1C16CF4
	0x039DA220 MOVZ W8, 0x1
	0x039DA224 STRB W8, [X24 + 0xD6D]
	0x039DA228 MOV X1, X20
	0x039DA22C BL 0x39D94C0
	0x039DA230 TBZ X0, 0x0, 0x39DA31C
	0x039DA234 LDR X8, [X21 + 0x10]
	0x039DA238 CBZ X8, 0x39DA340
	0x039DA23C LDR X2, [X8 + 0x18]
	0x039DA240 MOV X1, X20
	0x039DA244 BL 0x39D958C
	0x039DA248 ANDS W31, W0, 0x1
	0x039DA24C MOVZ W8, 0x2
	0x039DA250 AND W22, W22, 0x1
	0x039DA254 CSEL W4, W8, W31, NE
	0x039DA258 MOV X0, X21
	0x039DA25C MOV X1, X23
	0x039DA260 MOV V0.16B, V15.16B
	0x039DA264 MOV V1.16B, V14.16B
	0x039DA268 MOV V2.16B, V13.16B
	0x039DA26C MOV V3.16B, V12.16B
	0x039DA270 MOV X2, X20
	0x039DA274 MOV V4.16B, V11.16B
	0x039DA278 MOV V5.16B, V10.16B
	0x039DA27C MOV V6.16B, V9.16B
	0x039DA280 MOV V7.16B, V8.16B
	0x039DA284 MOV W3, W22
	0x039DA288 BL 0x39D97D0
	0x039DA28C ADDS W31, W19, 0x1
	0x039DA290 B.NE 0x39DA2A8
	0x039DA294 CBZ X20, 0x39DA340
	0x039DA298 MOV X0, X20
	0x039DA29C MOV X1, X31
	0x039DA2A0 BL 0x3C385F8
	0x039DA2A4 MOV W19, W0
	0x039DA2A8 MOV X0, X21
	0x039DA2AC MOV W1, W19
	0x039DA2B0 MOV W2, W22
	0x039DA2B4 BL 0x39DA0DC
	0x039DA2B8 ADRP X8, 0x741000
	0x039DA2BC LDR X8, [X8 + 0x8F8]
	0x039DA2C0 LDR X21, [X21 + 0x40]
	0x039DA2C4 LDR X0, [X8]
	0x039DA2C8 LDR W8, [X0 + 0xE0]
	0x039DA2CC CBNZ W8, 0x39DA2D4
	0x039DA2D0 BL 0x1C16DFC
	0x039DA2D4 MOV X0, X20
	0x039DA2D8 BL 0x39DA35C
	0x039DA2DC CBZ X21, 0x39DA340
	0x039DA2E0 ADRP X8, 0x743000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], D11
	003 Move [X31+136], D10
	004 Move [X31+144], D9
	005 Move [X31+152], D8
	006 Move [X31+160], X30
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X21, 0xA08000
	015 Move W8, [X21+3431]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x779000
	023 Move X0, [X0+3624]
	024 Call 0x1C17CF4
	025 Move X0, 0x744000
	026 Move X0, [X0+2256]
	027 Call 0x1C17CF4
	028 Move X0, 0x779000
	029 Move X0, [X0+4048]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3431], W8
	033 Move W8, [X20+36]
	034 Compare W8, 0
	035 JumpIfEqual {42}
	036 Move W1, [X20+24]
	037 Move W2, [X20+28]
	038 Move X0, X20
	039 Call Texture2DAtlas.GetTextureMipmapCount, X0, X1, X2
	040 Move W21, W0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W21, 1
	043 Move X24, 0x779000
	044 Move X25, 0x779000
	045 Move X24, [X24+4048]
	046 Move X25, [X25+3624]
	047 Move W22, W31
	048 Move X0, [X20+16]
	049 Add X8, X31, 40
	050 Move X1, X31
	051 Call RTHandle.op_Implicit, X0
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X8, [X31+72]
	055 Move [X31+80], V0
	056 Move [X31+88], V1
	057 Move [X31+112], X8
	058 Compare X19, 0
	059 JumpIfEqual {127}
	060 Move V0, [X31+80]
	061 Move V1, [X31+96]
	062 Move X8, [X31+112]
	063 Add X1, X31, 0
	064 Move X0, X19
	065 Move W2, W22
	066 Move X3, X31
	067 Move [X31], V0
	068 Move [X31+8], V1
	069 Move [X31+32], X8
	070 Call CommandBuffer.SetRenderTarget, X0, X1, X2
	071 Move X0, X31
	072 Call Texture2D.get_blackTexture
	073 Move X8, [X24]
	074 Move X23, X0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {81}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X8, [X24]
	081 Move X8, [X8+184]
	082 Move X0, [X25]
	083 Move S10, [X8]
	084 Move S8, [X8+4]
	085 Move W9, [X0+224]
	086 Move S11, [X8+8]
	087 Move S9, [X8+12]
	088 Compare W9, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move W3, 1
	092 Move X0, X19
	093 Move X1, X23
	094 Move V0, V10
	095 Move V1, V8
	096 Move V2, V11
	097 Move V3, V9
	098 Move V4, V10
	099 Move V5, V8
	100 Move V6, V11
	101 Move V7, V9
	102 Move W2, W22
	103 Call Blitter.BlitQuad, X0, X1, X2, X3, X4, X5
	104 Add W22, W22, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, [X20+56]
	107 Compare X0, 0
	108 JumpIfEqual {127}
	109 Move X8, 0x744000
	110 Move X8, [X8+2256]
	111 Move X1, [X8]
	112 Call Dictionary`2<Int32, Int32>.Clear, X0
	113 Move X20, [X31+208]
	114 Move X19, [X31+216]
	115 Move X22, [X31+192]
	116 Move X21, [X31+200]
	117 Move X24, [X31+176]
	118 Move X23, [X31+184]
	119 Move X30, [X31+160]
	120 Move X25, [X31+168]
	121 Move D9, [X31+144]
	122 Move D8, [X31+152]
	123 Move D11, [X31+128]
	124 Move D10, [X31+136]
	125 Add X31, X31, 224
	126 Return 
	127 Call 0x1C17F20

Method: System.Int32 GetTextureMipmapCount(System.Int32 width, System.Int32 height)

Disassembly:
	0x039D9F78 LDR X8, [X23]
	0x039D9F7C MOV W22, W0
	0x039D9F80 LDR W9, [X8 + 0xE0]
	0x039D9F84 CBNZ W9, 0x39D9F90
	0x039D9F88 MOV X0, X8
	0x039D9F8C BL 0x1C16DFC
	0x039D9F90 MOV W0, W22
	0x039D9F94 MOV X1, X31
	0x039D9F98 BL 0x3C61D28
	0x039D9F9C CMP W0, 0x0
	0x039D9FA0 MOVZ W8, 0x11
	0x039D9FA4 CSEL W22, W8, W25, EQ
	0x039D9FA8 B 0x39D9FB0
	0x039D9FAC MOVZ W22, 0xF
	0x039D9FB0 LDR X0, [X24]
	0x039D9FB4 ADRP X25, 0x77A000
	0x039D9FB8 LDR W8, [X0 + 0xE0]
	0x039D9FBC LDR X25, [X25 + 0x1B0]
	0x039D9FC0 CBNZ W8, 0x39D9FCC
	0x039D9FC4 BL 0x1C16DFC
	0x039D9FC8 LDR X0, [X24]
	0x039D9FCC LDR X8, [X25]
	0x039D9FD0 LDR X9, [X0 + 0xB8]
	0x039D9FD4 LDR W10, [X8 + 0xE0]
	0x039D9FD8 LDR X23, [X9 + 0x20]
	0x039D9FDC CBNZ W10, 0x39D9FE8
	0x039D9FE0 MOV X0, X8
	0x039D9FE4 BL 0x1C16DFC
	0x039D9FE8 CBZ X23, 0x39DA0D8
	0x039D9FEC LDR X8, [X25]
	0x039D9FF0 MOV X0, X23
	0x039D9FF4 MOV X2, X20
	0x039D9FF8 MOV X3, X31
	0x039D9FFC LDR X8, [X8 + 0xB8]
	0x039DA000 LDR W1, [X8 + 0x4]
	0x039DA004 BL 0x3C12828
	0x039DA008 LDR X8, [X24]
	0x039DA00C LDR X8, [X8 + 0xB8]
	0x039DA010 LDR X0, [X8 + 0x20]
	0x039DA014 CBZ X0, 0x39DA0D8
	0x039DA018 LDR X8, [X25]
	0x039DA01C SCVTF S0, W21
	0x039DA020 MOV X2, X31
	0x039DA024 LDR X8, [X8 + 0xB8]
	0x039DA028 LDR W1, [X8 + 0x10]
	0x039DA02C BL 0x3C125FC
	0x039DA030 LDR X8, [X24]
	0x039DA034 LDR X8, [X8 + 0xB8]
	0x039DA038 LDR X0, [X8 + 0x20]
	0x039DA03C CBZ X0, 0x39DA0D8
	0x039DA040 LDR X8, [X25]
	0x039DA044 FMOV S0, 1
	0x039DA048 FMOV S1, 1

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+36]
	006 Compare W8, 0
	007 JumpIfEqual {54}
	008 Move X19, 0xA09000
	009 Move W8, [X19+3640]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Compare W8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, 0x71B000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3640], W8
	019 Move X19, 0x71B000
	020 Move X19, [X19+1448]
	021 NotImplemented "Instruction SCVTF not yet implemented."
	022 Move X0, [X19]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 NotImplemented "Instruction FCVT not yet implemented."
	028 Move D1, 2
	029 Move X0, X31
	030 Call Math.Log, V0, V1
	031 Move X20, 0xA00000
	032 Move W8, [X20+2595]
	033 Move V8, V0
	034 Compare W8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, 0x71B000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2595], W8
	041 Move X0, [X19]
	042 NotImplemented "Instruction INVALID not yet implemented."
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W8, 0x7F800000
	048 NotImplemented "Instruction FRINTM not yet implemented."
	049 Move S1, W8
	050 NotImplemented "Instruction FCVTMS not yet implemented."
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Or W8, W31, 0x80000001
	053 NotImplemented "Instruction CSINC not yet implemented."
	054 Move W0, 1
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+8]
	058 Move V8, [X31+32]
	059 Return X0

Method: System.Boolean Is2D(UnityEngine.Texture texture)

Disassembly:
	0x039DA4C0 LDP X30, X21, [X31 + 0x20]
	0x039DA4C4 ADD X31, X31, 0x40
	0x039DA4C8 RET
	0x039DA4CC BL 0x1C16F20
	0x039DA4D0 LDR X8, [X0]
	0x039DA4D4 AND W3, W3, 0x1
	0x039DA4D8 LDP X6, X5, [X8 + 0x178]
	0x039DA4DC BR X6
	0x039DA4E0 STP D11, D10, [X31 - 0x60]!
	0x039DA4E4 STP D9, D8, [X31 + 0x10]
	0x039DA4E8 STR X30, [X31 + 0x20]
	0x039DA4EC STP X24, X23, [X31 + 0x30]
	0x039DA4F0 STP X22, X21, [X31 + 0x40]
	0x039DA4F4 STP X20, X19, [X31 + 0x50]
	0x039DA4F8 ADRP X24, 0xA07000
	0x039DA4FC LDRB W8, [X24 + 0xD6E]
	0x039DA500 MOV W19, W4
	0x039DA504 MOV W23, W3
	0x039DA508 MOV X20, X2
	0x039DA50C MOV V8.16B, V3.16B
	0x039DA510 MOV V9.16B, V2.16B
	0x039DA514 MOV V10.16B, V1.16B
	0x039DA518 MOV V11.16B, V0.16B
	0x039DA51C MOV X22, X1
	0x039DA520 MOV X21, X0
	0x039DA524 TBNZ X8, 0x0, 0x39DA548
	0x039DA528 ADRP X0, 0x741000
	0x039DA52C LDR X0, [X0 + 0x8F8]
	0x039DA530 BL 0x1C16CF4
	0x039DA534 ADRP X0, 0x743000
	0x039DA538 LDR X0, [X0 + 0x8B0]
	0x039DA53C BL 0x1C16CF4
	0x039DA540 MOVZ W8, 0x1
	0x039DA544 STRB W8, [X24 + 0xD6E]
	0x039DA548 CBZ X20, 0x39DA65C
	0x039DA54C LDR X8, [X20]
	0x039DA550 MOV X0, X20
	0x039DA554 LDP X9, X1, [X8 + 0x1C8]
	0x039DA558 BLR X9
	0x039DA55C CMP W0, 0x4
	0x039DA560 B.NE 0x39DA640
	0x039DA564 LDR X8, [X21 + 0x10]
	0x039DA568 CBZ X8, 0x39DA65C
	0x039DA56C LDR X2, [X8 + 0x18]
	0x039DA570 MOV X1, X20
	0x039DA574 BL 0x39D958C
	0x039DA578 ANDS W31, W0, 0x1
	0x039DA57C MOVZ W8, 0x3
	0x039DA580 AND W23, W23, 0x1
	0x039DA584 CSINC W4, W8, W31, NE
	0x039DA588 FMOV S4, 1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA08000
	005 Move W8, [X20+3432]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x71C000
	012 Move X0, [X0+304]
	013 Call 0x1C17CF4
	014 Move X0, 0x744000
	015 Move X0, [X0+592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3432], W8
	019 Compare X19, 0
	020 JumpIfEqual {32}
	021 Move X9, 0x71C000
	022 Move X9, [X9+304]
	023 Move X8, [X19]
	024 Move X9, [X9]
	025 Move W11, [X8+304]
	026 Move W10, [X9+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X9, 0x744000
	029 Move X9, [X9+592]
	030 Move X9, [X9]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Move X11, [X8+200]
	034 Add X10, X11, X10
	035 Move X11, 0x744000
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X11, [X11+592]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X11, [X11]
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {51}
	044 Move X8, [X0]
	045 Move X9, [X8+456]
	046 Move X1, [X8+464]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move W0, 1
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return X0

Method: System.Boolean IsSingleChannelBlit(UnityEngine.Texture source, UnityEngine.Texture destination)

Disassembly:
	0x039DA58C FMOV S5, 1
	0x039DA590 FMOV S6, W31
	0x039DA594 FMOV S7, W31
	0x039DA598 MOV X0, X21
	0x039DA59C MOV X1, X22
	0x039DA5A0 MOV V0.16B, V11.16B
	0x039DA5A4 MOV V1.16B, V10.16B
	0x039DA5A8 MOV V2.16B, V9.16B
	0x039DA5AC MOV V3.16B, V8.16B
	0x039DA5B0 MOV X2, X20
	0x039DA5B4 MOV W3, W23
	0x039DA5B8 BL 0x39D97D0
	0x039DA5BC ADDS W31, W19, 0x1
	0x039DA5C0 B.NE 0x39DA5D4
	0x039DA5C4 MOV X0, X20
	0x039DA5C8 MOV X1, X31
	0x039DA5CC BL 0x3C385F8
	0x039DA5D0 MOV W19, W0
	0x039DA5D4 MOV X0, X21
	0x039DA5D8 MOV W1, W19
	0x039DA5DC MOV W2, W23
	0x039DA5E0 BL 0x39DA0DC
	0x039DA5E4 ADRP X8, 0x741000
	0x039DA5E8 LDR X8, [X8 + 0x8F8]
	0x039DA5EC LDR X21, [X21 + 0x40]
	0x039DA5F0 LDR X0, [X8]
	0x039DA5F4 LDR W8, [X0 + 0xE0]
	0x039DA5F8 CBNZ W8, 0x39DA600
	0x039DA5FC BL 0x1C16DFC
	0x039DA600 MOV X0, X20
	0x039DA604 BL 0x39DA35C
	0x039DA608 CBZ X21, 0x39DA65C
	0x039DA60C ADRP X8, 0x743000
	0x039DA610 LDR X8, [X8 + 0x8B0]
	0x039DA614 MOV W2, W0
	0x039DA618 MOV X0, X21
	0x039DA61C MOV W1, W19
	0x039DA620 LDR X3, [X8]
	0x039DA624 LDP X20, X19, [X31 + 0x50]
	0x039DA628 LDP X22, X21, [X31 + 0x40]
	0x039DA62C LDP X24, X23, [X31 + 0x30]
	0x039DA630 LDR X30, [X31 + 0x20]
	0x039DA634 LDP D9, D8, [X31 + 0x10]
	0x039DA638 LDP D11, D10, [X31], #0x60
	0x039DA63C B 0x2A0A330
	0x039DA640 LDP X20, X19, [X31 + 0x50]
	0x039DA644 LDP X22, X21, [X31 + 0x40]
	0x039DA648 LDP X24, X23, [X31 + 0x30]
	0x039DA64C LDR X30, [X31 + 0x20]
	0x039DA650 LDP D9, D8, [X31 + 0x10]
	0x039DA654 LDP D11, D10, [X31], #0x60
	0x039DA658 RET
	0x039DA65C BL 0x1C16F20
	0x039DA660 STP D11, D10, [X31 - 0x70]!
	0x039DA664 STP D9, D8, [X31 + 0x10]
	0x039DA668 STR X30, [X31 + 0x20]
	0x039DA66C STP X26, X25, [X31 + 0x30]
	0x039DA670 STP X24, X23, [X31 + 0x40]
	0x039DA674 STP X22, X21, [X31 + 0x50]
	0x039DA678 STP X20, X19, [X31 + 0x60]
	0x039DA67C ADRP X26, 0xA07000
	0x039DA680 LDRB W8, [X26 + 0xD6F]
	0x039DA684 MOV W19, W6
	0x039DA688 MOV W23, W5
	0x039DA68C MOV W25, W4
	0x039DA690 MOV X20, X3
	0x039DA694 MOV X24, X2
	0x039DA698 MOV X22, X1
	0x039DA69C MOV X21, X0
	0x039DA6A0 TBNZ X8, 0x0, 0x39DA6D0
	0x039DA6A4 ADRP X0, 0x741000
	0x039DA6A8 LDR X0, [X0 + 0x8F8]
	0x039DA6AC BL 0x1C16CF4
	0x039DA6B0 ADRP X0, 0x743000
	0x039DA6B4 LDR X0, [X0 + 0x8B0]
	0x039DA6B8 BL 0x1C16CF4
	0x039DA6BC ADRP X0, 0x778000
	0x039DA6C0 LDR X0, [X0 + 0xFD0]
	0x039DA6C4 BL 0x1C16CF4
	0x039DA6C8 MOVZ W8, 0x1
	0x039DA6CC STRB W8, [X26 + 0xD6F]
	0x039DA6D0 ADDS W31, W19, 0x1
	0x039DA6D4 B.NE 0x39DA6EC
	0x039DA6D8 CBZ X20, 0x39DA82C
	0x039DA6DC MOV X0, X20
	0x039DA6E0 MOV X1, X31
	0x039DA6E4 BL 0x3C385F8
	0x039DA6E8 MOV W19, W0
	0x039DA6EC LDR X8, [X21]
	0x039DA6F0 MOV X0, X21
	0x039DA6F4 MOV W1, W19
	0x039DA6F8 MOV W2, W25
	0x039DA6FC LDP X9, X5, [X8 + 0x1B8]
	0x039DA700 MOV W3, W23
	0x039DA704 MOV X4, X24
	0x039DA708 BLR X9
	0x039DA70C MOV W23, W0
	0x039DA710 TBZ X0, 0x0, 0x39DA808
	0x039DA714 MOV X1, X20
	0x039DA718 BL 0x39D94C0
	0x039DA71C LDP S8, S9, [X24]
	0x039DA720 LDP S10, S11, [X24 + 0x8]
	0x039DA724 TBZ X0, 0x0, 0x39DA784
	0x039DA728 ADRP X24, 0x778000
	0x039DA72C LDR X24, [X24 + 0xFD0]
	0x039DA730 LDR X0, [X24]
	0x039DA734 LDR W8, [X0 + 0xE0]
	0x039DA738 CBNZ W8, 0x39DA744
	0x039DA73C BL 0x1C16DFC
	0x039DA740 LDR X0, [X24]
	0x039DA744 LDR X8, [X0 + 0xB8]
	0x039DA748 LDR X9, [X21]
	0x039DA74C MOVZ W3, 0x1
	0x039DA750 MOVN W4, 0x0
	0x039DA754 LDP S4, S5, [X8]
	0x039DA758 LDP S6, S7, [X8 + 0x8]
	0x039DA75C LDP X8, X5, [X9 + 0x178]
	0x039DA760 MOV X0, X21
	0x039DA764 MOV X1, X22
	0x039DA768 MOV V0.16B, V8.16B
	0x039DA76C MOV V1.16B, V9.16B
	0x039DA770 MOV V2.16B, V10.16B
	0x039DA774 MOV V3.16B, V11.16B
	0x039DA778 MOV X2, X20
	0x039DA77C BLR X8
	0x039DA780 B 0x39DA7B4
	0x039DA784 LDR X8, [X21]
	0x039DA788 MOVZ W3, 0x1
	0x039DA78C MOVN W4, 0x0
	0x039DA790 MOV X0, X21
	0x039DA794 LDP X9, X5, [X8 + 0x198]
	0x039DA798 MOV X1, X22
	0x039DA79C MOV V0.16B, V8.16B
	0x039DA7A0 MOV V1.16B, V9.16B
	0x039DA7A4 MOV V2.16B, V10.16B
	0x039DA7A8 MOV V3.16B, V11.16B
	0x039DA7AC MOV X2, X20
	0x039DA7B0 BLR X9
	0x039DA7B4 MOVZ W2, 0x1
	0x039DA7B8 MOV X0, X21
	0x039DA7BC MOV W1, W19
	0x039DA7C0 BL 0x39DA0DC
	0x039DA7C4 ADRP X8, 0x741000
	0x039DA7C8 LDR X8, [X8 + 0x8F8]
	0x039DA7CC LDR X21, [X21 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xA08000
	011 Move W8, [X21+3433]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x77A000
	019 Move X0, [X0+144]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3433], W8
	023 Compare X20, 0
	024 JumpIfEqual {165}
	025 Move X8, [X20]
	026 Move X22, 0x77A000
	027 Move X0, X20
	028 Move X9, [X8+376]
	029 Move X1, [X8+384]
	030 Move X22, [X22+144]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X22]
	033 Move W21, W0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move W0, W21
	040 Move X1, X31
	041 Call GraphicsFormatUtility.GetComponentCount, X0
	042 Compare X19, 0
	043 JumpIfEqual {165}
	044 Move X8, [X19]
	045 Move W21, W0
	046 Move X0, X19
	047 Move X9, [X8+376]
	048 Move X1, [X8+384]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X1, X31
	051 Call GraphicsFormatUtility.GetComponentCount, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X8, [X20]
	056 Move X0, X20
	057 Move X9, [X8+376]
	058 Move X1, [X8+384]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X22]
	061 Move W21, W0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move W0, W21
	068 Move X1, X31
	069 Call GraphicsFormatUtility.GetSwizzleA, X0
	070 Move X8, [X20]
	071 Move W21, W0
	072 Move X0, X20
	073 Move X9, [X8+376]
	074 Move X1, [X8+384]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X1, X31
	077 Call GraphicsFormatUtility.GetSwizzleB, X0
	078 Move X8, [X20]
	079 Move W22, W0
	080 Move X0, X20
	081 Move X9, [X8+376]
	082 Move X1, [X8+384]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X1, X31
	085 Call GraphicsFormatUtility.GetSwizzleG, X0
	086 Move X8, [X20]
	087 Move W23, W0
	088 Move X0, X20
	089 Move X9, [X8+376]
	090 Move X1, [X8+384]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X1, X31
	093 Call GraphicsFormatUtility.GetSwizzleR, X0
	094 Move X8, [X19]
	095 Move W20, W0
	096 Move X0, X19
	097 Move X9, [X8+376]
	098 Move X1, [X8+384]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X1, X31
	101 Call GraphicsFormatUtility.GetSwizzleA, X0
	102 Move X8, [X19]
	103 Move W24, W0
	104 Move X0, X19
	105 Move X9, [X8+376]
	106 Move X1, [X8+384]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X1, X31
	109 Call GraphicsFormatUtility.GetSwizzleB, X0
	110 Move X8, [X19]
	111 Move W25, W0
	112 Move X0, X19
	113 Move X9, [X8+376]
	114 Move X1, [X8+384]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X1, X31
	117 Call GraphicsFormatUtility.GetSwizzleG, X0
	118 Move X8, [X19]
	119 Move W26, W0
	120 Move X0, X19
	121 Move X9, [X8+376]
	122 Move X1, [X8+384]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X1, X31
	125 Call GraphicsFormatUtility.GetSwizzleR, X0
	126 And W8, W24, 7
	127 Move W9, 0x1000000
	128 And W10, W25, 7
	129 Move W11, 0x10000
	130 And W13, W21, 7
	131 And W15, W22, 7
	132 And W12, W26, 7
	133 NotImplemented "Instruction LSLV not yet implemented."
	134 NotImplemented "Instruction LSLV not yet implemented."
	135 Move W13, 256
	136 NotImplemented "Instruction LSLV not yet implemented."
	137 NotImplemented "Instruction LSLV not yet implemented."
	138 And W15, W23, 7
	139 And W14, W0, 7
	140 Move W0, 1
	141 And W16, W20, 7
	142 NotImplemented "Instruction LSLV not yet implemented."
	143 NotImplemented "Instruction LSLV not yet implemented."
	144 Or W8, W10, W8
	145 Or W9, W11, W9
	146 NotImplemented "Instruction LSLV not yet implemented."
	147 NotImplemented "Instruction LSLV not yet implemented."
	148 Or W8, W8, W12
	149 Or W9, W9, W13
	150 Or W8, W8, W14
	151 Or W9, W9, W15
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move W0, W31
	154 Move W0, 1
	155 Move X20, [X31+64]
	156 Move X19, [X31+72]
	157 Move X22, [X31+48]
	158 Move X21, [X31+56]
	159 Move X24, [X31+32]
	160 Move X23, [X31+40]
	161 Move X26, [X31+16]
	162 Move X25, [X31+24]
	163 Move X30, [X31+80]
	164 Return X0
	165 Call 0x1C17F20

Method: System.Void Blit2DTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips, UnityEngine.Rendering.Texture2DAtlas/BlitType blitType)

Disassembly:
	0x039DA7D0 LDR X0, [X8]
	0x039DA7D4 LDR W8, [X0 + 0xE0]
	0x039DA7D8 CBNZ W8, 0x39DA7E0
	0x039DA7DC BL 0x1C16DFC
	0x039DA7E0 MOV X0, X20
	0x039DA7E4 BL 0x39DA35C
	0x039DA7E8 CBZ X21, 0x39DA82C
	0x039DA7EC ADRP X8, 0x743000
	0x039DA7F0 LDR X8, [X8 + 0x8B0]
	0x039DA7F4 MOV W2, W0
	0x039DA7F8 MOV X0, X21
	0x039DA7FC MOV W1, W19
	0x039DA800 LDR X3, [X8]
	0x039DA804 BL 0x2A0A330
	0x039DA808 AND W0, W23, 0x1
	0x039DA80C LDP X20, X19, [X31 + 0x60]
	0x039DA810 LDP X22, X21, [X31 + 0x50]
	0x039DA814 LDP X24, X23, [X31 + 0x40]
	0x039DA818 LDP X26, X25, [X31 + 0x30]
	0x039DA81C LDR X30, [X31 + 0x20]
	0x039DA820 LDP D9, D8, [X31 + 0x10]
	0x039DA824 LDP D11, D10, [X31], #0x70
	0x039DA828 RET
	0x039DA82C BL 0x1C16F20
	0x039DA830 STR X30, [X31 - 0x30]!
	0x039DA834 STP X22, X21, [X31 + 0x10]
	0x039DA838 STP X20, X19, [X31 + 0x20]
	0x039DA83C CBZ X1, 0x39DA888
	0x039DA840 MOV X22, X0
	0x039DA844 MOV X0, X1
	0x039DA848 MOV X1, X31
	0x039DA84C MOV X19, X4
	0x039DA850 MOV W20, W3
	0x039DA854 MOV W21, W2
	0x039DA858 BL 0x3C385F8
	0x039DA85C LDR X8, [X22]
	0x039DA860 MOV W1, W0
	0x039DA864 MOV X0, X22
	0x039DA868 MOV W2, W21
	0x039DA86C LDP X6, X5, [X8 + 0x1B8]
	0x039DA870 MOV W3, W20
	0x039DA874 MOV X4, X19
	0x039DA878 LDP X20, X19, [X31 + 0x20]
	0x039DA87C LDP X22, X21, [X31 + 0x10]
	0x039DA880 LDR X30, [X31], #0x30
	0x039DA884 BR X6
	0x039DA888 BL 0x1C16F20
	0x039DA88C SUB X31, X31, 0x80
	0x039DA890 STR X30, [X31 + 0x40]
	0x039DA894 STP X24, X23, [X31 + 0x50]
	0x039DA898 STP X22, X21, [X31 + 0x60]
	0x039DA89C STP X20, X19, [X31 + 0x70]
	0x039DA8A0 ADRP X22, 0xA07000
	0x039DA8A4 LDRB W8, [X22 + 0xD70]
	0x039DA8A8 MOV X21, X4
	0x039DA8AC MOV W23, W3
	0x039DA8B0 MOV W24, W2
	0x039DA8B4 MOV W19, W1
	0x039DA8B8 MOV X20, X0
	0x039DA8BC TBNZ X8, 0x0, 0x39DA8EC
	0x039DA8C0 ADRP X0, 0x743000
	0x039DA8C4 LDR X0, [X0 + 0x8B0]
	0x039DA8C8 BL 0x1C16CF4
	0x039DA8CC ADRP X0, 0x779000
	0x039DA8D0 LDR X0, [X0 + 0x1B8]
	0x039DA8D4 BL 0x1C16CF4
	0x039DA8D8 ADRP X0, 0x779000
	0x039DA8DC LDR X0, [X0 + 0x1C0]
	0x039DA8E0 BL 0x1C16CF4
	0x039DA8E4 MOVZ W8, 0x1
	0x039DA8E8 STRB W8, [X22 + 0xD70]
	0x039DA8EC ADRP X22, 0x9FE000
	0x039DA8F0 LDRB W8, [X22 + 0xE5A]
	0x039DA8F4 CBNZ W8, 0x39DA90C
	0x039DA8F8 ADRP X0, 0x720000
	0x039DA8FC LDR X0, [X0 + 0x9A0]
	0x039DA900 BL 0x1C16CF4
	0x039DA904 MOVZ W8, 0x1
	0x039DA908 STRB W8, [X22 + 0xE5A]
	0x039DA90C ADRP X8, 0x720000
	0x039DA910 LDR X8, [X8 + 0x9A0]
	0x039DA914 LDR X8, [X8]
	0x039DA918 LDR X8, [X8 + 0xB8]
	0x039DA91C LDR V0, [X8]
	0x039DA920 STR V0, [X21]
	0x039DA924 LDR X0, [X20 + 0x28]
	0x039DA928 CBZ X0, 0x39DAA10
	0x039DA92C MOV X1, X21
	0x039DA930 MOV W2, W24
	0x039DA934 MOV W3, W23
	0x039DA938 BL 0x39D88B8
	0x039DA93C MOV W22, W0
	0x039DA940 TBZ X0, 0x0, 0x39DA9F4
	0x039DA944 LDR V0, [X20 + 0x18]
	0x039DA948 LDR V2, [X21]
	0x039DA94C FMOV V1.2S, 0x0
	0x039DA950 ADRP X8, 0x779000
	0x039DA954 UNIMPLEMENTED
	0x039DA958 LDR X8, [X8 + 0x1C0]
	0x00000000 INVALID
	0x039DA960 MOV V0.D[1], V0.D[0]
	0x00000000 INVALID
	0x039DA968 STR V0, [X21]
	0x039DA96C LDR X2, [X8]
	0x039DA970 LDR X21, [X20 + 0x30]
	0x039DA974 MOV W1, W24
	0x039DA978 BFM X1, X23, 0x20, 0x1F
	0x039DA97C MOV S1, V0.S[1]
	0x039DA980 MOV S2, V0.S[2]
	0x039DA984 MOV S3, V0.S[3]
	0x039DA988 ADD X0, X31, 0x8
	0x039DA98C STP X31, X31, [X31 + 0x8]
	0x039DA990 STR X31, [X31 + 0x18]
	0x039DA994 BL 0x27B3C94
	0x039DA998 CBZ X21, 0x39DAA10
	0x039DA99C ADRP X8, 0x779000
	0x039DA9A0 LDR X8, [X8 + 0x1B8]
	0x039DA9A4 LDUR V0, [X31 + 0x8]
	0x039DA9A8 LDR X9, [X31 + 0x18]
	0x039DA9AC ADD X2, X31, 0x20
	0x039DA9B0 LDR X3, [X8]
	0x039DA9B4 MOV X0, X21
	0x039DA9B8 MOV W1, W19
	0x039DA9BC STR V0, [X31 + 0x2]
	0x039DA9C0 STR X9, [X31 + 0x30]
	0x039DA9C4 BL 0x29FAF9C
	0x039DA9C8 MOV X0, X20
	0x039DA9CC MOV W1, W19
	0x039DA9D0 BL 0x39DA14C
	0x039DA9D4 LDR X0, [X20 + 0x40]
	0x039DA9D8 CBZ X0, 0x39DAA10
	0x039DA9DC ADRP X8, 0x743000
	0x039DA9E0 LDR X8, [X8 + 0x8B0]
	0x039DA9E4 MOVN W2, 0x0
	0x039DA9E8 MOV W1, W19
	0x039DA9EC LDR X3, [X8]
	0x039DA9F0 BL 0x2A0A330
	0x039DA9F4 AND W0, W22, 0x1
	0x039DA9F8 LDP X20, X19, [X31 + 0x70]
	0x039DA9FC LDP X22, X21, [X31 + 0x60]
	0x039DAA00 LDP X24, X23, [X31 + 0x50]
	0x039DAA04 LDR X30, [X31 + 0x40]
	0x039DAA08 ADD X31, X31, 0x80
	0x039DAA0C RET
	0x039DAA10 BL 0x1C16F20
	0x039DAA14 STR X30, [X31 - 0x30]!
	0x039DAA18 STP X22, X21, [X31 + 0x10]
	0x039DAA1C STP X20, X19, [X31 + 0x20]
	0x039DAA20 ADRP X21, 0xA07000
	0x039DAA24 ADRP X22, 0x741000
	0x039DAA28 LDRB W8, [X21 + 0xD71]
	0x039DAA2C LDR X22, [X22 + 0x8F8]
	0x039DAA30 MOV X19, X2
	0x039DAA34 MOV X20, X1
	0x039DAA38 TBNZ X8, 0x0, 0x39DAA50
	0x039DAA3C ADRP X0, 0x741000
	0x039DAA40 LDR X0, [X0 + 0x8F8]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X29
	011 Move [X31+208], X30
	012 Move [X31+216], X27
	013 Move [X31+224], X26
	014 Move [X31+232], X25
	015 Move [X31+240], X24
	016 Move [X31+248], X23
	017 Move [X31+256], X22
	018 Move [X31+264], X21
	019 Move [X31+272], X20
	020 Move [X31+280], X19
	021 Move X24, 0xA08000
	022 Move W8, [X24+3434]
	023 Move W19, W4
	024 Move W23, W3
	025 Move V8, V7
	026 Move V9, V6
	027 Move V10, V5
	028 Move V11, V4
	029 Move X20, X2
	030 Move V12, V3
	031 Move V13, V2
	032 Move V14, V1
	033 Move V15, V0
	034 Move X21, X1
	035 Move X22, X0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {45}
	040 Move X0, 0x779000
	041 Move X0, [X0+3624]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X24+3434], W8
	045 Compare X20, 0
	046 JumpIfEqual {183}
	047 Move X8, [X20]
	048 Move X0, X20
	049 Move X9, [X8+392]
	050 Move X1, [X8+400]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X20]
	053 Move W24, W0
	054 Move X0, X20
	055 Move X9, [X8+424]
	056 Move X1, [X8+432]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move W2, W0
	059 Move X0, X22
	060 Move W1, W24
	061 Call Texture2DAtlas.GetTextureMipmapCount, X0, X1, X2
	062 And W31, W23, 1
	063 NotImplemented "Instruction CSINC not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X25, 0x779000
	066 Move X25, [X25+3624]
	067 Move X27, -48504832
	068 Move W23, W31
	069 Move W26, W19
	070 Add X27, X27, 2752
	071 Move X0, [X22+16]
	072 Add X8, X31, 40
	073 Move X1, X31
	074 Call RTHandle.op_Implicit, X0
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Move X8, [X31+72]
	078 Move [X31+80], V0
	079 Move [X31+88], V1
	080 Move [X31+112], X8
	081 Compare X21, 0
	082 JumpIfEqual {183}
	083 Move V0, [X31+80]
	084 Move V1, [X31+96]
	085 Move X8, [X31+112]
	086 Add X1, X31, 0
	087 Move X0, X21
	088 Move W2, W23
	089 Move X3, X31
	090 Move [X31], V0
	091 Move [X31+8], V1
	092 Move [X31+32], X8
	093 Call CommandBuffer.SetRenderTarget, X0, X1, X2
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction ADR not yet implemented."
	096 Move W9, [X27]
	097 Add X8, X8, X9
	098 CallNoReturn X8
	099 Move X0, [X25]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move W3, 1
	105 Move X0, X21
	106 Move X1, X20
	107 Move V0, V11
	108 Move V1, V10
	109 Move V2, V9
	110 Move V3, V8
	111 Move V4, V15
	112 Move V5, V14
	113 Move V6, V13
	114 Move V7, V12
	115 Move W2, W23
	116 Call Blitter.BlitQuad, X0, X1, X2, X3, X4, X5
	117 Move X0, [X25]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X21
	123 Move X1, X20
	124 Move V0, V15
	125 Move V1, V14
	126 Move V2, V13
	127 Move V3, V12
	128 Move W2, W23
	129 Call Blitter.BlitCubeToOctahedral2DQuad, X0, X1, X2, X3
	130 Move X0, [X25]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X21
	136 Move X1, X20
	137 Move V0, V11
	138 Move V1, V10
	139 Move V2, V9
	140 Move V3, V8
	141 Move V4, V15
	142 Move V5, V14
	143 Move V6, V13
	144 Move V7, V12
	145 Move W2, W23
	146 Call Blitter.BlitQuadSingleChannel, X0, X1, X2, X3, X4
	147 Move X0, [X25]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X0, X21
	153 Move X1, X20
	154 Move V0, V15
	155 Move V1, V14
	156 Move V2, V13
	157 Move V3, V12
	158 Move W2, W23
	159 Call Blitter.BlitCubeToOctahedral2DQuadSingleChannel, X0, X1, X2, X3
	160 Add W23, W23, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X20, [X31+272]
	163 Move X19, [X31+280]
	164 Move X22, [X31+256]
	165 Move X21, [X31+264]
	166 Move X24, [X31+240]
	167 Move X23, [X31+248]
	168 Move X26, [X31+224]
	169 Move X25, [X31+232]
	170 Move X30, [X31+208]
	171 Move X27, [X31+216]
	172 Move X29, [X31+192]
	173 Move D9, [X31+176]
	174 Move D8, [X31+184]
	175 Move D11, [X31+160]
	176 Move D10, [X31+168]
	177 Move D13, [X31+144]
	178 Move D12, [X31+152]
	179 Move D15, [X31+128]
	180 Move D14, [X31+136]
	181 Add X31, X31, 288
	182 Return 
	183 Call 0x1C17F20

Method: System.Void MarkGPUTextureValid(System.Int32 instanceId, System.Boolean mipAreValid = False)

Disassembly:
	0x039DB0DC LDRSW X8, [X31 + 0x1C]
	0x039DB0E0 MOV W9, W0
	0x039DB0E4 CMP X9, X8
	0x039DB0E8 B.NE 0x39DB270
	0x039DB0EC LDR X0, [X26]
	0x039DB0F0 LDR W8, [X0 + 0xE0]
	0x039DB0F4 CBNZ W8, 0x39DB0FC
	0x039DB0F8 BL 0x1C16DFC
	0x039DB0FC MOV X0, X22
	0x039DB100 MOV X1, X31
	0x039DB104 MOV X2, X31
	0x039DB108 BL 0x3C354F8
	0x039DB10C TBZ X0, 0x0, 0x39DB130
	0x039DB110 CBZ X22, 0x39DB2BC
	0x039DB114 MOV X0, X22
	0x039DB118 MOV X1, X31
	0x039DB11C BL 0x3C1AD38
	0x039DB120 LDRSW X8, [X31 + 0x1C]
	0x039DB124 MOV W9, W0
	0x039DB128 CMP X9, X8
	0x039DB12C B.NE 0x39DB220
	0x039DB130 LDR X0, [X26]
	0x039DB134 LDR W8, [X0 + 0xE0]
	0x039DB138 CBNZ W8, 0x39DB140
	0x039DB13C BL 0x1C16DFC
	0x039DB140 MOV X0, X21
	0x039DB144 MOV X1, X31
	0x039DB148 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA07000
	007 Move W8, [X22+3435]
	008 Move W20, W2
	009 Move W19, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x743000
	016 Move X0, [X0+2224]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3435], W8
	020 Move X0, [X21+56]
	021 Compare X0, 0
	022 JumpIfEqual {37}
	023 Move X8, 0x743000
	024 Move X8, [X8+2224]
	025 And W31, W20, 1
	026 Move W1, W19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W8, 1
	033 NotImplemented "Instruction CINC not yet implemented."
	034 Move X30, [X31+48]
	035 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	036 Return 
	037 Call 0x1C17F20

Method: System.Void MarkGPUTextureInvalid(System.Int32 instanceId)

Disassembly:
	0x039DB14C BL 0x3C354F8
	0x039DB150 TBZ X0, 0x0, 0x39DB1A0
	0x039DB154 CBZ X21, 0x39DB2BC
	0x039DB158 MOV X0, X21
	0x039DB15C MOV X1, X31
	0x039DB160 BL 0x3C1AD38
	0x039DB164 LDRSW X8, [X31 + 0x1C]
	0x039DB168 MOV W9, W0
	0x039DB16C CMP X9, X8
	0x039DB170 B.EQ 0x39DB1A0
	0x039DB174 LDR X20, [X20 + 0x38]
	0x039DB178 MOV X0, X21
	0x039DB17C B 0x39DB228
	0x039DB180 LDR X0, [X20 + 0x38]
	0x039DB184 CBZ X0, 0x39DB2BC
	0x039DB188 ADRP X8, 0x742000
	0x039DB18C LDR X8, [X8 + 0x8B0]
	0x039DB190 MOV W1, W19
	0x039DB194 MOV W2, W24
	0x039DB198 LDR X3, [X8]
	0x039DB19C BL 0x2A0A330
	0x039DB1A0 MOV W0, W31
	0x039DB1A4 B 0x39DB254

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA07000
	006 Move W8, [X21+3436]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x743000
	014 Move X0, [X0+2224]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3436], W8
	018 Move X0, [X20+56]
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X8, 0x743000
	022 Move X8, [X8+2224]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W2, W31
	027 Move X3, [X8]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	031 Return 
	032 Call 0x1C17F20

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips = True, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039DB1A8 LDR X0, [X20 + 0x40]
	0x039DB1AC CBZ X0, 0x39DB2BC
	0x039DB1B0 LDR X3, [X25]
	0x039DB1B4 ADD X2, X31, 0x18
	0x039DB1B8 MOV W1, W19
	0x039DB1BC BL 0x2A0BC68
	0x039DB1C0 LDR W8, [X31 + 0x18]
	0x039DB1C4 CMP W8, W24
	0x039DB1C8 B.EQ 0x39DB1EC
	0x039DB1CC TBZ X0, 0x0, 0x39DB1EC
	0x039DB1D0 LDR X0, [X20 + 0x40]
	0x039DB1D4 CBZ X0, 0x39DB2BC
	0x039DB1D8 ADRP X8, 0x742000
	0x039DB1DC LDR X8, [X8 + 0x8B0]
	0x039DB1E0 MOV W1, W19
	0x039DB1E4 MOV W2, W19
	0x039DB1E8 B 0x39DB248
	0x039DB1EC LDR X0, [X20 + 0x38]
	0x039DB1F0 CBZ X0, 0x39DB2BC
	0x039DB1F4 LDR X3, [X25]
	0x039DB1F8 ADD X2, X31, 0xC
	0x039DB1FC MOV W1, W19
	0x039DB200 BL 0x2A0BC68
	0x039DB204 TBZ X0, 0x0, 0x39DB1A0
	0x039DB208 LDR W8, [X31 + 0xC]
	0x039DB20C CBZ W8, 0x39DB250
	0x039DB210 CMP W8, 0x1
	0x039DB214 CSET W8, EQ
	0x039DB218 AND W0, W8, W23, 0x0
	0x039DB21C B 0x39DB254
	0x039DB220 LDR X20, [X20 + 0x38]
	0x039DB224 MOV X0, X22
	0x039DB228 MOV X1, X31
	0x039DB22C BL 0x3C1AD38
	0x039DB230 CBZ X20, 0x39DB2BC
	0x039DB234 ADRP X8, 0x742000
	0x039DB238 LDR X8, [X8 + 0x8B0]
	0x039DB23C MOV W2, W0
	0x039DB240 MOV X0, X20
	0x039DB244 MOV W1, W19
	0x039DB248 LDR X3, [X8]
	0x039DB24C BL 0x2A0A330
	0x039DB250 MOVZ W0, 0x1
	0x039DB254 LDP X20, X19, [X31 + 0x50]
	0x039DB258 LDP X22, X21, [X31 + 0x40]
	0x039DB25C LDP X24, X23, [X31 + 0x30]
	0x039DB260 LDP X26, X25, [X31 + 0x20]
	0x039DB264 LDR X30, [X31 + 0x10]
	0x039DB268 ADD X31, X31, 0x60
	0x039DB26C RET
	0x039DB270 LDR X20, [X20 + 0x38]
	0x039DB274 MOV X0, X22
	0x039DB278 MOV X1, X31
	0x039DB27C BL 0x3C1AD38
	0x039DB280 MOV W22, W0
	0x039DB284 MOV X0, X21
	0x039DB288 MOV X1, X31
	0x039DB28C BL 0x3C1AD38
	0x039DB290 LDR X8, [X25]
	0x039DB294 MOV W21, W0
	0x039DB298 LDR W9, [X8 + 0xE0]
	0x039DB29C CBNZ W9, 0x39DB2A8
	0x039DB2A0 MOV X0, X8
	0x039DB2A4 BL 0x1C16DFC
	0x039DB2A8 MOV W0, W22
	0x039DB2AC MOV W1, W21
	0x039DB2B0 MOV X2, X31
	0x039DB2B4 BL 0x337EEEC
	0x039DB2B8 CBNZ X20, 0x39DB234
	0x039DB2BC BL 0x1C16F20
	0x039DB2C0 STP X30, X23, [X31 - 0x30]!
	0x039DB2C4 STP X22, X21, [X31 + 0x10]
	0x039DB2C8 STP X20, X19, [X31 + 0x20]
	0x039DB2CC MOV X20, X2
	0x039DB2D0 MOV X21, X1
	0x039DB2D4 MOV X1, X2
	0x039DB2D8 MOV X2, X3
	0x039DB2DC MOV X19, X3
	0x039DB2E0 MOV X22, X0
	0x039DB2E4 BL 0x39DAB90
	0x039DB2E8 TBZ X0, 0x0, 0x39DB300
	0x039DB2EC LDP X20, X19, [X31 + 0x20]
	0x039DB2F0 LDP X22, X21, [X31 + 0x10]
	0x039DB2F4 MOVZ W0, 0x1
	0x039DB2F8 LDP X30, X23, [X31], #0x30
	0x039DB2FC RET
	0x039DB300 CBZ X19, 0x39DB35C
	0x039DB304 LDR X8, [X19]
	0x039DB308 MOV X0, X19
	0x039DB30C LDP X9, X1, [X8 + 0x188]
	0x039DB310 BLR X9
	0x039DB314 LDR X8, [X19]
	0x039DB318 MOV W23, W0
	0x039DB31C MOV X0, X19
	0x039DB320 LDP X9, X1, [X8 + 0x1A8]
	0x039DB324 BLR X9
	0x039DB328 LDR X8, [X22]
	0x039DB32C MOV W5, W0
	0x039DB330 MOV X0, X22
	0x039DB334 MOV X1, X21
	0x039DB338 LDP X9, X7, [X8 + 0x1A8]
	0x039DB33C MOV X2, X20
	0x039DB340 MOV X3, X19

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0xA07000
	017 Move W8, [X24+3437]
	018 Move W19, W4
	019 Move W22, W3
	020 Move V8, V7
	021 Move V9, V6
	022 Move V10, V5
	023 Move V11, V4
	024 Move X20, X2
	025 Move V12, V3
	026 Move V13, V2
	027 Move V14, V1
	028 Move V15, V0
	029 Move X23, X1
	030 Move X21, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {43}
	035 Move X0, 0x741000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move X0, 0x743000
	039 Move X0, [X0+2224]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X24+3437], W8
	043 Move X1, X20
	044 Call Texture2DAtlas.Is2D, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {118}
	049 Move X8, [X21+16]
	050 Compare X8, 0
	051 JumpIfEqual {134}
	052 Move X2, [X8+24]
	053 Move X1, X20
	054 Call Texture2DAtlas.IsSingleChannelBlit, X0, X1, X2
	055 And W31, W0, 1
	056 Move W8, 2
	057 And W22, W22, 1
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move X0, X21
	060 Move X1, X23
	061 Move V0, V15
	062 Move V1, V14
	063 Move V2, V13
	064 Move V3, V12
	065 Move X2, X20
	066 Move V4, V11
	067 Move V5, V10
	068 Move V6, V9
	069 Move V7, V8
	070 Move W3, W22
	071 Call Texture2DAtlas.Blit2DTexture, X0, X1, X2, X3, X4, X5, X6
	072 Add W31, W19, 1
	073 Compare X20, 0
	074 JumpIfEqual {134}
	075 Move X0, X20
	076 Move X1, X31
	077 Call Object.GetInstanceID, X0
	078 Move W19, W0
	079 Move X0, X21
	080 Move W1, W19
	081 Move W2, W22
	082 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	083 Move X8, 0x741000
	084 Move X8, [X8+2296]
	085 Move X21, [X21+64]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X20
	092 Call CoreUtils.GetTextureHash, X0
	093 Compare X21, 0
	094 JumpIfEqual {134}
	095 Move X8, 0x743000
	096 Move X8, [X8+2224]
	097 Move W2, W0
	098 Move X0, X21
	099 Move W1, W19
	100 Move X3, [X8]
	101 Move X20, [X31+112]
	102 Move X19, [X31+120]
	103 Move X22, [X31+96]
	104 Move X21, [X31+104]
	105 Move X24, [X31+80]
	106 Move X23, [X31+88]
	107 Move X30, [X31+64]
	108 Move D9, [X31+48]
	109 Move D8, [X31+56]
	110 Move D11, [X31+32]
	111 Move D10, [X31+40]
	112 Move D13, [X31+16]
	113 Move D12, [X31+24]
	114 Move D15, [X31+128]
	115 Move D14, [X31+136]
	116 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	117 Return 
	118 Move X20, [X31+112]
	119 Move X19, [X31+120]
	120 Move X22, [X31+96]
	121 Move X21, [X31+104]
	122 Move X24, [X31+80]
	123 Move X23, [X31+88]
	124 Move X30, [X31+64]
	125 Move D9, [X31+48]
	126 Move D8, [X31+56]
	127 Move D11, [X31+32]
	128 Move D10, [X31+40]
	129 Move D13, [X31+16]
	130 Move D12, [X31+24]
	131 Move D15, [X31+128]
	132 Move D14, [X31+136]
	133 Return 
	134 Call 0x1C17F20

Method: System.Void BlitOctahedralTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips = True, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039DB4D0 LDP D11, D10, [X31], #0x60
	0x039DB4D4 RET
	0x039DB4D8 BL 0x1C16F20
	0x039DB4DC STR X30, [X31 - 0x50]!

ISIL:
	001 Move X8, [X0]
	002 And W3, W3, 1
	003 Move X6, [X8+376]
	004 Move X5, [X8+384]
	005 CallNoReturn X6

Method: System.Void BlitCubeTexture2D(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, System.Boolean blitMips = True, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039DB4E0 STP X26, X25, [X31 + 0x10]
	0x039DB4E4 STP X24, X23, [X31 + 0x20]
	0x039DB4E8 STP X22, X21, [X31 + 0x30]
	0x039DB4EC STP X20, X19, [X31 + 0x40]
	0x039DB4F0 ADRP X26, 0xA06000
	0x039DB4F4 ADRP X25, 0x777000
	0x039DB4F8 LDRB W8, [X26 + 0xD76]
	0x039DB4FC LDR X25, [X25 + 0xFD0]
	0x039DB500 MOV W23, W5
	0x039DB504 MOV W24, W4
	0x039DB508 MOV X19, X3
	0x039DB50C MOV X20, X2
	0x039DB510 MOV X21, X1
	0x039DB514 MOV X22, X0
	0x039DB518 TBNZ X8, 0x0, 0x39DB530
	0x039DB51C ADRP X0, 0x777000
	0x039DB520 LDR X0, [X0 + 0xFD0]
	0x039DB524 BL 0x1C16CF4
	0x039DB528 MOVZ W8, 0x1
	0x039DB52C STRB W8, [X26 + 0xD76]
	0x039DB530 LDR X0, [X25]
	0x039DB534 LDR W8, [X0 + 0xE0]
	0x039DB538 CBNZ W8, 0x39DB544
	0x039DB53C BL 0x1C16DFC
	0x039DB540 LDR X0, [X25]
	0x039DB544 LDR X8, [X0 + 0xB8]
	0x039DB548 LDR X9, [X22]
	0x039DB54C AND W5, W24, 0x1
	0x039DB550 AND W6, W23, 0x1
	0x039DB554 LDP S0, S1, [X8]
	0x039DB558 LDP S2, S3, [X8 + 0x8]
	0x039DB55C LDP X8, X7, [X9 + 0x1F8]
	0x039DB560 MOV X0, X22
	0x039DB564 MOV X1, X21
	0x039DB568 MOV X2, X20
	0x039DB56C MOV X3, X20
	0x039DB570 MOV X4, X19
	0x039DB574 LDP X20, X19, [X31 + 0x40]
	0x039DB578 LDP X22, X21, [X31 + 0x30]
	0x039DB57C LDP X24, X23, [X31 + 0x20]
	0x039DB580 LDP X26, X25, [X31 + 0x10]
	0x039DB584 LDR X30, [X31], #0x50
	0x039DB588 BR X8
	0x039DB58C SUB X31, X31, 0x90
	0x039DB590 STP X30, X25, [X31 + 0x50]
	0x039DB594 STP X24, X23, [X31 + 0x60]
	0x039DB598 STP X22, X21, [X31 + 0x70]
	0x039DB59C STP X20, X19, [X31 + 0x80]
	0x039DB5A0 ADRP X25, 0xA06000
	0x039DB5A4 LDRB W8, [X25 + 0xD77]
	0x039DB5A8 MOV W21, W5
	0x039DB5AC MOV W23, W4
	0x039DB5B0 MOV W19, W3
	0x039DB5B4 MOV X20, X2
	0x039DB5B8 MOV X24, X1
	0x039DB5BC MOV X22, X0
	0x039DB5C0 TBNZ X8, 0x0, 0x39DB5F0
	0x039DB5C4 ADRP X0, 0x778000
	0x039DB5C8 LDR X0, [X0 + 0x1D0]
	0x039DB5CC BL 0x1C16CF4
	0x039DB5D0 ADRP X0, 0x778000
	0x039DB5D4 LDR X0, [X0 + 0x1C8]
	0x039DB5D8 BL 0x1C16CF4
	0x039DB5DC ADRP X0, 0x778000
	0x039DB5E0 LDR X0, [X0 + 0x1C0]
	0x039DB5E4 BL 0x1C16CF4
	0x039DB5E8 MOVZ W8, 0x1
	0x039DB5EC STRB W8, [X25 + 0xD77]
	0x039DB5F0 STP X31, X31, [X31 + 0x18]
	0x039DB5F4 STR X31, [X31 + 0x28]
	0x039DB5F8 STRB W31, [X24]
	0x039DB5FC LDR X0, [X22 + 0x30]
	0x039DB600 CBZ X0, 0x39DB6F8
	0x039DB604 ADRP X8, 0x778000
	0x039DB608 LDR X8, [X8 + 0x1C8]
	0x039DB60C ADD X2, X31, 0x18
	0x039DB610 MOV W1, W19
	0x039DB614 LDR X3, [X8]
	0x039DB618 BL 0x29FCBA4
	0x039DB61C TBZ X0, 0x0, 0x39DB62C
	0x039DB620 LDUR V0, [X31 + 0x18]
	0x039DB624 STR V0, [X20]
	0x039DB628 B 0x39DB6D4
	0x039DB62C LDR X0, [X22 + 0x28]
	0x039DB630 CBZ X0, 0x39DB6F8
	0x039DB634 MOV X1, X20
	0x039DB638 MOV W2, W23
	0x039DB63C MOV W3, W21
	0x039DB640 BL 0x39D88B8
	0x039DB644 TBZ X0, 0x0, 0x39DB6DC
	0x039DB648 MOVZ W8, 0x1
	0x039DB64C STRB W8, [X24]
	0x039DB650 LDR V1, [X22 + 0x18]
	0x039DB654 ADRP X8, 0x778000
	0x039DB658 LDR X8, [X8 + 0x1C0]
	0x039DB65C LDR V2, [X20]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0xA07000
	013 Move W8, [X24+3438]
	014 Move W19, W4
	015 Move W23, W3
	016 Move X20, X2
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move X22, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x741000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move X0, 0x743000
	031 Move X0, [X0+2224]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+3438], W8
	035 Compare X20, 0
	036 JumpIfEqual {118}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+456]
	040 Move X1, [X8+464]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X21+16]
	044 Compare X8, 0
	045 JumpIfEqual {118}
	046 Move X2, [X8+24]
	047 Move X1, X20
	048 Call Texture2DAtlas.IsSingleChannelBlit, X0, X1, X2
	049 And W31, W0, 1
	050 Move W8, 3
	051 And W23, W23, 1
	052 NotImplemented "Instruction CSINC not yet implemented."
	053 Move S4, 1
	054 Move S5, 1
	055 Move S6, W31
	056 Move S7, W31
	057 Move X0, X21
	058 Move X1, X22
	059 Move V0, V11
	060 Move V1, V10
	061 Move V2, V9
	062 Move V3, V8
	063 Move X2, X20
	064 Move W3, W23
	065 Call Texture2DAtlas.Blit2DTexture, X0, X1, X2, X3, X4, X5, X6
	066 Add W31, W19, 1
	067 Move X0, X20
	068 Move X1, X31
	069 Call Object.GetInstanceID, X0
	070 Move W19, W0
	071 Move X0, X21
	072 Move W1, W19
	073 Move W2, W23
	074 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	075 Move X8, 0x741000
	076 Move X8, [X8+2296]
	077 Move X21, [X21+64]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Call CoreUtils.GetTextureHash, X0
	085 Compare X21, 0
	086 JumpIfEqual {118}
	087 Move X8, 0x743000
	088 Move X8, [X8+2224]
	089 Move W2, W0
	090 Move X0, X21
	091 Move W1, W19
	092 Move X3, [X8]
	093 Move X20, [X31+80]
	094 Move X19, [X31+88]
	095 Move X22, [X31+64]
	096 Move X21, [X31+72]
	097 Move X24, [X31+48]
	098 Move X23, [X31+56]
	099 Move X30, [X31+32]
	100 Move D9, [X31+16]
	101 Move D8, [X31+24]
	102 Move D11, [X31+96]
	103 Move D10, [X31+104]
	104 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	105 Return 
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X22, [X31+64]
	109 Move X21, [X31+72]
	110 Move X24, [X31+48]
	111 Move X23, [X31+56]
	112 Move X30, [X31+32]
	113 Move D9, [X31+16]
	114 Move D8, [X31+24]
	115 Move D11, [X31+96]
	116 Move D10, [X31+104]
	117 Return 
	118 Call 0x1C17F20

Method: System.Boolean AllocateTexture(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, System.Int32 width, System.Int32 height, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039DB660 FMOV V0.2S, 0x0
	0x039DB664 UNIMPLEMENTED
	0x00000000 INVALID
	0x039DB66C MOV V0.D[1], V0.D[0]
	0x00000000 INVALID
	0x039DB674 STR V0, [X20]
	0x039DB678 LDR X2, [X8]
	0x039DB67C LDR X20, [X22 + 0x30]
	0x039DB680 MOV W1, W23
	0x039DB684 BFM X1, X21, 0x20, 0x1F
	0x039DB688 MOV S1, V0.S[1]
	0x039DB68C MOV S2, V0.S[2]
	0x039DB690 MOV S3, V0.S[3]
	0x039DB694 ADD X0, X31, 0x0
	0x039DB698 STP X31, X31, [X31]
	0x039DB69C STR X31, [X31 + 0x10]
	0x039DB6A0 BL 0x27B3C94
	0x039DB6A4 CBZ X20, 0x39DB6F8
	0x039DB6A8 ADRP X8, 0x778000
	0x039DB6AC LDR X8, [X8 + 0x1D0]
	0x039DB6B0 LDR V0, [X31]
	0x039DB6B4 LDR X9, [X31 + 0x10]
	0x039DB6B8 ADD X2, X31, 0x30
	0x039DB6BC LDR X3, [X8]
	0x039DB6C0 MOV X0, X20
	0x039DB6C4 MOV W1, W19
	0x039DB6C8 STR V0, [X31 + 0x3]
	0x039DB6CC STR X9, [X31 + 0x40]
	0x039DB6D0 BL 0x29FAFE0
	0x039DB6D4 MOVZ W0, 0x1
	0x039DB6D8 B 0x39DB6E0
	0x039DB6DC MOV W0, W31
	0x039DB6E0 LDP X20, X19, [X31 + 0x80]
	0x039DB6E4 LDP X22, X21, [X31 + 0x70]
	0x039DB6E8 LDP X24, X23, [X31 + 0x60]
	0x039DB6EC LDP X30, X25, [X31 + 0x50]
	0x039DB6F0 ADD X31, X31, 0x90
	0x039DB6F4 RET
	0x039DB6F8 BL 0x1C16F20
	0x039DB6FC STR X30, [X31 - 0x20]!
	0x039DB700 STP X20, X19, [X31 + 0x10]
	0x039DB704 ADRP X20, 0xA06000
	0x039DB708 ADRP X19, 0x777000
	0x039DB70C LDRB W8, [X20 + 0xD78]
	0x039DB710 LDR X19, [X19 + 0xFD0]
	0x039DB714 TBNZ X8, 0x0, 0x39DB72C
	0x039DB718 ADRP X0, 0x777000
	0x039DB71C LDR X0, [X0 + 0xFD0]
	0x039DB720 BL 0x1C16CF4
	0x039DB724 MOVZ W8, 0x1
	0x039DB728 STRB W8, [X20 + 0xD78]
	0x039DB72C LDR X8, [X19]
	0x039DB730 ADRP X9, 0xFFFFFFFFFD10F000
	0x039DB734 LDR V0, [X9 + 0x8E]
	0x039DB738 MOVZ W9, 0xA
	0x039DB73C LDR X8, [X8 + 0xB8]
	0x039DB740 STR V0, [X8]
	0x039DB744 LDR X8, [X19]
	0x039DB748 LDP X20, X19, [X31 + 0x10]
	0x039DB74C LDR X8, [X8 + 0xB8]
	0x039DB750 STR W9, [X8 + 0x10]
	0x039DB754 LDR X30, [X31], #0x20
	0x039DB758 RET
	0x039DB75C STR X30, [X31 - 0x50]!
	0x039DB760 STP X26, X25, [X31 + 0x10]
	0x039DB764 STP X24, X23, [X31 + 0x20]
	0x039DB768 STP X22, X21, [X31 + 0x30]
	0x039DB76C STP X20, X19, [X31 + 0x40]
	0x039DB770 ADRP X26, 0xA06000
	0x039DB774 ADRP X23, 0x778000
	0x039DB778 ADRP X25, 0x778000
	0x039DB77C ADRP X24, 0x778000
	0x039DB780 LDRB W8, [X26 + 0xD79]
	0x039DB784 LDR X23, [X23 + 0x1D8]
	0x039DB788 LDR X25, [X25 + 0x1E0]
	0x039DB78C LDR X24, [X24 + 0x1E8]
	0x039DB790 MOV W22, W3
	0x039DB794 MOV W19, W2
	0x039DB798 MOV W21, W1
	0x039DB79C MOV X20, X0
	0x039DB7A0 TBNZ X8, 0x0, 0x39DB7D0
	0x039DB7A4 ADRP X0, 0x778000
	0x039DB7A8 LDR X0, [X0 + 0x1D8]
	0x039DB7AC BL 0x1C16CF4
	0x039DB7B0 ADRP X0, 0x778000
	0x039DB7B4 LDR X0, [X0 + 0x1E8]
	0x039DB7B8 BL 0x1C16CF4
	0x039DB7BC ADRP X0, 0x778000
	0x039DB7C0 LDR X0, [X0 + 0x1E0]
	0x039DB7C4 BL 0x1C16CF4
	0x039DB7C8 MOVZ W8, 0x1
	0x039DB7CC STRB W8, [X26 + 0xD79]
	0x039DB7D0 MOV X0, X20
	0x039DB7D4 MOV X1, X31
	0x039DB7D8 BL 0x33BDD8C
	0x039DB7DC LDR X0, [X23]
	0x039DB7E0 BL 0x1C16F10
	0x039DB7E4 UBFM W1, W22, 0x1F, 0x1E
	0x039DB7E8 MOV X23, X0
	0x039DB7EC BL 0x39DB87C
	0x039DB7F0 STR X23, [X20 + 0x18]
	0x039DB7F4 LDR X0, [X25]
	0x039DB7F8 BL 0x1C16F10
	0x039DB7FC LDR X2, [X24]
	0x039DB800 MOV W1, W22
	0x039DB804 MOV X23, X0
	0x039DB808 BL 0x2A06B5C
	0x039DB80C LDR X0, [X20 + 0x18]
	0x039DB810 STR X23, [X20 + 0x28]
	0x039DB814 CBZ X0, 0x39DB874
	0x039DB818 MOVZ W1, 0xFFFF
	0x039DB81C BL 0x39DB8EC
	0x039DB820 LDR X8, [X20 + 0x18]
	0x039DB824 STRH W0, [X20 + 0x20]
	0x039DB828 CBZ X8, 0x39DB874
	0x039DB82C LDR X8, [X8 + 0x10]

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0xA07000
	015 Move W8, [X26+3439]
	016 Move W19, W6
	017 Move W23, W5
	018 Move W25, W4
	019 Move X20, X3
	020 Move X24, X2
	021 Move X22, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x741000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move X0, 0x743000
	031 Move X0, [X0+2224]
	032 Call 0x1C17CF4
	033 Move X0, 0x778000
	034 Move X0, [X0+4048]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X26+3439], W8
	038 Add W31, W19, 1
	039 Compare X20, 0
	040 JumpIfEqual {150}
	041 Move X0, X20
	042 Move X1, X31
	043 Call Object.GetInstanceID, X0
	044 Move W19, W0
	045 Move X8, [X21]
	046 Move X0, X21
	047 Move W1, W19
	048 Move W2, W25
	049 Move X9, [X8+440]
	050 Move X5, [X8+448]
	051 Move W3, W23
	052 Move X4, X24
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move W23, W0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {135}
	059 Move X1, X20
	060 Call Texture2DAtlas.Is2D, X0, X1
	061 Move S8, [X24]
	062 Move S9, [X24+4]
	063 Move S10, [X24+8]
	064 Move S11, [X24+12]
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {97}
	069 Move X24, 0x778000
	070 Move X24, [X24+4048]
	071 Move X0, [X24]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X24]
	077 Move X8, [X0+184]
	078 Move X9, [X21]
	079 Move W3, 1
	080 Move TEMP, 0
	081 Not TEMP
	082 Move W4, TEMP
	083 Move S4, [X8]
	084 Move S5, [X8+4]
	085 Move S6, [X8+8]
	086 Move S7, [X8+12]
	087 Move X8, [X9+376]
	088 Move X5, [X9+384]
	089 Move X0, X21
	090 Move X1, X22
	091 Move V0, V8
	092 Move V1, V9
	093 Move V2, V10
	094 Move V3, V11
	095 Move X2, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X21]
	098 Move W3, 1
	099 Move TEMP, 0
	100 Not TEMP
	101 Move W4, TEMP
	102 Move X0, X21
	103 Move X9, [X8+408]
	104 Move X5, [X8+416]
	105 Move X1, X22
	106 Move V0, V8
	107 Move V1, V9
	108 Move V2, V10
	109 Move V3, V11
	110 Move X2, X20
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move W2, 1
	113 Move X0, X21
	114 Move W1, W19
	115 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	116 Move X8, 0x741000
	117 Move X8, [X8+2296]
	118 Move X21, [X21+64]
	119 Move X0, [X8]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X20
	125 Call CoreUtils.GetTextureHash, X0
	126 Compare X21, 0
	127 JumpIfEqual {150}
	128 Move X8, 0x743000
	129 Move X8, [X8+2224]
	130 Move W2, W0
	131 Move X0, X21
	132 Move W1, W19
	133 Move X3, [X8]
	134 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	135 And W0, W23, 1
	136 Move X20, [X31+96]
	137 Move X19, [X31+104]
	138 Move X22, [X31+80]
	139 Move X21, [X31+88]
	140 Move X24, [X31+64]
	141 Move X23, [X31+72]
	142 Move X26, [X31+48]
	143 Move X25, [X31+56]
	144 Move X30, [X31+32]
	145 Move D9, [X31+16]
	146 Move D8, [X31+24]
	147 Move D11, [X31+112]
	148 Move D10, [X31+120]
	149 Return X0
	150 Call 0x1C17F20

Method: System.Boolean AllocateTextureWithoutBlit(UnityEngine.Texture texture, System.Int32 width, System.Int32 height, ref UnityEngine.Vector4 scaleOffset)

Disassembly:
	0x039DB830 CBZ X8, 0x39DB874
	0x039DB834 LDR W9, [X8 + 0x18]
	0x039DB838 CMP W9, W0, SXTH
	0x039DB83C B.LS 0x39DB878
	0x039DB840 SXTH X9, W0
	0x039DB844 SCVTF S0, W21
	0x039DB848 SCVTF S1, W19
	0x039DB84C ADD X8, X8, X9, 0x5, LSL
	0x039DB850 STP S0, S1, [X8 + 0x30]
	0x039DB854 STR X31, [X8 + 0x38]
	0x039DB858 STP W21, W19, [X20 + 0x10]
	0x039DB85C LDP X20, X19, [X31 + 0x40]
	0x039DB860 LDP X22, X21, [X31 + 0x30]
	0x039DB864 LDP X24, X23, [X31 + 0x20]
	0x039DB868 LDP X26, X25, [X31 + 0x10]
	0x039DB86C LDR X30, [X31], #0x50
	0x039DB870 RET
	0x039DB874 BL 0x1C16F20
	0x039DB878 BL 0x1C16F28
	0x039DB87C STR X30, [X31 - 0x30]!
	0x039DB880 STP X22, X21, [X31 + 0x10]
	0x039DB884 STP X20, X19, [X31 + 0x20]
	0x039DB888 ADRP X22, 0xA06000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {29}
	008 Move X22, X0
	009 Move X0, X1
	010 Move X1, X31
	011 Move X19, X4
	012 Move W20, W3
	013 Move W21, W2
	014 Call Object.GetInstanceID, X0
	015 Move X8, [X22]
	016 Move W1, W0
	017 Move X0, X22
	018 Move W2, W21
	019 Move X6, [X8+440]
	020 Move X5, [X8+448]
	021 Move W3, W20
	022 Move X4, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 CallNoReturn X6
	029 Call 0x1C17F20

Method: System.Boolean AllocateTextureWithoutBlit(System.Int32 instanceId, System.Int32 width, System.Int32 height, ref UnityEngine.Vector4 scaleOffset)

Disassembly:
	0x039DB88C ADRP X21, 0x778000
	0x039DB890 LDRB W8, [X22 + 0xD7F]
	0x039DB894 LDR X21, [X21 + 0x1F0]
	0x039DB898 MOV W20, W1
	0x039DB89C MOV X19, X0
	0x039DB8A0 TBNZ X8, 0x0, 0x39DB8B8
	0x039DB8A4 ADRP X0, 0x778000
	0x039DB8A8 LDR X0, [X0 + 0x1F0]
	0x039DB8AC BL 0x1C16CF4
	0x039DB8B0 MOVZ W8, 0x1
	0x039DB8B4 STRB W8, [X22 + 0xD7F]
	0x039DB8B8 MOV X0, X19
	0x039DB8BC MOV X1, X31
	0x039DB8C0 BL 0x33BDD8C
	0x039DB8C4 LDR X0, [X21]
	0x039DB8C8 SXTH W1, W20
	0x039DB8CC BL 0x1C16D6C
	0x039DB8D0 MOVZ W8, 0xFFFF0000
	0x039DB8D4 STR X0, [X19 + 0x10]
	0x039DB8D8 STR W8, [X19 + 0x18]
	0x039DB8DC LDP X20, X19, [X31 + 0x20]
	0x039DB8E0 LDP X22, X21, [X31 + 0x10]
	0x039DB8E4 LDR X30, [X31], #0x30
	0x039DB8E8 RET
	0x039DB8EC STR X30, [X31 - 0x40]!
	0x039DB8F0 STP X24, X23, [X31 + 0x10]
	0x039DB8F4 STP X22, X21, [X31 + 0x20]
	0x039DB8F8 STP X20, X19, [X31 + 0x30]
	0x039DB8FC LDRSH X22, [X0 + 0x1A]
	0x039DB900 LDR X21, [X0 + 0x10]
	0x039DB904 MOV X19, X0
	0x039DB908 MOV W20, W1
	0x039DB90C ADDS X31, X22, 0x1
	0x039DB910 B.EQ 0x39DB998
	0x039DB914 CBZ X21, 0x39DBA28
	0x039DB918 LDR W8, [X21 + 0x18]
	0x039DB91C CMP W22, W8
	0x039DB920 B.CS 0x39DBA24
	0x039DB924 ADD X9, X21, X22, 0x5, LSL
	0x039DB928 ADRP X24, 0x9FD000
	0x039DB92C LDRB W10, [X24 + 0xE5A]
	0x039DB930 LDRH W23, [X9 + 0x28]
	0x039DB934 CBNZ W10, 0x39DB950
	0x039DB938 ADRP X0, 0x71F000
	0x039DB93C LDR X0, [X0 + 0x9A0]
	0x039DB940 BL 0x1C16CF4
	0x039DB944 MOVZ W8, 0x1
	0x039DB948 STRB W8, [X24 + 0xE5A]
	0x039DB94C LDR W8, [X21 + 0x18]
	0x039DB950 CMP W8, W22
	0x039DB954 B.LS 0x39DBA24
	0x039DB958 ADRP X8, 0x71F000
	0x039DB95C LDR X8, [X8 + 0x9A0]
	0x039DB960 AND W9, W22, 0xFFFF
	0x039DB964 ADD X10, X21, X22, 0x5, LSL
	0x039DB968 MOVI D1, 0xFFFFFFFFFFFF
	0x039DB96C LDR X8, [X8]
	0x039DB970 LDR X8, [X8 + 0xB8]
	0x039DB974 LDR V0, [X8]
	0x039DB978 STRH W9, [X10 + 0x20]
	0x039DB97C STRH W20, [X10 + 0x22]
	0x039DB980 STUR D1, [X10 + 0x24]
	0x039DB984 STR W31, [X10 + 0x2C]
	0x039DB988 STR V0, [X10 + 0x3]
	0x039DB98C LDRH W0, [X19 + 0x1A]
	0x039DB990 STRH W23, [X19 + 0x1A]
	0x039DB994 B 0x39DBA10
	0x039DB998 ADRP X23, 0x9FD000
	0x039DB99C LDRB W8, [X23 + 0xE5A]
	0x039DB9A0 LDRSH W22, [X19 + 0x18]
	0x039DB9A4 CBNZ W8, 0x39DB9BC
	0x039DB9A8 ADRP X0, 0x71F000
	0x039DB9AC LDR X0, [X0 + 0x9A0]
	0x039DB9B0 BL 0x1C16CF4
	0x039DB9B4 MOVZ W8, 0x1
	0x039DB9B8 STRB W8, [X23 + 0xE5A]
	0x039DB9BC CBZ X21, 0x39DBA28
	0x039DB9C0 LDR W8, [X21 + 0x18]
	0x039DB9C4 CMP W22, W8
	0x039DB9C8 B.CS 0x39DBA24
	0x039DB9CC ADRP X8, 0x71F000
	0x039DB9D0 LDR X8, [X8 + 0x9A0]
	0x039DB9D4 SXTW X10, W22
	0x039DB9D8 AND W9, W22, 0xFFFF
	0x039DB9DC ADD X10, X21, X10, 0x5, LSL
	0x039DB9E0 LDR X8, [X8]
	0x039DB9E4 MOVI D1, 0xFFFFFFFFFFFF
	0x039DB9E8 LDR X8, [X8 + 0xB8]
	0x039DB9EC LDR V0, [X8]
	0x039DB9F0 STRH W9, [X10 + 0x20]
	0x039DB9F4 STRH W20, [X10 + 0x22]
	0x039DB9F8 STUR D1, [X10 + 0x24]
	0x039DB9FC STR W31, [X10 + 0x2C]
	0x039DBA00 STR V0, [X10 + 0x3]
	0x039DBA04 LDRH W0, [X19 + 0x18]
	0x039DBA08 ADD W8, W0, 0x1
	0x039DBA0C STRH W8, [X19 + 0x18]
	0x039DBA10 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X22, 0xA07000
	010 Move W8, [X22+3440]
	011 Move X21, X4
	012 Move W23, W3
	013 Move W24, W2
	014 Move W19, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x743000
	021 Move X0, [X0+2224]
	022 Call 0x1C17CF4
	023 Move X0, 0x779000
	024 Move X0, [X0+440]
	025 Call 0x1C17CF4
	026 Move X0, 0x779000
	027 Move X0, [X0+448]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3440], W8
	031 Move X22, 0x9FE000
	032 Move W8, [X22+3674]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x720000
	036 Move X0, [X0+2464]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+3674], W8
	040 Move X8, 0x720000
	041 Move X8, [X8+2464]
	042 Move X8, [X8]
	043 Move X8, [X8+184]
	044 Move V0, [X8]
	045 Move [X21], V0
	046 Move X0, [X20+40]
	047 Compare X0, 0
	048 JumpIfEqual {117}
	049 Move X1, X21
	050 Move W2, W24
	051 Move W3, W23
	052 Call AtlasAllocator.Allocate, X0, X1, X2, X3
	053 Move W22, W0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {107}
	058 Move V0, [X20+24]
	059 Move V2, [X21]
	060 Move V1, 0
	061 Move X8, 0x779000
	062 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	063 Move X8, [X8+448]
	064 NotImplemented "Instruction INVALID not yet implemented."
	065 Move V0.D[1], V0.D[0]
	066 NotImplemented "Instruction INVALID not yet implemented."
	067 Move [X21], V0
	068 Move X2, [X8]
	069 Move X21, [X20+48]
	070 Move W1, W24
	071 NotImplemented "Instruction BFM not yet implemented."
	072 Move S1, V0.S[1]
	073 Move S2, V0.S[2]
	074 Move S3, V0.S[3]
	075 Add X0, X31, 8
	076 Move [X31+8], X31
	077 Move [X31+16], X31
	078 Move [X31+24], X31
	079 Call ValueTuple`2<Vector4, Vector2Int>..ctor, X0, X1, X2
	080 Compare X21, 0
	081 JumpIfEqual {117}
	082 Move X8, 0x779000
	083 Move X8, [X8+440]
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move X9, [X31+24]
	086 Add X2, X31, 32
	087 Move X3, [X8]
	088 Move X0, X21
	089 Move W1, W19
	090 Move [X31+2], V0
	091 Move [X31+48], X9
	092 Call Dictionary`2<Int32, ValueTuple`2<Vector4, Vector2Int>>.set_Item, X0, X1, X2
	093 Move X0, X20
	094 Move W1, W19
	095 Call Texture2DAtlas.MarkGPUTextureInvalid, X0, X1
	096 Move X0, [X20+64]
	097 Compare X0, 0
	098 JumpIfEqual {117}
	099 Move X8, 0x743000
	100 Move X8, [X8+2224]
	101 Move TEMP, 0
	102 Not TEMP
	103 Move W2, TEMP
	104 Move W1, W19
	105 Move X3, [X8]
	106 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	107 And W0, W22, 1
	108 Move X20, [X31+112]
	109 Move X19, [X31+120]
	110 Move X22, [X31+96]
	111 Move X21, [X31+104]
	112 Move X24, [X31+80]
	113 Move X23, [X31+88]
	114 Move X30, [X31+64]
	115 Add X31, X31, 128
	116 Return X0
	117 Call 0x1C17F20

Method: System.Int32 GetTextureHash(UnityEngine.Texture textureA, UnityEngine.Texture textureB)

Disassembly:
	0x039DBA14 LDP X22, X21, [X31 + 0x20]
	0x039DBA18 LDP X24, X23, [X31 + 0x10]
	0x039DBA1C LDR X30, [X31], #0x40
	0x039DBA20 RET
	0x039DBA24 BL 0x1C16F28
	0x039DBA28 BL 0x1C16F20
	0x039DBA2C STR X30, [X31 - 0x40]!
	0x039DBA30 STP X24, X23, [X31 + 0x10]
	0x039DBA34 STP X22, X21, [X31 + 0x20]
	0x039DBA38 STP X20, X19, [X31 + 0x30]
	0x039DBA3C ADRP X24, 0xA06000
	0x039DBA40 LDRB W8, [X24 + 0xD7A]
	0x039DBA44 MOV W22, W4
	0x039DBA48 MOV W23, W3
	0x039DBA4C MOV W20, W2
	0x039DBA50 MOV X19, X1
	0x039DBA54 MOV X21, X0
	0x039DBA58 TBNZ X8, 0x0, 0x39DBA70
	0x039DBA5C ADRP X0, 0x778000
	0x039DBA60 LDR X0, [X0 + 0x1F8]
	0x039DBA64 BL 0x1C16CF4
	0x039DBA68 MOVZ W8, 0x1
	0x039DBA6C STRB W8, [X24 + 0xD7A]
	0x039DBA70 LDR X1, [X21 + 0x18]
	0x039DBA74 CBZ X1, 0x39DBB54
	0x039DBA78 LDR X8, [X1 + 0x10]
	0x039DBA7C CBZ X8, 0x39DBB54
	0x039DBA80 LDRSH W9, [X21 + 0x20]
	0x039DBA84 LDR W10, [X8 + 0x18]
	0x039DBA88 CMP W9, W10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA07000
	007 Move X22, 0x741000
	008 Move W8, [X21+3441]
	009 Move X22, [X22+2296]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x741000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3441], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call CoreUtils.GetTextureHash, X0
	028 Move W20, W0
	029 Move X0, X19
	030 Call CoreUtils.GetTextureHash, X0
	031 Move W8, 23
	032 NotImplemented "Instruction MADD not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Int32 GetTextureID(UnityEngine.Texture texture)

Disassembly:
	0x039DB344 LDP X20, X19, [X31 + 0x20]
	0x039DB348 LDP X22, X21, [X31 + 0x10]
	0x039DB34C MOVN W6, 0x0
	0x039DB350 MOV W4, W23
	0x039DB354 LDP X30, X23, [X31], #0x30
	0x039DB358 BR X9

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call Object.GetInstanceID, X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Int32 GetTextureID(UnityEngine.Texture textureA, UnityEngine.Texture textureB)

Disassembly:
	0x039DBA8C B.CS 0x39DBB58
	0x039DBA90 SXTW X9, W9
	0x039DBA94 ADD X8, X8, X9, 0x5, LSL
	0x039DBA98 ADD X0, X8, 0x20
	0x039DBA9C MOV W2, W23
	0x039DBAA0 MOV W3, W22
	0x039DBAA4 BL 0x39DBB5C
	0x039DBAA8 SXTH W22, W0
	0x039DBAAC TBNZ X0, 0xF, 0x39DBB00
	0x039DBAB0 LDR X8, [X21 + 0x18]
	0x039DBAB4 CBZ X8, 0x39DBB54
	0x039DBAB8 LDR X8, [X8 + 0x10]
	0x039DBABC CBZ X8, 0x39DBB54
	0x039DBAC0 LDR W9, [X8 + 0x18]
	0x039DBAC4 CMP W9, W22, UXTH
	0x039DBAC8 B.LS 0x39DBB58
	0x039DBACC AND X9, X22, 0xFFFF
	0x039DBAD0 ADD X8, X8, X9, 0x5, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {22}
	006 Move X0, X1
	007 Move X1, X31
	008 Move X19, X2
	009 Call Object.GetInstanceID, X0
	010 Compare X19, 0
	011 JumpIfEqual {22}
	012 Move W20, W0
	013 Move X0, X19
	014 Move X1, X31
	015 Call Object.GetInstanceID, X0
	016 Move W8, 23
	017 NotImplemented "Instruction MADD not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0
	022 Call 0x1C17F20

Method: System.Boolean IsCached(out UnityEngine.Vector4 scaleOffset, UnityEngine.Texture textureA, UnityEngine.Texture textureB)

Disassembly:
	0x039DBAD4 LDR V0, [X8 + 0x3]
	0x039DBAD8 STR V0, [X19]
	0x039DBADC LDR X0, [X21 + 0x28]
	0x039DBAE0 CBZ X0, 0x39DBB54
	0x039DBAE4 ADRP X8, 0x778000
	0x039DBAE8 LDR X8, [X8 + 0x1F8]
	0x039DBAEC MOV W1, W20
	0x039DBAF0 MOV W2, W22
	0x039DBAF4 LDR X3, [X8]
	0x039DBAF8 BL 0x2A073F0
	0x039DBAFC B 0x39DBB38
	0x039DBB00 ADRP X20, 0x9FD000
	0x039DBB04 LDRB W8, [X20 + 0xE5A]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X2
	006 Move X2, X3
	007 Move X20, X0
	008 Call Texture2DAtlas.GetTextureID, X0, X1, X2
	009 Move W2, W0
	010 Move X0, X20
	011 Move X1, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]

Method: System.Boolean IsCached(out UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture)

Disassembly:
	0x039DBB90 MOV W20, W3
	0x039DBB94 MOV W21, W2
	0x039DBB98 MOV X19, X1
	0x039DBB9C CMP W8, W0
	0x039DBBA0 B.EQ 0x39DBC18
	0x039DBBA4 MOVZ W24, 0xFFFF
	0x039DBBA8 CBZ X19, 0x39DBF24
	0x039DBBAC LDR X9, [X19 + 0x10]
	0x039DBBB0 CBZ X9, 0x39DBF24
	0x039DBBB4 LDR W10, [X9 + 0x18]
	0x039DBBB8 CMP W10, W8, SXTH
	0x039DBBBC B.LS 0x39DBF28
	0x039DBBC0 SXTH X8, W8
	0x039DBBC4 ADD X8, X9, X8, 0x5, LSL
	0x039DBBC8 ADD X0, X8, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X2, 0
	005 JumpIfEqual {19}
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, X2
	009 Move X1, X31
	010 Call Object.GetInstanceID, X0
	011 Move W2, W0
	012 Move X0, X20
	013 Move X1, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Call Texture2DAtlas.IsCached, X0, X1, X2
	018 Return X0
	019 Call 0x1C17F20

Method: System.Boolean IsCached(out UnityEngine.Vector4 scaleOffset, System.Int32 id)

Disassembly:
	0x039DBB08 CBNZ W8, 0x39DBB20
	0x039DBB0C ADRP X0, 0x71F000
	0x039DBB10 LDR X0, [X0 + 0x9A0]
	0x039DBB14 BL 0x1C16CF4
	0x039DBB18 MOVZ W8, 0x1
	0x039DBB1C STRB W8, [X20 + 0xE5A]
	0x039DBB20 ADRP X8, 0x71F000
	0x039DBB24 LDR X8, [X8 + 0x9A0]
	0x039DBB28 LDR X8, [X8]
	0x039DBB2C LDR X8, [X8 + 0xB8]
	0x039DBB30 LDR V0, [X8]
	0x039DBB34 STR V0, [X19]
	0x039DBB38 UBFM W8, W22, 0xF, 0xF
	0x039DBB3C LDP X20, X19, [X31 + 0x30]
	0x039DBB40 LDP X22, X21, [X31 + 0x20]
	0x039DBB44 LDP X24, X23, [X31 + 0x10]
	0x039DBB48 EOR W0, W8, 0x1
	0x039DBB4C LDR X30, [X31], #0x40
	0x039DBB50 RET
	0x039DBB54 BL 0x1C16F20
	0x039DBB58 BL 0x1C16F28
	0x039DBB5C STP D9, D8, [X31 - 0x50]!
	0x039DBB60 STR X30, [X31 + 0x10]
	0x039DBB64 STP X24, X23, [X31 + 0x20]
	0x039DBB68 STP X22, X21, [X31 + 0x30]
	0x039DBB6C STP X20, X19, [X31 + 0x40]
	0x039DBB70 CMP W2, W3
	0x039DBB74 CSEL W8, W2, W3, LT
	0x039DBB78 MOV X22, X0
	0x039DBB7C CMP W8, 0x1
	0x039DBB80 MOVZ W0, 0xFFFF
	0x039DBB84 B.LT 0x39DBDC4
	0x039DBB88 MOV X23, X22
	0x039DBB8C LDRH W8, [X23 + 0x4]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0xA07000
	008 Move W8, [X22+3442]
	009 Move W20, W2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x779000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3442], W8
	021 Move [X31+8], X31
	022 Move [X31+16], X31
	023 Move [X31+24], X31
	024 Move X0, [X21+48]
	025 Compare X0, 0
	026 JumpIfEqual {43}
	027 Move X8, 0x779000
	028 Move X8, [X8+456]
	029 Add X2, X31, 8
	030 Move W1, W20
	031 Move X3, [X8]
	032 Call Dictionary`2<Int32, ValueTuple`2<Vector4, Vector2Int>>.TryGetValue, X0, X1, X2
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Move X22, [X31+48]
	035 Move X21, [X31+56]
	036 Move X30, [X31+32]
	037 And W0, W0, 1
	038 Move [X19], V0
	039 Move X20, [X31+64]
	040 Move X19, [X31+72]
	041 Add X31, X31, 80
	042 Return X0
	043 Call 0x1C17F20

Method: UnityEngine.Vector2Int GetCachedTextureSize(System.Int32 id)

Disassembly:
	0x039DBBCC MOV X1, X19
	0x039DBBD0 MOV W2, W21
	0x039DBBD4 MOV W3, W20
	0x039DBBD8 BL 0x39DBB5C
	0x039DBBDC ORN W8, W31, W0, 0x0
	0x039DBBE0 ANDS W31, W8, 0xFFFF
	0x039DBBE4 B.NE 0x39DBDC4
	0x039DBBE8 LDR X8, [X19 + 0x10]
	0x039DBBEC CBZ X8, 0x39DBF24
	0x039DBBF0 LDRSH W9, [X22 + 0x6]
	0x039DBBF4 LDR W10, [X8 + 0x18]
	0x039DBBF8 CMP W9, W10
	0x039DBBFC B.CS 0x39DBF28
	0x039DBC00 SXTW X9, W9
	0x039DBC04 ADD X23, X8, X9, 0x5, LSL
	0x039DBC08 LDRH W8, [X23 + 0x24]!
	0x039DBC0C CMP W8, W24
	0x039DBC10 SUB X22, X23, 0x4
	0x039DBC14 B.NE 0x39DBBA8
	0x039DBC18 LDRB W8, [X22 + 0xA]
	0x039DBC1C TBNZ X8, 0x0, 0x39DBDC0
	0x039DBC20 LDR V0, [X22 + 0x10]
	0x039DBC24 SCVTF S9, W21
	0x039DBC28 FCMP S0, S9
	0x039DBC2C B.MI 0x39DBDC0
	0x039DBC30 LDR V0, [X22 + 0x14]
	0x039DBC34 SCVTF S8, W20
	0x039DBC38 FCMP S0, S8
	0x039DBC3C B.MI 0x39DBDC0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xA07000
	007 Move W8, [X21+3443]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x779000
	015 Move X0, [X0+456]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3443], W8
	019 Move [X31+8], X31
	020 Move [X31+16], X31
	021 Move [X31+24], X31
	022 Move X0, [X20+48]
	023 Compare X0, 0
	024 JumpIfEqual {38}
	025 Move X8, 0x779000
	026 Move X8, [X8+456]
	027 Add X2, X31, 8
	028 Move W1, W19
	029 Move X3, [X8]
	030 Call Dictionary`2<Int32, ValueTuple`2<Vector4, Vector2Int>>.TryGetValue, X0, X1, X2
	031 Move X0, [X31+24]
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Add X31, X31, 64
	037 Return X0
	038 Call 0x1C17F20

Method: System.Boolean NeedsUpdate(UnityEngine.Texture texture, System.Boolean needMips = False)

Disassembly:
	0x039DBC40 CBZ X19, 0x39DBF24
	0x039DBC44 LDRH W1, [X22]
	0x039DBC48 MOV X0, X19
	0x039DBC4C BL 0x39DB8EC
	0x039DBC50 STRH W0, [X23]
	0x039DBC54 LDRH W1, [X22]
	0x039DBC58 MOV X0, X19
	0x039DBC5C BL 0x39DB8EC
	0x039DBC60 STRH W0, [X22 + 0x6]
	0x039DBC64 LDR X8, [X19 + 0x10]
	0x039DBC68 CBZ X8, 0x39DBF24
	0x039DBC6C LDRSH W10, [X23]
	0x039DBC70 LDR W9, [X8 + 0x18]
	0x039DBC74 CMP W10, W9
	0x039DBC78 B.CS 0x39DBF28
	0x039DBC7C LDP S3, S2, [X22 + 0x10]
	0x039DBC80 SXTW X10, W10
	0x039DBC84 ADD X10, X8, X10, 0x5, LSL
	0x039DBC88 ADD X10, X10, 0x30
	0x039DBC8C FSUB S1, S3, S9
	0x039DBC90 FSUB S0, S2, S8
	0x039DBC94 FCMP S1, S0
	0x039DBC98 B.GE 0x39DBDDC
	0x039DBC9C STR S3, [X10]
	0x039DBCA0 LDRSH W10, [X23]
	0x039DBCA4 CMP W10, W9
	0x039DBCA8 B.CS 0x39DBF28
	0x039DBCAC SXTW X10, W10
	0x039DBCB0 ADD X10, X8, X10, 0x5, LSL
	0x039DBCB4 STR S8, [X10 + 0x34]
	0x039DBCB8 LDRSH W10, [X23]
	0x039DBCBC CMP W10, W9
	0x039DBCC0 B.CS 0x39DBF28
	0x039DBCC4 LDR V2, [X22 + 0x18]
	0x039DBCC8 SXTW X10, W10
	0x039DBCCC ADD X10, X8, X10, 0x5, LSL
	0x039DBCD0 STR S2, [X10 + 0x38]
	0x039DBCD4 LDRSH W10, [X23]
	0x039DBCD8 CMP W10, W9
	0x039DBCDC B.CS 0x39DBF28
	0x039DBCE0 LDR V2, [X22 + 0x1C]
	0x039DBCE4 SXTW X10, W10
	0x039DBCE8 ADD X10, X8, X10, 0x5, LSL
	0x039DBCEC STR S2, [X10 + 0x3C]
	0x039DBCF0 LDRSH W10, [X22 + 0x6]
	0x039DBCF4 CMP W10, W9
	0x039DBCF8 B.CS 0x39DBF28
	0x039DBCFC LDR V2, [X22 + 0x10]
	0x039DBD00 SXTW X10, W10
	0x039DBD04 ADD X10, X8, X10, 0x5, LSL
	0x039DBD08 STR S2, [X10 + 0x30]
	0x039DBD0C LDRSH W10, [X22 + 0x6]
	0x039DBD10 CMP W10, W9
	0x039DBD14 B.CS 0x39DBF28
	0x039DBD18 SXTW X10, W10
	0x039DBD1C ADD X10, X8, X10, 0x5, LSL
	0x039DBD20 STR S0, [X10 + 0x34]
	0x039DBD24 LDRSH W10, [X22 + 0x6]
	0x039DBD28 CMP W10, W9
	0x039DBD2C B.CS 0x39DBF28
	0x039DBD30 LDR V0, [X22 + 0x18]
	0x039DBD34 SXTW X10, W10
	0x039DBD38 ADD X10, X8, X10, 0x5, LSL
	0x039DBD3C STR S0, [X10 + 0x38]
	0x039DBD40 LDRSH W10, [X22 + 0x6]
	0x039DBD44 CMP W10, W9
	0x039DBD48 B.CS 0x39DBF28
	0x039DBD4C LDR V0, [X22 + 0x1C]
	0x039DBD50 SXTW X10, W10
	0x039DBD54 ADD X10, X8, X10, 0x5, LSL
	0x039DBD58 FADD S0, S0, S8
	0x039DBD5C STR S0, [X10 + 0x3C]
	0x039DBD60 LDRSH W10, [X23]
	0x039DBD64 CMP W10, W9
	0x039DBD68 B.CS 0x39DBF28
	0x039DBD6C FMOV S0, 1
	0x039DBD70 FCMP S1, S0
	0x039DBD74 SXTW X9, W10
	0x039DBD78 B.MI 0x39DBEBC
	0x039DBD7C ADD X8, X8, X9, 0x5, LSL
	0x039DBD80 ADD X0, X8, 0x20
	0x039DBD84 MOV X1, X19
	0x039DBD88 MOV W2, W21
	0x039DBD8C MOV W3, W20
	0x039DBD90 BL 0x39DBB5C
	0x039DBD94 MOV W8, W0
	0x039DBD98 SXTH W0, W0
	0x039DBD9C TBNZ X8, 0xF, 0x39DBDC4
	0x039DBDA0 LDR X8, [X19 + 0x10]
	0x039DBDA4 CBZ X8, 0x39DBF24
	0x039DBDA8 LDR W9, [X8 + 0x18]
	0x039DBDAC CMP W9, W0, UXTH
	0x039DBDB0 B.LS 0x39DBF28
	0x039DBDB4 MOV W9, W0
	0x039DBDB8 AND X9, X9, 0xFFFF
	0x039DBDBC B 0x39DBF10
	0x039DBDC0 MOVZ W0, 0xFFFF
	0x039DBDC4 LDP X20, X19, [X31 + 0x40]
	0x039DBDC8 LDP X22, X21, [X31 + 0x30]
	0x039DBDCC LDP X24, X23, [X31 + 0x20]
	0x039DBDD0 LDR X30, [X31 + 0x10]
	0x039DBDD4 LDP D9, D8, [X31], #0x50
	0x039DBDD8 RET
	0x039DBDDC STR S9, [X10]
	0x039DBDE0 LDRSH W10, [X23]
	0x039DBDE4 CMP W10, W9
	0x039DBDE8 B.CS 0x39DBF28
	0x039DBDEC SXTW X10, W10
	0x039DBDF0 ADD X10, X8, X10, 0x5, LSL
	0x039DBDF4 STR S2, [X10 + 0x34]
	0x039DBDF8 LDRSH W10, [X23]
	0x039DBDFC CMP W10, W9
	0x039DBE00 B.CS 0x39DBF28
	0x039DBE04 LDR V2, [X22 + 0x18]
	0x039DBE08 SXTW X10, W10
	0x039DBE0C ADD X10, X8, X10, 0x5, LSL
	0x039DBE10 STR S2, [X10 + 0x38]
	0x039DBE14 LDRSH W10, [X23]
	0x039DBE18 CMP W10, W9
	0x039DBE1C B.CS 0x39DBF28
	0x039DBE20 LDR V2, [X22 + 0x1C]
	0x039DBE24 SXTW X10, W10
	0x039DBE28 ADD X10, X8, X10, 0x5, LSL
	0x039DBE2C STR S2, [X10 + 0x3C]
	0x039DBE30 LDRSH W10, [X22 + 0x6]
	0x039DBE34 CMP W10, W9
	0x039DBE38 B.CS 0x39DBF28
	0x039DBE3C SXTW X10, W10
	0x039DBE40 ADD X10, X8, X10, 0x5, LSL
	0x039DBE44 STR S1, [X10 + 0x30]
	0x039DBE48 LDRSH W10, [X22 + 0x6]
	0x039DBE4C CMP W10, W9
	0x039DBE50 B.CS 0x39DBF28
	0x039DBE54 LDR V1, [X22 + 0x14]
	0x039DBE58 SXTW X10, W10
	0x039DBE5C ADD X10, X8, X10, 0x5, LSL
	0x039DBE60 STR S1, [X10 + 0x34]
	0x039DBE64 LDRSH W10, [X22 + 0x6]
	0x039DBE68 CMP W10, W9
	0x039DBE6C B.CS 0x39DBF28
	0x039DBE70 LDR V1, [X22 + 0x18]
	0x039DBE74 SXTW X10, W10
	0x039DBE78 ADD X10, X8, X10, 0x5, LSL
	0x039DBE7C FADD S1, S1, S9
	0x039DBE80 STR S1, [X10 + 0x38]
	0x039DBE84 LDRSH W10, [X22 + 0x6]
	0x039DBE88 CMP W10, W9
	0x039DBE8C B.CS 0x39DBF28
	0x039DBE90 LDR V1, [X22 + 0x1C]
	0x039DBE94 SXTW X10, W10
	0x039DBE98 ADD X10, X8, X10, 0x5, LSL
	0x039DBE9C STR S1, [X10 + 0x3C]
	0x039DBEA0 LDRSH W10, [X23]
	0x039DBEA4 CMP W10, W9
	0x039DBEA8 B.CS 0x39DBF28
	0x039DBEAC FMOV S1, 1
	0x039DBEB0 FCMP S0, S1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0xA07000
	010 Move W8, [X21+3444]
	011 Move W20, W2
	012 Move X23, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x741000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x723000
	022 Move X0, [X0+2160]
	023 Call 0x1C17CF4
	024 Move X0, 0x743000
	025 Move X0, [X0+2224]
	026 Call 0x1C17CF4
	027 Move X0, 0x719000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x71B000
	031 Move X0, [X0+304]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3444], W8
	035 Move [X31+24], X31
	036 Move [X31+12], W31
	037 Compare X23, 0
	038 JumpIfEqual {182}
	039 Move X8, 0x71B000
	040 Move X8, [X8+304]
	041 Move X9, [X23]
	042 Move X21, 0x741000
	043 Move X8, [X8]
	044 Move W11, [X9+304]
	045 Move W10, [X8+304]
	046 Move X21, [X21+2296]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X22, X31
	049 Move X9, [X9+200]
	050 Add X9, X9, X10
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Move X24, 0x719000
	055 Move X24, [X24+1432]
	056 Move X0, X23
	057 Move X1, X31
	058 Call Object.GetInstanceID, X0
	059 Move X8, [X21]
	060 Move W21, W0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X23
	067 Call CoreUtils.GetTextureHash, X0
	068 Move X8, [X24]
	069 Move W23, W0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X0, X22
	076 Move X1, X31
	077 Move X2, X31
	078 Call Object.op_Inequality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {115}
	083 Move X0, [X19+56]
	084 Compare X0, 0
	085 JumpIfEqual {182}
	086 Move X8, 0x723000
	087 Move X8, [X8+2160]
	088 Add X2, X31, 28
	089 Move W1, W21
	090 Move X3, [X8]
	091 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {140}
	096 Compare X22, 0
	097 JumpIfEqual {182}
	098 Move X0, X22
	099 Move X1, X31
	100 Call Texture.get_updateCount, X0
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Move W9, W0
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X19, [X19+56]
	105 Move X0, X22
	106 Move X1, X31
	107 Call Texture.get_updateCount, X0
	108 Compare X19, 0
	109 JumpIfEqual {182}
	110 Move X8, 0x743000
	111 Move X8, [X8+2224]
	112 Move W2, W0
	113 Move X0, X19
	114 Move W1, W21
	115 Move X0, [X19+64]
	116 Compare X0, 0
	117 JumpIfEqual {182}
	118 Move X22, 0x723000
	119 Move X22, [X22+2160]
	120 Add X2, X31, 24
	121 Move W1, W21
	122 Move X3, [X22]
	123 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	124 Move W8, [X31+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {155}
	130 Move X0, [X19+64]
	131 Compare X0, 0
	132 JumpIfEqual {182}
	133 Move X8, 0x743000
	134 Move X8, [X8+2224]
	135 Move W1, W21
	136 Move W2, W23
	137 Move X3, [X8]
	138 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	139 Move W0, 1
	140 Compare X22, 0
	141 JumpIfEqual {182}
	142 Move X19, [X19+56]
	143 Move X0, X22
	144 Move X1, X31
	145 Call Texture.get_updateCount, X0
	146 Compare X19, 0
	147 JumpIfEqual {182}
	148 Move X8, 0x743000
	149 Move X8, [X8+2224]
	150 Move W2, W0
	151 Move X0, X19
	152 Move W1, W21
	153 Move X3, [X8]
	154 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	155 Move X0, [X19+56]
	156 Compare X0, 0
	157 JumpIfEqual {182}
	158 Move X3, [X22]
	159 Add X2, X31, 12
	160 Move W1, W21
	161 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {172}
	166 Move W8, [X31+12]
	167 Compare W8, 0
	168 JumpIfEqual {139}
	169 NotImplemented "Instruction CMP not yet implemented."
	170 NotImplemented "Instruction CSET not yet implemented."
	171 And W0, W8, W20
	172 Move W0, W31
	173 Move X20, [X31+64]
	174 Move X19, [X31+72]
	175 Move X22, [X31+48]
	176 Move X21, [X31+56]
	177 Move X24, [X31+32]
	178 Move X23, [X31+40]
	179 Move X30, [X31+16]
	180 Add X31, X31, 80
	181 Return X0
	182 Call 0x1C17F20

Method: System.Boolean NeedsUpdate(UnityEngine.Texture textureA, UnityEngine.Texture textureB, System.Boolean needMips = False)

Disassembly:
	0x039DBEB4 SXTW X9, W10
	0x039DBEB8 B.PL 0x39DBED4
	0x039DBEBC ADD X8, X8, X9, 0x5, LSL
	0x039DBEC0 LDRH W9, [X8 + 0x2A]
	0x039DBEC4 ORR W9, W9, 0x1
	0x039DBEC8 STRH W9, [X8 + 0x2A]
	0x039DBECC LDRH W0, [X23]
	0x039DBED0 B 0x39DBDC4
	0x039DBED4 ADD X8, X8, X9, 0x5, LSL
	0x039DBED8 ADD X0, X8, 0x20
	0x039DBEDC MOV X1, X19
	0x039DBEE0 MOV W2, W21
	0x039DBEE4 MOV W3, W20
	0x039DBEE8 BL 0x39DBB5C
	0x039DBEEC MOV W8, W0
	0x039DBEF0 SXTH W0, W0
	0x039DBEF4 TBNZ X8, 0xF, 0x39DBDC4
	0x039DBEF8 LDR X8, [X19 + 0x10]
	0x039DBEFC CBZ X8, 0x39DBF24
	0x039DBF00 LDR W9, [X8 + 0x18]
	0x039DBF04 CMP W9, W0, UXTH
	0x039DBF08 B.LS 0x39DBF28
	0x039DBF0C AND X9, X0, 0xFFFF
	0x039DBF10 ADD X8, X8, X9, 0x5, LSL
	0x039DBF14 LDRH W9, [X8 + 0x2A]
	0x039DBF18 ORR W9, W9, 0x1
	0x039DBF1C STRH W9, [X8 + 0x2A]
	0x039DBF20 B 0x39DBDC4
	0x039DBF24 BL 0x1C16F20
	0x039DBF28 BL 0x1C16F28
	0x039DBF2C SUB X31, X31, 0x30
	0x039DBF30 STP X30, X21, [X31 + 0x10]
	0x039DBF34 STP X20, X19, [X31 + 0x20]
	0x039DBF38 ADRP X21, 0xA06000
	0x039DBF3C LDRB W8, [X21 + 0xD7B]
	0x039DBF40 MOV W19, W1
	0x039DBF44 MOV X20, X0
	0x039DBF48 TBNZ X8, 0x0, 0x39DBF6C
	0x039DBF4C ADRP X0, 0x778000
	0x039DBF50 LDR X0, [X0 + 0x200]
	0x039DBF54 BL 0x1C16CF4
	0x039DBF58 ADRP X0, 0x778000
	0x039DBF5C LDR X0, [X0 + 0x208]
	0x039DBF60 BL 0x1C16CF4
	0x039DBF64 MOVZ W8, 0x1
	0x039DBF68 STRB W8, [X21 + 0xD7B]
	0x039DBF6C STRH W31, [X31 + 0xC]
	0x039DBF70 LDR X0, [X20 + 0x28]
	0x039DBF74 CBZ X0, 0x39DBFF0
	0x039DBF78 ADRP X8, 0x778000
	0x039DBF7C LDR X8, [X8 + 0x208]
	0x039DBF80 ADD X2, X31, 0xC
	0x039DBF84 MOV W1, W19
	0x039DBF88 LDR X3, [X8]
	0x039DBF8C BL 0x2A08D1C
	0x039DBF90 TBZ X0, 0x0, 0x39DBFE0
	0x039DBF94 LDR X1, [X20 + 0x18]
	0x039DBF98 CBZ X1, 0x39DBFF0
	0x039DBF9C LDR X8, [X1 + 0x10]
	0x039DBFA0 CBZ X8, 0x39DBFF0
	0x039DBFA4 LDRSH W9, [X31 + 0xC]
	0x039DBFA8 LDR W10, [X8 + 0x18]
	0x039DBFAC CMP W9, W10
	0x039DBFB0 B.CS 0x39DBFF4
	0x039DBFB4 SXTW X9, W9
	0x039DBFB8 ADD X8, X8, X9, 0x5, LSL
	0x039DBFBC ADD X0, X8, 0x20
	0x039DBFC0 BL 0x39DBFF8
	0x039DBFC4 LDR X0, [X20 + 0x28]
	0x039DBFC8 CBZ X0, 0x39DBFF0
	0x039DBFCC ADRP X8, 0x778000
	0x039DBFD0 LDR X8, [X8 + 0x200]
	0x039DBFD4 MOV W1, W19
	0x039DBFD8 LDR X2, [X8]
	0x039DBFDC BL 0x2A08744
	0x039DBFE0 LDP X20, X19, [X31 + 0x20]
	0x039DBFE4 LDP X30, X21, [X31 + 0x10]
	0x039DBFE8 ADD X31, X31, 0x30
	0x039DBFEC RET
	0x039DBFF0 BL 0x1C16F20
	0x039DBFF4 BL 0x1C16F28
	0x039DBFF8 STP X30, X21, [X31 - 0x20]!
	0x039DBFFC STP X20, X19, [X31 + 0x10]
	0x039DC000 CBZ X1, 0x39DC0B4
	0x039DC004 LDRH W8, [X0]
	0x039DC008 MOV X19, X1
	0x039DC00C LDR X9, [X19 + 0x10]
	0x039DC010 CBZ X9, 0x39DC0B4
	0x039DC014 LDR W10, [X9 + 0x18]
	0x039DC018 SXTH W20, W8
	0x039DC01C CMP W20, W10
	0x039DC020 B.CS 0x39DC0B0
	0x039DC024 SXTH X21, W8
	0x039DC028 ADD X8, X9, X21, 0x5, LSL
	0x039DC02C ADD X0, X8, 0x20
	0x039DC030 MOV X1, X19
	0x039DC034 BL 0x39DC6A0
	0x039DC038 LDR X8, [X19 + 0x10]
	0x039DC03C CBZ X8, 0x39DC0B4
	0x039DC040 LDR W9, [X8 + 0x18]
	0x039DC044 CMP W20, W9
	0x039DC048 B.CS 0x39DC0B0
	0x039DC04C ADD X8, X8, X21, 0x5, LSL
	0x039DC050 LDRH W9, [X8 + 0x2A]
	0x039DC054 AND W9, W9, 0xFFFE
	0x039DC058 STRH W9, [X8 + 0x2A]
	0x039DC05C LDR X8, [X19 + 0x10]
	0x039DC060 CBZ X8, 0x39DC0B4
	0x039DC064 LDR W9, [X8 + 0x18]
	0x039DC068 CMP W20, W9
	0x039DC06C B.CS 0x39DC0B0
	0x039DC070 ADD X10, X8, X21, 0x5, LSL
	0x039DC074 LDRSH W20, [X10 + 0x22]
	0x039DC078 TBNZ X20, 0x1F, 0x39DC0A4
	0x039DC07C AND W10, W20, 0xFFFF
	0x039DC080 CMP W10, W9
	0x039DC084 B.CS 0x39DC0B0
	0x039DC088 AND X9, X20, 0xFFFF
	0x039DC08C ADD X8, X8, X9, 0x5, LSL
	0x039DC090 ADD X0, X8, 0x20
	0x039DC094 MOV X1, X19
	0x039DC098 BL 0x39DC748
	0x039DC09C MOV W8, W20
	0x039DC0A0 TBNZ X0, 0x0, 0x39DC00C
	0x039DC0A4 LDP X20, X19, [X31 + 0x10]
	0x039DC0A8 LDP X30, X21, [X31], #0x20
	0x039DC0AC RET
	0x039DC0B0 BL 0x1C16F28
	0x039DC0B4 BL 0x1C16F20
	0x039DC0B8 STR X30, [X31 - 0x20]!
	0x039DC0BC STP X20, X19, [X31 + 0x10]
	0x039DC0C0 ADRP X20, 0xA05000
	0x039DC0C4 LDRB W8, [X20 + 0xD7C]
	0x039DC0C8 MOV X19, X0
	0x039DC0CC TBNZ X8, 0x0, 0x39DC0E4
	0x039DC0D0 ADRP X0, 0x777000
	0x039DC0D4 LDR X0, [X0 + 0x210]
	0x039DC0D8 BL 0x1C16CF4
	0x039DC0DC MOVZ W8, 0x1
	0x039DC0E0 STRB W8, [X20 + 0xD7C]
	0x039DC0E4 LDR X0, [X19 + 0x18]
	0x039DC0E8 CBZ X0, 0x39DC154
	0x039DC0EC MOVZ W8, 0xFFFF0000
	0x039DC0F0 MOVZ W1, 0xFFFF
	0x039DC0F4 STR W8, [X0 + 0x18]
	0x039DC0F8 BL 0x39DB8EC
	0x039DC0FC LDR X8, [X19 + 0x18]
	0x039DC100 STRH W0, [X19 + 0x20]
	0x039DC104 CBZ X8, 0x39DC154
	0x039DC108 LDR X8, [X8 + 0x10]
	0x039DC10C CBZ X8, 0x39DC154
	0x039DC110 LDR W9, [X8 + 0x18]
	0x039DC114 CMP W9, W0, SXTH
	0x039DC118 B.LS 0x39DC158
	0x039DC11C LDR V0, [X19 + 0x10]
	0x039DC120 SXTH X9, W0
	0x039DC124 ADD X8, X8, X9, 0x5, LSL
	0x039DC128 STR X31, [X8 + 0x38]
	0x039DC12C UNIMPLEMENTED
	0x039DC130 STR D0, [X8 + 0x30]
	0x039DC134 LDR X0, [X19 + 0x28]
	0x039DC138 CBZ X0, 0x39DC154
	0x039DC13C ADRP X8, 0x777000
	0x039DC140 LDR X8, [X8 + 0x210]
	0x039DC144 LDP X20, X19, [X31 + 0x10]
	0x039DC148 LDR X1, [X8]
	0x039DC14C LDR X30, [X31], #0x20
	0x039DC150 B 0x2A07570
	0x039DC154 BL 0x1C16F20
	0x039DC158 BL 0x1C16F28
	0x039DC15C MOVZ W8, 0xFFFF0000
	0x039DC160 STR W8, [X0 + 0x18]
	0x039DC164 RET
	0x039DC168 STR X30, [X31 - 0x30]!
	0x039DC16C STP X22, X21, [X31 + 0x10]
	0x039DC170 STP X20, X19, [X31 + 0x20]
	0x039DC174 ADRP X21, 0xA05000
	0x039DC178 ADRP X22, 0x717000
	0x039DC17C LDRB W8, [X21 + 0xD7D]
	0x039DC180 LDR X22, [X22 + 0x988]
	0x039DC184 MOV W19, W1
	0x039DC188 MOV X20, X0
	0x039DC18C TBNZ X8, 0x0, 0x39DC1A4
	0x039DC190 ADRP X0, 0x717000
	0x039DC194 LDR X0, [X0 + 0x988]
	0x039DC198 BL 0x1C16CF4
	0x039DC19C MOVZ W8, 0x1
	0x039DC1A0 STRB W8, [X21 + 0xD7D]
	0x039DC1A4 LDR X8, [X22]
	0x039DC1A8 ADD X1, X31, 0x8
	0x039DC1AC MOV X0, X20
	0x039DC1B0 MOV W3, W31
	0x039DC1B4 STR X8, [X31 + 0x8]
	0x039DC1B8 LDRH W2, [X20 + 0x20]
	0x039DC1BC MOV W4, W19
	0x039DC1C0 BL 0x39DC1D8
	0x039DC1C4 LDR X0, [X31 + 0x8]
	0x039DC1C8 LDP X20, X19, [X31 + 0x20]
	0x039DC1CC LDP X22, X21, [X31 + 0x10]
	0x039DC1D0 LDR X30, [X31], #0x30
	0x039DC1D4 RET
	0x039DC1D8 SUB X31, X31, 0x50
	0x039DC1DC STP X30, X25, [X31 + 0x10]
	0x039DC1E0 STP X24, X23, [X31 + 0x20]
	0x039DC1E4 STP X22, X21, [X31 + 0x30]
	0x039DC1E8 STP X20, X19, [X31 + 0x40]
	0x039DC1EC ADRP X22, 0xA05000
	0x039DC1F0 STR W3, [X31 + 0xC]
	0x039DC1F4 ADRP X24, 0x717000
	0x039DC1F8 LDRB W8, [X22 + 0xD7E]
	0x039DC1FC LDR X24, [X24 + 0xAC8]
	0x039DC200 MOV W19, W4
	0x039DC204 MOV W23, W2
	0x039DC208 MOV X20, X1
	0x039DC20C MOV X21, X0
	0x039DC210 TBNZ X8, 0x0, 0x39DC288
	0x039DC214 ADRP X0, 0x717000
	0x039DC218 LDR X0, [X0 + 0xAC8]
	0x039DC21C BL 0x1C16CF4
	0x039DC220 ADRP X0, 0x777000
	0x039DC224 LDR X0, [X0 + 0x218]
	0x039DC228 BL 0x1C16CF4
	0x039DC22C ADRP X0, 0x717000
	0x039DC230 LDR X0, [X0 + 0x838]
	0x039DC234 BL 0x1C16CF4
	0x039DC238 ADRP X0, 0x721000
	0x039DC23C LDR X0, [X0 + 0xFF8]
	0x039DC240 BL 0x1C16CF4
	0x039DC244 ADRP X0, 0x777000
	0x039DC248 LDR X0, [X0 + 0x220]
	0x039DC24C BL 0x1C16CF4
	0x039DC250 ADRP X0, 0x777000
	0x039DC254 LDR X0, [X0 + 0x228]
	0x039DC258 BL 0x1C16CF4
	0x039DC25C ADRP X0, 0x722000
	0x039DC260 LDR X0, [X0]
	0x039DC264 BL 0x1C16CF4
	0x039DC268 ADRP X0, 0x777000
	0x039DC26C LDR X0, [X0 + 0x230]
	0x039DC270 BL 0x1C16CF4
	0x039DC274 ADRP X0, 0x719000
	0x039DC278 LDR X0, [X0 + 0x3A0]
	0x039DC27C BL 0x1C16CF4
	0x039DC280 MOVZ W8, 0x1
	0x039DC284 STRB W8, [X22 + 0xD7E]
	0x039DC288 LDR X0, [X24]
	0x039DC28C MOVZ W1, 0x10
	0x039DC290 BL 0x1C16D6C
	0x039DC294 CBZ X0, 0x39DC5B4
	0x039DC298 LDR W8, [X0 + 0x18]
	0x039DC29C MOV X22, X0
	0x039DC2A0 CBZ W8, 0x39DC5B0
	0x039DC2A4 LDR X9, [X20]
	0x039DC2A8 CMP W8, 0x1
	0x039DC2AC STR X9, [X22 + 0x20]
	0x039DC2B0 B.EQ 0x39DC5B0
	0x039DC2B4 ADRP X8, 0x777000
	0x039DC2B8 LDR X8, [X8 + 0x218]
	0x039DC2BC ADD X0, X31, 0xC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0xA07000
	012 Move X19, 0x71B000
	013 Move W8, [X21+3445]
	014 Move X19, [X19+304]
	015 Move W23, W3
	016 Move X24, X2
	017 Move X25, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x723000
	024 Move X0, [X0+2160]
	025 Call 0x1C17CF4
	026 Move X0, 0x743000
	027 Move X0, [X0+2224]
	028 Call 0x1C17CF4
	029 Move X0, 0x719000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move X0, 0x719000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x71B000
	036 Move X0, [X0+304]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3445], W8
	040 Move X8, [X19]
	041 Move [X31+24], X31
	042 Move [X31+12], W31
	043 Compare X25, 0
	044 JumpIfEqual {49}
	045 Move X9, [X25]
	046 Move W10, [X8+304]
	047 Move W11, [X9+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X22, X31
	050 Move X9, [X9+200]
	051 Add X9, X9, X10
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move X26, 0x719000
	056 Move X26, [X26+1432]
	057 Compare X24, 0
	058 JumpIfEqual {63}
	059 Move X9, [X24]
	060 Move W10, [X8+304]
	061 Move W11, [X9+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X21, X31
	064 Move X9, [X9+200]
	065 Add X9, X9, X10
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X1, X25
	070 Move X2, X24
	071 Call Texture2DAtlas.GetTextureID, X0, X1, X2
	072 Move X1, X25
	073 Move X2, X24
	074 Move W19, W0
	075 Call Texture2DAtlas.GetTextureHash, X0, X1, X2
	076 Move X8, [X26]
	077 Move W24, W0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X25, 0x723000
	084 Move X25, [X25+2160]
	085 Move X0, X22
	086 Move X1, X31
	087 Move X2, X31
	088 Call Object.op_Inequality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {106}
	093 Move X0, [X26]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X21
	099 Move X1, X31
	100 Move X2, X31
	101 Call Object.op_Inequality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {224}
	106 Move X0, [X20+56]
	107 Compare X0, 0
	108 JumpIfEqual {307}
	109 Move X3, [X25]
	110 Add X2, X31, 28
	111 Move W1, W19
	112 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {214}
	117 Move X0, [X26]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X22
	123 Move X1, X31
	124 Move X2, X31
	125 Call Object.op_Inequality, X0, X1
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {170}
	130 Move X0, [X26]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X21
	136 Move X1, X31
	137 Move X2, X31
	138 Call Object.op_Inequality, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {170}
	143 Compare X22, 0
	144 JumpIfEqual {307}
	145 Move X0, X22
	146 Move X1, X31
	147 Call Texture.get_updateCount, X0
	148 Compare X21, 0
	149 JumpIfEqual {307}
	150 Move W23, W0
	151 Move X0, X21
	152 Move X1, X31
	153 Call Texture.get_updateCount, X0
	154 Move X25, 0x718000
	155 Move X25, [X25+1448]
	156 Move W24, W0
	157 Move X8, [X25]
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {163}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move W0, W23
	164 Move W1, W24
	165 Move X2, X31
	166 Call Math.Min, X0, X1
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Move W9, W0
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, [X26]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X22
	176 Move X1, X31
	177 Move X2, X31
	178 Call Object.op_Inequality, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {191}
	183 Compare X22, 0
	184 JumpIfEqual {307}
	185 Move X0, X22
	186 Move X1, X31
	187 Call Texture.get_updateCount, X0
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Move W9, W0
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X0, [X26]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X21
	197 Move X1, X31
	198 Move X2, X31
	199 Call Object.op_Inequality, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {223}
	204 Compare X21, 0
	205 JumpIfEqual {307}
	206 Move X0, X21
	207 Move X1, X31
	208 Call Texture.get_updateCount, X0
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Move W9, W0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X20, [X20+56]
	213 Move X0, X21
	214 Move X0, [X20+56]
	215 Compare X0, 0
	216 JumpIfEqual {307}
	217 Move X8, 0x742000
	218 Move X8, [X8+2224]
	219 Move W1, W19
	220 Move W2, W24
	221 Move X3, [X8]
	222 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	223 Move W0, W31
	224 Move X0, [X20+64]
	225 Compare X0, 0
	226 JumpIfEqual {307}
	227 Move X3, [X25]
	228 Add X2, X31, 24
	229 Move W1, W19
	230 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	231 Move W8, [X31+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {244}
	237 Move X0, [X20+64]
	238 Compare X0, 0
	239 JumpIfEqual {307}
	240 Move X8, 0x742000
	241 Move X8, [X8+2224]
	242 Move W1, W19
	243 Move W2, W19
	244 Move X0, [X20+56]
	245 Compare X0, 0
	246 JumpIfEqual {307}
	247 Move X3, [X25]
	248 Add X2, X31, 12
	249 Move W1, W19
	250 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {223}
	255 Move W8, [X31+12]
	256 Compare W8, 0
	257 JumpIfEqual {274}
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction CSET not yet implemented."
	260 And W0, W8, W23
	261 Move X20, [X20+56]
	262 Move X0, X22
	263 Move X1, X31
	264 Call Texture.get_updateCount, X0
	265 Compare X20, 0
	266 JumpIfEqual {307}
	267 Move X8, 0x742000
	268 Move X8, [X8+2224]
	269 Move W2, W0
	270 Move X0, X20
	271 Move W1, W19
	272 Move X3, [X8]
	273 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	274 Move W0, 1
	275 Move X20, [X31+80]
	276 Move X19, [X31+88]
	277 Move X22, [X31+64]
	278 Move X21, [X31+72]
	279 Move X24, [X31+48]
	280 Move X23, [X31+56]
	281 Move X26, [X31+32]
	282 Move X25, [X31+40]
	283 Move X30, [X31+16]
	284 Add X31, X31, 96
	285 Return X0
	286 Move X20, [X20+56]
	287 Move X0, X22
	288 Move X1, X31
	289 Call Texture.get_updateCount, X0
	290 Move W22, W0
	291 Move X0, X21
	292 Move X1, X31
	293 Call Texture.get_updateCount, X0
	294 Move X8, [X25]
	295 Move W21, W0
	296 Move W9, [X8+224]
	297 Compare W9, 0
	298 JumpIfNotEqual {301}
	299 Move X0, X8
	300 Call 0x1C17DFC
	301 Move W0, W22
	302 Move W1, W21
	303 Move X2, X31
	304 Call Math.Min, X0, X1
	305 Compare X20, 0
	306 JumpIfNotEqual {267}
	307 Call 0x1C17F20

Method: System.Boolean AddTexture(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture)

Disassembly:
	0x039DC2C0 MOV X1, X31
	0x039DC2C4 LDR X8, [X8]
	0x039DC2C8 STR X8, [X22 + 0x28]
	0x039DC2CC BL 0x337B6E0
	0x039DC2D0 LDR W8, [X22 + 0x18]
	0x039DC2D4 CMP W8, 0x2
	0x039DC2D8 B.LS 0x39DC5B0
	0x039DC2DC CMP W8, 0x3
	0x039DC2E0 STR X0, [X22 + 0x30]
	0x039DC2E4 B.EQ 0x39DC5B0
	0x039DC2E8 ADRP X9, 0x777000
	0x039DC2EC LDR X9, [X9 + 0x220]
	0x039DC2F0 LDR X9, [X9]
	0x039DC2F4 STR X9, [X22 + 0x38]
	0x039DC2F8 LDR X9, [X21 + 0x18]
	0x039DC2FC CBZ X9, 0x39DC5B4
	0x039DC300 LDR X9, [X9 + 0x10]
	0x039DC304 CBZ X9, 0x39DC5B4
	0x039DC308 LDR W10, [X9 + 0x18]
	0x039DC30C SXTH W24, W23
	0x039DC310 CMP W24, W10
	0x039DC314 B.CS 0x39DC5B0
	0x039DC318 CMP W8, 0x4
	0x039DC31C B.LS 0x39DC5B0
	0x039DC320 SXTH X23, W23
	0x039DC324 ADD X9, X9, X23, 0x5, LSL
	0x039DC328 LDRH W9, [X9 + 0x2A]
	0x039DC32C ADRP X10, 0x721000
	0x039DC330 ADRP X11, 0x722000
	0x039DC334 LDR X10, [X10 + 0xFF8]
	0x039DC338 LDR X11, [X11]
	0x039DC33C ANDS W31, W9, 0x1
	0x039DC340 CSEL X9, X10, X11, EQ
	0x039DC344 LDR X9, [X9]
	0x039DC348 CMP W8, 0x5
	0x039DC34C STR X9, [X22 + 0x40]
	0x039DC350 B.EQ 0x39DC5B0
	0x039DC354 ADRP X8, 0x777000
	0x039DC358 LDR X8, [X8 + 0x228]
	0x039DC35C LDR X8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X2
	008 Move X21, X1
	009 Move X1, X2
	010 Move X2, X3
	011 Move X19, X3
	012 Move X22, X0
	013 Call Texture2DAtlas.IsCached, X0, X1, X2
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move W0, 1
	023 Move X30, [X31+48]
	024 Move X23, [X31+56]
	025 Return X0
	026 Compare X19, 0
	027 JumpIfEqual {58}
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+392]
	031 Move X1, [X8+400]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, [X19]
	034 Move W23, W0
	035 Move X0, X19
	036 Move X9, [X8+424]
	037 Move X1, [X8+432]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X22]
	040 Move W5, W0
	041 Move X0, X22
	042 Move X1, X21
	043 Move X9, [X8+424]
	044 Move X7, [X8+432]
	045 Move X2, X20
	046 Move X3, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W6, TEMP
	054 Move W4, W23
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 CallNoReturn X9
	058 Call 0x1C17F20

Method: System.Boolean UpdateTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture oldTexture, UnityEngine.Texture newTexture, ref UnityEngine.Vector4 scaleOffset, UnityEngine.Vector4 sourceScaleOffset, System.Boolean updateIfNeeded = True, System.Boolean blitMips = True)

Disassembly:
	0x039DC360 STR X8, [X22 + 0x48]
	0x039DC364 LDR X8, [X21 + 0x18]
	0x039DC368 CBZ X8, 0x39DC5B4
	0x039DC36C LDR X8, [X8 + 0x10]
	0x039DC370 CBZ X8, 0x39DC5B4
	0x039DC374 LDR W9, [X8 + 0x18]
	0x039DC378 CMP W24, W9
	0x039DC37C B.CS 0x39DC5B0
	0x039DC380 ADD X8, X8, X23, 0x5, LSL
	0x039DC384 ADD X0, X8, 0x20
	0x039DC388 MOV X1, X31
	0x039DC38C BL 0x3379CF4
	0x039DC390 LDR W8, [X22 + 0x18]
	0x039DC394 CMP W8, 0x6
	0x039DC398 B.LS 0x39DC5B0
	0x039DC39C CMP W8, 0x7
	0x039DC3A0 STR X0, [X22 + 0x50]
	0x039DC3A4 B.EQ 0x39DC5B0
	0x039DC3A8 ADRP X25, 0x717000
	0x039DC3AC LDR X25, [X25 + 0x838]
	0x039DC3B0 LDR X8, [X25]
	0x039DC3B4 STR X8, [X22 + 0x58]
	0x039DC3B8 LDR X8, [X21 + 0x18]
	0x039DC3BC CBZ X8, 0x39DC5B4
	0x039DC3C0 LDR X8, [X8 + 0x10]
	0x039DC3C4 CBZ X8, 0x39DC5B4
	0x039DC3C8 LDR W9, [X8 + 0x18]
	0x039DC3CC CMP W24, W9
	0x039DC3D0 B.CS 0x39DC5B0
	0x039DC3D4 ADD X8, X8, X23, 0x5, LSL
	0x039DC3D8 ADD X0, X8, 0x30
	0x039DC3DC MOV X1, X31
	0x039DC3E0 BL 0x338FE24
	0x039DC3E4 LDR W8, [X22 + 0x18]
	0x039DC3E8 CMP W8, 0x8
	0x039DC3EC B.LS 0x39DC5B0
	0x039DC3F0 CMP W8, 0x9
	0x039DC3F4 STR X0, [X22 + 0x60]
	0x039DC3F8 B.EQ 0x39DC5B0
	0x039DC3FC ADRP X8, 0x719000
	0x039DC400 LDR X8, [X8 + 0x3A0]
	0x039DC404 LDR X8, [X8]
	0x039DC408 STR X8, [X22 + 0x68]
	0x039DC40C LDR X8, [X21 + 0x18]
	0x039DC410 CBZ X8, 0x39DC5B4
	0x039DC414 LDR X8, [X8 + 0x10]
	0x039DC418 CBZ X8, 0x39DC5B4
	0x039DC41C LDR W9, [X8 + 0x18]
	0x039DC420 CMP W24, W9
	0x039DC424 B.CS 0x39DC5B0
	0x039DC428 ADD X8, X8, X23, 0x5, LSL
	0x039DC42C ADD X0, X8, 0x34
	0x039DC430 MOV X1, X31
	0x039DC434 BL 0x338FE24
	0x039DC438 LDR W8, [X22 + 0x18]
	0x039DC43C CMP W8, 0xA
	0x039DC440 B.LS 0x39DC5B0
	0x039DC444 CMP W8, 0xB
	0x039DC448 STR X0, [X22 + 0x70]
	0x039DC44C B.EQ 0x39DC5B0
	0x039DC450 LDR X8, [X25]
	0x039DC454 STR X8, [X22 + 0x78]
	0x039DC458 LDR X8, [X21 + 0x18]
	0x039DC45C CBZ X8, 0x39DC5B4
	0x039DC460 LDR X8, [X8 + 0x10]
	0x039DC464 CBZ X8, 0x39DC5B4
	0x039DC468 LDR W9, [X8 + 0x18]
	0x039DC46C CMP W24, W9
	0x039DC470 B.CS 0x39DC5B0
	0x039DC474 ADD X8, X8, X23, 0x5, LSL
	0x039DC478 ADD X0, X8, 0x38
	0x039DC47C MOV X1, X31
	0x039DC480 BL 0x338FE24
	0x039DC484 LDR W8, [X22 + 0x18]
	0x039DC488 CMP W8, 0xC
	0x039DC48C B.LS 0x39DC5B0
	0x039DC490 CMP W8, 0xD
	0x039DC494 STR X0, [X22 + 0x80]
	0x039DC498 B.EQ 0x39DC5B0
	0x039DC49C LDR X8, [X25]
	0x039DC4A0 STR X8, [X22 + 0x88]
	0x039DC4A4 LDR X8, [X21 + 0x18]
	0x039DC4A8 CBZ X8, 0x39DC5B4
	0x039DC4AC LDR X8, [X8 + 0x10]
	0x039DC4B0 CBZ X8, 0x39DC5B4
	0x039DC4B4 LDR W9, [X8 + 0x18]
	0x039DC4B8 CMP W24, W9
	0x039DC4BC B.CS 0x39DC5B0
	0x039DC4C0 ADD X8, X8, X23, 0x5, LSL
	0x039DC4C4 ADD X0, X8, 0x3C
	0x039DC4C8 MOV X1, X31
	0x039DC4CC BL 0x338FE24
	0x039DC4D0 LDR W8, [X22 + 0x18]
	0x039DC4D4 CMP W8, 0xE
	0x039DC4D8 B.LS 0x39DC5B0

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, X1
	013 Move X1, X4
	014 Move W22, W6
	015 Move W24, W5
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move X23, X4
	021 Move X20, X3
	022 Move X19, X0
	023 Call Texture2DAtlas.IsCached, X0, X1, X2
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {68}
	028 Move TEMP, X24
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {124}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X1, X20
	035 Move W2, W31
	036 Move X9, [X8+456]
	037 Move X3, [X8+464]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {124}
	043 Move X1, X20
	044 Call Texture2DAtlas.Is2D, X0, X1
	045 Move S0, [X23]
	046 Move S1, [X23+4]
	047 Move S2, [X23+8]
	048 Move S3, [X23+12]
	049 Move X8, [X19]
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {105}
	054 Move X9, [X8+376]
	055 Move X5, [X8+384]
	056 And W3, W22, 1
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W4, TEMP
	060 Move X0, X19
	061 Move X1, X21
	062 Move X2, X20
	063 Move V4, V11
	064 Move V5, V10
	065 Move V6, V9
	066 Move V7, V8
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X20, 0
	069 JumpIfEqual {137}
	070 Move X8, [X20]
	071 Move X0, X20
	072 Move X9, [X8+392]
	073 Move X1, [X8+400]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20]
	076 Move W22, W0
	077 Move X0, X20
	078 Move X9, [X8+424]
	079 Move X1, [X8+432]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X19]
	082 Move W5, W0
	083 Move X0, X19
	084 Move X1, X21
	085 Move X9, [X8+424]
	086 Move X7, [X8+432]
	087 Move X2, X23
	088 Move X3, X20
	089 Move W4, W22
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X30, [X31+32]
	097 Move D9, [X31+16]
	098 Move D8, [X31+24]
	099 Move TEMP, 0
	100 Not TEMP
	101 Move W6, TEMP
	102 Move D11, [X31+96]
	103 Move D10, [X31+104]
	104 CallNoReturn X9
	105 Move X9, [X8+408]
	106 Move X5, [X8+416]
	107 And W3, W22, 1
	108 Move TEMP, 0
	109 Not TEMP
	110 Move W4, TEMP
	111 Move X0, X19
	112 Move X1, X21
	113 Move X2, X20
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Compare X20, 0
	116 JumpIfEqual {137}
	117 Move X0, X20
	118 Move X1, X31
	119 Call Object.GetInstanceID, X0
	120 Move W1, W0
	121 And W2, W22, 1
	122 Move X0, X19
	123 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	124 Move X20, [X31+80]
	125 Move X19, [X31+88]
	126 Move X22, [X31+64]
	127 Move X21, [X31+72]
	128 Move X24, [X31+48]
	129 Move X23, [X31+56]
	130 Move X30, [X31+32]
	131 Move D9, [X31+16]
	132 Move D8, [X31+24]
	133 Move W0, 1
	134 Move D11, [X31+96]
	135 Move D10, [X31+104]
	136 Return X0
	137 Call 0x1C17F20

Method: System.Boolean UpdateTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture texture, ref UnityEngine.Vector4 scaleOffset, System.Boolean updateIfNeeded = True, System.Boolean blitMips = True)

Disassembly:
	0x039DC4DC CMP W8, 0xF
	0x039DC4E0 STR X0, [X22 + 0x90]
	0x039DC4E4 B.EQ 0x39DC5B0
	0x039DC4E8 ADRP X8, 0x777000
	0x039DC4EC LDR X8, [X8 + 0x230]
	0x039DC4F0 MOV X0, X22
	0x039DC4F4 MOV X1, X31
	0x039DC4F8 LDR X8, [X8]
	0x039DC4FC STR X8, [X22 + 0x98]
	0x039DC500 BL 0x32278CC
	0x039DC504 STR X0, [X20]
	0x039DC508 LDR W8, [X31 + 0xC]
	0x039DC50C ADDS W31, W19, 0x1
	0x039DC510 B.EQ 0x39DC51C
	0x039DC514 CMP W8, W19
	0x039DC518 B.GE 0x39DC598
	0x039DC51C LDR X9, [X21 + 0x18]
	0x039DC520 CBZ X9, 0x39DC5B4
	0x039DC524 LDR X10, [X9 + 0x10]
	0x039DC528 CBZ X10, 0x39DC5B4
	0x039DC52C LDR W11, [X10 + 0x18]
	0x039DC530 CMP W24, W11
	0x039DC534 B.CS 0x39DC5B0
	0x039DC538 ADD X10, X10, X23, 0x5, LSL
	0x039DC53C LDRSH W2, [X10 + 0x24]
	0x039DC540 TBNZ X2, 0x1F, 0x39DC560
	0x039DC544 ADD W3, W8, 0x1
	0x039DC548 MOV X0, X21
	0x039DC54C MOV X1, X20
	0x039DC550 MOV W4, W19
	0x039DC554 BL 0x39DC1D8
	0x039DC558 LDR X9, [X21 + 0x18]
	0x039DC55C CBZ X9, 0x39DC5B4
	0x039DC560 LDR X8, [X9 + 0x10]
	0x039DC564 CBZ X8, 0x39DC5B4
	0x039DC568 LDR W9, [X8 + 0x18]
	0x039DC56C CMP W24, W9
	0x039DC570 B.CS 0x39DC5B0
	0x039DC574 ADD X8, X8, X23, 0x5, LSL
	0x039DC578 LDRSH W2, [X8 + 0x26]
	0x039DC57C TBNZ X2, 0x1F, 0x39DC598
	0x039DC580 LDR W8, [X31 + 0xC]
	0x039DC584 MOV X0, X21
	0x039DC588 MOV X1, X20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0xA06000
	011 Move X25, 0x777000
	012 Move W8, [X26+3446]
	013 Move X25, [X25+4048]
	014 Move W23, W5
	015 Move W24, W4
	016 Move X19, X3
	017 Move X20, X2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x777000
	025 Move X0, [X0+4048]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+3446], W8
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X25]
	035 Move X8, [X0+184]
	036 Move X9, [X22]
	037 And W5, W24, 1
	038 And W6, W23, 1
	039 Move S0, [X8]
	040 Move S1, [X8+4]
	041 Move S2, [X8+8]
	042 Move S3, [X8+12]
	043 Move X8, [X9+504]
	044 Move X7, [X9+512]
	045 Move X0, X22
	046 Move X1, X21
	047 Move X2, X20
	048 Move X3, X20
	049 Move X4, X19
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X24, [X31+32]
	055 Move X23, [X31+40]
	056 Move X26, [X31+16]
	057 Move X25, [X31+24]
	058 Move X30, [X31+80]
	059 CallNoReturn X8

Method: System.Boolean EnsureTextureSlot(out System.Boolean isUploadNeeded, ref UnityEngine.Vector4 scaleBias, System.Int32 key, System.Int32 width, System.Int32 height)

Disassembly:
	0x039DC58C MOV W4, W19
	0x039DC590 ADD W3, W8, 0x1
	0x039DC594 BL 0x39DC1D8
	0x039DC598 LDP X20, X19, [X31 + 0x40]
	0x039DC59C LDP X22, X21, [X31 + 0x30]
	0x039DC5A0 LDP X24, X23, [X31 + 0x20]
	0x039DC5A4 LDP X30, X25, [X31 + 0x10]
	0x039DC5A8 ADD X31, X31, 0x50
	0x039DC5AC RET
	0x039DC5B0 BL 0x1C16F28
	0x039DC5B4 BL 0x1C16F20
	0x039DC5B8 LDRH W8, [X0 + 0xA]
	0x039DC5BC AND W0, W8, 0x1
	0x039DC5C0 RET
	0x039DC5C4 MOVZ W8, 0xFFFF0000
	0x039DC5C8 STR W8, [X0 + 0x18]
	0x039DC5CC STR X31, [X0 + 0x10]
	0x039DC5D0 RET
	0x039DC5D4 STR X30, [X31 - 0x20]!
	0x039DC5D8 STP X20, X19, [X31 + 0x10]
	0x039DC5DC MOVI D0, 0xFFFFFFFFFFFF
	0x039DC5E0 STRH W1, [X0]
	0x039DC5E4 STRH W2, [X0 + 0x2]
	0x039DC5E8 STUR D0, [X0 + 0x4]
	0x039DC5EC ADRP X20, 0x9FC000
	0x039DC5F0 LDRB W8, [X20 + 0xE5A]
	0x039DC5F4 MOV X19, X0
	0x039DC5F8 CBNZ W8, 0x39DC610
	0x039DC5FC ADRP X0, 0x71E000
	0x039DC600 LDR X0, [X0 + 0x9A0]
	0x039DC604 BL 0x1C16CF4
	0x039DC608 MOVZ W8, 0x1
	0x039DC60C STRB W8, [X20 + 0xE5A]
	0x039DC610 ADRP X8, 0x71E000
	0x039DC614 LDR X8, [X8 + 0x9A0]
	0x039DC618 LDR X8, [X8]
	0x039DC61C LDR X8, [X8 + 0xB8]
	0x039DC620 LDR V0, [X8]
	0x039DC624 STR V0, [X19 + 0x1]
	0x039DC628 LDP X20, X19, [X31 + 0x10]
	0x039DC62C LDR X30, [X31], #0x20
	0x039DC630 RET
	0x039DC634 STR X30, [X31 - 0x10]!
	0x039DC638 LDR X8, [X0 + 0x10]
	0x039DC63C CBZ X8, 0x39DC668
	0x039DC640 LDR W9, [X8 + 0x18]
	0x039DC644 CMP W9, W1, SXTH
	0x039DC648 B.LS 0x39DC66C
	0x039DC64C LDRH W9, [X0 + 0x1A]
	0x039DC650 SXTH X10, W1
	0x039DC654 ADD X8, X8, X10, 0x5, LSL
	0x039DC658 STRH W9, [X8 + 0x28]
	0x039DC65C STRH W1, [X0 + 0x1A]
	0x039DC660 LDR X30, [X31], #0x10
	0x039DC664 RET
	0x039DC668 BL 0x1C16F20
	0x039DC66C BL 0x1C16F28
	0x039DC670 LDRH W8, [X0 + 0xA]
	0x039DC674 ORR W8, W8, 0x1
	0x039DC678 STRH W8, [X0 + 0xA]
	0x039DC67C RET
	0x039DC680 LDRH W8, [X0 + 0xA]
	0x039DC684 AND W8, W8, 0xFFFE
	0x039DC688 STRH W8, [X0 + 0xA]
	0x039DC68C RET
	0x039DC690 LDRSH W8, [X0 + 0x4]
	0x039DC694 ADDS W31, W8, 0x1
	0x039DC698 CSET W0, EQ
	0x039DC69C RET
	0x039DC6A0 STR X30, [X31 - 0x20]!
	0x039DC6A4 STP X20, X19, [X31 + 0x10]
	0x039DC6A8 LDRSH W8, [X0 + 0x4]
	0x039DC6AC ADDS W31, W8, 0x1
	0x039DC6B0 B.EQ 0x39DC734
	0x039DC6B4 MOV X20, X1
	0x039DC6B8 CBZ X1, 0x39DC740
	0x039DC6BC LDR X9, [X20 + 0x10]
	0x039DC6C0 CBZ X9, 0x39DC740
	0x039DC6C4 LDR W10, [X9 + 0x18]
	0x039DC6C8 CMP W8, W10
	0x039DC6CC B.CS 0x39DC744
	0x039DC6D0 SXTW X8, W8
	0x039DC6D4 ADD X8, X9, X8, 0x5, LSL
	0x039DC6D8 MOV X19, X0
	0x039DC6DC ADD X0, X8, 0x20
	0x039DC6E0 MOV X1, X20
	0x039DC6E4 BL 0x39DC6A0
	0x039DC6E8 LDR X8, [X20 + 0x10]
	0x039DC6EC CBZ X8, 0x39DC740
	0x039DC6F0 LDRSH W9, [X19 + 0x6]
	0x039DC6F4 LDR W10, [X8 + 0x18]
	0x039DC6F8 CMP W9, W10

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X25, 0xA06000
	011 Move W8, [X25+3447]
	012 Move W21, W5
	013 Move W23, W4
	014 Move W19, W3
	015 Move X20, X2
	016 Move X24, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x778000
	023 Move X0, [X0+464]
	024 Call 0x1C17CF4
	025 Move X0, 0x778000
	026 Move X0, [X0+456]
	027 Call 0x1C17CF4
	028 Move X0, 0x778000
	029 Move X0, [X0+448]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+3447], W8
	033 Move [X31+24], X31
	034 Move [X31+32], X31
	035 Move [X31+40], X31
	036 Move [X24], W31
	037 Move X0, [X22+48]
	038 Compare X0, 0
	039 JumpIfEqual {112}
	040 Move X8, 0x778000
	041 Move X8, [X8+456]
	042 Add X2, X31, 24
	043 Move W1, W19
	044 Move X3, [X8]
	045 Call Dictionary`2<Int32, ValueTuple`2<Vector4, Vector2Int>>.TryGetValue, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {52}
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move [X20], V0
	052 Move X0, [X22+40]
	053 Compare X0, 0
	054 JumpIfEqual {112}
	055 Move X1, X20
	056 Move W2, W23
	057 Move W3, W21
	058 Call AtlasAllocator.Allocate, X0, X1, X2, X3
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {101}
	063 Move W8, 1
	064 Move [X24], W8
	065 Move V1, [X22+24]
	066 Move X8, 0x778000
	067 Move X8, [X8+448]
	068 Move V2, [X20]
	069 Move V0, 0
	070 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	071 NotImplemented "Instruction INVALID not yet implemented."
	072 Move V0.D[1], V0.D[0]
	073 NotImplemented "Instruction INVALID not yet implemented."
	074 Move [X20], V0
	075 Move X2, [X8]
	076 Move X20, [X22+48]
	077 Move W1, W23
	078 NotImplemented "Instruction BFM not yet implemented."
	079 Move S1, V0.S[1]
	080 Move S2, V0.S[2]
	081 Move S3, V0.S[3]
	082 Add X0, X31, 0
	083 Move [X31], X31
	084 Move [X31+8], X31
	085 Move [X31+16], X31
	086 Call ValueTuple`2<Vector4, Vector2Int>..ctor, X0, X1, X2
	087 Compare X20, 0
	088 JumpIfEqual {112}
	089 Move X8, 0x778000
	090 Move X8, [X8+464]
	091 Move V0, [X31]
	092 Move X9, [X31+16]
	093 Add X2, X31, 48
	094 Move X3, [X8]
	095 Move X0, X20
	096 Move W1, W19
	097 Move [X31+3], V0
	098 Move [X31+64], X9
	099 Call Dictionary`2<Int32, ValueTuple`2<Vector4, Vector2Int>>.Add, X0, X1, X2
	100 Move W0, 1
	101 Move W0, W31
	102 Move X20, [X31+128]
	103 Move X19, [X31+136]
	104 Move X22, [X31+112]
	105 Move X21, [X31+120]
	106 Move X24, [X31+96]
	107 Move X23, [X31+104]
	108 Move X30, [X31+80]
	109 Move X25, [X31+88]
	110 Add X31, X31, 144
	111 Return X0
	112 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039DC6FC B.CS 0x39DC744
	0x039DC700 SXTW X9, W9
	0x039DC704 ADD X8, X8, X9, 0x5, LSL
	0x039DC708 ADD X0, X8, 0x20
	0x039DC70C MOV X1, X20
	0x039DC710 BL 0x39DC6A0
	0x039DC714 LDRH W1, [X19 + 0x4]
	0x039DC718 MOV X0, X20
	0x039DC71C BL 0x39DC634
	0x039DC720 LDRH W1, [X19 + 0x6]
	0x039DC724 MOV X0, X20
	0x039DC728 BL 0x39DC634
	0x039DC72C MOVN W8, 0x0
	0x039DC730 STR W8, [X19 + 0x4]
	0x039DC734 LDP X20, X19, [X31 + 0x10]
	0x039DC738 LDR X30, [X31], #0x20
	0x039DC73C RET
	0x039DC740 BL 0x1C16F20
	0x039DC744 BL 0x1C16F28
	0x039DC748 STR X30, [X31 - 0x10]!
	0x039DC74C CBZ X1, 0x39DC7C0
	0x039DC750 LDR X8, [X1 + 0x10]
	0x039DC754 CBZ X8, 0x39DC7C0
	0x039DC758 LDRSH W10, [X0 + 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA06000
	005 Move X19, 0x777000
	006 Move W8, [X20+3448]
	007 Move X19, [X19+4048]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x777000
	013 Move X0, [X0+4048]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3448], W8
	017 Move X8, [X19]
	018 Move X9, -49221632
	019 Move V0, [X9+142]
	020 Move W9, 10
	021 Move X8, [X8+184]
	022 Move [X8], V0
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move [X8+16], W9
	028 Move X30, [X31+32]
	029 Return 

