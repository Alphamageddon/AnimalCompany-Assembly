Type: UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory

Method: UnityEngine.Rendering.DebugUI/EnumField CreateComponentSelector(UnityEngine.Rendering.DebugDisplaySettingsVolume/SettingsPanel panel, System.Action`2<UnityEngine.Rendering.DebugUI/Field`1<System.Int32>, System.Int32> refresh)

Disassembly:
	0x039A29D4 MOV X2, X31
	0x039A29D8 LDR X1, [X8]
	0x039A29DC BL 0x3397820
	0x039A29E0 MOV X1, X31
	0x039A29E4 MOV X2, X31
	0x039A29E8 STR X0, [X23 + 0x10]
	0x039A29EC BL 0x32CE31C
	0x039A29F0 ADRP X8, 0x7AF000
	0x039A29F4 LDR X8, [X8 + 0x658]
	0x039A29F8 MOV W21, W0
	0x039A29FC LDR X8, [X8]
	0x039A2A00 MOV X0, X8
	0x039A2A04 BL 0x1C16F10
	0x039A2A08 MOV X22, X0
	0x039A2A0C BL 0x39A2BC0
	0x039A2A10 CBZ X22, 0x39A2BB0
	0x039A2A14 STR X20, [X22 + 0x28]
	0x039A2A18 TBZ X21, 0x0, 0x39A2B38
	0x039A2A1C ADRP X21, 0x7AF000
	0x039A2A20 LDR X21, [X21 + 0x650]
	0x039A2A24 LDR X0, [X21]
	0x039A2A28 LDR W8, [X0 + 0xE0]
	0x039A2A2C CBNZ W8, 0x39A2A38
	0x039A2A30 BL 0x1C16DFC
	0x039A2A34 LDR X0, [X21]
	0x039A2A38 LDR X8, [X0 + 0xB8]
	0x039A2A3C LDR X19, [X8 + 0x10]
	0x039A2A40 CBNZ X19, 0x39A2628
	0x039A2A44 LDR W8, [X0 + 0xE0]
	0x039A2A48 CBNZ W8, 0x39A2A54
	0x039A2A4C BL 0x1C16DFC
	0x039A2A50 LDR X0, [X21]
	0x039A2A54 ADRP X9, 0x7AF000
	0x039A2A58 LDR X8, [X0 + 0xB8]
	0x039A2A5C LDR X9, [X9 + 0x5E0]
	0x039A2A60 LDR X20, [X8]
	0x039A2A64 LDR X0, [X9]
	0x039A2A68 BL 0x1C16F10
	0x039A2A6C ADRP X8, 0x7AF000
	0x039A2A70 LDR X8, [X8 + 0x5F8]
	0x039A2A74 MOV X1, X20
	0x039A2A78 MOV X3, X31
	0x039A2A7C MOV X19, X0
	0x039A2A80 LDR X2, [X8]
	0x039A2A84 BL 0x2D27AA8
	0x039A2A88 LDR X8, [X21]
	0x039A2A8C LDR X8, [X8 + 0xB8]
	0x039A2A90 STR X19, [X8 + 0x10]
	0x039A2A94 B 0x39A2628
	0x039A2A98 STR X31, [X23 + 0x10]
	0x039A2A9C ADRP X8, 0x7AE000
	0x039A2AA0 LDR X8, [X8 + 0x768]
	0x039A2AA4 LDR X0, [X8]
	0x039A2AA8 BL 0x1C16F10
	0x039A2AAC MOV X22, X0
	0x039A2AB0 BL 0x39A2C94
	0x039A2AB4 CBZ X22, 0x39A2BB0
	0x039A2AB8 STR X20, [X22 + 0x28]
	0x039A2ABC ADRP X8, 0x75A000
	0x039A2AC0 LDR X8, [X8 + 0x940]
	0x039A2AC4 LDR X0, [X8]
	0x039A2AC8 BL 0x1C16F10
	0x039A2ACC ADRP X8, 0x7AF000
	0x039A2AD0 LDR X8, [X8 + 0x628]
	0x039A2AD4 MOV X1, X23
	0x039A2AD8 MOV X3, X31
	0x039A2ADC MOV X20, X0
	0x039A2AE0 LDR X2, [X8]
	0x039A2AE4 BL 0x2D27194
	0x039A2AE8 STR X20, [X22 + 0x48]
	0x039A2AEC ADRP X8, 0x751000
	0x039A2AF0 LDR X8, [X8 + 0xD28]
	0x039A2AF4 LDR X0, [X8]
	0x039A2AF8 BL 0x1C16F10
	0x039A2AFC ADRP X8, 0x7AF000
	0x039A2B00 LDR X8, [X8 + 0x630]
	0x039A2B04 MOV X1, X23
	0x039A2B08 MOV X3, X31
	0x039A2B0C MOV X20, X0
	0x039A2B10 LDR X2, [X8]
	0x039A2B14 BL 0x29818C8
	0x039A2B18 STR X20, [X22 + 0x50]
	0x039A2B1C STR X19, [X22 + 0x40]
	0x039A2B20 MOV X0, X22
	0x039A2B24 LDP X20, X19, [X31 + 0x30]
	0x039A2B28 LDP X22, X21, [X31 + 0x20]
	0x039A2B2C LDP X24, X23, [X31 + 0x10]
	0x039A2B30 LDP X30, X25, [X31], #0x40
	0x039A2B34 RET
	0x039A2B38 ADRP X8, 0x7AF000
	0x039A2B3C LDR X8, [X8 + 0x5E0]
	0x039A2B40 LDR X0, [X8]
	0x039A2B44 BL 0x1C16F10
	0x039A2B48 ADRP X8, 0x7AF000
	0x039A2B4C LDR X8, [X8 + 0x640]
	0x039A2B50 MOV X20, X0
	0x039A2B54 MOV X1, X23
	0x039A2B58 B 0x39A2B9C
	0x039A2B5C ADRP X8, 0x7AF000
	0x039A2B60 LDR X8, [X8 + 0x658]
	0x039A2B64 LDR X0, [X8]
	0x039A2B68 BL 0x1C16F10
	0x039A2B6C MOV X22, X0
	0x039A2B70 BL 0x39A2BC0
	0x039A2B74 CBZ X22, 0x39A2BB0
	0x039A2B78 STR X20, [X22 + 0x28]
	0x039A2B7C ADRP X8, 0x7AF000
	0x039A2B80 LDR X8, [X8 + 0x5E0]
	0x039A2B84 LDR X0, [X8]
	0x039A2B88 BL 0x1C16F10
	0x039A2B8C ADRP X8, 0x7AF000
	0x039A2B90 LDR X8, [X8 + 0x608]
	0x039A2B94 MOV X20, X0
	0x039A2B98 MOV X1, X21
	0x039A2B9C LDR X2, [X8]
	0x039A2BA0 MOV X3, X31
	0x039A2BA4 BL 0x2D27AA8
	0x039A2BA8 STR X20, [X22 + 0x48]
	0x039A2BAC B 0x39A2B1C
	0x039A2BB0 BL 0x1C16F20
	0x039A2BB4 BL 0x1C16F28
	0x039A2BB8 MOV X1, X31
	0x039A2BBC B 0x33BDD8C
	0x039A2BC0 STP X30, X21, [X31 - 0x20]!
	0x039A2BC4 STP X20, X19, [X31 + 0x10]
	0x039A2BC8 ADRP X21, 0xA3F000
	0x039A2BCC ADRP X20, 0x751000
	0x039A2BD0 LDRB W8, [X21 + 0xC09]
	0x039A2BD4 LDR X20, [X20 + 0x988]
	0x039A2BD8 MOV X19, X0
	0x039A2BDC TBNZ X8, 0x0, 0x39A2BF4
	0x039A2BE0 ADRP X0, 0x751000
	0x039A2BE4 LDR X0, [X0 + 0x988]
	0x039A2BE8 BL 0x1C16CF4
	0x039A2BEC MOVZ W8, 0x1
	0x039A2BF0 STRB W8, [X21 + 0xC09]
	0x039A2BF4 MOVZ W8, 0xCCCD
	0x039A2BF8 MOVK W8, 0x3DCC0000
	0x039A2BFC MOV X0, X19
	0x039A2C00 MOV X1, X31
	0x039A2C04 STR W8, [X19 + 0x50]
	0x039A2C08 BL 0x33BDD8C
	0x039A2C0C LDR X8, [X20]
	0x039A2C10 STR X8, [X19 + 0x28]
	0x039A2C14 LDP X20, X19, [X31 + 0x10]
	0x039A2C18 LDP X30, X21, [X31], #0x20
	0x039A2C1C RET
	0x039A2C20 MOV X1, X31
	0x039A2C24 B 0x33BDD8C
	0x039A2C28 STP X30, X21, [X31 - 0x20]!
	0x039A2C2C STP X20, X19, [X31 + 0x10]
	0x039A2C30 ADRP X21, 0xA3F000
	0x039A2C34 ADRP X20, 0x7AF000
	0x039A2C38 LDRB W8, [X21 + 0xC1B]
	0x039A2C3C LDR X20, [X20 + 0x660]
	0x039A2C40 MOV X19, X0
	0x039A2C44 TBNZ X8, 0x0, 0x39A2C5C
	0x039A2C48 ADRP X0, 0x7AF000
	0x039A2C4C LDR X0, [X0 + 0x660]
	0x039A2C50 BL 0x1C16CF4
	0x039A2C54 MOVZ W8, 0x1
	0x039A2C58 STRB W8, [X21 + 0xC1B]
	0x039A2C5C ADRP X8, 0xFFFFFFFFFD14B000
	0x039A2C60 LDR V0, [X8 + 0x860]
	0x039A2C64 MOVZ W8, 0x101
	0x039A2C68 MOVZ W9, 0x3
	0x039A2C6C STURH W8, [X19 + 0x61]
	0x039A2C70 STUR D0, [X19 + 0x64]
	0x039A2C74 STR W9, [X19 + 0x6C]
	0x039A2C78 LDR X1, [X20]
	0x039A2C7C MOV X0, X19
	0x039A2C80 LDP X20, X19, [X31 + 0x10]
	0x039A2C84 LDP X30, X21, [X31], #0x20
	0x039A2C88 B 0x2D19D38
	0x039A2C8C MOV X1, X31
	0x039A2C90 B 0x33BDD8C
	0x039A2C94 STP X30, X21, [X31 - 0x20]!
	0x039A2C98 STP X20, X19, [X31 + 0x10]
	0x039A2C9C ADRP X20, 0xA3F000
	0x039A2CA0 ADRP X21, 0x7AF000
	0x039A2CA4 LDRB W8, [X20 + 0xC0D]
	0x039A2CA8 LDR X21, [X21 + 0x668]
	0x039A2CAC MOV X19, X0
	0x039A2CB0 TBNZ X8, 0x0, 0x39A2CC8
	0x039A2CB4 ADRP X0, 0x7AF000
	0x039A2CB8 LDR X0, [X0 + 0x668]
	0x039A2CBC BL 0x1C16CF4
	0x039A2CC0 MOVZ W8, 0x1
	0x039A2CC4 STRB W8, [X20 + 0xC0D]
	0x039A2CC8 LDR X1, [X21]
	0x039A2CCC MOV X0, X19
	0x039A2CD0 LDP X20, X19, [X31 + 0x10]
	0x039A2CD4 LDP X30, X21, [X31], #0x20
	0x039A2CD8 B 0x2D19A00
	0x039A2CDC MOV X1, X31
	0x039A2CE0 B 0x33BDD8C
	0x039A2CE4 STP X29, X30, [X31 - 0x60]!
	0x039A2CE8 STP X28, X27, [X31 + 0x10]
	0x039A2CEC STP X26, X25, [X31 + 0x20]
	0x039A2CF0 STP X24, X23, [X31 + 0x30]
	0x039A2CF4 STP X22, X21, [X31 + 0x40]
	0x039A2CF8 STP X20, X19, [X31 + 0x50]
	0x039A2CFC ADRP X19, 0xA3F000
	0x039A2D00 ADRP X21, 0x7AF000
	0x039A2D04 LDRB W8, [X19 + 0xB8F]
	0x039A2D08 LDR X21, [X21 + 0x670]
	0x039A2D0C MOV X20, X0
	0x039A2D10 TBNZ X8, 0x0, 0x39A2EC0
	0x039A2D14 ADRP X0, 0x7AF000
	0x039A2D18 LDR X0, [X0 + 0x678]
	0x039A2D1C BL 0x1C16CF4
	0x039A2D20 ADRP X0, 0x7AF000
	0x039A2D24 LDR X0, [X0 + 0x538]
	0x039A2D28 BL 0x1C16CF4
	0x039A2D2C ADRP X0, 0x7AF000
	0x039A2D30 LDR X0, [X0 + 0x550]
	0x039A2D34 BL 0x1C16CF4
	0x039A2D38 ADRP X0, 0x75A000
	0x039A2D3C LDR X0, [X0 + 0x940]
	0x039A2D40 BL 0x1C16CF4
	0x039A2D44 ADRP X0, 0x7AF000
	0x039A2D48 LDR X0, [X0 + 0x5E0]
	0x039A2D4C BL 0x1C16CF4
	0x039A2D50 ADRP X0, 0x7AF000
	0x039A2D54 LDR X0, [X0 + 0x680]
	0x039A2D58 BL 0x1C16CF4
	0x039A2D5C ADRP X0, 0x751000
	0x039A2D60 LDR X0, [X0 + 0xE00]
	0x039A2D64 BL 0x1C16CF4
	0x039A2D68 ADRP X0, 0x7AF000
	0x039A2D6C LDR X0, [X0 + 0x688]
	0x039A2D70 BL 0x1C16CF4
	0x039A2D74 ADRP X0, 0x7AF000
	0x039A2D78 LDR X0, [X0 + 0x690]
	0x039A2D7C BL 0x1C16CF4
	0x039A2D80 ADRP X0, 0x751000
	0x039A2D84 LDR X0, [X0 + 0xE18]
	0x039A2D88 BL 0x1C16CF4
	0x039A2D8C ADRP X0, 0x7AF000
	0x039A2D90 LDR X0, [X0 + 0x698]
	0x039A2D94 BL 0x1C16CF4
	0x039A2D98 ADRP X0, 0x7AF000
	0x039A2D9C LDR X0, [X0 + 0x6A0]
	0x039A2DA0 BL 0x1C16CF4
	0x039A2DA4 ADRP X0, 0x7AF000
	0x039A2DA8 LDR X0, [X0 + 0x6A8]
	0x039A2DAC BL 0x1C16CF4
	0x039A2DB0 ADRP X0, 0x7AF000
	0x039A2DB4 LDR X0, [X0 + 0x6B0]
	0x039A2DB8 BL 0x1C16CF4
	0x039A2DBC ADRP X0, 0x751000
	0x039A2DC0 LDR X0, [X0 + 0x598]
	0x039A2DC4 BL 0x1C16CF4
	0x039A2DC8 ADRP X0, 0x7AE000
	0x039A2DCC LDR X0, [X0 + 0x7A0]
	0x039A2DD0 BL 0x1C16CF4
	0x039A2DD4 ADRP X0, 0x7AF000
	0x039A2DD8 LDR X0, [X0 + 0x6B8]
	0x039A2DDC BL 0x1C16CF4
	0x039A2DE0 ADRP X0, 0x7AF000
	0x039A2DE4 LDR X0, [X0 + 0x488]
	0x039A2DE8 BL 0x1C16CF4
	0x039A2DEC ADRP X0, 0x7AF000
	0x039A2DF0 LDR X0, [X0 + 0x6C0]
	0x039A2DF4 BL 0x1C16CF4
	0x039A2DF8 ADRP X0, 0x751000
	0x039A2DFC LDR X0, [X0 + 0x6C0]
	0x039A2E00 BL 0x1C16CF4
	0x039A2E04 ADRP X0, 0x7AF000
	0x039A2E08 LDR X0, [X0 + 0x6C8]
	0x039A2E0C BL 0x1C16CF4
	0x039A2E10 ADRP X0, 0x7AF000
	0x039A2E14 LDR X0, [X0 + 0x6D0]
	0x039A2E18 BL 0x1C16CF4
	0x039A2E1C ADRP X0, 0x7AF000
	0x039A2E20 LDR X0, [X0 + 0x6D8]
	0x039A2E24 BL 0x1C16CF4
	0x039A2E28 ADRP X0, 0x7AF000
	0x039A2E2C LDR X0, [X0 + 0x6E0]
	0x039A2E30 BL 0x1C16CF4
	0x039A2E34 ADRP X0, 0x7AF000
	0x039A2E38 LDR X0, [X0 + 0x6E8]
	0x039A2E3C BL 0x1C16CF4
	0x039A2E40 ADRP X0, 0x7AF000
	0x039A2E44 LDR X0, [X0 + 0x6F0]
	0x039A2E48 BL 0x1C16CF4
	0x039A2E4C ADRP X0, 0x7AF000
	0x039A2E50 LDR X0, [X0 + 0x670]
	0x039A2E54 BL 0x1C16CF4
	0x039A2E58 ADRP X0, 0x7AF000
	0x039A2E5C LDR X0, [X0 + 0x6F8]
	0x039A2E60 BL 0x1C16CF4
	0x039A2E64 ADRP X0, 0x7AF000
	0x039A2E68 LDR X0, [X0 + 0x700]
	0x039A2E6C BL 0x1C16CF4
	0x039A2E70 ADRP X0, 0x7AF000
	0x039A2E74 LDR X0, [X0 + 0x708]
	0x039A2E78 BL 0x1C16CF4
	0x039A2E7C ADRP X0, 0x7AF000
	0x039A2E80 LDR X0, [X0 + 0x650]
	0x039A2E84 BL 0x1C16CF4
	0x039A2E88 ADRP X0, 0x7AF000
	0x039A2E8C LDR X0, [X0 + 0x658]
	0x039A2E90 BL 0x1C16CF4
	0x039A2E94 ADRP X0, 0x7AF000
	0x039A2E98 LDR X0, [X0 + 0x710]
	0x039A2E9C BL 0x1C16CF4
	0x039A2EA0 ADRP X0, 0x77B000
	0x039A2EA4 LDR X0, [X0 + 0xFC0]
	0x039A2EA8 BL 0x1C16CF4
	0x039A2EAC ADRP X0, 0x7AF000
	0x039A2EB0 LDR X0, [X0 + 0x718]
	0x039A2EB4 BL 0x1C16CF4
	0x039A2EB8 MOVZ W8, 0x1
	0x039A2EBC STRB W8, [X19 + 0xB8F]
	0x039A2EC0 LDR X0, [X21]
	0x039A2EC4 BL 0x1C16F10
	0x039A2EC8 MOV X1, X31
	0x039A2ECC MOV X19, X0
	0x039A2ED0 BL 0x33BDD8C
	0x039A2ED4 CBZ X19, 0x39A3AC0
	0x039A2ED8 ADRP X8, 0x7AF000
	0x039A2EDC LDR X8, [X8 + 0x6C0]
	0x039A2EE0 STR X20, [X19 + 0x10]
	0x039A2EE4 ADRP X23, 0x7AF000
	0x039A2EE8 LDR X0, [X8]
	0x039A2EEC LDR X23, [X23 + 0x488]
	0x039A2EF0 BL 0x1C16F10
	0x039A2EF4 MOV X20, X0
	0x039A2EF8 BL 0x39A3C10
	0x039A2EFC LDR X0, [X23]
	0x039A2F00 LDR W8, [X0 + 0xE0]
	0x039A2F04 CBNZ W8, 0x39A2F0C
	0x039A2F08 BL 0x1C16DFC
	0x039A2F0C CBZ X20, 0x39A3AC0
	0x039A2F10 LDR X8, [X23]
	0x039A2F14 MOVZ W9, 0x1
	0x039A2F18 LDR X8, [X8 + 0xB8]
	0x039A2F1C LDR X8, [X8 + 0x10]
	0x039A2F20 STRB W9, [X20 + 0x50]
	0x039A2F24 STR X8, [X20 + 0x28]
	0x039A2F28 LDR X8, [X19 + 0x10]
	0x039A2F2C STR X20, [X19 + 0x50]
	0x039A2F30 CBZ X8, 0x39A3AC0
	0x039A2F34 LDR X20, [X8 + 0x10]
	0x039A2F38 CBZ X20, 0x39A3AC0
	0x039A2F3C ADRP X22, 0x7AF000
	0x039A2F40 LDR X8, [X20]
	0x039A2F44 LDR X22, [X22 + 0x698]
	0x039A2F48 ADRP X21, 0x751000
	0x039A2F4C LDRH W9, [X8 + 0x12E]
	0x039A2F50 LDR X1, [X22]
	0x039A2F54 LDR X21, [X21 + 0x6C0]
	0x039A2F58 CBZ X9, 0x39A2F7C
	0x039A2F5C LDR X10, [X8 + 0xB0]
	0x039A2F60 ADD X10, X10, 0x8
	0x039A2F64 LDUR X11, [X10 - 0x8]
	0x039A2F68 CMP X11, X1
	0x039A2F6C B.EQ 0x39A2F8C
	0x039A2F70 SUBS X9, X9, 0x1
	0x039A2F74 ADD X10, X10, 0x10
	0x039A2F78 B.NE 0x39A2F64
	0x039A2F7C MOVZ W2, 0x9
	0x039A2F80 MOV X0, X20
	0x039A2F84 BL 0x1C5C788
	0x039A2F88 B 0x39A2F9C
	0x039A2F8C LDR W9, [X10]
	0x039A2F90 ADD W9, W9, 0x9
	0x039A2F94 ADD X8, X8, W9, 0x4, SXTW
	0x039A2F98 ADD X0, X8, 0x138
	0x039A2F9C LDP X8, X1, [X0]
	0x039A2FA0 MOV X0, X20
	0x039A2FA4 BLR X8
	0x039A2FA8 STR X0, [X19 + 0x38]
	0x039A2FAC MOV X20, X0
	0x039A2FB0 LDR X0, [X21]
	0x039A2FB4 LDR W8, [X0 + 0xE0]
	0x039A2FB8 CBNZ W8, 0x39A2FC0
	0x039A2FBC BL 0x1C16DFC
	0x039A2FC0 MOV X0, X20
	0x039A2FC4 MOV X1, X31
	0x039A2FC8 MOV X2, X31
	0x039A2FCC BL 0x3395194
	0x039A2FD0 TBNZ X0, 0x0, 0x39A3B08
	0x039A2FD4 LDR X8, [X19 + 0x10]
	0x039A2FD8 CBZ X8, 0x39A3AC0
	0x039A2FDC LDR X20, [X8 + 0x10]
	0x039A2FE0 CBZ X20, 0x39A3AC0
	0x039A2FE4 LDR X8, [X20]
	0x039A2FE8 LDR X1, [X22]
	0x039A2FEC LDRH W9, [X8 + 0x12E]
	0x039A2FF0 CBZ X9, 0x39A3014
	0x039A2FF4 LDR X10, [X8 + 0xB0]
	0x039A2FF8 ADD X10, X10, 0x8
	0x039A2FFC LDUR X11, [X10 - 0x8]
	0x039A3000 CMP X11, X1
	0x039A3004 B.EQ 0x39A3024
	0x039A3008 SUBS X9, X9, 0x1
	0x039A300C ADD X10, X10, 0x10
	0x039A3010 B.NE 0x39A2FFC
	0x039A3014 MOVZ W2, 0x6
	0x039A3018 MOV X0, X20
	0x039A301C BL 0x1C5C788
	0x039A3020 B 0x39A3034
	0x039A3024 LDR W9, [X10]
	0x039A3028 ADD W9, W9, 0x6
	0x039A302C ADD X8, X8, W9, 0x4, SXTW
	0x039A3030 ADD X0, X8, 0x138
	0x039A3034 LDP X8, X1, [X0]
	0x039A3038 MOV X0, X20
	0x039A303C BLR X8
	0x039A3040 CBNZ X0, 0x39A3070
	0x039A3044 ADRP X8, 0x77A000
	0x039A3048 LDR X8, [X8 + 0xFC0]
	0x039A304C LDR X0, [X8]
	0x039A3050 LDR W8, [X0 + 0xE0]
	0x039A3054 CBNZ W8, 0x39A305C
	0x039A3058 BL 0x1C16DFC
	0x039A305C MOV X0, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0xA40000
	015 Move X19, 0x7B0000
	016 Move W8, [X20+2956]
	017 Move X19, [X19+1216]
	018 Move X29, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {110}
	024 Move X0, 0x756000
	025 Move X0, [X0+2816]
	026 Call 0x1C17CF4
	027 Move X0, 0x7B0000
	028 Move X0, [X0+1224]
	029 Call 0x1C17CF4
	030 Move X0, 0x7B0000
	031 Move X0, [X0+224]
	032 Call 0x1C17CF4
	033 Move X0, 0x7B0000
	034 Move X0, [X0+232]
	035 Call 0x1C17CF4
	036 Move X0, 0x7B0000
	037 Move X0, [X0+1232]
	038 Call 0x1C17CF4
	039 Move X0, 0x7B0000
	040 Move X0, [X0+1240]
	041 Call 0x1C17CF4
	042 Move X0, 0x7B0000
	043 Move X0, [X0+1248]
	044 Call 0x1C17CF4
	045 Move X0, 0x7B0000
	046 Move X0, [X0+240]
	047 Call 0x1C17CF4
	048 Move X0, 0x7B0000
	049 Move X0, [X0+248]
	050 Call 0x1C17CF4
	051 Move X0, 0x798000
	052 Move X0, [X0+1696]
	053 Call 0x1C17CF4
	054 Move X0, 0x77D000
	055 Move X0, [X0+3024]
	056 Call 0x1C17CF4
	057 Move X0, 0x7B0000
	058 Move X0, [X0+1256]
	059 Call 0x1C17CF4
	060 Move X0, 0x753000
	061 Move X0, [X0+3600]
	062 Call 0x1C17CF4
	063 Move X0, 0x77D000
	064 Move X0, [X0+3080]
	065 Call 0x1C17CF4
	066 Move X0, 0x7B0000
	067 Move X0, [X0+1264]
	068 Call 0x1C17CF4
	069 Move X0, 0x753000
	070 Move X0, [X0+3608]
	071 Call 0x1C17CF4
	072 Move X0, 0x77D000
	073 Move X0, [X0+3088]
	074 Call 0x1C17CF4
	075 Move X0, 0x756000
	076 Move X0, [X0+2928]
	077 Call 0x1C17CF4
	078 Move X0, 0x7B0000
	079 Move X0, [X0+1272]
	080 Call 0x1C17CF4
	081 Move X0, 0x753000
	082 Move X0, [X0+3632]
	083 Call 0x1C17CF4
	084 Move X0, 0x7B0000
	085 Move X0, [X0+1280]
	086 Call 0x1C17CF4
	087 Move X0, 0x7B0000
	088 Move X0, [X0+1160]
	089 Call 0x1C17CF4
	090 Move X0, 0x7B0000
	091 Move X0, [X0+1144]
	092 Call 0x1C17CF4
	093 Move X0, 0x7B0000
	094 Move X0, [X0+1288]
	095 Call 0x1C17CF4
	096 Move X0, 0x7B0000
	097 Move X0, [X0+1296]
	098 Call 0x1C17CF4
	099 Move X0, 0x7B0000
	100 Move X0, [X0+1304]
	101 Call 0x1C17CF4
	102 Move X0, 0x7B0000
	103 Move X0, [X0+1312]
	104 Call 0x1C17CF4
	105 Move X0, 0x7B0000
	106 Move X0, [X0+1216]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X20+2956], W8
	110 Move X0, [X19]
	111 NotImplemented "Instruction MOVI not yet implemented."
	112 Move [X31+32], V0
	113 Move [X31+40], V0
	114 Call 0x1C17F10
	115 Move X1, X31
	116 Move X20, X0
	117 Call Object..ctor, X0
	118 Compare X20, 0
	119 JumpIfEqual {411}
	120 Move X8, 0x7B0000
	121 Move X8, [X8+1280]
	122 Move [X20+16], X21
	123 Move X21, 0x7B0000
	124 Move X19, 0x7B0000
	125 Move X0, [X8]
	126 Move X21, [X21+1272]
	127 Move X19, [X19+1144]
	128 Call 0x1C17F10
	129 Move X1, [X21]
	130 Move X21, X0
	131 Call List`1<Object>..ctor, X0
	132 Move X0, [X19]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Compare X21, 0
	138 JumpIfEqual {411}
	139 Move X8, [X19]
	140 Move X27, 0x77D000
	141 Move X9, [X8+184]
	142 Move X27, [X27+3080]
	143 Move W10, [X21+28]
	144 Move X8, [X21+16]
	145 Move X1, [X9]
	146 Move X9, [X27]
	147 Add W10, W10, 1
	148 Move [X21+28], W10
	149 Compare X8, 0
	150 JumpIfEqual {411}
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Move W11, [X8+24]
	153 Move X22, 0x753000
	154 Move X19, 0x756000
	155 Move X22, [X22+3632]
	156 Move X19, [X19+2928]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add W9, W10, 1
	159 Add X8, X8, X10
	160 Move [X21+24], W9
	161 Move [X8+32], X1
	162 Move X8, [X9+32]
	163 Move X0, X21
	164 Move X8, [X8+192]
	165 Move X2, [X8+112]
	166 Call List`1<Object>.AddWithResize, X0, X1
	167 Move X0, [X22]
	168 Call 0x1C17F10
	169 Move X1, [X19]
	170 Move X22, X0
	171 Call List`1<Int32>..ctor, X0
	172 Compare X22, 0
	173 JumpIfEqual {411}
	174 Move X19, 0x753000
	175 Move X19, [X19+3600]
	176 Move W10, [X22+28]
	177 Move X8, [X22+16]
	178 Move X9, [X19]
	179 Add W10, W10, 1
	180 Move [X22+28], W10
	181 Compare X8, 0
	182 JumpIfEqual {411}
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Move W11, [X8+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add W9, W10, 1
	187 Add X8, X8, X10
	188 Move [X22+24], W9
	189 Move [X8+32], W31
	190 Move X8, [X9+32]
	191 Move X0, X22
	192 Move W1, W31
	193 Move X8, [X8+192]
	194 Move X2, [X8+112]
	195 Call List`1<Int32>.AddWithResize, X0, X1
	196 Move X8, [X20+16]
	197 Compare X8, 0
	198 JumpIfEqual {411}
	199 Move X8, [X8+32]
	200 Compare X8, 0
	201 JumpIfEqual {411}
	202 Move X23, [X8+16]
	203 Compare X23, 0
	204 JumpIfEqual {411}
	205 Move X10, 0x7B0000
	206 Move X8, [X23]
	207 Move X10, [X10+1256]
	208 NotImplemented "Instruction LDRH not yet implemented."
	209 Move X1, [X10]
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 1
	219 Move X0, X23
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 1
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X23
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Compare X0, 0
	230 JumpIfEqual {411}
	231 Move X8, 0x7B0000
	232 Move X8, [X8+1264]
	233 Move X26, 0x7B0000
	234 Move X28, 0x77D000
	235 Move X26, [X26+1240]
	236 Move X28, [X28+3024]
	237 Move X1, [X8]
	238 Add X8, X31, 0
	239 Call List`1<ValueTuple`2<Object, Object>>.GetEnumerator, X0
	240 Move V0, [X31]
	241 Move V1, [X31+16]
	242 Move W23, 1
	243 Move [X31+32], V0
	244 Move [X31+40], V1
	245 Move X1, [X26]
	246 Add X0, X31, 32
	247 Call Enumerator<ValueTuple`2<Object, Object>>.MoveNext, X0
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {307}
	252 Move X25, [X31+48]
	253 Move X0, [X28]
	254 Call 0x1C17F10
	255 Move X24, X0
	256 Move X1, X31
	257 Call GUIContent..ctor, X0
	258 Compare X24, 0
	259 JumpIfEqual {409}
	260 Move X0, X24
	261 Move X1, X25
	262 Move X2, X31
	263 Call GUIContent.set_text, X0, X1
	264 Move W10, [X21+28]
	265 Move X8, [X21+16]
	266 Move X9, [X27]
	267 Add W10, W10, 1
	268 Move [X21+28], W10
	269 Compare X8, 0
	270 JumpIfEqual {410}
	271 NotImplemented "Instruction LDRSW not yet implemented."
	272 Move W11, [X8+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Add W9, W10, 1
	275 Add X8, X8, X10
	276 Move [X21+24], W9
	277 Move [X8+32], X24
	278 Move X8, [X9+32]
	279 Move X8, [X8+192]
	280 Move X2, [X8+112]
	281 Move X0, X21
	282 Move X1, X24
	283 Call List`1<Object>.AddWithResize, X0, X1
	284 Move W10, [X22+28]
	285 Move X8, [X22+16]
	286 Move X9, [X19]
	287 Add W10, W10, 1
	288 Move [X22+28], W10
	289 Compare X8, 0
	290 JumpIfEqual {408}
	291 NotImplemented "Instruction LDRSW not yet implemented."
	292 Move W11, [X8+24]
	293 Add W24, W23, 1
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Add W9, W10, 1
	296 Add X8, X8, X10
	297 Move [X22+24], W9
	298 Move [X8+32], W23
	299 Move W23, W24
	300 Move X8, [X9+32]
	301 Move X8, [X8+192]
	302 Move X2, [X8+112]
	303 Move X0, X22
	304 Move W1, W23
	305 Call List`1<Int32>.AddWithResize, X0, X1
	306 Move W23, W24
	307 Move X8, 0x7B0000
	308 Move X8, [X8+1232]
	309 Add X0, X31, 32
	310 Move X1, [X8]
	311 Call Enumerator<ValueTuple`2<Object, Object>>.Dispose, X0
	312 Move X8, 0x7B0000
	313 Move X8, [X8+232]
	314 Move X0, [X8]
	315 Call 0x1C17F10
	316 Move X23, X0
	317 Call EnumField..ctor, X0
	318 Move X19, 0x7B0000
	319 Move X19, [X19+1160]
	320 Move X0, [X19]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Compare X23, 0
	326 JumpIfEqual {411}
	327 Move X8, [X19]
	328 Move X25, 0x798000
	329 Move X8, [X8+184]
	330 Move X8, [X8+24]
	331 Move [X23+40], X8
	332 Move X25, [X25+1696]
	333 Move X0, [X25]
	334 Call 0x1C17F10
	335 Move X8, 0x7B0000
	336 Move X8, [X8+1288]
	337 Move X1, X20
	338 Move X3, X31
	339 Move X24, X0
	340 Move X2, [X8]
	341 Call Func`1<Int32>..ctor, X0, X1, X2
	342 Move [X23+72], X24
	343 Move X19, 0x756000
	344 Move X19, [X19+2816]
	345 Move X0, [X19]
	346 Call 0x1C17F10
	347 Move X8, 0x7B0000
	348 Move X8, [X8+1296]
	349 Move X1, X20
	350 Move X3, X31
	351 Move X24, X0
	352 Move X2, [X8]
	353 Call Action`1<Int32>..ctor, X0, X1, X2
	354 Move [X23+80], X24
	355 Move X8, 0x77D000
	356 Move X8, [X8+3088]
	357 Move X0, X21
	358 Move X1, [X8]
	359 Call List`1<Object>.ToArray, X0
	360 Move [X23+96], X0
	361 Move X8, 0x753000
	362 Move X8, [X8+3608]
	363 Move X0, X22
	364 Move X1, [X8]
	365 Call List`1<Int32>.ToArray, X0
	366 Move X8, 0x7B0000
	367 Move X8, [X8+224]
	368 Move X1, X0
	369 Move X0, X23
	370 Move X2, [X8]
	371 Call 0x2BAA724, X0, X1
	372 Move X0, [X25]
	373 Call 0x1C17F10
	374 Move X8, 0x7B0000
	375 Move X8, [X8+1304]
	376 Move X1, X20
	377 Move X3, X31
	378 Move X21, X0
	379 Move X2, [X8]
	380 Call Func`1<Int32>..ctor, X0, X1, X2
	381 Move [X23+128], X21
	382 Move X0, [X19]
	383 Call 0x1C17F10
	384 Move X8, 0x7B0000
	385 Move X8, [X8+1312]
	386 Move X1, X20
	387 Move X3, X31
	388 Move X21, X0
	389 Move X2, [X8]
	390 Call Action`1<Int32>..ctor, X0, X1, X2
	391 Move [X23+136], X21
	392 Move [X23+88], X29
	393 Move X0, X23
	394 Move X20, [X31+144]
	395 Move X19, [X31+152]
	396 Move X22, [X31+128]
	397 Move X21, [X31+136]
	398 Move X24, [X31+112]
	399 Move X23, [X31+120]
	400 Move X26, [X31+96]
	401 Move X25, [X31+104]
	402 Move X28, [X31+80]
	403 Move X27, [X31+88]
	404 Move X29, [X31+64]
	405 Move X30, [X31+72]
	406 Add X31, X31, 160
	407 Return X0
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Call 0x1C17F20
	412 Move X23, X0
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move X0, X23
	415 Call 0x3EB2AD0
	416 Move X24, [X0]
	417 Call 0x3EB2AE0
	418 Move X8, 0x7AF000
	419 Move X8, [X8+1232]
	420 Add X0, X31, 32
	421 Move X1, [X8]
	422 Call Enumerator<ValueTuple`2<Object, Object>>.Dispose, X0
	423 Compare X24, 0
	424 JumpIfEqual {312}
	425 Move X0, X24
	426 Call 0x1C17F18
	427 Move X24, X31
	428 Move X23, X0
	429 Move X8, 0x7AF000
	430 Move X8, [X8+1232]
	431 Move X1, [X8]
	432 Add X0, X31, 32
	433 Call Enumerator<ValueTuple`2<Object, Object>>.Dispose, X0
	434 Compare X24, 0
	435 JumpIfNotEqual {438}
	436 Move X0, X23
	437 Call 0x1D2D690
	438 Move X0, X24
	439 Call 0x1C17F18
	440 Call 0x1991590

Method: UnityEngine.Rendering.DebugUI/ObjectPopupField CreateCameraSelector(UnityEngine.Rendering.DebugDisplaySettingsVolume/SettingsPanel panel, System.Action`2<UnityEngine.Rendering.DebugUI/Field`1<UnityEngine.Object>, UnityEngine.Object> refresh)

Disassembly:
	0x039A3068 LDR X0, [X0 + 0x10]
	0x039A306C CBZ X0, 0x39A3AC0
	0x039A3070 LDR X1, [X19 + 0x38]
	0x039A3074 MOV X2, X31
	0x039A3078 BL 0x39F18E8
	0x039A307C STR X0, [X19 + 0x28]
	0x039A3080 ADRP X8, 0x750000
	0x039A3084 LDR X8, [X8 + 0x598]
	0x039A3088 MOV X20, X0
	0x039A308C LDR X0, [X8]
	0x039A3090 LDR W8, [X0 + 0xE0]
	0x039A3094 CBNZ W8, 0x39A309C
	0x039A3098 BL 0x1C16DFC
	0x039A309C MOV X0, X20
	0x039A30A0 MOV X1, X31
	0x039A30A4 MOV X2, X31
	0x039A30A8 BL 0x3C3883C
	0x039A30AC TBNZ X0, 0x0, 0x39A3B08
	0x039A30B0 LDR X8, [X19 + 0x10]
	0x039A30B4 CBZ X8, 0x39A3AC0
	0x039A30B8 LDR X20, [X8 + 0x10]
	0x039A30BC CBZ X20, 0x39A3AC0
	0x039A30C0 LDR X8, [X20]
	0x039A30C4 LDR X1, [X22]
	0x039A30C8 LDRH W9, [X8 + 0x12E]
	0x039A30CC CBZ X9, 0x39A30F0
	0x039A30D0 LDR X10, [X8 + 0xB0]
	0x039A30D4 ADD X10, X10, 0x8
	0x039A30D8 LDUR X11, [X10 - 0x8]
	0x039A30DC CMP X11, X1
	0x039A30E0 B.EQ 0x39A3100
	0x039A30E4 SUBS X9, X9, 0x1
	0x039A30E8 ADD X10, X10, 0x10
	0x039A30EC B.NE 0x39A30D8
	0x039A30F0 MOVZ W2, 0xB
	0x039A30F4 MOV X0, X20
	0x039A30F8 BL 0x1C5C788
	0x039A30FC B 0x39A3110
	0x039A3100 LDR W9, [X10]
	0x039A3104 ADD W9, W9, 0xB
	0x039A3108 ADD X8, X8, W9, 0x4, SXTW
	0x039A310C ADD X0, X8, 0x138
	0x039A3110 LDP X8, X1, [X0]
	0x039A3114 MOV X0, X20
	0x039A3118 BLR X8
	0x039A311C LDR X8, [X19 + 0x38]
	0x039A3120 STR X0, [X19 + 0x30]
	0x039A3124 MOV X1, X31
	0x039A3128 MOV X0, X8
	0x039A312C BL 0x3C36DE8
	0x039A3130 CBZ X0, 0x39A3190
	0x039A3134 ADRP X8, 0x7AE000
	0x039A3138 LDR X8, [X8 + 0x710]
	0x039A313C LDR X9, [X0]
	0x039A3140 LDR X1, [X8]
	0x039A3144 LDRB W10, [X9 + 0x130]
	0x039A3148 LDRB W8, [X1 + 0x130]
	0x039A314C CMP W10, W8
	0x039A3150 B.CC 0x39A318C
	0x039A3154 LDR X10, [X9 + 0xC8]
	0x039A3158 SUB X9, X8, 0x1
	0x039A315C LDR X10, [X10, X9, LSL #3]
	0x039A3160 CMP X10, X1
	0x039A3164 B.NE 0x39A318C
	0x039A3168 STR X0, [X19 + 0x40]
	0x039A316C LDR X10, [X0]
	0x039A3170 LDRB W11, [X10 + 0x130]
	0x039A3174 CMP W11, W8
	0x039A3178 B.CC 0x39A318C
	0x039A317C LDR X8, [X10 + 0xC8]
	0x039A3180 LDR X8, [X8, X9, LSL #3]
	0x039A3184 CMP X8, X1
	0x039A3188 B.EQ 0x39A3194
	0x039A318C BL 0x1C171E0
	0x039A3190 STR X0, [X19 + 0x40]
	0x039A3194 ADRP X25, 0x7AE000
	0x039A3198 LDR X25, [X25 + 0x6B8]
	0x039A319C LDR X0, [X25]
	0x039A31A0 BL 0x1C16F10
	0x039A31A4 MOV X20, X0
	0x039A31A8 BL 0x39A3C60
	0x039A31AC LDR X0, [X23]
	0x039A31B0 LDR W8, [X0 + 0xE0]
	0x039A31B4 CBNZ W8, 0x39A31BC
	0x039A31B8 BL 0x1C16DFC
	0x039A31BC CBZ X20, 0x39A3AC0
	0x039A31C0 LDR X8, [X23]
	0x039A31C4 MOVZ W9, 0x1
	0x039A31C8 LDR X21, [X20 + 0x48]
	0x039A31CC LDR X8, [X8 + 0xB8]
	0x039A31D0 LDR X8, [X8 + 0x28]
	0x039A31D4 STRB W9, [X20 + 0x50]
	0x039A31D8 STR X8, [X20 + 0x28]
	0x039A31DC ADRP X8, 0x7AE000
	0x039A31E0 LDR X8, [X8 + 0x658]
	0x039A31E4 LDR X0, [X8]
	0x039A31E8 BL 0x1C16F10
	0x039A31EC MOV X22, X0
	0x039A31F0 BL 0x39A2BC0
	0x039A31F4 CBZ X22, 0x39A3AC0
	0x039A31F8 LDR X8, [X23]
	0x039A31FC ADRP X26, 0x7AE000
	0x039A3200 LDR X8, [X8 + 0xB8]
	0x039A3204 LDR X8, [X8 + 0x30]
	0x039A3208 STR X8, [X22 + 0x28]
	0x039A320C LDR X26, [X26 + 0x650]
	0x039A3210 LDR X0, [X26]
	0x039A3214 LDR W8, [X0 + 0xE0]
	0x039A3218 CBNZ W8, 0x39A3224
	0x039A321C BL 0x1C16DFC
	0x039A3220 LDR X0, [X26]
	0x039A3224 LDR X8, [X0 + 0xB8]
	0x039A3228 LDR X23, [X8 + 0x18]
	0x039A322C CBNZ X23, 0x39A3280
	0x039A3230 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xA3F000
	011 Move X22, 0x7AF000
	012 Move W8, [X20+2957]
	013 Move X22, [X22+1320]
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x7AF000
	021 Move X0, [X0+1328]
	022 Call 0x1C17CF4
	023 Move X0, 0x7AF000
	024 Move X0, [X0+1336]
	025 Call 0x1C17CF4
	026 Move X0, 0x7AF000
	027 Move X0, [X0+1344]
	028 Call 0x1C17CF4
	029 Move X0, 0x7AF000
	030 Move X0, [X0+1352]
	031 Call 0x1C17CF4
	032 Move X0, 0x7AF000
	033 Move X0, [X0+1360]
	034 Call 0x1C17CF4
	035 Move X0, 0x7AF000
	036 Move X0, [X0+1368]
	037 Call 0x1C17CF4
	038 Move X0, 0x7AF000
	039 Move X0, [X0+1160]
	040 Call 0x1C17CF4
	041 Move X0, 0x7AF000
	042 Move X0, [X0+1376]
	043 Call 0x1C17CF4
	044 Move X0, 0x7AF000
	045 Move X0, [X0+1384]
	046 Call 0x1C17CF4
	047 Move X0, 0x7AF000
	048 Move X0, [X0+1392]
	049 Call 0x1C17CF4
	050 Move X0, 0x7AF000
	051 Move X0, [X0+1320]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+2957], W8
	055 Move X0, [X22]
	056 Call 0x1C17F10
	057 Move X1, X31
	058 Move X20, X0
	059 Call Object..ctor, X0
	060 Compare X20, 0
	061 JumpIfEqual {130}
	062 Move X8, 0x7AF000
	063 Move X8, [X8+1368]
	064 Move [X20+16], X21
	065 Move X22, 0x7AF000
	066 Move X0, [X8]
	067 Move X22, [X22+1160]
	068 Call 0x1C17F10
	069 Move X21, X0
	070 Call ObjectPopupField..ctor, X0
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Compare X21, 0
	077 JumpIfEqual {130}
	078 Move X8, [X22]
	079 Move X9, 0x7AF000
	080 Move X22, 0x7AF000
	081 Move X23, 0x7AF000
	082 Move X8, [X8+184]
	083 Move X24, 0x7AF000
	084 Move X25, 0x7AF000
	085 Move X26, 0x7AF000
	086 Move X8, [X8+8]
	087 Move X9, [X9+1360]
	088 Move X22, [X22+1376]
	089 Move X23, [X23+1328]
	090 Move [X21+40], X8
	091 Move X0, [X9]
	092 Move X24, [X24+1384]
	093 Move X25, [X25+1352]
	094 Move X26, [X26+1392]
	095 Call 0x1C17F10
	096 Move X2, [X22]
	097 Move X1, X20
	098 Move X3, X31
	099 Move X22, X0
	100 Call Func`1<Object>..ctor, X0, X1, X2
	101 Move [X21+72], X22
	102 Move X0, [X23]
	103 Call 0x1C17F10
	104 Move X2, [X24]
	105 Move X1, X20
	106 Move X3, X31
	107 Move X22, X0
	108 Call Action`1<Object>..ctor, X0, X1, X2
	109 Move [X21+80], X22
	110 Move X0, [X25]
	111 Call 0x1C17F10
	112 Move X2, [X26]
	113 Move X1, X20
	114 Move X3, X31
	115 Move X22, X0
	116 Call Func`1<Object>..ctor, X0, X1, X2
	117 Move [X21+88], X19
	118 Move [X21+96], X22
	119 Move X0, X21
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move X30, [X31+80]
	129 Return X0
	130 Call 0x1C17F20

Method: UnityEngine.Rendering.DebugUI/Widget CreateVolumeParameterWidget(System.String name, UnityEngine.Rendering.VolumeParameter param, System.Func`1<System.Boolean> isHiddenCallback = null)

Disassembly:
	0x039A3284 CBZ X21, 0x39A3AC0
	0x039A3288 ADRP X8, 0x7AD000
	0x039A328C LDR X8, [X8 + 0x7A0]
	0x039A3290 MOV X0, X21
	0x039A3294 MOV X1, X22
	0x039A3298 LDR X2, [X8]
	0x039A329C BL 0x2497EC8
	0x039A32A0 STR X20, [X19 + 0x20]
	0x039A32A4 LDR X0, [X25]
	0x039A32A8 BL 0x1C16F10
	0x039A32AC MOV X27, X0
	0x039A32B0 BL 0x39A3C60
	0x039A32B4 CBZ X27, 0x39A3AC0
	0x039A32B8 ADRP X8, 0x7AE000
	0x039A32BC LDR X8, [X8 + 0x718]
	0x039A32C0 LDR X21, [X27 + 0x48]
	0x039A32C4 LDR X8, [X8]
	0x039A32C8 STR X8, [X27 + 0x28]
	0x039A32CC ADRP X8, 0x7AE000
	0x039A32D0 LDR X8, [X8 + 0x658]
	0x039A32D4 LDR X0, [X8]
	0x039A32D8 BL 0x1C16F10
	0x039A32DC MOV X22, X0
	0x039A32E0 BL 0x39A2BC0
	0x039A32E4 LDR X0, [X26]
	0x039A32E8 LDR W8, [X0 + 0xE0]
	0x039A32EC CBNZ W8, 0x39A32F8
	0x039A32F0 BL 0x1C16DFC
	0x039A32F4 LDR X0, [X26]
	0x039A32F8 LDR X8, [X0 + 0xB8]
	0x039A32FC LDR X23, [X8 + 0x20]
	0x039A3300 CBNZ X23, 0x39A3354
	0x039A3304 LDR W8, [X0 + 0xE0]
	0x039A3308 CBNZ W8, 0x39A3314
	0x039A330C BL 0x1C16DFC
	0x039A3310 LDR X0, [X26]
	0x039A3314 ADRP X9, 0x7AE000
	0x039A3318 LDR X8, [X0 + 0xB8]
	0x039A331C LDR X9, [X9 + 0x5E0]
	0x039A3320 LDR X24, [X8]
	0x039A3324 LDR X0, [X9]
	0x039A3328 BL 0x1C16F10
	0x039A332C ADRP X8, 0x7AE000
	0x039A3330 LDR X8, [X8 + 0x6D8]
	0x039A3334 MOV X1, X24
	0x039A3338 MOV X3, X31
	0x039A333C MOV X23, X0
	0x039A3340 LDR X2, [X8]
	0x039A3344 BL 0x2D27AA8
	0x039A3348 LDR X8, [X26]
	0x039A334C LDR X8, [X8 + 0xB8]
	0x039A3350 STR X23, [X8 + 0x20]
	0x039A3354 CBZ X22, 0x39A3AC0
	0x039A3358 STR X23, [X22 + 0x48]
	0x039A335C CBZ X21, 0x39A3AC0
	0x039A3360 ADRP X8, 0x7AD000
	0x039A3364 LDR X8, [X8 + 0x7A0]
	0x039A3368 MOV X0, X21
	0x039A336C MOV X1, X22
	0x039A3370 LDR X2, [X8]
	0x039A3374 BL 0x2497EC8
	0x039A3378 LDR X28, [X19 + 0x30]
	0x039A337C CBZ X28, 0x39A3AC0
	0x039A3380 LDR W8, [X28 + 0x18]
	0x039A3384 CMP W8, 0x1
	0x039A3388 B.LT 0x39A3518
	0x039A338C ADRP X20, 0x7AE000
	0x039A3390 ADRP X29, 0x7AE000
	0x039A3394 LDR X20, [X20 + 0x550]
	0x039A3398 LDR X29, [X29 + 0x700]
	0x039A339C MOV W26, W31
	0x039A33A0 ADRP X8, 0x7AE000
	0x039A33A4 LDR X8, [X8 + 0x708]
	0x039A33A8 LDR X0, [X8]
	0x039A33AC BL 0x1C16F10
	0x039A33B0 MOV X1, X31
	0x039A33B4 MOV X21, X0
	0x039A33B8 BL 0x33BDD8C
	0x039A33BC CBZ X21, 0x39A3AC0
	0x039A33C0 STR X19, [X21 + 0x18]
	0x039A33C4 LDR W8, [X28 + 0x18]
	0x039A33C8 CMP W26, W8
	0x039A33CC B.CS 0x39A3B28
	0x039A33D0 ADD X8, X28, W26, 0x3, SXTW
	0x039A33D4 LDR X0, [X8 + 0x20]
	0x039A33D8 STR X0, [X21 + 0x10]
	0x039A33DC CBZ X0, 0x39A3AC0
	0x039A33E0 MOV X1, X31
	0x039A33E4 BL 0x39EE760
	0x039A33E8 LDR X8, [X21 + 0x10]
	0x039A33EC CBZ X8, 0x39A3AC0
	0x039A33F0 TBZ X0, 0x0, 0x39A3408
	0x039A33F4 MOV X0, X8
	0x039A33F8 MOV X1, X31
	0x039A33FC BL 0x39EE408
	0x039A3400 MOV X22, X0
	0x039A3404 B 0x39A340C
	0x039A3408 LDR X22, [X8 + 0x30]
	0x039A340C LDR X8, [X21 + 0x18]
	0x039A3410 CBZ X8, 0x39A3AC0
	0x039A3414 LDR X8, [X8 + 0x20]
	0x039A3418 CBZ X8, 0x39A3AC0
	0x039A341C LDR X23, [X8 + 0x48]
	0x039A3420 ADRP X8, 0x7AE000
	0x039A3424 LDR X8, [X8 + 0x658]
	0x039A3428 LDR X0, [X8]
	0x039A342C BL 0x1C16F10
	0x039A3430 MOV X24, X0
	0x039A3434 BL 0x39A2BC0
	0x039A3438 CBZ X22, 0x39A3AC0
	0x039A343C MOV X0, X22
	0x039A3440 MOV X1, X31
	0x039A3444 BL 0x3C389D4
	0x039A3448 CBZ X24, 0x39A3AC0
	0x039A344C STR X0, [X24 + 0x28]
	0x039A3450 ADRP X8, 0x7AE000
	0x039A3454 LDR X8, [X8 + 0x5E0]
	0x039A3458 LDR X0, [X8]
	0x039A345C BL 0x1C16F10
	0x039A3460 ADRP X8, 0x7AE000
	0x039A3464 LDR X8, [X8 + 0x6F8]
	0x039A3468 MOV X1, X21
	0x039A346C MOV X3, X31
	0x039A3470 MOV X25, X0
	0x039A3474 LDR X2, [X8]
	0x039A3478 BL 0x2D27AA8
	0x039A347C STR X25, [X24 + 0x48]
	0x039A3480 CBZ X23, 0x39A3AC0
	0x039A3484 ADRP X8, 0x7AD000
	0x039A3488 LDR X8, [X8 + 0x7A0]
	0x039A348C MOV X0, X23
	0x039A3490 MOV X1, X24
	0x039A3494 LDR X2, [X8]
	0x039A3498 BL 0x2497EC8
	0x039A349C ADRP X8, 0x7AE000
	0x039A34A0 LDR X23, [X27 + 0x48]
	0x039A34A4 LDR X8, [X8 + 0x6B0]
	0x039A34A8 LDR X0, [X8]
	0x039A34AC BL 0x1C16F10
	0x039A34B0 MOV X24, X0
	0x039A34B4 BL 0x39A3CB8
	0x039A34B8 MOV X0, X22
	0x039A34BC MOV X1, X31
	0x039A34C0 BL 0x3C389D4
	0x039A34C4 CBZ X24, 0x39A3AC0
	0x039A34C8 STR X0, [X24 + 0x28]
	0x039A34CC LDR X0, [X20]
	0x039A34D0 BL 0x1C16F10
	0x039A34D4 LDR X2, [X29]
	0x039A34D8 MOV X1, X21
	0x039A34DC MOV X3, X31
	0x039A34E0 MOV X22, X0
	0x039A34E4 BL 0x2D27AA8
	0x039A34E8 STR X22, [X24 + 0x48]
	0x039A34EC CBZ X23, 0x39A3AC0
	0x039A34F0 ADRP X8, 0x7AD000
	0x039A34F4 LDR X8, [X8 + 0x7A0]
	0x039A34F8 MOV X0, X23
	0x039A34FC MOV X1, X24
	0x039A3500 LDR X2, [X8]
	0x039A3504 BL 0x2497EC8
	0x039A3508 LDR W8, [X28 + 0x18]
	0x039A350C ADD W26, W26, 0x1
	0x039A3510 CMP W26, W8
	0x039A3514 B.LT 0x39A33A0
	0x039A3518 LDR X8, [X19 + 0x20]
	0x039A351C CBZ X8, 0x39A3AC0
	0x039A3520 LDR X21, [X8 + 0x48]
	0x039A3524 ADRP X8, 0x7AE000
	0x039A3528 LDR X8, [X8 + 0x658]
	0x039A352C LDR X0, [X8]
	0x039A3530 BL 0x1C16F10
	0x039A3534 MOV X22, X0
	0x039A3538 BL 0x39A2BC0
	0x039A353C ADRP X20, 0x7AE000
	0x039A3540 LDR X20, [X20 + 0x488]
	0x039A3544 ADRP X26, 0x7AE000
	0x039A3548 LDR X0, [X20]
	0x039A354C LDR W8, [X0 + 0xE0]
	0x039A3550 LDR X26, [X26 + 0x650]
	0x039A3554 CBNZ W8, 0x39A355C
	0x039A3558 BL 0x1C16DFC
	0x039A355C CBZ X22, 0x39A3AC0
	0x039A3560 LDR X8, [X20]
	0x039A3564 ADRP X25, 0x7AE000
	0x039A3568 LDR X8, [X8 + 0xB8]
	0x039A356C LDR X8, [X8 + 0x38]
	0x039A3570 STR X8, [X22 + 0x28]
	0x039A3574 LDR X0, [X26]
	0x039A3578 LDR W8, [X0 + 0xE0]
	0x039A357C LDR X25, [X25 + 0x698]
	0x039A3580 CBNZ W8, 0x39A358C
	0x039A3584 BL 0x1C16DFC
	0x039A3588 LDR X0, [X26]
	0x039A358C LDR X8, [X0 + 0xB8]
	0x039A3590 LDR X23, [X8 + 0x28]
	0x039A3594 CBNZ X23, 0x39A35E8
	0x039A3598 LDR W8, [X0 + 0xE0]
	0x039A359C CBNZ W8, 0x39A35A8
	0x039A35A0 BL 0x1C16DFC
	0x039A35A4 LDR X0, [X26]
	0x039A35A8 ADRP X9, 0x7AE000
	0x039A35AC LDR X8, [X0 + 0xB8]
	0x039A35B0 LDR X9, [X9 + 0x5E0]
	0x039A35B4 LDR X24, [X8]
	0x039A35B8 LDR X0, [X9]
	0x039A35BC BL 0x1C16F10
	0x039A35C0 ADRP X8, 0x7AE000
	0x039A35C4 LDR X8, [X8 + 0x6E0]
	0x039A35C8 MOV X1, X24
	0x039A35CC MOV X3, X31
	0x039A35D0 MOV X23, X0
	0x039A35D4 LDR X2, [X8]
	0x039A35D8 BL 0x2D27AA8
	0x039A35DC LDR X8, [X26]
	0x039A35E0 LDR X8, [X8 + 0xB8]
	0x039A35E4 STR X23, [X8 + 0x28]
	0x039A35E8 STR X23, [X22 + 0x48]
	0x039A35EC CBZ X21, 0x39A3AC0
	0x039A35F0 ADRP X8, 0x7AD000
	0x039A35F4 LDR X8, [X8 + 0x7A0]
	0x039A35F8 MOV X0, X21
	0x039A35FC MOV X1, X22
	0x039A3600 LDR X2, [X8]
	0x039A3604 BL 0x2497EC8
	0x039A3608 LDR X8, [X19 + 0x50]
	0x039A360C CBZ X8, 0x39A3AC0
	0x039A3610 LDR X0, [X8 + 0x48]
	0x039A3614 CBZ X0, 0x39A3AC0
	0x039A3618 ADRP X8, 0x7AD000
	0x039A361C LDR X1, [X19 + 0x20]
	0x039A3620 LDR X8, [X8 + 0x7A0]
	0x039A3624 LDR X2, [X8]
	0x039A3628 BL 0x2497EC8
	0x039A362C ADRP X8, 0x7AE000
	0x039A3630 LDR X21, [X27 + 0x48]
	0x039A3634 LDR X8, [X8 + 0x658]
	0x039A3638 LDR X0, [X8]
	0x039A363C BL 0x1C16F10
	0x039A3640 MOV X22, X0
	0x039A3644 BL 0x39A2BC0
	0x039A3648 LDR X0, [X26]
	0x039A364C LDR W8, [X0 + 0xE0]
	0x039A3650 CBNZ W8, 0x39A365C
	0x039A3654 BL 0x1C16DFC
	0x039A3658 LDR X0, [X26]
	0x039A365C LDR X8, [X0 + 0xB8]
	0x039A3660 LDR X23, [X8 + 0x30]
	0x039A3664 CBNZ X23, 0x39A36B8
	0x039A3668 LDR W8, [X0 + 0xE0]
	0x039A366C CBNZ W8, 0x39A3678
	0x039A3670 BL 0x1C16DFC
	0x039A3674 LDR X0, [X26]
	0x039A3678 ADRP X9, 0x7AE000
	0x039A367C LDR X8, [X0 + 0xB8]
	0x039A3680 LDR X9, [X9 + 0x5E0]
	0x039A3684 LDR X24, [X8]
	0x039A3688 LDR X0, [X9]
	0x039A368C BL 0x1C16F10
	0x039A3690 ADRP X8, 0x7AE000
	0x039A3694 LDR X8, [X8 + 0x6E8]
	0x039A3698 MOV X1, X24
	0x039A369C MOV X3, X31
	0x039A36A0 MOV X23, X0
	0x039A36A4 LDR X2, [X8]
	0x039A36A8 BL 0x2D27AA8
	0x039A36AC LDR X8, [X26]
	0x039A36B0 LDR X8, [X8 + 0xB8]
	0x039A36B4 STR X23, [X8 + 0x30]
	0x039A36B8 CBZ X22, 0x39A3AC0
	0x039A36BC STR X23, [X22 + 0x48]
	0x039A36C0 CBZ X21, 0x39A3AC0
	0x039A36C4 ADRP X8, 0x7AD000
	0x039A36C8 LDR X8, [X8 + 0x7A0]
	0x039A36CC MOV X0, X21
	0x039A36D0 MOV X1, X22
	0x039A36D4 LDR X2, [X8]
	0x039A36D8 BL 0x2497EC8
	0x039A36DC LDR X8, [X19 + 0x50]
	0x039A36E0 CBZ X8, 0x39A3AC0
	0x039A36E4 LDR X0, [X8 + 0x48]
	0x039A36E8 CBZ X0, 0x39A3AC0
	0x039A36EC ADRP X8, 0x7AD000
	0x039A36F0 LDR X8, [X8 + 0x7A0]
	0x039A36F4 MOV X1, X27
	0x039A36F8 LDR X2, [X8]
	0x039A36FC BL 0x2497EC8
	0x039A3700 ADRP X8, 0x7AE000
	0x039A3704 LDR X8, [X8 + 0x6A8]
	0x039A3708 LDR X0, [X8]
	0x039A370C BL 0x1C16F10
	0x039A3710 ADRP X8, 0x7AE000
	0x039A3714 LDR X8, [X8 + 0x6A0]
	0x039A3718 MOV X20, X0
	0x039A371C LDR X1, [X8]
	0x039A3720 BL 0x301B7C4
	0x039A3724 LDR X1, [X19 + 0x38]
	0x039A3728 MOV X0, X19
	0x039A372C MOV X2, X31
	0x039A3730 MOV W3, W31
	0x039A3734 STR X20, [X19 + 0x18]
	0x039A3738 BL 0x39A3D54
	0x039A373C LDR X0, [X26]
	0x039A3740 LDR X20, [X19 + 0x18]
	0x039A3744 LDR W8, [X0 + 0xE0]
	0x039A3748 CBNZ W8, 0x39A3754
	0x039A374C BL 0x1C16DFC
	0x039A3750 LDR X0, [X26]
	0x039A3754 LDR X8, [X0 + 0xB8]
	0x039A3758 LDR X21, [X8 + 0x40]
	0x039A375C CBNZ X21, 0x39A37B0
	0x039A3760 LDR W8, [X0 + 0xE0]
	0x039A3764 CBNZ W8, 0x39A3770
	0x039A3768 BL 0x1C16DFC
	0x039A376C LDR X0, [X26]
	0x039A3770 ADRP X9, 0x7AE000
	0x039A3774 LDR X8, [X0 + 0xB8]
	0x039A3778 LDR X9, [X9 + 0x680]
	0x039A377C LDR X22, [X8]
	0x039A3780 LDR X0, [X9]
	0x039A3784 BL 0x1C16F10
	0x039A3788 ADRP X8, 0x7AE000
	0x039A378C LDR X8, [X8 + 0x6C8]
	0x039A3790 MOV X1, X22
	0x039A3794 MOV X3, X31
	0x039A3798 MOV X21, X0
	0x039A379C LDR X2, [X8]
	0x039A37A0 BL 0x2D30578
	0x039A37A4 LDR X8, [X26]
	0x039A37A8 LDR X8, [X8 + 0xB8]
	0x039A37AC STR X21, [X8 + 0x40]
	0x039A37B0 ADRP X8, 0x7AE000
	0x039A37B4 LDR X8, [X8 + 0x678]
	0x039A37B8 MOV X0, X20
	0x039A37BC MOV X1, X21
	0x039A37C0 LDR X2, [X8]
	0x039A37C4 BL 0x21C9B5C
	0x039A37C8 CBZ X0, 0x39A3AC0
	0x039A37CC ADRP X10, 0x7AE000
	0x039A37D0 LDR X8, [X0]
	0x039A37D4 LDR X10, [X10 + 0x688]
	0x039A37D8 MOV X20, X0
	0x039A37DC LDRH W9, [X8 + 0x12E]
	0x039A37E0 LDR X1, [X10]
	0x039A37E4 CBZ X9, 0x39A3808
	0x039A37E8 LDR X10, [X8 + 0xB0]
	0x039A37EC ADD X10, X10, 0x8
	0x039A37F0 LDUR X11, [X10 - 0x8]
	0x039A37F4 CMP X11, X1
	0x039A37F8 B.EQ 0x39A3818
	0x039A37FC SUBS X9, X9, 0x1
	0x039A3800 ADD X10, X10, 0x10
	0x039A3804 B.NE 0x39A37F0
	0x039A3808 MOV X0, X20
	0x039A380C MOV W2, W31
	0x039A3810 BL 0x1C5C788
	0x039A3814 B 0x39A3824
	0x039A3818 LDRSW X9, [X10]
	0x039A381C ADD X8, X8, X9, 0x4, LSL
	0x039A3820 ADD X0, X8, 0x138
	0x039A3824 LDP X8, X1, [X0]
	0x039A3828 MOV X0, X20
	0x039A382C BLR X8
	0x039A3830 MOV X20, X0
	0x039A3834 CBZ X0, 0x39A3B34
	0x039A3838 ADRP X21, 0x750000
	0x039A383C ADRP X22, 0x7AE000
	0x039A3840 LDR X21, [X21 + 0xE18]
	0x039A3844 LDR X22, [X22 + 0x690]
	0x039A3848 LDR X8, [X20]
	0x039A384C LDR X1, [X21]
	0x039A3850 LDRH W9, [X8 + 0x12E]
	0x039A3854 CBZ X9, 0x39A3878
	0x039A3858 LDR X10, [X8 + 0xB0]
	0x039A385C ADD X10, X10, 0x8
	0x039A3860 LDUR X11, [X10 - 0x8]
	0x039A3864 CMP X11, X1
	0x039A3868 B.EQ 0x39A3888
	0x039A386C SUBS X9, X9, 0x1
	0x039A3870 ADD X10, X10, 0x10
	0x039A3874 B.NE 0x39A3860
	0x039A3878 MOV X0, X20
	0x039A387C MOV W2, W31
	0x039A3880 BL 0x1C5C788
	0x039A3884 B 0x39A3894
	0x039A3888 LDRSW X9, [X10]
	0x039A388C ADD X8, X8, X9, 0x4, LSL
	0x039A3890 ADD X0, X8, 0x138
	0x039A3894 LDP X8, X1, [X0]
	0x039A3898 MOV X0, X20
	0x039A389C BLR X8
	0x039A38A0 TBZ X0, 0x0, 0x39A3924
	0x039A38A4 LDR X8, [X20]
	0x039A38A8 LDR X1, [X22]
	0x039A38AC LDRH W9, [X8 + 0x12E]
	0x039A38B0 CBZ X9, 0x39A38D4
	0x039A38B4 LDR X10, [X8 + 0xB0]
	0x039A38B8 ADD X10, X10, 0x8
	0x039A38BC LDUR X11, [X10 - 0x8]
	0x039A38C0 CMP X11, X1
	0x039A38C4 B.EQ 0x39A38E4
	0x039A38C8 SUBS X9, X9, 0x1
	0x039A38CC ADD X10, X10, 0x10
	0x039A38D0 B.NE 0x39A38BC
	0x039A38D4 MOV X0, X20
	0x039A38D8 MOV W2, W31
	0x039A38DC BL 0x1C5C788
	0x039A38E0 B 0x39A38F0
	0x039A38E4 LDRSW X9, [X10]
	0x039A38E8 ADD X8, X8, X9, 0x4, LSL
	0x039A38EC ADD X0, X8, 0x138
	0x039A38F0 LDP X8, X1, [X0]
	0x039A38F4 MOV X0, X20
	0x039A38F8 BLR X8
	0x039A38FC MOV X1, X0
	0x039A3900 LDR X8, [X19 + 0x50]
	0x039A3904 CBZ X8, 0x39A3B2C
	0x039A3908 LDR X0, [X8 + 0x48]
	0x039A390C CBZ X0, 0x39A3B30
	0x039A3910 ADRP X8, 0x7AD000
	0x039A3914 LDR X8, [X8 + 0x7A0]
	0x039A3918 LDR X2, [X8]
	0x039A391C BL 0x2497EC8
	0x039A3920 B 0x39A3848
	0x039A3924 MOV X21, X31
	0x039A3928 CBZ X20, 0x39A398C
	0x039A392C ADRP X10, 0x750000
	0x039A3930 LDR X8, [X20]
	0x039A3934 LDR X10, [X10 + 0xE00]
	0x039A3938 LDRH W9, [X8 + 0x12E]
	0x039A393C LDR X1, [X10]
	0x039A3940 CBZ X9, 0x39A3964
	0x039A3944 LDR X10, [X8 + 0xB0]
	0x039A3948 ADD X10, X10, 0x8
	0x039A394C LDUR X11, [X10 - 0x8]
	0x039A3950 CMP X11, X1
	0x039A3954 B.EQ 0x39A3974
	0x039A3958 SUBS X9, X9, 0x1
	0x039A395C ADD X10, X10, 0x10
	0x039A3960 B.NE 0x39A394C
	0x039A3964 MOV X0, X20
	0x039A3968 MOV W2, W31
	0x039A396C BL 0x1C5C788
	0x039A3970 B 0x39A3980
	0x039A3974 LDRSW X9, [X10]
	0x039A3978 ADD X8, X8, X9, 0x4, LSL
	0x039A397C ADD X0, X8, 0x138
	0x039A3980 LDP X8, X1, [X0]
	0x039A3984 MOV X0, X20
	0x039A3988 BLR X8
	0x039A398C CBNZ X21, 0x39A3B38
	0x039A3990 LDR X8, [X19 + 0x10]
	0x039A3994 CBZ X8, 0x39A3AC0
	0x039A3998 LDR X20, [X8 + 0x10]
	0x039A399C CBZ X20, 0x39A3AC0
	0x039A39A0 LDR X8, [X20]
	0x039A39A4 LDR X21, [X19 + 0x30]
	0x039A39A8 LDR X1, [X25]
	0x039A39AC LDRH W9, [X8 + 0x12E]
	0x039A39B0 CBZ X9, 0x39A39D4
	0x039A39B4 LDR X10, [X8 + 0xB0]
	0x039A39B8 ADD X10, X10, 0x8
	0x039A39BC LDUR X11, [X10 - 0x8]
	0x039A39C0 CMP X11, X1
	0x039A39C4 B.EQ 0x39A39E4
	0x039A39C8 SUBS X9, X9, 0x1
	0x039A39CC ADD X10, X10, 0x10
	0x039A39D0 B.NE 0x39A39BC
	0x039A39D4 MOVZ W2, 0xD
	0x039A39D8 MOV X0, X20
	0x039A39DC BL 0x1C5C788
	0x039A39E0 B 0x39A39F4
	0x039A39E4 LDR W9, [X10]
	0x039A39E8 ADD W9, W9, 0xD
	0x039A39EC ADD X8, X8, W9, 0x4, SXTW
	0x039A39F0 ADD X0, X8, 0x138
	0x039A39F4 LDP X8, X2, [X0]
	0x039A39F8 MOV X0, X20
	0x039A39FC MOV X1, X21
	0x039A3A00 BLR X8
	0x039A3A04 LDR X8, [X19 + 0x30]
	0x039A3A08 CBZ X8, 0x39A3AC0
	0x039A3A0C MOV X20, X31
	0x039A3A10 LDR W9, [X8 + 0x18]
	0x039A3A14 CMP X20, W9, SXTW
	0x039A3A18 B.GE 0x39A3AC4
	0x039A3A1C LDR X10, [X19 + 0x10]
	0x039A3A20 CBZ X10, 0x39A3AC0
	0x039A3A24 CMP X20, X9
	0x039A3A28 B.CS 0x39A3B28
	0x039A3A2C LDR X22, [X10 + 0x10]
	0x039A3A30 CBZ X22, 0x39A3AC0
	0x039A3A34 LDR X9, [X22]
	0x039A3A38 ADD X8, X8, X20, 0x3, LSL
	0x039A3A3C LDR X21, [X19 + 0x50]
	0x039A3A40 LDR X23, [X8 + 0x20]
	0x039A3A44 LDRH W8, [X9 + 0x12E]
	0x039A3A48 LDR X1, [X25]
	0x039A3A4C CBZ X8, 0x39A3A70
	0x039A3A50 LDR X10, [X9 + 0xB0]
	0x039A3A54 ADD X10, X10, 0x8
	0x039A3A58 LDUR X11, [X10 - 0x8]
	0x039A3A5C CMP X11, X1
	0x039A3A60 B.EQ 0x39A3A80
	0x039A3A64 SUBS X8, X8, 0x1
	0x039A3A68 ADD X10, X10, 0x10
	0x039A3A6C B.NE 0x39A3A58
	0x039A3A70 MOVZ W2, 0xC
	0x039A3A74 MOV X0, X22
	0x039A3A78 BL 0x1C5C788
	0x039A3A7C B 0x39A3A90
	0x039A3A80 LDR W8, [X10]
	0x039A3A84 ADD W8, W8, 0xC
	0x039A3A88 ADD X8, X9, W8, 0x4, SXTW
	0x039A3A8C ADD X0, X8, 0x138
	0x039A3A90 LDP X8, X2, [X0]
	0x039A3A94 MOV X0, X22
	0x039A3A98 MOV X1, X23
	0x039A3A9C BLR X8
	0x039A3AA0 CBZ X21, 0x39A3AC0
	0x039A3AA4 ADD X20, X20, 0x1
	0x039A3AA8 AND W2, W0, 0x1
	0x039A3AAC MOV X0, X21
	0x039A3AB0 MOV W1, W20
	0x039A3AB4 BL 0x39A4344
	0x039A3AB8 LDR X8, [X19 + 0x30]
	0x039A3ABC CBNZ X8, 0x39A3A10
	0x039A3AC0 BL 0x1C16F20
	0x039A3AC4 ADRP X8, 0xFFFFFFFFFD14A000
	0x039A3AC8 LDR V0, [X8 + 0xFF8]
	0x039A3ACC ADRP X8, 0x759000
	0x039A3AD0 LDR X21, [X19 + 0x50]
	0x039A3AD4 STR D0, [X19 + 0x48]
	0x039A3AD8 LDR X8, [X8 + 0x940]
	0x039A3ADC LDR X0, [X8]
	0x039A3AE0 BL 0x1C16F10
	0x039A3AE4 ADRP X8, 0x7AE000
	0x039A3AE8 LDR X8, [X8 + 0x6F0]
	0x039A3AEC MOV X1, X19
	0x039A3AF0 MOV X3, X31
	0x039A3AF4 MOV X20, X0
	0x039A3AF8 LDR X2, [X8]
	0x039A3AFC BL 0x2D27194
	0x039A3B00 CBZ X21, 0x39A3AC0
	0x039A3B04 STR X20, [X21 + 0x40]
	0x039A3B08 LDR X0, [X19 + 0x50]
	0x039A3B0C LDP X20, X19, [X31 + 0x50]
	0x039A3B10 LDP X22, X21, [X31 + 0x40]
	0x039A3B14 LDP X24, X23, [X31 + 0x30]
	0x039A3B18 LDP X26, X25, [X31 + 0x20]
	0x039A3B1C LDP X28, X27, [X31 + 0x10]
	0x039A3B20 LDP X29, X30, [X31], #0x60
	0x039A3B24 RET
	0x039A3B28 BL 0x1C16F28
	0x039A3B2C BL 0x1C16F20
	0x039A3B30 BL 0x1C16F20
	0x039A3B34 BL 0x1C16F20
	0x039A3B38 MOV X0, X21
	0x039A3B3C BL 0x1C16F18
	0x039A3B40 B 0x39A3B54
	0x039A3B44 B 0x39A3B54
	0x039A3B48 B 0x39A3B54
	0x039A3B4C B 0x39A3B54
	0x039A3B50 B 0x39A3B54
	0x039A3B54 MOV X22, X0
	0x039A3B58 CMP W1, 0x1
	0x039A3B5C B.NE 0x39A3B80
	0x039A3B60 MOV X0, X22
	0x039A3B64 BL 0x3EB1AD0
	0x039A3B68 LDR X21, [X0]
	0x039A3B6C BL 0x3EB1AE0
	0x039A3B70 ADRP X25, 0x7AE000
	0x039A3B74 LDR X25, [X25 + 0x698]
	0x039A3B78 CBNZ X20, 0x39A392C
	0x039A3B7C B 0x39A398C
	0x039A3B80 MOV X21, X31
	0x039A3B84 B 0x39A3B8C
	0x039A3B88 MOV X22, X0
	0x039A3B8C CBZ X20, 0x39A3BF0
	0x039A3B90 ADRP X10, 0x750000
	0x039A3B94 LDR X8, [X20]
	0x039A3B98 LDR X10, [X10 + 0xE00]
	0x039A3B9C LDRH W9, [X8 + 0x12E]
	0x039A3BA0 LDR X1, [X10]
	0x039A3BA4 CBZ X9, 0x39A3BC8
	0x039A3BA8 LDR X10, [X8 + 0xB0]
	0x039A3BAC ADD X10, X10, 0x8
	0x039A3BB0 LDUR X11, [X10 - 0x8]
	0x039A3BB4 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xA3F000
	010 Move X23, 0x7AF000
	011 Move W8, [X21+2958]
	012 Move X23, [X23+1408]
	013 Move X19, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {139}
	020 Move X0, 0x751000
	021 Move X0, [X0+3368]
	022 Call 0x1C17CF4
	023 Move X0, 0x7AF000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move X0, 0x7AE000
	027 Move X0, [X0+1896]
	028 Call 0x1C17CF4
	029 Move X0, 0x7AF000
	030 Move X0, [X0+1424]
	031 Call 0x1C17CF4
	032 Move X0, 0x7AF000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x7AF000
	036 Move X0, [X0+1440]
	037 Call 0x1C17CF4
	038 Move X0, 0x7AF000
	039 Move X0, [X0+1448]
	040 Call 0x1C17CF4
	041 Move X0, 0x7AF000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0x7AF000
	045 Move X0, [X0+1464]
	046 Call 0x1C17CF4
	047 Move X0, 0x7AF000
	048 Move X0, [X0+1472]
	049 Call 0x1C17CF4
	050 Move X0, 0x7AE000
	051 Move X0, [X0+1920]
	052 Call 0x1C17CF4
	053 Move X0, 0x7AE000
	054 Move X0, [X0+1928]
	055 Call 0x1C17CF4
	056 Move X0, 0x7AF000
	057 Move X0, [X0+1480]
	058 Call 0x1C17CF4
	059 Move X0, 0x75A000
	060 Move X0, [X0+2368]
	061 Call 0x1C17CF4
	062 Move X0, 0x7AF000
	063 Move X0, [X0+1488]
	064 Call 0x1C17CF4
	065 Move X0, 0x7AF000
	066 Move X0, [X0+1496]
	067 Call 0x1C17CF4
	068 Move X0, 0x7AF000
	069 Move X0, [X0+1504]
	070 Call 0x1C17CF4
	071 Move X0, 0x7AF000
	072 Move X0, [X0+1512]
	073 Call 0x1C17CF4
	074 Move X0, 0x779000
	075 Move X0, [X0+2040]
	076 Call 0x1C17CF4
	077 Move X0, 0x75B000
	078 Move X0, [X0+2408]
	079 Call 0x1C17CF4
	080 Move X0, 0x751000
	081 Move X0, [X0+1728]
	082 Call 0x1C17CF4
	083 Move X0, 0x7AF000
	084 Move X0, [X0+1520]
	085 Call 0x1C17CF4
	086 Move X0, 0x7AF000
	087 Move X0, [X0+1528]
	088 Call 0x1C17CF4
	089 Move X0, 0x7AF000
	090 Move X0, [X0+1536]
	091 Call 0x1C17CF4
	092 Move X0, 0x7AF000
	093 Move X0, [X0+1544]
	094 Call 0x1C17CF4
	095 Move X0, 0x7AF000
	096 Move X0, [X0+1408]
	097 Call 0x1C17CF4
	098 Move X0, 0x7AF000
	099 Move X0, [X0+1552]
	100 Call 0x1C17CF4
	101 Move X0, 0x7AF000
	102 Move X0, [X0+1560]
	103 Call 0x1C17CF4
	104 Move X0, 0x7AF000
	105 Move X0, [X0+1568]
	106 Call 0x1C17CF4
	107 Move X0, 0x7AF000
	108 Move X0, [X0+1576]
	109 Call 0x1C17CF4
	110 Move X0, 0x7AF000
	111 Move X0, [X0+1584]
	112 Call 0x1C17CF4
	113 Move X0, 0x7AF000
	114 Move X0, [X0+1592]
	115 Call 0x1C17CF4
	116 Move X0, 0x7AF000
	117 Move X0, [X0+1600]
	118 Call 0x1C17CF4
	119 Move X0, 0x7AF000
	120 Move X0, [X0+1608]
	121 Call 0x1C17CF4
	122 Move X0, 0x7AF000
	123 Move X0, [X0+1616]
	124 Call 0x1C17CF4
	125 Move X0, 0x7AF000
	126 Move X0, [X0+1624]
	127 Call 0x1C17CF4
	128 Move X0, 0x78A000
	129 Move X0, [X0+640]
	130 Call 0x1C17CF4
	131 Move X0, 0x75B000
	132 Move X0, [X0+3784]
	133 Call 0x1C17CF4
	134 Move X0, 0x759000
	135 Move X0, [X0+1416]
	136 Call 0x1C17CF4
	137 Move W8, 1
	138 Move [X21+2958], W8
	139 Move X0, [X23]
	140 Call 0x1C17F10
	141 Move X1, X31
	142 Move X21, X0
	143 Call Object..ctor, X0
	144 Compare X21, 0
	145 JumpIfEqual {645}
	146 Move [X21+24], X22
	147 Compare X22, 0
	148 JumpIfEqual {206}
	149 Move X23, 0x7AF000
	150 Move X25, 0x751000
	151 Move X23, [X23+1448]
	152 Move X25, [X25+1728]
	153 Move X0, X22
	154 Move X1, X31
	155 Call "il2cpp_vm_object_is_inst", X0
	156 Move [X21+16], X0
	157 Move X22, X0
	158 Move X0, [X25]
	159 Move X23, [X23]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X0, X23
	165 Move X1, X31
	166 Call Type.GetTypeFromHandle, X0
	167 Move X1, X0
	168 Move X0, X22
	169 Move X2, X31
	170 Call Type.op_Equality, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {249}
	175 Move X8, 0x7AF000
	176 Move X8, [X8+1568]
	177 Move X0, [X8]
	178 Call 0x1C17F10
	179 Move X1, X31
	180 Move X23, X0
	181 Call Object..ctor, X0
	182 Compare X23, 0
	183 JumpIfEqual {645}
	184 Move X0, [X21+24]
	185 Compare X0, 0
	186 JumpIfEqual {355}
	187 Move X8, 0x7AF000
	188 Move X8, [X8+1456]
	189 Move X9, [X0]
	190 Move X1, [X8]
	191 Move W10, [X9+304]
	192 Move W8, [X1+304]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X10, [X9+200]
	195 Subtract X9, X8, 1
	196 Move X10, [X10]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X21, X23
	199 Move [X21+16], X0
	200 Move X10, [X0]
	201 Move W11, [X10+304]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, [X10+200]
	204 Move X8, [X8]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X8, 0x7AF000
	207 Move X8, [X8+1624]
	208 Move X0, [X8]
	209 Call 0x1C17F10
	210 Move X22, X0
	211 Call Value..ctor, X0
	212 Compare X22, 0
	213 JumpIfEqual {645}
	214 Move [X22+40], X20
	215 Move X21, 0x7AF000
	216 Move X21, [X21+1616]
	217 Move X0, [X21]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {223}
	221 Call 0x1C17DFC
	222 Move X0, [X21]
	223 Move X8, [X0+184]
	224 Move X19, [X8+8]
	225 Compare X19, 0
	226 JumpIfNotEqual {248}
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {232}
	230 Call 0x1C17DFC
	231 Move X0, [X21]
	232 Move X9, 0x7AF000
	233 Move X8, [X0+184]
	234 Move X9, [X9+1504]
	235 Move X20, [X8]
	236 Move X0, [X9]
	237 Call 0x1C17F10
	238 Move X8, 0x7AF000
	239 Move X8, [X8+1520]
	240 Move X1, X20
	241 Move X3, X31
	242 Move X19, X0
	243 Move X2, [X8]
	244 Call Func`1<Object>..ctor, X0, X1, X2
	245 Move X8, [X21]
	246 Move X8, [X8+184]
	247 Move [X8+8], X19
	248 Move [X22+72], X19
	249 Move X8, 0x7AF000
	250 Move X0, [X25]
	251 Move X22, [X21+16]
	252 Move X8, [X8+1424]
	253 Move W9, [X0+224]
	254 Move X23, [X8]
	255 Compare W9, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X0, X23
	259 Move X1, X31
	260 Call Type.GetTypeFromHandle, X0
	261 Move X1, X0
	262 Move X0, X22
	263 Move X2, X31
	264 Call Type.op_Equality, X0, X1
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {300}
	269 Move X8, 0x7AF000
	270 Move X8, [X8+1592]
	271 Move X0, [X8]
	272 Call 0x1C17F10
	273 Move X1, X31
	274 Move X23, X0
	275 Call Object..ctor, X0
	276 Compare X23, 0
	277 JumpIfEqual {645}
	278 Move X0, [X21+24]
	279 Compare X0, 0
	280 JumpIfEqual {571}
	281 Move X8, 0x7AF000
	282 Move X8, [X8+1432]
	283 Move X9, [X0]
	284 Move X1, [X8]
	285 Move W10, [X9+304]
	286 Move W8, [X1+304]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X10, [X9+200]
	289 Subtract X9, X8, 1
	290 Move X10, [X10]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move [X23+16], X0
	293 Move X10, [X0]
	294 Move W11, [X10+304]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X8, [X10+200]
	297 Move X8, [X8]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Call 0x1C181E0
	300 Move X0, [X21+16]
	301 Move X1, X31
	302 Call IntrospectionExtensions.GetTypeInfo, X0
	303 Compare X0, 0
	304 JumpIfEqual {645}
	305 Move X8, [X0]
	306 Move X9, [X8+2072]
	307 Move X1, [X8+2080]
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Compare X0, 0
	310 JumpIfEqual {645}
	311 Move X8, [X0]
	312 Move X9, [X8+1112]
	313 Move X1, [X8+1120]
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Compare X0, 0
	316 JumpIfEqual {645}
	317 Move X8, [X0+24]
	318 Compare X8, 0
	319 JumpIfEqual {396}
	320 Compare W8, 0
	321 JumpIfEqual {646}
	322 Move X0, [X0+32]
	323 Compare X0, 0
	324 JumpIfEqual {645}
	325 Move X1, X31
	326 Call Type.get_IsArray, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {396}
	331 Move X8, 0x7AF000
	332 Move X8, [X8+1512]
	333 Move X0, [X8]
	334 Call 0x1C17F10
	335 Move X1, X31
	336 Move X22, X0
	337 Call ObjectListField..ctor, X0
	338 Compare X22, 0
	339 JumpIfEqual {645}
	340 Move [X22+40], X20
	341 Move X8, 0x7AF000
	342 Move X8, [X8+1496]
	343 Move X0, [X8]
	344 Call 0x1C17F10
	345 Move X8, 0x7AF000
	346 Move X8, [X8+1536]
	347 Move X1, X21
	348 Move X3, X31
	349 Move X19, X0
	350 Move X2, [X8]
	351 Call Func`1<Object>..ctor, X0, X1, X2
	352 Move [X22+72], X19
	353 Move X8, [X21+16]
	354 Move [X22+96], X8
	355 Move X21, X23
	356 Move [X21+16], X31
	357 Move X8, 0x7AF000
	358 Move X8, [X8+1440]
	359 Move X0, [X8]
	360 Call 0x1C17F10
	361 Move X22, X0
	362 Call ColorField..ctor, X0
	363 Compare X22, 0
	364 JumpIfEqual {645}
	365 Move [X22+40], X20
	366 Move X8, [X21]
	367 Compare X8, 0
	368 JumpIfEqual {645}
	369 Move W9, [X8+36]
	370 Move [X22+96], W9
	371 Move W8, [X8+37]
	372 Move [X22+97], W8
	373 Move X8, 0x7AF000
	374 Move X8, [X8+1488]
	375 Move X0, [X8]
	376 Call 0x1C17F10
	377 Move X8, 0x7AF000
	378 Move X8, [X8+1552]
	379 Move X1, X23
	380 Move X3, X31
	381 Move X20, X0
	382 Move X2, [X8]
	383 Call Func`1<Color>..ctor, X0, X1, X2
	384 Move [X22+72], X20
	385 Move X8, 0x7AF000
	386 Move X8, [X8+1416]
	387 Move X0, [X8]
	388 Call 0x1C17F10
	389 Move X8, 0x7AF000
	390 Move X8, [X8+1560]
	391 Move X1, X23
	392 Move X3, X31
	393 Move X20, X0
	394 Move X2, [X8]
	395 Call Action`1<Color>..ctor, X0, X1, X2
	396 Move X0, [X21+24]
	397 Compare X0, 0
	398 JumpIfEqual {645}
	399 Move X1, X31
	400 Call "il2cpp_vm_object_is_inst", X0
	401 Compare X0, 0
	402 JumpIfEqual {645}
	403 Move X8, 0x75B000
	404 Move X8, [X8+3784]
	405 Move X2, X31
	406 Move X1, [X8]
	407 Call Type.GetProperty, X0, X1
	408 Move [X21+32], X0
	409 Compare X0, 0
	410 JumpIfEqual {645}
	411 Move X8, [X0]
	412 Move X9, [X8+584]
	413 Move X1, [X8+592]
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move X8, [X25]
	416 Move X22, X0
	417 Move W9, [X8+224]
	418 Compare W9, 0
	419 JumpIfNotEqual {422}
	420 Move X0, X8
	421 Call 0x1C17DFC
	422 Compare X22, 0
	423 JumpIfEqual {645}
	424 Move X8, [X25]
	425 Move X9, 0x78A000
	426 Move X0, X22
	427 Move X3, X31
	428 Move X8, [X8+184]
	429 Move X9, [X9+640]
	430 Move X2, [X8+16]
	431 Move X1, [X9]
	432 Call Type.GetMethod, X0, X1, X2
	433 Move X1, X31
	434 Move X2, X31
	435 Move X22, X0
	436 Call MethodInfo.op_Equality, X0, X1
	437 Move TEMP, X0
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfEqual {495}
	441 Compare X22, 0
	442 JumpIfEqual {645}
	443 Move X8, [X22]
	444 Move X0, X22
	445 Move X9, [X8+440]
	446 Move X1, [X8+448]
	447 NotImplemented "Instruction BLR not yet implemented."
	448 Move X9, 0x75B000
	449 Move X8, [X25]
	450 Move X9, [X9+2408]
	451 Move X23, X0
	452 Move W10, [X8+224]
	453 Move X24, [X9]
	454 Compare W10, 0
	455 JumpIfNotEqual {458}
	456 Move X0, X8
	457 Call 0x1C17DFC
	458 Move X0, X24
	459 Move X1, X31
	460 Call Type.GetTypeFromHandle, X0
	461 Move X1, X0
	462 Move X0, X23
	463 Move X2, X31
	464 Call Type.op_Equality, X0, X1
	465 Move TEMP, X0
	466 And TEMP, TEMP, 1
	467 Compare TEMP, 1
	468 JumpIfEqual {495}
	469 Move X8, [X22]
	470 Move X0, X22
	471 Move X9, [X8+440]
	472 Move X1, [X8+448]
	473 NotImplemented "Instruction BLR not yet implemented."
	474 Move X9, 0x779000
	475 Move X8, [X25]
	476 Move X9, [X9+2040]
	477 Move X22, X0
	478 Move W10, [X8+224]
	479 Move X23, [X9]
	480 Compare W10, 0
	481 JumpIfNotEqual {484}
	482 Move X0, X8
	483 Call 0x1C17DFC
	484 Move X0, X23
	485 Move X1, X31
	486 Call Type.GetTypeFromHandle, X0
	487 Move X1, X0
	488 Move X0, X22
	489 Move X2, X31
	490 Call Type.op_Equality, X0, X1
	491 Move TEMP, X0
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfNotEqual {624}
	495 Move X8, 0x7AF000
	496 Move X8, [X8+1608]
	497 Move X0, [X8]
	498 Call 0x1C17F10
	499 Move X1, X31
	500 Move X23, X0
	501 Call Object..ctor, X0
	502 Compare X23, 0
	503 JumpIfEqual {645}
	504 Move [X23+24], X21
	505 Move X0, [X21+32]
	506 Compare X0, 0
	507 JumpIfEqual {645}
	508 Move X8, [X0]
	509 Move X9, [X8+584]
	510 Move X1, [X8+592]
	511 NotImplemented "Instruction BLR not yet implemented."
	512 Compare X0, 0
	513 JumpIfEqual {645}
	514 Move X8, 0x759000
	515 Move X8, [X8+1416]
	516 Move X2, X31
	517 Move X1, [X8]
	518 Call Type.GetProperty, X0, X1
	519 Move X1, X31
	520 Move X2, X31
	521 Move [X23+16], X0
	522 Call PropertyInfo.op_Equality, X0, X1
	523 Move X8, 0x7AF000
	524 Move X8, [X8+1624]
	525 Move W21, W0
	526 Move X8, [X8]
	527 Move X0, X8
	528 Call 0x1C17F10
	529 Move X22, X0
	530 Call Value..ctor, X0
	531 Compare X22, 0
	532 JumpIfEqual {645}
	533 Move [X22+40], X20
	534 Move TEMP, X21
	535 And TEMP, TEMP, 1
	536 Compare TEMP, 1
	537 JumpIfNotEqual {616}
	538 Move X21, 0x7AF000
	539 Move X21, [X21+1616]
	540 Move X0, [X21]
	541 Move W8, [X0+224]
	542 Compare W8, 0
	543 JumpIfNotEqual {546}
	544 Call 0x1C17DFC
	545 Move X0, [X21]
	546 Move X8, [X0+184]
	547 Move X19, [X8+16]
	548 Compare X19, 0
	549 JumpIfNotEqual {248}
	550 Move W8, [X0+224]
	551 Compare W8, 0
	552 JumpIfNotEqual {555}
	553 Call 0x1C17DFC
	554 Move X0, [X21]
	555 Move X9, 0x7AF000
	556 Move X8, [X0+184]
	557 Move X9, [X9+1504]
	558 Move X20, [X8]
	559 Move X0, [X9]
	560 Call 0x1C17F10
	561 Move X8, 0x7AF000
	562 Move X8, [X8+1528]
	563 Move X1, X20
	564 Move X3, X31
	565 Move X19, X0
	566 Move X2, [X8]
	567 Call Func`1<Object>..ctor, X0, X1, X2
	568 Move X8, [X21]
	569 Move X8, [X8+184]
	570 Move [X8+16], X19
	571 Move [X23+16], X31
	572 Move X8, 0x7AE000
	573 Move X8, [X8+1896]
	574 Move X0, [X8]
	575 Call 0x1C17F10
	576 Move X22, X0
	577 Call BoolField..ctor, X0
	578 Compare X22, 0
	579 JumpIfEqual {645}
	580 Move [X22+40], X20
	581 Move X8, 0x75A000
	582 Move X8, [X8+2368]
	583 Move X0, [X8]
	584 Call 0x1C17F10
	585 Move X8, 0x7AF000
	586 Move X8, [X8+1576]
	587 Move X1, X23
	588 Move X3, X31
	589 Move X20, X0
	590 Move X2, [X8]
	591 Call Func`1<Boolean>..ctor, X0, X1, X2
	592 Move [X22+72], X20
	593 Move X8, 0x751000
	594 Move X8, [X8+3368]
	595 Move X0, [X8]
	596 Call 0x1C17F10
	597 Move X8, 0x7AF000
	598 Move X8, [X8+1584]
	599 Move X1, X23
	600 Move X3, X31
	601 Move X20, X0
	602 Move X2, [X8]
	603 Call Action`1<Boolean>..ctor, X0, X1, X2
	604 Move [X22+80], X20
	605 Move [X22+64], X19
	606 Move X0, X22
	607 Move X20, [X31+48]
	608 Move X19, [X31+56]
	609 Move X22, [X31+32]
	610 Move X21, [X31+40]
	611 Move X24, [X31+16]
	612 Move X23, [X31+24]
	613 Move X30, [X31+64]
	614 Move X25, [X31+72]
	615 Return X0
	616 Move X8, 0x7AF000
	617 Move X8, [X8+1504]
	618 Move X0, [X8]
	619 Call 0x1C17F10
	620 Move X8, 0x7AF000
	621 Move X8, [X8+1600]
	622 Move X20, X0
	623 Move X1, X23
	624 Move X8, 0x7AF000
	625 Move X8, [X8+1624]
	626 Move X0, [X8]
	627 Call 0x1C17F10
	628 Move X22, X0
	629 Call Value..ctor, X0
	630 Compare X22, 0
	631 JumpIfEqual {645}
	632 Move [X22+40], X20
	633 Move X8, 0x7AF000
	634 Move X8, [X8+1504]
	635 Move X0, [X8]
	636 Call 0x1C17F10
	637 Move X8, 0x7AF000
	638 Move X8, [X8+1544]
	639 Move X20, X0
	640 Move X1, X21
	641 Move X2, [X8]
	642 Move X3, X31
	643 Call Func`1<Object>..ctor, X0, X1, X2
	644 Move [X22+72], X20
	645 Call 0x1C17F20
	646 Call 0x1C17F28

Method: UnityEngine.Rendering.DebugUI/Table CreateVolumeTable(UnityEngine.Rendering.DebugDisplaySettingsVolume data)

Disassembly:
	0x039A3CE4 ADRP X0, 0x7AE000
	0x039A3CE8 LDR X0, [X0 + 0x578]
	0x039A3CEC BL 0x1C16CF4
	0x039A3CF0 ADRP X0, 0x778000
	0x039A3CF4 LDR X0, [X0 + 0x7F8]
	0x039A3CF8 BL 0x1C16CF4
	0x039A3CFC ADRP X0, 0x750000
	0x039A3D00 LDR X0, [X0 + 0x6C0]
	0x039A3D04 BL 0x1C16CF4
	0x039A3D08 MOVZ W8, 0x1
	0x039A3D0C STRB W8, [X22 + 0xC1F]
	0x039A3D10 LDR X0, [X21]
	0x039A3D14 ADRP X21, 0x7AE000
	0x039A3D18 LDR X20, [X20]
	0x039A3D1C LDR W8, [X0 + 0xE0]
	0x039A3D20 LDR X21, [X21 + 0x578]
	0x039A3D24 CBNZ W8, 0x39A3D2C
	0x039A3D28 BL 0x1C16DFC
	0x039A3D2C MOV X0, X20
	0x039A3D30 MOV X1, X31
	0x039A3D34 BL 0x338C698
	0x039A3D38 STR X0, [X19 + 0x60]
	0x039A3D3C LDR X1, [X21]
	0x039A3D40 MOV X0, X19
	0x039A3D44 LDP X20, X19, [X31 + 0x20]
	0x039A3D48 LDP X22, X21, [X31 + 0x10]
	0x039A3D4C LDR X30, [X31], #0x30
	0x039A3D50 B 0x2D1A1B4
	0x039A3D54 SUB X31, X31, 0x70
	0x039A3D58 STP X29, X30, [X31 + 0x10]
	0x039A3D5C STP X28, X27, [X31 + 0x20]
	0x039A3D60 STP X26, X25, [X31 + 0x30]
	0x039A3D64 STP X24, X23, [X31 + 0x40]
	0x039A3D68 STP X22, X21, [X31 + 0x50]
	0x039A3D6C STP X20, X19, [X31 + 0x60]
	0x039A3D70 ADRP X20, 0xA3E000
	0x039A3D74 LDRB W8, [X20 + 0xBA1]
	0x039A3D78 MOV X25, X2
	0x039A3D7C MOV X19, X1
	0x039A3D80 MOV X23, X0
	0x039A3D84 STR W3, [X31 + 0x4]
	0x039A3D88 TBNZ X8, 0x0, 0x39A3E30
	0x039A3D8C ADRP X0, 0x779000
	0x039A3D90 LDR X0, [X0 + 0xD48]
	0x039A3D94 BL 0x1C16CF4
	0x039A3D98 ADRP X0, 0x779000
	0x039A3D9C LDR X0, [X0 + 0xD70]
	0x039A3DA0 BL 0x1C16CF4
	0x039A3DA4 ADRP X0, 0x750000
	0x039A3DA8 LDR X0, [X0 + 0xE00]
	0x039A3DAC BL 0x1C16CF4
	0x039A3DB0 ADRP X0, 0x77B000
	0x039A3DB4 LDR X0, [X0 + 0xBD8]
	0x039A3DB8 BL 0x1C16CF4
	0x039A3DBC ADRP X0, 0x77B000
	0x039A3DC0 LDR X0, [X0 + 0xBE0]
	0x039A3DC4 BL 0x1C16CF4
	0x039A3DC8 ADRP X0, 0x750000
	0x039A3DCC LDR X0, [X0 + 0xE18]
	0x039A3DD0 BL 0x1C16CF4
	0x039A3DD4 ADRP X0, 0x779000
	0x039A3DD8 LDR X0, [X0 + 0xB28]
	0x039A3DDC BL 0x1C16CF4
	0x039A3DE0 ADRP X0, 0x752000
	0x039A3DE4 LDR X0, [X0 + 0x278]
	0x039A3DE8 BL 0x1C16CF4
	0x039A3DEC ADRP X0, 0x750000
	0x039A3DF0 LDR X0, [X0 + 0x6C0]
	0x039A3DF4 BL 0x1C16CF4
	0x039A3DF8 ADRP X0, 0x7AE000
	0x039A3DFC LDR X0, [X0 + 0x728]
	0x039A3E00 BL 0x1C16CF4
	0x039A3E04 ADRP X0, 0x7AE000
	0x039A3E08 LDR X0, [X0 + 0x650]
	0x039A3E0C BL 0x1C16CF4
	0x039A3E10 ADRP X0, 0x779000
	0x039A3E14 LDR X0, [X0 + 0xB40]
	0x039A3E18 BL 0x1C16CF4
	0x039A3E1C ADRP X0, 0x750000
	0x039A3E20 LDR X0, [X0 + 0xDD8]
	0x039A3E24 BL 0x1C16CF4
	0x039A3E28 MOVZ W8, 0x1
	0x039A3E2C STRB W8, [X20 + 0xBA1]
	0x039A3E30 CBZ X19, 0x39A4234
	0x039A3E34 LDR X8, [X19]
	0x039A3E38 ADRP X21, 0x7AE000
	0x039A3E3C MOVZ W1, 0x34
	0x039A3E40 MOV X0, X19
	0x039A3E44 LDR X9, [X8 + 0x688]
	0x039A3E48 LDR X2, [X8 + 0x690]
	0x039A3E4C LDR X21, [X21 + 0x650]
	0x039A3E50 BLR X9
	0x039A3E54 LDR X8, [X21]
	0x039A3E58 MOV X19, X0
	0x039A3E5C LDR W9, [X8 + 0xE0]
	0x039A3E60 CBNZ W9, 0x39A3E70
	0x039A3E64 MOV X0, X8
	0x039A3E68 BL 0x1C16DFC
	0x039A3E6C LDR X8, [X21]
	0x039A3E70 LDR X9, [X8 + 0xB8]
	0x039A3E74 ADRP X22, 0x779000
	0x039A3E78 LDR X20, [X9 + 0x38]
	0x039A3E7C LDR X22, [X22 + 0xD48]
	0x039A3E80 CBNZ X20, 0x39A3ED8
	0x039A3E84 LDR W9, [X8 + 0xE0]
	0x039A3E88 CBNZ W9, 0x39A3E98
	0x039A3E8C MOV X0, X8
	0x039A3E90 BL 0x1C16DFC
	0x039A3E94 LDR X8, [X21]
	0x039A3E98 ADRP X9, 0x779000
	0x039A3E9C LDR X8, [X8 + 0xB8]
	0x039A3EA0 LDR X9, [X9 + 0xD70]
	0x039A3EA4 LDR X24, [X8]
	0x039A3EA8 LDR X0, [X9]
	0x039A3EAC BL 0x1C16F10
	0x039A3EB0 ADRP X8, 0x7AE000
	0x039A3EB4 LDR X8, [X8 + 0x728]
	0x039A3EB8 MOV X1, X24
	0x039A3EBC MOV X3, X31
	0x039A3EC0 MOV X20, X0
	0x039A3EC4 LDR X2, [X8]
	0x039A3EC8 BL 0x2D30128
	0x039A3ECC LDR X8, [X21]
	0x039A3ED0 LDR X8, [X8 + 0xB8]
	0x039A3ED4 STR X20, [X8 + 0x38]
	0x039A3ED8 LDR X2, [X22]
	0x039A3EDC MOV X0, X19
	0x039A3EE0 MOV X1, X20
	0x039A3EE4 BL 0x21C9A84
	0x039A3EE8 CBZ X0, 0x39A4234
	0x039A3EEC ADRP X10, 0x77B000
	0x039A3EF0 LDR X8, [X0]
	0x039A3EF4 LDR X10, [X10 + 0xBD8]
	0x039A3EF8 MOV X19, X0
	0x039A3EFC STR X25, [X31 + 0x8]
	0x039A3F00 LDRH W9, [X8 + 0x12E]
	0x039A3F04 LDR X1, [X10]
	0x039A3F08 CBZ X9, 0x39A3F2C
	0x039A3F0C LDR X10, [X8 + 0xB0]
	0x039A3F10 ADD X10, X10, 0x8
	0x039A3F14 LDUR X11, [X10 - 0x8]
	0x039A3F18 CMP X11, X1
	0x039A3F1C B.EQ 0x39A3F3C
	0x039A3F20 SUBS X9, X9, 0x1
	0x039A3F24 ADD X10, X10, 0x10
	0x039A3F28 B.NE 0x39A3F14
	0x039A3F2C MOV X0, X19
	0x039A3F30 MOV W2, W31
	0x039A3F34 BL 0x1C5C788
	0x039A3F38 B 0x39A3F48
	0x039A3F3C LDRSW X9, [X10]
	0x039A3F40 ADD X8, X8, X9, 0x4, LSL
	0x039A3F44 ADD X0, X8, 0x138
	0x039A3F48 ADRP X28, 0x750000
	0x039A3F4C ADRP X29, 0x77B000
	0x039A3F50 ADRP X27, 0x779000
	0x039A3F54 ADRP X21, 0x750000
	0x039A3F58 ADRP X22, 0x779000
	0x039A3F5C LDR X28, [X28 + 0xE18]
	0x039A3F60 LDR X29, [X29 + 0xBE0]
	0x039A3F64 LDR X27, [X27 + 0xB28]
	0x039A3F68 LDR X21, [X21 + 0x6C0]
	0x039A3F6C LDR X22, [X22 + 0xB40]
	0x039A3F70 LDP X8, X1, [X0]
	0x039A3F74 MOV X0, X19
	0x039A3F78 BLR X8
	0x039A3F7C LDR W20, [X31 + 0x4]
	0x039A3F80 MOV X19, X0
	0x039A3F84 CBZ X19, 0x39A4230
	0x039A3F88 LDR X8, [X19]
	0x039A3F8C LDR X1, [X28]
	0x039A3F90 LDRH W9, [X8 + 0x12E]
	0x039A3F94 CBZ X9, 0x39A3FB8
	0x039A3F98 LDR X10, [X8 + 0xB0]
	0x039A3F9C ADD X10, X10, 0x8
	0x039A3FA0 LDUR X11, [X10 - 0x8]
	0x039A3FA4 CMP X11, X1
	0x039A3FA8 B.EQ 0x39A3FC8
	0x039A3FAC SUBS X9, X9, 0x1
	0x039A3FB0 ADD X10, X10, 0x10
	0x039A3FB4 B.NE 0x39A3FA0
	0x039A3FB8 MOV X0, X19
	0x039A3FBC MOV W2, W31
	0x039A3FC0 BL 0x1C5C788
	0x039A3FC4 B 0x39A3FD4
	0x039A3FC8 LDRSW X9, [X10]
	0x039A3FCC ADD X8, X8, X9, 0x4, LSL
	0x039A3FD0 ADD X0, X8, 0x138
	0x039A3FD4 LDP X8, X1, [X0]
	0x039A3FD8 MOV X0, X19
	0x039A3FDC BLR X8
	0x039A3FE0 TBZ X0, 0x0, 0x39A4194
	0x039A3FE4 LDR X8, [X19]
	0x039A3FE8 LDR X1, [X29]
	0x039A3FEC LDRH W9, [X8 + 0x12E]
	0x039A3FF0 CBZ X9, 0x39A4014
	0x039A3FF4 LDR X10, [X8 + 0xB0]
	0x039A3FF8 ADD X10, X10, 0x8
	0x039A3FFC LDUR X11, [X10 - 0x8]
	0x039A4000 CMP X11, X1
	0x039A4004 B.EQ 0x39A4024
	0x039A4008 SUBS X9, X9, 0x1
	0x039A400C ADD X10, X10, 0x10
	0x039A4010 B.NE 0x39A3FFC
	0x039A4014 MOV X0, X19
	0x039A4018 MOV W2, W31
	0x039A401C BL 0x1C5C788
	0x039A4020 B 0x39A4030
	0x039A4024 LDRSW X9, [X10]
	0x039A4028 ADD X8, X8, X9, 0x4, LSL
	0x039A402C ADD X0, X8, 0x138
	0x039A4030 LDP X8, X1, [X0]
	0x039A4034 MOV X0, X19
	0x039A4038 BLR X8
	0x039A403C MOV X24, X0
	0x039A4040 LDR X0, [X21]
	0x039A4044 LDR X25, [X27]
	0x039A4048 LDR W8, [X0 + 0xE0]
	0x039A404C CBNZ W8, 0x39A4054
	0x039A4050 BL 0x1C16DFC
	0x039A4054 MOV X0, X25
	0x039A4058 MOV X1, X31
	0x039A405C BL 0x338C698
	0x039A4060 MOV X1, X0
	0x039A4064 CBZ X24, 0x39A4224
	0x039A4068 LDR X8, [X24]
	0x039A406C LDR X9, [X8 + 0x208]
	0x039A4070 LDR X3, [X8 + 0x210]
	0x039A4074 MOV X0, X24
	0x039A4078 MOV W2, W31
	0x039A407C BLR X9
	0x039A4080 CBZ X0, 0x39A4228
	0x039A4084 LDR X8, [X0 + 0x18]
	0x039A4088 CBNZ X8, 0x39A4108
	0x039A408C LDR X8, [X24]
	0x039A4090 LDR X1, [X8 + 0x260]
	0x039A4094 LDR X9, [X8 + 0x258]
	0x039A4098 MOV X0, X24
	0x039A409C BLR X9
	0x039A40A0 MOV X25, X0
	0x039A40A4 LDR X0, [X21]
	0x039A40A8 LDR X26, [X22]
	0x039A40AC LDR W8, [X0 + 0xE0]
	0x039A40B0 CBNZ W8, 0x39A40B8
	0x039A40B4 BL 0x1C16DFC
	0x039A40B8 MOV X0, X26
	0x039A40BC MOV X1, X31
	0x039A40C0 BL 0x338C698
	0x039A40C4 MOV X1, X0
	0x039A40C8 CBZ X25, 0x39A422C
	0x039A40CC LDR X8, [X25]
	0x039A40D0 LDR X9, [X8 + 0x298]
	0x039A40D4 LDR X2, [X8 + 0x2A0]
	0x039A40D8 MOV X0, X25
	0x039A40DC BLR X9
	0x039A40E0 TBNZ X0, 0x0, 0x39A4110
	0x039A40E4 MOV X0, X25
	0x039A40E8 MOV X1, X31
	0x039A40EC BL 0x3396BF8
	0x039A40F0 TBNZ X0, 0x0, 0x39A3F88
	0x039A40F4 MOV X0, X25
	0x039A40F8 MOV X1, X31
	0x039A40FC BL 0x339707C
	0x039A4100 TBZ X0, 0x0, 0x39A3F88
	0x039A4104 B 0x39A4148
	0x039A4108 ADD W20, W20, 0x1
	0x039A410C B 0x39A3F88
	0x039A4110 LDR X8, [X31 + 0x8]
	0x039A4114 MOV X2, X8
	0x039A4118 CBNZ X8, 0x39A4130
	0x039A411C ADRP X8, 0x751000
	0x039A4120 LDR X8, [X8 + 0x278]
	0x039A4124 LDR X8, [X8]
	0x039A4128 LDR X8, [X8 + 0xB8]
	0x039A412C LDR X2, [X8]
	0x039A4130 CBZ X23, 0x39A4240
	0x039A4134 MOV X0, X23
	0x039A4138 MOV X1, X24
	0x039A413C MOV W3, W20
	0x039A4140 BL 0x39A4DC0
	0x039A4144 B 0x39A3F84
	0x039A4148 LDR X2, [X31 + 0x8]
	0x039A414C CBNZ X2, 0x39A4178
	0x039A4150 LDR X8, [X24]
	0x039A4154 LDP X9, X1, [X8 + 0x1A8]
	0x039A4158 MOV X0, X24
	0x039A415C BLR X9
	0x039A4160 ADRP X8, 0x74F000
	0x039A4164 LDR X8, [X8 + 0xDD8]
	0x039A4168 LDR X1, [X8]
	0x039A416C MOV X2, X31
	0x039A4170 BL 0x321B938
	0x039A4174 MOV X2, X0
	0x039A4178 CBZ X23, 0x39A4244
	0x039A417C MOV X0, X23
	0x039A4180 MOV X1, X25
	0x039A4184 MOV W3, W20
	0x039A4188 BL 0x39A3D54
	0x039A418C ADD W20, W0, W20
	0x039A4190 B 0x39A3F84
	0x039A4194 MOV X21, X31
	0x039A4198 CBZ X19, 0x39A41FC
	0x039A419C LDR X8, [X19]
	0x039A41A0 ADRP X10, 0x74F000
	0x039A41A4 LDRH W9, [X8 + 0x12E]
	0x039A41A8 LDR X10, [X10 + 0xE00]
	0x039A41AC LDR X1, [X10]
	0x039A41B0 CBZ X9, 0x39A41D4
	0x039A41B4 LDR X10, [X8 + 0xB0]
	0x039A41B8 ADD X10, X10, 0x8
	0x039A41BC LDUR X11, [X10 - 0x8]
	0x039A41C0 CMP X11, X1
	0x039A41C4 B.EQ 0x39A41E4
	0x039A41C8 SUBS X9, X9, 0x1
	0x039A41CC ADD X10, X10, 0x10
	0x039A41D0 B.NE 0x39A41BC
	0x039A41D4 MOV X0, X19
	0x039A41D8 MOV W2, W31
	0x039A41DC BL 0x1C5C788
	0x039A41E0 B 0x39A41F0
	0x039A41E4 LDRSW X9, [X10]
	0x039A41E8 ADD X8, X8, X9, 0x4, LSL
	0x039A41EC ADD X0, X8, 0x138
	0x039A41F0 LDP X8, X1, [X0]
	0x039A41F4 MOV X0, X19
	0x039A41F8 BLR X8
	0x039A41FC CBNZ X21, 0x39A4238
	0x039A4200 MOV W0, W20
	0x039A4204 LDP X20, X19, [X31 + 0x60]
	0x039A4208 LDP X22, X21, [X31 + 0x50]
	0x039A420C LDP X24, X23, [X31 + 0x40]
	0x039A4210 LDP X26, X25, [X31 + 0x30]
	0x039A4214 LDP X28, X27, [X31 + 0x20]
	0x039A4218 LDP X29, X30, [X31 + 0x10]
	0x039A421C ADD X31, X31, 0x70
	0x039A4220 RET
	0x039A4224 BL 0x1C16F20
	0x039A4228 BL 0x1C16F20
	0x039A422C BL 0x1C16F20
	0x039A4230 BL 0x1C16F20
	0x039A4234 BL 0x1C16F20
	0x039A4238 MOV X0, X21
	0x039A423C BL 0x1C16F18
	0x039A4240 BL 0x1C16F20
	0x039A4244 BL 0x1C16F20
	0x039A4248 B 0x39A429C
	0x039A424C B 0x39A429C
	0x039A4250 B 0x39A429C
	0x039A4254 B 0x39A429C
	0x039A4258 B 0x39A429C
	0x039A425C B 0x39A429C
	0x039A4260 LDR W20, [X31 + 0x4]
	0x039A4264 B 0x39A429C
	0x039A4268 B 0x39A429C
	0x039A426C B 0x39A429C
	0x039A4270 B 0x39A429C
	0x039A4274 B 0x39A429C
	0x039A4278 B 0x39A429C
	0x039A427C B 0x39A429C
	0x039A4280 B 0x39A429C
	0x039A4284 B 0x39A429C
	0x039A4288 B 0x39A429C
	0x039A428C B 0x39A429C
	0x039A4290 B 0x39A429C
	0x039A4294 B 0x39A429C
	0x039A4298 B 0x39A429C
	0x039A429C MOV X22, X0
	0x039A42A0 CMP W1, 0x1
	0x039A42A4 B.NE 0x39A42BC
	0x039A42A8 MOV X0, X22
	0x039A42AC BL 0x3EB1AD0
	0x039A42B0 LDR X21, [X0]
	0x039A42B4 BL 0x3EB1AE0
	0x039A42B8 B 0x39A4198
	0x039A42BC MOV X21, X31
	0x039A42C0 B 0x39A42C8
	0x039A42C4 MOV X22, X0
	0x039A42C8 CBZ X19, 0x39A432C
	0x039A42CC LDR X8, [X19]
	0x039A42D0 ADRP X10, 0x74F000
	0x039A42D4 LDRH W9, [X8 + 0x12E]
	0x039A42D8 LDR X10, [X10 + 0xE00]
	0x039A42DC LDR X1, [X10]
	0x039A42E0 CBZ X9, 0x39A4304
	0x039A42E4 LDR X10, [X8 + 0xB0]
	0x039A42E8 ADD X10, X10, 0x8
	0x039A42EC LDUR X11, [X10 - 0x8]
	0x039A42F0 CMP X11, X1
	0x039A42F4 B.EQ 0x39A4314
	0x039A42F8 SUBS X9, X9, 0x1
	0x039A42FC ADD X10, X10, 0x10
	0x039A4300 B.NE 0x39A42EC
	0x039A4304 MOV X0, X19
	0x039A4308 MOV W2, W31
	0x039A430C BL 0x1C5C788
	0x039A4310 B 0x39A4320
	0x039A4314 LDRSW X9, [X10]
	0x039A4318 ADD X8, X8, X9, 0x4, LSL
	0x039A431C ADD X0, X8, 0x138
	0x039A4320 LDP X8, X1, [X0]
	0x039A4324 MOV X0, X19
	0x039A4328 BLR X8
	0x039A432C CBNZ X21, 0x39A4338
	0x039A4330 MOV X0, X22
	0x039A4334 BL 0x1D2C690
	0x039A4338 MOV X0, X21
	0x039A433C BL 0x1C16F18
	0x039A4340 BL 0x1990590
	0x039A4344 STR X30, [X31 - 0x20]!
	0x039A4348 STP X20, X19, [X31 + 0x10]
	0x039A434C MOV W20, W2
	0x039A4350 MOV W19, W1
	0x039A4354 BL 0x39AE3C8
	0x039A4358 TBNZ X19, 0x1F, 0x39A437C
	0x039A435C CBZ X0, 0x39A4388
	0x039A4360 LDR W8, [X0 + 0x18]
	0x039A4364 CMP W8, W19
	0x039A4368 B.LT 0x39A437C
	0x039A436C B.LS 0x39A438C
	0x039A4370 AND W8, W20, 0x1
	0x039A4374 ADD X9, X0, W19, UXTW
	0x039A4378 STRB W8, [X9 + 0x20]
	0x039A437C LDP X20, X19, [X31 + 0x10]
	0x039A4380 LDR X30, [X31], #0x20
	0x039A4384 RET
	0x039A4388 BL 0x1C16F20
	0x039A438C BL 0x1C16F28
	0x039A4390 STR X30, [X31 - 0x20]!
	0x039A4394 STP X20, X19, [X31 + 0x10]
	0x039A4398 ADRP X19, 0xA3D000
	0x039A439C ADRP X20, 0x7AD000
	0x039A43A0 LDRB W8, [X19 + 0xB90]
	0x039A43A4 LDR X20, [X20 + 0x650]
	0x039A43A8 TBNZ X8, 0x0, 0x39A43C0
	0x039A43AC ADRP X0, 0x7AD000
	0x039A43B0 LDR X0, [X0 + 0x650]
	0x039A43B4 BL 0x1C16CF4
	0x039A43B8 MOVZ W8, 0x1
	0x039A43BC STRB W8, [X19 + 0xB90]
	0x039A43C0 LDR X0, [X20]
	0x039A43C4 BL 0x1C16F10
	0x039A43C8 MOV X1, X31
	0x039A43CC MOV X19, X0
	0x039A43D0 BL 0x33BDD8C
	0x039A43D4 LDR X8, [X20]
	0x039A43D8 LDR X8, [X8 + 0xB8]
	0x039A43DC STR X19, [X8]
	0x039A43E0 LDP X20, X19, [X31 + 0x10]
	0x039A43E4 LDR X30, [X31], #0x20
	0x039A43E8 RET
	0x039A43EC MOV X1, X31
	0x039A43F0 B 0x33BDD8C
	0x039A43F4 STR X30, [X31 - 0x20]!
	0x039A43F8 STP X20, X19, [X31 + 0x10]
	0x039A43FC ADRP X19, 0xA3D000
	0x039A4400 ADRP X20, 0x750000
	0x039A4404 LDRB W8, [X19 + 0xB91]
	0x039A4408 LDR X20, [X20 + 0x2A8]
	0x039A440C TBNZ X8, 0x0, 0x39A4424
	0x039A4410 ADRP X0, 0x750000
	0x039A4414 LDR X0, [X0 + 0x2A8]
	0x039A4418 BL 0x1C16CF4
	0x039A441C MOVZ W8, 0x1
	0x039A4420 STRB W8, [X19 + 0xB91]
	0x039A4424 LDR X0, [X20]
	0x039A4428 LDP X20, X19, [X31 + 0x10]
	0x039A442C LDR X30, [X31], #0x20
	0x039A4430 RET
	0x039A4434 STR X30, [X31 - 0x20]!
	0x039A4438 STP X20, X19, [X31 + 0x10]
	0x039A443C ADRP X20, 0xA3D000
	0x039A4440 ADRP X19, 0x7AD000
	0x039A4444 LDRB W8, [X20 + 0xB92]
	0x039A4448 LDR X19, [X19 + 0x488]
	0x039A444C TBNZ X8, 0x0, 0x39A4464
	0x039A4450 ADRP X0, 0x7AD000
	0x039A4454 LDR X0, [X0 + 0x488]
	0x039A4458 BL 0x1C16CF4
	0x039A445C MOVZ W8, 0x1
	0x039A4460 STRB W8, [X20 + 0xB92]
	0x039A4464 LDR X0, [X19]
	0x039A4468 LDR W8, [X0 + 0xE0]
	0x039A446C CBNZ W8, 0x39A4478
	0x039A4470 BL 0x1C16DFC
	0x039A4474 LDR X0, [X19]
	0x039A4478 LDR X8, [X0 + 0xB8]
	0x039A447C LDP X20, X19, [X31 + 0x10]
	0x039A4480 LDR X0, [X8 + 0x20]
	0x039A4484 LDR X30, [X31], #0x20
	0x039A4488 RET
	0x039A448C STR X30, [X31 - 0x20]!
	0x039A4490 STP X20, X19, [X31 + 0x10]
	0x039A4494 ADRP X19, 0xA3D000
	0x039A4498 ADRP X20, 0x751000
	0x039A449C LDRB W8, [X19 + 0xB93]
	0x039A44A0 LDR X20, [X20 + 0x278]
	0x039A44A4 TBNZ X8, 0x0, 0x39A44BC
	0x039A44A8 ADRP X0, 0x751000
	0x039A44AC LDR X0, [X0 + 0x278]
	0x039A44B0 BL 0x1C16CF4
	0x039A44B4 MOVZ W8, 0x1
	0x039A44B8 STRB W8, [X19 + 0xB93]
	0x039A44BC LDR X8, [X20]
	0x039A44C0 LDP X20, X19, [X31 + 0x10]
	0x039A44C4 LDR X8, [X8 + 0xB8]
	0x039A44C8 LDR X0, [X8]
	0x039A44CC LDR X30, [X31], #0x20
	0x039A44D0 RET
	0x039A44D4 STR X30, [X31 - 0x20]!
	0x039A44D8 STP X20, X19, [X31 + 0x10]
	0x039A44DC ADRP X19, 0xA3D000
	0x039A44E0 ADRP X20, 0x751000
	0x039A44E4 LDRB W8, [X19 + 0xB94]
	0x039A44E8 LDR X20, [X20 + 0x278]
	0x039A44EC TBNZ X8, 0x0, 0x39A4504
	0x039A44F0 ADRP X0, 0x751000
	0x039A44F4 LDR X0, [X0 + 0x278]
	0x039A44F8 BL 0x1C16CF4
	0x039A44FC MOVZ W8, 0x1
	0x039A4500 STRB W8, [X19 + 0xB94]
	0x039A4504 LDR X8, [X20]
	0x039A4508 LDP X20, X19, [X31 + 0x10]
	0x039A450C LDR X8, [X8 + 0xB8]
	0x039A4510 LDR X0, [X8]
	0x039A4514 LDR X30, [X31], #0x20
	0x039A4518 RET
	0x039A451C STR X30, [X31 - 0x20]!
	0x039A4520 STP X20, X19, [X31 + 0x10]
	0x039A4524 ADRP X19, 0xA3D000
	0x039A4528 ADRP X20, 0x751000
	0x039A452C LDRB W8, [X19 + 0xB95]
	0x039A4530 LDR X20, [X20 + 0x278]
	0x039A4534 TBNZ X8, 0x0, 0x39A454C
	0x039A4538 ADRP X0, 0x751000
	0x039A453C LDR X0, [X0 + 0x278]
	0x039A4540 BL 0x1C16CF4
	0x039A4544 MOVZ W8, 0x1
	0x039A4548 STRB W8, [X19 + 0xB95]
	0x039A454C LDR X8, [X20]
	0x039A4550 LDP X20, X19, [X31 + 0x10]
	0x039A4554 LDR X8, [X8 + 0xB8]
	0x039A4558 LDR X0, [X8]
	0x039A455C LDR X30, [X31], #0x20
	0x039A4560 RET
	0x039A4564 STR X30, [X31 - 0x20]!
	0x039A4568 STP X20, X19, [X31 + 0x10]
	0x039A456C ADRP X19, 0xA3D000
	0x039A4570 ADRP X20, 0x751000
	0x039A4574 LDRB W8, [X19 + 0xB96]
	0x039A4578 LDR X20, [X20 + 0x278]
	0x039A457C TBNZ X8, 0x0, 0x39A4594
	0x039A4580 ADRP X0, 0x751000
	0x039A4584 LDR X0, [X0 + 0x278]
	0x039A4588 BL 0x1C16CF4
	0x039A458C MOVZ W8, 0x1
	0x039A4590 STRB W8, [X19 + 0xB96]
	0x039A4594 LDR X8, [X20]
	0x039A4598 LDP X20, X19, [X31 + 0x10]
	0x039A459C LDR X8, [X8 + 0xB8]
	0x039A45A0 LDR X0, [X8]
	0x039A45A4 LDR X30, [X31], #0x20
	0x039A45A8 RET
	0x039A45AC STR X30, [X31 - 0x10]!
	0x039A45B0 CBZ X1, 0x39A45D0
	0x039A45B4 LDR X8, [X1]
	0x039A45B8 MOV X0, X1
	0x039A45BC LDR X2, [X8 + 0x238]
	0x039A45C0 LDR X8, [X8 + 0x240]
	0x039A45C4 MOV X1, X8
	0x039A45C8 LDR X30, [X31], #0x10
	0x039A45CC BR X2
	0x039A45D0 BL 0x1C16F20
	0x039A45D4 STR X30, [X31 - 0x10]!
	0x039A45D8 CBZ X1, 0x39A45E8
	0x039A45DC LDR X0, [X1 + 0x28]
	0x039A45E0 LDR X30, [X31], #0x10
	0x039A45E4 RET
	0x039A45E8 BL 0x1C16F20
	0x039A45EC STR X30, [X31 - 0x20]!
	0x039A45F0 STP X20, X19, [X31 + 0x10]
	0x039A45F4 ADRP X20, 0xA3D000
	0x039A45F8 LDRB W8, [X20 + 0xB97]
	0x039A45FC MOV X19, X0
	0x039A4600 TBNZ X8, 0x0, 0x39A4624
	0x039A4604 ADRP X0, 0x7AD000
	0x039A4608 LDR X0, [X0 + 0x4C8]
	0x039A460C BL 0x1C16CF4
	0x039A4610 ADRP X0, 0x7AD000
	0x039A4614 LDR X0, [X0 + 0x698]
	0x039A4618 BL 0x1C16CF4
	0x039A461C MOVZ W8, 0x1
	0x039A4620 STRB W8, [X20 + 0xB97]
	0x039A4624 LDR X8, [X19 + 0x10]
	0x039A4628 CBZ X8, 0x39A46A4
	0x039A462C LDR X8, [X8 + 0x20]
	0x039A4630 CBZ X8, 0x39A46A4
	0x039A4634 LDR X19, [X8 + 0x10]
	0x039A4638 CBZ X19, 0x39A46A4
	0x039A463C ADRP X10, 0x7AD000
	0x039A4640 LDR X8, [X19]
	0x039A4644 LDR X10, [X10 + 0x698]
	0x039A4648 LDRH W9, [X8 + 0x12E]
	0x039A464C LDR X1, [X10]
	0x039A4650 CBZ X9, 0x39A4674
	0x039A4654 LDR X10, [X8 + 0xB0]
	0x039A4658 ADD X10, X10, 0x8
	0x039A465C LDUR X11, [X10 - 0x8]
	0x039A4660 CMP X11, X1
	0x039A4664 B.EQ 0x39A4684
	0x039A4668 SUBS X9, X9, 0x1
	0x039A466C ADD X10, X10, 0x10
	0x039A4670 B.NE 0x39A465C
	0x039A4674 MOV X0, X19
	0x039A4678 MOV W2, W31
	0x039A467C BL 0x1C5C788
	0x039A4680 B 0x39A4690
	0x039A4684 LDRSW X9, [X10]
	0x039A4688 ADD X8, X8, X9, 0x4, LSL
	0x039A468C ADD X0, X8, 0x138
	0x039A4690 LDP X2, X1, [X0]
	0x039A4694 MOV X0, X19
	0x039A4698 LDP X20, X19, [X31 + 0x10]
	0x039A469C LDR X30, [X31], #0x20
	0x039A46A0 BR X2
	0x039A46A4 BL 0x1C16F20
	0x039A46A8 STP X30, X21, [X31 - 0x20]!
	0x039A46AC STP X20, X19, [X31 + 0x10]
	0x039A46B0 ADRP X21, 0xA3D000
	0x039A46B4 LDRB W8, [X21 + 0xB98]
	0x039A46B8 MOV W19, W1
	0x039A46BC MOV X20, X0
	0x039A46C0 TBNZ X8, 0x0, 0x39A46E4
	0x039A46C4 ADRP X0, 0x7AD000
	0x039A46C8 LDR X0, [X0 + 0x4C8]
	0x039A46CC BL 0x1C16CF4
	0x039A46D0 ADRP X0, 0x7AD000
	0x039A46D4 LDR X0, [X0 + 0x698]
	0x039A46D8 BL 0x1C16CF4
	0x039A46DC MOVZ W8, 0x1
	0x039A46E0 STRB W8, [X21 + 0xB98]
	0x039A46E4 LDR X8, [X20 + 0x10]
	0x039A46E8 CBZ X8, 0x39A476C
	0x039A46EC LDR X8, [X8 + 0x20]
	0x039A46F0 CBZ X8, 0x39A476C
	0x039A46F4 LDR X20, [X8 + 0x10]
	0x039A46F8 CBZ X20, 0x39A476C
	0x039A46FC ADRP X10, 0x7AD000
	0x039A4700 LDR X8, [X20]
	0x039A4704 LDR X10, [X10 + 0x698]
	0x039A4708 LDRH W9, [X8 + 0x12E]
	0x039A470C LDR X1, [X10]
	0x039A4710 CBZ X9, 0x39A4734
	0x039A4714 LDR X10, [X8 + 0xB0]
	0x039A4718 ADD X10, X10, 0x8
	0x039A471C LDUR X11, [X10 - 0x8]
	0x039A4720 CMP X11, X1
	0x039A4724 B.EQ 0x39A4744
	0x039A4728 SUBS X9, X9, 0x1
	0x039A472C ADD X10, X10, 0x10
	0x039A4730 B.NE 0x39A471C
	0x039A4734 MOVZ W2, 0x1
	0x039A4738 MOV X0, X20
	0x039A473C BL 0x1C5C788
	0x039A4740 B 0x39A4754
	0x039A4744 LDR W9, [X10]
	0x039A4748 ADD W9, W9, 0x1
	0x039A474C ADD X8, X8, W9, 0x4, SXTW
	0x039A4750 ADD X0, X8, 0x138
	0x039A4754 LDP X3, X2, [X0]
	0x039A4758 MOV X0, X20
	0x039A475C MOV W1, W19
	0x039A4760 LDP X20, X19, [X31 + 0x10]
	0x039A4764 LDP X30, X21, [X31], #0x20
	0x039A4768 BR X3
	0x039A476C BL 0x1C16F20
	0x039A4770 STR X30, [X31 - 0x20]!
	0x039A4774 STP X20, X19, [X31 + 0x10]
	0x039A4778 ADRP X20, 0xA3D000
	0x039A477C LDRB W8, [X20 + 0xB99]
	0x039A4780 MOV X19, X0
	0x039A4784 TBNZ X8, 0x0, 0x39A479C
	0x039A4788 ADRP X0, 0x7AD000
	0x039A478C LDR X0, [X0 + 0x4C8]
	0x039A4790 BL 0x1C16CF4
	0x039A4794 MOVZ W8, 0x1
	0x039A4798 STRB W8, [X20 + 0xB99]
	0x039A479C LDR X8, [X19 + 0x10]
	0x039A47A0 CBZ X8, 0x39A47BC
	0x039A47A4 LDR X8, [X8 + 0x20]
	0x039A47A8 CBZ X8, 0x39A47BC
	0x039A47AC LDR W0, [X8 + 0x18]
	0x039A47B0 LDP X20, X19, [X31 + 0x10]
	0x039A47B4 LDR X30, [X31], #0x20
	0x039A47B8 RET
	0x039A47BC BL 0x1C16F20
	0x039A47C0 STP X30, X21, [X31 - 0x20]!
	0x039A47C4 STP X20, X19, [X31 + 0x10]
	0x039A47C8 ADRP X21, 0xA3D000
	0x039A47CC LDRB W8, [X21 + 0xB9A]
	0x039A47D0 MOV W19, W1
	0x039A47D4 MOV X20, X0
	0x039A47D8 TBNZ X8, 0x0, 0x39A47F0
	0x039A47DC ADRP X0, 0x7AD000
	0x039A47E0 LDR X0, [X0 + 0x4C8]
	0x039A47E4 BL 0x1C16CF4
	0x039A47E8 MOVZ W8, 0x1
	0x039A47EC STRB W8, [X21 + 0xB9A]
	0x039A47F0 LDR X8, [X20 + 0x10]
	0x039A47F4 CBZ X8, 0x39A4810
	0x039A47F8 LDR X8, [X8 + 0x20]
	0x039A47FC CBZ X8, 0x39A4810
	0x039A4800 STR W19, [X8 + 0x18]
	0x039A4804 LDP X20, X19, [X31 + 0x10]
	0x039A4808 LDP X30, X21, [X31], #0x20
	0x039A480C RET
	0x039A4810 BL 0x1C16F20
	0x039A4814 STR X30, [X31 - 0x20]!
	0x039A4818 STP X20, X19, [X31 + 0x10]
	0x039A481C ADRP X20, 0xA3D000
	0x039A4820 LDRB W8, [X20 + 0xB9B]
	0x039A4824 MOV X19, X0
	0x039A4828 TBNZ X8, 0x0, 0x39A484C
	0x039A482C ADRP X0, 0x7AD000
	0x039A4830 LDR X0, [X0 + 0x4C8]
	0x039A4834 BL 0x1C16CF4
	0x039A4838 ADRP X0, 0x7AD000
	0x039A483C LDR X0, [X0 + 0x698]
	0x039A4840 BL 0x1C16CF4
	0x039A4844 MOVZ W8, 0x1
	0x039A4848 STRB W8, [X20 + 0xB9B]
	0x039A484C LDR X8, [X19 + 0x10]
	0x039A4850 CBZ X8, 0x39A48D0
	0x039A4854 LDR X8, [X8 + 0x20]
	0x039A4858 CBZ X8, 0x39A48D0
	0x039A485C LDR X19, [X8 + 0x10]
	0x039A4860 CBZ X19, 0x39A48D0
	0x039A4864 ADRP X10, 0x7AD000
	0x039A4868 LDR X8, [X19]
	0x039A486C LDR X10, [X10 + 0x698]
	0x039A4870 LDRH W9, [X8 + 0x12E]
	0x039A4874 LDR X1, [X10]
	0x039A4878 CBZ X9, 0x39A489C
	0x039A487C LDR X10, [X8 + 0xB0]
	0x039A4880 ADD X10, X10, 0x8
	0x039A4884 LDUR X11, [X10 - 0x8]
	0x039A4888 CMP X11, X1
	0x039A488C B.EQ 0x39A48AC
	0x039A4890 SUBS X9, X9, 0x1
	0x039A4894 ADD X10, X10, 0x10
	0x039A4898 B.NE 0x39A4884
	0x039A489C MOVZ W2, 0x2
	0x039A48A0 MOV X0, X19
	0x039A48A4 BL 0x1C5C788
	0x039A48A8 B 0x39A48BC
	0x039A48AC LDR W9, [X10]
	0x039A48B0 ADD W9, W9, 0x2
	0x039A48B4 ADD X8, X8, W9, 0x4, SXTW
	0x039A48B8 ADD X0, X8, 0x138
	0x039A48BC LDP X2, X1, [X0]
	0x039A48C0 MOV X0, X19
	0x039A48C4 LDP X20, X19, [X31 + 0x10]
	0x039A48C8 LDR X30, [X31], #0x20
	0x039A48CC BR X2
	0x039A48D0 BL 0x1C16F20
	0x039A48D4 STP X30, X23, [X31 - 0x30]!
	0x039A48D8 STP X22, X21, [X31 + 0x10]
	0x039A48DC STP X20, X19, [X31 + 0x20]
	0x039A48E0 ADRP X21, 0xA3D000
	0x039A48E4 LDRB W8, [X21 + 0xB9C]
	0x039A48E8 MOV X19, X1
	0x039A48EC MOV X20, X0
	0x039A48F0 TBNZ X8, 0x0, 0x39A4938
	0x039A48F4 ADRP X0, 0x7AD000
	0x039A48F8 LDR X0, [X0 + 0x730]
	0x039A48FC BL 0x1C16CF4
	0x039A4900 ADRP X0, 0x7AD000
	0x039A4904 LDR X0, [X0 + 0x738]
	0x039A4908 BL 0x1C16CF4
	0x039A490C ADRP X0, 0x7AD000
	0x039A4910 LDR X0, [X0 + 0x4C8]
	0x039A4914 BL 0x1C16CF4
	0x039A4918 ADRP X0, 0x7AD000
	0x039A491C LDR X0, [X0 + 0x740]
	0x039A4920 BL 0x1C16CF4
	0x039A4924 ADRP X0, 0x7AD000
	0x039A4928 LDR X0, [X0 + 0x698]
	0x039A492C BL 0x1C16CF4
	0x039A4930 MOVZ W8, 0x1
	0x039A4934 STRB W8, [X21 + 0xB9C]
	0x039A4938 LDR X8, [X20 + 0x10]
	0x039A493C CBZ X8, 0x39A4A80
	0x039A4940 LDR X8, [X8 + 0x20]
	0x039A4944 CBZ X8, 0x39A4A80
	0x039A4948 LDR X21, [X8 + 0x10]
	0x039A494C CBZ X21, 0x39A4A80
	0x039A4950 ADRP X22, 0x7AD000
	0x039A4954 LDR X8, [X21]
	0x039A4958 LDR X22, [X22 + 0x698]
	0x039A495C ADRP X23, 0x7AD000
	0x039A4960 LDRH W9, [X8 + 0x12E]
	0x039A4964 LDR X1, [X22]
	0x039A4968 LDR X23, [X23 + 0x740]
	0x039A496C CBZ X9, 0x39A4990
	0x039A4970 LDR X10, [X8 + 0xB0]
	0x039A4974 ADD X10, X10, 0x8
	0x039A4978 LDUR X11, [X10 - 0x8]
	0x039A497C CMP X11, X1
	0x039A4980 B.EQ 0x39A49A0
	0x039A4984 SUBS X9, X9, 0x1
	0x039A4988 ADD X10, X10, 0x10
	0x039A498C B.NE 0x39A4978
	0x039A4990 MOVZ W2, 0x3
	0x039A4994 MOV X0, X21
	0x039A4998 BL 0x1C5C788
	0x039A499C B 0x39A49B0
	0x039A49A0 LDR W9, [X10]
	0x039A49A4 ADD W9, W9, 0x3
	0x039A49A8 ADD X8, X8, W9, 0x4, SXTW
	0x039A49AC ADD X0, X8, 0x138
	0x039A49B0 LDP X8, X1, [X0]
	0x039A49B4 MOV X0, X21
	0x039A49B8 BLR X8
	0x039A49BC LDR X1, [X23]
	0x039A49C0 BL 0x21D577C
	0x039A49C4 LDR X8, [X20 + 0x10]
	0x039A49C8 CBZ X8, 0x39A4A80
	0x039A49CC LDR X8, [X8 + 0x20]
	0x039A49D0 CBZ X8, 0x39A4A80
	0x039A49D4 LDR X20, [X8 + 0x10]
	0x039A49D8 ADRP X8, 0x7AD000
	0x039A49DC LDR X8, [X8 + 0x730]
	0x039A49E0 CBZ X19, 0x39A4A00
	0x039A49E4 ADRP X9, 0x7AD000
	0x039A49E8 LDR X9, [X9 + 0x738]
	0x039A49EC LDR X10, [X19]
	0x039A49F0 LDR X9, [X9]
	0x039A49F4 CMP X10, X9
	0x039A49F8 CSEL X1, X19, X31, EQ
	0x039A49FC B 0x39A4A04
	0x039A4A00 MOV X1, X31
	0x039A4A04 LDR X2, [X8]
	0x039A4A08 BL 0x22E75A0
	0x039A4A0C CBZ X20, 0x39A4A80
	0x039A4A10 LDR X8, [X20]
	0x039A4A14 LDR X1, [X22]
	0x039A4A18 MOV W19, W0
	0x039A4A1C LDRH W9, [X8 + 0x12E]
	0x039A4A20 CBZ X9, 0x39A4A44
	0x039A4A24 LDR X10, [X8 + 0xB0]
	0x039A4A28 ADD X10, X10, 0x8
	0x039A4A2C LDUR X11, [X10 - 0x8]
	0x039A4A30 CMP X11, X1
	0x039A4A34 B.EQ 0x39A4A54
	0x039A4A38 SUBS X9, X9, 0x1
	0x039A4A3C ADD X10, X10, 0x10
	0x039A4A40 B.NE 0x39A4A2C
	0x039A4A44 MOVZ W2, 0x5
	0x039A4A48 MOV X0, X20
	0x039A4A4C BL 0x1C5C788
	0x039A4A50 B 0x39A4A64
	0x039A4A54 LDR W9, [X10]
	0x039A4A58 ADD W9, W9, 0x5
	0x039A4A5C ADD X8, X8, W9, 0x4, SXTW
	0x039A4A60 ADD X0, X8, 0x138
	0x039A4A64 LDP X3, X2, [X0]
	0x039A4A68 MOV X0, X20
	0x039A4A6C MOV W1, W19
	0x039A4A70 LDP X20, X19, [X31 + 0x20]
	0x039A4A74 LDP X22, X21, [X31 + 0x10]
	0x039A4A78 LDP X30, X23, [X31], #0x30
	0x039A4A7C BR X3
	0x039A4A80 BL 0x1C16F20
	0x039A4A84 STR X30, [X31 - 0x20]!
	0x039A4A88 STP X20, X19, [X31 + 0x10]
	0x039A4A8C ADRP X20, 0xA3D000
	0x039A4A90 LDRB W8, [X20 + 0xB9D]
	0x039A4A94 MOV X19, X0
	0x039A4A98 TBNZ X8, 0x0, 0x39A4ABC
	0x039A4A9C ADRP X0, 0x7AD000
	0x039A4AA0 LDR X0, [X0 + 0x4C8]
	0x039A4AA4 BL 0x1C16CF4
	0x039A4AA8 ADRP X0, 0x7AD000
	0x039A4AAC LDR X0, [X0 + 0x698]
	0x039A4AB0 BL 0x1C16CF4
	0x039A4AB4 MOVZ W8, 0x1
	0x039A4AB8 STRB W8, [X20 + 0xB9D]
	0x039A4ABC LDR X8, [X19 + 0x10]
	0x039A4AC0 CBZ X8, 0x39A4B40
	0x039A4AC4 LDR X8, [X8 + 0x20]
	0x039A4AC8 CBZ X8, 0x39A4B40
	0x039A4ACC LDR X19, [X8 + 0x10]
	0x039A4AD0 CBZ X19, 0x39A4B40
	0x039A4AD4 ADRP X10, 0x7AD000
	0x039A4AD8 LDR X8, [X19]
	0x039A4ADC LDR X10, [X10 + 0x698]
	0x039A4AE0 LDRH W9, [X8 + 0x12E]
	0x039A4AE4 LDR X1, [X10]
	0x039A4AE8 CBZ X9, 0x39A4B0C
	0x039A4AEC LDR X10, [X8 + 0xB0]
	0x039A4AF0 ADD X10, X10, 0x8
	0x039A4AF4 LDUR X11, [X10 - 0x8]
	0x039A4AF8 CMP X11, X1
	0x039A4AFC B.EQ 0x39A4B1C
	0x039A4B00 SUBS X9, X9, 0x1
	0x039A4B04 ADD X10, X10, 0x10
	0x039A4B08 B.NE 0x39A4AF4
	0x039A4B0C MOVZ W2, 0x3
	0x039A4B10 MOV X0, X19
	0x039A4B14 BL 0x1C5C788
	0x039A4B18 B 0x39A4B2C
	0x039A4B1C LDR W9, [X10]
	0x039A4B20 ADD W9, W9, 0x3
	0x039A4B24 ADD X8, X8, W9, 0x4, SXTW
	0x039A4B28 ADD X0, X8, 0x138
	0x039A4B2C LDP X2, X1, [X0]
	0x039A4B30 MOV X0, X19
	0x039A4B34 LDP X20, X19, [X31 + 0x10]
	0x039A4B38 LDR X30, [X31], #0x20
	0x039A4B3C BR X2
	0x039A4B40 BL 0x1C16F20
	0x039A4B44 STR X30, [X31 - 0x20]!
	0x039A4B48 STP X20, X19, [X31 + 0x10]
	0x039A4B4C ADRP X20, 0xA3D000
	0x039A4B50 LDRB W8, [X20 + 0xB9E]
	0x039A4B54 MOV X19, X0
	0x039A4B58 TBNZ X8, 0x0, 0x39A4B7C
	0x039A4B5C ADRP X0, 0x7AD000
	0x039A4B60 LDR X0, [X0 + 0x748]
	0x039A4B64 BL 0x1C16CF4
	0x039A4B68 ADRP X0, 0x759000
	0x039A4B6C LDR X0, [X0 + 0xEC8]
	0x039A4B70 BL 0x1C16CF4
	0x039A4B74 MOVZ W8, 0x1
	0x039A4B78 STRB W8, [X20 + 0xB9E]
	0x039A4B7C LDR X0, [X19 + 0x10]
	0x039A4B80 CBZ X0, 0x39A4BE0
	0x039A4B84 ADRP X8, 0x759000
	0x039A4B88 LDR X8, [X8 + 0xEC8]
	0x039A4B8C MOV X2, X31
	0x039A4B90 LDR X1, [X8]
	0x039A4B94 BL 0x3397820
	0x039A4B98 CBZ X0, 0x39A4BE0
	0x039A4B9C LDR X8, [X0]
	0x039A4BA0 LDR X1, [X19 + 0x18]
	0x039A4BA4 MOV X2, X31
	0x039A4BA8 LDR X9, [X8 + 0x2C8]
	0x039A4BAC LDR X3, [X8 + 0x2D0]
	0x039A4BB0 BLR X9
	0x039A4BB4 CBZ X0, 0x39A4BD4
	0x039A4BB8 ADRP X8, 0x7AD000
	0x039A4BBC LDR X8, [X8 + 0x748]
	0x039A4BC0 MOV X19, X0
	0x039A4BC4 LDR X20, [X8]
	0x039A4BC8 MOV X1, X20
	0x039A4BCC BL 0x1C16E00
	0x039A4BD0 CBZ X0, 0x39A4BE4
	0x039A4BD4 LDP X20, X19, [X31 + 0x10]
	0x039A4BD8 LDR X30, [X31], #0x20
	0x039A4BDC RET
	0x039A4BE0 BL 0x1C16F20
	0x039A4BE4 MOV X0, X19
	0x039A4BE8 MOV X1, X20
	0x039A4BEC BL 0x1C171E0
	0x039A4BF0 STR X30, [X31 - 0x20]!
	0x039A4BF4 STP X20, X19, [X31 + 0x10]
	0x039A4BF8 ADRP X20, 0xA3D000
	0x039A4BFC LDRB W8, [X20 + 0xB9F]
	0x039A4C00 MOV X19, X0
	0x039A4C04 TBNZ X8, 0x0, 0x39A4C1C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0xA3F000
	014 Move X21, 0x7AF000
	015 Move W8, [X19+2959]
	016 Move X21, [X21+1648]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {129}
	022 Move X0, 0x7AF000
	023 Move X0, [X0+1656]
	024 Call 0x1C17CF4
	025 Move X0, 0x7AF000
	026 Move X0, [X0+1336]
	027 Call 0x1C17CF4
	028 Move X0, 0x7AF000
	029 Move X0, [X0+1360]
	030 Call 0x1C17CF4
	031 Move X0, 0x75A000
	032 Move X0, [X0+2368]
	033 Call 0x1C17CF4
	034 Move X0, 0x7AF000
	035 Move X0, [X0+1504]
	036 Call 0x1C17CF4
	037 Move X0, 0x7AF000
	038 Move X0, [X0+1664]
	039 Call 0x1C17CF4
	040 Move X0, 0x751000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x7AF000
	044 Move X0, [X0+1672]
	045 Call 0x1C17CF4
	046 Move X0, 0x7AF000
	047 Move X0, [X0+1680]
	048 Call 0x1C17CF4
	049 Move X0, 0x751000
	050 Move X0, [X0+3608]
	051 Call 0x1C17CF4
	052 Move X0, 0x7AF000
	053 Move X0, [X0+1688]
	054 Call 0x1C17CF4
	055 Move X0, 0x7AF000
	056 Move X0, [X0+1696]
	057 Call 0x1C17CF4
	058 Move X0, 0x7AF000
	059 Move X0, [X0+1704]
	060 Call 0x1C17CF4
	061 Move X0, 0x7AF000
	062 Move X0, [X0+1712]
	063 Call 0x1C17CF4
	064 Move X0, 0x751000
	065 Move X0, [X0+1432]
	066 Call 0x1C17CF4
	067 Move X0, 0x7AE000
	068 Move X0, [X0+1952]
	069 Call 0x1C17CF4
	070 Move X0, 0x7AF000
	071 Move X0, [X0+1720]
	072 Call 0x1C17CF4
	073 Move X0, 0x7AF000
	074 Move X0, [X0+1160]
	075 Call 0x1C17CF4
	076 Move X0, 0x7AF000
	077 Move X0, [X0+1728]
	078 Call 0x1C17CF4
	079 Move X0, 0x751000
	080 Move X0, [X0+1728]
	081 Call 0x1C17CF4
	082 Move X0, 0x7AF000
	083 Move X0, [X0+1736]
	084 Call 0x1C17CF4
	085 Move X0, 0x7AF000
	086 Move X0, [X0+1744]
	087 Call 0x1C17CF4
	088 Move X0, 0x7AF000
	089 Move X0, [X0+1752]
	090 Call 0x1C17CF4
	091 Move X0, 0x7AF000
	092 Move X0, [X0+1760]
	093 Call 0x1C17CF4
	094 Move X0, 0x7AF000
	095 Move X0, [X0+1768]
	096 Call 0x1C17CF4
	097 Move X0, 0x7AF000
	098 Move X0, [X0+1776]
	099 Call 0x1C17CF4
	100 Move X0, 0x7AF000
	101 Move X0, [X0+1648]
	102 Call 0x1C17CF4
	103 Move X0, 0x7AF000
	104 Move X0, [X0+1784]
	105 Call 0x1C17CF4
	106 Move X0, 0x7AF000
	107 Move X0, [X0+1792]
	108 Call 0x1C17CF4
	109 Move X0, 0x7AF000
	110 Move X0, [X0+1800]
	111 Call 0x1C17CF4
	112 Move X0, 0x7AF000
	113 Move X0, [X0+1616]
	114 Call 0x1C17CF4
	115 Move X0, 0x7AF000
	116 Move X0, [X0+1624]
	117 Call 0x1C17CF4
	118 Move X0, 0x7AF000
	119 Move X0, [X0+1808]
	120 Call 0x1C17CF4
	121 Move X0, 0x77B000
	122 Move X0, [X0+4032]
	123 Call 0x1C17CF4
	124 Move X0, 0x7AF000
	125 Move X0, [X0+1816]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X19+2959], W8
	129 Move X0, [X21]
	130 Call 0x1C17F10
	131 Move X1, X31
	132 Move X19, X0
	133 Call Object..ctor, X0
	134 Compare X19, 0
	135 JumpIfEqual {961}
	136 Move X8, 0x7AF000
	137 Move X8, [X8+1728]
	138 Move [X19+16], X20
	139 Move X23, 0x7AF000
	140 Move X0, [X8]
	141 Move X23, [X23+1160]
	142 Call 0x1C17F10
	143 Move X20, X0
	144 Call Table..ctor, X0
	145 Move X0, [X23]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Compare X20, 0
	151 JumpIfEqual {961}
	152 Move X8, [X23]
	153 Move W9, 1
	154 Move X8, [X8+184]
	155 Move X8, [X8+16]
	156 Move [X20+80], W9
	157 Move [X20+40], X8
	158 Move X8, [X19+16]
	159 Move [X19+80], X20
	160 Compare X8, 0
	161 JumpIfEqual {961}
	162 Move X20, [X8+16]
	163 Compare X20, 0
	164 JumpIfEqual {961}
	165 Move X22, 0x7AF000
	166 Move X8, [X20]
	167 Move X22, [X22+1688]
	168 Move X21, 0x751000
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X1, [X22]
	171 Move X21, [X21+1728]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 9
	181 Move X0, X20
	182 Call 0x1C5D788
	183 Move W9, [X10]
	184 Add W9, W9, 9
	185 Add X8, X8, W9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X1, [X0+8]
	189 Move X0, X20
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move [X19+56], X0
	192 Move X20, X0
	193 Move X0, [X21]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X20
	199 Move X1, X31
	200 Move X2, X31
	201 Call Type.op_Equality, X0, X1
	202 Move TEMP, X0
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {980}
	206 Move X8, [X19+16]
	207 Compare X8, 0
	208 JumpIfEqual {961}
	209 Move X20, [X8+16]
	210 Compare X20, 0
	211 JumpIfEqual {961}
	212 Move X8, [X20]
	213 Move X1, [X22]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 6
	224 Move X0, X20
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 6
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X20
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X0, 0
	235 JumpIfNotEqual {250}
	236 Move X8, 0x77A000
	237 Move X8, [X8+4032]
	238 Move X0, [X8]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X31
	244 Call VolumeManager.get_instance
	245 Compare X0, 0
	246 JumpIfEqual {961}
	247 Move X0, [X0+16]
	248 Compare X0, 0
	249 JumpIfEqual {961}
	250 Move X1, [X19+56]
	251 Move X2, X31
	252 Call VolumeStack.GetComponent, X0, X1
	253 Move [X19+40], X0
	254 Move X8, 0x750000
	255 Move X8, [X8+1432]
	256 Move X20, X0
	257 Move X0, [X8]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X0, X20
	263 Move X1, X31
	264 Move X2, X31
	265 Call Object.op_Equality, X0, X1
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfEqual {980}
	270 Move X8, [X19+16]
	271 Compare X8, 0
	272 JumpIfEqual {961}
	273 Move X20, [X8+16]
	274 Compare X20, 0
	275 JumpIfEqual {961}
	276 Move X8, [X20]
	277 Move X1, [X22]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Compare X9, 0
	280 JumpIfEqual {287}
	281 Move X10, [X8+176]
	282 Add X10, X10, 8
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Subtract X9, X9, 1
	286 Add X10, X10, 16
	287 Move W2, 11
	288 Move X0, X20
	289 Call 0x1C5D788
	290 Move W9, [X10]
	291 Add W9, W9, 11
	292 Add X8, X8, W9
	293 Add X0, X8, 312
	294 Move X8, [X0]
	295 Move X1, [X0+8]
	296 Move X0, X20
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Move X8, [X19+56]
	299 Move [X19+48], X0
	300 Move X1, X31
	301 Move X0, X8
	302 Call ScriptableObject.CreateInstance, X0
	303 Compare X0, 0
	304 JumpIfEqual {324}
	305 Move X8, 0x7AE000
	306 Move X8, [X8+1808]
	307 Move X9, [X0]
	308 Move X1, [X8]
	309 Move W10, [X9+304]
	310 Move W8, [X1+304]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X10, [X9+200]
	313 Subtract X9, X8, 1
	314 Move X10, [X10]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move [X19+64], X0
	317 Move X10, [X0]
	318 Move W11, [X10+304]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move X8, [X10+200]
	321 Move X8, [X8]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Call 0x1C181E0
	324 Move [X19+64], X0
	325 Move X25, 0x7AE000
	326 Move X25, [X25+1720]
	327 Move X0, [X25]
	328 Call 0x1C17F10
	329 Move X20, X0
	330 Call Row..ctor, X0
	331 Move X0, [X23]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Compare X20, 0
	337 JumpIfEqual {961}
	338 Move X8, [X23]
	339 Move W9, 1
	340 Move X21, [X20+72]
	341 Move X8, [X8+184]
	342 Move X8, [X8+40]
	343 Move [X20+80], W9
	344 Move [X20+40], X8
	345 Move X8, 0x7AE000
	346 Move X8, [X8+1624]
	347 Move X0, [X8]
	348 Call 0x1C17F10
	349 Move X22, X0
	350 Call Value..ctor, X0
	351 Compare X22, 0
	352 JumpIfEqual {961}
	353 Move X8, [X23]
	354 Move X26, 0x7AE000
	355 Move X8, [X8+184]
	356 Move X8, [X8+48]
	357 Move [X22+40], X8
	358 Move X26, [X26+1616]
	359 Move X0, [X26]
	360 Move W8, [X0+224]
	361 Compare W8, 0
	362 JumpIfNotEqual {365}
	363 Call 0x1C17DFC
	364 Move X0, [X26]
	365 Move X8, [X0+184]
	366 Move X23, [X8+24]
	367 Compare X23, 0
	368 JumpIfNotEqual {390}
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {374}
	372 Call 0x1C17DFC
	373 Move X0, [X26]
	374 Move X9, 0x7AE000
	375 Move X8, [X0+184]
	376 Move X9, [X9+1504]
	377 Move X24, [X8]
	378 Move X0, [X9]
	379 Call 0x1C17F10
	380 Move X8, 0x7AE000
	381 Move X8, [X8+1744]
	382 Move X1, X24
	383 Move X3, X31
	384 Move X23, X0
	385 Move X2, [X8]
	386 Call Func`1<Object>..ctor, X0, X1, X2
	387 Move X8, [X26]
	388 Move X8, [X8+184]
	389 Move [X8+24], X23
	390 Move [X22+72], X23
	391 Compare X21, 0
	392 JumpIfEqual {961}
	393 Move X8, 0x7AD000
	394 Move X8, [X8+1952]
	395 Move X0, X21
	396 Move X1, X22
	397 Move X2, [X8]
	398 Call 0x2498EC8, X0, X1
	399 Move [X19+32], X20
	400 Move X0, [X25]
	401 Call 0x1C17F10
	402 Move X27, X0
	403 Call Row..ctor, X0
	404 Compare X27, 0
	405 JumpIfEqual {961}
	406 Move X8, 0x7AE000
	407 Move X8, [X8+1816]
	408 Move X21, [X27+72]
	409 Move X8, [X8]
	410 Move [X27+40], X8
	411 Move X8, 0x7AE000
	412 Move X8, [X8+1624]
	413 Move X0, [X8]
	414 Call 0x1C17F10
	415 Move X22, X0
	416 Call Value..ctor, X0
	417 Move X0, [X26]
	418 Move W8, [X0+224]
	419 Compare W8, 0
	420 JumpIfNotEqual {423}
	421 Call 0x1C17DFC
	422 Move X0, [X26]
	423 Move X8, [X0+184]
	424 Move X23, [X8+32]
	425 Compare X23, 0
	426 JumpIfNotEqual {448}
	427 Move W8, [X0+224]
	428 Compare W8, 0
	429 JumpIfNotEqual {432}
	430 Call 0x1C17DFC
	431 Move X0, [X26]
	432 Move X9, 0x7AE000
	433 Move X8, [X0+184]
	434 Move X9, [X9+1504]
	435 Move X24, [X8]
	436 Move X0, [X9]
	437 Call 0x1C17F10
	438 Move X8, 0x7AE000
	439 Move X8, [X8+1752]
	440 Move X1, X24
	441 Move X3, X31
	442 Move X23, X0
	443 Move X2, [X8]
	444 Call Func`1<Object>..ctor, X0, X1, X2
	445 Move X8, [X26]
	446 Move X8, [X8+184]
	447 Move [X8+32], X23
	448 Compare X22, 0
	449 JumpIfEqual {961}
	450 Move [X22+72], X23
	451 Compare X21, 0
	452 JumpIfEqual {961}
	453 Move X8, 0x7AD000
	454 Move X8, [X8+1952]
	455 Move X0, X21
	456 Move X1, X22
	457 Move X2, [X8]
	458 Call 0x2498EC8, X0, X1
	459 Move X28, [X19+48]
	460 Compare X28, 0
	461 JumpIfEqual {961}
	462 Move W8, [X28+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move X20, 0x7AE000
	465 Move X29, 0x7AE000
	466 Move X20, [X20+1360]
	467 Move X29, [X29+1792]
	468 Move W26, W31
	469 Move X8, 0x7AE000
	470 Move X8, [X8+1800]
	471 Move X0, [X8]
	472 Call 0x1C17F10
	473 Move X1, X31
	474 Move X21, X0
	475 Call Object..ctor, X0
	476 Compare X21, 0
	477 JumpIfEqual {961}
	478 Move [X21+24], X19
	479 Move W8, [X28+24]
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Add X8, X28, W26
	482 Move X0, [X8+32]
	483 Move [X21+16], X0
	484 Compare X0, 0
	485 JumpIfEqual {961}
	486 Move X1, X31
	487 Call Volume.HasInstantiatedProfile, X0
	488 Move X8, [X21+16]
	489 Compare X8, 0
	490 JumpIfEqual {961}
	491 Move TEMP, X0
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfNotEqual {499}
	495 Move X0, X8
	496 Move X1, X31
	497 Call Volume.get_profile, X0
	498 Move X22, X0
	499 Move X22, [X8+48]
	500 Move X8, [X21+24]
	501 Compare X8, 0
	502 JumpIfEqual {961}
	503 Move X8, [X8+32]
	504 Compare X8, 0
	505 JumpIfEqual {961}
	506 Move X23, [X8+72]
	507 Move X8, 0x7AE000
	508 Move X8, [X8+1624]
	509 Move X0, [X8]
	510 Call 0x1C17F10
	511 Move X24, X0
	512 Call Value..ctor, X0
	513 Compare X22, 0
	514 JumpIfEqual {961}
	515 Move X0, X22
	516 Move X1, X31
	517 Call Object.get_name, X0
	518 Compare X24, 0
	519 JumpIfEqual {961}
	520 Move [X24+40], X0
	521 Move X8, 0x7AE000
	522 Move X8, [X8+1504]
	523 Move X0, [X8]
	524 Call 0x1C17F10
	525 Move X8, 0x7AE000
	526 Move X8, [X8+1784]
	527 Move X1, X21
	528 Move X3, X31
	529 Move X25, X0
	530 Move X2, [X8]
	531 Call Func`1<Object>..ctor, X0, X1, X2
	532 Move [X24+72], X25
	533 Compare X23, 0
	534 JumpIfEqual {961}
	535 Move X8, 0x7AD000
	536 Move X8, [X8+1952]
	537 Move X0, X23
	538 Move X1, X24
	539 Move X2, [X8]
	540 Call 0x2498EC8, X0, X1
	541 Move X8, 0x7AE000
	542 Move X23, [X27+72]
	543 Move X8, [X8+1712]
	544 Move X0, [X8]
	545 Call 0x1C17F10
	546 Move X24, X0
	547 Call ObjectField..ctor, X0
	548 Move X0, X22
	549 Move X1, X31
	550 Call Object.get_name, X0
	551 Compare X24, 0
	552 JumpIfEqual {961}
	553 Move [X24+40], X0
	554 Move X0, [X20]
	555 Call 0x1C17F10
	556 Move X2, [X29]
	557 Move X1, X21
	558 Move X3, X31
	559 Move X22, X0
	560 Call Func`1<Object>..ctor, X0, X1, X2
	561 Move [X24+72], X22
	562 Compare X23, 0
	563 JumpIfEqual {961}
	564 Move X8, 0x7AD000
	565 Move X8, [X8+1952]
	566 Move X0, X23
	567 Move X1, X24
	568 Move X2, [X8]
	569 Call 0x2498EC8, X0, X1
	570 Move W8, [X28+24]
	571 Add W26, W26, 1
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move X8, [X19+32]
	574 Compare X8, 0
	575 JumpIfEqual {961}
	576 Move X21, [X8+72]
	577 Move X8, 0x7AE000
	578 Move X8, [X8+1624]
	579 Move X0, [X8]
	580 Call 0x1C17F10
	581 Move X22, X0
	582 Call Value..ctor, X0
	583 Move X20, 0x7AE000
	584 Move X20, [X20+1160]
	585 Move X26, 0x7AE000
	586 Move X0, [X20]
	587 Move W8, [X0+224]
	588 Move X26, [X26+1616]
	589 Compare W8, 0
	590 JumpIfNotEqual {592}
	591 Call 0x1C17DFC
	592 Compare X22, 0
	593 JumpIfEqual {961}
	594 Move X8, [X20]
	595 Move X25, 0x7AE000
	596 Move X8, [X8+184]
	597 Move X8, [X8+56]
	598 Move [X22+40], X8
	599 Move X0, [X26]
	600 Move W8, [X0+224]
	601 Move X25, [X25+1688]
	602 Compare W8, 0
	603 JumpIfNotEqual {606}
	604 Call 0x1C17DFC
	605 Move X0, [X26]
	606 Move X8, [X0+184]
	607 Move X23, [X8+40]
	608 Compare X23, 0
	609 JumpIfNotEqual {631}
	610 Move W8, [X0+224]
	611 Compare W8, 0
	612 JumpIfNotEqual {615}
	613 Call 0x1C17DFC
	614 Move X0, [X26]
	615 Move X9, 0x7AE000
	616 Move X8, [X0+184]
	617 Move X9, [X9+1504]
	618 Move X24, [X8]
	619 Move X0, [X9]
	620 Call 0x1C17F10
	621 Move X8, 0x7AE000
	622 Move X8, [X8+1760]
	623 Move X1, X24
	624 Move X3, X31
	625 Move X23, X0
	626 Move X2, [X8]
	627 Call Func`1<Object>..ctor, X0, X1, X2
	628 Move X8, [X26]
	629 Move X8, [X8+184]
	630 Move [X8+40], X23
	631 Move [X22+72], X23
	632 Compare X21, 0
	633 JumpIfEqual {961}
	634 Move X8, 0x7AD000
	635 Move X8, [X8+1952]
	636 Move X0, X21
	637 Move X1, X22
	638 Move X2, [X8]
	639 Call 0x2498EC8, X0, X1
	640 Move X8, [X19+80]
	641 Compare X8, 0
	642 JumpIfEqual {961}
	643 Move X0, [X8+72]
	644 Compare X0, 0
	645 JumpIfEqual {961}
	646 Move X8, 0x7AD000
	647 Move X1, [X19+32]
	648 Move X8, [X8+1952]
	649 Move X2, [X8]
	650 Call 0x2498EC8, X0, X1
	651 Move X8, 0x7AE000
	652 Move X21, [X27+72]
	653 Move X8, [X8+1624]
	654 Move X0, [X8]
	655 Call 0x1C17F10
	656 Move X22, X0
	657 Call Value..ctor, X0
	658 Move X0, [X26]
	659 Move W8, [X0+224]
	660 Compare W8, 0
	661 JumpIfNotEqual {664}
	662 Call 0x1C17DFC
	663 Move X0, [X26]
	664 Move X8, [X0+184]
	665 Move X23, [X8+48]
	666 Compare X23, 0
	667 JumpIfNotEqual {689}
	668 Move W8, [X0+224]
	669 Compare W8, 0
	670 JumpIfNotEqual {673}
	671 Call 0x1C17DFC
	672 Move X0, [X26]
	673 Move X9, 0x7AE000
	674 Move X8, [X0+184]
	675 Move X9, [X9+1504]
	676 Move X24, [X8]
	677 Move X0, [X9]
	678 Call 0x1C17F10
	679 Move X8, 0x7AE000
	680 Move X8, [X8+1768]
	681 Move X1, X24
	682 Move X3, X31
	683 Move X23, X0
	684 Move X2, [X8]
	685 Call Func`1<Object>..ctor, X0, X1, X2
	686 Move X8, [X26]
	687 Move X8, [X8+184]
	688 Move [X8+48], X23
	689 Compare X22, 0
	690 JumpIfEqual {961}
	691 Move [X22+72], X23
	692 Compare X21, 0
	693 JumpIfEqual {961}
	694 Move X8, 0x7AD000
	695 Move X8, [X8+1952]
	696 Move X0, X21
	697 Move X1, X22
	698 Move X2, [X8]
	699 Call 0x2498EC8, X0, X1
	700 Move X8, [X19+80]
	701 Compare X8, 0
	702 JumpIfEqual {961}
	703 Move X0, [X8+72]
	704 Compare X0, 0
	705 JumpIfEqual {961}
	706 Move X8, 0x7AD000
	707 Move X8, [X8+1952]
	708 Move X1, X27
	709 Move X2, [X8]
	710 Call 0x2498EC8, X0, X1
	711 Move X8, 0x7AE000
	712 Move X8, [X8+1704]
	713 Move X0, [X8]
	714 Call 0x1C17F10
	715 Move X8, 0x7AE000
	716 Move X8, [X8+1696]
	717 Move X20, X0
	718 Move X1, [X8]
	719 Call List`1<Object>..ctor, X0
	720 Move X1, [X19+56]
	721 Move X0, X19
	722 Move X2, X31
	723 Move W3, W31
	724 Move [X19+24], X20
	725 Call <>c__DisplayClass3_0.<CreateVolumeTable>g__AddParameterRows|0, X0, X1, X2, X3
	726 Move X0, [X26]
	727 Move X20, [X19+24]
	728 Move W8, [X0+224]
	729 Compare W8, 0
	730 JumpIfNotEqual {733}
	731 Call 0x1C17DFC
	732 Move X0, [X26]
	733 Move X8, [X0+184]
	734 Move X21, [X8+64]
	735 Compare X21, 0
	736 JumpIfNotEqual {758}
	737 Move W8, [X0+224]
	738 Compare W8, 0
	739 JumpIfNotEqual {742}
	740 Call 0x1C17DFC
	741 Move X0, [X26]
	742 Move X9, 0x7AE000
	743 Move X8, [X0+184]
	744 Move X9, [X9+1664]
	745 Move X22, [X8]
	746 Move X0, [X9]
	747 Call 0x1C17F10
	748 Move X8, 0x7AE000
	749 Move X8, [X8+1736]
	750 Move X1, X22
	751 Move X3, X31
	752 Move X21, X0
	753 Move X2, [X8]
	754 Call Func`2<Object, Object>..ctor, X0, X1, X2
	755 Move X8, [X26]
	756 Move X8, [X8+184]
	757 Move [X8+64], X21
	758 Move X8, 0x7AE000
	759 Move X8, [X8+1656]
	760 Move X0, X20
	761 Move X1, X21
	762 Move X2, [X8]
	763 Call Enumerable.OrderBy, X0, X1
	764 Compare X0, 0
	765 JumpIfEqual {961}
	766 Move X10, 0x7AE000
	767 Move X8, [X0]
	768 Move X10, [X10+1672]
	769 Move X20, X0
	770 NotImplemented "Instruction LDRH not yet implemented."
	771 Move X1, [X10]
	772 Compare X9, 0
	773 JumpIfEqual {780}
	774 Move X10, [X8+176]
	775 Add X10, X10, 8
	776 NotImplemented "Instruction LDUR not yet implemented."
	777 NotImplemented "Instruction CMP not yet implemented."
	778 Subtract X9, X9, 1
	779 Add X10, X10, 16
	780 Move X0, X20
	781 Move W2, W31
	782 Call 0x1C5D788
	783 NotImplemented "Instruction LDRSW not yet implemented."
	784 Add X8, X8, X9
	785 Add X0, X8, 312
	786 Move X8, [X0]
	787 Move X1, [X0+8]
	788 Move X0, X20
	789 NotImplemented "Instruction BLR not yet implemented."
	790 Move X20, X0
	791 Compare X0, 0
	792 JumpIfEqual {997}
	793 Move X21, 0x750000
	794 Move X22, 0x7AE000
	795 Move X21, [X21+3608]
	796 Move X22, [X22+1680]
	797 Move X8, [X20]
	798 Move X1, [X21]
	799 NotImplemented "Instruction LDRH not yet implemented."
	800 Compare X9, 0
	801 JumpIfEqual {808}
	802 Move X10, [X8+176]
	803 Add X10, X10, 8
	804 NotImplemented "Instruction LDUR not yet implemented."
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Subtract X9, X9, 1
	807 Add X10, X10, 16
	808 Move X0, X20
	809 Move W2, W31
	810 Call 0x1C5D788
	811 NotImplemented "Instruction LDRSW not yet implemented."
	812 Add X8, X8, X9
	813 Add X0, X8, 312
	814 Move X8, [X0]
	815 Move X1, [X0+8]
	816 Move X0, X20
	817 NotImplemented "Instruction BLR not yet implemented."
	818 Move TEMP, X0
	819 And TEMP, TEMP, 1
	820 Compare TEMP, 1
	821 JumpIfNotEqual {854}
	822 Move X8, [X20]
	823 Move X1, [X22]
	824 NotImplemented "Instruction LDRH not yet implemented."
	825 Compare X9, 0
	826 JumpIfEqual {833}
	827 Move X10, [X8+176]
	828 Add X10, X10, 8
	829 NotImplemented "Instruction LDUR not yet implemented."
	830 NotImplemented "Instruction CMP not yet implemented."
	831 Subtract X9, X9, 1
	832 Add X10, X10, 16
	833 Move X0, X20
	834 Move W2, W31
	835 Call 0x1C5D788
	836 NotImplemented "Instruction LDRSW not yet implemented."
	837 Add X8, X8, X9
	838 Add X0, X8, 312
	839 Move X8, [X0]
	840 Move X1, [X0+8]
	841 Move X0, X20
	842 NotImplemented "Instruction BLR not yet implemented."
	843 Move X1, X0
	844 Move X8, [X19+80]
	845 Compare X8, 0
	846 JumpIfEqual {995}
	847 Move X0, [X8+72]
	848 Compare X0, 0
	849 JumpIfEqual {996}
	850 Move X8, 0x7AD000
	851 Move X8, [X8+1952]
	852 Move X2, [X8]
	853 Call 0x2498EC8, X0, X1
	854 Move X21, X31
	855 Compare X20, 0
	856 JumpIfEqual {880}
	857 Move X10, 0x750000
	858 Move X8, [X20]
	859 Move X10, [X10+3584]
	860 NotImplemented "Instruction LDRH not yet implemented."
	861 Move X1, [X10]
	862 Compare X9, 0
	863 JumpIfEqual {870}
	864 Move X10, [X8+176]
	865 Add X10, X10, 8
	866 NotImplemented "Instruction LDUR not yet implemented."
	867 NotImplemented "Instruction CMP not yet implemented."
	868 Subtract X9, X9, 1
	869 Add X10, X10, 16
	870 Move X0, X20
	871 Move W2, W31
	872 Call 0x1C5D788
	873 NotImplemented "Instruction LDRSW not yet implemented."
	874 Add X8, X8, X9
	875 Add X0, X8, 312
	876 Move X8, [X0]
	877 Move X1, [X0+8]
	878 Move X0, X20
	879 NotImplemented "Instruction BLR not yet implemented."
	880 Compare X21, 0
	881 JumpIfNotEqual {998}
	882 Move X8, [X19+16]
	883 Compare X8, 0
	884 JumpIfEqual {961}
	885 Move X20, [X8+16]
	886 Compare X20, 0
	887 JumpIfEqual {961}
	888 Move X8, [X20]
	889 Move X21, [X19+48]
	890 Move X1, [X25]
	891 NotImplemented "Instruction LDRH not yet implemented."
	892 Compare X9, 0
	893 JumpIfEqual {900}
	894 Move X10, [X8+176]
	895 Add X10, X10, 8
	896 NotImplemented "Instruction LDUR not yet implemented."
	897 NotImplemented "Instruction CMP not yet implemented."
	898 Subtract X9, X9, 1
	899 Add X10, X10, 16
	900 Move W2, 13
	901 Move X0, X20
	902 Call 0x1C5D788
	903 Move W9, [X10]
	904 Add W9, W9, 13
	905 Add X8, X8, W9
	906 Add X0, X8, 312
	907 Move X8, [X0]
	908 Move X2, [X0+8]
	909 Move X0, X20
	910 Move X1, X21
	911 NotImplemented "Instruction BLR not yet implemented."
	912 Move X8, [X19+48]
	913 Compare X8, 0
	914 JumpIfEqual {961}
	915 Move X20, X31
	916 Move W9, [X8+24]
	917 NotImplemented "Instruction CMP not yet implemented."
	918 Move X10, [X19+16]
	919 Compare X10, 0
	920 JumpIfEqual {961}
	921 NotImplemented "Instruction CMP not yet implemented."
	922 Move X22, [X10+16]
	923 Compare X22, 0
	924 JumpIfEqual {961}
	925 Move X9, [X22]
	926 Add X8, X8, X20
	927 Move X21, [X19+80]
	928 Move X23, [X8+32]
	929 NotImplemented "Instruction LDRH not yet implemented."
	930 Move X1, [X25]
	931 Compare X8, 0
	932 JumpIfEqual {939}
	933 Move X10, [X9+176]
	934 Add X10, X10, 8
	935 NotImplemented "Instruction LDUR not yet implemented."
	936 NotImplemented "Instruction CMP not yet implemented."
	937 Subtract X8, X8, 1
	938 Add X10, X10, 16
	939 Move W2, 12
	940 Move X0, X22
	941 Call 0x1C5D788
	942 Move W8, [X10]
	943 Add W8, W8, 12
	944 Add X8, X9, W8
	945 Add X0, X8, 312
	946 Move X8, [X0]
	947 Move X2, [X0+8]
	948 Move X0, X22
	949 Move X1, X23
	950 NotImplemented "Instruction BLR not yet implemented."
	951 Compare X21, 0
	952 JumpIfEqual {961}
	953 Add X20, X20, 1
	954 And W2, W0, 1
	955 Move X0, X21
	956 Move W1, W20
	957 Call Table.SetColumnVisibility, X0, X1, X2
	958 Move X8, [X19+48]
	959 Compare X8, 0
	960 JumpIfNotEqual {916}
	961 Call 0x1C17F20
	962 Move X8, -48979968
	963 Move V0, [X8+4088]
	964 Move X8, 0x759000
	965 Move X21, [X19+80]
	966 Move [X19+72], D0
	967 Move X8, [X8+2368]
	968 Move X0, [X8]
	969 Call 0x1C17F10
	970 Move X8, 0x7AE000
	971 Move X8, [X8+1776]
	972 Move X1, X19
	973 Move X3, X31
	974 Move X20, X0
	975 Move X2, [X8]
	976 Call Func`1<Boolean>..ctor, X0, X1, X2
	977 Compare X21, 0
	978 JumpIfEqual {961}
	979 Move [X21+64], X20
	980 Move X0, [X19+80]
	981 Move X20, [X31+80]
	982 Move X19, [X31+88]
	983 Move X22, [X31+64]
	984 Move X21, [X31+72]
	985 Move X24, [X31+48]
	986 Move X23, [X31+56]
	987 Move X26, [X31+32]
	988 Move X25, [X31+40]
	989 Move X28, [X31+16]
	990 Move X27, [X31+24]
	991 Move X29, [X31+96]
	992 Move X30, [X31+104]
	993 Return X0
	994 Call 0x1C17F28
	995 Call 0x1C17F20
	996 Call 0x1C17F20
	997 Call 0x1C17F20
	998 Move X0, X21
	999 Call 0x1C17F18
	1000 Move X22, X0
	1001 NotImplemented "Instruction CMP not yet implemented."
	1002 Move X0, X22
	1003 Call 0x3EB2AD0
	1004 Move X21, [X0]
	1005 Call 0x3EB2AE0
	1006 Move X25, 0x7AE000
	1007 Move X25, [X25+1688]
	1008 Compare X20, 0
	1009 JumpIfNotEqual {857}
	1010 Move X21, X31
	1011 Move X22, X0
	1012 Compare X20, 0
	1013 JumpIfEqual {1037}
	1014 Move X10, 0x750000
	1015 Move X8, [X20]
	1016 Move X10, [X10+3584]
	1017 NotImplemented "Instruction LDRH not yet implemented."
	1018 Move X1, [X10]
	1019 Compare X9, 0
	1020 JumpIfEqual {1027}
	1021 Move X10, [X8+176]
	1022 Add X10, X10, 8
	1023 NotImplemented "Instruction LDUR not yet implemented."
	1024 NotImplemented "Instruction CMP not yet implemented."
	1025 Subtract X9, X9, 1
	1026 Add X10, X10, 16
	1027 Move X0, X20
	1028 Move W2, W31
	1029 Call 0x1C5D788
	1030 NotImplemented "Instruction LDRSW not yet implemented."
	1031 Add X8, X8, X9
	1032 Add X0, X8, 312
	1033 Move X8, [X0]
	1034 Move X1, [X0+8]
	1035 Move X0, X20
	1036 NotImplemented "Instruction BLR not yet implemented."
	1037 Compare X21, 0
	1038 JumpIfNotEqual {1041}
	1039 Move X0, X22
	1040 Call 0x1D2D690
	1041 Move X0, X21
	1042 Call 0x1C17F18
	1043 Call 0x1991590

