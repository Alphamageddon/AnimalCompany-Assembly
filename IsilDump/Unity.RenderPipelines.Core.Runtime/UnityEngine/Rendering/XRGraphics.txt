Type: UnityEngine.Rendering.XRGraphics

Method: System.Single get_eyeTextureResolutionScale()

Disassembly:
	0x039A13EC ADD X8, X8, W9, 0x4, SXTW
	0x039A13F0 ADD X0, X8, 0x138
	0x039A13F4 LDP X8, X1, [X0]
	0x039A13F8 ADRP X23, 0x7B0000
	0x039A13FC LDR X23, [X23 + 0x430]
	0x039A1400 MOV X0, X20
	0x039A1404 BLR X8
	0x039A1408 LDR X8, [X20]
	0x039A140C LDR X22, [X19 + 0x10]
	0x039A1410 LDR X1, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call XRSettings.get_enabled
	004 Move TEMP, X0
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {12}
	008 Move X0, X31
	009 Move X30, [X31+16]
	010 Call XRSettings.get_eyeTextureResolutionScale
	011 Return V0
	012 Move S0, 1
	013 Move X30, [X31+16]
	014 Return V0

Method: System.Void set_eyeTextureResolutionScale(System.Single value)

Disassembly:
	0x039A141C CBZ X9, 0x39A1440
	0x039A1420 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, X31
	002 Call XRSettings.set_eyeTextureResolutionScale, V0
	003 Return 

Method: System.Single get_renderViewportScale()

Disassembly:
	0x039A1424 ADD X10, X10, 0x8
	0x039A1428 LDUR X11, [X10 - 0x8]
	0x039A142C CMP X11, X1
	0x039A1430 B.EQ 0x39A1450
	0x039A1434 SUBS X9, X9, 0x1
	0x039A1438 ADD X10, X10, 0x10
	0x039A143C B.NE 0x39A1428
	0x039A1440 MOV X0, X20
	0x039A1444 MOV W2, W31
	0x039A1448 BL 0x1C5C788

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call XRSettings.get_enabled
	004 Move TEMP, X0
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {12}
	008 Move X0, X31
	009 Move X30, [X31+16]
	010 Call XRSettings.get_renderViewportScale
	011 Return V0
	012 Move S0, 1
	013 Move X30, [X31+16]
	014 Return V0

Method: System.Boolean get_enabled()

Disassembly:
	0x039A1414 MOV X21, X0
	0x039A1418 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move X0, X31
	002 Call XRSettings.get_enabled
	003 Return X0

Method: System.Boolean get_isDeviceActive()

Disassembly:
	0x039A144C B 0x39A145C
	0x039A1450 LDRSW X9, [X10]
	0x039A1454 ADD X8, X8, X9, 0x4, LSL
	0x039A1458 ADD X0, X8, 0x138
	0x039A145C LDP X8, X1, [X0]
	0x039A1460 MOV X0, X20
	0x039A1464 BLR X8
	0x039A1468 LDR X9, [X20]
	0x039A146C LDR X8, [X23]
	0x039A1470 MOV X23, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call XRSettings.get_enabled
	004 Move TEMP, X0
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {12}
	008 Move X0, X31
	009 Move X30, [X31+16]
	010 Call XRSettings.get_isDeviceActive
	011 Return X0
	012 Move W0, W31
	013 Move X30, [X31+16]
	014 Return X0

Method: System.String get_loadedDeviceName()

Disassembly:
	0x039A1474 LDRB W11, [X9 + 0x130]
	0x039A1478 LDRB W10, [X8 + 0x130]
	0x039A147C CMP W11, W10
	0x039A1480 B.CC 0x39A1498
	0x039A1484 LDR X9, [X9 + 0xC8]
	0x039A1488 ADD X9, X9, X10, 0x3, LSL
	0x039A148C LDUR X9, [X9 - 0x8]
	0x039A1490 CMP X9, X8
	0x039A1494 B.EQ 0x39A15AC
	0x039A1498 MOV W3, W31
	0x039A149C CBZ X22, 0x39A15C4
	0x039A14A0 MOVZ W2, 0x1
	0x039A14A4 MOV X0, X22
	0x039A14A8 MOV X1, X23
	0x039A14AC MOV W4, W31
	0x039A14B0 BL 0x399C198
	0x039A14B4 CBZ X0, 0x39A15C4
	0x039A14B8 LDR X8, [X20]
	0x039A14BC LDR X22, [X0 + 0x28]
	0x039A14C0 LDR X1, [X24]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0xA41000
	004 Move W8, [X19+2941]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x7B1000
	010 Move X0, [X0+936]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+2941], W8
	014 Move X0, X31
	015 Call XRSettings.get_enabled
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {25}
	020 Move X0, X31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call XRSettings.get_loadedDeviceName
	024 Return X0
	025 Move X8, 0x7B1000
	026 Move X8, [X8+936]
	027 Move X0, [X8]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0

Method: System.String[] get_supportedDevices()

Disassembly:
	0x039A14C4 MOV X23, X0
	0x039A14C8 LDRH W9, [X8 + 0x12E]
	0x039A14CC CBZ X9, 0x39A14F0
	0x039A14D0 LDR X10, [X8 + 0xB0]
	0x039A14D4 ADD X10, X10, 0x8
	0x039A14D8 LDUR X11, [X10 - 0x8]
	0x039A14DC CMP X11, X1
	0x039A14E0 B.EQ 0x39A1500
	0x039A14E4 SUBS X9, X9, 0x1
	0x039A14E8 ADD X10, X10, 0x10
	0x039A14EC B.NE 0x39A14D8
	0x039A14F0 MOVZ W2, 0x2
	0x039A14F4 MOV X0, X20
	0x039A14F8 BL 0x1C5C788
	0x039A14FC B 0x39A1510
	0x039A1500 LDR W9, [X10]
	0x039A1504 ADD W9, W9, 0x2
	0x039A1508 ADD X8, X8, W9, 0x4, SXTW
	0x039A150C ADD X0, X8, 0x138
	0x039A1510 LDP X8, X1, [X0]
	0x039A1514 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0xA41000
	004 Move W8, [X19+2942]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x753000
	010 Move X0, [X0+2760]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+2942], W8
	014 Move X0, X31
	015 Call XRSettings.get_enabled
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {25}
	020 Move X0, X31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call XRSettings.get_supportedDevices
	024 Return X0
	025 Move X8, 0x753000
	026 Move X8, [X8+2760]
	027 Move W1, 1
	028 Move X0, [X8]
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Call 0x1C17D6C
	032 Return X0

Method: UnityEngine.Rendering.XRGraphics/StereoRenderingMode get_stereoRenderingMode()

Disassembly:
	0x039A1518 BLR X8
	0x039A151C STR W0, [X23 + 0x10]
	0x039A1520 LDR X0, [X19 + 0x18]
	0x039A1524 CBZ X0, 0x39A15C4
	0x039A1528 ADRP X9, 0x7B0000
	0x039A152C LDR X9, [X9 + 0x440]
	0x039A1530 LDR W10, [X0 + 0x1C]
	0x039A1534 LDR X8, [X0 + 0x10]
	0x039A1538 LDR X9, [X9]
	0x039A153C ADD W10, W10, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call XRSettings.get_enabled
	004 Move TEMP, X0
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {12}
	008 Move X0, X31
	009 Move X30, [X31+16]
	010 Call XRSettings.get_stereoRenderingMode
	011 Return X0
	012 Move W0, 1
	013 Move X30, [X31+16]
	014 Return X0

Method: UnityEngine.RenderTextureDescriptor get_eyeTextureDesc()

Disassembly:
	0x039A1540 STR W10, [X0 + 0x1C]
	0x039A1544 CBZ X8, 0x39A15C4
	0x039A1548 LDRSW X10, [X0 + 0x18]
	0x039A154C LDR W11, [X8 + 0x18]
	0x039A1550 CMP W10, W11
	0x039A1554 B.CS 0x39A156C
	0x039A1558 ADD W9, W10, 0x1
	0x039A155C ADD X8, X8, X10, 0x3, LSL
	0x039A1560 STR W9, [X0 + 0x18]
	0x039A1564 STR X20, [X8 + 0x20]
	0x039A1568 B 0x39A1580
	0x039A156C LDR X8, [X9 + 0x20]
	0x039A1570 MOV X1, X20
	0x039A1574 LDR X8, [X8 + 0xC0]
	0x039A1578 LDR X2, [X8 + 0x70]
	0x039A157C BL 0x301BF90
	0x039A1580 CBZ X22, 0x39A15C4
	0x039A1584 ADRP X8, 0x7AF000
	0x039A1588 LDR X8, [X8 + 0x7A8]
	0x039A158C MOV X0, X22
	0x039A1590 MOV X1, X21
	0x039A1594 LDP X20, X19, [X31 + 0x30]
	0x039A1598 LDR X2, [X8]
	0x039A159C LDP X22, X21, [X31 + 0x20]
	0x039A15A0 LDP X24, X23, [X31 + 0x10]
	0x039A15A4 LDR X30, [X31], #0x40
	0x039A15A8 B 0x249801C
	0x039A15AC LDR X8, [X20]
	0x039A15B0 MOV X0, X20
	0x039A15B4 LDP X9, X1, [X8 + 0x1C8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X0, X31
	005 Move X19, X8
	006 Call XRSettings.get_enabled
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {26}
	011 Add X8, X31, 8
	012 Move X0, X31
	013 Call XRSettings.get_eyeTextureDesc
	014 Move W8, [X31+56]
	015 NotImplemented "Instruction LDUR not yet implemented."
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 Move [X19+48], W8
	019 Move [X19+16], V1
	020 Move [X19+24], V0
	021 Move [X19], V2
	022 Move X30, [X31+64]
	023 Move X19, [X31+72]
	024 Add X31, X31, 80
	025 Return X0
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X19+48], W31
	028 Move [X19+16], V0
	029 Move [X19+24], V0
	030 Move [X19], V0
	031 Move X0, X19
	032 Move X30, [X31+64]
	033 Move X19, [X31+72]
	034 Move W1, W31
	035 Move W2, W31
	036 Move X3, X31
	037 Add X31, X31, 80
	038 Call RenderTextureDescriptor..ctor, X0, X1, X2
	039 Return X0

Method: System.Int32 get_eyeTextureWidth()

Disassembly:
	0x039A15B8 BLR X9
	0x039A15BC MOV W3, W0
	0x039A15C0 CBNZ X22, 0x39A14A0
	0x039A15C4 BL 0x1C16F20
	0x039A15C8 LDR X0, [X0 + 0x10]
	0x039A15CC RET
	0x039A15D0 STR X30, [X31 - 0x20]!
	0x039A15D4 STP X20, X19, [X31 + 0x10]
	0x039A15D8 MOV X19, X1
	0x039A15DC MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call XRSettings.get_enabled
	004 Move TEMP, X0
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {12}
	008 Move X0, X31
	009 Move X30, [X31+16]
	010 Call XRSettings.get_eyeTextureWidth
	011 Return X0
	012 Move W0, W31
	013 Move X30, [X31+16]
	014 Return X0

Method: System.Int32 get_eyeTextureHeight()

Disassembly:
	0x039A15E0 MOV X20, X0
	0x039A15E4 BL 0x33BDD8C
	0x039A15E8 STR X19, [X20 + 0x10]
	0x039A15EC LDP X20, X19, [X31 + 0x10]
	0x039A15F0 LDR X30, [X31], #0x20
	0x039A15F4 RET
	0x039A15F8 MOV W0, W31
	0x039A15FC RET
	0x039A1600 MOVZ W0, 0x1
	0x039A1604 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call XRSettings.get_enabled
	004 Move TEMP, X0
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {12}
	008 Move X0, X31
	009 Move X30, [X31+16]
	010 Call XRSettings.get_eyeTextureHeight
	011 Return X0
	012 Move W0, W31
	013 Move X30, [X31+16]
	014 Return X0

Method: System.Void .ctor()

Disassembly:
	0x039A1608 MOVZ W0, 0x1
	0x039A160C RET

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

