Type: UnityEngine.Rendering.GenericPool`1

Method: T Get()

Disassembly:
	0x02D56510 SUB X31, X31, 0x10
	0x02D56514 MRS X24, 0xC000
	0x02D56518 LDR X8, [X24 + 0x28]
	0x02D5651C MOV X19, X2
	0x02D56520 MOV X23, X1
	0x02D56524 MOV X20, X0
	0x02D56528 STUR X8, [X29 - 0x8]
	0x02D5652C STUR X1, [X29 - 0x10]
	0x02D56530 LDR X8, [X2 + 0x20]
	0x02D56534 LDR X8, [X8 + 0xC0]
	0x02D56538 LDR X9, [X8 + 0x20]
	0x02D5653C LDR W21, [X9 + 0xFC]
	0x02D56540 ADD X9, X31, 0x0
	0x02D56544 ADD X10, X21, 0xF
	0x02D56548 AND X10, X10, 0x1FFFFFFFF
	0x02D5654C SUB X22, X9, X10
	0x02D56550 ADD X31, X22, 0x0
	0x02D56554 LDR X8, [X8]
	0x02D56558 LDR X8, [X8 + 0x80]
	0x02D5655C ADD X1, X8, 0x40
	0x02D56560 BL 0x1C16D18
	0x02D56564 LDR X25, [X0]
	0x02D56568 CBZ X25, 0x2D56738
	0x02D5656C LDR X8, [X19 + 0x20]
	0x02D56570 MOV X0, X20
	0x02D56574 LDR X8, [X8 + 0xC0]
	0x02D56578 LDR X8, [X8]
	0x02D5657C LDR X8, [X8 + 0x80]
	0x02D56580 ADD X1, X8, 0x60
	0x02D56584 BL 0x1C16D18
	0x02D56588 LDR W8, [X0]
	0x02D5658C LDR W9, [X25 + 0x18]
	0x02D56590 CMP W8, W9
	0x02D56594 B.NE 0x2D565FC
	0x02D56598 LDR X8, [X19 + 0x20]
	0x02D5659C MOV X0, X20
	0x02D565A0 LDR X8, [X8 + 0xC0]
	0x02D565A4 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {58}
	043 Move X0, [X19+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, [X8+24]
	055 Move X30, [X31+32]
	056 Call 0x2494CB0, X0
	057 Return X0
	058 Call 0x1C17F20

Method: UnityEngine.Rendering.ObjectPool`1/PooledObject<T> Get(out T value)

Disassembly:
	0x02D565A8 LDR X8, [X8 + 0x80]
	0x02D565AC ADD X1, X8, 0x60
	0x02D565B0 BL 0x1C16D18
	0x02D565B4 LDR W25, [X0]
	0x02D565B8 MOVZ W8, 0x40000000
	0x02D565BC ADDS W31, W25, W8
	0x02D565C0 B.MI 0x2D56740
	0x02D565C4 LDR X8, [X19 + 0x20]
	0x02D565C8 MOV X0, X20
	0x02D565CC LDR X8, [X8 + 0xC0]
	0x02D565D0 LDR X9, [X8]
	0x02D565D4 LDR X8, [X8 + 0x10]
	0x02D565D8 LDR X9, [X9 + 0x80]
	0x02D565DC LDR X26, [X8]
	0x02D565E0 ADD X1, X9, 0x40
	0x02D565E4 BL 0x1C16D18
	0x02D565E8 LDR X8, [X19 + 0x20]
	0x02D565EC UBFM W1, W25, 0x1F, 0x1E
	0x02D565F0 LDR X8, [X8 + 0xC0]
	0x02D565F4 LDR X2, [X8 + 0x10]
	0x02D565F8 BLR X26
	0x02D565FC LDR X8, [X19 + 0x20]
	0x02D56600 MOV X0, X20
	0x02D56604 LDR X8, [X8 + 0xC0]
	0x02D56608 LDR X8, [X8]
	0x02D5660C LDR X8, [X8 + 0x80]
	0x02D56610 ADD X1, X8, 0x40
	0x02D56614 BL 0x1C16D18
	0x02D56618 LDR X8, [X19 + 0x20]
	0x02D5661C LDR X25, [X0]
	0x02D56620 MOV X0, X20
	0x02D56624 LDR X8, [X8 + 0xC0]
	0x02D56628 LDR X8, [X8]
	0x02D5662C LDR X8, [X8 + 0x80]
	0x02D56630 ADD X1, X8, 0x60
	0x02D56634 BL 0x1C16D18
	0x02D56638 LDR X8, [X19 + 0x20]
	0x02D5663C LDRSW X26, [X0]
	0x02D56640 MOV X0, X22
	0x02D56644 MOV X2, X21
	0x02D56648 LDR X8, [X8 + 0xC0]
	0x02D5664C LDR X8, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+16]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X21, [X8]
	045 Compare X21, 0
	046 JumpIfEqual {64}
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, X21
	059 Move X2, [X8+48]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call 0x2494D2C, X0, X1
	063 Return X0
	064 Call 0x1C17F20

Method: System.Void Release(T toRelease)

Disassembly:
	0x02D56650 LDR W8, [X8 + 0x28]
	0x02D56654 CMP W8, 0x0
	0x02D56658 SUB X8, X29, 0x10
	0x02D5665C CSEL X1, X23, X8, LT
	0x02D56660 BL 0x3EB1AC0
	0x02D56664 CBZ X25, 0x2D56738
	0x02D56668 LDR W8, [X25 + 0x18]
	0x02D5666C CMP W26, W8
	0x02D56670 B.CS 0x2D5673C
	0x02D56674 LDR X8, [X25]
	0x02D56678 MOV X1, X22
	0x02D5667C MOV X2, X21
	0x02D56680 LDR W8, [X8 + 0x104]
	0x02D56684 NOP
	0x02D56688 MADD X8, X8, X26, X25
	0x02D5668C ADD X0, X8, 0x20
	0x02D56690 BL 0x3EB1AC0
	0x02D56694 LDR X8, [X19 + 0x20]
	0x02D56698 LDR X8, [X8 + 0xC0]
	0x02D5669C LDR X0, [X8 + 0x20]
	0x02D566A0 LDRB W8, [X0 + 0x135]
	0x02D566A4 TBNZ X8, 0x0, 0x2D566AC
	0x02D566A8 BL 0x1C5C684
	0x02D566AC LDR W8, [X25 + 0x18]
	0x02D566B0 CMP W26, W8
	0x02D566B4 B.CS 0x2D5673C
	0x02D566B8 LDR X8, [X19 + 0x20]
	0x02D566BC MOV X0, X20
	0x02D566C0 LDR X8, [X8 + 0xC0]
	0x02D566C4 LDR X8, [X8]
	0x02D566C8 LDR X8, [X8 + 0x80]
	0x02D566CC ADD X1, X8, 0x60
	0x02D566D0 BL 0x1C16D18
	0x02D566D4 LDR X8, [X19 + 0x20]
	0x02D566D8 LDR W9, [X0]
	0x02D566DC MOVZ W1, 0x4
	0x02D566E0 LDR X8, [X8 + 0xC0]
	0x02D566E4 ADD W21, W9, 0x1
	0x02D566E8 LDR X8, [X8]
	0x02D566EC LDR X8, [X8 + 0x80]
	0x02D566F0 ADD X19, X8, 0x60
	0x02D566F4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+16]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X21, [X8]
	045 Compare X21, 0
	046 JumpIfEqual {64}
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, X21
	059 Move X2, [X8+64]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call 0x2494D8C, X0, X1
	063 Return 
	064 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x02D566F8 BL 0x1C16D14
	0x02D566FC MOV X0, X20
	0x02D56700 MOV X1, X19
	0x02D56704 BL 0x1C16D18
	0x02D56708 STR W21, [X0]
	0x02D5670C LDR X8, [X24 + 0x28]
	0x02D56710 LDUR X9, [X29 - 0x8]
	0x02D56714 CMP X8, X9
	0x02D56718 B.NE 0x2D5674C
	0x02D5671C ADD X31, X29, 0x0
	0x02D56720 LDP X20, X19, [X31 + 0x40]
	0x02D56724 LDP X22, X21, [X31 + 0x30]
	0x02D56728 LDP X24, X23, [X31 + 0x20]
	0x02D5672C LDP X26, X25, [X31 + 0x10]
	0x02D56730 LDP X29, X30, [X31], #0x50
	0x02D56734 RET
	0x02D56738 BL 0x1C16F20
	0x02D5673C BL 0x1C16F28
	0x02D56740 BL 0x1C16F30
	0x02D56744 MOV X1, X19
	0x02D56748 BL 0x1C16DEC
	0x02D5674C BL 0x3EB1B20
	0x02D56750 STP X30, X21, [X31 - 0x20]!
	0x02D56754 STP X20, X19, [X31 + 0x10]
	0x02D56758 LDR X8, [X1 + 0x20]
	0x02D5675C MOV X20, X1
	0x02D56760 MOV X19, X0
	0x02D56764 LDR X8, [X8 + 0xC0]
	0x02D56768 LDR X8, [X8 + 0x28]
	0x02D5676C LDRB W9, [X8 + 0x135]
	0x02D56770 TBNZ X9, 0x0, 0x2D56780
	0x02D56774 MOV X0, X8
	0x02D56778 BL 0x1C5C684
	0x02D5677C MOV X8, X0
	0x02D56780 MOV X0, X8
	0x02D56784 BL 0x1C16F10
	0x02D56788 LDR X8, [X20 + 0x20]
	0x02D5678C MOV W1, W31
	0x02D56790 MOV X21, X0
	0x02D56794 LDR X8, [X8 + 0xC0]
	0x02D56798 LDR X2, [X8 + 0x30]
	0x02D5679C LDR X8, [X2]
	0x02D567A0 BLR X8
	0x02D567A4 CBZ X21, 0x2D567E8
	0x02D567A8 LDR X8, [X20 + 0x20]
	0x02D567AC MOVZ W1, 0x8
	0x02D567B0 LDR X8, [X8 + 0xC0]
	0x02D567B4 LDR X8, [X8 + 0x28]
	0x02D567B8 LDR X8, [X8 + 0x80]
	0x02D567BC ADD X20, X8, 0x40
	0x02D567C0 MOV X0, X20
	0x02D567C4 BL 0x1C16D14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move W3, 1
	033 Move X0, X20
	034 Move X1, X31
	035 Move X4, [X8+72]
	036 Move X2, X31
	037 Call 0x2494C20, X0, X1, X2, X3
	038 Move X0, [X19+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Move X0, [X8+16]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+184]
	054 Move [X8], X20
	055 Move X0, [X19+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move X0, [X8+16]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {74}
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Call 0x1C5D684
	073 Return 
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Return 

