Type: UnityEngine.Rendering.ProbeBrickIndex/VoxelMeta

Method: System.Void Clear()

Disassembly:
	0x039B774C CBZ X20, 0x39B77E8
	0x039B7750 LDR W8, [X19 + 0x80]
	0x039B7754 LDR W9, [X20 + 0x18]
	0x039B7758 ADRP X10, 0x79B000
	0x039B775C LDR X10, [X10 + 0x250]
	0x039B7760 ADRP X22, 0x79B000
	0x039B7764 ADD W8, W9, W8
	0x039B7768 STR W8, [X19 + 0x80]
	0x039B776C LDR X1, [X10]
	0x039B7770 ADRP X23, 0x79B000
	0x039B7774 ADRP X21, 0x79B000
	0x039B7778 LDR X22, [X22 + 0x240]
	0x039B777C LDR X23, [X23 + 0x258]
	0x039B7780 LDR X21, [X21 + 0x238]
	0x039B7784 ADD X8, X31, 0x0
	0x039B7788 MOV X0, X20
	0x039B778C BL 0x3121418
	0x039B7790 LDP V0, V1, [X31]
	0x039B7794 STP V0, V1, [X31 + 0x20]
	0x039B7798 LDR X1, [X22]
	0x039B779C ADD X0, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA2B000
	005 Move W8, [X20+3171]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x764000
	012 Move X0, [X0+1048]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3171], W8
	016 Move X8, [X19+24]
	017 Move [X19+16], X31
	018 Compare X8, 0
	019 JumpIfEqual {28}
	020 Move W9, [X8+28]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Add W9, W9, 1
	024 Move [X8+24], W31
	025 Move [X8+28], W9
	026 Move X30, [X31+32]
	027 Return 
	028 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039B77A0 BL 0x2BE06E0
	0x039B77A4 TBZ X0, 0x0, 0x39B77C4
	0x039B77A8 LDR X0, [X19 + 0x78]
	0x039B77AC CBZ X0, 0x39B77E4
	0x039B77B0 LDR X1, [X31 + 0x30]
	0x039B77B4 LDR W2, [X31 + 0x38]
	0x039B77B8 LDR X3, [X23]
	0x039B77BC BL 0x2605310
	0x039B77C0 B 0x39B7798
	0x039B77C4 LDR X1, [X21]
	0x039B77C8 ADD X0, X31, 0x20
	0x039B77CC BL 0x2BE06DC
	0x039B77D0 LDP X20, X19, [X31 + 0x60]
	0x039B77D4 LDP X22, X21, [X31 + 0x50]
	0x039B77D8 LDP X30, X23, [X31 + 0x40]
	0x039B77DC ADD X31, X31, 0x70
	0x039B77E0 RET
	0x039B77E4 BL 0x1C16F20
	0x039B77E8 BL 0x1C16F20
	0x039B77EC B 0x39B77F4
	0x039B77F0 B 0x39B77F4
	0x039B77F4 MOV X19, X0
	0x039B77F8 CMP W1, 0x1
	0x039B77FC B.NE 0x39B7828
	0x039B7800 MOV X0, X19
	0x039B7804 BL 0x3EB1AD0
	0x039B7808 LDR X20, [X0]
	0x039B780C BL 0x3EB1AE0
	0x039B7810 LDR X1, [X21]
	0x039B7814 ADD X0, X31, 0x20
	0x039B7818 BL 0x2BE06DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA2B000
	007 Move X22, 0x764000
	008 Move X20, 0x764000
	009 Move W8, [X21+3172]
	010 Move X22, [X22+1152]
	011 Move X20, [X20+1160]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x764000
	018 Move X0, [X0+1160]
	019 Call 0x1C17CF4
	020 Move X0, 0x764000
	021 Move X0, [X0+1152]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3172], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<UInt16>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

