Type: UnityEngine.Rendering.HableCurve/Uniforms

Method: System.Void .ctor(UnityEngine.Rendering.HableCurve parent)

Disassembly:
	0x039EB698 ADRP X22, 0x9F6000
	0x039EB69C LDRB W8, [X22 + 0xE36]
	0x039EB6A0 MOV W19, W2
	0x039EB6A4 MOV W21, W1
	0x039EB6A8 MOV X20, X0
	0x039EB6AC TBNZ X8, 0x0, 0x39EB6DC
	0x039EB6B0 ADRP X0, 0x730000
	0x039EB6B4 LDR X0, [X0 + 0x8F8]
	0x039EB6B8 BL 0x1C16CF4
	0x039EB6BC ADRP X0, 0x768000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: UnityEngine.Vector4 get_curve()

Disassembly:
	0x039EBC4C BL 0x1C16F20
	0x039EBC50 STP X30, X23, [X31 - 0x30]!
	0x039EBC54 STP X22, X21, [X31 + 0x10]
	0x039EBC58 STP X20, X19, [X31 + 0x20]
	0x039EBC5C ADRP X21, 0x9F6000
	0x039EBC60 LDRB W8, [X21 + 0xE3D]
	0x039EBC64 MOV W20, W1
	0x039EBC68 MOV W19, W0
	0x039EBC6C TBNZ X8, 0x0, 0x39EBC90

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move S0, [X8+20]
	006 Move S1, [X8+24]
	007 Move V2, [X8+28]
	008 Move S3, W31
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: UnityEngine.Vector4 get_toeSegmentA()

Disassembly:
	0x039EBC70 ADRP X0, 0x768000
	0x039EBC74 LDR X0, [X0 + 0x5D0]
	0x039EBC78 BL 0x1C16CF4
	0x039EBC7C ADRP X0, 0x708000
	0x039EBC80 LDR X0, [X0 + 0x5A8]
	0x039EBC84 BL 0x1C16CF4
	0x039EBC88 MOVZ W8, 0x1
	0x039EBC8C STRB W8, [X21 + 0xE3D]
	0x039EBC90 CBZ W19, 0x39EBD58
	0x039EBC94 ADRP X21, 0x768000
	0x039EBC98 LDR X21, [X21 + 0x5D0]
	0x039EBC9C LDR X0, [X21]
	0x039EBCA0 LDR W8, [X0 + 0xE0]
	0x039EBCA4 CBNZ W8, 0x39EBCAC
	0x039EBCA8 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {20}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {20}
	008 Move W9, [X8+24]
	009 Compare W9, 0
	010 JumpIfEqual {21}
	011 Move X8, [X8+32]
	012 Compare X8, 0
	013 JumpIfEqual {20}
	014 Move S0, [X8+16]
	015 Move S1, [X8+20]
	016 Move S2, [X8+24]
	017 Move S3, [X8+28]
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: UnityEngine.Vector4 get_toeSegmentB()

Disassembly:
	0x039EBCAC MOV W0, W20
	0x039EBCB0 BL 0x39EBD78
	0x039EBCB4 MOV W20, W0
	0x039EBCB8 TBNZ X0, 0x1F, 0x39EBCEC
	0x039EBCBC MOVZ W22, 0x1
	0x039EBCC0 MOV W23, W20
	0x039EBCC4 LDR X0, [X21]
	0x039EBCC8 LDR W8, [X0 + 0xE0]
	0x039EBCCC CBNZ W8, 0x39EBCD4
	0x039EBCD0 BL 0x1C16DFC
	0x039EBCD4 LSLV W0, W22, W23
	0x039EBCD8 ANDS W31, W0, W19, 0x0
	0x039EBCDC B.NE 0x39EBD64
	0x039EBCE0 CMP W23, 0x0
	0x039EBCE4 SUB W23, W23, 0x1
	0x039EBCE8 B.GT 0x39EBCC4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {20}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {20}
	008 Move W9, [X8+24]
	009 Compare W9, 0
	010 JumpIfEqual {21}
	011 Move X8, [X8+32]
	012 Compare X8, 0
	013 JumpIfEqual {20}
	014 Move S0, [X8+32]
	015 Move S1, [X8+36]
	016 Move S2, W31
	017 Move S3, W31
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: UnityEngine.Vector4 get_midSegmentA()

Disassembly:
	0x039EBCEC ADRP X23, 0x708000
	0x039EBCF0 LDR X23, [X23 + 0x5A8]
	0x039EBCF4 ADD W20, W20, 0x1
	0x039EBCF8 MOVZ W22, 0x1
	0x039EBCFC LDR X0, [X21]
	0x039EBD00 LDR W8, [X0 + 0xE0]
	0x039EBD04 CBNZ W8, 0x39EBD10
	0x039EBD08 BL 0x1C16DFC
	0x039EBD0C LDR X0, [X21]
	0x039EBD10 LDR X8, [X0 + 0xB8]
	0x039EBD14 LDR X8, [X8 + 0x10]
	0x039EBD18 CBZ X8, 0x39EBD74
	0x039EBD1C LDR W8, [X8 + 0x18]
	0x039EBD20 CMP W20, W8
	0x039EBD24 B.GE 0x39EBD60
	0x039EBD28 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {19}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X8+40]
	011 Compare X8, 0
	012 JumpIfEqual {19}
	013 Move S0, [X8+16]
	014 Move S1, [X8+20]
	015 Move S2, [X8+24]
	016 Move S3, [X8+28]
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

Method: UnityEngine.Vector4 get_midSegmentB()

Disassembly:
	0x039EBD2C CBNZ W8, 0x39EBD34
	0x039EBD30 BL 0x1C16DFC
	0x039EBD34 LDR X0, [X23]
	0x039EBD38 LDR W8, [X0 + 0xE0]
	0x039EBD3C CBNZ W8, 0x39EBD44
	0x039EBD40 BL 0x1C16DFC
	0x039EBD44 LSLV W0, W22, W20
	0x039EBD48 ANDS W31, W0, W19, 0x0
	0x039EBD4C ADD W20, W20, 0x1
	0x039EBD50 B.EQ 0x39EBCFC
	0x039EBD54 B 0x39EBD64
	0x039EBD58 MOVZ W0, 0x1
	0x039EBD5C B 0x39EBD64
	0x039EBD60 MOV W0, W31
	0x039EBD64 LDP X20, X19, [X31 + 0x20]
	0x039EBD68 LDP X22, X21, [X31 + 0x10]
	0x039EBD6C LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {19}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X8+40]
	011 Compare X8, 0
	012 JumpIfEqual {19}
	013 Move S0, [X8+32]
	014 Move S1, [X8+36]
	015 Move S2, W31
	016 Move S3, W31
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

Method: UnityEngine.Vector4 get_shoSegmentA()

Disassembly:
	0x039EBD70 RET
	0x039EBD74 BL 0x1C16F20
	0x039EBD78 STP X30, X21, [X31 - 0x20]!
	0x039EBD7C STP X20, X19, [X31 + 0x10]
	0x039EBD80 ADRP X20, 0x9F6000
	0x039EBD84 ADRP X21, 0x768000
	0x039EBD88 LDRB W8, [X20 + 0xE40]
	0x039EBD8C LDR X21, [X21 + 0x5D0]
	0x039EBD90 MOV W19, W0
	0x039EBD94 TBNZ X8, 0x0, 0x39EBDAC
	0x039EBD98 ADRP X0, 0x768000
	0x039EBD9C LDR X0, [X0 + 0x5D0]
	0x039EBDA0 BL 0x1C16CF4
	0x039EBDA4 MOVZ W8, 0x1
	0x039EBDA8 STRB W8, [X20 + 0xE40]
	0x039EBDAC LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {19}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X8+48]
	011 Compare X8, 0
	012 JumpIfEqual {19}
	013 Move S0, [X8+16]
	014 Move S1, [X8+20]
	015 Move S2, [X8+24]
	016 Move S3, [X8+28]
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

Method: UnityEngine.Vector4 get_shoSegmentB()

Disassembly:
	0x039EBDB0 MOV W20, W31
	0x039EBDB4 LDR W8, [X0 + 0xE0]
	0x039EBDB8 CBNZ W8, 0x39EBDC4
	0x039EBDBC BL 0x1C16DFC
	0x039EBDC0 LDR X0, [X21]
	0x039EBDC4 LDR X8, [X0 + 0xB8]
	0x039EBDC8 LDR X8, [X8]
	0x039EBDCC CBZ X8, 0x39EBE00
	0x039EBDD0 LDR W8, [X8 + 0x18]
	0x039EBDD4 CMP W20, W8
	0x039EBDD8 B.GE 0x39EBDEC
	0x039EBDDC LSRV W8, W19, W20
	0x039EBDE0 TBNZ X8, 0x0, 0x39EBDF0
	0x039EBDE4 ADD W20, W20, 0x1
	0x039EBDE8 B 0x39EBDB4
	0x039EBDEC MOVN W20, 0x0
	0x039EBDF0 MOV W0, W20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 Move X8, [X8+32]
	006 Compare X8, 0
	007 JumpIfEqual {19}
	008 Move W9, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X8+48]
	011 Compare X8, 0
	012 JumpIfEqual {19}
	013 Move S0, [X8+32]
	014 Move S1, [X8+36]
	015 Move S2, W31
	016 Move S3, W31
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

