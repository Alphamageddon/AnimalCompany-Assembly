Type: UnityEngine.Rendering.RenderTextureParameter

Method: System.Void .ctor(UnityEngine.RenderTexture value, System.Boolean overrideState = False)

Disassembly:
	0x039F4F44 CBNZ X20, 0x39F4F58
	0x039F4F48 MOV W19, W31
	0x039F4F4C B 0x39F4EE0
	0x039F4F50 MOV X20, X31
	0x039F4F54 B 0x39F4F64
	0x039F4F58 MOV X0, X20
	0x039F4F5C BL 0x1C16F18
	0x039F4F60 MOV X19, X0
	0x039F4F64 LDR X1, [X21]
	0x039F4F68 ADD X0, X31, 0x8
	0x039F4F6C BL 0x2BC434C
	0x039F4F70 CBNZ X20, 0x39F4F7C
	0x039F4F74 MOV X0, X19
	0x039F4F78 BL 0x1D2C690
	0x039F4F7C MOV X0, X20
	0x039F4F80 BL 0x1C16F18
	0x039F4F84 BL 0x1990590
	0x039F4F88 STP X30, X23, [X31 - 0x30]!
	0x039F4F8C STP X22, X21, [X31 + 0x10]
	0x039F4F90 STP X20, X19, [X31 + 0x20]
	0x039F4F94 ADRP X20, 0x9ED000
	0x039F4F98 LDRB W8, [X20 + 0xEB0]
	0x039F4F9C MOV X19, X0
	0x039F4FA0 TBNZ X8, 0x0, 0x39F4FC4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9EE000
	008 Move X23, 0x760000
	009 Move W8, [X22+3741]
	010 Move X23, [X23+2400]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x760000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3741], W8
	023 Move X3, [X23]
	024 And W2, W20, 1
	025 Move X0, X21
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call VolumeParameter`1<Object>..ctor, X0, X1, X2
	034 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x039F4FA4 ADRP X0, 0x75F000
	0x039F4FA8 LDR X0, [X0 + 0x840]
	0x039F4FAC BL 0x1C16CF4
	0x039F4FB0 ADRP X0, 0x75F000
	0x039F4FB4 LDR X0, [X0 + 0x848]
	0x039F4FB8 BL 0x1C16CF4
	0x039F4FBC MOVZ W8, 0x1
	0x039F4FC0 STRB W8, [X20 + 0xEB0]
	0x039F4FC4 LDR X0, [X19 + 0x18]
	0x039F4FC8 CBZ X0, 0x39F501C
	0x039F4FCC ADRP X22, 0x75F000
	0x039F4FD0 LDR X22, [X22 + 0x848]
	0x039F4FD4 MOV W20, W31
	0x039F4FD8 MOVZ W21, 0x11
	0x039F4FDC MOVZ W23, 0x17
	0x039F4FE0 LDR W8, [X0 + 0x18]
	0x039F4FE4 CMP W20, W8
	0x039F4FE8 B.GE 0x39F5020
	0x039F4FEC LDR X2, [X22]
	0x039F4FF0 MOV W1, W20
	0x039F4FF4 BL 0x301BCCC
	0x039F4FF8 CBZ X0, 0x39F501C
	0x039F4FFC LDR X8, [X0]
	0x039F5000 LDP X9, X1, [X8 + 0x158]
	0x039F5004 BLR X9
	0x039F5008 MOV W8, W0
	0x039F500C LDR X0, [X19 + 0x18]
	0x039F5010 MADD W21, W21, W23, W8
	0x039F5014 ADD W20, W20, 0x1
	0x039F5018 CBNZ X0, 0x39F4FE0
	0x039F501C BL 0x1C16F20
	0x039F5020 MOV W0, W21
	0x039F5024 LDP X20, X19, [X31 + 0x20]
	0x039F5028 LDP X22, X21, [X31 + 0x10]
	0x039F502C LDP X30, X23, [X31], #0x30
	0x039F5030 RET
	0x039F5034 STP X30, X23, [X31 - 0x30]!
	0x039F5038 STP X22, X21, [X31 + 0x10]
	0x039F503C STP X20, X19, [X31 + 0x20]
	0x039F5040 ADRP X20, 0x9EC000
	0x039F5044 LDRB W8, [X20 + 0xEB1]
	0x039F5048 MOV X19, X0
	0x039F504C TBNZ X8, 0x0, 0x39F5070
	0x039F5050 ADRP X0, 0x75E000
	0x039F5054 LDR X0, [X0 + 0x840]
	0x039F5058 BL 0x1C16CF4
	0x039F505C ADRP X0, 0x75E000
	0x039F5060 LDR X0, [X0 + 0x848]
	0x039F5064 BL 0x1C16CF4
	0x039F5068 MOVZ W8, 0x1
	0x039F506C STRB W8, [X20 + 0xEB1]
	0x039F5070 LDR X0, [X19 + 0x18]
	0x039F5074 CBZ X0, 0x39F50D4
	0x039F5078 ADRP X22, 0x75E000
	0x039F507C LDR X22, [X22 + 0x848]
	0x039F5080 MOV W20, W31
	0x039F5084 MOVZ W21, 0x11
	0x039F5088 MOVZ W23, 0x17
	0x039F508C LDR W8, [X0 + 0x18]
	0x039F5090 CMP W20, W8
	0x039F5094 B.GE 0x39F50D8
	0x039F5098 LDR X2, [X22]
	0x039F509C MOV W1, W20
	0x039F50A0 BL 0x301BCCC
	0x039F50A4 CBZ X0, 0x39F50D4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9EE000
	007 Move X22, 0x760000
	008 Move X21, 0x700000
	009 Move W8, [X20+3742]
	010 Move X22, [X22+2408]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x728000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x700000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x760000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3742], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call VolumeParameter`1<Object>.GetHashCode, X0
	031 Move X8, [X19]
	032 Move W20, W0
	033 Move X0, X19
	034 Move X9, [X8+536]
	035 Move X1, [X8+544]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move X8, [X19]
	053 Move X20, 0x727000
	054 Move X0, X19
	055 Move X9, [X8+536]
	056 Move X1, [X8+544]
	057 Move X20, [X20+2296]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call CoreUtils.GetTextureHash, X0
	069 Move W8, 23
	070 Multiply W20, W0, W8
	071 Move W0, W20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0

