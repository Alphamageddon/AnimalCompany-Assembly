Type: UnityEngine.Rendering.VolumeComponent

Method: System.String get_displayName()

Disassembly:
	0x039F0338 LDR X9, [X8 + 0x818]
	0x039F033C LDR X1, [X8 + 0x820]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_displayName(System.String value)

Disassembly:
	0x039F0340 BLR X9
	0x039F0344 LDR X8, [X20]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<UnityEngine.Rendering.VolumeParameter> get_parameters()

Disassembly:
	0x039F0348 MOV X22, X0
	0x039F034C LDR W9, [X8 + 0xE0]
	0x039F0350 CBNZ W9, 0x39F035C
	0x039F0354 MOV X0, X8
	0x039F0358 BL 0x1C16DFC
	0x039F035C MOV X0, X22
	0x039F0360 MOV X1, X31
	0x039F0364 MOV X2, X31
	0x039F0368 BL 0x3395F0C
	0x039F036C TBZ X0, 0x0, 0x39F038C
	0x039F0370 LDR X8, [X21]
	0x039F0374 MOV X0, X21
	0x039F0378 LDR X9, [X8 + 0x818]
	0x039F037C LDR X1, [X8 + 0x820]
	0x039F0380 BLR X9
	0x039F0384 MOV X21, X0
	0x039F0388 B 0x39F02A8
	0x039F038C MOV W0, W31
	0x039F0390 B 0x39F0398
	0x039F0394 MOVZ W0, 0x1
	0x039F0398 LDP X20, X19, [X31 + 0x30]
	0x039F039C LDP X22, X21, [X31 + 0x20]
	0x039F03A0 LDP X24, X23, [X31 + 0x10]
	0x039F03A4 LDP X30, X25, [X31], #0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9F2000
	005 Move W8, [X20+3673]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x72D000
	012 Move X0, [X0+3456]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3673], W8
	016 Move X0, [X19+48]
	017 Compare X0, 0
	018 JumpIfNotEqual {27}
	019 Move X0, [X19+40]
	020 Compare X0, 0
	021 JumpIfEqual {31}
	022 Move X8, 0x72D000
	023 Move X8, [X8+3456]
	024 Move X1, [X8]
	025 Call List`1<Object>.AsReadOnly, X0
	026 Move [X19+48], X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void FindParameters(System.Object o, System.Collections.Generic.List`1<UnityEngine.Rendering.VolumeParameter> parameters, System.Func`2<System.Reflection.FieldInfo, System.Boolean> filter = null)

Disassembly:
	0x039F03A8 RET
	0x039F03AC BL 0x1C16F20
	0x039F03B0 STP X30, X23, [X31 - 0x30]!
	0x039F03B4 STP X22, X21, [X31 + 0x10]
	0x039F03B8 STP X20, X19, [X31 + 0x20]
	0x039F03BC ADRP X20, 0x9F1000
	0x039F03C0 LDRB W8, [X20 + 0xE5F]
	0x039F03C4 MOV X19, X0
	0x039F03C8 TBNZ X8, 0x0, 0x39F03EC
	0x039F03CC ADRP X0, 0x763000
	0x039F03D0 LDR X0, [X0 + 0x708]
	0x039F03D4 BL 0x1C16CF4
	0x039F03D8 ADRP X0, 0x761000
	0x039F03DC LDR X0, [X0 + 0x778]
	0x039F03E0 BL 0x1C16CF4
	0x039F03E4 MOVZ W8, 0x1
	0x039F03E8 STRB W8, [X20 + 0xE5F]
	0x039F03EC LDR X0, [X19 + 0x28]
	0x039F03F0 CBZ X0, 0x39F0444
	0x039F03F4 ADRP X22, 0x761000
	0x039F03F8 LDR X22, [X22 + 0x778]
	0x039F03FC MOV W20, W31
	0x039F0400 MOVZ W21, 0x11
	0x039F0404 MOVZ W23, 0x17
	0x039F0408 LDR W8, [X0 + 0x18]
	0x039F040C CMP W20, W8
	0x039F0410 B.GE 0x39F0448
	0x039F0414 LDR X2, [X22]
	0x039F0418 MOV W1, W20
	0x039F041C BL 0x301BCCC
	0x039F0420 CBZ X0, 0x39F0444
	0x039F0424 LDR X8, [X0]
	0x039F0428 LDP X9, X1, [X8 + 0x158]
	0x039F042C BLR X9
	0x039F0430 MOV W8, W0
	0x039F0434 LDR X0, [X19 + 0x28]
	0x039F0438 MADD W21, W21, W23, W8
	0x039F043C ADD W20, W20, 0x1
	0x039F0440 CBNZ X0, 0x39F0408
	0x039F0444 BL 0x1C16F20
	0x039F0448 MOV W0, W21
	0x039F044C LDP X20, X19, [X31 + 0x20]
	0x039F0450 LDP X22, X21, [X31 + 0x10]
	0x039F0454 LDP X30, X23, [X31], #0x30
	0x039F0458 RET
	0x039F045C STR X30, [X31 - 0x30]!
	0x039F0460 STP X22, X21, [X31 + 0x10]
	0x039F0464 STP X20, X19, [X31 + 0x20]
	0x039F0468 ADRP X20, 0x9F1000
	0x039F046C LDRB W8, [X20 + 0xE60]
	0x039F0470 MOV X19, X0
	0x039F0474 TBNZ X8, 0x0, 0x39F0498
	0x039F0478 ADRP X0, 0x763000
	0x039F047C LDR X0, [X0 + 0x708]
	0x039F0480 BL 0x1C16CF4
	0x039F0484 ADRP X0, 0x761000
	0x039F0488 LDR X0, [X0 + 0x778]
	0x039F048C BL 0x1C16CF4
	0x039F0490 MOVZ W8, 0x1
	0x039F0494 STRB W8, [X20 + 0xE60]
	0x039F0498 LDR X0, [X19 + 0x28]
	0x039F049C CBZ X0, 0x39F04E4
	0x039F04A0 ADRP X21, 0x761000
	0x039F04A4 LDR X21, [X21 + 0x778]
	0x039F04A8 MOV W20, W31
	0x039F04AC LDR W22, [X0 + 0x18]
	0x039F04B0 CMP W20, W22
	0x039F04B4 B.GE 0x39F04E8
	0x039F04B8 LDR X2, [X21]
	0x039F04BC MOV W1, W20
	0x039F04C0 BL 0x301BCCC
	0x039F04C4 CBZ X0, 0x39F04E4
	0x039F04C8 LDR X8, [X0]
	0x039F04CC LDP X9, X1, [X8 + 0x188]
	0x039F04D0 BLR X9
	0x039F04D4 TBNZ X0, 0x0, 0x39F04E8
	0x039F04D8 LDR X0, [X19 + 0x28]
	0x039F04DC ADD W20, W20, 0x1
	0x039F04E0 CBNZ X0, 0x39F04AC
	0x039F04E4 BL 0x1C16F20
	0x039F04E8 CMP W20, W22
	0x039F04EC LDP X20, X19, [X31 + 0x20]
	0x039F04F0 LDP X22, X21, [X31 + 0x10]
	0x039F04F4 CSET W0, LT
	0x039F04F8 LDR X30, [X31], #0x30
	0x039F04FC RET
	0x039F0500 B 0x39F0504
	0x039F0504 STP X30, X21, [X31 - 0x20]!
	0x039F0508 STP X20, X19, [X31 + 0x10]
	0x039F050C ADRP X20, 0x9F1000
	0x039F0510 LDRB W8, [X20 + 0xE61]
	0x039F0514 MOV X19, X0
	0x039F0518 TBNZ X8, 0x0, 0x39F053C
	0x039F051C ADRP X0, 0x763000
	0x039F0520 LDR X0, [X0 + 0x708]
	0x039F0524 BL 0x1C16CF4
	0x039F0528 ADRP X0, 0x761000
	0x039F052C LDR X0, [X0 + 0x778]
	0x039F0530 BL 0x1C16CF4
	0x039F0534 MOVZ W8, 0x1
	0x039F0538 STRB W8, [X20 + 0xE61]
	0x039F053C LDR X0, [X19 + 0x28]
	0x039F0540 CBZ X0, 0x39F05A0
	0x039F0544 ADRP X21, 0x761000
	0x039F0548 LDR X21, [X21 + 0x778]
	0x039F054C MOV W20, W31
	0x039F0550 LDR W8, [X0 + 0x18]
	0x039F0554 CMP W20, W8
	0x039F0558 B.GE 0x39F05A0
	0x039F055C LDR X2, [X21]
	0x039F0560 MOV W1, W20
	0x039F0564 BL 0x301BCCC
	0x039F0568 CBZ X0, 0x39F0590
	0x039F056C LDR X0, [X19 + 0x28]
	0x039F0570 CBZ X0, 0x39F059C
	0x039F0574 LDR X2, [X21]
	0x039F0578 MOV W1, W20
	0x039F057C BL 0x301BCCC
	0x039F0580 CBZ X0, 0x39F059C
	0x039F0584 LDR X8, [X0]
	0x039F0588 LDP X9, X1, [X8 + 0x1E8]
	0x039F058C BLR X9
	0x039F0590 LDR X0, [X19 + 0x28]
	0x039F0594 ADD W20, W20, 0x1
	0x039F0598 CBNZ X0, 0x39F0550
	0x039F059C BL 0x1C16F20
	0x039F05A0 LDP X20, X19, [X31 + 0x10]
	0x039F05A4 LDP X30, X21, [X31], #0x20
	0x039F05A8 RET
	0x039F05AC STP X30, X23, [X31 - 0x30]!
	0x039F05B0 STP X22, X21, [X31 + 0x10]
	0x039F05B4 STP X20, X19, [X31 + 0x20]
	0x039F05B8 ADRP X23, 0x9F1000
	0x039F05BC ADRP X22, 0x703000
	0x039F05C0 ADRP X21, 0x763000
	0x039F05C4 ADRP X20, 0x763000
	0x039F05C8 LDRB W8, [X23 + 0xE62]
	0x039F05CC LDR X22, [X22 + 0x988]
	0x039F05D0 LDR X21, [X21 + 0x730]
	0x039F05D4 LDR X20, [X20 + 0x738]
	0x039F05D8 MOV X19, X0
	0x039F05DC TBNZ X8, 0x0, 0x39F060C
	0x039F05E0 ADRP X0, 0x763000
	0x039F05E4 LDR X0, [X0 + 0x738]
	0x039F05E8 BL 0x1C16CF4
	0x039F05EC ADRP X0, 0x763000
	0x039F05F0 LDR X0, [X0 + 0x730]
	0x039F05F4 BL 0x1C16CF4
	0x039F05F8 ADRP X0, 0x703000
	0x039F05FC LDR X0, [X0 + 0x988]
	0x039F0600 BL 0x1C16CF4
	0x039F0604 MOVZ W8, 0x1
	0x039F0608 STRB W8, [X23 + 0xE62]
	0x039F060C MOVZ W8, 0x1
	0x039F0610 STRB W8, [X19 + 0x18]
	0x039F0614 LDR X8, [X22]
	0x039F0618 STR X8, [X19 + 0x20]
	0x039F061C LDR X0, [X21]
	0x039F0620 BL 0x1C16F10
	0x039F0624 LDR X1, [X20]
	0x039F0628 MOV X20, X0
	0x039F062C BL 0x301B7C4
	0x039F0630 STR X20, [X19 + 0x28]
	0x039F0634 MOV X0, X19
	0x039F0638 LDP X20, X19, [X31 + 0x20]
	0x039F063C LDP X22, X21, [X31 + 0x10]
	0x039F0640 MOV X1, X31
	0x039F0644 LDP X30, X23, [X31], #0x30
	0x039F0648 B 0x3C36D2C
	0x039F064C STR X30, [X31 - 0x20]!
	0x039F0650 STP X20, X19, [X31 + 0x10]
	0x039F0654 MOV W19, W1
	0x039F0658 MOV X1, X31
	0x039F065C MOV X20, X0
	0x039F0660 BL 0x3C303D4
	0x039F0664 STR W19, [X20 + 0x14]
	0x039F0668 LDP X20, X19, [X31 + 0x10]
	0x039F066C LDR X30, [X31], #0x20
	0x039F0670 RET
	0x039F0674 STR X30, [X31 - 0x20]!
	0x039F0678 STP X20, X19, [X31 + 0x10]
	0x039F067C ADRP X19, 0x9F1000
	0x039F0680 ADRP X20, 0x763000
	0x039F0684 LDRB W8, [X19 + 0xE63]
	0x039F0688 LDR X20, [X20 + 0x6C8]
	0x039F068C TBNZ X8, 0x0, 0x39F06A4
	0x039F0690 ADRP X0, 0x763000
	0x039F0694 LDR X0, [X0 + 0x6C8]
	0x039F0698 BL 0x1C16CF4
	0x039F069C MOVZ W8, 0x1
	0x039F06A0 STRB W8, [X19 + 0xE63]
	0x039F06A4 LDR X0, [X20]
	0x039F06A8 BL 0x1C16F10
	0x039F06AC MOV X1, X31
	0x039F06B0 MOV X19, X0
	0x039F06B4 BL 0x33BDD8C
	0x039F06B8 LDR X8, [X20]
	0x039F06BC LDR X8, [X8 + 0xB8]
	0x039F06C0 STR X19, [X8]
	0x039F06C4 LDP X20, X19, [X31 + 0x10]
	0x039F06C8 LDR X30, [X31], #0x20
	0x039F06CC RET
	0x039F06D0 MOV X1, X31
	0x039F06D4 B 0x33BDD8C
	0x039F06D8 STR X30, [X31 - 0x10]!
	0x039F06DC CBZ X1, 0x39F06FC
	0x039F06E0 LDR X8, [X1]
	0x039F06E4 MOV X0, X1
	0x039F06E8 LDR X2, [X8 + 0x238]
	0x039F06EC LDR X8, [X8 + 0x240]
	0x039F06F0 MOV X1, X8
	0x039F06F4 LDR X30, [X31], #0x10
	0x039F06F8 BR X2
	0x039F06FC BL 0x1C16F20
	0x039F0700 LDR X0, [X0 + 0x10]
	0x039F0704 RET
	0x039F0708 STR X1, [X0 + 0x10]
	0x039F070C RET
	0x039F0710 LDR X0, [X0 + 0x18]
	0x039F0714 RET
	0x039F0718 STR X30, [X31 - 0x30]!
	0x039F071C STP X22, X21, [X31 + 0x10]
	0x039F0720 STP X20, X19, [X31 + 0x20]
	0x039F0724 ADRP X21, 0x9F1000
	0x039F0728 ADRP X22, 0x72C000
	0x039F072C LDRB W8, [X21 + 0xE65]
	0x039F0730 LDR X22, [X22 + 0x3A0]
	0x039F0734 MOV X20, X1
	0x039F0738 MOV X19, X0
	0x039F073C TBNZ X8, 0x0, 0x39F0754
	0x039F0740 ADRP X0, 0x72C000
	0x039F0744 LDR X0, [X0 + 0x3A0]
	0x039F0748 BL 0x1C16CF4
	0x039F074C MOVZ W8, 0x1
	0x039F0750 STRB W8, [X21 + 0xE65]
	0x039F0754 LDR X1, [X22]
	0x039F0758 MOV X0, X20
	0x039F075C BL 0x21D577C
	0x039F0760 STR X0, [X19 + 0x18]
	0x039F0764 LDP X20, X19, [X31 + 0x20]
	0x039F0768 LDP X22, X21, [X31 + 0x10]
	0x039F076C LDR X30, [X31], #0x30
	0x039F0770 RET
	0x039F0774 SUB X31, X31, 0x30
	0x039F0778 STP X30, X21, [X31 + 0x10]
	0x039F077C STP X20, X19, [X31 + 0x20]
	0x039F0780 ADRP X21, 0x9F1000
	0x039F0784 ADRP X20, 0x72D000
	0x039F0788 LDRB W8, [X21 + 0xE66]
	0x039F078C LDR X20, [X20 + 0xFC0]
	0x039F0790 MOV X19, X0
	0x039F0794 TBNZ X8, 0x0, 0x39F07C4
	0x039F0798 ADRP X0, 0x763000
	0x039F079C LDR X0, [X0 + 0x740]
	0x039F07A0 BL 0x1C16CF4
	0x039F07A4 ADRP X0, 0x763000
	0x039F07A8 LDR X0, [X0 + 0x748]
	0x039F07AC BL 0x1C16CF4
	0x039F07B0 ADRP X0, 0x72D000
	0x039F07B4 LDR X0, [X0 + 0xFC0]
	0x039F07B8 BL 0x1C16CF4
	0x039F07BC MOVZ W8, 0x1
	0x039F07C0 STRB W8, [X21 + 0xE66]
	0x039F07C4 LDR X0, [X20]
	0x039F07C8 STR X31, [X31 + 0x8]
	0x039F07CC LDR W8, [X0 + 0xE0]
	0x039F07D0 CBNZ W8, 0x39F07DC
	0x039F07D4 BL 0x1C16DFC
	0x039F07D8 LDR X0, [X20]
	0x039F07DC LDR X8, [X0 + 0xB8]
	0x039F07E0 LDR X0, [X8 + 0x8]
	0x039F07E4 CBZ X0, 0x39F0868
	0x039F07E8 ADRP X8, 0x763000
	0x039F07EC LDR X8, [X8 + 0x740]
	0x039F07F0 ADD X2, X31, 0x8
	0x039F07F4 MOV X1, X19
	0x039F07F8 LDR X3, [X8]
	0x039F07FC BL 0x2AA6B2C
	0x039F0800 TBNZ X0, 0x0, 0x39F0854
	0x039F0804 LDR X0, [X20]
	0x039F0808 LDR W8, [X0 + 0xE0]
	0x039F080C CBNZ W8, 0x39F0814
	0x039F0810 BL 0x1C16DFC
	0x039F0814 BL 0x39EE864
	0x039F0818 CBZ X0, 0x39F0868
	0x039F081C LDR X0, [X0 + 0x18]
	0x039F0820 MOV X1, X19
	0x039F0824 BL 0x39F086C
	0x039F0828 LDR X8, [X20]
	0x039F082C STR X0, [X31 + 0x8]
	0x039F0830 MOV X2, X0
	0x039F0834 LDR X8, [X8 + 0xB8]
	0x039F0838 LDR X0, [X8 + 0x8]
	0x039F083C CBZ X0, 0x39F0868
	0x039F0840 ADRP X8, 0x763000
	0x039F0844 LDR X8, [X8 + 0x748]
	0x039F0848 MOV X1, X19
	0x039F084C LDR X3, [X8]
	0x039F0850 BL 0x2AA5084
	0x039F0854 LDR X0, [X31 + 0x8]
	0x039F0858 LDP X20, X19, [X31 + 0x20]
	0x039F085C LDP X30, X21, [X31 + 0x10]
	0x039F0860 ADD X31, X31, 0x30
	0x039F0864 RET
	0x039F0868 BL 0x1C16F20
	0x039F086C SUB X31, X31, 0x80
	0x039F0870 STP X29, X30, [X31 + 0x20]
	0x039F0874 STP X28, X27, [X31 + 0x30]
	0x039F0878 STP X26, X25, [X31 + 0x40]
	0x039F087C STP X24, X23, [X31 + 0x50]
	0x039F0880 STP X22, X21, [X31 + 0x60]
	0x039F0884 STP X20, X19, [X31 + 0x70]
	0x039F0888 STR X1, [X31]
	0x039F088C ADRP X20, 0x9F1000
	0x039F0890 ADRP X21, 0x709000
	0x039F0894 ADRP X19, 0x709000
	0x039F0898 LDRB W8, [X20 + 0xE67]
	0x039F089C LDR X21, [X21 + 0xB60]
	0x039F08A0 LDR X19, [X19 + 0xB68]
	0x039F08A4 MOV X26, X0
	0x039F08A8 TBNZ X8, 0x0, 0x39F0968
	0x039F08AC ADRP X0, 0x763000
	0x039F08B0 LDR X0, [X0 + 0x750]
	0x039F08B4 BL 0x1C16CF4
	0x039F08B8 ADRP X0, 0x763000
	0x039F08BC LDR X0, [X0 + 0x758]
	0x039F08C0 BL 0x1C16CF4
	0x039F08C4 ADRP X0, 0x763000
	0x039F08C8 LDR X0, [X0 + 0x760]
	0x039F08CC BL 0x1C16CF4
	0x039F08D0 ADRP X0, 0x763000
	0x039F08D4 LDR X0, [X0 + 0x768]
	0x039F08D8 BL 0x1C16CF4
	0x039F08DC ADRP X0, 0x763000
	0x039F08E0 LDR X0, [X0 + 0x770]
	0x039F08E4 BL 0x1C16CF4
	0x039F08E8 ADRP X0, 0x709000
	0x039F08EC LDR X0, [X0 + 0xB88]
	0x039F08F0 BL 0x1C16CF4
	0x039F08F4 ADRP X0, 0x709000
	0x039F08F8 LDR X0, [X0 + 0xB68]
	0x039F08FC BL 0x1C16CF4
	0x039F0900 ADRP X0, 0x709000
	0x039F0904 LDR X0, [X0 + 0xB60]
	0x039F0908 BL 0x1C16CF4
	0x039F090C ADRP X0, 0x763000
	0x039F0910 LDR X0, [X0 + 0x778]
	0x039F0914 BL 0x1C16CF4
	0x039F0918 ADRP X0, 0x705000
	0x039F091C LDR X0, [X0 + 0x278]
	0x039F0920 BL 0x1C16CF4
	0x039F0924 ADRP X0, 0x763000
	0x039F0928 LDR X0, [X0 + 0x780]
	0x039F092C BL 0x1C16CF4
	0x039F0930 ADRP X0, 0x763000
	0x039F0934 LDR X0, [X0 + 0x788]
	0x039F0938 BL 0x1C16CF4
	0x039F093C ADRP X0, 0x709000
	0x039F0940 LDR X0, [X0 + 0xBB0]
	0x039F0944 BL 0x1C16CF4
	0x039F0948 ADRP X0, 0x72E000
	0x039F094C LDR X0, [X0 + 0x40]
	0x039F0950 BL 0x1C16CF4
	0x039F0954 ADRP X0, 0x763000
	0x039F0958 LDR X0, [X0 + 0x790]
	0x039F095C BL 0x1C16CF4
	0x039F0960 MOVZ W8, 0x1
	0x039F0964 STRB W8, [X20 + 0xE67]
	0x039F0968 LDR X0, [X21]
	0x039F096C BL 0x1C16F10
	0x039F0970 LDR X1, [X19]
	0x039F0974 MOV X21, X0
	0x039F0978 BL 0x2F49774
	0x039F097C CBZ X26, 0x39F0C4C
	0x039F0980 LDR W8, [X26 + 0x18]
	0x039F0984 CMP W8, 0x1
	0x039F0988 B.LT 0x39F0B88
	0x039F098C ADRP X27, 0x763000
	0x039F0990 ADRP X28, 0x763000
	0x039F0994 ADRP X29, 0x763000
	0x039F0998 LDR X27, [X27 + 0x790]
	0x039F099C LDR X28, [X28 + 0x770]
	0x039F09A0 LDR X29, [X29 + 0x778]
	0x039F09A4 MOV W25, W31
	0x039F09A8 STR X26, [X31 + 0x8]
	0x039F09AC CMP W25, W8
	0x039F09B0 B.CS 0x39F0C48
	0x039F09B4 ADD X8, X26, W25, 0x3, SXTW
	0x039F09B8 LDR X22, [X8 + 0x20]
	0x039F09BC CBZ X22, 0x39F0C4C
	0x039F09C0 ADRP X8, 0x705000
	0x039F09C4 LDR X8, [X8 + 0x278]
	0x039F09C8 LDR X9, [X22]
	0x039F09CC MOV X0, X22

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x9F2000
	014 Move W8, [X19+3674]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0x72D000
	023 Move X0, [X0+3400]
	024 Call 0x1C17CF4
	025 Move X0, 0x72D000
	026 Move X0, [X0+3440]
	027 Call 0x1C17CF4
	028 Move X0, 0x704000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x72F000
	032 Move X0, [X0+3032]
	033 Call 0x1C17CF4
	034 Move X0, 0x72F000
	035 Move X0, [X0+3040]
	036 Call 0x1C17CF4
	037 Move X0, 0x704000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0x764000
	041 Move X0, [X0+1720]
	042 Call 0x1C17CF4
	043 Move X0, 0x704000
	044 Move X0, [X0+1728]
	045 Call 0x1C17CF4
	046 Move X0, 0x764000
	047 Move X0, [X0+1728]
	048 Call 0x1C17CF4
	049 Move X0, 0x764000
	050 Move X0, [X0+1736]
	051 Call 0x1C17CF4
	052 Move X0, 0x72D000
	053 Move X0, [X0+2880]
	054 Call 0x1C17CF4
	055 Move X0, 0x72D000
	056 Move X0, [X0+3480]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+3674], W8
	060 Compare X22, 0
	061 JumpIfEqual {345}
	062 Move X0, X22
	063 Move X1, X31
	064 Call "il2cpp_vm_object_is_inst", X0
	065 Compare X0, 0
	066 JumpIfEqual {366}
	067 Move X8, [X0]
	068 Move X25, 0x764000
	069 Move W1, 52
	070 Move X9, [X8+1672]
	071 Move X2, [X8+1680]
	072 Move X25, [X25+1736]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X25]
	075 Move X19, X0
	076 Move W9, [X8+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {82}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Move X8, [X25]
	082 Move X9, [X8+184]
	083 Move X26, 0x72D000
	084 Move X23, [X9+8]
	085 Move X26, [X26+3400]
	086 Compare X23, 0
	087 JumpIfNotEqual {110}
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X25]
	094 Move X9, 0x72D000
	095 Move X8, [X8+184]
	096 Move X9, [X9+3440]
	097 Move X24, [X8]
	098 Move X0, [X9]
	099 Call 0x1C17F10
	100 Move X8, 0x764000
	101 Move X8, [X8+1728]
	102 Move X1, X24
	103 Move X3, X31
	104 Move X23, X0
	105 Move X2, [X8]
	106 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	107 Move X8, [X25]
	108 Move X8, [X8+184]
	109 Move [X8+8], X23
	110 Move X2, [X26]
	111 Move X0, X19
	112 Move X1, X23
	113 Call Enumerable.OrderBy, X0, X1
	114 Compare X0, 0
	115 JumpIfEqual {366}
	116 Move X10, 0x72F000
	117 Move X8, [X0]
	118 Move X10, [X10+3032]
	119 Move X19, X0
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X1, [X10]
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X19
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X19
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X19, X0
	141 Compare X0, 0
	142 JumpIfEqual {367}
	143 Move X26, 0x704000
	144 Move X27, 0x72F000
	145 Move X28, 0x72D000
	146 Move X29, 0x704000
	147 Move X26, [X26+3608]
	148 Move X27, [X27+3040]
	149 Move X28, [X28+2880]
	150 Move X29, [X29+1728]
	151 Move X8, [X19]
	152 Move X1, [X26]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X19
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X19
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {317}
	176 Move X8, [X19]
	177 Move X1, [X27]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move X0, X19
	188 Move W2, W31
	189 Call 0x1C5D788
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Add X8, X8, X9
	192 Add X0, X8, 312
	193 Move X8, [X0]
	194 Move X1, [X0+8]
	195 Move X0, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X23, X0
	198 Compare X0, 0
	199 JumpIfEqual {358}
	200 Move X8, [X23]
	201 Move X1, [X8+608]
	202 Move X9, [X8+600]
	203 Move X0, X23
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X24, X0
	206 Move X0, [X29]
	207 Move X25, [X28]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X0, X25
	213 Move X1, X31
	214 Call Type.GetTypeFromHandle, X0
	215 Move X1, X0
	216 Compare X24, 0
	217 JumpIfEqual {359}
	218 Move X8, [X24]
	219 Move X9, [X8+664]
	220 Move X2, [X8+672]
	221 Move X0, X24
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {276}
	227 Compare X20, 0
	228 JumpIfEqual {238}
	229 Move X0, [X20+64]
	230 Move X8, [X20+24]
	231 Move X2, [X20+40]
	232 Move X1, X23
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {151}
	238 Move X8, [X23]
	239 Move X9, [X8+712]
	240 Move X2, [X8+720]
	241 Move X0, X23
	242 Move X1, X22
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X8, X0
	245 Compare X0, 0
	246 JumpIfEqual {258}
	247 Move X10, 0x72D000
	248 Move X9, [X8]
	249 Move X10, [X10+3480]
	250 Move W11, [X9+304]
	251 Move X1, [X10]
	252 Move W10, [X1+304]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X9, [X9+200]
	255 Add X9, X9, X10
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Compare X21, 0
	259 JumpIfEqual {364}
	260 Move X10, 0x764000
	261 Move W11, [X21+28]
	262 Move X9, [X21+16]
	263 Move X10, [X10+1720]
	264 Add W11, W11, 1
	265 Move X10, [X10]
	266 Move [X21+28], W11
	267 Compare X9, 0
	268 JumpIfEqual {363}
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Move W12, [X9+24]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Add W10, W11, 1
	273 Add X9, X9, X11
	274 Move [X21+24], W10
	275 Move [X9+32], X8
	276 Move X8, [X23]
	277 Move X1, [X8+608]
	278 Move X9, [X8+600]
	279 Move X0, X23
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Compare X0, 0
	282 JumpIfEqual {360}
	283 Move X1, X31
	284 Call Type.get_IsArray, X0
	285 Move TEMP, X0
	286 And TEMP, TEMP, 1
	287 Compare TEMP, 1
	288 JumpIfEqual {151}
	289 Move X8, [X23]
	290 Move X1, [X8+608]
	291 Move X9, [X8+600]
	292 Move X0, X23
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Compare X0, 0
	295 JumpIfEqual {365}
	296 Move X1, X31
	297 Call Type.get_IsClass, X0
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {151}
	302 Move X8, [X23]
	303 Move X9, [X8+712]
	304 Move X2, [X8+720]
	305 Move X0, X23
	306 Move X1, X22
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move X1, X21
	309 Move X2, X20
	310 Call VolumeComponent.FindParameters, X0, X1, X2
	311 Move X9, [X10+32]
	312 Move X9, [X9+192]
	313 Move X2, [X9+112]
	314 Move X0, X21
	315 Move X1, X8
	316 Call List`1<Object>.AddWithResize, X0, X1
	317 Move X21, X31
	318 Compare X19, 0
	319 JumpIfEqual {343}
	320 Move X10, 0x704000
	321 Move X8, [X19]
	322 Move X10, [X10+3584]
	323 NotImplemented "Instruction LDRH not yet implemented."
	324 Move X1, [X10]
	325 Compare X9, 0
	326 JumpIfEqual {333}
	327 Move X10, [X8+176]
	328 Add X10, X10, 8
	329 NotImplemented "Instruction LDUR not yet implemented."
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Subtract X9, X9, 1
	332 Add X10, X10, 16
	333 Move X0, X19
	334 Move W2, W31
	335 Call 0x1C5D788
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Add X8, X8, X9
	338 Add X0, X8, 312
	339 Move X8, [X0]
	340 Move X1, [X0+8]
	341 Move X0, X19
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Compare X21, 0
	344 JumpIfNotEqual {368}
	345 Move X20, [X31+80]
	346 Move X19, [X31+88]
	347 Move X22, [X31+64]
	348 Move X21, [X31+72]
	349 Move X24, [X31+48]
	350 Move X23, [X31+56]
	351 Move X26, [X31+32]
	352 Move X25, [X31+40]
	353 Move X28, [X31+16]
	354 Move X27, [X31+24]
	355 Move X29, [X31+96]
	356 Move X30, [X31+104]
	357 Return 
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Move X0, X8
	362 Call 0x1C181E0
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Move X0, X21
	369 Call 0x1C17F18
	370 Move X20, X0
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X0, X20
	373 Call 0x3EB2AD0
	374 Move X21, [X0]
	375 Call 0x3EB2AE0
	376 Move X21, X31
	377 Move X20, X0
	378 Compare X19, 0
	379 JumpIfEqual {403}
	380 Move X10, 0x704000
	381 Move X8, [X19]
	382 Move X10, [X10+3584]
	383 NotImplemented "Instruction LDRH not yet implemented."
	384 Move X1, [X10]
	385 Compare X9, 0
	386 JumpIfEqual {393}
	387 Move X10, [X8+176]
	388 Add X10, X10, 8
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Subtract X9, X9, 1
	392 Add X10, X10, 16
	393 Move X0, X19
	394 Move W2, W31
	395 Call 0x1C5D788
	396 NotImplemented "Instruction LDRSW not yet implemented."
	397 Add X8, X8, X9
	398 Add X0, X8, 312
	399 Move X8, [X0]
	400 Move X1, [X0+8]
	401 Move X0, X19
	402 NotImplemented "Instruction BLR not yet implemented."
	403 Compare X21, 0
	404 JumpIfNotEqual {407}
	405 Move X0, X20
	406 Call 0x1D2D690
	407 Move X0, X21
	408 Call 0x1C17F18
	409 Call 0x1991590

Method: System.Void OnEnable()

Disassembly:
	0x039F09D0 MOV W1, W31
	0x039F09D4 LDR X8, [X8]
	0x039F09D8 LDR X8, [X8 + 0xB8]
	0x039F09DC LDR X23, [X8]
	0x039F09E0 LDP X8, X2, [X9 + 0x1F8]
	0x039F09E4 BLR X8
	0x039F09E8 CBZ X0, 0x39F0C4C
	0x039F09EC LDR X8, [X0 + 0x18]
	0x039F09F0 MOV X24, X0
	0x039F09F4 CMP W8, 0x1
	0x039F09F8 B.LT 0x39F0AC8
	0x039F09FC MOV W26, W31
	0x039F0A00 MOV X19, X31
	0x039F0A04 AND X8, X8, 0x0
	0x039F0A08 ADD X20, X24, 0x20
	0x039F0A0C CMP X19, W8, UXTW
	0x039F0A10 B.CS 0x39F0C48
	0x039F0A14 LDR X8, [X20, X19, LSL #3]
	0x039F0A18 CBZ X8, 0x39F0A64
	0x039F0A1C LDR X9, [X8]
	0x039F0A20 LDR X12, [X27]
	0x039F0A24 LDRB W10, [X9 + 0x130]
	0x039F0A28 LDRB W13, [X12 + 0x130]
	0x039F0A2C CMP W10, W13
	0x039F0A30 B.CC 0x39F0A48
	0x039F0A34 LDR X11, [X9 + 0xC8]
	0x039F0A38 ADD X13, X11, X13, 0x3, LSL
	0x039F0A3C LDUR X13, [X13 - 0x8]
	0x039F0A40 CMP X13, X12
	0x039F0A44 B.EQ 0x39F0A78
	0x039F0A48 LDR X8, [X28]
	0x039F0A4C CMP X9, X8
	0x039F0A50 B.EQ 0x39F0A60
	0x039F0A54 LDR X8, [X29]
	0x039F0A58 CMP X9, X8
	0x039F0A5C B.NE 0x39F0A64
	0x039F0A60 MOVZ W26, 0x1
	0x039F0A64 LDR W8, [X24 + 0x18]
	0x039F0A68 ADD X19, X19, 0x1
	0x039F0A6C CMP X19, W8, SXTW
	0x039F0A70 B.LT 0x39F0A0C
	0x039F0A74 B 0x39F0ACC
	0x039F0A78 ADRP X9, 0x72E000
	0x039F0A7C LDR X9, [X9 + 0x40]
	0x039F0A80 LDR X23, [X8 + 0x10]
	0x039F0A84 LDR X9, [X9]
	0x039F0A88 LDRB W12, [X9 + 0x130]
	0x039F0A8C CMP W10, W12
	0x039F0A90 B.CC 0x39F0A64
	0x039F0A94 ADD X10, X11, X12, 0x3, LSL
	0x039F0A98 LDUR X10, [X10 - 0x8]
	0x039F0A9C CMP X10, X9
	0x039F0AA0 B.NE 0x39F0A64
	0x039F0AA4 LDR X0, [X8 + 0x18]
	0x039F0AA8 ADRP X8, 0x763000
	0x039F0AAC LDR X8, [X8 + 0x750]
	0x039F0AB0 LDR X1, [X31]
	0x039F0AB4 LDR X2, [X8]
	0x039F0AB8 BL 0x21BA5B0
	0x039F0ABC EOR W8, W0, 0x1
	0x039F0AC0 ORR W26, W26, W8, 0x0
	0x039F0AC4 B 0x39F0A64
	0x039F0AC8 MOV W26, W31
	0x039F0ACC TBNZ X26, 0x0, 0x39F0B74
	0x039F0AD0 MOV X0, X23
	0x039F0AD4 MOV X1, X31
	0x039F0AD8 BL 0x32277A8
	0x039F0ADC TBZ X0, 0x0, 0x39F0AF4
	0x039F0AE0 LDR X8, [X22]
	0x039F0AE4 MOV X0, X22
	0x039F0AE8 LDP X9, X1, [X8 + 0x1A8]
	0x039F0AEC BLR X9
	0x039F0AF0 MOV X23, X0
	0x039F0AF4 ADRP X8, 0x709000
	0x039F0AF8 LDR X8, [X8 + 0xBB0]
	0x039F0AFC ADD X0, X31, 0x10
	0x039F0B00 MOV X1, X23
	0x039F0B04 MOV X2, X22
	0x039F0B08 LDR X3, [X8]
	0x039F0B0C STP X31, X31, [X31 + 0x10]
	0x039F0B10 BL 0x27ABC80
	0x039F0B14 CBZ X21, 0x39F0C4C
	0x039F0B18 ADRP X9, 0x709000
	0x039F0B1C LDP X1, X2, [X31 + 0x10]
	0x039F0B20 LDR W10, [X21 + 0x1C]
	0x039F0B24 LDR X8, [X21 + 0x10]
	0x039F0B28 LDR X9, [X9 + 0xB88]
	0x039F0B2C ADD W10, W10, 0x1
	0x039F0B30 LDR X9, [X9]
	0x039F0B34 STR W10, [X21 + 0x1C]
	0x039F0B38 CBZ X8, 0x39F0C4C
	0x039F0B3C LDRSW X10, [X21 + 0x18]
	0x039F0B40 LDR W11, [X8 + 0x18]
	0x039F0B44 CMP W10, W11
	0x039F0B48 B.CS 0x39F0B60
	0x039F0B4C ADD W9, W10, 0x1
	0x039F0B50 ADD X8, X8, X10, 0x4, LSL
	0x039F0B54 STR W9, [X21 + 0x18]
	0x039F0B58 STP X1, X2, [X8 + 0x20]
	0x039F0B5C B 0x39F0B74
	0x039F0B60 LDR X8, [X9 + 0x20]
	0x039F0B64 MOV X0, X21
	0x039F0B68 LDR X8, [X8 + 0xC0]
	0x039F0B6C LDR X3, [X8 + 0x70]
	0x039F0B70 BL 0x2F49F80
	0x039F0B74 LDR X26, [X31 + 0x8]
	0x039F0B78 ADD W25, W25, 0x1
	0x039F0B7C LDR W8, [X26 + 0x18]
	0x039F0B80 CMP W25, W8
	0x039F0B84 B.LT 0x39F09AC
	0x039F0B88 ADRP X22, 0x763000
	0x039F0B8C LDR X22, [X22 + 0x788]
	0x039F0B90 LDR X0, [X22]
	0x039F0B94 LDR W8, [X0 + 0xE0]
	0x039F0B98 CBNZ W8, 0x39F0BA4
	0x039F0B9C BL 0x1C16DFC
	0x039F0BA0 LDR X0, [X22]
	0x039F0BA4 LDR X8, [X0 + 0xB8]
	0x039F0BA8 ADRP X24, 0x763000
	0x039F0BAC ADRP X23, 0x763000
	0x039F0BB0 LDR X19, [X8 + 0x8]
	0x039F0BB4 LDR X24, [X24 + 0x758]
	0x039F0BB8 LDR X23, [X23 + 0x760]
	0x039F0BBC CBNZ X19, 0x39F0C10
	0x039F0BC0 LDR W8, [X0 + 0xE0]
	0x039F0BC4 CBNZ W8, 0x39F0BD0
	0x039F0BC8 BL 0x1C16DFC
	0x039F0BCC LDR X0, [X22]
	0x039F0BD0 ADRP X9, 0x763000
	0x039F0BD4 LDR X8, [X0 + 0xB8]
	0x039F0BD8 LDR X9, [X9 + 0x768]
	0x039F0BDC LDR X20, [X8]
	0x039F0BE0 LDR X0, [X9]
	0x039F0BE4 BL 0x1C16F10
	0x039F0BE8 ADRP X8, 0x763000
	0x039F0BEC LDR X8, [X8 + 0x780]
	0x039F0BF0 MOV X1, X20
	0x039F0BF4 MOV X3, X31
	0x039F0BF8 MOV X19, X0
	0x039F0BFC LDR X2, [X8]
	0x039F0C00 BL 0x2D2B264
	0x039F0C04 LDR X8, [X22]
	0x039F0C08 LDR X8, [X8 + 0xB8]
	0x039F0C0C STR X19, [X8 + 0x8]
	0x039F0C10 LDR X2, [X24]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x9F2000
	011 Move W8, [X20+3675]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x704000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x764000
	021 Move X0, [X0+1744]
	022 Call 0x1C17CF4
	023 Move X0, 0x764000
	024 Move X0, [X0+1752]
	025 Call 0x1C17CF4
	026 Move X0, 0x764000
	027 Move X0, [X0+1760]
	028 Call 0x1C17CF4
	029 Move X0, 0x764000
	030 Move X0, [X0+1768]
	031 Call 0x1C17CF4
	032 Move X0, 0x764000
	033 Move X0, [X0+1776]
	034 Call 0x1C17CF4
	035 Move X0, 0x764000
	036 Move X0, [X0+1784]
	037 Call 0x1C17CF4
	038 Move X0, 0x764000
	039 Move X0, [X0+1792]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+3675], W8
	043 Move [X31+32], X31
	044 Move [X31+40], X31
	045 Move [X31+48], X31
	046 Move X1, [X19+40]
	047 Compare X1, 0
	048 JumpIfEqual {136}
	049 Move W2, [X1+24]
	050 Move W8, [X1+28]
	051 Add W8, W8, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X1+24], W31
	054 Move [X1+28], W8
	055 Move X0, [X1+16]
	056 Move W1, W31
	057 Move X3, X31
	058 Call Array.Clear, X0, X1, X2
	059 Move X1, [X19+40]
	060 Move X0, X19
	061 Move X2, X31
	062 Call VolumeComponent.FindParameters, X0, X1, X2
	063 Move X0, [X19+40]
	064 Compare X0, 0
	065 JumpIfEqual {136}
	066 Move X8, 0x764000
	067 Move X8, [X8+1776]
	068 Move X22, 0x764000
	069 Move X23, 0x764000
	070 Move X22, [X22+1752]
	071 Move X23, [X23+1784]
	072 Move X1, [X8]
	073 Move X24, 0x764000
	074 Move X25, 0x704000
	075 Move X21, 0x764000
	076 Move X24, [X24+1792]
	077 Move X25, [X25+2600]
	078 Move X21, [X21+1744]
	079 Add X8, X31, 8
	080 Call List`1<Object>.GetEnumerator, X0
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X8, [X31+24]
	083 Move [X31+2], V0
	084 Move [X31+48], X8
	085 Move X1, [X22]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.MoveNext, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {122}
	092 Move X0, [X31+48]
	093 Compare X0, 0
	094 JumpIfEqual {99}
	095 Move X8, [X0]
	096 Move X9, [X8+456]
	097 Move X1, [X8+464]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X0, X19
	100 Move X1, X31
	101 Call "il2cpp_vm_object_is_inst", X0
	102 Compare X0, 0
	103 JumpIfEqual {135}
	104 Move X8, [X0]
	105 Move X9, [X8+424]
	106 Move X1, [X8+432]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X1, X0
	109 Move X0, [X23]
	110 Move X2, [X24]
	111 Move X3, X31
	112 Call String.Concat, X0, X1, X2
	113 Move X20, X0
	114 Move X0, [X25]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X20
	120 Move X1, X31
	121 Call Debug.LogWarning, X0
	122 Move X1, [X21]
	123 Add X0, X31, 32
	124 Call Enumerator<Object>.Dispose, X0
	125 Move X20, [X31+112]
	126 Move X19, [X31+120]
	127 Move X22, [X31+96]
	128 Move X21, [X31+104]
	129 Move X24, [X31+80]
	130 Move X23, [X31+88]
	131 Move X30, [X31+64]
	132 Move X25, [X31+72]
	133 Add X31, X31, 128
	134 Return 
	135 Call 0x1C17F20
	136 Call 0x1C17F20
	137 Move X19, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X19
	140 Call 0x3EB2AD0
	141 Move X20, [X0]
	142 Call 0x3EB2AE0
	143 Move X1, [X21]
	144 Add X0, X31, 32
	145 Call Enumerator<Object>.Dispose, X0
	146 Compare X20, 0
	147 JumpIfEqual {125}
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Move X20, X31
	151 Move X19, X0
	152 Move X1, [X21]
	153 Add X0, X31, 32
	154 Call Enumerator<Object>.Dispose, X0
	155 Compare X20, 0
	156 JumpIfNotEqual {159}
	157 Move X0, X19
	158 Call 0x1D2D690
	159 Move X0, X20
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void OnDisable()

Disassembly:
	0x039F0C14 MOV X0, X21
	0x039F0C18 MOV X1, X19
	0x039F0C1C BL 0x21C97FC
	0x039F0C20 LDR X1, [X23]
	0x039F0C24 BL 0x21D7598
	0x039F0C28 LDP X20, X19, [X31 + 0x70]
	0x039F0C2C LDP X22, X21, [X31 + 0x60]
	0x039F0C30 LDP X24, X23, [X31 + 0x50]
	0x039F0C34 LDP X26, X25, [X31 + 0x40]
	0x039F0C38 LDP X28, X27, [X31 + 0x30]
	0x039F0C3C LDP X29, X30, [X31 + 0x20]
	0x039F0C40 ADD X31, X31, 0x80
	0x039F0C44 RET
	0x039F0C48 BL 0x1C16F28
	0x039F0C4C BL 0x1C16F20
	0x039F0C50 LDR X0, [X0 + 0x18]
	0x039F0C54 RET
	0x039F0C58 STR X1, [X0 + 0x18]
	0x039F0C5C RET
	0x039F0C60 SUB X31, X31, 0x60
	0x039F0C64 STR X30, [X31 + 0x20]
	0x039F0C68 STP X24, X23, [X31 + 0x30]
	0x039F0C6C STP X22, X21, [X31 + 0x40]
	0x039F0C70 STP X20, X19, [X31 + 0x50]
	0x039F0C74 ADRP X21, 0x9F1000
	0x039F0C78 LDRB W8, [X21 + 0xE68]
	0x039F0C7C MOV X19, X1
	0x039F0C80 MOV X20, X0
	0x039F0C84 TBNZ X8, 0x0, 0x39F0CCC
	0x039F0C88 ADRP X0, 0x72C000
	0x039F0C8C LDR X0, [X0 + 0x988]
	0x039F0C90 BL 0x1C16CF4
	0x039F0C94 ADRP X0, 0x72C000
	0x039F0C98 LDR X0, [X0 + 0x990]
	0x039F0C9C BL 0x1C16CF4
	0x039F0CA0 ADRP X0, 0x72C000
	0x039F0CA4 LDR X0, [X0 + 0x998]
	0x039F0CA8 BL 0x1C16CF4
	0x039F0CAC ADRP X0, 0x72C000
	0x039F0CB0 LDR X0, [X0 + 0x9A0]
	0x039F0CB4 BL 0x1C16CF4
	0x039F0CB8 ADRP X0, 0x703000
	0x039F0CBC LDR X0, [X0 + 0x6C0]
	0x039F0CC0 BL 0x1C16CF4
	0x039F0CC4 MOVZ W8, 0x1
	0x039F0CC8 STRB W8, [X21 + 0xE68]
	0x039F0CCC STP X31, X31, [X31 + 0x8]
	0x039F0CD0 STR X31, [X31 + 0x18]
	0x039F0CD4 LDR X0, [X20 + 0x38]
	0x039F0CD8 CBZ X0, 0x39F0D88
	0x039F0CDC ADRP X8, 0x72C000
	0x039F0CE0 LDR X8, [X8 + 0x9A0]
	0x039F0CE4 ADRP X23, 0x72C000
	0x039F0CE8 ADRP X24, 0x703000
	0x039F0CEC ADRP X22, 0x72C000
	0x039F0CF0 LDR X1, [X8]
	0x039F0CF4 LDR X23, [X23 + 0x990]
	0x039F0CF8 LDR X24, [X24 + 0x6C0]
	0x039F0CFC LDR X22, [X22 + 0x988]
	0x039F0D00 ADD X8, X31, 0x8
	0x039F0D04 BL 0x301CB58
	0x039F0D08 LDR X1, [X23]
	0x039F0D0C ADD X0, X31, 0x8
	0x039F0D10 BL 0x2BC4350
	0x039F0D14 TBZ X0, 0x0, 0x39F0D58
	0x039F0D18 LDR X20, [X31 + 0x18]
	0x039F0D1C CBZ X20, 0x39F0D84
	0x039F0D20 MOV X0, X20
	0x039F0D24 MOV X1, X31
	0x039F0D28 BL 0x33BE520
	0x039F0D2C MOV X21, X0
	0x039F0D30 LDR X0, [X24]
	0x039F0D34 LDR W8, [X0 + 0xE0]
	0x039F0D38 CBNZ W8, 0x39F0D40
	0x039F0D3C BL 0x1C16DFC
	0x039F0D40 MOV X0, X21
	0x039F0D44 MOV X1, X19
	0x039F0D48 MOV X2, X31
	0x039F0D4C BL 0x3395194
	0x039F0D50 TBZ X0, 0x0, 0x39F0D08
	0x039F0D54 B 0x39F0D5C
	0x039F0D58 MOV X20, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x9F2000
	006 Move W8, [X20+3676]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x764000
	013 Move X0, [X0+1744]
	014 Call 0x1C17CF4
	015 Move X0, 0x764000
	016 Move X0, [X0+1752]
	017 Call 0x1C17CF4
	018 Move X0, 0x764000
	019 Move X0, [X0+1760]
	020 Call 0x1C17CF4
	021 Move X0, 0x764000
	022 Move X0, [X0+1776]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3676], W8
	026 Move [X31+8], X31
	027 Move [X31+16], X31
	028 Move [X31+24], X31
	029 Move X0, [X19+40]
	030 Compare X0, 0
	031 JumpIfEqual {63}
	032 Move X8, 0x764000
	033 Move X8, [X8+1776]
	034 Move X20, 0x764000
	035 Move X19, 0x764000
	036 Move X1, [X8]
	037 Move X20, [X20+1752]
	038 Move X19, [X19+1744]
	039 Add X8, X31, 8
	040 Call List`1<Object>.GetEnumerator, X0
	041 Move X1, [X20]
	042 Add X0, X31, 8
	043 Call Enumerator<Object>.MoveNext, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {55}
	048 Move X0, [X31+24]
	049 Compare X0, 0
	050 JumpIfEqual {41}
	051 Move X8, [X0]
	052 Move X9, [X8+472]
	053 Move X1, [X8+480]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X1, [X19]
	056 Add X0, X31, 8
	057 Call Enumerator<Object>.Dispose, X0
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X30, [X31+32]
	061 Add X31, X31, 64
	062 Return 
	063 Call 0x1C17F20
	064 Move X20, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X20
	067 Call 0x3EB2AD0
	068 Move X19, [X0]
	069 Call 0x3EB2AE0
	070 Move X8, 0x764000
	071 Move X8, [X8+1744]
	072 Add X0, X31, 8
	073 Move X1, [X8]
	074 Call Enumerator<Object>.Dispose, X0
	075 Compare X19, 0
	076 JumpIfEqual {58}
	077 Move X0, X19
	078 Call 0x1C17F18
	079 Move X19, X31
	080 Move X20, X0
	081 Move X8, 0x764000
	082 Move X8, [X8+1744]
	083 Move X1, [X8]
	084 Add X0, X31, 8
	085 Call Enumerator<Object>.Dispose, X0
	086 Compare X19, 0
	087 JumpIfNotEqual {90}
	088 Move X0, X20
	089 Call 0x1D2D690
	090 Move X0, X19
	091 Call 0x1C17F18
	092 Call 0x1991590

Method: System.Void Override(UnityEngine.Rendering.VolumeComponent state, System.Single interpFactor)

Disassembly:
	0x039F0D5C LDR X1, [X22]
	0x039F0D60 ADD X0, X31, 0x8
	0x039F0D64 BL 0x2BC434C
	0x039F0D68 MOV X0, X20
	0x039F0D6C LDP X20, X19, [X31 + 0x50]
	0x039F0D70 LDP X22, X21, [X31 + 0x40]
	0x039F0D74 LDP X24, X23, [X31 + 0x30]
	0x039F0D78 LDR X30, [X31 + 0x20]
	0x039F0D7C ADD X31, X31, 0x60
	0x039F0D80 RET
	0x039F0D84 BL 0x1C16F20
	0x039F0D88 BL 0x1C16F20
	0x039F0D8C B 0x39F0D9C
	0x039F0D90 B 0x39F0D9C
	0x039F0D94 B 0x39F0D9C
	0x039F0D98 B 0x39F0D9C
	0x039F0D9C MOV X19, X0
	0x039F0DA0 CMP W1, 0x1
	0x039F0DA4 B.NE 0x39F0DD0
	0x039F0DA8 MOV X0, X19
	0x039F0DAC BL 0x3EB1AD0
	0x039F0DB0 LDR X20, [X0]
	0x039F0DB4 BL 0x3EB1AE0
	0x039F0DB8 LDR X1, [X22]
	0x039F0DBC ADD X0, X31, 0x8
	0x039F0DC0 BL 0x2BC434C
	0x039F0DC4 CBZ X20, 0x39F0D68
	0x039F0DC8 MOV X0, X20
	0x039F0DCC BL 0x1C16F18
	0x039F0DD0 MOV X20, X31
	0x039F0DD4 B 0x39F0DDC
	0x039F0DD8 MOV X19, X0
	0x039F0DDC LDR X1, [X22]
	0x039F0DE0 ADD X0, X31, 0x8
	0x039F0DE4 BL 0x2BC434C
	0x039F0DE8 CBNZ X20, 0x39F0DF4
	0x039F0DEC MOV X0, X19
	0x039F0DF0 BL 0x1D2C690
	0x039F0DF4 MOV X0, X20
	0x039F0DF8 BL 0x1C16F18
	0x039F0DFC BL 0x1990590
	0x039F0E00 STP X29, X30, [X31 - 0x60]!
	0x039F0E04 STP X28, X27, [X31 + 0x10]
	0x039F0E08 STP X26, X25, [X31 + 0x20]
	0x039F0E0C STP X24, X23, [X31 + 0x30]
	0x039F0E10 STP X22, X21, [X31 + 0x40]
	0x039F0E14 STP X20, X19, [X31 + 0x50]
	0x039F0E18 ADRP X21, 0x9F1000
	0x039F0E1C ADRP X29, 0x763000
	0x039F0E20 ADRP X20, 0x763000
	0x039F0E24 ADRP X28, 0x763000
	0x039F0E28 ADRP X27, 0x763000
	0x039F0E2C ADRP X26, 0x763000
	0x039F0E30 ADRP X25, 0x763000
	0x039F0E34 ADRP X24, 0x72F000
	0x039F0E38 ADRP X23, 0x763000
	0x039F0E3C ADRP X22, 0x763000
	0x039F0E40 LDR X29, [X29 + 0x798]
	0x039F0E44 LDR X20, [X20 + 0x7A0]
	0x039F0E48 LDR X28, [X28 + 0x7A8]
	0x039F0E4C LDR X27, [X27 + 0x7B0]
	0x039F0E50 LDR X26, [X26 + 0x7B8]
	0x039F0E54 LDRB W8, [X21 + 0xE69]
	0x039F0E58 LDR X25, [X25 + 0x7C0]
	0x039F0E5C LDR X24, [X24 + 0xC48]
	0x039F0E60 LDR X23, [X23 + 0x7C8]
	0x039F0E64 LDR X22, [X22 + 0x7D0]
	0x039F0E68 MOV X19, X0
	0x039F0E6C TBNZ X8, 0x0, 0x39F0EF0
	0x039F0E70 ADRP X0, 0x763000
	0x039F0E74 LDR X0, [X0 + 0x7C0]
	0x039F0E78 BL 0x1C16CF4
	0x039F0E7C ADRP X0, 0x763000

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x9F2000
	011 Move W8, [X21+3677]
	012 Move V8, V0
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x764000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move X0, 0x762000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3677], W8
	027 Move X8, [X20+40]
	028 Compare X8, 0
	029 JumpIfEqual {95}
	030 Move W24, [X8+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {95}
	034 Move X25, 0x762000
	035 Move X25, [X25+1912]
	036 Move W21, W31
	037 Move X0, [X19+40]
	038 Compare X0, 0
	039 JumpIfEqual {95}
	040 Move X2, [X25]
	041 Move W1, W21
	042 Call List`1<Object>.get_Item, X0, X1
	043 Move X8, [X20+40]
	044 Compare X8, 0
	045 JumpIfEqual {95}
	046 Move X2, [X25]
	047 Move X22, X0
	048 Move X0, X8
	049 Move W1, W21
	050 Call List`1<Object>.get_Item, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {95}
	053 Move X8, [X0]
	054 Move X23, X0
	055 Move X9, [X8+392]
	056 Move X1, [X8+400]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {83}
	062 Move X8, [X23]
	063 Move X0, X23
	064 Move X9, [X8+392]
	065 Move X1, [X8+400]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X22, 0
	068 JumpIfEqual {95}
	069 Move X8, [X22]
	070 And W1, W0, 1
	071 Move X0, X22
	072 Move X9, [X8+408]
	073 Move X2, [X8+416]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X22]
	076 Move X0, X22
	077 Move X1, X22
	078 Move X2, X23
	079 Move X9, [X8+424]
	080 Move X3, [X8+432]
	081 Move V0, V8
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Add W21, W21, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X30, [X31+16]
	092 Move X25, [X31+24]
	093 Move V8, [X31+80]
	094 Return 
	095 Call 0x1C17F20

Method: System.Void SetAllOverridesTo(System.Boolean state)

Disassembly:
	0x039F0E80 LDR X0, [X0 + 0x7A0]
	0x039F0E84 BL 0x1C16CF4
	0x039F0E88 ADRP X0, 0x763000
	0x039F0E8C LDR X0, [X0 + 0x7B8]

ISIL:
	001 Move X8, [X0+40]
	002 And W2, W1, 1
	003 Move X1, X8

Method: System.Void SetOverridesTo(System.Collections.Generic.IEnumerable`1<UnityEngine.Rendering.VolumeParameter> enumerable, System.Boolean state)

Disassembly:
	0x039F0E90 BL 0x1C16CF4
	0x039F0E94 ADRP X0, 0x763000
	0x039F0E98 LDR X0, [X0 + 0x798]
	0x039F0E9C BL 0x1C16CF4
	0x039F0EA0 ADRP X0, 0x763000
	0x039F0EA4 LDR X0, [X0 + 0x7D8]
	0x039F0EA8 BL 0x1C16CF4
	0x039F0EAC ADRP X0, 0x763000
	0x039F0EB0 LDR X0, [X0 + 0x7B0]
	0x039F0EB4 BL 0x1C16CF4
	0x039F0EB8 ADRP X0, 0x763000
	0x039F0EBC LDR X0, [X0 + 0x7C8]
	0x039F0EC0 BL 0x1C16CF4
	0x039F0EC4 ADRP X0, 0x72F000
	0x039F0EC8 LDR X0, [X0 + 0xC48]
	0x039F0ECC BL 0x1C16CF4
	0x039F0ED0 ADRP X0, 0x763000
	0x039F0ED4 LDR X0, [X0 + 0x7D0]
	0x039F0ED8 BL 0x1C16CF4
	0x039F0EDC ADRP X0, 0x763000
	0x039F0EE0 LDR X0, [X0 + 0x7A8]
	0x039F0EE4 BL 0x1C16CF4
	0x039F0EE8 MOVZ W8, 0x1
	0x039F0EEC STRB W8, [X21 + 0xE69]
	0x039F0EF0 MOV X0, X19
	0x039F0EF4 MOV X1, X31
	0x039F0EF8 BL 0x33BDD8C
	0x039F0EFC LDR X0, [X29]
	0x039F0F00 BL 0x1C16F10
	0x039F0F04 LDR X1, [X20]
	0x039F0F08 MOV X20, X0
	0x039F0F0C BL 0x2A12DD4
	0x039F0F10 STR X20, [X19 + 0x20]
	0x039F0F14 LDR X0, [X28]
	0x039F0F18 BL 0x1C16F10
	0x039F0F1C LDR X1, [X27]
	0x039F0F20 MOV X20, X0
	0x039F0F24 BL 0x301B7C4
	0x039F0F28 STR X20, [X19 + 0x28]
	0x039F0F2C LDR X0, [X26]
	0x039F0F30 BL 0x1C16F10
	0x039F0F34 LDR X1, [X25]
	0x039F0F38 MOV X20, X0
	0x039F0F3C BL 0x29FDD14
	0x039F0F40 STR X20, [X19 + 0x30]
	0x039F0F44 LDR X0, [X24]
	0x039F0F48 BL 0x1C16F10
	0x039F0F4C LDR X2, [X23]
	0x039F0F50 MOVZ W1, 0x8
	0x039F0F54 MOV X20, X0
	0x039F0F58 BL 0x301B830
	0x039F0F5C STR X20, [X19 + 0x40]
	0x039F0F60 LDR X0, [X22]
	0x039F0F64 BL 0x1C16F10
	0x039F0F68 ADRP X8, 0x763000
	0x039F0F6C LDR X8, [X8 + 0x7D8]
	0x039F0F70 MOV X20, X0
	0x039F0F74 LDR X1, [X8]
	0x039F0F78 BL 0x301B7C4
	0x039F0F7C MOV X0, X19
	0x039F0F80 STR X20, [X19 + 0x38]
	0x039F0F84 BL 0x39F0FB4
	0x039F0F88 MOV X0, X19
	0x039F0F8C BL 0x39F12B8
	0x039F0F90 STR X0, [X19 + 0x48]
	0x039F0F94 STR X0, [X19 + 0x10]
	0x039F0F98 LDP X20, X19, [X31 + 0x50]
	0x039F0F9C LDP X22, X21, [X31 + 0x40]
	0x039F0FA0 LDP X24, X23, [X31 + 0x30]
	0x039F0FA4 LDP X26, X25, [X31 + 0x20]
	0x039F0FA8 LDP X28, X27, [X31 + 0x10]
	0x039F0FAC LDP X29, X30, [X31], #0x60
	0x039F0FB0 RET
	0x039F0FB4 STR X30, [X31 - 0x50]!
	0x039F0FB8 STP X26, X25, [X31 + 0x10]
	0x039F0FBC STP X24, X23, [X31 + 0x20]
	0x039F0FC0 STP X22, X21, [X31 + 0x30]
	0x039F0FC4 STP X20, X19, [X31 + 0x40]
	0x039F0FC8 ADRP X20, 0x9F1000
	0x039F0FCC LDRB W8, [X20 + 0xE6B]
	0x039F0FD0 MOV X19, X0
	0x039F0FD4 TBNZ X8, 0x0, 0x39F1064
	0x039F0FD8 ADRP X0, 0x763000
	0x039F0FDC LDR X0, [X0 + 0x7E0]
	0x039F0FE0 BL 0x1C16CF4
	0x039F0FE4 ADRP X0, 0x72B000
	0x039F0FE8 LDR X0, [X0 + 0x8F8]
	0x039F0FEC BL 0x1C16CF4
	0x039F0FF0 ADRP X0, 0x72C000
	0x039F0FF4 LDR X0, [X0 + 0x3A0]
	0x039F0FF8 BL 0x1C16CF4
	0x039F0FFC ADRP X0, 0x72B000
	0x039F1000 LDR X0, [X0 + 0x900]
	0x039F1004 BL 0x1C16CF4
	0x039F1008 ADRP X0, 0x70C000
	0x039F100C LDR X0, [X0 + 0x9B0]
	0x039F1010 BL 0x1C16CF4
	0x039F1014 ADRP X0, 0x762000
	0x039F1018 LDR X0, [X0 + 0x650]
	0x039F101C BL 0x1C16CF4
	0x039F1020 ADRP X0, 0x762000
	0x039F1024 LDR X0, [X0 + 0x7E8]
	0x039F1028 BL 0x1C16CF4
	0x039F102C ADRP X0, 0x762000
	0x039F1030 LDR X0, [X0 + 0x7F0]
	0x039F1034 BL 0x1C16CF4
	0x039F1038 ADRP X0, 0x762000
	0x039F103C LDR X0, [X0 + 0x788]
	0x039F1040 BL 0x1C16CF4
	0x039F1044 ADRP X0, 0x760000
	0x039F1048 LDR X0, [X0 + 0x710]
	0x039F104C BL 0x1C16CF4
	0x039F1050 ADRP X0, 0x762000
	0x039F1054 LDR X0, [X0 + 0x7F8]
	0x039F1058 BL 0x1C16CF4
	0x039F105C MOVZ W8, 0x1
	0x039F1060 STRB W8, [X20 + 0xE6B]
	0x039F1064 LDR X8, [X19 + 0x38]
	0x039F1068 CBZ X8, 0x39F12A8
	0x039F106C LDP W2, W9, [X8 + 0x18]
	0x039F1070 ADRP X20, 0x72A000
	0x039F1074 LDR X20, [X20 + 0x8F8]
	0x039F1078 ADD W9, W9, 0x1
	0x039F107C CMP W2, 0x1
	0x039F1080 STP W31, W9, [X8 + 0x18]
	0x039F1084 B.LT 0x39F1098
	0x039F1088 LDR X0, [X8 + 0x10]
	0x039F108C MOV W1, W31
	0x039F1090 MOV X3, X31
	0x039F1094 BL 0x339FA34
	0x039F1098 LDR X0, [X20]
	0x039F109C ADRP X20, 0x762000
	0x039F10A0 ADRP X23, 0x762000
	0x039F10A4 LDR W8, [X0 + 0xE0]
	0x039F10A8 LDR X20, [X20 + 0x7E0]
	0x039F10AC LDR X23, [X23 + 0x788]
	0x039F10B0 CBNZ W8, 0x39F10B8
	0x039F10B4 BL 0x1C16DFC
	0x039F10B8 LDR X0, [X20]
	0x039F10BC BL 0x21A7C6C
	0x039F10C0 LDR X8, [X23]
	0x039F10C4 MOV X20, X0
	0x039F10C8 LDR W9, [X8 + 0xE0]
	0x039F10CC CBNZ W9, 0x39F10DC
	0x039F10D0 MOV X0, X8
	0x039F10D4 BL 0x1C16DFC
	0x039F10D8 LDR X8, [X23]
	0x039F10DC LDR X9, [X8 + 0xB8]
	0x039F10E0 ADRP X25, 0x72A000
	0x039F10E4 ADRP X24, 0x72B000
	0x039F10E8 LDR X21, [X9 + 0x10]
	0x039F10EC LDR X25, [X25 + 0x900]
	0x039F10F0 LDR X24, [X24 + 0x3A0]
	0x039F10F4 CBNZ X21, 0x39F114C
	0x039F10F8 LDR W9, [X8 + 0xE0]
	0x039F10FC CBNZ W9, 0x39F110C
	0x039F1100 MOV X0, X8
	0x039F1104 BL 0x1C16DFC
	0x039F1108 LDR X8, [X23]
	0x039F110C ADRP X9, 0x70C000
	0x039F1110 LDR X8, [X8 + 0xB8]
	0x039F1114 LDR X9, [X9 + 0x9B0]
	0x039F1118 LDR X22, [X8]
	0x039F111C LDR X0, [X9]
	0x039F1120 BL 0x1C16F10
	0x039F1124 ADRP X8, 0x762000
	0x039F1128 LDR X8, [X8 + 0x7F0]
	0x039F112C MOV X1, X22
	0x039F1130 MOV X3, X31
	0x039F1134 MOV X21, X0
	0x039F1138 LDR X2, [X8]
	0x039F113C BL 0x2D2F428
	0x039F1140 LDR X8, [X23]
	0x039F1144 LDR X8, [X8 + 0xB8]
	0x039F1148 STR X21, [X8 + 0x10]
	0x039F114C LDR X2, [X25]
	0x039F1150 MOV X0, X20
	0x039F1154 MOV X1, X21
	0x039F1158 BL 0x21DA490
	0x039F115C LDR X1, [X24]
	0x039F1160 BL 0x21D577C
	0x039F1164 STR X0, [X19 + 0x18]
	0x039F1168 CBZ X0, 0x39F12A8
	0x039F116C LDR W8, [X0 + 0x18]
	0x039F1170 MOV X20, X0
	0x039F1174 CMP W8, 0x1
	0x039F1178 B.LT 0x39F1290
	0x039F117C ADRP X24, 0x762000
	0x039F1180 ADRP X25, 0x760000
	0x039F1184 ADRP X26, 0x762000
	0x039F1188 LDR X24, [X24 + 0x7F8]
	0x039F118C LDR X25, [X25 + 0x710]
	0x039F1190 LDR X26, [X26 + 0x650]
	0x039F1194 MOV X21, X31
	0x039F1198 MOV W23, W31
	0x039F119C CMP W23, W8
	0x039F11A0 B.CS 0x39F12B4
	0x039F11A4 ADD X8, X20, W23, 0x3, SXTW
	0x039F11A8 LDR X22, [X8 + 0x20]
	0x039F11AC CBZ X22, 0x39F12A8
	0x039F11B0 LDR X1, [X24]
	0x039F11B4 MOVZ W2, 0x38
	0x039F11B8 MOV X0, X22
	0x039F11BC MOV X3, X31
	0x039F11C0 BL 0x3397600
	0x039F11C4 CMP X0, 0x0
	0x039F11C8 CSEL X21, X21, X0, EQ
	0x039F11CC CBZ X0, 0x39F11E8
	0x039F11D0 CBZ X21, 0x39F12A8
	0x039F11D4 MOV X0, X21
	0x039F11D8 MOV X1, X31
	0x039F11DC MOV X2, X31
	0x039F11E0 MOV X3, X31
	0x039F11E4 BL 0x32CE4E0
	0x039F11E8 MOV X0, X22
	0x039F11EC MOV X1, X31
	0x039F11F0 BL 0x3C36DE8
	0x039F11F4 MOV X8, X0
	0x039F11F8 CBZ X0, 0x39F1228
	0x039F11FC LDR X9, [X8]
	0x039F1200 LDR X1, [X25]
	0x039F1204 LDRB W11, [X9 + 0x130]
	0x039F1208 LDRB W10, [X1 + 0x130]
	0x039F120C CMP W11, W10
	0x039F1210 B.CC 0x39F12AC
	0x039F1214 LDR X9, [X9 + 0xC8]
	0x039F1218 ADD X9, X9, X10, 0x3, LSL
	0x039F121C LDUR X9, [X9 - 0x8]
	0x039F1220 CMP X9, X1
	0x039F1224 B.NE 0x39F12AC
	0x039F1228 LDR X0, [X19 + 0x38]
	0x039F122C CBZ X0, 0x39F12A8
	0x039F1230 LDR W11, [X0 + 0x1C]
	0x039F1234 LDR X9, [X0 + 0x10]
	0x039F1238 LDR X10, [X26]
	0x039F123C ADD W11, W11, 0x1
	0x039F1240 STR W11, [X0 + 0x1C]
	0x039F1244 CBZ X9, 0x39F12A8
	0x039F1248 LDRSW X11, [X0 + 0x18]
	0x039F124C LDR W12, [X9 + 0x18]
	0x039F1250 CMP W11, W12
	0x039F1254 B.CS 0x39F126C
	0x039F1258 ADD W10, W11, 0x1
	0x039F125C ADD X9, X9, X11, 0x3, LSL
	0x039F1260 STR W10, [X0 + 0x18]
	0x039F1264 STR X8, [X9 + 0x20]
	0x039F1268 B 0x39F1280
	0x039F126C LDR X9, [X10 + 0x20]
	0x039F1270 MOV X1, X8
	0x039F1274 LDR X9, [X9 + 0xC0]
	0x039F1278 LDR X2, [X9 + 0x70]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x9F2000
	013 Move W8, [X22+3678]
	014 Move W20, W2
	015 Move X19, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x704000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x764000
	025 Move X0, [X0+1808]
	026 Call 0x1C17CF4
	027 Move X0, 0x764000
	028 Move X0, [X0+1816]
	029 Call 0x1C17CF4
	030 Move X0, 0x704000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0x764000
	034 Move X0, [X0+1824]
	035 Call 0x1C17CF4
	036 Move X0, 0x732000
	037 Move X0, [X0+3200]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3678], W8
	041 Compare X19, 0
	042 JumpIfEqual {217}
	043 Move X10, 0x764000
	044 Move X8, [X19]
	045 Move X10, [X10+1808]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X19
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X24, 0x704000
	065 Move X24, [X24+3584]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X19, X0
	069 Compare X0, 0
	070 JumpIfEqual {218}
	071 Move X25, 0x704000
	072 Move X26, 0x764000
	073 Move X27, 0x732000
	074 Move X28, 0x764000
	075 Move X25, [X25+3608]
	076 Move X26, [X26+1816]
	077 Move X27, [X27+3200]
	078 Move X28, [X28+1824]
	079 Move X8, [X19]
	080 Move X1, [X25]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move X0, X19
	091 Move W2, W31
	092 Call 0x1C5D788
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add X8, X8, X9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X19
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {174}
	104 Move X8, [X19]
	105 Move X1, [X26]
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move X0, X19
	116 Move W2, W31
	117 Call 0x1C5D788
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Add X8, X8, X9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X19
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X22, X0
	126 Compare X0, 0
	127 JumpIfEqual {212}
	128 Move X8, [X22]
	129 Move X9, [X8+408]
	130 Move X2, [X8+416]
	131 And W1, W20, 1
	132 Move X0, X22
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X0, X22
	135 Move X1, X31
	136 Call "il2cpp_vm_object_is_inst", X0
	137 Move X23, X0
	138 Call VolumeParameter.IsObjectParameter, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {79}
	143 Compare X23, 0
	144 JumpIfEqual {215}
	145 Move X1, [X27]
	146 Move W2, 36
	147 Move X0, X23
	148 Move X3, X31
	149 Call Type.GetProperty, X0, X1, X2
	150 Compare X0, 0
	151 JumpIfEqual {216}
	152 Move X8, [X0]
	153 Move X9, [X8+712]
	154 Move X3, [X8+720]
	155 Move X1, X22
	156 Move X2, X31
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X8, X0
	159 Compare X0, 0
	160 JumpIfEqual {79}
	161 Move X9, [X8]
	162 Move X1, [X28]
	163 Move W11, [X9+304]
	164 Move W10, [X1+304]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X9, [X9+200]
	167 Add X9, X9, X10
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 And W2, W20, 1
	171 Move X0, X21
	172 Move X1, X8
	173 Call VolumeComponent.SetOverridesTo, X0, X1, X2
	174 Move X21, X31
	175 Compare X19, 0
	176 JumpIfEqual {198}
	177 Move X8, [X19]
	178 Move X1, [X24]
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X19
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X19
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X21, 0
	199 JumpIfNotEqual {219}
	200 Move X20, [X31+80]
	201 Move X19, [X31+88]
	202 Move X22, [X31+64]
	203 Move X21, [X31+72]
	204 Move X24, [X31+48]
	205 Move X23, [X31+56]
	206 Move X26, [X31+32]
	207 Move X25, [X31+40]
	208 Move X28, [X31+16]
	209 Move X27, [X31+24]
	210 Move X30, [X31+96]
	211 Return 
	212 Call 0x1C17F20
	213 Move X0, X8
	214 Call 0x1C181E0
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Move X0, X21
	220 Call 0x1C17F18
	221 Move X20, X0
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, X20
	224 Call 0x3EB2AD0
	225 Move X21, [X0]
	226 Call 0x3EB2AE0
	227 Move X21, X31
	228 Move X20, X0
	229 Compare X19, 0
	230 JumpIfEqual {252}
	231 Move X8, [X19]
	232 Move X1, [X24]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move X0, X19
	243 Move W2, W31
	244 Call 0x1C5D788
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Add X8, X8, X9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X19
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Compare X21, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X20
	255 Call 0x1D2D690
	256 Move X0, X21
	257 Call 0x1C17F18
	258 Call 0x1991590

Method: System.Int32 GetHashCode()

Disassembly:
	0x039F13B0 STP X26, X25, [X31 + 0x60]
	0x039F13B4 STP X24, X23, [X31 + 0x70]
	0x039F13B8 STP X22, X21, [X31 + 0x80]
	0x039F13BC STP X20, X19, [X31 + 0x90]
	0x039F13C0 STR X0, [X31]
	0x039F13C4 ADRP X22, 0x9F0000
	0x039F13C8 ADRP X20, 0x762000
	0x039F13CC ADRP X19, 0x762000
	0x039F13D0 LDRB W8, [X22 + 0xEB8]
	0x039F13D4 LDR X20, [X20 + 0x818]
	0x039F13D8 LDR X19, [X19 + 0x820]
	0x039F13DC MOV X21, X1
	0x039F13E0 TBNZ X8, 0x0, 0x39F1494
	0x039F13E4 ADRP X0, 0x762000
	0x039F13E8 LDR X0, [X0 + 0x828]
	0x039F13EC BL 0x1C16CF4
	0x039F13F0 ADRP X0, 0x72B000
	0x039F13F4 LDR X0, [X0 + 0x988]
	0x039F13F8 BL 0x1C16CF4
	0x039F13FC ADRP X0, 0x72B000
	0x039F1400 LDR X0, [X0 + 0x990]
	0x039F1404 BL 0x1C16CF4
	0x039F1408 ADRP X0, 0x72B000
	0x039F140C LDR X0, [X0 + 0x998]
	0x039F1410 BL 0x1C16CF4
	0x039F1414 ADRP X0, 0x762000
	0x039F1418 LDR X0, [X0 + 0x830]
	0x039F141C BL 0x1C16CF4
	0x039F1420 ADRP X0, 0x72B000
	0x039F1424 LDR X0, [X0 + 0x9A0]
	0x039F1428 BL 0x1C16CF4
	0x039F142C ADRP X0, 0x762000
	0x039F1430 LDR X0, [X0 + 0x838]
	0x039F1434 BL 0x1C16CF4
	0x039F1438 ADRP X0, 0x762000
	0x039F143C LDR X0, [X0 + 0x820]
	0x039F1440 BL 0x1C16CF4
	0x039F1444 ADRP X0, 0x762000
	0x039F1448 LDR X0, [X0 + 0x708]
	0x039F144C BL 0x1C16CF4
	0x039F1450 ADRP X0, 0x760000
	0x039F1454 LDR X0, [X0 + 0x778]
	0x039F1458 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x9F1000
	008 Move W8, [X20+3679]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x763000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move X0, 0x761000
	018 Move X0, [X0+1912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3679], W8
	022 Move X0, [X19+40]
	023 Compare X0, 0
	024 JumpIfEqual {47}
	025 Move X22, 0x761000
	026 Move X22, [X22+1912]
	027 Move W20, W31
	028 Move W21, 17
	029 Move W23, 23
	030 Move W8, [X0+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X2, [X22]
	033 Move W1, W20
	034 Call List`1<Object>.get_Item, X0, X1
	035 Compare X0, 0
	036 JumpIfEqual {47}
	037 Move X8, [X0]
	038 Move X9, [X8+344]
	039 Move X1, [X8+352]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W8, W0
	042 Move X0, [X19+40]
	043 NotImplemented "Instruction MADD not yet implemented."
	044 Add W20, W20, 1
	045 Compare X0, 0
	046 JumpIfNotEqual {30}
	047 Call 0x1C17F20
	048 Move W0, W21
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return X0

Method: System.Boolean AnyPropertiesIsOverridden()

Disassembly:
	0x039F145C ADRP X0, 0x762000
	0x039F1460 LDR X0, [X0 + 0x818]
	0x039F1464 BL 0x1C16CF4
	0x039F1468 ADRP X0, 0x72B000
	0x039F146C LDR X0, [X0 + 0xD90]
	0x039F1470 BL 0x1C16CF4
	0x039F1474 ADRP X0, 0x760000
	0x039F1478 LDR X0, [X0 + 0x710]
	0x039F147C BL 0x1C16CF4
	0x039F1480 ADRP X0, 0x72B000
	0x039F1484 LDR X0, [X0 + 0xD98]
	0x039F1488 BL 0x1C16CF4
	0x039F148C MOVZ W8, 0x1
	0x039F1490 STRB W8, [X22 + 0xEB8]
	0x039F1494 LDR X22, [X31]
	0x039F1498 STP X31, X31, [X31 + 0x20]
	0x039F149C STR X31, [X31 + 0x30]
	0x039F14A0 MOV X0, X22
	0x039F14A4 BL 0x39F5328
	0x039F14A8 MOVZ W8, 0x1
	0x039F14AC STRB W8, [X22 + 0x20]
	0x039F14B0 LDR X0, [X20]
	0x039F14B4 BL 0x1C16F10
	0x039F14B8 LDR X1, [X19]
	0x039F14BC MOV X20, X0
	0x039F14C0 BL 0x2F49774
	0x039F14C4 CBZ X21, 0x39F1724
	0x039F14C8 ADRP X8, 0x72B000
	0x039F14CC LDR X8, [X8 + 0x9A0]
	0x039F14D0 ADRP X27, 0x72B000
	0x039F14D4 ADRP X29, 0x762000
	0x039F14D8 ADRP X25, 0x72B000
	0x039F14DC ADRP X26, 0x760000
	0x039F14E0 ADRP X28, 0x72B000
	0x039F14E4 LDR X27, [X27 + 0x990]
	0x039F14E8 LDR X29, [X29 + 0x828]
	0x039F14EC LDR X25, [X25 + 0xD90]
	0x039F14F0 LDR X26, [X26 + 0x778]
	0x039F14F4 LDR X28, [X28 + 0xD98]
	0x039F14F8 LDR X1, [X8]
	0x039F14FC ADRP X19, 0x762000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9F1000
	007 Move W8, [X20+3680]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x763000
	014 Move X0, [X0+1800]
	015 Call 0x1C17CF4
	016 Move X0, 0x761000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3680], W8
	021 Move X0, [X19+40]
	022 Compare X0, 0
	023 JumpIfEqual {46}
	024 Move X21, 0x761000
	025 Move X21, [X21+1912]
	026 Move W20, W31
	027 Move W22, [X0+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X2, [X21]
	030 Move W1, W20
	031 Call List`1<Object>.get_Item, X0, X1
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, [X0]
	035 Move X9, [X8+392]
	036 Move X1, [X8+400]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {47}
	042 Move X0, [X19+40]
	043 Add W20, W20, 1
	044 Compare X0, 0
	045 JumpIfNotEqual {27}
	046 Call 0x1C17F20
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move X30, [X31+48]
	054 Return X0

Method: System.Void OnDestroy()

Disassembly:
	0x039F1500 LDR X19, [X19 + 0x830]

ISIL:
No ISIL was generated
Method: System.Void Release()

Disassembly:
	0x039F1504 ADD X8, X31, 0x8
	0x039F1508 MOV X0, X21
	0x039F150C BL 0x301CB58
	0x039F1510 LDUR V0, [X31 + 0x8]
	0x039F1514 LDR X8, [X31 + 0x18]
	0x039F1518 STR V0, [X31 + 0x2]
	0x039F151C STR X8, [X31 + 0x30]
	0x039F1520 LDR X1, [X27]
	0x039F1524 ADD X0, X31, 0x20
	0x039F1528 BL 0x2BC4350
	0x039F152C TBZ X0, 0x0, 0x39F16A8
	0x039F1530 LDR X21, [X31 + 0x30]
	0x039F1534 CBZ X21, 0x39F171C
	0x039F1538 MOV X0, X21
	0x039F153C MOV X1, X31
	0x039F1540 BL 0x33BE520
	0x039F1544 MOV X23, X0
	0x039F1548 MOV X1, X31
	0x039F154C BL 0x3C36DE8
	0x039F1550 MOV X22, X0
	0x039F1554 CBZ X0, 0x39F158C
	0x039F1558 ADRP X9, 0x760000
	0x039F155C LDR X8, [X22]
	0x039F1560 LDR X9, [X9 + 0x710]
	0x039F1564 LDRB W10, [X8 + 0x130]
	0x039F1568 LDR X1, [X9]
	0x039F156C LDRB W9, [X1 + 0x130]
	0x039F1570 CMP W10, W9
	0x039F1574 B.CC 0x39F1710
	0x039F1578 LDR X8, [X8 + 0xC8]
	0x039F157C ADD X8, X8, X9, 0x3, LSL
	0x039F1580 LDUR X8, [X8 - 0x8]
	0x039F1584 CMP X8, X1
	0x039F1588 B.NE 0x39F1710
	0x039F158C LDR X8, [X31]
	0x039F1590 LDR X0, [X8 + 0x10]
	0x039F1594 CBZ X0, 0x39F1720
	0x039F1598 LDR X3, [X29]
	0x039F159C MOV X1, X23
	0x039F15A0 MOV X2, X22
	0x039F15A4 BL 0x2AA5098
	0x039F15A8 CBZ X22, 0x39F1718

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9F1000
	006 Move W8, [X20+3681]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x763000
	013 Move X0, [X0+1800]
	014 Call 0x1C17CF4
	015 Move X0, 0x761000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3681], W8
	020 Move X0, [X19+40]
	021 Compare X0, 0
	022 JumpIfEqual {50}
	023 Move X21, 0x761000
	024 Move X21, [X21+1912]
	025 Move W20, W31
	026 Move W8, [X0+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X2, [X21]
	029 Move W1, W20
	030 Call List`1<Object>.get_Item, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {45}
	033 Move X0, [X19+40]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X2, [X21]
	037 Move W1, W20
	038 Call List`1<Object>.get_Item, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {49}
	041 Move X8, [X0]
	042 Move X9, [X8+488]
	043 Move X1, [X8+496]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X0, [X19+40]
	046 Add W20, W20, 1
	047 Compare X0, 0
	048 JumpIfNotEqual {26}
	049 Call 0x1C17F20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 

Method: System.Void .ctor()

Disassembly:
	0x039F15AC LDR X8, [X22 + 0x28]
	0x039F15B0 CBZ X8, 0x39F16A4
	0x039F15B4 MOV W23, W31
	0x039F15B8 LDR W8, [X8 + 0x18]
	0x039F15BC CMP W23, W8
	0x039F15C0 B.GE 0x39F1520
	0x039F15C4 MOV X0, X22
	0x039F15C8 BL 0x39EF348
	0x039F15CC CBZ X0, 0x39F1704
	0x039F15D0 LDR X2, [X25]
	0x039F15D4 MOV W1, W23
	0x039F15D8 BL 0x2551944
	0x039F15DC MOV X24, X0
	0x039F15E0 LDR X0, [X21 + 0x28]
	0x039F15E4 CBZ X0, 0x39F1700
	0x039F15E8 LDR X2, [X26]
	0x039F15EC MOV W1, W23
	0x039F15F0 BL 0x301BCCC
	0x039F15F4 CBZ X0, 0x39F1708
	0x039F15F8 LDR X8, [X0]
	0x039F15FC LDP X9, X1, [X8 + 0x1F8]
	0x039F1600 BLR X9
	0x039F1604 CBZ X0, 0x39F1620
	0x039F1608 LDR X9, [X0]
	0x039F160C LDR X8, [X28]
	0x039F1610 LDRB W11, [X9 + 0x130]
	0x039F1614 LDRB W10, [X8 + 0x130]
	0x039F1618 CMP W11, W10
	0x039F161C B.CS 0x39F162C
	0x039F1620 MOV X2, X31
	0x039F1624 CBNZ X20, 0x39F1644
	0x039F1628 B 0x39F170C
	0x039F162C LDR X9, [X9 + 0xC8]
	0x039F1630 ADD X9, X9, X10, 0x3, LSL
	0x039F1634 LDUR X9, [X9 - 0x8]
	0x039F1638 CMP X9, X8
	0x039F163C CSEL X2, X0, X31, EQ
	0x039F1640 CBZ X20, 0x39F170C
	0x039F1644 LDR W10, [X20 + 0x1C]
	0x039F1648 LDR X8, [X20 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9F1000
	008 Move X22, 0x703000
	009 Move X21, 0x763000
	010 Move X20, 0x763000
	011 Move W8, [X23+3682]
	012 Move X22, [X22+2440]
	013 Move X21, [X21+1840]
	014 Move X20, [X20+1848]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x763000
	021 Move X0, [X0+1848]
	022 Call 0x1C17CF4
	023 Move X0, 0x763000
	024 Move X0, [X0+1840]
	025 Call 0x1C17CF4
	026 Move X0, 0x703000
	027 Move X0, [X0+2440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3682], W8
	031 Move W8, 1
	032 Move [X19+24], W8
	033 Move X8, [X22]
	034 Move [X19+32], X8
	035 Move X0, [X21]
	036 Call 0x1C17F10
	037 Move X1, [X20]
	038 Move X20, X0
	039 Call List`1<Object>..ctor, X0
	040 Move [X19+40], X20
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call ScriptableObject..ctor, X0
	050 Return 

