Type: UnityEngine.Rendering.MeshGizmo

Method: System.Void .ctor(System.Int32 capacity = 0)

Disassembly:
	0x039ED240 BL 0x3C00D10
	0x039ED244 CBZ X20, 0x39ED2CC
	0x039ED248 MOV X1, X0
	0x039ED24C MOV X0, X20
	0x039ED250 MOV X2, X31
	0x039ED254 BL 0x3C00D88
	0x039ED258 LDR X0, [X19 + 0x28]
	0x039ED25C LDR V0, [X31 + 0xA]
	0x039ED260 LDUR V1, [X21 + 0x2C]
	0x039ED264 STR V0, [X31 + 0x6]
	0x039ED268 STUR V1, [X31 + 0x6C]
	0x039ED26C CBZ X0, 0x39ED2CC
	0x039ED270 LDR V0, [X31 + 0x6]
	0x039ED274 LDUR V1, [X31 + 0x6C]
	0x039ED278 ADD X1, X31, 0x40
	0x039ED27C MOV X2, X31
	0x039ED280 STR V0, [X31 + 0x4]
	0x039ED284 STUR V1, [X31 + 0x4C]
	0x039ED288 BL 0x3C00E64
	0x039ED28C LDR X0, [X19 + 0x28]
	0x039ED290 LDR V0, [X31 + 0x8]
	0x039ED294 LDUR V1, [X21 + 0xC]
	0x039ED298 STR V0, [X31 + 0x2]
	0x039ED29C STUR V1, [X31 + 0x2C]
	0x039ED2A0 CBZ X0, 0x39ED2CC
	0x039ED2A4 LDR V0, [X31 + 0x2]
	0x039ED2A8 LDUR V1, [X31 + 0x2C]
	0x039ED2AC ADD X1, X31, 0x0
	0x039ED2B0 MOV X2, X31
	0x039ED2B4 STR V0, [X31]
	0x039ED2B8 STUR V1, [X31 + 0xC]
	0x039ED2BC BL 0x3C00E64
	0x039ED2C0 STRB W31, [X19 + 0x38]
	0x039ED2C4 LDR X0, [X19 + 0x28]
	0x039ED2C8 CBNZ X0, 0x39ED2E8
	0x039ED2CC BL 0x1C16F20
	0x039ED2D0 LDR W0, [X19 + 0x10]
	0x039ED2D4 CBNZ W0, 0x39ED158
	0x039ED2D8 LDR V0, [X19 + 0x18]
	0x039ED2DC B 0x39ED2F4
	0x039ED2E0 LDR X0, [X19 + 0x20]
	0x039ED2E4 CBZ X0, 0x39ED2CC
	0x039ED2E8 MOV V0.16B, V8.16B
	0x039ED2EC MOV X1, X31
	0x039ED2F0 BL 0x3C00CC4
	0x039ED2F4 LDP X20, X19, [X31 + 0xE0]
	0x039ED2F8 LDP X30, X21, [X31 + 0xD0]
	0x039ED2FC LDR V8, [X31 + 0xC0]
	0x039ED300 ADD X31, X31, 0xF0
	0x039ED304 RET
	0x039ED308 STP X30, X19, [X31 - 0x10]!
	0x039ED30C MOV X19, X0
	0x039ED310 LDR X0, [X0 + 0x20]
	0x039ED314 CBZ X0, 0x39ED33C
	0x039ED318 MOV X1, X31
	0x039ED31C BL 0x3C00E10
	0x039ED320 TBNZ X0, 0x1F, 0x39ED330
	0x039ED324 MOVZ W8, 0x101
	0x039ED328 STRH W8, [X19 + 0x38]
	0x039ED32C B 0x39ED334
	0x039ED330 AND W0, W0, W0, 0x1F
	0x039ED334 LDP X30, X19, [X31], #0x10
	0x039ED338 RET
	0x039ED33C BL 0x1C16F20
	0x039ED340 SUB X31, X31, 0x50
	0x039ED344 STP X30, X19, [X31 + 0x40]
	0x039ED348 MOV X19, X0
	0x039ED34C LDR X0, [X0 + 0x20]
	0x039ED350 LDUR V0, [X2 + 0xC]
	0x039ED354 LDR V1, [X2]
	0x039ED358 STUR V0, [X31 + 0x2C]
	0x039ED35C STR V1, [X31 + 0x2]
	0x039ED360 CBZ X0, 0x39ED394
	0x039ED364 LDR V0, [X31 + 0x2]
	0x039ED368 LDUR V1, [X31 + 0x2C]
	0x039ED36C ADD X2, X31, 0x0
	0x039ED370 MOV X3, X31
	0x039ED374 STR V0, [X31]
	0x039ED378 STUR V1, [X31 + 0xC]
	0x039ED37C BL 0x3C00F48
	0x039ED380 MOVZ W8, 0x101
	0x039ED384 STRH W8, [X19 + 0x38]
	0x039ED388 LDP X30, X19, [X31 + 0x40]
	0x039ED38C ADD X31, X31, 0x50
	0x039ED390 RET
	0x039ED394 BL 0x1C16F20
	0x039ED398 STP X30, X19, [X31 - 0x10]!
	0x039ED39C MOV X19, X0
	0x039ED3A0 LDR X0, [X0 + 0x20]
	0x039ED3A4 CBZ X0, 0x39ED3C0
	0x039ED3A8 MOV X2, X31
	0x039ED3AC BL 0x3C0102C
	0x039ED3B0 MOVZ W8, 0x101
	0x039ED3B4 STRH W8, [X19 + 0x38]
	0x039ED3B8 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x9F5000
	013 Move X27, 0x70B000
	014 Move X21, 0x70B000
	015 Move X26, 0x708000
	016 Move X25, 0x708000
	017 Move X24, 0x761000
	018 Move X23, 0x767000
	019 Move X22, 0x70E000
	020 Move X27, [X27+960]
	021 Move X21, [X21+968]
	022 Move W8, [X28+3650]
	023 Move X26, [X26+3632]
	024 Move X25, [X25+3616]
	025 Move X24, [X24+3072]
	026 Move X23, [X23+1536]
	027 Move X22, [X22+1792]
	028 Move W20, W1
	029 Move X19, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {57}
	034 Move X0, 0x708000
	035 Move X0, [X0+3616]
	036 Call 0x1C17CF4
	037 Move X0, 0x70B000
	038 Move X0, [X0+968]
	039 Call 0x1C17CF4
	040 Move X0, 0x767000
	041 Move X0, [X0+1536]
	042 Call 0x1C17CF4
	043 Move X0, 0x708000
	044 Move X0, [X0+3632]
	045 Call 0x1C17CF4
	046 Move X0, 0x761000
	047 Move X0, [X0+3072]
	048 Call 0x1C17CF4
	049 Move X0, 0x70B000
	050 Move X0, [X0+960]
	051 Call 0x1C17CF4
	052 Move X0, 0x70E000
	053 Move X0, [X0+1792]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X28+3650], W8
	057 Move X0, X19
	058 Move X1, X31
	059 Call Object..ctor, X0
	060 Move X0, [X27]
	061 Call 0x1C17F10
	062 Move X2, [X21]
	063 Move W1, W20
	064 Move X21, X0
	065 Call List`1<Vector3>..ctor, X0, X1
	066 Move [X19+24], X21
	067 Move X0, [X26]
	068 Call 0x1C17F10
	069 Move X2, [X25]
	070 Move W1, W20
	071 Move X21, X0
	072 Call List`1<Int32>..ctor, X0, X1
	073 Move [X19+32], X21
	074 Move X0, [X24]
	075 Call 0x1C17F10
	076 Move X2, [X23]
	077 Move W1, W20
	078 Move X21, X0
	079 Call List`1<Color>..ctor, X0, X1
	080 Move [X19+40], X21
	081 Move X0, [X22]
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X20, X0
	085 Call Mesh..ctor, X0
	086 Compare X20, 0
	087 JumpIfEqual {109}
	088 Move W1, 1
	089 Move X0, X20
	090 Move X2, X31
	091 Call Mesh.set_indexFormat, X0, X1
	092 Move W1, 61
	093 Move X0, X20
	094 Move X2, X31
	095 Call Object.set_hideFlags, X0, X1
	096 Move [X19+16], X20
	097 Move X20, [X31+80]
	098 Move X19, [X31+88]
	099 Move X22, [X31+64]
	100 Move X21, [X31+72]
	101 Move X24, [X31+48]
	102 Move X23, [X31+56]
	103 Move X26, [X31+32]
	104 Move X25, [X31+40]
	105 Move X28, [X31+16]
	106 Move X27, [X31+24]
	107 Move X30, [X31+96]
	108 Return 
	109 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x039ED3BC RET
	0x039ED3C0 BL 0x1C16F20
	0x039ED3C4 STP X30, X19, [X31 - 0x10]!
	0x039ED3C8 MOV X19, X0
	0x039ED3CC LDR X0, [X0 + 0x20]
	0x039ED3D0 CBZ X0, 0x39ED3EC
	0x039ED3D4 MOV X2, X31
	0x039ED3D8 BL 0x3C01244
	0x039ED3DC MOVZ W8, 0x101
	0x039ED3E0 STRH W8, [X19 + 0x38]
	0x039ED3E4 LDP X30, X19, [X31], #0x10
	0x039ED3E8 RET
	0x039ED3EC BL 0x1C16F20
	0x039ED3F0 STP X30, X23, [X31 - 0x30]!
	0x039ED3F4 STP X22, X21, [X31 + 0x10]
	0x039ED3F8 STP X20, X19, [X31 + 0x20]
	0x039ED3FC ADRP X22, 0x9F4000
	0x039ED400 ADRP X23, 0x766000
	0x039ED404 LDRB W8, [X22 + 0xE4D]
	0x039ED408 LDR X23, [X23 + 0x630]
	0x039ED40C MOV W20, W2
	0x039ED410 MOV X19, X1
	0x039ED414 MOV X21, X0
	0x039ED418 TBNZ X8, 0x0, 0x39ED430
	0x039ED41C ADRP X0, 0x766000
	0x039ED420 LDR X0, [X0 + 0x630]
	0x039ED424 BL 0x1C16CF4
	0x039ED428 MOVZ W8, 0x1
	0x039ED42C STRB W8, [X22 + 0xE4D]
	0x039ED430 LDR X3, [X23]
	0x039ED434 AND W2, W20, 0x1
	0x039ED438 MOV X0, X21
	0x039ED43C MOV X1, X19
	0x039ED440 LDP X20, X19, [X31 + 0x20]
	0x039ED444 LDP X22, X21, [X31 + 0x10]
	0x039ED448 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9F5000
	005 Move W8, [X20+3651]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x70B000
	012 Move X0, [X0+896]
	013 Call 0x1C17CF4
	014 Move X0, 0x767000
	015 Move X0, [X0+1544]
	016 Call 0x1C17CF4
	017 Move X0, 0x70E000
	018 Move X0, [X0+2136]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3651], W8
	022 Move X8, [X19+24]
	023 Compare X8, 0
	024 JumpIfEqual {47}
	025 Move W9, [X8+28]
	026 Add W9, W9, 1
	027 Move [X8+24], W31
	028 Move [X8+28], W9
	029 Move X8, [X19+32]
	030 Compare X8, 0
	031 JumpIfEqual {47}
	032 Move W9, [X8+28]
	033 Add W9, W9, 1
	034 Move [X8+24], W31
	035 Move [X8+28], W9
	036 Move X8, [X19+40]
	037 Compare X8, 0
	038 JumpIfEqual {47}
	039 Move W9, [X8+28]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Add W9, W9, 1
	043 Move [X8+24], W31
	044 Move [X8+28], W9
	045 Move X30, [X31+32]
	046 Return 
	047 Call 0x1C17F20

Method: System.Void AddWireCube(UnityEngine.Vector3 center, UnityEngine.Vector3 size, UnityEngine.Color color)

Disassembly:
	0x039ED44C B 0x284B9B8
	0x039ED450 STR X30, [X31 - 0x10]!
	0x039ED454 LDR X0, [X0 + 0x18]
	0x039ED458 CBZ X0, 0x39ED464
	0x039ED45C LDR X30, [X31], #0x10
	0x039ED460 B 0x39ECE3C
	0x039ED464 BL 0x1C16F20
	0x039ED468 SBFM X10, X1, 0x20, 0x3F
	0x039ED46C SXTW X8, W1
	0x039ED470 CMP X10, W2, UXTW
	0x039ED474 MOV W9, W2
	0x039ED478 B.LT 0x39ED4C4
	0x039ED47C CMP X8, X9
	0x039ED480 B.LT 0x39ED4C4
	0x039ED484 UBFM X14, X1, 0x20, 0x3F
	0x039ED488 SDIV W12, W1, W2
	0x039ED48C SDIV W13, W14, W2
	0x039ED490 UBFM X11, X0, 0x20, 0x3F
	0x039ED494 MUL W17, W12, W2
	0x039ED498 MUL W13, W13, W2
	0x039ED49C SUB W12, W1, W17
	0x039ED4A0 ADD W15, W17, W0
	0x039ED4A4 SUB W14, W14, W13
	0x039ED4A8 ADD W16, W13, W11
	0x039ED4AC STP W0, W11, [X3]
	0x039ED4B0 STP W17, W13, [X3 + 0x8]
	0x039ED4B4 STP W0, W16, [X4]
	0x039ED4B8 STP W17, W14, [X4 + 0x8]
	0x039ED4BC STR W15, [X5]
	0x039ED4C0 B 0x39ED4E8
	0x039ED4C4 MOV W11, W31
	0x039ED4C8 MOV W13, W31
	0x039ED4CC MOV W15, W31
	0x039ED4D0 MOV W16, W31
	0x039ED4D4 MOV W12, W31
	0x039ED4D8 MOV W14, W31
	0x039ED4DC STP X31, X31, [X3]
	0x039ED4E0 STP X31, X31, [X4]
	0x039ED4E4 STR W31, [X5]
	0x039ED4E8 CMP X10, X9
	0x039ED4EC CSET W10, GE
	0x039ED4F0 CMP X8, X9
	0x039ED4F4 CSET W8, GE
	0x039ED4F8 AND W0, W10, W8, 0x0
	0x039ED4FC STP W11, W12, [X5 + 0x4]
	0x039ED500 STR W13, [X5 + 0xC]
	0x039ED504 STP W15, W16, [X6]
	0x039ED508 STP W12, W14, [X6 + 0x8]
	0x039ED50C RET
	0x039ED510 SBFM X8, X1, 0x20, 0x3F
	0x039ED514 CMP X8, W2, UXTW
	0x039ED518 MOV W9, W2
	0x039ED51C B.GE 0x39ED53C
	0x039ED520 MOV W10, W31
	0x039ED524 MOV W11, W31
	0x039ED528 MOV W0, W31
	0x039ED52C MOV W13, W31
	0x039ED530 MOV W1, W31
	0x039ED534 MOV W12, W31
	0x039ED538 B 0x39ED554
	0x039ED53C UBFM X12, X1, 0x20, 0x3F
	0x039ED540 SDIV W11, W12, W2
	0x039ED544 UBFM X10, X0, 0x20, 0x3F
	0x039ED548 MUL W11, W11, W2
	0x039ED54C SUB W12, W12, W11
	0x039ED550 ADD W13, W11, W10
	0x039ED554 CMP X8, X9
	0x039ED558 STP W0, W10, [X3]
	0x039ED55C STP W1, W11, [X3 + 0x8]
	0x039ED560 STP W0, W13, [X4]
	0x039ED564 CSET W0, GE
	0x039ED568 STP W1, W12, [X4 + 0x8]
	0x039ED56C RET
	0x039ED570 SXTW X8, W1
	0x039ED574 CMP X8, W2, UXTW
	0x039ED578 MOV W9, W2
	0x039ED57C B.GE 0x39ED59C
	0x039ED580 MOV W0, W31
	0x039ED584 MOV W12, W31
	0x039ED588 MOV W14, W31
	0x039ED58C MOV W11, W31
	0x039ED590 MOV W13, W31
	0x039ED594 MOV W10, W31
	0x039ED598 B 0x39ED5B4
	0x039ED59C SDIV W12, W1, W2
	0x039ED5A0 MUL W12, W12, W2
	0x039ED5A4 UBFM X10, X1, 0x20, 0x3F
	0x039ED5A8 UBFM X11, X0, 0x20, 0x3F
	0x039ED5AC SUB W13, W1, W12
	0x039ED5B0 ADD W14, W12, W0
	0x039ED5B4 CMP X8, X9
	0x039ED5B8 STP W0, W11, [X3]
	0x039ED5BC CSET W0, GE
	0x039ED5C0 STP W12, W10, [X3 + 0x8]
	0x039ED5C4 STP W14, W11, [X4]
	0x039ED5C8 STP W13, W10, [X4 + 0x8]
	0x039ED5CC RET
	0x039ED5D0 STP X30, X21, [X31 - 0x20]!
	0x039ED5D4 STP X20, X19, [X31 + 0x10]
	0x039ED5D8 MOV X19, X0
	0x039ED5DC MOV X0, X31
	0x039ED5E0 MOV W21, W2
	0x039ED5E4 MOV X20, X1
	0x039ED5E8 BL 0x39A0414
	0x039ED5EC TBZ X0, 0x0, 0x39ED648
	0x039ED5F0 CBZ X20, 0x39ED654
	0x039ED5F4 MOV X0, X20
	0x039ED5F8 MOV X1, X31
	0x039ED5FC BL 0x3C04848
	0x039ED600 TBZ X0, 0x0, 0x39ED648
	0x039ED604 TBZ X21, 0x0, 0x39ED648
	0x039ED608 MOV X0, X20
	0x039ED60C MOV X1, X31
	0x039ED610 BL 0x3C0403C
	0x039ED614 MOV W21, W0
	0x039ED618 MOV X0, X20
	0x039ED61C MOV X1, X31
	0x039ED620 BL 0x3C04078
	0x039ED624 CBZ X19, 0x39ED654
	0x039ED628 MOV W2, W21
	0x039ED62C BFM X2, X0, 0x20, 0x1F
	0x039ED630 MOV X0, X19
	0x039ED634 LDP X20, X19, [X31 + 0x10]
	0x039ED638 MOV X1, X31
	0x039ED63C MOV X3, X31
	0x039ED640 LDP X30, X21, [X31], #0x20
	0x039ED644 B 0x3C4F8BC
	0x039ED648 LDP X20, X19, [X31 + 0x10]
	0x039ED64C LDP X30, X21, [X31], #0x20
	0x039ED650 RET
	0x039ED654 BL 0x1C16F20
	0x039ED658 CBZ X0, 0x39ED664
	0x039ED65C MOV X1, X31
	0x039ED660 B 0x3C00FF0
	0x039ED664 STR X30, [X31 - 0x10]!
	0x039ED668 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X19
	012 Move V11, V1
	013 Move V1, [X31+7]
	014 Move V13, V2
	015 Move S2, 0.5
	016 Multiply S3, S3, S2
	017 Multiply S14, S4, S2
	018 Multiply S15, S5, S2
	019 Add S8, S0, S3
	020 Add S12, S11, S14
	021 Add S9, S13, S15
	022 Subtract S10, S0, S3
	023 Move [X31+16], V1
	024 Add X1, X31, 8
	025 Move V0, V8
	026 Move V1, V12
	027 Move V2, V9
	028 Move V3, V10
	029 Move V4, V12
	030 Move V5, V9
	031 Move X19, X0
	032 Move [X31+8], X0
	033 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	034 Subtract S11, S11, S14
	035 Add X1, X31, 8
	036 Move X0, X19
	037 Move V0, V10
	038 Move V1, V12
	039 Move V2, V9
	040 Move V3, V10
	041 Move V4, V11
	042 Move V5, V9
	043 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	044 Add X1, X31, 8
	045 Move X0, X19
	046 Move V0, V10
	047 Move V1, V11
	048 Move V2, V9
	049 Move V3, V8
	050 Move V4, V11
	051 Move V5, V9
	052 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	053 Add X1, X31, 8
	054 Move X0, X19
	055 Move V0, V8
	056 Move V1, V11
	057 Move V2, V9
	058 Move V3, V8
	059 Move V4, V12
	060 Move V5, V9
	061 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	062 Subtract S13, S13, S15
	063 Add X1, X31, 8
	064 Move X0, X19
	065 Move V0, V8
	066 Move V1, V12
	067 Move V2, V13
	068 Move V3, V10
	069 Move V4, V12
	070 Move V5, V13
	071 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	072 Add X1, X31, 8
	073 Move X0, X19
	074 Move V0, V10
	075 Move V1, V12
	076 Move V2, V13
	077 Move V3, V10
	078 Move V4, V11
	079 Move V5, V13
	080 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	081 Add X1, X31, 8
	082 Move X0, X19
	083 Move V0, V10
	084 Move V1, V11
	085 Move V2, V13
	086 Move V3, V8
	087 Move V4, V11
	088 Move V5, V13
	089 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	090 Add X1, X31, 8
	091 Move X0, X19
	092 Move V0, V8
	093 Move V1, V11
	094 Move V2, V13
	095 Move V3, V8
	096 Move V4, V12
	097 Move V5, V13
	098 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	099 Add X1, X31, 8
	100 Move X0, X19
	101 Move V0, V8
	102 Move V1, V12
	103 Move V2, V9
	104 Move V3, V8
	105 Move V4, V12
	106 Move V5, V13
	107 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	108 Add X1, X31, 8
	109 Move X0, X19
	110 Move V0, V10
	111 Move V1, V12
	112 Move V2, V9
	113 Move V3, V10
	114 Move V4, V12
	115 Move V5, V13
	116 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	117 Add X1, X31, 8
	118 Move X0, X19
	119 Move V0, V10
	120 Move V1, V11
	121 Move V2, V9
	122 Move V3, V10
	123 Move V4, V11
	124 Move V5, V13
	125 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	126 Add X1, X31, 8
	127 Move X0, X19
	128 Move V0, V8
	129 Move V1, V11
	130 Move V2, V9
	131 Move V3, V8
	132 Move V4, V11
	133 Move V5, V13
	134 Call MeshGizmo.<AddWireCube>g__AddEdge|10_0, X0, X1, X2, X3
	135 Move X30, [X31+96]
	136 Move X19, [X31+104]
	137 Move D9, [X31+80]
	138 Move D8, [X31+88]
	139 Move D11, [X31+64]
	140 Move D10, [X31+72]
	141 Move D13, [X31+48]
	142 Move D12, [X31+56]
	143 Move D15, [X31+32]
	144 Move D14, [X31+40]
	145 Add X31, X31, 112
	146 Return 

Method: System.Void DrawMesh(UnityEngine.Matrix4x4 trs, UnityEngine.Material mat, UnityEngine.MeshTopology topology, UnityEngine.Rendering.CompareFunction depthTest, System.String gizmoName)

Disassembly:
	0x039ED960 STP X31, X31, [X31 + 0x20]
	0x039ED964 STR W31, [X31 + 0x38]
	0x039ED968 STR X31, [X31 + 0x30]
	0x039ED96C MOV V8.16B, V0.16B
	0x039ED970 MOV X19, X8
	0x039ED974 LDR W8, [X0 + 0x18]
	0x039ED978 LDR X9, [X0 + 0x10]
	0x039ED97C LDR V0, [X0]
	0x039ED980 MOV X21, X1
	0x039ED984 MOV X22, X0
	0x039ED988 ADD X0, X31, 0x20
	0x039ED98C MOV X1, X31
	0x039ED990 MOV V10.16B, V1.16B
	0x039ED994 MOV W20, W2
	0x039ED998 STR W8, [X31 + 0x38]
	0x039ED99C STR X9, [X31 + 0x30]
	0x039ED9A0 STR V0, [X31 + 0x2]
	0x039ED9A4 BL 0x3C00A98
	0x039ED9A8 SUB W8, W21, 0x1
	0x039ED9AC MOVZ W9, 0x1C
	0x039ED9B0 SMADDL X23, X8, X9, X22
	0x039ED9B4 MOV V9.16B, V0.16B
	0x039ED9B8 LDR V0, [X23]
	0x039ED9BC LDR X8, [X23 + 0x10]
	0x039ED9C0 LDR W9, [X23 + 0x18]
	0x039ED9C4 ADD X0, X31, 0x20
	0x039ED9C8 MOV X1, X31
	0x039ED9CC STR V0, [X31 + 0x2]
	0x039ED9D0 STR X8, [X31 + 0x30]
	0x039ED9D4 STR W9, [X31 + 0x38]
	0x039ED9D8 BL 0x3C00A98
	0x039ED9DC LDR V1, [X22]
	0x039ED9E0 LDR X8, [X22 + 0x10]
	0x039ED9E4 LDR W9, [X22 + 0x18]
	0x039ED9E8 FCMP S0, S10
	0x039ED9EC ADD X0, X31, 0x20
	0x039ED9F0 MOV X1, X31
	0x039ED9F4 FCSEL S10, S10, S0, MI
	0x039ED9F8 STR V1, [X31 + 0x2]
	0x039ED9FC STR X8, [X31 + 0x30]
	0x039EDA00 STR W9, [X31 + 0x38]
	0x039EDA04 BL 0x3C00AA8
	0x039EDA08 MOV V11.16B, V0.16B
	0x039EDA0C LDR V0, [X23]
	0x039EDA10 LDR X8, [X23 + 0x10]
	0x039EDA14 LDR W9, [X23 + 0x18]
	0x039EDA18 ADD X0, X31, 0x20
	0x039EDA1C MOV X1, X31
	0x039EDA20 STR V0, [X31 + 0x2]
	0x039EDA24 STR X8, [X31 + 0x30]
	0x039EDA28 STR W9, [X31 + 0x38]
	0x039EDA2C BL 0x3C00AA8
	0x039EDA30 TBNZ X20, 0x1F, 0x39EDA64
	0x039EDA34 CMP W21, W20
	0x039EDA38 B.LE 0x39EDA80
	0x039EDA3C ADD X8, X31, 0x0
	0x039EDA40 MOV X0, X22
	0x039EDA44 MOV X1, X21
	0x039EDA48 MOV W2, W20
	0x039EDA4C BL 0x39ED828
	0x039EDA50 LDR V0, [X31]
	0x039EDA54 LDUR V1, [X31 + 0xC]
	0x039EDA58 STR V0, [X31 + 0x4]
	0x039EDA5C STUR V1, [X31 + 0x4C]
	0x039EDA60 B 0x39EDA9C
	0x039EDA64 FCMP S9, S8
	0x039EDA68 FCSEL S0, S8, S9, GT
	0x039EDA6C ADD X0, X31, 0x40
	0x039EDA70 FMOV S2, W31
	0x039EDA74 FMOV S3, W31
	0x039EDA78 MOV V1.16B, V11.16B
	0x039EDA7C B 0x39EDA94
	0x039EDA80 MOV V1.16B, V0.16B
	0x039EDA84 ADD X0, X31, 0x40
	0x039EDA88 FMOV S2, W31
	0x039EDA8C FMOV S3, W31
	0x039EDA90 MOV V0.16B, V10.16B
	0x039EDA94 MOV X1, X31
	0x039EDA98 BL 0x3C00A84
	0x039EDA9C LDUR V0, [X31 + 0x4C]
	0x039EDAA0 LDR V1, [X31 + 0x4]
	0x039EDAA4 LDP X22, X21, [X31 + 0x90]
	0x039EDAA8 LDP X30, X23, [X31 + 0x80]
	0x039EDAAC STUR V0, [X19 + 0xC]
	0x039EDAB0 STR V1, [X19]
	0x039EDAB4 LDP X20, X19, [X31 + 0xA0]
	0x039EDAB8 LDP D9, D8, [X31 + 0x70]
	0x039EDABC LDP D11, D10, [X31 + 0x60]
	0x039EDAC0 ADD X31, X31, 0xB0
	0x039EDAC4 RET
	0x039EDAC8 STP D13, D12, [X31 - 0x60]!
	0x039EDACC STP D11, D10, [X31 + 0x10]
	0x039EDAD0 STP D9, D8, [X31 + 0x20]
	0x039EDAD4 STR X30, [X31 + 0x30]
	0x039EDAD8 STP X22, X21, [X31 + 0x40]
	0x039EDADC STP X20, X19, [X31 + 0x50]
	0x039EDAE0 MOV X19, X1
	0x039EDAE4 MOV X20, X0
	0x039EDAE8 MOV X0, X2
	0x039EDAEC MOV X1, X31
	0x039EDAF0 MOV V8.16B, V0.16B
	0x039EDAF4 MOV X22, X3
	0x039EDAF8 MOV X21, X2
	0x039EDAFC BL 0x3C00A98
	0x039EDB00 MOV X0, X22
	0x039EDB04 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X25, 0x9F5000
	011 Move W8, [X25+3652]
	012 Move X22, X5
	013 Move W23, W4
	014 Move W24, W3
	015 Move X19, X2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x764000
	023 Move X0, [X0+3360]
	024 Call 0x1C17CF4
	025 Move X0, 0x70B000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move X0, 0x767000
	029 Move X0, [X0+1552]
	030 Call 0x1C17CF4
	031 Move X0, 0x767000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+3652], W8
	036 Move X0, [X21+16]
	037 Compare X0, 0
	038 JumpIfEqual {133}
	039 Move X1, X31
	040 Call Mesh.Clear, X0
	041 Move X0, [X21+16]
	042 Compare X0, 0
	043 JumpIfEqual {133}
	044 Move X1, [X21+24]
	045 Move X2, X31
	046 Call Mesh.SetVertices, X0, X1
	047 Move X0, [X21+16]
	048 Compare X0, 0
	049 JumpIfEqual {133}
	050 Move X1, [X21+40]
	051 Move X2, X31
	052 Call Mesh.SetColors, X0, X1
	053 Move X0, [X21+16]
	054 Compare X0, 0
	055 JumpIfEqual {133}
	056 Move X1, [X21+32]
	057 Move W4, 1
	058 Move W2, W24
	059 Move W3, W31
	060 Move W5, W31
	061 Move X6, X31
	062 Call Mesh.SetIndices, X0, X1, X2, X3, X4, X5
	063 Compare X19, 0
	064 JumpIfEqual {133}
	065 Move X8, 0x767000
	066 Move X8, [X8+1552]
	067 Move X24, 0x767000
	068 Move X25, 0x764000
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Move X1, [X8]
	071 Move X24, [X24+1560]
	072 Move X25, [X25+3360]
	073 Move X0, X19
	074 Move X2, X31
	075 Call Material.SetFloat, X0, X1, V0
	076 Move X0, [X25]
	077 Move X8, [X24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W9, [X0+224]
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X22
	085 Move X1, X31
	086 Call CommandBufferPool.Get, X0
	087 Move V0, [X20+32]
	088 Move V1, [X20+48]
	089 Move V2, [X20]
	090 Move V3, [X20+16]
	091 Move X1, [X21+16]
	092 Move [X31+96], V0
	093 Move [X31+104], V1
	094 Move [X31+64], V2
	095 Move [X31+72], V3
	096 Compare X0, 0
	097 JumpIfEqual {133}
	098 Move X20, 0x70B000
	099 Move X20, [X20+712]
	100 Move V0, [X31+64]
	101 Move V1, [X31+80]
	102 Move V2, [X31+96]
	103 Move V3, [X31+112]
	104 Add X2, X31, 0
	105 Move X3, X19
	106 Move W4, W31
	107 Move W5, W31
	108 Move X6, X31
	109 Move X22, X0
	110 Move [X31], V0
	111 Move [X31+8], V1
	112 Move [X31+32], V2
	113 Move [X31+40], V3
	114 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	115 Move X0, [X20]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X22
	121 Move X1, X31
	122 Call Graphics.ExecuteCommandBuffer, X0
	123 Move X20, [X31+176]
	124 Move X19, [X31+184]
	125 Move X22, [X31+160]
	126 Move X21, [X31+168]
	127 Move X24, [X31+144]
	128 Move X23, [X31+152]
	129 Move X30, [X31+128]
	130 Move X25, [X31+136]
	131 Add X31, X31, 192
	132 Return 
	133 Call 0x1C17F20

Method: System.Void RenderWireframe(UnityEngine.Matrix4x4 trs, UnityEngine.Rendering.CompareFunction depthTest = 4, System.String gizmoName = null)

Disassembly:
	0x039EDB08 MOV V9.16B, V0.16B
	0x039EDB0C BL 0x3C00A98
	0x039EDB10 FCMP S0, S8
	0x039EDB14 FCSEL S0, S0, S8, MI
	0x039EDB18 FCMP S9, S8
	0x039EDB1C MOV X0, X22
	0x039EDB20 MOV X1, X31
	0x039EDB24 FCSEL S10, S0, S9, LE
	0x039EDB28 BL 0x3C00A98
	0x039EDB2C MOV X0, X21
	0x039EDB30 MOV X1, X31
	0x039EDB34 MOV V8.16B, V0.16B
	0x039EDB38 BL 0x3C00A98
	0x039EDB3C ADRP X8, 0xFFFFFFFFFD0FC000
	0x039EDB40 LDR V1, [X8 + 0xF28]
	0x039EDB44 FSUB S0, S8, S0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move V1, [X1+32]
	004 Move V0, [X1+48]
	005 Move V3, [X1]
	006 Move V2, [X1+16]
	007 Move X5, X3
	008 Move W4, W2
	009 Move [X31+32], V1
	010 Move [X31+40], V0
	011 Move [X31], V3
	012 Move [X31+8], V2
	013 Move X8, [X0+48]
	014 Add X1, X31, 0
	015 Move W3, 3
	016 Move X2, X8
	017 Call MeshGizmo.DrawMesh, X0, X1, X2, X3, X4, X5
	018 Move X30, [X31+64]
	019 Add X31, X31, 80
	020 Return 

Method: System.Void Dispose()

Disassembly:
	0x039EDB48 MOV X0, X22
	0x039EDB4C MOV X1, X31
	0x039EDB50 FMAXNM S11, S0, S1
	0x039EDB54 BL 0x3C00AA8
	0x039EDB58 MOV X0, X21
	0x039EDB5C MOV X1, X31
	0x039EDB60 MOV V8.16B, V0.16B
	0x039EDB64 BL 0x3C00AA8
	0x039EDB68 FSUB S9, S8, S0
	0x039EDB6C FMOV S0, 1
	0x039EDB70 FDIV S12, S0, S11
	0x039EDB74 MOV X0, X21
	0x039EDB78 MOV X1, X31
	0x039EDB7C FMUL S13, S12, S12
	0x039EDB80 BL 0x3C00AC8
	0x039EDB84 MOV X0, X22
	0x039EDB88 MOV X1, X31
	0x039EDB8C MOV V8.16B, V0.16B
	0x039EDB90 BL 0x3C00AB8
	0x039EDB94 FMUL S1, S8, S11
	0x039EDB98 FMUL S0, S11, S0
	0x039EDB9C FADD S2, S9, S9
	0x039EDBA0 FADD S3, S1, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9F5000
	006 Move X20, 0x72F000
	007 Move W8, [X21+3653]
	008 Move X20, [X20+2296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x72F000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3653], W8
	019 Move X0, [X20]
	020 Move X19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call CoreUtils.Destroy, X0
	032 Return 

Method: System.Void .cctor()

Disassembly:
	0x039EDBA4 FADD S2, S9, S2
	0x039EDBA8 FSUB S3, S3, S9
	0x039EDBAC FSUB S2, S2, S1
	0x039EDBB0 FSUB S3, S3, S9
	0x039EDBB4 FSUB S1, S2, S1
	0x039EDBB8 FMUL S2, S13, S3
	0x039EDBBC FSUB S0, S1, S0
	0x039EDBC0 MOV X0, X21
	0x039EDBC4 MOV X1, X31
	0x039EDBC8 FMUL S12, S12, S2
	0x039EDBCC FMUL S13, S13, S0
	0x039EDBD0 BL 0x3C00AA8
	0x039EDBD4 MOV X0, X21
	0x039EDBD8 MOV X1, X31
	0x039EDBDC MOV V9.16B, V0.16B
	0x039EDBE0 BL 0x3C00A98
	0x039EDBE4 FSUB S0, S10, S0
	0x039EDBE8 FCMP S0, S11
	0x039EDBEC FMOV S1, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9F5000
	005 Move X20, 0x767000
	006 Move W8, [X19+3654]
	007 Move X20, [X20+1568]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x767000
	013 Move X0, [X0+1568]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3654], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 24
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void <AddWireCube>g__AddEdge|10_0(UnityEngine.Vector3 p1, UnityEngine.Vector3 p2, ref UnityEngine.Rendering.MeshGizmo/<>c__DisplayClass10_0 param_2)

Disassembly:
	0x039ED66C SUB X31, X31, 0x60
	0x039ED670 STR D10, [X31 + 0x20]
	0x039ED674 STP D9, D8, [X31 + 0x30]
	0x039ED678 STP X30, X21, [X31 + 0x40]
	0x039ED67C STP X20, X19, [X31 + 0x50]
	0x039ED680 MOV X21, X1
	0x039ED684 MOV X1, X31
	0x039ED688 MOV V8.16B, V0.16B
	0x039ED68C MOV X20, X0
	0x039ED690 MOV X19, X8
	0x039ED694 STP X31, X31, [X31]
	0x039ED698 STR W31, [X31 + 0x18]
	0x039ED69C STR X31, [X31 + 0x10]
	0x039ED6A0 BL 0x3C00A98
	0x039ED6A4 MOV X0, X21
	0x039ED6A8 MOV X1, X31
	0x039ED6AC MOV V9.16B, V0.16B
	0x039ED6B0 BL 0x3C00A98
	0x039ED6B4 FMOV S1, 1
	0x039ED6B8 FCMP S8, 0x0
	0x039ED6BC FMOV S2, W31
	0x039ED6C0 FMIN S1, S8, S1
	0x039ED6C4 FCSEL S10, S1, S2, PL
	0x039ED6C8 FSUB S0, S0, S9
	0x039ED6CC FMUL S0, S10, S0
	0x039ED6D0 FADD S0, S9, S0
	0x039ED6D4 ADD X0, X31, 0x0
	0x039ED6D8 MOV X1, X31
	0x039ED6DC BL 0x3C00AA0
	0x039ED6E0 MOV X0, X20
	0x039ED6E4 MOV X1, X31
	0x039ED6E8 BL 0x3C00AA8
	0x039ED6EC MOV X0, X21
	0x039ED6F0 MOV X1, X31
	0x039ED6F4 MOV V8.16B, V0.16B
	0x039ED6F8 BL 0x3C00AA8
	0x039ED6FC FSUB S0, S0, S8
	0x039ED700 FMUL S0, S10, S0
	0x039ED704 FADD S0, S8, S0
	0x039ED708 ADD X0, X31, 0x0
	0x039ED70C MOV X1, X31
	0x039ED710 BL 0x3C00AB0
	0x039ED714 MOV X0, X20
	0x039ED718 MOV X1, X31
	0x039ED71C BL 0x3C00AB8
	0x039ED720 MOV X0, X21
	0x039ED724 MOV X1, X31
	0x039ED728 MOV V8.16B, V0.16B
	0x039ED72C BL 0x3C00AB8
	0x039ED730 FSUB S0, S0, S8
	0x039ED734 FMUL S0, S10, S0
	0x039ED738 FADD S0, S8, S0
	0x039ED73C ADD X0, X31, 0x0
	0x039ED740 MOV X1, X31
	0x039ED744 BL 0x3C00AC0
	0x039ED748 MOV X0, X20
	0x039ED74C MOV X1, X31
	0x039ED750 BL 0x3C00AC8
	0x039ED754 MOV X0, X21
	0x039ED758 MOV X1, X31
	0x039ED75C MOV V8.16B, V0.16B
	0x039ED760 BL 0x3C00AC8
	0x039ED764 FSUB S0, S0, S8
	0x039ED768 FMUL S0, S10, S0
	0x039ED76C FADD S0, S8, S0
	0x039ED770 ADD X0, X31, 0x0
	0x039ED774 MOV X1, X31
	0x039ED778 BL 0x3C00AD0
	0x039ED77C MOV X0, X20
	0x039ED780 MOV X1, X31
	0x039ED784 BL 0x3C00AD8
	0x039ED788 MOV X0, X21
	0x039ED78C MOV X1, X31
	0x039ED790 MOV V8.16B, V0.16B
	0x039ED794 BL 0x3C00AD8
	0x039ED798 FSUB S0, S0, S8
	0x039ED79C FMUL S0, S10, S0
	0x039ED7A0 FADD S0, S8, S0
	0x039ED7A4 ADD X0, X31, 0x0
	0x039ED7A8 MOV X1, X31
	0x039ED7AC BL 0x3C00AE0
	0x039ED7B0 MOV X0, X20
	0x039ED7B4 MOV X1, X31
	0x039ED7B8 BL 0x3C00AE8
	0x039ED7BC MOV X0, X21
	0x039ED7C0 MOV X1, X31
	0x039ED7C4 MOV V8.16B, V0.16B
	0x039ED7C8 BL 0x3C00AE8
	0x039ED7CC FSUB S0, S0, S8
	0x039ED7D0 FMUL S0, S10, S0
	0x039ED7D4 FADD S0, S8, S0
	0x039ED7D8 ADD X0, X31, 0x0
	0x039ED7DC MOV X1, X31
	0x039ED7E0 BL 0x3C00AF0
	0x039ED7E4 MOV X0, X20
	0x039ED7E8 MOV X1, X31
	0x039ED7EC BL 0x3C00AF8
	0x039ED7F0 MOV W1, W0
	0x039ED7F4 ADD X0, X31, 0x0
	0x039ED7F8 MOV X2, X31
	0x039ED7FC BL 0x3C00B00
	0x039ED800 LDUR V0, [X31 + 0xC]
	0x039ED804 LDR V1, [X31]
	0x039ED808 LDP X30, X21, [X31 + 0x40]
	0x039ED80C LDP D9, D8, [X31 + 0x30]
	0x039ED810 STUR V0, [X19 + 0xC]
	0x039ED814 STR V1, [X19]
	0x039ED818 LDP X20, X19, [X31 + 0x50]
	0x039ED81C LDR V10, [X31 + 0x20]
	0x039ED820 ADD X31, X31, 0x60
	0x039ED824 RET
	0x039ED828 SUB X31, X31, 0x50
	0x039ED82C STP X30, X23, [X31 + 0x20]
	0x039ED830 STP X22, X21, [X31 + 0x30]
	0x039ED834 STP X20, X19, [X31 + 0x40]
	0x039ED838 ADRP X23, 0x9F4000
	0x039ED83C LDRB W9, [X23 + 0xE4E]
	0x039ED840 MOV W20, W2
	0x039ED844 MOV X22, X1
	0x039ED848 MOV X21, X0
	0x039ED84C MOV X19, X8
	0x039ED850 TBNZ X9, 0x0, 0x39ED874
	0x039ED854 ADRP X0, 0x706000
	0x039ED858 LDR X0, [X0 + 0xA28]
	0x039ED85C BL 0x1C16CF4
	0x039ED860 ADRP X0, 0x766000
	0x039ED864 LDR X0, [X0 + 0x638]
	0x039ED868 BL 0x1C16CF4
	0x039ED86C MOVZ W8, 0x1
	0x039ED870 STRB W8, [X23 + 0xE4E]
	0x039ED874 STP X31, X31, [X31]
	0x039ED878 STR W31, [X31 + 0x18]
	0x039ED87C STR X31, [X31 + 0x10]
	0x039ED880 TBNZ X20, 0x1F, 0x39ED8F0
	0x039ED884 SUB W22, W22, 0x1
	0x039ED888 CMP W22, W20
	0x039ED88C B.LT 0x39ED8F0
	0x039ED890 MOVZ W8, 0x1C
	0x039ED894 UMADDL X8, X20, X8, X21
	0x039ED898 LDR W9, [X8 + 0x18]
	0x039ED89C LDR X10, [X8 + 0x10]
	0x039ED8A0 LDR V0, [X8]
	0x039ED8A4 STR W9, [X31 + 0x18]
	0x039ED8A8 STR X10, [X31 + 0x10]
	0x039ED8AC STR V0, [X31]
	0x039ED8B0 CBNZ W20, 0x39ED8C4
	0x039ED8B4 ADD X0, X31, 0x0
	0x039ED8B8 FMOV S0, W31
	0x039ED8BC MOV X1, X31
	0x039ED8C0 BL 0x3C00AC0
	0x039ED8C4 CMP W22, W20
	0x039ED8C8 B.NE 0x39ED8DC
	0x039ED8CC ADD X0, X31, 0x0
	0x039ED8D0 FMOV S0, W31
	0x039ED8D4 MOV X1, X31
	0x039ED8D8 BL 0x3C00AD0
	0x039ED8DC LDUR V0, [X31 + 0xC]
	0x039ED8E0 LDR V1, [X31]
	0x039ED8E4 STUR V0, [X19 + 0xC]
	0x039ED8E8 STR V1, [X19]
	0x039ED8EC B 0x39ED928
	0x039ED8F0 ADRP X8, 0x706000
	0x039ED8F4 LDR X8, [X8 + 0xA28]
	0x039ED8F8 ADRP X20, 0x766000
	0x039ED8FC LDR X0, [X8]
	0x039ED900 LDR W8, [X0 + 0xE0]
	0x039ED904 LDR X20, [X20 + 0x638]
	0x039ED908 CBNZ W8, 0x39ED910
	0x039ED90C BL 0x1C16DFC
	0x039ED910 LDR X0, [X20]
	0x039ED914 MOV X1, X31
	0x039ED918 BL 0x3C06A04
	0x039ED91C STP X31, X31, [X19]
	0x039ED920 STR W31, [X19 + 0x18]
	0x039ED924 STR X31, [X19 + 0x10]
	0x039ED928 LDP X20, X19, [X31 + 0x40]
	0x039ED92C LDP X22, X21, [X31 + 0x30]
	0x039ED930 LDP X30, X23, [X31 + 0x20]
	0x039ED934 ADD X31, X31, 0x50
	0x039ED938 RET
	0x039ED93C SUB X31, X31, 0xB0
	0x039ED940 STP D11, D10, [X31 + 0x60]
	0x039ED944 STP D9, D8, [X31 + 0x70]
	0x039ED948 STP X30, X23, [X31 + 0x80]
	0x039ED94C STP X22, X21, [X31 + 0x90]
	0x039ED950 STP X20, X19, [X31 + 0xA0]
	0x039ED954 STP X31, X31, [X31 + 0x40]
	0x039ED958 STR W31, [X31 + 0x58]
	0x039ED95C STR X31, [X31 + 0x50]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x9F5000
	012 Move W8, [X21+3655]
	013 Move X19, X1
	014 Move V8, V5
	015 Move V9, V4
	016 Move V10, V3
	017 Move V11, V2
	018 Move V12, V1
	019 Move V13, V0
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x708000
	026 Move X0, [X0+3600]
	027 Call 0x1C17CF4
	028 Move X0, 0x761000
	029 Move X0, [X0+3088]
	030 Call 0x1C17CF4
	031 Move X0, 0x70B000
	032 Move X0, [X0+952]
	033 Call 0x1C17CF4
	034 Move X0, 0x708000
	035 Move X0, [X0+3624]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+3655], W8
	039 Move X0, [X20+24]
	040 Compare X0, 0
	041 JumpIfEqual {221}
	042 Move X21, 0x70B000
	043 Move X21, [X21+952]
	044 Move W10, [X0+28]
	045 Move X8, [X0+16]
	046 Move X9, [X21]
	047 Add W10, W10, 1
	048 Move [X0+28], W10
	049 Compare X8, 0
	050 JumpIfEqual {221}
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Move W11, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W11, 12
	055 Add W9, W10, 1
	056 NotImplemented "Instruction MADD not yet implemented."
	057 Move [X0+24], W9
	058 Move [X8+32], S13
	059 Move [X8+40], S12
	060 Move [X8+40], S11
	061 Move X8, [X9+32]
	062 Move V0, V13
	063 Move V1, V12
	064 Move V2, V11
	065 Move X8, [X8+192]
	066 Move X1, [X8+112]
	067 Call List`1<Vector3>.AddWithResize, X0, X1
	068 Move X0, [X20+24]
	069 Compare X0, 0
	070 JumpIfEqual {221}
	071 Move W10, [X0+28]
	072 Move X8, [X0+16]
	073 Move X9, [X21]
	074 Add W10, W10, 1
	075 Move [X0+28], W10
	076 Compare X8, 0
	077 JumpIfEqual {221}
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Move W11, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W11, 12
	082 Add W9, W10, 1
	083 NotImplemented "Instruction MADD not yet implemented."
	084 Move [X0+24], W9
	085 Move [X8+32], S10
	086 Move [X8+40], S9
	087 Move [X8+40], S8
	088 Move X8, [X9+32]
	089 Move V0, V10
	090 Move V1, V9
	091 Move V2, V8
	092 Move X8, [X8+192]
	093 Move X1, [X8+112]
	094 Call List`1<Vector3>.AddWithResize, X0, X1
	095 Move X0, [X20+32]
	096 Compare X0, 0
	097 JumpIfEqual {221}
	098 Move X21, 0x708000
	099 Move X21, [X21+3600]
	100 Move W1, [X0+24]
	101 Move W10, [X0+28]
	102 Move X8, [X0+16]
	103 Move X9, [X21]
	104 Add W10, W10, 1
	105 Move [X0+28], W10
	106 Compare X8, 0
	107 JumpIfEqual {221}
	108 Move W10, [X8+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X9, W1
	111 Add W10, W1, 1
	112 Add X8, X8, X9
	113 Move [X0+24], W10
	114 Move [X8+32], W1
	115 Move X8, [X9+32]
	116 Move X8, [X8+192]
	117 Move X2, [X8+112]
	118 Call List`1<Int32>.AddWithResize, X0, X1
	119 Move X0, [X20+32]
	120 Compare X0, 0
	121 JumpIfEqual {221}
	122 Move W1, [X0+24]
	123 Move W10, [X0+28]
	124 Move X8, [X0+16]
	125 Move X9, [X21]
	126 Add W10, W10, 1
	127 Move [X0+28], W10
	128 Compare X8, 0
	129 JumpIfEqual {221}
	130 Move W10, [X8+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X9, W1
	133 Add W10, W1, 1
	134 Add X8, X8, X9
	135 Move [X0+24], W10
	136 Move [X8+32], W1
	137 Move X8, [X9+32]
	138 Move X8, [X8+192]
	139 Move X2, [X8+112]
	140 Call List`1<Int32>.AddWithResize, X0, X1
	141 Move X0, [X20+40]
	142 Compare X0, 0
	143 JumpIfEqual {221}
	144 Move X21, 0x761000
	145 Move X21, [X21+3088]
	146 Move W10, [X0+28]
	147 Move S0, [X19+8]
	148 Move S1, [X19+12]
	149 Move S2, [X19+16]
	150 Move S3, [X19+20]
	151 Move X9, [X0+16]
	152 Move X8, [X21]
	153 Add W10, W10, 1
	154 Move [X0+28], W10
	155 Compare X9, 0
	156 JumpIfEqual {221}
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Move W11, [X9+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add W8, W10, 1
	161 Add X9, X9, X10
	162 Move [X0+24], W8
	163 Move [X9+32], S0
	164 Move [X9+40], S1
	165 Move [X9+40], S2
	166 Move [X9+48], S3
	167 Move X8, [X8+32]
	168 Move X8, [X8+192]
	169 Move X1, [X8+112]
	170 Call List`1<Color>.AddWithResize, X0, X1
	171 Move X0, [X20+40]
	172 Compare X0, 0
	173 JumpIfEqual {221}
	174 Move W10, [X0+28]
	175 Move S0, [X19+8]
	176 Move S1, [X19+12]
	177 Move S2, [X19+16]
	178 Move S3, [X19+20]
	179 Move X9, [X0+16]
	180 Move X8, [X21]
	181 Add W10, W10, 1
	182 Move [X0+28], W10
	183 Compare X9, 0
	184 JumpIfEqual {221}
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move W11, [X9+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X20, [X31+64]
	189 Move X19, [X31+72]
	190 Move X30, [X31+48]
	191 Move X21, [X31+56]
	192 Move D9, [X31+32]
	193 Move D8, [X31+40]
	194 Move D11, [X31+16]
	195 Move D10, [X31+24]
	196 Add W8, W10, 1
	197 Add X9, X9, X10
	198 Move [X0+24], W8
	199 Move [X9+32], S0
	200 Move [X9+40], S1
	201 Move [X9+40], S2
	202 Move [X9+48], S3
	203 Move D13, [X31+80]
	204 Move D12, [X31+88]
	205 Return 
	206 Move X8, [X8+32]
	207 Move X20, [X31+64]
	208 Move X19, [X31+72]
	209 Move X30, [X31+48]
	210 Move X21, [X31+56]
	211 Move D9, [X31+32]
	212 Move D8, [X31+40]
	213 Move X8, [X8+192]
	214 Move D11, [X31+16]
	215 Move D10, [X31+24]
	216 Move X1, [X8+112]
	217 Move D13, [X31+80]
	218 Move D12, [X31+88]
	219 Call List`1<Color>.AddWithResize, X0, X1
	220 Return 
	221 Call 0x1C17F20

