Type: UnityEngine.Rendering.PowerOfTwoTextureAtlas

Method: System.Void .ctor(System.Int32 size, System.Int32 mipPadding, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.FilterMode filterMode = 0, System.String name = , System.Boolean useMipMap = True)

Disassembly:
	0x039D3F24 LDR X0, [X0 + 0x70]
	0x039D3F28 BL 0x1C16CF4
	0x039D3F2C ADRP X0, 0x780000
	0x039D3F30 LDR X0, [X0 + 0x8]
	0x039D3F34 BL 0x1C16CF4
	0x039D3F38 ADRP X0, 0x780000
	0x039D3F3C LDR X0, [X0]
	0x039D3F40 BL 0x1C16CF4
	0x039D3F44 ADRP X0, 0x780000
	0x039D3F48 LDR X0, [X0 + 0x78]
	0x039D3F4C BL 0x1C16CF4
	0x039D3F50 ADRP X0, 0x780000
	0x039D3F54 LDR X0, [X0 + 0x80]
	0x039D3F58 BL 0x1C16CF4
	0x039D3F5C ADRP X0, 0x780000
	0x039D3F60 LDR X0, [X0 + 0x88]
	0x039D3F64 BL 0x1C16CF4
	0x039D3F68 MOVZ W8, 0x1
	0x039D3F6C STRB W8, [X22 + 0xD29]
	0x039D3F70 LDR X0, [X21]
	0x039D3F74 MOVI V0.2D, 0x0
	0x039D3F78 STP X31, X31, [X31 + 0x80]
	0x039D3F7C STP V0, V0, [X31 + 0x60]
	0x039D3F80 STP V0, V0, [X31 + 0x30]
	0x039D3F84 BL 0x1C16F10
	0x039D3F88 LDR X1, [X20]
	0x039D3F8C MOV X20, X0
	0x039D3F90 BL 0x2F43A1C
	0x039D3F94 LDR X0, [X19 + 0x50]
	0x039D3F98 CBZ X0, 0x39D41FC
	0x039D3F9C ADRP X8, 0x780000
	0x039D3FA0 LDR X8, [X8 + 0x18]
	0x039D3FA4 ADRP X22, 0x780000
	0x039D3FA8 ADRP X28, 0x780000
	0x039D3FAC ADRP X29, 0x780000
	0x039D3FB0 ADRP X27, 0x780000
	0x039D3FB4 ADRP X26, 0x780000
	0x039D3FB8 ADRP X25, 0x780000
	0x039D3FBC LDR X22, [X22 + 0x30]
	0x039D3FC0 LDR X28, [X28 + 0x88]
	0x039D3FC4 LDR X29, [X29 + 0x60]
	0x039D3FC8 LDR X27, [X27 + 0x80]
	0x039D3FCC LDR X26, [X26 + 0x70]
	0x039D3FD0 LDR X25, [X25 + 0x68]
	0x039D3FD4 LDR X1, [X8]
	0x039D3FD8 ADRP X24, 0x780000
	0x039D3FDC ADRP X21, 0x780000
	0x039D3FE0 LDR X24, [X24 + 0x38]
	0x039D3FE4 LDR X21, [X21 + 0x28]
	0x039D3FE8 ADD X8, X31, 0x10
	0x039D3FEC BL 0x2A26100
	0x039D3FF0 LDP V0, V1, [X31 + 0x10]
	0x039D3FF4 MOVZ W23, 0xC
	0x039D3FF8 STP V0, V1, [X31 + 0x60]
	0x039D3FFC LDR X1, [X22]
	0x039D4000 ADD X0, X31, 0x60
	0x039D4004 BL 0x2BF8C14
	0x039D4008 TBZ X0, 0x0, 0x39D4098
	0x039D400C LDR X1, [X31 + 0x70]
	0x039D4010 LDR W8, [X31 + 0x78]
	0x039D4014 LDR X3, [X28]
	0x039D4018 STR W31, [X31 + 0x18]
	0x039D401C STR X1, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X28, 0xA0F000
	015 Move X29, 0x780000
	016 Move X26, 0x780000
	017 Move X27, 0x780000
	018 Move W8, [X28+3364]
	019 Move X29, [X29+4032]
	020 Move X26, [X26+4040]
	021 Move X27, [X27+4048]
	022 Move W25, W6
	023 Move X19, X5
	024 Move W21, W4
	025 Move W23, W3
	026 Move W20, W2
	027 Move W24, W1
	028 Move X22, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {44}
	033 Move X0, 0x780000
	034 Move X0, [X0+4040]
	035 Call 0x1C17CF4
	036 Move X0, 0x780000
	037 Move X0, [X0+4032]
	038 Call 0x1C17CF4
	039 Move X0, 0x780000
	040 Move X0, [X0+4048]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X28+3364], W8
	044 Move X0, [X29]
	045 Call 0x1C17F10
	046 Move X1, [X26]
	047 Move X26, X0
	048 Call Dictionary`2<Int32, Vector2Int>..ctor, X0
	049 Move [X22+80], X26
	050 Move X0, [X27]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 And W7, W25, 1
	056 Move W5, 1
	057 Move X0, X22
	058 Move W1, W24
	059 Move W2, W24
	060 Move W3, W23
	061 Move W4, W21
	062 Move X6, X19
	063 Move [X31], X31
	064 Call Texture2DAtlas..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	065 Move [X22+72], W20
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X24, [X31+64]
	071 Move X23, [X31+72]
	072 Move X26, [X31+48]
	073 Move X25, [X31+56]
	074 Move X28, [X31+32]
	075 Move X27, [X31+40]
	076 Move X29, [X31+16]
	077 Move X30, [X31+24]
	078 Add X31, X31, 112
	079 Return 

Method: System.Int32 get_mipPadding()

Disassembly:
	0x039D4020 STR W8, [X31 + 0x58]
	0x039D4024 LDUR X2, [X31 + 0x54]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Int32 GetTexturePadding()

Disassembly:
	0x039D4028 STR X31, [X31 + 0x10]
	0x039D402C ADD X0, X31, 0x10
	0x039D4030 BL 0x27A153C
	0x039D4034 CBZ X20, 0x39D41F4
	0x039D4038 LDR W10, [X20 + 0x1C]
	0x039D403C LDR X1, [X31 + 0x10]
	0x039D4040 LDR W2, [X31 + 0x18]
	0x039D4044 LDR X8, [X20 + 0x10]
	0x039D4048 LDR X9, [X29]
	0x039D404C ADD W10, W10, 0x1
	0x039D4050 STR W10, [X20 + 0x1C]
	0x039D4054 CBZ X8, 0x39D41F8

ISIL:
	001 Move [X31-16], X30
	002 Move W0, [X0+72]
	003 Move S0, 1
	004 Call 0x3EB2B60
	005 Move W9, 0x7F800000
	006 NotImplemented "Instruction FCVTZS not yet implemented."
	007 Move S1, W9
	008 Move W8, W8
	009 ShiftRight W8, 31
	010 And W8, W8, 0x3FFFFFFF
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0

Method: UnityEngine.Vector4 GetPayloadScaleOffset(UnityEngine.Texture texture, in UnityEngine.Vector4 scaleOffset)

Disassembly:
	0x039D4058 LDRSW X10, [X20 + 0x18]
	0x039D405C LDR W11, [X8 + 0x18]
	0x039D4060 CMP W10, W11
	0x039D4064 B.CS 0x39D4080
	0x039D4068 ADD W9, W10, 0x1
	0x039D406C MADD X8, X10, X23, X8
	0x039D4070 STR W9, [X20 + 0x18]
	0x039D4074 STR X1, [X8 + 0x20]
	0x039D4078 STR W2, [X8 + 0x28]
	0x039D407C B 0x39D3FFC
	0x039D4080 LDR X8, [X9 + 0x20]
	0x039D4084 LDR X8, [X8 + 0xC0]
	0x039D4088 LDR X3, [X8 + 0x70]
	0x039D408C MOV X0, X20
	0x039D4090 BL 0x2F4424C
	0x039D4094 B 0x39D3FFC
	0x039D4098 LDR X1, [X21]
	0x039D409C ADD X0, X31, 0x60
	0x039D40A0 BL 0x2BF8D40
	0x039D40A4 MOV X0, X19
	0x039D40A8 MOV X1, X31
	0x039D40AC BL 0x39D90C4
	0x039D40B0 LDR X0, [X27]
	0x039D40B4 LDR W8, [X0 + 0xE0]
	0x039D40B8 CBNZ W8, 0x39D40C4
	0x039D40BC BL 0x1C16DFC
	0x039D40C0 LDR X0, [X27]
	0x039D40C4 LDR X8, [X0 + 0xB8]
	0x039D40C8 LDR X21, [X8 + 0x8]
	0x039D40CC CBNZ X21, 0x39D4120
	0x039D40D0 LDR W8, [X0 + 0xE0]
	0x039D40D4 CBNZ W8, 0x39D40E0
	0x039D40D8 BL 0x1C16DFC
	0x039D40DC LDR X0, [X27]
	0x039D40E0 ADRP X9, 0x77F000
	0x039D40E4 LDR X8, [X0 + 0xB8]
	0x039D40E8 LDR X9, [X9 + 0x10]
	0x039D40EC LDR X22, [X8]
	0x039D40F0 LDR X0, [X9]
	0x039D40F4 BL 0x1C16F10
	0x039D40F8 ADRP X8, 0x77F000
	0x039D40FC LDR X8, [X8 + 0x78]
	0x039D4100 MOV X1, X22
	0x039D4104 MOV X3, X31
	0x039D4108 MOV X21, X0
	0x039D410C LDR X2, [X8]
	0x039D4110 BL 0x29572DC
	0x039D4114 LDR X8, [X27]
	0x039D4118 LDR X8, [X8 + 0xB8]
	0x039D411C STR X21, [X8 + 0x8]
	0x039D4120 CBZ X20, 0x39D41FC
	0x039D4124 LDR X2, [X26]
	0x039D4128 MOV X0, X20

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X0
	008 Move W0, [X0+72]
	009 Move S0, 1
	010 Move X19, X2
	011 Move X21, X1
	012 Call 0x3EB2B60
	013 Move X22, 0xA0E000
	014 Move W8, [X22+2632]
	015 Move V8, V0
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x728000
	019 Move X0, [X0+3848]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2632], W8
	023 Move X8, 0x728000
	024 Move X8, [X8+3848]
	025 NotImplemented "Instruction FCVTZS not yet implemented."
	026 Move W10, 0x7F800000
	027 Move W9, W9
	028 ShiftRight W9, 31
	029 And W9, W9, 0x3FFFFFFF
	030 Move X8, [X8]
	031 Move S2, W10
	032 NotImplemented "Instruction SCVTF not yet implemented."
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move X8, [X8+184]
	035 Move S2, W31
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 Move X0, X20
	038 Move V0, [X8+8]
	039 Move X1, X21
	040 NotImplemented "Instruction INVALID not yet implemented."
	041 Call PowerOfTwoTextureAtlas.GetPowerOfTwoTextureSize, X0, X1
	042 Move D2, [X19]
	043 Move D3, [X19+8]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move V0.S[1], V1.S[0]
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 Add V4, V8, V0
	048 NotImplemented "Instruction INVALID not yet implemented."
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+8]
	054 NotImplemented "Instruction INVALID not yet implemented."
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 NotImplemented "Instruction INVALID not yet implemented."
	057 Add V2, V3, V1
	058 Move S1, V0.S[1]
	059 Move S3, V2.S[1]
	060 Move V8, [X31+48]
	061 Return X0

Method: UnityEngine.Vector4 GetPayloadScaleOffset(in UnityEngine.Vector2 textureSize, in UnityEngine.Vector2 paddingSize, in UnityEngine.Vector4 scaleOffset)

Disassembly:
	0x039D4198 LDR X8, [X19]
	0x039D419C LDP W1, W2, [X31 + 0x40]
	0x039D41A0 LDR W3, [X31 + 0x48]
	0x039D41A4 LDP X9, X5, [X8 + 0x1B8]
	0x039D41A8 ADD X4, X31, 0x80
	0x039D41AC MOV X0, X19
	0x039D41B0 BLR X9
	0x039D41B4 AND W21, W21, W0, 0x0
	0x039D41B8 B 0x39D4188
	0x039D41BC ADRP X8, 0x77F000
	0x039D41C0 LDR X8, [X8 + 0x20]
	0x039D41C4 ADD X0, X31, 0x30
	0x039D41C8 LDR X1, [X8]
	0x039D41CC BL 0x2BB37FC

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X1]
	003 Move D2, [X2]
	004 Move D3, [X2+8]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add V5, V0, V1
	007 NotImplemented "Instruction INVALID not yet implemented."
	008 NotImplemented "Instruction INVALID not yet implemented."
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction INVALID not yet implemented."
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 Add V2, V3, V1
	013 Move S1, V0.S[1]
	014 Move S3, V2.S[1]
	015 Return X0

Method: System.Void Blit2DTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips, UnityEngine.Rendering.PowerOfTwoTextureAtlas/BlitType blitType)

Disassembly:
	0x039D41D0 AND W0, W21, 0x1
	0x039D41D4 LDP X20, X19, [X31 + 0xE0]
	0x039D41D8 LDP X22, X21, [X31 + 0xD0]
	0x039D41DC LDP X24, X23, [X31 + 0xC0]
	0x039D41E0 LDP X26, X25, [X31 + 0xB0]
	0x039D41E4 LDP X28, X27, [X31 + 0xA0]
	0x039D41E8 LDP X29, X30, [X31 + 0x90]
	0x039D41EC ADD X31, X31, 0xF0
	0x039D41F0 RET
	0x039D41F4 BL 0x1C16F20
	0x039D41F8 BL 0x1C16F20
	0x039D41FC BL 0x1C16F20
	0x039D4200 B 0x39D4208
	0x039D4204 B 0x39D4274
	0x039D4208 MOV X19, X0
	0x039D420C CMP W1, 0x1
	0x039D4210 B.NE 0x39D4244
	0x039D4214 MOV X0, X19
	0x039D4218 BL 0x3EB1AD0
	0x039D421C LDR X20, [X0]
	0x039D4220 BL 0x3EB1AE0
	0x039D4224 ADRP X8, 0x77F000
	0x039D4228 LDR X8, [X8 + 0x20]
	0x039D422C ADD X0, X31, 0x30
	0x039D4230 LDR X1, [X8]
	0x039D4234 BL 0x2BB37FC
	0x039D4238 CBZ X20, 0x39D41D0
	0x039D423C MOV X0, X20
	0x039D4240 BL 0x1C16F18
	0x039D4244 MOV X20, X31
	0x039D4248 B 0x39D4250
	0x039D424C MOV X19, X0
	0x039D4250 ADRP X8, 0x77F000
	0x039D4254 LDR X8, [X8 + 0x20]
	0x039D4258 LDR X1, [X8]
	0x039D425C ADD X0, X31, 0x30
	0x039D4260 BL 0x2BB37FC
	0x039D4264 CBZ X20, 0x39D42C8
	0x039D4268 MOV X0, X20
	0x039D426C BL 0x1C16F18
	0x039D4270 B 0x39D4274
	0x039D4274 CMP W1, 0x1
	0x039D4278 B.NE 0x39D42A4
	0x039D427C BL 0x3EB1AD0
	0x039D4280 LDR X8, [X0]
	0x039D4284 STR X8, [X31 + 0x8]
	0x039D4288 BL 0x3EB1AE0
	0x039D428C LDR X1, [X21]
	0x039D4290 ADD X0, X31, 0x60
	0x039D4294 BL 0x2BF8D40
	0x039D4298 LDR X0, [X31 + 0x8]
	0x039D429C CBZ X0, 0x39D40A4
	0x039D42A0 BL 0x1C16F18
	0x039D42A4 MOV X19, X0
	0x039D42A8 STR X31, [X31 + 0x8]
	0x039D42AC B 0x39D42B4
	0x039D42B0 MOV X19, X0
	0x039D42B4 LDR X1, [X21]
	0x039D42B8 ADD X0, X31, 0x60
	0x039D42BC BL 0x2BF8D40
	0x039D42C0 LDR X8, [X31 + 0x8]
	0x039D42C4 CBNZ X8, 0x39D42D0
	0x039D42C8 MOV X0, X19
	0x039D42CC BL 0x1D2C690
	0x039D42D0 LDR X0, [X31 + 0x8]
	0x039D42D4 BL 0x1C16F18
	0x039D42D8 BL 0x1990590
	0x039D42DC STP D9, D8, [X31 - 0x50]!
	0x039D42E0 STR X30, [X31 + 0x10]
	0x039D42E4 STP X24, X23, [X31 + 0x20]
	0x039D42E8 STP X22, X21, [X31 + 0x30]
	0x039D42EC STP X20, X19, [X31 + 0x40]
	0x039D42F0 ADRP X23, 0xA0D000
	0x039D42F4 ADRP X24, 0x77F000
	0x039D42F8 LDRB W8, [X23 + 0xD2A]
	0x039D42FC LDR X24, [X24 + 0x90]
	0x039D4300 MOV W19, W3
	0x039D4304 MOV W22, W2
	0x039D4308 MOV W20, W1
	0x039D430C MOV W21, W0
	0x039D4310 TBNZ X8, 0x0, 0x39D4328
	0x039D4314 ADRP X0, 0x77F000
	0x039D4318 LDR X0, [X0 + 0x90]
	0x039D431C BL 0x1C16CF4
	0x039D4320 MOVZ W8, 0x1
	0x039D4324 STRB W8, [X23 + 0xD2A]
	0x039D4328 LDR X0, [X24]
	0x039D432C LDR W8, [X0 + 0xE0]
	0x039D4330 CBNZ W8, 0x39D4338
	0x039D4334 BL 0x1C16DFC
	0x039D4338 ADRP X8, 0xFFFFFFFFFD116000
	0x039D433C LDR V0, [X8 + 0x31C]
	0x039D4340 MUL W8, W20, W21
	0x039D4344 ANDS W31, W22, 0x1
	0x039D4348 FMOV S1, 1
	0x039D434C MUL W8, W8, W20
	0x039D4350 MOV W0, W19
	0x039D4354 MOV X1, X31
	0x039D4358 FCSEL S8, S0, S1, NE
	0x039D435C SCVTF D9, W8
	0x039D4360 BL 0x3C61E18
	0x039D4364 UCVTF S0, W0
	0x039D4368 FMUL S0, S8, S0
	0x039D436C MOVZ X8, 0x7FF00000
	0x039D4370 FCVT S0, S0
	0x039D4374 LDP X20, X19, [X31 + 0x40]
	0x039D4378 LDP X22, X21, [X31 + 0x30]
	0x039D437C LDP X24, X23, [X31 + 0x20]
	0x039D4380 LDR X30, [X31 + 0x10]
	0x039D4384 FMOV D1, X8
	0x039D4388 FMUL D0, D9, D0
	0x039D438C FCVTZS X8, D0
	0x039D4390 FCMP D0, D1
	0x039D4394 MOVZ X9, 0x80000000
	0x039D4398 CSEL X0, X9, X8, EQ
	0x039D439C LDP D9, D8, [X31], #0x50
	0x039D43A0 RET
	0x039D43A4 STP X30, X23, [X31 - 0x30]!
	0x039D43A8 STP X22, X21, [X31 + 0x10]
	0x039D43AC STP X20, X19, [X31 + 0x20]
	0x039D43B0 ADRP X23, 0xA0D000
	0x039D43B4 ADRP X22, 0x77F000
	0x039D43B8 LDRB W8, [X23 + 0xD2B]
	0x039D43BC LDR X22, [X22 + 0x90]
	0x039D43C0 MOV W21, W2
	0x039D43C4 MOV W19, W1
	0x039D43C8 MOV W20, W0
	0x039D43CC TBNZ X8, 0x0, 0x39D43F0
	0x039D43D0 ADRP X0, 0x747000
	0x039D43D4 LDR X0, [X0 + 0x8F8]
	0x039D43D8 BL 0x1C16CF4
	0x039D43DC ADRP X0, 0x77F000
	0x039D43E0 LDR X0, [X0 + 0x90]
	0x039D43E4 BL 0x1C16CF4
	0x039D43E8 MOVZ W8, 0x1
	0x039D43EC STRB W8, [X23 + 0xD2B]
	0x039D43F0 LDR X0, [X22]
	0x039D43F4 ADRP X22, 0x747000
	0x039D43F8 LDR W8, [X0 + 0xE0]
	0x039D43FC LDR X22, [X22 + 0x8F8]
	0x039D4400 CBNZ W8, 0x39D4408
	0x039D4404 BL 0x1C16DFC
	0x039D4408 MOV W0, W21
	0x039D440C MOV X1, X31
	0x039D4410 BL 0x3C61E18
	0x039D4414 LDR X8, [X22]
	0x039D4418 MOV W21, W0
	0x039D441C LDR W9, [X8 + 0xE0]
	0x039D4420 CBNZ W9, 0x39D442C
	0x039D4424 MOV X0, X8
	0x039D4428 BL 0x1C16DFC
	0x039D442C ADRP X8, 0xFFFFFFFFFD116000
	0x039D4430 LDR V0, [X8 + 0x31C]
	0x039D4434 ANDS W31, W19, 0x1
	0x039D4438 FMOV S2, 1
	0x039D443C SCVTF S1, W20
	0x039D4440 FCSEL S0, S0, S2, NE
	0x039D4444 UCVTF S2, W21
	0x039D4448 FMUL S0, S0, S2
	0x039D444C MOVZ W8, 0x7F800000
	0x039D4450 FDIV S0, S1, S0
	0x039D4454 LDP X20, X19, [X31 + 0x20]
	0x039D4458 LDP X22, X21, [X31 + 0x10]
	0x039D445C FMOV S2, W8
	0x039D4460 FSQRT S0, S0
	0x039D4464 FCVTZS W8, S0
	0x039D4468 FCMP S0, S2
	0x039D446C MOVZ W9, 0x80000000
	0x039D4470 CSEL W0, W9, W8, EQ
	0x039D4474 MOV X1, X31
	0x039D4478 LDP X30, X23, [X31], #0x30
	0x039D447C B 0x39E9CF4
	0x039D4480 STR X30, [X31 - 0x20]!
	0x039D4484 STP X20, X19, [X31 + 0x10]
	0x039D4488 ADRP X19, 0xA0D000
	0x039D448C ADRP X20, 0x77F000
	0x039D4490 LDRB W8, [X19 + 0xD2C]
	0x039D4494 LDR X20, [X20 + 0x80]
	0x039D4498 TBNZ X8, 0x0, 0x39D44B0
	0x039D449C ADRP X0, 0x77F000
	0x039D44A0 LDR X0, [X0 + 0x80]
	0x039D44A4 BL 0x1C16CF4
	0x039D44A8 MOVZ W8, 0x1
	0x039D44AC STRB W8, [X19 + 0xD2C]
	0x039D44B0 LDR X0, [X20]
	0x039D44B4 BL 0x1C16F10
	0x039D44B8 MOV X1, X31
	0x039D44BC MOV X19, X0
	0x039D44C0 BL 0x33BDD8C
	0x039D44C4 LDR X8, [X20]
	0x039D44C8 LDR X8, [X8 + 0xB8]
	0x039D44CC STR X19, [X8]
	0x039D44D0 LDP X20, X19, [X31 + 0x10]
	0x039D44D4 LDR X30, [X31], #0x20
	0x039D44D8 RET
	0x039D44DC MOV X1, X31
	0x039D44E0 B 0x33BDD8C
	0x039D44E4 STR X30, [X31 - 0x10]!
	0x039D44E8 UBFM X9, X3, 0x20, 0x3F
	0x039D44EC MUL W10, W4, W4
	0x039D44F0 UBFM X8, X1, 0x20, 0x3F
	0x039D44F4 MUL W11, W2, W2
	0x039D44F8 MADD W9, W9, W9, W10
	0x039D44FC MADD W8, W8, W8, W11
	0x039D4500 SCVTF S0, W9
	0x039D4504 SCVTF S1, W8
	0x039D4508 FSQRT S0, S0
	0x039D450C STR S0, [X31 + 0xC]
	0x039D4510 FSQRT S0, S1
	0x039D4514 ADD X0, X31, 0xC
	0x039D4518 MOV X1, X31
	0x039D451C BL 0x338FCB8
	0x039D4520 LDR X30, [X31], #0x10
	0x039D4524 RET
	0x039D4528 SUB X31, X31, 0xB0
	0x039D452C STP X30, X21, [X31 + 0x90]
	0x039D4530 STP X20, X19, [X31 + 0xA0]
	0x039D4534 ADRP X21, 0xA0D000
	0x039D4538 ADRP X20, 0x77F000
	0x039D453C LDRB W8, [X21 + 0xD2D]
	0x039D4540 LDR X20, [X20 + 0x98]
	0x039D4544 MOV X19, X0
	0x039D4548 TBNZ X8, 0x0, 0x39D456C
	0x039D454C ADRP X0, 0x77F000
	0x039D4550 LDR X0, [X0 + 0x98]
	0x039D4554 BL 0x1C16CF4
	0x039D4558 ADRP X0, 0x77C000
	0x039D455C LDR X0, [X0 + 0x9B0]
	0x039D4560 BL 0x1C16CF4
	0x039D4564 MOVZ W8, 0x1
	0x039D4568 STRB W8, [X21 + 0xD2D]
	0x039D456C LDR X8, [X20]
	0x039D4570 LDR X8, [X8 + 0xB8]
	0x039D4574 LDR X8, [X8]
	0x039D4578 CBZ X8, 0x39D45A4
	0x039D457C LDR X9, [X19 + 0x20]
	0x039D4580 LDP V1, V0, [X19]
	0x039D4584 STR X9, [X31 + 0x20]
	0x039D4588 STP V1, V0, [X31]
	0x039D458C STP X31, X31, [X8 + 0x18]
	0x039D4590 LDP V1, V0, [X31]
	0x039D4594 STR X9, [X8 + 0x48]
	0x039D4598 STUR V0, [X8 + 0x38]
	0x039D459C STUR V1, [X8 + 0x28]
	0x039D45A0 B 0x39D45F0
	0x039D45A4 ADRP X9, 0x77C000
	0x039D45A8 LDR X8, [X19 + 0x20]
	0x039D45AC LDP V0, V1, [X19]
	0x039D45B0 LDR X9, [X9 + 0x9B0]
	0x039D45B4 STR X8, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+176], D15
	003 Move [X31+184], D14
	004 Move [X31+192], D13
	005 Move [X31+200], D12
	006 Move [X31+208], D11
	007 Move [X31+216], D10
	008 Move [X31+224], D9
	009 Move [X31+232], D8
	010 Move [X31+240], X29
	011 Move [X31+248], X30
	012 Move [X31+256], X28
	013 Move [X31+264], X27
	014 Move [X31+272], X26
	015 Move [X31+280], X25
	016 Move [X31+288], X24
	017 Move [X31+296], X23
	018 Move [X31+304], X22
	019 Move [X31+312], X21
	020 Move [X31+320], X20
	021 Move [X31+328], X19
	022 Move X23, 0xA0E000
	023 Move W8, [X23+3365]
	024 Move W19, W4
	025 Move W25, W3
	026 Move V10, V5
	027 Move V11, V4
	028 Move X20, X2
	029 Move V12, V3
	030 Move V13, V2
	031 Move V14, V1
	032 Move V15, V0
	033 Move X21, X1
	034 Move X22, X0
	035 Move [X31+24], S6
	036 Move [X31+32], S7
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {49}
	041 Move X0, 0x77F000
	042 Move X0, [X0+3624]
	043 Call 0x1C17CF4
	044 Move X0, 0x77F000
	045 Move X0, [X0+2472]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X23+3365], W8
	049 Move [X31+168], W31
	050 Compare X20, 0
	051 JumpIfEqual {266}
	052 Move X8, [X20]
	053 Move X27, 0x77F000
	054 Move X0, X20
	055 Move X9, [X8+392]
	056 Move X1, [X8+400]
	057 Move X27, [X27+2472]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move W23, W0
	061 Move X0, X20
	062 Move X9, [X8+424]
	063 Move X1, [X8+432]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W2, W0
	066 Move X0, X22
	067 Move W1, W23
	068 Move X3, X31
	069 Call Texture2DAtlas.GetTextureMipmapCount, X0, X1, X2
	070 Move W8, [X22+72]
	071 Move W26, W0
	072 Move S0, 1
	073 Move W0, W8
	074 Call 0x3EB2B60
	075 Move W9, 0x7F800000
	076 NotImplemented "Instruction FCVTZS not yet implemented."
	077 Move S1, W9
	078 Move W8, W8
	079 ShiftRight W8, 31
	080 And W8, W8, 0x3FFFFFFF
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 Move X0, X22
	083 Move X1, X20
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Call PowerOfTwoTextureAtlas.GetPowerOfTwoTextureSize, X0, X1
	086 Move X0, X20
	087 Move X1, X31
	088 Move V8, V0
	089 Move V9, V1
	090 Call Texture.get_filterMode, X0
	091 Move X1, [X27]
	092 Move W24, W0
	093 And W31, W25, 1
	094 Move W0, W31
	095 NotImplemented "Instruction CSINC not yet implemented."
	096 Call 0x2236BC0, X0
	097 Move X2, X0
	098 Add X0, X31, 168
	099 Move X1, X21
	100 Move X3, X31
	101 Call ProfilingScope..ctor, X0, X1, X2
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X27, 0x77F000
	104 Move X27, [X27+3624]
	105 Move X29, -48480256
	106 Move W25, W31
	107 Move W28, W19
	108 Add X29, X29, 2748
	109 Move X8, [X22+16]
	110 Compare X8, 0
	111 JumpIfEqual {118}
	112 Move X9, [X8+72]
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move [X31+112], X9
	116 Move [X31+80], V1
	117 Move [X31+88], V0
	118 NotImplemented "Instruction MOVI not yet implemented."
	119 Move [X31+112], X31
	120 Move [X31+80], V0
	121 Move [X31+88], V0
	122 Move V0, [X31+80]
	123 Move V1, [X31+96]
	124 Move X8, [X31+112]
	125 Move [X31+128], V0
	126 Move [X31+136], V1
	127 Move [X31+160], X8
	128 Compare X21, 0
	129 JumpIfEqual {265}
	130 Move V0, [X31+128]
	131 Move V1, [X31+144]
	132 Move X8, [X31+160]
	133 Move [X31+32], V0
	134 Move [X31+40], V1
	135 Move [X31+64], X8
	136 Add X1, X31, 32
	137 Move X0, X21
	138 Move W2, W25
	139 Move X3, X31
	140 Call CommandBuffer.SetRenderTarget, X0, X1, X2
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction ADR not yet implemented."
	143 Move W9, [X29]
	144 Add X8, X8, X9
	145 CallNoReturn X8
	146 Move X0, [X27]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Move S4, [X31+24]
	154 Move S5, [X31+28]
	155 Move X0, X21
	156 Move X1, X20
	157 Move V0, V8
	158 Move V1, V9
	159 Move V2, V11
	160 Move V3, V10
	161 Move W2, W25
	162 Move W4, W23
	163 Move X5, X31
	164 Move [X31], S15
	165 Move [X31+8], S14
	166 Move [X31+8], S13
	167 Move [X31+16], S12
	168 Call Blitter.BlitQuadWithPadding, X0, X1, X2, X3, X4, X5, X6, X7
	169 Move X0, [X27]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 NotImplemented "Instruction CMP not yet implemented."
	175 NotImplemented "Instruction CSET not yet implemented."
	176 Move S4, [X31+24]
	177 Move S5, [X31+28]
	178 Move X0, X21
	179 Move X1, X20
	180 Move V0, V8
	181 Move V1, V9
	182 Move V2, V11
	183 Move V3, V10
	184 Move W2, W25
	185 Move W4, W23
	186 Move X5, X31
	187 Move [X31], S15
	188 Move [X31+8], S14
	189 Move [X31+8], S13
	190 Move [X31+16], S12
	191 Call Blitter.BlitOctahedralWithPadding, X0, X1, X2, X3, X4, X5, X6, X7
	192 Move X0, [X27]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSET not yet implemented."
	199 Move S4, [X31+24]
	200 Move S5, [X31+28]
	201 Move X0, X21
	202 Move X1, X20
	203 Move V0, V8
	204 Move V1, V9
	205 Move V2, V11
	206 Move V3, V10
	207 Move W2, W25
	208 Move W4, W23
	209 Move X5, X31
	210 Move [X31], S15
	211 Move [X31+8], S14
	212 Move [X31+8], S13
	213 Move [X31+16], S12
	214 Call Blitter.BlitOctahedralWithPaddingMultiply, X0, X1, X2, X3, X4, X5, X6, X7
	215 Move X0, [X27]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 NotImplemented "Instruction CMP not yet implemented."
	221 NotImplemented "Instruction CSET not yet implemented."
	222 Move S4, [X31+24]
	223 Move S5, [X31+28]
	224 Move X0, X21
	225 Move X1, X20
	226 Move V0, V8
	227 Move V1, V9
	228 Move V2, V11
	229 Move V3, V10
	230 Move W2, W25
	231 Move W4, W23
	232 Move X5, X31
	233 Move [X31], S15
	234 Move [X31+8], S14
	235 Move [X31+8], S13
	236 Move [X31+16], S12
	237 Call Blitter.BlitQuadWithPaddingMultiply, X0, X1, X2, X3, X4, X5, X6, X7
	238 Add W25, W25, 1
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X0, X31, 168
	241 Move X1, X31
	242 Call ProfilingScope.Dispose, X0
	243 Move X20, [X31+320]
	244 Move X19, [X31+328]
	245 Move X22, [X31+304]
	246 Move X21, [X31+312]
	247 Move X24, [X31+288]
	248 Move X23, [X31+296]
	249 Move X26, [X31+272]
	250 Move X25, [X31+280]
	251 Move X28, [X31+256]
	252 Move X27, [X31+264]
	253 Move X29, [X31+240]
	254 Move X30, [X31+248]
	255 Move D9, [X31+224]
	256 Move D8, [X31+232]
	257 Move D11, [X31+208]
	258 Move D10, [X31+216]
	259 Move D13, [X31+192]
	260 Move D12, [X31+200]
	261 Move D15, [X31+176]
	262 Move D14, [X31+184]
	263 Add X31, X31, 336
	264 Return 
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Move X19, X0
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X0, X19
	270 Call 0x3EB2AD0
	271 Move X20, [X0]
	272 Call 0x3EB2AE0
	273 Add X0, X31, 168
	274 Move X1, X31
	275 Call ProfilingScope.Dispose, X0
	276 Compare X20, 0
	277 JumpIfEqual {243}
	278 Move X0, X20
	279 Call 0x1C17F18
	280 Move X20, X31
	281 Move X19, X0
	282 Add X0, X31, 168
	283 Move X1, X31
	284 Call ProfilingScope.Dispose, X0
	285 Compare X20, 0
	286 JumpIfNotEqual {289}
	287 Move X0, X19
	288 Call 0x1D2D690
	289 Move X0, X20
	290 Call 0x1C17F18
	291 Call 0x1991590

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips = True, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039D45B8 STP V0, V1, [X31 + 0x60]
	0x039D45BC LDR X0, [X9]
	0x039D45C0 LDR W8, [X0 + 0xE0]
	0x039D45C4 CBNZ W8, 0x39D45CC
	0x039D45C8 BL 0x1C16DFC
	0x039D45CC LDP V0, V1, [X31 + 0x60]
	0x039D45D0 LDR X8, [X31 + 0x80]
	0x039D45D4 ADD X0, X31, 0x30
	0x039D45D8 STP V0, V1, [X31 + 0x30]
	0x039D45DC STR X8, [X31 + 0x50]
	0x039D45E0 BL 0x39D4600
	0x039D45E4 LDR X8, [X20]
	0x039D45E8 LDR X8, [X8 + 0xB8]
	0x039D45EC STR X0, [X8]
	0x039D45F0 LDP X20, X19, [X31 + 0xA0]
	0x039D45F4 LDP X30, X21, [X31 + 0x90]
	0x039D45F8 ADD X31, X31, 0xB0
	0x039D45FC RET
	0x039D4600 SUB X31, X31, 0x80
	0x039D4604 STP X30, X21, [X31 + 0x60]
	0x039D4608 STP X20, X19, [X31 + 0x70]
	0x039D460C ADRP X21, 0xA0D000
	0x039D4610 ADRP X20, 0x77C000
	0x039D4614 LDRB W8, [X21 + 0xD3E]
	0x039D4618 LDR X20, [X20 + 0x9B0]
	0x039D461C MOV X19, X0
	0x039D4620 TBNZ X8, 0x0, 0x39D4638
	0x039D4624 ADRP X0, 0x77C000
	0x039D4628 LDR X0, [X0 + 0x9B0]
	0x039D462C BL 0x1C16CF4
	0x039D4630 MOVZ W8, 0x1
	0x039D4634 STRB W8, [X21 + 0xD3E]
	0x039D4638 LDR X0, [X20]
	0x039D463C LDR W8, [X0 + 0xE0]
	0x039D4640 CBNZ W8, 0x39D464C
	0x039D4644 BL 0x1C16DFC
	0x039D4648 LDR X0, [X20]
	0x039D464C LDR X8, [X0 + 0xB8]
	0x039D4650 LDR X9, [X19 + 0x20]
	0x039D4654 LDP V0, V1, [X19]
	0x039D4658 LDR X0, [X8]
	0x039D465C STR X9, [X31 + 0x50]
	0x039D4660 STP V0, V1, [X31 + 0x30]
	0x039D4664 CBZ X0, 0x39D4690
	0x039D4668 LDP V0, V1, [X31 + 0x30]
	0x039D466C LDR X8, [X31 + 0x50]
	0x039D4670 ADD X1, X31, 0x0
	0x039D4674 STP V0, V1, [X31]
	0x039D4678 STR X8, [X31 + 0x20]
	0x039D467C BL 0x39D6A5C
	0x039D4680 LDP X20, X19, [X31 + 0x70]
	0x039D4684 LDP X30, X21, [X31 + 0x60]
	0x039D4688 ADD X31, X31, 0x80
	0x039D468C RET
	0x039D4690 BL 0x1C16F20
	0x039D4694 STP X31, X31, [X0 + 0x18]
	0x039D4698 LDR X8, [X1 + 0x20]
	0x039D469C LDP V1, V0, [X1]
	0x039D46A0 STR X8, [X0 + 0x48]
	0x039D46A4 STUR V0, [X0 + 0x38]
	0x039D46A8 STUR V1, [X0 + 0x28]
	0x039D46AC RET
	0x039D46B0 SUB X31, X31, 0x60
	0x039D46B4 STR X30, [X31 + 0x30]
	0x039D46B8 STP X22, X21, [X31 + 0x40]
	0x039D46BC STP X20, X19, [X31 + 0x50]
	0x039D46C0 ADRP X21, 0xA0D000

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, X2
	016 Move X23, X1
	017 Move X1, X2
	018 Move X2, X31
	019 Move W20, W4
	020 Move W19, W3
	021 Move V8, V7
	022 Move V9, V6
	023 Move V10, V5
	024 Move V11, V4
	025 Move V12, V3
	026 Move V13, V2
	027 Move V14, V1
	028 Move V15, V0
	029 Move X21, X0
	030 Call Texture2DAtlas.Is2D, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {78}
	035 And W3, W19, 1
	036 Move X0, X21
	037 Move X1, X23
	038 Move V0, V15
	039 Move V1, V14
	040 Move V2, V13
	041 Move V3, V12
	042 Move X2, X22
	043 Move V4, V11
	044 Move V5, V10
	045 Move V6, V9
	046 Move V7, V8
	047 Move W4, W31
	048 Call PowerOfTwoTextureAtlas.Blit2DTexture, X0, X1, X2, X3, X4, X5, X6
	049 Add W31, W20, 1
	050 Compare X22, 0
	051 JumpIfEqual {93}
	052 Move X0, X22
	053 Move X1, X31
	054 Call Object.GetInstanceID, X0
	055 Move W20, W0
	056 Compare X21, 0
	057 JumpIfEqual {93}
	058 And W2, W19, 1
	059 Move X0, X21
	060 Move W1, W20
	061 Move X20, [X31+96]
	062 Move X19, [X31+104]
	063 Move X22, [X31+80]
	064 Move X21, [X31+88]
	065 Move X30, [X31+64]
	066 Move X23, [X31+72]
	067 Move D9, [X31+48]
	068 Move D8, [X31+56]
	069 Move D11, [X31+32]
	070 Move D10, [X31+40]
	071 Move D13, [X31+16]
	072 Move D12, [X31+24]
	073 Move X3, X31
	074 Move D15, [X31+112]
	075 Move D14, [X31+120]
	076 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	077 Return 
	078 Move X20, [X31+96]
	079 Move X19, [X31+104]
	080 Move X22, [X31+80]
	081 Move X21, [X31+88]
	082 Move X30, [X31+64]
	083 Move X23, [X31+72]
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Move D11, [X31+32]
	087 Move D10, [X31+40]
	088 Move D13, [X31+16]
	089 Move D12, [X31+24]
	090 Move D15, [X31+112]
	091 Move D14, [X31+120]
	092 Return 
	093 Call 0x1C17F20

Method: System.Void BlitTextureMultiply(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips = True, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039D46C4 LDRB W8, [X21 + 0xD2E]
	0x039D46C8 MOV X19, X1
	0x039D46CC MOV X20, X0
	0x039D46D0 TBNZ X8, 0x0, 0x39D46E8
	0x039D46D4 ADRP X0, 0x71F000
	0x039D46D8 LDR X0, [X0 + 0x598]
	0x039D46DC BL 0x1C16CF4
	0x039D46E0 MOVZ W8, 0x1
	0x039D46E4 STRB W8, [X21 + 0xD2E]
	0x039D46E8 LDR X8, [X20]
	0x039D46EC CBZ X8, 0x39D4780
	0x039D46F0 ADRP X22, 0x71F000
	0x039D46F4 LDR X22, [X22 + 0x598]
	0x039D46F8 LDR X21, [X8 + 0x18]
	0x039D46FC LDR X0, [X22]
	0x039D4700 LDR W9, [X0 + 0xE0]
	0x039D4704 CBNZ W9, 0x39D470C
	0x039D4708 BL 0x1C16DFC
	0x039D470C MOV X0, X21
	0x039D4710 MOV X1, X31
	0x039D4714 MOV X2, X31
	0x039D4718 BL 0x3C354F8
	0x039D471C LDR X8, [X20]
	0x039D4720 CBZ X8, 0x39D4794
	0x039D4724 TBNZ X0, 0x0, 0x39D4798
	0x039D4728 LDR X0, [X22]
	0x039D472C LDR X21, [X8 + 0x20]
	0x039D4730 LDR W9, [X0 + 0xE0]
	0x039D4734 CBNZ W9, 0x39D473C
	0x039D4738 BL 0x1C16DFC
	0x039D473C MOV X0, X21
	0x039D4740 MOV X1, X31
	0x039D4744 MOV X2, X31
	0x039D4748 BL 0x3C354F8
	0x039D474C LDR X20, [X20]
	0x039D4750 TBNZ X0, 0x0, 0x39D47C0
	0x039D4754 LDR X8, [X19 + 0x20]
	0x039D4758 LDP V1, V0, [X19]
	0x039D475C STR X8, [X31 + 0x20]
	0x039D4760 STP V1, V0, [X31]
	0x039D4764 CBZ X20, 0x39D4794
	0x039D4768 STP X31, X31, [X20 + 0x18]
	0x039D476C LDR X8, [X31 + 0x20]
	0x039D4770 LDP V1, V0, [X31]
	0x039D4774 STR X8, [X20 + 0x48]
	0x039D4778 STUR V0, [X20 + 0x38]
	0x039D477C STUR V1, [X20 + 0x28]
	0x039D4780 LDP X20, X19, [X31 + 0x50]
	0x039D4784 LDP X22, X21, [X31 + 0x40]
	0x039D4788 LDR X30, [X31 + 0x30]
	0x039D478C ADD X31, X31, 0x60
	0x039D4790 RET
	0x039D4794 BL 0x1C16F20
	0x039D4798 LDR X19, [X8 + 0x18]
	0x039D479C MOV X0, X19
	0x039D47A0 BL 0x19903C0
	0x039D47A4 MOV X0, X19
	0x039D47A8 MOV X1, X31
	0x039D47AC BL 0x3C389D4
	0x039D47B0 MOV X19, X0
	0x039D47B4 ADRP X0, 0x77F000
	0x039D47B8 LDR X0, [X0 + 0xA0]
	0x039D47BC B 0x39D47EC
	0x039D47C0 MOV X0, X20
	0x039D47C4 BL 0x19903C0
	0x039D47C8 LDR X19, [X20 + 0x20]
	0x039D47CC MOV X0, X19

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, X2
	016 Move X23, X1
	017 Move X1, X2
	018 Move X2, X31
	019 Move W20, W4
	020 Move W19, W3
	021 Move V8, V7
	022 Move V9, V6
	023 Move V10, V5
	024 Move V11, V4
	025 Move V12, V3
	026 Move V13, V2
	027 Move V14, V1
	028 Move V15, V0
	029 Move X21, X0
	030 Call Texture2DAtlas.Is2D, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {78}
	035 And W3, W19, 1
	036 Move W4, 1
	037 Move X0, X21
	038 Move X1, X23
	039 Move V0, V15
	040 Move V1, V14
	041 Move V2, V13
	042 Move V3, V12
	043 Move X2, X22
	044 Move V4, V11
	045 Move V5, V10
	046 Move V6, V9
	047 Move V7, V8
	048 Call PowerOfTwoTextureAtlas.Blit2DTexture, X0, X1, X2, X3, X4, X5, X6
	049 Add W31, W20, 1
	050 Compare X22, 0
	051 JumpIfEqual {93}
	052 Move X0, X22
	053 Move X1, X31
	054 Call Object.GetInstanceID, X0
	055 Move W20, W0
	056 Compare X21, 0
	057 JumpIfEqual {93}
	058 And W2, W19, 1
	059 Move X0, X21
	060 Move W1, W20
	061 Move X20, [X31+96]
	062 Move X19, [X31+104]
	063 Move X22, [X31+80]
	064 Move X21, [X31+88]
	065 Move X30, [X31+64]
	066 Move X23, [X31+72]
	067 Move D9, [X31+48]
	068 Move D8, [X31+56]
	069 Move D11, [X31+32]
	070 Move D10, [X31+40]
	071 Move D13, [X31+16]
	072 Move D12, [X31+24]
	073 Move X3, X31
	074 Move D15, [X31+112]
	075 Move D14, [X31+120]
	076 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	077 Return 
	078 Move X20, [X31+96]
	079 Move X19, [X31+104]
	080 Move X22, [X31+80]
	081 Move X21, [X31+88]
	082 Move X30, [X31+64]
	083 Move X23, [X31+72]
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Move D11, [X31+32]
	087 Move D10, [X31+40]
	088 Move D13, [X31+16]
	089 Move D12, [X31+24]
	090 Move D15, [X31+112]
	091 Move D14, [X31+120]
	092 Return 
	093 Call 0x1C17F20

Method: System.Void BlitOctahedralTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips = True, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039D47D0 BL 0x19903C0
	0x039D47D4 MOV X0, X19
	0x039D47D8 MOV X1, X31
	0x039D47DC BL 0x3C389D4
	0x039D47E0 MOV X19, X0
	0x039D47E4 ADRP X0, 0x77F000
	0x039D47E8 LDR X0, [X0 + 0xA8]
	0x039D47EC BL 0x1C16D08
	0x039D47F0 MOV X20, X0
	0x039D47F4 ADRP X0, 0x77F000
	0x039D47F8 LDR X0, [X0 + 0xB0]
	0x039D47FC BL 0x1C16D08
	0x039D4800 MOV X2, X0
	0x039D4804 MOV X0, X20
	0x039D4808 MOV X1, X19
	0x039D480C MOV X3, X31
	0x039D4810 BL 0x32274B8
	0x039D4814 MOV X19, X0
	0x039D4818 ADRP X0, 0x727000
	0x039D481C LDR X0, [X0 + 0x578]
	0x039D4820 BL 0x1C16D08
	0x039D4824 BL 0x1C16F10
	0x039D4828 MOV X1, X19
	0x039D482C MOV X2, X31
	0x039D4830 MOV X20, X0
	0x039D4834 BL 0x3314A68
	0x039D4838 ADRP X0, 0x77F000
	0x039D483C LDR X0, [X0 + 0xB8]
	0x039D4840 BL 0x1C16D08
	0x039D4844 MOV X1, X0
	0x039D4848 MOV X0, X20
	0x039D484C BL 0x1C16DEC
	0x039D4850 MOVZ W8, 0x1
	0x039D4854 STRB W8, [X0 + 0x60]
	0x039D4858 LDP V1, V0, [X1 + 0x10]
	0x039D485C LDR V2, [X1]
	0x039D4860 STUR V0, [X0 + 0x84]
	0x039D4864 STUR V1, [X0 + 0x74]
	0x039D4868 STUR V2, [X0 + 0x64]
	0x039D486C RET
	0x039D4870 STRB W31, [X0 + 0x60]
	0x039D4874 RET
	0x039D4878 LDP S0, S1, [X0 + 0x94]
	0x039D487C RET
	0x039D4880 STP S0, S1, [X0 + 0x94]
	0x039D4884 RET
	0x039D4888 LDRB W0, [X0 + 0xA8]
	0x039D488C RET
	0x039D4890 AND W8, W1, 0x1
	0x039D4894 STRB W8, [X0 + 0xA8]
	0x039D4898 RET
	0x039D489C LDUR X0, [X0 + 0xAC]
	0x039D48A0 RET
	0x039D48A4 STUR X1, [X0 + 0xAC]
	0x039D48A8 RET
	0x039D48AC STR X30, [X31 - 0x10]!
	0x039D48B0 LDRB W9, [X0 + 0x60]
	0x039D48B4 CBZ W9, 0x39D48C8
	0x039D48B8 LDUR V0, [X0 + 0x84]
	0x039D48BC LDUR V1, [X0 + 0x74]
	0x039D48C0 LDUR V2, [X0 + 0x64]
	0x039D48C4 B 0x39D48D8
	0x039D48C8 LDR X9, [X0 + 0x10]
	0x039D48CC CBZ X9, 0x39D48E8
	0x039D48D0 LDP V1, V0, [X9 + 0x40]
	0x039D48D4 LDR V2, [X9 + 0x3]
	0x039D48D8 STP V1, V0, [X8 + 0x10]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, X2
	016 Move X23, X1
	017 Move X1, X2
	018 Move X2, X31
	019 Move W20, W4
	020 Move W19, W3
	021 Move V8, V7
	022 Move V9, V6
	023 Move V10, V5
	024 Move V11, V4
	025 Move V12, V3
	026 Move V13, V2
	027 Move V14, V1
	028 Move V15, V0
	029 Move X21, X0
	030 Call Texture2DAtlas.Is2D, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {78}
	035 And W3, W19, 1
	036 Move W4, 2
	037 Move X0, X21
	038 Move X1, X23
	039 Move V0, V15
	040 Move V1, V14
	041 Move V2, V13
	042 Move V3, V12
	043 Move X2, X22
	044 Move V4, V11
	045 Move V5, V10
	046 Move V6, V9
	047 Move V7, V8
	048 Call PowerOfTwoTextureAtlas.Blit2DTexture, X0, X1, X2, X3, X4, X5, X6
	049 Add W31, W20, 1
	050 Compare X22, 0
	051 JumpIfEqual {93}
	052 Move X0, X22
	053 Move X1, X31
	054 Call Object.GetInstanceID, X0
	055 Move W20, W0
	056 Compare X21, 0
	057 JumpIfEqual {93}
	058 And W2, W19, 1
	059 Move X0, X21
	060 Move W1, W20
	061 Move X20, [X31+96]
	062 Move X19, [X31+104]
	063 Move X22, [X31+80]
	064 Move X21, [X31+88]
	065 Move X30, [X31+64]
	066 Move X23, [X31+72]
	067 Move D9, [X31+48]
	068 Move D8, [X31+56]
	069 Move D11, [X31+32]
	070 Move D10, [X31+40]
	071 Move D13, [X31+16]
	072 Move D12, [X31+24]
	073 Move X3, X31
	074 Move D15, [X31+112]
	075 Move D14, [X31+120]
	076 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	077 Return 
	078 Move X20, [X31+96]
	079 Move X19, [X31+104]
	080 Move X22, [X31+80]
	081 Move X21, [X31+88]
	082 Move X30, [X31+64]
	083 Move X23, [X31+72]
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Move D11, [X31+32]
	087 Move D10, [X31+40]
	088 Move D13, [X31+16]
	089 Move D12, [X31+24]
	090 Move D15, [X31+112]
	091 Move D14, [X31+120]
	092 Return 
	093 Call 0x1C17F20

Method: System.Void BlitOctahedralTextureMultiply(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, UnityEngine.Vector4 sourceScaleOffset, System.Boolean blitMips = True, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039D48DC STR V2, [X8]
	0x039D48E0 LDR X30, [X31], #0x10
	0x039D48E4 RET
	0x039D48E8 BL 0x1C16F20
	0x039D48EC LDR X0, [X0 + 0x18]
	0x039D48F0 RET
	0x039D48F4 LDR X9, [X0 + 0x48]
	0x039D48F8 LDUR V0, [X0 + 0x38]
	0x039D48FC LDUR V1, [X0 + 0x28]
	0x039D4900 STR X9, [X8 + 0x20]
	0x039D4904 STP V1, V0, [X8]
	0x039D4908 RET
	0x039D490C LDR X0, [X0 + 0x58]
	0x039D4910 RET
	0x039D4914 LDRB W0, [X0 + 0x50]
	0x039D4918 RET
	0x039D491C STR X30, [X31 - 0x20]!
	0x039D4920 STP X20, X19, [X31 + 0x10]
	0x039D4924 MOV X19, X1
	0x039D4928 MOV X1, X31
	0x039D492C MOV X20, X0
	0x039D4930 BL 0x33BDD8C
	0x039D4934 STR X19, [X20 + 0x10]
	0x039D4938 LDP X20, X19, [X31 + 0x10]
	0x039D493C LDR X30, [X31], #0x20
	0x039D4940 RET
	0x039D4944 STR X30, [X31 - 0x20]!
	0x039D4948 STP X20, X19, [X31 + 0x10]
	0x039D494C ADRP X20, 0xA0D000
	0x039D4950 LDRB W8, [X20 + 0xD2F]
	0x039D4954 MOV X19, X0
	0x039D4958 TBNZ X8, 0x0, 0x39D4970
	0x039D495C ADRP X0, 0x71F000
	0x039D4960 LDR X0, [X0 + 0x598]
	0x039D4964 BL 0x1C16CF4
	0x039D4968 MOVZ W8, 0x1
	0x039D496C STRB W8, [X20 + 0xD2F]
	0x039D4970 CBZ X19, 0x39D49AC
	0x039D4974 ADRP X8, 0x71F000
	0x039D4978 LDR X8, [X8 + 0x598]
	0x039D497C LDR X20, [X19 + 0x18]
	0x039D4980 LDR X0, [X8]
	0x039D4984 LDR W8, [X0 + 0xE0]
	0x039D4988 CBNZ W8, 0x39D4990
	0x039D498C BL 0x1C16DFC
	0x039D4990 MOV X0, X20
	0x039D4994 MOV X1, X31
	0x039D4998 MOV X2, X31
	0x039D499C BL 0x3C354F8
	0x039D49A0 TBZ X0, 0x0, 0x39D49B4
	0x039D49A4 LDR X0, [X19 + 0x18]
	0x039D49A8 B 0x39D49B8
	0x039D49AC MOV X0, X31
	0x039D49B0 B 0x39D49B8
	0x039D49B4 LDR X0, [X19 + 0x20]
	0x039D49B8 LDP X20, X19, [X31 + 0x10]
	0x039D49BC LDR X30, [X31], #0x20
	0x039D49C0 RET
	0x039D49C4 CBZ X0, 0x39D49CC
	0x039D49C8 LDR X0, [X0 + 0x18]
	0x039D49CC RET
	0x039D49D0 SUB X31, X31, 0x40
	0x039D49D4 STP X30, X19, [X31 + 0x30]
	0x039D49D8 MOV X19, X0
	0x039D49DC STP X1, X31, [X0 + 0x18]
	0x039D49E0 MOVI V0.2D, 0x0
	0x039D49E4 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, X2
	016 Move X23, X1
	017 Move X1, X2
	018 Move X2, X31
	019 Move W20, W4
	020 Move W19, W3
	021 Move V8, V7
	022 Move V9, V6
	023 Move V10, V5
	024 Move V11, V4
	025 Move V12, V3
	026 Move V13, V2
	027 Move V14, V1
	028 Move V15, V0
	029 Move X21, X0
	030 Call Texture2DAtlas.Is2D, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {78}
	035 And W3, W19, 1
	036 Move W4, 3
	037 Move X0, X21
	038 Move X1, X23
	039 Move V0, V15
	040 Move V1, V14
	041 Move V2, V13
	042 Move V3, V12
	043 Move X2, X22
	044 Move V4, V11
	045 Move V5, V10
	046 Move V6, V9
	047 Move V7, V8
	048 Call PowerOfTwoTextureAtlas.Blit2DTexture, X0, X1, X2, X3, X4, X5, X6
	049 Add W31, W20, 1
	050 Compare X22, 0
	051 JumpIfEqual {93}
	052 Move X0, X22
	053 Move X1, X31
	054 Call Object.GetInstanceID, X0
	055 Move W20, W0
	056 Compare X21, 0
	057 JumpIfEqual {93}
	058 And W2, W19, 1
	059 Move X0, X21
	060 Move W1, W20
	061 Move X20, [X31+96]
	062 Move X19, [X31+104]
	063 Move X22, [X31+80]
	064 Move X21, [X31+88]
	065 Move X30, [X31+64]
	066 Move X23, [X31+72]
	067 Move D9, [X31+48]
	068 Move D8, [X31+56]
	069 Move D11, [X31+32]
	070 Move D10, [X31+40]
	071 Move D13, [X31+16]
	072 Move D12, [X31+24]
	073 Move X3, X31
	074 Move D15, [X31+112]
	075 Move D14, [X31+120]
	076 Call Texture2DAtlas.MarkGPUTextureValid, X0, X1, X2
	077 Return 
	078 Move X20, [X31+96]
	079 Move X19, [X31+104]
	080 Move X22, [X31+80]
	081 Move X21, [X31+88]
	082 Move X30, [X31+64]
	083 Move X23, [X31+72]
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Move D11, [X31+32]
	087 Move D10, [X31+40]
	088 Move D13, [X31+16]
	089 Move D12, [X31+24]
	090 Move D15, [X31+112]
	091 Move D14, [X31+120]
	092 Return 
	093 Call 0x1C17F20

Method: System.Void TextureSizeToPowerOfTwo(UnityEngine.Texture texture, ref System.Int32 width, ref System.Int32 height)

Disassembly:
	0x039D49E8 MOV X2, X31
	0x039D49EC STR X31, [X31 + 0x20]
	0x039D49F0 STP V0, V0, [X31]
	0x039D49F4 BL 0x3C4B0C4
	0x039D49F8 LDR X8, [X31 + 0x20]
	0x039D49FC LDP V1, V0, [X31]
	0x039D4A00 STR X8, [X19 + 0x48]
	0x039D4A04 STUR V0, [X19 + 0x38]
	0x039D4A08 STUR V1, [X19 + 0x28]
	0x039D4A0C LDP X30, X19, [X31 + 0x30]
	0x039D4A10 ADD X31, X31, 0x40
	0x039D4A14 RET
	0x039D4A18 SUB X31, X31, 0x40
	0x039D4A1C STP X30, X19, [X31 + 0x30]
	0x039D4A20 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W0, [X2]
	005 Move X1, X31
	006 Move X19, X2
	007 Move X20, X3
	008 Call Mathf.NextPowerOfTwo, X0
	009 Move [X19], W0
	010 Move W0, [X20]
	011 Move X1, X31
	012 Call Mathf.NextPowerOfTwo, X0
	013 Move [X20], W0
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 

Method: UnityEngine.Vector2 GetPowerOfTwoTextureSize(UnityEngine.Texture texture)

Disassembly:
	0x039D412C MOV X1, X21
	0x039D4130 BL 0x2F460D4
	0x039D4134 ADRP X21, 0xA04000
	0x039D4138 LDRB W8, [X21 + 0xE5A]
	0x039D413C CBNZ W8, 0x39D4154
	0x039D4140 ADRP X0, 0x726000
	0x039D4144 LDR X0, [X0 + 0x9A0]
	0x039D4148 BL 0x1C16CF4
	0x039D414C MOVZ W8, 0x1
	0x039D4150 STRB W8, [X21 + 0xE5A]
	0x039D4154 ADRP X8, 0x726000
	0x039D4158 LDR X8, [X8 + 0x9A0]
	0x039D415C LDR X1, [X25]
	0x039D4160 MOV X0, X20
	0x039D4164 LDR X8, [X8]
	0x039D4168 LDR X8, [X8 + 0xB8]
	0x039D416C LDR V0, [X8]
	0x039D4170 ADD X8, X31, 0x10
	0x039D4174 STR V0, [X31 + 0x8]
	0x039D4178 BL 0x2F44EB8
	0x039D417C LDP V0, V1, [X31 + 0x10]
	0x039D4180 MOVZ W21, 0x1
	0x039D4184 STP V0, V1, [X31 + 0x30]
	0x039D4188 LDR X1, [X24]
	0x039D418C ADD X0, X31, 0x30
	0x039D4190 BL 0x2BB3800
	0x039D4194 TBZ X0, 0x0, 0x39D41BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {32}
	006 Move X8, [X1]
	007 Move X19, X1
	008 Move X0, X19
	009 Move X9, [X8+392]
	010 Move X1, [X8+400]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X8, [X19]
	013 Move W20, W0
	014 Move X0, X19
	015 Move X9, [X8+424]
	016 Move X1, [X8+432]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move W19, W0
	019 Move W0, W20
	020 Move X1, X31
	021 Call Mathf.NextPowerOfTwo, X0
	022 Move W20, W0
	023 Move W0, W19
	024 Move X1, X31
	025 Call Mathf.NextPowerOfTwo, X0
	026 NotImplemented "Instruction SCVTF not yet implemented."
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 NotImplemented "Instruction SCVTF not yet implemented."
	030 Move X30, [X31+32]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Boolean AllocateTexture(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Vector4 scaleOffset, UnityEngine.Texture texture, System.Int32 width, System.Int32 height, System.Int32 overrideInstanceID = -1)

Disassembly:
	0x039D4A24 STP X31, X1, [X0 + 0x18]
	0x039D4A28 MOVI V0.2D, 0x0
	0x039D4A2C ADD X0, X31, 0x0
	0x039D4A30 MOV X2, X31
	0x039D4A34 STR X31, [X31 + 0x20]
	0x039D4A38 STP V0, V0, [X31]
	0x039D4A3C BL 0x3C4B0C4
	0x039D4A40 LDR X8, [X31 + 0x20]
	0x039D4A44 LDP V1, V0, [X31]
	0x039D4A48 STR X8, [X19 + 0x48]
	0x039D4A4C STUR V0, [X19 + 0x38]
	0x039D4A50 STUR V1, [X19 + 0x28]
	0x039D4A54 LDP X30, X19, [X31 + 0x30]
	0x039D4A58 ADD X31, X31, 0x40
	0x039D4A5C RET
	0x039D4A60 STP X30, X21, [X31 - 0x20]!
	0x039D4A64 STP X20, X19, [X31 + 0x10]
	0x039D4A68 ADRP X20, 0xA0D000
	0x039D4A6C ADRP X21, 0x71F000
	0x039D4A70 LDRB W8, [X20 + 0xD30]
	0x039D4A74 LDR X21, [X21 + 0x598]
	0x039D4A78 MOV X19, X0
	0x039D4A7C TBNZ X8, 0x0, 0x39D4A94
	0x039D4A80 ADRP X0, 0x71F000
	0x039D4A84 LDR X0, [X0 + 0x598]
	0x039D4A88 BL 0x1C16CF4
	0x039D4A8C MOVZ W8, 0x1
	0x039D4A90 STRB W8, [X20 + 0xD30]
	0x039D4A94 LDR X0, [X21]
	0x039D4A98 LDR X20, [X19 + 0x18]
	0x039D4A9C LDR W8, [X0 + 0xE0]
	0x039D4AA0 CBNZ W8, 0x39D4AA8
	0x039D4AA4 BL 0x1C16DFC
	0x039D4AA8 MOV X0, X20
	0x039D4AAC MOV X1, X31
	0x039D4AB0 MOV X2, X31
	0x039D4AB4 BL 0x3C354F8
	0x039D4AB8 TBZ X0, 0x0, 0x39D4AD4
	0x039D4ABC LDR X0, [X19 + 0x18]
	0x039D4AC0 CBZ X0, 0x39D4B04
	0x039D4AC4 LDP X20, X19, [X31 + 0x10]
	0x039D4AC8 MOV X1, X31
	0x039D4ACC LDP X30, X21, [X31], #0x20
	0x039D4AD0 B 0x3C385F8
	0x039D4AD4 LDR X0, [X21]
	0x039D4AD8 LDR X20, [X19 + 0x20]
	0x039D4ADC LDR W8, [X0 + 0xE0]
	0x039D4AE0 CBNZ W8, 0x39D4AE8
	0x039D4AE4 BL 0x1C16DFC
	0x039D4AE8 MOV X0, X20
	0x039D4AEC MOV X1, X31
	0x039D4AF0 MOV X2, X31
	0x039D4AF4 BL 0x3C354F8
	0x039D4AF8 TBZ X0, 0x0, 0x39D4B08
	0x039D4AFC LDR X0, [X19 + 0x20]
	0x039D4B00 CBNZ X0, 0x39D4AC4
	0x039D4B04 BL 0x1C16F20
	0x039D4B08 ADD X0, X19, 0x28
	0x039D4B0C LDP X20, X19, [X31 + 0x10]
	0x039D4B10 MOV X1, X31
	0x039D4B14 LDP X30, X21, [X31], #0x20
	0x039D4B18 B 0x3C4B564
	0x039D4B1C SUB X31, X31, 0x90
	0x039D4B20 STR X30, [X31 + 0x60]
	0x039D4B24 STP X22, X21, [X31 + 0x70]
	0x039D4B28 STP X20, X19, [X31 + 0x80]
	0x039D4B2C ADRP X20, 0xA0D000
	0x039D4B30 LDRB W8, [X20 + 0xD31]
	0x039D4B34 MOV X19, X0
	0x039D4B38 TBNZ X8, 0x0, 0x39D4B50
	0x039D4B3C ADRP X0, 0x747000
	0x039D4B40 LDR X0, [X0 + 0x8F8]
	0x039D4B44 BL 0x1C16CF4
	0x039D4B48 MOVZ W8, 0x1
	0x039D4B4C STRB W8, [X20 + 0xD31]
	0x039D4B50 LDR X0, [X19 + 0x10]
	0x039D4B54 CBZ X0, 0x39D4BD4
	0x039D4B58 ADRP X22, 0x747000
	0x039D4B5C LDR X22, [X22 + 0x8F8]
	0x039D4B60 MOV X1, X19
	0x039D4B64 BL 0x39D4BD8
	0x039D4B68 MOV X21, X19
	0x039D4B6C LDR X20, [X21 + 0x18]!
	0x039D4B70 LDR X0, [X22]
	0x039D4B74 LDR W8, [X0 + 0xE0]
	0x039D4B78 CBNZ W8, 0x39D4B80
	0x039D4B7C BL 0x1C16DFC
	0x039D4B80 MOV X0, X20
	0x039D4B84 MOV X1, X31
	0x039D4B88 BL 0x39E1DF8
	0x039D4B8C ADD X8, X31, 0x8
	0x039D4B90 MOV W0, W31
	0x039D4B94 MOV X1, X31
	0x039D4B98 BL 0x3C4B204
	0x039D4B9C LDR X8, [X31 + 0x28]
	0x039D4BA0 LDUR V0, [X31 + 0x18]
	0x039D4BA4 LDUR V1, [X31 + 0x8]
	0x039D4BA8 LDR X30, [X31 + 0x60]
	0x039D4BAC STR X8, [X31 + 0x50]
	0x039D4BB0 STP V1, V0, [X31 + 0x30]
	0x039D4BB4 STR X8, [X19 + 0x48]
	0x039D4BB8 STUR V0, [X19 + 0x38]
	0x039D4BBC STUR V1, [X19 + 0x28]
	0x039D4BC0 STP X31, X31, [X21]
	0x039D4BC4 LDP X20, X19, [X31 + 0x80]
	0x039D4BC8 LDP X22, X21, [X31 + 0x70]
	0x039D4BCC ADD X31, X31, 0x90
	0x039D4BD0 RET
	0x039D4BD4 BL 0x1C16F20
	0x039D4BD8 STP X30, X21, [X31 - 0x20]!
	0x039D4BDC STP X20, X19, [X31 + 0x10]
	0x039D4BE0 ADRP X21, 0xA0D000
	0x039D4BE4 LDRB W8, [X21 + 0xD4C]
	0x039D4BE8 MOV X19, X1
	0x039D4BEC MOV X20, X0
	0x039D4BF0 TBNZ X8, 0x0, 0x39D4C08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xA0E000
	010 Move W8, [X25+3366]
	011 Move W23, W5
	012 Move W24, W4
	013 Move X20, X3
	014 Move X21, X2
	015 Move X22, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x720000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x720000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0x77F000
	028 Move X0, [X0+4056]
	029 Call 0x1C17CF4
	030 Move X0, 0x77F000
	031 Move X0, [X0+4064]
	032 Call 0x1C17CF4
	033 Move X0, 0x77F000
	034 Move X0, [X0+4072]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+3366], W8
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W0, W23
	040 Move X1, X31
	041 Call Mathf.NextPowerOfTwo, X0
	042 Move W24, W0
	043 Move W0, W23
	044 Move X1, X31
	045 Call Mathf.NextPowerOfTwo, X0
	046 Move W4, W0
	047 Move X0, X19
	048 Move X1, X22
	049 Move X2, X21
	050 Move X3, X20
	051 Move W5, W24
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move TEMP, 0
	059 Not TEMP
	060 Move W6, TEMP
	061 Move X7, X31
	062 Move X30, [X31+64]
	063 Move X25, [X31+72]
	064 Call Texture2DAtlas.AllocateTexture, X0, X1, X2, X3, X4, X5, X6
	065 Return X0
	066 Move X8, 0x720000
	067 Move X8, [X8+2760]
	068 Move W1, 5
	069 Move X0, [X8]
	070 Call 0x1C17D6C
	071 Compare X0, 0
	072 JumpIfEqual {134}
	073 Move X8, [X0+24]
	074 Move X21, X0
	075 Compare W8, 0
	076 JumpIfEqual {133}
	077 Move X9, 0x77F000
	078 Move X9, [X9+4072]
	079 Move X9, [X9]
	080 Move [X21+32], X9
	081 Compare X20, 0
	082 JumpIfEqual {89}
	083 Move X8, [X20]
	084 Move X0, X20
	085 Move X9, [X8+360]
	086 Move X1, [X8+368]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, [X21+24]
	089 Move X0, X31
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X21+40], X0
	093 Move X9, 0x77F000
	094 Move X9, [X9+4064]
	095 Move X9, [X9]
	096 Move [X21+48], X9
	097 Move X9, [X19+16]
	098 Compare X9, 0
	099 JumpIfEqual {134}
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, [X9+88]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X21+56], X9
	104 Move X8, 0x77F000
	105 Move X8, [X8+4056]
	106 Move X0, X21
	107 Move X1, X31
	108 Move X8, [X8]
	109 Move [X21+64], X8
	110 Call String.Concat, X0
	111 Move X8, 0x720000
	112 Move X8, [X8+2600]
	113 Move X19, X0
	114 Move X8, [X8]
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X0, X19
	121 Move X1, X31
	122 Call Debug.LogError, X0
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X24, [X31+16]
	128 Move X23, [X31+24]
	129 Move W0, W31
	130 Move X30, [X31+64]
	131 Move X25, [X31+72]
	132 Return X0
	133 Call 0x1C17F28
	134 Call 0x1C17F20

Method: System.Void ResetRequestedTexture()

Disassembly:
	0x039D4BF4 ADRP X0, 0x77E000
	0x039D4BF8 LDR X0, [X0 + 0xF50]
	0x039D4BFC BL 0x1C16CF4
	0x039D4C00 MOVZ W8, 0x1
	0x039D4C04 STRB W8, [X21 + 0xD4C]
	0x039D4C08 LDR X0, [X20 + 0x18]
	0x039D4C0C CBZ X0, 0x39D4C2C
	0x039D4C10 ADRP X8, 0x77E000
	0x039D4C14 LDR X8, [X8 + 0xF50]
	0x039D4C18 MOV X1, X19
	0x039D4C1C LDP X20, X19, [X31 + 0x10]
	0x039D4C20 LDR X2, [X8]
	0x039D4C24 LDP X30, X21, [X31], #0x20
	0x039D4C28 B 0x2DBE67C
	0x039D4C2C BL 0x1C16F20
	0x039D4C30 SUB X31, X31, 0x50
	0x039D4C34 STP D9, D8, [X31 + 0x10]
	0x039D4C38 STP X30, X23, [X31 + 0x20]
	0x039D4C3C STP X22, X21, [X31 + 0x30]
	0x039D4C40 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA0E000
	005 Move W8, [X20+3367]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x77F000
	012 Move X0, [X0+4080]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3367], W8
	016 Move X0, [X19+80]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x77F000
	020 Move X8, [X8+4080]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<Int32, Vector2Int>.Clear, X0
	026 Return 
	027 Call 0x1C17F20

Method: System.Boolean ReserveSpace(UnityEngine.Texture texture)

Disassembly:
	0x039D4C44 LDRB W8, [X0 + 0xA8]
	0x039D4C48 MOV X19, X1
	0x039D4C4C UBFM X21, X1, 0x20, 0x3F
	0x039D4C50 CBZ W8, 0x39D4E04
	0x039D4C54 LDR X8, [X0 + 0xA0]
	0x039D4C58 MOV X20, X0
	0x039D4C5C CBZ X8, 0x39D4C80
	0x039D4C60 LDR X9, [X8 + 0x18]
	0x039D4C64 LDR X0, [X8 + 0x40]
	0x039D4C68 LDR X2, [X8 + 0x28]
	0x039D4C6C MOV X1, X19
	0x039D4C70 BLR X9
	0x039D4C74 UBFM X21, X0, 0x20, 0x3F
	0x039D4C78 MOV W19, W0
	0x039D4C7C B 0x39D4E04
	0x039D4C80 ADRP X22, 0xA05000
	0x039D4C84 LDRB W8, [X22 + 0x5D7]
	0x039D4C88 LDR V8, [X20 + 0x94]
	0x039D4C8C SCVTF S9, W19
	0x039D4C90 CBNZ W8, 0x39D4CA8
	0x039D4C94 ADRP X0, 0x71F000
	0x039D4C98 LDR X0, [X0 + 0x5A8]
	0x039D4C9C BL 0x1C16CF4
	0x039D4CA0 MOVZ W8, 0x1
	0x039D4CA4 STRB W8, [X22 + 0x5D7]
	0x039D4CA8 ADRP X23, 0x71F000
	0x039D4CAC LDR X23, [X23 + 0x5A8]
	0x039D4CB0 FMUL S9, S8, S9
	0x039D4CB4 LDR X0, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {37}
	008 Move X8, [X1]
	009 Move X20, X1
	010 Move X19, X0
	011 Move X0, X20
	012 Move X9, [X8+392]
	013 Move X1, [X8+400]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X20]
	016 Move W21, W0
	017 Move X0, X20
	018 Move X9, [X8+424]
	019 Move X1, [X8+432]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move W22, W0
	022 Move X0, X19
	023 Move X1, X20
	024 Move X2, X31
	025 Call Texture2DAtlas.GetTextureID, X0, X1
	026 Move W1, W0
	027 Move X0, X19
	028 Move W2, W21
	029 Move W3, W22
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Call PowerOfTwoTextureAtlas.ReserveSpace, X0, X1, X2, X3
	036 Return X0
	037 Call 0x1C17F20

Method: System.Boolean ReserveSpace(UnityEngine.Texture texture, System.Int32 width, System.Int32 height)

Disassembly:
	0x039D4CB8 LDR W8, [X0 + 0xE0]
	0x039D4CBC CBNZ W8, 0x39D4CC4
	0x039D4CC0 BL 0x1C16DFC
	0x039D4CC4 FCVT S8, S9
	0x039D4CC8 ADD X0, X31, 0x8
	0x039D4CCC MOV V0.16B, V8.16B
	0x039D4CD0 BL 0x3EB1C00
	0x039D4CD4 FCMP S9, 0x0
	0x039D4CD8 B.GE 0x39D4CF4
	0x039D4CDC FMOV D1, -0.5
	0x039D4CE0 FCMP D0, D1
	0x039D4CE4 B.NE 0x39D4D1C
	0x039D4CE8 LDR V0, [X31 + 0x8]
	0x039D4CEC FMOV D1, -1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move X2, X31
	007 Move W19, W3
	008 Move X21, X0
	009 Call Texture2DAtlas.GetTextureID, X0, X1
	010 Move W2, W20
	011 Move W3, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W1, W0
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]

Method: System.Boolean ReserveSpace(UnityEngine.Texture textureA, UnityEngine.Texture textureB, System.Int32 width, System.Int32 height)

Disassembly:
	0x039D4E1C ADD X31, X31, 0x50
	0x039D4E20 RET
	0x039D4E24 STP D9, D8, [X31 - 0x40]!
	0x039D4E28 STR X30, [X31 + 0x10]
	0x039D4E2C STP X22, X21, [X31 + 0x20]
	0x039D4E30 STP X20, X19, [X31 + 0x30]
	0x039D4E34 LDRB W8, [X0 + 0xA8]
	0x039D4E38 MOV X19, X0
	0x039D4E3C CBZ W8, 0x39D4E68
	0x039D4E40 LDR X8, [X19 + 0xA0]
	0x039D4E44 CBZ X8, 0x39D4E70
	0x039D4E48 LDUR X1, [X19 + 0xAC]
	0x039D4E4C LDR X9, [X8 + 0x18]
	0x039D4E50 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W3
	006 Move X3, X31
	007 Move W19, W4
	008 Move X21, X0
	009 Call Texture2DAtlas.GetTextureID, X0, X1, X2
	010 Move W2, W20
	011 Move W3, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W1, W0
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call PowerOfTwoTextureAtlas.ReserveSpace, X0, X1, X2, X3
	019 Return X0

Method: System.Boolean ReserveSpace(System.Int32 id, System.Int32 width, System.Int32 height)

Disassembly:
	0x039D4CF0 B 0x39D4D08
	0x039D4CF4 FMOV D1, 0.5
	0x039D4CF8 FCMP D0, D1
	0x039D4CFC B.NE 0x39D4D28
	0x039D4D00 LDR V0, [X31 + 0x8]
	0x039D4D04 FMOV D1, 1
	0x039D4D08 FCVTZS X8, D0
	0x039D4D0C FADD D1, D0, D1
	0x039D4D10 ANDS X31, X8, 0x1
	0x039D4D14 FCSEL D0, D0, D1, EQ
	0x039D4D18 B 0x39D4D30
	0x039D4D1C FADD D0, D8, D1
	0x039D4D20 FRINTP D0, D0
	0x039D4D24 B 0x39D4D30
	0x039D4D28 FADD D0, D8, D1
	0x039D4D2C FRINTM D0, D0
	0x039D4D30 MOVZ X9, 0x7FF00000
	0x039D4D34 LDRB W10, [X22 + 0x5D7]
	0x039D4D38 LDR V8, [X20 + 0x98]
	0x039D4D3C FMOV D1, X9
	0x039D4D40 FCVTZS W8, D0
	0x039D4D44 FCMP D0, D1
	0x039D4D48 MOVZ W9, 0x80000000
	0x039D4D4C CSEL W19, W9, W8, EQ
	0x039D4D50 SCVTF S9, W21
	0x039D4D54 CBNZ W10, 0x39D4D6C
	0x039D4D58 ADRP X0, 0x71F000
	0x039D4D5C LDR X0, [X0 + 0x5A8]
	0x039D4D60 BL 0x1C16CF4
	0x039D4D64 MOVZ W8, 0x1
	0x039D4D68 STRB W8, [X22 + 0x5D7]
	0x039D4D6C LDR X0, [X23]
	0x039D4D70 FMUL S9, S8, S9
	0x039D4D74 LDR W8, [X0 + 0xE0]
	0x039D4D78 CBNZ W8, 0x39D4D80
	0x039D4D7C BL 0x1C16DFC
	0x039D4D80 FCVT S8, S9
	0x039D4D84 ADD X0, X31, 0x8
	0x039D4D88 MOV V0.16B, V8.16B
	0x039D4D8C BL 0x3EB1C00
	0x039D4D90 FCMP S9, 0x0
	0x039D4D94 B.GE 0x39D4DB0
	0x039D4D98 FMOV D1, -0.5
	0x039D4D9C FCMP D0, D1
	0x039D4DA0 B.NE 0x39D4DD8
	0x039D4DA4 LDR V0, [X31 + 0x8]
	0x039D4DA8 FMOV D1, -1
	0x039D4DAC B 0x39D4DC4
	0x039D4DB0 FMOV D1, 0.5
	0x039D4DB4 FCMP D0, D1
	0x039D4DB8 B.NE 0x39D4DE4
	0x039D4DBC LDR V0, [X31 + 0x8]
	0x039D4DC0 FMOV D1, 1
	0x039D4DC4 FCVTZS X8, D0
	0x039D4DC8 FADD D1, D0, D1
	0x039D4DCC ANDS X31, X8, 0x1
	0x039D4DD0 FCSEL D0, D0, D1, EQ
	0x039D4DD4 B 0x39D4DEC
	0x039D4DD8 FADD D0, D8, D1
	0x039D4DDC FRINTP D0, D0
	0x039D4DE0 B 0x39D4DEC
	0x039D4DE4 FADD D0, D8, D1
	0x039D4DE8 FRINTM D0, D0
	0x039D4DEC MOVZ X8, 0x7FF00000
	0x039D4DF0 FMOV D1, X8
	0x039D4DF4 FCVTZS W9, D0
	0x039D4DF8 FCMP D0, D1
	0x039D4DFC MOVZ W8, 0x80000000
	0x039D4E00 CSEL W21, W8, W9, EQ
	0x039D4E04 MOV W0, W19
	0x039D4E08 BFM X0, X21, 0x20, 0x1F
	0x039D4E0C LDP X20, X19, [X31 + 0x40]
	0x039D4E10 LDP X22, X21, [X31 + 0x30]
	0x039D4E14 LDP X30, X23, [X31 + 0x20]
	0x039D4E18 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0xA0E000
	009 Move W8, [X23+3368]
	010 Move W19, W3
	011 Move W20, W2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x77F000
	019 Move X0, [X0+4088]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3368], W8
	023 Move [X31+16], X31
	024 Move [X31+24], X31
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X22+80]
	028 Compare X0, 0
	029 JumpIfEqual {94}
	030 Move X8, 0x77F000
	031 Move X8, [X8+4088]
	032 Move W2, W20
	033 NotImplemented "Instruction BFM not yet implemented."
	034 Move W1, W21
	035 Move X3, [X8]
	036 Call Dictionary`2<Int32, Vector2Int>.set_Item, X0, X1, X2
	037 Move X0, X22
	038 Move W1, W21
	039 Move X2, X31
	040 Call Texture2DAtlas.GetCachedTextureSize, X0, X1
	041 Move X23, X0
	042 Add X1, X31, 16
	043 Move X0, X22
	044 Move W2, W21
	045 Move X3, X31
	046 Call Texture2DAtlas.IsCached, X0, X1, X2
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {56}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, X23
	053 ShiftRight X8, 32
	054 And X8, X8, 0x7FFFFFFF
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X23, 0xA05000
	057 Move W8, [X23+3674]
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x727000
	061 Move X0, [X0+2464]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X23+3674], W8
	065 Move X8, 0x727000
	066 Move X8, [X8+2464]
	067 Add X4, X31, 0
	068 Move X0, X22
	069 Move W1, W21
	070 Move X8, [X8]
	071 Move W2, W20
	072 Move W3, W19
	073 Move X8, [X8+184]
	074 Move V0, [X8]
	075 Move [X31], V0
	076 Move X8, [X22]
	077 Move X9, [X8+440]
	078 Move X5, [X8+448]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {85}
	084 Move W0, 1
	085 Move W0, W31
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X30, [X31+32]
	091 Move X23, [X31+40]
	092 Add X31, X31, 80
	093 Return X0
	094 Call 0x1C17F20

Method: System.Boolean RelayoutEntries()

Disassembly:
	0x039D4E54 LDR X2, [X8 + 0x28]
	0x039D4E58 BLR X9
	0x039D4E5C UBFM X8, X0, 0x20, 0x3F
	0x039D4E60 MOV X20, X0
	0x039D4E64 B 0x39D4FFC
	0x039D4E68 LDP W20, W8, [X19 + 0xAC]
	0x039D4E6C B 0x39D4FFC
	0x039D4E70 LDR V0, [X19 + 0xAC]
	0x039D4E74 ADRP X21, 0xA05000
	0x039D4E78 LDRB W8, [X21 + 0x5D7]
	0x039D4E7C LDR V8, [X19 + 0x94]
	0x039D4E80 SCVTF S9, S0
	0x039D4E84 CBNZ W8, 0x39D4E9C
	0x039D4E88 ADRP X0, 0x71F000
	0x039D4E8C LDR X0, [X0 + 0x5A8]
	0x039D4E90 BL 0x1C16CF4
	0x039D4E94 MOVZ W8, 0x1
	0x039D4E98 STRB W8, [X21 + 0x5D7]
	0x039D4E9C ADRP X22, 0x71F000
	0x039D4EA0 LDR X22, [X22 + 0x5A8]
	0x039D4EA4 FMUL S9, S8, S9
	0x039D4EA8 LDR X0, [X22]
	0x039D4EAC LDR W8, [X0 + 0xE0]
	0x039D4EB0 CBNZ W8, 0x39D4EB8
	0x039D4EB4 BL 0x1C16DFC
	0x039D4EB8 FCVT S8, S9
	0x039D4EBC ADD X0, X31, 0x18
	0x039D4EC0 MOV V0.16B, V8.16B
	0x039D4EC4 BL 0x3EB1C00
	0x039D4EC8 FCMP S9, 0x0
	0x039D4ECC B.GE 0x39D4EE8
	0x039D4ED0 FMOV D1, -0.5
	0x039D4ED4 FCMP D0, D1
	0x039D4ED8 B.NE 0x39D4F10
	0x039D4EDC LDR V0, [X31 + 0x18]
	0x039D4EE0 FMOV D1, -1
	0x039D4EE4 B 0x39D4EFC
	0x039D4EE8 FMOV D1, 0.5
	0x039D4EEC FCMP D0, D1
	0x039D4EF0 B.NE 0x39D4F1C
	0x039D4EF4 LDR V0, [X31 + 0x18]
	0x039D4EF8 FMOV D1, 1
	0x039D4EFC FCVTZS X8, D0
	0x039D4F00 FADD D1, D0, D1
	0x039D4F04 ANDS X31, X8, 0x1
	0x039D4F08 FCSEL D0, D0, D1, EQ
	0x039D4F0C B 0x39D4F24
	0x039D4F10 FADD D0, D8, D1
	0x039D4F14 FRINTP D0, D0
	0x039D4F18 B 0x39D4F24
	0x039D4F1C FADD D0, D8, D1
	0x039D4F20 FRINTM D0, D0
	0x039D4F24 LDR V1, [X19 + 0xB0]
	0x039D4F28 MOVZ X9, 0x7FF00000
	0x039D4F2C LDRB W10, [X21 + 0x5D7]
	0x039D4F30 LDR V8, [X19 + 0x98]
	0x039D4F34 FMOV D2, X9
	0x039D4F38 FCVTZS W8, D0
	0x039D4F3C FCMP D0, D2
	0x039D4F40 MOVZ W9, 0x80000000
	0x039D4F44 CSEL W20, W9, W8, EQ
	0x039D4F48 SCVTF S9, S1
	0x039D4F4C CBNZ W10, 0x39D4F64
	0x039D4F50 ADRP X0, 0x71F000
	0x039D4F54 LDR X0, [X0 + 0x5A8]
	0x039D4F58 BL 0x1C16CF4
	0x039D4F5C MOVZ W8, 0x1
	0x039D4F60 STRB W8, [X21 + 0x5D7]
	0x039D4F64 LDR X0, [X22]
	0x039D4F68 FMUL S9, S8, S9
	0x039D4F6C LDR W8, [X0 + 0xE0]
	0x039D4F70 CBNZ W8, 0x39D4F78
	0x039D4F74 BL 0x1C16DFC
	0x039D4F78 FCVT S8, S9
	0x039D4F7C ADD X0, X31, 0x18
	0x039D4F80 MOV V0.16B, V8.16B
	0x039D4F84 BL 0x3EB1C00
	0x039D4F88 FCMP S9, 0x0
	0x039D4F8C B.GE 0x39D4FA8
	0x039D4F90 FMOV D1, -0.5
	0x039D4F94 FCMP D0, D1
	0x039D4F98 B.NE 0x39D4FD0
	0x039D4F9C LDR V0, [X31 + 0x18]
	0x039D4FA0 FMOV D1, -1
	0x039D4FA4 B 0x39D4FBC
	0x039D4FA8 FMOV D1, 0.5
	0x039D4FAC FCMP D0, D1
	0x039D4FB0 B.NE 0x39D4FDC
	0x039D4FB4 LDR V0, [X31 + 0x18]
	0x039D4FB8 FMOV D1, 1
	0x039D4FBC FCVTZS X8, D0
	0x039D4FC0 FADD D1, D0, D1
	0x039D4FC4 ANDS X31, X8, 0x1
	0x039D4FC8 FCSEL D0, D0, D1, EQ
	0x039D4FCC B 0x39D4FE4
	0x039D4FD0 FADD D0, D8, D1
	0x039D4FD4 FRINTP D0, D0
	0x039D4FD8 B 0x39D4FE4
	0x039D4FDC FADD D0, D8, D1
	0x039D4FE0 FRINTM D0, D0
	0x039D4FE4 MOVZ X8, 0x7FF00000
	0x039D4FE8 FMOV D1, X8
	0x039D4FEC FCVTZS W9, D0
	0x039D4FF0 FCMP D0, D1
	0x039D4FF4 MOVZ W8, 0x80000000
	0x039D4FF8 CSEL W8, W8, W9, EQ
	0x039D4FFC MOV W0, W20
	0x039D5000 LDP X20, X19, [X31 + 0x30]
	0x039D5004 LDP X22, X21, [X31 + 0x20]
	0x039D5008 LDR X30, [X31 + 0x10]
	0x039D500C BFM X0, X8, 0x20, 0x1F
	0x039D5010 LDP D9, D8, [X31], #0x40
	0x039D5014 RET
	0x039D5018 SUB X31, X31, 0x80
	0x039D501C STR D8, [X31 + 0x50]
	0x039D5020 STP X30, X21, [X31 + 0x60]
	0x039D5024 STP X20, X19, [X31 + 0x70]
	0x039D5028 LDR X0, [X0 + 0x18]
	0x039D502C FMOV S1, 1
	0x039D5030 MOV X21, X1
	0x039D5034 FMIN S1, S0, S1
	0x039D5038 FCMP S0, 0x0
	0x039D503C FMOV S0, W31
	0x039D5040 ADD X8, X31, 0x28
	0x039D5044 MOV X1, X31
	0x039D5048 MOV W19, W3
	0x039D504C MOV W20, W2
	0x039D5050 FCSEL S8, S1, S0, PL
	0x039D5054 BL 0x3C4B274
	0x039D5058 LDUR V0, [X31 + 0x28]
	0x039D505C LDUR V1, [X31 + 0x38]
	0x039D5060 LDR X8, [X31 + 0x48]
	0x039D5064 AND W3, W19, 0x1
	0x039D5068 ADD X1, X31, 0x0
	0x039D506C STP V0, V1, [X31]
	0x039D5070 MOV X0, X21
	0x039D5074 MOV W2, W20
	0x039D5078 MOV V0.16B, V8.16B
	0x039D507C MOV X4, X31
	0x039D5080 STR X8, [X31 + 0x20]
	0x039D5084 BL 0x3C4FF90
	0x039D5088 LDP X20, X19, [X31 + 0x70]
	0x039D508C LDP X30, X21, [X31 + 0x60]
	0x039D5090 LDR V8, [X31 + 0x50]
	0x039D5094 ADD X31, X31, 0x80
	0x039D5098 RET
	0x039D509C MOVZ W3, 0x1
	0x039D50A0 B 0x39D5018
	0x039D50A4 SUB X31, X31, 0x70
	0x039D50A8 STR X30, [X31 + 0x50]
	0x039D50AC STP X20, X19, [X31 + 0x60]
	0x039D50B0 LDR X0, [X0 + 0x18]
	0x039D50B4 MOV X20, X1
	0x039D50B8 ADD X8, X31, 0x28
	0x039D50BC MOV X1, X31
	0x039D50C0 MOV W19, W2
	0x039D50C4 BL 0x3C4B274
	0x039D50C8 LDUR V0, [X31 + 0x28]
	0x039D50CC LDUR V1, [X31 + 0x38]
	0x039D50D0 LDR X8, [X31 + 0x48]
	0x039D50D4 AND W2, W19, 0x1
	0x039D50D8 ADD X1, X31, 0x0
	0x039D50DC MOV X0, X20
	0x039D50E0 MOV X3, X31
	0x039D50E4 STP V0, V1, [X31]
	0x039D50E8 STR X8, [X31 + 0x20]
	0x039D50EC BL 0x3C4FFFC
	0x039D50F0 LDP X20, X19, [X31 + 0x60]
	0x039D50F4 LDR X30, [X31 + 0x50]
	0x039D50F8 ADD X31, X31, 0x70
	0x039D50FC RET
	0x039D5100 STR X30, [X31 - 0x20]!
	0x039D5104 STP X20, X19, [X31 + 0x10]
	0x039D5108 ADRP X20, 0xA0C000
	0x039D510C ADRP X19, 0x77B000
	0x039D5110 LDRB W8, [X20 + 0xD32]
	0x039D5114 LDR X19, [X19 + 0x9B0]
	0x039D5118 TBNZ X8, 0x0, 0x39D5130
	0x039D511C ADRP X0, 0x77B000
	0x039D5120 LDR X0, [X0 + 0x9B0]
	0x039D5124 BL 0x1C16CF4
	0x039D5128 MOVZ W8, 0x1
	0x039D512C STRB W8, [X20 + 0xD32]
	0x039D5130 LDR X0, [X19]
	0x039D5134 LDR W8, [X0 + 0xE0]
	0x039D5138 CBNZ W8, 0x39D5144
	0x039D513C BL 0x1C16DFC
	0x039D5140 LDR X0, [X19]
	0x039D5144 LDR X8, [X0 + 0xB8]
	0x039D5148 LDR X8, [X8]
	0x039D514C CBZ X8, 0x39D5160
	0x039D5150 LDR W0, [X8 + 0x60]
	0x039D5154 LDP X20, X19, [X31 + 0x10]
	0x039D5158 LDR X30, [X31], #0x20
	0x039D515C RET
	0x039D5160 BL 0x1C16F20
	0x039D5164 STR X30, [X31 - 0x20]!
	0x039D5168 STP X20, X19, [X31 + 0x10]
	0x039D516C ADRP X20, 0xA0C000
	0x039D5170 ADRP X19, 0x77B000
	0x039D5174 LDRB W8, [X20 + 0xD33]
	0x039D5178 LDR X19, [X19 + 0x9B0]
	0x039D517C TBNZ X8, 0x0, 0x39D5194
	0x039D5180 ADRP X0, 0x77B000
	0x039D5184 LDR X0, [X0 + 0x9B0]
	0x039D5188 BL 0x1C16CF4
	0x039D518C MOVZ W8, 0x1
	0x039D5190 STRB W8, [X20 + 0xD33]
	0x039D5194 LDR X0, [X19]
	0x039D5198 LDR W8, [X0 + 0xE0]
	0x039D519C CBNZ W8, 0x39D51A8
	0x039D51A0 BL 0x1C16DFC
	0x039D51A4 LDR X0, [X19]
	0x039D51A8 LDR X8, [X0 + 0xB8]
	0x039D51AC LDR X8, [X8]
	0x039D51B0 CBZ X8, 0x39D51C4
	0x039D51B4 LDR W0, [X8 + 0x64]
	0x039D51B8 LDP X20, X19, [X31 + 0x10]
	0x039D51BC LDR X30, [X31], #0x20
	0x039D51C0 RET
	0x039D51C4 BL 0x1C16F20
	0x039D51C8 STP X30, X21, [X31 - 0x20]!
	0x039D51CC STP X20, X19, [X31 + 0x10]
	0x039D51D0 ADRP X21, 0xA0C000
	0x039D51D4 ADRP X20, 0x77B000
	0x039D51D8 MOV X19, X8
	0x039D51DC LDRB W8, [X21 + 0xD34]
	0x039D51E0 LDR X20, [X20 + 0x9B0]
	0x039D51E4 TBNZ X8, 0x0, 0x39D51FC
	0x039D51E8 ADRP X0, 0x77B000
	0x039D51EC LDR X0, [X0 + 0x9B0]
	0x039D51F0 BL 0x1C16CF4
	0x039D51F4 MOVZ W8, 0x1
	0x039D51F8 STRB W8, [X21 + 0xD34]
	0x039D51FC LDR X0, [X20]
	0x039D5200 LDR W8, [X0 + 0xE0]
	0x039D5204 CBNZ W8, 0x39D5210
	0x039D5208 BL 0x1C16DFC
	0x039D520C LDR X0, [X20]
	0x039D5210 LDR X8, [X0 + 0xB8]
	0x039D5214 LDR X8, [X8]
	0x039D5218 CBZ X8, 0x39D5238
	0x039D521C LDP V1, V0, [X8 + 0x40]
	0x039D5220 LDR V2, [X8 + 0x3]
	0x039D5224 STP V1, V0, [X19 + 0x10]
	0x039D5228 STR V2, [X19]
	0x039D522C LDP X20, X19, [X31 + 0x10]
	0x039D5230 LDP X30, X21, [X31], #0x20
	0x039D5234 RET
	0x039D5238 BL 0x1C16F20
	0x039D523C SUB X31, X31, 0xA0
	0x039D5240 STR X30, [X31 + 0x80]
	0x039D5244 STP X20, X19, [X31 + 0x90]
	0x039D5248 MOV W9, W3
	0x039D524C LDRB W3, [X31 + 0xE0]
	0x039D5250 MOV W8, W4
	0x039D5254 LDRB W11, [X31 + 0xA8]
	0x039D5258 LDRB W12, [X31 + 0xB0]
	0x039D525C LDRB W13, [X31 + 0xB8]
	0x039D5260 LDRB W14, [X31 + 0xC0]
	0x039D5264 LDRB W17, [X31 + 0xD8]
	0x039D5268 LDR W4, [X31 + 0xE8]
	0x039D526C LDR W10, [X31 + 0xA0]
	0x039D5270 LDR W15, [X31 + 0xC8]
	0x039D5274 LDR W16, [X31 + 0xD0]
	0x039D5278 LDR W19, [X31 + 0xF0]
	0x039D527C LDR X20, [X31 + 0xF8]
	0x039D5280 AND W3, W3, 0x1
	0x039D5284 STR W4, [X31 + 0x58]
	0x039D5288 AND W17, W17, 0x1
	0x039D528C AND W14, W14, 0x1
	0x039D5290 AND W13, W13, 0x1
	0x039D5294 AND W12, W12, 0x1
	0x039D5298 AND W11, W11, 0x1
	0x039D529C STR W6, [X31 + 0x8]
	0x039D52A0 STRB W3, [X31 + 0x50]
	0x039D52A4 STR W5, [X31]
	0x039D52A8 MOV W3, W7
	0x039D52AC MOV W4, W7
	0x039D52B0 MOV W5, W7
	0x039D52B4 MOV W6, W9
	0x039D52B8 MOV W7, W8
	0x039D52BC STR X20, [X31 + 0x68]
	0x039D52C0 STR W19, [X31 + 0x60]
	0x039D52C4 STR W16, [X31 + 0x40]
	0x039D52C8 STR W15, [X31 + 0x38]
	0x039D52CC STR W10, [X31 + 0x10]
	0x039D52D0 STRB W17, [X31 + 0x48]
	0x039D52D4 STRB W14, [X31 + 0x30]
	0x039D52D8 STRB W13, [X31 + 0x28]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X29
	003 Move [X31+152], X30
	004 Move [X31+160], X28
	005 Move [X31+168], X27
	006 Move [X31+176], X26
	007 Move [X31+184], X25
	008 Move [X31+192], X24
	009 Move [X31+200], X23
	010 Move [X31+208], X22
	011 Move [X31+216], X21
	012 Move [X31+224], X20
	013 Move [X31+232], X19
	014 Move X22, 0xA0E000
	015 Move X21, 0x780000
	016 Move X20, 0x780000
	017 Move W8, [X22+3369]
	018 Move X21, [X21]
	019 Move X20, [X20+8]
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {81}
	025 Move X0, 0x780000
	026 Move X0, [X0+16]
	027 Call 0x1C17CF4
	028 Move X0, 0x780000
	029 Move X0, [X0+24]
	030 Call 0x1C17CF4
	031 Move X0, 0x780000
	032 Move X0, [X0+32]
	033 Call 0x1C17CF4
	034 Move X0, 0x780000
	035 Move X0, [X0+40]
	036 Call 0x1C17CF4
	037 Move X0, 0x780000
	038 Move X0, [X0+48]
	039 Call 0x1C17CF4
	040 Move X0, 0x780000
	041 Move X0, [X0+56]
	042 Call 0x1C17CF4
	043 Move X0, 0x780000
	044 Move X0, [X0+64]
	045 Call 0x1C17CF4
	046 Move X0, 0x780000
	047 Move X0, [X0+72]
	048 Call 0x1C17CF4
	049 Move X0, 0x780000
	050 Move X0, [X0+80]
	051 Call 0x1C17CF4
	052 Move X0, 0x780000
	053 Move X0, [X0+88]
	054 Call 0x1C17CF4
	055 Move X0, 0x780000
	056 Move X0, [X0+96]
	057 Call 0x1C17CF4
	058 Move X0, 0x780000
	059 Move X0, [X0+104]
	060 Call 0x1C17CF4
	061 Move X0, 0x780000
	062 Move X0, [X0+112]
	063 Call 0x1C17CF4
	064 Move X0, 0x780000
	065 Move X0, [X0+8]
	066 Call 0x1C17CF4
	067 Move X0, 0x780000
	068 Move X0, [X0]
	069 Call 0x1C17CF4
	070 Move X0, 0x780000
	071 Move X0, [X0+120]
	072 Call 0x1C17CF4
	073 Move X0, 0x780000
	074 Move X0, [X0+128]
	075 Call 0x1C17CF4
	076 Move X0, 0x780000
	077 Move X0, [X0+136]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X22+3369], W8
	081 Move X0, [X21]
	082 NotImplemented "Instruction MOVI not yet implemented."
	083 Move [X31+128], X31
	084 Move [X31+136], X31
	085 Move [X31+96], V0
	086 Move [X31+104], V0
	087 Move [X31+48], V0
	088 Move [X31+56], V0
	089 Call 0x1C17F10
	090 Move X1, [X20]
	091 Move X20, X0
	092 Call List`1<ValueTuple`2<Int32, Vector2Int>>..ctor, X0
	093 Move X0, [X19+80]
	094 Compare X0, 0
	095 JumpIfEqual {269}
	096 Move X8, 0x780000
	097 Move X8, [X8+24]
	098 Move X22, 0x780000
	099 Move X28, 0x780000
	100 Move X29, 0x780000
	101 Move X27, 0x780000
	102 Move X26, 0x780000
	103 Move X25, 0x780000
	104 Move X22, [X22+48]
	105 Move X28, [X28+136]
	106 Move X29, [X29+96]
	107 Move X27, [X27+128]
	108 Move X26, [X26+112]
	109 Move X25, [X25+104]
	110 Move X1, [X8]
	111 Move X24, 0x780000
	112 Move X21, 0x780000
	113 Move X24, [X24+56]
	114 Move X21, [X21+40]
	115 Add X8, X31, 16
	116 Call Dictionary`2<Int32, Vector2Int>.GetEnumerator, X0
	117 Move V0, [X31+16]
	118 Move V1, [X31+32]
	119 Move W23, 12
	120 Move [X31+96], V0
	121 Move [X31+104], V1
	122 Move X1, [X22]
	123 Add X0, X31, 96
	124 Call Enumerator<Int32, Vector2Int>.MoveNext, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {163}
	129 Move X1, [X31+112]
	130 Move W8, [X31+120]
	131 Move X3, [X28]
	132 Move [X31+24], W31
	133 Move [X31+80], X1
	134 Move [X31+88], W8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 Move [X31+16], X31
	137 Add X0, X31, 16
	138 Call ValueTuple`2<Int32, Vector2Int>..ctor, X0, X1, X2
	139 Compare X20, 0
	140 JumpIfEqual {267}
	141 Move W10, [X20+28]
	142 Move X1, [X31+16]
	143 Move W2, [X31+24]
	144 Move X8, [X20+16]
	145 Move X9, [X29]
	146 Add W10, W10, 1
	147 Move [X20+28], W10
	148 Compare X8, 0
	149 JumpIfEqual {268}
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Move W11, [X8+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add W9, W10, 1
	154 NotImplemented "Instruction MADD not yet implemented."
	155 Move [X20+24], W9
	156 Move [X8+32], X1
	157 Move [X8+40], W2
	158 Move X8, [X9+32]
	159 Move X8, [X8+192]
	160 Move X3, [X8+112]
	161 Move X0, X20
	162 Call List`1<ValueTuple`2<Int32, Vector2Int>>.AddWithResize, X0, X1
	163 Move X1, [X21]
	164 Add X0, X31, 96
	165 Call Enumerator<Int32, Vector2Int>.Dispose, X0
	166 Move X0, X19
	167 Move X1, X31
	168 Call Texture2DAtlas.ResetAllocator, X0
	169 Move X0, [X27]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {175}
	173 Call 0x1C17DFC
	174 Move X0, [X27]
	175 Move X8, [X0+184]
	176 Move X21, [X8+8]
	177 Compare X21, 0
	178 JumpIfNotEqual {200}
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X27]
	184 Move X9, 0x77F000
	185 Move X8, [X0+184]
	186 Move X9, [X9+16]
	187 Move X22, [X8]
	188 Move X0, [X9]
	189 Call 0x1C17F10
	190 Move X8, 0x77F000
	191 Move X8, [X8+120]
	192 Move X1, X22
	193 Move X3, X31
	194 Move X21, X0
	195 Move X2, [X8]
	196 Call Comparison`1<ValueTuple`2<Int32, Vector2Int>>..ctor, X0, X1, X2
	197 Move X8, [X27]
	198 Move X8, [X8+184]
	199 Move [X8+8], X21
	200 Compare X20, 0
	201 JumpIfEqual {269}
	202 Move X2, [X26]
	203 Move X0, X20
	204 Move X1, X21
	205 Call List`1<ValueTuple`2<Int32, Vector2Int>>.Sort, X0, X1
	206 Move X21, 0xA04000
	207 Move W8, [X21+3674]
	208 Compare W8, 0
	209 JumpIfNotEqual {215}
	210 Move X0, 0x726000
	211 Move X0, [X0+2464]
	212 Call 0x1C17CF4
	213 Move W8, 1
	214 Move [X21+3674], W8
	215 Move X8, 0x726000
	216 Move X8, [X8+2464]
	217 Move X1, [X25]
	218 Move X0, X20
	219 Move X8, [X8]
	220 Move X8, [X8+184]
	221 Move V0, [X8]
	222 Add X8, X31, 16
	223 Move [X31+8], V0
	224 Call List`1<ValueTuple`2<Int32, Vector2Int>>.GetEnumerator, X0
	225 Move V0, [X31+16]
	226 Move V1, [X31+32]
	227 Move W21, 1
	228 Move [X31+48], V0
	229 Move [X31+56], V1
	230 Move X1, [X24]
	231 Add X0, X31, 48
	232 Call Enumerator<ValueTuple`2<Int32, Vector2Int>>.MoveNext, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {247}
	237 Move X8, [X19]
	238 Move W1, [X31+64]
	239 Move W2, [X31+68]
	240 Move W3, [X31+72]
	241 Move X9, [X8+440]
	242 Move X5, [X8+448]
	243 Add X4, X31, 128
	244 Move X0, X19
	245 NotImplemented "Instruction BLR not yet implemented."
	246 And W21, W21, W0
	247 Move X8, 0x77F000
	248 Move X8, [X8+32]
	249 Add X0, X31, 48
	250 Move X1, [X8]
	251 Call Enumerator<ValueTuple`2<Int32, Vector2Int>>.Dispose, X0
	252 And W0, W21, 1
	253 Move X20, [X31+224]
	254 Move X19, [X31+232]
	255 Move X22, [X31+208]
	256 Move X21, [X31+216]
	257 Move X24, [X31+192]
	258 Move X23, [X31+200]
	259 Move X26, [X31+176]
	260 Move X25, [X31+184]
	261 Move X28, [X31+160]
	262 Move X27, [X31+168]
	263 Move X29, [X31+144]
	264 Move X30, [X31+152]
	265 Add X31, X31, 240
	266 Return X0
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Move X19, X0
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X0, X19
	273 Call 0x3EB2AD0
	274 Move X20, [X0]
	275 Call 0x3EB2AE0
	276 Move X8, 0x77F000
	277 Move X8, [X8+32]
	278 Add X0, X31, 48
	279 Move X1, [X8]
	280 Call Enumerator<ValueTuple`2<Int32, Vector2Int>>.Dispose, X0
	281 Compare X20, 0
	282 JumpIfEqual {252}
	283 Move X0, X20
	284 Call 0x1C17F18
	285 Move X20, X31
	286 Move X19, X0
	287 Move X8, 0x77F000
	288 Move X8, [X8+32]
	289 Move X1, [X8]
	290 Add X0, X31, 48
	291 Call Enumerator<ValueTuple`2<Int32, Vector2Int>>.Dispose, X0
	292 Compare X20, 0
	293 JumpIfEqual {317}
	294 Move X0, X20
	295 Call 0x1C17F18
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Call 0x3EB2AD0
	298 Move X8, [X0]
	299 Move [X31+8], X8
	300 Call 0x3EB2AE0
	301 Move X1, [X21]
	302 Add X0, X31, 96
	303 Call Enumerator<Int32, Vector2Int>.Dispose, X0
	304 Move X0, [X31+8]
	305 Compare X0, 0
	306 JumpIfEqual {166}
	307 Call 0x1C17F18
	308 Move X19, X0
	309 Move [X31+8], X31
	310 Move X19, X0
	311 Move X1, [X21]
	312 Add X0, X31, 96
	313 Call Enumerator<Int32, Vector2Int>.Dispose, X0
	314 Move X8, [X31+8]
	315 Compare X8, 0
	316 JumpIfNotEqual {319}
	317 Move X0, X19
	318 Call 0x1D2D690
	319 Move X0, [X31+8]
	320 Call 0x1C17F18
	321 Call 0x1991590

Method: System.Int64 GetApproxCacheSizeInByte(System.Int32 nbElement, System.Int32 resolution, System.Boolean hasMipmap, UnityEngine.Experimental.Rendering.GraphicsFormat format)

Disassembly:
	0x039D52DC STRB W12, [X31 + 0x20]
	0x039D52E0 STRB W11, [X31 + 0x18]
	0x039D52E4 BL 0x39D5454
	0x039D52E8 LDP X20, X19, [X31 + 0x90]
	0x039D52EC LDR X30, [X31 + 0x80]
	0x039D52F0 ADD X31, X31, 0xA0
	0x039D52F4 RET
	0x039D52F8 SUB X31, X31, 0xE0
	0x039D52FC STR D8, [X31 + 0x80]
	0x039D5300 STR X30, [X31 + 0x88]
	0x039D5304 STP X28, X27, [X31 + 0x90]
	0x039D5308 STP X26, X25, [X31 + 0xA0]
	0x039D530C STP X24, X23, [X31 + 0xB0]
	0x039D5310 STP X22, X21, [X31 + 0xC0]
	0x039D5314 STP X20, X19, [X31 + 0xD0]
	0x039D5318 ADRP X28, 0xA0C000
	0x039D531C ADRP X27, 0x77B000
	0x039D5320 LDRB W8, [X28 + 0xD36]
	0x039D5324 LDR X27, [X27 + 0x9B0]
	0x039D5328 MOV V8.16B, V0.16B
	0x039D532C MOV W26, W7
	0x039D5330 MOV W19, W6
	0x039D5334 MOV W20, W5
	0x039D5338 MOV W21, W4
	0x039D533C MOV W22, W3
	0x039D5340 MOV W23, W2
	0x039D5344 MOV W24, W1
	0x039D5348 MOV W25, W0
	0x039D534C TBNZ X8, 0x0, 0x39D5364
	0x039D5350 ADRP X0, 0x77B000
	0x039D5354 LDR X0, [X0 + 0x9B0]
	0x039D5358 BL 0x1C16CF4
	0x039D535C MOVZ W8, 0x1
	0x039D5360 STRB W8, [X28 + 0xD36]
	0x039D5364 LDR X0, [X27]
	0x039D5368 LDR W8, [X0 + 0xE0]
	0x039D536C CBNZ W8, 0x39D5378
	0x039D5370 BL 0x1C16DFC
	0x039D5374 LDR X0, [X27]
	0x039D5378 LDR X8, [X0 + 0xB8]
	0x039D537C LDR X0, [X8]
	0x039D5380 CBZ X0, 0x39D5450
	0x039D5384 LDR X8, [X31 + 0x140]
	0x039D5388 LDR W9, [X31 + 0x138]
	0x039D538C LDR W10, [X31 + 0x130]
	0x039D5390 LDRB W11, [X31 + 0x128]
	0x039D5394 LDRB W12, [X31 + 0x120]
	0x039D5398 LDR W13, [X31 + 0x118]
	0x039D539C LDRB W15, [X31 + 0x108]
	0x039D53A0 LDRB W16, [X31 + 0x100]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xA0D000
	011 Move X24, 0x77F000
	012 Move W8, [X23+3370]
	013 Move X24, [X24+144]
	014 Move W19, W3
	015 Move W22, W2
	016 Move W20, W1
	017 Move W21, W0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x77F000
	023 Move X0, [X0+144]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3370], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, -49192960
	033 Move V0, [X8+796]
	034 Multiply W8, W20, W21
	035 And W31, W22, 1
	036 Move S1, 1
	037 Multiply W8, W8, W20
	038 Move W0, W19
	039 Move X1, X31
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 NotImplemented "Instruction SCVTF not yet implemented."
	042 Call GraphicsFormatUtility.GetBlockSize, X0
	043 NotImplemented "Instruction UCVTF not yet implemented."
	044 Multiply S0, S8, S0
	045 Move X8, 0x7FF00000
	046 NotImplemented "Instruction FCVT not yet implemented."
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Move X22, [X31+48]
	050 Move X21, [X31+56]
	051 Move X24, [X31+32]
	052 Move X23, [X31+40]
	053 Move X30, [X31+16]
	054 Move D1, X8
	055 Multiply D0, D9, D0
	056 NotImplemented "Instruction FCVTZS not yet implemented."
	057 NotImplemented "Instruction FCMP not yet implemented."
	058 Move X9, 0x80000000
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move D9, [X31+80]
	061 Move D8, [X31+88]
	062 Return X0

Method: System.Int32 GetMaxCacheSizeForWeightInByte(System.Int32 weight, System.Boolean hasMipmap, UnityEngine.Experimental.Rendering.GraphicsFormat format)

Disassembly:
	0x039D53A4 LDRB W17, [X31 + 0xF8]
	0x039D53A8 LDRB W1, [X31 + 0xF0]
	0x039D53AC LDR W2, [X31 + 0xE8]
	0x039D53B0 LDR W3, [X31 + 0xE0]
	0x039D53B4 LDR W14, [X31 + 0x110]
	0x039D53B8 STR X8, [X31 + 0x68]
	0x039D53BC STR W9, [X31 + 0x60]
	0x039D53C0 STR W10, [X31 + 0x58]
	0x039D53C4 AND W8, W11, 0x1
	0x039D53C8 AND W9, W12, 0x1
	0x039D53CC STR W13, [X31 + 0x40]
	0x039D53D0 AND W10, W15, 0x1
	0x039D53D4 AND W11, W16, 0x1
	0x039D53D8 AND W12, W17, 0x1
	0x039D53DC AND W13, W1, 0x1
	0x039D53E0 STR W2, [X31 + 0x10]
	0x039D53E4 STR W3, [X31 + 0x8]
	0x039D53E8 MOV V0.16B, V8.16B
	0x039D53EC MOV W1, W25
	0x039D53F0 MOV W2, W24
	0x039D53F4 MOV W3, W23
	0x039D53F8 MOV W4, W22
	0x039D53FC MOV W5, W21
	0x039D5400 MOV W6, W20
	0x039D5404 MOV W7, W19
	0x039D5408 STR W14, [X31 + 0x38]
	0x039D540C STRB W8, [X31 + 0x50]
	0x039D5410 STRB W9, [X31 + 0x48]
	0x039D5414 STRB W10, [X31 + 0x30]
	0x039D5418 STRB W11, [X31 + 0x28]
	0x039D541C STRB W12, [X31 + 0x20]
	0x039D5420 STRB W13, [X31 + 0x18]
	0x039D5424 STR W26, [X31]
	0x039D5428 BL 0x39D5454
	0x039D542C LDP X20, X19, [X31 + 0xD0]
	0x039D5430 LDP X22, X21, [X31 + 0xC0]
	0x039D5434 LDP X24, X23, [X31 + 0xB0]
	0x039D5438 LDP X26, X25, [X31 + 0xA0]
	0x039D543C LDP X28, X27, [X31 + 0x90]
	0x039D5440 LDR X30, [X31 + 0x88]
	0x039D5444 LDR V8, [X31 + 0x80]
	0x039D5448 ADD X31, X31, 0xE0
	0x039D544C RET
	0x039D5450 BL 0x1C16F20
	0x039D5454 SUB X31, X31, 0xF0
	0x039D5458 STR D8, [X31 + 0x80]
	0x039D545C STP X29, X30, [X31 + 0x90]
	0x039D5460 STP X28, X27, [X31 + 0xA0]
	0x039D5464 STP X26, X25, [X31 + 0xB0]
	0x039D5468 STP X24, X23, [X31 + 0xC0]
	0x039D546C STP X22, X21, [X31 + 0xD0]
	0x039D5470 STP X20, X19, [X31 + 0xE0]
	0x039D5474 ADRP X19, 0xA0C000
	0x039D5478 LDRB W8, [X19 + 0xD54]
	0x039D547C LDR W22, [X31 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA0D000
	008 Move X22, 0x77F000
	009 Move W8, [X23+3371]
	010 Move X22, [X22+144]
	011 Move W21, W2
	012 Move W19, W1
	013 Move W20, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x747000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x77F000
	022 Move X0, [X0+144]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3371], W8
	026 Move X0, [X22]
	027 Move X22, 0x747000
	028 Move W8, [X0+224]
	029 Move X22, [X22+2296]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W0, W21
	034 Move X1, X31
	035 Call GraphicsFormatUtility.GetBlockSize, X0
	036 Move X8, [X22]
	037 Move W21, W0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, -49192960
	044 Move V0, [X8+796]
	045 And W31, W19, 1
	046 Move S2, 1
	047 NotImplemented "Instruction SCVTF not yet implemented."
	048 NotImplemented "Instruction FCSEL not yet implemented."
	049 NotImplemented "Instruction UCVTF not yet implemented."
	050 Multiply S0, S0, S2
	051 Move W8, 0x7F800000
	052 NotImplemented "Instruction FDIV not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move S2, W8
	058 NotImplemented "Instruction FSQRT not yet implemented."
	059 NotImplemented "Instruction FCVTZS not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move W9, 0x80000000
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move X1, X31
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Call CoreUtils.PreviousPowerOfTwo, X0
	067 Return X0

