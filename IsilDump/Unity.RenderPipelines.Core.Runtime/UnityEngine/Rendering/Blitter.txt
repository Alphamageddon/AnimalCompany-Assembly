Type: UnityEngine.Rendering.Blitter

Method: System.Void Initialize(UnityEngine.Shader blitPS, UnityEngine.Shader blitColorAndDepthPS)

Disassembly:
	0x039E2430 CBNZ W8, 0x39E243C
	0x039E2434 BL 0x1C16DFC
	0x039E2438 LDR X0, [X24]
	0x039E243C LDR X8, [X25]
	0x039E2440 LDR X9, [X0 + 0xB8]
	0x039E2444 LDR W10, [X8 + 0xE0]
	0x039E2448 LDR X23, [X9 + 0x20]
	0x039E244C CBNZ W10, 0x39E2458
	0x039E2450 MOV X0, X8
	0x039E2454 BL 0x1C16DFC
	0x039E2458 CBZ X23, 0x39E24E8
	0x039E245C LDR X8, [X25]
	0x039E2460 MOV X0, X23
	0x039E2464 MOV V0.16B, V11.16B
	0x039E2468 MOV V1.16B, V10.16B
	0x039E246C LDR X8, [X8 + 0xB8]
	0x039E2470 MOV V2.16B, V9.16B
	0x039E2474 MOV V3.16B, V8.16B
	0x039E2478 MOV X2, X31
	0x039E247C LDR W1, [X8 + 0x8]
	0x039E2480 BL 0x3C12720
	0x039E2484 LDR X8, [X24]
	0x039E2488 LDR X9, [X25]
	0x039E248C MOV X0, X22
	0x039E2490 MOV X1, X31
	0x039E2494 LDR X8, [X8 + 0xB8]
	0x039E2498 LDR X9, [X9 + 0xB8]
	0x039E249C LDR X24, [X8 + 0x20]
	0x039E24A0 LDR W23, [X9]
	0x039E24A4 BL 0x39D4944
	0x039E24A8 CBZ X24, 0x39E24E8
	0x039E24AC MOV X2, X0
	0x039E24B0 MOV X0, X24
	0x039E24B4 MOV W1, W23
	0x039E24B8 MOV X3, X31
	0x039E24BC BL 0x3C12828
	0x039E24C0 MOV X0, X21
	0x039E24C4 MOV X1, X20
	0x039E24C8 MOV W2, W19
	0x039E24CC LDP X20, X19, [X31 + 0x50]
	0x039E24D0 LDP X22, X21, [X31 + 0x40]
	0x039E24D4 LDP X24, X23, [X31 + 0x30]
	0x039E24D8 LDP X30, X25, [X31 + 0x20]
	0x039E24DC LDP D9, D8, [X31 + 0x10]
	0x039E24E0 LDP D11, D10, [X31], #0x60
	0x039E24E4 B 0x39E1F00
	0x039E24E8 BL 0x1C16F20
	0x039E24EC STR D12, [X31 - 0x60]!
	0x039E24F0 STP D11, D10, [X31 + 0x8]
	0x039E24F4 STP D9, D8, [X31 + 0x18]
	0x039E24F8 STR X30, [X31 + 0x28]
	0x039E24FC STP X24, X23, [X31 + 0x30]
	0x039E2500 STP X22, X21, [X31 + 0x40]
	0x039E2504 STP X20, X19, [X31 + 0x50]
	0x039E2508 ADRP X22, 0x9FF000
	0x039E250C ADRP X23, 0x770000
	0x039E2510 LDRB W8, [X22 + 0xDCB]
	0x039E2514 LDR X23, [X23 + 0xE28]
	0x039E2518 MOV W19, W2
	0x039E251C MOV V12.16B, V4.16B
	0x039E2520 MOV V8.16B, V3.16B
	0x039E2524 MOV V9.16B, V2.16B
	0x039E2528 MOV V10.16B, V1.16B
	0x039E252C MOV V11.16B, V0.16B
	0x039E2530 MOV X20, X1
	0x039E2534 MOV X21, X0
	0x039E2538 TBNZ X8, 0x0, 0x39E255C
	0x039E253C ADRP X0, 0x771000
	0x039E2540 LDR X0, [X0 + 0x1B0]
	0x039E2544 BL 0x1C16CF4
	0x039E2548 ADRP X0, 0x770000
	0x039E254C LDR X0, [X0 + 0xE28]
	0x039E2550 BL 0x1C16CF4
	0x039E2554 MOVZ W8, 0x1
	0x039E2558 STRB W8, [X22 + 0xDCB]
	0x039E255C LDR X0, [X23]
	0x039E2560 ADRP X24, 0x771000
	0x039E2564 LDR W8, [X0 + 0xE0]
	0x039E2568 LDR X24, [X24 + 0x1B0]
	0x039E256C CBNZ W8, 0x39E2578
	0x039E2570 BL 0x1C16DFC
	0x039E2574 LDR X0, [X23]
	0x039E2578 LDR X8, [X24]
	0x039E257C LDR X9, [X0 + 0xB8]
	0x039E2580 LDR W10, [X8 + 0xE0]
	0x039E2584 LDR X22, [X9 + 0x20]
	0x039E2588 CBNZ W10, 0x39E2594
	0x039E258C MOV X0, X8
	0x039E2590 BL 0x1C16DFC
	0x039E2594 CBZ X22, 0x39E2618
	0x039E2598 LDR X8, [X24]
	0x039E259C MOV X0, X22
	0x039E25A0 MOV V0.16B, V12.16B
	0x039E25A4 MOV X2, X31
	0x039E25A8 LDR X8, [X8 + 0xB8]
	0x039E25AC LDR W1, [X8 + 0x10]
	0x039E25B0 BL 0x3C125FC
	0x039E25B4 MOVZ W0, 0x2
	0x039E25B8 MOV W1, W31
	0x039E25BC BL 0x39E1E80
	0x039E25C0 LDR X8, [X23]
	0x039E25C4 MOV X22, X0
	0x039E25C8 LDR W9, [X8 + 0xE0]
	0x039E25CC CBNZ W9, 0x39E25D8
	0x039E25D0 MOV X0, X8
	0x039E25D4 BL 0x1C16DFC
	0x039E25D8 AND W3, W19, 0x1
	0x039E25DC MOV X0, X21
	0x039E25E0 MOV X1, X20
	0x039E25E4 MOV V0.16B, V11.16B
	0x039E25E8 MOV V1.16B, V10.16B
	0x039E25EC MOV V2.16B, V9.16B
	0x039E25F0 MOV V3.16B, V8.16B
	0x039E25F4 MOV X2, X22
	0x039E25F8 LDP X20, X19, [X31 + 0x50]
	0x039E25FC LDP X22, X21, [X31 + 0x40]
	0x039E2600 LDP X24, X23, [X31 + 0x30]
	0x039E2604 LDR X30, [X31 + 0x28]
	0x039E2608 LDP D9, D8, [X31 + 0x18]
	0x039E260C LDP D11, D10, [X31 + 0x8]
	0x039E2610 LDR V12, [X31], #0x60
	0x039E2614 B 0x39E23B4
	0x039E2618 BL 0x1C16F20
	0x039E261C STR D12, [X31 - 0x70]!
	0x039E2620 STP D11, D10, [X31 + 0x10]
	0x039E2624 STP D9, D8, [X31 + 0x20]
	0x039E2628 STP X30, X25, [X31 + 0x30]
	0x039E262C STP X24, X23, [X31 + 0x40]
	0x039E2630 STP X22, X21, [X31 + 0x50]
	0x039E2634 STP X20, X19, [X31 + 0x60]
	0x039E2638 ADRP X23, 0x9FF000
	0x039E263C ADRP X24, 0x770000
	0x039E2640 LDRB W8, [X23 + 0xDCC]
	0x039E2644 LDR X24, [X24 + 0xE28]
	0x039E2648 MOV W19, W3
	0x039E264C MOV V12.16B, V4.16B
	0x039E2650 MOV V8.16B, V3.16B
	0x039E2654 MOV V9.16B, V2.16B
	0x039E2658 MOV V10.16B, V1.16B
	0x039E265C MOV V11.16B, V0.16B
	0x039E2660 MOV X21, X2
	0x039E2664 MOV X22, X1
	0x039E2668 MOV X20, X0
	0x039E266C TBNZ X8, 0x0, 0x39E2690
	0x039E2670 ADRP X0, 0x771000
	0x039E2674 LDR X0, [X0 + 0x1B0]
	0x039E2678 BL 0x1C16CF4
	0x039E267C ADRP X0, 0x770000
	0x039E2680 LDR X0, [X0 + 0xE28]
	0x039E2684 BL 0x1C16CF4
	0x039E2688 MOVZ W8, 0x1
	0x039E268C STRB W8, [X23 + 0xDCC]
	0x039E2690 LDR X0, [X24]
	0x039E2694 ADRP X25, 0x771000
	0x039E2698 LDR W8, [X0 + 0xE0]
	0x039E269C LDR X25, [X25 + 0x1B0]
	0x039E26A0 CBNZ W8, 0x39E26AC
	0x039E26A4 BL 0x1C16DFC
	0x039E26A8 LDR X0, [X24]
	0x039E26AC LDR X8, [X25]
	0x039E26B0 LDR X9, [X0 + 0xB8]
	0x039E26B4 LDR W10, [X8 + 0xE0]
	0x039E26B8 LDR X23, [X9 + 0x20]
	0x039E26BC CBNZ W10, 0x39E26C8
	0x039E26C0 MOV X0, X8
	0x039E26C4 BL 0x1C16DFC
	0x039E26C8 CBZ X23, 0x39E27FC
	0x039E26CC LDR X8, [X25]
	0x039E26D0 MOV X0, X23
	0x039E26D4 MOV V0.16B, V12.16B
	0x039E26D8 MOV X2, X31
	0x039E26DC LDR X8, [X8 + 0xB8]
	0x039E26E0 LDR W1, [X8 + 0x10]
	0x039E26E4 BL 0x3C125FC
	0x039E26E8 LDR X8, [X24]
	0x039E26EC LDR X8, [X8 + 0xB8]
	0x039E26F0 LDR X0, [X8 + 0x20]
	0x039E26F4 CBZ X0, 0x39E27FC
	0x039E26F8 LDR X8, [X25]
	0x039E26FC MOV V0.16B, V11.16B
	0x039E2700 MOV V1.16B, V10.16B
	0x039E2704 MOV V2.16B, V9.16B
	0x039E2708 LDR X8, [X8 + 0xB8]
	0x039E270C MOV V3.16B, V8.16B
	0x039E2710 MOV X2, X31
	0x039E2714 LDR W1, [X8 + 0x8]
	0x039E2718 BL 0x3C12720
	0x039E271C LDR X8, [X24]
	0x039E2720 LDR X8, [X8 + 0xB8]
	0x039E2724 LDR X0, [X8 + 0x20]
	0x039E2728 CBZ X0, 0x39E27FC
	0x039E272C LDR X8, [X25]
	0x039E2730 MOV X2, X22
	0x039E2734 MOV X3, X31
	0x039E2738 LDR X8, [X8 + 0xB8]
	0x039E273C LDR W1, [X8]
	0x039E2740 BL 0x3C12828
	0x039E2744 TBZ X19, 0x0, 0x39E279C
	0x039E2748 LDR X0, [X24]
	0x039E274C LDR W8, [X0 + 0xE0]
	0x039E2750 CBNZ W8, 0x39E275C
	0x039E2754 BL 0x1C16DFC
	0x039E2758 LDR X0, [X24]
	0x039E275C LDR X8, [X25]
	0x039E2760 LDR X9, [X0 + 0xB8]
	0x039E2764 LDR W10, [X8 + 0xE0]
	0x039E2768 LDR X22, [X9 + 0x20]
	0x039E276C CBNZ W10, 0x39E2778
	0x039E2770 MOV X0, X8
	0x039E2774 BL 0x1C16DFC
	0x039E2778 CBZ X22, 0x39E27FC
	0x039E277C LDR X8, [X25]
	0x039E2780 MOVZ W3, 0x1
	0x039E2784 MOV X0, X22
	0x039E2788 MOV X2, X21
	0x039E278C LDR X8, [X8 + 0xB8]
	0x039E2790 MOV X4, X31
	0x039E2794 LDR W1, [X8 + 0x20]
	0x039E2798 BL 0x3C1287C
	0x039E279C LDR X0, [X24]
	0x039E27A0 LDR W8, [X0 + 0xE0]
	0x039E27A4 CBZ W8, 0x39E27B4
	0x039E27A8 LDR X8, [X0 + 0xB8]
	0x039E27AC LDR X21, [X8 + 0x18]
	0x039E27B0 B 0x39E27D0
	0x039E27B4 BL 0x1C16DFC
	0x039E27B8 LDR X0, [X24]
	0x039E27BC LDR X8, [X0 + 0xB8]
	0x039E27C0 LDR W9, [X0 + 0xE0]
	0x039E27C4 LDR X21, [X8 + 0x18]
	0x039E27C8 CBNZ W9, 0x39E27D0
	0x039E27CC BL 0x1C16DFC
	0x039E27D0 AND W2, W19, 0x1
	0x039E27D4 MOV X0, X20
	0x039E27D8 MOV X1, X21
	0x039E27DC LDP X20, X19, [X31 + 0x60]
	0x039E27E0 LDP X22, X21, [X31 + 0x50]
	0x039E27E4 LDP X24, X23, [X31 + 0x40]
	0x039E27E8 LDP X30, X25, [X31 + 0x30]
	0x039E27EC LDP D9, D8, [X31 + 0x20]
	0x039E27F0 LDP D11, D10, [X31 + 0x10]
	0x039E27F4 LDR V12, [X31], #0x70
	0x039E27F8 B 0x39E1F00
	0x039E27FC BL 0x1C16F20
	0x039E2800 SUB X31, X31, 0xC0
	0x039E2804 STP D11, D10, [X31 + 0x60]
	0x039E2808 STP D9, D8, [X31 + 0x70]
	0x039E280C STR X30, [X31 + 0x80]
	0x039E2810 STP X24, X23, [X31 + 0x90]
	0x039E2814 STP X22, X21, [X31 + 0xA0]
	0x039E2818 STP X20, X19, [X31 + 0xB0]
	0x039E281C ADRP X24, 0x9FF000
	0x039E2820 ADRP X23, 0x770000
	0x039E2824 LDRB W8, [X24 + 0xDCE]
	0x039E2828 LDR X23, [X23 + 0xE28]
	0x039E282C MOV W19, W3
	0x039E2830 MOV X20, X2
	0x039E2834 MOV V8.16B, V3.16B
	0x039E2838 MOV V9.16B, V2.16B
	0x039E283C MOV V10.16B, V1.16B
	0x039E2840 MOV V11.16B, V0.16B
	0x039E2844 MOV X22, X1
	0x039E2848 MOV X21, X0
	0x039E284C TBNZ X8, 0x0, 0x39E2870
	0x039E2850 ADRP X0, 0x771000
	0x039E2854 LDR X0, [X0 + 0x1B0]
	0x039E2858 BL 0x1C16CF4
	0x039E285C ADRP X0, 0x770000
	0x039E2860 LDR X0, [X0 + 0xE28]
	0x039E2864 BL 0x1C16CF4
	0x039E2868 MOVZ W8, 0x1
	0x039E286C STRB W8, [X24 + 0xDCE]
	0x039E2870 LDR X0, [X23]
	0x039E2874 ADRP X24, 0x771000
	0x039E2878 LDR W8, [X0 + 0xE0]
	0x039E287C LDR X24, [X24 + 0x1B0]
	0x039E2880 CBNZ W8, 0x39E288C
	0x039E2884 BL 0x1C16DFC
	0x039E2888 LDR X0, [X23]
	0x039E288C LDR X8, [X24]
	0x039E2890 LDR X9, [X0 + 0xB8]
	0x039E2894 LDR W10, [X8 + 0xE0]
	0x039E2898 LDR X23, [X9 + 0x20]
	0x039E289C CBNZ W10, 0x39E28A8
	0x039E28A0 MOV X0, X8
	0x039E28A4 BL 0x1C16DFC
	0x039E28A8 CBZ X23, 0x39E2944
	0x039E28AC LDR X8, [X24]
	0x039E28B0 MOV X0, X23
	0x039E28B4 MOV V0.16B, V11.16B
	0x039E28B8 MOV V1.16B, V10.16B
	0x039E28BC LDR X8, [X8 + 0xB8]
	0x039E28C0 MOV V2.16B, V9.16B
	0x039E28C4 MOV V3.16B, V8.16B
	0x039E28C8 MOV X2, X31
	0x039E28CC LDR W1, [X8 + 0x8]
	0x039E28D0 BL 0x3C12720
	0x039E28D4 LDR X8, [X24]
	0x039E28D8 LDR X9, [X22 + 0x20]
	0x039E28DC LDP V1, V0, [X22]
	0x039E28E0 LDR X8, [X8 + 0xB8]
	0x039E28E4 LDR W1, [X8]
	0x039E28E8 STR X9, [X31 + 0x50]
	0x039E28EC STP V1, V0, [X31 + 0x30]
	0x039E28F0 CBZ X21, 0x39E2944
	0x039E28F4 LDP V0, V1, [X31 + 0x30]
	0x039E28F8 LDR X8, [X31 + 0x50]
	0x039E28FC ADD X2, X31, 0x0
	0x039E2900 MOV X0, X21
	0x039E2904 MOV X3, X31
	0x039E2908 STP V0, V1, [X31]
	0x039E290C STR X8, [X31 + 0x20]
	0x039E2910 BL 0x3C4FCFC
	0x039E2914 MOV X0, X21
	0x039E2918 MOV X1, X20
	0x039E291C MOV W2, W19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X21, 0xA00000
	013 Move X22, 0x771000
	014 Move W8, [X21+3525]
	015 Move X22, [X22+3624]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x771000
	023 Move X0, [X0+3624]
	024 Call 0x1C17CF4
	025 Move X0, 0x73A000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move X0, 0x713000
	029 Move X0, [X0+3672]
	030 Call 0x1C17CF4
	031 Move X0, 0x719000
	032 Move X0, [X0+1792]
	033 Call 0x1C17CF4
	034 Move X0, 0x712000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x76F000
	038 Move X0, [X0+1560]
	039 Call 0x1C17CF4
	040 Move X0, 0x772000
	041 Move X0, [X0+880]
	042 Call 0x1C17CF4
	043 Move X0, 0x772000
	044 Move X0, [X0+888]
	045 Call 0x1C17CF4
	046 Move X0, 0x772000
	047 Move X0, [X0+896]
	048 Call 0x1C17CF4
	049 Move X0, 0x772000
	050 Move X0, [X0+904]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+3525], W8
	054 Move X0, [X22]
	055 Move X23, 0x712000
	056 Move W8, [X0+224]
	057 Move X23, [X23+1432]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X22]
	062 Move X8, [X23]
	063 Move X9, [X0+184]
	064 Move W10, [X8+224]
	065 Move X21, [X9]
	066 Compare W10, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {341}
	078 Move X24, 0x73A000
	079 Move X24, [X24+2296]
	080 Move X0, [X24]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X26, 0x772000
	086 Move X25, 0x76F000
	087 Move X26, [X26+888]
	088 Move X25, [X25+1560]
	089 Move X0, X19
	090 Call CoreUtils.CreateEngineMaterial, X0
	091 Move X8, [X22]
	092 Move X21, X0
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X8, [X22]
	099 Move X8, [X8+184]
	100 Move X0, X20
	101 Move [X8], X21
	102 Call CoreUtils.CreateEngineMaterial, X0
	103 Move X8, [X22]
	104 Move X1, X19
	105 Move X3, X31
	106 Move X8, [X8+184]
	107 Move [X8+24], X0
	108 Move X2, [X26]
	109 Add X0, X31, 8
	110 Move [X31+8], X31
	111 Move [X31+16], X31
	112 Move [X31+24], X31
	113 Call LocalKeyword..ctor, X0, X1, X2
	114 Move X8, [X22]
	115 Move X9, [X31+24]
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 Move X8, [X8+184]
	118 Move [X8+72], X9
	119 Move [X8+56], V0
	120 Move X0, [X25]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Call TextureXR.get_useTexArray
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {167}
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X22]
	136 Move X8, [X0+184]
	137 Move X0, [X8]
	138 Compare X0, 0
	139 JumpIfEqual {340}
	140 Move X8, 0x772000
	141 Move X8, [X8+896]
	142 Move X2, X31
	143 Move X1, [X8]
	144 Call Material.EnableKeyword, X0, X1
	145 Move X0, [X24]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X19
	151 Call CoreUtils.CreateEngineMaterial, X0
	152 Move X8, [X22]
	153 Move X8, [X8+184]
	154 Move [X8+8], X0
	155 Move X0, X19
	156 Call CoreUtils.CreateEngineMaterial, X0
	157 Move X8, [X22]
	158 Move X8, [X8+184]
	159 Move [X8+16], X0
	160 Compare X0, 0
	161 JumpIfEqual {340}
	162 Move X8, 0x772000
	163 Move X8, [X8+904]
	164 Move X2, X31
	165 Move X1, [X8]
	166 Call Material.EnableKeyword, X0, X1
	167 Move X0, X31
	168 Call SystemInfo.get_graphicsShaderLevel
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, X31
	171 Call SystemInfo.get_usesReversedZBuffer
	172 Move W8, W0
	173 Move X0, [X22]
	174 And W31, W8, 1
	175 Move S0, -1
	176 Move S1, 1
	177 Move W9, [X0+224]
	178 NotImplemented "Instruction FCSEL not yet implemented."
	179 Compare W9, 0
	180 JumpIfNotEqual {183}
	181 Call 0x1C17DFC
	182 Move X0, [X22]
	183 Move X8, [X23]
	184 Move X9, [X0+184]
	185 Move W10, [X8+224]
	186 Move X19, [X9+40]
	187 Compare W10, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X8
	190 Call 0x1C17DFC
	191 Move X0, X19
	192 Move X1, X31
	193 Call Object.op_Implicit, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {254}
	198 Move X8, 0x719000
	199 Move X8, [X8+1792]
	200 Move X0, [X8]
	201 Call 0x1C17F10
	202 Move X1, X31
	203 Move X19, X0
	204 Call Mesh..ctor, X0
	205 Move X0, [X22]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {211}
	209 Call 0x1C17DFC
	210 Move X0, [X22]
	211 Move X8, [X0+184]
	212 Move V0, V8
	213 Move [X8+40], X19
	214 Call Blitter.<Initialize>g__GetFullScreenTriangleVertexPosition|9_0, V0
	215 Compare X19, 0
	216 JumpIfEqual {340}
	217 Move X1, X0
	218 Move X0, X19
	219 Move X2, X31
	220 Call Mesh.set_vertices, X0, X1
	221 Move X8, [X22]
	222 Move X8, [X8+184]
	223 Move X19, [X8+40]
	224 Call Blitter.<Initialize>g__GetFullScreenTriangleTexCoord|9_1
	225 Compare X19, 0
	226 JumpIfEqual {340}
	227 Move X1, X0
	228 Move X0, X19
	229 Move X2, X31
	230 Call Mesh.set_uv, X0, X1
	231 Move X8, [X22]
	232 Move X9, 0x713000
	233 Move W1, 3
	234 Move X8, [X8+184]
	235 Move X9, [X9+3672]
	236 Move X19, [X8+40]
	237 Move X0, [X9]
	238 Call 0x1C17D6C
	239 Compare X0, 0
	240 JumpIfEqual {340}
	241 Move W8, [X0+24]
	242 Move X1, X0
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W9, 1
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X1+36], W9
	247 Move W8, 2
	248 Move [X1+40], W8
	249 Compare X19, 0
	250 JumpIfEqual {340}
	251 Move X0, X19
	252 Move X2, X31
	253 Call Mesh.set_triangles, X0, X1
	254 Move X0, [X22]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {260}
	258 Call 0x1C17DFC
	259 Move X0, [X22]
	260 Move X8, [X23]
	261 Move X9, [X0+184]
	262 Move W10, [X8+224]
	263 Move X19, [X9+48]
	264 Compare W10, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X8
	267 Call 0x1C17DFC
	268 Move X0, X19
	269 Move X1, X31
	270 Call Object.op_Implicit, X0
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {328}
	275 Move X8, 0x719000
	276 Move X8, [X8+1792]
	277 Move X0, [X8]
	278 Call 0x1C17F10
	279 Move X1, X31
	280 Move X19, X0
	281 Call Mesh..ctor, X0
	282 Move X0, [X22]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {288}
	286 Call 0x1C17DFC
	287 Move X0, [X22]
	288 Move X8, [X0+184]
	289 Move V0, V8
	290 Move [X8+48], X19
	291 Call Blitter.<Initialize>g__GetQuadVertexPosition|9_2, V0
	292 Compare X19, 0
	293 JumpIfEqual {340}
	294 Move X1, X0
	295 Move X0, X19
	296 Move X2, X31
	297 Call Mesh.set_vertices, X0, X1
	298 Move X8, [X22]
	299 Move X8, [X8+184]
	300 Move X19, [X8+48]
	301 Call Blitter.<Initialize>g__GetQuadTexCoord|9_3
	302 Compare X19, 0
	303 JumpIfEqual {340}
	304 Move X1, X0
	305 Move X0, X19
	306 Move X2, X31
	307 Call Mesh.set_uv, X0, X1
	308 Move X8, [X22]
	309 Move X9, 0x713000
	310 Move W1, 6
	311 Move X8, [X8+184]
	312 Move X9, [X9+3672]
	313 Move X19, [X8+48]
	314 Move X0, [X9]
	315 Call 0x1C17D6C
	316 Move X8, 0x772000
	317 Move X8, [X8+880]
	318 Move X2, X31
	319 Move X20, X0
	320 Move X1, [X8]
	321 Call RuntimeHelpers.InitializeArray, X0, X1
	322 Compare X19, 0
	323 JumpIfEqual {340}
	324 Move X0, X19
	325 Move X1, X20
	326 Move X2, X31
	327 Call Mesh.set_triangles, X0, X1
	328 Move X20, [X31+96]
	329 Move X19, [X31+104]
	330 Move X22, [X31+80]
	331 Move X21, [X31+88]
	332 Move X24, [X31+64]
	333 Move X23, [X31+72]
	334 Move X26, [X31+48]
	335 Move X25, [X31+56]
	336 Move X30, [X31+40]
	337 Move V8, [X31+32]
	338 Add X31, X31, 112
	339 Return 
	340 Call 0x1C17F20
	341 Move X0, 0x712000
	342 Move X0, [X0+2000]
	343 Call 0x1C17D08
	344 Call 0x1C17F10
	345 Move X19, X0
	346 Move X0, 0x772000
	347 Move X0, [X0+912]
	348 Call 0x1C17D08
	349 Move X1, X0
	350 Move X0, X19
	351 Move X2, X31
	352 Call Exception..ctor, X0, X1
	353 Move X0, 0x772000
	354 Move X0, [X0+920]
	355 Call 0x1C17D08
	356 Move X1, X0
	357 Move X0, X19
	358 Call 0x1C17DEC
	359 Call 0x1C17F28

Method: System.Void Cleanup()

Disassembly:
	0x039E2CF8 MOV X0, X19
	0x039E2CFC MOV X1, X31
	0x039E2D00 BL 0x39D48AC
	0x039E2D04 LDR V10, [X31 + 0x24]
	0x039E2D08 B 0x39E2D40
	0x039E2D0C ADRP X24, 0x9FF000
	0x039E2D10 LDRB W8, [X24 + 0xA48]
	0x039E2D14 CBNZ W8, 0x39E2D2C
	0x039E2D18 ADRP X0, 0x719000
	0x039E2D1C LDR X0, [X0 + 0xF08]
	0x039E2D20 BL 0x1C16CF4
	0x039E2D24 MOVZ W8, 0x1
	0x039E2D28 STRB W8, [X24 + 0xA48]
	0x039E2D2C ADRP X8, 0x719000
	0x039E2D30 LDR X8, [X8 + 0xF08]
	0x039E2D34 LDR X8, [X8]
	0x039E2D38 LDR X8, [X8 + 0xB8]
	0x039E2D3C LDP S9, S10, [X8 + 0x8]
	0x039E2D40 LDR X0, [X23]
	0x039E2D44 ADRP X23, 0x770000
	0x039E2D48 LDR W8, [X0 + 0xE0]
	0x039E2D4C LDR X23, [X23 + 0xE28]
	0x039E2D50 CBNZ W8, 0x39E2D58
	0x039E2D54 BL 0x1C16DFC
	0x039E2D58 MOVN W4, 0x0
	0x039E2D5C MOVN W5, 0x0
	0x039E2D60 MOV X0, X20
	0x039E2D64 MOV X1, X22
	0x039E2D68 MOV W2, W31
	0x039E2D6C MOV W3, W31
	0x039E2D70 BL 0x39E2DCC
	0x039E2D74 LDR X0, [X23]
	0x039E2D78 LDR W8, [X0 + 0xE0]
	0x039E2D7C CBNZ W8, 0x39E2D84
	0x039E2D80 BL 0x1C16DFC
	0x039E2D84 AND W2, W21, 0x1
	0x039E2D88 FMOV S2, W31
	0x039E2D8C FMOV S3, W31
	0x039E2D90 MOV X0, X20
	0x039E2D94 MOV X1, X19
	0x039E2D98 MOV V0.16B, V9.16B
	0x039E2D9C MOV V1.16B, V10.16B
	0x039E2DA0 MOV V4.16B, V8.16B
	0x039E2DA4 BL 0x39E2260
	0x039E2DA8 LDP X20, X19, [X31 + 0x70]
	0x039E2DAC LDP X22, X21, [X31 + 0x60]
	0x039E2DB0 LDP X24, X23, [X31 + 0x50]
	0x039E2DB4 LDR X30, [X31 + 0x48]
	0x039E2DB8 LDP D9, D8, [X31 + 0x38]
	0x039E2DBC LDR V10, [X31 + 0x30]
	0x039E2DC0 ADD X31, X31, 0x80
	0x039E2DC4 RET
	0x039E2DC8 BL 0x1C16F20
	0x039E2DCC STR X30, [X31 - 0x50]!
	0x039E2DD0 STP X26, X25, [X31 + 0x10]
	0x039E2DD4 STP X24, X23, [X31 + 0x20]
	0x039E2DD8 STP X22, X21, [X31 + 0x30]
	0x039E2DDC STP X20, X19, [X31 + 0x40]
	0x039E2DE0 ADRP X25, 0x9FF000
	0x039E2DE4 ADRP X26, 0x739000
	0x039E2DE8 LDRB W8, [X25 + 0xE10]
	0x039E2DEC LDR X26, [X26 + 0x8F8]
	0x039E2DF0 MOV W19, W5
	0x039E2DF4 MOV W20, W4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA00000
	005 Move X20, 0x771000
	006 Move W8, [X19+3526]
	007 Move X20, [X20+3624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x771000
	013 Move X0, [X0+3624]
	014 Call 0x1C17CF4
	015 Move X0, 0x73A000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3526], W8
	020 Move X0, [X20]
	021 Move X19, 0x73A000
	022 Move W8, [X0+224]
	023 Move X19, [X19+2296]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X19]
	029 Move X9, [X0+184]
	030 Move W10, [X8+224]
	031 Move X19, [X9]
	032 Compare W10, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Call CoreUtils.Destroy, X0
	038 Move X8, [X20]
	039 Move X8, [X8+184]
	040 Move [X8], X31
	041 Move X8, [X20]
	042 Move X8, [X8+184]
	043 Move X0, [X8+24]
	044 Call CoreUtils.Destroy, X0
	045 Move X8, [X20]
	046 Move X8, [X8+184]
	047 Move X0, [X8+8]
	048 Move [X8+24], X31
	049 Call CoreUtils.Destroy, X0
	050 Move X8, [X20]
	051 Move X8, [X8+184]
	052 Move X0, [X8+16]
	053 Move [X8+8], X31
	054 Call CoreUtils.Destroy, X0
	055 Move X8, [X20]
	056 Move X8, [X8+184]
	057 Move X0, [X8+40]
	058 Move [X8+16], X31
	059 Call CoreUtils.Destroy, X0
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move X0, [X8+48]
	063 Move [X8+40], X31
	064 Call CoreUtils.Destroy, X0
	065 Move X8, [X20]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X8, [X8+184]
	069 Move [X8+48], X31
	070 Move X30, [X31+32]
	071 Return 

Method: UnityEngine.Material GetBlitMaterial(UnityEngine.Rendering.TextureDimension dimension, System.Boolean singleSlice = False)

Disassembly:
	0x039E2E80 STP X24, X23, [X31 + 0x50]
	0x039E2E84 STP X22, X21, [X31 + 0x60]
	0x039E2E88 STP X20, X19, [X31 + 0x70]
	0x039E2E8C ADRP X23, 0x9FF000
	0x039E2E90 LDRB W8, [X23 + 0xDD3]
	0x039E2E94 MOV W21, W3
	0x039E2E98 MOV V8.16B, V0.16B
	0x039E2E9C MOV X22, X2
	0x039E2EA0 MOV X19, X1
	0x039E2EA4 MOV X20, X0
	0x039E2EA8 TBNZ X8, 0x0, 0x39E2ECC
	0x039E2EAC ADRP X0, 0x770000
	0x039E2EB0 LDR X0, [X0 + 0xE28]
	0x039E2EB4 BL 0x1C16CF4
	0x039E2EB8 ADRP X0, 0x739000
	0x039E2EBC LDR X0, [X0 + 0x8F8]
	0x039E2EC0 BL 0x1C16CF4
	0x039E2EC4 MOVZ W8, 0x1
	0x039E2EC8 STRB W8, [X23 + 0xDD3]
	0x039E2ECC CBZ X19, 0x39E2FC8
	0x039E2ED0 ADRP X23, 0x739000
	0x039E2ED4 LDRB W8, [X19 + 0xA8]
	0x039E2ED8 LDR X23, [X23 + 0x8F8]
	0x039E2EDC CBZ W8, 0x39E2F0C
	0x039E2EE0 ADD X8, X31, 0x0
	0x039E2EE4 MOV X0, X19
	0x039E2EE8 MOV X1, X31
	0x039E2EEC BL 0x39D48AC
	0x039E2EF0 LDR V9, [X31 + 0x20]
	0x039E2EF4 ADD X8, X31, 0x0
	0x039E2EF8 MOV X0, X19
	0x039E2EFC MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA00000
	007 Move X21, 0x771000
	008 Move W8, [X22+3527]
	009 Move X21, [X21+3624]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x771000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3527], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move TEMP, X19
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {34}
	033 Add X8, X8, 16
	034 Add X8, X8, 8
	035 Move X0, [X8]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0

Method: System.Void DrawTriangle(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Material material, System.Int32 shaderPass)

Disassembly:
	0x039E2F00 BL 0x39D48AC
	0x039E2F04 LDR V10, [X31 + 0x24]
	0x039E2F08 B 0x39E2F40
	0x039E2F0C ADRP X24, 0x9FF000
	0x039E2F10 LDRB W8, [X24 + 0xA48]
	0x039E2F14 CBNZ W8, 0x39E2F2C
	0x039E2F18 ADRP X0, 0x719000
	0x039E2F1C LDR X0, [X0 + 0xF08]
	0x039E2F20 BL 0x1C16CF4
	0x039E2F24 MOVZ W8, 0x1
	0x039E2F28 STRB W8, [X24 + 0xA48]
	0x039E2F2C ADRP X8, 0x719000
	0x039E2F30 LDR X8, [X8 + 0xF08]
	0x039E2F34 LDR X8, [X8]
	0x039E2F38 LDR X8, [X8 + 0xB8]
	0x039E2F3C LDP S9, S10, [X8 + 0x8]
	0x039E2F40 LDR X0, [X23]
	0x039E2F44 ADRP X23, 0x770000
	0x039E2F48 LDR W8, [X0 + 0xE0]
	0x039E2F4C LDR X23, [X23 + 0xE28]
	0x039E2F50 CBNZ W8, 0x39E2F58
	0x039E2F54 BL 0x1C16DFC
	0x039E2F58 MOVN W4, 0x0
	0x039E2F5C MOVN W5, 0x0
	0x039E2F60 MOV X0, X20
	0x039E2F64 MOV X1, X22
	0x039E2F68 MOV W2, W31
	0x039E2F6C MOV W3, W31
	0x039E2F70 BL 0x39E2DCC
	0x039E2F74 LDR X0, [X23]
	0x039E2F78 LDR W8, [X0 + 0xE0]
	0x039E2F7C CBNZ W8, 0x39E2F84
	0x039E2F80 BL 0x1C16DFC
	0x039E2F84 AND W2, W21, 0x1
	0x039E2F88 FMOV S2, W31
	0x039E2F8C FMOV S3, W31
	0x039E2F90 MOV X0, X20
	0x039E2F94 MOV X1, X19
	0x039E2F98 MOV V0.16B, V9.16B
	0x039E2F9C MOV V1.16B, V10.16B
	0x039E2FA0 MOV V4.16B, V8.16B
	0x039E2FA4 BL 0x39E24EC
	0x039E2FA8 LDP X20, X19, [X31 + 0x70]
	0x039E2FAC LDP X22, X21, [X31 + 0x60]
	0x039E2FB0 LDP X24, X23, [X31 + 0x50]
	0x039E2FB4 LDR X30, [X31 + 0x48]
	0x039E2FB8 LDP D9, D8, [X31 + 0x38]
	0x039E2FBC LDR V10, [X31 + 0x30]
	0x039E2FC0 ADD X31, X31, 0x80
	0x039E2FC4 RET
	0x039E2FC8 BL 0x1C16F20
	0x039E2FCC SUB X31, X31, 0x80
	0x039E2FD0 STP D9, D8, [X31 + 0x30]
	0x039E2FD4 STP X30, X25, [X31 + 0x40]
	0x039E2FD8 STP X24, X23, [X31 + 0x50]
	0x039E2FDC STP X22, X21, [X31 + 0x60]
	0x039E2FE0 STP X20, X19, [X31 + 0x70]
	0x039E2FE4 ADRP X24, 0x9FF000
	0x039E2FE8 LDRB W8, [X24 + 0xDD4]
	0x039E2FEC MOV W19, W4
	0x039E2FF0 MOV X20, X3
	0x039E2FF4 MOV X23, X2
	0x039E2FF8 MOV X21, X1
	0x039E2FFC MOV X22, X0
	0x039E3000 TBNZ X8, 0x0, 0x39E3024
	0x039E3004 ADRP X0, 0x76F000
	0x039E3008 LDR X0, [X0 + 0xE28]
	0x039E300C BL 0x1C16CF4
	0x039E3010 ADRP X0, 0x738000
	0x039E3014 LDR X0, [X0 + 0x8F8]
	0x039E3018 BL 0x1C16CF4
	0x039E301C MOVZ W8, 0x1
	0x039E3020 STRB W8, [X24 + 0xDD4]
	0x039E3024 CBZ X21, 0x39E311C
	0x039E3028 ADRP X24, 0x738000
	0x039E302C LDRB W8, [X21 + 0xA8]
	0x039E3030 LDR X24, [X24 + 0x8F8]
	0x039E3034 CBZ W8, 0x39E3064
	0x039E3038 ADD X8, X31, 0x0
	0x039E303C MOV X0, X21
	0x039E3040 MOV X1, X31
	0x039E3044 BL 0x39D48AC
	0x039E3048 LDR V8, [X31 + 0x20]
	0x039E304C ADD X8, X31, 0x0
	0x039E3050 MOV X0, X21
	0x039E3054 MOV X1, X31
	0x039E3058 BL 0x39D48AC
	0x039E305C LDR V9, [X31 + 0x24]
	0x039E3060 B 0x39E3098
	0x039E3064 ADRP X25, 0x9FE000
	0x039E3068 LDRB W8, [X25 + 0xA48]
	0x039E306C CBNZ W8, 0x39E3084
	0x039E3070 ADRP X0, 0x718000
	0x039E3074 LDR X0, [X0 + 0xF08]
	0x039E3078 BL 0x1C16CF4
	0x039E307C MOVZ W8, 0x1
	0x039E3080 STRB W8, [X25 + 0xA48]
	0x039E3084 ADRP X8, 0x718000
	0x039E3088 LDR X8, [X8 + 0xF08]
	0x039E308C LDR X8, [X8]
	0x039E3090 LDR X8, [X8 + 0xB8]
	0x039E3094 LDP S8, S9, [X8 + 0x8]
	0x039E3098 LDR X0, [X24]
	0x039E309C ADRP X24, 0x76F000
	0x039E30A0 LDR W8, [X0 + 0xE0]
	0x039E30A4 LDR X24, [X24 + 0xE28]
	0x039E30A8 CBNZ W8, 0x39E30B0
	0x039E30AC BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X24
	005 Move [X31+232], X23
	006 Move [X31+240], X22
	007 Move [X31+248], X21
	008 Move [X31+256], X20
	009 Move [X31+264], X19
	010 Move X22, 0xA00000
	011 Move W8, [X22+3528]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x771000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3528], W8
	024 Move X0, X31
	025 Call SystemInfo.get_graphicsShaderLevel
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, 0x9F7000
	028 Move W8, [X22+2752]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x716000
	032 Move X0, [X0+624]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2752], W8
	036 Move X8, 0x716000
	037 Move X8, [X8+624]
	038 Move X22, 0x771000
	039 Move X8, [X8]
	040 Move X8, [X8+184]
	041 Move X22, [X22+3624]
	042 Move V0, [X8+96]
	043 Move V1, [X8+112]
	044 Move V3, [X8+64]
	045 Move V2, [X8+80]
	046 Move X0, [X22]
	047 Move [X31+176], V0
	048 Move [X31+184], V1
	049 Move [X31+144], V3
	050 Move [X31+152], V2
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Compare X21, 0
	056 JumpIfEqual {139}
	057 Move X8, [X22]
	058 Move V0, [X31+144]
	059 Move V1, [X31+160]
	060 Move V2, [X31+176]
	061 Move V3, [X31+192]
	062 Add X1, X31, 16
	063 Move X8, [X8+184]
	064 Move W5, 3
	065 Move W6, 1
	066 Move X0, X21
	067 Move X7, [X8+32]
	068 Move X2, X20
	069 Move W3, W19
	070 Move W4, W31
	071 Move [X31+16], V0
	072 Move [X31+24], V1
	073 Move [X31+48], V2
	074 Move [X31+56], V3
	075 Move [X31], X31
	076 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	077 Move X23, 0x771000
	078 Move X23, [X23+3624]
	079 Move X0, [X23]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X23]
	085 Move X8, [X0+184]
	086 Move X24, 0x9F6000
	087 Move W9, [X24+2752]
	088 Move X22, [X8+40]
	089 Compare W9, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x715000
	092 Move X0, [X0+624]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X24+2752], W8
	096 Move X8, 0x715000
	097 Move X8, [X8+624]
	098 Move X8, [X8]
	099 Move X8, [X8+184]
	100 Move V1, [X8+96]
	101 Move V0, [X8+112]
	102 Move V2, [X8+64]
	103 Move V3, [X8+80]
	104 Move [X31+176], V1
	105 Move [X31+184], V0
	106 Move [X31+144], V2
	107 Move [X31+152], V3
	108 Compare X21, 0
	109 JumpIfEqual {139}
	110 Move X8, [X23]
	111 Move V0, [X31+144]
	112 Move V1, [X31+160]
	113 Move V2, [X31+176]
	114 Move V3, [X31+192]
	115 Add X2, X31, 80
	116 Move X8, [X8+184]
	117 Move X0, X21
	118 Move X1, X22
	119 Move X3, X20
	120 Move X6, [X8+32]
	121 Move W4, W31
	122 Move W5, W19
	123 Move X7, X31
	124 Move [X31+80], V0
	125 Move [X31+88], V1
	126 Move [X31+112], V2
	127 Move [X31+120], V3
	128 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5, X6
	129 Move X20, [X31+256]
	130 Move X19, [X31+264]
	131 Move X22, [X31+240]
	132 Move X21, [X31+248]
	133 Move X24, [X31+224]
	134 Move X23, [X31+232]
	135 Move X29, [X31+208]
	136 Move X30, [X31+216]
	137 Add X31, X31, 272
	138 Return 
	139 Call 0x1C17F20

Method: System.Void DrawQuad(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Material material, System.Int32 shaderPass)

Disassembly:
	0x039E30B0 MOVN W4, 0x0
	0x039E30B4 MOVN W5, 0x0
	0x039E30B8 MOV X0, X22
	0x039E30BC MOV X1, X23
	0x039E30C0 MOV W2, W31
	0x039E30C4 MOV W3, W31
	0x039E30C8 BL 0x39E2DCC
	0x039E30CC LDR X0, [X24]
	0x039E30D0 LDR W8, [X0 + 0xE0]
	0x039E30D4 CBNZ W8, 0x39E30DC
	0x039E30D8 BL 0x1C16DFC
	0x039E30DC FMOV S2, W31
	0x039E30E0 FMOV S3, W31
	0x039E30E4 MOV X0, X22
	0x039E30E8 MOV X1, X21
	0x039E30EC MOV V0.16B, V8.16B
	0x039E30F0 MOV V1.16B, V9.16B
	0x039E30F4 MOV X2, X20
	0x039E30F8 MOV W3, W19
	0x039E30FC BL 0x39E23B4
	0x039E3100 LDP X20, X19, [X31 + 0x70]
	0x039E3104 LDP X22, X21, [X31 + 0x60]
	0x039E3108 LDP X24, X23, [X31 + 0x50]
	0x039E310C LDP X30, X25, [X31 + 0x40]
	0x039E3110 LDP D9, D8, [X31 + 0x30]
	0x039E3114 ADD X31, X31, 0x80
	0x039E3118 RET
	0x039E311C BL 0x1C16F20
	0x039E3120 SUB X31, X31, 0xA0
	0x039E3124 STP D9, D8, [X31 + 0x40]
	0x039E3128 STP X30, X27, [X31 + 0x50]
	0x039E312C STP X26, X25, [X31 + 0x60]
	0x039E3130 STP X24, X23, [X31 + 0x70]
	0x039E3134 STP X22, X21, [X31 + 0x80]
	0x039E3138 STP X20, X19, [X31 + 0x90]
	0x039E313C ADRP X26, 0x9FE000
	0x039E3140 LDRB W8, [X26 + 0xDD5]
	0x039E3144 MOV W19, W6
	0x039E3148 MOV X20, X5
	0x039E314C MOV W23, W4
	0x039E3150 MOV W24, W3
	0x039E3154 MOV X25, X2
	0x039E3158 MOV X21, X1
	0x039E315C MOV X22, X0
	0x039E3160 TBNZ X8, 0x0, 0x39E3184
	0x039E3164 ADRP X0, 0x76F000
	0x039E3168 LDR X0, [X0 + 0xE28]
	0x039E316C BL 0x1C16CF4
	0x039E3170 ADRP X0, 0x738000
	0x039E3174 LDR X0, [X0 + 0x8F8]
	0x039E3178 BL 0x1C16CF4
	0x039E317C MOVZ W8, 0x1
	0x039E3180 STRB W8, [X26 + 0xDD5]
	0x039E3184 CBZ X21, 0x39E3298
	0x039E3188 ADRP X26, 0x738000
	0x039E318C LDRB W8, [X21 + 0xA8]
	0x039E3190 LDR X26, [X26 + 0x8F8]
	0x039E3194 CBZ W8, 0x39E31C4
	0x039E3198 ADD X8, X31, 0x10
	0x039E319C MOV X0, X21
	0x039E31A0 MOV X1, X31
	0x039E31A4 BL 0x39D48AC
	0x039E31A8 LDR V8, [X31 + 0x30]
	0x039E31AC ADD X8, X31, 0x10
	0x039E31B0 MOV X0, X21
	0x039E31B4 MOV X1, X31
	0x039E31B8 BL 0x39D48AC
	0x039E31BC LDR V9, [X31 + 0x34]
	0x039E31C0 B 0x39E31F8
	0x039E31C4 ADRP X27, 0x9FE000
	0x039E31C8 LDRB W8, [X27 + 0xA48]
	0x039E31CC CBNZ W8, 0x39E31E4
	0x039E31D0 ADRP X0, 0x718000
	0x039E31D4 LDR X0, [X0 + 0xF08]
	0x039E31D8 BL 0x1C16CF4
	0x039E31DC MOVZ W8, 0x1
	0x039E31E0 STRB W8, [X27 + 0xA48]
	0x039E31E4 ADRP X8, 0x718000
	0x039E31E8 LDR X8, [X8 + 0xF08]
	0x039E31EC LDR X8, [X8]
	0x039E31F0 LDR X8, [X8 + 0xB8]
	0x039E31F4 LDP S8, S9, [X8 + 0x8]
	0x039E31F8 LDR X0, [X26]
	0x039E31FC ADRP X26, 0x76F000
	0x039E3200 LDR W8, [X0 + 0xE0]
	0x039E3204 LDR X26, [X26 + 0xE28]
	0x039E3208 CBNZ W8, 0x39E3210
	0x039E320C BL 0x1C16DFC
	0x039E3210 FMOV S0, W31
	0x039E3214 FMOV S1, W31
	0x039E3218 FMOV S2, W31
	0x039E321C FMOV S3, W31
	0x039E3220 MOVN W6, 0x0
	0x039E3224 MOVN W7, 0x0
	0x039E3228 MOV X0, X22
	0x039E322C MOV X1, X25
	0x039E3230 MOV W2, W24
	0x039E3234 MOV W3, W23
	0x039E3238 MOV W4, W31
	0x039E323C MOV W5, W31
	0x039E3240 BL 0x39E329C
	0x039E3244 LDR X0, [X26]
	0x039E3248 LDR W8, [X0 + 0xE0]
	0x039E324C CBNZ W8, 0x39E3254
	0x039E3250 BL 0x1C16DFC
	0x039E3254 FMOV S2, W31
	0x039E3258 FMOV S3, W31
	0x039E325C MOV X0, X22

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X24
	005 Move [X31+232], X23
	006 Move [X31+240], X22
	007 Move [X31+248], X21
	008 Move [X31+256], X20
	009 Move [X31+264], X19
	010 Move X22, 0x9FF000
	011 Move W8, [X22+3529]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x770000
	020 Move X0, [X0+3624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3529], W8
	024 Move X0, X31
	025 Call SystemInfo.get_graphicsShaderLevel
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, 0x9F6000
	028 Move W8, [X22+2752]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x715000
	032 Move X0, [X0+624]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2752], W8
	036 Move X8, 0x715000
	037 Move X8, [X8+624]
	038 Move X22, 0x770000
	039 Move X8, [X8]
	040 Move X8, [X8+184]
	041 Move X22, [X22+3624]
	042 Move V0, [X8+96]
	043 Move V1, [X8+112]
	044 Move V3, [X8+64]
	045 Move V2, [X8+80]
	046 Move X0, [X22]
	047 Move [X31+176], V0
	048 Move [X31+184], V1
	049 Move [X31+144], V3
	050 Move [X31+152], V2
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Compare X21, 0
	056 JumpIfEqual {139}
	057 Move X8, [X22]
	058 Move V0, [X31+144]
	059 Move V1, [X31+160]
	060 Move V2, [X31+176]
	061 Move V3, [X31+192]
	062 Add X1, X31, 16
	063 Move X8, [X8+184]
	064 Move W4, 2
	065 Move W5, 4
	066 Move W6, 1
	067 Move X7, [X8+32]
	068 Move X0, X21
	069 Move X2, X20
	070 Move W3, W19
	071 Move [X31+16], V0
	072 Move [X31+24], V1
	073 Move [X31+48], V2
	074 Move [X31+56], V3
	075 Move [X31], X31
	076 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	077 Move X23, 0x770000
	078 Move X23, [X23+3624]
	079 Move X0, [X23]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X23]
	085 Move X8, [X0+184]
	086 Move X24, 0x9F6000
	087 Move W9, [X24+2752]
	088 Move X22, [X8+48]
	089 Compare W9, 0
	090 JumpIfNotEqual {96}
	091 Move X0, 0x715000
	092 Move X0, [X0+624]
	093 Call 0x1C17CF4
	094 Move W8, 1
	095 Move [X24+2752], W8
	096 Move X8, 0x715000
	097 Move X8, [X8+624]
	098 Move X8, [X8]
	099 Move X8, [X8+184]
	100 Move V1, [X8+96]
	101 Move V0, [X8+112]
	102 Move V2, [X8+64]
	103 Move V3, [X8+80]
	104 Move [X31+176], V1
	105 Move [X31+184], V0
	106 Move [X31+144], V2
	107 Move [X31+152], V3
	108 Compare X21, 0
	109 JumpIfEqual {139}
	110 Move X8, [X23]
	111 Move V0, [X31+144]
	112 Move V1, [X31+160]
	113 Move V2, [X31+176]
	114 Move V3, [X31+192]
	115 Add X2, X31, 80
	116 Move X8, [X8+184]
	117 Move X0, X21
	118 Move X1, X22
	119 Move X3, X20
	120 Move X6, [X8+32]
	121 Move W4, W31
	122 Move W5, W19
	123 Move X7, X31
	124 Move [X31+80], V0
	125 Move [X31+88], V1
	126 Move [X31+112], V2
	127 Move [X31+120], V3
	128 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5, X6
	129 Move X20, [X31+256]
	130 Move X19, [X31+264]
	131 Move X22, [X31+240]
	132 Move X21, [X31+248]
	133 Move X24, [X31+224]
	134 Move X23, [X31+232]
	135 Move X29, [X31+208]
	136 Move X30, [X31+216]
	137 Add X31, X31, 272
	138 Return 
	139 Call 0x1C17F20

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Vector4 scaleBias, System.Single mipLevel, System.Boolean bilinear)

Disassembly:
	0x039E3260 MOV X1, X21
	0x039E3264 MOV V0.16B, V8.16B
	0x039E3268 MOV V1.16B, V9.16B
	0x039E326C MOV X2, X20
	0x039E3270 MOV W3, W19
	0x039E3274 BL 0x39E23B4
	0x039E3278 LDP X20, X19, [X31 + 0x90]
	0x039E327C LDP X22, X21, [X31 + 0x80]
	0x039E3280 LDP X24, X23, [X31 + 0x70]
	0x039E3284 LDP X26, X25, [X31 + 0x60]
	0x039E3288 LDP X30, X27, [X31 + 0x50]
	0x039E328C LDP D9, D8, [X31 + 0x40]
	0x039E3290 ADD X31, X31, 0xA0
	0x039E3294 RET
	0x039E3298 BL 0x1C16F20
	0x039E329C SUB X31, X31, 0xD0
	0x039E32A0 STP D11, D10, [X31 + 0x60]
	0x039E32A4 STP D9, D8, [X31 + 0x70]
	0x039E32A8 STP X30, X27, [X31 + 0x80]
	0x039E32AC STP X26, X25, [X31 + 0x90]
	0x039E32B0 STP X24, X23, [X31 + 0xA0]
	0x039E32B4 STP X22, X21, [X31 + 0xB0]
	0x039E32B8 STP X20, X19, [X31 + 0xC0]
	0x039E32BC ADRP X27, 0x9FE000
	0x039E32C0 LDRB W8, [X27 + 0xE14]
	0x039E32C4 MOV W19, W7
	0x039E32C8 MOV W21, W6
	0x039E32CC MOV W22, W5
	0x039E32D0 MOV V8.16B, V3.16B
	0x039E32D4 MOV V9.16B, V2.16B
	0x039E32D8 MOV V10.16B, V1.16B
	0x039E32DC MOV V11.16B, V0.16B
	0x039E32E0 MOV W20, W4
	0x039E32E4 MOV W25, W3
	0x039E32E8 MOV W26, W2
	0x039E32EC MOV X23, X1
	0x039E32F0 MOV X24, X0
	0x039E32F4 TBNZ X8, 0x0, 0x39E330C
	0x039E32F8 ADRP X0, 0x738000
	0x039E32FC LDR X0, [X0 + 0x8F8]
	0x039E3300 BL 0x1C16CF4
	0x039E3304 MOVZ W8, 0x1
	0x039E3308 STRB W8, [X27 + 0xE14]
	0x039E330C CBZ X23, 0x39E33B0
	0x039E3310 ADRP X8, 0x738000
	0x039E3314 LDR X8, [X8 + 0x8F8]
	0x039E3318 LDR X9, [X23 + 0x48]
	0x039E331C LDUR V0, [X23 + 0x38]
	0x039E3320 LDUR V1, [X23 + 0x28]
	0x039E3324 LDR X0, [X8]
	0x039E3328 STR X9, [X31 + 0x50]
	0x039E332C STP V1, V0, [X31 + 0x30]
	0x039E3330 LDR W8, [X0 + 0xE0]
	0x039E3334 CBNZ W8, 0x39E333C
	0x039E3338 BL 0x1C16DFC
	0x039E333C LDP V0, V1, [X31 + 0x30]
	0x039E3340 LDR X8, [X31 + 0x50]
	0x039E3344 ADD X1, X31, 0x0
	0x039E3348 MOV X0, X24
	0x039E334C MOV W2, W26
	0x039E3350 MOV W3, W25
	0x039E3354 MOV W4, W22
	0x039E3358 MOV W5, W21
	0x039E335C MOV W6, W19
	0x039E3360 STP V0, V1, [X31]
	0x039E3364 STR X8, [X31 + 0x20]
	0x039E3368 BL 0x39E6E28
	0x039E336C MOV X0, X24
	0x039E3370 MOV X1, X23
	0x039E3374 MOV W2, W20
	0x039E3378 MOV V0.16B, V11.16B
	0x039E337C MOV V1.16B, V10.16B
	0x039E3380 MOV V2.16B, V9.16B
	0x039E3384 MOV V3.16B, V8.16B
	0x039E3388 BL 0x39E7748
	0x039E338C LDP X20, X19, [X31 + 0xC0]
	0x039E3390 LDP X22, X21, [X31 + 0xB0]
	0x039E3394 LDP X24, X23, [X31 + 0xA0]
	0x039E3398 LDP X26, X25, [X31 + 0x90]
	0x039E339C LDP X30, X27, [X31 + 0x80]
	0x039E33A0 LDP D9, D8, [X31 + 0x70]
	0x039E33A4 LDP D11, D10, [X31 + 0x60]
	0x039E33A8 ADD X31, X31, 0xD0
	0x039E33AC RET
	0x039E33B0 BL 0x1C16F20

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x9FF000
	014 Move X23, 0x770000
	015 Move W8, [X22+3530]
	016 Move X23, [X23+3624]
	017 Move W19, W2
	018 Move V12, V4
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move X20, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {40}
	029 Move X0, 0x771000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0x770000
	033 Move X0, [X0+3624]
	034 Call 0x1C17CF4
	035 Move X0, 0x76E000
	036 Move X0, [X0+1560]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+3530], W8
	040 Move X0, [X23]
	041 Move X24, 0x771000
	042 Move W8, [X0+224]
	043 Move X24, [X24+432]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X23]
	048 Move X8, [X24]
	049 Move X9, [X0+184]
	050 Move W10, [X8+224]
	051 Move X22, [X9+32]
	052 Compare W10, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Compare X22, 0
	057 JumpIfEqual {102}
	058 Move X8, [X24]
	059 Move X24, 0x76E000
	060 Move X0, X22
	061 Move V0, V12
	062 Move X8, [X8+184]
	063 Move X2, X31
	064 Move W1, [X8+16]
	065 Move X24, [X24+1560]
	066 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	067 Move X0, [X24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Call TextureXR.get_dimension
	073 Move W1, W31
	074 Call Blitter.GetBlitMaterial, X0, X1
	075 Move X8, [X23]
	076 Move X22, X0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 And W3, W19, 1
	083 Move X0, X21
	084 Move X1, X20
	085 Move V0, V11
	086 Move V1, V10
	087 Move V2, V9
	088 Move V3, V8
	089 Move X2, X22
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X30, [X31+40]
	097 Move D9, [X31+24]
	098 Move D8, [X31+32]
	099 Move D11, [X31+8]
	100 Move D10, [X31+16]
	101 Move V12, [X31+96]
	102 Call 0x1C17F20

Method: System.Void BlitTexture2D(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Vector4 scaleBias, System.Single mipLevel, System.Boolean bilinear)

Disassembly:
	0x039E34EC MOV V12.16B, V0.16B
	0x039E34F0 MOV X22, X2
	0x039E34F4 MOV X19, X1
	0x039E34F8 MOV X21, X0
	0x039E34FC TBNZ X8, 0x0, 0x39E3520
	0x039E3500 ADRP X0, 0x76F000
	0x039E3504 LDR X0, [X0 + 0xE28]
	0x039E3508 BL 0x1C16CF4
	0x039E350C ADRP X0, 0x738000
	0x039E3510 LDR X0, [X0 + 0x8F8]
	0x039E3514 BL 0x1C16CF4
	0x039E3518 MOVZ W8, 0x1
	0x039E351C STRB W8, [X23 + 0xDD7]
	0x039E3520 CBZ X19, 0x39E3644
	0x039E3524 ADRP X23, 0x738000
	0x039E3528 LDRB W8, [X19 + 0xA8]
	0x039E352C LDR X23, [X23 + 0x8F8]
	0x039E3530 CBZ W8, 0x39E3560
	0x039E3534 ADD X8, X31, 0x0
	0x039E3538 MOV X0, X19
	0x039E353C MOV X1, X31
	0x039E3540 BL 0x39D48AC
	0x039E3544 LDR V13, [X31 + 0x20]
	0x039E3548 ADD X8, X31, 0x0
	0x039E354C MOV X0, X19
	0x039E3550 MOV X1, X31
	0x039E3554 BL 0x39D48AC
	0x039E3558 LDR V14, [X31 + 0x24]
	0x039E355C B 0x39E3594
	0x039E3560 ADRP X24, 0x9FE000
	0x039E3564 LDRB W8, [X24 + 0xA48]
	0x039E3568 CBNZ W8, 0x39E3580
	0x039E356C ADRP X0, 0x718000
	0x039E3570 LDR X0, [X0 + 0xF08]
	0x039E3574 BL 0x1C16CF4
	0x039E3578 MOVZ W8, 0x1
	0x039E357C STRB W8, [X24 + 0xA48]
	0x039E3580 ADRP X8, 0x718000
	0x039E3584 LDR X8, [X8 + 0xF08]
	0x039E3588 LDR X8, [X8]
	0x039E358C LDR X8, [X8 + 0xB8]
	0x039E3590 LDP S13, S14, [X8 + 0x8]
	0x039E3594 LDR X0, [X23]
	0x039E3598 LDR W8, [X0 + 0xE0]
	0x039E359C CBNZ W8, 0x39E35A4
	0x039E35A0 BL 0x1C16DFC
	0x039E35A4 MOVN W4, 0x0
	0x039E35A8 MOVN W5, 0x0
	0x039E35AC MOV X0, X21
	0x039E35B0 MOV X1, X22
	0x039E35B4 MOV W2, W31
	0x039E35B8 MOV W3, W31
	0x039E35BC BL 0x39E2DCC
	0x039E35C0 CBZ X21, 0x39E3644
	0x039E35C4 ADRP X22, 0x76F000
	0x039E35C8 LDR X22, [X22 + 0xE28]
	0x039E35CC MOV X0, X21
	0x039E35D0 MOV V0.16B, V12.16B
	0x039E35D4 MOV V1.16B, V11.16B
	0x039E35D8 MOV V2.16B, V10.16B
	0x039E35DC MOV V3.16B, V9.16B
	0x039E35E0 MOV X1, X31
	0x039E35E4 BL 0x3C4C86C
	0x039E35E8 LDR X0, [X22]
	0x039E35EC LDR W8, [X0 + 0xE0]
	0x039E35F0 CBNZ W8, 0x39E35F8
	0x039E35F4 BL 0x1C16DFC
	0x039E35F8 AND W2, W20, 0x1
	0x039E35FC FMOV S2, W31
	0x039E3600 FMOV S3, W31
	0x039E3604 MOV X0, X21
	0x039E3608 MOV X1, X19
	0x039E360C MOV V0.16B, V13.16B
	0x039E3610 MOV V1.16B, V14.16B
	0x039E3614 MOV V4.16B, V8.16B
	0x039E3618 BL 0x39E2260

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x9FF000
	014 Move X23, 0x770000
	015 Move W8, [X22+3531]
	016 Move X23, [X23+3624]
	017 Move W19, W2
	018 Move V12, V4
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move X20, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x771000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0x770000
	033 Move X0, [X0+3624]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+3531], W8
	037 Move X0, [X23]
	038 Move X24, 0x771000
	039 Move W8, [X0+224]
	040 Move X24, [X24+432]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X23]
	045 Move X8, [X24]
	046 Move X9, [X0+184]
	047 Move W10, [X8+224]
	048 Move X22, [X9+32]
	049 Compare W10, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Compare X22, 0
	054 JumpIfEqual {94}
	055 Move X8, [X24]
	056 Move X0, X22
	057 Move V0, V12
	058 Move X2, X31
	059 Move X8, [X8+184]
	060 Move W1, [X8+16]
	061 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	062 Move W0, 2
	063 Move W1, W31
	064 Call Blitter.GetBlitMaterial, X0, X1
	065 Move X8, [X23]
	066 Move X22, X0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 And W3, W19, 1
	073 Move X0, X21
	074 Move X1, X20
	075 Move V0, V11
	076 Move V1, V10
	077 Move V2, V9
	078 Move V3, V8
	079 Move X2, X22
	080 Move X20, [X31+80]
	081 Move X19, [X31+88]
	082 Move X22, [X31+64]
	083 Move X21, [X31+72]
	084 Move X24, [X31+48]
	085 Move X23, [X31+56]
	086 Move X30, [X31+40]
	087 Move D9, [X31+24]
	088 Move D8, [X31+32]
	089 Move D11, [X31+8]
	090 Move D10, [X31+16]
	091 Move V12, [X31+96]
	092 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	093 Return 
	094 Call 0x1C17F20

Method: System.Void BlitColorAndDepth(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture sourceColor, UnityEngine.RenderTexture sourceDepth, UnityEngine.Vector4 scaleBias, System.Single mipLevel, System.Boolean blitDepth)

Disassembly:
	0x039E361C LDP X20, X19, [X31 + 0x90]
	0x039E3620 LDP X22, X21, [X31 + 0x80]
	0x039E3624 LDP X24, X23, [X31 + 0x70]
	0x039E3628 LDR X30, [X31 + 0x68]
	0x039E362C LDP D9, D8, [X31 + 0x58]
	0x039E3630 LDP D11, D10, [X31 + 0x48]
	0x039E3634 LDP D13, D12, [X31 + 0x38]
	0x039E3638 LDR V14, [X31 + 0x30]
	0x039E363C ADD X31, X31, 0xA0
	0x039E3640 RET
	0x039E3644 BL 0x1C16F20
	0x039E3648 STP D15, D14, [X31 - 0x90]!
	0x039E364C STP D13, D12, [X31 + 0x10]
	0x039E3650 STP D11, D10, [X31 + 0x20]
	0x039E3654 STP D9, D8, [X31 + 0x30]
	0x039E3658 STR X30, [X31 + 0x40]
	0x039E365C STP X26, X25, [X31 + 0x50]
	0x039E3660 STP X24, X23, [X31 + 0x60]
	0x039E3664 STP X22, X21, [X31 + 0x70]
	0x039E3668 STP X20, X19, [X31 + 0x80]
	0x039E366C STP S0, S1, [X31 + 0x48]
	0x039E3670 ADRP X24, 0x9FE000
	0x039E3674 ADRP X25, 0x76F000
	0x039E3678 LDP S11, S10, [X31 + 0x98]
	0x039E367C LDRB W8, [X24 + 0xDD9]
	0x039E3680 LDP S13, S12, [X31 + 0x90]
	0x039E3684 LDR X25, [X25 + 0xE28]
	0x039E3688 MOV W22, W4
	0x039E368C MOV W20, W3
	0x039E3690 MOV W23, W2
	0x039E3694 MOV V14.16B, V5.16B
	0x039E3698 MOV V15.16B, V4.16B
	0x039E369C MOV V8.16B, V3.16B
	0x039E36A0 MOV V9.16B, V2.16B
	0x039E36A4 MOV X21, X1
	0x039E36A8 MOV X19, X0
	0x039E36AC TBNZ X8, 0x0, 0x39E36D0
	0x039E36B0 ADRP X0, 0x770000
	0x039E36B4 LDR X0, [X0 + 0x1B0]
	0x039E36B8 BL 0x1C16CF4
	0x039E36BC ADRP X0, 0x76F000
	0x039E36C0 LDR X0, [X0 + 0xE28]
	0x039E36C4 BL 0x1C16CF4
	0x039E36C8 MOVZ W8, 0x1
	0x039E36CC STRB W8, [X24 + 0xDD9]
	0x039E36D0 LDR X0, [X25]
	0x039E36D4 ADRP X26, 0x770000
	0x039E36D8 LDR W8, [X0 + 0xE0]
	0x039E36DC LDR X26, [X26 + 0x1B0]
	0x039E36E0 CBNZ W8, 0x39E36EC
	0x039E36E4 BL 0x1C16DFC
	0x039E36E8 LDR X0, [X25]
	0x039E36EC LDR X8, [X26]
	0x039E36F0 LDR X9, [X0 + 0xB8]
	0x039E36F4 LDR W10, [X8 + 0xE0]
	0x039E36F8 LDR X24, [X9 + 0x20]
	0x039E36FC CBNZ W10, 0x39E3708
	0x039E3700 MOV X0, X8
	0x039E3704 BL 0x1C16DFC
	0x039E3708 CBZ X24, 0x39E38C0
	0x039E370C LDR X8, [X26]
	0x039E3710 MOV X0, X24
	0x039E3714 MOV X2, X21
	0x039E3718 MOV X3, X31
	0x039E371C LDR X8, [X8 + 0xB8]
	0x039E3720 LDR W1, [X8]
	0x039E3724 BL 0x3C12828
	0x039E3728 LDR X8, [X25]
	0x039E372C LDR X8, [X8 + 0xB8]
	0x039E3730 LDR X0, [X8 + 0x20]
	0x039E3734 CBZ X0, 0x39E38C0
	0x039E3738 LDR X8, [X26]
	0x039E373C MOV V0.16B, V9.16B
	0x039E3740 MOV V1.16B, V8.16B
	0x039E3744 MOV V2.16B, V15.16B
	0x039E3748 LDR X8, [X8 + 0xB8]
	0x039E374C MOV V3.16B, V14.16B
	0x039E3750 MOV X2, X31
	0x039E3754 LDR W1, [X8 + 0x8]
	0x039E3758 BL 0x3C12720
	0x039E375C LDR X8, [X25]
	0x039E3760 LDR X8, [X8 + 0xB8]
	0x039E3764 LDR X0, [X8 + 0x20]
	0x039E3768 CBZ X0, 0x39E38C0
	0x039E376C LDR X8, [X26]
	0x039E3770 MOV V0.16B, V13.16B
	0x039E3774 MOV V1.16B, V12.16B
	0x039E3778 MOV V2.16B, V11.16B
	0x039E377C LDR X8, [X8 + 0xB8]
	0x039E3780 MOV V3.16B, V10.16B
	0x039E3784 MOV X2, X31
	0x039E3788 LDR W1, [X8 + 0xC]
	0x039E378C BL 0x3C12720
	0x039E3790 LDR X8, [X25]
	0x039E3794 LDR X8, [X8 + 0xB8]
	0x039E3798 LDR X0, [X8 + 0x20]
	0x039E379C CBZ X0, 0x39E38C0
	0x039E37A0 LDR X8, [X26]
	0x039E37A4 SCVTF S0, W23
	0x039E37A8 MOV X2, X31
	0x039E37AC LDR X8, [X8 + 0xB8]
	0x039E37B0 LDR W1, [X8 + 0x10]
	0x039E37B4 BL 0x3C125FC
	0x039E37B8 LDR X8, [X25]
	0x039E37BC LDR X8, [X8 + 0xB8]
	0x039E37C0 LDR X0, [X8 + 0x20]
	0x039E37C4 CBZ X0, 0x39E38C0
	0x039E37C8 LDR X8, [X26]
	0x039E37CC LDP S0, S1, [X31 + 0x48]
	0x039E37D0 FMOV S2, W31
	0x039E37D4 FMOV S3, W31
	0x039E37D8 LDR X8, [X8 + 0xB8]
	0x039E37DC MOV X2, X31
	0x039E37E0 LDR W1, [X8 + 0x14]
	0x039E37E4 BL 0x3C12720
	0x039E37E8 LDR X8, [X25]
	0x039E37EC LDR X8, [X8 + 0xB8]
	0x039E37F0 LDR X0, [X8 + 0x20]
	0x039E37F4 CBZ X0, 0x39E38C0
	0x039E37F8 LDR X8, [X26]
	0x039E37FC MOV W2, W22

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x9FF000
	015 Move X24, 0x770000
	016 Move W8, [X23+3532]
	017 Move X24, [X24+3624]
	018 Move W19, W3
	019 Move V12, V4
	020 Move V8, V3
	021 Move V9, V2
	022 Move V10, V1
	023 Move V11, V0
	024 Move X21, X2
	025 Move X22, X1
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x771000
	032 Move X0, [X0+432]
	033 Call 0x1C17CF4
	034 Move X0, 0x770000
	035 Move X0, [X0+3624]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3532], W8
	039 Move X0, [X24]
	040 Move X25, 0x771000
	041 Move W8, [X0+224]
	042 Move X25, [X25+432]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X24]
	047 Move X8, [X25]
	048 Move X9, [X0+184]
	049 Move W10, [X8+224]
	050 Move X23, [X9+32]
	051 Compare W10, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Compare X23, 0
	056 JumpIfEqual {149}
	057 Move X8, [X25]
	058 Move X0, X23
	059 Move V0, V12
	060 Move X2, X31
	061 Move X8, [X8+184]
	062 Move W1, [X8+16]
	063 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	064 Move X8, [X24]
	065 Move X8, [X8+184]
	066 Move X0, [X8+32]
	067 Compare X0, 0
	068 JumpIfEqual {149}
	069 Move X8, [X25]
	070 Move V0, V11
	071 Move V1, V10
	072 Move V2, V9
	073 Move X8, [X8+184]
	074 Move V3, V8
	075 Move X2, X31
	076 Move W1, [X8+8]
	077 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	078 Move X8, [X24]
	079 Move X8, [X8+184]
	080 Move X0, [X8+32]
	081 Compare X0, 0
	082 JumpIfEqual {149}
	083 Move X8, [X25]
	084 Move X2, X22
	085 Move X3, X31
	086 Move X8, [X8+184]
	087 Move W1, [X8]
	088 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	089 Move TEMP, X19
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {117}
	093 Move X0, [X24]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X24]
	099 Move X8, [X25]
	100 Move X9, [X0+184]
	101 Move W10, [X8+224]
	102 Move X22, [X9+32]
	103 Compare W10, 0
	104 JumpIfNotEqual {107}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Compare X22, 0
	108 JumpIfEqual {149}
	109 Move X8, [X25]
	110 Move W3, 1
	111 Move X0, X22
	112 Move X2, X21
	113 Move X8, [X8+184]
	114 Move X4, X31
	115 Move W1, [X8+32]
	116 Call MaterialPropertyBlock.SetTexture, X0, X1, X2, X3
	117 Move X0, [X24]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfEqual {123}
	121 Move X8, [X0+184]
	122 Move X21, [X8+24]
	123 Call 0x1C17DFC
	124 Move X0, [X24]
	125 Move X8, [X0+184]
	126 Move W9, [X0+224]
	127 Move X21, [X8+24]
	128 Compare W9, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 And W2, W19, 1
	132 Move X0, X20
	133 Move X1, X21
	134 Move X20, [X31+96]
	135 Move X19, [X31+104]
	136 Move X22, [X31+80]
	137 Move X21, [X31+88]
	138 Move X24, [X31+64]
	139 Move X23, [X31+72]
	140 Move X30, [X31+48]
	141 Move X25, [X31+56]
	142 Move D9, [X31+32]
	143 Move D8, [X31+40]
	144 Move D11, [X31+16]
	145 Move D10, [X31+24]
	146 Move V12, [X31+112]
	147 Call Blitter.DrawTriangle, X0, X1, X2
	148 Return 
	149 Call 0x1C17F20

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Vector4 scaleBias, UnityEngine.Material material, System.Int32 pass)

Disassembly:
	0x039E33B4 STR D12, [X31 - 0x60]!
	0x039E33B8 STP D11, D10, [X31 + 0x8]
	0x039E33BC STP D9, D8, [X31 + 0x18]
	0x039E33C0 STR X30, [X31 + 0x28]
	0x039E33C4 STP X24, X23, [X31 + 0x30]
	0x039E33C8 STP X22, X21, [X31 + 0x40]
	0x039E33CC STP X20, X19, [X31 + 0x50]
	0x039E33D0 ADRP X24, 0x9FE000
	0x039E33D4 ADRP X23, 0x738000
	0x039E33D8 LDRB W8, [X24 + 0xDD6]
	0x039E33DC LDR X23, [X23 + 0x8F8]
	0x039E33E0 MOV W19, W3
	0x039E33E4 MOV V8.16B, V4.16B
	0x039E33E8 MOV V9.16B, V3.16B
	0x039E33EC MOV V10.16B, V2.16B
	0x039E33F0 MOV V11.16B, V1.16B
	0x039E33F4 MOV V12.16B, V0.16B
	0x039E33F8 MOV X22, X2
	0x039E33FC MOV X20, X1
	0x039E3400 MOV X21, X0
	0x039E3404 TBNZ X8, 0x0, 0x39E3428
	0x039E3408 ADRP X0, 0x76F000
	0x039E340C LDR X0, [X0 + 0xE28]
	0x039E3410 BL 0x1C16CF4
	0x039E3414 ADRP X0, 0x738000
	0x039E3418 LDR X0, [X0 + 0x8F8]
	0x039E341C BL 0x1C16CF4
	0x039E3420 MOVZ W8, 0x1
	0x039E3424 STRB W8, [X24 + 0xDD6]
	0x039E3428 LDR X0, [X23]
	0x039E342C ADRP X23, 0x76F000
	0x039E3430 LDR W8, [X0 + 0xE0]
	0x039E3434 LDR X23, [X23 + 0xE28]
	0x039E3438 CBNZ W8, 0x39E3440
	0x039E343C BL 0x1C16DFC
	0x039E3440 MOVN W4, 0x0
	0x039E3444 MOVN W5, 0x0
	0x039E3448 MOV X0, X21
	0x039E344C MOV X1, X22
	0x039E3450 MOV W2, W31
	0x039E3454 MOV W3, W31
	0x039E3458 BL 0x39E2DCC
	0x039E345C LDR X0, [X23]
	0x039E3460 LDR W8, [X0 + 0xE0]
	0x039E3464 CBNZ W8, 0x39E346C
	0x039E3468 BL 0x1C16DFC
	0x039E346C AND W2, W19, 0x1
	0x039E3470 MOV X0, X21
	0x039E3474 MOV X1, X20
	0x039E3478 MOV V1.16B, V11.16B
	0x039E347C MOV V2.16B, V10.16B
	0x039E3480 MOV V3.16B, V9.16B
	0x039E3484 MOV V4.16B, V8.16B
	0x039E3488 LDP X20, X19, [X31 + 0x50]
	0x039E348C LDP X22, X21, [X31 + 0x40]
	0x039E3490 LDP X24, X23, [X31 + 0x30]
	0x039E3494 LDR X30, [X31 + 0x28]
	0x039E3498 LDP D9, D8, [X31 + 0x18]
	0x039E349C LDP D11, D10, [X31 + 0x8]
	0x039E34A0 MOV V0.16B, V12.16B
	0x039E34A4 LDR V12, [X31], #0x60
	0x039E34A8 B 0x39E2260
	0x039E34AC SUB X31, X31, 0xA0
	0x039E34B0 STR D14, [X31 + 0x30]
	0x039E34B4 STP D13, D12, [X31 + 0x38]
	0x039E34B8 STP D11, D10, [X31 + 0x48]
	0x039E34BC STP D9, D8, [X31 + 0x58]
	0x039E34C0 STR X30, [X31 + 0x68]
	0x039E34C4 STP X24, X23, [X31 + 0x70]
	0x039E34C8 STP X22, X21, [X31 + 0x80]
	0x039E34CC STP X20, X19, [X31 + 0x90]
	0x039E34D0 ADRP X23, 0x9FE000
	0x039E34D4 LDRB W8, [X23 + 0xDD7]
	0x039E34D8 MOV W20, W3
	0x039E34DC MOV V8.16B, V4.16B
	0x039E34E0 MOV V9.16B, V3.16B
	0x039E34E4 MOV V10.16B, V2.16B
	0x039E34E8 MOV V11.16B, V1.16B

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x9FF000
	014 Move X24, 0x770000
	015 Move W8, [X23+3533]
	016 Move X24, [X24+3624]
	017 Move W19, W3
	018 Move X20, X2
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move X22, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x771000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0x770000
	033 Move X0, [X0+3624]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3533], W8
	037 Move X0, [X24]
	038 Move X25, 0x771000
	039 Move W8, [X0+224]
	040 Move X25, [X25+432]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X24]
	045 Move X8, [X25]
	046 Move X9, [X0+184]
	047 Move W10, [X8+224]
	048 Move X23, [X9+32]
	049 Compare W10, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Compare X23, 0
	054 JumpIfEqual {98}
	055 Move X8, [X25]
	056 Move X0, X23
	057 Move V0, V11
	058 Move V1, V10
	059 Move X8, [X8+184]
	060 Move V2, V9
	061 Move V3, V8
	062 Move X2, X31
	063 Move W1, [X8+8]
	064 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	065 Move X8, [X24]
	066 Move X9, [X25]
	067 Move X0, X22
	068 Move X1, X31
	069 Move X8, [X8+184]
	070 Move X9, [X9+184]
	071 Move X24, [X8+32]
	072 Move W23, [X9]
	073 Call RTHandle.op_Implicit, X0
	074 Compare X24, 0
	075 JumpIfEqual {98}
	076 Move X2, X0
	077 Move X0, X24
	078 Move W1, W23
	079 Move X3, X31
	080 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	081 Move X0, X21
	082 Move X1, X20
	083 Move W2, W19
	084 Move X20, [X31+80]
	085 Move X19, [X31+88]
	086 Move X22, [X31+64]
	087 Move X21, [X31+72]
	088 Move X24, [X31+48]
	089 Move X23, [X31+56]
	090 Move X30, [X31+32]
	091 Move X25, [X31+40]
	092 Move D9, [X31+16]
	093 Move D8, [X31+24]
	094 Move D11, [X31+96]
	095 Move D10, [X31+104]
	096 Call Blitter.DrawTriangle, X0, X1, X2
	097 Return 
	098 Call 0x1C17F20

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Vector4 scaleBias, UnityEngine.Material material, System.Int32 pass)

Disassembly:
	0x039E3800 MOV X3, X31
	0x039E3804 LDR X8, [X8 + 0xB8]
	0x039E3808 LDR W1, [X8 + 0x18]
	0x039E380C BL 0x3C12528
	0x039E3810 CBZ X21, 0x39E38C0
	0x039E3814 MOV X0, X21
	0x039E3818 MOV X1, X31
	0x039E381C BL 0x3C1A9D4
	0x039E3820 LDR X8, [X21]
	0x039E3824 MOV W22, W0
	0x039E3828 MOV X0, X21
	0x039E382C LDP X9, X1, [X8 + 0x1C8]
	0x039E3830 BLR X9
	0x039E3834 LDR X8, [X25]
	0x039E3838 MOV W21, W0
	0x039E383C LDR W9, [X8 + 0xE0]
	0x039E3840 CBNZ W9, 0x39E384C
	0x039E3844 MOV X0, X8
	0x039E3848 BL 0x1C16DFC
	0x039E384C MOV W0, W21
	0x039E3850 MOV W1, W31
	0x039E3854 BL 0x39E1E80
	0x039E3858 MOV X21, X0
	0x039E385C CBZ W22, 0x39E3870
	0x039E3860 LDR X0, [X25]
	0x039E3864 ANDS W31, W20, 0x1
	0x039E3868 MOVZ W9, 0x4
	0x039E386C B 0x39E387C
	0x039E3870 LDR X0, [X25]
	0x039E3874 ANDS W31, W20, 0x1
	0x039E3878 MOVZ W9, 0x6
	0x039E387C LDR W8, [X0 + 0xE0]
	0x039E3880 CINC W20, W9, NE
	0x039E3884 CBNZ W8, 0x39E388C
	0x039E3888 BL 0x1C16DFC
	0x039E388C MOV X0, X19
	0x039E3890 MOV X1, X21
	0x039E3894 MOV W2, W20
	0x039E3898 LDP X20, X19, [X31 + 0x80]
	0x039E389C LDP X22, X21, [X31 + 0x70]
	0x039E38A0 LDP X24, X23, [X31 + 0x60]
	0x039E38A4 LDP X26, X25, [X31 + 0x50]
	0x039E38A8 LDR X30, [X31 + 0x40]
	0x039E38AC LDP D9, D8, [X31 + 0x30]
	0x039E38B0 LDP D11, D10, [X31 + 0x20]
	0x039E38B4 LDP D13, D12, [X31 + 0x10]
	0x039E38B8 LDP D15, D14, [X31], #0x90
	0x039E38BC B 0x39E20B0
	0x039E38C0 BL 0x1C16F20
	0x039E38C4 STP D15, D14, [X31 - 0x90]!
	0x039E38C8 STP D13, D12, [X31 + 0x10]
	0x039E38CC STP D11, D10, [X31 + 0x20]
	0x039E38D0 STP D9, D8, [X31 + 0x30]
	0x039E38D4 STR X30, [X31 + 0x40]
	0x039E38D8 STP X26, X25, [X31 + 0x50]
	0x039E38DC STP X24, X23, [X31 + 0x60]
	0x039E38E0 STP X22, X21, [X31 + 0x70]
	0x039E38E4 STP X20, X19, [X31 + 0x80]
	0x039E38E8 STP S0, S1, [X31 + 0x48]
	0x039E38EC ADRP X24, 0x9FE000
	0x039E38F0 ADRP X25, 0x76F000
	0x039E38F4 LDP S11, S10, [X31 + 0x98]
	0x039E38F8 LDRB W8, [X24 + 0xDDA]
	0x039E38FC LDP S13, S12, [X31 + 0x90]
	0x039E3900 LDR X25, [X25 + 0xE28]
	0x039E3904 MOV W22, W4
	0x039E3908 MOV W20, W3
	0x039E390C MOV W23, W2
	0x039E3910 MOV V14.16B, V5.16B
	0x039E3914 MOV V15.16B, V4.16B
	0x039E3918 MOV V8.16B, V3.16B
	0x039E391C MOV V9.16B, V2.16B
	0x039E3920 MOV X21, X1
	0x039E3924 MOV X19, X0
	0x039E3928 TBNZ X8, 0x0, 0x39E394C
	0x039E392C ADRP X0, 0x770000
	0x039E3930 LDR X0, [X0 + 0x1B0]
	0x039E3934 BL 0x1C16CF4
	0x039E3938 ADRP X0, 0x76F000
	0x039E393C LDR X0, [X0 + 0xE28]
	0x039E3940 BL 0x1C16CF4
	0x039E3944 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X24, 0x9FF000
	014 Move X23, 0x770000
	015 Move W8, [X24+3534]
	016 Move X23, [X23+3624]
	017 Move W19, W3
	018 Move X20, X2
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move X22, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x771000
	030 Move X0, [X0+432]
	031 Call 0x1C17CF4
	032 Move X0, 0x770000
	033 Move X0, [X0+3624]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+3534], W8
	037 Move X0, [X23]
	038 Move X24, 0x771000
	039 Move W8, [X0+224]
	040 Move X24, [X24+432]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X23]
	045 Move X8, [X24]
	046 Move X9, [X0+184]
	047 Move W10, [X8+224]
	048 Move X23, [X9+32]
	049 Compare W10, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Compare X23, 0
	054 JumpIfEqual {103}
	055 Move X8, [X24]
	056 Move X0, X23
	057 Move V0, V11
	058 Move V1, V10
	059 Move X8, [X8+184]
	060 Move V2, V9
	061 Move V3, V8
	062 Move X2, X31
	063 Move W1, [X8+8]
	064 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	065 Move X8, [X24]
	066 Move X9, [X22+32]
	067 Move V1, [X22]
	068 Move V0, [X22+16]
	069 Move X8, [X8+184]
	070 Move W1, [X8]
	071 Move [X31+80], X9
	072 Move [X31+48], V1
	073 Move [X31+56], V0
	074 Compare X21, 0
	075 JumpIfEqual {103}
	076 Move V0, [X31+48]
	077 Move V1, [X31+64]
	078 Move X8, [X31+80]
	079 Add X2, X31, 0
	080 Move X0, X21
	081 Move X3, X31
	082 Move [X31], V0
	083 Move [X31+8], V1
	084 Move [X31+32], X8
	085 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	086 Move X0, X21
	087 Move X1, X20
	088 Move W2, W19
	089 Call Blitter.DrawTriangle, X0, X1, X2
	090 Move X20, [X31+176]
	091 Move X19, [X31+184]
	092 Move X22, [X31+160]
	093 Move X21, [X31+168]
	094 Move X24, [X31+144]
	095 Move X23, [X31+152]
	096 Move X30, [X31+128]
	097 Move D9, [X31+112]
	098 Move D8, [X31+120]
	099 Move D11, [X31+96]
	100 Move D10, [X31+104]
	101 Add X31, X31, 192
	102 Return 
	103 Call 0x1C17F20

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Rendering.RenderTargetIdentifier destination, UnityEngine.Material material, System.Int32 pass)

Disassembly:
	0x039E3948 STRB W8, [X24 + 0xDDA]
	0x039E394C LDR X0, [X25]
	0x039E3950 ADRP X26, 0x770000
	0x039E3954 LDR W8, [X0 + 0xE0]
	0x039E3958 LDR X26, [X26 + 0x1B0]
	0x039E395C CBNZ W8, 0x39E3968
	0x039E3960 BL 0x1C16DFC
	0x039E3964 LDR X0, [X25]
	0x039E3968 LDR X8, [X26]
	0x039E396C LDR X9, [X0 + 0xB8]
	0x039E3970 LDR W10, [X8 + 0xE0]
	0x039E3974 LDR X24, [X9 + 0x20]
	0x039E3978 CBNZ W10, 0x39E3984
	0x039E397C MOV X0, X8
	0x039E3980 BL 0x1C16DFC
	0x039E3984 CBZ X24, 0x39E3B3C
	0x039E3988 LDR X8, [X26]
	0x039E398C MOV X0, X24
	0x039E3990 MOV X2, X21
	0x039E3994 MOV X3, X31
	0x039E3998 LDR X8, [X8 + 0xB8]
	0x039E399C LDR W1, [X8]
	0x039E39A0 BL 0x3C12828
	0x039E39A4 LDR X8, [X25]
	0x039E39A8 LDR X8, [X8 + 0xB8]
	0x039E39AC LDR X0, [X8 + 0x20]
	0x039E39B0 CBZ X0, 0x39E3B3C
	0x039E39B4 LDR X8, [X26]
	0x039E39B8 MOV V0.16B, V9.16B
	0x039E39BC MOV V1.16B, V8.16B
	0x039E39C0 MOV V2.16B, V15.16B
	0x039E39C4 LDR X8, [X8 + 0xB8]
	0x039E39C8 MOV V3.16B, V14.16B
	0x039E39CC MOV X2, X31
	0x039E39D0 LDR W1, [X8 + 0x8]
	0x039E39D4 BL 0x3C12720
	0x039E39D8 LDR X8, [X25]
	0x039E39DC LDR X8, [X8 + 0xB8]
	0x039E39E0 LDR X0, [X8 + 0x20]
	0x039E39E4 CBZ X0, 0x39E3B3C
	0x039E39E8 LDR X8, [X26]
	0x039E39EC MOV V0.16B, V13.16B
	0x039E39F0 MOV V1.16B, V12.16B
	0x039E39F4 MOV V2.16B, V11.16B
	0x039E39F8 LDR X8, [X8 + 0xB8]
	0x039E39FC MOV V3.16B, V10.16B
	0x039E3A00 MOV X2, X31
	0x039E3A04 LDR W1, [X8 + 0xC]
	0x039E3A08 BL 0x3C12720
	0x039E3A0C LDR X8, [X25]
	0x039E3A10 LDR X8, [X8 + 0xB8]
	0x039E3A14 LDR X0, [X8 + 0x20]
	0x039E3A18 CBZ X0, 0x39E3B3C
	0x039E3A1C LDR X8, [X26]
	0x039E3A20 SCVTF S0, W23
	0x039E3A24 MOV X2, X31
	0x039E3A28 LDR X8, [X8 + 0xB8]
	0x039E3A2C LDR W1, [X8 + 0x10]
	0x039E3A30 BL 0x3C125FC
	0x039E3A34 LDR X8, [X25]
	0x039E3A38 LDR X8, [X8 + 0xB8]
	0x039E3A3C LDR X0, [X8 + 0x20]
	0x039E3A40 CBZ X0, 0x39E3B3C
	0x039E3A44 LDR X8, [X26]
	0x039E3A48 LDP S0, S1, [X31 + 0x48]
	0x039E3A4C FMOV S2, W31
	0x039E3A50 FMOV S3, W31
	0x039E3A54 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+152], X25
	004 Move [X31+160], X24
	005 Move [X31+168], X23
	006 Move [X31+176], X22
	007 Move [X31+184], X21
	008 Move [X31+192], X20
	009 Move [X31+200], X19
	010 Move X25, 0x9FF000
	011 Move X24, 0x771000
	012 Move W8, [X25+3535]
	013 Move X24, [X24+432]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X22, X2
	017 Move X23, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x771000
	024 Move X0, [X0+432]
	025 Call 0x1C17CF4
	026 Move X0, 0x770000
	027 Move X0, [X0+3624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+3535], W8
	031 Move X0, [X24]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X24]
	037 Move X8, [X0+184]
	038 Move X9, [X23+32]
	039 Move V1, [X23]
	040 Move V0, [X23+16]
	041 Move W1, [X8]
	042 Move [X31+128], X9
	043 Move [X31+96], V1
	044 Move [X31+104], V0
	045 Compare X21, 0
	046 JumpIfEqual {88}
	047 Move V0, [X31+96]
	048 Move V1, [X31+112]
	049 Move X8, [X31+128]
	050 Move X23, 0x770000
	051 Move X23, [X23+3624]
	052 Add X2, X31, 48
	053 Move X0, X21
	054 Move X3, X31
	055 Move [X31+48], V0
	056 Move [X31+56], V1
	057 Move [X31+80], X8
	058 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	059 Move X8, [X22+32]
	060 Move V1, [X22]
	061 Move V0, [X22+16]
	062 Add X1, X31, 0
	063 Move X0, X21
	064 Move X2, X31
	065 Move [X31+32], X8
	066 Move [X31], V1
	067 Move [X31+8], V0
	068 Call CommandBuffer.SetRenderTarget, X0, X1
	069 Move X0, [X23]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X21
	075 Move X1, X20
	076 Move W2, W19
	077 Call Blitter.DrawTriangle, X0, X1, X2
	078 Move X20, [X31+192]
	079 Move X19, [X31+200]
	080 Move X22, [X31+176]
	081 Move X21, [X31+184]
	082 Move X24, [X31+160]
	083 Move X23, [X31+168]
	084 Move X30, [X31+144]
	085 Move X25, [X31+152]
	086 Add X31, X31, 208
	087 Return 
	088 Call 0x1C17F20

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Rendering.RenderTargetIdentifier destination, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Material material, System.Int32 pass)

Disassembly:
	0x039E3A58 MOV X2, X31
	0x039E3A5C LDR W1, [X8 + 0x14]
	0x039E3A60 BL 0x3C12720
	0x039E3A64 LDR X8, [X25]
	0x039E3A68 LDR X8, [X8 + 0xB8]
	0x039E3A6C LDR X0, [X8 + 0x20]
	0x039E3A70 CBZ X0, 0x39E3B3C
	0x039E3A74 LDR X8, [X26]
	0x039E3A78 MOV W2, W22
	0x039E3A7C MOV X3, X31
	0x039E3A80 LDR X8, [X8 + 0xB8]
	0x039E3A84 LDR W1, [X8 + 0x18]
	0x039E3A88 BL 0x3C12528
	0x039E3A8C CBZ X21, 0x39E3B3C
	0x039E3A90 MOV X0, X21
	0x039E3A94 MOV X1, X31
	0x039E3A98 BL 0x3C1A9D4
	0x039E3A9C LDR X8, [X21]
	0x039E3AA0 MOV W22, W0
	0x039E3AA4 MOV X0, X21
	0x039E3AA8 LDP X9, X1, [X8 + 0x1C8]
	0x039E3AAC BLR X9
	0x039E3AB0 LDR X8, [X25]
	0x039E3AB4 MOV W21, W0
	0x039E3AB8 LDR W9, [X8 + 0xE0]
	0x039E3ABC CBNZ W9, 0x39E3AC8
	0x039E3AC0 MOV X0, X8
	0x039E3AC4 BL 0x1C16DFC
	0x039E3AC8 MOV W0, W21
	0x039E3ACC MOV W1, W31
	0x039E3AD0 BL 0x39E1E80
	0x039E3AD4 MOV X21, X0
	0x039E3AD8 CBZ W22, 0x39E3AEC
	0x039E3ADC LDR X0, [X25]
	0x039E3AE0 ANDS W31, W20, 0x1
	0x039E3AE4 MOVZ W9, 0x9
	0x039E3AE8 B 0x39E3AF8
	0x039E3AEC LDR X0, [X25]
	0x039E3AF0 ANDS W31, W20, 0x1
	0x039E3AF4 MOVZ W9, 0xB
	0x039E3AF8 LDR W8, [X0 + 0xE0]
	0x039E3AFC CINC W20, W9, NE
	0x039E3B00 CBNZ W8, 0x39E3B08
	0x039E3B04 BL 0x1C16DFC
	0x039E3B08 MOV X0, X19
	0x039E3B0C MOV X1, X21
	0x039E3B10 MOV W2, W20
	0x039E3B14 LDP X20, X19, [X31 + 0x80]
	0x039E3B18 LDP X22, X21, [X31 + 0x70]
	0x039E3B1C LDP X24, X23, [X31 + 0x60]
	0x039E3B20 LDP X26, X25, [X31 + 0x50]
	0x039E3B24 LDR X30, [X31 + 0x40]
	0x039E3B28 LDP D9, D8, [X31 + 0x30]
	0x039E3B2C LDP D11, D10, [X31 + 0x20]
	0x039E3B30 LDP D13, D12, [X31 + 0x10]
	0x039E3B34 LDP D15, D14, [X31], #0x90
	0x039E3B38 B 0x39E20B0
	0x039E3B3C BL 0x1C16F20
	0x039E3B40 SUB X31, X31, 0x90
	0x039E3B44 STP D15, D14, [X31 + 0x10]
	0x039E3B48 STP D13, D12, [X31 + 0x20]
	0x039E3B4C STP D11, D10, [X31 + 0x30]
	0x039E3B50 STP D9, D8, [X31 + 0x40]
	0x039E3B54 STP X30, X25, [X31 + 0x50]
	0x039E3B58 STP X24, X23, [X31 + 0x60]
	0x039E3B5C STP X22, X21, [X31 + 0x70]
	0x039E3B60 STP X20, X19, [X31 + 0x80]
	0x039E3B64 STP S0, S1, [X31 + 0x8]
	0x039E3B68 ADRP X23, 0x9FE000
	0x039E3B6C ADRP X24, 0x76F000
	0x039E3B70 LDP S11, S10, [X31 + 0x98]
	0x039E3B74 LDRB W8, [X23 + 0xDDB]
	0x039E3B78 LDP S13, S12, [X31 + 0x90]
	0x039E3B7C LDR X24, [X24 + 0xE28]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 Move X27, 0x9FF000
	013 Move X26, 0x771000
	014 Move W8, [X27+3536]
	015 Move X26, [X26+432]
	016 Move W19, W6
	017 Move X20, X5
	018 Move W22, W4
	019 Move W23, W3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x771000
	028 Move X0, [X0+432]
	029 Call 0x1C17CF4
	030 Move X0, 0x770000
	031 Move X0, [X0+3624]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X27+3536], W8
	035 Move X0, [X26]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X26]
	041 Move X8, [X0+184]
	042 Move X9, [X25+32]
	043 Move V1, [X25]
	044 Move V0, [X25+16]
	045 Move W1, [X8]
	046 Move [X31+128], X9
	047 Move [X31+96], V1
	048 Move [X31+104], V0
	049 Compare X21, 0
	050 JumpIfEqual {96}
	051 Move V0, [X31+96]
	052 Move V1, [X31+112]
	053 Move X8, [X31+128]
	054 Move X25, 0x770000
	055 Move X25, [X25+3624]
	056 Add X2, X31, 48
	057 Move X0, X21
	058 Move X3, X31
	059 Move [X31+48], V0
	060 Move [X31+56], V1
	061 Move [X31+80], X8
	062 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	063 Move X8, [X24+32]
	064 Move V1, [X24]
	065 Move V0, [X24+16]
	066 Add X1, X31, 0
	067 Move X0, X21
	068 Move W2, W23
	069 Move W3, W22
	070 Move X4, X31
	071 Move [X31+32], X8
	072 Move [X31], V1
	073 Move [X31+8], V0
	074 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3
	075 Move X0, [X25]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X21
	081 Move X1, X20
	082 Move W2, W19
	083 Call Blitter.DrawTriangle, X0, X1, X2
	084 Move X20, [X31+208]
	085 Move X19, [X31+216]
	086 Move X22, [X31+192]
	087 Move X21, [X31+200]
	088 Move X24, [X31+176]
	089 Move X23, [X31+184]
	090 Move X26, [X31+160]
	091 Move X25, [X31+168]
	092 Move X30, [X31+144]
	093 Move X27, [X31+152]
	094 Add X31, X31, 224
	095 Return 
	096 Call 0x1C17F20

Method: System.Void BlitTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4 scaleBias, UnityEngine.Material material, System.Int32 pass)

Disassembly:
	0x039E3B80 MOV W21, W4
	0x039E3B84 MOV W22, W2
	0x039E3B88 MOV V14.16B, V5.16B
	0x039E3B8C MOV V15.16B, V4.16B
	0x039E3B90 MOV V8.16B, V3.16B
	0x039E3B94 MOV V9.16B, V2.16B
	0x039E3B98 MOV X20, X1
	0x039E3B9C MOV X19, X0
	0x039E3BA0 TBNZ X8, 0x0, 0x39E3BC4
	0x039E3BA4 ADRP X0, 0x770000
	0x039E3BA8 LDR X0, [X0 + 0x1B0]
	0x039E3BAC BL 0x1C16CF4
	0x039E3BB0 ADRP X0, 0x76F000
	0x039E3BB4 LDR X0, [X0 + 0xE28]
	0x039E3BB8 BL 0x1C16CF4
	0x039E3BBC MOVZ W8, 0x1
	0x039E3BC0 STRB W8, [X23 + 0xDDB]
	0x039E3BC4 LDR X0, [X24]
	0x039E3BC8 ADRP X25, 0x770000
	0x039E3BCC LDR W8, [X0 + 0xE0]
	0x039E3BD0 LDR X25, [X25 + 0x1B0]
	0x039E3BD4 CBNZ W8, 0x39E3BE0
	0x039E3BD8 BL 0x1C16DFC
	0x039E3BDC LDR X0, [X24]
	0x039E3BE0 LDR X8, [X25]
	0x039E3BE4 LDR X9, [X0 + 0xB8]
	0x039E3BE8 LDR W10, [X8 + 0xE0]
	0x039E3BEC LDR X23, [X9 + 0x20]
	0x039E3BF0 CBNZ W10, 0x39E3BFC
	0x039E3BF4 MOV X0, X8
	0x039E3BF8 BL 0x1C16DFC
	0x039E3BFC CBZ X23, 0x39E3D54
	0x039E3C00 LDR X8, [X25]
	0x039E3C04 MOV X0, X23
	0x039E3C08 MOV X2, X20
	0x039E3C0C MOV X3, X31
	0x039E3C10 LDR X8, [X8 + 0xB8]
	0x039E3C14 LDR W1, [X8]
	0x039E3C18 BL 0x3C12828
	0x039E3C1C LDR X8, [X24]
	0x039E3C20 LDR X8, [X8 + 0xB8]
	0x039E3C24 LDR X0, [X8 + 0x20]
	0x039E3C28 CBZ X0, 0x39E3D54
	0x039E3C2C LDR X8, [X25]
	0x039E3C30 MOV V0.16B, V9.16B
	0x039E3C34 MOV V1.16B, V8.16B
	0x039E3C38 MOV V2.16B, V15.16B
	0x039E3C3C LDR X8, [X8 + 0xB8]
	0x039E3C40 MOV V3.16B, V14.16B
	0x039E3C44 MOV X2, X31
	0x039E3C48 LDR W1, [X8 + 0x8]
	0x039E3C4C BL 0x3C12720
	0x039E3C50 LDR X8, [X24]
	0x039E3C54 LDR X8, [X8 + 0xB8]
	0x039E3C58 LDR X0, [X8 + 0x20]
	0x039E3C5C CBZ X0, 0x39E3D54
	0x039E3C60 LDR X8, [X25]
	0x039E3C64 MOV V0.16B, V13.16B
	0x039E3C68 MOV V1.16B, V12.16B
	0x039E3C6C MOV V2.16B, V11.16B

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x9FF000
	012 Move X22, 0x770000
	013 Move W8, [X23+3537]
	014 Move X22, [X22+3624]
	015 Move W19, W2
	016 Move X20, X1
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x771000
	027 Move X0, [X0+432]
	028 Call 0x1C17CF4
	029 Move X0, 0x770000
	030 Move X0, [X0+3624]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+3537], W8
	034 Move X0, [X22]
	035 Move X23, 0x771000
	036 Move W8, [X0+224]
	037 Move X23, [X23+432]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X23]
	043 Move X9, [X0+184]
	044 Move W10, [X8+224]
	045 Move X22, [X9+32]
	046 Compare W10, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Compare X22, 0
	051 JumpIfEqual {77}
	052 Move X8, [X23]
	053 Move X0, X22
	054 Move V0, V11
	055 Move V1, V10
	056 Move X8, [X8+184]
	057 Move V2, V9
	058 Move V3, V8
	059 Move X2, X31
	060 Move W1, [X8+8]
	061 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	062 Move X0, X21
	063 Move X1, X20
	064 Move W2, W19
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X30, [X31+32]
	070 Move X23, [X31+40]
	071 Move D9, [X31+16]
	072 Move D8, [X31+24]
	073 Move D11, [X31+80]
	074 Move D10, [X31+88]
	075 Call Blitter.DrawTriangle, X0, X1, X2
	076 Return 
	077 Call 0x1C17F20

Method: System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, System.Single mipLevel = 0, System.Boolean bilinear = False)

Disassembly:
	0x039E3C70 LDR X8, [X8 + 0xB8]
	0x039E3C74 MOV V3.16B, V10.16B
	0x039E3C78 MOV X2, X31
	0x039E3C7C LDR W1, [X8 + 0xC]
	0x039E3C80 BL 0x3C12720
	0x039E3C84 LDR X8, [X24]
	0x039E3C88 LDR X8, [X8 + 0xB8]
	0x039E3C8C LDR X0, [X8 + 0x20]
	0x039E3C90 CBZ X0, 0x39E3D54
	0x039E3C94 LDR X8, [X25]
	0x039E3C98 SCVTF S0, W22
	0x039E3C9C MOV X2, X31
	0x039E3CA0 LDR X8, [X8 + 0xB8]
	0x039E3CA4 LDR W1, [X8 + 0x10]
	0x039E3CA8 BL 0x3C125FC
	0x039E3CAC LDR X8, [X24]
	0x039E3CB0 LDR X8, [X8 + 0xB8]
	0x039E3CB4 LDR X0, [X8 + 0x20]
	0x039E3CB8 CBZ X0, 0x39E3D54
	0x039E3CBC LDR X8, [X25]
	0x039E3CC0 LDP S0, S1, [X31 + 0x8]
	0x039E3CC4 FMOV S2, W31
	0x039E3CC8 FMOV S3, W31
	0x039E3CCC LDR X8, [X8 + 0xB8]
	0x039E3CD0 MOV X2, X31
	0x039E3CD4 LDR W1, [X8 + 0x14]
	0x039E3CD8 BL 0x3C12720
	0x039E3CDC LDR X8, [X24]
	0x039E3CE0 LDR X8, [X8 + 0xB8]
	0x039E3CE4 LDR X0, [X8 + 0x20]
	0x039E3CE8 CBZ X0, 0x39E3D54
	0x039E3CEC LDR X8, [X25]
	0x039E3CF0 MOV W2, W21
	0x039E3CF4 MOV X3, X31
	0x039E3CF8 LDR X8, [X8 + 0xB8]
	0x039E3CFC LDR W1, [X8 + 0x18]
	0x039E3D00 BL 0x3C12528
	0x039E3D04 CBZ X20, 0x39E3D54
	0x039E3D08 LDR X8, [X20]
	0x039E3D0C MOV X0, X20
	0x039E3D10 LDP X9, X1, [X8 + 0x1C8]
	0x039E3D14 BLR X9
	0x039E3D18 MOV W1, W31
	0x039E3D1C BL 0x39E1E80
	0x039E3D20 MOV X1, X0
	0x039E3D24 MOV X0, X19
	0x039E3D28 LDP X20, X19, [X31 + 0x80]
	0x039E3D2C LDP X22, X21, [X31 + 0x70]
	0x039E3D30 LDP X24, X23, [X31 + 0x60]
	0x039E3D34 LDP X30, X25, [X31 + 0x50]
	0x039E3D38 LDP D9, D8, [X31 + 0x40]
	0x039E3D3C LDP D11, D10, [X31 + 0x30]
	0x039E3D40 LDP D13, D12, [X31 + 0x20]
	0x039E3D44 LDP D15, D14, [X31 + 0x10]
	0x039E3D48 MOVZ W2, 0x8
	0x039E3D4C ADD X31, X31, 0x90
	0x039E3D50 B 0x39E20B0
	0x039E3D54 BL 0x1C16F20
	0x039E3D58 SUB X31, X31, 0x90
	0x039E3D5C STP D15, D14, [X31 + 0x10]
	0x039E3D60 STP D13, D12, [X31 + 0x20]
	0x039E3D64 STP D11, D10, [X31 + 0x30]
	0x039E3D68 STP D9, D8, [X31 + 0x40]
	0x039E3D6C STP X30, X25, [X31 + 0x50]
	0x039E3D70 STP X24, X23, [X31 + 0x60]
	0x039E3D74 STP X22, X21, [X31 + 0x70]
	0x039E3D78 STP X20, X19, [X31 + 0x80]
	0x039E3D7C STP S0, S1, [X31 + 0x8]
	0x039E3D80 ADRP X23, 0x9FE000
	0x039E3D84 ADRP X24, 0x76F000
	0x039E3D88 LDP S11, S10, [X31 + 0x98]
	0x039E3D8C LDRB W8, [X23 + 0xDDC]
	0x039E3D90 LDP S13, S12, [X31 + 0x90]
	0x039E3D94 LDR X24, [X24 + 0xE28]
	0x039E3D98 MOV W21, W4
	0x039E3D9C MOV W22, W2
	0x039E3DA0 MOV V14.16B, V5.16B
	0x039E3DA4 MOV V15.16B, V4.16B
	0x039E3DA8 MOV V8.16B, V3.16B
	0x039E3DAC MOV V9.16B, V2.16B
	0x039E3DB0 MOV X20, X1
	0x039E3DB4 MOV X19, X0
	0x039E3DB8 TBNZ X8, 0x0, 0x39E3DDC
	0x039E3DBC ADRP X0, 0x770000
	0x039E3DC0 LDR X0, [X0 + 0x1B0]
	0x039E3DC4 BL 0x1C16CF4
	0x039E3DC8 ADRP X0, 0x76F000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D10
	003 Move [X31+56], D9
	004 Move [X31+64], D8
	005 Move [X31+72], X30
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X23, 0x9FF000
	013 Move W8, [X23+3538]
	014 Move W21, W3
	015 Move V8, V0
	016 Move X22, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x770000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move X0, 0x739000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3538], W8
	031 Compare X19, 0
	032 JumpIfEqual {107}
	033 Move X23, 0x739000
	034 Move W8, [X19+168]
	035 Move X23, [X23+2296]
	036 Compare W8, 0
	037 JumpIfEqual {48}
	038 Add X8, X31, 0
	039 Move X0, X19
	040 Move X1, X31
	041 Call RTHandle.get_rtHandleProperties, X0
	042 Move V9, [X31+32]
	043 Add X8, X31, 0
	044 Move X0, X19
	045 Move X1, X31
	046 Call RTHandle.get_rtHandleProperties, X0
	047 Move V10, [X31+36]
	048 Move X24, 0x9FF000
	049 Move W8, [X24+2632]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x719000
	053 Move X0, [X0+3848]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X24+2632], W8
	057 Move X8, 0x719000
	058 Move X8, [X8+3848]
	059 Move X8, [X8]
	060 Move X8, [X8+184]
	061 Move S9, [X8+8]
	062 Move S10, [X8+12]
	063 Move X0, [X23]
	064 Move X23, 0x770000
	065 Move W8, [X0+224]
	066 Move X23, [X23+3624]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W4, TEMP
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W5, TEMP
	076 Move X0, X20
	077 Move X1, X22
	078 Move W2, W31
	079 Move W3, W31
	080 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 And W2, W21, 1
	087 Move S2, W31
	088 Move S3, W31
	089 Move X0, X20
	090 Move X1, X19
	091 Move V0, V9
	092 Move V1, V10
	093 Move V4, V8
	094 Call Blitter.BlitTexture, X0, X1, X2, V0, X3
	095 Move X20, [X31+112]
	096 Move X19, [X31+120]
	097 Move X22, [X31+96]
	098 Move X21, [X31+104]
	099 Move X24, [X31+80]
	100 Move X23, [X31+88]
	101 Move X30, [X31+72]
	102 Move D9, [X31+56]
	103 Move D8, [X31+64]
	104 Move V10, [X31+48]
	105 Add X31, X31, 128
	106 Return 
	107 Call 0x1C17F20

Method: System.Void BlitCameraTexture2D(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, System.Single mipLevel = 0, System.Boolean bilinear = False)

Disassembly:
	0x039E3E70 LDR X0, [X8 + 0x20]
	0x039E3E74 CBZ X0, 0x39E3F6C
	0x039E3E78 LDR X8, [X25]
	0x039E3E7C MOV V0.16B, V13.16B
	0x039E3E80 MOV V1.16B, V12.16B
	0x039E3E84 MOV V2.16B, V11.16B
	0x039E3E88 LDR X8, [X8 + 0xB8]
	0x039E3E8C MOV V3.16B, V10.16B
	0x039E3E90 MOV X2, X31
	0x039E3E94 LDR W1, [X8 + 0xC]
	0x039E3E98 BL 0x3C12720
	0x039E3E9C LDR X8, [X24]
	0x039E3EA0 LDR X8, [X8 + 0xB8]
	0x039E3EA4 LDR X0, [X8 + 0x20]
	0x039E3EA8 CBZ X0, 0x39E3F6C
	0x039E3EAC LDR X8, [X25]
	0x039E3EB0 SCVTF S0, W22
	0x039E3EB4 MOV X2, X31
	0x039E3EB8 LDR X8, [X8 + 0xB8]
	0x039E3EBC LDR W1, [X8 + 0x10]
	0x039E3EC0 BL 0x3C125FC
	0x039E3EC4 LDR X8, [X24]
	0x039E3EC8 LDR X8, [X8 + 0xB8]
	0x039E3ECC LDR X0, [X8 + 0x20]
	0x039E3ED0 CBZ X0, 0x39E3F6C
	0x039E3ED4 LDR X8, [X25]
	0x039E3ED8 LDP S0, S1, [X31 + 0x8]
	0x039E3EDC FMOV S2, W31
	0x039E3EE0 FMOV S3, W31
	0x039E3EE4 LDR X8, [X8 + 0xB8]
	0x039E3EE8 MOV X2, X31
	0x039E3EEC LDR W1, [X8 + 0x14]
	0x039E3EF0 BL 0x3C12720
	0x039E3EF4 LDR X8, [X24]
	0x039E3EF8 LDR X8, [X8 + 0xB8]
	0x039E3EFC LDR X0, [X8 + 0x20]
	0x039E3F00 CBZ X0, 0x39E3F6C
	0x039E3F04 LDR X8, [X25]
	0x039E3F08 MOV W2, W21
	0x039E3F0C MOV X3, X31
	0x039E3F10 LDR X8, [X8 + 0xB8]
	0x039E3F14 LDR W1, [X8 + 0x18]
	0x039E3F18 BL 0x3C12528
	0x039E3F1C CBZ X20, 0x39E3F6C
	0x039E3F20 LDR X8, [X20]
	0x039E3F24 MOV X0, X20
	0x039E3F28 LDP X9, X1, [X8 + 0x1C8]
	0x039E3F2C BLR X9
	0x039E3F30 MOV W1, W31
	0x039E3F34 BL 0x39E1E80
	0x039E3F38 MOV X1, X0
	0x039E3F3C MOV X0, X19
	0x039E3F40 LDP X20, X19, [X31 + 0x80]
	0x039E3F44 LDP X22, X21, [X31 + 0x70]
	0x039E3F48 LDP X24, X23, [X31 + 0x60]
	0x039E3F4C LDP X30, X25, [X31 + 0x50]
	0x039E3F50 LDP D9, D8, [X31 + 0x40]
	0x039E3F54 LDP D11, D10, [X31 + 0x30]
	0x039E3F58 LDP D13, D12, [X31 + 0x20]
	0x039E3F5C LDP D15, D14, [X31 + 0x10]
	0x039E3F60 MOVZ W2, 0xD
	0x039E3F64 ADD X31, X31, 0x90
	0x039E3F68 B 0x39E20B0
	0x039E3F6C BL 0x1C16F20
	0x039E3F70 STP D13, D12, [X31 - 0x90]!
	0x039E3F74 STP D11, D10, [X31 + 0x10]
	0x039E3F78 STP D9, D8, [X31 + 0x20]
	0x039E3F7C STR X30, [X31 + 0x30]
	0x039E3F80 STP X28, X27, [X31 + 0x40]
	0x039E3F84 STP X26, X25, [X31 + 0x50]
	0x039E3F88 STP X24, X23, [X31 + 0x60]
	0x039E3F8C STP X22, X21, [X31 + 0x70]
	0x039E3F90 STP X20, X19, [X31 + 0x80]
	0x039E3F94 ADRP X22, 0x9FE000
	0x039E3F98 LDRB W8, [X22 + 0xDDE]
	0x039E3F9C MOV X21, X5
	0x039E3FA0 MOV W23, W4
	0x039E3FA4 MOV W20, W3
	0x039E3FA8 MOV W24, W2
	0x039E3FAC MOV V10.16B, V5.16B
	0x039E3FB0 MOV V11.16B, V4.16B
	0x039E3FB4 MOV V12.16B, V3.16B
	0x039E3FB8 MOV V13.16B, V2.16B
	0x039E3FBC MOV V8.16B, V1.16B
	0x039E3FC0 MOV V9.16B, V0.16B
	0x039E3FC4 MOV X25, X1
	0x039E3FC8 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D10
	003 Move [X31+56], D9
	004 Move [X31+64], D8
	005 Move [X31+72], X30
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X23, 0x9FF000
	013 Move W8, [X23+3539]
	014 Move W21, W3
	015 Move V8, V0
	016 Move X22, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x770000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move X0, 0x739000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3539], W8
	031 Compare X19, 0
	032 JumpIfEqual {107}
	033 Move X23, 0x739000
	034 Move W8, [X19+168]
	035 Move X23, [X23+2296]
	036 Compare W8, 0
	037 JumpIfEqual {48}
	038 Add X8, X31, 0
	039 Move X0, X19
	040 Move X1, X31
	041 Call RTHandle.get_rtHandleProperties, X0
	042 Move V9, [X31+32]
	043 Add X8, X31, 0
	044 Move X0, X19
	045 Move X1, X31
	046 Call RTHandle.get_rtHandleProperties, X0
	047 Move V10, [X31+36]
	048 Move X24, 0x9FF000
	049 Move W8, [X24+2632]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x719000
	053 Move X0, [X0+3848]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X24+2632], W8
	057 Move X8, 0x719000
	058 Move X8, [X8+3848]
	059 Move X8, [X8]
	060 Move X8, [X8+184]
	061 Move S9, [X8+8]
	062 Move S10, [X8+12]
	063 Move X0, [X23]
	064 Move X23, 0x770000
	065 Move W8, [X0+224]
	066 Move X23, [X23+3624]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W4, TEMP
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W5, TEMP
	076 Move X0, X20
	077 Move X1, X22
	078 Move W2, W31
	079 Move W3, W31
	080 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 And W2, W21, 1
	087 Move S2, W31
	088 Move S3, W31
	089 Move X0, X20
	090 Move X1, X19
	091 Move V0, V9
	092 Move V1, V10
	093 Move V4, V8
	094 Call Blitter.BlitTexture2D, X0, X1, X2, V0, X3
	095 Move X20, [X31+112]
	096 Move X19, [X31+120]
	097 Move X22, [X31+96]
	098 Move X21, [X31+104]
	099 Move X24, [X31+80]
	100 Move X23, [X31+88]
	101 Move X30, [X31+72]
	102 Move D9, [X31+56]
	103 Move D8, [X31+64]
	104 Move V10, [X31+48]
	105 Add X31, X31, 128
	106 Return 
	107 Call 0x1C17F20

Method: System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Material material, System.Int32 pass)

Disassembly:
	0x039E3FCC TBNZ X8, 0x0, 0x39E4008
	0x039E3FD0 ADRP X0, 0x770000
	0x039E3FD4 LDR X0, [X0 + 0x1B0]
	0x039E3FD8 BL 0x1C16CF4
	0x039E3FDC ADRP X0, 0x76F000
	0x039E3FE0 LDR X0, [X0 + 0xE28]
	0x039E3FE4 BL 0x1C16CF4
	0x039E3FE8 ADRP X0, 0x770000
	0x039E3FEC LDR X0, [X0 + 0x3A8]
	0x039E3FF0 BL 0x1C16CF4
	0x039E3FF4 ADRP X0, 0x770000
	0x039E3FF8 LDR X0, [X0 + 0x3B0]
	0x039E3FFC BL 0x1C16CF4
	0x039E4000 MOVZ W8, 0x1
	0x039E4004 STRB W8, [X22 + 0xDDE]
	0x039E4008 CBZ X25, 0x39E427C
	0x039E400C LDR X8, [X25]
	0x039E4010 ADRP X27, 0x76E000
	0x039E4014 ADRP X28, 0x76F000
	0x039E4018 MOV X0, X25
	0x039E401C LDP X9, X1, [X8 + 0x1C8]
	0x039E4020 LDR X27, [X27 + 0xE28]
	0x039E4024 LDR X28, [X28 + 0x1B0]
	0x039E4028 BLR X9
	0x039E402C LDR X8, [X27]
	0x039E4030 MOV W22, W0
	0x039E4034 LDR W9, [X8 + 0xE0]
	0x039E4038 CBNZ W9, 0x39E4044
	0x039E403C MOV X0, X8
	0x039E4040 BL 0x1C16DFC
	0x039E4044 MOV W0, W22
	0x039E4048 MOV W1, W31
	0x039E404C BL 0x39E1E80
	0x039E4050 LDR X9, [X27]
	0x039E4054 LDR X8, [X28]
	0x039E4058 MOV X22, X0
	0x039E405C LDR X9, [X9 + 0xB8]
	0x039E4060 LDR W10, [X8 + 0xE0]
	0x039E4064 LDR X26, [X9 + 0x20]
	0x039E4068 CBNZ W10, 0x39E4074
	0x039E406C MOV X0, X8
	0x039E4070 BL 0x1C16DFC
	0x039E4074 CBZ X26, 0x39E427C
	0x039E4078 LDR X8, [X28]
	0x039E407C MOV X0, X26
	0x039E4080 MOV X2, X25
	0x039E4084 MOV X3, X31
	0x039E4088 LDR X8, [X8 + 0xB8]
	0x039E408C LDR W1, [X8 + 0x4]
	0x039E4090 BL 0x3C12828
	0x039E4094 LDR X8, [X27]
	0x039E4098 LDR X8, [X8 + 0xB8]
	0x039E409C LDR X0, [X8 + 0x20]
	0x039E40A0 CBZ X0, 0x39E427C
	0x039E40A4 LDR X8, [X28]
	0x039E40A8 SCVTF S0, W24
	0x039E40AC MOV X2, X31
	0x039E40B0 LDR X8, [X8 + 0xB8]
	0x039E40B4 LDR W1, [X8 + 0x10]
	0x039E40B8 BL 0x3C125FC
	0x039E40BC LDR X8, [X27]
	0x039E40C0 LDR X8, [X8 + 0xB8]
	0x039E40C4 LDR X0, [X8 + 0x20]
	0x039E40C8 CBZ X0, 0x39E427C
	0x039E40CC LDR X8, [X28]
	0x039E40D0 FMOV S0, 1
	0x039E40D4 FMOV S1, 1
	0x039E40D8 FMOV S2, W31
	0x039E40DC LDR X8, [X8 + 0xB8]
	0x039E40E0 FMOV S3, W31
	0x039E40E4 MOV X2, X31
	0x039E40E8 LDR W1, [X8 + 0x8]
	0x039E40EC BL 0x3C12720
	0x039E40F0 LDR X8, [X27]
	0x039E40F4 LDR X8, [X8 + 0xB8]
	0x039E40F8 LDR X0, [X8 + 0x20]
	0x039E40FC CBZ X0, 0x39E427C
	0x039E4100 LDR X8, [X28]
	0x039E4104 MOV V0.16B, V13.16B
	0x039E4108 MOV V1.16B, V12.16B
	0x039E410C MOV V2.16B, V11.16B
	0x039E4110 LDR X8, [X8 + 0xB8]
	0x039E4114 MOV V3.16B, V10.16B
	0x039E4118 MOV X2, X31
	0x039E411C LDR W1, [X8 + 0xC]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X24, 0x9FF000
	013 Move W8, [X24+3540]
	014 Move W19, W4
	015 Move X20, X3
	016 Move X23, X2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x76F000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move X0, 0x738000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+3540], W8
	031 Compare X21, 0
	032 JumpIfEqual {107}
	033 Move X24, 0x738000
	034 Move W8, [X21+168]
	035 Move X24, [X24+2296]
	036 Compare W8, 0
	037 JumpIfEqual {48}
	038 Add X8, X31, 0
	039 Move X0, X21
	040 Move X1, X31
	041 Call RTHandle.get_rtHandleProperties, X0
	042 Move V8, [X31+32]
	043 Add X8, X31, 0
	044 Move X0, X21
	045 Move X1, X31
	046 Call RTHandle.get_rtHandleProperties, X0
	047 Move V9, [X31+36]
	048 Move X25, 0x9FE000
	049 Move W8, [X25+2632]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x718000
	053 Move X0, [X0+3848]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X25+2632], W8
	057 Move X8, 0x718000
	058 Move X8, [X8+3848]
	059 Move X8, [X8]
	060 Move X8, [X8+184]
	061 Move S8, [X8+8]
	062 Move S9, [X8+12]
	063 Move X0, [X24]
	064 Move X24, 0x76F000
	065 Move W8, [X0+224]
	066 Move X24, [X24+3624]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W4, TEMP
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W5, TEMP
	076 Move X0, X22
	077 Move X1, X23
	078 Move W2, W31
	079 Move W3, W31
	080 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	081 Move X0, [X24]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move S2, W31
	087 Move S3, W31
	088 Move X0, X22
	089 Move X1, X21
	090 Move V0, V8
	091 Move V1, V9
	092 Move X2, X20
	093 Move W3, W19
	094 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	095 Move X20, [X31+112]
	096 Move X19, [X31+120]
	097 Move X22, [X31+96]
	098 Move X21, [X31+104]
	099 Move X24, [X31+80]
	100 Move X23, [X31+88]
	101 Move X30, [X31+64]
	102 Move X25, [X31+72]
	103 Move D9, [X31+48]
	104 Move D8, [X31+56]
	105 Add X31, X31, 128
	106 Return 
	107 Call 0x1C17F20

Method: System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Material material, System.Int32 pass)

Disassembly:
	0x039E4120 BL 0x3C12720
	0x039E4124 LDR X8, [X27]
	0x039E4128 LDR X8, [X8 + 0xB8]
	0x039E412C LDR X0, [X8 + 0x20]
	0x039E4130 CBZ X0, 0x39E427C
	0x039E4134 LDR X8, [X28]
	0x039E4138 FMOV S2, W31
	0x039E413C FMOV S3, W31
	0x039E4140 MOV V0.16B, V9.16B
	0x039E4144 LDR X8, [X8 + 0xB8]
	0x039E4148 MOV V1.16B, V8.16B
	0x039E414C MOV X2, X31
	0x039E4150 LDR W1, [X8 + 0x14]
	0x039E4154 BL 0x3C12720
	0x039E4158 LDR X8, [X27]
	0x039E415C LDR X8, [X8 + 0xB8]
	0x039E4160 LDR X0, [X8 + 0x20]
	0x039E4164 CBZ X0, 0x39E427C
	0x039E4168 LDR X8, [X28]
	0x039E416C MOV W2, W23
	0x039E4170 MOV X3, X31
	0x039E4174 LDR X8, [X8 + 0xB8]
	0x039E4178 LDR W1, [X8 + 0x18]
	0x039E417C BL 0x3C12528
	0x039E4180 CBZ X19, 0x39E427C
	0x039E4184 LDR X8, [X27]
	0x039E4188 LDRB W3, [X21]
	0x039E418C MOV X0, X19
	0x039E4190 MOV X1, X22
	0x039E4194 LDR X8, [X8 + 0xB8]
	0x039E4198 MOV X4, X31
	0x039E419C ADD X2, X8, 0x38
	0x039E41A0 BL 0x3C4D220
	0x039E41A4 LDRB W8, [X21]
	0x039E41A8 CBZ W8, 0x39E4210
	0x039E41AC LDR X0, [X27]
	0x039E41B0 LDR W8, [X0 + 0xE0]
	0x039E41B4 CBNZ W8, 0x39E41C0
	0x039E41B8 BL 0x1C16DFC
	0x039E41BC LDR X0, [X27]
	0x039E41C0 LDR X8, [X28]
	0x039E41C4 LDR X9, [X0 + 0xB8]
	0x039E41C8 ADRP X25, 0x76F000
	0x039E41CC LDR W10, [X8 + 0xE0]
	0x039E41D0 LDR X23, [X9 + 0x20]
	0x039E41D4 LDR X25, [X25 + 0x3B0]
	0x039E41D8 CBNZ W10, 0x39E41E8
	0x039E41DC MOV X0, X8
	0x039E41E0 BL 0x1C16DFC
	0x039E41E4 LDR X8, [X28]
	0x039E41E8 LDR X8, [X8 + 0xB8]
	0x039E41EC LDR X1, [X25]
	0x039E41F0 MOV X0, X21
	0x039E41F4 LDR W24, [X8 + 0x1C]
	0x039E41F8 BL 0x243C480
	0x039E41FC CBZ X23, 0x39E427C
	0x039E4200 MOV X0, X23
	0x039E4204 MOV W1, W24
	0x039E4208 MOV X2, X31
	0x039E420C BL 0x3C12720
	0x039E4210 LDR X0, [X27]
	0x039E4214 LDR W8, [X0 + 0xE0]
	0x039E4218 CBNZ W8, 0x39E4220
	0x039E421C BL 0x1C16DFC
	0x039E4220 ANDS W31, W20, 0x1
	0x039E4224 MOVZ W8, 0x15
	0x039E4228 CINC W2, W8, NE
	0x039E422C MOV X0, X19
	0x039E4230 MOV X1, X22
	0x039E4234 BL 0x39E20B0
	0x039E4238 LDR X8, [X27]
	0x039E423C MOV X0, X19
	0x039E4240 MOV X1, X22
	0x039E4244 LDP X20, X19, [X31 + 0x80]
	0x039E4248 LDR X8, [X8 + 0xB8]
	0x039E424C LDP X22, X21, [X31 + 0x70]
	0x039E4250 LDP X24, X23, [X31 + 0x60]
	0x039E4254 LDP X26, X25, [X31 + 0x50]
	0x039E4258 LDP X28, X27, [X31 + 0x40]
	0x039E425C LDR X30, [X31 + 0x30]
	0x039E4260 LDP D9, D8, [X31 + 0x20]
	0x039E4264 LDP D11, D10, [X31 + 0x10]
	0x039E4268 ADD X2, X8, 0x38
	0x039E426C MOV W3, W31
	0x039E4270 MOV X4, X31
	0x039E4274 LDP D13, D12, [X31], #0x90
	0x039E4278 B 0x3C4D220
	0x039E427C BL 0x1C16F20
	0x039E4280 STP X30, X21, [X31 - 0x20]!
	0x039E4284 STP X20, X19, [X31 + 0x10]
	0x039E4288 ADRP X19, 0x9FD000
	0x039E428C ADRP X21, 0x76C000
	0x039E4290 ADRP X20, 0x76E000
	0x039E4294 LDRB W8, [X19 + 0xDE1]
	0x039E4298 LDR X21, [X21 + 0x590]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D9
	003 Move [X31+72], D8
	004 Move [X31+80], X30
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X26, 0x9FE000
	015 Move W8, [X26+3541]
	016 Move W19, W6
	017 Move X20, X5
	018 Move W23, W4
	019 Move W24, W3
	020 Move X25, X2
	021 Move X21, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x76F000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x738000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+3541], W8
	035 Compare X21, 0
	036 JumpIfEqual {119}
	037 Move X26, 0x738000
	038 Move W8, [X21+168]
	039 Move X26, [X26+2296]
	040 Compare W8, 0
	041 JumpIfEqual {52}
	042 Add X8, X31, 16
	043 Move X0, X21
	044 Move X1, X31
	045 Call RTHandle.get_rtHandleProperties, X0
	046 Move V8, [X31+48]
	047 Add X8, X31, 16
	048 Move X0, X21
	049 Move X1, X31
	050 Call RTHandle.get_rtHandleProperties, X0
	051 Move V9, [X31+52]
	052 Move X27, 0x9FE000
	053 Move W8, [X27+2632]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x718000
	057 Move X0, [X0+3848]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X27+2632], W8
	061 Move X8, 0x718000
	062 Move X8, [X8+3848]
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move S8, [X8+8]
	066 Move S9, [X8+12]
	067 Move X0, [X26]
	068 Move X26, 0x76F000
	069 Move W8, [X0+224]
	070 Move X26, [X26+3624]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move S0, W31
	075 Move S1, W31
	076 Move S2, W31
	077 Move S3, W31
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W6, TEMP
	081 Move TEMP, 0
	082 Not TEMP
	083 Move W7, TEMP
	084 Move X0, X22
	085 Move X1, X25
	086 Move W2, W24
	087 Move W3, W23
	088 Move W4, W31
	089 Move W5, W31
	090 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	091 Move X0, [X26]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move S2, W31
	097 Move S3, W31
	098 Move X0, X22
	099 Move X1, X21
	100 Move V0, V8
	101 Move V1, V9
	102 Move X2, X20
	103 Move W3, W19
	104 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	105 Move X20, [X31+144]
	106 Move X19, [X31+152]
	107 Move X22, [X31+128]
	108 Move X21, [X31+136]
	109 Move X24, [X31+112]
	110 Move X23, [X31+120]
	111 Move X26, [X31+96]
	112 Move X25, [X31+104]
	113 Move X30, [X31+80]
	114 Move X27, [X31+88]
	115 Move D9, [X31+64]
	116 Move D8, [X31+72]
	117 Add X31, X31, 160
	118 Return 
	119 Call 0x1C17F20

Method: System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Vector4 scaleBias, System.Single mipLevel = 0, System.Boolean bilinear = False)

Disassembly:
	0x039E43B4 BL 0x1C16CF4
	0x039E43B8 ADRP X0, 0x76F000
	0x039E43BC LDR X0, [X0 + 0x3F8]
	0x039E43C0 BL 0x1C16CF4
	0x039E43C4 ADRP X0, 0x76F000
	0x039E43C8 LDR X0, [X0 + 0x3B8]
	0x039E43CC BL 0x1C16CF4
	0x039E43D0 ADRP X0, 0x76F000
	0x039E43D4 LDR X0, [X0 + 0x3D8]
	0x039E43D8 BL 0x1C16CF4
	0x039E43DC MOVZ W8, 0x1
	0x039E43E0 STRB W8, [X28 + 0xDE6]
	0x039E43E4 LDR X0, [X29]
	0x039E43E8 MOV X1, X31
	0x039E43EC BL 0x3C124EC
	0x039E43F0 LDR X8, [X19]
	0x039E43F4 MOV X1, X31
	0x039E43F8 LDR X8, [X8 + 0xB8]
	0x039E43FC STR W0, [X8]
	0x039E4400 LDR X0, [X27]
	0x039E4404 BL 0x3C124EC
	0x039E4408 LDR X8, [X19]
	0x039E440C MOV X1, X31
	0x039E4410 LDR X8, [X8 + 0xB8]
	0x039E4414 STR W0, [X8 + 0x4]
	0x039E4418 LDR X0, [X26]
	0x039E441C BL 0x3C124EC
	0x039E4420 LDR X8, [X19]
	0x039E4424 MOV X1, X31
	0x039E4428 LDR X8, [X8 + 0xB8]
	0x039E442C STR W0, [X8 + 0x8]
	0x039E4430 LDR X0, [X25]
	0x039E4434 BL 0x3C124EC
	0x039E4438 LDR X8, [X19]
	0x039E443C MOV X1, X31
	0x039E4440 LDR X8, [X8 + 0xB8]
	0x039E4444 STR W0, [X8 + 0xC]
	0x039E4448 LDR X0, [X24]
	0x039E444C BL 0x3C124EC
	0x039E4450 LDR X8, [X19]
	0x039E4454 MOV X1, X31
	0x039E4458 LDR X8, [X8 + 0xB8]
	0x039E445C STR W0, [X8 + 0x10]
	0x039E4460 LDR X0, [X23]
	0x039E4464 BL 0x3C124EC
	0x039E4468 LDR X8, [X19]
	0x039E446C MOV X1, X31
	0x039E4470 LDR X8, [X8 + 0xB8]
	0x039E4474 STR W0, [X8 + 0x14]
	0x039E4478 LDR X0, [X22]
	0x039E447C BL 0x3C124EC
	0x039E4480 LDR X8, [X19]
	0x039E4484 MOV X1, X31
	0x039E4488 LDR X8, [X8 + 0xB8]
	0x039E448C STR W0, [X8 + 0x18]
	0x039E4490 LDR X0, [X21]
	0x039E4494 BL 0x3C124EC
	0x039E4498 LDR X8, [X19]
	0x039E449C MOV X1, X31
	0x039E44A0 LDR X8, [X8 + 0xB8]
	0x039E44A4 STR W0, [X8 + 0x1C]
	0x039E44A8 LDR X0, [X20]

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0x9FE000
	014 Move X23, 0x738000
	015 Move W8, [X24+3542]
	016 Move X23, [X23+2296]
	017 Move W19, W3
	018 Move V8, V4
	019 Move V9, V3
	020 Move V10, V2
	021 Move V11, V1
	022 Move V12, V0
	023 Move X22, X2
	024 Move X20, X1
	025 Move X21, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x76F000
	031 Move X0, [X0+3624]
	032 Call 0x1C17CF4
	033 Move X0, 0x738000
	034 Move X0, [X0+2296]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+3542], W8
	038 Move X0, [X23]
	039 Move X23, 0x76F000
	040 Move W8, [X0+224]
	041 Move X23, [X23+3624]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move TEMP, 0
	046 Not TEMP
	047 Move W4, TEMP
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W5, TEMP
	051 Move X0, X21
	052 Move X1, X22
	053 Move W2, W31
	054 Move W3, W31
	055 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 And W2, W19, 1
	062 Move X0, X21
	063 Move X1, X20
	064 Move V1, V11
	065 Move V2, V10
	066 Move V3, V9
	067 Move V4, V8
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X22, [X31+64]
	071 Move X21, [X31+72]
	072 Move X24, [X31+48]
	073 Move X23, [X31+56]
	074 Move X30, [X31+40]
	075 Move D9, [X31+24]
	076 Move D8, [X31+32]
	077 Move D11, [X31+8]
	078 Move D10, [X31+16]
	079 Move V0, V12
	080 Move V12, [X31+96]
	081 Call Blitter.BlitTexture, X0, X1, X2, V0, X3
	082 Return 

Method: System.Void BlitCameraTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Rect destViewport, System.Single mipLevel = 0, System.Boolean bilinear = False)

Disassembly:
	0x039E44AC BL 0x3C124EC
	0x039E44B0 LDR X8, [X19]
	0x039E44B4 LDP X20, X19, [X31 + 0x50]
	0x039E44B8 LDP X22, X21, [X31 + 0x40]
	0x039E44BC LDP X24, X23, [X31 + 0x30]
	0x039E44C0 LDR X8, [X8 + 0xB8]
	0x039E44C4 LDP X26, X25, [X31 + 0x20]
	0x039E44C8 LDP X28, X27, [X31 + 0x10]
	0x039E44CC STR W0, [X8 + 0x20]
	0x039E44D0 LDP X29, X30, [X31], #0x60
	0x039E44D4 RET
	0x039E44D8 STR X30, [X31 - 0x20]!
	0x039E44DC STP X20, X19, [X31 + 0x10]
	0x039E44E0 ADRP X20, 0x9FD000
	0x039E44E4 ADRP X19, 0x76F000
	0x039E44E8 LDRB W8, [X20 + 0xDE7]
	0x039E44EC LDR X19, [X19 + 0x400]
	0x039E44F0 TBNZ X8, 0x0, 0x39E4508
	0x039E44F4 ADRP X0, 0x76F000
	0x039E44F8 LDR X0, [X0 + 0x400]
	0x039E44FC BL 0x1C16CF4
	0x039E4500 MOVZ W8, 0x1
	0x039E4504 STRB W8, [X20 + 0xDE7]
	0x039E4508 LDR X0, [X19]
	0x039E450C LDR W8, [X0 + 0xE0]
	0x039E4510 CBNZ W8, 0x39E451C
	0x039E4514 BL 0x1C16DFC
	0x039E4518 LDR X0, [X19]
	0x039E451C LDR X8, [X0 + 0xB8]
	0x039E4520 LDP X20, X19, [X31 + 0x10]
	0x039E4524 LDRB W0, [X8 + 0x8]
	0x039E4528 LDR X30, [X31], #0x20
	0x039E452C RET
	0x039E4530 STP X30, X21, [X31 - 0x20]!
	0x039E4534 STP X20, X19, [X31 + 0x10]
	0x039E4538 ADRP X21, 0x9FD000
	0x039E453C ADRP X20, 0x76F000
	0x039E4540 LDRB W8, [X21 + 0xDE8]
	0x039E4544 LDR X20, [X20 + 0x400]
	0x039E4548 MOV W19, W0
	0x039E454C TBNZ X8, 0x0, 0x39E4564
	0x039E4550 ADRP X0, 0x76F000
	0x039E4554 LDR X0, [X0 + 0x400]
	0x039E4558 BL 0x1C16CF4
	0x039E455C MOVZ W8, 0x1
	0x039E4560 STRB W8, [X21 + 0xDE8]
	0x039E4564 LDR X0, [X20]
	0x039E4568 LDR W8, [X0 + 0xE0]
	0x039E456C CBNZ W8, 0x39E4578
	0x039E4570 BL 0x1C16DFC
	0x039E4574 LDR X0, [X20]
	0x039E4578 LDR X8, [X0 + 0xB8]
	0x039E457C AND W9, W19, 0x1
	0x039E4580 LDP X20, X19, [X31 + 0x10]
	0x039E4584 STRB W9, [X8 + 0x8]
	0x039E4588 LDP X30, X21, [X31], #0x20
	0x039E458C RET
	0x039E4590 SUB X31, X31, 0x60
	0x039E4594 STP X30, X21, [X31 + 0x40]
	0x039E4598 STP X20, X19, [X31 + 0x50]
	0x039E459C ADRP X21, 0x9FD000
	0x039E45A0 ADRP X20, 0x76F000
	0x039E45A4 LDRB W8, [X21 + 0xDE9]
	0x039E45A8 LDR X20, [X20 + 0x400]
	0x039E45AC MOV X19, X0
	0x039E45B0 TBNZ X8, 0x0, 0x39E45F8
	0x039E45B4 ADRP X0, 0x76F000
	0x039E45B8 LDR X0, [X0 + 0x400]
	0x039E45BC BL 0x1C16CF4
	0x039E45C0 ADRP X0, 0x76F000
	0x039E45C4 LDR X0, [X0 + 0x408]
	0x039E45C8 BL 0x1C16CF4
	0x039E45CC ADRP X0, 0x76F000
	0x039E45D0 LDR X0, [X0 + 0x410]
	0x039E45D4 BL 0x1C16CF4
	0x039E45D8 ADRP X0, 0x76F000
	0x039E45DC LDR X0, [X0 + 0x418]
	0x039E45E0 BL 0x1C16CF4
	0x039E45E4 ADRP X0, 0x76F000
	0x039E45E8 LDR X0, [X0 + 0x420]
	0x039E45EC BL 0x1C16CF4
	0x039E45F0 MOVZ W8, 0x1
	0x039E45F4 STRB W8, [X21 + 0xDE9]
	0x039E45F8 LDR X0, [X20]
	0x039E45FC STR X31, [X31 + 0x38]
	0x039E4600 LDR W8, [X0 + 0xE0]
	0x039E4604 CBNZ W8, 0x39E4610
	0x039E4608 BL 0x1C16DFC
	0x039E460C LDR X0, [X20]
	0x039E4610 LDR X8, [X0 + 0xB8]
	0x039E4614 LDR X0, [X8]
	0x039E4618 CBZ X0, 0x39E4698
	0x039E461C ADRP X8, 0x76F000
	0x039E4620 LDR X8, [X8 + 0x408]
	0x039E4624 ADD X2, X31, 0x38
	0x039E4628 MOV X1, X19
	0x039E462C LDR X3, [X8]
	0x039E4630 BL 0x2AA6B2C
	0x039E4634 TBZ X0, 0x0, 0x39E4684
	0x039E4638 LDR X0, [X31 + 0x38]
	0x039E463C CBZ X0, 0x39E4698
	0x039E4640 LDR W8, [X0 + 0x20]
	0x039E4644 CBZ W8, 0x39E4684

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D14
	003 Move [X31+56], D13
	004 Move [X31+64], D12
	005 Move [X31+72], D11
	006 Move [X31+80], D10
	007 Move [X31+88], D9
	008 Move [X31+96], D8
	009 Move [X31+104], X30
	010 Move [X31+112], X24
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X23, 0x9FE000
	017 Move W8, [X23+3543]
	018 Move W20, W3
	019 Move V8, V4
	020 Move V9, V3
	021 Move V10, V2
	022 Move V11, V1
	023 Move V12, V0
	024 Move X22, X2
	025 Move X19, X1
	026 Move X21, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x76F000
	032 Move X0, [X0+3624]
	033 Call 0x1C17CF4
	034 Move X0, 0x738000
	035 Move X0, [X0+2296]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+3543], W8
	039 Compare X19, 0
	040 JumpIfEqual {128}
	041 Move X23, 0x738000
	042 Move W8, [X19+168]
	043 Move X23, [X23+2296]
	044 Compare W8, 0
	045 JumpIfEqual {56}
	046 Add X8, X31, 0
	047 Move X0, X19
	048 Move X1, X31
	049 Call RTHandle.get_rtHandleProperties, X0
	050 Move V13, [X31+32]
	051 Add X8, X31, 0
	052 Move X0, X19
	053 Move X1, X31
	054 Call RTHandle.get_rtHandleProperties, X0
	055 Move V14, [X31+36]
	056 Move X24, 0x9FE000
	057 Move W8, [X24+2632]
	058 Compare W8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, 0x718000
	061 Move X0, [X0+3848]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X24+2632], W8
	065 Move X8, 0x718000
	066 Move X8, [X8+3848]
	067 Move X8, [X8]
	068 Move X8, [X8+184]
	069 Move S13, [X8+8]
	070 Move S14, [X8+12]
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W4, TEMP
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W5, TEMP
	082 Move X0, X21
	083 Move X1, X22
	084 Move W2, W31
	085 Move W3, W31
	086 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	087 Compare X21, 0
	088 JumpIfEqual {128}
	089 Move X22, 0x76F000
	090 Move X22, [X22+3624]
	091 Move X0, X21
	092 Move V0, V12
	093 Move V1, V11
	094 Move V2, V10
	095 Move V3, V9
	096 Move X1, X31
	097 Call CommandBuffer.SetViewport, X0, X1
	098 Move X0, [X22]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 And W2, W20, 1
	104 Move S2, W31
	105 Move S3, W31
	106 Move X0, X21
	107 Move X1, X19
	108 Move V0, V13
	109 Move V1, V14
	110 Move V4, V8
	111 Call Blitter.BlitTexture, X0, X1, X2, V0, X3
	112 Move X20, [X31+144]
	113 Move X19, [X31+152]
	114 Move X22, [X31+128]
	115 Move X21, [X31+136]
	116 Move X24, [X31+112]
	117 Move X23, [X31+120]
	118 Move X30, [X31+104]
	119 Move D9, [X31+88]
	120 Move D8, [X31+96]
	121 Move D11, [X31+72]
	122 Move D10, [X31+80]
	123 Move D13, [X31+56]
	124 Move D12, [X31+64]
	125 Move V14, [X31+48]
	126 Add X31, X31, 160
	127 Return 
	128 Call 0x1C17F20

Method: System.Void BlitQuad(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear)

Disassembly:
	0x039DA2E4 LDR X8, [X8 + 0x8B0]
	0x039DA2E8 MOV W2, W0
	0x039DA2EC MOV X0, X21
	0x039DA2F0 MOV W1, W19
	0x039DA2F4 LDR X3, [X8]
	0x039DA2F8 LDP X20, X19, [X31 + 0x70]
	0x039DA2FC LDP X22, X21, [X31 + 0x60]
	0x039DA300 LDP X24, X23, [X31 + 0x50]
	0x039DA304 LDR X30, [X31 + 0x40]
	0x039DA308 LDP D9, D8, [X31 + 0x30]
	0x039DA30C LDP D11, D10, [X31 + 0x20]
	0x039DA310 LDP D13, D12, [X31 + 0x10]
	0x039DA314 LDP D15, D14, [X31], #0x80
	0x039DA318 B 0x2A0A330
	0x039DA31C LDP X20, X19, [X31 + 0x70]
	0x039DA320 LDP X22, X21, [X31 + 0x60]
	0x039DA324 LDP X24, X23, [X31 + 0x50]
	0x039DA328 LDR X30, [X31 + 0x40]
	0x039DA32C LDP D9, D8, [X31 + 0x30]
	0x039DA330 LDP D11, D10, [X31 + 0x20]
	0x039DA334 LDP D13, D12, [X31 + 0x10]
	0x039DA338 LDP D15, D14, [X31], #0x80
	0x039DA33C RET
	0x039DA340 BL 0x1C16F20
	0x039DA344 CBZ X1, 0x39DA354
	0x039DA348 MOV X0, X1
	0x039DA34C MOV X1, X31
	0x039DA350 B 0x3C385F8
	0x039DA354 STR X30, [X31 - 0x10]!
	0x039DA358 BL 0x1C16F20
	0x039DA35C SUB X31, X31, 0x40
	0x039DA360 STP X30, X21, [X31 + 0x20]
	0x039DA364 STP X20, X19, [X31 + 0x30]
	0x039DA368 STR W31, [X31 + 0x18]
	0x039DA36C STR X31, [X31 + 0x10]
	0x039DA370 STR W31, [X31 + 0xC]
	0x039DA374 CBZ X0, 0x39DA4CC
	0x039DA378 LDR X8, [X0]
	0x039DA37C MOV X19, X0
	0x039DA380 LDP X9, X1, [X8 + 0x158]
	0x039DA384 BLR X9
	0x039DA388 MOV W20, W0
	0x039DA38C MOV X0, X19
	0x039DA390 MOV X1, X31
	0x039DA394 BL 0x3C385F8
	0x039DA398 STR W0, [X31 + 0x1C]
	0x039DA39C ADD X0, X31, 0x1C
	0x039DA3A0 MOV X1, X31
	0x039DA3A4 BL 0x337B6D8
	0x039DA3A8 LDR X8, [X19]
	0x039DA3AC MOVZ W21, 0x17
	0x039DA3B0 MADD W20, W20, W21, W0
	0x039DA3B4 MOV X0, X19
	0x039DA3B8 LDP X9, X1, [X8 + 0x178]
	0x039DA3BC BLR X9
	0x039DA3C0 STR W0, [X31 + 0x18]
	0x039DA3C4 ADD X0, X31, 0x18
	0x039DA3C8 MOV X1, X31
	0x039DA3CC BL 0x337B6D8
	0x039DA3D0 MADD W20, W20, W21, W0
	0x039DA3D4 MOV X0, X19
	0x039DA3D8 MOV X1, X31
	0x039DA3DC BL 0x3C1A9D4
	0x039DA3E0 STR W0, [X31 + 0x14]
	0x039DA3E4 ADD X0, X31, 0x14
	0x039DA3E8 MOV X1, X31
	0x039DA3EC BL 0x337B6D8
	0x039DA3F0 LDR X8, [X19]
	0x039DA3F4 MADD W20, W20, W21, W0
	0x039DA3F8 MOV X0, X19
	0x039DA3FC LDP X9, X1, [X8 + 0x188]
	0x039DA400 BLR X9
	0x039DA404 STR W0, [X31 + 0x1C]
	0x039DA408 ADD X0, X31, 0x1C
	0x039DA40C MOV X1, X31
	0x039DA410 BL 0x337B6D8
	0x039DA414 LDR X8, [X19]
	0x039DA418 MADD W20, W20, W21, W0
	0x039DA41C MOV X0, X19
	0x039DA420 LDP X9, X1, [X8 + 0x1A8]
	0x039DA424 BLR X9
	0x039DA428 STR W0, [X31 + 0x1C]
	0x039DA42C ADD X0, X31, 0x1C
	0x039DA430 MOV X1, X31
	0x039DA434 BL 0x337B6D8
	0x039DA438 MADD W20, W20, W21, W0
	0x039DA43C MOV X0, X19
	0x039DA440 MOV X1, X31
	0x039DA444 BL 0x3C1AB20
	0x039DA448 STR W0, [X31 + 0x10]
	0x039DA44C ADD X0, X31, 0x10
	0x039DA450 MOV X1, X31
	0x039DA454 BL 0x337B6D8
	0x039DA458 MADD W20, W20, W21, W0
	0x039DA45C MOV X0, X19
	0x039DA460 MOV X1, X31
	0x039DA464 BL 0x3C1ABA0
	0x039DA468 STR W0, [X31 + 0x1C]
	0x039DA46C ADD X0, X31, 0x1C
	0x039DA470 MOV X1, X31
	0x039DA474 BL 0x337B6D8
	0x039DA478 MADD W20, W20, W21, W0
	0x039DA47C MOV X0, X19
	0x039DA480 MOV X1, X31
	0x039DA484 BL 0x3C1A6F4
	0x039DA488 STR W0, [X31 + 0x1C]
	0x039DA48C ADD X0, X31, 0x1C
	0x039DA490 MOV X1, X31
	0x039DA494 BL 0x337B6D8
	0x039DA498 MADD W20, W20, W21, W0
	0x039DA49C MOV X0, X19
	0x039DA4A0 MOV X1, X31
	0x039DA4A4 BL 0x3C1AD38
	0x039DA4A8 STR W0, [X31 + 0xC]
	0x039DA4AC ADD X0, X31, 0xC
	0x039DA4B0 MOV X1, X31
	0x039DA4B4 BL 0x3399AF8
	0x039DA4B8 MADD W0, W20, W21, W0
	0x039DA4BC LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X23, 0xA08000
	018 Move X24, 0x779000
	019 Move W8, [X23+3544]
	020 Move X24, [X24+3624]
	021 Move W19, W3
	022 Move W22, W2
	023 Move V8, V7
	024 Move V9, V6
	025 Move V10, V5
	026 Move V11, V4
	027 Move V12, V3
	028 Move V13, V2
	029 Move V14, V1
	030 Move V15, V0
	031 Move X21, X1
	032 Move X20, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {45}
	037 Move X0, 0x77A000
	038 Move X0, [X0+432]
	039 Call 0x1C17CF4
	040 Move X0, 0x779000
	041 Move X0, [X0+3624]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+3544], W8
	045 Move X0, [X24]
	046 Move X25, 0x77A000
	047 Move W8, [X0+224]
	048 Move X25, [X25+432]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X24]
	053 Move X8, [X25]
	054 Move X9, [X0+184]
	055 Move W10, [X8+224]
	056 Move X23, [X9+32]
	057 Compare W10, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Compare X23, 0
	062 JumpIfEqual {148}
	063 Move X8, [X25]
	064 Move X0, X23
	065 Move X2, X21
	066 Move X3, X31
	067 Move X8, [X8+184]
	068 Move W1, [X8]
	069 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	070 Move X8, [X24]
	071 Move X8, [X8+184]
	072 Move X0, [X8+32]
	073 Compare X0, 0
	074 JumpIfEqual {148}
	075 Move X8, [X25]
	076 Move V0, V15
	077 Move V1, V14
	078 Move V2, V13
	079 Move X8, [X8+184]
	080 Move V3, V12
	081 Move X2, X31
	082 Move W1, [X8+8]
	083 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	084 Move X8, [X24]
	085 Move X8, [X8+184]
	086 Move X0, [X8+32]
	087 Compare X0, 0
	088 JumpIfEqual {148}
	089 Move X8, [X25]
	090 Move V0, V11
	091 Move V1, V10
	092 Move V2, V9
	093 Move X8, [X8+184]
	094 Move V3, V8
	095 Move X2, X31
	096 Move W1, [X8+12]
	097 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	098 Move X8, [X24]
	099 Move X8, [X8+184]
	100 Move X0, [X8+32]
	101 Compare X0, 0
	102 JumpIfEqual {148}
	103 Move X8, [X25]
	104 NotImplemented "Instruction SCVTF not yet implemented."
	105 Move X2, X31
	106 Move X8, [X8+184]
	107 Move W1, [X8+16]
	108 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	109 Compare X21, 0
	110 JumpIfEqual {148}
	111 Move X8, [X21]
	112 Move X0, X21
	113 Move X9, [X8+456]
	114 Move X1, [X8+464]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move W1, W31
	117 Call Blitter.GetBlitMaterial, X0, X1
	118 Move X8, [X24]
	119 Move X21, X0
	120 Move W9, [X8+224]
	121 Compare W9, 0
	122 JumpIfNotEqual {125}
	123 Move X0, X8
	124 Call 0x1C17DFC
	125 And W31, W19, 1
	126 Move X0, X20
	127 Move X1, X21
	128 Move X20, [X31+112]
	129 Move X19, [X31+120]
	130 Move X22, [X31+96]
	131 Move X21, [X31+104]
	132 Move X24, [X31+80]
	133 Move X23, [X31+88]
	134 Move X30, [X31+64]
	135 Move X25, [X31+72]
	136 Move D9, [X31+48]
	137 Move D8, [X31+56]
	138 Move D11, [X31+32]
	139 Move D10, [X31+40]
	140 Move D13, [X31+16]
	141 Move D12, [X31+24]
	142 Move W8, 2
	143 NotImplemented "Instruction CINC not yet implemented."
	144 Move D15, [X31+128]
	145 Move D14, [X31+136]
	146 Call Blitter.DrawQuad, X0, X1, X2
	147 Return 
	148 Call 0x1C17F20

Method: System.Void BlitQuadWithPadding(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)

Disassembly:
	0x039E4648 ADRP X8, 0x76F000
	0x039E464C LDR X8, [X8 + 0x418]
	0x039E4650 LDR X1, [X8]
	0x039E4654 ADD X8, X31, 0x20
	0x039E4658 BL 0x2DBE924
	0x039E465C ADRP X9, 0x76F000
	0x039E4660 LDR V0, [X31 + 0x2]
	0x039E4664 LDR X8, [X31 + 0x30]
	0x039E4668 LDR X9, [X9 + 0x410]
	0x039E466C ADD X1, X31, 0x0
	0x039E4670 STR V0, [X31]
	0x039E4674 STR X8, [X31 + 0x10]
	0x039E4678 LDR X0, [X9]
	0x039E467C BL 0x1C16E04
	0x039E4680 B 0x39E4688
	0x039E4684 MOV X0, X31
	0x039E4688 LDP X20, X19, [X31 + 0x50]
	0x039E468C LDP X30, X21, [X31 + 0x40]
	0x039E4690 ADD X31, X31, 0x60
	0x039E4694 RET
	0x039E4698 BL 0x1C16F20
	0x039E469C STR X30, [X31 - 0x30]!
	0x039E46A0 STP X22, X21, [X31 + 0x10]
	0x039E46A4 STP X20, X19, [X31 + 0x20]
	0x039E46A8 ADRP X21, 0x9FD000
	0x039E46AC ADRP X22, 0x76F000
	0x039E46B0 LDRB W8, [X21 + 0xDEA]
	0x039E46B4 LDR X22, [X22 + 0x400]
	0x039E46B8 MOV X19, X1
	0x039E46BC MOV X20, X0
	0x039E46C0 TBNZ X8, 0x0, 0x39E4714
	0x039E46C4 ADRP X0, 0x76F000
	0x039E46C8 LDR X0, [X0 + 0x400]
	0x039E46CC BL 0x1C16CF4
	0x039E46D0 ADRP X0, 0x76F000
	0x039E46D4 LDR X0, [X0 + 0x428]
	0x039E46D8 BL 0x1C16CF4
	0x039E46DC ADRP X0, 0x76F000
	0x039E46E0 LDR X0, [X0 + 0x408]
	0x039E46E4 BL 0x1C16CF4
	0x039E46E8 ADRP X0, 0x76F000
	0x039E46EC LDR X0, [X0 + 0x430]
	0x039E46F0 BL 0x1C16CF4
	0x039E46F4 ADRP X0, 0x76F000
	0x039E46F8 LDR X0, [X0 + 0x438]
	0x039E46FC BL 0x1C16CF4
	0x039E4700 ADRP X0, 0x76F000
	0x039E4704 LDR X0, [X0 + 0x440]
	0x039E4708 BL 0x1C16CF4
	0x039E470C MOVZ W8, 0x1
	0x039E4710 STRB W8, [X21 + 0xDEA]
	0x039E4714 LDR X0, [X22]
	0x039E4718 STR X31, [X31 + 0x8]
	0x039E471C LDR W8, [X0 + 0xE0]
	0x039E4720 CBNZ W8, 0x39E472C
	0x039E4724 BL 0x1C16DFC
	0x039E4728 LDR X0, [X22]
	0x039E472C LDR X8, [X0 + 0xB8]
	0x039E4730 LDR X0, [X8]
	0x039E4734 CBZ X0, 0x39E47E4
	0x039E4738 ADRP X8, 0x76F000
	0x039E473C LDR X8, [X8 + 0x408]
	0x039E4740 ADD X2, X31, 0x8
	0x039E4744 MOV X1, X20
	0x039E4748 LDR X3, [X8]
	0x039E474C BL 0x2AA6B2C
	0x039E4750 LDR X0, [X31 + 0x8]
	0x039E4754 CBNZ X0, 0x39E47C0
	0x039E4758 ADRP X8, 0x76F000
	0x039E475C LDR X8, [X8 + 0x440]
	0x039E4760 LDR X0, [X8]
	0x039E4764 BL 0x1C16F10
	0x039E4768 ADRP X8, 0x76F000
	0x039E476C LDR X8, [X8 + 0x438]
	0x039E4770 MOV X21, X0
	0x039E4774 LDR X1, [X8]
	0x039E4778 BL 0x2DBDE08
	0x039E477C LDR X0, [X22]
	0x039E4780 STR X21, [X31 + 0x8]
	0x039E4784 LDR W8, [X0 + 0xE0]
	0x039E4788 CBNZ W8, 0x39E4794
	0x039E478C BL 0x1C16DFC
	0x039E4790 LDR X0, [X22]
	0x039E4794 LDR X8, [X0 + 0xB8]
	0x039E4798 LDR X0, [X8]
	0x039E479C CBZ X0, 0x39E47E4
	0x039E47A0 ADRP X8, 0x76F000
	0x039E47A4 LDR X2, [X31 + 0x8]
	0x039E47A8 LDR X8, [X8 + 0x428]
	0x039E47AC MOV X1, X20
	0x039E47B0 LDR X3, [X8]
	0x039E47B4 BL 0x2AA5098
	0x039E47B8 LDR X0, [X31 + 0x8]
	0x039E47BC CBZ X0, 0x39E47E4
	0x039E47C0 ADRP X8, 0x76F000
	0x039E47C4 LDR X8, [X8 + 0x430]
	0x039E47C8 MOV X1, X19
	0x039E47CC LDR X2, [X8]
	0x039E47D0 BL 0x2DBEF30
	0x039E47D4 LDP X20, X19, [X31 + 0x20]
	0x039E47D8 LDP X22, X21, [X31 + 0x10]
	0x039E47DC LDR X30, [X31], #0x30
	0x039E47E0 RET
	0x039E47E4 BL 0x1C16F20
	0x039E47E8 STR X30, [X31 - 0x30]!
	0x039E47EC STP X22, X21, [X31 + 0x10]
	0x039E47F0 STP X20, X19, [X31 + 0x20]
	0x039E47F4 ADRP X22, 0x9FD000
	0x039E47F8 ADRP X21, 0x70F000
	0x039E47FC LDRB W8, [X22 + 0xDEB]
	0x039E4800 LDR X21, [X21 + 0x598]
	0x039E4804 MOV X19, X1
	0x039E4808 MOV X20, X0
	0x039E480C TBNZ X8, 0x0, 0x39E4848
	0x039E4810 ADRP X0, 0x76F000
	0x039E4814 LDR X0, [X0 + 0x400]
	0x039E4818 BL 0x1C16CF4
	0x039E481C ADRP X0, 0x76F000
	0x039E4820 LDR X0, [X0 + 0x408]
	0x039E4824 BL 0x1C16CF4
	0x039E4828 ADRP X0, 0x76F000
	0x039E482C LDR X0, [X0 + 0x448]
	0x039E4830 BL 0x1C16CF4
	0x039E4834 ADRP X0, 0x70F000
	0x039E4838 LDR X0, [X0 + 0x598]
	0x039E483C BL 0x1C16CF4
	0x039E4840 MOVZ W8, 0x1
	0x039E4844 STRB W8, [X22 + 0xDEB]
	0x039E4848 LDR X0, [X21]
	0x039E484C STR X31, [X31 + 0x8]
	0x039E4850 LDR W8, [X0 + 0xE0]
	0x039E4854 CBNZ W8, 0x39E485C
	0x039E4858 BL 0x1C16DFC
	0x039E485C MOV X0, X20
	0x039E4860 MOV X1, X31
	0x039E4864 MOV X2, X31
	0x039E4868 BL 0x3C3883C
	0x039E486C TBNZ X0, 0x0, 0x39E48D0
	0x039E4870 ADRP X21, 0x76F000
	0x039E4874 LDR X21, [X21 + 0x400]
	0x039E4878 LDR X0, [X21]
	0x039E487C LDR W8, [X0 + 0xE0]
	0x039E4880 CBNZ W8, 0x39E488C
	0x039E4884 BL 0x1C16DFC
	0x039E4888 LDR X0, [X21]
	0x039E488C LDR X8, [X0 + 0xB8]
	0x039E4890 LDR X0, [X8]
	0x039E4894 CBZ X0, 0x39E48E0
	0x039E4898 ADRP X8, 0x76F000
	0x039E489C LDR X8, [X8 + 0x408]
	0x039E48A0 ADD X2, X31, 0x8
	0x039E48A4 MOV X1, X20
	0x039E48A8 LDR X3, [X8]
	0x039E48AC BL 0x2AA6B2C
	0x039E48B0 TBZ X0, 0x0, 0x39E48D0
	0x039E48B4 LDR X0, [X31 + 0x8]
	0x039E48B8 CBZ X0, 0x39E48E0
	0x039E48BC ADRP X8, 0x76F000
	0x039E48C0 LDR X8, [X8 + 0x448]

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move [X31+72], S0
	019 Move [X31+80], S1
	020 Move X24, 0x9FE000
	021 Move X25, 0x76F000
	022 Move S11, [X31+152]
	023 Move S10, [X31+156]
	024 Move W8, [X24+3545]
	025 Move S13, [X31+144]
	026 Move S12, [X31+148]
	027 Move X25, [X25+3624]
	028 Move W22, W4
	029 Move W20, W3
	030 Move W23, W2
	031 Move V14, V5
	032 Move V15, V4
	033 Move V8, V3
	034 Move V9, V2
	035 Move X21, X1
	036 Move X19, X0
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {49}
	041 Move X0, 0x770000
	042 Move X0, [X0+432]
	043 Call 0x1C17CF4
	044 Move X0, 0x76F000
	045 Move X0, [X0+3624]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X24+3545], W8
	049 Move X0, [X25]
	050 Move X26, 0x770000
	051 Move W8, [X0+224]
	052 Move X26, [X26+432]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X25]
	057 Move X8, [X26]
	058 Move X9, [X0+184]
	059 Move W10, [X8+224]
	060 Move X24, [X9+32]
	061 Compare W10, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Compare X24, 0
	066 JumpIfEqual {195}
	067 Move X8, [X26]
	068 Move X0, X24
	069 Move X2, X21
	070 Move X3, X31
	071 Move X8, [X8+184]
	072 Move W1, [X8]
	073 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	074 Move X8, [X25]
	075 Move X8, [X8+184]
	076 Move X0, [X8+32]
	077 Compare X0, 0
	078 JumpIfEqual {195}
	079 Move X8, [X26]
	080 Move V0, V9
	081 Move V1, V8
	082 Move V2, V15
	083 Move X8, [X8+184]
	084 Move V3, V14
	085 Move X2, X31
	086 Move W1, [X8+8]
	087 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	088 Move X8, [X25]
	089 Move X8, [X8+184]
	090 Move X0, [X8+32]
	091 Compare X0, 0
	092 JumpIfEqual {195}
	093 Move X8, [X26]
	094 Move V0, V13
	095 Move V1, V12
	096 Move V2, V11
	097 Move X8, [X8+184]
	098 Move V3, V10
	099 Move X2, X31
	100 Move W1, [X8+12]
	101 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	102 Move X8, [X25]
	103 Move X8, [X8+184]
	104 Move X0, [X8+32]
	105 Compare X0, 0
	106 JumpIfEqual {195}
	107 Move X8, [X26]
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Move X2, X31
	110 Move X8, [X8+184]
	111 Move W1, [X8+16]
	112 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	113 Move X8, [X25]
	114 Move X8, [X8+184]
	115 Move X0, [X8+32]
	116 Compare X0, 0
	117 JumpIfEqual {195}
	118 Move X8, [X26]
	119 Move S0, [X31+72]
	120 Move S1, [X31+76]
	121 Move S2, W31
	122 Move S3, W31
	123 Move X8, [X8+184]
	124 Move X2, X31
	125 Move W1, [X8+20]
	126 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	127 Move X8, [X25]
	128 Move X8, [X8+184]
	129 Move X0, [X8+32]
	130 Compare X0, 0
	131 JumpIfEqual {195}
	132 Move X8, [X26]
	133 Move W2, W22
	134 Move X3, X31
	135 Move X8, [X8+184]
	136 Move W1, [X8+24]
	137 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	138 Compare X21, 0
	139 JumpIfEqual {195}
	140 Move X0, X21
	141 Move X1, X31
	142 Call Texture.get_wrapMode, X0
	143 Move X8, [X21]
	144 Move W22, W0
	145 Move X0, X21
	146 Move X9, [X8+456]
	147 Move X1, [X8+464]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X25]
	150 Move W21, W0
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move W0, W21
	157 Move W1, W31
	158 Call Blitter.GetBlitMaterial, X0, X1
	159 Move X21, X0
	160 Compare W22, 0
	161 JumpIfEqual {165}
	162 Move X0, [X25]
	163 And W31, W20, 1
	164 Move W9, 4
	165 Move X0, [X25]
	166 And W31, W20, 1
	167 Move W9, 6
	168 Move W8, [X0+224]
	169 NotImplemented "Instruction CINC not yet implemented."
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X19
	174 Move X1, X21
	175 Move W2, W20
	176 Move X20, [X31+128]
	177 Move X19, [X31+136]
	178 Move X22, [X31+112]
	179 Move X21, [X31+120]
	180 Move X24, [X31+96]
	181 Move X23, [X31+104]
	182 Move X26, [X31+80]
	183 Move X25, [X31+88]
	184 Move X30, [X31+64]
	185 Move D9, [X31+48]
	186 Move D8, [X31+56]
	187 Move D11, [X31+32]
	188 Move D10, [X31+40]
	189 Move D13, [X31+16]
	190 Move D12, [X31+24]
	191 Move D15, [X31+144]
	192 Move D14, [X31+152]
	193 Call Blitter.DrawQuad, X0, X1, X2
	194 Return 
	195 Call 0x1C17F20

Method: System.Void BlitQuadWithPaddingMultiply(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)

Disassembly:
	0x039E48C4 MOV X1, X19
	0x039E48C8 LDR X2, [X8]
	0x039E48CC BL 0x2DBE67C
	0x039E48D0 LDP X20, X19, [X31 + 0x20]
	0x039E48D4 LDP X22, X21, [X31 + 0x10]
	0x039E48D8 LDR X30, [X31], #0x30
	0x039E48DC RET
	0x039E48E0 BL 0x1C16F20
	0x039E48E4 STR X30, [X31 - 0x30]!
	0x039E48E8 STP X22, X21, [X31 + 0x10]
	0x039E48EC STP X20, X19, [X31 + 0x20]
	0x039E48F0 ADRP X21, 0x9FD000
	0x039E48F4 ADRP X22, 0x76F000
	0x039E48F8 ADRP X19, 0x76F000
	0x039E48FC ADRP X20, 0x76F000
	0x039E4900 LDRB W8, [X21 + 0xDEC]
	0x039E4904 LDR X22, [X22 + 0x450]
	0x039E4908 LDR X19, [X19 + 0x458]
	0x039E490C LDR X20, [X20 + 0x400]
	0x039E4910 TBNZ X8, 0x0, 0x39E4940
	0x039E4914 ADRP X0, 0x76F000
	0x039E4918 LDR X0, [X0 + 0x400]
	0x039E491C BL 0x1C16CF4
	0x039E4920 ADRP X0, 0x76F000
	0x039E4924 LDR X0, [X0 + 0x458]
	0x039E4928 BL 0x1C16CF4
	0x039E492C ADRP X0, 0x76F000
	0x039E4930 LDR X0, [X0 + 0x450]
	0x039E4934 BL 0x1C16CF4
	0x039E4938 MOVZ W8, 0x1
	0x039E493C STRB W8, [X21 + 0xDEC]
	0x039E4940 LDR X0, [X22]
	0x039E4944 BL 0x1C16F10
	0x039E4948 LDR X1, [X19]
	0x039E494C MOV X19, X0
	0x039E4950 BL 0x2AA4804
	0x039E4954 LDR X8, [X20]
	0x039E4958 LDP X22, X21, [X31 + 0x10]
	0x039E495C LDR X8, [X8 + 0xB8]
	0x039E4960 STR X19, [X8]
	0x039E4964 LDP X20, X19, [X31 + 0x20]
	0x039E4968 LDR X30, [X31], #0x30
	0x039E496C RET
	0x039E4970 SUB X31, X31, 0x180
	0x039E4974 STP X29, X30, [X31 + 0x160]
	0x039E4978 STP X20, X19, [X31 + 0x170]
	0x039E497C ADRP X20, 0x9FD000
	0x039E4980 ADRP X19, 0x76C000
	0x039E4984 LDRB W8, [X20 + 0xDED]
	0x039E4988 LDR X19, [X19 + 0x568]
	0x039E498C TBNZ X8, 0x0, 0x39E49A4
	0x039E4990 ADRP X0, 0x76C000
	0x039E4994 LDR X0, [X0 + 0x568]
	0x039E4998 BL 0x1C16CF4
	0x039E499C MOVZ W8, 0x1
	0x039E49A0 STRB W8, [X20 + 0xDED]
	0x039E49A4 MOVI V0.2D, 0x0
	0x039E49A8 ADRP X10, 0xFFFFFFFFFD106000
	0x039E49AC STP V0, V0, [X31 + 0x140]
	0x039E49B0 STP V0, V0, [X31 + 0x120]
	0x039E49B4 LDR V0, [X10 + 0x38C]
	0x039E49B8 ADRP X10, 0xFFFFFFFFFD106000
	0x039E49BC LDR V1, [X10 + 0x24C]
	0x039E49C0 ADRP X10, 0xFFFFFFFFFD106000
	0x039E49C4 LDR V2, [X10 + 0x1C8]
	0x039E49C8 ADRP X10, 0xFFFFFFFFFD106000
	0x039E49CC LDR V4, [X10 + 0x1CC]
	0x039E49D0 ADRP X10, 0xFFFFFFFFFD106000
	0x039E49D4 LDR V5, [X10 + 0xD8]
	0x039E49D8 ADRP X10, 0xFFFFFFFFFD106000
	0x039E49DC MOVZ X9, 0x61A2
	0x039E49E0 LDR V6, [X10 + 0x88]
	0x039E49E4 MOVK X9, 0x3D310000
	0x039E49E8 MOVZ W8, 0x449A
	0x039E49EC MOVK X9, 0x1F4B
	0x039E49F0 MOVK W8, 0x3F650000
	0x039E49F4 MOVK X9, 0x3C3A0000
	0x039E49F8 ADD X0, X31, 0x120
	0x039E49FC FMOV S3, W31
	0x039E4A00 FMOV S7, W31
	0x039E4A04 MOV X1, X31
	0x039E4A08 STP X31, X31, [X31 + 0x10]
	0x039E4A0C STP X9, X8, [X31]
	0x039E4A10 BL 0x3C27870
	0x039E4A14 LDR X8, [X19]
	0x039E4A18 LDP V1, V0, [X31 + 0x140]
	0x039E4A1C LDP V3, V2, [X31 + 0x120]
	0x039E4A20 ADRP X9, 0xFFFFFFFFFD106000
	0x039E4A24 LDR X8, [X8 + 0xB8]
	0x039E4A28 ADD X0, X31, 0xE0
	0x039E4A2C FMOV S7, W31
	0x039E4A30 MOV X1, X31
	0x039E4A34 STP V1, V0, [X8 + 0x20]
	0x039E4A38 MOVI V0.2D, 0x0
	0x039E4A3C STP V3, V2, [X8]
	0x039E4A40 STP V0, V0, [X31 + 0x100]
	0x039E4A44 STP V0, V0, [X31 + 0xE0]
	0x039E4A48 LDR V0, [X9 + 0x270]
	0x039E4A4C ADRP X9, 0xFFFFFFFFFD106000
	0x039E4A50 LDR V1, [X9 + 0xDC]
	0x039E4A54 ADRP X9, 0xFFFFFFFFFD106000
	0x039E4A58 LDR V2, [X9 + 0x1D0]
	0x039E4A5C ADRP X9, 0xFFFFFFFFFD106000
	0x039E4A60 LDR V4, [X9 + 0x3B4]
	0x039E4A64 ADRP X9, 0xFFFFFFFFFD106000
	0x039E4A68 LDR V5, [X9 + 0x434]
	0x039E4A6C ADRP X9, 0xFFFFFFFFFD106000
	0x039E4A70 LDR V6, [X9 + 0x48]
	0x039E4A74 MOVZ W8, 0x17D7
	0x039E4A78 MOVK W8, 0x3F690000
	0x039E4A7C FMOV S3, W31
	0x039E4A80 STP X31, X31, [X31 + 0x10]
	0x039E4A84 STP X31, X8, [X31]
	0x039E4A88 BL 0x3C27870
	0x039E4A8C LDR X8, [X19]
	0x039E4A90 LDP V1, V0, [X31 + 0x100]
	0x039E4A94 LDP V3, V2, [X31 + 0xE0]
	0x039E4A98 ADRP X10, 0xFFFFFFFFFD105000
	0x039E4A9C LDR X8, [X8 + 0xB8]
	0x039E4AA0 MOVZ X9, 0x2D23
	0x039E4AA4 MOVK X9, 0xBD950000
	0x039E4AA8 MOVK X9, 0xC60D
	0x039E4AAC STP V1, V0, [X8 + 0x60]
	0x039E4AB0 MOVI V0.2D, 0x0
	0x039E4AB4 STP V3, V2, [X8 + 0x40]
	0x039E4AB8 STP V0, V0, [X31 + 0xC0]
	0x039E4ABC STP V0, V0, [X31 + 0xA0]
	0x039E4AC0 LDR V0, [X10 + 0xF40]
	0x039E4AC4 ADRP X10, 0xFFFFFFFFFD106000
	0x039E4AC8 LDR V1, [X10 + 0x274]
	0x039E4ACC ADRP X10, 0xFFFFFFFFFD106000
	0x039E4AD0 LDR V2, [X10 + 0x278]
	0x039E4AD4 ADRP X10, 0xFFFFFFFFFD105000
	0x039E4AD8 LDR V4, [X10 + 0xFA4]
	0x039E4ADC ADRP X10, 0xFFFFFFFFFD106000
	0x039E4AE0 LDR V5, [X10 + 0x3F0]
	0x039E4AE4 ADRP X10, 0xFFFFFFFFFD105000
	0x039E4AE8 LDR V6, [X10 + 0xFE0]
	0x039E4AEC MOVZ W8, 0x333C
	0x039E4AF0 MOVK W8, 0x3F8F0000
	0x039E4AF4 MOVK X9, 0xBC080000
	0x039E4AF8 ADD X0, X31, 0xA0
	0x039E4AFC FMOV S3, W31
	0x039E4B00 FMOV S7, W31
	0x039E4B04 MOV X1, X31
	0x039E4B08 STP X31, X31, [X31 + 0x10]
	0x039E4B0C STP X9, X8, [X31]
	0x039E4B10 BL 0x3C27870
	0x039E4B14 LDR X8, [X19]
	0x039E4B18 LDP V1, V0, [X31 + 0xC0]
	0x039E4B1C LDP V3, V2, [X31 + 0xA0]
	0x039E4B20 ADRP X10, 0xFFFFFFFFFD106000
	0x039E4B24 LDR X8, [X8 + 0xB8]
	0x039E4B28 MOVZ X9, 0x7D19
	0x039E4B2C MOVK X9, 0xBD7B0000
	0x039E4B30 MOVK X9, 0xE271
	0x039E4B34 STP V1, V0, [X8 + 0xA0]
	0x039E4B38 MOVI V0.2D, 0x0
	0x039E4B3C STP V3, V2, [X8 + 0x80]

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move [X31+72], S0
	019 Move [X31+80], S1
	020 Move X24, 0x9FE000
	021 Move X25, 0x76F000
	022 Move S11, [X31+152]
	023 Move S10, [X31+156]
	024 Move W8, [X24+3546]
	025 Move S13, [X31+144]
	026 Move S12, [X31+148]
	027 Move X25, [X25+3624]
	028 Move W22, W4
	029 Move W20, W3
	030 Move W23, W2
	031 Move V14, V5
	032 Move V15, V4
	033 Move V8, V3
	034 Move V9, V2
	035 Move X21, X1
	036 Move X19, X0
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {49}
	041 Move X0, 0x770000
	042 Move X0, [X0+432]
	043 Call 0x1C17CF4
	044 Move X0, 0x76F000
	045 Move X0, [X0+3624]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X24+3546], W8
	049 Move X0, [X25]
	050 Move X26, 0x770000
	051 Move W8, [X0+224]
	052 Move X26, [X26+432]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X25]
	057 Move X8, [X26]
	058 Move X9, [X0+184]
	059 Move W10, [X8+224]
	060 Move X24, [X9+32]
	061 Compare W10, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Compare X24, 0
	066 JumpIfEqual {195}
	067 Move X8, [X26]
	068 Move X0, X24
	069 Move X2, X21
	070 Move X3, X31
	071 Move X8, [X8+184]
	072 Move W1, [X8]
	073 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	074 Move X8, [X25]
	075 Move X8, [X8+184]
	076 Move X0, [X8+32]
	077 Compare X0, 0
	078 JumpIfEqual {195}
	079 Move X8, [X26]
	080 Move V0, V9
	081 Move V1, V8
	082 Move V2, V15
	083 Move X8, [X8+184]
	084 Move V3, V14
	085 Move X2, X31
	086 Move W1, [X8+8]
	087 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	088 Move X8, [X25]
	089 Move X8, [X8+184]
	090 Move X0, [X8+32]
	091 Compare X0, 0
	092 JumpIfEqual {195}
	093 Move X8, [X26]
	094 Move V0, V13
	095 Move V1, V12
	096 Move V2, V11
	097 Move X8, [X8+184]
	098 Move V3, V10
	099 Move X2, X31
	100 Move W1, [X8+12]
	101 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	102 Move X8, [X25]
	103 Move X8, [X8+184]
	104 Move X0, [X8+32]
	105 Compare X0, 0
	106 JumpIfEqual {195}
	107 Move X8, [X26]
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Move X2, X31
	110 Move X8, [X8+184]
	111 Move W1, [X8+16]
	112 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	113 Move X8, [X25]
	114 Move X8, [X8+184]
	115 Move X0, [X8+32]
	116 Compare X0, 0
	117 JumpIfEqual {195}
	118 Move X8, [X26]
	119 Move S0, [X31+72]
	120 Move S1, [X31+76]
	121 Move S2, W31
	122 Move S3, W31
	123 Move X8, [X8+184]
	124 Move X2, X31
	125 Move W1, [X8+20]
	126 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	127 Move X8, [X25]
	128 Move X8, [X8+184]
	129 Move X0, [X8+32]
	130 Compare X0, 0
	131 JumpIfEqual {195}
	132 Move X8, [X26]
	133 Move W2, W22
	134 Move X3, X31
	135 Move X8, [X8+184]
	136 Move W1, [X8+24]
	137 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	138 Compare X21, 0
	139 JumpIfEqual {195}
	140 Move X0, X21
	141 Move X1, X31
	142 Call Texture.get_wrapMode, X0
	143 Move X8, [X21]
	144 Move W22, W0
	145 Move X0, X21
	146 Move X9, [X8+456]
	147 Move X1, [X8+464]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, [X25]
	150 Move W21, W0
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move W0, W21
	157 Move W1, W31
	158 Call Blitter.GetBlitMaterial, X0, X1
	159 Move X21, X0
	160 Compare W22, 0
	161 JumpIfEqual {165}
	162 Move X0, [X25]
	163 And W31, W20, 1
	164 Move W9, 9
	165 Move X0, [X25]
	166 And W31, W20, 1
	167 Move W9, 11
	168 Move W8, [X0+224]
	169 NotImplemented "Instruction CINC not yet implemented."
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X19
	174 Move X1, X21
	175 Move W2, W20
	176 Move X20, [X31+128]
	177 Move X19, [X31+136]
	178 Move X22, [X31+112]
	179 Move X21, [X31+120]
	180 Move X24, [X31+96]
	181 Move X23, [X31+104]
	182 Move X26, [X31+80]
	183 Move X25, [X31+88]
	184 Move X30, [X31+64]
	185 Move D9, [X31+48]
	186 Move D8, [X31+56]
	187 Move D11, [X31+32]
	188 Move D10, [X31+40]
	189 Move D13, [X31+16]
	190 Move D12, [X31+24]
	191 Move D15, [X31+144]
	192 Move D14, [X31+152]
	193 Call Blitter.DrawQuad, X0, X1, X2
	194 Return 
	195 Call 0x1C17F20

Method: System.Void BlitOctahedralWithPadding(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)

Disassembly:
	0x039E4B40 STP V0, V0, [X31 + 0x80]
	0x039E4B44 STP V0, V0, [X31 + 0x60]
	0x039E4B48 LDR V0, [X10 + 0x294]
	0x039E4B4C ADRP X10, 0xFFFFFFFFFD106000
	0x039E4B50 LDR V1, [X10 + 0x1A8]
	0x039E4B54 ADRP X10, 0xFFFFFFFFFD106000
	0x039E4B58 LDR V2, [X10 + 0x3F4]
	0x039E4B5C ADRP X10, 0xFFFFFFFFFD106000
	0x039E4B60 LDR V4, [X10 + 0x238]
	0x039E4B64 ADRP X10, 0xFFFFFFFFFD105000
	0x039E4B68 LDR V5, [X10 + 0xF44]
	0x039E4B6C ADRP X10, 0xFFFFFFFFFD105000
	0x039E4B70 LDR V6, [X10 + 0xF48]
	0x039E4B74 MOVZ W8, 0x25C0
	0x039E4B78 MOVK W8, 0x3F820000
	0x039E4B7C MOVK X9, 0xBC2B0000
	0x039E4B80 ADD X0, X31, 0x60
	0x039E4B84 FMOV S3, W31
	0x039E4B88 FMOV S7, W31
	0x039E4B8C MOV X1, X31
	0x039E4B90 STP X31, X31, [X31 + 0x10]
	0x039E4B94 STP X9, X8, [X31]
	0x039E4B98 BL 0x3C27870
	0x039E4B9C LDR X8, [X19]
	0x039E4BA0 LDP V1, V0, [X31 + 0x80]
	0x039E4BA4 LDP V3, V2, [X31 + 0x60]
	0x039E4BA8 ADRP X10, 0xFFFFFFFFFD106000
	0x039E4BAC LDR X8, [X8 + 0xB8]
	0x039E4BB0 MOVZ X9, 0xD8C3
	0x039E4BB4 MOVK X9, 0x3D420000
	0x039E4BB8 MOVK X9, 0x74B8
	0x039E4BBC STP V1, V0, [X8 + 0xE0]
	0x039E4BC0 MOVI V0.2D, 0x0
	0x039E4BC4 STP V3, V2, [X8 + 0xC0]
	0x039E4BC8 STP V0, V0, [X31 + 0x40]
	0x039E4BCC STP V0, V0, [X31 + 0x20]
	0x039E4BD0 LDR V0, [X10 + 0x8]
	0x039E4BD4 ADRP X10, 0xFFFFFFFFFD106000
	0x039E4BD8 LDR V1, [X10 + 0xE0]
	0x039E4BDC ADRP X10, 0xFFFFFFFFFD106000
	0x039E4BE0 LDR V2, [X10 + 0xE4]
	0x039E4BE4 ADRP X10, 0xFFFFFFFFFD106000
	0x039E4BE8 LDR V4, [X10 + 0x298]
	0x039E4BEC ADRP X10, 0xFFFFFFFFFD106000
	0x039E4BF0 LDR V5, [X10 + 0x1D4]
	0x039E4BF4 ADRP X10, 0xFFFFFFFFFD106000
	0x039E4BF8 LDR V6, [X10 + 0xE8]
	0x039E4BFC MOVZ W8, 0xCDCD
	0x039E4C00 MOVK W8, 0x3F7B0000
	0x039E4C04 MOVK X9, 0x3C4C0000
	0x039E4C08 ADD X0, X31, 0x20
	0x039E4C0C FMOV S3, W31
	0x039E4C10 FMOV S7, W31
	0x039E4C14 MOV X1, X31
	0x039E4C18 STP X31, X31, [X31 + 0x10]
	0x039E4C1C STP X9, X8, [X31]
	0x039E4C20 BL 0x3C27870
	0x039E4C24 LDR X8, [X19]
	0x039E4C28 LDP V1, V0, [X31 + 0x40]
	0x039E4C2C LDP V3, V2, [X31 + 0x20]
	0x039E4C30 LDP X20, X19, [X31 + 0x170]
	0x039E4C34 LDR X8, [X8 + 0xB8]
	0x039E4C38 LDP X29, X30, [X31 + 0x160]
	0x039E4C3C STP V1, V0, [X8 + 0x120]
	0x039E4C40 STP V3, V2, [X8 + 0x100]
	0x039E4C44 ADD X31, X31, 0x180
	0x039E4C48 RET
	0x039E4C4C STR X30, [X31 - 0x20]!
	0x039E4C50 STP X20, X19, [X31 + 0x10]
	0x039E4C54 ADRP X20, 0x9FD000
	0x039E4C58 ADRP X19, 0x76F000
	0x039E4C5C LDRB W8, [X20 + 0xDEE]
	0x039E4C60 LDR X19, [X19 + 0x460]
	0x039E4C64 TBNZ X8, 0x0, 0x39E4C7C
	0x039E4C68 ADRP X0, 0x76F000
	0x039E4C6C LDR X0, [X0 + 0x460]
	0x039E4C70 BL 0x1C16CF4
	0x039E4C74 MOVZ W8, 0x1
	0x039E4C78 STRB W8, [X20 + 0xDEE]
	0x039E4C7C LDR X0, [X19]
	0x039E4C80 LDR W8, [X0 + 0xE0]
	0x039E4C84 CBNZ W8, 0x39E4C90
	0x039E4C88 BL 0x1C16DFC
	0x039E4C8C LDR X0, [X19]
	0x039E4C90 LDR X8, [X0 + 0xB8]
	0x039E4C94 LDP X20, X19, [X31 + 0x10]
	0x039E4C98 LDR V0, [X8 + 0x4]
	0x039E4C9C MOVZ W8, 0x42C80000
	0x039E4CA0 FMOV S1, W8
	0x039E4CA4 MOVZ W8, 0x429C0000
	0x039E4CA8 FMUL S0, S0, S1
	0x039E4CAC FMOV S1, W8
	0x039E4CB0 FDIV S0, S1, S0
	0x039E4CB4 LDR X30, [X31], #0x20
	0x039E4CB8 RET
	0x039E4CBC ADRP X8, 0xFFFFFFFFFD106000
	0x039E4CC0 LDR V2, [X8 + 0x168]
	0x039E4CC4 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4CC8 FMOV S1, -3
	0x039E4CCC LDR V3, [X8 + 0x210]
	0x039E4CD0 FMUL S1, S0, S1
	0x039E4CD4 FMUL S2, S0, S2
	0x039E4CD8 FMUL S0, S1, S0
	0x039E4CDC FADD S0, S2, S0
	0x039E4CE0 FADD S0, S0, S3
	0x039E4CE4 RET
	0x039E4CE8 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4CEC LDR V4, [X8 + 0x8C]
	0x039E4CF0 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4CF4 LDR V5, [X8 + 0x320]
	0x039E4CF8 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4CFC LDR V6, [X8 + 0x3B8]
	0x039E4D00 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4D04 LDR V7, [X8 + 0x4C]
	0x039E4D08 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4D0C LDR V16, [X8 + 0x12C]
	0x039E4D10 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4D14 FMOV S3, 1
	0x039E4D18 LDR V17, [X8 + 0xB0]
	0x039E4D1C ADRP X8, 0xFFFFFFFFFD105000
	0x039E4D20 FDIV S2, S0, S1
	0x039E4D24 FSUB S0, S3, S0
	0x039E4D28 LDR V3, [X8 + 0xFE4]
	0x039E4D2C ADRP X8, 0xFFFFFFFFFD106000
	0x039E4D30 FSUB S0, S0, S1
	0x039E4D34 FDIV S0, S0, S1
	0x039E4D38 LDR V1, [X8 + 0x3F8]
	0x039E4D3C ADRP X8, 0xFFFFFFFFFD106000
	0x039E4D40 FMUL S4, S2, S4
	0x039E4D44 FMUL S7, S2, S7
	0x039E4D48 FMUL S2, S2, S3
	0x039E4D4C LDR V3, [X8 + 0x2FC]
	0x039E4D50 FMUL S6, S0, S6
	0x039E4D54 FMUL S17, S0, S17

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move [X31+8], S0
	019 Move [X31+16], S1
	020 Move X23, 0x9FE000
	021 Move X24, 0x76F000
	022 Move S11, [X31+152]
	023 Move S10, [X31+156]
	024 Move W8, [X23+3547]
	025 Move S13, [X31+144]
	026 Move S12, [X31+148]
	027 Move X24, [X24+3624]
	028 Move W21, W4
	029 Move W22, W2
	030 Move V14, V5
	031 Move V15, V4
	032 Move V8, V3
	033 Move V9, V2
	034 Move X20, X1
	035 Move X19, X0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {48}
	040 Move X0, 0x770000
	041 Move X0, [X0+432]
	042 Call 0x1C17CF4
	043 Move X0, 0x76F000
	044 Move X0, [X0+3624]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+3547], W8
	048 Move X0, [X24]
	049 Move X25, 0x770000
	050 Move W8, [X0+224]
	051 Move X25, [X25+432]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X25]
	057 Move X9, [X0+184]
	058 Move W10, [X8+224]
	059 Move X23, [X9+32]
	060 Compare W10, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Compare X23, 0
	065 JumpIfEqual {168}
	066 Move X8, [X25]
	067 Move X0, X23
	068 Move X2, X20
	069 Move X3, X31
	070 Move X8, [X8+184]
	071 Move W1, [X8]
	072 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	073 Move X8, [X24]
	074 Move X8, [X8+184]
	075 Move X0, [X8+32]
	076 Compare X0, 0
	077 JumpIfEqual {168}
	078 Move X8, [X25]
	079 Move V0, V9
	080 Move V1, V8
	081 Move V2, V15
	082 Move X8, [X8+184]
	083 Move V3, V14
	084 Move X2, X31
	085 Move W1, [X8+8]
	086 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	087 Move X8, [X24]
	088 Move X8, [X8+184]
	089 Move X0, [X8+32]
	090 Compare X0, 0
	091 JumpIfEqual {168}
	092 Move X8, [X25]
	093 Move V0, V13
	094 Move V1, V12
	095 Move V2, V11
	096 Move X8, [X8+184]
	097 Move V3, V10
	098 Move X2, X31
	099 Move W1, [X8+12]
	100 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	101 Move X8, [X24]
	102 Move X8, [X8+184]
	103 Move X0, [X8+32]
	104 Compare X0, 0
	105 JumpIfEqual {168}
	106 Move X8, [X25]
	107 NotImplemented "Instruction SCVTF not yet implemented."
	108 Move X2, X31
	109 Move X8, [X8+184]
	110 Move W1, [X8+16]
	111 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	112 Move X8, [X24]
	113 Move X8, [X8+184]
	114 Move X0, [X8+32]
	115 Compare X0, 0
	116 JumpIfEqual {168}
	117 Move X8, [X25]
	118 Move S0, [X31+8]
	119 Move S1, [X31+12]
	120 Move S2, W31
	121 Move S3, W31
	122 Move X8, [X8+184]
	123 Move X2, X31
	124 Move W1, [X8+20]
	125 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	126 Move X8, [X24]
	127 Move X8, [X8+184]
	128 Move X0, [X8+32]
	129 Compare X0, 0
	130 JumpIfEqual {168}
	131 Move X8, [X25]
	132 Move W2, W21
	133 Move X3, X31
	134 Move X8, [X8+184]
	135 Move W1, [X8+24]
	136 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	137 Compare X20, 0
	138 JumpIfEqual {168}
	139 Move X8, [X20]
	140 Move X0, X20
	141 Move X9, [X8+456]
	142 Move X1, [X8+464]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move W1, W31
	145 Call Blitter.GetBlitMaterial, X0, X1
	146 Move X1, X0
	147 Move X0, X19
	148 Move X20, [X31+128]
	149 Move X19, [X31+136]
	150 Move X22, [X31+112]
	151 Move X21, [X31+120]
	152 Move X24, [X31+96]
	153 Move X23, [X31+104]
	154 Move X30, [X31+80]
	155 Move X25, [X31+88]
	156 Move D9, [X31+64]
	157 Move D8, [X31+72]
	158 Move D11, [X31+48]
	159 Move D10, [X31+56]
	160 Move D13, [X31+32]
	161 Move D12, [X31+40]
	162 Move D15, [X31+16]
	163 Move D14, [X31+24]
	164 Move W2, 8
	165 Add X31, X31, 144
	166 Call Blitter.DrawQuad, X0, X1, X2
	167 Return 
	168 Call 0x1C17F20

Method: System.Void BlitOctahedralWithPaddingMultiply(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels)

Disassembly:
	0x039E4D58 FMUL S0, S0, S1
	0x039E4D5C FADD S1, S4, S5
	0x039E4D60 FADD S4, S7, S16
	0x039E4D64 FADD S3, S2, S3
	0x039E4D68 FADD S1, S1, S6
	0x039E4D6C FADD S2, S4, S17
	0x039E4D70 FADD S0, S3, S0
	0x039E4D74 RET
	0x039E4D78 STP D9, D8, [X31 - 0x30]!
	0x039E4D7C STR X30, [X31 + 0x10]
	0x039E4D80 STP X20, X19, [X31 + 0x20]
	0x039E4D84 ADRP X20, 0x9FD000
	0x039E4D88 ADRP X19, 0x76F000
	0x039E4D8C LDRB W8, [X20 + 0xDEF]
	0x039E4D90 LDR X19, [X19 + 0x460]
	0x039E4D94 MOV V8.16B, V1.16B
	0x039E4D98 MOV V9.16B, V0.16B
	0x039E4D9C TBNZ X8, 0x0, 0x39E4DB4
	0x039E4DA0 ADRP X0, 0x76F000
	0x039E4DA4 LDR X0, [X0 + 0x460]
	0x039E4DA8 BL 0x1C16CF4
	0x039E4DAC MOVZ W8, 0x1
	0x039E4DB0 STRB W8, [X20 + 0xDEF]
	0x039E4DB4 MOVZ W8, 0x42820000
	0x039E4DB8 FMOV S0, W8
	0x039E4DBC FDIV S0, S9, S0
	0x039E4DC0 ADRP X9, 0xFFFFFFFFFD109000
	0x039E4DC4 LDR X0, [X19]
	0x039E4DC8 FCMP S0, 0x0
	0x039E4DCC ADD X9, X9, 0x740
	0x039E4DD0 CSET W8, MI
	0x039E4DD4 ADRP X10, 0xFFFFFFFFFD105000
	0x039E4DD8 LDR V1, [X9, W8, UXTW]
	0x039E4DDC LDR V2, [X10 + 0xF74]
	0x039E4DE0 LDR W8, [X0 + 0xE0]
	0x039E4DE4 FMUL S0, S0, S1
	0x039E4DE8 FSUB S9, S2, S0
	0x039E4DEC CBNZ W8, 0x39E4DF4
	0x039E4DF0 BL 0x1C16DFC
	0x039E4DF4 MOVZ W8, 0x42820000
	0x039E4DF8 FMOV S0, W8
	0x039E4DFC ADRP X8, 0xFFFFFFFFFD106000
	0x039E4E00 LDR V2, [X8 + 0x168]
	0x039E4E04 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4E08 LDR V3, [X8 + 0x200]
	0x039E4E0C FMOV S1, -3
	0x039E4E10 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4E14 FDIV S0, S8, S0
	0x039E4E18 LDR V5, [X8 + 0x210]
	0x039E4E1C ADRP X8, 0xFFFFFFFFFD109000
	0x039E4E20 FMUL S1, S9, S1
	0x039E4E24 FMUL S0, S0, S3
	0x039E4E28 LDR V3, [X8 + 0xCF8]
	0x039E4E2C ADRP X8, 0xFFFFFFFFFD106000
	0x039E4E30 FMUL S1, S9, S1
	0x039E4E34 FMUL S2, S9, S2
	0x039E4E38 FADD S1, S2, S1
	0x039E4E3C LDR V2, [X8 + 0x320]
	0x039E4E40 MOVZ W8, 0xD289
	0x039E4E44 MOVK W8, 0x3C5E0000
	0x039E4E48 FADD S1, S1, S5
	0x039E4E4C UNIMPLEMENTED
	0x039E4E50 ADRP X8, 0xFFFFFFFFFD105000
	0x039E4E54 FMOV S4, 1
	0x039E4E58 FADD S0, S0, S1
	0x039E4E5C LDR V1, [X8 + 0xFE4]
	0x039E4E60 FSUB S4, S4, S9
	0x039E4E64 ADRP X8, 0xFFFFFFFFFD109000
	0x039E4E68 FSUB S4, S4, S0
	0x039E4E6C FDIV S6, S9, S0
	0x039E4E70 FDIV S0, S4, S0
	0x039E4E74 LDR V4, [X8 + 0xA58]
	0x039E4E78 ADRP X8, 0xFFFFFFFFFD106000
	0x00000000 INVALID
	0x039E4E80 FMUL S1, S6, S1
	0x039E4E84 LDR V6, [X8 + 0x2FC]
	0x039E4E88 ADRP X8, 0xFFFFFFFFFD106000
	0x039E4E8C FSUB V2.2S, V2.2S, V3.2S
	0x039E4E90 FADD V3.2S, V3.2S, V5.2S
	0x039E4E94 LDR V5, [X8 + 0x3F8]
	0x039E4E98 ADRP X8, 0xFFFFFFFFFD106000
	0x00000000 INVALID
	0x039E4EA0 MOV V2.S[1], V3.S[1]
	0x039E4EA4 FMUL S0, S0, S5
	0x039E4EA8 LDR V5, [X8 + 0x1F8]
	0x039E4EAC ADRP X8, 0xFFFFFFFFFD109000
	0x039E4EB0 LDR V3, [X8 + 0x520]
	0x039E4EB4 FADD S1, S1, S6
	0x039E4EB8 LDP X20, X19, [X31 + 0x20]
	0x039E4EBC LDR X30, [X31 + 0x10]
	0x039E4EC0 FADD S0, S1, S0
	0x039E4EC4 FADD V1.2S, V2.2S, V4.2S
	0x00000000 INVALID
	0x039E4ECC FDIV S0, S5, S0
	0x039E4ED0 MOV S2, V1.S[1]
	0x039E4ED4 LDP D9, D8, [X31], #0x30
	0x039E4ED8 RET
	0x039E4EDC SUB X31, X31, 0xA0
	0x039E4EE0 STP D15, D14, [X31 + 0x20]
	0x039E4EE4 STP D13, D12, [X31 + 0x30]
	0x039E4EE8 STP D11, D10, [X31 + 0x40]
	0x039E4EEC STP D9, D8, [X31 + 0x50]
	0x039E4EF0 STR X30, [X31 + 0x60]
	0x039E4EF4 STP X24, X23, [X31 + 0x70]
	0x039E4EF8 STP X22, X21, [X31 + 0x80]
	0x039E4EFC STP X20, X19, [X31 + 0x90]
	0x039E4F00 ADRP X24, 0x9FD000
	0x039E4F04 ADRP X23, 0x76F000
	0x039E4F08 MOV X19, X8
	0x039E4F0C LDRB W8, [X24 + 0xDF0]
	0x039E4F10 LDR X23, [X23 + 0x468]
	0x039E4F14 MOV X20, X2
	0x039E4F18 MOV X21, X1
	0x039E4F1C MOV X22, X0
	0x039E4F20 TBNZ X8, 0x0, 0x39E4F38
	0x039E4F24 ADRP X0, 0x76F000
	0x039E4F28 LDR X0, [X0 + 0x468]
	0x039E4F2C BL 0x1C16CF4
	0x039E4F30 MOVZ W8, 0x1
	0x039E4F34 STRB W8, [X24 + 0xDF0]
	0x039E4F38 LDP S0, S8, [X22]
	0x039E4F3C LDP S9, S12, [X22 + 0x8]
	0x039E4F40 MOV X0, X31
	0x039E4F44 BL 0x3C25A10
	0x039E4F48 MOV V10.16B, V0.16B
	0x039E4F4C MOV V0.16B, V8.16B
	0x039E4F50 MOV X0, X31
	0x039E4F54 BL 0x3C25A10
	0x039E4F58 MOV V8.16B, V0.16B
	0x039E4F5C MOV V0.16B, V9.16B
	0x039E4F60 MOV X0, X31
	0x039E4F64 BL 0x3C25A10
	0x039E4F68 FCMP S12, 0x0
	0x039E4F6C FMOV S2, -1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move [X31+8], S0
	019 Move [X31+16], S1
	020 Move X23, 0x9FE000
	021 Move X24, 0x76F000
	022 Move S11, [X31+152]
	023 Move S10, [X31+156]
	024 Move W8, [X23+3548]
	025 Move S13, [X31+144]
	026 Move S12, [X31+148]
	027 Move X24, [X24+3624]
	028 Move W21, W4
	029 Move W22, W2
	030 Move V14, V5
	031 Move V15, V4
	032 Move V8, V3
	033 Move V9, V2
	034 Move X20, X1
	035 Move X19, X0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {48}
	040 Move X0, 0x770000
	041 Move X0, [X0+432]
	042 Call 0x1C17CF4
	043 Move X0, 0x76F000
	044 Move X0, [X0+3624]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+3548], W8
	048 Move X0, [X24]
	049 Move X25, 0x770000
	050 Move W8, [X0+224]
	051 Move X25, [X25+432]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X25]
	057 Move X9, [X0+184]
	058 Move W10, [X8+224]
	059 Move X23, [X9+32]
	060 Compare W10, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Compare X23, 0
	065 JumpIfEqual {168}
	066 Move X8, [X25]
	067 Move X0, X23
	068 Move X2, X20
	069 Move X3, X31
	070 Move X8, [X8+184]
	071 Move W1, [X8]
	072 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	073 Move X8, [X24]
	074 Move X8, [X8+184]
	075 Move X0, [X8+32]
	076 Compare X0, 0
	077 JumpIfEqual {168}
	078 Move X8, [X25]
	079 Move V0, V9
	080 Move V1, V8
	081 Move V2, V15
	082 Move X8, [X8+184]
	083 Move V3, V14
	084 Move X2, X31
	085 Move W1, [X8+8]
	086 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	087 Move X8, [X24]
	088 Move X8, [X8+184]
	089 Move X0, [X8+32]
	090 Compare X0, 0
	091 JumpIfEqual {168}
	092 Move X8, [X25]
	093 Move V0, V13
	094 Move V1, V12
	095 Move V2, V11
	096 Move X8, [X8+184]
	097 Move V3, V10
	098 Move X2, X31
	099 Move W1, [X8+12]
	100 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	101 Move X8, [X24]
	102 Move X8, [X8+184]
	103 Move X0, [X8+32]
	104 Compare X0, 0
	105 JumpIfEqual {168}
	106 Move X8, [X25]
	107 NotImplemented "Instruction SCVTF not yet implemented."
	108 Move X2, X31
	109 Move X8, [X8+184]
	110 Move W1, [X8+16]
	111 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	112 Move X8, [X24]
	113 Move X8, [X8+184]
	114 Move X0, [X8+32]
	115 Compare X0, 0
	116 JumpIfEqual {168}
	117 Move X8, [X25]
	118 Move S0, [X31+8]
	119 Move S1, [X31+12]
	120 Move S2, W31
	121 Move S3, W31
	122 Move X8, [X8+184]
	123 Move X2, X31
	124 Move W1, [X8+20]
	125 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	126 Move X8, [X24]
	127 Move X8, [X8+184]
	128 Move X0, [X8+32]
	129 Compare X0, 0
	130 JumpIfEqual {168}
	131 Move X8, [X25]
	132 Move W2, W21
	133 Move X3, X31
	134 Move X8, [X8+184]
	135 Move W1, [X8+24]
	136 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	137 Compare X20, 0
	138 JumpIfEqual {168}
	139 Move X8, [X20]
	140 Move X0, X20
	141 Move X9, [X8+456]
	142 Move X1, [X8+464]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move W1, W31
	145 Call Blitter.GetBlitMaterial, X0, X1
	146 Move X1, X0
	147 Move X0, X19
	148 Move X20, [X31+128]
	149 Move X19, [X31+136]
	150 Move X22, [X31+112]
	151 Move X21, [X31+120]
	152 Move X24, [X31+96]
	153 Move X23, [X31+104]
	154 Move X30, [X31+80]
	155 Move X25, [X31+88]
	156 Move D9, [X31+64]
	157 Move D8, [X31+72]
	158 Move D11, [X31+48]
	159 Move D10, [X31+56]
	160 Move D13, [X31+32]
	161 Move D12, [X31+40]
	162 Move D15, [X31+16]
	163 Move D14, [X31+24]
	164 Move W2, 13
	165 Add X31, X31, 144
	166 Call Blitter.DrawQuad, X0, X1, X2
	167 Return 
	168 Call 0x1C17F20

Method: System.Void BlitCubeToOctahedral2DQuad(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex)

Disassembly:
	0x039DAA44 BL 0x1C16CF4
	0x039DAA48 MOVZ W8, 0x1
	0x039DAA4C STRB W8, [X21 + 0xD71]
	0x039DAA50 LDR X0, [X22]
	0x039DAA54 LDR W8, [X0 + 0xE0]
	0x039DAA58 CBNZ W8, 0x39DAA60
	0x039DAA5C BL 0x1C16DFC
	0x039DAA60 MOV X0, X20
	0x039DAA64 BL 0x39DA35C
	0x039DAA68 MOV W20, W0
	0x039DAA6C MOV X0, X19
	0x039DAA70 BL 0x39DA35C
	0x039DAA74 MOVZ W8, 0x17
	0x039DAA78 MADD W0, W0, W8, W20
	0x039DAA7C LDP X20, X19, [X31 + 0x20]
	0x039DAA80 LDP X22, X21, [X31 + 0x10]
	0x039DAA84 LDR X30, [X31], #0x30
	0x039DAA88 RET
	0x039DAA8C STR X30, [X31 - 0x20]!
	0x039DAA90 STP X20, X19, [X31 + 0x10]
	0x039DAA94 CBZ X1, 0x39DAAD0
	0x039DAA98 MOV X0, X1
	0x039DAA9C MOV X1, X31
	0x039DAAA0 MOV X19, X2
	0x039DAAA4 BL 0x3C385F8
	0x039DAAA8 CBZ X19, 0x39DAAD0
	0x039DAAAC MOV W20, W0
	0x039DAAB0 MOV X0, X19
	0x039DAAB4 MOV X1, X31
	0x039DAAB8 BL 0x3C385F8
	0x039DAABC MOVZ W8, 0x17
	0x039DAAC0 MADD W0, W0, W8, W20
	0x039DAAC4 LDP X20, X19, [X31 + 0x10]
	0x039DAAC8 LDR X30, [X31], #0x20
	0x039DAACC RET
	0x039DAAD0 BL 0x1C16F20
	0x039DAAD4 STR X30, [X31 - 0x20]!
	0x039DAAD8 STP X20, X19, [X31 + 0x10]
	0x039DAADC MOV X19, X1
	0x039DAAE0 MOV X1, X2
	0x039DAAE4 MOV X2, X3
	0x039DAAE8 MOV X20, X0
	0x039DAAEC BL 0x39DAA8C
	0x039DAAF0 MOV W2, W0
	0x039DAAF4 MOV X0, X20
	0x039DAAF8 MOV X1, X19
	0x039DAAFC LDP X20, X19, [X31 + 0x10]
	0x039DAB00 LDR X30, [X31], #0x20
	0x039DAB04 B 0x39DAB08
	0x039DAB08 SUB X31, X31, 0x50
	0x039DAB0C STR X30, [X31 + 0x20]
	0x039DAB10 STP X22, X21, [X31 + 0x30]
	0x039DAB14 STP X20, X19, [X31 + 0x40]
	0x039DAB18 ADRP X22, 0xA07000
	0x039DAB1C LDRB W8, [X22 + 0xD72]
	0x039DAB20 MOV W20, W2
	0x039DAB24 MOV X19, X1
	0x039DAB28 MOV X21, X0
	0x039DAB2C TBNZ X8, 0x0, 0x39DAB44
	0x039DAB30 ADRP X0, 0x779000
	0x039DAB34 LDR X0, [X0 + 0x1C8]
	0x039DAB38 BL 0x1C16CF4
	0x039DAB3C MOVZ W8, 0x1
	0x039DAB40 STRB W8, [X22 + 0xD72]
	0x039DAB44 STP X31, X31, [X31 + 0x8]
	0x039DAB48 STR X31, [X31 + 0x18]
	0x039DAB4C LDR X0, [X21 + 0x30]
	0x039DAB50 CBZ X0, 0x39DAB8C
	0x039DAB54 ADRP X8, 0x779000
	0x039DAB58 LDR X8, [X8 + 0x1C8]
	0x039DAB5C ADD X2, X31, 0x8
	0x039DAB60 MOV W1, W20
	0x039DAB64 LDR X3, [X8]
	0x039DAB68 BL 0x29FCBA4
	0x039DAB6C LDUR V0, [X31 + 0x8]
	0x039DAB70 LDP X22, X21, [X31 + 0x30]
	0x039DAB74 LDR X30, [X31 + 0x20]
	0x039DAB78 AND W0, W0, 0x1
	0x039DAB7C STR V0, [X19]
	0x039DAB80 LDP X20, X19, [X31 + 0x40]
	0x039DAB84 ADD X31, X31, 0x50
	0x039DAB88 RET
	0x039DAB8C BL 0x1C16F20
	0x039DAB90 STR X30, [X31 - 0x20]!
	0x039DAB94 STP X20, X19, [X31 + 0x10]
	0x039DAB98 CBZ X2, 0x39DABC8
	0x039DAB9C MOV X19, X1
	0x039DABA0 MOV X20, X0
	0x039DABA4 MOV X0, X2
	0x039DABA8 MOV X1, X31
	0x039DABAC BL 0x3C385F8
	0x039DABB0 MOV W2, W0
	0x039DABB4 MOV X0, X20
	0x039DABB8 MOV X1, X19
	0x039DABBC LDP X20, X19, [X31 + 0x10]
	0x039DABC0 LDR X30, [X31], #0x20
	0x039DABC4 B 0x39DAB08
	0x039DABC8 BL 0x1C16F20
	0x039DABCC SUB X31, X31, 0x40
	0x039DABD0 STP X30, X21, [X31 + 0x20]
	0x039DABD4 STP X20, X19, [X31 + 0x30]
	0x039DABD8 ADRP X21, 0xA07000

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xA08000
	013 Move X23, 0x779000
	014 Move W8, [X22+3549]
	015 Move X23, [X23+3624]
	016 Move W21, W2
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move X20, X1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x77A000
	028 Move X0, [X0+432]
	029 Call 0x1C17CF4
	030 Move X0, 0x779000
	031 Move X0, [X0+3624]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3549], W8
	035 Move X0, [X23]
	036 Move X24, 0x77A000
	037 Move W8, [X0+224]
	038 Move X24, [X24+432]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X23]
	043 Move X8, [X24]
	044 Move X9, [X0+184]
	045 Move W10, [X8+224]
	046 Move X22, [X9+32]
	047 Compare W10, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Compare X22, 0
	052 JumpIfEqual {124}
	053 Move X8, [X24]
	054 Move X0, X22
	055 Move X2, X20
	056 Move X3, X31
	057 Move X8, [X8+184]
	058 Move W1, [X8+4]
	059 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	060 Move X8, [X23]
	061 Move X8, [X8+184]
	062 Move X0, [X8+32]
	063 Compare X0, 0
	064 JumpIfEqual {124}
	065 Move X8, [X24]
	066 NotImplemented "Instruction SCVTF not yet implemented."
	067 Move X2, X31
	068 Move X8, [X8+184]
	069 Move W1, [X8+16]
	070 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	071 Move X8, [X23]
	072 Move X8, [X8+184]
	073 Move X0, [X8+32]
	074 Compare X0, 0
	075 JumpIfEqual {124}
	076 Move X8, [X24]
	077 Move S0, 1
	078 Move S1, 1
	079 Move S2, W31
	080 Move X8, [X8+184]
	081 Move S3, W31
	082 Move X2, X31
	083 Move W1, [X8+8]
	084 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	085 Move X8, [X23]
	086 Move X8, [X8+184]
	087 Move X0, [X8+32]
	088 Compare X0, 0
	089 JumpIfEqual {124}
	090 Move X8, [X24]
	091 Move V0, V11
	092 Move V1, V10
	093 Move V2, V9
	094 Move X8, [X8+184]
	095 Move V3, V8
	096 Move X2, X31
	097 Move W1, [X8+12]
	098 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	099 Compare X20, 0
	100 JumpIfEqual {124}
	101 Move X8, [X20]
	102 Move X0, X20
	103 Move X9, [X8+456]
	104 Move X1, [X8+464]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move W1, W31
	107 Call Blitter.GetBlitMaterial, X0, X1
	108 Move X1, X0
	109 Move X0, X19
	110 Move X20, [X31+80]
	111 Move X19, [X31+88]
	112 Move X22, [X31+64]
	113 Move X21, [X31+72]
	114 Move X24, [X31+48]
	115 Move X23, [X31+56]
	116 Move X30, [X31+32]
	117 Move D9, [X31+16]
	118 Move D8, [X31+24]
	119 Move W2, 14
	120 Move D11, [X31+96]
	121 Move D10, [X31+104]
	122 Call Blitter.DrawQuad, X0, X1, X2
	123 Return 
	124 Call 0x1C17F20

Method: System.Void BlitCubeToOctahedral2DQuadWithPadding(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector2 textureSize, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex, System.Boolean bilinear, System.Int32 paddingInPixels, System.Nullable`1<UnityEngine.Vector4> decodeInstructions = null)

Disassembly:
	0x039E4F70 FMOV S9, 1
	0x039E4F74 FCSEL S2, S9, S2, GE
	0x039E4F78 FMOV S3, 4
	0x039E4F7C FCMP S2, 0x0
	0x039E4F80 LDP S1, S11, [X21]
	0x039E4F84 FCSEL S2, S9, S3, MI
	0x039E4F88 FMUL S2, S12, S2
	0x039E4F8C FMOV S14, W31
	0x039E4F90 FADD S4, S8, S2
	0x039E4F94 FADD S0, S0, S2
	0x039E4F98 LDP S12, S8, [X21 + 0x8]
	0x039E4F9C FADD S3, S10, S2
	0x039E4FA0 FMAXNM S0, S0, S14
	0x039E4FA4 FMAXNM S5, S3, S14
	0x039E4FA8 FMAXNM S2, S4, S14
	0x039E4FAC STR S0, [X31 + 0x1C]
	0x039E4FB0 MOV V0.16B, V1.16B
	0x039E4FB4 MOV X0, X31
	0x039E4FB8 FMOV S15, 4
	0x039E4FBC STP S2, S5, [X31 + 0x68]
	0x039E4FC0 BL 0x3C25A10
	0x039E4FC4 MOV V13.16B, V0.16B
	0x039E4FC8 MOV V0.16B, V11.16B
	0x039E4FCC MOV X0, X31
	0x039E4FD0 BL 0x3C25A10
	0x039E4FD4 MOV V11.16B, V0.16B
	0x039E4FD8 MOV V0.16B, V12.16B
	0x039E4FDC MOV X0, X31
	0x039E4FE0 BL 0x3C25A10
	0x039E4FE4 FCMP S8, 0x0
	0x039E4FE8 FMOV S2, -1
	0x039E4FEC FCSEL S2, S9, S2, GE
	0x039E4FF0 FCMP S2, 0x0
	0x039E4FF4 LDP S1, S12, [X20]
	0x039E4FF8 FCSEL S2, S9, S15, MI
	0x039E4FFC FMUL S2, S8, S2
	0x039E5000 FADD S4, S11, S2
	0x039E5004 LDP S11, S10, [X20 + 0x8]
	0x039E5008 FADD S0, S0, S2
	0x039E500C FADD S3, S13, S2
	0x039E5010 FMAXNM S2, S4, S14
	0x039E5014 FMAXNM S15, S0, S14
	0x039E5018 MOV V0.16B, V1.16B
	0x039E501C MOV X0, X31
	0x039E5020 FMAXNM S13, S3, S14
	0x039E5024 STR S2, [X31 + 0x18]
	0x039E5028 BL 0x3C25A10
	0x039E502C MOV V8.16B, V0.16B
	0x039E5030 MOV V0.16B, V12.16B
	0x039E5034 MOV X0, X31
	0x039E5038 BL 0x3C25A10
	0x039E503C MOV V12.16B, V0.16B
	0x039E5040 MOV V0.16B, V11.16B
	0x039E5044 MOV X0, X31
	0x039E5048 BL 0x3C25A10
	0x039E504C FCMP S10, 0x0
	0x039E5050 FMOV S1, -1
	0x039E5054 FCSEL S1, S9, S1, GE
	0x039E5058 FCMP S1, 0x0
	0x039E505C FMOV S2, 4
	0x039E5060 FCSEL S2, S9, S2, MI
	0x039E5064 FMUL S2, S10, S2
	0x039E5068 FADD S3, S8, S2
	0x039E506C FADD S4, S12, S2
	0x039E5070 FADD S0, S0, S2
	0x039E5074 MOVI V1.2D, 0x0
	0x039E5078 FMAXNM S2, S3, S14
	0x039E507C FMAXNM S4, S4, S14
	0x039E5080 FMAXNM S0, S0, S14
	0x039E5084 LDR X1, [X23]
	0x039E5088 STP V1, V1, [X19]
	0x039E508C STR V1, [X19 + 0x2]
	0x039E5090 STP S4, S0, [X31 + 0x4]
	0x039E5094 STR S2, [X31]
	0x039E5098 LDP S1, S0, [X31 + 0x68]
	0x039E509C LDP S5, S2, [X31 + 0x18]
	0x039E50A0 FMOV S3, W31
	0x039E50A4 FMOV S7, W31
	0x039E50A8 MOV X0, X19
	0x039E50AC MOV V4.16B, V13.16B
	0x039E50B0 MOV V6.16B, V15.16B
	0x039E50B4 STR W31, [X31 + 0xC]
	0x039E50B8 BL 0x27C373C
	0x039E50BC LDP X20, X19, [X31 + 0x90]
	0x039E50C0 LDP X22, X21, [X31 + 0x80]
	0x039E50C4 LDP X24, X23, [X31 + 0x70]
	0x039E50C8 LDR X30, [X31 + 0x60]
	0x039E50CC LDP D9, D8, [X31 + 0x50]
	0x039E50D0 LDP D11, D10, [X31 + 0x40]
	0x039E50D4 LDP D13, D12, [X31 + 0x30]
	0x039E50D8 LDP D15, D14, [X31 + 0x20]
	0x039E50DC ADD X31, X31, 0xA0
	0x039E50E0 RET
	0x039E50E4 SUB X31, X31, 0xB0
	0x039E50E8 STP D15, D14, [X31 + 0x30]
	0x039E50EC STP D13, D12, [X31 + 0x40]
	0x039E50F0 STP D11, D10, [X31 + 0x50]
	0x039E50F4 STP D9, D8, [X31 + 0x60]
	0x039E50F8 STR X30, [X31 + 0x70]
	0x039E50FC STP X24, X23, [X31 + 0x80]
	0x039E5100 STP X22, X21, [X31 + 0x90]
	0x039E5104 STP X20, X19, [X31 + 0xA0]
	0x039E5108 ADRP X24, 0x9FC000
	0x039E510C ADRP X23, 0x76E000
	0x039E5110 MOV X19, X8
	0x039E5114 LDRB W8, [X24 + 0xDF1]
	0x039E5118 LDR X23, [X23 + 0x460]
	0x039E511C MOV X20, X2
	0x039E5120 MOV X21, X1
	0x039E5124 MOV X22, X0
	0x039E5128 TBNZ X8, 0x0, 0x39E514C
	0x039E512C ADRP X0, 0x76E000
	0x039E5130 LDR X0, [X0 + 0x460]
	0x039E5134 BL 0x1C16CF4
	0x039E5138 ADRP X0, 0x76E000
	0x039E513C LDR X0, [X0 + 0x468]
	0x039E5140 BL 0x1C16CF4
	0x039E5144 MOVZ W8, 0x1
	0x039E5148 STRB W8, [X24 + 0xDF1]
	0x039E514C LDP S0, S8, [X22]
	0x039E5150 LDP S9, S13, [X22 + 0x8]
	0x039E5154 ADRP X22, 0x76E000
	0x039E5158 LDR X22, [X22 + 0x468]
	0x039E515C MOV X0, X31
	0x039E5160 BL 0x3C25A10
	0x039E5164 ADRP X8, 0xFFFFFFFFFD104000
	0x039E5168 LDR V10, [X8 + 0xF24]
	0x039E516C MOV X0, X31
	0x039E5170 FMUL S12, S0, S10
	0x039E5174 MOV V0.16B, V8.16B
	0x039E5178 BL 0x3C25A10
	0x039E517C FMUL S14, S0, S10
	0x039E5180 MOV V0.16B, V9.16B
	0x039E5184 MOV X0, X31
	0x039E5188 BL 0x3C25A10
	0x039E518C LDR X0, [X23]
	0x039E5190 FMUL S15, S0, S10
	0x039E5194 LDR W8, [X0 + 0xE0]
	0x039E5198 CBNZ W8, 0x39E51A0
	0x039E519C BL 0x1C16DFC
	0x039E51A0 ADRP X8, 0xFFFFFFFFFD105000
	0x039E51A4 LDR V2, [X8 + 0x140]
	0x039E51A8 ADRP X8, 0xFFFFFFFFFD105000
	0x039E51AC LDR V10, [X8 + 0x324]
	0x039E51B0 ADRP X8, 0xFFFFFFFFFD105000
	0x039E51B4 LDR V9, [X8 + 0x300]
	0x039E51B8 FMUL S1, S12, S2
	0x039E51BC MOV V8.16B, V2.16B
	0x039E51C0 STR S2, [X31 + 0x1C]
	0x039E51C4 FMUL S2, S14, S10
	0x039E51C8 FADD S1, S1, S2
	0x039E51CC FMUL S2, S15, S9
	0x039E51D0 FADD S1, S1, S2
	0x039E51D4 LDP S0, S11, [X21]
	0x039E51D8 FSUB S2, S12, S1
	0x039E51DC LDP S12, S4, [X21 + 0x8]
	0x039E51E0 FSUB S3, S14, S1
	0x039E51E4 FSUB S1, S15, S1
	0x039E51E8 FADD S5, S13, S2
	0x039E51EC FADD S2, S13, S3
	0x039E51F0 FADD S1, S13, S1
	0x039E51F4 MOV X0, X31
	0x039E51F8 STP S2, S5, [X31 + 0x78]
	0x039E51FC STP S4, S1, [X31 + 0x28]
	0x039E5200 BL 0x3C25A10
	0x039E5204 ADRP X8, 0xFFFFFFFFFD105000
	0x039E5208 LDR V13, [X8 + 0x5C]
	0x039E520C MOV X0, X31
	0x039E5210 FMUL S15, S0, S13
	0x039E5214 MOV V0.16B, V11.16B
	0x039E5218 BL 0x3C25A10
	0x039E521C FMUL S14, S0, S13
	0x039E5220 MOV V0.16B, V12.16B
	0x039E5224 MOV X0, X31
	0x039E5228 BL 0x3C25A10
	0x039E522C FMUL S1, S0, S13
	0x039E5230 FMUL S0, S15, S8
	0x039E5234 FMUL S2, S14, S10
	0x039E5238 FADD S0, S0, S2
	0x039E523C FMUL S2, S1, S9
	0x039E5240 LDR V3, [X31 + 0x28]
	0x039E5244 ADRP X8, 0xFFFFFFFFFD105000
	0x039E5248 FADD S2, S0, S2
	0x039E524C FSUB S4, S15, S2
	0x039E5250 FSUB S5, S14, S2
	0x039E5254 FSUB S1, S1, S2
	0x039E5258 LDR V2, [X8 + 0x410]
	0x039E525C FMOV S8, 1
	0x039E5260 LDP S0, S11, [X20]
	0x039E5264 FADD S3, S3, S8
	0x039E5268 FADD S4, S3, S4
	0x039E526C FADD S5, S3, S5
	0x039E5270 FADD S1, S3, S1
	0x039E5274 LDP S12, S14, [X20 + 0x8]
	0x039E5278 FMAXNM S3, S4, S2
	0x039E527C FMAXNM S4, S5, S2

ISIL:
	001 Move [X31-144], D13
	002 Move [X31-136], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X22, 0x9FE000
	019 Move W8, [X22+3550]
	020 Move X21, X5
	021 Move W23, W4
	022 Move W20, W3
	023 Move W24, W2
	024 Move V10, V5
	025 Move V11, V4
	026 Move V12, V3
	027 Move V13, V2
	028 Move V8, V1
	029 Move V9, V0
	030 Move X25, X1
	031 Move X19, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {50}
	036 Move X0, 0x770000
	037 Move X0, [X0+432]
	038 Call 0x1C17CF4
	039 Move X0, 0x76F000
	040 Move X0, [X0+3624]
	041 Call 0x1C17CF4
	042 Move X0, 0x770000
	043 Move X0, [X0+936]
	044 Call 0x1C17CF4
	045 Move X0, 0x770000
	046 Move X0, [X0+944]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+3550], W8
	050 Compare X25, 0
	051 JumpIfEqual {232}
	052 Move X8, [X25]
	053 Move X27, 0x76E000
	054 Move X28, 0x76F000
	055 Move X0, X25
	056 Move X9, [X8+456]
	057 Move X1, [X8+464]
	058 Move X27, [X27+3624]
	059 Move X28, [X28+432]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, [X27]
	062 Move W22, W0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move W0, W22
	069 Move W1, W31
	070 Call Blitter.GetBlitMaterial, X0, X1
	071 Move X9, [X27]
	072 Move X8, [X28]
	073 Move X22, X0
	074 Move X9, [X9+184]
	075 Move W10, [X8+224]
	076 Move X26, [X9+32]
	077 Compare W10, 0
	078 JumpIfNotEqual {81}
	079 Move X0, X8
	080 Call 0x1C17DFC
	081 Compare X26, 0
	082 JumpIfEqual {232}
	083 Move X8, [X28]
	084 Move X0, X26
	085 Move X2, X25
	086 Move X3, X31
	087 Move X8, [X8+184]
	088 Move W1, [X8+4]
	089 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	090 Move X8, [X27]
	091 Move X8, [X8+184]
	092 Move X0, [X8+32]
	093 Compare X0, 0
	094 JumpIfEqual {232}
	095 Move X8, [X28]
	096 NotImplemented "Instruction SCVTF not yet implemented."
	097 Move X2, X31
	098 Move X8, [X8+184]
	099 Move W1, [X8+16]
	100 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	101 Move X8, [X27]
	102 Move X8, [X8+184]
	103 Move X0, [X8+32]
	104 Compare X0, 0
	105 JumpIfEqual {232}
	106 Move X8, [X28]
	107 Move S0, 1
	108 Move S1, 1
	109 Move S2, W31
	110 Move X8, [X8+184]
	111 Move S3, W31
	112 Move X2, X31
	113 Move W1, [X8+8]
	114 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	115 Move X8, [X27]
	116 Move X8, [X8+184]
	117 Move X0, [X8+32]
	118 Compare X0, 0
	119 JumpIfEqual {232}
	120 Move X8, [X28]
	121 Move V0, V13
	122 Move V1, V12
	123 Move V2, V11
	124 Move X8, [X8+184]
	125 Move V3, V10
	126 Move X2, X31
	127 Move W1, [X8+12]
	128 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	129 Move X8, [X27]
	130 Move X8, [X8+184]
	131 Move X0, [X8+32]
	132 Compare X0, 0
	133 JumpIfEqual {232}
	134 Move X8, [X28]
	135 Move S2, W31
	136 Move S3, W31
	137 Move V0, V9
	138 Move X8, [X8+184]
	139 Move V1, V8
	140 Move X2, X31
	141 Move W1, [X8+20]
	142 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	143 Move X8, [X27]
	144 Move X8, [X8+184]
	145 Move X0, [X8+32]
	146 Compare X0, 0
	147 JumpIfEqual {232}
	148 Move X8, [X28]
	149 Move W2, W23
	150 Move X3, X31
	151 Move X8, [X8+184]
	152 Move W1, [X8+24]
	153 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	154 Compare X19, 0
	155 JumpIfEqual {232}
	156 Move X8, [X27]
	157 Move W3, [X21]
	158 Move X0, X19
	159 Move X1, X22
	160 Move X8, [X8+184]
	161 Move X4, X31
	162 Add X2, X8, 56
	163 Call CommandBuffer.SetKeyword, X0, X1, X2, X3
	164 Move W8, [X21]
	165 Compare W8, 0
	166 JumpIfEqual {195}
	167 Move X0, [X27]
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {173}
	171 Call 0x1C17DFC
	172 Move X0, [X27]
	173 Move X8, [X28]
	174 Move X9, [X0+184]
	175 Move X25, 0x76F000
	176 Move W10, [X8+224]
	177 Move X23, [X9+32]
	178 Move X25, [X25+944]
	179 Compare W10, 0
	180 JumpIfNotEqual {184}
	181 Move X0, X8
	182 Call 0x1C17DFC
	183 Move X8, [X28]
	184 Move X8, [X8+184]
	185 Move X1, [X25]
	186 Move X0, X21
	187 Move W24, [X8+28]
	188 Call Nullable`1<Vector4>.get_Value, X0
	189 Compare X23, 0
	190 JumpIfEqual {232}
	191 Move X0, X23
	192 Move W1, W24
	193 Move X2, X31
	194 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	195 Move X0, [X27]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 And W31, W20, 1
	201 Move W8, 21
	202 NotImplemented "Instruction CINC not yet implemented."
	203 Move X0, X19
	204 Move X1, X22
	205 Call Blitter.DrawQuad, X0, X1, X2
	206 Move X8, [X27]
	207 Move X0, X19
	208 Move X1, X22
	209 Move X20, [X31+128]
	210 Move X19, [X31+136]
	211 Move X8, [X8+184]
	212 Move X22, [X31+112]
	213 Move X21, [X31+120]
	214 Move X24, [X31+96]
	215 Move X23, [X31+104]
	216 Move X26, [X31+80]
	217 Move X25, [X31+88]
	218 Move X28, [X31+64]
	219 Move X27, [X31+72]
	220 Move X30, [X31+48]
	221 Move D9, [X31+32]
	222 Move D8, [X31+40]
	223 Move D11, [X31+16]
	224 Move D10, [X31+24]
	225 Add X2, X8, 56
	226 Move W3, W31
	227 Move X4, X31
	228 Move D13, [X31+144]
	229 Move D12, [X31+152]
	230 Call CommandBuffer.SetKeyword, X0, X1, X2, X3
	231 Return 
	232 Call 0x1C17F20

Method: System.Void BlitCubeToOctahedral2DQuadSingleChannel(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex)

Disassembly:
	0x039DAE6C ADD X2, X31, 0xC
	0x039DAE70 MOV W1, W21
	0x039DAE74 BL 0x2A0BC68
	0x039DAE78 TBZ X0, 0x0, 0x39DAE94
	0x039DAE7C LDR W8, [X31 + 0xC]
	0x039DAE80 CBZ W8, 0x39DAE20
	0x039DAE84 CMP W8, 0x1
	0x039DAE88 CSET W8, EQ
	0x039DAE8C AND W0, W8, W20, 0x0
	0x039DAE90 B 0x39DAE98
	0x039DAE94 MOV W0, W31
	0x039DAE98 LDP X20, X19, [X31 + 0x40]
	0x039DAE9C LDP X22, X21, [X31 + 0x30]
	0x039DAEA0 LDP X24, X23, [X31 + 0x20]
	0x039DAEA4 LDR X30, [X31 + 0x10]
	0x039DAEA8 ADD X31, X31, 0x50
	0x039DAEAC RET
	0x039DAEB0 BL 0x1C16F20
	0x039DAEB4 SUB X31, X31, 0x60
	0x039DAEB8 STR X30, [X31 + 0x10]
	0x039DAEBC STP X26, X25, [X31 + 0x20]
	0x039DAEC0 STP X24, X23, [X31 + 0x30]
	0x039DAEC4 STP X22, X21, [X31 + 0x40]
	0x039DAEC8 STP X20, X19, [X31 + 0x50]
	0x039DAECC ADRP X21, 0xA07000
	0x039DAED0 ADRP X19, 0x71B000
	0x039DAED4 LDRB W8, [X21 + 0xD75]
	0x039DAED8 LDR X19, [X19 + 0x130]
	0x039DAEDC MOV W23, W3
	0x039DAEE0 MOV X24, X2
	0x039DAEE4 MOV X25, X1
	0x039DAEE8 MOV X20, X0
	0x039DAEEC TBNZ X8, 0x0, 0x39DAF34
	0x039DAEF0 ADRP X0, 0x723000
	0x039DAEF4 LDR X0, [X0 + 0x870]
	0x039DAEF8 BL 0x1C16CF4
	0x039DAEFC ADRP X0, 0x743000
	0x039DAF00 LDR X0, [X0 + 0x8B0]
	0x039DAF04 BL 0x1C16CF4
	0x039DAF08 ADRP X0, 0x719000
	0x039DAF0C LDR X0, [X0 + 0x5A8]
	0x039DAF10 BL 0x1C16CF4
	0x039DAF14 ADRP X0, 0x719000
	0x039DAF18 LDR X0, [X0 + 0x598]
	0x039DAF1C BL 0x1C16CF4
	0x039DAF20 ADRP X0, 0x71B000
	0x039DAF24 LDR X0, [X0 + 0x130]
	0x039DAF28 BL 0x1C16CF4
	0x039DAF2C MOVZ W8, 0x1
	0x039DAF30 STRB W8, [X21 + 0xD75]
	0x039DAF34 LDR X8, [X19]
	0x039DAF38 STR X31, [X31 + 0x18]
	0x039DAF3C STR W31, [X31 + 0xC]
	0x039DAF40 CBZ X25, 0x39DAF58
	0x039DAF44 LDR X9, [X25]
	0x039DAF48 LDRB W10, [X8 + 0x130]
	0x039DAF4C LDRB W11, [X9 + 0x130]
	0x039DAF50 CMP W11, W10
	0x039DAF54 B.CS 0x39DAF60
	0x039DAF58 MOV X22, X31
	0x039DAF5C B 0x39DAF74
	0x039DAF60 LDR X9, [X9 + 0xC8]
	0x039DAF64 ADD X9, X9, X10, 0x3, LSL
	0x039DAF68 LDUR X9, [X9 - 0x8]
	0x039DAF6C CMP X9, X8
	0x039DAF70 CSEL X22, X25, X31, EQ
	0x039DAF74 ADRP X26, 0x719000
	0x039DAF78 LDR X26, [X26 + 0x598]
	0x039DAF7C CBZ X24, 0x39DAF94
	0x039DAF80 LDR X9, [X24]
	0x039DAF84 LDRB W10, [X8 + 0x130]
	0x039DAF88 LDRB W11, [X9 + 0x130]
	0x039DAF8C CMP W11, W10
	0x039DAF90 B.CS 0x39DAF9C
	0x039DAF94 MOV X21, X31
	0x039DAF98 B 0x39DAFB0
	0x039DAF9C LDR X9, [X9 + 0xC8]
	0x039DAFA0 ADD X9, X9, X10, 0x3, LSL
	0x039DAFA4 LDUR X9, [X9 - 0x8]
	0x039DAFA8 CMP X9, X8
	0x039DAFAC CSEL X21, X24, X31, EQ
	0x039DAFB0 MOV X1, X25
	0x039DAFB4 MOV X2, X24
	0x039DAFB8 BL 0x39DAA8C
	0x039DAFBC MOV X1, X25
	0x039DAFC0 MOV X2, X24
	0x039DAFC4 MOV W19, W0
	0x039DAFC8 BL 0x39DAA14
	0x039DAFCC LDR X8, [X26]
	0x039DAFD0 MOV W24, W0
	0x039DAFD4 LDR W9, [X8 + 0xE0]
	0x039DAFD8 CBNZ W9, 0x39DAFE4
	0x039DAFDC MOV X0, X8
	0x039DAFE0 BL 0x1C16DFC
	0x039DAFE4 ADRP X25, 0x723000
	0x039DAFE8 LDR X25, [X25 + 0x870]
	0x039DAFEC MOV X0, X22
	0x039DAFF0 MOV X1, X31
	0x039DAFF4 MOV X2, X31
	0x039DAFF8 BL 0x3C354F8
	0x039DAFFC TBNZ X0, 0x0, 0x39DB024
	0x039DB000 LDR X0, [X26]
	0x039DB004 LDR W8, [X0 + 0xE0]
	0x039DB008 CBNZ W8, 0x39DB010
	0x039DB00C BL 0x1C16DFC
	0x039DB010 MOV X0, X21
	0x039DB014 MOV X1, X31
	0x039DB018 MOV X2, X31
	0x039DB01C BL 0x3C354F8
	0x039DB020 TBZ X0, 0x0, 0x39DB1A8
	0x039DB024 LDR X0, [X20 + 0x38]
	0x039DB028 CBZ X0, 0x39DB2BC
	0x039DB02C LDR X3, [X25]
	0x039DB030 ADD X2, X31, 0x1C
	0x039DB034 MOV W1, W19
	0x039DB038 BL 0x2A0BC68
	0x039DB03C TBZ X0, 0x0, 0x39DB180
	0x039DB040 LDR X0, [X26]
	0x039DB044 LDR W8, [X0 + 0xE0]
	0x039DB048 CBNZ W8, 0x39DB050
	0x039DB04C BL 0x1C16DFC
	0x039DB050 MOV X0, X22
	0x039DB054 MOV X1, X31
	0x039DB058 MOV X2, X31
	0x039DB05C BL 0x3C354F8
	0x039DB060 TBZ X0, 0x0, 0x39DB0EC
	0x039DB064 LDR X0, [X26]
	0x039DB068 LDR W8, [X0 + 0xE0]
	0x039DB06C CBNZ W8, 0x39DB074
	0x039DB070 BL 0x1C16DFC
	0x039DB074 MOV X0, X21
	0x039DB078 MOV X1, X31
	0x039DB07C MOV X2, X31
	0x039DB080 BL 0x3C354F8
	0x039DB084 TBZ X0, 0x0, 0x39DB0EC
	0x039DB088 CBZ X22, 0x39DB2BC
	0x039DB08C MOV X0, X22
	0x039DB090 MOV X1, X31
	0x039DB094 BL 0x3C1AD38
	0x039DB098 CBZ X21, 0x39DB2BC
	0x039DB09C MOV W23, W0
	0x039DB0A0 MOV X0, X21
	0x039DB0A4 MOV X1, X31
	0x039DB0A8 BL 0x3C1AD38
	0x039DB0AC ADRP X25, 0x718000
	0x039DB0B0 LDR X25, [X25 + 0x5A8]
	0x039DB0B4 MOV W24, W0
	0x039DB0B8 LDR X8, [X25]
	0x039DB0BC LDR W9, [X8 + 0xE0]
	0x039DB0C0 CBNZ W9, 0x39DB0CC
	0x039DB0C4 MOV X0, X8
	0x039DB0C8 BL 0x1C16DFC
	0x039DB0CC MOV W0, W23
	0x039DB0D0 MOV W1, W24
	0x039DB0D4 MOV X2, X31
	0x039DB0D8 BL 0x337EEEC

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xA08000
	014 Move W8, [X22+3551]
	015 Move W21, W2
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move X20, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x77A000
	027 Move X0, [X0+432]
	028 Call 0x1C17CF4
	029 Move X0, 0x779000
	030 Move X0, [X0+3624]
	031 Call 0x1C17CF4
	032 Move X0, 0x77A000
	033 Move X0, [X0+144]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+3551], W8
	037 Compare X20, 0
	038 JumpIfEqual {184}
	039 Move X8, [X20]
	040 Move X23, 0x77A000
	041 Move X0, X20
	042 Move X9, [X8+376]
	043 Move X1, [X8+384]
	044 Move X23, [X23+144]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X23]
	047 Move W22, W0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X24, 0x779000
	054 Move X24, [X24+3624]
	055 Move W0, W22
	056 Move X1, X31
	057 Call GraphicsFormatUtility.GetComponentCount, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X20]
	060 Move X0, X20
	061 Move X9, [X8+376]
	062 Move X1, [X8+384]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X23]
	065 Move W22, W0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move W0, W22
	072 Move X1, X31
	073 Call GraphicsFormatUtility.IsAlphaOnlyFormat, X0
	074 Move X8, [X20]
	075 And W31, W0, 1
	076 Move X0, X20
	077 Move X9, [X8+376]
	078 Move X1, [X8+384]
	079 Move W8, 15
	080 NotImplemented "Instruction CINC not yet implemented."
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X23]
	083 Move W22, W0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move W0, W22
	090 Move X1, X31
	091 Call GraphicsFormatUtility.GetSwizzleR, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, 17
	094 NotImplemented "Instruction CSEL not yet implemented."
	095 Move W22, 15
	096 Move X0, [X24]
	097 Move X25, 0x77A000
	098 Move W8, [X0+224]
	099 Move X25, [X25+432]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X24]
	104 Move X8, [X25]
	105 Move X9, [X0+184]
	106 Move W10, [X8+224]
	107 Move X23, [X9+32]
	108 Compare W10, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Compare X23, 0
	113 JumpIfEqual {184}
	114 Move X8, [X25]
	115 Move X0, X23
	116 Move X2, X20
	117 Move X3, X31
	118 Move X8, [X8+184]
	119 Move W1, [X8+4]
	120 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	121 Move X8, [X24]
	122 Move X8, [X8+184]
	123 Move X0, [X8+32]
	124 Compare X0, 0
	125 JumpIfEqual {184}
	126 Move X8, [X25]
	127 NotImplemented "Instruction SCVTF not yet implemented."
	128 Move X2, X31
	129 Move X8, [X8+184]
	130 Move W1, [X8+16]
	131 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	132 Move X8, [X24]
	133 Move X8, [X8+184]
	134 Move X0, [X8+32]
	135 Compare X0, 0
	136 JumpIfEqual {184}
	137 Move X8, [X25]
	138 Move S0, 1
	139 Move S1, 1
	140 Move S2, W31
	141 Move X8, [X8+184]
	142 Move S3, W31
	143 Move X2, X31
	144 Move W1, [X8+8]
	145 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	146 Move X8, [X24]
	147 Move X8, [X8+184]
	148 Move X0, [X8+32]
	149 Compare X0, 0
	150 JumpIfEqual {184}
	151 Move X8, [X25]
	152 Move V0, V11
	153 Move V1, V10
	154 Move V2, V9
	155 Move X8, [X8+184]
	156 Move V3, V8
	157 Move X2, X31
	158 Move W1, [X8+12]
	159 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	160 Move X8, [X20]
	161 Move X0, X20
	162 Move X9, [X8+456]
	163 Move X1, [X8+464]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move W1, W31
	166 Call Blitter.GetBlitMaterial, X0, X1
	167 Move X1, X0
	168 Move X0, X19
	169 Move W2, W22
	170 Move X20, [X31+80]
	171 Move X19, [X31+88]
	172 Move X22, [X31+64]
	173 Move X21, [X31+72]
	174 Move X24, [X31+48]
	175 Move X23, [X31+56]
	176 Move X30, [X31+32]
	177 Move X25, [X31+40]
	178 Move D9, [X31+16]
	179 Move D8, [X31+24]
	180 Move D11, [X31+96]
	181 Move D10, [X31+104]
	182 Call Blitter.DrawQuad, X0, X1, X2
	183 Return 
	184 Call 0x1C17F20

Method: System.Void BlitQuadSingleChannel(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture source, UnityEngine.Vector4 scaleBiasTex, UnityEngine.Vector4 scaleBiasRT, System.Int32 mipLevelTex)

Disassembly:
	0x039DABDC LDRB W8, [X21 + 0xD73]
	0x039DABE0 MOV W19, W1
	0x039DABE4 MOV X20, X0
	0x039DABE8 TBNZ X8, 0x0, 0x39DAC00
	0x039DABEC ADRP X0, 0x779000
	0x039DABF0 LDR X0, [X0 + 0x1C8]
	0x039DABF4 BL 0x1C16CF4
	0x039DABF8 MOVZ W8, 0x1
	0x039DABFC STRB W8, [X21 + 0xD73]
	0x039DAC00 STP X31, X31, [X31 + 0x8]
	0x039DAC04 STR X31, [X31 + 0x18]
	0x039DAC08 LDR X0, [X20 + 0x30]
	0x039DAC0C CBZ X0, 0x39DAC3C
	0x039DAC10 ADRP X8, 0x779000
	0x039DAC14 LDR X8, [X8 + 0x1C8]
	0x039DAC18 ADD X2, X31, 0x8
	0x039DAC1C MOV W1, W19
	0x039DAC20 LDR X3, [X8]
	0x039DAC24 BL 0x29FCBA4
	0x039DAC28 LDR X0, [X31 + 0x18]
	0x039DAC2C LDP X20, X19, [X31 + 0x30]
	0x039DAC30 LDP X30, X21, [X31 + 0x20]
	0x039DAC34 ADD X31, X31, 0x40
	0x039DAC38 RET
	0x039DAC3C BL 0x1C16F20
	0x039DAC40 SUB X31, X31, 0x50
	0x039DAC44 STR X30, [X31 + 0x10]
	0x039DAC48 STP X24, X23, [X31 + 0x20]
	0x039DAC4C STP X22, X21, [X31 + 0x30]
	0x039DAC50 STP X20, X19, [X31 + 0x40]
	0x039DAC54 ADRP X21, 0xA07000
	0x039DAC58 LDRB W8, [X21 + 0xD74]
	0x039DAC5C MOV W20, W2
	0x039DAC60 MOV X23, X1
	0x039DAC64 MOV X19, X0
	0x039DAC68 TBNZ X8, 0x0, 0x39DACB0
	0x039DAC6C ADRP X0, 0x741000
	0x039DAC70 LDR X0, [X0 + 0x8F8]
	0x039DAC74 BL 0x1C16CF4
	0x039DAC78 ADRP X0, 0x723000
	0x039DAC7C LDR X0, [X0 + 0x870]
	0x039DAC80 BL 0x1C16CF4
	0x039DAC84 ADRP X0, 0x743000
	0x039DAC88 LDR X0, [X0 + 0x8B0]
	0x039DAC8C BL 0x1C16CF4
	0x039DAC90 ADRP X0, 0x719000
	0x039DAC94 LDR X0, [X0 + 0x598]
	0x039DAC98 BL 0x1C16CF4
	0x039DAC9C ADRP X0, 0x71B000
	0x039DACA0 LDR X0, [X0 + 0x130]
	0x039DACA4 BL 0x1C16CF4
	0x039DACA8 MOVZ W8, 0x1
	0x039DACAC STRB W8, [X21 + 0xD74]
	0x039DACB0 STR X31, [X31 + 0x18]
	0x039DACB4 STR W31, [X31 + 0xC]
	0x039DACB8 CBZ X23, 0x39DAEB0
	0x039DACBC ADRP X8, 0x71B000
	0x039DACC0 LDR X8, [X8 + 0x130]
	0x039DACC4 LDR X9, [X23]
	0x039DACC8 ADRP X21, 0x741000
	0x039DACCC LDR X8, [X8]
	0x039DACD0 LDRB W11, [X9 + 0x130]
	0x039DACD4 LDRB W10, [X8 + 0x130]
	0x039DACD8 LDR X21, [X21 + 0x8F8]
	0x039DACDC CMP W11, W10
	0x039DACE0 B.CS 0x39DACEC
	0x039DACE4 MOV X22, X31
	0x039DACE8 B 0x39DAD00
	0x039DACEC LDR X9, [X9 + 0xC8]
	0x039DACF0 ADD X9, X9, X10, 0x3, LSL
	0x039DACF4 LDUR X9, [X9 - 0x8]
	0x039DACF8 CMP X9, X8
	0x039DACFC CSEL X22, X23, X31, EQ
	0x039DAD00 ADRP X24, 0x719000
	0x039DAD04 LDR X24, [X24 + 0x598]
	0x039DAD08 MOV X0, X23
	0x039DAD0C MOV X1, X31
	0x039DAD10 BL 0x3C385F8
	0x039DAD14 LDR X8, [X21]
	0x039DAD18 MOV W21, W0
	0x039DAD1C LDR W9, [X8 + 0xE0]
	0x039DAD20 CBNZ W9, 0x39DAD2C
	0x039DAD24 MOV X0, X8
	0x039DAD28 BL 0x1C16DFC
	0x039DAD2C MOV X0, X23
	0x039DAD30 BL 0x39DA35C
	0x039DAD34 LDR X8, [X24]
	0x039DAD38 MOV W23, W0
	0x039DAD3C LDR W9, [X8 + 0xE0]
	0x039DAD40 CBNZ W9, 0x39DAD4C
	0x039DAD44 MOV X0, X8
	0x039DAD48 BL 0x1C16DFC
	0x039DAD4C MOV X0, X22
	0x039DAD50 MOV X1, X31
	0x039DAD54 MOV X2, X31
	0x039DAD58 BL 0x3C354F8
	0x039DAD5C TBZ X0, 0x0, 0x39DADD0
	0x039DAD60 LDR X0, [X19 + 0x38]
	0x039DAD64 CBZ X0, 0x39DAEB0
	0x039DAD68 ADRP X8, 0x723000
	0x039DAD6C LDR X8, [X8 + 0x870]
	0x039DAD70 ADD X2, X31, 0x1C
	0x039DAD74 MOV W1, W21
	0x039DAD78 LDR X3, [X8]
	0x039DAD7C BL 0x2A0BC68
	0x039DAD80 TBZ X0, 0x0, 0x39DAE28
	0x039DAD84 CBZ X22, 0x39DAEB0
	0x039DAD88 MOV X0, X22
	0x039DAD8C MOV X1, X31
	0x039DAD90 BL 0x3C1AD38
	0x039DAD94 LDRSW X8, [X31 + 0x1C]
	0x039DAD98 MOV W9, W0
	0x039DAD9C CMP X9, X8
	0x039DADA0 B.EQ 0x39DAE94
	0x039DADA4 LDR X19, [X19 + 0x38]
	0x039DADA8 MOV X0, X22
	0x039DADAC MOV X1, X31
	0x039DADB0 BL 0x3C1AD38
	0x039DADB4 CBZ X19, 0x39DAEB0
	0x039DADB8 ADRP X8, 0x743000
	0x039DADBC LDR X8, [X8 + 0x8B0]
	0x039DADC0 MOV W2, W0
	0x039DADC4 MOV X0, X19
	0x039DADC8 MOV W1, W21
	0x039DADCC B 0x39DAE18
	0x039DADD0 LDR X0, [X19 + 0x40]
	0x039DADD4 CBZ X0, 0x39DAEB0
	0x039DADD8 ADRP X22, 0x723000
	0x039DADDC LDR X22, [X22 + 0x870]
	0x039DADE0 ADD X2, X31, 0x18
	0x039DADE4 MOV W1, W21
	0x039DADE8 LDR X3, [X22]
	0x039DADEC BL 0x2A0BC68
	0x039DADF0 LDR W8, [X31 + 0x18]
	0x039DADF4 CMP W8, W23
	0x039DADF8 B.EQ 0x39DAE60
	0x039DADFC TBZ X0, 0x0, 0x39DAE60
	0x039DAE00 LDR X0, [X19 + 0x40]
	0x039DAE04 CBZ X0, 0x39DAEB0
	0x039DAE08 ADRP X8, 0x743000
	0x039DAE0C LDR X8, [X8 + 0x8B0]
	0x039DAE10 MOV W1, W21
	0x039DAE14 MOV W2, W23
	0x039DAE18 LDR X3, [X8]
	0x039DAE1C BL 0x2A0A330
	0x039DAE20 MOVZ W0, 0x1
	0x039DAE24 B 0x39DAE98
	0x039DAE28 CBZ X22, 0x39DAEB0
	0x039DAE2C LDR X19, [X19 + 0x38]
	0x039DAE30 MOV X0, X22
	0x039DAE34 MOV X1, X31
	0x039DAE38 BL 0x3C1AD38
	0x039DAE3C CBZ X19, 0x39DAEB0
	0x039DAE40 ADRP X8, 0x743000
	0x039DAE44 LDR X8, [X8 + 0x8B0]
	0x039DAE48 MOV W2, W0
	0x039DAE4C MOV X0, X19
	0x039DAE50 MOV W1, W21
	0x039DAE54 LDR X3, [X8]
	0x039DAE58 BL 0x2A0A330
	0x039DAE5C B 0x39DAE94
	0x039DAE60 LDR X0, [X19 + 0x38]
	0x039DAE64 CBZ X0, 0x39DAEB0
	0x039DAE68 LDR X3, [X22]

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Move X22, 0xA08000
	018 Move W8, [X22+3552]
	019 Move W21, W2
	020 Move V8, V7
	021 Move V9, V6
	022 Move V10, V5
	023 Move V11, V4
	024 Move V12, V3
	025 Move V13, V2
	026 Move V14, V1
	027 Move V15, V0
	028 Move X20, X1
	029 Move X19, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {45}
	034 Move X0, 0x77A000
	035 Move X0, [X0+432]
	036 Call 0x1C17CF4
	037 Move X0, 0x779000
	038 Move X0, [X0+3624]
	039 Call 0x1C17CF4
	040 Move X0, 0x77A000
	041 Move X0, [X0+144]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+3552], W8
	045 Compare X20, 0
	046 JumpIfEqual {196}
	047 Move X8, [X20]
	048 Move X23, 0x77A000
	049 Move X0, X20
	050 Move X9, [X8+376]
	051 Move X1, [X8+384]
	052 Move X23, [X23+144]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X23]
	055 Move W22, W0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X24, 0x779000
	062 Move X24, [X24+3624]
	063 Move W0, W22
	064 Move X1, X31
	065 Call GraphicsFormatUtility.GetComponentCount, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X20]
	068 Move X0, X20
	069 Move X9, [X8+376]
	070 Move X1, [X8+384]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X23]
	073 Move W22, W0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move W0, W22
	080 Move X1, X31
	081 Call GraphicsFormatUtility.IsAlphaOnlyFormat, X0
	082 Move X8, [X20]
	083 And W31, W0, 1
	084 Move X0, X20
	085 Move X9, [X8+376]
	086 Move X1, [X8+384]
	087 Move W8, 18
	088 NotImplemented "Instruction CINC not yet implemented."
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, [X23]
	091 Move W22, W0
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move W0, W22
	098 Move X1, X31
	099 Call GraphicsFormatUtility.GetSwizzleR, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W8, 20
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Move W22, 18
	104 Move X0, [X24]
	105 Move X25, 0x77A000
	106 Move W8, [X0+224]
	107 Move X25, [X25+432]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X24]
	112 Move X8, [X25]
	113 Move X9, [X0+184]
	114 Move W10, [X8+224]
	115 Move X23, [X9+32]
	116 Compare W10, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Compare X23, 0
	121 JumpIfEqual {196}
	122 Move X8, [X25]
	123 Move X0, X23
	124 Move X2, X20
	125 Move X3, X31
	126 Move X8, [X8+184]
	127 Move W1, [X8]
	128 Call MaterialPropertyBlock.SetTexture, X0, X1, X2
	129 Move X8, [X24]
	130 Move X8, [X8+184]
	131 Move X0, [X8+32]
	132 Compare X0, 0
	133 JumpIfEqual {196}
	134 Move X8, [X25]
	135 Move V0, V15
	136 Move V1, V14
	137 Move V2, V13
	138 Move X8, [X8+184]
	139 Move V3, V12
	140 Move X2, X31
	141 Move W1, [X8+8]
	142 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	143 Move X8, [X24]
	144 Move X8, [X8+184]
	145 Move X0, [X8+32]
	146 Compare X0, 0
	147 JumpIfEqual {196}
	148 Move X8, [X25]
	149 Move V0, V11
	150 Move V1, V10
	151 Move V2, V9
	152 Move X8, [X8+184]
	153 Move V3, V8
	154 Move X2, X31
	155 Move W1, [X8+12]
	156 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	157 Move X8, [X24]
	158 Move X8, [X8+184]
	159 Move X0, [X8+32]
	160 Compare X0, 0
	161 JumpIfEqual {196}
	162 Move X8, [X25]
	163 NotImplemented "Instruction SCVTF not yet implemented."
	164 Move X2, X31
	165 Move X8, [X8+184]
	166 Move W1, [X8+16]
	167 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	168 Move X8, [X20]
	169 Move X0, X20
	170 Move X9, [X8+456]
	171 Move X1, [X8+464]
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move W1, W31
	174 Call Blitter.GetBlitMaterial, X0, X1
	175 Move X1, X0
	176 Move X0, X19
	177 Move W2, W22
	178 Move X20, [X31+112]
	179 Move X19, [X31+120]
	180 Move X22, [X31+96]
	181 Move X21, [X31+104]
	182 Move X24, [X31+80]
	183 Move X23, [X31+88]
	184 Move X30, [X31+64]
	185 Move X25, [X31+72]
	186 Move D9, [X31+48]
	187 Move D8, [X31+56]
	188 Move D11, [X31+32]
	189 Move D10, [X31+40]
	190 Move D13, [X31+16]
	191 Move D12, [X31+24]
	192 Move D15, [X31+128]
	193 Move D14, [X31+136]
	194 Call Blitter.DrawQuad, X0, X1, X2
	195 Return 
	196 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039E5280 FMAXNM S1, S1, S2
	0x039E5284 FDIV S5, S8, S3
	0x039E5288 FDIV S2, S8, S4
	0x039E528C FDIV S1, S8, S1
	0x039E5290 MOV X0, X31
	0x039E5294 STP S2, S5, [X31 + 0x24]
	0x039E5298 STR S1, [X31 + 0x20]
	0x039E529C BL 0x3C25A10
	0x039E52A0 FMUL S15, S0, S13
	0x039E52A4 MOV V0.16B, V11.16B
	0x039E52A8 MOV X0, X31
	0x039E52AC BL 0x3C25A10
	0x039E52B0 FMUL S11, S0, S13
	0x039E52B4 MOV V0.16B, V12.16B
	0x039E52B8 MOV X0, X31
	0x039E52BC BL 0x3C25A10
	0x039E52C0 LDR V1, [X31 + 0x1C]
	0x039E52C4 FMUL S0, S0, S13
	0x039E52C8 FMUL S2, S11, S10
	0x039E52CC FADD S3, S14, S8
	0x039E52D0 FMUL S1, S15, S1
	0x039E52D4 FADD S1, S1, S2
	0x039E52D8 FMUL S2, S0, S9
	0x039E52DC FADD S1, S1, S2
	0x039E52E0 FSUB S2, S15, S1
	0x039E52E4 FSUB S5, S11, S1
	0x039E52E8 FSUB S0, S0, S1
	0x039E52EC MOVI V4.2D, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x9FD000
	006 Move X21, 0x76C000
	007 Move X20, 0x76E000
	008 Move W8, [X19+3553]
	009 Move X21, [X21+1424]
	010 Move X20, [X20+3624]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x76E000
	016 Move X0, [X0+3624]
	017 Call 0x1C17CF4
	018 Move X0, 0x76C000
	019 Move X0, [X0+1424]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3553], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call MaterialPropertyBlock..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+32], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

Method: UnityEngine.Vector3[] <Initialize>g__GetFullScreenTriangleVertexPosition|9_0(System.Single z)

Disassembly:
	0x039E2A18 BL 0x3C4D998
	0x039E2A1C LDR X0, [X23]
	0x039E2A20 LDR W8, [X0 + 0xE0]
	0x039E2A24 CBNZ W8, 0x39E2A2C
	0x039E2A28 BL 0x1C16DFC
	0x039E2A2C MOV X0, X21
	0x039E2A30 MOV X1, X20
	0x039E2A34 MOV W2, W19
	0x039E2A38 BL 0x39E1F00
	0x039E2A3C LDP X20, X19, [X31 + 0xC0]
	0x039E2A40 LDP X22, X21, [X31 + 0xB0]
	0x039E2A44 LDP X24, X23, [X31 + 0xA0]
	0x039E2A48 LDP X30, X25, [X31 + 0x90]
	0x039E2A4C ADD X31, X31, 0xD0
	0x039E2A50 RET
	0x039E2A54 BL 0x1C16F20
	0x039E2A58 SUB X31, X31, 0xE0
	0x039E2A5C STP X30, X27, [X31 + 0x90]
	0x039E2A60 STP X26, X25, [X31 + 0xA0]
	0x039E2A64 STP X24, X23, [X31 + 0xB0]
	0x039E2A68 STP X22, X21, [X31 + 0xC0]
	0x039E2A6C STP X20, X19, [X31 + 0xD0]
	0x039E2A70 ADRP X27, 0x9FF000
	0x039E2A74 ADRP X26, 0x771000
	0x039E2A78 LDRB W8, [X27 + 0xDD0]
	0x039E2A7C LDR X26, [X26 + 0x1B0]
	0x039E2A80 MOV W19, W6
	0x039E2A84 MOV X20, X5
	0x039E2A88 MOV W22, W4
	0x039E2A8C MOV W23, W3
	0x039E2A90 MOV X24, X2
	0x039E2A94 MOV X25, X1
	0x039E2A98 MOV X21, X0
	0x039E2A9C TBNZ X8, 0x0, 0x39E2AC0
	0x039E2AA0 ADRP X0, 0x771000
	0x039E2AA4 LDR X0, [X0 + 0x1B0]
	0x039E2AA8 BL 0x1C16CF4
	0x039E2AAC ADRP X0, 0x770000
	0x039E2AB0 LDR X0, [X0 + 0xE28]
	0x039E2AB4 BL 0x1C16CF4
	0x039E2AB8 MOVZ W8, 0x1
	0x039E2ABC STRB W8, [X27 + 0xDD0]
	0x039E2AC0 LDR X0, [X26]
	0x039E2AC4 LDR W8, [X0 + 0xE0]
	0x039E2AC8 CBNZ W8, 0x39E2AD4

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA00000
	006 Move X20, 0x714000
	007 Move W8, [X19+3554]
	008 Move X20, [X20+2480]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x714000
	015 Move X0, [X0+2480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3554], W8
	019 Move X0, [X20]
	020 Move W1, 3
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {49}
	024 Move W10, [X0+24]
	025 Move W8, W31
	026 Move X9, X31
	027 Add X11, X0, 40
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move V1, 0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move S2, W8
	032 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	033 And V2, V2, V0
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 Add V2, V2, V2
	036 Add X9, X9, 1
	037 Add V2, V2, V1
	038 Move [X11], S8
	039 Add W8, W8, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X11-8], D2
	042 Add X11, X11, 12
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return X0
	048 Call 0x1C17F28
	049 Call 0x1C17F20

Method: UnityEngine.Vector2[] <Initialize>g__GetFullScreenTriangleTexCoord|9_1()

Disassembly:
	0x039E2ACC BL 0x1C16DFC
	0x039E2AD0 LDR X0, [X26]
	0x039E2AD4 LDR X8, [X0 + 0xB8]
	0x039E2AD8 LDR X9, [X25 + 0x20]
	0x039E2ADC LDP V1, V0, [X25]
	0x039E2AE0 LDR W1, [X8]
	0x039E2AE4 STR X9, [X31 + 0x80]
	0x039E2AE8 STP V1, V0, [X31 + 0x60]
	0x039E2AEC CBZ X21, 0x39E2B7C
	0x039E2AF0 LDP V0, V1, [X31 + 0x60]
	0x039E2AF4 LDR X8, [X31 + 0x80]
	0x039E2AF8 ADRP X25, 0x770000
	0x039E2AFC LDR X25, [X25 + 0xE28]
	0x039E2B00 ADD X2, X31, 0x30
	0x039E2B04 MOV X0, X21
	0x039E2B08 MOV X3, X31
	0x039E2B0C STP V0, V1, [X31 + 0x30]
	0x039E2B10 STR X8, [X31 + 0x50]
	0x039E2B14 BL 0x3C4FCFC
	0x039E2B18 LDR X8, [X24 + 0x20]
	0x039E2B1C LDP V1, V0, [X24]
	0x039E2B20 ADD X1, X31, 0x0
	0x039E2B24 MOV X0, X21
	0x039E2B28 MOV W2, W23
	0x039E2B2C MOV W3, W22
	0x039E2B30 MOV X4, X31
	0x039E2B34 STR X8, [X31 + 0x20]
	0x039E2B38 STP V1, V0, [X31]
	0x039E2B3C BL 0x3C4DAAC
	0x039E2B40 LDR X0, [X25]
	0x039E2B44 LDR W8, [X0 + 0xE0]
	0x039E2B48 CBNZ W8, 0x39E2B50
	0x039E2B4C BL 0x1C16DFC
	0x039E2B50 MOV X0, X21
	0x039E2B54 MOV X1, X20
	0x039E2B58 MOV W2, W19
	0x039E2B5C BL 0x39E1F00
	0x039E2B60 LDP X20, X19, [X31 + 0xD0]
	0x039E2B64 LDP X22, X21, [X31 + 0xC0]
	0x039E2B68 LDP X24, X23, [X31 + 0xB0]
	0x039E2B6C LDP X26, X25, [X31 + 0xA0]
	0x039E2B70 LDP X30, X27, [X31 + 0x90]
	0x039E2B74 ADD X31, X31, 0xE0
	0x039E2B78 RET
	0x039E2B7C BL 0x1C16F20
	0x039E2B80 STP D11, D10, [X31 - 0x50]!
	0x039E2B84 STP D9, D8, [X31 + 0x10]
	0x039E2B88 STP X30, X23, [X31 + 0x20]
	0x039E2B8C STP X22, X21, [X31 + 0x30]
	0x039E2B90 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA00000
	007 Move X20, 0x76C000
	008 Move W8, [X19+3555]
	009 Move X20, [X20+2696]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x76C000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3555], W8
	019 Move X0, [X20]
	020 Move W1, 3
	021 Call 0x1C17D6C
	022 Move X19, X0
	023 Move X20, X31
	024 Move X21, X31
	025 Move S8, 1
	026 Move X0, X31
	027 Call SystemInfo.get_graphicsUVStartsAtTop
	028 And W8, W21, 2
	029 NotImplemented "Instruction SCVTF not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {39}
	034 Compare X19, 0
	035 JumpIfEqual {58}
	036 Move W8, [X19+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract S0, S8, S0
	039 Compare X19, 0
	040 JumpIfEqual {58}
	041 Move W8, [X19+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 And W8, W20, 2
	044 Add X21, X21, 1
	045 Add X9, X19, X20
	046 NotImplemented "Instruction SCVTF not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X20, X20, 2
	049 Move [X9+32], S1
	050 Move [X9+40], S0
	051 Move X0, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Move V8, [X31+48]
	057 Return X0
	058 Call 0x1C17F20
	059 Call 0x1C17F28

Method: UnityEngine.Vector3[] <Initialize>g__GetQuadVertexPosition|9_2(System.Single z)

Disassembly:
	0x039E2B94 ADRP X23, 0x9FF000
	0x039E2B98 ADRP X22, 0x770000
	0x039E2B9C LDRB W8, [X23 + 0xDD1]
	0x039E2BA0 LDR X22, [X22 + 0xE28]
	0x039E2BA4 MOV W19, W2
	0x039E2BA8 MOV X20, X1
	0x039E2BAC MOV V8.16B, V3.16B
	0x039E2BB0 MOV V9.16B, V2.16B
	0x039E2BB4 MOV V10.16B, V1.16B
	0x039E2BB8 MOV V11.16B, V0.16B
	0x039E2BBC MOV X21, X0
	0x039E2BC0 TBNZ X8, 0x0, 0x39E2BE4
	0x039E2BC4 ADRP X0, 0x771000
	0x039E2BC8 LDR X0, [X0 + 0x1B0]
	0x039E2BCC BL 0x1C16CF4
	0x039E2BD0 ADRP X0, 0x770000
	0x039E2BD4 LDR X0, [X0 + 0xE28]
	0x039E2BD8 BL 0x1C16CF4
	0x039E2BDC MOVZ W8, 0x1
	0x039E2BE0 STRB W8, [X23 + 0xDD1]
	0x039E2BE4 LDR X0, [X22]
	0x039E2BE8 ADRP X23, 0x771000
	0x039E2BEC LDR W8, [X0 + 0xE0]
	0x039E2BF0 LDR X23, [X23 + 0x1B0]
	0x039E2BF4 CBNZ W8, 0x39E2C00
	0x039E2BF8 BL 0x1C16DFC
	0x039E2BFC LDR X0, [X22]
	0x039E2C00 LDR X8, [X23]
	0x039E2C04 LDR X9, [X0 + 0xB8]
	0x039E2C08 LDR W10, [X8 + 0xE0]
	0x039E2C0C LDR X22, [X9 + 0x20]
	0x039E2C10 CBNZ W10, 0x39E2C1C
	0x039E2C14 MOV X0, X8
	0x039E2C18 BL 0x1C16DFC
	0x039E2C1C CBZ X22, 0x39E2C6C
	0x039E2C20 LDR X8, [X23]
	0x039E2C24 MOV X0, X22
	0x039E2C28 MOV V0.16B, V11.16B
	0x039E2C2C MOV V1.16B, V10.16B
	0x039E2C30 LDR X8, [X8 + 0xB8]
	0x039E2C34 MOV V2.16B, V9.16B
	0x039E2C38 MOV V3.16B, V8.16B

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA00000
	006 Move X20, 0x714000
	007 Move W8, [X19+3556]
	008 Move X20, [X20+2480]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x714000
	015 Move X0, [X0+2480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3556], W8
	019 Move X0, [X20]
	020 Move W1, 4
	021 Call 0x1C17D6C
	022 Compare X0, 0
	023 JumpIfEqual {49}
	024 Move W9, [X0+24]
	025 Move X8, X31
	026 Add X10, X0, 40
	027 Move W11, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract W13, W11, W8
	030 Move X12, X8
	031 ShiftRight X12, 1
	032 And X12, X12, 0x7FFFFFFF
	033 And W13, W13, 1
	034 Add X8, X8, 1
	035 NotImplemented "Instruction UCVTF not yet implemented."
	036 NotImplemented "Instruction UCVTF not yet implemented."
	037 Subtract W11, W11, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X10-8], S0
	040 Move [X10-4], S1
	041 Move [X10+4], S8
	042 Add X10, X10, 12
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+8]
	046 Move V8, [X31+32]
	047 Return X0
	048 Call 0x1C17F28
	049 Call 0x1C17F20

Method: UnityEngine.Vector2[] <Initialize>g__GetQuadTexCoord|9_3()

Disassembly:
	0x039E2C3C MOV X2, X31
	0x039E2C40 LDR W1, [X8 + 0x8]
	0x039E2C44 BL 0x3C12720
	0x039E2C48 MOV X0, X21
	0x039E2C4C MOV X1, X20
	0x039E2C50 MOV W2, W19
	0x039E2C54 LDP X20, X19, [X31 + 0x40]
	0x039E2C58 LDP X22, X21, [X31 + 0x30]
	0x039E2C5C LDP X30, X23, [X31 + 0x20]
	0x039E2C60 LDP D9, D8, [X31 + 0x10]
	0x039E2C64 LDP D11, D10, [X31], #0x50
	0x039E2C68 B 0x39E1F00
	0x039E2C6C BL 0x1C16F20
	0x039E2C70 SUB X31, X31, 0x80
	0x039E2C74 STR D10, [X31 + 0x30]
	0x039E2C78 STP D9, D8, [X31 + 0x38]
	0x039E2C7C STR X30, [X31 + 0x48]
	0x039E2C80 STP X24, X23, [X31 + 0x50]
	0x039E2C84 STP X22, X21, [X31 + 0x60]
	0x039E2C88 STP X20, X19, [X31 + 0x70]
	0x039E2C8C ADRP X23, 0x9FF000
	0x039E2C90 LDRB W8, [X23 + 0xDD2]
	0x039E2C94 MOV W21, W3
	0x039E2C98 MOV V8.16B, V0.16B
	0x039E2C9C MOV X22, X2
	0x039E2CA0 MOV X19, X1
	0x039E2CA4 MOV X20, X0
	0x039E2CA8 TBNZ X8, 0x0, 0x39E2CCC
	0x039E2CAC ADRP X0, 0x770000
	0x039E2CB0 LDR X0, [X0 + 0xE28]
	0x039E2CB4 BL 0x1C16CF4
	0x039E2CB8 ADRP X0, 0x739000
	0x039E2CBC LDR X0, [X0 + 0x8F8]
	0x039E2CC0 BL 0x1C16CF4
	0x039E2CC4 MOVZ W8, 0x1
	0x039E2CC8 STRB W8, [X23 + 0xDD2]
	0x039E2CCC CBZ X19, 0x39E2DC8
	0x039E2CD0 ADRP X23, 0x739000
	0x039E2CD4 LDRB W8, [X19 + 0xA8]
	0x039E2CD8 LDR X23, [X23 + 0x8F8]
	0x039E2CDC CBZ W8, 0x39E2D0C
	0x039E2CE0 ADD X8, X31, 0x0
	0x039E2CE4 MOV X0, X19
	0x039E2CE8 MOV X1, X31
	0x039E2CEC BL 0x39D48AC
	0x039E2CF0 LDR V9, [X31 + 0x20]
	0x039E2CF4 ADD X8, X31, 0x0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xA00000
	008 Move X20, 0x76C000
	009 Move W8, [X19+3557]
	010 Move X20, [X20+2696]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x76C000
	016 Move X0, [X0+2696]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3557], W8
	020 Move X0, [X20]
	021 Move W1, 4
	022 Call 0x1C17D6C
	023 Move X19, X0
	024 Move X20, X31
	025 Add X21, X0, 36
	026 Move S8, 1
	027 Add W8, W20, W20
	028 And W8, W8, 1
	029 Move X0, X31
	030 NotImplemented "Instruction UCVTF not yet implemented."
	031 Call SystemInfo.get_graphicsUVStartsAtTop
	032 Subtract S0, S8, S9
	033 And W31, W0, 1
	034 NotImplemented "Instruction FCSEL not yet implemented."
	035 Compare X19, 0
	036 JumpIfEqual {56}
	037 Move W8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, X20
	040 ShiftRight X8, 1
	041 And X8, X8, 0x7FFFFFFF
	042 Move [X21], S0
	043 Add X20, X20, 1
	044 NotImplemented "Instruction UCVTF not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X21-4], S0
	047 Add X21, X21, 8
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Move D9, [X31+48]
	054 Move D8, [X31+56]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C17F28

