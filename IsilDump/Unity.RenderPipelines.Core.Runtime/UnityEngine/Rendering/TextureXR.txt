Type: UnityEngine.Rendering.TextureXR

Method: System.Void set_maxViews(System.Int32 value)

Disassembly:
	0x039DDF68 MOV W1, W31
	0x039DDF6C MOV W2, W31
	0x039DDF70 MOV X3, X22
	0x039DDF74 MOV W4, W21
	0x039DDF78 MOV W5, W31
	0x039DDF7C MOV X6, X31
	0x039DDF80 BL 0x3C0ED80
	0x039DDF84 ADD W21, W21, 0x1
	0x039DDF88 B 0x39DDF0C
	0x039DDF8C MOV X0, X22
	0x039DDF90 LDP X20, X19, [X31 + 0x40]
	0x039DDF94 LDP X22, X21, [X31 + 0x30]
	0x039DDF98 LDP X24, X23, [X31 + 0x20]
	0x039DDF9C LDP X26, X25, [X31 + 0x10]
	0x039DDFA0 LDP X30, X27, [X31], #0x50
	0x039DDFA4 RET
	0x039DDFA8 BL 0x1C16F20
	0x039DDFAC STP X30, X21, [X31 - 0x20]!
	0x039DDFB0 STP X20, X19, [X31 + 0x10]
	0x039DDFB4 ADRP X19, 0xA04000
	0x039DDFB8 ADRP X21, 0x775000
	0x039DDFBC LDRB W8, [X19 + 0xD96]
	0x039DDFC0 LDR X21, [X21 + 0x1C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA05000
	006 Move X20, 0x774000
	007 Move W8, [X21+3464]
	008 Move X20, [X20+1560]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x774000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3464], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Int32 get_slices()

Disassembly:
	0x039DDFC4 MOV X20, X0
	0x039DDFC8 TBNZ X8, 0x0, 0x39DDFE0
	0x039DDFCC ADRP X0, 0x775000
	0x039DDFD0 LDR X0, [X0 + 0x1C8]
	0x039DDFD4 BL 0x1C16CF4
	0x039DDFD8 MOVZ W8, 0x1
	0x039DDFDC STRB W8, [X19 + 0xD96]
	0x039DDFE0 LDR X0, [X21]
	0x039DDFE4 BL 0x1C16F10
	0x039DDFE8 MOVZ W1, 0x1
	0x039DDFEC MOVZ W2, 0x1
	0x039DDFF0 MOVZ W3, 0x1
	0x039DDFF4 MOVZ W4, 0x4
	0x039DDFF8 MOV W5, W31
	0x039DDFFC MOV X6, X31
	0x039DE000 MOV X19, X0
	0x039DE004 BL 0x3C1D72C
	0x039DE008 CBZ X19, 0x39DE068
	0x039DE00C MOV X0, X19
	0x039DE010 MOV X1, X20
	0x039DE014 MOV X2, X31
	0x039DE018 BL 0x3C38A84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA05000
	005 Move X19, 0x774000
	006 Move W8, [X20+3465]
	007 Move X19, [X19+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x774000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3465], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean get_useTexArray()

Disassembly:
	0x039DE01C FMOV S0, W31
	0x039DE020 FMOV S1, W31
	0x039DE024 FMOV S2, W31
	0x039DE028 FMOV S3, 1
	0x039DE02C MOV X0, X19
	0x039DE030 MOV W1, W31
	0x039DE034 MOV W2, W31
	0x039DE038 MOV W3, W31
	0x039DE03C MOV W4, W31
	0x039DE040 MOV X5, X31
	0x039DE044 BL 0x3C1DDF4
	0x039DE048 MOV X0, X19
	0x039DE04C MOV W1, W31
	0x039DE050 MOV X2, X31
	0x039DE054 BL 0x3C1DDDC
	0x039DE058 MOV X0, X19
	0x039DE05C LDP X20, X19, [X31 + 0x10]
	0x039DE060 LDP X30, X21, [X31], #0x20
	0x039DE064 RET
	0x039DE068 BL 0x1C16F20
	0x039DE06C STR X30, [X31 - 0x20]!
	0x039DE070 STP X20, X19, [X31 + 0x10]
	0x039DE074 ADRP X19, 0xA03000
	0x039DE078 ADRP X20, 0x772000
	0x039DE07C LDRB W8, [X19 + 0xD97]
	0x039DE080 LDR X20, [X20 + 0x618]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call SystemInfo.get_graphicsDeviceType
	004 Move W8, W0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 And W8, W8, 0xFFFFFFFE
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W0, 1
	012 Subtract W8, W8, 2
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W9, 0x4801
	015 NotImplemented "Instruction LSRV not yet implemented."
	016 And W0, W8, 1
	017 Move W0, W31
	018 Move X30, [X31+16]
	019 Return X0

Method: UnityEngine.Rendering.TextureDimension get_dimension()

Disassembly:
	0x039DE084 TBNZ X8, 0x0, 0x39DE09C
	0x039DE088 ADRP X0, 0x772000
	0x039DE08C LDR X0, [X0 + 0x618]
	0x039DE090 BL 0x1C16CF4
	0x039DE094 MOVZ W8, 0x1
	0x039DE098 STRB W8, [X19 + 0xD97]
	0x039DE09C LDR X8, [X20]
	0x039DE0A0 LDP X20, X19, [X31 + 0x10]
	0x039DE0A4 MOVZ W9, 0x1
	0x039DE0A8 LDR X8, [X8 + 0xB8]
	0x039DE0AC STR W9, [X8]
	0x039DE0B0 LDR X30, [X31], #0x20
	0x039DE0B4 RET
	0x039DE0B8 STR X30, [X31 - 0x20]!
	0x039DE0BC STP X20, X19, [X31 + 0x10]
	0x039DE0C0 MOV X19, X0
	0x039DE0C4 ADD X0, X31, 0x8
	0x039DE0C8 MOVN W2, 0x0
	0x039DE0CC MOV X3, X31
	0x039DE0D0 STR X31, [X31 + 0x8]
	0x039DE0D4 BL 0x3C43678
	0x039DE0D8 MOV X0, X19
	0x039DE0DC MOV X1, X31
	0x039DE0E0 BL 0x3C43734

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA04000
	005 Move X20, 0x773000
	006 Move W8, [X19+3466]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3466], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TextureXR.get_useTexArray
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 And W31, W0, 1
	026 Move W8, 2
	027 Move W9, 5
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Move X30, [X31+32]
	030 Return X0

Method: UnityEngine.Rendering.RTHandle GetBlackUIntTexture()

Disassembly:
	0x039DE0E4 TBZ X0, 0x0, 0x39DE144
	0x039DE0E8 MOV X0, X19
	0x039DE0EC MOV X1, X31
	0x039DE0F0 BL 0x3C43868
	0x039DE0F4 CMP W0, 0x1
	0x039DE0F8 B.LT 0x39DE138
	0x039DE0FC MOV W20, W31
	0x039DE100 MOV X0, X19
	0x039DE104 MOV W1, W20
	0x039DE108 MOV X2, X31
	0x039DE10C BL 0x3C437E0
	0x039DE110 MOV X1, X0
	0x039DE114 ADD X0, X31, 0x8
	0x039DE118 MOV X2, X31
	0x039DE11C BL 0x3C438E0
	0x039DE120 MOV X0, X19
	0x039DE124 MOV X1, X31
	0x039DE128 ADD W20, W20, 0x1
	0x039DE12C BL 0x3C43868
	0x039DE130 CMP W20, W0
	0x039DE134 B.LT 0x39DE100
	0x039DE138 MOV X0, X19
	0x039DE13C MOV X1, X31
	0x039DE140 BL 0x3C43744
	0x039DE144 LDR X8, [X31 + 0x8]
	0x039DE148 STR X8, [X19]
	0x039DE14C LDP X20, X19, [X31 + 0x10]
	0x039DE150 LDR X30, [X31], #0x20
	0x039DE154 RET
	0x039DE158 STR X29, [X31 - 0x30]!
	0x039DE15C STP X30, X21, [X31 + 0x10]
	0x039DE160 STP X20, X19, [X31 + 0x20]
	0x039DE164 SUB X31, X31, 0x310

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA04000
	005 Move X20, 0x773000
	006 Move W8, [X19+3467]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3467], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TextureXR.get_useTexArray
	023 Move X8, [X20]
	024 Move W19, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X8, [X20]
	031 Move X8, [X8+184]
	032 And W31, W19, 1
	033 Move W9, 32
	034 Move W10, 24
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X0, [X8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0

Method: UnityEngine.Rendering.RTHandle GetClearTexture()

Disassembly:
	0x039DE168 MOV X19, X0
	0x039DE16C ADD X0, X31, 0x2A0
	0x039DE170 MOVZ W2, 0x6C
	0x039DE174 MOV X20, X1
	0x039DE178 BL 0x3EB1AC0
	0x039DE17C ADD X0, X31, 0x2A0
	0x039DE180 MOV W1, W31
	0x039DE184 BL 0x39DE2B0
	0x039DE188 ADD X0, X31, 0x230
	0x039DE18C MOVZ W2, 0x6C
	0x039DE190 MOV X1, X20
	0x039DE194 STP S0, S1, [X19]
	0x039DE198 STP S2, S3, [X19 + 0x8]
	0x039DE19C BL 0x3EB1AC0
	0x039DE1A0 ADD X0, X31, 0x230
	0x039DE1A4 MOVZ W1, 0x1
	0x039DE1A8 MOVZ W21, 0x1
	0x039DE1AC BL 0x39DE2B0
	0x039DE1B0 ADD X0, X31, 0x1C0
	0x039DE1B4 MOVZ W2, 0x6C
	0x039DE1B8 MOV X1, X20
	0x039DE1BC STP S0, S1, [X19 + 0x10]
	0x039DE1C0 STP S2, S3, [X19 + 0x18]
	0x039DE1C4 BL 0x3EB1AC0
	0x039DE1C8 ADD X0, X31, 0x1C0
	0x039DE1CC MOVZ W1, 0x2
	0x039DE1D0 BL 0x39DE2B0
	0x039DE1D4 ADD X0, X31, 0x150
	0x039DE1D8 MOVZ W2, 0x6C
	0x039DE1DC MOV X1, X20
	0x039DE1E0 STP S0, S1, [X19 + 0x20]
	0x039DE1E4 STP S2, S3, [X19 + 0x28]
	0x039DE1E8 BL 0x3EB1AC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA04000
	005 Move X20, 0x773000
	006 Move W8, [X19+3468]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3468], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TextureXR.get_useTexArray
	023 Move X8, [X20]
	024 Move W19, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X8, [X20]
	031 Move X8, [X8+184]
	032 And W31, W19, 1
	033 Move W9, 64
	034 Move W10, 56
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X0, [X8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0

Method: UnityEngine.Rendering.RTHandle GetMagentaTexture()

Disassembly:
	0x039DE1EC ADD X0, X31, 0x150
	0x039DE1F0 MOV W1, W31
	0x039DE1F4 BL 0x39DE358
	0x039DE1F8 ADD X0, X31, 0xE0
	0x039DE1FC MOVZ W2, 0x6C
	0x039DE200 MOV X1, X20
	0x039DE204 STP S0, S1, [X19 + 0x30]
	0x039DE208 STP S2, S3, [X19 + 0x38]
	0x039DE20C BL 0x3EB1AC0
	0x039DE210 ADD X0, X31, 0xE0
	0x039DE214 MOVZ W1, 0x1
	0x039DE218 BL 0x39DE358
	0x039DE21C ADD X0, X31, 0x70
	0x039DE220 MOVZ W2, 0x6C
	0x039DE224 MOV X1, X20
	0x039DE228 STP S0, S1, [X19 + 0x40]
	0x039DE22C STP S2, S3, [X19 + 0x48]
	0x039DE230 BL 0x3EB1AC0
	0x039DE234 ADD X0, X31, 0x70
	0x039DE238 MOVZ W1, 0x2
	0x039DE23C BL 0x39DE358
	0x039DE240 ADD X0, X31, 0x0
	0x039DE244 MOVZ W2, 0x6C
	0x039DE248 MOV X1, X20
	0x039DE24C STP S0, S1, [X19 + 0x50]
	0x039DE250 STP S2, S3, [X19 + 0x58]
	0x039DE254 BL 0x3EB1AC0
	0x039DE258 ADD X0, X31, 0x0
	0x039DE25C BL 0x39DE3EC
	0x039DE260 STP S0, S1, [X19 + 0x60]
	0x039DE264 STP S2, S3, [X19 + 0x68]
	0x039DE268 ADRP X20, 0xA03000
	0x039DE26C LDRB W8, [X20 + 0xE39]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA04000
	005 Move X20, 0x773000
	006 Move W8, [X19+3469]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3469], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TextureXR.get_useTexArray
	023 Move X8, [X20]
	024 Move W19, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X8, [X20]
	031 Move X8, [X8+184]
	032 And W31, W19, 1
	033 Move W9, 96
	034 Move W10, 88
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X0, [X8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0

Method: UnityEngine.Rendering.RTHandle GetBlackTexture()

Disassembly:
	0x039DE270 CBNZ W8, 0x39DE284
	0x039DE274 ADRP X0, 0x71C000
	0x039DE278 LDR X0, [X0 + 0x9A0]
	0x039DE27C BL 0x1C16CF4
	0x039DE280 STRB W21, [X20 + 0xE39]
	0x039DE284 ADRP X8, 0x71C000
	0x039DE288 LDR X8, [X8 + 0x9A0]
	0x039DE28C LDR X8, [X8]
	0x039DE290 LDR X8, [X8 + 0xB8]
	0x039DE294 LDR V0, [X8 + 0x1]
	0x039DE298 STR V0, [X19 + 0x7]
	0x039DE29C ADD X31, X31, 0x310
	0x039DE2A0 LDP X20, X19, [X31 + 0x20]
	0x039DE2A4 LDP X30, X21, [X31 + 0x10]
	0x039DE2A8 LDR X29, [X31], #0x30
	0x039DE2AC RET
	0x039DE2B0 STP D11, D10, [X31 - 0x40]!
	0x039DE2B4 STP D9, D8, [X31 + 0x10]
	0x039DE2B8 STR X30, [X31 + 0x20]
	0x039DE2BC STP X20, X19, [X31 + 0x30]
	0x039DE2C0 MOVZ W2, 0x3
	0x039DE2C4 MOV X3, X31
	0x039DE2C8 MOV W19, W1
	0x039DE2CC MOV X20, X0
	0x039DE2D0 BL 0x3C50050
	0x039DE2D4 MOVZ W2, 0x1
	0x039DE2D8 MOV X0, X20
	0x039DE2DC MOV W1, W19
	0x039DE2E0 MOV X3, X31
	0x039DE2E4 MOV V8.16B, V0.16B
	0x039DE2E8 BL 0x3C50050
	0x039DE2EC MOVZ W2, 0x2
	0x039DE2F0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA04000
	005 Move X20, 0x773000
	006 Move W8, [X19+3470]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3470], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TextureXR.get_useTexArray
	023 Move X8, [X20]
	024 Move W19, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X8, [X20]
	031 Move X8, [X8+184]
	032 And W31, W19, 1
	033 Move W9, 136
	034 Move W10, 128
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X0, [X8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0

Method: UnityEngine.Rendering.RTHandle GetBlackTextureArray()

Disassembly:
	0x039DE2F4 MOV W1, W19
	0x039DE2F8 MOV X3, X31
	0x039DE2FC MOV V9.16B, V0.16B
	0x039DE300 BL 0x3C50050
	0x039DE304 MOV X0, X20
	0x039DE308 MOV W1, W19
	0x039DE30C MOV W2, W31
	0x039DE310 MOV X3, X31
	0x039DE314 MOV V10.16B, V0.16B
	0x039DE318 BL 0x3C50050
	0x039DE31C MOVZ W2, 0x6
	0x039DE320 MOV X0, X20
	0x039DE324 MOV W1, W19
	0x039DE328 MOV X3, X31
	0x039DE32C MOV V11.16B, V0.16B
	0x039DE330 BL 0x3C50050
	0x039DE334 FSUB S3, S11, S0
	0x039DE338 MOV V0.16B, V8.16B
	0x039DE33C MOV V1.16B, V9.16B
	0x039DE340 LDP X20, X19, [X31 + 0x30]
	0x039DE344 LDR X30, [X31 + 0x20]
	0x039DE348 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA04000
	005 Move X19, 0x773000
	006 Move W8, [X20+3471]
	007 Move X19, [X19+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3471], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+128]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.Rendering.RTHandle GetBlackTexture3D()

Disassembly:
	0x039DE34C MOV V2.16B, V10.16B
	0x039DE350 LDP D11, D10, [X31], #0x40
	0x039DE354 RET
	0x039DE358 STR D10, [X31 - 0x30]!
	0x039DE35C STP D9, D8, [X31 + 0x8]
	0x039DE360 STR X30, [X31 + 0x18]
	0x039DE364 STP X20, X19, [X31 + 0x20]
	0x039DE368 MOVZ W2, 0x4
	0x039DE36C MOV X3, X31
	0x039DE370 MOV W19, W1
	0x039DE374 MOV X20, X0
	0x039DE378 BL 0x3C50050
	0x039DE37C MOVZ W2, 0x5
	0x039DE380 MOV X0, X20
	0x039DE384 MOV W1, W19
	0x039DE388 MOV X3, X31
	0x039DE38C MOV V8.16B, V0.16B
	0x039DE390 BL 0x3C50050
	0x039DE394 MOVZ W2, 0x6
	0x039DE398 MOV X0, X20
	0x039DE39C MOV W1, W19
	0x039DE3A0 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA04000
	005 Move X19, 0x773000
	006 Move W8, [X20+3472]
	007 Move X19, [X19+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3472], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+144]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.Rendering.RTHandle GetWhiteTexture()

Disassembly:
	0x039DE3A4 MOV V9.16B, V0.16B
	0x039DE3A8 BL 0x3C50050
	0x039DE3AC MOVZ W2, 0x7
	0x039DE3B0 MOV X0, X20
	0x039DE3B4 MOV W1, W19
	0x039DE3B8 MOV X3, X31
	0x039DE3BC MOV V10.16B, V0.16B
	0x039DE3C0 BL 0x3C50050
	0x039DE3C4 FMOV S1, 3
	0x039DE3C8 FMUL S2, S10, S1
	0x039DE3CC MOV V3.16B, V0.16B
	0x039DE3D0 MOV V0.16B, V8.16B
	0x039DE3D4 MOV V1.16B, V9.16B
	0x039DE3D8 LDP X20, X19, [X31 + 0x20]
	0x039DE3DC LDR X30, [X31 + 0x18]
	0x039DE3E0 LDP D9, D8, [X31 + 0x8]
	0x039DE3E4 LDR V10, [X31], #0x30
	0x039DE3E8 RET
	0x039DE3EC STP D9, D8, [X31 - 0x20]!
	0x039DE3F0 STP X30, X19, [X31 + 0x10]
	0x039DE3F4 MOVZ W2, 0x8
	0x039DE3F8 MOV W1, W31
	0x039DE3FC MOV X3, X31
	0x039DE400 MOV X19, X0
	0x039DE404 BL 0x3C50050
	0x039DE408 MOVZ W1, 0x1
	0x039DE40C MOVZ W2, 0x8
	0x039DE410 MOV X0, X19
	0x039DE414 MOV X3, X31
	0x039DE418 MOV V8.16B, V0.16B
	0x039DE41C BL 0x3C50050
	0x039DE420 MOVZ W1, 0x2
	0x039DE424 MOVZ W2, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA04000
	005 Move X20, 0x773000
	006 Move W8, [X19+3473]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3473], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Call TextureXR.get_useTexArray
	023 Move X8, [X20]
	024 Move W19, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {31}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X8, [X20]
	031 Move X8, [X8+184]
	032 And W31, W19, 1
	033 Move W9, 168
	034 Move W10, 160
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X0, [X8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0

Method: System.Void Initialize(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.ComputeShader clearR32_UIntShader)

Disassembly:
	0x039DE428 MOV X0, X19
	0x039DE42C MOV X3, X31
	0x039DE430 MOV V9.16B, V0.16B
	0x039DE434 BL 0x3C50050
	0x039DE438 LDP X30, X19, [X31 + 0x10]
	0x039DE43C FMOV S3, 1
	0x039DE440 MOV V2.16B, V0.16B
	0x039DE444 MOV V0.16B, V8.16B
	0x039DE448 MOV V1.16B, V9.16B
	0x039DE44C LDP D9, D8, [X31], #0x20
	0x039DE450 RET
	0x039DE454 SUB X31, X31, 0xA0
	0x039DE458 STP D11, D10, [X31 + 0x70]
	0x039DE45C STP D9, D8, [X31 + 0x80]
	0x039DE460 STP X30, X19, [X31 + 0x90]
	0x039DE464 MOV X19, X0
	0x039DE468 ADD X0, X31, 0x0
	0x039DE46C MOVZ W2, 0x6C
	0x039DE470 MOV V8.16B, V3.16B
	0x039DE474 MOV V9.16B, V2.16B
	0x039DE478 MOV V10.16B, V1.16B
	0x039DE47C MOV V11.16B, V0.16B
	0x039DE480 BL 0x3EB1AC0
	0x039DE484 ADD X1, X31, 0x0
	0x039DE488 MOV X0, X19
	0x039DE48C BL 0x39DE158
	0x039DE490 STP S11, S10, [X19 + 0x70]
	0x039DE494 STP S9, S8, [X19 + 0x78]
	0x039DE498 LDP X30, X19, [X31 + 0x90]
	0x039DE49C LDP D9, D8, [X31 + 0x80]
	0x039DE4A0 LDP D11, D10, [X31 + 0x70]
	0x039DE4A4 ADD X31, X31, 0xA0
	0x039DE4A8 RET
	0x039DE4AC LDR V0, [X1]
	0x039DE4B0 LDR V1, [X0]
	0x039DE4B4 FCMP S1, S0
	0x039DE4B8 B.NE 0x39DE6B0
	0x039DE4BC LDR V0, [X1 + 0x4]
	0x039DE4C0 LDR V1, [X0 + 0x4]
	0x039DE4C4 FCMP S1, S0
	0x039DE4C8 B.NE 0x39DE6B0
	0x039DE4CC LDR V0, [X1 + 0x8]
	0x039DE4D0 LDR V1, [X0 + 0x8]
	0x039DE4D4 FCMP S1, S0
	0x039DE4D8 B.NE 0x39DE6B0
	0x039DE4DC LDR V0, [X1 + 0xC]
	0x039DE4E0 LDR V1, [X0 + 0xC]
	0x039DE4E4 FCMP S1, S0
	0x039DE4E8 B.NE 0x39DE6B0
	0x039DE4EC LDR V0, [X1 + 0x10]
	0x039DE4F0 LDR V1, [X0 + 0x10]
	0x039DE4F4 FCMP S1, S0
	0x039DE4F8 B.NE 0x39DE6B0
	0x039DE4FC LDR V0, [X1 + 0x14]
	0x039DE500 LDR V1, [X0 + 0x14]
	0x039DE504 FCMP S1, S0
	0x039DE508 B.NE 0x39DE6B0
	0x039DE50C LDR V0, [X1 + 0x18]
	0x039DE510 LDR V1, [X0 + 0x18]
	0x039DE514 FCMP S1, S0
	0x039DE518 B.NE 0x39DE6B0
	0x039DE51C LDR V0, [X1 + 0x1C]
	0x039DE520 LDR V1, [X0 + 0x1C]
	0x039DE524 FCMP S1, S0
	0x039DE528 B.NE 0x39DE6B0
	0x039DE52C LDR V0, [X1 + 0x20]
	0x039DE530 LDR V1, [X0 + 0x20]
	0x039DE534 FCMP S1, S0
	0x039DE538 B.NE 0x39DE6B0
	0x039DE53C LDR V0, [X1 + 0x24]
	0x039DE540 LDR V1, [X0 + 0x24]
	0x039DE544 FCMP S1, S0
	0x039DE548 B.NE 0x39DE6B0
	0x039DE54C LDR V0, [X1 + 0x28]
	0x039DE550 LDR V1, [X0 + 0x28]
	0x039DE554 FCMP S1, S0
	0x039DE558 B.NE 0x39DE6B0
	0x039DE55C LDR V0, [X1 + 0x2C]
	0x039DE560 LDR V1, [X0 + 0x2C]
	0x039DE564 FCMP S1, S0
	0x039DE568 B.NE 0x39DE6B0
	0x039DE56C LDR V0, [X1 + 0x30]
	0x039DE570 LDR V1, [X0 + 0x30]
	0x039DE574 FCMP S1, S0
	0x039DE578 B.NE 0x39DE6B0
	0x039DE57C LDR V0, [X1 + 0x34]
	0x039DE580 LDR V1, [X0 + 0x34]
	0x039DE584 FCMP S1, S0
	0x039DE588 B.NE 0x39DE6B0
	0x039DE58C LDR V0, [X1 + 0x38]
	0x039DE590 LDR V1, [X0 + 0x38]
	0x039DE594 FCMP S1, S0
	0x039DE598 B.NE 0x39DE6B0
	0x039DE59C LDR V0, [X1 + 0x3C]
	0x039DE5A0 LDR V1, [X0 + 0x3C]
	0x039DE5A4 FCMP S1, S0
	0x039DE5A8 B.NE 0x39DE6B0
	0x039DE5AC LDR V0, [X1 + 0x40]
	0x039DE5B0 LDR V1, [X0 + 0x40]
	0x039DE5B4 FCMP S1, S0
	0x039DE5B8 B.NE 0x39DE6B0
	0x039DE5BC LDR V0, [X1 + 0x44]
	0x039DE5C0 LDR V1, [X0 + 0x44]
	0x039DE5C4 FCMP S1, S0
	0x039DE5C8 B.NE 0x39DE6B0
	0x039DE5CC LDR V0, [X1 + 0x48]
	0x039DE5D0 LDR V1, [X0 + 0x48]
	0x039DE5D4 FCMP S1, S0
	0x039DE5D8 B.NE 0x39DE6B0
	0x039DE5DC LDR V0, [X1 + 0x4C]
	0x039DE5E0 LDR V1, [X0 + 0x4C]
	0x039DE5E4 FCMP S1, S0
	0x039DE5E8 B.NE 0x39DE6B0
	0x039DE5EC LDR V0, [X1 + 0x50]
	0x039DE5F0 LDR V1, [X0 + 0x50]
	0x039DE5F4 FCMP S1, S0
	0x039DE5F8 B.NE 0x39DE6B0
	0x039DE5FC LDR V0, [X1 + 0x54]
	0x039DE600 LDR V1, [X0 + 0x54]
	0x039DE604 FCMP S1, S0
	0x039DE608 B.NE 0x39DE6B0
	0x039DE60C LDR V0, [X1 + 0x58]
	0x039DE610 LDR V1, [X0 + 0x58]
	0x039DE614 FCMP S1, S0
	0x039DE618 B.NE 0x39DE6B0
	0x039DE61C LDR V0, [X1 + 0x5C]
	0x039DE620 LDR V1, [X0 + 0x5C]
	0x039DE624 FCMP S1, S0
	0x039DE628 B.NE 0x39DE6B0
	0x039DE62C LDR V0, [X1 + 0x60]
	0x039DE630 LDR V1, [X0 + 0x60]
	0x039DE634 FCMP S1, S0
	0x039DE638 B.NE 0x39DE6B0
	0x039DE63C LDR V0, [X1 + 0x64]
	0x039DE640 LDR V1, [X0 + 0x64]
	0x039DE644 FCMP S1, S0
	0x039DE648 B.NE 0x39DE6B0
	0x039DE64C LDR V0, [X1 + 0x68]
	0x039DE650 LDR V1, [X0 + 0x68]
	0x039DE654 FCMP S1, S0
	0x039DE658 B.NE 0x39DE6B0
	0x039DE65C LDR V0, [X1 + 0x6C]
	0x039DE660 LDR V1, [X0 + 0x6C]
	0x039DE664 FCMP S1, S0
	0x039DE668 B.NE 0x39DE6B0
	0x039DE66C LDR V0, [X1 + 0x70]
	0x039DE670 LDR V1, [X0 + 0x70]
	0x039DE674 FCMP S1, S0
	0x039DE678 B.NE 0x39DE6B0
	0x039DE67C LDR V0, [X1 + 0x74]
	0x039DE680 LDR V1, [X0 + 0x74]
	0x039DE684 FCMP S1, S0
	0x039DE688 B.NE 0x39DE6B0
	0x039DE68C LDR V0, [X1 + 0x78]
	0x039DE690 LDR V1, [X0 + 0x78]
	0x039DE694 FCMP S1, S0
	0x039DE698 B.NE 0x39DE6B0
	0x039DE69C LDR V0, [X1 + 0x7C]
	0x039DE6A0 LDR V1, [X0 + 0x7C]
	0x039DE6A4 FCMP S1, S0
	0x039DE6A8 CSET W0, EQ
	0x039DE6AC RET
	0x039DE6B0 MOV W0, W31
	0x039DE6B4 RET
	0x039DE6B8 SUB X31, X31, 0xA0
	0x039DE6BC STP X30, X21, [X31 + 0x80]
	0x039DE6C0 STP X20, X19, [X31 + 0x90]
	0x039DE6C4 ADRP X21, 0xA03000
	0x039DE6C8 LDRB W8, [X21 + 0xD98]
	0x039DE6CC MOV X20, X1
	0x039DE6D0 MOV X19, X0
	0x039DE6D4 TBNZ X8, 0x0, 0x39DE6EC
	0x039DE6D8 ADRP X0, 0x775000
	0x039DE6DC LDR X0, [X0 + 0x2E8]
	0x039DE6E0 BL 0x1C16CF4
	0x039DE6E4 MOVZ W8, 0x1
	0x039DE6E8 STRB W8, [X21 + 0xD98]
	0x039DE6EC CBZ X20, 0x39DE708
	0x039DE6F0 ADRP X8, 0x775000
	0x039DE6F4 LDR X8, [X8 + 0x2E8]
	0x039DE6F8 LDR X9, [X20]
	0x039DE6FC LDR X8, [X8]
	0x039DE700 CMP X9, X8
	0x039DE704 B.EQ 0x39DE710
	0x039DE708 MOV W0, W31
	0x039DE70C B 0x39DE734
	0x039DE710 MOV X0, X20
	0x039DE714 BL 0x1C16E08
	0x039DE718 MOV X1, X0
	0x039DE71C ADD X0, X31, 0x0
	0x039DE720 MOVZ W2, 0x80
	0x039DE724 BL 0x3EB1B30
	0x039DE728 ADD X1, X31, 0x0
	0x039DE72C MOV X0, X19
	0x039DE730 BL 0x39DE4AC
	0x039DE734 LDP X20, X19, [X31 + 0x90]
	0x039DE738 LDP X30, X21, [X31 + 0x80]
	0x039DE73C AND W0, W0, 0x1
	0x039DE740 ADD X31, X31, 0xA0
	0x039DE744 RET
	0x039DE748 SUB X31, X31, 0x130
	0x039DE74C STP D15, D14, [X31 + 0xC0]
	0x039DE750 STP D13, D12, [X31 + 0xD0]
	0x039DE754 STP D11, D10, [X31 + 0xE0]
	0x039DE758 STP D9, D8, [X31 + 0xF0]
	0x039DE75C STR X29, [X31 + 0x100]
	0x039DE760 STP X30, X21, [X31 + 0x110]
	0x039DE764 STP X20, X19, [X31 + 0x120]
	0x039DE768 ADRP X21, 0xA03000
	0x039DE76C ADRP X20, 0x73D000
	0x039DE770 LDRB W8, [X21 + 0xD99]
	0x039DE774 LDR X20, [X20 + 0xB10]
	0x039DE778 MOV X19, X0
	0x039DE77C TBNZ X8, 0x0, 0x39DE7A0
	0x039DE780 ADRP X0, 0x775000
	0x039DE784 LDR X0, [X0 + 0x2F0]
	0x039DE788 BL 0x1C16CF4
	0x039DE78C ADRP X0, 0x73D000
	0x039DE790 LDR X0, [X0 + 0xB10]
	0x039DE794 BL 0x1C16CF4
	0x039DE798 MOVZ W8, 0x1
	0x039DE79C STRB W8, [X21 + 0xD99]
	0x039DE7A0 LDR X0, [X20]
	0x039DE7A4 LDP S0, S1, [X19]
	0x039DE7A8 LDP S2, S3, [X19 + 0x8]
	0x039DE7AC LDP S4, S5, [X19 + 0x10]
	0x039DE7B0 LDP S6, S7, [X19 + 0x18]
	0x039DE7B4 LDP S16, S17, [X19 + 0x20]
	0x039DE7B8 LDP S18, S19, [X19 + 0x28]
	0x039DE7BC LDP S20, S21, [X19 + 0x30]
	0x039DE7C0 LDP S22, S23, [X19 + 0x38]
	0x039DE7C4 LDP S24, S25, [X19 + 0x40]
	0x039DE7C8 LDP S26, S27, [X19 + 0x48]
	0x039DE7CC LDP S28, S29, [X19 + 0x50]
	0x039DE7D0 LDP S30, S31, [X19 + 0x58]
	0x039DE7D4 LDP S8, S9, [X19 + 0x60]
	0x039DE7D8 LDP S10, S11, [X19 + 0x68]
	0x039DE7DC LDP S12, S13, [X19 + 0x70]
	0x039DE7E0 LDP S14, S15, [X19 + 0x78]
	0x039DE7E4 ADRP X19, 0x775000
	0x039DE7E8 LDR W8, [X0 + 0xE0]
	0x039DE7EC LDR X19, [X19 + 0x2F0]
	0x039DE7F0 CBNZ W8, 0x39DE860
	0x039DE7F4 STR S0, [X31 + 0x10C]
	0x039DE7F8 STR S1, [X31 + 0x108]
	0x039DE7FC STP S3, S2, [X31 + 0xB8]
	0x039DE800 STP S5, S4, [X31 + 0xB0]
	0x039DE804 STP S7, S6, [X31 + 0xA8]
	0x039DE808 STP S17, S16, [X31 + 0xA0]
	0x039DE80C STP S19, S18, [X31 + 0x98]
	0x039DE810 STP S21, S20, [X31 + 0x90]
	0x039DE814 STP S23, S22, [X31 + 0x88]
	0x039DE818 STP S25, S24, [X31 + 0x80]
	0x039DE81C STP S27, S26, [X31 + 0x78]
	0x039DE820 STP S29, S28, [X31 + 0x70]
	0x039DE824 STP S31, S30, [X31 + 0x68]
	0x039DE828 BL 0x1C16DFC
	0x039DE82C LDP S31, S30, [X31 + 0x68]
	0x039DE830 LDP S29, S28, [X31 + 0x70]
	0x039DE834 LDP S27, S26, [X31 + 0x78]
	0x039DE838 LDP S25, S24, [X31 + 0x80]
	0x039DE83C LDP S23, S22, [X31 + 0x88]
	0x039DE840 LDP S21, S20, [X31 + 0x90]
	0x039DE844 LDP S19, S18, [X31 + 0x98]
	0x039DE848 LDP S17, S16, [X31 + 0xA0]
	0x039DE84C LDP S7, S6, [X31 + 0xA8]
	0x039DE850 LDP S5, S4, [X31 + 0xB0]
	0x039DE854 LDP S3, S2, [X31 + 0xB8]
	0x039DE858 LDR V1, [X31 + 0x108]
	0x039DE85C LDR V0, [X31 + 0x10C]
	0x039DE860 LDR X0, [X19]
	0x039DE864 STP S14, S15, [X31 + 0x58]
	0x039DE868 STP S12, S13, [X31 + 0x50]
	0x039DE86C STP S10, S11, [X31 + 0x48]
	0x039DE870 STP S8, S9, [X31 + 0x40]
	0x039DE874 STP S30, S31, [X31 + 0x38]
	0x039DE878 STP S28, S29, [X31 + 0x30]
	0x039DE87C STP S26, S27, [X31 + 0x28]
	0x039DE880 STP S24, S25, [X31 + 0x20]
	0x039DE884 STP S22, S23, [X31 + 0x18]
	0x039DE888 STP S20, S21, [X31 + 0x10]
	0x039DE88C STP S18, S19, [X31 + 0x8]
	0x039DE890 STP S16, S17, [X31]
	0x039DE894 BL 0x21E9A90
	0x039DE898 LDP X20, X19, [X31 + 0x120]
	0x039DE89C LDP X30, X21, [X31 + 0x110]
	0x039DE8A0 LDR X29, [X31 + 0x100]
	0x039DE8A4 LDP D9, D8, [X31 + 0xF0]
	0x039DE8A8 LDP D11, D10, [X31 + 0xE0]
	0x039DE8AC LDP D13, D12, [X31 + 0xD0]
	0x039DE8B0 LDP D15, D14, [X31 + 0xC0]
	0x039DE8B4 ADD X31, X31, 0x130
	0x039DE8B8 RET
	0x039DE8BC SUB X31, X31, 0x90
	0x039DE8C0 STP X30, X19, [X31 + 0x80]
	0x039DE8C4 MOV X19, X0
	0x039DE8C8 ADD X0, X31, 0x0
	0x039DE8CC MOVZ W2, 0x80
	0x039DE8D0 BL 0x3EB1AC0
	0x039DE8D4 ADD X1, X31, 0x0
	0x039DE8D8 MOV X0, X19
	0x039DE8DC BL 0x39DE4AC
	0x039DE8E0 LDP X30, X19, [X31 + 0x80]
	0x039DE8E4 AND W0, W0, 0x1
	0x039DE8E8 ADD X31, X31, 0x90
	0x039DE8EC RET
	0x039DE8F0 SUB X31, X31, 0x90
	0x039DE8F4 STP X30, X19, [X31 + 0x80]
	0x039DE8F8 MOV X19, X0
	0x039DE8FC ADD X0, X31, 0x0
	0x039DE900 MOVZ W2, 0x80
	0x039DE904 BL 0x3EB1AC0
	0x039DE908 ADD X1, X31, 0x0
	0x039DE90C MOV X0, X19
	0x039DE910 BL 0x39DE4AC
	0x039DE914 LDP X30, X19, [X31 + 0x80]
	0x039DE918 ORN W8, W31, W0, 0x0
	0x039DE91C AND W0, W8, 0x1
	0x039DE920 ADD X31, X31, 0x90
	0x039DE924 RET
	0x039DE928 SUB X31, X31, 0x150
	0x039DE92C STP D13, D12, [X31 + 0xF0]
	0x039DE930 STP D11, D10, [X31 + 0x100]
	0x039DE934 STP D9, D8, [X31 + 0x110]
	0x039DE938 STR X29, [X31 + 0x120]
	0x039DE93C STP X30, X21, [X31 + 0x130]
	0x039DE940 STP X20, X19, [X31 + 0x140]
	0x039DE944 ADRP X20, 0xA03000
	0x039DE948 LDRB W9, [X20 + 0xD9A]
	0x039DE94C MOV X19, X8
	0x039DE950 TBNZ X9, 0x0, 0x39DE968
	0x039DE954 ADRP X0, 0x775000
	0x039DE958 LDR X0, [X0 + 0x2F8]
	0x039DE95C BL 0x1C16CF4
	0x039DE960 MOVZ W8, 0x1
	0x039DE964 STRB W8, [X20 + 0xD9A]
	0x039DE968 ADRP X21, 0xA03000
	0x039DE96C ADRP X20, 0x775000
	0x039DE970 LDRB W8, [X21 + 0xE39]
	0x039DE974 LDR X20, [X20 + 0x2F8]
	0x039DE978 CBNZ W8, 0x39DE990
	0x039DE97C ADRP X0, 0x71C000
	0x039DE980 LDR X0, [X0 + 0x9A0]
	0x039DE984 BL 0x1C16CF4
	0x039DE988 MOVZ W8, 0x1
	0x039DE98C STRB W8, [X21 + 0xE39]
	0x039DE990 ADRP X8, 0x71C000
	0x039DE994 LDR X8, [X8 + 0x9A0]
	0x039DE998 LDR X0, [X20]
	0x039DE99C LDR X8, [X8]
	0x039DE9A0 LDR W9, [X0 + 0xE0]
	0x039DE9A4 LDR X8, [X8 + 0xB8]
	0x039DE9A8 LDP D13, D12, [X8 + 0x10]
	0x039DE9AC CBNZ W9, 0x39DE9B4
	0x039DE9B0 BL 0x1C16DFC
	0x039DE9B4 MOV X0, X31
	0x039DE9B8 BL 0x3C05624

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xA04000
	008 Move X22, 0x773000
	009 Move W8, [X21+3474]
	010 Move X22, [X22+1560]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {55}
	017 Move X0, 0x716000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x773000
	021 Move X0, [X0+2480]
	022 Call 0x1C17CF4
	023 Move X0, 0x740000
	024 Move X0, [X0+592]
	025 Call 0x1C17CF4
	026 Move X0, 0x773000
	027 Move X0, [X0+1560]
	028 Call 0x1C17CF4
	029 Move X0, 0x776000
	030 Move X0, [X0+624]
	031 Call 0x1C17CF4
	032 Move X0, 0x776000
	033 Move X0, [X0+632]
	034 Call 0x1C17CF4
	035 Move X0, 0x776000
	036 Move X0, [X0+640]
	037 Call 0x1C17CF4
	038 Move X0, 0x776000
	039 Move X0, [X0+648]
	040 Call 0x1C17CF4
	041 Move X0, 0x776000
	042 Move X0, [X0+656]
	043 Call 0x1C17CF4
	044 Move X0, 0x776000
	045 Move X0, [X0+664]
	046 Call 0x1C17CF4
	047 Move X0, 0x776000
	048 Move X0, [X0+672]
	049 Call 0x1C17CF4
	050 Move X0, 0x776000
	051 Move X0, [X0+680]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+3474], W8
	055 Move X0, [X22]
	056 Move X21, 0x716000
	057 Move W8, [X0+224]
	058 Move X21, [X21+1432]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X22]
	063 Move X8, [X21]
	064 Move X9, [X0+184]
	065 Move W10, [X8+224]
	066 Move X21, [X9+8]
	067 Compare W10, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X31
	073 Move X2, X31
	074 Call Object.op_Equality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {372}
	079 Move X0, [X22]
	080 Move X21, 0x773000
	081 Move W8, [X0+224]
	082 Move X21, [X21+2480]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X22]
	087 Move X8, [X21]
	088 Move X9, [X0+184]
	089 Move X23, 0x740000
	090 Move W10, [X8+224]
	091 Move X21, [X9+24]
	092 Move X23, [X23+592]
	093 Compare W10, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X21
	098 Move X1, X31
	099 Call RTHandles.Release, X0
	100 Move X0, X20
	101 Move X1, X19
	102 Call TextureXR.CreateBlackUIntTextureArray, X0, X1
	103 Move X8, [X22]
	104 Move X1, X31
	105 Move X8, [X8+184]
	106 Move [X8+8], X0
	107 Call RTHandles.Alloc, X0
	108 Move X8, [X22]
	109 Move X1, X31
	110 Move X9, [X8+184]
	111 Move X8, [X9+32]
	112 Move [X9+24], X0
	113 Move X0, X8
	114 Call RTHandles.Release, X0
	115 Move X0, X20
	116 Move X1, X19
	117 Call TextureXR.CreateBlackUintTexture, X0, X1
	118 Move X8, [X22]
	119 Move X1, X31
	120 Move X8, [X8+184]
	121 Move [X8+16], X0
	122 Call RTHandles.Alloc, X0
	123 Move X8, [X22]
	124 Move X1, X31
	125 Move X9, [X8+184]
	126 Move X8, [X9+64]
	127 Move [X9+32], X0
	128 Move X0, X8
	129 Call RTHandles.Release, X0
	130 Move X0, [X23]
	131 Call 0x1C17F10
	132 Move W1, 1
	133 Move W2, 1
	134 Move W3, 4
	135 Move W4, W31
	136 Move X5, X31
	137 Move X19, X0
	138 Call Texture2D..ctor, X0, X1, X2, X3, X4
	139 Compare X19, 0
	140 JumpIfEqual {379}
	141 Move X8, 0x776000
	142 Move X8, [X8+664]
	143 Move X0, X19
	144 Move X2, X31
	145 Move X1, [X8]
	146 Call Object.set_name, X0, X1
	147 Move X8, [X22]
	148 Move S0, W31
	149 Move S1, W31
	150 Move S2, W31
	151 Move X8, [X8+184]
	152 Move S3, W31
	153 Move X0, X19
	154 Move W1, W31
	155 Move W2, W31
	156 Move X3, X31
	157 Move [X8+48], X19
	158 Call Texture2D.SetPixel, X0, X1, X2, X3
	159 Move X8, [X22]
	160 Move X8, [X8+184]
	161 Move X0, [X8+48]
	162 Compare X0, 0
	163 JumpIfEqual {379}
	164 Move X1, X31
	165 Call Texture2D.Apply, X0
	166 Move X8, [X22]
	167 Move X1, X31
	168 Move X8, [X8+184]
	169 Move X0, [X8+48]
	170 Call RTHandles.Alloc, X0
	171 Move X8, [X22]
	172 Move X1, X31
	173 Move X9, [X8+184]
	174 Move X8, [X9+56]
	175 Move [X9+64], X0
	176 Move X0, X8
	177 Call RTHandles.Release, X0
	178 Move X8, [X22]
	179 Move X9, 0x776000
	180 Move X8, [X8+184]
	181 Move X9, [X9+632]
	182 Move X0, [X8+48]
	183 Move X1, [X9]
	184 Call TextureXR.CreateTexture2DArrayFromTexture2D, X0, X1
	185 Move X8, [X22]
	186 Move X1, X31
	187 Move X8, [X8+184]
	188 Move [X8+40], X0
	189 Call RTHandles.Alloc, X0
	190 Move X8, [X22]
	191 Move X1, X31
	192 Move X9, [X8+184]
	193 Move X8, [X9+96]
	194 Move [X9+56], X0
	195 Move X0, X8
	196 Call RTHandles.Release, X0
	197 Move X0, [X23]
	198 Call 0x1C17F10
	199 Move W1, 1
	200 Move W2, 1
	201 Move W3, 4
	202 Move W4, W31
	203 Move X5, X31
	204 Move X19, X0
	205 Call Texture2D..ctor, X0, X1, X2, X3, X4
	206 Compare X19, 0
	207 JumpIfEqual {379}
	208 Move X8, 0x776000
	209 Move X8, [X8+640]
	210 Move X0, X19
	211 Move X2, X31
	212 Move X1, [X8]
	213 Call Object.set_name, X0, X1
	214 Move X8, [X22]
	215 Move S0, 1
	216 Move S1, W31
	217 Move S2, 1
	218 Move X8, [X8+184]
	219 Move S3, 1
	220 Move X0, X19
	221 Move W1, W31
	222 Move W2, W31
	223 Move X3, X31
	224 Move [X8+80], X19
	225 Call Texture2D.SetPixel, X0, X1, X2, X3
	226 Move X8, [X22]
	227 Move X8, [X8+184]
	228 Move X0, [X8+80]
	229 Compare X0, 0
	230 JumpIfEqual {379}
	231 Move X1, X31
	232 Call Texture2D.Apply, X0
	233 Move X8, [X22]
	234 Move X1, X31
	235 Move X8, [X8+184]
	236 Move X0, [X8+80]
	237 Call RTHandles.Alloc, X0
	238 Move X8, [X22]
	239 Move X1, X31
	240 Move X9, [X8+184]
	241 Move X8, [X9+88]
	242 Move [X9+96], X0
	243 Move X0, X8
	244 Call RTHandles.Release, X0
	245 Move X8, [X22]
	246 Move X9, 0x776000
	247 Move X8, [X8+184]
	248 Move X9, [X9+680]
	249 Move X0, [X8+80]
	250 Move X1, [X9]
	251 Call TextureXR.CreateTexture2DArrayFromTexture2D, X0, X1
	252 Move X8, [X22]
	253 Move X1, X31
	254 Move X8, [X8+184]
	255 Move [X8+72], X0
	256 Call RTHandles.Alloc, X0
	257 Move X8, [X22]
	258 Move X1, X31
	259 Move X9, [X8+184]
	260 Move X8, [X9+136]
	261 Move [X9+88], X0
	262 Move X0, X8
	263 Call RTHandles.Release, X0
	264 Move X0, [X23]
	265 Call 0x1C17F10
	266 Move W1, 1
	267 Move W2, 1
	268 Move W3, 4
	269 Move W4, W31
	270 Move X5, X31
	271 Move X19, X0
	272 Call Texture2D..ctor, X0, X1, X2, X3, X4
	273 Compare X19, 0
	274 JumpIfEqual {379}
	275 Move X8, 0x776000
	276 Move X8, [X8+648]
	277 Move X0, X19
	278 Move X2, X31
	279 Move X1, [X8]
	280 Call Object.set_name, X0, X1
	281 Move X8, [X22]
	282 Move S0, W31
	283 Move S1, W31
	284 Move S2, W31
	285 Move X8, [X8+184]
	286 Move S3, 1
	287 Move X0, X19
	288 Move W1, W31
	289 Move W2, W31
	290 Move X3, X31
	291 Move [X8+104], X19
	292 Call Texture2D.SetPixel, X0, X1, X2, X3
	293 Move X8, [X22]
	294 Move X8, [X8+184]
	295 Move X0, [X8+104]
	296 Compare X0, 0
	297 JumpIfEqual {379}
	298 Move X1, X31
	299 Call Texture2D.Apply, X0
	300 Move X8, [X22]
	301 Move X1, X31
	302 Move X8, [X8+184]
	303 Move X0, [X8+104]
	304 Call RTHandles.Alloc, X0
	305 Move X8, [X22]
	306 Move X1, X31
	307 Move X9, [X8+184]
	308 Move X8, [X9+128]
	309 Move [X9+136], X0
	310 Move X0, X8
	311 Call RTHandles.Release, X0
	312 Move X8, [X22]
	313 Move X9, 0x776000
	314 Move X8, [X8+184]
	315 Move X9, [X9+672]
	316 Move X0, [X8+104]
	317 Move X1, [X9]
	318 Call TextureXR.CreateTexture2DArrayFromTexture2D, X0, X1
	319 Move X8, [X22]
	320 Move X1, X31
	321 Move X8, [X8+184]
	322 Move [X8+120], X0
	323 Call RTHandles.Alloc, X0
	324 Move X8, [X22]
	325 Move X1, X31
	326 Move X9, [X8+184]
	327 Move X8, [X9+144]
	328 Move [X9+128], X0
	329 Move X0, X8
	330 Call RTHandles.Release, X0
	331 Move X8, 0x776000
	332 Move X8, [X8+624]
	333 Move X0, [X8]
	334 Call TextureXR.CreateBlackTexture3D, X0
	335 Move X8, [X22]
	336 Move X1, X31
	337 Move X8, [X8+184]
	338 Move [X8+112], X0
	339 Call RTHandles.Alloc, X0
	340 Move X8, [X22]
	341 Move X1, X31
	342 Move X9, [X8+184]
	343 Move X8, [X9+168]
	344 Move [X9+144], X0
	345 Move X0, X8
	346 Call RTHandles.Release, X0
	347 Move X0, X31
	348 Call Texture2D.get_whiteTexture
	349 Move X1, X31
	350 Call RTHandles.Alloc, X0
	351 Move X8, [X22]
	352 Move X1, X31
	353 Move X9, [X8+184]
	354 Move X8, [X9+160]
	355 Move [X9+168], X0
	356 Move X0, X8
	357 Call RTHandles.Release, X0
	358 Move X0, X31
	359 Call Texture2D.get_whiteTexture
	360 Move X8, 0x776000
	361 Move X8, [X8+656]
	362 Move X1, [X8]
	363 Call TextureXR.CreateTexture2DArrayFromTexture2D, X0, X1
	364 Move X8, [X22]
	365 Move X1, X31
	366 Move X8, [X8+184]
	367 Move [X8+152], X0
	368 Call RTHandles.Alloc, X0
	369 Move X8, [X22]
	370 Move X8, [X8+184]
	371 Move [X8+160], X0
	372 Move X20, [X31+32]
	373 Move X19, [X31+40]
	374 Move X22, [X31+16]
	375 Move X21, [X31+24]
	376 Move X30, [X31+48]
	377 Move X23, [X31+56]
	378 Return 
	379 Call 0x1C17F20

Method: UnityEngine.Texture2DArray CreateTexture2DArrayFromTexture2D(UnityEngine.Texture2D source, System.String name)

Disassembly:
	0x039DEDCC STP X22, X21, [X31 + 0x170]
	0x039DEDD0 STP X20, X19, [X31 + 0x180]
	0x039DEDD4 ADRP X22, 0xA03000
	0x039DEDD8 ADRP X21, 0x775000
	0x039DEDDC LDRB W8, [X22 + 0xD9E]
	0x039DEDE0 LDR X21, [X21 + 0x300]
	0x039DEDE4 MOV X20, X1
	0x039DEDE8 MOV X19, X0
	0x039DEDEC TBNZ X8, 0x0, 0x39DEE04
	0x039DEDF0 ADRP X0, 0x775000
	0x039DEDF4 LDR X0, [X0 + 0x300]
	0x039DEDF8 BL 0x1C16CF4
	0x039DEDFC MOVZ W8, 0x1
	0x039DEE00 STRB W8, [X22 + 0xD9E]
	0x039DEE04 ADD X0, X31, 0xB0
	0x039DEE08 MOVZ W2, 0xB0
	0x039DEE0C MOV X1, X20
	0x039DEE10 BL 0x3EB1AC0
	0x039DEE14 LDR X0, [X21]
	0x039DEE18 LDR W8, [X0 + 0xE0]
	0x039DEE1C CBNZ W8, 0x39DEE24
	0x039DEE20 BL 0x1C16DFC
	0x039DEE24 ADD X0, X31, 0x0
	0x039DEE28 ADD X1, X31, 0xB0
	0x039DEE2C MOVZ W2, 0xB0
	0x039DEE30 BL 0x3EB1AC0
	0x039DEE34 ADD X1, X31, 0x0
	0x039DEE38 MOV X0, X19
	0x039DEE3C BL 0x39DEA4C
	0x039DEE40 LDP X20, X19, [X31 + 0x180]
	0x039DEE44 LDP X22, X21, [X31 + 0x170]
	0x039DEE48 LDP X29, X30, [X31 + 0x160]
	0x039DEE4C ORN W8, W31, W0, 0x0
	0x039DEE50 AND W0, W8, 0x1
	0x039DEE54 ADD X31, X31, 0x190
	0x039DEE58 RET
	0x039DEE5C STP X30, X21, [X31 - 0x20]!
	0x039DEE60 STP X20, X19, [X31 + 0x10]
	0x039DEE64 ADRP X20, 0xA03000
	0x039DEE68 ADRP X21, 0x775000
	0x039DEE6C ADRP X19, 0x775000
	0x039DEE70 LDRB W8, [X20 + 0xD9F]
	0x039DEE74 LDR X21, [X21 + 0x310]
	0x039DEE78 LDR X19, [X19 + 0x300]
	0x039DEE7C TBNZ X8, 0x0, 0x39DEEA0
	0x039DEE80 ADRP X0, 0x775000
	0x039DEE84 LDR X0, [X0 + 0x300]
	0x039DEE88 BL 0x1C16CF4
	0x039DEE8C ADRP X0, 0x775000
	0x039DEE90 LDR X0, [X0 + 0x310]
	0x039DEE94 BL 0x1C16CF4
	0x039DEE98 MOVZ W8, 0x1
	0x039DEE9C STRB W8, [X20 + 0xD9F]
	0x039DEEA0 LDR X0, [X21]
	0x039DEEA4 MOV X1, X31
	0x039DEEA8 BL 0x3C124EC
	0x039DEEAC LDR X8, [X19]
	0x039DEEB0 LDP X20, X19, [X31 + 0x10]
	0x039DEEB4 LDR X8, [X8 + 0xB8]
	0x039DEEB8 STR W0, [X8]
	0x039DEEBC LDP X30, X21, [X31], #0x20
	0x039DEEC0 RET
	0x039DEEC4 MOVZ W0, 0x8
	0x039DEEC8 RET
	0x039DEECC LDRB W8, [X0]
	0x039DEED0 CMP W8, 0x0
	0x039DEED4 CSET W0, EQ
	0x039DEED8 RET
	0x039DEEDC LDRB W8, [X0]
	0x039DEEE0 CMP W8, 0xFF
	0x039DEEE4 CSET W0, EQ
	0x039DEEE8 RET
	0x039DEEEC SUB X31, X31, 0x40
	0x039DEEF0 STP X30, X23, [X31 + 0x10]
	0x039DEEF4 STP X22, X21, [X31 + 0x20]
	0x039DEEF8 STP X20, X19, [X31 + 0x30]
	0x039DEEFC ADRP X23, 0xA03000
	0x039DEF00 ADRP X21, 0x775000
	0x039DEF04 ADRP X22, 0x720000
	0x039DEF08 ADRP X20, 0x71E000
	0x039DEF0C LDRB W8, [X23 + 0xDA0]
	0x039DEF10 LDR X21, [X21 + 0x318]
	0x039DEF14 LDR X22, [X22 + 0x6D8]
	0x039DEF18 LDR X20, [X20 + 0x9E8]
	0x039DEF1C MOV X19, X0
	0x039DEF20 TBNZ X8, 0x0, 0x39DEF50
	0x039DEF24 ADRP X0, 0x71E000
	0x039DEF28 LDR X0, [X0 + 0x9E8]
	0x039DEF2C BL 0x1C16CF4
	0x039DEF30 ADRP X0, 0x720000
	0x039DEF34 LDR X0, [X0 + 0x6D8]
	0x039DEF38 BL 0x1C16CF4
	0x039DEF3C ADRP X0, 0x775000
	0x039DEF40 LDR X0, [X0 + 0x318]
	0x039DEF44 BL 0x1C16CF4
	0x039DEF48 MOVZ W8, 0x1
	0x039DEF4C STRB W8, [X23 + 0xDA0]
	0x039DEF50 MOVZ W8, 0x8
	0x039DEF54 ADD X0, X31, 0xC
	0x039DEF58 MOV X1, X31
	0x039DEF5C STR W8, [X31 + 0xC]
	0x039DEF60 BL 0x3399B00
	0x039DEF64 LDR X8, [X21]
	0x039DEF68 LDR X2, [X22]
	0x039DEF6C MOV X1, X0
	0x039DEF70 MOV X3, X31
	0x039DEF74 MOV X0, X8
	0x039DEF78 BL 0x32274B8
	0x039DEF7C LDR X8, [X20]
	0x039DEF80 LDRB W20, [X19]
	0x039DEF84 MOV X19, X0
	0x039DEF88 LDR W9, [X8 + 0xE0]
	0x039DEF8C CBNZ W9, 0x39DEF98
	0x039DEF90 MOV X0, X8
	0x039DEF94 BL 0x1C16DFC
	0x039DEF98 MOVZ W1, 0x2
	0x039DEF9C MOV W0, W20
	0x039DEFA0 MOV X2, X31
	0x039DEFA4 BL 0x332241C
	0x039DEFA8 MOV X1, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0xA04000
	012 Move W8, [X20+3475]
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x71A000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0x776000
	023 Move X0, [X0+736]
	024 Call 0x1C17CF4
	025 Move X0, 0x773000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3475], W8
	030 Compare X19, 0
	031 JumpIfEqual {142}
	032 Move X8, [X19]
	033 Move X20, 0x773000
	034 Move X0, X19
	035 Move X9, [X8+392]
	036 Move X1, [X8+400]
	037 Move X20, [X20+1560]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X19]
	040 Move W23, W0
	041 Move X0, X19
	042 Move X9, [X8+424]
	043 Move X1, [X8+432]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X20]
	046 Move W24, W0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X27, 0xA04000
	053 Move W8, [X27+2875]
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x773000
	057 Move X0, [X0+1560]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X27+2875], W8
	061 Move X0, [X20]
	062 Move X22, 0x776000
	063 Move W8, [X0+224]
	064 Move X22, [X22+736]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X20]
	069 Move X8, [X0+184]
	070 Move X0, X19
	071 Move X1, X31
	072 Move W25, [X8]
	073 Call Texture2D.get_format, X0
	074 Move X8, [X22]
	075 Move W26, W0
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move W1, W23
	079 Move W2, W24
	080 Move W3, W25
	081 Move W4, W26
	082 Move W5, W31
	083 Move X6, X31
	084 Move X22, X0
	085 Call Texture2DArray..ctor, X0, X1, X2, X3, X4, X5
	086 Compare X22, 0
	087 JumpIfEqual {142}
	088 Move X23, 0x71A000
	089 Move X23, [X23+712]
	090 Move X0, X22
	091 Move X1, X21
	092 Move X2, X31
	093 Call Object.set_name, X0, X1
	094 Move W21, W31
	095 Move W24, 1
	096 Move X0, [X20]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move W8, [X27+2875]
	102 Compare W8, 0
	103 JumpIfNotEqual {107}
	104 Move X0, X20
	105 Call 0x1C17CF4
	106 Move [X27+2875], W24
	107 Move X0, [X20]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X20]
	113 Move X8, [X0+184]
	114 Move W8, [X8]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X23]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X19
	122 Move W1, W31
	123 Move W2, W31
	124 Move X3, X22
	125 Move W4, W21
	126 Move W5, W31
	127 Move X6, X31
	128 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5
	129 Add W21, W21, 1
	130 Move X0, X22
	131 Move X20, [X31+64]
	132 Move X19, [X31+72]
	133 Move X22, [X31+48]
	134 Move X21, [X31+56]
	135 Move X24, [X31+32]
	136 Move X23, [X31+40]
	137 Move X26, [X31+16]
	138 Move X25, [X31+24]
	139 Move X30, [X31+80]
	140 Move X27, [X31+88]
	141 Return X0
	142 Call 0x1C17F20

Method: UnityEngine.Texture CreateBlackUIntTextureArray(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.ComputeShader clearR32_UIntShader)

Disassembly:
	0x039DE9BC ADD X8, X31, 0x70
	0x039DE9C0 MOV X0, X31
	0x039DE9C4 MOV V8.16B, V0.16B
	0x039DE9C8 MOV V9.16B, V1.16B
	0x039DE9CC MOV V10.16B, V2.16B
	0x039DE9D0 MOV V11.16B, V3.16B
	0x039DE9D4 BL 0x3C13D70
	0x039DE9D8 ADD X0, X31, 0x0
	0x039DE9DC ADD X1, X31, 0x70
	0x039DE9E0 MOVZ W2, 0x6C
	0x039DE9E4 BL 0x3EB1AC0
	0x039DE9E8 MOVI V0.2D, 0x0
	0x039DE9EC ADD X0, X31, 0x70
	0x039DE9F0 ADD X1, X31, 0x0
	0x039DE9F4 STP V0, V0, [X31 + 0xD0]
	0x039DE9F8 STP V0, V0, [X31 + 0xB0]
	0x039DE9FC STP V0, V0, [X31 + 0x90]
	0x039DEA00 STP V0, V0, [X31 + 0x70]
	0x039DEA04 BL 0x39DE158
	0x039DEA08 ADD X0, X19, 0x30
	0x039DEA0C ADD X1, X31, 0x70
	0x039DEA10 MOVZ W2, 0x80
	0x039DEA14 STP D13, D12, [X19]
	0x039DEA18 STP S8, S9, [X19 + 0x10]
	0x039DEA1C STP S10, S11, [X19 + 0x18]
	0x039DEA20 STP S8, S9, [X19 + 0x20]
	0x039DEA24 STP S10, S11, [X19 + 0x28]
	0x039DEA28 BL 0x3EB1AC0
	0x039DEA2C LDP X20, X19, [X31 + 0x140]
	0x039DEA30 LDP X30, X21, [X31 + 0x130]
	0x039DEA34 LDR X29, [X31 + 0x120]
	0x039DEA38 LDP D9, D8, [X31 + 0x110]
	0x039DEA3C LDP D11, D10, [X31 + 0x100]
	0x039DEA40 LDP D13, D12, [X31 + 0xF0]
	0x039DEA44 ADD X31, X31, 0x150
	0x039DEA48 RET
	0x039DEA4C SUB X31, X31, 0x150
	0x039DEA50 STP X29, X30, [X31 + 0x130]
	0x039DEA54 STP X20, X19, [X31 + 0x140]
	0x039DEA58 LDR V0, [X1]
	0x039DEA5C LDR V1, [X0]
	0x039DEA60 FCMP S1, S0
	0x039DEA64 B.NE 0x39DEB4C
	0x039DEA68 LDR V0, [X1 + 0x4]
	0x039DEA6C LDR V1, [X0 + 0x4]
	0x039DEA70 FCMP S1, S0
	0x039DEA74 B.NE 0x39DEB4C
	0x039DEA78 LDR V0, [X1 + 0x8]
	0x039DEA7C LDR V1, [X0 + 0x8]
	0x039DEA80 FCMP S1, S0
	0x039DEA84 B.NE 0x39DEB4C
	0x039DEA88 LDR V0, [X1 + 0xC]
	0x039DEA8C LDR V1, [X0 + 0xC]
	0x039DEA90 FCMP S1, S0
	0x039DEA94 B.NE 0x39DEB4C
	0x039DEA98 LDR V0, [X1 + 0x10]
	0x039DEA9C LDR V1, [X0 + 0x10]
	0x039DEAA0 FCMP S1, S0
	0x039DEAA4 B.NE 0x39DEB4C
	0x039DEAA8 LDR V0, [X1 + 0x14]
	0x039DEAAC LDR V1, [X0 + 0x14]
	0x039DEAB0 FCMP S1, S0
	0x039DEAB4 B.NE 0x39DEB4C
	0x039DEAB8 LDR V0, [X1 + 0x18]
	0x039DEABC LDR V1, [X0 + 0x18]
	0x039DEAC0 FCMP S1, S0
	0x039DEAC4 B.NE 0x39DEB4C
	0x039DEAC8 LDR V0, [X1 + 0x1C]
	0x039DEACC LDR V1, [X0 + 0x1C]
	0x039DEAD0 FCMP S1, S0
	0x039DEAD4 B.NE 0x39DEB4C
	0x039DEAD8 LDR V0, [X1 + 0x20]
	0x039DEADC LDR V1, [X0 + 0x20]
	0x039DEAE0 FCMP S1, S0
	0x039DEAE4 B.NE 0x39DEB4C
	0x039DEAE8 LDR V0, [X1 + 0x24]
	0x039DEAEC LDR V1, [X0 + 0x24]
	0x039DEAF0 FCMP S1, S0
	0x039DEAF4 B.NE 0x39DEB4C
	0x039DEAF8 LDR V0, [X1 + 0x28]
	0x039DEAFC LDR V1, [X0 + 0x28]
	0x039DEB00 FCMP S1, S0
	0x039DEB04 B.NE 0x39DEB4C
	0x039DEB08 LDR V0, [X1 + 0x2C]
	0x039DEB0C LDR V1, [X0 + 0x2C]
	0x039DEB10 FCMP S1, S0
	0x039DEB14 B.NE 0x39DEB4C
	0x039DEB18 ADD X19, X0, 0x30
	0x039DEB1C ADD X0, X31, 0x80
	0x039DEB20 MOVZ W2, 0xB0
	0x039DEB24 ADD X20, X31, 0x80
	0x039DEB28 BL 0x3EB1AC0
	0x039DEB2C ADD X1, X20, 0x30
	0x039DEB30 ADD X0, X31, 0x0
	0x039DEB34 MOVZ W2, 0x80
	0x039DEB38 BL 0x3EB1AC0
	0x039DEB3C ADD X1, X31, 0x0
	0x039DEB40 MOV X0, X19
	0x039DEB44 BL 0x39DE4AC
	0x039DEB48 B 0x39DEB50
	0x039DEB4C MOV W0, W31
	0x039DEB50 LDP X20, X19, [X31 + 0x140]
	0x039DEB54 LDP X29, X30, [X31 + 0x130]
	0x039DEB58 AND W0, W0, 0x1
	0x039DEB5C ADD X31, X31, 0x150
	0x039DEB60 RET
	0x039DEB64 SUB X31, X31, 0x190
	0x039DEB68 STR X29, [X31 + 0x160]
	0x039DEB6C STP X30, X21, [X31 + 0x170]
	0x039DEB70 STP X20, X19, [X31 + 0x180]
	0x039DEB74 ADRP X21, 0xA03000
	0x039DEB78 LDRB W8, [X21 + 0xD9B]
	0x039DEB7C MOV X20, X1
	0x039DEB80 MOV X19, X0
	0x039DEB84 TBNZ X8, 0x0, 0x39DEB9C
	0x039DEB88 ADRP X0, 0x775000
	0x039DEB8C LDR X0, [X0 + 0x300]
	0x039DEB90 BL 0x1C16CF4
	0x039DEB94 MOVZ W8, 0x1
	0x039DEB98 STRB W8, [X21 + 0xD9B]
	0x039DEB9C CBZ X20, 0x39DEBB8
	0x039DEBA0 ADRP X21, 0x775000
	0x039DEBA4 LDR X21, [X21 + 0x300]
	0x039DEBA8 LDR X9, [X20]
	0x039DEBAC LDR X8, [X21]
	0x039DEBB0 CMP X9, X8
	0x039DEBB4 B.EQ 0x39DEBC0
	0x039DEBB8 MOV W0, W31
	0x039DEBBC B 0x39DEC04
	0x039DEBC0 MOV X0, X20
	0x039DEBC4 BL 0x1C16E08
	0x039DEBC8 MOV X1, X0
	0x039DEBCC ADD X0, X31, 0xB0
	0x039DEBD0 MOVZ W2, 0xB0
	0x039DEBD4 BL 0x3EB1AC0
	0x039DEBD8 LDR X0, [X21]
	0x039DEBDC LDR W8, [X0 + 0xE0]
	0x039DEBE0 CBNZ W8, 0x39DEBE8
	0x039DEBE4 BL 0x1C16DFC
	0x039DEBE8 ADD X0, X31, 0x0
	0x039DEBEC ADD X1, X31, 0xB0
	0x039DEBF0 MOVZ W2, 0xB0
	0x039DEBF4 BL 0x3EB1AC0
	0x039DEBF8 ADD X1, X31, 0x0
	0x039DEBFC MOV X0, X19
	0x039DEC00 BL 0x39DEA4C
	0x039DEC04 LDP X20, X19, [X31 + 0x180]
	0x039DEC08 LDP X30, X21, [X31 + 0x170]
	0x039DEC0C LDR X29, [X31 + 0x160]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+144], X24
	004 Move [X31+152], X23
	005 Move [X31+160], X22
	006 Move [X31+168], X21
	007 Move [X31+176], X20
	008 Move [X31+184], X19
	009 Move X21, 0xA04000
	010 Move X22, 0x718000
	011 Move W8, [X21+3476]
	012 Move X22, [X22+304]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x718000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move X0, 0x773000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0x776000
	026 Move X0, [X0+688]
	027 Call 0x1C17CF4
	028 Move X0, 0x776000
	029 Move X0, [X0+696]
	030 Call 0x1C17CF4
	031 Move X0, 0x776000
	032 Move X0, [X0+704]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3476], W8
	036 Move X0, [X22]
	037 Call 0x1C17F10
	038 Move W1, 1
	039 Move W2, 1
	040 Move W4, 37
	041 Move W3, W31
	042 Move X5, X31
	043 Move X21, X0
	044 Call RenderTexture..ctor, X0, X1, X2, X3, X4
	045 Compare X21, 0
	046 JumpIfEqual {170}
	047 Move X8, [X21]
	048 Move X23, 0x773000
	049 Move W1, 5
	050 Move X0, X21
	051 Move X9, [X8+472]
	052 Move X2, [X8+480]
	053 Move X23, [X23+1560]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X24, 0xA04000
	061 Move W8, [X24+2875]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x773000
	065 Move X0, [X0+1560]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X24+2875], W8
	069 Move X0, [X23]
	070 Move X22, 0x776000
	071 Move W8, [X0+224]
	072 Move X22, [X22+704]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Move X0, X21
	079 Move X2, X31
	080 Move W1, [X8]
	081 Call RenderTexture.set_volumeDepth, X0, X1
	082 Move X0, X21
	083 Move W1, W31
	084 Move X2, X31
	085 Call RenderTexture.set_useMipMap, X0, X1
	086 Move X0, X21
	087 Move W1, W31
	088 Move X2, X31
	089 Call RenderTexture.set_autoGenerateMips, X0, X1
	090 Move W1, 1
	091 Move X0, X21
	092 Move X2, X31
	093 Call RenderTexture.set_enableRandomWrite, X0, X1
	094 Move X1, [X22]
	095 Move X0, X21
	096 Move X2, X31
	097 Call Object.set_name, X0, X1
	098 Move X0, X21
	099 Move X1, X31
	100 Call RenderTexture.Create, X0
	101 Compare X19, 0
	102 JumpIfEqual {170}
	103 Move X8, 0x776000
	104 Move X8, [X8+688]
	105 Move X0, X19
	106 Move X2, X31
	107 Move X1, [X8]
	108 Call ComputeShader.FindKernel, X0, X1
	109 Move W22, W0
	110 Add X8, X31, 40
	111 Move X0, X21
	112 Move X1, X31
	113 Call RenderTargetIdentifier.op_Implicit, X0
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X8, [X31+72]
	117 Move [X31+80], V0
	118 Move [X31+88], V1
	119 Move [X31+112], X8
	120 Compare X20, 0
	121 JumpIfEqual {170}
	122 Move X8, 0x776000
	123 Move X8, [X8+696]
	124 Move V0, [X31+80]
	125 Move V1, [X31+96]
	126 Move X9, [X31+112]
	127 Add X4, X31, 0
	128 Move X3, [X8]
	129 Move X0, X20
	130 Move X1, X19
	131 Move W2, W22
	132 Move X5, X31
	133 Move [X31], V0
	134 Move [X31+8], V1
	135 Move [X31+32], X9
	136 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	137 Move W8, [X24+2875]
	138 Compare W8, 0
	139 JumpIfNotEqual {145}
	140 Move X0, 0x773000
	141 Move X0, [X0+1560]
	142 Call 0x1C17CF4
	143 Move W8, 1
	144 Move [X24+2875], W8
	145 Move X0, [X23]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {151}
	149 Call 0x1C17DFC
	150 Move X0, [X23]
	151 Move X8, [X0+184]
	152 Move W3, 1
	153 Move W4, 1
	154 Move X0, X20
	155 Move W5, [X8]
	156 Move X1, X19
	157 Move W2, W22
	158 Move X6, X31
	159 Call CommandBuffer.DispatchCompute, X0, X1, X2, X3, X4, X5
	160 Move X0, X21
	161 Move X20, [X31+176]
	162 Move X19, [X31+184]
	163 Move X22, [X31+160]
	164 Move X21, [X31+168]
	165 Move X24, [X31+144]
	166 Move X23, [X31+152]
	167 Move X30, [X31+128]
	168 Add X31, X31, 192
	169 Return X0
	170 Call 0x1C17F20

Method: UnityEngine.Texture CreateBlackUintTexture(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.ComputeShader clearR32_UIntShader)

Disassembly:
	0x039DEC10 AND W0, W0, 0x1
	0x039DEC14 ADD X31, X31, 0x190
	0x039DEC18 RET
	0x039DEC1C SUB X31, X31, 0x190
	0x039DEC20 STP D15, D14, [X31 + 0x120]
	0x039DEC24 STP D13, D12, [X31 + 0x130]
	0x039DEC28 STP D11, D10, [X31 + 0x140]
	0x039DEC2C STP D9, D8, [X31 + 0x150]
	0x039DEC30 STR X29, [X31 + 0x160]
	0x039DEC34 STP X30, X21, [X31 + 0x170]
	0x039DEC38 STP X20, X19, [X31 + 0x180]
	0x039DEC3C ADRP X21, 0xA03000
	0x039DEC40 ADRP X20, 0x73D000
	0x039DEC44 LDRB W8, [X21 + 0xD9C]
	0x039DEC48 LDR X20, [X20 + 0xB10]
	0x039DEC4C MOV X19, X0
	0x039DEC50 TBNZ X8, 0x0, 0x39DEC74
	0x039DEC54 ADRP X0, 0x775000
	0x039DEC58 LDR X0, [X0 + 0x308]
	0x039DEC5C BL 0x1C16CF4
	0x039DEC60 ADRP X0, 0x73D000
	0x039DEC64 LDR X0, [X0 + 0xB10]
	0x039DEC68 BL 0x1C16CF4
	0x039DEC6C MOVZ W8, 0x1
	0x039DEC70 STRB W8, [X21 + 0xD9C]
	0x039DEC74 LDR V0, [X19]
	0x039DEC78 LDR V1, [X19 + 0x8]
	0x039DEC7C ADRP X21, 0x775000
	0x039DEC80 LDP S13, S14, [X19 + 0x14]
	0x039DEC84 STR S0, [X31 + 0x16C]
	0x039DEC88 LDR V0, [X19 + 0x4]
	0x039DEC8C LDP S15, S8, [X19 + 0x1C]
	0x039DEC90 LDP S9, S10, [X19 + 0x24]
	0x039DEC94 LDR V11, [X19 + 0x2C]
	0x039DEC98 STR S0, [X31 + 0x168]
	0x039DEC9C LDP S0, S12, [X19 + 0xC]
	0x039DECA0 ADD X1, X19, 0x30
	0x039DECA4 ADD X0, X31, 0x20
	0x039DECA8 MOVZ W2, 0x80
	0x039DECAC STP S0, S1, [X31 + 0x18]
	0x039DECB0 LDR X21, [X21 + 0x308]
	0x039DECB4 BL 0x3EB1AC0
	0x039DECB8 LDR X0, [X20]
	0x039DECBC LDR W8, [X0 + 0xE0]
	0x039DECC0 CBNZ W8, 0x39DECC8
	0x039DECC4 BL 0x1C16DFC
	0x039DECC8 LDR X19, [X21]
	0x039DECCC ADD X0, X31, 0xA0
	0x039DECD0 ADD X1, X31, 0x20
	0x039DECD4 MOVZ W2, 0x80
	0x039DECD8 BL 0x3EB1AC0
	0x039DECDC LDR V0, [X31 + 0x16C]
	0x039DECE0 LDR V1, [X31 + 0x168]
	0x039DECE4 LDP S3, S2, [X31 + 0x18]
	0x039DECE8 ADD X0, X31, 0xA0
	0x039DECEC MOV V4.16B, V12.16B
	0x039DECF0 MOV V5.16B, V13.16B
	0x039DECF4 MOV V6.16B, V14.16B
	0x039DECF8 MOV V7.16B, V15.16B
	0x039DECFC MOV X1, X19
	0x039DED00 STP S10, S11, [X31 + 0x8]
	0x039DED04 STP S8, S9, [X31]
	0x039DED08 BL 0x21E90C8
	0x039DED0C LDP X20, X19, [X31 + 0x180]
	0x039DED10 LDP X30, X21, [X31 + 0x170]
	0x039DED14 LDR X29, [X31 + 0x160]
	0x039DED18 LDP D9, D8, [X31 + 0x150]
	0x039DED1C LDP D11, D10, [X31 + 0x140]
	0x039DED20 LDP D13, D12, [X31 + 0x130]
	0x039DED24 LDP D15, D14, [X31 + 0x120]
	0x039DED28 ADD X31, X31, 0x190
	0x039DED2C RET
	0x039DED30 SUB X31, X31, 0x190
	0x039DED34 STP X29, X30, [X31 + 0x160]
	0x039DED38 STP X22, X21, [X31 + 0x170]
	0x039DED3C STP X20, X19, [X31 + 0x180]
	0x039DED40 ADRP X22, 0xA03000
	0x039DED44 ADRP X21, 0x775000
	0x039DED48 LDRB W8, [X22 + 0xD9D]
	0x039DED4C LDR X21, [X21 + 0x300]
	0x039DED50 MOV X20, X1
	0x039DED54 MOV X19, X0
	0x039DED58 TBNZ X8, 0x0, 0x39DED70
	0x039DED5C ADRP X0, 0x775000
	0x039DED60 LDR X0, [X0 + 0x300]
	0x039DED64 BL 0x1C16CF4
	0x039DED68 MOVZ W8, 0x1
	0x039DED6C STRB W8, [X22 + 0xD9D]
	0x039DED70 ADD X0, X31, 0xB0
	0x039DED74 MOVZ W2, 0xB0
	0x039DED78 MOV X1, X20
	0x039DED7C BL 0x3EB1AC0
	0x039DED80 LDR X0, [X21]
	0x039DED84 LDR W8, [X0 + 0xE0]
	0x039DED88 CBNZ W8, 0x39DED90
	0x039DED8C BL 0x1C16DFC
	0x039DED90 ADD X0, X31, 0x0
	0x039DED94 ADD X1, X31, 0xB0
	0x039DED98 MOVZ W2, 0xB0
	0x039DED9C BL 0x3EB1AC0
	0x039DEDA0 ADD X1, X31, 0x0
	0x039DEDA4 MOV X0, X19
	0x039DEDA8 BL 0x39DEA4C
	0x039DEDAC LDP X20, X19, [X31 + 0x180]
	0x039DEDB0 LDP X22, X21, [X31 + 0x170]
	0x039DEDB4 LDP X29, X30, [X31 + 0x160]
	0x039DEDB8 AND W0, W0, 0x1
	0x039DEDBC ADD X31, X31, 0x190
	0x039DEDC0 RET
	0x039DEDC4 SUB X31, X31, 0x190
	0x039DEDC8 STP X29, X30, [X31 + 0x160]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X21, 0xA04000
	008 Move X22, 0x718000
	009 Move W8, [X21+3477]
	010 Move X22, [X22+304]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x718000
	018 Move X0, [X0+304]
	019 Call 0x1C17CF4
	020 Move X0, 0x776000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x776000
	024 Move X0, [X0+720]
	025 Call 0x1C17CF4
	026 Move X0, 0x776000
	027 Move X0, [X0+728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3477], W8
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move W1, 1
	034 Move W2, 1
	035 Move W4, 37
	036 Move W3, W31
	037 Move X5, X31
	038 Move X21, X0
	039 Call RenderTexture..ctor, X0, X1, X2, X3, X4
	040 Compare X21, 0
	041 JumpIfEqual {125}
	042 Move X8, [X21]
	043 Move X22, 0x776000
	044 Move W1, 2
	045 Move X0, X21
	046 Move X9, [X8+472]
	047 Move X2, [X8+480]
	048 Move X22, [X22+728]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move W1, 1
	051 Move X0, X21
	052 Move X2, X31
	053 Call RenderTexture.set_volumeDepth, X0, X1
	054 Move X0, X21
	055 Move W1, W31
	056 Move X2, X31
	057 Call RenderTexture.set_useMipMap, X0, X1
	058 Move X0, X21
	059 Move W1, W31
	060 Move X2, X31
	061 Call RenderTexture.set_autoGenerateMips, X0, X1
	062 Move W1, 1
	063 Move X0, X21
	064 Move X2, X31
	065 Call RenderTexture.set_enableRandomWrite, X0, X1
	066 Move X1, [X22]
	067 Move X0, X21
	068 Move X2, X31
	069 Call Object.set_name, X0, X1
	070 Move X0, X21
	071 Move X1, X31
	072 Call RenderTexture.Create, X0
	073 Compare X19, 0
	074 JumpIfEqual {125}
	075 Move X8, 0x776000
	076 Move X8, [X8+720]
	077 Move X0, X19
	078 Move X2, X31
	079 Move X1, [X8]
	080 Call ComputeShader.FindKernel, X0, X1
	081 Move W22, W0
	082 Add X8, X31, 40
	083 Move X0, X21
	084 Move X1, X31
	085 Call RenderTargetIdentifier.op_Implicit, X0
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X8, [X31+72]
	089 Move [X31+80], V0
	090 Move [X31+88], V1
	091 Move [X31+112], X8
	092 Compare X20, 0
	093 JumpIfEqual {125}
	094 Move X8, 0x776000
	095 Move X8, [X8+712]
	096 Move V0, [X31+80]
	097 Move V1, [X31+96]
	098 Move X9, [X31+112]
	099 Add X4, X31, 0
	100 Move X3, [X8]
	101 Move X0, X20
	102 Move X1, X19
	103 Move W2, W22
	104 Move X5, X31
	105 Move [X31], V0
	106 Move [X31+8], V1
	107 Move [X31+32], X9
	108 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	109 Move W3, 1
	110 Move W4, 1
	111 Move W5, 1
	112 Move X0, X20
	113 Move X1, X19
	114 Move W2, W22
	115 Move X6, X31
	116 Call CommandBuffer.DispatchCompute, X0, X1, X2, X3, X4, X5
	117 Move X0, X21
	118 Move X20, [X31+160]
	119 Move X19, [X31+168]
	120 Move X22, [X31+144]
	121 Move X21, [X31+152]
	122 Move X30, [X31+128]
	123 Add X31, X31, 176
	124 Return X0
	125 Call 0x1C17F20

Method: UnityEngine.Texture3D CreateBlackTexture3D(System.String name)

Disassembly:
	0x039DEFAC MOV X0, X19
	0x039DEFB0 MOV X2, X31
	0x039DEFB4 BL 0x321EFD0
	0x039DEFB8 CBZ X0, 0x39DEFE0
	0x039DEFBC MOVZ W1, 0x20
	0x039DEFC0 MOVZ W2, 0x30
	0x039DEFC4 MOV X3, X31
	0x039DEFC8 BL 0x32296D0
	0x039DEFCC LDP X20, X19, [X31 + 0x30]
	0x039DEFD0 LDP X22, X21, [X31 + 0x20]
	0x039DEFD4 LDP X30, X23, [X31 + 0x10]
	0x039DEFD8 ADD X31, X31, 0x40
	0x039DEFDC RET
	0x039DEFE0 BL 0x1C16F20
	0x039DEFE4 LDRB W8, [X0]
	0x039DEFE8 LSRV W8, W8, W1
	0x039DEFEC AND W0, W8, 0x1
	0x039DEFF0 RET
	0x039DEFF4 AND W8, W1, 0xFF
	0x039DEFF8 LSRV W8, W8, W0
	0x039DEFFC AND W0, W8, 0x1
	0x039DF000 RET
	0x039DF004 LDRB W8, [X0]
	0x039DF008 MOVZ W9, 0x1
	0x039DF00C LSLV W9, W9, W1
	0x039DF010 ANDS W31, W2, 0x1
	0x039DF014 ORR W10, W9, W8, 0x0
	0x039DF018 BIC W8, W8, W9, 0x0
	0x039DF01C CSEL W8, W10, W8, NE
	0x039DF020 STRB W8, [X0]
	0x039DF024 RET
	0x039DF028 LDRB W8, [X1]
	0x039DF02C MOVZ W9, 0x1
	0x039DF030 LSLV W9, W9, W0
	0x039DF034 ANDS W31, W2, 0x1
	0x039DF038 ORR W10, W9, W8, 0x0
	0x039DF03C BIC W8, W8, W9, 0x0
	0x039DF040 CSEL W8, W10, W8, NE
	0x039DF044 STRB W8, [X1]
	0x039DF048 RET
	0x039DF04C STRB W1, [X0]
	0x039DF050 RET
	0x039DF054 STP X30, X23, [X31 - 0x30]!
	0x039DF058 STP X22, X21, [X31 + 0x10]
	0x039DF05C STP X20, X19, [X31 + 0x20]
	0x039DF060 ADRP X21, 0xA02000
	0x039DF064 LDRB W8, [X21 + 0xDA1]
	0x039DF068 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xA04000
	006 Move X21, 0x775000
	007 Move W8, [X19+3478]
	008 Move X21, [X21+456]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x775000
	015 Move X0, [X0+456]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3478], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W1, 1
	022 Move W2, 1
	023 Move W3, 1
	024 Move W4, 4
	025 Move W5, W31
	026 Move X6, X31
	027 Move X19, X0
	028 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5
	029 Compare X19, 0
	030 JumpIfEqual {56}
	031 Move X0, X19
	032 Move X1, X20
	033 Move X2, X31
	034 Call Object.set_name, X0, X1
	035 Move S0, W31
	036 Move S1, W31
	037 Move S2, W31
	038 Move S3, 1
	039 Move X0, X19
	040 Move W1, W31
	041 Move W2, W31
	042 Move W3, W31
	043 Move W4, W31
	044 Move X5, X31
	045 Call Texture3D.SetPixel, X0, X1, X2, X3, X4, X5
	046 Move X0, X19
	047 Move W1, W31
	048 Move X2, X31
	049 Call Texture3D.Apply, X0, X1
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039DF06C MOV X20, X0
	0x039DF070 TBNZ X8, 0x0, 0x39DF094
	0x039DF074 ADRP X0, 0x774000
	0x039DF078 LDR X0, [X0 + 0x320]
	0x039DF07C BL 0x1C16CF4
	0x039DF080 ADRP X0, 0x774000
	0x039DF084 LDR X0, [X0 + 0x328]
	0x039DF088 BL 0x1C16CF4
	0x039DF08C MOVZ W8, 0x1
	0x039DF090 STRB W8, [X21 + 0xDA1]
	0x039DF094 STRB W31, [X20]
	0x039DF098 CBZ X19, 0x39DF0F4
	0x039DF09C ADRP X8, 0x774000
	0x039DF0A0 LDR X8, [X8 + 0x320]
	0x039DF0A4 MOV X0, X19
	0x039DF0A8 LDR X1, [X8]
	0x039DF0AC BL 0x21BE3F4
	0x039DF0B0 SUBS W21, W0, 0x1
	0x039DF0B4 B.MI 0x39DF0F4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA03000
	005 Move X20, 0x772000
	006 Move W8, [X19+3479]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x772000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3479], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

