Type: UnityEngine.Rendering.NoInterpCubemapParameter

Method: System.Void .ctor(UnityEngine.Cubemap value, System.Boolean overrideState = False)

Disassembly:
	0x039F5370 ADRP X0, 0x75E000
	0x039F5374 LDR X0, [X0 + 0x860]
	0x039F5378 BL 0x1C16CF4
	0x039F537C ADRP X0, 0x75E000
	0x039F5380 LDR X0, [X0 + 0x868]
	0x039F5384 BL 0x1C16CF4
	0x039F5388 ADRP X0, 0x75E000
	0x039F538C LDR X0, [X0 + 0x870]
	0x039F5390 BL 0x1C16CF4
	0x039F5394 ADRP X0, 0x75E000
	0x039F5398 LDR X0, [X0 + 0x880]
	0x039F539C BL 0x1C16CF4
	0x039F53A0 MOVZ W8, 0x1
	0x039F53A4 STRB W8, [X20 + 0xEB7]
	0x039F53A8 MOVI V0.2D, 0x0
	0x039F53AC STR X31, [X31 + 0x50]
	0x039F53B0 STP V0, V0, [X31 + 0x30]
	0x039F53B4 LDR X0, [X19 + 0x10]
	0x039F53B8 CBZ X0, 0x39F54D8
	0x039F53BC ADRP X8, 0x75E000
	0x039F53C0 LDR X8, [X8 + 0x858]
	0x039F53C4 ADRP X21, 0x75E000
	0x039F53C8 LDR X21, [X21 + 0x868]
	0x039F53CC ADRP X24, 0x726000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9ED000
	008 Move X23, 0x75F000
	009 Move W8, [X22+3747]
	010 Move X23, [X23+2416]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x75F000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3747], W8
	023 Move X3, [X23]
	024 And W2, W20, 1
	025 Move X0, X21
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call VolumeParameter`1<Object>..ctor, X0, X1, X2
	034 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x039F53D0 LDR X1, [X8]
	0x039F53D4 ADRP X22, 0x75E000
	0x039F53D8 ADRP X23, 0x75E000
	0x039F53DC LDR X24, [X24 + 0x8F8]
	0x039F53E0 LDR X22, [X22 + 0x9D8]
	0x039F53E4 LDR X23, [X23 + 0x860]
	0x039F53E8 ADD X8, X31, 0x8
	0x039F53EC BL 0x2AA54BC
	0x039F53F0 LDUR V0, [X31 + 0x8]
	0x039F53F4 LDUR V1, [X31 + 0x18]
	0x039F53F8 LDR X8, [X31 + 0x28]
	0x039F53FC STP V0, V1, [X31 + 0x30]
	0x039F5400 STR X8, [X31 + 0x50]
	0x039F5404 LDR X1, [X21]
	0x039F5408 ADD X0, X31, 0x30
	0x039F540C BL 0x2C0A728
	0x039F5410 TBZ X0, 0x0, 0x39F5438
	0x039F5414 LDR X0, [X24]
	0x039F5418 LDR X20, [X31 + 0x48]
	0x039F541C LDR W8, [X0 + 0xE0]
	0x039F5420 CBNZ W8, 0x39F5428
	0x039F5424 BL 0x1C16DFC
	0x039F5428 MOV X0, X20
	0x039F542C MOV X1, X31
	0x039F5430 BL 0x39E1DF8
	0x039F5434 B 0x39F5404
	0x039F5438 LDR X1, [X23]
	0x039F543C ADD X0, X31, 0x30
	0x039F5440 BL 0x2C0A83C
	0x039F5444 LDR X0, [X19 + 0x10]
	0x039F5448 CBZ X0, 0x39F54D8
	0x039F544C LDR X1, [X22]
	0x039F5450 BL 0x2AA5220
	0x039F5454 LDR X21, [X19 + 0x18]
	0x039F5458 CBZ X21, 0x39F54BC
	0x039F545C LDR X8, [X21 + 0x18]
	0x039F5460 CMP W8, 0x1
	0x039F5464 B.LT 0x39F54B8
	0x039F5468 MOV X22, X31
	0x039F546C MOV X20, X31
	0x039F5470 AND X8, X8, 0x0
	0x039F5474 ADD X23, X21, 0x28
	0x039F5478 CMP X22, W8, UXTW
	0x039F547C B.CS 0x39F54D4
	0x039F5480 LDR X9, [X23]
	0x039F5484 CMP X9, 0x0
	0x039F5488 CSEL X20, X20, X9, EQ
	0x039F548C CBZ X9, 0x39F54A8
	0x039F5490 CBZ X20, 0x39F54D8
	0x039F5494 LDR X8, [X20]
	0x039F5498 MOV X0, X20
	0x039F549C LDP X9, X1, [X8 + 0x1E8]
	0x039F54A0 BLR X9
	0x039F54A4 LDR W8, [X21 + 0x18]
	0x039F54A8 ADD X22, X22, 0x1
	0x039F54AC CMP X22, W8, SXTW
	0x039F54B0 ADD X23, X23, 0x10
	0x039F54B4 B.LT 0x39F5478
	0x039F54B8 STR X31, [X19 + 0x18]
	0x039F54BC LDP X20, X19, [X31 + 0x90]
	0x039F54C0 LDP X22, X21, [X31 + 0x80]
	0x039F54C4 LDP X24, X23, [X31 + 0x70]
	0x039F54C8 LDR X30, [X31 + 0x60]
	0x039F54CC ADD X31, X31, 0xA0
	0x039F54D0 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9ED000
	007 Move X22, 0x75F000
	008 Move X21, 0x6FF000
	009 Move W8, [X20+3748]
	010 Move X22, [X22+2424]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x727000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x6FF000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x75F000
	024 Move X0, [X0+2424]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3748], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call VolumeParameter`1<Object>.GetHashCode, X0
	031 Move X8, [X19]
	032 Move W20, W0
	033 Move X0, X19
	034 Move X9, [X8+536]
	035 Move X1, [X8+544]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move X8, [X19]
	053 Move X20, 0x727000
	054 Move X0, X19
	055 Move X9, [X8+536]
	056 Move X1, [X8+544]
	057 Move X20, [X20+2296]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call CoreUtils.GetTextureHash, X0
	069 Move W8, 23
	070 Multiply W20, W0, W8
	071 Move W0, W20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0

