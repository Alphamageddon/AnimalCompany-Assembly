Type: UnityEngine.Rendering.DebugDisplaySettingsPanel

Method: System.String get_PanelName()

Disassembly:
	0x039A1610 MOV W0, W31
	0x039A1614 RET
	0x039A1618 STP X30, X21, [X31 - 0x20]!
	0x039A161C STP X20, X19, [X31 + 0x10]
	0x039A1620 ADRP X20, 0xA40000
	0x039A1624 ADRP X21, 0x7B0000
	0x039A1628 LDRB W8, [X20 + 0xB89]
	0x039A162C LDR X21, [X21 + 0x448]
	0x039A1630 MOV X19, X0
	0x039A1634 TBNZ X8, 0x0, 0x39A164C
	0x039A1638 ADRP X0, 0x7B0000
	0x039A163C LDR X0, [X0 + 0x448]
	0x039A1640 BL 0x1C16CF4
	0x039A1644 MOVZ W8, 0x1
	0x039A1648 STRB W8, [X20 + 0xB89]
	0x039A164C LDR X0, [X21]
	0x039A1650 BL 0x1C16F10
	0x039A1654 MOV X1, X19
	0x039A1658 MOV X20, X0
	0x039A165C BL 0x39A1670
	0x039A1660 MOV X0, X20
	0x039A1664 LDP X20, X19, [X31 + 0x10]
	0x039A1668 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA41000
	005 Move W8, [X20+2943]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x755000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2943], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {22}
	019 Move X0, [X8+16]
	020 Compare X0, 0
	021 JumpIfNotEqual {27}
	022 Move X8, 0x755000
	023 Move X8, [X8+632]
	024 Move X8, [X8]
	025 Move X8, [X8+184]
	026 Move X0, [X8]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0

Method: System.Int32 get_Order()

Disassembly:
	0x039A166C RET
	0x039A1670 STR X30, [X31 - 0x50]!
	0x039A1674 STP X26, X25, [X31 + 0x10]
	0x039A1678 STP X24, X23, [X31 + 0x20]
	0x039A167C STP X22, X21, [X31 + 0x30]
	0x039A1680 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+24]
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: UnityEngine.Rendering.DebugUI/Widget[] get_Widgets()

Disassembly:
	0x039A1684 ADRP X25, 0xA40000
	0x039A1688 ADRP X26, 0x7B0000
	0x039A168C ADRP X24, 0x7B0000
	0x039A1690 ADRP X23, 0x7B0000
	0x039A1694 ADRP X22, 0x7B0000
	0x039A1698 ADRP X21, 0x7B0000
	0x039A169C LDRB W8, [X25 + 0xBA6]
	0x039A16A0 LDR X26, [X26 + 0x450]
	0x039A16A4 LDR X24, [X24 + 0x458]
	0x039A16A8 LDR X23, [X23 + 0x460]
	0x039A16AC LDR X22, [X22 + 0x468]
	0x039A16B0 LDR X21, [X21 + 0x470]
	0x039A16B4 MOV X20, X1
	0x039A16B8 MOV X19, X0
	0x039A16BC TBNZ X8, 0x0, 0x39A1704
	0x039A16C0 ADRP X0, 0x7B0000
	0x039A16C4 LDR X0, [X0 + 0x458]
	0x039A16C8 BL 0x1C16CF4
	0x039A16CC ADRP X0, 0x7B0000
	0x039A16D0 LDR X0, [X0 + 0x468]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA41000
	005 Move W8, [X20+2944]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7B0000
	012 Move X0, [X0+1944]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2944], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x7B0000
	020 Move X8, [X8+1944]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call List`1<Object>.ToArray, X0
	026 Return X0
	027 Call 0x1C17F20

Method: UnityEngine.Rendering.DebugUI/Flags get_Flags()

Disassembly:
	0x039A16D4 BL 0x1C16CF4
	0x039A16D8 ADRP X0, 0x7B0000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void AddWidget(UnityEngine.Rendering.DebugUI/Widget widget)

Disassembly:
	0x039A16DC LDR X0, [X0 + 0x450]
	0x039A16E0 BL 0x1C16CF4
	0x039A16E4 ADRP X0, 0x7B0000
	0x039A16E8 LDR X0, [X0 + 0x460]
	0x039A16EC BL 0x1C16CF4
	0x039A16F0 ADRP X0, 0x7B0000
	0x039A16F4 LDR X0, [X0 + 0x470]
	0x039A16F8 BL 0x1C16CF4
	0x039A16FC MOVZ W8, 0x1
	0x039A1700 STRB W8, [X25 + 0xBA6]
	0x039A1704 LDR X2, [X26]
	0x039A1708 MOV X0, X19
	0x039A170C MOV X1, X20
	0x039A1710 BL 0x29AEE64
	0x039A1714 LDR X0, [X24]
	0x039A1718 BL 0x1C16F10
	0x039A171C LDR X2, [X23]
	0x039A1720 MOV X1, X19
	0x039A1724 MOV X3, X31
	0x039A1728 MOV X20, X0
	0x039A172C BL 0x2A7689C
	0x039A1730 MOV X0, X19
	0x039A1734 MOV X1, X20
	0x039A1738 BL 0x39A19D4
	0x039A173C MOV X1, X0
	0x039A1740 MOV X0, X19
	0x039A1744 BL 0x39A06DC
	0x039A1748 LDR X0, [X22]
	0x039A174C BL 0x1C16F10
	0x039A1750 LDR X2, [X21]
	0x039A1754 MOV X1, X19
	0x039A1758 MOV X3, X31
	0x039A175C MOV X20, X0
	0x039A1760 BL 0x2A76D00
	0x039A1764 MOV X0, X19
	0x039A1768 MOV X1, X20
	0x039A176C BL 0x39A2068
	0x039A1770 MOV X1, X0
	0x039A1774 MOV X0, X19
	0x039A1778 LDP X20, X19, [X31 + 0x40]
	0x039A177C LDP X22, X21, [X31 + 0x30]
	0x039A1780 LDP X24, X23, [X31 + 0x20]
	0x039A1784 LDP X26, X25, [X31 + 0x10]
	0x039A1788 LDR X30, [X31], #0x50
	0x039A178C B 0x39A06DC
	0x039A1790 STP X30, X23, [X31 - 0x30]!
	0x039A1794 STP X22, X21, [X31 + 0x10]
	0x039A1798 STP X20, X19, [X31 + 0x20]
	0x039A179C ADRP X23, 0xA40000
	0x039A17A0 ADRP X22, 0x77D000
	0x039A17A4 ADRP X19, 0x754000
	0x039A17A8 ADRP X20, 0x7B0000
	0x039A17AC ADRP X21, 0x7B0000
	0x039A17B0 LDRB W8, [X23 + 0xB8A]
	0x039A17B4 LDR X22, [X22 + 0xBD0]
	0x039A17B8 LDR X19, [X19 + 0x798]
	0x039A17BC LDR X20, [X20 + 0x478]
	0x039A17C0 LDR X21, [X21 + 0x480]
	0x039A17C4 TBNZ X8, 0x0, 0x39A1800
	0x039A17C8 ADRP X0, 0x77D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA41000
	006 Move W8, [X21+2945]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7B0000
	014 Move X0, [X0+1936]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2945], W8
	018 Compare X19, 0
	019 JumpIfEqual {55}
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {54}
	023 Move X9, 0x7B0000
	024 Move X9, [X9+1936]
	025 Move W10, [X0+28]
	026 Move X8, [X0+16]
	027 Move X9, [X9]
	028 Add W10, W10, 1
	029 Move [X0+28], W10
	030 Compare X8, 0
	031 JumpIfEqual {54}
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Move W11, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add W9, W10, 1
	036 Add X8, X8, X10
	037 Move [X0+24], W9
	038 Move [X8+32], X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Move X8, [X9+32]
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X8, [X8+192]
	049 Move X2, [X8+112]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call List`1<Object>.AddWithResize, X0, X1
	053 Return 
	054 Call 0x1C17F20
	055 Move X0, 0x758000
	056 Move X0, [X0+1320]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0x7B1000
	061 Move X0, [X0+944]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call ArgumentNullException..ctor, X0, X1
	067 Move X0, 0x7B1000
	068 Move X0, [X0+952]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x039A17CC LDR X0, [X0 + 0xBD0]
	0x039A17D0 BL 0x1C16CF4
	0x039A17D4 ADRP X0, 0x7B0000
	0x039A17D8 LDR X0, [X0 + 0x478]
	0x039A17DC BL 0x1C16CF4
	0x039A17E0 ADRP X0, 0x754000
	0x039A17E4 LDR X0, [X0 + 0x798]
	0x039A17E8 BL 0x1C16CF4
	0x039A17EC ADRP X0, 0x7B0000
	0x039A17F0 LDR X0, [X0 + 0x480]
	0x039A17F4 BL 0x1C16CF4
	0x039A17F8 MOVZ W8, 0x1
	0x039A17FC STRB W8, [X23 + 0xB8A]
	0x039A1800 LDR X0, [X22]
	0x039A1804 BL 0x1C16F10
	0x039A1808 LDR X1, [X19]
	0x039A180C MOV X2, X31
	0x039A1810 MOV X19, X0
	0x039A1814 BL 0x3C6CE5C
	0x039A1818 LDR X8, [X20]
	0x039A181C LDR X8, [X8 + 0xB8]
	0x039A1820 STR X19, [X8]
	0x039A1824 LDR X0, [X22]
	0x039A1828 BL 0x1C16F10
	0x039A182C LDR X1, [X21]
	0x039A1830 MOV X2, X31
	0x039A1834 MOV X19, X0
	0x039A1838 BL 0x3C6CE5C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA41000
	005 Move W8, [X20+2946]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7B1000
	012 Move X0, [X0+960]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2946], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {37}
	019 Move W2, [X8+24]
	020 Move W9, [X8+28]
	021 Add W9, W9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X8+24], W31
	024 Move [X8+28], W9
	025 Move X0, [X8+16]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, W31
	029 Move X3, X31
	030 Move X30, [X31+32]
	031 Call Array.Clear, X0, X1, X2
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x039A183C LDR X8, [X20]

ISIL:
	001 Call DebugDisplaySettingsPanel.Clear, X0
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x039A1840 LDP X22, X21, [X31 + 0x10]
	0x039A1844 LDR X8, [X8 + 0xB8]
	0x039A1848 STR X19, [X8 + 0x8]
	0x039A184C LDP X20, X19, [X31 + 0x20]
	0x039A1850 LDP X30, X23, [X31], #0x30
	0x039A1854 RET
	0x039A1858 STP X29, X30, [X31 - 0x60]!
	0x039A185C STP X28, X27, [X31 + 0x10]
	0x039A1860 STP X26, X25, [X31 + 0x20]
	0x039A1864 STP X24, X23, [X31 + 0x30]
	0x039A1868 STP X22, X21, [X31 + 0x40]
	0x039A186C STP X20, X19, [X31 + 0x50]
	0x039A1870 ADRP X19, 0xA40000
	0x039A1874 ADRP X29, 0x754000
	0x039A1878 ADRP X28, 0x7B0000
	0x039A187C ADRP X27, 0x7B0000
	0x039A1880 ADRP X26, 0x7B0000
	0x039A1884 ADRP X25, 0x79B000
	0x039A1888 ADRP X24, 0x7B0000
	0x039A188C ADRP X23, 0x7B0000
	0x039A1890 ADRP X22, 0x7B0000
	0x039A1894 ADRP X21, 0x7B0000
	0x039A1898 ADRP X20, 0x7B0000
	0x039A189C ADRP X10, 0x786000
	0x039A18A0 LDR X29, [X29 + 0x798]
	0x039A18A4 LDR X28, [X28 + 0x488]
	0x039A18A8 LDR X27, [X27 + 0x110]
	0x039A18AC LDR X26, [X26 + 0x490]
	0x039A18B0 LDR X25, [X25 + 0xDE8]
	0x039A18B4 LDR X24, [X24 + 0x498]
	0x039A18B8 LDRB W8, [X19 + 0xB8B]
	0x039A18BC LDR X23, [X23 + 0x4A0]
	0x039A18C0 LDR X22, [X22 + 0x4A8]
	0x039A18C4 LDR X21, [X21 + 0x4B0]
	0x039A18C8 LDR X20, [X20 + 0x4B8]
	0x039A18CC LDR X10, [X10 + 0xA40]
	0x039A18D0 TBNZ X8, 0x0, 0x39A1968
	0x039A18D4 ADRP X0, 0x7B0000
	0x039A18D8 LDR X0, [X0 + 0x488]
	0x039A18DC BL 0x1C16CF4
	0x039A18E0 ADRP X0, 0x7B0000
	0x039A18E4 LDR X0, [X0 + 0x490]
	0x039A18E8 BL 0x1C16CF4
	0x039A18EC ADRP X0, 0x7B0000
	0x039A18F0 LDR X0, [X0 + 0x4A8]
	0x039A18F4 BL 0x1C16CF4
	0x039A18F8 ADRP X0, 0x7B0000
	0x039A18FC LDR X0, [X0 + 0x498]
	0x039A1900 BL 0x1C16CF4
	0x039A1904 ADRP X0, 0x754000
	0x039A1908 LDR X0, [X0 + 0x798]
	0x039A190C BL 0x1C16CF4
	0x039A1910 ADRP X0, 0x7B0000
	0x039A1914 LDR X0, [X0 + 0x110]
	0x039A1918 BL 0x1C16CF4
	0x039A191C ADRP X0, 0x7B0000
	0x039A1920 LDR X0, [X0 + 0x4B0]
	0x039A1924 BL 0x1C16CF4
	0x039A1928 ADRP X0, 0x7B0000
	0x039A192C LDR X0, [X0 + 0x4A0]
	0x039A1930 BL 0x1C16CF4
	0x039A1934 ADRP X0, 0x786000
	0x039A1938 LDR X0, [X0 + 0xA40]
	0x039A193C BL 0x1C16CF4
	0x039A1940 ADRP X0, 0x79B000
	0x039A1944 LDR X0, [X0 + 0xDE8]
	0x039A1948 BL 0x1C16CF4
	0x039A194C ADRP X0, 0x7B0000
	0x039A1950 LDR X0, [X0 + 0x4B8]
	0x039A1954 BL 0x1C16CF4
	0x039A1958 ADRP X10, 0x786000
	0x039A195C LDR X10, [X10 + 0xA40]
	0x039A1960 MOVZ W8, 0x1
	0x039A1964 STRB W8, [X19 + 0xB8B]
	0x039A1968 LDR X8, [X28]
	0x039A196C LDR X9, [X29]
	0x039A1970 LDR X8, [X8 + 0xB8]
	0x039A1974 STR X9, [X8]
	0x039A1978 LDR X8, [X28]
	0x039A197C LDR X11, [X27]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA41000
	008 Move X23, 0x7B0000
	009 Move X20, 0x7B0000
	010 Move X21, 0x7B1000
	011 Move W8, [X22+2947]
	012 Move X23, [X23+1864]
	013 Move X20, [X20+1872]
	014 Move X21, [X21+968]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x7B1000
	021 Move X0, [X0+968]
	022 Call 0x1C17CF4
	023 Move X0, 0x753000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x7B0000
	027 Move X0, [X0+1872]
	028 Call 0x1C17CF4
	029 Move X0, 0x7B0000
	030 Move X0, [X0+1864]
	031 Call 0x1C17CF4
	032 Move X0, 0x7B1000
	033 Move X0, [X0+976]
	034 Call 0x1C17CF4
	035 Move X0, 0x7B1000
	036 Move X0, [X0+984]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+2947], W8
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, [X20]
	043 Move X20, X0
	044 Call List`1<Object>..ctor, X0
	045 Move X0, X19
	046 Move X1, X31
	047 Move [X19+16], X20
	048 Call Object..ctor, X0
	049 Move X0, X19
	050 Move X1, X31
	051 Call "il2cpp_vm_object_is_inst", X0
	052 Move X1, [X21]
	053 Call 0x21A991C, X0
	054 Move [X19+24], X0
	055 Compare X0, 0
	056 JumpIfEqual {64}
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X19
	065 Move X1, X31
	066 Call "il2cpp_vm_object_is_inst", X0
	067 Move X8, 0x7B1000
	068 Move X8, [X8+984]
	069 Move X9, 0x7B1000
	070 Move X9, [X9+976]
	071 Move X1, X0
	072 Move X8, [X8]
	073 Move X3, X31
	074 Move X2, [X9]
	075 Move X0, X8
	076 Call String.Format, X0, X1, X2
	077 Move X8, 0x753000
	078 Move X8, [X8+2600]
	079 Move X19, X0
	080 Move X8, [X8]
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X19
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X1, X31
	092 Move X30, [X31+48]
	093 Move X23, [X31+56]
	094 Call Debug.Log, X0
	095 Return 

