Type: UnityEngine.Rendering.VolumeDebugSettings`1/<>c

Method: System.Void .cctor()

Disassembly:
	0x02368E78 TBNZ X8, 0x0, 0x2368E88
	0x02368E7C LDP X20, X19, [X31 + 0x10]
	0x02368E80 LDR X30, [X31], #0x20
	0x02368E84 B 0x1C5C684
	0x02368E88 LDP X20, X19, [X31 + 0x10]
	0x02368E8C LDR X30, [X31], #0x20
	0x02368E90 RET
	0x02368E94 MOV X1, X31
	0x02368E98 B 0x33BDD8C
	0x02368E9C STP X30, X19, [X31 - 0x10]!
	0x02368EA0 LDR X8, [X1 + 0x20]
	0x02368EA4 MOV X19, X1
	0x02368EA8 LDR X8, [X8 + 0xC0]
	0x02368EAC LDR X0, [X8 + 0x18]
	0x02368EB0 LDRB W8, [X0 + 0x135]
	0x02368EB4 TBNZ X8, 0x0, 0x2368EBC
	0x02368EB8 BL 0x1C5C684
	0x02368EBC BL 0x1C16F10
	0x02368EC0 LDR X8, [X19 + 0x20]
	0x02368EC4 MOV X19, X0
	0x02368EC8 LDR X8, [X8 + 0xC0]
	0x02368ECC LDR X1, [X8 + 0x20]
	0x02368ED0 BL 0x28F4D64
	0x02368ED4 MOV X0, X19
	0x02368ED8 LDP X30, X19, [X31], #0x10
	0x02368EDC RET
	0x02368EE0 STR X30, [X31 - 0x20]!
	0x02368EE4 STP X20, X19, [X31 + 0x10]
	0x02368EE8 MOV X19, X0
	0x02368EEC LDR X0, [X0 + 0x20]
	0x02368EF0 LDRB W8, [X0 + 0x135]
	0x02368EF4 TBNZ X8, 0x0, 0x2368EFC
	0x02368EF8 BL 0x1C5C684
	0x02368EFC LDR X8, [X0 + 0xC0]
	0x02368F00 LDR X0, [X8]
	0x02368F04 LDRB W8, [X0 + 0x135]
	0x02368F08 TBNZ X8, 0x0, 0x2368F10
	0x02368F0C BL 0x1C5C684
	0x02368F10 BL 0x1C16F10
	0x02368F14 LDR X8, [X19 + 0x20]
	0x02368F18 MOV X20, X0
	0x02368F1C LDRB W9, [X8 + 0x135]
	0x02368F20 TBNZ X9, 0x0, 0x2368F2C
	0x02368F24 MOV X0, X8
	0x02368F28 BL 0x1C5C684
	0x02368F2C MOV X0, X20
	0x02368F30 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x02368F34 BL 0x33BDD8C
	0x02368F38 LDR X0, [X19 + 0x20]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <GetVolumes>b__35_0(UnityEngine.Rendering.Volume v)

Disassembly:
	0x02368F3C LDRB W8, [X0 + 0x135]
	0x02368F40 TBNZ X8, 0x0, 0x2368F48
	0x02368F44 BL 0x1C5C684
	0x02368F48 LDR X8, [X0 + 0xC0]
	0x02368F4C LDR X0, [X8 + 0x10]
	0x02368F50 LDRB W8, [X0 + 0x135]
	0x02368F54 TBNZ X8, 0x0, 0x2368F5C
	0x02368F58 BL 0x1C5C684
	0x02368F5C LDR X8, [X0 + 0xB8]
	0x02368F60 STR X20, [X8]
	0x02368F64 LDR X0, [X19 + 0x20]
	0x02368F68 LDRB W8, [X0 + 0x135]
	0x02368F6C TBNZ X8, 0x0, 0x2368F74
	0x02368F70 BL 0x1C5C684
	0x02368F74 LDR X8, [X0 + 0xC0]
	0x02368F78 LDR X0, [X8 + 0x10]
	0x02368F7C LDRB W8, [X0 + 0x135]
	0x02368F80 TBNZ X8, 0x0, 0x2368F90
	0x02368F84 LDP X20, X19, [X31 + 0x10]
	0x02368F88 LDR X30, [X31], #0x20
	0x02368F8C B 0x1C5C684
	0x02368F90 LDP X20, X19, [X31 + 0x10]
	0x02368F94 LDR X30, [X31], #0x20
	0x02368F98 RET
	0x02368F9C MOV X1, X31
	0x02368FA0 B 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x2072000
	005 Move W8, [X20+2216]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D8C000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2216], W8
	016 Compare X19, 0
	017 JumpIfEqual {34}
	018 Move X8, 0x1D8C000
	019 Move X8, [X8+1432]
	020 Move X19, [X19+48]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X2, X31
	031 Move X30, [X31+32]
	032 Call Object.op_Inequality, X0, X1
	033 Return X0
	034 Call 0x1C17F20

Method: System.Boolean <GetStates>b__37_0(System.Reflection.FieldInfo t)

Disassembly:
	0x02368FA4 STP X30, X21, [X31 - 0x20]!
	0x02368FA8 STP X20, X19, [X31 + 0x10]
	0x02368FAC ADRP X20, 0x2071000
	0x02368FB0 ADRP X21, 0x1DB4000
	0x02368FB4 ADRP X19, 0x1DB4000
	0x02368FB8 LDRB W8, [X20 + 0x8B0]
	0x02368FBC LDR X21, [X21 + 0xB18]
	0x02368FC0 LDR X19, [X19 + 0xB20]
	0x02368FC4 TBNZ X8, 0x0, 0x2368FE8
	0x02368FC8 ADRP X0, 0x1DB4000
	0x02368FCC LDR X0, [X0 + 0xB20]
	0x02368FD0 BL 0x1C16CF4
	0x02368FD4 ADRP X0, 0x1DB4000
	0x02368FD8 LDR X0, [X0 + 0xB18]
	0x02368FDC BL 0x1C16CF4
	0x02368FE0 MOVZ W8, 0x1
	0x02368FE4 STRB W8, [X20 + 0x8B0]
	0x02368FE8 LDR X0, [X21]
	0x02368FEC BL 0x1C16F10
	0x02368FF0 LDR X2, [X19]
	0x02368FF4 MOVZ W1, 0x4
	0x02368FF8 MOV X19, X0
	0x02368FFC BL 0x24F12C8
	0x02369000 MOV X0, X19
	0x02369004 LDP X20, X19, [X31 + 0x10]
	0x02369008 LDP X30, X21, [X31], #0x20
	0x0236900C RET
	0x02369010 STR X30, [X31 - 0x20]!
	0x02369014 STP X20, X19, [X31 + 0x10]
	0x02369018 MOV X19, X0
	0x0236901C LDR X0, [X0 + 0x20]
	0x02369020 LDRB W8, [X0 + 0x135]
	0x02369024 TBNZ X8, 0x0, 0x236902C
	0x02369028 BL 0x1C5C684
	0x0236902C LDR X8, [X0 + 0xC0]
	0x02369030 LDR X0, [X8]
	0x02369034 LDRB W8, [X0 + 0x135]
	0x02369038 TBNZ X8, 0x0, 0x2369040
	0x0236903C BL 0x1C5C684
	0x02369040 BL 0x1C16F10
	0x02369044 LDR X8, [X19 + 0x20]
	0x02369048 MOV X20, X0
	0x0236904C LDRB W9, [X8 + 0x135]
	0x02369050 TBNZ X9, 0x0, 0x236905C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x2072000
	006 Move W8, [X20+2217]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1D8C000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X0, 0x1DB5000
	016 Move X0, [X0+2880]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2217], W8
	020 Compare X19, 0
	021 JumpIfEqual {54}
	022 Move X8, [X19]
	023 Move X20, 0x1DB5000
	024 Move X21, 0x1D8C000
	025 Move X0, X19
	026 Move X9, [X8+600]
	027 Move X1, [X8+608]
	028 Move X20, [X20+2880]
	029 Move X21, [X21+1728]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X21]
	032 Move X20, [X20]
	033 Move X19, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Compare X19, 0
	043 JumpIfEqual {54}
	044 Move X8, [X19]
	045 Move X1, X0
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X3, [X8+664]
	050 Move X2, [X8+672]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 CallNoReturn X3
	054 Call 0x1C17F20

Method: System.Boolean <get_componentTypes>b__44_0(System.Type t)

Disassembly:
	0x02369054 MOV X0, X8
	0x02369058 BL 0x1C5C684
	0x0236905C MOV X0, X20
	0x02369060 MOV X1, X31
	0x02369064 BL 0x33BDD8C
	0x02369068 LDR X0, [X19 + 0x20]
	0x0236906C LDRB W8, [X0 + 0x135]
	0x02369070 TBNZ X8, 0x0, 0x2369078
	0x02369074 BL 0x1C5C684
	0x02369078 LDR X8, [X0 + 0xC0]
	0x0236907C LDR X0, [X8 + 0x10]
	0x02369080 LDRB W8, [X0 + 0x135]
	0x02369084 TBNZ X8, 0x0, 0x236908C
	0x02369088 BL 0x1C5C684
	0x0236908C LDR X8, [X0 + 0xB8]
	0x02369090 STR X20, [X8]
	0x02369094 LDR X0, [X19 + 0x20]
	0x02369098 LDRB W8, [X0 + 0x135]
	0x0236909C TBNZ X8, 0x0, 0x23690A4
	0x023690A0 BL 0x1C5C684
	0x023690A4 LDR X8, [X0 + 0xC0]
	0x023690A8 LDR X0, [X8 + 0x10]
	0x023690AC LDRB W8, [X0 + 0x135]
	0x023690B0 TBNZ X8, 0x0, 0x23690C0
	0x023690B4 LDP X20, X19, [X31 + 0x10]
	0x023690B8 LDR X30, [X31], #0x20
	0x023690BC B 0x1C5C684
	0x023690C0 LDP X20, X19, [X31 + 0x10]
	0x023690C4 LDR X30, [X31], #0x20
	0x023690C8 RET
	0x023690CC MOV X1, X31
	0x023690D0 B 0x33BDD8C
	0x023690D4 STP X30, X21, [X31 - 0x20]!
	0x023690D8 STP X20, X19, [X31 + 0x10]
	0x023690DC ADRP X20, 0x2070000
	0x023690E0 ADRP X21, 0x1DB3000
	0x023690E4 ADRP X19, 0x1DB3000
	0x023690E8 LDRB W8, [X20 + 0x8B1]
	0x023690EC LDR X21, [X21 + 0xB18]
	0x023690F0 LDR X19, [X19 + 0xB20]
	0x023690F4 TBNZ X8, 0x0, 0x2369118

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2071000
	007 Move X20, 0x1DB4000
	008 Move X21, 0x1D8B000
	009 Move W8, [X22+2218]
	010 Move X20, [X20+2864]
	011 Move X21, [X21+1728]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1DB4000
	018 Move X0, [X0+2864]
	019 Call 0x1C17CF4
	020 Move X0, 0x1D8B000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2218], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Compare X19, 0
	035 JumpIfEqual {51}
	036 Move X8, [X19]
	037 Move X1, X0
	038 Move X0, X19
	039 Move W2, W31
	040 Move X9, [X8+488]
	041 Move X3, [X8+496]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 NotImplemented "Instruction ORN not yet implemented."
	048 And W0, W8, 1
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Boolean <get_componentTypes>b__44_1(System.Type t)

Disassembly:
	0x023690F8 ADRP X0, 0x1DB3000
	0x023690FC LDR X0, [X0 + 0xB20]
	0x02369100 BL 0x1C16CF4
	0x02369104 ADRP X0, 0x1DB3000
	0x02369108 LDR X0, [X0 + 0xB18]
	0x0236910C BL 0x1C16CF4
	0x02369110 MOVZ W8, 0x1
	0x02369114 STRB W8, [X20 + 0x8B1]
	0x02369118 LDR X0, [X21]
	0x0236911C BL 0x1C16F10
	0x02369120 LDR X2, [X19]
	0x02369124 MOVZ W1, 0x4
	0x02369128 MOV X19, X0
	0x0236912C BL 0x24F12C8
	0x02369130 MOV X0, X19
	0x02369134 LDP X20, X19, [X31 + 0x10]
	0x02369138 LDP X30, X21, [X31], #0x20
	0x0236913C RET
	0x02369140 STR X30, [X31 - 0x20]!
	0x02369144 STP X20, X19, [X31 + 0x10]
	0x02369148 MOV X19, X0
	0x0236914C LDR X0, [X0 + 0x20]
	0x02369150 LDRB W8, [X0 + 0x135]
	0x02369154 TBNZ X8, 0x0, 0x236915C
	0x02369158 BL 0x1C5C684
	0x0236915C LDR X8, [X0 + 0xC0]
	0x02369160 LDR X0, [X8]
	0x02369164 LDRB W8, [X0 + 0x135]
	0x02369168 TBNZ X8, 0x0, 0x2369170
	0x0236916C BL 0x1C5C684
	0x02369170 BL 0x1C16F10
	0x02369174 LDR X8, [X19 + 0x20]
	0x02369178 MOV X20, X0
	0x0236917C LDRB W9, [X8 + 0x135]
	0x02369180 TBNZ X9, 0x0, 0x236918C
	0x02369184 MOV X0, X8
	0x02369188 BL 0x1C5C684
	0x0236918C MOV X0, X20
	0x02369190 MOV X1, X31
	0x02369194 BL 0x33BDD8C
	0x02369198 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x2071000
	007 Move X20, 0x1DB4000
	008 Move X21, 0x1D8B000
	009 Move W8, [X22+2219]
	010 Move X20, [X20+2856]
	011 Move X21, [X21+1728]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1DB4000
	018 Move X0, [X0+2856]
	019 Call 0x1C17CF4
	020 Move X0, 0x1D8B000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2219], W8
	025 Move X0, [X21]
	026 Move X20, [X20]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Compare X19, 0
	035 JumpIfEqual {51}
	036 Move X8, [X19]
	037 Move X1, X0
	038 Move X0, X19
	039 Move W2, W31
	040 Move X9, [X8+488]
	041 Move X3, [X8+496]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 NotImplemented "Instruction ORN not yet implemented."
	048 And W0, W8, 1
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: System.String <get_componentTypes>b__44_2(System.Type t)

Disassembly:
	0x0236919C LDRB W8, [X0 + 0x135]
	0x023691A0 TBNZ X8, 0x0, 0x23691A8
	0x023691A4 BL 0x1C5C684
	0x023691A8 LDR X8, [X0 + 0xC0]
	0x023691AC LDR X0, [X8 + 0x10]
	0x023691B0 LDRB W8, [X0 + 0x135]
	0x023691B4 TBNZ X8, 0x0, 0x23691BC
	0x023691B8 BL 0x1C5C684
	0x023691BC LDR X8, [X0 + 0xB8]
	0x023691C0 STR X20, [X8]
	0x023691C4 LDR X0, [X19 + 0x20]
	0x023691C8 LDRB W8, [X0 + 0x135]
	0x023691CC TBNZ X8, 0x0, 0x23691D4
	0x023691D0 BL 0x1C5C684
	0x023691D4 LDR X8, [X0 + 0xC0]
	0x023691D8 LDR X0, [X8 + 0x10]
	0x023691DC LDRB W8, [X0 + 0x135]
	0x023691E0 TBNZ X8, 0x0, 0x23691F0
	0x023691E4 LDP X20, X19, [X31 + 0x10]
	0x023691E8 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X2
	006 Move X20, X1
	007 Move X8, [X8+192]
	008 Move X0, [X8+32]
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move W8, [X0+224]
	016 Compare W8, 0
	017 JumpIfNotEqual {19}
	018 Call 0x1C17DFC
	019 Move X8, [X19+32]
	020 Move X0, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+192]
	024 Move X1, [X8+24]
	025 Move X30, [X31+32]
	026 Call 0x2849518, X0
	027 Return X0

