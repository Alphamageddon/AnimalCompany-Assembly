Type: UnityEngine.Rendering.DebugFrameTiming

Method: System.Int32 get_bottleneckHistorySize()

Disassembly:
	0x039A6AFC BL 0x1C16F10
	0x039A6B00 MOV X25, X0

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_bottleneckHistorySize(System.Int32 value)

Disassembly:
	0x039A6B04 BL 0x39A2BC0
	0x039A6B08 CBZ X25, 0x39A6EC0

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Int32 get_sampleHistorySize()

Disassembly:
	0x039A6B0C MOVZ W8, 0xCCCD
	0x039A6B10 MOVK W8, 0x3E4C0000

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_sampleHistorySize(System.Int32 value)

Disassembly:
	0x039A6B14 STR W8, [X25 + 0x50]
	0x039A6B18 LDR X8, [X29]

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x039A6B1C ADRP X26, 0x7AB000
	0x039A6B20 STR X8, [X25 + 0x58]
	0x039A6B24 LDR X0, [X28]
	0x039A6B28 LDR X26, [X26 + 0x7F8]
	0x039A6B2C BL 0x1C16F10
	0x039A6B30 LDR X2, [X26]
	0x039A6B34 MOV X1, X20
	0x039A6B38 MOV X3, X31
	0x039A6B3C MOV X26, X0
	0x039A6B40 BL 0x2D27AA8
	0x039A6B44 STR X26, [X25 + 0x48]
	0x039A6B48 LDR X8, [X24]
	0x039A6B4C MOV X0, X25
	0x039A6B50 LDR X1, [X8 + 0x40]
	0x039A6B54 BL 0x1C16E00
	0x039A6B58 CBZ X0, 0x39A6EC8
	0x039A6B5C LDR W8, [X24 + 0x18]
	0x039A6B60 CMP W8, 0x1
	0x039A6B64 B.LS 0x39A6EC4
	0x039A6B68 STR X25, [X24 + 0x28]
	0x039A6B6C LDR X0, [X27]
	0x039A6B70 BL 0x1C16F10
	0x039A6B74 MOV X25, X0
	0x039A6B78 BL 0x39A2BC0
	0x039A6B7C CBZ X25, 0x39A6EC0
	0x039A6B80 MOVZ W8, 0xCCCD
	0x039A6B84 MOVK W8, 0x3E4C0000
	0x039A6B88 STR W8, [X25 + 0x50]
	0x039A6B8C LDR X8, [X29]
	0x039A6B90 ADRP X26, 0x7AB000
	0x039A6B94 STR X8, [X25 + 0x58]
	0x039A6B98 LDR X0, [X28]
	0x039A6B9C LDR X26, [X26 + 0x800]
	0x039A6BA0 BL 0x1C16F10
	0x039A6BA4 LDR X2, [X26]
	0x039A6BA8 MOV X1, X20
	0x039A6BAC MOV X3, X31
	0x039A6BB0 MOV X26, X0
	0x039A6BB4 BL 0x2D27AA8
	0x039A6BB8 STR X26, [X25 + 0x48]
	0x039A6BBC LDR X8, [X24]
	0x039A6BC0 MOV X0, X25
	0x039A6BC4 LDR X1, [X8 + 0x40]
	0x039A6BC8 BL 0x1C16E00
	0x039A6BCC CBZ X0, 0x39A6EC8
	0x039A6BD0 LDR W8, [X24 + 0x18]
	0x039A6BD4 CMP W8, 0x2
	0x039A6BD8 B.LS 0x39A6EC4
	0x039A6BDC STR X25, [X24 + 0x30]
	0x039A6BE0 STR X24, [X23 + 0x48]
	0x039A6BE4 CBZ X22, 0x39A6EC0
	0x039A6BE8 ADRP X8, 0x7AA000
	0x039A6BEC LDR X8, [X8 + 0x7A0]
	0x039A6BF0 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA3C000
	008 Move X20, 0x7AC000
	009 Move X21, 0x7AC000
	010 Move X22, 0x7AC000
	011 Move W8, [X23+2984]
	012 Move X20, [X20+1944]
	013 Move X21, [X21+1952]
	014 Move X22, [X22+1960]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x7AC000
	021 Move X0, [X0+1960]
	022 Call 0x1C17CF4
	023 Move X0, 0x7AC000
	024 Move X0, [X0+1952]
	025 Call 0x1C17CF4
	026 Move X0, 0x7AC000
	027 Move X0, [X0+1944]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+2984], W8
	031 Move X8, -48988160
	032 Move V0, [X8+1304]
	033 Move W1, 1
	034 Move [X19+32], D0
	035 Move X0, [X20]
	036 Call 0x1C17D6C
	037 Move [X19+40], X0
	038 Move X0, X19
	039 Move X1, X31
	040 Call Object..ctor, X0
	041 Move X0, [X21]
	042 Move W20, [X19+36]
	043 Call 0x1C17F10
	044 Move W1, W20
	045 Move X2, X31
	046 Move X21, X0
	047 Call FrameTimeSampleHistory..ctor, X0, X1
	048 Move [X19+16], X21
	049 Move X0, [X22]
	050 Move W20, [X19+32]
	051 Call 0x1C17F10
	052 Move W1, W20
	053 Move X2, X31
	054 Move X21, X0
	055 Call BottleneckHistory..ctor, X0, X1
	056 Move [X19+24], X21
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 

Method: System.Void UpdateFrameTiming()

Disassembly:
	0x039A6BF4 MOV X1, X23
	0x039A6BF8 LDR X2, [X8]
	0x039A6BFC BL 0x2497EC8
	0x039A6C00 CBZ X19, 0x39A6EC0
	0x039A6C04 ADRP X9, 0x7AA000
	0x039A6C08 LDR X9, [X9 + 0x790]
	0x039A6C0C LDR W10, [X19 + 0x1C]
	0x039A6C10 LDR X8, [X19 + 0x10]
	0x039A6C14 LDR X9, [X9]
	0x039A6C18 ADD W10, W10, 0x1
	0x039A6C1C STR W10, [X19 + 0x1C]
	0x039A6C20 CBZ X8, 0x39A6EC0
	0x039A6C24 LDRSW X10, [X19 + 0x18]
	0x039A6C28 LDR W11, [X8 + 0x18]
	0x039A6C2C CMP W10, W11
	0x039A6C30 B.CS 0x39A6C48
	0x039A6C34 ADD W9, W10, 0x1
	0x039A6C38 ADD X8, X8, X10, 0x3, LSL
	0x039A6C3C STR W9, [X19 + 0x18]
	0x039A6C40 STR X21, [X8 + 0x20]
	0x039A6C44 B 0x39A6C60
	0x039A6C48 LDR X8, [X9 + 0x20]
	0x039A6C4C MOV X0, X19
	0x039A6C50 MOV X1, X21
	0x039A6C54 LDR X8, [X8 + 0xC0]
	0x039A6C58 LDR X2, [X8 + 0x70]
	0x039A6C5C BL 0x301BF90
	0x039A6C60 ADRP X8, 0x7AB000
	0x039A6C64 LDR X8, [X8 + 0x7B8]
	0x039A6C68 LDR X0, [X8]
	0x039A6C6C BL 0x1C16F10
	0x039A6C70 MOV X21, X0
	0x039A6C74 BL 0x39ADAE0
	0x039A6C78 CBZ X21, 0x39A6EC0
	0x039A6C7C ADRP X8, 0x7AB000
	0x039A6C80 LDR X8, [X8 + 0x8B8]
	0x039A6C84 ADRP X26, 0x7AB000
	0x039A6C88 ADRP X24, 0x7AB000
	0x039A6C8C ADRP X29, 0x7AB000
	0x039A6C90 LDR X8, [X8]
	0x039A6C94 LDR X26, [X26 + 0x870]
	0x039A6C98 LDR X22, [X21 + 0x48]
	0x039A6C9C STR X8, [X21 + 0x28]
	0x039A6CA0 LDR X0, [X26]
	0x039A6CA4 LDR X24, [X24 + 0x8A8]
	0x039A6CA8 LDR X29, [X29 + 0x808]
	0x039A6CAC BL 0x1C16F10
	0x039A6CB0 MOVZ W27, 0x3F800000
	0x039A6CB4 MOV X23, X0
	0x039A6CB8 STR W27, [X0 + 0x64]
	0x039A6CBC BL 0x39A2BC0
	0x039A6CC0 LDR X8, [X24]
	0x039A6CC4 STR X8, [X23 + 0x28]
	0x039A6CC8 LDR X0, [X28]
	0x039A6CCC BL 0x1C16F10
	0x039A6CD0 LDR X2, [X29]
	0x039A6CD4 MOV X1, X20
	0x039A6CD8 MOV X3, X31
	0x039A6CDC MOV X24, X0
	0x039A6CE0 BL 0x2D27AA8
	0x039A6CE4 STR X24, [X23 + 0x48]
	0x039A6CE8 CBZ X22, 0x39A6EC0
	0x039A6CEC ADRP X25, 0x7AA000
	0x039A6CF0 LDR X25, [X25 + 0x7A0]
	0x039A6CF4 ADRP X24, 0x7AB000
	0x039A6CF8 ADRP X29, 0x7AB000
	0x039A6CFC MOV X0, X22
	0x039A6D00 LDR X2, [X25]
	0x039A6D04 LDR X24, [X24 + 0x8E0]
	0x039A6D08 LDR X29, [X29 + 0x810]
	0x039A6D0C MOV X1, X23
	0x039A6D10 BL 0x2497EC8
	0x039A6D14 LDR X0, [X26]
	0x039A6D18 LDR X22, [X21 + 0x48]
	0x039A6D1C BL 0x1C16F10
	0x039A6D20 MOV X23, X0
	0x039A6D24 STR W27, [X0 + 0x64]
	0x039A6D28 BL 0x39A2BC0
	0x039A6D2C LDR X8, [X24]
	0x039A6D30 STR X8, [X23 + 0x28]
	0x039A6D34 LDR X0, [X28]
	0x039A6D38 BL 0x1C16F10
	0x039A6D3C LDR X2, [X29]
	0x039A6D40 MOV X1, X20
	0x039A6D44 MOV X3, X31
	0x039A6D48 MOV X24, X0
	0x039A6D4C BL 0x2D27AA8
	0x039A6D50 STR X24, [X23 + 0x48]
	0x039A6D54 CBZ X22, 0x39A6EC0
	0x039A6D58 LDR X2, [X25]
	0x039A6D5C ADRP X24, 0x7AB000
	0x039A6D60 ADRP X29, 0x7AB000
	0x039A6D64 LDR X24, [X24 + 0x900]
	0x039A6D68 LDR X29, [X29 + 0x820]
	0x039A6D6C MOV X0, X22
	0x039A6D70 MOV X1, X23
	0x039A6D74 BL 0x2497EC8
	0x039A6D78 LDR X0, [X26]
	0x039A6D7C LDR X22, [X21 + 0x48]
	0x039A6D80 BL 0x1C16F10
	0x039A6D84 MOVZ W27, 0x3F800000
	0x039A6D88 MOV X23, X0
	0x039A6D8C STR W27, [X0 + 0x64]
	0x039A6D90 BL 0x39A2BC0
	0x039A6D94 LDR X8, [X24]
	0x039A6D98 STR X8, [X23 + 0x28]
	0x039A6D9C LDR X0, [X28]
	0x039A6DA0 BL 0x1C16F10
	0x039A6DA4 LDR X2, [X29]
	0x039A6DA8 MOV X1, X20
	0x039A6DAC MOV X3, X31
	0x039A6DB0 MOV X24, X0
	0x039A6DB4 BL 0x2D27AA8
	0x039A6DB8 STR X24, [X23 + 0x48]
	0x039A6DBC CBZ X22, 0x39A6EC0
	0x039A6DC0 LDR X2, [X25]
	0x039A6DC4 ADRP X24, 0x7AB000
	0x039A6DC8 ADRP X29, 0x7AB000
	0x039A6DCC LDR X24, [X24 + 0x888]
	0x039A6DD0 LDR X29, [X29 + 0x828]
	0x039A6DD4 MOV X0, X22
	0x039A6DD8 MOV X1, X23
	0x039A6DDC BL 0x2497EC8
	0x039A6DE0 LDR X0, [X26]
	0x039A6DE4 LDR X22, [X21 + 0x48]
	0x039A6DE8 BL 0x1C16F10
	0x039A6DEC MOV X23, X0
	0x039A6DF0 STR W27, [X0 + 0x64]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+200], X21
	004 Move [X31+208], X20
	005 Move [X31+216], X19
	006 Move X20, 0xA3C000
	007 Move W8, [X20+2985]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7AC000
	014 Move X0, [X0+1968]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2985], W8
	018 Move X8, [X19+40]
	019 Compare X8, 0
	020 JumpIfEqual {149}
	021 Move W9, [X8+24]
	022 Compare W9, 0
	023 JumpIfEqual {150}
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move X20, X19
	026 Move [X8+112], X31
	027 Move [X8+80], V0
	028 Move [X8+88], V0
	029 Move [X8+48], V0
	030 Move [X8+56], V0
	031 Move [X8+2], V0
	032 Move [X20+48], X31
	033 Move X0, X31
	034 Move [X20+8], X31
	035 Move [X20+16], X31
	036 Call FrameTimingManager.CaptureFrameTimings
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Move W0, 1
	039 Move X2, X31
	040 Call FrameTimingManager.GetLatestTimings, X0, X1
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {149}
	044 Move X8, [X0+24]
	045 Compare X8, 0
	046 JumpIfEqual {90}
	047 Move X21, 0x7AC000
	048 Move X21, [X21+1968]
	049 Add X8, X31, 96
	050 Move X1, [X21]
	051 Call Enumerable.First, X0
	052 Move V0, [X31+96]
	053 Move W8, 0x447A0000
	054 Move S2, W8
	055 Move S1, W31
	056 NotImplemented "Instruction INVALID not yet implemented."
	057 NotImplemented "Instruction FDIV not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FCSEL not yet implemented."
	060 Move [X19+48], S1
	061 Move [X19+56], S0
	062 Move X0, [X19+40]
	063 Move X1, [X21]
	064 Add X8, X31, 96
	065 Call Enumerable.First, X0
	066 Move V0, [X31+104]
	067 Move X0, [X19+40]
	068 Add X8, X31, 96
	069 NotImplemented "Instruction INVALID not yet implemented."
	070 Move [X19+56], S0
	071 Move X1, [X21]
	072 Call Enumerable.First, X0
	073 Move V0, [X31+112]
	074 Move X0, [X19+40]
	075 Add X8, X31, 96
	076 NotImplemented "Instruction INVALID not yet implemented."
	077 Move [X19+60], S0
	078 Move X1, [X21]
	079 Call Enumerable.First, X0
	080 Move V0, [X31+120]
	081 Move X0, [X19+40]
	082 Add X8, X31, 96
	083 NotImplemented "Instruction INVALID not yet implemented."
	084 Move [X19+64], S0
	085 Move X1, [X21]
	086 Call Enumerable.First, X0
	087 Move V0, [X31+128]
	088 NotImplemented "Instruction INVALID not yet implemented."
	089 Move [X19+68], S0
	090 Move X0, [X19+16]
	091 Compare X0, 0
	092 JumpIfEqual {149}
	093 Move W1, [X19+36]
	094 Move X2, X31
	095 Call FrameTimeSampleHistory.DiscardOldSamples, X0, X1
	096 Move X0, [X19+16]
	097 Move X8, [X20+16]
	098 Move V0, [X20]
	099 Move [X31+112], X8
	100 Move [X31+6], V0
	101 Compare X0, 0
	102 JumpIfEqual {149}
	103 Move V0, [X31+6]
	104 Move X8, [X31+112]
	105 Add X1, X31, 64
	106 Move X2, X31
	107 Move [X31+4], V0
	108 Move [X31+80], X8
	109 Call FrameTimeSampleHistory.Add, X0, X1
	110 Move X0, [X19+16]
	111 Compare X0, 0
	112 JumpIfEqual {149}
	113 Move X1, X31
	114 Call FrameTimeSampleHistory.ComputeAggregateValues, X0
	115 Move X0, [X19+24]
	116 Compare X0, 0
	117 JumpIfEqual {149}
	118 Move W1, [X19+32]
	119 Move X2, X31
	120 Call BottleneckHistory.DiscardOldSamples, X0, X1
	121 Move X8, [X19+16]
	122 Compare X8, 0
	123 JumpIfEqual {149}
	124 Move X0, [X19+24]
	125 Move X9, [X8+40]
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 Move [X31+48], X9
	128 Move [X31+2], V0
	129 Compare X0, 0
	130 JumpIfEqual {149}
	131 Move V0, [X31+2]
	132 Move X8, [X31+48]
	133 Add X1, X31, 0
	134 Move X2, X31
	135 Move [X31], V0
	136 Move [X31+16], X8
	137 Call BottleneckHistory.AddBottleneckFromAveragedSample, X0, X1
	138 Move X0, [X19+24]
	139 Compare X0, 0
	140 JumpIfEqual {149}
	141 Move X1, X31
	142 Call BottleneckHistory.ComputeHistogram, X0
	143 Move X20, [X31+208]
	144 Move X19, [X31+216]
	145 Move X30, [X31+192]
	146 Move X21, [X31+200]
	147 Add X31, X31, 224
	148 Return 
	149 Call 0x1C17F20
	150 Call 0x1C17F28

Method: System.Void RegisterDebugUI(System.Collections.Generic.List`1<UnityEngine.Rendering.DebugUI/Widget> list)

Disassembly:
	0x039A6DF4 BL 0x39A2BC0
	0x039A6DF8 LDR X8, [X24]
	0x039A6DFC STR X8, [X23 + 0x28]
	0x039A6E00 LDR X0, [X28]
	0x039A6E04 BL 0x1C16F10
	0x039A6E08 LDR X2, [X29]
	0x039A6E0C MOV X1, X20
	0x039A6E10 MOV X3, X31
	0x039A6E14 MOV X24, X0
	0x039A6E18 BL 0x2D27AA8
	0x039A6E1C STR X24, [X23 + 0x48]
	0x039A6E20 CBZ X22, 0x39A6EC0
	0x039A6E24 LDR X2, [X25]
	0x039A6E28 MOV X0, X22
	0x039A6E2C MOV X1, X23
	0x039A6E30 BL 0x2497EC8
	0x039A6E34 ADRP X9, 0x7AA000
	0x039A6E38 LDR W10, [X19 + 0x1C]
	0x039A6E3C LDR X8, [X19 + 0x10]
	0x039A6E40 LDR X9, [X9 + 0x790]
	0x039A6E44 ADD W10, W10, 0x1
	0x039A6E48 LDR X9, [X9]
	0x039A6E4C STR W10, [X19 + 0x1C]
	0x039A6E50 CBZ X8, 0x39A6EC0
	0x039A6E54 LDRSW X10, [X19 + 0x18]
	0x039A6E58 LDR W11, [X8 + 0x18]
	0x039A6E5C CMP W10, W11
	0x039A6E60 B.CS 0x39A6E90
	0x039A6E64 ADD W9, W10, 0x1
	0x039A6E68 ADD X8, X8, X10, 0x3, LSL
	0x039A6E6C STR W9, [X19 + 0x18]
	0x039A6E70 STR X21, [X8 + 0x20]
	0x039A6E74 LDP X20, X19, [X31 + 0x50]
	0x039A6E78 LDP X22, X21, [X31 + 0x40]
	0x039A6E7C LDP X24, X23, [X31 + 0x30]
	0x039A6E80 LDP X26, X25, [X31 + 0x20]
	0x039A6E84 LDP X28, X27, [X31 + 0x10]
	0x039A6E88 LDP X29, X30, [X31], #0x60
	0x039A6E8C RET
	0x039A6E90 LDR X8, [X9 + 0x20]
	0x039A6E94 MOV X0, X19
	0x039A6E98 MOV X1, X21
	0x039A6E9C LDP X20, X19, [X31 + 0x50]
	0x039A6EA0 LDR X8, [X8 + 0xC0]
	0x039A6EA4 LDP X22, X21, [X31 + 0x40]
	0x039A6EA8 LDP X24, X23, [X31 + 0x30]
	0x039A6EAC LDP X26, X25, [X31 + 0x20]
	0x039A6EB0 LDR X2, [X8 + 0x70]
	0x039A6EB4 LDP X28, X27, [X31 + 0x10]
	0x039A6EB8 LDP X29, X30, [X31], #0x60
	0x039A6EBC B 0x301BF90
	0x039A6EC0 BL 0x1C16F20
	0x039A6EC4 BL 0x1C16F28
	0x039A6EC8 BL 0x1C16F44
	0x039A6ECC MOV X1, X31
	0x039A6ED0 BL 0x1C16DEC
	0x039A6ED4 B 0x39ADAE0
	0x039A6ED8 MOVN W8, 0x0
	0x039A6EDC MOV X1, X31
	0x039A6EE0 STR W8, [X0 + 0x50]
	0x039A6EE4 B 0x33BDD8C
	0x039A6EE8 MOVZ W8, 0x3F800000
	0x039A6EEC STR W8, [X0 + 0x64]
	0x039A6EF0 B 0x39A2BC0
	0x039A6EF4 STP X30, X19, [X31 - 0x10]!
	0x039A6EF8 MOV X19, X0
	0x039A6EFC LDR X0, [X0 + 0x18]
	0x039A6F00 CBZ X0, 0x39A6F20
	0x039A6F04 MOV X1, X31
	0x039A6F08 BL 0x39B0F20
	0x039A6F0C LDR X0, [X19 + 0x10]
	0x039A6F10 CBZ X0, 0x39A6F20
	0x039A6F14 MOV X1, X31
	0x039A6F18 LDP X30, X19, [X31], #0x10
	0x039A6F1C B 0x39B14FC
	0x039A6F20 BL 0x1C16F20
	0x039A6F24 STR X30, [X31 - 0x20]!
	0x039A6F28 STP X20, X19, [X31 + 0x10]
	0x039A6F2C ADRP X20, 0xA3B000
	0x039A6F30 LDRB W8, [X20 + 0xBAB]
	0x039A6F34 MOV X19, X0
	0x039A6F38 TBNZ X8, 0x0, 0x39A6F50
	0x039A6F3C ADRP X0, 0x74D000
	0x039A6F40 LDR X0, [X0 + 0xA90]
	0x039A6F44 BL 0x1C16CF4
	0x039A6F48 MOVZ W8, 0x1
	0x039A6F4C STRB W8, [X20 + 0xBAB]
	0x039A6F50 LDR X8, [X19 + 0x10]
	0x039A6F54 CBZ X8, 0x39A6F80
	0x039A6F58 ADRP X9, 0x74D000
	0x039A6F5C LDR X9, [X9 + 0xA90]
	0x039A6F60 LDR V0, [X8 + 0x18]
	0x039A6F64 ADD X1, X31, 0xC
	0x039A6F68 LDR X0, [X9]
	0x039A6F6C STR S0, [X31 + 0xC]
	0x039A6F70 BL 0x1C16E04
	0x039A6F74 LDP X20, X19, [X31 + 0x10]
	0x039A6F78 LDR X30, [X31], #0x20
	0x039A6F7C RET
	0x039A6F80 BL 0x1C16F20
	0x039A6F84 STR X30, [X31 - 0x20]!
	0x039A6F88 STP X20, X19, [X31 + 0x10]
	0x039A6F8C ADRP X20, 0xA3B000
	0x039A6F90 LDRB W8, [X20 + 0xBAC]
	0x039A6F94 MOV X19, X0
	0x039A6F98 TBNZ X8, 0x0, 0x39A6FB0
	0x039A6F9C ADRP X0, 0x74D000
	0x039A6FA0 LDR X0, [X0 + 0xA90]
	0x039A6FA4 BL 0x1C16CF4
	0x039A6FA8 MOVZ W8, 0x1
	0x039A6FAC STRB W8, [X20 + 0xBAC]
	0x039A6FB0 LDR X8, [X19 + 0x10]
	0x039A6FB4 CBZ X8, 0x39A6FE0
	0x039A6FB8 ADRP X9, 0x74D000
	0x039A6FBC LDR X9, [X9 + 0xA90]
	0x039A6FC0 LDR V0, [X8 + 0x30]
	0x039A6FC4 ADD X1, X31, 0xC
	0x039A6FC8 LDR X0, [X9]
	0x039A6FCC STR S0, [X31 + 0xC]
	0x039A6FD0 BL 0x1C16E04
	0x039A6FD4 LDP X20, X19, [X31 + 0x10]
	0x039A6FD8 LDR X30, [X31], #0x20
	0x039A6FDC RET
	0x039A6FE0 BL 0x1C16F20
	0x039A6FE4 STR X30, [X31 - 0x20]!
	0x039A6FE8 STP X20, X19, [X31 + 0x10]
	0x039A6FEC ADRP X20, 0xA3B000
	0x039A6FF0 LDRB W8, [X20 + 0xBAD]
	0x039A6FF4 MOV X19, X0
	0x039A6FF8 TBNZ X8, 0x0, 0x39A7010
	0x039A6FFC ADRP X0, 0x74D000
	0x039A7000 LDR X0, [X0 + 0xA90]
	0x039A7004 BL 0x1C16CF4
	0x039A7008 MOVZ W8, 0x1
	0x039A700C STRB W8, [X20 + 0xBAD]
	0x039A7010 LDR X8, [X19 + 0x10]
	0x039A7014 CBZ X8, 0x39A7040
	0x039A7018 ADRP X9, 0x74C000
	0x039A701C LDR X9, [X9 + 0xA90]
	0x039A7020 LDR V0, [X8 + 0x48]
	0x039A7024 ADD X1, X31, 0xC
	0x039A7028 LDR X0, [X9]
	0x039A702C STR S0, [X31 + 0xC]
	0x039A7030 BL 0x1C16E04
	0x039A7034 LDP X20, X19, [X31 + 0x10]
	0x039A7038 LDR X30, [X31], #0x20
	0x039A703C RET
	0x039A7040 BL 0x1C16F20
	0x039A7044 STR X30, [X31 - 0x20]!
	0x039A7048 STP X20, X19, [X31 + 0x10]
	0x039A704C ADRP X20, 0xA3A000
	0x039A7050 LDRB W8, [X20 + 0xBAE]
	0x039A7054 MOV X19, X0
	0x039A7058 TBNZ X8, 0x0, 0x39A7070
	0x039A705C ADRP X0, 0x74C000
	0x039A7060 LDR X0, [X0 + 0xA90]
	0x039A7064 BL 0x1C16CF4
	0x039A7068 MOVZ W8, 0x1
	0x039A706C STRB W8, [X20 + 0xBAE]
	0x039A7070 LDR X8, [X19 + 0x10]
	0x039A7074 CBZ X8, 0x39A70A0
	0x039A7078 ADRP X9, 0x74C000
	0x039A707C LDR X9, [X9 + 0xA90]
	0x039A7080 LDR V0, [X8 + 0x1C]
	0x039A7084 ADD X1, X31, 0xC
	0x039A7088 LDR X0, [X9]
	0x039A708C STR S0, [X31 + 0xC]
	0x039A7090 BL 0x1C16E04
	0x039A7094 LDP X20, X19, [X31 + 0x10]
	0x039A7098 LDR X30, [X31], #0x20
	0x039A709C RET
	0x039A70A0 BL 0x1C16F20
	0x039A70A4 STR X30, [X31 - 0x20]!
	0x039A70A8 STP X20, X19, [X31 + 0x10]
	0x039A70AC ADRP X20, 0xA3A000
	0x039A70B0 LDRB W8, [X20 + 0xBAF]
	0x039A70B4 MOV X19, X0
	0x039A70B8 TBNZ X8, 0x0, 0x39A70D0
	0x039A70BC ADRP X0, 0x74C000
	0x039A70C0 LDR X0, [X0 + 0xA90]
	0x039A70C4 BL 0x1C16CF4
	0x039A70C8 MOVZ W8, 0x1
	0x039A70CC STRB W8, [X20 + 0xBAF]
	0x039A70D0 LDR X8, [X19 + 0x10]
	0x039A70D4 CBZ X8, 0x39A7100
	0x039A70D8 ADRP X9, 0x74C000
	0x039A70DC LDR X9, [X9 + 0xA90]
	0x039A70E0 LDR V0, [X8 + 0x34]
	0x039A70E4 ADD X1, X31, 0xC
	0x039A70E8 LDR X0, [X9]
	0x039A70EC STR S0, [X31 + 0xC]
	0x039A70F0 BL 0x1C16E04
	0x039A70F4 LDP X20, X19, [X31 + 0x10]
	0x039A70F8 LDR X30, [X31], #0x20
	0x039A70FC RET
	0x039A7100 BL 0x1C16F20
	0x039A7104 STR X30, [X31 - 0x20]!
	0x039A7108 STP X20, X19, [X31 + 0x10]
	0x039A710C ADRP X20, 0xA3A000
	0x039A7110 LDRB W8, [X20 + 0xBB0]
	0x039A7114 MOV X19, X0
	0x039A7118 TBNZ X8, 0x0, 0x39A7130
	0x039A711C ADRP X0, 0x74C000
	0x039A7120 LDR X0, [X0 + 0xA90]
	0x039A7124 BL 0x1C16CF4
	0x039A7128 MOVZ W8, 0x1
	0x039A712C STRB W8, [X20 + 0xBB0]
	0x039A7130 LDR X8, [X19 + 0x10]
	0x039A7134 CBZ X8, 0x39A7160
	0x039A7138 ADRP X9, 0x74C000
	0x039A713C LDR X9, [X9 + 0xA90]
	0x039A7140 LDR V0, [X8 + 0x4C]
	0x039A7144 ADD X1, X31, 0xC
	0x039A7148 LDR X0, [X9]
	0x039A714C STR S0, [X31 + 0xC]
	0x039A7150 BL 0x1C16E04
	0x039A7154 LDP X20, X19, [X31 + 0x10]
	0x039A7158 LDR X30, [X31], #0x20
	0x039A715C RET
	0x039A7160 BL 0x1C16F20
	0x039A7164 STR X30, [X31 - 0x20]!
	0x039A7168 STP X20, X19, [X31 + 0x10]
	0x039A716C ADRP X20, 0xA3A000
	0x039A7170 LDRB W8, [X20 + 0xBB1]
	0x039A7174 MOV X19, X0
	0x039A7178 TBNZ X8, 0x0, 0x39A7190
	0x039A717C ADRP X0, 0x74C000
	0x039A7180 LDR X0, [X0 + 0xA90]
	0x039A7184 BL 0x1C16CF4
	0x039A7188 MOVZ W8, 0x1
	0x039A718C STRB W8, [X20 + 0xBB1]
	0x039A7190 LDR X8, [X19 + 0x10]
	0x039A7194 CBZ X8, 0x39A71C0
	0x039A7198 ADRP X9, 0x74C000
	0x039A719C LDR X9, [X9 + 0xA90]
	0x039A71A0 LDR V0, [X8 + 0x20]
	0x039A71A4 ADD X1, X31, 0xC
	0x039A71A8 LDR X0, [X9]
	0x039A71AC STR S0, [X31 + 0xC]
	0x039A71B0 BL 0x1C16E04
	0x039A71B4 LDP X20, X19, [X31 + 0x10]
	0x039A71B8 LDR X30, [X31], #0x20
	0x039A71BC RET
	0x039A71C0 BL 0x1C16F20
	0x039A71C4 STR X30, [X31 - 0x20]!
	0x039A71C8 STP X20, X19, [X31 + 0x10]
	0x039A71CC ADRP X20, 0xA3A000
	0x039A71D0 LDRB W8, [X20 + 0xBB2]
	0x039A71D4 MOV X19, X0
	0x039A71D8 TBNZ X8, 0x0, 0x39A71F0
	0x039A71DC ADRP X0, 0x74C000
	0x039A71E0 LDR X0, [X0 + 0xA90]
	0x039A71E4 BL 0x1C16CF4
	0x039A71E8 MOVZ W8, 0x1
	0x039A71EC STRB W8, [X20 + 0xBB2]
	0x039A71F0 LDR X8, [X19 + 0x10]
	0x039A71F4 CBZ X8, 0x39A7220
	0x039A71F8 ADRP X9, 0x74C000
	0x039A71FC LDR X9, [X9 + 0xA90]
	0x039A7200 LDR V0, [X8 + 0x38]
	0x039A7204 ADD X1, X31, 0xC
	0x039A7208 LDR X0, [X9]
	0x039A720C STR S0, [X31 + 0xC]
	0x039A7210 BL 0x1C16E04
	0x039A7214 LDP X20, X19, [X31 + 0x10]
	0x039A7218 LDR X30, [X31], #0x20
	0x039A721C RET
	0x039A7220 BL 0x1C16F20
	0x039A7224 STR X30, [X31 - 0x20]!
	0x039A7228 STP X20, X19, [X31 + 0x10]
	0x039A722C ADRP X20, 0xA3A000
	0x039A7230 LDRB W8, [X20 + 0xBB3]
	0x039A7234 MOV X19, X0
	0x039A7238 TBNZ X8, 0x0, 0x39A7250
	0x039A723C ADRP X0, 0x74C000
	0x039A7240 LDR X0, [X0 + 0xA90]
	0x039A7244 BL 0x1C16CF4
	0x039A7248 MOVZ W8, 0x1
	0x039A724C STRB W8, [X20 + 0xBB3]
	0x039A7250 LDR X8, [X19 + 0x10]
	0x039A7254 CBZ X8, 0x39A7280
	0x039A7258 ADRP X9, 0x74C000
	0x039A725C LDR X9, [X9 + 0xA90]
	0x039A7260 LDR V0, [X8 + 0x50]
	0x039A7264 ADD X1, X31, 0xC
	0x039A7268 LDR X0, [X9]
	0x039A726C STR S0, [X31 + 0xC]
	0x039A7270 BL 0x1C16E04
	0x039A7274 LDP X20, X19, [X31 + 0x10]
	0x039A7278 LDR X30, [X31], #0x20
	0x039A727C RET
	0x039A7280 BL 0x1C16F20
	0x039A7284 STR X30, [X31 - 0x20]!
	0x039A7288 STP X20, X19, [X31 + 0x10]
	0x039A728C ADRP X20, 0xA3A000
	0x039A7290 LDRB W8, [X20 + 0xBB4]
	0x039A7294 MOV X19, X0
	0x039A7298 TBNZ X8, 0x0, 0x39A72B0
	0x039A729C ADRP X0, 0x74C000
	0x039A72A0 LDR X0, [X0 + 0xA90]
	0x039A72A4 BL 0x1C16CF4
	0x039A72A8 MOVZ W8, 0x1
	0x039A72AC STRB W8, [X20 + 0xBB4]
	0x039A72B0 LDR X8, [X19 + 0x10]
	0x039A72B4 CBZ X8, 0x39A72E0
	0x039A72B8 ADRP X9, 0x74C000
	0x039A72BC LDR X9, [X9 + 0xA90]
	0x039A72C0 LDR V0, [X8 + 0x28]
	0x039A72C4 ADD X1, X31, 0xC
	0x039A72C8 LDR X0, [X9]
	0x039A72CC STR S0, [X31 + 0xC]
	0x039A72D0 BL 0x1C16E04
	0x039A72D4 LDP X20, X19, [X31 + 0x10]
	0x039A72D8 LDR X30, [X31], #0x20
	0x039A72DC RET
	0x039A72E0 BL 0x1C16F20
	0x039A72E4 STR X30, [X31 - 0x20]!
	0x039A72E8 STP X20, X19, [X31 + 0x10]
	0x039A72EC ADRP X20, 0xA3A000
	0x039A72F0 LDRB W8, [X20 + 0xBB5]
	0x039A72F4 MOV X19, X0
	0x039A72F8 TBNZ X8, 0x0, 0x39A7310
	0x039A72FC ADRP X0, 0x74C000
	0x039A7300 LDR X0, [X0 + 0xA90]
	0x039A7304 BL 0x1C16CF4
	0x039A7308 MOVZ W8, 0x1
	0x039A730C STRB W8, [X20 + 0xBB5]
	0x039A7310 LDR X8, [X19 + 0x10]
	0x039A7314 CBZ X8, 0x39A7340
	0x039A7318 ADRP X9, 0x74C000
	0x039A731C LDR X9, [X9 + 0xA90]
	0x039A7320 LDR V0, [X8 + 0x40]
	0x039A7324 ADD X1, X31, 0xC
	0x039A7328 LDR X0, [X9]
	0x039A732C STR S0, [X31 + 0xC]
	0x039A7330 BL 0x1C16E04
	0x039A7334 LDP X20, X19, [X31 + 0x10]
	0x039A7338 LDR X30, [X31], #0x20
	0x039A733C RET
	0x039A7340 BL 0x1C16F20
	0x039A7344 STR X30, [X31 - 0x20]!
	0x039A7348 STP X20, X19, [X31 + 0x10]
	0x039A734C ADRP X20, 0xA3A000
	0x039A7350 LDRB W8, [X20 + 0xBB6]
	0x039A7354 MOV X19, X0
	0x039A7358 TBNZ X8, 0x0, 0x39A7370
	0x039A735C ADRP X0, 0x74C000
	0x039A7360 LDR X0, [X0 + 0xA90]
	0x039A7364 BL 0x1C16CF4
	0x039A7368 MOVZ W8, 0x1
	0x039A736C STRB W8, [X20 + 0xBB6]
	0x039A7370 LDR X8, [X19 + 0x10]
	0x039A7374 CBZ X8, 0x39A73A0
	0x039A7378 ADRP X9, 0x74C000
	0x039A737C LDR X9, [X9 + 0xA90]
	0x039A7380 LDR V0, [X8 + 0x58]
	0x039A7384 ADD X1, X31, 0xC
	0x039A7388 LDR X0, [X9]
	0x039A738C STR S0, [X31 + 0xC]
	0x039A7390 BL 0x1C16E04
	0x039A7394 LDP X20, X19, [X31 + 0x10]
	0x039A7398 LDR X30, [X31], #0x20
	0x039A739C RET
	0x039A73A0 BL 0x1C16F20
	0x039A73A4 STR X30, [X31 - 0x20]!
	0x039A73A8 STP X20, X19, [X31 + 0x10]
	0x039A73AC ADRP X20, 0xA3A000
	0x039A73B0 LDRB W8, [X20 + 0xBB7]
	0x039A73B4 MOV X19, X0
	0x039A73B8 TBNZ X8, 0x0, 0x39A73D0
	0x039A73BC ADRP X0, 0x74C000
	0x039A73C0 LDR X0, [X0 + 0xA90]
	0x039A73C4 BL 0x1C16CF4
	0x039A73C8 MOVZ W8, 0x1
	0x039A73CC STRB W8, [X20 + 0xBB7]
	0x039A73D0 LDR X8, [X19 + 0x10]
	0x039A73D4 CBZ X8, 0x39A7400
	0x039A73D8 ADRP X9, 0x74C000
	0x039A73DC LDR X9, [X9 + 0xA90]
	0x039A73E0 LDR V0, [X8 + 0x24]
	0x039A73E4 ADD X1, X31, 0xC
	0x039A73E8 LDR X0, [X9]
	0x039A73EC STR S0, [X31 + 0xC]
	0x039A73F0 BL 0x1C16E04
	0x039A73F4 LDP X20, X19, [X31 + 0x10]
	0x039A73F8 LDR X30, [X31], #0x20
	0x039A73FC RET
	0x039A7400 BL 0x1C16F20
	0x039A7404 STR X30, [X31 - 0x20]!
	0x039A7408 STP X20, X19, [X31 + 0x10]
	0x039A740C ADRP X20, 0xA3A000
	0x039A7410 LDRB W8, [X20 + 0xBB8]
	0x039A7414 MOV X19, X0
	0x039A7418 TBNZ X8, 0x0, 0x39A7430
	0x039A741C ADRP X0, 0x74C000
	0x039A7420 LDR X0, [X0 + 0xA90]
	0x039A7424 BL 0x1C16CF4
	0x039A7428 MOVZ W8, 0x1
	0x039A742C STRB W8, [X20 + 0xBB8]
	0x039A7430 LDR X8, [X19 + 0x10]
	0x039A7434 CBZ X8, 0x39A7460
	0x039A7438 ADRP X9, 0x74C000
	0x039A743C LDR X9, [X9 + 0xA90]
	0x039A7440 LDR V0, [X8 + 0x3C]
	0x039A7444 ADD X1, X31, 0xC
	0x039A7448 LDR X0, [X9]
	0x039A744C STR S0, [X31 + 0xC]
	0x039A7450 BL 0x1C16E04
	0x039A7454 LDP X20, X19, [X31 + 0x10]
	0x039A7458 LDR X30, [X31], #0x20
	0x039A745C RET
	0x039A7460 BL 0x1C16F20
	0x039A7464 STR X30, [X31 - 0x20]!
	0x039A7468 STP X20, X19, [X31 + 0x10]
	0x039A746C ADRP X20, 0xA3A000
	0x039A7470 LDRB W8, [X20 + 0xBB9]
	0x039A7474 MOV X19, X0
	0x039A7478 TBNZ X8, 0x0, 0x39A7490
	0x039A747C ADRP X0, 0x74C000
	0x039A7480 LDR X0, [X0 + 0xA90]
	0x039A7484 BL 0x1C16CF4
	0x039A7488 MOVZ W8, 0x1
	0x039A748C STRB W8, [X20 + 0xBB9]
	0x039A7490 LDR X8, [X19 + 0x10]
	0x039A7494 CBZ X8, 0x39A74C0
	0x039A7498 ADRP X9, 0x74C000
	0x039A749C LDR X9, [X9 + 0xA90]
	0x039A74A0 LDR V0, [X8 + 0x54]
	0x039A74A4 ADD X1, X31, 0xC
	0x039A74A8 LDR X0, [X9]
	0x039A74AC STR S0, [X31 + 0xC]
	0x039A74B0 BL 0x1C16E04
	0x039A74B4 LDP X20, X19, [X31 + 0x10]
	0x039A74B8 LDR X30, [X31], #0x20
	0x039A74BC RET
	0x039A74C0 BL 0x1C16F20
	0x039A74C4 STR X30, [X31 - 0x20]!
	0x039A74C8 STP X20, X19, [X31 + 0x10]
	0x039A74CC ADRP X20, 0xA3A000
	0x039A74D0 LDRB W8, [X20 + 0xBBA]
	0x039A74D4 MOV X19, X0
	0x039A74D8 TBNZ X8, 0x0, 0x39A74F0
	0x039A74DC ADRP X0, 0x74C000
	0x039A74E0 LDR X0, [X0 + 0xA90]
	0x039A74E4 BL 0x1C16CF4
	0x039A74E8 MOVZ W8, 0x1
	0x039A74EC STRB W8, [X20 + 0xBBA]
	0x039A74F0 LDR X8, [X19 + 0x10]
	0x039A74F4 CBZ X8, 0x39A7520
	0x039A74F8 ADRP X9, 0x74C000
	0x039A74FC LDR X9, [X9 + 0xA90]
	0x039A7500 LDR V0, [X8 + 0x2C]
	0x039A7504 ADD X1, X31, 0xC
	0x039A7508 LDR X0, [X9]
	0x039A750C STR S0, [X31 + 0xC]
	0x039A7510 BL 0x1C16E04
	0x039A7514 LDP X20, X19, [X31 + 0x10]
	0x039A7518 LDR X30, [X31], #0x20
	0x039A751C RET
	0x039A7520 BL 0x1C16F20
	0x039A7524 STR X30, [X31 - 0x20]!
	0x039A7528 STP X20, X19, [X31 + 0x10]
	0x039A752C ADRP X20, 0xA3A000
	0x039A7530 LDRB W8, [X20 + 0xBBB]
	0x039A7534 MOV X19, X0
	0x039A7538 TBNZ X8, 0x0, 0x39A7550
	0x039A753C ADRP X0, 0x74C000
	0x039A7540 LDR X0, [X0 + 0xA90]
	0x039A7544 BL 0x1C16CF4
	0x039A7548 MOVZ W8, 0x1
	0x039A754C STRB W8, [X20 + 0xBBB]
	0x039A7550 LDR X8, [X19 + 0x10]
	0x039A7554 CBZ X8, 0x39A7580
	0x039A7558 ADRP X9, 0x74C000
	0x039A755C LDR X9, [X9 + 0xA90]
	0x039A7560 LDR V0, [X8 + 0x44]
	0x039A7564 ADD X1, X31, 0xC
	0x039A7568 LDR X0, [X9]
	0x039A756C STR S0, [X31 + 0xC]
	0x039A7570 BL 0x1C16E04
	0x039A7574 LDP X20, X19, [X31 + 0x10]
	0x039A7578 LDR X30, [X31], #0x20
	0x039A757C RET
	0x039A7580 BL 0x1C16F20
	0x039A7584 STR X30, [X31 - 0x20]!
	0x039A7588 STP X20, X19, [X31 + 0x10]
	0x039A758C ADRP X20, 0xA3A000
	0x039A7590 LDRB W8, [X20 + 0xBBC]
	0x039A7594 MOV X19, X0
	0x039A7598 TBNZ X8, 0x0, 0x39A75B0
	0x039A759C ADRP X0, 0x74C000
	0x039A75A0 LDR X0, [X0 + 0xA90]
	0x039A75A4 BL 0x1C16CF4
	0x039A75A8 MOVZ W8, 0x1
	0x039A75AC STRB W8, [X20 + 0xBBC]
	0x039A75B0 LDR X8, [X19 + 0x10]
	0x039A75B4 CBZ X8, 0x39A75E0
	0x039A75B8 ADRP X9, 0x74C000
	0x039A75BC LDR X9, [X9 + 0xA90]
	0x039A75C0 LDR V0, [X8 + 0x5C]
	0x039A75C4 ADD X1, X31, 0xC
	0x039A75C8 LDR X0, [X9]
	0x039A75CC STR S0, [X31 + 0xC]
	0x039A75D0 BL 0x1C16E04
	0x039A75D4 LDP X20, X19, [X31 + 0x10]
	0x039A75D8 LDR X30, [X31], #0x20
	0x039A75DC RET
	0x039A75E0 BL 0x1C16F20
	0x039A75E4 STR X30, [X31 - 0x20]!
	0x039A75E8 STP X20, X19, [X31 + 0x10]
	0x039A75EC ADRP X20, 0xA3A000
	0x039A75F0 LDRB W8, [X20 + 0xBBD]
	0x039A75F4 MOV X19, X0
	0x039A75F8 TBNZ X8, 0x0, 0x39A7610
	0x039A75FC ADRP X0, 0x74C000
	0x039A7600 LDR X0, [X0 + 0xA90]
	0x039A7604 BL 0x1C16CF4
	0x039A7608 MOVZ W8, 0x1
	0x039A760C STRB W8, [X20 + 0xBBD]
	0x039A7610 LDR X8, [X19 + 0x18]
	0x039A7614 CBZ X8, 0x39A7640
	0x039A7618 ADRP X9, 0x74C000
	0x039A761C LDR X9, [X9 + 0xA90]
	0x039A7620 LDR V0, [X8 + 0x1C]
	0x039A7624 ADD X1, X31, 0xC
	0x039A7628 LDR X0, [X9]
	0x039A762C STR S0, [X31 + 0xC]
	0x039A7630 BL 0x1C16E04
	0x039A7634 LDP X20, X19, [X31 + 0x10]
	0x039A7638 LDR X30, [X31], #0x20
	0x039A763C RET
	0x039A7640 BL 0x1C16F20
	0x039A7644 STR X30, [X31 - 0x20]!
	0x039A7648 STP X20, X19, [X31 + 0x10]
	0x039A764C ADRP X20, 0xA3A000
	0x039A7650 LDRB W8, [X20 + 0xBBE]
	0x039A7654 MOV X19, X0
	0x039A7658 TBNZ X8, 0x0, 0x39A7670
	0x039A765C ADRP X0, 0x74C000
	0x039A7660 LDR X0, [X0 + 0xA90]
	0x039A7664 BL 0x1C16CF4
	0x039A7668 MOVZ W8, 0x1
	0x039A766C STRB W8, [X20 + 0xBBE]
	0x039A7670 LDR X8, [X19 + 0x18]
	0x039A7674 CBZ X8, 0x39A76A0
	0x039A7678 ADRP X9, 0x74C000
	0x039A767C LDR X9, [X9 + 0xA90]
	0x039A7680 LDR V0, [X8 + 0x20]
	0x039A7684 ADD X1, X31, 0xC
	0x039A7688 LDR X0, [X9]
	0x039A768C STR S0, [X31 + 0xC]
	0x039A7690 BL 0x1C16E04
	0x039A7694 LDP X20, X19, [X31 + 0x10]
	0x039A7698 LDR X30, [X31], #0x20
	0x039A769C RET
	0x039A76A0 BL 0x1C16F20
	0x039A76A4 STR X30, [X31 - 0x20]!
	0x039A76A8 STP X20, X19, [X31 + 0x10]
	0x039A76AC ADRP X20, 0xA3A000
	0x039A76B0 LDRB W8, [X20 + 0xBBF]
	0x039A76B4 MOV X19, X0
	0x039A76B8 TBNZ X8, 0x0, 0x39A76D0
	0x039A76BC ADRP X0, 0x74C000
	0x039A76C0 LDR X0, [X0 + 0xA90]
	0x039A76C4 BL 0x1C16CF4
	0x039A76C8 MOVZ W8, 0x1
	0x039A76CC STRB W8, [X20 + 0xBBF]
	0x039A76D0 LDR X8, [X19 + 0x18]
	0x039A76D4 CBZ X8, 0x39A7700
	0x039A76D8 ADRP X9, 0x74C000
	0x039A76DC LDR X9, [X9 + 0xA90]
	0x039A76E0 LDR V0, [X8 + 0x18]
	0x039A76E4 ADD X1, X31, 0xC
	0x039A76E8 LDR X0, [X9]
	0x039A76EC STR S0, [X31 + 0xC]
	0x039A76F0 BL 0x1C16E04
	0x039A76F4 LDP X20, X19, [X31 + 0x10]
	0x039A76F8 LDR X30, [X31], #0x20
	0x039A76FC RET
	0x039A7700 BL 0x1C16F20
	0x039A7704 STR X30, [X31 - 0x20]!
	0x039A7708 STP X20, X19, [X31 + 0x10]
	0x039A770C ADRP X20, 0xA3A000
	0x039A7710 LDRB W8, [X20 + 0xBC0]
	0x039A7714 MOV X19, X0
	0x039A7718 TBNZ X8, 0x0, 0x39A7730
	0x039A771C ADRP X0, 0x74C000
	0x039A7720 LDR X0, [X0 + 0xA90]
	0x039A7724 BL 0x1C16CF4
	0x039A7728 MOVZ W8, 0x1
	0x039A772C STRB W8, [X20 + 0xBC0]
	0x039A7730 LDR X8, [X19 + 0x18]
	0x039A7734 CBZ X8, 0x39A7760
	0x039A7738 ADRP X9, 0x74C000
	0x039A773C LDR X9, [X9 + 0xA90]
	0x039A7740 LDR V0, [X8 + 0x24]
	0x039A7744 ADD X1, X31, 0xC
	0x039A7748 LDR X0, [X9]
	0x039A774C STR S0, [X31 + 0xC]
	0x039A7750 BL 0x1C16E04
	0x039A7754 LDP X20, X19, [X31 + 0x10]
	0x039A7758 LDR X30, [X31], #0x20
	0x039A775C RET
	0x039A7760 BL 0x1C16F20
	0x039A7764 STP X30, X23, [X31 - 0x30]!
	0x039A7768 STP X22, X21, [X31 + 0x10]
	0x039A776C STP X20, X19, [X31 + 0x20]
	0x039A7770 ADRP X21, 0xA3A000
	0x039A7774 ADRP X23, 0x7AA000
	0x039A7778 ADRP X20, 0x7AA000
	0x039A777C ADRP X22, 0x7AA000
	0x039A7780 LDRB W8, [X21 + 0xBC1]
	0x039A7784 LDR X23, [X23 + 0x910]
	0x039A7788 LDR X20, [X20 + 0x918]
	0x039A778C LDR X22, [X22 + 0x920]
	0x039A7790 MOV X19, X0
	0x039A7794 TBNZ X8, 0x0, 0x39A7830
	0x039A7798 ADRP X0, 0x7AA000
	0x039A779C LDR X0, [X0 + 0x910]
	0x039A77A0 BL 0x1C16CF4
	0x039A77A4 ADRP X0, 0x7AA000
	0x039A77A8 LDR X0, [X0 + 0x920]
	0x039A77AC BL 0x1C16CF4
	0x039A77B0 ADRP X0, 0x7AA000
	0x039A77B4 LDR X0, [X0 + 0x918]
	0x039A77B8 BL 0x1C16CF4
	0x039A77BC ADRP X0, 0x7AA000
	0x039A77C0 LDR X0, [X0 + 0x928]
	0x039A77C4 BL 0x1C16CF4
	0x039A77C8 ADRP X0, 0x7AA000
	0x039A77CC LDR X0, [X0 + 0x930]
	0x039A77D0 BL 0x1C16CF4
	0x039A77D4 ADRP X0, 0x7AA000
	0x039A77D8 LDR X0, [X0 + 0x938]
	0x039A77DC BL 0x1C16CF4
	0x039A77E0 ADRP X0, 0x7AA000
	0x039A77E4 LDR X0, [X0 + 0x940]
	0x039A77E8 BL 0x1C16CF4
	0x039A77EC ADRP X0, 0x7AA000
	0x039A77F0 LDR X0, [X0 + 0x948]
	0x039A77F4 BL 0x1C16CF4
	0x039A77F8 ADRP X0, 0x7AA000
	0x039A77FC LDR X0, [X0 + 0x950]
	0x039A7800 BL 0x1C16CF4
	0x039A7804 ADRP X0, 0x7AA000
	0x039A7808 LDR X0, [X0 + 0x958]
	0x039A780C BL 0x1C16CF4
	0x039A7810 ADRP X0, 0x7AA000
	0x039A7814 LDR X0, [X0 + 0x960]
	0x039A7818 BL 0x1C16CF4
	0x039A781C ADRP X0, 0x7AA000
	0x039A7820 LDR X0, [X0 + 0x968]
	0x039A7824 BL 0x1C16CF4
	0x039A7828 MOVZ W8, 0x1
	0x039A782C STRB W8, [X21 + 0xBC1]
	0x039A7830 LDR X0, [X23]
	0x039A7834 MOVZ W1, 0x9
	0x039A7838 BL 0x1C16D6C
	0x039A783C STR X0, [X19 + 0x10]
	0x039A7840 LDR X0, [X20]
	0x039A7844 MOVZ W1, 0x9
	0x039A7848 BL 0x1C16D6C
	0x039A784C STR X0, [X19 + 0x18]
	0x039A7850 LDR X0, [X22]
	0x039A7854 BL 0x1C16F10
	0x039A7858 MOV X1, X31
	0x039A785C MOV X20, X0
	0x039A7860 BL 0x33BDD8C
	0x039A7864 LDR X0, [X19 + 0x20]
	0x039A7868 CBZ X0, 0x39A7B44
	0x039A786C ADRP X8, 0x7AA000
	0x039A7870 LDR X8, [X8 + 0x960]
	0x039A7874 MOV W2, W31
	0x039A7878 MOV X3, X31
	0x039A787C LDR X1, [X8]
	0x039A7880 BL 0x37376AC
	0x039A7884 CBZ X20, 0x39A7B44
	0x039A7888 STR X0, [X20 + 0x10]
	0x039A788C MOV X0, X19
	0x039A7890 MOV W1, W31
	0x039A7894 MOV X2, X20
	0x039A7898 STR W31, [X20 + 0x18]
	0x039A789C BL 0x39A7B50
	0x039A78A0 LDR X0, [X22]
	0x039A78A4 BL 0x1C16F10
	0x039A78A8 MOV X1, X31
	0x039A78AC MOV X20, X0
	0x039A78B0 BL 0x33BDD8C
	0x039A78B4 LDR X0, [X19 + 0x20]
	0x039A78B8 CBZ X0, 0x39A7B44
	0x039A78BC ADRP X8, 0x7AA000
	0x039A78C0 LDR X8, [X8 + 0x940]
	0x039A78C4 MOV W2, W31
	0x039A78C8 MOV X3, X31
	0x039A78CC LDR X1, [X8]
	0x039A78D0 BL 0x37376AC
	0x039A78D4 CBZ X20, 0x39A7B44
	0x039A78D8 STR X0, [X20 + 0x10]
	0x039A78DC MOVZ W1, 0x8
	0x039A78E0 MOV X0, X19
	0x039A78E4 MOV X2, X20
	0x039A78E8 STR W31, [X20 + 0x18]
	0x039A78EC BL 0x39A7B50
	0x039A78F0 LDR X0, [X22]
	0x039A78F4 BL 0x1C16F10
	0x039A78F8 MOV X1, X31
	0x039A78FC MOV X20, X0
	0x039A7900 BL 0x33BDD8C
	0x039A7904 LDR X0, [X19 + 0x20]
	0x039A7908 CBZ X0, 0x39A7B44
	0x039A790C ADRP X8, 0x7AA000
	0x039A7910 LDR X8, [X8 + 0x950]
	0x039A7914 MOV W2, W31
	0x039A7918 MOV X3, X31
	0x039A791C LDR X1, [X8]
	0x039A7920 BL 0x37376AC
	0x039A7924 CBZ X20, 0x39A7B44
	0x039A7928 STR X0, [X20 + 0x10]
	0x039A792C MOVZ W1, 0x2
	0x039A7930 MOV X0, X19
	0x039A7934 MOV X2, X20
	0x039A7938 STR W31, [X20 + 0x18]
	0x039A793C BL 0x39A7B50
	0x039A7940 LDR X0, [X22]
	0x039A7944 BL 0x1C16F10
	0x039A7948 MOV X1, X31
	0x039A794C MOV X20, X0
	0x039A7950 BL 0x33BDD8C
	0x039A7954 LDR X0, [X19 + 0x20]
	0x039A7958 CBZ X0, 0x39A7B44
	0x039A795C ADRP X8, 0x7AA000
	0x039A7960 LDR X8, [X8 + 0x948]
	0x039A7964 MOV W2, W31
	0x039A7968 MOV X3, X31
	0x039A796C LDR X1, [X8]
	0x039A7970 BL 0x37376AC
	0x039A7974 CBZ X20, 0x39A7B44
	0x039A7978 STR X0, [X20 + 0x10]
	0x039A797C MOVZ W1, 0x1
	0x039A7980 MOV X0, X19
	0x039A7984 MOV X2, X20
	0x039A7988 STR W31, [X20 + 0x18]
	0x039A798C BL 0x39A7B50
	0x039A7990 LDR X0, [X22]
	0x039A7994 BL 0x1C16F10
	0x039A7998 MOV X1, X31
	0x039A799C MOV X20, X0
	0x039A79A0 BL 0x33BDD8C
	0x039A79A4 LDR X0, [X19 + 0x20]
	0x039A79A8 CBZ X0, 0x39A7B44
	0x039A79AC ADRP X8, 0x7AA000
	0x039A79B0 LDR X8, [X8 + 0x938]
	0x039A79B4 MOV W2, W31
	0x039A79B8 MOV X3, X31
	0x039A79BC LDR X1, [X8]
	0x039A79C0 BL 0x37376AC
	0x039A79C4 CBZ X20, 0x39A7B44
	0x039A79C8 STR X0, [X20 + 0x10]
	0x039A79CC MOVZ W1, 0x3
	0x039A79D0 MOV X0, X19
	0x039A79D4 MOV X2, X20
	0x039A79D8 STR W31, [X20 + 0x18]
	0x039A79DC BL 0x39A7B50
	0x039A79E0 LDR X0, [X22]
	0x039A79E4 BL 0x1C16F10
	0x039A79E8 MOV X1, X31
	0x039A79EC MOV X21, X0
	0x039A79F0 BL 0x33BDD8C
	0x039A79F4 LDR X0, [X19 + 0x20]
	0x039A79F8 CBZ X0, 0x39A7B44
	0x039A79FC ADRP X8, 0x7AA000
	0x039A7A00 LDR X8, [X8 + 0x930]
	0x039A7A04 MOV W2, W31
	0x039A7A08 MOV X3, X31
	0x039A7A0C LDR X1, [X8]
	0x039A7A10 BL 0x37376AC
	0x039A7A14 CBZ X21, 0x39A7B44
	0x039A7A18 STR X0, [X21 + 0x10]
	0x039A7A1C MOVZ W1, 0x4
	0x039A7A20 MOV X0, X19
	0x039A7A24 MOV X2, X21
	0x039A7A28 STR W31, [X21 + 0x18]
	0x039A7A2C BL 0x39A7B50
	0x039A7A30 LDR X0, [X22]
	0x039A7A34 BL 0x1C16F10
	0x039A7A38 MOV X1, X31
	0x039A7A3C MOV X21, X0
	0x039A7A40 BL 0x33BDD8C
	0x039A7A44 LDR X0, [X19 + 0x20]
	0x039A7A48 CBZ X0, 0x39A7B44
	0x039A7A4C ADRP X8, 0x7AA000
	0x039A7A50 LDR X8, [X8 + 0x958]
	0x039A7A54 MOV W2, W31
	0x039A7A58 MOV X3, X31
	0x039A7A5C LDR X1, [X8]
	0x039A7A60 BL 0x37376AC
	0x039A7A64 CBZ X21, 0x39A7B44
	0x039A7A68 STR X0, [X21 + 0x10]
	0x039A7A6C MOVZ W8, 0x1
	0x039A7A70 MOVZ W1, 0x7
	0x039A7A74 MOV X0, X19
	0x039A7A78 MOV X2, X21
	0x039A7A7C STR W8, [X21 + 0x18]
	0x039A7A80 STR W31, [X20 + 0x1C]
	0x039A7A84 BL 0x39A7B50
	0x039A7A88 LDR X0, [X22]
	0x039A7A8C BL 0x1C16F10
	0x039A7A90 MOV X1, X31
	0x039A7A94 MOV X20, X0
	0x039A7A98 BL 0x33BDD8C
	0x039A7A9C LDR X0, [X19 + 0x20]
	0x039A7AA0 CBZ X0, 0x39A7B44
	0x039A7AA4 ADRP X8, 0x7AA000
	0x039A7AA8 LDR X8, [X8 + 0x928]
	0x039A7AAC MOV W2, W31
	0x039A7AB0 MOV X3, X31
	0x039A7AB4 LDR X1, [X8]
	0x039A7AB8 BL 0x37376AC
	0x039A7ABC CBZ X20, 0x39A7B44
	0x039A7AC0 MOVZ X8, 0x1
	0x039A7AC4 MOVK X8, 0xD70A
	0x039A7AC8 MOVK X8, 0x3E230000
	0x039A7ACC STP X0, X8, [X20 + 0x10]
	0x039A7AD0 MOVZ W1, 0x5
	0x039A7AD4 MOV X0, X19
	0x039A7AD8 MOV X2, X20
	0x039A7ADC BL 0x39A7B50
	0x039A7AE0 LDR X0, [X22]
	0x039A7AE4 BL 0x1C16F10
	0x039A7AE8 MOV X1, X31
	0x039A7AEC MOV X20, X0
	0x039A7AF0 BL 0x33BDD8C
	0x039A7AF4 LDR X0, [X19 + 0x20]
	0x039A7AF8 CBZ X0, 0x39A7B44
	0x039A7AFC ADRP X8, 0x7AA000
	0x039A7B00 LDR X8, [X8 + 0x968]
	0x039A7B04 MOV W2, W31
	0x039A7B08 MOV X3, X31
	0x039A7B0C LDR X1, [X8]
	0x039A7B10 BL 0x37376AC
	0x039A7B14 CBZ X20, 0x39A7B44
	0x039A7B18 MOVZ X8, 0x1
	0x039A7B1C MOVK X8, 0xD70A
	0x039A7B20 MOVK X8, 0x3E230000
	0x039A7B24 STP X0, X8, [X20 + 0x10]
	0x039A7B28 MOV X0, X19
	0x039A7B2C MOV X2, X20
	0x039A7B30 LDP X20, X19, [X31 + 0x20]
	0x039A7B34 LDP X22, X21, [X31 + 0x10]
	0x039A7B38 MOVZ W1, 0x6
	0x039A7B3C LDP X30, X23, [X31], #0x30
	0x039A7B40 B 0x39A7B50
	0x039A7B44 BL 0x1C16F20
	0x039A7B48 MOV X1, X31
	0x039A7B4C B 0x33BDD8C
	0x039A7B50 STP X30, X23, [X31 - 0x30]!
	0x039A7B54 STP X22, X21, [X31 + 0x10]
	0x039A7B58 STP X20, X19, [X31 + 0x20]
	0x039A7B5C ADRP X22, 0xA3A000
	0x039A7B60 LDRB W8, [X22 + 0xBC3]
	0x039A7B64 MOV X20, X2
	0x039A7B68 MOV W19, W1
	0x039A7B6C MOV X21, X0
	0x039A7B70 TBNZ X8, 0x0, 0x39A7B88
	0x039A7B74 ADRP X0, 0x7AA000
	0x039A7B78 LDR X0, [X0 + 0x970]
	0x039A7B7C BL 0x1C16CF4
	0x039A7B80 MOVZ W8, 0x1
	0x039A7B84 STRB W8, [X22 + 0xBC3]
	0x039A7B88 LDR X23, [X21 + 0x10]
	0x039A7B8C CBZ X23, 0x39A7C20
	0x039A7B90 CBZ X20, 0x39A7BA8
	0x039A7B94 LDR X8, [X23]
	0x039A7B98 MOV X0, X20
	0x039A7B9C LDR X1, [X8 + 0x40]
	0x039A7BA0 BL 0x1C16E00
	0x039A7BA4 CBZ X0, 0x39A7C28
	0x039A7BA8 LDR W8, [X23 + 0x18]
	0x039A7BAC CMP W8, W19
	0x039A7BB0 B.LS 0x39A7C24
	0x039A7BB4 ADRP X8, 0x7AA000
	0x039A7BB8 LDR X8, [X8 + 0x970]
	0x039A7BBC SXTW X22, W19
	0x039A7BC0 ADD X9, X23, X22, 0x3, LSL
	0x039A7BC4 STR X20, [X9 + 0x20]
	0x039A7BC8 LDR X0, [X8]
	0x039A7BCC LDR X21, [X21 + 0x18]
	0x039A7BD0 BL 0x1C16F10
	0x039A7BD4 MOV X1, X31
	0x039A7BD8 MOV X20, X0
	0x039A7BDC BL 0x33BDD8C
	0x039A7BE0 CBZ X21, 0x39A7C20
	0x039A7BE4 CBZ X20, 0x39A7BFC
	0x039A7BE8 LDR X8, [X21]
	0x039A7BEC MOV X0, X20
	0x039A7BF0 LDR X1, [X8 + 0x40]
	0x039A7BF4 BL 0x1C16E00
	0x039A7BF8 CBZ X0, 0x39A7C28
	0x039A7BFC LDR W8, [X21 + 0x18]
	0x039A7C00 CMP W8, W19
	0x039A7C04 B.LS 0x39A7C24
	0x039A7C08 ADD X8, X21, X22, 0x3, LSL
	0x039A7C0C STR X20, [X8 + 0x20]
	0x039A7C10 LDP X20, X19, [X31 + 0x20]
	0x039A7C14 LDP X22, X21, [X31 + 0x10]
	0x039A7C18 LDP X30, X23, [X31], #0x30
	0x039A7C1C RET
	0x039A7C20 BL 0x1C16F20
	0x039A7C24 BL 0x1C16F28
	0x039A7C28 BL 0x1C16F44
	0x039A7C2C MOV X1, X31
	0x039A7C30 BL 0x1C16DEC
	0x039A7C34 STR X30, [X31 - 0x30]!
	0x039A7C38 STP X22, X21, [X31 + 0x10]
	0x039A7C3C STP X20, X19, [X31 + 0x20]
	0x039A7C40 ADRP X20, 0xA3A000
	0x039A7C44 LDRB W8, [X20 + 0xBC2]
	0x039A7C48 MOV X19, X0
	0x039A7C4C TBNZ X8, 0x0, 0x39A7C7C
	0x039A7C50 ADRP X0, 0x74C000
	0x039A7C54 LDR X0, [X0 + 0xE00]
	0x039A7C58 BL 0x1C16CF4
	0x039A7C5C ADRP X0, 0x79E000
	0x039A7C60 LDR X0, [X0 + 0x490]
	0x039A7C64 BL 0x1C16CF4
	0x039A7C68 ADRP X0, 0x74C000
	0x039A7C6C LDR X0, [X0 + 0xE18]
	0x039A7C70 BL 0x1C16CF4
	0x039A7C74 MOVZ W8, 0x1
	0x039A7C78 STRB W8, [X20 + 0xBC2]
	0x039A7C7C LDR X0, [X19 + 0x20]
	0x039A7C80 CBZ X0, 0x39A7DE8
	0x039A7C84 ADRP X21, 0x74C000
	0x039A7C88 LDR X21, [X21 + 0xE00]
	0x039A7C8C MOV X1, X31
	0x039A7C90 BL 0x373AC2C
	0x039A7C94 MOV X19, X0
	0x039A7C98 CBZ X0, 0x39A7DEC
	0x039A7C9C ADRP X20, 0x74C000
	0x039A7CA0 ADRP X22, 0x79E000
	0x039A7CA4 LDR X20, [X20 + 0xE18]
	0x039A7CA8 LDR X22, [X22 + 0x490]
	0x039A7CAC LDR X8, [X19]
	0x039A7CB0 LDR X1, [X20]
	0x039A7CB4 LDRH W9, [X8 + 0x12E]
	0x039A7CB8 CBZ X9, 0x39A7CDC
	0x039A7CBC LDR X10, [X8 + 0xB0]
	0x039A7CC0 ADD X10, X10, 0x8
	0x039A7CC4 LDUR X11, [X10 - 0x8]
	0x039A7CC8 CMP X11, X1
	0x039A7CCC B.EQ 0x39A7CEC
	0x039A7CD0 SUBS X9, X9, 0x1
	0x039A7CD4 ADD X10, X10, 0x10
	0x039A7CD8 B.NE 0x39A7CC4
	0x039A7CDC MOV X0, X19
	0x039A7CE0 MOV W2, W31
	0x039A7CE4 BL 0x1C5C788
	0x039A7CE8 B 0x39A7CF8
	0x039A7CEC LDRSW X9, [X10]
	0x039A7CF0 ADD X8, X8, X9, 0x4, LSL
	0x039A7CF4 ADD X0, X8, 0x138
	0x039A7CF8 LDP X8, X1, [X0]
	0x039A7CFC MOV X0, X19
	0x039A7D00 BLR X8
	0x039A7D04 TBZ X0, 0x0, 0x39A7D70
	0x039A7D08 LDR X8, [X19]
	0x039A7D0C LDR X1, [X22]
	0x039A7D10 LDRH W9, [X8 + 0x12E]
	0x039A7D14 CBZ X9, 0x39A7D38
	0x039A7D18 LDR X10, [X8 + 0xB0]
	0x039A7D1C ADD X10, X10, 0x8
	0x039A7D20 LDUR X11, [X10 - 0x8]
	0x039A7D24 CMP X11, X1
	0x039A7D28 B.EQ 0x39A7D48
	0x039A7D2C SUBS X9, X9, 0x1
	0x039A7D30 ADD X10, X10, 0x10
	0x039A7D34 B.NE 0x39A7D20
	0x039A7D38 MOV X0, X19
	0x039A7D3C MOV W2, W31
	0x039A7D40 BL 0x1C5C788
	0x039A7D44 B 0x39A7D54
	0x039A7D48 LDRSW X9, [X10]
	0x039A7D4C ADD X8, X8, X9, 0x4, LSL
	0x039A7D50 ADD X0, X8, 0x138
	0x039A7D54 LDP X8, X1, [X0]
	0x039A7D58 MOV X0, X19
	0x039A7D5C BLR X8
	0x039A7D60 CBZ X0, 0x39A7DE4
	0x039A7D64 MOV X1, X31
	0x039A7D68 BL 0x37350C8
	0x039A7D6C B 0x39A7CAC
	0x039A7D70 MOV X20, X31
	0x039A7D74 CBZ X19, 0x39A7DD0
	0x039A7D78 LDR X8, [X19]
	0x039A7D7C LDR X1, [X21]
	0x039A7D80 LDRH W9, [X8 + 0x12E]
	0x039A7D84 CBZ X9, 0x39A7DA8
	0x039A7D88 LDR X10, [X8 + 0xB0]
	0x039A7D8C ADD X10, X10, 0x8
	0x039A7D90 LDUR X11, [X10 - 0x8]
	0x039A7D94 CMP X11, X1
	0x039A7D98 B.EQ 0x39A7DB8
	0x039A7D9C SUBS X9, X9, 0x1
	0x039A7DA0 ADD X10, X10, 0x10
	0x039A7DA4 B.NE 0x39A7D90
	0x039A7DA8 MOV X0, X19
	0x039A7DAC MOV W2, W31
	0x039A7DB0 BL 0x1C5C788
	0x039A7DB4 B 0x39A7DC4
	0x039A7DB8 LDRSW X9, [X10]
	0x039A7DBC ADD X8, X8, X9, 0x4, LSL
	0x039A7DC0 ADD X0, X8, 0x138
	0x039A7DC4 LDP X8, X1, [X0]
	0x039A7DC8 MOV X0, X19
	0x039A7DCC BLR X8
	0x039A7DD0 CBNZ X20, 0x39A7DF0
	0x039A7DD4 LDP X20, X19, [X31 + 0x20]
	0x039A7DD8 LDP X22, X21, [X31 + 0x10]
	0x039A7DDC LDR X30, [X31], #0x30
	0x039A7DE0 RET
	0x039A7DE4 BL 0x1C16F20
	0x039A7DE8 BL 0x1C16F20
	0x039A7DEC BL 0x1C16F20
	0x039A7DF0 MOV X0, X20
	0x039A7DF4 BL 0x1C16F18
	0x039A7DF8 B 0x39A7E04
	0x039A7DFC B 0x39A7E04
	0x039A7E00 B 0x39A7E04
	0x039A7E04 CMP W1, 0x1
	0x039A7E08 B.NE 0x39A7E1C
	0x039A7E0C BL 0x3EB1AD0
	0x039A7E10 LDR X20, [X0]
	0x039A7E14 BL 0x3EB1AE0
	0x039A7E18 B 0x39A7D74
	0x039A7E1C STR X0, [X31 + 0x8]
	0x039A7E20 MOV X20, X31
	0x039A7E24 B 0x39A7E2C
	0x039A7E28 STR X0, [X31 + 0x8]
	0x039A7E2C CBZ X19, 0x39A7E88
	0x039A7E30 LDR X8, [X19]
	0x039A7E34 LDR X1, [X21]
	0x039A7E38 LDRH W9, [X8 + 0x12E]
	0x039A7E3C CBZ X9, 0x39A7E60
	0x039A7E40 LDR X10, [X8 + 0xB0]
	0x039A7E44 ADD X10, X10, 0x8
	0x039A7E48 LDUR X11, [X10 - 0x8]
	0x039A7E4C CMP X11, X1
	0x039A7E50 B.EQ 0x39A7E70
	0x039A7E54 SUBS X9, X9, 0x1
	0x039A7E58 ADD X10, X10, 0x10
	0x039A7E5C B.NE 0x39A7E48
	0x039A7E60 MOV X0, X19
	0x039A7E64 MOV W2, W31
	0x039A7E68 BL 0x1C5C788
	0x039A7E6C B 0x39A7E7C
	0x039A7E70 LDRSW X9, [X10]
	0x039A7E74 ADD X8, X8, X9, 0x4, LSL
	0x039A7E78 ADD X0, X8, 0x138
	0x039A7E7C LDP X8, X1, [X0]
	0x039A7E80 MOV X0, X19
	0x039A7E84 BLR X8
	0x039A7E88 CBNZ X20, 0x39A7E94
	0x039A7E8C LDR X0, [X31 + 0x8]
	0x039A7E90 BL 0x1D2C690
	0x039A7E94 MOV X0, X20
	0x039A7E98 BL 0x1C16F18
	0x039A7E9C BL 0x1990590
	0x039A7EA0 MOV X1, X31
	0x039A7EA4 B 0x33BDD8C
	0x039A7EA8 STR D8, [X31 - 0x30]!
	0x039A7EAC STP X30, X21, [X31 + 0x10]
	0x039A7EB0 STP X20, X19, [X31 + 0x20]
	0x039A7EB4 ADRP X21, 0xA3A000
	0x039A7EB8 LDRB W8, [X21 + 0xBC4]
	0x039A7EBC MOV W19, W1
	0x039A7EC0 MOV X20, X0
	0x039A7EC4 TBNZ X8, 0x0, 0x39A7EDC
	0x039A7EC8 ADRP X0, 0x752000
	0x039A7ECC LDR X0, [X0 + 0x8C0]
	0x039A7ED0 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xA3C000
	014 Move X22, 0x7AC000
	015 Move W8, [X21+2986]
	016 Move X22, [X22+1976]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {169}
	023 Move X0, 0x7AC000
	024 Move X0, [X0+1984]
	025 Call 0x1C17CF4
	026 Move X0, 0x7AC000
	027 Move X0, [X0+1992]
	028 Call 0x1C17CF4
	029 Move X0, 0x7AC000
	030 Move X0, [X0+2000]
	031 Call 0x1C17CF4
	032 Move X0, 0x7AC000
	033 Move X0, [X0+2008]
	034 Call 0x1C17CF4
	035 Move X0, 0x7AC000
	036 Move X0, [X0+2016]
	037 Call 0x1C17CF4
	038 Move X0, 0x7AC000
	039 Move X0, [X0+2024]
	040 Call 0x1C17CF4
	041 Move X0, 0x7AC000
	042 Move X0, [X0+2032]
	043 Call 0x1C17CF4
	044 Move X0, 0x7AC000
	045 Move X0, [X0+2040]
	046 Call 0x1C17CF4
	047 Move X0, 0x7AC000
	048 Move X0, [X0+2048]
	049 Call 0x1C17CF4
	050 Move X0, 0x7AC000
	051 Move X0, [X0+2056]
	052 Call 0x1C17CF4
	053 Move X0, 0x7AC000
	054 Move X0, [X0+2064]
	055 Call 0x1C17CF4
	056 Move X0, 0x7AC000
	057 Move X0, [X0+2072]
	058 Call 0x1C17CF4
	059 Move X0, 0x7AC000
	060 Move X0, [X0+2080]
	061 Call 0x1C17CF4
	062 Move X0, 0x7AC000
	063 Move X0, [X0+2088]
	064 Call 0x1C17CF4
	065 Move X0, 0x7AC000
	066 Move X0, [X0+2096]
	067 Call 0x1C17CF4
	068 Move X0, 0x7AC000
	069 Move X0, [X0+2104]
	070 Call 0x1C17CF4
	071 Move X0, 0x7AC000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move X0, 0x7AC000
	075 Move X0, [X0+2120]
	076 Call 0x1C17CF4
	077 Move X0, 0x7AC000
	078 Move X0, [X0+2128]
	079 Call 0x1C17CF4
	080 Move X0, 0x7AC000
	081 Move X0, [X0+2136]
	082 Call 0x1C17CF4
	083 Move X0, 0x7AC000
	084 Move X0, [X0+2144]
	085 Call 0x1C17CF4
	086 Move X0, 0x7AC000
	087 Move X0, [X0+2152]
	088 Call 0x1C17CF4
	089 Move X0, 0x7AC000
	090 Move X0, [X0+1976]
	091 Call 0x1C17CF4
	092 Move X0, 0x7AC000
	093 Move X0, [X0+1504]
	094 Call 0x1C17CF4
	095 Move X0, 0x7AB000
	096 Move X0, [X0+1936]
	097 Call 0x1C17CF4
	098 Move X0, 0x7AB000
	099 Move X0, [X0+1952]
	100 Call 0x1C17CF4
	101 Move X0, 0x7AC000
	102 Move X0, [X0+2160]
	103 Call 0x1C17CF4
	104 Move X0, 0x74E000
	105 Move X0, [X0+2760]
	106 Call 0x1C17CF4
	107 Move X0, 0x7AC000
	108 Move X0, [X0+2168]
	109 Call 0x1C17CF4
	110 Move X0, 0x7AC000
	111 Move X0, [X0+2176]
	112 Call 0x1C17CF4
	113 Move X0, 0x7AC000
	114 Move X0, [X0+1624]
	115 Call 0x1C17CF4
	116 Move X0, 0x7AC000
	117 Move X0, [X0+2184]
	118 Call 0x1C17CF4
	119 Move X0, 0x7AC000
	120 Move X0, [X0+2192]
	121 Call 0x1C17CF4
	122 Move X0, 0x7AC000
	123 Move X0, [X0+2200]
	124 Call 0x1C17CF4
	125 Move X0, 0x7AC000
	126 Move X0, [X0+2208]
	127 Call 0x1C17CF4
	128 Move X0, 0x7AC000
	129 Move X0, [X0+2216]
	130 Call 0x1C17CF4
	131 Move X0, 0x7AC000
	132 Move X0, [X0+2224]
	133 Call 0x1C17CF4
	134 Move X0, 0x7AC000
	135 Move X0, [X0+2232]
	136 Call 0x1C17CF4
	137 Move X0, 0x7AC000
	138 Move X0, [X0+2240]
	139 Call 0x1C17CF4
	140 Move X0, 0x7AC000
	141 Move X0, [X0+2248]
	142 Call 0x1C17CF4
	143 Move X0, 0x7AB000
	144 Move X0, [X0+2256]
	145 Call 0x1C17CF4
	146 Move X0, 0x7AB000
	147 Move X0, [X0+2264]
	148 Call 0x1C17CF4
	149 Move X0, 0x7AB000
	150 Move X0, [X0+2272]
	151 Call 0x1C17CF4
	152 Move X0, 0x7AB000
	153 Move X0, [X0+2280]
	154 Call 0x1C17CF4
	155 Move X0, 0x7AB000
	156 Move X0, [X0+2288]
	157 Call 0x1C17CF4
	158 Move X0, 0x7AB000
	159 Move X0, [X0+2296]
	160 Call 0x1C17CF4
	161 Move X0, 0x7AB000
	162 Move X0, [X0+2304]
	163 Call 0x1C17CF4
	164 Move X0, 0x7AB000
	165 Move X0, [X0+2312]
	166 Call 0x1C17CF4
	167 Move W8, 1
	168 Move [X21+2986], W8
	169 Move X0, [X22]
	170 Call 0x1C17F10
	171 Move X21, X0
	172 Call Container..ctor, X0
	173 Compare X21, 0
	174 JumpIfEqual {1158}
	175 Move X8, 0x7AB000
	176 Move X8, [X8+2296]
	177 Move X9, 0x74D000
	178 Move W10, 1
	179 Move W1, 3
	180 Move X8, [X8]
	181 Move X9, [X9+2760]
	182 Move [X21+80], W10
	183 Move [X21+40], X8
	184 Move X0, [X9]
	185 Call 0x1C17D6C
	186 Compare X0, 0
	187 JumpIfEqual {1158}
	188 Move W8, [X0+24]
	189 Compare W8, 0
	190 JumpIfEqual {1159}
	191 Move X9, 0x7AB000
	192 Move X9, [X9+2200]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X9, [X9]
	195 Move [X0+32], X9
	196 Move X9, 0x7AB000
	197 Move X9, [X9+2264]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X9, [X9]
	200 Move [X0+40], X9
	201 Move X8, 0x7AB000
	202 Move X8, [X8+2240]
	203 Move X9, 0x7AB000
	204 Move X24, 0x7AB000
	205 Move X25, 0x7AB000
	206 Move X8, [X8]
	207 Move X9, [X9+2168]
	208 Move X27, 0x7AB000
	209 Move [X0+48], X8
	210 Move [X21+96], X0
	211 Move X0, [X9]
	212 Move X22, [X21+72]
	213 Move X24, [X24+2280]
	214 Move X25, [X25+2176]
	215 Move X27, [X27+1624]
	216 Call 0x1C17F10
	217 Move TEMP, 0
	218 Not TEMP
	219 Move W8, TEMP
	220 Move X1, X31
	221 Move X23, X0
	222 Move [X0+80], W8
	223 Call Object..ctor, X0
	224 Move X8, [X24]
	225 Move W1, 3
	226 Move [X23+40], X8
	227 Move X0, [X25]
	228 Call 0x1C17D6C
	229 Move X8, [X27]
	230 Move X24, X0
	231 Move X0, X8
	232 Call 0x1C17F10
	233 Move X25, X0
	234 Call Value..ctor, X0
	235 Compare X25, 0
	236 JumpIfEqual {1158}
	237 Move X29, 0x7AB000
	238 Move X29, [X29+2288]
	239 Move W8, 0xCCCD
	240 NotImplemented "Instruction MOVK not yet implemented."
	241 Move [X25+80], W8
	242 Move X8, [X29]
	243 Move X28, 0x7AB000
	244 Move X28, [X28+1504]
	245 Move X26, 0x7AB000
	246 Move [X25+88], X8
	247 Move X0, [X28]
	248 Move X26, [X26+1984]
	249 Call 0x1C17F10
	250 Move X2, [X26]
	251 Move X1, X20
	252 Move X3, X31
	253 Move X26, X0
	254 Call Func`1<Object>..ctor, X0, X1, X2
	255 Move [X25+72], X26
	256 Compare X24, 0
	257 JumpIfEqual {1158}
	258 Move X8, [X24]
	259 Move X0, X25
	260 Move X1, [X8+64]
	261 Call 0x1C17E00
	262 Compare X0, 0
	263 JumpIfEqual {1160}
	264 Move W8, [X24+24]
	265 Compare W8, 0
	266 JumpIfEqual {1159}
	267 Move [X24+32], X25
	268 Move X0, [X27]
	269 Call 0x1C17F10
	270 Move X25, X0
	271 Call Value..ctor, X0
	272 Compare X25, 0
	273 JumpIfEqual {1158}
	274 Move W8, 0xCCCD
	275 NotImplemented "Instruction MOVK not yet implemented."
	276 Move [X25+80], W8
	277 Move X8, [X29]
	278 Move X26, 0x7AB000
	279 Move [X25+88], X8
	280 Move X0, [X28]
	281 Move X26, [X26+2072]
	282 Call 0x1C17F10
	283 Move X2, [X26]
	284 Move X1, X20
	285 Move X3, X31
	286 Move X26, X0
	287 Call Func`1<Object>..ctor, X0, X1, X2
	288 Move [X25+72], X26
	289 Move X8, [X24]
	290 Move X0, X25
	291 Move X1, [X8+64]
	292 Call 0x1C17E00
	293 Compare X0, 0
	294 JumpIfEqual {1160}
	295 Move W8, [X24+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move [X24+40], X25
	298 Move X0, [X27]
	299 Call 0x1C17F10
	300 Move X25, X0
	301 Call Value..ctor, X0
	302 Compare X25, 0
	303 JumpIfEqual {1158}
	304 Move W8, 0xCCCD
	305 NotImplemented "Instruction MOVK not yet implemented."
	306 Move [X25+80], W8
	307 Move X8, [X29]
	308 Move X26, 0x7AB000
	309 Move [X25+88], X8
	310 Move X0, [X28]
	311 Move X26, [X26+2096]
	312 Call 0x1C17F10
	313 Move X2, [X26]
	314 Move X1, X20
	315 Move X3, X31
	316 Move X26, X0
	317 Call Func`1<Object>..ctor, X0, X1, X2
	318 Move [X25+72], X26
	319 Move X8, [X24]
	320 Move X0, X25
	321 Move X1, [X8+64]
	322 Call 0x1C17E00
	323 Compare X0, 0
	324 JumpIfEqual {1160}
	325 Move W8, [X24+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move [X24+48], X25
	328 Move [X23+72], X24
	329 Compare X22, 0
	330 JumpIfEqual {1158}
	331 Move X8, 0x7AA000
	332 Move X8, [X8+1952]
	333 Move X24, 0x7AB000
	334 Move X0, X22
	335 Move X1, X23
	336 Move X2, [X8]
	337 Move X24, [X24+2312]
	338 Call 0x2498EC8, X0, X1
	339 Move X8, 0x7AB000
	340 Move X22, [X21+72]
	341 Move X8, [X8+2168]
	342 Move X0, [X8]
	343 Call 0x1C17F10
	344 Move TEMP, 0
	345 Not TEMP
	346 Move W8, TEMP
	347 Move X1, X31
	348 Move X23, X0
	349 Move [X0+80], W8
	350 Call Object..ctor, X0
	351 Move X8, [X24]
	352 Move W1, 3
	353 Move [X23+40], X8
	354 Move X8, 0x7AB000
	355 Move X8, [X8+2176]
	356 Move X0, [X8]
	357 Call 0x1C17D6C
	358 Move X8, [X27]
	359 Move X24, X0
	360 Move X0, X8
	361 Call 0x1C17F10
	362 Move X25, X0
	363 Call Value..ctor, X0
	364 Compare X25, 0
	365 JumpIfEqual {1158}
	366 Move X29, 0x7AB000
	367 Move X29, [X29+2256]
	368 Move W8, 0xCCCD
	369 NotImplemented "Instruction MOVK not yet implemented."
	370 Move [X25+80], W8
	371 Move X8, [X29]
	372 Move X26, 0x7AB000
	373 Move [X25+88], X8
	374 Move X0, [X28]
	375 Move X26, [X26+2104]
	376 Call 0x1C17F10
	377 Move X2, [X26]
	378 Move X1, X20
	379 Move X3, X31
	380 Move X26, X0
	381 Call Func`1<Object>..ctor, X0, X1, X2
	382 Move [X25+72], X26
	383 Compare X24, 0
	384 JumpIfEqual {1158}
	385 Move X8, [X24]
	386 Move X0, X25
	387 Move X1, [X8+64]
	388 Call 0x1C17E00
	389 Compare X0, 0
	390 JumpIfEqual {1160}
	391 Move W8, [X24+24]
	392 Compare W8, 0
	393 JumpIfEqual {1159}
	394 Move [X24+32], X25
	395 Move X0, [X27]
	396 Call 0x1C17F10
	397 Move X25, X0
	398 Call Value..ctor, X0
	399 Compare X25, 0
	400 JumpIfEqual {1158}
	401 Move W8, 0xCCCD
	402 NotImplemented "Instruction MOVK not yet implemented."
	403 Move [X25+80], W8
	404 Move X8, [X29]
	405 Move X26, 0x7AB000
	406 Move [X25+88], X8
	407 Move X0, [X28]
	408 Move X26, [X26+2112]
	409 Call 0x1C17F10
	410 Move X2, [X26]
	411 Move X1, X20
	412 Move X3, X31
	413 Move X26, X0
	414 Call Func`1<Object>..ctor, X0, X1, X2
	415 Move [X25+72], X26
	416 Move X8, [X24]
	417 Move X0, X25
	418 Move X1, [X8+64]
	419 Call 0x1C17E00
	420 Compare X0, 0
	421 JumpIfEqual {1160}
	422 Move W8, [X24+24]
	423 NotImplemented "Instruction CMP not yet implemented."
	424 Move [X24+40], X25
	425 Move X0, [X27]
	426 Call 0x1C17F10
	427 Move X25, X0
	428 Call Value..ctor, X0
	429 Compare X25, 0
	430 JumpIfEqual {1158}
	431 Move W8, 0xCCCD
	432 NotImplemented "Instruction MOVK not yet implemented."
	433 Move [X25+80], W8
	434 Move X8, [X29]
	435 Move X26, 0x7AB000
	436 Move [X25+88], X8
	437 Move X0, [X28]
	438 Move X26, [X26+2120]
	439 Call 0x1C17F10
	440 Move X2, [X26]
	441 Move X1, X20
	442 Move X3, X31
	443 Move X26, X0
	444 Call Func`1<Object>..ctor, X0, X1, X2
	445 Move [X25+72], X26
	446 Move X8, [X24]
	447 Move X0, X25
	448 Move X1, [X8+64]
	449 Call 0x1C17E00
	450 Compare X0, 0
	451 JumpIfEqual {1160}
	452 Move W8, [X24+24]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move [X24+48], X25
	455 Move [X23+72], X24
	456 Compare X22, 0
	457 JumpIfEqual {1158}
	458 Move X8, 0x7AA000
	459 Move X8, [X8+1952]
	460 Move X24, 0x7AB000
	461 Move X0, X22
	462 Move X1, X23
	463 Move X2, [X8]
	464 Move X24, [X24+2248]
	465 Call 0x2498EC8, X0, X1
	466 Move X8, 0x7AB000
	467 Move X22, [X21+72]
	468 Move X8, [X8+2168]
	469 Move X0, [X8]
	470 Call 0x1C17F10
	471 Move TEMP, 0
	472 Not TEMP
	473 Move W8, TEMP
	474 Move X1, X31
	475 Move X23, X0
	476 Move [X0+80], W8
	477 Call Object..ctor, X0
	478 Move X8, [X24]
	479 Move W1, 3
	480 Move [X23+40], X8
	481 Move X8, 0x7AB000
	482 Move X8, [X8+2176]
	483 Move X0, [X8]
	484 Call 0x1C17D6C
	485 Move X8, [X27]
	486 Move X24, X0
	487 Move X0, X8
	488 Call 0x1C17F10
	489 Move X25, X0
	490 Call Value..ctor, X0
	491 Compare X25, 0
	492 JumpIfEqual {1158}
	493 Move W8, 0xCCCD
	494 NotImplemented "Instruction MOVK not yet implemented."
	495 Move [X25+80], W8
	496 Move X8, [X29]
	497 Move X26, 0x7AB000
	498 Move [X25+88], X8
	499 Move X0, [X28]
	500 Move X26, [X26+2128]
	501 Call 0x1C17F10
	502 Move X2, [X26]
	503 Move X1, X20
	504 Move X3, X31
	505 Move X26, X0
	506 Call Func`1<Object>..ctor, X0, X1, X2
	507 Move [X25+72], X26
	508 Compare X24, 0
	509 JumpIfEqual {1158}
	510 Move X8, [X24]
	511 Move X0, X25
	512 Move X1, [X8+64]
	513 Call 0x1C17E00
	514 Compare X0, 0
	515 JumpIfEqual {1160}
	516 Move W8, [X24+24]
	517 Compare W8, 0
	518 JumpIfEqual {1159}
	519 Move [X24+32], X25
	520 Move X0, [X27]
	521 Call 0x1C17F10
	522 Move X25, X0
	523 Call Value..ctor, X0
	524 Compare X25, 0
	525 JumpIfEqual {1158}
	526 Move W8, 0xCCCD
	527 NotImplemented "Instruction MOVK not yet implemented."
	528 Move [X25+80], W8
	529 Move X8, [X29]
	530 Move X26, 0x7AB000
	531 Move [X25+88], X8
	532 Move X0, [X28]
	533 Move X26, [X26+2136]
	534 Call 0x1C17F10
	535 Move X2, [X26]
	536 Move X1, X20
	537 Move X3, X31
	538 Move X26, X0
	539 Call Func`1<Object>..ctor, X0, X1, X2
	540 Move [X25+72], X26
	541 Move X8, [X24]
	542 Move X0, X25
	543 Move X1, [X8+64]
	544 Call 0x1C17E00
	545 Compare X0, 0
	546 JumpIfEqual {1160}
	547 Move W8, [X24+24]
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move [X24+40], X25
	550 Move X0, [X27]
	551 Call 0x1C17F10
	552 Move X25, X0
	553 Call Value..ctor, X0
	554 Compare X25, 0
	555 JumpIfEqual {1158}
	556 Move W8, 0xCCCD
	557 NotImplemented "Instruction MOVK not yet implemented."
	558 Move [X25+80], W8
	559 Move X8, [X29]
	560 Move X26, 0x7AB000
	561 Move [X25+88], X8
	562 Move X0, [X28]
	563 Move X26, [X26+2144]
	564 Call 0x1C17F10
	565 Move X2, [X26]
	566 Move X1, X20
	567 Move X3, X31
	568 Move X26, X0
	569 Call Func`1<Object>..ctor, X0, X1, X2
	570 Move [X25+72], X26
	571 Move X8, [X24]
	572 Move X0, X25
	573 Move X1, [X8+64]
	574 Call 0x1C17E00
	575 Compare X0, 0
	576 JumpIfEqual {1160}
	577 Move W8, [X24+24]
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move [X24+48], X25
	580 Move [X23+72], X24
	581 Compare X22, 0
	582 JumpIfEqual {1158}
	583 Move X8, 0x7AA000
	584 Move X8, [X8+1952]
	585 Move X24, 0x7AB000
	586 Move X0, X22
	587 Move X1, X23
	588 Move X2, [X8]
	589 Move X24, [X24+2208]
	590 Call 0x2498EC8, X0, X1
	591 Move X8, 0x7AB000
	592 Move X22, [X21+72]
	593 Move X8, [X8+2168]
	594 Move X0, [X8]
	595 Call 0x1C17F10
	596 Move TEMP, 0
	597 Not TEMP
	598 Move W8, TEMP
	599 Move X1, X31
	600 Move X23, X0
	601 Move [X0+80], W8
	602 Call Object..ctor, X0
	603 Move X8, [X24]
	604 Move W1, 3
	605 Move [X23+40], X8
	606 Move X8, 0x7AB000
	607 Move X8, [X8+2176]
	608 Move X0, [X8]
	609 Call 0x1C17D6C
	610 Move X8, [X27]
	611 Move X24, X0
	612 Move X0, X8
	613 Call 0x1C17F10
	614 Move X25, X0
	615 Call Value..ctor, X0
	616 Compare X25, 0
	617 JumpIfEqual {1158}
	618 Move W8, 0xCCCD
	619 NotImplemented "Instruction MOVK not yet implemented."
	620 Move [X25+80], W8
	621 Move X8, [X29]
	622 Move X26, 0x7AB000
	623 Move [X25+88], X8
	624 Move X0, [X28]
	625 Move X26, [X26+2152]
	626 Call 0x1C17F10
	627 Move X2, [X26]
	628 Move X1, X20
	629 Move X3, X31
	630 Move X26, X0
	631 Call Func`1<Object>..ctor, X0, X1, X2
	632 Move [X25+72], X26
	633 Compare X24, 0
	634 JumpIfEqual {1158}
	635 Move X8, [X24]
	636 Move X0, X25
	637 Move X1, [X8+64]
	638 Call 0x1C17E00
	639 Compare X0, 0
	640 JumpIfEqual {1160}
	641 Move W8, [X24+24]
	642 Compare W8, 0
	643 JumpIfEqual {1159}
	644 Move [X24+32], X25
	645 Move X0, [X27]
	646 Call 0x1C17F10
	647 Move X25, X0
	648 Call Value..ctor, X0
	649 Compare X25, 0
	650 JumpIfEqual {1158}
	651 Move W8, 0xCCCD
	652 NotImplemented "Instruction MOVK not yet implemented."
	653 Move [X25+80], W8
	654 Move X8, [X29]
	655 Move X26, 0x7AB000
	656 Move [X25+88], X8
	657 Move X0, [X28]
	658 Move X26, [X26+1992]
	659 Call 0x1C17F10
	660 Move X2, [X26]
	661 Move X1, X20
	662 Move X3, X31
	663 Move X26, X0
	664 Call Func`1<Object>..ctor, X0, X1, X2
	665 Move [X25+72], X26
	666 Move X8, [X24]
	667 Move X0, X25
	668 Move X1, [X8+64]
	669 Call 0x1C17E00
	670 Compare X0, 0
	671 JumpIfEqual {1160}
	672 Move W8, [X24+24]
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Move [X24+40], X25
	675 Move X0, [X27]
	676 Call 0x1C17F10
	677 Move X25, X0
	678 Call Value..ctor, X0
	679 Compare X25, 0
	680 JumpIfEqual {1158}
	681 Move W8, 0xCCCD
	682 NotImplemented "Instruction MOVK not yet implemented."
	683 Move [X25+80], W8
	684 Move X8, [X29]
	685 Move X26, 0x7AB000
	686 Move [X25+88], X8
	687 Move X0, [X28]
	688 Move X26, [X26+2000]
	689 Call 0x1C17F10
	690 Move X2, [X26]
	691 Move X1, X20
	692 Move X3, X31
	693 Move X26, X0
	694 Call Func`1<Object>..ctor, X0, X1, X2
	695 Move [X25+72], X26
	696 Move X8, [X24]
	697 Move X0, X25
	698 Move X1, [X8+64]
	699 Call 0x1C17E00
	700 Compare X0, 0
	701 JumpIfEqual {1160}
	702 Move W8, [X24+24]
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Move [X24+48], X25
	705 Move [X23+72], X24
	706 Compare X22, 0
	707 JumpIfEqual {1158}
	708 Move X8, 0x7AA000
	709 Move X8, [X8+1952]
	710 Move X24, 0x7AB000
	711 Move X0, X22
	712 Move X1, X23
	713 Move X2, [X8]
	714 Move X24, [X24+2224]
	715 Call 0x2498EC8, X0, X1
	716 Move X8, 0x7AB000
	717 Move X22, [X21+72]
	718 Move X8, [X8+2168]
	719 Move X0, [X8]
	720 Call 0x1C17F10
	721 Move TEMP, 0
	722 Not TEMP
	723 Move W8, TEMP
	724 Move X1, X31
	725 Move X23, X0
	726 Move [X0+80], W8
	727 Call Object..ctor, X0
	728 Move X8, [X24]
	729 Move W1, 3
	730 Move [X23+40], X8
	731 Move X8, 0x7AB000
	732 Move X8, [X8+2176]
	733 Move X0, [X8]
	734 Call 0x1C17D6C
	735 Move X8, [X27]
	736 Move X24, X0
	737 Move X0, X8
	738 Call 0x1C17F10
	739 Move X25, X0
	740 Call Value..ctor, X0
	741 Compare X25, 0
	742 JumpIfEqual {1158}
	743 Move W8, 0xCCCD
	744 NotImplemented "Instruction MOVK not yet implemented."
	745 Move [X25+80], W8
	746 Move X8, [X29]
	747 Move X26, 0x7AB000
	748 Move [X25+88], X8
	749 Move X0, [X28]
	750 Move X26, [X26+2008]
	751 Call 0x1C17F10
	752 Move X2, [X26]
	753 Move X1, X20
	754 Move X3, X31
	755 Move X26, X0
	756 Call Func`1<Object>..ctor, X0, X1, X2
	757 Move [X25+72], X26
	758 Compare X24, 0
	759 JumpIfEqual {1158}
	760 Move X8, [X24]
	761 Move X0, X25
	762 Move X1, [X8+64]
	763 Call 0x1C17E00
	764 Compare X0, 0
	765 JumpIfEqual {1160}
	766 Move W8, [X24+24]
	767 Compare W8, 0
	768 JumpIfEqual {1159}
	769 Move [X24+32], X25
	770 Move X0, [X27]
	771 Call 0x1C17F10
	772 Move X25, X0
	773 Call Value..ctor, X0
	774 Compare X25, 0
	775 JumpIfEqual {1158}
	776 Move W8, 0xCCCD
	777 NotImplemented "Instruction MOVK not yet implemented."
	778 Move [X25+80], W8
	779 Move X8, [X29]
	780 Move X26, 0x7AB000
	781 Move [X25+88], X8
	782 Move X0, [X28]
	783 Move X26, [X26+2016]
	784 Call 0x1C17F10
	785 Move X2, [X26]
	786 Move X1, X20
	787 Move X3, X31
	788 Move X26, X0
	789 Call Func`1<Object>..ctor, X0, X1, X2
	790 Move [X25+72], X26
	791 Move X8, [X24]
	792 Move X0, X25
	793 Move X1, [X8+64]
	794 Call 0x1C17E00
	795 Compare X0, 0
	796 JumpIfEqual {1160}
	797 Move W8, [X24+24]
	798 NotImplemented "Instruction CMP not yet implemented."
	799 Move [X24+40], X25
	800 Move X0, [X27]
	801 Call 0x1C17F10
	802 Move X25, X0
	803 Call Value..ctor, X0
	804 Compare X25, 0
	805 JumpIfEqual {1158}
	806 Move W8, 0xCCCD
	807 NotImplemented "Instruction MOVK not yet implemented."
	808 Move [X25+80], W8
	809 Move X8, [X29]
	810 Move X26, 0x7AB000
	811 Move [X25+88], X8
	812 Move X0, [X28]
	813 Move X26, [X26+2024]
	814 Call 0x1C17F10
	815 Move X2, [X26]
	816 Move X1, X20
	817 Move X3, X31
	818 Move X26, X0
	819 Call Func`1<Object>..ctor, X0, X1, X2
	820 Move [X25+72], X26
	821 Move X8, [X24]
	822 Move X0, X25
	823 Move X1, [X8+64]
	824 Call 0x1C17E00
	825 Compare X0, 0
	826 JumpIfEqual {1160}
	827 Move W8, [X24+24]
	828 NotImplemented "Instruction CMP not yet implemented."
	829 Move [X24+48], X25
	830 Move [X23+72], X24
	831 Compare X22, 0
	832 JumpIfEqual {1158}
	833 Move X8, 0x7AA000
	834 Move X8, [X8+1952]
	835 Move X24, 0x7AB000
	836 Move X0, X22
	837 Move X1, X23
	838 Move X2, [X8]
	839 Move X24, [X24+2192]
	840 Call 0x2498EC8, X0, X1
	841 Move X8, 0x7AB000
	842 Move X22, [X21+72]
	843 Move X8, [X8+2168]
	844 Move X0, [X8]
	845 Call 0x1C17F10
	846 Move TEMP, 0
	847 Not TEMP
	848 Move W8, TEMP
	849 Move X1, X31
	850 Move X23, X0
	851 Move [X0+80], W8
	852 Call Object..ctor, X0
	853 Move X8, [X24]
	854 Move W1, 3
	855 Move [X23+40], X8
	856 Move X8, 0x7AB000
	857 Move X8, [X8+2176]
	858 Move X0, [X8]
	859 Call 0x1C17D6C
	860 Move X8, [X27]
	861 Move X24, X0
	862 Move X0, X8
	863 Call 0x1C17F10
	864 Move X25, X0
	865 Call Value..ctor, X0
	866 Compare X25, 0
	867 JumpIfEqual {1158}
	868 Move W8, 0xCCCD
	869 NotImplemented "Instruction MOVK not yet implemented."
	870 Move [X25+80], W8
	871 Move X8, [X29]
	872 Move X26, 0x7AB000
	873 Move [X25+88], X8
	874 Move X0, [X28]
	875 Move X26, [X26+2032]
	876 Call 0x1C17F10
	877 Move X2, [X26]
	878 Move X1, X20
	879 Move X3, X31
	880 Move X26, X0
	881 Call Func`1<Object>..ctor, X0, X1, X2
	882 Move [X25+72], X26
	883 Compare X24, 0
	884 JumpIfEqual {1158}
	885 Move X8, [X24]
	886 Move X0, X25
	887 Move X1, [X8+64]
	888 Call 0x1C17E00
	889 Compare X0, 0
	890 JumpIfEqual {1160}
	891 Move W8, [X24+24]
	892 Compare W8, 0
	893 JumpIfEqual {1159}
	894 Move [X24+32], X25
	895 Move X0, [X27]
	896 Call 0x1C17F10
	897 Move X25, X0
	898 Call Value..ctor, X0
	899 Compare X25, 0
	900 JumpIfEqual {1158}
	901 Move W8, 0xCCCD
	902 NotImplemented "Instruction MOVK not yet implemented."
	903 Move [X25+80], W8
	904 Move X8, [X29]
	905 Move X26, 0x7AB000
	906 Move [X25+88], X8
	907 Move X0, [X28]
	908 Move X26, [X26+2040]
	909 Call 0x1C17F10
	910 Move X2, [X26]
	911 Move X1, X20
	912 Move X3, X31
	913 Move X26, X0
	914 Call Func`1<Object>..ctor, X0, X1, X2
	915 Move [X25+72], X26
	916 Move X8, [X24]
	917 Move X0, X25
	918 Move X1, [X8+64]
	919 Call 0x1C17E00
	920 Compare X0, 0
	921 JumpIfEqual {1160}
	922 Move W8, [X24+24]
	923 NotImplemented "Instruction CMP not yet implemented."
	924 Move [X24+40], X25
	925 Move X0, [X27]
	926 Call 0x1C17F10
	927 Move X25, X0
	928 Call Value..ctor, X0
	929 Compare X25, 0
	930 JumpIfEqual {1158}
	931 Move W8, 0xCCCD
	932 NotImplemented "Instruction MOVK not yet implemented."
	933 Move [X25+80], W8
	934 Move X8, [X29]
	935 Move X26, 0x7AB000
	936 Move [X25+88], X8
	937 Move X0, [X28]
	938 Move X26, [X26+2048]
	939 Call 0x1C17F10
	940 Move X2, [X26]
	941 Move X1, X20
	942 Move X3, X31
	943 Move X26, X0
	944 Call Func`1<Object>..ctor, X0, X1, X2
	945 Move [X25+72], X26
	946 Move X8, [X24]
	947 Move X0, X25
	948 Move X1, [X8+64]
	949 Call 0x1C17E00
	950 Compare X0, 0
	951 JumpIfEqual {1160}
	952 Move W8, [X24+24]
	953 NotImplemented "Instruction CMP not yet implemented."
	954 Move [X24+48], X25
	955 Move [X23+72], X24
	956 Compare X22, 0
	957 JumpIfEqual {1158}
	958 Move X8, 0x7AA000
	959 Move X8, [X8+1952]
	960 Move X0, X22
	961 Move X1, X23
	962 Move X2, [X8]
	963 Call 0x2498EC8, X0, X1
	964 Compare X19, 0
	965 JumpIfEqual {1158}
	966 Move X9, 0x7AA000
	967 Move X9, [X9+1936]
	968 Move W10, [X19+28]
	969 Move X8, [X19+16]
	970 Move X9, [X9]
	971 Add W10, W10, 1
	972 Move [X19+28], W10
	973 Compare X8, 0
	974 JumpIfEqual {1158}
	975 NotImplemented "Instruction LDRSW not yet implemented."
	976 Move W11, [X8+24]
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Add W9, W10, 1
	979 Add X8, X8, X10
	980 Move [X19+24], W9
	981 Move [X8+32], X21
	982 Move X8, [X9+32]
	983 Move X0, X19
	984 Move X1, X21
	985 Move X8, [X8+192]
	986 Move X2, [X8+112]
	987 Call List`1<Object>.AddWithResize, X0, X1
	988 Move X8, 0x7AB000
	989 Move X8, [X8+1976]
	990 Move X0, [X8]
	991 Call 0x1C17F10
	992 Move X21, X0
	993 Call Container..ctor, X0
	994 Compare X21, 0
	995 JumpIfEqual {1158}
	996 Move X8, 0x7AB000
	997 Move X8, [X8+2232]
	998 Move X26, 0x7AB000
	999 Move X24, 0x7AB000
	1000 Move X29, 0x7AB000
	1001 Move X8, [X8]
	1002 Move X26, [X26+2160]
	1003 Move X22, [X21+72]
	1004 Move [X21+40], X8
	1005 Move X0, [X26]
	1006 Move X24, [X24+2216]
	1007 Move X29, [X29+2056]
	1008 Call 0x1C17F10
	1009 Move W27, 0x3F800000
	1010 Move X23, X0
	1011 Move [X0+100], W27
	1012 Call Value..ctor, X0
	1013 Move X8, [X24]
	1014 Move [X23+40], X8
	1015 Move X0, [X28]
	1016 Call 0x1C17F10
	1017 Move X2, [X29]
	1018 Move X1, X20
	1019 Move X3, X31
	1020 Move X24, X0
	1021 Call Func`1<Object>..ctor, X0, X1, X2
	1022 Move [X23+72], X24
	1023 Compare X22, 0
	1024 JumpIfEqual {1158}
	1025 Move X25, 0x7AA000
	1026 Move X25, [X25+1952]
	1027 Move X24, 0x7AB000
	1028 Move X29, 0x7AB000
	1029 Move X0, X22
	1030 Move X2, [X25]
	1031 Move X24, [X24+2272]
	1032 Move X29, [X29+2064]
	1033 Move X1, X23
	1034 Call 0x2498EC8, X0, X1
	1035 Move X0, [X26]
	1036 Move X22, [X21+72]
	1037 Call 0x1C17F10
	1038 Move X23, X0
	1039 Move [X0+100], W27
	1040 Call Value..ctor, X0
	1041 Move X8, [X24]
	1042 Move [X23+40], X8
	1043 Move X0, [X28]
	1044 Call 0x1C17F10
	1045 Move X2, [X29]
	1046 Move X1, X20
	1047 Move X3, X31
	1048 Move X24, X0
	1049 Call Func`1<Object>..ctor, X0, X1, X2
	1050 Move [X23+72], X24
	1051 Compare X22, 0
	1052 JumpIfEqual {1158}
	1053 Move X2, [X25]
	1054 Move X24, 0x7AB000
	1055 Move X29, 0x7AB000
	1056 Move X24, [X24+2304]
	1057 Move X29, [X29+2080]
	1058 Move X0, X22
	1059 Move X1, X23
	1060 Call 0x2498EC8, X0, X1
	1061 Move X0, [X26]
	1062 Move X22, [X21+72]
	1063 Call 0x1C17F10
	1064 Move W27, 0x3F800000
	1065 Move X23, X0
	1066 Move [X0+100], W27
	1067 Call Value..ctor, X0
	1068 Move X8, [X24]
	1069 Move [X23+40], X8
	1070 Move X0, [X28]
	1071 Call 0x1C17F10
	1072 Move X2, [X29]
	1073 Move X1, X20
	1074 Move X3, X31
	1075 Move X24, X0
	1076 Call Func`1<Object>..ctor, X0, X1, X2
	1077 Move [X23+72], X24
	1078 Compare X22, 0
	1079 JumpIfEqual {1158}
	1080 Move X2, [X25]
	1081 Move X24, 0x7AB000
	1082 Move X29, 0x7AB000
	1083 Move X24, [X24+2184]
	1084 Move X29, [X29+2088]
	1085 Move X0, X22
	1086 Move X1, X23
	1087 Call 0x2498EC8, X0, X1
	1088 Move X0, [X26]
	1089 Move X22, [X21+72]
	1090 Call 0x1C17F10
	1091 Move X23, X0
	1092 Move [X0+100], W27
	1093 Call Value..ctor, X0
	1094 Move X8, [X24]
	1095 Move [X23+40], X8
	1096 Move X0, [X28]
	1097 Call 0x1C17F10
	1098 Move X2, [X29]
	1099 Move X1, X20
	1100 Move X3, X31
	1101 Move X24, X0
	1102 Call Func`1<Object>..ctor, X0, X1, X2
	1103 Move [X23+72], X24
	1104 Compare X22, 0
	1105 JumpIfEqual {1158}
	1106 Move X2, [X25]
	1107 Move X0, X22
	1108 Move X1, X23
	1109 Call 0x2498EC8, X0, X1
	1110 Move X9, 0x7AA000
	1111 Move W10, [X19+28]
	1112 Move X8, [X19+16]
	1113 Move X9, [X9+1936]
	1114 Add W10, W10, 1
	1115 Move X9, [X9]
	1116 Move [X19+28], W10
	1117 Compare X8, 0
	1118 JumpIfEqual {1158}
	1119 NotImplemented "Instruction LDRSW not yet implemented."
	1120 Move W11, [X8+24]
	1121 NotImplemented "Instruction CMP not yet implemented."
	1122 Add W9, W10, 1
	1123 Add X8, X8, X10
	1124 Move [X19+24], W9
	1125 Move [X8+32], X21
	1126 Move X20, [X31+80]
	1127 Move X19, [X31+88]
	1128 Move X22, [X31+64]
	1129 Move X21, [X31+72]
	1130 Move X24, [X31+48]
	1131 Move X23, [X31+56]
	1132 Move X26, [X31+32]
	1133 Move X25, [X31+40]
	1134 Move X28, [X31+16]
	1135 Move X27, [X31+24]
	1136 Move X29, [X31+96]
	1137 Move X30, [X31+104]
	1138 Return 
	1139 Move X8, [X9+32]
	1140 Move X0, X19
	1141 Move X1, X21
	1142 Move X20, [X31+80]
	1143 Move X19, [X31+88]
	1144 Move X8, [X8+192]
	1145 Move X22, [X31+64]
	1146 Move X21, [X31+72]
	1147 Move X24, [X31+48]
	1148 Move X23, [X31+56]
	1149 Move X26, [X31+32]
	1150 Move X25, [X31+40]
	1151 Move X2, [X8+112]
	1152 Move X28, [X31+16]
	1153 Move X27, [X31+24]
	1154 Move X29, [X31+96]
	1155 Move X30, [X31+104]
	1156 Call List`1<Object>.AddWithResize, X0, X1
	1157 Return 
	1158 Call 0x1C17F20
	1159 Call 0x1C17F28
	1160 Call 0x1C17F44
	1161 Move X1, X31
	1162 Call 0x1C17DEC

Method: System.Void Reset()

Disassembly:
	0x039A7EF4 CBZ X9, 0x39A7FD8
	0x039A7EF8 LDR W10, [X9 + 0x18]
	0x039A7EFC CMP W10, W19
	0x039A7F00 B.LS 0x39A7FDC
	0x039A7F04 SXTW X10, W19
	0x039A7F08 ADD X9, X9, X10, 0x3, LSL
	0x039A7F0C LDR X19, [X9 + 0x20]
	0x039A7F10 CBZ X19, 0x39A7FD8
	0x039A7F14 LDRB W9, [X19 + 0x2C]
	0x039A7F18 CBZ W9, 0x39A7F2C
	0x039A7F1C LDP X20, X19, [X31 + 0x20]
	0x039A7F20 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X1, X31
	008 Call BottleneckHistory.Clear, X0
	009 Move X0, [X19+16]
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call FrameTimeSampleHistory.Clear, X0
	016 Return 
	017 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_0()

Disassembly:
	0x039A7F24 LDR V8, [X31], #0x30
	0x039A7F28 RET
	0x039A7F2C ADD X8, X8, X10, 0x3, LSL
	0x039A7F30 LDR X20, [X8 + 0x20]
	0x039A7F34 CBZ X20, 0x39A7FD8
	0x039A7F38 LDR X0, [X20 + 0x10]
	0x039A7F3C CBZ X0, 0x39A7F1C
	0x039A7F40 ADRP X8, 0x752000
	0x039A7F44 LDR X8, [X8 + 0x8C0]
	0x039A7F48 LDR X1, [X8]
	0x039A7F4C BL 0x21F5D8C
	0x039A7F50 ADRP X21, 0xA32000
	0x039A7F54 LDRB W8, [X21 + 0x5AA]
	0x039A7F58 MOV V8.16B, V0.16B
	0x039A7F5C CBNZ W8, 0x39A7F74
	0x039A7F60 ADRP X0, 0x753000
	0x039A7F64 LDR X0, [X0 + 0x4B8]
	0x039A7F68 BL 0x1C16CF4
	0x039A7F6C MOVZ W8, 0x1
	0x039A7F70 STRB W8, [X21 + 0x5AA]
	0x039A7F74 ADRP X8, 0x753000
	0x039A7F78 LDR X8, [X8 + 0x4B8]
	0x039A7F7C ADRP X9, 0xFFFFFFFFFD143000
	0x039A7F80 LDR V0, [X9 + 0x240]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3B000
	005 Move W8, [X20+2987]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74D000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2987], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74D000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+24]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_1()

Disassembly:
	0x039A7F84 FABS S1, S8
	0x039A7F88 LDR X8, [X8]
	0x039A7F8C FMOV S2, W31
	0x039A7F90 FMAXNM S1, S1, S2
	0x039A7F94 FMUL S0, S1, S0
	0x039A7F98 LDR X8, [X8 + 0xB8]
	0x039A7F9C FMOV S1, 8
	0x039A7FA0 LDR V3, [X8]
	0x039A7FA4 FMUL S1, S3, S1
	0x039A7FA8 FCMP S0, S1
	0x039A7FAC FCSEL S0, S0, S1, GT
	0x039A7FB0 FABD S1, S2, S2
	0x039A7FB4 FCMP S1, S0
	0x039A7FB8 B.MI 0x39A7F1C
	0x039A7FBC LDR X1, [X20 + 0x10]
	0x039A7FC0 MOV X0, X19
	0x039A7FC4 LDP X20, X19, [X31 + 0x20]
	0x039A7FC8 LDP X30, X21, [X31 + 0x10]
	0x039A7FCC MOV V0.16B, V8.16B
	0x039A7FD0 LDR V8, [X31], #0x30
	0x039A7FD4 B 0x39A7FE0
	0x039A7FD8 BL 0x1C16F20
	0x039A7FDC BL 0x1C16F28
	0x039A7FE0 STR D8, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3B000
	005 Move W8, [X20+2988]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74D000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2988], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74D000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+48]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_2()

Disassembly:
	0x039A7FE4 STP X30, X21, [X31 + 0x10]
	0x039A7FE8 STP X20, X19, [X31 + 0x20]
	0x039A7FEC ADRP X21, 0xA3A000
	0x039A7FF0 LDRB W8, [X21 + 0xBEE]
	0x039A7FF4 MOV V8.16B, V0.16B
	0x039A7FF8 MOV X20, X1
	0x039A7FFC MOV X19, X0
	0x039A8000 TBNZ X8, 0x0, 0x39A8018
	0x039A8004 ADRP X0, 0x772000
	0x039A8008 LDR X0, [X0 + 0xFE8]
	0x039A800C BL 0x1C16CF4
	0x039A8010 MOVZ W8, 0x1
	0x039A8014 STRB W8, [X21 + 0xBEE]
	0x039A8018 STR X20, [X19 + 0x18]
	0x039A801C CBZ X20, 0x39A8048
	0x039A8020 MOV X0, X20
	0x039A8024 MOV X1, X31
	0x039A8028 BL 0x37345CC
	0x039A802C MOV X0, X19
	0x039A8030 LDP X20, X19, [X31 + 0x20]
	0x039A8034 LDP X30, X21, [X31 + 0x10]
	0x039A8038 UBFM X1, X1, 0x20, 0x3F
	0x039A803C MOV V0.16B, V8.16B
	0x039A8040 LDR V8, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3B000
	005 Move W8, [X20+2989]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74D000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2989], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+72]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_3()

Disassembly:
	0x039A8044 B 0x39ABBA8
	0x039A8048 BL 0x1C16F20
	0x039A804C STR X30, [X31 - 0x10]!
	0x039A8050 LDR X8, [X0 + 0x10]
	0x039A8054 CBZ X8, 0x39A80A8
	0x039A8058 LDR W9, [X8 + 0x18]
	0x039A805C CMP W9, W1
	0x039A8060 B.LS 0x39A80AC
	0x039A8064 LDR X9, [X0 + 0x18]
	0x039A8068 CBZ X9, 0x39A80A8
	0x039A806C LDR W10, [X9 + 0x18]
	0x039A8070 CMP W10, W1
	0x039A8074 B.LS 0x39A80AC
	0x039A8078 SXTW X10, W1
	0x039A807C ADD X9, X9, X10, 0x3, LSL
	0x039A8080 LDR X0, [X9 + 0x20]
	0x039A8084 CBZ X0, 0x39A80A8
	0x039A8088 LDRB W9, [X0 + 0x2C]
	0x039A808C CBZ W9, 0x39A80A0
	0x039A8090 ADD X8, X8, X10, 0x3, LSL
	0x039A8094 LDR X1, [X8 + 0x20]
	0x039A8098 LDR X30, [X31], #0x10
	0x039A809C B 0x39A80B0
	0x039A80A0 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2990]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2990], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+28]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_4()

Disassembly:
	0x039A80A4 RET
	0x039A80A8 BL 0x1C16F20
	0x039A80AC BL 0x1C16F28
	0x039A80B0 STP D11, D10, [X31 - 0x70]!
	0x039A80B4 STP D9, D8, [X31 + 0x10]
	0x039A80B8 STP X30, X27, [X31 + 0x20]
	0x039A80BC STP X26, X25, [X31 + 0x30]
	0x039A80C0 STP X24, X23, [X31 + 0x40]
	0x039A80C4 STP X22, X21, [X31 + 0x50]
	0x039A80C8 STP X20, X19, [X31 + 0x60]
	0x039A80CC ADRP X21, 0xA39000
	0x039A80D0 LDRB W8, [X21 + 0xBEF]
	0x039A80D4 MOV X20, X1
	0x039A80D8 MOV X19, X0
	0x039A80DC TBNZ X8, 0x0, 0x39A80F4
	0x039A80E0 ADRP X0, 0x751000
	0x039A80E4 LDR X0, [X0 + 0x8C0]
	0x039A80E8 BL 0x1C16CF4
	0x039A80EC MOVZ W8, 0x1
	0x039A80F0 STRB W8, [X21 + 0xBEF]
	0x039A80F4 LDR X8, [X19 + 0x20]
	0x039A80F8 STR W31, [X19 + 0x30]
	0x039A80FC CBZ X8, 0x39A820C
	0x039A8100 LDR V8, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2991]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2991], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+52]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_5()

Disassembly:
	0x039A8104 MOV X0, X31
	0x039A8108 BL 0x3C3C714
	0x039A810C LDR X8, [X19 + 0x20]
	0x039A8110 FADD S0, S8, S0
	0x039A8114 STR S0, [X19 + 0x28]
	0x039A8118 CBZ X8, 0x39A81D0
	0x039A811C ADRP X23, 0x751000
	0x039A8120 ADRP X21, 0x752000
	0x039A8124 ADRP X9, 0xFFFFFFFFFD142000
	0x039A8128 LDR X23, [X23 + 0x8C0]
	0x039A812C LDR X21, [X21 + 0x4B8]
	0x039A8130 LDR V9, [X9 + 0x240]
	0x039A8134 MOV X22, X31
	0x039A8138 ADRP X24, 0xA31000
	0x039A813C MOVZ W25, 0x1
	0x039A8140 FMOV S10, W31
	0x039A8144 FMOV S11, 8
	0x039A8148 LDR W9, [X8 + 0x18]
	0x039A814C CMP X22, W9, SXTW
	0x039A8150 B.GE 0x39A81D4
	0x039A8154 LDR X0, [X19 + 0x18]
	0x039A8158 CBZ X0, 0x39A81C8
	0x039A815C CMP X22, X9
	0x039A8160 B.CS 0x39A8250

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2992]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2992], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+76]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_6()

Disassembly:
	0x039A8164 ADD X26, X8, X22
	0x039A8168 LDR X1, [X23]
	0x039A816C LDRB W27, [X26 + 0x20]
	0x039A8170 BL 0x21F5D8C
	0x039A8174 LDRB W8, [X24 + 0x5AA]
	0x039A8178 MOV V8.16B, V0.16B
	0x039A817C CBNZ W8, 0x39A818C
	0x039A8180 MOV X0, X21
	0x039A8184 BL 0x1C16CF4
	0x039A8188 STRB W25, [X24 + 0x5AA]
	0x039A818C LDR X8, [X21]
	0x039A8190 FABS S1, S8
	0x039A8194 FMAXNM S1, S1, S10
	0x039A8198 FMUL S1, S1, S9
	0x039A819C LDR X8, [X8 + 0xB8]
	0x039A81A0 LDR V0, [X8]
	0x039A81A4 FMUL S0, S0, S11
	0x039A81A8 FCMP S1, S0
	0x039A81AC FCSEL S0, S1, S0, GT
	0x039A81B0 FABD S1, S10, S10
	0x039A81B4 FCMP S1, S0
	0x039A81B8 CSET W8, MI
	0x039A81BC ORR W8, W27, W8, 0x0
	0x039A81C0 STRB W8, [X26 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2993]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2993], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+32]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_7()

Disassembly:
	0x039A81C4 LDR X8, [X19 + 0x20]
	0x039A81C8 ADD X22, X22, 0x1
	0x039A81CC CBNZ X8, 0x39A8148
	0x039A81D0 BL 0x1C16F20
	0x039A81D4 CMP W9, 0x1
	0x039A81D8 B.LT 0x39A8200
	0x039A81DC ADD X10, X8, 0x20
	0x039A81E0 MOVZ W8, 0x1
	0x039A81E4 LDRB W11, [X10], #0x1
	0x039A81E8 CMP W11, 0x0
	0x039A81EC CSET W11, NE
	0x039A81F0 SUBS X9, X9, 0x1
	0x039A81F4 AND W8, W8, W11, 0x0
	0x039A81F8 B.NE 0x39A81E4
	0x039A81FC TBZ X8, 0x0, 0x39A822C
	0x039A8200 STRB W31, [X19 + 0x2C]
	0x039A8204 STR W31, [X19 + 0x28]
	0x039A8208 STR X31, [X19 + 0x20]
	0x039A820C LDP X20, X19, [X31 + 0x60]
	0x039A8210 LDP X22, X21, [X31 + 0x50]
	0x039A8214 LDP X24, X23, [X31 + 0x40]
	0x039A8218 LDP X26, X25, [X31 + 0x30]
	0x039A821C LDP X30, X27, [X31 + 0x20]
	0x039A8220 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2994]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2994], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+56]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_8()

Disassembly:
	0x039A8224 LDP D11, D10, [X31], #0x70
	0x039A8228 RET
	0x039A822C CBZ X20, 0x39A81D0
	0x039A8230 LDR V0, [X19 + 0x28]
	0x039A8234 LDR V1, [X20 + 0x1C]
	0x039A8238 FCMP S0, S1
	0x039A823C B.LE 0x39A820C
	0x039A8240 LDR W8, [X20 + 0x18]
	0x039A8244 CMP W8, 0x1
	0x039A8248 B.EQ 0x39A8200
	0x039A824C B 0x39A820C
	0x039A8250 BL 0x1C16F28
	0x039A8254 STR X30, [X31 - 0x20]!
	0x039A8258 STP X20, X19, [X31 + 0x10]
	0x039A825C LDR X8, [X0 + 0x10]
	0x039A8260 CBZ X8, 0x39A829C
	0x039A8264 MOV X19, X0
	0x039A8268 MOV W20, W31
	0x039A826C LDR W8, [X8 + 0x18]
	0x039A8270 CMP W20, W8
	0x039A8274 B.GE 0x39A82A0
	0x039A8278 MOV X0, X19
	0x039A827C MOV W1, W20
	0x039A8280 BL 0x39A804C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2995]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2995], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+80]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_9()

Disassembly:
	0x039A8284 MOV X0, X19
	0x039A8288 MOV W1, W20
	0x039A828C BL 0x39A7EA8
	0x039A8290 LDR X8, [X19 + 0x10]
	0x039A8294 ADD W20, W20, 0x1
	0x039A8298 CBNZ X8, 0x39A826C
	0x039A829C BL 0x1C16F20
	0x039A82A0 LDP X20, X19, [X31 + 0x10]
	0x039A82A4 LDR X30, [X31], #0x20
	0x039A82A8 RET
	0x039A82AC STR X30, [X31 - 0x10]!
	0x039A82B0 LDR X8, [X0 + 0x18]
	0x039A82B4 CBZ X8, 0x39A82DC
	0x039A82B8 LDR W9, [X8 + 0x18]
	0x039A82BC CMP W9, W1
	0x039A82C0 B.LS 0x39A82E0
	0x039A82C4 ADD X8, X8, W1, 0x3, SXTW
	0x039A82C8 LDR X8, [X8 + 0x20]
	0x039A82CC CBZ X8, 0x39A82DC
	0x039A82D0 LDR V0, [X8 + 0x30]
	0x039A82D4 LDR X30, [X31], #0x10
	0x039A82D8 RET
	0x039A82DC BL 0x1C16F20
	0x039A82E0 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2996]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2996], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+40]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_10()

Disassembly:
	0x039A82E4 SUB X31, X31, 0xB0
	0x039A82E8 STR X30, [X31 + 0x70]
	0x039A82EC STP X24, X23, [X31 + 0x80]
	0x039A82F0 STP X22, X21, [X31 + 0x90]
	0x039A82F4 STP X20, X19, [X31 + 0xA0]
	0x039A82F8 ADRP X19, 0xA39000
	0x039A82FC LDRB W8, [X19 + 0xBC5]
	0x039A8300 TBNZ X8, 0x0, 0x39A836C
	0x039A8304 ADRP X0, 0x7A9000
	0x039A8308 LDR X0, [X0 + 0x978]
	0x039A830C BL 0x1C16CF4
	0x039A8310 ADRP X0, 0x7A9000
	0x039A8314 LDR X0, [X0 + 0x980]
	0x039A8318 BL 0x1C16CF4
	0x039A831C ADRP X0, 0x7A9000
	0x039A8320 LDR X0, [X0 + 0x988]
	0x039A8324 BL 0x1C16CF4
	0x039A8328 ADRP X0, 0x7A9000
	0x039A832C LDR X0, [X0 + 0x990]
	0x039A8330 BL 0x1C16CF4
	0x039A8334 ADRP X0, 0x7A9000
	0x039A8338 LDR X0, [X0 + 0x998]
	0x039A833C BL 0x1C16CF4
	0x039A8340 ADRP X0, 0x7A9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2997]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2997], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+64]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_11()

Disassembly:
	0x039A8344 LDR X0, [X0 + 0x9A0]
	0x039A8348 BL 0x1C16CF4
	0x039A834C ADRP X0, 0x7A9000
	0x039A8350 LDR X0, [X0 + 0x9A8]
	0x039A8354 BL 0x1C16CF4
	0x039A8358 ADRP X0, 0x773000
	0x039A835C LDR X0, [X0 + 0x628]
	0x039A8360 BL 0x1C16CF4
	0x039A8364 MOVZ W8, 0x1
	0x039A8368 STRB W8, [X19 + 0xBC5]
	0x039A836C MOV X0, X31
	0x039A8370 STP X31, X31, [X31 + 0x40]
	0x039A8374 STR X31, [X31 + 0x50]
	0x039A8378 STP X31, X31, [X31 + 0x20]
	0x039A837C STR X31, [X31 + 0x30]
	0x039A8380 BL 0x37F6C5C
	0x039A8384 TBZ X0, 0x0, 0x39A8498
	0x039A8388 ADRP X21, 0x773000
	0x039A838C LDR X21, [X21 + 0x628]
	0x039A8390 LDR X0, [X21]
	0x039A8394 LDR W8, [X0 + 0xE0]
	0x039A8398 CBNZ W8, 0x39A83A0
	0x039A839C BL 0x1C16DFC
	0x039A83A0 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2998]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2998], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+88]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_12()

Disassembly:
	0x039A83A4 BL 0x37F90BC
	0x039A83A8 UBFM X8, X1, 0x20, 0x3F
	0x039A83AC CMP X8, 0x3
	0x039A83B0 STP X0, X1, [X31 + 0x60]
	0x039A83B4 STR X31, [X31 + 0x78]
	0x039A83B8 B.NE 0x39A8498
	0x039A83BC ADRP X8, 0x7A9000
	0x039A83C0 LDR X8, [X8 + 0x9A0]
	0x039A83C4 ADD X0, X31, 0x60
	0x039A83C8 LDR X1, [X8]
	0x039A83CC ADD X8, X31, 0x8
	0x039A83D0 BL 0x24FE180
	0x039A83D4 LDUR V0, [X31 + 0x8]
	0x039A83D8 LDR X8, [X31 + 0x18]
	0x039A83DC ADRP X22, 0x7A9000
	0x039A83E0 ADRP X23, 0x7A9000
	0x039A83E4 LDR X22, [X22 + 0x980]
	0x039A83E8 LDR X23, [X23 + 0x988]
	0x039A83EC STR V0, [X31 + 0x4]
	0x039A83F0 STR X8, [X31 + 0x50]
	0x039A83F4 ADRP X24, 0x7A9000
	0x039A83F8 LDR X24, [X24 + 0x998]
	0x039A83FC LDR X1, [X22]
	0x039A8400 ADD X0, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+2999]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2999], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+36]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_13()

Disassembly:
	0x039A8404 BL 0x2BCCC20
	0x039A8408 MOV W19, W0
	0x039A840C TBZ X0, 0x0, 0x39A84A0
	0x039A8410 LDR X1, [X23]
	0x039A8414 ADD X8, X31, 0x8
	0x039A8418 ADD X0, X31, 0x40
	0x039A841C BL 0x2BCCC4C
	0x039A8420 LDUR V0, [X31 + 0x8]
	0x039A8424 LDR X8, [X31 + 0x18]
	0x039A8428 LDRB W9, [X31 + 0x78]
	0x039A842C STR V0, [X31 + 0x2]
	0x039A8430 STR X8, [X31 + 0x30]
	0x039A8434 CBZ W9, 0x39A846C
	0x039A8438 LDR X0, [X21]
	0x039A843C LDR W8, [X0 + 0xE0]
	0x039A8440 CBNZ W8, 0x39A8448
	0x039A8444 BL 0x1C16DFC
	0x039A8448 ADD X0, X31, 0x20
	0x039A844C MOV X1, X31
	0x039A8450 BL 0x37F8998
	0x039A8454 LDR X1, [X24]
	0x039A8458 MOV W20, W0
	0x039A845C ADD X0, X31, 0x78
	0x039A8460 BL 0x24345D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3000]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3000], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+60]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_14()

Disassembly:
	0x039A8464 CMP W20, W0
	0x039A8468 B.NE 0x39A83FC
	0x039A846C LDR X0, [X21]
	0x039A8470 LDR W8, [X0 + 0xE0]
	0x039A8474 CBNZ W8, 0x39A847C
	0x039A8478 BL 0x1C16DFC
	0x039A847C ADD X0, X31, 0x20
	0x039A8480 MOV X1, X31
	0x039A8484 BL 0x37F8E48
	0x039A8488 CMP W0, 0x2
	0x039A848C B.NE 0x39A83FC
	0x039A8490 MOVZ W20, 0x7
	0x039A8494 B 0x39A84A4
	0x039A8498 MOV W0, W31
	0x039A849C B 0x39A84C4
	0x039A84A0 MOVZ W20, 0x3
	0x039A84A4 ADRP X8, 0x7A9000
	0x039A84A8 LDR X8, [X8 + 0x978]
	0x039A84AC ADD X0, X31, 0x40
	0x039A84B0 LDR X1, [X8]
	0x039A84B4 BL 0x2BCCC1C
	0x039A84B8 CMP W20, 0x7
	0x039A84BC CSET W8, EQ
	0x039A84C0 AND W0, W19, W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3001]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3001], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+84]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_15()

Disassembly:
	0x039A84C4 LDP X20, X19, [X31 + 0xA0]
	0x039A84C8 LDP X22, X21, [X31 + 0x90]
	0x039A84CC LDP X24, X23, [X31 + 0x80]
	0x039A84D0 LDR X30, [X31 + 0x70]
	0x039A84D4 ADD X31, X31, 0xB0
	0x039A84D8 RET
	0x039A84DC B 0x39A84F0
	0x039A84E0 B 0x39A84F0
	0x039A84E4 B 0x39A84F0
	0x039A84E8 B 0x39A84F0
	0x039A84EC B 0x39A84F0
	0x039A84F0 MOV X19, X0
	0x039A84F4 CMP W1, 0x1
	0x039A84F8 B.NE 0x39A852C
	0x039A84FC MOV X0, X19
	0x039A8500 BL 0x3EB1AD0
	0x039A8504 LDR X20, [X0]
	0x039A8508 BL 0x3EB1AE0
	0x039A850C ADRP X8, 0x7A9000
	0x039A8510 LDR X8, [X8 + 0x978]
	0x039A8514 ADD X0, X31, 0x40
	0x039A8518 LDR X1, [X8]
	0x039A851C BL 0x2BCCC1C
	0x039A8520 CBNZ X20, 0x39A8534

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3002]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3002], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+44]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_16()

Disassembly:
	0x039A8524 MOV W19, W31
	0x039A8528 B 0x39A84B8
	0x039A852C MOV X20, X31
	0x039A8530 B 0x39A8540
	0x039A8534 MOV X0, X20
	0x039A8538 BL 0x1C16F18
	0x039A853C MOV X19, X0
	0x039A8540 ADRP X8, 0x7A9000
	0x039A8544 LDR X8, [X8 + 0x978]
	0x039A8548 LDR X1, [X8]
	0x039A854C ADD X0, X31, 0x40
	0x039A8550 BL 0x2BCCC1C
	0x039A8554 CBNZ X20, 0x39A8560
	0x039A8558 MOV X0, X19
	0x039A855C BL 0x1D2C690
	0x039A8560 MOV X0, X20
	0x039A8564 BL 0x1C16F18
	0x039A8568 BL 0x1990590
	0x039A856C STP D9, D8, [X31 - 0x30]!
	0x039A8570 STR X30, [X31 + 0x10]
	0x039A8574 STP X20, X19, [X31 + 0x20]
	0x039A8578 ADRP X19, 0xA39000
	0x039A857C LDRB W8, [X19 + 0xBC6]
	0x039A8580 TBNZ X8, 0x0, 0x39A8598

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3003]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3003], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+68]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_17()

Disassembly:
	0x039A8584 ADRP X0, 0x773000
	0x039A8588 LDR X0, [X0 + 0x558]
	0x039A858C BL 0x1C16CF4
	0x039A8590 MOVZ W8, 0x1
	0x039A8594 STRB W8, [X19 + 0xBC6]
	0x039A8598 ADRP X19, 0xA31000
	0x039A859C LDRB W8, [X19 + 0x817]
	0x039A85A0 CBNZ W8, 0x39A85B8
	0x039A85A4 ADRP X0, 0x773000
	0x039A85A8 LDR X0, [X0 + 0x528]
	0x039A85AC BL 0x1C16CF4
	0x039A85B0 MOVZ W8, 0x1
	0x039A85B4 STRB W8, [X19 + 0x817]
	0x039A85B8 ADRP X8, 0x773000
	0x039A85BC LDR X8, [X8 + 0x528]
	0x039A85C0 LDR X8, [X8]
	0x039A85C4 LDR X8, [X8 + 0xB8]
	0x039A85C8 LDR X8, [X8]
	0x039A85CC CBZ X8, 0x39A864C
	0x039A85D0 LDR X0, [X8 + 0x1A0]
	0x039A85D4 CBZ X0, 0x39A86A0
	0x039A85D8 ADRP X8, 0x773000
	0x039A85DC LDR X8, [X8 + 0x558]
	0x039A85E0 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3004]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3004], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+92]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_18()

Disassembly:
	0x039A85E4 BL 0x2E095F8
	0x039A85E8 ADRP X19, 0xA31000
	0x039A85EC LDRB W8, [X19 + 0x78F]
	0x039A85F0 MOV V8.16B, V0.16B
	0x039A85F4 MOV V9.16B, V1.16B
	0x039A85F8 CBNZ W8, 0x39A8610
	0x039A85FC ADRP X0, 0x753000
	0x039A8600 LDR X0, [X0 + 0xF08]
	0x039A8604 BL 0x1C16CF4
	0x039A8608 MOVZ W8, 0x1
	0x039A860C STRB W8, [X19 + 0x78F]
	0x039A8610 ADRP X8, 0x753000
	0x039A8614 LDR X8, [X8 + 0xF08]
	0x039A8618 LDR X8, [X8]
	0x039A861C LDR X8, [X8 + 0xB8]
	0x039A8620 LDP S0, S1, [X8]
	0x039A8624 ADRP X8, 0xFFFFFFFFFD141000
	0x039A8628 LDR V2, [X8 + 0xF20]
	0x039A862C FSUB S0, S8, S0
	0x039A8630 FSUB S1, S9, S1
	0x039A8634 FMUL S0, S0, S0
	0x039A8638 FMUL S1, S1, S1
	0x039A863C FADD S0, S0, S1
	0x039A8640 FCMP S0, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3005]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3005], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+28]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_19()

Disassembly:
	0x039A8644 CSET W19, PL
	0x039A8648 B 0x39A8650
	0x039A864C MOV W19, W31
	0x039A8650 ADRP X20, 0xA39000
	0x039A8654 LDRB W8, [X20 + 0x238]
	0x039A8658 CBNZ W8, 0x39A8670
	0x039A865C ADRP X0, 0x79E000
	0x039A8660 LDR X0, [X0 + 0xD58]
	0x039A8664 BL 0x1C16CF4
	0x039A8668 MOVZ W8, 0x1
	0x039A866C STRB W8, [X20 + 0x238]
	0x039A8670 ADRP X8, 0x79E000
	0x039A8674 LDR X8, [X8 + 0xD58]
	0x039A8678 LDR X30, [X31 + 0x10]
	0x039A867C LDR X8, [X8]
	0x039A8680 LDR X8, [X8 + 0xB8]
	0x039A8684 LDR X8, [X8]
	0x039A8688 CMP X8, 0x0
	0x039A868C CSET W8, NE
	0x039A8690 ORR W0, W19, W8, 0x0
	0x039A8694 LDP X20, X19, [X31 + 0x20]
	0x039A8698 LDP D9, D8, [X31], #0x30
	0x039A869C RET
	0x039A86A0 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3006]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3006], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+32]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_20()

Disassembly:
	0x039A86A4 SUB X31, X31, 0xA0
	0x039A86A8 STP X29, X30, [X31 + 0x40]
	0x039A86AC STP X28, X27, [X31 + 0x50]
	0x039A86B0 STP X26, X25, [X31 + 0x60]
	0x039A86B4 STP X24, X23, [X31 + 0x70]
	0x039A86B8 STP X22, X21, [X31 + 0x80]
	0x039A86BC STP X20, X19, [X31 + 0x90]
	0x039A86C0 ADRP X27, 0xA39000
	0x039A86C4 ADRP X29, 0x7A9000
	0x039A86C8 ADRP X20, 0x7A0000
	0x039A86CC ADRP X25, 0x79E000
	0x039A86D0 ADRP X28, 0x7A9000
	0x039A86D4 ADRP X22, 0x79D000
	0x039A86D8 ADRP X26, 0x7A9000
	0x039A86DC ADRP X24, 0x7A9000
	0x039A86E0 ADRP X23, 0x773000
	0x039A86E4 ADRP X21, 0x773000
	0x039A86E8 LDR X29, [X29 + 0x960]
	0x039A86EC LDR X20, [X20 + 0x5B8]
	0x039A86F0 LDR X25, [X25 + 0xA98]
	0x039A86F4 LDR X28, [X28 + 0x9B0]
	0x039A86F8 LDR X22, [X22 + 0x350]
	0x039A86FC LDR X26, [X26 + 0x9B8]
	0x039A8700 LDR X24, [X24 + 0x9C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3007]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3007], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+24]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Object <RegisterDebugUI>b__17_21()

Disassembly:
	0x039A8704 LDR X23, [X23 + 0x4C8]
	0x039A8708 LDR X21, [X21 + 0x4D8]
	0x039A870C LDRB W8, [X27 + 0xBC7]
	0x039A8710 MOV X19, X0
	0x039A8714 TBNZ X8, 0x0, 0x39A88F4
	0x039A8718 ADRP X0, 0x7A0000
	0x039A871C LDR X0, [X0 + 0x560]
	0x039A8720 BL 0x1C16CF4
	0x039A8724 ADRP X0, 0x7A9000
	0x039A8728 LDR X0, [X0 + 0x198]
	0x039A872C BL 0x1C16CF4
	0x039A8730 ADRP X0, 0x7A9000
	0x039A8734 LDR X0, [X0 + 0x9C8]
	0x039A8738 BL 0x1C16CF4
	0x039A873C ADRP X0, 0x7A9000
	0x039A8740 LDR X0, [X0 + 0x9C0]
	0x039A8744 BL 0x1C16CF4
	0x039A8748 ADRP X0, 0x7A9000
	0x039A874C LDR X0, [X0 + 0x9D0]
	0x039A8750 BL 0x1C16CF4
	0x039A8754 ADRP X0, 0x7A9000
	0x039A8758 LDR X0, [X0 + 0x928]
	0x039A875C BL 0x1C16CF4
	0x039A8760 ADRP X0, 0x7A9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3A000
	005 Move W8, [X20+3008]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x74C000
	012 Move X0, [X0+2704]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3008], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X9, 0x74C000
	020 Move X9, [X9+2704]
	021 Move V0, [X8+36]
	022 Add X1, X31, 12
	023 Move X0, [X9]
	024 Move [X31+12], S0
	025 Call 0x1C17E04
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

