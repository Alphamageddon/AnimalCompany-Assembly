Type: UnityEngine.Rendering.DynamicArray`1

Method: System.Int32 get_size()

Disassembly:
	0x02B40B14 B.GE 0x2B40B64
	0x02B40B18 LDR X8, [X3 + 0x20]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_size(System.Int32 value)

Disassembly:
	0x02B40B1C MOV X19, X0
	0x02B40B20 MOV W20, W2

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Int32 get_capacity()

Disassembly:
	0x02B40B24 LDR X8, [X8 + 0xC0]
	0x02B40B28 LDR X0, [X8 + 0x10]
	0x02B40B2C LDRB W8, [X0 + 0x135]
	0x02B40B30 TBNZ X8, 0x0, 0x2B40B38
	0x02B40B34 BL 0x1C5C684
	0x02B40B38 MOV W1, W21
	0x02B40B3C BL 0x1C16D6C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02B40B40 MOV X21, X0
	0x02B40B44 TBZ X20, 0x0, 0x2B40B60
	0x02B40B48 LDR X0, [X19 + 0x10]
	0x02B40B4C CBZ X0, 0x2B40B70
	0x02B40B50 LDR W2, [X0 + 0x18]
	0x02B40B54 MOV X1, X21
	0x02B40B58 MOV X3, X31
	0x02B40B5C BL 0x33A0C7C
	0x02B40B60 STR X21, [X19 + 0x10]
	0x02B40B64 LDP X20, X19, [X31 + 0x10]
	0x02B40B68 LDP X30, X21, [X31], #0x20
	0x02B40B6C RET
	0x02B40B70 BL 0x1C16F20
	0x02B40B74 STR X30, [X31 - 0x10]!
	0x02B40B78 LDR X8, [X0 + 0x10]
	0x02B40B7C CBZ X8, 0x2B40BA0
	0x02B40B80 LDR W9, [X8 + 0x18]
	0x02B40B84 CMP W9, W1
	0x02B40B88 B.LS 0x2B40BA4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X8, [X20+32]
	009 Move X8, [X8+192]
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W1, 32
	018 Call 0x1C17D6C
	019 Move [X19+16], X0
	020 Move [X19+24], W31
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void .ctor(System.Int32 size)

Disassembly:
	0x02B40B8C MOVZ W9, 0xE8
	0x02B40B90 SMADDL X8, X1, X9, X8
	0x02B40B94 ADD X0, X8, 0x20
	0x02B40B98 LDR X30, [X31], #0x10
	0x02B40B9C RET
	0x02B40BA0 BL 0x1C16F20
	0x02B40BA4 BL 0x1C16F28
	0x02B40BA8 STR X30, [X31 - 0x10]!
	0x02B40BAC CBZ X0, 0x2B40BBC
	0x02B40BB0 LDR X0, [X0 + 0x10]
	0x02B40BB4 LDR X30, [X31], #0x10
	0x02B40BB8 RET
	0x02B40BBC BL 0x1C16F20
	0x02B40BC0 SUB X31, X31, 0x20
	0x02B40BC4 STP X31, X30, [X31 + 0x8]
	0x02B40BC8 STR X31, [X31]
	0x02B40BCC LDR X8, [X1 + 0x20]
	0x02B40BD0 MOV X1, X0
	0x02B40BD4 ADD X0, X31, 0x0
	0x02B40BD8 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W19, W1
	006 Move X1, X31
	007 Move X21, X2
	008 Move X20, X0
	009 Call Object..ctor, X0
	010 Move X8, [X21+32]
	011 Move X8, [X8+192]
	012 Move X0, [X8+16]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W1, W19
	020 Call 0x1C17D6C
	021 Move [X20+16], X0
	022 Move [X20+24], W19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Void Clear()

Disassembly:
	0x02B40BDC LDR X2, [X8 + 0x88]
	0x02B40BE0 BL 0x2EA242C

ISIL:
	001 Move [X0+24], W31
	002 Return 

Method: System.Boolean Contains(T item)

Disassembly:
	0x02B40BE4 LDP X0, X1, [X31]
	0x02B40BE8 LDR X30, [X31 + 0x10]
	0x02B40BEC ADD X31, X31, 0x20
	0x02B40BF0 RET
	0x02B40BF4 SUB X31, X31, 0x30
	0x02B40BF8 STP X30, X19, [X31 + 0x20]
	0x02B40BFC STP X31, X31, [X31 + 0x8]
	0x02B40C00 STR X31, [X31 + 0x18]
	0x02B40C04 LDR X10, [X3 + 0x20]
	0x02B40C08 MOV W9, W2
	0x02B40C0C MOV W2, W1
	0x02B40C10 MOV X1, X0
	0x02B40C14 LDR X10, [X10 + 0xC0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X2+32]
	003 Move W2, W31
	004 Move X8, [X8+192]
	005 Move X8, [X8+40]
	006 Move X8, [X8+32]
	007 Move X8, [X8+192]
	008 Move X3, [X8+120]
	009 Call 0x2B41024, X0, X1, X2
	010 Add W31, W0, 1
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0

Method: System.Int32 Add(in T value)

Disassembly:
	0x02B40C18 ADD X0, X31, 0x8
	0x02B40C1C MOV W3, W9
	0x02B40C20 MOV X19, X8
	0x02B40C24 LDR X4, [X10 + 0xA0]
	0x02B40C28 BL 0x24F405C
	0x02B40C2C LDR X8, [X31 + 0x18]
	0x02B40C30 LDUR V0, [X31 + 0x8]
	0x02B40C34 STR X8, [X19 + 0x10]
	0x02B40C38 STR V0, [X19]
	0x02B40C3C LDP X30, X19, [X31 + 0x20]
	0x02B40C40 ADD X31, X31, 0x30
	0x02B40C44 RET
	0x02B40C48 RET
	0x02B40C4C LDR W0, [X0 + 0x18]
	0x02B40C50 RET
	0x02B40C54 STR W1, [X0 + 0x18]
	0x02B40C58 RET
	0x02B40C5C STR X30, [X31 - 0x10]!
	0x02B40C60 LDR X8, [X0 + 0x10]
	0x02B40C64 CBZ X8, 0x2B40C74
	0x02B40C68 LDR W0, [X8 + 0x18]
	0x02B40C6C LDR X30, [X31], #0x10
	0x02B40C70 RET
	0x02B40C74 BL 0x1C16F20
	0x02B40C78 STR X30, [X31 - 0x20]!
	0x02B40C7C STP X20, X19, [X31 + 0x10]
	0x02B40C80 MOV X20, X1
	0x02B40C84 MOV X1, X31
	0x02B40C88 MOV X19, X0
	0x02B40C8C BL 0x33BDD8C
	0x02B40C90 LDR X8, [X20 + 0x20]
	0x02B40C94 LDR X8, [X8 + 0xC0]
	0x02B40C98 LDR X0, [X8 + 0x10]
	0x02B40C9C LDRB W8, [X0 + 0x135]
	0x02B40CA0 TBNZ X8, 0x0, 0x2B40CA8
	0x02B40CA4 BL 0x1C5C684
	0x02B40CA8 MOVZ W1, 0x20
	0x02B40CAC BL 0x1C16D6C
	0x02B40CB0 STR X0, [X19 + 0x10]
	0x02B40CB4 LDR X8, [X20 + 0x20]
	0x02B40CB8 MOV X0, X19
	0x02B40CBC LDP X20, X19, [X31 + 0x10]
	0x02B40CC0 MOV W1, W31
	0x02B40CC4 LDR X8, [X8 + 0xC0]
	0x02B40CC8 LDR X2, [X8 + 0x18]
	0x02B40CCC LDR X3, [X2]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, [X0+16]
	007 Compare X22, 0
	008 JumpIfEqual {55}
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move W8, [X22+24]
	011 Move X19, X0
	012 Move X21, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X9, [X2+32]
	015 Move X9, [X9+192]
	016 Move X0, [X9+16]
	017 Move W9, [X0+309]
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {24}
	022 Call 0x1C5D684
	023 Move W8, [X22+24]
	024 Move W1, W8
	025 ShiftRight W1, 31
	026 And W1, W1, 0x3FFFFFFF
	027 Call 0x1C17D6C
	028 Move X8, [X19+16]
	029 Compare X8, 0
	030 JumpIfEqual {55}
	031 Move W2, [X8+24]
	032 Move X22, X0
	033 Move X0, X8
	034 Move X1, X22
	035 Move X3, X31
	036 Call Array.Copy, X0, X1, X2
	037 Move [X19+16], X22
	038 Compare X22, 0
	039 JumpIfEqual {55}
	040 Move W8, [X22+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, [X21]
	043 Add X9, X22, X20
	044 Move W0, W20
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move [X9+32], X8
	048 Move W8, [X19+24]
	049 Add W8, W8, 1
	050 Move [X19+24], W8
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20
	056 Call 0x1C17F28

Method: System.Void AddRange(UnityEngine.Rendering.DynamicArray`1<T> array)

Disassembly:
	0x02B40CD0 LDR X30, [X31], #0x20
	0x02B40CD4 BR X3
	0x02B40CD8 STP X30, X21, [X31 - 0x20]!
	0x02B40CDC STP X20, X19, [X31 + 0x10]
	0x02B40CE0 MOV W19, W1
	0x02B40CE4 MOV X1, X31
	0x02B40CE8 MOV X21, X2
	0x02B40CEC MOV X20, X0
	0x02B40CF0 BL 0x33BDD8C
	0x02B40CF4 LDR X8, [X21 + 0x20]
	0x02B40CF8 LDR X8, [X8 + 0xC0]
	0x02B40CFC LDR X0, [X8 + 0x10]
	0x02B40D00 LDRB W8, [X0 + 0x135]
	0x02B40D04 TBNZ X8, 0x0, 0x2B40D0C
	0x02B40D08 BL 0x1C5C684
	0x02B40D0C MOV W1, W19
	0x02B40D10 BL 0x1C16D6C
	0x02B40D14 STR X0, [X20 + 0x10]
	0x02B40D18 LDR X8, [X21 + 0x20]
	0x02B40D1C MOV X0, X20
	0x02B40D20 MOV W1, W19
	0x02B40D24 LDP X20, X19, [X31 + 0x10]
	0x02B40D28 LDR X8, [X8 + 0xC0]
	0x02B40D2C LDR X2, [X8 + 0x18]
	0x02B40D30 LDR X3, [X2]
	0x02B40D34 LDP X30, X21, [X31], #0x20
	0x02B40D38 BR X3
	0x02B40D3C LDR X8, [X1 + 0x20]
	0x02B40D40 MOV W1, W31
	0x02B40D44 LDR X8, [X8 + 0xC0]
	0x02B40D48 LDR X2, [X8 + 0x18]
	0x02B40D4C LDR X3, [X2]
	0x02B40D50 BR X3
	0x02B40D54 STP X29, X30, [X31 - 0x30]!
	0x02B40D58 STP X22, X21, [X31 + 0x10]
	0x02B40D5C STP X20, X19, [X31 + 0x20]
	0x02B40D60 ADD X29, X31, 0x0
	0x02B40D64 SUB X31, X31, 0x20
	0x02B40D68 MRS X21, 0xC000
	0x02B40D6C LDR X8, [X21 + 0x28]
	0x02B40D70 ADD X9, X31, 0x0
	0x02B40D74 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {46}
	009 Move X8, [X2+32]
	010 Move W9, [X0+24]
	011 Move W10, [X1+24]
	012 Move X19, X1
	013 Move X8, [X8+192]
	014 Move W2, 1
	015 Add W1, W10, W9
	016 Move X20, X0
	017 Move X3, [X8+72]
	018 Call 0x2B410FC, X0, X1, X2
	019 Move W8, [X19+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W21, W31
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 Move X23, [X20+16]
	024 Move X0, X19
	025 Move W1, W21
	026 Add W8, W22, 1
	027 Move [X20+24], W8
	028 Call 0x2B41178, X0, X1
	029 Compare X23, 0
	030 JumpIfEqual {46}
	031 Move W8, [X23+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X0]
	034 Add X9, X23, X22
	035 Add W21, W21, 1
	036 Move [X9+32], X8
	037 Move W8, [X19+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return 
	046 Call 0x1C17F20
	047 Call 0x1C17F28

Method: System.Boolean Remove(T item)

Disassembly:
	0x02B40D78 STUR X8, [X29 - 0x8]
	0x02B40D7C STUR X1, [X29 - 0x20]
	0x02B40D80 LDR X22, [X2 + 0x20]
	0x02B40D84 LDR X8, [X22 + 0xC0]
	0x02B40D88 LDR X8, [X8 + 0x20]
	0x02B40D8C LDR W2, [X8 + 0xFC]
	0x02B40D90 ADD X10, X2, 0xF
	0x02B40D94 AND X10, X10, 0x1FFFFFFFF
	0x02B40D98 SUB X20, X9, X10
	0x02B40D9C ADD X31, X20, 0x0
	0x02B40DA0 LDR W8, [X8 + 0x28]
	0x02B40DA4 MOV X0, X20
	0x02B40DA8 CMP W8, 0x0
	0x02B40DAC SUB X8, X29, 0x20
	0x02B40DB0 CSEL X1, X1, X8, LT
	0x02B40DB4 BL 0x3EB1AC0
	0x02B40DB8 LDR X8, [X22 + 0xC0]
	0x02B40DBC LDP X9, X1, [X8 + 0x20]
	0x02B40DC0 LDR W8, [X9 + 0x28]
	0x02B40DC4 LDR X0, [X1]
	0x02B40DC8 TBNZ X8, 0x1F, 0x2B40DD0
	0x02B40DCC LDR X20, [X20]
	0x02B40DD0 STUR X20, [X29 - 0x18]
	0x02B40DD4 LDR X8, [X1 + 0x10]
	0x02B40DD8 SUB X3, X29, 0x18
	0x02B40DDC SUB X4, X29, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X2
	007 Move W2, W31
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+40]
	011 Move X8, [X8+32]
	012 Move X8, [X8+192]
	013 Move X3, [X8+120]
	014 Call 0x2B41024, X0, X1, X2
	015 Move W21, W0
	016 Add W31, W0, 1
	017 Move X8, [X19+32]
	018 Move X0, X20
	019 Move W1, W21
	020 Move X8, [X8+192]
	021 Move X2, [X8+88]
	022 Call 0x2B40DE0, X0, X1
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Add W31, W21, 1
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x02B40DE0 MOV X2, X19
	0x02B40DE4 BLR X8
	0x02B40DE8 LDUR W8, [X29 - 0xC]
	0x02B40DEC LDR X9, [X21 + 0x28]
	0x02B40DF0 LDUR X10, [X29 - 0x8]
	0x02B40DF4 ADDS W31, W8, 0x1
	0x02B40DF8 CSET W0, NE
	0x02B40DFC CMP X9, X10
	0x02B40E00 B.NE 0x2B40E18
	0x02B40E04 ADD X31, X29, 0x0
	0x02B40E08 LDP X20, X19, [X31 + 0x20]
	0x02B40E0C LDP X22, X21, [X31 + 0x10]
	0x02B40E10 LDP X29, X30, [X31], #0x30
	0x02B40E14 RET
	0x02B40E18 BL 0x3EB1B20
	0x02B40E1C STP X29, X30, [X31 - 0x50]!
	0x02B40E20 STP X26, X25, [X31 + 0x10]
	0x02B40E24 STP X24, X23, [X31 + 0x20]
	0x02B40E28 STP X22, X21, [X31 + 0x30]
	0x02B40E2C STP X20, X19, [X31 + 0x40]
	0x02B40E30 ADD X29, X31, 0x0
	0x02B40E34 SUB X31, X31, 0x10
	0x02B40E38 MRS X26, 0xC000
	0x02B40E3C LDR X8, [X26 + 0x28]
	0x02B40E40 MOV X19, X2
	0x02B40E44 MOV X25, X1
	0x02B40E48 MOV X20, X0
	0x02B40E4C STUR X8, [X29 - 0x8]
	0x02B40E50 LDR X8, [X2 + 0x20]
	0x02B40E54 LDR X8, [X8 + 0xC0]
	0x02B40E58 LDR X9, [X8 + 0x20]
	0x02B40E5C LDR W22, [X9 + 0xFC]
	0x02B40E60 ADD X9, X31, 0x0
	0x02B40E64 ADD X10, X22, 0xF
	0x02B40E68 AND X10, X10, 0x1FFFFFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move TEMP, X1
	005 And TEMP, TEMP, -2147483648
	006 Compare TEMP, -2147483648
	007 JumpIfEqual {28}
	008 Move W8, [X0+24]
	009 Move W3, W1
	010 Move X19, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Subtract W9, W8, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, [X19+16]
	015 NotImplemented "Instruction ORN not yet implemented."
	016 Add W1, W3, 1
	017 Add W4, W8, W9
	018 Move X2, X0
	019 Move X5, X31
	020 Call Array.Copy, X0, X1, X2, X3, X4
	021 Move W8, [X19+24]
	022 Subtract W9, W8, 1
	023 Move [X19+24], W9
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 
	028 Move X0, 0x15BE000
	029 Move X0, [X0+3960]
	030 Move X19, X2
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call IndexOutOfRangeException..ctor, X0
	036 Move X0, X20
	037 Move X1, X19
	038 Call 0x1C17DEC

Method: System.Void RemoveRange(System.Int32 index, System.Int32 count)

Disassembly:
	0x02B40E6C SUB X23, X9, X10
	0x02B40E70 ADD X31, X23, 0x0
	0x02B40E74 LDR X1, [X8 + 0x30]
	0x02B40E78 LDR X8, [X1]
	0x02B40E7C BLR X8
	0x02B40E80 LDR X24, [X20 + 0x10]
	0x02B40E84 CBZ X24, 0x2B40FD8
	0x02B40E88 LDR W8, [X24 + 0x18]
	0x02B40E8C MOV W21, W0
	0x02B40E90 CMP W0, W8
	0x02B40E94 B.GE 0x2B40EAC
	0x02B40E98 MOV X0, X23
	0x02B40E9C MOV X1, X25
	0x02B40EA0 MOV X2, X22
	0x02B40EA4 BL 0x3EB1AC0
	0x02B40EA8 B 0x2B40F08
	0x02B40EAC LDR X9, [X19 + 0x20]
	0x02B40EB0 LDR X9, [X9 + 0xC0]
	0x02B40EB4 LDR X0, [X9 + 0x10]
	0x02B40EB8 LDRB W9, [X0 + 0x135]
	0x02B40EBC TBNZ X9, 0x0, 0x2B40EC8
	0x02B40EC0 BL 0x1C5C684
	0x02B40EC4 LDR W8, [X24 + 0x18]
	0x02B40EC8 UBFM W1, W8, 0x1F, 0x1E
	0x02B40ECC BL 0x1C16D6C
	0x02B40ED0 LDR X8, [X20 + 0x10]
	0x02B40ED4 CBZ X8, 0x2B40FD8
	0x02B40ED8 LDR W2, [X8 + 0x18]
	0x02B40EDC MOV X24, X0
	0x02B40EE0 MOV X0, X8
	0x02B40EE4 MOV X1, X24
	0x02B40EE8 MOV X3, X31
	0x02B40EEC BL 0x33A0C7C
	0x02B40EF0 MOV X0, X23
	0x02B40EF4 MOV X1, X25
	0x02B40EF8 MOV X2, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare W2, 0
	005 JumpIfEqual {29}
	006 Move W8, W1
	007 Move TEMP, X1
	008 And TEMP, TEMP, -2147483648
	009 Compare TEMP, -2147483648
	010 JumpIfEqual {33}
	011 Move W19, W2
	012 Move TEMP, X2
	013 And TEMP, TEMP, -2147483648
	014 Compare TEMP, -2147483648
	015 JumpIfEqual {33}
	016 Move W9, [X0+24]
	017 Move X20, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add W1, W19, W8
	020 Subtract W4, W9, W1
	021 Move X0, [X20+16]
	022 Move W3, W8
	023 Move X5, X31
	024 Move X2, X0
	025 Call Array.Copy, X0, X1, X2, X3, X4
	026 Move W8, [X20+24]
	027 Subtract W8, W8, W19
	028 Move [X20+24], W8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 
	033 Move X0, 0x15BC000
	034 Move X0, [X0+1888]
	035 Move X19, X3
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call ArgumentOutOfRangeException..ctor, X0
	041 Move X0, X20
	042 Move X1, X19
	043 Call 0x1C17DEC

Method: System.Int32 FindIndex(System.Int32 startIndex, System.Int32 count, System.Predicate`1<T> match)

Disassembly:
	0x02B40EFC STR X24, [X20 + 0x10]
	0x02B40F00 BL 0x3EB1AC0
	0x02B40F04 CBZ X24, 0x2B40FD8
	0x02B40F08 LDR W8, [X24 + 0x18]
	0x02B40F0C CMP W21, W8
	0x02B40F10 B.CS 0x2B40FDC
	0x02B40F14 LDR X8, [X24]
	0x02B40F18 SXTW X9, W21
	0x02B40F1C MOV X1, X23
	0x02B40F20 MOV X2, X22
	0x02B40F24 LDR W8, [X8 + 0x104]
	0x02B40F28 NOP
	0x02B40F2C MADD X8, X8, X9, X24
	0x02B40F30 ADD X0, X8, 0x20
	0x02B40F34 BL 0x3EB1AC0
	0x02B40F38 LDR X8, [X19 + 0x20]
	0x02B40F3C LDR X8, [X8 + 0xC0]
	0x02B40F40 LDR X0, [X8 + 0x20]
	0x02B40F44 LDRB W8, [X0 + 0x135]
	0x02B40F48 TBNZ X8, 0x0, 0x2B40F50
	0x02B40F4C BL 0x1C5C684
	0x02B40F50 LDR W8, [X24 + 0x18]
	0x02B40F54 CMP W21, W8
	0x02B40F58 B.CS 0x2B40FDC
	0x02B40F5C LDR X8, [X19 + 0x20]
	0x02B40F60 MOV X0, X20
	0x02B40F64 LDR X8, [X8 + 0xC0]
	0x02B40F68 LDR X1, [X8 + 0x30]
	0x02B40F6C LDR X8, [X1]
	0x02B40F70 BLR X8
	0x02B40F74 LDR X8, [X19 + 0x20]
	0x02B40F78 ADD W1, W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X20, X0
	008 Move X21, X3
	009 Move X19, W1
	010 Move X8, [X20+16]
	011 Compare X8, 0
	012 JumpIfEqual {39}
	013 Move W9, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Compare X21, 0
	016 JumpIfEqual {39}
	017 Add X8, X8, X19
	018 Move X9, [X21+24]
	019 Move X0, [X21+64]
	020 Move X1, [X8+32]
	021 Move X2, [X21+40]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {33}
	027 NotImplemented "Instruction LDRSW not yet implemented."
	028 Add X19, X19, 1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W19, TEMP
	033 Move W0, W19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Int32 IndexOf(T item, System.Int32 index, System.Int32 count)

Disassembly:
	0x02B40F7C MOV X0, X20
	0x02B40F80 LDR X8, [X8 + 0xC0]
	0x02B40F84 LDR X2, [X8 + 0x18]
	0x02B40F88 LDR X8, [X2]
	0x02B40F8C BLR X8
	0x02B40F90 LDR X8, [X19 + 0x20]
	0x02B40F94 MOV X0, X20
	0x02B40F98 LDR X8, [X8 + 0xC0]
	0x02B40F9C LDR X1, [X8 + 0x40]
	0x02B40FA0 LDR X8, [X1]
	0x02B40FA4 BLR X8
	0x02B40FA8 LDR X8, [X26 + 0x28]
	0x02B40FAC LDUR X9, [X29 - 0x8]
	0x02B40FB0 CMP X8, X9
	0x02B40FB4 B.NE 0x2B40FE0
	0x02B40FB8 MOV W0, W21
	0x02B40FBC ADD X31, X29, 0x0
	0x02B40FC0 LDP X20, X19, [X31 + 0x40]
	0x02B40FC4 LDP X22, X21, [X31 + 0x30]
	0x02B40FC8 LDP X24, X23, [X31 + 0x20]
	0x02B40FCC LDP X26, X25, [X31 + 0x10]
	0x02B40FD0 LDP X29, X30, [X31], #0x50
	0x02B40FD4 RET
	0x02B40FD8 BL 0x1C16F20
	0x02B40FDC BL 0x1C16F28
	0x02B40FE0 BL 0x3EB1B20
	0x02B40FE4 STP X29, X30, [X31 - 0x60]!
	0x02B40FE8 STR X27, [X31 + 0x10]
	0x02B40FEC STP X26, X25, [X31 + 0x20]
	0x02B40FF0 STP X24, X23, [X31 + 0x30]
	0x02B40FF4 STP X22, X21, [X31 + 0x40]
	0x02B40FF8 STP X20, X19, [X31 + 0x50]
	0x02B40FFC ADD X29, X31, 0x0
	0x02B41000 SUB X31, X31, 0x10
	0x02B41004 MRS X26, 0xC000
	0x02B41008 LDR X8, [X26 + 0x28]
	0x02B4100C MOV X19, X2
	0x02B41010 MOV X20, X1
	0x02B41014 MOV X21, X0
	0x02B41018 STUR X8, [X29 - 0x8]
	0x02B4101C LDR X8, [X2 + 0x20]
	0x02B41020 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move TEMP, 0
	009 Not TEMP
	010 Move W0, TEMP
	011 Move W8, [X22+24]
	012 Move W19, W2
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W20, W3
	015 Move X21, X1
	016 Move X8, [X22+16]
	017 Compare X8, 0
	018 JumpIfEqual {49}
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X8, X8, W19
	022 Move X0, [X8+32]
	023 Compare X0, 0
	024 JumpIfEqual {49}
	025 Move X8, [X0]
	026 Move X1, X21
	027 Move X9, [X8+312]
	028 Move X2, [X8+320]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {42}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W0, TEMP
	038 Move W8, [X22+24]
	039 Add W19, W19, 1
	040 Subtract W20, W20, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, W19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return X0
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: System.Int32 IndexOf(T item, System.Int32 index)

Disassembly:
	0x02B41024 LDR X9, [X8 + 0x20]
	0x02B41028 LDR W22, [X9 + 0xFC]
	0x02B4102C ADD X9, X31, 0x0
	0x02B41030 ADD X10, X22, 0xF
	0x02B41034 AND X10, X10, 0x1FFFFFFFF
	0x02B41038 SUB X23, X9, X10
	0x02B4103C ADD X31, X23, 0x0
	0x02B41040 LDR X1, [X8 + 0x30]
	0x02B41044 LDR X8, [X1]
	0x02B41048 BLR X8
	0x02B4104C CBZ X20, 0x2B411E0
	0x02B41050 LDR X8, [X19 + 0x20]
	0x02B41054 MOV W24, W0
	0x02B41058 MOV X0, X20
	0x02B4105C LDR X8, [X8 + 0xC0]
	0x02B41060 LDR X1, [X8 + 0x30]
	0x02B41064 LDR X8, [X1]
	0x02B41068 BLR X8
	0x02B4106C LDR X8, [X19 + 0x20]
	0x02B41070 ADD W1, W0, W24
	0x02B41074 MOVZ W2, 0x1
	0x02B41078 MOV X0, X21
	0x02B4107C LDR X8, [X8 + 0xC0]
	0x02B41080 LDR X3, [X8 + 0x48]
	0x02B41084 LDR X8, [X3]
	0x02B41088 BLR X8
	0x02B4108C LDR X8, [X19 + 0x20]
	0x02B41090 MOV X0, X20
	0x02B41094 LDR X8, [X8 + 0xC0]
	0x02B41098 LDR X1, [X8 + 0x30]
	0x02B4109C LDR X8, [X1]
	0x02B410A0 BLR X8
	0x02B410A4 CMP W0, 0x1
	0x02B410A8 B.LT 0x2B41194
	0x02B410AC MOV W24, W31
	0x02B410B0 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W19, W2
	009 NotImplemented "Instruction SBFM not yet implemented."
	010 Move X20, X0
	011 Move X21, X1
	012 Add X22, X8, 32
	013 Move X8, [X20+16]
	014 Compare X8, 0
	015 JumpIfEqual {44}
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, [X8]
	019 Compare X0, 0
	020 JumpIfEqual {44}
	021 Move X8, [X0]
	022 Move X1, X21
	023 Move X9, [X8+312]
	024 Move X2, [X8+320]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {37}
	030 Move W8, [X20+24]
	031 Add W19, W19, 1
	032 Add X22, X22, 8
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W19, TEMP
	037 Move W0, W19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20
	045 Call 0x1C17F28

Method: System.Int32 IndexOf(T item)

Disassembly:
	0x02B410B4 LDR X27, [X21 + 0x10]
	0x02B410B8 MOV X0, X21
	0x02B410BC LDR X8, [X8 + 0xC0]
	0x02B410C0 LDR X1, [X8 + 0x30]
	0x02B410C4 LDR X8, [X1]

ISIL:
	001 Move X8, [X2+32]
	002 Move W2, W31
	003 Move X8, [X8+192]
	004 Move X3, [X8+120]
	005 Call 0x2B41024, X0, X1, X2
	006 Return X0

Method: System.Void Resize(System.Int32 newSize, System.Boolean keepContent = False)

Disassembly:
	0x02B410C8 BLR X8
	0x02B410CC LDR X8, [X19 + 0x20]
	0x02B410D0 MOV W25, W0
	0x02B410D4 ADD W1, W0, 0x1
	0x02B410D8 MOV X0, X21
	0x02B410DC LDR X8, [X8 + 0xC0]
	0x02B410E0 LDR X2, [X8 + 0x18]
	0x02B410E4 LDR X8, [X2]
	0x02B410E8 BLR X8
	0x02B410EC LDR X8, [X19 + 0x20]
	0x02B410F0 MOV X0, X20
	0x02B410F4 MOV W1, W24
	0x02B410F8 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X3+32]
	005 And W2, W2, 1
	006 Move W19, W1
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X3, [X8+72]
	010 Call 0x2B410FC, X0, X1, X2
	011 Move [X20+24], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void Reserve(System.Int32 newCapacity, System.Boolean keepContent = False)

Disassembly:
	0x02B410FC LDR X2, [X8 + 0x50]
	0x02B41100 LDR X8, [X2]
	0x02B41104 BLR X8
	0x02B41108 MOV X1, X0
	0x02B4110C MOV X0, X23
	0x02B41110 MOV X2, X22
	0x02B41114 BL 0x3EB1AC0
	0x02B41118 CBZ X27, 0x2B411E0
	0x02B4111C LDR W8, [X27 + 0x18]
	0x02B41120 CMP W25, W8
	0x02B41124 B.CS 0x2B411DC
	0x02B41128 LDR X8, [X27]
	0x02B4112C SXTW X9, W25
	0x02B41130 MOV X1, X23
	0x02B41134 MOV X2, X22
	0x02B41138 LDR W8, [X8 + 0x104]
	0x02B4113C NOP
	0x02B41140 MADD X8, X8, X9, X27
	0x02B41144 ADD X0, X8, 0x20
	0x02B41148 BL 0x3EB1AC0
	0x02B4114C LDR X8, [X19 + 0x20]
	0x02B41150 LDR X8, [X8 + 0xC0]
	0x02B41154 LDR X0, [X8 + 0x20]
	0x02B41158 LDRB W8, [X0 + 0x135]
	0x02B4115C TBNZ X8, 0x0, 0x2B41164
	0x02B41160 BL 0x1C5C684
	0x02B41164 LDR W8, [X27 + 0x18]
	0x02B41168 CMP W25, W8
	0x02B4116C B.CS 0x2B411DC
	0x02B41170 LDR X8, [X19 + 0x20]
	0x02B41174 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+16]
	006 Compare X8, 0
	007 JumpIfEqual {42}
	008 Move W8, [X8+24]
	009 Move W21, W1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X8, [X3+32]
	012 Move X19, X0
	013 Move W20, W2
	014 Move X8, [X8+192]
	015 Move X0, [X8+16]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W1, W21
	023 Call 0x1C17D6C
	024 Move X21, X0
	025 Move TEMP, X20
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {36}
	029 Move X0, [X19+16]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move W2, [X0+24]
	033 Move X1, X21
	034 Move X3, X31
	035 Call Array.Copy, X0, X1, X2
	036 Move [X19+16], X21
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: T get_Item(System.Int32 index)

Disassembly:
	0x02B41178 ADD W24, W24, 0x1
	0x02B4117C LDR X8, [X8 + 0xC0]
	0x02B41180 LDR X1, [X8 + 0x30]
	0x02B41184 LDR X8, [X1]
	0x02B41188 BLR X8
	0x02B4118C CMP W24, W0
	0x02B41190 B.LT 0x2B410B0
	0x02B41194 LDR X8, [X19 + 0x20]
	0x02B41198 MOV X0, X21
	0x02B4119C LDR X8, [X8 + 0xC0]
	0x02B411A0 LDR X1, [X8 + 0x40]
	0x02B411A4 LDR X8, [X1]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Add X0, X8, 32
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: T[] op_Implicit(UnityEngine.Rendering.DynamicArray`1<T> array)

Disassembly:
	0x02B411A8 BLR X8
	0x02B411AC LDR X8, [X26 + 0x28]
	0x02B411B0 LDUR X9, [X29 - 0x8]
	0x02B411B4 CMP X8, X9
	0x02B411B8 B.NE 0x2B411E4
	0x02B411BC ADD X31, X29, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X0, [X0+16]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: UnityEngine.Rendering.DynamicArray`1/Iterator<T> GetEnumerator()

Disassembly:
	0x02B411C0 LDP X20, X19, [X31 + 0x50]
	0x02B411C4 LDP X22, X21, [X31 + 0x40]
	0x02B411C8 LDP X24, X23, [X31 + 0x30]
	0x02B411CC LDP X26, X25, [X31 + 0x20]
	0x02B411D0 LDR X27, [X31 + 0x10]
	0x02B411D4 LDP X29, X30, [X31], #0x60
	0x02B411D8 RET
	0x02B411DC BL 0x1C16F28
	0x02B411E0 BL 0x1C16F20
	0x02B411E4 BL 0x3EB1B20
	0x02B411E8 STP X29, X30, [X31 - 0x40]!
	0x02B411EC STR X23, [X31 + 0x10]
	0x02B411F0 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31], X31
	005 Move X8, [X1+32]
	006 Move X1, X0
	007 Add X0, X31, 0
	008 Move X8, [X8+192]
	009 Move X2, [X8+136]
	010 Call 0x2EA3380, X0, X1
	011 Move X0, [X31]
	012 Move X1, [X31+8]
	013 Move X30, [X31+16]
	014 Add X31, X31, 32
	015 Return X0

Method: UnityEngine.Rendering.DynamicArray`1/RangeEnumerable<T> SubRange(System.Int32 first, System.Int32 numItems)

Disassembly:
	0x02B411F4 STP X20, X19, [X31 + 0x30]
	0x02B411F8 ADD X29, X31, 0x0
	0x02B411FC SUB X31, X31, 0x20
	0x02B41200 MRS X22, 0xC000
	0x02B41204 LDR X8, [X22 + 0x28]
	0x02B41208 MOV X19, X2
	0x02B4120C ADD X9, X31, 0x0
	0x02B41210 MOV X20, X0
	0x02B41214 STUR X8, [X29 - 0x8]
	0x02B41218 STUR X1, [X29 - 0x20]
	0x02B4121C LDR X23, [X2 + 0x20]
	0x02B41220 LDR X8, [X23 + 0xC0]
	0x02B41224 LDR X8, [X8 + 0x20]
	0x02B41228 LDR W2, [X8 + 0xFC]
	0x02B4122C ADD X10, X2, 0xF
	0x02B41230 AND X10, X10, 0x1FFFFFFFF
	0x02B41234 SUB X21, X9, X10
	0x02B41238 ADD X31, X21, 0x0
	0x02B4123C LDR W8, [X8 + 0x28]
	0x02B41240 MOV X0, X21
	0x02B41244 CMP W8, 0x0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+8], X31
	005 Move [X31+16], X31
	006 Move [X31+24], X31
	007 Move X10, [X3+32]
	008 Move W9, W2
	009 Move W2, W1
	010 Move X1, X0
	011 Move X10, [X10+192]
	012 Add X0, X31, 8
	013 Move W3, W9
	014 Move X19, X8
	015 Move X4, [X10+160]
	016 Call 0x24F4FCC, X0, X1, X2, X3
	017 Move X8, [X31+24]
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move [X19+16], X8
	020 Move [X19], V0
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Add X31, X31, 48
	024 Return X0

Method: System.Void BumpVersion()

Disassembly:
	0x02B41248 SUB X8, X29, 0x20

ISIL:
	001 Return 

