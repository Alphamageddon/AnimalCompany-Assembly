Type: UnityEngine.Rendering.FrameTimeSampleHistory

Method: System.Void .ctor(System.Int32 initialCapacity)

Disassembly:
	0x039B1F84 STP X20, X19, [X31 + 0x50]
	0x039B1F88 ADRP X24, 0xA30000
	0x039B1F8C ADRP X23, 0x7A0000
	0x039B1F90 ADRP X20, 0x7A0000
	0x039B1F94 ADRP X22, 0x7A0000
	0x039B1F98 ADRP X29, 0x7A0000
	0x039B1F9C ADRP X21, 0x742000
	0x039B1FA0 LDRB W8, [X24 + 0xC46]
	0x039B1FA4 LDR X23, [X23 + 0xE40]
	0x039B1FA8 LDR X20, [X20 + 0xE48]
	0x039B1FAC LDR X22, [X22 + 0xE50]
	0x039B1FB0 LDR X29, [X29 + 0xE58]
	0x039B1FB4 LDR X21, [X21 + 0x988]
	0x039B1FB8 MOV X19, X0
	0x039B1FBC TBNZ X8, 0x0, 0x39B2058
	0x039B1FC0 ADRP X0, 0x743000
	0x039B1FC4 LDR X0, [X0 + 0xE68]
	0x039B1FC8 BL 0x1C16CF4
	0x039B1FCC ADRP X0, 0x7A0000
	0x039B1FD0 LDR X0, [X0 + 0xE60]
	0x039B1FD4 BL 0x1C16CF4
	0x039B1FD8 ADRP X0, 0x7A0000
	0x039B1FDC LDR X0, [X0 + 0xE68]
	0x039B1FE0 BL 0x1C16CF4
	0x039B1FE4 ADRP X0, 0x7A0000
	0x039B1FE8 LDR X0, [X0 + 0xE70]
	0x039B1FEC BL 0x1C16CF4
	0x039B1FF0 ADRP X0, 0x7A0000
	0x039B1FF4 LDR X0, [X0 + 0xE78]
	0x039B1FF8 BL 0x1C16CF4
	0x039B1FFC ADRP X0, 0x7A0000
	0x039B2000 LDR X0, [X0 + 0xE58]
	0x039B2004 BL 0x1C16CF4
	0x039B2008 ADRP X0, 0x79F000
	0x039B200C LDR X0, [X0 + 0xE48]
	0x039B2010 BL 0x1C16CF4
	0x039B2014 ADRP X0, 0x79F000
	0x039B2018 LDR X0, [X0 + 0xE50]
	0x039B201C BL 0x1C16CF4
	0x039B2020 ADRP X0, 0x79F000
	0x039B2024 LDR X0, [X0 + 0xE40]
	0x039B2028 BL 0x1C16CF4
	0x039B202C ADRP X0, 0x79F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA31000
	008 Move X23, 0x7A1000
	009 Move X21, 0x7A1000
	010 Move W8, [X22+3130]
	011 Move X23, [X23+3504]
	012 Move X21, [X21+3512]
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x7A1000
	020 Move X0, [X0+3512]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A1000
	023 Move X0, [X0+3520]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A1000
	026 Move X0, [X0+3504]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3130], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X1, [X21]
	033 Move X21, X0
	034 Call List`1<FrameTimeSample>..ctor, X0
	035 Move X0, X20
	036 Move X1, X31
	037 Move [X20+16], X21
	038 Call Object..ctor, X0
	039 Move X0, [X20+16]
	040 Compare X0, 0
	041 JumpIfEqual {54}
	042 Move X8, 0x7A0000
	043 Move X8, [X8+3520]
	044 Move W1, W19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X2, [X8]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call List`1<FrameTimeSample>.set_Capacity, X0, X1
	053 Return 
	054 Call 0x1C17F20

Method: System.Void Add(UnityEngine.Rendering.FrameTimeSample sample)

Disassembly:
	0x039B2030 LDR X0, [X0 + 0xE80]
	0x039B2034 BL 0x1C16CF4
	0x039B2038 ADRP X0, 0x79F000
	0x039B203C LDR X0, [X0 + 0xE88]
	0x039B2040 BL 0x1C16CF4
	0x039B2044 ADRP X0, 0x741000
	0x039B2048 LDR X0, [X0 + 0x988]
	0x039B204C BL 0x1C16CF4
	0x039B2050 MOVZ W8, 0x1
	0x039B2054 STRB W8, [X24 + 0xC46]
	0x039B2058 ADRP X24, 0x79F000
	0x039B205C ADRP X26, 0x79F000
	0x039B2060 ADRP X28, 0x79F000
	0x039B2064 ADRP X27, 0x79F000
	0x039B2068 LDR X24, [X24 + 0xE68]
	0x039B206C LDR X26, [X26 + 0xE78]
	0x039B2070 LDR X28, [X28 + 0xE70]
	0x039B2074 LDR X27, [X27 + 0xE60]
	0x039B2078 LDR X0, [X23]
	0x039B207C ADRP X25, 0x79F000
	0x039B2080 ADRP X23, 0x742000
	0x039B2084 LDR X25, [X25 + 0xE80]
	0x039B2088 LDR X23, [X23 + 0xE68]
	0x039B208C BL 0x1C16F10
	0x039B2090 LDR X1, [X20]
	0x039B2094 MOV X20, X0
	0x039B2098 BL 0x301B7C4
	0x039B209C STR X20, [X19 + 0x10]
	0x039B20A0 LDR X0, [X22]
	0x039B20A4 BL 0x1C16F10
	0x039B20A8 LDR X1, [X29]
	0x039B20AC MOV X20, X0
	0x039B20B0 BL 0x2F58970
	0x039B20B4 STR X20, [X19 + 0x18]
	0x039B20B8 LDR X8, [X21]
	0x039B20BC MOV X0, X19
	0x039B20C0 MOV X1, X31
	0x039B20C4 STR X8, [X19 + 0x30]
	0x039B20C8 BL 0x33BDD8C
	0x039B20CC MOVZ W29, 0x4
	0x039B20D0 LDR X0, [X24]
	0x039B20D4 LDR X20, [X19 + 0x10]
	0x039B20D8 BL 0x1C16F10
	0x039B20DC MOVZ W1, 0x10
	0x039B20E0 MOVZ W2, 0x4000
	0x039B20E4 MOVZ W3, 0x4
	0x039B20E8 MOV X4, X31
	0x039B20EC MOV X21, X0
	0x039B20F0 BL 0x3C16244
	0x039B20F4 CBZ X20, 0x39B2214
	0x039B20F8 LDR W10, [X20 + 0x1C]
	0x039B20FC LDR X8, [X20 + 0x10]
	0x039B2100 LDR X9, [X26]
	0x039B2104 ADD W10, W10, 0x1
	0x039B2108 STR W10, [X20 + 0x1C]
	0x039B210C CBZ X8, 0x39B2214
	0x039B2110 LDRSW X10, [X20 + 0x18]
	0x039B2114 LDR W11, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0xA30000
	007 Move W8, [X21+3131]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x7A0000
	015 Move X0, [X0+3528]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3131], W8
	019 Move X0, [X20+16]
	020 Move X8, [X19+16]
	021 Move V0, [X19]
	022 Move [X31+16], X8
	023 Move [X31], V0
	024 Compare X0, 0
	025 JumpIfEqual {65}
	026 Move V0, [X31]
	027 Move X8, [X31+16]
	028 Move X9, 0x7A0000
	029 Move X9, [X9+3528]
	030 Move [X31+2], V0
	031 Move [X31+48], X8
	032 Move W11, [X0+28]
	033 Move X8, [X0+16]
	034 Move X10, [X9]
	035 Add W9, W11, 1
	036 Move [X0+28], W9
	037 Compare X8, 0
	038 JumpIfEqual {65}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W11, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add W10, W9, 1
	043 Move [X0+24], W10
	044 Move X10, [X31+48]
	045 Move V0, [X31+2]
	046 Move W11, 24
	047 NotImplemented "Instruction MADD not yet implemented."
	048 Move [X8+48], X10
	049 Move [X8+2], V0
	050 Move X8, [X10+32]
	051 Move V0, [X31+2]
	052 Move X9, [X31+48]
	053 Add X1, X31, 64
	054 Move X8, [X8+192]
	055 Move X2, [X8+112]
	056 Move [X31+4], V0
	057 Move [X31+80], X9
	058 Call List`1<FrameTimeSample>.AddWithResize, X0, X1
	059 Move X20, [X31+112]
	060 Move X19, [X31+120]
	061 Move X30, [X31+96]
	062 Move X21, [X31+104]
	063 Add X31, X31, 128
	064 Return 
	065 Call 0x1C17F20

Method: System.Void ComputeAggregateValues()

Disassembly:
	0x039B2118 CMP W10, W11
	0x039B211C B.CS 0x39B2134
	0x039B2120 ADD W9, W10, 0x1
	0x039B2124 ADD X8, X8, X10, 0x3, LSL
	0x039B2128 STR W9, [X20 + 0x18]
	0x039B212C STR X21, [X8 + 0x20]
	0x039B2130 B 0x39B214C
	0x039B2134 LDR X8, [X9 + 0x20]
	0x039B2138 MOV X0, X20
	0x039B213C MOV X1, X21
	0x039B2140 LDR X8, [X8 + 0xC0]
	0x039B2144 LDR X2, [X8 + 0x70]
	0x039B2148 BL 0x301BF90
	0x039B214C LDR X0, [X19 + 0x18]
	0x039B2150 CBZ X0, 0x39B2214
	0x039B2154 LDR W10, [X0 + 0x1C]
	0x039B2158 LDR X8, [X0 + 0x10]
	0x039B215C LDR X9, [X28]
	0x039B2160 ADD W10, W10, 0x1
	0x039B2164 STR W10, [X0 + 0x1C]
	0x039B2168 CBZ X8, 0x39B2214
	0x039B216C LDRSW X10, [X0 + 0x18]
	0x039B2170 LDR W11, [X8 + 0x18]
	0x039B2174 CMP W10, W11
	0x039B2178 B.CS 0x39B2190
	0x039B217C ADD W9, W10, 0x1
	0x039B2180 ADD X8, X8, X10, 0x4, LSL
	0x039B2184 STR W9, [X0 + 0x18]
	0x039B2188 STP X31, X31, [X8 + 0x20]
	0x039B218C B 0x39B21A8
	0x039B2190 LDR X8, [X9 + 0x20]
	0x039B2194 MOV X1, X31
	0x039B2198 MOV X2, X31
	0x039B219C LDR X8, [X8 + 0xC0]
	0x039B21A0 LDR X3, [X8 + 0x70]
	0x039B21A4 BL 0x2F5917C
	0x039B21A8 SUBS W29, W29, 0x1
	0x039B21AC B.NE 0x39B20D0
	0x039B21B0 LDR X0, [X27]
	0x039B21B4 BL 0x1C16F10
	0x039B21B8 LDR X2, [X25]
	0x039B21BC MOV X1, X19
	0x039B21C0 MOV X3, X31
	0x039B21C4 MOV X20, X0
	0x039B21C8 BL 0x29814C8
	0x039B21CC STR X20, [X19 + 0x20]
	0x039B21D0 LDR X0, [X23]
	0x039B21D4 BL 0x1C16F10
	0x039B21D8 ADRP X8, 0x79F000
	0x039B21DC LDR X8, [X8 + 0xE88]
	0x039B21E0 MOV X1, X19
	0x039B21E4 MOV X3, X31
	0x039B21E8 MOV X20, X0
	0x039B21EC LDR X2, [X8]
	0x039B21F0 BL 0x2A6B948
	0x039B21F4 STR X20, [X19 + 0x38]
	0x039B21F8 LDP X20, X19, [X31 + 0x50]
	0x039B21FC LDP X22, X21, [X31 + 0x40]
	0x039B2200 LDP X24, X23, [X31 + 0x30]
	0x039B2204 LDP X26, X25, [X31 + 0x20]
	0x039B2208 LDP X28, X27, [X31 + 0x10]
	0x039B220C LDP X29, X30, [X31], #0x60
	0x039B2210 RET
	0x039B2214 BL 0x1C16F20
	0x039B2218 STR X30, [X31 - 0x20]!
	0x039B221C STP X20, X19, [X31 + 0x10]
	0x039B2220 ADRP X20, 0xA2F000
	0x039B2224 ADRP X19, 0x79F000
	0x039B2228 LDRB W8, [X20 + 0xC47]
	0x039B222C LDR X19, [X19 + 0xE90]
	0x039B2230 TBNZ X8, 0x0, 0x39B2248
	0x039B2234 ADRP X0, 0x79F000
	0x039B2238 LDR X0, [X0 + 0xE90]
	0x039B223C BL 0x1C16CF4
	0x039B2240 MOVZ W8, 0x1
	0x039B2244 STRB W8, [X20 + 0xC47]
	0x039B2248 LDR X0, [X19]
	0x039B224C LDR W8, [X0 + 0xE0]
	0x039B2250 CBNZ W8, 0x39B225C
	0x039B2254 BL 0x1C16DFC
	0x039B2258 LDR X0, [X19]
	0x039B225C LDR X8, [X0 + 0xB8]
	0x039B2260 LDP X20, X19, [X31 + 0x10]
	0x039B2264 LDR X0, [X8]
	0x039B2268 LDR X30, [X31], #0x20
	0x039B226C RET
	0x039B2270 STR X30, [X31 - 0x40]!
	0x039B2274 STP X24, X23, [X31 + 0x10]
	0x039B2278 STP X22, X21, [X31 + 0x20]
	0x039B227C STP X20, X19, [X31 + 0x30]
	0x039B2280 ADRP X24, 0xA2F000
	0x039B2284 ADRP X23, 0x79F000
	0x039B2288 LDRB W8, [X24 + 0xC48]
	0x039B228C LDR X23, [X23 + 0xE90]
	0x039B2290 MOV X21, X3
	0x039B2294 MOV X22, X2
	0x039B2298 MOV X19, X1
	0x039B229C MOV X20, X0
	0x039B22A0 TBNZ X8, 0x0, 0x39B22B8
	0x039B22A4 ADRP X0, 0x79F000
	0x039B22A8 LDR X0, [X0 + 0xE90]
	0x039B22AC BL 0x1C16CF4
	0x039B22B0 MOVZ W8, 0x1
	0x039B22B4 STRB W8, [X24 + 0xC48]
	0x039B22B8 LDR X0, [X23]
	0x039B22BC LDR W8, [X0 + 0xE0]
	0x039B22C0 CBNZ W8, 0x39B22C8
	0x039B22C4 BL 0x1C16DFC
	0x039B22C8 CBZ X19, 0x39B2334
	0x039B22CC LDR X8, [X23]
	0x039B22D0 ANDS X31, X21, 0xFFFF
	0x039B22D4 FMOV S2, 1
	0x039B22D8 FMOV S4, W31
	0x039B22DC LDR X8, [X8 + 0xB8]
	0x039B22E0 UBFM X9, X22, 0x20, 0x3F
	0x039B22E4 FCSEL S3, S4, S2, EQ
	0x039B22E8 ANDS W31, W21, 0xFF
	0x039B22EC LDR W1, [X8 + 0x8]
	0x039B22F0 FMOV S1, W9
	0x039B22F4 FMOV S0, W22
	0x039B22F8 FCSEL S2, S4, S2, EQ
	0x039B22FC MOV X0, X19
	0x039B2300 MOV X2, X31
	0x039B2304 BL 0x3C4CED8
	0x039B2308 LDR X8, [X23]
	0x039B230C LDR W2, [X20 + 0x28]
	0x039B2310 MOV X0, X19
	0x039B2314 LDP X20, X19, [X31 + 0x30]
	0x039B2318 LDR X8, [X8 + 0xB8]
	0x039B231C LDP X22, X21, [X31 + 0x20]
	0x039B2320 LDP X24, X23, [X31 + 0x10]
	0x039B2324 MOV X3, X31
	0x039B2328 LDR W1, [X8 + 0xC]
	0x039B232C LDR X30, [X31], #0x40
	0x039B2330 B 0x3C4CE30
	0x039B2334 BL 0x1C16F20
	0x039B2338 SUB X31, X31, 0x40
	0x039B233C STR X30, [X31 + 0x10]
	0x039B2340 STP X22, X21, [X31 + 0x20]
	0x039B2344 STP X20, X19, [X31 + 0x30]
	0x039B2348 ADRP X21, 0xA2F000
	0x039B234C LDRB W8, [X21 + 0xC49]
	0x039B2350 MOV X20, X1
	0x039B2354 MOV X19, X0
	0x039B2358 TBNZ X8, 0x0, 0x39B237C
	0x039B235C ADRP X0, 0x79F000
	0x039B2360 LDR X0, [X0 + 0xE98]
	0x039B2364 BL 0x1C16CF4
	0x039B2368 ADRP X0, 0x79F000
	0x039B236C LDR X0, [X0 + 0xEA0]
	0x039B2370 BL 0x1C16CF4
	0x039B2374 MOVZ W8, 0x1
	0x039B2378 STRB W8, [X21 + 0xC49]
	0x039B237C LDR W8, [X19 + 0x28]
	0x039B2380 LDR X0, [X19 + 0x18]
	0x039B2384 ADD W9, W8, 0x3
	0x039B2388 CMP W8, 0x0

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X23
	005 Move [X31+416], X22
	006 Move [X31+424], X21
	007 Move [X31+432], X20
	008 Move [X31+440], X19
	009 Move X20, 0xA30000
	010 Move W8, [X20+3132]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x7A0000
	017 Move X0, [X0+1952]
	018 Call 0x1C17CF4
	019 Move X0, 0x7A0000
	020 Move X0, [X0+3536]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A0000
	023 Move X0, [X0+3544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3132], W8
	027 NotImplemented "Instruction MVNI not yet implemented."
	028 Move TEMP, 0x80800000
	029 Not TEMP
	030 Move W8, TEMP
	031 Move [X31+19], V0
	032 NotImplemented "Instruction MVNI not yet implemented."
	033 Move [X31+320], D0
	034 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	035 Move [X31+21], V0
	036 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	037 Move [X31+368], X31
	038 Move [X31+376], X31
	039 Move [X31+360], X31
	040 Move [X31+288], X31
	041 Move [X31+296], X31
	042 Move [X31+352], D0
	043 Move [X31+280], X31
	044 Move X0, [X19+16]
	045 Compare X0, 0
	046 JumpIfEqual {114}
	047 Move X23, 0x7A0000
	048 Move X22, 0x7A0000
	049 Move X23, [X23+3544]
	050 Move X22, [X22+1952]
	051 Move W20, W31
	052 Add X21, X31, 280
	053 Move W8, [X0+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X2, [X23]
	056 Add X8, X31, 224
	057 Move W1, W20
	058 Call List`1<FrameTimeSample>.get_Item, X0, X1
	059 Move X8, [X31+240]
	060 Move V0, [X31+14]
	061 Move X0, [X22]
	062 Move [X31+272], X8
	063 Move [X31+16], V0
	064 Move [X31+14], V0
	065 Move [X31+240], X8
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X22]
	071 Move X8, [X0+184]
	072 Move V0, [X31+14]
	073 Move X9, [X31+240]
	074 Add X0, X31, 336
	075 Move X2, [X8+8]
	076 Add X1, X31, 192
	077 Move [X31+12], V0
	078 Move [X31+208], X9
	079 Call FrameTimeSampleHistory.<ComputeAggregateValues>g__ForEachSampleMember|12_0, X0, X1, X2
	080 Move V0, [X31+16]
	081 Move X8, [X31+272]
	082 Move X9, [X22]
	083 Add X0, X31, 304
	084 Move [X31+10], V0
	085 Move [X31+176], X8
	086 Move X8, [X9+184]
	087 Add X1, X31, 160
	088 Move X2, [X8+16]
	089 Call FrameTimeSampleHistory.<ComputeAggregateValues>g__ForEachSampleMember|12_0, X0, X1, X2
	090 Move V0, [X31+16]
	091 Move X8, [X31+272]
	092 Move X9, [X22]
	093 Add X0, X31, 360
	094 Move [X31+8], V0
	095 Move [X31+144], X8
	096 Move X8, [X9+184]
	097 Add X1, X31, 128
	098 Move X2, [X8]
	099 Call FrameTimeSampleHistory.<ComputeAggregateValues>g__ForEachSampleMember|12_0, X0, X1, X2
	100 Move V0, [X31+16]
	101 Move X8, [X31+272]
	102 Move X9, [X22]
	103 Add X0, X31, 280
	104 Move [X31+6], V0
	105 Move [X31+112], X8
	106 Move X8, [X9+184]
	107 Add X1, X31, 96
	108 Move X2, [X8+24]
	109 Call FrameTimeSampleHistory.<ComputeAggregateValues>g__ForEachSampleMember|12_0, X0, X1, X2
	110 Move X0, [X19+16]
	111 Add W20, W20, 1
	112 Compare X0, 0
	113 JumpIfNotEqual {53}
	114 Call 0x1C17F20
	115 Move V0, [X21]
	116 Move X8, [X31+296]
	117 Move X0, [X22]
	118 Move [X31+14], V0
	119 Move [X31+240], X8
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X22]
	125 Move X8, [X0+184]
	126 Move V0, [X31+14]
	127 Move X9, [X31+240]
	128 Add X0, X31, 336
	129 Move X2, [X8+32]
	130 Add X1, X31, 64
	131 Move [X31+4], V0
	132 Move [X31+80], X9
	133 Call FrameTimeSampleHistory.<ComputeAggregateValues>g__ForEachSampleMember|12_0, X0, X1, X2
	134 Move V0, [X21]
	135 Move X8, [X31+296]
	136 Move X9, [X22]
	137 Add X0, X31, 304
	138 Move [X31+2], V0
	139 Move [X31+48], X8
	140 Move X8, [X9+184]
	141 Add X1, X31, 32
	142 Move X2, [X8+32]
	143 Call FrameTimeSampleHistory.<ComputeAggregateValues>g__ForEachSampleMember|12_0, X0, X1, X2
	144 Move V0, [X21]
	145 Move X8, [X31+296]
	146 Move X9, [X22]
	147 Add X0, X31, 360
	148 Move [X31], V0
	149 Move [X31+16], X8
	150 Move X8, [X9+184]
	151 Add X1, X31, 0
	152 Move X2, [X8+40]
	153 Call FrameTimeSampleHistory.<ComputeAggregateValues>g__ForEachSampleMember|12_0, X0, X1, X2
	154 Move X8, [X31+376]
	155 Move X29, [X31+384]
	156 Move V0, [X21+5]
	157 Move X22, [X31+416]
	158 Move X21, [X31+424]
	159 Move X30, [X31+400]
	160 Move X23, [X31+408]
	161 Move [X19+40], X8
	162 Move [X19+24], V0
	163 Move X8, [X31+352]
	164 Move V0, [X31+21]
	165 Move [X19+64], X8
	166 Move [X19+3], V0
	167 Move X8, [X31+320]
	168 Move V0, [X31+19]
	169 Move [X19+88], X8
	170 Move [X19+72], V0
	171 Move X20, [X31+432]
	172 Move X19, [X31+440]
	173 Add X31, X31, 448
	174 Return 

Method: System.Void DiscardOldSamples(System.Int32 sampleHistorySize)

Disassembly:
	0x039B245C LDR X0, [X0 + 0xEA8]
	0x039B2460 BL 0x1C16CF4
	0x039B2464 ADRP X0, 0x79F000
	0x039B2468 LDR X0, [X0 + 0xE98]
	0x039B246C BL 0x1C16CF4
	0x039B2470 ADRP X0, 0x79F000
	0x039B2474 LDR X0, [X0 + 0xEB0]
	0x039B2478 BL 0x1C16CF4
	0x039B247C MOVZ W8, 0x1
	0x039B2480 STRB W8, [X20 + 0xC4A]
	0x039B2484 STP X31, X31, [X31]
	0x039B2488 LDRB W8, [X19 + 0x2C]
	0x039B248C CBNZ W8, 0x39B2514
	0x039B2490 ADRP X8, 0x79F000
	0x039B2494 LDR W20, [X19 + 0x28]
	0x039B2498 LDR X8, [X8 + 0xEB0]
	0x039B249C ADD X0, X31, 0x0
	0x039B24A0 MOVZ W1, 0x1
	0x039B24A4 MOVZ W2, 0x2
	0x039B24A8 LDR X4, [X8]
	0x039B24AC MOVZ W3, 0x1
	0x039B24B0 BL 0x23EC700
	0x039B24B4 LDR X8, [X31]
	0x039B24B8 STR W31, [X8]
	0x039B24BC LDR X0, [X19 + 0x10]
	0x039B24C0 CBZ X0, 0x39B2524
	0x039B24C4 ADRP X9, 0x79F000
	0x039B24C8 LDR X9, [X9 + 0xE98]
	0x039B24CC ADD W8, W20, 0x3
	0x039B24D0 CMP W20, 0x0
	0x039B24D4 CSEL W8, W8, W20, LT
	0x039B24D8 LDR X2, [X9]
	0x039B24DC AND W8, W8, 0xFFFFFFFC
	0x039B24E0 SUB W1, W20, W8
	0x039B24E4 BL 0x301BCCC
	0x039B24E8 CBZ X0, 0x39B2524
	0x039B24EC ADRP X8, 0x79F000
	0x039B24F0 LDP X1, X2, [X31]
	0x039B24F4 LDR X8, [X8 + 0xEA8]
	0x039B24F8 MOVZ W5, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA30000
	007 Move W8, [X21+3133]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x7A0000
	015 Move X0, [X0+3552]
	016 Call 0x1C17CF4
	017 Move X0, 0x7A0000
	018 Move X0, [X0+3536]
	019 Call 0x1C17CF4
	020 Move X0, 0x7A0000
	021 Move X0, [X0+3520]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3133], W8
	025 Move X0, [X20+16]
	026 Compare X0, 0
	027 JumpIfEqual {40}
	028 Move X21, 0x7A0000
	029 Move X22, 0x7A0000
	030 Move X21, [X21+3520]
	031 Move X22, [X22+3552]
	032 Move W8, [X0+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X2, [X22]
	035 Move W1, W31
	036 Call List`1<FrameTimeSample>.RemoveAt, X0, X1
	037 Move X0, [X20+16]
	038 Compare X0, 0
	039 JumpIfNotEqual {32}
	040 Call 0x1C17F20
	041 Move X2, [X21]
	042 Move W1, W19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call List`1<FrameTimeSample>.set_Capacity, X0, X1
	049 Return 

Method: System.Void Clear()

Disassembly:
	0x039B24FC MOV W3, W31
	0x039B2500 MOV W4, W31
	0x039B2504 LDR X6, [X8]
	0x039B2508 MOVZ W20, 0x1
	0x039B250C BL 0x21E7C54
	0x039B2510 STRB W20, [X19 + 0x2C]
	0x039B2514 LDP X20, X19, [X31 + 0x20]
	0x039B2518 LDR X30, [X31 + 0x10]
	0x039B251C ADD X31, X31, 0x30
	0x039B2520 RET
	0x039B2524 BL 0x1C16F20
	0x039B2528 SUB X31, X31, 0xA0
	0x039B252C STP X29, X30, [X31 + 0x40]
	0x039B2530 STP X28, X27, [X31 + 0x50]
	0x039B2534 STP X26, X25, [X31 + 0x60]
	0x039B2538 STP X24, X23, [X31 + 0x70]
	0x039B253C STP X22, X21, [X31 + 0x80]
	0x039B2540 STP X20, X19, [X31 + 0x90]
	0x039B2544 ADRP X20, 0xA2F000
	0x039B2548 STP X1, X2, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA30000
	005 Move W8, [X20+3134]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7A0000
	012 Move X0, [X0+3560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3134], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move W9, [X8+28]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Add W9, W9, 1
	023 Move [X8+24], W31
	024 Move [X8+28], W9
	025 Move X30, [X31+32]
	026 Return 
	027 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039B254C ADRP X19, 0x79F000
	0x039B2550 LDRB W8, [X20 + 0xC4B]
	0x039B2554 LDR X19, [X19 + 0xEB8]
	0x039B2558 MOV X23, X0
	0x039B255C TBNZ X8, 0x0, 0x39B26B8
	0x039B2560 ADRP X0, 0x79F000
	0x039B2564 LDR X0, [X0 + 0xEC0]
	0x039B2568 BL 0x1C16CF4
	0x039B256C ADRP X0, 0x743000
	0x039B2570 LDR X0, [X0 + 0x170]
	0x039B2574 BL 0x1C16CF4
	0x039B2578 ADRP X0, 0x741000
	0x039B257C LDR X0, [X0 + 0xA28]
	0x039B2580 BL 0x1C16CF4
	0x039B2584 ADRP X0, 0x741000
	0x039B2588 LDR X0, [X0 + 0x758]
	0x039B258C BL 0x1C16CF4
	0x039B2590 ADRP X0, 0x79F000
	0x039B2594 LDR X0, [X0 + 0x298]
	0x039B2598 BL 0x1C16CF4
	0x039B259C ADRP X0, 0x741000
	0x039B25A0 LDR X0, [X0 + 0x9D0]
	0x039B25A4 BL 0x1C16CF4
	0x039B25A8 ADRP X0, 0x79F000
	0x039B25AC LDR X0, [X0 + 0xEB8]
	0x039B25B0 BL 0x1C16CF4
	0x039B25B4 ADRP X0, 0x741000
	0x039B25B8 LDR X0, [X0 + 0xA90]
	0x039B25BC BL 0x1C16CF4
	0x039B25C0 ADRP X0, 0x749000
	0x039B25C4 LDR X0, [X0 + 0x720]
	0x039B25C8 BL 0x1C16CF4
	0x039B25CC ADRP X0, 0x799000
	0x039B25D0 LDR X0, [X0 + 0x48]
	0x039B25D4 BL 0x1C16CF4
	0x039B25D8 ADRP X0, 0x799000
	0x039B25DC LDR X0, [X0 + 0x8]
	0x039B25E0 BL 0x1C16CF4
	0x039B25E4 ADRP X0, 0x745000
	0x039B25E8 LDR X0, [X0 + 0x928]
	0x039B25EC BL 0x1C16CF4
	0x039B25F0 ADRP X0, 0x799000
	0x039B25F4 LDR X0, [X0 + 0x88]
	0x039B25F8 BL 0x1C16CF4
	0x039B25FC ADRP X0, 0x741000
	0x039B2600 LDR X0, [X0 + 0xDD8]
	0x039B2604 BL 0x1C16CF4
	0x039B2608 ADRP X0, 0x79F000
	0x039B260C LDR X0, [X0 + 0xEC8]
	0x039B2610 BL 0x1C16CF4
	0x039B2614 ADRP X0, 0x79F000
	0x039B2618 LDR X0, [X0 + 0xED0]
	0x039B261C BL 0x1C16CF4
	0x039B2620 ADRP X0, 0x79F000
	0x039B2624 LDR X0, [X0 + 0xED8]
	0x039B2628 BL 0x1C16CF4
	0x039B262C ADRP X0, 0x79F000
	0x039B2630 LDR X0, [X0 + 0xEE0]
	0x039B2634 BL 0x1C16CF4
	0x039B2638 ADRP X0, 0x79F000
	0x039B263C LDR X0, [X0 + 0xEE8]
	0x039B2640 BL 0x1C16CF4
	0x039B2644 ADRP X0, 0x79F000
	0x039B2648 LDR X0, [X0 + 0xEF0]
	0x039B264C BL 0x1C16CF4
	0x039B2650 ADRP X0, 0x79F000
	0x039B2654 LDR X0, [X0 + 0xEF8]
	0x039B2658 BL 0x1C16CF4
	0x039B265C ADRP X0, 0x79F000
	0x039B2660 LDR X0, [X0 + 0xF00]
	0x039B2664 BL 0x1C16CF4
	0x039B2668 ADRP X0, 0x741000
	0x039B266C LDR X0, [X0 + 0x988]
	0x039B2670 BL 0x1C16CF4
	0x039B2674 ADRP X0, 0x775000
	0x039B2678 LDR X0, [X0 + 0xFF8]
	0x039B267C BL 0x1C16CF4
	0x039B2680 ADRP X0, 0x798000
	0x039B2684 LDR X0, [X0 + 0xDE0]
	0x039B2688 BL 0x1C16CF4
	0x039B268C ADRP X0, 0x799000
	0x039B2690 LDR X0, [X0 + 0xF8]
	0x039B2694 BL 0x1C16CF4
	0x039B2698 ADRP X0, 0x776000
	0x039B269C LDR X0, [X0]
	0x039B26A0 BL 0x1C16CF4
	0x039B26A4 ADRP X0, 0x799000
	0x039B26A8 LDR X0, [X0 + 0x138]
	0x039B26AC BL 0x1C16CF4
	0x039B26B0 MOVZ W8, 0x1
	0x039B26B4 STRB W8, [X20 + 0xC4B]
	0x039B26B8 LDR X0, [X19]
	0x039B26BC STRH W31, [X31 + 0x2C]
	0x039B26C0 STR W31, [X31 + 0x28]
	0x039B26C4 LDR W8, [X0 + 0xE0]
	0x039B26C8 CBNZ W8, 0x39B26D0
	0x039B26CC BL 0x1C16DFC
	0x039B26D0 ADD X0, X31, 0x30
	0x039B26D4 MOV X1, X31
	0x039B26D8 BL 0x3C4A5A0
	0x039B26DC TBZ X0, 0x0, 0x39B270C
	0x039B26E0 ADRP X8, 0x79F000
	0x039B26E4 LDR X8, [X8 + 0xED8]
	0x039B26E8 LDR X1, [X8]
	0x039B26EC LDR X8, [X23 + 0x38]
	0x039B26F0 STR X1, [X23 + 0x30]
	0x039B26F4 CBZ X8, 0x39B31BC
	0x039B26F8 LDR X0, [X8 + 0x40]
	0x039B26FC LDR X9, [X8 + 0x18]
	0x039B2700 LDR X2, [X8 + 0x28]
	0x039B2704 BLR X9
	0x039B2708 B 0x39B3154
	0x039B270C ADRP X8, 0x79F000
	0x039B2710 LDR X8, [X8 + 0xEC0]
	0x039B2714 LDR X2, [X8]
	0x039B2718 ADD X0, X31, 0x30
	0x039B271C MOV W1, W31
	0x039B2720 BL 0x2184884
	0x039B2724 LDR W19, [X0]
	0x039B2728 MOV X20, X0
	0x039B272C MOV X22, X1
	0x039B2730 UBFM W8, W19, 0xE, 0x1F
	0x039B2734 CBZ W8, 0x39B2778
	0x039B2738 ADRP X8, 0x741000
	0x039B273C LDR X8, [X8 + 0xA28]
	0x039B2740 LDR X0, [X8]
	0x039B2744 LDR W8, [X0 + 0xE0]
	0x039B2748 CBNZ W8, 0x39B2750
	0x039B274C BL 0x1C16DFC
	0x039B2750 ADRP X8, 0x79F000
	0x039B2754 LDR X8, [X8 + 0xEF8]
	0x039B2758 LDR X0, [X8]
	0x039B275C MOV X1, X31
	0x039B2760 BL 0x3C06A04
	0x039B2764 ADRP X8, 0x741000
	0x039B2768 LDR X8, [X8 + 0x988]
	0x039B276C MOVZ W19, 0x4000
	0x039B2770 LDR X21, [X8]
	0x039B2774 B 0x39B2788
	0x039B2778 ADRP X8, 0x741000
	0x039B277C LDR X8, [X8 + 0x988]
	0x039B2780 LDR X21, [X8]
	0x039B2784 CBZ W19, 0x39B3174
	0x039B2788 ADD X0, X23, 0x28
	0x039B278C MOV X1, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0xA30000
	013 Move X21, 0x7A0000
	014 Move W8, [X19+3135]
	015 Move X21, [X21+3568]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x7A0000
	021 Move X0, [X0+1952]
	022 Call 0x1C17CF4
	023 Move X0, 0x787000
	024 Move X0, [X0+2040]
	025 Call 0x1C17CF4
	026 Move X0, 0x7A0000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move X0, 0x7A0000
	030 Move X0, [X0+3584]
	031 Call 0x1C17CF4
	032 Move X0, 0x7A0000
	033 Move X0, [X0+3592]
	034 Call 0x1C17CF4
	035 Move X0, 0x7A0000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move X0, 0x7A0000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0x7A0000
	042 Move X0, [X0+3616]
	043 Call 0x1C17CF4
	044 Move X0, 0x7A0000
	045 Move X0, [X0+3568]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+3135], W8
	049 Move X23, 0x787000
	050 Move X23, [X23+2040]
	051 Move X0, [X21]
	052 Move X20, 0x7A0000
	053 Move X22, 0x7A0000
	054 Move X28, 0x7A0000
	055 Move X27, 0x7A0000
	056 Move X26, 0x7A0000
	057 Move X25, 0x7A0000
	058 Move X24, 0x7A0000
	059 Move X20, [X20+3576]
	060 Move X22, [X22+1952]
	061 Move X28, [X28+3584]
	062 Move W8, [X0+224]
	063 Move X27, [X27+3592]
	064 Move X26, [X26+3600]
	065 Move X25, [X25+3608]
	066 Move X24, [X24+3616]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Move X0, [X23]
	073 Move X19, [X8]
	074 Call 0x1C17F10
	075 Move X2, [X20]
	076 Move X1, X19
	077 Move X3, X31
	078 Move X20, X0
	079 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	080 Move X8, [X22]
	081 Move X8, [X8+184]
	082 Move [X8], X20
	083 Move X8, [X21]
	084 Move X0, [X23]
	085 Move X8, [X8+184]
	086 Move X19, [X8]
	087 Call 0x1C17F10
	088 Move X2, [X28]
	089 Move X1, X19
	090 Move X3, X31
	091 Move X20, X0
	092 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	093 Move X8, [X22]
	094 Move X8, [X8+184]
	095 Move [X8+8], X20
	096 Move X8, [X21]
	097 Move X0, [X23]
	098 Move X8, [X8+184]
	099 Move X19, [X8]
	100 Call 0x1C17F10
	101 Move X2, [X27]
	102 Move X1, X19
	103 Move X3, X31
	104 Move X20, X0
	105 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	106 Move X8, [X22]
	107 Move X8, [X8+184]
	108 Move [X8+16], X20
	109 Move X8, [X21]
	110 Move X0, [X23]
	111 Move X8, [X8+184]
	112 Move X19, [X8]
	113 Call 0x1C17F10
	114 Move X2, [X26]
	115 Move X1, X19
	116 Move X3, X31
	117 Move X20, X0
	118 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	119 Move X8, [X22]
	120 Move X8, [X8+184]
	121 Move [X8+24], X20
	122 Move X8, [X21]
	123 Move X0, [X23]
	124 Move X8, [X8+184]
	125 Move X19, [X8]
	126 Call 0x1C17F10
	127 Move X2, [X25]
	128 Move X1, X19
	129 Move X3, X31
	130 Move X20, X0
	131 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	132 Move X8, [X22]
	133 Move X8, [X8+184]
	134 Move [X8+32], X20
	135 Move X8, [X21]
	136 Move X0, [X23]
	137 Move X8, [X8+184]
	138 Move X19, [X8]
	139 Call 0x1C17F10
	140 Move X2, [X24]
	141 Move X1, X19
	142 Move X3, X31
	143 Move X20, X0
	144 Call Func`3<Single, Single, Single>..ctor, X0, X1, X2
	145 Move X8, [X22]
	146 Move X22, [X31+64]
	147 Move X21, [X31+72]
	148 Move X24, [X31+48]
	149 Move X23, [X31+56]
	150 Move X26, [X31+32]
	151 Move X25, [X31+40]
	152 Move X8, [X8+184]
	153 Move X28, [X31+16]
	154 Move X27, [X31+24]
	155 Move [X8+40], X20
	156 Move X20, [X31+80]
	157 Move X19, [X31+88]
	158 Move X30, [X31+96]
	159 Return 

Method: System.Void <ComputeAggregateValues>g__ForEachSampleMember|12_0(ref UnityEngine.Rendering.FrameTimeSample aggregate, UnityEngine.Rendering.FrameTimeSample sample, System.Func`3<System.Single, System.Single, System.Single> func)

Disassembly:
	0x039B238C CSEL W9, W9, W8, LT
	0x039B2390 CBZ X0, 0x39B2438
	0x039B2394 ADRP X22, 0x79F000
	0x039B2398 LDR X22, [X22 + 0xEA0]
	0x039B239C AND W9, W9, 0xFFFFFFFC
	0x039B23A0 SUB W21, W8, W9
	0x039B23A4 MOV W1, W21
	0x039B23A8 LDR X2, [X22]
	0x039B23AC BL 0x2F58E78
	0x039B23B0 STP X0, X1, [X31]
	0x039B23B4 ADD X0, X31, 0x0
	0x039B23B8 MOV X1, X31
	0x039B23BC BL 0x3C4A528
	0x039B23C0 TBNZ X0, 0x0, 0x39B23E8
	0x039B23C4 LDR X0, [X19 + 0x18]
	0x039B23C8 CBZ X0, 0x39B2438
	0x039B23CC LDR X2, [X22]
	0x039B23D0 MOV W1, W21
	0x039B23D4 BL 0x2F58E78
	0x039B23D8 STP X0, X1, [X31]
	0x039B23DC ADD X0, X31, 0x0
	0x039B23E0 MOV X1, X31
	0x039B23E4 BL 0x3C4A4B0
	0x039B23E8 LDR X0, [X19 + 0x10]
	0x039B23EC CBZ X0, 0x39B2438
	0x039B23F0 ADRP X8, 0x79F000
	0x039B23F4 LDR X8, [X8 + 0xE98]
	0x039B23F8 MOV W1, W21
	0x039B23FC LDR X2, [X8]
	0x039B2400 BL 0x301BCCC
	0x039B2404 CBZ X20, 0x39B2438
	0x039B2408 MOV X2, X0
	0x039B240C MOVZ W1, 0x7
	0x039B2410 MOV X0, X20
	0x039B2414 MOV X3, X31
	0x039B2418 BL 0x3C4F9D0
	0x039B241C MOV X0, X19
	0x039B2420 BL 0x39B243C
	0x039B2424 LDP X20, X19, [X31 + 0x30]
	0x039B2428 LDP X22, X21, [X31 + 0x20]
	0x039B242C LDR X30, [X31 + 0x10]
	0x039B2430 ADD X31, X31, 0x40
	0x039B2434 RET
	0x039B2438 BL 0x1C16F20
	0x039B243C SUB X31, X31, 0x30
	0x039B2440 STR X30, [X31 + 0x10]
	0x039B2444 STP X20, X19, [X31 + 0x20]
	0x039B2448 ADRP X20, 0xA2F000
	0x039B244C LDRB W8, [X20 + 0xC4A]
	0x039B2450 MOV X19, X0
	0x039B2454 TBNZ X8, 0x0, 0x39B2484
	0x039B2458 ADRP X0, 0x79F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {57}
	007 Move X21, X1
	008 Move X19, X0
	009 Move V1, [X1]
	010 Move V0, [X0]
	011 Move X8, [X2+24]
	012 Move X0, [X2+64]
	013 Move X1, [X2+40]
	014 Move X20, X2
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move [X19], S0
	017 Move V0, [X19+4]
	018 Move V1, [X21+4]
	019 Move X8, [X20+24]
	020 Move X0, [X20+64]
	021 Move X1, [X20+40]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move [X19+4], S0
	024 Move V0, [X19+8]
	025 Move V1, [X21+8]
	026 Move X8, [X20+24]
	027 Move X0, [X20+64]
	028 Move X1, [X20+40]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move [X19+8], S0
	031 Move V0, [X19+12]
	032 Move V1, [X21+12]
	033 Move X8, [X20+24]
	034 Move X0, [X20+64]
	035 Move X1, [X20+40]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move [X19+12], S0
	038 Move V0, [X19+16]
	039 Move V1, [X21+16]
	040 Move X8, [X20+24]
	041 Move X0, [X20+64]
	042 Move X1, [X20+40]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move [X19+16], S0
	045 Move V0, [X19+20]
	046 Move V1, [X21+20]
	047 Move X8, [X20+24]
	048 Move X0, [X20+64]
	049 Move X1, [X20+40]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move [X19+20], S0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Call 0x1C17F20

