Type: UnityEngine.Rendering.ProbeReferenceVolume/Volume

Method: System.Void .ctor(UnityEngine.Matrix4x4 trs, System.Single maxSubdivision, System.Single minSubdivision)

Disassembly:
	0x039C4E18 STR X30, [X31 - 0x10]!
	0x039C4E1C LDR X8, [X0 + 0x10]
	0x039C4E20 CBZ X8, 0x39C4E3C
	0x039C4E24 LDR X8, [X8 + 0x190]
	0x039C4E28 CBZ X8, 0x39C4E3C
	0x039C4E2C AND W9, W1, 0x1
	0x039C4E30 STRB W9, [X8 + 0x12]
	0x039C4E34 LDR X30, [X31], #0x10
	0x039C4E38 RET
	0x039C4E3C BL 0x1C16F20
	0x039C4E40 STR X30, [X31 - 0x10]!
	0x039C4E44 LDR X8, [X0 + 0x10]
	0x039C4E48 CBZ X8, 0x39C4E60
	0x039C4E4C LDR X8, [X8 + 0x190]
	0x039C4E50 CBZ X8, 0x39C4E60
	0x039C4E54 LDRB W0, [X8 + 0x11]
	0x039C4E58 LDR X30, [X31], #0x10
	0x039C4E5C RET
	0x039C4E60 BL 0x1C16F20
	0x039C4E64 STR X30, [X31 - 0x10]!
	0x039C4E68 LDR X8, [X0 + 0x10]
	0x039C4E6C CBZ X8, 0x39C4E88
	0x039C4E70 LDR X8, [X8 + 0x190]
	0x039C4E74 CBZ X8, 0x39C4E88
	0x039C4E78 AND W9, W1, 0x1
	0x039C4E7C STRB W9, [X8 + 0x11]
	0x039C4E80 LDR X30, [X31], #0x10
	0x039C4E84 RET
	0x039C4E88 BL 0x1C16F20
	0x039C4E8C STR X30, [X31 - 0x10]!
	0x039C4E90 LDR X8, [X0 + 0x10]
	0x039C4E94 CBZ X8, 0x39C4EAC
	0x039C4E98 LDR X8, [X8 + 0x190]
	0x039C4E9C CBZ X8, 0x39C4EAC
	0x039C4EA0 LDR V0, [X8 + 0x24]
	0x039C4EA4 LDR X30, [X31], #0x10
	0x039C4EA8 RET
	0x039C4EAC BL 0x1C16F20
	0x039C4EB0 STR X30, [X31 - 0x10]!
	0x039C4EB4 LDR X8, [X0 + 0x10]
	0x039C4EB8 CBZ X8, 0x39C4ED0
	0x039C4EBC LDR X8, [X8 + 0x190]
	0x039C4EC0 CBZ X8, 0x39C4ED0
	0x039C4EC4 STR S0, [X8 + 0x24]
	0x039C4EC8 LDR X30, [X31], #0x10
	0x039C4ECC RET
	0x039C4ED0 BL 0x1C16F20
	0x039C4ED4 STR X30, [X31 - 0x10]!
	0x039C4ED8 LDR X8, [X0 + 0x10]
	0x039C4EDC CBZ X8, 0x39C4EF4
	0x039C4EE0 LDR X8, [X8 + 0x190]
	0x039C4EE4 CBZ X8, 0x39C4EF4
	0x039C4EE8 LDRB W0, [X8 + 0x10]
	0x039C4EEC LDR X30, [X31], #0x10
	0x039C4EF0 RET
	0x039C4EF4 BL 0x1C16F20
	0x039C4EF8 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X19, X0
	008 Move X0, X1
	009 Move W1, W31
	010 Move X2, X31
	011 Move V8, V1
	012 Move V9, V0
	013 Call Matrix4x4.GetColumn, X0, X1
	014 Move W1, 1
	015 Move X0, X20
	016 Move X2, X31
	017 Move [X19+12], S0
	018 Move [X19+20], S1
	019 Move [X19+20], S2
	020 Call Matrix4x4.GetColumn, X0, X1
	021 Move W1, 2
	022 Move X0, X20
	023 Move X2, X31
	024 Move [X19+24], S0
	025 Move [X19+32], S1
	026 Move [X19+32], S2
	027 Call Matrix4x4.GetColumn, X0, X1
	028 Move W1, 3
	029 Move X0, X20
	030 Move X2, X31
	031 Move [X19+36], S0
	032 Move [X19+44], S1
	033 Move [X19+44], S2
	034 Call Matrix4x4.GetColumn, X0, X1
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move V6, [X19+24]
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Move V4, [X19+20]
	039 Move V7, [X19+32]
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move V0.S[1], V1.S[0]
	042 Move V1, [X19+44]
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 NotImplemented "Instruction INVALID not yet implemented."
	046 Move S16, 0.5
	047 Multiply S4, S4, S16
	048 Multiply S7, S7, S16
	049 Subtract V0, V0, V3
	050 Subtract S2, S2, S4
	051 Multiply S1, S1, S16
	052 Subtract V0, V0, V6
	053 Subtract S2, S2, S7
	054 Subtract V0, V0, V5
	055 Subtract S1, S2, S1
	056 Move [X19], D0
	057 Move [X19+8], S1
	058 Move [X19+48], S9
	059 Move [X19+56], S8
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Return 

Method: System.Void .ctor(UnityEngine.Vector3 corner, UnityEngine.Vector3 X, UnityEngine.Vector3 Y, UnityEngine.Vector3 Z, System.Single maxSubdivision = 1, System.Single minSubdivision = 0)

Disassembly:
	0x039C4EFC LDR X8, [X0 + 0x10]
	0x039C4F00 CBZ X8, 0x39C4F1C
	0x039C4F04 LDR X8, [X8 + 0x190]
	0x039C4F08 CBZ X8, 0x39C4F1C
	0x039C4F0C AND W9, W1, 0x1
	0x039C4F10 STRB W9, [X8 + 0x10]
	0x039C4F14 LDR X30, [X31], #0x10
	0x039C4F18 RET
	0x039C4F1C BL 0x1C16F20
	0x039C4F20 STR X30, [X31 - 0x10]!
	0x039C4F24 LDR X8, [X0 + 0x10]
	0x039C4F28 CBZ X8, 0x39C4F40
	0x039C4F2C LDR X8, [X8 + 0x190]
	0x039C4F30 CBZ X8, 0x39C4F40
	0x039C4F34 LDR W0, [X8 + 0x1C]

ISIL:
	001 Move V6, [X31+40]
	002 Move V7, [X31+32]
	003 Move V16, [X31+24]
	004 Move X8, [X31+16]
	005 Move V17, [X31+8]
	006 Move X9, [X31]
	007 Move [X0], S0
	008 Move [X0+8], S1
	009 Move [X0+8], S2
	010 Move [X0+16], S3
	011 Move [X0+16], S4
	012 Move [X0+24], S5
	013 Move [X0+24], X9
	014 Move [X0+32], S17
	015 Move [X0+36], X8
	016 Move [X0+44], S16
	017 Move [X0+52], S7
	018 Move [X0+52], S6
	019 Return 

Method: System.Void .ctor(UnityEngine.Rendering.ProbeReferenceVolume/Volume copy)

Disassembly:
	0x039C4F38 LDR X30, [X31], #0x10
	0x039C4F3C RET
	0x039C4F40 BL 0x1C16F20
	0x039C4F44 STR X30, [X31 - 0x10]!
	0x039C4F48 LDR X8, [X0 + 0x10]
	0x039C4F4C CBZ X8, 0x39C4F64
	0x039C4F50 LDR X8, [X8 + 0x190]
	0x039C4F54 CBZ X8, 0x39C4F64
	0x039C4F58 STR W1, [X8 + 0x1C]
	0x039C4F5C LDR X30, [X31], #0x10
	0x039C4F60 RET
	0x039C4F64 BL 0x1C16F20
	0x039C4F68 STR X30, [X31 - 0x10]!
	0x039C4F6C LDR X8, [X0 + 0x10]
	0x039C4F70 CBZ X8, 0x39C4F88
	0x039C4F74 LDR X8, [X8 + 0x190]
	0x039C4F78 CBZ X8, 0x39C4F88
	0x039C4F7C LDR W0, [X8 + 0x1C]
	0x039C4F80 LDR X30, [X31], #0x10
	0x039C4F84 RET
	0x039C4F88 BL 0x1C16F20
	0x039C4F8C STR X30, [X31 - 0x10]!
	0x039C4F90 LDR X8, [X0 + 0x10]
	0x039C4F94 CBZ X8, 0x39C4FAC
	0x039C4F98 LDR X8, [X8 + 0x190]
	0x039C4F9C CBZ X8, 0x39C4FAC
	0x039C4FA0 STR W1, [X8 + 0x1C]
	0x039C4FA4 LDR X30, [X31], #0x10
	0x039C4FA8 RET
	0x039C4FAC BL 0x1C16F20
	0x039C4FB0 STR X30, [X31 - 0x10]!
	0x039C4FB4 LDR X8, [X0 + 0x10]
	0x039C4FB8 CBZ X8, 0x39C4FD0
	0x039C4FBC LDR X8, [X8 + 0x190]
	0x039C4FC0 CBZ X8, 0x39C4FD0
	0x039C4FC4 LDR V0, [X8 + 0x20]
	0x039C4FC8 LDR X30, [X31], #0x10
	0x039C4FCC RET
	0x039C4FD0 BL 0x1C16F20
	0x039C4FD4 STR X30, [X31 - 0x10]!
	0x039C4FD8 LDR X8, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move V1, [X1]
	003 Move V0, [X1+16]
	004 Move V2, [X1+2]
	005 Move X8, [X1+48]
	006 Move [X31+128], V1
	007 Move [X31+136], V0
	008 Move W9, [X31+148]
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move [X31+176], X8
	011 Move [X31+10], V2
	012 Move [X0+20], W9
	013 Move [X0+12], X10
	014 Move V2, [X1+16]
	015 Move V0, [X1+32]
	016 Move V1, [X1]
	017 Move X8, [X1+48]
	018 Move [X31+80], V2
	019 Move [X31+88], V0
	020 Move W9, [X31+96]
	021 Move X10, [X31+88]
	022 Move [X31+112], X8
	023 Move [X31+4], V1
	024 Move [X0+32], W9
	025 Move [X0+24], X10
	026 Move V2, [X1+16]
	027 Move V0, [X1+32]
	028 Move X8, [X1+48]
	029 Move V1, [X1]
	030 Move [X31+16], V2
	031 Move [X31+24], V0
	032 Move [X31+48], X8
	033 Move W8, [X31+44]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Move [X31], V1
	036 Move [X0+44], W8
	037 Move [X0+36], X9
	038 Move W8, [X1+8]
	039 Move X9, [X1]
	040 Move [X0+8], W8
	041 Move [X0], X9
	042 Move V0, [X1+48]
	043 Move [X0+48], S0
	044 Move V0, [X1+52]
	045 Move [X0+52], S0
	046 Add X31, X31, 192
	047 Return 

Method: System.Void .ctor(UnityEngine.Bounds bounds)

Disassembly:
	0x039C4FDC CBZ X8, 0x39C4FF4
	0x039C4FE0 LDR X8, [X8 + 0x190]
	0x039C4FE4 CBZ X8, 0x39C4FF4
	0x039C4FE8 STR S0, [X8 + 0x20]
	0x039C4FEC LDR X30, [X31], #0x10
	0x039C4FF0 RET
	0x039C4FF4 BL 0x1C16F20
	0x039C4FF8 STR X30, [X31 - 0x10]!
	0x039C4FFC LDR X8, [X0 + 0x10]
	0x039C5000 CBZ X8, 0x39C5018
	0x039C5004 LDR X8, [X8 + 0x190]
	0x039C5008 CBZ X8, 0x39C5018
	0x039C500C LDR V0, [X8 + 0x34]
	0x039C5010 LDR X30, [X31], #0x10
	0x039C5014 RET
	0x039C5018 BL 0x1C16F20
	0x039C501C STR X30, [X31 - 0x10]!
	0x039C5020 LDR X8, [X0 + 0x10]
	0x039C5024 CBZ X8, 0x39C503C
	0x039C5028 LDR X8, [X8 + 0x190]
	0x039C502C CBZ X8, 0x39C503C
	0x039C5030 STR S0, [X8 + 0x34]
	0x039C5034 LDR X30, [X31], #0x10
	0x039C5038 RET

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move V1, [X1+20]
	003 Move V2, [X1]
	004 Move V3, [X1+8]
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move S5, -0.5
	007 Add V0, V0, V0
	008 Add S1, S1, S1
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 Multiply S5, S1, S5
	011 Add V2, V2, V4
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Add X8, X0, 28
	014 Add S3, S3, S5
	015 Move [X0+24], W31
	016 Move [X0+16], D4
	017 Move [X0], D2
	018 Move [X0+8], S3
	019 Move [X0+16], S0
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Move [X0+32], D4
	022 Move [X0+40], W31
	023 Move [X0+44], S1
	024 Move [X0+48], D4
	025 Return 

Method: UnityEngine.Bounds CalculateAABB()

Disassembly:
	0x039C503C BL 0x1C16F20
	0x039C5040 STR X30, [X31 - 0x10]!
	0x039C5044 LDR X8, [X0 + 0x10]
	0x039C5048 CBZ X8, 0x39C5060
	0x039C504C LDR X8, [X8 + 0x190]
	0x039C5050 CBZ X8, 0x39C5060
	0x039C5054 LDR W0, [X8 + 0x2C]
	0x039C5058 LDR X30, [X31], #0x10
	0x039C505C RET
	0x039C5060 BL 0x1C16F20
	0x039C5064 STR X30, [X31 - 0x30]!
	0x039C5068 STP X22, X21, [X31 + 0x10]
	0x039C506C STP X20, X19, [X31 + 0x20]
	0x039C5070 ADRP X21, 0xA1C000
	0x039C5074 LDRB W8, [X21 + 0xCCC]
	0x039C5078 MOV W19, W1
	0x039C507C MOV X20, X0
	0x039C5080 TBNZ X8, 0x0, 0x39C5098
	0x039C5084 ADRP X0, 0x78C000
	0x039C5088 LDR X0, [X0 + 0xF48]
	0x039C508C BL 0x1C16CF4
	0x039C5090 MOVZ W8, 0x1
	0x039C5094 STRB W8, [X21 + 0xCCC]
	0x039C5098 LDR X8, [X20 + 0x10]
	0x039C509C CBZ X8, 0x39C5124
	0x039C50A0 ADRP X21, 0x78C000
	0x039C50A4 LDR X21, [X21 + 0xF48]
	0x039C50A8 LDR X20, [X8 + 0x190]
	0x039C50AC LDR X0, [X21]
	0x039C50B0 LDR W9, [X0 + 0xE0]
	0x039C50B4 CBNZ W9, 0x39C50BC
	0x039C50B8 BL 0x1C16DFC
	0x039C50BC ADRP X22, 0xA1C000
	0x039C50C0 LDRB W8, [X22 + 0xCB9]
	0x039C50C4 CBNZ W8, 0x39C50DC
	0x039C50C8 ADRP X0, 0x78C000
	0x039C50CC LDR X0, [X0 + 0xF48]
	0x039C50D0 BL 0x1C16CF4
	0x039C50D4 MOVZ W8, 0x1
	0x039C50D8 STRB W8, [X22 + 0xCB9]
	0x039C50DC LDR X0, [X21]
	0x039C50E0 LDR W8, [X0 + 0xE0]
	0x039C50E4 CBNZ W8, 0x39C50F0
	0x039C50E8 BL 0x1C16DFC
	0x039C50EC LDR X0, [X21]
	0x039C50F0 LDR X8, [X0 + 0xB8]
	0x039C50F4 LDR X8, [X8 + 0x8]
	0x039C50F8 CBZ X8, 0x39C5124
	0x039C50FC CBZ X20, 0x39C5124
	0x039C5100 LDR W8, [X8 + 0x34]
	0x039C5104 LDP X22, X21, [X31 + 0x10]
	0x039C5108 SUB W8, W8, 0x1
	0x039C510C CMP W8, W19
	0x039C5110 CSEL W8, W19, W8, GT
	0x039C5114 STR W8, [X20 + 0x2C]
	0x039C5118 LDP X20, X19, [X31 + 0x20]
	0x039C511C LDR X30, [X31], #0x30
	0x039C5120 RET
	0x039C5124 BL 0x1C16F20
	0x039C5128 STR X30, [X31 - 0x10]!
	0x039C512C LDR X8, [X0 + 0x10]
	0x039C5130 CBZ X8, 0x39C5148
	0x039C5134 LDR X8, [X8 + 0x190]
	0x039C5138 CBZ X8, 0x39C5148
	0x039C513C LDR W0, [X8 + 0x30]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+8]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move V4, [X0+20]
	005 Move V5, [X0+24]
	006 Move V7, [X0+32]
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 Move V19, [X0+44]
	009 Move TEMP, 0x80800000
	010 Not TEMP
	011 Move W10, TEMP
	012 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	013 Move S6, W10
	014 Move TEMP, 0x800000
	015 Not TEMP
	016 Move W10, TEMP
	017 Move W9, W31
	018 NotImplemented "Instruction MVNI not yet implemented."
	019 Move S17, W10
	020 NotImplemented "Instruction SCVTF not yet implemented."
	021 NotImplemented "Instruction INVALID not yet implemented."
	022 Multiply S22, S4, S20
	023 Move W10, W31
	024 Add V20, V0, V21
	025 Add S21, S1, S22
	026 NotImplemented "Instruction SCVTF not yet implemented."
	027 NotImplemented "Instruction INVALID not yet implemented."
	028 Multiply S25, S7, S22
	029 Move S24, W31
	030 Add V22, V20, V23
	031 Add S23, S21, S25
	032 Move W11, 1
	033 NotImplemented "Instruction INVALID not yet implemented."
	034 Multiply S24, S19, S24
	035 Add S24, S23, S24
	036 Add V25, V22, V25
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move W12, W11
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 NotImplemented "Instruction FCSEL not yet implemented."
	046 Move S24, 1
	047 Move W11, W31
	048 Move TEMP, X12
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 Invalid "Jump target not found in method."
	052 Add W10, W10, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W9, W9, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add V0, V3, V18
	057 Add S1, S6, S17
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Move S4, 0.5
	060 Subtract V3, V18, V3
	061 Subtract S5, S17, S6
	062 NotImplemented "Instruction INVALID not yet implemented."
	063 Multiply S1, S1, S4
	064 NotImplemented "Instruction INVALID not yet implemented."
	065 Multiply S3, S5, S4
	066 Move [X8], D0
	067 Move [X8+8], S1
	068 Move [X8+12], D2
	069 Move [X8+20], S3
	070 Return X0

Method: System.Void CalculateCenterAndSize(out UnityEngine.Vector3 center, out UnityEngine.Vector3 size)

Disassembly:
	0x039C5140 LDR X30, [X31], #0x10
	0x039C5144 RET
	0x039C5148 BL 0x1C16F20
	0x039C514C STR X30, [X31 - 0x10]!
	0x039C5150 LDR X8, [X0 + 0x10]
	0x039C5154 CBZ X8, 0x39C5170
	0x039C5158 LDR X8, [X8 + 0x190]
	0x039C515C CBZ X8, 0x39C5170
	0x039C5160 BIC W9, W1, W1, 0x1F
	0x039C5164 STR W9, [X8 + 0x30]
	0x039C5168 LDR X30, [X31], #0x10
	0x039C516C RET
	0x039C5170 BL 0x1C16F20
	0x039C5174 STR X30, [X31 - 0x10]!
	0x039C5178 LDR X8, [X0 + 0x10]
	0x039C517C CBZ X8, 0x39C5194
	0x039C5180 LDR X8, [X8 + 0x190]
	0x039C5184 CBZ X8, 0x39C5194
	0x039C5188 LDRB W0, [X8 + 0x38]
	0x039C518C LDR X30, [X31], #0x10
	0x039C5190 RET
	0x039C5194 BL 0x1C16F20
	0x039C5198 STP X30, X21, [X31 - 0x20]!
	0x039C519C STP X20, X19, [X31 + 0x10]
	0x039C51A0 ADRP X21, 0xA1C000
	0x039C51A4 LDRB W8, [X21 + 0xCCD]
	0x039C51A8 MOV W20, W1
	0x039C51AC MOV X19, X0
	0x039C51B0 TBNZ X8, 0x0, 0x39C51C8
	0x039C51B4 ADRP X0, 0x78C000
	0x039C51B8 LDR X0, [X0 + 0xF48]
	0x039C51BC BL 0x1C16CF4
	0x039C51C0 MOVZ W8, 0x1
	0x039C51C4 STRB W8, [X21 + 0xCCD]
	0x039C51C8 LDR X8, [X19 + 0x10]
	0x039C51CC CBZ X8, 0x39C528C
	0x039C51D0 LDR X8, [X8 + 0x190]
	0x039C51D4 CBZ X8, 0x39C528C
	0x039C51D8 AND W9, W20, 0x1
	0x039C51DC STRB W9, [X8 + 0x38]
	0x039C51E0 TBZ X20, 0x0, 0x39C5280
	0x039C51E4 LDRB W8, [X8 + 0x10]
	0x039C51E8 CBZ W8, 0x39C5280
	0x039C51EC ADRP X8, 0x78C000
	0x039C51F0 LDR X8, [X8 + 0xF48]
	0x039C51F4 LDR X0, [X8]
	0x039C51F8 LDR W8, [X0 + 0xE0]
	0x039C51FC CBNZ W8, 0x39C5204
	0x039C5200 BL 0x1C16DFC
	0x039C5204 MOV W0, W31
	0x039C5208 MOV X1, X31
	0x039C520C BL 0x39B4BB8
	0x039C5210 LDR X8, [X19 + 0x10]
	0x039C5214 CBZ X8, 0x39C528C
	0x039C5218 MOV W20, W0
	0x039C521C MOV X0, X8
	0x039C5220 MOV X1, X31
	0x039C5224 BL 0x39BD150
	0x039C5228 LDR X9, [X19 + 0x10]
	0x039C522C CBZ X9, 0x39C528C
	0x039C5230 LDR X8, [X9 + 0x190]
	0x039C5234 CBZ X8, 0x39C528C
	0x039C5238 LDR V1, [X9 + 0x218]
	0x039C523C SCVTF S3, W20
	0x039C5240 FMUL S0, S0, S3
	0x039C5244 FMOV S3, 3
	0x039C5248 LDR V2, [X9 + 0x214]
	0x039C524C FDIV S0, S0, S3
	0x039C5250 ADRP X9, 0xFFFFFFFFFD125000
	0x039C5254 FMUL S0, S0, S1
	0x039C5258 LDR V1, [X9 + 0x200]
	0x039C525C LDR V3, [X8 + 0x20]
	0x039C5260 FADD S0, S0, S2
	0x039C5264 FMOV S2, 10
	0x039C5268 FMIN S2, S0, S2
	0x039C526C FCMP S0, S1
	0x039C5270 FCSEL S0, S2, S1, PL
	0x039C5274 FCMP S3, S0
	0x039C5278 FCSEL S0, S3, S0, MI
	0x039C527C STR S0, [X8 + 0x20]
	0x039C5280 LDP X20, X19, [X31 + 0x10]
	0x039C5284 LDP X30, X21, [X31], #0x20
	0x039C5288 RET
	0x039C528C BL 0x1C16F20
	0x039C5290 STR X30, [X31 - 0x10]!
	0x039C5294 LDR X8, [X0 + 0x10]
	0x039C5298 CBZ X8, 0x39C52B0
	0x039C529C LDR X8, [X8 + 0x190]
	0x039C52A0 CBZ X8, 0x39C52B0
	0x039C52A4 LDR V0, [X8 + 0x3C]
	0x039C52A8 LDR X30, [X31], #0x10
	0x039C52AC RET
	0x039C52B0 BL 0x1C16F20
	0x039C52B4 STR X30, [X31 - 0x10]!
	0x039C52B8 LDR X8, [X0 + 0x10]
	0x039C52BC CBZ X8, 0x39C52D4
	0x039C52C0 LDR X8, [X8 + 0x190]
	0x039C52C4 CBZ X8, 0x39C52D4
	0x039C52C8 STR S0, [X8 + 0x3C]
	0x039C52CC LDR X30, [X31], #0x10
	0x039C52D0 RET
	0x039C52D4 BL 0x1C16F20
	0x039C52D8 STR X30, [X31 - 0x10]!
	0x039C52DC LDR X8, [X0 + 0x10]
	0x039C52E0 CBZ X8, 0x39C52F8
	0x039C52E4 LDR X8, [X8 + 0x190]
	0x039C52E8 CBZ X8, 0x39C52F8
	0x039C52EC LDR V0, [X8 + 0x28]
	0x039C52F0 LDR X30, [X31], #0x10
	0x039C52F4 RET
	0x039C52F8 BL 0x1C16F20
	0x039C52FC STR X30, [X31 - 0x10]!
	0x039C5300 LDR X8, [X0 + 0x10]
	0x039C5304 CBZ X8, 0x39C531C

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D10
	003 Move [X31+112], D9
	004 Move [X31+120], D8
	005 Move [X31+128], X30
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X22, 0xA14000
	012 Move W8, [X22+1924]
	013 Move X21, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x72F000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1924], W8
	023 Move X23, 0x72F000
	024 Move X23, [X23+1448]
	025 Move V1, [X20+12]
	026 Move V0, [X20+16]
	027 Move X0, [X23]
	028 Move [X31+64], V0
	029 Move [X31+72], V1
	030 Move V0, [X20+20]
	031 Move W8, [X0+224]
	032 Move [X31+3], V0
	033 Compare W8, 0
	034 JumpIfNotEqual {44}
	035 Call 0x1C17DFC
	036 Move W8, [X22+1924]
	037 Compare W8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, 0x72F000
	040 Move X0, [X0+1448]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+1924], W8
	044 Move X0, [X23]
	045 Move S2, [X20+24]
	046 Move S1, [X20+28]
	047 Move V0, [X20+32]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {69}
	051 Move [X31+16], V1
	052 Move [X31+24], V0
	053 Move [X31], V2
	054 Call 0x1C17DFC
	055 Move V2, [X31]
	056 Move V1, [X31+16]
	057 Move V0, [X31+2]
	058 Move W8, [X22+1924]
	059 Compare W8, 0
	060 JumpIfNotEqual {69}
	061 Move X0, 0x72F000
	062 Move X0, [X0+1448]
	063 Call 0x1C17CF4
	064 Move V2, [X31]
	065 Move V1, [X31+16]
	066 Move V0, [X31+2]
	067 Move W8, 1
	068 Move [X22+1924], W8
	069 Move X0, [X23]
	070 Move S10, [X20+36]
	071 Move S9, [X20+40]
	072 Move V8, [X20+44]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {83}
	076 Move [X31+16], V1
	077 Move [X31+24], V0
	078 Move [X31], V2
	079 Call 0x1C17DFC
	080 Move V2, [X31]
	081 Move V1, [X31+16]
	082 Move V0, [X31+2]
	083 Move V6, [X31+64]
	084 Move V5, [X31+80]
	085 Move V7, [X31+3]
	086 NotImplemented "Instruction MOVI not yet implemented."
	087 Move S4, 0.5
	088 Move V5.S[1], V2.S[0]
	089 Move V6.S[1], V1.S[0]
	090 Move V7.S[1], V0.S[0]
	091 Multiply S0, S10, S10
	092 Multiply S1, S9, S9
	093 NotImplemented "Instruction INVALID not yet implemented."
	094 NotImplemented "Instruction INVALID not yet implemented."
	095 Multiply S2, S8, S8
	096 NotImplemented "Instruction INVALID not yet implemented."
	097 Add S0, S0, S1
	098 Add V1, V5, V6
	099 Add S0, S0, S2
	100 Add V1, V1, V7
	101 NotImplemented "Instruction FSQRT not yet implemented."
	102 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	103 Move [X21+8], S0
	104 Move [X21], D1
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 Move V5, [X20+24]
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 Move V2, [X20+20]
	109 Move V0, [X20]
	110 Move V6, [X20+32]
	111 NotImplemented "Instruction INVALID not yet implemented."
	112 NotImplemented "Instruction INVALID not yet implemented."
	113 NotImplemented "Instruction INVALID not yet implemented."
	114 Move V7, [X20+8]
	115 Move V16, [X20+44]
	116 Multiply S2, S2, S4
	117 Multiply S6, S6, S4
	118 Add V0, V0, V1
	119 Add S1, S7, S2
	120 Multiply S4, S16, S4
	121 Add V0, V0, V5
	122 Add S1, S1, S6
	123 Add V0, V0, V3
	124 Add S1, S1, S4
	125 Move [X19], D0
	126 Move [X19+8], S1
	127 Move X20, [X31+160]
	128 Move X19, [X31+168]
	129 Move X22, [X31+144]
	130 Move X21, [X31+152]
	131 Move X30, [X31+128]
	132 Move X23, [X31+136]
	133 Move D9, [X31+112]
	134 Move D8, [X31+120]
	135 Move V10, [X31+96]
	136 Add X31, X31, 176
	137 Return 

Method: System.Void Transform(UnityEngine.Matrix4x4 trs)

Disassembly:
	0x039C5308 LDR X8, [X8 + 0x190]
	0x039C530C CBZ X8, 0x39C531C
	0x039C5310 STR S0, [X8 + 0x28]
	0x039C5314 LDR X30, [X31], #0x10
	0x039C5318 RET
	0x039C531C BL 0x1C16F20
	0x039C5320 STR X30, [X31 - 0x10]!
	0x039C5324 LDR X8, [X0 + 0x10]
	0x039C5328 CBZ X8, 0x39C5340
	0x039C532C LDR X8, [X8 + 0x190]
	0x039C5330 CBZ X8, 0x39C5340
	0x039C5334 LDRB W0, [X8 + 0x40]
	0x039C5338 LDR X30, [X31], #0x10
	0x039C533C RET
	0x039C5340 BL 0x1C16F20
	0x039C5344 STR X30, [X31 - 0x10]!
	0x039C5348 LDR X8, [X0 + 0x10]
	0x039C534C CBZ X8, 0x39C5368
	0x039C5350 LDR X8, [X8 + 0x190]
	0x039C5354 CBZ X8, 0x39C5368
	0x039C5358 AND W9, W1, 0x1
	0x039C535C STRB W9, [X8 + 0x40]
	0x039C5360 LDR X30, [X31], #0x10
	0x039C5364 RET
	0x039C5368 BL 0x1C16F20
	0x039C536C SUB X31, X31, 0xF0
	0x039C5370 STP X29, X30, [X31 + 0x90]
	0x039C5374 STP X28, X27, [X31 + 0xA0]
	0x039C5378 STP X26, X25, [X31 + 0xB0]
	0x039C537C STP X24, X23, [X31 + 0xC0]
	0x039C5380 STP X22, X21, [X31 + 0xD0]
	0x039C5384 STP X20, X19, [X31 + 0xE0]
	0x039C5388 ADRP X23, 0xA1C000
	0x039C538C ADRP X22, 0x72F000
	0x039C5390 ADRP X21, 0x72F000
	0x039C5394 LDRB W8, [X23 + 0xCCE]
	0x039C5398 LDR X22, [X22 + 0xC30]
	0x039C539C LDR X21, [X21 + 0xC28]
	0x039C53A0 MOV X20, X1
	0x039C53A4 MOV X19, X0
	0x039C53A8 TBNZ X8, 0x0, 0x39C54C8
	0x039C53AC ADRP X0, 0x78D000
	0x039C53B0 LDR X0, [X0 + 0x9D0]
	0x039C53B4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move S0, [X0]
	005 Move S1, [X0+4]
	006 Move V2, [X0+8]
	007 Move X19, X0
	008 Move X20, X1
	009 Move X0, X1
	010 Move X1, X31
	011 Call Matrix4x4.MultiplyPoint, X0, X1
	012 Move S3, [X19+12]
	013 Move S4, [X19+16]
	014 Move V5, [X19+20]
	015 Move [X19], S0
	016 Move [X19+8], S1
	017 Move [X19+8], S2
	018 Move X0, X20
	019 Move V0, V3
	020 Move V1, V4
	021 Move V2, V5
	022 Move X1, X31
	023 Call Matrix4x4.MultiplyVector, X0, X1
	024 Move S3, [X19+24]
	025 Move S4, [X19+28]
	026 Move V5, [X19+32]
	027 Move [X19+12], S0
	028 Move [X19+20], S1
	029 Move [X19+20], S2
	030 Move X0, X20
	031 Move V0, V3
	032 Move V1, V4
	033 Move V2, V5
	034 Move X1, X31
	035 Call Matrix4x4.MultiplyVector, X0, X1
	036 Move S3, [X19+36]
	037 Move S4, [X19+40]
	038 Move V5, [X19+44]
	039 Move [X19+24], S0
	040 Move [X19+32], S1
	041 Move [X19+32], S2
	042 Move X0, X20
	043 Move V0, V3
	044 Move V1, V4
	045 Move V2, V5
	046 Move X1, X31
	047 Call Matrix4x4.MultiplyVector, X0, X1
	048 Move [X19+36], S0
	049 Move [X19+44], S1
	050 Move [X19+44], S2
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return 

Method: System.String ToString()

Disassembly:
	0x039C53B8 ADRP X0, 0x78D000
	0x039C53BC LDR X0, [X0 + 0x9D8]
	0x039C53C0 BL 0x1C16CF4
	0x039C53C4 ADRP X0, 0x78C000
	0x039C53C8 LDR X0, [X0 + 0xE0]
	0x039C53CC BL 0x1C16CF4
	0x039C53D0 ADRP X0, 0x78D000
	0x039C53D4 LDR X0, [X0 + 0x9E0]
	0x039C53D8 BL 0x1C16CF4
	0x039C53DC ADRP X0, 0x755000
	0x039C53E0 LDR X0, [X0 + 0xFC8]
	0x039C53E4 BL 0x1C16CF4
	0x039C53E8 ADRP X0, 0x78D000
	0x039C53EC LDR X0, [X0 + 0x9E8]
	0x039C53F0 BL 0x1C16CF4
	0x039C53F4 ADRP X0, 0x78D000
	0x039C53F8 LDR X0, [X0 + 0x9F0]
	0x039C53FC BL 0x1C16CF4
	0x039C5400 ADRP X0, 0x78D000
	0x039C5404 LDR X0, [X0 + 0x9F8]
	0x039C5408 BL 0x1C16CF4
	0x039C540C ADRP X0, 0x755000
	0x039C5410 LDR X0, [X0 + 0xFD0]
	0x039C5414 BL 0x1C16CF4
	0x039C5418 ADRP X0, 0x755000
	0x039C541C LDR X0, [X0 + 0xFD8]
	0x039C5420 BL 0x1C16CF4
	0x039C5424 ADRP X0, 0x78D000
	0x039C5428 LDR X0, [X0 + 0xA00]
	0x039C542C BL 0x1C16CF4
	0x039C5430 ADRP X0, 0x78D000
	0x039C5434 LDR X0, [X0 + 0xA08]
	0x039C5438 BL 0x1C16CF4
	0x039C543C ADRP X0, 0x759000
	0x039C5440 LDR X0, [X0 + 0xBD0]
	0x039C5444 BL 0x1C16CF4
	0x039C5448 ADRP X0, 0x72F000
	0x039C544C LDR X0, [X0 + 0xC20]
	0x039C5450 BL 0x1C16CF4
	0x039C5454 ADRP X0, 0x78D000
	0x039C5458 LDR X0, [X0 + 0xA10]
	0x039C545C BL 0x1C16CF4
	0x039C5460 ADRP X0, 0x783000
	0x039C5464 LDR X0, [X0 + 0x830]
	0x039C5468 BL 0x1C16CF4
	0x039C546C ADRP X0, 0x72F000
	0x039C5470 LDR X0, [X0 + 0xC28]
	0x039C5474 BL 0x1C16CF4
	0x039C5478 ADRP X0, 0x72F000
	0x039C547C LDR X0, [X0 + 0xC00]
	0x039C5480 BL 0x1C16CF4
	0x039C5484 ADRP X0, 0x72F000
	0x039C5488 LDR X0, [X0 + 0xC30]
	0x039C548C BL 0x1C16CF4
	0x039C5490 ADRP X0, 0x737000
	0x039C5494 LDR X0, [X0 + 0x110]
	0x039C5498 BL 0x1C16CF4
	0x039C549C ADRP X0, 0x755000
	0x039C54A0 LDR X0, [X0 + 0xFE0]
	0x039C54A4 BL 0x1C16CF4
	0x039C54A8 ADRP X0, 0x78D000
	0x039C54AC LDR X0, [X0 + 0xA18]
	0x039C54B0 BL 0x1C16CF4
	0x039C54B4 ADRP X0, 0x730000
	0x039C54B8 LDR X0, [X0 + 0x798]
	0x039C54BC BL 0x1C16CF4
	0x039C54C0 MOVZ W8, 0x1
	0x039C54C4 STRB W8, [X23 + 0xCCE]
	0x039C54C8 LDR X0, [X22]
	0x039C54CC STP X31, X31, [X31 + 0x70]
	0x039C54D0 STR X31, [X31 + 0x80]
	0x039C54D4 STP X31, X31, [X31 + 0x50]
	0x039C54D8 STR X31, [X31 + 0x60]
	0x039C54DC STP X31, X31, [X31 + 0x30]
	0x039C54E0 STR X31, [X31 + 0x40]
	0x039C54E4 BL 0x1C16F10
	0x039C54E8 LDR X1, [X21]
	0x039C54EC MOV X21, X0
	0x039C54F0 BL 0x2DBDE08
	0x039C54F4 LDR X8, [X19 + 0x48]
	0x039C54F8 CBZ X8, 0x39C5928
	0x039C54FC LDR X0, [X8 + 0x68]
	0x039C5500 CBZ X0, 0x39C5928
	0x039C5504 ADRP X8, 0x78D000
	0x039C5508 LDR X8, [X8 + 0xA18]
	0x039C550C ADRP X29, 0x78D000
	0x039C5510 ADRP X23, 0x737000
	0x039C5514 ADRP X24, 0x755000
	0x039C5518 ADRP X27, 0x755000
	0x039C551C ADRP X25, 0x72F000
	0x039C5520 ADRP X28, 0x755000
	0x039C5524 ADRP X26, 0x78D000
	0x039C5528 LDR X29, [X29 + 0x9F8]
	0x039C552C LDR X23, [X23 + 0x110]
	0x039C5530 LDR X24, [X24 + 0xFE0]
	0x039C5534 LDR X27, [X27 + 0xFD0]
	0x039C5538 LDR X25, [X25 + 0xC20]
	0x039C553C LDR X28, [X28 + 0xFC8]
	0x039C5540 LDR X26, [X26 + 0x9F0]
	0x039C5544 LDR X1, [X8]
	0x039C5548 ADD X8, X31, 0x18
	0x039C554C BL 0x301CB58
	0x039C5550 LDUR V0, [X31 + 0x18]
	0x039C5554 LDR X8, [X31 + 0x28]
	0x039C5558 STR V0, [X31 + 0x7]
	0x039C555C STR X8, [X31 + 0x80]
	0x039C5560 LDR X1, [X29]
	0x039C5564 ADD X0, X31, 0x70
	0x039C5568 BL 0x2BC4350
	0x039C556C TBZ X0, 0x0, 0x39C561C
	0x039C5570 LDR X22, [X31 + 0x80]
	0x039C5574 CBZ X22, 0x39C5908
	0x039C5578 LDR X0, [X22 + 0x18]
	0x039C557C CBZ X0, 0x39C590C
	0x039C5580 LDR X2, [X23]
	0x039C5584 MOV X1, X20
	0x039C5588 BL 0x301C318
	0x039C558C TBZ X0, 0x0, 0x39C5560
	0x039C5590 LDR X0, [X22 + 0x58]
	0x039C5594 CBZ X0, 0x39C5938
	0x039C5598 LDR X1, [X24]
	0x039C559C ADD X8, X31, 0x18
	0x039C55A0 BL 0x301CB58
	0x039C55A4 LDUR V0, [X31 + 0x18]
	0x039C55A8 LDR X8, [X31 + 0x28]
	0x039C55AC STR V0, [X31 + 0x5]
	0x039C55B0 STR X8, [X31 + 0x60]
	0x039C55B4 LDR X1, [X27]
	0x039C55B8 ADD X0, X31, 0x50
	0x039C55BC BL 0x2BC4350
	0x039C55C0 TBZ X0, 0x0, 0x39C55DC
	0x039C55C4 CBZ X21, 0x39C55F4
	0x039C55C8 LDR X1, [X31 + 0x60]
	0x039C55CC LDR X2, [X25]
	0x039C55D0 MOV X0, X21
	0x039C55D4 BL 0x2DBEF30

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0xA1D000
	008 Move X21, 0x72F000
	009 Move X22, 0x72F000
	010 Move W8, [X20+3264]
	011 Move X21, [X21+2512]
	012 Move X22, [X22+1440]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x72F000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0x72F000
	022 Move X0, [X0+2704]
	023 Call 0x1C17CF4
	024 Move X0, 0x72F000
	025 Move X0, [X0+1440]
	026 Call 0x1C17CF4
	027 Move X0, 0x78E000
	028 Move X0, [X0+2504]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3264], W8
	032 Move X0, [X21]
	033 Move W1, 5
	034 Call 0x1C17D6C
	035 Move X20, X0
	036 Move W8, [X19+8]
	037 Move X9, [X19]
	038 Move X0, [X22]
	039 Add X1, X31, 48
	040 Move [X31+56], W8
	041 Move [X31+48], X9
	042 Call 0x1C17E04
	043 Compare X20, 0
	044 JumpIfEqual {151}
	045 Move X21, X0
	046 Compare X0, 0
	047 JumpIfEqual {54}
	048 Move X8, [X20]
	049 Move X0, X21
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {148}
	054 Move W8, [X20+24]
	055 Compare W8, 0
	056 JumpIfEqual {147}
	057 Move [X20+32], X21
	058 Move W8, [X19+20]
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X0, [X22]
	061 Add X1, X31, 32
	062 Move [X31+40], W8
	063 Move [X31+32], X9
	064 Call 0x1C17E04
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X20]
	069 Move X0, X21
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {148}
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X20+40], X21
	077 Move W8, [X19+32]
	078 Move X9, [X19+24]
	079 Move X0, [X22]
	080 Add X1, X31, 16
	081 Move [X31+24], W8
	082 Move [X31+16], X9
	083 Call 0x1C17E04
	084 Move X21, X0
	085 Compare X0, 0
	086 JumpIfEqual {93}
	087 Move X8, [X20]
	088 Move X0, X21
	089 Move X1, [X8+64]
	090 Call 0x1C17E00
	091 Compare X0, 0
	092 JumpIfEqual {148}
	093 Move W8, [X20+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X20+48], X21
	096 Move W8, [X19+44]
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Move X0, [X22]
	099 Add X1, X31, 0
	100 Move [X31+8], W8
	101 Move [X31], X9
	102 Call 0x1C17E04
	103 Move X21, X0
	104 Compare X0, 0
	105 JumpIfEqual {112}
	106 Move X8, [X20]
	107 Move X0, X21
	108 Move X1, [X8+64]
	109 Call 0x1C17E00
	110 Compare X0, 0
	111 JumpIfEqual {148}
	112 Move W8, [X20+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X8, 0x72F000
	115 Move X8, [X8+2704]
	116 Move [X20+56], X21
	117 Move V0, [X19+48]
	118 Add X1, X31, 76
	119 Move X0, [X8]
	120 Move [X31+76], S0
	121 Call 0x1C17E04
	122 Move X19, X0
	123 Compare X0, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X0, X19
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {148}
	131 Move W8, [X20+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, 0x78E000
	134 Move X8, [X8+2504]
	135 Move [X20+64], X19
	136 Move X1, X20
	137 Move X2, X31
	138 Move X0, [X8]
	139 Call String.Format, X0, X1
	140 Move X20, [X31+96]
	141 Move X19, [X31+104]
	142 Move X22, [X31+80]
	143 Move X21, [X31+88]
	144 Move X30, [X31+64]
	145 Add X31, X31, 112
	146 Return X0
	147 Call 0x1C17F28
	148 Call 0x1C17F44
	149 Move X1, X31
	150 Call 0x1C17DEC
	151 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.Rendering.ProbeReferenceVolume/Volume other)

Disassembly:
	0x039C55D8 B 0x39C55B4
	0x039C55DC MOV X22, X31
	0x039C55E0 LDR X1, [X28]
	0x039C55E4 ADD X0, X31, 0x50
	0x039C55E8 BL 0x2BC434C
	0x039C55EC CBZ X22, 0x39C5560
	0x039C55F0 B 0x39C593C
	0x039C55F4 BL 0x1C16F20
	0x039C55F8 B 0x39C5954
	0x039C55FC B 0x39C5604
	0x039C5600 B 0x39C5604
	0x039C5604 CMP W1, 0x1
	0x039C5608 B.NE 0x39C58DC
	0x039C560C BL 0x3EB1AD0
	0x039C5610 LDR X22, [X0]
	0x039C5614 BL 0x3EB1AE0
	0x039C5618 B 0x39C55E0
	0x039C561C ADRP X8, 0x78D000
	0x039C5620 LDR X8, [X8 + 0x9E0]
	0x039C5624 ADD X0, X31, 0x70
	0x039C5628 LDR X1, [X8]
	0x039C562C BL 0x2BC434C
	0x039C5630 ADRP X25, 0x759000
	0x039C5634 LDR X25, [X25 + 0xBD0]
	0x039C5638 LDR X8, [X19 + 0x10]
	0x039C563C CBZ X8, 0x39C5928
	0x039C5640 LDR X8, [X8 + 0xF0]
	0x039C5644 CBZ X8, 0x39C5928
	0x039C5648 CBZ X21, 0x39C5928
	0x039C564C LDR X1, [X8 + 0x70]
	0x039C5650 ADRP X8, 0x783000
	0x039C5654 LDR X8, [X8 + 0x830]
	0x039C5658 MOV X0, X21
	0x039C565C LDR X2, [X8]
	0x039C5660 BL 0x2DBE67C
	0x039C5664 LDR X8, [X19 + 0x10]
	0x039C5668 CBZ X8, 0x39C5928
	0x039C566C LDR X0, [X8 + 0x1E0]
	0x039C5670 MOV X1, X20
	0x039C5674 MOV X2, X31
	0x039C5678 BL 0x321BA08
	0x039C567C TBZ X0, 0x0, 0x39C56C0
	0x039C5680 LDR X8, [X19 + 0x10]
	0x039C5684 CBZ X8, 0x39C5928
	0x039C5688 LDR X9, [X8 + 0x1D0]
	0x039C568C CBZ X9, 0x39C5928
	0x039C5690 LDR W10, [X21 + 0x20]
	0x039C5694 LDR W9, [X9 + 0x18]
	0x039C5698 ADD W10, W10, 0x1
	0x039C569C CMP W10, W9
	0x039C56A0 B.NE 0x39C56C0
	0x039C56A4 LDR X9, [X8 + 0xF0]
	0x039C56A8 CBZ X9, 0x39C5928
	0x039C56AC LDR X0, [X8 + 0x1E8]
	0x039C56B0 LDR X1, [X9 + 0x70]
	0x039C56B4 MOV X2, X31
	0x039C56B8 BL 0x321BA08
	0x039C56BC TBNZ X0, 0x0, 0x39C58BC
	0x039C56C0 LDR X8, [X19 + 0x10]
	0x039C56C4 CBZ X8, 0x39C5928
	0x039C56C8 ADRP X10, 0x78D000
	0x039C56CC LDR W9, [X21 + 0x20]
	0x039C56D0 LDR X10, [X10 + 0x9D0]
	0x039C56D4 ADD X0, X8, 0x1D0
	0x039C56D8 ADD W1, W9, 0x1

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X1]
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move X8, -49131520
	006 Subtract S1, S0, S1
	007 Move V0, [X8+3872]
	008 Subtract V2, V2, V3
	009 Multiply S1, S1, S1
	010 NotImplemented "Instruction INVALID not yet implemented."
	011 Add S1, S1, S2
	012 Move S2, V2.S[1]
	013 Add S1, S2, S1
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 Move V1, [X0+12]
	016 Move V2, [X0+16]
	017 Move V3, [X1+12]
	018 Move V4, [X1+16]
	019 Subtract S1, S1, S3
	020 Subtract V2, V2, V4
	021 Multiply S1, S1, S1
	022 NotImplemented "Instruction INVALID not yet implemented."
	023 Add S1, S1, S2
	024 Move S2, V2.S[1]
	025 Add S1, S2, S1
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 Move V1, [X0+24]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move V3, [X1+24]
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Subtract S1, S1, S3
	032 Subtract V2, V2, V4
	033 Multiply S1, S1, S1
	034 NotImplemented "Instruction INVALID not yet implemented."
	035 Add S1, S1, S2
	036 Move S2, V2.S[1]
	037 Add S1, S2, S1
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move V1, [X0+36]
	040 Move V2, [X0+40]
	041 Move V3, [X1+36]
	042 Move V4, [X1+40]
	043 Subtract S1, S1, S3
	044 Subtract V2, V2, V4
	045 Multiply S1, S1, S1
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 Add S1, S1, S2
	048 Move S2, V2.S[1]
	049 Add S1, S2, S1
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move V0, [X0+52]
	052 Move V1, [X1+52]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move V0, [X0+48]
	055 Move V1, [X1+48]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Return X0
	059 Move W0, W31
	060 Return X0

