Type: UnityEngine.Rendering.DynamicArrayExtensions

Method: System.Int32 Partition(T[] data, System.Int32 left, System.Int32 right)

Disassembly:
	0x021B0778 MOV X1, X23
	0x021B077C MOV X2, X22
	0x021B0780 BL 0x3EB1AC0
	0x021B0784 LDR X8, [X24 + 0x28]
	0x021B0788 LDUR X9, [X29 - 0x8]
	0x021B078C CMP X8, X9
	0x021B0790 B.NE 0x21B07AC
	0x021B0794 ADD X31, X29, 0x0
	0x021B0798 LDP X20, X19, [X31 + 0x30]
	0x021B079C LDP X22, X21, [X31 + 0x20]
	0x021B07A0 LDP X24, X23, [X31 + 0x10]
	0x021B07A4 LDP X29, X30, [X31], #0x40
	0x021B07A8 RET
	0x021B07AC BL 0x3EB1B20
	0x021B07B0 SUB X31, X31, 0x60
	0x021B07B4 STR X30, [X31 + 0x30]
	0x021B07B8 STP X22, X21, [X31 + 0x40]
	0x021B07BC STP X20, X19, [X31 + 0x50]
	0x021B07C0 LDR X8, [X2 + 0x38]
	0x021B07C4 MOV X19, X2
	0x021B07C8 MOV W21, W1
	0x021B07CC MOV X20, X0
	0x021B07D0 CBNZ X8, 0x21B0800
	0x021B07D4 ADRP X0, 0x1F43000
	0x021B07D8 LDR X0, [X0 + 0xDF8]
	0x021B07DC BL 0x1C16CF4
	0x021B07E0 ADRP X0, 0x1F43000
	0x021B07E4 LDR X0, [X0 + 0x6C0]
	0x021B07E8 BL 0x1C16CF4
	0x021B07EC LDR X8, [X19 + 0x38]
	0x021B07F0 CBNZ X8, 0x21B0800
	0x021B07F4 MOV X0, X19
	0x021B07F8 BL 0x1C5C6E0
	0x021B07FC LDR X8, [X19 + 0x38]
	0x021B0800 STR X31, [X31]
	0x021B0804 ADRP X10, 0x1F43000
	0x021B0808 LDR X10, [X10 + 0x6C0]
	0x021B080C MOVZ W9, 0x1
	0x021B0810 MOVI V0.2D, 0x0
	0x021B0814 STRB W9, [X31 + 0x8]
	0x021B0818 LDR X0, [X10]
	0x021B081C STUR V0, [X31 + 0x9]
	0x021B0820 STUR V0, [X31 + 0x19]
	0x021B0824 STR X31, [X31 + 0x28]
	0x021B0828 LDR W9, [X0 + 0xE0]
	0x021B082C LDR X22, [X8]
	0x021B0830 CBNZ W9, 0x21B0838
	0x021B0834 BL 0x1C16DFC
	0x021B0838 MOV X0, X22
	0x021B083C MOV X1, X31
	0x021B0840 BL 0x338C698
	0x021B0844 ADRP X8, 0x1F43000
	0x021B0848 LDR X8, [X8 + 0xDF8]
	0x021B084C MOV X22, X0
	0x021B0850 LDR X8, [X8]
	0x021B0854 LDR W9, [X8 + 0xE0]
	0x021B0858 CBNZ W9, 0x21B0864
	0x021B085C MOV X0, X8
	0x021B0860 BL 0x1C16DFC
	0x021B0864 AND W2, W21, 0x1
	0x021B0868 ADD X3, X31, 0x0
	0x021B086C MOV X0, X22
	0x021B0870 MOV X1, X20
	0x021B0874 MOV X4, X31
	0x021B0878 BL 0x33AF2E0
	0x021B087C TBZ X0, 0x0, 0x21B08D8
	0x021B0880 LDR X8, [X19 + 0x38]
	0x021B0884 LDR X19, [X31]
	0x021B0888 LDR X1, [X8 + 0x8]
	0x021B088C LDRB W8, [X1 + 0x135]
	0x021B0890 TBNZ X8, 0x0, 0x21B08A0
	0x021B0894 MOV X0, X1
	0x021B0898 BL 0x1C5C684
	0x021B089C MOV X1, X0
	0x021B08A0 CBZ X19, 0x21B08EC
	0x021B08A4 LDR X8, [X19]
	0x021B08A8 LDR X9, [X1 + 0x40]
	0x021B08AC MOV X0, X19
	0x021B08B0 LDR X8, [X8 + 0x40]
	0x021B08B4 CMP X8, X9
	0x021B08B8 B.NE 0x21B08F0
	0x021B08BC BL 0x1C16E08
	0x021B08C0 LDR W0, [X0]
	0x021B08C4 LDP X20, X19, [X31 + 0x50]
	0x021B08C8 LDP X22, X21, [X31 + 0x40]
	0x021B08CC LDR X30, [X31 + 0x30]
	0x021B08D0 ADD X31, X31, 0x60
	0x021B08D4 RET
	0x021B08D8 ADD X0, X31, 0x0
	0x021B08DC MOV X1, X31
	0x021B08E0 BL 0x33AF934
	0x021B08E4 MOV X1, X19
	0x021B08E8 BL 0x1C16DEC
	0x021B08EC BL 0x1C16F20
	0x021B08F0 BL 0x1C171E0
	0x021B08F4 SUB X31, X31, 0x70
	0x021B08F8 STR X30, [X31 + 0x30]
	0x021B08FC STP X24, X23, [X31 + 0x40]
	0x021B0900 STP X22, X21, [X31 + 0x50]
	0x021B0904 STP X20, X19, [X31 + 0x60]
	0x021B0908 LDR X8, [X3 + 0x38]
	0x021B090C MOV X20, X3
	0x021B0910 MOV X19, X2
	0x021B0914 MOV W23, W1
	0x021B0918 MOV X22, X0
	0x021B091C CBNZ X8, 0x21B094C
	0x021B0920 ADRP X0, 0x1F43000
	0x021B0924 LDR X0, [X0 + 0xDF8]
	0x021B0928 BL 0x1C16CF4
	0x021B092C ADRP X0, 0x1F43000
	0x021B0930 LDR X0, [X0 + 0x6C0]
	0x021B0934 BL 0x1C16CF4
	0x021B0938 LDR X8, [X20 + 0x38]
	0x021B093C CBNZ X8, 0x21B094C
	0x021B0940 MOV X0, X20
	0x021B0944 BL 0x1C5C6E0
	0x021B0948 LDR X8, [X20 + 0x38]
	0x021B094C ADRP X11, 0x1F43000
	0x021B0950 LDR X9, [X8 + 0x8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X3+56]
	012 Move X19, X3
	013 Move W23, W2
	014 Move W20, W1
	015 Move X21, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Compare X21, 0
	021 JumpIfEqual {132}
	022 Move X8, [X21+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X21, W20
	026 Move X22, [X8+32]
	027 Add W23, W23, 1
	028 Add X26, X21, W20
	029 Add X26, X26, 32
	030 Move X24, [X26]
	031 Compare X24, 0
	032 JumpIfEqual {132}
	033 Move X8, [X19+56]
	034 Move X1, [X8+16]
	035 Move W8, [X1+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {43}
	040 Move X0, X1
	041 Call 0x1C5D684
	042 Move X1, X0
	043 Move X8, [X24]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move X0, X24
	054 Move W2, W31
	055 Call 0x1C5D788
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Add X8, X8, X9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X2, [X0+8]
	061 Move X0, X24
	062 Move X1, X22
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move TEMP, X0
	065 And TEMP, TEMP, -2147483648
	066 Compare TEMP, -2147483648
	067 JumpIfNotEqual {71}
	068 Move W8, [X21+24]
	069 Add W20, W20, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X21+24]
	072 Subtract W23, W23, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X27, X21, W23
	075 Add X27, X27, 32
	076 Move X25, [X27]
	077 Compare X25, 0
	078 JumpIfEqual {132}
	079 Move X8, [X19+56]
	080 Move X1, [X8+16]
	081 Move W8, [X1+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X1
	087 Call 0x1C5D684
	088 Move X1, X0
	089 Move X8, [X25]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {99}
	093 Move X10, [X8+176]
	094 Add X10, X10, 8
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X9, X9, 1
	098 Add X10, X10, 16
	099 Move X0, X25
	100 Move W2, W31
	101 Call 0x1C5D788
	102 NotImplemented "Instruction LDRSW not yet implemented."
	103 Add X8, X8, X9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X2, [X0+8]
	107 Move X0, X25
	108 Move X1, X22
	109 NotImplemented "Instruction BLR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, [X21+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X27], X24
	116 Add W20, W20, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X26], X25
	119 Call 0x1C17F28
	120 Move W0, W23
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X26, [X31+16]
	128 Move X25, [X31+24]
	129 Move X30, [X31+80]
	130 Move X27, [X31+88]
	131 Return X0
	132 Call 0x1C17F20

Method: System.Void QuickSort(T[] data, System.Int32 left, System.Int32 right)

Disassembly:
	0x021B0E74 LDR W1, [X19 + 0x9C]
	0x021B0E78 MOV X0, X20
	0x021B0E7C MOV X2, X31
	0x021B0E80 BL 0x3D0CEF4
	0x021B0E84 TBZ X0, 0x0, 0x21B0EA8
	0x021B0E88 MOV X0, X20
	0x021B0E8C MOV X1, X31
	0x021B0E90 BL 0x3D0CF9C
	0x021B0E94 MOV X0, X19
	0x021B0E98 LDP X20, X19, [X31 + 0x10]
	0x021B0E9C MOV X1, X31
	0x021B0EA0 LDR X30, [X31], #0x20
	0x021B0EA4 B 0x3D9D950
	0x021B0EA8 LDP X20, X19, [X31 + 0x10]
	0x021B0EAC LDR X30, [X31], #0x20
	0x021B0EB0 RET
	0x021B0EB4 BL 0x1C16F20
	0x021B0EB8 STR X30, [X31 - 0x40]!
	0x021B0EBC STP X24, X23, [X31 + 0x10]
	0x021B0EC0 STP X22, X21, [X31 + 0x20]
	0x021B0EC4 STP X20, X19, [X31 + 0x30]
	0x021B0EC8 LDR X8, [X3 + 0x38]
	0x021B0ECC MOV X20, X3
	0x021B0ED0 MOV X23, X2
	0x021B0ED4 MOV X22, X1
	0x021B0ED8 MOV X19, X0
	0x021B0EDC CBNZ X8, 0x21B0F08
	0x021B0EE0 ADRP X0, 0x1F43000
	0x021B0EE4 LDR X0, [X0 + 0xE00]
	0x021B0EE8 BL 0x1C16CF4
	0x021B0EEC ADRP X0, 0x1F43000
	0x021B0EF0 LDR X0, [X0 + 0xE18]
	0x021B0EF4 BL 0x1C16CF4
	0x021B0EF8 LDR X8, [X20 + 0x38]
	0x021B0EFC CBNZ X8, 0x21B0F08
	0x021B0F00 MOV X0, X20
	0x021B0F04 BL 0x1C5C6E0
	0x021B0F08 CBZ X19, 0x21B1108

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X3
	008 Move W19, W2
	009 Move W22, W1
	010 Move X21, X0
	011 Move X8, [X20+56]
	012 Compare X8, 0
	013 JumpIfNotEqual {16}
	014 Move X0, X20
	015 Call 0x1C5D6E0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X8, [X20+56]
	018 Move X0, X21
	019 Move W1, W22
	020 Move W2, W19
	021 Move X3, [X8+8]
	022 Call 0x21B0778, X0, X1, X2
	023 Move W23, W0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X20+56]
	026 Move X0, X21
	027 Move W1, W22
	028 Move W2, W23
	029 Move X3, [X8+16]
	030 Call 0x21B0E74, X0, X1, X2
	031 Add W22, W23, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X20+56]
	034 Move X20, [X8+16]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return 

Method: System.Void QuickSort(UnityEngine.Rendering.DynamicArray`1<T> array)

Disassembly:
	0x021B0D8C MOV X0, X1
	0x021B0D90 BL 0x1C5C684
	0x021B0D94 MOV X1, X0
	0x021B0D98 CBZ X23, 0x21B0E44
	0x021B0D9C LDR X8, [X23]
	0x021B0DA0 LDR X9, [X1 + 0x40]
	0x021B0DA4 LDR X8, [X8 + 0x40]
	0x021B0DA8 CMP X8, X9
	0x021B0DAC B.NE 0x21B0E3C
	0x021B0DB0 MOV X0, X23
	0x021B0DB4 BL 0x1C16E08
	0x021B0DB8 MOV X1, X0
	0x021B0DBC MOV X0, X20
	0x021B0DC0 MOV X2, X21
	0x021B0DC4 BL 0x3EB1AC0
	0x021B0DC8 LDR X8, [X19 + 0x38]
	0x021B0DCC LDR X1, [X8 + 0x8]
	0x021B0DD0 ADD X8, X1, 0x135
	0x021B0DD4 LDRH W8, [X8]
	0x021B0DD8 TBNZ X8, 0x0, 0x21B0DF4
	0x021B0DDC MOV X0, X1
	0x021B0DE0 BL 0x1C5C684
	0x021B0DE4 LDR X8, [X19 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {28}
	013 Move X8, [X19+56]
	014 Move W9, [X20+24]
	015 Move X0, [X20+16]
	016 Move W1, W31
	017 Move X3, [X8+40]
	018 Subtract W2, W9, 1
	019 Call 0x21B0E74, X0, X1, X2
	020 Move X8, [X19+56]
	021 Move X0, X20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X1, [X8+48]
	025 Move X30, [X31+32]
	026 Call 0x2B41248, X0
	027 Return 
	028 Call 0x1C17F20

