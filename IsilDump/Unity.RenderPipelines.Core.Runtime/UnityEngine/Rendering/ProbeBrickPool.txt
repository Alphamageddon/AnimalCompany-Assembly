Type: UnityEngine.Rendering.ProbeBrickPool

Method: System.Int32 get_estimatedVMemCost()

Disassembly:
	0x039B7B0C MOV W2, W31
	0x039B7B10 MOV W3, W26

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_estimatedVMemCost(System.Int32 value)

Disassembly:
	0x039B7B14 MOV W4, W19
	0x039B7B18 MOV W5, W21

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Void .ctor(UnityEngine.Rendering.ProbeVolumeTextureMemoryBudget memoryBudget, UnityEngine.Rendering.ProbeVolumeSHBands shBands, System.Boolean allocateValidityData = True)

Disassembly:
	0x039B7B1C STR X31, [X31 + 0x20]
	0x039B7B20 STR W20, [X31 + 0x18]
	0x039B7B24 STR W29, [X31 + 0x10]
	0x039B7B28 STR W31, [X31 + 0x8]
	0x039B7B2C STR W23, [X31]
	0x039B7B30 BL 0x3C0EE34
	0x039B7B34 LDR X0, [X25 + 0x28]
	0x039B7B38 LDR X7, [X24 + 0x40]
	0x039B7B3C MOVZ W6, 0x4
	0x039B7B40 MOV W1, W22
	0x039B7B44 MOV W2, W31
	0x039B7B48 MOV W3, W26
	0x039B7B4C MOV W4, W19
	0x039B7B50 MOV W5, W21
	0x039B7B54 STR X31, [X31 + 0x20]
	0x039B7B58 STR W20, [X31 + 0x18]
	0x039B7B5C STR W29, [X31 + 0x10]
	0x039B7B60 STR W31, [X31 + 0x8]
	0x039B7B64 STR W23, [X31]
	0x039B7B68 BL 0x3C0EE34
	0x039B7B6C LDR X0, [X25 + 0x30]
	0x039B7B70 LDR X7, [X24 + 0x48]
	0x039B7B74 MOVZ W6, 0x4
	0x039B7B78 MOV W1, W22
	0x039B7B7C MOV W2, W31
	0x039B7B80 MOV W3, W26
	0x039B7B84 MOV W4, W19
	0x039B7B88 MOV W5, W21
	0x039B7B8C STR X31, [X31 + 0x20]
	0x039B7B90 STR W20, [X31 + 0x18]
	0x039B7B94 STR W29, [X31 + 0x10]
	0x039B7B98 STR W31, [X31 + 0x8]
	0x039B7B9C STR W23, [X31]
	0x039B7BA0 BL 0x3C0EE34
	0x039B7BA4 ADD W27, W27, 0x1
	0x039B7BA8 CMP W27, 0x4
	0x039B7BAC B.NE 0x39B7930
	0x039B7BB0 LDP X21, X20, [X31 + 0x28]
	0x039B7BB4 LDR W19, [X31 + 0x40]
	0x039B7BB8 ADRP X22, 0x79B000
	0x039B7BBC LDR W8, [X21 + 0x18]
	0x039B7BC0 LDR X22, [X22 + 0xE0]
	0x039B7BC4 ADD W19, W19, 0x1
	0x039B7BC8 CMP W19, W8
	0x039B7BCC B.LT 0x39B78E4
	0x039B7BD0 LDP X20, X19, [X31 + 0xB0]
	0x039B7BD4 LDP X22, X21, [X31 + 0xA0]
	0x039B7BD8 LDP X24, X23, [X31 + 0x90]
	0x039B7BDC LDP X26, X25, [X31 + 0x80]
	0x039B7BE0 LDP X28, X27, [X31 + 0x70]
	0x039B7BE4 LDP X29, X30, [X31 + 0x60]
	0x039B7BE8 ADD X31, X31, 0xC0
	0x039B7BEC RET
	0x039B7BF0 BL 0x1C16F20
	0x039B7BF4 SUB X31, X31, 0xB0
	0x039B7BF8 STP X29, X30, [X31 + 0x50]
	0x039B7BFC STP X28, X27, [X31 + 0x60]
	0x039B7C00 STP X26, X25, [X31 + 0x70]
	0x039B7C04 STP X24, X23, [X31 + 0x80]
	0x039B7C08 STP X22, X21, [X31 + 0x90]
	0x039B7C0C STP X20, X19, [X31 + 0xA0]
	0x039B7C10 ADRP X19, 0xA2A000
	0x039B7C14 LDRB W8, [X19 + 0xC72]
	0x039B7C18 MOV X20, X3
	0x039B7C1C MOV X21, X2
	0x039B7C20 MOV X22, X1
	0x039B7C24 STR W4, [X31 + 0x40]
	0x039B7C28 STR X0, [X31 + 0x48]
	0x039B7C2C TBNZ X8, 0x0, 0x39B7C5C
	0x039B7C30 ADRP X0, 0x740000
	0x039B7C34 LDR X0, [X0 + 0x2C8]
	0x039B7C38 BL 0x1C16CF4
	0x039B7C3C ADRP X0, 0x79B000
	0x039B7C40 LDR X0, [X0 + 0xD0]
	0x039B7C44 BL 0x1C16CF4
	0x039B7C48 ADRP X0, 0x79B000
	0x039B7C4C LDR X0, [X0 + 0xE0]
	0x039B7C50 BL 0x1C16CF4
	0x039B7C54 MOVZ W8, 0x1
	0x039B7C58 STRB W8, [X19 + 0xC72]
	0x039B7C5C CBZ X21, 0x39B7D84
	0x039B7C60 LDR W8, [X21 + 0x18]
	0x039B7C64 CMP W8, 0x1
	0x039B7C68 B.LT 0x39B7D64
	0x039B7C6C ADRP X23, 0x79B000
	0x039B7C70 LDR X23, [X23 + 0xE0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X26, 0xA2B000
	012 Move X25, 0x79C000
	013 Move X23, 0x79C000
	014 Move X24, 0x79C000
	015 Move W8, [X26+3179]
	016 Move X25, [X25+432]
	017 Move X23, [X23+440]
	018 Move X24, [X24+448]
	019 Move W22, W3
	020 Move W20, W2
	021 Move W21, W1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x79C000
	028 Move X0, [X0+440]
	029 Call 0x1C17CF4
	030 Move X0, 0x79C000
	031 Move X0, [X0+432]
	032 Call 0x1C17CF4
	033 Move X0, 0x79C000
	034 Move X0, [X0+448]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X26+3179], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Move [X31+92], W31
	041 Call Object..ctor, X0
	042 And W22, W22, 1
	043 Move [X19+112], W31
	044 Move [X19+104], X31
	045 Move [X19+132], W20
	046 Move [X19+136], W22
	047 Move X0, [X25]
	048 Call 0x1C17F10
	049 Move X2, [X23]
	050 Move W1, 256
	051 Move X23, X0
	052 Call Stack`1<BrickChunkAlloc>..ctor, X0, X1
	053 Move [X19+120], X23
	054 Move X3, [X24]
	055 Multiply W8, W21, W21
	056 Move W0, W8
	057 ShiftRight W0, 30
	058 And W0, W0, 0x1FFFFFFF
	059 Add X8, X31, 0
	060 Add X6, X31, 92
	061 Move W4, 1
	062 Move W1, W31
	063 Move W2, W20
	064 Move W5, W22
	065 Call ProbeBrickPool.CreateDataLocation, X0, X1, X2, X3, X4, X5, X6
	066 Add X0, X19, 24
	067 Add X1, X31, 0
	068 Move W2, 80
	069 Call 0x3EB2AC0
	070 Move W8, [X31+92]
	071 Move W9, [X19+88]
	072 Move W10, [X19+92]
	073 Move W11, [X19+96]
	074 Move X22, [X31+128]
	075 Move X21, [X31+136]
	076 Move [X19+16], W8
	077 Add W8, W9, 511
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Add W9, W10, 3
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Add W10, W11, 3
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction SBFM not yet implemented."
	086 NotImplemented "Instruction SBFM not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Multiply W8, W9, W8
	089 NotImplemented "Instruction SBFM not yet implemented."
	090 Multiply W8, W8, W9
	091 Move [X19+128], W8
	092 Move X20, [X31+144]
	093 Move X19, [X31+152]
	094 Move X24, [X31+112]
	095 Move X23, [X31+120]
	096 Move X26, [X31+96]
	097 Move X25, [X31+104]
	098 Move X30, [X31+80]
	099 Add X31, X31, 160
	100 Return 

Method: System.Int32 GetRemainingChunkCount()

Disassembly:
	0x039B8040 LDR X0, [X19]
	0x039B8044 ADRP X20, 0x73B000

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void EnsureTextureValidity()

Disassembly:
	0x039B8048 LDR W8, [X0 + 0xE0]
	0x039B804C LDR X20, [X20 + 0x598]
	0x039B8050 CBNZ W8, 0x39B805C
	0x039B8054 BL 0x1C16DFC
	0x039B8058 LDR X0, [X19]
	0x039B805C LDR X8, [X20]
	0x039B8060 LDR X9, [X0 + 0xB8]
	0x039B8064 LDR W10, [X8 + 0xE0]
	0x039B8068 LDR X19, [X9]
	0x039B806C CBNZ W10, 0x39B8078
	0x039B8070 MOV X0, X8
	0x039B8074 BL 0x1C16DFC
	0x039B8078 MOV X0, X19
	0x039B807C LDP X20, X19, [X31 + 0x10]
	0x039B8080 MOV X1, X31
	0x039B8084 MOV X2, X31
	0x039B8088 LDR X30, [X31], #0x20
	0x039B808C B 0x3C354F8
	0x039B8090 STP X30, X21, [X31 - 0x20]!
	0x039B8094 STP X20, X19, [X31 + 0x10]
	0x039B8098 ADRP X21, 0xA29000
	0x039B809C ADRP X20, 0x79A000
	0x039B80A0 LDRB W8, [X21 + 0xC77]
	0x039B80A4 LDR X20, [X20 + 0x260]
	0x039B80A8 MOV X19, X0
	0x039B80AC TBNZ X8, 0x0, 0x39B80DC
	0x039B80B0 ADRP X0, 0x73B000
	0x039B80B4 LDR X0, [X0 + 0x598]
	0x039B80B8 BL 0x1C16CF4
	0x039B80BC ADRP X0, 0x79A000
	0x039B80C0 LDR X0, [X0 + 0x260]
	0x039B80C4 BL 0x1C16CF4
	0x039B80C8 ADRP X0, 0x79A000
	0x039B80CC LDR X0, [X0 + 0x268]
	0x039B80D0 BL 0x1C16CF4
	0x039B80D4 MOVZ W8, 0x1
	0x039B80D8 STRB W8, [X21 + 0xC77]
	0x039B80DC LDR X0, [X20]
	0x039B80E0 LDR X21, [X19 + 0x28]
	0x039B80E4 ADRP X19, 0x73B000
	0x039B80E8 LDR W8, [X0 + 0xE0]
	0x039B80EC LDR X19, [X19 + 0x598]
	0x039B80F0 CBNZ W8, 0x39B80FC
	0x039B80F4 BL 0x1C16DFC
	0x039B80F8 LDR X0, [X20]
	0x039B80FC LDR X8, [X0 + 0xB8]
	0x039B8100 STR X21, [X8]
	0x039B8104 LDR X8, [X20]
	0x039B8108 LDR X0, [X19]
	0x039B810C LDR X8, [X8 + 0xB8]
	0x039B8110 LDR W9, [X0 + 0xE0]
	0x039B8114 LDR X19, [X8]
	0x039B8118 CBNZ W9, 0x39B8120
	0x039B811C BL 0x1C16DFC
	0x039B8120 MOV X0, X19
	0x039B8124 MOV X1, X31
	0x039B8128 BL 0x3C38948

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X20, 0xA2A000
	008 Move X22, 0x73C000
	009 Move W8, [X20+3180]
	010 Move X22, [X22+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x73C000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x79B000
	020 Move X0, [X0+448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3180], W8
	024 Move [X31+92], W31
	025 Move X20, X19
	026 Add X20, X20, 24
	027 Move X21, [X20]
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {64}
	041 Move X0, X20
	042 Call DataLocation.Cleanup, X0
	043 Move X11, 0x79B000
	044 Move W8, [X19+88]
	045 Move W9, [X19+92]
	046 Move W10, [X19+96]
	047 Move W2, [X19+132]
	048 Move W5, [X19+136]
	049 Move X11, [X11+448]
	050 Multiply W8, W9, W8
	051 Multiply W0, W8, W10
	052 Add X8, X31, 0
	053 Move X3, [X11]
	054 Add X6, X31, 92
	055 Move W4, 1
	056 Move W1, W31
	057 Call ProbeBrickPool.CreateDataLocation, X0, X1, X2, X3, X4, X5, X6
	058 Add X1, X31, 0
	059 Move W2, 80
	060 Move X0, X20
	061 Call 0x3EB2AC0
	062 Move W8, [X31+92]
	063 Move [X19+16], W8
	064 Move X20, [X31+112]
	065 Move X19, [X31+120]
	066 Move X22, [X31+96]
	067 Move X21, [X31+104]
	068 Move X30, [X31+80]
	069 Add X31, X31, 128
	070 Return 

Method: System.Int32 GetChunkSizeInBrickCount()

Disassembly:
	0x039B81EC LDR W0, [X8 + 0x58]
	0x039B81F0 LDR X30, [X31], #0x10

ISIL:
	001 Move W0, 128
	002 Return X0

Method: System.Int32 GetChunkSizeInProbeCount()

Disassembly:
	0x039B81F4 RET
	0x039B81F8 BL 0x1C16F20

ISIL:
	001 Move W0, 0x2000
	002 Return X0

Method: System.Int32 GetPoolWidth()

Disassembly:
	0x039B81FC STR X30, [X31 - 0x10]!
	0x039B8200 LDR X8, [X0 + 0x20]

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Int32 GetPoolHeight()

Disassembly:
	0x039B8204 CBZ X8, 0x39B8214
	0x039B8208 LDR W0, [X8 + 0x5C]

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: UnityEngine.Vector3Int GetPoolDimensions()

Disassembly:
	0x039B820C LDR X30, [X31], #0x10
	0x039B8210 RET
	0x039B8214 BL 0x1C16F20

ISIL:
	001 Move W1, [X0+96]
	002 Move X0, [X0+88]
	003 Return X0

Method: System.Void GetRuntimeResources(ref UnityEngine.Rendering.ProbeReferenceVolume/RuntimeResources rr)

Disassembly:
	0x039B8218 STR X30, [X31 - 0x10]!
	0x039B821C LDR X8, [X0 + 0x20]
	0x039B8220 CBZ X8, 0x39B8230
	0x039B8224 LDR W0, [X8 + 0x60]
	0x039B8228 LDR X30, [X31], #0x10
	0x039B822C RET
	0x039B8230 BL 0x1C16F20
	0x039B8234 STP X30, X21, [X31 - 0x20]!
	0x039B8238 STP X20, X19, [X31 + 0x10]
	0x039B823C MOV W20, W1
	0x039B8240 MOV X1, X31
	0x039B8244 MOV W19, W2
	0x039B8248 MOV X21, X0
	0x039B824C BL 0x33BDD8C
	0x039B8250 STP W20, W19, [X21 + 0x30]
	0x039B8254 LDP X20, X19, [X31 + 0x10]
	0x039B8258 LDP X30, X21, [X31], #0x20
	0x039B825C RET
	0x039B8260 STP X30, X23, [X31 - 0x30]!
	0x039B8264 STP X22, X21, [X31 + 0x10]
	0x039B8268 STP X20, X19, [X31 + 0x20]
	0x039B826C ADRP X20, 0xA29000
	0x039B8270 LDRB W8, [X20 + 0xC78]
	0x039B8274 MOV X19, X0
	0x039B8278 TBNZ X8, 0x0, 0x39B829C
	0x039B827C ADRP X0, 0x79A000
	0x039B8280 LDR X0, [X0 + 0x270]
	0x039B8284 BL 0x1C16CF4
	0x039B8288 ADRP X0, 0x796000
	0x039B828C LDR X0, [X0 + 0x48]
	0x039B8290 BL 0x1C16CF4
	0x039B8294 MOVZ W8, 0x1
	0x039B8298 STRB W8, [X20 + 0xC78]
	0x039B829C LDR X8, [X19 + 0x20]
	0x039B82A0 CBNZ X8, 0x39B8354
	0x039B82A4 ADRP X23, 0x79A000
	0x039B82A8 LDP W20, W21, [X19 + 0x30]
	0x039B82AC LDR X23, [X23 + 0x270]
	0x039B82B0 LDR X0, [X23]
	0x039B82B4 BL 0x1C16F10
	0x039B82B8 MOV W1, W20
	0x039B82BC MOV W2, W21
	0x039B82C0 MOV W3, W31
	0x039B82C4 MOV X22, X0
	0x039B82C8 BL 0x39B6B1C
	0x039B82CC STR X22, [X19 + 0x20]
	0x039B82D0 LDR X0, [X23]
	0x039B82D4 LDP W20, W21, [X19 + 0x30]
	0x039B82D8 BL 0x1C16F10
	0x039B82DC MOV W1, W20
	0x039B82E0 MOV W2, W21
	0x039B82E4 MOV W3, W31
	0x039B82E8 MOV X22, X0
	0x039B82EC BL 0x39B6B1C
	0x039B82F0 LDR X8, [X19 + 0x20]
	0x039B82F4 STR X22, [X19 + 0x28]
	0x039B82F8 CBZ X8, 0x39B8364
	0x039B82FC LDP W9, W10, [X8 + 0x58]
	0x039B8300 LDR W8, [X8 + 0x60]
	0x039B8304 ADD W11, W9, 0x1FF
	0x039B8308 CMP W9, 0x0
	0x039B830C CSEL W9, W11, W9, LT
	0x039B8310 ADD W11, W10, 0x3
	0x039B8314 CMP W10, 0x0
	0x039B8318 CSEL W10, W11, W10, LT
	0x039B831C ADD W11, W8, 0x3
	0x039B8320 CMP W8, 0x0
	0x039B8324 CSEL W8, W11, W8, LT
	0x039B8328 ADRP X11, 0x796000
	0x039B832C LDR X11, [X11 + 0x48]
	0x039B8330 SBFM W9, W9, 0x9, 0x1F
	0x039B8334 SBFM W10, W10, 0x2, 0x1F
	0x039B8338 MUL W9, W10, W9
	0x039B833C LDR X0, [X11]
	0x039B8340 SBFM W8, W8, 0x2, 0x1F
	0x039B8344 MUL W1, W9, W8
	0x039B8348 BL 0x1C16D6C
	0x039B834C STR X0, [X19 + 0x10]
	0x039B8350 STR W31, [X19 + 0x18]
	0x039B8354 LDP X20, X19, [X31 + 0x20]
	0x039B8358 LDP X22, X21, [X31 + 0x10]
	0x039B835C LDP X30, X23, [X31], #0x30
	0x039B8360 RET
	0x039B8364 BL 0x1C16F20
	0x039B8368 SUB X31, X31, 0xD0
	0x039B836C STP X30, X23, [X31 + 0xA0]
	0x039B8370 STP X22, X21, [X31 + 0xB0]
	0x039B8374 STP X20, X19, [X31 + 0xC0]
	0x039B8378 CMP W6, 0x0
	0x039B837C MOVZ W8, 0x28
	0x039B8380 MOVZ W9, 0x20
	0x039B8384 CSEL X8, X9, X8, EQ
	0x039B8388 LDR X23, [X0, X8, LSL]
	0x039B838C MOV X22, X2
	0x039B8390 ADD X0, X31, 0x50
	0x039B8394 MOVZ W2, 0x50
	0x039B8398 MOV W19, W5
	0x039B839C MOV W20, W4
	0x039B83A0 MOV X21, X3
	0x039B83A4 BL 0x3EB1AC0
	0x039B83A8 CBZ X23, 0x39B83EC
	0x039B83AC ADD X0, X31, 0x0
	0x039B83B0 ADD X1, X31, 0x50
	0x039B83B4 MOVZ W2, 0x50
	0x039B83B8 BL 0x3EB1AC0
	0x039B83BC ADD X1, X31, 0x0
	0x039B83C0 MOV X0, X23
	0x039B83C4 MOV X2, X22
	0x039B83C8 MOV X3, X21
	0x039B83CC MOV W4, W20
	0x039B83D0 MOV W5, W19
	0x039B83D4 BL 0x39B7858
	0x039B83D8 LDP X20, X19, [X31 + 0xC0]
	0x039B83DC LDP X22, X21, [X31 + 0xB0]
	0x039B83E0 LDP X30, X23, [X31 + 0xA0]
	0x039B83E4 ADD X31, X31, 0xD0
	0x039B83E8 RET
	0x039B83EC BL 0x1C16F20
	0x039B83F0 ADD W8, W0, W1
	0x039B83F4 SUB W8, W8, 0x1
	0x039B83F8 SDIV W0, W8, W1
	0x039B83FC RET
	0x039B8400 STR D10, [X31 - 0x70]!
	0x039B8404 STP D9, D8, [X31 + 0x10]
	0x039B8408 STP X29, X30, [X31 + 0x20]
	0x039B840C STP X26, X25, [X31 + 0x30]
	0x039B8410 STP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA2A000
	007 Move X21, 0x73E000
	008 Move W8, [X22+3181]
	009 Move X21, [X21+304]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x73E000
	017 Move X0, [X0+304]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3181], W8
	021 Move X9, [X20+24]
	022 Move X8, [X21]
	023 Compare X9, 0
	024 JumpIfEqual {35}
	025 Move X10, [X9]
	026 Move W11, [X8+304]
	027 Move W12, [X10+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, X31
	030 Move X10, [X10+200]
	031 Add X10, X10, X11
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move [X19+16], X9
	036 Move X9, [X20+32]
	037 Compare X9, 0
	038 JumpIfEqual {49}
	039 Move X10, [X9]
	040 Move W11, [X8+304]
	041 Move W12, [X10+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, X31
	044 Move X10, [X10+200]
	045 Add X10, X10, X11
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move [X19+24], X9
	050 Move X9, [X20+40]
	051 Compare X9, 0
	052 JumpIfEqual {63}
	053 Move X10, [X9]
	054 Move W11, [X8+304]
	055 Move W12, [X10+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, X31
	058 Move X10, [X10+200]
	059 Add X10, X10, X11
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move [X19+32], X9
	064 Move X9, [X20+48]
	065 Compare X9, 0
	066 JumpIfEqual {77}
	067 Move X10, [X9]
	068 Move W11, [X8+304]
	069 Move W12, [X10+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, X31
	072 Move X10, [X10+200]
	073 Add X10, X10, X11
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move [X19+40], X9
	078 Move X9, [X20+56]
	079 Compare X9, 0
	080 JumpIfEqual {91}
	081 Move X10, [X9]
	082 Move W11, [X8+304]
	083 Move W12, [X10+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, X31
	086 Move X10, [X10+200]
	087 Add X10, X10, X11
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Move [X19+48], X9
	092 Move X9, [X20+64]
	093 Compare X9, 0
	094 JumpIfEqual {105}
	095 Move X10, [X9]
	096 Move W11, [X8+304]
	097 Move W12, [X10+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X9, X31
	100 Move X10, [X10+200]
	101 Add X10, X10, X11
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Move [X19+56], X9
	106 Move X9, [X20+72]
	107 Compare X9, 0
	108 JumpIfEqual {113}
	109 Move X10, [X9]
	110 Move W11, [X8+304]
	111 Move W12, [X10+304]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, X31
	114 Move X10, [X10+200]
	115 Add X10, X10, X11
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CSEL not yet implemented."
	119 Move [X19+64], X8
	120 Move X8, [X20+80]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move [X19+72], X8
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X30, [X31+48]
	127 Return 

Method: System.Void Clear()

Disassembly:
	0x039B8414 STP X22, X21, [X31 + 0x50]
	0x039B8418 STP X20, X19, [X31 + 0x60]
	0x039B841C SUB X31, X31, 0x440
	0x039B8420 ADRP X22, 0xA29000
	0x039B8424 LDRB W8, [X22 + 0xC79]
	0x039B8428 MOV X21, X2
	0x039B842C MOV V8.16B, V0.16B
	0x039B8430 MOV X20, X1
	0x039B8434 MOV X19, X0
	0x039B8438 TBNZ X8, 0x0, 0x39B845C
	0x039B843C ADRP X0, 0x79A000
	0x039B8440 LDR X0, [X0 + 0x260]
	0x039B8444 BL 0x1C16CF4
	0x039B8448 ADRP X0, 0x79A000
	0x039B844C LDR X0, [X0 + 0x278]
	0x039B8450 BL 0x1C16CF4
	0x039B8454 MOVZ W8, 0x1
	0x039B8458 STRB W8, [X22 + 0xC79]
	0x039B845C LDR W8, [X19 + 0x18]
	0x039B8460 CBZ W8, 0x39B8CB0
	0x039B8464 ADRP X25, 0x79A000
	0x039B8468 LDR X25, [X25 + 0x260]
	0x039B846C LDR X0, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA2A000
	005 Move W8, [X20+3182]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x79B000
	012 Move X0, [X0+528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3182], W8
	016 Move X0, [X19+120]
	017 Compare X0, 0
	018 JumpIfEqual {29}
	019 Move X8, 0x79B000
	020 Move X8, [X8+528]
	021 Move X1, [X8]
	022 Call Stack`1<BrickChunkAlloc>.Clear, X0
	023 Move [X19+112], W31
	024 Move [X19+104], X31
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 
	029 Call 0x1C17F20

Method: System.Int32 GetChunkCount(System.Int32 brickCount, System.Int32 chunkSizeInBricks)

Disassembly:
	0x039B8470 LDR W8, [X0 + 0xE0]
	0x039B8474 CBNZ W8, 0x39B8480
	0x039B8478 BL 0x1C16DFC
	0x039B847C LDR X0, [X25]

ISIL:
	001 Add W8, W0, W1
	002 Subtract W8, W8, 1
	003 NotImplemented "Instruction SDIV not yet implemented."
	004 Return X0

Method: System.Boolean Allocate(System.Int32 numberOfBrickChunks, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> outAllocations, System.Boolean ignoreErrorLog)

Disassembly:
	0x039B8480 LDR X8, [X19 + 0x20]
	0x039B8484 CBZ X8, 0x39B8CD4
	0x039B8488 LDR X9, [X0 + 0xB8]
	0x039B848C LDR X0, [X8 + 0x18]
	0x039B8490 ADD X8, X31, 0x3E8
	0x039B8494 MOV X1, X31
	0x039B8498 LDR X22, [X9]
	0x039B849C LDR W23, [X9 + 0x8]
	0x039B84A0 LDR W24, [X9 + 0x14]
	0x039B84A4 ADD X26, X31, 0x3E8
	0x039B84A8 BL 0x3C4B274
	0x039B84AC LDP V0, V1, [X26]
	0x039B84B0 LDR X8, [X31 + 0x408]
	0x039B84B4 STR V0, [X31 + 0x41]
	0x039B84B8 STR V1, [X31 + 0x42]
	0x039B84BC STR X8, [X31 + 0x430]
	0x039B84C0 CBZ X20, 0x39B8CD4
	0x039B84C4 LDR V0, [X31 + 0x41]
	0x039B84C8 LDR V1, [X31 + 0x42]
	0x039B84CC LDR X8, [X31 + 0x430]
	0x039B84D0 ADD X4, X31, 0x3C0
	0x039B84D4 MOV X0, X20
	0x039B84D8 MOV X1, X22
	0x039B84DC MOV W2, W23
	0x039B84E0 MOV W3, W24
	0x039B84E4 MOV X5, X31
	0x039B84E8 STP V0, V1, [X31 + 0x3C0]
	0x039B84EC STR X8, [X31 + 0x3E0]
	0x039B84F0 BL 0x3C4EC90
	0x039B84F4 LDR X8, [X19 + 0x20]
	0x039B84F8 CBZ X8, 0x39B8CD4
	0x039B84FC LDR X9, [X25]
	0x039B8500 LDR X0, [X8 + 0x20]
	0x039B8504 ADD X8, X31, 0x3E8
	0x039B8508 MOV X1, X31
	0x039B850C LDR X9, [X9 + 0xB8]
	0x039B8510 LDR W22, [X9 + 0x18]
	0x039B8514 LDR W23, [X9 + 0x8]
	0x039B8518 LDR X24, [X9]
	0x039B851C BL 0x3C4B274
	0x039B8520 LDP V0, V1, [X26]
	0x039B8524 LDR X8, [X31 + 0x408]
	0x039B8528 ADD X4, X31, 0x390
	0x039B852C MOV X0, X20
	0x039B8530 MOV X1, X24
	0x039B8534 MOV W2, W23
	0x039B8538 MOV W3, W22
	0x039B853C MOV X5, X31
	0x039B8540 STP V0, V1, [X31 + 0x390]
	0x039B8544 STR X8, [X31 + 0x3B0]
	0x039B8548 BL 0x3C4EC90
	0x039B854C LDR X8, [X19 + 0x20]
	0x039B8550 CBZ X8, 0x39B8CD4
	0x039B8554 LDR X9, [X25]
	0x039B8558 LDR X0, [X8 + 0x28]
	0x039B855C ADD X8, X31, 0x3E8
	0x039B8560 MOV X1, X31
	0x039B8564 LDR X9, [X9 + 0xB8]
	0x039B8568 LDR W22, [X9 + 0x1C]
	0x039B856C LDR W23, [X9 + 0x8]
	0x039B8570 LDR X24, [X9]
	0x039B8574 BL 0x3C4B274
	0x039B8578 LDP V0, V1, [X26]
	0x039B857C LDR X8, [X31 + 0x408]
	0x039B8580 ADD X4, X31, 0x360
	0x039B8584 MOV X0, X20
	0x039B8588 MOV X1, X24
	0x039B858C MOV W2, W23
	0x039B8590 MOV W3, W22
	0x039B8594 MOV X5, X31
	0x039B8598 STP V0, V1, [X31 + 0x360]
	0x039B859C STR X8, [X31 + 0x380]
	0x039B85A0 BL 0x3C4EC90
	0x039B85A4 LDR X8, [X19 + 0x28]
	0x039B85A8 CBZ X8, 0x39B8CD4
	0x039B85AC LDR X9, [X25]
	0x039B85B0 LDR X0, [X8 + 0x18]
	0x039B85B4 ADD X8, X31, 0x3E8
	0x039B85B8 MOV X1, X31
	0x039B85BC LDR X9, [X9 + 0xB8]
	0x039B85C0 LDR W22, [X9 + 0x30]
	0x039B85C4 LDR W23, [X9 + 0x8]
	0x039B85C8 LDR X24, [X9]
	0x039B85CC BL 0x3C4B274
	0x039B85D0 LDP V0, V1, [X26]
	0x039B85D4 LDR X8, [X31 + 0x408]
	0x039B85D8 ADD X4, X31, 0x330
	0x039B85DC MOV X0, X20
	0x039B85E0 MOV X1, X24
	0x039B85E4 MOV W2, W23
	0x039B85E8 MOV W3, W22
	0x039B85EC MOV X5, X31
	0x039B85F0 STP V0, V1, [X31 + 0x330]
	0x039B85F4 STR X8, [X31 + 0x350]
	0x039B85F8 BL 0x3C4EC90
	0x039B85FC LDR X8, [X19 + 0x28]
	0x039B8600 CBZ X8, 0x39B8CD4
	0x039B8604 LDR X9, [X25]
	0x039B8608 LDR X0, [X8 + 0x20]
	0x039B860C ADD X8, X31, 0x3E8
	0x039B8610 MOV X1, X31
	0x039B8614 LDR X9, [X9 + 0xB8]
	0x039B8618 LDR W22, [X9 + 0x34]
	0x039B861C LDR W23, [X9 + 0x8]
	0x039B8620 LDR X24, [X9]
	0x039B8624 BL 0x3C4B274
	0x039B8628 LDP V0, V1, [X26]
	0x039B862C LDR X8, [X31 + 0x408]
	0x039B8630 ADD X4, X31, 0x300
	0x039B8634 MOV X0, X20
	0x039B8638 MOV X1, X24
	0x039B863C MOV W2, W23
	0x039B8640 MOV W3, W22
	0x039B8644 MOV X5, X31
	0x039B8648 STP V0, V1, [X31 + 0x300]
	0x039B864C STR X8, [X31 + 0x320]
	0x039B8650 BL 0x3C4EC90
	0x039B8654 LDR X8, [X19 + 0x28]
	0x039B8658 CBZ X8, 0x39B8CD4
	0x039B865C LDR X9, [X25]
	0x039B8660 LDR X0, [X8 + 0x28]
	0x039B8664 ADD X8, X31, 0x3E8
	0x039B8668 MOV X1, X31
	0x039B866C LDR X9, [X9 + 0xB8]
	0x039B8670 LDR W22, [X9 + 0x38]
	0x039B8674 LDR W23, [X9 + 0x8]
	0x039B8678 LDR X24, [X9]
	0x039B867C BL 0x3C4B274
	0x039B8680 LDP V0, V1, [X26]
	0x039B8684 LDR X8, [X31 + 0x408]
	0x039B8688 ADD X4, X31, 0x2D0
	0x039B868C MOV X0, X20
	0x039B8690 MOV X1, X24
	0x039B8694 MOV W2, W23
	0x039B8698 MOV W3, W22
	0x039B869C MOV X5, X31
	0x039B86A0 STP V0, V1, [X31 + 0x2D0]
	0x039B86A4 STR X8, [X31 + 0x2F0]
	0x039B86A8 BL 0x3C4EC90
	0x039B86AC CBZ X21, 0x39B8CD4
	0x039B86B0 LDR X8, [X25]
	0x039B86B4 LDR X0, [X21 + 0x18]
	0x039B86B8 MOV X1, X31
	0x039B86BC LDR X8, [X8 + 0xB8]
	0x039B86C0 LDR W22, [X8 + 0x4C]
	0x039B86C4 LDR W23, [X8 + 0x8]
	0x039B86C8 LDR X24, [X8]
	0x039B86CC ADD X8, X31, 0x3E8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xA2A000
	010 Move W8, [X23+3183]
	011 Move W19, W3
	012 Move X20, X2
	013 Move W22, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x73C000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x79B000
	023 Move X0, [X0+536]
	024 Call 0x1C17CF4
	025 Move X0, 0x79B000
	026 Move X0, [X0+544]
	027 Call 0x1C17CF4
	028 Move X0, 0x79B000
	029 Move X0, [X0+552]
	030 Call 0x1C17CF4
	031 Move X0, 0x79B000
	032 Move X0, [X0+560]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+3183], W8
	036 Move X0, [X21+120]
	037 Compare X0, 0
	038 JumpIfEqual {82}
	039 Move X24, 0x79B000
	040 Move X23, 0x79B000
	041 Move X24, [X24+544]
	042 Move X23, [X23+536]
	043 Move X22, W22
	044 Move W25, 12
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X0+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X1, [X24]
	049 Call Stack`1<BrickChunkAlloc>.Pop, X0
	050 Compare X20, 0
	051 JumpIfEqual {82}
	052 Move W11, [X20+28]
	053 Move X9, [X20+16]
	054 Move X10, [X23]
	055 Add W11, W11, 1
	056 Move [X20+28], W11
	057 Compare X9, 0
	058 JumpIfEqual {82}
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Move W12, [X9+24]
	061 Move X8, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W10, W11, 1
	064 NotImplemented "Instruction MADD not yet implemented."
	065 Move [X20+24], W10
	066 Move [X9+32], X8
	067 Move [X9+40], W1
	068 Move X9, [X10+32]
	069 And X2, X1, 0
	070 Move X0, X20
	071 Move X1, X8
	072 Move X9, [X9+192]
	073 Move X3, [X9+112]
	074 Call List`1<BrickChunkAlloc>.AddWithResize, X0, X1
	075 Move W8, [X21+128]
	076 Move X0, [X21+120]
	077 Subtract X22, X22, 1
	078 Subtract W8, W8, 1
	079 Move [X21+128], W8
	080 Compare X0, 0
	081 JumpIfNotEqual {45}
	082 Call 0x1C17F20
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W24, 1
	085 Move W25, 12
	086 Move W2, [X21+112]
	087 Move W8, [X21+96]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Compare X20, 0
	090 JumpIfEqual {82}
	091 Move W10, [X20+28]
	092 Move X1, [X21+104]
	093 Move X8, [X20+16]
	094 Move X9, [X23]
	095 Add W10, W10, 1
	096 Move [X20+28], W10
	097 Compare X8, 0
	098 JumpIfEqual {82}
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Move W11, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add W9, W10, 1
	103 NotImplemented "Instruction MADD not yet implemented."
	104 Move [X20+24], W9
	105 Move [X8+32], X1
	106 Move [X8+40], W2
	107 Move X8, [X9+32]
	108 Move X0, X20
	109 Move X8, [X8+192]
	110 Move X3, [X8+112]
	111 Call List`1<BrickChunkAlloc>.AddWithResize, X0, X1
	112 Move W9, [X21+104]
	113 Move W8, [X21+128]
	114 Move W10, [X21+88]
	115 Add W9, W9, 512
	116 Subtract W8, W8, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X21+128], W8
	119 Move [X21+104], W9
	120 Move W8, [X21+108]
	121 Move W9, [X21+92]
	122 Add W8, W8, 4
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move [X21+104], W31
	125 Move [X21+108], W8
	126 Move W8, [X21+112]
	127 Add W8, W8, 4
	128 Move [X21+108], W31
	129 Move [X21+112], W8
	130 Move W8, W24
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add W24, W24, 1
	133 Move W0, 1
	134 Move TEMP, X19
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {150}
	138 Move X8, 0x73C000
	139 Move X8, [X8+2600]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X8, 0x79B000
	146 Move X8, [X8+560]
	147 Move X1, X31
	148 Move X0, [X8]
	149 Call Debug.LogError, X0
	150 Move W0, W31
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X22, [X31+32]
	154 Move X21, [X31+40]
	155 Move X24, [X31+16]
	156 Move X23, [X31+24]
	157 Move X30, [X31+64]
	158 Move X25, [X31+72]
	159 Return X0

Method: System.Void Deallocate(System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> allocations)

Disassembly:
	0x039B86D0 BL 0x3C4B274
	0x039B86D4 LDP V0, V1, [X26]
	0x039B86D8 LDR X8, [X31 + 0x408]
	0x039B86DC ADD X4, X31, 0x2A0
	0x039B86E0 MOV X0, X20
	0x039B86E4 MOV X1, X24
	0x039B86E8 MOV W2, W23
	0x039B86EC MOV W3, W22
	0x039B86F0 MOV X5, X31
	0x039B86F4 STP V0, V1, [X31 + 0x2A0]
	0x039B86F8 STR X8, [X31 + 0x2C0]
	0x039B86FC BL 0x3C4EC90
	0x039B8700 LDR X8, [X25]
	0x039B8704 LDR X0, [X21 + 0x20]
	0x039B8708 MOV X1, X31
	0x039B870C LDR X8, [X8 + 0xB8]
	0x039B8710 LDR X22, [X8]
	0x039B8714 LDR W23, [X8 + 0x8]
	0x039B8718 LDR W24, [X8 + 0x50]
	0x039B871C ADD X8, X31, 0x3E8
	0x039B8720 BL 0x3C4B274
	0x039B8724 LDP V0, V1, [X26]
	0x039B8728 LDR X8, [X31 + 0x408]
	0x039B872C ADD X4, X31, 0x270
	0x039B8730 MOV X0, X20
	0x039B8734 MOV X1, X22
	0x039B8738 MOV W2, W23
	0x039B873C MOV W3, W24
	0x039B8740 MOV X5, X31
	0x039B8744 STP V0, V1, [X31 + 0x270]
	0x039B8748 STR X8, [X31 + 0x290]
	0x039B874C BL 0x3C4EC90
	0x039B8750 LDR X8, [X25]
	0x039B8754 LDR X0, [X21 + 0x28]
	0x039B8758 MOV X1, X31
	0x039B875C LDR X8, [X8 + 0xB8]
	0x039B8760 LDR X22, [X8]
	0x039B8764 LDR W23, [X8 + 0x8]
	0x039B8768 LDR W24, [X8 + 0x54]
	0x039B876C ADD X8, X31, 0x3E8
	0x039B8770 BL 0x3C4B274
	0x039B8774 LDP V0, V1, [X26]
	0x039B8778 LDR X8, [X31 + 0x408]
	0x039B877C ADD X4, X31, 0x240
	0x039B8780 MOV X0, X20
	0x039B8784 MOV X1, X22
	0x039B8788 MOV W2, W23
	0x039B878C MOV W3, W24
	0x039B8790 MOV X5, X31
	0x039B8794 STP V0, V1, [X31 + 0x240]
	0x039B8798 STR X8, [X31 + 0x260]
	0x039B879C BL 0x3C4EC90
	0x039B87A0 LDR X0, [X25]
	0x039B87A4 LDR W22, [X19 + 0x34]
	0x039B87A8 LDR W8, [X0 + 0xE0]
	0x039B87AC CBNZ W8, 0x39B87B8
	0x039B87B0 BL 0x1C16DFC
	0x039B87B4 LDR X0, [X25]
	0x039B87B8 LDR X8, [X0 + 0xB8]
	0x039B87BC LDR X0, [X8]
	0x039B87C0 CBZ X0, 0x39B8CD4
	0x039B87C4 ADRP X8, 0x79A000
	0x039B87C8 LDR X8, [X8 + 0x278]
	0x039B87CC CMP W22, 0x2
	0x039B87D0 LDR X1, [X8]
	0x039B87D4 B.NE 0x39B8C14
	0x039B87D8 MOV X2, X31
	0x039B87DC BL 0x3C3B688
	0x039B87E0 LDR X8, [X19 + 0x20]
	0x039B87E4 CBZ X8, 0x39B8CD4
	0x039B87E8 LDR X9, [X25]
	0x039B87EC LDR X0, [X8 + 0x30]
	0x039B87F0 ADD X8, X31, 0x410
	0x039B87F4 MOV X1, X31
	0x039B87F8 LDR X9, [X9 + 0xB8]
	0x039B87FC LDR W22, [X9 + 0x20]
	0x039B8800 LDR W23, [X9 + 0x8]
	0x039B8804 LDR X24, [X9]
	0x039B8808 BL 0x3C4B274
	0x039B880C LDR V0, [X31 + 0x41]
	0x039B8810 LDR V1, [X31 + 0x42]
	0x039B8814 LDR X8, [X31 + 0x430]
	0x039B8818 ADD X4, X31, 0x210
	0x039B881C MOV X0, X20
	0x039B8820 MOV X1, X24
	0x039B8824 MOV W2, W23
	0x039B8828 MOV W3, W22
	0x039B882C MOV X5, X31
	0x039B8830 STP V0, V1, [X31 + 0x210]
	0x039B8834 STR X8, [X31 + 0x230]
	0x039B8838 BL 0x3C4EC90
	0x039B883C LDR X8, [X19 + 0x20]
	0x039B8840 CBZ X8, 0x39B8CD4
	0x039B8844 LDR X9, [X25]
	0x039B8848 LDR X0, [X8 + 0x38]
	0x039B884C ADD X8, X31, 0x410
	0x039B8850 MOV X1, X31
	0x039B8854 LDR X9, [X9 + 0xB8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0xA2A000
	009 Move W8, [X21+3184]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x79B000
	017 Move X0, [X0+568]
	018 Call 0x1C17CF4
	019 Move X0, 0x79B000
	020 Move X0, [X0+576]
	021 Call 0x1C17CF4
	022 Move X0, 0x79B000
	023 Move X0, [X0+584]
	024 Call 0x1C17CF4
	025 Move X0, 0x79B000
	026 Move X0, [X0+592]
	027 Call 0x1C17CF4
	028 Move X0, 0x79B000
	029 Move X0, [X0+208]
	030 Call 0x1C17CF4
	031 Move X0, 0x79B000
	032 Move X0, [X0+600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3184], W8
	036 NotImplemented "Instruction MOVI not yet implemented."
	037 Move [X31+32], V0
	038 Move [X31+40], V0
	039 Compare X20, 0
	040 JumpIfEqual {87}
	041 Move W8, [X19+128]
	042 Move W9, [X20+24]
	043 Move X10, 0x79B000
	044 Move X10, [X10+592]
	045 Move X22, 0x79B000
	046 Add W8, W9, W8
	047 Move [X19+128], W8
	048 Move X1, [X10]
	049 Move X23, 0x79B000
	050 Move X21, 0x79B000
	051 Move X22, [X22+576]
	052 Move X23, [X23+600]
	053 Move X21, [X21+568]
	054 Add X8, X31, 0
	055 Move X0, X20
	056 Call List`1<BrickChunkAlloc>.GetEnumerator, X0
	057 Move V0, [X31]
	058 Move V1, [X31+16]
	059 Move [X31+32], V0
	060 Move [X31+40], V1
	061 Move X1, [X22]
	062 Add X0, X31, 32
	063 Call Enumerator<BrickChunkAlloc>.MoveNext, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {75}
	068 Move X0, [X19+120]
	069 Compare X0, 0
	070 JumpIfEqual {86}
	071 Move X1, [X31+48]
	072 Move W2, [X31+56]
	073 Move X3, [X23]
	074 Call Stack`1<BrickChunkAlloc>.Push, X0, X1
	075 Move X1, [X21]
	076 Add X0, X31, 32
	077 Call Enumerator<BrickChunkAlloc>.Dispose, X0
	078 Move X20, [X31+96]
	079 Move X19, [X31+104]
	080 Move X22, [X31+80]
	081 Move X21, [X31+88]
	082 Move X30, [X31+64]
	083 Move X23, [X31+72]
	084 Add X31, X31, 112
	085 Return 
	086 Call 0x1C17F20
	087 Call 0x1C17F20
	088 Move X19, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X19
	091 Call 0x3EB2AD0
	092 Move X20, [X0]
	093 Call 0x3EB2AE0
	094 Move X1, [X21]
	095 Add X0, X31, 32
	096 Call Enumerator<BrickChunkAlloc>.Dispose, X0
	097 Compare X20, 0
	098 JumpIfEqual {78}
	099 Move X0, X20
	100 Call 0x1C17F18
	101 Move X20, X31
	102 Move X19, X0
	103 Move X1, [X21]
	104 Add X0, X31, 32
	105 Call Enumerator<BrickChunkAlloc>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X19
	109 Call 0x1D2D690
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void Update(UnityEngine.Rendering.ProbeBrickPool/DataLocation source, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> srcLocations, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> dstLocations, System.Int32 destStartIndex, UnityEngine.Rendering.ProbeVolumeSHBands bands)

Disassembly:
	0x039B8858 LDR W22, [X9 + 0x24]
	0x039B885C LDR W23, [X9 + 0x8]
	0x039B8860 LDR X24, [X9]
	0x039B8864 BL 0x3C4B274
	0x039B8868 LDR V0, [X31 + 0x41]
	0x039B886C LDR V1, [X31 + 0x42]
	0x039B8870 LDR X8, [X31 + 0x430]
	0x039B8874 ADD X4, X31, 0x1E0
	0x039B8878 MOV X0, X20
	0x039B887C MOV X1, X24
	0x039B8880 MOV W2, W23
	0x039B8884 MOV W3, W22
	0x039B8888 MOV X5, X31
	0x039B888C STP V0, V1, [X31 + 0x1E0]
	0x039B8890 STR X8, [X31 + 0x200]
	0x039B8894 BL 0x3C4EC90
	0x039B8898 LDR X8, [X19 + 0x20]
	0x039B889C CBZ X8, 0x39B8CD4
	0x039B88A0 LDR X9, [X25]
	0x039B88A4 LDR X0, [X8 + 0x40]
	0x039B88A8 ADD X8, X31, 0x410
	0x039B88AC MOV X1, X31
	0x039B88B0 LDR X9, [X9 + 0xB8]
	0x039B88B4 LDR W22, [X9 + 0x28]
	0x039B88B8 LDR W23, [X9 + 0x8]
	0x039B88BC LDR X24, [X9]
	0x039B88C0 BL 0x3C4B274
	0x039B88C4 LDR V0, [X31 + 0x41]
	0x039B88C8 LDR V1, [X31 + 0x42]
	0x039B88CC LDR X8, [X31 + 0x430]
	0x039B88D0 ADD X4, X31, 0x1B0
	0x039B88D4 MOV X0, X20
	0x039B88D8 MOV X1, X24
	0x039B88DC MOV W2, W23
	0x039B88E0 MOV W3, W22
	0x039B88E4 MOV X5, X31
	0x039B88E8 STP V0, V1, [X31 + 0x1B0]
	0x039B88EC STR X8, [X31 + 0x1D0]
	0x039B88F0 BL 0x3C4EC90
	0x039B88F4 LDR X8, [X19 + 0x20]
	0x039B88F8 CBZ X8, 0x39B8CD4
	0x039B88FC LDR X9, [X25]
	0x039B8900 LDR X0, [X8 + 0x48]
	0x039B8904 ADD X8, X31, 0x410
	0x039B8908 MOV X1, X31
	0x039B890C LDR X9, [X9 + 0xB8]
	0x039B8910 LDR W22, [X9 + 0x2C]
	0x039B8914 LDR W23, [X9 + 0x8]
	0x039B8918 LDR X24, [X9]
	0x039B891C BL 0x3C4B274
	0x039B8920 LDR V0, [X31 + 0x41]
	0x039B8924 LDR V1, [X31 + 0x42]
	0x039B8928 LDR X8, [X31 + 0x430]
	0x039B892C ADD X4, X31, 0x180
	0x039B8930 MOV X0, X20
	0x039B8934 MOV X1, X24
	0x039B8938 MOV W2, W23
	0x039B893C MOV W3, W22
	0x039B8940 MOV X5, X31
	0x039B8944 STP V0, V1, [X31 + 0x180]
	0x039B8948 STR X8, [X31 + 0x1A0]
	0x039B894C BL 0x3C4EC90
	0x039B8950 LDR X8, [X19 + 0x28]
	0x039B8954 CBZ X8, 0x39B8CD4
	0x039B8958 LDR X9, [X25]
	0x039B895C LDR X0, [X8 + 0x30]
	0x039B8960 ADD X8, X31, 0x410
	0x039B8964 MOV X1, X31
	0x039B8968 LDR X9, [X9 + 0xB8]
	0x039B896C LDR W22, [X9 + 0x3C]
	0x039B8970 LDR W23, [X9 + 0x8]
	0x039B8974 LDR X24, [X9]
	0x039B8978 BL 0x3C4B274
	0x039B897C LDR V0, [X31 + 0x41]
	0x039B8980 LDR V1, [X31 + 0x42]
	0x039B8984 LDR X8, [X31 + 0x430]
	0x039B8988 ADD X4, X31, 0x150
	0x039B898C MOV X0, X20
	0x039B8990 MOV X1, X24
	0x039B8994 MOV W2, W23
	0x039B8998 MOV W3, W22
	0x039B899C MOV X5, X31
	0x039B89A0 STP V0, V1, [X31 + 0x150]
	0x039B89A4 STR X8, [X31 + 0x170]
	0x039B89A8 BL 0x3C4EC90
	0x039B89AC LDR X8, [X19 + 0x28]
	0x039B89B0 CBZ X8, 0x39B8CD4
	0x039B89B4 LDR X9, [X25]
	0x039B89B8 LDR X0, [X8 + 0x38]
	0x039B89BC ADD X8, X31, 0x410
	0x039B89C0 MOV X1, X31
	0x039B89C4 LDR X9, [X9 + 0xB8]
	0x039B89C8 LDR W22, [X9 + 0x40]
	0x039B89CC LDR W23, [X9 + 0x8]
	0x039B89D0 LDR X24, [X9]
	0x039B89D4 BL 0x3C4B274
	0x039B89D8 LDR V0, [X31 + 0x41]
	0x039B89DC LDR V1, [X31 + 0x42]
	0x039B89E0 LDR X8, [X31 + 0x430]
	0x039B89E4 ADD X4, X31, 0x120
	0x039B89E8 MOV X0, X20
	0x039B89EC MOV X1, X24
	0x039B89F0 MOV W2, W23
	0x039B89F4 MOV W3, W22
	0x039B89F8 MOV X5, X31
	0x039B89FC STP V0, V1, [X31 + 0x120]
	0x039B8A00 STR X8, [X31 + 0x140]
	0x039B8A04 BL 0x3C4EC90
	0x039B8A08 LDR X8, [X19 + 0x28]
	0x039B8A0C CBZ X8, 0x39B8CD4
	0x039B8A10 LDR X9, [X25]
	0x039B8A14 LDR X0, [X8 + 0x40]
	0x039B8A18 ADD X8, X31, 0x410
	0x039B8A1C MOV X1, X31
	0x039B8A20 LDR X9, [X9 + 0xB8]
	0x039B8A24 LDR W22, [X9 + 0x44]
	0x039B8A28 LDR W23, [X9 + 0x8]
	0x039B8A2C LDR X24, [X9]
	0x039B8A30 BL 0x3C4B274
	0x039B8A34 LDR V0, [X31 + 0x41]
	0x039B8A38 LDR V1, [X31 + 0x42]
	0x039B8A3C LDR X8, [X31 + 0x430]
	0x039B8A40 ADD X4, X31, 0xF0
	0x039B8A44 MOV X0, X20
	0x039B8A48 MOV X1, X24
	0x039B8A4C MOV W2, W23
	0x039B8A50 MOV W3, W22
	0x039B8A54 MOV X5, X31
	0x039B8A58 STP V0, V1, [X31 + 0xF0]
	0x039B8A5C STR X8, [X31 + 0x110]
	0x039B8A60 BL 0x3C4EC90
	0x039B8A64 LDR X8, [X19 + 0x28]
	0x039B8A68 CBZ X8, 0x39B8CD4
	0x039B8A6C LDR X9, [X25]
	0x039B8A70 LDR X0, [X8 + 0x48]
	0x039B8A74 ADD X8, X31, 0x410
	0x039B8A78 MOV X1, X31
	0x039B8A7C LDR X9, [X9 + 0xB8]
	0x039B8A80 LDR W22, [X9 + 0x48]
	0x039B8A84 LDR W23, [X9 + 0x8]
	0x039B8A88 LDR X24, [X9]
	0x039B8A8C BL 0x3C4B274
	0x039B8A90 LDR V0, [X31 + 0x41]
	0x039B8A94 LDR V1, [X31 + 0x42]
	0x039B8A98 LDR X8, [X31 + 0x430]
	0x039B8A9C ADD X4, X31, 0xC0
	0x039B8AA0 MOV X0, X20
	0x039B8AA4 MOV X1, X24
	0x039B8AA8 MOV W2, W23
	0x039B8AAC MOV W3, W22
	0x039B8AB0 MOV X5, X31
	0x039B8AB4 STP V0, V1, [X31 + 0xC0]
	0x039B8AB8 STR X8, [X31 + 0xE0]
	0x039B8ABC BL 0x3C4EC90
	0x039B8AC0 LDR X8, [X25]
	0x039B8AC4 LDR X0, [X21 + 0x30]
	0x039B8AC8 MOV X1, X31
	0x039B8ACC LDR X8, [X8 + 0xB8]
	0x039B8AD0 LDR X22, [X8]
	0x039B8AD4 LDR W23, [X8 + 0x8]
	0x039B8AD8 LDR W24, [X8 + 0x58]
	0x039B8ADC ADD X8, X31, 0x410
	0x039B8AE0 BL 0x3C4B274
	0x039B8AE4 LDR V0, [X31 + 0x41]
	0x039B8AE8 LDR V1, [X31 + 0x42]
	0x039B8AEC LDR X8, [X31 + 0x430]
	0x039B8AF0 ADD X4, X31, 0x90
	0x039B8AF4 MOV X0, X20
	0x039B8AF8 MOV X1, X22
	0x039B8AFC MOV W2, W23
	0x039B8B00 MOV W3, W24
	0x039B8B04 MOV X5, X31
	0x039B8B08 STP V0, V1, [X31 + 0x90]
	0x039B8B0C STR X8, [X31 + 0xB0]
	0x039B8B10 BL 0x3C4EC90
	0x039B8B14 LDR X8, [X25]
	0x039B8B18 LDR X0, [X21 + 0x38]
	0x039B8B1C MOV X1, X31
	0x039B8B20 LDR X8, [X8 + 0xB8]
	0x039B8B24 LDR X22, [X8]
	0x039B8B28 LDR W23, [X8 + 0x8]
	0x039B8B2C LDR W24, [X8 + 0x5C]
	0x039B8B30 ADD X8, X31, 0x410
	0x039B8B34 BL 0x3C4B274
	0x039B8B38 LDR V0, [X31 + 0x41]
	0x039B8B3C LDR V1, [X31 + 0x42]
	0x039B8B40 LDR X8, [X31 + 0x430]
	0x039B8B44 ADD X4, X31, 0x60
	0x039B8B48 MOV X0, X20
	0x039B8B4C MOV X1, X22
	0x039B8B50 MOV W2, W23
	0x039B8B54 MOV W3, W24
	0x039B8B58 MOV X5, X31
	0x039B8B5C STP V0, V1, [X31 + 0x60]
	0x039B8B60 STR X8, [X31 + 0x80]
	0x039B8B64 BL 0x3C4EC90
	0x039B8B68 LDR X8, [X25]
	0x039B8B6C LDR X0, [X21 + 0x40]
	0x039B8B70 MOV X1, X31
	0x039B8B74 LDR X8, [X8 + 0xB8]
	0x039B8B78 LDR X22, [X8]
	0x039B8B7C LDR W23, [X8 + 0x8]
	0x039B8B80 LDR W24, [X8 + 0x60]
	0x039B8B84 ADD X8, X31, 0x410
	0x039B8B88 BL 0x3C4B274
	0x039B8B8C LDR V0, [X31 + 0x41]
	0x039B8B90 LDR V1, [X31 + 0x42]
	0x039B8B94 LDR X8, [X31 + 0x430]
	0x039B8B98 ADD X4, X31, 0x30
	0x039B8B9C MOV X0, X20
	0x039B8BA0 MOV X1, X22
	0x039B8BA4 MOV W2, W23
	0x039B8BA8 MOV W3, W24
	0x039B8BAC MOV X5, X31
	0x039B8BB0 STP V0, V1, [X31 + 0x30]
	0x039B8BB4 STR X8, [X31 + 0x50]
	0x039B8BB8 BL 0x3C4EC90
	0x039B8BBC LDR X8, [X25]
	0x039B8BC0 LDR X0, [X21 + 0x48]
	0x039B8BC4 MOV X1, X31
	0x039B8BC8 LDR X8, [X8 + 0xB8]
	0x039B8BCC LDR X22, [X8]
	0x039B8BD0 LDR W23, [X8 + 0x8]
	0x039B8BD4 LDR W24, [X8 + 0x64]
	0x039B8BD8 ADD X8, X31, 0x410
	0x039B8BDC BL 0x3C4B274
	0x039B8BE0 LDR V0, [X31 + 0x41]
	0x039B8BE4 LDR V1, [X31 + 0x42]
	0x039B8BE8 LDR X8, [X31 + 0x430]
	0x039B8BEC ADD X4, X31, 0x0
	0x039B8BF0 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X19, 0xA2A000
	015 Move W8, [X19+3185]
	016 Move X20, X3
	017 Move X21, X2
	018 Move X25, X1
	019 Move X24, X0
	020 Move [X31+68], W5
	021 Move [X31+60], W4
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x740000
	027 Move X0, [X0+712]
	028 Call 0x1C17CF4
	029 Move X0, 0x79B000
	030 Move X0, [X0+208]
	031 Call 0x1C17CF4
	032 Move X0, 0x79B000
	033 Move X0, [X0+224]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+3185], W8
	037 Compare X21, 0
	038 JumpIfEqual {254}
	039 Move W8, [X21+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, 0x79B000
	042 Move X22, [X22+224]
	043 Move W19, W31
	044 Move [X31+40], X21
	045 Move [X31+48], X20
	046 Move X2, [X22]
	047 Move X0, X21
	048 Move W1, W19
	049 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	050 Move [X31+80], X1
	051 Compare X20, 0
	052 JumpIfEqual {254}
	053 Move X8, X0
	054 ShiftRight X8, 32
	055 And X8, X8, 0x7FFFFFFF
	056 Move [X31+88], X8
	057 Move W8, [X31+60]
	058 Move X2, [X22]
	059 Move X26, X0
	060 Move X0, X20
	061 Add W1, W19, W8
	062 Move [X31+64], W19
	063 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	064 Move X29, X0
	065 Move W27, W31
	066 Move X20, X0
	067 ShiftRight X20, 32
	068 And X20, X20, 0x7FFFFFFF
	069 Move [X31+72], X1
	070 Move X8, 0x740000
	071 Move X8, [X8+712]
	072 Move X19, [X25]
	073 Move X28, [X24+24]
	074 Move W10, 512
	075 Move X0, [X8]
	076 Move W8, [X25+64]
	077 Move W9, [X0+224]
	078 Subtract W8, W8, W26
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X8, [X31+80]
	085 Move X0, X19
	086 Move X19, [X31+88]
	087 Move W6, 4
	088 Add W22, W8, W27
	089 Move X8, [X31+72]
	090 Move W1, W22
	091 Move W2, W31
	092 Move W3, W26
	093 Add W23, W8, W27
	094 Move W4, W19
	095 Move W5, W21
	096 Move X7, X28
	097 Move [X31+32], X31
	098 Move [X31+24], W20
	099 Move [X31+16], W29
	100 Move [X31+8], W31
	101 Move [X31], W23
	102 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	103 Move X0, [X25+8]
	104 Move X7, [X24+32]
	105 Move W6, 4
	106 Move W1, W22
	107 Move W2, W31
	108 Move W3, W26
	109 Move W4, W19
	110 Move W5, W21
	111 Move [X31+32], X31
	112 Move [X31+24], W20
	113 Move [X31+16], W29
	114 Move [X31+8], W31
	115 Move [X31], W23
	116 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	117 Move X0, [X25+16]
	118 Move X7, [X24+40]
	119 Move W6, 4
	120 Move W1, W22
	121 Move W2, W31
	122 Move W3, W26
	123 Move W4, W19
	124 Move W5, W21
	125 Move [X31+32], X31
	126 Move [X31+24], W20
	127 Move [X31+16], W29
	128 Move [X31+8], W31
	129 Move [X31], W23
	130 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	131 Move W8, [X24+136]
	132 Compare W8, 0
	133 JumpIfEqual {162}
	134 Move X8, 0x740000
	135 Move X8, [X8+712]
	136 Move X9, X24
	137 Move X24, X25
	138 Move X25, [X25+56]
	139 Move X0, [X8]
	140 Move X19, [X9+80]
	141 Move X28, X9
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move W6, 4
	147 Move X0, X25
	148 Move W1, W22
	149 Move W2, W31
	150 Move W3, W26
	151 Move X4, [X31+88]
	152 Move W5, W21
	153 Move X7, X19
	154 Move [X31+32], X31
	155 Move [X31+24], W20
	156 Move [X31+16], W29
	157 Move [X31+8], W31
	158 Move [X31], W23
	159 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	160 Move X25, X24
	161 Move X24, X28
	162 Move W8, [X31+68]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X8, 0x740000
	165 Move X8, [X8+712]
	166 Move X19, [X25+24]
	167 Move X28, [X24+48]
	168 Move X0, [X8]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X19
	174 Move X19, [X31+88]
	175 Move W6, 4
	176 Move W1, W22
	177 Move W2, W31
	178 Move W3, W26
	179 Move W4, W19
	180 Move W5, W21
	181 Move X7, X28
	182 Move [X31+32], X31
	183 Move [X31+24], W20
	184 Move [X31+16], W29
	185 Move [X31+8], W31
	186 Move [X31], W23
	187 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	188 Move X0, [X25+32]
	189 Move X7, [X24+56]
	190 Move W6, 4
	191 Move W1, W22
	192 Move W2, W31
	193 Move W3, W26
	194 Move W4, W19
	195 Move W5, W21
	196 Move [X31+32], X31
	197 Move [X31+24], W20
	198 Move [X31+16], W29
	199 Move [X31+8], W31
	200 Move [X31], W23
	201 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	202 Move X0, [X25+40]
	203 Move X7, [X24+64]
	204 Move W6, 4
	205 Move W1, W22
	206 Move W2, W31
	207 Move W3, W26
	208 Move W4, W19
	209 Move W5, W21
	210 Move [X31+32], X31
	211 Move [X31+24], W20
	212 Move [X31+16], W29
	213 Move [X31+8], W31
	214 Move [X31], W23
	215 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	216 Move X0, [X25+48]
	217 Move X7, [X24+72]
	218 Move W6, 4
	219 Move W1, W22
	220 Move W2, W31
	221 Move W3, W26
	222 Move W4, W19
	223 Move W5, W21
	224 Move [X31+32], X31
	225 Move [X31+24], W20
	226 Move [X31+16], W29
	227 Move [X31+8], W31
	228 Move [X31], W23
	229 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	230 Add W27, W27, 1
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X21, [X31+40]
	233 Move X20, [X31+48]
	234 Move W19, [X31+64]
	235 Move X22, 0x79B000
	236 Move W8, [X21+24]
	237 Move X22, [X22+224]
	238 Add W19, W19, 1
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X20, [X31+176]
	241 Move X19, [X31+184]
	242 Move X22, [X31+160]
	243 Move X21, [X31+168]
	244 Move X24, [X31+144]
	245 Move X23, [X31+152]
	246 Move X26, [X31+128]
	247 Move X25, [X31+136]
	248 Move X28, [X31+112]
	249 Move X27, [X31+120]
	250 Move X29, [X31+96]
	251 Move X30, [X31+104]
	252 Add X31, X31, 192
	253 Return 
	254 Call 0x1C17F20

Method: System.Void UpdateValidity(UnityEngine.Rendering.ProbeBrickPool/DataLocation source, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> srcLocations, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> dstLocations, System.Int32 destStartIndex)

Disassembly:
	0x039B8BF4 MOV X1, X22
	0x039B8BF8 MOV W2, W23
	0x039B8BFC MOV W3, W24
	0x039B8C00 MOV X5, X31
	0x039B8C04 STP V0, V1, [X31]
	0x039B8C08 STR X8, [X31 + 0x20]
	0x039B8C0C BL 0x3C4EC90
	0x039B8C10 B 0x39B8C1C
	0x039B8C14 MOV X2, X31
	0x039B8C18 BL 0x3C3B6CC
	0x039B8C1C LDR X0, [X25]
	0x039B8C20 LDP S0, S1, [X21 + 0x58]
	0x039B8C24 LDR W8, [X0 + 0xE0]
	0x039B8C28 SCVTF S10, S0
	0x039B8C2C SCVTF S9, S1
	0x039B8C30 CBNZ W8, 0x39B8C3C
	0x039B8C34 BL 0x1C16DFC
	0x039B8C38 LDR X0, [X25]
	0x039B8C3C LDR X8, [X0 + 0xB8]
	0x039B8C40 LDR X3, [X19 + 0x10]
	0x039B8C44 MOV X0, X20
	0x039B8C48 MOV X4, X31
	0x039B8C4C LDR X1, [X8]
	0x039B8C50 LDR W2, [X8 + 0x10]
	0x039B8C54 BL 0x3C4C104
	0x039B8C58 LDR X8, [X25]
	0x039B8C5C FMOV S3, W31
	0x039B8C60 MOV X0, X20
	0x039B8C64 MOV V0.16B, V10.16B
	0x039B8C68 LDR X8, [X8 + 0xB8]
	0x039B8C6C MOV V1.16B, V9.16B
	0x039B8C70 MOV V2.16B, V8.16B
	0x039B8C74 MOV X3, X31
	0x039B8C78 LDR X1, [X8]
	0x039B8C7C LDR W2, [X8 + 0xC]
	0x039B8C80 BL 0x3C4C03C
	0x039B8C84 LDR X8, [X25]
	0x039B8C88 LDR W5, [X19 + 0x18]
	0x039B8C8C MOVZ W3, 0x80
	0x039B8C90 MOVZ W4, 0x1
	0x039B8C94 LDR X8, [X8 + 0xB8]
	0x039B8C98 MOV X0, X20
	0x039B8C9C MOV X6, X31
	0x039B8CA0 LDR X1, [X8]
	0x039B8CA4 LDR W2, [X8 + 0x8]
	0x039B8CA8 BL 0x3C4ED78
	0x039B8CAC STR W31, [X19 + 0x18]
	0x039B8CB0 ADD X31, X31, 0x440
	0x039B8CB4 LDP X20, X19, [X31 + 0x60]
	0x039B8CB8 LDP X22, X21, [X31 + 0x50]
	0x039B8CBC LDP X24, X23, [X31 + 0x40]
	0x039B8CC0 LDP X26, X25, [X31 + 0x30]
	0x039B8CC4 LDP X29, X30, [X31 + 0x20]
	0x039B8CC8 LDP D9, D8, [X31 + 0x10]
	0x039B8CCC LDR V10, [X31], #0x70
	0x039B8CD0 RET
	0x039B8CD4 BL 0x1C16F20
	0x039B8CD8 STP X30, X25, [X31 - 0x40]!
	0x039B8CDC STP X24, X23, [X31 + 0x10]
	0x039B8CE0 STP X22, X21, [X31 + 0x20]
	0x039B8CE4 STP X20, X19, [X31 + 0x30]
	0x039B8CE8 ADRP X22, 0xA29000
	0x039B8CEC LDRB W8, [X22 + 0xC7A]
	0x039B8CF0 MOV X19, X2
	0x039B8CF4 MOV X20, X1
	0x039B8CF8 MOV X21, X0
	0x039B8CFC TBNZ X8, 0x0, 0x39B8D20
	0x039B8D00 ADRP X0, 0x79A000
	0x039B8D04 LDR X0, [X0 + 0xD0]
	0x039B8D08 BL 0x1C16CF4
	0x039B8D0C ADRP X0, 0x79A000
	0x039B8D10 LDR X0, [X0 + 0xE0]
	0x039B8D14 BL 0x1C16CF4
	0x039B8D18 MOVZ W8, 0x1
	0x039B8D1C STRB W8, [X22 + 0xC7A]
	0x039B8D20 CBZ X20, 0x39B8DD4
	0x039B8D24 LDR X0, [X20 + 0x18]
	0x039B8D28 CBZ X0, 0x39B8DD4
	0x039B8D2C ADRP X25, 0x79A000
	0x039B8D30 LDR X25, [X25 + 0xE0]
	0x039B8D34 MOV W22, W31
	0x039B8D38 LDR W8, [X0 + 0x18]
	0x039B8D3C CMP W22, W8
	0x039B8D40 B.GE 0x39B8DD8
	0x039B8D44 LDR X2, [X25]
	0x039B8D48 MOV W1, W22
	0x039B8D4C BL 0x3120484
	0x039B8D50 LDR X8, [X20 + 0x10]
	0x039B8D54 CBZ X8, 0x39B8DD4
	0x039B8D58 MOV X23, X0
	0x039B8D5C LDR X0, [X8 + 0x20]
	0x039B8D60 CBZ X0, 0x39B8DD4
	0x039B8D64 LDR X2, [X25]
	0x039B8D68 MOV X24, X1
	0x039B8D6C MOV W1, W22
	0x039B8D70 BL 0x3120484
	0x039B8D74 CBZ X19, 0x39B8DD4
	0x039B8D78 LDRSW X11, [X21 + 0x18]
	0x039B8D7C LDR X9, [X21 + 0x10]
	0x039B8D80 LDP W8, W10, [X19 + 0x58]
	0x039B8D84 ADD W12, W11, 0x1

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X19, 0xA2A000
	015 Move W8, [X19+3186]
	016 Move X20, X3
	017 Move X21, X2
	018 Move X22, X1
	019 Move [X31+64], W4
	020 Move [X31+72], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x740000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move X0, 0x79B000
	029 Move X0, [X0+208]
	030 Call 0x1C17CF4
	031 Move X0, 0x79B000
	032 Move X0, [X0+224]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+3186], W8
	036 Compare X21, 0
	037 JumpIfEqual {122}
	038 Move W8, [X21+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X23, 0x79B000
	041 Move X23, [X23+224]
	042 Move W19, W31
	043 Move [X31+48], X21
	044 Move [X31+56], X20
	045 Move X2, [X23]
	046 Move X0, X21
	047 Move W1, W19
	048 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	049 Compare X20, 0
	050 JumpIfEqual {122}
	051 Move W8, [X31+64]
	052 Move X2, [X23]
	053 Move X25, X0
	054 Move X26, X1
	055 Move X27, X0
	056 ShiftRight X27, 32
	057 And X27, X27, 0x7FFFFFFF
	058 Add W1, W19, W8
	059 Move X0, X20
	060 Move [X31+68], W19
	061 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	062 Move X28, X0
	063 Move X29, X1
	064 Move W24, W31
	065 Move X23, X0
	066 ShiftRight X23, 32
	067 And X23, X23, 0x7FFFFFFF
	068 Move X8, 0x740000
	069 Move X8, [X8+712]
	070 Move X10, [X31+72]
	071 Move X21, [X22+56]
	072 Move X0, [X8]
	073 Move W8, [X22+64]
	074 Move X19, [X10+80]
	075 Move W10, 512
	076 Move W9, [X0+224]
	077 Subtract W8, W8, W25
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Compare W9, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Add W1, W26, W24
	084 Add W8, W29, W24
	085 Move W6, 4
	086 Move X0, X21
	087 Move W2, W31
	088 Move W3, W25
	089 Move W4, W27
	090 Move W5, W20
	091 Move X7, X19
	092 Move [X31+32], X31
	093 Move [X31+24], W23
	094 Move [X31+16], W28
	095 Move [X31+8], W31
	096 Move [X31], W8
	097 Call Graphics.CopyTexture, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	098 Add W24, W24, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X21, [X31+48]
	101 Move X20, [X31+56]
	102 Move W19, [X31+68]
	103 Move X23, 0x79B000
	104 Move W8, [X21+24]
	105 Move X23, [X23+224]
	106 Add W19, W19, 1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X20, [X31+160]
	109 Move X19, [X31+168]
	110 Move X22, [X31+144]
	111 Move X21, [X31+152]
	112 Move X24, [X31+128]
	113 Move X23, [X31+136]
	114 Move X26, [X31+112]
	115 Move X25, [X31+120]
	116 Move X28, [X31+96]
	117 Move X27, [X31+104]
	118 Move X29, [X31+80]
	119 Move X30, [X31+88]
	120 Add X31, X31, 176
	121 Return 
	122 Call 0x1C17F20

Method: UnityEngine.Vector3Int ProbeCountToDataLocSize(System.Int32 numProbes)

Disassembly:
	0x039B8D88 STR W12, [X21 + 0x18]
	0x039B8D8C CBZ X9, 0x39B8DD4
	0x039B8D90 LDR W12, [X9 + 0x18]
	0x039B8D94 CMP W11, W12
	0x039B8D98 B.CS 0x39B8DEC
	0x039B8D9C UBFM X13, X0, 0x20, 0x3F
	0x039B8DA0 UBFM X12, X23, 0x20, 0x3F
	0x039B8DA4 MADD W10, W10, W1, W13
	0x039B8DA8 SCVTF S0, W23
	0x039B8DAC ADD X9, X9, X11, 0x4, LSL
	0x039B8DB0 SCVTF S2, W12
	0x039B8DB4 MADD W8, W10, W8, W0
	0x039B8DB8 SCVTF S1, W24
	0x039B8DBC STP S0, S2, [X9 + 0x20]
	0x039B8DC0 SCVTF S0, W8
	0x039B8DC4 STP S1, S0, [X9 + 0x28]
	0x039B8DC8 LDR X0, [X20 + 0x18]
	0x039B8DCC ADD W22, W22, 0x1
	0x039B8DD0 CBNZ X0, 0x39B8D38
	0x039B8DD4 BL 0x1C16F20
	0x039B8DD8 LDP X20, X19, [X31 + 0x30]
	0x039B8DDC LDP X22, X21, [X31 + 0x20]
	0x039B8DE0 LDP X24, X23, [X31 + 0x10]
	0x039B8DE4 LDP X30, X25, [X31], #0x40
	0x039B8DE8 RET
	0x039B8DEC BL 0x1C16F28
	0x039B8DF0 LDR X0, [X0 + 0x20]
	0x039B8DF4 CBZ X0, 0x39B8DFC
	0x039B8DF8 B 0x39B7414
	0x039B8DFC RET
	0x039B8E00 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Add W8, W0, 63
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W9, 63
	004 NotImplemented "Instruction MOVK not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction SBFM not yet implemented."
	008 Move W8, 2048
	009 Add W10, W9, 511
	010 Add W11, W9, 1022
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W13, 0x8040
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move W12, W9
	015 ShiftRight W12, 30
	016 And W12, W12, 0x1FFFFFFF
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction SBFM not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Move X10, X10
	021 ShiftRight X10, 30
	022 And X10, X10, 0x1FFFFFFF
	023 Move X10, 2048
	024 Move TEMP, 0xFFFC0000
	025 Not TEMP
	026 Move W11, TEMP
	027 Or W12, W31, 0x7FFFE
	028 Add W11, W9, W11
	029 Add W9, W9, W12
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 NotImplemented "Instruction SBFM not yet implemented."
	033 Move W1, W9
	034 ShiftRight W1, 30
	035 And W1, W1, 0x1FFFFFFF
	036 Or X0, X8, X10
	037 Return X0

Method: UnityEngine.Texture CreateDataTexture(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, System.String name, System.Boolean allocateRendertexture, ref System.Int32 allocatedBytes)

Disassembly:
	0x039B8E04 STP X20, X19, [X31 + 0x10]
	0x039B8E08 MOV X19, X2
	0x039B8E0C MOV W20, W1
	0x039B8E10 MOV X21, X0
	0x039B8E14 BL 0x39B8260
	0x039B8E18 LDR X0, [X21 + 0x20]
	0x039B8E1C CBZ X0, 0x39B8E54
	0x039B8E20 LDR W8, [X0 + 0x80]
	0x039B8E24 CMP W8, W20
	0x039B8E28 B.GE 0x39B8E3C
	0x039B8E2C LDP X20, X19, [X31 + 0x10]
	0x039B8E30 MOV W0, W31
	0x039B8E34 LDP X30, X21, [X31], #0x20
	0x039B8E38 RET
	0x039B8E3C MOV W1, W20
	0x039B8E40 MOV X2, X19
	0x039B8E44 LDP X20, X19, [X31 + 0x10]
	0x039B8E48 MOV W3, W31
	0x039B8E4C LDP X30, X21, [X31], #0x20
	0x039B8E50 B 0x39B7480
	0x039B8E54 BL 0x1C16F20
	0x039B8E58 STP X30, X21, [X31 - 0x20]!
	0x039B8E5C STP X20, X19, [X31 + 0x10]
	0x039B8E60 ADRP X21, 0xA29000
	0x039B8E64 LDRB W8, [X21 + 0xC7B]
	0x039B8E68 MOV X19, X1
	0x039B8E6C MOV X20, X0
	0x039B8E70 TBNZ X8, 0x0, 0x39B8E88
	0x039B8E74 ADRP X0, 0x79A000
	0x039B8E78 LDR X0, [X0 + 0xD0]
	0x039B8E7C BL 0x1C16CF4
	0x039B8E80 MOVZ W8, 0x1
	0x039B8E84 STRB W8, [X21 + 0xC7B]
	0x039B8E88 CBZ X19, 0x39B8EB8
	0x039B8E8C LDR W8, [X19 + 0x18]
	0x039B8E90 CBZ W8, 0x39B8EAC
	0x039B8E94 LDR X0, [X20 + 0x20]
	0x039B8E98 CBZ X0, 0x39B8EB8
	0x039B8E9C MOV X1, X19
	0x039B8EA0 LDP X20, X19, [X31 + 0x10]
	0x039B8EA4 LDP X30, X21, [X31], #0x20
	0x039B8EA8 B 0x39B76D0
	0x039B8EAC LDP X20, X19, [X31 + 0x10]
	0x039B8EB0 LDP X30, X21, [X31], #0x20
	0x039B8EB4 RET
	0x039B8EB8 BL 0x1C16F20
	0x039B8EBC STP X30, X19, [X31 - 0x10]!
	0x039B8EC0 MOV X19, X0
	0x039B8EC4 LDR X0, [X0 + 0x20]
	0x039B8EC8 CBZ X0, 0x39B8EE0
	0x039B8ECC BL 0x39B7048
	0x039B8ED0 LDR X0, [X19 + 0x28]
	0x039B8ED4 CBZ X0, 0x39B8EE8
	0x039B8ED8 LDP X30, X19, [X31], #0x10
	0x039B8EDC B 0x39B7048
	0x039B8EE0 LDP X30, X19, [X31], #0x10
	0x039B8EE4 RET
	0x039B8EE8 BL 0x1C16F20
	0x039B8EEC STP X30, X19, [X31 - 0x10]!
	0x039B8EF0 LDR X8, [X0 + 0x20]
	0x039B8EF4 CBZ X8, 0x39B8F18
	0x039B8EF8 MOV X19, X0
	0x039B8EFC ADD X0, X8, 0x18
	0x039B8F00 BL 0x39B712C
	0x039B8F04 LDR X8, [X19 + 0x28]
	0x039B8F08 CBZ X8, 0x39B8F20
	0x039B8F0C ADD X0, X8, 0x18
	0x039B8F10 LDP X30, X19, [X31], #0x10
	0x039B8F14 B 0x39B712C
	0x039B8F18 LDP X30, X19, [X31], #0x10
	0x039B8F1C RET
	0x039B8F20 BL 0x1C16F20
	0x039B8F24 STP X29, X30, [X31 - 0x60]!
	0x039B8F28 STP X28, X27, [X31 + 0x10]
	0x039B8F2C STP X26, X25, [X31 + 0x20]
	0x039B8F30 STP X24, X23, [X31 + 0x30]
	0x039B8F34 STP X22, X21, [X31 + 0x40]
	0x039B8F38 STP X20, X19, [X31 + 0x50]
	0x039B8F3C ADRP X23, 0xA29000
	0x039B8F40 ADRP X19, 0x79A000
	0x039B8F44 ADRP X22, 0x79A000
	0x039B8F48 ADRP X21, 0x79A000
	0x039B8F4C ADRP X20, 0x79A000
	0x039B8F50 ADRP X29, 0x79A000
	0x039B8F54 ADRP X28, 0x79A000
	0x039B8F58 ADRP X27, 0x79A000
	0x039B8F5C ADRP X26, 0x79A000
	0x039B8F60 ADRP X25, 0x79A000
	0x039B8F64 ADRP X24, 0x79A000
	0x039B8F68 LDR X19, [X19 + 0x260]
	0x039B8F6C LDR X22, [X22 + 0x280]
	0x039B8F70 LDR X21, [X21 + 0x288]
	0x039B8F74 LDR X20, [X20 + 0x290]
	0x039B8F78 LDR X29, [X29 + 0x298]
	0x039B8F7C LDR X28, [X28 + 0x2A0]
	0x039B8F80 LDR X27, [X27 + 0x2A8]
	0x039B8F84 LDR X26, [X26 + 0x2B0]
	0x039B8F88 LDR X25, [X25 + 0x2B8]
	0x039B8F8C LDR X24, [X24 + 0x2C0]
	0x039B8F90 LDRB W8, [X23 + 0xC7C]
	0x039B8F94 TBNZ X8, 0x0, 0x39B90C0
	0x039B8F98 ADRP X0, 0x79A000
	0x039B8F9C LDR X0, [X0 + 0x260]
	0x039B8FA0 BL 0x1C16CF4
	0x039B8FA4 ADRP X0, 0x79A000
	0x039B8FA8 LDR X0, [X0 + 0x2C8]
	0x039B8FAC BL 0x1C16CF4
	0x039B8FB0 ADRP X0, 0x79A000
	0x039B8FB4 LDR X0, [X0 + 0x2D0]
	0x039B8FB8 BL 0x1C16CF4
	0x039B8FBC ADRP X0, 0x79A000
	0x039B8FC0 LDR X0, [X0 + 0x2D8]
	0x039B8FC4 BL 0x1C16CF4
	0x039B8FC8 ADRP X0, 0x79A000
	0x039B8FCC LDR X0, [X0 + 0x2A8]
	0x039B8FD0 BL 0x1C16CF4
	0x039B8FD4 ADRP X0, 0x79A000
	0x039B8FD8 LDR X0, [X0 + 0x2E0]
	0x039B8FDC BL 0x1C16CF4
	0x039B8FE0 ADRP X0, 0x79A000
	0x039B8FE4 LDR X0, [X0 + 0x2E8]
	0x039B8FE8 BL 0x1C16CF4
	0x039B8FEC ADRP X0, 0x79A000
	0x039B8FF0 LDR X0, [X0 + 0x2B8]
	0x039B8FF4 BL 0x1C16CF4
	0x039B8FF8 ADRP X0, 0x79A000

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X26
	005 Move [X31+216], X25
	006 Move [X31+224], X24
	007 Move [X31+232], X23
	008 Move [X31+240], X22
	009 Move [X31+248], X21
	010 Move [X31+256], X20
	011 Move [X31+264], X19
	012 Move X26, 0xA2A000
	013 Move W8, [X26+3187]
	014 Move X21, X6
	015 Move W19, W5
	016 Move X20, X4
	017 Move W22, W3
	018 Move W23, W2
	019 Move W24, W1
	020 Move W25, W0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x73E000
	026 Move X0, [X0+304]
	027 Call 0x1C17CF4
	028 Move X0, 0x79B000
	029 Move X0, [X0+456]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+3187], W8
	033 Move X26, 0x73E000
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move X26, [X26+304]
	036 Move [X31+176], W31
	037 Move [X31+144], V0
	038 Move [X31+152], V0
	039 Move [X31+8], V0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, 4
	042 Move W10, [X21]
	043 NotImplemented "Instruction CSINC not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, 8
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Multiply W9, W24, W25
	048 Multiply W9, W9, W23
	049 NotImplemented "Instruction MADD not yet implemented."
	050 Move [X21], W8
	051 Move TEMP, X19
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {97}
	055 Add X8, X31, 128
	056 Add X0, X31, 128
	057 Move W1, W22
	058 Move X2, X31
	059 Move [X8+8], V0
	060 Move [X8+36], V0
	061 Move [X8+24], V0
	062 Move [X31+128], W25
	063 Move [X31+132], W24
	064 Move [X31+140], W23
	065 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	066 Move W21, 1
	067 Add X0, X31, 128
	068 Move W1, 1
	069 Move X2, X31
	070 Move [X31+144], W21
	071 Call RenderTextureDescriptor.set_enableRandomWrite, X0, X1
	072 Move W8, 3
	073 Move [X31+160], W8
	074 Move [X31+136], W21
	075 Move W9, [X31+176]
	076 Move V0, [X31+128]
	077 Move V1, [X31+144]
	078 Move V2, [X31+10]
	079 Move X0, [X26]
	080 Move [X31+112], W9
	081 Move [X31+64], V0
	082 Move [X31+72], V1
	083 Move [X31+6], V2
	084 Call 0x1C17F10
	085 Move V0, [X31+64]
	086 Move V1, [X31+80]
	087 Move V2, [X31+6]
	088 Move W8, [X31+112]
	089 Add X1, X31, 0
	090 Move X2, X31
	091 Move X21, X0
	092 Move [X31], V0
	093 Move [X31+8], V1
	094 Move [X31+2], V2
	095 Move [X31+48], W8
	096 Call RenderTexture..ctor, X0, X1
	097 Move X8, 0x79B000
	098 Move X8, [X8+456]
	099 Move X0, [X8]
	100 Call 0x1C17F10
	101 Move W6, 1
	102 Move W1, W25
	103 Move W2, W24
	104 Move W3, W23
	105 Move W4, W22
	106 Move W5, W31
	107 Move X7, X31
	108 Move X21, X0
	109 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5, X6
	110 Compare X21, 0
	111 JumpIfEqual {149}
	112 Move W1, 61
	113 Move X0, X21
	114 Move X2, X31
	115 Call Object.set_hideFlags, X0, X1
	116 Move X0, X21
	117 Move X1, X20
	118 Move X2, X31
	119 Call Object.set_name, X0, X1
	120 Move TEMP, X19
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {136}
	124 Move X9, [X21]
	125 Move X8, [X26]
	126 Move W11, [X9+304]
	127 Move W10, [X8+304]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X9, [X9+200]
	130 Add X9, X9, X10
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X21
	134 Move X1, X31
	135 Call RenderTexture.Create, X0
	136 Move X0, X21
	137 Move X20, [X31+256]
	138 Move X19, [X31+264]
	139 Move X22, [X31+240]
	140 Move X21, [X31+248]
	141 Move X24, [X31+224]
	142 Move X23, [X31+232]
	143 Move X26, [X31+208]
	144 Move X25, [X31+216]
	145 Move X29, [X31+192]
	146 Move X30, [X31+200]
	147 Add X31, X31, 272
	148 Return X0
	149 Call 0x1C17F20

Method: UnityEngine.Rendering.ProbeBrickPool/DataLocation CreateDataLocation(System.Int32 numProbes, System.Boolean compressed, UnityEngine.Rendering.ProbeVolumeSHBands bands, System.String name, System.Boolean allocateRendertexture, System.Boolean allocateValidityData, out System.Int32 allocatedBytes)

Disassembly:
	0x039B7C88 BL 0x3120484
	0x039B7C8C CBZ X20, 0x39B7D84
	0x039B7C90 LDR W8, [X31 + 0x40]
	0x039B7C94 LDR X2, [X23]
	0x039B7C98 MOV X25, X0
	0x039B7C9C MOV X26, X1
	0x039B7CA0 UBFM X27, X0, 0x20, 0x3F
	0x039B7CA4 ADD W1, W19, W8
	0x039B7CA8 MOV X0, X20
	0x039B7CAC STR W19, [X31 + 0x44]
	0x039B7CB0 BL 0x3120484
	0x039B7CB4 MOV X28, X0
	0x039B7CB8 MOV X29, X1
	0x039B7CBC MOV W24, W31
	0x039B7CC0 UBFM X23, X0, 0x20, 0x3F
	0x039B7CC4 ADRP X8, 0x740000
	0x039B7CC8 LDR X8, [X8 + 0x2C8]
	0x039B7CCC LDR X10, [X31 + 0x48]
	0x039B7CD0 LDR X21, [X22 + 0x38]
	0x039B7CD4 LDR X0, [X8]
	0x039B7CD8 LDR W8, [X22 + 0x40]
	0x039B7CDC LDR X19, [X10 + 0x50]
	0x039B7CE0 MOVZ W10, 0x200
	0x039B7CE4 LDR W9, [X0 + 0xE0]
	0x039B7CE8 SUB W8, W8, W25
	0x039B7CEC CMP W8, 0x200
	0x039B7CF0 CSEL W20, W8, W10, LT
	0x039B7CF4 CBNZ W9, 0x39B7CFC
	0x039B7CF8 BL 0x1C16DFC
	0x039B7CFC ADD W1, W26, W24
	0x039B7D00 ADD W8, W29, W24
	0x039B7D04 MOVZ W6, 0x4
	0x039B7D08 MOV X0, X21
	0x039B7D0C MOV W2, W31
	0x039B7D10 MOV W3, W25
	0x039B7D14 MOV W4, W27
	0x039B7D18 MOV W5, W20
	0x039B7D1C MOV X7, X19
	0x039B7D20 STR X31, [X31 + 0x20]
	0x039B7D24 STR W23, [X31 + 0x18]
	0x039B7D28 STR W28, [X31 + 0x10]
	0x039B7D2C STR W31, [X31 + 0x8]
	0x039B7D30 STR W8, [X31]
	0x039B7D34 BL 0x3C0EE34
	0x039B7D38 ADD W24, W24, 0x1
	0x039B7D3C CMP W24, 0x4
	0x039B7D40 B.NE 0x39B7CC4
	0x039B7D44 LDP X21, X20, [X31 + 0x30]
	0x039B7D48 LDR W19, [X31 + 0x44]
	0x039B7D4C ADRP X23, 0x79B000
	0x039B7D50 LDR W8, [X21 + 0x18]
	0x039B7D54 LDR X23, [X23 + 0xE0]
	0x039B7D58 ADD W19, W19, 0x1
	0x039B7D5C CMP W19, W8
	0x039B7D60 B.LT 0x39B7C7C
	0x039B7D64 LDP X20, X19, [X31 + 0xA0]
	0x039B7D68 LDP X22, X21, [X31 + 0x90]
	0x039B7D6C LDP X24, X23, [X31 + 0x80]
	0x039B7D70 LDP X26, X25, [X31 + 0x70]
	0x039B7D74 LDP X28, X27, [X31 + 0x60]
	0x039B7D78 LDP X29, X30, [X31 + 0x50]
	0x039B7D7C ADD X31, X31, 0xB0
	0x039B7D80 RET
	0x039B7D84 BL 0x1C16F20
	0x039B7D88 ADD W8, W0, 0x3F
	0x039B7D8C CMP W0, 0x0
	0x039B7D90 MOVZ W9, 0x3F
	0x039B7D94 MOVK W9, 0x1000000
	0x039B7D98 CSEL W8, W8, W0, LT
	0x039B7D9C CMP W0, W9
	0x039B7DA0 SBFM W9, W8, 0x6, 0x1F
	0x039B7DA4 MOVZ W8, 0x800
	0x039B7DA8 B.GT 0x39B7DD8
	0x039B7DAC ADD W10, W9, 0x1FF
	0x039B7DB0 ADD W11, W9, 0x3FE
	0x039B7DB4 CMP W10, 0x0
	0x039B7DB8 MOVZ W13, 0x8040
	0x039B7DBC CSEL W10, W11, W10, LT
	0x039B7DC0 UBFM W12, W9, 0x1E, 0x1D
	0x039B7DC4 CMP W0, W13
	0x039B7DC8 SBFM W10, W10, 0x9, 0x1F
	0x039B7DCC CSEL W8, W12, W8, LT
	0x039B7DD0 UBFM X10, X10, 0x1E, 0x1D
	0x039B7DD4 B 0x39B7DDC
	0x039B7DD8 MOVZ X10, 0x800
	0x039B7DDC MOVN W11, 0xFFFC0000
	0x039B7DE0 ORR W12, W31, 0x7FFFE
	0x039B7DE4 ADD W11, W9, W11
	0x039B7DE8 ADD W9, W9, W12
	0x039B7DEC CMP W11, 0x0
	0x039B7DF0 CSEL W9, W9, W11, LT
	0x039B7DF4 SBFM W9, W9, 0x12, 0x1F
	0x039B7DF8 UBFM W1, W9, 0x1E, 0x1D
	0x039B7DFC ORR X0, X8, X10, 0x0
	0x039B7E00 RET
	0x039B7E04 SUB X31, X31, 0x110
	0x039B7E08 STP X29, X30, [X31 + 0xC0]
	0x039B7E0C STP X26, X25, [X31 + 0xD0]
	0x039B7E10 STP X24, X23, [X31 + 0xE0]
	0x039B7E14 STP X22, X21, [X31 + 0xF0]
	0x039B7E18 STP X20, X19, [X31 + 0x100]
	0x039B7E1C ADRP X26, 0xA2A000
	0x039B7E20 LDRB W8, [X26 + 0xC73]
	0x039B7E24 MOV X21, X6
	0x039B7E28 MOV W19, W5
	0x039B7E2C MOV X20, X4
	0x039B7E30 MOV W22, W3
	0x039B7E34 MOV W23, W2
	0x039B7E38 MOV W24, W1
	0x039B7E3C MOV W25, W0
	0x039B7E40 TBNZ X8, 0x0, 0x39B7E64
	0x039B7E44 ADRP X0, 0x73E000
	0x039B7E48 LDR X0, [X0 + 0x130]
	0x039B7E4C BL 0x1C16CF4
	0x039B7E50 ADRP X0, 0x79B000
	0x039B7E54 LDR X0, [X0 + 0x1C8]
	0x039B7E58 BL 0x1C16CF4
	0x039B7E5C MOVZ W8, 0x1
	0x039B7E60 STRB W8, [X26 + 0xC73]
	0x039B7E64 ADRP X26, 0x73E000
	0x039B7E68 MOVI V0.2D, 0x0
	0x039B7E6C LDR X26, [X26 + 0x130]
	0x039B7E70 STR W31, [X31 + 0xB0]
	0x039B7E74 STP V0, V0, [X31 + 0x90]
	0x039B7E78 STR V0, [X31 + 0x8]
	0x039B7E7C CMP W22, 0x8
	0x039B7E80 MOVZ W8, 0x4
	0x039B7E84 LDR W10, [X21]
	0x039B7E88 CSINC W8, W8, W31, EQ
	0x039B7E8C CMP W22, 0x30
	0x039B7E90 MOVZ W9, 0x8
	0x039B7E94 CSEL W8, W9, W8, EQ
	0x039B7E98 MUL W9, W24, W25
	0x039B7E9C MUL W9, W9, W23
	0x039B7EA0 MADD W8, W9, W8, W10
	0x039B7EA4 STR W8, [X21]
	0x039B7EA8 TBZ X19, 0x0, 0x39B7F44
	0x039B7EAC ADD X8, X31, 0x80
	0x039B7EB0 ADD X0, X31, 0x80
	0x039B7EB4 MOV W1, W22
	0x039B7EB8 MOV X2, X31
	0x039B7EBC STUR V0, [X8 + 0x8]
	0x039B7EC0 STUR V0, [X8 + 0x24]
	0x039B7EC4 STUR V0, [X8 + 0x18]
	0x039B7EC8 STP W25, W24, [X31 + 0x80]
	0x039B7ECC STR W23, [X31 + 0x8C]
	0x039B7ED0 BL 0x3C2240C
	0x039B7ED4 MOVZ W21, 0x1
	0x039B7ED8 ADD X0, X31, 0x80
	0x039B7EDC MOVZ W1, 0x1
	0x039B7EE0 MOV X2, X31
	0x039B7EE4 STR W21, [X31 + 0x90]
	0x039B7EE8 BL 0x3C22B70
	0x039B7EEC MOVZ W8, 0x3
	0x039B7EF0 STR W8, [X31 + 0xA0]
	0x039B7EF4 STR W21, [X31 + 0x88]
	0x039B7EF8 LDR W9, [X31 + 0xB0]
	0x039B7EFC LDP V0, V1, [X31 + 0x80]
	0x039B7F00 LDR V2, [X31 + 0xA]
	0x039B7F04 LDR X0, [X26]
	0x039B7F08 STR W9, [X31 + 0x70]
	0x039B7F0C STP V0, V1, [X31 + 0x40]
	0x039B7F10 STR V2, [X31 + 0x6]
	0x039B7F14 BL 0x1C16F10
	0x039B7F18 LDP V0, V1, [X31 + 0x40]
	0x039B7F1C LDR V2, [X31 + 0x6]
	0x039B7F20 LDR W8, [X31 + 0x70]
	0x039B7F24 ADD X1, X31, 0x0
	0x039B7F28 MOV X2, X31
	0x039B7F2C MOV X21, X0
	0x039B7F30 STP V0, V1, [X31]
	0x039B7F34 STR V2, [X31 + 0x2]
	0x039B7F38 STR W8, [X31 + 0x30]
	0x039B7F3C BL 0x3C20CE4
	0x039B7F40 B 0x39B7F78
	0x039B7F44 ADRP X8, 0x79B000
	0x039B7F48 LDR X8, [X8 + 0x1C8]
	0x039B7F4C LDR X0, [X8]
	0x039B7F50 BL 0x1C16F10
	0x039B7F54 MOVZ W6, 0x1
	0x039B7F58 MOV W1, W25
	0x039B7F5C MOV W2, W24
	0x039B7F60 MOV W3, W23
	0x039B7F64 MOV W4, W22
	0x039B7F68 MOV W5, W31
	0x039B7F6C MOV X7, X31
	0x039B7F70 MOV X21, X0
	0x039B7F74 BL 0x3C1D830
	0x039B7F78 CBZ X21, 0x39B7FF8
	0x039B7F7C MOVZ W1, 0x3D
	0x039B7F80 MOV X0, X21
	0x039B7F84 MOV X2, X31
	0x039B7F88 BL 0x3C396EC
	0x039B7F8C MOV X0, X21
	0x039B7F90 MOV X1, X20
	0x039B7F94 MOV X2, X31
	0x039B7F98 BL 0x3C38A84
	0x039B7F9C TBZ X19, 0x0, 0x39B7FD8
	0x039B7FA0 LDR X9, [X21]
	0x039B7FA4 LDR X8, [X26]
	0x039B7FA8 LDRB W11, [X9 + 0x130]
	0x039B7FAC LDRB W10, [X8 + 0x130]
	0x039B7FB0 CMP W11, W10
	0x039B7FB4 B.CC 0x39B7FF8
	0x039B7FB8 LDR X9, [X9 + 0xC8]
	0x039B7FBC ADD X9, X9, X10, 0x3, LSL
	0x039B7FC0 LDUR X9, [X9 - 0x8]
	0x039B7FC4 CMP X9, X8
	0x039B7FC8 B.NE 0x39B7FF8
	0x039B7FCC MOV X0, X21
	0x039B7FD0 MOV X1, X31
	0x039B7FD4 BL 0x3C20A14
	0x039B7FD8 MOV X0, X21
	0x039B7FDC LDP X20, X19, [X31 + 0x100]
	0x039B7FE0 LDP X22, X21, [X31 + 0xF0]
	0x039B7FE4 LDP X24, X23, [X31 + 0xE0]
	0x039B7FE8 LDP X26, X25, [X31 + 0xD0]
	0x039B7FEC LDP X29, X30, [X31 + 0xC0]
	0x039B7FF0 ADD X31, X31, 0x110
	0x039B7FF4 RET
	0x039B7FF8 BL 0x1C16F20
	0x039B7FFC ADD X0, X0, 0x18
	0x039B8000 B 0x39B712C
	0x039B8004 STR X30, [X31 - 0x20]!
	0x039B8008 STP X20, X19, [X31 + 0x10]
	0x039B800C ADRP X20, 0xA29000
	0x039B8010 ADRP X19, 0x79A000
	0x039B8014 LDRB W8, [X20 + 0xC76]
	0x039B8018 LDR X19, [X19 + 0x260]
	0x039B801C TBNZ X8, 0x0, 0x39B8040
	0x039B8020 ADRP X0, 0x73B000
	0x039B8024 LDR X0, [X0 + 0x598]
	0x039B8028 BL 0x1C16CF4
	0x039B802C ADRP X0, 0x79A000
	0x039B8030 LDR X0, [X0 + 0x260]
	0x039B8034 BL 0x1C16CF4
	0x039B8038 MOVZ W8, 0x1
	0x039B803C STRB W8, [X20 + 0xC76]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0xA2B000
	015 Move W9, [X22+3188]
	016 Move X20, X6
	017 Move W26, W5
	018 Move W24, W4
	019 Move X21, X3
	020 Move W25, W1
	021 Move W27, W0
	022 Move X19, X8
	023 Move [X31+24], W2
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {57}
	028 Move X0, 0x79C000
	029 Move X0, [X0+456]
	030 Call 0x1C17CF4
	031 Move X0, 0x79C000
	032 Move X0, [X0+464]
	033 Call 0x1C17CF4
	034 Move X0, 0x79C000
	035 Move X0, [X0+472]
	036 Call 0x1C17CF4
	037 Move X0, 0x79C000
	038 Move X0, [X0+480]
	039 Call 0x1C17CF4
	040 Move X0, 0x79C000
	041 Move X0, [X0+488]
	042 Call 0x1C17CF4
	043 Move X0, 0x79C000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0x79C000
	047 Move X0, [X0+504]
	048 Call 0x1C17CF4
	049 Move X0, 0x79C000
	050 Move X0, [X0+512]
	051 Call 0x1C17CF4
	052 Move X0, 0x79C000
	053 Move X0, [X0+520]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+3188], W8
	057 Move X8, 0x79C000
	058 Move X29, 0x79C000
	059 Move X8, [X8+512]
	060 Move X29, [X29+496]
	061 Add W9, W27, 63
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W10, 63
	064 NotImplemented "Instruction MOVK not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move W22, 2048
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction SBFM not yet implemented."
	069 Move W23, 2048
	070 Add W10, W9, 511
	071 Add W11, W9, 1022
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W13, 0x8040
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Move W12, W9
	076 ShiftRight W12, 30
	077 And W12, W12, 0x1FFFFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction SBFM not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Move W22, W10
	082 ShiftRight W22, 30
	083 And W22, W22, 0x1FFFFFFF
	084 Move TEMP, 0xFFFC0000
	085 Not TEMP
	086 Move W10, TEMP
	087 Move [X20], W31
	088 Or W11, W31, 0x7FFFE
	089 Add W10, W9, W10
	090 Move X1, [X8]
	091 Add W9, W9, W11
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Move W12, 8
	095 Move W13, 109
	096 And W31, W25, 1
	097 NotImplemented "Instruction SBFM not yet implemented."
	098 Move X0, X21
	099 Move X2, X31
	100 Move W25, W8
	101 ShiftRight W25, 30
	102 And W25, W25, 0x1FFFFFFF
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 Call String.Concat, X0, X1
	105 And W27, W24, 1
	106 Move X4, X0
	107 Move W3, 48
	108 Move W0, W23
	109 Move W1, W22
	110 Move W2, W25
	111 Move W5, W27
	112 Move X6, X20
	113 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	114 Move X1, [X29]
	115 Move [X31+16], X0
	116 Move X0, X21
	117 Move X2, X31
	118 Call String.Concat, X0, X1
	119 Move X4, X0
	120 Move W0, W23
	121 Move W1, W22
	122 Move W2, W25
	123 Move W3, W28
	124 Move W5, W27
	125 Move X6, X20
	126 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	127 Move X8, 0x79C000
	128 Move X8, [X8+488]
	129 Move [X31+8], X0
	130 Move X0, X21
	131 Move X2, X31
	132 Move X1, [X8]
	133 Call String.Concat, X0, X1
	134 Move X4, X0
	135 Move W0, W23
	136 Move W1, W22
	137 Move W2, W25
	138 Move W3, W28
	139 Move W5, W27
	140 Move X6, X20
	141 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	142 Move X9, X31
	143 Move [X31], X0
	144 Move TEMP, X26
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {171}
	148 Move X8, 0x79C000
	149 Move X8, [X8+464]
	150 Move X0, X21
	151 Move X2, X31
	152 Move X1, [X8]
	153 Call String.Concat, X0, X1
	154 Move X4, X0
	155 Move W3, 5
	156 Move W0, W23
	157 Move W1, W22
	158 Move W2, W25
	159 Move W5, W31
	160 Move X6, X20
	161 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	162 Compare X0, 0
	163 JumpIfEqual {170}
	164 Move X8, 0x79C000
	165 Move X8, [X8+456]
	166 Move X9, [X0]
	167 Move X8, [X8]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 Move X9, X31
	171 Move W8, [X31+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, 0x79C000
	174 Move X8, [X8+480]
	175 Move X0, X21
	176 Move X2, X31
	177 Move [X31+24], X9
	178 Move X1, [X8]
	179 Call String.Concat, X0, X1
	180 And W26, W24, 1
	181 Move X4, X0
	182 Move W0, W23
	183 Move W1, W22
	184 Move W2, W25
	185 Move W3, W28
	186 Move W5, W26
	187 Move X6, X20
	188 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	189 Move X8, 0x79C000
	190 Move X8, [X8+472]
	191 Move X24, X0
	192 Move X0, X21
	193 Move X2, X31
	194 Move X1, [X8]
	195 Call String.Concat, X0, X1
	196 Move X4, X0
	197 Move W0, W23
	198 Move W1, W22
	199 Move W2, W25
	200 Move W3, W28
	201 Move W5, W26
	202 Move X6, X20
	203 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	204 Move X8, 0x79C000
	205 Move X8, [X8+504]
	206 Move X29, X0
	207 Move X0, X21
	208 Move X2, X31
	209 Move X1, [X8]
	210 Call String.Concat, X0, X1
	211 Move X4, X0
	212 Move W0, W23
	213 Move W1, W22
	214 Move W2, W25
	215 Move W3, W28
	216 Move W5, W26
	217 Move X6, X20
	218 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	219 Move X8, 0x79C000
	220 Move X8, [X8+520]
	221 Move X27, X0
	222 Move X0, X21
	223 Move X2, X31
	224 Move X1, [X8]
	225 Call String.Concat, X0, X1
	226 Move X4, X0
	227 Move W0, W23
	228 Move W1, W22
	229 Move W2, W25
	230 Move W3, W28
	231 Move W5, W26
	232 Move X6, X20
	233 Call ProbeBrickPool.CreateDataTexture, X0, X1, X2, X3, X4, X5, X6
	234 Move X9, [X31+24]
	235 Move X24, X31
	236 Move X29, X31
	237 Move X27, X31
	238 Move X0, X31
	239 Move X10, [X31+16]
	240 Move X8, [X31+8]
	241 Move [X19+32], X29
	242 Move [X19+40], X27
	243 Move [X19+48], X0
	244 Move [X19+56], X9
	245 Move [X19+64], W23
	246 Move [X19+68], W22
	247 Move [X19], X10
	248 Move [X19+8], X8
	249 Move X8, [X31]
	250 Move [X19+72], W25
	251 Move [X19+76], W31
	252 Move X22, [X31+96]
	253 Move X21, [X31+104]
	254 Move X26, [X31+64]
	255 Move X25, [X31+72]
	256 Move [X19+16], X8
	257 Move [X19+24], X24
	258 Move X20, [X31+112]
	259 Move X19, [X31+120]
	260 Move X24, [X31+80]
	261 Move X23, [X31+88]
	262 Move X28, [X31+48]
	263 Move X27, [X31+56]
	264 Move X29, [X31+32]
	265 Move X30, [X31+40]
	266 Add X31, X31, 128
	267 Return X0

Method: System.Void DerivePoolSizeFromBudget(UnityEngine.Rendering.ProbeVolumeTextureMemoryBudget memoryBudget, out System.Int32 width, out System.Int32 height, out System.Int32 depth)

Disassembly:
	0x039B7C74 MOV W19, W31
	0x039B7C78 STP X21, X20, [X31 + 0x30]
	0x039B7C7C LDR X2, [X23]
	0x039B7C80 MOV X0, X21
	0x039B7C84 MOV W1, W19

ISIL:
	001 Move W8, 4
	002 Move [X2], W1
	003 Move [X3], W1
	004 Move [X4], W8
	005 Return 

Method: System.Void Cleanup()

Disassembly:
	0x039B8FFC LDR X0, [X0 + 0x2F0]
	0x039B9000 BL 0x1C16CF4

ISIL:
	001 Add X0, X0, 24
	002 Call DataLocation.Cleanup, X0
	003 Return 

