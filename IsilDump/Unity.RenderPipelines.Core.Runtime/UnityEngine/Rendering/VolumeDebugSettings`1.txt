Type: UnityEngine.Rendering.VolumeDebugSettings`1

Method: System.Int32 get_selectedComponent()

Disassembly:
	0x02847A08 BL 0x33A0EDC
	0x02847A0C CBZ X20, 0x2847B04

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_selectedComponent(System.Int32 value)

Disassembly:
	0x02847A10 MOV W22, W0
	0x02847A14 MOVZ W1, 0x1

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: UnityEngine.Camera get_selectedCamera()

Disassembly:
	0x02847A18 MOV X0, X20
	0x02847A1C MOV X2, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Int32 get_selectedCameraIndex()

Disassembly:
	0x02847A20 MOVZ W21, 0x1
	0x02847A24 BL 0x33A0EDC

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_selectedCameraIndex(System.Int32 value)

Disassembly:
	0x02847A28 CMP W22, W0
	0x02847A2C B.NE 0x2847B0C
	0x02847A30 LDR X0, [X19 + 0x48]
	0x02847A34 CBZ X0, 0x2847B04
	0x02847A38 MOV X21, X31
	0x02847A3C MOV W1, W31
	0x02847A40 MOV X2, X31
	0x02847A44 BL 0x33A0EDC
	0x02847A48 CMP X21, W0, SXTW
	0x02847A4C B.GE 0x2847B20
	0x02847A50 LDR X0, [X19 + 0x48]
	0x02847A54 CBZ X0, 0x2847B04
	0x02847A58 MOVZ W1, 0x1
	0x02847A5C MOV X2, X31
	0x02847A60 BL 0x33A0EDC
	0x02847A64 CMP W0, 0x1
	0x02847A68 B.LT 0x2847AF8
	0x02847A6C MOV X22, X31
	0x02847A70 LDR X0, [X19 + 0x48]
	0x02847A74 CBZ X0, 0x2847B04
	0x02847A78 LDR X8, [X0 + 0x10]
	0x02847A7C LDR W9, [X8]
	0x02847A80 CMP X21, X9
	0x02847A84 B.CS 0x2847B28
	0x02847A88 LDR X8, [X8 + 0x10]
	0x02847A8C CMP X22, W8, UXTW
	0x02847A90 B.CS 0x2847B28
	0x02847A94 LDR X9, [X20 + 0x10]
	0x02847A98 LDR W10, [X9]
	0x02847A9C CMP X21, X10
	0x02847AA0 B.CS 0x2847B28
	0x02847AA4 LDR X9, [X9 + 0x10]
	0x02847AA8 CMP X22, W9, UXTW
	0x02847AAC B.CS 0x2847B28
	0x02847AB0 MADD X8, X21, X8, X22
	0x02847AB4 MADD X9, X21, X9, X22
	0x02847AB8 ADD X8, X0, X8, 0x3, LSL
	0x02847ABC LDR X8, [X8 + 0x20]
	0x02847AC0 ADD X9, X20, X9, 0x3, LSL
	0x02847AC4 LDR X9, [X9 + 0x20]
	0x02847AC8 CMP X8, 0x0
	0x02847ACC CSET W8, NE
	0x02847AD0 CMP X9, 0x0
	0x02847AD4 CSET W9, EQ
	0x02847AD8 EOR W8, W8, W9, 0x0
	0x02847ADC TBZ X8, 0x0, 0x2847B08
	0x02847AE0 MOVZ W1, 0x1
	0x02847AE4 MOV X2, X31
	0x02847AE8 ADD X22, X22, 0x1
	0x02847AEC BL 0x33A0EDC
	0x02847AF0 CMP X22, W0, SXTW
	0x02847AF4 B.LT 0x2847A70
	0x02847AF8 LDR X0, [X19 + 0x48]
	0x02847AFC ADD X21, X21, 0x1
	0x02847B00 CBNZ X0, 0x2847A3C
	0x02847B04 BL 0x1C16F20
	0x02847B08 MOVZ W21, 0x1
	0x02847B0C MOV W0, W21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1B94000
	008 Move X22, 0x18D7000
	009 Move W8, [X23+2747]
	010 Move X22, [X22+3968]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x18D7000
	019 Move X0, [X0+3968]
	020 Call 0x1C17CF4
	021 Move X0, 0x18D7000
	022 Move X0, [X0+3976]
	023 Call 0x1C17CF4
	024 Move X0, 0x18D7000
	025 Move X0, [X0+3984]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2747], W8
	029 Move [X19+32], W21
	030 Move X8, [X20+32]
	031 Move X0, X19
	032 Move X8, [X8+192]
	033 Move X1, [X8+8]
	034 Call 0x2847B10, X0
	035 Move X1, [X22]
	036 Call Enumerable.Count, X0
	037 Compare W0, 0
	038 JumpIfEqual {56}
	039 Move X8, [X20+32]
	040 Move W20, [X19+32]
	041 Move W21, W0
	042 Move X0, X19
	043 Move X8, [X8+192]
	044 Move X1, [X8+8]
	045 Call 0x2847B10, X0
	046 Move TEMP, X20
	047 And TEMP, TEMP, -2147483648
	048 Compare TEMP, -2147483648
	049 JumpIfEqual {57}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, 0x18D7000
	052 Move W1, [X19+32]
	053 Move X8, [X8+3976]
	054 Move X2, [X8]
	055 Call Enumerable.ElementAt, X0, X1
	056 Move [X19+24], X31
	057 Move X8, 0x18D7000
	058 Move X8, [X8+3984]
	059 Move X1, [X8]
	060 Call Enumerable.First, X0
	061 Move [X19+24], X0
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.Camera> get_cameras()

Disassembly:
	0x02847B10 LDP X20, X19, [X31 + 0x20]
	0x02847B14 LDP X22, X21, [X31 + 0x10]
	0x02847B18 LDR X30, [X31], #0x30
	0x02847B1C RET
	0x02847B20 MOV W21, W31
	0x02847B24 B 0x2847B0C
	0x02847B28 BL 0x1C16F28
	0x02847B2C STR D10, [X31 - 0x50]!
	0x02847B30 STP D9, D8, [X31 + 0x10]
	0x02847B34 STP X30, X23, [X31 + 0x20]
	0x02847B38 STP X22, X21, [X31 + 0x30]
	0x02847B3C STP X20, X19, [X31 + 0x40]
	0x02847B40 ADRP X22, 0x1B93000
	0x02847B44 LDRB W8, [X22 + 0xAC5]
	0x02847B48 MOV X19, X2
	0x02847B4C MOV X21, X1
	0x02847B50 MOV X20, X0
	0x02847B54 TBNZ X8, 0x0, 0x2847B84
	0x02847B58 ADRP X0, 0x18D7000
	0x02847B5C LDR X0, [X0 + 0x8]
	0x02847B60 BL 0x1C16CF4
	0x02847B64 ADRP X0, 0x18AC000
	0x02847B68 LDR X0, [X0 + 0x638]
	0x02847B6C BL 0x1C16CF4
	0x02847B70 ADRP X0, 0x18D7000
	0x02847B74 LDR X0, [X0 + 0x10]
	0x02847B78 BL 0x1C16CF4
	0x02847B7C MOVZ W8, 0x1
	0x02847B80 STRB W8, [X22 + 0xAC5]
	0x02847B84 LDR X1, [X20 + 0x40]
	0x02847B88 CBZ X1, 0x2847BDC
	0x02847B8C ADRP X8, 0x18D7000
	0x02847B90 LDR X8, [X8 + 0x8]
	0x02847B94 MOV X0, X21
	0x02847B98 LDR X2, [X8]
	0x02847B9C BL 0x21D15D4
	0x02847BA0 TBZ X0, 0x0, 0x2847BDC
	0x02847BA4 LDR X8, [X19 + 0x20]
	0x02847BA8 MOV X0, X20
	0x02847BAC LDR X8, [X8 + 0xC0]
	0x02847BB0 LDR X1, [X8 + 0xA8]
	0x02847BB4 BL 0x2847680
	0x02847BB8 LDR X8, [X20 + 0x48]
	0x02847BBC MOV X21, X0
	0x02847BC0 CBZ X8, 0x2847BD4
	0x02847BC4 MOV X0, X20
	0x02847BC8 MOV X1, X21
	0x02847BCC BL 0x28479E4
	0x02847BD0 TBZ X0, 0x0, 0x2847D20
	0x02847BD4 STR X21, [X20 + 0x48]
	0x02847BD8 B 0x2847C4C
	0x02847BDC CBZ X21, 0x2847D00
	0x02847BE0 MOV X0, X21
	0x02847BE4 MOV X1, X31
	0x02847BE8 BL 0x33A01F0
	0x02847BEC CBZ X0, 0x2847C30
	0x02847BF0 ADRP X23, 0x18D7000
	0x02847BF4 LDR X23, [X23 + 0x10]
	0x02847BF8 MOV X21, X0
	0x02847BFC LDR X22, [X23]
	0x02847C00 MOV X1, X22
	0x02847C04 BL 0x1C16E00
	0x02847C08 CBZ X0, 0x2847C24
	0x02847C0C STR X0, [X20 + 0x40]
	0x02847C10 LDR X22, [X23]
	0x02847C14 MOV X0, X21
	0x02847C18 MOV X1, X22
	0x02847C1C BL 0x1C16E00
	0x02847C20 CBNZ X0, 0x2847C34
	0x02847C24 MOV X0, X21
	0x02847C28 MOV X1, X22
	0x02847C2C BL 0x1C171E0
	0x02847C30 STR X31, [X20 + 0x40]
	0x02847C34 LDR X8, [X19 + 0x20]
	0x02847C38 MOV X0, X20
	0x02847C3C LDR X8, [X8 + 0xC0]
	0x02847C40 LDR X1, [X8 + 0xA8]
	0x02847C44 BL 0x2847680
	0x02847C48 STR X0, [X20 + 0x48]
	0x02847C4C MOVZ W21, 0x1
	0x02847C50 LDR X8, [X20]
	0x02847C54 MOV X0, X20
	0x02847C58 LDR X9, [X8 + 0x2A8]
	0x02847C5C LDR X1, [X8 + 0x2B0]
	0x02847C60 BLR X9
	0x02847C64 LDR X8, [X20 + 0x40]
	0x02847C68 CBZ X8, 0x2847D00
	0x02847C6C ADRP X9, 0x18AC000
	0x02847C70 LDR X9, [X9 + 0x638]
	0x02847C74 LDR W1, [X8 + 0x18]
	0x02847C78 MOV V8.16B, V0.16B
	0x02847C7C MOV V9.16B, V1.16B
	0x02847C80 LDR X0, [X9]
	0x02847C84 MOV V10.16B, V2.16B
	0x02847C88 BL 0x1C16D6C
	0x02847C8C LDR X8, [X20 + 0x40]
	0x02847C90 STR X0, [X20 + 0x38]
	0x02847C94 CBZ X8, 0x2847D00
	0x02847C98 MOV X22, X31
	0x02847C9C LDR W9, [X8 + 0x18]
	0x02847CA0 CMP X22, W9, SXTW
	0x02847CA4 B.GE 0x2847D04
	0x02847CA8 CMP X22, X9
	0x02847CAC B.CS 0x2847D28
	0x02847CB0 LDR X9, [X19 + 0x20]
	0x02847CB4 ADD X8, X8, X22, 0x3, LSL
	0x02847CB8 LDR X1, [X8 + 0x20]
	0x02847CBC LDR X23, [X20 + 0x38]
	0x02847CC0 LDR X9, [X9 + 0xC0]
	0x02847CC4 MOV X0, X20
	0x02847CC8 MOV V0.16B, V8.16B
	0x02847CCC MOV V1.16B, V9.16B
	0x02847CD0 LDR X2, [X9 + 0xC0]
	0x02847CD4 MOV V2.16B, V10.16B
	0x02847CD8 BL 0x28471D8
	0x02847CDC CBZ X23, 0x2847D00
	0x02847CE0 LDR W8, [X23 + 0x18]
	0x02847CE4 CMP X22, X8
	0x02847CE8 B.CS 0x2847D28
	0x02847CEC ADD X8, X23, X22, 0x2, LSL
	0x02847CF0 STR S0, [X8 + 0x20]
	0x02847CF4 LDR X8, [X20 + 0x40]
	0x02847CF8 ADD X22, X22, 0x1
	0x02847CFC CBNZ X8, 0x2847C9C
	0x02847D00 BL 0x1C16F20
	0x02847D04 MOV W0, W21
	0x02847D08 LDP X20, X19, [X31 + 0x40]
	0x02847D0C LDP X22, X21, [X31 + 0x30]
	0x02847D10 LDP X30, X23, [X31 + 0x20]
	0x02847D14 LDP D9, D8, [X31 + 0x10]
	0x02847D18 LDR V10, [X31], #0x50
	0x02847D1C RET
	0x02847D20 MOV W21, W31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1B94000
	011 Move W8, [X21+2748]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x18D7000
	019 Move X0, [X0+3992]
	020 Call 0x1C17CF4
	021 Move X0, 0x18D6000
	022 Move X0, [X0+2184]
	023 Call 0x1C17CF4
	024 Move X0, 0x18D7000
	025 Move X0, [X0+4000]
	026 Call 0x1C17CF4
	027 Move X0, 0x18AD000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2748], W8
	032 Move [X31+8], X31
	033 Move X8, [X20+48]
	034 Compare X8, 0
	035 JumpIfEqual {149}
	036 Move W2, [X8+24]
	037 Move W9, [X8+28]
	038 Add W9, W9, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X8+24], W31
	041 Move [X8+28], W9
	042 Move X0, [X8+16]
	043 Move W1, W31
	044 Move X3, X31
	045 Call Array.Clear, X0, X1, X2
	046 Move X21, [X20+40]
	047 Compare X21, 0
	048 JumpIfEqual {54}
	049 Move X0, X31
	050 Call Camera.get_allCamerasCount
	051 Move W8, [X21+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X20+40]
	054 Move X21, 0x18D7000
	055 Move X21, [X21+3992]
	056 Move X0, X31
	057 Call Camera.get_allCamerasCount
	058 Move X8, [X21]
	059 Move W1, W0
	060 Move X0, X8
	061 Call 0x1C17D6C
	062 Move [X20+40], X0
	063 Move X1, X31
	064 Call Camera.GetAllCameras, X0
	065 Move X22, [X20+40]
	066 Compare X22, 0
	067 JumpIfEqual {149}
	068 Move X8, [X22+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X24, 0x18AD000
	071 Move X25, 0x18D6000
	072 Move X24, [X24+1432]
	073 Move X25, [X25+2184]
	074 Move X23, X31
	075 And X8, X8, 0
	076 Add X26, X22, 32
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, [X24]
	079 Move X21, [X26]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Move X2, X31
	087 Call Object.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {134}
	092 Compare X21, 0
	093 JumpIfEqual {149}
	094 Move X0, X21
	095 Move X1, X31
	096 Call Camera.get_cameraType, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X21
	099 Move X1, X31
	100 Call Camera.get_cameraType, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X19+32]
	103 Add X1, X31, 8
	104 Move X0, X21
	105 Move X8, [X8+192]
	106 Move X2, [X8+16]
	107 Call 0x21A5990, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {134}
	112 Move X0, [X20+48]
	113 Compare X0, 0
	114 JumpIfEqual {149}
	115 Move W10, [X0+28]
	116 Move X8, [X0+16]
	117 Move X9, [X25]
	118 Add W10, W10, 1
	119 Move [X0+28], W10
	120 Compare X8, 0
	121 JumpIfEqual {149}
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Move W11, [X8+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add W9, W10, 1
	126 Add X8, X8, X10
	127 Move [X0+24], W9
	128 Move [X8+32], X21
	129 Move X8, [X9+32]
	130 Move X1, X21
	131 Move X8, [X8+192]
	132 Move X2, [X8+112]
	133 Call List`1<Object>.AddWithResize, X0, X1
	134 Move W8, [X22+24]
	135 Add X23, X23, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X20+48]
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X26, [X31+16]
	145 Move X25, [X31+24]
	146 Move X30, [X31+80]
	147 Return X0
	148 Call 0x1C17F28
	149 Call 0x1C17F20

Method: UnityEngine.Rendering.VolumeStack get_selectedCameraVolumeStack()

Disassembly:
	

ISIL:
No ISIL was generated
Method: UnityEngine.LayerMask get_selectedCameraLayerMask()

Disassembly:
	

ISIL:
No ISIL was generated
Method: UnityEngine.Vector3 get_selectedCameraPosition()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Type get_selectedComponentType()

Disassembly:
	0x02847D24 B 0x2847C50
	0x02847D28 BL 0x1C16F28
	0x02847D2C STP D11, D10, [X31 - 0x50]!
	0x02847D30 STP D9, D8, [X31 + 0x10]
	0x02847D34 STP X30, X23, [X31 + 0x20]
	0x02847D38 STP X22, X21, [X31 + 0x30]
	0x02847D3C STP X20, X19, [X31 + 0x40]
	0x02847D40 ADRP X21, 0x1B93000
	0x02847D44 LDRB W8, [X21 + 0xAC6]
	0x02847D48 MOV X19, X1
	0x02847D4C MOV X20, X0
	0x02847D50 TBNZ X8, 0x0, 0x2847D68
	0x02847D54 ADRP X0, 0x18AC000
	0x02847D58 LDR X0, [X0 + 0x598]
	0x02847D5C BL 0x1C16CF4
	0x02847D60 MOVZ W8, 0x1
	0x02847D64 STRB W8, [X21 + 0xAC6]
	0x02847D68 LDR X8, [X20 + 0x38]
	0x02847D6C CBZ X8, 0x2847E08
	0x02847D70 LDR X8, [X20 + 0x40]
	0x02847D74 CBZ X8, 0x2847E04
	0x02847D78 ADRP X23, 0x18AC000
	0x02847D7C LDR X23, [X23 + 0x598]
	0x02847D80 MOV X22, X31
	0x02847D84 FMOV S8, W31
	0x02847D88 FMOV S9, 1
	0x02847D8C FMOV S10, W31
	0x02847D90 LDR W10, [X8 + 0x18]
	0x02847D94 CMP X22, W10, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B94000
	006 Move W8, [X21+2749]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x18D7000
	014 Move X0, [X0+4008]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2749], W8
	018 Move X8, [X20+32]
	019 Move X0, X19
	020 Move X8, [X8+192]
	021 Move X1, [X8+40]
	022 Call 0x2847E9C, X0
	023 Compare X0, 0
	024 JumpIfEqual {37}
	025 Move X8, 0x18D7000
	026 Move X8, [X8+4008]
	027 Move W9, [X19+16]
	028 Move X2, [X8]
	029 Subtract W1, W9, 1
	030 Call List`1<ValueTuple`2<Object, Object>>.get_Item, X0, X1
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X1
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Void set_selectedComponentType(System.Type value)

Disassembly:
	0x02847D98 B.GE 0x2847E14
	0x02847D9C LDR X9, [X20 + 0x38]
	0x02847DA0 CBZ X9, 0x2847E04
	0x02847DA4 LDR W11, [X9 + 0x18]
	0x02847DA8 CMP X22, X11
	0x02847DAC B.CS 0x2847E30
	0x02847DB0 CMP X22, X10
	0x02847DB4 B.CS 0x2847E30
	0x02847DB8 LDR X0, [X23]
	0x02847DBC ADD X9, X9, X22, 0x2, LSL
	0x02847DC0 ADD X8, X8, X22, 0x3, LSL
	0x02847DC4 LDR V11, [X9 + 0x20]
	0x02847DC8 LDR W9, [X0 + 0xE0]
	0x02847DCC LDR X21, [X8 + 0x20]
	0x02847DD0 CBNZ W9, 0x2847DD8
	0x02847DD4 BL 0x1C16DFC
	0x02847DD8 FSUB S0, S9, S10
	0x02847DDC MOV X0, X21
	0x02847DE0 MOV X1, X19
	0x02847DE4 MOV X2, X31
	0x02847DE8 FMUL S11, S0, S11
	0x02847DEC BL 0x3C3883C
	0x02847DF0 TBNZ X0, 0x0, 0x2847E10
	0x02847DF4 LDR X8, [X20 + 0x40]
	0x02847DF8 FADD S10, S10, S11
	0x02847DFC ADD X22, X22, 0x1
	0x02847E00 CBNZ X8, 0x2847D90
	0x02847E04 BL 0x1C16F20
	0x02847E08 FMOV S8, W31
	0x02847E0C B 0x2847E14
	0x02847E10 MOV V8.16B, V11.16B
	0x02847E14 MOV V0.16B, V8.16B
	0x02847E18 LDP X20, X19, [X31 + 0x40]
	0x02847E1C LDP X22, X21, [X31 + 0x30]
	0x02847E20 LDP X30, X23, [X31 + 0x20]
	0x02847E24 LDP D9, D8, [X31 + 0x10]
	0x02847E28 LDP D11, D10, [X31], #0x50
	0x02847E2C RET
	0x02847E30 BL 0x1C16F28
	0x02847E34 STP X30, X21, [X31 - 0x20]!
	0x02847E38 STP X20, X19, [X31 + 0x10]
	0x02847E3C ADRP X21, 0x1B93000
	0x02847E40 LDRB W8, [X21 + 0xAC7]
	0x02847E44 MOV X20, X1
	0x02847E48 MOV X19, X0
	0x02847E4C TBNZ X8, 0x0, 0x2847E64
	0x02847E50 ADRP X0, 0x18D7000
	0x02847E54 LDR X0, [X0 + 0x18]
	0x02847E58 BL 0x1C16CF4
	0x02847E5C MOVZ W8, 0x1
	0x02847E60 STRB W8, [X21 + 0xAC7]
	0x02847E64 LDR X8, [X19 + 0x38]
	0x02847E68 CBZ X8, 0x2847EB4
	0x02847E6C ADRP X8, 0x18D7000
	0x02847E70 LDR X8, [X8 + 0x18]
	0x02847E74 LDR X0, [X19 + 0x40]
	0x02847E78 MOV X1, X20
	0x02847E7C LDR X2, [X8]
	0x02847E80 BL 0x22E75A0
	0x02847E84 ADDS W31, W0, 0x1
	0x02847E88 B.EQ 0x2847EB4
	0x02847E8C LDR X8, [X19 + 0x38]
	0x02847E90 CBZ X8, 0x2847EC4
	0x02847E94 LDR W9, [X8 + 0x18]
	0x02847E98 CMP W0, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B94000
	007 Move W8, [X22+2750]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x18D7000
	016 Move X0, [X0+4016]
	017 Call 0x1C17CF4
	018 Move X0, 0x18D7000
	019 Move X0, [X0+4024]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2750], W8
	023 Move X8, [X20+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+56]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Call 0x1C17F10
	033 Move X8, [X20+32]
	034 Move X22, X0
	035 Move X8, [X8+192]
	036 Move X1, [X8+64]
	037 Call 0x2374218, X0
	038 Compare X22, 0
	039 JumpIfEqual {76}
	040 Move [X22+16], X21
	041 Move X8, [X20+32]
	042 Move X21, 0x18D7000
	043 Move X0, X19
	044 Move X8, [X8+192]
	045 Move X1, [X8+40]
	046 Move X21, [X21+4024]
	047 Call 0x2847E9C, X0
	048 Move X8, [X21]
	049 Move X21, X0
	050 Move X0, X8
	051 Call 0x1C17F10
	052 Move X8, [X20+32]
	053 Move X1, X22
	054 Move X3, X31
	055 Move X20, X0
	056 Move X8, [X8+192]
	057 Move X2, [X8+72]
	058 Call Predicate`1<ValueTuple`2<Object, Object>>..ctor, X0, X1, X2
	059 Compare X21, 0
	060 JumpIfEqual {76}
	061 Move X8, 0x18D7000
	062 Move X8, [X8+4016]
	063 Move X0, X21
	064 Move X1, X20
	065 Move X2, [X8]
	066 Call List`1<ValueTuple`2<Object, Object>>.FindIndex, X0, X1
	067 Add W31, W0, 1
	068 Add W8, W0, 1
	069 Move [X19+16], W8
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.ValueTuple`2<System.String, System.Type>> get_volumeComponentsPathAndType()

Disassembly:
	0x02847E9C B.CS 0x2847EC8
	0x02847EA0 ADD X8, X8, W0, 0x2, SXTW
	0x02847EA4 LDR V0, [X8 + 0x20]
	0x02847EA8 FCMP S0, 0x0
	0x02847EAC CSET W0, NE
	0x02847EB0 B 0x2847EB8
	0x02847EB4 MOV W0, W31
	0x02847EB8 LDP X20, X19, [X31 + 0x10]
	0x02847EBC LDP X30, X21, [X31], #0x20
	0x02847EC0 RET
	0x02847EC4 BL 0x1C16F20
	0x02847EC8 BL 0x1C16F28
	0x02847ECC STP X30, X23, [X31 - 0x30]!
	0x02847ED0 STP X22, X21, [X31 + 0x10]
	0x02847ED4 STP X20, X19, [X31 + 0x20]
	0x02847ED8 ADRP X20, 0x1B93000
	0x02847EDC LDRB W8, [X20 + 0xAC8]
	0x02847EE0 MOV X19, X0
	0x02847EE4 TBNZ X8, 0x0, 0x2847F38
	0x02847EE8 ADRP X0, 0x18D7000
	0x02847EEC LDR X0, [X0 + 0x20]
	0x02847EF0 BL 0x1C16CF4
	0x02847EF4 ADRP X0, 0x18D7000
	0x02847EF8 LDR X0, [X0 + 0x28]
	0x02847EFC BL 0x1C16CF4
	0x02847F00 ADRP X0, 0x18D4000
	0x02847F04 LDR X0, [X0 + 0x900]
	0x02847F08 BL 0x1C16CF4
	0x02847F0C ADRP X0, 0x18B6000
	0x02847F10 LDR X0, [X0 + 0x9B0]
	0x02847F14 BL 0x1C16CF4
	0x02847F18 ADRP X0, 0x18D7000
	0x02847F1C LDR X0, [X0 + 0x30]
	0x02847F20 BL 0x1C16CF4
	0x02847F24 ADRP X0, 0x18D6000
	0x02847F28 LDR X0, [X0 + 0xFC0]
	0x02847F2C BL 0x1C16CF4
	0x02847F30 MOVZ W8, 0x1
	0x02847F34 STRB W8, [X20 + 0xAC8]
	0x02847F38 LDR X0, [X19 + 0x20]!
	0x02847F3C LDRB W8, [X0 + 0x135]
	0x02847F40 TBNZ X8, 0x0, 0x2847F48
	0x02847F44 BL 0x1C5C684
	0x02847F48 LDR X8, [X0 + 0xC0]
	0x02847F4C LDR X0, [X8 + 0x58]
	0x02847F50 LDRB W8, [X0 + 0x135]
	0x02847F54 TBNZ X8, 0x0, 0x2847F5C
	0x02847F58 BL 0x1C5C684
	0x02847F5C LDR W8, [X0 + 0xE0]
	0x02847F60 CBNZ W8, 0x2847F68
	0x02847F64 BL 0x1C16DFC
	0x02847F68 LDR X0, [X19]
	0x02847F6C LDRB W8, [X0 + 0x135]
	0x02847F70 TBNZ X8, 0x0, 0x2847F78
	0x02847F74 BL 0x1C5C684
	0x02847F78 LDR X8, [X0 + 0xC0]
	0x02847F7C LDR X0, [X8 + 0x58]
	0x02847F80 LDRB W8, [X0 + 0x135]
	0x02847F84 TBNZ X8, 0x0, 0x2847F8C
	0x02847F88 BL 0x1C5C684
	0x02847F8C LDR X8, [X0 + 0xB8]
	0x02847F90 LDR X8, [X8 + 0x8]
	0x02847F94 CBNZ X8, 0x28484A8
	0x02847F98 ADRP X8, 0x18D6000
	0x02847F9C LDR X8, [X8 + 0xFC0]
	0x02847FA0 LDR X0, [X8]
	0x02847FA4 LDR W8, [X0 + 0xE0]
	0x02847FA8 CBNZ W8, 0x2847FB0
	0x02847FAC BL 0x1C16DFC
	0x02847FB0 MOV X0, X31
	0x02847FB4 BL 0x39EE864
	0x02847FB8 CBZ X0, 0x2848514
	0x02847FBC MOV X8, X0
	0x02847FC0 LDR X0, [X19]
	0x02847FC4 LDR X20, [X8 + 0x18]
	0x02847FC8 LDRB W9, [X0 + 0x135]
	0x02847FCC TBNZ X9, 0x0, 0x2847FD4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1B94000
	006 Move W8, [X20+2751]
	007 Move X19, X1
	008 Move X21, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x18D7000
	014 Move X0, [X0+4032]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2751], W8
	018 Move X8, [X19+32]
	019 Move X8, [X8+192]
	020 Move X0, [X8+88]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X8, [X19+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+88]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+184]
	041 Move X20, [X8]
	042 Compare X20, 0
	043 JumpIfNotEqual {98}
	044 Move X8, [X21]
	045 Move X0, X21
	046 Move X9, [X8+696]
	047 Move X1, [X8+704]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, 0x18D7000
	050 Move X8, [X8+4032]
	051 Move X20, X0
	052 Move X8, [X8]
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Call VolumeManager.GetSupportedVolumeComponents, X0
	061 Move X8, [X19+32]
	062 Move X20, X0
	063 Move X8, [X8+192]
	064 Move X8, [X8+88]
	065 Move W9, [X8+309]
	066 Move TEMP, X9
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {73}
	070 Move X0, X8
	071 Call 0x1C5D684
	072 Move X8, X0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {78}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X8, [X19+32]
	079 Move X8, [X8+192]
	080 Move X0, [X8+88]
	081 Move W9, [X0+309]
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Call 0x1C5D684
	087 Move X8, [X19+32]
	088 Move X8, [X8+192]
	089 Move X9, [X0+184]
	090 Move [X9], X20
	091 Move X0, [X8+88]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X0, X20
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X30, [X31+32]
	102 Move X21, [X31+40]
	103 Return X0

Method: System.Type get_targetRenderPipeline()

Disassembly:
	

ISIL:
No ISIL was generated
Method: UnityEngine.Rendering.VolumeParameter GetParameter(UnityEngine.Rendering.VolumeComponent component, System.Reflection.FieldInfo field)

Disassembly:
	0x02847FD0 BL 0x1C5C684
	0x02847FD4 LDR X8, [X0 + 0xC0]
	0x02847FD8 LDR X0, [X8 + 0x90]
	0x02847FDC LDRB W8, [X0 + 0x135]
	0x02847FE0 TBNZ X8, 0x0, 0x2847FE8
	0x02847FE4 BL 0x1C5C684
	0x02847FE8 LDR W8, [X0 + 0xE0]
	0x02847FEC CBNZ W8, 0x2847FF4
	0x02847FF0 BL 0x1C16DFC
	0x02847FF4 LDR X0, [X19]
	0x02847FF8 LDRB W8, [X0 + 0x135]
	0x02847FFC TBNZ X8, 0x0, 0x2848004
	0x02848000 BL 0x1C5C684
	0x02848004 LDR X8, [X0 + 0xC0]
	0x02848008 LDR X0, [X8 + 0x90]
	0x0284800C LDRB W8, [X0 + 0x135]
	0x02848010 TBNZ X8, 0x0, 0x2848018
	0x02848014 BL 0x1C5C684
	0x02848018 LDR X8, [X0 + 0xB8]
	0x0284801C LDR X21, [X8 + 0x18]
	0x02848020 CBNZ X21, 0x2848114
	0x02848024 LDR X0, [X19]
	0x02848028 LDRB W8, [X0 + 0x135]
	0x0284802C TBNZ X8, 0x0, 0x2848034
	0x02848030 BL 0x1C5C684
	0x02848034 LDR X8, [X0 + 0xC0]
	0x02848038 LDR X0, [X8 + 0x90]
	0x0284803C LDRB W8, [X0 + 0x135]
	0x02848040 TBNZ X8, 0x0, 0x2848048
	0x02848044 BL 0x1C5C684
	0x02848048 LDR W8, [X0 + 0xE0]
	0x0284804C CBNZ W8, 0x2848054
	0x02848050 BL 0x1C16DFC
	0x02848054 LDR X0, [X19]
	0x02848058 LDRB W8, [X0 + 0x135]
	0x0284805C TBNZ X8, 0x0, 0x2848064
	0x02848060 BL 0x1C5C684
	0x02848064 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B94000
	006 Move W8, [X21+2752]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x18D6000
	014 Move X0, [X0+3480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2752], W8
	018 Compare X19, 0
	019 JumpIfEqual {45}
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X1, X20
	023 Move X9, [X8+712]
	024 Move X2, [X8+720]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Compare X0, 0
	027 JumpIfEqual {39}
	028 Move X9, 0x18D5000
	029 Move X9, [X9+3480]
	030 Move X8, [X0]
	031 Move X1, [X9]
	032 Move W10, [X8+304]
	033 Move W9, [X1+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Call 0x1C181E0
	045 Call 0x1C17F20

Method: UnityEngine.Rendering.VolumeParameter GetParameter(System.Reflection.FieldInfo field)

Disassembly:
	0x02848068 LDR X0, [X8 + 0x90]
	0x0284806C LDRB W8, [X0 + 0x135]
	0x02848070 TBNZ X8, 0x0, 0x2848078
	0x02848074 BL 0x1C5C684
	0x02848078 ADRP X9, 0x18B5000
	0x0284807C LDR X8, [X0 + 0xB8]
	0x02848080 LDR X9, [X9 + 0x9B0]
	0x02848084 LDR X22, [X8]
	0x02848088 LDR X0, [X9]
	0x0284808C BL 0x1C16F10
	0x02848090 LDR X8, [X19]
	0x02848094 MOV X21, X0
	0x02848098 LDRB W9, [X8 + 0x135]
	0x0284809C TBNZ X9, 0x0, 0x28480AC
	0x028480A0 MOV X0, X8
	0x028480A4 BL 0x1C5C684
	0x028480A8 MOV X8, X0
	0x028480AC LDR X8, [X8 + 0xC0]
	0x028480B0 MOV X0, X21
	0x028480B4 MOV X1, X22
	0x028480B8 MOV X3, X31
	0x028480BC LDR X2, [X8 + 0xC8]
	0x028480C0 BL 0x2D2F428
	0x028480C4 LDR X0, [X19]
	0x028480C8 LDRB W8, [X0 + 0x135]
	0x028480CC TBNZ X8, 0x0, 0x28480D4
	0x028480D0 BL 0x1C5C684
	0x028480D4 LDR X8, [X0 + 0xC0]
	0x028480D8 LDR X0, [X8 + 0x90]
	0x028480DC LDRB W8, [X0 + 0x135]
	0x028480E0 TBNZ X8, 0x0, 0x28480E8
	0x028480E4 BL 0x1C5C684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X19, X1
	008 Move X22, X2
	009 Move X20, X0
	010 Move X9, [X8+648]
	011 Move X8, [X8+656]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Compare X0, 0
	015 JumpIfEqual {35}
	016 Move X8, [X22+32]
	017 Move X21, X0
	018 Move X0, X20
	019 Move X8, [X8+192]
	020 Move X1, [X8+112]
	021 Call 0x2847D24, X0
	022 Move X1, X0
	023 Move X0, X21
	024 Move X2, X31
	025 Call VolumeStack.GetComponent, X0, X1
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X1, X0
	032 Move X30, [X31+48]
	033 Call 0x2847FD0, X0, X1, X2
	034 Return X0
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0

Method: UnityEngine.Rendering.VolumeParameter GetParameter(UnityEngine.Rendering.Volume volume, System.Reflection.FieldInfo field)

Disassembly:
	0x028480E8 LDR X8, [X0 + 0xB8]
	0x028480EC STR X21, [X8 + 0x18]
	0x028480F0 LDR X0, [X19]
	0x028480F4 LDRB W8, [X0 + 0x135]
	0x028480F8 TBNZ X8, 0x0, 0x2848100
	0x028480FC BL 0x1C5C684
	0x02848100 LDR X8, [X0 + 0xC0]
	0x02848104 LDR X0, [X8 + 0x90]
	0x02848108 LDRB W8, [X0 + 0x135]
	0x0284810C TBNZ X8, 0x0, 0x2848114
	0x02848110 BL 0x1C5C684
	0x02848114 ADRP X23, 0x18D3000
	0x02848118 LDR X23, [X23 + 0x900]
	0x0284811C MOV X0, X20
	0x02848120 MOV X1, X21
	0x02848124 LDR X2, [X23]
	0x02848128 BL 0x21DA490
	0x0284812C LDR X8, [X19]
	0x02848130 MOV X20, X0
	0x02848134 LDRB W9, [X8 + 0x135]
	0x02848138 TBNZ X9, 0x0, 0x2848148
	0x0284813C MOV X0, X8
	0x02848140 BL 0x1C5C684
	0x02848144 MOV X8, X0
	0x02848148 LDR X8, [X8 + 0xC0]
	0x0284814C LDR X0, [X8 + 0x90]
	0x02848150 LDRB W8, [X0 + 0x135]
	0x02848154 TBNZ X8, 0x0, 0x284815C
	0x02848158 BL 0x1C5C684
	0x0284815C LDR W8, [X0 + 0xE0]
	0x02848160 CBNZ W8, 0x2848168
	0x02848164 BL 0x1C16DFC
	0x02848168 LDR X0, [X19]
	0x0284816C LDRB W8, [X0 + 0x135]
	0x02848170 TBNZ X8, 0x0, 0x2848178
	0x02848174 BL 0x1C5C684
	0x02848178 LDR X8, [X0 + 0xC0]
	0x0284817C LDR X0, [X8 + 0x90]
	0x02848180 LDRB W8, [X0 + 0x135]
	0x02848184 TBNZ X8, 0x0, 0x284818C
	0x02848188 BL 0x1C5C684
	0x0284818C LDR X8, [X0 + 0xB8]
	0x02848190 LDR X21, [X8 + 0x20]
	0x02848194 CBNZ X21, 0x2848288
	0x02848198 LDR X0, [X19]
	0x0284819C LDRB W8, [X0 + 0x135]
	0x028481A0 TBNZ X8, 0x0, 0x28481A8
	0x028481A4 BL 0x1C5C684
	0x028481A8 LDR X8, [X0 + 0xC0]
	0x028481AC LDR X0, [X8 + 0x90]
	0x028481B0 LDRB W8, [X0 + 0x135]
	0x028481B4 TBNZ X8, 0x0, 0x28481BC
	0x028481B8 BL 0x1C5C684
	0x028481BC LDR W8, [X0 + 0xE0]
	0x028481C0 CBNZ W8, 0x28481C8
	0x028481C4 BL 0x1C16DFC
	0x028481C8 LDR X0, [X19]
	0x028481CC LDRB W8, [X0 + 0x135]
	0x028481D0 TBNZ X8, 0x0, 0x28481D8
	0x028481D4 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1B93000
	009 Move W8, [X23+2753]
	010 Move X20, X3
	011 Move X19, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x18D6000
	019 Move X0, [X0+4040]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2753], W8
	023 Move [X31+8], X31
	024 Compare X22, 0
	025 JumpIfEqual {77}
	026 Move X0, X22
	027 Move X1, X31
	028 Call Volume.HasInstantiatedProfile, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {37}
	033 Move X0, X22
	034 Move X1, X31
	035 Call Volume.get_profile, X0
	036 Move X22, X0
	037 Move X22, [X22+48]
	038 Move X8, [X20+32]
	039 Move X0, X21
	040 Move X8, [X8+192]
	041 Move X1, [X8+112]
	042 Call 0x2847D24, X0
	043 Compare X22, 0
	044 JumpIfEqual {77}
	045 Move X8, 0x18D6000
	046 Move X8, [X8+4040]
	047 Move X1, X0
	048 Add X2, X31, 8
	049 Move X0, X22
	050 Move X3, [X8]
	051 Call 0x22AD5F8, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {68}
	056 Move X1, [X31+8]
	057 Move X2, X19
	058 Call 0x2847FD0, X0, X1, X2
	059 Compare X0, 0
	060 JumpIfEqual {77}
	061 Move X8, [X0]
	062 Move X19, X0
	063 Move X9, [X8+392]
	064 Move X1, [X8+400]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 And W31, W0, 1
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Move X0, X31
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X30, [X31+16]
	074 Move X23, [X31+24]
	075 Add X31, X31, 64
	076 Return X0
	077 Call 0x1C17F20

Method: System.Single ComputeWeight(UnityEngine.Rendering.Volume volume, UnityEngine.Vector3 triggerPos)

Disassembly:
	0x028481D8 LDR X8, [X0 + 0xC0]
	0x028481DC LDR X0, [X8 + 0x90]
	0x028481E0 LDRB W8, [X0 + 0x135]
	0x028481E4 TBNZ X8, 0x0, 0x28481EC
	0x028481E8 BL 0x1C5C684
	0x028481EC ADRP X9, 0x18B5000
	0x028481F0 LDR X8, [X0 + 0xB8]
	0x028481F4 LDR X9, [X9 + 0x9B0]
	0x028481F8 LDR X22, [X8]
	0x028481FC LDR X0, [X9]
	0x02848200 BL 0x1C16F10
	0x02848204 LDR X8, [X19]
	0x02848208 MOV X21, X0
	0x0284820C LDRB W9, [X8 + 0x135]
	0x02848210 TBNZ X9, 0x0, 0x2848220
	0x02848214 MOV X0, X8
	0x02848218 BL 0x1C5C684
	0x0284821C MOV X8, X0
	0x02848220 LDR X8, [X8 + 0xC0]
	0x02848224 MOV X0, X21
	0x02848228 MOV X1, X22
	0x0284822C MOV X3, X31
	0x02848230 LDR X2, [X8 + 0xD0]
	0x02848234 BL 0x2D2F428
	0x02848238 LDR X0, [X19]
	0x0284823C LDRB W8, [X0 + 0x135]
	0x02848240 TBNZ X8, 0x0, 0x2848248
	0x02848244 BL 0x1C5C684
	0x02848248 LDR X8, [X0 + 0xC0]
	0x0284824C LDR X0, [X8 + 0x90]
	0x02848250 LDRB W8, [X0 + 0x135]
	0x02848254 TBNZ X8, 0x0, 0x284825C
	0x02848258 BL 0x1C5C684
	0x0284825C LDR X8, [X0 + 0xB8]
	0x02848260 STR X21, [X8 + 0x20]
	0x02848264 LDR X0, [X19]
	0x02848268 LDRB W8, [X0 + 0x135]
	0x0284826C TBNZ X8, 0x0, 0x2848274
	0x02848270 BL 0x1C5C684
	0x02848274 LDR X8, [X0 + 0xC0]
	0x02848278 LDR X0, [X8 + 0x90]
	0x0284827C LDRB W8, [X0 + 0x135]
	0x02848280 TBNZ X8, 0x0, 0x2848288
	0x02848284 BL 0x1C5C684
	0x02848288 LDR X2, [X23]
	0x0284828C MOV X0, X20
	0x02848290 MOV X1, X21
	0x02848294 BL 0x21DA490
	0x02848298 LDR X8, [X19]
	0x0284829C MOV X20, X0
	0x028482A0 LDRB W9, [X8 + 0x135]
	0x028482A4 TBNZ X9, 0x0, 0x28482B4
	0x028482A8 MOV X0, X8
	0x028482AC BL 0x1C5C684
	0x028482B0 MOV X8, X0
	0x028482B4 LDR X8, [X8 + 0xC0]
	0x028482B8 LDR X0, [X8 + 0x90]
	0x028482BC LDRB W8, [X0 + 0x135]
	0x028482C0 TBNZ X8, 0x0, 0x28482C8
	0x028482C4 BL 0x1C5C684
	0x028482C8 LDR W8, [X0 + 0xE0]
	0x028482CC CBNZ W8, 0x28482D4
	0x028482D0 BL 0x1C16DFC
	0x028482D4 LDR X0, [X19]
	0x028482D8 LDRB W8, [X0 + 0x135]
	0x028482DC TBNZ X8, 0x0, 0x28482E4
	0x028482E0 BL 0x1C5C684
	0x028482E4 LDR X8, [X0 + 0xC0]
	0x028482E8 LDR X0, [X8 + 0x90]
	0x028482EC LDRB W8, [X0 + 0x135]
	0x028482F0 TBNZ X8, 0x0, 0x28482F8
	0x028482F4 BL 0x1C5C684
	0x028482F8 LDR X8, [X0 + 0xB8]
	0x028482FC LDR X21, [X8 + 0x28]
	0x02848300 CBNZ X21, 0x28483F4
	0x02848304 LDR X0, [X19]
	0x02848308 LDRB W8, [X0 + 0x135]
	0x0284830C TBNZ X8, 0x0, 0x2848314
	0x02848310 BL 0x1C5C684
	0x02848314 LDR X8, [X0 + 0xC0]
	0x02848318 LDR X0, [X8 + 0x90]
	0x0284831C LDRB W8, [X0 + 0x135]
	0x02848320 TBNZ X8, 0x0, 0x2848328
	0x02848324 BL 0x1C5C684
	0x02848328 LDR W8, [X0 + 0xE0]
	0x0284832C CBNZ W8, 0x2848334
	0x02848330 BL 0x1C16DFC
	0x02848334 LDR X0, [X19]
	0x02848338 LDRB W8, [X0 + 0x135]
	0x0284833C TBNZ X8, 0x0, 0x2848344
	0x02848340 BL 0x1C5C684
	0x02848344 LDR X8, [X0 + 0xC0]
	0x02848348 LDR X0, [X8 + 0x90]
	0x0284834C LDRB W8, [X0 + 0x135]
	0x02848350 TBNZ X8, 0x0, 0x2848358
	0x02848354 BL 0x1C5C684
	0x02848358 ADRP X9, 0x18D6000
	0x0284835C LDR X8, [X0 + 0xB8]
	0x02848360 LDR X9, [X9 + 0x30]
	0x02848364 LDR X22, [X8]
	0x02848368 LDR X0, [X9]
	0x0284836C BL 0x1C16F10
	0x02848370 LDR X8, [X19]
	0x02848374 MOV X21, X0
	0x02848378 LDRB W9, [X8 + 0x135]
	0x0284837C TBNZ X9, 0x0, 0x284838C
	0x02848380 MOV X0, X8
	0x02848384 BL 0x1C5C684
	0x02848388 MOV X8, X0
	0x0284838C LDR X8, [X8 + 0xC0]
	0x02848390 MOV X0, X21
	0x02848394 MOV X1, X22
	0x02848398 MOV X3, X31
	0x0284839C LDR X2, [X8 + 0xD8]
	0x028483A0 BL 0x2D30578
	0x028483A4 LDR X0, [X19]
	0x028483A8 LDRB W8, [X0 + 0x135]
	0x028483AC TBNZ X8, 0x0, 0x28483B4
	0x028483B0 BL 0x1C5C684
	0x028483B4 LDR X8, [X0 + 0xC0]
	0x028483B8 LDR X0, [X8 + 0x90]
	0x028483BC LDRB W8, [X0 + 0x135]
	0x028483C0 TBNZ X8, 0x0, 0x28483C8
	0x028483C4 BL 0x1C5C684
	0x028483C8 LDR X8, [X0 + 0xB8]
	0x028483CC STR X21, [X8 + 0x28]
	0x028483D0 LDR X0, [X19]
	0x028483D4 LDRB W8, [X0 + 0x135]
	0x028483D8 TBNZ X8, 0x0, 0x28483E0
	0x028483DC BL 0x1C5C684
	0x028483E0 LDR X8, [X0 + 0xC0]
	0x028483E4 LDR X0, [X8 + 0x90]
	0x028483E8 LDRB W8, [X0 + 0x135]
	0x028483EC TBNZ X8, 0x0, 0x28483F4
	0x028483F0 BL 0x1C5C684
	0x028483F4 ADRP X8, 0x18D6000
	0x028483F8 LDR X8, [X8 + 0x20]
	0x028483FC MOV X0, X20
	0x02848400 MOV X1, X21
	0x02848404 LDR X2, [X8]
	0x02848408 BL 0x21C9B5C
	0x0284840C ADRP X8, 0x18D6000
	0x02848410 LDR X8, [X8 + 0x28]
	0x02848414 LDR X1, [X8]
	0x02848418 BL 0x21D79F4
	0x0284841C LDR X8, [X19]
	0x02848420 MOV X20, X0
	0x02848424 LDRB W9, [X8 + 0x135]
	0x02848428 TBNZ X9, 0x0, 0x2848438
	0x0284842C MOV X0, X8
	0x02848430 BL 0x1C5C684
	0x02848434 MOV X8, X0
	0x02848438 LDR X8, [X8 + 0xC0]
	0x0284843C LDR X0, [X8 + 0x58]
	0x02848440 LDRB W8, [X0 + 0x135]
	0x02848444 TBNZ X8, 0x0, 0x284844C
	0x02848448 BL 0x1C5C684
	0x0284844C LDR W8, [X0 + 0xE0]
	0x02848450 CBNZ W8, 0x2848458
	0x02848454 BL 0x1C16DFC
	0x02848458 LDR X0, [X19]
	0x0284845C LDRB W8, [X0 + 0x135]
	0x02848460 TBNZ X8, 0x0, 0x2848468
	0x02848464 BL 0x1C5C684
	0x02848468 LDR X8, [X0 + 0xC0]
	0x0284846C LDR X0, [X8 + 0x58]
	0x02848470 LDRB W8, [X0 + 0x135]
	0x02848474 TBNZ X8, 0x0, 0x284847C
	0x02848478 BL 0x1C5C684
	0x0284847C LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x1B93000
	015 Move X23, 0x18AC000
	016 Move W8, [X22+2754]
	017 Move X23, [X23+1432]
	018 Move X20, X2
	019 Move V8, V2
	020 Move V9, V1
	021 Move V10, V0
	022 Move X19, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0x18D6000
	029 Move X0, [X0+4048]
	030 Call 0x1C17CF4
	031 Move X0, 0x18AC000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x18D6000
	035 Move X0, [X0+4040]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2754], W8
	039 Move X0, [X23]
	040 Move [X31+8], X31
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move S11, W31
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {190}
	054 Compare X19, 0
	055 JumpIfEqual {205}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Volume.HasInstantiatedProfile, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {67}
	063 Move X0, X19
	064 Move X1, X31
	065 Call Volume.get_profile, X0
	066 Move X22, X0
	067 Move X22, [X19+48]
	068 Move X0, X19
	069 Move X1, X31
	070 Call Component.get_gameObject, X0
	071 Compare X0, 0
	072 JumpIfEqual {205}
	073 Move X1, X31
	074 Call GameObject.get_activeInHierarchy, X0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {190}
	079 Move X0, X19
	080 Move X1, X31
	081 Call Behaviour.get_enabled, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {190}
	086 Move X0, [X23]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X0, X22
	092 Move X1, X31
	093 Move X2, X31
	094 Call Object.op_Equality, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {190}
	099 Move V0, [X19+44]
	100 NotImplemented "Instruction FCMP not yet implemented."
	101 Move X8, [X20+32]
	102 Move X0, X21
	103 Move X8, [X8+192]
	104 Move X1, [X8+112]
	105 Call 0x2847D24, X0
	106 Compare X22, 0
	107 JumpIfEqual {205}
	108 Move X8, 0x18D6000
	109 Move X8, [X8+4040]
	110 Move X1, X0
	111 Add X2, X31, 8
	112 Move X0, X22
	113 Move X3, [X8]
	114 Call 0x22AD5F8, X0, X1, X2
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {190}
	119 Move X8, [X31+8]
	120 Compare X8, 0
	121 JumpIfEqual {205}
	122 Move W8, [X8+24]
	123 Compare W8, 0
	124 JumpIfEqual {190}
	125 Move V0, [X19+44]
	126 Move W8, [X19+32]
	127 Move S1, 1
	128 NotImplemented "Instruction FMIN not yet implemented."
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Move S0, W31
	131 NotImplemented "Instruction FCSEL not yet implemented."
	132 Compare W8, 0
	133 JumpIfEqual {135}
	134 Move V11, V12
	135 Move X8, 0x18D6000
	136 Move X8, [X8+4048]
	137 Move X0, X19
	138 Move X1, [X8]
	139 Call 0x21A53A8, X0
	140 Compare X0, 0
	141 JumpIfEqual {205}
	142 Move W8, [X0+24]
	143 Move X20, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W9, 0x7F800000
	146 Move W22, W31
	147 Move S13, W9
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X8, X20, W22
	150 Move X21, [X8+32]
	151 Compare X21, 0
	152 JumpIfEqual {205}
	153 Move X0, X21
	154 Move X1, X31
	155 Call Collider.get_enabled, X0
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {176}
	160 Move X0, X21
	161 Move V0, V10
	162 Move V1, V9
	163 Move V2, V8
	164 Move X1, X31
	165 Call Collider.ClosestPoint, X0, X1
	166 Subtract S0, S0, S10
	167 Subtract S1, S1, S9
	168 Subtract S2, S2, S8
	169 Multiply S0, S0, S0
	170 Multiply S1, S1, S1
	171 Add S0, S0, S1
	172 Multiply S1, S2, S2
	173 Add S0, S1, S0
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Move V13, V0
	176 Move W8, [X20+24]
	177 Add W22, W22, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W8, 0x7F800000
	180 Move S13, W8
	181 Move V0, [X19+40]
	182 Move S11, W31
	183 Multiply S0, S0, S0
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 NotImplemented "Instruction FCMP not yet implemented."
	186 NotImplemented "Instruction FDIV not yet implemented."
	187 Move S1, 1
	188 Subtract S0, S1, S0
	189 Multiply S11, S12, S0
	190 Move V0, V11
	191 Move X20, [X31+96]
	192 Move X19, [X31+104]
	193 Move X22, [X31+80]
	194 Move X21, [X31+88]
	195 Move X30, [X31+64]
	196 Move X23, [X31+72]
	197 Move D9, [X31+48]
	198 Move D8, [X31+56]
	199 Move D11, [X31+32]
	200 Move D10, [X31+40]
	201 Move D13, [X31+16]
	202 Move D12, [X31+24]
	203 Add X31, X31, 112
	204 Return V0
	205 Call 0x1C17F20
	206 Call 0x1C17F28

Method: UnityEngine.Rendering.Volume[] GetVolumes()

Disassembly:
	0x02848480 STR X20, [X8 + 0x8]
	0x02848484 LDR X0, [X19]
	0x02848488 LDRB W8, [X0 + 0x135]
	0x0284848C TBNZ X8, 0x0, 0x2848494
	0x02848490 BL 0x1C5C684
	0x02848494 LDR X8, [X0 + 0xC0]
	0x02848498 LDR X0, [X8 + 0x58]
	0x0284849C LDRB W8, [X0 + 0x135]
	0x028484A0 TBNZ X8, 0x0, 0x28484A8
	0x028484A4 BL 0x1C5C684
	0x028484A8 LDR X0, [X19]
	0x028484AC LDRB W8, [X0 + 0x135]
	0x028484B0 TBNZ X8, 0x0, 0x28484B8
	0x028484B4 BL 0x1C5C684
	0x028484B8 LDR X8, [X0 + 0xC0]
	0x028484BC LDR X0, [X8 + 0x58]
	0x028484C0 LDRB W8, [X0 + 0x135]
	0x028484C4 TBNZ X8, 0x0, 0x28484CC
	0x028484C8 BL 0x1C5C684
	0x028484CC LDR W8, [X0 + 0xE0]
	0x028484D0 CBNZ W8, 0x28484D8
	0x028484D4 BL 0x1C16DFC
	0x028484D8 LDR X0, [X19]
	0x028484DC LDRB W8, [X0 + 0x135]
	0x028484E0 TBNZ X8, 0x0, 0x28484E8
	0x028484E4 BL 0x1C5C684
	0x028484E8 LDR X8, [X0 + 0xC0]
	0x028484EC LDR X0, [X8 + 0x58]
	0x028484F0 LDRB W8, [X0 + 0x135]
	0x028484F4 TBNZ X8, 0x0, 0x28484FC
	0x028484F8 BL 0x1C5C684
	0x028484FC LDR X8, [X0 + 0xB8]
	0x02848500 LDP X20, X19, [X31 + 0x20]
	0x02848504 LDP X22, X21, [X31 + 0x10]
	0x02848508 LDR X0, [X8 + 0x8]
	0x0284850C LDP X30, X23, [X31], #0x30
	0x02848510 RET
	0x02848514 BL 0x1C16F20
	0x02848518 STR X30, [X31 - 0x30]!
	0x0284851C STP X22, X21, [X31 + 0x10]
	0x02848520 STP X20, X19, [X31 + 0x20]
	0x02848524 ADRP X22, 0x1B92000
	0x02848528 ADRP X20, 0x18D6000
	0x0284852C ADRP X21, 0x18AB000
	0x02848530 LDRB W8, [X22 + 0xAC9]
	0x02848534 LDR X20, [X20 + 0x38]
	0x02848538 LDR X21, [X21 + 0x6C0]
	0x0284853C MOV X19, X0
	0x02848540 TBNZ X8, 0x0, 0x284857C
	0x02848544 ADRP X0, 0x18AB000
	0x02848548 LDR X0, [X0 + 0x6C0]
	0x0284854C BL 0x1C16CF4
	0x02848550 ADRP X0, 0x18D6000
	0x02848554 LDR X0, [X0 + 0x38]
	0x02848558 BL 0x1C16CF4
	0x0284855C ADRP X0, 0x18D6000
	0x02848560 LDR X0, [X0 + 0x40]
	0x02848564 BL 0x1C16CF4
	0x02848568 ADRP X0, 0x18D6000
	0x0284856C LDR X0, [X0 + 0x48]
	0x02848570 BL 0x1C16CF4
	0x02848574 MOVZ W8, 0x1
	0x02848578 STRB W8, [X22 + 0xAC9]
	0x0284857C LDR X0, [X21]
	0x02848580 LDR X20, [X20]
	0x02848584 LDR W8, [X0 + 0xE0]
	0x02848588 CBNZ W8, 0x2848590
	0x0284858C BL 0x1C16DFC
	0x02848590 ADRP X22, 0x18D6000
	0x02848594 LDR X22, [X22 + 0x40]
	0x02848598 MOV X0, X20
	0x0284859C MOV X1, X31
	0x028485A0 BL 0x338C698
	0x028485A4 MOV X1, X0
	0x028485A8 MOV X0, X19
	0x028485AC MOV W2, W31
	0x028485B0 MOV X3, X31
	0x028485B4 BL 0x32D45A0
	0x028485B8 CBZ X0, 0x28485E8
	0x028485BC LDR X9, [X0]
	0x028485C0 LDR X8, [X22]
	0x028485C4 LDRB W11, [X9 + 0x130]
	0x028485C8 LDRB W10, [X8 + 0x130]
	0x028485CC CMP W11, W10
	0x028485D0 B.CC 0x28485E8
	0x028485D4 LDR X9, [X9 + 0xC8]
	0x028485D8 ADD X9, X9, X10, 0x3, LSL
	0x028485DC LDUR X9, [X9 - 0x8]
	0x028485E0 CMP X9, X8
	0x028485E4 B.EQ 0x2848674
	0x028485E8 ADRP X8, 0x18D6000
	0x028485EC LDR X0, [X21]
	0x028485F0 LDR X8, [X8 + 0x48]
	0x028485F4 LDR W9, [X0 + 0xE0]
	0x028485F8 LDR X20, [X8]
	0x028485FC CBNZ W9, 0x2848604
	0x02848600 BL 0x1C16DFC
	0x02848604 MOV X0, X20
	0x02848608 MOV X1, X31
	0x0284860C BL 0x338C698
	0x02848610 MOV X1, X0
	0x02848614 MOV X0, X19
	0x02848618 MOV W2, W31
	0x0284861C MOV X3, X31
	0x02848620 BL 0x32D45A0
	0x02848624 CBZ X0, 0x2848654
	0x02848628 LDR X9, [X0]
	0x0284862C LDR X8, [X22]
	0x02848630 LDRB W11, [X9 + 0x130]
	0x02848634 LDRB W10, [X8 + 0x130]
	0x02848638 CMP W11, W10
	0x0284863C B.CC 0x2848654
	0x02848640 LDR X9, [X9 + 0xC8]
	0x02848644 ADD X9, X9, X10, 0x3, LSL
	0x02848648 LDUR X9, [X9 - 0x8]
	0x0284864C CMP X9, X8
	0x02848650 B.EQ 0x2848674
	0x02848654 CBZ X19, 0x2848688
	0x02848658 LDR X8, [X19]
	0x0284865C MOV X0, X19
	0x02848660 LDP X20, X19, [X31 + 0x20]
	0x02848664 LDP X22, X21, [X31 + 0x10]
	0x02848668 LDP X2, X1, [X8 + 0x1A8]
	0x0284866C LDR X30, [X31], #0x30
	0x02848670 BR X2
	0x02848674 LDR X0, [X0 + 0x10]
	0x02848678 LDP X20, X19, [X31 + 0x20]
	0x0284867C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1B93000
	010 Move X22, 0x18D6000
	011 Move W8, [X21+2755]
	012 Move X22, [X22+4032]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x18D6000
	020 Move X0, [X0+4056]
	021 Call 0x1C17CF4
	022 Move X0, 0x18D6000
	023 Move X0, [X0+4064]
	024 Call 0x1C17CF4
	025 Move X0, 0x18D6000
	026 Move X0, [X0+4072]
	027 Call 0x1C17CF4
	028 Move X0, 0x18D6000
	029 Move X0, [X0+4080]
	030 Call 0x1C17CF4
	031 Move X0, 0x18D6000
	032 Move X0, [X0+4032]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2755], W8
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call VolumeManager.get_instance
	043 Move X8, [X20]
	044 Move X21, X0
	045 Move X0, X20
	046 Move X9, [X8+664]
	047 Move X1, [X8+672]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X21, 0
	050 JumpIfEqual {163}
	051 And X1, X0, 0
	052 Move X0, X21
	053 Move X2, X31
	054 Call VolumeManager.GetVolumes, X0, X1
	055 Move X8, [X19+32]
	056 Move X20, X0
	057 Move X8, [X8+192]
	058 Move X8, [X8+144]
	059 Move W9, [X8+309]
	060 Move TEMP, X9
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X8
	065 Call 0x1C5D684
	066 Move X8, X0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X8, [X19+32]
	073 Move X8, [X8+192]
	074 Move X0, [X8+144]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+184]
	082 Move X25, 0x18D6000
	083 Move X24, 0x18D6000
	084 Move X23, 0x18D6000
	085 Move X21, [X8+8]
	086 Move X25, [X25+4072]
	087 Move X24, [X24+4056]
	088 Move X23, [X23+4064]
	089 Compare X21, 0
	090 JumpIfNotEqual {146}
	091 Move X8, [X19+32]
	092 Move X8, [X8+192]
	093 Move X0, [X8+144]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X8, [X19+32]
	105 Move X8, [X8+192]
	106 Move X0, [X8+144]
	107 Move W8, [X0+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {113}
	112 Call 0x1C5D684
	113 Move X9, 0x18D6000
	114 Move X8, [X0+184]
	115 Move X9, [X9+4080]
	116 Move X22, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X8, [X19+32]
	120 Move X1, X22
	121 Move X3, X31
	122 Move X21, X0
	123 Move X8, [X8+192]
	124 Move X2, [X8+152]
	125 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	126 Move X8, [X19+32]
	127 Move X8, [X8+192]
	128 Move X0, [X8+144]
	129 Move W9, [X0+309]
	130 Move TEMP, X9
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {137}
	134 Call 0x1C5D684
	135 Move X8, [X19+32]
	136 Move X8, [X8+192]
	137 Move X9, [X0+184]
	138 Move [X9+8], X21
	139 Move X0, [X8+144]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move X2, [X25]
	147 Move X0, X20
	148 Move X1, X21
	149 Call Enumerable.Where, X0, X1
	150 Move X1, [X24]
	151 Call 0x21CAEC4, X0
	152 Move X1, [X23]
	153 Move X20, [X31+48]
	154 Move X19, [X31+56]
	155 Move X22, [X31+32]
	156 Move X21, [X31+40]
	157 Move X24, [X31+16]
	158 Move X23, [X31+24]
	159 Move X30, [X31+64]
	160 Move X25, [X31+72]
	161 Call Enumerable.ToArray, X0
	162 Return X0
	163 Call 0x1C17F20

Method: UnityEngine.Rendering.VolumeParameter[][] GetStates()

Disassembly:
	0x02848680 LDR X30, [X31], #0x30
	0x02848684 RET
	0x02848688 BL 0x1C16F20
	0x0284868C STP X30, X19, [X31 - 0x10]!
	0x02848690 MOV X19, X0
	0x02848694 LDR X0, [X0 + 0x20]
	0x02848698 LDRB W8, [X0 + 0x135]
	0x0284869C TBNZ X8, 0x0, 0x28486A4
	0x028486A0 BL 0x1C5C684
	0x028486A4 LDR X8, [X0 + 0xC0]
	0x028486A8 LDR X0, [X8 + 0x58]
	0x028486AC LDRB W8, [X0 + 0x135]
	0x028486B0 TBNZ X8, 0x0, 0x28486B8
	0x028486B4 BL 0x1C5C684
	0x028486B8 LDR W8, [X0 + 0xE0]
	0x028486BC CBNZ W8, 0x28486C4
	0x028486C0 BL 0x1C16DFC
	0x028486C4 LDR X0, [X19 + 0x20]
	0x028486C8 LDRB W8, [X0 + 0x135]
	0x028486CC TBNZ X8, 0x0, 0x28486D4
	0x028486D0 BL 0x1C5C684
	0x028486D4 LDR X8, [X0 + 0xC0]
	0x028486D8 LDR X0, [X8 + 0x58]
	0x028486DC LDRB W8, [X0 + 0x135]
	0x028486E0 TBNZ X8, 0x0, 0x28486E8
	0x028486E4 BL 0x1C5C684
	0x028486E8 LDR X8, [X0 + 0xB8]
	0x028486EC LDR X0, [X8 + 0x10]
	0x028486F0 LDP X30, X19, [X31], #0x10
	0x028486F4 RET
	0x028486F8 STR X30, [X31 - 0x20]!
	0x028486FC STP X20, X19, [X31 + 0x10]
	0x02848700 LDR X8, [X1 + 0x20]
	0x02848704 MOV X19, X1
	0x02848708 MOV X20, X0
	0x0284870C LDRB W9, [X8 + 0x135]
	0x02848710 TBNZ X9, 0x0, 0x2848720
	0x02848714 MOV X0, X8
	0x02848718 BL 0x1C5C684
	0x0284871C MOV X8, X0
	0x02848720 LDR X8, [X8 + 0xC0]
	0x02848724 LDR X0, [X8 + 0x58]
	0x02848728 LDRB W8, [X0 + 0x135]
	0x0284872C TBNZ X8, 0x0, 0x2848734
	0x02848730 BL 0x1C5C684
	0x02848734 LDR W8, [X0 + 0xE0]
	0x02848738 CBNZ W8, 0x2848740
	0x0284873C BL 0x1C16DFC
	0x02848740 LDR X0, [X19 + 0x20]
	0x02848744 LDRB W8, [X0 + 0x135]
	0x02848748 TBNZ X8, 0x0, 0x2848750
	0x0284874C BL 0x1C5C684
	0x02848750 LDR X8, [X0 + 0xC0]
	0x02848754 LDR X0, [X8 + 0x58]
	0x02848758 LDRB W8, [X0 + 0x135]
	0x0284875C TBNZ X8, 0x0, 0x2848764
	0x02848760 BL 0x1C5C684
	0x02848764 LDR X8, [X0 + 0xB8]
	0x02848768 STR X20, [X8 + 0x10]
	0x0284876C LDR X0, [X19 + 0x20]
	0x02848770 LDRB W8, [X0 + 0x135]
	0x02848774 TBNZ X8, 0x0, 0x284877C
	0x02848778 BL 0x1C5C684
	0x0284877C LDR X8, [X0 + 0xC0]
	0x02848780 LDR X0, [X8 + 0x58]
	0x02848784 LDRB W8, [X0 + 0x135]
	0x02848788 TBNZ X8, 0x0, 0x2848798
	0x0284878C LDP X20, X19, [X31 + 0x10]
	0x02848790 LDR X30, [X31], #0x20
	0x02848794 B 0x1C5C684
	0x02848798 LDP X20, X19, [X31 + 0x10]
	0x0284879C LDR X30, [X31], #0x20
	0x028487A0 RET
	0x028487A4 STP X30, X21, [X31 - 0x20]!
	0x028487A8 STP X20, X19, [X31 + 0x10]
	0x028487AC LDR X8, [X1 + 0x20]
	0x028487B0 MOV X20, X1
	0x028487B4 MOV X19, X0
	0x028487B8 LDRB W9, [X8 + 0x135]
	0x028487BC TBNZ X9, 0x0, 0x28487CC
	0x028487C0 MOV X0, X8
	0x028487C4 BL 0x1C5C684
	0x028487C8 MOV X8, X0
	0x028487CC LDR X8, [X8 + 0xC0]
	0x028487D0 LDR X0, [X8 + 0x58]
	0x028487D4 LDRB W8, [X0 + 0x135]
	0x028487D8 TBNZ X8, 0x0, 0x28487E0
	0x028487DC BL 0x1C5C684
	0x028487E0 LDR W8, [X0 + 0xE0]
	0x028487E4 CBNZ W8, 0x28487EC
	0x028487E8 BL 0x1C16DFC
	0x028487EC LDR X0, [X20 + 0x20]
	0x028487F0 LDRB W8, [X0 + 0x135]
	0x028487F4 TBNZ X8, 0x0, 0x28487FC
	0x028487F8 BL 0x1C5C684
	0x028487FC LDR X8, [X0 + 0xC0]
	0x02848800 LDR X21, [X8 + 0xE8]
	0x02848804 LDR X0, [X21 + 0x20]
	0x02848808 LDRB W8, [X0 + 0x135]
	0x0284880C TBNZ X8, 0x0, 0x2848814
	0x02848810 BL 0x1C5C684
	0x02848814 LDR X8, [X0 + 0xC0]
	0x02848818 LDR X0, [X8 + 0x58]
	0x0284881C LDRB W8, [X0 + 0x135]
	0x02848820 TBNZ X8, 0x0, 0x2848828
	0x02848824 BL 0x1C5C684
	0x02848828 LDR W8, [X0 + 0xE0]
	0x0284882C CBNZ W8, 0x2848834
	0x02848830 BL 0x1C16DFC
	0x02848834 LDR X0, [X21 + 0x20]
	0x02848838 LDRB W8, [X0 + 0x135]
	0x0284883C TBNZ X8, 0x0, 0x2848844
	0x02848840 BL 0x1C5C684
	0x02848844 LDR X8, [X0 + 0xC0]
	0x02848848 LDR X0, [X8 + 0x58]
	0x0284884C LDRB W8, [X0 + 0x135]
	0x02848850 TBNZ X8, 0x0, 0x2848858
	0x02848854 BL 0x1C5C684
	0x02848858 LDR X8, [X0 + 0xB8]
	0x0284885C LDR X21, [X8 + 0x10]
	0x02848860 CBZ X21, 0x28489AC
	0x02848864 LDR X0, [X20 + 0x20]
	0x02848868 LDRB W8, [X0 + 0x135]
	0x0284886C TBNZ X8, 0x0, 0x2848874
	0x02848870 BL 0x1C5C684
	0x02848874 LDR X8, [X0 + 0xC0]
	0x02848878 MOV X0, X21
	0x0284887C MOV X1, X19
	0x02848880 LDR X2, [X8 + 0xF0]
	0x02848884 BL 0x301C318
	0x02848888 TBNZ X0, 0x0, 0x2848980
	0x0284888C LDR X0, [X20 + 0x20]
	0x02848890 LDRB W8, [X0 + 0x135]
	0x02848894 TBNZ X8, 0x0, 0x284889C
	0x02848898 BL 0x1C5C684
	0x0284889C LDR X8, [X0 + 0xC0]
	0x028488A0 LDR X0, [X8 + 0x58]
	0x028488A4 LDRB W8, [X0 + 0x135]
	0x028488A8 TBNZ X8, 0x0, 0x28488B0
	0x028488AC BL 0x1C5C684
	0x028488B0 LDR W8, [X0 + 0xE0]
	0x028488B4 CBNZ W8, 0x28488BC
	0x028488B8 BL 0x1C16DFC
	0x028488BC LDR X0, [X20 + 0x20]
	0x028488C0 LDRB W8, [X0 + 0x135]
	0x028488C4 TBNZ X8, 0x0, 0x28488CC
	0x028488C8 BL 0x1C5C684
	0x028488CC LDR X8, [X0 + 0xC0]
	0x028488D0 LDR X21, [X8 + 0xE8]
	0x028488D4 LDR X0, [X21 + 0x20]
	0x028488D8 LDRB W8, [X0 + 0x135]
	0x028488DC TBNZ X8, 0x0, 0x28488E4
	0x028488E0 BL 0x1C5C684
	0x028488E4 LDR X8, [X0 + 0xC0]
	0x028488E8 LDR X0, [X8 + 0x58]
	0x028488EC LDRB W8, [X0 + 0x135]
	0x028488F0 TBNZ X8, 0x0, 0x28488F8
	0x028488F4 BL 0x1C5C684
	0x028488F8 LDR W8, [X0 + 0xE0]
	0x028488FC CBNZ W8, 0x2848904
	0x02848900 BL 0x1C16DFC
	0x02848904 LDR X0, [X21 + 0x20]
	0x02848908 LDRB W8, [X0 + 0x135]
	0x0284890C TBNZ X8, 0x0, 0x2848914
	0x02848910 BL 0x1C5C684
	0x02848914 LDR X8, [X0 + 0xC0]
	0x02848918 LDR X0, [X8 + 0x58]
	0x0284891C LDRB W8, [X0 + 0x135]
	0x02848920 TBNZ X8, 0x0, 0x2848928
	0x02848924 BL 0x1C5C684
	0x02848928 LDR X8, [X0 + 0xB8]
	0x0284892C LDR X21, [X8 + 0x10]
	0x02848930 CBZ X21, 0x28489AC
	0x02848934 LDR X0, [X20 + 0x20]
	0x02848938 LDRB W8, [X0 + 0x135]
	0x0284893C TBNZ X8, 0x0, 0x2848944
	0x02848940 BL 0x1C5C684
	0x02848944 LDR X9, [X0 + 0xC0]
	0x02848948 LDR W10, [X21 + 0x1C]
	0x0284894C LDR X8, [X21 + 0x10]
	0x02848950 LDR X9, [X9 + 0xF8]
	0x02848954 ADD W10, W10, 0x1
	0x02848958 STR W10, [X21 + 0x1C]
	0x0284895C CBZ X8, 0x28489AC
	0x02848960 LDRSW X10, [X21 + 0x18]
	0x02848964 LDR W11, [X8 + 0x18]
	0x02848968 CMP W10, W11
	0x0284896C B.CS 0x284898C
	0x02848970 ADD W9, W10, 0x1
	0x02848974 ADD X8, X8, X10, 0x3, LSL
	0x02848978 STR W9, [X21 + 0x18]
	0x0284897C STR X19, [X8 + 0x20]
	0x02848980 LDP X20, X19, [X31 + 0x10]
	0x02848984 LDP X30, X21, [X31], #0x20
	0x02848988 RET
	0x0284898C LDR X8, [X9 + 0x20]
	0x02848990 MOV X1, X19
	0x02848994 LDP X20, X19, [X31 + 0x10]
	0x02848998 MOV X0, X21
	0x0284899C LDR X8, [X8 + 0xC0]
	0x028489A0 LDR X2, [X8 + 0x70]
	0x028489A4 LDP X30, X21, [X31], #0x20
	0x028489A8 B 0x301BF90
	0x028489AC BL 0x1C16F20
	0x028489B0 STP X30, X21, [X31 - 0x20]!
	0x028489B4 STP X20, X19, [X31 + 0x10]
	0x028489B8 LDR X8, [X1 + 0x20]
	0x028489BC MOV X20, X1
	0x028489C0 MOV X19, X0
	0x028489C4 LDRB W9, [X8 + 0x135]
	0x028489C8 TBNZ X9, 0x0, 0x28489D8
	0x028489CC MOV X0, X8
	0x028489D0 BL 0x1C5C684
	0x028489D4 MOV X8, X0
	0x028489D8 LDR X8, [X8 + 0xC0]
	0x028489DC LDR X0, [X8 + 0x58]
	0x028489E0 LDRB W8, [X0 + 0x135]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X21, 0x1B93000
	013 Move W8, [X21+2756]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x18D6000
	021 Move X0, [X0+4088]
	022 Call 0x1C17CF4
	023 Move X0, 0x18D5000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0x18D5000
	027 Move X0, [X0+3432]
	028 Call 0x1C17CF4
	029 Move X0, 0x18D7000
	030 Move X0, [X0]
	031 Call 0x1C17CF4
	032 Move X0, 0x18D6000
	033 Move X0, [X0+4040]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+2756], W8
	037 Move [X31+24], X31
	038 Move X8, [X19+32]
	039 Move X0, X20
	040 Move X8, [X8+192]
	041 Move X1, [X8+112]
	042 Call 0x2847D24, X0
	043 Compare X0, 0
	044 JumpIfEqual {247}
	045 Move X8, [X0]
	046 Move W1, 52
	047 Move X9, [X8+1672]
	048 Move X2, [X8+1680]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X19+32]
	051 Move X21, X0
	052 Move X8, [X8+192]
	053 Move X8, [X8+144]
	054 Move W9, [X8+309]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X8, [X19+32]
	068 Move X8, [X8+192]
	069 Move X0, [X8+144]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move X8, [X0+184]
	077 Move X25, 0x18D5000
	078 Move X24, 0x18D6000
	079 Move X22, [X8+16]
	080 Move X25, [X25+3424]
	081 Move X24, [X24+4088]
	082 Compare X22, 0
	083 JumpIfNotEqual {139}
	084 Move X8, [X19+32]
	085 Move X8, [X8+192]
	086 Move X0, [X8+144]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X8, [X19+32]
	098 Move X8, [X8+192]
	099 Move X0, [X8+144]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X9, 0x18D5000
	107 Move X8, [X0+184]
	108 Move X9, [X9+3432]
	109 Move X23, [X8]
	110 Move X0, [X9]
	111 Call 0x1C17F10
	112 Move X8, [X19+32]
	113 Move X1, X23
	114 Move X3, X31
	115 Move X22, X0
	116 Move X8, [X8+192]
	117 Move X2, [X8+160]
	118 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	119 Move X8, [X19+32]
	120 Move X8, [X8+192]
	121 Move X0, [X8+144]
	122 Move W9, [X0+309]
	123 Move TEMP, X9
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {130}
	127 Call 0x1C5D684
	128 Move X8, [X19+32]
	129 Move X8, [X8+192]
	130 Move X9, [X0+184]
	131 Move [X9+16], X22
	132 Move X0, [X8+144]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X2, [X25]
	140 Move X0, X21
	141 Move X1, X22
	142 Call Enumerable.Where, X0, X1
	143 Move X1, [X24]
	144 Call Enumerable.ToArray, X0
	145 Move X8, [X20+64]
	146 Compare X8, 0
	147 JumpIfEqual {247}
	148 Move X21, X0
	149 Compare X0, 0
	150 JumpIfEqual {247}
	151 Move X9, 0x18D7000
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move X9, [X9]
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X1, X31, 8
	156 Move X0, [X9]
	157 Move [X31+8], X10
	158 Move [X31+16], X8
	159 Call 0x1C17D74
	160 Move X8, [X20+64]
	161 Compare X8, 0
	162 JumpIfEqual {247}
	163 Move X25, 0x18D6000
	164 Move X25, [X25+4040]
	165 Move X22, X0
	166 Move X24, X31
	167 Add X26, X21, 32
	168 Move W9, [X8+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move W9, W24
	172 Move X23, W9
	173 Add X8, X8, X23
	174 Move X0, [X8+32]
	175 Compare X0, 0
	176 JumpIfEqual {247}
	177 Move X1, X31
	178 Call Volume.HasInstantiatedProfile, X0
	179 Move X8, [X20+64]
	180 Compare X8, 0
	181 JumpIfEqual {247}
	182 Move W9, [X8+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Add X8, X8, X23
	185 Move X8, [X8+32]
	186 Compare X8, 0
	187 JumpIfEqual {247}
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {196}
	192 Move X0, X8
	193 Move X1, X31
	194 Call Volume.get_profile, X0
	195 Move X23, X0
	196 Move X23, [X8+48]
	197 Move X8, [X19+32]
	198 Move X0, X20
	199 Move X8, [X8+192]
	200 Move X1, [X8+112]
	201 Call 0x2847D24, X0
	202 Compare X23, 0
	203 JumpIfEqual {247}
	204 Move X3, [X25]
	205 Move X1, X0
	206 Add X2, X31, 24
	207 Move X0, X23
	208 Call 0x22AD5F8, X0, X1, X2
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {243}
	213 Move X8, [X21+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X27, X31
	216 And X8, X8, 0
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X1, [X31+24]
	219 Move X2, [X26]
	220 Call 0x2847FD0, X0, X1, X2
	221 Compare X0, 0
	222 JumpIfEqual {247}
	223 Move X8, [X0]
	224 Move X23, X0
	225 Move X9, [X8+392]
	226 Move X1, [X8+400]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 And W31, W0, 1
	229 NotImplemented "Instruction CSEL not yet implemented."
	230 Compare X22, 0
	231 JumpIfEqual {247}
	232 Move X9, [X22+16]
	233 Move W10, [X9]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X9, [X9+16]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 NotImplemented "Instruction MADD not yet implemented."
	238 Add X9, X22, X9
	239 Move [X9+32], X8
	240 Move W8, [X21+24]
	241 Add X27, X27, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X8, [X20+64]
	244 Add X24, X24, 1
	245 Compare X8, 0
	246 JumpIfNotEqual {168}
	247 Call 0x1C17F20
	248 Move X0, X22
	249 Move X20, [X31+96]
	250 Move X19, [X31+104]
	251 Move X22, [X31+80]
	252 Move X21, [X31+88]
	253 Move X24, [X31+64]
	254 Move X23, [X31+72]
	255 Move X26, [X31+48]
	256 Move X25, [X31+56]
	257 Move X30, [X31+32]
	258 Move X27, [X31+40]
	259 Add X31, X31, 112
	260 Return X0
	261 Call 0x1C17F28

Method: System.Boolean ChangedStates(UnityEngine.Rendering.VolumeParameter[][] newStates)

Disassembly:
	0x028489E4 TBNZ X8, 0x0, 0x28489EC
	0x028489E8 BL 0x1C5C684
	0x028489EC LDR W8, [X0 + 0xE0]
	0x028489F0 CBNZ W8, 0x28489F8
	0x028489F4 BL 0x1C16DFC
	0x028489F8 LDR X0, [X20 + 0x20]
	0x028489FC LDRB W8, [X0 + 0x135]
	0x02848A00 TBNZ X8, 0x0, 0x2848A08
	0x02848A04 BL 0x1C5C684
	0x02848A08 LDR X8, [X0 + 0xC0]
	0x02848A0C LDR X21, [X8 + 0xE8]
	0x02848A10 LDR X0, [X21 + 0x20]
	0x02848A14 LDRB W8, [X0 + 0x135]
	0x02848A18 TBNZ X8, 0x0, 0x2848A20
	0x02848A1C BL 0x1C5C684
	0x02848A20 LDR X8, [X0 + 0xC0]
	0x02848A24 LDR X0, [X8 + 0x58]
	0x02848A28 LDRB W8, [X0 + 0x135]
	0x02848A2C TBNZ X8, 0x0, 0x2848A34
	0x02848A30 BL 0x1C5C684
	0x02848A34 LDR W8, [X0 + 0xE0]
	0x02848A38 CBNZ W8, 0x2848A40
	0x02848A3C BL 0x1C16DFC
	0x02848A40 LDR X0, [X21 + 0x20]
	0x02848A44 LDRB W8, [X0 + 0x135]
	0x02848A48 TBNZ X8, 0x0, 0x2848A50
	0x02848A4C BL 0x1C5C684
	0x02848A50 LDR X8, [X0 + 0xC0]
	0x02848A54 LDR X0, [X8 + 0x58]
	0x02848A58 LDRB W8, [X0 + 0x135]
	0x02848A5C TBNZ X8, 0x0, 0x2848A64
	0x02848A60 BL 0x1C5C684
	0x02848A64 LDR X8, [X0 + 0xB8]
	0x02848A68 LDR X21, [X8 + 0x10]
	0x02848A6C CBZ X21, 0x2848B78
	0x02848A70 LDR X0, [X20 + 0x20]
	0x02848A74 LDRB W8, [X0 + 0x135]
	0x02848A78 TBNZ X8, 0x0, 0x2848A80
	0x02848A7C BL 0x1C5C684
	0x02848A80 LDR X8, [X0 + 0xC0]
	0x02848A84 MOV X0, X21
	0x02848A88 MOV X1, X19
	0x02848A8C LDR X2, [X8 + 0xF0]
	0x02848A90 BL 0x301C318
	0x02848A94 TBZ X0, 0x0, 0x2848B6C
	0x02848A98 LDR X0, [X20 + 0x20]
	0x02848A9C LDRB W8, [X0 + 0x135]
	0x02848AA0 TBNZ X8, 0x0, 0x2848AA8
	0x02848AA4 BL 0x1C5C684
	0x02848AA8 LDR X8, [X0 + 0xC0]
	0x02848AAC LDR X0, [X8 + 0x58]
	0x02848AB0 LDRB W8, [X0 + 0x135]
	0x02848AB4 TBNZ X8, 0x0, 0x2848ABC
	0x02848AB8 BL 0x1C5C684
	0x02848ABC LDR W8, [X0 + 0xE0]
	0x02848AC0 CBNZ W8, 0x2848AC8
	0x02848AC4 BL 0x1C16DFC
	0x02848AC8 LDR X0, [X20 + 0x20]
	0x02848ACC LDRB W8, [X0 + 0x135]
	0x02848AD0 TBNZ X8, 0x0, 0x2848AD8
	0x02848AD4 BL 0x1C5C684
	0x02848AD8 LDR X8, [X0 + 0xC0]
	0x02848ADC LDR X21, [X8 + 0xE8]
	0x02848AE0 LDR X0, [X21 + 0x20]
	0x02848AE4 LDRB W8, [X0 + 0x135]
	0x02848AE8 TBNZ X8, 0x0, 0x2848AF0
	0x02848AEC BL 0x1C5C684
	0x02848AF0 LDR X8, [X0 + 0xC0]
	0x02848AF4 LDR X0, [X8 + 0x58]
	0x02848AF8 LDRB W8, [X0 + 0x135]
	0x02848AFC TBNZ X8, 0x0, 0x2848B04
	0x02848B00 BL 0x1C5C684
	0x02848B04 LDR W8, [X0 + 0xE0]
	0x02848B08 CBNZ W8, 0x2848B10
	0x02848B0C BL 0x1C16DFC
	0x02848B10 LDR X0, [X21 + 0x20]
	0x02848B14 LDRB W8, [X0 + 0x135]
	0x02848B18 TBNZ X8, 0x0, 0x2848B20
	0x02848B1C BL 0x1C5C684
	0x02848B20 LDR X8, [X0 + 0xC0]
	0x02848B24 LDR X0, [X8 + 0x58]
	0x02848B28 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+72]
	008 Compare X0, 0
	009 JumpIfEqual {76}
	010 Move X20, X1
	011 Move W1, 1
	012 Move X2, X31
	013 Call Array.GetLength, X0, X1
	014 Compare X20, 0
	015 JumpIfEqual {76}
	016 Move W22, W0
	017 Move W1, 1
	018 Move X0, X20
	019 Move X2, X31
	020 Move W21, 1
	021 Call Array.GetLength, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19+72]
	024 Compare X0, 0
	025 JumpIfEqual {76}
	026 Move X21, X31
	027 Move W1, W31
	028 Move X2, X31
	029 Call Array.GetLength, X0, X1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X19+72]
	032 Compare X0, 0
	033 JumpIfEqual {76}
	034 Move W1, 1
	035 Move X2, X31
	036 Call Array.GetLength, X0, X1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, X31
	039 Move X0, [X19+72]
	040 Compare X0, 0
	041 JumpIfEqual {76}
	042 Move X8, [X0+16]
	043 Move W9, [X8]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, [X8+16]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X9, [X20+16]
	048 Move W10, [X9]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, [X9+16]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction MADD not yet implemented."
	053 NotImplemented "Instruction MADD not yet implemented."
	054 Add X8, X0, X8
	055 Move X8, [X8+32]
	056 Add X9, X20, X9
	057 Move X9, [X9+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Xor W8, W8, W9
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {77}
	067 Move W1, 1
	068 Move X2, X31
	069 Add X22, X22, 1
	070 Call Array.GetLength, X0, X1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X19+72]
	073 Add X21, X21, 1
	074 Compare X0, 0
	075 JumpIfNotEqual {27}
	076 Call 0x1C17F20
	077 Move W21, 1
	078 Move W0, W21
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return X0
	085 Move W21, W31
	086 Call 0x1C17F28

Method: System.Boolean RefreshVolumes(UnityEngine.Rendering.Volume[] newVolumes)

Disassembly:
	0x02848B2C TBNZ X8, 0x0, 0x2848B34
	0x02848B30 BL 0x1C5C684
	0x02848B34 LDR X8, [X0 + 0xB8]
	0x02848B38 LDR X21, [X8 + 0x10]
	0x02848B3C CBZ X21, 0x2848B78
	0x02848B40 LDR X0, [X20 + 0x20]
	0x02848B44 LDRB W8, [X0 + 0x135]
	0x02848B48 TBNZ X8, 0x0, 0x2848B50
	0x02848B4C BL 0x1C5C684
	0x02848B50 LDR X8, [X0 + 0xC0]
	0x02848B54 MOV X1, X19
	0x02848B58 LDP X20, X19, [X31 + 0x10]
	0x02848B5C MOV X0, X21
	0x02848B60 LDR X2, [X8 + 0x100]
	0x02848B64 LDP X30, X21, [X31], #0x20
	0x02848B68 B 0x301D7A8
	0x02848B6C LDP X20, X19, [X31 + 0x10]
	0x02848B70 LDP X30, X21, [X31], #0x20
	0x02848B74 RET
	0x02848B78 BL 0x1C16F20
	0x02848B7C STR X30, [X31 - 0x30]!
	0x02848B80 STP X22, X21, [X31 + 0x10]
	0x02848B84 STP X20, X19, [X31 + 0x20]
	0x02848B88 ADRP X22, 0x1B92000
	0x02848B8C ADRP X21, 0x18D6000
	0x02848B90 ADRP X20, 0x18D6000
	0x02848B94 LDRB W8, [X22 + 0xACA]
	0x02848B98 LDR X21, [X21 + 0x50]
	0x02848B9C LDR X20, [X20 + 0x58]
	0x02848BA0 MOV X19, X0
	0x02848BA4 TBNZ X8, 0x0, 0x2848BC8
	0x02848BA8 ADRP X0, 0x18D6000
	0x02848BAC LDR X0, [X0 + 0x58]
	0x02848BB0 BL 0x1C16CF4
	0x02848BB4 ADRP X0, 0x18D6000
	0x02848BB8 LDR X0, [X0 + 0x50]
	0x02848BBC BL 0x1C16CF4
	0x02848BC0 MOVZ W8, 0x1
	0x02848BC4 STRB W8, [X22 + 0xACA]
	0x02848BC8 MOVN W8, 0x0
	0x02848BCC STR W8, [X19 + 0x20]
	0x02848BD0 LDR X0, [X21]
	0x02848BD4 BL 0x1C16F10
	0x02848BD8 LDR X1, [X20]
	0x02848BDC MOV X20, X0
	0x02848BE0 BL 0x301B7C4
	0x02848BE4 STR X20, [X19 + 0x30]
	0x02848BE8 MOV X0, X19
	0x02848BEC LDP X20, X19, [X31 + 0x20]
	0x02848BF0 LDP X22, X21, [X31 + 0x10]
	0x02848BF4 MOV X1, X31
	0x02848BF8 LDR X30, [X31], #0x30
	0x02848BFC B 0x33BDD8C
	0x02848C00 STR X30, [X31 - 0x20]!
	0x02848C04 STP X20, X19, [X31 + 0x10]
	0x02848C08 MOV X19, X0
	0x02848C0C LDR X0, [X0 + 0x20]
	0x02848C10 LDRB W8, [X0 + 0x135]
	0x02848C14 TBNZ X8, 0x0, 0x2848C1C
	0x02848C18 BL 0x1C5C684
	0x02848C1C LDR X8, [X0 + 0xC0]
	0x02848C20 LDR X0, [X8 + 0xE0]
	0x02848C24 LDRB W8, [X0 + 0x135]
	0x02848C28 TBNZ X8, 0x0, 0x2848C30
	0x02848C2C BL 0x1C5C684
	0x02848C30 BL 0x1C16F10
	0x02848C34 LDR X8, [X19 + 0x20]
	0x02848C38 MOV X20, X0
	0x02848C3C LDRB W9, [X8 + 0x135]
	0x02848C40 TBNZ X9, 0x0, 0x2848C50
	0x02848C44 MOV X0, X8
	0x02848C48 BL 0x1C5C684
	0x02848C4C MOV X8, X0
	0x02848C50 LDR X8, [X8 + 0xC0]
	0x02848C54 MOV X0, X20
	0x02848C58 LDR X1, [X8 + 0x108]
	0x02848C5C BL 0x301B7C4
	0x02848C60 LDR X0, [X19 + 0x20]
	0x02848C64 LDRB W8, [X0 + 0x135]
	0x02848C68 TBNZ X8, 0x0, 0x2848C70
	0x02848C6C BL 0x1C5C684
	0x02848C70 LDR X8, [X0 + 0xC0]
	0x02848C74 LDR X0, [X8 + 0x58]
	0x02848C78 LDRB W8, [X0 + 0x135]
	0x02848C7C TBNZ X8, 0x0, 0x2848C84
	0x02848C80 BL 0x1C5C684
	0x02848C84 LDR X8, [X0 + 0xB8]
	0x02848C88 STR X20, [X8 + 0x10]
	0x02848C8C LDR X0, [X19 + 0x20]
	0x02848C90 LDRB W8, [X0 + 0x135]
	0x02848C94 TBNZ X8, 0x0, 0x2848C9C
	0x02848C98 BL 0x1C5C684
	0x02848C9C LDR X8, [X0 + 0xC0]
	0x02848CA0 LDR X0, [X8 + 0x58]
	0x02848CA4 LDRB W8, [X0 + 0x135]
	0x02848CA8 TBNZ X8, 0x0, 0x2848CB8
	0x02848CAC LDP X20, X19, [X31 + 0x10]
	0x02848CB0 LDR X30, [X31], #0x20
	0x02848CB4 B 0x1C5C684
	0x02848CB8 LDP X20, X19, [X31 + 0x10]
	0x02848CBC LDR X30, [X31], #0x20
	0x02848CC0 RET
	0x02848CC4 LDRB W0, [X0 + 0x11]
	0x02848CC8 RET
	0x02848CCC AND W8, W1, 0x1
	0x02848CD0 STRB W8, [X0 + 0x11]
	0x02848CD4 RET
	0x02848CD8 STP X30, X19, [X31 - 0x10]!
	0x02848CDC MOV X1, X31
	0x02848CE0 MOV X19, X0
	0x02848CE4 BL 0x39F2970
	0x02848CE8 LDR X8, [X19]
	0x02848CEC STRB W31, [X19 + 0x11]
	0x02848CF0 MOV X0, X19
	0x02848CF4 MOV W1, W31
	0x02848CF8 LDP X3, X2, [X8 + 0x198]
	0x02848CFC LDP X30, X19, [X31], #0x10
	0x02848D00 BR X3
	0x02848D04 STP X30, X21, [X31 - 0x20]!
	0x02848D08 STP X20, X19, [X31 + 0x10]
	0x02848D0C AND W21, W1, 0x1
	0x02848D10 MOV X1, X31
	0x02848D14 MOV W19, W2
	0x02848D18 MOV X20, X0
	0x02848D1C BL 0x39F2970
	0x02848D20 LDR X8, [X20]
	0x02848D24 STRB W21, [X20 + 0x11]
	0x02848D28 AND W1, W19, 0x1

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1B93000
	011 Move W8, [X22+2757]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x18D7000
	020 Move X0, [X0+8]
	021 Call 0x1C17CF4
	022 Move X0, 0x18AC000
	023 Move X0, [X0+1592]
	024 Call 0x1C17CF4
	025 Move X0, 0x18D7000
	026 Move X0, [X0+16]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2757], W8
	030 Move X1, [X20+64]
	031 Compare X1, 0
	032 JumpIfEqual {59}
	033 Move X8, 0x18D7000
	034 Move X8, [X8+8]
	035 Move X0, X21
	036 Move X2, [X8]
	037 Call Enumerable.SequenceEqual, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {59}
	042 Move X8, [X19+32]
	043 Move X0, X20
	044 Move X8, [X8+192]
	045 Move X1, [X8+168]
	046 Call 0x2848680, X0
	047 Move X8, [X20+72]
	048 Move X21, X0
	049 Compare X8, 0
	050 JumpIfEqual {58}
	051 Move X0, X20
	052 Move X1, X21
	053 Call 0x28489E4, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {149}
	058 Move [X20+72], X21
	059 Compare X21, 0
	060 JumpIfEqual {137}
	061 Move X0, X21
	062 Move X1, X31
	063 Call Array.Clone, X0
	064 Compare X0, 0
	065 JumpIfEqual {84}
	066 Move X23, 0x18D7000
	067 Move X23, [X23+16]
	068 Move X21, X0
	069 Move X22, [X23]
	070 Move X1, X22
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {81}
	074 Move [X20+64], X0
	075 Move X22, [X23]
	076 Move X0, X21
	077 Move X1, X22
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfNotEqual {85}
	081 Move X0, X21
	082 Move X1, X22
	083 Call 0x1C181E0
	084 Move [X20+64], X31
	085 Move X8, [X19+32]
	086 Move X0, X20
	087 Move X8, [X8+192]
	088 Move X1, [X8+168]
	089 Call 0x2848680, X0
	090 Move [X20+72], X0
	091 Move W21, 1
	092 Move X8, [X20]
	093 Move X0, X20
	094 Move X9, [X8+680]
	095 Move X1, [X8+688]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X8, [X20+64]
	098 Compare X8, 0
	099 JumpIfEqual {137}
	100 Move X9, 0x18AC000
	101 Move X9, [X9+1592]
	102 Move W1, [X8+24]
	103 Move V8, V0
	104 Move V9, V1
	105 Move X0, [X9]
	106 Move V10, V2
	107 Call 0x1C17D6C
	108 Move X8, [X20+64]
	109 Move [X20+56], X0
	110 Compare X8, 0
	111 JumpIfEqual {137}
	112 Move X22, X31
	113 Move W9, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X9, [X19+32]
	117 Add X8, X8, X22
	118 Move X1, [X8+32]
	119 Move X23, [X20+56]
	120 Move X9, [X9+192]
	121 Move X0, X20
	122 Move V0, V8
	123 Move V1, V9
	124 Move X2, [X9+192]
	125 Move V2, V10
	126 Call 0x28481D8, X0, X1, X2
	127 Compare X23, 0
	128 JumpIfEqual {137}
	129 Move W8, [X23+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add X8, X23, X22
	132 Move [X8+32], S0
	133 Move X8, [X20+64]
	134 Add X22, X22, 1
	135 Compare X8, 0
	136 JumpIfNotEqual {113}
	137 Call 0x1C17F20
	138 Move W0, W21
	139 Move X20, [X31+64]
	140 Move X19, [X31+72]
	141 Move X22, [X31+48]
	142 Move X21, [X31+56]
	143 Move X30, [X31+32]
	144 Move X23, [X31+40]
	145 Move D9, [X31+16]
	146 Move D8, [X31+24]
	147 Move V10, [X31+80]
	148 Return X0
	149 Move W21, W31
	150 Call 0x1C17F28

Method: System.Single GetVolumeWeight(UnityEngine.Rendering.Volume volume)

Disassembly:
	0x02848D2C MOV X0, X20
	0x02848D30 LDP X3, X2, [X8 + 0x198]
	0x02848D34 LDP X20, X19, [X31 + 0x10]
	0x02848D38 LDP X30, X21, [X31], #0x20
	0x02848D3C BR X3
	0x02848D40 STR D8, [X31 - 0x30]!
	0x02848D44 STR X30, [X31 + 0x8]
	0x02848D48 STP X22, X21, [X31 + 0x10]
	0x02848D4C STP X20, X19, [X31 + 0x20]
	0x02848D50 LDR X8, [X3 + 0x20]
	0x02848D54 MOV X21, X3
	0x02848D58 MOV V8.16B, V0.16B
	0x02848D5C MOV X20, X2
	0x02848D60 LDR X8, [X8 + 0xC0]
	0x02848D64 MOV X22, X1
	0x02848D68 MOV X19, X0
	0x02848D6C LDR X8, [X8]
	0x02848D70 LDRB W9, [X8 + 0x135]
	0x02848D74 TBNZ X9, 0x0, 0x2848D84
	0x02848D78 MOV X0, X8
	0x02848D7C BL 0x1C5C684
	0x02848D80 MOV X8, X0
	0x02848D84 CBZ X22, 0x2848ECC
	0x02848D88 LDR X9, [X22]
	0x02848D8C LDRB W10, [X8 + 0x130]
	0x02848D90 LDRB W11, [X9 + 0x130]
	0x02848D94 CMP W11, W10
	0x02848D98 B.CC 0x2848ECC
	0x02848D9C LDR X9, [X9 + 0xC8]
	0x02848DA0 ADD X9, X9, X10, 0x3, LSL
	0x02848DA4 LDUR X9, [X9 - 0x8]
	0x02848DA8 CMP X9, X8
	0x02848DAC B.NE 0x2848ECC
	0x02848DB0 LDR X8, [X21 + 0x20]
	0x02848DB4 LDR X8, [X8 + 0xC0]
	0x02848DB8 LDR X0, [X8]
	0x02848DBC LDRB W8, [X0 + 0x135]
	0x02848DC0 TBNZ X8, 0x0, 0x2848DC8
	0x02848DC4 BL 0x1C5C684
	0x02848DC8 LDR X8, [X22]
	0x02848DCC LDRB W9, [X0 + 0x130]
	0x02848DD0 LDRB W10, [X8 + 0x130]
	0x02848DD4 CMP W10, W9
	0x02848DD8 B.CS 0x2848DE4
	0x02848DDC MOV X0, X31
	0x02848DE0 B 0x2848DF8
	0x02848DE4 LDR X8, [X8 + 0xC8]
	0x02848DE8 ADD X8, X8, X9, 0x3, LSL
	0x02848DEC LDUR X8, [X8 - 0x8]
	0x02848DF0 CMP X8, X0
	0x02848DF4 CSEL X0, X22, X31, EQ
	0x02848DF8 LDR X8, [X0]
	0x02848DFC LDR X9, [X8 + 0x218]
	0x02848E00 LDR X1, [X8 + 0x220]
	0x02848E04 BLR X9
	0x02848E08 LDR X8, [X21 + 0x20]
	0x02848E0C MOV W22, W0
	0x02848E10 LDR X8, [X8 + 0xC0]
	0x02848E14 LDR X8, [X8]
	0x02848E18 LDRB W9, [X8 + 0x135]
	0x02848E1C TBNZ X9, 0x0, 0x2848E2C
	0x02848E20 MOV X0, X8
	0x02848E24 BL 0x1C5C684
	0x02848E28 MOV X8, X0
	0x02848E2C CBZ X20, 0x2848ECC
	0x02848E30 LDR X9, [X20]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1B93000
	012 Move W8, [X21+2758]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x18AC000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2758], W8
	024 Move X8, [X20+56]
	025 Compare X8, 0
	026 JumpIfEqual {69}
	027 Move X8, [X20+64]
	028 Compare X8, 0
	029 JumpIfEqual {68}
	030 Move X23, 0x18AC000
	031 Move X23, [X23+1432]
	032 Move X22, X31
	033 Move S8, W31
	034 Move S9, 1
	035 Move S10, W31
	036 Move W10, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X20+56]
	039 Compare X9, 0
	040 JumpIfEqual {68}
	041 Move W11, [X9+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X23]
	045 Add X9, X9, X22
	046 Add X8, X8, X22
	047 Move V11, [X9+32]
	048 Move W9, [X0+224]
	049 Move X21, [X8+32]
	050 Compare W9, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Subtract S0, S9, S10
	054 Move X0, X21
	055 Move X1, X19
	056 Move X2, X31
	057 Multiply S11, S0, S11
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {70}
	063 Move X8, [X20+64]
	064 Add S10, S10, S11
	065 Add X22, X22, 1
	066 Compare X8, 0
	067 JumpIfNotEqual {36}
	068 Call 0x1C17F20
	069 Move S8, W31
	070 Move V8, V11
	071 Move V0, V8
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X22, [X31+48]
	075 Move X21, [X31+56]
	076 Move X30, [X31+32]
	077 Move X23, [X31+40]
	078 Move D9, [X31+16]
	079 Move D8, [X31+24]
	080 Move D11, [X31+80]
	081 Move D10, [X31+88]
	082 Return V0
	083 Call 0x1C17F28

Method: System.Boolean VolumeHasInfluence(UnityEngine.Rendering.Volume volume)

Disassembly:
	0x02848E34 LDRB W10, [X8 + 0x130]
	0x02848E38 LDRB W11, [X9 + 0x130]
	0x02848E3C CMP W11, W10
	0x02848E40 B.CC 0x2848ECC
	0x02848E44 LDR X9, [X9 + 0xC8]
	0x02848E48 ADD X10, X9, X10, 0x3, LSL
	0x02848E4C LDUR X10, [X10 - 0x8]
	0x02848E50 CMP X10, X8
	0x02848E54 B.NE 0x2848ECC
	0x02848E58 LDR X8, [X21 + 0x20]
	0x02848E5C LDR X8, [X8 + 0xC0]
	0x02848E60 LDR X0, [X8]
	0x02848E64 LDRB W8, [X0 + 0x135]
	0x02848E68 TBNZ X8, 0x0, 0x2848E78
	0x02848E6C BL 0x1C5C684
	0x02848E70 LDR X8, [X20]
	0x02848E74 LDR X9, [X8 + 0xC8]
	0x02848E78 LDRB W8, [X0 + 0x130]
	0x02848E7C ADD X8, X9, X8, 0x3, LSL
	0x02848E80 LDUR X8, [X8 - 0x8]
	0x02848E84 CMP X8, X0
	0x02848E88 CSEL X0, X20, X31, EQ
	0x02848E8C LDR X8, [X0]
	0x02848E90 LDR X9, [X8 + 0x218]
	0x02848E94 LDR X1, [X8 + 0x220]
	0x02848E98 BLR X9
	0x02848E9C LDR X8, [X19]
	0x02848EA0 AND W2, W0, 0x1
	0x02848EA4 AND W1, W22, 0x1
	0x02848EA8 MOV X0, X19
	0x02848EAC LDR X4, [X8 + 0x238]
	0x02848EB0 LDR X3, [X8 + 0x240]
	0x02848EB4 LDP X20, X19, [X31 + 0x20]
	0x02848EB8 LDP X22, X21, [X31 + 0x10]
	0x02848EBC LDR X30, [X31 + 0x8]
	0x02848EC0 MOV V0.16B, V8.16B
	0x02848EC4 LDR V8, [X31], #0x30
	0x02848EC8 BR X4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B93000
	006 Move W8, [X21+2759]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x18D7000
	014 Move X0, [X0+24]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2759], W8
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfEqual {37}
	021 Move X8, 0x18D7000
	022 Move X8, [X8+24]
	023 Move X0, [X19+64]
	024 Move X1, X20
	025 Move X2, [X8]
	026 Call Array.IndexOf, X0, X1
	027 Add W31, W0, 1
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfEqual {43}
	031 Move W9, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X8, X8, W0
	034 Move V0, [X8+32]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move W0, W31
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C17F20
	044 Call 0x1C17F28

Method: System.Collections.Generic.List`1<System.Type> get_componentTypes()

Disassembly:
	0x02848ECC BL 0x1C16F20
	0x02848ED0 STR X30, [X31 - 0x10]!
	0x02848ED4 CBZ X0, 0x2848EF0
	0x02848ED8 FCMP S0, 0x0
	0x02848EDC CSEL W8, W2, W1, GT
	0x02848EE0 AND W8, W8, 0x1
	0x02848EE4 STRB W8, [X0 + 0x11]
	0x02848EE8 LDR X30, [X31], #0x10
	0x02848EEC RET
	0x02848EF0 BL 0x1C16F20
	0x02848EF4 STR X30, [X31 - 0x20]!
	0x02848EF8 STP X20, X19, [X31 + 0x10]
	0x02848EFC CBZ X0, 0x2848F28
	0x02848F00 LDR X8, [X0]
	0x02848F04 AND W20, W1, 0x1
	0x02848F08 MOVZ W1, 0x1
	0x02848F0C MOV X19, X0
	0x02848F10 LDP X9, X2, [X8 + 0x198]
	0x02848F14 BLR X9
	0x02848F18 STRB W20, [X19 + 0x11]
	0x02848F1C LDP X20, X19, [X31 + 0x10]
	0x02848F20 LDR X30, [X31], #0x20
	0x02848F24 RET
	0x02848F28 BL 0x1C16F20
	0x02848F2C STP X30, X21, [X31 - 0x20]!
	0x02848F30 STP X20, X19, [X31 + 0x10]
	0x02848F34 LDR X8, [X2 + 0x20]
	0x02848F38 MOV X19, X1
	0x02848F3C MOV X21, X2
	0x02848F40 MOV X20, X0
	0x02848F44 LDR X8, [X8 + 0xC0]
	0x02848F48 LDR X1, [X8]
	0x02848F4C LDRB W8, [X1 + 0x135]
	0x02848F50 TBNZ X8, 0x0, 0x2848F60
	0x02848F54 MOV X0, X1
	0x02848F58 BL 0x1C5C684
	0x02848F5C MOV X1, X0
	0x02848F60 CBZ X19, 0x2848FF0
	0x02848F64 LDR X8, [X19]
	0x02848F68 LDRB W9, [X1 + 0x130]
	0x02848F6C LDRB W10, [X8 + 0x130]
	0x02848F70 CMP W10, W9
	0x02848F74 B.CC 0x2848FE8
	0x02848F78 LDR X8, [X8 + 0xC8]
	0x02848F7C ADD X8, X8, X9, 0x3, LSL
	0x02848F80 LDUR X8, [X8 - 0x8]
	0x02848F84 CMP X8, X1
	0x02848F88 B.NE 0x2848FE8
	0x02848F8C LDR X8, [X21 + 0x20]
	0x02848F90 LDR X8, [X8 + 0xC0]
	0x02848F94 LDR X1, [X8]
	0x02848F98 LDRB W8, [X1 + 0x135]
	0x02848F9C TBNZ X8, 0x0, 0x2848FAC
	0x02848FA0 MOV X0, X1
	0x02848FA4 BL 0x1C5C684
	0x02848FA8 MOV X1, X0
	0x02848FAC LDR X8, [X19]
	0x02848FB0 LDRB W9, [X1 + 0x130]
	0x02848FB4 LDRB W10, [X8 + 0x130]
	0x02848FB8 CMP W10, W9
	0x02848FBC B.CC 0x2848FE8
	0x02848FC0 LDR X8, [X8 + 0xC8]
	0x02848FC4 ADD X8, X8, X9, 0x3, LSL
	0x02848FC8 LDUR X8, [X8 - 0x8]
	0x02848FCC CMP X8, X1
	0x02848FD0 B.NE 0x2848FE8
	0x02848FD4 LDRB W8, [X19 + 0x11]
	0x02848FD8 STRB W8, [X20 + 0x11]
	0x02848FDC LDP X20, X19, [X31 + 0x10]
	0x02848FE0 LDP X30, X21, [X31], #0x20
	0x02848FE4 RET
	0x02848FE8 MOV X0, X19
	0x02848FEC BL 0x1C171E0
	0x02848FF0 BL 0x1C16F20
	0x02848FF4 SUB X31, X31, 0x40
	0x02848FF8 STP X30, X23, [X31 + 0x10]
	0x02848FFC STP X22, X21, [X31 + 0x20]
	0x02849000 STP X20, X19, [X31 + 0x30]
	0x02849004 ADRP X21, 0x1B91000
	0x02849008 LDRB W8, [X21 + 0xACB]
	0x0284900C MOV X19, X1
	0x02849010 MOV X20, X0
	0x02849014 TBNZ X8, 0x0, 0x284902C
	0x02849018 ADRP X0, 0x18AA000
	0x0284901C LDR X0, [X0 + 0xB58]
	0x02849020 BL 0x1C16CF4
	0x02849024 MOVZ W8, 0x1
	0x02849028 STRB W8, [X21 + 0xACB]
	0x0284902C STRB W31, [X31 + 0x8]
	0x02849030 CBZ X20, 0x2849130
	0x02849034 LDR X8, [X20]
	0x02849038 ADRP X23, 0x18AA000
	0x0284903C MOV X0, X20
	0x02849040 LDP X9, X1, [X8 + 0x188]
	0x02849044 LDR X23, [X23 + 0xB58]
	0x02849048 BLR X9
	0x0284904C LDR X8, [X23]
	0x02849050 AND W9, W0, 0x1
	0x02849054 STRB W9, [X31 + 0xC]
	0x02849058 LDR W9, [X8 + 0xE0]
	0x0284905C CBNZ W9, 0x2849068
	0x02849060 MOV X0, X8
	0x02849064 BL 0x1C16DFC
	0x02849068 ADD X0, X31, 0xC
	0x0284906C MOV X1, X31
	0x02849070 BL 0x33176B4
	0x02849074 LDR X8, [X19 + 0x20]
	0x02849078 MOV W21, W0
	0x0284907C LDR X8, [X8 + 0xC0]
	0x02849080 LDR X8, [X8 + 0x28]
	0x02849084 MOV X0, X8
	0x02849088 BL 0x21189DC
	0x0284908C LDR X8, [X20]
	0x02849090 MOV X22, X0
	0x02849094 MOV X0, X20
	0x02849098 LDR X9, [X8 + 0x218]
	0x0284909C LDR X1, [X8 + 0x220]
	0x028490A0 BLR X9
	0x028490A4 STRB W31, [X31 + 0x8]
	0x028490A8 CBZ X22, 0x2849130
	0x028490AC LDR X8, [X22]
	0x028490B0 AND W1, W0, 0x1
	0x028490B4 MOV X0, X22
	0x028490B8 MOV W2, W31
	0x028490BC LDP X9, X3, [X8 + 0x1B8]
	0x028490C0 ADD W21, W21, 0x187
	0x028490C4 BLR X9
	0x028490C8 TBNZ X0, 0x0, 0x2849118
	0x028490CC LDR X8, [X20]
	0x028490D0 MOV X0, X20
	0x028490D4 LDR X9, [X8 + 0x218]
	0x028490D8 LDR X1, [X8 + 0x220]
	0x028490DC BLR X9
	0x028490E0 LDR X8, [X23]
	0x028490E4 AND W9, W0, 0x1
	0x028490E8 STRB W9, [X31 + 0x8]
	0x028490EC LDR W9, [X8 + 0xE0]
	0x028490F0 CBNZ W9, 0x28490FC
	0x028490F4 MOV X0, X8
	0x028490F8 BL 0x1C16DFC
	0x028490FC LDR X8, [X19 + 0x20]
	0x02849100 ADD X0, X31, 0x8
	0x02849104 LDR X8, [X8 + 0xC0]
	0x02849108 LDR X1, [X8 + 0x48]
	0x0284910C BL 0x33176B4
	0x02849110 MOVZ W8, 0x17
	0x02849114 MADD W21, W21, W8, W0
	0x02849118 MOV W0, W21
	0x0284911C LDP X20, X19, [X31 + 0x30]
	0x02849120 LDP X22, X21, [X31 + 0x20]
	0x02849124 LDP X30, X23, [X31 + 0x10]
	0x02849128 ADD X31, X31, 0x40
	0x0284912C RET
	0x02849130 BL 0x1C16F20
	0x02849134 SUB X31, X31, 0x40
	0x02849138 STP X30, X23, [X31 + 0x10]
	0x0284913C STP X22, X21, [X31 + 0x20]
	0x02849140 STP X20, X19, [X31 + 0x30]
	0x02849144 ADRP X23, 0x1B91000
	0x02849148 ADRP X22, 0x18AA000
	0x0284914C ADRP X21, 0x18B0000
	0x02849150 LDRB W8, [X23 + 0xACC]
	0x02849154 LDR X22, [X22 + 0xB58]
	0x02849158 LDR X21, [X21 + 0xC98]
	0x0284915C MOV X20, X1
	0x02849160 MOV X19, X0
	0x02849164 TBNZ X8, 0x0, 0x2849188
	0x02849168 ADRP X0, 0x18AA000
	0x0284916C LDR X0, [X0 + 0xB58]
	0x02849170 BL 0x1C16CF4
	0x02849174 ADRP X0, 0x18B0000
	0x02849178 LDR X0, [X0 + 0xC98]
	0x0284917C BL 0x1C16CF4
	0x02849180 MOVZ W8, 0x1
	0x02849184 STRB W8, [X23 + 0xACC]
	0x02849188 LDR X8, [X19]
	0x0284918C MOV X0, X19
	0x02849190 LDR X9, [X8 + 0x218]
	0x02849194 LDR X1, [X8 + 0x220]
	0x02849198 BLR X9
	0x0284919C AND W8, W0, 0x1
	0x028491A0 STRB W8, [X31 + 0xC]
	0x028491A4 LDR X8, [X20 + 0x20]
	0x028491A8 ADD X1, X31, 0xC
	0x028491AC LDR X8, [X8 + 0xC0]
	0x028491B0 LDR X0, [X8 + 0x8]
	0x028491B4 BL 0x1C16E04
	0x028491B8 LDR X8, [X19]
	0x028491BC MOV X20, X0
	0x028491C0 MOV X0, X19
	0x028491C4 LDP X9, X1, [X8 + 0x188]
	0x028491C8 BLR X9
	0x028491CC LDR X8, [X22]
	0x028491D0 AND W9, W0, 0x1
	0x028491D4 ADD X1, X31, 0x8
	0x028491D8 STRB W9, [X31 + 0x8]
	0x028491DC MOV X0, X8
	0x028491E0 BL 0x1C16E04
	0x028491E4 LDR X8, [X21]
	0x028491E8 MOV X2, X0
	0x028491EC MOV X1, X20
	0x028491F0 MOV X3, X31
	0x028491F4 MOV X0, X8
	0x028491F8 BL 0x3227BD4
	0x028491FC LDP X20, X19, [X31 + 0x30]
	0x02849200 LDP X22, X21, [X31 + 0x20]
	0x02849204 LDP X30, X23, [X31 + 0x10]
	0x02849208 ADD X31, X31, 0x40
	0x0284920C RET
	0x02849210 STR X30, [X31 - 0x30]!
	0x02849214 STP X22, X21, [X31 + 0x10]
	0x02849218 STP X20, X19, [X31 + 0x20]
	0x0284921C ADRP X22, 0x1B91000
	0x02849220 LDRB W8, [X22 + 0xACD]
	0x02849224 MOV X19, X2
	0x02849228 MOV W21, W1
	0x0284922C MOV X20, X0
	0x02849230 TBNZ X8, 0x0, 0x2849248
	0x02849234 ADRP X0, 0x18AA000
	0x02849238 LDR X0, [X0 + 0xB58]
	0x0284923C BL 0x1C16CF4
	0x02849240 MOVZ W8, 0x1
	0x02849244 STRB W8, [X22 + 0xACD]
	0x02849248 CBZ X20, 0x28492EC
	0x0284924C LDR X8, [X20]
	0x02849250 AND W22, W21, 0x1
	0x02849254 ADRP X21, 0x18AA000
	0x02849258 MOV X0, X20
	0x0284925C LDR X9, [X8 + 0x218]
	0x02849260 LDR X1, [X8 + 0x220]
	0x02849264 LDR X21, [X21 + 0xB58]
	0x02849268 BLR X9
	0x0284926C LDR X8, [X20]
	0x02849270 MOV X0, X20
	0x02849274 LDR X9, [X8 + 0x218]
	0x02849278 LDR X1, [X8 + 0x220]
	0x0284927C BLR X9
	0x02849280 AND W8, W0, 0x1
	0x02849284 STRB W8, [X31 + 0xC]
	0x02849288 STRB W22, [X31 + 0x8]
	0x0284928C LDR X0, [X19 + 0x20]
	0x02849290 LDRB W8, [X0 + 0x135]
	0x02849294 TBNZ X8, 0x0, 0x284929C
	0x02849298 BL 0x1C5C684
	0x0284929C LDR X8, [X0 + 0xC0]
	0x028492A0 ADD X1, X31, 0x8
	0x028492A4 LDR X0, [X8 + 0x8]
	0x028492A8 BL 0x1C16E04
	0x028492AC LDR X8, [X21]
	0x028492B0 MOV X20, X0
	0x028492B4 LDR W9, [X8 + 0xE0]
	0x028492B8 CBNZ W9, 0x28492C4
	0x028492BC MOV X0, X8
	0x028492C0 BL 0x1C16DFC
	0x028492C4 LDR X0, [X19 + 0x20]
	0x028492C8 LDRB W8, [X0 + 0x135]
	0x028492CC TBNZ X8, 0x0, 0x28492D4
	0x028492D0 BL 0x1C5C684
	0x028492D4 LDR X8, [X0 + 0xC0]
	0x028492D8 ADD X0, X31, 0xC
	0x028492DC MOV X1, X20
	0x028492E0 LDR X2, [X8 + 0x50]
	0x028492E4 BL 0x3317784
	0x028492E8 B 0x28492F0
	0x028492EC MOV W0, W31
	0x028492F0 LDP X20, X19, [X31 + 0x20]
	0x028492F4 LDP X22, X21, [X31 + 0x10]
	0x028492F8 AND W0, W0, 0x1
	0x028492FC LDR X30, [X31], #0x30
	0x02849300 RET
	0x02849304 STR X30, [X31 - 0x20]!
	0x02849308 STP X20, X19, [X31 + 0x10]
	0x0284930C LDR X8, [X2 + 0x20]
	0x02849310 MOV W19, W1
	0x02849314 MOV X20, X0
	0x02849318 LDRB W9, [X8 + 0x135]
	0x0284931C TBNZ X9, 0x0, 0x284932C
	0x02849320 MOV X0, X8
	0x02849324 BL 0x1C5C684
	0x02849328 MOV X8, X0
	0x0284932C LDR X8, [X8 + 0xC0]
	0x02849330 AND W1, W19, 0x1
	0x02849334 MOV X0, X20
	0x02849338 LDR X2, [X8 + 0x58]
	0x0284933C BL 0x2849210
	0x02849340 LDP X20, X19, [X31 + 0x10]
	0x02849344 ORN W8, W31, W0, 0x0
	0x02849348 AND W0, W8, 0x1
	0x0284934C LDR X30, [X31], #0x20
	0x02849350 RET
	0x02849354 STR X30, [X31 - 0x20]!
	0x02849358 STP X20, X19, [X31 + 0x10]
	0x0284935C CBZ X1, 0x28493A0
	0x02849360 MOV X19, X1
	0x02849364 MOV X20, X0
	0x02849368 CMP X0, X1
	0x0284936C B.EQ 0x28493A8
	0x02849370 LDR X8, [X2 + 0x20]
	0x02849374 LDR X8, [X8 + 0xC0]
	0x02849378 LDR X0, [X8 + 0x28]
	0x0284937C BL 0x21189DC
	0x02849380 CBZ X0, 0x28493B8
	0x02849384 LDR X8, [X0]
	0x02849388 LDRB W2, [X19 + 0x11]
	0x0284938C LDRB W1, [X20 + 0x11]
	0x02849390 LDP X20, X19, [X31 + 0x10]
	0x02849394 LDP X4, X3, [X8 + 0x1B8]
	0x02849398 LDR X30, [X31], #0x20
	0x0284939C BR X4
	0x028493A0 MOV W0, W31
	0x028493A4 B 0x28493AC
	0x028493A8 MOVZ W0, 0x1
	0x028493AC LDP X20, X19, [X31 + 0x10]
	0x028493B0 LDR X30, [X31], #0x20
	0x028493B4 RET
	0x028493B8 BL 0x1C16F20
	0x028493BC STP X30, X23, [X31 - 0x30]!
	0x028493C0 STP X22, X21, [X31 + 0x10]
	0x028493C4 STP X20, X19, [X31 + 0x20]
	0x028493C8 ADRP X22, 0x1B91000
	0x028493CC LDRB W8, [X22 + 0xACE]
	0x028493D0 MOV X20, X2
	0x028493D4 MOV X19, X1
	0x028493D8 MOV X21, X0
	0x028493DC TBNZ X8, 0x0, 0x28493F4
	0x028493E0 ADRP X0, 0x18AA000
	0x028493E4 LDR X0, [X0 + 0x6C0]
	0x028493E8 BL 0x1C16CF4
	0x028493EC MOVZ W8, 0x1
	0x028493F0 STRB W8, [X22 + 0xACE]
	0x028493F4 CBZ X19, 0x2849454
	0x028493F8 CMP X21, X19
	0x028493FC B.EQ 0x284945C
	0x02849400 MOV X0, X19
	0x02849404 MOV X1, X31
	0x02849408 BL 0x33BE520
	0x0284940C CBZ X21, 0x28494DC
	0x02849410 MOV X22, X0
	0x02849414 MOV X0, X21
	0x02849418 MOV X1, X31
	0x0284941C BL 0x33BE520
	0x02849420 ADRP X8, 0x18AA000
	0x02849424 LDR X8, [X8 + 0x6C0]
	0x02849428 MOV X23, X0
	0x0284942C LDR X8, [X8]
	0x02849430 LDR W9, [X8 + 0xE0]
	0x02849434 CBNZ W9, 0x2849440
	0x02849438 MOV X0, X8
	0x0284943C BL 0x1C16DFC
	0x02849440 MOV X0, X22
	0x02849444 MOV X1, X23
	0x02849448 MOV X2, X31
	0x0284944C BL 0x3395F0C
	0x02849450 TBZ X0, 0x0, 0x2849470
	0x02849454 MOV W0, W31
	0x02849458 B 0x2849460
	0x0284945C MOVZ W0, 0x1
	0x02849460 LDP X20, X19, [X31 + 0x20]
	0x02849464 LDP X22, X21, [X31 + 0x10]
	0x02849468 LDP X30, X23, [X31], #0x30
	0x0284946C RET
	0x02849470 LDR X8, [X20 + 0x20]
	0x02849474 LDR X8, [X8 + 0xC0]
	0x02849478 LDR X1, [X8]
	0x0284947C LDRB W8, [X1 + 0x135]
	0x02849480 TBNZ X8, 0x0, 0x2849490
	0x02849484 MOV X0, X1
	0x02849488 BL 0x1C5C684
	0x0284948C MOV X1, X0
	0x02849490 LDR X8, [X19]
	0x02849494 LDRB W9, [X1 + 0x130]
	0x02849498 LDRB W10, [X8 + 0x130]
	0x0284949C CMP W10, W9
	0x028494A0 B.CC 0x28494E0
	0x028494A4 LDR X8, [X8 + 0xC8]
	0x028494A8 ADD X8, X8, X9, 0x3, LSL
	0x028494AC LDUR X8, [X8 - 0x8]
	0x028494B0 CMP X8, X1
	0x028494B4 B.NE 0x28494E0
	0x028494B8 LDR X8, [X20 + 0x20]
	0x028494BC MOV X0, X21
	0x028494C0 MOV X1, X19
	0x028494C4 LDP X20, X19, [X31 + 0x20]
	0x028494C8 LDR X8, [X8 + 0xC0]
	0x028494CC LDP X22, X21, [X31 + 0x10]
	0x028494D0 LDR X2, [X8 + 0x68]
	0x028494D4 LDP X30, X23, [X31], #0x30
	0x028494D8 B 0x2849354
	0x028494DC BL 0x1C16F20
	0x028494E0 MOV X0, X19
	0x028494E4 BL 0x1C171E0
	0x028494E8 STP X30, X21, [X31 - 0x20]!
	0x028494EC STP X20, X19, [X31 + 0x10]
	0x028494F0 CBZ X0, 0x2849584
	0x028494F4 LDR X8, [X1 + 0x20]
	0x028494F8 MOV X19, X1
	0x028494FC MOV X21, X0
	0x02849500 LDR X8, [X8 + 0xC0]
	0x02849504 LDR X1, [X8 + 0x70]
	0x02849508 BL 0x22ABA38
	0x0284950C LDR X8, [X21]
	0x02849510 MOV W20, W0
	0x02849514 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1B93000
	008 Move W8, [X20+2760]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x18D7000
	015 Move X0, [X0+32]
	016 Call 0x1C17CF4
	017 Move X0, 0x18D7000
	018 Move X0, [X0+40]
	019 Call 0x1C17CF4
	020 Move X0, 0x18D4000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move X0, 0x18B6000
	024 Move X0, [X0+2480]
	025 Call 0x1C17CF4
	026 Move X0, 0x18D7000
	027 Move X0, [X0+48]
	028 Call 0x1C17CF4
	029 Move X0, 0x18D6000
	030 Move X0, [X0+4032]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2760], W8
	034 Add X19, X19, 32
	035 Move X0, [X19]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+88]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X19]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+88]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+184]
	070 Move X8, [X8+8]
	071 Compare X8, 0
	072 JumpIfNotEqual {544}
	073 Move X8, 0x18D6000
	074 Move X8, [X8+4032]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X31
	081 Call VolumeManager.get_instance
	082 Compare X0, 0
	083 JumpIfEqual {587}
	084 Move X8, X0
	085 Move X0, [X19]
	086 Move X20, [X8+24]
	087 Move W9, [X0+309]
	088 Move TEMP, X9
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move X8, [X0+192]
	094 Move X0, [X8+144]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, [X19]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move X8, [X0+192]
	113 Move X0, [X8+144]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move X8, [X0+184]
	121 Move X21, [X8+24]
	122 Compare X21, 0
	123 JumpIfNotEqual {212}
	124 Move X0, [X19]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move X8, [X0+192]
	132 Move X0, [X8+144]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, [X19]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move X8, [X0+192]
	151 Move X0, [X8+144]
	152 Move W8, [X0+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Call 0x1C5D684
	158 Move X9, 0x18B5000
	159 Move X8, [X0+184]
	160 Move X9, [X9+2480]
	161 Move X22, [X8]
	162 Move X0, [X9]
	163 Call 0x1C17F10
	164 Move X8, [X19]
	165 Move X21, X0
	166 Move W9, [X8+309]
	167 Move TEMP, X9
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfEqual {174}
	171 Move X0, X8
	172 Call 0x1C5D684
	173 Move X8, X0
	174 Move X8, [X8+192]
	175 Move X0, X21
	176 Move X1, X22
	177 Move X3, X31
	178 Move X2, [X8+200]
	179 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	180 Move X0, [X19]
	181 Move W8, [X0+309]
	182 Move TEMP, X8
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {187}
	186 Call 0x1C5D684
	187 Move X8, [X0+192]
	188 Move X0, [X8+144]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move X8, [X0+184]
	196 Move [X8+24], X21
	197 Move X0, [X19]
	198 Move W8, [X0+309]
	199 Move TEMP, X8
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {204}
	203 Call 0x1C5D684
	204 Move X8, [X0+192]
	205 Move X0, [X8+144]
	206 Move W8, [X0+309]
	207 Move TEMP, X8
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfEqual {212}
	211 Call 0x1C5D684
	212 Move X23, 0x18D3000
	213 Move X23, [X23+2304]
	214 Move X0, X20
	215 Move X1, X21
	216 Move X2, [X23]
	217 Call Enumerable.Where, X0, X1
	218 Move X8, [X19]
	219 Move X20, X0
	220 Move W9, [X8+309]
	221 Move TEMP, X9
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {228}
	225 Move X0, X8
	226 Call 0x1C5D684
	227 Move X8, X0
	228 Move X8, [X8+192]
	229 Move X0, [X8+144]
	230 Move W8, [X0+309]
	231 Move TEMP, X8
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfEqual {236}
	235 Call 0x1C5D684
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X0, [X19]
	241 Move W8, [X0+309]
	242 Move TEMP, X8
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {247}
	246 Call 0x1C5D684
	247 Move X8, [X0+192]
	248 Move X0, [X8+144]
	249 Move W8, [X0+309]
	250 Move TEMP, X8
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {255}
	254 Call 0x1C5D684
	255 Move X8, [X0+184]
	256 Move X21, [X8+32]
	257 Compare X21, 0
	258 JumpIfNotEqual {347}
	259 Move X0, [X19]
	260 Move W8, [X0+309]
	261 Move TEMP, X8
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {266}
	265 Call 0x1C5D684
	266 Move X8, [X0+192]
	267 Move X0, [X8+144]
	268 Move W8, [X0+309]
	269 Move TEMP, X8
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfEqual {274}
	273 Call 0x1C5D684
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Move X0, [X19]
	279 Move W8, [X0+309]
	280 Move TEMP, X8
	281 And TEMP, TEMP, 1
	282 Compare TEMP, 1
	283 JumpIfEqual {285}
	284 Call 0x1C5D684
	285 Move X8, [X0+192]
	286 Move X0, [X8+144]
	287 Move W8, [X0+309]
	288 Move TEMP, X8
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfEqual {293}
	292 Call 0x1C5D684
	293 Move X9, 0x18B5000
	294 Move X8, [X0+184]
	295 Move X9, [X9+2480]
	296 Move X22, [X8]
	297 Move X0, [X9]
	298 Call 0x1C17F10
	299 Move X8, [X19]
	300 Move X21, X0
	301 Move W9, [X8+309]
	302 Move TEMP, X9
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {309}
	306 Move X0, X8
	307 Call 0x1C5D684
	308 Move X8, X0
	309 Move X8, [X8+192]
	310 Move X0, X21
	311 Move X1, X22
	312 Move X3, X31
	313 Move X2, [X8+208]
	314 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	315 Move X0, [X19]
	316 Move W8, [X0+309]
	317 Move TEMP, X8
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfEqual {322}
	321 Call 0x1C5D684
	322 Move X8, [X0+192]
	323 Move X0, [X8+144]
	324 Move W8, [X0+309]
	325 Move TEMP, X8
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfEqual {330}
	329 Call 0x1C5D684
	330 Move X8, [X0+184]
	331 Move [X8+32], X21
	332 Move X0, [X19]
	333 Move W8, [X0+309]
	334 Move TEMP, X8
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {339}
	338 Call 0x1C5D684
	339 Move X8, [X0+192]
	340 Move X0, [X8+144]
	341 Move W8, [X0+309]
	342 Move TEMP, X8
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {347}
	346 Call 0x1C5D684
	347 Move X2, [X23]
	348 Move X0, X20
	349 Move X1, X21
	350 Call Enumerable.Where, X0, X1
	351 Move X8, [X19]
	352 Move X20, X0
	353 Move W9, [X8+309]
	354 Move TEMP, X9
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfEqual {361}
	358 Move X0, X8
	359 Call 0x1C5D684
	360 Move X8, X0
	361 Move X8, [X8+192]
	362 Move X0, [X8+144]
	363 Move W8, [X0+309]
	364 Move TEMP, X8
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfEqual {369}
	368 Call 0x1C5D684
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {373}
	372 Call 0x1C17DFC
	373 Move X0, [X19]
	374 Move W8, [X0+309]
	375 Move TEMP, X8
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfEqual {380}
	379 Call 0x1C5D684
	380 Move X8, [X0+192]
	381 Move X0, [X8+144]
	382 Move W8, [X0+309]
	383 Move TEMP, X8
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfEqual {388}
	387 Call 0x1C5D684
	388 Move X8, [X0+184]
	389 Move X21, [X8+40]
	390 Compare X21, 0
	391 JumpIfNotEqual {480}
	392 Move X0, [X19]
	393 Move W8, [X0+309]
	394 Move TEMP, X8
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfEqual {399}
	398 Call 0x1C5D684
	399 Move X8, [X0+192]
	400 Move X0, [X8+144]
	401 Move W8, [X0+309]
	402 Move TEMP, X8
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfEqual {407}
	406 Call 0x1C5D684
	407 Move W8, [X0+224]
	408 Compare W8, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 Move X0, [X19]
	412 Move W8, [X0+309]
	413 Move TEMP, X8
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfEqual {418}
	417 Call 0x1C5D684
	418 Move X8, [X0+192]
	419 Move X0, [X8+144]
	420 Move W8, [X0+309]
	421 Move TEMP, X8
	422 And TEMP, TEMP, 1
	423 Compare TEMP, 1
	424 JumpIfEqual {426}
	425 Call 0x1C5D684
	426 Move X9, 0x18D6000
	427 Move X8, [X0+184]
	428 Move X9, [X9+48]
	429 Move X22, [X8]
	430 Move X0, [X9]
	431 Call 0x1C17F10
	432 Move X8, [X19]
	433 Move X21, X0
	434 Move W9, [X8+309]
	435 Move TEMP, X9
	436 And TEMP, TEMP, 1
	437 Compare TEMP, 1
	438 JumpIfEqual {442}
	439 Move X0, X8
	440 Call 0x1C5D684
	441 Move X8, X0
	442 Move X8, [X8+192]
	443 Move X0, X21
	444 Move X1, X22
	445 Move X3, X31
	446 Move X2, [X8+216]
	447 Call Func`2<Object, Object>..ctor, X0, X1, X2
	448 Move X0, [X19]
	449 Move W8, [X0+309]
	450 Move TEMP, X8
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfEqual {455}
	454 Call 0x1C5D684
	455 Move X8, [X0+192]
	456 Move X0, [X8+144]
	457 Move W8, [X0+309]
	458 Move TEMP, X8
	459 And TEMP, TEMP, 1
	460 Compare TEMP, 1
	461 JumpIfEqual {463}
	462 Call 0x1C5D684
	463 Move X8, [X0+184]
	464 Move [X8+40], X21
	465 Move X0, [X19]
	466 Move W8, [X0+309]
	467 Move TEMP, X8
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfEqual {472}
	471 Call 0x1C5D684
	472 Move X8, [X0+192]
	473 Move X0, [X8+144]
	474 Move W8, [X0+309]
	475 Move TEMP, X8
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfEqual {480}
	479 Call 0x1C5D684
	480 Move X8, 0x18D6000
	481 Move X8, [X8+32]
	482 Move X0, X20
	483 Move X1, X21
	484 Move X2, [X8]
	485 Call Enumerable.OrderBy, X0, X1
	486 Move X8, 0x18D6000
	487 Move X8, [X8+40]
	488 Move X1, [X8]
	489 Call Enumerable.ToList, X0
	490 Move X8, [X19]
	491 Move X20, X0
	492 Move W9, [X8+309]
	493 Move TEMP, X9
	494 And TEMP, TEMP, 1
	495 Compare TEMP, 1
	496 JumpIfEqual {500}
	497 Move X0, X8
	498 Call 0x1C5D684
	499 Move X8, X0
	500 Move X8, [X8+192]
	501 Move X0, [X8+88]
	502 Move W8, [X0+309]
	503 Move TEMP, X8
	504 And TEMP, TEMP, 1
	505 Compare TEMP, 1
	506 JumpIfEqual {508}
	507 Call 0x1C5D684
	508 Move W8, [X0+224]
	509 Compare W8, 0
	510 JumpIfNotEqual {512}
	511 Call 0x1C17DFC
	512 Move X0, [X19]
	513 Move W8, [X0+309]
	514 Move TEMP, X8
	515 And TEMP, TEMP, 1
	516 Compare TEMP, 1
	517 JumpIfEqual {519}
	518 Call 0x1C5D684
	519 Move X8, [X0+192]
	520 Move X0, [X8+88]
	521 Move W8, [X0+309]
	522 Move TEMP, X8
	523 And TEMP, TEMP, 1
	524 Compare TEMP, 1
	525 JumpIfEqual {527}
	526 Call 0x1C5D684
	527 Move X8, [X0+184]
	528 Move [X8+8], X20
	529 Move X0, [X19]
	530 Move W8, [X0+309]
	531 Move TEMP, X8
	532 And TEMP, TEMP, 1
	533 Compare TEMP, 1
	534 JumpIfEqual {536}
	535 Call 0x1C5D684
	536 Move X8, [X0+192]
	537 Move X0, [X8+88]
	538 Move W8, [X0+309]
	539 Move TEMP, X8
	540 And TEMP, TEMP, 1
	541 Compare TEMP, 1
	542 JumpIfEqual {544}
	543 Call 0x1C5D684
	544 Move X0, [X19]
	545 Move W8, [X0+309]
	546 Move TEMP, X8
	547 And TEMP, TEMP, 1
	548 Compare TEMP, 1
	549 JumpIfEqual {551}
	550 Call 0x1C5D684
	551 Move X8, [X0+192]
	552 Move X0, [X8+88]
	553 Move W8, [X0+309]
	554 Move TEMP, X8
	555 And TEMP, TEMP, 1
	556 Compare TEMP, 1
	557 JumpIfEqual {559}
	558 Call 0x1C5D684
	559 Move W8, [X0+224]
	560 Compare W8, 0
	561 JumpIfNotEqual {563}
	562 Call 0x1C17DFC
	563 Move X0, [X19]
	564 Move W8, [X0+309]
	565 Move TEMP, X8
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfEqual {570}
	569 Call 0x1C5D684
	570 Move X8, [X0+192]
	571 Move X0, [X8+88]
	572 Move W8, [X0+309]
	573 Move TEMP, X8
	574 And TEMP, TEMP, 1
	575 Compare TEMP, 1
	576 JumpIfEqual {578}
	577 Call 0x1C5D684
	578 Move X8, [X0+184]
	579 Move X20, [X31+32]
	580 Move X19, [X31+40]
	581 Move X22, [X31+16]
	582 Move X21, [X31+24]
	583 Move X0, [X8+8]
	584 Move X30, [X31+48]
	585 Move X23, [X31+56]
	586 Return X0
	587 Call 0x1C17F20

Method: System.String ComponentDisplayName(System.Type component)

Disassembly:
	0x02849518 LDP X9, X1, [X8 + 0x188]
	0x0284951C BLR X9
	0x02849520 LDR X8, [X19 + 0x20]
	0x02849524 MOV W19, W0
	0x02849528 LDR X8, [X8 + 0xC0]
	0x0284952C LDR X8, [X8]
	0x02849530 LDRB W9, [X8 + 0x135]
	0x02849534 TBNZ X9, 0x0, 0x2849544
	0x02849538 MOV X0, X8
	0x0284953C BL 0x1C5C684
	0x02849540 MOV X8, X0
	0x02849544 MOV X0, X8
	0x02849548 BL 0x1C16F10
	0x0284954C MOV X1, X31
	0x02849550 MOV X21, X0
	0x02849554 AND W20, W20, 0x1
	0x02849558 BL 0x39F2970
	0x0284955C LDR X8, [X21]
	0x02849560 STRB W20, [X21 + 0x11]
	0x02849564 AND W1, W19, 0x1
	0x02849568 MOV X0, X21
	0x0284956C LDP X9, X2, [X8 + 0x198]
	0x02849570 BLR X9
	0x02849574 LDP X20, X19, [X31 + 0x10]
	0x02849578 MOV X0, X21
	0x0284957C LDP X30, X21, [X31], #0x20
	0x02849580 RET
	0x02849584 BL 0x1C16F20
	0x02849588 STR X30, [X31 - 0x10]!
	0x0284958C CBZ X0, 0x284959C
	0x02849590 LDRB W0, [X0 + 0x11]
	0x02849594 LDR X30, [X31], #0x10
	0x02849598 RET
	0x0284959C BL 0x1C16F20
	0x028495A0 LDP S0, S1, [X0 + 0x14]
	0x028495A4 LDP S2, S3, [X0 + 0x1C]
	0x028495A8 RET
	0x028495AC STP S0, S1, [X0 + 0x14]
	0x028495B0 STP S2, S3, [X0 + 0x1C]
	0x028495B4 RET
	0x028495B8 STP X30, X19, [X31 - 0x10]!
	0x028495BC MOV X1, X31
	0x028495C0 MOV X19, X0
	0x028495C4 BL 0x39F2970
	0x028495C8 LDR X8, [X19]
	0x028495CC STUR X31, [X19 + 0x1C]
	0x028495D0 STUR X31, [X19 + 0x14]
	0x028495D4 MOV X0, X19
	0x028495D8 LDP X3, X2, [X8 + 0x198]
	0x028495DC MOV W1, W31
	0x028495E0 LDP X30, X19, [X31], #0x10
	0x028495E4 BR X3
	0x028495E8 STP D11, D10, [X31 - 0x40]!
	0x028495EC STP D9, D8, [X31 + 0x10]
	0x028495F0 STR X30, [X31 + 0x20]
	0x028495F4 STP X20, X19, [X31 + 0x30]
	0x028495F8 MOV W19, W1
	0x028495FC MOV X1, X31
	0x02849600 MOV V8.16B, V3.16B
	0x02849604 MOV V9.16B, V2.16B
	0x02849608 MOV V10.16B, V1.16B
	0x0284960C MOV V11.16B, V0.16B
	0x02849610 MOV X20, X0
	0x02849614 BL 0x39F2970
	0x02849618 LDR X8, [X20]
	0x0284961C STP S11, S10, [X20 + 0x14]
	0x02849620 STP S9, S8, [X20 + 0x1C]
	0x02849624 AND W1, W19, 0x1
	0x02849628 LDP X3, X2, [X8 + 0x198]
	0x0284962C MOV X0, X20
	0x02849630 LDP X20, X19, [X31 + 0x30]
	0x02849634 LDR X30, [X31 + 0x20]
	0x02849638 LDP D9, D8, [X31 + 0x10]
	0x0284963C LDP D11, D10, [X31], #0x40
	0x02849640 BR X3
	0x02849644 SUB X31, X31, 0x60
	0x02849648 STR D12, [X31 + 0x10]
	0x0284964C STP D11, D10, [X31 + 0x18]
	0x02849650 STP D9, D8, [X31 + 0x28]
	0x02849654 STR X30, [X31 + 0x38]
	0x02849658 STP X22, X21, [X31 + 0x40]
	0x0284965C STP X20, X19, [X31 + 0x50]
	0x02849660 LDR X8, [X3 + 0x20]
	0x02849664 MOV X21, X3
	0x02849668 MOV V8.16B, V0.16B
	0x0284966C MOV X20, X2
	0x02849670 LDR X8, [X8 + 0xC0]
	0x02849674 MOV X22, X1
	0x02849678 MOV X19, X0
	0x0284967C LDR X8, [X8]
	0x02849680 LDRB W9, [X8 + 0x135]
	0x02849684 TBNZ X9, 0x0, 0x2849694
	0x02849688 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B92000
	007 Move X20, 0x18D6000
	008 Move X21, 0x18AB000
	009 Move W8, [X22+2761]
	010 Move X20, [X20+56]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x18AB000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0x18D6000
	021 Move X0, [X0+56]
	022 Call 0x1C17CF4
	023 Move X0, 0x18D6000
	024 Move X0, [X0+64]
	025 Call 0x1C17CF4
	026 Move X0, 0x18D6000
	027 Move X0, [X0+72]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2761], W8
	031 Move X0, [X21]
	032 Move X20, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X22, 0x18D6000
	038 Move X22, [X22+64]
	039 Move X0, X20
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Move X1, X0
	043 Move X0, X19
	044 Move W2, W31
	045 Move X3, X31
	046 Call CustomAttributeExtensions.GetCustomAttribute, X0, X1, X2
	047 Compare X0, 0
	048 JumpIfEqual {58}
	049 Move X9, [X0]
	050 Move X8, [X22]
	051 Move W11, [X9+304]
	052 Move W10, [X8+304]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X9, [X9+200]
	055 Add X9, X9, X10
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, 0x18D6000
	059 Move X0, [X21]
	060 Move X8, [X8+72]
	061 Move W9, [X0+224]
	062 Move X20, [X8]
	063 Compare W9, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Call Type.GetTypeFromHandle, X0
	069 Move X1, X0
	070 Move X0, X19
	071 Move W2, W31
	072 Move X3, X31
	073 Call CustomAttributeExtensions.GetCustomAttribute, X0, X1, X2
	074 Compare X0, 0
	075 JumpIfEqual {85}
	076 Move X9, [X0]
	077 Move X8, [X22]
	078 Move W11, [X9+304]
	079 Move W10, [X8+304]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X9, [X9+200]
	082 Add X9, X9, X10
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Compare X19, 0
	086 JumpIfEqual {104}
	087 Move X8, [X19]
	088 Move X0, X19
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X2, [X8+424]
	094 Move X1, [X8+432]
	095 Move X30, [X31+48]
	096 CallNoReturn X2
	097 Move X0, [X0+16]
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Return X0
	104 Call 0x1C17F20

Method: System.Collections.Generic.List`1<T> get_additionalCameraDatas()

Disassembly:
	0x0284968C BL 0x1C5C684
	0x02849690 MOV X8, X0
	0x02849694 CBZ X22, 0x2849808
	0x02849698 LDR X9, [X22]
	0x0284969C LDRB W10, [X8 + 0x130]
	0x028496A0 LDRB W11, [X9 + 0x130]
	0x028496A4 CMP W11, W10
	0x028496A8 B.CC 0x2849808
	0x028496AC LDR X9, [X9 + 0xC8]
	0x028496B0 ADD X9, X9, X10, 0x3, LSL
	0x028496B4 LDUR X9, [X9 - 0x8]
	0x028496B8 CMP X9, X8
	0x028496BC B.NE 0x2849808
	0x028496C0 LDR X8, [X21 + 0x20]
	0x028496C4 LDR X8, [X8 + 0xC0]
	0x028496C8 LDR X0, [X8]
	0x028496CC LDRB W8, [X0 + 0x135]
	0x028496D0 TBNZ X8, 0x0, 0x28496D8
	0x028496D4 BL 0x1C5C684
	0x028496D8 LDR X8, [X22]
	0x028496DC LDRB W9, [X0 + 0x130]
	0x028496E0 LDRB W10, [X8 + 0x130]
	0x028496E4 CMP W10, W9
	0x028496E8 B.CS 0x28496F4
	0x028496EC MOV X0, X31
	0x028496F0 B 0x2849708
	0x028496F4 LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move X0, [X8+88]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Move X0, [X8+88]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+184]
	039 Move X0, [X8+16]
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0

Method: System.Void set_additionalCameraDatas(System.Collections.Generic.List`1<T> value)

Disassembly:
	0x028496F8 ADD X8, X8, X9, 0x3, LSL
	0x028496FC LDUR X8, [X8 - 0x8]
	0x02849700 CMP X8, X0
	0x02849704 CSEL X0, X22, X31, EQ
	0x02849708 LDR X8, [X0]
	0x0284970C LDR X9, [X8 + 0x218]
	0x02849710 LDR X1, [X8 + 0x220]
	0x02849714 BLR X9
	0x02849718 LDR X8, [X21 + 0x20]
	0x0284971C MOV V9.16B, V0.16B
	0x02849720 MOV V10.16B, V1.16B
	0x02849724 MOV V11.16B, V2.16B
	0x02849728 LDR X8, [X8 + 0xC0]
	0x0284972C MOV V12.16B, V3.16B
	0x02849730 LDR X0, [X8]
	0x02849734 LDRB W8, [X0 + 0x135]
	0x02849738 TBNZ X8, 0x0, 0x2849740
	0x0284973C BL 0x1C5C684
	0x02849740 CBZ X20, 0x2849808
	0x02849744 LDR X8, [X20]
	0x02849748 LDRB W9, [X0 + 0x130]
	0x0284974C LDRB W10, [X8 + 0x130]
	0x02849750 CMP W10, W9
	0x02849754 B.CC 0x2849808
	0x02849758 LDR X8, [X8 + 0xC8]
	0x0284975C ADD X9, X8, X9, 0x3, LSL
	0x02849760 LDUR X9, [X9 - 0x8]
	0x02849764 CMP X9, X0
	0x02849768 B.NE 0x2849808
	0x0284976C LDR X9, [X21 + 0x20]
	0x02849770 LDR X9, [X9 + 0xC0]
	0x02849774 LDR X0, [X9]
	0x02849778 LDRB W9, [X0 + 0x135]
	0x0284977C TBNZ X9, 0x0, 0x284978C
	0x02849780 BL 0x1C5C684
	0x02849784 LDR X8, [X20]
	0x02849788 LDR X8, [X8 + 0xC8]
	0x0284978C LDRB W9, [X0 + 0x130]
	0x02849790 ADD X8, X8, X9, 0x3, LSL
	0x02849794 LDUR X8, [X8 - 0x8]
	0x02849798 CMP X8, X0
	0x0284979C CSEL X0, X20, X31, EQ
	0x028497A0 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, [X8+88]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+88]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+184]
	043 Move [X8+16], X20
	044 Move X0, [X19+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X0, [X8+88]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {63}
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Call 0x1C5D684
	062 Return 
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Return 

Method: System.Void RegisterCamera(T additionalCamera)

Disassembly:
	0x028497A4 LDR X9, [X8 + 0x218]
	0x028497A8 LDR X1, [X8 + 0x220]
	0x028497AC BLR X9
	0x028497B0 LDR X8, [X19]
	0x028497B4 MOV V4.16B, V0.16B
	0x028497B8 MOV V5.16B, V1.16B
	0x028497BC MOV V6.16B, V2.16B
	0x028497C0 LDR X9, [X8 + 0x238]
	0x028497C4 LDR X1, [X8 + 0x240]
	0x028497C8 MOV V7.16B, V3.16B
	0x028497CC MOV X0, X19
	0x028497D0 MOV V0.16B, V9.16B
	0x028497D4 MOV V1.16B, V10.16B
	0x028497D8 MOV V2.16B, V11.16B
	0x028497DC MOV V3.16B, V12.16B
	0x028497E0 STR S8, [X31]
	0x028497E4 BLR X9
	0x028497E8 LDP X20, X19, [X31 + 0x50]
	0x028497EC LDP X22, X21, [X31 + 0x40]
	0x028497F0 LDR X30, [X31 + 0x38]
	0x028497F4 LDP D9, D8, [X31 + 0x28]
	0x028497F8 LDP D11, D10, [X31 + 0x18]
	0x028497FC LDR V12, [X31 + 0x10]
	0x02849800 ADD X31, X31, 0x60
	0x02849804 RET
	0x02849808 BL 0x1C16F20
	0x0284980C STR X30, [X31 - 0x10]!
	0x02849810 LDR V16, [X31 + 0x10]
	0x02849814 FCMP S16, 0x0
	0x02849818 FCSEL S3, S7, S3, GT
	0x0284981C FCSEL S2, S6, S2, GT
	0x02849820 FCSEL S1, S5, S1, GT
	0x02849824 FCSEL S0, S4, S0, GT
	0x02849828 CBZ X0, 0x284983C
	0x0284982C STP S0, S1, [X0 + 0x14]
	0x02849830 STP S2, S3, [X0 + 0x1C]
	0x02849834 LDR X30, [X31], #0x10
	0x02849838 RET
	0x0284983C BL 0x1C16F20
	0x02849840 STP D11, D10, [X31 - 0x30]!
	0x02849844 STP D9, D8, [X31 + 0x10]
	0x02849848 STP X30, X19, [X31 + 0x20]
	0x0284984C CBZ X0, 0x284988C
	0x02849850 LDR X8, [X0]
	0x02849854 MOVZ W1, 0x1
	0x02849858 MOV V8.16B, V3.16B
	0x0284985C MOV V9.16B, V2.16B
	0x02849860 LDP X9, X2, [X8 + 0x198]
	0x02849864 MOV V10.16B, V1.16B
	0x02849868 MOV V11.16B, V0.16B
	0x0284986C MOV X19, X0
	0x02849870 BLR X9
	0x02849874 STP S11, S10, [X19 + 0x14]
	0x02849878 STP S9, S8, [X19 + 0x1C]
	0x0284987C LDP X30, X19, [X31 + 0x20]
	0x02849880 LDP D9, D8, [X31 + 0x10]
	0x02849884 LDP D11, D10, [X31], #0x30
	0x02849888 RET
	0x0284988C BL 0x1C16F20
	0x02849890 STP X30, X21, [X31 - 0x20]!
	0x02849894 STP X20, X19, [X31 + 0x10]
	0x02849898 LDR X8, [X2 + 0x20]
	0x0284989C MOV X19, X1
	0x028498A0 MOV X21, X2
	0x028498A4 MOV X20, X0
	0x028498A8 LDR X8, [X8 + 0xC0]
	0x028498AC LDR X1, [X8]
	0x028498B0 LDRB W8, [X1 + 0x135]
	0x028498B4 TBNZ X8, 0x0, 0x28498C4
	0x028498B8 MOV X0, X1
	0x028498BC BL 0x1C5C684
	0x028498C0 MOV X1, X0
	0x028498C4 CBZ X19, 0x2849954
	0x028498C8 LDR X8, [X19]
	0x028498CC LDRB W9, [X1 + 0x130]
	0x028498D0 LDRB W10, [X8 + 0x130]
	0x028498D4 CMP W10, W9
	0x028498D8 B.CC 0x284994C
	0x028498DC LDR X8, [X8 + 0xC8]
	0x028498E0 ADD X8, X8, X9, 0x3, LSL
	0x028498E4 LDUR X8, [X8 - 0x8]
	0x028498E8 CMP X8, X1
	0x028498EC B.NE 0x284994C
	0x028498F0 LDR X8, [X21 + 0x20]
	0x028498F4 LDR X8, [X8 + 0xC0]
	0x028498F8 LDR X1, [X8]
	0x028498FC LDRB W8, [X1 + 0x135]
	0x02849900 TBNZ X8, 0x0, 0x2849910
	0x02849904 MOV X0, X1
	0x02849908 BL 0x1C5C684
	0x0284990C MOV X1, X0
	0x02849910 LDR X8, [X19]
	0x02849914 LDRB W9, [X1 + 0x130]
	0x02849918 LDRB W10, [X8 + 0x130]
	0x0284991C CMP W10, W9
	0x02849920 B.CC 0x284994C
	0x02849924 LDR X8, [X8 + 0xC8]
	0x02849928 ADD X8, X8, X9, 0x3, LSL
	0x0284992C LDUR X8, [X8 - 0x8]
	0x02849930 CMP X8, X1
	0x02849934 B.NE 0x284994C
	0x02849938 LDUR V0, [X19 + 0x14]
	0x0284993C STUR V0, [X20 + 0x14]
	0x02849940 LDP X20, X19, [X31 + 0x10]
	0x02849944 LDP X30, X21, [X31], #0x20
	0x02849948 RET
	0x0284994C MOV X0, X19
	0x02849950 BL 0x1C171E0
	0x02849954 BL 0x1C16F20
	0x02849958 SUB X31, X31, 0x50
	0x0284995C STP X30, X23, [X31 + 0x20]
	0x02849960 STP X22, X21, [X31 + 0x30]
	0x02849964 STP X20, X19, [X31 + 0x40]
	0x02849968 ADRP X21, 0x1B91000
	0x0284996C LDRB W8, [X21 + 0xACF]
	0x02849970 MOV X20, X1
	0x02849974 MOV X19, X0
	0x02849978 TBNZ X8, 0x0, 0x2849990
	0x0284997C ADRP X0, 0x18AA000
	0x02849980 LDR X0, [X0 + 0xB58]
	0x02849984 BL 0x1C16CF4
	0x02849988 MOVZ W8, 0x1
	0x0284998C STRB W8, [X21 + 0xACF]
	0x02849990 CBZ X19, 0x2849AC4
	0x02849994 LDR X8, [X19]
	0x02849998 ADRP X21, 0x18AA000
	0x0284999C MOV X0, X19
	0x028499A0 LDP X9, X1, [X8 + 0x188]
	0x028499A4 LDR X21, [X21 + 0xB58]
	0x028499A8 BLR X9
	0x028499AC LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+88]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X21, [X8+232]
	037 Move X0, [X21+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+88]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X21+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, [X8+88]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+184]
	072 Move X21, [X8+16]
	073 Compare X21, 0
	074 JumpIfEqual {195}
	075 Move X0, [X20+32]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move X8, [X0+192]
	083 Move X0, X21
	084 Move X1, X19
	085 Move X2, [X8+240]
	086 Call List`1<Object>.Contains, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {179}
	091 Move X0, [X20+32]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, [X0+192]
	099 Move X0, [X8+88]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, [X20+32]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move X8, [X0+192]
	118 Move X21, [X8+232]
	119 Move X0, [X21+32]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {126}
	125 Call 0x1C5D684
	126 Move X8, [X0+192]
	127 Move X0, [X8+88]
	128 Move W8, [X0+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {134}
	133 Call 0x1C5D684
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, [X21+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Move X0, [X8+88]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move X8, [X0+184]
	154 Move X21, [X8+16]
	155 Compare X21, 0
	156 JumpIfEqual {195}
	157 Move X0, [X20+32]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move X9, [X0+192]
	165 Move W10, [X21+28]
	166 Move X8, [X21+16]
	167 Move X9, [X9+248]
	168 Add W10, W10, 1
	169 Move [X21+28], W10
	170 Compare X8, 0
	171 JumpIfEqual {195}
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Move W11, [X8+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add W9, W10, 1
	176 Add X8, X8, X10
	177 Move [X21+24], W9
	178 Move [X8+32], X19
	179 Move X20, [X31+16]
	180 Move X19, [X31+24]
	181 Move X30, [X31+32]
	182 Move X21, [X31+40]
	183 Return 
	184 Move X8, [X9+32]
	185 Move X1, X19
	186 Move X20, [X31+16]
	187 Move X19, [X31+24]
	188 Move X0, X21
	189 Move X8, [X8+192]
	190 Move X2, [X8+112]
	191 Move X30, [X31+32]
	192 Move X21, [X31+40]
	193 Call List`1<Object>.AddWithResize, X0, X1
	194 Return 
	195 Call 0x1C17F20

Method: System.Void UnRegisterCamera(T additionalCamera)

Disassembly:
	0x028499B0 AND W9, W0, 0x1
	0x028499B4 STRB W9, [X31 + 0xC]
	0x028499B8 LDR W9, [X8 + 0xE0]
	0x028499BC CBNZ W9, 0x28499C8
	0x028499C0 MOV X0, X8
	0x028499C4 BL 0x1C16DFC
	0x028499C8 ADD X0, X31, 0xC
	0x028499CC MOV X1, X31
	0x028499D0 BL 0x33176B4
	0x028499D4 LDR X8, [X20 + 0x20]
	0x028499D8 MOV W20, W0
	0x028499DC LDR X8, [X8 + 0xC0]
	0x028499E0 LDR X8, [X8 + 0x28]
	0x028499E4 MOV X0, X8
	0x028499E8 BL 0x2118CEC
	0x028499EC LDR X8, [X19]
	0x028499F0 MOV X21, X0
	0x028499F4 MOV X0, X19
	0x028499F8 LDR X9, [X8 + 0x218]
	0x028499FC LDR X1, [X8 + 0x220]
	0x02849A00 BLR X9
	0x02849A04 CBZ X21, 0x2849AC4
	0x02849A08 LDR X8, [X21]
	0x02849A0C FMOV S4, W31
	0x02849A10 FMOV S5, W31
	0x02849A14 FMOV S6, W31
	0x02849A18 LDP X9, X1, [X8 + 0x1B8]
	0x02849A1C FMOV S7, W31
	0x02849A20 MOV X0, X21
	0x02849A24 ADD W20, W20, 0x187
	0x02849A28 BLR X9
	0x02849A2C TBNZ X0, 0x0, 0x2849AAC
	0x02849A30 LDR X8, [X19]
	0x02849A34 MOV X0, X19
	0x02849A38 LDR X9, [X8 + 0x218]
	0x02849A3C LDR X1, [X8 + 0x220]
	0x02849A40 BLR X9
	0x02849A44 ADD X8, X31, 0x10
	0x02849A48 ADD X0, X31, 0x10
	0x02849A4C MOV X1, X31
	0x02849A50 STP S0, S1, [X31 + 0x10]
	0x02849A54 ORR X19, X8, 0x7
	0x02849A58 ADD X21, X8, 0x8
	0x02849A5C ADD X22, X8, 0xC
	0x02849A60 STP S2, S3, [X31 + 0x18]
	0x02849A64 BL 0x338FE0C
	0x02849A68 MOV W23, W0
	0x02849A6C MOV X0, X19
	0x02849A70 MOV X1, X31
	0x02849A74 BL 0x338FE0C
	0x02849A78 MOV W19, W0
	0x02849A7C MOV X0, X21
	0x02849A80 MOV X1, X31
	0x02849A84 BL 0x338FE0C
	0x02849A88 MOV W21, W0
	0x02849A8C MOV X0, X22
	0x02849A90 MOV X1, X31
	0x02849A94 BL 0x338FE0C
	0x02849A98 EOR W8, W23, W19, 0x2
	0x02849A9C EOR W8, W8, W21, 0x2
	0x02849AA0 EOR W8, W8, W0, 0x1
	0x02849AA4 MOVZ W9, 0x17
	0x02849AA8 MADD W20, W20, W9, W8
	0x02849AAC MOV W0, W20
	0x02849AB0 LDP X20, X19, [X31 + 0x40]
	0x02849AB4 LDP X22, X21, [X31 + 0x30]
	0x02849AB8 LDP X30, X23, [X31 + 0x20]
	0x02849ABC ADD X31, X31, 0x50
	0x02849AC0 RET
	0x02849AC4 BL 0x1C16F20
	0x02849AC8 SUB X31, X31, 0x50
	0x02849ACC STP X30, X23, [X31 + 0x20]
	0x02849AD0 STP X22, X21, [X31 + 0x30]
	0x02849AD4 STP X20, X19, [X31 + 0x40]
	0x02849AD8 ADRP X23, 0x1B91000
	0x02849ADC ADRP X22, 0x18AA000
	0x02849AE0 ADRP X21, 0x18B0000
	0x02849AE4 LDRB W8, [X23 + 0xAD0]
	0x02849AE8 LDR X22, [X22 + 0xB58]
	0x02849AEC LDR X21, [X21 + 0xC98]
	0x02849AF0 MOV X20, X1
	0x02849AF4 MOV X19, X0
	0x02849AF8 TBNZ X8, 0x0, 0x2849B1C
	0x02849AFC ADRP X0, 0x18AA000
	0x02849B00 LDR X0, [X0 + 0xB58]
	0x02849B04 BL 0x1C16CF4
	0x02849B08 ADRP X0, 0x18B0000
	0x02849B0C LDR X0, [X0 + 0xC98]
	0x02849B10 BL 0x1C16CF4
	0x02849B14 MOVZ W8, 0x1
	0x02849B18 STRB W8, [X23 + 0xAD0]
	0x02849B1C LDR X8, [X19]
	0x02849B20 MOV X0, X19
	0x02849B24 LDR X9, [X8 + 0x218]
	0x02849B28 LDR X1, [X8 + 0x220]
	0x02849B2C BLR X9
	0x02849B30 STP S0, S1, [X31 + 0x10]
	0x02849B34 STP S2, S3, [X31 + 0x18]
	0x02849B38 LDR X8, [X20 + 0x20]
	0x02849B3C ADD X1, X31, 0x10
	0x02849B40 LDR X8, [X8 + 0xC0]
	0x02849B44 LDR X0, [X8 + 0x8]
	0x02849B48 BL 0x1C16E04
	0x02849B4C LDR X8, [X19]
	0x02849B50 MOV X20, X0
	0x02849B54 MOV X0, X19
	0x02849B58 LDP X9, X1, [X8 + 0x188]
	0x02849B5C BLR X9
	0x02849B60 LDR X8, [X22]
	0x02849B64 AND W9, W0, 0x1
	0x02849B68 ADD X1, X31, 0xC
	0x02849B6C STRB W9, [X31 + 0xC]
	0x02849B70 MOV X0, X8
	0x02849B74 BL 0x1C16E04
	0x02849B78 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+88]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X21, [X8+232]
	037 Move X0, [X21+32]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+88]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X21+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, [X8+88]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X8, [X0+184]
	072 Move X21, [X8+16]
	073 Compare X21, 0
	074 JumpIfEqual {179}
	075 Move X0, [X20+32]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Move X8, [X0+192]
	083 Move X0, X21
	084 Move X1, X19
	085 Move X2, [X8+240]
	086 Call List`1<Object>.Contains, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {174}
	091 Move X0, [X20+32]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, [X0+192]
	099 Move X0, [X8+88]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, [X20+32]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move X8, [X0+192]
	118 Move X21, [X8+232]
	119 Move X0, [X21+32]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {126}
	125 Call 0x1C5D684
	126 Move X8, [X0+192]
	127 Move X0, [X8+88]
	128 Move W8, [X0+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {134}
	133 Call 0x1C5D684
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, [X21+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Move X0, [X8+88]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move X8, [X0+184]
	154 Move X21, [X8+16]
	155 Compare X21, 0
	156 JumpIfEqual {179}
	157 Move X0, [X20+32]
	158 Move W8, [X0+309]
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {164}
	163 Call 0x1C5D684
	164 Move X8, [X0+192]
	165 Move X1, X19
	166 Move X20, [X31+16]
	167 Move X19, [X31+24]
	168 Move X0, X21
	169 Move X2, [X8+256]
	170 Move X30, [X31+32]
	171 Move X21, [X31+40]
	172 Call List`1<Object>.Remove, X0, X1
	173 Return 
	174 Move X20, [X31+16]
	175 Move X19, [X31+24]
	176 Move X30, [X31+32]
	177 Move X21, [X31+40]
	178 Return 
	179 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02849B7C MOV X2, X0
	0x02849B80 MOV X1, X20
	0x02849B84 MOV X3, X31
	0x02849B88 MOV X0, X8
	0x02849B8C BL 0x3227BD4
	0x02849B90 LDP X20, X19, [X31 + 0x40]
	0x02849B94 LDP X22, X21, [X31 + 0x30]
	0x02849B98 LDP X30, X23, [X31 + 0x20]
	0x02849B9C ADD X31, X31, 0x50
	0x02849BA0 RET
	0x02849BA4 SUB X31, X31, 0x60
	0x02849BA8 STP D11, D10, [X31 + 0x20]
	0x02849BAC STP D9, D8, [X31 + 0x30]
	0x02849BB0 STR X30, [X31 + 0x40]
	0x02849BB4 STP X20, X19, [X31 + 0x50]
	0x02849BB8 STP X31, X31, [X31 + 0x10]
	0x02849BBC CBZ X0, 0x2849CEC
	0x02849BC0 LDR X8, [X0]
	0x02849BC4 MOV X19, X1
	0x02849BC8 MOV V8.16B, V3.16B
	0x02849BCC MOV V9.16B, V2.16B
	0x02849BD0 LDR X9, [X8 + 0x218]
	0x02849BD4 LDR X1, [X8 + 0x220]
	0x02849BD8 MOV V10.16B, V1.16B
	0x02849BDC MOV V11.16B, V0.16B
	0x02849BE0 MOV X20, X0
	0x02849BE4 BLR X9
	0x02849BE8 LDR X8, [X20]
	0x02849BEC MOV X0, X20
	0x02849BF0 LDR X9, [X8 + 0x218]
	0x02849BF4 LDR X1, [X8 + 0x220]
	0x02849BF8 BLR X9
	0x02849BFC STP S0, S1, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B92000
	007 Move X21, 0x18D6000
	008 Move X20, 0x18D6000
	009 Move W8, [X22+2762]
	010 Move X21, [X21+80]
	011 Move X20, [X20+88]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x18D6000
	018 Move X0, [X0+88]
	019 Call 0x1C17CF4
	020 Move X0, 0x18D6000
	021 Move X0, [X0+80]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2762], W8
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W8, TEMP
	028 Move [X19+32], W8
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, [X20]
	032 Move X20, X0
	033 Call List`1<Object>..ctor, X0
	034 Move [X19+48], X20
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+48]
	042 Call Object..ctor, X0
	043 Return 

Method: System.Void .cctor()

Disassembly:
	0x02849C00 STP S2, S3, [X31 + 0x18]
	0x02849C04 STP S11, S10, [X31]
	0x02849C08 STP S9, S8, [X31 + 0x8]
	0x02849C0C LDR X0, [X19 + 0x20]
	0x02849C10 LDRB W8, [X0 + 0x135]
	0x02849C14 TBNZ X8, 0x0, 0x2849C1C
	0x02849C18 BL 0x1C5C684
	0x02849C1C LDR X8, [X0 + 0xC0]
	0x02849C20 ADD X1, X31, 0x0
	0x02849C24 LDR X0, [X8 + 0x8]
	0x02849C28 BL 0x1C16E04
	0x02849C2C LDR X8, [X19 + 0x20]
	0x02849C30 MOV X19, X0
	0x02849C34 LDRB W9, [X8 + 0x135]
	0x02849C38 TBNZ X9, 0x0, 0x2849C44
	0x02849C3C MOV X0, X8
	0x02849C40 BL 0x1C5C684
	0x02849C44 ADRP X20, 0x1B90000
	0x02849C48 LDRB W8, [X20 + 0x81C]
	0x02849C4C CBZ W8, 0x2849C58
	0x02849C50 CBNZ X19, 0x2849C70
	0x02849C54 B 0x2849CE8
	0x02849C58 ADRP X0, 0x18D2000
	0x02849C5C LDR X0, [X0 + 0x5E0]
	0x02849C60 BL 0x1C16CF4
	0x02849C64 MOVZ W8, 0x1
	0x02849C68 STRB W8, [X20 + 0x81C]
	0x02849C6C CBZ X19, 0x2849CE8
	0x02849C70 ADRP X8, 0x18D2000
	0x02849C74 LDR X8, [X8 + 0x5E0]
	0x02849C78 LDR X9, [X19]
	0x02849C7C LDR X8, [X8]
	0x02849C80 CMP X9, X8
	0x02849C84 B.NE 0x2849CE8
	0x02849C88 MOV X0, X19
	0x02849C8C BL 0x1C16E08
	0x02849C90 LDP S0, S10, [X0]
	0x02849C94 LDP S9, S8, [X0 + 0x8]
	0x02849C98 ADD X0, X31, 0x10
	0x02849C9C MOV X1, X31
	0x02849CA0 BL 0x338FDC0
	0x02849CA4 TBZ X0, 0x0, 0x2849CE8
	0x02849CA8 ADD X19, X31, 0x10
	0x02849CAC ORR X0, X19, 0x7
	0x02849CB0 MOV V0.16B, V10.16B
	0x02849CB4 MOV X1, X31
	0x02849CB8 BL 0x338FDC0
	0x02849CBC TBZ X0, 0x0, 0x2849CE8
	0x02849CC0 ADD X0, X19, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+224]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, [X8+264]
	034 Call List`1<Object>..ctor, X0
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+88]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move [X8+16], X20
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+88]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {71}
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Call 0x1C5D684
	070 Return 
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Return 

