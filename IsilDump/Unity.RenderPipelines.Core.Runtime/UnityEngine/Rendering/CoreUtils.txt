Type: UnityEngine.Rendering.CoreUtils

Method: UnityEngine.Cubemap get_blackCubeTexture()

Disassembly:
	0x039E6CA0 MOV W19, W3
	0x039E6CA4 MOV X22, X2
	0x039E6CA8 MOV X20, X1
	0x039E6CAC MOV X21, X0
	0x039E6CB0 TBNZ X8, 0x0, 0x39E6CC8
	0x039E6CB4 ADRP X0, 0x735000
	0x039E6CB8 LDR X0, [X0 + 0x8F8]
	0x039E6CBC BL 0x1C16CF4
	0x039E6CC0 MOVZ W8, 0x1
	0x039E6CC4 STRB W8, [X24 + 0xE03]
	0x039E6CC8 LDR X8, [X22 + 0x20]
	0x039E6CCC LDP V1, V0, [X22]
	0x039E6CD0 LDR X0, [X23]
	0x039E6CD4 STR X8, [X31 + 0x50]
	0x039E6CD8 STP V1, V0, [X31 + 0x30]
	0x039E6CDC LDR W8, [X0 + 0xE0]
	0x039E6CE0 CBNZ W8, 0x39E6CE8
	0x039E6CE4 BL 0x1C16DFC
	0x039E6CE8 LDP V0, V1, [X31 + 0x30]
	0x039E6CEC LDR X8, [X31 + 0x50]
	0x039E6CF0 ADD X2, X31, 0x0
	0x039E6CF4 FMOV S2, W31
	0x039E6CF8 STP V0, V1, [X31]
	0x039E6CFC FMOV S0, W31
	0x039E6D00 FMOV S1, W31
	0x039E6D04 FMOV S3, W31
	0x039E6D08 MOV X0, X21
	0x039E6D0C MOV X1, X20
	0x039E6D10 MOV W3, W19
	0x039E6D14 STR X8, [X31 + 0x20]
	0x039E6D18 BL 0x39E6B8C
	0x039E6D1C LDP X20, X19, [X31 + 0x90]
	0x039E6D20 LDP X22, X21, [X31 + 0x80]
	0x039E6D24 LDP X24, X23, [X31 + 0x70]
	0x039E6D28 LDR X30, [X31 + 0x60]
	0x039E6D2C ADD X31, X31, 0xA0
	0x039E6D30 RET
	0x039E6D34 SUB X31, X31, 0xC0
	0x039E6D38 STP D11, D10, [X31 + 0x60]
	0x039E6D3C STP D9, D8, [X31 + 0x70]
	0x039E6D40 STR X30, [X31 + 0x80]
	0x039E6D44 STP X24, X23, [X31 + 0x90]
	0x039E6D48 STP X22, X21, [X31 + 0xA0]
	0x039E6D4C STP X20, X19, [X31 + 0xB0]
	0x039E6D50 ADRP X24, 0x9FB000
	0x039E6D54 LDRB W8, [X24 + 0xE05]
	0x039E6D58 MOV V8.16B, V3.16B
	0x039E6D5C MOV V9.16B, V2.16B
	0x039E6D60 MOV V10.16B, V1.16B
	0x039E6D64 MOV V11.16B, V0.16B
	0x039E6D68 MOV W19, W4
	0x039E6D6C MOV W21, W3
	0x039E6D70 MOV W22, W2
	0x039E6D74 MOV X23, X1
	0x039E6D78 MOV X20, X0
	0x039E6D7C TBNZ X8, 0x0, 0x39E6D94
	0x039E6D80 ADRP X0, 0x735000
	0x039E6D84 LDR X0, [X0 + 0x8F8]
	0x039E6D88 BL 0x1C16CF4
	0x039E6D8C MOVZ W8, 0x1
	0x039E6D90 STRB W8, [X24 + 0xE05]
	0x039E6D94 LDR X8, [X23 + 0x20]
	0x039E6D98 LDP V1, V0, [X23]
	0x039E6D9C STR X8, [X31 + 0x50]
	0x039E6DA0 STP V1, V0, [X31 + 0x30]
	0x039E6DA4 CBZ X20, 0x39E6E24
	0x039E6DA8 LDP V0, V1, [X31 + 0x30]
	0x039E6DAC LDR X8, [X31 + 0x50]
	0x039E6DB0 ADRP X23, 0x735000
	0x039E6DB4 LDR X23, [X23 + 0x8F8]
	0x039E6DB8 ADD X1, X31, 0x0
	0x039E6DBC MOV X0, X20
	0x039E6DC0 MOV W2, W22
	0x039E6DC4 MOV W3, W21
	0x039E6DC8 MOV X4, X31
	0x039E6DCC STP V0, V1, [X31]
	0x039E6DD0 STR X8, [X31 + 0x20]
	0x039E6DD4 BL 0x3C4DAAC
	0x039E6DD8 LDR X0, [X23]
	0x039E6DDC LDR W8, [X0 + 0xE0]
	0x039E6DE0 CBNZ W8, 0x39E6DE8
	0x039E6DE4 BL 0x1C16DFC
	0x039E6DE8 MOV X0, X20
	0x039E6DEC MOV W1, W19
	0x039E6DF0 MOV V0.16B, V11.16B
	0x039E6DF4 MOV V1.16B, V10.16B
	0x039E6DF8 MOV V2.16B, V9.16B
	0x039E6DFC MOV V3.16B, V8.16B
	0x039E6E00 BL 0x39E6550
	0x039E6E04 LDP X20, X19, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x9FC000
	006 Move X21, 0x736000
	007 Move W8, [X19+3575]
	008 Move X21, [X21+2296]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x736000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x76E000
	017 Move X0, [X0+1144]
	018 Call 0x1C17CF4
	019 Move X0, 0x70E000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3575], W8
	024 Move X0, [X21]
	025 Move X19, 0x70E000
	026 Move W8, [X0+224]
	027 Move X19, [X19+1432]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X19]
	033 Move X9, [X0+184]
	034 Move W10, [X8+224]
	035 Move X19, [X9+16]
	036 Compare W10, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {92}
	048 Move X8, 0x76E000
	049 Move X8, [X8+1144]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move W1, 1
	053 Move W2, 4
	054 Move W3, W31
	055 Move X4, X31
	056 Move X20, X0
	057 Call Cubemap..ctor, X0, X1, X2, X3
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X21]
	064 Move X8, [X0+184]
	065 Move W19, W31
	066 Move [X8+16], X20
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X8+16]
	075 Compare X0, 0
	076 JumpIfEqual {105}
	077 Move S0, W31
	078 Move S1, W31
	079 Move S2, W31
	080 Move S3, 1
	081 Move W1, W19
	082 Move W2, W31
	083 Move W3, W31
	084 Move X4, X31
	085 Call Cubemap.SetPixel, X0, X1, X2, X3, X4
	086 Move X0, [X21]
	087 Add W19, W19, 1
	088 Compare X0, 0
	089 JumpIfEqual {105}
	090 Move X1, X31
	091 Call Cubemap.Apply, X0
	092 Move X0, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X0, [X8+16]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return X0
	105 Call 0x1C17F20

Method: UnityEngine.Cubemap get_magentaCubeTexture()

Disassembly:
	0x039E6E08 LDP X22, X21, [X31 + 0xA0]
	0x039E6E0C LDP X24, X23, [X31 + 0x90]
	0x039E6E10 LDR X30, [X31 + 0x80]
	0x039E6E14 LDP D9, D8, [X31 + 0x70]
	0x039E6E18 LDP D11, D10, [X31 + 0x60]
	0x039E6E1C ADD X31, X31, 0xC0
	0x039E6E20 RET
	0x039E6E24 BL 0x1C16F20
	0x039E6E28 SUB X31, X31, 0xE0
	0x039E6E2C STP X30, X27, [X31 + 0x90]
	0x039E6E30 STP X26, X25, [X31 + 0xA0]
	0x039E6E34 STP X24, X23, [X31 + 0xB0]
	0x039E6E38 STP X22, X21, [X31 + 0xC0]
	0x039E6E3C STP X20, X19, [X31 + 0xD0]
	0x039E6E40 ADRP X26, 0x9FB000
	0x039E6E44 ADRP X27, 0x735000
	0x039E6E48 LDRB W8, [X26 + 0xE06]
	0x039E6E4C LDR X27, [X27 + 0x8F8]
	0x039E6E50 MOV W25, W6
	0x039E6E54 MOV W23, W5
	0x039E6E58 MOV W24, W4
	0x039E6E5C MOV W19, W3
	0x039E6E60 MOV W20, W2
	0x039E6E64 MOV X22, X1
	0x039E6E68 MOV X21, X0
	0x039E6E6C TBNZ X8, 0x0, 0x39E6E84
	0x039E6E70 ADRP X0, 0x735000
	0x039E6E74 LDR X0, [X0 + 0x8F8]
	0x039E6E78 BL 0x1C16CF4
	0x039E6E7C MOVZ W8, 0x1
	0x039E6E80 STRB W8, [X26 + 0xE06]
	0x039E6E84 LDR X0, [X27]
	0x039E6E88 LDR W8, [X0 + 0xE0]
	0x039E6E8C CBNZ W8, 0x39E6E94
	0x039E6E90 BL 0x1C16DFC
	0x039E6E94 LDR X9, [X22 + 0x20]
	0x039E6E98 LDP V0, V1, [X22]
	0x039E6E9C ADDS W31, W25, 0x1
	0x039E6EA0 MOVN W8, 0x0
	0x039E6EA4 CCMP W23, W8, 0x4, EQ
	0x039E6EA8 CSEL W4, W25, W31, EQ
	0x039E6EAC ADD X1, X31, 0x60
	0x039E6EB0 MOV X0, X22
	0x039E6EB4 MOV W2, W24
	0x039E6EB8 MOV W3, W23
	0x039E6EBC MOV X5, X31
	0x039E6EC0 STR X9, [X31 + 0x80]
	0x039E6EC4 STP V0, V1, [X31 + 0x60]
	0x039E6EC8 BL 0x3C4B098
	0x039E6ECC LDR X8, [X22 + 0x20]
	0x039E6ED0 LDP V1, V0, [X22]
	0x039E6ED4 STR X8, [X31 + 0x50]
	0x039E6ED8 STP V1, V0, [X31 + 0x30]
	0x039E6EDC CBZ X21, 0x39E6F24
	0x039E6EE0 LDP V0, V1, [X31 + 0x30]
	0x039E6EE4 LDR X8, [X31 + 0x50]
	0x039E6EE8 ADD X1, X31, 0x0
	0x039E6EEC MOV X0, X21
	0x039E6EF0 MOV W2, W20
	0x039E6EF4 MOV W3, W19
	0x039E6EF8 MOV X4, X31
	0x039E6EFC STP V0, V1, [X31]
	0x039E6F00 STR X8, [X31 + 0x20]
	0x039E6F04 BL 0x3C4DAAC
	0x039E6F08 LDP X20, X19, [X31 + 0xD0]
	0x039E6F0C LDP X22, X21, [X31 + 0xC0]
	0x039E6F10 LDP X24, X23, [X31 + 0xB0]
	0x039E6F14 LDP X26, X25, [X31 + 0xA0]
	0x039E6F18 LDP X30, X27, [X31 + 0x90]
	0x039E6F1C ADD X31, X31, 0xE0
	0x039E6F20 RET
	0x039E6F24 BL 0x1C16F20
	0x039E6F28 SUB X31, X31, 0xE0
	0x039E6F2C STP D11, D10, [X31 + 0x60]
	0x039E6F30 STP D9, D8, [X31 + 0x70]
	0x039E6F34 STR X30, [X31 + 0x80]
	0x039E6F38 STP X28, X27, [X31 + 0x90]
	0x039E6F3C STP X26, X25, [X31 + 0xA0]
	0x039E6F40 STP X24, X23, [X31 + 0xB0]
	0x039E6F44 STP X22, X21, [X31 + 0xC0]
	0x039E6F48 STP X20, X19, [X31 + 0xD0]
	0x039E6F4C ADRP X28, 0x9FB000
	0x039E6F50 ADRP X27, 0x735000
	0x039E6F54 LDRB W8, [X28 + 0xE07]
	0x039E6F58 LDR X27, [X27 + 0x8F8]
	0x039E6F5C MOV W26, W7
	0x039E6F60 MOV W23, W6
	0x039E6F64 MOV W25, W5
	0x039E6F68 MOV V8.16B, V3.16B
	0x039E6F6C MOV V9.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x9FC000
	006 Move X21, 0x736000
	007 Move W8, [X19+3576]
	008 Move X21, [X21+2296]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x736000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x76E000
	017 Move X0, [X0+1144]
	018 Call 0x1C17CF4
	019 Move X0, 0x70E000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3576], W8
	024 Move X0, [X21]
	025 Move X19, 0x70E000
	026 Move W8, [X0+224]
	027 Move X19, [X19+1432]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X19]
	033 Move X9, [X0+184]
	034 Move W10, [X8+224]
	035 Move X19, [X9+24]
	036 Compare W10, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {92}
	048 Move X8, 0x76E000
	049 Move X8, [X8+1144]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move W1, 1
	053 Move W2, 4
	054 Move W3, W31
	055 Move X4, X31
	056 Move X20, X0
	057 Call Cubemap..ctor, X0, X1, X2, X3
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X21]
	064 Move X8, [X0+184]
	065 Move W19, W31
	066 Move [X8+24], X20
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X8+24]
	075 Compare X0, 0
	076 JumpIfEqual {105}
	077 Move S0, 1
	078 Move S1, W31
	079 Move S2, 1
	080 Move S3, 1
	081 Move W1, W19
	082 Move W2, W31
	083 Move W3, W31
	084 Move X4, X31
	085 Call Cubemap.SetPixel, X0, X1, X2, X3, X4
	086 Move X0, [X21]
	087 Add W19, W19, 1
	088 Compare X0, 0
	089 JumpIfEqual {105}
	090 Move X1, X31
	091 Call Cubemap.Apply, X0
	092 Move X0, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X0, [X8+24]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return X0
	105 Call 0x1C17F20

Method: UnityEngine.CubemapArray get_magentaCubeTextureArray()

Disassembly:
	0x039E6F70 MOV V10.16B, V1.16B
	0x039E6F74 MOV V11.16B, V0.16B
	0x039E6F78 MOV W19, W4
	0x039E6F7C MOV W20, W3
	0x039E6F80 MOV W21, W2
	0x039E6F84 MOV X24, X1
	0x039E6F88 MOV X22, X0
	0x039E6F8C TBNZ X8, 0x0, 0x39E6FA4
	0x039E6F90 ADRP X0, 0x735000
	0x039E6F94 LDR X0, [X0 + 0x8F8]
	0x039E6F98 BL 0x1C16CF4
	0x039E6F9C MOVZ W8, 0x1
	0x039E6FA0 STRB W8, [X28 + 0xE07]
	0x039E6FA4 LDR X0, [X27]
	0x039E6FA8 LDR W8, [X0 + 0xE0]
	0x039E6FAC CBNZ W8, 0x39E6FB4
	0x039E6FB0 BL 0x1C16DFC
	0x039E6FB4 LDR X9, [X24 + 0x20]
	0x039E6FB8 LDP V0, V1, [X24]
	0x039E6FBC ADDS W31, W26, 0x1
	0x039E6FC0 MOVN W8, 0x0
	0x039E6FC4 CCMP W23, W8, 0x4, EQ
	0x039E6FC8 CSEL W4, W26, W31, EQ
	0x039E6FCC ADD X1, X31, 0x30
	0x039E6FD0 MOV X0, X24
	0x039E6FD4 MOV W2, W25
	0x039E6FD8 MOV W3, W23
	0x039E6FDC MOV X5, X31
	0x039E6FE0 STR X9, [X31 + 0x50]
	0x039E6FE4 STP V0, V1, [X31 + 0x30]
	0x039E6FE8 BL 0x3C4B098
	0x039E6FEC LDP V1, V0, [X24]
	0x039E6FF0 LDR X8, [X24 + 0x20]
	0x039E6FF4 ADD X1, X31, 0x0
	0x039E6FF8 MOV X0, X22
	0x039E6FFC STP V1, V0, [X31]
	0x039E7000 MOV W2, W21
	0x039E7004 MOV W3, W20
	0x039E7008 MOV W4, W19
	0x039E700C MOV V0.16B, V11.16B
	0x039E7010 MOV V1.16B, V10.16B
	0x039E7014 MOV V2.16B, V9.16B
	0x039E7018 MOV V3.16B, V8.16B
	0x039E701C STR X8, [X31 + 0x20]
	0x039E7020 BL 0x39E6D34
	0x039E7024 LDP X20, X19, [X31 + 0xD0]
	0x039E7028 LDP X22, X21, [X31 + 0xC0]
	0x039E702C LDP X24, X23, [X31 + 0xB0]
	0x039E7030 LDP X26, X25, [X31 + 0xA0]
	0x039E7034 LDP X28, X27, [X31 + 0x90]
	0x039E7038 LDR X30, [X31 + 0x80]
	0x039E703C LDP D9, D8, [X31 + 0x70]
	0x039E7040 LDP D11, D10, [X31 + 0x60]
	0x039E7044 ADD X31, X31, 0xE0
	0x039E7048 RET
	0x039E704C SUB X31, X31, 0xA0
	0x039E7050 STP X30, X25, [X31 + 0x60]
	0x039E7054 STP X24, X23, [X31 + 0x70]
	0x039E7058 STP X22, X21, [X31 + 0x80]
	0x039E705C STP X20, X19, [X31 + 0x90]
	0x039E7060 ADRP X25, 0x9FA000
	0x039E7064 ADRP X24, 0x734000
	0x039E7068 LDRB W8, [X25 + 0xE08]
	0x039E706C LDR X24, [X24 + 0x8F8]
	0x039E7070 MOV W19, W4
	0x039E7074 MOV W20, W3
	0x039E7078 MOV W21, W2
	0x039E707C MOV X23, X1
	0x039E7080 MOV X22, X0
	0x039E7084 TBNZ X8, 0x0, 0x39E709C
	0x039E7088 ADRP X0, 0x734000
	0x039E708C LDR X0, [X0 + 0x8F8]
	0x039E7090 BL 0x1C16CF4
	0x039E7094 MOVZ W8, 0x1
	0x039E7098 STRB W8, [X25 + 0xE08]
	0x039E709C LDR X8, [X23 + 0x20]
	0x039E70A0 LDP V1, V0, [X23]
	0x039E70A4 LDR X0, [X24]
	0x039E70A8 STR X8, [X31 + 0x50]
	0x039E70AC STP V1, V0, [X31 + 0x30]
	0x039E70B0 LDR W8, [X0 + 0xE0]
	0x039E70B4 CBNZ W8, 0x39E70BC
	0x039E70B8 BL 0x1C16DFC
	0x039E70BC LDP V0, V1, [X31 + 0x30]
	0x039E70C0 LDR X8, [X31 + 0x50]
	0x039E70C4 ADD X1, X31, 0x0
	0x039E70C8 FMOV S2, W31
	0x039E70CC STP V0, V1, [X31]
	0x039E70D0 FMOV S0, W31
	0x039E70D4 FMOV S1, W31
	0x039E70D8 FMOV S3, W31
	0x039E70DC MOV X0, X22
	0x039E70E0 MOV W2, W21
	0x039E70E4 MOV W3, W20
	0x039E70E8 MOV W4, W19
	0x039E70EC STR X8, [X31 + 0x20]
	0x039E70F0 BL 0x39E6D34
	0x039E70F4 LDP X20, X19, [X31 + 0x90]
	0x039E70F8 LDP X22, X21, [X31 + 0x80]
	0x039E70FC LDP X24, X23, [X31 + 0x70]
	0x039E7100 LDP X30, X25, [X31 + 0x60]
	0x039E7104 ADD X31, X31, 0xA0
	0x039E7108 RET
	0x039E710C SUB X31, X31, 0x140
	0x039E7110 STP D11, D10, [X31 + 0xC0]
	0x039E7114 STP D9, D8, [X31 + 0xD0]
	0x039E7118 STR X29, [X31 + 0xE0]
	0x039E711C STP X30, X27, [X31 + 0xF0]
	0x039E7120 STP X26, X25, [X31 + 0x100]
	0x039E7124 STP X24, X23, [X31 + 0x110]
	0x039E7128 STP X22, X21, [X31 + 0x120]
	0x039E712C STP X20, X19, [X31 + 0x130]
	0x039E7130 ADRP X27, 0x9FA000
	0x039E7134 LDRB W8, [X27 + 0xE09]
	0x039E7138 MOV V8.16B, V3.16B

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0x9FC000
	008 Move X21, 0x736000
	009 Move W8, [X19+3577]
	010 Move X21, [X21+2296]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x713000
	016 Move X0, [X0+320]
	017 Call 0x1C17CF4
	018 Move X0, 0x736000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x76E000
	022 Move X0, [X0+1152]
	023 Call 0x1C17CF4
	024 Move X0, 0x70E000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3577], W8
	029 Move X0, [X21]
	030 Move X19, 0x70E000
	031 Move W8, [X0+224]
	032 Move X19, [X19+1432]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X19]
	038 Move X9, [X0+184]
	039 Move W10, [X8+224]
	040 Move X19, [X9+32]
	041 Compare W10, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {118}
	053 Move X8, 0x76D000
	054 Move X8, [X8+1152]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move W1, 1
	058 Move W2, 1
	059 Move W3, 52
	060 Move W4, W31
	061 Move X5, X31
	062 Move X20, X0
	063 Call CubemapArray..ctor, X0, X1, X2, X3, X4
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X21]
	070 Move X9, -49266688
	071 Move V0, [X9+96]
	072 Move X22, 0x712000
	073 Move X8, [X0+184]
	074 Move W19, W31
	075 Move [X31], V0
	076 Move X22, [X22+320]
	077 Move [X8+32], X20
	078 Move X0, [X22]
	079 Move W1, 1
	080 Call 0x1C17D6C
	081 Compare X0, 0
	082 JumpIfEqual {133}
	083 Move W8, [X0+24]
	084 Move X20, X0
	085 Compare W8, 0
	086 JumpIfEqual {134}
	087 Move V0, [X31]
	088 Move [X20+2], V0
	089 Move X0, [X21]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X21]
	095 Move X8, [X0+184]
	096 Move X0, [X8+32]
	097 Compare X0, 0
	098 JumpIfEqual {133}
	099 Move X1, X20
	100 Move W2, W19
	101 Move W3, W31
	102 Move X4, X31
	103 Call CubemapArray.SetPixels, X0, X1, X2, X3
	104 Add W19, W19, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X0, [X21]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X21]
	112 Move X8, [X0+184]
	113 Move X0, [X8+32]
	114 Compare X0, 0
	115 JumpIfEqual {133}
	116 Move X1, X31
	117 Call CubemapArray.Apply, X0
	118 Move X0, [X21]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X30, [X31+16]
	130 Move X0, [X8+32]
	131 Add X31, X31, 64
	132 Return X0
	133 Call 0x1C17F20
	134 Call 0x1C17F28

Method: UnityEngine.Cubemap get_whiteCubeTexture()

Disassembly:
	0x039E713C MOV V9.16B, V2.16B
	0x039E7140 MOV V10.16B, V1.16B
	0x039E7144 MOV V11.16B, V0.16B
	0x039E7148 MOV W19, W7
	0x039E714C MOV W21, W6
	0x039E7150 MOV W22, W5
	0x039E7154 MOV X25, X4
	0x039E7158 MOV W23, W3
	0x039E715C MOV W24, W2
	0x039E7160 MOV X26, X1
	0x039E7164 MOV X20, X0
	0x039E7168 TBNZ X8, 0x0, 0x39E7180
	0x039E716C ADRP X0, 0x734000
	0x039E7170 LDR X0, [X0 + 0x8F8]
	0x039E7174 BL 0x1C16CF4
	0x039E7178 MOVZ W8, 0x1
	0x039E717C STRB W8, [X27 + 0xE09]
	0x039E7180 LDR X8, [X26 + 0x20]
	0x039E7184 LDP V1, V0, [X26]
	0x039E7188 STR X8, [X31 + 0xB0]
	0x039E718C STP V1, V0, [X31 + 0x90]
	0x039E7190 LDR X8, [X25 + 0x20]
	0x039E7194 LDP V1, V0, [X25]
	0x039E7198 STR X8, [X31 + 0x80]
	0x039E719C STP V1, V0, [X31 + 0x60]
	0x039E71A0 CBZ X20, 0x39E7244
	0x039E71A4 ADRP X25, 0x734000
	0x039E71A8 LDR X25, [X25 + 0x8F8]
	0x039E71AC LDP V0, V1, [X31 + 0x90]
	0x039E71B0 LDR X8, [X31 + 0xB0]
	0x039E71B4 LDP V2, V3, [X31 + 0x60]
	0x039E71B8 LDR X9, [X31 + 0x80]
	0x039E71BC ADD X1, X31, 0x30
	0x039E71C0 ADD X4, X31, 0x0
	0x039E71C4 MOV X0, X20
	0x039E71C8 MOV W2, W24
	0x039E71CC MOV W3, W23
	0x039E71D0 MOV W5, W22
	0x039E71D4 MOV W6, W21
	0x039E71D8 MOV X7, X31
	0x039E71DC STP V0, V1, [X31 + 0x30]
	0x039E71E0 STR X8, [X31 + 0x50]
	0x039E71E4 STP V2, V3, [X31]
	0x039E71E8 STR X9, [X31 + 0x20]
	0x039E71EC BL 0x3C4E184
	0x039E71F0 LDR X0, [X25]
	0x039E71F4 LDR W8, [X0 + 0xE0]
	0x039E71F8 CBNZ W8, 0x39E7200
	0x039E71FC BL 0x1C16DFC
	0x039E7200 MOV X0, X20
	0x039E7204 MOV W1, W19
	0x039E7208 MOV V0.16B, V11.16B
	0x039E720C MOV V1.16B, V10.16B
	0x039E7210 MOV V2.16B, V9.16B
	0x039E7214 MOV V3.16B, V8.16B
	0x039E7218 BL 0x39E6550
	0x039E721C LDP X20, X19, [X31 + 0x130]
	0x039E7220 LDP X22, X21, [X31 + 0x120]
	0x039E7224 LDP X24, X23, [X31 + 0x110]
	0x039E7228 LDP X26, X25, [X31 + 0x100]
	0x039E722C LDP X30, X27, [X31 + 0xF0]
	0x039E7230 LDR X29, [X31 + 0xE0]
	0x039E7234 LDP D9, D8, [X31 + 0xD0]
	0x039E7238 LDP D11, D10, [X31 + 0xC0]
	0x039E723C ADD X31, X31, 0x140
	0x039E7240 RET
	0x039E7244 BL 0x1C16F20
	0x039E7248 SUB X31, X31, 0x190
	0x039E724C STP X29, X30, [X31 + 0x130]
	0x039E7250 STP X28, X27, [X31 + 0x140]
	0x039E7254 STP X26, X25, [X31 + 0x150]
	0x039E7258 STP X24, X23, [X31 + 0x160]
	0x039E725C STP X22, X21, [X31 + 0x170]
	0x039E7260 STP X20, X19, [X31 + 0x180]
	0x039E7264 ADRP X29, 0x9FA000
	0x039E7268 ADRP X28, 0x734000
	0x039E726C LDRB W8, [X29 + 0xE0A]
	0x039E7270 LDR W27, [X31 + 0x190]
	0x039E7274 LDR X28, [X28 + 0x8F8]
	0x039E7278 MOV W26, W7
	0x039E727C MOV W19, W6
	0x039E7280 MOV W20, W5
	0x039E7284 MOV X24, X4
	0x039E7288 MOV W21, W3
	0x039E728C MOV W22, W2
	0x039E7290 MOV X25, X1
	0x039E7294 MOV X23, X0
	0x039E7298 TBNZ X8, 0x0, 0x39E72B0
	0x039E729C ADRP X0, 0x734000
	0x039E72A0 LDR X0, [X0 + 0x8F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x9FB000
	006 Move X21, 0x735000
	007 Move W8, [X19+3578]
	008 Move X21, [X21+2296]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x735000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x76D000
	017 Move X0, [X0+1144]
	018 Call 0x1C17CF4
	019 Move X0, 0x70D000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3578], W8
	024 Move X0, [X21]
	025 Move X19, 0x70D000
	026 Move W8, [X0+224]
	027 Move X19, [X19+1432]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X19]
	033 Move X9, [X0+184]
	034 Move W10, [X8+224]
	035 Move X19, [X9+40]
	036 Compare W10, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {92}
	048 Move X8, 0x76D000
	049 Move X8, [X8+1144]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move W1, 1
	053 Move W2, 4
	054 Move W3, W31
	055 Move X4, X31
	056 Move X20, X0
	057 Call Cubemap..ctor, X0, X1, X2, X3
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X21]
	064 Move X8, [X0+184]
	065 Move W19, W31
	066 Move [X8+40], X20
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X21]
	072 Move X8, [X0+184]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X8+40]
	075 Compare X0, 0
	076 JumpIfEqual {105}
	077 Move S0, 1
	078 Move S1, 1
	079 Move S2, 1
	080 Move S3, 1
	081 Move W1, W19
	082 Move W2, W31
	083 Move W3, W31
	084 Move X4, X31
	085 Call Cubemap.SetPixel, X0, X1, X2, X3, X4
	086 Move X0, [X21]
	087 Add W19, W19, 1
	088 Compare X0, 0
	089 JumpIfEqual {105}
	090 Move X1, X31
	091 Call Cubemap.Apply, X0
	092 Move X0, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move X0, [X8+40]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return X0
	105 Call 0x1C17F20

Method: UnityEngine.RenderTexture get_emptyUAV()

Disassembly:
	0x039E72A4 BL 0x1C16CF4
	0x039E72A8 MOVZ W8, 0x1
	0x039E72AC STRB W8, [X29 + 0xE0A]
	0x039E72B0 LDR X0, [X28]
	0x039E72B4 LDR W28, [X31 + 0x198]
	0x039E72B8 LDR W8, [X0 + 0xE0]
	0x039E72BC CBNZ W8, 0x39E72C4
	0x039E72C0 BL 0x1C16DFC
	0x039E72C4 ADDS W31, W28, 0x1
	0x039E72C8 MOVN W8, 0x0
	0x039E72CC LDR X9, [X25 + 0x20]
	0x039E72D0 LDP V0, V1, [X25]
	0x039E72D4 CCMP W27, W8, 0x4, EQ
	0x039E72D8 CSEL W28, W28, W31, EQ
	0x039E72DC ADD X1, X31, 0x100
	0x039E72E0 MOV X0, X25
	0x039E72E4 MOV W2, W26
	0x039E72E8 MOV W3, W27
	0x039E72EC MOV W4, W28
	0x039E72F0 MOV X5, X31
	0x039E72F4 STR X9, [X31 + 0x120]
	0x039E72F8 STP V0, V1, [X31 + 0x100]
	0x039E72FC BL 0x3C4B098
	0x039E7300 LDR X8, [X24 + 0x20]
	0x039E7304 LDP V1, V0, [X24]
	0x039E7308 ADD X1, X31, 0xD0
	0x039E730C MOV X0, X24
	0x039E7310 MOV W2, W26
	0x039E7314 MOV W3, W27
	0x039E7318 MOV W4, W28
	0x039E731C MOV X5, X31
	0x039E7320 STR X8, [X31 + 0xF0]
	0x039E7324 STP V1, V0, [X31 + 0xD0]
	0x039E7328 BL 0x3C4B098
	0x039E732C LDR X8, [X25 + 0x20]
	0x039E7330 LDP V1, V0, [X25]
	0x039E7334 STR X8, [X31 + 0xC0]
	0x039E7338 STP V1, V0, [X31 + 0xA0]
	0x039E733C LDR X8, [X24 + 0x20]
	0x039E7340 LDP V1, V0, [X24]
	0x039E7344 STR X8, [X31 + 0x90]
	0x039E7348 STP V1, V0, [X31 + 0x70]
	0x039E734C CBZ X23, 0x39E73B4
	0x039E7350 LDP V0, V1, [X31 + 0xA0]
	0x039E7354 LDR X8, [X31 + 0xC0]
	0x039E7358 LDP V2, V3, [X31 + 0x70]
	0x039E735C LDR X9, [X31 + 0x90]
	0x039E7360 ADD X1, X31, 0x40
	0x039E7364 ADD X4, X31, 0x10
	0x039E7368 MOV X0, X23
	0x039E736C MOV W2, W22
	0x039E7370 MOV W3, W21
	0x039E7374 MOV W5, W20
	0x039E7378 MOV W6, W19
	0x039E737C MOV X7, X31
	0x039E7380 STP V0, V1, [X31 + 0x40]
	0x039E7384 STR X8, [X31 + 0x60]
	0x039E7388 STP V2, V3, [X31 + 0x10]
	0x039E738C STR X9, [X31 + 0x30]
	0x039E7390 BL 0x3C4E184
	0x039E7394 LDP X20, X19, [X31 + 0x180]
	0x039E7398 LDP X22, X21, [X31 + 0x170]
	0x039E739C LDP X24, X23, [X31 + 0x160]
	0x039E73A0 LDP X26, X25, [X31 + 0x150]
	0x039E73A4 LDP X28, X27, [X31 + 0x140]
	0x039E73A8 LDP X29, X30, [X31 + 0x130]
	0x039E73AC ADD X31, X31, 0x190
	0x039E73B0 RET
	0x039E73B4 BL 0x1C16F20
	0x039E73B8 SUB X31, X31, 0x160
	0x039E73BC STP D11, D10, [X31 + 0xE0]
	0x039E73C0 STP D9, D8, [X31 + 0xF0]
	0x039E73C4 STP X29, X30, [X31 + 0x100]
	0x039E73C8 STP X28, X27, [X31 + 0x110]
	0x039E73CC STP X26, X25, [X31 + 0x120]
	0x039E73D0 STP X24, X23, [X31 + 0x130]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9FB000
	005 Move X20, 0x735000
	006 Move W8, [X19+3579]
	007 Move X20, [X20+2296]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x735000
	013 Move X0, [X0+2296]
	014 Call 0x1C17CF4
	015 Move X0, 0x70D000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x70F000
	019 Move X0, [X0+304]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3579], W8
	023 Move X0, [X20]
	024 Move X19, 0x70D000
	025 Move W8, [X0+224]
	026 Move X19, [X19+1432]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X19]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X19, [X9+48]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {78}
	047 Move X8, 0x70F000
	048 Move X8, [X8+304]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move W1, 1
	052 Move W2, 1
	053 Move W3, W31
	054 Move X4, X31
	055 Move X19, X0
	056 Call RenderTexture..ctor, X0, X1, X2, X3
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X20]
	063 Move X8, [X0+184]
	064 Move [X8+48], X19
	065 Compare X19, 0
	066 JumpIfEqual {90}
	067 Move W1, 1
	068 Move X0, X19
	069 Move X2, X31
	070 Call RenderTexture.set_enableRandomWrite, X0, X1
	071 Move X8, [X20]
	072 Move X8, [X8+184]
	073 Move X0, [X8+48]
	074 Compare X0, 0
	075 JumpIfEqual {90}
	076 Move X1, X31
	077 Call RenderTexture.Create, X0
	078 Move X0, [X20]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X20]
	084 Move X8, [X0+184]
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X0, [X8+48]
	088 Move X30, [X31+32]
	089 Return X0
	090 Call 0x1C17F20

Method: UnityEngine.Texture3D get_blackVolumeTexture()

Disassembly:
	0x039E73D4 STP X22, X21, [X31 + 0x140]
	0x039E73D8 STP X20, X19, [X31 + 0x150]
	0x039E73DC STR W7, [X31 + 0x1C]
	0x039E73E0 ADRP X19, 0x9FA000
	0x039E73E4 ADRP X29, 0x734000
	0x039E73E8 LDR W27, [X31 + 0x168]
	0x039E73EC LDRB W8, [X19 + 0xE0B]
	0x039E73F0 LDR W28, [X31 + 0x160]
	0x039E73F4 LDR X29, [X29 + 0x8F8]
	0x039E73F8 MOV V8.16B, V3.16B
	0x039E73FC MOV V9.16B, V2.16B
	0x039E7400 MOV V10.16B, V1.16B
	0x039E7404 MOV V11.16B, V0.16B
	0x039E7408 MOV W20, W6
	0x039E740C MOV W21, W5
	0x039E7410 MOV X25, X4
	0x039E7414 MOV W22, W3
	0x039E7418 MOV W23, W2
	0x039E741C MOV X26, X1
	0x039E7420 MOV X24, X0
	0x039E7424 TBNZ X8, 0x0, 0x39E743C
	0x039E7428 ADRP X0, 0x734000
	0x039E742C LDR X0, [X0 + 0x8F8]
	0x039E7430 BL 0x1C16CF4
	0x039E7434 MOVZ W8, 0x1
	0x039E7438 STRB W8, [X19 + 0xE0B]
	0x039E743C LDR X0, [X29]
	0x039E7440 LDR W29, [X31 + 0x170]
	0x039E7444 LDR W8, [X0 + 0xE0]
	0x039E7448 CBNZ W8, 0x39E7450
	0x039E744C BL 0x1C16DFC
	0x039E7450 ADDS W31, W29, 0x1
	0x039E7454 MOVN W8, 0x0
	0x039E7458 LDR X9, [X26 + 0x20]
	0x039E745C LDP V0, V1, [X26]
	0x039E7460 CCMP W27, W8, 0x4, EQ
	0x039E7464 CSEL W29, W29, W31, EQ
	0x039E7468 ADD X1, X31, 0xB0
	0x039E746C MOV X0, X26
	0x039E7470 MOV W2, W28
	0x039E7474 MOV W3, W27
	0x039E7478 MOV W4, W29
	0x039E747C MOV X5, X31
	0x039E7480 STR X9, [X31 + 0xD0]
	0x039E7484 STP V0, V1, [X31 + 0xB0]
	0x039E7488 BL 0x3C4B098
	0x039E748C LDR X8, [X25 + 0x20]
	0x039E7490 LDP V1, V0, [X25]
	0x039E7494 ADD X1, X31, 0x80
	0x039E7498 MOV X0, X25
	0x039E749C MOV W2, W28
	0x039E74A0 MOV W3, W27
	0x039E74A4 MOV W4, W29
	0x039E74A8 MOV X5, X31
	0x039E74AC STR X8, [X31 + 0xA0]
	0x039E74B0 STP V1, V0, [X31 + 0x80]
	0x039E74B4 BL 0x3C4B098
	0x039E74B8 LDR X8, [X26 + 0x20]
	0x039E74BC LDP V1, V0, [X26]
	0x039E74C0 LDR W7, [X31 + 0x1C]
	0x039E74C4 ADD X1, X31, 0x50
	0x039E74C8 STR X8, [X31 + 0x70]
	0x039E74CC STP V1, V0, [X31 + 0x50]
	0x039E74D0 LDP V1, V0, [X25]
	0x039E74D4 LDR X8, [X25 + 0x20]
	0x039E74D8 ADD X4, X31, 0x20
	0x039E74DC MOV X0, X24
	0x039E74E0 STP V1, V0, [X31 + 0x20]
	0x039E74E4 MOV W2, W23
	0x039E74E8 MOV W3, W22
	0x039E74EC MOV W5, W21
	0x039E74F0 MOV W6, W20
	0x039E74F4 MOV V0.16B, V11.16B
	0x039E74F8 MOV V1.16B, V10.16B
	0x039E74FC MOV V2.16B, V9.16B
	0x039E7500 MOV V3.16B, V8.16B
	0x039E7504 STR X8, [X31 + 0x40]
	0x039E7508 BL 0x39E710C
	0x039E750C LDP X20, X19, [X31 + 0x150]
	0x039E7510 LDP X22, X21, [X31 + 0x140]
	0x039E7514 LDP X24, X23, [X31 + 0x130]
	0x039E7518 LDP X26, X25, [X31 + 0x120]
	0x039E751C LDP X28, X27, [X31 + 0x110]
	0x039E7520 LDP X29, X30, [X31 + 0x100]
	0x039E7524 LDP D9, D8, [X31 + 0xF0]
	0x039E7528 LDP D11, D10, [X31 + 0xE0]
	0x039E752C ADD X31, X31, 0x160
	0x039E7530 RET
	0x039E7534 SUB X31, X31, 0xD0
	0x039E7538 STP D11, D10, [X31 + 0x60]
	0x039E753C STP D9, D8, [X31 + 0x70]
	0x039E7540 STR X30, [X31 + 0x80]
	0x039E7544 STP X26, X25, [X31 + 0x90]
	0x039E7548 STP X24, X23, [X31 + 0xA0]
	0x039E754C STP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x9FB000
	006 Move X21, 0x735000
	007 Move W8, [X19+3580]
	008 Move X21, [X21+2296]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x712000
	014 Move X0, [X0+320]
	015 Call 0x1C17CF4
	016 Move X0, 0x735000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x70D000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x76C000
	023 Move X0, [X0+456]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3580], W8
	027 Move X0, [X21]
	028 Move X19, 0x70D000
	029 Move W8, [X0+224]
	030 Move X19, [X19+1432]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X19]
	036 Move X9, [X0+184]
	037 Move W10, [X8+224]
	038 Move X19, [X9+56]
	039 Compare W10, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {99}
	051 Move X8, 0x712000
	052 Move X8, [X8+320]
	053 Move W1, 1
	054 Move X0, [X8]
	055 Call 0x1C17D6C
	056 Compare X0, 0
	057 JumpIfEqual {112}
	058 Move W8, [X0+24]
	059 Move X19, X0
	060 Compare W8, 0
	061 JumpIfEqual {113}
	062 Move X8, -49258496
	063 Move V0, [X8+187]
	064 Move X8, 0x76C000
	065 Move [X19+2], V0
	066 Move X8, [X8+456]
	067 Move X0, [X8]
	068 Call 0x1C17F10
	069 Move W1, 1
	070 Move W2, 1
	071 Move W3, 1
	072 Move W4, 4
	073 Move W5, W31
	074 Move X6, X31
	075 Move X20, X0
	076 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5
	077 Move X0, [X21]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X21]
	083 Move X8, [X0+184]
	084 Move [X8+56], X20
	085 Compare X20, 0
	086 JumpIfEqual {112}
	087 Move X0, X20
	088 Move X1, X19
	089 Move W2, W31
	090 Move X3, X31
	091 Call Texture3D.SetPixels, X0, X1, X2
	092 Move X8, [X21]
	093 Move X8, [X8+184]
	094 Move X0, [X8+56]
	095 Compare X0, 0
	096 JumpIfEqual {112}
	097 Move X1, X31
	098 Call Texture3D.Apply, X0
	099 Move X0, [X21]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X21]
	105 Move X8, [X0+184]
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X0, [X8+56]
	109 Move X30, [X31+32]
	110 Move X21, [X31+40]
	111 Return X0
	112 Call 0x1C17F20
	113 Call 0x1C17F28

Method: System.Void ClearRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x039E7550 STP X20, X19, [X31 + 0xC0]
	0x039E7554 ADRP X26, 0x9FA000
	0x039E7558 LDRB W8, [X26 + 0xE0C]
	0x039E755C MOV V8.16B, V3.16B
	0x039E7560 MOV V9.16B, V2.16B
	0x039E7564 MOV V10.16B, V1.16B
	0x039E7568 MOV V11.16B, V0.16B
	0x039E756C MOV W19, W6
	0x039E7570 MOV W21, W5

ISIL:
	001 Compare W1, 0
	002 JumpIfEqual {10}
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move S4, 1
	006 Move W2, W31
	007 Move X3, X31
	008 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, V0, X3
	009 Return 
	010 Return 
	011 Move [X31-16], X30
	012 Call 0x1C17F20

Method: System.Int32 FixupDepthSlice(System.Int32 depthSlice, UnityEngine.Rendering.RTHandle buffer)

Disassembly:
	0x039E7574 MOV W22, W4
	0x039E7578 MOV W23, W3
	0x039E757C MOV W24, W2
	0x039E7580 MOV X25, X1
	0x039E7584 MOV X20, X0
	0x039E7588 TBNZ X8, 0x0, 0x39E75A0
	0x039E758C ADRP X0, 0x734000
	0x039E7590 LDR X0, [X0 + 0x8F8]
	0x039E7594 BL 0x1C16CF4
	0x039E7598 MOVZ W8, 0x1
	0x039E759C STRB W8, [X26 + 0xE0C]
	0x039E75A0 LDR X8, [X25 + 0x20]
	0x039E75A4 LDP V1, V0, [X25]
	0x039E75A8 STR X8, [X31 + 0x50]
	0x039E75AC STP V1, V0, [X31 + 0x30]
	0x039E75B0 CBZ X20, 0x39E763C
	0x039E75B4 LDP V0, V1, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Add W31, W0, 1
	003 Compare X1, 0
	004 JumpIfEqual {19}
	005 Move X0, [X1+24]
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Move X8, [X0]
	009 Move X9, [X8+456]
	010 Move X1, [X8+464]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W0, W31
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W0, TEMP
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20

Method: System.Int32 FixupDepthSlice(System.Int32 depthSlice, UnityEngine.CubemapFace cubemapFace)

Disassembly:
	0x039E75B8 LDR X8, [X31 + 0x50]
	0x039E75BC ADRP X25, 0x734000
	0x039E75C0 LDR X25, [X25 + 0x8F8]
	0x039E75C4 ADD X1, X31, 0x0
	0x039E75C8 MOV X0, X20

ISIL:
	001 Add W31, W1, 1
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W8, TEMP
	005 NotImplemented "Instruction CCMP not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Return X0

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E75CC MOV W2, W24
	0x039E75D0 MOV W3, W23
	0x039E75D4 MOV W4, W22
	0x039E75D8 MOV W5, W21
	0x039E75DC MOV X6, X31
	0x039E75E0 STP V0, V1, [X31]
	0x039E75E4 STR X8, [X31 + 0x20]
	0x039E75E8 BL 0x3C4DBAC
	0x039E75EC LDR X0, [X25]
	0x039E75F0 LDR W8, [X0 + 0xE0]
	0x039E75F4 CBNZ W8, 0x39E75FC
	0x039E75F8 BL 0x1C16DFC
	0x039E75FC MOV X0, X20
	0x039E7600 MOV W1, W19
	0x039E7604 MOV V0.16B, V11.16B
	0x039E7608 MOV V1.16B, V10.16B
	0x039E760C MOV V2.16B, V9.16B
	0x039E7610 MOV V3.16B, V8.16B
	0x039E7614 BL 0x39E6550
	0x039E7618 LDP X20, X19, [X31 + 0xC0]
	0x039E761C LDP X22, X21, [X31 + 0xB0]
	0x039E7620 LDP X24, X23, [X31 + 0xA0]
	0x039E7624 LDP X26, X25, [X31 + 0x90]
	0x039E7628 LDR X30, [X31 + 0x80]
	0x039E762C LDP D9, D8, [X31 + 0x70]
	0x039E7630 LDP D11, D10, [X31 + 0x60]
	0x039E7634 ADD X31, X31, 0xD0
	0x039E7638 RET
	0x039E763C BL 0x1C16F20
	0x039E7640 SUB X31, X31, 0x130
	0x039E7644 STP X29, X30, [X31 + 0xD0]
	0x039E7648 STP X28, X27, [X31 + 0xE0]
	0x039E764C STP X26, X25, [X31 + 0xF0]
	0x039E7650 STP X24, X23, [X31 + 0x100]
	0x039E7654 STP X22, X21, [X31 + 0x110]
	0x039E7658 STP X20, X19, [X31 + 0x120]
	0x039E765C ADRP X28, 0x9FA000
	0x039E7660 ADRP X27, 0x734000
	0x039E7664 LDRB W8, [X28 + 0xE0D]
	0x039E7668 LDR X27, [X27 + 0x8F8]
	0x039E766C MOV W19, W7
	0x039E7670 MOV W20, W6
	0x039E7674 MOV W21, W5
	0x039E7678 MOV X25, X4
	0x039E767C MOV W22, W3
	0x039E7680 MOV W23, W2
	0x039E7684 MOV X26, X1
	0x039E7688 MOV X24, X0
	0x039E768C TBNZ X8, 0x0, 0x39E76A4
	0x039E7690 ADRP X0, 0x734000
	0x039E7694 LDR X0, [X0 + 0x8F8]
	0x039E7698 BL 0x1C16CF4
	0x039E769C MOVZ W8, 0x1
	0x039E76A0 STRB W8, [X28 + 0xE0D]
	0x039E76A4 LDR X8, [X26 + 0x20]
	0x039E76A8 LDP V1, V0, [X26]
	0x039E76AC LDR X0, [X27]
	0x039E76B0 STR X8, [X31 + 0xC0]
	0x039E76B4 STP V1, V0, [X31 + 0xA0]
	0x039E76B8 LDR X8, [X25 + 0x20]
	0x039E76BC LDP V1, V0, [X25]
	0x039E76C0 STR X8, [X31 + 0x90]
	0x039E76C4 STP V1, V0, [X31 + 0x70]
	0x039E76C8 LDR W8, [X0 + 0xE0]
	0x039E76CC CBNZ W8, 0x39E76D4
	0x039E76D0 BL 0x1C16DFC
	0x039E76D4 LDP V0, V1, [X31 + 0xA0]
	0x039E76D8 LDP V2, V3, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X26
	008 Move [X31+152], X25
	009 Move [X31+160], X24
	010 Move [X31+168], X23
	011 Move [X31+176], X22
	012 Move [X31+184], X21
	013 Move [X31+192], X20
	014 Move [X31+200], X19
	015 Move X25, 0x9FB000
	016 Move X26, 0x735000
	017 Move W8, [X25+3581]
	018 Move X26, [X26+2296]
	019 Move W23, W5
	020 Move W20, W4
	021 Move W22, W3
	022 Move V8, V3
	023 Move V9, V2
	024 Move V10, V1
	025 Move V11, V0
	026 Move W19, W2
	027 Move X24, X1
	028 Move X21, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, 0x735000
	034 Move X0, [X0+2296]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+3581], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, [X24+32]
	044 Move V1, [X24]
	045 Move V0, [X24+16]
	046 Move [X31+80], X8
	047 Move [X31+48], V1
	048 Move [X31+56], V0
	049 Compare X21, 0
	050 JumpIfEqual {91}
	051 Move V0, [X31+48]
	052 Move V1, [X31+64]
	053 Move X9, [X31+80]
	054 Add W31, W23, 1
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W8, TEMP
	058 NotImplemented "Instruction CCMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Add X1, X31, 0
	061 Move X0, X21
	062 Move W2, W22
	063 Move W3, W20
	064 Move X5, X31
	065 Move [X31], V0
	066 Move [X31+8], V1
	067 Move [X31+32], X9
	068 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4
	069 Move X0, X21
	070 Move W1, W19
	071 Move V0, V11
	072 Move V1, V10
	073 Move V2, V9
	074 Move V3, V8
	075 Call CoreUtils.ClearRenderTarget, X0, X1, X2
	076 Move X20, [X31+192]
	077 Move X19, [X31+200]
	078 Move X22, [X31+176]
	079 Move X21, [X31+184]
	080 Move X24, [X31+160]
	081 Move X23, [X31+168]
	082 Move X26, [X31+144]
	083 Move X25, [X31+152]
	084 Move X30, [X31+128]
	085 Move D9, [X31+112]
	086 Move D8, [X31+120]
	087 Move D11, [X31+96]
	088 Move D10, [X31+104]
	089 Add X31, X31, 208
	090 Return 
	091 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.ClearFlag clearFlag = 0, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E76DC LDR X8, [X31 + 0xC0]
	0x039E76E0 LDR X9, [X31 + 0x90]
	0x039E76E4 STP V0, V1, [X31 + 0x40]
	0x039E76E8 STP V2, V3, [X31 + 0x10]
	0x039E76EC ADD X1, X31, 0x40
	0x039E76F0 ADD X4, X31, 0x10
	0x039E76F4 FMOV S0, W31
	0x039E76F8 FMOV S1, W31
	0x039E76FC FMOV S2, W31
	0x039E7700 FMOV S3, W31
	0x039E7704 MOV X0, X24
	0x039E7708 MOV W2, W23
	0x039E770C MOV W3, W22
	0x039E7710 MOV W5, W21
	0x039E7714 MOV W6, W20
	0x039E7718 MOV W7, W19
	0x039E771C STR X8, [X31 + 0x60]
	0x039E7720 STR X9, [X31 + 0x30]
	0x039E7724 BL 0x39E710C
	0x039E7728 LDP X20, X19, [X31 + 0x120]
	0x039E772C LDP X22, X21, [X31 + 0x110]
	0x039E7730 LDP X24, X23, [X31 + 0x100]
	0x039E7734 LDP X26, X25, [X31 + 0xF0]
	0x039E7738 LDP X28, X27, [X31 + 0xE0]
	0x039E773C LDP X29, X30, [X31 + 0xD0]
	0x039E7740 ADD X31, X31, 0x130
	0x039E7744 RET
	0x039E7748 STP D11, D10, [X31 - 0x50]!
	0x039E774C STP D9, D8, [X31 + 0x10]
	0x039E7750 STP X30, X23, [X31 + 0x20]
	0x039E7754 STP X22, X21, [X31 + 0x30]
	0x039E7758 STP X20, X19, [X31 + 0x40]
	0x039E775C ADRP X23, 0x9FA000
	0x039E7760 ADRP X22, 0x734000
	0x039E7764 LDRB W8, [X23 + 0xE0E]
	0x039E7768 LDR X22, [X22 + 0x8F8]
	0x039E776C MOV V8.16B, V3.16B
	0x039E7770 MOV V9.16B, V2.16B
	0x039E7774 MOV V10.16B, V1.16B
	0x039E7778 MOV V11.16B, V0.16B
	0x039E777C MOV W19, W2
	0x039E7780 MOV X21, X1
	0x039E7784 MOV X20, X0
	0x039E7788 TBNZ X8, 0x0, 0x39E77A0
	0x039E778C ADRP X0, 0x734000
	0x039E7790 LDR X0, [X0 + 0x8F8]
	0x039E7794 BL 0x1C16CF4
	0x039E7798 MOVZ W8, 0x1
	0x039E779C STRB W8, [X23 + 0xE0E]
	0x039E77A0 LDR X0, [X22]
	0x039E77A4 LDR W8, [X0 + 0xE0]
	0x039E77A8 CBNZ W8, 0x39E77B0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X26, 0x9FB000
	012 Move X25, 0x735000
	013 Move W8, [X26+3582]
	014 Move X25, [X25+2296]
	015 Move W19, W5
	016 Move W20, W4
	017 Move W21, W3
	018 Move W22, W2
	019 Move X24, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x735000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+3582], W8
	030 Move X8, [X24+32]
	031 Move V1, [X24]
	032 Move V0, [X24+16]
	033 Move X0, [X25]
	034 Move [X31+80], X8
	035 Move [X31+48], V1
	036 Move [X31+56], V0
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move V0, [X31+48]
	042 Move V1, [X31+64]
	043 Move X8, [X31+80]
	044 Add X1, X31, 0
	045 Move S2, W31
	046 Move [X31], V0
	047 Move [X31+8], V1
	048 Move S0, W31
	049 Move S1, W31
	050 Move S3, W31
	051 Move X0, X23
	052 Move W2, W22
	053 Move W3, W21
	054 Move W4, W20
	055 Move W5, W19
	056 Move [X31+32], X8
	057 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	058 Move X20, [X31+160]
	059 Move X19, [X31+168]
	060 Move X22, [X31+144]
	061 Move X21, [X31+152]
	062 Move X24, [X31+128]
	063 Move X23, [X31+136]
	064 Move X26, [X31+112]
	065 Move X25, [X31+120]
	066 Move X30, [X31+96]
	067 Add X31, X31, 176
	068 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E77AC BL 0x1C16DFC
	0x039E77B0 MOV X0, X20
	0x039E77B4 MOV X1, X21
	0x039E77B8 BL 0x39E77EC
	0x039E77BC MOV X0, X20
	0x039E77C0 MOV W1, W19
	0x039E77C4 MOV V2.16B, V9.16B
	0x039E77C8 MOV V3.16B, V8.16B
	0x039E77CC LDP X20, X19, [X31 + 0x40]
	0x039E77D0 LDP X22, X21, [X31 + 0x30]
	0x039E77D4 LDP X30, X23, [X31 + 0x20]
	0x039E77D8 LDP D9, D8, [X31 + 0x10]
	0x039E77DC MOV V0.16B, V11.16B
	0x039E77E0 MOV V1.16B, V10.16B
	0x039E77E4 LDP D11, D10, [X31], #0x50
	0x039E77E8 B 0x39E6550
	0x039E77EC SUB X31, X31, 0x50
	0x039E77F0 STR X30, [X31 + 0x30]
	0x039E77F4 STP X20, X19, [X31 + 0x40]
	0x039E77F8 CBZ X1, 0x39E7860
	0x039E77FC LDRB W8, [X1 + 0xA8]
	0x039E7800 MOV X20, X1
	0x039E7804 CBZ W8, 0x39E7850
	0x039E7808 MOV X19, X0
	0x039E780C ADD X8, X31, 0x0
	0x039E7810 MOV X0, X20
	0x039E7814 MOV X1, X31
	0x039E7818 BL 0x39D48AC
	0x039E781C LDR X1, [X31 + 0x10]
	0x039E7820 MOV X0, X20
	0x039E7824 MOV X2, X31
	0x039E7828 BL 0x39D4C30
	0x039E782C CBZ X19, 0x39E7860
	0x039E7830 UBFM X8, X0, 0x20, 0x3F
	0x039E7834 SCVTF S3, W8
	0x039E7838 SCVTF S2, W0
	0x039E783C FMOV S0, W31
	0x039E7840 FMOV S1, W31
	0x039E7844 MOV X0, X19
	0x039E7848 MOV X1, X31
	0x039E784C BL 0x3C4C86C
	0x039E7850 LDP X20, X19, [X31 + 0x40]
	0x039E7854 LDR X30, [X31 + 0x30]
	0x039E7858 ADD X31, X31, 0x50
	0x039E785C RET
	0x039E7860 BL 0x1C16F20
	0x039E7864 SUB X31, X31, 0xD0
	0x039E7868 STP D11, D10, [X31 + 0x60]
	0x039E786C STP D9, D8, [X31 + 0x70]
	0x039E7870 STR X30, [X31 + 0x80]
	0x039E7874 STP X26, X25, [X31 + 0x90]
	0x039E7878 STP X24, X23, [X31 + 0xA0]
	0x039E787C STP X22, X21, [X31 + 0xB0]
	0x039E7880 STP X20, X19, [X31 + 0xC0]
	0x039E7884 ADRP X25, 0x9FA000
	0x039E7888 ADRP X26, 0x734000
	0x039E788C LDRB W8, [X25 + 0xE0F]
	0x039E7890 LDR X26, [X26 + 0x8F8]
	0x039E7894 MOV W24, W5
	0x039E7898 MOV W21, W4
	0x039E789C MOV W23, W3

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X26
	005 Move [X31+216], X25
	006 Move [X31+224], X24
	007 Move [X31+232], X23
	008 Move [X31+240], X22
	009 Move [X31+248], X21
	010 Move [X31+256], X20
	011 Move [X31+264], X19
	012 Move X26, 0x9FB000
	013 Move X25, 0x735000
	014 Move W8, [X26+3583]
	015 Move X25, [X25+2296]
	016 Move W19, W5
	017 Move W20, W4
	018 Move W21, W3
	019 Move X23, X2
	020 Move X24, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x735000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+3583], W8
	031 Move X8, [X24+32]
	032 Move V1, [X24]
	033 Move V0, [X24+16]
	034 Move X0, [X25]
	035 Move [X31+176], X8
	036 Move [X31+144], V1
	037 Move [X31+152], V0
	038 Move X8, [X23+32]
	039 Move V1, [X23]
	040 Move V0, [X23+16]
	041 Move [X31+128], X8
	042 Move [X31+96], V1
	043 Move [X31+104], V0
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move V0, [X31+144]
	049 Move V1, [X31+160]
	050 Move V2, [X31+96]
	051 Move V3, [X31+112]
	052 Move X8, [X31+176]
	053 Move X9, [X31+128]
	054 Move [X31+48], V0
	055 Move [X31+56], V1
	056 Move [X31], V2
	057 Move [X31+8], V3
	058 Add X1, X31, 48
	059 Add X2, X31, 0
	060 Move S0, W31
	061 Move S1, W31
	062 Move S2, W31
	063 Move S3, W31
	064 Move X0, X22
	065 Move W3, W31
	066 Move W4, W21
	067 Move W5, W20
	068 Move W6, W19
	069 Move [X31+80], X8
	070 Move [X31+32], X9
	071 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7
	072 Move X20, [X31+256]
	073 Move X19, [X31+264]
	074 Move X22, [X31+240]
	075 Move X21, [X31+248]
	076 Move X24, [X31+224]
	077 Move X23, [X31+232]
	078 Move X26, [X31+208]
	079 Move X25, [X31+216]
	080 Move X29, [X31+192]
	081 Move X30, [X31+200]
	082 Add X31, X31, 272
	083 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E79E0 LDR X26, [X26 + 0x598]
	0x039E79E4 LDR X25, [X23 + 0x18]
	0x039E79E8 LDR X0, [X26]
	0x039E79EC LDR W8, [X0 + 0xE0]
	0x039E79F0 CBNZ W8, 0x39E79F8
	0x039E79F4 BL 0x1C16DFC
	0x039E79F8 MOV X0, X25
	0x039E79FC MOV X1, X31
	0x039E7A00 MOV X2, X31
	0x039E7A04 BL 0x3C354F8
	0x039E7A08 TBZ X0, 0x0, 0x39E7A88
	0x039E7A0C CBZ X22, 0x39E7AE4
	0x039E7A10 LDR X0, [X26]
	0x039E7A14 LDR X25, [X22 + 0x18]
	0x039E7A18 LDR W8, [X0 + 0xE0]
	0x039E7A1C CBNZ W8, 0x39E7A24
	0x039E7A20 BL 0x1C16DFC
	0x039E7A24 MOV X0, X25
	0x039E7A28 MOV X1, X31
	0x039E7A2C MOV X2, X31
	0x039E7A30 BL 0x3C354F8
	0x039E7A34 TBZ X0, 0x0, 0x39E7A88
	0x039E7A38 LDR X0, [X23 + 0x18]
	0x039E7A3C CBZ X0, 0x39E7AE4
	0x039E7A40 LDR X8, [X0]
	0x039E7A44 LDP X9, X1, [X8 + 0x188]
	0x039E7A48 BLR X9
	0x039E7A4C LDR X0, [X23 + 0x18]
	0x039E7A50 CBZ X0, 0x39E7AE4
	0x039E7A54 LDR X8, [X0]
	0x039E7A58 LDP X9, X1, [X8 + 0x1A8]
	0x039E7A5C BLR X9
	0x039E7A60 LDR X0, [X22 + 0x18]
	0x039E7A64 CBZ X0, 0x39E7AE4
	0x039E7A68 LDR X8, [X0]
	0x039E7A6C LDP X9, X1, [X8 + 0x188]
	0x039E7A70 BLR X9
	0x039E7A74 LDR X0, [X22 + 0x18]
	0x039E7A78 CBZ X0, 0x39E7AE4
	0x039E7A7C LDR X8, [X0]
	0x039E7A80 LDP X9, X1, [X8 + 0x1A8]
	0x039E7A84 BLR X9
	0x039E7A88 ADRP X8, 0x734000
	0x039E7A8C LDR X8, [X8 + 0x8F8]
	0x039E7A90 LDR X0, [X8]
	0x039E7A94 LDR W8, [X0 + 0xE0]
	0x039E7A98 CBNZ W8, 0x39E7AA0
	0x039E7A9C BL 0x1C16DFC
	0x039E7AA0 MOV X0, X24
	0x039E7AA4 MOV X1, X23
	0x039E7AA8 MOV X2, X22
	0x039E7AAC MOV W4, W21
	0x039E7AB0 MOV W5, W20
	0x039E7AB4 MOV W6, W19
	0x039E7AB8 LDP X20, X19, [X31 + 0x40]
	0x039E7ABC LDP X22, X21, [X31 + 0x30]
	0x039E7AC0 LDP X24, X23, [X31 + 0x20]
	0x039E7AC4 LDP X26, X25, [X31 + 0x10]
	0x039E7AC8 FMOV S0, W31
	0x039E7ACC FMOV S1, W31
	0x039E7AD0 FMOV S2, W31
	0x039E7AD4 FMOV S3, W31
	0x039E7AD8 MOV W3, W31
	0x039E7ADC LDR X30, [X31], #0x50

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X27
	005 Move [X31+224], X26
	006 Move [X31+232], X25
	007 Move [X31+240], X24
	008 Move [X31+248], X23
	009 Move [X31+256], X22
	010 Move [X31+264], X21
	011 Move [X31+272], X20
	012 Move [X31+280], X19
	013 Move X27, 0x9FB000
	014 Move X26, 0x735000
	015 Move W8, [X27+3584]
	016 Move X26, [X26+2296]
	017 Move W19, W6
	018 Move W20, W5
	019 Move W21, W4
	020 Move W22, W3
	021 Move X24, X2
	022 Move X25, X1
	023 Move X23, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x735000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+3584], W8
	033 Move X8, [X25+32]
	034 Move V1, [X25]
	035 Move V0, [X25+16]
	036 Move X0, [X26]
	037 Move [X31+176], X8
	038 Move [X31+144], V1
	039 Move [X31+152], V0
	040 Move X8, [X24+32]
	041 Move V1, [X24]
	042 Move V0, [X24+16]
	043 Move [X31+128], X8
	044 Move [X31+96], V1
	045 Move [X31+104], V0
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move V0, [X31+144]
	051 Move V1, [X31+160]
	052 Move V2, [X31+96]
	053 Move V3, [X31+112]
	054 Move X8, [X31+176]
	055 Move X9, [X31+128]
	056 Move [X31+48], V0
	057 Move [X31+56], V1
	058 Move [X31], V2
	059 Move [X31+8], V3
	060 Add X1, X31, 48
	061 Add X2, X31, 0
	062 Move S0, W31
	063 Move S1, W31
	064 Move S2, W31
	065 Move S3, W31
	066 Move X0, X23
	067 Move W3, W22
	068 Move W4, W21
	069 Move W5, W20
	070 Move W6, W19
	071 Move [X31+80], X8
	072 Move [X31+32], X9
	073 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7
	074 Move X20, [X31+272]
	075 Move X19, [X31+280]
	076 Move X22, [X31+256]
	077 Move X21, [X31+264]
	078 Move X24, [X31+240]
	079 Move X23, [X31+248]
	080 Move X26, [X31+224]
	081 Move X25, [X31+232]
	082 Move X30, [X31+208]
	083 Move X27, [X31+216]
	084 Move X29, [X31+192]
	085 Add X31, X31, 288
	086 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E78A0 MOV V8.16B, V3.16B
	0x039E78A4 MOV V9.16B, V2.16B
	0x039E78A8 MOV V10.16B, V1.16B
	0x039E78AC MOV V11.16B, V0.16B
	0x039E78B0 MOV W19, W2
	0x039E78B4 MOV X20, X1
	0x039E78B8 MOV X22, X0
	0x039E78BC TBNZ X8, 0x0, 0x39E78D4
	0x039E78C0 ADRP X0, 0x734000
	0x039E78C4 LDR X0, [X0 + 0x8F8]
	0x039E78C8 BL 0x1C16CF4
	0x039E78CC MOVZ W8, 0x1
	0x039E78D0 STRB W8, [X25 + 0xE0F]
	0x039E78D4 LDR X0, [X26]
	0x039E78D8 LDR W8, [X0 + 0xE0]
	0x039E78DC CBNZ W8, 0x39E78E4
	0x039E78E0 BL 0x1C16DFC
	0x039E78E4 MOV W0, W24
	0x039E78E8 MOV X1, X20
	0x039E78EC BL 0x39E6574
	0x039E78F0 CBZ X20, 0x39E797C
	0x039E78F4 LDR X8, [X20 + 0x48]
	0x039E78F8 LDUR V0, [X20 + 0x38]
	0x039E78FC LDUR V1, [X20 + 0x28]
	0x039E7900 STR X8, [X31 + 0x50]
	0x039E7904 STP V1, V0, [X31 + 0x30]
	0x039E7908 CBZ X22, 0x39E797C
	0x039E790C LDP V0, V1, [X31 + 0x30]
	0x039E7910 LDR X8, [X31 + 0x50]
	0x039E7914 MOV W4, W0
	0x039E7918 ADD X1, X31, 0x0
	0x039E791C MOV X0, X22
	0x039E7920 MOV W2, W23
	0x039E7924 MOV W3, W21
	0x039E7928 MOV X5, X31
	0x039E792C STP V0, V1, [X31]
	0x039E7930 STR X8, [X31 + 0x20]
	0x039E7934 BL 0x3C4DDFC
	0x039E7938 MOV X0, X22
	0x039E793C MOV X1, X20
	0x039E7940 MOV W2, W19
	0x039E7944 MOV V0.16B, V11.16B
	0x039E7948 MOV V1.16B, V10.16B
	0x039E794C MOV V2.16B, V9.16B
	0x039E7950 MOV V3.16B, V8.16B
	0x039E7954 BL 0x39E7748
	0x039E7958 LDP X20, X19, [X31 + 0xC0]
	0x039E795C LDP X22, X21, [X31 + 0xB0]
	0x039E7960 LDP X24, X23, [X31 + 0xA0]
	0x039E7964 LDP X26, X25, [X31 + 0x90]
	0x039E7968 LDR X30, [X31 + 0x80]
	0x039E796C LDP D9, D8, [X31 + 0x70]
	0x039E7970 LDP D11, D10, [X31 + 0x60]
	0x039E7974 ADD X31, X31, 0xD0
	0x039E7978 RET
	0x039E797C BL 0x1C16F20
	0x039E7980 STR X30, [X31 - 0x50]!
	0x039E7984 STP X26, X25, [X31 + 0x10]
	0x039E7988 STP X24, X23, [X31 + 0x20]
	0x039E798C STP X22, X21, [X31 + 0x30]
	0x039E7990 STP X20, X19, [X31 + 0x40]
	0x039E7994 ADRP X25, 0x9FA000
	0x039E7998 LDRB W8, [X25 + 0xE11]
	0x039E799C MOV W19, W5
	0x039E79A0 MOV W20, W4
	0x039E79A4 MOV W21, W3
	0x039E79A8 MOV X22, X2
	0x039E79AC MOV X23, X1
	0x039E79B0 MOV X24, X0
	0x039E79B4 TBNZ X8, 0x0, 0x39E79D8
	0x039E79B8 ADRP X0, 0x734000
	0x039E79BC LDR X0, [X0 + 0x8F8]
	0x039E79C0 BL 0x1C16CF4
	0x039E79C4 ADRP X0, 0x70C000
	0x039E79C8 LDR X0, [X0 + 0x598]
	0x039E79CC BL 0x1C16CF4
	0x039E79D0 MOVZ W8, 0x1
	0x039E79D4 STRB W8, [X25 + 0xE11]
	0x039E79D8 CBZ X23, 0x39E7AE4
	0x039E79DC ADRP X26, 0x70C000

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+192], D11
	003 Move [X31+200], D10
	004 Move [X31+208], D9
	005 Move [X31+216], D8
	006 Move [X31+224], X29
	007 Move [X31+240], X30
	008 Move [X31+248], X27
	009 Move [X31+256], X26
	010 Move [X31+264], X25
	011 Move [X31+272], X24
	012 Move [X31+280], X23
	013 Move [X31+288], X22
	014 Move [X31+296], X21
	015 Move [X31+304], X20
	016 Move [X31+312], X19
	017 Move X26, 0x9FB000
	018 Move X27, 0x735000
	019 Move W8, [X26+3585]
	020 Move X27, [X27+2296]
	021 Move W23, W6
	022 Move W20, W5
	023 Move W21, W4
	024 Move V8, V3
	025 Move V9, V2
	026 Move V10, V1
	027 Move V11, V0
	028 Move W19, W3
	029 Move X24, X2
	030 Move X25, X1
	031 Move X22, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X0, 0x735000
	037 Move X0, [X0+2296]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X26+3585], W8
	041 Move X0, [X27]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X8, [X25+32]
	047 Move V1, [X25]
	048 Move V0, [X25+16]
	049 Move [X31+176], X8
	050 Move [X31+144], V1
	051 Move [X31+152], V0
	052 Move X8, [X24+32]
	053 Move V1, [X24]
	054 Move V0, [X24+16]
	055 Move [X31+128], X8
	056 Move [X31+96], V1
	057 Move [X31+104], V0
	058 Compare X22, 0
	059 JumpIfEqual {109}
	060 Add W31, W23, 1
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W8, TEMP
	064 Move V0, [X31+144]
	065 Move V1, [X31+160]
	066 NotImplemented "Instruction CCMP not yet implemented."
	067 Move X8, [X31+176]
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move [X31+48], V0
	070 Move [X31+56], V1
	071 Move V0, [X31+96]
	072 Move V1, [X31+112]
	073 Move [X31+80], X8
	074 Move X8, [X31+128]
	075 Add X1, X31, 48
	076 Add X2, X31, 0
	077 Move X0, X22
	078 Move W3, W21
	079 Move W4, W20
	080 Move X6, X31
	081 Move [X31], V0
	082 Move [X31+8], V1
	083 Move [X31+32], X8
	084 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	085 Move X0, X22
	086 Move W1, W19
	087 Move V0, V11
	088 Move V1, V10
	089 Move V2, V9
	090 Move V3, V8
	091 Call CoreUtils.ClearRenderTarget, X0, X1, X2
	092 Move X20, [X31+304]
	093 Move X19, [X31+312]
	094 Move X22, [X31+288]
	095 Move X21, [X31+296]
	096 Move X24, [X31+272]
	097 Move X23, [X31+280]
	098 Move X26, [X31+256]
	099 Move X25, [X31+264]
	100 Move X30, [X31+240]
	101 Move X27, [X31+248]
	102 Move X29, [X31+224]
	103 Move D9, [X31+208]
	104 Move D8, [X31+216]
	105 Move D11, [X31+192]
	106 Move D10, [X31+200]
	107 Add X31, X31, 320
	108 Return 
	109 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer)

Disassembly:
	0x039E7AE0 B 0x39E7AE8
	0x039E7AE4 BL 0x1C16F20
	0x039E7AE8 SUB X31, X31, 0x140
	0x039E7AEC STP D11, D10, [X31 + 0xC0]
	0x039E7AF0 STP D9, D8, [X31 + 0xD0]
	0x039E7AF4 STR X29, [X31 + 0xE0]
	0x039E7AF8 STP X30, X27, [X31 + 0xF0]
	0x039E7AFC STP X26, X25, [X31 + 0x100]
	0x039E7B00 STP X24, X23, [X31 + 0x110]
	0x039E7B04 STP X22, X21, [X31 + 0x120]
	0x039E7B08 STP X20, X19, [X31 + 0x130]
	0x039E7B0C ADRP X26, 0x9FA000
	0x039E7B10 LDRB W8, [X26 + 0xE13]
	0x039E7B14 MOV W19, W6
	0x039E7B18 MOV W21, W5
	0x039E7B1C MOV W22, W4
	0x039E7B20 MOV V8.16B, V3.16B
	0x039E7B24 MOV V9.16B, V2.16B
	0x039E7B28 MOV V10.16B, V1.16B
	0x039E7B2C MOV V11.16B, V0.16B
	0x039E7B30 MOV W20, W3
	0x039E7B34 MOV X25, X2
	0x039E7B38 MOV X23, X1
	0x039E7B3C MOV X24, X0
	0x039E7B40 TBNZ X8, 0x0, 0x39E7B64
	0x039E7B44 ADRP X0, 0x734000
	0x039E7B48 LDR X0, [X0 + 0x8F8]
	0x039E7B4C BL 0x1C16CF4
	0x039E7B50 ADRP X0, 0x70C000
	0x039E7B54 LDR X0, [X0 + 0x598]
	0x039E7B58 BL 0x1C16CF4
	0x039E7B5C MOVZ W8, 0x1
	0x039E7B60 STRB W8, [X26 + 0xE13]
	0x039E7B64 CBZ X23, 0x39E7CF8
	0x039E7B68 ADRP X27, 0x70C000
	0x039E7B6C LDR X27, [X27 + 0x598]
	0x039E7B70 LDR X26, [X23 + 0x18]
	0x039E7B74 LDR X0, [X27]
	0x039E7B78 LDR W8, [X0 + 0xE0]
	0x039E7B7C CBNZ W8, 0x39E7B84
	0x039E7B80 BL 0x1C16DFC
	0x039E7B84 MOV X0, X26
	0x039E7B88 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0x9FB000
	009 Move X22, 0x735000
	010 Move W8, [X23+3586]
	011 Move X22, [X22+2296]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x735000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+3586], W8
	024 Move X8, [X21+32]
	025 Move V1, [X21]
	026 Move V0, [X21+16]
	027 Move X0, [X22]
	028 Move [X31+80], X8
	029 Move [X31+48], V1
	030 Move [X31+56], V0
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move V0, [X31+48]
	036 Move V1, [X31+64]
	037 Move X8, [X31+80]
	038 Add X2, X31, 0
	039 Move S2, W31
	040 Move [X31], V0
	041 Move [X31+8], V1
	042 Move S0, W31
	043 Move S1, W31
	044 Move S3, W31
	045 Move X0, X20
	046 Move X1, X19
	047 Move W3, W31
	048 Move [X31+32], X8
	049 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4
	050 Move X20, [X31+128]
	051 Move X19, [X31+136]
	052 Move X22, [X31+112]
	053 Move X21, [X31+120]
	054 Move X30, [X31+96]
	055 Move X23, [X31+104]
	056 Add X31, X31, 144
	057 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag = 0)

Disassembly:
	0x039E7C7C LDR X8, [X26 + 0x20]
	0x039E7C80 LDP V2, V3, [X31 + 0x60]
	0x039E7C84 LDR X9, [X31 + 0x80]
	0x039E7C88 ADD X1, X31, 0x30
	0x039E7C8C ADD X2, X31, 0x0
	0x039E7C90 MOV X0, X24
	0x039E7C94 MOV W3, W22
	0x039E7C98 MOV W4, W21
	0x039E7C9C MOV W5, W19
	0x039E7CA0 STR X8, [X31 + 0x50]
	0x039E7CA4 STP V0, V1, [X31 + 0x30]
	0x039E7CA8 STP V2, V3, [X31]
	0x039E7CAC STR X9, [X31 + 0x20]
	0x039E7CB0 BL 0x39E67AC
	0x039E7CB4 MOV X0, X24
	0x039E7CB8 MOV X1, X23
	0x039E7CBC MOV W2, W20
	0x039E7CC0 MOV V0.16B, V11.16B
	0x039E7CC4 MOV V1.16B, V10.16B
	0x039E7CC8 MOV V2.16B, V9.16B
	0x039E7CCC MOV V3.16B, V8.16B
	0x039E7CD0 LDP X20, X19, [X31 + 0x130]
	0x039E7CD4 LDP X22, X21, [X31 + 0x120]
	0x039E7CD8 LDP X24, X23, [X31 + 0x110]
	0x039E7CDC LDP X26, X25, [X31 + 0x100]
	0x039E7CE0 LDP X30, X27, [X31 + 0xF0]
	0x039E7CE4 LDR X29, [X31 + 0xE0]
	0x039E7CE8 LDP D9, D8, [X31 + 0xD0]
	0x039E7CEC LDP D11, D10, [X31 + 0xC0]
	0x039E7CF0 ADD X31, X31, 0x140
	0x039E7CF4 B 0x39E7748
	0x039E7CF8 BL 0x1C16F20
	0x039E7CFC STP X30, X27, [X31 - 0x50]!
	0x039E7D00 STP X26, X25, [X31 + 0x10]
	0x039E7D04 STP X24, X23, [X31 + 0x20]
	0x039E7D08 STP X22, X21, [X31 + 0x30]
	0x039E7D0C STP X20, X19, [X31 + 0x40]
	0x039E7D10 ADRP X26, 0x9FA000
	0x039E7D14 LDRB W8, [X26 + 0xE12]
	0x039E7D18 MOV W19, W6
	0x039E7D1C MOV W20, W5
	0x039E7D20 MOV W21, W4
	0x039E7D24 MOV W22, W3
	0x039E7D28 MOV X23, X2
	0x039E7D2C MOV X24, X1
	0x039E7D30 MOV X25, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X24, 0x9FB000
	010 Move X23, 0x735000
	011 Move W8, [X24+3587]
	012 Move X23, [X23+2296]
	013 Move W19, W3
	014 Move X22, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x735000
	022 Move X0, [X0+2296]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+3587], W8
	026 Move X8, [X22+32]
	027 Move V1, [X22]
	028 Move V0, [X22+16]
	029 Move X0, [X23]
	030 Move [X31+80], X8
	031 Move [X31+48], V1
	032 Move [X31+56], V0
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move V0, [X31+48]
	038 Move V1, [X31+64]
	039 Move X8, [X31+80]
	040 Add X2, X31, 0
	041 Move S2, W31
	042 Move [X31], V0
	043 Move [X31+8], V1
	044 Move S0, W31
	045 Move S1, W31
	046 Move S3, W31
	047 Move X0, X21
	048 Move X1, X20
	049 Move W3, W19
	050 Move [X31+32], X8
	051 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4
	052 Move X20, [X31+144]
	053 Move X19, [X31+152]
	054 Move X22, [X31+128]
	055 Move X21, [X31+136]
	056 Move X24, [X31+112]
	057 Move X23, [X31+120]
	058 Move X30, [X31+96]
	059 Add X31, X31, 160
	060 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x039E7B8C MOV X2, X31
	0x039E7B90 BL 0x3C354F8
	0x039E7B94 TBZ X0, 0x0, 0x39E7C30
	0x039E7B98 CBZ X25, 0x39E7CF8
	0x039E7B9C LDR X0, [X27]
	0x039E7BA0 LDR X26, [X25 + 0x18]
	0x039E7BA4 LDR W8, [X0 + 0xE0]
	0x039E7BA8 CBNZ W8, 0x39E7BB0
	0x039E7BAC BL 0x1C16DFC
	0x039E7BB0 MOV X0, X26
	0x039E7BB4 MOV X1, X31
	0x039E7BB8 MOV X2, X31
	0x039E7BBC BL 0x3C354F8
	0x039E7BC0 TBZ X0, 0x0, 0x39E7C14
	0x039E7BC4 LDR X0, [X23 + 0x18]
	0x039E7BC8 CBZ X0, 0x39E7CF8
	0x039E7BCC LDR X8, [X0]
	0x039E7BD0 LDP X9, X1, [X8 + 0x188]
	0x039E7BD4 BLR X9
	0x039E7BD8 LDR X0, [X23 + 0x18]
	0x039E7BDC CBZ X0, 0x39E7CF8
	0x039E7BE0 LDR X8, [X0]
	0x039E7BE4 LDP X9, X1, [X8 + 0x1A8]
	0x039E7BE8 BLR X9
	0x039E7BEC LDR X0, [X25 + 0x18]
	0x039E7BF0 CBZ X0, 0x39E7CF8
	0x039E7BF4 LDR X8, [X0]
	0x039E7BF8 LDP X9, X1, [X8 + 0x188]
	0x039E7BFC BLR X9
	0x039E7C00 LDR X0, [X25 + 0x18]
	0x039E7C04 CBZ X0, 0x39E7CF8
	0x039E7C08 LDR X8, [X0]
	0x039E7C0C LDP X9, X1, [X8 + 0x1A8]
	0x039E7C10 BLR X9
	0x039E7C14 LDR X8, [X23 + 0x48]
	0x039E7C18 LDUR V0, [X23 + 0x38]
	0x039E7C1C LDUR V1, [X23 + 0x28]
	0x039E7C20 ADD X26, X31, 0x90
	0x039E7C24 STR X8, [X31 + 0xB0]
	0x039E7C28 STP V1, V0, [X31 + 0x90]
	0x039E7C2C B 0x39E7C4C
	0x039E7C30 LDR X8, [X23 + 0x48]
	0x039E7C34 LDUR V0, [X23 + 0x38]
	0x039E7C38 LDUR V1, [X23 + 0x28]
	0x039E7C3C STR X8, [X31 + 0xB0]
	0x039E7C40 STP V1, V0, [X31 + 0x90]
	0x039E7C44 CBZ X25, 0x39E7CF8
	0x039E7C48 ADD X26, X31, 0x90
	0x039E7C4C ADRP X8, 0x734000
	0x039E7C50 LDR X8, [X8 + 0x8F8]
	0x039E7C54 LDR X9, [X25 + 0x48]
	0x039E7C58 LDUR V0, [X25 + 0x38]
	0x039E7C5C LDUR V1, [X25 + 0x28]
	0x039E7C60 LDR X0, [X8]
	0x039E7C64 STR X9, [X31 + 0x80]
	0x039E7C68 STP V1, V0, [X31 + 0x60]
	0x039E7C6C LDR W8, [X0 + 0xE0]
	0x039E7C70 CBNZ W8, 0x39E7C78
	0x039E7C74 BL 0x1C16DFC
	0x039E7C78 LDP V0, V1, [X26]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X23, 0x9FB000
	013 Move W8, [X23+3588]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move W19, W3
	019 Move X22, X2
	020 Move X21, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x735000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3588], W8
	031 Move X8, [X22+32]
	032 Move V1, [X22]
	033 Move V0, [X22+16]
	034 Move [X31+80], X8
	035 Move [X31+48], V1
	036 Move [X31+56], V0
	037 Compare X20, 0
	038 JumpIfEqual {83}
	039 Move V0, [X31+48]
	040 Move V1, [X31+64]
	041 Move X8, [X31+80]
	042 Move X22, 0x735000
	043 Move X22, [X22+2296]
	044 Add X2, X31, 0
	045 Move TEMP, 0
	046 Not TEMP
	047 Move W4, TEMP
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W5, TEMP
	051 Move X0, X20
	052 Move X1, X21
	053 Move W3, W31
	054 Move X6, X31
	055 Move [X31], V0
	056 Move [X31+8], V1
	057 Move [X31+32], X8
	058 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X20
	065 Move W1, W19
	066 Move V0, V11
	067 Move V1, V10
	068 Move V2, V9
	069 Move V3, V8
	070 Call CoreUtils.ClearRenderTarget, X0, X1, X2
	071 Move X20, [X31+160]
	072 Move X19, [X31+168]
	073 Move X22, [X31+144]
	074 Move X21, [X31+152]
	075 Move X30, [X31+128]
	076 Move X23, [X31+136]
	077 Move D9, [X31+112]
	078 Move D8, [X31+120]
	079 Move D11, [X31+96]
	080 Move D10, [X31+104]
	081 Add X31, X31, 176
	082 Return 
	083 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x039E7D34 TBNZ X8, 0x0, 0x39E7D58
	0x039E7D38 ADRP X0, 0x734000
	0x039E7D3C LDR X0, [X0 + 0x8F8]
	0x039E7D40 BL 0x1C16CF4
	0x039E7D44 ADRP X0, 0x70C000
	0x039E7D48 LDR X0, [X0 + 0x598]
	0x039E7D4C BL 0x1C16CF4
	0x039E7D50 MOVZ W8, 0x1
	0x039E7D54 STRB W8, [X26 + 0xE12]
	0x039E7D58 CBZ X24, 0x39E7E64
	0x039E7D5C ADRP X27, 0x70C000
	0x039E7D60 LDR X27, [X27 + 0x598]
	0x039E7D64 LDR X26, [X24 + 0x18]
	0x039E7D68 LDR X0, [X27]
	0x039E7D6C LDR W8, [X0 + 0xE0]
	0x039E7D70 CBNZ W8, 0x39E7D78
	0x039E7D74 BL 0x1C16DFC
	0x039E7D78 MOV X0, X26
	0x039E7D7C MOV X1, X31
	0x039E7D80 MOV X2, X31
	0x039E7D84 BL 0x3C354F8
	0x039E7D88 TBZ X0, 0x0, 0x39E7E08
	0x039E7D8C CBZ X23, 0x39E7E64
	0x039E7D90 LDR X0, [X27]
	0x039E7D94 LDR X26, [X23 + 0x18]
	0x039E7D98 LDR W8, [X0 + 0xE0]
	0x039E7D9C CBNZ W8, 0x39E7DA4
	0x039E7DA0 BL 0x1C16DFC
	0x039E7DA4 MOV X0, X26
	0x039E7DA8 MOV X1, X31
	0x039E7DAC MOV X2, X31
	0x039E7DB0 BL 0x3C354F8
	0x039E7DB4 TBZ X0, 0x0, 0x39E7E08
	0x039E7DB8 LDR X0, [X24 + 0x18]
	0x039E7DBC CBZ X0, 0x39E7E64
	0x039E7DC0 LDR X8, [X0]
	0x039E7DC4 LDP X9, X1, [X8 + 0x188]
	0x039E7DC8 BLR X9
	0x039E7DCC LDR X0, [X24 + 0x18]
	0x039E7DD0 CBZ X0, 0x39E7E64
	0x039E7DD4 LDR X8, [X0]
	0x039E7DD8 LDP X9, X1, [X8 + 0x1A8]
	0x039E7DDC BLR X9
	0x039E7DE0 LDR X0, [X23 + 0x18]
	0x039E7DE4 CBZ X0, 0x39E7E64
	0x039E7DE8 LDR X8, [X0]
	0x039E7DEC LDP X9, X1, [X8 + 0x188]
	0x039E7DF0 BLR X9
	0x039E7DF4 LDR X0, [X23 + 0x18]
	0x039E7DF8 CBZ X0, 0x39E7E64
	0x039E7DFC LDR X8, [X0]
	0x039E7E00 LDP X9, X1, [X8 + 0x1A8]
	0x039E7E04 BLR X9
	0x039E7E08 ADRP X8, 0x734000
	0x039E7E0C LDR X8, [X8 + 0x8F8]
	0x039E7E10 LDR X0, [X8]
	0x039E7E14 LDR W8, [X0 + 0xE0]
	0x039E7E18 CBNZ W8, 0x39E7E20
	0x039E7E1C BL 0x1C16DFC
	0x039E7E20 MOV X0, X25
	0x039E7E24 MOV X1, X24

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X24, 0x9FB000
	014 Move W8, [X24+3589]
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move W19, W4
	020 Move W21, W3
	021 Move W22, W2
	022 Move X23, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x735000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+3589], W8
	033 Move X8, [X23+32]
	034 Move V1, [X23]
	035 Move V0, [X23+16]
	036 Move [X31+80], X8
	037 Move [X31+48], V1
	038 Move [X31+56], V0
	039 Compare X20, 0
	040 JumpIfEqual {80}
	041 Move V0, [X31+48]
	042 Move V1, [X31+64]
	043 Move X8, [X31+80]
	044 Move X23, 0x735000
	045 Move X23, [X23+2296]
	046 Add X1, X31, 0
	047 Move X0, X20
	048 Move W2, W22
	049 Move W3, W21
	050 Move X4, X31
	051 Move [X31], V0
	052 Move [X31+8], V1
	053 Move [X31+32], X8
	054 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move W1, W19
	062 Move V0, V11
	063 Move V1, V10
	064 Move V2, V9
	065 Move V3, V8
	066 Call CoreUtils.ClearRenderTarget, X0, X1, X2
	067 Move X20, [X31+176]
	068 Move X19, [X31+184]
	069 Move X22, [X31+160]
	070 Move X21, [X31+168]
	071 Move X24, [X31+144]
	072 Move X23, [X31+152]
	073 Move X30, [X31+128]
	074 Move D9, [X31+112]
	075 Move D8, [X31+120]
	076 Move D11, [X31+96]
	077 Move D10, [X31+104]
	078 Add X31, X31, 192
	079 Return 
	080 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E7E28 MOV X2, X23
	0x039E7E2C MOV W3, W22
	0x039E7E30 MOV W4, W21
	0x039E7E34 MOV W5, W20
	0x039E7E38 MOV W6, W19
	0x039E7E3C LDP X20, X19, [X31 + 0x40]
	0x039E7E40 LDP X22, X21, [X31 + 0x30]
	0x039E7E44 LDP X24, X23, [X31 + 0x20]
	0x039E7E48 LDP X26, X25, [X31 + 0x10]
	0x039E7E4C FMOV S0, W31
	0x039E7E50 FMOV S1, W31
	0x039E7E54 FMOV S2, W31
	0x039E7E58 FMOV S3, W31
	0x039E7E5C LDP X30, X27, [X31], #0x50
	0x039E7E60 B 0x39E7AE8
	0x039E7E64 BL 0x1C16F20
	0x039E7E68 SUB X31, X31, 0x160
	0x039E7E6C STP D11, D10, [X31 + 0xE0]
	0x039E7E70 STP D9, D8, [X31 + 0xF0]
	0x039E7E74 STP X29, X30, [X31 + 0x100]
	0x039E7E78 STP X28, X27, [X31 + 0x110]
	0x039E7E7C STP X26, X25, [X31 + 0x120]
	0x039E7E80 STP X24, X23, [X31 + 0x130]
	0x039E7E84 STP X22, X21, [X31 + 0x140]
	0x039E7E88 STP X20, X19, [X31 + 0x150]
	0x039E7E8C ADRP X27, 0x9FA000
	0x039E7E90 LDRB W8, [X27 + 0xE15]
	0x039E7E94 MOV V8.16B, V3.16B
	0x039E7E98 MOV V9.16B, V2.16B
	0x039E7E9C MOV V10.16B, V1.16B
	0x039E7EA0 MOV V11.16B, V0.16B
	0x039E7EA4 MOV W19, W7
	0x039E7EA8 MOV W21, W6
	0x039E7EAC MOV W22, W5
	0x039E7EB0 MOV X26, X4
	0x039E7EB4 MOV W24, W3
	0x039E7EB8 MOV W25, W2
	0x039E7EBC MOV X20, X1
	0x039E7EC0 MOV X23, X0
	0x039E7EC4 TBNZ X8, 0x0, 0x39E7EE8
	0x039E7EC8 ADRP X0, 0x734000
	0x039E7ECC LDR X0, [X0 + 0x8F8]
	0x039E7ED0 BL 0x1C16CF4
	0x039E7ED4 ADRP X0, 0x70C000
	0x039E7ED8 LDR X0, [X0 + 0x598]
	0x039E7EDC BL 0x1C16CF4
	0x039E7EE0 MOVZ W8, 0x1
	0x039E7EE4 STRB W8, [X27 + 0xE15]
	0x039E7EE8 CBZ X20, 0x39E809C
	0x039E7EEC ADRP X28, 0x70C000
	0x039E7EF0 LDR X28, [X28 + 0x598]
	0x039E7EF4 LDR X27, [X20 + 0x18]
	0x039E7EF8 LDR X0, [X28]
	0x039E7EFC LDR W8, [X0 + 0xE0]
	0x039E7F00 CBNZ W8, 0x39E7F08
	0x039E7F04 BL 0x1C16DFC
	0x039E7F08 MOV X0, X27
	0x039E7F0C MOV X1, X31
	0x039E7F10 MOV X2, X31
	0x039E7F14 BL 0x3C354F8
	0x039E7F18 TBZ X0, 0x0, 0x39E7FB4
	0x039E7F1C CBZ X26, 0x39E809C
	0x039E7F20 LDR X0, [X28]
	0x039E7F24 LDR X27, [X26 + 0x18]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 Move X26, 0x9FB000
	013 Move X27, 0x735000
	014 Move W8, [X26+3590]
	015 Move X27, [X27+2296]
	016 Move W25, W6
	017 Move W23, W5
	018 Move W24, W4
	019 Move W19, W3
	020 Move W20, W2
	021 Move X22, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x735000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+3590], W8
	032 Move X0, [X27]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X9, [X22+32]
	038 Move V0, [X22]
	039 Move V1, [X22+16]
	040 Add W31, W25, 1
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W8, TEMP
	044 NotImplemented "Instruction CCMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Add X1, X31, 96
	047 Move X0, X22
	048 Move W2, W24
	049 Move W3, W23
	050 Move X5, X31
	051 Move [X31+128], X9
	052 Move [X31+96], V0
	053 Move [X31+104], V1
	054 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	055 Move X8, [X22+32]
	056 Move V1, [X22]
	057 Move V0, [X22+16]
	058 Move [X31+80], X8
	059 Move [X31+48], V1
	060 Move [X31+56], V0
	061 Compare X21, 0
	062 JumpIfEqual {87}
	063 Move V0, [X31+48]
	064 Move V1, [X31+64]
	065 Move X8, [X31+80]
	066 Add X1, X31, 0
	067 Move X0, X21
	068 Move W2, W20
	069 Move W3, W19
	070 Move X4, X31
	071 Move [X31], V0
	072 Move [X31+8], V1
	073 Move [X31+32], X8
	074 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3
	075 Move X20, [X31+208]
	076 Move X19, [X31+216]
	077 Move X22, [X31+192]
	078 Move X21, [X31+200]
	079 Move X24, [X31+176]
	080 Move X23, [X31+184]
	081 Move X26, [X31+160]
	082 Move X25, [X31+168]
	083 Move X30, [X31+144]
	084 Move X27, [X31+152]
	085 Add X31, X31, 224
	086 Return 
	087 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E7F28 LDR W8, [X0 + 0xE0]
	0x039E7F2C CBNZ W8, 0x39E7F34
	0x039E7F30 BL 0x1C16DFC
	0x039E7F34 MOV X0, X27
	0x039E7F38 MOV X1, X31
	0x039E7F3C MOV X2, X31
	0x039E7F40 BL 0x3C354F8
	0x039E7F44 TBZ X0, 0x0, 0x39E7F98
	0x039E7F48 LDR X0, [X20 + 0x18]
	0x039E7F4C CBZ X0, 0x39E809C
	0x039E7F50 LDR X8, [X0]
	0x039E7F54 LDP X9, X1, [X8 + 0x188]
	0x039E7F58 BLR X9
	0x039E7F5C LDR X0, [X20 + 0x18]
	0x039E7F60 CBZ X0, 0x39E809C
	0x039E7F64 LDR X8, [X0]
	0x039E7F68 LDP X9, X1, [X8 + 0x1A8]
	0x039E7F6C BLR X9
	0x039E7F70 LDR X0, [X26 + 0x18]
	0x039E7F74 CBZ X0, 0x39E809C
	0x039E7F78 LDR X8, [X0]
	0x039E7F7C LDP X9, X1, [X8 + 0x188]
	0x039E7F80 BLR X9
	0x039E7F84 LDR X0, [X26 + 0x18]
	0x039E7F88 CBZ X0, 0x39E809C
	0x039E7F8C LDR X8, [X0]
	0x039E7F90 LDP X9, X1, [X8 + 0x1A8]
	0x039E7F94 BLR X9
	0x039E7F98 LDR X8, [X20 + 0x48]
	0x039E7F9C LDUR V0, [X20 + 0x38]
	0x039E7FA0 LDUR V1, [X20 + 0x28]
	0x039E7FA4 ADD X28, X31, 0xB0
	0x039E7FA8 STR X8, [X31 + 0xD0]
	0x039E7FAC STP V1, V0, [X31 + 0xB0]
	0x039E7FB0 B 0x39E7FD0
	0x039E7FB4 LDR X8, [X20 + 0x48]
	0x039E7FB8 LDUR V0, [X20 + 0x38]
	0x039E7FBC LDUR V1, [X20 + 0x28]
	0x039E7FC0 STR X8, [X31 + 0xD0]
	0x039E7FC4 STP V1, V0, [X31 + 0xB0]
	0x039E7FC8 CBZ X26, 0x39E809C
	0x039E7FCC ADD X28, X31, 0xB0
	0x039E7FD0 ADRP X8, 0x734000
	0x039E7FD4 LDR X8, [X8 + 0x8F8]
	0x039E7FD8 LDR X9, [X26 + 0x48]
	0x039E7FDC LDUR V0, [X26 + 0x38]
	0x039E7FE0 LDUR V1, [X26 + 0x28]
	0x039E7FE4 LDR X0, [X8]
	0x039E7FE8 STR X9, [X31 + 0xA0]
	0x039E7FEC LDR W27, [X31 + 0x160]
	0x039E7FF0 STP V1, V0, [X31 + 0x80]
	0x039E7FF4 LDR W29, [X31 + 0x170]
	0x039E7FF8 LDR W8, [X0 + 0xE0]
	0x039E7FFC LDR W26, [X31 + 0x168]
	0x039E8000 CBNZ W8, 0x39E8008
	0x039E8004 BL 0x1C16DFC
	0x039E8008 LDP V0, V1, [X28]
	0x039E800C LDR X8, [X28 + 0x20]
	0x039E8010 LDP V2, V3, [X31 + 0x80]
	0x039E8014 LDR X9, [X31 + 0xA0]
	0x039E8018 ADD X1, X31, 0x50
	0x039E801C ADD X4, X31, 0x20
	0x039E8020 MOV X0, X23
	0x039E8024 MOV W2, W25
	0x039E8028 MOV W3, W24
	0x039E802C MOV W5, W22
	0x039E8030 MOV W6, W21
	0x039E8034 MOV W7, W27
	0x039E8038 STR X8, [X31 + 0x70]
	0x039E803C STP V0, V1, [X31 + 0x50]
	0x039E8040 STP V2, V3, [X31 + 0x20]
	0x039E8044 STR X9, [X31 + 0x40]
	0x039E8048 STR W29, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X28
	008 Move [X31+152], X27
	009 Move [X31+160], X26
	010 Move [X31+168], X25
	011 Move [X31+176], X24
	012 Move [X31+184], X23
	013 Move [X31+192], X22
	014 Move [X31+200], X21
	015 Move [X31+208], X20
	016 Move [X31+216], X19
	017 Move X28, 0x9FB000
	018 Move X27, 0x735000
	019 Move W8, [X28+3591]
	020 Move X27, [X27+2296]
	021 Move W26, W7
	022 Move W23, W6
	023 Move W25, W5
	024 Move V8, V3
	025 Move V9, V2
	026 Move V10, V1
	027 Move V11, V0
	028 Move W19, W4
	029 Move W20, W3
	030 Move W21, W2
	031 Move X24, X1
	032 Move X22, X0
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {42}
	037 Move X0, 0x735000
	038 Move X0, [X0+2296]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X28+3591], W8
	042 Move X0, [X27]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X9, [X24+32]
	048 Move V0, [X24]
	049 Move V1, [X24+16]
	050 Add W31, W26, 1
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W8, TEMP
	054 NotImplemented "Instruction CCMP not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Add X1, X31, 48
	057 Move X0, X24
	058 Move W2, W25
	059 Move W3, W23
	060 Move X5, X31
	061 Move [X31+80], X9
	062 Move [X31+48], V0
	063 Move [X31+56], V1
	064 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	065 Move V1, [X24]
	066 Move V0, [X24+16]
	067 Move X8, [X24+32]
	068 Add X1, X31, 0
	069 Move X0, X22
	070 Move [X31], V1
	071 Move [X31+8], V0
	072 Move W2, W21
	073 Move W3, W20
	074 Move W4, W19
	075 Move V0, V11
	076 Move V1, V10
	077 Move V2, V9
	078 Move V3, V8
	079 Move [X31+32], X8
	080 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	081 Move X20, [X31+208]
	082 Move X19, [X31+216]
	083 Move X22, [X31+192]
	084 Move X21, [X31+200]
	085 Move X24, [X31+176]
	086 Move X23, [X31+184]
	087 Move X26, [X31+160]
	088 Move X25, [X31+168]
	089 Move X28, [X31+144]
	090 Move X27, [X31+152]
	091 Move X30, [X31+128]
	092 Move D9, [X31+112]
	093 Move D8, [X31+120]
	094 Move D11, [X31+96]
	095 Move D10, [X31+104]
	096 Add X31, X31, 224
	097 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Rendering.ClearFlag clearFlag)

Disassembly:
	0x039E804C STR W26, [X31]
	0x039E8050 BL 0x39E7248
	0x039E8054 MOV X0, X23
	0x039E8058 MOV X1, X20
	0x039E805C MOV W2, W19
	0x039E8060 MOV V0.16B, V11.16B
	0x039E8064 MOV V1.16B, V10.16B
	0x039E8068 MOV V2.16B, V9.16B
	0x039E806C MOV V3.16B, V8.16B
	0x039E8070 BL 0x39E7748
	0x039E8074 LDP X20, X19, [X31 + 0x150]
	0x039E8078 LDP X22, X21, [X31 + 0x140]
	0x039E807C LDP X24, X23, [X31 + 0x130]
	0x039E8080 LDP X26, X25, [X31 + 0x120]
	0x039E8084 LDP X28, X27, [X31 + 0x110]
	0x039E8088 LDP X29, X30, [X31 + 0x100]
	0x039E808C LDP D9, D8, [X31 + 0xF0]
	0x039E8090 LDP D11, D10, [X31 + 0xE0]
	0x039E8094 ADD X31, X31, 0x160
	0x039E8098 RET
	0x039E809C BL 0x1C16F20
	0x039E80A0 SUB X31, X31, 0x90
	0x039E80A4 STR X30, [X31 + 0x60]
	0x039E80A8 STP X22, X21, [X31 + 0x70]
	0x039E80AC STP X20, X19, [X31 + 0x80]
	0x039E80B0 ADRP X22, 0x9F9000
	0x039E80B4 LDRB W8, [X22 + 0xE16]
	0x039E80B8 MOV X19, X2
	0x039E80BC MOV X20, X1
	0x039E80C0 MOV X21, X0
	0x039E80C4 TBNZ X8, 0x0, 0x39E80DC
	0x039E80C8 ADRP X0, 0x733000
	0x039E80CC LDR X0, [X0 + 0x8F8]
	0x039E80D0 BL 0x1C16CF4
	0x039E80D4 MOVZ W8, 0x1
	0x039E80D8 STRB W8, [X22 + 0xE16]
	0x039E80DC CBZ X19, 0x39E815C
	0x039E80E0 ADRP X8, 0x733000
	0x039E80E4 LDR X8, [X8 + 0x8F8]
	0x039E80E8 LDR X9, [X19 + 0x48]
	0x039E80EC LDUR V0, [X19 + 0x38]
	0x039E80F0 LDUR V1, [X19 + 0x28]
	0x039E80F4 LDR X0, [X8]
	0x039E80F8 STR X9, [X31 + 0x50]
	0x039E80FC STP V1, V0, [X31 + 0x30]
	0x039E8100 LDR W8, [X0 + 0xE0]
	0x039E8104 CBNZ W8, 0x39E810C
	0x039E8108 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X25, 0x9FA000
	011 Move X24, 0x734000
	012 Move W8, [X25+3592]
	013 Move X24, [X24+2296]
	014 Move W19, W4
	015 Move W20, W3
	016 Move W21, W2
	017 Move X23, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x734000
	024 Move X0, [X0+2296]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+3592], W8
	028 Move X8, [X23+32]
	029 Move V1, [X23]
	030 Move V0, [X23+16]
	031 Move X0, [X24]
	032 Move [X31+80], X8
	033 Move [X31+48], V1
	034 Move [X31+56], V0
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move V0, [X31+48]
	040 Move V1, [X31+64]
	041 Move X8, [X31+80]
	042 Add X1, X31, 0
	043 Move S2, W31
	044 Move [X31], V0
	045 Move [X31+8], V1
	046 Move S0, W31
	047 Move S1, W31
	048 Move S3, W31
	049 Move X0, X22
	050 Move W2, W21
	051 Move W3, W20
	052 Move W4, W19
	053 Move [X31+32], X8
	054 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	055 Move X20, [X31+144]
	056 Move X19, [X31+152]
	057 Move X22, [X31+128]
	058 Move X21, [X31+136]
	059 Move X24, [X31+112]
	060 Move X23, [X31+120]
	061 Move X30, [X31+96]
	062 Move X25, [X31+104]
	063 Add X31, X31, 160
	064 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x039E810C LDP V0, V1, [X31 + 0x30]
	0x039E8110 LDR X8, [X31 + 0x50]
	0x039E8114 ADD X2, X31, 0x0
	0x039E8118 FMOV S2, W31
	0x039E811C STP V0, V1, [X31]
	0x039E8120 FMOV S0, W31
	0x039E8124 FMOV S1, W31
	0x039E8128 FMOV S3, W31
	0x039E812C MOV X0, X21
	0x039E8130 MOV X1, X20
	0x039E8134 MOV W3, W31
	0x039E8138 STR X8, [X31 + 0x20]
	0x039E813C BL 0x39E6B8C
	0x039E8140 MOV X0, X21
	0x039E8144 MOV X1, X19
	0x039E8148 LDP X20, X19, [X31 + 0x80]
	0x039E814C LDP X22, X21, [X31 + 0x70]
	0x039E8150 LDR X30, [X31 + 0x60]
	0x039E8154 ADD X31, X31, 0x90
	0x039E8158 B 0x39E77EC
	0x039E815C BL 0x1C16F20
	0x039E8160 SUB X31, X31, 0x90
	0x039E8164 STP X30, X23, [X31 + 0x60]
	0x039E8168 STP X22, X21, [X31 + 0x70]
	0x039E816C STP X20, X19, [X31 + 0x80]
	0x039E8170 ADRP X23, 0x9F9000
	0x039E8174 LDRB W8, [X23 + 0xE17]
	0x039E8178 MOV W19, W3
	0x039E817C MOV X20, X2
	0x039E8180 MOV X22, X1
	0x039E8184 MOV X21, X0
	0x039E8188 TBNZ X8, 0x0, 0x39E81A0
	0x039E818C ADRP X0, 0x733000
	0x039E8190 LDR X0, [X0 + 0x8F8]
	0x039E8194 BL 0x1C16CF4
	0x039E8198 MOVZ W8, 0x1
	0x039E819C STRB W8, [X23 + 0xE17]
	0x039E81A0 CBZ X20, 0x39E8220
	0x039E81A4 ADRP X8, 0x733000
	0x039E81A8 LDR X8, [X8 + 0x8F8]
	0x039E81AC LDR X9, [X20 + 0x48]
	0x039E81B0 LDUR V0, [X20 + 0x38]
	0x039E81B4 LDUR V1, [X20 + 0x28]
	0x039E81B8 LDR X0, [X8]
	0x039E81BC STR X9, [X31 + 0x50]
	0x039E81C0 STP V1, V0, [X31 + 0x30]
	0x039E81C4 LDR W8, [X0 + 0xE0]
	0x039E81C8 CBNZ W8, 0x39E81D0
	0x039E81CC BL 0x1C16DFC
	0x039E81D0 LDP V0, V1, [X31 + 0x30]
	0x039E81D4 LDR X8, [X31 + 0x50]
	0x039E81D8 ADD X2, X31, 0x0
	0x039E81DC MOV X0, X21
	0x039E81E0 MOV X1, X22
	0x039E81E4 STP V0, V1, [X31]
	0x039E81E8 STR X8, [X31 + 0x20]
	0x039E81EC BL 0x39E6AE0
	0x039E81F0 MOV X0, X21
	0x039E81F4 MOV X1, X20
	0x039E81F8 MOV W2, W19
	0x039E81FC LDP X20, X19, [X31 + 0x80]
	0x039E8200 LDP X22, X21, [X31 + 0x70]
	0x039E8204 LDP X30, X23, [X31 + 0x60]
	0x039E8208 FMOV S0, W31
	0x039E820C FMOV S1, W31
	0x039E8210 FMOV S2, W31
	0x039E8214 FMOV S3, W31
	0x039E8218 ADD X31, X31, 0x90
	0x039E821C B 0x39E7748
	0x039E8220 BL 0x1C16F20
	0x039E8224 SUB X31, X31, 0xB0
	0x039E8228 STP D11, D10, [X31 + 0x60]
	0x039E822C STP D9, D8, [X31 + 0x70]
	0x039E8230 STP X30, X23, [X31 + 0x80]
	0x039E8234 STP X22, X21, [X31 + 0x90]
	0x039E8238 STP X20, X19, [X31 + 0xA0]
	0x039E823C ADRP X23, 0x9F9000
	0x039E8240 LDRB W8, [X23 + 0xE18]
	0x039E8244 MOV V8.16B, V3.16B

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+192], D11
	003 Move [X31+200], D10
	004 Move [X31+208], D9
	005 Move [X31+216], D8
	006 Move [X31+224], X29
	007 Move [X31+240], X30
	008 Move [X31+248], X27
	009 Move [X31+256], X26
	010 Move [X31+264], X25
	011 Move [X31+272], X24
	012 Move [X31+280], X23
	013 Move [X31+288], X22
	014 Move [X31+296], X21
	015 Move [X31+304], X20
	016 Move [X31+312], X19
	017 Move X27, 0x9FA000
	018 Move W8, [X27+3593]
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move W19, W7
	024 Move W21, W6
	025 Move W22, W5
	026 Move X25, X4
	027 Move W23, W3
	028 Move W24, W2
	029 Move X26, X1
	030 Move X20, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x734000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X27+3593], W8
	040 Move X8, [X26+32]
	041 Move V1, [X26]
	042 Move V0, [X26+16]
	043 Move [X31+176], X8
	044 Move [X31+144], V1
	045 Move [X31+152], V0
	046 Move X8, [X25+32]
	047 Move V1, [X25]
	048 Move V0, [X25+16]
	049 Move [X31+128], X8
	050 Move [X31+96], V1
	051 Move [X31+104], V0
	052 Compare X20, 0
	053 JumpIfEqual {106}
	054 Move X25, 0x734000
	055 Move X25, [X25+2296]
	056 Move V0, [X31+144]
	057 Move V1, [X31+160]
	058 Move X8, [X31+176]
	059 Move V2, [X31+96]
	060 Move V3, [X31+112]
	061 Move X9, [X31+128]
	062 Add X1, X31, 48
	063 Add X4, X31, 0
	064 Move X0, X20
	065 Move W2, W24
	066 Move W3, W23
	067 Move W5, W22
	068 Move W6, W21
	069 Move X7, X31
	070 Move [X31+48], V0
	071 Move [X31+56], V1
	072 Move [X31+80], X8
	073 Move [X31], V2
	074 Move [X31+8], V3
	075 Move [X31+32], X9
	076 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	077 Move X0, [X25]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X20
	083 Move W1, W19
	084 Move V0, V11
	085 Move V1, V10
	086 Move V2, V9
	087 Move V3, V8
	088 Call CoreUtils.ClearRenderTarget, X0, X1, X2
	089 Move X20, [X31+304]
	090 Move X19, [X31+312]
	091 Move X22, [X31+288]
	092 Move X21, [X31+296]
	093 Move X24, [X31+272]
	094 Move X23, [X31+280]
	095 Move X26, [X31+256]
	096 Move X25, [X31+264]
	097 Move X30, [X31+240]
	098 Move X27, [X31+248]
	099 Move X29, [X31+224]
	100 Move D9, [X31+208]
	101 Move D8, [X31+216]
	102 Move D11, [X31+192]
	103 Move D10, [X31+200]
	104 Add X31, X31, 320
	105 Return 
	106 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E8248 MOV V9.16B, V2.16B
	0x039E824C MOV V10.16B, V1.16B
	0x039E8250 MOV V11.16B, V0.16B
	0x039E8254 MOV W19, W3
	0x039E8258 MOV X20, X2
	0x039E825C MOV X22, X1
	0x039E8260 MOV X21, X0
	0x039E8264 TBNZ X8, 0x0, 0x39E827C
	0x039E8268 ADRP X0, 0x733000
	0x039E826C LDR X0, [X0 + 0x8F8]
	0x039E8270 BL 0x1C16CF4
	0x039E8274 MOVZ W8, 0x1
	0x039E8278 STRB W8, [X23 + 0xE18]
	0x039E827C CBZ X20, 0x39E831C
	0x039E8280 LDR X8, [X20 + 0x48]
	0x039E8284 LDUR V0, [X20 + 0x38]
	0x039E8288 LDUR V1, [X20 + 0x28]
	0x039E828C STR X8, [X31 + 0x50]
	0x039E8290 STP V1, V0, [X31 + 0x30]
	0x039E8294 CBZ X21, 0x39E831C
	0x039E8298 LDP V0, V1, [X31 + 0x30]
	0x039E829C LDR X8, [X31 + 0x50]
	0x039E82A0 ADRP X23, 0x733000
	0x039E82A4 LDR X23, [X23 + 0x8F8]
	0x039E82A8 ADD X2, X31, 0x0
	0x039E82AC MOVN W4, 0x0
	0x039E82B0 MOVN W5, 0x0
	0x039E82B4 MOV X0, X21
	0x039E82B8 MOV X1, X22
	0x039E82BC MOV W3, W31
	0x039E82C0 MOV X6, X31
	0x039E82C4 STP V0, V1, [X31]
	0x039E82C8 STR X8, [X31 + 0x20]
	0x039E82CC BL 0x3C4E2C0
	0x039E82D0 LDR X0, [X23]
	0x039E82D4 LDR W8, [X0 + 0xE0]
	0x039E82D8 CBNZ W8, 0x39E82E0
	0x039E82DC BL 0x1C16DFC
	0x039E82E0 MOV X0, X21
	0x039E82E4 MOV X1, X20
	0x039E82E8 MOV W2, W19
	0x039E82EC MOV V0.16B, V11.16B
	0x039E82F0 MOV V1.16B, V10.16B
	0x039E82F4 MOV V2.16B, V9.16B
	0x039E82F8 MOV V3.16B, V8.16B
	0x039E82FC BL 0x39E7748
	0x039E8300 LDP X20, X19, [X31 + 0xA0]
	0x039E8304 LDP X22, X21, [X31 + 0x90]
	0x039E8308 LDP X30, X23, [X31 + 0x80]
	0x039E830C LDP D9, D8, [X31 + 0x70]
	0x039E8310 LDP D11, D10, [X31 + 0x60]
	0x039E8314 ADD X31, X31, 0xB0
	0x039E8318 RET
	0x039E831C BL 0x1C16F20
	0x039E8320 SUB X31, X31, 0x90
	0x039E8324 STP X29, X30, [X31 + 0x30]
	0x039E8328 STP X28, X27, [X31 + 0x40]
	0x039E832C STP X26, X25, [X31 + 0x50]
	0x039E8330 STP X24, X23, [X31 + 0x60]
	0x039E8334 STP X22, X21, [X31 + 0x70]
	0x039E8338 STP X20, X19, [X31 + 0x80]
	0x039E833C ADRP X28, 0x9F9000
	0x039E8340 ADRP X29, 0x76B000
	0x039E8344 ADRP X27, 0x733000
	0x039E8348 LDRB W8, [X28 + 0xE19]
	0x039E834C LDR X29, [X29 + 0x138]
	0x039E8350 LDR X27, [X27 + 0x8F8]
	0x039E8354 MOV W20, W7
	0x039E8358 MOV W21, W6
	0x039E835C MOV W23, W5
	0x039E8360 MOV X19, X4
	0x039E8364 MOV W26, W3
	0x039E8368 MOV W22, W2
	0x039E836C MOV W24, W1
	0x039E8370 MOV W25, W0
	0x039E8374 TBNZ X8, 0x0, 0x39E8398
	0x039E8378 ADRP X0, 0x733000
	0x039E837C LDR X0, [X0 + 0x8F8]
	0x039E8380 BL 0x1C16CF4
	0x039E8384 ADRP X0, 0x76B000
	0x039E8388 LDR X0, [X0 + 0x138]
	0x039E838C BL 0x1C16CF4
	0x039E8390 MOVZ W8, 0x1
	0x039E8394 STRB W8, [X28 + 0xE19]
	0x039E8398 LDR X8, [X29]
	0x039E839C MOVN X9, 0x0
	0x039E83A0 ADD X0, X31, 0x18
	0x039E83A4 MOV X1, X31
	0x039E83A8 STP X8, X9, [X31 + 0x18]
	0x039E83AC STR W26, [X31 + 0x28]
	0x039E83B0 BL 0x33B162C
	0x039E83B4 LDR X8, [X27]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X28
	005 Move [X31+328], X27
	006 Move [X31+336], X26
	007 Move [X31+344], X25
	008 Move [X31+352], X24
	009 Move [X31+360], X23
	010 Move [X31+368], X22
	011 Move [X31+376], X21
	012 Move [X31+384], X20
	013 Move [X31+392], X19
	014 Move X29, 0x9FA000
	015 Move X28, 0x734000
	016 Move W8, [X29+3594]
	017 Move W27, [X31+400]
	018 Move X28, [X28+2296]
	019 Move W26, W7
	020 Move W19, W6
	021 Move W20, W5
	022 Move X24, X4
	023 Move W21, W3
	024 Move W22, W2
	025 Move X25, X1
	026 Move X23, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x734000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X29+3594], W8
	036 Move X0, [X28]
	037 Move W28, [X31+408]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add W31, W28, 1
	043 Move TEMP, 0
	044 Not TEMP
	045 Move W8, TEMP
	046 Move X9, [X25+32]
	047 Move V0, [X25]
	048 Move V1, [X25+16]
	049 NotImplemented "Instruction CCMP not yet implemented."
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Add X1, X31, 256
	052 Move X0, X25
	053 Move W2, W26
	054 Move W3, W27
	055 Move W4, W28
	056 Move X5, X31
	057 Move [X31+288], X9
	058 Move [X31+256], V0
	059 Move [X31+264], V1
	060 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	061 Move X8, [X24+32]
	062 Move V1, [X24]
	063 Move V0, [X24+16]
	064 Add X1, X31, 208
	065 Move X0, X24
	066 Move W2, W26
	067 Move W3, W27
	068 Move W4, W28
	069 Move X5, X31
	070 Move [X31+240], X8
	071 Move [X31+208], V1
	072 Move [X31+216], V0
	073 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	074 Move X8, [X25+32]
	075 Move V1, [X25]
	076 Move V0, [X25+16]
	077 Move [X31+192], X8
	078 Move [X31+160], V1
	079 Move [X31+168], V0
	080 Move X8, [X24+32]
	081 Move V1, [X24]
	082 Move V0, [X24+16]
	083 Move [X31+144], X8
	084 Move [X31+112], V1
	085 Move [X31+120], V0
	086 Compare X23, 0
	087 JumpIfEqual {123}
	088 Move V0, [X31+160]
	089 Move V1, [X31+176]
	090 Move X8, [X31+192]
	091 Move V2, [X31+112]
	092 Move V3, [X31+128]
	093 Move X9, [X31+144]
	094 Add X1, X31, 64
	095 Add X4, X31, 16
	096 Move X0, X23
	097 Move W2, W22
	098 Move W3, W21
	099 Move W5, W20
	100 Move W6, W19
	101 Move X7, X31
	102 Move [X31+64], V0
	103 Move [X31+72], V1
	104 Move [X31+96], X8
	105 Move [X31+16], V2
	106 Move [X31+24], V3
	107 Move [X31+48], X9
	108 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	109 Move X20, [X31+384]
	110 Move X19, [X31+392]
	111 Move X22, [X31+368]
	112 Move X21, [X31+376]
	113 Move X24, [X31+352]
	114 Move X23, [X31+360]
	115 Move X26, [X31+336]
	116 Move X25, [X31+344]
	117 Move X28, [X31+320]
	118 Move X27, [X31+328]
	119 Move X29, [X31+304]
	120 Move X30, [X31+312]
	121 Add X31, X31, 400
	122 Return 
	123 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E83B8 MOV X26, X0
	0x039E83BC LDR W9, [X8 + 0xE0]
	0x039E83C0 CBNZ W9, 0x39E83CC
	0x039E83C4 MOV X0, X8
	0x039E83C8 BL 0x1C16DFC
	0x039E83CC AND W6, W23, 0x1
	0x039E83D0 AND W7, W21, 0x1
	0x039E83D4 MOV W0, W25
	0x039E83D8 MOV W1, W24
	0x039E83DC MOV W2, W22
	0x039E83E0 MOV X3, X26
	0x039E83E4 MOV W4, W31
	0x039E83E8 MOV X5, X19
	0x039E83EC STRB W31, [X31 + 0x8]
	0x039E83F0 STR W20, [X31]
	0x039E83F4 BL 0x39E8418
	0x039E83F8 LDP X20, X19, [X31 + 0x80]
	0x039E83FC LDP X22, X21, [X31 + 0x70]
	0x039E8400 LDP X24, X23, [X31 + 0x60]
	0x039E8404 LDP X26, X25, [X31 + 0x50]
	0x039E8408 LDP X28, X27, [X31 + 0x40]
	0x039E840C LDP X29, X30, [X31 + 0x30]
	0x039E8410 ADD X31, X31, 0x90
	0x039E8414 RET
	0x039E8418 SUB X31, X31, 0x80
	0x039E841C STP X29, X30, [X31 + 0x20]
	0x039E8420 STP X28, X27, [X31 + 0x30]
	0x039E8424 STP X26, X25, [X31 + 0x40]
	0x039E8428 STP X24, X23, [X31 + 0x50]
	0x039E842C STP X22, X21, [X31 + 0x60]
	0x039E8430 STP X20, X19, [X31 + 0x70]
	0x039E8434 ADRP X29, 0x9F9000
	0x039E8438 ADRP X27, 0x70B000
	0x039E843C ADRP X28, 0x76B000
	0x039E8440 LDRB W8, [X29 + 0xE1C]
	0x039E8444 LDR X27, [X27 + 0x758]
	0x039E8448 LDR X28, [X28 + 0x488]
	0x039E844C MOV W19, W7
	0x039E8450 MOV W22, W6
	0x039E8454 MOV X24, X5
	0x039E8458 MOV W20, W4
	0x039E845C MOV X21, X3
	0x039E8460 MOV W23, W2
	0x039E8464 MOV W25, W1
	0x039E8468 MOV W26, W0
	0x039E846C TBNZ X8, 0x0, 0x39E84D8
	0x039E8470 ADRP X0, 0x70B000
	0x039E8474 LDR X0, [X0 + 0x758]
	0x039E8478 BL 0x1C16CF4
	0x039E847C ADRP X0, 0x76B000
	0x039E8480 LDR X0, [X0 + 0x490]
	0x039E8484 BL 0x1C16CF4
	0x039E8488 ADRP X0, 0x76B000
	0x039E848C LDR X0, [X0 + 0x498]
	0x039E8490 BL 0x1C16CF4
	0x039E8494 ADRP X0, 0x70B000
	0x039E8498 LDR X0, [X0 + 0xCA8]
	0x039E849C BL 0x1C16CF4
	0x039E84A0 ADRP X0, 0x76B000
	0x039E84A4 LDR X0, [X0 + 0x4A0]
	0x039E84A8 BL 0x1C16CF4
	0x039E84AC ADRP X0, 0x76B000
	0x039E84B0 LDR X0, [X0 + 0x4A8]
	0x039E84B4 BL 0x1C16CF4
	0x039E84B8 ADRP X0, 0x76B000
	0x039E84BC LDR X0, [X0 + 0x4B0]
	0x039E84C0 BL 0x1C16CF4
	0x039E84C4 ADRP X0, 0x76B000
	0x039E84C8 LDR X0, [X0 + 0x488]
	0x039E84CC BL 0x1C16CF4
	0x039E84D0 MOVZ W8, 0x1
	0x039E84D4 STRB W8, [X29 + 0xE1C]
	0x039E84D8 LDR X0, [X27]
	0x039E84DC ADD X1, X31, 0x0
	0x039E84E0 STR W26, [X31]
	0x039E84E4 BL 0x1C16E04
	0x039E84E8 MOV X26, X0
	0x039E84EC LDR X0, [X27]
	0x039E84F0 ADD X1, X31, 0x1C
	0x039E84F4 STR W25, [X31 + 0x1C]
	0x039E84F8 BL 0x1C16E04
	0x039E84FC LDR X8, [X28]
	0x039E8500 MOV X3, X0
	0x039E8504 MOV X1, X24
	0x039E8508 MOV X2, X26
	0x039E850C MOV X0, X8
	0x039E8510 MOV X4, X31
	0x039E8514 BL 0x3227C18
	0x039E8518 CMP W23, 0x2
	0x039E851C MOV X24, X0
	0x039E8520 B.LT 0x39E8558
	0x039E8524 LDR X0, [X27]
	0x039E8528 ADRP X25, 0x76B000
	0x039E852C LDR X25, [X25 + 0x4B0]
	0x039E8530 ADD X1, X31, 0x0

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+224], D11
	003 Move [X31+232], D10
	004 Move [X31+240], D9
	005 Move [X31+248], D8
	006 Move [X31+256], X29
	007 Move [X31+264], X30
	008 Move [X31+272], X28
	009 Move [X31+280], X27
	010 Move [X31+288], X26
	011 Move [X31+296], X25
	012 Move [X31+304], X24
	013 Move [X31+312], X23
	014 Move [X31+320], X22
	015 Move [X31+328], X21
	016 Move [X31+336], X20
	017 Move [X31+344], X19
	018 Move [X31+28], W7
	019 Move X19, 0x9FA000
	020 Move X29, 0x734000
	021 Move W27, [X31+360]
	022 Move W8, [X19+3595]
	023 Move W28, [X31+352]
	024 Move X29, [X29+2296]
	025 Move V8, V3
	026 Move V9, V2
	027 Move V10, V1
	028 Move V11, V0
	029 Move W20, W6
	030 Move W21, W5
	031 Move X25, X4
	032 Move W22, W3
	033 Move W23, W2
	034 Move X26, X1
	035 Move X24, X0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {45}
	040 Move X0, 0x734000
	041 Move X0, [X0+2296]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+3595], W8
	045 Move X0, [X29]
	046 Move W29, [X31+368]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Add W31, W29, 1
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Move X9, [X26+32]
	056 Move V0, [X26]
	057 Move V1, [X26+16]
	058 NotImplemented "Instruction CCMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Add X1, X31, 176
	061 Move X0, X26
	062 Move W2, W28
	063 Move W3, W27
	064 Move W4, W29
	065 Move X5, X31
	066 Move [X31+208], X9
	067 Move [X31+176], V0
	068 Move [X31+184], V1
	069 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	070 Move X8, [X25+32]
	071 Move V1, [X25]
	072 Move V0, [X25+16]
	073 Add X1, X31, 128
	074 Move X0, X25
	075 Move W2, W28
	076 Move W3, W27
	077 Move W4, W29
	078 Move X5, X31
	079 Move [X31+160], X8
	080 Move [X31+128], V1
	081 Move [X31+136], V0
	082 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	083 Move X8, [X26+32]
	084 Move V1, [X26]
	085 Move V0, [X26+16]
	086 Move W7, [X31+28]
	087 Add X1, X31, 80
	088 Move [X31+112], X8
	089 Move [X31+80], V1
	090 Move [X31+88], V0
	091 Move V1, [X25]
	092 Move V0, [X25+16]
	093 Move X8, [X25+32]
	094 Add X4, X31, 32
	095 Move X0, X24
	096 Move [X31+32], V1
	097 Move [X31+40], V0
	098 Move W2, W23
	099 Move W3, W22
	100 Move W5, W21
	101 Move W6, W20
	102 Move V0, V11
	103 Move V1, V10
	104 Move V2, V9
	105 Move V3, V8
	106 Move [X31+64], X8
	107 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	108 Move X20, [X31+336]
	109 Move X19, [X31+344]
	110 Move X22, [X31+320]
	111 Move X21, [X31+328]
	112 Move X24, [X31+304]
	113 Move X23, [X31+312]
	114 Move X26, [X31+288]
	115 Move X25, [X31+296]
	116 Move X28, [X31+272]
	117 Move X27, [X31+280]
	118 Move X29, [X31+256]
	119 Move X30, [X31+264]
	120 Move D9, [X31+240]
	121 Move D8, [X31+248]
	122 Move D11, [X31+224]
	123 Move D10, [X31+232]
	124 Add X31, X31, 352
	125 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier buffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x039E8534 STR W23, [X31]
	0x039E8538 BL 0x1C16E04
	0x039E853C LDR X8, [X25]
	0x039E8540 MOV X2, X0
	0x039E8544 MOV X1, X24
	0x039E8548 MOV X3, X31
	0x039E854C MOV X0, X8
	0x039E8550 BL 0x3227BD4
	0x039E8554 MOV X24, X0
	0x039E8558 ADRP X23, 0x70B000
	0x039E855C LDR X23, [X23 + 0xCA8]
	0x039E8560 TBZ X22, 0x0, 0x39E8584
	0x039E8564 ADRP X8, 0x76B000
	0x039E8568 LDR X8, [X8 + 0x4A0]
	0x039E856C LDR X0, [X23]
	0x039E8570 MOV X1, X24
	0x039E8574 MOV X3, X31
	0x039E8578 LDR X2, [X8]
	0x039E857C BL 0x3227BD4
	0x039E8580 MOV X24, X0
	0x039E8584 LDR X0, [X23]
	0x039E8588 MOV X1, X24
	0x039E858C MOV X2, X21
	0x039E8590 MOV X3, X31
	0x039E8594 BL 0x3227BD4
	0x039E8598 MOV X21, X0
	0x039E859C CBZ W20, 0x39E85D4
	0x039E85A0 ADRP X8, 0x76B000
	0x039E85A4 LDR X8, [X8 + 0x498]
	0x039E85A8 ADD X1, X31, 0x0
	0x039E85AC STR W20, [X31]
	0x039E85B0 LDR X0, [X8]
	0x039E85B4 BL 0x1C16E04
	0x039E85B8 LDR X8, [X23]
	0x039E85BC MOV X2, X0
	0x039E85C0 MOV X1, X21
	0x039E85C4 MOV X3, X31
	0x039E85C8 MOV X0, X8
	0x039E85CC BL 0x3227BD4
	0x039E85D0 MOV X21, X0
	0x039E85D4 LDRB W20, [X31 + 0x88]
	0x039E85D8 TBZ X19, 0x0, 0x39E8620
	0x039E85DC ADRP X8, 0x76B000
	0x039E85E0 LDR X8, [X8 + 0x490]
	0x039E85E4 LDR W9, [X31 + 0x80]
	0x039E85E8 MOVN X10, 0x0
	0x039E85EC ADD X0, X31, 0x0
	0x039E85F0 LDR X8, [X8]
	0x039E85F4 MOV X1, X31
	0x039E85F8 STR W9, [X31 + 0x10]
	0x039E85FC STP X8, X10, [X31]
	0x039E8600 BL 0x33B162C
	0x039E8604 LDR X8, [X23]
	0x039E8608 MOV X2, X0
	0x039E860C MOV X1, X21
	0x039E8610 MOV X3, X31
	0x039E8614 MOV X0, X8
	0x039E8618 BL 0x3227BD4
	0x039E861C MOV X21, X0
	0x039E8620 TBZ X20, 0x0, 0x39E8644
	0x039E8624 ADRP X8, 0x76B000
	0x039E8628 LDR X8, [X8 + 0x4A8]
	0x039E862C LDR X0, [X23]
	0x039E8630 MOV X1, X21
	0x039E8634 MOV X3, X31
	0x039E8638 LDR X2, [X8]
	0x039E863C BL 0x3227BD4

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X26
	008 Move [X31+152], X25
	009 Move [X31+160], X24
	010 Move [X31+168], X23
	011 Move [X31+176], X22
	012 Move [X31+184], X21
	013 Move [X31+192], X20
	014 Move [X31+200], X19
	015 Move X26, 0x9FA000
	016 Move W8, [X26+3596]
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move W19, W6
	022 Move W21, W5
	023 Move W22, W4
	024 Move W23, W3
	025 Move W24, W2
	026 Move X25, X1
	027 Move X20, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x734000
	033 Move X0, [X0+2296]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+3596], W8
	037 Move X8, [X25+32]
	038 Move V1, [X25]
	039 Move V0, [X25+16]
	040 Move [X31+80], X8
	041 Move [X31+48], V1
	042 Move [X31+56], V0
	043 Compare X20, 0
	044 JumpIfEqual {88}
	045 Move V0, [X31+48]
	046 Move V1, [X31+64]
	047 Move X8, [X31+80]
	048 Move X25, 0x734000
	049 Move X25, [X25+2296]
	050 Add X1, X31, 0
	051 Move X0, X20
	052 Move W2, W24
	053 Move W3, W23
	054 Move W4, W22
	055 Move W5, W21
	056 Move X6, X31
	057 Move [X31], V0
	058 Move [X31+8], V1
	059 Move [X31+32], X8
	060 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	061 Move X0, [X25]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move W1, W19
	068 Move V0, V11
	069 Move V1, V10
	070 Move V2, V9
	071 Move V3, V8
	072 Call CoreUtils.ClearRenderTarget, X0, X1, X2
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X22, [X31+176]
	076 Move X21, [X31+184]
	077 Move X24, [X31+160]
	078 Move X23, [X31+168]
	079 Move X26, [X31+144]
	080 Move X25, [X31+152]
	081 Move X30, [X31+128]
	082 Move D9, [X31+112]
	083 Move D8, [X31+120]
	084 Move D11, [X31+96]
	085 Move D10, [X31+104]
	086 Add X31, X31, 208
	087 Return 
	088 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag)

Disassembly:
	0x039E8640 MOV X21, X0
	0x039E8644 MOV X0, X21
	0x039E8648 LDP X20, X19, [X31 + 0x70]
	0x039E864C LDP X22, X21, [X31 + 0x60]
	0x039E8650 LDP X24, X23, [X31 + 0x50]
	0x039E8654 LDP X26, X25, [X31 + 0x40]
	0x039E8658 LDP X28, X27, [X31 + 0x30]
	0x039E865C LDP X29, X30, [X31 + 0x20]
	0x039E8660 ADD X31, X31, 0x80
	0x039E8664 RET
	0x039E8668 SUB X31, X31, 0x90
	0x039E866C STP X29, X30, [X31 + 0x30]
	0x039E8670 STP X28, X27, [X31 + 0x40]
	0x039E8674 STP X26, X25, [X31 + 0x50]
	0x039E8678 STP X24, X23, [X31 + 0x60]
	0x039E867C STP X22, X21, [X31 + 0x70]
	0x039E8680 STP X20, X19, [X31 + 0x80]
	0x039E8684 ADRP X28, 0x9F9000
	0x039E8688 ADRP X29, 0x76B000
	0x039E868C ADRP X27, 0x733000
	0x039E8690 LDRB W8, [X28 + 0xE1A]
	0x039E8694 LDR X29, [X29 + 0x4B8]
	0x039E8698 LDR X27, [X27 + 0x8F8]
	0x039E869C MOV W20, W7
	0x039E86A0 MOV W21, W6
	0x039E86A4 MOV W23, W5
	0x039E86A8 MOV X19, X4
	0x039E86AC MOV W26, W3
	0x039E86B0 MOV W22, W2
	0x039E86B4 MOV W24, W1
	0x039E86B8 MOV W25, W0
	0x039E86BC TBNZ X8, 0x0, 0x39E86E0
	0x039E86C0 ADRP X0, 0x733000
	0x039E86C4 LDR X0, [X0 + 0x8F8]
	0x039E86C8 BL 0x1C16CF4
	0x039E86CC ADRP X0, 0x76B000
	0x039E86D0 LDR X0, [X0 + 0x4B8]
	0x039E86D4 BL 0x1C16CF4
	0x039E86D8 MOVZ W8, 0x1
	0x039E86DC STRB W8, [X28 + 0xE1A]
	0x039E86E0 LDR X8, [X29]
	0x039E86E4 MOVN X9, 0x0
	0x039E86E8 ADD X0, X31, 0x18
	0x039E86EC MOV X1, X31
	0x039E86F0 STP X8, X9, [X31 + 0x18]
	0x039E86F4 STR W26, [X31 + 0x28]
	0x039E86F8 BL 0x33B162C
	0x039E86FC LDR X8, [X27]
	0x039E8700 MOV X26, X0
	0x039E8704 LDR W9, [X8 + 0xE0]
	0x039E8708 CBNZ W9, 0x39E8714
	0x039E870C MOV X0, X8
	0x039E8710 BL 0x1C16DFC
	0x039E8714 AND W6, W23, 0x1
	0x039E8718 AND W7, W21, 0x1
	0x039E871C MOV W0, W25
	0x039E8720 MOV W1, W24
	0x039E8724 MOV W2, W22
	0x039E8728 MOV X3, X26
	0x039E872C MOV W4, W31
	0x039E8730 MOV X5, X19
	0x039E8734 STRB W31, [X31 + 0x8]
	0x039E8738 STR W20, [X31]
	0x039E873C BL 0x39E8418
	0x039E8740 LDP X20, X19, [X31 + 0x80]
	0x039E8744 LDP X22, X21, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move X28, 0x9FA000
	015 Move X27, 0x734000
	016 Move W8, [X28+3597]
	017 Move X27, [X27+2296]
	018 Move W19, W7
	019 Move W20, W6
	020 Move W21, W5
	021 Move X25, X4
	022 Move W22, W3
	023 Move W23, W2
	024 Move X26, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x734000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X28+3597], W8
	035 Move X8, [X26+32]
	036 Move V1, [X26]
	037 Move V0, [X26+16]
	038 Move X0, [X27]
	039 Move [X31+192], X8
	040 Move [X31+160], V1
	041 Move [X31+168], V0
	042 Move X8, [X25+32]
	043 Move V1, [X25]
	044 Move V0, [X25+16]
	045 Move [X31+144], X8
	046 Move [X31+112], V1
	047 Move [X31+120], V0
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move V0, [X31+160]
	053 Move V1, [X31+176]
	054 Move V2, [X31+112]
	055 Move V3, [X31+128]
	056 Move X8, [X31+192]
	057 Move X9, [X31+144]
	058 Move [X31+64], V0
	059 Move [X31+72], V1
	060 Move [X31+16], V2
	061 Move [X31+24], V3
	062 Add X1, X31, 64
	063 Add X4, X31, 16
	064 Move S0, W31
	065 Move S1, W31
	066 Move S2, W31
	067 Move S3, W31
	068 Move X0, X24
	069 Move W2, W23
	070 Move W3, W22
	071 Move W5, W21
	072 Move W6, W20
	073 Move W7, W19
	074 Move [X31+96], X8
	075 Move [X31+48], X9
	076 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	077 Move X20, [X31+288]
	078 Move X19, [X31+296]
	079 Move X22, [X31+272]
	080 Move X21, [X31+280]
	081 Move X24, [X31+256]
	082 Move X23, [X31+264]
	083 Move X26, [X31+240]
	084 Move X25, [X31+248]
	085 Move X28, [X31+224]
	086 Move X27, [X31+232]
	087 Move X29, [X31+208]
	088 Move X30, [X31+216]
	089 Add X31, X31, 304
	090 Return 

Method: System.Void SetViewportAndClear(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x039E8748 LDP X24, X23, [X31 + 0x60]
	0x039E874C LDP X26, X25, [X31 + 0x50]
	0x039E8750 LDP X28, X27, [X31 + 0x40]
	0x039E8754 LDP X29, X30, [X31 + 0x30]
	0x039E8758 ADD X31, X31, 0x90
	0x039E875C RET
	0x039E8760 SUB X31, X31, 0x90
	0x039E8764 STP X29, X30, [X31 + 0x30]
	0x039E8768 STP X28, X27, [X31 + 0x40]
	0x039E876C STP X26, X25, [X31 + 0x50]
	0x039E8770 STP X24, X23, [X31 + 0x60]
	0x039E8774 STP X22, X21, [X31 + 0x70]
	0x039E8778 STP X20, X19, [X31 + 0x80]
	0x039E877C ADRP X29, 0x9F9000
	0x039E8780 ADRP X28, 0x76B000
	0x039E8784 ADRP X27, 0x733000
	0x039E8788 LDRB W8, [X29 + 0xE1B]
	0x039E878C LDR X28, [X28 + 0x4B8]
	0x039E8790 LDR X27, [X27 + 0x8F8]
	0x039E8794 MOV W21, W7
	0x039E8798 MOV W23, W6
	0x039E879C MOV X19, X5
	0x039E87A0 MOV W20, W4
	0x039E87A4 MOV W26, W3
	0x039E87A8 MOV W22, W2
	0x039E87AC MOV W24, W1
	0x039E87B0 MOV W25, W0
	0x039E87B4 TBNZ X8, 0x0, 0x39E87D8
	0x039E87B8 ADRP X0, 0x733000
	0x039E87BC LDR X0, [X0 + 0x8F8]
	0x039E87C0 BL 0x1C16CF4
	0x039E87C4 ADRP X0, 0x76B000
	0x039E87C8 LDR X0, [X0 + 0x4B8]
	0x039E87CC BL 0x1C16CF4
	0x039E87D0 MOVZ W8, 0x1
	0x039E87D4 STRB W8, [X29 + 0xE1B]
	0x039E87D8 LDR X8, [X28]
	0x039E87DC LDRB W29, [X31 + 0x98]
	0x039E87E0 LDR W28, [X31 + 0x90]
	0x039E87E4 MOVN X9, 0x0
	0x039E87E8 ADD X0, X31, 0x18

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x9FA000
	012 Move X22, 0x734000
	013 Move W8, [X23+3598]
	014 Move X22, [X22+2296]
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move W19, W2
	020 Move X21, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x734000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3598], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X21
	038 Call CoreUtils.SetViewport, X0, X1
	039 Move X0, X20
	040 Move W1, W19
	041 Move V2, V9
	042 Move V3, V8
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X30, [X31+32]
	048 Move X23, [X31+40]
	049 Move D9, [X31+16]
	050 Move D8, [X31+24]
	051 Move V0, V11
	052 Move V1, V10
	053 Move D11, [X31+80]
	054 Move D10, [X31+88]
	055 Call CoreUtils.ClearRenderTarget, X0, X1, X2
	056 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E8864 SUB X31, X31, 0x80
	0x039E8868 STR X30, [X31 + 0x20]
	0x039E886C STP X28, X27, [X31 + 0x30]
	0x039E8870 STP X26, X25, [X31 + 0x40]
	0x039E8874 STP X24, X23, [X31 + 0x50]
	0x039E8878 STP X22, X21, [X31 + 0x60]
	0x039E887C STP X20, X19, [X31 + 0x70]
	0x039E8880 ADRP X27, 0x9F9000
	0x039E8884 ADRP X28, 0x76B000
	0x039E8888 ADRP X26, 0x733000
	0x039E888C LDRB W8, [X27 + 0xE1D]
	0x039E8890 LDR X28, [X28 + 0x4C0]
	0x039E8894 LDR X26, [X26 + 0x8F8]
	0x039E8898 MOV W19, W6
	0x039E889C MOV W22, W5
	0x039E88A0 MOV X20, X4
	0x039E88A4 MOV W21, W3
	0x039E88A8 MOV W25, W2
	0x039E88AC MOV W23, W1
	0x039E88B0 MOV W24, W0
	0x039E88B4 TBNZ X8, 0x0, 0x39E88D8
	0x039E88B8 ADRP X0, 0x733000
	0x039E88BC LDR X0, [X0 + 0x8F8]
	0x039E88C0 BL 0x1C16CF4
	0x039E88C4 ADRP X0, 0x76B000
	0x039E88C8 LDR X0, [X0 + 0x4C0]
	0x039E88CC BL 0x1C16CF4
	0x039E88D0 MOVZ W8, 0x1
	0x039E88D4 STRB W8, [X27 + 0xE1D]
	0x039E88D8 LDR X8, [X28]
	0x039E88DC MOVN X9, 0x0
	0x039E88E0 ADD X0, X31, 0x8
	0x039E88E4 MOV X1, X31
	0x039E88E8 STP X8, X9, [X31 + 0x8]
	0x039E88EC STR W25, [X31 + 0x18]
	0x039E88F0 BL 0x33B162C
	0x039E88F4 LDR X8, [X26]
	0x039E88F8 MOV X25, X0
	0x039E88FC LDR W9, [X8 + 0xE0]
	0x039E8900 CBNZ W9, 0x39E890C
	0x039E8904 MOV X0, X8
	0x039E8908 BL 0x1C16DFC
	0x039E890C AND W5, W22, 0x1
	0x039E8910 MOV W0, W24
	0x039E8914 MOV W1, W23
	0x039E8918 MOV X2, X25
	0x039E891C MOV W3, W21
	0x039E8920 MOV X4, X20
	0x039E8924 MOV W6, W19
	0x039E8928 BL 0x39E894C
	0x039E892C LDP X20, X19, [X31 + 0x70]
	0x039E8930 LDP X22, X21, [X31 + 0x60]
	0x039E8934 LDP X24, X23, [X31 + 0x50]
	0x039E8938 LDP X26, X25, [X31 + 0x40]
	0x039E893C LDP X28, X27, [X31 + 0x30]
	0x039E8940 LDR X30, [X31 + 0x20]
	0x039E8944 ADD X31, X31, 0x80
	0x039E8948 RET
	0x039E894C SUB X31, X31, 0x80
	0x039E8950 STP X29, X30, [X31 + 0x20]
	0x039E8954 STP X28, X27, [X31 + 0x30]
	0x039E8958 STP X26, X25, [X31 + 0x40]
	0x039E895C STP X24, X23, [X31 + 0x50]
	0x039E8960 STP X22, X21, [X31 + 0x60]
	0x039E8964 STP X20, X19, [X31 + 0x70]
	0x039E8968 ADRP X27, 0x9F9000
	0x039E896C ADRP X23, 0x70B000
	0x039E8970 LDRB W8, [X27 + 0xE1F]
	0x039E8974 LDR X23, [X23 + 0x9D0]
	0x039E8978 MOV W25, W6
	0x039E897C MOV W22, W5

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X26
	008 Move [X31+152], X25
	009 Move [X31+160], X24
	010 Move [X31+168], X23
	011 Move [X31+176], X22
	012 Move [X31+184], X21
	013 Move [X31+192], X20
	014 Move [X31+200], X19
	015 Move X25, 0x9FA000
	016 Move X26, 0x734000
	017 Move W8, [X25+3599]
	018 Move X26, [X26+2296]
	019 Move W24, W5
	020 Move W21, W4
	021 Move W23, W3
	022 Move V8, V3
	023 Move V9, V2
	024 Move V10, V1
	025 Move V11, V0
	026 Move W19, W2
	027 Move X20, X1
	028 Move X22, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, 0x734000
	034 Move X0, [X0+2296]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X25+3599], W8
	038 Move X0, [X26]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W0, W24
	044 Move X1, X20
	045 Call CoreUtils.FixupDepthSlice, X0, X1
	046 Compare X20, 0
	047 JumpIfEqual {92}
	048 Move X8, [X20+72]
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move [X31+80], X8
	052 Move [X31+48], V1
	053 Move [X31+56], V0
	054 Compare X22, 0
	055 JumpIfEqual {92}
	056 Move V0, [X31+48]
	057 Move V1, [X31+64]
	058 Move X8, [X31+80]
	059 Move W4, W0
	060 Add X1, X31, 0
	061 Move X0, X22
	062 Move W2, W23
	063 Move W3, W21
	064 Move X5, X31
	065 Move [X31], V0
	066 Move [X31+8], V1
	067 Move [X31+32], X8
	068 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4
	069 Move X0, X22
	070 Move X1, X20
	071 Move W2, W19
	072 Move V0, V11
	073 Move V1, V10
	074 Move V2, V9
	075 Move V3, V8
	076 Call CoreUtils.SetViewportAndClear, X0, X1, X2, X3
	077 Move X20, [X31+192]
	078 Move X19, [X31+200]
	079 Move X22, [X31+176]
	080 Move X21, [X31+184]
	081 Move X24, [X31+160]
	082 Move X23, [X31+168]
	083 Move X26, [X31+144]
	084 Move X25, [X31+152]
	085 Move X30, [X31+128]
	086 Move D9, [X31+112]
	087 Move D8, [X31+120]
	088 Move D11, [X31+96]
	089 Move D10, [X31+104]
	090 Add X31, X31, 208
	091 Return 
	092 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.ClearFlag clearFlag = 0, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E3DCC LDR X0, [X0 + 0xE28]
	0x039E3DD0 BL 0x1C16CF4
	0x039E3DD4 MOVZ W8, 0x1
	0x039E3DD8 STRB W8, [X23 + 0xDDC]
	0x039E3DDC LDR X0, [X24]
	0x039E3DE0 ADRP X25, 0x770000
	0x039E3DE4 LDR W8, [X0 + 0xE0]
	0x039E3DE8 LDR X25, [X25 + 0x1B0]
	0x039E3DEC CBNZ W8, 0x39E3DF8
	0x039E3DF0 BL 0x1C16DFC
	0x039E3DF4 LDR X0, [X24]
	0x039E3DF8 LDR X8, [X25]
	0x039E3DFC LDR X9, [X0 + 0xB8]
	0x039E3E00 LDR W10, [X8 + 0xE0]
	0x039E3E04 LDR X23, [X9 + 0x20]
	0x039E3E08 CBNZ W10, 0x39E3E14
	0x039E3E0C MOV X0, X8
	0x039E3E10 BL 0x1C16DFC
	0x039E3E14 CBZ X23, 0x39E3F6C
	0x039E3E18 LDR X8, [X25]
	0x039E3E1C MOV X0, X23
	0x039E3E20 MOV X2, X20
	0x039E3E24 MOV X3, X31
	0x039E3E28 LDR X8, [X8 + 0xB8]
	0x039E3E2C LDR W1, [X8]
	0x039E3E30 BL 0x3C12828
	0x039E3E34 LDR X8, [X24]
	0x039E3E38 LDR X8, [X8 + 0xB8]
	0x039E3E3C LDR X0, [X8 + 0x20]
	0x039E3E40 CBZ X0, 0x39E3F6C
	0x039E3E44 LDR X8, [X25]
	0x039E3E48 MOV V0.16B, V9.16B
	0x039E3E4C MOV V1.16B, V8.16B
	0x039E3E50 MOV V2.16B, V15.16B
	0x039E3E54 LDR X8, [X8 + 0xB8]
	0x039E3E58 MOV V3.16B, V14.16B
	0x039E3E5C MOV X2, X31
	0x039E3E60 LDR W1, [X8 + 0x8]
	0x039E3E64 BL 0x3C12720
	0x039E3E68 LDR X8, [X24]
	0x039E3E6C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x9FF000
	011 Move X26, 0x739000
	012 Move W8, [X25+3600]
	013 Move X26, [X26+2296]
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move X23, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x739000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+3600], W8
	029 Move X0, [X26]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X24
	035 Move X1, X23
	036 Move W2, W22
	037 Move W3, W21
	038 Move W4, W20
	039 Move W5, W19
	040 Move X20, [X31+64]
	041 Move X19, [X31+72]
	042 Move X22, [X31+48]
	043 Move X21, [X31+56]
	044 Move X24, [X31+32]
	045 Move X23, [X31+40]
	046 Move X26, [X31+16]
	047 Move X25, [X31+24]
	048 Move S0, W31
	049 Move S1, W31
	050 Move S2, W31
	051 Move S3, W31
	052 Move X30, [X31+80]
	053 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	054 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorBuffer, UnityEngine.Rendering.RTHandle depthBuffer, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E8980 MOV X19, X4
	0x039E8984 MOV W20, W3
	0x039E8988 MOV X21, X2
	0x039E898C MOV W24, W1
	0x039E8990 MOV W26, W0
	0x039E8994 TBNZ X8, 0x0, 0x39E8A0C
	0x039E8998 ADRP X0, 0x70B000
	0x039E899C LDR X0, [X0 + 0x758]
	0x039E89A0 BL 0x1C16CF4
	0x039E89A4 ADRP X0, 0x70B000
	0x039E89A8 LDR X0, [X0 + 0x9D0]
	0x039E89AC BL 0x1C16CF4
	0x039E89B0 ADRP X0, 0x76B000
	0x039E89B4 LDR X0, [X0 + 0x498]
	0x039E89B8 BL 0x1C16CF4
	0x039E89BC ADRP X0, 0x76B000
	0x039E89C0 LDR X0, [X0 + 0x4C8]
	0x039E89C4 BL 0x1C16CF4
	0x039E89C8 ADRP X0, 0x70F000
	0x039E89CC LDR X0, [X0 + 0xFE8]
	0x039E89D0 BL 0x1C16CF4
	0x039E89D4 ADRP X0, 0x76B000
	0x039E89D8 LDR X0, [X0 + 0x4D0]
	0x039E89DC BL 0x1C16CF4
	0x039E89E0 ADRP X0, 0x769000
	0x039E89E4 LDR X0, [X0 + 0x50]
	0x039E89E8 BL 0x1C16CF4
	0x039E89EC ADRP X0, 0x70B000
	0x039E89F0 LDR X0, [X0 + 0x988]
	0x039E89F4 BL 0x1C16CF4
	0x039E89F8 ADRP X0, 0x76B000
	0x039E89FC LDR X0, [X0 + 0x4D8]
	0x039E8A00 BL 0x1C16CF4
	0x039E8A04 MOVZ W8, 0x1
	0x039E8A08 STRB W8, [X27 + 0xE1F]
	0x039E8A0C ADRP X29, 0x70B000
	0x039E8A10 ADRP X28, 0x76B000
	0x039E8A14 ADRP X27, 0x70B000
	0x039E8A18 LDR X0, [X23]
	0x039E8A1C LDR X29, [X29 + 0x758]
	0x039E8A20 LDR X28, [X28 + 0x4C8]
	0x039E8A24 LDR X27, [X27 + 0x988]
	0x039E8A28 CBZ W25, 0x39E8B58
	0x039E8A2C MOVZ W1, 0x5
	0x039E8A30 BL 0x1C16D6C
	0x039E8A34 MOV X23, X0
	0x039E8A38 LDR X0, [X29]
	0x039E8A3C ADD X1, X31, 0x0
	0x039E8A40 STR W26, [X31]
	0x039E8A44 BL 0x1C16E04
	0x039E8A48 CBZ X23, 0x39E8D00
	0x039E8A4C MOV X26, X0
	0x039E8A50 CBZ X0, 0x39E8A68
	0x039E8A54 LDR X8, [X23]
	0x039E8A58 MOV X0, X26
	0x039E8A5C LDR X1, [X8 + 0x40]
	0x039E8A60 BL 0x1C16E00
	0x039E8A64 CBZ X0, 0x39E8CF4
	0x039E8A68 LDR W8, [X23 + 0x18]
	0x039E8A6C CBZ W8, 0x39E8CF0
	0x039E8A70 STR X26, [X23 + 0x20]
	0x039E8A74 LDR X0, [X29]
	0x039E8A78 ADD X1, X31, 0x1C
	0x039E8A7C STR W24, [X31 + 0x1C]
	0x039E8A80 BL 0x1C16E04
	0x039E8A84 MOV X24, X0
	0x039E8A88 CBZ X0, 0x39E8AA0
	0x039E8A8C LDR X8, [X23]
	0x039E8A90 MOV X0, X24
	0x039E8A94 LDR X1, [X8 + 0x40]
	0x039E8A98 BL 0x1C16E00
	0x039E8A9C CBZ X0, 0x39E8CF4
	0x039E8AA0 LDR W8, [X23 + 0x18]
	0x039E8AA4 CMP W8, 0x1
	0x039E8AA8 B.LS 0x39E8CF0
	0x039E8AAC STR X24, [X23 + 0x28]
	0x039E8AB0 LDR X0, [X29]
	0x039E8AB4 ADD X1, X31, 0x18
	0x039E8AB8 STR W25, [X31 + 0x18]
	0x039E8ABC BL 0x1C16E04
	0x039E8AC0 MOV X24, X0
	0x039E8AC4 CBZ X0, 0x39E8ADC
	0x039E8AC8 LDR X8, [X23]
	0x039E8ACC MOV X0, X24
	0x039E8AD0 LDR X1, [X8 + 0x40]
	0x039E8AD4 BL 0x1C16E00
	0x039E8AD8 CBZ X0, 0x39E8CF4
	0x039E8ADC LDR W8, [X23 + 0x18]
	0x039E8AE0 CMP W8, 0x2
	0x039E8AE4 B.LS 0x39E8CF0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x9FA000
	011 Move W8, [X25+3601]
	012 Move W19, W5
	013 Move W20, W4
	014 Move W21, W3
	015 Move X22, X2
	016 Move X23, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x734000
	023 Move X0, [X0+2296]
	024 Call 0x1C17CF4
	025 Move X0, 0x70C000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+3601], W8
	030 Compare X23, 0
	031 JumpIfEqual {119}
	032 Move X26, 0x70C000
	033 Move X26, [X26+1432]
	034 Move X25, [X23+24]
	035 Move X0, [X26]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X25
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Inequality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {92}
	048 Compare X22, 0
	049 JumpIfEqual {119}
	050 Move X0, [X26]
	051 Move X25, [X22+24]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X25
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {92}
	064 Move X0, [X23+24]
	065 Compare X0, 0
	066 JumpIfEqual {119}
	067 Move X8, [X0]
	068 Move X9, [X8+392]
	069 Move X1, [X8+400]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X0, [X23+24]
	072 Compare X0, 0
	073 JumpIfEqual {119}
	074 Move X8, [X0]
	075 Move X9, [X8+424]
	076 Move X1, [X8+432]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X0, [X22+24]
	079 Compare X0, 0
	080 JumpIfEqual {119}
	081 Move X8, [X0]
	082 Move X9, [X8+392]
	083 Move X1, [X8+400]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X0, [X22+24]
	086 Compare X0, 0
	087 JumpIfEqual {119}
	088 Move X8, [X0]
	089 Move X9, [X8+424]
	090 Move X1, [X8+432]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X8, 0x734000
	093 Move X8, [X8+2296]
	094 Move X0, [X8]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X24
	100 Move X1, X23
	101 Move X2, X22
	102 Move W4, W21
	103 Move W5, W20
	104 Move W6, W19
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X24, [X31+32]
	110 Move X23, [X31+40]
	111 Move X26, [X31+16]
	112 Move X25, [X31+24]
	113 Move S0, W31
	114 Move S1, W31
	115 Move S2, W31
	116 Move S3, W31
	117 Move W3, W31
	118 Move X30, [X31+80]
	119 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorBuffer, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E8CFC BL 0x1C16DEC
	0x039E8D00 BL 0x1C16F20
	0x039E8D04 SUB X31, X31, 0x80
	0x039E8D08 STR X30, [X31 + 0x20]
	0x039E8D0C STP X28, X27, [X31 + 0x30]
	0x039E8D10 STP X26, X25, [X31 + 0x40]
	0x039E8D14 STP X24, X23, [X31 + 0x50]
	0x039E8D18 STP X22, X21, [X31 + 0x60]
	0x039E8D1C STP X20, X19, [X31 + 0x70]
	0x039E8D20 ADRP X27, 0x9F9000
	0x039E8D24 ADRP X28, 0x76B000
	0x039E8D28 ADRP X26, 0x733000
	0x039E8D2C LDRB W8, [X27 + 0xE1E]
	0x039E8D30 LDR X28, [X28 + 0x4B8]
	0x039E8D34 LDR X26, [X26 + 0x8F8]
	0x039E8D38 MOV W19, W6
	0x039E8D3C MOV W22, W5
	0x039E8D40 MOV X20, X4
	0x039E8D44 MOV W21, W3
	0x039E8D48 MOV W25, W2
	0x039E8D4C MOV W23, W1
	0x039E8D50 MOV W24, W0
	0x039E8D54 TBNZ X8, 0x0, 0x39E8D78
	0x039E8D58 ADRP X0, 0x733000
	0x039E8D5C LDR X0, [X0 + 0x8F8]
	0x039E8D60 BL 0x1C16CF4
	0x039E8D64 ADRP X0, 0x76B000
	0x039E8D68 LDR X0, [X0 + 0x4B8]
	0x039E8D6C BL 0x1C16CF4
	0x039E8D70 MOVZ W8, 0x1
	0x039E8D74 STRB W8, [X27 + 0xE1E]
	0x039E8D78 LDR X8, [X28]
	0x039E8D7C MOVN X9, 0x0
	0x039E8D80 ADD X0, X31, 0x8
	0x039E8D84 MOV X1, X31
	0x039E8D88 STP X8, X9, [X31 + 0x8]
	0x039E8D8C STR W25, [X31 + 0x18]
	0x039E8D90 BL 0x33B162C
	0x039E8D94 LDR X8, [X26]
	0x039E8D98 MOV X25, X0
	0x039E8D9C LDR W9, [X8 + 0xE0]
	0x039E8DA0 CBNZ W9, 0x39E8DAC
	0x039E8DA4 MOV X0, X8
	0x039E8DA8 BL 0x1C16DFC
	0x039E8DAC AND W5, W22, 0x1
	0x039E8DB0 MOV W0, W24
	0x039E8DB4 MOV W1, W23
	0x039E8DB8 MOV X2, X25
	0x039E8DBC MOV W3, W21
	0x039E8DC0 MOV X4, X20
	0x039E8DC4 MOV W6, W19
	0x039E8DC8 BL 0x39E894C
	0x039E8DCC LDP X20, X19, [X31 + 0x70]
	0x039E8DD0 LDP X22, X21, [X31 + 0x60]
	0x039E8DD4 LDP X24, X23, [X31 + 0x50]
	0x039E8DD8 LDP X26, X25, [X31 + 0x40]
	0x039E8DDC LDP X28, X27, [X31 + 0x30]
	0x039E8DE0 LDR X30, [X31 + 0x20]
	0x039E8DE4 ADD X31, X31, 0x80
	0x039E8DE8 RET
	0x039E8DEC SUB X31, X31, 0xC0
	0x039E8DF0 STR D12, [X31 + 0x60]
	0x039E8DF4 STP D11, D10, [X31 + 0x68]
	0x039E8DF8 STP D9, D8, [X31 + 0x78]
	0x039E8DFC STR X30, [X31 + 0x88]
	0x039E8E00 STP X24, X23, [X31 + 0x90]
	0x039E8E04 STP X22, X21, [X31 + 0xA0]
	0x039E8E08 STP X20, X19, [X31 + 0xB0]
	0x039E8E0C ADRP X22, 0x9F9000
	0x039E8E10 LDRB W8, [X22 + 0xE20]
	0x039E8E14 MOV W21, W2
	0x039E8E18 MOV V8.16B, V3.16B
	0x039E8E1C MOV V9.16B, V2.16B
	0x039E8E20 MOV V10.16B, V1.16B
	0x039E8E24 MOV V11.16B, V0.16B
	0x039E8E28 MOV X19, X1
	0x039E8E2C MOV X20, X0
	0x039E8E30 TBNZ X8, 0x0, 0x39E8E48
	0x039E8E34 ADRP X0, 0x733000
	0x039E8E38 LDR X0, [X0 + 0x8F8]
	0x039E8E3C BL 0x1C16CF4
	0x039E8E40 MOVZ W8, 0x1
	0x039E8E44 STRB W8, [X22 + 0xE20]
	0x039E8E48 CBZ X19, 0x39E8F9C
	0x039E8E4C MOV X0, X19
	0x039E8E50 MOV X1, X31
	0x039E8E54 BL 0x3C20224
	0x039E8E58 MOVZ W23, 0x1
	0x039E8E5C TBZ X0, 0x0, 0x39E8EE0
	0x039E8E60 TBZ X21, 0x0, 0x39E8EE0
	0x039E8E64 LDR X8, [X19]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X26, 0x9FA000
	012 Move W8, [X26+3602]
	013 Move W19, W6
	014 Move W20, W5
	015 Move W21, W4
	016 Move W22, W3
	017 Move X23, X2
	018 Move X24, X1
	019 Move X25, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x734000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move X0, 0x70C000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+3602], W8
	032 Compare X24, 0
	033 JumpIfEqual {124}
	034 Move X27, 0x70C000
	035 Move X27, [X27+1432]
	036 Move X26, [X24+24]
	037 Move X0, [X27]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X26
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {94}
	050 Compare X23, 0
	051 JumpIfEqual {124}
	052 Move X0, [X27]
	053 Move X26, [X23+24]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X26
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {94}
	066 Move X0, [X24+24]
	067 Compare X0, 0
	068 JumpIfEqual {124}
	069 Move X8, [X0]
	070 Move X9, [X8+392]
	071 Move X1, [X8+400]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X0, [X24+24]
	074 Compare X0, 0
	075 JumpIfEqual {124}
	076 Move X8, [X0]
	077 Move X9, [X8+424]
	078 Move X1, [X8+432]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X0, [X23+24]
	081 Compare X0, 0
	082 JumpIfEqual {124}
	083 Move X8, [X0]
	084 Move X9, [X8+392]
	085 Move X1, [X8+400]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X0, [X23+24]
	088 Compare X0, 0
	089 JumpIfEqual {124}
	090 Move X8, [X0]
	091 Move X9, [X8+424]
	092 Move X1, [X8+432]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, 0x734000
	095 Move X8, [X8+2296]
	096 Move X0, [X8]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X25
	102 Move X1, X24
	103 Move X2, X23
	104 Move W3, W22
	105 Move W4, W21
	106 Move W5, W20
	107 Move W6, W19
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 Move S0, W31
	117 Move S1, W31
	118 Move S2, W31
	119 Move S3, W31
	120 Move X30, [X31+80]
	121 Move X27, [X31+88]
	122 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7
	123 Return 
	124 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorBuffer, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E8AE8 ADRP X9, 0x76B000
	0x039E8AEC LDR X9, [X9 + 0x4D0]
	0x039E8AF0 ANDS W31, W22, 0x1
	0x039E8AF4 STR X24, [X23 + 0x30]
	0x039E8AF8 CSEL X10, X28, X27, NE
	0x039E8AFC LDR X24, [X10]
	0x039E8B00 LDR X22, [X9]
	0x039E8B04 CBZ X24, 0x39E8B20
	0x039E8B08 LDR X8, [X23]
	0x039E8B0C MOV X0, X24
	0x039E8B10 LDR X1, [X8 + 0x40]
	0x039E8B14 BL 0x1C16E00
	0x039E8B18 CBZ X0, 0x39E8CF4
	0x039E8B1C LDR W8, [X23 + 0x18]
	0x039E8B20 CMP W8, 0x3
	0x039E8B24 B.LS 0x39E8CF0
	0x039E8B28 STR X24, [X23 + 0x38]
	0x039E8B2C CBZ X21, 0x39E8B48
	0x039E8B30 LDR X8, [X23]
	0x039E8B34 MOV X0, X21
	0x039E8B38 LDR X1, [X8 + 0x40]
	0x039E8B3C BL 0x1C16E00
	0x039E8B40 CBZ X0, 0x39E8CF4
	0x039E8B44 LDR W8, [X23 + 0x18]
	0x039E8B48 CMP W8, 0x4
	0x039E8B4C B.LS 0x39E8CF0
	0x039E8B50 STR X21, [X23 + 0x40]
	0x039E8B54 B 0x39E8C44
	0x039E8B58 MOVZ W1, 0x4
	0x039E8B5C BL 0x1C16D6C
	0x039E8B60 MOV X23, X0
	0x039E8B64 LDR X0, [X29]
	0x039E8B68 ADD X1, X31, 0x0
	0x039E8B6C STR W26, [X31]
	0x039E8B70 BL 0x1C16E04
	0x039E8B74 CBZ X23, 0x39E8D00
	0x039E8B78 MOV X25, X0
	0x039E8B7C CBZ X0, 0x39E8B94
	0x039E8B80 LDR X8, [X23]
	0x039E8B84 MOV X0, X25
	0x039E8B88 LDR X1, [X8 + 0x40]
	0x039E8B8C BL 0x1C16E00
	0x039E8B90 CBZ X0, 0x39E8CF4
	0x039E8B94 LDR W8, [X23 + 0x18]
	0x039E8B98 CBZ W8, 0x39E8CF0
	0x039E8B9C STR X25, [X23 + 0x20]
	0x039E8BA0 LDR X0, [X29]
	0x039E8BA4 ADD X1, X31, 0x1C
	0x039E8BA8 STR W24, [X31 + 0x1C]
	0x039E8BAC BL 0x1C16E04
	0x039E8BB0 MOV X24, X0
	0x039E8BB4 CBZ X0, 0x39E8BCC
	0x039E8BB8 LDR X8, [X23]
	0x039E8BBC MOV X0, X24
	0x039E8BC0 LDR X1, [X8 + 0x40]
	0x039E8BC4 BL 0x1C16E00
	0x039E8BC8 CBZ X0, 0x39E8CF4
	0x039E8BCC LDR W8, [X23 + 0x18]
	0x039E8BD0 CMP W8, 0x1
	0x039E8BD4 B.LS 0x39E8CF0
	0x039E8BD8 STR X24, [X23 + 0x28]
	0x039E8BDC ADRP X9, 0x76B000
	0x039E8BE0 LDR X9, [X9 + 0x4D8]
	0x039E8BE4 ANDS W31, W22, 0x1
	0x039E8BE8 CSEL X10, X28, X27, NE
	0x039E8BEC LDR X24, [X10]
	0x039E8BF0 LDR X22, [X9]
	0x039E8BF4 CBZ X24, 0x39E8C10
	0x039E8BF8 LDR X8, [X23]
	0x039E8BFC MOV X0, X24
	0x039E8C00 LDR X1, [X8 + 0x40]
	0x039E8C04 BL 0x1C16E00
	0x039E8C08 CBZ X0, 0x39E8CF4
	0x039E8C0C LDR W8, [X23 + 0x18]
	0x039E8C10 CMP W8, 0x2
	0x039E8C14 B.LS 0x39E8CF0
	0x039E8C18 STR X24, [X23 + 0x30]
	0x039E8C1C CBZ X21, 0x39E8C38
	0x039E8C20 LDR X8, [X23]
	0x039E8C24 MOV X0, X21
	0x039E8C28 LDR X1, [X8 + 0x40]
	0x039E8C2C BL 0x1C16E00
	0x039E8C30 CBZ X0, 0x39E8CF4
	0x039E8C34 LDR W8, [X23 + 0x18]
	0x039E8C38 CMP W8, 0x3
	0x039E8C3C B.LS 0x39E8CF0
	0x039E8C40 STR X21, [X23 + 0x38]
	0x039E8C44 MOV X0, X22
	0x039E8C48 MOV X1, X23
	0x039E8C4C MOV X2, X31
	0x039E8C50 BL 0x3227C5C
	0x039E8C54 LDR X1, [X27]
	0x039E8C58 ADRP X22, 0x70F000
	0x039E8C5C ADRP X23, 0x769000
	0x039E8C60 LDR X22, [X22 + 0xFE8]
	0x039E8C64 LDR X23, [X23 + 0x50]
	0x039E8C68 MOV X21, X0
	0x039E8C6C MOV X0, X19
	0x039E8C70 MOV X2, X31
	0x039E8C74 BL 0x321BA08
	0x039E8C78 LDR X22, [X22]
	0x039E8C7C LDR X24, [X23]
	0x039E8C80 MOV W23, W0
	0x039E8C84 CBZ W20, 0x39E8CB4
	0x039E8C88 ADRP X8, 0x76B000
	0x039E8C8C LDR X8, [X8 + 0x498]
	0x039E8C90 MOVN X9, 0x0
	0x039E8C94 ADD X0, X31, 0x0
	0x039E8C98 MOV X1, X31
	0x039E8C9C LDR X8, [X8]
	0x039E8CA0 STR W20, [X31 + 0x10]
	0x039E8CA4 STP X8, X9, [X31]
	0x039E8CA8 BL 0x33B162C
	0x039E8CAC MOV X2, X0
	0x039E8CB0 B 0x39E8CB8
	0x039E8CB4 LDR X2, [X27]
	0x039E8CB8 ANDS W31, W23, 0x1
	0x039E8CBC CSEL X1, X24, X19, NE
	0x039E8CC0 MOV X0, X22
	0x039E8CC4 MOV X3, X21
	0x039E8CC8 MOV X4, X31
	0x039E8CCC BL 0x3227C18
	0x039E8CD0 LDP X20, X19, [X31 + 0x70]
	0x039E8CD4 LDP X22, X21, [X31 + 0x60]
	0x039E8CD8 LDP X24, X23, [X31 + 0x50]
	0x039E8CDC LDP X26, X25, [X31 + 0x40]
	0x039E8CE0 LDP X28, X27, [X31 + 0x30]
	0x039E8CE4 LDP X29, X30, [X31 + 0x20]
	0x039E8CE8 ADD X31, X31, 0x80
	0x039E8CEC RET
	0x039E8CF0 BL 0x1C16F28
	0x039E8CF4 BL 0x1C16F44
	0x039E8CF8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+192], D11
	003 Move [X31+200], D10
	004 Move [X31+208], D9
	005 Move [X31+216], D8
	006 Move [X31+224], X29
	007 Move [X31+240], X30
	008 Move [X31+248], X27
	009 Move [X31+256], X26
	010 Move [X31+264], X25
	011 Move [X31+272], X24
	012 Move [X31+280], X23
	013 Move [X31+288], X22
	014 Move [X31+296], X21
	015 Move [X31+304], X20
	016 Move [X31+312], X19
	017 Move X26, 0x9FA000
	018 Move W8, [X26+3603]
	019 Move W19, W6
	020 Move W21, W5
	021 Move W22, W4
	022 Move V8, V3
	023 Move V9, V2
	024 Move V10, V1
	025 Move V11, V0
	026 Move W20, W3
	027 Move X25, X2
	028 Move X23, X1
	029 Move X24, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {42}
	034 Move X0, 0x734000
	035 Move X0, [X0+2296]
	036 Call 0x1C17CF4
	037 Move X0, 0x70C000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X26+3603], W8
	042 Compare X23, 0
	043 JumpIfEqual {177}
	044 Move X27, 0x70C000
	045 Move X27, [X27+1432]
	046 Move X26, [X23+24]
	047 Move X0, [X27]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X26
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {111}
	060 Compare X25, 0
	061 JumpIfEqual {177}
	062 Move X0, [X27]
	063 Move X26, [X25+24]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X26
	069 Move X1, X31
	070 Move X2, X31
	071 Call Object.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {104}
	076 Move X0, [X23+24]
	077 Compare X0, 0
	078 JumpIfEqual {177}
	079 Move X8, [X0]
	080 Move X9, [X8+392]
	081 Move X1, [X8+400]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X0, [X23+24]
	084 Compare X0, 0
	085 JumpIfEqual {177}
	086 Move X8, [X0]
	087 Move X9, [X8+424]
	088 Move X1, [X8+432]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X0, [X25+24]
	091 Compare X0, 0
	092 JumpIfEqual {177}
	093 Move X8, [X0]
	094 Move X9, [X8+392]
	095 Move X1, [X8+400]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X25+24]
	098 Compare X0, 0
	099 JumpIfEqual {177}
	100 Move X8, [X0]
	101 Move X9, [X8+424]
	102 Move X1, [X8+432]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X23+72]
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 Add X26, X31, 144
	108 Move [X31+176], X8
	109 Move [X31+144], V1
	110 Move [X31+152], V0
	111 Move X8, [X23+72]
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 Move [X31+176], X8
	115 Move [X31+144], V1
	116 Move [X31+152], V0
	117 Compare X25, 0
	118 JumpIfEqual {177}
	119 Add X26, X31, 144
	120 Move X8, 0x734000
	121 Move X8, [X8+2296]
	122 Move X9, [X25+72]
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move X0, [X8]
	126 Move [X31+128], X9
	127 Move [X31+96], V1
	128 Move [X31+104], V0
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move V0, [X26]
	134 Move V1, [X26+16]
	135 Move X8, [X26+32]
	136 Move V2, [X31+96]
	137 Move V3, [X31+112]
	138 Move X9, [X31+128]
	139 Add X1, X31, 48
	140 Add X2, X31, 0
	141 Move X0, X24
	142 Move W3, W22
	143 Move W4, W21
	144 Move W5, W19
	145 Move [X31+80], X8
	146 Move [X31+48], V0
	147 Move [X31+56], V1
	148 Move [X31], V2
	149 Move [X31+8], V3
	150 Move [X31+32], X9
	151 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	152 Move X0, X24
	153 Move X1, X23
	154 Move W2, W20
	155 Move V0, V11
	156 Move V1, V10
	157 Move V2, V9
	158 Move V3, V8
	159 Move X20, [X31+304]
	160 Move X19, [X31+312]
	161 Move X22, [X31+288]
	162 Move X21, [X31+296]
	163 Move X24, [X31+272]
	164 Move X23, [X31+280]
	165 Move X26, [X31+256]
	166 Move X25, [X31+264]
	167 Move X30, [X31+240]
	168 Move X27, [X31+248]
	169 Move X29, [X31+224]
	170 Move D9, [X31+208]
	171 Move D8, [X31+216]
	172 Move D11, [X31+192]
	173 Move D10, [X31+200]
	174 Add X31, X31, 320
	175 Call CoreUtils.SetViewportAndClear, X0, X1, X2, X3
	176 Return 
	177 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle buffer, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E429C LDR X20, [X20 + 0xE28]
	0x039E42A0 TBNZ X8, 0x0, 0x39E42C4
	0x039E42A4 ADRP X0, 0x76E000
	0x039E42A8 LDR X0, [X0 + 0xE28]
	0x039E42AC BL 0x1C16CF4
	0x039E42B0 ADRP X0, 0x76C000
	0x039E42B4 LDR X0, [X0 + 0x590]
	0x039E42B8 BL 0x1C16CF4
	0x039E42BC MOVZ W8, 0x1
	0x039E42C0 STRB W8, [X19 + 0xDE1]
	0x039E42C4 LDR X0, [X21]
	0x039E42C8 BL 0x1C16F10
	0x039E42CC MOV X1, X31
	0x039E42D0 MOV X19, X0
	0x039E42D4 BL 0x3C122EC
	0x039E42D8 LDR X8, [X20]
	0x039E42DC LDR X8, [X8 + 0xB8]
	0x039E42E0 STR X19, [X8 + 0x20]
	0x039E42E4 LDP X20, X19, [X31 + 0x10]
	0x039E42E8 LDP X30, X21, [X31], #0x20
	0x039E42EC RET
	0x039E42F0 STP X29, X30, [X31 - 0x60]!
	0x039E42F4 STP X28, X27, [X31 + 0x10]
	0x039E42F8 STP X26, X25, [X31 + 0x20]
	0x039E42FC STP X24, X23, [X31 + 0x30]
	0x039E4300 STP X22, X21, [X31 + 0x40]
	0x039E4304 STP X20, X19, [X31 + 0x50]
	0x039E4308 ADRP X28, 0x9FD000
	0x039E430C ADRP X29, 0x76F000
	0x039E4310 ADRP X19, 0x76F000
	0x039E4314 ADRP X27, 0x76F000
	0x039E4318 ADRP X26, 0x76F000
	0x039E431C ADRP X25, 0x76F000
	0x039E4320 ADRP X24, 0x76F000
	0x039E4324 ADRP X23, 0x76F000
	0x039E4328 ADRP X22, 0x76F000
	0x039E432C ADRP X21, 0x76F000
	0x039E4330 ADRP X20, 0x76F000
	0x039E4334 LDR X29, [X29 + 0x3B8]
	0x039E4338 LDR X19, [X19 + 0x1B0]
	0x039E433C LDR X27, [X27 + 0x3C0]
	0x039E4340 LDR X26, [X26 + 0x3C8]
	0x039E4344 LDR X25, [X25 + 0x3D0]
	0x039E4348 LDRB W8, [X28 + 0xDE6]
	0x039E434C LDR X24, [X24 + 0x3D8]
	0x039E4350 LDR X23, [X23 + 0x3E0]
	0x039E4354 LDR X22, [X22 + 0x3E8]
	0x039E4358 LDR X21, [X21 + 0x3F0]
	0x039E435C LDR X20, [X20 + 0x3F8]
	0x039E4360 TBNZ X8, 0x0, 0x39E43E4
	0x039E4364 ADRP X0, 0x76F000
	0x039E4368 LDR X0, [X0 + 0x1B0]
	0x039E436C BL 0x1C16CF4
	0x039E4370 ADRP X0, 0x76F000
	0x039E4374 LDR X0, [X0 + 0x3D0]
	0x039E4378 BL 0x1C16CF4
	0x039E437C ADRP X0, 0x76F000
	0x039E4380 LDR X0, [X0 + 0x3C8]
	0x039E4384 BL 0x1C16CF4
	0x039E4388 ADRP X0, 0x76F000
	0x039E438C LDR X0, [X0 + 0x3E0]
	0x039E4390 BL 0x1C16CF4
	0x039E4394 ADRP X0, 0x76F000
	0x039E4398 LDR X0, [X0 + 0x3F0]
	0x039E439C BL 0x1C16CF4
	0x039E43A0 ADRP X0, 0x76F000
	0x039E43A4 LDR X0, [X0 + 0x3E8]
	0x039E43A8 BL 0x1C16CF4
	0x039E43AC ADRP X0, 0x76F000
	0x039E43B0 LDR X0, [X0 + 0x3C0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+136], X27
	008 Move [X31+144], X26
	009 Move [X31+152], X25
	010 Move [X31+160], X24
	011 Move [X31+168], X23
	012 Move [X31+176], X22
	013 Move [X31+184], X21
	014 Move [X31+192], X20
	015 Move [X31+200], X19
	016 Move X27, 0x9FE000
	017 Move W8, [X27+3604]
	018 Move W19, W7
	019 Move W21, W6
	020 Move W22, W5
	021 Move V8, V3
	022 Move V9, V2
	023 Move V10, V1
	024 Move V11, V0
	025 Move W20, W4
	026 Move W25, W3
	027 Move W26, W2
	028 Move X23, X1
	029 Move X24, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x738000
	035 Move X0, [X0+2296]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X27+3604], W8
	039 Compare X23, 0
	040 JumpIfEqual {92}
	041 Move X8, 0x738000
	042 Move X8, [X8+2296]
	043 Move X9, [X23+72]
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X0, [X8]
	047 Move [X31+80], X9
	048 Move [X31+48], V1
	049 Move [X31+56], V0
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move V0, [X31+48]
	055 Move V1, [X31+64]
	056 Move X8, [X31+80]
	057 Add X1, X31, 0
	058 Move X0, X24
	059 Move W2, W26
	060 Move W3, W25
	061 Move W4, W22
	062 Move W5, W21
	063 Move W6, W19
	064 Move [X31], V0
	065 Move [X31+8], V1
	066 Move [X31+32], X8
	067 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	068 Move X0, X24
	069 Move X1, X23
	070 Move W2, W20
	071 Move V0, V11
	072 Move V1, V10
	073 Move V2, V9
	074 Move V3, V8
	075 Call CoreUtils.SetViewportAndClear, X0, X1, X2, X3
	076 Move X20, [X31+192]
	077 Move X19, [X31+200]
	078 Move X22, [X31+176]
	079 Move X21, [X31+184]
	080 Move X24, [X31+160]
	081 Move X23, [X31+168]
	082 Move X26, [X31+144]
	083 Move X25, [X31+152]
	084 Move X30, [X31+128]
	085 Move X27, [X31+136]
	086 Move D9, [X31+112]
	087 Move D8, [X31+120]
	088 Move D11, [X31+96]
	089 Move D10, [X31+104]
	090 Add X31, X31, 208
	091 Return 
	092 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorBuffer, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, System.Int32 miplevel = 0, UnityEngine.CubemapFace cubemapFace = -1, System.Int32 depthSlice = -1)

Disassembly:
	0x039E8E68 MOV X0, X19
	0x039E8E6C LDP X9, X1, [X8 + 0x188]
	0x039E8E70 BLR X9
	0x039E8E74 ADRP X22, 0x9F9000
	0x039E8E78 LDRB W8, [X22 + 0xE38]
	0x039E8E7C MOV W21, W0
	0x039E8E80 CBNZ W8, 0x39E8E98
	0x039E8E84 ADRP X0, 0x70B000
	0x039E8E88 LDR X0, [X0 + 0x5A8]
	0x039E8E8C BL 0x1C16CF4
	0x039E8E90 MOVZ W8, 0x1
	0x039E8E94 STRB W8, [X22 + 0xE38]
	0x039E8E98 ADRP X8, 0x70B000
	0x039E8E9C LDR X8, [X8 + 0x5A8]
	0x039E8EA0 SCVTF S12, W21
	0x039E8EA4 LDR X0, [X8]
	0x039E8EA8 LDR W8, [X0 + 0xE0]
	0x039E8EAC CBNZ W8, 0x39E8EB4
	0x039E8EB0 BL 0x1C16DFC
	0x039E8EB4 FCVT S0, S12
	0x039E8EB8 FMOV D1, 2
	0x039E8EBC MOV X0, X31
	0x039E8EC0 BL 0x337ECD0
	0x039E8EC4 MOVZ W8, 0x7F800000
	0x00000000 INVALID
	0x039E8ECC FMOV S1, W8
	0x039E8ED0 FCVTZS W9, S0
	0x039E8ED4 FCMP S0, S1
	0x039E8ED8 ORR W8, W31, 0x80000001
	0x039E8EDC CSINC W23, W8, W9, EQ
	0x039E8EE0 ADRP X24, 0x733000
	0x039E8EE4 LDR X24, [X24 + 0x8F8]
	0x039E8EE8 MOV W21, W31
	0x039E8EEC CMP W23, 0x1
	0x039E8EF0 B.LT 0x39E8F6C
	0x039E8EF4 MOV W22, W31
	0x039E8EF8 MOVI V0.2D, 0x0
	0x039E8EFC ADD X0, X31, 0x30
	0x039E8F00 MOV X1, X19
	0x039E8F04 MOV X2, X31
	0x039E8F08 STR X31, [X31 + 0x50]
	0x039E8F0C STP V0, V0, [X31 + 0x30]
	0x039E8F10 BL 0x3C4B0C4
	0x039E8F14 LDR X0, [X24]
	0x039E8F18 LDR W8, [X0 + 0xE0]
	0x039E8F1C CBNZ W8, 0x39E8F24
	0x039E8F20 BL 0x1C16DFC
	0x039E8F24 LDP V0, V1, [X31 + 0x30]
	0x039E8F28 LDR X8, [X31 + 0x50]
	0x039E8F2C ADD X1, X31, 0x0
	0x039E8F30 MOVZ W2, 0x1
	0x039E8F34 STP V0, V1, [X31]
	0x039E8F38 MOVN W5, 0x0
	0x039E8F3C MOV X0, X20
	0x039E8F40 MOV V0.16B, V11.16B
	0x039E8F44 MOV V1.16B, V10.16B
	0x039E8F48 MOV V2.16B, V9.16B
	0x039E8F4C MOV V3.16B, V8.16B
	0x039E8F50 MOV W3, W22
	0x039E8F54 MOV W4, W21
	0x039E8F58 STR X8, [X31 + 0x20]
	0x039E8F5C BL 0x39E65CC
	0x039E8F60 ADD W22, W22, 0x1
	0x039E8F64 CMP W23, W22
	0x039E8F68 B.NE 0x39E8EF8
	0x039E8F6C ADD W21, W21, 0x1
	0x039E8F70 CMP W21, 0x6
	0x039E8F74 B.NE 0x39E8EEC
	0x039E8F78 LDP X20, X19, [X31 + 0xB0]
	0x039E8F7C LDP X22, X21, [X31 + 0xA0]
	0x039E8F80 LDP X24, X23, [X31 + 0x90]
	0x039E8F84 LDR X30, [X31 + 0x88]
	0x039E8F88 LDP D9, D8, [X31 + 0x78]
	0x039E8F8C LDP D11, D10, [X31 + 0x68]
	0x039E8F90 LDR V12, [X31 + 0x60]
	0x039E8F94 ADD X31, X31, 0xC0
	0x039E8F98 RET
	0x039E8F9C BL 0x1C16F20
	0x039E8FA0 SUB X31, X31, 0xC0
	0x039E8FA4 STP X30, X23, [X31 + 0x90]
	0x039E8FA8 STP X22, X21, [X31 + 0xA0]
	0x039E8FAC STP X20, X19, [X31 + 0xB0]
	0x039E8FB0 ADRP X23, 0x9F0000
	0x039E8FB4 LDRB W8, [X23 + 0xAC0]
	0x039E8FB8 MOV W20, W3
	0x039E8FBC MOV X19, X2
	0x039E8FC0 MOV X21, X1
	0x039E8FC4 MOV X22, X0
	0x039E8FC8 CBNZ W8, 0x39E8FE0
	0x039E8FCC ADRP X0, 0x70F000
	0x039E8FD0 LDR X0, [X0 + 0x270]
	0x039E8FD4 BL 0x1C16CF4
	0x039E8FD8 MOVZ W8, 0x1
	0x039E8FDC STRB W8, [X23 + 0xAC0]
	0x039E8FE0 ADRP X8, 0x70F000
	0x039E8FE4 LDR X8, [X8 + 0x270]
	0x039E8FE8 LDR X8, [X8]
	0x039E8FEC LDR X8, [X8 + 0xB8]
	0x039E8FF0 LDP V1, V0, [X8 + 0x60]
	0x039E8FF4 LDP V2, V3, [X8 + 0x40]
	0x039E8FF8 STP V1, V0, [X31 + 0x70]
	0x039E8FFC STP V2, V3, [X31 + 0x50]
	0x039E9000 CBZ X22, 0x39E9050
	0x039E9004 LDP V0, V1, [X31 + 0x50]
	0x039E9008 LDP V2, V3, [X31 + 0x70]
	0x039E900C ADD X1, X31, 0x10
	0x039E9010 MOVZ W5, 0x3
	0x039E9014 MOVZ W6, 0x1
	0x039E9018 MOV X0, X22
	0x039E901C MOV X2, X21
	0x039E9020 MOV W3, W20
	0x039E9024 MOV W4, W31
	0x039E9028 MOV X7, X19
	0x039E902C STP V0, V1, [X31 + 0x10]
	0x039E9030 STP V2, V3, [X31 + 0x30]
	0x039E9034 STR X31, [X31]
	0x039E9038 BL 0x3C4F388
	0x039E903C LDP X20, X19, [X31 + 0xB0]
	0x039E9040 LDP X22, X21, [X31 + 0xA0]
	0x039E9044 LDP X30, X23, [X31 + 0x90]
	0x039E9048 ADD X31, X31, 0xC0
	0x039E904C RET
	0x039E9050 BL 0x1C16F20
	0x039E9054 SUB X31, X31, 0xE0
	0x039E9058 STP X30, X23, [X31 + 0xB0]
	0x039E905C STP X22, X21, [X31 + 0xC0]
	0x039E9060 STP X20, X19, [X31 + 0xD0]
	0x039E9064 LDR X8, [X2 + 0x20]
	0x039E9068 LDP V1, V0, [X2]
	0x039E906C STR X8, [X31 + 0xA0]
	0x039E9070 STP V1, V0, [X31 + 0x80]
	0x039E9074 CBZ X0, 0x39E912C
	0x039E9078 LDP V0, V1, [X31 + 0x80]
	0x039E907C LDR X8, [X31 + 0xA0]
	0x039E9080 MOV W20, W4
	0x039E9084 MOV X19, X3
	0x039E9088 MOV X21, X1
	0x039E908C ADD X1, X31, 0x50
	0x039E9090 MOVN W3, 0x0
	0x039E9094 MOVN W4, 0x0
	0x039E9098 MOV W2, W31
	0x039E909C MOV X5, X31

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+224], D11
	003 Move [X31+232], D10
	004 Move [X31+240], D9
	005 Move [X31+248], D8
	006 Move [X31+256], X29
	007 Move [X31+264], X30
	008 Move [X31+272], X28
	009 Move [X31+280], X27
	010 Move [X31+288], X26
	011 Move [X31+296], X25
	012 Move [X31+304], X24
	013 Move [X31+312], X23
	014 Move [X31+320], X22
	015 Move [X31+328], X21
	016 Move [X31+336], X20
	017 Move [X31+344], X19
	018 Move X27, 0x9FA000
	019 Move W8, [X27+3605]
	020 Move V8, V3
	021 Move V9, V2
	022 Move V10, V1
	023 Move V11, V0
	024 Move W19, W7
	025 Move W21, W6
	026 Move W22, W5
	027 Move X26, X4
	028 Move W24, W3
	029 Move W25, W2
	030 Move X20, X1
	031 Move X23, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {44}
	036 Move X0, 0x734000
	037 Move X0, [X0+2296]
	038 Call 0x1C17CF4
	039 Move X0, 0x70C000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X27+3605], W8
	044 Compare X20, 0
	045 JumpIfEqual {187}
	046 Move X28, 0x70C000
	047 Move X28, [X28+1432]
	048 Move X27, [X20+24]
	049 Move X0, [X28]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X27
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {113}
	062 Compare X26, 0
	063 JumpIfEqual {187}
	064 Move X0, [X28]
	065 Move X27, [X26+24]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X27
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {106}
	078 Move X0, [X20+24]
	079 Compare X0, 0
	080 JumpIfEqual {187}
	081 Move X8, [X0]
	082 Move X9, [X8+392]
	083 Move X1, [X8+400]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X0, [X20+24]
	086 Compare X0, 0
	087 JumpIfEqual {187}
	088 Move X8, [X0]
	089 Move X9, [X8+424]
	090 Move X1, [X8+432]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X0, [X26+24]
	093 Compare X0, 0
	094 JumpIfEqual {187}
	095 Move X8, [X0]
	096 Move X9, [X8+392]
	097 Move X1, [X8+400]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X0, [X26+24]
	100 Compare X0, 0
	101 JumpIfEqual {187}
	102 Move X8, [X0]
	103 Move X9, [X8+424]
	104 Move X1, [X8+432]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X20+72]
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 Add X28, X31, 176
	110 Move [X31+208], X8
	111 Move [X31+176], V1
	112 Move [X31+184], V0
	113 Move X8, [X20+72]
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move [X31+208], X8
	117 Move [X31+176], V1
	118 Move [X31+184], V0
	119 Compare X26, 0
	120 JumpIfEqual {187}
	121 Add X28, X31, 176
	122 Move X8, 0x734000
	123 Move X8, [X8+2296]
	124 Move X9, [X26+72]
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 Move X0, [X8]
	128 Move [X31+160], X9
	129 Move W27, [X31+352]
	130 Move [X31+128], V1
	131 Move [X31+136], V0
	132 Move W29, [X31+368]
	133 Move W8, [X0+224]
	134 Move W26, [X31+360]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move V0, [X28]
	139 Move V1, [X28+16]
	140 Move X8, [X28+32]
	141 Move V2, [X31+128]
	142 Move V3, [X31+144]
	143 Move X9, [X31+160]
	144 Add X1, X31, 80
	145 Add X4, X31, 32
	146 Move X0, X23
	147 Move W2, W25
	148 Move W3, W24
	149 Move W5, W22
	150 Move W6, W21
	151 Move W7, W27
	152 Move [X31+112], X8
	153 Move [X31+80], V0
	154 Move [X31+88], V1
	155 Move [X31+32], V2
	156 Move [X31+40], V3
	157 Move [X31+64], X9
	158 Move [X31+8], W29
	159 Move [X31], W26
	160 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	161 Move X0, X23
	162 Move X1, X20
	163 Move W2, W19
	164 Move V0, V11
	165 Move V1, V10
	166 Move V2, V9
	167 Move V3, V8
	168 Call CoreUtils.SetViewportAndClear, X0, X1, X2, X3
	169 Move X20, [X31+336]
	170 Move X19, [X31+344]
	171 Move X22, [X31+320]
	172 Move X21, [X31+328]
	173 Move X24, [X31+304]
	174 Move X23, [X31+312]
	175 Move X26, [X31+288]
	176 Move X25, [X31+296]
	177 Move X28, [X31+272]
	178 Move X27, [X31+280]
	179 Move X29, [X31+256]
	180 Move X30, [X31+264]
	181 Move D9, [X31+240]
	182 Move D8, [X31+248]
	183 Move D11, [X31+224]
	184 Move D10, [X31+232]
	185 Add X31, X31, 352
	186 Return 
	187 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RTHandle depthBuffer)

Disassembly:
	0x039E90A0 MOV X22, X0
	0x039E90A4 STP V0, V1, [X31 + 0x50]
	0x039E90A8 STR X8, [X31 + 0x70]
	0x039E90AC BL 0x3C4DDFC
	0x039E90B0 ADRP X23, 0x9EF000
	0x039E90B4 LDRB W8, [X23 + 0xAC0]
	0x039E90B8 CBNZ W8, 0x39E90D0
	0x039E90BC ADRP X0, 0x70E000
	0x039E90C0 LDR X0, [X0 + 0x270]
	0x039E90C4 BL 0x1C16CF4
	0x039E90C8 MOVZ W8, 0x1
	0x039E90CC STRB W8, [X23 + 0xAC0]
	0x039E90D0 ADRP X8, 0x70E000
	0x039E90D4 LDR X8, [X8 + 0x270]
	0x039E90D8 ADD X1, X31, 0x10
	0x039E90DC MOVZ W5, 0x3
	0x039E90E0 MOVZ W6, 0x1
	0x039E90E4 LDR X8, [X8]
	0x039E90E8 MOV X0, X22
	0x039E90EC MOV X2, X21
	0x039E90F0 MOV W3, W20
	0x039E90F4 LDR X8, [X8 + 0xB8]
	0x039E90F8 MOV W4, W31
	0x039E90FC MOV X7, X19
	0x039E9100 LDP V1, V0, [X8 + 0x60]
	0x039E9104 LDP V2, V3, [X8 + 0x40]
	0x039E9108 STR X31, [X31]
	0x039E910C STP V1, V0, [X31 + 0x30]
	0x039E9110 STP V2, V3, [X31 + 0x10]
	0x039E9114 BL 0x3C4F388
	0x039E9118 LDP X20, X19, [X31 + 0xD0]
	0x039E911C LDP X22, X21, [X31 + 0xC0]
	0x039E9120 LDP X30, X23, [X31 + 0xB0]
	0x039E9124 ADD X31, X31, 0xE0
	0x039E9128 RET
	0x039E912C BL 0x1C16F20
	0x039E9130 SUB X31, X31, 0x150
	0x039E9134 STR X29, [X31 + 0x110]
	0x039E9138 STP X30, X23, [X31 + 0x120]
	0x039E913C STP X22, X21, [X31 + 0x130]
	0x039E9140 STP X20, X19, [X31 + 0x140]
	0x039E9144 LDR X8, [X2 + 0x20]
	0x039E9148 LDP V1, V0, [X2]
	0x039E914C STR X8, [X31 + 0x100]
	0x039E9150 STP V1, V0, [X31 + 0xE0]
	0x039E9154 LDR X8, [X3 + 0x20]
	0x039E9158 LDP V1, V0, [X3]
	0x039E915C STR X8, [X31 + 0xD0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x9F9000
	008 Move W8, [X22+3606]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x733000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3606], W8
	021 Compare X19, 0
	022 JumpIfEqual {61}
	023 Move X8, 0x733000
	024 Move X8, [X8+2296]
	025 Move X9, [X19+72]
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move X0, [X8]
	029 Move [X31+80], X9
	030 Move [X31+48], V1
	031 Move [X31+56], V0
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move V0, [X31+48]
	037 Move V1, [X31+64]
	038 Move X8, [X31+80]
	039 Add X2, X31, 0
	040 Move S2, W31
	041 Move [X31], V0
	042 Move [X31+8], V1
	043 Move S0, W31
	044 Move S1, W31
	045 Move S3, W31
	046 Move X0, X21
	047 Move X1, X20
	048 Move W3, W31
	049 Move [X31+32], X8
	050 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4
	051 Move X0, X21
	052 Move X1, X19
	053 Move X20, [X31+128]
	054 Move X19, [X31+136]
	055 Move X22, [X31+112]
	056 Move X21, [X31+120]
	057 Move X30, [X31+96]
	058 Add X31, X31, 144
	059 Call CoreUtils.SetViewport, X0, X1
	060 Return 
	061 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag = 0)

Disassembly:
	0x039E9160 STP V1, V0, [X31 + 0xB0]
	0x039E9164 CBZ X0, 0x39E9234
	0x039E9168 LDP V0, V1, [X31 + 0xE0]
	0x039E916C LDR X8, [X31 + 0x100]
	0x039E9170 LDP V2, V3, [X31 + 0xB0]
	0x039E9174 LDR X9, [X31 + 0xD0]
	0x039E9178 MOV W20, W5
	0x039E917C MOV X19, X4
	0x039E9180 MOV X21, X1
	0x039E9184 ADD X1, X31, 0x80
	0x039E9188 ADD X2, X31, 0x50
	0x039E918C MOVN W4, 0x0
	0x039E9190 MOVN W5, 0x0
	0x039E9194 MOV W3, W31
	0x039E9198 MOV X6, X31
	0x039E919C MOV X22, X0
	0x039E91A0 STP V0, V1, [X31 + 0x80]
	0x039E91A4 STR X8, [X31 + 0xA0]
	0x039E91A8 STP V2, V3, [X31 + 0x50]
	0x039E91AC STR X9, [X31 + 0x70]
	0x039E91B0 BL 0x3C4DF6C
	0x039E91B4 ADRP X23, 0x9EF000
	0x039E91B8 LDRB W8, [X23 + 0xAC0]
	0x039E91BC CBNZ W8, 0x39E91D4
	0x039E91C0 ADRP X0, 0x70E000
	0x039E91C4 LDR X0, [X0 + 0x270]
	0x039E91C8 BL 0x1C16CF4
	0x039E91CC MOVZ W8, 0x1
	0x039E91D0 STRB W8, [X23 + 0xAC0]
	0x039E91D4 ADRP X8, 0x70E000
	0x039E91D8 LDR X8, [X8 + 0x270]
	0x039E91DC ADD X1, X31, 0x10
	0x039E91E0 MOVZ W5, 0x3
	0x039E91E4 MOVZ W6, 0x1
	0x039E91E8 LDR X8, [X8]
	0x039E91EC MOV X0, X22
	0x039E91F0 MOV X2, X21
	0x039E91F4 MOV W3, W20
	0x039E91F8 LDR X8, [X8 + 0xB8]
	0x039E91FC MOV W4, W31
	0x039E9200 MOV X7, X19
	0x039E9204 LDP V1, V0, [X8 + 0x60]
	0x039E9208 LDP V2, V3, [X8 + 0x40]
	0x039E920C STR X31, [X31]
	0x039E9210 STP V1, V0, [X31 + 0x30]
	0x039E9214 STP V2, V3, [X31 + 0x10]
	0x039E9218 BL 0x3C4F388
	0x039E921C LDP X20, X19, [X31 + 0x140]
	0x039E9220 LDP X22, X21, [X31 + 0x130]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X23, 0x9F9000
	009 Move W8, [X23+3607]
	010 Move W19, W3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x733000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3607], W8
	023 Compare X20, 0
	024 JumpIfEqual {64}
	025 Move X8, 0x733000
	026 Move X8, [X8+2296]
	027 Move X9, [X20+72]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move X0, [X8]
	031 Move [X31+80], X9
	032 Move [X31+48], V1
	033 Move [X31+56], V0
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move V0, [X31+48]
	039 Move V1, [X31+64]
	040 Move X8, [X31+80]
	041 Add X2, X31, 0
	042 Move X0, X21
	043 Move X1, X22
	044 Move [X31], V0
	045 Move [X31+8], V1
	046 Move [X31+32], X8
	047 Call CoreUtils.SetRenderTarget, X0, X1, X2
	048 Move X0, X21
	049 Move X1, X20
	050 Move W2, W19
	051 Move X20, [X31+128]
	052 Move X19, [X31+136]
	053 Move X22, [X31+112]
	054 Move X21, [X31+120]
	055 Move X30, [X31+96]
	056 Move X23, [X31+104]
	057 Move S0, W31
	058 Move S1, W31
	059 Move S2, W31
	060 Move S3, W31
	061 Add X31, X31, 144
	062 Call CoreUtils.SetViewportAndClear, X0, X1, X2, X3
	063 Return 
	064 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RTHandle depthBuffer, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x039E9224 LDP X30, X23, [X31 + 0x120]
	0x039E9228 LDR X29, [X31 + 0x110]
	0x039E922C ADD X31, X31, 0x150
	0x039E9230 RET
	0x039E9234 BL 0x1C16F20
	0x039E9238 SUB X31, X31, 0xE0
	0x039E923C STP X30, X23, [X31 + 0xB0]
	0x039E9240 STP X22, X21, [X31 + 0xC0]
	0x039E9244 STP X20, X19, [X31 + 0xD0]
	0x039E9248 LDR X9, [X3 + 0x20]
	0x039E924C LDP V1, V0, [X3]
	0x039E9250 STR X9, [X31 + 0xA0]
	0x039E9254 STP V1, V0, [X31 + 0x80]
	0x039E9258 CBZ X0, 0x39E9318
	0x039E925C LDP V0, V1, [X31 + 0x80]
	0x039E9260 LDR X9, [X31 + 0xA0]
	0x039E9264 MOV X8, X2
	0x039E9268 MOV W20, W5
	0x039E926C MOV X19, X4
	0x039E9270 MOV X21, X1
	0x039E9274 ADD X2, X31, 0x50
	0x039E9278 MOVN W4, 0x0
	0x039E927C MOVN W5, 0x0
	0x039E9280 MOV X1, X8
	0x039E9284 MOV W3, W31
	0x039E9288 MOV X6, X31
	0x039E928C MOV X22, X0
	0x039E9290 STP V0, V1, [X31 + 0x50]
	0x039E9294 STR X9, [X31 + 0x70]
	0x039E9298 BL 0x3C4E2C0
	0x039E929C ADRP X23, 0x9EF000
	0x039E92A0 LDRB W8, [X23 + 0xAC0]
	0x039E92A4 CBNZ W8, 0x39E92BC
	0x039E92A8 ADRP X0, 0x70E000
	0x039E92AC LDR X0, [X0 + 0x270]
	0x039E92B0 BL 0x1C16CF4
	0x039E92B4 MOVZ W8, 0x1
	0x039E92B8 STRB W8, [X23 + 0xAC0]
	0x039E92BC ADRP X8, 0x70E000
	0x039E92C0 LDR X8, [X8 + 0x270]
	0x039E92C4 ADD X1, X31, 0x10
	0x039E92C8 MOVZ W5, 0x3
	0x039E92CC MOVZ W6, 0x1
	0x039E92D0 LDR X8, [X8]
	0x039E92D4 MOV X0, X22
	0x039E92D8 MOV X2, X21
	0x039E92DC MOV W3, W20
	0x039E92E0 LDR X8, [X8 + 0xB8]
	0x039E92E4 MOV W4, W31
	0x039E92E8 MOV X7, X19
	0x039E92EC LDP V1, V0, [X8 + 0x60]
	0x039E92F0 LDP V2, V3, [X8 + 0x40]
	0x039E92F4 STR X31, [X31]
	0x039E92F8 STP V1, V0, [X31 + 0x30]
	0x039E92FC STP V2, V3, [X31 + 0x10]
	0x039E9300 BL 0x3C4F388
	0x039E9304 LDP X20, X19, [X31 + 0xD0]
	0x039E9308 LDP X22, X21, [X31 + 0xC0]
	0x039E930C LDP X30, X23, [X31 + 0xB0]
	0x039E9310 ADD X31, X31, 0xE0
	0x039E9314 RET
	0x039E9318 BL 0x1C16F20
	0x039E931C SUB X31, X31, 0xA0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X23, 0x9F9000
	013 Move W8, [X23+3608]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move W19, W3
	019 Move X20, X2
	020 Move X22, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x733000
	027 Move X0, [X0+2296]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3608], W8
	031 Compare X20, 0
	032 JumpIfEqual {86}
	033 Move X8, [X20+72]
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move [X31+80], X8
	037 Move [X31+48], V1
	038 Move [X31+56], V0
	039 Compare X21, 0
	040 JumpIfEqual {86}
	041 Move V0, [X31+48]
	042 Move V1, [X31+64]
	043 Move X8, [X31+80]
	044 Move X23, 0x733000
	045 Move X23, [X23+2296]
	046 Add X2, X31, 0
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W4, TEMP
	050 Move TEMP, 0
	051 Not TEMP
	052 Move W5, TEMP
	053 Move X0, X21
	054 Move X1, X22
	055 Move W3, W31
	056 Move X6, X31
	057 Move [X31], V0
	058 Move [X31+8], V1
	059 Move [X31+32], X8
	060 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	061 Move X0, [X23]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X20
	068 Move W2, W19
	069 Move V0, V11
	070 Move V1, V10
	071 Move V2, V9
	072 Move V3, V8
	073 Call CoreUtils.SetViewportAndClear, X0, X1, X2, X3
	074 Move X20, [X31+160]
	075 Move X19, [X31+168]
	076 Move X22, [X31+144]
	077 Move X21, [X31+152]
	078 Move X30, [X31+128]
	079 Move X23, [X31+136]
	080 Move D9, [X31+112]
	081 Move D8, [X31+120]
	082 Move D11, [X31+96]
	083 Move D10, [X31+104]
	084 Add X31, X31, 176
	085 Return 
	086 Call 0x1C17F20

Method: System.Void SetViewport(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle target)

Disassembly:
	0x039E87EC MOV X1, X31
	0x039E87F0 STP X8, X9, [X31 + 0x18]
	0x039E87F4 STR W26, [X31 + 0x28]
	0x039E87F8 BL 0x33B162C
	0x039E87FC LDR X8, [X27]
	0x039E8800 MOV X26, X0
	0x039E8804 LDR W9, [X8 + 0xE0]
	0x039E8808 CBNZ W9, 0x39E8814
	0x039E880C MOV X0, X8
	0x039E8810 BL 0x1C16DFC
	0x039E8814 AND W8, W29, 0x1
	0x039E8818 AND W6, W23, 0x1
	0x039E881C AND W7, W21, 0x1
	0x039E8820 MOV W0, W25
	0x039E8824 MOV W1, W24
	0x039E8828 MOV W2, W22
	0x039E882C MOV X3, X26
	0x039E8830 MOV W4, W20
	0x039E8834 MOV X5, X19
	0x039E8838 STRB W8, [X31 + 0x8]
	0x039E883C STR W28, [X31]
	0x039E8840 BL 0x39E8418
	0x039E8844 LDP X20, X19, [X31 + 0x80]
	0x039E8848 LDP X22, X21, [X31 + 0x70]
	0x039E884C LDP X24, X23, [X31 + 0x60]
	0x039E8850 LDP X26, X25, [X31 + 0x50]
	0x039E8854 LDP X28, X27, [X31 + 0x40]
	0x039E8858 LDP X29, X30, [X31 + 0x30]
	0x039E885C ADD X31, X31, 0x90
	0x039E8860 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Compare X1, 0
	006 JumpIfEqual {37}
	007 Move W8, [X1+168]
	008 Move X20, X1
	009 Compare W8, 0
	010 JumpIfEqual {32}
	011 Move X19, X0
	012 Add X8, X31, 0
	013 Move X0, X20
	014 Move X1, X31
	015 Call RTHandle.get_rtHandleProperties, X0
	016 Move X1, [X31+16]
	017 Move X0, X20
	018 Move X2, X31
	019 Call RTHandle.GetScaledSize, X0, X1
	020 Compare X19, 0
	021 JumpIfEqual {37}
	022 Move X8, X0
	023 ShiftRight X8, 32
	024 And X8, X8, 0x7FFFFFFF
	025 NotImplemented "Instruction SCVTF not yet implemented."
	026 NotImplemented "Instruction SCVTF not yet implemented."
	027 Move S0, W31
	028 Move S1, W31
	029 Move X0, X19
	030 Move X1, X31
	031 Call CommandBuffer.SetViewport, X0, X1
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Add X31, X31, 80
	036 Return 
	037 Call 0x1C17F20

Method: System.String GetRenderTargetAutoName(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.RenderTextureFormat format, System.String name, System.Boolean mips = False, System.Boolean enableMSAA = False, UnityEngine.Rendering.MSAASamples msaaSamples = 1)

Disassembly:
	0x039E9320 STR X30, [X31 + 0x60]
	0x039E9324 STP X24, X23, [X31 + 0x70]
	0x039E9328 STP X22, X21, [X31 + 0x80]
	0x039E932C STP X20, X19, [X31 + 0x90]
	0x039E9330 ADRP X24, 0x9F8000
	0x039E9334 LDRB W8, [X24 + 0xE21]
	0x039E9338 MOV W19, W4
	0x039E933C MOV X20, X3
	0x039E9340 MOV X21, X2
	0x039E9344 MOV X22, X1
	0x039E9348 MOV X23, X0
	0x039E934C TBNZ X8, 0x0, 0x39E9364
	0x039E9350 ADRP X0, 0x732000
	0x039E9354 LDR X0, [X0 + 0x8F8]
	0x039E9358 BL 0x1C16CF4
	0x039E935C MOVZ W8, 0x1
	0x039E9360 STRB W8, [X24 + 0xE21]
	0x039E9364 CBZ X21, 0x39E93DC
	0x039E9368 LDR W8, [X21 + 0x18]
	0x039E936C CBZ W8, 0x39E93E0
	0x039E9370 ADRP X9, 0x732000
	0x039E9374 LDR X8, [X21 + 0x40]
	0x039E9378 LDP V0, V1, [X21 + 0x20]
	0x039E937C LDR X9, [X9 + 0x8F8]
	0x039E9380 STR X8, [X31 + 0x50]
	0x039E9384 STP V0, V1, [X31 + 0x30]
	0x039E9388 LDR X0, [X9]
	0x039E938C LDR W8, [X0 + 0xE0]
	0x039E9390 CBNZ W8, 0x39E9398
	0x039E9394 BL 0x1C16DFC
	0x039E9398 LDP V0, V1, [X31 + 0x30]
	0x039E939C LDR X8, [X31 + 0x50]
	0x039E93A0 ADD X3, X31, 0x0
	0x039E93A4 MOV X0, X23
	0x039E93A8 MOV X1, X22
	0x039E93AC MOV X2, X21
	0x039E93B0 MOV X4, X20
	0x039E93B4 MOV W5, W19
	0x039E93B8 STP V0, V1, [X31]
	0x039E93BC STR X8, [X31 + 0x20]
	0x039E93C0 BL 0x39E9238
	0x039E93C4 LDP X20, X19, [X31 + 0x90]
	0x039E93C8 LDP X22, X21, [X31 + 0x80]
	0x039E93CC LDP X24, X23, [X31 + 0x70]
	0x039E93D0 LDR X30, [X31 + 0x60]
	0x039E93D4 ADD X31, X31, 0xA0
	0x039E93D8 RET
	0x039E93DC BL 0x1C16F20
	0x039E93E0 BL 0x1C16F28
	0x039E93E4 STP D11, D10, [X31 - 0x30]!
	0x039E93E8 STP D9, D8, [X31 + 0x10]
	0x039E93EC STR X30, [X31 + 0x20]
	0x039E93F0 MOV X0, X31
	0x039E93F4 MOV V8.16B, V3.16B
	0x039E93F8 MOV V9.16B, V2.16B
	0x039E93FC MOV V10.16B, V1.16B
	0x039E9400 MOV V11.16B, V0.16B
	0x039E9404 BL 0x3C113A8
	0x039E9408 CMP W0, 0x1
	0x039E940C B.NE 0x39E9440
	0x039E9410 MOV V0.16B, V11.16B
	0x039E9414 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X28, 0x9F9000
	015 Move X29, 0x76B000
	016 Move X27, 0x733000
	017 Move W8, [X28+3609]
	018 Move X29, [X29+312]
	019 Move X27, [X27+2296]
	020 Move W20, W7
	021 Move W21, W6
	022 Move W23, W5
	023 Move X19, X4
	024 Move W26, W3
	025 Move W22, W2
	026 Move W24, W1
	027 Move W25, W0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x733000
	033 Move X0, [X0+2296]
	034 Call 0x1C17CF4
	035 Move X0, 0x76B000
	036 Move X0, [X0+312]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X28+3609], W8
	040 Move X8, [X29]
	041 Move TEMP, 0
	042 Not TEMP
	043 Move X9, TEMP
	044 Add X0, X31, 24
	045 Move X1, X31
	046 Move [X31+24], X8
	047 Move [X31+32], X9
	048 Move [X31+40], W26
	049 Call Enum.ToString, X0
	050 Move X8, [X27]
	051 Move X26, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 And W6, W23, 1
	058 And W7, W21, 1
	059 Move W0, W25
	060 Move W1, W24
	061 Move W2, W22
	062 Move X3, X26
	063 Move W4, W31
	064 Move X5, X19
	065 Move [X31+8], W31
	066 Move [X31], W20
	067 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	068 Move X20, [X31+128]
	069 Move X19, [X31+136]
	070 Move X22, [X31+112]
	071 Move X21, [X31+120]
	072 Move X24, [X31+96]
	073 Move X23, [X31+104]
	074 Move X26, [X31+80]
	075 Move X25, [X31+88]
	076 Move X28, [X31+64]
	077 Move X27, [X31+72]
	078 Move X29, [X31+48]
	079 Move X30, [X31+56]
	080 Add X31, X31, 144
	081 Return X0

Method: System.String GetRenderTargetAutoName(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, System.String name, System.Boolean mips = False, System.Boolean enableMSAA = False, UnityEngine.Rendering.MSAASamples msaaSamples = 1)

Disassembly:
	0x039E9668 MOV X2, X31
	0x039E966C B 0x3C3B6CC
	0x039E9670 STR X30, [X31 - 0x10]!
	0x039E9674 BL 0x1C16F20
	0x039E9678 STP X30, X23, [X31 - 0x30]!
	0x039E967C STP X22, X21, [X31 + 0x10]
	0x039E9680 STP X20, X19, [X31 + 0x20]
	0x039E9684 ADRP X19, 0x9F8000
	0x039E9688 ADRP X22, 0x732000
	0x039E968C LDRB W8, [X19 + 0xE25]
	0x039E9690 LDR X22, [X22 + 0x8F8]
	0x039E9694 TBNZ X8, 0x0, 0x39E96DC
	0x039E9698 ADRP X0, 0x732000
	0x039E969C LDR X0, [X0 + 0x8F8]
	0x039E96A0 BL 0x1C16CF4
	0x039E96A4 ADRP X0, 0x76A000
	0x039E96A8 LDR X0, [X0 + 0x4F0]
	0x039E96AC BL 0x1C16CF4
	0x039E96B0 ADRP X0, 0x76A000
	0x039E96B4 LDR X0, [X0 + 0x4F8]
	0x039E96B8 BL 0x1C16CF4
	0x039E96BC ADRP X0, 0x76A000
	0x039E96C0 LDR X0, [X0 + 0x500]
	0x039E96C4 BL 0x1C16CF4
	0x039E96C8 ADRP X0, 0x76A000
	0x039E96CC LDR X0, [X0 + 0x508]
	0x039E96D0 BL 0x1C16CF4
	0x039E96D4 MOVZ W8, 0x1
	0x039E96D8 STRB W8, [X19 + 0xE25]
	0x039E96DC LDR X8, [X22]
	0x039E96E0 LDR W9, [X8 + 0xE0]
	0x039E96E4 CBNZ W9, 0x39E96F4
	0x039E96E8 MOV X0, X8
	0x039E96EC BL 0x1C16DFC
	0x039E96F0 LDR X8, [X22]
	0x039E96F4 LDR X9, [X8 + 0xB8]
	0x039E96F8 LDR X9, [X9 + 0x40]
	0x039E96FC CBNZ X9, 0x39E97D4
	0x039E9700 MOV X0, X31
	0x039E9704 BL 0x33C0128
	0x039E9708 CBZ X0, 0x39E9800
	0x039E970C MOV X1, X31
	0x039E9710 BL 0x33C0134
	0x039E9714 ADRP X23, 0x76A000
	0x039E9718 LDR X23, [X23 + 0x508]
	0x039E971C MOV X19, X0
	0x039E9720 LDR X8, [X23]
	0x039E9724 LDR W9, [X8 + 0xE0]
	0x039E9728 CBNZ W9, 0x39E9738
	0x039E972C MOV X0, X8
	0x039E9730 BL 0x1C16DFC
	0x039E9734 LDR X8, [X23]
	0x039E9738 LDR X9, [X8 + 0xB8]
	0x039E973C LDR X20, [X9 + 0x8]
	0x039E9740 CBNZ X20, 0x39E9798
	0x039E9744 LDR W9, [X8 + 0xE0]
	0x039E9748 CBNZ W9, 0x39E9758
	0x039E974C MOV X0, X8
	0x039E9750 BL 0x1C16DFC
	0x039E9754 LDR X8, [X23]
	0x039E9758 ADRP X9, 0x76A000
	0x039E975C LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X28, 0x9F9000
	015 Move X29, 0x76B000
	016 Move X27, 0x733000
	017 Move W8, [X28+3610]
	018 Move X29, [X29+1208]
	019 Move X27, [X27+2296]
	020 Move W20, W7
	021 Move W21, W6
	022 Move W23, W5
	023 Move X19, X4
	024 Move W26, W3
	025 Move W22, W2
	026 Move W24, W1
	027 Move W25, W0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x733000
	033 Move X0, [X0+2296]
	034 Call 0x1C17CF4
	035 Move X0, 0x76B000
	036 Move X0, [X0+1208]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X28+3610], W8
	040 Move X8, [X29]
	041 Move TEMP, 0
	042 Not TEMP
	043 Move X9, TEMP
	044 Add X0, X31, 24
	045 Move X1, X31
	046 Move [X31+24], X8
	047 Move [X31+32], X9
	048 Move [X31+40], W26
	049 Call Enum.ToString, X0
	050 Move X8, [X27]
	051 Move X26, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 And W6, W23, 1
	058 And W7, W21, 1
	059 Move W0, W25
	060 Move W1, W24
	061 Move W2, W22
	062 Move X3, X26
	063 Move W4, W31
	064 Move X5, X19
	065 Move [X31+8], W31
	066 Move [X31], W20
	067 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	068 Move X20, [X31+128]
	069 Move X19, [X31+136]
	070 Move X22, [X31+112]
	071 Move X21, [X31+120]
	072 Move X24, [X31+96]
	073 Move X23, [X31+104]
	074 Move X26, [X31+80]
	075 Move X25, [X31+88]
	076 Move X28, [X31+64]
	077 Move X27, [X31+72]
	078 Move X29, [X31+48]
	079 Move X30, [X31+56]
	080 Add X31, X31, 144
	081 Return X0

Method: System.String GetRenderTargetAutoName(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Rendering.TextureDimension dim, System.String name, System.Boolean mips = False, System.Boolean enableMSAA = False, UnityEngine.Rendering.MSAASamples msaaSamples = 1, System.Boolean dynamicRes = False)

Disassembly:
	0x039E9760 LDR X9, [X9 + 0x4F8]
	0x039E9764 LDR X21, [X8]
	0x039E9768 LDR X0, [X9]
	0x039E976C BL 0x1C16F10
	0x039E9770 ADRP X8, 0x76A000
	0x039E9774 LDR X8, [X8 + 0x500]
	0x039E9778 MOV X1, X21
	0x039E977C MOV X3, X31
	0x039E9780 MOV X20, X0
	0x039E9784 LDR X2, [X8]
	0x039E9788 BL 0x2D30578
	0x039E978C LDR X8, [X23]
	0x039E9790 LDR X8, [X8 + 0xB8]
	0x039E9794 STR X20, [X8 + 0x8]
	0x039E9798 ADRP X8, 0x76A000
	0x039E979C LDR X8, [X8 + 0x4F0]
	0x039E97A0 MOV X0, X19
	0x039E97A4 MOV X1, X20
	0x039E97A8 LDR X2, [X8]
	0x039E97AC BL 0x21D1048
	0x039E97B0 LDR X8, [X22]
	0x039E97B4 MOV X19, X0
	0x039E97B8 LDR W9, [X8 + 0xE0]
	0x039E97BC CBNZ W9, 0x39E97CC
	0x039E97C0 MOV X0, X8
	0x039E97C4 BL 0x1C16DFC
	0x039E97C8 LDR X8, [X22]
	0x039E97CC LDR X9, [X8 + 0xB8]
	0x039E97D0 STR X19, [X9 + 0x40]
	0x039E97D4 LDR W9, [X8 + 0xE0]
	0x039E97D8 CBNZ W9, 0x39E97E8
	0x039E97DC MOV X0, X8
	0x039E97E0 BL 0x1C16DFC
	0x039E97E4 LDR X8, [X22]
	0x039E97E8 LDR X8, [X8 + 0xB8]
	0x039E97EC LDP X20, X19, [X31 + 0x20]
	0x039E97F0 LDP X22, X21, [X31 + 0x10]
	0x039E97F4 LDR X0, [X8 + 0x40]
	0x039E97F8 LDP X30, X23, [X31], #0x30
	0x039E97FC RET
	0x039E9800 BL 0x1C16F20
	0x039E9804 CBZ X0, 0x39E9810
	0x039E9808 MOV X1, X31
	0x039E980C B 0x3C1658C
	0x039E9810 RET
	0x039E9814 CBZ X0, 0x39E9820
	0x039E9818 MOV X1, X31
	0x039E981C B 0x3C3AC48
	0x039E9820 RET
	0x039E9824 STP D13, D12, [X31 - 0x50]!
	0x039E9828 STP D11, D10, [X31 + 0x10]
	0x039E982C STP D9, D8, [X31 + 0x20]
	0x039E9830 STP X30, X21, [X31 + 0x30]
	0x039E9834 STP X20, X19, [X31 + 0x40]
	0x039E9838 ADRP X19, 0x9F8000
	0x039E983C ADRP X21, 0x711000
	0x039E9840 ADRP X20, 0x70C000
	0x039E9844 LDRB W8, [X19 + 0xE26]
	0x039E9848 LDR X21, [X21 + 0x700]
	0x039E984C LDR X20, [X20 + 0x9B0]
	0x039E9850 MOV V8.16B, V5.16B
	0x039E9854 MOV V9.16B, V4.16B
	0x039E9858 MOV V11.16B, V3.16B
	0x039E985C MOV V13.16B, V2.16B
	0x039E9860 MOV V12.16B, V1.16B

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X29, 0x9F9000
	015 Move X28, 0x76B000
	016 Move X27, 0x733000
	017 Move W8, [X29+3611]
	018 Move X28, [X28+1208]
	019 Move X27, [X27+2296]
	020 Move W21, W7
	021 Move W23, W6
	022 Move X19, X5
	023 Move W20, W4
	024 Move W26, W3
	025 Move W22, W2
	026 Move W24, W1
	027 Move W25, W0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x733000
	033 Move X0, [X0+2296]
	034 Call 0x1C17CF4
	035 Move X0, 0x76B000
	036 Move X0, [X0+1208]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X29+3611], W8
	040 Move X8, [X28]
	041 Move W29, [X31+152]
	042 Move W28, [X31+144]
	043 Move TEMP, 0
	044 Not TEMP
	045 Move X9, TEMP
	046 Add X0, X31, 24
	047 Move X1, X31
	048 Move [X31+24], X8
	049 Move [X31+32], X9
	050 Move [X31+40], W26
	051 Call Enum.ToString, X0
	052 Move X8, [X27]
	053 Move X26, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 And W8, W29, 1
	060 And W6, W23, 1
	061 And W7, W21, 1
	062 Move W0, W25
	063 Move W1, W24
	064 Move W2, W22
	065 Move X3, X26
	066 Move W4, W20
	067 Move X5, X19
	068 Move [X31+8], W8
	069 Move [X31], W28
	070 Call CoreUtils.GetRenderTargetAutoName, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	071 Move X20, [X31+128]
	072 Move X19, [X31+136]
	073 Move X22, [X31+112]
	074 Move X21, [X31+120]
	075 Move X24, [X31+96]
	076 Move X23, [X31+104]
	077 Move X26, [X31+80]
	078 Move X25, [X31+88]
	079 Move X28, [X31+64]
	080 Move X27, [X31+72]
	081 Move X29, [X31+48]
	082 Move X30, [X31+56]
	083 Add X31, X31, 144
	084 Return X0

Method: System.String GetRenderTargetAutoName(System.Int32 width, System.Int32 height, System.Int32 depth, System.String format, UnityEngine.Rendering.TextureDimension dim, System.String name, System.Boolean mips, System.Boolean enableMSAA, UnityEngine.Rendering.MSAASamples msaaSamples, System.Boolean dynamicRes)

Disassembly:
	0x039E9418 BL 0x3C25A10
	0x039E941C MOV V11.16B, V0.16B
	0x039E9420 MOV V0.16B, V10.16B
	0x039E9424 MOV X0, X31
	0x039E9428 BL 0x3C25A10
	0x039E942C MOV V10.16B, V0.16B
	0x039E9430 MOV V0.16B, V9.16B
	0x039E9434 MOV X0, X31
	0x039E9438 BL 0x3C25A10
	0x039E943C MOV V9.16B, V0.16B
	0x039E9440 MOV V2.16B, V9.16B
	0x039E9444 MOV V3.16B, V8.16B
	0x039E9448 LDR X30, [X31 + 0x20]
	0x039E944C LDP D9, D8, [X31 + 0x10]
	0x039E9450 MOV V0.16B, V11.16B
	0x039E9454 MOV V1.16B, V10.16B
	0x039E9458 LDP D11, D10, [X31], #0x30
	0x039E945C RET
	0x039E9460 STP D11, D10, [X31 - 0x30]!
	0x039E9464 STP D9, D8, [X31 + 0x10]
	0x039E9468 STR X30, [X31 + 0x20]
	0x039E946C MOV X0, X31
	0x039E9470 MOV V8.16B, V3.16B
	0x039E9474 MOV V9.16B, V2.16B
	0x039E9478 MOV V10.16B, V1.16B
	0x039E947C MOV V11.16B, V0.16B
	0x039E9480 BL 0x3C113A8
	0x039E9484 CMP W0, 0x1
	0x039E9488 B.EQ 0x39E94BC
	0x039E948C MOV V0.16B, V11.16B
	0x039E9490 MOV X0, X31
	0x039E9494 BL 0x3C25AF8
	0x039E9498 MOV V11.16B, V0.16B
	0x039E949C MOV V0.16B, V10.16B
	0x039E94A0 MOV X0, X31
	0x039E94A4 BL 0x3C25AF8
	0x039E94A8 MOV V10.16B, V0.16B
	0x039E94AC MOV V0.16B, V9.16B
	0x039E94B0 MOV X0, X31
	0x039E94B4 BL 0x3C25AF8
	0x039E94B8 MOV V9.16B, V0.16B
	0x039E94BC MOV V2.16B, V9.16B
	0x039E94C0 MOV V3.16B, V8.16B
	0x039E94C4 LDR X30, [X31 + 0x20]
	0x039E94C8 LDP D9, D8, [X31 + 0x10]
	0x039E94CC MOV V0.16B, V11.16B
	0x039E94D0 MOV V1.16B, V10.16B
	0x039E94D4 LDP D11, D10, [X31], #0x30
	0x039E94D8 RET
	0x039E94DC STP X30, X21, [X31 - 0x20]!
	0x039E94E0 STP X20, X19, [X31 + 0x10]
	0x039E94E4 ADRP X21, 0x9F8000
	0x039E94E8 ADRP X20, 0x70A000
	0x039E94EC LDRB W8, [X21 + 0xE22]
	0x039E94F0 LDR X20, [X20 + 0x598]
	0x039E94F4 MOV X19, X0
	0x039E94F8 TBNZ X8, 0x0, 0x39E9540
	0x039E94FC ADRP X0, 0x70A000
	0x039E9500 LDR X0, [X0 + 0xA28]
	0x039E9504 BL 0x1C16CF4
	0x039E9508 ADRP X0, 0x70E000
	0x039E950C LDR X0, [X0 + 0xCA0]
	0x039E9510 BL 0x1C16CF4
	0x039E9514 ADRP X0, 0x70A000
	0x039E9518 LDR X0, [X0 + 0x598]
	0x039E951C BL 0x1C16CF4
	0x039E9520 ADRP X0, 0x76A000
	0x039E9524 LDR X0, [X0 + 0x4E0]
	0x039E9528 BL 0x1C16CF4
	0x039E952C ADRP X0, 0x76A000
	0x039E9530 LDR X0, [X0 + 0x4E8]
	0x039E9534 BL 0x1C16CF4
	0x039E9538 MOVZ W8, 0x1
	0x039E953C STRB W8, [X21 + 0xE22]
	0x039E9540 MOV X0, X19
	0x039E9544 MOV X1, X31
	0x039E9548 BL 0x3C13E40
	0x039E954C LDR X8, [X20]
	0x039E9550 MOV X20, X0
	0x039E9554 LDR W9, [X8 + 0xE0]
	0x039E9558 CBNZ W9, 0x39E9564
	0x039E955C MOV X0, X8
	0x039E9560 BL 0x1C16DFC
	0x039E9564 MOV X0, X20
	0x039E9568 MOV X1, X31
	0x039E956C MOV X2, X31
	0x039E9570 BL 0x3C3883C
	0x039E9574 TBZ X0, 0x0, 0x39E95D0
	0x039E9578 ADRP X8, 0x76A000
	0x039E957C ADRP X9, 0x76A000
	0x039E9580 LDR X8, [X8 + 0x4E8]
	0x039E9584 LDR X9, [X9 + 0x4E0]
	0x039E9588 MOV X1, X19
	0x039E958C MOV X3, X31
	0x039E9590 LDR X0, [X8]
	0x039E9594 LDR X2, [X9]
	0x039E9598 BL 0x32274B8
	0x039E959C ADRP X8, 0x70A000
	0x039E95A0 LDR X8, [X8 + 0xA28]
	0x039E95A4 MOV X19, X0
	0x039E95A8 LDR X8, [X8]
	0x039E95AC LDR W9, [X8 + 0xE0]
	0x039E95B0 CBNZ W9, 0x39E95BC
	0x039E95B4 MOV X0, X8
	0x039E95B8 BL 0x1C16DFC
	0x039E95BC MOV X0, X19
	0x039E95C0 MOV X1, X31
	0x039E95C4 BL 0x3C0649C
	0x039E95C8 MOV X19, X31
	0x039E95CC B 0x39E9604
	0x039E95D0 ADRP X8, 0x70E000
	0x039E95D4 LDR X8, [X8 + 0xCA0]
	0x039E95D8 LDR X0, [X8]
	0x039E95DC BL 0x1C16F10
	0x039E95E0 MOV X1, X20
	0x039E95E4 MOV X2, X31
	0x039E95E8 MOV X19, X0
	0x039E95EC BL 0x3C1454C
	0x039E95F0 CBZ X19, 0x39E9614
	0x039E95F4 MOVZ W1, 0x3D
	0x039E95F8 MOV X0, X19
	0x039E95FC MOV X2, X31
	0x039E9600 BL 0x3C396EC
	0x039E9604 MOV X0, X19
	0x039E9608 LDP X20, X19, [X31 + 0x10]
	0x039E960C LDP X30, X21, [X31], #0x20
	0x039E9610 RET
	0x039E9614 BL 0x1C16F20
	0x039E9618 CBZ X0, 0x39E9630
	0x039E961C TBZ X2, 0x0, 0x39E9628
	0x039E9620 MOV X2, X31
	0x039E9624 B 0x3C4D0E0
	0x039E9628 MOV X2, X31
	0x039E962C B 0x3C4D124
	0x039E9630 STR X30, [X31 - 0x10]!
	0x039E9634 BL 0x1C16F20
	0x039E9638 CBZ X0, 0x39E9650
	0x039E963C TBZ X2, 0x0, 0x39E9648
	0x039E9640 MOV X2, X31
	0x039E9644 B 0x3C14E3C
	0x039E9648 MOV X2, X31
	0x039E964C B 0x3C14E80
	0x039E9650 STR X30, [X31 - 0x10]!
	0x039E9654 BL 0x1C16F20
	0x039E9658 CBZ X0, 0x39E9670
	0x039E965C TBZ X2, 0x0, 0x39E9668
	0x039E9660 MOV X2, X31
	0x039E9664 B 0x3C3B688

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X29, 0x9F9000
	015 Move X27, 0x70B000
	016 Move X28, 0x76B000
	017 Move W8, [X29+3612]
	018 Move X27, [X27+1880]
	019 Move X28, [X28+1160]
	020 Move W19, W7
	021 Move W22, W6
	022 Move X24, X5
	023 Move W20, W4
	024 Move X21, X3
	025 Move W23, W2
	026 Move W25, W1
	027 Move W26, W0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {58}
	032 Move X0, 0x70B000
	033 Move X0, [X0+1880]
	034 Call 0x1C17CF4
	035 Move X0, 0x76B000
	036 Move X0, [X0+1168]
	037 Call 0x1C17CF4
	038 Move X0, 0x76B000
	039 Move X0, [X0+1176]
	040 Call 0x1C17CF4
	041 Move X0, 0x70B000
	042 Move X0, [X0+3240]
	043 Call 0x1C17CF4
	044 Move X0, 0x76B000
	045 Move X0, [X0+1184]
	046 Call 0x1C17CF4
	047 Move X0, 0x76B000
	048 Move X0, [X0+1192]
	049 Call 0x1C17CF4
	050 Move X0, 0x76B000
	051 Move X0, [X0+1200]
	052 Call 0x1C17CF4
	053 Move X0, 0x76B000
	054 Move X0, [X0+1160]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X29+3612], W8
	058 Move X0, [X27]
	059 Add X1, X31, 0
	060 Move [X31], W26
	061 Call 0x1C17E04
	062 Move X26, X0
	063 Move X0, [X27]
	064 Add X1, X31, 28
	065 Move [X31+28], W25
	066 Call 0x1C17E04
	067 Move X8, [X28]
	068 Move X3, X0
	069 Move X1, X24
	070 Move X2, X26
	071 Move X0, X8
	072 Move X4, X31
	073 Call String.Format, X0, X1, X2, X3
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X24, X0
	076 Move X0, [X27]
	077 Move X25, 0x76B000
	078 Move X25, [X25+1200]
	079 Add X1, X31, 0
	080 Move [X31], W23
	081 Call 0x1C17E04
	082 Move X8, [X25]
	083 Move X2, X0
	084 Move X1, X24
	085 Move X3, X31
	086 Move X0, X8
	087 Call String.Format, X0, X1, X2
	088 Move X24, X0
	089 Move X23, 0x70B000
	090 Move X23, [X23+3240]
	091 Move TEMP, X22
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {103}
	095 Move X8, 0x76B000
	096 Move X8, [X8+1184]
	097 Move X0, [X23]
	098 Move X1, X24
	099 Move X3, X31
	100 Move X2, [X8]
	101 Call String.Format, X0, X1, X2
	102 Move X24, X0
	103 Move X0, [X23]
	104 Move X1, X24
	105 Move X2, X21
	106 Move X3, X31
	107 Call String.Format, X0, X1, X2
	108 Move X21, X0
	109 Compare W20, 0
	110 JumpIfEqual {124}
	111 Move X8, 0x76B000
	112 Move X8, [X8+1176]
	113 Add X1, X31, 0
	114 Move [X31], W20
	115 Move X0, [X8]
	116 Call 0x1C17E04
	117 Move X8, [X23]
	118 Move X2, X0
	119 Move X1, X21
	120 Move X3, X31
	121 Move X0, X8
	122 Call String.Format, X0, X1, X2
	123 Move X21, X0
	124 Move W20, [X31+136]
	125 Move TEMP, X19
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {149}
	129 Move X8, 0x76B000
	130 Move X8, [X8+1168]
	131 Move W9, [X31+128]
	132 Move TEMP, 0
	133 Not TEMP
	134 Move X10, TEMP
	135 Add X0, X31, 0
	136 Move X8, [X8]
	137 Move X1, X31
	138 Move [X31+16], W9
	139 Move [X31], X8
	140 Move [X31+8], X10
	141 Call Enum.ToString, X0
	142 Move X8, [X23]
	143 Move X2, X0
	144 Move X1, X21
	145 Move X3, X31
	146 Move X0, X8
	147 Call String.Format, X0, X1, X2
	148 Move X21, X0
	149 Move TEMP, X20
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {161}
	153 Move X8, 0x76B000
	154 Move X8, [X8+1192]
	155 Move X0, [X23]
	156 Move X1, X21
	157 Move X3, X31
	158 Move X2, [X8]
	159 Call String.Format, X0, X1, X2
	160 Move X21, X0
	161 Move X0, X21
	162 Move X20, [X31+112]
	163 Move X19, [X31+120]
	164 Move X22, [X31+96]
	165 Move X21, [X31+104]
	166 Move X24, [X31+80]
	167 Move X23, [X31+88]
	168 Move X26, [X31+64]
	169 Move X25, [X31+72]
	170 Move X28, [X31+48]
	171 Move X27, [X31+56]
	172 Move X29, [X31+32]
	173 Move X30, [X31+40]
	174 Add X31, X31, 128
	175 Return X0

Method: System.String GetTextureAutoName(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat format, UnityEngine.Rendering.TextureDimension dim = 0, System.String name = , System.Boolean mips = False, System.Int32 depth = 0)

Disassembly:
	0x039E9864 MOV V10.16B, V0.16B
	0x039E9868 TBNZ X8, 0x0, 0x39E9898
	0x039E986C ADRP X0, 0x70B000
	0x039E9870 LDR X0, [X0 + 0xE58]
	0x039E9874 BL 0x1C16CF4
	0x039E9878 ADRP X0, 0x711000
	0x039E987C LDR X0, [X0 + 0x700]
	0x039E9880 BL 0x1C16CF4
	0x039E9884 ADRP X0, 0x70C000
	0x039E9888 LDR X0, [X0 + 0x9B0]
	0x039E988C BL 0x1C16CF4
	0x039E9890 MOVZ W8, 0x1
	0x039E9894 STRB W8, [X19 + 0xE26]
	0x039E9898 LDR X0, [X21]
	0x039E989C BL 0x1C16F10
	0x039E98A0 MOV X1, X31
	0x039E98A4 MOV X19, X0
	0x039E98A8 BL 0x3C17028
	0x039E98AC LDR X0, [X20]
	0x039E98B0 MOVZ W1, 0x8
	0x039E98B4 BL 0x1C16D6C
	0x039E98B8 CBZ X0, 0x39E9BC4
	0x039E98BC LDR W8, [X0 + 0x18]
	0x039E98C0 MOV X1, X0
	0x039E98C4 CBZ W8, 0x39E9BC0
	0x039E98C8 CMP W8, 0x1
	0x039E98CC STP S10, S12, [X1 + 0x20]
	0x039E98D0 STR S13, [X1 + 0x28]
	0x039E98D4 B.EQ 0x39E9BC0
	0x039E98D8 CMP W8, 0x2
	0x039E98DC STP S11, S12, [X1 + 0x2C]
	0x039E98E0 STR S13, [X1 + 0x34]
	0x039E98E4 B.LS 0x39E9BC0
	0x039E98E8 CMP W8, 0x3
	0x039E98EC STP S11, S9, [X1 + 0x38]
	0x039E98F0 STR S13, [X1 + 0x40]
	0x039E98F4 B.EQ 0x39E9BC0
	0x039E98F8 CMP W8, 0x4
	0x039E98FC STP S10, S9, [X1 + 0x44]
	0x039E9900 STR S13, [X1 + 0x4C]
	0x039E9904 B.LS 0x39E9BC0
	0x039E9908 CMP W8, 0x5
	0x039E990C STP S10, S12, [X1 + 0x50]
	0x039E9910 STR S8, [X1 + 0x58]
	0x039E9914 B.EQ 0x39E9BC0
	0x039E9918 CMP W8, 0x6
	0x039E991C STP S11, S12, [X1 + 0x5C]
	0x039E9920 STR S8, [X1 + 0x64]
	0x039E9924 B.LS 0x39E9BC0
	0x039E9928 CMP W8, 0x7
	0x039E992C STP S11, S9, [X1 + 0x68]
	0x039E9930 STR S8, [X1 + 0x70]
	0x039E9934 B.EQ 0x39E9BC0
	0x039E9938 STP S10, S9, [X1 + 0x74]
	0x039E993C STR S8, [X1 + 0x7C]
	0x039E9940 CBZ X19, 0x39E9BC4
	0x039E9944 ADRP X20, 0x70B000
	0x039E9948 LDR X20, [X20 + 0xE58]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X27, 0x9F9000
	014 Move X28, 0x76B000
	015 Move X26, 0x733000
	016 Move W8, [X27+3613]
	017 Move X28, [X28+1216]
	018 Move X26, [X26+2296]
	019 Move W19, W6
	020 Move W22, W5
	021 Move X20, X4
	022 Move W21, W3
	023 Move W25, W2
	024 Move W23, W1
	025 Move W24, W0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x733000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x76B000
	034 Move X0, [X0+1216]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X27+3613], W8
	038 Move X8, [X28]
	039 Move TEMP, 0
	040 Not TEMP
	041 Move X9, TEMP
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Move [X31+8], X8
	045 Move [X31+16], X9
	046 Move [X31+24], W25
	047 Call Enum.ToString, X0
	048 Move X8, [X26]
	049 Move X25, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 And W5, W22, 1
	056 Move W0, W24
	057 Move W1, W23
	058 Move X2, X25
	059 Move W3, W21
	060 Move X4, X20
	061 Move W6, W19
	062 Call CoreUtils.GetTextureAutoName, X0, X1, X2, X3, X4, X5, X6
	063 Move X20, [X31+112]
	064 Move X19, [X31+120]
	065 Move X22, [X31+96]
	066 Move X21, [X31+104]
	067 Move X24, [X31+80]
	068 Move X23, [X31+88]
	069 Move X26, [X31+64]
	070 Move X25, [X31+72]
	071 Move X28, [X31+48]
	072 Move X27, [X31+56]
	073 Move X30, [X31+32]
	074 Add X31, X31, 128
	075 Return X0

Method: System.String GetTextureAutoName(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Rendering.TextureDimension dim = 0, System.String name = , System.Boolean mips = False, System.Int32 depth = 0)

Disassembly:
	0x039E9D04 MOV W8, W8
	0x039E9D08 MOV W8, W8
	0x039E9D0C MOV W8, W8
	0x039E9D10 SUB W0, W8, W8, 0x1, ASR
	0x039E9D14 RET
	0x039E9D18 MOV W0, W31
	0x039E9D1C RET
	0x039E9D20 STR X30, [X31 - 0x20]!
	0x039E9D24 STP X20, X19, [X31 + 0x10]
	0x039E9D28 ADRP X19, 0x9F8000
	0x039E9D2C ADRP X20, 0x76A000
	0x039E9D30 LDRB W8, [X19 + 0xE28]
	0x039E9D34 LDR X20, [X20 + 0x520]
	0x039E9D38 TBNZ X8, 0x0, 0x39E9D50
	0x039E9D3C ADRP X0, 0x76A000
	0x039E9D40 LDR X0, [X0 + 0x520]
	0x039E9D44 BL 0x1C16CF4
	0x039E9D48 MOVZ W8, 0x1
	0x039E9D4C STRB W8, [X19 + 0xE28]
	0x039E9D50 LDR X0, [X20]
	0x039E9D54 LDP X20, X19, [X31 + 0x10]
	0x039E9D58 LDR X30, [X31], #0x20
	0x039E9D5C RET
	0x039E9D60 STR D8, [X31 - 0x20]!
	0x039E9D64 STR X30, [X31 + 0x8]
	0x039E9D68 STP X20, X19, [X31 + 0x10]
	0x039E9D6C ADRP X20, 0x9F8000
	0x039E9D70 ADRP X19, 0x70C000
	0x039E9D74 LDRB W8, [X20 + 0xE29]
	0x039E9D78 LDR X19, [X19 + 0x9B0]
	0x039E9D7C TBNZ X8, 0x0, 0x39E9DA0
	0x039E9D80 ADRP X0, 0x732000
	0x039E9D84 LDR X0, [X0 + 0x8F8]
	0x039E9D88 BL 0x1C16CF4
	0x039E9D8C ADRP X0, 0x70C000
	0x039E9D90 LDR X0, [X0 + 0x9B0]
	0x039E9D94 BL 0x1C16CF4
	0x039E9D98 MOVZ W8, 0x1
	0x039E9D9C STRB W8, [X20 + 0xE29]
	0x039E9DA0 LDR X0, [X19]
	0x039E9DA4 MOVZ W1, 0x6
	0x039E9DA8 BL 0x1C16D6C
	0x039E9DAC CBZ X0, 0x39E9EE4
	0x039E9DB0 LDR W8, [X0 + 0x18]
	0x039E9DB4 CBZ W8, 0x39E9EE0
	0x039E9DB8 ADRP X9, 0xFFFFFFFFFD104000
	0x039E9DBC LDR V0, [X9 + 0x648]
	0x039E9DC0 CMP W8, 0x1
	0x039E9DC4 STR W31, [X0 + 0x28]
	0x039E9DC8 STR D0, [X0 + 0x20]
	0x039E9DCC B.EQ 0x39E9EE0
	0x039E9DD0 ADRP X9, 0xFFFFFFFFFD105000
	0x039E9DD4 LDR V0, [X9 + 0x378]
	0x039E9DD8 CMP W8, 0x2
	0x039E9DDC STR W31, [X0 + 0x34]
	0x039E9DE0 STUR D0, [X0 + 0x2C]
	0x039E9DE4 B.LS 0x39E9EE0
	0x039E9DE8 ADRP X9, 0xFFFFFFFFFD105000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X27, 0x9F9000
	014 Move X28, 0x76B000
	015 Move X26, 0x733000
	016 Move W8, [X27+3614]
	017 Move X28, [X28+1208]
	018 Move X26, [X26+2296]
	019 Move W19, W6
	020 Move W22, W5
	021 Move X20, X4
	022 Move W21, W3
	023 Move W25, W2
	024 Move W23, W1
	025 Move W24, W0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x733000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x76B000
	034 Move X0, [X0+1208]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X27+3614], W8
	038 Move X8, [X28]
	039 Move TEMP, 0
	040 Not TEMP
	041 Move X9, TEMP
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Move [X31+8], X8
	045 Move [X31+16], X9
	046 Move [X31+24], W25
	047 Call Enum.ToString, X0
	048 Move X8, [X26]
	049 Move X25, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 And W5, W22, 1
	056 Move W0, W24
	057 Move W1, W23
	058 Move X2, X25
	059 Move W3, W21
	060 Move X4, X20
	061 Move W6, W19
	062 Call CoreUtils.GetTextureAutoName, X0, X1, X2, X3, X4, X5, X6
	063 Move X20, [X31+112]
	064 Move X19, [X31+120]
	065 Move X22, [X31+96]
	066 Move X21, [X31+104]
	067 Move X24, [X31+80]
	068 Move X23, [X31+88]
	069 Move X26, [X31+64]
	070 Move X25, [X31+72]
	071 Move X28, [X31+48]
	072 Move X27, [X31+56]
	073 Move X30, [X31+32]
	074 Add X31, X31, 128
	075 Return X0

Method: System.String GetTextureAutoName(System.Int32 width, System.Int32 height, System.String format, UnityEngine.Rendering.TextureDimension dim = 0, System.String name = , System.Boolean mips = False, System.Int32 depth = 0)

Disassembly:
	0x039E994C MOV X0, X19
	0x039E9950 MOV X2, X31
	0x039E9954 BL 0x3C17F08
	0x039E9958 LDR X0, [X20]
	0x039E995C MOVZ W1, 0x24
	0x039E9960 BL 0x1C16D6C
	0x039E9964 CBZ X0, 0x39E9BC4
	0x039E9968 LDR W8, [X0 + 0x18]
	0x039E996C MOV X1, X0
	0x039E9970 CBZ W8, 0x39E9BC0
	0x039E9974 CMP W8, 0x1
	0x039E9978 STR W31, [X1 + 0x20]
	0x039E997C B.EQ 0x39E9BC0
	0x039E9980 MOVZ W9, 0x2
	0x039E9984 CMP W8, 0x2
	0x039E9988 STR W9, [X1 + 0x24]
	0x039E998C B.LS 0x39E9BC0
	0x039E9990 MOVZ W9, 0x1
	0x039E9994 CMP W8, 0x3
	0x039E9998 STR W9, [X1 + 0x28]
	0x039E999C B.EQ 0x39E9BC0
	0x039E99A0 CMP W8, 0x4
	0x039E99A4 STR W31, [X1 + 0x2C]
	0x039E99A8 B.LS 0x39E9BC0
	0x039E99AC MOVZ W9, 0x3
	0x039E99B0 CMP W8, 0x5
	0x039E99B4 STR W9, [X1 + 0x30]
	0x039E99B8 B.EQ 0x39E9BC0
	0x039E99BC MOVZ W9, 0x2
	0x039E99C0 CMP W8, 0x6
	0x039E99C4 STR W9, [X1 + 0x34]
	0x039E99C8 B.LS 0x39E9BC0
	0x039E99CC MOVZ W9, 0x1
	0x039E99D0 CMP W8, 0x7
	0x039E99D4 STR W9, [X1 + 0x38]
	0x039E99D8 B.EQ 0x39E9BC0
	0x039E99DC MOVZ W9, 0x6
	0x039E99E0 CMP W8, 0x8
	0x039E99E4 STR W9, [X1 + 0x3C]
	0x039E99E8 B.LS 0x39E9BC0
	0x039E99EC MOVZ W9, 0x5
	0x039E99F0 CMP W8, 0x9
	0x039E99F4 STR W9, [X1 + 0x40]
	0x039E99F8 B.EQ 0x39E9BC0
	0x039E99FC MOVZ W9, 0x1
	0x039E9A00 CMP W8, 0xA
	0x039E9A04 STR W9, [X1 + 0x44]
	0x039E9A08 B.LS 0x39E9BC0
	0x039E9A0C MOVZ W9, 0x2
	0x039E9A10 CMP W8, 0xB
	0x039E9A14 STR W9, [X1 + 0x48]
	0x039E9A18 B.EQ 0x39E9BC0
	0x039E9A1C MOVZ W9, 0x6
	0x039E9A20 CMP W8, 0xC
	0x039E9A24 STR W9, [X1 + 0x4C]
	0x039E9A28 B.LS 0x39E9BC0
	0x039E9A2C MOVZ W9, 0x5
	0x039E9A30 CMP W8, 0xD
	0x039E9A34 STR W9, [X1 + 0x50]
	0x039E9A38 B.EQ 0x39E9BC0
	0x039E9A3C MOVZ W9, 0x7
	0x039E9A40 CMP W8, 0xE
	0x039E9A44 STR W9, [X1 + 0x54]
	0x039E9A48 B.LS 0x39E9BC0
	0x039E9A4C MOVZ W9, 0x4
	0x039E9A50 CMP W8, 0xF
	0x039E9A54 STR W9, [X1 + 0x58]
	0x039E9A58 B.EQ 0x39E9BC0
	0x039E9A5C MOVZ W9, 0x5
	0x039E9A60 CMP W8, 0x10
	0x039E9A64 STR W9, [X1 + 0x5C]
	0x039E9A68 B.LS 0x39E9BC0
	0x039E9A6C MOVZ W9, 0x6
	0x039E9A70 CMP W8, 0x11
	0x039E9A74 STR W9, [X1 + 0x60]
	0x039E9A78 B.EQ 0x39E9BC0
	0x039E9A7C MOVZ W9, 0x7
	0x039E9A80 CMP W8, 0x12
	0x039E9A84 STR W9, [X1 + 0x64]
	0x039E9A88 B.LS 0x39E9BC0
	0x039E9A8C MOVZ W9, 0x4
	0x039E9A90 CMP W8, 0x13
	0x039E9A94 STR W9, [X1 + 0x68]
	0x039E9A98 B.EQ 0x39E9BC0
	0x039E9A9C MOVZ W9, 0x3
	0x039E9AA0 CMP W8, 0x14
	0x039E9AA4 STR W9, [X1 + 0x6C]
	0x039E9AA8 B.LS 0x39E9BC0
	0x039E9AAC CMP W8, 0x15
	0x039E9AB0 STR W31, [X1 + 0x70]
	0x039E9AB4 B.EQ 0x39E9BC0
	0x039E9AB8 MOVZ W9, 0x4
	0x039E9ABC CMP W8, 0x16
	0x039E9AC0 STR W9, [X1 + 0x74]
	0x039E9AC4 B.LS 0x39E9BC0
	0x039E9AC8 MOVZ W9, 0x7
	0x039E9ACC CMP W8, 0x17
	0x039E9AD0 STR W9, [X1 + 0x78]
	0x039E9AD4 B.EQ 0x39E9BC0
	0x039E9AD8 MOVZ W9, 0x3
	0x039E9ADC CMP W8, 0x18
	0x039E9AE0 STR W9, [X1 + 0x7C]
	0x039E9AE4 B.LS 0x39E9BC0
	0x039E9AE8 CMP W8, 0x19
	0x039E9AEC STR W9, [X1 + 0x80]
	0x039E9AF0 B.EQ 0x39E9BC0
	0x039E9AF4 MOVZ W9, 0x6
	0x039E9AF8 CMP W8, 0x1A
	0x039E9AFC STR W9, [X1 + 0x84]
	0x039E9B00 B.LS 0x39E9BC0
	0x039E9B04 MOVZ W9, 0x2
	0x039E9B08 CMP W8, 0x1B
	0x039E9B0C STR W9, [X1 + 0x88]
	0x039E9B10 B.EQ 0x39E9BC0
	0x039E9B14 MOVZ W9, 0x3
	0x039E9B18 CMP W8, 0x1C
	0x039E9B1C STR W9, [X1 + 0x8C]
	0x039E9B20 B.LS 0x39E9BC0
	0x039E9B24 MOVZ W9, 0x7
	0x039E9B28 CMP W8, 0x1D
	0x039E9B2C STR W9, [X1 + 0x90]
	0x039E9B30 B.EQ 0x39E9BC0
	0x039E9B34 MOVZ W9, 0x6
	0x039E9B38 CMP W8, 0x1E
	0x039E9B3C STR W9, [X1 + 0x94]
	0x039E9B40 B.LS 0x39E9BC0
	0x039E9B44 MOVZ W9, 0x4
	0x039E9B48 CMP W8, 0x1F
	0x039E9B4C STR W9, [X1 + 0x98]
	0x039E9B50 B.EQ 0x39E9BC0
	0x039E9B54 MOVZ W9, 0x1
	0x039E9B58 CMP W8, 0x20
	0x039E9B5C STR W9, [X1 + 0x9C]
	0x039E9B60 B.LS 0x39E9BC0
	0x039E9B64 MOVZ W9, 0x5
	0x039E9B68 CMP W8, 0x21
	0x039E9B6C STR W9, [X1 + 0xA0]
	0x039E9B70 B.EQ 0x39E9BC0
	0x039E9B74 MOVZ W9, 0x4
	0x039E9B78 CMP W8, 0x22
	0x039E9B7C STR W9, [X1 + 0xA4]
	0x039E9B80 B.LS 0x39E9BC0
	0x039E9B84 CMP W8, 0x23
	0x039E9B88 STR W31, [X1 + 0xA8]
	0x039E9B8C B.EQ 0x39E9BC0
	0x039E9B90 MOVZ W8, 0x1
	0x039E9B94 MOV X0, X19
	0x039E9B98 MOV X2, X31
	0x039E9B9C STR W8, [X1 + 0xAC]
	0x039E9BA0 BL 0x3C18FF0
	0x039E9BA4 MOV X0, X19
	0x039E9BA8 LDP X20, X19, [X31 + 0x40]
	0x039E9BAC LDP X30, X21, [X31 + 0x30]
	0x039E9BB0 LDP D9, D8, [X31 + 0x20]
	0x039E9BB4 LDP D11, D10, [X31 + 0x10]
	0x039E9BB8 LDP D13, D12, [X31], #0x50
	0x039E9BBC RET
	0x039E9BC0 BL 0x1C16F28
	0x039E9BC4 BL 0x1C16F20
	0x039E9BC8 MOVZ W0, 0x1
	0x039E9BCC RET
	0x039E9BD0 MOVZ W0, 0x1
	0x039E9BD4 RET
	0x039E9BD8 MOV W0, W31
	0x039E9BDC RET
	0x039E9BE0 MOV W0, W31
	0x039E9BE4 RET
	0x039E9BE8 MOVZ W0, 0x1
	0x039E9BEC RET
	0x039E9BF0 MOV W0, W31
	0x039E9BF4 RET
	0x039E9BF8 MOV W0, W31
	0x039E9BFC RET
	0x039E9C00 SUB X31, X31, 0x70
	0x039E9C04 STR X30, [X31 + 0x40]
	0x039E9C08 STP X22, X21, [X31 + 0x50]
	0x039E9C0C STP X20, X19, [X31 + 0x60]
	0x039E9C10 ADRP X21, 0x9F8000
	0x039E9C14 ADRP X22, 0x735000
	0x039E9C18 LDRB W8, [X21 + 0xE27]
	0x039E9C1C LDR X22, [X22 + 0x720]
	0x039E9C20 MOV X20, X2
	0x039E9C24 MOV X19, X1
	0x039E9C28 TBNZ X8, 0x0, 0x39E9C40
	0x039E9C2C ADRP X0, 0x735000
	0x039E9C30 LDR X0, [X0 + 0x720]
	0x039E9C34 BL 0x1C16CF4
	0x039E9C38 MOVZ W8, 0x1
	0x039E9C3C STRB W8, [X21 + 0xE27]
	0x039E9C40 LDR X0, [X22]
	0x039E9C44 LDR W8, [X0 + 0xE0]
	0x039E9C48 CBNZ W8, 0x39E9C50
	0x039E9C4C BL 0x1C16DFC
	0x039E9C50 MOV X0, X20
	0x039E9C54 MOV X1, X31
	0x039E9C58 BL 0x3C56880
	0x039E9C5C TBZ X0, 0x0, 0x39E9CA8
	0x039E9C60 LDR X8, [X20 + 0x10]
	0x039E9C64 LDR V0, [X20]
	0x039E9C68 STR X8, [X31 + 0x30]
	0x039E9C6C STR V0, [X31 + 0x2]
	0x039E9C70 CBZ X19, 0x39E9CF0
	0x039E9C74 LDR V0, [X31 + 0x2]
	0x039E9C78 LDR X8, [X31 + 0x30]
	0x039E9C7C ADD X1, X31, 0x0
	0x039E9C80 MOV X0, X19
	0x039E9C84 MOV X2, X31
	0x039E9C88 STR V0, [X31]
	0x039E9C8C STR X8, [X31 + 0x10]
	0x039E9C90 BL 0x3C4F32C
	0x039E9C94 LDP X20, X19, [X31 + 0x60]
	0x039E9C98 LDP X22, X21, [X31 + 0x50]
	0x039E9C9C LDR X30, [X31 + 0x40]
	0x039E9CA0 ADD X31, X31, 0x70
	0x039E9CA4 RET
	0x039E9CA8 ADRP X0, 0x712000
	0x039E9CAC LDR X0, [X0 + 0x578]
	0x039E9CB0 BL 0x1C16D08
	0x039E9CB4 BL 0x1C16F10
	0x039E9CB8 MOV X19, X0
	0x039E9CBC ADRP X0, 0x76A000
	0x039E9CC0 LDR X0, [X0 + 0x510]
	0x039E9CC4 BL 0x1C16D08
	0x039E9CC8 MOV X1, X0
	0x039E9CCC MOV X0, X19
	0x039E9CD0 MOV X2, X31
	0x039E9CD4 BL 0x3314A68
	0x039E9CD8 ADRP X0, 0x76A000
	0x039E9CDC LDR X0, [X0 + 0x518]
	0x039E9CE0 BL 0x1C16D08
	0x039E9CE4 MOV X1, X0
	0x039E9CE8 MOV X0, X19
	0x039E9CEC BL 0x1C16DEC
	0x039E9CF0 BL 0x1C16F20
	0x039E9CF4 CMP W0, 0x1
	0x039E9CF8 B.LT 0x39E9D18
	0x039E9CFC MOV W8, W0
	0x039E9D00 MOV W8, W8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X27, 0x9F9000
	015 Move X23, 0x70B000
	016 Move W8, [X27+3615]
	017 Move X23, [X23+2512]
	018 Move W25, W6
	019 Move W22, W5
	020 Move X19, X4
	021 Move W20, W3
	022 Move X21, X2
	023 Move W24, W1
	024 Move W26, W0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {58}
	029 Move X0, 0x70B000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0x70B000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0x76B000
	036 Move X0, [X0+1176]
	037 Call 0x1C17CF4
	038 Move X0, 0x76B000
	039 Move X0, [X0+1224]
	040 Call 0x1C17CF4
	041 Move X0, 0x70F000
	042 Move X0, [X0+4072]
	043 Call 0x1C17CF4
	044 Move X0, 0x76B000
	045 Move X0, [X0+1232]
	046 Call 0x1C17CF4
	047 Move X0, 0x769000
	048 Move X0, [X0+80]
	049 Call 0x1C17CF4
	050 Move X0, 0x70B000
	051 Move X0, [X0+2440]
	052 Call 0x1C17CF4
	053 Move X0, 0x76B000
	054 Move X0, [X0+1240]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X27+3615], W8
	058 Move X29, 0x70B000
	059 Move X28, 0x76B000
	060 Move X27, 0x70B000
	061 Move X0, [X23]
	062 Move X29, [X29+1880]
	063 Move X28, [X28+1224]
	064 Move X27, [X27+2440]
	065 Compare W25, 0
	066 JumpIfEqual {149}
	067 Move W1, 5
	068 Call 0x1C17D6C
	069 Move X23, X0
	070 Move X0, [X29]
	071 Add X1, X31, 0
	072 Move [X31], W26
	073 Call 0x1C17E04
	074 Compare X23, 0
	075 JumpIfEqual {271}
	076 Move X26, X0
	077 Compare X0, 0
	078 JumpIfEqual {85}
	079 Move X8, [X23]
	080 Move X0, X26
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {268}
	085 Move W8, [X23+24]
	086 Compare W8, 0
	087 JumpIfEqual {267}
	088 Move [X23+32], X26
	089 Move X0, [X29]
	090 Add X1, X31, 28
	091 Move [X31+28], W24
	092 Call 0x1C17E04
	093 Move X24, X0
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X23]
	097 Move X0, X24
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {268}
	102 Move W8, [X23+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X23+40], X24
	105 Move X0, [X29]
	106 Add X1, X31, 24
	107 Move [X31+24], W25
	108 Call 0x1C17E04
	109 Move X24, X0
	110 Compare X0, 0
	111 JumpIfEqual {118}
	112 Move X8, [X23]
	113 Move X0, X24
	114 Move X1, [X8+64]
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {268}
	118 Move W8, [X23+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X9, 0x76B000
	121 Move X9, [X9+1232]
	122 And W31, W22, 1
	123 Move [X23+48], X24
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 Move X24, [X10]
	126 Move X22, [X9]
	127 Compare X24, 0
	128 JumpIfEqual {136}
	129 Move X8, [X23]
	130 Move X0, X24
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {268}
	135 Move W8, [X23+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X23+56], X24
	138 Compare X21, 0
	139 JumpIfEqual {147}
	140 Move X8, [X23]
	141 Move X0, X21
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {268}
	146 Move W8, [X23+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X23+64], X21
	149 Move W1, 4
	150 Call 0x1C17D6C
	151 Move X23, X0
	152 Move X0, [X29]
	153 Add X1, X31, 0
	154 Move [X31], W26
	155 Call 0x1C17E04
	156 Compare X23, 0
	157 JumpIfEqual {271}
	158 Move X25, X0
	159 Compare X0, 0
	160 JumpIfEqual {167}
	161 Move X8, [X23]
	162 Move X0, X25
	163 Move X1, [X8+64]
	164 Call 0x1C17E00
	165 Compare X0, 0
	166 JumpIfEqual {268}
	167 Move W8, [X23+24]
	168 Compare W8, 0
	169 JumpIfEqual {267}
	170 Move [X23+32], X25
	171 Move X0, [X29]
	172 Add X1, X31, 28
	173 Move [X31+28], W24
	174 Call 0x1C17E04
	175 Move X24, X0
	176 Compare X0, 0
	177 JumpIfEqual {184}
	178 Move X8, [X23]
	179 Move X0, X24
	180 Move X1, [X8+64]
	181 Call 0x1C17E00
	182 Compare X0, 0
	183 JumpIfEqual {268}
	184 Move W8, [X23+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X23+40], X24
	187 Move X9, 0x76B000
	188 Move X9, [X9+1240]
	189 And W31, W22, 1
	190 NotImplemented "Instruction CSEL not yet implemented."
	191 Move X24, [X10]
	192 Move X22, [X9]
	193 Compare X24, 0
	194 JumpIfEqual {202}
	195 Move X8, [X23]
	196 Move X0, X24
	197 Move X1, [X8+64]
	198 Call 0x1C17E00
	199 Compare X0, 0
	200 JumpIfEqual {268}
	201 Move W8, [X23+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move [X23+48], X24
	204 Compare X21, 0
	205 JumpIfEqual {213}
	206 Move X8, [X23]
	207 Move X0, X21
	208 Move X1, [X8+64]
	209 Call 0x1C17E00
	210 Compare X0, 0
	211 JumpIfEqual {268}
	212 Move W8, [X23+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X23+56], X21
	215 Move X0, X22
	216 Move X1, X23
	217 Move X2, X31
	218 Call String.Format, X0, X1
	219 Move X1, [X27]
	220 Move X22, 0x70F000
	221 Move X23, 0x769000
	222 Move X22, [X22+4072]
	223 Move X23, [X23+80]
	224 Move X21, X0
	225 Move X0, X19
	226 Move X2, X31
	227 Call String.op_Equality, X0, X1
	228 Move X22, [X22]
	229 Move X24, [X23]
	230 Move W23, W0
	231 Compare W20, 0
	232 JumpIfEqual {246}
	233 Move X8, 0x76B000
	234 Move X8, [X8+1176]
	235 Move TEMP, 0
	236 Not TEMP
	237 Move X9, TEMP
	238 Add X0, X31, 0
	239 Move X1, X31
	240 Move X8, [X8]
	241 Move [X31+16], W20
	242 Move [X31], X8
	243 Move [X31+8], X9
	244 Call Enum.ToString, X0
	245 Move X2, X0
	246 Move X2, [X27]
	247 And W31, W23, 1
	248 NotImplemented "Instruction CSEL not yet implemented."
	249 Move X0, X22
	250 Move X3, X21
	251 Move X4, X31
	252 Call String.Format, X0, X1, X2, X3
	253 Move X20, [X31+112]
	254 Move X19, [X31+120]
	255 Move X22, [X31+96]
	256 Move X21, [X31+104]
	257 Move X24, [X31+80]
	258 Move X23, [X31+88]
	259 Move X26, [X31+64]
	260 Move X25, [X31+72]
	261 Move X28, [X31+48]
	262 Move X27, [X31+56]
	263 Move X29, [X31+32]
	264 Move X30, [X31+40]
	265 Add X31, X31, 128
	266 Return X0
	267 Call 0x1C17F28
	268 Call 0x1C17F44
	269 Move X1, X31
	270 Call 0x1C17DEC
	271 Call 0x1C17F20

Method: System.Void ClearCubemap(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTexture renderTexture, UnityEngine.Color clearColor, System.Boolean clearMips = False)

Disassembly:
	0x039E9DEC LDR V8, [X9]
	0x039E9DF0 CMP W8, 0x3
	0x039E9DF4 STR W31, [X0 + 0x40]
	0x039E9DF8 STR D8, [X0 + 0x38]
	0x039E9DFC B.EQ 0x39E9EE0
	0x039E9E00 ADRP X9, 0xFFFFFFFFFD105000
	0x039E9E04 LDR V0, [X9 + 0x278]
	0x039E9E08 CMP W8, 0x4
	0x039E9E0C STR W31, [X0 + 0x4C]
	0x039E9E10 STUR D0, [X0 + 0x44]
	0x039E9E14 B.LS 0x39E9EE0
	0x039E9E18 MOVZ W9, 0x3F800000
	0x039E9E1C CMP W8, 0x5
	0x039E9E20 STR X31, [X0 + 0x50]
	0x039E9E24 STR W9, [X0 + 0x58]
	0x039E9E28 B.EQ 0x39E9EE0
	0x039E9E2C ADRP X20, 0x732000
	0x039E9E30 LDR X20, [X20 + 0x8F8]
	0x039E9E34 MOVZ W8, 0xBF800000
	0x039E9E38 STP W31, W31, [X0 + 0x5C]
	0x039E9E3C STR W8, [X0 + 0x64]
	0x039E9E40 LDR X8, [X20]
	0x039E9E44 MOVZ W1, 0x6
	0x039E9E48 LDR X8, [X8 + 0xB8]
	0x039E9E4C STR X0, [X8]
	0x039E9E50 LDR X0, [X19]
	0x039E9E54 BL 0x1C16D6C
	0x039E9E58 CBZ X0, 0x39E9EE4
	0x039E9E5C LDR W8, [X0 + 0x18]
	0x039E9E60 CBZ W8, 0x39E9EE0
	0x039E9E64 CMP W8, 0x1
	0x039E9E68 STR D8, [X0 + 0x20]
	0x039E9E6C STR W31, [X0 + 0x28]
	0x039E9E70 B.EQ 0x39E9EE0
	0x039E9E74 CMP W8, 0x2
	0x039E9E78 STUR D8, [X0 + 0x2C]
	0x039E9E7C STR W31, [X0 + 0x34]
	0x039E9E80 B.LS 0x39E9EE0
	0x039E9E84 MOVZ W9, 0xBF800000
	0x039E9E88 CMP W8, 0x3
	0x039E9E8C STR X31, [X0 + 0x38]
	0x039E9E90 STR W9, [X0 + 0x40]
	0x039E9E94 B.EQ 0x39E9EE0
	0x039E9E98 MOVZ W9, 0x3F800000
	0x039E9E9C CMP W8, 0x4
	0x039E9EA0 STP W31, W31, [X0 + 0x44]
	0x039E9EA4 STR W9, [X0 + 0x4C]
	0x039E9EA8 B.LS 0x39E9EE0
	0x039E9EAC CMP W8, 0x5
	0x039E9EB0 STR D8, [X0 + 0x50]
	0x039E9EB4 STR W31, [X0 + 0x58]
	0x039E9EB8 B.EQ 0x39E9EE0
	0x039E9EBC STUR D8, [X0 + 0x5C]
	0x039E9EC0 STR W31, [X0 + 0x64]
	0x039E9EC4 LDR X8, [X20]
	0x039E9EC8 LDP X20, X19, [X31 + 0x10]
	0x039E9ECC LDR X30, [X31 + 0x8]
	0x039E9ED0 LDR X8, [X8 + 0xB8]
	0x039E9ED4 STR X0, [X8 + 0x8]
	0x039E9ED8 LDR V8, [X31], #0x20
	0x039E9EDC RET
	0x039E9EE0 BL 0x1C16F28
	0x039E9EE4 BL 0x1C16F20
	0x039E9EE8 STR X30, [X31 - 0x20]!
	0x039E9EEC STP X20, X19, [X31 + 0x10]
	0x039E9EF0 ADRP X19, 0x9F8000
	0x039E9EF4 ADRP X20, 0x76A000
	0x039E9EF8 LDRB W8, [X19 + 0xE2A]
	0x039E9EFC LDR X20, [X20 + 0x508]
	0x039E9F00 TBNZ X8, 0x0, 0x39E9F18
	0x039E9F04 ADRP X0, 0x76A000
	0x039E9F08 LDR X0, [X0 + 0x508]
	0x039E9F0C BL 0x1C16CF4
	0x039E9F10 MOVZ W8, 0x1
	0x039E9F14 STRB W8, [X19 + 0xE2A]
	0x039E9F18 LDR X0, [X20]
	0x039E9F1C BL 0x1C16F10
	0x039E9F20 MOV X1, X31
	0x039E9F24 MOV X19, X0
	0x039E9F28 BL 0x33BDD8C
	0x039E9F2C LDR X8, [X20]
	0x039E9F30 LDR X8, [X8 + 0xB8]
	0x039E9F34 STR X19, [X8]
	0x039E9F38 LDP X20, X19, [X31 + 0x10]
	0x039E9F3C LDR X30, [X31], #0x20
	0x039E9F40 RET
	0x039E9F44 MOV X1, X31
	0x039E9F48 B 0x33BDD8C
	0x039E9F4C STP X30, X21, [X31 - 0x20]!
	0x039E9F50 STP X20, X19, [X31 + 0x10]
	0x039E9F54 ADRP X19, 0x9F8000
	0x039E9F58 ADRP X21, 0x712000
	0x039E9F5C LDRB W8, [X19 + 0xE2B]
	0x039E9F60 LDR X21, [X21 + 0xC60]
	0x039E9F64 MOV X20, X1
	0x039E9F68 TBNZ X8, 0x0, 0x39E9F80
	0x039E9F6C ADRP X0, 0x712000
	0x039E9F70 LDR X0, [X0 + 0xC60]
	0x039E9F74 BL 0x1C16CF4
	0x039E9F78 MOVZ W8, 0x1
	0x039E9F7C STRB W8, [X19 + 0xE2B]
	0x039E9F80 LDR X0, [X21]
	0x039E9F84 MOV W1, W31
	0x039E9F88 BL 0x1C16D6C
	0x039E9F8C MOV X19, X0
	0x039E9F90 CBZ X20, 0x39E9FB4
	0x039E9F94 LDR X8, [X20]
	0x039E9F98 LDR X1, [X8 + 0x230]
	0x039E9F9C LDR X9, [X8 + 0x228]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D12
	003 Move [X31+104], D11
	004 Move [X31+112], D10
	005 Move [X31+120], D9
	006 Move [X31+128], D8
	007 Move [X31+136], X30
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X22, 0x9F9000
	015 Move W8, [X22+3616]
	016 Move W21, W2
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x733000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3616], W8
	032 Compare X19, 0
	033 JumpIfEqual {135}
	034 Move X0, X19
	035 Move X1, X31
	036 Call RenderTexture.get_useMipMap, X0
	037 Move W23, 1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {80}
	042 Move TEMP, X21
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {80}
	046 Move X8, [X19]
	047 Move X0, X19
	048 Move X9, [X8+392]
	049 Move X1, [X8+400]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X22, 0x9F9000
	052 Move W8, [X22+3640]
	053 Move W21, W0
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x70B000
	057 Move X0, [X0+1448]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+3640], W8
	061 Move X8, 0x70B000
	062 Move X8, [X8+1448]
	063 NotImplemented "Instruction SCVTF not yet implemented."
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 NotImplemented "Instruction FCVT not yet implemented."
	070 Move D1, 2
	071 Move X0, X31
	072 Call Math.Log, V0, V1
	073 Move W8, 0x7F800000
	074 NotImplemented "Instruction INVALID not yet implemented."
	075 Move S1, W8
	076 NotImplemented "Instruction FCVTZS not yet implemented."
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Or W8, W31, 0x80000001
	079 NotImplemented "Instruction CSINC not yet implemented."
	080 Move X24, 0x733000
	081 Move X24, [X24+2296]
	082 Move W21, W31
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W22, W31
	085 NotImplemented "Instruction MOVI not yet implemented."
	086 Add X0, X31, 48
	087 Move X1, X19
	088 Move X2, X31
	089 Move [X31+80], X31
	090 Move [X31+48], V0
	091 Move [X31+56], V0
	092 Call RenderTargetIdentifier..ctor, X0, X1
	093 Move X0, [X24]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move V0, [X31+48]
	099 Move V1, [X31+64]
	100 Move X8, [X31+80]
	101 Add X1, X31, 0
	102 Move W2, 1
	103 Move [X31], V0
	104 Move [X31+8], V1
	105 Move TEMP, 0
	106 Not TEMP
	107 Move W5, TEMP
	108 Move X0, X20
	109 Move V0, V11
	110 Move V1, V10
	111 Move V2, V9
	112 Move V3, V8
	113 Move W3, W22
	114 Move W4, W21
	115 Move [X31+32], X8
	116 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	117 Add W22, W22, 1
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W21, W21, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X20, [X31+176]
	122 Move X19, [X31+184]
	123 Move X22, [X31+160]
	124 Move X21, [X31+168]
	125 Move X24, [X31+144]
	126 Move X23, [X31+152]
	127 Move X30, [X31+136]
	128 Move D9, [X31+120]
	129 Move D8, [X31+128]
	130 Move D11, [X31+104]
	131 Move D10, [X31+112]
	132 Move V12, [X31+96]
	133 Add X31, X31, 192
	134 Return 
	135 Call 0x1C17F20

Method: System.Void DrawFullScreen(UnityEngine.Rendering.CommandBuffer commandBuffer, UnityEngine.Material material, UnityEngine.MaterialPropertyBlock properties = null, System.Int32 shaderPassId = 0)

Disassembly:
	0x039E9FA0 MOV X0, X20
	0x039E9FA4 BLR X9
	0x039E9FA8 LDP X20, X19, [X31 + 0x10]
	0x039E9FAC LDP X30, X21, [X31], #0x20
	0x039E9FB0 RET
	0x039E9FB4 BL 0x1C16F20
	0x039E9FB8 B 0x39E9FBC
	0x039E9FBC MOV X20, X0
	0x039E9FC0 CMP W1, 0x1
	0x039E9FC4 B.NE 0x39EA024
	0x039E9FC8 MOV X0, X20
	0x039E9FCC BL 0x3EB1AD0
	0x039E9FD0 MOV X20, X0
	0x039E9FD4 ADRP X0, 0x710000
	0x039E9FD8 LDR X0, [X0 + 0xCC0]
	0x039E9FDC BL 0x1C16D08
	0x039E9FE0 LDR X8, [X20]
	0x039E9FE4 LDR X1, [X8]
	0x039E9FE8 BL 0x1C17270
	0x039E9FEC TBZ X0, 0x0, 0x39E9FFC
	0x039E9FF0 BL 0x3EB1AE0
	0x039E9FF4 MOV X0, X19
	0x039E9FF8 B 0x39E9FA8
	0x039E9FFC MOVZ W0, 0x8
	0x039EA000 BL 0x3EB1AF0
	0x039EA004 LDR X8, [X20]
	0x039EA008 STR X8, [X0]
	0x039EA00C ADRP X1, 0x4CA000
	0x039EA010 ADD X1, X1, 0xE58
	0x039EA014 MOV X2, X31
	0x039EA018 BL 0x3EB1B00
	0x039EA01C MOV X20, X0
	0x039EA020 BL 0x3EB1AE0
	0x039EA024 MOV X0, X20
	0x039EA028 BL 0x1D2C690
	0x039EA02C BL 0x1990590
	0x039EA030 STP X30, X25, [X31 - 0x40]!
	0x039EA034 STP X24, X23, [X31 + 0x10]
	0x039EA038 STP X22, X21, [X31 + 0x20]
	0x039EA03C STP X20, X19, [X31 + 0x30]
	0x039EA040 ADRP X21, 0x9F7000
	0x039EA044 LDRB W8, [X21 + 0xE2C]
	0x039EA048 MOV X19, X1
	0x039EA04C MOV X20, X0
	0x039EA050 TBNZ X8, 0x0, 0x39EA068

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+152], X23
	004 Move [X31+160], X22
	005 Move [X31+168], X21
	006 Move [X31+176], X20
	007 Move [X31+184], X19
	008 Move X23, 0x9F0000
	009 Move W8, [X23+2752]
	010 Move W20, W3
	011 Move X19, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Compare W8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, 0x70F000
	017 Move X0, [X0+624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X23+2752], W8
	021 Move X8, 0x70F000
	022 Move X8, [X8+624]
	023 Move X8, [X8]
	024 Move X8, [X8+184]
	025 Move V1, [X8+96]
	026 Move V0, [X8+112]
	027 Move V2, [X8+64]
	028 Move V3, [X8+80]
	029 Move [X31+112], V1
	030 Move [X31+120], V0
	031 Move [X31+80], V2
	032 Move [X31+88], V3
	033 Compare X22, 0
	034 JumpIfEqual {61}
	035 Move V0, [X31+80]
	036 Move V1, [X31+96]
	037 Move V2, [X31+112]
	038 Move V3, [X31+128]
	039 Add X1, X31, 16
	040 Move W5, 3
	041 Move W6, 1
	042 Move X0, X22
	043 Move X2, X21
	044 Move W3, W20
	045 Move W4, W31
	046 Move X7, X19
	047 Move [X31+16], V0
	048 Move [X31+24], V1
	049 Move [X31+48], V2
	050 Move [X31+56], V3
	051 Move [X31], X31
	052 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	053 Move X20, [X31+176]
	054 Move X19, [X31+184]
	055 Move X22, [X31+160]
	056 Move X21, [X31+168]
	057 Move X30, [X31+144]
	058 Move X23, [X31+152]
	059 Add X31, X31, 192
	060 Return 
	061 Call 0x1C17F20

Method: System.Void DrawFullScreen(UnityEngine.Rendering.CommandBuffer commandBuffer, UnityEngine.Material material, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.MaterialPropertyBlock properties = null, System.Int32 shaderPassId = 0)

Disassembly:
	0x039EA054 ADRP X0, 0x742000
	0x039EA058 LDR X0, [X0 + 0x858]
	0x039EA05C BL 0x1C16CF4
	0x039EA060 MOVZ W8, 0x1
	0x039EA064 STRB W8, [X21 + 0xE2C]
	0x039EA068 CBZ X20, 0x39EA0C8
	0x039EA06C LDR X8, [X20]
	0x039EA070 MOV X0, X20
	0x039EA074 LDP X9, X1, [X8 + 0x1D8]
	0x039EA078 BLR X9
	0x039EA07C CBZ X0, 0x39EA198
	0x039EA080 LDR W1, [X0 + 0x18]
	0x039EA084 MOV X20, X0
	0x039EA088 CMP W1, 0x1
	0x039EA08C B.NE 0x39EA0E0
	0x039EA090 LDR X0, [X20 + 0x20]
	0x039EA094 CBZ X0, 0x39EA198
	0x039EA098 LDR X20, [X0 + 0x20]
	0x039EA09C MOV X1, X31
	0x039EA0A0 BL 0x33C4268
	0x039EA0A4 MOV X2, X0
	0x039EA0A8 MOV X0, X19
	0x039EA0AC MOV X1, X20
	0x039EA0B0 LDP X20, X19, [X31 + 0x30]
	0x039EA0B4 LDP X22, X21, [X31 + 0x20]
	0x039EA0B8 LDP X24, X23, [X31 + 0x10]
	0x039EA0BC MOV X3, X31
	0x039EA0C0 LDP X30, X25, [X31], #0x40
	0x039EA0C4 B 0x33C4FAC
	0x039EA0C8 LDP X20, X19, [X31 + 0x30]
	0x039EA0CC LDP X22, X21, [X31 + 0x20]
	0x039EA0D0 LDP X24, X23, [X31 + 0x10]
	0x039EA0D4 MOV X0, X31
	0x039EA0D8 LDP X30, X25, [X31], #0x40
	0x039EA0DC RET
	0x039EA0E0 ADRP X8, 0x742000
	0x039EA0E4 LDR X8, [X8 + 0x858]
	0x039EA0E8 LDR X0, [X8]
	0x039EA0EC BL 0x1C16D6C
	0x039EA0F0 LDR W8, [X20 + 0x18]
	0x039EA0F4 MOV X21, X0
	0x039EA0F8 CMP W8, 0x1
	0x039EA0FC B.LT 0x39EA17C
	0x039EA100 MOV X23, X31
	0x039EA104 ADD X24, X21, 0x20
	0x039EA108 ADD X25, X20, 0x20
	0x039EA10C CMP W23, W8
	0x039EA110 B.CS 0x39EA19C
	0x039EA114 LDR X0, [X25, X23, LSL #3]
	0x039EA118 CBZ X0, 0x39EA198
	0x039EA11C LDR X22, [X0 + 0x20]
	0x039EA120 MOV X1, X31
	0x039EA124 BL 0x33C4268
	0x039EA128 MOV X2, X0
	0x039EA12C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+184], X23
	004 Move [X31+192], X22
	005 Move [X31+200], X21
	006 Move [X31+208], X20
	007 Move [X31+216], X19
	008 Move X8, [X2+32]
	009 Move V1, [X2]
	010 Move V0, [X2+16]
	011 Move [X31+160], X8
	012 Move [X31+128], V1
	013 Move [X31+136], V0
	014 Compare X0, 0
	015 JumpIfEqual {75}
	016 Move V0, [X31+128]
	017 Move V1, [X31+144]
	018 Move X8, [X31+160]
	019 Move W20, W4
	020 Move X19, X3
	021 Move X21, X1
	022 Add X1, X31, 80
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W3, TEMP
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W4, TEMP
	029 Move W2, W31
	030 Move X5, X31
	031 Move X22, X0
	032 Move [X31+80], V0
	033 Move [X31+88], V1
	034 Move [X31+112], X8
	035 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4
	036 Move X23, 0x9EF000
	037 Move W8, [X23+2752]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x70E000
	041 Move X0, [X0+624]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+2752], W8
	045 Move X8, 0x70E000
	046 Move X8, [X8+624]
	047 Add X1, X31, 16
	048 Move W5, 3
	049 Move W6, 1
	050 Move X8, [X8]
	051 Move X0, X22
	052 Move X2, X21
	053 Move W3, W20
	054 Move X8, [X8+184]
	055 Move W4, W31
	056 Move X7, X19
	057 Move V1, [X8+96]
	058 Move V0, [X8+112]
	059 Move V2, [X8+64]
	060 Move V3, [X8+80]
	061 Move [X31], X31
	062 Move [X31+48], V1
	063 Move [X31+56], V0
	064 Move [X31+16], V2
	065 Move [X31+24], V3
	066 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	067 Move X20, [X31+208]
	068 Move X19, [X31+216]
	069 Move X22, [X31+192]
	070 Move X21, [X31+200]
	071 Move X30, [X31+176]
	072 Move X23, [X31+184]
	073 Add X31, X31, 224
	074 Return 
	075 Call 0x1C17F20

Method: System.Void DrawFullScreen(UnityEngine.Rendering.CommandBuffer commandBuffer, UnityEngine.Material material, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, UnityEngine.Rendering.RenderTargetIdentifier depthStencilBuffer, UnityEngine.MaterialPropertyBlock properties = null, System.Int32 shaderPassId = 0)

Disassembly:
	0x039EA130 MOV X1, X22
	0x039EA134 MOV X3, X31
	0x039EA138 BL 0x33C4FAC
	0x039EA13C CBZ X21, 0x39EA198
	0x039EA140 MOV X22, X0
	0x039EA144 CBZ X0, 0x39EA15C
	0x039EA148 LDR X8, [X21]
	0x039EA14C MOV X0, X22
	0x039EA150 LDR X1, [X8 + 0x40]
	0x039EA154 BL 0x1C16E00
	0x039EA158 CBZ X0, 0x39EA1A0
	0x039EA15C LDR W8, [X21 + 0x18]
	0x039EA160 CMP W23, W8
	0x039EA164 B.CS 0x39EA19C
	0x039EA168 STR X22, [X24, X23, LSL #3]
	0x039EA16C LDR W8, [X20 + 0x18]
	0x039EA170 ADD X23, X23, 0x1
	0x039EA174 CMP W23, W8
	0x039EA178 B.LT 0x39EA10C
	0x039EA17C MOV X0, X21
	0x039EA180 LDP X20, X19, [X31 + 0x30]
	0x039EA184 LDP X22, X21, [X31 + 0x20]
	0x039EA188 LDP X24, X23, [X31 + 0x10]
	0x039EA18C MOV X1, X31
	0x039EA190 LDP X30, X25, [X31], #0x40
	0x039EA194 B 0x33C6014
	0x039EA198 BL 0x1C16F20
	0x039EA19C BL 0x1C16F28
	0x039EA1A0 BL 0x1C16F44
	0x039EA1A4 MOV X1, X31
	0x039EA1A8 BL 0x1C16DEC
	0x039EA1AC SUB X31, X31, 0x70
	0x039EA1B0 STP D15, D14, [X31 + 0x10]
	0x039EA1B4 STP D13, D12, [X31 + 0x20]
	0x039EA1B8 STP D11, D10, [X31 + 0x30]
	0x039EA1BC STP D9, D8, [X31 + 0x40]
	0x039EA1C0 STP X30, X21, [X31 + 0x50]
	0x039EA1C4 STP X20, X19, [X31 + 0x60]
	0x039EA1C8 ADRP X21, 0x9F7000
	0x039EA1CC ADRP X20, 0x769000
	0x039EA1D0 LDRB W8, [X21 + 0xE2D]
	0x039EA1D4 LDR X20, [X20 + 0x528]
	0x039EA1D8 MOV V8.16B, V5.16B
	0x039EA1DC MOV V9.16B, V4.16B
	0x039EA1E0 MOV V12.16B, V3.16B
	0x039EA1E4 MOV V13.16B, V2.16B
	0x039EA1E8 MOV V10.16B, V1.16B
	0x039EA1EC MOV V11.16B, V0.16B
	0x039EA1F0 MOV X19, X0
	0x039EA1F4 TBNZ X8, 0x0, 0x39EA20C
	0x039EA1F8 ADRP X0, 0x769000
	0x039EA1FC LDR X0, [X0 + 0x528]
	0x039EA200 BL 0x1C16CF4
	0x039EA204 MOVZ W8, 0x1
	0x039EA208 STRB W8, [X21 + 0xE2D]
	0x039EA20C LDR X0, [X20]
	0x039EA210 LDR W8, [X0 + 0xE0]
	0x039EA214 CBNZ W8, 0x39EA21C
	0x039EA218 BL 0x1C16DFC
	0x039EA21C CBZ X19, 0x39EA32C
	0x039EA220 LDR X8, [X20]
	0x039EA224 FMOV S0, 1
	0x039EA228 FMOV S1, 2
	0x039EA22C FMOV S2, 4
	0x039EA230 LDR X8, [X8 + 0xB8]
	0x039EA234 FMOV S3, W31

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X23
	005 Move [X31+304], X22
	006 Move [X31+312], X21
	007 Move [X31+320], X20
	008 Move [X31+328], X19
	009 Move X8, [X2+32]
	010 Move V1, [X2]
	011 Move V0, [X2+16]
	012 Move [X31+256], X8
	013 Move [X31+224], V1
	014 Move [X31+232], V0
	015 Move X8, [X3+32]
	016 Move V1, [X3]
	017 Move V0, [X3+16]
	018 Move [X31+208], X8
	019 Move [X31+176], V1
	020 Move [X31+184], V0
	021 Compare X0, 0
	022 JumpIfEqual {90}
	023 Move V0, [X31+224]
	024 Move V1, [X31+240]
	025 Move X8, [X31+256]
	026 Move V2, [X31+176]
	027 Move V3, [X31+192]
	028 Move X9, [X31+208]
	029 Move W20, W5
	030 Move X19, X4
	031 Move X21, X1
	032 Add X1, X31, 128
	033 Add X2, X31, 80
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W4, TEMP
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W5, TEMP
	040 Move W3, W31
	041 Move X6, X31
	042 Move X22, X0
	043 Move [X31+128], V0
	044 Move [X31+136], V1
	045 Move [X31+160], X8
	046 Move [X31+80], V2
	047 Move [X31+88], V3
	048 Move [X31+112], X9
	049 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	050 Move X23, 0x9EF000
	051 Move W8, [X23+2752]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x70E000
	055 Move X0, [X0+624]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X23+2752], W8
	059 Move X8, 0x70E000
	060 Move X8, [X8+624]
	061 Add X1, X31, 16
	062 Move W5, 3
	063 Move W6, 1
	064 Move X8, [X8]
	065 Move X0, X22
	066 Move X2, X21
	067 Move W3, W20
	068 Move X8, [X8+184]
	069 Move W4, W31
	070 Move X7, X19
	071 Move V1, [X8+96]
	072 Move V0, [X8+112]
	073 Move V2, [X8+64]
	074 Move V3, [X8+80]
	075 Move [X31], X31
	076 Move [X31+48], V1
	077 Move [X31+56], V0
	078 Move [X31+16], V2
	079 Move [X31+24], V3
	080 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	081 Move X20, [X31+320]
	082 Move X19, [X31+328]
	083 Move X22, [X31+304]
	084 Move X21, [X31+312]
	085 Move X30, [X31+288]
	086 Move X23, [X31+296]
	087 Move X29, [X31+272]
	088 Add X31, X31, 336
	089 Return 
	090 Call 0x1C17F20

Method: System.Void DrawFullScreen(UnityEngine.Rendering.CommandBuffer commandBuffer, UnityEngine.Material material, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.Rendering.RenderTargetIdentifier depthStencilBuffer, UnityEngine.MaterialPropertyBlock properties = null, System.Int32 shaderPassId = 0)

Disassembly:
	0x039EA238 FMOV S4, -1
	0x039EA23C FDIV S14, S0, S13
	0x039EA240 FDIV S15, S1, S12
	0x039EA244 FDIV S1, S2, S12
	0x039EA248 FDIV S0, S3, S13
	0x039EA24C FMOV S6, 0.5
	0x039EA250 STP S0, S1, [X31 + 0x8]
	0x039EA254 FDIV S0, S4, S13
	0x039EA258 STR S0, [X31 + 0x4]
	0x039EA25C FMUL S0, S10, S6
	0x039EA260 LDR W1, [X8]
	0x039EA264 FMOV S7, -0.5
	0x039EA268 FMUL S1, S11, S6
	0x039EA26C FDIV S0, S0, S8
	0x039EA270 FADD S3, S0, S7
	0x039EA274 FDIV S0, S1, S9
	0x039EA278 FMOV S5, 1
	0x039EA27C FADD S2, S0, S7
	0x039EA280 FDIV S1, S10, S8
	0x039EA284 FDIV S0, S11, S9
	0x039EA288 MOV X0, X19
	0x039EA28C MOV X2, X31
	0x039EA290 FDIV S13, S4, S12
	0x039EA294 FDIV S12, S5, S12
	0x039EA298 BL 0x3C4CED8
	0x039EA29C LDR X8, [X20]
	0x039EA2A0 MOV X0, X19
	0x039EA2A4 MOV V0.16B, V14.16B
	0x039EA2A8 MOV V1.16B, V12.16B
	0x039EA2AC LDR X8, [X8 + 0xB8]
	0x039EA2B0 MOV V2.16B, V14.16B
	0x039EA2B4 MOV V3.16B, V13.16B
	0x039EA2B8 MOV X2, X31
	0x039EA2BC LDR W1, [X8 + 0x4]
	0x039EA2C0 BL 0x3C4CED8
	0x039EA2C4 LDR X8, [X20]
	0x039EA2C8 LDR V0, [X31 + 0x4]
	0x039EA2CC MOV X0, X19
	0x039EA2D0 MOV V1.16B, V15.16B
	0x039EA2D4 LDR X8, [X8 + 0xB8]
	0x039EA2D8 MOV V2.16B, V14.16B
	0x039EA2DC MOV V3.16B, V15.16B
	0x039EA2E0 MOV X2, X31
	0x039EA2E4 LDR W1, [X8 + 0x8]
	0x039EA2E8 BL 0x3C4CED8
	0x039EA2EC LDR X8, [X20]
	0x039EA2F0 MOV X0, X19
	0x039EA2F4 LDP S0, S1, [X31 + 0x8]
	0x039EA2F8 LDP X20, X19, [X31 + 0x60]
	0x039EA2FC LDR X8, [X8 + 0xB8]
	0x039EA300 LDP X30, X21, [X31 + 0x50]
	0x039EA304 LDP D9, D8, [X31 + 0x40]
	0x039EA308 LDP D11, D10, [X31 + 0x30]
	0x039EA30C LDR W1, [X8 + 0xC]
	0x039EA310 LDP D13, D12, [X31 + 0x20]
	0x039EA314 LDP D15, D14, [X31 + 0x10]
	0x039EA318 FMOV S2, W31

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+184], X23
	004 Move [X31+192], X22
	005 Move [X31+200], X21
	006 Move [X31+208], X20
	007 Move [X31+216], X19
	008 Move X9, [X3+32]
	009 Move V1, [X3]
	010 Move V0, [X3+16]
	011 Move [X31+160], X9
	012 Move [X31+128], V1
	013 Move [X31+136], V0
	014 Compare X0, 0
	015 JumpIfEqual {77}
	016 Move V0, [X31+128]
	017 Move V1, [X31+144]
	018 Move X9, [X31+160]
	019 Move X8, X2
	020 Move W20, W5
	021 Move X19, X4
	022 Move X21, X1
	023 Add X2, X31, 80
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W4, TEMP
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W5, TEMP
	030 Move X1, X8
	031 Move W3, W31
	032 Move X6, X31
	033 Move X22, X0
	034 Move [X31+80], V0
	035 Move [X31+88], V1
	036 Move [X31+112], X9
	037 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	038 Move X23, 0x9EF000
	039 Move W8, [X23+2752]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x70E000
	043 Move X0, [X0+624]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+2752], W8
	047 Move X8, 0x70E000
	048 Move X8, [X8+624]
	049 Add X1, X31, 16
	050 Move W5, 3
	051 Move W6, 1
	052 Move X8, [X8]
	053 Move X0, X22
	054 Move X2, X21
	055 Move W3, W20
	056 Move X8, [X8+184]
	057 Move W4, W31
	058 Move X7, X19
	059 Move V1, [X8+96]
	060 Move V0, [X8+112]
	061 Move V2, [X8+64]
	062 Move V3, [X8+80]
	063 Move [X31], X31
	064 Move [X31+48], V1
	065 Move [X31+56], V0
	066 Move [X31+16], V2
	067 Move [X31+24], V3
	068 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	069 Move X20, [X31+208]
	070 Move X19, [X31+216]
	071 Move X22, [X31+192]
	072 Move X21, [X31+200]
	073 Move X30, [X31+176]
	074 Move X23, [X31+184]
	075 Add X31, X31, 224
	076 Return 
	077 Call 0x1C17F20

Method: System.Void DrawFullScreen(UnityEngine.Rendering.CommandBuffer commandBuffer, UnityEngine.Material material, UnityEngine.Rendering.RenderTargetIdentifier[] colorBuffers, UnityEngine.MaterialPropertyBlock properties = null, System.Int32 shaderPassId = 0)

Disassembly:
	0x039EA31C FMOV S3, W31
	0x039EA320 MOV X2, X31
	0x039EA324 ADD X31, X31, 0x70
	0x039EA328 B 0x3C4CED8
	0x039EA32C BL 0x1C16F20
	0x039EA330 STR D8, [X31 - 0x30]!
	0x039EA334 STP X30, X21, [X31 + 0x10]
	0x039EA338 STP X20, X19, [X31 + 0x20]
	0x039EA33C ADRP X20, 0x9F7000
	0x039EA340 ADRP X21, 0x769000
	0x039EA344 LDRB W8, [X20 + 0xE2E]
	0x039EA348 LDR X21, [X21 + 0x528]
	0x039EA34C MOV V8.16B, V0.16B
	0x039EA350 MOV X19, X0
	0x039EA354 TBNZ X8, 0x0, 0x39EA36C
	0x039EA358 ADRP X0, 0x769000
	0x039EA35C LDR X0, [X0 + 0x528]
	0x039EA360 BL 0x1C16CF4
	0x039EA364 MOVZ W8, 0x1
	0x039EA368 STRB W8, [X20 + 0xE2E]
	0x039EA36C FNEG S0, S8
	0x039EA370 BL 0x3EB1B90
	0x039EA374 MOV X0, X31
	0x039EA378 MOV V8.16B, V0.16B
	0x039EA37C BL 0x3C2B420
	0x039EA380 LDR X8, [X21]
	0x039EA384 MOV W20, W0
	0x039EA388 LDR W9, [X8 + 0xE0]
	0x039EA38C CBNZ W9, 0x39EA398
	0x039EA390 MOV X0, X8
	0x039EA394 BL 0x1C16DFC
	0x039EA398 CBZ X19, 0x39EA3D8
	0x039EA39C LDR X8, [X21]
	0x039EA3A0 AND W9, W20, 0xFFFF
	0x039EA3A4 MOV X0, X19
	0x039EA3A8 LDP X20, X19, [X31 + 0x20]
	0x039EA3AC LDR X8, [X8 + 0xB8]
	0x039EA3B0 LDP X30, X21, [X31 + 0x10]
	0x039EA3B4 BFM W9, W9, 0x10, 0xF
	0x039EA3B8 FMOV S2, W31
	0x039EA3BC LDR W1, [X8 + 0x10]
	0x039EA3C0 FMOV S3, W31
	0x039EA3C4 FMOV S1, W9
	0x039EA3C8 MOV V0.16B, V8.16B
	0x039EA3CC MOV X2, X31
	0x039EA3D0 LDR V8, [X31], #0x30
	0x039EA3D4 B 0x3C4CED8
	0x039EA3D8 BL 0x1C16F20
	0x039EA3DC FMOV S1, 1
	0x039EA3E0 FSUB S0, S1, S0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X24, 0x9F8000
	010 Move W8, [X24+3617]
	011 Move W19, W4
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x732000
	021 Move X0, [X0+2296]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3617], W8
	025 Compare X21, 0
	026 JumpIfEqual {65}
	027 Move W8, [X21+24]
	028 Compare W8, 0
	029 JumpIfEqual {66}
	030 Move X9, 0x732000
	031 Move X8, [X21+64]
	032 Move V0, [X21+32]
	033 Move V1, [X21+48]
	034 Move X9, [X9+2296]
	035 Move [X31+80], X8
	036 Move [X31+48], V0
	037 Move [X31+56], V1
	038 Move X0, [X9]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move V0, [X31+48]
	044 Move V1, [X31+64]
	045 Move X8, [X31+80]
	046 Add X3, X31, 0
	047 Move X0, X23
	048 Move X1, X22
	049 Move X2, X21
	050 Move X4, X20
	051 Move W5, W19
	052 Move [X31], V0
	053 Move [X31+8], V1
	054 Move [X31+32], X8
	055 Call CoreUtils.DrawFullScreen, X0, X1, X2, X3, X4, X5
	056 Move X20, [X31+144]
	057 Move X19, [X31+152]
	058 Move X22, [X31+128]
	059 Move X21, [X31+136]
	060 Move X24, [X31+112]
	061 Move X23, [X31+120]
	062 Move X30, [X31+96]
	063 Add X31, X31, 160
	064 Return 
	065 Call 0x1C17F20
	066 Call 0x1C17F28

Method: UnityEngine.Color ConvertSRGBToActiveColorSpace(UnityEngine.Color color)

Disassembly:
	0x039EA3E4 FMOV S1, 2.5
	0x039EA3E8 FMUL S0, S0, S1
	0x039EA3EC B 0x39EA330
	0x039EA3F0 STR X30, [X31 - 0x10]!
	0x039EA3F4 MOV X0, X31
	0x039EA3F8 BL 0x3C3BB6C
	0x039EA3FC CMP W0, 0x2C
	0x039EA400 CSET W0, GT
	0x039EA404 LDR X30, [X31], #0x10
	0x039EA408 RET
	0x039EA40C STP X30, X25, [X31 - 0x40]!
	0x039EA410 STP X24, X23, [X31 + 0x10]
	0x039EA414 STP X22, X21, [X31 + 0x20]
	0x039EA418 STP X20, X19, [X31 + 0x30]
	0x039EA41C ADRP X24, 0x9F7000
	0x039EA420 ADRP X25, 0x769000
	0x039EA424 ADRP X19, 0x769000
	0x039EA428 ADRP X23, 0x769000
	0x039EA42C ADRP X22, 0x769000
	0x039EA430 ADRP X21, 0x769000
	0x039EA434 ADRP X20, 0x769000
	0x039EA438 LDR X25, [X25 + 0x530]
	0x039EA43C LDRB W8, [X24 + 0xE2F]
	0x039EA440 LDR X19, [X19 + 0x528]
	0x039EA444 LDR X23, [X23 + 0x538]
	0x039EA448 LDR X22, [X22 + 0x540]
	0x039EA44C LDR X21, [X21 + 0x548]
	0x039EA450 LDR X20, [X20 + 0x550]
	0x039EA454 TBNZ X8, 0x0, 0x39EA4A8
	0x039EA458 ADRP X0, 0x769000
	0x039EA45C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move X0, X31
	007 Move V8, V3
	008 Move V9, V2
	009 Move V10, V1
	010 Move V11, V0
	011 Call QualitySettings.get_activeColorSpace
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move V0, V11
	014 Move X0, X31
	015 Call Mathf.GammaToLinearSpace, V0
	016 Move V11, V0
	017 Move V0, V10
	018 Move X0, X31
	019 Call Mathf.GammaToLinearSpace, V0
	020 Move V10, V0
	021 Move V0, V9
	022 Move X0, X31
	023 Call Mathf.GammaToLinearSpace, V0
	024 Move V9, V0
	025 Move V2, V9
	026 Move V3, V8
	027 Move X30, [X31+32]
	028 Move D9, [X31+16]
	029 Move D8, [X31+24]
	030 Move V0, V11
	031 Move V1, V10
	032 Move D11, [X31+48]
	033 Move D10, [X31+56]
	034 Return X0

Method: UnityEngine.Color ConvertLinearToActiveColorSpace(UnityEngine.Color color)

Disassembly:
	0x039EA460 BL 0x1C16CF4
	0x039EA464 ADRP X0, 0x769000
	0x039EA468 LDR X0, [X0 + 0x548]
	0x039EA46C BL 0x1C16CF4
	0x039EA470 ADRP X0, 0x769000
	0x039EA474 LDR X0, [X0 + 0x530]
	0x039EA478 BL 0x1C16CF4
	0x039EA47C ADRP X0, 0x769000
	0x039EA480 LDR X0, [X0 + 0x550]
	0x039EA484 BL 0x1C16CF4
	0x039EA488 ADRP X0, 0x769000
	0x039EA48C LDR X0, [X0 + 0x538]
	0x039EA490 BL 0x1C16CF4
	0x039EA494 ADRP X0, 0x769000
	0x039EA498 LDR X0, [X0 + 0x540]
	0x039EA49C BL 0x1C16CF4
	0x039EA4A0 MOVZ W8, 0x1
	0x039EA4A4 STRB W8, [X24 + 0xE2F]
	0x039EA4A8 LDR X0, [X25]
	0x039EA4AC MOV X1, X31
	0x039EA4B0 BL 0x3C124EC
	0x039EA4B4 LDR X8, [X19]
	0x039EA4B8 MOV X1, X31
	0x039EA4BC LDR X8, [X8 + 0xB8]
	0x039EA4C0 STR W0, [X8]
	0x039EA4C4 LDR X0, [X23]
	0x039EA4C8 BL 0x3C124EC
	0x039EA4CC LDR X8, [X19]
	0x039EA4D0 MOV X1, X31
	0x039EA4D4 LDR X8, [X8 + 0xB8]
	0x039EA4D8 STR W0, [X8 + 0x4]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move X0, X31
	007 Move V8, V3
	008 Move V9, V2
	009 Move V10, V1
	010 Move V11, V0
	011 Call QualitySettings.get_activeColorSpace
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move V0, V11
	014 Move X0, X31
	015 Call Mathf.LinearToGammaSpace, V0
	016 Move V11, V0
	017 Move V0, V10
	018 Move X0, X31
	019 Call Mathf.LinearToGammaSpace, V0
	020 Move V10, V0
	021 Move V0, V9
	022 Move X0, X31
	023 Call Mathf.LinearToGammaSpace, V0
	024 Move V9, V0
	025 Move V2, V9
	026 Move V3, V8
	027 Move X30, [X31+32]
	028 Move D9, [X31+16]
	029 Move D8, [X31+24]
	030 Move V0, V11
	031 Move V1, V10
	032 Move D11, [X31+48]
	033 Move D10, [X31+56]
	034 Return X0

Method: UnityEngine.Material CreateEngineMaterial(System.String shaderPath)

Disassembly:
	0x039EA4DC LDR X0, [X22]
	0x039EA4E0 BL 0x3C124EC
	0x039EA4E4 LDR X8, [X19]
	0x039EA4E8 MOV X1, X31
	0x039EA4EC LDR X8, [X8 + 0xB8]
	0x039EA4F0 STR W0, [X8 + 0x8]
	0x039EA4F4 LDR X0, [X21]
	0x039EA4F8 BL 0x3C124EC
	0x039EA4FC LDR X8, [X19]
	0x039EA500 MOV X1, X31
	0x039EA504 LDR X8, [X8 + 0xB8]
	0x039EA508 STR W0, [X8 + 0xC]
	0x039EA50C LDR X0, [X20]
	0x039EA510 BL 0x3C124EC
	0x039EA514 LDR X8, [X19]
	0x039EA518 LDP X20, X19, [X31 + 0x30]
	0x039EA51C LDP X22, X21, [X31 + 0x20]
	0x039EA520 LDP X24, X23, [X31 + 0x10]
	0x039EA524 LDR X8, [X8 + 0xB8]
	0x039EA528 STR W0, [X8 + 0x10]
	0x039EA52C LDP X30, X25, [X31], #0x40
	0x039EA530 RET
	0x039EA534 LDR V0, [X0 + 0x10]
	0x039EA538 RET
	0x039EA53C STR S0, [X0 + 0x10]
	0x039EA540 RET
	0x039EA544 LDR V0, [X0 + 0x14]
	0x039EA548 RET
	0x039EA54C STR S0, [X0 + 0x14]
	0x039EA550 RET
	0x039EA554 LDR V0, [X0 + 0x18]
	0x039EA558 RET
	0x039EA55C STR S0, [X0 + 0x18]
	0x039EA560 RET
	0x039EA564 LDR V0, [X0 + 0x1C]
	0x039EA568 RET
	0x039EA56C STR S0, [X0 + 0x1C]
	0x039EA570 RET
	0x039EA574 STR X30, [X31 - 0x40]!
	0x039EA578 STP X24, X23, [X31 + 0x10]
	0x039EA57C STP X22, X21, [X31 + 0x20]
	0x039EA580 STP X20, X19, [X31 + 0x30]
	0x039EA584 ADRP X21, 0x9F7000
	0x039EA588 ADRP X20, 0x769000
	0x039EA58C LDRB W8, [X21 + 0xE30]
	0x039EA590 LDR X20, [X20 + 0x558]
	0x039EA594 MOV X19, X0
	0x039EA598 TBNZ X8, 0x0, 0x39EA5C8
	0x039EA59C ADRP X0, 0x769000
	0x039EA5A0 LDR X0, [X0 + 0x558]
	0x039EA5A4 BL 0x1C16CF4
	0x039EA5A8 ADRP X0, 0x769000
	0x039EA5AC LDR X0, [X0 + 0x560]
	0x039EA5B0 BL 0x1C16CF4
	0x039EA5B4 ADRP X0, 0x769000
	0x039EA5B8 LDR X0, [X0 + 0x568]
	0x039EA5BC BL 0x1C16CF4
	0x039EA5C0 MOVZ W8, 0x1
	0x039EA5C4 STRB W8, [X21 + 0xE30]
	0x039EA5C8 LDR X0, [X20]
	0x039EA5CC ADRP X22, 0x769000
	0x039EA5D0 ADRP X21, 0x769000
	0x039EA5D4 LDR X22, [X22 + 0x560]
	0x039EA5D8 LDR X21, [X21 + 0x568]
	0x039EA5DC MOVZ W1, 0x3
	0x039EA5E0 BL 0x1C16D6C
	0x039EA5E4 STR X0, [X19 + 0x20]
	0x039EA5E8 MOV X0, X19
	0x039EA5EC MOV X1, X31
	0x039EA5F0 BL 0x33BDD8C
	0x039EA5F4 MOV X23, X31
	0x039EA5F8 LDR X0, [X22]
	0x039EA5FC LDR X24, [X19 + 0x20]
	0x039EA600 BL 0x1C16F10
	0x039EA604 MOV X1, X31
	0x039EA608 MOV X20, X0
	0x039EA60C BL 0x33BDD8C
	0x039EA610 CBZ X24, 0x39EA67C
	0x039EA614 CBZ X20, 0x39EA62C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9F8000
	006 Move X20, 0x70A000
	007 Move W8, [X21+3618]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x70A000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x70E000
	018 Move X0, [X0+3232]
	019 Call 0x1C17CF4
	020 Move X0, 0x70A000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x76A000
	024 Move X0, [X0+1248]
	025 Call 0x1C17CF4
	026 Move X0, 0x76A000
	027 Move X0, [X0+1256]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3618], W8
	031 Move X0, X19
	032 Move X1, X31
	033 Call Shader.Find, X0
	034 Move X8, [X20]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {71}
	049 Move X8, 0x76A000
	050 Move X9, 0x76A000
	051 Move X8, [X8+1256]
	052 Move X9, [X9+1248]
	053 Move X1, X19
	054 Move X3, X31
	055 Move X0, [X8]
	056 Move X2, [X9]
	057 Call String.Concat, X0, X1, X2
	058 Move X8, 0x70A000
	059 Move X8, [X8+2600]
	060 Move X19, X0
	061 Move X8, [X8]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X31
	069 Call Debug.LogError, X0
	070 Move X19, X31
	071 Move X8, 0x70E000
	072 Move X8, [X8+3232]
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X1, X20
	076 Move X2, X31
	077 Move X19, X0
	078 Call Material..ctor, X0, X1
	079 Compare X19, 0
	080 JumpIfEqual {91}
	081 Move W1, 61
	082 Move X0, X19
	083 Move X2, X31
	084 Call Object.set_hideFlags, X0, X1
	085 Move X0, X19
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return X0
	091 Call 0x1C17F20

Method: UnityEngine.Material CreateEngineMaterial(UnityEngine.Shader shader)

Disassembly:
	0x039E2920 BL 0x39E1F00
	0x039E2924 LDP X20, X19, [X31 + 0xB0]
	0x039E2928 LDP X22, X21, [X31 + 0xA0]
	0x039E292C LDP X24, X23, [X31 + 0x90]
	0x039E2930 LDR X30, [X31 + 0x80]
	0x039E2934 LDP D9, D8, [X31 + 0x70]
	0x039E2938 LDP D11, D10, [X31 + 0x60]
	0x039E293C ADD X31, X31, 0xC0
	0x039E2940 RET
	0x039E2944 BL 0x1C16F20
	0x039E2948 SUB X31, X31, 0xD0
	0x039E294C STP X30, X25, [X31 + 0x90]
	0x039E2950 STP X24, X23, [X31 + 0xA0]
	0x039E2954 STP X22, X21, [X31 + 0xB0]
	0x039E2958 STP X20, X19, [X31 + 0xC0]
	0x039E295C ADRP X25, 0x9FF000
	0x039E2960 ADRP X24, 0x771000
	0x039E2964 LDRB W8, [X25 + 0xDCF]
	0x039E2968 LDR X24, [X24 + 0x1B0]
	0x039E296C MOV W19, W4
	0x039E2970 MOV X20, X3
	0x039E2974 MOV X22, X2
	0x039E2978 MOV X23, X1
	0x039E297C MOV X21, X0
	0x039E2980 TBNZ X8, 0x0, 0x39E29A4
	0x039E2984 ADRP X0, 0x771000
	0x039E2988 LDR X0, [X0 + 0x1B0]
	0x039E298C BL 0x1C16CF4
	0x039E2990 ADRP X0, 0x770000
	0x039E2994 LDR X0, [X0 + 0xE28]
	0x039E2998 BL 0x1C16CF4
	0x039E299C MOVZ W8, 0x1
	0x039E29A0 STRB W8, [X25 + 0xDCF]
	0x039E29A4 LDR X0, [X24]
	0x039E29A8 LDR W8, [X0 + 0xE0]
	0x039E29AC CBNZ W8, 0x39E29B8
	0x039E29B0 BL 0x1C16DFC
	0x039E29B4 LDR X0, [X24]
	0x039E29B8 LDR X8, [X0 + 0xB8]
	0x039E29BC LDR X9, [X23 + 0x20]
	0x039E29C0 LDP V1, V0, [X23]
	0x039E29C4 LDR W1, [X8]
	0x039E29C8 STR X9, [X31 + 0x80]
	0x039E29CC STP V1, V0, [X31 + 0x60]
	0x039E29D0 CBZ X21, 0x39E2A54
	0x039E29D4 LDP V0, V1, [X31 + 0x60]
	0x039E29D8 LDR X8, [X31 + 0x80]
	0x039E29DC ADRP X23, 0x770000
	0x039E29E0 LDR X23, [X23 + 0xE28]
	0x039E29E4 ADD X2, X31, 0x30
	0x039E29E8 MOV X0, X21
	0x039E29EC MOV X3, X31
	0x039E29F0 STP V0, V1, [X31 + 0x30]
	0x039E29F4 STR X8, [X31 + 0x50]
	0x039E29F8 BL 0x3C4FCFC
	0x039E29FC LDR X8, [X22 + 0x20]
	0x039E2A00 LDP V1, V0, [X22]
	0x039E2A04 ADD X1, X31, 0x0
	0x039E2A08 MOV X0, X21
	0x039E2A0C MOV X2, X31
	0x039E2A10 STR X8, [X31 + 0x20]
	0x039E2A14 STP V1, V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA00000
	006 Move X21, 0x712000
	007 Move W8, [X20+3619]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x712000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x716000
	018 Move X0, [X0+3232]
	019 Call 0x1C17CF4
	020 Move X0, 0x712000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x772000
	024 Move X0, [X0+928]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3619], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {54}
	041 Move X8, 0x712000
	042 Move X8, [X8+2600]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X8, 0x772000
	049 Move X8, [X8+928]
	050 Move X1, X31
	051 Move X0, [X8]
	052 Call Debug.LogError, X0
	053 Move X20, X31
	054 Move X8, 0x716000
	055 Move X8, [X8+3232]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call Material..ctor, X0, X1
	062 Compare X20, 0
	063 JumpIfEqual {74}
	064 Move W1, 61
	065 Move X0, X20
	066 Move X2, X31
	067 Call Object.set_hideFlags, X0, X1
	068 Move X0, X20
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Boolean HasFlag(T mask, T flag)

Disassembly:
	0x021A910C STP X29, X30, [X31 - 0x50]!
	0x021A9110 STP X26, X25, [X31 + 0x10]
	0x021A9114 STP X24, X23, [X31 + 0x20]
	0x021A9118 STP X22, X21, [X31 + 0x30]
	0x021A911C STP X20, X19, [X31 + 0x40]
	0x021A9120 ADD X29, X31, 0x0
	0x021A9124 SUB X31, X31, 0x10
	0x021A9128 MRS X25, 0xC000
	0x021A912C LDR X8, [X25 + 0x28]
	0x021A9130 MOV X20, X4
	0x021A9134 MOV W23, W3
	0x021A9138 MOV W19, W2
	0x021A913C STUR X8, [X29 - 0x8]
	0x021A9140 LDR X8, [X4 + 0x38]
	0x021A9144 MOV X24, X1
	0x021A9148 CBNZ X8, 0x21A9158
	0x021A914C MOV X0, X20
	0x021A9150 BL 0x1C5C6E0
	0x021A9154 LDR X8, [X20 + 0x38]
	0x021A9158 LDR X8, [X8 + 0x8]
	0x021A915C LDR W21, [X8 + 0xFC]
	0x021A9160 ADD X8, X31, 0x0
	0x021A9164 ADD X9, X21, 0xF
	0x021A9168 AND X9, X9, 0x1FFFFFFFF
	0x021A916C SUB X22, X8, X9
	0x021A9170 ADD X31, X22, 0x0
	0x021A9174 LDR X24, [X24]
	0x021A9178 CBZ X24, 0x21A9220
	0x021A917C LDR W26, [X24 + 0x18]
	0x021A9180 SUB W8, W23, 0x1
	0x021A9184 CMP W8, W26
	0x021A9188 B.CS 0x21A921C
	0x021A918C LDR X9, [X24]
	0x021A9190 SXTW X8, W8
	0x021A9194 MOV X0, X22
	0x021A9198 MOV X2, X21
	0x021A919C LDR W23, [X9 + 0x104]
	0x021A91A0 NOP
	0x021A91A4 MADD X8, X23, X8, X24
	0x021A91A8 ADD X1, X8, 0x20
	0x021A91AC BL 0x3EB1AC0
	0x021A91B0 CMP W26, W19
	0x021A91B4 B.LS 0x21A921C
	0x021A91B8 SXTW X8, W19
	0x021A91BC MADD X8, X23, X8, X24
	0x021A91C0 ADD X0, X8, 0x20
	0x021A91C4 MOV X1, X22
	0x021A91C8 MOV X2, X21
	0x021A91CC BL 0x3EB1AC0
	0x021A91D0 LDR X8, [X20 + 0x38]
	0x021A91D4 LDR X0, [X8 + 0x8]
	0x021A91D8 LDRB W8, [X0 + 0x135]
	0x021A91DC TBNZ X8, 0x0, 0x21A91E4
	0x021A91E0 BL 0x1C5C684
	0x021A91E4 LDR W8, [X24 + 0x18]
	0x021A91E8 CMP W8, W19
	0x021A91EC B.LS 0x21A921C
	0x021A91F0 LDR X8, [X25 + 0x28]
	0x021A91F4 LDUR X9, [X29 - 0x8]
	0x021A91F8 CMP X8, X9
	0x021A91FC B.NE 0x21A9224
	0x021A9200 ADD X31, X29, 0x0
	0x021A9204 LDP X20, X19, [X31 + 0x40]
	0x021A9208 LDP X22, X21, [X31 + 0x30]
	0x021A920C LDP X24, X23, [X31 + 0x20]
	0x021A9210 LDP X26, X25, [X31 + 0x10]
	0x021A9214 LDP X29, X30, [X31], #0x50
	0x021A9218 RET
	0x021A921C BL 0x1C16F28
	0x021A9220 BL 0x1C16F20
	0x021A9224 BL 0x3EB1B20
	0x021A9228 LDR X8, [X1]
	0x021A922C SUB W9, W3, 0x1
	0x021A9230 LDR X9, [X8, W9, SXTW]
	0x021A9234 STR X9, [X8, W2, SXTW]
	0x021A9238 RET
	0x021A923C LDR X8, [X1]
	0x021A9240 SUB W9, W3, 0x1
	0x021A9244 MOVZ W10, 0xC
	0x021A9248 SMADDL X9, X9, X10, X8
	0x021A924C LDR W11, [X9 + 0x8]
	0x021A9250 LDR X9, [X9]
	0x021A9254 NOP
	0x021A9258 SMADDL X8, X2, X10, X8
	0x021A925C STR W11, [X8 + 0x8]
	0x021A9260 STR X9, [X8]
	0x021A9264 RET
	0x021A9268 LDR X8, [X1]
	0x021A926C SUB W9, W3, 0x1
	0x021A9270 LDR V0, [X8, W9, SXTW]
	0x021A9274 STR V0, [X8, W2, SXTW]
	0x021A9278 RET
	0x021A927C LDR X8, [X1]
	0x021A9280 SUB W9, W3, 0x1
	0x021A9284 SXTW X9, W9
	0x021A9288 SXTW X10, W2
	0x021A928C ADD X9, X8, X9, 0x6, LSL
	0x021A9290 LDP V0, V1, [X9 + 0x20]
	0x021A9294 LDP V2, V3, [X9]
	0x021A9298 ADD X8, X8, X10, 0x6, LSL
	0x021A929C STP V0, V1, [X8 + 0x20]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Add X29, X31, 0
	010 Subtract X31, X31, 48
	011 NotImplemented "Instruction MRS not yet implemented."
	012 Move X8, [X24+40]
	013 Move X20, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move [X29-8], X8
	017 Move [X29-40], X1
	018 Move [X29-32], X0
	019 Move X9, [X2+56]
	020 Compare X9, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move X9, [X20+56]
	025 Move X8, [X9]
	026 Add X10, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move TEMP, X10
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {38}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X9, [X20+56]
	035 Move X8, [X9]
	036 Add X10, X8, 309
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X0, X8
	039 Move W11, [X0+252]
	040 Add X12, X31, 0
	041 Add W11, W11, 16
	042 Add X11, X11, 15
	043 And X11, X11, 0x1FFFFFFFF
	044 Subtract X23, X12, X11
	045 Add X31, X23, 0
	046 Move TEMP, X10
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {56}
	050 Move X0, X8
	051 Call 0x1C5D684
	052 Move X9, [X20+56]
	053 Move X8, [X9]
	054 Add X10, X8, 309
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move X0, X8
	057 Move W11, [X0+252]
	058 Add X12, X31, 0
	059 Add W11, W11, 16
	060 Add X11, X11, 15
	061 And X11, X11, 0x1FFFFFFFF
	062 Subtract X22, X12, X11
	063 Add X31, X22, 0
	064 Move TEMP, X10
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {72}
	068 Move X0, X8
	069 Call 0x1C5D684
	070 Move X9, [X20+56]
	071 Move X8, X0
	072 Move X10, [X9]
	073 Move X1, [X9+8]
	074 Subtract X9, X29, 32
	075 Subtract X4, X29, 24
	076 Subtract X5, X29, 12
	077 Move W10, [X10+40]
	078 Move X0, X8
	079 Move X2, X23
	080 Move [X29-24], X31
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Call 0x1C18728
	084 Move X8, [X20+56]
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 Move X0, [X8]
	087 Move W9, [X0+309]
	088 Move TEMP, X9
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {95}
	092 Call 0x1C5D684
	093 Move X8, [X20+56]
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move X9, [X8]
	096 Move X1, [X8+8]
	097 Subtract X8, X29, 40
	098 Subtract X4, X29, 24
	099 Subtract X5, X29, 12
	100 Move W9, [X9+40]
	101 Move X2, X22
	102 Move [X29-24], X31
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 Call 0x1C18728
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 Move X9, [X24+40]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 And W31, W8, W21
	110 NotImplemented "Instruction CSET not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X31, X29, 0
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X29, [X31+64]
	120 Move X30, [X31+72]
	121 Return X0
	122 Call 0x3EB2B20

Method: System.Void Swap(ref T a, ref T b)

Disassembly:
	0x021A92A0 STP V2, V3, [X8]
	0x021A92A4 RET
	0x021A92A8 LDR X8, [X1]
	0x021A92AC SUB W9, W3, 0x1
	0x021A92B0 LDR V0, [X8, W9, SXTW]

ISIL:
	001 Move X8, [X1]
	002 Move X9, [X0]
	003 Move [X0], X8
	004 Move [X1], X9
	005 Return 

Method: System.Void SetKeyword(UnityEngine.Rendering.CommandBuffer cmd, System.String keyword, System.Boolean state)

Disassembly:
	0x039EA618 LDR X8, [X24]
	0x039EA61C MOV X0, X20
	0x039EA620 LDR X1, [X8 + 0x40]
	0x039EA624 BL 0x1C16E00
	0x039EA628 CBZ X0, 0x39EA684
	0x039EA62C LDR W8, [X24 + 0x18]
	0x039EA630 CMP X23, X8
	0x039EA634 B.CS 0x39EA680

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {13}
	003 Move TEMP, X2
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X2, X31
	008 Call CommandBuffer.EnableShaderKeyword, X0, X1
	009 Return 
	010 Move X2, X31
	011 Call CommandBuffer.DisableShaderKeyword, X0, X1
	012 Return 
	013 Move [X31-16], X30
	014 Call 0x1C17F20

Method: System.Void SetKeyword(UnityEngine.Material material, System.String keyword, System.Boolean state)

Disassembly:
	0x039EA638 ADD X8, X24, X23, 0x3, LSL
	0x039EA63C ADD X23, X23, 0x1
	0x039EA640 CMP X23, 0x3
	0x039EA644 STR X20, [X8 + 0x20]
	0x039EA648 B.NE 0x39EA5F8
	0x039EA64C LDR X0, [X21]
	0x039EA650 BL 0x1C16F10
	0x039EA654 MOV X1, X31

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {13}
	003 Move TEMP, X2
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X2, X31
	008 Call Material.EnableKeyword, X0, X1
	009 Return 
	010 Move X2, X31
	011 Call Material.DisableKeyword, X0, X1
	012 Return 
	013 Move [X31-16], X30
	014 Call 0x1C17F20

Method: System.Void SetKeyword(UnityEngine.ComputeShader cs, System.String keyword, System.Boolean state)

Disassembly:
	0x039EA658 MOV X20, X0
	0x039EA65C BL 0x33BDD8C
	0x039EA660 STR X19, [X20 + 0x10]
	0x039EA664 STR X20, [X19 + 0x28]
	0x039EA668 LDP X20, X19, [X31 + 0x30]
	0x039EA66C LDP X22, X21, [X31 + 0x20]
	0x039EA670 LDP X24, X23, [X31 + 0x10]
	0x039EA674 LDR X30, [X31], #0x40

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {13}
	003 Move TEMP, X2
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X2, X31
	008 Call ComputeShader.EnableKeyword, X0, X1
	009 Return 
	010 Move X2, X31
	011 Call ComputeShader.DisableKeyword, X0, X1
	012 Return 
	013 Move [X31-16], X30
	014 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Object obj)

Disassembly:
	0x039E2DF8 MOV W21, W3
	0x039E2DFC MOV W22, W2
	0x039E2E00 MOV X23, X1
	0x039E2E04 MOV X24, X0
	0x039E2E08 TBNZ X8, 0x0, 0x39E2E20
	0x039E2E0C ADRP X0, 0x739000
	0x039E2E10 LDR X0, [X0 + 0x8F8]
	0x039E2E14 BL 0x1C16CF4
	0x039E2E18 MOVZ W8, 0x1
	0x039E2E1C STRB W8, [X25 + 0xE10]
	0x039E2E20 LDR X0, [X26]
	0x039E2E24 LDR W8, [X0 + 0xE0]
	0x039E2E28 CBNZ W8, 0x39E2E30
	0x039E2E2C BL 0x1C16DFC
	0x039E2E30 MOV X0, X24
	0x039E2E34 MOV X1, X23
	0x039E2E38 MOV W2, W22
	0x039E2E3C MOV W3, W21
	0x039E2E40 MOV W4, W20
	0x039E2E44 MOV W5, W19
	0x039E2E48 LDP X20, X19, [X31 + 0x40]
	0x039E2E4C LDP X22, X21, [X31 + 0x30]
	0x039E2E50 LDP X24, X23, [X31 + 0x20]
	0x039E2E54 LDP X26, X25, [X31 + 0x10]
	0x039E2E58 FMOV S0, W31
	0x039E2E5C FMOV S1, W31
	0x039E2E60 FMOV S2, W31
	0x039E2E64 FMOV S3, W31
	0x039E2E68 LDR X30, [X31], #0x50
	0x039E2E6C B 0x39E7864
	0x039E2E70 SUB X31, X31, 0x80
	0x039E2E74 STR D10, [X31 + 0x30]
	0x039E2E78 STP D9, D8, [X31 + 0x38]
	0x039E2E7C STR X30, [X31 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA00000
	006 Move X20, 0x712000
	007 Move W8, [X21+3620]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x712000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3620], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Move X2, X31
	027 Call Object.op_Inequality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {45}
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call Object.Destroy, X0
	044 Return 
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Collections.Generic.IEnumerable`1<System.Type> GetAllAssemblyTypes()

Disassembly:
	0x039EA678 RET
	0x039EA67C BL 0x1C16F20
	0x039EA680 BL 0x1C16F28
	0x039EA684 BL 0x1C16F44
	0x039EA688 MOV X1, X31
	0x039EA68C BL 0x1C16DEC
	0x039EA690 MOV X1, X31
	0x039EA694 B 0x33BDD8C
	0x039EA698 STR X30, [X31 - 0x20]!
	0x039EA69C STP X20, X19, [X31 + 0x10]
	0x039EA6A0 MOV X19, X1
	0x039EA6A4 MOV X1, X31
	0x039EA6A8 MOV X20, X0
	0x039EA6AC BL 0x33BDD8C
	0x039EA6B0 STR X19, [X20 + 0x10]
	0x039EA6B4 LDP X20, X19, [X31 + 0x10]
	0x039EA6B8 LDR X30, [X31], #0x20
	0x039EA6BC RET
	0x039EA6C0 STP D9, D8, [X31 - 0x20]!
	0x039EA6C4 STP X30, X19, [X31 + 0x10]
	0x039EA6C8 LDP S1, S2, [X0 + 0x14]
	0x039EA6CC FMUL S0, S1, S0
	0x039EA6D0 FCMP S0, S2
	0x039EA6D4 B.PL 0x39EA6E0
	0x039EA6D8 MOV X8, X31
	0x039EA6DC B 0x39EA6F8
	0x039EA6E0 LDR V1, [X0 + 0x1C]
	0x039EA6E4 FCMP S0, S1
	0x039EA6E8 B.PL 0x39EA6F4
	0x039EA6EC MOVZ W8, 0x1
	0x039EA6F0 B 0x39EA6F8
	0x039EA6F4 MOVZ W8, 0x2
	0x039EA6F8 LDR X9, [X0 + 0x20]
	0x039EA6FC CBZ X9, 0x39EA768
	0x039EA700 LDR W10, [X9 + 0x18]
	0x039EA704 CMP W8, W10
	0x039EA708 B.CS 0x39EA76C
	0x039EA70C ADD X8, X9, X8, 0x3, LSL
	0x039EA710 LDR X19, [X8 + 0x20]
	0x039EA714 CBZ X19, 0x39EA768
	0x039EA718 LDR V1, [X19 + 0x10]
	0x039EA71C LDR V2, [X19 + 0x18]
	0x039EA720 FSUB S0, S0, S1
	0x039EA724 FMUL S1, S0, S2
	0x039EA728 FCMP S1, 0x0
	0x039EA72C FMOV S0, W31
	0x039EA730 B.LE 0x39EA74C
	0x039EA734 LDP S8, S9, [X19 + 0x20]
	0x039EA738 MOV V0.16B, V1.16B
	0x039EA73C BL 0x3EB1E80
	0x039EA740 FMUL S0, S0, S9
	0x039EA744 FADD S0, S8, S0
	0x039EA748 BL 0x3EB1E70
	0x039EA74C LDR V1, [X19 + 0x1C]
	0x039EA750 LDR V2, [X19 + 0x14]
	0x039EA754 LDP X30, X19, [X31 + 0x10]
	0x039EA758 FMUL S0, S0, S1
	0x039EA75C FADD S0, S0, S2
	0x039EA760 LDP D9, D8, [X31], #0x20
	0x039EA764 RET
	0x039EA768 BL 0x1C16F20
	0x039EA76C BL 0x1C16F28
	0x039EA770 STP D9, D8, [X31 - 0x20]!
	0x039EA774 STP X30, X19, [X31 + 0x10]
	0x039EA778 LDR V1, [X0 + 0x10]
	0x039EA77C LDR V2, [X0 + 0x18]
	0x039EA780 MOV X19, X0
	0x039EA784 FSUB S0, S0, S1
	0x039EA788 FMUL S1, S0, S2
	0x039EA78C FCMP S1, 0x0
	0x039EA790 FMOV S0, W31
	0x039EA794 B.LE 0x39EA7B0
	0x039EA798 LDP S8, S9, [X19 + 0x20]
	0x039EA79C MOV V0.16B, V1.16B
	0x039EA7A0 BL 0x3EB1E80
	0x039EA7A4 FMUL S0, S0, S9
	0x039EA7A8 FADD S0, S8, S0
	0x039EA7AC BL 0x3EB1E70
	0x039EA7B0 LDR V1, [X19 + 0x1C]
	0x039EA7B4 LDR V2, [X19 + 0x14]
	0x039EA7B8 LDP X30, X19, [X31 + 0x10]
	0x039EA7BC FMUL S0, S0, S1
	0x039EA7C0 FADD S0, S0, S2
	0x039EA7C4 LDP D9, D8, [X31], #0x20
	0x039EA7C8 RET
	0x039EA7CC SUB X31, X31, 0x70
	0x039EA7D0 STP D15, D14, [X31 + 0x20]
	0x039EA7D4 STP D13, D12, [X31 + 0x30]
	0x039EA7D8 STP D11, D10, [X31 + 0x40]
	0x039EA7DC STP D9, D8, [X31 + 0x50]
	0x039EA7E0 STP X30, X19, [X31 + 0x60]
	0x039EA7E4 FMOV S13, 1
	0x039EA7E8 ADRP X8, 0xFFFFFFFFFD100000
	0x039EA7EC MOV V12.16B, V0.16B
	0x039EA7F0 FCMP S1, 0x0
	0x039EA7F4 FMIN S0, S1, S13
	0x039EA7F8 LDR V1, [X8 + 0x36C]
	0x039EA7FC FMOV S14, W31
	0x039EA800 FCSEL S0, S0, S14, PL

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x9F8000
	008 Move X22, 0x732000
	009 Move W8, [X19+3621]
	010 Move X22, [X22+2296]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x732000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move X0, 0x76A000
	019 Move X0, [X0+1264]
	020 Call 0x1C17CF4
	021 Move X0, 0x76A000
	022 Move X0, [X0+1272]
	023 Call 0x1C17CF4
	024 Move X0, 0x76A000
	025 Move X0, [X0+1280]
	026 Call 0x1C17CF4
	027 Move X0, 0x76A000
	028 Move X0, [X0+1288]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+3621], W8
	032 Move X8, [X22]
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {39}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X8, [X22]
	039 Move X9, [X8+184]
	040 Move X9, [X9+64]
	041 Compare X9, 0
	042 JumpIfNotEqual {101}
	043 Move X0, X31
	044 Call AppDomain.get_CurrentDomain
	045 Compare X0, 0
	046 JumpIfEqual {116}
	047 Move X1, X31
	048 Call AppDomain.GetAssemblies, X0
	049 Move X23, 0x76A000
	050 Move X23, [X23+1288]
	051 Move X19, X0
	052 Move X8, [X23]
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {59}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X8, [X23]
	059 Move X9, [X8+184]
	060 Move X20, [X9+8]
	061 Compare X20, 0
	062 JumpIfNotEqual {85}
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {69}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X8, [X23]
	069 Move X9, 0x76A000
	070 Move X8, [X8+184]
	071 Move X9, [X9+1272]
	072 Move X21, [X8]
	073 Move X0, [X9]
	074 Call 0x1C17F10
	075 Move X8, 0x76A000
	076 Move X8, [X8+1280]
	077 Move X1, X21
	078 Move X3, X31
	079 Move X20, X0
	080 Move X2, [X8]
	081 Call Func`2<Object, Object>..ctor, X0, X1, X2
	082 Move X8, [X23]
	083 Move X8, [X8+184]
	084 Move [X8+8], X20
	085 Move X8, 0x76A000
	086 Move X8, [X8+1264]
	087 Move X0, X19
	088 Move X1, X20
	089 Move X2, [X8]
	090 Call Enumerable.SelectMany, X0, X1
	091 Move X8, [X22]
	092 Move X19, X0
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X8, [X22]
	099 Move X9, [X8+184]
	100 Move [X9+64], X19
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {107}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X8, [X22]
	107 Move X8, [X8+184]
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X0, [X8+64]
	113 Move X30, [X31+48]
	114 Move X23, [X31+56]
	115 Return X0
	116 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.Type> GetAllTypesDerivedFrom()

Disassembly:
	0x021A8C6C ADRP X9, 0x1F4B000
	0x021A8C70 LDR X9, [X9 + 0x6C0]
	0x021A8C74 LDR X22, [X8]
	0x021A8C78 LDR X0, [X9]
	0x021A8C7C LDR W9, [X0 + 0xE0]
	0x021A8C80 CBNZ W9, 0x21A8C88
	0x021A8C84 BL 0x1C16DFC
	0x021A8C88 MOV X0, X22
	0x021A8C8C MOV X1, X31
	0x021A8C90 BL 0x338C698
	0x021A8C94 MOV X1, X0
	0x021A8C98 AND W2, W20, 0x1
	0x021A8C9C MOV X0, X21
	0x021A8CA0 MOV X3, X31
	0x021A8CA4 BL 0x32D45CC
	0x021A8CA8 LDR X8, [X19 + 0x38]
	0x021A8CAC MOV X20, X0
	0x021A8CB0 LDR X19, [X8 + 0x8]
	0x021A8CB4 LDRB W8, [X19 + 0x135]
	0x021A8CB8 TBNZ X8, 0x0, 0x21A8CC8
	0x021A8CBC MOV X0, X19
	0x021A8CC0 BL 0x1C5C684
	0x021A8CC4 MOV X19, X0
	0x021A8CC8 CBZ X20, 0x21A8CE8
	0x021A8CCC MOV X0, X20
	0x021A8CD0 MOV X1, X19
	0x021A8CD4 BL 0x1C16E00
	0x021A8CD8 CBNZ X0, 0x21A8CEC
	0x021A8CDC MOV X0, X20
	0x021A8CE0 MOV X1, X19
	0x021A8CE4 BL 0x1C171E0
	0x021A8CE8 MOV X0, X31
	0x021A8CEC LDP X20, X19, [X31 + 0x20]
	0x021A8CF0 LDP X22, X21, [X31 + 0x10]
	0x021A8CF4 LDR X30, [X31], #0x30
	0x021A8CF8 RET
	0x021A8CFC STR X30, [X31 - 0x40]!
	0x021A8D00 STP X24, X23, [X31 + 0x10]
	0x021A8D04 STP X22, X21, [X31 + 0x20]
	0x021A8D08 STP X20, X19, [X31 + 0x30]
	0x021A8D0C LDR X8, [X1 + 0x38]
	0x021A8D10 MOV X19, X1
	0x021A8D14 MOV X20, X0
	0x021A8D18 CBNZ X8, 0x21A8D3C
	0x021A8D1C ADRP X0, 0x1F4B000
	0x021A8D20 LDR X0, [X0 + 0x830]
	0x021A8D24 BL 0x1C16CF4
	0x021A8D28 LDR X8, [X19 + 0x38]
	0x021A8D2C CBNZ X8, 0x21A8D3C
	0x021A8D30 MOV X0, X19
	0x021A8D34 BL 0x1C5C6E0
	0x021A8D38 LDR X8, [X19 + 0x38]
	0x021A8D3C LDR X1, [X8]
	0x021A8D40 LDR X21, [X20 + 0x58]
	0x021A8D44 LDRB W8, [X1 + 0x135]
	0x021A8D48 TBNZ X8, 0x0, 0x21A8D58
	0x021A8D4C MOV X0, X1
	0x021A8D50 BL 0x1C5C684
	0x021A8D54 MOV X1, X0
	0x021A8D58 MOV X0, X21
	0x021A8D5C BL 0x1C16E00
	0x021A8D60 LDR X8, [X19 + 0x38]
	0x021A8D64 MOV X24, X0
	0x021A8D68 LDR X23, [X8]
	0x021A8D6C LDRB W8, [X23 + 0x135]
	0x021A8D70 TBNZ X8, 0x0, 0x21A8D80
	0x021A8D74 MOV X0, X23
	0x021A8D78 BL 0x1C5C684
	0x021A8D7C MOV X23, X0
	0x021A8D80 CBZ X24, 0x21A8DDC
	0x021A8D84 MOV X0, X24
	0x021A8D88 MOV X1, X23
	0x021A8D8C BL 0x1C16E00
	0x021A8D90 MOV X22, X0
	0x021A8D94 CBZ X0, 0x21A8EA8
	0x021A8D98 CBZ X21, 0x21A8DE4
	0x021A8D9C LDR X0, [X20 + 0x58]
	0x021A8DA0 CBZ X0, 0x21A8EA4
	0x021A8DA4 MOV X1, X31
	0x021A8DA8 BL 0x33BE520
	0x021A8DAC CBZ X0, 0x21A8EA4
	0x021A8DB0 LDR X8, [X0]
	0x021A8DB4 LDP X9, X1, [X8 + 0x168]
	0x021A8DB8 BLR X9
	0x021A8DBC MOV X20, X0
	0x021A8DC0 CBZ X22, 0x21A8DF4
	0x021A8DC4 MOV X0, X22
	0x021A8DC8 LDP X20, X19, [X31 + 0x30]
	0x021A8DCC LDP X22, X21, [X31 + 0x20]
	0x021A8DD0 LDP X24, X23, [X31 + 0x10]
	0x021A8DD4 LDR X30, [X31], #0x40
	0x021A8DD8 RET
	0x021A8DDC MOV X22, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+56]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {24}
	010 Move X0, 0x1F74000
	011 Move X0, [X0+2296]
	012 Call 0x1C17CF4
	013 Move X0, 0x1F74000
	014 Move X0, [X0+2304]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F56000
	017 Move X0, [X0+2480]
	018 Call 0x1C17CF4
	019 Move X8, [X19+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X19
	023 Call 0x1C5D6E0
	024 Move X8, 0x1F74000
	025 Move X8, [X8+2296]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call CoreUtils.GetAllAssemblyTypes
	033 Move X8, [X19+56]
	034 Move X20, X0
	035 Move X8, [X8+8]
	036 Move W9, [X8+309]
	037 Move TEMP, X9
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X8
	042 Call 0x1C5D684
	043 Move X8, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X8, [X19+56]
	050 Move X0, [X8+8]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+184]
	058 Move X21, [X8+8]
	059 Compare X21, 0
	060 JumpIfNotEqual {111}
	061 Move X8, [X19+56]
	062 Move X0, [X8+8]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X8, [X19+56]
	074 Move X0, [X8+8]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X9, 0x1F56000
	082 Move X8, [X0+184]
	083 Move X9, [X9+2480]
	084 Move X22, [X8]
	085 Move X0, [X9]
	086 Call 0x1C17F10
	087 Move X8, [X19+56]
	088 Move X1, X22
	089 Move X3, X31
	090 Move X21, X0
	091 Move X2, [X8+16]
	092 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	093 Move X8, [X19+56]
	094 Move X0, [X8+8]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X8, [X0+184]
	102 Move [X8+8], X21
	103 Move X8, [X19+56]
	104 Move X0, [X8+8]
	105 Move W8, [X0+309]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {111}
	110 Call 0x1C5D684
	111 Move X8, 0x1F74000
	112 Move X8, [X8+2304]
	113 Move X0, X20
	114 Move X1, X21
	115 Move X20, [X31+32]
	116 Move X19, [X31+40]
	117 Move X2, [X8]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Call Enumerable.Where, X0, X1
	122 Return X0

Method: System.Void SafeRelease(UnityEngine.GraphicsBuffer buffer)

Disassembly:
	0x039EA804 MOV V8.16B, V5.16B
	0x039EA808 MOV V9.16B, V4.16B
	0x039EA80C MOV V10.16B, V3.16B
	0x039EA810 MOV V11.16B, V2.16B

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call GraphicsBuffer.Release, X0
	005 Return 
	006 Return 

Method: System.Void SafeRelease(UnityEngine.ComputeBuffer buffer)

Disassembly:
	0x039EA814 MOV X19, X0
	0x039EA818 BL 0x3EB1B50
	0x039EA81C ADRP X8, 0xFFFFFFFFFD100000
	0x039EA820 FMIN S2, S9, S13

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call ComputeBuffer.Release, X0
	005 Return 
	006 Return 

Method: UnityEngine.Mesh CreateCubeMesh(UnityEngine.Vector3 min, UnityEngine.Vector3 max)

Disassembly:
	0x039EA824 FCMP S9, 0x0
	0x039EA828 LDR V3, [X8 + 0xC8]
	0x039EA82C ADRP X8, 0xFFFFFFFFFD100000
	0x039EA830 FMIN S1, S12, S13
	0x039EA834 FMAX S9, S10, S14
	0x039EA838 FMOV S4, 0.5
	0x039EA83C FCSEL S14, S2, S14, PL
	0x039EA840 LDR V2, [X8 + 0x17C]
	0x039EA844 FMUL S15, S0, S4
	0x039EA848 FSUB S0, S13, S1
	0x039EA84C FCMP S12, 0x0
	0x039EA850 FCSEL S0, S0, S13, PL
	0x039EA854 FMUL S12, S0, S15
	0x039EA858 FMIN S0, S11, S3
	0x039EA85C FCMP S11, S2
	0x039EA860 FSUB S0, S13, S0
	0x039EA864 FSUB S10, S13, S12
	0x039EA868 FCSEL S0, S0, S3, PL
	0x039EA86C FMUL S0, S0, S10
	0x039EA870 FADD S11, S15, S0
	0x039EA874 FADD S13, S12, S0
	0x039EA878 MOV V0.16B, V9.16B
	0x039EA87C FMAX S8, S8, S2
	0x039EA880 BL 0x3EB1B90
	0x039EA884 FMOV S1, -1
	0x039EA888 FADD S2, S15, S10
	0x039EA88C FADD S0, S0, S1
	0x039EA890 FADD S0, S0, S2
	0x039EA894 FMOV S3, 0.5
	0x039EA898 FADD S2, S0, S0
	0x039EA89C FMUL S3, S14, S3
	0x039EA8A0 FMUL S2, S14, S2
	0x039EA8A4 FMUL S1, S9, S3
	0x039EA8A8 FMUL S2, S9, S2
	0x039EA8AC ADD X1, X31, 0x0
	0x039EA8B0 MOV X0, X19
	0x039EA8B4 STP S15, S12, [X31]
	0x039EA8B8 STP S11, S13, [X31 + 0x8]
	0x039EA8BC STP S0, S2, [X31 + 0x10]
	0x039EA8C0 STP S1, S8, [X31 + 0x18]
	0x039EA8C4 BL 0x39EA8E4
	0x039EA8C8 LDP X30, X19, [X31 + 0x60]
	0x039EA8CC LDP D9, D8, [X31 + 0x50]
	0x039EA8D0 LDP D11, D10, [X31 + 0x40]
	0x039EA8D4 LDP D13, D12, [X31 + 0x30]
	0x039EA8D8 LDP D15, D14, [X31 + 0x20]
	0x039EA8DC ADD X31, X31, 0x70
	0x039EA8E0 RET
	0x039EA8E4 SUB X31, X31, 0x80
	0x039EA8E8 STP D15, D14, [X31 + 0x10]
	0x039EA8EC STP D13, D12, [X31 + 0x20]
	0x039EA8F0 STP D11, D10, [X31 + 0x30]
	0x039EA8F4 STP D9, D8, [X31 + 0x40]
	0x039EA8F8 STR X30, [X31 + 0x50]
	0x039EA8FC STP X22, X21, [X31 + 0x60]
	0x039EA900 STP X20, X19, [X31 + 0x70]
	0x039EA904 LDP S6, S1, [X1 + 0xC]
	0x039EA908 LDP S0, S13, [X1]
	0x039EA90C LDR V2, [X1 + 0x8]
	0x039EA910 LDP S5, S10, [X1 + 0x18]
	0x039EA914 STR S1, [X0 + 0x10]
	0x039EA918 LDR V1, [X1 + 0x10]
	0x039EA91C FMOV S3, 1
	0x039EA920 LDR X21, [X0 + 0x20]
	0x039EA924 FDIV S1, S3, S1
	0x039EA928 STR S1, [X0 + 0x14]
	0x039EA92C LDR V4, [X1 + 0x10]
	0x039EA930 FSUB S1, S6, S13
	0x039EA934 FDIV S8, S0, S4
	0x039EA938 FDIV S9, S2, S4
	0x039EA93C FSUB S0, S9, S8
	0x039EA940 FDIV S1, S1, S0
	0x039EA944 FCMP S0, 0x0
	0x039EA948 FCSEL S11, S3, S1, EQ
	0x039EA94C CBZ X21, 0x39EAB90
	0x039EA950 LDR W22, [X21 + 0x18]
	0x039EA954 CMP W22, 0x1
	0x039EA958 B.LS 0x39EAB94
	0x039EA95C LDR X20, [X21 + 0x28]
	0x039EA960 STP S6, S5, [X31 + 0x58]
	0x039EA964 STR S4, [X31 + 0x8]
	0x039EA968 CBZ X20, 0x39EAB90
	0x039EA96C LDR V0, [X1 + 0x14]
	0x039EA970 ADRP X8, 0xFFFFFFFFFD104000
	0x039EA974 LDR V12, [X1 + 0x1C]
	0x039EA978 MOVZ W9, 0x3F800000
	0x039EA97C STR S0, [X31 + 0x4]
	0x039EA980 FMUL S0, S8, S11
	0x039EA984 STR S0, [X31 + 0xC]
	0x039EA988 FSUB S15, S13, S0
	0x039EA98C LDR V0, [X8]
	0x039EA990 FNEG S1, S15
	0x039EA994 FDIV S1, S1, S11
	0x039EA998 MOV X19, X0
	0x039EA99C STUR D0, [X20 + 0x14]
	0x039EA9A0 MOV V0.16B, V11.16B
	0x039EA9A4 STR S1, [X20 + 0x10]
	0x039EA9A8 STR W9, [X20 + 0x1C]
	0x039EA9AC BL 0x3EB1E80
	0x039EA9B0 FMOV S2, -1
	0x039EA9B4 FMUL S0, S12, S0
	0x039EA9B8 FMUL S1, S9, S11
	0x039EA9BC FADD S14, S12, S2
	0x039EA9C0 STP S0, S12, [X20 + 0x20]
	0x039EA9C4 FADD S0, S1, S15
	0x039EA9C8 MOV V1.16B, V14.16B
	0x039EA9CC BL 0x3EB1B50
	0x039EA9D0 STR S0, [X31]
	0x039EA9D4 MOV V0.16B, V13.16B
	0x039EA9D8 MOV V1.16B, V10.16B
	0x039EA9DC BL 0x3EB1B50
	0x039EA9E0 MOV V13.16B, V0.16B
	0x039EA9E4 LDR V0, [X31 + 0x58]
	0x039EA9E8 MOV V1.16B, V10.16B
	0x039EA9EC BL 0x3EB1B50
	0x039EA9F0 LDR V1, [X31 + 0x5C]
	0x039EA9F4 STR S0, [X31 + 0x58]
	0x039EA9F8 FMOV S0, 1
	0x039EA9FC FADD S0, S1, S0
	0x039EAA00 MOV V1.16B, V10.16B
	0x039EAA04 BL 0x3EB1B50
	0x039EAA08 STP S8, S9, [X19 + 0x18]
	0x039EAA0C LDR X19, [X21 + 0x20]
	0x039EAA10 STR S0, [X31 + 0x5C]
	0x039EAA14 CBZ X19, 0x39EAB90
	0x039EAA18 ADRP X8, 0xFFFFFFFFFD100000
	0x039EAA1C LDR V0, [X31 + 0xC]
	0x039EAA20 LDR V10, [X8 + 0x17C]
	0x039EAA24 MOV V1.16B, V14.16B
	0x039EAA28 FMUL S12, S12, S11
	0x039EAA2C FADD S0, S0, S15
	0x039EAA30 FMAX S11, S13, S10
	0x039EAA34 BL 0x3EB1B50
	0x039EAA38 ADRP X8, 0xFFFFFFFFFD100000
	0x039EAA3C LDR V1, [X8 + 0xBC]
	0x039EAA40 FMUL S0, S12, S0
	0x039EAA44 FMUL S0, S8, S0
	0x039EAA48 FDIV S13, S0, S11
	0x039EAA4C MOV V0.16B, V11.16B
	0x039EAA50 STR V1, [X19 + 0x1]
	0x039EAA54 BL 0x3EB1E80
	0x039EAA58 MOV V11.16B, V0.16B
	0x039EAA5C MOV V0.16B, V8.16B
	0x039EAA60 BL 0x3EB1E80
	0x039EAA64 FMUL S0, S0, S13
	0x039EAA68 CMP W22, 0x2
	0x039EAA6C FSUB S0, S11, S0
	0x039EAA70 STP S0, S13, [X19 + 0x20]
	0x039EAA74 B.LS 0x39EAB94
	0x039EAA78 LDP S1, S0, [X31 + 0x4]
	0x039EAA7C FMOV S2, -1
	0x039EAA80 FMOV S13, 1
	0x039EAA84 LDR X21, [X21 + 0x30]
	0x039EAA88 FDIV S0, S1, S0
	0x039EAA8C LDP S1, S3, [X31 + 0x58]
	0x039EAA90 FADD S14, S0, S13
	0x039EAA94 FSUB S8, S14, S9
	0x039EAA98 FADD S2, S3, S2
	0x039EAA9C FMAX S1, S1, S10
	0x039EAAA0 FADD S9, S2, S13
	0x039EAAA4 FSUB S10, S9, S1
	0x039EAAA8 MOV V0.16B, V10.16B
	0x039EAAAC BL 0x3EB1E80
	0x039EAAB0 MOV V11.16B, V0.16B
	0x039EAAB4 MOV V0.16B, V8.16B
	0x039EAAB8 BL 0x3EB1E80
	0x039EAABC CBZ X21, 0x39EAB90
	0x039EAAC0 LDR V1, [X31]
	0x039EAAC4 FMOV V3.2S, 0x0
	0x039EAAC8 STP S14, S9, [X21 + 0x10]
	0x039EAACC STR D3, [X21 + 0x18]
	0x039EAAD0 FMUL S2, S12, S1
	0x039EAAD4 FMUL S2, S8, S2
	0x039EAAD8 FDIV S8, S2, S10
	0x039EAADC FSUB S1, S13, S14
	0x039EAAE0 FMUL S0, S0, S8
	0x039EAAE4 FCMP S1, 0x0
	0x039EAAE8 FSUB S10, S11, S0
	0x039EAAEC STP S10, S8, [X21 + 0x20]
	0x039EAAF0 B.PL 0x39EAB10
	0x039EAAF4 FNEG S0, S1
	0x039EAAF8 BL 0x3EB1E80
	0x039EAAFC FMUL S0, S0, S8
	0x039EAB00 FADD S0, S0, S10
	0x039EAB04 BL 0x3EB1E70
	0x039EAB08 FNEG S0, S0
	0x039EAB0C B 0x39EAB18
	0x039EAB10 MOVZ W8, 0x80000000
	0x039EAB14 FMOV S0, W8
	0x039EAB18 LDR V1, [X19 + 0x14]
	0x039EAB1C LDR V2, [X19 + 0x1C]
	0x039EAB20 FADD S0, S9, S0
	0x039EAB24 FMOV S3, 1
	0x039EAB28 FDIV S0, S3, S0
	0x039EAB2C FMUL S1, S1, S0
	0x039EAB30 FMUL S2, S0, S2
	0x039EAB34 STR S1, [X19 + 0x14]
	0x039EAB38 STR S2, [X19 + 0x1C]
	0x039EAB3C LDR V1, [X20 + 0x14]
	0x039EAB40 LDR V2, [X20 + 0x1C]
	0x039EAB44 LDR X30, [X31 + 0x50]
	0x039EAB48 LDP D9, D8, [X31 + 0x40]
	0x039EAB4C FMUL S1, S0, S1
	0x039EAB50 FMUL S2, S0, S2
	0x039EAB54 STR S1, [X20 + 0x14]
	0x039EAB58 STR S2, [X20 + 0x1C]
	0x039EAB5C LDR V1, [X21 + 0x14]
	0x039EAB60 LDR V2, [X21 + 0x1C]
	0x039EAB64 LDP X20, X19, [X31 + 0x70]
	0x039EAB68 LDP D11, D10, [X31 + 0x30]
	0x039EAB6C FMUL S1, S0, S1
	0x039EAB70 FMUL S0, S0, S2
	0x039EAB74 STR S1, [X21 + 0x14]
	0x039EAB78 STR S0, [X21 + 0x1C]
	0x039EAB7C LDP X22, X21, [X31 + 0x60]
	0x039EAB80 LDP D13, D12, [X31 + 0x20]
	0x039EAB84 LDP D15, D14, [X31 + 0x10]
	0x039EAB88 ADD X31, X31, 0x80
	0x039EAB8C RET
	0x039EAB90 BL 0x1C16F20
	0x039EAB94 BL 0x1C16F28
	0x039EAB98 FSUB S3, S3, S2
	0x039EAB9C FSUB S1, S1, S0
	0x039EABA0 FDIV S3, S3, S1
	0x039EABA4 FCMP S1, 0x0
	0x039EABA8 FMOV S1, 1
	0x039EABAC FCSEL S1, S1, S3, EQ
	0x039EABB0 FMUL S0, S1, S0
	0x039EABB4 FSUB S0, S2, S0
	0x039EABB8 STR S1, [X1]
	0x039EABBC STR S0, [X2]
	0x039EABC0 RET
	0x039EABC4 STP D9, D8, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x9F8000
	012 Move X21, 0x711000
	013 Move X20, 0x70C000
	014 Move W8, [X19+3622]
	015 Move X21, [X21+1792]
	016 Move X20, [X20+2480]
	017 Move V8, V5
	018 Move V9, V4
	019 Move V11, V3
	020 Move V13, V2
	021 Move V12, V1
	022 Move V10, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x70B000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move X0, 0x711000
	031 Move X0, [X0+1792]
	032 Call 0x1C17CF4
	033 Move X0, 0x70C000
	034 Move X0, [X0+2480]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+3622], W8
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X19, X0
	042 Call Mesh..ctor, X0
	043 Move X0, [X20]
	044 Move W1, 8
	045 Call 0x1C17D6C
	046 Compare X0, 0
	047 JumpIfEqual {217}
	048 Move W8, [X0+24]
	049 Move X1, X0
	050 Compare W8, 0
	051 JumpIfEqual {216}
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X1+32], S10
	054 Move [X1+40], S12
	055 Move [X1+40], S13
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X1+44], S11
	058 Move [X1+52], S12
	059 Move [X1+52], S13
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X1+56], S11
	062 Move [X1+64], S9
	063 Move [X1+64], S13
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X1+68], S10
	066 Move [X1+76], S9
	067 Move [X1+76], S13
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X1+80], S10
	070 Move [X1+88], S12
	071 Move [X1+88], S8
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X1+92], S11
	074 Move [X1+100], S12
	075 Move [X1+100], S8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X1+104], S11
	078 Move [X1+112], S9
	079 Move [X1+112], S8
	080 Move [X1+116], S10
	081 Move [X1+124], S9
	082 Move [X1+124], S8
	083 Compare X19, 0
	084 JumpIfEqual {217}
	085 Move X20, 0x70B000
	086 Move X20, [X20+3672]
	087 Move X0, X19
	088 Move X2, X31
	089 Call Mesh.set_vertices, X0, X1
	090 Move X0, [X20]
	091 Move W1, 36
	092 Call 0x1C17D6C
	093 Compare X0, 0
	094 JumpIfEqual {217}
	095 Move W8, [X0+24]
	096 Move X1, X0
	097 Compare W8, 0
	098 JumpIfEqual {216}
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X1+32], W31
	101 Move W9, 2
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X1+36], W9
	104 Move W9, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X1+40], W9
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X1+44], W31
	109 Move W9, 3
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X1+48], W9
	112 Move W9, 2
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X1+52], W9
	115 Move W9, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X1+56], W9
	118 Move W9, 6
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X1+60], W9
	121 Move W9, 5
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X1+64], W9
	124 Move W9, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X1+68], W9
	127 Move W9, 2
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X1+72], W9
	130 Move W9, 6
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X1+76], W9
	133 Move W9, 5
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X1+80], W9
	136 Move W9, 7
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X1+84], W9
	139 Move W9, 4
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move [X1+88], W9
	142 Move W9, 5
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X1+92], W9
	145 Move W9, 6
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X1+96], W9
	148 Move W9, 7
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X1+100], W9
	151 Move W9, 4
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X1+104], W9
	154 Move W9, 3
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X1+108], W9
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X1+112], W31
	159 Move W9, 4
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X1+116], W9
	162 Move W9, 7
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move [X1+120], W9
	165 Move W9, 3
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move [X1+124], W9
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move [X1+128], W9
	170 Move W9, 6
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move [X1+132], W9
	173 Move W9, 2
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move [X1+136], W9
	176 Move W9, 3
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X1+140], W9
	179 Move W9, 7
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move [X1+144], W9
	182 Move W9, 6
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X1+148], W9
	185 Move W9, 4
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X1+152], W9
	188 Move W9, 1
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X1+156], W9
	191 Move W9, 5
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move [X1+160], W9
	194 Move W9, 4
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move [X1+164], W9
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move [X1+168], W31
	199 Move W8, 1
	200 Move X0, X19
	201 Move X2, X31
	202 Move [X1+172], W8
	203 Call Mesh.set_triangles, X0, X1
	204 Move X0, X19
	205 Move X20, [X31+64]
	206 Move X19, [X31+72]
	207 Move X30, [X31+48]
	208 Move X21, [X31+56]
	209 Move D9, [X31+32]
	210 Move D8, [X31+40]
	211 Move D11, [X31+16]
	212 Move D10, [X31+24]
	213 Move D13, [X31+80]
	214 Move D12, [X31+88]
	215 Return X0
	216 Call 0x1C17F28
	217 Call 0x1C17F20

Method: System.Boolean ArePostProcessesEnabled(UnityEngine.Camera camera)

Disassembly:
	0x039EABC8 STR X30, [X31 + 0x10]
	0x039EABCC MOV V8.16B, V2.16B

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean AreAnimatedMaterialsEnabled(UnityEngine.Camera camera)

Disassembly:
	0x039EABD0 MOV V9.16B, V0.16B
	0x039EABD4 FMUL S0, S0, S3

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean IsSceneLightingDisabled(UnityEngine.Camera camera)

Disassembly:
	0x039EABD8 FMOV S2, -1
	0x039EABDC FADD S0, S0, S1

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsLightOverlapDebugEnabled(UnityEngine.Camera camera)

Disassembly:
	0x039EABE0 FADD S1, S8, S2
	0x039EABE4 BL 0x3EB1B50

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsSceneViewFogEnabled(UnityEngine.Camera camera)

Disassembly:
	0x039EABE8 LDR X30, [X31 + 0x10]
	0x039EABEC FMUL S1, S9, S8

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean IsSceneFilteringEnabled()

Disassembly:
	0x039EABF0 FMUL S0, S1, S0
	0x039EABF4 LDP D9, D8, [X31], #0x20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean IsSceneViewPrefabStageContextHidden()

Disassembly:
	0x039EABF8 RET
	0x039EABFC STR D10, [X31 - 0x30]!

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void DrawRendererList(UnityEngine.Rendering.ScriptableRenderContext renderContext, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RendererList rendererList)

Disassembly:
	0x039EAC00 STP D9, D8, [X31 + 0x10]
	0x039EAC04 STP X30, X19, [X31 + 0x20]
	0x039EAC08 MOV V8.16B, V0.16B
	0x039EAC0C FMUL S0, S0, S2
	0x039EAC10 FDIV S10, S0, S1
	0x039EAC14 MOV V0.16B, V1.16B
	0x039EAC18 MOV X19, X1
	0x039EAC1C STR S10, [X2]
	0x039EAC20 BL 0x3EB1E80
	0x039EAC24 MOV V9.16B, V0.16B
	0x039EAC28 MOV V0.16B, V8.16B
	0x039EAC2C BL 0x3EB1E80
	0x039EAC30 FMUL S0, S0, S10
	0x039EAC34 FSUB S0, S9, S0
	0x039EAC38 STR S0, [X19]
	0x039EAC3C LDP X30, X19, [X31 + 0x20]
	0x039EAC40 LDP D9, D8, [X31 + 0x10]
	0x039EAC44 LDR V10, [X31], #0x30
	0x039EAC48 RET
	0x039EAC4C STR X30, [X31 - 0x10]!
	0x039EAC50 LDR X8, [X0 + 0x10]
	0x039EAC54 CBZ X8, 0x39EAC6C
	0x039EAC58 LDP S0, S1, [X8 + 0x14]
	0x039EAC5C LDR V2, [X8 + 0x1C]
	0x039EAC60 FMOV S3, W31
	0x039EAC64 LDR X30, [X31], #0x10
	0x039EAC68 RET
	0x039EAC6C BL 0x1C16F20
	0x039EAC70 STR X30, [X31 - 0x10]!
	0x039EAC74 LDR X8, [X0 + 0x10]
	0x039EAC78 CBZ X8, 0x39EACA4
	0x039EAC7C LDR X8, [X8 + 0x20]
	0x039EAC80 CBZ X8, 0x39EACA4
	0x039EAC84 LDR W9, [X8 + 0x18]
	0x039EAC88 CBZ W9, 0x39EACA8
	0x039EAC8C LDR X8, [X8 + 0x20]
	0x039EAC90 CBZ X8, 0x39EACA4
	0x039EAC94 LDP S0, S1, [X8 + 0x10]
	0x039EAC98 LDP S2, S3, [X8 + 0x18]
	0x039EAC9C LDR X30, [X31], #0x10
	0x039EACA0 RET
	0x039EACA4 BL 0x1C16F20
	0x039EACA8 BL 0x1C16F28
	0x039EACAC STR X30, [X31 - 0x10]!
	0x039EACB0 LDR X8, [X0 + 0x10]
	0x039EACB4 CBZ X8, 0x39EACE4
	0x039EACB8 LDR X8, [X8 + 0x20]
	0x039EACBC CBZ X8, 0x39EACE4
	0x039EACC0 LDR W9, [X8 + 0x18]
	0x039EACC4 CBZ W9, 0x39EACE8
	0x039EACC8 LDR X8, [X8 + 0x20]
	0x039EACCC CBZ X8, 0x39EACE4
	0x039EACD0 LDP S0, S1, [X8 + 0x20]
	0x039EACD4 FMOV S2, W31
	0x039EACD8 FMOV S3, W31
	0x039EACDC LDR X30, [X31], #0x10
	0x039EACE0 RET
	0x039EACE4 BL 0x1C16F20
	0x039EACE8 BL 0x1C16F28
	0x039EACEC STR X30, [X31 - 0x10]!
	0x039EACF0 LDR X8, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x9F8000
	008 Move X22, 0x735000
	009 Move W8, [X21+3623]
	010 Move X22, [X22+1824]
	011 Move X20, X2
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x735000
	018 Move X0, [X0+1824]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3623], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Call RendererList.get_isValid, X0
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {55}
	034 Move X8, [X20+16]
	035 Move V0, [X20]
	036 Move [X31+48], X8
	037 Move [X31+2], V0
	038 Compare X19, 0
	039 JumpIfEqual {73}
	040 Move V0, [X31+2]
	041 Move X8, [X31+48]
	042 Add X1, X31, 0
	043 Move X0, X19
	044 Move X2, X31
	045 Move [X31], V0
	046 Move [X31+16], X8
	047 Call CommandBuffer.DrawRendererList, X0, X1
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X30, [X31+64]
	053 Add X31, X31, 112
	054 Return 
	055 Move X0, 0x712000
	056 Move X0, [X0+1400]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X19, X0
	060 Move X0, 0x76A000
	061 Move X0, [X0+1296]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Move X2, X31
	066 Call ArgumentException..ctor, X0, X1
	067 Move X0, 0x76A000
	068 Move X0, [X0+1304]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC
	073 Call 0x1C17F20

Method: System.Int32 GetTextureHash(UnityEngine.Texture texture)

Disassembly:
	0x039DB35C BL 0x1C16F20
	0x039DB360 STP D11, D10, [X31 - 0x60]!
	0x039DB364 STP D9, D8, [X31 + 0x10]
	0x039DB368 STR X30, [X31 + 0x20]
	0x039DB36C STP X24, X23, [X31 + 0x30]
	0x039DB370 STP X22, X21, [X31 + 0x40]
	0x039DB374 STP X20, X19, [X31 + 0x50]
	0x039DB378 MOV X21, X1
	0x039DB37C MOV X1, X4
	0x039DB380 MOV W22, W6
	0x039DB384 MOV W24, W5
	0x039DB388 MOV V8.16B, V3.16B
	0x039DB38C MOV V9.16B, V2.16B
	0x039DB390 MOV V10.16B, V1.16B
	0x039DB394 MOV V11.16B, V0.16B
	0x039DB398 MOV X23, X4
	0x039DB39C MOV X20, X3
	0x039DB3A0 MOV X19, X0
	0x039DB3A4 BL 0x39DAB90
	0x039DB3A8 TBZ X0, 0x0, 0x39DB414
	0x039DB3AC TBZ X24, 0x0, 0x39DB4B8
	0x039DB3B0 LDR X8, [X19]
	0x039DB3B4 MOV X0, X19
	0x039DB3B8 MOV X1, X20
	0x039DB3BC MOV W2, W31
	0x039DB3C0 LDP X9, X3, [X8 + 0x1C8]
	0x039DB3C4 BLR X9
	0x039DB3C8 TBZ X0, 0x0, 0x39DB4B8
	0x039DB3CC MOV X1, X20
	0x039DB3D0 BL 0x39D94C0
	0x039DB3D4 LDP S0, S1, [X23]
	0x039DB3D8 LDP S2, S3, [X23 + 0x8]
	0x039DB3DC LDR X8, [X19]
	0x039DB3E0 TBZ X0, 0x0, 0x39DB47C
	0x039DB3E4 LDP X9, X5, [X8 + 0x178]
	0x039DB3E8 AND W3, W22, 0x1
	0x039DB3EC MOVN W4, 0x0
	0x039DB3F0 MOV X0, X19
	0x039DB3F4 MOV X1, X21
	0x039DB3F8 MOV X2, X20
	0x039DB3FC MOV V4.16B, V11.16B
	0x039DB400 MOV V5.16B, V10.16B
	0x039DB404 MOV V6.16B, V9.16B
	0x039DB408 MOV V7.16B, V8.16B
	0x039DB40C BLR X9
	0x039DB410 B 0x39DB498
	0x039DB414 CBZ X20, 0x39DB4D8
	0x039DB418 LDR X8, [X20]
	0x039DB41C MOV X0, X20
	0x039DB420 LDP X9, X1, [X8 + 0x188]
	0x039DB424 BLR X9
	0x039DB428 LDR X8, [X20]
	0x039DB42C MOV W22, W0
	0x039DB430 MOV X0, X20
	0x039DB434 LDP X9, X1, [X8 + 0x1A8]
	0x039DB438 BLR X9
	0x039DB43C LDR X8, [X19]
	0x039DB440 MOV W5, W0
	0x039DB444 MOV X0, X19
	0x039DB448 MOV X1, X21
	0x039DB44C LDP X9, X7, [X8 + 0x1A8]
	0x039DB450 MOV X2, X23
	0x039DB454 MOV X3, X20
	0x039DB458 MOV W4, W22
	0x039DB45C LDP X20, X19, [X31 + 0x50]
	0x039DB460 LDP X22, X21, [X31 + 0x40]
	0x039DB464 LDP X24, X23, [X31 + 0x30]
	0x039DB468 LDR X30, [X31 + 0x20]
	0x039DB46C LDP D9, D8, [X31 + 0x10]
	0x039DB470 MOVN W6, 0x0
	0x039DB474 LDP D11, D10, [X31], #0x60
	0x039DB478 BR X9
	0x039DB47C LDP X9, X5, [X8 + 0x198]
	0x039DB480 AND W3, W22, 0x1
	0x039DB484 MOVN W4, 0x0
	0x039DB488 MOV X0, X19
	0x039DB48C MOV X1, X21
	0x039DB490 MOV X2, X20
	0x039DB494 BLR X9
	0x039DB498 CBZ X20, 0x39DB4D8
	0x039DB49C MOV X0, X20
	0x039DB4A0 MOV X1, X31
	0x039DB4A4 BL 0x3C385F8
	0x039DB4A8 MOV W1, W0
	0x039DB4AC AND W2, W22, 0x1
	0x039DB4B0 MOV X0, X19
	0x039DB4B4 BL 0x39DA0DC
	0x039DB4B8 LDP X20, X19, [X31 + 0x50]
	0x039DB4BC LDP X22, X21, [X31 + 0x40]
	0x039DB4C0 LDP X24, X23, [X31 + 0x30]
	0x039DB4C4 LDR X30, [X31 + 0x20]
	0x039DB4C8 LDP D9, D8, [X31 + 0x10]
	0x039DB4CC MOVZ W0, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move [X31+24], W31
	007 Move [X31+16], X31
	008 Move [X31+12], W31
	009 Compare X0, 0
	010 JumpIfEqual {102}
	011 Move X8, [X0]
	012 Move X19, X0
	013 Move X9, [X8+344]
	014 Move X1, [X8+352]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move W20, W0
	017 Move X0, X19
	018 Move X1, X31
	019 Call Object.GetInstanceID, X0
	020 Move [X31+28], W0
	021 Add X0, X31, 28
	022 Move X1, X31
	023 Call Int32.GetHashCode, X0
	024 Move X8, [X19]
	025 Move W21, 23
	026 NotImplemented "Instruction MADD not yet implemented."
	027 Move X0, X19
	028 Move X9, [X8+376]
	029 Move X1, [X8+384]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move [X31+24], W0
	032 Add X0, X31, 24
	033 Move X1, X31
	034 Call Int32.GetHashCode, X0
	035 NotImplemented "Instruction MADD not yet implemented."
	036 Move X0, X19
	037 Move X1, X31
	038 Call Texture.get_wrapMode, X0
	039 Move [X31+20], W0
	040 Add X0, X31, 20
	041 Move X1, X31
	042 Call Int32.GetHashCode, X0
	043 Move X8, [X19]
	044 NotImplemented "Instruction MADD not yet implemented."
	045 Move X0, X19
	046 Move X9, [X8+392]
	047 Move X1, [X8+400]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move [X31+28], W0
	050 Add X0, X31, 28
	051 Move X1, X31
	052 Call Int32.GetHashCode, X0
	053 Move X8, [X19]
	054 NotImplemented "Instruction MADD not yet implemented."
	055 Move X0, X19
	056 Move X9, [X8+424]
	057 Move X1, [X8+432]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move [X31+28], W0
	060 Add X0, X31, 28
	061 Move X1, X31
	062 Call Int32.GetHashCode, X0
	063 NotImplemented "Instruction MADD not yet implemented."
	064 Move X0, X19
	065 Move X1, X31
	066 Call Texture.get_filterMode, X0
	067 Move [X31+16], W0
	068 Add X0, X31, 16
	069 Move X1, X31
	070 Call Int32.GetHashCode, X0
	071 NotImplemented "Instruction MADD not yet implemented."
	072 Move X0, X19
	073 Move X1, X31
	074 Call Texture.get_anisoLevel, X0
	075 Move [X31+28], W0
	076 Add X0, X31, 28
	077 Move X1, X31
	078 Call Int32.GetHashCode, X0
	079 NotImplemented "Instruction MADD not yet implemented."
	080 Move X0, X19
	081 Move X1, X31
	082 Call Texture.get_mipmapCount, X0
	083 Move [X31+28], W0
	084 Add X0, X31, 28
	085 Move X1, X31
	086 Call Int32.GetHashCode, X0
	087 NotImplemented "Instruction MADD not yet implemented."
	088 Move X0, X19
	089 Move X1, X31
	090 Call Texture.get_updateCount, X0
	091 Move [X31+12], W0
	092 Add X0, X31, 12
	093 Move X1, X31
	094 Call UInt32.GetHashCode, X0
	095 NotImplemented "Instruction MADD not yet implemented."
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X30, [X31+32]
	099 Move X21, [X31+40]
	100 Add X31, X31, 64
	101 Return X0
	102 Call 0x1C17F20

Method: System.Int32 PreviousPowerOfTwo(System.Int32 size)

Disassembly:
	0x039EACF4 CBZ X8, 0x39EAD24
	0x039EACF8 LDR X8, [X8 + 0x20]
	0x039EACFC CBZ X8, 0x39EAD24
	0x039EAD00 LDR W9, [X8 + 0x18]
	0x039EAD04 CMP W9, 0x1
	0x039EAD08 B.LS 0x39EAD28
	0x039EAD0C LDR X8, [X8 + 0x28]
	0x039EAD10 CBZ X8, 0x39EAD24
	0x039EAD14 LDP S0, S1, [X8 + 0x10]
	0x039EAD18 LDP S2, S3, [X8 + 0x18]
	0x039EAD1C LDR X30, [X31], #0x10

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W0
	003 Move W8, W8
	004 Move W8, W8
	005 Move W8, W8
	006 Move W8, W8
	007 Subtract W0, W8, W8
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: T GetLastEnumValue()

Disassembly:
	0x021A8F54 RET
	0x021A8F58 STR X30, [X31 - 0x10]!
	0x021A8F5C LDR X8, [X1]
	0x021A8F60 CBZ X8, 0x21A8F94
	0x021A8F64 LDR W10, [X8 + 0x18]
	0x021A8F68 SUB W9, W3, 0x1
	0x021A8F6C CMP W9, W10
	0x021A8F70 B.CS 0x21A8F90
	0x021A8F74 CMP W10, W2
	0x021A8F78 B.LS 0x21A8F90
	0x021A8F7C ADD X8, X8, 0x20
	0x021A8F80 LDR W9, [X8, W9, SXTW]
	0x021A8F84 STR W9, [X8, W2, SXTW]
	0x021A8F88 LDR X30, [X31], #0x10
	0x021A8F8C RET
	0x021A8F90 BL 0x1C16F28
	0x021A8F94 BL 0x1C16F20
	0x021A8F98 LDR X8, [X1]
	0x021A8F9C SUB W9, W3, 0x1
	0x021A8FA0 LDR W9, [X8, W9, SXTW]
	0x021A8FA4 STR W9, [X8, W2, SXTW]
	0x021A8FA8 RET
	0x021A8FAC STR X30, [X31 - 0x10]!
	0x021A8FB0 LDR X8, [X1]
	0x021A8FB4 CBZ X8, 0x21A8FE8
	0x021A8FB8 LDR W10, [X8 + 0x18]
	0x021A8FBC SUB W9, W3, 0x1
	0x021A8FC0 CMP W9, W10
	0x021A8FC4 B.CS 0x21A8FE4
	0x021A8FC8 CMP W10, W2
	0x021A8FCC B.LS 0x21A8FE4
	0x021A8FD0 ADD X8, X8, 0x20
	0x021A8FD4 LDR X9, [X8, W9, SXTW]
	0x021A8FD8 STR X9, [X8, W2, SXTW]
	0x021A8FDC LDR X30, [X31], #0x10
	0x021A8FE0 RET
	0x021A8FE4 BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {17}
	008 Move X0, 0x1F4C000
	009 Move X0, [X0+1728]
	010 Call 0x1C17CF4
	011 Move X8, [X19+56]
	012 Compare X8, 0
	013 JumpIfNotEqual {17}
	014 Move X0, X19
	015 Call 0x1C5D6E0
	016 Move X8, [X19+56]
	017 Move X9, 0x1F4C000
	018 Move X9, [X9+1728]
	019 Move X20, [X8]
	020 Move X0, [X9]
	021 Move W9, [X0+224]
	022 Compare W9, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call Type.GetTypeFromHandle, X0
	028 Compare X0, 0
	029 JumpIfEqual {44}
	030 Move X8, [X0]
	031 Move X9, [X8+2200]
	032 Move X1, [X8+2208]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X19+56]
	035 Move X1, [X8+8]
	036 Call 0x21B5430, X0
	037 Move X8, [X19+56]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X1, [X8+24]
	041 Move X30, [X31+32]
	042 Call Enumerable.Last, X0
	043 Return X0
	044 Call 0x1C17F20

Method: System.String GetCorePath()

Disassembly:
	0x039EAD20 RET
	0x039EAD24 BL 0x1C16F20
	0x039EAD28 BL 0x1C16F28
	0x039EAD2C STR X30, [X31 - 0x10]!
	0x039EAD30 LDR X8, [X0 + 0x10]
	0x039EAD34 CBZ X8, 0x39EAD68
	0x039EAD38 LDR X8, [X8 + 0x20]
	0x039EAD3C CBZ X8, 0x39EAD68
	0x039EAD40 LDR W9, [X8 + 0x18]
	0x039EAD44 CMP W9, 0x1
	0x039EAD48 B.LS 0x39EAD6C
	0x039EAD4C LDR X8, [X8 + 0x28]
	0x039EAD50 CBZ X8, 0x39EAD68
	0x039EAD54 LDP S0, S1, [X8 + 0x20]
	0x039EAD58 FMOV S2, W31
	0x039EAD5C FMOV S3, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9F8000
	005 Move X20, 0x76A000
	006 Move W8, [X19+3624]
	007 Move X20, [X20+1312]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x76A000
	013 Move X0, [X0+1312]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3624], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Void .cctor()

Disassembly:
	0x039EAD60 LDR X30, [X31], #0x10
	0x039EAD64 RET
	0x039EAD68 BL 0x1C16F20
	0x039EAD6C BL 0x1C16F28
	0x039EAD70 STR X30, [X31 - 0x10]!
	0x039EAD74 LDR X8, [X0 + 0x10]
	0x039EAD78 CBZ X8, 0x39EADA8
	0x039EAD7C LDR X8, [X8 + 0x20]
	0x039EAD80 CBZ X8, 0x39EADA8
	0x039EAD84 LDR W9, [X8 + 0x18]
	0x039EAD88 CMP W9, 0x2
	0x039EAD8C B.LS 0x39EADAC
	0x039EAD90 LDR X8, [X8 + 0x30]
	0x039EAD94 CBZ X8, 0x39EADA8
	0x039EAD98 LDP S0, S1, [X8 + 0x10]
	0x039EAD9C LDP S2, S3, [X8 + 0x18]
	0x039EADA0 LDR X30, [X31], #0x10
	0x039EADA4 RET
	0x039EADA8 BL 0x1C16F20
	0x039EADAC BL 0x1C16F28
	0x039EADB0 STR X30, [X31 - 0x10]!
	0x039EADB4 LDR X8, [X0 + 0x10]
	0x039EADB8 CBZ X8, 0x39EADEC
	0x039EADBC LDR X8, [X8 + 0x20]
	0x039EADC0 CBZ X8, 0x39EADEC
	0x039EADC4 LDR W9, [X8 + 0x18]
	0x039EADC8 CMP W9, 0x2
	0x039EADCC B.LS 0x39EADF0
	0x039EADD0 LDR X8, [X8 + 0x30]
	0x039EADD4 CBZ X8, 0x39EADEC
	0x039EADD8 LDP S0, S1, [X8 + 0x20]
	0x039EADDC FMOV S2, W31
	0x039EADE0 FMOV S3, W31
	0x039EADE4 LDR X30, [X31], #0x10
	0x039EADE8 RET
	0x039EADEC BL 0x1C16F20
	0x039EADF0 BL 0x1C16F28
	0x039EADF4 CMP W0, 0x1
	0x039EADF8 B.LT 0x39EAE30
	0x039EADFC SCVTF S1, W1
	0x039EAE00 FMOV S0, W31
	0x039EAE04 FMOV S2, 1
	0x039EAE08 SDIV W8, W0, W1
	0x039EAE0C MSUB W9, W8, W1, W0
	0x039EAE10 FDIV S2, S2, S1
	0x039EAE14 SCVTF S3, W9
	0x039EAE18 FMUL S3, S2, S3
	0x039EAE1C CMP W8, 0x0
	0x039EAE20 FADD S0, S0, S3
	0x039EAE24 MOV W0, W8
	0x039EAE28 B.GT 0x39EAE08
	0x039EAE2C RET
	0x039EAE30 FMOV S0, W31
	0x039EAE34 RET
	0x039EAE38 SUB X31, X31, 0x50
	0x039EAE3C STP X30, X23, [X31 + 0x20]
	0x039EAE40 STP X22, X21, [X31 + 0x30]
	0x039EAE44 STP X20, X19, [X31 + 0x40]
	0x039EAE48 ADRP X21, 0x9F7000
	0x039EAE4C LDRB W8, [X21 + 0xE31]
	0x039EAE50 MOV X19, X1
	0x039EAE54 MOV W20, W0
	0x039EAE58 TBNZ X8, 0x0, 0x39EAEA0
	0x039EAE5C ADRP X0, 0x769000
	0x039EAE60 LDR X0, [X0 + 0x570]
	0x039EAE64 BL 0x1C16CF4
	0x039EAE68 ADRP X0, 0x709000
	0x039EAE6C LDR X0, [X0 + 0xA28]
	0x039EAE70 BL 0x1C16CF4
	0x039EAE74 ADRP X0, 0x709000
	0x039EAE78 LDR X0, [X0 + 0x9D0]
	0x039EAE7C BL 0x1C16CF4
	0x039EAE80 ADRP X0, 0x769000
	0x039EAE84 LDR X0, [X0 + 0x578]
	0x039EAE88 BL 0x1C16CF4
	0x039EAE8C ADRP X0, 0x769000
	0x039EAE90 LDR X0, [X0 + 0x580]
	0x039EAE94 BL 0x1C16CF4
	0x039EAE98 MOVZ W8, 0x1
	0x039EAE9C STRB W8, [X21 + 0xE31]
	0x039EAEA0 ADRP X21, 0x709000
	0x039EAEA4 ADRP X23, 0x769000
	0x039EAEA8 ADRP X22, 0x709000
	0x039EAEAC LDR X21, [X21 + 0x9D0]
	0x039EAEB0 LDR X23, [X23 + 0x570]
	0x039EAEB4 LDR X22, [X22 + 0xA28]
	0x039EAEB8 MOV W0, W20
	0x039EAEBC MOV X1, X31
	0x039EAEC0 BL 0x3C10F10
	0x039EAEC4 CBZ W0, 0x39EAF58
	0x039EAEC8 LDR X0, [X21]
	0x039EAECC MOVZ W1, 0x1
	0x039EAED0 BL 0x1C16D6C
	0x039EAED4 LDR X8, [X23]
	0x039EAED8 MOV X21, X0
	0x039EAEDC MOVN X9, 0x0
	0x039EAEE0 ADD X0, X31, 0x8
	0x039EAEE4 MOV X1, X31

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9F8000
	006 Move X19, 0x70C000
	007 Move W8, [X20+3625]
	008 Move X19, [X19+2480]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x732000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x70C000
	017 Move X0, [X0+2480]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3625], W8
	021 Move X0, [X19]
	022 Move W1, 6
	023 Call 0x1C17D6C
	024 Compare X0, 0
	025 JumpIfEqual {99}
	026 Move W8, [X0+24]
	027 Compare W8, 0
	028 JumpIfEqual {98}
	029 Move X9, -49266688
	030 Move V0, [X9+1608]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+40], W31
	033 Move [X0+32], D0
	034 Move X9, -49262592
	035 Move V0, [X9+888]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X0+52], W31
	038 Move [X0+44], D0
	039 Move X9, -49262592
	040 Move V8, [X9]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X0+64], W31
	043 Move [X0+56], D8
	044 Move X9, -49262592
	045 Move V0, [X9+632]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X0+76], W31
	048 Move [X0+68], D0
	049 Move W9, 0x3F800000
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X0+80], X31
	052 Move [X0+88], W9
	053 Move X20, 0x732000
	054 Move X20, [X20+2296]
	055 Move W8, 0xBF800000
	056 Move [X0+92], W31
	057 Move [X0+96], W31
	058 Move [X0+100], W8
	059 Move X8, [X20]
	060 Move W1, 6
	061 Move X8, [X8+184]
	062 Move [X8], X0
	063 Move X0, [X19]
	064 Call 0x1C17D6C
	065 Compare X0, 0
	066 JumpIfEqual {99}
	067 Move W8, [X0+24]
	068 Compare W8, 0
	069 JumpIfEqual {98}
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X0+32], D8
	072 Move [X0+40], W31
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move [X0+44], D8
	075 Move [X0+52], W31
	076 Move W9, 0xBF800000
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X0+56], X31
	079 Move [X0+64], W9
	080 Move W9, 0x3F800000
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X0+68], W31
	083 Move [X0+72], W31
	084 Move [X0+76], W9
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X0+80], D8
	087 Move [X0+88], W31
	088 Move [X0+92], D8
	089 Move [X0+100], W31
	090 Move X8, [X20]
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+8]
	094 Move X8, [X8+184]
	095 Move [X8+8], X0
	096 Move V8, [X31+32]
	097 Return 
	098 Call 0x1C17F28
	099 Call 0x1C17F20

