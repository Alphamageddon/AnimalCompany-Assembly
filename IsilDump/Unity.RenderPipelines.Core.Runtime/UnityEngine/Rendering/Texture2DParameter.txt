Type: UnityEngine.Rendering.Texture2DParameter

Method: System.Void .ctor(UnityEngine.Texture value, System.Boolean overrideState = False)

Disassembly:
	0x039F4C7C B.NE 0x39F4CA8
	0x039F4C80 MOV X0, X19
	0x039F4C84 BL 0x3EB1AD0
	0x039F4C88 LDR X20, [X0]
	0x039F4C8C BL 0x3EB1AE0
	0x039F4C90 LDR X1, [X22]
	0x039F4C94 ADD X0, X31, 0x8
	0x039F4C98 BL 0x2BC434C
	0x039F4C9C CBNZ X20, 0x39F4CB0
	0x039F4CA0 MOV W19, W31
	0x039F4CA4 B 0x39F4C38
	0x039F4CA8 MOV X20, X31
	0x039F4CAC B 0x39F4CBC
	0x039F4CB0 MOV X0, X20
	0x039F4CB4 BL 0x1C16F18
	0x039F4CB8 MOV X19, X0
	0x039F4CBC LDR X1, [X22]
	0x039F4CC0 ADD X0, X31, 0x8
	0x039F4CC4 BL 0x2BC434C
	0x039F4CC8 CBNZ X20, 0x39F4CD4
	0x039F4CCC MOV X0, X19
	0x039F4CD0 BL 0x1D2C690
	0x039F4CD4 MOV X0, X20
	0x039F4CD8 BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9EE000
	008 Move X23, 0x760000
	009 Move W8, [X22+3737]
	010 Move X23, [X23+2384]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x760000
	019 Move X0, [X0+2384]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3737], W8
	023 Move X3, [X23]
	024 And W2, W20, 1
	025 Move X0, X21
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call VolumeParameter`1<Object>..ctor, X0, X1, X2
	034 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x039F4CDC BL 0x1990590
	0x039F4CE0 STR X30, [X31 - 0x40]!
	0x039F4CE4 STP X24, X23, [X31 + 0x10]
	0x039F4CE8 STP X22, X21, [X31 + 0x20]
	0x039F4CEC STP X20, X19, [X31 + 0x30]
	0x039F4CF0 ADRP X21, 0x9ED000
	0x039F4CF4 LDRB W8, [X21 + 0xEAD]
	0x039F4CF8 MOV X20, X1
	0x039F4CFC MOV X19, X0
	0x039F4D00 TBNZ X8, 0x0, 0x39F4D3C
	0x039F4D04 ADRP X0, 0x75F000
	0x039F4D08 LDR X0, [X0 + 0x9D0]
	0x039F4D0C BL 0x1C16CF4
	0x039F4D10 ADRP X0, 0x75F000
	0x039F4D14 LDR X0, [X0 + 0x840]
	0x039F4D18 BL 0x1C16CF4
	0x039F4D1C ADRP X0, 0x75F000
	0x039F4D20 LDR X0, [X0 + 0x848]
	0x039F4D24 BL 0x1C16CF4
	0x039F4D28 ADRP X0, 0x6FF000
	0x039F4D2C LDR X0, [X0 + 0x6C0]
	0x039F4D30 BL 0x1C16CF4
	0x039F4D34 MOVZ W8, 0x1
	0x039F4D38 STRB W8, [X21 + 0xEAD]
	0x039F4D3C LDR X0, [X19 + 0x18]
	0x039F4D40 CBZ X0, 0x39F4DF4
	0x039F4D44 ADRP X23, 0x75F000
	0x039F4D48 ADRP X24, 0x6FF000
	0x039F4D4C LDR X23, [X23 + 0x848]
	0x039F4D50 LDR X24, [X24 + 0x6C0]
	0x039F4D54 MOV W21, W31
	0x039F4D58 LDR W8, [X0 + 0x18]
	0x039F4D5C CMP W21, W8
	0x039F4D60 B.GE 0x39F4DE0
	0x039F4D64 LDR X2, [X23]
	0x039F4D68 MOV W1, W21
	0x039F4D6C BL 0x301BCCC
	0x039F4D70 CBZ X0, 0x39F4DF4
	0x039F4D74 MOV X1, X31
	0x039F4D78 BL 0x33BE520
	0x039F4D7C LDR X8, [X24]
	0x039F4D80 MOV X22, X0
	0x039F4D84 LDR W9, [X8 + 0xE0]
	0x039F4D88 CBNZ W9, 0x39F4D94
	0x039F4D8C MOV X0, X8
	0x039F4D90 BL 0x1C16DFC
	0x039F4D94 MOV X0, X22
	0x039F4D98 MOV X1, X20
	0x039F4D9C MOV X2, X31
	0x039F4DA0 BL 0x3395194
	0x039F4DA4 TBNZ X0, 0x0, 0x39F4DB8
	0x039F4DA8 LDR X0, [X19 + 0x18]
	0x039F4DAC ADD W21, W21, 0x1
	0x039F4DB0 CBNZ X0, 0x39F4D58
	0x039F4DB4 B 0x39F4DF4
	0x039F4DB8 TBNZ X21, 0x1F, 0x39F4DE0
	0x039F4DBC LDR X0, [X19 + 0x18]
	0x039F4DC0 CBZ X0, 0x39F4DF4
	0x039F4DC4 ADRP X8, 0x75F000
	0x039F4DC8 LDR X8, [X8 + 0x9D0]
	0x039F4DCC MOV W1, W21
	0x039F4DD0 LDR X2, [X8]
	0x039F4DD4 BL 0x301DA48
	0x039F4DD8 MOVZ W8, 0x1
	0x039F4DDC STRB W8, [X19 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9EE000
	007 Move X22, 0x760000
	008 Move X21, 0x700000
	009 Move W8, [X20+3738]
	010 Move X22, [X22+2392]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x728000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x700000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x760000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3738], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call VolumeParameter`1<Object>.GetHashCode, X0
	031 Move X8, [X19]
	032 Move W20, W0
	033 Move X0, X19
	034 Move X9, [X8+536]
	035 Move X1, [X8+544]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move X8, [X19]
	053 Move X20, 0x728000
	054 Move X0, X19
	055 Move X9, [X8+536]
	056 Move X1, [X8+544]
	057 Move X20, [X20+2296]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call CoreUtils.GetTextureHash, X0
	069 Move W8, 23
	070 Multiply W20, W0, W8
	071 Move W0, W20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0

