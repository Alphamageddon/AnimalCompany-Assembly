Type: UnityEngine.Rendering.DebugManager

Method: System.Void RegisterActions()

Disassembly:
	0x039A8764 LDR X0, [X0 + 0x9B0]
	0x039A8768 BL 0x1C16CF4
	0x039A876C ADRP X0, 0x7A9000
	0x039A8770 LDR X0, [X0 + 0x1B0]
	0x039A8774 BL 0x1C16CF4
	0x039A8778 ADRP X0, 0x7A9000
	0x039A877C LDR X0, [X0 + 0x1B8]
	0x039A8780 BL 0x1C16CF4
	0x039A8784 ADRP X0, 0x7A9000
	0x039A8788 LDR X0, [X0 + 0x1C0]
	0x039A878C BL 0x1C16CF4
	0x039A8790 ADRP X0, 0x7A9000
	0x039A8794 LDR X0, [X0 + 0x930]
	0x039A8798 BL 0x1C16CF4
	0x039A879C ADRP X0, 0x7A9000
	0x039A87A0 LDR X0, [X0 + 0x9D8]
	0x039A87A4 BL 0x1C16CF4
	0x039A87A8 ADRP X0, 0x7A9000
	0x039A87AC LDR X0, [X0 + 0x9E0]
	0x039A87B0 BL 0x1C16CF4
	0x039A87B4 ADRP X0, 0x7A9000
	0x039A87B8 LDR X0, [X0 + 0x1C8]
	0x039A87BC BL 0x1C16CF4
	0x039A87C0 ADRP X0, 0x7A9000
	0x039A87C4 LDR X0, [X0 + 0x938]
	0x039A87C8 BL 0x1C16CF4
	0x039A87CC ADRP X0, 0x773000
	0x039A87D0 LDR X0, [X0 + 0x4C8]
	0x039A87D4 BL 0x1C16CF4
	0x039A87D8 ADRP X0, 0x7A9000
	0x039A87DC LDR X0, [X0 + 0x940]
	0x039A87E0 BL 0x1C16CF4
	0x039A87E4 ADRP X0, 0x773000
	0x039A87E8 LDR X0, [X0 + 0x4D8]
	0x039A87EC BL 0x1C16CF4
	0x039A87F0 ADRP X0, 0x7A9000
	0x039A87F4 LDR X0, [X0 + 0x1D0]
	0x039A87F8 BL 0x1C16CF4
	0x039A87FC ADRP X0, 0x7A0000
	0x039A8800 LDR X0, [X0 + 0x5B8]
	0x039A8804 BL 0x1C16CF4
	0x039A8808 ADRP X0, 0x7A9000
	0x039A880C LDR X0, [X0 + 0x9E8]
	0x039A8810 BL 0x1C16CF4
	0x039A8814 ADRP X0, 0x7A9000
	0x039A8818 LDR X0, [X0 + 0x9F0]
	0x039A881C BL 0x1C16CF4
	0x039A8820 ADRP X0, 0x7A9000
	0x039A8824 LDR X0, [X0 + 0x9F8]
	0x039A8828 BL 0x1C16CF4
	0x039A882C ADRP X0, 0x7A9000
	0x039A8830 LDR X0, [X0 + 0xA00]
	0x039A8834 BL 0x1C16CF4
	0x039A8838 ADRP X0, 0x79D000
	0x039A883C LDR X0, [X0 + 0x350]
	0x039A8840 BL 0x1C16CF4
	0x039A8844 ADRP X0, 0x7A9000
	0x039A8848 LDR X0, [X0 + 0x948]
	0x039A884C BL 0x1C16CF4
	0x039A8850 ADRP X0, 0x7A9000
	0x039A8854 LDR X0, [X0 + 0x950]
	0x039A8858 BL 0x1C16CF4
	0x039A885C ADRP X0, 0x7A9000
	0x039A8860 LDR X0, [X0 + 0xA08]
	0x039A8864 BL 0x1C16CF4
	0x039A8868 ADRP X0, 0x7A9000
	0x039A886C LDR X0, [X0 + 0x9B8]
	0x039A8870 BL 0x1C16CF4
	0x039A8874 ADRP X0, 0x7A9000
	0x039A8878 LDR X0, [X0 + 0xA10]
	0x039A887C BL 0x1C16CF4
	0x039A8880 ADRP X0, 0x7A9000
	0x039A8884 LDR X0, [X0 + 0xA18]
	0x039A8888 BL 0x1C16CF4
	0x039A888C ADRP X0, 0x7A9000
	0x039A8890 LDR X0, [X0 + 0xA20]
	0x039A8894 BL 0x1C16CF4
	0x039A8898 ADRP X0, 0x7A9000
	0x039A889C LDR X0, [X0 + 0x958]
	0x039A88A0 BL 0x1C16CF4
	0x039A88A4 ADRP X0, 0x7A9000
	0x039A88A8 LDR X0, [X0 + 0x960]
	0x039A88AC BL 0x1C16CF4
	0x039A88B0 ADRP X0, 0x7A9000
	0x039A88B4 LDR X0, [X0 + 0xA28]
	0x039A88B8 BL 0x1C16CF4
	0x039A88BC ADRP X0, 0x79E000
	0x039A88C0 LDR X0, [X0 + 0xA98]
	0x039A88C4 BL 0x1C16CF4
	0x039A88C8 ADRP X0, 0x7A9000
	0x039A88CC LDR X0, [X0 + 0xA30]
	0x039A88D0 BL 0x1C16CF4
	0x039A88D4 ADRP X0, 0x7A9000
	0x039A88D8 LDR X0, [X0 + 0xA38]
	0x039A88DC BL 0x1C16CF4
	0x039A88E0 ADRP X0, 0x7A9000
	0x039A88E4 LDR X0, [X0 + 0x968]
	0x039A88E8 BL 0x1C16CF4
	0x039A88EC MOVZ W8, 0x1
	0x039A88F0 STRB W8, [X27 + 0xBC7]
	0x039A88F4 STP X31, X31, [X31 + 0x20]
	0x039A88F8 STR X31, [X31 + 0x30]
	0x039A88FC LDR X0, [X19 + 0x20]
	0x039A8900 LDR X1, [X29]
	0x039A8904 MOVZ W2, 0x1
	0x039A8908 MOV X3, X31
	0x039A890C MOV X4, X31
	0x039A8910 MOV X5, X31
	0x039A8914 MOV X6, X31
	0x039A8918 MOV X7, X31
	0x039A891C STR X31, [X31]
	0x039A8920 BL 0x3746504
	0x039A8924 LDR X1, [X20]
	0x039A8928 ADD X8, X31, 0x8
	0x039A892C MOV X2, X31
	0x039A8930 MOV X3, X31
	0x039A8934 MOV X4, X31
	0x039A8938 BL 0x37473F4
	0x039A893C LDR X8, [X31 + 0x18]
	0x039A8940 LDUR V0, [X31 + 0x8]
	0x039A8944 LDR X1, [X25]
	0x039A8948 LDR X2, [X28]
	0x039A894C STR X8, [X31 + 0x30]
	0x039A8950 ADD X8, X31, 0x8
	0x039A8954 ADD X0, X31, 0x20
	0x039A8958 MOV X3, X31
	0x039A895C MOV X4, X31
	0x039A8960 MOV X5, X31
	0x039A8964 STR V0, [X31 + 0x2]
	0x039A8968 BL 0x374A2F4
	0x039A896C LDR X8, [X31 + 0x18]
	0x039A8970 LDUR V0, [X31 + 0x8]
	0x039A8974 LDR X1, [X22]
	0x039A8978 LDR X2, [X26]
	0x039A897C STR X8, [X31 + 0x30]
	0x039A8980 ADD X8, X31, 0x8
	0x039A8984 ADD X0, X31, 0x20
	0x039A8988 MOV X3, X31
	0x039A898C MOV X4, X31
	0x039A8990 MOV X5, X31
	0x039A8994 STR V0, [X31 + 0x2]
	0x039A8998 BL 0x374A2F4
	0x039A899C ADRP X9, 0x7A9000
	0x039A89A0 LDUR V0, [X31 + 0x8]
	0x039A89A4 LDR X8, [X31 + 0x18]
	0x039A89A8 LDR X1, [X25]
	0x039A89AC LDR X9, [X9 + 0x9D0]
	0x039A89B0 ADD X0, X31, 0x20
	0x039A89B4 STR X8, [X31 + 0x30]
	0x039A89B8 ADD X8, X31, 0x8
	0x039A89BC LDR X2, [X9]
	0x039A89C0 MOV X3, X31
	0x039A89C4 MOV X4, X31
	0x039A89C8 MOV X5, X31
	0x039A89CC STR V0, [X31 + 0x2]
	0x039A89D0 BL 0x374A2F4
	0x039A89D4 LDR X8, [X31 + 0x18]
	0x039A89D8 LDUR V0, [X31 + 0x8]
	0x039A89DC LDR X1, [X22]
	0x039A89E0 LDR X2, [X24]
	0x039A89E4 STR X8, [X31 + 0x30]
	0x039A89E8 ADD X8, X31, 0x8
	0x039A89EC ADD X0, X31, 0x20
	0x039A89F0 MOV X3, X31
	0x039A89F4 MOV X4, X31
	0x039A89F8 MOV X5, X31
	0x039A89FC STR V0, [X31 + 0x2]
	0x039A8A00 BL 0x374A2F4
	0x039A8A04 ADRP X8, 0x7A9000
	0x039A8A08 LDR X0, [X19 + 0x20]
	0x039A8A0C LDR X8, [X8 + 0x940]
	0x039A8A10 MOVZ W2, 0x1
	0x039A8A14 MOV X3, X31
	0x039A8A18 MOV X4, X31
	0x039A8A1C LDR X1, [X8]
	0x039A8A20 MOV X5, X31
	0x039A8A24 MOV X6, X31
	0x039A8A28 MOV X7, X31
	0x039A8A2C STR X31, [X31]
	0x039A8A30 BL 0x3746504
	0x039A8A34 LDR X1, [X20]
	0x039A8A38 ADD X8, X31, 0x8
	0x039A8A3C MOV X2, X31
	0x039A8A40 MOV X3, X31
	0x039A8A44 MOV X4, X31
	0x039A8A48 BL 0x37473F4
	0x039A8A4C LDR X8, [X31 + 0x18]
	0x039A8A50 LDUR V0, [X31 + 0x8]
	0x039A8A54 LDR X1, [X25]
	0x039A8A58 LDR X2, [X28]
	0x039A8A5C STR X8, [X31 + 0x30]
	0x039A8A60 ADD X8, X31, 0x8
	0x039A8A64 ADD X0, X31, 0x20
	0x039A8A68 MOV X3, X31
	0x039A8A6C MOV X4, X31
	0x039A8A70 MOV X5, X31
	0x039A8A74 STR V0, [X31 + 0x2]
	0x039A8A78 BL 0x374A2F4
	0x039A8A7C ADRP X9, 0x7A9000
	0x039A8A80 LDUR V0, [X31 + 0x8]
	0x039A8A84 LDR X8, [X31 + 0x18]
	0x039A8A88 LDR X1, [X22]
	0x039A8A8C LDR X9, [X9 + 0x9E8]
	0x039A8A90 ADD X0, X31, 0x20
	0x039A8A94 STR X8, [X31 + 0x30]
	0x039A8A98 ADD X8, X31, 0x8
	0x039A8A9C LDR X2, [X9]
	0x039A8AA0 MOV X3, X31
	0x039A8AA4 MOV X4, X31
	0x039A8AA8 MOV X5, X31
	0x039A8AAC STR V0, [X31 + 0x2]
	0x039A8AB0 BL 0x374A2F4
	0x039A8AB4 ADRP X9, 0x7A9000
	0x039A8AB8 LDUR V0, [X31 + 0x8]
	0x039A8ABC LDR X8, [X31 + 0x18]
	0x039A8AC0 LDR X1, [X25]
	0x039A8AC4 LDR X9, [X9 + 0x9F0]
	0x039A8AC8 ADD X0, X31, 0x20
	0x039A8ACC STR X8, [X31 + 0x30]
	0x039A8AD0 ADD X8, X31, 0x8
	0x039A8AD4 LDR X2, [X9]
	0x039A8AD8 MOV X3, X31
	0x039A8ADC MOV X4, X31
	0x039A8AE0 MOV X5, X31
	0x039A8AE4 STR V0, [X31 + 0x2]
	0x039A8AE8 BL 0x374A2F4
	0x039A8AEC LDR X8, [X31 + 0x18]
	0x039A8AF0 LDUR V0, [X31 + 0x8]
	0x039A8AF4 LDR X1, [X22]
	0x039A8AF8 LDR X2, [X24]
	0x039A8AFC STR X8, [X31 + 0x30]
	0x039A8B00 ADD X8, X31, 0x8
	0x039A8B04 ADD X0, X31, 0x20
	0x039A8B08 MOV X3, X31
	0x039A8B0C MOV X4, X31
	0x039A8B10 MOV X5, X31
	0x039A8B14 STR V0, [X31 + 0x2]
	0x039A8B18 BL 0x374A2F4
	0x039A8B1C ADRP X8, 0x7A9000
	0x039A8B20 LDR X0, [X19 + 0x20]
	0x039A8B24 LDR X8, [X8 + 0x950]
	0x039A8B28 MOVZ W2, 0x1
	0x039A8B2C MOV X3, X31
	0x039A8B30 MOV X4, X31
	0x039A8B34 LDR X1, [X8]
	0x039A8B38 MOV X5, X31
	0x039A8B3C MOV X6, X31
	0x039A8B40 MOV X7, X31
	0x039A8B44 STR X31, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xA3A000
	008 Move X23, 0x7AA000
	009 Move X20, 0x7AA000
	010 Move X22, 0x7AA000
	011 Move W8, [X21+3009]
	012 Move X23, [X23+2320]
	013 Move X20, [X20+2328]
	014 Move X22, [X22+2336]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {58}
	020 Move X0, 0x7AA000
	021 Move X0, [X0+2320]
	022 Call 0x1C17CF4
	023 Move X0, 0x7AA000
	024 Move X0, [X0+2336]
	025 Call 0x1C17CF4
	026 Move X0, 0x7AA000
	027 Move X0, [X0+2328]
	028 Call 0x1C17CF4
	029 Move X0, 0x7AA000
	030 Move X0, [X0+2344]
	031 Call 0x1C17CF4
	032 Move X0, 0x7AA000
	033 Move X0, [X0+2352]
	034 Call 0x1C17CF4
	035 Move X0, 0x7AA000
	036 Move X0, [X0+2360]
	037 Call 0x1C17CF4
	038 Move X0, 0x7AA000
	039 Move X0, [X0+2368]
	040 Call 0x1C17CF4
	041 Move X0, 0x7AA000
	042 Move X0, [X0+2376]
	043 Call 0x1C17CF4
	044 Move X0, 0x7AA000
	045 Move X0, [X0+2384]
	046 Call 0x1C17CF4
	047 Move X0, 0x7AA000
	048 Move X0, [X0+2392]
	049 Call 0x1C17CF4
	050 Move X0, 0x7AA000
	051 Move X0, [X0+2400]
	052 Call 0x1C17CF4
	053 Move X0, 0x7AA000
	054 Move X0, [X0+2408]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+3009], W8
	058 Move X0, [X23]
	059 Move W1, 9
	060 Call 0x1C17D6C
	061 Move [X19+16], X0
	062 Move X0, [X20]
	063 Move W1, 9
	064 Call 0x1C17D6C
	065 Move [X19+24], X0
	066 Move X0, [X22]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X20, X0
	070 Call Object..ctor, X0
	071 Move X0, [X19+32]
	072 Compare X0, 0
	073 JumpIfEqual {279}
	074 Move X8, 0x7AA000
	075 Move X8, [X8+2400]
	076 Move W2, W31
	077 Move X3, X31
	078 Move X1, [X8]
	079 Call InputActionMap.FindAction, X0, X1, X2
	080 Compare X20, 0
	081 JumpIfEqual {279}
	082 Move [X20+16], X0
	083 Move X0, X19
	084 Move W1, W31
	085 Move X2, X20
	086 Move [X20+24], W31
	087 Call DebugManager.AddAction, X0, X1, X2
	088 Move X0, [X22]
	089 Call 0x1C17F10
	090 Move X1, X31
	091 Move X20, X0
	092 Call Object..ctor, X0
	093 Move X0, [X19+32]
	094 Compare X0, 0
	095 JumpIfEqual {279}
	096 Move X8, 0x7AA000
	097 Move X8, [X8+2368]
	098 Move W2, W31
	099 Move X3, X31
	100 Move X1, [X8]
	101 Call InputActionMap.FindAction, X0, X1, X2
	102 Compare X20, 0
	103 JumpIfEqual {279}
	104 Move [X20+16], X0
	105 Move W1, 8
	106 Move X0, X19
	107 Move X2, X20
	108 Move [X20+24], W31
	109 Call DebugManager.AddAction, X0, X1, X2
	110 Move X0, [X22]
	111 Call 0x1C17F10
	112 Move X1, X31
	113 Move X20, X0
	114 Call Object..ctor, X0
	115 Move X0, [X19+32]
	116 Compare X0, 0
	117 JumpIfEqual {279}
	118 Move X8, 0x7AA000
	119 Move X8, [X8+2384]
	120 Move W2, W31
	121 Move X3, X31
	122 Move X1, [X8]
	123 Call InputActionMap.FindAction, X0, X1, X2
	124 Compare X20, 0
	125 JumpIfEqual {279}
	126 Move [X20+16], X0
	127 Move W1, 2
	128 Move X0, X19
	129 Move X2, X20
	130 Move [X20+24], W31
	131 Call DebugManager.AddAction, X0, X1, X2
	132 Move X0, [X22]
	133 Call 0x1C17F10
	134 Move X1, X31
	135 Move X20, X0
	136 Call Object..ctor, X0
	137 Move X0, [X19+32]
	138 Compare X0, 0
	139 JumpIfEqual {279}
	140 Move X8, 0x7AA000
	141 Move X8, [X8+2376]
	142 Move W2, W31
	143 Move X3, X31
	144 Move X1, [X8]
	145 Call InputActionMap.FindAction, X0, X1, X2
	146 Compare X20, 0
	147 JumpIfEqual {279}
	148 Move [X20+16], X0
	149 Move W1, 1
	150 Move X0, X19
	151 Move X2, X20
	152 Move [X20+24], W31
	153 Call DebugManager.AddAction, X0, X1, X2
	154 Move X0, [X22]
	155 Call 0x1C17F10
	156 Move X1, X31
	157 Move X20, X0
	158 Call Object..ctor, X0
	159 Move X0, [X19+32]
	160 Compare X0, 0
	161 JumpIfEqual {279}
	162 Move X8, 0x7AA000
	163 Move X8, [X8+2360]
	164 Move W2, W31
	165 Move X3, X31
	166 Move X1, [X8]
	167 Call InputActionMap.FindAction, X0, X1, X2
	168 Compare X20, 0
	169 JumpIfEqual {279}
	170 Move [X20+16], X0
	171 Move W1, 3
	172 Move X0, X19
	173 Move X2, X20
	174 Move [X20+24], W31
	175 Call DebugManager.AddAction, X0, X1, X2
	176 Move X0, [X22]
	177 Call 0x1C17F10
	178 Move X1, X31
	179 Move X21, X0
	180 Call Object..ctor, X0
	181 Move X0, [X19+32]
	182 Compare X0, 0
	183 JumpIfEqual {279}
	184 Move X8, 0x7AA000
	185 Move X8, [X8+2352]
	186 Move W2, W31
	187 Move X3, X31
	188 Move X1, [X8]
	189 Call InputActionMap.FindAction, X0, X1, X2
	190 Compare X21, 0
	191 JumpIfEqual {279}
	192 Move [X21+16], X0
	193 Move W1, 4
	194 Move X0, X19
	195 Move X2, X21
	196 Move [X21+24], W31
	197 Call DebugManager.AddAction, X0, X1, X2
	198 Move X0, [X22]
	199 Call 0x1C17F10
	200 Move X1, X31
	201 Move X21, X0
	202 Call Object..ctor, X0
	203 Move X0, [X19+32]
	204 Compare X0, 0
	205 JumpIfEqual {279}
	206 Move X8, 0x7AA000
	207 Move X8, [X8+2392]
	208 Move W2, W31
	209 Move X3, X31
	210 Move X1, [X8]
	211 Call InputActionMap.FindAction, X0, X1, X2
	212 Compare X21, 0
	213 JumpIfEqual {279}
	214 Move [X21+16], X0
	215 Move W8, 1
	216 Move W1, 7
	217 Move X0, X19
	218 Move X2, X21
	219 Move [X21+24], W8
	220 Move [X20+28], W31
	221 Call DebugManager.AddAction, X0, X1, X2
	222 Move X0, [X22]
	223 Call 0x1C17F10
	224 Move X1, X31
	225 Move X20, X0
	226 Call Object..ctor, X0
	227 Move X0, [X19+32]
	228 Compare X0, 0
	229 JumpIfEqual {279}
	230 Move X8, 0x7AA000
	231 Move X8, [X8+2344]
	232 Move W2, W31
	233 Move X3, X31
	234 Move X1, [X8]
	235 Call InputActionMap.FindAction, X0, X1, X2
	236 Compare X20, 0
	237 JumpIfEqual {279}
	238 Move X8, 1
	239 NotImplemented "Instruction MOVK not yet implemented."
	240 NotImplemented "Instruction MOVK not yet implemented."
	241 Move [X20+16], X0
	242 Move [X20+24], X8
	243 Move W1, 5
	244 Move X0, X19
	245 Move X2, X20
	246 Call DebugManager.AddAction, X0, X1, X2
	247 Move X0, [X22]
	248 Call 0x1C17F10
	249 Move X1, X31
	250 Move X20, X0
	251 Call Object..ctor, X0
	252 Move X0, [X19+32]
	253 Compare X0, 0
	254 JumpIfEqual {279}
	255 Move X8, 0x7AA000
	256 Move X8, [X8+2408]
	257 Move W2, W31
	258 Move X3, X31
	259 Move X1, [X8]
	260 Call InputActionMap.FindAction, X0, X1, X2
	261 Compare X20, 0
	262 JumpIfEqual {279}
	263 Move X8, 1
	264 NotImplemented "Instruction MOVK not yet implemented."
	265 NotImplemented "Instruction MOVK not yet implemented."
	266 Move [X20+16], X0
	267 Move [X20+24], X8
	268 Move X0, X19
	269 Move X2, X20
	270 Move X20, [X31+32]
	271 Move X19, [X31+40]
	272 Move X22, [X31+16]
	273 Move X21, [X31+24]
	274 Move W1, 6
	275 Move X30, [X31+48]
	276 Move X23, [X31+56]
	277 Call DebugManager.AddAction, X0, X1, X2
	278 Return 
	279 Call 0x1C17F20

Method: System.Void EnableInputActions()

Disassembly:
	0x039A8C34 LDR X1, [X8]
	0x039A8C38 MOV X5, X31
	0x039A8C3C MOV X6, X31
	0x039A8C40 MOV X7, X31
	0x039A8C44 STR X31, [X31]
	0x039A8C48 BL 0x3746504
	0x039A8C4C ADRP X8, 0x7A9000
	0x039A8C50 LDR X8, [X8 + 0xA08]
	0x039A8C54 MOV X2, X31
	0x039A8C58 MOV X3, X31
	0x039A8C5C MOV X4, X31
	0x039A8C60 LDR X1, [X8]
	0x039A8C64 ADD X8, X31, 0x8
	0x039A8C68 MOV X5, X31
	0x039A8C6C MOV X20, X0
	0x039A8C70 BL 0x3746870
	0x039A8C74 ADRP X8, 0x7A9000
	0x039A8C78 LDR X8, [X8 + 0xA18]
	0x039A8C7C MOV X0, X20
	0x039A8C80 MOV X2, X31
	0x039A8C84 MOV X3, X31
	0x039A8C88 LDR X1, [X8]
	0x039A8C8C ADD X8, X31, 0x8
	0x039A8C90 MOV X4, X31
	0x039A8C94 MOV X5, X31
	0x039A8C98 BL 0x3746870
	0x039A8C9C ADRP X8, 0x7A9000
	0x039A8CA0 LDR X0, [X19 + 0x20]
	0x039A8CA4 LDR X8, [X8 + 0x930]
	0x039A8CA8 MOVZ W2, 0x1
	0x039A8CAC MOV X3, X31
	0x039A8CB0 MOV X4, X31
	0x039A8CB4 LDR X1, [X8]
	0x039A8CB8 MOV X5, X31
	0x039A8CBC MOV X6, X31
	0x039A8CC0 MOV X7, X31
	0x039A8CC4 STR X31, [X31]
	0x039A8CC8 BL 0x3746504
	0x039A8CCC ADRP X8, 0x7A9000
	0x039A8CD0 LDR X8, [X8 + 0xA00]
	0x039A8CD4 MOV X2, X31
	0x039A8CD8 MOV X3, X31
	0x039A8CDC MOV X4, X31
	0x039A8CE0 LDR X1, [X8]
	0x039A8CE4 ADD X8, X31, 0x8
	0x039A8CE8 MOV X5, X31
	0x039A8CEC MOV X20, X0
	0x039A8CF0 BL 0x3746870
	0x039A8CF4 ADRP X8, 0x7A9000
	0x039A8CF8 LDR X8, [X8 + 0x9E0]
	0x039A8CFC MOV X0, X20
	0x039A8D00 MOV X2, X31
	0x039A8D04 MOV X3, X31
	0x039A8D08 LDR X1, [X8]
	0x039A8D0C ADD X8, X31, 0x8
	0x039A8D10 MOV X4, X31
	0x039A8D14 MOV X5, X31
	0x039A8D18 BL 0x3746870
	0x039A8D1C ADRP X8, 0x7A9000
	0x039A8D20 LDR X0, [X19 + 0x20]
	0x039A8D24 LDR X8, [X8 + 0x958]
	0x039A8D28 MOV W2, W31
	0x039A8D2C MOV X3, X31
	0x039A8D30 MOV X4, X31
	0x039A8D34 LDR X1, [X8]
	0x039A8D38 MOV X5, X31
	0x039A8D3C MOV X6, X31
	0x039A8D40 MOV X7, X31
	0x039A8D44 STR X31, [X31]
	0x039A8D48 BL 0x3746504
	0x039A8D4C ADRP X8, 0x7A9000
	0x039A8D50 LDR X8, [X8 + 0x9C8]
	0x039A8D54 MOV X2, X31
	0x039A8D58 MOV X3, X31
	0x039A8D5C MOV X4, X31
	0x039A8D60 LDR X1, [X8]
	0x039A8D64 ADD X8, X31, 0x8
	0x039A8D68 MOV X5, X31
	0x039A8D6C MOV X20, X0
	0x039A8D70 BL 0x3746870
	0x039A8D74 ADRP X8, 0x7A9000
	0x039A8D78 LDR X8, [X8 + 0xA38]
	0x039A8D7C MOV X0, X20
	0x039A8D80 MOV X2, X31
	0x039A8D84 MOV X3, X31
	0x039A8D88 LDR X1, [X8]
	0x039A8D8C ADD X8, X31, 0x8
	0x039A8D90 MOV X4, X31
	0x039A8D94 MOV X5, X31
	0x039A8D98 BL 0x3746870
	0x039A8D9C ADRP X8, 0x7A9000
	0x039A8DA0 LDR X0, [X19 + 0x20]
	0x039A8DA4 LDR X8, [X8 + 0x928]
	0x039A8DA8 MOV W2, W31
	0x039A8DAC MOV X3, X31
	0x039A8DB0 MOV X4, X31
	0x039A8DB4 LDR X1, [X8]
	0x039A8DB8 MOV X5, X31
	0x039A8DBC MOV X6, X31
	0x039A8DC0 MOV X7, X31
	0x039A8DC4 STR X31, [X31]
	0x039A8DC8 BL 0x3746504
	0x039A8DCC ADRP X20, 0x7A0000
	0x039A8DD0 LDR X20, [X20 + 0x560]
	0x039A8DD4 ADD X8, X31, 0x8
	0x039A8DD8 MOV X2, X31
	0x039A8DDC MOV X3, X31
	0x039A8DE0 LDR X1, [X20]
	0x039A8DE4 MOV X4, X31
	0x039A8DE8 BL 0x37473F4
	0x039A8DEC ADRP X9, 0x7A9000
	0x039A8DF0 LDUR V0, [X31 + 0x8]
	0x039A8DF4 LDR X8, [X31 + 0x18]
	0x039A8DF8 LDR X1, [X23]
	0x039A8DFC LDR X9, [X9 + 0x9F8]
	0x039A8E00 ADD X0, X31, 0x20
	0x039A8E04 STR X8, [X31 + 0x30]
	0x039A8E08 ADD X8, X31, 0x8
	0x039A8E0C LDR X2, [X9]
	0x039A8E10 MOV X3, X31
	0x039A8E14 MOV X4, X31
	0x039A8E18 MOV X5, X31
	0x039A8E1C STR V0, [X31 + 0x2]
	0x039A8E20 BL 0x374A2F4
	0x039A8E24 ADRP X9, 0x7A9000
	0x039A8E28 LDUR V0, [X31 + 0x8]
	0x039A8E2C LDR X8, [X31 + 0x18]
	0x039A8E30 LDR X1, [X21]
	0x039A8E34 LDR X9, [X9 + 0xA10]
	0x039A8E38 ADD X0, X31, 0x20
	0x039A8E3C STR X8, [X31 + 0x30]
	0x039A8E40 ADD X8, X31, 0x8
	0x039A8E44 LDR X2, [X9]
	0x039A8E48 MOV X3, X31
	0x039A8E4C MOV X4, X31
	0x039A8E50 MOV X5, X31
	0x039A8E54 STR V0, [X31 + 0x2]
	0x039A8E58 BL 0x374A2F4
	0x039A8E5C ADRP X9, 0x7A9000
	0x039A8E60 LDUR V0, [X31 + 0x8]
	0x039A8E64 LDR X8, [X31 + 0x18]
	0x039A8E68 LDR X1, [X23]
	0x039A8E6C LDR X9, [X9 + 0x1B0]
	0x039A8E70 ADD X0, X31, 0x20
	0x039A8E74 STR X8, [X31 + 0x30]
	0x039A8E78 ADD X8, X31, 0x8
	0x039A8E7C LDR X2, [X9]
	0x039A8E80 MOV X3, X31
	0x039A8E84 MOV X4, X31
	0x039A8E88 MOV X5, X31
	0x039A8E8C STR V0, [X31 + 0x2]
	0x039A8E90 BL 0x374A2F4
	0x039A8E94 ADRP X9, 0x7A9000
	0x039A8E98 LDUR V0, [X31 + 0x8]
	0x039A8E9C LDR X8, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA3A000
	007 Move W8, [X20+3010]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x74C000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x79E000
	017 Move X0, [X0+1168]
	018 Call 0x1C17CF4
	019 Move X0, 0x74C000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3010], W8
	024 Move X0, [X19+32]
	025 Compare X0, 0
	026 JumpIfEqual {121}
	027 Move X21, 0x74C000
	028 Move X21, [X21+3584]
	029 Move X1, X31
	030 Call InputActionMap.GetEnumerator, X0
	031 Move X19, X0
	032 Compare X0, 0
	033 JumpIfEqual {122}
	034 Move X20, 0x74C000
	035 Move X22, 0x79E000
	036 Move X20, [X20+3608]
	037 Move X22, [X22+1168]
	038 Move X8, [X19]
	039 Move X1, [X20]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X19
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {88}
	063 Move X8, [X19]
	064 Move X1, [X22]
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Compare X9, 0
	067 JumpIfEqual {74}
	068 Move X10, [X8+176]
	069 Add X10, X10, 8
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Subtract X9, X9, 1
	073 Add X10, X10, 16
	074 Move X0, X19
	075 Move W2, W31
	076 Call 0x1C5D788
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Compare X0, 0
	085 JumpIfEqual {120}
	086 Move X1, X31
	087 Call InputAction.Enable, X0
	088 Move X20, X31
	089 Compare X19, 0
	090 JumpIfEqual {112}
	091 Move X8, [X19]
	092 Move X1, [X21]
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move X0, X19
	103 Move W2, W31
	104 Call 0x1C5D788
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Add X8, X8, X9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X19
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X20, 0
	113 JumpIfNotEqual {123}
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X30, [X31+48]
	119 Return 
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Call 0x1C17F20
	123 Move X0, X20
	124 Call 0x1C17F18
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Call 0x3EB2AD0
	127 Move X20, [X0]
	128 Call 0x3EB2AE0
	129 Move [X31+8], X0
	130 Move X20, X31
	131 Move [X31+8], X0
	132 Compare X19, 0
	133 JumpIfEqual {155}
	134 Move X8, [X19]
	135 Move X1, [X21]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X19
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X19
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X20, 0
	156 JumpIfNotEqual {159}
	157 Move X0, [X31+8]
	158 Call 0x1D2D690
	159 Move X0, X20
	160 Call 0x1C17F18
	161 Call 0x1991590

Method: System.Void AddAction(UnityEngine.Rendering.DebugAction action, UnityEngine.Rendering.DebugActionDesc desc)

Disassembly:
	0x039A8B50 LDR X8, [X8 + 0x198]
	0x039A8B54 MOV X2, X31
	0x039A8B58 MOV X3, X31
	0x039A8B5C MOV X4, X31
	0x039A8B60 LDR X1, [X8]
	0x039A8B64 ADD X8, X31, 0x8
	0x039A8B68 MOV X5, X31
	0x039A8B6C MOV X20, X0
	0x039A8B70 BL 0x3746870
	0x039A8B74 ADRP X8, 0x7A9000
	0x039A8B78 LDR X8, [X8 + 0xA20]
	0x039A8B7C MOV X0, X20
	0x039A8B80 MOV X2, X31
	0x039A8B84 MOV X3, X31
	0x039A8B88 LDR X1, [X8]
	0x039A8B8C ADD X8, X31, 0x8
	0x039A8B90 MOV X4, X31
	0x039A8B94 MOV X5, X31
	0x039A8B98 BL 0x3746870
	0x039A8B9C ADRP X8, 0x7A9000
	0x039A8BA0 LDR X0, [X19 + 0x20]
	0x039A8BA4 LDR X8, [X8 + 0x948]
	0x039A8BA8 MOVZ W2, 0x1
	0x039A8BAC MOV X3, X31
	0x039A8BB0 MOV X4, X31
	0x039A8BB4 LDR X1, [X8]
	0x039A8BB8 MOV X5, X31
	0x039A8BBC MOV X6, X31
	0x039A8BC0 MOV X7, X31
	0x039A8BC4 STR X31, [X31]
	0x039A8BC8 BL 0x3746504
	0x039A8BCC ADRP X8, 0x7A9000
	0x039A8BD0 LDR X8, [X8 + 0x1B8]
	0x039A8BD4 MOV X2, X31
	0x039A8BD8 MOV X3, X31
	0x039A8BDC MOV X4, X31
	0x039A8BE0 LDR X1, [X8]
	0x039A8BE4 ADD X8, X31, 0x8
	0x039A8BE8 MOV X5, X31
	0x039A8BEC MOV X20, X0
	0x039A8BF0 BL 0x3746870
	0x039A8BF4 ADRP X8, 0x7A9000
	0x039A8BF8 LDR X8, [X8 + 0x9D8]
	0x039A8BFC MOV X0, X20
	0x039A8C00 MOV X2, X31
	0x039A8C04 MOV X3, X31
	0x039A8C08 LDR X1, [X8]
	0x039A8C0C ADD X8, X31, 0x8
	0x039A8C10 MOV X4, X31
	0x039A8C14 MOV X5, X31
	0x039A8C18 BL 0x3746870
	0x039A8C1C ADRP X8, 0x7A9000
	0x039A8C20 LDR X0, [X19 + 0x20]
	0x039A8C24 LDR X8, [X8 + 0x938]
	0x039A8C28 MOVZ W2, 0x1
	0x039A8C2C MOV X3, X31
	0x039A8C30 MOV X4, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA3A000
	008 Move W8, [X22+3011]
	009 Move X20, X2
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x7AA000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3011], W8
	021 Move X23, [X21+16]
	022 Compare X23, 0
	023 JumpIfEqual {66}
	024 Compare X20, 0
	025 JumpIfEqual {32}
	026 Move X8, [X23]
	027 Move X0, X20
	028 Move X1, [X8+64]
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfEqual {68}
	032 Move W8, [X23+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0x7AA000
	035 Move X8, [X8+2416]
	036 Move X22, W19
	037 Add X9, X23, X22
	038 Move [X9+32], X20
	039 Move X0, [X8]
	040 Move X21, [X21+24]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X20, X0
	044 Call Object..ctor, X0
	045 Compare X21, 0
	046 JumpIfEqual {66}
	047 Compare X20, 0
	048 JumpIfEqual {55}
	049 Move X8, [X21]
	050 Move X0, X20
	051 Move X1, [X8+64]
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {68}
	055 Move W8, [X21+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X8, X21, X22
	058 Move [X8+32], X20
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C17F28
	068 Call 0x1C17F44
	069 Move X1, X31
	070 Call 0x1C17DEC

Method: System.Void SampleAction(System.Int32 actionIndex)

Disassembly:
	0x039A8EA8 ADD X0, X31, 0x20
	0x039A8EAC STR X8, [X31 + 0x30]
	0x039A8EB0 ADD X8, X31, 0x8
	0x039A8EB4 LDR X2, [X9]
	0x039A8EB8 MOV X3, X31
	0x039A8EBC MOV X4, X31
	0x039A8EC0 MOV X5, X31
	0x039A8EC4 STR V0, [X31 + 0x2]
	0x039A8EC8 BL 0x374A2F4
	0x039A8ECC ADRP X8, 0x7A9000
	0x039A8ED0 LDR X0, [X19 + 0x20]
	0x039A8ED4 LDR X8, [X8 + 0x968]
	0x039A8ED8 MOV W2, W31
	0x039A8EDC MOV X3, X31
	0x039A8EE0 MOV X4, X31
	0x039A8EE4 LDR X1, [X8]
	0x039A8EE8 MOV X5, X31
	0x039A8EEC MOV X6, X31
	0x039A8EF0 MOV X7, X31
	0x039A8EF4 STR X31, [X31]
	0x039A8EF8 BL 0x3746504
	0x039A8EFC LDR X1, [X20]
	0x039A8F00 ADD X8, X31, 0x8
	0x039A8F04 MOV X2, X31
	0x039A8F08 MOV X3, X31
	0x039A8F0C MOV X4, X31
	0x039A8F10 BL 0x37473F4
	0x039A8F14 ADRP X9, 0x7A9000
	0x039A8F18 LDUR V0, [X31 + 0x8]
	0x039A8F1C LDR X8, [X31 + 0x18]
	0x039A8F20 LDR X1, [X23]
	0x039A8F24 LDR X9, [X9 + 0xA28]
	0x039A8F28 ADD X0, X31, 0x20
	0x039A8F2C STR X8, [X31 + 0x30]
	0x039A8F30 ADD X8, X31, 0x8
	0x039A8F34 LDR X2, [X9]
	0x039A8F38 MOV X3, X31
	0x039A8F3C MOV X4, X31
	0x039A8F40 MOV X5, X31
	0x039A8F44 STR V0, [X31 + 0x2]
	0x039A8F48 BL 0x374A2F4
	0x039A8F4C ADRP X9, 0x7A9000
	0x039A8F50 LDUR V0, [X31 + 0x8]
	0x039A8F54 LDR X8, [X31 + 0x18]
	0x039A8F58 LDR X1, [X21]
	0x039A8F5C LDR X9, [X9 + 0xA30]
	0x039A8F60 ADD X0, X31, 0x20
	0x039A8F64 STR X8, [X31 + 0x30]
	0x039A8F68 ADD X8, X31, 0x8
	0x039A8F6C LDR X2, [X9]
	0x039A8F70 MOV X3, X31
	0x039A8F74 MOV X4, X31
	0x039A8F78 MOV X5, X31
	0x039A8F7C STR V0, [X31 + 0x2]
	0x039A8F80 BL 0x374A2F4
	0x039A8F84 ADRP X9, 0x7A9000
	0x039A8F88 LDUR V0, [X31 + 0x8]
	0x039A8F8C LDR X8, [X31 + 0x18]
	0x039A8F90 LDR X1, [X23]
	0x039A8F94 LDR X9, [X9 + 0x1D0]
	0x039A8F98 ADD X0, X31, 0x20
	0x039A8F9C STR X8, [X31 + 0x30]
	0x039A8FA0 ADD X8, X31, 0x8
	0x039A8FA4 LDR X2, [X9]
	0x039A8FA8 MOV X3, X31
	0x039A8FAC MOV X4, X31
	0x039A8FB0 MOV X5, X31
	0x039A8FB4 STR V0, [X31 + 0x2]
	0x039A8FB8 BL 0x374A2F4
	0x039A8FBC ADRP X9, 0x7A9000
	0x039A8FC0 LDUR V0, [X31 + 0x8]
	0x039A8FC4 LDR X8, [X31 + 0x18]
	0x039A8FC8 LDR X1, [X21]
	0x039A8FCC LDR X9, [X9 + 0x1C8]
	0x039A8FD0 ADD X0, X31, 0x20
	0x039A8FD4 STR X8, [X31 + 0x30]
	0x039A8FD8 ADD X8, X31, 0x8
	0x039A8FDC LDR X2, [X9]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA3A000
	007 Move W8, [X21+3012]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x752000
	015 Move X0, [X0+2240]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3012], W8
	019 Move X8, [X20+16]
	020 Compare X8, 0
	021 JumpIfEqual {89}
	022 Move W9, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, [X20+24]
	025 Compare X9, 0
	026 JumpIfEqual {89}
	027 Move W10, [X9+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X10, W19
	030 Add X9, X9, X10
	031 Move X19, [X9+32]
	032 Compare X19, 0
	033 JumpIfEqual {89}
	034 Move W9, [X19+44]
	035 Compare W9, 0
	036 JumpIfEqual {43}
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Move V8, [X31+48]
	042 Return 
	043 Add X8, X8, X10
	044 Move X20, [X8+32]
	045 Compare X20, 0
	046 JumpIfEqual {89}
	047 Move X0, [X20+16]
	048 Compare X0, 0
	049 JumpIfEqual {37}
	050 Move X8, 0x752000
	051 Move X8, [X8+2240]
	052 Move X1, [X8]
	053 Call InputAction.ReadValue, X0
	054 Move X21, 0xA32000
	055 Move W8, [X21+1450]
	056 Move V8, V0
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x753000
	060 Move X0, [X0+1208]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+1450], W8
	064 Move X8, 0x753000
	065 Move X8, [X8+1208]
	066 Move X9, -49008640
	067 Move V0, [X9+576]
	068 NotImplemented "Instruction FABS not yet implemented."
	069 Move X8, [X8]
	070 Move S2, W31
	071 NotImplemented "Instruction FMAXNM not yet implemented."
	072 Multiply S0, S1, S0
	073 Move X8, [X8+184]
	074 Move S1, 8
	075 Move V3, [X8]
	076 Multiply S1, S3, S1
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction FCSEL not yet implemented."
	079 NotImplemented "Instruction FABD not yet implemented."
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move X1, [X20+16]
	082 Move X0, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X30, [X31+16]
	086 Move X21, [X31+24]
	087 Move V0, V8
	088 Move V8, [X31+48]
	089 Call 0x1C17F20
	090 Call 0x1C17F28

Method: System.Void UpdateAction(System.Int32 actionIndex)

Disassembly:
	0x039A904C LDR X0, [X19 + 0x30]
	0x039A9050 CBZ X0, 0x39A908C
	0x039A9054 ADRP X8, 0x7A8000
	0x039A9058 LDR X8, [X8 + 0xA48]
	0x039A905C LDR X1, [X8]
	0x039A9060 BL 0x301DC50
	0x039A9064 LDR X0, [X19 + 0x30]
	0x039A9068 CBZ X0, 0x39A908C
	0x039A906C ADRP X8, 0x7A8000
	0x039A9070 LDR X8, [X8 + 0xA40]
	0x039A9074 LDR X1, [X8]
	0x039A9078 BL 0x301C1B0
	0x039A907C STR X0, [X19 + 0x28]
	0x039A9080 LDP X20, X19, [X31 + 0x10]
	0x039A9084 LDR X30, [X31], #0x20
	0x039A9088 RET
	0x039A908C BL 0x1C16F20
	0x039A9090 STP X30, X19, [X31 - 0x10]!
	0x039A9094 MOV X19, X0
	0x039A9098 LDR X0, [X0 + 0x28]
	0x039A909C CBNZ X0, 0x39A90AC
	0x039A90A0 MOV X0, X19
	0x039A90A4 BL 0x39A9014
	0x039A90A8 LDR X0, [X19 + 0x28]
	0x039A90AC LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {25}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X0+24]
	008 Compare X9, 0
	009 JumpIfEqual {25}
	010 Move W10, [X9+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X10, W1
	013 Add X9, X9, X10
	014 Move X0, [X9+32]
	015 Compare X0, 0
	016 JumpIfEqual {25}
	017 Move W9, [X0+44]
	018 Compare W9, 0
	019 JumpIfEqual {23}
	020 Add X8, X8, X10
	021 Move X1, [X8+32]
	022 Move X30, [X31+16]
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F20
	026 Call 0x1C17F28

Method: System.Void UpdateActions()

Disassembly:
	0x039A9254 MOV X0, X21
	0x039A9258 MOV X1, X19
	0x039A925C MOV X2, X31
	0x039A9260 BL 0x33C0DE4
	0x039A9264 MOV X8, X0
	0x039A9268 CBZ X0, 0x39A927C
	0x039A926C LDR X1, [X22]
	0x039A9270 LDR X9, [X8]
	0x039A9274 CMP X9, X1
	0x039A9278 B.NE 0x39A92A8
	0x039A927C MOV X0, X20
	0x039A9280 MOV X1, X8
	0x039A9284 MOV X2, X21
	0x039A9288 BL 0x1C24138
	0x039A928C CMP X21, X0
	0x039A9290 MOV X21, X0
	0x039A9294 B.NE 0x39A9254
	0x039A9298 LDP X20, X19, [X31 + 0x20]
	0x039A929C LDP X22, X21, [X31 + 0x10]
	0x039A92A0 LDR X30, [X31], #0x30
	0x039A92A4 RET
	0x039A92A8 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {21}
	007 Move X19, X0
	008 Move W20, W31
	009 Move W8, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X19
	012 Move W1, W20
	013 Call DebugManager.UpdateAction, X0, X1
	014 Move X0, X19
	015 Move W1, W20
	016 Call DebugManager.SampleAction, X0, X1
	017 Move X8, [X19+16]
	018 Add W20, W20, 1
	019 Compare X8, 0
	020 JumpIfNotEqual {9}
	021 Call 0x1C17F20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Single GetAction(UnityEngine.Rendering.DebugAction action)

Disassembly:
	0x039A92AC BL 0x1C171E0
	0x039A92B0 STR X30, [X31 - 0x30]!
	0x039A92B4 STP X22, X21, [X31 + 0x10]
	0x039A92B8 STP X20, X19, [X31 + 0x20]
	0x039A92BC ADRP X21, 0xA38000
	0x039A92C0 LDRB W8, [X21 + 0xBCD]
	0x039A92C4 MOV X19, X1
	0x039A92C8 MOV X20, X0
	0x039A92CC TBNZ X8, 0x0, 0x39A92E4
	0x039A92D0 ADRP X0, 0x74B000
	0x039A92D4 LDR X0, [X0 + 0xE70]
	0x039A92D8 BL 0x1C16CF4
	0x039A92DC MOVZ W8, 0x1
	0x039A92E0 STRB W8, [X21 + 0xBCD]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {14}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X8, [X8+32]
	009 Compare X8, 0
	010 JumpIfEqual {14}
	011 Move V0, [X8+48]
	012 Move X30, [X31+16]
	013 Return V0
	014 Call 0x1C17F20
	015 Call 0x1C17F28

Method: System.Boolean GetActionToggleDebugMenuWithTouch()

Disassembly:
	0x039A92E4 ADRP X22, 0x74B000
	0x039A92E8 LDR X21, [X20 + 0x40]!
	0x039A92EC LDR X22, [X22 + 0xE70]
	0x039A92F0 MOV X0, X21
	0x039A92F4 MOV X1, X19
	0x039A92F8 MOV X2, X31
	0x039A92FC BL 0x33C0FDC
	0x039A9300 MOV X8, X0
	0x039A9304 CBZ X0, 0x39A9318
	0x039A9308 LDR X1, [X22]
	0x039A930C LDR X9, [X8]
	0x039A9310 CMP X9, X1
	0x039A9314 B.NE 0x39A9344
	0x039A9318 MOV X0, X20
	0x039A931C MOV X1, X8
	0x039A9320 MOV X2, X21
	0x039A9324 BL 0x1C24138
	0x039A9328 CMP X21, X0
	0x039A932C MOV X21, X0
	0x039A9330 B.NE 0x39A92F0
	0x039A9334 LDP X20, X19, [X31 + 0x20]
	0x039A9338 LDP X22, X21, [X31 + 0x10]
	0x039A933C LDR X30, [X31], #0x30
	0x039A9340 RET
	0x039A9344 MOV X0, X8
	0x039A9348 BL 0x1C171E0
	0x039A934C STR X30, [X31 - 0x30]!
	0x039A9350 STP X22, X21, [X31 + 0x10]
	0x039A9354 STP X20, X19, [X31 + 0x20]
	0x039A9358 ADRP X21, 0xA38000
	0x039A935C LDRB W8, [X21 + 0xBCE]
	0x039A9360 MOV X19, X1
	0x039A9364 MOV X20, X0
	0x039A9368 TBNZ X8, 0x0, 0x39A9380
	0x039A936C ADRP X0, 0x74B000
	0x039A9370 LDR X0, [X0 + 0xE70]
	0x039A9374 BL 0x1C16CF4
	0x039A9378 MOVZ W8, 0x1
	0x039A937C STRB W8, [X21 + 0xBCE]
	0x039A9380 ADRP X22, 0x74B000
	0x039A9384 LDR X21, [X20 + 0x48]!
	0x039A9388 LDR X22, [X22 + 0xE70]
	0x039A938C MOV X0, X21
	0x039A9390 MOV X1, X19
	0x039A9394 MOV X2, X31
	0x039A9398 BL 0x33C0DE4
	0x039A939C MOV X8, X0
	0x039A93A0 CBZ X0, 0x39A93B4
	0x039A93A4 LDR X1, [X22]
	0x039A93A8 LDR X9, [X8]
	0x039A93AC CMP X9, X1
	0x039A93B0 B.NE 0x39A93E0
	0x039A93B4 MOV X0, X20
	0x039A93B8 MOV X1, X8
	0x039A93BC MOV X2, X21
	0x039A93C0 BL 0x1C24138
	0x039A93C4 CMP X21, X0
	0x039A93C8 MOV X21, X0
	0x039A93CC B.NE 0x39A938C
	0x039A93D0 LDP X20, X19, [X31 + 0x20]
	0x039A93D4 LDP X22, X21, [X31 + 0x10]
	0x039A93D8 LDR X30, [X31], #0x30
	0x039A93DC RET
	0x039A93E0 MOV X0, X8
	0x039A93E4 BL 0x1C171E0
	0x039A93E8 STR X30, [X31 - 0x30]!
	0x039A93EC STP X22, X21, [X31 + 0x10]
	0x039A93F0 STP X20, X19, [X31 + 0x20]
	0x039A93F4 ADRP X21, 0xA38000
	0x039A93F8 LDRB W8, [X21 + 0xBCF]
	0x039A93FC MOV X19, X1
	0x039A9400 MOV X20, X0
	0x039A9404 TBNZ X8, 0x0, 0x39A941C
	0x039A9408 ADRP X0, 0x74B000
	0x039A940C LDR X0, [X0 + 0xE70]
	0x039A9410 BL 0x1C16CF4
	0x039A9414 MOVZ W8, 0x1
	0x039A9418 STRB W8, [X21 + 0xBCF]
	0x039A941C ADRP X22, 0x74B000
	0x039A9420 LDR X21, [X20 + 0x48]!
	0x039A9424 LDR X22, [X22 + 0xE70]
	0x039A9428 MOV X0, X21
	0x039A942C MOV X1, X19
	0x039A9430 MOV X2, X31
	0x039A9434 BL 0x33C0FDC
	0x039A9438 MOV X8, X0
	0x039A943C CBZ X0, 0x39A9450
	0x039A9440 LDR X1, [X22]
	0x039A9444 LDR X9, [X8]
	0x039A9448 CMP X9, X1
	0x039A944C B.NE 0x39A947C
	0x039A9450 MOV X0, X20
	0x039A9454 MOV X1, X8
	0x039A9458 MOV X2, X21
	0x039A945C BL 0x1C24138
	0x039A9460 CMP X21, X0
	0x039A9464 MOV X21, X0
	0x039A9468 B.NE 0x39A9428
	0x039A946C LDP X20, X19, [X31 + 0x20]
	0x039A9470 LDP X22, X21, [X31 + 0x10]
	0x039A9474 LDR X30, [X31], #0x30
	0x039A9478 RET
	0x039A947C MOV X0, X8
	0x039A9480 BL 0x1C171E0
	0x039A9484 STP X30, X19, [X31 - 0x10]!
	0x039A9488 MOV X19, X0
	0x039A948C BL 0x399D46C
	0x039A9490 TBZ X0, 0x0, 0x39A94A0
	0x039A9494 MOVZ W0, 0x1
	0x039A9498 LDP X30, X19, [X31], #0x10
	0x039A949C RET
	0x039A94A0 MOV X0, X19
	0x039A94A4 LDP X30, X19, [X31], #0x10
	0x039A94A8 B 0x39A94AC
	0x039A94AC STP X30, X21, [X31 - 0x20]!
	0x039A94B0 STP X20, X19, [X31 + 0x10]
	0x039A94B4 ADRP X21, 0xA38000
	0x039A94B8 ADRP X20, 0x74A000
	0x039A94BC LDRB W8, [X21 + 0xBE6]
	0x039A94C0 LDR X20, [X20 + 0x598]
	0x039A94C4 MOV X19, X0
	0x039A94C8 TBNZ X8, 0x0, 0x39A94E0
	0x039A94CC ADRP X0, 0x74A000
	0x039A94D0 LDR X0, [X0 + 0x598]
	0x039A94D4 BL 0x1C16CF4
	0x039A94D8 MOVZ W8, 0x1
	0x039A94DC STRB W8, [X21 + 0xBE6]
	0x039A94E0 LDR X0, [X20]
	0x039A94E4 LDR X20, [X19 + 0x78]
	0x039A94E8 LDR W8, [X0 + 0xE0]
	0x039A94EC CBNZ W8, 0x39A94F4
	0x039A94F0 BL 0x1C16DFC
	0x039A94F4 MOV X0, X20
	0x039A94F8 MOV X1, X31
	0x039A94FC MOV X2, X31
	0x039A9500 BL 0x3C354F8
	0x039A9504 TBZ X0, 0x0, 0x39A9520
	0x039A9508 LDR X0, [X19 + 0x70]
	0x039A950C CBZ X0, 0x39A9530
	0x039A9510 LDP X20, X19, [X31 + 0x10]
	0x039A9514 MOV X1, X31
	0x039A9518 LDP X30, X21, [X31], #0x20
	0x039A951C B 0x3C35834
	0x039A9520 LDP X20, X19, [X31 + 0x10]
	0x039A9524 MOV W0, W31
	0x039A9528 LDP X30, X21, [X31], #0x20
	0x039A952C RET
	0x039A9530 BL 0x1C16F20
	0x039A9534 STP X30, X25, [X31 - 0x40]!
	0x039A9538 STP X24, X23, [X31 + 0x10]
	0x039A953C STP X22, X21, [X31 + 0x20]
	0x039A9540 STP X20, X19, [X31 + 0x30]
	0x039A9544 ADRP X24, 0xA38000
	0x039A9548 ADRP X25, 0x79B000
	0x039A954C ADRP X20, 0x7A8000
	0x039A9550 ADRP X23, 0x7A8000
	0x039A9554 ADRP X21, 0x7A8000
	0x039A9558 ADRP X22, 0x7A8000
	0x039A955C LDRB W8, [X24 + 0xBD0]
	0x039A9560 LDR X25, [X25 + 0xF68]
	0x039A9564 LDR X20, [X20 + 0xA50]
	0x039A9568 LDR X23, [X23 + 0xA58]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+128], X24
	004 Move [X31+136], X23
	005 Move [X31+144], X22
	006 Move [X31+152], X21
	007 Move [X31+160], X20
	008 Move [X31+168], X19
	009 Move X19, 0xA39000
	010 Move W8, [X19+3013]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x7A9000
	016 Move X0, [X0+2424]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A9000
	019 Move X0, [X0+2432]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A9000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move X0, 0x7A9000
	025 Move X0, [X0+2448]
	026 Call 0x1C17CF4
	027 Move X0, 0x7A9000
	028 Move X0, [X0+2456]
	029 Call 0x1C17CF4
	030 Move X0, 0x7A9000
	031 Move X0, [X0+2464]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A9000
	034 Move X0, [X0+2472]
	035 Call 0x1C17CF4
	036 Move X0, 0x773000
	037 Move X0, [X0+1576]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+3013], W8
	041 Move X0, X31
	042 Move [X31+64], X31
	043 Move [X31+72], X31
	044 Move [X31+80], X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Call EnhancedTouchSupport.get_enabled
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {127}
	053 Move X21, 0x773000
	054 Move X21, [X21+1576]
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X31
	061 Call Touch.get_activeTouches
	062 Move X8, X1
	063 ShiftRight X8, 32
	064 And X8, X8, 0x7FFFFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X31+96], X0
	067 Move [X31+104], X1
	068 Move [X31+120], X31
	069 Move X8, 0x7A9000
	070 Move X8, [X8+2464]
	071 Add X0, X31, 96
	072 Move X1, [X8]
	073 Add X8, X31, 8
	074 Call ReadOnlyArray`1<Touch>.GetEnumerator, X0
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 Move X8, [X31+24]
	077 Move X22, 0x7A9000
	078 Move X23, 0x7A9000
	079 Move X22, [X22+2432]
	080 Move X23, [X23+2440]
	081 Move [X31+4], V0
	082 Move [X31+80], X8
	083 Move X24, 0x7A9000
	084 Move X24, [X24+2456]
	085 Move X1, [X22]
	086 Add X0, X31, 64
	087 Call Enumerator<Touch>.MoveNext, X0
	088 Move W19, W0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {128}
	093 Move X1, [X23]
	094 Add X8, X31, 8
	095 Add X0, X31, 64
	096 Call Enumerator<Touch>.get_Current, X0
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 Move X8, [X31+24]
	099 Move W9, [X31+120]
	100 Move [X31+2], V0
	101 Move [X31+48], X8
	102 Compare W9, 0
	103 JumpIfEqual {117}
	104 Move X0, [X21]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Add X0, X31, 32
	110 Move X1, X31
	111 Call Touch.get_phase, X0
	112 Move X1, [X24]
	113 Move W20, W0
	114 Add X0, X31, 120
	115 Call Nullable`1<Int32Enum>.get_Value, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, [X21]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Add X0, X31, 32
	123 Move X1, X31
	124 Call Touch.get_tapCount, X0
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W20, 7
	127 Move W0, W31
	128 Move W20, 3
	129 Move X8, 0x7A9000
	130 Move X8, [X8+2424]
	131 Add X0, X31, 64
	132 Move X1, [X8]
	133 Call Enumerator<Touch>.Dispose, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CSET not yet implemented."
	136 And W0, W19, W8
	137 Move X20, [X31+160]
	138 Move X19, [X31+168]
	139 Move X22, [X31+144]
	140 Move X21, [X31+152]
	141 Move X24, [X31+128]
	142 Move X23, [X31+136]
	143 Move X30, [X31+112]
	144 Add X31, X31, 176
	145 Return X0
	146 Move X19, X0
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, X19
	149 Call 0x3EB2AD0
	150 Move X20, [X0]
	151 Call 0x3EB2AE0
	152 Move X8, 0x7A9000
	153 Move X8, [X8+2424]
	154 Add X0, X31, 64
	155 Move X1, [X8]
	156 Call Enumerator<Touch>.Dispose, X0
	157 Compare X20, 0
	158 JumpIfNotEqual {161}
	159 Move W19, W31
	160 Move X20, X31
	161 Move X0, X20
	162 Call 0x1C17F18
	163 Move X19, X0
	164 Move X8, 0x7A9000
	165 Move X8, [X8+2424]
	166 Move X1, [X8]
	167 Add X0, X31, 64
	168 Call Enumerator<Touch>.Dispose, X0
	169 Compare X20, 0
	170 JumpIfNotEqual {173}
	171 Move X0, X19
	172 Call 0x1D2D690
	173 Move X0, X20
	174 Call 0x1C17F18
	175 Call 0x1991590

Method: System.Boolean GetActionReleaseScrollTarget()

Disassembly:
	0x039A956C LDR X21, [X21 + 0xA60]
	0x039A9570 LDR X22, [X22 + 0xA68]
	0x039A9574 MOV X19, X0
	0x039A9578 TBNZ X8, 0x0, 0x39A95FC
	0x039A957C ADRP X0, 0x74A000
	0x039A9580 LDR X0, [X0 + 0xD28]
	0x039A9584 BL 0x1C16CF4
	0x039A9588 ADRP X0, 0x74B000
	0x039A958C LDR X0, [X0 + 0xE70]
	0x039A9590 BL 0x1C16CF4
	0x039A9594 ADRP X0, 0x79B000
	0x039A9598 LDR X0, [X0 + 0xF68]
	0x039A959C BL 0x1C16CF4
	0x039A95A0 ADRP X0, 0x7A8000
	0x039A95A4 LDR X0, [X0 + 0xA60]
	0x039A95A8 BL 0x1C16CF4
	0x039A95AC ADRP X0, 0x7A8000
	0x039A95B0 LDR X0, [X0 + 0xA58]
	0x039A95B4 BL 0x1C16CF4
	0x039A95B8 ADRP X0, 0x7A8000
	0x039A95BC LDR X0, [X0 + 0xA70]
	0x039A95C0 BL 0x1C16CF4
	0x039A95C4 ADRP X0, 0x7A8000
	0x039A95C8 LDR X0, [X0 + 0xA78]
	0x039A95CC BL 0x1C16CF4
	0x039A95D0 ADRP X0, 0x7A8000
	0x039A95D4 LDR X0, [X0 + 0xA68]
	0x039A95D8 BL 0x1C16CF4
	0x039A95DC ADRP X0, 0x7A8000
	0x039A95E0 LDR X0, [X0 + 0xA80]
	0x039A95E4 BL 0x1C16CF4
	0x039A95E8 ADRP X0, 0x7A8000
	0x039A95EC LDR X0, [X0 + 0xA50]
	0x039A95F0 BL 0x1C16CF4
	0x039A95F4 MOVZ W8, 0x1
	0x039A95F8 STRB W8, [X24 + 0xBD0]
	0x039A95FC LDR X0, [X25]
	0x039A9600 BL 0x1C16F10
	0x039A9604 LDR X1, [X20]
	0x039A9608 MOV X2, X31
	0x039A960C MOV X20, X0
	0x039A9610 BL 0x373A4F8
	0x039A9614 STR X20, [X19 + 0x20]
	0x039A9618 LDR X0, [X23]
	0x039A961C BL 0x1C16F10
	0x039A9620 LDR X1, [X21]
	0x039A9624 MOV X20, X0
	0x039A9628 BL 0x301B7C4
	0x039A962C STR X20, [X19 + 0x30]
	0x039A9630 LDR X0, [X22]
	0x039A9634 LDR W8, [X0 + 0xE0]
	0x039A9638 CBNZ W8, 0x39A9644
	0x039A963C BL 0x1C16DFC
	0x039A9640 LDR X0, [X22]
	0x039A9644 LDR X8, [X0 + 0xB8]
	0x039A9648 LDR X20, [X8 + 0x8]
	0x039A964C CBNZ X20, 0x39A96A0
	0x039A9650 LDR W8, [X0 + 0xE0]
	0x039A9654 CBNZ W8, 0x39A9660
	0x039A9658 BL 0x1C16DFC
	0x039A965C LDR X0, [X22]
	0x039A9660 ADRP X9, 0x74A000
	0x039A9664 LDR X8, [X0 + 0xB8]
	0x039A9668 LDR X9, [X9 + 0xD28]
	0x039A966C LDR X21, [X8]
	0x039A9670 LDR X0, [X9]
	0x039A9674 BL 0x1C16F10
	0x039A9678 ADRP X8, 0x7A8000
	0x039A967C LDR X8, [X8 + 0xA70]
	0x039A9680 MOV X1, X21
	0x039A9684 MOV X3, X31
	0x039A9688 MOV X20, X0
	0x039A968C LDR X2, [X8]
	0x039A9690 BL 0x29818C8
	0x039A9694 LDR X0, [X22]
	0x039A9698 LDR X8, [X0 + 0xB8]
	0x039A969C STR X20, [X8 + 0x8]
	0x039A96A0 STR X20, [X19 + 0x38]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA39000
	007 Move W8, [X19+3014]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x773000
	013 Move X0, [X0+1368]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3014], W8
	017 Move X19, 0xA31000
	018 Move W8, [X19+2071]
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x773000
	022 Move X0, [X0+1320]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2071], W8
	026 Move X8, 0x773000
	027 Move X8, [X8+1320]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Compare X8, 0
	032 JumpIfEqual {66}
	033 Move X0, [X8+416]
	034 Compare X0, 0
	035 JumpIfEqual {90}
	036 Move X8, 0x773000
	037 Move X8, [X8+1368]
	038 Move X1, [X8]
	039 Call InputControl`1<Vector2>.ReadValue, X0
	040 Move X19, 0xA31000
	041 Move W8, [X19+1935]
	042 Move V8, V0
	043 Move V9, V1
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x753000
	047 Move X0, [X0+3848]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+1935], W8
	051 Move X8, 0x753000
	052 Move X8, [X8+3848]
	053 Move X8, [X8]
	054 Move X8, [X8+184]
	055 Move S0, [X8]
	056 Move S1, [X8+4]
	057 Move X8, -49016832
	058 Move V2, [X8+3872]
	059 Subtract S0, S8, S0
	060 Subtract S1, S9, S1
	061 Multiply S0, S0, S0
	062 Multiply S1, S1, S1
	063 Add S0, S0, S1
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move W19, W31
	067 Move X20, 0xA39000
	068 Move W8, [X20+568]
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x79E000
	072 Move X0, [X0+3416]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+568], W8
	076 Move X8, 0x79E000
	077 Move X8, [X8+3416]
	078 Move X30, [X31+16]
	079 Move X8, [X8]
	080 Move X8, [X8+184]
	081 Move X8, [X8]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSET not yet implemented."
	084 Or W0, W19, W8
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move D9, [X31+48]
	088 Move D8, [X31+56]
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void RegisterInputs()

Disassembly:
	0x039A96A4 LDR W8, [X0 + 0xE0]
	0x039A96A8 CBNZ W8, 0x39A96B4
	0x039A96AC BL 0x1C16DFC
	0x039A96B0 LDR X0, [X22]
	0x039A96B4 LDR X8, [X0 + 0xB8]
	0x039A96B8 ADRP X23, 0x7A8000
	0x039A96BC LDR X20, [X8 + 0x10]
	0x039A96C0 LDR X23, [X23 + 0xA80]
	0x039A96C4 CBNZ X20, 0x39A9718
	0x039A96C8 LDR W8, [X0 + 0xE0]
	0x039A96CC CBNZ W8, 0x39A96D8
	0x039A96D0 BL 0x1C16DFC
	0x039A96D4 LDR X0, [X22]
	0x039A96D8 ADRP X9, 0x74B000
	0x039A96DC LDR X8, [X0 + 0xB8]
	0x039A96E0 LDR X9, [X9 + 0xE70]
	0x039A96E4 LDR X21, [X8]
	0x039A96E8 LDR X0, [X9]
	0x039A96EC BL 0x1C16F10
	0x039A96F0 ADRP X8, 0x7A8000
	0x039A96F4 LDR X8, [X8 + 0xA78]
	0x039A96F8 MOV X1, X21
	0x039A96FC MOV X3, X31
	0x039A9700 MOV X20, X0
	0x039A9704 LDR X2, [X8]
	0x039A9708 BL 0x3314368
	0x039A970C LDR X8, [X22]
	0x039A9710 LDR X8, [X8 + 0xB8]
	0x039A9714 STR X20, [X8 + 0x10]
	0x039A9718 STR X20, [X19 + 0x40]
	0x039A971C LDR X0, [X23]
	0x039A9720 BL 0x1C16F10
	0x039A9724 MOV X1, X31
	0x039A9728 MOV X20, X0
	0x039A972C BL 0x33BDD8C
	0x039A9730 CBZ X20, 0x39A9780
	0x039A9734 MOVZ W21, 0x1
	0x039A9738 STR W31, [X20 + 0x10]
	0x039A973C STR X20, [X19 + 0x80]
	0x039A9740 STRB W21, [X19 + 0x88]
	0x039A9744 LDR X0, [X23]
	0x039A9748 BL 0x1C16F10
	0x039A974C MOV X1, X31
	0x039A9750 MOV X20, X0
	0x039A9754 BL 0x33BDD8C
	0x039A9758 CBZ X20, 0x39A9780
	0x039A975C STR W21, [X20 + 0x10]
	0x039A9760 STR X20, [X19 + 0x90]
	0x039A9764 MOV X0, X19
	0x039A9768 LDP X20, X19, [X31 + 0x30]
	0x039A976C LDP X22, X21, [X31 + 0x20]
	0x039A9770 LDP X24, X23, [X31 + 0x10]
	0x039A9774 MOV X1, X31
	0x039A9778 LDP X30, X25, [X31], #0x40
	0x039A977C B 0x33BDD8C
	0x039A9780 BL 0x1C16F20
	0x039A9784 MOV X1, X31
	0x039A9788 B 0x33BDD8C
	0x039A978C STP X30, X19, [X31 - 0x10]!
	0x039A9790 LDR X8, [X0 + 0x48]
	0x039A9794 MOV X19, X0
	0x039A9798 CBZ X8, 0x39A97AC
	0x039A979C LDR X9, [X8 + 0x18]
	0x039A97A0 LDR X0, [X8 + 0x40]
	0x039A97A4 LDR X1, [X8 + 0x28]
	0x039A97A8 BLR X9
	0x039A97AC MOV X0, X19
	0x039A97B0 LDP X30, X19, [X31], #0x10
	0x039A97B4 B 0x39A5654
	0x039A97B8 SUB X31, X31, 0x50
	0x039A97BC STR X30, [X31 + 0x20]
	0x039A97C0 STP X22, X21, [X31 + 0x30]
	0x039A97C4 STP X20, X19, [X31 + 0x40]
	0x039A97C8 ADRP X20, 0xA38000
	0x039A97CC LDRB W8, [X20 + 0xBD3]
	0x039A97D0 MOV X19, X0
	0x039A97D4 TBNZ X8, 0x0, 0x39A9810
	0x039A97D8 ADRP X0, 0x7A8000
	0x039A97DC LDR X0, [X0 + 0xA88]
	0x039A97E0 BL 0x1C16CF4
	0x039A97E4 ADRP X0, 0x7A8000
	0x039A97E8 LDR X0, [X0 + 0xA90]
	0x039A97EC BL 0x1C16CF4
	0x039A97F0 ADRP X0, 0x7A8000
	0x039A97F4 LDR X0, [X0 + 0xA98]
	0x039A97F8 BL 0x1C16CF4
	0x039A97FC ADRP X0, 0x7A8000
	0x039A9800 LDR X0, [X0 + 0xAA0]
	0x039A9804 BL 0x1C16CF4
	0x039A9808 MOVZ W8, 0x1
	0x039A980C STRB W8, [X20 + 0xBD3]
	0x039A9810 STP X31, X31, [X31 + 0x8]
	0x039A9814 STR X31, [X31 + 0x18]
	0x039A9818 LDR X0, [X19 + 0x30]
	0x039A981C CBZ X0, 0x39A98A0
	0x039A9820 ADRP X8, 0x7A8000
	0x039A9824 LDR X8, [X8 + 0xAA0]
	0x039A9828 ADRP X21, 0x7A8000
	0x039A982C ADRP X20, 0x7A8000
	0x039A9830 LDR X1, [X8]
	0x039A9834 LDR X21, [X21 + 0xA90]
	0x039A9838 LDR X20, [X20 + 0xA88]
	0x039A983C ADD X8, X31, 0x8
	0x039A9840 BL 0x301CB58
	0x039A9844 MOVZ W19, 0x11
	0x039A9848 MOVZ W22, 0x17
	0x039A984C LDR X1, [X21]
	0x039A9850 ADD X0, X31, 0x8
	0x039A9854 BL 0x2BC4350
	0x039A9858 TBZ X0, 0x0, 0x39A9878
	0x039A985C LDR X0, [X31 + 0x18]
	0x039A9860 CBZ X0, 0x39A989C
	0x039A9864 LDR X8, [X0]
	0x039A9868 LDP X9, X1, [X8 + 0x158]
	0x039A986C BLR X9
	0x039A9870 MADD W19, W19, W22, W0
	0x039A9874 B 0x39A984C
	0x039A9878 LDR X1, [X20]
	0x039A987C ADD X0, X31, 0x8
	0x039A9880 BL 0x2BC434C
	0x039A9884 MOV W0, W19
	0x039A9888 LDP X20, X19, [X31 + 0x40]
	0x039A988C LDP X22, X21, [X31 + 0x30]
	0x039A9890 LDR X30, [X31 + 0x20]
	0x039A9894 ADD X31, X31, 0x50
	0x039A9898 RET
	0x039A989C BL 0x1C16F20
	0x039A98A0 BL 0x1C16F20
	0x039A98A4 B 0x39A98AC
	0x039A98A8 B 0x39A98AC
	0x039A98AC MOV X20, X0
	0x039A98B0 CMP W1, 0x1
	0x039A98B4 B.NE 0x39A98E8
	0x039A98B8 MOV X0, X20
	0x039A98BC BL 0x3EB1AD0
	0x039A98C0 LDR X21, [X0]
	0x039A98C4 BL 0x3EB1AE0
	0x039A98C8 ADRP X8, 0x7A8000
	0x039A98CC LDR X8, [X8 + 0xA88]
	0x039A98D0 ADD X0, X31, 0x8
	0x039A98D4 LDR X1, [X8]
	0x039A98D8 BL 0x2BC434C
	0x039A98DC CBZ X21, 0x39A9884
	0x039A98E0 MOV X0, X21
	0x039A98E4 BL 0x1C16F18
	0x039A98E8 MOV X21, X31
	0x039A98EC B 0x39A98F4
	0x039A98F0 MOV X20, X0
	0x039A98F4 ADRP X8, 0x7A8000
	0x039A98F8 LDR X8, [X8 + 0xA88]
	0x039A98FC LDR X1, [X8]
	0x039A9900 ADD X0, X31, 0x8
	0x039A9904 BL 0x2BC434C
	0x039A9908 CBNZ X21, 0x39A9914
	0x039A990C MOV X0, X20
	0x039A9910 BL 0x1D2C690
	0x039A9914 MOV X0, X21
	0x039A9918 BL 0x1C16F18
	0x039A991C BL 0x1990590
	0x039A9920 STR X30, [X31 - 0x20]!
	0x039A9924 STP X20, X19, [X31 + 0x10]
	0x039A9928 CBZ X1, 0x39A9950
	0x039A992C MOV X19, X1
	0x039A9930 MOV X20, X0
	0x039A9934 MOV X0, X1
	0x039A9938 MOV X1, X31
	0x039A993C BL 0x3C32ECC
	0x039A9940 STP X0, X19, [X20 + 0x60]
	0x039A9944 LDP X20, X19, [X31 + 0x10]
	0x039A9948 LDR X30, [X31], #0x20
	0x039A994C RET
	0x039A9950 BL 0x1C16F20
	0x039A9954 STR X30, [X31 - 0x10]!
	0x039A9958 LDR X0, [X0 + 0x68]
	0x039A995C CBZ X0, 0x39A9970
	0x039A9960 AND W2, W2, 0x1
	0x039A9964 MOV X3, X31
	0x039A9968 LDR X30, [X31], #0x10
	0x039A996C B 0x39F8560
	0x039A9970 BL 0x1C16F20
	0x039A9974 STR X30, [X31 - 0x30]!
	0x039A9978 STP X22, X21, [X31 + 0x10]
	0x039A997C STP X20, X19, [X31 + 0x20]
	0x039A9980 ADRP X22, 0xA38000
	0x039A9984 ADRP X21, 0x74A000
	0x039A9988 LDRB W8, [X22 + 0xBD4]
	0x039A998C LDR X21, [X21 + 0x598]
	0x039A9990 MOV X19, X1
	0x039A9994 MOV X20, X0
	0x039A9998 TBNZ X8, 0x0, 0x39A99B0
	0x039A999C ADRP X0, 0x74A000
	0x039A99A0 LDR X0, [X0 + 0x598]
	0x039A99A4 BL 0x1C16CF4
	0x039A99A8 MOVZ W8, 0x1
	0x039A99AC STRB W8, [X22 + 0xBD4]
	0x039A99B0 LDR X0, [X21]
	0x039A99B4 LDR X21, [X20 + 0x68]
	0x039A99B8 LDR W8, [X0 + 0xE0]
	0x039A99BC CBNZ W8, 0x39A99C4
	0x039A99C0 BL 0x1C16DFC
	0x039A99C4 MOV X0, X21
	0x039A99C8 MOV X1, X31
	0x039A99CC MOV X2, X31
	0x039A99D0 BL 0x3C354F8
	0x039A99D4 TBZ X0, 0x0, 0x39A99F8
	0x039A99D8 LDR X0, [X20 + 0x68]
	0x039A99DC CBZ X0, 0x39A9A08
	0x039A99E0 MOV X1, X19
	0x039A99E4 LDP X20, X19, [X31 + 0x20]
	0x039A99E8 LDP X22, X21, [X31 + 0x10]
	0x039A99EC MOV X2, X31
	0x039A99F0 LDR X30, [X31], #0x30
	0x039A99F4 B 0x39F86D4
	0x039A99F8 LDP X20, X19, [X31 + 0x20]
	0x039A99FC LDP X22, X21, [X31 + 0x10]
	0x039A9A00 LDR X30, [X31], #0x30
	0x039A9A04 RET
	0x039A9A08 BL 0x1C16F20
	0x039A9A0C STP X30, X21, [X31 - 0x20]!
	0x039A9A10 STP X20, X19, [X31 + 0x10]
	0x039A9A14 ADRP X20, 0xA38000
	0x039A9A18 ADRP X21, 0x74A000
	0x039A9A1C LDRB W8, [X20 + 0xBD5]
	0x039A9A20 LDR X21, [X21 + 0x598]
	0x039A9A24 MOV X19, X0
	0x039A9A28 TBNZ X8, 0x0, 0x39A9A88
	0x039A9A2C ADRP X0, 0x7A8000
	0x039A9A30 LDR X0, [X0 + 0xAA8]
	0x039A9A34 BL 0x1C16CF4
	0x039A9A38 ADRP X0, 0x7A8000
	0x039A9A3C LDR X0, [X0 + 0xAB0]
	0x039A9A40 BL 0x1C16CF4
	0x039A9A44 ADRP X0, 0x7A8000
	0x039A9A48 LDR X0, [X0 + 0xAB8]
	0x039A9A4C BL 0x1C16CF4
	0x039A9A50 ADRP X0, 0x74A000
	0x039A9A54 LDR X0, [X0 + 0x598]
	0x039A9A58 BL 0x1C16CF4
	0x039A9A5C ADRP X0, 0x7A8000
	0x039A9A60 LDR X0, [X0 + 0xAC0]
	0x039A9A64 BL 0x1C16CF4
	0x039A9A68 ADRP X0, 0x7A8000
	0x039A9A6C LDR X0, [X0 + 0xAC8]
	0x039A9A70 BL 0x1C16CF4
	0x039A9A74 ADRP X0, 0x7A8000
	0x039A9A78 LDR X0, [X0 + 0xAD0]
	0x039A9A7C BL 0x1C16CF4
	0x039A9A80 MOVZ W8, 0x1
	0x039A9A84 STRB W8, [X20 + 0xBD5]
	0x039A9A88 LDR X0, [X21]
	0x039A9A8C LDR X20, [X19 + 0x78]
	0x039A9A90 LDR W8, [X0 + 0xE0]
	0x039A9A94 CBNZ W8, 0x39A9A9C
	0x039A9A98 BL 0x1C16DFC
	0x039A9A9C MOV X0, X20
	0x039A9AA0 MOV X1, X31
	0x039A9AA4 MOV X2, X31
	0x039A9AA8 BL 0x3C3883C
	0x039A9AAC TBZ X0, 0x0, 0x39A9BE4
	0x039A9AB0 LDR X0, [X21]
	0x039A9AB4 ADRP X20, 0x7A8000
	0x039A9AB8 LDR W8, [X0 + 0xE0]
	0x039A9ABC LDR X20, [X20 + 0xAB0]
	0x039A9AC0 CBNZ W8, 0x39A9AC8
	0x039A9AC4 BL 0x1C16DFC
	0x039A9AC8 LDR X0, [X20]
	0x039A9ACC BL 0x222D02C
	0x039A9AD0 MOV X1, X31
	0x039A9AD4 MOV X2, X31
	0x039A9AD8 MOV X20, X0
	0x039A9ADC BL 0x3C3883C
	0x039A9AE0 TBZ X0, 0x0, 0x39A9BB8
	0x039A9AE4 ADRP X8, 0x7A8000
	0x039A9AE8 ADRP X9, 0x7A8000
	0x039A9AEC LDR X8, [X8 + 0xAD0]
	0x039A9AF0 LDR X9, [X9 + 0xAC0]
	0x039A9AF4 LDR X0, [X8]
	0x039A9AF8 LDR X1, [X9]
	0x039A9AFC BL 0x2241FB8
	0x039A9B00 LDR X8, [X21]
	0x039A9B04 MOV X20, X0
	0x039A9B08 LDR W9, [X8 + 0xE0]
	0x039A9B0C CBNZ W9, 0x39A9B18
	0x039A9B10 MOV X0, X8
	0x039A9B14 BL 0x1C16DFC
	0x039A9B18 ADRP X8, 0x7A8000
	0x039A9B1C LDR X8, [X8 + 0xAB8]
	0x039A9B20 MOV X0, X20
	0x039A9B24 LDR X1, [X8]
	0x039A9B28 BL 0x222D35C
	0x039A9B2C CBZ X0, 0x39A9BF0
	0x039A9B30 MOV X1, X31
	0x039A9B34 BL 0x3C32ECC
	0x039A9B38 STR X0, [X19 + 0x70]
	0x039A9B3C CBZ X0, 0x39A9BF0
	0x039A9B40 ADRP X8, 0x7A8000
	0x039A9B44 LDR X8, [X8 + 0xAC8]
	0x039A9B48 MOV X2, X31
	0x039A9B4C LDR X1, [X8]
	0x039A9B50 BL 0x3C38A84
	0x039A9B54 LDR X0, [X19 + 0x70]
	0x039A9B58 CBZ X0, 0x39A9BF0
	0x039A9B5C MOV X1, X31
	0x039A9B60 BL 0x3C356F8
	0x039A9B64 ADRP X21, 0xA2F000
	0x039A9B68 LDRB W8, [X21 + 0x783]
	0x039A9B6C MOV X20, X0
	0x039A9B70 CBNZ W8, 0x39A9B88
	0x039A9B74 ADRP X0, 0x74A000
	0x039A9B78 LDR X0, [X0 + 0x5A0]
	0x039A9B7C BL 0x1C16CF4
	0x039A9B80 MOVZ W8, 0x1
	0x039A9B84 STRB W8, [X21 + 0x783]
	0x039A9B88 CBZ X20, 0x39A9BF0
	0x039A9B8C ADRP X8, 0x74A000
	0x039A9B90 LDR X8, [X8 + 0x5A0]
	0x039A9B94 MOV X0, X20
	0x039A9B98 MOV X1, X31
	0x039A9B9C LDR X8, [X8]
	0x039A9BA0 LDR X8, [X8 + 0xB8]
	0x039A9BA4 LDP S1, S2, [X8 + 0x4]
	0x039A9BA8 LDR V0, [X8]
	0x039A9BAC BL 0x3C3EC04
	0x039A9BB0 LDR X0, [X19 + 0x70]
	0x039A9BB4 B 0x39A9BCC
	0x039A9BB8 CBZ X20, 0x39A9BF0
	0x039A9BBC MOV X0, X20
	0x039A9BC0 MOV X1, X31
	0x039A9BC4 BL 0x3C32ECC
	0x039A9BC8 STR X0, [X19 + 0x70]
	0x039A9BCC CBZ X0, 0x39A9BF0
	0x039A9BD0 ADRP X8, 0x7A8000
	0x039A9BD4 LDR X8, [X8 + 0xAA8]
	0x039A9BD8 LDR X1, [X8]
	0x039A9BDC BL 0x21E52E4
	0x039A9BE0 STR X0, [X19 + 0x78]
	0x039A9BE4 LDP X20, X19, [X31 + 0x10]
	0x039A9BE8 LDP X30, X21, [X31], #0x20
	0x039A9BEC RET
	0x039A9BF0 BL 0x1C16F20
	0x039A9BF4 SUB X31, X31, 0x60
	0x039A9BF8 STP X30, X27, [X31 + 0x10]
	0x039A9BFC STP X26, X25, [X31 + 0x20]
	0x039A9C00 STP X24, X23, [X31 + 0x30]
	0x039A9C04 STP X22, X21, [X31 + 0x40]
	0x039A9C08 STP X20, X19, [X31 + 0x50]
	0x039A9C0C ADRP X22, 0xA38000
	0x039A9C10 LDRB W8, [X22 + 0xBD6]
	0x039A9C14 MOV X21, X2
	0x039A9C18 MOV X20, X1
	0x039A9C1C MOV X19, X0
	0x039A9C20 TBNZ X8, 0x0, 0x39A9CD4
	0x039A9C24 ADRP X0, 0x7A7000
	0x039A9C28 LDR X0, [X0 + 0x758]
	0x039A9C2C BL 0x1C16CF4
	0x039A9C30 ADRP X0, 0x74A000
	0x039A9C34 LDR X0, [X0 + 0xA28]
	0x039A9C38 BL 0x1C16CF4
	0x039A9C3C ADRP X0, 0x7A8000
	0x039A9C40 LDR X0, [X0 + 0xAD8]
	0x039A9C44 BL 0x1C16CF4
	0x039A9C48 ADRP X0, 0x7A8000
	0x039A9C4C LDR X0, [X0 + 0xAE0]
	0x039A9C50 BL 0x1C16CF4
	0x039A9C54 ADRP X0, 0x74A000
	0x039A9C58 LDR X0, [X0 + 0xE00]
	0x039A9C5C BL 0x1C16CF4
	0x039A9C60 ADRP X0, 0x7A8000
	0x039A9C64 LDR X0, [X0 + 0xAE8]
	0x039A9C68 BL 0x1C16CF4
	0x039A9C6C ADRP X0, 0x74A000
	0x039A9C70 LDR X0, [X0 + 0xE18]
	0x039A9C74 BL 0x1C16CF4
	0x039A9C78 ADRP X0, 0x74B000
	0x039A9C7C LDR X0, [X0 + 0x470]
	0x039A9C80 BL 0x1C16CF4
	0x039A9C84 ADRP X0, 0x7A8000
	0x039A9C88 LDR X0, [X0 + 0xAF0]
	0x039A9C8C BL 0x1C16CF4
	0x039A9C90 ADRP X0, 0x7A8000
	0x039A9C94 LDR X0, [X0 + 0xAF8]
	0x039A9C98 BL 0x1C16CF4
	0x039A9C9C ADRP X0, 0x7A8000
	0x039A9CA0 LDR X0, [X0 + 0xA68]
	0x039A9CA4 BL 0x1C16CF4
	0x039A9CA8 ADRP X0, 0x7A8000
	0x039A9CAC LDR X0, [X0 + 0x878]
	0x039A9CB0 BL 0x1C16CF4
	0x039A9CB4 ADRP X0, 0x7A8000
	0x039A9CB8 LDR X0, [X0 + 0x658]
	0x039A9CBC BL 0x1C16CF4
	0x039A9CC0 ADRP X0, 0x7A8000
	0x039A9CC4 LDR X0, [X0 + 0xB00]
	0x039A9CC8 BL 0x1C16CF4
	0x039A9CCC MOVZ W8, 0x1
	0x039A9CD0 STRB W8, [X22 + 0xBD6]
	0x039A9CD4 CBZ X20, 0x39AA074
	0x039A9CD8 ADRP X24, 0x7A8000
	0x039A9CDC LDR X24, [X24 + 0x658]
	0x039A9CE0 MOV X0, X19
	0x039A9CE4 BL 0x39A9A0C
	0x039A9CE8 LDR X8, [X20]
	0x039A9CEC LDR X10, [X24]
	0x039A9CF0 LDRB W9, [X8 + 0x130]
	0x039A9CF4 LDRB W11, [X10 + 0x130]
	0x039A9CF8 CMP W9, W11
	0x039A9CFC B.CC 0x39A9D14
	0x039A9D00 LDR X12, [X8 + 0xC8]
	0x039A9D04 ADD X11, X12, X11, 0x3, LSL
	0x039A9D08 LDUR X11, [X11 - 0x8]
	0x039A9D0C CMP X11, X10
	0x039A9D10 B.EQ 0x39A9F74
	0x039A9D14 ADRP X25, 0x7A8000
	0x039A9D18 LDR X25, [X25 + 0x878]
	0x039A9D1C LDR X10, [X25]
	0x039A9D20 LDRB W11, [X10 + 0x130]
	0x039A9D24 CMP W9, W11
	0x039A9D28 B.CC 0x39A9D40
	0x039A9D2C LDR X12, [X8 + 0xC8]
	0x039A9D30 ADD X11, X12, X11, 0x3, LSL
	0x039A9D34 LDUR X11, [X11 - 0x8]
	0x039A9D38 CMP X11, X10
	0x039A9D3C B.EQ 0x39A9FA4
	0x039A9D40 ADRP X10, 0x7A7000
	0x039A9D44 LDR X10, [X10 + 0x758]
	0x039A9D48 LDR X10, [X10]
	0x039A9D4C LDRB W11, [X10 + 0x130]
	0x039A9D50 CMP W9, W11
	0x039A9D54 B.CC 0x39AA048
	0x039A9D58 LDR X8, [X8 + 0xC8]
	0x039A9D5C ADD X8, X8, X11, 0x3, LSL
	0x039A9D60 LDUR X8, [X8 - 0x8]
	0x039A9D64 CMP X8, X10
	0x039A9D68 B.NE 0x39AA048
	0x039A9D6C ADRP X26, 0x7A8000
	0x039A9D70 LDR X26, [X26 + 0xA68]
	0x039A9D74 LDR X21, [X20 + 0x48]
	0x039A9D78 LDR X0, [X26]
	0x039A9D7C LDR W8, [X0 + 0xE0]
	0x039A9D80 CBNZ W8, 0x39A9D8C
	0x039A9D84 BL 0x1C16DFC
	0x039A9D88 LDR X0, [X26]
	0x039A9D8C LDR X8, [X0 + 0xB8]
	0x039A9D90 LDR X22, [X8 + 0x18]
	0x039A9D94 CBNZ X22, 0x39A9DE8
	0x039A9D98 LDR W8, [X0 + 0xE0]
	0x039A9D9C CBNZ W8, 0x39A9DA8
	0x039A9DA0 BL 0x1C16DFC
	0x039A9DA4 LDR X0, [X26]
	0x039A9DA8 ADRP X9, 0x7A8000
	0x039A9DAC LDR X8, [X0 + 0xB8]
	0x039A9DB0 LDR X9, [X9 + 0xAE0]
	0x039A9DB4 LDR X23, [X8]
	0x039A9DB8 LDR X0, [X9]
	0x039A9DBC BL 0x1C16F10
	0x039A9DC0 ADRP X8, 0x7A8000
	0x039A9DC4 LDR X8, [X8 + 0xAF8]
	0x039A9DC8 MOV X1, X23
	0x039A9DCC MOV X3, X31
	0x039A9DD0 MOV X22, X0
	0x039A9DD4 LDR X2, [X8]
	0x039A9DD8 BL 0x2D30128
	0x039A9DDC LDR X8, [X26]
	0x039A9DE0 LDR X8, [X8 + 0xB8]
	0x039A9DE4 STR X22, [X8 + 0x18]
	0x039A9DE8 ADRP X8, 0x7A8000
	0x039A9DEC LDR X8, [X8 + 0xAD8]
	0x039A9DF0 MOV X0, X21
	0x039A9DF4 MOV X1, X22
	0x039A9DF8 LDR X2, [X8]
	0x039A9DFC BL 0x21C95A4
	0x039A9E00 LDR X8, [X20 + 0x48]
	0x039A9E04 CBZ X8, 0x39AA090
	0x039A9E08 ADRP X9, 0x7A8000
	0x039A9E0C LDR X9, [X9 + 0xAF0]
	0x039A9E10 MOV W21, W0
	0x039A9E14 MOV X0, X8
	0x039A9E18 LDR X1, [X9]
	0x039A9E1C BL 0x24985D8
	0x039A9E20 MOV X20, X0
	0x039A9E24 CBZ X0, 0x39AA094
	0x039A9E28 ADRP X23, 0x74A000
	0x039A9E2C ADRP X26, 0x7A8000
	0x039A9E30 ADRP X27, 0x74B000
	0x039A9E34 LDR X23, [X23 + 0xE18]
	0x039A9E38 LDR X26, [X26 + 0xAE8]
	0x039A9E3C LDR X27, [X27 + 0x470]
	0x039A9E40 LDR X8, [X20]
	0x039A9E44 LDR X1, [X23]
	0x039A9E48 LDRH W9, [X8 + 0x12E]
	0x039A9E4C CBZ X9, 0x39A9E70
	0x039A9E50 LDR X10, [X8 + 0xB0]
	0x039A9E54 ADD X10, X10, 0x8
	0x039A9E58 LDUR X11, [X10 - 0x8]
	0x039A9E5C CMP X11, X1
	0x039A9E60 B.EQ 0x39A9E80
	0x039A9E64 SUBS X9, X9, 0x1
	0x039A9E68 ADD X10, X10, 0x10
	0x039A9E6C B.NE 0x39A9E58
	0x039A9E70 MOV X0, X20
	0x039A9E74 MOV W2, W31
	0x039A9E78 BL 0x1C5C788
	0x039A9E7C B 0x39A9E8C
	0x039A9E80 LDRSW X9, [X10]
	0x039A9E84 ADD X8, X8, X9, 0x4, LSL
	0x039A9E88 ADD X0, X8, 0x138
	0x039A9E8C LDP X8, X1, [X0]
	0x039A9E90 MOV X0, X20
	0x039A9E94 BLR X8
	0x039A9E98 TBZ X0, 0x0, 0x39A9FD4
	0x039A9E9C LDR X8, [X20]
	0x039A9EA0 LDR X1, [X26]
	0x039A9EA4 LDRH W9, [X8 + 0x12E]
	0x039A9EA8 CBZ X9, 0x39A9ECC
	0x039A9EAC LDR X10, [X8 + 0xB0]
	0x039A9EB0 ADD X10, X10, 0x8
	0x039A9EB4 LDUR X11, [X10 - 0x8]
	0x039A9EB8 CMP X11, X1
	0x039A9EBC B.EQ 0x39A9EDC
	0x039A9EC0 SUBS X9, X9, 0x1
	0x039A9EC4 ADD X10, X10, 0x10
	0x039A9EC8 B.NE 0x39A9EB4
	0x039A9ECC MOV X0, X20
	0x039A9ED0 MOV W2, W31
	0x039A9ED4 BL 0x1C5C788
	0x039A9ED8 B 0x39A9EE8
	0x039A9EDC LDRSW X9, [X10]
	0x039A9EE0 ADD X8, X8, X9, 0x4, LSL
	0x039A9EE4 ADD X0, X8, 0x138
	0x039A9EE8 LDP X8, X1, [X0]
	0x039A9EEC MOV X0, X20
	0x039A9EF0 BLR X8
	0x039A9EF4 MOV X22, X0
	0x039A9EF8 CBZ X0, 0x39A9E40
	0x039A9EFC LDR X8, [X22]
	0x039A9F00 LDR X10, [X24]
	0x039A9F04 LDRB W9, [X8 + 0x130]
	0x039A9F08 LDRB W11, [X10 + 0x130]
	0x039A9F0C CMP W9, W11
	0x039A9F10 B.CC 0x39A9F28
	0x039A9F14 LDR X12, [X8 + 0xC8]
	0x039A9F18 ADD X11, X12, X11, 0x3, LSL
	0x039A9F1C LDUR X11, [X11 - 0x8]
	0x039A9F20 CMP X11, X10
	0x039A9F24 B.EQ 0x39A9F4C
	0x039A9F28 LDR X10, [X25]
	0x039A9F2C LDRB W11, [X10 + 0x130]
	0x039A9F30 CMP W9, W11
	0x039A9F34 B.CC 0x39A9E40
	0x039A9F38 LDR X8, [X8 + 0xC8]
	0x039A9F3C ADD X8, X8, X11, 0x3, LSL
	0x039A9F40 LDUR X8, [X8 - 0x8]
	0x039A9F44 CMP X8, X10
	0x039A9F48 B.NE 0x39A9E40
	0x039A9F4C LDR X2, [X27]
	0x039A9F50 STR X31, [X31 + 0x8]
	0x039A9F54 ADD X0, X31, 0x8
	0x039A9F58 MOV W1, W21
	0x039A9F5C BL 0x24341FC
	0x039A9F60 LDR X2, [X31 + 0x8]
	0x039A9F64 MOV X0, X19
	0x039A9F68 MOV X1, X22
	0x039A9F6C BL 0x39A9BF4
	0x039A9F70 B 0x39A9E40
	0x039A9F74 LDR X0, [X19 + 0x78]
	0x039A9F78 CBZ X0, 0x39AA090
	0x039A9F7C MOV X1, X20
	0x039A9F80 LDP X20, X19, [X31 + 0x50]
	0x039A9F84 LDP X22, X21, [X31 + 0x40]
	0x039A9F88 LDP X24, X23, [X31 + 0x30]
	0x039A9F8C LDP X26, X25, [X31 + 0x20]
	0x039A9F90 LDP X30, X27, [X31 + 0x10]
	0x039A9F94 MOV X2, X31
	0x039A9F98 MOV X3, X31
	0x039A9F9C ADD X31, X31, 0x60
	0x039A9FA0 B 0x39FC4EC
	0x039A9FA4 LDR X0, [X19 + 0x78]
	0x039A9FA8 CBZ X0, 0x39AA090
	0x039A9FAC MOV X1, X20
	0x039A9FB0 MOV X2, X21
	0x039A9FB4 LDP X20, X19, [X31 + 0x50]
	0x039A9FB8 LDP X22, X21, [X31 + 0x40]
	0x039A9FBC LDP X24, X23, [X31 + 0x30]
	0x039A9FC0 LDP X26, X25, [X31 + 0x20]
	0x039A9FC4 LDP X30, X27, [X31 + 0x10]
	0x039A9FC8 MOV X3, X31
	0x039A9FCC ADD X31, X31, 0x60
	0x039A9FD0 B 0x39FC7C0
	0x039A9FD4 MOV X19, X31
	0x039A9FD8 MOV W21, W31
	0x039A9FDC CBZ X20, 0x39AA040
	0x039A9FE0 ADRP X10, 0x74A000
	0x039A9FE4 LDR X8, [X20]
	0x039A9FE8 LDR X10, [X10 + 0xE00]
	0x039A9FEC LDRH W9, [X8 + 0x12E]
	0x039A9FF0 LDR X1, [X10]
	0x039A9FF4 CBZ X9, 0x39AA018
	0x039A9FF8 LDR X10, [X8 + 0xB0]
	0x039A9FFC ADD X10, X10, 0x8
	0x039AA000 LDUR X11, [X10 - 0x8]
	0x039AA004 CMP X11, X1
	0x039AA008 B.EQ 0x39AA028
	0x039AA00C SUBS X9, X9, 0x1
	0x039AA010 ADD X10, X10, 0x10

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X27, 0xA39000
	015 Move X29, 0x7A9000
	016 Move X20, 0x7A0000
	017 Move X25, 0x79E000
	018 Move X28, 0x7A9000
	019 Move X22, 0x79D000
	020 Move X26, 0x7A9000
	021 Move X24, 0x7A9000
	022 Move X23, 0x773000
	023 Move X21, 0x773000
	024 Move X29, [X29+2400]
	025 Move X20, [X20+1464]
	026 Move X25, [X25+2712]
	027 Move X28, [X28+2480]
	028 Move X22, [X22+848]
	029 Move X26, [X26+2488]
	030 Move X24, [X24+2496]
	031 Move X23, [X23+1224]
	032 Move X21, [X21+1240]
	033 Move W8, [X27+3015]
	034 Move X19, X0
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {158}
	039 Move X0, 0x7A0000
	040 Move X0, [X0+1376]
	041 Call 0x1C17CF4
	042 Move X0, 0x7A9000
	043 Move X0, [X0+408]
	044 Call 0x1C17CF4
	045 Move X0, 0x7A9000
	046 Move X0, [X0+2504]
	047 Call 0x1C17CF4
	048 Move X0, 0x7A9000
	049 Move X0, [X0+2496]
	050 Call 0x1C17CF4
	051 Move X0, 0x7A9000
	052 Move X0, [X0+2512]
	053 Call 0x1C17CF4
	054 Move X0, 0x7A9000
	055 Move X0, [X0+2344]
	056 Call 0x1C17CF4
	057 Move X0, 0x7A9000
	058 Move X0, [X0+2480]
	059 Call 0x1C17CF4
	060 Move X0, 0x7A9000
	061 Move X0, [X0+432]
	062 Call 0x1C17CF4
	063 Move X0, 0x7A9000
	064 Move X0, [X0+440]
	065 Call 0x1C17CF4
	066 Move X0, 0x7A9000
	067 Move X0, [X0+448]
	068 Call 0x1C17CF4
	069 Move X0, 0x7A9000
	070 Move X0, [X0+2352]
	071 Call 0x1C17CF4
	072 Move X0, 0x7A9000
	073 Move X0, [X0+2520]
	074 Call 0x1C17CF4
	075 Move X0, 0x7A9000
	076 Move X0, [X0+2528]
	077 Call 0x1C17CF4
	078 Move X0, 0x7A9000
	079 Move X0, [X0+456]
	080 Call 0x1C17CF4
	081 Move X0, 0x7A9000
	082 Move X0, [X0+2360]
	083 Call 0x1C17CF4
	084 Move X0, 0x773000
	085 Move X0, [X0+1224]
	086 Call 0x1C17CF4
	087 Move X0, 0x7A9000
	088 Move X0, [X0+2368]
	089 Call 0x1C17CF4
	090 Move X0, 0x773000
	091 Move X0, [X0+1240]
	092 Call 0x1C17CF4
	093 Move X0, 0x7A9000
	094 Move X0, [X0+464]
	095 Call 0x1C17CF4
	096 Move X0, 0x7A0000
	097 Move X0, [X0+1464]
	098 Call 0x1C17CF4
	099 Move X0, 0x7A9000
	100 Move X0, [X0+2536]
	101 Call 0x1C17CF4
	102 Move X0, 0x7A9000
	103 Move X0, [X0+2544]
	104 Call 0x1C17CF4
	105 Move X0, 0x7A9000
	106 Move X0, [X0+2552]
	107 Call 0x1C17CF4
	108 Move X0, 0x7A9000
	109 Move X0, [X0+2560]
	110 Call 0x1C17CF4
	111 Move X0, 0x79D000
	112 Move X0, [X0+848]
	113 Call 0x1C17CF4
	114 Move X0, 0x7A9000
	115 Move X0, [X0+2376]
	116 Call 0x1C17CF4
	117 Move X0, 0x7A9000
	118 Move X0, [X0+2384]
	119 Call 0x1C17CF4
	120 Move X0, 0x7A9000
	121 Move X0, [X0+2568]
	122 Call 0x1C17CF4
	123 Move X0, 0x7A9000
	124 Move X0, [X0+2488]
	125 Call 0x1C17CF4
	126 Move X0, 0x7A9000
	127 Move X0, [X0+2576]
	128 Call 0x1C17CF4
	129 Move X0, 0x7A9000
	130 Move X0, [X0+2584]
	131 Call 0x1C17CF4
	132 Move X0, 0x7A9000
	133 Move X0, [X0+2592]
	134 Call 0x1C17CF4
	135 Move X0, 0x7A9000
	136 Move X0, [X0+2392]
	137 Call 0x1C17CF4
	138 Move X0, 0x7A9000
	139 Move X0, [X0+2400]
	140 Call 0x1C17CF4
	141 Move X0, 0x7A9000
	142 Move X0, [X0+2600]
	143 Call 0x1C17CF4
	144 Move X0, 0x79E000
	145 Move X0, [X0+2712]
	146 Call 0x1C17CF4
	147 Move X0, 0x7A9000
	148 Move X0, [X0+2608]
	149 Call 0x1C17CF4
	150 Move X0, 0x7A9000
	151 Move X0, [X0+2616]
	152 Call 0x1C17CF4
	153 Move X0, 0x7A9000
	154 Move X0, [X0+2408]
	155 Call 0x1C17CF4
	156 Move W8, 1
	157 Move [X27+3015], W8
	158 Move [X31+32], X31
	159 Move [X31+40], X31
	160 Move [X31+48], X31
	161 Move X0, [X19+32]
	162 Move X1, [X29]
	163 Move W2, 1
	164 Move X3, X31
	165 Move X4, X31
	166 Move X5, X31
	167 Move X6, X31
	168 Move X7, X31
	169 Move [X31], X31
	170 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	171 Move X1, [X20]
	172 Add X8, X31, 8
	173 Move X2, X31
	174 Move X3, X31
	175 Move X4, X31
	176 Call InputActionSetupExtensions.AddCompositeBinding, X0, X1, X2, X3
	177 Move X8, [X31+24]
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move X1, [X25]
	180 Move X2, [X28]
	181 Move [X31+48], X8
	182 Add X8, X31, 8
	183 Add X0, X31, 32
	184 Move X3, X31
	185 Move X4, X31
	186 Move X5, X31
	187 Move [X31+2], V0
	188 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	189 Move X8, [X31+24]
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 Move X1, [X22]
	192 Move X2, [X26]
	193 Move [X31+48], X8
	194 Add X8, X31, 8
	195 Add X0, X31, 32
	196 Move X3, X31
	197 Move X4, X31
	198 Move X5, X31
	199 Move [X31+2], V0
	200 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	201 Move X9, 0x7A9000
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 Move X8, [X31+24]
	204 Move X1, [X25]
	205 Move X9, [X9+2512]
	206 Add X0, X31, 32
	207 Move [X31+48], X8
	208 Add X8, X31, 8
	209 Move X2, [X9]
	210 Move X3, X31
	211 Move X4, X31
	212 Move X5, X31
	213 Move [X31+2], V0
	214 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	215 Move X8, [X31+24]
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 Move X1, [X22]
	218 Move X2, [X24]
	219 Move [X31+48], X8
	220 Add X8, X31, 8
	221 Add X0, X31, 32
	222 Move X3, X31
	223 Move X4, X31
	224 Move X5, X31
	225 Move [X31+2], V0
	226 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	227 Move X8, 0x7A9000
	228 Move X0, [X19+32]
	229 Move X8, [X8+2368]
	230 Move W2, 1
	231 Move X3, X31
	232 Move X4, X31
	233 Move X1, [X8]
	234 Move X5, X31
	235 Move X6, X31
	236 Move X7, X31
	237 Move [X31], X31
	238 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	239 Move X1, [X20]
	240 Add X8, X31, 8
	241 Move X2, X31
	242 Move X3, X31
	243 Move X4, X31
	244 Call InputActionSetupExtensions.AddCompositeBinding, X0, X1, X2, X3
	245 Move X8, [X31+24]
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 Move X1, [X25]
	248 Move X2, [X28]
	249 Move [X31+48], X8
	250 Add X8, X31, 8
	251 Add X0, X31, 32
	252 Move X3, X31
	253 Move X4, X31
	254 Move X5, X31
	255 Move [X31+2], V0
	256 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	257 Move X9, 0x7A9000
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 Move X8, [X31+24]
	260 Move X1, [X22]
	261 Move X9, [X9+2536]
	262 Add X0, X31, 32
	263 Move [X31+48], X8
	264 Add X8, X31, 8
	265 Move X2, [X9]
	266 Move X3, X31
	267 Move X4, X31
	268 Move X5, X31
	269 Move [X31+2], V0
	270 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	271 Move X9, 0x7A9000
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 Move X8, [X31+24]
	274 Move X1, [X25]
	275 Move X9, [X9+2544]
	276 Add X0, X31, 32
	277 Move [X31+48], X8
	278 Add X8, X31, 8
	279 Move X2, [X9]
	280 Move X3, X31
	281 Move X4, X31
	282 Move X5, X31
	283 Move [X31+2], V0
	284 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	285 Move X8, [X31+24]
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 Move X1, [X22]
	288 Move X2, [X24]
	289 Move [X31+48], X8
	290 Add X8, X31, 8
	291 Add X0, X31, 32
	292 Move X3, X31
	293 Move X4, X31
	294 Move X5, X31
	295 Move [X31+2], V0
	296 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	297 Move X8, 0x7A9000
	298 Move X0, [X19+32]
	299 Move X8, [X8+2384]
	300 Move W2, 1
	301 Move X3, X31
	302 Move X4, X31
	303 Move X1, [X8]
	304 Move X5, X31
	305 Move X6, X31
	306 Move X7, X31
	307 Move [X31], X31
	308 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	309 Move X8, 0x7A9000
	310 Move X8, [X8+408]
	311 Move X2, X31
	312 Move X3, X31
	313 Move X4, X31
	314 Move X1, [X8]
	315 Add X8, X31, 8
	316 Move X5, X31
	317 Move X20, X0
	318 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	319 Move X8, 0x7A9000
	320 Move X8, [X8+2592]
	321 Move X0, X20
	322 Move X2, X31
	323 Move X3, X31
	324 Move X1, [X8]
	325 Add X8, X31, 8
	326 Move X4, X31
	327 Move X5, X31
	328 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	329 Move X8, 0x7A9000
	330 Move X0, [X19+32]
	331 Move X8, [X8+2376]
	332 Move W2, 1
	333 Move X3, X31
	334 Move X4, X31
	335 Move X1, [X8]
	336 Move X5, X31
	337 Move X6, X31
	338 Move X7, X31
	339 Move [X31], X31
	340 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	341 Move X8, 0x7A9000
	342 Move X8, [X8+440]
	343 Move X2, X31
	344 Move X3, X31
	345 Move X4, X31
	346 Move X1, [X8]
	347 Add X8, X31, 8
	348 Move X5, X31
	349 Move X20, X0
	350 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	351 Move X8, 0x7A9000
	352 Move X8, [X8+2520]
	353 Move X0, X20
	354 Move X2, X31
	355 Move X3, X31
	356 Move X1, [X8]
	357 Add X8, X31, 8
	358 Move X4, X31
	359 Move X5, X31
	360 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	361 Move X8, 0x7A9000
	362 Move X0, [X19+32]
	363 Move X8, [X8+2360]
	364 Move W2, 1
	365 Move X3, X31
	366 Move X4, X31
	367 Move X1, [X8]
	368 Move X5, X31
	369 Move X6, X31
	370 Move X7, X31
	371 Move [X31], X31
	372 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	373 Move X8, 0x7A9000
	374 Move X8, [X8+2568]
	375 Move X2, X31
	376 Move X3, X31
	377 Move X4, X31
	378 Move X1, [X8]
	379 Add X8, X31, 8
	380 Move X5, X31
	381 Move X20, X0
	382 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	383 Move X8, 0x7A9000
	384 Move X8, [X8+2584]
	385 Move X0, X20
	386 Move X2, X31
	387 Move X3, X31
	388 Move X1, [X8]
	389 Add X8, X31, 8
	390 Move X4, X31
	391 Move X5, X31
	392 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	393 Move X8, 0x7A9000
	394 Move X0, [X19+32]
	395 Move X8, [X8+2352]
	396 Move W2, 1
	397 Move X3, X31
	398 Move X4, X31
	399 Move X1, [X8]
	400 Move X5, X31
	401 Move X6, X31
	402 Move X7, X31
	403 Move [X31], X31
	404 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	405 Move X8, 0x7A9000
	406 Move X8, [X8+2560]
	407 Move X2, X31
	408 Move X3, X31
	409 Move X4, X31
	410 Move X1, [X8]
	411 Add X8, X31, 8
	412 Move X5, X31
	413 Move X20, X0
	414 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	415 Move X8, 0x7A9000
	416 Move X8, [X8+2528]
	417 Move X0, X20
	418 Move X2, X31
	419 Move X3, X31
	420 Move X1, [X8]
	421 Add X8, X31, 8
	422 Move X4, X31
	423 Move X5, X31
	424 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	425 Move X8, 0x7A9000
	426 Move X0, [X19+32]
	427 Move X8, [X8+2392]
	428 Move W2, W31
	429 Move X3, X31
	430 Move X4, X31
	431 Move X1, [X8]
	432 Move X5, X31
	433 Move X6, X31
	434 Move X7, X31
	435 Move [X31], X31
	436 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	437 Move X8, 0x7A9000
	438 Move X8, [X8+2504]
	439 Move X2, X31
	440 Move X3, X31
	441 Move X4, X31
	442 Move X1, [X8]
	443 Add X8, X31, 8
	444 Move X5, X31
	445 Move X20, X0
	446 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	447 Move X8, 0x7A9000
	448 Move X8, [X8+2616]
	449 Move X0, X20
	450 Move X2, X31
	451 Move X3, X31
	452 Move X1, [X8]
	453 Add X8, X31, 8
	454 Move X4, X31
	455 Move X5, X31
	456 Call InputActionSetupExtensions.AddBinding, X0, X1, X2, X3, X4
	457 Move X8, 0x7A9000
	458 Move X0, [X19+32]
	459 Move X8, [X8+2344]
	460 Move W2, W31
	461 Move X3, X31
	462 Move X4, X31
	463 Move X1, [X8]
	464 Move X5, X31
	465 Move X6, X31
	466 Move X7, X31
	467 Move [X31], X31
	468 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	469 Move X20, 0x7A0000
	470 Move X20, [X20+1376]
	471 Add X8, X31, 8
	472 Move X2, X31
	473 Move X3, X31
	474 Move X1, [X20]
	475 Move X4, X31
	476 Call InputActionSetupExtensions.AddCompositeBinding, X0, X1, X2, X3
	477 Move X9, 0x7A9000
	478 NotImplemented "Instruction LDUR not yet implemented."
	479 Move X8, [X31+24]
	480 Move X1, [X23]
	481 Move X9, [X9+2552]
	482 Add X0, X31, 32
	483 Move [X31+48], X8
	484 Add X8, X31, 8
	485 Move X2, [X9]
	486 Move X3, X31
	487 Move X4, X31
	488 Move X5, X31
	489 Move [X31+2], V0
	490 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	491 Move X9, 0x7A9000
	492 NotImplemented "Instruction LDUR not yet implemented."
	493 Move X8, [X31+24]
	494 Move X1, [X21]
	495 Move X9, [X9+2576]
	496 Add X0, X31, 32
	497 Move [X31+48], X8
	498 Add X8, X31, 8
	499 Move X2, [X9]
	500 Move X3, X31
	501 Move X4, X31
	502 Move X5, X31
	503 Move [X31+2], V0
	504 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	505 Move X9, 0x7A9000
	506 NotImplemented "Instruction LDUR not yet implemented."
	507 Move X8, [X31+24]
	508 Move X1, [X23]
	509 Move X9, [X9+432]
	510 Add X0, X31, 32
	511 Move [X31+48], X8
	512 Add X8, X31, 8
	513 Move X2, [X9]
	514 Move X3, X31
	515 Move X4, X31
	516 Move X5, X31
	517 Move [X31+2], V0
	518 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	519 Move X9, 0x7A9000
	520 NotImplemented "Instruction LDUR not yet implemented."
	521 Move X8, [X31+24]
	522 Move X1, [X21]
	523 Move X9, [X9+448]
	524 Add X0, X31, 32
	525 Move [X31+48], X8
	526 Add X8, X31, 8
	527 Move X2, [X9]
	528 Move X3, X31
	529 Move X4, X31
	530 Move X5, X31
	531 Move [X31+2], V0
	532 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	533 Move X8, 0x7A9000
	534 Move X0, [X19+32]
	535 Move X8, [X8+2408]
	536 Move W2, W31
	537 Move X3, X31
	538 Move X4, X31
	539 Move X1, [X8]
	540 Move X5, X31
	541 Move X6, X31
	542 Move X7, X31
	543 Move [X31], X31
	544 Call InputActionSetupExtensions.AddAction, X0, X1, X2, X3, X4, X5, X6, X7
	545 Move X1, [X20]
	546 Add X8, X31, 8
	547 Move X2, X31
	548 Move X3, X31
	549 Move X4, X31
	550 Call InputActionSetupExtensions.AddCompositeBinding, X0, X1, X2, X3
	551 Move X9, 0x7A9000
	552 NotImplemented "Instruction LDUR not yet implemented."
	553 Move X8, [X31+24]
	554 Move X1, [X23]
	555 Move X9, [X9+2600]
	556 Add X0, X31, 32
	557 Move [X31+48], X8
	558 Add X8, X31, 8
	559 Move X2, [X9]
	560 Move X3, X31
	561 Move X4, X31
	562 Move X5, X31
	563 Move [X31+2], V0
	564 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	565 Move X9, 0x7A9000
	566 NotImplemented "Instruction LDUR not yet implemented."
	567 Move X8, [X31+24]
	568 Move X1, [X21]
	569 Move X9, [X9+2608]
	570 Add X0, X31, 32
	571 Move [X31+48], X8
	572 Add X8, X31, 8
	573 Move X2, [X9]
	574 Move X3, X31
	575 Move X4, X31
	576 Move X5, X31
	577 Move [X31+2], V0
	578 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	579 Move X9, 0x7A9000
	580 NotImplemented "Instruction LDUR not yet implemented."
	581 Move X8, [X31+24]
	582 Move X1, [X23]
	583 Move X9, [X9+464]
	584 Add X0, X31, 32
	585 Move [X31+48], X8
	586 Add X8, X31, 8
	587 Move X2, [X9]
	588 Move X3, X31
	589 Move X4, X31
	590 Move X5, X31
	591 Move [X31+2], V0
	592 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	593 Move X9, 0x7A9000
	594 NotImplemented "Instruction LDUR not yet implemented."
	595 Move X8, [X31+24]
	596 Move X1, [X21]
	597 Move X9, [X9+456]
	598 Add X0, X31, 32
	599 Move [X31+48], X8
	600 Add X8, X31, 8
	601 Move X2, [X9]
	602 Move X3, X31
	603 Move X4, X31
	604 Move X5, X31
	605 Move [X31+2], V0
	606 Call CompositeSyntax.With, X0, X1, X2, X3, X4
	607 Move X20, [X31+144]
	608 Move X19, [X31+152]
	609 Move X22, [X31+128]
	610 Move X21, [X31+136]
	611 Move X24, [X31+112]
	612 Move X23, [X31+120]
	613 Move X26, [X31+96]
	614 Move X25, [X31+104]
	615 Move X28, [X31+80]
	616 Move X27, [X31+88]
	617 Move X29, [X31+64]
	618 Move X30, [X31+72]
	619 Add X31, X31, 160
	620 Return 

Method: UnityEngine.Rendering.DebugManager get_instance()

Disassembly:
	0x0399D120 BL 0x399CE2C
	0x0399D124 LDR V1, [X19 + 0x60]
	0x0399D128 FCMP S1, 0x0
	0x0399D12C B.EQ 0x399D14C
	0x0399D130 LDP S2, S0, [X19 + 0x28]
	0x0399D134 FMUL S1, S1, S0
	0x0399D138 FADD S1, S2, S1
	0x0399D13C FCMP S1, S0
	0x0399D140 STR S1, [X19 + 0x28]
	0x0399D144 B.PL 0x399D14C
	0x0399D148 STR S0, [X19 + 0x28]
	0x0399D14C LDR V0, [X19 + 0x58]
	0x0399D150 FCMP S0, 0x0
	0x0399D154 B.NE 0x399D188
	0x0399D158 LDR V0, [X19 + 0x5C]
	0x0399D15C FCMP S0, 0x0
	0x0399D160 B.NE 0x399D188
	0x0399D164 LDR V0, [X19 + 0x64]
	0x0399D168 FCMP S0, 0x0
	0x0399D16C B.NE 0x399D188
	0x0399D170 LDR V0, [X19 + 0x68]
	0x0399D174 FCMP S0, 0x0
	0x0399D178 B.NE 0x399D188
	0x0399D17C LDR V0, [X19 + 0x6C]
	0x0399D180 FCMP S0, 0x0
	0x0399D184 B.EQ 0x399D108
	0x0399D188 MOV X0, X19
	0x0399D18C MOV X1, X31
	0x0399D190 BL 0x3C32E90
	0x0399D194 CBZ X0, 0x399D468

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA45000
	005 Move X19, 0x7B4000
	006 Move W8, [X20+3016]
	007 Move X19, [X19+1912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x7B4000
	013 Move X0, [X0+1912]
	014 Call 0x1C17CF4
	015 Move X0, 0x7B5000
	016 Move X0, [X0+312]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3016], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Compare X0, 0
	029 JumpIfEqual {38}
	030 Move X8, 0x7B5000
	031 Move X8, [X8+312]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, [X8]
	035 Move X30, [X31+32]
	036 Call 0x2EE9EE4, X0
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void UpdateReadOnlyCollection()

Disassembly:
	0x039AA014 B.NE 0x39AA000
	0x039AA018 MOV X0, X20
	0x039AA01C MOV W2, W31
	0x039AA020 BL 0x1C5C788
	0x039AA024 B 0x39AA034
	0x039AA028 LDRSW X9, [X10]
	0x039AA02C ADD X8, X8, X9, 0x4, LSL
	0x039AA030 ADD X0, X8, 0x138
	0x039AA034 LDP X8, X1, [X0]
	0x039AA038 MOV X0, X20
	0x039AA03C BLR X8
	0x039AA040 CBNZ X19, 0x39AA098
	0x039AA044 CBZ W21, 0x39AA074
	0x039AA048 ADRP X8, 0x749000
	0x039AA04C LDR X8, [X8 + 0xA28]
	0x039AA050 LDR X0, [X8]
	0x039AA054 LDR W8, [X0 + 0xE0]
	0x039AA058 CBNZ W8, 0x39AA060
	0x039AA05C BL 0x1C16DFC
	0x039AA060 ADRP X8, 0x7A7000
	0x039AA064 LDR X8, [X8 + 0xB00]
	0x039AA068 MOV X1, X31
	0x039AA06C LDR X0, [X8]
	0x039AA070 BL 0x3C06048
	0x039AA074 LDP X20, X19, [X31 + 0x50]
	0x039AA078 LDP X22, X21, [X31 + 0x40]
	0x039AA07C LDP X24, X23, [X31 + 0x30]
	0x039AA080 LDP X26, X25, [X31 + 0x20]
	0x039AA084 LDP X30, X27, [X31 + 0x10]
	0x039AA088 ADD X31, X31, 0x60
	0x039AA08C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA38000
	005 Move W8, [X20+3017]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x7A8000
	012 Move X0, [X0+2624]
	013 Call 0x1C17CF4
	014 Move X0, 0x7A8000
	015 Move X0, [X0+2632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3017], W8
	019 Move X0, [X19+48]
	020 Compare X0, 0
	021 JumpIfEqual {38}
	022 Move X8, 0x7A8000
	023 Move X8, [X8+2632]
	024 Move X1, [X8]
	025 Call List`1<Object>.Sort, X0
	026 Move X0, [X19+48]
	027 Compare X0, 0
	028 JumpIfEqual {38}
	029 Move X8, 0x7A8000
	030 Move X8, [X8+2624]
	031 Move X1, [X8]
	032 Call List`1<Object>.AsReadOnly, X0
	033 Move [X19+40], X0
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 
	038 Call 0x1C17F20

Method: System.Collections.ObjectModel.ReadOnlyCollection`1<UnityEngine.Rendering.DebugUI/Panel> get_panels()

Disassembly:
	0x039AA090 BL 0x1C16F20
	0x039AA094 BL 0x1C16F20
	0x039AA098 MOV X0, X19
	0x039AA09C BL 0x1C16F18
	0x039AA0A0 B 0x39AA0AC
	0x039AA0A4 B 0x39AA0AC
	0x039AA0A8 B 0x39AA0AC
	0x039AA0AC MOV X21, X0
	0x039AA0B0 CMP W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call DebugManager.UpdateReadOnlyCollection, X0
	009 Move X0, [X19+40]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Void add_onDisplayRuntimeUIChanged(System.Action`1<System.Boolean> value)

Disassembly:
	0x039AA0B4 B.NE 0x39AA0D4
	0x039AA0B8 MOV X0, X21
	0x039AA0BC BL 0x3EB1AD0
	0x039AA0C0 LDR X19, [X0]
	0x039AA0C4 BL 0x3EB1AE0
	0x039AA0C8 MOVZ W21, 0x1
	0x039AA0CC CBNZ X20, 0x39A9FE0
	0x039AA0D0 B 0x39AA040
	0x039AA0D4 MOV X19, X31
	0x039AA0D8 B 0x39AA0E0
	0x039AA0DC MOV X21, X0
	0x039AA0E0 CBZ X20, 0x39AA144
	0x039AA0E4 ADRP X10, 0x749000
	0x039AA0E8 LDR X8, [X20]
	0x039AA0EC LDR X10, [X10 + 0xE00]
	0x039AA0F0 LDRH W9, [X8 + 0x12E]
	0x039AA0F4 LDR X1, [X10]
	0x039AA0F8 CBZ X9, 0x39AA11C
	0x039AA0FC LDR X10, [X8 + 0xB0]
	0x039AA100 ADD X10, X10, 0x8
	0x039AA104 LDUR X11, [X10 - 0x8]
	0x039AA108 CMP X11, X1
	0x039AA10C B.EQ 0x39AA12C
	0x039AA110 SUBS X9, X9, 0x1
	0x039AA114 ADD X10, X10, 0x10
	0x039AA118 B.NE 0x39AA104
	0x039AA11C MOV X0, X20
	0x039AA120 MOV W2, W31
	0x039AA124 BL 0x1C5C788
	0x039AA128 B 0x39AA138
	0x039AA12C LDRSW X9, [X10]
	0x039AA130 ADD X8, X8, X9, 0x4, LSL
	0x039AA134 ADD X0, X8, 0x138
	0x039AA138 LDP X8, X1, [X0]
	0x039AA13C MOV X0, X20
	0x039AA140 BLR X8
	0x039AA144 CBNZ X19, 0x39AA150
	0x039AA148 MOV X0, X21
	0x039AA14C BL 0x1D2C690
	0x039AA150 MOV X0, X19
	0x039AA154 BL 0x1C16F18
	0x039AA158 BL 0x1990590
	0x039AA15C STR X30, [X31 - 0x10]!
	0x039AA160 LDR X8, [X0 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA38000
	009 Move W8, [X21+3018]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x74A000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3018], W8
	021 Move X24, 0x74A000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+3368]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onDisplayRuntimeUIChanged(System.Action`1<System.Boolean> value)

Disassembly:
	0x039AA164 CBZ X8, 0x39AA17C
	0x039AA168 LDR X2, [X8 + 0x18]
	0x039AA16C LDR X0, [X8 + 0x40]
	0x039AA170 LDR X1, [X8 + 0x28]
	0x039AA174 LDR X30, [X31], #0x10
	0x039AA178 BR X2
	0x039AA17C BL 0x1C16F20
	0x039AA180 STR X30, [X31 - 0x30]!
	0x039AA184 STP X22, X21, [X31 + 0x10]
	0x039AA188 STP X20, X19, [X31 + 0x20]
	0x039AA18C ADRP X21, 0xA37000
	0x039AA190 LDRB W8, [X21 + 0xBD7]
	0x039AA194 MOV X20, X1
	0x039AA198 MOV X19, X0
	0x039AA19C TBNZ X8, 0x0, 0x39AA1CC
	0x039AA1A0 ADRP X0, 0x7A7000
	0x039AA1A4 LDR X0, [X0 + 0xB08]
	0x039AA1A8 BL 0x1C16CF4
	0x039AA1AC ADRP X0, 0x7A7000
	0x039AA1B0 LDR X0, [X0 + 0x158]
	0x039AA1B4 BL 0x1C16CF4
	0x039AA1B8 ADRP X0, 0x74B000
	0x039AA1BC LDR X0, [X0 + 0x278]
	0x039AA1C0 BL 0x1C16CF4
	0x039AA1C4 MOVZ W8, 0x1
	0x039AA1C8 STRB W8, [X21 + 0xBD7]
	0x039AA1CC CBNZ X20, 0x39AA1E4
	0x039AA1D0 ADRP X8, 0x74B000
	0x039AA1D4 LDR X8, [X8 + 0x278]
	0x039AA1D8 LDR X8, [X8]
	0x039AA1DC LDR X8, [X8 + 0xB8]
	0x039AA1E0 LDR X20, [X8]
	0x039AA1E4 LDR X0, [X19 + 0x30]
	0x039AA1E8 CBZ X0, 0x39AA23C
	0x039AA1EC ADRP X22, 0x7A7000
	0x039AA1F0 LDR X22, [X22 + 0x158]
	0x039AA1F4 MOV W21, W31
	0x039AA1F8 LDR W8, [X0 + 0x18]
	0x039AA1FC CMP W21, W8
	0x039AA200 B.GE 0x39AA240
	0x039AA204 LDR X2, [X22]
	0x039AA208 MOV W1, W21
	0x039AA20C BL 0x301BCCC
	0x039AA210 CBZ X0, 0x39AA23C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA38000
	009 Move W8, [X21+3019]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x74A000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3019], W8
	021 Move X24, 0x74A000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+3368]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onSetDirty(System.Action value)

Disassembly:
	0x039AA214 CBZ X20, 0x39AA23C
	0x039AA218 LDR X1, [X0 + 0x18]
	0x039AA21C MOVZ W2, 0x3
	0x039AA220 MOV X0, X20
	0x039AA224 MOV X3, X31
	0x039AA228 BL 0x322697C
	0x039AA22C TBNZ X0, 0x0, 0x39AA244
	0x039AA230 LDR X0, [X19 + 0x30]
	0x039AA234 ADD W21, W21, 0x1
	0x039AA238 CBNZ X0, 0x39AA1F8
	0x039AA23C BL 0x1C16F20
	0x039AA240 MOVN W21, 0x0
	0x039AA244 MOV W0, W21
	0x039AA248 LDP X20, X19, [X31 + 0x20]
	0x039AA24C LDP X22, X21, [X31 + 0x10]
	0x039AA250 LDR X30, [X31], #0x30
	0x039AA254 RET
	0x039AA258 STP X30, X21, [X31 - 0x20]!
	0x039AA25C STP X20, X19, [X31 + 0x10]
	0x039AA260 ADRP X21, 0xA37000
	0x039AA264 LDRB W8, [X21 + 0xBD8]
	0x039AA268 MOV W19, W1
	0x039AA26C MOV X20, X0
	0x039AA270 TBNZ X8, 0x0, 0x39AA2A0
	0x039AA274 ADRP X0, 0x7A7000
	0x039AA278 LDR X0, [X0 + 0xB08]
	0x039AA27C BL 0x1C16CF4
	0x039AA280 ADRP X0, 0x7A7000
	0x039AA284 LDR X0, [X0 + 0x158]
	0x039AA288 BL 0x1C16CF4
	0x039AA28C ADRP X0, 0x74B000
	0x039AA290 LDR X0, [X0 + 0x278]
	0x039AA294 BL 0x1C16CF4
	0x039AA298 MOVZ W8, 0x1
	0x039AA29C STRB W8, [X21 + 0xBD8]
	0x039AA2A0 TBNZ X19, 0x1F, 0x39AA2BC
	0x039AA2A4 LDR X0, [X20 + 0x30]
	0x039AA2A8 CBZ X0, 0x39AA2FC
	0x039AA2AC LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA38000
	007 Move W8, [X21+3020]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x74B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3020], W8
	019 Move X22, 0x74B000
	020 Add X20, X20, 64
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_onSetDirty(System.Action value)

Disassembly:
	0x039AA2B0 SUB W8, W8, 0x1
	0x039AA2B4 CMP W8, W19
	0x039AA2B8 B.GE 0x39AA2D0
	0x039AA2BC ADRP X8, 0x74B000
	0x039AA2C0 LDR X8, [X8 + 0x278]
	0x039AA2C4 LDR X8, [X8]
	0x039AA2C8 LDR X8, [X8 + 0xB8]
	0x039AA2CC B 0x39AA2EC
	0x039AA2D0 ADRP X8, 0x7A7000
	0x039AA2D4 LDR X8, [X8 + 0x158]
	0x039AA2D8 MOV W1, W19
	0x039AA2DC LDR X2, [X8]
	0x039AA2E0 BL 0x301BCCC
	0x039AA2E4 CBZ X0, 0x39AA2FC
	0x039AA2E8 ADD X8, X0, 0x18
	0x039AA2EC LDR X0, [X8]
	0x039AA2F0 LDP X20, X19, [X31 + 0x10]
	0x039AA2F4 LDP X30, X21, [X31], #0x20
	0x039AA2F8 RET
	0x039AA2FC BL 0x1C16F20
	0x039AA300 STR X30, [X31 - 0x30]!
	0x039AA304 STP X22, X21, [X31 + 0x10]
	0x039AA308 STP X20, X19, [X31 + 0x20]
	0x039AA30C ADRP X22, 0xA37000
	0x039AA310 ADRP X21, 0x74A000
	0x039AA314 LDRB W8, [X22 + 0xBD9]
	0x039AA318 LDR X21, [X21 + 0x470]
	0x039AA31C MOV W20, W1
	0x039AA320 MOV X19, X0
	0x039AA324 TBNZ X8, 0x0, 0x39AA33C
	0x039AA328 ADRP X0, 0x74A000
	0x039AA32C LDR X0, [X0 + 0x470]
	0x039AA330 BL 0x1C16CF4
	0x039AA334 MOVZ W8, 0x1
	0x039AA338 STRB W8, [X22 + 0xBD9]
	0x039AA33C LDR X2, [X21]
	0x039AA340 ADD X0, X31, 0x8
	0x039AA344 MOV W1, W20
	0x039AA348 STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA38000
	007 Move W8, [X21+3021]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x74B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3021], W8
	019 Move X22, 0x74B000
	020 Add X20, X20, 64
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_resetData(System.Action value)

Disassembly:
	0x039AA34C BL 0x24341FC
	0x039AA350 LDR X8, [X31 + 0x8]
	0x039AA354 LDP X22, X21, [X31 + 0x10]
	0x039AA358 STUR X8, [X19 + 0x54]
	0x039AA35C LDP X20, X19, [X31 + 0x20]
	0x039AA360 LDR X30, [X31], #0x30
	0x039AA364 RET
	0x039AA368 LDUR X8, [X0 + 0x54]
	0x039AA36C STUR X31, [X0 + 0x54]
	0x039AA370 MOV X0, X8
	0x039AA374 RET
	0x039AA378 STP X30, X21, [X31 - 0x20]!
	0x039AA37C STP X20, X19, [X31 + 0x10]
	0x039AA380 ADRP X21, 0xA37000
	0x039AA384 LDRB W8, [X21 + 0xBDD]
	0x039AA388 MOV X20, X1
	0x039AA38C MOV X19, X0
	0x039AA390 TBNZ X8, 0x0, 0x39AA3A8
	0x039AA394 ADRP X0, 0x7A7000
	0x039AA398 LDR X0, [X0 + 0xB10]
	0x039AA39C BL 0x1C16CF4
	0x039AA3A0 MOVZ W8, 0x1
	0x039AA3A4 STRB W8, [X21 + 0xBDD]
	0x039AA3A8 CBZ X20, 0x39AA3D8
	0x039AA3AC LDR X0, [X19 + 0x30]
	0x039AA3B0 CBZ X0, 0x39AA3E4
	0x039AA3B4 ADRP X8, 0x7A7000
	0x039AA3B8 LDR X8, [X8 + 0xB10]
	0x039AA3BC MOV X1, X20
	0x039AA3C0 LDR X2, [X8]
	0x039AA3C4 BL 0x301D7A8
	0x039AA3C8 MOV X0, X19
	0x039AA3CC LDP X20, X19, [X31 + 0x10]
	0x039AA3D0 LDP X30, X21, [X31], #0x20
	0x039AA3D4 B 0x39A9014
	0x039AA3D8 LDP X20, X19, [X31 + 0x10]
	0x039AA3DC LDP X30, X21, [X31], #0x20
	0x039AA3E0 RET
	0x039AA3E4 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA38000
	007 Move W8, [X21+3022]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x74B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3022], W8
	019 Move X22, 0x74B000
	020 Add X20, X20, 72
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_resetData(System.Action value)

Disassembly:
	0x039AA3E8 STR X30, [X31 - 0x30]!
	0x039AA3EC STP X22, X21, [X31 + 0x10]
	0x039AA3F0 STP X20, X19, [X31 + 0x20]
	0x039AA3F4 ADRP X21, 0xA37000
	0x039AA3F8 ADRP X22, 0x7A7000
	0x039AA3FC LDRB W8, [X21 + 0xBDB]
	0x039AA400 LDR X22, [X22 + 0xB18]
	0x039AA404 MOV X20, X1
	0x039AA408 MOV X19, X0
	0x039AA40C TBNZ X8, 0x0, 0x39AA448
	0x039AA410 ADRP X0, 0x7A7000
	0x039AA414 LDR X0, [X0 + 0xB20]
	0x039AA418 BL 0x1C16CF4
	0x039AA41C ADRP X0, 0x7A7000
	0x039AA420 LDR X0, [X0 + 0xB28]
	0x039AA424 BL 0x1C16CF4
	0x039AA428 ADRP X0, 0x7A7000
	0x039AA42C LDR X0, [X0 + 0xB30]
	0x039AA430 BL 0x1C16CF4
	0x039AA434 ADRP X0, 0x7A7000
	0x039AA438 LDR X0, [X0 + 0xB18]
	0x039AA43C BL 0x1C16CF4
	0x039AA440 MOVZ W8, 0x1
	0x039AA444 STRB W8, [X21 + 0xBDB]
	0x039AA448 LDR X0, [X22]
	0x039AA44C BL 0x1C16F10
	0x039AA450 MOV X1, X31
	0x039AA454 MOV X21, X0
	0x039AA458 BL 0x33BDD8C
	0x039AA45C CBZ X21, 0x39AA4BC
	0x039AA460 ADRP X8, 0x7A7000
	0x039AA464 LDR X8, [X8 + 0xB28]
	0x039AA468 STR X20, [X21 + 0x10]
	0x039AA46C ADRP X20, 0x7A7000
	0x039AA470 LDR X19, [X19 + 0x30]
	0x039AA474 LDR X0, [X8]
	0x039AA478 LDR X20, [X20 + 0xB30]
	0x039AA47C BL 0x1C16F10
	0x039AA480 LDR X2, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA38000
	007 Move W8, [X21+3023]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x74B000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3023], W8
	019 Move X22, 0x74B000
	020 Add X20, X20, 72
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Boolean get_isAnyDebugUIActive()

Disassembly:
	0x039AA484 MOV X1, X21
	0x039AA488 MOV X3, X31
	0x039AA48C MOV X20, X0
	0x039AA490 BL 0x24AD1FC
	0x039AA494 CBZ X19, 0x39AA4BC
	0x039AA498 ADRP X8, 0x7A7000
	0x039AA49C LDR X8, [X8 + 0xB20]
	0x039AA4A0 MOV X0, X19
	0x039AA4A4 MOV X1, X20
	0x039AA4A8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call DebugManager.get_displayRuntimeUI, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {13}
	009 Move W0, 1
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]

Method: System.Void .ctor()

Disassembly:
	0x039AA534 MOVZ W8, 0x1
	0x039AA538 STRB W8, [X21 + 0xBDC]
	0x039AA53C STP X31, X31, [X31 + 0x8]
	0x039AA540 STR X31, [X31 + 0x18]
	0x039AA544 LDR X0, [X19 + 0x30]
	0x039AA548 CBZ X0, 0x39AA610
	0x039AA54C ADRP X8, 0x7A7000
	0x039AA550 LDR X8, [X8 + 0xAA0]
	0x039AA554 ADRP X23, 0x7A7000
	0x039AA558 ADRP X22, 0x7A7000
	0x039AA55C LDR X1, [X8]
	0x039AA560 LDR X23, [X23 + 0xA90]
	0x039AA564 LDR X22, [X22 + 0xA88]
	0x039AA568 ADD X8, X31, 0x8
	0x039AA56C BL 0x301CB58
	0x039AA570 LDR X1, [X23]
	0x039AA574 ADD X0, X31, 0x8
	0x039AA578 BL 0x2BC4350
	0x039AA57C TBZ X0, 0x0, 0x39AA5DC
	0x039AA580 LDR X21, [X31 + 0x18]
	0x039AA584 CBZ X21, 0x39AA60C
	0x039AA588 LDR X0, [X21 + 0x18]
	0x039AA58C MOV X1, X20
	0x039AA590 MOV X2, X31
	0x039AA594 BL 0x321BA08
	0x039AA598 TBZ X0, 0x0, 0x39AA570
	0x039AA59C ADRP X8, 0x7A7000
	0x039AA5A0 LDR X8, [X8 + 0x140]
	0x039AA5A4 LDR X0, [X8]
	0x039AA5A8 BL 0x1C16F10
	0x039AA5AC ADRP X8, 0x7A7000
	0x039AA5B0 LDR X8, [X8 + 0x148]
	0x039AA5B4 MOV X20, X0
	0x039AA5B8 LDR X2, [X8]
	0x039AA5BC MOV X1, X19
	0x039AA5C0 MOV X3, X31
	0x039AA5C4 BL 0x2A6B948
	0x039AA5C8 MOV X0, X21
	0x039AA5CC MOV X1, X20
	0x039AA5D0 MOV X2, X31
	0x039AA5D4 BL 0x39AF724
	0x039AA5D8 B 0x39AA5E0
	0x039AA5DC MOV X21, X31
	0x039AA5E0 LDR X1, [X22]
	0x039AA5E4 ADD X0, X31, 0x8
	0x039AA5E8 BL 0x2BC434C
	0x039AA5EC MOV X0, X19
	0x039AA5F0 MOV X1, X21
	0x039AA5F4 BL 0x39AA378
	0x039AA5F8 LDP X20, X19, [X31 + 0x40]
	0x039AA5FC LDP X22, X21, [X31 + 0x30]
	0x039AA600 LDP X30, X23, [X31 + 0x20]
	0x039AA604 ADD X31, X31, 0x50
	0x039AA608 RET
	0x039AA60C BL 0x1C16F20
	0x039AA610 BL 0x1C16F20
	0x039AA614 B 0x39AA620
	0x039AA618 B 0x39AA620
	0x039AA61C B 0x39AA620
	0x039AA620 MOV X20, X0
	0x039AA624 CMP W1, 0x1
	0x039AA628 B.NE 0x39AA654
	0x039AA62C MOV X0, X20
	0x039AA630 BL 0x3EB1AD0
	0x039AA634 LDR X21, [X0]
	0x039AA638 BL 0x3EB1AE0
	0x039AA63C LDR X1, [X22]
	0x039AA640 ADD X0, X31, 0x8
	0x039AA644 BL 0x2BC434C
	0x039AA648 CBZ X21, 0x39AA5EC
	0x039AA64C MOV X0, X21
	0x039AA650 BL 0x1C16F18
	0x039AA654 MOV X21, X31
	0x039AA658 B 0x39AA660
	0x039AA65C MOV X20, X0
	0x039AA660 LDR X1, [X22]
	0x039AA664 ADD X0, X31, 0x8
	0x039AA668 BL 0x2BC434C
	0x039AA66C CBNZ X21, 0x39AA678
	0x039AA670 MOV X0, X20
	0x039AA674 BL 0x1D2C690
	0x039AA678 MOV X0, X21
	0x039AA67C BL 0x1C16F18
	0x039AA680 BL 0x1990590
	0x039AA684 SUB X31, X31, 0x90
	0x039AA688 STP X30, X25, [X31 + 0x50]
	0x039AA68C STP X24, X23, [X31 + 0x60]
	0x039AA690 STP X22, X21, [X31 + 0x70]
	0x039AA694 STP X20, X19, [X31 + 0x80]
	0x039AA698 ADRP X22, 0xA37000
	0x039AA69C ADRP X21, 0x7A7000
	0x039AA6A0 LDRB W8, [X22 + 0xBDE]
	0x039AA6A4 LDR X21, [X21 + 0xB38]
	0x039AA6A8 MOV W19, W1
	0x039AA6AC MOV X20, X0
	0x039AA6B0 TBNZ X8, 0x0, 0x39AA728
	0x039AA6B4 ADRP X0, 0x7A7000
	0x039AA6B8 LDR X0, [X0 + 0xA88]
	0x039AA6BC BL 0x1C16CF4
	0x039AA6C0 ADRP X0, 0x7A7000
	0x039AA6C4 LDR X0, [X0 + 0xA90]
	0x039AA6C8 BL 0x1C16CF4
	0x039AA6CC ADRP X0, 0x7A7000
	0x039AA6D0 LDR X0, [X0 + 0xA98]
	0x039AA6D4 BL 0x1C16CF4
	0x039AA6D8 ADRP X0, 0x7A7000
	0x039AA6DC LDR X0, [X0 + 0xB40]
	0x039AA6E0 BL 0x1C16CF4
	0x039AA6E4 ADRP X0, 0x7A7000
	0x039AA6E8 LDR X0, [X0 + 0xB38]
	0x039AA6EC BL 0x1C16CF4
	0x039AA6F0 ADRP X0, 0x7A7000
	0x039AA6F4 LDR X0, [X0 + 0xB48]
	0x039AA6F8 BL 0x1C16CF4
	0x039AA6FC ADRP X0, 0x7A7000
	0x039AA700 LDR X0, [X0 + 0xAA0]
	0x039AA704 BL 0x1C16CF4
	0x039AA708 ADRP X0, 0x7A6000
	0x039AA70C LDR X0, [X0 + 0x798]
	0x039AA710 BL 0x1C16CF4
	0x039AA714 ADRP X0, 0x7A7000
	0x039AA718 LDR X0, [X0 + 0xB50]
	0x039AA71C BL 0x1C16CF4
	0x039AA720 MOVZ W8, 0x1
	0x039AA724 STRB W8, [X22 + 0xBDE]
	0x039AA728 LDR X0, [X21]
	0x039AA72C STP X31, X31, [X31 + 0x40]
	0x039AA730 STP X31, X31, [X31 + 0x30]
	0x039AA734 STP X31, X31, [X31 + 0x20]
	0x039AA738 ADRP X21, 0x7A7000
	0x039AA73C LDR W8, [X0 + 0xE0]
	0x039AA740 LDR X21, [X21 + 0xB40]
	0x039AA744 CBNZ W8, 0x39AA74C
	0x039AA748 BL 0x1C16DFC
	0x039AA74C LDR X1, [X21]
	0x039AA750 ADRP X22, 0x7A7000
	0x039AA754 LDR X22, [X22 + 0xB50]
	0x039AA758 ADD X0, X31, 0x48
	0x039AA75C BL 0x2EF26F4
	0x039AA760 STP X0, X1, [X31 + 0x38]
	0x039AA764 LDR X0, [X20 + 0x30]
	0x039AA768 CBZ X0, 0x39AA83C
	0x039AA76C ADRP X8, 0x7A7000
	0x039AA770 LDR X8, [X8 + 0xAA0]
	0x039AA774 LDR X1, [X8]
	0x039AA778 ADD X8, X31, 0x8
	0x039AA77C BL 0x301CB58
	0x039AA780 ADRP X21, 0x7A7000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xA38000
	010 Move X25, 0x79B000
	011 Move X20, 0x7A8000
	012 Move X23, 0x7A8000
	013 Move X21, 0x7A8000
	014 Move X22, 0x7A8000
	015 Move W8, [X24+3024]
	016 Move X25, [X25+3944]
	017 Move X20, [X20+2640]
	018 Move X23, [X23+2648]
	019 Move X21, [X21+2656]
	020 Move X22, [X22+2664]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {58}
	026 Move X0, 0x74A000
	027 Move X0, [X0+3368]
	028 Call 0x1C17CF4
	029 Move X0, 0x74B000
	030 Move X0, [X0+3696]
	031 Call 0x1C17CF4
	032 Move X0, 0x79B000
	033 Move X0, [X0+3944]
	034 Call 0x1C17CF4
	035 Move X0, 0x7A8000
	036 Move X0, [X0+2656]
	037 Call 0x1C17CF4
	038 Move X0, 0x7A8000
	039 Move X0, [X0+2648]
	040 Call 0x1C17CF4
	041 Move X0, 0x7A8000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0x7A8000
	045 Move X0, [X0+2680]
	046 Call 0x1C17CF4
	047 Move X0, 0x7A8000
	048 Move X0, [X0+2664]
	049 Call 0x1C17CF4
	050 Move X0, 0x7A8000
	051 Move X0, [X0+2688]
	052 Call 0x1C17CF4
	053 Move X0, 0x7A8000
	054 Move X0, [X0+2640]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X24+3024], W8
	058 Move X0, [X25]
	059 Call 0x1C17F10
	060 Move X1, [X20]
	061 Move X2, X31
	062 Move X20, X0
	063 Call InputActionMap..ctor, X0, X1
	064 Move [X19+32], X20
	065 Move X0, [X23]
	066 Call 0x1C17F10
	067 Move X1, [X21]
	068 Move X20, X0
	069 Call List`1<Object>..ctor, X0
	070 Move [X19+48], X20
	071 Move X0, [X22]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X22]
	077 Move X8, [X0+184]
	078 Move X20, [X8+8]
	079 Compare X20, 0
	080 JumpIfNotEqual {102}
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X22]
	086 Move X9, 0x74A000
	087 Move X8, [X0+184]
	088 Move X9, [X9+3368]
	089 Move X21, [X8]
	090 Move X0, [X9]
	091 Call 0x1C17F10
	092 Move X8, 0x7A8000
	093 Move X8, [X8+2672]
	094 Move X1, X21
	095 Move X3, X31
	096 Move X20, X0
	097 Move X2, [X8]
	098 Call Action`1<Boolean>..ctor, X0, X1, X2
	099 Move X0, [X22]
	100 Move X8, [X0+184]
	101 Move [X8+8], X20
	102 Move [X19+56], X20
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {108}
	106 Call 0x1C17DFC
	107 Move X0, [X22]
	108 Move X8, [X0+184]
	109 Move X23, 0x7A8000
	110 Move X20, [X8+16]
	111 Move X23, [X23+2688]
	112 Compare X20, 0
	113 JumpIfNotEqual {135}
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X22]
	119 Move X9, 0x74B000
	120 Move X8, [X0+184]
	121 Move X9, [X9+3696]
	122 Move X21, [X8]
	123 Move X0, [X9]
	124 Call 0x1C17F10
	125 Move X8, 0x7A8000
	126 Move X8, [X8+2680]
	127 Move X1, X21
	128 Move X3, X31
	129 Move X20, X0
	130 Move X2, [X8]
	131 Call Action..ctor, X0, X1, X2
	132 Move X8, [X22]
	133 Move X8, [X8+184]
	134 Move [X8+16], X20
	135 Move [X19+64], X20
	136 Move X0, [X23]
	137 Call 0x1C17F10
	138 Move X1, X31
	139 Move X20, X0
	140 Call Object..ctor, X0
	141 Compare X20, 0
	142 JumpIfEqual {168}
	143 Move W21, 1
	144 Move [X20+16], W31
	145 Move [X19+128], X20
	146 Move [X19+136], W21
	147 Move X0, [X23]
	148 Call 0x1C17F10
	149 Move X1, X31
	150 Move X20, X0
	151 Call Object..ctor, X0
	152 Compare X20, 0
	153 JumpIfEqual {168}
	154 Move [X20+16], W21
	155 Move [X19+144], X20
	156 Move X0, X19
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X24, [X31+16]
	162 Move X23, [X31+24]
	163 Move X1, X31
	164 Move X30, [X31+64]
	165 Move X25, [X31+72]
	166 Call Object..ctor, X0
	167 Return 
	168 Call 0x1C17F20

Method: System.Void RefreshEditor()

Disassembly:
	0x039A20D8 LDR X0, [X0 + 0x558]
	0x039A20DC BL 0x1C16CF4
	0x039A20E0 ADRP X0, 0x7AF000

ISIL:
	001 Move W8, 1
	002 Move [X0+80], W8
	003 Return 

Method: System.Void Reset()

Disassembly:
	0x039AA78C LDR X25, [X25 + 0xB48]
	0x039AA790 LDUR V0, [X31 + 0x8]
	0x039AA794 LDR X8, [X31 + 0x18]
	0x039AA798 ADRP X23, 0x7A7000
	0x039AA79C ADRP X24, 0x7A6000
	0x039AA7A0 LDR X23, [X23 + 0xA88]
	0x039AA7A4 LDR X24, [X24 + 0x798]
	0x039AA7A8 STR V0, [X31 + 0x2]
	0x039AA7AC STR X8, [X31 + 0x30]
	0x039AA7B0 LDR X1, [X21]
	0x039AA7B4 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+72]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X1, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call DebugManager.ReDrawOnScreenDebug, X0
	015 Return 

Method: System.Void ReDrawOnScreenDebug()

Disassembly:
	0x039A6654 LDR X1, [X8 + 0x40]
	0x039A6658 BL 0x1C16E00
	0x039A665C CBZ X0, 0x39A6EC8
	0x039A6660 LDR W8, [X24 + 0x18]
	0x039A6664 CMP W8, 0x2
	0x039A6668 B.LS 0x39A6EC4
	0x039A666C STR X25, [X24 + 0x30]
	0x039A6670 STR X24, [X23 + 0x48]
	0x039A6674 CBZ X22, 0x39A6EC0
	0x039A6678 ADRP X8, 0x7AA000
	0x039A667C LDR X8, [X8 + 0x7A0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call DebugManager.get_displayRuntimeUI, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {17}
	009 Move X0, [X19+104]
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call DebugUIHandlerCanvas.RequestHierarchyReset, X0
	016 Return 
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void RegisterData(UnityEngine.Rendering.IDebugData data)

Disassembly:
	0x039A20EC ADRP X0, 0x7AF000
	0x039A20F0 LDR X0, [X0 + 0x560]
	0x039A20F4 BL 0x1C16CF4
	0x039A20F8 ADRP X0, 0x7AF000
	0x039A20FC LDR X0, [X0 + 0x568]
	0x039A2100 BL 0x1C16CF4
	0x039A2104 ADRP X0, 0x7AF000
	0x039A2108 LDR X0, [X0 + 0x570]
	0x039A210C BL 0x1C16CF4
	0x039A2110 ADRP X0, 0x7AF000
	0x039A2114 LDR X0, [X0 + 0x528]
	0x039A2118 BL 0x1C16CF4
	0x039A211C MOVZ W8, 0x1
	0x039A2120 STRB W8, [X20 + 0xB8D]
	0x039A2124 LDR X0, [X22]
	0x039A2128 BL 0x1C16F10
	0x039A212C MOV X1, X31
	0x039A2130 MOV X20, X0
	0x039A2134 BL 0x33BDD8C
	0x039A2138 CBZ X20, 0x39A2230
	0x039A213C ADRP X8, 0x7AF000
	0x039A2140 LDR X8, [X8 + 0x558]
	0x039A2144 STR X21, [X20 + 0x10]
	0x039A2148 ADRP X22, 0x7AF000
	0x039A214C LDR X0, [X8]
	0x039A2150 LDR X22, [X22 + 0x488]
	0x039A2154 BL 0x1C16F10
	0x039A2158 MOV X21, X0
	0x039A215C BL 0x39A223C
	0x039A2160 LDR X0, [X22]
	0x039A2164 LDR W8, [X0 + 0xE0]
	0x039A2168 CBNZ W8, 0x39A2170
	0x039A216C BL 0x1C16DFC
	0x039A2170 CBZ X21, 0x39A2230
	0x039A2174 LDR X8, [X22]
	0x039A2178 ADRP X9, 0x7AF000
	0x039A217C ADRP X22, 0x7AF000
	0x039A2180 ADRP X23, 0x7AF000
	0x039A2184 LDR X8, [X8 + 0xB8]
	0x039A2188 ADRP X24, 0x7AF000
	0x039A218C ADRP X25, 0x7AF000
	0x039A2190 ADRP X26, 0x7AF000
	0x039A2194 LDR X8, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA40000
	006 Move W8, [X21+3025]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7B0000
	014 Move X0, [X0+1056]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3025], W8
	018 Compare X20, 0
	019 JumpIfEqual {51}
	020 Move X10, 0x7B0000
	021 Move X8, [X20]
	022 Move X10, [X10+1056]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X1, X0
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call DebugManager.add_resetData, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Void UnregisterData(UnityEngine.Rendering.IDebugData data)

Disassembly:
	0x039A2198 LDR X9, [X9 + 0x550]
	0x039A219C LDR X22, [X22 + 0x560]
	0x039A21A0 LDR X23, [X23 + 0x530]
	0x039A21A4 STR X8, [X21 + 0x28]
	0x039A21A8 LDR X0, [X9]
	0x039A21AC LDR X24, [X24 + 0x568]
	0x039A21B0 LDR X25, [X25 + 0x548]
	0x039A21B4 LDR X26, [X26 + 0x570]
	0x039A21B8 BL 0x1C16F10
	0x039A21BC LDR X2, [X22]
	0x039A21C0 MOV X1, X20
	0x039A21C4 MOV X3, X31
	0x039A21C8 MOV X22, X0
	0x039A21CC BL 0x2D27AA8
	0x039A21D0 STR X22, [X21 + 0x48]
	0x039A21D4 LDR X0, [X23]
	0x039A21D8 BL 0x1C16F10
	0x039A21DC LDR X2, [X24]
	0x039A21E0 MOV X1, X20
	0x039A21E4 MOV X3, X31
	0x039A21E8 MOV X22, X0
	0x039A21EC BL 0x2A6B948
	0x039A21F0 STR X22, [X21 + 0x50]
	0x039A21F4 LDR X0, [X25]
	0x039A21F8 BL 0x1C16F10
	0x039A21FC LDR X2, [X26]
	0x039A2200 MOV X1, X20
	0x039A2204 MOV X3, X31
	0x039A2208 MOV X22, X0
	0x039A220C BL 0x2D27AA8
	0x039A2210 STP X19, X22, [X21 + 0x58]
	0x039A2214 MOV X0, X21
	0x039A2218 LDP X20, X19, [X31 + 0x40]
	0x039A221C LDP X22, X21, [X31 + 0x30]
	0x039A2220 LDP X24, X23, [X31 + 0x20]
	0x039A2224 LDP X26, X25, [X31 + 0x10]
	0x039A2228 LDR X30, [X31], #0x50
	0x039A222C RET
	0x039A2230 BL 0x1C16F20
	0x039A2234 MOV X1, X31
	0x039A2238 B 0x33BDD8C
	0x039A223C STP X30, X21, [X31 - 0x20]!
	0x039A2240 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA40000
	006 Move W8, [X21+3026]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7B0000
	014 Move X0, [X0+1056]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3026], W8
	018 Compare X20, 0
	019 JumpIfEqual {51}
	020 Move X10, 0x7B0000
	021 Move X8, [X20]
	022 Move X10, [X10+1056]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X1, X0
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call DebugManager.remove_resetData, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Int32 GetState()

Disassembly:
	0x039AA7B8 BL 0x2BC4350
	0x039AA7BC TBZ X0, 0x0, 0x39AA7E8
	0x039AA7C0 LDR X2, [X31 + 0x30]
	0x039AA7C4 MOV X0, X20
	0x039AA7C8 MOV W1, W19
	0x039AA7CC BL 0x39AA928
	0x039AA7D0 MOV X1, X0
	0x039AA7D4 LDR X0, [X31 + 0x48]
	0x039AA7D8 CBZ X0, 0x39AA838
	0x039AA7DC LDR X2, [X25]
	0x039AA7E0 BL 0x301C194
	0x039AA7E4 B 0x39AA7B0
	0x039AA7E8 MOV X19, X31
	0x039AA7EC LDR X1, [X23]
	0x039AA7F0 ADD X0, X31, 0x20
	0x039AA7F4 BL 0x2BC434C
	0x039AA7F8 CBNZ X19, 0x39AA840
	0x039AA7FC LDR X0, [X31 + 0x48]
	0x039AA800 CBZ X0, 0x39AA848
	0x039AA804 LDR X1, [X24]
	0x039AA808 BL 0x301DDC4
	0x039AA80C LDR X1, [X22]
	0x039AA810 MOV X19, X0
	0x039AA814 ADD X0, X31, 0x38
	0x039AA818 BL 0x24A69BC
	0x039AA81C MOV X0, X19
	0x039AA820 LDP X20, X19, [X31 + 0x80]
	0x039AA824 LDP X22, X21, [X31 + 0x70]
	0x039AA828 LDP X24, X23, [X31 + 0x60]
	0x039AA82C LDP X30, X25, [X31 + 0x50]
	0x039AA830 ADD X31, X31, 0x90
	0x039AA834 RET
	0x039AA838 BL 0x1C16F20
	0x039AA83C BL 0x1C16F20
	0x039AA840 MOV X0, X19
	0x039AA844 BL 0x1C16F18
	0x039AA848 BL 0x1C16F20
	0x039AA84C B 0x39AA85C
	0x039AA850 B 0x39AA85C
	0x039AA854 B 0x39AA85C
	0x039AA858 B 0x39AA85C
	0x039AA85C MOV X20, X1
	0x039AA860 MOV X21, X0
	0x039AA864 B 0x39AA8AC
	0x039AA868 B 0x39AA874
	0x039AA86C B 0x39AA874
	0x039AA870 B 0x39AA874
	0x039AA874 MOV X20, X1
	0x039AA878 MOV X21, X0
	0x039AA87C CMP W20, 0x1
	0x039AA880 B.NE 0x39AA898
	0x039AA884 MOV X0, X21
	0x039AA888 BL 0x3EB1AD0
	0x039AA88C LDR X19, [X0]
	0x039AA890 BL 0x3EB1AE0
	0x039AA894 B 0x39AA7EC
	0x039AA898 MOV X19, X31
	0x039AA89C LDR X1, [X23]
	0x039AA8A0 ADD X0, X31, 0x20
	0x039AA8A4 BL 0x2BC434C
	0x039AA8A8 CBNZ X19, 0x39AA8EC
	0x039AA8AC CMP W20, 0x1
	0x039AA8B0 B.NE 0x39AA8DC
	0x039AA8B4 MOV X0, X21
	0x039AA8B8 BL 0x3EB1AD0
	0x039AA8BC LDR X20, [X0]
	0x039AA8C0 BL 0x3EB1AE0
	0x039AA8C4 LDR X1, [X22]
	0x039AA8C8 ADD X0, X31, 0x38
	0x039AA8CC BL 0x24A69BC
	0x039AA8D0 CBNZ X20, 0x39AA8E4
	0x039AA8D4 MOV X19, X31
	0x039AA8D8 B 0x39AA81C
	0x039AA8DC MOV X20, X31
	0x039AA8E0 B 0x39AA904
	0x039AA8E4 MOV X0, X20
	0x039AA8E8 BL 0x1C16F18
	0x039AA8EC MOV X0, X19
	0x039AA8F0 BL 0x1C16F18
	0x039AA8F4 MOV X20, X1
	0x039AA8F8 MOV X21, X0
	0x039AA8FC B 0x39AA89C
	0x039AA900 MOV X21, X0
	0x039AA904 LDR X1, [X22]
	0x039AA908 ADD X0, X31, 0x38
	0x039AA90C BL 0x24A69BC
	0x039AA910 CBNZ X20, 0x39AA91C
	0x039AA914 MOV X0, X21
	0x039AA918 BL 0x1D2C690
	0x039AA91C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0xA38000
	008 Move W8, [X20+3027]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x7A8000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move X0, 0x7A8000
	018 Move X0, [X0+2704]
	019 Call 0x1C17CF4
	020 Move X0, 0x7A8000
	021 Move X0, [X0+2712]
	022 Call 0x1C17CF4
	023 Move X0, 0x7A8000
	024 Move X0, [X0+2720]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3027], W8
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Move X0, [X19+48]
	032 Compare X0, 0
	033 JumpIfEqual {72}
	034 Move X8, 0x7A8000
	035 Move X8, [X8+2720]
	036 Move X21, 0x7A8000
	037 Move X20, 0x7A8000
	038 Move X1, [X8]
	039 Move X21, [X21+2704]
	040 Move X20, [X20+2696]
	041 Add X8, X31, 8
	042 Call List`1<Object>.GetEnumerator, X0
	043 Move W19, 17
	044 Move W22, 23
	045 Move X1, [X21]
	046 Add X0, X31, 8
	047 Call Enumerator<Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {60}
	052 Move X0, [X31+24]
	053 Compare X0, 0
	054 JumpIfEqual {71}
	055 Move X8, [X0]
	056 Move X9, [X8+344]
	057 Move X1, [X8+352]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 NotImplemented "Instruction MADD not yet implemented."
	060 Move X1, [X20]
	061 Add X0, X31, 8
	062 Call Enumerator<Object>.Dispose, X0
	063 Move W0, W19
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X30, [X31+32]
	069 Add X31, X31, 80
	070 Return X0
	071 Call 0x1C17F20
	072 Call 0x1C17F20
	073 Move X20, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X20
	076 Call 0x3EB2AD0
	077 Move X21, [X0]
	078 Call 0x3EB2AE0
	079 Move X8, 0x7A8000
	080 Move X8, [X8+2696]
	081 Add X0, X31, 8
	082 Move X1, [X8]
	083 Call Enumerator<Object>.Dispose, X0
	084 Compare X21, 0
	085 JumpIfEqual {63}
	086 Move X0, X21
	087 Call 0x1C17F18
	088 Move X21, X31
	089 Move X20, X0
	090 Move X8, 0x7A8000
	091 Move X8, [X8+2696]
	092 Move X1, [X8]
	093 Add X0, X31, 8
	094 Call Enumerator<Object>.Dispose, X0
	095 Compare X21, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X20
	098 Call 0x1D2D690
	099 Move X0, X21
	100 Call 0x1C17F18
	101 Call 0x1991590

Method: System.Void RegisterRootCanvas(UnityEngine.Rendering.UI.DebugUIHandlerCanvas root)

Disassembly:
	0x039AA920 BL 0x1C16F18
	0x039AA924 BL 0x1990590
	0x039AA928 SUB X31, X31, 0x80
	0x039AA92C STP X29, X30, [X31 + 0x20]
	0x039AA930 STP X28, X27, [X31 + 0x30]
	0x039AA934 STP X26, X25, [X31 + 0x40]
	0x039AA938 STP X24, X23, [X31 + 0x50]
	0x039AA93C STP X22, X21, [X31 + 0x60]
	0x039AA940 STP X20, X19, [X31 + 0x70]
	0x039AA944 ADRP X23, 0xA37000
	0x039AA948 ADRP X22, 0x7A7000
	0x039AA94C LDRB W8, [X23 + 0xBDF]
	0x039AA950 LDR X22, [X22 + 0xB38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {17}
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call Component.get_gameObject, X0
	011 Move [X20+96], X0
	012 Move [X20+104], X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void ChangeSelection(UnityEngine.Rendering.UI.DebugUIHandlerWidget widget, System.Boolean fromNext)

Disassembly:
	0x039AA954 MOV X19, X2
	0x039AA958 MOV W20, W1
	0x039AA95C MOV X21, X0
	0x039AA960 TBNZ X8, 0x0, 0x39AA9F0
	0x039AA964 ADRP X0, 0x7A7000
	0x039AA968 LDR X0, [X0 + 0xB58]
	0x039AA96C BL 0x1C16CF4
	0x039AA970 ADRP X0, 0x749000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And W2, W2, 1
	006 Move X3, X31
	007 Move X30, [X31+16]
	008 Call DebugUIHandlerCanvas.ChangeSelection, X0, X1, X2
	009 Return 
	010 Call 0x1C17F20

Method: System.Void SetScrollTarget(UnityEngine.Rendering.UI.DebugUIHandlerWidget widget)

Disassembly:
	0x039AA974 LDR X0, [X0 + 0xE00]
	0x039AA978 BL 0x1C16CF4
	0x039AA97C ADRP X0, 0x7A7000
	0x039AA980 LDR X0, [X0 + 0xAE8]
	0x039AA984 BL 0x1C16CF4
	0x039AA988 ADRP X0, 0x749000
	0x039AA98C LDR X0, [X0 + 0xE18]
	0x039AA990 BL 0x1C16CF4
	0x039AA994 ADRP X0, 0x7A7000
	0x039AA998 LDR X0, [X0 + 0xB40]
	0x039AA99C BL 0x1C16CF4
	0x039AA9A0 ADRP X0, 0x7A7000
	0x039AA9A4 LDR X0, [X0 + 0xB38]
	0x039AA9A8 BL 0x1C16CF4
	0x039AA9AC ADRP X0, 0x7A7000
	0x039AA9B0 LDR X0, [X0 + 0xB48]
	0x039AA9B4 BL 0x1C16CF4
	0x039AA9B8 ADRP X0, 0x7A6000
	0x039AA9BC LDR X0, [X0 + 0x790]
	0x039AA9C0 BL 0x1C16CF4
	0x039AA9C4 ADRP X0, 0x7A6000
	0x039AA9C8 LDR X0, [X0 + 0x798]
	0x039AA9CC BL 0x1C16CF4
	0x039AA9D0 ADRP X0, 0x7A7000
	0x039AA9D4 LDR X0, [X0 + 0xAF0]
	0x039AA9D8 BL 0x1C16CF4
	0x039AA9DC ADRP X0, 0x7A7000
	0x039AA9E0 LDR X0, [X0 + 0xB50]
	0x039AA9E4 BL 0x1C16CF4
	0x039AA9E8 MOVZ W8, 0x1
	0x039AA9EC STRB W8, [X23 + 0xBDF]
	0x039AA9F0 LDR X0, [X22]
	0x039AA9F4 STP X31, X31, [X31 + 0x10]
	0x039AA9F8 STR X31, [X31 + 0x8]
	0x039AA9FC ADRP X22, 0x7A7000
	0x039AAA00 LDR W8, [X0 + 0xE0]
	0x039AAA04 LDR X22, [X22 + 0xB40]
	0x039AAA08 CBNZ W8, 0x39AAA10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA38000
	007 Move X21, 0x74A000
	008 Move W8, [X22+3028]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x74A000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3028], W8
	021 Move X0, [X21]
	022 Move X21, [X20+104]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {47}
	035 Move X0, [X20+104]
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 Move X1, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X2, X31
	044 Move X30, [X31+48]
	045 Call DebugUIHandlerCanvas.SetScrollTarget, X0, X1
	046 Return 
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void EnsurePersistentCanvas()

Disassembly:
	0x039AAA0C BL 0x1C16DFC
	0x039AAA10 LDR X1, [X22]
	0x039AAA14 ADRP X23, 0x7A7000
	0x039AAA18 LDR X23, [X23 + 0xB50]
	0x039AAA1C ADD X0, X31, 0x18
	0x039AAA20 BL 0x2EF26F4
	0x039AAA24 STP X0, X1, [X31 + 0x8]
	0x039AAA28 CBZ X19, 0x39AAD08
	0x039AAA2C ADRP X25, 0x7A7000
	0x039AAA30 LDR X8, [X19]
	0x039AAA34 LDR X25, [X25 + 0xB58]
	0x039AAA38 LDRH W9, [X8 + 0x12E]
	0x039AAA3C LDR X1, [X25]
	0x039AAA40 CBZ X9, 0x39AAA64
	0x039AAA44 LDR X10, [X8 + 0xB0]
	0x039AAA48 ADD X10, X10, 0x8
	0x039AAA4C LDUR X11, [X10 - 0x8]
	0x039AAA50 CMP X11, X1
	0x039AAA54 B.EQ 0x39AAA74
	0x039AAA58 SUBS X9, X9, 0x1
	0x039AAA5C ADD X10, X10, 0x10
	0x039AAA60 B.NE 0x39AAA4C
	0x039AAA64 MOV X0, X19
	0x039AAA68 MOV W2, W31
	0x039AAA6C BL 0x1C5C788
	0x039AAA70 B 0x39AAA80
	0x039AAA74 LDRSW X9, [X10]
	0x039AAA78 ADD X8, X8, X9, 0x4, LSL
	0x039AAA7C ADD X0, X8, 0x138
	0x039AAA80 LDP X8, X1, [X0]
	0x039AAA84 MOV X0, X19
	0x039AAA88 BLR X8
	0x039AAA8C CBZ X0, 0x39AAD0C
	0x039AAA90 ADRP X8, 0x7A7000
	0x039AAA94 LDR X8, [X8 + 0xAF0]
	0x039AAA98 LDR X1, [X8]
	0x039AAA9C BL 0x24985D8
	0x039AAAA0 ADRP X24, 0x749000
	0x039AAAA4 LDR X24, [X24 + 0xE00]
	0x039AAAA8 MOV X19, X0
	0x039AAAAC CBZ X0, 0x39AAD10
	0x039AAAB0 ADRP X26, 0x749000
	0x039AAAB4 ADRP X27, 0x7A7000
	0x039AAAB8 ADRP X28, 0x7A6000
	0x039AAABC ADRP X29, 0x7A7000
	0x039AAAC0 LDR X26, [X26 + 0xE18]
	0x039AAAC4 LDR X27, [X27 + 0xAE8]
	0x039AAAC8 LDR X28, [X28 + 0x790]
	0x039AAACC LDR X29, [X29 + 0xB48]
	0x039AAAD0 LDR X8, [X19]
	0x039AAAD4 LDR X1, [X26]
	0x039AAAD8 LDRH W9, [X8 + 0x12E]
	0x039AAADC CBZ X9, 0x39AAB00
	0x039AAAE0 LDR X10, [X8 + 0xB0]
	0x039AAAE4 ADD X10, X10, 0x8
	0x039AAAE8 LDUR X11, [X10 - 0x8]
	0x039AAAEC CMP X11, X1
	0x039AAAF0 B.EQ 0x39AAB10
	0x039AAAF4 SUBS X9, X9, 0x1
	0x039AAAF8 ADD X10, X10, 0x10
	0x039AAAFC B.NE 0x39AAAE8
	0x039AAB00 MOV X0, X19
	0x039AAB04 MOV W2, W31
	0x039AAB08 BL 0x1C5C788
	0x039AAB0C B 0x39AAB1C
	0x039AAB10 LDRSW X9, [X10]
	0x039AAB14 ADD X8, X8, X9, 0x4, LSL
	0x039AAB18 ADD X0, X8, 0x138
	0x039AAB1C LDP X8, X1, [X0]
	0x039AAB20 MOV X0, X19
	0x039AAB24 BLR X8
	0x039AAB28 TBZ X0, 0x0, 0x39AAC30
	0x039AAB2C LDR X8, [X19]
	0x039AAB30 LDR X1, [X27]
	0x039AAB34 LDRH W9, [X8 + 0x12E]
	0x039AAB38 CBZ X9, 0x39AAB5C
	0x039AAB3C LDR X10, [X8 + 0xB0]
	0x039AAB40 ADD X10, X10, 0x8
	0x039AAB44 LDUR X11, [X10 - 0x8]
	0x039AAB48 CMP X11, X1
	0x039AAB4C B.EQ 0x39AAB6C
	0x039AAB50 SUBS X9, X9, 0x1
	0x039AAB54 ADD X10, X10, 0x10
	0x039AAB58 B.NE 0x39AAB44
	0x039AAB5C MOV X0, X19
	0x039AAB60 MOV W2, W31
	0x039AAB64 BL 0x1C5C788
	0x039AAB68 B 0x39AAB78
	0x039AAB6C LDRSW X9, [X10]
	0x039AAB70 ADD X8, X8, X9, 0x4, LSL
	0x039AAB74 ADD X0, X8, 0x138
	0x039AAB78 LDP X8, X1, [X0]
	0x039AAB7C MOV X0, X19
	0x039AAB80 BLR X8
	0x039AAB84 MOV X8, X0
	0x039AAB88 CBZ X0, 0x39AACF8
	0x039AAB8C LDR W9, [X8 + 0x20]
	0x039AAB90 BICS W31, W20, W9, 0x0
	0x039AAB94 B.NE 0x39AABDC
	0x039AAB98 LDR X0, [X31 + 0x18]
	0x039AAB9C CBZ X0, 0x39AACFC
	0x039AABA0 LDR W11, [X0 + 0x1C]
	0x039AABA4 LDR X9, [X0 + 0x10]
	0x039AABA8 LDR X10, [X28]
	0x039AABAC ADD W11, W11, 0x1
	0x039AABB0 STR W11, [X0 + 0x1C]
	0x039AABB4 CBZ X9, 0x39AAD00
	0x039AABB8 LDRSW X11, [X0 + 0x18]
	0x039AABBC LDR W12, [X9 + 0x18]
	0x039AABC0 CMP W11, W12
	0x039AABC4 B.CS 0x39AAC18
	0x039AABC8 ADD W10, W11, 0x1
	0x039AABCC ADD X9, X9, X11, 0x3, LSL
	0x039AABD0 STR W10, [X0 + 0x18]
	0x039AABD4 STR X8, [X9 + 0x20]
	0x039AABD8 B 0x39AAAD0
	0x039AABDC LDR X1, [X25]
	0x039AABE0 MOV X0, X8
	0x039AABE4 BL 0x1C16E00
	0x039AABE8 MOV X2, X0
	0x039AABEC CBZ X0, 0x39AAAD0
	0x039AABF0 LDR X22, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA38000
	006 Move X21, 0x74A000
	007 Move W8, [X20+3029]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x7A8000
	015 Move X0, [X0+2728]
	016 Call 0x1C17CF4
	017 Move X0, 0x7A8000
	018 Move X0, [X0+2736]
	019 Call 0x1C17CF4
	020 Move X0, 0x7A8000
	021 Move X0, [X0+2744]
	022 Call 0x1C17CF4
	023 Move X0, 0x74A000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x7A8000
	027 Move X0, [X0+2752]
	028 Call 0x1C17CF4
	029 Move X0, 0x7A8000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x7A8000
	033 Move X0, [X0+2768]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3029], W8
	037 Move X0, [X21]
	038 Move X20, [X19+120]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {140}
	051 Move X0, [X21]
	052 Move X20, 0x7A8000
	053 Move W8, [X0+224]
	054 Move X20, [X20+2736]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, [X20]
	059 Call 0x222E02C
	060 Move X1, X31
	061 Move X2, X31
	062 Move X20, X0
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {127}
	068 Move X8, 0x7A8000
	069 Move X9, 0x7A8000
	070 Move X8, [X8+2768]
	071 Move X9, [X9+2752]
	072 Move X0, [X8]
	073 Move X1, [X9]
	074 Call 0x2242FB8, X0
	075 Move X8, [X21]
	076 Move X20, X0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, 0x7A8000
	083 Move X8, [X8+2744]
	084 Move X0, X20
	085 Move X1, [X8]
	086 Call 0x222E35C, X0
	087 Compare X0, 0
	088 JumpIfEqual {145}
	089 Move X1, X31
	090 Call Component.get_gameObject, X0
	091 Move [X19+112], X0
	092 Compare X0, 0
	093 JumpIfEqual {145}
	094 Move X8, 0x7A8000
	095 Move X8, [X8+2760]
	096 Move X2, X31
	097 Move X1, [X8]
	098 Call Object.set_name, X0, X1
	099 Move X0, [X19+112]
	100 Compare X0, 0
	101 JumpIfEqual {145}
	102 Move X1, X31
	103 Call GameObject.get_transform, X0
	104 Move X21, 0xA2F000
	105 Move W8, [X21+1923]
	106 Move X20, X0
	107 Compare W8, 0
	108 JumpIfNotEqual {114}
	109 Move X0, 0x74A000
	110 Move X0, [X0+1440]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X21+1923], W8
	114 Compare X20, 0
	115 JumpIfEqual {145}
	116 Move X8, 0x74A000
	117 Move X8, [X8+1440]
	118 Move X0, X20
	119 Move X1, X31
	120 Move X8, [X8]
	121 Move X8, [X8+184]
	122 Move S1, [X8+4]
	123 Move S2, [X8+8]
	124 Move V0, [X8]
	125 Call Transform.set_localPosition, X0, X1
	126 Move X0, [X19+112]
	127 Compare X20, 0
	128 JumpIfEqual {145}
	129 Move X0, X20
	130 Move X1, X31
	131 Call Component.get_gameObject, X0
	132 Move [X19+112], X0
	133 Compare X0, 0
	134 JumpIfEqual {145}
	135 Move X8, 0x7A8000
	136 Move X8, [X8+2728]
	137 Move X1, [X8]
	138 Call 0x21E62E4, X0
	139 Move [X19+120], X0
	140 Move X20, [X31+16]
	141 Move X19, [X31+24]
	142 Move X30, [X31+32]
	143 Move X21, [X31+40]
	144 Return 
	145 Call 0x1C17F20

Method: System.Void TogglePersistent(UnityEngine.Rendering.DebugUI/Widget widget, System.Nullable`1<System.Int32> forceTupleIndex = null)

Disassembly:
	0x039AABF4 MOV X0, X21
	0x039AABF8 MOV W1, W20
	0x039AABFC BL 0x39AA928
	0x039AAC00 MOV X1, X0
	0x039AAC04 CBZ X22, 0x39AAD04
	0x039AAC08 LDR X2, [X29]
	0x039AAC0C MOV X0, X22
	0x039AAC10 BL 0x301C194
	0x039AAC14 B 0x39AAAD0
	0x039AAC18 LDR X9, [X10 + 0x20]
	0x039AAC1C LDR X9, [X9 + 0xC0]
	0x039AAC20 LDR X2, [X9 + 0x70]
	0x039AAC24 MOV X1, X8
	0x039AAC28 BL 0x301BF90
	0x039AAC2C B 0x39AAAD0
	0x039AAC30 MOV X22, X31
	0x039AAC34 MOVZ W20, 0x5
	0x039AAC38 CBZ X19, 0x39AAC94
	0x039AAC3C LDR X8, [X19]
	0x039AAC40 LDR X1, [X24]
	0x039AAC44 LDRH W9, [X8 + 0x12E]
	0x039AAC48 CBZ X9, 0x39AAC6C
	0x039AAC4C LDR X10, [X8 + 0xB0]
	0x039AAC50 ADD X10, X10, 0x8
	0x039AAC54 LDUR X11, [X10 - 0x8]
	0x039AAC58 CMP X11, X1
	0x039AAC5C B.EQ 0x39AAC7C
	0x039AAC60 SUBS X9, X9, 0x1
	0x039AAC64 ADD X10, X10, 0x10
	0x039AAC68 B.NE 0x39AAC54
	0x039AAC6C MOV X0, X19
	0x039AAC70 MOV W2, W31
	0x039AAC74 BL 0x1C5C788
	0x039AAC78 B 0x39AAC88
	0x039AAC7C LDRSW X9, [X10]
	0x039AAC80 ADD X8, X8, X9, 0x4, LSL
	0x039AAC84 ADD X0, X8, 0x138
	0x039AAC88 LDP X8, X1, [X0]
	0x039AAC8C MOV X0, X19
	0x039AAC90 BLR X8
	0x039AAC94 CBNZ X22, 0x39AAD14
	0x039AAC98 CMP W20, 0x5
	0x039AAC9C B.EQ 0x39AACA4
	0x039AACA0 CBNZ W20, 0x39AACC4
	0x039AACA4 LDR X0, [X31 + 0x18]
	0x039AACA8 CBZ X0, 0x39AAD1C
	0x039AACAC ADRP X8, 0x7A6000
	0x039AACB0 LDR X8, [X8 + 0x798]
	0x039AACB4 LDR X1, [X8]
	0x039AACB8 BL 0x301DDC4
	0x039AACBC MOV X19, X0
	0x039AACC0 B 0x39AACC8
	0x039AACC4 MOV X19, X31
	0x039AACC8 LDR X1, [X23]
	0x039AACCC ADD X0, X31, 0x8
	0x039AACD0 BL 0x24A69BC
	0x039AACD4 MOV X0, X19
	0x039AACD8 LDP X20, X19, [X31 + 0x70]
	0x039AACDC LDP X22, X21, [X31 + 0x60]
	0x039AACE0 LDP X24, X23, [X31 + 0x50]
	0x039AACE4 LDP X26, X25, [X31 + 0x40]
	0x039AACE8 LDP X28, X27, [X31 + 0x30]
	0x039AACEC LDP X29, X30, [X31 + 0x20]
	0x039AACF0 ADD X31, X31, 0x80
	0x039AACF4 RET
	0x039AACF8 BL 0x1C16F20
	0x039AACFC BL 0x1C16F20
	0x039AAD00 BL 0x1C16F20
	0x039AAD04 BL 0x1C16F20
	0x039AAD08 BL 0x1C16F20
	0x039AAD0C BL 0x1C16F20
	0x039AAD10 BL 0x1C16F20
	0x039AAD14 MOV X0, X22
	0x039AAD18 BL 0x1C16F18
	0x039AAD1C BL 0x1C16F20
	0x039AAD20 B 0x39AAD38
	0x039AAD24 B 0x39AAD38
	0x039AAD28 B 0x39AAD60
	0x039AAD2C B 0x39AAD38
	0x039AAD30 B 0x39AAD38
	0x039AAD34 B 0x39AAD38
	0x039AAD38 MOV X21, X1
	0x039AAD3C MOV X20, X0
	0x039AAD40 B 0x39AADF0
	0x039AAD44 B 0x39AAD60
	0x039AAD48 B 0x39AAD60
	0x039AAD4C B 0x39AAD60
	0x039AAD50 B 0x39AAD60
	0x039AAD54 B 0x39AAD60
	0x039AAD58 B 0x39AAD60
	0x039AAD5C B 0x39AAD60
	0x039AAD60 MOV X21, X1
	0x039AAD64 MOV X20, X0
	0x039AAD68 CMP W21, 0x1
	0x039AAD6C B.NE 0x39AAD8C
	0x039AAD70 MOV X0, X20
	0x039AAD74 BL 0x3EB1AD0
	0x039AAD78 LDR X22, [X0]
	0x039AAD7C BL 0x3EB1AE0
	0x039AAD80 MOV W20, W31
	0x039AAD84 CBNZ X19, 0x39AAC3C
	0x039AAD88 B 0x39AAC94
	0x039AAD8C MOV X22, X31
	0x039AAD90 CBZ X19, 0x39AADEC
	0x039AAD94 LDR X8, [X19]
	0x039AAD98 LDR X1, [X24]
	0x039AAD9C LDRH W9, [X8 + 0x12E]
	0x039AADA0 CBZ X9, 0x39AADC4
	0x039AADA4 LDR X10, [X8 + 0xB0]
	0x039AADA8 ADD X10, X10, 0x8
	0x039AADAC LDUR X11, [X10 - 0x8]
	0x039AADB0 CMP X11, X1
	0x039AADB4 B.EQ 0x39AADD4
	0x039AADB8 SUBS X9, X9, 0x1
	0x039AADBC ADD X10, X10, 0x10
	0x039AADC0 B.NE 0x39AADAC
	0x039AADC4 MOV X0, X19
	0x039AADC8 MOV W2, W31
	0x039AADCC BL 0x1C5C788
	0x039AADD0 B 0x39AADE0
	0x039AADD4 LDRSW X9, [X10]
	0x039AADD8 ADD X8, X8, X9, 0x4, LSL
	0x039AADDC ADD X0, X8, 0x138
	0x039AADE0 LDP X8, X1, [X0]
	0x039AADE4 MOV X0, X19
	0x039AADE8 BLR X8
	0x039AADEC CBNZ X22, 0x39AAE28
	0x039AADF0 CMP W21, 0x1
	0x039AADF4 B.NE 0x39AAE20
	0x039AADF8 MOV X0, X20
	0x039AADFC BL 0x3EB1AD0
	0x039AAE00 LDR X19, [X0]
	0x039AAE04 BL 0x3EB1AE0
	0x039AAE08 LDR X1, [X23]
	0x039AAE0C ADD X0, X31, 0x8
	0x039AAE10 BL 0x24A69BC
	0x039AAE14 CBZ X19, 0x39AACD4
	0x039AAE18 MOV X0, X19
	0x039AAE1C BL 0x1C16F18
	0x039AAE20 MOV X19, X31
	0x039AAE24 B 0x39AAE44
	0x039AAE28 MOV X0, X22
	0x039AAE2C BL 0x1C16F18
	0x039AAE30 MOV X21, X1
	0x039AAE34 MOV X20, X0
	0x039AAE38 CBNZ X19, 0x39AAD94
	0x039AAE3C B 0x39AADEC
	0x039AAE40 MOV X20, X0
	0x039AAE44 LDR X1, [X23]
	0x039AAE48 ADD X0, X31, 0x8
	0x039AAE4C BL 0x24A69BC
	0x039AAE50 CBNZ X19, 0x39AAE5C
	0x039AAE54 MOV X0, X20
	0x039AAE58 BL 0x1D2C690
	0x039AAE5C MOV X0, X19
	0x039AAE60 BL 0x1C16F18
	0x039AAE64 BL 0x1990590
	0x039AAE68 SUB X31, X31, 0x50
	0x039AAE6C STP X30, X23, [X31 + 0x20]
	0x039AAE70 STP X22, X21, [X31 + 0x30]
	0x039AAE74 STP X20, X19, [X31 + 0x40]
	0x039AAE78 ADRP X21, 0xA37000
	0x039AAE7C LDRB W8, [X21 + 0xBE0]
	0x039AAE80 MOV X19, X1
	0x039AAE84 MOV X20, X0
	0x039AAE88 TBNZ X8, 0x0, 0x39AAEC4
	0x039AAE8C ADRP X0, 0x7A7000
	0x039AAE90 LDR X0, [X0 + 0xA88]
	0x039AAE94 BL 0x1C16CF4
	0x039AAE98 ADRP X0, 0x7A7000
	0x039AAE9C LDR X0, [X0 + 0xA90]
	0x039AAEA0 BL 0x1C16CF4
	0x039AAEA4 ADRP X0, 0x7A7000
	0x039AAEA8 LDR X0, [X0 + 0xA98]
	0x039AAEAC BL 0x1C16CF4
	0x039AAEB0 ADRP X0, 0x7A7000
	0x039AAEB4 LDR X0, [X0 + 0xAA0]
	0x039AAEB8 BL 0x1C16CF4
	0x039AAEBC MOVZ W8, 0x1
	0x039AAEC0 STRB W8, [X21 + 0xBE0]
	0x039AAEC4 STP X31, X31, [X31 + 0x8]
	0x039AAEC8 STR X31, [X31 + 0x18]
	0x039AAECC LDR X0, [X20 + 0x30]
	0x039AAED0 CBZ X0, 0x39AAF4C
	0x039AAED4 ADRP X8, 0x7A7000
	0x039AAED8 LDR X8, [X8 + 0xAA0]
	0x039AAEDC ADRP X23, 0x7A7000
	0x039AAEE0 ADRP X22, 0x7A7000
	0x039AAEE4 LDR X1, [X8]
	0x039AAEE8 LDR X23, [X23 + 0xA90]
	0x039AAEEC LDR X22, [X22 + 0xA88]
	0x039AAEF0 ADD X8, X31, 0x8
	0x039AAEF4 BL 0x301CB58
	0x039AAEF8 LDR X1, [X23]
	0x039AAEFC ADD X0, X31, 0x8
	0x039AAF00 BL 0x2BC4350
	0x039AAF04 TBZ X0, 0x0, 0x39AAF24
	0x039AAF08 LDR X2, [X31 + 0x18]
	0x039AAF0C MOV X0, X20
	0x039AAF10 MOV X1, X19
	0x039AAF14 BL 0x39AAFC0
	0x039AAF18 MOV X21, X0
	0x039AAF1C CBZ X0, 0x39AAEF8
	0x039AAF20 B 0x39AAF28
	0x039AAF24 MOV X21, X31
	0x039AAF28 LDR X1, [X22]
	0x039AAF2C ADD X0, X31, 0x8
	0x039AAF30 BL 0x2BC434C
	0x039AAF34 MOV X0, X21
	0x039AAF38 LDP X20, X19, [X31 + 0x40]
	0x039AAF3C LDP X22, X21, [X31 + 0x30]
	0x039AAF40 LDP X30, X23, [X31 + 0x20]
	0x039AAF44 ADD X31, X31, 0x50
	0x039AAF48 RET
	0x039AAF4C BL 0x1C16F20
	0x039AAF50 B 0x39AAF54
	0x039AAF54 MOV X20, X0
	0x039AAF58 CMP W1, 0x1
	0x039AAF5C B.NE 0x39AAF88
	0x039AAF60 MOV X0, X20
	0x039AAF64 BL 0x3EB1AD0
	0x039AAF68 LDR X19, [X0]
	0x039AAF6C BL 0x3EB1AE0
	0x039AAF70 LDR X1, [X22]
	0x039AAF74 ADD X0, X31, 0x8
	0x039AAF78 BL 0x2BC434C
	0x039AAF7C CBNZ X19, 0x39AAF90
	0x039AAF80 MOV X21, X31
	0x039AAF84 B 0x39AAF34
	0x039AAF88 MOV X19, X31
	0x039AAF8C B 0x39AAF9C
	0x039AAF90 MOV X0, X19
	0x039AAF94 BL 0x1C16F18
	0x039AAF98 MOV X20, X0
	0x039AAF9C LDR X1, [X22]
	0x039AAFA0 ADD X0, X31, 0x8
	0x039AAFA4 BL 0x2BC434C
	0x039AAFA8 CBNZ X19, 0x39AAFB4
	0x039AAFAC MOV X0, X20
	0x039AAFB0 BL 0x1D2C690
	0x039AAFB4 MOV X0, X19
	0x039AAFB8 BL 0x1C16F18
	0x039AAFBC BL 0x1990590
	0x039AAFC0 STR X30, [X31 - 0x50]!
	0x039AAFC4 STP X26, X25, [X31 + 0x10]
	0x039AAFC8 STP X24, X23, [X31 + 0x20]
	0x039AAFCC STP X22, X21, [X31 + 0x30]
	0x039AAFD0 STP X20, X19, [X31 + 0x40]
	0x039AAFD4 ADRP X22, 0xA37000
	0x039AAFD8 LDRB W8, [X22 + 0xBE1]
	0x039AAFDC MOV X19, X2
	0x039AAFE0 MOV X20, X1
	0x039AAFE4 MOV X21, X0
	0x039AAFE8 TBNZ X8, 0x0, 0x39AB030
	0x039AAFEC ADRP X0, 0x7A7000
	0x039AAFF0 LDR X0, [X0 + 0xB58]
	0x039AAFF4 BL 0x1C16CF4
	0x039AAFF8 ADRP X0, 0x749000
	0x039AAFFC LDR X0, [X0 + 0xE00]
	0x039AB000 BL 0x1C16CF4
	0x039AB004 ADRP X0, 0x7A6000
	0x039AB008 LDR X0, [X0 + 0xAE8]
	0x039AB00C BL 0x1C16CF4
	0x039AB010 ADRP X0, 0x748000
	0x039AB014 LDR X0, [X0 + 0xE18]
	0x039AB018 BL 0x1C16CF4
	0x039AB01C ADRP X0, 0x7A6000
	0x039AB020 LDR X0, [X0 + 0xAF0]
	0x039AB024 BL 0x1C16CF4
	0x039AB028 MOVZ W8, 0x1
	0x039AB02C STRB W8, [X22 + 0xBE1]
	0x039AB030 CBZ X19, 0x39AB254
	0x039AB034 ADRP X24, 0x7A6000
	0x039AB038 LDR X8, [X19]
	0x039AB03C LDR X24, [X24 + 0xB58]
	0x039AB040 LDRH W9, [X8 + 0x12E]
	0x039AB044 LDR X1, [X24]
	0x039AB048 CBZ X9, 0x39AB06C
	0x039AB04C LDR X10, [X8 + 0xB0]
	0x039AB050 ADD X10, X10, 0x8
	0x039AB054 LDUR X11, [X10 - 0x8]
	0x039AB058 CMP X11, X1
	0x039AB05C B.EQ 0x39AB07C
	0x039AB060 SUBS X9, X9, 0x1
	0x039AB064 ADD X10, X10, 0x10
	0x039AB068 B.NE 0x39AB054
	0x039AB06C MOV X0, X19
	0x039AB070 MOV W2, W31
	0x039AB074 BL 0x1C5C788
	0x039AB078 B 0x39AB088
	0x039AB07C LDRSW X9, [X10]
	0x039AB080 ADD X8, X8, X9, 0x4, LSL
	0x039AB084 ADD X0, X8, 0x138
	0x039AB088 LDP X8, X1, [X0]
	0x039AB08C MOV X0, X19
	0x039AB090 BLR X8
	0x039AB094 CBZ X0, 0x39AB254
	0x039AB098 ADRP X8, 0x7A6000
	0x039AB09C LDR X8, [X8 + 0xAF0]
	0x039AB0A0 ADRP X23, 0x748000
	0x039AB0A4 LDR X1, [X8]
	0x039AB0A8 LDR X23, [X23 + 0xE00]
	0x039AB0AC BL 0x24985D8
	0x039AB0B0 MOV X19, X0
	0x039AB0B4 CBZ X0, 0x39AB258
	0x039AB0B8 ADRP X25, 0x748000
	0x039AB0BC ADRP X26, 0x7A6000
	0x039AB0C0 LDR X25, [X25 + 0xE18]
	0x039AB0C4 LDR X26, [X26 + 0xAE8]
	0x039AB0C8 LDR X8, [X19]
	0x039AB0CC LDR X1, [X25]
	0x039AB0D0 LDRH W9, [X8 + 0x12E]
	0x039AB0D4 CBZ X9, 0x39AB0F8
	0x039AB0D8 LDR X10, [X8 + 0xB0]
	0x039AB0DC ADD X10, X10, 0x8
	0x039AB0E0 LDUR X11, [X10 - 0x8]
	0x039AB0E4 CMP X11, X1
	0x039AB0E8 B.EQ 0x39AB108
	0x039AB0EC SUBS X9, X9, 0x1
	0x039AB0F0 ADD X10, X10, 0x10
	0x039AB0F4 B.NE 0x39AB0E0
	0x039AB0F8 MOV X0, X19
	0x039AB0FC MOV W2, W31
	0x039AB100 BL 0x1C5C788
	0x039AB104 B 0x39AB114
	0x039AB108 LDRSW X9, [X10]
	0x039AB10C ADD X8, X8, X9, 0x4, LSL
	0x039AB110 ADD X0, X8, 0x138
	0x039AB114 LDP X8, X1, [X0]
	0x039AB118 MOV X0, X19
	0x039AB11C BLR X8
	0x039AB120 TBZ X0, 0x0, 0x39AB1CC
	0x039AB124 LDR X8, [X19]
	0x039AB128 LDR X1, [X26]
	0x039AB12C LDRH W9, [X8 + 0x12E]
	0x039AB130 CBZ X9, 0x39AB154
	0x039AB134 LDR X10, [X8 + 0xB0]
	0x039AB138 ADD X10, X10, 0x8
	0x039AB13C LDUR X11, [X10 - 0x8]
	0x039AB140 CMP X11, X1
	0x039AB144 B.EQ 0x39AB164
	0x039AB148 SUBS X9, X9, 0x1
	0x039AB14C ADD X10, X10, 0x10
	0x039AB150 B.NE 0x39AB13C
	0x039AB154 MOV X0, X19
	0x039AB158 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0xA38000
	013 Move W8, [X22+3030]
	014 Move X21, X2
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {65}
	021 Move X0, 0x7A7000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0x74A000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x7A8000
	028 Move X0, [X0+2776]
	029 Call 0x1C17CF4
	030 Move X0, 0x7A8000
	031 Move X0, [X0+2784]
	032 Call 0x1C17CF4
	033 Move X0, 0x74A000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0x7A8000
	037 Move X0, [X0+2792]
	038 Call 0x1C17CF4
	039 Move X0, 0x74A000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0x74B000
	043 Move X0, [X0+1136]
	044 Call 0x1C17CF4
	045 Move X0, 0x7A8000
	046 Move X0, [X0+2800]
	047 Call 0x1C17CF4
	048 Move X0, 0x7A8000
	049 Move X0, [X0+2808]
	050 Call 0x1C17CF4
	051 Move X0, 0x7A8000
	052 Move X0, [X0+2664]
	053 Call 0x1C17CF4
	054 Move X0, 0x7A8000
	055 Move X0, [X0+2168]
	056 Call 0x1C17CF4
	057 Move X0, 0x7A8000
	058 Move X0, [X0+1624]
	059 Call 0x1C17CF4
	060 Move X0, 0x7A8000
	061 Move X0, [X0+2816]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X22+3030], W8
	065 Compare X20, 0
	066 JumpIfEqual {311}
	067 Move X24, 0x7A8000
	068 Move X24, [X24+1624]
	069 Move X0, X19
	070 Call DebugManager.EnsurePersistentCanvas, X0
	071 Move X8, [X20]
	072 Move X10, [X24]
	073 Move W9, [X8+304]
	074 Move W11, [X10+304]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X12, [X8+200]
	077 Add X11, X12, X11
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X25, 0x7A8000
	081 Move X25, [X25+2168]
	082 Move X10, [X25]
	083 Move W11, [X10+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X12, [X8+200]
	086 Add X11, X12, X11
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X10, 0x7A7000
	090 Move X10, [X10+1880]
	091 Move X10, [X10]
	092 Move W11, [X10+304]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X8, [X8+200]
	095 Add X8, X8, X11
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X26, 0x7A8000
	099 Move X26, [X26+2664]
	100 Move X21, [X20+72]
	101 Move X0, [X26]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X26]
	107 Move X8, [X0+184]
	108 Move X22, [X8+24]
	109 Compare X22, 0
	110 JumpIfNotEqual {132}
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X26]
	116 Move X9, 0x7A8000
	117 Move X8, [X0+184]
	118 Move X9, [X9+2784]
	119 Move X23, [X8]
	120 Move X0, [X9]
	121 Call 0x1C17F10
	122 Move X8, 0x7A8000
	123 Move X8, [X8+2808]
	124 Move X1, X23
	125 Move X3, X31
	126 Move X22, X0
	127 Move X2, [X8]
	128 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	129 Move X8, [X26]
	130 Move X8, [X8+184]
	131 Move [X8+24], X22
	132 Move X8, 0x7A8000
	133 Move X8, [X8+2776]
	134 Move X0, X21
	135 Move X1, X22
	136 Move X2, [X8]
	137 Call 0x21CA5A4, X0, X1
	138 Move X8, [X20+72]
	139 Compare X8, 0
	140 JumpIfEqual {323}
	141 Move X9, 0x7A8000
	142 Move X9, [X9+2800]
	143 Move W21, W0
	144 Move X0, X8
	145 Move X1, [X9]
	146 Call 0x24995D8, X0
	147 Move X20, X0
	148 Compare X0, 0
	149 JumpIfEqual {324}
	150 Move X23, 0x74A000
	151 Move X26, 0x7A8000
	152 Move X27, 0x74B000
	153 Move X23, [X23+3608]
	154 Move X26, [X26+2792]
	155 Move X27, [X27+1136]
	156 Move X8, [X20]
	157 Move X1, [X23]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X20
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X20
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {268}
	181 Move X8, [X20]
	182 Move X1, [X26]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X20
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X20
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X22, X0
	203 Compare X0, 0
	204 JumpIfEqual {156}
	205 Move X8, [X22]
	206 Move X10, [X24]
	207 Move W9, [X8+304]
	208 Move W11, [X10+304]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X12, [X8+200]
	211 Add X11, X12, X11
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X10, [X25]
	215 Move W11, [X10+304]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, [X8+200]
	218 Add X8, X8, X11
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X2, [X27]
	222 Move [X31+8], X31
	223 Add X0, X31, 8
	224 Move W1, W21
	225 Call Nullable`1<Int32>..ctor, X0, X1
	226 Move X2, [X31+8]
	227 Move X0, X19
	228 Move X1, X22
	229 Call DebugManager.TogglePersistent, X0, X1, X2
	230 Move X0, [X19+120]
	231 Compare X0, 0
	232 JumpIfEqual {323}
	233 Move X1, X20
	234 Move X20, [X31+80]
	235 Move X19, [X31+88]
	236 Move X22, [X31+64]
	237 Move X21, [X31+72]
	238 Move X24, [X31+48]
	239 Move X23, [X31+56]
	240 Move X26, [X31+32]
	241 Move X25, [X31+40]
	242 Move X30, [X31+16]
	243 Move X27, [X31+24]
	244 Move X2, X31
	245 Move X3, X31
	246 Add X31, X31, 96
	247 Call DebugUIHandlerPersistentCanvas.Toggle, X0, X1, X2
	248 Return 
	249 Move X0, [X19+120]
	250 Compare X0, 0
	251 JumpIfEqual {323}
	252 Move X1, X20
	253 Move X2, X21
	254 Move X20, [X31+80]
	255 Move X19, [X31+88]
	256 Move X22, [X31+64]
	257 Move X21, [X31+72]
	258 Move X24, [X31+48]
	259 Move X23, [X31+56]
	260 Move X26, [X31+32]
	261 Move X25, [X31+40]
	262 Move X30, [X31+16]
	263 Move X27, [X31+24]
	264 Move X3, X31
	265 Add X31, X31, 96
	266 Call DebugUIHandlerPersistentCanvas.Toggle, X0, X1, X2
	267 Return 
	268 Move X19, X31
	269 Move W21, W31
	270 Compare X20, 0
	271 JumpIfEqual {295}
	272 Move X10, 0x74A000
	273 Move X8, [X20]
	274 Move X10, [X10+3584]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Move X1, [X10]
	277 Compare X9, 0
	278 JumpIfEqual {285}
	279 Move X10, [X8+176]
	280 Add X10, X10, 8
	281 NotImplemented "Instruction LDUR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Subtract X9, X9, 1
	284 Add X10, X10, 16
	285 Move X0, X20
	286 Move W2, W31
	287 Call 0x1C5D788
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Add X8, X8, X9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X20
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Compare X19, 0
	296 JumpIfNotEqual {325}
	297 Compare W21, 0
	298 JumpIfEqual {311}
	299 Move X8, 0x749000
	300 Move X8, [X8+2600]
	301 Move X0, [X8]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move X8, 0x7A7000
	307 Move X8, [X8+2816]
	308 Move X1, X31
	309 Move X0, [X8]
	310 Call Debug.Log, X0
	311 Move X20, [X31+80]
	312 Move X19, [X31+88]
	313 Move X22, [X31+64]
	314 Move X21, [X31+72]
	315 Move X24, [X31+48]
	316 Move X23, [X31+56]
	317 Move X26, [X31+32]
	318 Move X25, [X31+40]
	319 Move X30, [X31+16]
	320 Move X27, [X31+24]
	321 Add X31, X31, 96
	322 Return 
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Move X0, X19
	326 Call 0x1C17F18
	327 Move X21, X0
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X0, X21
	330 Call 0x3EB2AD0
	331 Move X19, [X0]
	332 Call 0x3EB2AE0
	333 Move W21, 1
	334 Compare X20, 0
	335 JumpIfNotEqual {272}
	336 Move X19, X31
	337 Move X21, X0
	338 Compare X20, 0
	339 JumpIfEqual {363}
	340 Move X10, 0x749000
	341 Move X8, [X20]
	342 Move X10, [X10+3584]
	343 NotImplemented "Instruction LDRH not yet implemented."
	344 Move X1, [X10]
	345 Compare X9, 0
	346 JumpIfEqual {353}
	347 Move X10, [X8+176]
	348 Add X10, X10, 8
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Subtract X9, X9, 1
	352 Add X10, X10, 16
	353 Move X0, X20
	354 Move W2, W31
	355 Call 0x1C5D788
	356 NotImplemented "Instruction LDRSW not yet implemented."
	357 Add X8, X8, X9
	358 Add X0, X8, 312
	359 Move X8, [X0]
	360 Move X1, [X0+8]
	361 Move X0, X20
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Compare X19, 0
	364 JumpIfNotEqual {367}
	365 Move X0, X21
	366 Call 0x1D2D690
	367 Move X0, X19
	368 Call 0x1C17F18
	369 Call 0x1991590

Method: System.Void OnPanelDirty(UnityEngine.Rendering.DebugUI/Panel panel)

Disassembly:
	0x039AB15C BL 0x1C5C788
	0x039AB160 B 0x39AB170
	0x039AB164 LDRSW X9, [X10]
	0x039AB168 ADD X8, X8, X9, 0x4, LSL
	0x039AB16C ADD X0, X8, 0x138
	0x039AB170 LDP X8, X1, [X0]
	0x039AB174 MOV X0, X19
	0x039AB178 BLR X8
	0x039AB17C MOV X22, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move X2, [X8+24]
	006 Move X0, [X8+64]
	007 Move X1, [X8+40]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 PanelIndex(System.String displayName)

Disassembly:
	0x039AB180 CBZ X0, 0x39AB250
	0x039AB184 LDR X0, [X22 + 0x38]
	0x039AB188 MOV X1, X20
	0x039AB18C MOV X2, X31
	0x039AB190 BL 0x321BA08
	0x039AB194 TBNZ X0, 0x0, 0x39AB1C0
	0x039AB198 LDR X1, [X24]
	0x039AB19C MOV X0, X22
	0x039AB1A0 BL 0x1C16E00
	0x039AB1A4 MOV X2, X0
	0x039AB1A8 CBZ X0, 0x39AB0C8
	0x039AB1AC MOV X0, X21
	0x039AB1B0 MOV X1, X20
	0x039AB1B4 BL 0x39AAFC0
	0x039AB1B8 MOV X22, X0
	0x039AB1BC CBZ X0, 0x39AB0C8
	0x039AB1C0 MOV X20, X31
	0x039AB1C4 CBNZ X19, 0x39AB1D8
	0x039AB1C8 B 0x39AB230
	0x039AB1CC MOV X20, X31
	0x039AB1D0 MOV X22, X31
	0x039AB1D4 CBZ X19, 0x39AB230
	0x039AB1D8 LDR X8, [X19]
	0x039AB1DC LDR X1, [X23]
	0x039AB1E0 LDRH W9, [X8 + 0x12E]
	0x039AB1E4 CBZ X9, 0x39AB208
	0x039AB1E8 LDR X10, [X8 + 0xB0]
	0x039AB1EC ADD X10, X10, 0x8
	0x039AB1F0 LDUR X11, [X10 - 0x8]
	0x039AB1F4 CMP X11, X1
	0x039AB1F8 B.EQ 0x39AB218
	0x039AB1FC SUBS X9, X9, 0x1
	0x039AB200 ADD X10, X10, 0x10
	0x039AB204 B.NE 0x39AB1F0
	0x039AB208 MOV X0, X19
	0x039AB20C MOV W2, W31
	0x039AB210 BL 0x1C5C788
	0x039AB214 B 0x39AB224
	0x039AB218 LDRSW X9, [X10]
	0x039AB21C ADD X8, X8, X9, 0x4, LSL
	0x039AB220 ADD X0, X8, 0x138
	0x039AB224 LDP X8, X1, [X0]
	0x039AB228 MOV X0, X19
	0x039AB22C BLR X8
	0x039AB230 CBNZ X20, 0x39AB25C
	0x039AB234 MOV X0, X22
	0x039AB238 LDP X20, X19, [X31 + 0x40]
	0x039AB23C LDP X22, X21, [X31 + 0x30]
	0x039AB240 LDP X24, X23, [X31 + 0x20]
	0x039AB244 LDP X26, X25, [X31 + 0x10]
	0x039AB248 LDR X30, [X31], #0x50
	0x039AB24C RET
	0x039AB250 BL 0x1C16F20
	0x039AB254 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA37000
	007 Move W8, [X21+3031]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x7A7000
	015 Move X0, [X0+2824]
	016 Call 0x1C17CF4
	017 Move X0, 0x7A7000
	018 Move X0, [X0+344]
	019 Call 0x1C17CF4
	020 Move X0, 0x74B000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3031], W8
	025 Compare X20, 0
	026 JumpIfNotEqual {32}
	027 Move X8, 0x74B000
	028 Move X8, [X8+632]
	029 Move X8, [X8]
	030 Move X8, [X8+184]
	031 Move X20, [X8]
	032 Move X0, [X19+48]
	033 Compare X0, 0
	034 JumpIfEqual {60}
	035 Move X22, 0x7A7000
	036 Move X22, [X22+344]
	037 Move W21, W31
	038 Move W8, [X0+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X22]
	041 Move W1, W21
	042 Call List`1<Object>.get_Item, X0, X1
	043 Compare X0, 0
	044 JumpIfEqual {60}
	045 Compare X20, 0
	046 JumpIfEqual {60}
	047 Move X1, [X0+24]
	048 Move W2, 3
	049 Move X0, X20
	050 Move X3, X31
	051 Call String.Equals, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {64}
	056 Move X0, [X19+48]
	057 Add W21, W21, 1
	058 Compare X0, 0
	059 JumpIfNotEqual {38}
	060 Call 0x1C17F20
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W21, TEMP
	064 Move W0, W21
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return X0

Method: System.String PanelDiplayName(System.Int32 panelIndex)

Disassembly:
	0x039AB258 BL 0x1C16F20
	0x039AB25C MOV X0, X20
	0x039AB260 BL 0x1C16F18
	0x039AB264 B 0x39AB27C
	0x039AB268 B 0x39AB27C
	0x039AB26C B 0x39AB27C
	0x039AB270 B 0x39AB27C
	0x039AB274 B 0x39AB27C
	0x039AB278 B 0x39AB27C
	0x039AB27C MOV X21, X0
	0x039AB280 CMP W1, 0x1
	0x039AB284 B.NE 0x39AB29C
	0x039AB288 MOV X0, X21
	0x039AB28C BL 0x3EB1AD0
	0x039AB290 LDR X20, [X0]
	0x039AB294 BL 0x3EB1AE0
	0x039AB298 B 0x39AB1D0
	0x039AB29C MOV X20, X31
	0x039AB2A0 B 0x39AB2A8
	0x039AB2A4 MOV X21, X0
	0x039AB2A8 CBZ X19, 0x39AB304
	0x039AB2AC LDR X8, [X19]
	0x039AB2B0 LDR X1, [X23]
	0x039AB2B4 LDRH W9, [X8 + 0x12E]
	0x039AB2B8 CBZ X9, 0x39AB2DC
	0x039AB2BC LDR X10, [X8 + 0xB0]
	0x039AB2C0 ADD X10, X10, 0x8
	0x039AB2C4 LDUR X11, [X10 - 0x8]
	0x039AB2C8 CMP X11, X1
	0x039AB2CC B.EQ 0x39AB2EC
	0x039AB2D0 SUBS X9, X9, 0x1
	0x039AB2D4 ADD X10, X10, 0x10
	0x039AB2D8 B.NE 0x39AB2C4
	0x039AB2DC MOV X0, X19
	0x039AB2E0 MOV W2, W31
	0x039AB2E4 BL 0x1C5C788
	0x039AB2E8 B 0x39AB2F8
	0x039AB2EC LDRSW X9, [X10]
	0x039AB2F0 ADD X8, X8, X9, 0x4, LSL
	0x039AB2F4 ADD X0, X8, 0x138
	0x039AB2F8 LDP X8, X1, [X0]
	0x039AB2FC MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA37000
	006 Move W8, [X21+3032]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x7A7000
	014 Move X0, [X0+2824]
	015 Call 0x1C17CF4
	016 Move X0, 0x7A7000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move X0, 0x74B000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3032], W8
	024 Move TEMP, X19
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {34}
	028 Move X0, [X20+48]
	029 Compare X0, 0
	030 JumpIfEqual {52}
	031 Move W8, [X0+24]
	032 Subtract W8, W8, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0x74B000
	035 Move X8, [X8+632]
	036 Move X8, [X8]
	037 Move X8, [X8+184]
	038 Move X8, 0x7A7000
	039 Move X8, [X8+344]
	040 Move W1, W19
	041 Move X2, [X8]
	042 Call List`1<Object>.get_Item, X0, X1
	043 Compare X0, 0
	044 JumpIfEqual {52}
	045 Add X8, X0, 24
	046 Move X0, [X8]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void RequestEditorWindowPanelIndex(System.Int32 index)

Disassembly:
	0x039AB300 BLR X8
	0x039AB304 CBNZ X20, 0x39AB310
	0x039AB308 MOV X0, X21
	0x039AB30C BL 0x1D2C690
	0x039AB310 MOV X0, X20
	0x039AB314 BL 0x1C16F18
	0x039AB318 BL 0x1990590
	0x039AB31C STP X30, X25, [X31 - 0x40]!
	0x039AB320 STP X24, X23, [X31 + 0x10]
	0x039AB324 STP X22, X21, [X31 + 0x20]
	0x039AB328 STP X20, X19, [X31 + 0x30]
	0x039AB32C ADRP X20, 0xA36000
	0x039AB330 ADRP X24, 0x7A5000
	0x039AB334 LDRB W8, [X20 + 0xBE2]
	0x039AB338 LDR X24, [X24 + 0x778]
	0x039AB33C MOV X19, X0
	0x039AB340 TBNZ X8, 0x0, 0x39AB364
	0x039AB344 ADRP X0, 0x7A6000
	0x039AB348 LDR X0, [X0 + 0xB60]
	0x039AB34C BL 0x1C16CF4
	0x039AB350 ADRP X0, 0x7A5000
	0x039AB354 LDR X0, [X0 + 0x778]
	0x039AB358 BL 0x1C16CF4
	0x039AB35C MOVZ W8, 0x1
	0x039AB360 STRB W8, [X20 + 0xBE2]
	0x039AB364 LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA37000
	007 Move X21, 0x74A000
	008 Move W8, [X22+3033]
	009 Move X21, [X21+1136]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x74A000
	017 Move X0, [X0+1136]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3033], W8
	021 Move X2, [X21]
	022 Add X0, X31, 8
	023 Move W1, W20
	024 Move [X31+8], X31
	025 Call Nullable`1<Int32>..ctor, X0, X1
	026 Move X8, [X31+8]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move [X19+84], X8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+48]
	033 Return 

Method: System.Nullable`1<System.Int32> GetRequestedEditorWindowPanelIndex()

Disassembly:
	0x039AB368 LDR W8, [X0 + 0xE0]
	0x039AB36C CBNZ W8, 0x39AB378
	0x039AB370 BL 0x1C16DFC
	0x039AB374 LDR X0, [X24]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move [X0+84], X31
	003 Move X0, X8
	004 Return X0

Method: UnityEngine.Rendering.DebugUI/Panel GetPanel(System.String displayName, System.Boolean createIfNull = False, System.Int32 groupIndex = 0, System.Boolean overrideIfExist = False)

Disassembly:
	0x0399D198 MOV X1, X31
	0x0399D19C BL 0x3C3F800
	0x0399D1A0 MOV X0, X19
	0x0399D1A4 MOV X1, X31
	0x0399D1A8 MOV V9.16B, V0.16B
	0x0399D1AC BL 0x3C32E90
	0x0399D1B0 CBZ X0, 0x399D468
	0x0399D1B4 MOV X1, X31
	0x0399D1B8 BL 0x3C3F800
	0x0399D1BC LDR V0, [X19 + 0x5C]
	0x0399D1C0 MOVZ W8, 0x42B40000
	0x0399D1C4 MOV V8.16B, V1.16B
	0x0399D1C8 FMOV S1, W8
	0x0399D1CC FCMP S9, S1
	0x0399D1D0 FSUB S0, S9, S0
	0x0399D1D4 B.HI 0x399D1F8
	0x0399D1D8 FCMP S0, 0x0
	0x0399D1DC FMOV S1, W31
	0x0399D1E0 FCSEL S1, S1, S9, LT
	0x0399D1E4 B.LT 0x399D1F8
	0x0399D1E8 B.MI 0x399D230
	0x0399D1EC MOVZ W8, 0x42B40000
	0x0399D1F0 FMOV S1, W8
	0x0399D1F4 FMIN S0, S0, S1
	0x0399D1F8 MOVZ W8, 0x43870000
	0x0399D1FC FMOV S1, W8
	0x0399D200 FCMP S9, S1
	0x0399D204 B.GE 0x399D210
	0x0399D208 MOV V9.16B, V0.16B
	0x0399D20C B 0x399D24C
	0x0399D210 MOVZ W8, 0x43870000
	0x0399D214 FMOV S9, W8
	0x0399D218 FCMP S0, S9
	0x0399D21C B.MI 0x399D24C
	0x0399D220 MOVZ W8, 0x43B40000
	0x0399D224 FMOV S1, W8
	0x0399D228 FMIN S9, S0, S1
	0x0399D22C B 0x399D24C
	0x0399D230 MOVZ W8, 0x43870000
	0x0399D234 FMOV S0, W8
	0x0399D238 FCMP S1, S0
	0x0399D23C FMOV S9, W31
	0x0399D240 B.LT 0x399D24C
	0x0399D244 MOVZ W8, 0x43870000
	0x0399D248 FMOV S9, W8
	0x0399D24C LDR V10, [X19 + 0x58]
	0x0399D250 MOV X0, X19
	0x0399D254 MOV X1, X31
	0x0399D258 BL 0x3C32E90
	0x0399D25C MOV X20, X0
	0x0399D260 MOV X0, X19
	0x0399D264 MOV X1, X31
	0x0399D268 BL 0x3C32E90
	0x0399D26C CBZ X0, 0x399D468
	0x0399D270 MOV X1, X31
	0x0399D274 FADD S8, S8, S10
	0x0399D278 BL 0x3C3F800
	0x0399D27C ADRP X8, 0xFFFFFFFFFD14D000
	0x0399D280 LDR V3, [X8 + 0x104]
	0x0399D284 MOV X0, X31
	0x0399D288 FMUL S0, S9, S3
	0x0399D28C FMUL S1, S8, S3
	0x0399D290 FMUL S2, S2, S3
	0x0399D294 BL 0x3C2A574
	0x0399D298 CBZ X20, 0x399D468
	0x0399D29C MOV X0, X20
	0x0399D2A0 MOV X1, X31
	0x0399D2A4 BL 0x3C3F8B8
	0x0399D2A8 MOV X0, X31
	0x0399D2AC BL 0x3C3C714
	0x0399D2B0 LDR V1, [X19 + 0x28]
	0x0399D2B4 LDRB W8, [X19 + 0x72]
	0x0399D2B8 FMUL S11, S0, S1
	0x0399D2BC CBZ W8, 0x399D454
	0x0399D2C0 LDR V0, [X19 + 0x30]
	0x0399D2C4 FMUL S11, S11, S0
	0x0399D2C8 MOV X0, X19
	0x0399D2CC MOV X1, X31
	0x0399D2D0 BL 0x3C32E90
	0x0399D2D4 CBZ X0, 0x399D468
	0x0399D2D8 MOV X1, X31
	0x0399D2DC MOV X20, X0
	0x0399D2E0 BL 0x3C3F58C
	0x0399D2E4 MOV X0, X19
	0x0399D2E8 MOV X1, X31
	0x0399D2EC MOV V8.16B, V0.16B
	0x0399D2F0 MOV V9.16B, V1.16B
	0x0399D2F4 MOV V10.16B, V2.16B
	0x0399D2F8 BL 0x3C32E90
	0x0399D2FC CBZ X0, 0x399D468
	0x0399D300 MOV X1, X31
	0x0399D304 BL 0x3C3FA04
	0x0399D308 LDR V3, [X19 + 0x64]
	0x0399D30C FMUL S0, S11, S0
	0x0399D310 FMUL S1, S11, S1
	0x0399D314 FMUL S2, S11, S2
	0x0399D318 FMUL S0, S3, S0
	0x0399D31C FMUL S1, S3, S1
	0x0399D320 FMUL S2, S3, S2
	0x0399D324 FADD S0, S8, S0
	0x0399D328 FADD S1, S9, S1
	0x0399D32C FADD S2, S10, S2
	0x0399D330 MOV X0, X20
	0x0399D334 MOV X1, X31
	0x0399D338 BL 0x3C3F62C
	0x0399D33C MOV X0, X19
	0x0399D340 MOV X1, X31
	0x0399D344 BL 0x3C32E90
	0x0399D348 CBZ X0, 0x399D468
	0x0399D34C MOV X1, X31
	0x0399D350 MOV X20, X0
	0x0399D354 BL 0x3C3F58C
	0x0399D358 MOV X0, X19
	0x0399D35C MOV X1, X31
	0x0399D360 MOV V8.16B, V0.16B
	0x0399D364 MOV V9.16B, V1.16B
	0x0399D368 MOV V10.16B, V2.16B
	0x0399D36C BL 0x3C32E90
	0x0399D370 CBZ X0, 0x399D468
	0x0399D374 MOV X1, X31
	0x0399D378 BL 0x3C3F90C
	0x0399D37C LDR V3, [X19 + 0x68]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA45000
	009 Move W8, [X20+3034]
	010 Move W24, W4
	011 Move W21, W3
	012 Move W23, W2
	013 Move X22, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x7B5000
	020 Move X0, [X0+320]
	021 Call 0x1C17CF4
	022 Move X0, 0x7B5000
	023 Move X0, [X0+328]
	024 Call 0x1C17CF4
	025 Move X0, 0x7B5000
	026 Move X0, [X0+336]
	027 Call 0x1C17CF4
	028 Move X0, 0x7B5000
	029 Move X0, [X0+344]
	030 Call 0x1C17CF4
	031 Move X0, 0x7B5000
	032 Move X0, [X0+352]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3034], W8
	036 Move X0, X19
	037 Move X1, X22
	038 Call DebugManager.PanelIndex, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, -2147483648
	041 Compare TEMP, -2147483648
	042 JumpIfEqual {76}
	043 Move W1, W0
	044 Move X0, [X19+48]
	045 Compare X0, 0
	046 JumpIfEqual {142}
	047 Move X8, 0x7B5000
	048 Move X8, [X8+344]
	049 Move X2, [X8]
	050 Call List`1<Object>.get_Item, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {76}
	053 Move X20, X0
	054 Move TEMP, X24
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {133}
	058 Move X8, 0x7B5000
	059 Move X8, [X8+320]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X8, 0x7B5000
	063 Move X8, [X8+328]
	064 Move X1, X19
	065 Move X3, X31
	066 Move X24, X0
	067 Move X2, [X8]
	068 Call Action`1<Object>..ctor, X0, X1, X2
	069 Move X0, X20
	070 Move X1, X24
	071 Move X2, X31
	072 Call Panel.remove_onSetDirty, X0, X1
	073 Move X0, X19
	074 Move X1, X20
	075 Call DebugManager.RemovePanel, X0, X1
	076 Move TEMP, X23
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {125}
	080 Move X8, 0x7B5000
	081 Move X8, [X8+352]
	082 Move X0, [X8]
	083 Call 0x1C17F10
	084 Move X1, X31
	085 Move X20, X0
	086 Call Panel..ctor, X0
	087 Compare X20, 0
	088 JumpIfEqual {142}
	089 Move [X20+24], X22
	090 Move [X20+32], W21
	091 Move X8, 0x7B5000
	092 Move X8, [X8+320]
	093 Move X0, [X8]
	094 Call 0x1C17F10
	095 Move X8, 0x7B5000
	096 Move X8, [X8+328]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Move X2, [X8]
	101 Call Action`1<Object>..ctor, X0, X1, X2
	102 Move X0, X20
	103 Move X1, X21
	104 Move X2, X31
	105 Call Panel.add_onSetDirty, X0, X1
	106 Move X0, [X19+48]
	107 Compare X0, 0
	108 JumpIfEqual {142}
	109 Move X9, 0x7B5000
	110 Move X9, [X9+336]
	111 Move W10, [X0+28]
	112 Move X8, [X0+16]
	113 Move X9, [X9]
	114 Add W10, W10, 1
	115 Move [X0+28], W10
	116 Compare X8, 0
	117 JumpIfEqual {142}
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W11, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add W9, W10, 1
	122 Add X8, X8, X10
	123 Move [X0+24], W9
	124 Move [X8+32], X20
	125 Move X20, X31
	126 Move X8, [X9+32]
	127 Move X1, X20
	128 Move X8, [X8+192]
	129 Move X2, [X8+112]
	130 Call List`1<Object>.AddWithResize, X0, X1
	131 Move X0, X19
	132 Call DebugManager.UpdateReadOnlyCollection, X0
	133 Move X0, X20
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X30, [X31+64]
	141 Return X0
	142 Call 0x1C17F20

Method: System.Int32 FindPanelIndex(System.String displayName)

Disassembly:
	0x039AB3E8 MOV X20, X0
	0x039AB3EC B.NE 0x39AB388
	0x039AB3F0 LDP X20, X19, [X31 + 0x30]
	0x039AB3F4 LDP X22, X21, [X31 + 0x20]
	0x039AB3F8 LDP X24, X23, [X31 + 0x10]
	0x039AB3FC LDP X30, X25, [X31], #0x40
	0x039AB400 RET
	0x039AB404 MOV X0, X22
	0x039AB408 MOV X1, X23
	0x039AB40C BL 0x1C171E0
	0x039AB410 STP X30, X25, [X31 - 0x40]!
	0x039AB414 STP X24, X23, [X31 + 0x10]
	0x039AB418 STP X22, X21, [X31 + 0x20]
	0x039AB41C STP X20, X19, [X31 + 0x30]
	0x039AB420 ADRP X20, 0xA36000
	0x039AB424 ADRP X24, 0x7A5000
	0x039AB428 LDRB W8, [X20 + 0xBE3]
	0x039AB42C LDR X24, [X24 + 0x778]
	0x039AB430 MOV X19, X0
	0x039AB434 TBNZ X8, 0x0, 0x39AB458
	0x039AB438 ADRP X0, 0x7A6000
	0x039AB43C LDR X0, [X0 + 0xB60]
	0x039AB440 BL 0x1C16CF4
	0x039AB444 ADRP X0, 0x7A5000
	0x039AB448 LDR X0, [X0 + 0x778]
	0x039AB44C BL 0x1C16CF4
	0x039AB450 MOVZ W8, 0x1
	0x039AB454 STRB W8, [X20 + 0xBE3]
	0x039AB458 LDR X0, [X24]
	0x039AB45C LDR W8, [X0 + 0xE0]
	0x039AB460 CBNZ W8, 0x39AB46C
	0x039AB464 BL 0x1C16DFC
	0x039AB468 LDR X0, [X24]
	0x039AB46C LDR X8, [X0 + 0xB8]
	0x039AB470 ADRP X25, 0x7A6000
	0x039AB474 LDR X20, [X8 + 0x8]
	0x039AB478 LDR X25, [X25 + 0xB60]
	0x039AB47C MOV X0, X20
	0x039AB480 MOV X1, X19
	0x039AB484 MOV X2, X31
	0x039AB488 BL 0x33C0FDC
	0x039AB48C CBZ X0, 0x39AB4AC
	0x039AB490 LDR X23, [X25]
	0x039AB494 MOV X22, X0
	0x039AB498 MOV X1, X23
	0x039AB49C BL 0x1C16E00
	0x039AB4A0 MOV X21, X0
	0x039AB4A4 CBNZ X0, 0x39AB4B0
	0x039AB4A8 B 0x39AB4F8
	0x039AB4AC MOV X21, X31
	0x039AB4B0 LDR X0, [X24]
	0x039AB4B4 LDR W8, [X0 + 0xE0]
	0x039AB4B8 CBNZ W8, 0x39AB4C4
	0x039AB4BC BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA37000
	007 Move X22, 0x7A7000
	008 Move W8, [X21+3035]
	009 Move X22, [X22+2840]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x7A7000
	017 Move X0, [X0+2848]
	018 Call 0x1C17CF4
	019 Move X0, 0x7A7000
	020 Move X0, [X0+2856]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A7000
	023 Move X0, [X0+2864]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A7000
	026 Move X0, [X0+2840]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3035], W8
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call Object..ctor, X0
	035 Compare X21, 0
	036 JumpIfEqual {64}
	037 Move X8, 0x7A7000
	038 Move X8, [X8+2856]
	039 Move [X21+16], X20
	040 Move X20, 0x7A7000
	041 Move X19, [X19+48]
	042 Move X0, [X8]
	043 Move X20, [X20+2864]
	044 Call 0x1C17F10
	045 Move X2, [X20]
	046 Move X1, X21
	047 Move X3, X31
	048 Move X20, X0
	049 Call Predicate`1<Object>..ctor, X0, X1, X2
	050 Compare X19, 0
	051 JumpIfEqual {64}
	052 Move X8, 0x7A7000
	053 Move X8, [X8+2848]
	054 Move X0, X19
	055 Move X1, X20
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X2, [X8]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Call List`1<Object>.FindIndex, X0, X1
	063 Return X0
	064 Call 0x1C17F20

Method: System.Void RemovePanel(System.String displayName)

Disassembly:
	0x039AB4C8 MOV X1, X21
	0x039AB4CC MOV X2, X20
	0x039AB4D0 ADD X0, X8, 0x8
	0x039AB4D4 BL 0x1C24138
	0x039AB4D8 CMP X20, X0
	0x039AB4DC MOV X20, X0
	0x039AB4E0 B.NE 0x39AB47C
	0x039AB4E4 LDP X20, X19, [X31 + 0x30]
	0x039AB4E8 LDP X22, X21, [X31 + 0x20]
	0x039AB4EC LDP X24, X23, [X31 + 0x10]
	0x039AB4F0 LDP X30, X25, [X31], #0x40
	0x039AB4F4 RET
	0x039AB4F8 MOV X0, X22
	0x039AB4FC MOV X1, X23
	0x039AB500 BL 0x1C171E0
	0x039AB504 STR X30, [X31 - 0x10]!
	0x039AB508 LDR X8, [X0 + 0x80]
	0x039AB50C CBZ X8, 0x39AB51C
	0x039AB510 LDRB W0, [X8 + 0x14]
	0x039AB514 LDR X30, [X31], #0x10
	0x039AB518 RET
	0x039AB51C BL 0x1C16F20
	0x039AB520 STR X30, [X31 - 0x10]!
	0x039AB524 LDR X0, [X0 + 0x80]
	0x039AB528 CBZ X0, 0x39AB538
	0x039AB52C AND W1, W1, 0x1
	0x039AB530 LDR X30, [X31], #0x10
	0x039AB534 B 0x39AB53C
	0x039AB538 BL 0x1C16F20
	0x039AB53C STP X30, X21, [X31 - 0x20]!
	0x039AB540 STP X20, X19, [X31 + 0x10]
	0x039AB544 ADRP X21, 0xA36000
	0x039AB548 LDRB W8, [X21 + 0xBE9]
	0x039AB54C MOV X19, X0
	0x039AB550 AND W20, W1, 0x1
	0x039AB554 TBNZ X8, 0x0, 0x39AB56C
	0x039AB558 ADRP X0, 0x7A5000
	0x039AB55C LDR X0, [X0 + 0x778]
	0x039AB560 BL 0x1C16CF4
	0x039AB564 MOVZ W8, 0x1
	0x039AB568 STRB W8, [X21 + 0xBE9]
	0x039AB56C LDRB W8, [X19 + 0x14]
	0x039AB570 CMP W8, W20
	0x039AB574 B.EQ 0x39AB5C4
	0x039AB578 ADRP X21, 0x7A5000
	0x039AB57C LDR X21, [X21 + 0x778]
	0x039AB580 STRB W20, [X19 + 0x14]
	0x039AB584 LDR X0, [X21]
	0x039AB588 LDR W8, [X0 + 0xE0]
	0x039AB58C CBNZ W8, 0x39AB598
	0x039AB590 BL 0x1C16DFC
	0x039AB594 LDR X0, [X21]
	0x039AB598 LDR X8, [X0 + 0xB8]
	0x039AB59C LDR X8, [X8 + 0x8]
	0x039AB5A0 CBZ X8, 0x39AB5C4
	0x039AB5A4 LDRB W2, [X19 + 0x14]
	0x039AB5A8 LDR W1, [X19 + 0x10]
	0x039AB5AC LDR X4, [X8 + 0x18]
	0x039AB5B0 LDR X0, [X8 + 0x40]
	0x039AB5B4 LDR X3, [X8 + 0x28]
	0x039AB5B8 LDP X20, X19, [X31 + 0x10]
	0x039AB5BC LDP X30, X21, [X31], #0x20
	0x039AB5C0 BR X4
	0x039AB5C4 LDP X20, X19, [X31 + 0x10]
	0x039AB5C8 LDP X30, X21, [X31], #0x20
	0x039AB5CC RET
	0x039AB5D0 LDRB W0, [X0 + 0x88]
	0x039AB5D4 RET
	0x039AB5D8 LDRB W9, [X0 + 0x88]
	0x039AB5DC AND W8, W1, 0x1
	0x039AB5E0 CMP W9, W8
	0x039AB5E4 B.NE 0x39AB5EC
	0x039AB5E8 RET
	0x039AB5EC STRB W8, [X0 + 0x88]
	0x039AB5F0 MOV W0, W8
	0x039AB5F4 MOV X1, X31
	0x039AB5F8 B 0x39AFC94
	0x039AB5FC STP X30, X23, [X31 - 0x30]!
	0x039AB600 STP X22, X21, [X31 + 0x10]
	0x039AB604 STP X20, X19, [X31 + 0x20]
	0x039AB608 ADRP X21, 0xA36000
	0x039AB60C LDRB W8, [X21 + 0xBE5]
	0x039AB610 MOV W20, W1
	0x039AB614 MOV X19, X0
	0x039AB618 TBNZ X8, 0x0, 0x39AB684
	0x039AB61C ADRP X0, 0x770000
	0x039AB620 LDR X0, [X0 + 0x8F8]
	0x039AB624 BL 0x1C16CF4
	0x039AB628 ADRP X0, 0x7A6000
	0x039AB62C LDR X0, [X0 + 0xB68]
	0x039AB630 BL 0x1C16CF4
	0x039AB634 ADRP X0, 0x7A6000
	0x039AB638 LDR X0, [X0 + 0xB70]
	0x039AB63C BL 0x1C16CF4
	0x039AB640 ADRP X0, 0x7A6000
	0x039AB644 LDR X0, [X0 + 0xAB8]
	0x039AB648 BL 0x1C16CF4
	0x039AB64C ADRP X0, 0x748000
	0x039AB650 LDR X0, [X0 + 0x598]
	0x039AB654 BL 0x1C16CF4
	0x039AB658 ADRP X0, 0x7A6000
	0x039AB65C LDR X0, [X0 + 0xAC0]
	0x039AB660 BL 0x1C16CF4
	0x039AB664 ADRP X0, 0x7A6000
	0x039AB668 LDR X0, [X0 + 0xB78]
	0x039AB66C BL 0x1C16CF4
	0x039AB670 ADRP X0, 0x7A6000
	0x039AB674 LDR X0, [X0 + 0xB80]
	0x039AB678 BL 0x1C16CF4
	0x039AB67C MOVZ W8, 0x1
	0x039AB680 STRB W8, [X21 + 0xBE5]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0xA37000
	009 Move W8, [X21+3036]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x7A7000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move X0, 0x7A7000
	020 Move X0, [X0+328]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A7000
	023 Move X0, [X0+2696]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A7000
	026 Move X0, [X0+2704]
	027 Call 0x1C17CF4
	028 Move X0, 0x7A7000
	029 Move X0, [X0+2712]
	030 Call 0x1C17CF4
	031 Move X0, 0x7A7000
	032 Move X0, [X0+2720]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3036], W8
	036 Move [X31+8], X31
	037 Move [X31+16], X31
	038 Move [X31+24], X31
	039 Move X0, [X19+48]
	040 Compare X0, 0
	041 JumpIfEqual {100}
	042 Move X8, 0x7A7000
	043 Move X8, [X8+2720]
	044 Move X23, 0x7A7000
	045 Move X22, 0x7A7000
	046 Move X1, [X8]
	047 Move X23, [X23+2704]
	048 Move X22, [X22+2696]
	049 Add X8, X31, 8
	050 Call List`1<Object>.GetEnumerator, X0
	051 Move X1, [X23]
	052 Add X0, X31, 8
	053 Call Enumerator<Object>.MoveNext, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {84}
	058 Move X21, [X31+24]
	059 Compare X21, 0
	060 JumpIfEqual {99}
	061 Move X0, [X21+24]
	062 Move X1, X20
	063 Move X2, X31
	064 Call String.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {51}
	069 Move X8, 0x7A7000
	070 Move X8, [X8+320]
	071 Move X0, [X8]
	072 Call 0x1C17F10
	073 Move X8, 0x7A7000
	074 Move X8, [X8+328]
	075 Move X20, X0
	076 Move X2, [X8]
	077 Move X1, X19
	078 Move X3, X31
	079 Call Action`1<Object>..ctor, X0, X1, X2
	080 Move X0, X21
	081 Move X1, X20
	082 Move X2, X31
	083 Call Panel.remove_onSetDirty, X0, X1
	084 Move X21, X31
	085 Move X1, [X22]
	086 Add X0, X31, 8
	087 Call Enumerator<Object>.Dispose, X0
	088 Move X0, X19
	089 Move X1, X21
	090 Call DebugManager.RemovePanel, X0, X1
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X30, [X31+32]
	096 Move X23, [X31+40]
	097 Add X31, X31, 80
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F20
	101 Move X20, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Call 0x3EB2AD0
	105 Move X21, [X0]
	106 Call 0x3EB2AE0
	107 Move X1, [X22]
	108 Add X0, X31, 8
	109 Call Enumerator<Object>.Dispose, X0
	110 Compare X21, 0
	111 JumpIfEqual {88}
	112 Move X0, X21
	113 Call 0x1C17F18
	114 Move X21, X31
	115 Move X20, X0
	116 Move X1, [X22]
	117 Add X0, X31, 8
	118 Call Enumerator<Object>.Dispose, X0
	119 Compare X21, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X20
	122 Call 0x1D2D690
	123 Move X0, X21
	124 Call 0x1C17F18
	125 Call 0x1991590

Method: System.Void RemovePanel(UnityEngine.Rendering.DebugUI/Panel panel)

Disassembly:
	0x039AB378 LDR X8, [X0 + 0xB8]
	0x039AB37C ADRP X25, 0x7A6000
	0x039AB380 LDR X20, [X8 + 0x8]
	0x039AB384 LDR X25, [X25 + 0xB60]
	0x039AB388 MOV X0, X20
	0x039AB38C MOV X1, X19
	0x039AB390 MOV X2, X31
	0x039AB394 BL 0x33C0DE4
	0x039AB398 CBZ X0, 0x39AB3B8
	0x039AB39C LDR X23, [X25]
	0x039AB3A0 MOV X22, X0
	0x039AB3A4 MOV X1, X23
	0x039AB3A8 BL 0x1C16E00
	0x039AB3AC MOV X21, X0
	0x039AB3B0 CBNZ X0, 0x39AB3BC
	0x039AB3B4 B 0x39AB404
	0x039AB3B8 MOV X21, X31
	0x039AB3BC LDR X0, [X24]
	0x039AB3C0 LDR W8, [X0 + 0xE0]
	0x039AB3C4 CBNZ W8, 0x39AB3D0
	0x039AB3C8 BL 0x1C16DFC
	0x039AB3CC LDR X0, [X24]
	0x039AB3D0 LDR X8, [X0 + 0xB8]
	0x039AB3D4 MOV X1, X21
	0x039AB3D8 MOV X2, X20
	0x039AB3DC ADD X0, X8, 0x8
	0x039AB3E0 BL 0x1C24138
	0x039AB3E4 CMP X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA37000
	006 Move W8, [X21+3037]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7A7000
	014 Move X0, [X0+2832]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3037], W8
	018 Compare X20, 0
	019 JumpIfEqual {35}
	020 Move X0, [X19+48]
	021 Compare X0, 0
	022 JumpIfEqual {40}
	023 Move X8, 0x7A7000
	024 Move X8, [X8+2832]
	025 Move X1, X20
	026 Move X2, [X8]
	027 Call List`1<Object>.Remove, X0, X1
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call DebugManager.UpdateReadOnlyCollection, X0
	034 Return 
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Call 0x1C17F20

Method: UnityEngine.Rendering.DebugUI/Widget[] GetItems(UnityEngine.Rendering.DebugUI/Flags flags)

Disassembly:
	0x039AB684 ADRP X22, 0x748000
	0x039AB688 LDR X22, [X22 + 0x598]
	0x039AB68C TBZ X20, 0x0, 0x39AB7B8
	0x039AB690 ADRP X8, 0x7A6000
	0x039AB694 ADRP X9, 0x7A6000
	0x039AB698 LDR X8, [X8 + 0xB80]
	0x039AB69C LDR X9, [X9 + 0xAC0]
	0x039AB6A0 ADRP X23, 0x7A6000
	0x039AB6A4 LDR X0, [X8]
	0x039AB6A8 LDR X1, [X9]
	0x039AB6AC LDR X23, [X23 + 0xAB8]
	0x039AB6B0 BL 0x2241FB8
	0x039AB6B4 LDR X8, [X22]
	0x039AB6B8 MOV X21, X0
	0x039AB6BC LDR W9, [X8 + 0xE0]
	0x039AB6C0 CBNZ W9, 0x39AB6CC
	0x039AB6C4 MOV X0, X8
	0x039AB6C8 BL 0x1C16DFC
	0x039AB6CC LDR X1, [X23]
	0x039AB6D0 MOV X0, X21
	0x039AB6D4 BL 0x222D35C
	0x039AB6D8 CBZ X0, 0x39AB874
	0x039AB6DC MOV X1, X31
	0x039AB6E0 BL 0x3C32ECC
	0x039AB6E4 STR X0, [X19 + 0x60]
	0x039AB6E8 CBZ X0, 0x39AB874
	0x039AB6EC ADRP X8, 0x7A6000
	0x039AB6F0 LDR X8, [X8 + 0xB78]
	0x039AB6F4 MOV X2, X31
	0x039AB6F8 LDR X1, [X8]
	0x039AB6FC BL 0x3C38A84
	0x039AB700 LDR X0, [X19 + 0x60]
	0x039AB704 CBZ X0, 0x39AB874
	0x039AB708 MOV X1, X31
	0x039AB70C BL 0x3C356F8
	0x039AB710 ADRP X23, 0xA2D000
	0x039AB714 LDRB W8, [X23 + 0x783]
	0x039AB718 MOV X21, X0
	0x039AB71C CBNZ W8, 0x39AB734
	0x039AB720 ADRP X0, 0x748000
	0x039AB724 LDR X0, [X0 + 0x5A0]
	0x039AB728 BL 0x1C16CF4
	0x039AB72C MOVZ W8, 0x1
	0x039AB730 STRB W8, [X23 + 0x783]
	0x039AB734 CBZ X21, 0x39AB874
	0x039AB738 ADRP X8, 0x748000
	0x039AB73C LDR X8, [X8 + 0x5A0]
	0x039AB740 MOV X0, X21
	0x039AB744 MOV X1, X31
	0x039AB748 LDR X8, [X8]
	0x039AB74C LDR X8, [X8 + 0xB8]
	0x039AB750 LDP S1, S2, [X8 + 0x4]
	0x039AB754 LDR V0, [X8]
	0x039AB758 BL 0x3C3EC04
	0x039AB75C LDR X0, [X19 + 0x60]
	0x039AB760 CBZ X0, 0x39AB874
	0x039AB764 ADRP X8, 0x7A6000
	0x039AB768 LDR X8, [X8 + 0xB70]
	0x039AB76C LDR X1, [X8]
	0x039AB770 BL 0x21E52E4
	0x039AB774 LDR X8, [X19 + 0x60]
	0x039AB778 STR X0, [X19 + 0x68]
	0x039AB77C CBZ X8, 0x39AB874
	0x039AB780 ADRP X9, 0x7A6000
	0x039AB784 LDR X9, [X9 + 0xB68]
	0x039AB788 MOV X0, X8
	0x039AB78C LDR X1, [X9]
	0x039AB790 BL 0x21E52E4
	0x039AB794 CBZ X0, 0x39AB874
	0x039AB798 MOVZ W8, 0x1
	0x039AB79C STR W8, [X0 + 0x20]
	0x039AB7A0 LDR X0, [X19 + 0x60]
	0x039AB7A4 CBZ X0, 0x39AB874
	0x039AB7A8 MOVZ W1, 0x1
	0x039AB7AC MOV X2, X31
	0x039AB7B0 BL 0x3C357B4
	0x039AB7B4 B 0x39AB7E8
	0x039AB7B8 ADRP X8, 0x770000
	0x039AB7BC LDR X8, [X8 + 0x8F8]
	0x039AB7C0 MOV X23, X19
	0x039AB7C4 LDR X21, [X23 + 0x60]!
	0x039AB7C8 LDR X0, [X8]
	0x039AB7CC LDR W8, [X0 + 0xE0]
	0x039AB7D0 CBNZ W8, 0x39AB7D8
	0x039AB7D4 BL 0x1C16DFC
	0x039AB7D8 MOV X0, X21
	0x039AB7DC MOV X1, X31
	0x039AB7E0 BL 0x39E1DF8
	0x039AB7E4 STP X31, X31, [X23]
	0x039AB7E8 LDR X8, [X19 + 0x38]
	0x039AB7EC CBZ X8, 0x39AB874
	0x039AB7F0 LDR X9, [X8 + 0x18]
	0x039AB7F4 LDR X0, [X8 + 0x40]
	0x039AB7F8 LDR X2, [X8 + 0x28]
	0x039AB7FC AND W20, W20, 0x1
	0x039AB800 MOV W1, W20
	0x039AB804 BLR X9
	0x039AB808 MOV W0, W20
	0x039AB80C MOV X1, X31
	0x039AB810 BL 0x39AFF50
	0x039AB814 LDR X0, [X22]
	0x039AB818 LDR X20, [X19 + 0x90]
	0x039AB81C LDR X21, [X19 + 0x60]
	0x039AB820 LDR W8, [X0 + 0xE0]
	0x039AB824 CBNZ W8, 0x39AB82C
	0x039AB828 BL 0x1C16DFC
	0x039AB82C MOV X0, X21
	0x039AB830 MOV X1, X31
	0x039AB834 MOV X2, X31
	0x039AB838 BL 0x3C354F8
	0x039AB83C TBZ X0, 0x0, 0x39AB854
	0x039AB840 LDR X0, [X19 + 0x60]
	0x039AB844 CBZ X0, 0x39AB874
	0x039AB848 MOV X1, X31
	0x039AB84C BL 0x3C35834
	0x039AB850 B 0x39AB858
	0x039AB854 MOV W0, W31
	0x039AB858 CBZ X20, 0x39AB874
	0x039AB85C AND W1, W0, 0x1
	0x039AB860 MOV X0, X20
	0x039AB864 LDP X20, X19, [X31 + 0x20]
	0x039AB868 LDP X22, X21, [X31 + 0x10]
	0x039AB86C LDP X30, X23, [X31], #0x30
	0x039AB870 B 0x39AB53C
	0x039AB874 BL 0x1C16F20
	0x039AB878 STP X30, X21, [X31 - 0x20]!
	0x039AB87C STP X20, X19, [X31 + 0x10]
	0x039AB880 ADRP X21, 0xA36000
	0x039AB884 LDRB W8, [X21 + 0xBE7]
	0x039AB888 MOV W20, W1
	0x039AB88C MOV X19, X0
	0x039AB890 TBZ X8, 0x0, 0x39AB8A8
	0x039AB894 TBZ X20, 0x0, 0x39AB8C0
	0x039AB898 MOV X0, X19
	0x039AB89C LDP X20, X19, [X31 + 0x10]
	0x039AB8A0 LDP X30, X21, [X31], #0x20
	0x039AB8A4 B 0x39A9A0C
	0x039AB8A8 ADRP X0, 0x770000
	0x039AB8AC LDR X0, [X0 + 0x8F8]
	0x039AB8B0 BL 0x1C16CF4
	0x039AB8B4 MOVZ W8, 0x1
	0x039AB8B8 STRB W8, [X21 + 0xBE7]
	0x039AB8BC TBNZ X20, 0x0, 0x39AB898
	0x039AB8C0 ADRP X8, 0x770000
	0x039AB8C4 LDR X8, [X8 + 0x8F8]
	0x039AB8C8 LDR X20, [X19 + 0x70]!
	0x039AB8CC LDR X0, [X8]
	0x039AB8D0 LDR W8, [X0 + 0xE0]
	0x039AB8D4 CBNZ W8, 0x39AB8DC
	0x039AB8D8 BL 0x1C16DFC
	0x039AB8DC MOV X0, X20
	0x039AB8E0 MOV X1, X31
	0x039AB8E4 BL 0x39E1DF8
	0x039AB8E8 STP X31, X31, [X19]
	0x039AB8EC LDP X20, X19, [X31 + 0x10]
	0x039AB8F0 LDP X30, X21, [X31], #0x20
	0x039AB8F4 RET
	0x039AB8F8 STR X30, [X31 - 0x10]!
	0x039AB8FC LDR X0, [X0 + 0x80]
	0x039AB900 CBZ X0, 0x39AB910
	0x039AB904 AND W1, W1, 0x1
	0x039AB908 LDR X30, [X31], #0x10
	0x039AB90C B 0x39AB53C
	0x039AB910 BL 0x1C16F20
	0x039AB914 STR X30, [X31 - 0x40]!
	0x039AB918 STP X24, X23, [X31 + 0x10]
	0x039AB91C STP X22, X21, [X31 + 0x20]
	0x039AB920 STP X20, X19, [X31 + 0x30]
	0x039AB924 ADRP X20, 0xA36000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X22, 0xA37000
	011 Move X21, 0x7A7000
	012 Move W8, [X22+3038]
	013 Move X21, [X21+2872]
	014 Move W19, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x7A7000
	021 Move X0, [X0+2696]
	022 Call 0x1C17CF4
	023 Move X0, 0x7A7000
	024 Move X0, [X0+2704]
	025 Call 0x1C17CF4
	026 Move X0, 0x7A7000
	027 Move X0, [X0+2712]
	028 Call 0x1C17CF4
	029 Move X0, 0x7A7000
	030 Move X0, [X0+2880]
	031 Call 0x1C17CF4
	032 Move X0, 0x7A7000
	033 Move X0, [X0+2872]
	034 Call 0x1C17CF4
	035 Move X0, 0x7A7000
	036 Move X0, [X0+2888]
	037 Call 0x1C17CF4
	038 Move X0, 0x7A7000
	039 Move X0, [X0+2720]
	040 Call 0x1C17CF4
	041 Move X0, 0x7A6000
	042 Move X0, [X0+1944]
	043 Call 0x1C17CF4
	044 Move X0, 0x7A7000
	045 Move X0, [X0+2896]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+3038], W8
	049 Move X0, [X21]
	050 Move [X31+64], X31
	051 Move [X31+72], X31
	052 Move [X31+48], X31
	053 Move [X31+56], X31
	054 Move [X31+32], X31
	055 Move [X31+40], X31
	056 Move X21, 0x7A7000
	057 Move W8, [X0+224]
	058 Move X21, [X21+2880]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X1, [X21]
	063 Move X22, 0x7A7000
	064 Move X22, [X22+2896]
	065 Add X0, X31, 72
	066 Call ListPool`1<Object>.Get, X0
	067 Move [X31+56], X0
	068 Move [X31+64], X1
	069 Move X0, [X20+48]
	070 Compare X0, 0
	071 JumpIfEqual {133}
	072 Move X8, 0x7A7000
	073 Move X8, [X8+2720]
	074 Move X1, [X8]
	075 Add X8, X31, 8
	076 Call List`1<Object>.GetEnumerator, X0
	077 Move X21, 0x7A7000
	078 Move X25, 0x7A7000
	079 Move X21, [X21+2704]
	080 Move X25, [X25+2888]
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X8, [X31+24]
	083 Move X23, 0x7A7000
	084 Move X24, 0x7A6000
	085 Move X23, [X23+2696]
	086 Move X24, [X24+1944]
	087 Move [X31+2], V0
	088 Move [X31+48], X8
	089 Move X1, [X21]
	090 Add X0, X31, 32
	091 Call Enumerator<Object>.MoveNext, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {106}
	096 Move X2, [X31+48]
	097 Move X0, X20
	098 Move W1, W19
	099 Call DebugManager.GetItemsFromContainer, X0, X1, X2
	100 Move X1, X0
	101 Move X0, [X31+72]
	102 Compare X0, 0
	103 JumpIfEqual {132}
	104 Move X2, [X25]
	105 Call List`1<Object>.AddRange, X0, X1
	106 Move X19, X31
	107 Move X1, [X23]
	108 Add X0, X31, 32
	109 Call Enumerator<Object>.Dispose, X0
	110 Compare X19, 0
	111 JumpIfNotEqual {134}
	112 Move X0, [X31+72]
	113 Compare X0, 0
	114 JumpIfEqual {136}
	115 Move X1, [X24]
	116 Call List`1<Object>.ToArray, X0
	117 Move X1, [X22]
	118 Move X19, X0
	119 Add X0, X31, 56
	120 Call 0x24A79BC, X0
	121 Move X0, X19
	122 Move X20, [X31+128]
	123 Move X19, [X31+136]
	124 Move X22, [X31+112]
	125 Move X21, [X31+120]
	126 Move X24, [X31+96]
	127 Move X23, [X31+104]
	128 Move X30, [X31+80]
	129 Move X25, [X31+88]
	130 Add X31, X31, 144
	131 Return X0
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Move X0, X19
	135 Call 0x1C17F18
	136 Call 0x1C17F20
	137 Move X20, X1
	138 Move X21, X0
	139 Move X20, X1
	140 Move X21, X0
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, X21
	143 Call 0x3EB2AD0
	144 Move X19, [X0]
	145 Call 0x3EB2AE0
	146 Move X19, X31
	147 Move X1, [X23]
	148 Add X0, X31, 32
	149 Call Enumerator<Object>.Dispose, X0
	150 Compare X19, 0
	151 JumpIfNotEqual {166}
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X21
	154 Call 0x3EB2AD0
	155 Move X20, [X0]
	156 Call 0x3EB2AE0
	157 Move X1, [X22]
	158 Add X0, X31, 56
	159 Call 0x24A79BC, X0
	160 Compare X20, 0
	161 JumpIfNotEqual {164}
	162 Move X19, X31
	163 Move X20, X31
	164 Move X0, X20
	165 Call 0x1C17F18
	166 Move X0, X19
	167 Call 0x1C17F18
	168 Move X20, X1
	169 Move X21, X0
	170 Move X21, X0
	171 Move X1, [X22]
	172 Add X0, X31, 56
	173 Call 0x24A79BC, X0
	174 Compare X20, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X21
	177 Call 0x1D2D690
	178 Move X0, X20
	179 Call 0x1C17F18
	180 Call 0x1991590

Method: UnityEngine.Rendering.DebugUI/Widget[] GetItemsFromContainer(UnityEngine.Rendering.DebugUI/Flags flags, UnityEngine.Rendering.DebugUI/IContainer container)

Disassembly:
	0x039AB928 ADRP X19, 0x7A6000
	0x039AB92C LDRB W8, [X20 + 0xBE8]
	0x039AB930 LDR X19, [X19 + 0xA68]
	0x039AB934 TBNZ X8, 0x0, 0x39AB988
	0x039AB938 ADRP X0, 0x7A5000
	0x039AB93C LDR X0, [X0 + 0x778]
	0x039AB940 BL 0x1C16CF4
	0x039AB944 ADRP X0, 0x7A6000
	0x039AB948 LDR X0, [X0 + 0xB88]
	0x039AB94C BL 0x1C16CF4
	0x039AB950 ADRP X0, 0x7A6000
	0x039AB954 LDR X0, [X0 + 0xB90]
	0x039AB958 BL 0x1C16CF4
	0x039AB95C ADRP X0, 0x7A6000
	0x039AB960 LDR X0, [X0 + 0xB98]
	0x039AB964 BL 0x1C16CF4
	0x039AB968 ADRP X0, 0x7A6000
	0x039AB96C LDR X0, [X0 + 0xBA0]
	0x039AB970 BL 0x1C16CF4
	0x039AB974 ADRP X0, 0x7A6000
	0x039AB978 LDR X0, [X0 + 0xA68]
	0x039AB97C BL 0x1C16CF4
	0x039AB980 MOVZ W8, 0x1
	0x039AB984 STRB W8, [X20 + 0xBE8]
	0x039AB988 LDR X0, [X19]
	0x039AB98C ADRP X24, 0x7A6000
	0x039AB990 ADRP X20, 0x7A6000
	0x039AB994 ADRP X23, 0x7A6000
	0x039AB998 ADRP X22, 0x7A6000
	0x039AB99C ADRP X21, 0x7A5000
	0x039AB9A0 LDR X24, [X24 + 0xB88]
	0x039AB9A4 LDR W8, [X0 + 0xE0]
	0x039AB9A8 LDR X20, [X20 + 0xBA0]
	0x039AB9AC LDR X23, [X23 + 0xB98]
	0x039AB9B0 LDR X22, [X22 + 0xB90]
	0x039AB9B4 LDR X21, [X21 + 0x778]
	0x039AB9B8 CBNZ W8, 0x39AB9C4
	0x039AB9BC BL 0x1C16DFC
	0x039AB9C0 LDR X0, [X19]
	0x039AB9C4 LDR X8, [X0 + 0xB8]
	0x039AB9C8 LDR X0, [X24]
	0x039AB9CC LDR X19, [X8]
	0x039AB9D0 BL 0x1C16F10
	0x039AB9D4 LDR X2, [X20]
	0x039AB9D8 MOV X1, X19
	0x039AB9DC MOV X3, X31
	0x039AB9E0 MOV X20, X0
	0x039AB9E4 BL 0x2D27AA8
	0x039AB9E8 LDR X0, [X23]
	0x039AB9EC BL 0x1C16F10
	0x039AB9F0 LDR X2, [X22]
	0x039AB9F4 MOV X1, X20
	0x039AB9F8 MOV X19, X0
	0x039AB9FC BL 0x2EE87EC
	0x039ABA00 LDR X8, [X21]
	0x039ABA04 LDP X22, X21, [X31 + 0x20]
	0x039ABA08 LDP X24, X23, [X31 + 0x10]
	0x039ABA0C LDR X8, [X8 + 0xB8]
	0x039ABA10 STR X19, [X8]
	0x039ABA14 LDP X20, X19, [X31 + 0x30]
	0x039ABA18 LDR X30, [X31], #0x40
	0x039ABA1C RET
	0x039ABA20 LDRB W0, [X0 + 0x14]
	0x039ABA24 RET
	0x039ABA28 STR X30, [X31 - 0x20]!
	0x039ABA2C STP X20, X19, [X31 + 0x10]
	0x039ABA30 ADRP X19, 0xA36000
	0x039ABA34 ADRP X20, 0x7A6000
	0x039ABA38 LDRB W8, [X19 + 0xBEA]
	0x039ABA3C LDR X20, [X20 + 0xA68]
	0x039ABA40 TBNZ X8, 0x0, 0x39ABA58
	0x039ABA44 ADRP X0, 0x7A6000
	0x039ABA48 LDR X0, [X0 + 0xA68]
	0x039ABA4C BL 0x1C16CF4
	0x039ABA50 MOVZ W8, 0x1
	0x039ABA54 STRB W8, [X19 + 0xBEA]
	0x039ABA58 LDR X0, [X20]
	0x039ABA5C BL 0x1C16F10
	0x039ABA60 MOV X1, X31
	0x039ABA64 MOV X19, X0
	0x039ABA68 BL 0x33BDD8C
	0x039ABA6C LDR X8, [X20]
	0x039ABA70 LDR X8, [X8 + 0xB8]
	0x039ABA74 STR X19, [X8]
	0x039ABA78 LDP X20, X19, [X31 + 0x10]
	0x039ABA7C LDR X30, [X31], #0x20
	0x039ABA80 RET
	0x039ABA84 MOV X1, X31
	0x039ABA88 B 0x33BDD8C
	0x039ABA8C RET
	0x039ABA90 RET
	0x039ABA94 STR X30, [X31 - 0x20]!
	0x039ABA98 STP X20, X19, [X31 + 0x10]
	0x039ABA9C ADRP X20, 0xA36000
	0x039ABAA0 LDRB W8, [X20 + 0xBEB]
	0x039ABAA4 MOV X19, X1
	0x039ABAA8 TBNZ X8, 0x0, 0x39ABAC0
	0x039ABAAC ADRP X0, 0x7A6000
	0x039ABAB0 LDR X0, [X0 + 0x878]
	0x039ABAB4 BL 0x1C16CF4
	0x039ABAB8 MOVZ W8, 0x1
	0x039ABABC STRB W8, [X20 + 0xBEB]
	0x039ABAC0 CBZ X19, 0x39ABAF8
	0x039ABAC4 ADRP X8, 0x7A6000
	0x039ABAC8 LDR X8, [X8 + 0x878]
	0x039ABACC LDR X9, [X19]
	0x039ABAD0 LDR X8, [X8]
	0x039ABAD4 LDRB W11, [X9 + 0x130]
	0x039ABAD8 LDRB W10, [X8 + 0x130]
	0x039ABADC CMP W11, W10
	0x039ABAE0 B.CC 0x39ABAF8
	0x039ABAE4 LDR X9, [X9 + 0xC8]
	0x039ABAE8 ADD X9, X9, X10, 0x3, LSL
	0x039ABAEC LDUR X9, [X9 - 0x8]
	0x039ABAF0 CMP X9, X8
	0x039ABAF4 B.EQ 0x39ABB08
	0x039ABAF8 MOVN W0, 0x0
	0x039ABAFC LDP X20, X19, [X31 + 0x10]
	0x039ABB00 LDR X30, [X31], #0x20
	0x039ABB04 RET
	0x039ABB08 LDR W0, [X19 + 0x50]
	0x039ABB0C B 0x39ABAFC
	0x039ABB10 STR X30, [X31 - 0x20]!
	0x039ABB14 STP X20, X19, [X31 + 0x10]
	0x039ABB18 ADRP X19, 0xA36000
	0x039ABB1C ADRP X20, 0x7A5000
	0x039ABB20 LDRB W8, [X19 + 0xBEC]
	0x039ABB24 LDR X20, [X20 + 0x778]
	0x039ABB28 TBNZ X8, 0x0, 0x39ABB40
	0x039ABB2C ADRP X0, 0x7A5000
	0x039ABB30 LDR X0, [X0 + 0x778]
	0x039ABB34 BL 0x1C16CF4
	0x039ABB38 MOVZ W8, 0x1
	0x039ABB3C STRB W8, [X19 + 0xBEC]
	0x039ABB40 LDR X0, [X20]
	0x039ABB44 BL 0x1C16F10
	0x039ABB48 MOV X19, X0
	0x039ABB4C BL 0x39A9534
	0x039ABB50 MOV X0, X19
	0x039ABB54 LDP X20, X19, [X31 + 0x10]
	0x039ABB58 LDR X30, [X31], #0x20
	0x039ABB5C RET
	0x039ABB60 STR X30, [X31 - 0x10]!
	0x039ABB64 CBZ X1, 0x39ABB80
	0x039ABB68 LDR X8, [X1 + 0x18]
	0x039ABB6C LDR X1, [X0 + 0x10]
	0x039ABB70 MOV X2, X31
	0x039ABB74 MOV X0, X8
	0x039ABB78 LDR X30, [X31], #0x10
	0x039ABB7C B 0x321BA08
	0x039ABB80 BL 0x1C16F20
	0x039ABB84 LDRB W0, [X0 + 0x2C]
	0x039ABB88 RET
	0x039ABB8C AND W8, W1, 0x1
	0x039ABB90 STRB W8, [X0 + 0x2C]
	0x039ABB94 RET
	0x039ABB98 LDR V0, [X0 + 0x30]
	0x039ABB9C RET
	0x039ABBA0 STR S0, [X0 + 0x30]
	0x039ABBA4 RET
	0x039ABBA8 STR D8, [X31 - 0x30]!
	0x039ABBAC STR X30, [X31 + 0x8]
	0x039ABBB0 STP X22, X21, [X31 + 0x10]
	0x039ABBB4 STP X20, X19, [X31 + 0x20]
	0x039ABBB8 ADRP X22, 0xA36000
	0x039ABBBC ADRP X21, 0x74A000
	0x039ABBC0 LDRB W8, [X22 + 0xBED]
	0x039ABBC4 LDR X21, [X21 + 0x9B8]
	0x039ABBC8 MOV V8.16B, V0.16B
	0x039ABBCC MOV W20, W1
	0x039ABBD0 MOV X19, X0
	0x039ABBD4 TBNZ X8, 0x0, 0x39ABBEC
	0x039ABBD8 ADRP X0, 0x74A000
	0x039ABBDC LDR X0, [X0 + 0x9B8]
	0x039ABBE0 BL 0x1C16CF4
	0x039ABBE4 MOVZ W8, 0x1
	0x039ABBE8 STRB W8, [X22 + 0xBED]
	0x039ABBEC MOVZ W8, 0x1
	0x039ABBF0 STR S8, [X19 + 0x30]
	0x039ABBF4 STRB W8, [X19 + 0x2C]
	0x039ABBF8 STR W31, [X19 + 0x28]
	0x039ABBFC LDR X0, [X21]
	0x039ABC00 MOV W1, W20
	0x039ABC04 BL 0x1C16D6C
	0x039ABC08 STR X0, [X19 + 0x20]
	0x039ABC0C CBZ X0, 0x39ABC5C
	0x039ABC10 LDR W8, [X0 + 0x18]
	0x039ABC14 UBFM X9, X8, 0x20, 0x1F
	0x039ABC18 CMP X9, 0x1
	0x039ABC1C B.LT 0x39ABC44
	0x039ABC20 MOV X9, X31
	0x039ABC24 SXTW X10, W8
	0x039ABC28 ADD X11, X0, 0x20
	0x039ABC2C CMP X9, X8
	0x039ABC30 B.CS 0x39ABC58
	0x039ABC34 STRB W31, [X11, X9, LSL]
	0x039ABC38 ADD X9, X9, 0x1
	0x039ABC3C CMP X9, X10
	0x039ABC40 B.LT 0x39ABC2C
	0x039ABC44 LDP X20, X19, [X31 + 0x20]
	0x039ABC48 LDP X22, X21, [X31 + 0x10]
	0x039ABC4C LDR X30, [X31 + 0x8]
	0x039ABC50 LDR V8, [X31], #0x30
	0x039ABC54 RET
	0x039ABC58 BL 0x1C16F28
	0x039ABC5C BL 0x1C16F20
	0x039ABC60 STRB W31, [X0 + 0x2C]
	0x039ABC64 STR W31, [X0 + 0x28]
	0x039ABC68 STR X31, [X0 + 0x20]
	0x039ABC6C RET
	0x039ABC70 STR X30, [X31 - 0x20]!
	0x039ABC74 STP X20, X19, [X31 + 0x10]
	0x039ABC78 ADRP X19, 0xA36000
	0x039ABC7C ADRP X20, 0x7A6000
	0x039ABC80 LDRB W8, [X19 + 0xBF0]
	0x039ABC84 LDR X20, [X20 + 0xBA8]
	0x039ABC88 TBNZ X8, 0x0, 0x39ABCA0
	0x039ABC8C ADRP X0, 0x7A6000
	0x039ABC90 LDR X0, [X0 + 0xBA8]
	0x039ABC94 BL 0x1C16CF4
	0x039ABC98 MOVZ W8, 0x1
	0x039ABC9C STRB W8, [X19 + 0xBF0]
	0x039ABCA0 LDR X0, [X20]
	0x039ABCA4 LDR X8, [X0 + 0xB8]
	0x039ABCA8 LDR X8, [X8]
	0x039ABCAC CBNZ X8, 0x39ABCD8
	0x039ABCB0 BL 0x1C16F10
	0x039ABCB4 MOV X1, X31
	0x039ABCB8 MOV X19, X0
	0x039ABCBC BL 0x33BDD8C
	0x039ABCC0 LDR X8, [X20]
	0x039ABCC4 LDR X8, [X8 + 0xB8]
	0x039ABCC8 STR X19, [X8]
	0x039ABCCC LDR X8, [X20]
	0x039ABCD0 LDR X8, [X8 + 0xB8]
	0x039ABCD4 LDR X8, [X8]
	0x039ABCD8 LDP X20, X19, [X31 + 0x10]
	0x039ABCDC MOV X0, X8
	0x039ABCE0 LDR X30, [X31], #0x20
	0x039ABCE4 RET
	0x039ABCE8 MOV X1, X31
	0x039ABCEC B 0x33BDD8C
	0x039ABCF0 SUB X31, X31, 0xD0
	0x039ABCF4 STR D14, [X31 + 0x30]
	0x039ABCF8 STP D13, D12, [X31 + 0x40]
	0x039ABCFC STP D11, D10, [X31 + 0x50]
	0x039ABD00 STP D9, D8, [X31 + 0x60]
	0x039ABD04 STP X29, X30, [X31 + 0x70]
	0x039ABD08 STP X28, X27, [X31 + 0x80]
	0x039ABD0C STP X26, X25, [X31 + 0x90]
	0x039ABD10 STP X24, X23, [X31 + 0xA0]
	0x039ABD14 STP X22, X21, [X31 + 0xB0]
	0x039ABD18 STP X20, X19, [X31 + 0xC0]
	0x039ABD1C ADRP X19, 0xA36000
	0x039ABD20 LDRB W8, [X19 + 0xBF1]
	0x039ABD24 MOV W23, W3
	0x039ABD28 MOV W21, W2
	0x039ABD2C MOV X22, X1
	0x039ABD30 STR D0, [X31 + 0x10]
	0x039ABD34 TBNZ X8, 0x0, 0x39ABD70
	0x039ABD38 ADRP X0, 0x7A6000
	0x039ABD3C LDR X0, [X0 + 0xBB0]
	0x039ABD40 BL 0x1C16CF4
	0x039ABD44 ADRP X0, 0x749000
	0x039ABD48 LDR X0, [X0 + 0xE58]
	0x039ABD4C BL 0x1C16CF4
	0x039ABD50 ADRP X0, 0x7A2000
	0x039ABD54 LDR X0, [X0 + 0xA88]
	0x039ABD58 BL 0x1C16CF4
	0x039ABD5C ADRP X0, 0x74A000
	0x039ABD60 LDR X0, [X0 + 0x9B0]
	0x039ABD64 BL 0x1C16CF4
	0x039ABD68 MOVZ W8, 0x1
	0x039ABD6C STRB W8, [X19 + 0xBF1]
	0x039ABD70 LDR X0, [X22]
	0x039ABD74 CBZ X0, 0x39AC3D4
	0x039ABD78 ADRP X19, 0x74A000
	0x039ABD7C LDR X19, [X19 + 0x9B0]
	0x039ABD80 MOV X1, X31
	0x039ABD84 BL 0x3C19C94
	0x039ABD88 LDR X0, [X19]
	0x039ABD8C ADD W9, W21, 0x1
	0x039ABD90 ORR W8, W31, 0x2
	0x039ABD94 MADD W1, W9, W23, W8
	0x039ABD98 STR W9, [X31 + 0x8]
	0x039ABD9C BL 0x1C16D6C
	0x039ABDA0 ADRP X19, 0xA2D000
	0x039ABDA4 LDRB W8, [X19 + 0x786]
	0x039ABDA8 MOV X20, X0
	0x039ABDAC CBNZ W8, 0x39ABDC4
	0x039ABDB0 ADRP X0, 0x748000
	0x039ABDB4 LDR X0, [X0 + 0x5A0]
	0x039ABDB8 BL 0x1C16CF4
	0x039ABDBC MOVZ W8, 0x1
	0x039ABDC0 STRB W8, [X19 + 0x786]
	0x039ABDC4 CBZ X20, 0x39AC3D4
	0x039ABDC8 LDR W8, [X20 + 0x18]
	0x039ABDCC STR X22, [X31]
	0x039ABDD0 CBZ W8, 0x39AC3D0
	0x039ABDD4 ADRP X8, 0x748000
	0x039ABDD8 LDR X8, [X8 + 0x5A0]
	0x039ABDDC LDR V2, [X31 + 0x1]
	0x039ABDE0 MOV W27, W23
	0x039ABDE4 UCVTF S8, W21
	0x039ABDE8 LDR X8, [X8]
	0x039ABDEC STR W23, [X31 + 0xC]
	0x039ABDF0 LDR X8, [X8 + 0xB8]
	0x039ABDF4 LDR V0, [X8 + 0x18]
	0x039ABDF8 LDR V1, [X8 + 0x20]
	0x00000000 INVALID
	0x039ABE00 FMUL S1, S1, S2
	0x039ABE04 STR D0, [X20 + 0x20]
	0x039ABE08 STR S1, [X20 + 0x28]
	0x039ABE0C CBZ W23, 0x39ABEEC
	0x039ABE10 LDP W9, W8, [X31 + 0x8]
	0x039ABE14 ADRP X10, 0xFFFFFFFFFD13F000
	0x039ABE18 LDR V11, [X10 + 0x6C]
	0x039ABE1C MOV X28, X31
	0x039ABE20 MOV W22, W9
	0x039ABE24 ADRP X9, 0xFFFFFFFFFD13E000
	0x039ABE28 LDR V10, [X9 + 0xF4C]
	0x039ABE2C ADD W8, W8, 0x1
	0x039ABE30 MOV W19, W21
	0x039ABE34 UCVTF S9, W8
	0x039ABE38 ORR X24, X31, 0x1
	0x039ABE3C FMOV S12, W31
	0x039ABE40 MOVZ W25, 0xC
	0x039ABE44 ADD W26, W28, 0x1
	0x039ABE48 SCVTF S0, W26
	0x039ABE4C FMUL S0, S0, S10
	0x039ABE50 FDIV S0, S0, S9
	0x039ABE54 ADD X0, X31, 0x3C
	0x039ABE58 ADD X1, X31, 0x38
	0x039ABE5C BL 0x3EB1BC0
	0x039ABE60 LDP S0, S13, [X31 + 0x38]
	0x039ABE64 LDR V1, [X31 + 0x1]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X23, 0xA37000
	015 Move X22, 0x7A7000
	016 Move W8, [X23+3039]
	017 Move X22, [X22+2872]
	018 Move X19, X2
	019 Move W20, W1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {60}
	025 Move X0, 0x7A7000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0x749000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0x7A7000
	032 Move X0, [X0+2792]
	033 Call 0x1C17CF4
	034 Move X0, 0x749000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move X0, 0x7A7000
	038 Move X0, [X0+2880]
	039 Call 0x1C17CF4
	040 Move X0, 0x7A7000
	041 Move X0, [X0+2872]
	042 Call 0x1C17CF4
	043 Move X0, 0x7A7000
	044 Move X0, [X0+2888]
	045 Call 0x1C17CF4
	046 Move X0, 0x7A6000
	047 Move X0, [X0+1936]
	048 Call 0x1C17CF4
	049 Move X0, 0x7A6000
	050 Move X0, [X0+1944]
	051 Call 0x1C17CF4
	052 Move X0, 0x7A7000
	053 Move X0, [X0+2800]
	054 Call 0x1C17CF4
	055 Move X0, 0x7A7000
	056 Move X0, [X0+2896]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X23+3039], W8
	060 Move X0, [X22]
	061 Move [X31+16], X31
	062 Move [X31+24], X31
	063 Move [X31+8], X31
	064 Move X22, 0x7A7000
	065 Move W8, [X0+224]
	066 Move X22, [X22+2880]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X1, [X22]
	071 Move X23, 0x7A7000
	072 Move X23, [X23+2896]
	073 Add X0, X31, 24
	074 Call ListPool`1<Object>.Get, X0
	075 Move [X31+8], X0
	076 Move [X31+16], X1
	077 Compare X19, 0
	078 JumpIfEqual {271}
	079 Move X25, 0x7A7000
	080 Move X8, [X19]
	081 Move X25, [X25+2904]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Move X1, [X25]
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X19
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X19
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X0, 0
	103 JumpIfEqual {272}
	104 Move X8, 0x7A7000
	105 Move X8, [X8+2800]
	106 Move X1, [X8]
	107 Call 0x24995D8, X0
	108 Move X24, 0x749000
	109 Move X24, [X24+3584]
	110 Move X19, X0
	111 Compare X0, 0
	112 JumpIfEqual {273}
	113 Move X26, 0x749000
	114 Move X27, 0x7A7000
	115 Move X28, 0x7A6000
	116 Move X29, 0x7A7000
	117 Move X26, [X26+3608]
	118 Move X27, [X27+2792]
	119 Move X28, [X28+1936]
	120 Move X29, [X29+2888]
	121 Move X8, [X19]
	122 Move X1, [X26]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X19
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X19
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {210}
	146 Move X8, [X19]
	147 Move X1, [X27]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move X0, X19
	158 Move W2, W31
	159 Call 0x1C5D788
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X19
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X8, X0
	168 Compare X0, 0
	169 JumpIfEqual {267}
	170 Move W9, [X8+32]
	171 NotImplemented "Instruction BICS not yet implemented."
	172 Move X0, [X31+24]
	173 Compare X0, 0
	174 JumpIfEqual {268}
	175 Move W11, [X0+28]
	176 Move X9, [X0+16]
	177 Move X10, [X28]
	178 Add W11, W11, 1
	179 Move [X0+28], W11
	180 Compare X9, 0
	181 JumpIfEqual {269}
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Move W12, [X9+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add W10, W11, 1
	186 Add X9, X9, X11
	187 Move [X0+24], W10
	188 Move [X9+32], X8
	189 Move X1, [X25]
	190 Move X0, X8
	191 Call 0x1C17E00
	192 Move X2, X0
	193 Compare X0, 0
	194 JumpIfEqual {121}
	195 Move X22, [X31+24]
	196 Move X0, X21
	197 Move W1, W20
	198 Call DebugManager.GetItemsFromContainer, X0, X1, X2
	199 Move X1, X0
	200 Compare X22, 0
	201 JumpIfEqual {270}
	202 Move X2, [X29]
	203 Move X0, X22
	204 Call List`1<Object>.AddRange, X0, X1
	205 Move X9, [X10+32]
	206 Move X9, [X9+192]
	207 Move X2, [X9+112]
	208 Move X1, X8
	209 Call List`1<Object>.AddWithResize, X0, X1
	210 Move X22, X31
	211 Move W20, 5
	212 Compare X19, 0
	213 JumpIfEqual {235}
	214 Move X8, [X19]
	215 Move X1, [X24]
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move X0, X19
	226 Move W2, W31
	227 Call 0x1C5D788
	228 NotImplemented "Instruction LDRSW not yet implemented."
	229 Add X8, X8, X9
	230 Add X0, X8, 312
	231 Move X8, [X0]
	232 Move X1, [X0+8]
	233 Move X0, X19
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Compare X22, 0
	236 JumpIfNotEqual {274}
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Compare W20, 0
	239 JumpIfNotEqual {248}
	240 Move X0, [X31+24]
	241 Compare X0, 0
	242 JumpIfEqual {276}
	243 Move X8, 0x7A6000
	244 Move X8, [X8+1944]
	245 Move X1, [X8]
	246 Call List`1<Object>.ToArray, X0
	247 Move X19, X0
	248 Move X19, X31
	249 Move X1, [X23]
	250 Add X0, X31, 8
	251 Call 0x24A79BC, X0
	252 Move X0, X19
	253 Move X20, [X31+112]
	254 Move X19, [X31+120]
	255 Move X22, [X31+96]
	256 Move X21, [X31+104]
	257 Move X24, [X31+80]
	258 Move X23, [X31+88]
	259 Move X26, [X31+64]
	260 Move X25, [X31+72]
	261 Move X28, [X31+48]
	262 Move X27, [X31+56]
	263 Move X29, [X31+32]
	264 Move X30, [X31+40]
	265 Add X31, X31, 128
	266 Return X0
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Call 0x1C17F20
	274 Move X0, X22
	275 Call 0x1C17F18
	276 Call 0x1C17F20
	277 Move X21, X1
	278 Move X20, X0
	279 Move X21, X1
	280 Move X20, X0
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X20
	283 Call 0x3EB2AD0
	284 Move X22, [X0]
	285 Call 0x3EB2AE0
	286 Move W20, W31
	287 Compare X19, 0
	288 JumpIfNotEqual {214}
	289 Move X22, X31
	290 Compare X19, 0
	291 JumpIfEqual {313}
	292 Move X8, [X19]
	293 Move X1, [X24]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move X0, X19
	304 Move W2, W31
	305 Call 0x1C5D788
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Add X8, X8, X9
	308 Add X0, X8, 312
	309 Move X8, [X0]
	310 Move X1, [X0+8]
	311 Move X0, X19
	312 NotImplemented "Instruction BLR not yet implemented."
	313 Compare X22, 0
	314 JumpIfNotEqual {328}
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X0, X20
	317 Call 0x3EB2AD0
	318 Move X19, [X0]
	319 Call 0x3EB2AE0
	320 Move X1, [X23]
	321 Add X0, X31, 8
	322 Call 0x24A79BC, X0
	323 Compare X19, 0
	324 JumpIfEqual {252}
	325 Move X0, X19
	326 Call 0x1C17F18
	327 Move X19, X31
	328 Move X0, X22
	329 Call 0x1C17F18
	330 Move X21, X1
	331 Move X20, X0
	332 Compare X19, 0
	333 JumpIfNotEqual {292}
	334 Move X20, X0
	335 Move X1, [X23]
	336 Add X0, X31, 8
	337 Call 0x24A79BC, X0
	338 Compare X19, 0
	339 JumpIfNotEqual {342}
	340 Move X0, X20
	341 Call 0x1D2D690
	342 Move X0, X19
	343 Call 0x1C17F18
	344 Call 0x1991590

Method: UnityEngine.Rendering.DebugUI/Widget GetItem(System.String queryPath)

Disassembly:
	0x039ABE68 MOV X8, X31
	0x039ABE6C MADD X28, X28, X22, X24
	0x039ABE70 MOVZ W29, 0x1
	0x039ABE74 FMUL S14, S0, S1
	0x039ABE78 LDR W10, [X20 + 0x18]
	0x039ABE7C SUB W9, W29, 0x1
	0x039ABE80 SCVTF S0, W9
	0x039ABE84 CMP X8, X19
	0x039ABE88 FMUL S0, S0, S11
	0x039ABE8C ADD X23, X28, X8
	0x039ABE90 FCSEL S0, S12, S0, EQ
	0x039ABE94 CMP W23, W10
	0x039ABE98 B.CS 0x39AC3D0
	0x039ABE9C FDIV S0, S0, S8
	0x039ABEA0 ADD X0, X31, 0x2C
	0x039ABEA4 ADD X1, X31, 0x28
	0x039ABEA8 BL 0x3EB1BC0
	0x039ABEAC LDP S0, S1, [X31 + 0x28]
	0x039ABEB0 LDR V2, [X31 + 0x1]
	0x039ABEB4 SXTW X8, W29
	0x039ABEB8 MADD X9, X23, X25, X20
	0x039ABEBC FMUL S1, S13, S1
	0x039ABEC0 FMUL S0, S13, S0
	0x039ABEC4 CMP X8, X19
	0x039ABEC8 FMUL S1, S1, S2
	0x039ABECC FMUL S0, S0, S2
	0x039ABED0 ADD W29, W29, 0x1
	0x039ABED4 STP S0, S14, [X9 + 0x20]
	0x039ABED8 STR S1, [X9 + 0x28]
	0x039ABEDC B.LE 0x39ABE78
	0x039ABEE0 SXTW X28, W26
	0x039ABEE4 CMP X28, X27
	0x039ABEE8 B.LT 0x39ABE44
	0x039ABEEC LDR W8, [X20 + 0x18]
	0x039ABEF0 CBZ W8, 0x39AC3D0
	0x039ABEF4 ADRP X9, 0x748000
	0x039ABEF8 LDR X9, [X9 + 0x5A0]
	0x039ABEFC LDR V0, [X31 + 0x1]
	0x039ABF00 SUB W8, W8, 0x1
	0x039ABF04 MOVZ W10, 0xC
	0x039ABF08 LDR X9, [X9]
	0x039ABF0C FNEG S0, S0
	0x039ABF10 SXTW X8, W8
	0x039ABF14 MADD X8, X8, X10, X20
	0x039ABF18 LDR X9, [X9 + 0xB8]
	0x039ABF1C LDR V1, [X9 + 0x20]
	0x039ABF20 LDR V2, [X9 + 0x18]
	0x039ABF24 FMUL S1, S1, S0
	0x00000000 INVALID
	0x039ABF2C STR D0, [X8 + 0x20]
	0x039ABF30 STR S1, [X8 + 0x28]
	0x039ABF34 ADRP X8, 0x74A000
	0x039ABF38 LDR X8, [X8 + 0x9B0]
	0x039ABF3C LDR W1, [X20 + 0x18]
	0x039ABF40 LDR X0, [X8]
	0x039ABF44 BL 0x1C16D6C
	0x039ABF48 LDR X1, [X20 + 0x18]
	0x039ABF4C MOV X23, X0
	0x039ABF50 CMP W1, 0x1
	0x039ABF54 B.LT 0x39AC040
	0x039ABF58 ADRP X8, 0xFFFFFFFFFD13F000
	0x039ABF5C ADRP X25, 0x748000
	0x039ABF60 LDR V9, [X8 + 0x17C]
	0x039ABF64 LDR X25, [X25 + 0x5A8]
	0x039ABF68 MOV X28, X31
	0x039ABF6C AND X1, X1, 0x0
	0x039ABF70 ADD X29, X23, 0x28
	0x039ABF74 ADD X19, X20, 0x28
	0x039ABF78 ADRP X22, 0xA2D000
	0x039ABF7C MOVZ W24, 0x1
	0x039ABF80 ADRP X26, 0xA2D000
	0x039ABF84 CMP X28, W1, UXTW
	0x039ABF88 B.CS 0x39AC3D0
	0x039ABF8C LDUR V10, [X19 - 0x8]
	0x039ABF90 LDRB W8, [X22 + 0x785]
	0x039ABF94 LDR V11, [X19]
	0x039ABF98 CBNZ W8, 0x39ABFA8
	0x039ABF9C MOV X0, X25
	0x039ABFA0 BL 0x1C16CF4
	0x039ABFA4 STRB W24, [X22 + 0x785]
	0x039ABFA8 LDR X0, [X25]
	0x039ABFAC LDR W8, [X0 + 0xE0]
	0x039ABFB0 CBNZ W8, 0x39ABFB8
	0x039ABFB4 BL 0x1C16DFC
	0x00000000 INVALID
	0x039ABFBC FADDP S0, V0.2S

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0xA37000
	009 Move W8, [X21+3040]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x7A7000
	017 Move X0, [X0+2696]
	018 Call 0x1C17CF4
	019 Move X0, 0x7A7000
	020 Move X0, [X0+2704]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A7000
	023 Move X0, [X0+2712]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A7000
	026 Move X0, [X0+2720]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3040], W8
	030 Move [X31+8], X31
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move X0, [X20+48]
	034 Compare X0, 0
	035 JumpIfEqual {72}
	036 Move X8, 0x7A7000
	037 Move X8, [X8+2720]
	038 Move X23, 0x7A7000
	039 Move X22, 0x7A7000
	040 Move X1, [X8]
	041 Move X23, [X23+2704]
	042 Move X22, [X22+2696]
	043 Add X8, X31, 8
	044 Call List`1<Object>.GetEnumerator, X0
	045 Move X1, [X23]
	046 Add X0, X31, 8
	047 Call Enumerator<Object>.MoveNext, X0
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {59}
	052 Move X2, [X31+24]
	053 Move X0, X20
	054 Move X1, X19
	055 Call DebugManager.GetItem, X0, X1, X2
	056 Move X21, X0
	057 Compare X0, 0
	058 JumpIfEqual {45}
	059 Move X21, X31
	060 Move X1, [X22]
	061 Add X0, X31, 8
	062 Call Enumerator<Object>.Dispose, X0
	063 Move X0, X21
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X30, [X31+32]
	069 Move X23, [X31+40]
	070 Add X31, X31, 80
	071 Return X0
	072 Call 0x1C17F20
	073 Move X20, X0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X20
	076 Call 0x3EB2AD0
	077 Move X19, [X0]
	078 Call 0x3EB2AE0
	079 Move X1, [X22]
	080 Add X0, X31, 8
	081 Call Enumerator<Object>.Dispose, X0
	082 Compare X19, 0
	083 JumpIfNotEqual {86}
	084 Move X21, X31
	085 Move X19, X31
	086 Move X0, X19
	087 Call 0x1C17F18
	088 Move X20, X0
	089 Move X1, [X22]
	090 Add X0, X31, 8
	091 Call Enumerator<Object>.Dispose, X0
	092 Compare X19, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X20
	095 Call 0x1D2D690
	096 Move X0, X19
	097 Call 0x1C17F18
	098 Call 0x1991590

Method: UnityEngine.Rendering.DebugUI/Widget GetItem(System.String queryPath, UnityEngine.Rendering.DebugUI/IContainer container)

Disassembly:
	0x039ABFC0 FMUL S1, S11, S11
	0x039ABFC4 FADD S0, S1, S0
	0x039ABFC8 FSQRT S1, S0
	0x039ABFCC FCMP S1, S9
	0x039ABFD0 B.LE 0x39ABFE4
	0x039ABFD4 UNIMPLEMENTED
	0x00000000 INVALID
	0x039ABFDC FDIV S1, S11, S1
	0x039ABFE0 B 0x39AC014
	0x039ABFE4 LDRB W8, [X26 + 0x783]
	0x039ABFE8 CBNZ W8, 0x39ABFFC
	0x039ABFEC ADRP X0, 0x748000
	0x039ABFF0 LDR X0, [X0 + 0x5A0]
	0x039ABFF4 BL 0x1C16CF4
	0x039ABFF8 STRB W24, [X26 + 0x783]
	0x039ABFFC ADRP X8, 0x748000
	0x039AC000 LDR X8, [X8 + 0x5A0]
	0x039AC004 LDR X8, [X8]
	0x039AC008 LDR X8, [X8 + 0xB8]
	0x039AC00C LDR V0, [X8]
	0x039AC010 LDR V1, [X8 + 0x8]
	0x039AC014 CBZ X23, 0x39AC3D4
	0x039AC018 LDR W8, [X23 + 0x18]
	0x039AC01C CMP X28, X8
	0x039AC020 B.CS 0x39AC3D0
	0x039AC024 STUR D0, [X29 - 0x8]
	0x039AC028 STR S1, [X29], #0xC
	0x039AC02C LDR W1, [X20 + 0x18]
	0x039AC030 ADD X28, X28, 0x1
	0x039AC034 ADD X19, X19, 0xC
	0x039AC038 CMP X28, W1, SXTW
	0x039AC03C B.LT 0x39ABF84
	0x039AC040 ADRP X8, 0x7A1000
	0x039AC044 LDR X8, [X8 + 0xA88]
	0x039AC048 LDR X0, [X8]
	0x039AC04C BL 0x1C16D6C
	0x039AC050 ADRP X19, 0xA2F000
	0x039AC054 LDRB W8, [X19 + 0x7F6]
	0x039AC058 MOV X24, X0
	0x039AC05C CBNZ W8, 0x39AC074
	0x039AC060 ADRP X0, 0x74F000
	0x039AC064 LDR X0, [X0 + 0xF08]
	0x039AC068 BL 0x1C16CF4
	0x039AC06C MOVZ W8, 0x1
	0x039AC070 STRB W8, [X19 + 0x7F6]
	0x039AC074 LDR W26, [X31 + 0xC]
	0x039AC078 CBZ X24, 0x39AC3D4
	0x039AC07C LDR X8, [X24 + 0x18]
	0x039AC080 CBZ W8, 0x39AC3D0
	0x039AC084 ADRP X19, 0x74F000
	0x039AC088 LDR X19, [X19 + 0xF08]
	0x039AC08C ADRP X22, 0xA2D000
	0x039AC090 LDR X9, [X19]
	0x039AC094 LDR X9, [X9 + 0xB8]
	0x039AC098 LDR V0, [X9 + 0x10]
	0x039AC09C STR D0, [X24 + 0x20]
	0x039AC0A0 LDRB W9, [X22 + 0x78F]
	0x039AC0A4 CBNZ W9, 0x39AC0C4
	0x039AC0A8 ADRP X0, 0x74F000
	0x039AC0AC LDR X0, [X0 + 0xF08]
	0x039AC0B0 BL 0x1C16CF4
	0x039AC0B4 MOVZ W8, 0x1
	0x039AC0B8 STRB W8, [X22 + 0x78F]
	0x039AC0BC LDR X8, [X24 + 0x18]
	0x039AC0C0 CBZ W8, 0x39AC3D0
	0x039AC0C4 LDR X9, [X19]
	0x039AC0C8 LDR W19, [X31 + 0x8]
	0x039AC0CC MOV W28, W21
	0x039AC0D0 LDR X9, [X9 + 0xB8]
	0x039AC0D4 LDR V0, [X9]
	0x039AC0D8 MOV X9, INVALID
	0x039AC0DC ADD X8, X9, X8, 0x20, LSL
	0x039AC0E0 ADD X8, X24, X8, 0x1D, ASR
	0x039AC0E4 STR D0, [X8 + 0x20]
	0x039AC0E8 CBZ W26, 0x39AC158
	0x039AC0EC ADD W11, W26, 0x1
	0x039AC0F0 MOV X10, X31
	0x039AC0F4 MOV W8, W19
	0x039AC0F8 ORR X9, X31, 0x1
	0x039AC0FC UCVTF S0, W11
	0x039AC100 FMOV S1, 1
	0x039AC104 MADD X12, X10, X8, X9
	0x039AC108 ADD W10, W10, 0x1
	0x039AC10C SCVTF S2, W10
	0x039AC110 FDIV S2, S2, S0
	0x039AC114 MOV X11, X31
	0x039AC118 FSUB S2, S1, S2
	0x039AC11C LDR W14, [X24 + 0x18]
	0x039AC120 ADD X13, X12, X11
	0x039AC124 CMP W13, W14
	0x039AC128 B.CS 0x39AC3D0
	0x039AC12C SCVTF S3, W11
	0x039AC130 ADD W11, W11, 0x1
	0x039AC134 SXTW X11, W11
	0x039AC138 ADD X13, X24, X13, 0x3, LSL
	0x039AC13C FDIV S3, S3, S8
	0x039AC140 CMP X11, X28
	0x039AC144 STP S3, S2, [X13 + 0x20]
	0x039AC148 B.LE 0x39AC11C
	0x039AC14C SXTW X10, W10
	0x039AC150 CMP X10, X27
	0x039AC154 B.LT 0x39AC104
	0x039AC158 ADRP X9, 0x748000
	0x039AC15C LDR W8, [X20 + 0x18]
	0x039AC160 LDR X9, [X9 + 0xE58]
	0x039AC164 ADD W8, W8, W8, 0x1, LSL
	0x039AC168 LDR X0, [X9]
	0x039AC16C UBFM W1, W8, 0x1F, 0x1E
	0x039AC170 BL 0x1C16D6C
	0x039AC174 MOV X25, X0
	0x039AC178 CBZ W21, 0x39AC1E8
	0x039AC17C CBZ X25, 0x39AC3D4
	0x039AC180 LDR W8, [X25 + 0x18]
	0x039AC184 MOV W11, W31
	0x039AC188 MOVZ W9, 0x1
	0x039AC18C CMP W11, W8
	0x039AC190 B.CS 0x39AC3D0
	0x039AC194 MOV W10, W11
	0x039AC198 ADD W11, W11, 0x1
	0x039AC19C ADD W12, W9, 0x1
	0x039AC1A0 ADD X13, X25, W10, 0x2, SXTW
	0x039AC1A4 CMP W11, W8
	0x039AC1A8 STR W12, [X13 + 0x20]
	0x039AC1AC B.CS 0x39AC3D0
	0x039AC1B0 ADD X12, X25, W11, 0x2, SXTW
	0x039AC1B4 ADD W11, W11, 0x1
	0x039AC1B8 CMP W11, W8
	0x039AC1BC STR W9, [X12 + 0x20]
	0x039AC1C0 B.CS 0x39AC3D0
	0x039AC1C4 ADD W12, W10, 0x2
	0x039AC1C8 CMP X28, W9, SXTW
	0x039AC1CC ADD W9, W9, 0x1
	0x039AC1D0 ADD X12, X25, W12, 0x2, SXTW
	0x039AC1D4 ADD W11, W11, 0x1
	0x039AC1D8 STR W31, [X12 + 0x20]
	0x039AC1DC B.GT 0x39AC18C
	0x039AC1E0 ADD W11, W10, 0x3
	0x039AC1E4 B 0x39AC1EC
	0x039AC1E8 MOV W11, W31
	0x039AC1EC SUBS W8, W26, 0x1
	0x039AC1F0 B.EQ 0x39AC2D0
	0x039AC1F4 MOV W9, W31
	0x039AC1F8 MOVZ W10, 0x1
	0x039AC1FC CBZ W21, 0x39AC2C0
	0x039AC200 CBZ X25, 0x39AC3D4
	0x039AC204 LDR W12, [X25 + 0x18]
	0x039AC208 MOV W13, W10
	0x039AC20C MOV W14, W21
	0x039AC210 CMP W11, W12
	0x039AC214 B.CS 0x39AC3D0
	0x039AC218 MOV W15, W11
	0x039AC21C ADD W11, W11, 0x1
	0x039AC220 ADD X16, X25, W15, 0x2, SXTW
	0x039AC224 CMP W11, W12
	0x039AC228 STR W13, [X16 + 0x20]
	0x039AC22C B.CS 0x39AC3D0
	0x039AC230 ADD X17, X25, W11, 0x2, SXTW
	0x039AC234 ADD W11, W11, 0x1
	0x039AC238 ADD W16, W13, 0x1
	0x039AC23C CMP W11, W12
	0x039AC240 STR W16, [X17 + 0x20]
	0x039AC244 B.CS 0x39AC3D0
	0x039AC248 ADD W17, W15, 0x2
	0x039AC24C ADD W0, W21, W13
	0x039AC250 ADD W16, W11, 0x1
	0x039AC254 ADD W11, W0, 0x2
	0x039AC258 ADD X17, X25, W17, 0x2, SXTW
	0x039AC25C CMP W16, W12
	0x039AC260 STR W11, [X17 + 0x20]
	0x039AC264 B.CS 0x39AC3D0
	0x039AC268 ADD W17, W15, 0x3
	0x039AC26C ADD W16, W16, 0x1
	0x039AC270 ADD X17, X25, W17, 0x2, SXTW
	0x039AC274 CMP W16, W12
	0x039AC278 STR W13, [X17 + 0x20]
	0x039AC27C B.CS 0x39AC3D0
	0x039AC280 ADD W17, W15, 0x4
	0x039AC284 ADD W16, W16, 0x1
	0x039AC288 ADD X17, X25, W17, 0x2, SXTW
	0x039AC28C CMP W16, W12
	0x039AC290 STR W11, [X17 + 0x20]
	0x039AC294 B.CS 0x39AC3D0
	0x039AC298 ADD W11, W21, W13
	0x039AC29C ADD W17, W15, 0x5
	0x039AC2A0 ADD W11, W11, 0x1
	0x039AC2A4 ADD X17, X25, W17, 0x2, SXTW
	0x039AC2A8 SUBS W14, W14, 0x1
	0x039AC2AC ADD W13, W13, 0x1
	0x039AC2B0 STR W11, [X17 + 0x20]
	0x039AC2B4 ADD W11, W16, 0x1
	0x039AC2B8 B.NE 0x39AC210
	0x039AC2BC ADD W11, W15, 0x6
	0x039AC2C0 ADD W9, W9, 0x1
	0x039AC2C4 CMP W9, W8
	0x039AC2C8 ADD W10, W10, W19
	0x039AC2CC B.NE 0x39AC1FC
	0x039AC2D0 CBZ W21, 0x39AC340
	0x039AC2D4 CBZ X25, 0x39AC3D4
	0x039AC2D8 LDR W10, [X20 + 0x18]
	0x039AC2DC LDR W8, [X25 + 0x18]
	0x039AC2E0 MOVZ W12, 0x1
	0x039AC2E4 SUB W9, W10, 0x1
	0x039AC2E8 SUB W10, W10, 0x3
	0x039AC2EC CMP W11, W8
	0x039AC2F0 B.CS 0x39AC3D0
	0x039AC2F4 ADD W13, W11, 0x1
	0x039AC2F8 ADD X14, X25, W11, 0x2, SXTW
	0x039AC2FC CMP W13, W8
	0x039AC300 STR W9, [X14 + 0x20]
	0x039AC304 B.CS 0x39AC3D0
	0x039AC308 ADD X14, X25, W13, 0x2, SXTW
	0x039AC30C ADD W13, W13, 0x1
	0x039AC310 CMP W13, W8
	0x039AC314 STR W10, [X14 + 0x20]
	0x039AC318 B.CS 0x39AC3D0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xA37000
	011 Move W8, [X22+3041]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x7A7000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x749000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A6000
	026 Move X0, [X0+2792]
	027 Call 0x1C17CF4
	028 Move X0, 0x748000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move X0, 0x7A6000
	032 Move X0, [X0+2800]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3041], W8
	036 Compare X19, 0
	037 JumpIfEqual {187}
	038 Move X24, 0x7A6000
	039 Move X8, [X19]
	040 Move X24, [X24+2904]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X24]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X19
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X19
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {187}
	063 Move X8, 0x7A6000
	064 Move X8, [X8+2800]
	065 Move X23, 0x748000
	066 Move X1, [X8]
	067 Move X23, [X23+3584]
	068 Call 0x24995D8, X0
	069 Move X19, X0
	070 Compare X0, 0
	071 JumpIfEqual {188}
	072 Move X25, 0x748000
	073 Move X26, 0x7A6000
	074 Move X25, [X25+3608]
	075 Move X26, [X26+2792]
	076 Move X8, [X19]
	077 Move X1, [X25]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X19
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X19
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {148}
	101 Move X8, [X19]
	102 Move X1, [X26]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X19
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X19
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X22, X0
	123 Compare X0, 0
	124 JumpIfEqual {186}
	125 Move X0, [X22+56]
	126 Move X1, X20
	127 Move X2, X31
	128 Call String.op_Equality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {145}
	133 Move X1, [X24]
	134 Move X0, X22
	135 Call 0x1C17E00
	136 Move X2, X0
	137 Compare X0, 0
	138 JumpIfEqual {76}
	139 Move X0, X21
	140 Move X1, X20
	141 Call DebugManager.GetItem, X0, X1, X2
	142 Move X22, X0
	143 Compare X0, 0
	144 JumpIfEqual {76}
	145 Move X20, X31
	146 Compare X19, 0
	147 JumpIfNotEqual {152}
	148 Move X20, X31
	149 Move X22, X31
	150 Compare X19, 0
	151 JumpIfEqual {173}
	152 Move X8, [X19]
	153 Move X1, [X23]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X19
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X19
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Compare X20, 0
	174 JumpIfNotEqual {189}
	175 Move X0, X22
	176 Move X20, [X31+64]
	177 Move X19, [X31+72]
	178 Move X22, [X31+48]
	179 Move X21, [X31+56]
	180 Move X24, [X31+32]
	181 Move X23, [X31+40]
	182 Move X26, [X31+16]
	183 Move X25, [X31+24]
	184 Move X30, [X31+80]
	185 Return X0
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Move X0, X20
	190 Call 0x1C17F18
	191 Move X21, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X0, X21
	194 Call 0x3EB2AD0
	195 Move X20, [X0]
	196 Call 0x3EB2AE0
	197 Move X20, X31
	198 Move X21, X0
	199 Compare X19, 0
	200 JumpIfEqual {222}
	201 Move X8, [X19]
	202 Move X1, [X23]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Compare X9, 0
	205 JumpIfEqual {212}
	206 Move X10, [X8+176]
	207 Add X10, X10, 8
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Subtract X9, X9, 1
	211 Add X10, X10, 16
	212 Move X0, X19
	213 Move W2, W31
	214 Call 0x1C5D788
	215 NotImplemented "Instruction LDRSW not yet implemented."
	216 Add X8, X8, X9
	217 Add X0, X8, 312
	218 Move X8, [X0]
	219 Move X1, [X0+8]
	220 Move X0, X19
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Compare X20, 0
	223 JumpIfNotEqual {226}
	224 Move X0, X21
	225 Call 0x1D2D690
	226 Move X0, X20
	227 Call 0x1C17F18
	228 Call 0x1991590

Method: System.Void add_windowStateChanged(System.Action`2<UnityEngine.Rendering.DebugManager/UIMode, System.Boolean> value)

Disassembly:
	0x039AC31C ADD W11, W11, 0x2
	0x039AC320 ADD W14, W10, 0x1
	0x039AC324 ADD X11, X25, W11, 0x2, SXTW
	0x039AC328 SUB W10, W10, 0x1
	0x039AC32C CMP X28, W12, SXTW
	0x039AC330 ADD W12, W12, 0x1
	0x039AC334 STR W14, [X11 + 0x20]
	0x039AC338 ADD W11, W13, 0x1
	0x039AC33C B.GT 0x39AC2EC
	0x039AC340 LDR X19, [X31]
	0x039AC344 LDR X0, [X19]
	0x039AC348 CBZ X0, 0x39AC3D4
	0x039AC34C MOV X1, X20
	0x039AC350 MOV X2, X31
	0x039AC354 BL 0x3C17F08
	0x039AC358 LDR X0, [X19]
	0x039AC35C CBZ X0, 0x39AC3D4
	0x039AC360 MOV X1, X23
	0x039AC364 MOV X2, X31
	0x039AC368 BL 0x3C17FB4
	0x039AC36C LDR X0, [X19]
	0x039AC370 CBZ X0, 0x39AC3D4
	0x039AC374 MOV X1, X24
	0x039AC378 MOV X2, X31
	0x039AC37C BL 0x3C1810C
	0x039AC380 LDR X0, [X19]
	0x039AC384 CBZ X0, 0x39AC3D4
	0x039AC388 MOV X1, X25
	0x039AC38C MOV X2, X31
	0x039AC390 BL 0x3C18FF0
	0x039AC394 LDR X0, [X19]
	0x039AC398 CBZ X0, 0x39AC3D4
	0x039AC39C LDP X20, X19, [X31 + 0xC0]
	0x039AC3A0 LDP X22, X21, [X31 + 0xB0]
	0x039AC3A4 LDP X24, X23, [X31 + 0xA0]
	0x039AC3A8 LDP X26, X25, [X31 + 0x90]
	0x039AC3AC LDP X28, X27, [X31 + 0x80]
	0x039AC3B0 LDP X29, X30, [X31 + 0x70]
	0x039AC3B4 LDP D9, D8, [X31 + 0x60]
	0x039AC3B8 LDP D11, D10, [X31 + 0x50]
	0x039AC3BC LDP D13, D12, [X31 + 0x40]
	0x039AC3C0 LDR V14, [X31 + 0x30]
	0x039AC3C4 MOV X1, X31
	0x039AC3C8 ADD X31, X31, 0xD0
	0x039AC3CC B 0x3C19CD4
	0x039AC3D0 BL 0x1C16F28
	0x039AC3D4 BL 0x1C16F20
	0x039AC3D8 SUB X31, X31, 0xA0
	0x039AC3DC STP D15, D14, [X31 + 0x30]
	0x039AC3E0 STP D13, D12, [X31 + 0x40]
	0x039AC3E4 STP D11, D10, [X31 + 0x50]
	0x039AC3E8 STP D9, D8, [X31 + 0x60]
	0x039AC3EC STP X30, X23, [X31 + 0x70]
	0x039AC3F0 STP X22, X21, [X31 + 0x80]
	0x039AC3F4 STP X20, X19, [X31 + 0x90]
	0x039AC3F8 ADRP X20, 0xA35000
	0x039AC3FC LDRB W8, [X20 + 0xBF2]
	0x039AC400 MOV V9.16B, V2.16B
	0x039AC404 MOV V8.16B, V1.16B
	0x039AC408 MOV V10.16B, V0.16B
	0x039AC40C MOV X19, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA36000
	010 Move X24, 0x7A5000
	011 Move W8, [X20+3042]
	012 Move X24, [X24+1912]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x7A6000
	019 Move X0, [X0+2912]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A5000
	022 Move X0, [X0+1912]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3042], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x7A6000
	034 Move X20, [X8+8]
	035 Move X25, [X25+2912]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Combine, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 8
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void remove_windowStateChanged(System.Action`2<UnityEngine.Rendering.DebugManager/UIMode, System.Boolean> value)

Disassembly:
	0x039AC410 TBNZ X8, 0x0, 0x39AC44C
	0x039AC414 ADRP X0, 0x748000
	0x039AC418 LDR X0, [X0 + 0xE58]
	0x039AC41C BL 0x1C16CF4
	0x039AC420 ADRP X0, 0x7A5000
	0x039AC424 LDR X0, [X0 + 0xBB8]
	0x039AC428 BL 0x1C16CF4
	0x039AC42C ADRP X0, 0x7A1000
	0x039AC430 LDR X0, [X0 + 0xA88]
	0x039AC434 BL 0x1C16CF4
	0x039AC438 ADRP X0, 0x749000
	0x039AC43C LDR X0, [X0 + 0x9B0]
	0x039AC440 BL 0x1C16CF4
	0x039AC444 MOVZ W8, 0x1
	0x039AC448 STRB W8, [X20 + 0xBF2]
	0x039AC44C LDR X0, [X19]
	0x039AC450 CBZ X0, 0x39ACB28
	0x039AC454 ADRP X22, 0x749000
	0x039AC458 LDR X22, [X22 + 0x9B0]
	0x039AC45C MOV X1, X31
	0x039AC460 BL 0x3C19C94
	0x039AC464 LDR X0, [X22]
	0x039AC468 MOVZ W1, 0x18
	0x039AC46C BL 0x1C16D6C
	0x039AC470 CBZ X0, 0x39ACB28
	0x039AC474 LDR W8, [X0 + 0x18]
	0x039AC478 MOV X20, X0
	0x039AC47C CBZ W8, 0x39ACB24
	0x039AC480 FMOV S3, -0.5
	0x039AC484 FMOV S4, 0.5
	0x039AC488 CMP W8, 0x1
	0x039AC48C FMUL S1, S10, S3
	0x039AC490 FMUL S5, S8, S3
	0x039AC494 FMUL S0, S9, S4
	0x039AC498 STP S1, S5, [X20 + 0x20]
	0x039AC49C STR S0, [X20 + 0x28]
	0x039AC4A0 B.EQ 0x39ACB24
	0x039AC4A4 FMUL S2, S10, S4
	0x039AC4A8 CMP W8, 0x2
	0x039AC4AC STP S2, S5, [X20 + 0x2C]
	0x039AC4B0 STR S0, [X20 + 0x34]
	0x039AC4B4 B.LS 0x39ACB24
	0x039AC4B8 FMUL S3, S9, S3
	0x039AC4BC CMP W8, 0x3
	0x039AC4C0 STP S2, S5, [X20 + 0x38]
	0x039AC4C4 STR S3, [X20 + 0x40]
	0x039AC4C8 B.EQ 0x39ACB24
	0x039AC4CC CMP W8, 0x4
	0x039AC4D0 STP S1, S5, [X20 + 0x44]
	0x039AC4D4 STR S3, [X20 + 0x4C]
	0x039AC4D8 B.LS 0x39ACB24
	0x039AC4DC FMUL S4, S8, S4
	0x039AC4E0 CMP W8, 0x5
	0x039AC4E4 STP S1, S4, [X20 + 0x50]
	0x039AC4E8 STR S3, [X20 + 0x58]
	0x039AC4EC B.EQ 0x39ACB24
	0x039AC4F0 CMP W8, 0x6
	0x039AC4F4 STP S1, S4, [X20 + 0x5C]
	0x039AC4F8 STR S0, [X20 + 0x64]
	0x039AC4FC B.LS 0x39ACB24
	0x039AC500 CMP W8, 0x7

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA36000
	010 Move X24, 0x7A5000
	011 Move W8, [X20+3043]
	012 Move X24, [X24+1912]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x7A6000
	019 Move X0, [X0+2912]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A5000
	022 Move X0, [X0+1912]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3043], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x7A6000
	034 Move X20, [X8+8]
	035 Move X25, [X25+2912]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Remove, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 8
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Boolean get_displayEditorUI()

Disassembly:
	0x039AC504 STP S1, S5, [X20 + 0x68]
	0x039AC508 STR S0, [X20 + 0x70]
	0x039AC50C B.EQ 0x39ACB24
	0x039AC510 CMP W8, 0x8
	0x039AC514 STP S1, S5, [X20 + 0x74]
	0x039AC518 STR S3, [X20 + 0x7C]
	0x039AC51C B.LS 0x39ACB24

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+128]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+20]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_displayEditorUI(System.Boolean value)

Disassembly:
	0x039AC520 CMP W8, 0x9
	0x039AC524 STP S1, S4, [X20 + 0x80]
	0x039AC528 STR S0, [X20 + 0x88]
	0x039AC52C B.EQ 0x39ACB24
	0x039AC530 CMP W8, 0xA
	0x039AC534 STP S2, S4, [X20 + 0x8C]
	0x039AC538 STR S0, [X20 + 0x94]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+128]
	003 Compare X0, 0
	004 JumpIfEqual {7}
	005 And W1, W1, 1
	006 Move X30, [X31+16]
	007 Call 0x1C17F20

Method: System.Boolean get_enableRuntimeUI()

Disassembly:
	0x039AC5D0 CMP W8, 0x14
	0x039AC5D4 STR S2, [X20 + 0x104]

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void set_enableRuntimeUI(System.Boolean value)

Disassembly:
	0x039AC5D8 STR S5, [X20 + 0x108]
	0x039AC5DC STR S0, [X20 + 0x10C]
	0x039AC5E0 B.LS 0x39ACB24
	0x039AC5E4 CMP W8, 0x15
	0x039AC5E8 STR S1, [X20 + 0x110]
	0x039AC5EC STR S4, [X20 + 0x114]
	0x039AC5F0 STR S3, [X20 + 0x118]
	0x039AC5F4 B.EQ 0x39ACB24
	0x039AC5F8 CMP W8, 0x16

ISIL:
	001 Move W9, [X0+136]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move [X0+136], W8
	006 Move W0, W8
	007 Move X1, X31
	008 Call DebugUpdater.SetEnabled, X0
	009 Return 

Method: System.Boolean get_displayRuntimeUI()

Disassembly:
	0x0399E46C BL 0x1C16CF4
	0x0399E470 MOVZ W8, 0x1
	0x0399E474 STRB W8, [X25 + 0xB66]
	0x0399E478 LDR X0, [X24]
	0x0399E47C STR W31, [X31 + 0xC]
	0x0399E480 LDR W8, [X0 + 0xE0]
	0x0399E484 CBNZ W8, 0x399E48C
	0x0399E488 BL 0x1C16DFC
	0x0399E48C MOV W0, W23
	0x0399E490 MOV W1, W21
	0x0399E494 MOV X2, X31
	0x0399E498 BL 0x337EE94
	0x0399E49C MOV W23, W0
	0x0399E4A0 ADD X1, X31, 0xC
	0x0399E4A4 MOV W0, W19
	0x0399E4A8 BL 0x399DBA0
	0x0399E4AC CBZ X22, 0x399E52C
	0x0399E4B0 CBZ W23, 0x399E52C
	0x0399E4B4 LDR W24, [X31 + 0xC]
	0x0399E4B8 LDR X8, [X20]
	0x0399E4BC ADD W9, W24, W24, 0x1, LSL
	0x0399E4C0 ADD W1, W9, W23
	0x0399E4C4 CBZ X8, 0x399E4D4
	0x0399E4C8 LDR W8, [X20 + 0x8]
	0x0399E4CC CMP W8, W1
	0x0399E4D0 B.GE 0x399E4E8
	0x0399E4D4 ADRP X8, 0x7B3000
	0x0399E4D8 LDR X8, [X8 + 0x290]
	0x0399E4DC MOV X0, X20
	0x0399E4E0 LDR X2, [X8]
	0x0399E4E4 BL 0x21722E0
	0x0399E4E8 ADRP X25, 0x7B3000
	0x0399E4EC LDR X25, [X25 + 0x298]
	0x0399E4F0 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA44000
	006 Move X20, 0x756000
	007 Move W8, [X21+3044]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x756000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3044], W8
	019 Move X0, [X20]
	020 Move X20, [X19+96]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {43}
	033 Move X0, [X19+96]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call GameObject.get_activeInHierarchy, X0
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void set_displayRuntimeUI(System.Boolean value)

Disassembly:
	0x039AC5FC STR S2, [X20 + 0x11C]
	0x039AC600 STR S4, [X20 + 0x120]
	0x039AC604 STR S3, [X20 + 0x124]
	0x039AC608 B.LS 0x39ACB24
	0x039AC60C CMP W8, 0x17
	0x039AC610 STR S2, [X20 + 0x128]
	0x039AC614 STR S4, [X20 + 0x12C]
	0x039AC618 STR S0, [X20 + 0x130]
	0x039AC61C B.EQ 0x39ACB24
	0x039AC620 STR S1, [X20 + 0x134]
	0x039AC624 STR S4, [X20 + 0x138]
	0x039AC628 STR S0, [X20 + 0x13C]
	0x039AC62C ADRP X21, 0xA2C000
	0x039AC630 LDRB W8, [X21 + 0x786]
	0x039AC634 CBNZ W8, 0x39AC64C
	0x039AC638 ADRP X0, 0x747000
	0x039AC63C LDR X0, [X0 + 0x5A0]
	0x039AC640 BL 0x1C16CF4
	0x039AC644 MOVZ W8, 0x1
	0x039AC648 STRB W8, [X21 + 0x786]
	0x039AC64C ADRP X21, 0x747000
	0x039AC650 LDR X21, [X21 + 0x5A0]
	0x039AC654 ADRP X23, 0xA2C000
	0x039AC658 LDRB W9, [X23 + 0xABD]
	0x039AC65C LDR X8, [X21]
	0x039AC660 LDR X8, [X8 + 0xB8]
	0x039AC664 LDP S10, S9, [X8 + 0x18]
	0x039AC668 LDR V8, [X8 + 0x20]
	0x039AC66C CBNZ W9, 0x39AC688
	0x039AC670 MOV X0, X21
	0x039AC674 BL 0x1C16CF4
	0x039AC678 LDR X8, [X21]
	0x039AC67C MOVZ W9, 0x1
	0x039AC680 STRB W9, [X23 + 0xABD]
	0x039AC684 LDR X8, [X8 + 0xB8]
	0x039AC688 ADRP X23, 0xA2C000
	0x039AC68C LDP S12, S13, [X8 + 0x24]
	0x039AC690 LDRB W9, [X23 + 0xA1F]
	0x039AC694 LDR V14, [X8 + 0x2C]
	0x039AC698 CBNZ W9, 0x39AC6B4
	0x039AC69C MOV X0, X21
	0x039AC6A0 BL 0x1C16CF4
	0x039AC6A4 LDR X8, [X21]
	0x039AC6A8 MOVZ W9, 0x1
	0x039AC6AC STRB W9, [X23 + 0xA1F]
	0x039AC6B0 LDR X8, [X8 + 0xB8]
	0x039AC6B4 LDR V1, [X8 + 0x48]
	0x039AC6B8 LDR V0, [X8 + 0x4C]
	0x039AC6BC ADRP X23, 0xA2C000
	0x039AC6C0 LDRB W9, [X23 + 0xDDE]
	0x039AC6C4 STP S0, S1, [X31 + 0x1C]
	0x039AC6C8 LDR V0, [X8 + 0x50]
	0x039AC6CC STR S0, [X31 + 0x18]
	0x039AC6D0 CBNZ W9, 0x39AC6EC
	0x039AC6D4 MOV X0, X21
	0x039AC6D8 BL 0x1C16CF4
	0x039AC6DC LDR X8, [X21]
	0x039AC6E0 MOVZ W9, 0x1
	0x039AC6E4 STRB W9, [X23 + 0xDDE]
	0x039AC6E8 LDR X8, [X8 + 0xB8]
	0x039AC6EC LDR V1, [X8 + 0x54]
	0x039AC6F0 LDR V0, [X8 + 0x58]
	0x039AC6F4 ADRP X23, 0xA2C000
	0x039AC6F8 LDRB W9, [X23 + 0xB6F]
	0x039AC6FC STP S0, S1, [X31 + 0x28]
	0x039AC700 LDR V0, [X8 + 0x5C]
	0x039AC704 STR S0, [X31 + 0x24]
	0x039AC708 CBNZ W9, 0x39AC724
	0x039AC70C MOV X0, X21
	0x039AC710 BL 0x1C16CF4
	0x039AC714 LDR X8, [X21]
	0x039AC718 MOVZ W9, 0x1
	0x039AC71C STRB W9, [X23 + 0xB6F]
	0x039AC720 LDR X8, [X8 + 0xB8]
	0x039AC724 ADRP X23, 0xA2C000
	0x039AC728 STP S10, S9, [X31 + 0x8]
	0x039AC72C STR S8, [X31 + 0x10]
	0x039AC730 LDP S15, S8, [X8 + 0x30]
	0x039AC734 LDRB W9, [X23 + 0xB70]
	0x039AC738 LDR V9, [X8 + 0x38]
	0x039AC73C CBNZ W9, 0x39AC758
	0x039AC740 MOV X0, X21
	0x039AC744 BL 0x1C16CF4
	0x039AC748 LDR X8, [X21]
	0x039AC74C MOVZ W9, 0x1
	0x039AC750 STRB W9, [X23 + 0xB70]
	0x039AC754 LDR X8, [X8 + 0xB8]
	0x039AC758 LDR V0, [X8 + 0x44]
	0x039AC75C LDR X0, [X22]
	0x039AC760 LDP S10, S11, [X8 + 0x3C]
	0x039AC764 MOVZ W1, 0x18
	0x039AC768 STR S0, [X31 + 0x14]
	0x039AC76C BL 0x1C16D6C
	0x039AC770 CBZ X0, 0x39ACB28
	0x039AC774 LDR W8, [X0 + 0x18]
	0x039AC778 MOV X21, X0
	0x039AC77C CBZ W8, 0x39ACB24
	0x039AC780 CMP W8, 0x1
	0x039AC784 STP S12, S13, [X21 + 0x20]
	0x039AC788 STR S14, [X21 + 0x28]
	0x039AC78C B.EQ 0x39ACB24
	0x039AC790 CMP W8, 0x2
	0x039AC794 STP S12, S13, [X21 + 0x2C]
	0x039AC798 STR S14, [X21 + 0x34]
	0x039AC79C B.LS 0x39ACB24
	0x039AC7A0 CMP W8, 0x3
	0x039AC7A4 STP S12, S13, [X21 + 0x38]
	0x039AC7A8 STR S14, [X21 + 0x40]
	0x039AC7AC B.EQ 0x39ACB24
	0x039AC7B0 CMP W8, 0x4
	0x039AC7B4 STP S12, S13, [X21 + 0x44]
	0x039AC7B8 STR S14, [X21 + 0x4C]
	0x039AC7BC B.LS 0x39ACB24
	0x039AC7C0 CMP W8, 0x5
	0x039AC7C4 STP S15, S8, [X21 + 0x50]
	0x039AC7C8 STR S9, [X21 + 0x58]
	0x039AC7CC B.EQ 0x39ACB24
	0x039AC7D0 CMP W8, 0x6
	0x039AC7D4 STP S15, S8, [X21 + 0x5C]
	0x039AC7D8 STR S9, [X21 + 0x64]
	0x039AC7DC B.LS 0x39ACB24
	0x039AC7E0 CMP W8, 0x7
	0x039AC7E4 STP S15, S8, [X21 + 0x68]
	0x039AC7E8 STR S9, [X21 + 0x70]
	0x039AC7EC B.EQ 0x39ACB24
	0x039AC7F0 CMP W8, 0x8
	0x039AC7F4 STP S15, S8, [X21 + 0x74]
	0x039AC7F8 STR S9, [X21 + 0x7C]
	0x039AC7FC B.LS 0x39ACB24
	0x039AC800 LDP S4, S3, [X31 + 0x1C]
	0x039AC804 LDR V5, [X31 + 0x18]
	0x039AC808 LDP S1, S0, [X31 + 0x28]
	0x039AC80C LDR V2, [X31 + 0x24]
	0x039AC810 CMP W8, 0x9
	0x039AC814 STP S3, S4, [X21 + 0x80]
	0x039AC818 STR S5, [X21 + 0x88]
	0x039AC81C B.EQ 0x39ACB24
	0x039AC820 CMP W8, 0xA
	0x039AC824 STP S3, S4, [X21 + 0x8C]
	0x039AC828 STR S5, [X21 + 0x94]
	0x039AC82C B.LS 0x39ACB24
	0x039AC830 CMP W8, 0xB
	0x039AC834 STP S3, S4, [X21 + 0x98]
	0x039AC838 STR S5, [X21 + 0xA0]
	0x039AC83C B.EQ 0x39ACB24
	0x039AC840 CMP W8, 0xC
	0x039AC844 STP S3, S4, [X21 + 0xA4]
	0x039AC848 STR S5, [X21 + 0xAC]
	0x039AC84C B.LS 0x39ACB24
	0x039AC850 CMP W8, 0xD
	0x039AC854 STP S0, S1, [X21 + 0xB0]
	0x039AC858 STR S2, [X21 + 0xB8]
	0x039AC85C B.EQ 0x39ACB24
	0x039AC860 CMP W8, 0xE
	0x039AC864 STP S0, S1, [X21 + 0xBC]
	0x039AC868 STR S2, [X21 + 0xC4]
	0x039AC86C B.LS 0x39ACB24
	0x039AC870 CMP W8, 0xF
	0x039AC874 STP S0, S1, [X21 + 0xC8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xA36000
	008 Move W8, [X21+3045]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x770000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A6000
	019 Move X0, [X0+2920]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A6000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move X0, 0x7A6000
	025 Move X0, [X0+2744]
	026 Call 0x1C17CF4
	027 Move X0, 0x748000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x7A6000
	031 Move X0, [X0+2752]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A6000
	034 Move X0, [X0+2936]
	035 Call 0x1C17CF4
	036 Move X0, 0x7A6000
	037 Move X0, [X0+2944]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3045], W8
	041 Move X22, 0x748000
	042 Move X22, [X22+1432]
	043 Move TEMP, X20
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {131}
	047 Move X8, 0x7A6000
	048 Move X9, 0x7A6000
	049 Move X8, [X8+2944]
	050 Move X9, [X9+2752]
	051 Move X23, 0x7A6000
	052 Move X0, [X8]
	053 Move X1, [X9]
	054 Move X23, [X23+2744]
	055 Call 0x2242FB8, X0
	056 Move X8, [X22]
	057 Move X21, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X1, [X23]
	064 Move X0, X21
	065 Call 0x222E35C, X0
	066 Compare X0, 0
	067 JumpIfEqual {191}
	068 Move X1, X31
	069 Call Component.get_gameObject, X0
	070 Move [X19+96], X0
	071 Compare X0, 0
	072 JumpIfEqual {191}
	073 Move X8, 0x7A6000
	074 Move X8, [X8+2936]
	075 Move X2, X31
	076 Move X1, [X8]
	077 Call Object.set_name, X0, X1
	078 Move X0, [X19+96]
	079 Compare X0, 0
	080 JumpIfEqual {191}
	081 Move X1, X31
	082 Call GameObject.get_transform, X0
	083 Move X23, 0xA2D000
	084 Move W8, [X23+1923]
	085 Move X21, X0
	086 Compare W8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, 0x748000
	089 Move X0, [X0+1440]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X23+1923], W8
	093 Compare X21, 0
	094 JumpIfEqual {191}
	095 Move X8, 0x748000
	096 Move X8, [X8+1440]
	097 Move X0, X21
	098 Move X1, X31
	099 Move X8, [X8]
	100 Move X8, [X8+184]
	101 Move S1, [X8+4]
	102 Move S2, [X8+8]
	103 Move V0, [X8]
	104 Call Transform.set_localPosition, X0, X1
	105 Move X0, [X19+96]
	106 Compare X0, 0
	107 JumpIfEqual {191}
	108 Move X8, 0x7A6000
	109 Move X8, [X8+2928]
	110 Move X1, [X8]
	111 Call 0x21E62E4, X0
	112 Move X8, [X19+96]
	113 Move [X19+104], X0
	114 Compare X8, 0
	115 JumpIfEqual {191}
	116 Move X9, 0x7A6000
	117 Move X9, [X9+2920]
	118 Move X0, X8
	119 Move X1, [X9]
	120 Call 0x21E62E4, X0
	121 Compare X0, 0
	122 JumpIfEqual {191}
	123 Move W8, 1
	124 Move [X0+32], W8
	125 Move X0, [X19+96]
	126 Compare X0, 0
	127 JumpIfEqual {191}
	128 Move W1, 1
	129 Move X2, X31
	130 Call GameObject.SetActive, X0, X1
	131 Move X8, 0x770000
	132 Move X8, [X8+2296]
	133 Move X23, X19
	134 Add X23, X23, 96
	135 Move X21, [X23]
	136 Move X0, [X8]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move X0, X21
	142 Move X1, X31
	143 Call CoreUtils.Destroy, X0
	144 Move [X23], X31
	145 Move [X23+8], X31
	146 Move X8, [X19+56]
	147 Compare X8, 0
	148 JumpIfEqual {191}
	149 Move X9, [X8+24]
	150 Move X0, [X8+64]
	151 Move X2, [X8+40]
	152 And W20, W20, 1
	153 Move W1, W20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move W0, W20
	156 Move X1, X31
	157 Call DebugUpdater.HandleInternalEventSystemComponents, X0
	158 Move X0, [X22]
	159 Move X20, [X19+144]
	160 Move X21, [X19+96]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X21
	166 Move X1, X31
	167 Move X2, X31
	168 Call Object.op_Inequality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {178}
	173 Move X0, [X19+96]
	174 Compare X0, 0
	175 JumpIfEqual {191}
	176 Move X1, X31
	177 Call GameObject.get_activeInHierarchy, X0
	178 Move W0, W31
	179 Compare X20, 0
	180 JumpIfEqual {191}
	181 And W1, W0, 1
	182 Move X0, X20
	183 Move X20, [X31+32]
	184 Move X19, [X31+40]
	185 Move X22, [X31+16]
	186 Move X21, [X31+24]
	187 Move X30, [X31+48]
	188 Move X23, [X31+56]
	189 Call UIState.set_open, X0, X1
	190 Return 
	191 Call 0x1C17F20

Method: System.Boolean get_displayPersistentRuntimeUI()

Disassembly:
	0x039AA4AC LDR X2, [X8]
	0x039AA4B0 LDP X22, X21, [X31 + 0x10]
	0x039AA4B4 LDR X30, [X31], #0x30
	0x039AA4B8 B 0x301C7DC
	0x039AA4BC BL 0x1C16F20
	0x039AA4C0 MOV X1, X31
	0x039AA4C4 B 0x33BDD8C
	0x039AA4C8 SUB X31, X31, 0x50
	0x039AA4CC STP X30, X23, [X31 + 0x20]
	0x039AA4D0 STP X22, X21, [X31 + 0x30]
	0x039AA4D4 STP X20, X19, [X31 + 0x40]
	0x039AA4D8 ADRP X21, 0xA37000
	0x039AA4DC LDRB W8, [X21 + 0xBDC]
	0x039AA4E0 MOV X20, X1
	0x039AA4E4 MOV X19, X0
	0x039AA4E8 TBNZ X8, 0x0, 0x39AA53C
	0x039AA4EC ADRP X0, 0x7A7000
	0x039AA4F0 LDR X0, [X0 + 0x140]
	0x039AA4F4 BL 0x1C16CF4
	0x039AA4F8 ADRP X0, 0x7A7000
	0x039AA4FC LDR X0, [X0 + 0x148]
	0x039AA500 BL 0x1C16CF4
	0x039AA504 ADRP X0, 0x7A7000
	0x039AA508 LDR X0, [X0 + 0xA88]
	0x039AA50C BL 0x1C16CF4
	0x039AA510 ADRP X0, 0x7A7000
	0x039AA514 LDR X0, [X0 + 0xA90]
	0x039AA518 BL 0x1C16CF4
	0x039AA51C ADRP X0, 0x7A7000
	0x039AA520 LDR X0, [X0 + 0xA98]
	0x039AA524 BL 0x1C16CF4
	0x039AA528 ADRP X0, 0x7A7000
	0x039AA52C LDR X0, [X0 + 0xAA0]
	0x039AA530 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA38000
	006 Move X20, 0x74A000
	007 Move W8, [X21+3046]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x74A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3046], W8
	019 Move X0, [X20]
	020 Move X20, [X19+120]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {43}
	033 Move X0, [X19+112]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call GameObject.get_activeInHierarchy, X0
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void set_displayPersistentRuntimeUI(System.Boolean value)

Disassembly:
	0x039AC878 STR S2, [X21 + 0xD0]
	0x039AC87C B.EQ 0x39ACB24
	0x039AC880 CMP W8, 0x10
	0x039AC884 STP S0, S1, [X21 + 0xD4]
	0x039AC888 STR S2, [X21 + 0xDC]
	0x039AC88C B.LS 0x39ACB24
	0x039AC890 LDR V0, [X31 + 0x14]
	0x039AC894 CMP W8, 0x11
	0x039AC898 STP S10, S11, [X21 + 0xE0]
	0x039AC89C STR S0, [X21 + 0xE8]
	0x039AC8A0 B.EQ 0x39ACB24
	0x039AC8A4 CMP W8, 0x12
	0x039AC8A8 STP S10, S11, [X21 + 0xEC]
	0x039AC8AC STR S0, [X21 + 0xF4]
	0x039AC8B0 B.LS 0x39ACB24
	0x039AC8B4 CMP W8, 0x13
	0x039AC8B8 STP S10, S11, [X21 + 0xF8]
	0x039AC8BC STR S0, [X21 + 0x100]
	0x039AC8C0 B.EQ 0x39ACB24
	0x039AC8C4 CMP W8, 0x14
	0x039AC8C8 STR S10, [X21 + 0x104]
	0x039AC8CC STR S11, [X21 + 0x108]
	0x039AC8D0 STR S0, [X21 + 0x10C]
	0x039AC8D4 B.LS 0x39ACB24
	0x039AC8D8 LDP S2, S1, [X31 + 0x8]
	0x039AC8DC LDR V0, [X31 + 0x10]
	0x039AC8E0 CMP W8, 0x15
	0x039AC8E4 STR S2, [X21 + 0x110]
	0x039AC8E8 STR S1, [X21 + 0x114]
	0x039AC8EC STR S0, [X21 + 0x118]
	0x039AC8F0 B.EQ 0x39ACB24
	0x039AC8F4 CMP W8, 0x16

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA36000
	006 Move W8, [X21+3047]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {24}
	013 Move TEMP, X20
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {33}
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call DebugManager.EnsurePersistentCanvas, X0
	023 Return 
	024 Move X0, 0x770000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3047], W8
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {17}
	033 Move X8, 0x770000
	034 Move X8, [X8+2296]
	035 Add X19, X19, 112
	036 Move X20, [X19]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Call CoreUtils.Destroy, X0
	045 Move [X19], X31
	046 Move [X19+8], X31
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: System.Void ToggleEditorUI(System.Boolean open)

Disassembly:
	0x039AC8F8 STR S2, [X21 + 0x11C]
	0x039AC8FC STR S1, [X21 + 0x120]
	0x039AC900 STR S0, [X21 + 0x124]
	0x039AC904 B.LS 0x39ACB24
	0x039AC908 CMP W8, 0x17
	0x039AC90C STR S2, [X21 + 0x128]
	0x039AC910 STR S1, [X21 + 0x12C]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+128]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 And W1, W1, 1
	006 Move X30, [X31+16]
	007 Call UIState.set_open, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039AC914 STR S0, [X21 + 0x130]
	0x039AC918 B.EQ 0x39ACB24
	0x039AC91C ADRP X8, 0x7A1000
	0x039AC920 LDR X8, [X8 + 0xA88]
	0x039AC924 STR S2, [X21 + 0x134]
	0x039AC928 STR S1, [X21 + 0x138]
	0x039AC92C STR S0, [X21 + 0x13C]
	0x039AC930 LDR X0, [X8]
	0x039AC934 MOVZ W1, 0x18
	0x039AC938 BL 0x1C16D6C
	0x039AC93C CBZ X0, 0x39ACB28
	0x039AC940 LDR W8, [X0 + 0x18]
	0x039AC944 MOV X22, X0
	0x039AC948 CBZ W8, 0x39ACB24
	0x039AC94C FMOV V0.2S, 0x0
	0x039AC950 CMP W8, 0x1
	0x039AC954 STR D0, [X22 + 0x20]
	0x039AC958 B.EQ 0x39ACB24
	0x039AC95C ADRP X9, 0xFFFFFFFFFD142000
	0x039AC960 LDR V1, [X9]
	0x039AC964 CMP W8, 0x2
	0x039AC968 STR D1, [X22 + 0x28]
	0x039AC96C B.LS 0x39ACB24
	0x039AC970 CMP W8, 0x3
	0x039AC974 STR X31, [X22 + 0x30]
	0x039AC978 B.EQ 0x39ACB24
	0x039AC97C ADRP X9, 0xFFFFFFFFFD141000
	0x039AC980 LDR V2, [X9 + 0x648]
	0x039AC984 CMP W8, 0x4
	0x039AC988 STR D2, [X22 + 0x38]
	0x039AC98C B.LS 0x39ACB24
	0x039AC990 CMP W8, 0x5
	0x039AC994 STR D0, [X22 + 0x40]
	0x039AC998 B.EQ 0x39ACB24
	0x039AC99C CMP W8, 0x6
	0x039AC9A0 STR D1, [X22 + 0x48]
	0x039AC9A4 B.LS 0x39ACB24
	0x039AC9A8 CMP W8, 0x7
	0x039AC9AC STR X31, [X22 + 0x50]
	0x039AC9B0 B.EQ 0x39ACB24
	0x039AC9B4 CMP W8, 0x8
	0x039AC9B8 STR D2, [X22 + 0x58]
	0x039AC9BC B.LS 0x39ACB24
	0x039AC9C0 CMP W8, 0x9
	0x039AC9C4 STR D0, [X22 + 0x60]
	0x039AC9C8 B.EQ 0x39ACB24
	0x039AC9CC CMP W8, 0xA
	0x039AC9D0 STR D1, [X22 + 0x68]
	0x039AC9D4 B.LS 0x39ACB24
	0x039AC9D8 CMP W8, 0xB
	0x039AC9DC STR X31, [X22 + 0x70]
	0x039AC9E0 B.EQ 0x39ACB24
	0x039AC9E4 CMP W8, 0xC
	0x039AC9E8 STR D2, [X22 + 0x78]
	0x039AC9EC B.LS 0x39ACB24
	0x039AC9F0 CMP W8, 0xD
	0x039AC9F4 STR D0, [X22 + 0x80]
	0x039AC9F8 B.EQ 0x39ACB24
	0x039AC9FC CMP W8, 0xE
	0x039ACA00 STR D1, [X22 + 0x88]
	0x039ACA04 B.LS 0x39ACB24
	0x039ACA08 CMP W8, 0xF
	0x039ACA0C STR X31, [X22 + 0x90]
	0x039ACA10 B.EQ 0x39ACB24
	0x039ACA14 CMP W8, 0x10
	0x039ACA18 STR D2, [X22 + 0x98]
	0x039ACA1C B.LS 0x39ACB24

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA36000
	009 Move X19, 0x7A6000
	010 Move W8, [X20+3048]
	011 Move X19, [X19+2664]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x7A5000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move X0, 0x7A6000
	020 Move X0, [X0+2952]
	021 Call 0x1C17CF4
	022 Move X0, 0x7A6000
	023 Move X0, [X0+2960]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A6000
	026 Move X0, [X0+2968]
	027 Call 0x1C17CF4
	028 Move X0, 0x7A6000
	029 Move X0, [X0+2976]
	030 Call 0x1C17CF4
	031 Move X0, 0x7A6000
	032 Move X0, [X0+2664]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3048], W8
	036 Move X0, [X19]
	037 Move X24, 0x7A6000
	038 Move X20, 0x7A6000
	039 Move X23, 0x7A6000
	040 Move X22, 0x7A6000
	041 Move X21, 0x7A5000
	042 Move X24, [X24+2952]
	043 Move W8, [X0+224]
	044 Move X20, [X20+2976]
	045 Move X23, [X23+2968]
	046 Move X22, [X22+2960]
	047 Move X21, [X21+1912]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Move X0, [X24]
	054 Move X19, [X8]
	055 Call 0x1C17F10
	056 Move X2, [X20]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X20, X0
	060 Call Func`1<Object>..ctor, X0, X1, X2
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X2, [X22]
	064 Move X1, X20
	065 Move X19, X0
	066 Call 0x2EE97EC, X0, X1
	067 Move X8, [X21]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X8, [X8+184]
	073 Move [X8], X19
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X30, [X31+64]
	077 Return 

