Type: UnityEngine.Rendering.AtlasAllocator

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Boolean potPadding)

Disassembly:
	0x039D96B0 MOV W23, W0
	0x039D96B4 MOV X0, X20
	0x039D96B8 LDP X9, X1, [X8 + 0x178]
	0x039D96BC BLR X9
	0x039D96C0 MOV X1, X31
	0x039D96C4 BL 0x3C61D28
	0x039D96C8 LDR X8, [X19]
	0x039D96CC MOV W20, W0
	0x039D96D0 MOV X0, X19
	0x039D96D4 LDP X9, X1, [X8 + 0x178]
	0x039D96D8 BLR X9
	0x039D96DC MOV X1, X31
	0x039D96E0 BL 0x3C61DDC
	0x039D96E4 LDR X8, [X19]
	0x039D96E8 MOV W24, W0
	0x039D96EC MOV X0, X19
	0x039D96F0 LDP X9, X1, [X8 + 0x178]
	0x039D96F4 BLR X9
	0x039D96F8 MOV X1, X31
	0x039D96FC BL 0x3C61DA0
	0x039D9700 LDR X8, [X19]
	0x039D9704 MOV W25, W0
	0x039D9708 MOV X0, X19
	0x039D970C LDP X9, X1, [X8 + 0x178]
	0x039D9710 BLR X9
	0x039D9714 MOV X1, X31
	0x039D9718 BL 0x3C61D64
	0x039D971C LDR X8, [X19]
	0x039D9720 MOV W26, W0
	0x039D9724 MOV X0, X19
	0x039D9728 LDP X9, X1, [X8 + 0x178]
	0x039D972C BLR X9
	0x039D9730 MOV X1, X31
	0x039D9734 BL 0x3C61D28
	0x039D9738 AND W8, W24, 0x7
	0x039D973C MOVZ W9, 0x1000000
	0x039D9740 AND W10, W25, 0x7
	0x039D9744 MOVZ W11, 0x10000
	0x039D9748 AND W13, W21, 0x7
	0x039D974C AND W15, W22, 0x7
	0x039D9750 AND W12, W26, 0x7
	0x039D9754 LSLV W8, W9, W8
	0x039D9758 LSLV W9, W9, W13
	0x039D975C MOVZ W13, 0x100
	0x039D9760 LSLV W10, W11, W10
	0x039D9764 LSLV W11, W11, W15
	0x039D9768 AND W15, W23, 0x7
	0x039D976C AND W14, W0, 0x7
	0x039D9770 MOVZ W0, 0x1
	0x039D9774 AND W16, W20, 0x7
	0x039D9778 LSLV W12, W13, W12
	0x039D977C LSLV W13, W13, W15
	0x039D9780 ORR W8, W10, W8, 0x0
	0x039D9784 ORR W9, W11, W9, 0x0
	0x039D9788 LSLV W14, W0, W14
	0x039D978C LSLV W15, W0, W16
	0x039D9790 ORR W8, W8, W12, 0x0
	0x039D9794 ORR W9, W9, W13, 0x0
	0x039D9798 ORR W8, W8, W14, 0x0
	0x039D979C ORR W9, W9, W15, 0x0
	0x039D97A0 CMP W9, W8
	0x039D97A4 B.NE 0x39D97B4
	0x039D97A8 MOV W0, W31
	0x039D97AC B 0x39D97B4
	0x039D97B0 MOVZ W0, 0x1
	0x039D97B4 LDP X20, X19, [X31 + 0x40]
	0x039D97B8 LDP X22, X21, [X31 + 0x30]
	0x039D97BC LDP X24, X23, [X31 + 0x20]
	0x039D97C0 LDP X26, X25, [X31 + 0x10]
	0x039D97C4 LDR X30, [X31], #0x50
	0x039D97C8 RET
	0x039D97CC BL 0x1C16F20
	0x039D97D0 SUB X31, X31, 0x120
	0x039D97D4 STP D15, D14, [X31 + 0x80]
	0x039D97D8 STP D13, D12, [X31 + 0x90]
	0x039D97DC STP D11, D10, [X31 + 0xA0]
	0x039D97E0 STP D9, D8, [X31 + 0xB0]
	0x039D97E4 STR X29, [X31 + 0xC0]
	0x039D97E8 STP X30, X27, [X31 + 0xD0]
	0x039D97EC STP X26, X25, [X31 + 0xE0]
	0x039D97F0 STP X24, X23, [X31 + 0xF0]
	0x039D97F4 STP X22, X21, [X31 + 0x100]
	0x039D97F8 STP X20, X19, [X31 + 0x110]
	0x039D97FC ADRP X24, 0xA08000
	0x039D9800 LDRB W8, [X24 + 0xD6A]
	0x039D9804 MOV W19, W4
	0x039D9808 MOV W23, W3
	0x039D980C MOV V8.16B, V7.16B
	0x039D9810 MOV V9.16B, V6.16B
	0x039D9814 MOV V10.16B, V5.16B
	0x039D9818 MOV V11.16B, V4.16B
	0x039D981C MOV X20, X2
	0x039D9820 MOV V12.16B, V3.16B
	0x039D9824 MOV V13.16B, V2.16B
	0x039D9828 MOV V14.16B, V1.16B
	0x039D982C MOV V15.16B, V0.16B
	0x039D9830 MOV X21, X1
	0x039D9834 MOV X22, X0
	0x039D9838 TBNZ X8, 0x0, 0x39D9850
	0x039D983C ADRP X0, 0x779000
	0x039D9840 LDR X0, [X0 + 0xE28]
	0x039D9844 BL 0x1C16CF4
	0x039D9848 MOVZ W8, 0x1
	0x039D984C STRB W8, [X24 + 0xD6A]
	0x039D9850 CBZ X20, 0x39D9A40
	0x039D9854 LDR X8, [X20]
	0x039D9858 MOV X0, X20
	0x039D985C LDP X9, X1, [X8 + 0x188]
	0x039D9860 BLR X9
	0x039D9864 LDR X8, [X20]
	0x039D9868 MOV W24, W0
	0x039D986C MOV X0, X20
	0x039D9870 LDP X9, X1, [X8 + 0x1A8]
	0x039D9874 BLR X9
	0x039D9878 MOV W2, W0
	0x039D987C MOV X0, X22
	0x039D9880 MOV W1, W24
	0x039D9884 BL 0x39D8F78
	0x039D9888 ANDS W31, W23, 0x1
	0x039D988C CSINC W24, W0, W31, NE
	0x039D9890 CMP W24, 0x1
	0x039D9894 B.LT 0x39D9A10
	0x039D9898 ADRP X25, 0x779000
	0x039D989C LDR X25, [X25 + 0xE28]
	0x039D98A0 ADRP X27, 0xFFFFFFFFFD1BE000
	0x039D98A4 MOV W23, W31
	0x039D98A8 MOV W26, W19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xA09000
	010 Move X22, 0x77B000
	011 Move X23, 0x77B000
	012 Move W8, [X25+3423]
	013 Move X22, [X22+328]
	014 Move X23, [X23+336]
	015 Move W20, W2
	016 Move W21, W1
	017 Move X19, X0
	018 And W24, W3, 1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x77B000
	024 Move X0, [X0+328]
	025 Call 0x1C17CF4
	026 Move X0, 0x77B000
	027 Move X0, [X0+344]
	028 Call 0x1C17CF4
	029 Move X0, 0x77B000
	030 Move X0, [X0+352]
	031 Call 0x1C17CF4
	032 Move X0, 0x77B000
	033 Move X0, [X0+360]
	034 Call 0x1C17CF4
	035 Move X0, 0x77B000
	036 Move X0, [X0+368]
	037 Call 0x1C17CF4
	038 Move X0, 0x77B000
	039 Move X0, [X0+336]
	040 Call 0x1C17CF4
	041 Move X0, 0x77B000
	042 Move X0, [X0+376]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X25+3423], W8
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object..ctor, X0
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X22, X0
	053 Move [X0+32], X31
	054 Move [X0+40], X31
	055 Call Object..ctor, X0
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 NotImplemented "Instruction SCVTF not yet implemented."
	058 Move [X19+16], X22
	059 Move [X22+40], X31
	060 Move [X22+32], S0
	061 Move [X22+40], S1
	062 Move [X19+24], W21
	063 Move [X19+28], W20
	064 Move [X19+32], W24
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X23]
	071 Move X8, [X0+184]
	072 Move X20, [X8+8]
	073 Compare X20, 0
	074 JumpIfNotEqual {96}
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X9, 0x77B000
	081 Move X8, [X0+184]
	082 Move X9, [X9+376]
	083 Move X21, [X8]
	084 Move X0, [X9]
	085 Call 0x1C17F10
	086 Move X8, 0x77B000
	087 Move X8, [X8+360]
	088 Move X1, X21
	089 Move X3, X31
	090 Move X20, X0
	091 Move X2, [X8]
	092 Call UnityAction`1<Object>..ctor, X0, X1, X2
	093 Move X0, [X23]
	094 Move X8, [X0+184]
	095 Move [X8+8], X20
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X23]
	101 Move X8, [X0+184]
	102 Move X25, 0x77B000
	103 Move X24, 0x77B000
	104 Move X21, [X8+16]
	105 Move X25, [X25+352]
	106 Move X24, [X24+344]
	107 Compare X21, 0
	108 JumpIfNotEqual {130}
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X23]
	114 Move X9, 0x77B000
	115 Move X8, [X0+184]
	116 Move X9, [X9+376]
	117 Move X22, [X8]
	118 Move X0, [X9]
	119 Call 0x1C17F10
	120 Move X8, 0x77B000
	121 Move X8, [X8+368]
	122 Move X1, X22
	123 Move X3, X31
	124 Move X21, X0
	125 Move X2, [X8]
	126 Call UnityAction`1<Object>..ctor, X0, X1, X2
	127 Move X8, [X23]
	128 Move X8, [X8+184]
	129 Move [X8+16], X21
	130 Move X0, [X25]
	131 Call 0x1C17F10
	132 Move X4, [X24]
	133 Move W3, 1
	134 Move X1, X20
	135 Move X2, X21
	136 Move X22, X0
	137 Call 0x2494C20, X0, X1, X2, X3
	138 Move [X19+40], X22
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Move X25, [X31+72]
	147 Return 

Method: System.Boolean Allocate(ref UnityEngine.Vector4 result, System.Int32 width, System.Int32 height)

Disassembly:
	0x039D98B8 MOV X1, X31
	0x039D98BC BL 0x39CDF64
	0x039D98C0 LDUR V0, [X31 + 0x28]
	0x039D98C4 LDUR V1, [X31 + 0x38]
	0x039D98C8 LDR X8, [X31 + 0x48]
	0x039D98CC STP V0, V1, [X31 + 0x50]
	0x039D98D0 STR X8, [X31 + 0x70]
	0x039D98D4 CBZ X21, 0x39D9A40
	0x039D98D8 LDP V0, V1, [X31 + 0x50]
	0x039D98DC LDR X8, [X31 + 0x70]
	0x039D98E0 ADD X1, X31, 0x0
	0x039D98E4 MOV X0, X21
	0x039D98E8 MOV W2, W23
	0x039D98EC MOV X3, X31
	0x039D98F0 STP V0, V1, [X31]
	0x039D98F4 STR X8, [X31 + 0x20]
	0x039D98F8 BL 0x3C4DCC4
	0x039D98FC CMP W19, 0x3
	0x039D9900 B.HI 0x39D9A04
	0x039D9904 ADR X8, 0x10
	0x039D9908 LDRB W9, [X27, X26, LSL]
	0x039D990C ADD X8, X8, X9, 0x2, LSL
	0x039D9910 BR X8
	0x039D9914 LDR X0, [X25]
	0x039D9918 LDR W8, [X0 + 0xE0]
	0x039D991C CBNZ W8, 0x39D9924
	0x039D9920 BL 0x1C16DFC
	0x039D9924 MOVZ W3, 0x1
	0x039D9928 MOV X0, X21
	0x039D992C MOV X1, X20
	0x039D9930 MOV V0.16B, V11.16B
	0x039D9934 MOV V1.16B, V10.16B
	0x039D9938 MOV V2.16B, V9.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, X0
	006 Move X0, [X0+16]
	007 Compare X0, 0
	008 JumpIfEqual {39}
	009 Move W4, [X8+32]
	010 Move X19, X1
	011 Add X1, X8, 40
	012 Call AtlasNode.Allocate, X0, X1, X2, X3, X4
	013 Move X20, X0
	014 Compare X0, 0
	015 JumpIfEqual {17}
	016 Move V0, [X20+2]
	017 Move X21, 0xA00000
	018 Move W8, [X21+3674]
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x722000
	022 Move X0, [X0+2464]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3674], W8
	026 Move X8, 0x722000
	027 Move X8, [X8+2464]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move V0, [X8]
	031 Move [X19], V0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x039D9B24 LDR W1, [X8 + 0x10]
	0x039D9B28 BL 0x3C125FC
	0x039D9B2C LDR X8, [X23]
	0x039D9B30 LDR X8, [X8 + 0xB8]
	0x039D9B34 LDR X0, [X8 + 0x20]
	0x039D9B38 CBZ X0, 0x39D9BD8
	0x039D9B3C LDR X8, [X24]
	0x039D9B40 FMOV S0, 1
	0x039D9B44 FMOV S1, 1
	0x039D9B48 FMOV S2, W31
	0x039D9B4C LDR X8, [X8 + 0xB8]
	0x039D9B50 FMOV S3, W31
	0x039D9B54 MOV X2, X31
	0x039D9B58 LDR W1, [X8 + 0x8]
	0x039D9B5C BL 0x3C12720

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Add X1, X19, 40
	008 Call AtlasNode.Release, X0, X1
	009 Move X8, [X19+16]
	010 Compare X8, 0
	011 JumpIfEqual {19}
	012 Move V0, [X19+24]
	013 Move [X8+40], X31
	014 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	015 Move [X8+32], D0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return 
	019 Call 0x1C17F20

