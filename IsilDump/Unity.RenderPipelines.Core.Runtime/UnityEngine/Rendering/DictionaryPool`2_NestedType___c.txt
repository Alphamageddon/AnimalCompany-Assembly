Type: UnityEngine.Rendering.DictionaryPool`2/<>c

Method: System.Void .cctor()

Disassembly:
	0x023707B4 TBNZ X9, 0x0, 0x23707C4
	0x023707B8 MOV X0, X8
	0x023707BC BL 0x1C5C684
	0x023707C0 MOV X8, X0
	0x023707C4 LDR X8, [X8 + 0xC0]
	0x023707C8 MOV X0, X20
	0x023707CC LDR X1, [X8 + 0x8]
	0x023707D0 BLR X21
	0x023707D4 LDR X0, [X19 + 0x20]
	0x023707D8 LDRB W8, [X0 + 0x135]
	0x023707DC TBNZ X8, 0x0, 0x23707E4
	0x023707E0 BL 0x1C5C684
	0x023707E4 LDR X8, [X0 + 0xC0]
	0x023707E8 LDR X0, [X8 + 0x10]
	0x023707EC LDRB W8, [X0 + 0x135]
	0x023707F0 TBNZ X8, 0x0, 0x23707F8
	0x023707F4 BL 0x1C5C684
	0x023707F8 LDR X8, [X0 + 0xB8]
	0x023707FC STR X20, [X8]
	0x02370800 LDR X0, [X19 + 0x20]
	0x02370804 LDRB W8, [X0 + 0x135]
	0x02370808 TBNZ X8, 0x0, 0x2370810
	0x0237080C BL 0x1C5C684
	0x02370810 LDR X8, [X0 + 0xC0]
	0x02370814 LDR X0, [X8 + 0x10]
	0x02370818 LDRB W8, [X0 + 0x135]
	0x0237081C TBNZ X8, 0x0, 0x237082C
	0x02370820 LDP X20, X19, [X31 + 0x10]
	0x02370824 LDP X30, X21, [X31], #0x20
	0x02370828 B 0x1C5C684
	0x0237082C LDP X20, X19, [X31 + 0x10]
	0x02370830 LDP X30, X21, [X31], #0x20
	0x02370834 RET
	0x02370838 MOV X1, X31
	0x0237083C B 0x33BDD8C
	0x02370840 STP X29, X30, [X31 - 0x30]!
	0x02370844 STP X22, X21, [X31 + 0x10]
	0x02370848 STP X20, X19, [X31 + 0x20]
	0x0237084C ADD X29, X31, 0x0
	0x02370850 SUB X31, X31, 0x20
	0x02370854 MRS X22, 0xC000
	0x02370858 LDR X8, [X22 + 0x28]
	0x0237085C MOV X20, X2
	0x02370860 MOV X19, X1
	0x02370864 STUR X8, [X29 - 0x8]
	0x02370868 STUR X1, [X29 - 0x18]
	0x0237086C LDR X8, [X2 + 0x20]
	0x02370870 LDR X9, [X8 + 0xC0]
	0x02370874 LDR X8, [X9 + 0x18]
	0x02370878 ADD X10, X8, 0x135
	0x0237087C LDRH W10, [X10]
	0x02370880 TBNZ X10, 0x0, 0x23708A4
	0x02370884 MOV X0, X8
	0x02370888 BL 0x1C5C684
	0x0237088C LDR X8, [X20 + 0x20]
	0x02370890 LDR X9, [X8 + 0xC0]
	0x02370894 LDR X8, [X9 + 0x18]
	0x02370898 ADD X10, X8, 0x135
	0x0237089C LDRH W10, [X10]
	0x023708A0 B 0x23708A8
	0x023708A4 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+8]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+8]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move [X8], X20
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call 0x1C5D684
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

Method: System.Void .ctor()

Disassembly:
	0x023708A8 LDR W11, [X0 + 0xFC]
	0x023708AC ADD X12, X31, 0x0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__4_0(System.Collections.Generic.Dictionary`2<TKey, TValue> l)

Disassembly:
	0x023708B0 ADD W11, W11, 0x10
	0x023708B4 ADD X11, X11, 0xF
	0x023708B8 AND X11, X11, 0x1FFFFFFFF
	0x023708BC SUB X21, X12, X11
	0x023708C0 ADD X31, X21, 0x0
	0x023708C4 TBNZ X10, 0x0, 0x23708E0
	0x023708C8 MOV X0, X8
	0x023708CC BL 0x1C5C684
	0x023708D0 LDR X8, [X20 + 0x20]
	0x023708D4 LDR X9, [X8 + 0xC0]
	0x023708D8 LDR X8, [X9 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {12}
	004 Move X8, [X2+32]
	005 Move X0, X1
	006 Move X8, [X8+192]
	007 Move X8, [X8+32]
	008 Move X2, [X8]
	009 Move X1, X8
	010 Move X30, [X31+16]
	011 CallNoReturn X2
	012 Call 0x1C17F20

