Type: UnityEngine.Rendering.MaterialQualityUtilities

Method: UnityEngine.Rendering.MaterialQuality GetHighestQuality(UnityEngine.Rendering.MaterialQuality levels)

Disassembly:
	0x039ECBC4 LDR X0, [X0 + 0x620]
	0x039ECBC8 BL 0x1C16CF4
	0x039ECBCC MOVZ W8, 0x1
	0x039ECBD0 STRB W8, [X19 + 0xE46]
	0x039ECBD4 LDR X8, [X20]
	0x039ECBD8 LDP X20, X19, [X31 + 0x10]
	0x039ECBDC MOVZ W9, 0x18
	0x039ECBE0 LDR X8, [X8 + 0xB8]
	0x039ECBE4 STR W9, [X8]
	0x039ECBE8 LDR X30, [X31], #0x20
	0x039ECBEC RET
	0x039ECBF0 MOV X1, X31
	0x039ECBF4 B 0x33A51F0
	0x039ECBF8 STR X30, [X31 - 0x30]!
	0x039ECBFC STP X22, X21, [X31 + 0x10]
	0x039ECC00 STP X20, X19, [X31 + 0x20]
	0x039ECC04 ADRP X21, 0x9F5000
	0x039ECC08 ADRP X22, 0x707000
	0x039ECC0C LDRB W8, [X21 + 0xE48]
	0x039ECC10 LDR X22, [X22 + 0xAC8]
	0x039ECC14 MOV X20, X1
	0x039ECC18 MOV X19, X0
	0x039ECC1C TBNZ X8, 0x0, 0x39ECC34
	0x039ECC20 ADRP X0, 0x707000
	0x039ECC24 LDR X0, [X0 + 0xAC8]
	0x039ECC28 BL 0x1C16CF4
	0x039ECC2C MOVZ W8, 0x1
	0x039ECC30 STRB W8, [X21 + 0xE48]
	0x039ECC34 LDR X0, [X22]
	0x039ECC38 MOVZ W1, 0x1
	0x039ECC3C BL 0x1C16D6C
	0x039ECC40 CBZ X0, 0x39ECC68
	0x039ECC44 LDR W8, [X0 + 0x18]
	0x039ECC48 CBZ W8, 0x39ECC6C
	0x039ECC4C STR X20, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9F6000
	006 Move X20, 0x768000
	007 Move W8, [X21+3644]
	008 Move X20, [X20+1488]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x768000
	015 Move X0, [X0+1488]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3644], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8+16]
	027 Compare X8, 0
	028 JumpIfEqual {47}
	029 Move W8, [X8+24]
	030 Move W9, 1
	031 Subtract W8, W8, 1
	032 Move TEMP, X8
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfEqual {41}
	036 NotImplemented "Instruction LSLV not yet implemented."
	037 And W10, W0, W19
	038 Subtract W8, W8, 1
	039 Compare W10, 0
	040 JumpIfEqual {32}
	041 Move W0, W31
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20

Method: UnityEngine.Rendering.MaterialQuality GetClosestQuality(UnityEngine.Rendering.MaterialQuality availableLevels, UnityEngine.Rendering.MaterialQuality requestedLevel)

Disassembly:
	0x039ECC50 MOV X0, X19
	0x039ECC54 LDP X20, X19, [X31 + 0x20]
	0x039ECC58 LDP X22, X21, [X31 + 0x10]
	0x039ECC5C MOV X1, X31
	0x039ECC60 LDR X30, [X31], #0x30
	0x039ECC64 B 0x33A51F0
	0x039ECC68 BL 0x1C16F20
	0x039ECC6C BL 0x1C16F28
	0x039ECC70 MOV X1, X31
	0x039ECC74 B 0x33A51F0
	0x039ECC78 MOV X1, X31
	0x039ECC7C B 0x33A51F0
	0x039ECC80 MOV X1, X31
	0x039ECC84 B 0x3C36C30
	0x039ECC88 LDR W0, [X0 + 0x10]
	0x039ECC8C RET
	0x039ECC90 STR W1, [X0 + 0x10]
	0x039ECC94 RET
	0x039ECC98 SUB X31, X31, 0x30
	0x039ECC9C STP X30, X19, [X31 + 0x20]
	0x039ECCA0 LDR X0, [X0 + 0x20]
	0x039ECCA4 CBZ X0, 0x39ECCD4
	0x039ECCA8 MOV X19, X8
	0x039ECCAC ADD X8, X31, 0x0
	0x039ECCB0 MOV X2, X31
	0x039ECCB4 BL 0x3C01070
	0x039ECCB8 LDUR V0, [X31 + 0xC]
	0x039ECCBC LDR V1, [X31]
	0x039ECCC0 STUR V0, [X19 + 0xC]
	0x039ECCC4 STR V1, [X19]
	0x039ECCC8 LDP X30, X19, [X31 + 0x20]
	0x039ECCCC ADD X31, X31, 0x30
	0x039ECCD0 RET
	0x039ECCD4 BL 0x1C16F20
	0x039ECCD8 STR D8, [X31 - 0x30]!
	0x039ECCDC STP X30, X21, [X31 + 0x10]
	0x039ECCE0 STP X20, X19, [X31 + 0x20]
	0x039ECCE4 CBZ X1, 0x39ECD28
	0x039ECCE8 MOV X21, X0
	0x039ECCEC MOV X0, X1
	0x039ECCF0 MOV X1, X31
	0x039ECCF4 MOV X19, X3
	0x039ECCF8 MOV W20, W2
	0x039ECCFC MOV V8.16B, V0.16B
	0x039ECD00 BL 0x3C00D10
	0x039ECD04 AND W2, W20, 0x1
	0x039ECD08 MOV X1, X0
	0x039ECD0C MOV X0, X21
	0x039ECD10 MOV X3, X19
	0x039ECD14 LDP X20, X19, [X31 + 0x20]
	0x039ECD18 LDP X30, X21, [X31 + 0x10]
	0x039ECD1C MOV V0.16B, V8.16B
	0x039ECD20 LDR V8, [X31], #0x30
	0x039ECD24 B 0x39ECD2C
	0x039ECD28 BL 0x1C16F20
	0x039ECD2C STP D9, D8, [X31 - 0x50]!
	0x039ECD30 STR X30, [X31 + 0x10]
	0x039ECD34 STP X24, X23, [X31 + 0x20]
	0x039ECD38 STP X22, X21, [X31 + 0x30]
	0x039ECD3C STP X20, X19, [X31 + 0x40]
	0x039ECD40 ADRP X24, 0x9F5000
	0x039ECD44 ADRP X23, 0x70E000
	0x039ECD48 LDRB W8, [X24 + 0xE49]
	0x039ECD4C LDR X23, [X23 + 0x730]
	0x039ECD50 MOV X21, X3
	0x039ECD54 MOV W22, W2
	0x039ECD58 MOV V8.16B, V0.16B
	0x039ECD5C MOV X20, X1
	0x039ECD60 MOV X19, X0
	0x039ECD64 TBNZ X8, 0x0, 0x39ECD7C
	0x039ECD68 ADRP X0, 0x70E000
	0x039ECD6C LDR X0, [X0 + 0x730]
	0x039ECD70 BL 0x1C16CF4
	0x039ECD74 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x9F6000
	008 Move W8, [X21+3645]
	009 Move W20, W1
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x768000
	016 Move X0, [X0+1488]
	017 Call 0x1C17CF4
	018 Move X0, 0x708000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3645], W8
	023 Compare W19, 0
	024 JumpIfEqual {78}
	025 Move X21, 0x768000
	026 Move X21, [X21+1488]
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W0, W20
	033 Call MaterialQualityUtilities.ToFirstIndex, X0
	034 Move W20, W0
	035 Move TEMP, X0
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {50}
	039 Move W22, 1
	040 Move W23, W20
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 NotImplemented "Instruction LSLV not yet implemented."
	047 And W31, W0, W19
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract W23, W23, 1
	050 Move X23, 0x708000
	051 Move X23, [X23+1448]
	052 Add W20, W20, 1
	053 Move W22, 1
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X8, [X8+16]
	062 Compare X8, 0
	063 JumpIfEqual {87}
	064 Move W8, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 NotImplemented "Instruction LSLV not yet implemented."
	076 And W31, W0, W19
	077 Add W20, W20, 1
	078 Move W0, 1
	079 Move W0, W31
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return X0
	087 Call 0x1C17F20

Method: System.Void SetGlobalShaderKeywords(UnityEngine.Rendering.MaterialQuality level)

Disassembly:
	0x039ECE10 LDP X22, X21, [X31 + 0x30]
	0x039ECE14 STR W8, [X19 + 0x10]
	0x039ECE18 LDP X20, X19, [X31 + 0x40]
	0x039ECE1C LDP X24, X23, [X31 + 0x20]
	0x039ECE20 LDR X30, [X31 + 0x10]
	0x039ECE24 LDP D9, D8, [X31], #0x50
	0x039ECE28 RET
	0x039ECE2C BL 0x1C16F20
	0x039ECE30 MOV X1, X31
	0x039ECE34 B 0x33CB4DC
	0x039ECE38 RET
	0x039ECE3C STP X30, X21, [X31 - 0x20]!
	0x039ECE40 STP X20, X19, [X31 + 0x10]
	0x039ECE44 ADRP X21, 0x9F5000
	0x039ECE48 ADRP X20, 0x72F000
	0x039ECE4C LDRB W8, [X21 + 0xE4A]
	0x039ECE50 LDR X20, [X20 + 0x8F8]
	0x039ECE54 MOV X19, X0
	0x039ECE58 TBNZ X8, 0x0, 0x39ECE70
	0x039ECE5C ADRP X0, 0x72F000
	0x039ECE60 LDR X0, [X0 + 0x8F8]
	0x039ECE64 BL 0x1C16CF4
	0x039ECE68 MOVZ W8, 0x1
	0x039ECE6C STRB W8, [X21 + 0xE4A]
	0x039ECE70 LDR X0, [X20]
	0x039ECE74 LDR X20, [X19 + 0x30]
	0x039ECE78 LDR W8, [X0 + 0xE0]
	0x039ECE7C CBNZ W8, 0x39ECE84
	0x039ECE80 BL 0x1C16DFC
	0x039ECE84 MOV X0, X20
	0x039ECE88 MOV X1, X31
	0x039ECE8C BL 0x39E1DF8
	0x039ECE90 STR X31, [X19 + 0x30]
	0x039ECE94 LDP X20, X19, [X31 + 0x10]
	0x039ECE98 LDP X30, X21, [X31], #0x20
	0x039ECE9C RET
	0x039ECEA0 MOVZ W8, 0x101
	0x039ECEA4 STRH W8, [X0 + 0x38]
	0x039ECEA8 RET
	0x039ECEAC STP X30, X19, [X31 - 0x10]!
	0x039ECEB0 MOVZ W0, 0x2D
	0x039ECEB4 MOVZ W1, 0x7
	0x039ECEB8 MOV X2, X31
	0x039ECEBC BL 0x3C3C4BC
	0x039ECEC0 TBZ X0, 0x0, 0x39ECED0
	0x039ECEC4 MOVZ W0, 0x2D
	0x039ECEC8 LDP X30, X19, [X31], #0x10
	0x039ECECC RET
	0x039ECED0 MOVZ W0, 0x5
	0x039ECED4 MOVZ W1, 0x7
	0x039ECED8 MOV X2, X31
	0x039ECEDC MOVZ W19, 0x5
	0x039ECEE0 BL 0x3C3C4BC
	0x039ECEE4 ANDS W31, W0, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9F6000
	007 Move W8, [X20+3646]
	008 Move W19, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x768000
	014 Move X0, [X0+1488]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3646], W8
	018 Move X21, 0x768000
	019 Move X21, [X21+1488]
	020 Move X20, X31
	021 Move W22, 1
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {61}
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {43}
	037 Call 0x1C17DFC
	038 Move X8, [X21]
	039 Move X8, [X8+184]
	040 Move X8, [X8]
	041 Compare X8, 0
	042 JumpIfEqual {61}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X8, X20
	046 Move X0, [X8+32]
	047 NotImplemented "Instruction LSLV not yet implemented."
	048 Move X1, X31
	049 And W8, W8, W19
	050 Compare W8, 0
	051 JumpIfEqual {53}
	052 Call Shader.EnableKeyword, X0
	053 Call Shader.DisableKeyword, X0
	054 Add X20, X20, 1
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Void SetGlobalShaderKeywords(UnityEngine.Rendering.MaterialQuality level, UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x039ECEE8 MOVZ W8, 0x8
	0x039ECEEC CSEL W0, W19, W8, NE
	0x039ECEF0 LDP X30, X19, [X31], #0x10
	0x039ECEF4 RET
	0x039ECEF8 STP X30, X23, [X31 - 0x30]!
	0x039ECEFC STP X22, X21, [X31 + 0x10]
	0x039ECF00 STP X20, X19, [X31 + 0x20]
	0x039ECF04 ADRP X21, 0x9F5000
	0x039ECF08 ADRP X20, 0x707000
	0x039ECF0C LDRB W8, [X21 + 0xE4B]
	0x039ECF10 LDR X20, [X20 + 0x598]
	0x039ECF14 MOV X19, X0
	0x039ECF18 TBNZ X8, 0x0, 0x39ECF54
	0x039ECF1C ADRP X0, 0x70C000
	0x039ECF20 LDR X0, [X0 + 0x140]
	0x039ECF24 BL 0x1C16CF4
	0x039ECF28 ADRP X0, 0x707000
	0x039ECF2C LDR X0, [X0 + 0x598]
	0x039ECF30 BL 0x1C16CF4
	0x039ECF34 ADRP X0, 0x731000
	0x039ECF38 LDR X0, [X0 + 0x250]
	0x039ECF3C BL 0x1C16CF4
	0x039ECF40 ADRP X0, 0x767000
	0x039ECF44 LDR X0, [X0 + 0x628]
	0x039ECF48 BL 0x1C16CF4
	0x039ECF4C MOVZ W8, 0x1
	0x039ECF50 STRB W8, [X21 + 0xE4B]
	0x039ECF54 LDR X0, [X20]
	0x039ECF58 LDR X20, [X19 + 0x30]
	0x039ECF5C LDR W8, [X0 + 0xE0]
	0x039ECF60 CBNZ W8, 0x39ECF68
	0x039ECF64 BL 0x1C16DFC
	0x039ECF68 MOV X0, X20
	0x039ECF6C MOV X1, X31
	0x039ECF70 MOV X2, X31
	0x039ECF74 BL 0x3C3883C
	0x039ECF78 TBZ X0, 0x0, 0x39ED030
	0x039ECF7C ADRP X20, 0x731000
	0x039ECF80 LDR X20, [X20 + 0x250]
	0x039ECF84 BL 0x39ECEAC
	0x039ECF88 LDR X8, [X20]
	0x039ECF8C MOV W21, W0
	0x039ECF90 MOV X0, X8
	0x039ECF94 BL 0x1C16F10
	0x039ECF98 MOVZ W1, 0x80
	0x039ECF9C MOVZ W2, 0x1
	0x039ECFA0 MOV W3, W21
	0x039ECFA4 MOV W4, W31
	0x039ECFA8 MOV X5, X31
	0x039ECFAC MOV X20, X0
	0x039ECFB0 BL 0x3C1BEA4
	0x039ECFB4 STR X20, [X19 + 0x30]
	0x039ECFB8 CBZ X20, 0x39ED0E4
	0x039ECFBC ADRP X8, 0x767000
	0x039ECFC0 LDR X8, [X8 + 0x628]
	0x039ECFC4 MOV X0, X20
	0x039ECFC8 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x9F6000
	008 Move W8, [X21+3647]
	009 Move X19, X1
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x768000
	016 Move X0, [X0+1488]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3647], W8
	020 Move X22, 0x768000
	021 Move X22, [X22+1488]
	022 Move X21, X31
	023 Move W23, 1
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X8, [X8]
	032 Compare X8, 0
	033 JumpIfEqual {67}
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, [X0+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {45}
	039 Call 0x1C17DFC
	040 Move X8, [X22]
	041 Move X8, [X8+184]
	042 Move X8, [X8]
	043 Compare X8, 0
	044 JumpIfEqual {67}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare X19, 0
	048 JumpIfEqual {67}
	049 Add X8, X8, X21
	050 Move X1, [X8+32]
	051 NotImplemented "Instruction LSLV not yet implemented."
	052 Move X0, X19
	053 Move X2, X31
	054 And W8, W8, W20
	055 Compare W8, 0
	056 JumpIfEqual {58}
	057 Call CommandBuffer.EnableShaderKeyword, X0, X1
	058 Call CommandBuffer.DisableShaderKeyword, X0, X1
	059 Add X21, X21, 1
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Move X23, [X31+56]
	066 Return 
	067 Call 0x1C17F20
	068 Call 0x1C17F28

Method: System.Int32 ToFirstIndex(UnityEngine.Rendering.MaterialQuality level)

Disassembly:
	0x039ECD78 STRB W8, [X24 + 0xE49]
	0x039ECD7C MOV X0, X19
	0x039ECD80 MOV X1, X31
	0x039ECD84 AND W24, W22, 0x1
	0x039ECD88 BL 0x33BDD8C
	0x039ECD8C LDR X0, [X23]
	0x039ECD90 BL 0x1C16F10
	0x039ECD94 MOV X1, X20
	0x039ECD98 MOV X2, X31
	0x039ECD9C MOV X22, X0
	0x039ECDA0 BL 0x3C013D4
	0x039ECDA4 STR X22, [X19 + 0x20]
	0x039ECDA8 STR S8, [X19 + 0x18]
	0x039ECDAC STRB W24, [X19 + 0x14]
	0x039ECDB0 ADRP X22, 0x9ED000
	0x039ECDB4 LDRB W8, [X22 + 0x818]
	0x039ECDB8 LDP S9, S8, [X21]
	0x039ECDBC CBNZ W8, 0x39ECDD4
	0x039ECDC0 ADRP X0, 0x707000
	0x039ECDC4 LDR X0, [X0 + 0x5A8]
	0x039ECDC8 BL 0x1C16CF4
	0x039ECDCC MOVZ W8, 0x1
	0x039ECDD0 STRB W8, [X22 + 0x818]
	0x039ECDD4 ADRP X8, 0x707000
	0x039ECDD8 LDR X8, [X8 + 0x5A8]
	0x039ECDDC LDR X0, [X8]
	0x039ECDE0 LDR W8, [X0 + 0xE0]
	0x039ECDE4 CBNZ W8, 0x39ECDEC
	0x039ECDE8 BL 0x1C16DFC
	0x039ECDEC FMUL S0, S9, S9
	0x039ECDF0 FMUL S1, S8, S8
	0x039ECDF4 FADD S0, S0, S1
	0x039ECDF8 FSQRT S0, S0
	0x039ECDFC STR S0, [X19 + 0x1C]
	0x039ECE00 CBZ X20, 0x39ECE2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9F6000
	006 Move X21, 0x768000
	007 Move W8, [X20+3648]
	008 Move X21, [X21+1488]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x768000
	015 Move X0, [X0+1488]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3648], W8
	019 Move X0, [X21]
	020 Move W20, W31
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X21]
	026 Move X8, [X0+184]
	027 Move X8, [X8]
	028 Compare X8, 0
	029 JumpIfEqual {47}
	030 Move W8, [X8+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction LSRV not yet implemented."
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {41}
	037 Add W20, W20, 1
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W20, TEMP
	041 Move W0, W20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20

Method: UnityEngine.Rendering.MaterialQuality FromIndex(System.Int32 index)

Disassembly:
	0x039ECE04 LDR X8, [X20 + 0x18]
	0x039ECE08 MOVZ W9, 0x101
	0x039ECE0C STRH W9, [X19 + 0x38]

ISIL:
	001 Move W8, 1
	002 NotImplemented "Instruction LSLV not yet implemented."
	003 Return X0

Method: System.Void .cctor()

Disassembly:
	0x039ECFCC LDR X1, [X8]
	0x039ECFD0 BL 0x3C38A84
	0x039ECFD4 LDR X0, [X19 + 0x30]
	0x039ECFD8 CBZ X0, 0x39ED0E4
	0x039ECFDC MOVZ W1, 0x3D
	0x039ECFE0 MOV X2, X31
	0x039ECFE4 BL 0x3C396EC
	0x039ECFE8 LDR X0, [X19 + 0x30]
	0x039ECFEC CBZ X0, 0x39ED0E4
	0x039ECFF0 MOVZ W1, 0x1
	0x039ECFF4 MOV X2, X31
	0x039ECFF8 BL 0x3C1AB5C
	0x039ECFFC LDR X0, [X19 + 0x30]
	0x039ED000 CBZ X0, 0x39ED0E4
	0x039ED004 MOVZ W1, 0x1
	0x039ED008 MOV X2, X31
	0x039ED00C MOVZ W20, 0x1
	0x039ED010 BL 0x3C1AA10
	0x039ED014 LDR X0, [X19 + 0x30]
	0x039ED018 CBZ X0, 0x39ED0E4
	0x039ED01C MOV W1, W31
	0x039ED020 MOV X2, X31
	0x039ED024 BL 0x3C1ABDC
	0x039ED028 STRB W20, [X19 + 0x39]
	0x039ED02C B 0x39ED038
	0x039ED030 LDRB W8, [X19 + 0x39]
	0x039ED034 CBZ W8, 0x39ED0CC
	0x039ED038 ADRP X8, 0x70B000
	0x039ED03C LDR X8, [X8 + 0x140]
	0x039ED040 MOVZ W1, 0x80
	0x039ED044 LDR X0, [X8]
	0x039ED048 BL 0x1C16D6C
	0x039ED04C CBZ X0, 0x39ED0E4
	0x039ED050 LDR W8, [X0 + 0x18]
	0x039ED054 MOV X20, X0
	0x039ED058 CMP W8, 0x1
	0x039ED05C B.LT 0x39ED09C
	0x039ED060 MOV X21, X31
	0x039ED064 ADD X22, X20, 0x20
	0x039ED068 MOVZ W23, 0x3C000000
	0x039ED06C SCVTF S0, W21
	0x039ED070 FMOV S1, W23
	0x039ED074 FMUL S0, S0, S1
	0x039ED078 MOV X0, X19
	0x039ED07C BL 0x39ED0E8
	0x039ED080 LDR W8, [X20 + 0x18]
	0x039ED084 CMP X21, X8
	0x039ED088 B.CS 0x39ED0E0
	0x039ED08C ADD X21, X21, 0x1
	0x039ED090 CMP X21, W8, SXTW
	0x039ED094 STR S0, [X22], #0x10
	0x039ED098 B.LT 0x39ED06C
	0x039ED09C LDR X0, [X19 + 0x30]
	0x039ED0A0 CBZ X0, 0x39ED0E4
	0x039ED0A4 MOV X1, X20
	0x039ED0A8 MOV X2, X31
	0x039ED0AC BL 0x3C1C3F0
	0x039ED0B0 LDR X0, [X19 + 0x30]
	0x039ED0B4 CBZ X0, 0x39ED0E4
	0x039ED0B8 MOV W1, W31
	0x039ED0BC MOV W2, W31
	0x039ED0C0 MOV X3, X31
	0x039ED0C4 BL 0x3C1C4B4
	0x039ED0C8 STRB W31, [X19 + 0x39]
	0x039ED0CC LDR X0, [X19 + 0x30]
	0x039ED0D0 LDP X20, X19, [X31 + 0x20]
	0x039ED0D4 LDP X22, X21, [X31 + 0x10]
	0x039ED0D8 LDP X30, X23, [X31], #0x30
	0x039ED0DC RET
	0x039ED0E0 BL 0x1C16F28
	0x039ED0E4 BL 0x1C16F20
	0x039ED0E8 SUB X31, X31, 0xF0
	0x039ED0EC STR D8, [X31 + 0xC0]
	0x039ED0F0 STP X30, X21, [X31 + 0xD0]
	0x039ED0F4 STP X20, X19, [X31 + 0xE0]
	0x039ED0F8 ADRP X20, 0x9F4000
	0x039ED0FC LDRB W8, [X20 + 0xE4C]
	0x039ED100 MOV V8.16B, V0.16B
	0x039ED104 MOV X19, X0
	0x039ED108 TBNZ X8, 0x0, 0x39ED120
	0x039ED10C ADRP X0, 0x70D000
	0x039ED110 LDR X0, [X0 + 0x730]
	0x039ED114 BL 0x1C16CF4
	0x039ED118 MOVZ W8, 0x1
	0x039ED11C STRB W8, [X20 + 0xE4C]
	0x039ED120 STP X31, X31, [X31 + 0xA0]
	0x039ED124 STR W31, [X31 + 0xB8]
	0x039ED128 STR X31, [X31 + 0xB0]
	0x039ED12C STP X31, X31, [X31 + 0x80]
	0x039ED130 STR W31, [X31 + 0x98]
	0x039ED134 STR X31, [X31 + 0x90]
	0x039ED138 LDRB W8, [X19 + 0x38]
	0x039ED13C CBZ W8, 0x39ED2D0
	0x039ED140 LDR X0, [X19 + 0x20]
	0x039ED144 CBZ X0, 0x39ED2CC
	0x039ED148 MOV X1, X31
	0x039ED14C BL 0x3C01178
	0x039ED150 STR W0, [X19 + 0x10]
	0x039ED154 CBZ W0, 0x39ED2D8
	0x039ED158 CMP W0, 0x1
	0x039ED15C B.EQ 0x39ED2E0
	0x039ED160 LDRB W8, [X19 + 0x14]
	0x039ED164 CBZ W8, 0x39ED2E0
	0x039ED168 LDRB W8, [X19 + 0x38]
	0x039ED16C CBZ W8, 0x39ED2C4
	0x039ED170 LDR X8, [X19 + 0x28]
	0x039ED174 CBNZ X8, 0x39ED198
	0x039ED178 ADRP X8, 0x70D000
	0x039ED17C LDR X8, [X8 + 0x730]
	0x039ED180 LDR X0, [X8]
	0x039ED184 BL 0x1C16F10
	0x039ED188 MOV X1, X31
	0x039ED18C MOV X20, X0
	0x039ED190 BL 0x3C015CC
	0x039ED194 STR X20, [X19 + 0x28]
	0x039ED198 LDR X0, [X19 + 0x20]
	0x039ED19C CBZ X0, 0x39ED2CC
	0x039ED1A0 LDR W8, [X19 + 0x10]
	0x039ED1A4 MOV X2, X31
	0x039ED1A8 ADD X21, X31, 0x80
	0x039ED1AC SUB W1, W8, 0x1
	0x039ED1B0 ADD X8, X31, 0x60
	0x039ED1B4 BL 0x3C01070
	0x039ED1B8 LDR V0, [X31 + 0x6]
	0x039ED1BC LDUR V1, [X31 + 0x6C]
	0x039ED1C0 ADD X0, X31, 0xA0
	0x039ED1C4 MOV X1, X31
	0x039ED1C8 STR V0, [X31 + 0xA]
	0x039ED1CC STUR V1, [X21 + 0x2C]
	0x039ED1D0 BL 0x3C00A98
	0x039ED1D4 LDR V1, [X19 + 0x1C]
	0x039ED1D8 ADD X0, X31, 0xA0
	0x039ED1DC MOV X1, X31
	0x039ED1E0 FSUB S0, S0, S1
	0x039ED1E4 BL 0x3C00AA0
	0x039ED1E8 LDR X0, [X19 + 0x20]
	0x039ED1EC CBZ X0, 0x39ED2CC
	0x039ED1F0 ADD X8, X31, 0x60
	0x039ED1F4 MOV W1, W31
	0x039ED1F8 MOV X2, X31
	0x039ED1FC BL 0x3C01070
	0x039ED200 LDR V0, [X31 + 0x6]
	0x039ED204 LDUR V1, [X31 + 0x6C]
	0x039ED208 ADD X0, X31, 0x80
	0x039ED20C MOV X1, X31
	0x039ED210 STR V0, [X31 + 0x8]
	0x039ED214 STUR V1, [X21 + 0xC]
	0x039ED218 BL 0x3C00A98
	0x039ED21C LDR V1, [X19 + 0x1C]
	0x039ED220 ADD X0, X31, 0x80
	0x039ED224 MOV X1, X31
	0x039ED228 FADD S0, S0, S1
	0x039ED22C BL 0x3C00AA0
	0x039ED230 LDR X0, [X19 + 0x20]
	0x039ED234 CBZ X0, 0x39ED2CC
	0x039ED238 LDR X20, [X19 + 0x28]
	0x039ED23C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X19, 0x9F6000
	008 Move X20, 0x708000
	009 Move W8, [X19+3649]
	010 Move X20, [X20+2760]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x708000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move X0, 0x768000
	019 Move X0, [X0+1488]
	020 Call 0x1C17CF4
	021 Move X0, 0x767000
	022 Move X0, [X0+1496]
	023 Call 0x1C17CF4
	024 Move X0, 0x767000
	025 Move X0, [X0+1504]
	026 Call 0x1C17CF4
	027 Move X0, 0x707000
	028 Move X0, [X0+2760]
	029 Call 0x1C17CF4
	030 Move X0, 0x707000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0x767000
	034 Move X0, [X0+1512]
	035 Call 0x1C17CF4
	036 Move X0, 0x767000
	037 Move X0, [X0+1520]
	038 Call 0x1C17CF4
	039 Move X0, 0x767000
	040 Move X0, [X0+1528]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+3649], W8
	044 Move X0, [X20]
	045 Move W1, 3
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {171}
	049 Move W8, [X0+24]
	050 Compare W8, 0
	051 JumpIfEqual {170}
	052 Move X9, 0x767000
	053 Move X9, [X9+1512]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X9]
	056 Move [X0+32], X9
	057 Move X9, 0x767000
	058 Move X9, [X9+1520]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, [X9]
	061 Move [X0+40], X9
	062 Move X8, 0x767000
	063 Move X8, [X8+1528]
	064 Move X20, 0x767000
	065 Move X9, 0x707000
	066 Move X22, 0x707000
	067 Move X8, [X8]
	068 Move X20, [X20+1488]
	069 Move [X0+48], X8
	070 Move X8, [X20]
	071 Move X8, [X8+184]
	072 Move X9, [X9+1728]
	073 Move [X8], X0
	074 Move X8, 0x767000
	075 Move X0, [X9]
	076 Move X8, [X8+1496]
	077 Move W9, [X0+224]
	078 Move X19, [X8]
	079 Move X22, [X22+3576]
	080 Compare W9, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X21, 0x767000
	084 Move X21, [X21+1504]
	085 Move X0, X19
	086 Move X1, X31
	087 Call Type.GetTypeFromHandle, X0
	088 Move X8, [X22]
	089 Move X19, X0
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 Move X0, X19
	096 Move X1, X31
	097 Call Enum.GetNames, X0
	098 Move X8, [X20]
	099 Move W1, 3
	100 Move X8, [X8+184]
	101 Move [X8+8], X0
	102 Move X0, [X21]
	103 Call 0x1C17D6C
	104 Move X8, [X20]
	105 Move X8, [X8+184]
	106 Move X8, [X8]
	107 Compare X8, 0
	108 JumpIfEqual {171}
	109 Move W9, [X8+24]
	110 Compare W9, 0
	111 JumpIfEqual {170}
	112 Move X1, [X8+32]
	113 Move X19, X0
	114 Add X0, X31, 32
	115 Move X2, X31
	116 Move [X31+32], X31
	117 Move [X31+40], X31
	118 Call ShaderKeyword..ctor, X0, X1
	119 Compare X19, 0
	120 JumpIfEqual {171}
	121 Move W8, [X19+24]
	122 Compare W8, 0
	123 JumpIfEqual {170}
	124 Move V0, [X31+2]
	125 Move [X19+2], V0
	126 Move X8, [X20]
	127 Move X8, [X8+184]
	128 Move X8, [X8]
	129 Compare X8, 0
	130 JumpIfEqual {171}
	131 Move W9, [X8+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X1, [X8+40]
	134 Add X0, X31, 16
	135 Move X2, X31
	136 Move [X31+16], X31
	137 Move [X31+24], X31
	138 Call ShaderKeyword..ctor, X0, X1
	139 Move W8, [X19+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move V0, [X31+1]
	142 Move [X19+3], V0
	143 Move X8, [X20]
	144 Move X8, [X8+184]
	145 Move X8, [X8]
	146 Compare X8, 0
	147 JumpIfEqual {171}
	148 Move W9, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X1, [X8+48]
	151 Add X0, X31, 0
	152 Move X2, X31
	153 Move [X31], X31
	154 Move [X31+8], X31
	155 Call ShaderKeyword..ctor, X0, X1
	156 Move W8, [X19+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move V0, [X31]
	159 Move X22, [X31+64]
	160 Move X21, [X31+72]
	161 Move X30, [X31+48]
	162 Move [X19+4], V0
	163 Move X8, [X20]
	164 Move X8, [X8+184]
	165 Move [X8+16], X19
	166 Move X20, [X31+80]
	167 Move X19, [X31+88]
	168 Add X31, X31, 96
	169 Return 
	170 Call 0x1C17F28
	171 Call 0x1C17F20

