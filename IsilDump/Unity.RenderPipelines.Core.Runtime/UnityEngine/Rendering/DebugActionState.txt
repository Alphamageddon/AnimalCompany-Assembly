Type: UnityEngine.Rendering.DebugActionState

Method: System.Boolean get_runningAction()

Disassembly:
	0x039ACB84 LDR X0, [X0 + 0xA88]
	0x039ACB88 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_runningAction(System.Boolean value)

Disassembly:
	0x039ACB8C ADRP X0, 0x749000
	0x039ACB90 LDR X0, [X0 + 0x9B0]
	0x039ACB94 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+44], W8
	003 Return 

Method: System.Single get_actionState()

Disassembly:
	0x039ACB98 MOVZ W8, 0x1
	0x039ACB9C STRB W8, [X19 + 0xBF3]

ISIL:
	001 Move V0, [X0+48]
	002 Return V0

Method: System.Void set_actionState(System.Single value)

Disassembly:
	0x039ACBA0 LDR X0, [X26]
	0x039ACBA4 CBZ X0, 0x39AD450

ISIL:
	001 Move [X0+48], S0
	002 Return 

Method: System.Void Trigger(System.Int32 triggerCount, System.Single state)

Disassembly:
	0x039ACBA8 ADRP X22, 0x749000
	0x039ACBAC LDR X22, [X22 + 0x9B0]
	0x039ACBB0 MOV X1, X31
	0x039ACBB4 BL 0x3C19C94
	0x039ACBB8 ADD W25, W21, 0x1
	0x039ACBBC LDR X0, [X22]
	0x039ACBC0 ADD W8, W25, W21
	0x039ACBC4 UBFM W8, W8, 0x1F, 0x1E
	0x039ACBC8 ADD W1, W8, 0x2
	0x039ACBCC BL 0x1C16D6C
	0x039ACBD0 CBZ X0, 0x39AD450
	0x039ACBD4 LDR X8, [X0 + 0x18]
	0x039ACBD8 MOV X20, X0
	0x039ACBDC CBZ W8, 0x39AD260
	0x039ACBE0 CMP W21, 0x1
	0x039ACBE4 SCVTF S11, W21
	0x039ACBE8 STR X31, [X20 + 0x20]
	0x039ACBEC STR W31, [X20 + 0x28]
	0x039ACBF0 B.LT 0x39ACC70
	0x039ACBF4 CMP W8, 0x2
	0x039ACBF8 B.CC 0x39AD260
	0x039ACBFC ADRP X8, 0xFFFFFFFFFD13E000
	0x039ACC00 LDR V12, [X8 + 0x6C]
	0x039ACC04 FMOV S0, 1
	0x039ACC08 MOVZ W23, 0x2
	0x039ACC0C MOVZ W24, 0x1
	0x039ACC10 MOVZ W19, 0xC
	0x039ACC14 FDIV S0, S0, S11
	0x039ACC18 FMUL S0, S0, S12
	0x039ACC1C ADD X0, X31, 0x3C
	0x039ACC20 ADD X1, X31, 0x38
	0x039ACC24 BL 0x3EB1BC0
	0x039ACC28 LDP S0, S1, [X31 + 0x38]
	0x039ACC2C NOP
	0x039ACC30 MADD X8, X24, X19, X20
	0x039ACC34 STR W31, [X8 + 0x28]
	0x039ACC38 CMP W23, W21
	0x039ACC3C FMUL S0, S0, S8
	0x039ACC40 FMUL S1, S1, S8
	0x039ACC44 STP S1, S0, [X8 + 0x20]
	0x039ACC48 LDR X8, [X20 + 0x18]
	0x039ACC4C B.GT 0x39ACC6C
	0x039ACC50 CMP W23, W8
	0x039ACC54 ADD W8, W23, 0x1
	0x039ACC58 SCVTF S0, W23
	0x039ACC5C SXTW X24, W23

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA36000
	008 Move X21, 0x74A000
	009 Move W8, [X22+3053]
	010 Move X21, [X21+2488]
	011 Move V8, V0
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x74A000
	019 Move X0, [X0+2488]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3053], W8
	023 Move W8, 1
	024 Move [X19+48], S8
	025 Move [X19+44], W8
	026 Move [X19+40], W31
	027 Move X0, [X21]
	028 Move W1, W20
	029 Call 0x1C17D6C
	030 Move [X19+32], X0
	031 Compare X0, 0
	032 JumpIfEqual {53}
	033 Move W8, [X0+24]
	034 Move X9, X8
	035 ShiftRight X9, 32
	036 And X9, X9, 0x7FFFFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, X31
	039 Move X10, W8
	040 Add X11, X0, 32
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X11], W31
	043 Add X9, X9, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+8]
	050 Move V8, [X31+48]
	051 Return 
	052 Call 0x1C17F28
	053 Call 0x1C17F20

Method: System.Void TriggerWithButton(UnityEngine.InputSystem.InputAction action, System.Single state)

Disassembly:
	0x039A8FE0 MOV X3, X31
	0x039A8FE4 MOV X4, X31
	0x039A8FE8 MOV X5, X31
	0x039A8FEC STR V0, [X31 + 0x2]
	0x039A8FF0 BL 0x374A2F4
	0x039A8FF4 LDP X20, X19, [X31 + 0x90]
	0x039A8FF8 LDP X22, X21, [X31 + 0x80]
	0x039A8FFC LDP X24, X23, [X31 + 0x70]
	0x039A9000 LDP X26, X25, [X31 + 0x60]
	0x039A9004 LDP X28, X27, [X31 + 0x50]
	0x039A9008 LDP X29, X30, [X31 + 0x40]
	0x039A900C ADD X31, X31, 0xA0
	0x039A9010 RET
	0x039A9014 STR X30, [X31 - 0x20]!
	0x039A9018 STP X20, X19, [X31 + 0x10]
	0x039A901C ADRP X20, 0xA38000
	0x039A9020 LDRB W8, [X20 + 0xBC9]
	0x039A9024 MOV X19, X0
	0x039A9028 TBNZ X8, 0x0, 0x39A904C
	0x039A902C ADRP X0, 0x7A8000
	0x039A9030 LDR X0, [X0 + 0xA40]
	0x039A9034 BL 0x1C16CF4
	0x039A9038 ADRP X0, 0x7A8000
	0x039A903C LDR X0, [X0 + 0xA48]
	0x039A9040 BL 0x1C16CF4
	0x039A9044 MOVZ W8, 0x1
	0x039A9048 STRB W8, [X20 + 0xBC9]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA3A000
	007 Move W8, [X21+3054]
	008 Move V8, V0
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x772000
	016 Move X0, [X0+4072]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3054], W8
	020 Move [X19+24], X20
	021 Compare X20, 0
	022 JumpIfEqual {38}
	023 Move X0, X20
	024 Move X1, X31
	025 Call InputAction.get_bindings, X0
	026 Move X0, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Move X1, X1
	032 ShiftRight X1, 32
	033 And X1, X1, 0x7FFFFFFF
	034 Move V0, V8
	035 Move V8, [X31+48]
	036 Call DebugActionState.Trigger, X0, X1, V0
	037 Return 
	038 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x039ACC60 MOV W23, W8
	0x039ACC64 B.CC 0x39ACC14
	0x039ACC68 B 0x39AD260
	0x039ACC6C B 0x39ACC74

ISIL:
	001 Move [X0+44], W31
	002 Move [X0+40], W31
	003 Move [X0+32], X31
	004 Return 

Method: System.Void Update(UnityEngine.Rendering.DebugActionDesc desc)

Disassembly:
	0x039A90B0 RET
	0x039A90B4 STR X30, [X31 - 0x40]!
	0x039A90B8 STP X24, X23, [X31 + 0x10]
	0x039A90BC STP X22, X21, [X31 + 0x20]
	0x039A90C0 STP X20, X19, [X31 + 0x30]
	0x039A90C4 ADRP X21, 0xA38000
	0x039A90C8 LDRB W8, [X21 + 0xBCA]
	0x039A90CC MOV X19, X1
	0x039A90D0 MOV X20, X0
	0x039A90D4 TBNZ X8, 0x0, 0x39A90EC
	0x039A90D8 ADRP X0, 0x74A000
	0x039A90DC LDR X0, [X0 + 0xD28]
	0x039A90E0 BL 0x1C16CF4
	0x039A90E4 MOVZ W8, 0x1
	0x039A90E8 STRB W8, [X21 + 0xBCA]
	0x039A90EC ADRP X24, 0x74A000
	0x039A90F0 LDR X21, [X20 + 0x38]!
	0x039A90F4 LDR X24, [X24 + 0xD28]
	0x039A90F8 MOV X0, X21
	0x039A90FC MOV X1, X19
	0x039A9100 MOV X2, X31
	0x039A9104 BL 0x33C0DE4
	0x039A9108 CBZ X0, 0x39A9128
	0x039A910C LDR X23, [X24]
	0x039A9110 MOV X22, X0
	0x039A9114 MOV X1, X23
	0x039A9118 BL 0x1C16E00
	0x039A911C MOV X1, X0
	0x039A9120 CBNZ X0, 0x39A912C
	0x039A9124 B 0x39A9158
	0x039A9128 MOV X1, X31
	0x039A912C MOV X0, X20
	0x039A9130 MOV X2, X21
	0x039A9134 BL 0x1C24138
	0x039A9138 CMP X21, X0
	0x039A913C MOV X21, X0
	0x039A9140 B.NE 0x39A90F8
	0x039A9144 LDP X20, X19, [X31 + 0x30]
	0x039A9148 LDP X22, X21, [X31 + 0x20]
	0x039A914C LDP X24, X23, [X31 + 0x10]
	0x039A9150 LDR X30, [X31], #0x40
	0x039A9154 RET
	0x039A9158 MOV X0, X22
	0x039A915C MOV X1, X23
	0x039A9160 BL 0x1C171E0
	0x039A9164 STR X30, [X31 - 0x40]!
	0x039A9168 STP X24, X23, [X31 + 0x10]
	0x039A916C STP X22, X21, [X31 + 0x20]
	0x039A9170 STP X20, X19, [X31 + 0x30]
	0x039A9174 ADRP X21, 0xA38000
	0x039A9178 LDRB W8, [X21 + 0xBCB]
	0x039A917C MOV X19, X1
	0x039A9180 MOV X20, X0
	0x039A9184 TBNZ X8, 0x0, 0x39A919C
	0x039A9188 ADRP X0, 0x74A000
	0x039A918C LDR X0, [X0 + 0xD28]
	0x039A9190 BL 0x1C16CF4
	0x039A9194 MOVZ W8, 0x1
	0x039A9198 STRB W8, [X21 + 0xBCB]
	0x039A919C ADRP X24, 0x74A000
	0x039A91A0 LDR X21, [X20 + 0x38]!
	0x039A91A4 LDR X24, [X24 + 0xD28]
	0x039A91A8 MOV X0, X21
	0x039A91AC MOV X1, X19
	0x039A91B0 MOV X2, X31
	0x039A91B4 BL 0x33C0FDC
	0x039A91B8 CBZ X0, 0x39A91D8
	0x039A91BC LDR X23, [X24]
	0x039A91C0 MOV X22, X0
	0x039A91C4 MOV X1, X23
	0x039A91C8 BL 0x1C16E00
	0x039A91CC MOV X1, X0
	0x039A91D0 CBNZ X0, 0x39A91DC
	0x039A91D4 B 0x39A9208
	0x039A91D8 MOV X1, X31
	0x039A91DC MOV X0, X20
	0x039A91E0 MOV X2, X21
	0x039A91E4 BL 0x1C24138
	0x039A91E8 CMP X21, X0
	0x039A91EC MOV X21, X0
	0x039A91F0 B.NE 0x39A91A8
	0x039A91F4 LDP X20, X19, [X31 + 0x30]
	0x039A91F8 LDP X22, X21, [X31 + 0x20]
	0x039A91FC LDP X24, X23, [X31 + 0x10]
	0x039A9200 LDR X30, [X31], #0x40
	0x039A9204 RET
	0x039A9208 MOV X0, X22
	0x039A920C MOV X1, X23
	0x039A9210 BL 0x1C171E0
	0x039A9214 STR X30, [X31 - 0x30]!
	0x039A9218 STP X22, X21, [X31 + 0x10]
	0x039A921C STP X20, X19, [X31 + 0x20]
	0x039A9220 ADRP X21, 0xA38000
	0x039A9224 LDRB W8, [X21 + 0xBCC]
	0x039A9228 MOV X19, X1
	0x039A922C MOV X20, X0
	0x039A9230 TBNZ X8, 0x0, 0x39A9248
	0x039A9234 ADRP X0, 0x74B000
	0x039A9238 LDR X0, [X0 + 0xE70]
	0x039A923C BL 0x1C16CF4
	0x039A9240 MOVZ W8, 0x1
	0x039A9244 STRB W8, [X21 + 0xBCC]
	0x039A9248 ADRP X22, 0x74B000
	0x039A924C LDR X21, [X20 + 0x40]!
	0x039A9250 LDR X22, [X22 + 0xE70]

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0xA39000
	016 Move W8, [X21+3055]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x751000
	024 Move X0, [X0+2240]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3055], W8
	028 Move X8, [X19+32]
	029 Move [X19+48], W31
	030 Compare X8, 0
	031 JumpIfEqual {102}
	032 Move V8, [X19+40]
	033 Move X0, X31
	034 Call Time.get_deltaTime
	035 Move X8, [X19+32]
	036 Add S0, S8, S0
	037 Move [X19+40], S0
	038 Compare X8, 0
	039 JumpIfEqual {86}
	040 Move X23, 0x751000
	041 Move X21, 0x752000
	042 Move X9, -49012736
	043 Move X23, [X23+2240]
	044 Move X21, [X21+1208]
	045 Move V9, [X9+576]
	046 Move X22, X31
	047 Move X24, 0xA31000
	048 Move W25, 1
	049 Move S10, W31
	050 Move S11, 8
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X19+24]
	054 Compare X0, 0
	055 JumpIfEqual {83}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add X26, X8, X22
	058 Move X1, [X23]
	059 Move W27, [X26+32]
	060 Call InputAction.ReadValue, X0
	061 Move W8, [X24+1450]
	062 Move V8, V0
	063 Compare W8, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X21
	066 Call 0x1C17CF4
	067 Move [X24+1450], W25
	068 Move X8, [X21]
	069 NotImplemented "Instruction FABS not yet implemented."
	070 NotImplemented "Instruction FMAXNM not yet implemented."
	071 Multiply S1, S1, S9
	072 Move X8, [X8+184]
	073 Move V0, [X8]
	074 Multiply S0, S0, S11
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction FCSEL not yet implemented."
	077 NotImplemented "Instruction FABD not yet implemented."
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Or W8, W27, W8
	081 Move [X26+32], W8
	082 Move X8, [X19+32]
	083 Add X22, X22, 1
	084 Compare X8, 0
	085 JumpIfNotEqual {51}
	086 Call 0x1C17F20
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X10, X8, 32
	089 Move W8, 1
	090 Move W11, [X10+1]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 Subtract X9, X9, 1
	094 And W8, W8, W11
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {117}
	099 Move [X19+44], W31
	100 Move [X19+40], W31
	101 Move [X19+32], X31
	102 Move X20, [X31+96]
	103 Move X19, [X31+104]
	104 Move X22, [X31+80]
	105 Move X21, [X31+88]
	106 Move X24, [X31+64]
	107 Move X23, [X31+72]
	108 Move X26, [X31+48]
	109 Move X25, [X31+56]
	110 Move X30, [X31+32]
	111 Move X27, [X31+40]
	112 Move D9, [X31+16]
	113 Move D8, [X31+24]
	114 Move D11, [X31+112]
	115 Move D10, [X31+120]
	116 Return 
	117 Compare X20, 0
	118 JumpIfEqual {86}
	119 Move V0, [X19+40]
	120 Move V1, [X20+28]
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 Move W8, [X20+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x039A8EA0 LDR X1, [X21]
	0x039A8EA4 LDR X9, [X9 + 0x1C0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

