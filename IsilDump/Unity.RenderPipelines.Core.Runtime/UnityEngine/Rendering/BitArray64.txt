Type: UnityEngine.Rendering.BitArray64

Method: System.UInt32 get_capacity()

Disassembly:
	0x039E0E00 MOVZ W9, 0x1
	0x039E0E04 LSLV X9, X9, X0

ISIL:
	001 Move W0, 64
	002 Return X0

Method: System.Boolean get_allFalse()

Disassembly:
	0x039E0E08 ANDS W31, W5, 0x1
	0x039E0E0C ORR X10, X8, X9, 0x0
	0x039E0E10 BIC X8, X8, X9, 0x0
	0x039E0E14 CSEL X8, X10, X8, NE

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_allTrue()

Disassembly:
	0x039E0E18 STR X8, [X1]
	0x039E0E1C RET
	0x039E0E20 CMP W0, 0x7F
	0x039E0E24 B.HI 0x39E0E4C

ISIL:
	001 Move X8, [X0]
	002 Add X31, X8, 1
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.String get_humanizedData()

Disassembly:
	0x039E0E28 LDR X8, [X2]
	0x039E0E2C MOVZ W9, 0x1
	0x039E0E30 LSLV X9, X9, X0
	0x039E0E34 ANDS W31, W5, 0x1
	0x039E0E38 ORR X10, X8, X9, 0x0
	0x039E0E3C BIC X8, X8, X9, 0x0
	0x039E0E40 CSEL X8, X10, X8, NE
	0x039E0E44 STR X8, [X2]
	0x039E0E48 RET
	0x039E0E4C CMP W0, 0xBF
	0x039E0E50 B.HI 0x39E0E6C
	0x039E0E54 LDR X8, [X3]
	0x039E0E58 MOVZ W9, 0x1
	0x039E0E5C LSLV X9, X9, X0
	0x039E0E60 TBZ X5, 0x0, 0x39E0E90
	0x039E0E64 ORR X8, X8, X9, 0x0
	0x039E0E68 B 0x39E0E94
	0x039E0E6C LDR X8, [X4]
	0x039E0E70 MOVZ W9, 0x1
	0x039E0E74 LSLV X9, X9, X0
	0x039E0E78 ANDS W31, W5, 0x1
	0x039E0E7C ORR X10, X8, X9, 0x0
	0x039E0E80 BIC X8, X8, X9, 0x0
	0x039E0E84 CSEL X8, X10, X8, NE
	0x039E0E88 STR X8, [X4]
	0x039E0E8C RET
	0x039E0E90 BIC X8, X8, X9, 0x0
	0x039E0E94 STR X8, [X3]
	0x039E0E98 RET
	0x039E0E9C STP X1, X2, [X0]
	0x039E0EA0 STP X3, X4, [X0 + 0x10]
	0x039E0EA4 RET
	0x039E0EA8 STR X30, [X31 - 0x50]!
	0x039E0EAC STP X26, X25, [X31 + 0x10]
	0x039E0EB0 STP X24, X23, [X31 + 0x20]
	0x039E0EB4 STP X22, X21, [X31 + 0x30]
	0x039E0EB8 STP X20, X19, [X31 + 0x40]
	0x039E0EBC ADRP X21, 0xA01000
	0x039E0EC0 LDRB W8, [X21 + 0xDC0]
	0x039E0EC4 MOV X19, X1
	0x039E0EC8 MOV X20, X0
	0x039E0ECC TBNZ X8, 0x0, 0x39E0EF0
	0x039E0ED0 ADRP X0, 0x773000
	0x039E0ED4 LDR X0, [X0 + 0x320]
	0x039E0ED8 BL 0x1C16CF4
	0x039E0EDC ADRP X0, 0x773000
	0x039E0EE0 LDR X0, [X0 + 0x328]
	0x039E0EE4 BL 0x1C16CF4
	0x039E0EE8 MOVZ W8, 0x1
	0x039E0EEC STRB W8, [X21 + 0xDC0]
	0x039E0EF0 MOVI V0.2D, 0x0
	0x039E0EF4 MOV X22, X20
	0x039E0EF8 MOV X23, X20
	0x039E0EFC STR V0, [X22 + 0x10]!
	0x039E0F00 STR V0, [X23], #0x8
	0x039E0F04 CBZ X19, 0x39E0FA4
	0x039E0F08 ADRP X8, 0x773000
	0x039E0F0C LDR X8, [X8 + 0x320]
	0x039E0F10 MOV X0, X19
	0x039E0F14 LDR X1, [X8]
	0x039E0F18 BL 0x21BE3F4
	0x039E0F1C SUBS W21, W0, 0x1
	0x039E0F20 B.MI 0x39E0FA4
	0x039E0F24 ADRP X25, 0x773000
	0x039E0F28 LDR X25, [X25 + 0x328]
	0x039E0F2C ADD X24, X20, 0x18
	0x039E0F30 MOVZ W26, 0x1
	0x039E0F34 LDR X2, [X25]
	0x039E0F38 MOV X0, X19
	0x039E0F3C MOV W1, W21
	0x039E0F40 BL 0x21C0E94
	0x039E0F44 SUBS W8, W0, 0x40
	0x039E0F48 B.CS 0x39E0F54
	0x039E0F4C MOV X8, X20
	0x039E0F50 B 0x39E0F8C
	0x039E0F54 CMP W0, 0x7F
	0x039E0F58 B.HI 0x39E0F68
	0x039E0F5C MOV W0, W8
	0x039E0F60 MOV X8, X23
	0x039E0F64 B 0x39E0F8C
	0x039E0F68 CMP W0, 0xBF
	0x039E0F6C B.HI 0x39E0F7C
	0x039E0F70 SUB W0, W0, 0x80
	0x039E0F74 MOV X8, X22
	0x039E0F78 B 0x39E0F8C
	0x039E0F7C CMP W0, 0xFF
	0x039E0F80 B.HI 0x39E0F9C
	0x039E0F84 SUB W0, W0, 0xC0
	0x039E0F88 MOV X8, X24
	0x039E0F8C LDR X9, [X8]
	0x039E0F90 LSLV X10, X26, X0
	0x039E0F94 ORR X9, X9, X10, 0x0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xA02000
	009 Move X21, 0x774000
	010 Move X22, 0x71F000
	011 Move X20, 0x71D000
	012 Move W8, [X23+3507]
	013 Move X21, [X21+792]
	014 Move X22, [X22+1752]
	015 Move X20, [X20+2536]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x71D000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0x71C000
	025 Move X0, [X0+1536]
	026 Call 0x1C17CF4
	027 Move X0, 0x71F000
	028 Move X0, [X0+1752]
	029 Call 0x1C17CF4
	030 Move X0, 0x774000
	031 Move X0, [X0+824]
	032 Call 0x1C17CF4
	033 Move X0, 0x774000
	034 Move X0, [X0+832]
	035 Call 0x1C17CF4
	036 Move X0, 0x774000
	037 Move X0, [X0+792]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+3507], W8
	041 Move W8, 64
	042 Add X0, X31, 12
	043 Move X1, X31
	044 Move [X31+12], W8
	045 Call UInt32.ToString, X0
	046 Move X8, [X21]
	047 Move X2, [X22]
	048 Move X1, X0
	049 Move X3, X31
	050 Move X0, X8
	051 Call String.Concat, X0, X1, X2
	052 Move X8, [X20]
	053 Move X20, [X19]
	054 Move X19, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move W1, 2
	061 Move X0, X20
	062 Move X2, X31
	063 Call Convert.ToString, X0, X1
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call String.Format, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {105}
	070 Move X19, 0x71C000
	071 Move X20, 0x774000
	072 Move X21, 0x774000
	073 Move X19, [X19+1536]
	074 Move X20, [X20+832]
	075 Move X21, [X21+824]
	076 Move W1, 32
	077 Move W2, 48
	078 Move X3, X31
	079 Call String.Replace, X0, X1, X2
	080 Move X8, [X19]
	081 Move X19, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X1, [X20]
	088 Move X2, [X21]
	089 Move X0, X19
	090 Move X3, X31
	091 Call Regex.Replace, X0, X1, X2
	092 Compare X0, 0
	093 JumpIfEqual {105}
	094 Move W1, 46
	095 Move X2, X31
	096 Call String.TrimEnd, X0, X1
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X30, [X31+16]
	102 Move X23, [X31+24]
	103 Add X31, X31, 64
	104 Return X0
	105 Call 0x1C17F20

Method: System.Boolean get_Item(System.UInt32 index)

Disassembly:
	0x039E0F98 STR X9, [X8]
	0x039E0F9C SUBS W21, W21, 0x1
	0x039E0FA0 B.PL 0x39E0F34
	0x039E0FA4 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction LSRV not yet implemented."
	003 And W0, W8, 1
	004 Return X0

Method: System.Void set_Item(System.UInt32 index, System.Boolean value)

Disassembly:
	0x039E0FB4 LDR X30, [X31], #0x50
	0x039E0FB8 RET
	0x039E0FBC LDP V0, V1, [X0]
	0x039E0FC0 UNIMPLEMENTED
	0x039E0FC4 UNIMPLEMENTED
	0x039E0FC8 STP V0, V1, [X8]
	0x039E0FCC RET
	0x039E0FD0 LDP V0, V1, [X0]
	0x039E0FD4 LDP V2, V3, [X1]

ISIL:
	001 Move X8, [X0]
	002 Move W9, 1
	003 NotImplemented "Instruction LSLV not yet implemented."
	004 And W31, W2, 1
	005 Or X10, X8, X9
	006 NotImplemented "Instruction BIC not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Move [X0], X8
	009 Return 

Method: System.Void .ctor(System.UInt64 initValue)

Disassembly:
	0x039E0FFC RET
	0x039E1000 SUB X31, X31, 0x60

ISIL:
	001 Move [X0], X1
	002 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.UInt32> bitIndexTrue)

Disassembly:
	0x039E1004 STR X30, [X31 + 0x20]
	0x039E1008 STP X24, X23, [X31 + 0x30]
	0x039E100C STP X22, X21, [X31 + 0x40]
	0x039E1010 STP X20, X19, [X31 + 0x50]
	0x039E1014 ADRP X21, 0xA00000
	0x039E1018 LDRB W8, [X21 + 0xDC1]
	0x039E101C MOV X19, X1
	0x039E1020 MOV X20, X0
	0x039E1024 TBNZ X8, 0x0, 0x39E103C
	0x039E1028 ADRP X0, 0x772000
	0x039E102C LDR X0, [X0 + 0x368]
	0x039E1030 BL 0x1C16CF4
	0x039E1034 MOVZ W8, 0x1
	0x039E1038 STRB W8, [X21 + 0xDC1]
	0x039E103C CBZ X19, 0x39E10B4
	0x039E1040 ADRP X21, 0x772000
	0x039E1044 LDR X21, [X21 + 0x368]
	0x039E1048 LDR X8, [X19]
	0x039E104C LDR X1, [X21]
	0x039E1050 LDR X8, [X8 + 0x40]
	0x039E1054 LDR X9, [X1 + 0x40]
	0x039E1058 CMP X8, X9
	0x039E105C B.NE 0x39E10B8
	0x039E1060 LDP X22, X23, [X20]
	0x039E1064 LDP X24, X20, [X20 + 0x10]
	0x039E1068 MOV X0, X19
	0x039E106C BL 0x1C16E08
	0x039E1070 LDP X8, X9, [X0]
	0x039E1074 LDP X10, X11, [X0 + 0x10]
	0x039E1078 LDR X0, [X21]
	0x039E107C ADD X1, X31, 0x0
	0x039E1080 AND X8, X8, X22, 0x0
	0x039E1084 AND X9, X9, X23, 0x0
	0x039E1088 AND X10, X10, X24, 0x0
	0x039E108C AND X11, X11, X20, 0x0
	0x039E1090 STP X8, X9, [X31]
	0x039E1094 STP X10, X11, [X31 + 0x10]
	0x039E1098 BL 0x1C16E04
	0x039E109C LDP X20, X19, [X31 + 0x50]
	0x039E10A0 LDP X22, X21, [X31 + 0x40]
	0x039E10A4 LDP X24, X23, [X31 + 0x30]
	0x039E10A8 LDR X30, [X31 + 0x20]
	0x039E10AC ADD X31, X31, 0x60
	0x039E10B0 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xA01000
	008 Move W8, [X21+3508]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x773000
	016 Move X0, [X0+800]
	017 Call 0x1C17CF4
	018 Move X0, 0x773000
	019 Move X0, [X0+808]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3508], W8
	023 Move [X20], X31
	024 Compare X19, 0
	025 JumpIfEqual {45}
	026 Move X8, 0x773000
	027 Move X8, [X8+800]
	028 Move X0, X19
	029 Move X1, [X8]
	030 Call Enumerable.Count, X0
	031 Subtract W21, W0, 1
	032 Move X22, 0x773000
	033 Move X22, [X22+808]
	034 Move W23, 1
	035 Move X2, [X22]
	036 Move X0, X19
	037 Move W1, W21
	038 Call Enumerable.ElementAt, X0, X1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X20]
	041 NotImplemented "Instruction LSLV not yet implemented."
	042 Or X8, X8, X9
	043 Move [X20], X8
	044 Subtract W21, W21, 1
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Return 

Method: UnityEngine.Rendering.BitArray64 op_OnesComplement(UnityEngine.Rendering.BitArray64 a)

Disassembly:
	0x039E10B4 BL 0x1C16F20
	0x039E10B8 MOV X0, X19

ISIL:
	001 NotImplemented "Instruction ORN not yet implemented."
	002 Return X0

Method: UnityEngine.Rendering.BitArray64 op_BitwiseOr(UnityEngine.Rendering.BitArray64 a, UnityEngine.Rendering.BitArray64 b)

Disassembly:
	0x039E10BC BL 0x1C171E0
	0x039E10C0 SUB X31, X31, 0x60

ISIL:
	001 Or X0, X1, X0
	002 Return X0

Method: UnityEngine.Rendering.BitArray64 op_BitwiseAnd(UnityEngine.Rendering.BitArray64 a, UnityEngine.Rendering.BitArray64 b)

Disassembly:
	0x039E10C4 STR X30, [X31 + 0x20]
	0x039E10C8 STP X24, X23, [X31 + 0x30]

ISIL:
	001 And X0, X1, X0
	002 Return X0

Method: UnityEngine.Rendering.IBitArray BitAnd(UnityEngine.Rendering.IBitArray other)

Disassembly:
	0x039E10CC STP X22, X21, [X31 + 0x40]
	0x039E10D0 STP X20, X19, [X31 + 0x50]
	0x039E10D4 ADRP X21, 0xA00000
	0x039E10D8 LDRB W8, [X21 + 0xDC2]
	0x039E10DC MOV X19, X1
	0x039E10E0 MOV X20, X0
	0x039E10E4 TBNZ X8, 0x0, 0x39E10FC
	0x039E10E8 ADRP X0, 0x772000
	0x039E10EC LDR X0, [X0 + 0x368]
	0x039E10F0 BL 0x1C16CF4
	0x039E10F4 MOVZ W8, 0x1
	0x039E10F8 STRB W8, [X21 + 0xDC2]
	0x039E10FC CBZ X19, 0x39E1174
	0x039E1100 ADRP X21, 0x772000
	0x039E1104 LDR X21, [X21 + 0x368]
	0x039E1108 LDR X8, [X19]
	0x039E110C LDR X1, [X21]
	0x039E1110 LDR X8, [X8 + 0x40]
	0x039E1114 LDR X9, [X1 + 0x40]
	0x039E1118 CMP X8, X9
	0x039E111C B.NE 0x39E1178
	0x039E1120 LDP X22, X23, [X20]
	0x039E1124 LDP X24, X20, [X20 + 0x10]
	0x039E1128 MOV X0, X19
	0x039E112C BL 0x1C16E08
	0x039E1130 LDP X8, X9, [X0]
	0x039E1134 LDP X10, X11, [X0 + 0x10]
	0x039E1138 LDR X0, [X21]
	0x039E113C ADD X1, X31, 0x0
	0x039E1140 ORR X8, X8, X22, 0x0
	0x039E1144 ORR X9, X9, X23, 0x0
	0x039E1148 ORR X10, X10, X24, 0x0
	0x039E114C ORR X11, X11, X20, 0x0
	0x039E1150 STP X8, X9, [X31]
	0x039E1154 STP X10, X11, [X31 + 0x10]
	0x039E1158 BL 0x1C16E04
	0x039E115C LDP X20, X19, [X31 + 0x50]
	0x039E1160 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA01000
	007 Move W8, [X21+3509]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x773000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3509], W8
	019 Compare X19, 0
	020 JumpIfEqual {43}
	021 Move X21, 0x773000
	022 Move X21, [X21+856]
	023 Move X8, [X19]
	024 Move X1, [X21]
	025 Move X8, [X8+64]
	026 Move X9, [X1+64]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X20]
	029 Move X0, X19
	030 Call 0x1C17E08
	031 Move X8, [X0]
	032 Move X0, [X21]
	033 Add X1, X31, 8
	034 And X8, X8, X20
	035 Move [X31+8], X8
	036 Call 0x1C17E04
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, X19
	045 Call 0x1C181E0

Method: UnityEngine.Rendering.IBitArray BitOr(UnityEngine.Rendering.IBitArray other)

Disassembly:
	0x039E1164 LDP X24, X23, [X31 + 0x30]
	0x039E1168 LDR X30, [X31 + 0x20]
	0x039E116C ADD X31, X31, 0x60
	0x039E1170 RET
	0x039E1174 BL 0x1C16F20
	0x039E1178 MOV X0, X19
	0x039E117C BL 0x1C171E0
	0x039E1180 SUB X31, X31, 0x40
	0x039E1184 STP X30, X21, [X31 + 0x20]
	0x039E1188 STP X20, X19, [X31 + 0x30]
	0x039E118C ADRP X21, 0xA00000
	0x039E1190 ADRP X20, 0x772000
	0x039E1194 LDRB W8, [X21 + 0xDC3]
	0x039E1198 LDR X20, [X20 + 0x368]
	0x039E119C MOV X19, X0
	0x039E11A0 TBNZ X8, 0x0, 0x39E11B8
	0x039E11A4 ADRP X0, 0x772000
	0x039E11A8 LDR X0, [X0 + 0x368]
	0x039E11AC BL 0x1C16CF4
	0x039E11B0 MOVZ W8, 0x1
	0x039E11B4 STRB W8, [X21 + 0xDC3]
	0x039E11B8 LDP V0, V1, [X19]
	0x039E11BC LDR X0, [X20]
	0x039E11C0 ADD X1, X31, 0x0
	0x039E11C4 UNIMPLEMENTED
	0x039E11C8 UNIMPLEMENTED
	0x039E11CC STP V0, V1, [X31]
	0x039E11D0 BL 0x1C16E04
	0x039E11D4 LDP X20, X19, [X31 + 0x30]
	0x039E11D8 LDP X30, X21, [X31 + 0x20]
	0x039E11DC ADD X31, X31, 0x40
	0x039E11E0 RET
	0x039E11E4 LDR X8, [X0]
	0x039E11E8 LDR X9, [X1]
	0x039E11EC CMP X8, X9
	0x039E11F0 B.NE 0x39E1228
	0x039E11F4 LDR X8, [X0 + 0x8]
	0x039E11F8 LDR X9, [X1 + 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA01000
	007 Move W8, [X21+3510]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x773000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3510], W8
	019 Compare X19, 0
	020 JumpIfEqual {43}
	021 Move X21, 0x773000
	022 Move X21, [X21+856]
	023 Move X8, [X19]
	024 Move X1, [X21]
	025 Move X8, [X8+64]
	026 Move X9, [X1+64]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X20]
	029 Move X0, X19
	030 Call 0x1C17E08
	031 Move X8, [X0]
	032 Move X0, [X21]
	033 Add X1, X31, 8
	034 Or X8, X8, X20
	035 Move [X31+8], X8
	036 Call 0x1C17E04
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20
	044 Move X0, X19
	045 Call 0x1C181E0

Method: UnityEngine.Rendering.IBitArray BitNot()

Disassembly:
	0x039E11FC CMP X8, X9
	0x039E1200 B.NE 0x39E1228
	0x039E1204 LDR X8, [X0 + 0x10]
	0x039E1208 LDR X9, [X1 + 0x10]
	0x039E120C CMP X8, X9
	0x039E1210 B.NE 0x39E1228
	0x039E1214 LDR X8, [X0 + 0x18]
	0x039E1218 LDR X9, [X1 + 0x18]
	0x039E121C CMP X8, X9
	0x039E1220 CSET W0, EQ
	0x039E1224 RET
	0x039E1228 MOV W0, W31
	0x039E122C RET
	0x039E1230 LDR X8, [X0]
	0x039E1234 LDR X9, [X1]
	0x039E1238 CMP X8, X9
	0x039E123C B.NE 0x39E1274
	0x039E1240 LDR X8, [X0 + 0x8]
	0x039E1244 LDR X9, [X1 + 0x8]
	0x039E1248 CMP X8, X9
	0x039E124C B.NE 0x39E1274
	0x039E1250 LDR X8, [X0 + 0x10]
	0x039E1254 LDR X9, [X1 + 0x10]
	0x039E1258 CMP X8, X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA01000
	007 Move X20, 0x773000
	008 Move W8, [X21+3511]
	009 Move X20, [X20+856]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x773000
	016 Move X0, [X0+856]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3511], W8
	020 Move X8, [X19]
	021 Move X0, [X20]
	022 Add X1, X31, 8
	023 NotImplemented "Instruction ORN not yet implemented."
	024 Move [X31+8], X8
	025 Call 0x1C17E04
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Add X31, X31, 48
	031 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.BitArray64 a, UnityEngine.Rendering.BitArray64 b)

Disassembly:
	0x039E125C B.NE 0x39E1274
	0x039E1260 LDR X8, [X0 + 0x18]
	0x039E1264 LDR X9, [X1 + 0x18]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Rendering.BitArray64 a, UnityEngine.Rendering.BitArray64 b)

Disassembly:
	0x039E1268 CMP X8, X9
	0x039E126C CSET W0, NE
	0x039E1270 RET

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x039E1274 MOVZ W0, 0x1
	0x039E1278 RET
	0x039E127C STR X30, [X31 - 0x30]!
	0x039E1280 STP X22, X21, [X31 + 0x10]
	0x039E1284 STP X20, X19, [X31 + 0x20]
	0x039E1288 ADRP X21, 0xA00000
	0x039E128C LDRB W8, [X21 + 0xDC4]
	0x039E1290 MOV X19, X1
	0x039E1294 MOV X20, X0
	0x039E1298 TBNZ X8, 0x0, 0x39E12B0
	0x039E129C ADRP X0, 0x772000
	0x039E12A0 LDR X0, [X0 + 0x368]
	0x039E12A4 BL 0x1C16CF4
	0x039E12A8 MOVZ W8, 0x1
	0x039E12AC STRB W8, [X21 + 0xDC4]
	0x039E12B0 CBZ X19, 0x39E1398
	0x039E12B4 ADRP X22, 0x772000
	0x039E12B8 LDR X22, [X22 + 0x368]
	0x039E12BC LDR X9, [X19]
	0x039E12C0 LDR X8, [X22]
	0x039E12C4 CMP X9, X8
	0x039E12C8 B.NE 0x39E1398
	0x039E12CC MOV X0, X19
	0x039E12D0 BL 0x1C16E08
	0x039E12D4 LDR X1, [X0]
	0x039E12D8 MOV X0, X20
	0x039E12DC MOV X2, X31
	0x039E12E0 BL 0x339A94C
	0x039E12E4 TBZ X0, 0x0, 0x39E1398
	0x039E12E8 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA01000
	006 Move W8, [X21+3512]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x773000
	014 Move X0, [X0+856]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3512], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x773000
	021 Move X8, [X8+856]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move X8, [X0]
	029 Move X9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x039E12EC LDR X1, [X22]
	0x039E12F0 LDR X8, [X8 + 0x40]
	0x039E12F4 LDR X9, [X1 + 0x40]
	0x039E12F8 CMP X8, X9
	0x039E12FC B.NE 0x39E13AC
	0x039E1300 MOV X0, X19
	0x039E1304 ADD X21, X20, 0x8
	0x039E1308 BL 0x1C16E08

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X31
	003 Call UInt64.GetHashCode, X0
	004 Move W8, 0x156D
	005 NotImplemented "Instruction MOVK not yet implemented."
	006 Add W0, W0, W8
	007 Move X30, [X31+16]
	008 Return X0

