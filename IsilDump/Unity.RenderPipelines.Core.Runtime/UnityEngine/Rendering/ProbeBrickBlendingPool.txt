Type: UnityEngine.Rendering.ProbeBrickBlendingPool

Method: System.Boolean get_isSupported()

Disassembly:
	0x039B9004 ADRP X0, 0x799000
	0x039B9008 LDR X0, [X0 + 0x2F8]
	0x039B900C BL 0x1C16CF4
	0x039B9010 ADRP X0, 0x799000
	0x039B9014 LDR X0, [X0 + 0x2A0]
	0x039B9018 BL 0x1C16CF4
	0x039B901C ADRP X0, 0x799000
	0x039B9020 LDR X0, [X0 + 0x300]
	0x039B9024 BL 0x1C16CF4
	0x039B9028 ADRP X0, 0x799000
	0x039B902C LDR X0, [X0 + 0x280]
	0x039B9030 BL 0x1C16CF4
	0x039B9034 ADRP X0, 0x799000
	0x039B9038 LDR X0, [X0 + 0x2C0]
	0x039B903C BL 0x1C16CF4
	0x039B9040 ADRP X0, 0x799000
	0x039B9044 LDR X0, [X0 + 0x308]
	0x039B9048 BL 0x1C16CF4
	0x039B904C ADRP X0, 0x799000
	0x039B9050 LDR X0, [X0 + 0x288]
	0x039B9054 BL 0x1C16CF4
	0x039B9058 ADRP X0, 0x799000
	0x039B905C LDR X0, [X0 + 0x290]
	0x039B9060 BL 0x1C16CF4
	0x039B9064 ADRP X0, 0x799000
	0x039B9068 LDR X0, [X0 + 0x310]
	0x039B906C BL 0x1C16CF4
	0x039B9070 ADRP X0, 0x799000
	0x039B9074 LDR X0, [X0 + 0x318]
	0x039B9078 BL 0x1C16CF4
	0x039B907C ADRP X0, 0x799000
	0x039B9080 LDR X0, [X0 + 0x320]
	0x039B9084 BL 0x1C16CF4
	0x039B9088 ADRP X0, 0x799000
	0x039B908C LDR X0, [X0 + 0x298]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA29000
	005 Move X19, 0x79A000
	006 Move W8, [X20+3190]
	007 Move X19, [X19+608]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x73B000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x79A000
	016 Move X0, [X0+608]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3190], W8
	020 Move X0, [X19]
	021 Move X20, 0x73B000
	022 Move W8, [X0+224]
	023 Move X20, [X20+1432]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X8, [X20]
	029 Move X9, [X0+184]
	030 Move W10, [X8+224]
	031 Move X19, [X9]
	032 Compare W10, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, X31
	040 Move X2, X31
	041 Move X30, [X31+32]
	042 Call Object.op_Inequality, X0, X1
	043 Return X0

Method: System.Void Initialize(in UnityEngine.Rendering.ProbeVolumeSystemParameters parameters)

Disassembly:
	0x039B9090 BL 0x1C16CF4
	0x039B9094 ADRP X0, 0x799000
	0x039B9098 LDR X0, [X0 + 0x2B0]
	0x039B909C BL 0x1C16CF4
	0x039B90A0 ADRP X0, 0x799000
	0x039B90A4 LDR X0, [X0 + 0x328]
	0x039B90A8 BL 0x1C16CF4
	0x039B90AC ADRP X0, 0x799000
	0x039B90B0 LDR X0, [X0 + 0x330]
	0x039B90B4 BL 0x1C16CF4
	0x039B90B8 MOVZ W8, 0x1
	0x039B90BC STRB W8, [X23 + 0xC7C]
	0x039B90C0 LDR X8, [X19]
	0x039B90C4 MOVN W9, 0x0
	0x039B90C8 MOV X1, X31
	0x039B90CC LDR X8, [X8 + 0xB8]
	0x039B90D0 STR W9, [X8 + 0x8]
	0x039B90D4 LDR X0, [X22]
	0x039B90D8 BL 0x3C124EC
	0x039B90DC LDR X8, [X19]
	0x039B90E0 MOV X1, X31
	0x039B90E4 LDR X8, [X8 + 0xB8]
	0x039B90E8 STR W0, [X8 + 0xC]
	0x039B90EC LDR X0, [X21]
	0x039B90F0 BL 0x3C124EC
	0x039B90F4 LDR X8, [X19]
	0x039B90F8 MOV X1, X31
	0x039B90FC LDR X8, [X8 + 0xB8]
	0x039B9100 STR W0, [X8 + 0x10]
	0x039B9104 LDR X0, [X20]
	0x039B9108 BL 0x3C124EC
	0x039B910C LDR X8, [X19]
	0x039B9110 MOV X1, X31
	0x039B9114 LDR X8, [X8 + 0xB8]
	0x039B9118 STR W0, [X8 + 0x14]
	0x039B911C LDR X0, [X29]
	0x039B9120 BL 0x3C124EC
	0x039B9124 LDR X8, [X19]
	0x039B9128 MOV X1, X31
	0x039B912C LDR X8, [X8 + 0xB8]
	0x039B9130 STR W0, [X8 + 0x18]
	0x039B9134 LDR X0, [X28]
	0x039B9138 BL 0x3C124EC
	0x039B913C LDR X8, [X19]
	0x039B9140 MOV X1, X31
	0x039B9144 LDR X8, [X8 + 0xB8]
	0x039B9148 STR W0, [X8 + 0x1C]
	0x039B914C LDR X0, [X27]
	0x039B9150 BL 0x3C124EC
	0x039B9154 LDR X8, [X19]
	0x039B9158 MOV X1, X31
	0x039B915C LDR X8, [X8 + 0xB8]
	0x039B9160 STR W0, [X8 + 0x20]
	0x039B9164 LDR X0, [X26]
	0x039B9168 BL 0x3C124EC
	0x039B916C LDR X8, [X19]
	0x039B9170 MOV X1, X31
	0x039B9174 LDR X8, [X8 + 0xB8]
	0x039B9178 STR W0, [X8 + 0x24]
	0x039B917C LDR X0, [X25]
	0x039B9180 BL 0x3C124EC
	0x039B9184 LDR X8, [X19]
	0x039B9188 MOV X1, X31
	0x039B918C LDR X8, [X8 + 0xB8]
	0x039B9190 STR W0, [X8 + 0x28]
	0x039B9194 LDR X0, [X24]
	0x039B9198 BL 0x3C124EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA29000
	006 Move X20, 0x79A000
	007 Move W8, [X21+3191]
	008 Move X20, [X20+608]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x73B000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x79A000
	018 Move X0, [X0+608]
	019 Call 0x1C17CF4
	020 Move X0, 0x79A000
	021 Move X0, [X0+616]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3191], W8
	025 Move X0, [X20]
	026 Move X21, [X19+40]
	027 Move X19, 0x73B000
	028 Move W8, [X0+224]
	029 Move X19, [X19+1432]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move [X8], X21
	036 Move X8, [X20]
	037 Move X0, [X19]
	038 Move X8, [X8+184]
	039 Move W9, [X0+224]
	040 Move X19, [X8]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X19
	045 Move X1, X31
	046 Call Object.op_Implicit, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {67}
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X0, [X8]
	059 Compare X0, 0
	060 JumpIfEqual {83}
	061 Move X8, 0x79A000
	062 Move X8, [X8+616]
	063 Move X2, X31
	064 Move X1, [X8]
	065 Call ComputeShader.FindKernel, X0, X1
	066 Move W19, W0
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W19, TEMP
	070 Move X0, [X20]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X20]
	076 Move X8, [X0+184]
	077 Move [X8+8], W19
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return 
	083 Call 0x1C17F20

Method: System.Boolean get_isAllocated()

Disassembly:
	0x039B919C LDR X8, [X19]
	0x039B91A0 MOV X1, X31
	0x039B91A4 LDR X8, [X8 + 0xB8]
	0x039B91A8 STR W0, [X8 + 0x2C]

ISIL:
	001 Move X8, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 get_estimatedVMemCost()

Disassembly:
	0x039B91AC ADRP X8, 0x799000
	0x039B91B0 LDR X8, [X8 + 0x320]
	0x039B91B4 LDR X0, [X8]
	0x039B91B8 BL 0x3C124EC
	0x039B91BC LDR X8, [X19]
	0x039B91C0 MOV X1, X31
	0x039B91C4 LDR X8, [X8 + 0xB8]
	0x039B91C8 STR W0, [X8 + 0x30]
	0x039B91CC ADRP X8, 0x799000
	0x039B91D0 LDR X8, [X8 + 0x2F0]
	0x039B91D4 LDR X0, [X8]
	0x039B91D8 BL 0x3C124EC
	0x039B91DC LDR X8, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X9, [X0+40]
	006 Compare X9, 0
	007 JumpIfEqual {14}
	008 Move W8, [X8+16]
	009 Move W9, [X9+16]
	010 Add W0, W9, W8
	011 Move W0, W31
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Int32 GetPoolWidth()

Disassembly:
	0x039B91E0 MOV X1, X31
	0x039B91E4 LDR X8, [X8 + 0xB8]
	0x039B91E8 STR W0, [X8 + 0x34]
	0x039B91EC ADRP X8, 0x799000
	0x039B91F0 LDR X8, [X8 + 0x2F8]
	0x039B91F4 LDR X0, [X8]
	0x039B91F8 BL 0x3C124EC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+88]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 GetPoolHeight()

Disassembly:
	0x039B91FC LDR X8, [X19]
	0x039B9200 MOV X1, X31
	0x039B9204 LDR X8, [X8 + 0xB8]
	0x039B9208 STR W0, [X8 + 0x38]
	0x039B920C ADRP X8, 0x799000
	0x039B9210 LDR X8, [X8 + 0x300]
	0x039B9214 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+92]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 GetPoolDepth()

Disassembly:
	0x039B9218 BL 0x3C124EC
	0x039B921C LDR X8, [X19]
	0x039B9220 MOV X1, X31
	0x039B9224 LDR X8, [X8 + 0xB8]
	0x039B9228 STR W0, [X8 + 0x3C]
	0x039B922C ADRP X8, 0x799000
	0x039B9230 LDR X8, [X8 + 0x2E8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+96]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.Rendering.ProbeVolumeBlendingTextureMemoryBudget memoryBudget, UnityEngine.Rendering.ProbeVolumeSHBands shBands)

Disassembly:
	0x039B9234 LDR X0, [X8]
	0x039B9238 BL 0x3C124EC
	0x039B923C LDR X8, [X19]
	0x039B9240 MOV X1, X31
	0x039B9244 LDR X8, [X8 + 0xB8]
	0x039B9248 STR W0, [X8 + 0x40]
	0x039B924C ADRP X8, 0x799000
	0x039B9250 LDR X8, [X8 + 0x2E0]
	0x039B9254 LDR X0, [X8]
	0x039B9258 BL 0x3C124EC
	0x039B925C LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+48], W20
	011 Move [X21+52], W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void AllocateResourcesIfNeeded()

Disassembly:
	0x039B9260 MOV X1, X31
	0x039B9264 LDR X8, [X8 + 0xB8]
	0x039B9268 STR W0, [X8 + 0x44]
	0x039B926C ADRP X8, 0x799000
	0x039B9270 LDR X8, [X8 + 0x2D8]
	0x039B9274 LDR X0, [X8]
	0x039B9278 BL 0x3C124EC
	0x039B927C LDR X8, [X19]
	0x039B9280 MOV X1, X31
	0x039B9284 LDR X8, [X8 + 0xB8]
	0x039B9288 STR W0, [X8 + 0x48]
	0x039B928C ADRP X8, 0x799000
	0x039B9290 LDR X8, [X8 + 0x2D0]
	0x039B9294 LDR X0, [X8]
	0x039B9298 BL 0x3C124EC
	0x039B929C LDR X8, [X19]
	0x039B92A0 MOV X1, X31
	0x039B92A4 LDR X8, [X8 + 0xB8]
	0x039B92A8 STR W0, [X8 + 0x4C]
	0x039B92AC ADRP X8, 0x799000
	0x039B92B0 LDR X8, [X8 + 0x2C8]
	0x039B92B4 LDR X0, [X8]
	0x039B92B8 BL 0x3C124EC
	0x039B92BC LDR X8, [X19]
	0x039B92C0 MOV X1, X31
	0x039B92C4 LDR X8, [X8 + 0xB8]
	0x039B92C8 STR W0, [X8 + 0x50]
	0x039B92CC ADRP X8, 0x799000
	0x039B92D0 LDR X8, [X8 + 0x310]
	0x039B92D4 LDR X0, [X8]
	0x039B92D8 BL 0x3C124EC
	0x039B92DC LDR X8, [X19]
	0x039B92E0 MOV X1, X31
	0x039B92E4 LDR X8, [X8 + 0xB8]
	0x039B92E8 STR W0, [X8 + 0x54]
	0x039B92EC ADRP X8, 0x799000
	0x039B92F0 LDR X8, [X8 + 0x328]
	0x039B92F4 LDR X0, [X8]
	0x039B92F8 BL 0x3C124EC
	0x039B92FC LDR X8, [X19]
	0x039B9300 MOV X1, X31
	0x039B9304 LDR X8, [X8 + 0xB8]
	0x039B9308 STR W0, [X8 + 0x58]
	0x039B930C ADRP X8, 0x799000
	0x039B9310 LDR X8, [X8 + 0x308]
	0x039B9314 LDR X0, [X8]
	0x039B9318 BL 0x3C124EC
	0x039B931C LDR X8, [X19]
	0x039B9320 MOV X1, X31
	0x039B9324 LDR X8, [X8 + 0xB8]
	0x039B9328 STR W0, [X8 + 0x5C]
	0x039B932C ADRP X8, 0x799000
	0x039B9330 LDR X8, [X8 + 0x318]
	0x039B9334 LDR X0, [X8]
	0x039B9338 BL 0x3C124EC
	0x039B933C LDR X8, [X19]
	0x039B9340 MOV X1, X31
	0x039B9344 LDR X8, [X8 + 0xB8]
	0x039B9348 STR W0, [X8 + 0x60]
	0x039B934C ADRP X8, 0x799000
	0x039B9350 LDR X8, [X8 + 0x330]
	0x039B9354 LDR X0, [X8]
	0x039B9358 BL 0x3C124EC
	0x039B935C LDR X8, [X19]
	0x039B9360 LDP X20, X19, [X31 + 0x50]
	0x039B9364 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA29000
	008 Move W8, [X20+3192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x79A000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move X0, 0x796000
	018 Move X0, [X0+72]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3192], W8
	022 Move X8, [X19+32]
	023 Compare X8, 0
	024 JumpIfNotEqual {73}
	025 Move X23, 0x79A000
	026 Move W20, [X19+48]
	027 Move W21, [X19+52]
	028 Move X23, [X23+624]
	029 Move X0, [X23]
	030 Call 0x1C17F10
	031 Move W1, W20
	032 Move W2, W21
	033 Move W3, W31
	034 Move X22, X0
	035 Call ProbeBrickPool..ctor, X0, X1, X2, X3
	036 Move [X19+32], X22
	037 Move X0, [X23]
	038 Move W20, [X19+48]
	039 Move W21, [X19+52]
	040 Call 0x1C17F10
	041 Move W1, W20
	042 Move W2, W21
	043 Move W3, W31
	044 Move X22, X0
	045 Call ProbeBrickPool..ctor, X0, X1, X2, X3
	046 Move X8, [X19+32]
	047 Move [X19+40], X22
	048 Compare X8, 0
	049 JumpIfEqual {80}
	050 Move W9, [X8+88]
	051 Move W10, [X8+92]
	052 Move W8, [X8+96]
	053 Add W11, W9, 511
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Add W11, W10, 3
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Add W11, W8, 3
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move X11, 0x796000
	063 Move X11, [X11+72]
	064 NotImplemented "Instruction SBFM not yet implemented."
	065 NotImplemented "Instruction SBFM not yet implemented."
	066 Multiply W9, W10, W9
	067 Move X0, [X11]
	068 NotImplemented "Instruction SBFM not yet implemented."
	069 Multiply W1, W9, W8
	070 Call 0x1C17D6C
	071 Move [X19+16], X0
	072 Move [X19+24], W31
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void Update(UnityEngine.Rendering.ProbeBrickPool/DataLocation source, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> srcLocations, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> dstLocations, System.Int32 destStartIndex, UnityEngine.Rendering.ProbeVolumeSHBands bands, System.Int32 state)

Disassembly:
	0x039B9368 LDP X24, X23, [X31 + 0x30]
	0x039B936C LDR X8, [X8 + 0xB8]
	0x039B9370 LDP X26, X25, [X31 + 0x20]
	0x039B9374 LDP X28, X27, [X31 + 0x10]
	0x039B9378 STR W0, [X8 + 0x64]
	0x039B937C LDP X29, X30, [X31], #0x60
	0x039B9380 RET
	0x039B9384 LDR W0, [X0 + 0x10]
	0x039B9388 RET
	0x039B938C STR W1, [X0 + 0x10]
	0x039B9390 RET
	0x039B9394 LDR X8, [X0 + 0x28]
	0x039B9398 LDR W1, [X0 + 0x30]
	0x039B939C MOV X0, X8
	0x039B93A0 RET
	0x039B93A4 LDUR X8, [X0 + 0x34]
	0x039B93A8 LDR W1, [X0 + 0x3C]
	0x039B93AC MOV X0, X8
	0x039B93B0 RET
	0x039B93B4 LDP W9, W8, [X0 + 0x28]
	0x039B93B8 UBFM X10, X1, 0x20, 0x3F
	0x039B93BC MADD W8, W8, W2, W10
	0x039B93C0 MADD W0, W8, W9, W1
	0x039B93C4 RET
	0x039B93C8 STP X30, X27, [X31 - 0x50]!
	0x039B93CC STP X26, X25, [X31 + 0x10]
	0x039B93D0 STP X24, X23, [X31 + 0x20]
	0x039B93D4 STP X22, X21, [X31 + 0x30]
	0x039B93D8 STP X20, X19, [X31 + 0x40]
	0x039B93DC ADRP X25, 0xA28000
	0x039B93E0 LDRB W8, [X25 + 0xC7D]
	0x039B93E4 MOV W20, W5
	0x039B93E8 MOV X24, X4
	0x039B93EC MOV X22, X3

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+168], X23
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, 40
	010 Move W9, 32
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Move X23, [X0]
	013 Move X22, X2
	014 Add X0, X31, 80
	015 Move W2, 80
	016 Move W19, W5
	017 Move W20, W4
	018 Move X21, X3
	019 Call 0x3EB2AC0
	020 Compare X23, 0
	021 JumpIfEqual {41}
	022 Add X0, X31, 0
	023 Add X1, X31, 80
	024 Move W2, 80
	025 Call 0x3EB2AC0
	026 Add X1, X31, 0
	027 Move X0, X23
	028 Move X2, X22
	029 Move X3, X21
	030 Move W4, W20
	031 Move W5, W19
	032 Call ProbeBrickPool.Update, X0, X1, X2, X3, X4, X5
	033 Move X20, [X31+192]
	034 Move X19, [X31+200]
	035 Move X22, [X31+176]
	036 Move X21, [X31+184]
	037 Move X30, [X31+160]
	038 Move X23, [X31+168]
	039 Add X31, X31, 208
	040 Return 
	041 Call 0x1C17F20

Method: System.Int32 DivRoundUp(System.Int32 x, System.Int32 y)

Disassembly:
	0x039B93F0 MOV X21, X2
	0x039B93F4 MOV X23, X1
	0x039B93F8 MOV X19, X0
	0x039B93FC TBNZ X8, 0x0, 0x39B9420

ISIL:
	001 Add W8, W0, W1
	002 Subtract W8, W8, 1
	003 NotImplemented "Instruction SDIV not yet implemented."
	004 Return X0

Method: System.Void PerformBlending(UnityEngine.Rendering.CommandBuffer cmd, System.Single factor, UnityEngine.Rendering.ProbeBrickPool dstPool)

Disassembly:
	0x039B9400 ADRP X0, 0x763000
	0x039B9404 LDR X0, [X0 + 0x4F0]
	0x039B9408 BL 0x1C16CF4
	0x039B940C ADRP X0, 0x763000
	0x039B9410 LDR X0, [X0 + 0xD08]
	0x039B9414 BL 0x1C16CF4
	0x039B9418 MOVZ W8, 0x1
	0x039B941C STRB W8, [X25 + 0xC7D]
	0x039B9420 ADRP X26, 0x763000
	0x039B9424 ADRP X25, 0x763000
	0x039B9428 LDR X26, [X26 + 0x4F0]
	0x039B942C LDR X25, [X25 + 0xD08]
	0x039B9430 MOV X0, X19
	0x039B9434 MOV X1, X31
	0x039B9438 BL 0x33BDD8C
	0x039B943C ADRP X27, 0xA28000
	0x039B9440 LDRB W8, [X27 + 0xCBA]
	0x039B9444 CBNZ W8, 0x39B945C
	0x039B9448 ADRP X0, 0x762000
	0x039B944C LDR X0, [X0 + 0x638]
	0x039B9450 BL 0x1C16CF4
	0x039B9454 MOVZ W8, 0x1
	0x039B9458 STRB W8, [X27 + 0xCBA]
	0x039B945C ADRP X8, 0x762000
	0x039B9460 LDR X8, [X8 + 0x638]
	0x039B9464 SUB W11, W24, W21
	0x039B9468 AND X9, X23, 0x0
	0x039B946C LDR X8, [X8]
	0x039B9470 LDR X8, [X8 + 0xB8]
	0x039B9474 LDR W10, [X8 + 0x14]
	0x039B9478 LDUR X8, [X8 + 0xC]
	0x039B947C STUR X23, [X19 + 0x34]
	0x039B9480 STP W21, W20, [X19 + 0x3C]
	0x039B9484 ADD W10, W10, W11
	0x039B9488 AND X11, X8, 0x0
	0x039B948C ADD X11, X11, X22
	0x039B9490 ADD X8, X8, X22
	0x039B9494 AND X11, X11, 0x0
	0x039B9498 SUB X8, X8, X23
	0x039B949C SUB X9, X11, X9
	0x039B94A0 UBFM X11, X9, 0x20, 0x3F
	0x039B94A4 BFM X9, X8, 0x0, 0x1F
	0x039B94A8 STR W10, [X19 + 0x30]
	0x039B94AC STR X9, [X19 + 0x28]
	0x039B94B0 LDR X0, [X26]
	0x039B94B4 MUL W8, W10, W8
	0x039B94B8 MUL W20, W8, W11
	0x039B94BC ADD W21, W20, W20, 0x1, LSL
	0x039B94C0 BL 0x1C16F10
	0x039B94C4 MOVZ W2, 0xC
	0x039B94C8 MOV W1, W20
	0x039B94CC MOV X3, X31
	0x039B94D0 MOV X22, X0
	0x039B94D4 BL 0x3C3AA2C
	0x039B94D8 STR X22, [X19 + 0x18]
	0x039B94DC LDR X0, [X25]
	0x039B94E0 MOV W1, W21
	0x039B94E4 BL 0x1C16D6C
	0x039B94E8 UBFM W8, W21, 0x1E, 0x1D
	0x039B94EC STR X0, [X19 + 0x20]
	0x039B94F0 STRB W31, [X19 + 0x44]
	0x039B94F4 STR W8, [X19 + 0x10]
	0x039B94F8 LDP X20, X19, [X31 + 0x40]
	0x039B94FC LDP X22, X21, [X31 + 0x30]
	0x039B9500 LDP X24, X23, [X31 + 0x20]
	0x039B9504 LDP X26, X25, [X31 + 0x10]
	0x039B9508 LDP X30, X27, [X31], #0x50
	0x039B950C RET
	0x039B9510 LDUR X8, [X0 + 0x34]
	0x039B9514 LDR W9, [X0 + 0x3C]
	0x039B9518 LDP W10, W11, [X0 + 0x28]
	0x039B951C AND X12, X8, 0x0
	0x039B9520 SUB X12, X1, X12
	0x039B9524 UBFM X12, X12, 0x20, 0x3F
	0x039B9528 SUB W9, W2, W9
	0x039B952C SUB W8, W1, W8
	0x039B9530 MADD W9, W11, W9, W12
	0x039B9534 MADD W0, W9, W10, W8
	0x039B9538 RET
	0x039B953C SUB X31, X31, 0x60
	0x039B9540 STR X30, [X31 + 0x20]
	0x039B9544 STP X24, X23, [X31 + 0x30]
	0x039B9548 STP X22, X21, [X31 + 0x40]
	0x039B954C STP X20, X19, [X31 + 0x50]
	0x039B9550 ADRP X23, 0xA28000
	0x039B9554 ADRP X22, 0x798000
	0x039B9558 LDRB W8, [X23 + 0xC7E]
	0x039B955C LDR X22, [X22 + 0xF48]
	0x039B9560 MOV X21, X2
	0x039B9564 MOV W20, W1
	0x039B9568 MOV X19, X0
	0x039B956C TBNZ X8, 0x0, 0x39B9590
	0x039B9570 ADRP X0, 0x799000
	0x039B9574 LDR X0, [X0 + 0x338]
	0x039B9578 BL 0x1C16CF4
	0x039B957C ADRP X0, 0x798000
	0x039B9580 LDR X0, [X0 + 0xF48]
	0x039B9584 BL 0x1C16CF4
	0x039B9588 MOVZ W8, 0x1
	0x039B958C STRB W8, [X23 + 0xC7E]
	0x039B9590 LDR X0, [X22]
	0x039B9594 STR X31, [X31 + 0x28]
	0x039B9598 LDR W24, [X21 + 0x8]
	0x039B959C ADRP X22, 0x799000
	0x039B95A0 LDR W8, [X0 + 0xE0]
	0x039B95A4 LDR X22, [X22 + 0x338]
	0x039B95A8 MOV W23, W24
	0x039B95AC CBNZ W8, 0x39B95B8
	0x039B95B0 BL 0x1C16DFC
	0x039B95B4 LDR W23, [X21 + 0x8]
	0x039B95B8 SCVTF S1, W24
	0x039B95BC FMOV S0, 3
	0x039B95C0 BL 0x3EB1B50
	0x039B95C4 MOVZ W9, 0x7F800000
	0x039B95C8 STR W23, [X31 + 0x1C]
	0x039B95CC FMOV S1, W9
	0x039B95D0 LDP W11, W9, [X21 + 0xC]
	0x039B95D4 LDR W12, [X21 + 0x14]
	0x039B95D8 FCVTZS W8, S0
	0x039B95DC MOVZ W10, 0x80000000
	0x039B95E0 FCMP S0, S1
	0x039B95E4 CSEL W8, W10, W8, EQ
	0x039B95E8 SDIV W10, W11, W8
	0x039B95EC SDIV W9, W9, W8
	0x039B95F0 SDIV W11, W12, W8
	0x039B95F4 BFM X10, X9, 0x20, 0x1F
	0x039B95F8 STR W11, [X31 + 0x8]
	0x039B95FC STR X10, [X31]
	0x039B9600 LDP W9, W10, [X21 + 0x18]
	0x039B9604 LDR W11, [X21 + 0x20]
	0x039B9608 LDR X0, [X22]
	0x039B960C SDIV W9, W9, W8
	0x039B9610 SDIV W10, W10, W8
	0x039B9614 BFM X9, X10, 0x20, 0x1F
	0x039B9618 STUR X9, [X31 + 0xC]
	0x039B961C SDIV W12, W11, W8
	0x039B9620 LDR W8, [X21]
	0x039B9624 STP W12, W8, [X31 + 0x14]
	0x039B9628 LDR W8, [X0 + 0xE0]
	0x039B962C CBNZ W8, 0x39B9634
	0x039B9630 BL 0x1C16DFC
	0x039B9634 ADD X0, X31, 0x0
	0x039B9638 ADD X1, X31, 0x28
	0x039B963C BL 0x39B96C4
	0x039B9640 LDR X13, [X31 + 0x28]
	0x039B9644 CBZ X13, 0x39B96C0
	0x039B9648 LDR X9, [X19 + 0x20]
	0x039B964C LDR W11, [X13 + 0x18]
	0x039B9650 ADD W10, W20, W20, 0x1, LSL
	0x039B9654 MOV X8, X31
	0x039B9658 UBFM X12, X10, 0x20, 0x1F
	0x039B965C ADD X13, X13, 0x20
	0x039B9660 MOVZ X14, 0x1
	0x039B9664 CMP X8, X11
	0x039B9668 B.CS 0x39B96BC
	0x039B966C CBZ X9, 0x39B96C0
	0x039B9670 LDR W15, [X9 + 0x18]
	0x039B9674 ADD X16, X10, X8
	0x039B9678 CMP X16, X15
	0x039B967C B.CS 0x39B96BC
	0x039B9680 LDR W15, [X13, X8, LSL #2]
	0x039B9684 ADD X8, X8, 0x1
	0x039B9688 ADD X16, X9, X12, 0x1E, ASR
	0x039B968C CMP X8, 0x3
	0x039B9690 ADD X12, X12, X14
	0x039B9694 STR W15, [X16 + 0x20]
	0x039B9698 B.NE 0x39B9664
	0x039B969C MOVZ W8, 0x1
	0x039B96A0 STRB W8, [X19 + 0x44]
	0x039B96A4 LDP X20, X19, [X31 + 0x50]
	0x039B96A8 LDP X22, X21, [X31 + 0x40]
	0x039B96AC LDP X24, X23, [X31 + 0x30]
	0x039B96B0 LDR X30, [X31 + 0x20]
	0x039B96B4 ADD X31, X31, 0x60
	0x039B96B8 RET
	0x039B96BC BL 0x1C16F28
	0x039B96C0 BL 0x1C16F20
	0x039B96C4 STR X30, [X31 - 0x30]!
	0x039B96C8 STP X22, X21, [X31 + 0x10]
	0x039B96CC STP X20, X19, [X31 + 0x20]
	0x039B96D0 ADRP X22, 0xA28000
	0x039B96D4 ADRP X21, 0x799000
	0x039B96D8 LDRB W8, [X22 + 0xC80]
	0x039B96DC LDR X21, [X21 + 0x338]
	0x039B96E0 MOV X20, X1
	0x039B96E4 MOV X19, X0
	0x039B96E8 TBNZ X8, 0x0, 0x39B9700
	0x039B96EC ADRP X0, 0x799000
	0x039B96F0 LDR X0, [X0 + 0x338]
	0x039B96F4 BL 0x1C16CF4
	0x039B96F8 MOVZ W8, 0x1
	0x039B96FC STRB W8, [X22 + 0xC80]
	0x039B9700 LDR X0, [X21]
	0x039B9704 LDR W8, [X0 + 0xE0]
	0x039B9708 CBNZ W8, 0x39B9714
	0x039B970C BL 0x1C16DFC
	0x039B9710 LDR X0, [X21]
	0x039B9714 LDR X8, [X0 + 0xB8]
	0x039B9718 MOV X10, X31
	0x039B971C LDR X8, [X8]
	0x039B9720 CMP X8, 0x0
	0x039B9724 CSET W12, EQ
	0x039B9728 ADD X11, X8, 0x20
	0x039B972C STR X8, [X20]
	0x039B9730 TBNZ X12, 0x0, 0x39B97D8
	0x039B9734 LDR W9, [X8 + 0x18]
	0x039B9738 CMP X10, X9
	0x039B973C B.CS 0x39B97DC
	0x039B9740 STR W31, [X11, X10, LSL #2]
	0x039B9744 ADD X10, X10, 0x1
	0x039B9748 CMP X10, 0x3
	0x039B974C MOV W12, W31
	0x039B9750 B.NE 0x39B9730
	0x039B9754 CBZ W9, 0x39B97DC
	0x039B9758 LDR W10, [X19 + 0x18]
	0x039B975C CMP W9, 0x1
	0x039B9760 AND W10, W10, 0x1FFFFFFF
	0x039B9764 STR W10, [X8 + 0x20]
	0x039B9768 LDR W11, [X19 + 0x1C]
	0x039B976C BFM W10, W11, 0x3, 0x2
	0x039B9770 STR W10, [X8 + 0x20]
	0x039B9774 B.EQ 0x39B97DC
	0x039B9778 LDR W10, [X19]
	0x039B977C CMP W9, 0x2
	0x039B9780 AND W10, W10, 0x3FF
	0x039B9784 STR W10, [X8 + 0x24]
	0x039B9788 LDR W11, [X19 + 0x4]
	0x039B978C BFM W10, W11, 0x16, 0x9
	0x039B9790 STR W10, [X8 + 0x24]
	0x039B9794 LDR W11, [X19 + 0x8]
	0x039B9798 BFM W10, W11, 0xC, 0x9
	0x039B979C STR W10, [X8 + 0x24]
	0x039B97A0 B.LS 0x39B97DC
	0x039B97A4 LDR W9, [X19 + 0xC]
	0x039B97A8 LDP X22, X21, [X31 + 0x10]
	0x039B97AC AND W9, W9, 0x3FF
	0x039B97B0 STR W9, [X8 + 0x28]
	0x039B97B4 LDR W10, [X19 + 0x10]
	0x039B97B8 BFM W9, W10, 0x16, 0x9
	0x039B97BC STR W9, [X8 + 0x28]
	0x039B97C0 LDR W10, [X19 + 0x14]
	0x039B97C4 LDP X20, X19, [X31 + 0x20]
	0x039B97C8 BFM W9, W10, 0xC, 0x9
	0x039B97CC STR W9, [X8 + 0x28]
	0x039B97D0 LDR X30, [X31], #0x30
	0x039B97D4 RET
	0x039B97D8 BL 0x1C16F20
	0x039B97DC BL 0x1C16F28
	0x039B97E0 STR X30, [X31 - 0x10]!
	0x039B97E4 LDR X8, [X0 + 0x20]
	0x039B97E8 CBZ X8, 0x39B983C
	0x039B97EC LDR W11, [X8 + 0x18]
	0x039B97F0 ADD W10, W1, W1, 0x1, LSL
	0x039B97F4 MOV X9, X31
	0x039B97F8 UBFM X12, X10, 0x20, 0x1F
	0x039B97FC MOVN W13, 0x0
	0x039B9800 MOVZ X14, 0x1
	0x039B9804 ADD X15, X10, X9
	0x039B9808 CMP X15, X11
	0x039B980C B.CS 0x39B9838
	0x039B9810 ADD X9, X9, 0x1
	0x039B9814 ADD X15, X8, X12, 0x1E, ASR
	0x039B9818 CMP X9, 0x3
	0x039B981C ADD X12, X12, X14
	0x039B9820 STR W13, [X15 + 0x20]
	0x039B9824 B.NE 0x39B9804
	0x039B9828 MOVZ W8, 0x1
	0x039B982C STRB W8, [X0 + 0x44]
	0x039B9830 LDR X30, [X31], #0x10
	0x039B9834 RET
	0x039B9838 BL 0x1C16F28
	0x039B983C BL 0x1C16F20
	0x039B9840 STP X30, X19, [X31 - 0x10]!
	0x039B9844 MOV X19, X0
	0x039B9848 LDR X0, [X0 + 0x18]
	0x039B984C CBZ X0, 0x39B9868
	0x039B9850 LDR X1, [X19 + 0x20]
	0x039B9854 MOV X2, X31
	0x039B9858 BL 0x3C3ACC4
	0x039B985C STRB W31, [X19 + 0x44]
	0x039B9860 LDP X30, X19, [X31], #0x10
	0x039B9864 RET
	0x039B9868 BL 0x1C16F20
	0x039B986C STR X30, [X31 - 0x20]!
	0x039B9870 STP X20, X19, [X31 + 0x10]
	0x039B9874 LDRB W8, [X0 + 0x44]
	0x039B9878 MOV X19, X0
	0x039B987C MOV X20, X1
	0x039B9880 CBZ W8, 0x39B988C
	0x039B9884 MOV X0, X19
	0x039B9888 BL 0x39B9840
	0x039B988C LDR X8, [X19 + 0x18]
	0x039B9890 STR X8, [X20 + 0x8]
	0x039B9894 LDP X20, X19, [X31 + 0x10]
	0x039B9898 LDR X30, [X31], #0x20
	0x039B989C RET
	0x039B98A0 STP X30, X21, [X31 - 0x20]!
	0x039B98A4 STP X20, X19, [X31 + 0x10]
	0x039B98A8 ADRP X21, 0xA28000
	0x039B98AC ADRP X20, 0x762000
	0x039B98B0 LDRB W8, [X21 + 0xC7F]
	0x039B98B4 LDR X20, [X20 + 0x8F8]
	0x039B98B8 MOV X19, X0
	0x039B98BC TBNZ X8, 0x0, 0x39B98D4
	0x039B98C0 ADRP X0, 0x762000
	0x039B98C4 LDR X0, [X0 + 0x8F8]
	0x039B98C8 BL 0x1C16CF4
	0x039B98CC MOVZ W8, 0x1
	0x039B98D0 STRB W8, [X21 + 0xC7F]
	0x039B98D4 LDR X0, [X20]
	0x039B98D8 LDR X20, [X19 + 0x18]
	0x039B98DC LDR W8, [X0 + 0xE0]
	0x039B98E0 CBNZ W8, 0x39B98E8
	0x039B98E4 BL 0x1C16DFC
	0x039B98E8 MOV X0, X20
	0x039B98EC MOV X1, X31
	0x039B98F0 BL 0x39E9814
	0x039B98F4 STR X31, [X19 + 0x18]
	0x039B98F8 LDP X20, X19, [X31 + 0x10]
	0x039B98FC LDP X30, X21, [X31], #0x20
	0x039B9900 RET
	0x039B9904 STP X30, X21, [X31 - 0x20]!
	0x039B9908 STP X20, X19, [X31 + 0x10]
	0x039B990C ADRP X20, 0xA28000
	0x039B9910 ADRP X21, 0x763000
	0x039B9914 ADRP X19, 0x799000
	0x039B9918 LDRB W8, [X20 + 0xC81]
	0x039B991C LDR X21, [X21 + 0xD08]
	0x039B9920 LDR X19, [X19 + 0x338]
	0x039B9924 TBNZ X8, 0x0, 0x39B9948
	0x039B9928 ADRP X0, 0x799000
	0x039B992C LDR X0, [X0 + 0x338]
	0x039B9930 BL 0x1C16CF4
	0x039B9934 ADRP X0, 0x763000
	0x039B9938 LDR X0, [X0 + 0xD08]
	0x039B993C BL 0x1C16CF4
	0x039B9940 MOVZ W8, 0x1
	0x039B9944 STRB W8, [X20 + 0xC81]
	0x039B9948 LDR X0, [X21]
	0x039B994C MOVZ W1, 0x3
	0x039B9950 BL 0x1C16D6C
	0x039B9954 LDR X8, [X19]
	0x039B9958 LDP X20, X19, [X31 + 0x10]
	0x039B995C LDR X8, [X8 + 0xB8]
	0x039B9960 STR X0, [X8]
	0x039B9964 LDP X30, X21, [X31], #0x20
	0x039B9968 RET
	0x039B996C LDR X9, [X0 + 0x78]
	0x039B9970 LDUR V0, [X0 + 0x68]
	0x039B9974 STR X9, [X8 + 0x10]
	0x039B9978 STR V0, [X8]
	0x039B997C RET
	0x039B9980 LDR X8, [X1 + 0x10]
	0x039B9984 LDR V0, [X1]
	0x039B9988 STR X8, [X0 + 0x78]
	0x039B998C STUR V0, [X0 + 0x68]
	0x039B9990 RET
	0x039B9994 LDRB W0, [X0 + 0x141]
	0x039B9998 RET
	0x039B999C LDRB W0, [X0 + 0x142]
	0x039B99A0 RET
	0x039B99A4 STR X30, [X31 - 0x20]!
	0x039B99A8 STP X20, X19, [X31 + 0x10]
	0x039B99AC ADRP X20, 0xA28000
	0x039B99B0 LDRB W8, [X20 + 0xC82]
	0x039B99B4 MOV X19, X0
	0x039B99B8 TBNZ X8, 0x0, 0x39B99D0
	0x039B99BC ADRP X0, 0x799000
	0x039B99C0 LDR X0, [X0 + 0x340]
	0x039B99C4 BL 0x1C16CF4
	0x039B99C8 MOVZ W8, 0x1
	0x039B99CC STRB W8, [X20 + 0xC82]
	0x039B99D0 LDR X8, [X19 + 0x240]
	0x039B99D4 CBZ X8, 0x39B99F0
	0x039B99D8 LDR W8, [X8 + 0x18]
	0x039B99DC LDP X20, X19, [X31 + 0x10]
	0x039B99E0 CMP W8, 0x0
	0x039B99E4 CSET W0, NE
	0x039B99E8 LDR X30, [X31], #0x20
	0x039B99EC RET
	0x039B99F0 BL 0x1C16F20
	0x039B99F4 STR X30, [X31 - 0x20]!
	0x039B99F8 STP X20, X19, [X31 + 0x10]
	0x039B99FC ADRP X20, 0xA28000
	0x039B9A00 LDRB W8, [X20 + 0xC83]
	0x039B9A04 MOV X19, X0
	0x039B9A08 TBNZ X8, 0x0, 0x39B9A20
	0x039B9A0C ADRP X0, 0x799000
	0x039B9A10 LDR X0, [X0 + 0x260]
	0x039B9A14 BL 0x1C16CF4
	0x039B9A18 MOVZ W8, 0x1
	0x039B9A1C STRB W8, [X20 + 0xC83]
	0x039B9A20 LDR W8, [X19 + 0x174]
	0x039B9A24 CBZ W8, 0x39B9A4C
	0x039B9A28 ADRP X8, 0x799000
	0x039B9A2C LDR X8, [X8 + 0x260]
	0x039B9A30 LDR X0, [X8]
	0x039B9A34 LDR W8, [X0 + 0xE0]
	0x039B9A38 CBNZ W8, 0x39B9A40
	0x039B9A3C BL 0x1C16DFC
	0x039B9A40 LDP X20, X19, [X31 + 0x10]
	0x039B9A44 LDR X30, [X31], #0x20
	0x039B9A48 B 0x39B8004
	0x039B9A4C LDP X20, X19, [X31 + 0x10]
	0x039B9A50 MOV W0, W31
	0x039B9A54 LDR X30, [X31], #0x20
	0x039B9A58 RET
	0x039B9A5C LDR W0, [X0 + 0x164]
	0x039B9A60 RET
	0x039B9A64 LDR W0, [X0 + 0x168]
	0x039B9A68 RET
	0x039B9A6C CMP W1, 0x1
	0x039B9A70 CSINC W8, W1, W31, GT
	0x039B9A74 STR W8, [X0 + 0x168]
	0x039B9A78 RET
	0x039B9A7C LDR V0, [X0 + 0x16C]
	0x039B9A80 RET
	0x039B9A84 FMOV S1, 1
	0x039B9A88 FCMP S0, 0x0
	0x039B9A8C FMIN S0, S0, S1
	0x039B9A90 FMOV S1, W31
	0x039B9A94 FCSEL S0, S0, S1, PL
	0x039B9A98 STR S0, [X0 + 0x16C]
	0x039B9A9C RET
	0x039B9AA0 LDR W0, [X0 + 0x178]
	0x039B9AA4 RET
	0x039B9AA8 STR X30, [X31 - 0x10]!
	0x039B9AAC LDR X8, [X0 + 0xF0]
	0x039B9AB0 CBZ X8, 0x39B9AC0
	0x039B9AB4 LDR X0, [X8 + 0x70]
	0x039B9AB8 LDR X30, [X31], #0x10
	0x039B9ABC RET
	0x039B9AC0 BL 0x1C16F20
	0x039B9AC4 STR X30, [X31 - 0x10]!
	0x039B9AC8 LDR X0, [X0 + 0xF0]
	0x039B9ACC CBZ X0, 0x39B9ADC
	0x039B9AD0 MOV X2, X31
	0x039B9AD4 LDR X30, [X31], #0x10
	0x039B9AD8 B 0x39C8154
	0x039B9ADC BL 0x1C16F20
	0x039B9AE0 STR X30, [X31 - 0x10]!
	0x039B9AE4 LDR X8, [X0 + 0xF0]
	0x039B9AE8 CBZ X8, 0x39B9AF8
	0x039B9AEC LDR V0, [X8 + 0x80]
	0x039B9AF0 LDR X30, [X31], #0x10
	0x039B9AF4 RET
	0x039B9AF8 BL 0x1C16F20
	0x039B9AFC STR X30, [X31 - 0x10]!
	0x039B9B00 LDR X0, [X0 + 0xF0]
	0x039B9B04 CBZ X0, 0x39B9B18
	0x039B9B08 LDR X1, [X0 + 0x78]
	0x039B9B0C MOV X2, X31
	0x039B9B10 LDR X30, [X31], #0x10
	0x039B9B14 B 0x39C5D20
	0x039B9B18 BL 0x1C16F20
	0x039B9B1C STR X30, [X31 - 0x10]!
	0x039B9B20 LDR X0, [X0 + 0xF0]
	0x039B9B24 CBZ X0, 0x39B9B34
	0x039B9B28 MOV X2, X31
	0x039B9B2C LDR X30, [X31], #0x10
	0x039B9B30 B 0x39C5D20
	0x039B9B34 BL 0x1C16F20
	0x039B9B38 LDR W0, [X0 + 0x170]
	0x039B9B3C RET
	0x039B9B40 LDR V0, [X0 + 0x17C]
	0x039B9B44 RET
	0x039B9B48 FMOV S1, 1
	0x039B9B4C FCMP S0, 0x0
	0x039B9B50 FMIN S0, S0, S1
	0x039B9B54 FMOV S1, W31
	0x039B9B58 FCSEL S0, S0, S1, PL
	0x039B9B5C STR S0, [X0 + 0x17C]
	0x039B9B60 RET
	0x039B9B64 LDR X0, [X0 + 0x188]
	0x039B9B68 RET
	0x039B9B6C STR X1, [X0 + 0x188]
	0x039B9B70 RET
	0x039B9B74 STP X30, X21, [X31 - 0x20]!
	0x039B9B78 STP X20, X19, [X31 + 0x10]
	0x039B9B7C ADRP X21, 0xA28000
	0x039B9B80 LDRB W8, [X21 + 0xC84]
	0x039B9B84 MOV X19, X1
	0x039B9B88 MOV X20, X0
	0x039B9B8C TBNZ X8, 0x0, 0x39B9BB0
	0x039B9B90 ADRP X0, 0x799000
	0x039B9B94 LDR X0, [X0 + 0x348]
	0x039B9B98 BL 0x1C16CF4
	0x039B9B9C ADRP X0, 0x799000
	0x039B9BA0 LDR X0, [X0 + 0x350]
	0x039B9BA4 BL 0x1C16CF4
	0x039B9BA8 MOVZ W8, 0x1
	0x039B9BAC STRB W8, [X21 + 0xC84]
	0x039B9BB0 LDR X0, [X20 + 0x188]
	0x039B9BB4 CBZ X0, 0x39B9C40
	0x039B9BB8 ADRP X8, 0x799000
	0x039B9BBC LDR X8, [X8 + 0x350]
	0x039B9BC0 MOV X1, X19
	0x039B9BC4 LDR X2, [X8]
	0x039B9BC8 BL 0x301C318
	0x039B9BCC TBNZ X0, 0x0, 0x39B9C18
	0x039B9BD0 LDR X0, [X20 + 0x188]
	0x039B9BD4 CBZ X0, 0x39B9C40
	0x039B9BD8 ADRP X9, 0x799000
	0x039B9BDC LDR X9, [X9 + 0x348]
	0x039B9BE0 LDR W10, [X0 + 0x1C]
	0x039B9BE4 LDR X8, [X0 + 0x10]
	0x039B9BE8 LDR X9, [X9]
	0x039B9BEC ADD W10, W10, 0x1
	0x039B9BF0 STR W10, [X0 + 0x1C]
	0x039B9BF4 CBZ X8, 0x39B9C40
	0x039B9BF8 LDRSW X10, [X0 + 0x18]
	0x039B9BFC LDR W11, [X8 + 0x18]
	0x039B9C00 CMP W10, W11
	0x039B9C04 B.CS 0x39B9C24
	0x039B9C08 ADD W9, W10, 0x1
	0x039B9C0C ADD X8, X8, X10, 0x3, LSL
	0x039B9C10 STR W9, [X0 + 0x18]
	0x039B9C14 STR X19, [X8 + 0x20]
	0x039B9C18 LDP X20, X19, [X31 + 0x10]
	0x039B9C1C LDP X30, X21, [X31], #0x20
	0x039B9C20 RET
	0x039B9C24 LDR X8, [X9 + 0x20]
	0x039B9C28 MOV X1, X19
	0x039B9C2C LDP X20, X19, [X31 + 0x10]
	0x039B9C30 LDR X8, [X8 + 0xC0]
	0x039B9C34 LDR X2, [X8 + 0x70]
	0x039B9C38 LDP X30, X21, [X31], #0x20
	0x039B9C3C B 0x301BF90
	0x039B9C40 BL 0x1C16F20
	0x039B9C44 STP X30, X21, [X31 - 0x20]!
	0x039B9C48 STP X20, X19, [X31 + 0x10]
	0x039B9C4C ADRP X21, 0xA28000
	0x039B9C50 LDRB W8, [X21 + 0xC85]
	0x039B9C54 MOV X19, X1
	0x039B9C58 MOV X20, X0
	0x039B9C5C TBNZ X8, 0x0, 0x39B9C74
	0x039B9C60 ADRP X0, 0x799000
	0x039B9C64 LDR X0, [X0 + 0x358]
	0x039B9C68 BL 0x1C16CF4
	0x039B9C6C MOVZ W8, 0x1
	0x039B9C70 STRB W8, [X21 + 0xC85]
	0x039B9C74 LDR X0, [X20 + 0x188]
	0x039B9C78 CBZ X0, 0x39B9C98
	0x039B9C7C ADRP X8, 0x799000
	0x039B9C80 LDR X8, [X8 + 0x358]
	0x039B9C84 MOV X1, X19
	0x039B9C88 LDP X20, X19, [X31 + 0x10]
	0x039B9C8C LDR X2, [X8]
	0x039B9C90 LDP X30, X21, [X31], #0x20
	0x039B9C94 B 0x301D7A8
	0x039B9C98 BL 0x1C16F20
	0x039B9C9C STR X30, [X31 - 0x20]!
	0x039B9CA0 STP X20, X19, [X31 + 0x10]
	0x039B9CA4 ADRP X20, 0xA28000
	0x039B9CA8 ADRP X19, 0x798000
	0x039B9CAC LDRB W8, [X20 + 0xC86]
	0x039B9CB0 LDR X19, [X19 + 0xF48]
	0x039B9CB4 TBNZ X8, 0x0, 0x39B9CCC
	0x039B9CB8 ADRP X0, 0x798000
	0x039B9CBC LDR X0, [X0 + 0xF48]
	0x039B9CC0 BL 0x1C16CF4
	0x039B9CC4 MOVZ W8, 0x1
	0x039B9CC8 STRB W8, [X20 + 0xC86]
	0x039B9CCC LDR X0, [X19]
	0x039B9CD0 LDR W8, [X0 + 0xE0]
	0x039B9CD4 CBNZ W8, 0x39B9CE0

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 1088
	015 Move X22, 0xA29000
	016 Move W8, [X22+3193]
	017 Move X21, X2
	018 Move V8, V0
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x79A000
	026 Move X0, [X0+608]
	027 Call 0x1C17CF4
	028 Move X0, 0x79A000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3193], W8
	033 Move W8, [X19+24]
	034 Compare W8, 0
	035 JumpIfEqual {616}
	036 Move X25, 0x79A000
	037 Move X25, [X25+608]
	038 Move X0, [X25]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X25]
	044 Move X8, [X19+32]
	045 Compare X8, 0
	046 JumpIfEqual {631}
	047 Move X9, [X0+184]
	048 Move X0, [X8+24]
	049 Add X8, X31, 1000
	050 Move X1, X31
	051 Move X22, [X9]
	052 Move W23, [X9+8]
	053 Move W24, [X9+20]
	054 Add X26, X31, 1000
	055 Call RenderTargetIdentifier.op_Implicit, X0
	056 Move V0, [X26]
	057 Move V1, [X26+16]
	058 Move X8, [X31+1032]
	059 Move [X31+65], V0
	060 Move [X31+66], V1
	061 Move [X31+1072], X8
	062 Compare X20, 0
	063 JumpIfEqual {631}
	064 Move V0, [X31+65]
	065 Move V1, [X31+66]
	066 Move X8, [X31+1072]
	067 Add X4, X31, 960
	068 Move X0, X20
	069 Move X1, X22
	070 Move W2, W23
	071 Move W3, W24
	072 Move X5, X31
	073 Move [X31+960], V0
	074 Move [X31+968], V1
	075 Move [X31+992], X8
	076 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	077 Move X8, [X19+32]
	078 Compare X8, 0
	079 JumpIfEqual {631}
	080 Move X9, [X25]
	081 Move X0, [X8+32]
	082 Add X8, X31, 1000
	083 Move X1, X31
	084 Move X9, [X9+184]
	085 Move W22, [X9+24]
	086 Move W23, [X9+8]
	087 Move X24, [X9]
	088 Call RenderTargetIdentifier.op_Implicit, X0
	089 Move V0, [X26]
	090 Move V1, [X26+16]
	091 Move X8, [X31+1032]
	092 Add X4, X31, 912
	093 Move X0, X20
	094 Move X1, X24
	095 Move W2, W23
	096 Move W3, W22
	097 Move X5, X31
	098 Move [X31+912], V0
	099 Move [X31+920], V1
	100 Move [X31+944], X8
	101 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	102 Move X8, [X19+32]
	103 Compare X8, 0
	104 JumpIfEqual {631}
	105 Move X9, [X25]
	106 Move X0, [X8+40]
	107 Add X8, X31, 1000
	108 Move X1, X31
	109 Move X9, [X9+184]
	110 Move W22, [X9+28]
	111 Move W23, [X9+8]
	112 Move X24, [X9]
	113 Call RenderTargetIdentifier.op_Implicit, X0
	114 Move V0, [X26]
	115 Move V1, [X26+16]
	116 Move X8, [X31+1032]
	117 Add X4, X31, 864
	118 Move X0, X20
	119 Move X1, X24
	120 Move W2, W23
	121 Move W3, W22
	122 Move X5, X31
	123 Move [X31+864], V0
	124 Move [X31+872], V1
	125 Move [X31+896], X8
	126 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	127 Move X8, [X19+40]
	128 Compare X8, 0
	129 JumpIfEqual {631}
	130 Move X9, [X25]
	131 Move X0, [X8+24]
	132 Add X8, X31, 1000
	133 Move X1, X31
	134 Move X9, [X9+184]
	135 Move W22, [X9+48]
	136 Move W23, [X9+8]
	137 Move X24, [X9]
	138 Call RenderTargetIdentifier.op_Implicit, X0
	139 Move V0, [X26]
	140 Move V1, [X26+16]
	141 Move X8, [X31+1032]
	142 Add X4, X31, 816
	143 Move X0, X20
	144 Move X1, X24
	145 Move W2, W23
	146 Move W3, W22
	147 Move X5, X31
	148 Move [X31+816], V0
	149 Move [X31+824], V1
	150 Move [X31+848], X8
	151 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	152 Move X8, [X19+40]
	153 Compare X8, 0
	154 JumpIfEqual {631}
	155 Move X9, [X25]
	156 Move X0, [X8+32]
	157 Add X8, X31, 1000
	158 Move X1, X31
	159 Move X9, [X9+184]
	160 Move W22, [X9+52]
	161 Move W23, [X9+8]
	162 Move X24, [X9]
	163 Call RenderTargetIdentifier.op_Implicit, X0
	164 Move V0, [X26]
	165 Move V1, [X26+16]
	166 Move X8, [X31+1032]
	167 Add X4, X31, 768
	168 Move X0, X20
	169 Move X1, X24
	170 Move W2, W23
	171 Move W3, W22
	172 Move X5, X31
	173 Move [X31+768], V0
	174 Move [X31+776], V1
	175 Move [X31+800], X8
	176 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	177 Move X8, [X19+40]
	178 Compare X8, 0
	179 JumpIfEqual {631}
	180 Move X9, [X25]
	181 Move X0, [X8+40]
	182 Add X8, X31, 1000
	183 Move X1, X31
	184 Move X9, [X9+184]
	185 Move W22, [X9+56]
	186 Move W23, [X9+8]
	187 Move X24, [X9]
	188 Call RenderTargetIdentifier.op_Implicit, X0
	189 Move V0, [X26]
	190 Move V1, [X26+16]
	191 Move X8, [X31+1032]
	192 Add X4, X31, 720
	193 Move X0, X20
	194 Move X1, X24
	195 Move W2, W23
	196 Move W3, W22
	197 Move X5, X31
	198 Move [X31+720], V0
	199 Move [X31+728], V1
	200 Move [X31+752], X8
	201 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	202 Compare X21, 0
	203 JumpIfEqual {631}
	204 Move X8, [X25]
	205 Move X0, [X21+24]
	206 Move X1, X31
	207 Move X8, [X8+184]
	208 Move W22, [X8+76]
	209 Move W23, [X8+8]
	210 Move X24, [X8]
	211 Add X8, X31, 1000
	212 Call RenderTargetIdentifier.op_Implicit, X0
	213 Move V0, [X26]
	214 Move V1, [X26+16]
	215 Move X8, [X31+1032]
	216 Add X4, X31, 672
	217 Move X0, X20
	218 Move X1, X24
	219 Move W2, W23
	220 Move W3, W22
	221 Move X5, X31
	222 Move [X31+672], V0
	223 Move [X31+680], V1
	224 Move [X31+704], X8
	225 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	226 Move X8, [X25]
	227 Move X0, [X21+32]
	228 Move X1, X31
	229 Move X8, [X8+184]
	230 Move X22, [X8]
	231 Move W23, [X8+8]
	232 Move W24, [X8+80]
	233 Add X8, X31, 1000
	234 Call RenderTargetIdentifier.op_Implicit, X0
	235 Move V0, [X26]
	236 Move V1, [X26+16]
	237 Move X8, [X31+1032]
	238 Add X4, X31, 624
	239 Move X0, X20
	240 Move X1, X22
	241 Move W2, W23
	242 Move W3, W24
	243 Move X5, X31
	244 Move [X31+624], V0
	245 Move [X31+632], V1
	246 Move [X31+656], X8
	247 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	248 Move X8, [X25]
	249 Move X0, [X21+40]
	250 Move X1, X31
	251 Move X8, [X8+184]
	252 Move X22, [X8]
	253 Move W23, [X8+8]
	254 Move W24, [X8+84]
	255 Add X8, X31, 1000
	256 Call RenderTargetIdentifier.op_Implicit, X0
	257 Move V0, [X26]
	258 Move V1, [X26+16]
	259 Move X8, [X31+1032]
	260 Add X4, X31, 576
	261 Move X0, X20
	262 Move X1, X22
	263 Move W2, W23
	264 Move W3, W24
	265 Move X5, X31
	266 Move [X31+576], V0
	267 Move [X31+584], V1
	268 Move [X31+608], X8
	269 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	270 Move X0, [X25]
	271 Move W22, [X19+52]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {277}
	275 Call 0x1C17DFC
	276 Move X0, [X25]
	277 Move X8, [X0+184]
	278 Move X0, [X8]
	279 Compare X0, 0
	280 JumpIfEqual {631}
	281 Move X8, 0x79A000
	282 Move X8, [X8+632]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X1, [X8]
	285 Move X2, X31
	286 Call ComputeShader.EnableKeyword, X0, X1
	287 Move X8, [X19+32]
	288 Compare X8, 0
	289 JumpIfEqual {631}
	290 Move X9, [X25]
	291 Move X0, [X8+48]
	292 Add X8, X31, 1040
	293 Move X1, X31
	294 Move X9, [X9+184]
	295 Move W22, [X9+32]
	296 Move W23, [X9+8]
	297 Move X24, [X9]
	298 Call RenderTargetIdentifier.op_Implicit, X0
	299 Move V0, [X31+65]
	300 Move V1, [X31+66]
	301 Move X8, [X31+1072]
	302 Add X4, X31, 528
	303 Move X0, X20
	304 Move X1, X24
	305 Move W2, W23
	306 Move W3, W22
	307 Move X5, X31
	308 Move [X31+528], V0
	309 Move [X31+536], V1
	310 Move [X31+560], X8
	311 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	312 Move X8, [X19+32]
	313 Compare X8, 0
	314 JumpIfEqual {631}
	315 Move X9, [X25]
	316 Move X0, [X8+56]
	317 Add X8, X31, 1040
	318 Move X1, X31
	319 Move X9, [X9+184]
	320 Move W22, [X9+36]
	321 Move W23, [X9+8]
	322 Move X24, [X9]
	323 Call RenderTargetIdentifier.op_Implicit, X0
	324 Move V0, [X31+65]
	325 Move V1, [X31+66]
	326 Move X8, [X31+1072]
	327 Add X4, X31, 480
	328 Move X0, X20
	329 Move X1, X24
	330 Move W2, W23
	331 Move W3, W22
	332 Move X5, X31
	333 Move [X31+480], V0
	334 Move [X31+488], V1
	335 Move [X31+512], X8
	336 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	337 Move X8, [X19+32]
	338 Compare X8, 0
	339 JumpIfEqual {631}
	340 Move X9, [X25]
	341 Move X0, [X8+64]
	342 Add X8, X31, 1040
	343 Move X1, X31
	344 Move X9, [X9+184]
	345 Move W22, [X9+40]
	346 Move W23, [X9+8]
	347 Move X24, [X9]
	348 Call RenderTargetIdentifier.op_Implicit, X0
	349 Move V0, [X31+65]
	350 Move V1, [X31+66]
	351 Move X8, [X31+1072]
	352 Add X4, X31, 432
	353 Move X0, X20
	354 Move X1, X24
	355 Move W2, W23
	356 Move W3, W22
	357 Move X5, X31
	358 Move [X31+432], V0
	359 Move [X31+440], V1
	360 Move [X31+464], X8
	361 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	362 Move X8, [X19+32]
	363 Compare X8, 0
	364 JumpIfEqual {631}
	365 Move X9, [X25]
	366 Move X0, [X8+72]
	367 Add X8, X31, 1040
	368 Move X1, X31
	369 Move X9, [X9+184]
	370 Move W22, [X9+44]
	371 Move W23, [X9+8]
	372 Move X24, [X9]
	373 Call RenderTargetIdentifier.op_Implicit, X0
	374 Move V0, [X31+65]
	375 Move V1, [X31+66]
	376 Move X8, [X31+1072]
	377 Add X4, X31, 384
	378 Move X0, X20
	379 Move X1, X24
	380 Move W2, W23
	381 Move W3, W22
	382 Move X5, X31
	383 Move [X31+384], V0
	384 Move [X31+392], V1
	385 Move [X31+416], X8
	386 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	387 Move X8, [X19+40]
	388 Compare X8, 0
	389 JumpIfEqual {631}
	390 Move X9, [X25]
	391 Move X0, [X8+48]
	392 Add X8, X31, 1040
	393 Move X1, X31
	394 Move X9, [X9+184]
	395 Move W22, [X9+60]
	396 Move W23, [X9+8]
	397 Move X24, [X9]
	398 Call RenderTargetIdentifier.op_Implicit, X0
	399 Move V0, [X31+65]
	400 Move V1, [X31+66]
	401 Move X8, [X31+1072]
	402 Add X4, X31, 336
	403 Move X0, X20
	404 Move X1, X24
	405 Move W2, W23
	406 Move W3, W22
	407 Move X5, X31
	408 Move [X31+336], V0
	409 Move [X31+344], V1
	410 Move [X31+368], X8
	411 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	412 Move X8, [X19+40]
	413 Compare X8, 0
	414 JumpIfEqual {631}
	415 Move X9, [X25]
	416 Move X0, [X8+56]
	417 Add X8, X31, 1040
	418 Move X1, X31
	419 Move X9, [X9+184]
	420 Move W22, [X9+64]
	421 Move W23, [X9+8]
	422 Move X24, [X9]
	423 Call RenderTargetIdentifier.op_Implicit, X0
	424 Move V0, [X31+65]
	425 Move V1, [X31+66]
	426 Move X8, [X31+1072]
	427 Add X4, X31, 288
	428 Move X0, X20
	429 Move X1, X24
	430 Move W2, W23
	431 Move W3, W22
	432 Move X5, X31
	433 Move [X31+288], V0
	434 Move [X31+296], V1
	435 Move [X31+320], X8
	436 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	437 Move X8, [X19+40]
	438 Compare X8, 0
	439 JumpIfEqual {631}
	440 Move X9, [X25]
	441 Move X0, [X8+64]
	442 Add X8, X31, 1040
	443 Move X1, X31
	444 Move X9, [X9+184]
	445 Move W22, [X9+68]
	446 Move W23, [X9+8]
	447 Move X24, [X9]
	448 Call RenderTargetIdentifier.op_Implicit, X0
	449 Move V0, [X31+65]
	450 Move V1, [X31+66]
	451 Move X8, [X31+1072]
	452 Add X4, X31, 240
	453 Move X0, X20
	454 Move X1, X24
	455 Move W2, W23
	456 Move W3, W22
	457 Move X5, X31
	458 Move [X31+240], V0
	459 Move [X31+248], V1
	460 Move [X31+272], X8
	461 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	462 Move X8, [X19+40]
	463 Compare X8, 0
	464 JumpIfEqual {631}
	465 Move X9, [X25]
	466 Move X0, [X8+72]
	467 Add X8, X31, 1040
	468 Move X1, X31
	469 Move X9, [X9+184]
	470 Move W22, [X9+72]
	471 Move W23, [X9+8]
	472 Move X24, [X9]
	473 Call RenderTargetIdentifier.op_Implicit, X0
	474 Move V0, [X31+65]
	475 Move V1, [X31+66]
	476 Move X8, [X31+1072]
	477 Add X4, X31, 192
	478 Move X0, X20
	479 Move X1, X24
	480 Move W2, W23
	481 Move W3, W22
	482 Move X5, X31
	483 Move [X31+192], V0
	484 Move [X31+200], V1
	485 Move [X31+224], X8
	486 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	487 Move X8, [X25]
	488 Move X0, [X21+48]
	489 Move X1, X31
	490 Move X8, [X8+184]
	491 Move X22, [X8]
	492 Move W23, [X8+8]
	493 Move W24, [X8+88]
	494 Add X8, X31, 1040
	495 Call RenderTargetIdentifier.op_Implicit, X0
	496 Move V0, [X31+65]
	497 Move V1, [X31+66]
	498 Move X8, [X31+1072]
	499 Add X4, X31, 144
	500 Move X0, X20
	501 Move X1, X22
	502 Move W2, W23
	503 Move W3, W24
	504 Move X5, X31
	505 Move [X31+144], V0
	506 Move [X31+152], V1
	507 Move [X31+176], X8
	508 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	509 Move X8, [X25]
	510 Move X0, [X21+56]
	511 Move X1, X31
	512 Move X8, [X8+184]
	513 Move X22, [X8]
	514 Move W23, [X8+8]
	515 Move W24, [X8+92]
	516 Add X8, X31, 1040
	517 Call RenderTargetIdentifier.op_Implicit, X0
	518 Move V0, [X31+65]
	519 Move V1, [X31+66]
	520 Move X8, [X31+1072]
	521 Add X4, X31, 96
	522 Move X0, X20
	523 Move X1, X22
	524 Move W2, W23
	525 Move W3, W24
	526 Move X5, X31
	527 Move [X31+96], V0
	528 Move [X31+104], V1
	529 Move [X31+128], X8
	530 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	531 Move X8, [X25]
	532 Move X0, [X21+64]
	533 Move X1, X31
	534 Move X8, [X8+184]
	535 Move X22, [X8]
	536 Move W23, [X8+8]
	537 Move W24, [X8+96]
	538 Add X8, X31, 1040
	539 Call RenderTargetIdentifier.op_Implicit, X0
	540 Move V0, [X31+65]
	541 Move V1, [X31+66]
	542 Move X8, [X31+1072]
	543 Add X4, X31, 48
	544 Move X0, X20
	545 Move X1, X22
	546 Move W2, W23
	547 Move W3, W24
	548 Move X5, X31
	549 Move [X31+48], V0
	550 Move [X31+56], V1
	551 Move [X31+80], X8
	552 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	553 Move X8, [X25]
	554 Move X0, [X21+72]
	555 Move X1, X31
	556 Move X8, [X8+184]
	557 Move X22, [X8]
	558 Move W23, [X8+8]
	559 Move W24, [X8+100]
	560 Add X8, X31, 1040
	561 Call RenderTargetIdentifier.op_Implicit, X0
	562 Move V0, [X31+65]
	563 Move V1, [X31+66]
	564 Move X8, [X31+1072]
	565 Add X4, X31, 0
	566 Move X0, X20
	567 Move X1, X22
	568 Move W2, W23
	569 Move W3, W24
	570 Move X5, X31
	571 Move [X31], V0
	572 Move [X31+8], V1
	573 Move [X31+32], X8
	574 Call CommandBuffer.SetComputeTextureParam, X0, X1, X2, X3, X4
	575 Move X2, X31
	576 Call ComputeShader.DisableKeyword, X0, X1
	577 Move X0, [X25]
	578 Move S0, [X21+88]
	579 Move S1, [X21+92]
	580 Move W8, [X0+224]
	581 NotImplemented "Instruction SCVTF not yet implemented."
	582 NotImplemented "Instruction SCVTF not yet implemented."
	583 Compare W8, 0
	584 JumpIfNotEqual {587}
	585 Call 0x1C17DFC
	586 Move X0, [X25]
	587 Move X8, [X0+184]
	588 Move X3, [X19+16]
	589 Move X0, X20
	590 Move X4, X31
	591 Move X1, [X8]
	592 Move W2, [X8+16]
	593 Call CommandBuffer.SetComputeVectorArrayParam, X0, X1, X2, X3
	594 Move X8, [X25]
	595 Move S3, W31
	596 Move X0, X20
	597 Move V0, V10
	598 Move X8, [X8+184]
	599 Move V1, V9
	600 Move V2, V8
	601 Move X3, X31
	602 Move X1, [X8]
	603 Move W2, [X8+12]
	604 Call CommandBuffer.SetComputeVectorParam, X0, X1, X2, X3
	605 Move X8, [X25]
	606 Move W5, [X19+24]
	607 Move W3, 128
	608 Move W4, 1
	609 Move X8, [X8+184]
	610 Move X0, X20
	611 Move X6, X31
	612 Move X1, [X8]
	613 Move W2, [X8+8]
	614 Call CommandBuffer.DispatchCompute, X0, X1, X2, X3, X4, X5
	615 Move [X19+24], W31
	616 Add X31, X31, 1088
	617 Move X20, [X31+96]
	618 Move X19, [X31+104]
	619 Move X22, [X31+80]
	620 Move X21, [X31+88]
	621 Move X24, [X31+64]
	622 Move X23, [X31+72]
	623 Move X26, [X31+48]
	624 Move X25, [X31+56]
	625 Move X29, [X31+32]
	626 Move X30, [X31+40]
	627 Move D9, [X31+16]
	628 Move D8, [X31+24]
	629 Move V10, [X31+112]
	630 Return 
	631 Call 0x1C17F20

Method: System.Void BlendChunks(UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo blendingCell, UnityEngine.Rendering.ProbeBrickPool dstPool)

Disassembly:
	0x039B9CD8 BL 0x1C16DFC
	0x039B9CDC LDR X0, [X19]
	0x039B9CE0 LDR X8, [X0 + 0xB8]
	0x039B9CE4 LDP X20, X19, [X31 + 0x10]
	0x039B9CE8 LDR X0, [X8 + 0x8]
	0x039B9CEC LDR X30, [X31], #0x20
	0x039B9CF0 RET
	0x039B9CF4 SUB X31, X31, 0x40
	0x039B9CF8 STP X30, X21, [X31 + 0x20]
	0x039B9CFC STP X20, X19, [X31 + 0x30]
	0x039B9D00 ADRP X21, 0xA28000
	0x039B9D04 LDRB W8, [X21 + 0xC87]
	0x039B9D08 MOV X19, X1
	0x039B9D0C MOV X20, X0
	0x039B9D10 TBNZ X8, 0x0, 0x39B9D7C
	0x039B9D14 ADRP X0, 0x73A000
	0x039B9D18 LDR X0, [X0 + 0xA28]
	0x039B9D1C BL 0x1C16CF4
	0x039B9D20 ADRP X0, 0x799000
	0x039B9D24 LDR X0, [X0 + 0x360]
	0x039B9D28 BL 0x1C16CF4
	0x039B9D2C ADRP X0, 0x799000
	0x039B9D30 LDR X0, [X0 + 0x368]
	0x039B9D34 BL 0x1C16CF4
	0x039B9D38 ADRP X0, 0x799000
	0x039B9D3C LDR X0, [X0 + 0x370]
	0x039B9D40 BL 0x1C16CF4
	0x039B9D44 ADRP X0, 0x799000
	0x039B9D48 LDR X0, [X0 + 0x378]
	0x039B9D4C BL 0x1C16CF4
	0x039B9D50 ADRP X0, 0x799000
	0x039B9D54 LDR X0, [X0 + 0x260]
	0x039B9D58 BL 0x1C16CF4
	0x039B9D5C ADRP X0, 0x798000
	0x039B9D60 LDR X0, [X0 + 0xF48]
	0x039B9D64 BL 0x1C16CF4
	0x039B9D68 ADRP X0, 0x799000
	0x039B9D6C LDR X0, [X0 + 0x380]
	0x039B9D70 BL 0x1C16CF4
	0x039B9D74 MOVZ W8, 0x1
	0x039B9D78 STRB W8, [X21 + 0xC87]
	0x039B9D7C STP X31, X31, [X31 + 0x8]
	0x039B9D80 STR X31, [X31 + 0x18]
	0x039B9D84 LDRB W8, [X20 + 0x10]
	0x039B9D88 CBZ W8, 0x39B9DBC
	0x039B9D8C ADRP X8, 0x73A000
	0x039B9D90 LDR X8, [X8 + 0xA28]
	0x039B9D94 ADRP X19, 0x799000
	0x039B9D98 LDR X0, [X8]
	0x039B9D9C LDR W8, [X0 + 0xE0]
	0x039B9DA0 LDR X19, [X19 + 0x380]
	0x039B9DA4 CBNZ W8, 0x39B9DAC
	0x039B9DA8 BL 0x1C16DFC
	0x039B9DAC LDR X0, [X19]
	0x039B9DB0 MOV X1, X31
	0x039B9DB4 BL 0x3C0649C
	0x039B9DB8 B 0x39B9EEC
	0x039B9DBC LDR V0, [X19]
	0x039B9DC0 MOVZ W9, 0x3F800000
	0x039B9DC4 MOV X0, X20
	0x039B9DC8 MOV X1, X19
	0x039B9DCC STR D0, [X20 + 0x170]
	0x039B9DD0 LDR W8, [X19 + 0x38]
	0x039B9DD4 STR W9, [X20 + 0x17C]
	0x039B9DD8 STR W8, [X20 + 0x178]
	0x039B9DDC BL 0x39B9F80
	0x039B9DE0 ADRP X8, 0x799000
	0x039B9DE4 LDR X8, [X8 + 0x260]
	0x039B9DE8 LDR X0, [X8]
	0x039B9DEC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xA29000
	010 Move W8, [X22+3194]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x79A000
	019 Move X0, [X0+208]
	020 Call 0x1C17CF4
	021 Move X0, 0x79A000
	022 Move X0, [X0+224]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3194], W8
	026 Compare X20, 0
	027 JumpIfEqual {83}
	028 Move X0, [X20+24]
	029 Compare X0, 0
	030 JumpIfEqual {83}
	031 Move X25, 0x79A000
	032 Move X25, [X25+224]
	033 Move W22, W31
	034 Move W8, [X0+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X2, [X25]
	037 Move W1, W22
	038 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	039 Move X8, [X20+16]
	040 Compare X8, 0
	041 JumpIfEqual {83}
	042 Move X23, X0
	043 Move X0, [X8+32]
	044 Compare X0, 0
	045 JumpIfEqual {83}
	046 Move X2, [X25]
	047 Move X24, X1
	048 Move W1, W22
	049 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	050 Compare X19, 0
	051 JumpIfEqual {83}
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Move X9, [X21+16]
	054 Move W8, [X19+88]
	055 Move W10, [X19+92]
	056 Add W12, W11, 1
	057 Move [X21+24], W12
	058 Compare X9, 0
	059 JumpIfEqual {83}
	060 Move W12, [X9+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X13, X0
	063 ShiftRight X13, 32
	064 And X13, X13, 0x7FFFFFFF
	065 Move X12, X23
	066 ShiftRight X12, 32
	067 And X12, X12, 0x7FFFFFFF
	068 NotImplemented "Instruction MADD not yet implemented."
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Add X9, X9, X11
	071 NotImplemented "Instruction SCVTF not yet implemented."
	072 NotImplemented "Instruction MADD not yet implemented."
	073 NotImplemented "Instruction SCVTF not yet implemented."
	074 Move [X9+32], S0
	075 Move [X9+40], S2
	076 NotImplemented "Instruction SCVTF not yet implemented."
	077 Move [X9+40], S1
	078 Move [X9+48], S0
	079 Move X0, [X20+24]
	080 Add W22, W22, 1
	081 Compare X0, 0
	082 JumpIfNotEqual {34}
	083 Call 0x1C17F20
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Return 
	093 Call 0x1C17F28

Method: System.Void Clear()

Disassembly:
	0x039B9DF0 CBNZ W8, 0x39B9DF8
	0x039B9DF4 BL 0x1C16DFC
	0x039B9DF8 MOV X0, X19
	0x039B9DFC BL 0x39B8090

ISIL:
	001 Move X0, [X0+32]
	002 Compare X0, 0
	003 JumpIfEqual {6}
	004 Call ProbeBrickPool.Clear, X0
	005 Return 
	006 Return 

Method: System.Boolean Allocate(System.Int32 numberOfBrickChunks, System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> outAllocations)

Disassembly:
	0x039B9E00 LDR W1, [X20 + 0x170]
	0x039B9E04 LDR W2, [X20 + 0x174]
	0x039B9E08 LDR W3, [X20 + 0x178]
	0x039B9E0C MOV X0, X20
	0x039B9E10 BL 0x39BA138
	0x039B9E14 MOVZ W8, 0x1
	0x039B9E18 STRB W8, [X20 + 0x10]
	0x039B9E1C STRB W8, [X20 + 0x15C]
	0x039B9E20 LDR X9, [X19 + 0x30]
	0x039B9E24 STR X9, [X20 + 0xF0]
	0x039B9E28 LDRB W10, [X19 + 0x3D]
	0x039B9E2C STRB W8, [X20 + 0x142]
	0x039B9E30 STRB W10, [X20 + 0x11]
	0x039B9E34 CBZ X9, 0x39B9EEC
	0x039B9E38 ADRP X19, 0x798000
	0x039B9E3C LDR X19, [X19 + 0xF48]
	0x039B9E40 LDR X0, [X19]
	0x039B9E44 LDR W8, [X0 + 0xE0]
	0x039B9E48 CBNZ W8, 0x39B9E50
	0x039B9E4C BL 0x1C16DFC
	0x039B9E50 ADRP X20, 0xA28000
	0x039B9E54 LDRB W8, [X20 + 0xCB9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move W20, W1
	007 Move X21, X0
	008 Call ProbeBrickBlendingPool.AllocateResourcesIfNeeded, X0
	009 Move X0, [X21+32]
	010 Compare X0, 0
	011 JumpIfEqual {29}
	012 Move W8, [X0+128]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W0, W31
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]
	019 Return X0
	020 Move W1, W20
	021 Move X2, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W3, W31
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call ProbeBrickPool.Allocate, X0, X1, X2, X3
	028 Return X0
	029 Call 0x1C17F20

Method: System.Void Deallocate(System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> allocations)

Disassembly:
	0x039B9E58 CBNZ W8, 0x39B9E70
	0x039B9E5C ADRP X0, 0x798000
	0x039B9E60 LDR X0, [X0 + 0xF48]
	0x039B9E64 BL 0x1C16CF4
	0x039B9E68 MOVZ W8, 0x1
	0x039B9E6C STRB W8, [X20 + 0xCB9]
	0x039B9E70 LDR X0, [X19]
	0x039B9E74 LDR W8, [X0 + 0xE0]
	0x039B9E78 CBNZ W8, 0x39B9E84
	0x039B9E7C BL 0x1C16DFC
	0x039B9E80 LDR X0, [X19]
	0x039B9E84 LDR X8, [X0 + 0xB8]
	0x039B9E88 LDR X8, [X8 + 0x8]
	0x039B9E8C CBZ X8, 0x39B9F00
	0x039B9E90 LDR X0, [X8 + 0x188]
	0x039B9E94 CBZ X0, 0x39B9F00
	0x039B9E98 ADRP X8, 0x799000
	0x039B9E9C LDR X8, [X8 + 0x378]
	0x039B9EA0 LDR X1, [X8]
	0x039B9EA4 ADD X8, X31, 0x8
	0x039B9EA8 BL 0x301CB58
	0x039B9EAC ADRP X19, 0x799000
	0x039B9EB0 LDR X19, [X19 + 0x368]
	0x039B9EB4 LDR X1, [X19]
	0x039B9EB8 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA29000
	006 Move W8, [X21+3195]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x79A000
	014 Move X0, [X0+208]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3195], W8
	018 Compare X19, 0
	019 JumpIfEqual {38}
	020 Move W8, [X19+24]
	021 Compare W8, 0
	022 JumpIfEqual {33}
	023 Move X0, [X20+32]
	024 Compare X0, 0
	025 JumpIfEqual {38}
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call ProbeBrickPool.Deallocate, X0, X1
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void EnsureTextureValidity()

Disassembly:
	0x039B9EBC BL 0x2BC4350
	0x039B9EC0 TBZ X0, 0x0, 0x39B9ED8
	0x039B9EC4 LDR X0, [X31 + 0x18]
	0x039B9EC8 CBZ X0, 0x39B9EFC
	0x039B9ECC MOV X1, X31
	0x039B9ED0 BL 0x39C7E18
	0x039B9ED4 B 0x39B9EB4
	0x039B9ED8 ADRP X8, 0x799000
	0x039B9EDC LDR X8, [X8 + 0x360]
	0x039B9EE0 ADD X0, X31, 0x8
	0x039B9EE4 LDR X1, [X8]
	0x039B9EE8 BL 0x2BC434C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Call ProbeBrickPool.EnsureTextureValidity, X0
	008 Move X0, [X19+40]
	009 Compare X0, 0
	010 JumpIfEqual {18}
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call ProbeBrickPool.EnsureTextureValidity, X0
	014 Return 
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 
	018 Call 0x1C17F20

Method: System.Void Cleanup()

Disassembly:
	0x039B9EEC LDP X20, X19, [X31 + 0x30]
	0x039B9EF0 LDP X30, X21, [X31 + 0x20]
	0x039B9EF4 ADD X31, X31, 0x40
	0x039B9EF8 RET
	0x039B9EFC BL 0x1C16F20
	0x039B9F00 BL 0x1C16F20
	0x039B9F04 B 0x39B9F0C
	0x039B9F08 B 0x39B9F0C
	0x039B9F0C MOV X19, X0
	0x039B9F10 CMP W1, 0x1
	0x039B9F14 B.NE 0x39B9F48
	0x039B9F18 MOV X0, X19
	0x039B9F1C BL 0x3EB1AD0
	0x039B9F20 LDR X20, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+32]
	004 Compare X8, 0
	005 JumpIfEqual {17}
	006 Move X19, X0
	007 Add X0, X8, 24
	008 Call DataLocation.Cleanup, X0
	009 Move X8, [X19+40]
	010 Compare X8, 0
	011 JumpIfEqual {20}
	012 Add X0, X8, 24
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call DataLocation.Cleanup, X0
	016 Return 
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039B9F24 BL 0x3EB1AE0
	0x039B9F28 ADRP X8, 0x799000
	0x039B9F2C LDR X8, [X8 + 0x360]
	0x039B9F30 ADD X0, X31, 0x8
	0x039B9F34 LDR X1, [X8]
	0x039B9F38 BL 0x2BC434C
	0x039B9F3C CBZ X20, 0x39B9EEC
	0x039B9F40 MOV X0, X20
	0x039B9F44 BL 0x1C16F18
	0x039B9F48 MOV X20, X31
	0x039B9F4C B 0x39B9F54
	0x039B9F50 MOV X19, X0
	0x039B9F54 ADRP X8, 0x799000
	0x039B9F58 LDR X8, [X8 + 0x360]
	0x039B9F5C LDR X1, [X8]
	0x039B9F60 ADD X0, X31, 0x8
	0x039B9F64 BL 0x2BC434C
	0x039B9F68 CBNZ X20, 0x39B9F74
	0x039B9F6C MOV X0, X19
	0x039B9F70 BL 0x1D2C690
	0x039B9F74 MOV X0, X20
	0x039B9F78 BL 0x1C16F18
	0x039B9F7C BL 0x1990590
	0x039B9F80 SUB X31, X31, 0x60
	0x039B9F84 STP X30, X21, [X31 + 0x40]
	0x039B9F88 STP X20, X19, [X31 + 0x50]
	0x039B9F8C ADRP X21, 0xA28000
	0x039B9F90 LDRB W8, [X21 + 0xCA7]
	0x039B9F94 MOV X20, X1
	0x039B9F98 MOV X19, X0
	0x039B9F9C TBNZ X8, 0x0, 0x39B9FB4
	0x039B9FA0 ADRP X0, 0x762000
	0x039B9FA4 LDR X0, [X0 + 0x8F8]
	0x039B9FA8 BL 0x1C16CF4
	0x039B9FAC MOVZ W8, 0x1
	0x039B9FB0 STRB W8, [X21 + 0xCA7]
	0x039B9FB4 LDRB W8, [X20 + 0x3C]
	0x039B9FB8 CBZ W8, 0x39BA104
	0x039B9FBC LDR X8, [X20 + 0x8]
	0x039B9FC0 ADRP X9, 0x762000
	0x039B9FC4 LDR X9, [X9 + 0x8F8]
	0x039B9FC8 STR X8, [X19 + 0x1A8]
	0x039B9FCC LDR X21, [X20 + 0x10]
	0x039B9FD0 LDR X0, [X9]
	0x039B9FD4 LDR W8, [X0 + 0xE0]
	0x039B9FD8 CBNZ W8, 0x39B9FE0
	0x039B9FDC BL 0x1C16DFC
	0x039B9FE0 MOV X0, X21
	0x039B9FE4 MOV X1, X31
	0x039B9FE8 BL 0x39E1920
	0x039B9FEC STR X0, [X19 + 0x1B0]
	0x039B9FF0 CBZ X0, 0x39BA130
	0x039B9FF4 MOVZ W1, 0x1
	0x039B9FF8 MOV X2, X31
	0x039B9FFC BL 0x3C14F90
	0x039BA000 LDR X8, [X20 + 0x18]
	0x039BA004 MOV X1, X31
	0x039BA008 STR X8, [X19 + 0x1B8]
	0x039BA00C LDR X0, [X20 + 0x20]
	0x039BA010 BL 0x39E1920
	0x039BA014 STR X0, [X19 + 0x1C0]
	0x039BA018 CBZ X0, 0x39BA130
	0x039BA01C MOVZ W1, 0x1
	0x039BA020 MOV X2, X31
	0x039BA024 BL 0x3C14F90
	0x039BA028 LDR X8, [X19 + 0x198]
	0x039BA02C CBZ X8, 0x39BA130
	0x039BA030 LDR W9, [X8 + 0x18]
	0x039BA034 CBZ W9, 0x39BA134
	0x039BA038 ADRP X9, 0xFFFFFFFFFD133000
	0x039BA03C LDR V0, [X9 + 0x8]
	0x039BA040 STR V0, [X8 + 0x2]
	0x039BA044 LDR X8, [X19 + 0x198]
	0x039BA048 CBZ X8, 0x39BA130
	0x039BA04C LDR W9, [X8 + 0x18]
	0x039BA050 CMP W9, 0x1
	0x039BA054 B.LS 0x39BA134
	0x039BA058 ADRP X9, 0xFFFFFFFFFD132000
	0x039BA05C LDR V0, [X9 + 0xF3]
	0x039BA060 STR V0, [X8 + 0x3]
	0x039BA064 LDR X8, [X19 + 0x198]
	0x039BA068 CBZ X8, 0x39BA130
	0x039BA06C LDR W9, [X8 + 0x18]
	0x039BA070 CMP W9, 0x2
	0x039BA074 B.LS 0x39BA134
	0x039BA078 ADRP X9, 0xFFFFFFFFFD130000
	0x039BA07C LDR V0, [X9 + 0xBC]
	0x039BA080 STR V0, [X8 + 0x4]
	0x039BA084 LDR X8, [X19 + 0x198]
	0x039BA088 CBZ X8, 0x39BA130
	0x039BA08C LDR W9, [X8 + 0x18]
	0x039BA090 CMP W9, 0x3
	0x039BA094 B.LS 0x39BA134
	0x039BA098 ADRP X9, 0xFFFFFFFFFD133000
	0x039BA09C LDR V0, [X9 + 0x1F]
	0x039BA0A0 STR V0, [X8 + 0x5]
	0x039BA0A4 LDR X8, [X19 + 0x198]
	0x039BA0A8 CBZ X8, 0x39BA130
	0x039BA0AC LDR W9, [X8 + 0x18]
	0x039BA0B0 CMP W9, 0x4
	0x039BA0B4 B.LS 0x39BA134
	0x039BA0B8 ADRP X9, 0xFFFFFFFFFD130000
	0x039BA0BC LDR V0, [X9 + 0x60]
	0x039BA0C0 STR V0, [X8 + 0x6]
	0x039BA0C4 LDR X8, [X19 + 0x198]
	0x039BA0C8 CBZ X8, 0x39BA130
	0x039BA0CC LDR W9, [X8 + 0x18]
	0x039BA0D0 CMP W9, 0x5
	0x039BA0D4 B.LS 0x39BA134
	0x039BA0D8 ADRP X9, 0xFFFFFFFFFD131000
	0x039BA0DC LDR V0, [X9 + 0xD5]
	0x039BA0E0 STR V0, [X8 + 0x7]
	0x039BA0E4 LDR X8, [X19 + 0x198]
	0x039BA0E8 CBZ X8, 0x39BA130
	0x039BA0EC LDR W9, [X8 + 0x18]
	0x039BA0F0 CMP W9, 0x6
	0x039BA0F4 B.LS 0x39BA134
	0x039BA0F8 ADRP X9, 0xFFFFFFFFFD130000
	0x039BA0FC LDR V0, [X9 + 0xA9]
	0x039BA100 STR V0, [X8 + 0x8]
	0x039BA104 LDP V1, V0, [X20 + 0x20]
	0x039BA108 LDP V3, V2, [X20]
	0x039BA10C ADD X1, X31, 0x0
	0x039BA110 MOV X0, X19
	0x039BA114 STP V1, V0, [X31 + 0x20]
	0x039BA118 STP V3, V2, [X31]
	0x039BA11C BL 0x39BF3F4
	0x039BA120 LDP X20, X19, [X31 + 0x50]
	0x039BA124 LDP X30, X21, [X31 + 0x40]
	0x039BA128 ADD X31, X31, 0x60
	0x039BA12C RET
	0x039BA130 BL 0x1C16F20
	0x039BA134 BL 0x1C16F28
	0x039BA138 STR D8, [X31 - 0x60]!
	0x039BA13C STP X30, X27, [X31 + 0x10]
	0x039BA140 STP X26, X25, [X31 + 0x20]
	0x039BA144 STP X24, X23, [X31 + 0x30]
	0x039BA148 STP X22, X21, [X31 + 0x40]
	0x039BA14C STP X20, X19, [X31 + 0x50]
	0x039BA150 ADRP X21, 0xA27000
	0x039BA154 LDRB W8, [X21 + 0xC9A]
	0x039BA158 MOV W23, W3
	0x039BA15C MOV W24, W2
	0x039BA160 MOV W20, W1
	0x039BA164 MOV X19, X0
	0x039BA168 TBNZ X8, 0x0, 0x39BA1A4
	0x039BA16C ADRP X0, 0x798000
	0x039BA170 LDR X0, [X0 + 0x260]
	0x039BA174 BL 0x1C16CF4
	0x039BA178 ADRP X0, 0x798000
	0x039BA17C LDR X0, [X0 + 0x108]
	0x039BA180 BL 0x1C16CF4
	0x039BA184 ADRP X0, 0x798000
	0x039BA188 LDR X0, [X0 + 0x270]
	0x039BA18C BL 0x1C16CF4
	0x039BA190 ADRP X0, 0x798000
	0x039BA194 LDR X0, [X0 + 0x388]
	0x039BA198 BL 0x1C16CF4
	0x039BA19C MOVZ W8, 0x1
	0x039BA1A0 STRB W8, [X21 + 0xC9A]
	0x039BA1A4 LDRB W8, [X19 + 0x141]
	0x039BA1A8 CBNZ W8, 0x39BA300
	0x039BA1AC ADRP X9, 0x798000
	0x039BA1B0 LDR W21, [X19 + 0x158]
	0x039BA1B4 LDR X22, [X19 + 0x150]
	0x039BA1B8 LDR X9, [X9 + 0x270]
	0x039BA1BC ADD X8, X19, 0x144
	0x039BA1C0 LDR W25, [X8 + 0x8]
	0x039BA1C4 LDR X26, [X8]
	0x039BA1C8 LDR X0, [X9]
	0x039BA1CC BL 0x1C16F10
	0x039BA1D0 MOVZ W3, 0x1
	0x039BA1D4 MOV W1, W20
	0x039BA1D8 MOV W2, W23
	0x039BA1DC MOV X27, X0
	0x039BA1E0 BL 0x39B6B1C
	0x039BA1E4 STR X27, [X19 + 0x38]
	0x039BA1E8 ADRP X8, 0x798000
	0x039BA1EC LDR X8, [X8 + 0x260]
	0x039BA1F0 LDR X0, [X8]
	0x039BA1F4 BL 0x1C16F10
	0x039BA1F8 MOV X1, X31
	0x039BA1FC MOV X27, X0
	0x039BA200 BL 0x33BDD8C
	0x039BA204 STP W24, W23, [X27 + 0x30]
	0x039BA208 STR X27, [X19 + 0x50]
	0x039BA20C ADRP X8, 0x798000
	0x039BA210 LDR X8, [X8 + 0x108]
	0x039BA214 LDR X0, [X8]
	0x039BA218 BL 0x1C16F10
	0x039BA21C MOV W1, W20
	0x039BA220 MOV X23, X0
	0x039BA224 BL 0x39B3E98
	0x039BA228 LDR W8, [X19 + 0x34]
	0x039BA22C FMOV S0, 3
	0x039BA230 STR X23, [X19 + 0x40]
	0x039BA234 SUB W8, W8, 0x1
	0x039BA238 SCVTF S1, W8
	0x039BA23C BL 0x3EB1B50
	0x039BA240 ADRP X8, 0x798000
	0x039BA244 LDR X8, [X8 + 0x388]
	0x039BA248 MOV V8.16B, V0.16B
	0x039BA24C LDR X0, [X8]
	0x039BA250 BL 0x1C16F10
	0x039BA254 MOVZ W8, 0x7F800000
	0x039BA258 FMOV S0, W8
	0x039BA25C FCVTZS W9, S8
	0x039BA260 FCMP S8, S0
	0x039BA264 MOVZ W8, 0x80000000
	0x039BA268 CSEL W5, W8, W9, EQ
	0x039BA26C MOV X1, X26
	0x039BA270 MOV X2, X25
	0x039BA274 MOV X3, X22
	0x039BA278 MOV X4, X21
	0x039BA27C MOV X20, X0
	0x039BA280 BL 0x39B93C8
	0x039BA284 LDR W8, [X19 + 0xEC]
	0x039BA288 STR X20, [X19 + 0x48]
	0x039BA28C CBZ W8, 0x39BA298
	0x039BA290 MOV X0, X19
	0x039BA294 BL 0x39BC588
	0x039BA298 LDR X8, [X19 + 0x60]
	0x039BA29C CBZ X8, 0x39BA320
	0x039BA2A0 LDR X9, [X8 + 0x18]
	0x039BA2A4 CBZ W9, 0x39BA31C
	0x039BA2A8 AND X9, X9, 0x0
	0x039BA2AC CMP X9, 0x1
	0x039BA2B0 STR W31, [X8 + 0x20]
	0x039BA2B4 B.EQ 0x39BA31C
	0x039BA2B8 MOVZ W10, 0xAAAB
	0x039BA2BC MOVK W10, 0x3EAA0000
	0x039BA2C0 CMP X9, 0x2
	0x039BA2C4 STR W10, [X8 + 0x24]
	0x039BA2C8 B.EQ 0x39BA31C
	0x039BA2CC MOV X10, INVALID
	0x039BA2D0 MOVZ W11, 0xAAAB
	0x039BA2D4 MOVK W11, 0x3F2A0000
	0x039BA2D8 ADD X9, X10, X9, 0x20, LSL
	0x039BA2DC MOVZ W12, 0x3F800000
	0x039BA2E0 MOVZ W20, 0x1
	0x039BA2E4 STR W11, [X8 + 0x28]
	0x039BA2E8 ADD X8, X8, X9, 0x1E, ASR
	0x039BA2EC MOV X0, X19
	0x039BA2F0 STR W12, [X8 + 0x20]
	0x039BA2F4 STRB W20, [X19 + 0x141]
	0x039BA2F8 BL 0x39BA910
	0x039BA2FC STRB W20, [X19 + 0x140]
	0x039BA300 LDP X20, X19, [X31 + 0x50]
	0x039BA304 LDP X22, X21, [X31 + 0x40]
	0x039BA308 LDP X24, X23, [X31 + 0x30]
	0x039BA30C LDP X26, X25, [X31 + 0x20]
	0x039BA310 LDP X30, X27, [X31 + 0x10]
	0x039BA314 LDR V8, [X31], #0x60
	0x039BA318 RET
	0x039BA31C BL 0x1C16F28
	0x039BA320 BL 0x1C16F20
	0x039BA324 AND W8, W1, 0x1
	0x039BA328 STRB W8, [X0 + 0x142]
	0x039BA32C RET
	0x039BA330 STR X30, [X31 - 0x20]!
	0x039BA334 STP X20, X19, [X31 + 0x10]
	0x039BA338 LDRB W8, [X0 + 0x141]
	0x039BA33C MOV X20, X0
	0x039BA340 MOV W19, W1
	0x039BA344 CBZ W8, 0x39BA350
	0x039BA348 MOV X0, X20
	0x039BA34C BL 0x39BA374
	0x039BA350 LDR W1, [X20 + 0x170]
	0x039BA354 LDR W2, [X20 + 0x174]
	0x039BA358 STR W19, [X20 + 0x178]
	0x039BA35C STRB W31, [X20 + 0x141]
	0x039BA360 MOV X0, X20
	0x039BA364 MOV W3, W19
	0x039BA368 LDP X20, X19, [X31 + 0x10]
	0x039BA36C LDR X30, [X31], #0x20
	0x039BA370 B 0x39BA138
	0x039BA374 STP X30, X19, [X31 - 0x10]!
	0x039BA378 MOV X19, X0
	0x039BA37C STRB W31, [X0 + 0x120]
	0x039BA380 BL 0x39BA960

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0xA29000
	014 Move X19, 0x79A000
	015 Move X22, 0x79A000
	016 Move X21, 0x79A000
	017 Move X20, 0x79A000
	018 Move X29, 0x79A000
	019 Move X28, 0x79A000
	020 Move X27, 0x79A000
	021 Move X26, 0x79A000
	022 Move X25, 0x79A000
	023 Move X24, 0x79A000
	024 Move X19, [X19+608]
	025 Move X22, [X22+640]
	026 Move X21, [X21+648]
	027 Move X20, [X20+656]
	028 Move X29, [X29+664]
	029 Move X28, [X28+672]
	030 Move X27, [X27+680]
	031 Move X26, [X26+688]
	032 Move X25, [X25+696]
	033 Move X24, [X24+704]
	034 Move W8, [X23+3196]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {113}
	039 Move X0, 0x79A000
	040 Move X0, [X0+608]
	041 Call 0x1C17CF4
	042 Move X0, 0x79A000
	043 Move X0, [X0+712]
	044 Call 0x1C17CF4
	045 Move X0, 0x79A000
	046 Move X0, [X0+720]
	047 Call 0x1C17CF4
	048 Move X0, 0x79A000
	049 Move X0, [X0+728]
	050 Call 0x1C17CF4
	051 Move X0, 0x79A000
	052 Move X0, [X0+680]
	053 Call 0x1C17CF4
	054 Move X0, 0x79A000
	055 Move X0, [X0+736]
	056 Call 0x1C17CF4
	057 Move X0, 0x79A000
	058 Move X0, [X0+744]
	059 Call 0x1C17CF4
	060 Move X0, 0x79A000
	061 Move X0, [X0+696]
	062 Call 0x1C17CF4
	063 Move X0, 0x79A000
	064 Move X0, [X0+752]
	065 Call 0x1C17CF4
	066 Move X0, 0x799000
	067 Move X0, [X0+760]
	068 Call 0x1C17CF4
	069 Move X0, 0x799000
	070 Move X0, [X0+672]
	071 Call 0x1C17CF4
	072 Move X0, 0x799000
	073 Move X0, [X0+768]
	074 Call 0x1C17CF4
	075 Move X0, 0x799000
	076 Move X0, [X0+640]
	077 Call 0x1C17CF4
	078 Move X0, 0x799000
	079 Move X0, [X0+704]
	080 Call 0x1C17CF4
	081 Move X0, 0x799000
	082 Move X0, [X0+776]
	083 Call 0x1C17CF4
	084 Move X0, 0x799000
	085 Move X0, [X0+648]
	086 Call 0x1C17CF4
	087 Move X0, 0x799000
	088 Move X0, [X0+656]
	089 Call 0x1C17CF4
	090 Move X0, 0x799000
	091 Move X0, [X0+784]
	092 Call 0x1C17CF4
	093 Move X0, 0x799000
	094 Move X0, [X0+792]
	095 Call 0x1C17CF4
	096 Move X0, 0x799000
	097 Move X0, [X0+800]
	098 Call 0x1C17CF4
	099 Move X0, 0x799000
	100 Move X0, [X0+664]
	101 Call 0x1C17CF4
	102 Move X0, 0x799000
	103 Move X0, [X0+688]
	104 Call 0x1C17CF4
	105 Move X0, 0x799000
	106 Move X0, [X0+808]
	107 Call 0x1C17CF4
	108 Move X0, 0x799000
	109 Move X0, [X0+816]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X23+3196], W8
	113 Move X8, [X19]
	114 Move TEMP, 0
	115 Not TEMP
	116 Move W9, TEMP
	117 Move X1, X31
	118 Move X8, [X8+184]
	119 Move [X8+8], W9
	120 Move X0, [X22]
	121 Call Shader.PropertyToID, X0
	122 Move X8, [X19]
	123 Move X1, X31
	124 Move X8, [X8+184]
	125 Move [X8+12], W0
	126 Move X0, [X21]
	127 Call Shader.PropertyToID, X0
	128 Move X8, [X19]
	129 Move X1, X31
	130 Move X8, [X8+184]
	131 Move [X8+16], W0
	132 Move X0, [X20]
	133 Call Shader.PropertyToID, X0
	134 Move X8, [X19]
	135 Move X1, X31
	136 Move X8, [X8+184]
	137 Move [X8+20], W0
	138 Move X0, [X29]
	139 Call Shader.PropertyToID, X0
	140 Move X8, [X19]
	141 Move X1, X31
	142 Move X8, [X8+184]
	143 Move [X8+24], W0
	144 Move X0, [X28]
	145 Call Shader.PropertyToID, X0
	146 Move X8, [X19]
	147 Move X1, X31
	148 Move X8, [X8+184]
	149 Move [X8+28], W0
	150 Move X0, [X27]
	151 Call Shader.PropertyToID, X0
	152 Move X8, [X19]
	153 Move X1, X31
	154 Move X8, [X8+184]
	155 Move [X8+32], W0
	156 Move X0, [X26]
	157 Call Shader.PropertyToID, X0
	158 Move X8, [X19]
	159 Move X1, X31
	160 Move X8, [X8+184]
	161 Move [X8+36], W0
	162 Move X0, [X25]
	163 Call Shader.PropertyToID, X0
	164 Move X8, [X19]
	165 Move X1, X31
	166 Move X8, [X8+184]
	167 Move [X8+40], W0
	168 Move X0, [X24]
	169 Call Shader.PropertyToID, X0
	170 Move X8, [X19]
	171 Move X1, X31
	172 Move X8, [X8+184]
	173 Move [X8+44], W0
	174 Move X8, 0x799000
	175 Move X8, [X8+800]
	176 Move X0, [X8]
	177 Call Shader.PropertyToID, X0
	178 Move X8, [X19]
	179 Move X1, X31
	180 Move X8, [X8+184]
	181 Move [X8+48], W0
	182 Move X8, 0x799000
	183 Move X8, [X8+752]
	184 Move X0, [X8]
	185 Call Shader.PropertyToID, X0
	186 Move X8, [X19]
	187 Move X1, X31
	188 Move X8, [X8+184]
	189 Move [X8+52], W0
	190 Move X8, 0x799000
	191 Move X8, [X8+760]
	192 Move X0, [X8]
	193 Call Shader.PropertyToID, X0
	194 Move X8, [X19]
	195 Move X1, X31
	196 Move X8, [X8+184]
	197 Move [X8+56], W0
	198 Move X8, 0x799000
	199 Move X8, [X8+768]
	200 Move X0, [X8]
	201 Call Shader.PropertyToID, X0
	202 Move X8, [X19]
	203 Move X1, X31
	204 Move X8, [X8+184]
	205 Move [X8+60], W0
	206 Move X8, 0x799000
	207 Move X8, [X8+744]
	208 Move X0, [X8]
	209 Call Shader.PropertyToID, X0
	210 Move X8, [X19]
	211 Move X1, X31
	212 Move X8, [X8+184]
	213 Move [X8+64], W0
	214 Move X8, 0x799000
	215 Move X8, [X8+736]
	216 Move X0, [X8]
	217 Call Shader.PropertyToID, X0
	218 Move X8, [X19]
	219 Move X1, X31
	220 Move X8, [X8+184]
	221 Move [X8+68], W0
	222 Move X8, 0x799000
	223 Move X8, [X8+728]
	224 Move X0, [X8]
	225 Call Shader.PropertyToID, X0
	226 Move X8, [X19]
	227 Move X1, X31
	228 Move X8, [X8+184]
	229 Move [X8+72], W0
	230 Move X8, 0x799000
	231 Move X8, [X8+720]
	232 Move X0, [X8]
	233 Call Shader.PropertyToID, X0
	234 Move X8, [X19]
	235 Move X1, X31
	236 Move X8, [X8+184]
	237 Move [X8+76], W0
	238 Move X8, 0x799000
	239 Move X8, [X8+712]
	240 Move X0, [X8]
	241 Call Shader.PropertyToID, X0
	242 Move X8, [X19]
	243 Move X1, X31
	244 Move X8, [X8+184]
	245 Move [X8+80], W0
	246 Move X8, 0x799000
	247 Move X8, [X8+784]
	248 Move X0, [X8]
	249 Call Shader.PropertyToID, X0
	250 Move X8, [X19]
	251 Move X1, X31
	252 Move X8, [X8+184]
	253 Move [X8+84], W0
	254 Move X8, 0x799000
	255 Move X8, [X8+808]
	256 Move X0, [X8]
	257 Call Shader.PropertyToID, X0
	258 Move X8, [X19]
	259 Move X1, X31
	260 Move X8, [X8+184]
	261 Move [X8+88], W0
	262 Move X8, 0x799000
	263 Move X8, [X8+776]
	264 Move X0, [X8]
	265 Call Shader.PropertyToID, X0
	266 Move X8, [X19]
	267 Move X1, X31
	268 Move X8, [X8+184]
	269 Move [X8+92], W0
	270 Move X8, 0x799000
	271 Move X8, [X8+792]
	272 Move X0, [X8]
	273 Call Shader.PropertyToID, X0
	274 Move X8, [X19]
	275 Move X1, X31
	276 Move X8, [X8+184]
	277 Move [X8+96], W0
	278 Move X8, 0x799000
	279 Move X8, [X8+816]
	280 Move X0, [X8]
	281 Call Shader.PropertyToID, X0
	282 Move X8, [X19]
	283 Move X20, [X31+80]
	284 Move X19, [X31+88]
	285 Move X22, [X31+64]
	286 Move X21, [X31+72]
	287 Move X24, [X31+48]
	288 Move X23, [X31+56]
	289 Move X8, [X8+184]
	290 Move X26, [X31+32]
	291 Move X25, [X31+40]
	292 Move X28, [X31+16]
	293 Move X27, [X31+24]
	294 Move [X8+100], W0
	295 Move X29, [X31+96]
	296 Move X30, [X31+104]
	297 Return 

