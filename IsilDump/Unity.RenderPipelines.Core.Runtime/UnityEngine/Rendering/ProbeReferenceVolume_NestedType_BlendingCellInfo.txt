Type: UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo

Method: System.Int32 CompareTo(UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo other)

Disassembly:
	0x039C4CA0 RET
	0x039C4CA4 STR X30, [X31 - 0x20]!
	0x039C4CA8 STP X20, X19, [X31 + 0x10]
	0x039C4CAC ADRP X20, 0xA1D000
	0x039C4CB0 ADRP X19, 0x78D000
	0x039C4CB4 LDRB W8, [X20 + 0xCCA]
	0x039C4CB8 LDR X19, [X19 + 0xF48]
	0x039C4CBC TBNZ X8, 0x0, 0x39C4CD4
	0x039C4CC0 ADRP X0, 0x78D000
	0x039C4CC4 LDR X0, [X0 + 0xF48]
	0x039C4CC8 BL 0x1C16CF4
	0x039C4CCC MOVZ W8, 0x1
	0x039C4CD0 STRB W8, [X20 + 0xCCA]
	0x039C4CD4 LDR X0, [X19]
	0x039C4CD8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {14}
	004 Move V0, [X0+32]
	005 Move V1, [X1+32]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move TEMP, 0
	008 Not TEMP
	009 Move W0, TEMP
	010 Move W0, 1
	011 Move W0, W31
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x039C4CDC CBNZ W8, 0x39C4CE4
	0x039C4CE0 BL 0x1C16DFC
	0x039C4CE4 ADRP X20, 0xA1D000
	0x039C4CE8 LDRB W8, [X20 + 0xCB9]
	0x039C4CEC CBNZ W8, 0x39C4D04
	0x039C4CF0 ADRP X0, 0x78D000
	0x039C4CF4 LDR X0, [X0 + 0xF48]
	0x039C4CF8 BL 0x1C16CF4
	0x039C4CFC MOVZ W8, 0x1
	0x039C4D00 STRB W8, [X20 + 0xCB9]
	0x039C4D04 LDR X0, [X19]
	0x039C4D08 LDR W8, [X0 + 0xE0]
	0x039C4D0C CBNZ W8, 0x39C4D18
	0x039C4D10 BL 0x1C16DFC
	0x039C4D14 LDR X0, [X19]
	0x039C4D18 LDR X8, [X0 + 0xB8]
	0x039C4D1C LDR X0, [X8 + 0x8]
	0x039C4D20 CBZ X0, 0x39C4D34
	0x039C4D24 LDP X20, X19, [X31 + 0x10]
	0x039C4D28 MOV X1, X31
	0x039C4D2C LDR X30, [X31], #0x20
	0x039C4D30 B 0x39B9AE0
	0x039C4D34 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1E000
	005 Move W8, [X20+3262]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x78F000
	012 Move X0, [X0+968]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3262], W8
	016 Move X8, [X19+24]
	017 Move [X19+16], X31
	018 Compare X8, 0
	019 JumpIfEqual {30}
	020 Move W9, [X8+28]
	021 Add W9, W9, 1
	022 Move [X8+24], W31
	023 Move [X8+28], W9
	024 Move [X19+40], W31
	025 Move [X19+32], X31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 
	030 Call 0x1C17F20

Method: System.Void MarkUpToDate()

Disassembly:
	0x039C4D38 STR D8, [X31 - 0x20]!
	0x039C4D3C STR X30, [X31 + 0x8]
	0x039C4D40 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move TEMP, 0x80800000
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+32], W8
	005 Return 

Method: System.Boolean IsUpToDate()

Disassembly:
	0x039C4D44 ADRP X20, 0xA1D000
	0x039C4D48 ADRP X19, 0x78D000
	0x039C4D4C LDRB W8, [X20 + 0xCCB]
	0x039C4D50 LDR X19, [X19 + 0xF48]
	0x039C4D54 MOV V8.16B, V0.16B
	0x039C4D58 TBNZ X8, 0x0, 0x39C4D70

ISIL:
	001 Move V0, [X0+32]
	002 Move TEMP, 0x80800000
	003 Not TEMP
	004 Move W8, TEMP
	005 Move S1, W8
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Void ForceReupload()

Disassembly:
	0x039C4D5C ADRP X0, 0x78D000
	0x039C4D60 LDR X0, [X0 + 0xF48]
	0x039C4D64 BL 0x1C16CF4

ISIL:
	001 Move W8, 0xBF800000
	002 Move [X0+36], W8
	003 Return 

Method: System.Boolean ShouldReupload()

Disassembly:
	0x039C4D68 MOVZ W8, 0x1
	0x039C4D6C STRB W8, [X20 + 0xCCB]
	0x039C4D70 LDR X0, [X19]
	0x039C4D74 LDR W8, [X0 + 0xE0]
	0x039C4D78 CBNZ W8, 0x39C4D80

ISIL:
	001 Move V0, [X0+36]
	002 Move S1, -1
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Void Prioritize()

Disassembly:
	0x039C4D7C BL 0x1C16DFC
	0x039C4D80 ADRP X20, 0xA1D000
	0x039C4D84 LDRB W8, [X20 + 0xCB9]

ISIL:
	001 Move W8, 0xC0000000
	002 Move [X0+36], W8
	003 Return 

Method: System.Boolean ShouldPrioritize()

Disassembly:
	0x039C4D88 CBNZ W8, 0x39C4DA0
	0x039C4D8C ADRP X0, 0x78D000
	0x039C4D90 LDR X0, [X0 + 0xF48]
	0x039C4D94 BL 0x1C16CF4
	0x039C4D98 MOVZ W8, 0x1

ISIL:
	001 Move V0, [X0+36]
	002 Move S1, -2
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Void .ctor()

Disassembly:
	0x039C4D9C STRB W8, [X20 + 0xCB9]
	0x039C4DA0 LDR X0, [X19]
	0x039C4DA4 LDR W8, [X0 + 0xE0]
	0x039C4DA8 CBNZ W8, 0x39C4DB4
	0x039C4DAC BL 0x1C16DFC
	0x039C4DB0 LDR X0, [X19]
	0x039C4DB4 LDR X8, [X0 + 0xB8]
	0x039C4DB8 LDR X0, [X8 + 0x8]
	0x039C4DBC CBZ X0, 0x39C4DD8
	0x039C4DC0 LDP X20, X19, [X31 + 0x10]
	0x039C4DC4 LDR X30, [X31 + 0x8]
	0x039C4DC8 MOV V0.16B, V8.16B
	0x039C4DCC MOV X1, X31
	0x039C4DD0 LDR V8, [X31], #0x20
	0x039C4DD4 B 0x39B9AFC
	0x039C4DD8 BL 0x1C16F20
	0x039C4DDC FMOV S0, W31
	0x039C4DE0 RET
	0x039C4DE4 FMOV S0, 1
	0x039C4DE8 RET
	0x039C4DEC MOV X1, X31
	0x039C4DF0 B 0x33BDD8C
	0x039C4DF4 STR X30, [X31 - 0x10]!
	0x039C4DF8 LDR X8, [X0 + 0x10]
	0x039C4DFC CBZ X8, 0x39C4E14
	0x039C4E00 LDR X8, [X8 + 0x190]
	0x039C4E04 CBZ X8, 0x39C4E14
	0x039C4E08 LDRB W0, [X8 + 0x12]
	0x039C4E0C LDR X30, [X31], #0x10
	0x039C4E10 RET
	0x039C4E14 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA1E000
	007 Move X22, 0x78F000
	008 Move X20, 0x78F000
	009 Move W8, [X21+3263]
	010 Move X22, [X22+1272]
	011 Move X20, [X20+1280]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x78F000
	018 Move X0, [X0+1280]
	019 Call 0x1C17CF4
	020 Move X0, 0x78F000
	021 Move X0, [X0+1272]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3263], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<BrickChunkAlloc>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

