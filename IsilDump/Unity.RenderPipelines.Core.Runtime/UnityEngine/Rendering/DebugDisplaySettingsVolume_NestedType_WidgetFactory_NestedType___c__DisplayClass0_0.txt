Type: UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory/<>c__DisplayClass0_0

Method: System.Void .ctor()

Disassembly:
	0x039A3060 BL 0x39EE864
	0x039A3064 CBZ X0, 0x39A3AC0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <CreateComponentSelector>b__0()

Disassembly:
	0x039A55EC LDR X0, [X19 + 0x30]
	0x039A55F0 LDR X8, [X8 + 0x8]
	0x039A55F4 MOV X1, X20
	0x039A55F8 LDR X2, [X8]
	0x039A55FC BL 0x21D15D4
	0x039A5600 TBNZ X0, 0x0, 0x39A562C
	0x039A5604 STR X20, [X19 + 0x30]
	0x039A5608 ADRP X8, 0x7AB000
	0x039A560C LDR X8, [X8 + 0x778]
	0x039A5610 LDR X0, [X8]
	0x039A5614 LDR W8, [X0 + 0xE0]
	0x039A5618 CBNZ W8, 0x39A5620
	0x039A561C BL 0x1C16DFC
	0x039A5620 BL 0x399C120
	0x039A5624 CBZ X0, 0x39A564C
	0x039A5628 BL 0x39A5654
	0x039A562C STR W31, [X19 + 0x48]
	0x039A5630 LDP X20, X19, [X31 + 0x30]
	0x039A5634 LDP X22, X21, [X31 + 0x20]
	0x039A5638 LDP X24, X23, [X31 + 0x10]
	0x039A563C LDR X30, [X31 + 0x8]
	0x039A5640 MOV W0, W31
	0x039A5644 LDR V8, [X31], #0x40
	0x039A5648 RET
	0x039A564C BL 0x1C16F20
	0x039A5650 BL 0x1C16F28
	0x039A5654 STP X30, X19, [X31 - 0x10]!
	0x039A5658 MOV X19, X0
	0x039A565C BL 0x399D46C
	0x039A5660 TBZ X0, 0x0, 0x39A5678
	0x039A5664 LDR X0, [X19 + 0x68]
	0x039A5668 CBZ X0, 0x39A5678
	0x039A566C MOV X1, X31
	0x039A5670 LDP X30, X19, [X31], #0x10
	0x039A5674 B 0x39F730C
	0x039A5678 LDP X30, X19, [X31], #0x10
	0x039A567C RET
	0x039A5680 SUB X31, X31, 0x40
	0x039A5684 STP X30, X23, [X31 + 0x10]
	0x039A5688 STP X22, X21, [X31 + 0x20]
	0x039A568C STP X20, X19, [X31 + 0x30]
	0x039A5690 ADRP X20, 0xA3C000
	0x039A5694 LDRB W8, [X20 + 0xBA4]
	0x039A5698 MOV X19, X0
	0x039A569C TBNZ X8, 0x0, 0x39A56D8
	0x039A56A0 ADRP X0, 0x7AC000
	0x039A56A4 LDR X0, [X0 + 0x698]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3D000
	005 Move W8, [X20+2967]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x7AD000
	012 Move X0, [X0+1224]
	013 Call 0x1C17CF4
	014 Move X0, 0x7AD000
	015 Move X0, [X0+1688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2967], W8
	019 Move X8, [X19+16]
	020 Compare X8, 0
	021 JumpIfEqual {54}
	022 Move X8, [X8+32]
	023 Compare X8, 0
	024 JumpIfEqual {54}
	025 Move X19, [X8+16]
	026 Compare X19, 0
	027 JumpIfEqual {54}
	028 Move X10, 0x7AD000
	029 Move X8, [X19]
	030 Move X10, [X10+1688]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X19
	042 Move W2, W31
	043 Call 0x1C5D788
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Add X8, X8, X9
	046 Add X0, X8, 312
	047 Move X2, [X0]
	048 Move X1, [X0+8]
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 CallNoReturn X2
	054 Call 0x1C17F20

Method: System.Void <CreateComponentSelector>b__1(System.Int32 value)

Disassembly:
	0x039A56A8 BL 0x1C16CF4
	0x039A56AC ADRP X0, 0x7AC000
	0x039A56B0 LDR X0, [X0 + 0x488]
	0x039A56B4 BL 0x1C16CF4
	0x039A56B8 ADRP X0, 0x7AC000
	0x039A56BC LDR X0, [X0 + 0x790]
	0x039A56C0 BL 0x1C16CF4
	0x039A56C4 ADRP X0, 0x74F000
	0x039A56C8 LDR X0, [X0 + 0x610]
	0x039A56CC BL 0x1C16CF4
	0x039A56D0 MOVZ W8, 0x1
	0x039A56D4 STRB W8, [X20 + 0xBA4]
	0x039A56D8 LDR X8, [X19 + 0x10]
	0x039A56DC CBZ X8, 0x39A57F4
	0x039A56E0 ADRP X21, 0x7AC000
	0x039A56E4 LDR X21, [X21 + 0x488]
	0x039A56E8 LDRB W20, [X8 + 0x20]
	0x039A56EC LDR X0, [X21]
	0x039A56F0 LDR W9, [X0 + 0xE0]
	0x039A56F4 CBNZ W9, 0x39A5700
	0x039A56F8 BL 0x1C16DFC
	0x039A56FC LDR X0, [X21]
	0x039A5700 LDR X8, [X19 + 0x18]
	0x039A5704 CMP W20, 0x0
	0x039A5708 MOVZ W9, 0x40
	0x039A570C MOVZ W10, 0x48
	0x039A5710 CSEL X9, X10, X9, EQ
	0x039A5714 CBZ X8, 0x39A57F4
	0x039A5718 LDR X8, [X8 + 0x10]
	0x039A571C CBZ X8, 0x39A57F4
	0x039A5720 LDR X20, [X8 + 0x10]
	0x039A5724 CBZ X20, 0x39A57F4
	0x039A5728 ADRP X11, 0x7AC000
	0x039A572C LDR X10, [X0 + 0xB8]
	0x039A5730 LDR X8, [X20]
	0x039A5734 LDR X11, [X11 + 0x698]
	0x039A5738 ADRP X23, 0x74F000
	0x039A573C ADRP X22, 0x7AC000
	0x039A5740 LDR X21, [X19 + 0x10]
	0x039A5744 LDR X19, [X10, X9, LSL]
	0x039A5748 LDRH W9, [X8 + 0x12E]
	0x039A574C LDR X1, [X11]
	0x039A5750 LDR X23, [X23 + 0x610]
	0x039A5754 LDR X22, [X22 + 0x790]
	0x039A5758 CBZ X9, 0x39A577C
	0x039A575C LDR X10, [X8 + 0xB0]
	0x039A5760 ADD X10, X10, 0x8
	0x039A5764 LDUR X11, [X10 - 0x8]
	0x039A5768 CMP X11, X1
	0x039A576C B.EQ 0x39A578C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA3D000
	006 Move W8, [X21+2968]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x7AD000
	014 Move X0, [X0+1224]
	015 Call 0x1C17CF4
	016 Move X0, 0x7AD000
	017 Move X0, [X0+1688]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2968], W8
	021 Move X8, [X20+16]
	022 Compare X8, 0
	023 JumpIfEqual {59}
	024 Move X8, [X8+32]
	025 Compare X8, 0
	026 JumpIfEqual {59}
	027 Move X20, [X8+16]
	028 Compare X20, 0
	029 JumpIfEqual {59}
	030 Move X10, 0x7AD000
	031 Move X8, [X20]
	032 Move X10, [X10+1688]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 1
	044 Move X0, X20
	045 Call 0x1C5D788
	046 Move W9, [X10]
	047 Add W9, W9, 1
	048 Add X8, X8, W9
	049 Add X0, X8, 312
	050 Move X3, [X0]
	051 Move X2, [X0+8]
	052 Move X0, X20
	053 Move W1, W19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 CallNoReturn X3
	059 Call 0x1C17F20

Method: System.Int32 <CreateComponentSelector>b__2()

Disassembly:
	0x039A5770 SUBS X9, X9, 0x1
	0x039A5774 ADD X10, X10, 0x10
	0x039A5778 B.NE 0x39A5764
	0x039A577C MOVZ W2, 0xE
	0x039A5780 MOV X0, X20
	0x039A5784 BL 0x1C5C788
	0x039A5788 B 0x39A579C
	0x039A578C LDR W9, [X10]
	0x039A5790 ADD W9, W9, 0xE
	0x039A5794 ADD X8, X8, W9, 0x4, SXTW
	0x039A5798 ADD X0, X8, 0x138
	0x039A579C LDP X8, X2, [X0]
	0x039A57A0 MOV X0, X20
	0x039A57A4 MOV X1, X21
	0x039A57A8 BLR X8
	0x039A57AC MOVZ W8, 0x42C80000
	0x039A57B0 FMOV S1, W8
	0x039A57B4 FMUL S0, S0, S1
	0x039A57B8 ADD X0, X31, 0xC
	0x039A57BC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA3D000
	005 Move W8, [X20+2969]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x7AD000
	012 Move X0, [X0+1224]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2969], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreateComponentSelector>b__3(System.Int32 value)

Disassembly:
	0x039A57C0 STR S0, [X31 + 0xC]
	0x039A57C4 BL 0x338FE24
	0x039A57C8 LDR X1, [X23]
	0x039A57CC LDR X3, [X22]
	0x039A57D0 MOV X2, X0
	0x039A57D4 MOV X0, X19
	0x039A57D8 MOV X4, X31
	0x039A57DC BL 0x32277C4
	0x039A57E0 LDP X20, X19, [X31 + 0x30]
	0x039A57E4 LDP X22, X21, [X31 + 0x20]
	0x039A57E8 LDP X30, X23, [X31 + 0x10]
	0x039A57EC ADD X31, X31, 0x40
	0x039A57F0 RET
	0x039A57F4 BL 0x1C16F20
	0x039A57F8 LDR X0, [X0 + 0x10]
	0x039A57FC RET
	0x039A5800 STR X30, [X31 - 0x20]!
	0x039A5804 STP X20, X19, [X31 + 0x10]
	0x039A5808 ADRP X20, 0xA3C000
	0x039A580C LDRB W8, [X20 + 0xBA5]
	0x039A5810 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA3D000
	006 Move W8, [X21+2970]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x7AD000
	014 Move X0, [X0+1224]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2970], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+24], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

