Type: UnityEngine.Rendering.ComponentSingleton`1

Method: TType get_instance()

Disassembly:
	0x02960C38 BL 0x1C16D44
	0x02960C3C CBZ X21, 0x2960C78
	0x02960C40 LDR X8, [X21 + 0x18]
	0x02960C44 CBZ X8, 0x2960C78
	0x02960C48 LDR W9, [X20 + 0x18]
	0x02960C4C LDR W8, [X8 + 0x18]
	0x02960C50 SDIV W8, W9, W8
	0x02960C54 STR W8, [X19 + 0x24]
	0x02960C58 LDP X20, X19, [X31 + 0x70]
	0x02960C5C LDP X22, X21, [X31 + 0x60]
	0x02960C60 LDP X24, X23, [X31 + 0x50]
	0x02960C64 LDP X26, X25, [X31 + 0x40]
	0x02960C68 LDP X30, X27, [X31 + 0x30]
	0x02960C6C ADD X31, X31, 0x80
	0x02960C70 RET
	0x02960C74 BL 0x1C16F20
	0x02960C78 BL 0x1C16F20
	0x02960C7C BL 0x1C16F20
	0x02960C80 MOV X0, X21
	0x02960C84 BL 0x1C16F18
	0x02960C88 B 0x2960CA0
	0x02960C8C B 0x2960CA0
	0x02960C90 B 0x2960CA0
	0x02960C94 B 0x2960CA0
	0x02960C98 B 0x2960CA0
	0x02960C9C B 0x2960CA0
	0x02960CA0 CMP W1, 0x1
	0x02960CA4 B.NE 0x2960CC0
	0x02960CA8 BL 0x3EB1AD0
	0x02960CAC LDR X21, [X0]
	0x02960CB0 BL 0x3EB1AE0
	0x02960CB4 MOV W22, W31
	0x02960CB8 CBNZ X20, 0x2960BB0
	0x02960CBC B 0x2960C08
	0x02960CC0 MOV X19, X0
	0x02960CC4 MOV X21, X31
	0x02960CC8 B 0x2960CD0
	0x02960CCC MOV X19, X0
	0x02960CD0 CBZ X20, 0x2960D2C
	0x02960CD4 LDR X8, [X20]
	0x02960CD8 LDR X1, [X26]
	0x02960CDC LDRH W9, [X8 + 0x12E]
	0x02960CE0 CBZ X9, 0x2960D04
	0x02960CE4 LDR X10, [X8 + 0xB0]
	0x02960CE8 ADD X10, X10, 0x8
	0x02960CEC LDUR X11, [X10 - 0x8]
	0x02960CF0 CMP X11, X1
	0x02960CF4 B.EQ 0x2960D14
	0x02960CF8 SUBS X9, X9, 0x1
	0x02960CFC ADD X10, X10, 0x10
	0x02960D00 B.NE 0x2960CEC
	0x02960D04 MOV X0, X20
	0x02960D08 MOV W2, W31
	0x02960D0C BL 0x1C5C788
	0x02960D10 B 0x2960D20
	0x02960D14 LDRSW X9, [X10]
	0x02960D18 ADD X8, X8, X9, 0x4, LSL
	0x02960D1C ADD X0, X8, 0x138
	0x02960D20 LDP X8, X1, [X0]
	0x02960D24 MOV X0, X20
	0x02960D28 BLR X8
	0x02960D2C CBNZ X21, 0x2960D38
	0x02960D30 MOV X0, X19
	0x02960D34 BL 0x1D2C690
	0x02960D38 MOV X0, X21
	0x02960D3C BL 0x1C16F18
	0x02960D40 BL 0x1990590
	0x02960D44 STR X30, [X31 - 0x60]!
	0x02960D48 STP X28, X27, [X31 + 0x10]
	0x02960D4C STP X26, X25, [X31 + 0x20]
	0x02960D50 STP X24, X23, [X31 + 0x30]
	0x02960D54 STP X22, X21, [X31 + 0x40]
	0x02960D58 STP X20, X19, [X31 + 0x50]
	0x02960D5C ADRP X25, 0x1A7A000
	0x02960D60 LDRB W8, [X25 + 0xE53]
	0x02960D64 MOV X19, X5
	0x02960D68 MOV X21, X4
	0x02960D6C MOV W23, W3
	0x02960D70 MOV W24, W2
	0x02960D74 MOV W22, W1
	0x02960D78 MOV X20, X0
	0x02960D7C TBNZ X8, 0x0, 0x2960DAC
	0x02960D80 ADRP X0, 0x1794000
	0x02960D84 LDR X0, [X0 + 0xE58]
	0x02960D88 BL 0x1C16CF4
	0x02960D8C ADRP X0, 0x1793000
	0x02960D90 LDR X0, [X0 + 0x9D0]
	0x02960D94 BL 0x1C16CF4
	0x02960D98 ADRP X0, 0x1799000
	0x02960D9C LDR X0, [X0 + 0xCC0]
	0x02960DA0 BL 0x1C16CF4
	0x02960DA4 MOVZ W8, 0x1
	0x02960DA8 STRB W8, [X25 + 0xE53]
	0x02960DAC MOV X0, X20
	0x02960DB0 MOV X1, X31
	0x02960DB4 BL 0x33BDD8C
	0x02960DB8 CMP W22, 0x0
	0x02960DBC B.LE 0x2960F48
	0x02960DC0 TBNZ X24, 0x1F, 0x2960F78
	0x02960DC4 ADRP X8, 0x1793000
	0x02960DC8 LDR X8, [X8 + 0x9D0]
	0x02960DCC CMP W24, W22
	0x02960DD0 MOV W1, W22
	0x02960DD4 CSEL W24, W22, W24, LT
	0x02960DD8 LDR X0, [X8]
	0x02960DDC BL 0x1C16D6C
	0x02960DE0 CBZ X0, 0x2960F44
	0x02960DE4 LDR X1, [X0 + 0x18]
	0x02960DE8 MOV X22, X0
	0x02960DEC CMP W1, 0x1
	0x02960DF0 B.LT 0x2960E4C
	0x02960DF4 ADRP X27, 0x1799000
	0x02960DF8 LDR X27, [X27 + 0xCC0]
	0x02960DFC MOV X26, X31
	0x02960E00 ADD X28, X22, 0x20
	0x02960E04 LDR X0, [X27]
	0x02960E08 BL 0x1C16F10
	0x02960E0C MOV X1, X31
	0x02960E10 MOV X25, X0
	0x02960E14 BL 0x33BDD8C
	0x02960E18 CBZ X25, 0x2960E30
	0x02960E1C LDR X8, [X22]
	0x02960E20 MOV X0, X25
	0x02960E24 LDR X1, [X8 + 0x40]
	0x02960E28 BL 0x1C16E00
	0x02960E2C CBZ X0, 0x2960F38
	0x02960E30 LDR W1, [X22 + 0x18]
	0x02960E34 CMP X26, X1
	0x02960E38 B.CS 0x2960F34
	0x02960E3C STR X25, [X28, X26, LSL #3]
	0x02960E40 ADD X26, X26, 0x1
	0x02960E44 CMP X26, W1, SXTW
	0x02960E48 B.LT 0x2960E04
	0x02960E4C ADRP X8, 0x1794000
	0x02960E50 LDR X8, [X8 + 0xE58]
	0x02960E54 LDR X0, [X8]
	0x02960E58 BL 0x1C16D6C
	0x02960E5C LDR X8, [X19 + 0x20]
	0x02960E60 MOV X25, X0
	0x02960E64 LDR X8, [X8 + 0xC0]
	0x02960E68 LDR X8, [X8 + 0xB8]
	0x02960E6C LDRB W9, [X8 + 0x135]
	0x02960E70 TBNZ X9, 0x0, 0x2960E80
	0x02960E74 MOV X0, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1A7B000
	007 Move W8, [X20+3663]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x1794000
	014 Move X0, [X0+2648]
	015 Call 0x1C17CF4
	016 Move X0, 0x1794000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x1794000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0x17BF000
	023 Move X0, [X0+576]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3663], W8
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X22, 0x1794000
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move X22, [X22+1432]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X22]
	045 Move X9, [X0+184]
	046 Move W10, [X8+224]
	047 Move X20, [X9]
	048 Compare W10, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {167}
	060 Move X0, [X19+32]
	061 Move X20, 0x1794000
	062 Move W8, [X0+309]
	063 Move X20, [X20+1728]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X20]
	070 Move X9, [X0+192]
	071 Move W10, [X8+224]
	072 Move X20, [X9+24]
	073 Compare W10, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Call Type.GetTypeFromHandle, X0
	080 Compare X0, 0
	081 JumpIfEqual {190}
	082 Move X8, [X0]
	083 Move X9, [X8+424]
	084 Move X1, [X8+432]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, 0x17BF000
	087 Move X8, [X8+576]
	088 Move X1, X0
	089 Move X2, X31
	090 Move X8, [X8]
	091 Move X0, X8
	092 Call String.Concat, X0, X1
	093 Move X8, 0x1794000
	094 Move X8, [X8+2648]
	095 Move X21, X0
	096 Move X8, [X8]
	097 Move X0, X8
	098 Call 0x1C17F10
	099 Move X1, X21
	100 Move X2, X31
	101 Move X20, X0
	102 Call GameObject..ctor, X0, X1
	103 Compare X20, 0
	104 JumpIfEqual {190}
	105 Move W1, 61
	106 Move X0, X20
	107 Move X2, X31
	108 Call Object.set_hideFlags, X0, X1
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X20
	115 Move X1, X31
	116 Call Object.DontDestroyOnLoad, X0
	117 Move X0, X20
	118 Move W1, W31
	119 Move X2, X31
	120 Call GameObject.SetActive, X0, X1
	121 Move X0, [X19+32]
	122 Move W8, [X0+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {128}
	127 Call 0x1C5D684
	128 Move X8, [X0+192]
	129 Move X0, X20
	130 Move X1, [X8+32]
	131 Call 0x21E61FC, X0
	132 Move X8, [X19+32]
	133 Move X20, X0
	134 Move W9, [X8+309]
	135 Move TEMP, X9
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {142}
	139 Move X0, X8
	140 Call 0x1C5D684
	141 Move X8, X0
	142 Move X8, [X8+192]
	143 Move X0, [X8+16]
	144 Move W8, [X0+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {150}
	149 Call 0x1C5D684
	150 Move X8, [X0+184]
	151 Move [X8], X20
	152 Move X0, [X19+32]
	153 Move W8, [X0+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Move X8, [X0+192]
	160 Move X0, [X8+16]
	161 Move W8, [X0+309]
	162 Move TEMP, X8
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {167}
	166 Call 0x1C5D684
	167 Move X0, [X19+32]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move X8, [X0+192]
	175 Move X0, [X8+16]
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Move X8, [X0+184]
	183 Move X20, [X31+32]
	184 Move X19, [X31+40]
	185 Move X22, [X31+16]
	186 Move X21, [X31+24]
	187 Move X0, [X8]
	188 Move X30, [X31+48]
	189 Return X0
	190 Call 0x1C17F20

Method: System.Void Release()

Disassembly:
	0x02960E78 BL 0x1C5C684
	0x02960E7C MOV X8, X0
	0x02960E80 MOV X0, X8
	0x02960E84 MOV W1, W24
	0x02960E88 AND W26, W23, 0x1
	0x02960E8C BL 0x1C16D6C
	0x02960E90 LDR X8, [X19 + 0x20]
	0x02960E94 MOV X23, X0
	0x02960E98 LDR X8, [X8 + 0xC0]
	0x02960E9C LDR X8, [X8 + 0xA8]
	0x02960EA0 LDRB W9, [X8 + 0x135]
	0x02960EA4 TBNZ X9, 0x0, 0x2960EB4
	0x02960EA8 MOV X0, X8
	0x02960EAC BL 0x1C5C684
	0x02960EB0 MOV X8, X0
	0x02960EB4 MOV X0, X8
	0x02960EB8 BL 0x1C16F10
	0x02960EBC LDR X8, [X19 + 0x20]
	0x02960EC0 MOV X1, X23
	0x02960EC4 MOV X2, X22
	0x02960EC8 MOV X3, X25
	0x02960ECC LDR X8, [X8 + 0xC0]
	0x02960ED0 MOV X24, X0
	0x02960ED4 LDR X4, [X8 + 0xC0]
	0x02960ED8 BL 0x2676894
	0x02960EDC BL 0x1C16D44
	0x02960EE0 STR X24, [X20 + 0x10]
	0x02960EE4 CBNZ X21, 0x2960EFC
	0x02960EE8 LDR X8, [X19 + 0x20]
	0x02960EEC LDR X8, [X8 + 0xC0]
	0x02960EF0 LDR X0, [X8 + 0xC8]
	0x02960EF4 BL 0x2119AB4
	0x02960EF8 MOV X21, X0
	0x02960EFC STR X21, [X20 + 0x18]
	0x02960F00 STRB W26, [X20 + 0x20]
	0x02960F04 CBZ X23, 0x2960F44
	0x02960F08 LDR W8, [X23 + 0x18]
	0x02960F0C LDR W9, [X22 + 0x18]
	0x02960F10 LDP X22, X21, [X31 + 0x40]
	0x02960F14 LDP X24, X23, [X31 + 0x30]
	0x02960F18 LDP X26, X25, [X31 + 0x20]
	0x02960F1C SDIV W8, W8, W9
	0x02960F20 STR W8, [X20 + 0x24]
	0x02960F24 LDP X20, X19, [X31 + 0x50]
	0x02960F28 LDP X28, X27, [X31 + 0x10]
	0x02960F2C LDR X30, [X31], #0x60
	0x02960F30 RET
	0x02960F34 BL 0x1C16F28
	0x02960F38 BL 0x1C16F44
	0x02960F3C MOV X1, X31
	0x02960F40 BL 0x1C16DEC
	0x02960F44 BL 0x1C16F20
	0x02960F48 ADRP X0, 0x179B000
	0x02960F4C LDR X0, [X0 + 0x760]
	0x02960F50 BL 0x1C16D08
	0x02960F54 BL 0x1C16F10
	0x02960F58 MOV X20, X0
	0x02960F5C ADRP X0, 0x17BE000
	0x02960F60 LDR X0, [X0 + 0x250]
	0x02960F64 BL 0x1C16D08
	0x02960F68 MOV X21, X0
	0x02960F6C ADRP X0, 0x17BE000
	0x02960F70 LDR X0, [X0 + 0x258]
	0x02960F74 B 0x2960FA4
	0x02960F78 ADRP X0, 0x179B000
	0x02960F7C LDR X0, [X0 + 0x760]
	0x02960F80 BL 0x1C16D08
	0x02960F84 BL 0x1C16F10
	0x02960F88 MOV X20, X0
	0x02960F8C ADRP X0, 0x17BD000
	0x02960F90 LDR X0, [X0 + 0x58]
	0x02960F94 BL 0x1C16D08
	0x02960F98 MOV X21, X0
	0x02960F9C ADRP X0, 0x17BE000
	0x02960FA0 LDR X0, [X0 + 0x260]
	0x02960FA4 BL 0x1C16D08
	0x02960FA8 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1A7B000
	005 Move W8, [X20+3664]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x17BC000
	012 Move X0, [X0+2296]
	013 Call 0x1C17CF4
	014 Move X0, 0x1794000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3664], W8
	019 Move X0, [X19+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+192]
	027 Move X20, 0x1794000
	028 Move X0, [X8+16]
	029 Move W8, [X0+309]
	030 Move X20, [X20+1432]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X20]
	037 Move X9, [X0+184]
	038 Move W10, [X8+224]
	039 Move X20, [X9]
	040 Compare W10, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {102}
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X0, [X8]
	069 Compare X0, 0
	070 JumpIfEqual {106}
	071 Move X1, X31
	072 Call Component.get_gameObject, X0
	073 Move X8, 0x17BC000
	074 Move X8, [X8+2296]
	075 Move X20, X0
	076 Move X8, [X8]
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X0, X20
	083 Move X1, X31
	084 Call CoreUtils.Destroy, X0
	085 Move X0, [X19+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X8, [X0+192]
	093 Move X0, [X8+16]
	094 Move W8, [X0+309]
	095 Move TEMP, X8
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {100}
	099 Call 0x1C5D684
	100 Move X8, [X0+184]
	101 Move [X8], X31
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move X30, [X31+32]
	105 Return 
	106 Call 0x1C17F20

