Type: UnityEngine.Rendering.HDROutputUtils

Method: System.Boolean GetColorSpaceForGamut(UnityEngine.ColorGamut gamut, out System.Int32 colorspace)

Disassembly:
	0x039EBE38 MOVZ W8, 0x1
	0x039EBE3C STRB W8, [X20 + 0xE3E]
	0x039EBE40 ADRP X21, 0x768000
	0x039EBE44 LDR X21, [X21 + 0x5D0]
	0x039EBE48 MOV X20, X31
	0x039EBE4C MOVZ W22, 0x1
	0x039EBE50 LDR X0, [X21]
	0x039EBE54 LDR W8, [X0 + 0xE0]
	0x039EBE58 CBNZ W8, 0x39EBE64
	0x039EBE5C BL 0x1C16DFC
	0x039EBE60 LDR X0, [X21]
	0x039EBE64 LDR X8, [X0 + 0xB8]
	0x039EBE68 LDR X8, [X8]
	0x039EBE6C CBZ X8, 0x39EBEE0
	0x039EBE70 LDRSW X9, [X8 + 0x18]
	0x039EBE74 CMP X20, X9
	0x039EBE78 B.GE 0x39EBED0
	0x039EBE7C LDR W9, [X0 + 0xE0]
	0x039EBE80 CBNZ W9, 0x39EBE98
	0x039EBE84 BL 0x1C16DFC
	0x039EBE88 LDR X8, [X21]
	0x039EBE8C LDR X8, [X8 + 0xB8]
	0x039EBE90 LDR X8, [X8]
	0x039EBE94 CBZ X8, 0x39EBEE0
	0x039EBE98 LDR W9, [X8 + 0x18]
	0x039EBE9C CMP X20, X9
	0x039EBEA0 B.CS 0x39EBEE4
	0x039EBEA4 ADD X8, X8, X20, 0x3, LSL
	0x039EBEA8 LDR X0, [X8 + 0x20]
	0x039EBEAC LSLV W8, W22, W20
	0x039EBEB0 MOV X1, X31
	0x039EBEB4 AND W8, W8, W19, 0x0
	0x039EBEB8 CBZ W8, 0x39EBEC4
	0x039EBEBC BL 0x3C13FB4
	0x039EBEC0 B 0x39EBEC8
	0x039EBEC4 BL 0x3C13FF0
	0x039EBEC8 ADD X20, X20, 0x1
	0x039EBECC B 0x39EBE50
	0x039EBED0 LDP X20, X19, [X31 + 0x20]
	0x039EBED4 LDP X22, X21, [X31 + 0x10]
	0x039EBED8 LDR X30, [X31], #0x30
	0x039EBEDC RET
	0x039EBEE0 BL 0x1C16F20
	0x039EBEE4 BL 0x1C16F28
	0x039EBEE8 STP X30, X23, [X31 - 0x30]!
	0x039EBEEC STP X22, X21, [X31 + 0x10]
	0x039EBEF0 STP X20, X19, [X31 + 0x20]
	0x039EBEF4 ADRP X21, 0x9F6000
	0x039EBEF8 LDRB W8, [X21 + 0xE3F]
	0x039EBEFC MOV X19, X1
	0x039EBF00 MOV W20, W0
	0x039EBF04 TBNZ X8, 0x0, 0x39EBF1C
	0x039EBF08 ADRP X0, 0x768000
	0x039EBF0C LDR X0, [X0 + 0x5D0]
	0x039EBF10 BL 0x1C16CF4
	0x039EBF14 MOVZ W8, 0x1
	0x039EBF18 STRB W8, [X21 + 0xE3F]
	0x039EBF1C ADRP X22, 0x768000
	0x039EBF20 LDR X22, [X22 + 0x5D0]
	0x039EBF24 MOV X21, X31
	0x039EBF28 MOVZ W23, 0x1
	0x039EBF2C LDR X0, [X22]
	0x039EBF30 LDR W8, [X0 + 0xE0]
	0x039EBF34 CBNZ W8, 0x39EBF40
	0x039EBF38 BL 0x1C16DFC
	0x039EBF3C LDR X0, [X22]
	0x039EBF40 LDR X8, [X0 + 0xB8]
	0x039EBF44 LDR X8, [X8]
	0x039EBF48 CBZ X8, 0x39EBFC4
	0x039EBF4C LDRSW X9, [X8 + 0x18]
	0x039EBF50 CMP X21, X9
	0x039EBF54 B.GE 0x39EBFB4
	0x039EBF58 LDR W9, [X0 + 0xE0]
	0x039EBF5C CBNZ W9, 0x39EBF74
	0x039EBF60 BL 0x1C16DFC
	0x039EBF64 LDR X8, [X22]
	0x039EBF68 LDR X8, [X8 + 0xB8]
	0x039EBF6C LDR X8, [X8]
	0x039EBF70 CBZ X8, 0x39EBFC4
	0x039EBF74 LDR W9, [X8 + 0x18]
	0x039EBF78 CMP X21, X9
	0x039EBF7C B.CS 0x39EBFC8
	0x039EBF80 CBZ X19, 0x39EBFC4
	0x039EBF84 ADD X8, X8, X21, 0x3, LSL
	0x039EBF88 LDR X1, [X8 + 0x20]
	0x039EBF8C LSLV W8, W23, W21
	0x039EBF90 MOV X0, X19
	0x039EBF94 MOV X2, X31
	0x039EBF98 AND W8, W8, W20, 0x0
	0x039EBF9C CBZ W8, 0x39EBFA8
	0x039EBFA0 BL 0x3C4D0E0
	0x039EBFA4 B 0x39EBFAC
	0x039EBFA8 BL 0x3C4D124
	0x039EBFAC ADD X21, X21, 0x1
	0x039EBFB0 B 0x39EBF2C
	0x039EBFB4 LDP X20, X19, [X31 + 0x20]
	0x039EBFB8 LDP X22, X21, [X31 + 0x10]
	0x039EBFBC LDP X30, X23, [X31], #0x30
	0x039EBFC0 RET
	0x039EBFC4 BL 0x1C16F20
	0x039EBFC8 BL 0x1C16F28
	0x039EBFCC SUB X31, X31, 0x60
	0x039EBFD0 STR X30, [X31 + 0x30]
	0x039EBFD4 STP X22, X21, [X31 + 0x40]
	0x039EBFD8 STP X20, X19, [X31 + 0x50]
	0x039EBFDC ADRP X19, 0x9F6000
	0x039EBFE0 ADRP X20, 0x708000
	0x039EBFE4 LDRB W8, [X19 + 0xE41]
	0x039EBFE8 LDR X20, [X20 + 0xAC8]
	0x039EBFEC TBNZ X8, 0x0, 0x39EC064
	0x039EBFF0 ADRP X0, 0x708000
	0x039EBFF4 LDR X0, [X0 + 0xDF8]
	0x039EBFF8 BL 0x1C16CF4
	0x039EBFFC ADRP X0, 0x768000
	0x039EC000 LDR X0, [X0 + 0x5D0]
	0x039EC004 BL 0x1C16CF4
	0x039EC008 ADRP X0, 0x767000
	0x039EC00C LDR X0, [X0 + 0x5D8]
	0x039EC010 BL 0x1C16CF4
	0x039EC014 ADRP X0, 0x767000
	0x039EC018 LDR X0, [X0 + 0x5E0]
	0x039EC01C BL 0x1C16CF4
	0x039EC020 ADRP X0, 0x707000
	0x039EC024 LDR X0, [X0 + 0xAC8]
	0x039EC028 BL 0x1C16CF4
	0x039EC02C ADRP X0, 0x707000
	0x039EC030 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x9F7000
	009 Move W8, [X21+3633]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x769000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move X0, 0x709000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x709000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0x769000
	026 Move X0, [X0+1400]
	027 Call 0x1C17CF4
	028 Move X0, 0x769000
	029 Move X0, [X0+1408]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3633], W8
	033 Move X21, 0x709000
	034 Move X23, 0x769000
	035 Move X22, 0x709000
	036 Move X21, [X21+2512]
	037 Move X23, [X23+1392]
	038 Move X22, [X22+2600]
	039 Move W0, W20
	040 Move X1, X31
	041 Call ColorGamutUtility.GetWhitePoint, X0
	042 Compare W0, 0
	043 JumpIfEqual {89}
	044 Move X0, [X21]
	045 Move W1, 1
	046 Call 0x1C17D6C
	047 Move X8, [X23]
	048 Move X21, X0
	049 Move TEMP, 0
	050 Not TEMP
	051 Move X9, TEMP
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Move [X31+8], X8
	055 Move [X31+16], X9
	056 Move [X31+24], W20
	057 Call Enum.ToString, X0
	058 Compare X21, 0
	059 JumpIfEqual {146}
	060 Move X20, X0
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X21]
	064 Move X0, X20
	065 Move X1, [X8+64]
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {148}
	069 Move W8, [X21+24]
	070 Compare W8, 0
	071 JumpIfEqual {147}
	072 Move [X21+32], X20
	073 Move X0, [X22]
	074 Move X20, 0x769000
	075 Move W8, [X0+224]
	076 Move X20, [X20+1408]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, [X20]
	081 Move X1, X21
	082 Move X2, X31
	083 Call Debug.LogWarningFormat, X0, X1
	084 Move W0, W31
	085 Move TEMP, 0
	086 Not TEMP
	087 Move W8, TEMP
	088 Move [X19], W8
	089 Move W0, W20
	090 Move X1, X31
	091 Call ColorGamutUtility.GetColorPrimaries, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Compare W0, 0
	095 JumpIfNotEqual {109}
	096 Move [X19], W31
	097 Move W8, 2
	098 Move [X19], W8
	099 Move W0, 1
	100 Move [X19], W0
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X30, [X31+32]
	106 Move X23, [X31+40]
	107 Add X31, X31, 80
	108 Return X0
	109 Move X0, [X21]
	110 Move W1, 1
	111 Call 0x1C17D6C
	112 Move X8, [X23]
	113 Move X21, X0
	114 Move TEMP, 0
	115 Not TEMP
	116 Move X9, TEMP
	117 Add X0, X31, 8
	118 Move X1, X31
	119 Move [X31+8], X8
	120 Move [X31+16], X9
	121 Move [X31+24], W20
	122 Call Enum.ToString, X0
	123 Compare X21, 0
	124 JumpIfEqual {146}
	125 Move X20, X0
	126 Compare X0, 0
	127 JumpIfEqual {134}
	128 Move X8, [X21]
	129 Move X0, X20
	130 Move X1, [X8+64]
	131 Call 0x1C17E00
	132 Compare X0, 0
	133 JumpIfEqual {148}
	134 Move W8, [X21+24]
	135 Compare W8, 0
	136 JumpIfEqual {147}
	137 Move [X21+32], X20
	138 Move X0, [X22]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X8, 0x768000
	144 Move X8, [X8+1400]
	145 Move X0, [X8]
	146 Call 0x1C17F20
	147 Call 0x1C17F28
	148 Call 0x1C17F44
	149 Move X1, X31
	150 Call 0x1C17DEC

Method: System.Boolean GetColorEncodingForGamut(UnityEngine.ColorGamut gamut, out System.Int32 encoding)

Disassembly:
	0x039EC034 BL 0x1C16CF4
	0x039EC038 ADRP X0, 0x767000
	0x039EC03C LDR X0, [X0 + 0x5E8]
	0x039EC040 BL 0x1C16CF4
	0x039EC044 ADRP X0, 0x767000
	0x039EC048 LDR X0, [X0 + 0x5F0]
	0x039EC04C BL 0x1C16CF4
	0x039EC050 ADRP X0, 0x767000
	0x039EC054 LDR X0, [X0 + 0x5F8]
	0x039EC058 BL 0x1C16CF4
	0x039EC05C MOVZ W8, 0x1
	0x039EC060 STRB W8, [X19 + 0xE41]
	0x039EC064 LDR X0, [X20]
	0x039EC068 MOVZ W1, 0x3
	0x039EC06C BL 0x1C16D6C
	0x039EC070 CBZ X0, 0x39EC23C
	0x039EC074 LDR W8, [X0 + 0x18]
	0x039EC078 CBZ W8, 0x39EC238
	0x039EC07C ADRP X9, 0x767000
	0x039EC080 LDR X9, [X9 + 0x5E8]
	0x039EC084 CMP W8, 0x1
	0x039EC088 LDR X9, [X9]
	0x039EC08C STR X9, [X0 + 0x20]
	0x039EC090 B.EQ 0x39EC238
	0x039EC094 ADRP X9, 0x767000
	0x039EC098 LDR X9, [X9 + 0x5F0]
	0x039EC09C CMP W8, 0x2
	0x039EC0A0 LDR X9, [X9]
	0x039EC0A4 STR X9, [X0 + 0x28]
	0x039EC0A8 B.LS 0x39EC238
	0x039EC0AC ADRP X8, 0x767000
	0x039EC0B0 LDR X8, [X8 + 0x5F8]
	0x039EC0B4 ADRP X20, 0x767000
	0x039EC0B8 ADRP X9, 0x707000
	0x039EC0BC ADRP X22, 0x707000
	0x039EC0C0 LDR X8, [X8]
	0x039EC0C4 LDR X20, [X20 + 0x5D0]
	0x039EC0C8 STR X8, [X0 + 0x30]
	0x039EC0CC LDR X8, [X20]
	0x039EC0D0 LDR X8, [X8 + 0xB8]
	0x039EC0D4 LDR X9, [X9 + 0x6C0]
	0x039EC0D8 STR X0, [X8]
	0x039EC0DC ADRP X8, 0x767000
	0x039EC0E0 LDR X0, [X9]
	0x039EC0E4 LDR X8, [X8 + 0x5D8]
	0x039EC0E8 LDR W9, [X0 + 0xE0]
	0x039EC0EC LDR X19, [X8]
	0x039EC0F0 LDR X22, [X22 + 0xDF8]
	0x039EC0F4 CBNZ W9, 0x39EC0FC
	0x039EC0F8 BL 0x1C16DFC
	0x039EC0FC ADRP X21, 0x767000
	0x039EC100 LDR X21, [X21 + 0x5E0]
	0x039EC104 MOV X0, X19
	0x039EC108 MOV X1, X31
	0x039EC10C BL 0x338C698
	0x039EC110 LDR X8, [X22]
	0x039EC114 MOV X19, X0
	0x039EC118 LDR W9, [X8 + 0xE0]
	0x039EC11C CBNZ W9, 0x39EC128
	0x039EC120 MOV X0, X8
	0x039EC124 BL 0x1C16DFC
	0x039EC128 MOV X0, X19
	0x039EC12C MOV X1, X31
	0x039EC130 BL 0x33B03E4
	0x039EC134 LDR X8, [X20]
	0x039EC138 MOVZ W1, 0x3
	0x039EC13C LDR X8, [X8 + 0xB8]
	0x039EC140 STR X0, [X8 + 0x8]
	0x039EC144 LDR X0, [X21]
	0x039EC148 BL 0x1C16D6C
	0x039EC14C LDR X8, [X20]
	0x039EC150 LDR X8, [X8 + 0xB8]
	0x039EC154 LDR X8, [X8]
	0x039EC158 CBZ X8, 0x39EC23C
	0x039EC15C LDR W9, [X8 + 0x18]
	0x039EC160 CBZ W9, 0x39EC238
	0x039EC164 LDR X1, [X8 + 0x20]
	0x039EC168 MOV X19, X0
	0x039EC16C ADD X0, X31, 0x20
	0x039EC170 MOV X2, X31
	0x039EC174 STP X31, X31, [X31 + 0x20]
	0x039EC178 BL 0x3C5D47C
	0x039EC17C CBZ X19, 0x39EC23C
	0x039EC180 LDR W8, [X19 + 0x18]
	0x039EC184 CBZ W8, 0x39EC238
	0x039EC188 LDR V0, [X31 + 0x2]
	0x039EC18C STR V0, [X19 + 0x2]
	0x039EC190 LDR X8, [X20]
	0x039EC194 LDR X8, [X8 + 0xB8]
	0x039EC198 LDR X8, [X8]
	0x039EC19C CBZ X8, 0x39EC23C
	0x039EC1A0 LDR W9, [X8 + 0x18]
	0x039EC1A4 CMP W9, 0x1
	0x039EC1A8 B.LS 0x39EC238

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x9F6000
	007 Move W8, [X21+3634]
	008 Move X19, X1
	009 Move W20, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x768000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move X0, 0x708000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x708000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x768000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3634], W8
	028 Move W0, W20
	029 Move X1, X31
	030 Call ColorGamutUtility.GetTransferFunction, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, -48578560
	033 Move W8, W0
	034 Add X9, X9, 2756
	035 NotImplemented "Instruction ADR not yet implemented."
	036 Move W11, [X9]
	037 Add X10, X10, X11
	038 CallNoReturn X10
	039 Move [X19], W31
	040 Move X8, 0x708000
	041 Move X8, [X8+2512]
	042 Move W1, 1
	043 Move X0, [X8]
	044 Call 0x1C17D6C
	045 Move X8, 0x768000
	046 Move X8, [X8+1392]
	047 Move X21, X0
	048 Move TEMP, 0
	049 Not TEMP
	050 Move X9, TEMP
	051 Add X0, X31, 8
	052 Move X8, [X8]
	053 Move X1, X31
	054 Move [X31+24], W20
	055 Move [X31+8], X8
	056 Move [X31+16], X9
	057 Call Enum.ToString, X0
	058 Compare X21, 0
	059 JumpIfEqual {102}
	060 Move X20, X0
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, [X21]
	064 Move X0, X20
	065 Move X1, [X8+64]
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfEqual {104}
	069 Move W8, [X21+24]
	070 Compare W8, 0
	071 JumpIfEqual {103}
	072 Move [X21+32], X20
	073 Move X8, 0x708000
	074 Move X8, [X8+2600]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X8, 0x768000
	081 Move X8, [X8+1416]
	082 Move X1, X21
	083 Move X2, X31
	084 Move X0, [X8]
	085 Call Debug.LogWarningFormat, X0, X1
	086 Move W0, W31
	087 Move TEMP, 0
	088 Not TEMP
	089 Move W8, TEMP
	090 Move [X19], W8
	091 Move W8, 2
	092 Move W8, 3
	093 Move W8, 4
	094 Move [X19], W8
	095 Move W0, 1
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X30, [X31+32]
	099 Move X21, [X31+40]
	100 Add X31, X31, 64
	101 Return X0
	102 Call 0x1C17F20
	103 Call 0x1C17F28
	104 Call 0x1C17F44
	105 Move X1, X31
	106 Call 0x1C17DEC

Method: System.Void ConfigureHDROutput(UnityEngine.Material material, UnityEngine.ColorGamut gamut, UnityEngine.Rendering.HDROutputUtils/Operation operations)

Disassembly:
	0x039EC1AC LDR X1, [X8 + 0x28]
	0x039EC1B0 ADD X0, X31, 0x10
	0x039EC1B4 MOV X2, X31
	0x039EC1B8 STP X31, X31, [X31 + 0x10]
	0x039EC1BC BL 0x3C5D47C
	0x039EC1C0 LDR W8, [X19 + 0x18]
	0x039EC1C4 CMP W8, 0x1
	0x039EC1C8 B.LS 0x39EC238
	0x039EC1CC LDR V0, [X31 + 0x1]
	0x039EC1D0 STR V0, [X19 + 0x3]
	0x039EC1D4 LDR X8, [X20]
	0x039EC1D8 LDR X8, [X8 + 0xB8]
	0x039EC1DC LDR X8, [X8]
	0x039EC1E0 CBZ X8, 0x39EC23C
	0x039EC1E4 LDR W9, [X8 + 0x18]
	0x039EC1E8 CMP W9, 0x2
	0x039EC1EC B.LS 0x39EC238
	0x039EC1F0 LDR X1, [X8 + 0x30]
	0x039EC1F4 ADD X0, X31, 0x0
	0x039EC1F8 MOV X2, X31
	0x039EC1FC STP X31, X31, [X31]
	0x039EC200 BL 0x3C5D47C
	0x039EC204 LDR W8, [X19 + 0x18]
	0x039EC208 CMP W8, 0x2
	0x039EC20C B.LS 0x39EC238
	0x039EC210 LDR V0, [X31]
	0x039EC214 LDP X22, X21, [X31 + 0x40]
	0x039EC218 LDR X30, [X31 + 0x30]
	0x039EC21C STR V0, [X19 + 0x4]
	0x039EC220 LDR X8, [X20]
	0x039EC224 LDR X8, [X8 + 0xB8]
	0x039EC228 STR X19, [X8 + 0x10]
	0x039EC22C LDP X20, X19, [X31 + 0x50]
	0x039EC230 ADD X31, X31, 0x60
	0x039EC234 RET
	0x039EC238 BL 0x1C16F28
	0x039EC23C BL 0x1C16F20
	0x039EC240 STR X30, [X31 - 0x60]!
	0x039EC244 STP X28, X27, [X31 + 0x10]
	0x039EC248 STP X26, X25, [X31 + 0x20]
	0x039EC24C STP X24, X23, [X31 + 0x30]
	0x039EC250 STP X22, X21, [X31 + 0x40]
	0x039EC254 STP X20, X19, [X31 + 0x50]
	0x039EC258 ADRP X28, 0x9F5000
	0x039EC25C ADRP X27, 0x70B000
	0x039EC260 ADRP X21, 0x70B000
	0x039EC264 ADRP X26, 0x708000
	0x039EC268 ADRP X25, 0x708000
	0x039EC26C ADRP X24, 0x761000
	0x039EC270 ADRP X23, 0x767000
	0x039EC274 ADRP X22, 0x70E000
	0x039EC278 LDR X27, [X27 + 0x3C0]
	0x039EC27C LDR X21, [X21 + 0x3C8]
	0x039EC280 LDRB W8, [X28 + 0xE42]
	0x039EC284 LDR X26, [X26 + 0xE30]
	0x039EC288 LDR X25, [X25 + 0xE20]
	0x039EC28C LDR X24, [X24 + 0xC00]
	0x039EC290 LDR X23, [X23 + 0x600]
	0x039EC294 LDR X22, [X22 + 0x700]
	0x039EC298 MOV W20, W1
	0x039EC29C MOV X19, X0
	0x039EC2A0 TBNZ X8, 0x0, 0x39EC300
	0x039EC2A4 ADRP X0, 0x708000
	0x039EC2A8 LDR X0, [X0 + 0xE20]
	0x039EC2AC BL 0x1C16CF4
	0x039EC2B0 ADRP X0, 0x70B000
	0x039EC2B4 LDR X0, [X0 + 0x3C8]
	0x039EC2B8 BL 0x1C16CF4
	0x039EC2BC ADRP X0, 0x767000
	0x039EC2C0 LDR X0, [X0 + 0x600]
	0x039EC2C4 BL 0x1C16CF4
	0x039EC2C8 ADRP X0, 0x708000
	0x039EC2CC LDR X0, [X0 + 0xE30]
	0x039EC2D0 BL 0x1C16CF4
	0x039EC2D4 ADRP X0, 0x761000
	0x039EC2D8 LDR X0, [X0 + 0xC00]
	0x039EC2DC BL 0x1C16CF4
	0x039EC2E0 ADRP X0, 0x70B000
	0x039EC2E4 LDR X0, [X0 + 0x3C0]
	0x039EC2E8 BL 0x1C16CF4
	0x039EC2EC ADRP X0, 0x70E000
	0x039EC2F0 LDR X0, [X0 + 0x700]
	0x039EC2F4 BL 0x1C16CF4
	0x039EC2F8 MOVZ W8, 0x1
	0x039EC2FC STRB W8, [X28 + 0xE42]
	0x039EC300 MOV X0, X19
	0x039EC304 MOV X1, X31
	0x039EC308 BL 0x33BDD8C
	0x039EC30C LDR X0, [X27]
	0x039EC310 BL 0x1C16F10
	0x039EC314 LDR X2, [X21]
	0x039EC318 MOV W1, W20
	0x039EC31C MOV X21, X0
	0x039EC320 BL 0x30CB9E8
	0x039EC324 STR X21, [X19 + 0x18]
	0x039EC328 LDR X0, [X26]
	0x039EC32C BL 0x1C16F10
	0x039EC330 LDR X2, [X25]
	0x039EC334 MOV W1, W20
	0x039EC338 MOV X21, X0
	0x039EC33C BL 0x2FDBF80
	0x039EC340 STR X21, [X19 + 0x20]
	0x039EC344 LDR X0, [X24]
	0x039EC348 BL 0x1C16F10
	0x039EC34C LDR X2, [X23]
	0x039EC350 MOV W1, W20
	0x039EC354 MOV X21, X0
	0x039EC358 BL 0x2F6CC64
	0x039EC35C STR X21, [X19 + 0x28]
	0x039EC360 LDR X0, [X22]
	0x039EC364 BL 0x1C16F10
	0x039EC368 MOV X1, X31
	0x039EC36C MOV X20, X0
	0x039EC370 BL 0x3C17028
	0x039EC374 CBZ X20, 0x39EC3B8
	0x039EC378 MOVZ W1, 0x1
	0x039EC37C MOV X0, X20
	0x039EC380 MOV X2, X31
	0x039EC384 BL 0x3C170A8
	0x039EC388 MOVZ W1, 0x3D
	0x039EC38C MOV X0, X20
	0x039EC390 MOV X2, X31
	0x039EC394 BL 0x3C396EC
	0x039EC398 STR X20, [X19 + 0x10]
	0x039EC39C LDP X20, X19, [X31 + 0x50]
	0x039EC3A0 LDP X22, X21, [X31 + 0x40]
	0x039EC3A4 LDP X24, X23, [X31 + 0x30]
	0x039EC3A8 LDP X26, X25, [X31 + 0x20]
	0x039EC3AC LDP X28, X27, [X31 + 0x10]
	0x039EC3B0 LDR X30, [X31], #0x60
	0x039EC3B4 RET
	0x039EC3B8 BL 0x1C16F20
	0x039EC3BC STR X30, [X31 - 0x20]!
	0x039EC3C0 STP X20, X19, [X31 + 0x10]
	0x039EC3C4 ADRP X20, 0x9F5000
	0x039EC3C8 LDRB W8, [X20 + 0xE43]
	0x039EC3CC MOV X19, X0
	0x039EC3D0 TBNZ X8, 0x0, 0x39EC400
	0x039EC3D4 ADRP X0, 0x70B000
	0x039EC3D8 LDR X0, [X0 + 0x380]
	0x039EC3DC BL 0x1C16CF4
	0x039EC3E0 ADRP X0, 0x767000
	0x039EC3E4 LDR X0, [X0 + 0x608]
	0x039EC3E8 BL 0x1C16CF4
	0x039EC3EC ADRP X0, 0x70E000
	0x039EC3F0 LDR X0, [X0 + 0x858]
	0x039EC3F4 BL 0x1C16CF4
	0x039EC3F8 MOVZ W8, 0x1
	0x039EC3FC STRB W8, [X20 + 0xE43]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x9F6000
	010 Move W8, [X22+3635]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x730000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x768000
	022 Move X0, [X0+1424]
	023 Call 0x1C17CF4
	024 Move X0, 0x768000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3635], W8
	029 Add X1, X31, 28
	030 Move W0, W21
	031 Move [X31+24], X31
	032 Move [X31], X31
	033 Move [X31+8], X31
	034 Call HDROutputUtils.GetColorSpaceForGamut, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {165}
	039 Add X1, X31, 24
	040 Move W0, W21
	041 Call HDROutputUtils.GetColorEncodingForGamut, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {165}
	046 Move X21, 0x768000
	047 Move X21, [X21+1432]
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Compare X20, 0
	054 JumpIfEqual {174}
	055 Move X8, [X21]
	056 Move W2, [X31+28]
	057 Move X0, X20
	058 Move X3, X31
	059 Move X8, [X8+184]
	060 Move W1, [X8]
	061 Call Material.SetInteger, X0, X1, X2
	062 Move X8, [X21]
	063 Move W2, [X31+24]
	064 Move X0, X20
	065 Move X3, X31
	066 Move X8, [X8+184]
	067 Move W1, [X8+4]
	068 Call Material.SetInteger, X0, X1, X2
	069 Move X23, 0x768000
	070 Move X23, [X23+1424]
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Add X0, X31, 0
	079 Move X1, X31
	080 Move V0, [X8+2]
	081 Move [X31], V0
	082 Call ShaderKeyword.get_name, X0
	083 Move X24, 0x730000
	084 Move X24, [X24+2296]
	085 Move X21, X0
	086 And W22, W19, 3
	087 Move X0, [X24]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Move X0, X20
	095 Move X1, X21
	096 Call CoreUtils.SetKeyword, X0, X1, X2
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X23]
	103 Move X8, [X0+184]
	104 And W31, W19, 1
	105 Add X0, X31, 0
	106 Move X1, X31
	107 Move V0, [X8+1]
	108 NotImplemented "Instruction CSET not yet implemented."
	109 Move [X31], V0
	110 Call ShaderKeyword.get_name, X0
	111 Move X21, X0
	112 Move X0, [X24]
	113 And W22, W22, W19
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X21
	120 Move W2, W22
	121 Call CoreUtils.SetKeyword, X0, X1, X2
	122 Move X0, [X23]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X23]
	128 Move X8, [X0+184]
	129 And W31, W19, 2
	130 Add X0, X31, 0
	131 Move X1, X31
	132 Move V0, [X8]
	133 NotImplemented "Instruction CSET not yet implemented."
	134 And W21, W19, W8
	135 Move [X31], V0
	136 Call ShaderKeyword.get_name, X0
	137 Move X8, [X24]
	138 Move X22, X0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X0, X20
	145 Move X1, X22
	146 Move W2, W21
	147 Call CoreUtils.SetKeyword, X0, X1, X2
	148 Move X0, [X23]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {154}
	152 Call 0x1C17DFC
	153 Move X0, [X23]
	154 Move X8, [X0+184]
	155 Add X0, X31, 0
	156 Move X1, X31
	157 Move V0, [X8+3]
	158 Move [X31], V0
	159 Call ShaderKeyword.get_name, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X1, X0
	162 NotImplemented "Instruction CSET not yet implemented."
	163 Move X0, X20
	164 Call CoreUtils.SetKeyword, X0, X1, X2
	165 Move X20, [X31+64]
	166 Move X19, [X31+72]
	167 Move X22, [X31+48]
	168 Move X21, [X31+56]
	169 Move X24, [X31+32]
	170 Move X23, [X31+40]
	171 Move X30, [X31+16]
	172 Add X31, X31, 80
	173 Return 
	174 Call 0x1C17F20

Method: System.Void ConfigureHDROutput(UnityEngine.MaterialPropertyBlock properties, UnityEngine.ColorGamut gamut)

Disassembly:
	0x039EC400 LDR X8, [X19 + 0x18]
	0x039EC404 CBZ X8, 0x39EC448
	0x039EC408 LDR W9, [X8 + 0x1C]
	0x039EC40C ADD W9, W9, 0x1
	0x039EC410 STP W31, W9, [X8 + 0x18]
	0x039EC414 LDR X8, [X19 + 0x20]
	0x039EC418 CBZ X8, 0x39EC448
	0x039EC41C LDR W9, [X8 + 0x1C]
	0x039EC420 ADD W9, W9, 0x1
	0x039EC424 STP W31, W9, [X8 + 0x18]
	0x039EC428 LDR X8, [X19 + 0x28]
	0x039EC42C CBZ X8, 0x39EC448
	0x039EC430 LDR W9, [X8 + 0x1C]
	0x039EC434 LDP X20, X19, [X31 + 0x10]
	0x039EC438 ADD W9, W9, 0x1
	0x039EC43C STP W31, W9, [X8 + 0x18]
	0x039EC440 LDR X30, [X31], #0x20
	0x039EC444 RET
	0x039EC448 BL 0x1C16F20
	0x039EC44C SUB X31, X31, 0x70
	0x039EC450 STP D15, D14, [X31 + 0x20]
	0x039EC454 STP D13, D12, [X31 + 0x30]
	0x039EC458 STP D11, D10, [X31 + 0x40]
	0x039EC45C STP D9, D8, [X31 + 0x50]
	0x039EC460 STP X30, X19, [X31 + 0x60]
	0x039EC464 MOV V11.16B, V1.16B
	0x039EC468 LDR V1, [X31 + 0x7]
	0x039EC46C MOV V13.16B, V2.16B
	0x039EC470 FMOV S2, 0.5
	0x039EC474 FMUL S3, S3, S2
	0x039EC478 FMUL S14, S4, S2
	0x039EC47C FMUL S15, S5, S2
	0x039EC480 FADD S8, S0, S3
	0x039EC484 FADD S12, S11, S14
	0x039EC488 FADD S9, S13, S15
	0x039EC48C FSUB S10, S0, S3
	0x039EC490 STUR V1, [X31 + 0x10]
	0x039EC494 ADD X1, X31, 0x8
	0x039EC498 MOV V0.16B, V8.16B
	0x039EC49C MOV V1.16B, V12.16B
	0x039EC4A0 MOV V2.16B, V9.16B
	0x039EC4A4 MOV V3.16B, V10.16B
	0x039EC4A8 MOV V4.16B, V12.16B
	0x039EC4AC MOV V5.16B, V9.16B
	0x039EC4B0 MOV X19, X0
	0x039EC4B4 STR X0, [X31 + 0x8]
	0x039EC4B8 BL 0x39EC66C
	0x039EC4BC FSUB S11, S11, S14

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9F6000
	007 Move W8, [X21+3636]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x768000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3636], W8
	019 Add X1, X31, 12
	020 Move W0, W20
	021 Move [X31+8], X31
	022 Call HDROutputUtils.GetColorSpaceForGamut, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {57}
	027 Add X1, X31, 8
	028 Move W0, W20
	029 Call HDROutputUtils.GetColorEncodingForGamut, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {57}
	034 Move X20, 0x768000
	035 Move X20, [X20+1432]
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Compare X19, 0
	042 JumpIfEqual {63}
	043 Move X8, [X20]
	044 Move W2, [X31+12]
	045 Move X0, X19
	046 Move X3, X31
	047 Move X8, [X8+184]
	048 Move W1, [X8]
	049 Call MaterialPropertyBlock.SetInteger, X0, X1, X2
	050 Move X8, [X20]
	051 Move W2, [X31+8]
	052 Move X0, X19
	053 Move X3, X31
	054 Move X8, [X8+184]
	055 Move W1, [X8+4]
	056 Call MaterialPropertyBlock.SetInteger, X0, X1, X2
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return 
	063 Call 0x1C17F20

Method: System.Void ConfigureHDROutput(UnityEngine.Material material, UnityEngine.Rendering.HDROutputUtils/Operation operations)

Disassembly:
	0x039EC4C0 ADD X1, X31, 0x8
	0x039EC4C4 MOV X0, X19
	0x039EC4C8 MOV V0.16B, V10.16B
	0x039EC4CC MOV V1.16B, V12.16B
	0x039EC4D0 MOV V2.16B, V9.16B
	0x039EC4D4 MOV V3.16B, V10.16B
	0x039EC4D8 MOV V4.16B, V11.16B
	0x039EC4DC MOV V5.16B, V9.16B
	0x039EC4E0 BL 0x39EC66C
	0x039EC4E4 ADD X1, X31, 0x8
	0x039EC4E8 MOV X0, X19
	0x039EC4EC MOV V0.16B, V10.16B
	0x039EC4F0 MOV V1.16B, V11.16B
	0x039EC4F4 MOV V2.16B, V9.16B
	0x039EC4F8 MOV V3.16B, V8.16B
	0x039EC4FC MOV V4.16B, V11.16B
	0x039EC500 MOV V5.16B, V9.16B
	0x039EC504 BL 0x39EC66C
	0x039EC508 ADD X1, X31, 0x8
	0x039EC50C MOV X0, X19
	0x039EC510 MOV V0.16B, V8.16B
	0x039EC514 MOV V1.16B, V11.16B
	0x039EC518 MOV V2.16B, V9.16B
	0x039EC51C MOV V3.16B, V8.16B
	0x039EC520 MOV V4.16B, V12.16B
	0x039EC524 MOV V5.16B, V9.16B
	0x039EC528 BL 0x39EC66C
	0x039EC52C FSUB S13, S13, S15
	0x039EC530 ADD X1, X31, 0x8
	0x039EC534 MOV X0, X19
	0x039EC538 MOV V0.16B, V8.16B
	0x039EC53C MOV V1.16B, V12.16B
	0x039EC540 MOV V2.16B, V13.16B
	0x039EC544 MOV V3.16B, V10.16B
	0x039EC548 MOV V4.16B, V12.16B
	0x039EC54C MOV V5.16B, V13.16B
	0x039EC550 BL 0x39EC66C
	0x039EC554 ADD X1, X31, 0x8
	0x039EC558 MOV X0, X19
	0x039EC55C MOV V0.16B, V10.16B
	0x039EC560 MOV V1.16B, V12.16B
	0x039EC564 MOV V2.16B, V13.16B
	0x039EC568 MOV V3.16B, V10.16B
	0x039EC56C MOV V4.16B, V11.16B
	0x039EC570 MOV V5.16B, V13.16B
	0x039EC574 BL 0x39EC66C
	0x039EC578 ADD X1, X31, 0x8
	0x039EC57C MOV X0, X19
	0x039EC580 MOV V0.16B, V10.16B
	0x039EC584 MOV V1.16B, V11.16B
	0x039EC588 MOV V2.16B, V13.16B
	0x039EC58C MOV V3.16B, V8.16B
	0x039EC590 MOV V4.16B, V11.16B
	0x039EC594 MOV V5.16B, V13.16B
	0x039EC598 BL 0x39EC66C
	0x039EC59C ADD X1, X31, 0x8
	0x039EC5A0 MOV X0, X19
	0x039EC5A4 MOV V0.16B, V8.16B
	0x039EC5A8 MOV V1.16B, V11.16B
	0x039EC5AC MOV V2.16B, V13.16B
	0x039EC5B0 MOV V3.16B, V8.16B
	0x039EC5B4 MOV V4.16B, V12.16B
	0x039EC5B8 MOV V5.16B, V13.16B
	0x039EC5BC BL 0x39EC66C
	0x039EC5C0 ADD X1, X31, 0x8
	0x039EC5C4 MOV X0, X19
	0x039EC5C8 MOV V0.16B, V8.16B
	0x039EC5CC MOV V1.16B, V12.16B
	0x039EC5D0 MOV V2.16B, V9.16B
	0x039EC5D4 MOV V3.16B, V8.16B
	0x039EC5D8 MOV V4.16B, V12.16B
	0x039EC5DC MOV V5.16B, V13.16B
	0x039EC5E0 BL 0x39EC66C
	0x039EC5E4 ADD X1, X31, 0x8
	0x039EC5E8 MOV X0, X19
	0x039EC5EC MOV V0.16B, V10.16B
	0x039EC5F0 MOV V1.16B, V12.16B
	0x039EC5F4 MOV V2.16B, V9.16B
	0x039EC5F8 MOV V3.16B, V10.16B
	0x039EC5FC MOV V4.16B, V12.16B
	0x039EC600 MOV V5.16B, V13.16B
	0x039EC604 BL 0x39EC66C
	0x039EC608 ADD X1, X31, 0x8
	0x039EC60C MOV X0, X19
	0x039EC610 MOV V0.16B, V10.16B
	0x039EC614 MOV V1.16B, V11.16B
	0x039EC618 MOV V2.16B, V9.16B
	0x039EC61C MOV V3.16B, V10.16B
	0x039EC620 MOV V4.16B, V11.16B
	0x039EC624 MOV V5.16B, V13.16B
	0x039EC628 BL 0x39EC66C
	0x039EC62C ADD X1, X31, 0x8
	0x039EC630 MOV X0, X19
	0x039EC634 MOV V0.16B, V8.16B
	0x039EC638 MOV V1.16B, V11.16B
	0x039EC63C MOV V2.16B, V9.16B
	0x039EC640 MOV V3.16B, V8.16B
	0x039EC644 MOV V4.16B, V11.16B
	0x039EC648 MOV V5.16B, V13.16B
	0x039EC64C BL 0x39EC66C
	0x039EC650 LDP X30, X19, [X31 + 0x60]
	0x039EC654 LDP D9, D8, [X31 + 0x50]
	0x039EC658 LDP D11, D10, [X31 + 0x40]
	0x039EC65C LDP D13, D12, [X31 + 0x30]
	0x039EC660 LDP D15, D14, [X31 + 0x20]
	0x039EC664 ADD X31, X31, 0x70
	0x039EC668 RET
	0x039EC66C STP D13, D12, [X31 - 0x50]!
	0x039EC670 STP D11, D10, [X31 + 0x10]
	0x039EC674 STP D9, D8, [X31 + 0x20]
	0x039EC678 STP X30, X21, [X31 + 0x30]
	0x039EC67C STP X20, X19, [X31 + 0x40]
	0x039EC680 ADRP X21, 0x9F5000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0x9F6000
	010 Move X23, 0x768000
	011 Move W8, [X21+3637]
	012 Move X23, [X23+1424]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x730000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move X0, 0x768000
	023 Move X0, [X0+1424]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3637], W8
	027 Move X0, [X23]
	028 Move X24, 0x730000
	029 Move W8, [X0+224]
	030 Move X24, [X24+2296]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X23]
	035 Move X8, [X0+184]
	036 Add X0, X31, 0
	037 Move X1, X31
	038 Move V0, [X8+2]
	039 Move [X31], V0
	040 Call ShaderKeyword.get_name, X0
	041 Move X21, X0
	042 Move X0, [X24]
	043 And W22, W20, 3
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move X0, X19
	051 Move X1, X21
	052 Call CoreUtils.SetKeyword, X0, X1, X2
	053 Move X0, [X23]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X23]
	059 Move X8, [X0+184]
	060 And W31, W20, 1
	061 Add X0, X31, 0
	062 Move X1, X31
	063 Move V0, [X8+1]
	064 NotImplemented "Instruction CSET not yet implemented."
	065 Move [X31], V0
	066 Call ShaderKeyword.get_name, X0
	067 Move X21, X0
	068 Move X0, [X24]
	069 And W22, W22, W20
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X19
	075 Move X1, X21
	076 Move W2, W22
	077 Call CoreUtils.SetKeyword, X0, X1, X2
	078 Move X0, [X23]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X23]
	084 Move X8, [X0+184]
	085 And W31, W20, 2
	086 Add X0, X31, 0
	087 Move X1, X31
	088 Move V0, [X8]
	089 NotImplemented "Instruction CSET not yet implemented."
	090 And W21, W20, W8
	091 Move [X31], V0
	092 Call ShaderKeyword.get_name, X0
	093 Move X8, [X24]
	094 Move X22, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X19
	101 Move X1, X22
	102 Move W2, W21
	103 Call CoreUtils.SetKeyword, X0, X1, X2
	104 Move X0, [X23]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X23]
	110 Move X8, [X0+184]
	111 Add X0, X31, 0
	112 Move X1, X31
	113 Move V0, [X8+3]
	114 Move [X31], V0
	115 Call ShaderKeyword.get_name, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X1, X0
	118 NotImplemented "Instruction CSET not yet implemented."
	119 Move X0, X19
	120 Call CoreUtils.SetKeyword, X0, X1, X2
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X30, [X31+16]
	128 Add X31, X31, 80
	129 Return 

Method: System.Void ConfigureHDROutput(UnityEngine.ComputeShader computeShader, UnityEngine.ColorGamut gamut, UnityEngine.Rendering.HDROutputUtils/Operation operations)

Disassembly:
	0x039EC684 LDRB W8, [X21 + 0xE47]
	0x039EC688 MOV X19, X1
	0x039EC68C MOV V8.16B, V5.16B
	0x039EC690 MOV V9.16B, V4.16B
	0x039EC694 MOV V10.16B, V3.16B
	0x039EC698 MOV V11.16B, V2.16B
	0x039EC69C MOV V12.16B, V1.16B
	0x039EC6A0 MOV V13.16B, V0.16B
	0x039EC6A4 MOV X20, X0
	0x039EC6A8 TBNZ X8, 0x0, 0x39EC6E4
	0x039EC6AC ADRP X0, 0x708000
	0x039EC6B0 LDR X0, [X0 + 0xE10]
	0x039EC6B4 BL 0x1C16CF4
	0x039EC6B8 ADRP X0, 0x761000
	0x039EC6BC LDR X0, [X0 + 0xC10]
	0x039EC6C0 BL 0x1C16CF4
	0x039EC6C4 ADRP X0, 0x70B000
	0x039EC6C8 LDR X0, [X0 + 0x3B8]
	0x039EC6CC BL 0x1C16CF4
	0x039EC6D0 ADRP X0, 0x708000
	0x039EC6D4 LDR X0, [X0 + 0xE28]
	0x039EC6D8 BL 0x1C16CF4
	0x039EC6DC MOVZ W8, 0x1
	0x039EC6E0 STRB W8, [X21 + 0xE47]
	0x039EC6E4 LDR X0, [X20 + 0x18]
	0x039EC6E8 CBZ X0, 0x39EC95C
	0x039EC6EC ADRP X21, 0x70B000
	0x039EC6F0 LDR X21, [X21 + 0x3B8]
	0x039EC6F4 LDR W10, [X0 + 0x1C]
	0x039EC6F8 LDR X8, [X0 + 0x10]
	0x039EC6FC LDR X9, [X21]
	0x039EC700 ADD W10, W10, 0x1
	0x039EC704 STR W10, [X0 + 0x1C]
	0x039EC708 CBZ X8, 0x39EC95C
	0x039EC70C LDRSW X10, [X0 + 0x18]
	0x039EC710 LDR W11, [X8 + 0x18]
	0x039EC714 CMP W10, W11
	0x039EC718 B.CS 0x39EC738
	0x039EC71C MOVZ W11, 0xC
	0x039EC720 ADD W9, W10, 0x1
	0x039EC724 MADD X8, X10, X11, X8
	0x039EC728 STR W9, [X0 + 0x18]
	0x039EC72C STP S13, S12, [X8 + 0x20]
	0x039EC730 STR S11, [X8 + 0x28]
	0x039EC734 B 0x39EC754
	0x039EC738 LDR X8, [X9 + 0x20]
	0x039EC73C MOV V0.16B, V13.16B
	0x039EC740 MOV V1.16B, V12.16B
	0x039EC744 MOV V2.16B, V11.16B
	0x039EC748 LDR X8, [X8 + 0xC0]
	0x039EC74C LDR X1, [X8 + 0x70]
	0x039EC750 BL 0x30CC1B4
	0x039EC754 LDR X0, [X20 + 0x18]
	0x039EC758 CBZ X0, 0x39EC95C
	0x039EC75C LDR W10, [X0 + 0x1C]
	0x039EC760 LDR X8, [X0 + 0x10]
	0x039EC764 LDR X9, [X21]
	0x039EC768 ADD W10, W10, 0x1
	0x039EC76C STR W10, [X0 + 0x1C]
	0x039EC770 CBZ X8, 0x39EC95C
	0x039EC774 LDRSW X10, [X0 + 0x18]
	0x039EC778 LDR W11, [X8 + 0x18]
	0x039EC77C CMP W10, W11
	0x039EC780 B.CS 0x39EC7A0
	0x039EC784 MOVZ W11, 0xC
	0x039EC788 ADD W9, W10, 0x1
	0x039EC78C MADD X8, X10, X11, X8
	0x039EC790 STR W9, [X0 + 0x18]
	0x039EC794 STP S10, S9, [X8 + 0x20]
	0x039EC798 STR S8, [X8 + 0x28]
	0x039EC79C B 0x39EC7BC
	0x039EC7A0 LDR X8, [X9 + 0x20]
	0x039EC7A4 MOV V0.16B, V10.16B
	0x039EC7A8 MOV V1.16B, V9.16B
	0x039EC7AC MOV V2.16B, V8.16B
	0x039EC7B0 LDR X8, [X8 + 0xC0]
	0x039EC7B4 LDR X1, [X8 + 0x70]
	0x039EC7B8 BL 0x30CC1B4
	0x039EC7BC LDR X0, [X20 + 0x20]
	0x039EC7C0 CBZ X0, 0x39EC95C
	0x039EC7C4 ADRP X21, 0x708000
	0x039EC7C8 LDR X21, [X21 + 0xE10]
	0x039EC7CC LDP W1, W10, [X0 + 0x18]
	0x039EC7D0 LDR X8, [X0 + 0x10]
	0x039EC7D4 LDR X9, [X21]
	0x039EC7D8 ADD W10, W10, 0x1
	0x039EC7DC STR W10, [X0 + 0x1C]
	0x039EC7E0 CBZ X8, 0x39EC95C
	0x039EC7E4 LDR W10, [X8 + 0x18]
	0x039EC7E8 CMP W1, W10
	0x039EC7EC B.CS 0x39EC808
	0x039EC7F0 SXTW X9, W1
	0x039EC7F4 ADD W10, W1, 0x1
	0x039EC7F8 ADD X8, X8, X9, 0x2, LSL
	0x039EC7FC STR W10, [X0 + 0x18]
	0x039EC800 STR W1, [X8 + 0x20]
	0x039EC804 B 0x39EC820
	0x039EC808 LDR X8, [X9 + 0x20]
	0x039EC80C LDR X8, [X8 + 0xC0]
	0x039EC810 LDR X2, [X8 + 0x70]
	0x039EC814 BL 0x2FDC70C
	0x039EC818 LDR X0, [X20 + 0x20]
	0x039EC81C CBZ X0, 0x39EC95C
	0x039EC820 LDP W1, W10, [X0 + 0x18]
	0x039EC824 LDR X8, [X0 + 0x10]
	0x039EC828 LDR X9, [X21]
	0x039EC82C ADD W10, W10, 0x1
	0x039EC830 STR W10, [X0 + 0x1C]
	0x039EC834 CBZ X8, 0x39EC95C
	0x039EC838 LDR W10, [X8 + 0x18]
	0x039EC83C CMP W1, W10
	0x039EC840 B.CS 0x39EC85C
	0x039EC844 SXTW X9, W1
	0x039EC848 ADD W10, W1, 0x1
	0x039EC84C ADD X8, X8, X9, 0x2, LSL
	0x039EC850 STR W10, [X0 + 0x18]
	0x039EC854 STR W1, [X8 + 0x20]
	0x039EC858 B 0x39EC86C
	0x039EC85C LDR X8, [X9 + 0x20]
	0x039EC860 LDR X8, [X8 + 0xC0]
	0x039EC864 LDR X2, [X8 + 0x70]
	0x039EC868 BL 0x2FDC70C
	0x039EC86C LDR X0, [X20 + 0x28]
	0x039EC870 CBZ X0, 0x39EC95C
	0x039EC874 ADRP X21, 0x761000
	0x039EC878 LDR X21, [X21 + 0xC10]
	0x039EC87C LDR W10, [X0 + 0x1C]
	0x039EC880 LDP S0, S1, [X19 + 0x8]
	0x039EC884 LDP S2, S3, [X19 + 0x10]
	0x039EC888 LDR X9, [X0 + 0x10]
	0x039EC88C LDR X8, [X21]
	0x039EC890 ADD W10, W10, 0x1
	0x039EC894 STR W10, [X0 + 0x1C]
	0x039EC898 CBZ X9, 0x39EC95C
	0x039EC89C LDRSW X10, [X0 + 0x18]
	0x039EC8A0 LDR W11, [X9 + 0x18]
	0x039EC8A4 CMP W10, W11
	0x039EC8A8 B.CS 0x39EC8C4
	0x039EC8AC ADD W8, W10, 0x1
	0x039EC8B0 ADD X9, X9, X10, 0x4, LSL
	0x039EC8B4 STR W8, [X0 + 0x18]
	0x039EC8B8 STP S0, S1, [X9 + 0x20]
	0x039EC8BC STP S2, S3, [X9 + 0x28]
	0x039EC8C0 B 0x39EC8D4
	0x039EC8C4 LDR X8, [X8 + 0x20]
	0x039EC8C8 LDR X8, [X8 + 0xC0]
	0x039EC8CC LDR X1, [X8 + 0x70]
	0x039EC8D0 BL 0x2F6D428
	0x039EC8D4 LDR X0, [X20 + 0x28]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x9F6000
	010 Move W8, [X22+3638]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x730000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x768000
	022 Move X0, [X0+1424]
	023 Call 0x1C17CF4
	024 Move X0, 0x768000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3638], W8
	029 Add X1, X31, 28
	030 Move W0, W21
	031 Move [X31+24], X31
	032 Move [X31], X31
	033 Move [X31+8], X31
	034 Call HDROutputUtils.GetColorSpaceForGamut, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {165}
	039 Add X1, X31, 24
	040 Move W0, W21
	041 Call HDROutputUtils.GetColorEncodingForGamut, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {165}
	046 Move X21, 0x768000
	047 Move X21, [X21+1432]
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Compare X20, 0
	054 JumpIfEqual {174}
	055 Move X8, [X21]
	056 Move W2, [X31+28]
	057 Move X0, X20
	058 Move X3, X31
	059 Move X8, [X8+184]
	060 Move W1, [X8]
	061 Call ComputeShader.SetInt, X0, X1, X2
	062 Move X8, [X21]
	063 Move W2, [X31+24]
	064 Move X0, X20
	065 Move X3, X31
	066 Move X8, [X8+184]
	067 Move W1, [X8+4]
	068 Call ComputeShader.SetInt, X0, X1, X2
	069 Move X23, 0x768000
	070 Move X23, [X23+1424]
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X23]
	077 Move X8, [X0+184]
	078 Add X0, X31, 0
	079 Move X1, X31
	080 Move V0, [X8+2]
	081 Move [X31], V0
	082 Call ShaderKeyword.get_name, X0
	083 Move X24, 0x730000
	084 Move X24, [X24+2296]
	085 Move X21, X0
	086 And W22, W19, 3
	087 Move X0, [X24]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Move X0, X20
	095 Move X1, X21
	096 Call CoreUtils.SetKeyword, X0, X1, X2
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X23]
	103 Move X8, [X0+184]
	104 And W31, W19, 1
	105 Add X0, X31, 0
	106 Move X1, X31
	107 Move V0, [X8+1]
	108 NotImplemented "Instruction CSET not yet implemented."
	109 Move [X31], V0
	110 Call ShaderKeyword.get_name, X0
	111 Move X21, X0
	112 Move X0, [X24]
	113 And W22, W22, W19
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X21
	120 Move W2, W22
	121 Call CoreUtils.SetKeyword, X0, X1, X2
	122 Move X0, [X23]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {128}
	126 Call 0x1C17DFC
	127 Move X0, [X23]
	128 Move X8, [X0+184]
	129 And W31, W19, 2
	130 Add X0, X31, 0
	131 Move X1, X31
	132 Move V0, [X8]
	133 NotImplemented "Instruction CSET not yet implemented."
	134 And W21, W19, W8
	135 Move [X31], V0
	136 Call ShaderKeyword.get_name, X0
	137 Move X8, [X24]
	138 Move X22, X0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X0, X20
	145 Move X1, X22
	146 Move W2, W21
	147 Call CoreUtils.SetKeyword, X0, X1, X2
	148 Move X0, [X23]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {154}
	152 Call 0x1C17DFC
	153 Move X0, [X23]
	154 Move X8, [X0+184]
	155 Add X0, X31, 0
	156 Move X1, X31
	157 Move V0, [X8+3]
	158 Move [X31], V0
	159 Call ShaderKeyword.get_name, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X1, X0
	162 NotImplemented "Instruction CSET not yet implemented."
	163 Move X0, X20
	164 Call CoreUtils.SetKeyword, X0, X1, X2
	165 Move X20, [X31+64]
	166 Move X19, [X31+72]
	167 Move X22, [X31+48]
	168 Move X21, [X31+56]
	169 Move X24, [X31+32]
	170 Move X23, [X31+40]
	171 Move X30, [X31+16]
	172 Add X31, X31, 80
	173 Return 
	174 Call 0x1C17F20

Method: System.Boolean IsShaderVariantValid(UnityEngine.Rendering.ShaderKeywordSet shaderKeywordSet, System.Boolean isHDREnabled)

Disassembly:
	0x039EC8D8 CBZ X0, 0x39EC95C
	0x039EC8DC LDR W10, [X0 + 0x1C]
	0x039EC8E0 LDP S0, S1, [X19 + 0x8]
	0x039EC8E4 LDP S2, S3, [X19 + 0x10]
	0x039EC8E8 LDR X9, [X0 + 0x10]
	0x039EC8EC LDR X8, [X21]
	0x039EC8F0 ADD W10, W10, 0x1
	0x039EC8F4 STR W10, [X0 + 0x1C]
	0x039EC8F8 CBZ X9, 0x39EC95C
	0x039EC8FC LDRSW X10, [X0 + 0x18]
	0x039EC900 LDR W11, [X9 + 0x18]
	0x039EC904 CMP W10, W11
	0x039EC908 B.CS 0x39EC938
	0x039EC90C LDP X20, X19, [X31 + 0x40]
	0x039EC910 LDP X30, X21, [X31 + 0x30]
	0x039EC914 LDP D9, D8, [X31 + 0x20]
	0x039EC918 LDP D11, D10, [X31 + 0x10]
	0x039EC91C ADD W8, W10, 0x1
	0x039EC920 ADD X9, X9, X10, 0x4, LSL
	0x039EC924 STR W8, [X0 + 0x18]
	0x039EC928 STP S0, S1, [X9 + 0x20]
	0x039EC92C STP S2, S3, [X9 + 0x28]
	0x039EC930 LDP D13, D12, [X31], #0x50
	0x039EC934 RET
	0x039EC938 LDR X8, [X8 + 0x20]
	0x039EC93C LDP X20, X19, [X31 + 0x40]
	0x039EC940 LDP X30, X21, [X31 + 0x30]
	0x039EC944 LDP D9, D8, [X31 + 0x20]
	0x039EC948 LDR X8, [X8 + 0xC0]
	0x039EC94C LDP D11, D10, [X31 + 0x10]
	0x039EC950 LDR X1, [X8 + 0x70]
	0x039EC954 LDP D13, D12, [X31], #0x50
	0x039EC958 B 0x2F6D428
	0x039EC95C BL 0x1C16F20
	0x039EC960 SUB X31, X31, 0xC0
	0x039EC964 STP X30, X25, [X31 + 0x80]
	0x039EC968 STP X24, X23, [X31 + 0x90]
	0x039EC96C STP X22, X21, [X31 + 0xA0]
	0x039EC970 STP X20, X19, [X31 + 0xB0]
	0x039EC974 ADRP X25, 0x9F5000
	0x039EC978 LDRB W8, [X25 + 0xE44]
	0x039EC97C MOV X22, X5
	0x039EC980 MOV W23, W4
	0x039EC984 MOV W24, W3
	0x039EC988 MOV X19, X2
	0x039EC98C MOV X20, X1
	0x039EC990 MOV X21, X0
	0x039EC994 TBNZ X8, 0x0, 0x39EC9D0
	0x039EC998 ADRP X0, 0x764000
	0x039EC99C LDR X0, [X0 + 0xD20]
	0x039EC9A0 BL 0x1C16CF4
	0x039EC9A4 ADRP X0, 0x70B000
	0x039EC9A8 LDR X0, [X0 + 0x2C8]
	0x039EC9AC BL 0x1C16CF4
	0x039EC9B0 ADRP X0, 0x767000
	0x039EC9B4 LDR X0, [X0 + 0x610]
	0x039EC9B8 BL 0x1C16CF4
	0x039EC9BC ADRP X0, 0x767000
	0x039EC9C0 LDR X0, [X0 + 0x618]
	0x039EC9C4 BL 0x1C16CF4
	0x039EC9C8 MOVZ W8, 0x1
	0x039EC9CC STRB W8, [X25 + 0xE44]
	0x039EC9D0 LDR X0, [X21 + 0x10]
	0x039EC9D4 CBZ X0, 0x39ECB04
	0x039EC9D8 MOV X1, X31
	0x039EC9DC BL 0x3C19C94
	0x039EC9E0 LDR X0, [X21 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9F6000
	007 Move X21, 0x768000
	008 Move W8, [X22+3639]
	009 Move X21, [X21+1424]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x768000
	017 Move X0, [X0+1424]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3639], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X0, X20
	029 Move X3, X31
	030 Move X1, [X8+16]
	031 Move X2, [X8+24]
	032 Call ShaderKeywordSet.IsEnabled, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {69}
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X0, X20
	045 Move X3, X31
	046 Move X1, [X8]
	047 Move X2, [X8+8]
	048 Call ShaderKeywordSet.IsEnabled, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {69}
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Move X8, [X0+184]
	060 Move X0, X20
	061 Move X3, X31
	062 Move X1, [X8+32]
	063 Move X2, [X8+40]
	064 Call ShaderKeywordSet.IsEnabled, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {78}
	069 Move W8, 1
	070 NotImplemented "Instruction BICS not yet implemented."
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Move X30, [X31+48]
	077 Return X0
	078 Move X0, [X21]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X21]
	084 Move X8, [X0+184]
	085 Move X0, X20
	086 Move X3, X31
	087 Move X1, [X8+48]
	088 Move X2, [X8+56]
	089 Call ShaderKeywordSet.IsEnabled, X0, X1
	090 And W8, W0, 1

