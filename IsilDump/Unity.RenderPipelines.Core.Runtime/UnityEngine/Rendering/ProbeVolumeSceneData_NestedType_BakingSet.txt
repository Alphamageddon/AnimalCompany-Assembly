Type: UnityEngine.Rendering.ProbeVolumeSceneData/BakingSet

Method: System.String CreateScenario(System.String name)

Disassembly:
	0x039CB428 LDR X8, [X8 + 0x9B0]
	0x039CB42C LDR X0, [X8]
	0x039CB430 LDR W8, [X0 + 0xE0]
	0x039CB434 CBNZ W8, 0x39CB43C
	0x039CB438 BL 0x1C16DFC
	0x039CB43C MOV X0, X19
	0x039CB440 BL 0x39CB45C
	0x039CB444 LDR X8, [X20]
	0x039CB448 LDR X8, [X8 + 0xB8]
	0x039CB44C STR X31, [X8 + 0x30]
	0x039CB450 LDP X20, X19, [X31 + 0x10]
	0x039CB454 LDR X30, [X31], #0x20
	0x039CB458 RET
	0x039CB45C STP X30, X21, [X31 - 0x20]!
	0x039CB460 STP X20, X19, [X31 + 0x10]
	0x039CB464 ADRP X21, 0xA16000
	0x039CB468 ADRP X20, 0x785000
	0x039CB46C LDRB W8, [X21 + 0xD43]
	0x039CB470 LDR X20, [X20 + 0x9B0]
	0x039CB474 MOV X19, X0
	0x039CB478 TBNZ X8, 0x0, 0x39CB490
	0x039CB47C ADRP X0, 0x785000
	0x039CB480 LDR X0, [X0 + 0x9B0]
	0x039CB484 BL 0x1C16CF4
	0x039CB488 MOVZ W8, 0x1
	0x039CB48C STRB W8, [X21 + 0xD43]
	0x039CB490 LDR X0, [X20]
	0x039CB494 LDR W8, [X0 + 0xE0]
	0x039CB498 CBNZ W8, 0x39CB4A4
	0x039CB49C BL 0x1C16DFC
	0x039CB4A0 LDR X0, [X20]
	0x039CB4A4 LDR X8, [X0 + 0xB8]
	0x039CB4A8 LDR X8, [X8]
	0x039CB4AC CBZ X8, 0x39CB4D0
	0x039CB4B0 CBZ X19, 0x39CB4C4
	0x039CB4B4 MOV X0, X19
	0x039CB4B8 LDP X20, X19, [X31 + 0x10]
	0x039CB4BC LDP X30, X21, [X31], #0x20
	0x039CB4C0 B 0x39D4B1C
	0x039CB4C4 LDP X20, X19, [X31 + 0x10]
	0x039CB4C8 LDP X30, X21, [X31], #0x20
	0x039CB4CC RET
	0x039CB4D0 BL 0x1C16F20
	0x039CB4D4 STR X30, [X31 - 0x30]!
	0x039CB4D8 STP X22, X21, [X31 + 0x10]
	0x039CB4DC STP X20, X19, [X31 + 0x20]
	0x039CB4E0 ADRP X19, 0xA16000
	0x039CB4E4 ADRP X22, 0x787000
	0x039CB4E8 LDRB W8, [X19 + 0xCF9]
	0x039CB4EC LDR X22, [X22 + 0xD98]
	0x039CB4F0 TBNZ X8, 0x0, 0x39CB508
	0x039CB4F4 ADRP X0, 0x787000
	0x039CB4F8 LDR X0, [X0 + 0xD98]
	0x039CB4FC BL 0x1C16CF4
	0x039CB500 MOVZ W8, 0x1
	0x039CB504 STRB W8, [X19 + 0xCF9]
	0x039CB508 LDR X0, [X22]
	0x039CB50C STRB W31, [X31 + 0xC]
	0x039CB510 LDR W8, [X0 + 0xE0]
	0x039CB514 CBNZ W8, 0x39CB520
	0x039CB518 BL 0x1C16DFC
	0x039CB51C LDR X0, [X22]
	0x039CB520 LDR X8, [X0 + 0xB8]
	0x039CB524 LDR X9, [X8]
	0x039CB528 CBNZ X9, 0x39CB5CC
	0x039CB52C LDR W9, [X0 + 0xE0]
	0x039CB530 CBNZ W9, 0x39CB540
	0x039CB534 BL 0x1C16DFC
	0x039CB538 LDR X8, [X22]
	0x039CB53C LDR X8, [X8 + 0xB8]
	0x039CB540 LDR X19, [X8 + 0x8]
	0x039CB544 STRB W31, [X31 + 0xC]
	0x039CB548 ADD X1, X31, 0xC
	0x039CB54C MOV X0, X19
	0x039CB550 MOV X2, X31
	0x039CB554 BL 0x33DE64C
	0x039CB558 LDR X0, [X22]
	0x039CB55C LDR W8, [X0 + 0xE0]
	0x039CB560 CBNZ W8, 0x39CB56C
	0x039CB564 BL 0x1C16DFC
	0x039CB568 LDR X0, [X22]
	0x039CB56C LDR X8, [X0 + 0xB8]
	0x039CB570 LDR X8, [X8]
	0x039CB574 CBZ X8, 0x39CB580
	0x039CB578 MOV X20, X31
	0x039CB57C B 0x39CB5B0
	0x039CB580 BL 0x1C16F10
	0x039CB584 MOV X21, X0
	0x039CB588 MOV X1, X31
	0x039CB58C BL 0x33BDD8C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xA17000
	011 Move W8, [X21+3312]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x729000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x72A000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move X0, 0x732000
	025 Move X0, [X0+272]
	026 Call 0x1C17CF4
	027 Move X0, 0x72F000
	028 Move X0, [X0+3224]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3312], W8
	032 Move X0, [X19+88]
	033 Compare X0, 0
	034 JumpIfEqual {108}
	035 Move X22, 0x732000
	036 Move X22, [X22+272]
	037 Move X1, X20
	038 Move X2, [X22]
	039 Call List`1<Object>.Contains, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {72}
	044 Move X24, 0x729000
	045 Move X25, 0x72F000
	046 Move X24, [X24+1880]
	047 Move X25, [X25+3224]
	048 Move W23, 1
	049 Move X0, [X24]
	050 Add X1, X31, 12
	051 Move [X31+12], W23
	052 Call 0x1C17E04
	053 Move X8, [X25]
	054 Move X2, X0
	055 Move X1, X20
	056 Move X3, X31
	057 Move X0, X8
	058 Call String.Format, X0, X1, X2
	059 Move X8, [X19+88]
	060 Compare X8, 0
	061 JumpIfEqual {108}
	062 Move X2, [X22]
	063 Move X21, X0
	064 Move X0, X8
	065 Move X1, X21
	066 Add W23, W23, 1
	067 Call List`1<Object>.Contains, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {49}
	072 Move X21, X20
	073 Move X0, [X19+88]
	074 Compare X0, 0
	075 JumpIfEqual {108}
	076 Move X9, 0x72A000
	077 Move X9, [X9+440]
	078 Move W10, [X0+28]
	079 Move X8, [X0+16]
	080 Move X9, [X9]
	081 Add W10, W10, 1
	082 Move [X0+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {108}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W9, W10, 1
	089 Add X8, X8, X10
	090 Move [X0+24], W9
	091 Move [X8+32], X21
	092 Move X8, [X9+32]
	093 Move X1, X21
	094 Move X8, [X8+192]
	095 Move X2, [X8+112]
	096 Call List`1<Object>.AddWithResize, X0, X1
	097 Move X0, X21
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X30, [X31+16]
	105 Move X25, [X31+24]
	106 Add X31, X31, 80
	107 Return X0
	108 Call 0x1C17F20

Method: System.Boolean RemoveScenario(System.String name)

Disassembly:
	0x039CB590 LDR X0, [X22]
	0x039CB594 LDR W8, [X0 + 0xE0]
	0x039CB598 CBNZ W8, 0x39CB5A4
	0x039CB59C BL 0x1C16DFC
	0x039CB5A0 LDR X0, [X22]
	0x039CB5A4 LDR X8, [X0 + 0xB8]
	0x039CB5A8 MOV X20, X31
	0x039CB5AC STR X21, [X8]
	0x039CB5B0 LDRB W8, [X31 + 0xC]
	0x039CB5B4 CBZ W8, 0x39CB5C4
	0x039CB5B8 MOV X0, X19
	0x039CB5BC MOV X1, X31
	0x039CB5C0 BL 0x33E14E4
	0x039CB5C4 CBNZ X20, 0x39CB5F4
	0x039CB5C8 LDR X0, [X22]
	0x039CB5CC LDR W8, [X0 + 0xE0]
	0x039CB5D0 CBNZ W8, 0x39CB5DC
	0x039CB5D4 BL 0x1C16DFC
	0x039CB5D8 LDR X0, [X22]
	0x039CB5DC LDR X8, [X0 + 0xB8]
	0x039CB5E0 LDP X20, X19, [X31 + 0x20]
	0x039CB5E4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA17000
	006 Move W8, [X21+3313]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x788000
	014 Move X0, [X0+3464]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3313], W8
	018 Move X0, [X20+88]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x788000
	022 Move X8, [X8+3464]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039CB2D8 LDR W10, [X31 + 0x120]
	0x039CB2DC LDRB W11, [X31 + 0x118]
	0x039CB2E0 LDRB W12, [X31 + 0x110]
	0x039CB2E4 LDR W13, [X31 + 0x108]
	0x039CB2E8 LDRB W15, [X31 + 0xF8]
	0x039CB2EC LDRB W16, [X31 + 0xF0]
	0x039CB2F0 LDRB W17, [X31 + 0xE8]
	0x039CB2F4 LDRB W1, [X31 + 0xE0]
	0x039CB2F8 LDR W14, [X31 + 0x100]
	0x039CB2FC STR X8, [X31 + 0x68]
	0x039CB300 STR W9, [X31 + 0x60]
	0x039CB304 STR W10, [X31 + 0x58]
	0x039CB308 AND W8, W11, 0x1
	0x039CB30C AND W9, W12, 0x1
	0x039CB310 STR W13, [X31 + 0x40]
	0x039CB314 AND W10, W15, 0x1
	0x039CB318 AND W11, W16, 0x1
	0x039CB31C AND W12, W17, 0x1
	0x039CB320 AND W13, W1, 0x1
	0x039CB324 MOV V0.16B, V8.16B
	0x039CB328 MOV W1, W23
	0x039CB32C MOV W2, W22
	0x039CB330 MOV W3, W19
	0x039CB334 MOV W4, W19
	0x039CB338 MOV W5, W19
	0x039CB33C MOV W6, W21
	0x039CB340 MOV W7, W20
	0x039CB344 STR W14, [X31 + 0x38]
	0x039CB348 STR W25, [X31 + 0x10]
	0x039CB34C STR W26, [X31 + 0x8]
	0x039CB350 STRB W8, [X31 + 0x50]
	0x039CB354 STRB W9, [X31 + 0x48]
	0x039CB358 STRB W10, [X31 + 0x30]
	0x039CB35C STRB W11, [X31 + 0x28]
	0x039CB360 STRB W12, [X31 + 0x20]
	0x039CB364 STRB W13, [X31 + 0x18]
	0x039CB368 STR W24, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA17000
	007 Move X22, 0x72A000
	008 Move X21, 0x72A000
	009 Move W8, [X20+3314]
	010 Move X22, [X22+464]
	011 Move X21, [X21+448]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x72A000
	018 Move X0, [X0+448]
	019 Call 0x1C17CF4
	020 Move X0, 0x72A000
	021 Move X0, [X0+464]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3314], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X21]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+24], X20
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, [X21]
	034 Move X20, X0
	035 Call List`1<Object>..ctor, X0
	036 Move [X19+88], X20
	037 Move X0, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X1, X31
	043 Move X30, [X31+48]
	044 Call Object..ctor, X0
	045 Return 

