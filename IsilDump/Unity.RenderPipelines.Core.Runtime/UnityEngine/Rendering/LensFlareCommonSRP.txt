Type: UnityEngine.Rendering.LensFlareCommonSRP

Method: System.Void .ctor()

Disassembly:
	0x039CBFEC MOV V1.16B, V13.16B
	0x039CBFF0 MOV V2.16B, V14.16B

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean IsOcclusionRTCompatible()

Disassembly:
	0x039CBFF4 MOV V3.16B, V8.16B
	0x039CBFF8 MOV V4.16B, V9.16B
	0x039CBFFC MOV V5.16B, V10.16B
	0x039CC000 BL 0x39CC04C
	0x039CC004 MOV V8.16B, V0.16B
	0x039CC008 LDP S1, S0, [X31 + 0x1C]
	0x039CC00C LDP S3, S2, [X31 + 0x14]
	0x039CC010 LDP S5, S4, [X31 + 0xC]
	0x039CC014 BL 0x39CC04C
	0x039CC018 FDIV S0, S0, S8
	0x039CC01C FCMP S8, 0x0
	0x039CC020 LDP X20, X19, [X31 + 0x80]
	0x039CC024 LDR X30, [X31 + 0x70]
	0x039CC028 LDP D9, D8, [X31 + 0x60]
	0x039CC02C LDP D11, D10, [X31 + 0x50]
	0x039CC030 LDP D13, D12, [X31 + 0x40]
	0x039CC034 LDP D15, D14, [X31 + 0x30]
	0x039CC038 FMOV S1, 1
	0x039CC03C FCSEL S0, S0, S1, GT
	0x039CC040 ADD X31, X31, 0x90
	0x039CC044 RET
	0x039CC048 BL 0x1C16F20
	0x039CC04C SUB X31, X31, 0x70
	0x039CC050 STP D15, D14, [X31 + 0x10]
	0x039CC054 STP D13, D12, [X31 + 0x20]
	0x039CC058 STP D11, D10, [X31 + 0x30]
	0x039CC05C STP D9, D8, [X31 + 0x40]
	0x039CC060 STR X30, [X31 + 0x50]
	0x039CC064 STP X20, X19, [X31 + 0x60]
	0x039CC068 ADRP X19, 0xA15000
	0x039CC06C LDRB W8, [X19 + 0xD0C]
	0x039CC070 MOV V8.16B, V5.16B
	0x039CC074 MOV V14.16B, V4.16B
	0x039CC078 MOV V12.16B, V3.16B
	0x039CC07C MOV V9.16B, V2.16B
	0x039CC080 MOV V10.16B, V1.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0xA17000
	004 Move W8, [X19+3318]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x787000
	010 Move X0, [X0+3480]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+3318], W8
	014 Move X0, X31
	015 Call SystemInfo.get_graphicsDeviceType
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, X31
	018 Call SystemInfo.get_graphicsDeviceType
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X31
	021 Call SystemInfo.get_graphicsDeviceType
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W0, W31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0
	027 Move X19, 0x787000
	028 Move X19, [X19+3480]
	029 Move X0, [X19]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X19]
	035 Move X8, [X0+184]
	036 Move W8, [X8+60]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."

Method: System.Void Initialize()

Disassembly:
	0x039CC084 MOV V11.16B, V0.16B
	0x039CC088 TBNZ X8, 0x0, 0x39CC0A0
	0x039CC08C ADRP X0, 0x786000
	0x039CC090 LDR X0, [X0 + 0xD98]
	0x039CC094 BL 0x1C16CF4
	0x039CC098 MOVZ W8, 0x1
	0x039CC09C STRB W8, [X19 + 0xD0C]
	0x039CC0A0 ADRP X19, 0xA0C000
	0x039CC0A4 LDRB W8, [X19 + 0x785]
	0x039CC0A8 CBNZ W8, 0x39CC0C0
	0x039CC0AC ADRP X0, 0x727000
	0x039CC0B0 LDR X0, [X0 + 0x5A8]
	0x039CC0B4 BL 0x1C16CF4
	0x039CC0B8 MOVZ W8, 0x1
	0x039CC0BC STRB W8, [X19 + 0x785]
	0x039CC0C0 ADRP X19, 0x727000
	0x039CC0C4 LDR X19, [X19 + 0x5A8]
	0x039CC0C8 STR S12, [X31 + 0x5C]
	0x039CC0CC FSUB S12, S12, S11
	0x039CC0D0 MOV V13.16B, V14.16B
	0x039CC0D4 LDR X0, [X19]
	0x039CC0D8 FSUB S14, S14, S10
	0x039CC0DC FSUB S15, S8, S9
	0x039CC0E0 LDR W8, [X0 + 0xE0]
	0x039CC0E4 CBNZ W8, 0x39CC0EC
	0x039CC0E8 BL 0x1C16DFC
	0x039CC0EC FMUL S0, S12, S12
	0x039CC0F0 FMUL S1, S14, S14
	0x039CC0F4 ADRP X8, 0xFFFFFFFFFD11E000
	0x039CC0F8 FADD S0, S0, S1
	0x039CC0FC LDR V1, [X8 + 0x17C]
	0x039CC100 FMUL S2, S15, S15
	0x039CC104 FADD S0, S2, S0
	0x039CC108 FSQRT S0, S0
	0x039CC10C FCMP S0, S1
	0x039CC110 B.LE 0x39CC124
	0x039CC114 FDIV S1, S12, S0
	0x039CC118 FDIV S2, S14, S0
	0x039CC11C FDIV S16, S15, S0
	0x039CC120 B 0x39CC15C
	0x039CC124 ADRP X20, 0xA0C000
	0x039CC128 LDRB W8, [X20 + 0x783]
	0x039CC12C CBNZ W8, 0x39CC144
	0x039CC130 ADRP X0, 0x727000
	0x039CC134 LDR X0, [X0 + 0x5A0]
	0x039CC138 BL 0x1C16CF4
	0x039CC13C MOVZ W8, 0x1
	0x039CC140 STRB W8, [X20 + 0x783]
	0x039CC144 ADRP X8, 0x727000
	0x039CC148 LDR X8, [X8 + 0x5A0]
	0x039CC14C LDR X8, [X8]
	0x039CC150 LDR X8, [X8 + 0xB8]
	0x039CC154 LDP S1, S2, [X8]
	0x039CC158 LDR V16, [X8 + 0x8]
	0x039CC15C MOV V17.16B, V13.16B
	0x039CC160 FCMP S9, 0x0
	0x039CC164 B.HI 0x39CC174
	0x039CC168 FCMP S8, 0x0
	0x039CC16C FMOV S0, W31
	0x039CC170 B.LS 0x39CC314
	0x039CC174 FCMP S9, 0x0
	0x039CC178 B.PL 0x39CC1AC
	0x039CC17C LDR V5, [X31 + 0x5C]
	0x039CC180 FMUL S0, S11, S8
	0x039CC184 FMUL S3, S10, S8
	0x039CC188 FMUL S4, S9, S8
	0x039CC18C FMUL S5, S9, S5
	0x039CC190 FMUL S6, S9, S17
	0x039CC194 FSUB S0, S0, S5
	0x039CC198 FSUB S3, S3, S6
	0x039CC19C FSUB S4, S4, S4
	0x039CC1A0 FDIV S11, S0, S15
	0x039CC1A4 FDIV S10, S3, S15
	0x039CC1A8 FDIV S9, S4, S15
	0x039CC1AC FCMP S8, 0x0
	0x039CC1B0 B.PL 0x39CC1EC
	0x039CC1B4 LDR V0, [X31 + 0x5C]
	0x039CC1B8 FMUL S3, S17, S9
	0x039CC1BC FMUL S4, S8, S9
	0x039CC1C0 FMUL S5, S8, S11
	0x039CC1C4 FMUL S0, S0, S9
	0x039CC1C8 FMUL S6, S8, S10
	0x039CC1CC FSUB S7, S9, S8
	0x039CC1D0 FSUB S0, S0, S5
	0x039CC1D4 FSUB S3, S3, S6
	0x039CC1D8 FSUB S4, S4, S4
	0x039CC1DC FDIV S5, S0, S7
	0x039CC1E0 FDIV S17, S3, S7
	0x039CC1E4 FDIV S8, S4, S7
	0x039CC1E8 B 0x39CC1F0
	0x039CC1EC LDR V5, [X31 + 0x5C]
	0x039CC1F0 ADRP X20, 0xA0C000
	0x039CC1F4 FMUL S0, S1, S11
	0x039CC1F8 FMUL S3, S2, S10
	0x039CC1FC LDRB W8, [X20 + 0x784]
	0x039CC200 FMUL S4, S16, S9
	0x039CC204 FADD S0, S0, S3
	0x039CC208 FADD S13, S4, S0
	0x039CC20C FMUL S15, S1, S5
	0x039CC210 FMUL S12, S2, S17
	0x039CC214 FMUL S14, S1, S13
	0x039CC218 FMUL S0, S2, S13
	0x039CC21C FMUL S1, S16, S13
	0x039CC220 STR S16, [X31 + 0x5C]
	0x039CC224 CBNZ W8, 0x39CC24C
	0x039CC228 ADRP X0, 0x727000
	0x039CC22C LDR X0, [X0 + 0x5A8]
	0x039CC230 STR S0, [X31 + 0x58]
	0x039CC234 STR S1, [X31 + 0xC]
	0x039CC238 BL 0x1C16CF4
	0x039CC23C LDR V1, [X31 + 0xC]
	0x039CC240 LDP S0, S16, [X31 + 0x58]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X19, 0xA16000
	009 Move X22, 0x787000
	010 Move W8, [X19+3319]
	011 Move X22, [X22+3480]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x787000
	017 Move X0, [X0+3480]
	018 Call 0x1C17CF4
	019 Move X0, 0x785000
	020 Move X0, [X0+2480]
	021 Call 0x1C17CF4
	022 Move X0, 0x785000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0x728000
	026 Move X0, [X0+2440]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+3319], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move [X8+56], W31
	038 Call LensFlareCommonSRP.IsOcclusionRTCompatible
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {126}
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move X9, [X8+48]
	051 Compare X9, 0
	052 JumpIfNotEqual {126}
	053 Move W9, [X0+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {59}
	056 Call 0x1C17DFC
	057 Move X8, [X22]
	058 Move X8, [X8+184]
	059 Move X21, 0x785000
	060 Move X21, [X21+1560]
	061 Move W9, [X8+36]
	062 Move W10, [X8+40]
	063 Move W19, [X8+32]
	064 Move X0, [X21]
	065 Add W9, W9, 1
	066 Multiply W9, W9, W10
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X0+224]
	069 NotImplemented "Instruction CSINC not yet implemented."
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X23, 0xA16000
	074 Move W8, [X23+2875]
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x785000
	078 Move X0, [X0+1560]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X23+2875], W8
	082 Move X0, [X21]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X21]
	088 Move X8, 0x785000
	089 Move X8, [X8+2480]
	090 Move X9, [X0+184]
	091 Move X8, [X8]
	092 Move W21, [X9]
	093 Move W10, [X8+224]
	094 Compare W10, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X8, 0x728000
	099 Move X8, [X8+2440]
	100 Move S0, W31
	101 Move W4, 49
	102 Move W7, 5
	103 Move X8, [X8]
	104 Move W0, W19
	105 Move W1, W20
	106 Move W2, W21
	107 Move [X31+80], X8
	108 Move W8, 1
	109 Move W3, W31
	110 Move W5, W31
	111 Move W6, W31
	112 Move [X31+72], W31
	113 Move [X31+64], W31
	114 Move [X31+56], W31
	115 Move [X31+48], W31
	116 Move [X31+24], W31
	117 Move [X31+8], W31
	118 Move [X31+40], W8
	119 Move [X31+32], W8
	120 Move [X31+16], W8
	121 Move [X31], W8
	122 Call RTHandles.Alloc, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, V0, X13, X14, X15, X16, X17, X18
	123 Move X8, [X22]
	124 Move X8, [X8+184]
	125 Move [X8+48], X0
	126 Move X20, [X31+128]
	127 Move X19, [X31+136]
	128 Move X22, [X31+112]
	129 Move X21, [X31+120]
	130 Move X30, [X31+96]
	131 Move X23, [X31+104]
	132 Add X31, X31, 144
	133 Return 

Method: System.Void Dispose()

Disassembly:
	0x039CC398 FMUL S0, S13, S11
	0x039CC39C FMUL S1, S12, S10
	0x039CC3A0 FMUL S2, S9, S8
	0x039CC3A4 LDP X20, X19, [X31 + 0x40]
	0x039CC3A8 LDR X30, [X31 + 0x30]
	0x039CC3AC LDP D9, D8, [X31 + 0x20]
	0x039CC3B0 LDP D11, D10, [X31 + 0x10]
	0x039CC3B4 FADD S0, S0, S1
	0x039CC3B8 FADD S0, S2, S0
	0x039CC3BC FMOV S1, W31
	0x039CC3C0 FMAXNM S0, S0, S1
	0x039CC3C4 LDP D13, D12, [X31], #0x50
	0x039CC3C8 RET
	0x039CC3CC STP D13, D12, [X31 - 0x50]!
	0x039CC3D0 STP D11, D10, [X31 + 0x10]
	0x039CC3D4 STP D9, D8, [X31 + 0x20]
	0x039CC3D8 STR X30, [X31 + 0x30]
	0x039CC3DC STP X20, X19, [X31 + 0x40]
	0x039CC3E0 ADRP X19, 0xA15000
	0x039CC3E4 ADRP X20, 0x786000
	0x039CC3E8 LDRB W8, [X19 + 0xD02]
	0x039CC3EC LDR X20, [X20 + 0xD98]
	0x039CC3F0 MOV V8.16B, V5.16B
	0x039CC3F4 MOV V10.16B, V4.16B
	0x039CC3F8 MOV V11.16B, V3.16B
	0x039CC3FC MOV V9.16B, V2.16B
	0x039CC400 MOV V12.16B, V1.16B
	0x039CC404 MOV V13.16B, V0.16B
	0x039CC408 TBNZ X8, 0x0, 0x39CC420
	0x039CC40C ADRP X0, 0x786000
	0x039CC410 LDR X0, [X0 + 0xD98]
	0x039CC414 BL 0x1C16CF4
	0x039CC418 MOVZ W8, 0x1
	0x039CC41C STRB W8, [X19 + 0xD02]
	0x039CC420 LDR X0, [X20]
	0x039CC424 LDR W8, [X0 + 0xE0]
	0x039CC428 CBNZ W8, 0x39CC430
	0x039CC42C BL 0x1C16DFC
	0x039CC430 FMUL S0, S13, S11
	0x039CC434 FMUL S1, S12, S10
	0x039CC438 FMUL S2, S9, S8
	0x039CC43C LDP X20, X19, [X31 + 0x40]
	0x039CC440 LDR X30, [X31 + 0x30]
	0x039CC444 LDP D9, D8, [X31 + 0x20]
	0x039CC448 LDP D11, D10, [X31 + 0x10]
	0x039CC44C FADD S0, S0, S1
	0x039CC450 FADD S0, S2, S0
	0x039CC454 FMOV S1, W31
	0x039CC458 FMAXNM S0, S0, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA16000
	005 Move X20, 0x787000
	006 Move W8, [X19+3320]
	007 Move X20, [X20+3480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x787000
	013 Move X0, [X0+3480]
	014 Call 0x1C17CF4
	015 Move X0, 0x785000
	016 Move X0, [X0+2480]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3320], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Call LensFlareCommonSRP.IsOcclusionRTCompatible
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {59}
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move X19, [X8+48]
	038 Compare X19, 0
	039 JumpIfEqual {59}
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {47}
	043 Call 0x1C17DFC
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move X19, [X8+48]
	047 Move X8, 0x785000
	048 Move X8, [X8+2480]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Call RTHandles.Release, X0
	056 Move X8, [X20]
	057 Move X8, [X8+184]
	058 Move [X8+48], X31
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Return 

Method: UnityEngine.Rendering.LensFlareCommonSRP get_Instance()

Disassembly:
	0x039CC4D4 BL 0x3C32ECC
	0x039CC4D8 CBZ X0, 0x39CC584
	0x039CC4DC MOV X1, X31
	0x039CC4E0 BL 0x3C35834
	0x039CC4E4 TBZ X0, 0x0, 0x39CC570
	0x039CC4E8 ADRP X8, 0x727000
	0x039CC4EC LDR X8, [X8 + 0x598]
	0x039CC4F0 LDR X0, [X8]
	0x039CC4F4 LDR W8, [X0 + 0xE0]
	0x039CC4F8 CBNZ W8, 0x39CC500
	0x039CC4FC BL 0x1C16DFC
	0x039CC500 MOV X0, X21
	0x039CC504 MOV X1, X31
	0x039CC508 MOV X2, X31
	0x039CC50C BL 0x3C3883C
	0x039CC510 TBNZ X0, 0x0, 0x39CC570
	0x039CC514 CBZ X21, 0x39CC584
	0x039CC518 LDR X8, [X21 + 0x18]
	0x039CC51C CBZ X8, 0x39CC570
	0x039CC520 LDR X8, [X8 + 0x18]
	0x039CC524 CBZ X8, 0x39CC570
	0x039CC528 LDR V0, [X19 + 0x28]
	0x039CC52C FCMP S0, 0x0
	0x039CC530 B.LS 0x39CC570
	0x039CC534 CBZ X20, 0x39CC584
	0x039CC538 MOV X0, X20
	0x039CC53C MOV X1, X31
	0x039CC540 BL 0x3C03A18
	0x039CC544 MOV W20, W0
	0x039CC548 MOV X0, X19
	0x039CC54C MOV X1, X31
	0x039CC550 BL 0x3C32ECC
	0x039CC554 CBZ X0, 0x39CC584
	0x039CC558 MOV X1, X31
	0x039CC55C BL 0x3C35734
	0x039CC560 LSRV W8, W20, W0
	0x039CC564 ANDS W31, W8, 0x1
	0x039CC568 CSET W0, EQ
	0x039CC56C B 0x39CC574
	0x039CC570 MOVZ W0, 0x1
	0x039CC574 LDP X20, X19, [X31 + 0x20]
	0x039CC578 LDP X22, X21, [X31 + 0x10]
	0x039CC57C LDR X30, [X31], #0x30
	0x039CC580 RET
	0x039CC584 BL 0x1C16F20
	0x039CC588 SUB X31, X31, 0x90
	0x039CC58C STP D15, D14, [X31 + 0x30]
	0x039CC590 STP D13, D12, [X31 + 0x40]
	0x039CC594 STP D11, D10, [X31 + 0x50]
	0x039CC598 STP D9, D8, [X31 + 0x60]
	0x039CC59C STR X30, [X31 + 0x70]
	0x039CC5A0 STP X20, X19, [X31 + 0x80]
	0x039CC5A4 MOV V14.16B, V1.16B
	0x039CC5A8 LDR V1, [X31 + 0xAC]
	0x039CC5AC LDR V8, [X31 + 0xA0]
	0x039CC5B0 LDR V10, [X31 + 0x90]
	0x039CC5B4 MOV W20, W0
	0x039CC5B8 STP S7, S1, [X31 + 0x18]
	0x039CC5BC LDR V1, [X31 + 0xA8]
	0x039CC5C0 MOV X0, X31
	0x039CC5C4 MOV V9.16B, V6.16B
	0x039CC5C8 MOV V12.16B, V5.16B
	0x039CC5CC MOV V11.16B, V3.16B
	0x039CC5D0 MOV V13.16B, V2.16B
	0x039CC5D4 STP S1, S4, [X31 + 0x20]
	0x039CC5D8 MOV V15.16B, V0.16B
	0x039CC5DC BL 0x3C3BB1C
	0x039CC5E0 ADRP X8, 0xFFFFFFFFFD11E000
	0x039CC5E4 LDR V0, [X8 + 0x64]
	0x039CC5E8 MOV W19, W0
	0x039CC5EC FNEG S1, S10
	0x039CC5F0 ANDS W31, W0, 0x1
	0x039CC5F4 FMUL S0, S8, S0
	0x039CC5F8 ADD X0, X31, 0x7C
	0x039CC5FC ADD X1, X31, 0x78
	0x039CC600 FCSEL S10, S10, S1, NE
	0x039CC604 BL 0x3EB1BC0
	0x039CC608 MOVZ W8, 0x43340000
	0x039CC60C FMOV S0, W8
	0x039CC610 FADD S8, S10, S0
	0x039CC614 TBZ X20, 0x0, 0x39CC6D8
	0x039CC618 LDR V0, [X31 + 0x98]
	0x039CC61C FMOV S5, -1
	0x039CC620 LDP S2, S1, [X31 + 0x78]
	0x039CC624 ADRP X20, 0xA0D000
	0x039CC628 FADD S0, S0, S5
	0x039CC62C STP S9, S13, [X31 + 0x8]
	0x039CC630 LDR V9, [X31 + 0x18]
	0x039CC634 LDRB W8, [X20 + 0x818]
	0x039CC638 FMUL S5, S15, S0
	0x039CC63C FMUL S0, S14, S0
	0x039CC640 FNEG S3, S13
	0x039CC644 FNEG S4, S11
	0x039CC648 FADD S5, S15, S5
	0x039CC64C FADD S0, S14, S0
	0x039CC650 FMUL S3, S5, S3
	0x039CC654 FMUL S0, S0, S4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA16000
	007 Move X22, 0x787000
	008 Move W8, [X19+3321]
	009 Move X22, [X22+3480]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x787000
	015 Move X0, [X0+3480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+3321], W8
	019 Move X0, [X22]
	020 Move [X31+12], W31
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X22]
	026 Move X8, [X0+184]
	027 Move X9, [X8]
	028 Compare X9, 0
	029 JumpIfNotEqual {75}
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {36}
	033 Call 0x1C17DFC
	034 Move X8, [X22]
	035 Move X8, [X8+184]
	036 Move X19, [X8+8]
	037 Move [X31+12], W31
	038 Add X1, X31, 12
	039 Move X0, X19
	040 Move X2, X31
	041 Call Monitor.Enter, X0, X1
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X8, [X0+184]
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {53}
	052 Move X20, X31
	053 Call 0x1C17F10
	054 Move X21, X0
	055 Move X1, X31
	056 Call Object..ctor, X0
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X22]
	063 Move X8, [X0+184]
	064 Move X20, X31
	065 Move [X8], X21
	066 Move W8, [X31+12]
	067 Compare W8, 0
	068 JumpIfEqual {72}
	069 Move X0, X19
	070 Move X1, X31
	071 Call Monitor.Exit, X0
	072 Compare X20, 0
	073 JumpIfNotEqual {88}
	074 Move X0, [X22]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X22]
	080 Move X8, [X0+184]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X0, [X8]
	086 Move X30, [X31+48]
	087 Return X0
	088 Move X0, X20
	089 Call 0x1C17F18
	090 Move X21, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X21
	093 Call 0x3EB2AD0
	094 Move X20, [X0]
	095 Call 0x3EB2AE0
	096 Move X20, X31
	097 Move X21, X0
	098 Move W8, [X31+12]
	099 Compare W8, 0
	100 JumpIfEqual {104}
	101 Move X0, X19
	102 Move X1, X31
	103 Call Monitor.Exit, X0
	104 Compare X20, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X21
	107 Call 0x1D2D690
	108 Move X0, X20
	109 Call 0x1C17F18
	110 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.LensFlareCommonSRP/LensFlareCompInfo> get_Data()

Disassembly:
	0x039CC658 STP S11, S12, [X31 + 0x10]
	0x039CC65C FMUL S14, S2, S3
	0x039CC660 FMUL S15, S1, S0
	0x039CC664 FMUL S10, S1, S3
	0x039CC668 FMUL S12, S2, S0
	0x039CC66C CBNZ W8, 0x39CC684
	0x039CC670 ADRP X0, 0x727000
	0x039CC674 LDR X0, [X0 + 0x5A8]
	0x039CC678 BL 0x1C16CF4
	0x039CC67C MOVZ W8, 0x1
	0x039CC680 STRB W8, [X20 + 0x818]
	0x039CC684 ADRP X8, 0x727000
	0x039CC688 LDR X8, [X8 + 0x5A8]
	0x039CC68C FSUB S15, S14, S15
	0x039CC690 FADD S14, S10, S12
	0x039CC694 LDR X0, [X8]
	0x039CC698 LDR W8, [X0 + 0xE0]
	0x039CC69C CBNZ W8, 0x39CC6A4
	0x039CC6A0 BL 0x1C16DFC
	0x039CC6A4 ADRP X8, 0xFFFFFFFFFD11E000
	0x039CC6A8 LDR V2, [X8 + 0x17C]
	0x039CC6AC FMUL S0, S15, S15

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA16000
	005 Move X19, 0x787000
	006 Move W8, [X20+3322]
	007 Move X19, [X19+3480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x787000
	013 Move X0, [X0+3480]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3322], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean IsEmpty()

Disassembly:
	0x039CC6B0 FMUL S1, S14, S14
	0x039CC6B4 LDR V12, [X31 + 0x14]
	0x039CC6B8 LDR V10, [X31 + 0x8]
	0x039CC6BC FADD S0, S0, S1
	0x039CC6C0 FSQRT S1, S0
	0x039CC6C4 FCMP S1, S2
	0x039CC6C8 B.LE 0x39CC6E0
	0x039CC6CC FDIV S0, S15, S1
	0x039CC6D0 FDIV S1, S14, S1
	0x039CC6D4 B 0x39CC714
	0x039CC6D8 LDP S15, S14, [X31 + 0x20]
	0x039CC6DC B 0x39CC740
	0x039CC6E0 ADRP X20, 0xA0D000
	0x039CC6E4 LDRB W8, [X20 + 0x78F]
	0x039CC6E8 CBNZ W8, 0x39CC700
	0x039CC6EC ADRP X0, 0x72F000
	0x039CC6F0 LDR X0, [X0 + 0xF08]
	0x039CC6F4 BL 0x1C16CF4
	0x039CC6F8 MOVZ W8, 0x1
	0x039CC6FC STRB W8, [X20 + 0x78F]
	0x039CC700 ADRP X8, 0x72F000
	0x039CC704 LDR X8, [X8 + 0xF08]
	0x039CC708 LDR X8, [X8]
	0x039CC70C LDR X8, [X8 + 0xB8]
	0x039CC710 LDP S0, S1, [X8]
	0x039CC714 LDP S13, S11, [X31 + 0xC]
	0x039CC718 LDP S15, S14, [X31 + 0x20]
	0x039CC71C FMUL S0, S10, S0
	0x039CC720 FMUL S2, S9, S1
	0x039CC724 FMUL S1, S13, S0
	0x039CC728 FMUL S0, S11, S2
	0x039CC72C BL 0x3EB1C40
	0x039CC730 ADRP X8, 0xFFFFFFFFFD11E000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0xA16000
	004 Move W8, [X19+3323]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x787000
	010 Move X0, [X0+3488]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+3323], W8
	014 Move X19, 0xA16000
	015 Move W8, [X19+3420]
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x787000
	019 Move X0, [X0+3480]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3420], W8
	023 Move X19, 0x787000
	024 Move X19, [X19+3480]
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move X8, [X8+16]
	033 Compare X8, 0
	034 JumpIfEqual {41}
	035 Move W8, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSET not yet implemented."
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Int32 GetNextAvailableIndex()

Disassembly:
	0x039CC734 LDR V1, [X8 + 0x1A4]
	0x039CC738 FMUL S0, S0, S1
	0x039CC73C FADD S8, S8, S0
	0x039CC740 ADRP X8, 0xFFFFFFFFFD11E000
	0x039CC744 LDR V2, [X31 + 0x1C]
	0x039CC748 LDR V0, [X8 + 0x104]
	0x039CC74C ANDS W31, W19, 0x1
	0x039CC750 ADD X0, X31, 0x2C
	0x039CC754 FNEG S1, S2
	0x039CC758 FMUL S0, S8, S0
	0x039CC75C ADD X1, X31, 0x28
	0x039CC760 FCSEL S10, S2, S1, NE
	0x039CC764 BL 0x3EB1BC0
	0x039CC768 LDP S0, S1, [X31 + 0x28]
	0x039CC76C FMUL S2, S13, S14
	0x039CC770 FMUL S3, S11, S12
	0x039CC774 FADD S2, S2, S15
	0x039CC778 FSUB S3, S3, S10
	0x039CC77C LDP X20, X19, [X31 + 0x80]
	0x039CC780 LDR X30, [X31 + 0x70]
	0x039CC784 LDP D9, D8, [X31 + 0x60]
	0x039CC788 LDP D11, D10, [X31 + 0x50]
	0x039CC78C LDP D13, D12, [X31 + 0x40]
	0x039CC790 LDP D15, D14, [X31 + 0x30]
	0x039CC794 FNEG S1, S1
	0x039CC798 ADD X31, X31, 0x90
	0x039CC79C RET
	0x039CC7A0 FMOV S5, -1
	0x039CC7A4 FADD S2, S2, S5
	0x039CC7A8 FMUL S5, S0, S2
	0x039CC7AC FMUL S2, S1, S2
	0x039CC7B0 FADD S5, S0, S5
	0x039CC7B4 FADD S0, S1, S2
	0x039CC7B8 FNEG S1, S0
	0x039CC7BC FMUL S0, S0, S4
	0x039CC7C0 FMUL S2, S5, S3
	0x039CC7C4 FSUB S0, S0, S2
	0x039CC7C8 FMUL S1, S1, S3
	0x039CC7CC FMUL S2, S5, S4
	0x039CC7D0 FSUB S1, S1, S2
	0x039CC7D4 RET
	0x039CC7D8 SUB X31, X31, 0xE0
	0x039CC7DC STP D13, D12, [X31 + 0x80]
	0x039CC7E0 STP D11, D10, [X31 + 0x90]
	0x039CC7E4 STP D9, D8, [X31 + 0xA0]
	0x039CC7E8 STP X30, X23, [X31 + 0xB0]
	0x039CC7EC STP X22, X21, [X31 + 0xC0]
	0x039CC7F0 STP X20, X19, [X31 + 0xD0]
	0x039CC7F4 ADRP X23, 0xA15000
	0x039CC7F8 LDRB W8, [X23 + 0xD04]
	0x039CC7FC MOV V8.16B, V2.16B
	0x039CC800 MOV V9.16B, V1.16B
	0x039CC804 MOV V10.16B, V0.16B
	0x039CC808 MOV X21, X3
	0x039CC80C MOV W19, W2
	0x039CC810 MOV W22, W1
	0x039CC814 MOV X20, X0
	0x039CC818 TBNZ X8, 0x0, 0x39CC830
	0x039CC81C ADRP X0, 0x786000
	0x039CC820 LDR X0, [X0 + 0xD98]
	0x039CC824 BL 0x1C16CF4
	0x039CC828 MOVZ W8, 0x1
	0x039CC82C STRB W8, [X23 + 0xD04]
	0x039CC830 ADRP X23, 0x786000
	0x039CC834 LDR X23, [X23 + 0xD98]
	0x039CC838 TBZ X22, 0x0, 0x39CC8D8
	0x039CC83C LDP V1, V0, [X21 + 0x20]
	0x039CC840 LDP V3, V2, [X21]
	0x039CC844 STP V1, V0, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA16000
	005 Move X19, 0x787000
	006 Move W8, [X20+3324]
	007 Move X19, [X19+3480]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x787000
	013 Move X0, [X0+3480]
	014 Call 0x1C17CF4
	015 Move X0, 0x752000
	016 Move X0, [X0+3888]
	017 Call 0x1C17CF4
	018 Move X0, 0x787000
	019 Move X0, [X0+3488]
	020 Call 0x1C17CF4
	021 Move X0, 0x729000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move X0, 0x752000
	025 Move X0, [X0+3896]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3324], W8
	029 Move X0, [X19]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X19]
	035 Move X8, [X0+184]
	036 Move X9, [X8+24]
	037 Compare X9, 0
	038 JumpIfEqual {81}
	039 Move W10, [X0+224]
	040 Move W20, [X9+24]
	041 Compare W10, 0
	042 JumpIfEqual {67}
	043 Compare W20, 0
	044 JumpIfEqual {72}
	045 Move X0, [X8+24]
	046 Compare X0, 0
	047 JumpIfEqual {81}
	048 Move X8, 0x752000
	049 Move X8, [X8+3896]
	050 Move W9, [X0+24]
	051 Move X2, [X8]
	052 Subtract W1, W9, 1
	053 Call List`1<Int32>.get_Item, X0, X1
	054 Move X8, [X19]
	055 Move X8, [X8+184]
	056 Move X8, [X8+24]
	057 Compare X8, 0
	058 JumpIfEqual {81}
	059 Move X9, 0x752000
	060 Move X9, [X9+3888]
	061 Move W10, [X8+24]
	062 Move W19, W0
	063 Move X0, X8
	064 Move X2, [X9]
	065 Subtract W1, W10, 1
	066 Call List`1<Int32>.RemoveAt, X0, X1
	067 Call 0x1C17DFC
	068 Move X8, [X19]
	069 Move X8, [X8+184]
	070 Compare W20, 0
	071 JumpIfNotEqual {45}
	072 Move X8, [X8+16]
	073 Compare X8, 0
	074 JumpIfEqual {81}
	075 Move W19, [X8+24]
	076 Move W0, W19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void AddData(UnityEngine.Rendering.LensFlareComponentSRP newData)

Disassembly:
	0x039CC848 STP V3, V2, [X31 + 0x40]
	0x039CC84C CBZ X20, 0x39CC918
	0x039CC850 MOV X0, X20
	0x039CC854 MOV X1, X31
	0x039CC858 BL 0x3C32E90
	0x039CC85C CBZ X0, 0x39CC918
	0x039CC860 MOV X1, X31
	0x039CC864 BL 0x3C3F58C
	0x039CC868 LDR X0, [X23]
	0x039CC86C MOV V11.16B, V0.16B
	0x039CC870 MOV V12.16B, V1.16B
	0x039CC874 MOV V13.16B, V2.16B
	0x039CC878 LDR W8, [X0 + 0xE0]
	0x039CC87C CBNZ W8, 0x39CC884
	0x039CC880 BL 0x1C16DFC
	0x039CC884 LDP V0, V1, [X31 + 0x40]
	0x039CC888 LDP V2, V3, [X31 + 0x60]
	0x039CC88C AND W0, W19, 0x1
	0x039CC890 ADD X1, X31, 0x0
	0x039CC894 STP V0, V1, [X31]
	0x039CC898 STP V2, V3, [X31 + 0x20]
	0x039CC89C MOV V0.16B, V11.16B
	0x039CC8A0 MOV V1.16B, V12.16B
	0x039CC8A4 MOV V2.16B, V13.16B
	0x039CC8A8 MOV V3.16B, V10.16B
	0x039CC8AC MOV V4.16B, V9.16B
	0x039CC8B0 MOV V5.16B, V8.16B
	0x039CC8B4 BL 0x39CC91C
	0x039CC8B8 LDP X20, X19, [X31 + 0xD0]
	0x039CC8BC LDP X22, X21, [X31 + 0xC0]
	0x039CC8C0 LDP X30, X23, [X31 + 0xB0]
	0x039CC8C4 LDP D9, D8, [X31 + 0xA0]
	0x039CC8C8 LDP D11, D10, [X31 + 0x90]
	0x039CC8CC LDP D13, D12, [X31 + 0x80]
	0x039CC8D0 ADD X31, X31, 0xE0
	0x039CC8D4 RET
	0x039CC8D8 LDR X0, [X23]
	0x039CC8DC LDR W8, [X0 + 0xE0]
	0x039CC8E0 CBNZ W8, 0x39CC8E8
	0x039CC8E4 BL 0x1C16DFC
	0x039CC8E8 MOV X0, X20
	0x039CC8EC MOV V0.16B, V10.16B
	0x039CC8F0 MOV V1.16B, V9.16B
	0x039CC8F4 MOV V2.16B, V8.16B
	0x039CC8F8 LDP X20, X19, [X31 + 0xD0]
	0x039CC8FC LDP X22, X21, [X31 + 0xC0]
	0x039CC900 LDP X30, X23, [X31 + 0xB0]
	0x039CC904 LDP D9, D8, [X31 + 0xA0]
	0x039CC908 LDP D11, D10, [X31 + 0x90]
	0x039CC90C LDP D13, D12, [X31 + 0x80]
	0x039CC910 ADD X31, X31, 0xE0
	0x039CC914 B 0x39CC994
	0x039CC918 BL 0x1C16F20
	0x039CC91C SUB X31, X31, 0x50
	0x039CC920 STR X30, [X31 + 0x40]
	0x039CC924 FSUB S1, S4, S1
	0x039CC928 FSUB S2, S5, S2
	0x039CC92C ANDS W31, W0, 0x1
	0x039CC930 LDP V6, V7, [X1 + 0x20]
	0x039CC934 FCSEL S2, S2, S5, NE
	0x039CC938 FCSEL S1, S1, S4, NE
	0x039CC93C LDP V4, V5, [X1]
	0x039CC940 FSUB S0, S3, S0
	0x039CC944 FCSEL S0, S0, S3, NE
	0x039CC948 ADD X0, X31, 0x0
	0x039CC94C FMOV S3, W31
	0x039CC950 MOV X1, X31
	0x039CC954 STP V6, V7, [X31 + 0x20]
	0x039CC958 STP V4, V5, [X31]
	0x039CC95C BL 0x3C2806C
	0x039CC960 MOV V2.16B, V3.16B
	0x039CC964 FDIV S0, S0, S3
	0x039CC968 FDIV S1, S1, S3
	0x039CC96C FMOV S3, 0.5
	0x039CC970 LDR X30, [X31 + 0x40]
	0x039CC974 FMUL S0, S0, S3
	0x039CC978 FMUL S1, S1, S3
	0x039CC97C FADD S0, S0, S3
	0x039CC980 FADD S1, S1, S3
	0x039CC984 FMOV S3, 1
	0x039CC988 FSUB S1, S3, S1
	0x039CC98C ADD X31, X31, 0x50
	0x039CC990 RET
	0x039CC994 SUB X31, X31, 0xF0
	0x039CC998 STP D11, D10, [X31 + 0xC0]
	0x039CC99C STP D9, D8, [X31 + 0xD0]
	0x039CC9A0 STP X30, X19, [X31 + 0xE0]
	0x039CC9A4 CBZ X0, 0x39CCA70
	0x039CC9A8 ADD X8, X31, 0x80
	0x039CC9AC MOV X1, X31
	0x039CC9B0 MOV V8.16B, V2.16B
	0x039CC9B4 MOV V9.16B, V1.16B
	0x039CC9B8 MOV V10.16B, V0.16B
	0x039CC9BC MOV X19, X0
	0x039CC9C0 BL 0x3C04220
	0x039CC9C4 LDP V0, V1, [X31 + 0x80]
	0x039CC9C8 LDP V2, V3, [X31 + 0xA0]
	0x039CC9CC ADD X0, X31, 0x40
	0x039CC9D0 MOV X1, X31
	0x039CC9D4 STP V0, V1, [X31 + 0x40]
	0x039CC9D8 STP V2, V3, [X31 + 0x60]
	0x039CC9DC FMOV S3, W31
	0x039CC9E0 MOV V0.16B, V10.16B
	0x039CC9E4 MOV V1.16B, V9.16B
	0x039CC9E8 MOV V2.16B, V8.16B
	0x039CC9EC BL 0x3C2806C
	0x039CC9F0 ADD X8, X31, 0x80
	0x039CC9F4 MOV X0, X19
	0x039CC9F8 MOV X1, X31
	0x039CC9FC MOV V8.16B, V0.16B
	0x039CCA00 MOV V9.16B, V1.16B
	0x039CCA04 MOV V10.16B, V2.16B
	0x039CCA08 MOV V11.16B, V3.16B
	0x039CCA0C BL 0x3C04358
	0x039CCA10 LDP V0, V1, [X31 + 0x80]
	0x039CCA14 LDP V2, V3, [X31 + 0xA0]
	0x039CCA18 ADD X0, X31, 0x0
	0x039CCA1C MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xA16000
	008 Move X21, 0x787000
	009 Move W8, [X19+3325]
	010 Move X21, [X21+3496]
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x787000
	017 Move X0, [X0+3480]
	018 Call 0x1C17CF4
	019 Move X0, 0x787000
	020 Move X0, [X0+3504]
	021 Call 0x1C17CF4
	022 Move X0, 0x787000
	023 Move X0, [X0+3512]
	024 Call 0x1C17CF4
	025 Move X0, 0x787000
	026 Move X0, [X0+3520]
	027 Call 0x1C17CF4
	028 Move X0, 0x787000
	029 Move X0, [X0+3528]
	030 Call 0x1C17CF4
	031 Move X0, 0x787000
	032 Move X0, [X0+3536]
	033 Call 0x1C17CF4
	034 Move X0, 0x787000
	035 Move X0, [X0+3496]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+3325], W8
	039 Move X0, [X21]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X19, X0
	043 Call Object..ctor, X0
	044 Compare X19, 0
	045 JumpIfEqual {139}
	046 Move X22, 0x787000
	047 Move X22, [X22+3480]
	048 Move [X19+16], X20
	049 Move X23, 0x787000
	050 Move X21, 0x787000
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Move X23, [X23+3528]
	054 Move X21, [X21+3536]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X22]
	059 Move X8, [X0+184]
	060 Move X0, [X23]
	061 Move X20, [X8+16]
	062 Call 0x1C17F10
	063 Move X2, [X21]
	064 Move X1, X19
	065 Move X3, X31
	066 Move X21, X0
	067 Call Predicate`1<Object>..ctor, X0, X1, X2
	068 Compare X20, 0
	069 JumpIfEqual {139}
	070 Move X8, 0x787000
	071 Move X8, [X8+3520]
	072 Move X0, X20
	073 Move X1, X21
	074 Move X2, [X8]
	075 Call List`1<Object>.Exists, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {119}
	080 Move X0, [X22]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X22]
	086 Move X8, [X0+184]
	087 Move X20, [X8+16]
	088 Call LensFlareCommonSRP.GetNextAvailableIndex, X0
	089 Move X8, 0x787000
	090 Move X22, [X19+16]
	091 Move X8, [X8+3504]
	092 Move W21, W0
	093 Move X8, [X8]
	094 Move X0, X8
	095 Call 0x1C17F10
	096 Move X1, X31
	097 Move X19, X0
	098 Call Object..ctor, X0
	099 Move [X19+16], W21
	100 Move [X19+24], X22
	101 Compare X20, 0
	102 JumpIfEqual {139}
	103 Move X9, 0x787000
	104 Move X9, [X9+3512]
	105 Move W10, [X20+28]
	106 Move X8, [X20+16]
	107 Move X9, [X9]
	108 Add W10, W10, 1
	109 Move [X20+28], W10
	110 Compare X8, 0
	111 JumpIfEqual {139}
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Move W11, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add W9, W10, 1
	116 Add X8, X8, X10
	117 Move [X20+24], W9
	118 Move [X8+32], X19
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 Return 
	126 Move X8, [X9+32]
	127 Move X0, X20
	128 Move X1, X19
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X8, [X8+192]
	132 Move X22, [X31+16]
	133 Move X21, [X31+24]
	134 Move X2, [X8+112]
	135 Move X30, [X31+48]
	136 Move X23, [X31+56]
	137 Call List`1<Object>.AddWithResize, X0, X1
	138 Return 
	139 Call 0x1C17F20

Method: System.Void RemoveData(UnityEngine.Rendering.LensFlareComponentSRP data)

Disassembly:
	0x039CCA58 FMUL S0, S0, S3
	0x039CCA5C FMUL S1, S1, S3
	0x039CCA60 FADD S0, S0, S3
	0x039CCA64 FADD S1, S1, S3
	0x039CCA68 ADD X31, X31, 0xF0
	0x039CCA6C RET
	0x039CCA70 BL 0x1C16F20
	0x039CCA74 SUB X31, X31, 0x80
	0x039CCA78 STP X30, X25, [X31 + 0x40]
	0x039CCA7C STP X24, X23, [X31 + 0x50]
	0x039CCA80 STP X22, X21, [X31 + 0x60]
	0x039CCA84 STP X20, X19, [X31 + 0x70]
	0x039CCA88 ADRP X20, 0xA15000
	0x039CCA8C ADRP X23, 0x786000
	0x039CCA90 LDRB W8, [X20 + 0xD05]
	0x039CCA94 LDR X23, [X23 + 0xD98]
	0x039CCA98 MOV X19, X0
	0x039CCA9C TBNZ X8, 0x0, 0x39CCAF0
	0x039CCAA0 ADRP X0, 0x786000
	0x039CCAA4 LDR X0, [X0 + 0xDF8]
	0x039CCAA8 BL 0x1C16CF4
	0x039CCAAC ADRP X0, 0x786000
	0x039CCAB0 LDR X0, [X0 + 0xE00]
	0x039CCAB4 BL 0x1C16CF4
	0x039CCAB8 ADRP X0, 0x786000
	0x039CCABC LDR X0, [X0 + 0xE08]
	0x039CCAC0 BL 0x1C16CF4
	0x039CCAC4 ADRP X0, 0x786000
	0x039CCAC8 LDR X0, [X0 + 0xD98]
	0x039CCACC BL 0x1C16CF4
	0x039CCAD0 ADRP X0, 0x786000
	0x039CCAD4 LDR X0, [X0 + 0xE10]
	0x039CCAD8 BL 0x1C16CF4
	0x039CCADC ADRP X0, 0x727000
	0x039CCAE0 LDR X0, [X0 + 0x598]
	0x039CCAE4 BL 0x1C16CF4
	0x039CCAE8 MOVZ W8, 0x1
	0x039CCAEC STRB W8, [X20 + 0xD05]
	0x039CCAF0 LDR X0, [X23]
	0x039CCAF4 STP X31, X31, [X31 + 0x20]
	0x039CCAF8 STR X31, [X31 + 0x30]
	0x039CCAFC LDR W8, [X0 + 0xE0]
	0x039CCB00 CBNZ W8, 0x39CCB08
	0x039CCB04 BL 0x1C16DFC
	0x039CCB08 BL 0x39CB4D4
	0x039CCB0C CBZ X0, 0x39CCC80
	0x039CCB10 BL 0x39CB6B0
	0x039CCB14 TBZ X0, 0x0, 0x39CCB20
	0x039CCB18 MOV W0, W31
	0x039CCB1C B 0x39CCC64
	0x039CCB20 LDR X0, [X23]
	0x039CCB24 LDR W8, [X0 + 0xE0]
	0x039CCB28 CBNZ W8, 0x39CCB30
	0x039CCB2C BL 0x1C16DFC
	0x039CCB30 BL 0x39CB4D4
	0x039CCB34 CBZ X0, 0x39CCC80
	0x039CCB38 ADRP X20, 0xA15000
	0x039CCB3C LDRB W8, [X20 + 0xD5C]
	0x039CCB40 CBNZ W8, 0x39CCB58
	0x039CCB44 ADRP X0, 0x786000
	0x039CCB48 LDR X0, [X0 + 0xD98]
	0x039CCB4C BL 0x1C16CF4
	0x039CCB50 MOVZ W8, 0x1
	0x039CCB54 STRB W8, [X20 + 0xD5C]
	0x039CCB58 LDR X0, [X23]
	0x039CCB5C LDR W8, [X0 + 0xE0]
	0x039CCB60 CBNZ W8, 0x39CCB6C
	0x039CCB64 BL 0x1C16DFC
	0x039CCB68 LDR X0, [X23]
	0x039CCB6C LDR X8, [X0 + 0xB8]
	0x039CCB70 LDR X0, [X8 + 0x10]
	0x039CCB74 CBZ X0, 0x39CCC80
	0x039CCB78 ADRP X8, 0x786000
	0x039CCB7C LDR X8, [X8 + 0xE10]
	0x039CCB80 LDR X1, [X8]
	0x039CCB84 ADD X8, X31, 0x8
	0x039CCB88 BL 0x301CB58
	0x039CCB8C LDUR V0, [X31 + 0x8]
	0x039CCB90 LDR X8, [X31 + 0x18]
	0x039CCB94 ADRP X24, 0x786000
	0x039CCB98 LDR X24, [X24 + 0xE00]
	0x039CCB9C STR V0, [X31 + 0x2]
	0x039CCBA0 STR X8, [X31 + 0x30]
	0x039CCBA4 ADRP X25, 0x727000
	0x039CCBA8 LDR X25, [X25 + 0x598]
	0x039CCBAC LDR X1, [X24]
	0x039CCBB0 ADD X0, X31, 0x20
	0x039CCBB4 BL 0x2BC4350
	0x039CCBB8 MOV W20, W0
	0x039CCBBC TBZ X0, 0x0, 0x39CCC40
	0x039CCBC0 LDR X22, [X31 + 0x30]
	0x039CCBC4 CBZ X22, 0x39CCBAC
	0x039CCBC8 LDR X0, [X25]
	0x039CCBCC LDR X21, [X22 + 0x18]
	0x039CCBD0 LDR W8, [X0 + 0xE0]
	0x039CCBD4 CBNZ W8, 0x39CCBDC
	0x039CCBD8 BL 0x1C16DFC
	0x039CCBDC MOV X0, X21
	0x039CCBE0 MOV X1, X31
	0x039CCBE4 MOV X2, X31
	0x039CCBE8 BL 0x3C3883C
	0x039CCBEC TBNZ X0, 0x0, 0x39CCBAC
	0x039CCBF0 LDR X21, [X22 + 0x18]
	0x039CCBF4 CBZ X21, 0x39CCC7C
	0x039CCBF8 LDR X0, [X23]
	0x039CCBFC LDR X22, [X21 + 0x20]
	0x039CCC00 LDR W8, [X0 + 0xE0]
	0x039CCC04 CBNZ W8, 0x39CCC0C
	0x039CCC08 BL 0x1C16DFC
	0x039CCC0C MOV X0, X19
	0x039CCC10 MOV X1, X21
	0x039CCC14 MOV X2, X22
	0x039CCC18 BL 0x39CC464
	0x039CCC1C TBNZ X0, 0x0, 0x39CCBAC
	0x039CCC20 LDRB W8, [X21 + 0x58]
	0x039CCC24 CBZ W8, 0x39CCBAC
	0x039CCC28 LDR W8, [X21 + 0x64]
	0x039CCC2C CBZ W8, 0x39CCBAC
	0x039CCC30 LDRB W8, [X21 + 0x60]
	0x039CCC34 CBZ W8, 0x39CCBAC
	0x039CCC38 MOVZ W19, 0x6
	0x039CCC3C B 0x39CCC44
	0x039CCC40 MOVZ W19, 0x7
	0x039CCC44 ADRP X8, 0x786000
	0x039CCC48 LDR X8, [X8 + 0xDF8]
	0x039CCC4C ADD X0, X31, 0x20
	0x039CCC50 LDR X1, [X8]
	0x039CCC54 BL 0x2BC434C
	0x039CCC58 CMP W19, 0x6
	0x039CCC5C CSET W8, EQ
	0x039CCC60 AND W0, W20, W8, 0x0
	0x039CCC64 LDP X20, X19, [X31 + 0x70]
	0x039CCC68 LDP X22, X21, [X31 + 0x60]
	0x039CCC6C LDP X24, X23, [X31 + 0x50]
	0x039CCC70 LDP X30, X25, [X31 + 0x40]
	0x039CCC74 ADD X31, X31, 0x80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA16000
	008 Move X21, 0x787000
	009 Move W8, [X20+3326]
	010 Move X21, [X21+3544]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {45}
	016 Move X0, 0x787000
	017 Move X0, [X0+3480]
	018 Call 0x1C17CF4
	019 Move X0, 0x729000
	020 Move X0, [X0+3600]
	021 Call 0x1C17CF4
	022 Move X0, 0x72F000
	023 Move X0, [X0+2136]
	024 Call 0x1C17CF4
	025 Move X0, 0x787000
	026 Move X0, [X0+3552]
	027 Call 0x1C17CF4
	028 Move X0, 0x787000
	029 Move X0, [X0+3560]
	030 Call 0x1C17CF4
	031 Move X0, 0x787000
	032 Move X0, [X0+3488]
	033 Call 0x1C17CF4
	034 Move X0, 0x787000
	035 Move X0, [X0+3528]
	036 Call 0x1C17CF4
	037 Move X0, 0x787000
	038 Move X0, [X0+3568]
	039 Call 0x1C17CF4
	040 Move X0, 0x787000
	041 Move X0, [X0+3544]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+3326], W8
	045 Move X0, [X21]
	046 Call 0x1C17F10
	047 Move X1, X31
	048 Move X20, X0
	049 Call Object..ctor, X0
	050 Compare X20, 0
	051 JumpIfEqual {156}
	052 Move X22, 0x787000
	053 Move X22, [X22+3480]
	054 Move [X20+16], X19
	055 Move X23, 0x787000
	056 Move X21, 0x787000
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Move X23, [X23+3528]
	060 Move X21, [X21+3568]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X0, [X23]
	067 Move X19, [X8+16]
	068 Call 0x1C17F10
	069 Move X2, [X21]
	070 Move X1, X20
	071 Move X3, X31
	072 Move X21, X0
	073 Call Predicate`1<Object>..ctor, X0, X1, X2
	074 Compare X19, 0
	075 JumpIfEqual {156}
	076 Move X8, 0x787000
	077 Move X8, [X8+3552]
	078 Move X0, X19
	079 Move X1, X21
	080 Move X2, [X8]
	081 Call List`1<Object>.Find, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {149}
	084 Move X20, X0
	085 Move X0, [X22]
	086 Move W19, [X20+16]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X22]
	092 Move X8, [X0+184]
	093 Move X0, [X8+16]
	094 Compare X0, 0
	095 JumpIfEqual {156}
	096 Move X8, 0x787000
	097 Move X8, [X8+3560]
	098 Move X1, X20
	099 Move X2, [X8]
	100 Call List`1<Object>.Remove, X0, X1
	101 Move X0, [X22]
	102 Move X9, [X0+184]
	103 Move X8, [X9+24]
	104 Compare X8, 0
	105 JumpIfEqual {156}
	106 Move X11, 0x729000
	107 Move X11, [X11+3600]
	108 Move W12, [X8+28]
	109 Move X10, [X8+16]
	110 Move X11, [X11]
	111 Add W12, W12, 1
	112 Move [X8+28], W12
	113 Compare X10, 0
	114 JumpIfEqual {156}
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Move W13, [X10+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add W11, W12, 1
	119 Add X10, X10, X12
	120 Move [X8+24], W11
	121 Move [X10+32], W19
	122 Move X9, [X11+32]
	123 Move X0, X8
	124 Move W1, W19
	125 Move X9, [X9+192]
	126 Move X2, [X9+112]
	127 Call List`1<Int32>.AddWithResize, X0, X1
	128 Move X0, [X22]
	129 Move X9, [X0+184]
	130 Move X8, [X9+16]
	131 Compare X8, 0
	132 JumpIfEqual {156}
	133 Move W8, [X8+24]
	134 Compare W8, 0
	135 JumpIfNotEqual {149}
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {142}
	139 Call 0x1C17DFC
	140 Move X8, [X22]
	141 Move X9, [X8+184]
	142 Move X8, [X9+24]
	143 Compare X8, 0
	144 JumpIfEqual {156}
	145 Move W9, [X8+28]
	146 Add W9, W9, 1
	147 Move [X8+24], W31
	148 Move [X8+28], W9
	149 Move X20, [X31+32]
	150 Move X19, [X31+40]
	151 Move X22, [X31+16]
	152 Move X21, [X31+24]
	153 Move X30, [X31+48]
	154 Move X23, [X31+56]
	155 Return 
	156 Call 0x1C17F20

Method: System.Single ShapeAttenuationPointLight()

Disassembly:
	0x039CCC80 BL 0x1C16F20
	0x039CCC84 B 0x39CCC98

ISIL:
	001 Move S0, 1
	002 Return V0

Method: System.Single ShapeAttenuationDirLight(UnityEngine.Vector3 forward, UnityEngine.Vector3 wo)

Disassembly:
	0x039CCC88 B 0x39CCC98
	0x039CCC8C B 0x39CCC98
	0x039CCC90 B 0x39CCC98
	0x039CCC94 B 0x39CCC98
	0x039CCC98 MOV X19, X0
	0x039CCC9C CMP W1, 0x1
	0x039CCCA0 B.NE 0x39CCCD4
	0x039CCCA4 MOV X0, X19

ISIL:
	001 Multiply S0, S0, S3
	002 Multiply S1, S1, S4
	003 Multiply S2, S2, S5
	004 Add S0, S0, S1
	005 Add S0, S2, S0
	006 Move S1, W31
	007 NotImplemented "Instruction FMAXNM not yet implemented."
	008 Return V0

Method: System.Single ShapeAttenuationSpotConeLight(UnityEngine.Vector3 forward, UnityEngine.Vector3 wo, System.Single spotAngle, System.Single innerSpotPercent01)

Disassembly:
	0x039CCCA8 BL 0x3EB1AD0
	0x039CCCAC LDR X20, [X0]
	0x039CCCB0 BL 0x3EB1AE0
	0x039CCCB4 ADRP X8, 0x786000
	0x039CCCB8 LDR X8, [X8 + 0xDF8]
	0x039CCCBC ADD X0, X31, 0x20
	0x039CCCC0 LDR X1, [X8]
	0x039CCCC4 BL 0x2BC434C
	0x039CCCC8 CBNZ X20, 0x39CCCDC
	0x039CCCCC MOV W19, W31
	0x039CCCD0 B 0x39CCC58
	0x039CCCD4 MOV X20, X31
	0x039CCCD8 B 0x39CCCE8
	0x039CCCDC MOV X0, X20
	0x039CCCE0 BL 0x1C16F18
	0x039CCCE4 MOV X19, X0
	0x039CCCE8 ADRP X8, 0x786000
	0x039CCCEC LDR X8, [X8 + 0xDF8]
	0x039CCCF0 LDR X1, [X8]
	0x039CCCF4 ADD X0, X31, 0x20
	0x039CCCF8 BL 0x2BC434C
	0x039CCCFC CBNZ X20, 0x39CCD08
	0x039CCD00 MOV X0, X19
	0x039CCD04 BL 0x1D2C690
	0x039CCD08 MOV X0, X20
	0x039CCD0C BL 0x1C16F18
	0x039CCD10 BL 0x1990590
	0x039CCD14 SUB X31, X31, 0xD0
	0x039CCD18 STP X30, X27, [X31 + 0x80]
	0x039CCD1C STP X26, X25, [X31 + 0x90]
	0x039CCD20 STP X24, X23, [X31 + 0xA0]
	0x039CCD24 STP X22, X21, [X31 + 0xB0]
	0x039CCD28 STP X20, X19, [X31 + 0xC0]
	0x039CCD2C ADRP X27, 0xA15000
	0x039CCD30 LDRB W8, [X27 + 0xD06]
	0x039CCD34 MOV X21, X7
	0x039CCD38 MOV X24, X6
	0x039CCD3C MOV W19, W5
	0x039CCD40 MOV W23, W4
	0x039CCD44 MOV W25, W3
	0x039CCD48 MOV W22, W2
	0x039CCD4C MOV W26, W1
	0x039CCD50 MOV X20, X0

ISIL:
	001 Move [X31-80], D15
	002 Move [X31-72], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move X8, -49156096
	011 Move V14, V0
	012 Move V0, [X8+260]
	013 Move V13, V1
	014 Move S1, 0.5
	015 Multiply S1, S6, S1
	016 Multiply S15, S1, S0
	017 Move V0, V15
	018 Move V8, V7
	019 Move [X31+72], S4
	020 Move [X31+80], S5
	021 Move V11, V3
	022 Move V12, V2
	023 Call 0x3EB2BD0
	024 Move S9, W31
	025 NotImplemented "Instruction FMAXNM not yet implemented."
	026 Multiply S0, S15, S8
	027 Call 0x3EB2BD0
	028 Move S2, [X31+72]
	029 Move S3, [X31+76]
	030 Multiply S1, S14, S11
	031 NotImplemented "Instruction FMAXNM not yet implemented."
	032 Subtract S0, S0, S10
	033 Multiply S2, S13, S2
	034 Multiply S3, S12, S3
	035 Add S1, S1, S2
	036 Add S1, S3, S1
	037 NotImplemented "Instruction FMAXNM not yet implemented."
	038 Subtract S1, S1, S10
	039 Move S4, 1
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 NotImplemented "Instruction FMIN not yet implemented."
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 Move X30, [X31+64]
	045 Move D9, [X31+48]
	046 Move D8, [X31+56]
	047 Move D11, [X31+32]
	048 Move D10, [X31+40]
	049 Move D13, [X31+16]
	050 Move D12, [X31+24]
	051 Move D15, [X31+80]
	052 Move D14, [X31+88]
	053 Return V0

Method: System.Single ShapeAttenuationSpotBoxLight(UnityEngine.Vector3 forward, UnityEngine.Vector3 wo)

Disassembly:
	0x039CCD54 TBNZ X8, 0x0, 0x39CCD84
	0x039CCD58 ADRP X0, 0x727000
	0x039CCD5C LDR X0, [X0 + 0x598]
	0x039CCD60 BL 0x1C16CF4
	0x039CCD64 ADRP X0, 0x786000
	0x039CCD68 LDR X0, [X0 + 0xE18]
	0x039CCD6C BL 0x1C16CF4
	0x039CCD70 ADRP X0, 0x786000
	0x039CCD74 LDR X0, [X0 + 0xE20]
	0x039CCD78 BL 0x1C16CF4

ISIL:
	001 Multiply S0, S0, S3
	002 Multiply S1, S1, S4
	003 Multiply S2, S2, S5
	004 Add S0, S0, S1
	005 Add S0, S2, S0
	006 Move S3, W31
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Move S0, 1
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 Return V0

Method: System.Single ShapeAttenuationSpotPyramidLight(UnityEngine.Vector3 forward, UnityEngine.Vector3 wo)

Disassembly:
	0x039CCD7C MOVZ W8, 0x1
	0x039CCD80 STRB W8, [X27 + 0xD06]
	0x039CCD84 CBZ X20, 0x39CCE9C
	0x039CCD88 ADRP X8, 0x786000
	0x039CCD8C LDR X8, [X8 + 0xE20]
	0x039CCD90 ADRP X27, 0x727000
	0x039CCD94 LDR X1, [X8]
	0x039CCD98 LDR X27, [X27 + 0x598]
	0x039CCD9C TBZ X26, 0x0, 0x39CCDEC
	0x039CCDA0 TBZ X25, 0x0, 0x39CCDEC
	0x039CCDA4 MOV X0, X20
	0x039CCDA8 MOV X2, X31
	0x039CCDAC BL 0x3C4D0E0
	0x039CCDB0 ADD X8, X31, 0x58
	0x039CCDB4 MOV X0, X24
	0x039CCDB8 MOV X1, X31
	0x039CCDBC BL 0x3C4B274
	0x039CCDC0 LDUR V0, [X31 + 0x58]
	0x039CCDC4 LDUR V1, [X31 + 0x68]
	0x039CCDC8 LDR X8, [X31 + 0x78]
	0x039CCDCC ADD X2, X31, 0x30
	0x039CCDD0 MOV X0, X20
	0x039CCDD4 MOV W1, W23
	0x039CCDD8 MOV X3, X31
	0x039CCDDC STP V0, V1, [X31 + 0x30]
	0x039CCDE0 STR X8, [X31 + 0x50]
	0x039CCDE4 BL 0x3C4FCFC
	0x039CCDE8 B 0x39CCDF8
	0x039CCDEC MOV X0, X20
	0x039CCDF0 MOV X2, X31
	0x039CCDF4 BL 0x3C4D124
	0x039CCDF8 LDR X0, [X27]
	0x039CCDFC ADRP X23, 0x786000
	0x039CCE00 LDR W8, [X0 + 0xE0]
	0x039CCE04 LDR X23, [X23 + 0xE18]
	0x039CCE08 CBNZ W8, 0x39CCE10
	0x039CCE0C BL 0x1C16DFC
	0x039CCE10 MOV X0, X21
	0x039CCE14 MOV X1, X31
	0x039CCE18 MOV X2, X31

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xA16000
	011 Move X20, 0x787000
	012 Move W8, [X19+3327]
	013 Move X20, [X20+3480]
	014 Move V8, V5
	015 Move V10, V4
	016 Move V11, V3
	017 Move V9, V2
	018 Move V12, V1
	019 Move V13, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x787000
	025 Move X0, [X0+3480]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3327], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Multiply S0, S13, S11
	035 Multiply S1, S12, S10
	036 Multiply S2, S9, S8
	037 Add S0, S0, S1
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X30, [X31+48]
	041 Move D9, [X31+32]
	042 Move D8, [X31+40]
	043 Move D11, [X31+16]
	044 Move D10, [X31+24]
	045 Add S0, S2, S0
	046 Move S3, W31
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move S0, 1
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 Move D13, [X31+80]
	051 Move D12, [X31+88]
	052 Return V0

Method: System.Single ShapeAttenuationAreaTubeLight(UnityEngine.Vector3 lightPositionWS, UnityEngine.Vector3 lightSide, System.Single lightWidth, UnityEngine.Camera cam)

Disassembly:
	0x039CCE1C BL 0x3C354F8
	0x039CCE20 LDR X1, [X23]
	0x039CCE24 TBZ X0, 0x0, 0x39CCE74
	0x039CCE28 TBZ X22, 0x0, 0x39CCE74
	0x039CCE2C MOV X0, X20
	0x039CCE30 MOV X2, X31
	0x039CCE34 BL 0x3C4D0E0
	0x039CCE38 ADD X8, X31, 0x58
	0x039CCE3C MOV X0, X21
	0x039CCE40 MOV X1, X31
	0x039CCE44 BL 0x3C4B274
	0x039CCE48 LDUR V0, [X31 + 0x58]
	0x039CCE4C LDUR V1, [X31 + 0x68]
	0x039CCE50 LDR X8, [X31 + 0x78]
	0x039CCE54 ADD X2, X31, 0x0
	0x039CCE58 MOV X0, X20
	0x039CCE5C MOV W1, W19
	0x039CCE60 MOV X3, X31
	0x039CCE64 STP V0, V1, [X31]
	0x039CCE68 STR X8, [X31 + 0x20]
	0x039CCE6C BL 0x3C4FCFC
	0x039CCE70 B 0x39CCE80
	0x039CCE74 MOV X0, X20
	0x039CCE78 MOV X2, X31
	0x039CCE7C BL 0x3C4D124
	0x039CCE80 LDP X20, X19, [X31 + 0xC0]
	0x039CCE84 LDP X22, X21, [X31 + 0xB0]
	0x039CCE88 LDP X24, X23, [X31 + 0xA0]
	0x039CCE8C LDP X26, X25, [X31 + 0x90]
	0x039CCE90 LDP X30, X27, [X31 + 0x80]
	0x039CCE94 ADD X31, X31, 0xD0
	0x039CCE98 RET
	0x039CCE9C BL 0x1C16F20
	0x039CCEA0 STP D15, D14, [X31 - 0xA0]!
	0x039CCEA4 STP D13, D12, [X31 + 0x10]
	0x039CCEA8 STP D11, D10, [X31 + 0x20]
	0x039CCEAC STP D9, D8, [X31 + 0x30]
	0x039CCEB0 STP X29, X30, [X31 + 0x40]
	0x039CCEB4 STP X28, X27, [X31 + 0x50]
	0x039CCEB8 STP X26, X25, [X31 + 0x60]
	0x039CCEBC STP X24, X23, [X31 + 0x70]
	0x039CCEC0 STP X22, X21, [X31 + 0x80]
	0x039CCEC4 STP X20, X19, [X31 + 0x90]
	0x039CCEC8 SUB X31, X31, 0x220
	0x039CCECC ADRP X22, 0xA15000
	0x039CCED0 ADRP X20, 0x786000
	0x039CCED4 LDRB W8, [X22 + 0xD07]
	0x039CCED8 LDR X20, [X20 + 0xD98]
	0x039CCEDC MOV W26, W7
	0x039CCEE0 MOV W23, W6
	0x039CCEE4 MOV X19, X5
	0x039CCEE8 MOV X21, X4
	0x039CCEEC MOV V8.16B, V6.16B
	0x039CCEF0 MOV V9.16B, V5.16B
	0x039CCEF4 MOV V10.16B, V4.16B
	0x039CCEF8 MOV W25, W3
	0x039CCEFC MOV V11.16B, V3.16B
	0x039CCF00 MOV V12.16B, V2.16B
	0x039CCF04 MOV W28, W2
	0x039CCF08 MOV V13.16B, V1.16B
	0x039CCF0C MOV V14.16B, V0.16B
	0x039CCF10 MOV X24, X1
	0x039CCF14 MOV X29, X0
	0x039CCF18 TBNZ X8, 0x0, 0x39CCFA8
	0x039CCF1C ADRP X0, 0x786000
	0x039CCF20 LDR X0, [X0 + 0xE28]
	0x039CCF24 BL 0x1C16CF4
	0x039CCF28 ADRP X0, 0x72D000
	0x039CCF2C LDR X0, [X0 + 0xDF0]
	0x039CCF30 BL 0x1C16CF4
	0x039CCF34 ADRP X0, 0x74F000
	0x039CCF38 LDR X0, [X0 + 0x8F8]
	0x039CCF3C BL 0x1C16CF4
	0x039CCF40 ADRP X0, 0x786000
	0x039CCF44 LDR X0, [X0 + 0xDF8]
	0x039CCF48 BL 0x1C16CF4
	0x039CCF4C ADRP X0, 0x786000
	0x039CCF50 LDR X0, [X0 + 0xE00]
	0x039CCF54 BL 0x1C16CF4
	0x039CCF58 ADRP X0, 0x786000
	0x039CCF5C LDR X0, [X0 + 0xE08]
	0x039CCF60 BL 0x1C16CF4
	0x039CCF64 ADRP X0, 0x786000
	0x039CCF68 LDR X0, [X0 + 0xD98]
	0x039CCF6C BL 0x1C16CF4
	0x039CCF70 ADRP X0, 0x786000
	0x039CCF74 LDR X0, [X0 + 0xE10]
	0x039CCF78 BL 0x1C16CF4
	0x039CCF7C ADRP X0, 0x786000
	0x039CCF80 LDR X0, [X0 + 0xDA0]
	0x039CCF84 BL 0x1C16CF4
	0x039CCF88 ADRP X0, 0x727000
	0x039CCF8C LDR X0, [X0 + 0x598]
	0x039CCF90 BL 0x1C16CF4
	0x039CCF94 ADRP X0, 0x786000
	0x039CCF98 LDR X0, [X0 + 0xE30]
	0x039CCF9C BL 0x1C16CF4
	0x039CCFA0 MOVZ W8, 0x1
	0x039CCFA4 STRB W8, [X22 + 0xD07]
	0x039CCFA8 LDR X0, [X20]
	0x039CCFAC STR X31, [X31 + 0x208]
	0x039CCFB0 STR X31, [X31 + 0x200]
	0x039CCFB4 STR X31, [X31 + 0x210]
	0x039CCFB8 LDR W8, [X0 + 0xE0]
	0x039CCFBC CBNZ W8, 0x39CCFC4
	0x039CCFC0 BL 0x1C16DFC
	0x039CCFC4 BL 0x39CAFF4
	0x039CCFC8 TBZ X0, 0x0, 0x39CDB18
	0x039CCFCC LDR X0, [X20]
	0x039CCFD0 LDR W8, [X0 + 0xE0]
	0x039CCFD4 CBNZ W8, 0x39CCFDC
	0x039CCFD8 BL 0x1C16DFC
	0x039CCFDC BL 0x39CB4D4
	0x039CCFE0 CBZ X0, 0x39CDB4C
	0x039CCFE4 BL 0x39CB6B0
	0x039CCFE8 TBNZ X0, 0x0, 0x39CDB18
	0x039CCFEC LDR X0, [X20]
	0x039CCFF0 LDR W8, [X0 + 0xE0]
	0x039CCFF4 CBNZ W8, 0x39CD000
	0x039CCFF8 BL 0x1C16DFC
	0x039CCFFC LDR X0, [X20]
	0x039CD000 ADRP X8, 0x74E000
	0x039CD004 LDR X8, [X8 + 0x8F8]
	0x039CD008 LDR X9, [X0 + 0xB8]
	0x039CD00C LDR X8, [X8]
	0x039CD010 LDR X27, [X9 + 0x30]
	0x039CD014 LDR W10, [X8 + 0xE0]
	0x039CD018 CBNZ W10, 0x39CD024
	0x039CD01C MOV X0, X8
	0x039CD020 BL 0x1C16DFC
	0x039CD024 MOVN W4, 0x0
	0x039CD028 MOVN W5, 0x0
	0x039CD02C MOV X0, X19
	0x039CD030 MOV X1, X27
	0x039CD034 MOV W2, W31
	0x039CD038 MOV W3, W31
	0x039CD03C MOV X6, X31
	0x039CD040 BL 0x39E2DCC
	0x039CD044 TBNZ X23, 0x0, 0x39CD070
	0x039CD048 CBZ X19, 0x39CDB4C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X20, 0xA16000
	014 Move W8, [X20+3328]
	015 Move X19, X0
	016 Move V10, V6
	017 Move V14, V5
	018 Move V12, V4
	019 Move V13, V3
	020 Move V8, V2
	021 Move V9, V1
	022 Move V11, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x787000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3328], W8
	032 Compare X19, 0
	033 JumpIfEqual {170}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Component.get_transform, X0
	037 Compare X0, 0
	038 JumpIfEqual {170}
	039 Move X1, X31
	040 Call Transform.get_right, X0
	041 Move X0, X19
	042 Move X1, X31
	043 Move V15, V0
	044 Move [X31+120], S2
	045 Move [X31+128], S1
	046 Call Component.get_transform, X0
	047 Compare X0, 0
	048 JumpIfEqual {170}
	049 Move X1, X31
	050 Call Transform.get_right, X0
	051 Move X0, X19
	052 Move X1, X31
	053 Move [X31+40], S1
	054 Move [X31+48], S0
	055 Move [X31+36], S2
	056 Call Component.get_transform, X0
	057 Compare X0, 0
	058 JumpIfEqual {170}
	059 Multiply S0, S13, S10
	060 Multiply S1, S12, S10
	061 Multiply S2, S14, S10
	062 Move S3, 0.5
	063 Multiply S12, S0, S3
	064 Multiply S13, S1, S3
	065 Multiply S14, S2, S3
	066 Add S0, S11, S12
	067 Add S1, S9, S13
	068 Add S2, S8, S14
	069 Move X1, X31
	070 Call Transform.InverseTransformPoint, X0, X1
	071 Move X0, X19
	072 Move X1, X31
	073 Move [X31+28], S1
	074 Move [X31+36], S0
	075 Move [X31+24], S2
	076 Call Component.get_transform, X0
	077 Compare X0, 0
	078 JumpIfEqual {170}
	079 Subtract S0, S11, S12
	080 Subtract S1, S9, S13
	081 Subtract S2, S8, S14
	082 Move X1, X31
	083 Call Transform.InverseTransformPoint, X0, X1
	084 Move X0, X19
	085 Move X1, X31
	086 Move [X31+16], S1
	087 Move [X31+24], S0
	088 Move [X31+12], S2
	089 Call Component.get_transform, X0
	090 Compare X0, 0
	091 JumpIfEqual {170}
	092 Move S2, [X31+120]
	093 Move S1, [X31+124]
	094 Multiply S0, S15, S10
	095 Move S15, 0.5
	096 Multiply S0, S0, S15
	097 Multiply S1, S1, S10
	098 Multiply S2, S2, S10
	099 Multiply S1, S1, S15
	100 Multiply S2, S2, S15
	101 Add S0, S11, S0
	102 Add S1, S9, S1
	103 Add S2, S8, S2
	104 Move X1, X31
	105 Call Transform.InverseTransformPoint, X0, X1
	106 Move X0, X19
	107 Move X1, X31
	108 Move V12, V0
	109 Move V13, V1
	110 Move V14, V2
	111 Call Component.get_transform, X0
	112 Compare X0, 0
	113 JumpIfEqual {170}
	114 Move X19, 0x787000
	115 Move X19, [X19+3480]
	116 Move S1, [X31+40]
	117 Move S0, [X31+44]
	118 Move V2, [X31+36]
	119 Move X1, X31
	120 Multiply S0, S0, S10
	121 Multiply S1, S1, S10
	122 Multiply S2, S2, S10
	123 Multiply S0, S0, S15
	124 Multiply S1, S1, S15
	125 Multiply S2, S2, S15
	126 Subtract S0, S11, S0
	127 Subtract S1, S9, S1
	128 Subtract S2, S8, S2
	129 Call Transform.InverseTransformPoint, X0, X1
	130 Move X0, [X19]
	131 Move V8, V0
	132 Move V9, V1
	133 Move V10, V2
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move V0, V12
	139 Move V1, V13
	140 Move V2, V14
	141 Move V3, V8
	142 Move V4, V9
	143 Move V5, V10
	144 Call LensFlareCommonSRP.<ShapeAttenuationAreaTubeLight>g__DiffLineIntegral|28_2, X0, X1
	145 Move V8, V0
	146 Move S1, [X31+28]
	147 Move S0, [X31+32]
	148 Move S3, [X31+20]
	149 Move S2, [X31+24]
	150 Move S5, [X31+12]
	151 Move S4, [X31+16]
	152 Call LensFlareCommonSRP.<ShapeAttenuationAreaTubeLight>g__DiffLineIntegral|28_2, X0, X1
	153 NotImplemented "Instruction FDIV not yet implemented."
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 Move X20, [X31+128]
	156 Move X19, [X31+136]
	157 Move X30, [X31+112]
	158 Move D9, [X31+96]
	159 Move D8, [X31+104]
	160 Move D11, [X31+80]
	161 Move D10, [X31+88]
	162 Move D13, [X31+64]
	163 Move D12, [X31+72]
	164 Move D15, [X31+48]
	165 Move D14, [X31+56]
	166 Move S1, 1
	167 NotImplemented "Instruction FCSEL not yet implemented."
	168 Add X31, X31, 144
	169 Return V0
	170 Call 0x1C17F20

Method: System.Single ShapeAttenuationAreaRectangleLight(UnityEngine.Vector3 forward, UnityEngine.Vector3 wo)

Disassembly:
	0x039CD334 MOV X1, X31
	0x039CD338 BL 0x3C03654
	0x039CD33C LDR X0, [X20]
	0x039CD340 MOV V10.16B, V0.16B
	0x039CD344 LDR W8, [X0 + 0xE0]
	0x039CD348 CBNZ W8, 0x39CD350
	0x039CD34C BL 0x1C16DFC
	0x039CD350 LDP S2, S3, [X31 + 0x4C]
	0x039CD354 LDP S6, S5, [X31 + 0x54]
	0x039CD358 MOV V0.16B, V11.16B
	0x039CD35C MOV V1.16B, V15.16B
	0x039CD360 MOV V4.16B, V10.16B
	0x039CD364 BL 0x39CDD3C
	0x039CD368 MOV V11.16B, V0.16B
	0x039CD36C MOV V15.16B, V1.16B
	0x039CD370 B 0x39CD37C
	0x039CD374 FCMP S10, 0x0
	0x039CD378 B.MI 0x39CD13C
	0x039CD37C LDRB W8, [X27 + 0x70]
	0x039CD380 CBNZ W8, 0x39CD3AC
	0x039CD384 FMOV S0, 1
	0x039CD388 FCMP S15, S0
	0x039CD38C B.GT 0x39CD13C
	0x039CD390 FCMP S11, 0x0
	0x039CD394 B.MI 0x39CD13C
	0x039CD398 FMOV S0, 1
	0x039CD39C FCMP S11, S0
	0x039CD3A0 B.GT 0x39CD13C
	0x039CD3A4 FCMP S15, 0x0
	0x039CD3A8 B.MI 0x39CD13C
	0x039CD3AC CBZ X24, 0x39CDB58
	0x039CD3B0 MOV X0, X24
	0x039CD3B4 MOV X1, X31
	0x039CD3B8 BL 0x3C32E90
	0x039CD3BC CBZ X0, 0x39CDB54
	0x039CD3C0 MOV X1, X31
	0x039CD3C4 BL 0x3C3FA04
	0x039CD3C8 LDR V3, [X31 + 0x84]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xA15000
	011 Move X20, 0x786000
	012 Move W8, [X19+3329]
	013 Move X20, [X20+3480]
	014 Move V8, V5
	015 Move V10, V4
	016 Move V11, V3
	017 Move V9, V2
	018 Move V12, V1
	019 Move V13, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x786000
	025 Move X0, [X0+3480]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3329], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Multiply S0, S13, S11
	035 Multiply S1, S12, S10
	036 Multiply S2, S9, S8
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Move X30, [X31+48]
	040 Move D9, [X31+32]
	041 Move D8, [X31+40]
	042 Move D11, [X31+16]
	043 Move D10, [X31+24]
	044 Add S0, S0, S1
	045 Add S0, S2, S0
	046 Move S1, W31
	047 NotImplemented "Instruction FMAXNM not yet implemented."
	048 Move D13, [X31+80]
	049 Move D12, [X31+88]
	050 Return V0

Method: System.Single ShapeAttenuationAreaDiscLight(UnityEngine.Vector3 forward, UnityEngine.Vector3 wo)

Disassembly:
	0x039CD3CC LDR V4, [X31 + 0x98]
	0x039CD3D0 FSUB S13, S4, S3
	0x039CD3D4 LDR V3, [X31 + 0x88]
	0x039CD3D8 FMUL S0, S13, S0
	0x039CD3DC FSUB S14, S8, S3
	0x039CD3E0 LDR V3, [X31 + 0x8C]
	0x039CD3E4 FMUL S1, S14, S1
	0x039CD3E8 FADD S0, S0, S1
	0x039CD3EC FSUB S12, S9, S3
	0x039CD3F0 FMUL S1, S12, S2
	0x039CD3F4 FADD S0, S1, S0
	0x039CD3F8 FCMP S0, 0x0
	0x039CD3FC B.MI 0x39CD13C
	0x039CD400 ADRP X8, 0xA0B000
	0x039CD404 LDRB W8, [X8 + 0x784]
	0x039CD408 CBNZ W8, 0x39CD424
	0x039CD40C ADRP X0, 0x726000
	0x039CD410 LDR X0, [X0 + 0x5A8]
	0x039CD414 BL 0x1C16CF4
	0x039CD418 ADRP X8, 0xA0B000
	0x039CD41C MOVZ W9, 0x1
	0x039CD420 STRB W9, [X8 + 0x784]
	0x039CD424 ADRP X8, 0x726000
	0x039CD428 LDR X8, [X8 + 0x5A8]
	0x039CD42C LDR X0, [X8]
	0x039CD430 LDR W8, [X0 + 0xE0]
	0x039CD434 CBNZ W8, 0x39CD43C
	0x039CD438 BL 0x1C16DFC
	0x039CD43C TBZ X22, 0x0, 0x39CD470
	0x039CD440 MOV X0, X27
	0x039CD444 MOV X1, X31
	0x039CD448 BL 0x3C32E90
	0x039CD44C CBZ X0, 0x39CDB88
	0x039CD450 MOV X1, X31
	0x039CD454 BL 0x3C3FA04
	0x039CD458 MOV V10.16B, V0.16B
	0x039CD45C FMOV S0, 1
	0x039CD460 MOV V13.16B, V1.16B

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xA15000
	011 Move X20, 0x786000
	012 Move W8, [X19+3330]
	013 Move X20, [X20+3480]
	014 Move V8, V5
	015 Move V10, V4
	016 Move V11, V3
	017 Move V9, V2
	018 Move V12, V1
	019 Move V13, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x786000
	025 Move X0, [X0+3480]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3330], W8
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Multiply S0, S13, S11
	035 Multiply S1, S12, S10
	036 Multiply S2, S9, S8
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Move X30, [X31+48]
	040 Move D9, [X31+32]
	041 Move D8, [X31+40]
	042 Move D11, [X31+16]
	043 Move D10, [X31+24]
	044 Add S0, S0, S1
	045 Add S0, S2, S0
	046 Move S1, W31
	047 NotImplemented "Instruction FMAXNM not yet implemented."
	048 Move D13, [X31+80]
	049 Move D12, [X31+88]
	050 Return V0

Method: System.Boolean IsLensFlareSRPHidden(UnityEngine.Camera cam, UnityEngine.Rendering.LensFlareComponentSRP comp, UnityEngine.Rendering.LensFlareDataSRP data)

Disassembly:
	0x039CD464 MOV V14.16B, V2.16B
	0x039CD468 STR S0, [X31 + 0x2C]
	0x039CD46C B 0x39CD608
	0x039CD470 LDR X0, [X27 + 0x38]
	0x039CD474 CBZ X0, 0x39CDB84
	0x039CD478 LDP S10, S0, [X27 + 0x2C]
	0x039CD47C STR S0, [X31 + 0x30]
	0x039CD480 MOV X1, X31
	0x039CD484 BL 0x3C01178
	0x039CD488 FMUL S0, S13, S13
	0x039CD48C FMUL S1, S14, S14
	0x039CD490 FMUL S2, S12, S12
	0x039CD494 FADD S0, S0, S1
	0x039CD498 FADD S0, S2, S0
	0x039CD49C CMP W0, 0x0
	0x039CD4A0 FSQRT S12, S0
	0x039CD4A4 B.LE 0x39CD4C4
	0x039CD4A8 LDR X0, [X27 + 0x38]
	0x039CD4AC CBZ X0, 0x39CDB90
	0x039CD4B0 FDIV S0, S12, S10
	0x039CD4B4 MOV X1, X31
	0x039CD4B8 BL 0x3C00CC4
	0x039CD4BC STR S0, [X31 + 0x2C]
	0x039CD4C0 B 0x39CD4CC
	0x039CD4C4 FMOV S0, 1
	0x039CD4C8 STR S0, [X31 + 0x2C]
	0x039CD4CC LDR X0, [X27 + 0x40]
	0x039CD4D0 CBZ X0, 0x39CDB8C
	0x039CD4D4 MOV X1, X31
	0x039CD4D8 BL 0x3C01178
	0x039CD4DC CMP W0, 0x1
	0x039CD4E0 B.LT 0x39CD4FC
	0x039CD4E4 LDR X0, [X27 + 0x40]
	0x039CD4E8 CBZ X0, 0x39CDB94
	0x039CD4EC LDR V0, [X31 + 0x30]
	0x039CD4F0 FDIV S0, S12, S0
	0x039CD4F4 MOV X1, X31
	0x039CD4F8 BL 0x3C00CC4
	0x039CD4FC MOV X0, X24
	0x039CD500 MOV X1, X31
	0x039CD504 BL 0x3C32E90
	0x039CD508 CBZ X0, 0x39CDB7C
	0x039CD50C MOV X1, X31
	0x039CD510 BL 0x3C3F58C
	0x039CD514 STR S1, [X31 + 0x30]
	0x039CD518 STR S2, [X31 + 0x28]
	0x039CD51C MOV V12.16B, V0.16B
	0x039CD520 MOV X0, X27
	0x039CD524 MOV X1, X31
	0x039CD528 BL 0x3C32E90
	0x039CD52C CBZ X0, 0x39CDB80
	0x039CD530 MOV X1, X31
	0x039CD534 BL 0x3C3F58C
	0x039CD538 ADRP X8, 0xA0B000
	0x039CD53C LDRB W8, [X8 + 0x785]
	0x039CD540 MOV V10.16B, V0.16B
	0x039CD544 MOV V13.16B, V1.16B
	0x039CD548 MOV V14.16B, V2.16B
	0x039CD54C CBNZ W8, 0x39CD568
	0x039CD550 ADRP X0, 0x726000
	0x039CD554 LDR X0, [X0 + 0x5A8]
	0x039CD558 BL 0x1C16CF4
	0x039CD55C MOVZ W8, 0x1
	0x039CD560 ADRP X9, 0xA0B000
	0x039CD564 STRB W8, [X9 + 0x785]
	0x039CD568 ADRP X8, 0x726000
	0x039CD56C LDR X8, [X8 + 0x5A8]
	0x039CD570 LDR X0, [X8]
	0x039CD574 LDR W8, [X0 + 0xE0]
	0x039CD578 CBNZ W8, 0x39CD580
	0x039CD57C BL 0x1C16DFC
	0x039CD580 LDR V1, [X31 + 0x30]
	0x039CD584 LDR V2, [X31 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA15000
	007 Move W8, [X22+3331]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x727000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3331], W8
	020 Compare X19, 0
	021 JumpIfEqual {99}
	022 Move X0, X19
	023 Move X1, X31
	024 Call Behaviour.get_enabled, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {92}
	029 Move X0, X19
	030 Move X1, X31
	031 Call Component.get_gameObject, X0
	032 Compare X0, 0
	033 JumpIfEqual {99}
	034 Move X1, X31
	035 Call GameObject.get_activeSelf, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {92}
	040 Move X0, X19
	041 Move X1, X31
	042 Call Component.get_gameObject, X0
	043 Compare X0, 0
	044 JumpIfEqual {99}
	045 Move X1, X31
	046 Call GameObject.get_activeInHierarchy, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {92}
	051 Move X8, 0x727000
	052 Move X8, [X8+1432]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X21
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {92}
	066 Compare X21, 0
	067 JumpIfEqual {99}
	068 Move X8, [X21+24]
	069 Compare X8, 0
	070 JumpIfEqual {92}
	071 Move X8, [X8+24]
	072 Compare X8, 0
	073 JumpIfEqual {92}
	074 Move V0, [X19+40]
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {99}
	078 Move X0, X20
	079 Move X1, X31
	080 Call Camera.get_cullingMask, X0
	081 Move W20, W0
	082 Move X0, X19
	083 Move X1, X31
	084 Call Component.get_gameObject, X0
	085 Compare X0, 0
	086 JumpIfEqual {99}
	087 Move X1, X31
	088 Call GameObject.get_layer, X0
	089 NotImplemented "Instruction LSRV not yet implemented."
	090 And W31, W8, 1
	091 NotImplemented "Instruction CSET not yet implemented."
	092 Move W0, 1
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Return X0
	099 Call 0x1C17F20

Method: UnityEngine.Vector4 GetFlareData0(UnityEngine.Vector2 screenPos, UnityEngine.Vector2 translationScale, UnityEngine.Vector2 rayOff0, UnityEngine.Vector2 vLocalScreenRatio, System.Single angleDeg, System.Single position, System.Single angularOffset, UnityEngine.Vector2 positionOffset, System.Boolean autoRotate)

Disassembly:
	0x039CD588 FSUB S0, S12, S10
	0x039CD58C ADRP X8, 0xFFFFFFFFFD11D000
	0x039CD590 FSUB S1, S1, S13
	0x039CD594 FSUB S2, S2, S14
	0x039CD598 LDR V4, [X8 + 0x17C]
	0x039CD59C FMUL S3, S0, S0
	0x039CD5A0 FMUL S5, S1, S1
	0x039CD5A4 FADD S3, S3, S5
	0x039CD5A8 FMUL S5, S2, S2
	0x039CD5AC FADD S3, S5, S3
	0x039CD5B0 FSQRT S3, S3
	0x039CD5B4 FCMP S3, S4
	0x039CD5B8 B.LE 0x39CD5CC
	0x039CD5BC FDIV S10, S0, S3
	0x039CD5C0 FDIV S13, S1, S3
	0x039CD5C4 FDIV S14, S2, S3
	0x039CD5C8 B 0x39CD608
	0x039CD5CC ADRP X8, 0xA0B000
	0x039CD5D0 LDRB W8, [X8 + 0x783]
	0x039CD5D4 CBNZ W8, 0x39CD5F0
	0x039CD5D8 ADRP X0, 0x726000
	0x039CD5DC LDR X0, [X0 + 0x5A0]
	0x039CD5E0 BL 0x1C16CF4
	0x039CD5E4 MOVZ W8, 0x1
	0x039CD5E8 ADRP X9, 0xA0B000
	0x039CD5EC STRB W8, [X9 + 0x783]
	0x039CD5F0 ADRP X8, 0x726000
	0x039CD5F4 LDR X8, [X8 + 0x5A0]
	0x039CD5F8 LDR X8, [X8]
	0x039CD5FC LDR X8, [X8 + 0xB8]
	0x039CD600 LDP S10, S13, [X8]
	0x039CD604 LDR V14, [X8 + 0x8]
	0x039CD608 LDP V0, V1, [X21 + 0x20]
	0x039CD60C LDP V2, V3, [X21]
	0x039CD610 LDR X0, [X20]
	0x039CD614 STP V0, V1, [X31 + 0x1E0]
	0x039CD618 STP V2, V3, [X31 + 0x1C0]
	0x039CD61C LDR W8, [X0 + 0xE0]
	0x039CD620 LDR V12, [X27 + 0x68]
	0x039CD624 CBNZ W8, 0x39CD62C
	0x039CD628 BL 0x1C16DFC
	0x039CD62C LDP V3, V4, [X31 + 0x1C0]
	0x039CD630 LDP V5, V6, [X31 + 0x1E0]
	0x039CD634 LDR V7, [X31 + 0x98]
	0x039CD638 FMUL S0, S10, S12
	0x039CD63C FMUL S1, S13, S12
	0x039CD640 FMUL S2, S14, S12
	0x039CD644 FADD S0, S7, S0
	0x039CD648 FADD S1, S8, S1
	0x039CD64C FADD S2, S9, S2
	0x039CD650 STP V3, V4, [X31 + 0x140]
	0x039CD654 STP V5, V6, [X31 + 0x160]
	0x039CD658 LDR W8, [X31 + 0x9C]
	0x039CD65C ADD X3, X31, 0x140
	0x039CD660 MOV X0, X24
	0x039CD664 MOV W1, W29
	0x039CD668 AND W2, W8, 0x1
	0x039CD66C BL 0x39CC7D8
	0x039CD670 STR S2, [X31 + 0x30]
	0x039CD674 TBZ X22, 0x0, 0x39CD68C
	0x039CD678 MOV X0, X27
	0x039CD67C MOV X1, X24
	0x039CD680 BL 0x39CDE9C
	0x039CD684 MOV V13.16B, V0.16B
	0x039CD688 B 0x39CD690
	0x039CD68C LDR V13, [X27 + 0x5C]
	0x039CD690 LDP V1, V0, [X21 + 0x20]
	0x039CD694 LDP V3, V2, [X21]
	0x039CD698 STP V1, V0, [X31 + 0x1E0]
	0x039CD69C STP V3, V2, [X31 + 0x1C0]
	0x039CD6A0 MOV X0, X24
	0x039CD6A4 MOV X1, X31
	0x039CD6A8 BL 0x3C32E90
	0x039CD6AC CBZ X0, 0x39CDB64
	0x039CD6B0 MOV X1, X31
	0x039CD6B4 BL 0x3C3F988
	0x039CD6B8 LDR X0, [X20]
	0x039CD6BC MOV V14.16B, V0.16B
	0x039CD6C0 MOV V10.16B, V1.16B
	0x039CD6C4 MOV V12.16B, V2.16B
	0x039CD6C8 LDR W8, [X0 + 0xE0]
	0x039CD6CC CBNZ W8, 0x39CD6D4
	0x039CD6D0 BL 0x1C16DFC
	0x039CD6D4 LDR V7, [X31 + 0x98]
	0x039CD6D8 LDP V3, V4, [X31 + 0x1C0]
	0x039CD6DC LDP V5, V6, [X31 + 0x1E0]
	0x039CD6E0 FMUL S0, S13, S14
	0x039CD6E4 FMUL S1, S13, S10
	0x039CD6E8 FMUL S2, S13, S12
	0x039CD6EC FADD S0, S7, S0
	0x039CD6F0 FADD S1, S8, S1
	0x039CD6F4 FADD S2, S9, S2
	0x039CD6F8 STP V3, V4, [X31 + 0x100]
	0x039CD6FC STP V5, V6, [X31 + 0x120]
	0x039CD700 LDR W8, [X31 + 0x9C]
	0x039CD704 ADD X3, X31, 0x100
	0x039CD708 MOV X0, X24
	0x039CD70C MOV W1, W29
	0x039CD710 AND W2, W8, 0x1
	0x039CD714 BL 0x39CC7D8
	0x039CD718 ADRP X8, 0xA0C000
	0x039CD71C LDRB W8, [X8 + 0x818]
	0x039CD720 MOV V8.16B, V0.16B
	0x039CD724 MOV V9.16B, V1.16B
	0x039CD728 CBNZ W8, 0x39CD744
	0x039CD72C ADRP X0, 0x726000
	0x039CD730 LDR X0, [X0 + 0x5A8]
	0x039CD734 BL 0x1C16CF4
	0x039CD738 MOVZ W8, 0x1
	0x039CD73C ADRP X9, 0xA0C000
	0x039CD740 STRB W8, [X9 + 0x818]
	0x039CD744 ADRP X8, 0x726000
	0x039CD748 LDR X8, [X8 + 0x5A8]
	0x039CD74C LDR X0, [X8]
	0x039CD750 LDR W8, [X0 + 0xE0]
	0x039CD754 CBNZ W8, 0x39CD75C
	0x039CD758 BL 0x1C16DFC
	0x039CD75C CBZ X19, 0x39CDB68
	0x039CD760 LDR V2, [X27 + 0x64]
	0x039CD764 FSUB S0, S8, S11
	0x039CD768 FSUB S1, S9, S15
	0x039CD76C FMUL S0, S0, S0
	0x039CD770 FMUL S1, S1, S1
	0x039CD774 FADD S0, S0, S1
	0x039CD778 UCVTF S1, S2
	0x039CD77C FSQRT S0, S0
	0x039CD780 LDR W1, [X31 + 0x80]
	0x039CD784 LDR V2, [X31 + 0x30]
	0x039CD788 LDR V3, [X31 + 0x7C]
	0x039CD78C MOV X0, X19
	0x039CD790 MOV X2, X31
	0x039CD794 BL 0x3C4CED8
	0x039CD798 LDRB W1, [X27 + 0x60]
	0x039CD79C LDRB W2, [X27 + 0x71]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move V14, V1
	014 Move V1, [X31+172]
	015 Move V8, [X31+160]
	016 Move V10, [X31+144]
	017 Move W20, W0
	018 Move [X31+24], S7
	019 Move [X31+32], S1
	020 Move V1, [X31+168]
	021 Move X0, X31
	022 Move V9, V6
	023 Move V12, V5
	024 Move V11, V3
	025 Move V13, V2
	026 Move [X31+32], S1
	027 Move [X31+40], S4
	028 Move V15, V0
	029 Call SystemInfo.get_graphicsUVStartsAtTop
	030 Move X8, -49160192
	031 Move V0, [X8+100]
	032 Move W19, W0
	033 NotImplemented "Instruction FNEG not yet implemented."
	034 And W31, W0, 1
	035 Multiply S0, S8, S0
	036 Add X0, X31, 124
	037 Add X1, X31, 120
	038 NotImplemented "Instruction FCSEL not yet implemented."
	039 Call 0x3EB2BC0
	040 Move W8, 0x43340000
	041 Move S0, W8
	042 Add S8, S10, S0
	043 Move TEMP, X20
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {98}
	047 Move V0, [X31+152]
	048 Move S5, -1
	049 Move S2, [X31+120]
	050 Move S1, [X31+124]
	051 Move X20, 0xA0D000
	052 Add S0, S0, S5
	053 Move [X31+8], S9
	054 Move [X31+16], S13
	055 Move V9, [X31+24]
	056 Move W8, [X20+2072]
	057 Multiply S5, S15, S0
	058 Multiply S0, S14, S0
	059 NotImplemented "Instruction FNEG not yet implemented."
	060 NotImplemented "Instruction FNEG not yet implemented."
	061 Add S5, S15, S5
	062 Add S0, S14, S0
	063 Multiply S3, S5, S3
	064 Multiply S0, S0, S4
	065 Move [X31+16], S11
	066 Move [X31+24], S12
	067 Multiply S14, S2, S3
	068 Multiply S15, S1, S0
	069 Multiply S10, S1, S3
	070 Multiply S12, S2, S0
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0x727000
	074 Move X0, [X0+1448]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+2072], W8
	078 Move X8, 0x727000
	079 Move X8, [X8+1448]
	080 Subtract S15, S14, S15
	081 Add S14, S10, S12
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X8, -49160192
	088 Move V2, [X8+380]
	089 Multiply S0, S15, S15
	090 Multiply S1, S14, S14
	091 Move V12, [X31+20]
	092 Move V10, [X31+8]
	093 Add S0, S0, S1
	094 NotImplemented "Instruction FSQRT not yet implemented."
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 NotImplemented "Instruction FDIV not yet implemented."
	097 NotImplemented "Instruction FDIV not yet implemented."
	098 Move S15, [X31+32]
	099 Move S14, [X31+36]
	100 Move X20, 0xA0D000
	101 Move W8, [X20+1935]
	102 Compare W8, 0
	103 JumpIfNotEqual {109}
	104 Move X0, 0x72F000
	105 Move X0, [X0+3848]
	106 Call 0x1C17CF4
	107 Move W8, 1
	108 Move [X20+1935], W8
	109 Move X8, 0x72F000
	110 Move X8, [X8+3848]
	111 Move X8, [X8]
	112 Move X8, [X8+184]
	113 Move S0, [X8]
	114 Move S1, [X8+4]
	115 Move S13, [X31+12]
	116 Move S11, [X31+16]
	117 Move S15, [X31+32]
	118 Move S14, [X31+36]
	119 Multiply S0, S10, S0
	120 Multiply S2, S9, S1
	121 Multiply S1, S13, S0
	122 Multiply S0, S11, S2
	123 Call 0x3EB2C40
	124 Move X8, -49160192
	125 Move V1, [X8+420]
	126 Multiply S0, S0, S1
	127 Add S8, S8, S0
	128 Move X8, -49160192
	129 Move V2, [X31+28]
	130 Move V0, [X8+260]
	131 And W31, W19, 1
	132 Add X0, X31, 44
	133 NotImplemented "Instruction FNEG not yet implemented."
	134 Multiply S0, S8, S0
	135 Add X1, X31, 40
	136 NotImplemented "Instruction FCSEL not yet implemented."
	137 Call 0x3EB2BC0
	138 Move S0, [X31+40]
	139 Move S1, [X31+44]
	140 Multiply S2, S13, S14
	141 Multiply S3, S11, S12
	142 Add S2, S2, S15
	143 Subtract S3, S3, S10
	144 Move X20, [X31+128]
	145 Move X19, [X31+136]
	146 Move X30, [X31+112]
	147 Move D9, [X31+96]
	148 Move D8, [X31+104]
	149 Move D11, [X31+80]
	150 Move D10, [X31+88]
	151 Move D13, [X31+64]
	152 Move D12, [X31+72]
	153 Move D15, [X31+48]
	154 Move D14, [X31+56]
	155 NotImplemented "Instruction FNEG not yet implemented."
	156 Add X31, X31, 144
	157 Return X0

Method: UnityEngine.Vector2 GetLensFlareRayOffset(UnityEngine.Vector2 screenPos, System.Single position, System.Single globalCos0, System.Single globalSin0)

Disassembly:
	0x039CD7A0 LDR W3, [X31 + 0x5C]
	0x039CD7A4 LDP W4, W5, [X31 + 0x74]
	0x039CD7A8 LDP X6, X7, [X31 + 0x60]
	0x039CD7AC MOV X0, X19
	0x039CD7B0 BL 0x39CCD14
	0x039CD7B4 ADRP X8, 0x785000
	0x039CD7B8 LDR X8, [X8 + 0xE30]
	0x039CD7BC LDR X1, [X8]
	0x039CD7C0 MOV X0, X19
	0x039CD7C4 MOV X2, X31
	0x039CD7C8 BL 0x3C4D0E0
	0x039CD7CC MOV X0, X31
	0x039CD7D0 BL 0x3C3BB1C
	0x039CD7D4 FADD S0, S11, S11

ISIL:
	001 Move S5, -1
	002 Add S2, S2, S5
	003 Multiply S5, S0, S2
	004 Multiply S2, S1, S2
	005 Add S5, S0, S5
	006 Add S0, S1, S2
	007 NotImplemented "Instruction FNEG not yet implemented."
	008 Multiply S0, S0, S4
	009 Multiply S2, S5, S3
	010 Subtract S0, S0, S2
	011 Multiply S1, S1, S3
	012 Multiply S2, S5, S4
	013 Subtract S1, S1, S2
	014 Return X0

Method: UnityEngine.Vector3 WorldToViewport(UnityEngine.Camera camera, System.Boolean isLocalLight, System.Boolean isCameraRelative, UnityEngine.Matrix4x4 viewProjMatrix, UnityEngine.Vector3 positionWS)

Disassembly:
	0x039CD7D8 FADD S1, S15, S15
	0x039CD7DC FMOV S2, -1
	0x039CD7E0 ANDS W31, W0, 0x1
	0x039CD7E4 LDR X0, [X27 + 0x50]
	0x039CD7E8 FADD S8, S0, S2
	0x039CD7EC FADD S0, S1, S2
	0x039CD7F0 FNEG S1, S0
	0x039CD7F4 FABS S2, S8
	0x039CD7F8 FABS S3, S0
	0x039CD7FC FCSEL S9, S1, S0, NE
	0x039CD800 FCMP S2, S3
	0x039CD804 FMOV S11, -1
	0x039CD808 FCSEL S10, S2, S3, GT
	0x039CD80C CBZ X0, 0x39CDB60
	0x039CD810 MOV X1, X31
	0x039CD814 BL 0x3C01178
	0x039CD818 CMP W0, 0x0
	0x039CD81C B.LE 0x39CD838
	0x039CD820 LDR X0, [X27 + 0x50]
	0x039CD824 CBZ X0, 0x39CDB78
	0x039CD828 MOV V0.16B, V10.16B
	0x039CD82C MOV X1, X31
	0x039CD830 BL 0x3C00CC4
	0x039CD834 B 0x39CD83C
	0x039CD838 FMOV S0, 1
	0x039CD83C LDR V1, [X27 + 0x28]
	0x039CD840 FMUL S0, S0, S1
	0x039CD844 LDR V1, [X31 + 0x2C]
	0x039CD848 FMUL S0, S1, S0
	0x039CD84C FCMP S0, 0x0
	0x039CD850 B.LS 0x39CD13C
	0x039CD854 LDRB W8, [X27 + 0x70]
	0x039CD858 FMOV S0, 1
	0x039CD85C CMP W8, 0x0
	0x039CD860 FCSEL S0, S11, S0, EQ
	0x039CD864 ADRP X8, 0xFFFFFFFFFD11D000
	0x039CD868 LDR V1, [X8 + 0x1B4]
	0x039CD86C ADRP X8, 0xFFFFFFFFFD11D000
	0x039CD870 LDR V2, [X8 + 0x318]
	0x039CD874 ADRP X8, 0xFFFFFFFFFD11D000
	0x039CD878 LDR V3, [X8 + 0x28]
	0x039CD87C LDR W1, [X31 + 0x48]
	0x039CD880 MOV X0, X19
	0x039CD884 MOV X2, X31
	0x039CD888 BL 0x3C4CED8
	0x039CD88C LDR X0, [X20]
	0x039CD890 LDR W8, [X0 + 0xE0]
	0x039CD894 CBNZ W8, 0x39CD89C
	0x039CD898 BL 0x1C16DFC
	0x039CD89C ADRP X8, 0xA14000
	0x039CD8A0 ADRP X22, 0x72E000
	0x039CD8A4 LDRB W8, [X8 + 0xA48]
	0x039CD8A8 LDR X22, [X22 + 0xF08]
	0x039CD8AC CBNZ W8, 0x39CD8C4
	0x039CD8B0 MOV X0, X22
	0x039CD8B4 BL 0x1C16CF4
	0x039CD8B8 MOVZ W8, 0x1
	0x039CD8BC ADRP X9, 0xA14000
	0x039CD8C0 STRB W8, [X9 + 0xA48]
	0x039CD8C4 LDR X8, [X22]
	0x039CD8C8 ADRP X9, 0xA0C000
	0x039CD8CC LDRB W9, [X9 + 0x78F]
	0x039CD8D0 LDR X8, [X8 + 0xB8]
	0x039CD8D4 LDP S11, S10, [X8 + 0x8]
	0x039CD8D8 CBNZ W9, 0x39CD8F8
	0x039CD8DC MOV X0, X22
	0x039CD8E0 BL 0x1C16CF4
	0x039CD8E4 LDR X8, [X22]
	0x039CD8E8 MOVZ W9, 0x1
	0x039CD8EC ADRP X10, 0xA0C000
	0x039CD8F0 STRB W9, [X10 + 0x78F]
	0x039CD8F4 LDR X8, [X8 + 0xB8]
	0x039CD8F8 LDP S2, S3, [X8]
	0x039CD8FC FSUB S1, S9, S9
	0x039CD900 FMOV S6, W31
	0x039CD904 FSUB S0, S8, S8
	0x039CD908 FNEG S5, S1
	0x039CD90C FMUL S1, S1, S6
	0x039CD910 FSUB S4, S1, S0
	0x039CD914 FMOV S12, W31
	0x039CD918 FMUL S0, S0, S6

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], D13
	003 Move [X31+136], D12
	004 Move [X31+144], D11
	005 Move [X31+152], D10
	006 Move [X31+160], D9
	007 Move [X31+168], D8
	008 Move [X31+176], X30
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X23, 0xA15000
	015 Move W8, [X23+3332]
	016 Move V8, V2
	017 Move V9, V1
	018 Move V10, V0
	019 Move X21, X3
	020 Move W19, W2
	021 Move W22, W1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x786000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+3332], W8
	032 Move X23, 0x786000
	033 Move X23, [X23+3480]
	034 Move TEMP, X22
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {94}
	038 Move V1, [X21+32]
	039 Move V0, [X21+48]
	040 Move V3, [X21]
	041 Move V2, [X21+16]
	042 Move [X31+96], V1
	043 Move [X31+104], V0
	044 Move [X31+64], V3
	045 Move [X31+72], V2
	046 Compare X20, 0
	047 JumpIfEqual {118}
	048 Move X0, X20
	049 Move X1, X31
	050 Call Component.get_transform, X0
	051 Compare X0, 0
	052 JumpIfEqual {118}
	053 Move X1, X31
	054 Call Transform.get_position, X0
	055 Move X0, [X23]
	056 Move V11, V0
	057 Move V12, V1
	058 Move V13, V2
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move V0, [X31+64]
	064 Move V1, [X31+80]
	065 Move V2, [X31+96]
	066 Move V3, [X31+112]
	067 And W0, W19, 1
	068 Add X1, X31, 0
	069 Move [X31], V0
	070 Move [X31+8], V1
	071 Move [X31+32], V2
	072 Move [X31+40], V3
	073 Move V0, V11
	074 Move V1, V12
	075 Move V2, V13
	076 Move V3, V10
	077 Move V4, V9
	078 Move V5, V8
	079 Call LensFlareCommonSRP.WorldToViewportLocal, X0, X1, X2, X3
	080 Move X20, [X31+208]
	081 Move X19, [X31+216]
	082 Move X22, [X31+192]
	083 Move X21, [X31+200]
	084 Move X30, [X31+176]
	085 Move X23, [X31+184]
	086 Move D9, [X31+160]
	087 Move D8, [X31+168]
	088 Move D11, [X31+144]
	089 Move D10, [X31+152]
	090 Move D13, [X31+128]
	091 Move D12, [X31+136]
	092 Add X31, X31, 224
	093 Return X0
	094 Move X0, [X23]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move V0, V10
	101 Move V1, V9
	102 Move V2, V8
	103 Move X20, [X31+208]
	104 Move X19, [X31+216]
	105 Move X22, [X31+192]
	106 Move X21, [X31+200]
	107 Move X30, [X31+176]
	108 Move X23, [X31+184]
	109 Move D9, [X31+160]
	110 Move D8, [X31+168]
	111 Move D11, [X31+144]
	112 Move D10, [X31+152]
	113 Move D13, [X31+128]
	114 Move D12, [X31+136]
	115 Add X31, X31, 224
	116 Call LensFlareCommonSRP.WorldToViewportDistance, X0, X1
	117 Return X0
	118 Call 0x1C17F20

Method: UnityEngine.Vector3 WorldToViewportLocal(System.Boolean isCameraRelative, UnityEngine.Matrix4x4 viewProjMatrix, UnityEngine.Vector3 cameraPosWS, UnityEngine.Vector3 positionWS)

Disassembly:
	0x039CD91C FSUB S5, S5, S0
	0x039CD920 LDR V6, [X31 + 0x3C]
	0x039CD924 STP S2, S3, [X31 + 0x18]
	0x039CD928 FMOV S7, 1
	0x039CD92C MOV V0.16B, V8.16B
	0x039CD930 MOV V1.16B, V9.16B
	0x039CD934 MOV V2.16B, V11.16B
	0x039CD938 MOV V3.16B, V10.16B
	0x039CD93C MOV W0, W31
	0x039CD940 STR W31, [X31 + 0x10]
	0x039CD944 STR W31, [X31 + 0x8]
	0x039CD948 STR W31, [X31]
	0x039CD94C BL 0x39CC588
	0x039CD950 LDR W1, [X31 + 0x38]
	0x039CD954 MOV X0, X19
	0x039CD958 MOV X2, X31
	0x039CD95C BL 0x3C4CED8
	0x039CD960 LDR W1, [X31 + 0x34]
	0x039CD964 FMOV S2, W31
	0x039CD968 FMOV S3, W31
	0x039CD96C MOV X0, X19
	0x039CD970 MOV V0.16B, V8.16B
	0x039CD974 MOV V1.16B, V9.16B
	0x039CD978 MOV X2, X31
	0x039CD97C BL 0x3C4CED8
	0x039CD980 LDR X8, [X20]
	0x039CD984 LDR V0, [X26 + 0x10]
	0x039CD988 LDR X8, [X8 + 0xB8]
	0x039CD98C SCVTF S0, S0
	0x039CD990 LDR W9, [X8 + 0x38]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Subtract S1, S4, S1
	004 Subtract S2, S5, S2
	005 And W31, W0, 1
	006 Move V6, [X1+32]
	007 Move V7, [X1+48]
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 Move V4, [X1]
	011 Move V5, [X1+16]
	012 Subtract S0, S3, S0
	013 NotImplemented "Instruction FCSEL not yet implemented."
	014 Add X0, X31, 0
	015 Move S3, W31
	016 Move X1, X31
	017 Move [X31+32], V6
	018 Move [X31+40], V7
	019 Move [X31], V4
	020 Move [X31+8], V5
	021 Call Matrix4x4.op_Multiply, X0, X1
	022 Move V2, V3
	023 NotImplemented "Instruction FDIV not yet implemented."
	024 NotImplemented "Instruction FDIV not yet implemented."
	025 Move S3, 0.5
	026 Move X30, [X31+64]
	027 Multiply S0, S0, S3
	028 Multiply S1, S1, S3
	029 Add S0, S0, S3
	030 Add S1, S1, S3
	031 Move S3, 1
	032 Subtract S1, S3, S1
	033 Add X31, X31, 80
	034 Return X0

Method: UnityEngine.Vector3 WorldToViewportDistance(UnityEngine.Camera cam, UnityEngine.Vector3 positionWS)

Disassembly:
	0x039CD994 LDR W8, [X8 + 0x28]
	0x039CD998 ADD W8, W8, W9
	0x039CD99C SCVTF S1, W8
	0x039CD9A0 LDR W8, [X31 + 0x90]
	0x039CD9A4 ANDS W31, W8, 0x1
	0x039CD9A8 FCSEL S1, S1, S12, NE
	0x039CD9AC FMOV S2, 1
	0x039CD9B0 FMOV S3, 1
	0x039CD9B4 MOV X0, X19
	0x039CD9B8 MOV X1, X31
	0x039CD9BC BL 0x3C4C86C
	0x039CD9C0 ADRP X8, 0x785000
	0x039CD9C4 LDR X8, [X8 + 0xE28]
	0x039CD9C8 LDR X0, [X8]
	0x039CD9CC LDR W8, [X0 + 0xE0]
	0x039CD9D0 CBNZ W8, 0x39CD9D8
	0x039CD9D4 BL 0x1C16DFC
	0x039CD9D8 LDR X1, [X31 + 0x40]
	0x039CD9DC MOVZ W2, 0x4
	0x039CD9E0 MOV X0, X19
	0x039CD9E4 MOV X3, X31
	0x039CD9E8 BL 0x39E20B0
	0x039CD9EC B 0x39CD13C
	0x039CD9F0 ADRP X8, 0x785000
	0x039CD9F4 LDR X8, [X8 + 0xDF8]
	0x039CD9F8 ADD X0, X31, 0x200
	0x039CD9FC LDR X1, [X8]
	0x039CDA00 BL 0x2BC434C
	0x039CDA04 LDR W8, [X31 + 0x90]
	0x039CDA08 TBZ X8, 0x0, 0x39CDAE8
	0x039CDA0C LDR X0, [X20]
	0x039CDA10 LDR W8, [X0 + 0xE0]
	0x039CDA14 CBNZ W8, 0x39CDA20
	0x039CDA18 BL 0x1C16DFC
	0x039CDA1C LDR X0, [X20]
	0x039CDA20 LDR X8, [X0 + 0xB8]
	0x039CDA24 LDR X8, [X8 + 0x30]
	0x039CDA28 CBZ X8, 0x39CDA44
	0x039CDA2C LDR X9, [X8 + 0x48]
	0x039CDA30 LDUR V0, [X8 + 0x38]
	0x039CDA34 LDUR V1, [X8 + 0x28]
	0x039CDA38 STR X9, [X31 + 0xF0]
	0x039CDA3C STP V1, V0, [X31 + 0xD0]
	0x039CDA40 B 0x39CDA50
	0x039CDA44 MOVI V0.2D, 0x0
	0x039CDA48 STR X31, [X31 + 0xF0]
	0x039CDA4C STP V0, V0, [X31 + 0xD0]
	0x039CDA50 LDP V0, V1, [X31 + 0xD0]
	0x039CDA54 LDR X8, [X31 + 0xF0]
	0x039CDA58 STP V0, V1, [X31 + 0x1C0]
	0x039CDA5C STR X8, [X31 + 0x1E0]
	0x039CDA60 CBZ X19, 0x39CDB4C
	0x039CDA64 LDP V0, V1, [X31 + 0x1C0]
	0x039CDA68 LDR X8, [X31 + 0x1E0]
	0x039CDA6C ADD X1, X31, 0xA0
	0x039CDA70 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], D11
	003 Move [X31+200], D10
	004 Move [X31+208], D9
	005 Move [X31+216], D8
	006 Move [X31+224], X30
	007 Move [X31+232], X19
	008 Compare X0, 0
	009 JumpIfEqual {71}
	010 Add X8, X31, 128
	011 Move X1, X31
	012 Move V8, V2
	013 Move V9, V1
	014 Move V10, V0
	015 Move X19, X0
	016 Call Camera.get_worldToCameraMatrix, X0
	017 Move V0, [X31+128]
	018 Move V1, [X31+144]
	019 Move V2, [X31+160]
	020 Move V3, [X31+176]
	021 Add X0, X31, 64
	022 Move X1, X31
	023 Move [X31+64], V0
	024 Move [X31+72], V1
	025 Move [X31+96], V2
	026 Move [X31+104], V3
	027 Move S3, W31
	028 Move V0, V10
	029 Move V1, V9
	030 Move V2, V8
	031 Call Matrix4x4.op_Multiply, X0, X1
	032 Add X8, X31, 128
	033 Move X0, X19
	034 Move X1, X31
	035 Move V8, V0
	036 Move V9, V1
	037 Move V10, V2
	038 Move V11, V3
	039 Call Camera.get_projectionMatrix, X0
	040 Move V0, [X31+128]
	041 Move V1, [X31+144]
	042 Move V2, [X31+160]
	043 Move V3, [X31+176]
	044 Add X0, X31, 0
	045 Move X1, X31
	046 Move [X31], V0
	047 Move [X31+8], V1
	048 Move [X31+32], V2
	049 Move [X31+40], V3
	050 Move V0, V8
	051 Move V1, V9
	052 Move V2, V10
	053 Move V3, V11
	054 Call Matrix4x4.op_Multiply, X0, X1
	055 Move X30, [X31+224]
	056 Move X19, [X31+232]
	057 Move D9, [X31+208]
	058 Move D8, [X31+216]
	059 Move D11, [X31+192]
	060 Move D10, [X31+200]
	061 Move V2, V3
	062 NotImplemented "Instruction FDIV not yet implemented."
	063 NotImplemented "Instruction FDIV not yet implemented."
	064 Move S3, 0.5
	065 Multiply S0, S0, S3
	066 Multiply S1, S1, S3
	067 Add S0, S0, S3
	068 Add S1, S1, S3
	069 Add X31, X31, 240
	070 Return X0
	071 Call 0x1C17F20

Method: System.Boolean IsCloudLayerOpacityNeeded(UnityEngine.Camera cam)

Disassembly:
	0x039CDA74 MOV X2, X31
	0x039CDA78 STP V0, V1, [X31 + 0xA0]
	0x039CDA7C STR X8, [X31 + 0xC0]
	0x039CDA80 BL 0x3C4D998
	0x039CDA84 LDR X8, [X20]
	0x039CDA88 LDR X8, [X8 + 0xB8]
	0x039CDA8C LDR X9, [X8 + 0x10]
	0x039CDA90 CBZ X9, 0x39CDB4C
	0x039CDA94 LDR W9, [X9 + 0x18]
	0x039CDA98 LDP W10, W11, [X8 + 0x20]
	0x039CDA9C LDR W8, [X8 + 0x28]
	0x039CDAA0 FMOV S1, W31
	0x039CDAA4 SCVTF S0, W9
	0x039CDAA8 SUB W9, W10, W9
	0x039CDAAC ADD W8, W8, W11
	0x039CDAB0 SCVTF S2, W9
	0x039CDAB4 SCVTF S3, W8
	0x039CDAB8 MOV X0, X19
	0x039CDABC MOV X1, X31
	0x039CDAC0 BL 0x3C4C86C
	0x039CDAC4 FMOV S0, W31
	0x039CDAC8 FMOV S1, W31
	0x039CDACC FMOV S2, W31
	0x039CDAD0 FMOV S3, 1
	0x039CDAD4 MOVZ W2, 0x1
	0x039CDAD8 MOV X0, X19
	0x039CDADC MOV W1, W31
	0x039CDAE0 MOV X3, X31
	0x039CDAE4 BL 0x3C4CCDC
	0x039CDAE8 LDR X0, [X20]
	0x039CDAEC LDR W8, [X0 + 0xE0]
	0x039CDAF0 CBNZ W8, 0x39CDAFC
	0x039CDAF4 BL 0x1C16DFC
	0x039CDAF8 LDR X0, [X20]
	0x039CDAFC LDR X8, [X0 + 0xB8]
	0x039CDB00 LDR W9, [X8 + 0x38]
	0x039CDB04 LDR W10, [X8 + 0x24]
	0x039CDB08 ADD W9, W9, 0x1
	0x039CDB0C SDIV W11, W9, W10
	0x039CDB10 MSUB W9, W11, W10, W9
	0x039CDB14 STR W9, [X8 + 0x38]
	0x039CDB18 ADD X31, X31, 0x220
	0x039CDB1C LDP X20, X19, [X31 + 0x90]
	0x039CDB20 LDP X22, X21, [X31 + 0x80]
	0x039CDB24 LDP X24, X23, [X31 + 0x70]
	0x039CDB28 LDP X26, X25, [X31 + 0x60]
	0x039CDB2C LDP X28, X27, [X31 + 0x50]
	0x039CDB30 LDP X29, X30, [X31 + 0x40]
	0x039CDB34 LDP D9, D8, [X31 + 0x30]
	0x039CDB38 LDP D11, D10, [X31 + 0x20]
	0x039CDB3C LDP D13, D12, [X31 + 0x10]
	0x039CDB40 LDP D15, D14, [X31], #0xA0
	0x039CDB44 RET
	0x039CDB48 BL 0x1C16F20
	0x039CDB4C BL 0x1C16F20
	0x039CDB50 BL 0x1C16F20
	0x039CDB54 BL 0x1C16F20
	0x039CDB58 BL 0x1C16F20
	0x039CDB5C BL 0x1C16F20
	0x039CDB60 BL 0x1C16F20
	0x039CDB64 BL 0x1C16F20
	0x039CDB68 BL 0x1C16F20
	0x039CDB6C BL 0x1C16F20
	0x039CDB70 BL 0x1C16F20
	0x039CDB74 BL 0x1C16F20
	0x039CDB78 BL 0x1C16F20
	0x039CDB7C BL 0x1C16F20
	0x039CDB80 BL 0x1C16F20
	0x039CDB84 BL 0x1C16F20
	0x039CDB88 BL 0x1C16F20
	0x039CDB8C BL 0x1C16F20
	0x039CDB90 BL 0x1C16F20
	0x039CDB94 BL 0x1C16F20
	0x039CDB98 B 0x39CDCC8
	0x039CDB9C B 0x39CDCC8
	0x039CDBA0 B 0x39CDCC8
	0x039CDBA4 B 0x39CDCC8
	0x039CDBA8 B 0x39CDCC8
	0x039CDBAC B 0x39CDCC8
	0x039CDBB0 B 0x39CDCC8
	0x039CDBB4 B 0x39CDCC8
	0x039CDBB8 B 0x39CDCC8
	0x039CDBBC B 0x39CDCC8
	0x039CDBC0 B 0x39CDCC8
	0x039CDBC4 B 0x39CDCC8
	0x039CDBC8 B 0x39CDCC8
	0x039CDBCC B 0x39CDCC8
	0x039CDBD0 B 0x39CDCC8
	0x039CDBD4 B 0x39CDCC8
	0x039CDBD8 B 0x39CDCC8
	0x039CDBDC B 0x39CDCC8
	0x039CDBE0 B 0x39CDCC8
	0x039CDBE4 B 0x39CDCC8
	0x039CDBE8 B 0x39CDCC8
	0x039CDBEC B 0x39CDCC8
	0x039CDBF0 B 0x39CDCC8
	0x039CDBF4 B 0x39CDCC8
	0x039CDBF8 B 0x39CDCC8
	0x039CDBFC B 0x39CDCC8
	0x039CDC00 B 0x39CDCC8
	0x039CDC04 B 0x39CDCC8
	0x039CDC08 B 0x39CDCC8
	0x039CDC0C B 0x39CDCC8
	0x039CDC10 B 0x39CDCC8
	0x039CDC14 B 0x39CDCC8
	0x039CDC18 B 0x39CDCC8
	0x039CDC1C B 0x39CDCC8
	0x039CDC20 B 0x39CDCC8
	0x039CDC24 B 0x39CDCC8
	0x039CDC28 B 0x39CDCC8
	0x039CDC2C B 0x39CDCC8
	0x039CDC30 B 0x39CDCC8
	0x039CDC34 B 0x39CDCC8
	0x039CDC38 B 0x39CDCC8
	0x039CDC3C B 0x39CDCC8
	0x039CDC40 B 0x39CDCC8
	0x039CDC44 B 0x39CDCC8
	0x039CDC48 B 0x39CDCC8
	0x039CDC4C B 0x39CDCC8
	0x039CDC50 B 0x39CDCC8
	0x039CDC54 B 0x39CDCC8
	0x039CDC58 B 0x39CDCC8
	0x039CDC5C B 0x39CDCC8
	0x039CDC60 B 0x39CDCC8
	0x039CDC64 B 0x39CDCC8
	0x039CDC68 B 0x39CDCC8
	0x039CDC6C B 0x39CDCC8
	0x039CDC70 B 0x39CDCC8
	0x039CDC74 B 0x39CDCC8
	0x039CDC78 B 0x39CDCC8
	0x039CDC7C B 0x39CDCC8
	0x039CDC80 B 0x39CDCC8
	0x039CDC84 B 0x39CDCC8
	0x039CDC88 B 0x39CDCC8
	0x039CDC8C B 0x39CDCC8
	0x039CDC90 B 0x39CDCC8
	0x039CDC94 B 0x39CDCC8
	0x039CDC98 B 0x39CDCC8
	0x039CDC9C B 0x39CDCC8
	0x039CDCA0 B 0x39CDCC8
	0x039CDCA4 B 0x39CDCC8
	0x039CDCA8 B 0x39CDCC8
	0x039CDCAC B 0x39CDCC8
	0x039CDCB0 B 0x39CDCC8
	0x039CDCB4 B 0x39CDCC8
	0x039CDCB8 B 0x39CDCC8
	0x039CDCBC B 0x39CDCC8
	0x039CDCC0 B 0x39CDCC8
	0x039CDCC4 B 0x39CDCC8
	0x039CDCC8 MOV X21, X0
	0x039CDCCC CMP W1, 0x1
	0x039CDCD0 B.NE 0x39CDD04
	0x039CDCD4 MOV X0, X21
	0x039CDCD8 BL 0x3EB1AD0
	0x039CDCDC LDR X22, [X0]
	0x039CDCE0 BL 0x3EB1AE0
	0x039CDCE4 ADRP X8, 0x785000
	0x039CDCE8 LDR X8, [X8 + 0xDF8]
	0x039CDCEC ADD X0, X31, 0x200
	0x039CDCF0 LDR X1, [X8]
	0x039CDCF4 BL 0x2BC434C
	0x039CDCF8 CBZ X22, 0x39CDA04
	0x039CDCFC MOV X0, X22
	0x039CDD00 BL 0x1C16F18
	0x039CDD04 MOV X22, X31
	0x039CDD08 B 0x39CDD10
	0x039CDD0C MOV X21, X0
	0x039CDD10 ADRP X8, 0x785000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0xA15000
	011 Move X23, 0x786000
	012 Move W8, [X20+3333]
	013 Move X23, [X23+3480]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x786000
	020 Move X0, [X0+3576]
	021 Call 0x1C17CF4
	022 Move X0, 0x786000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x786000
	026 Move X0, [X0+3592]
	027 Call 0x1C17CF4
	028 Move X0, 0x786000
	029 Move X0, [X0+3480]
	030 Call 0x1C17CF4
	031 Move X0, 0x786000
	032 Move X0, [X0+3600]
	033 Call 0x1C17CF4
	034 Move X0, 0x727000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3333], W8
	039 Move X0, [X23]
	040 Move [X31+32], X31
	041 Move [X31+40], X31
	042 Move [X31+48], X31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Call LensFlareCommonSRP.get_Instance
	048 Compare X0, 0
	049 JumpIfEqual {168}
	050 Call LensFlareCommonSRP.IsEmpty, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {56}
	055 Move W0, W31
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Call LensFlareCommonSRP.get_Instance
	062 Compare X0, 0
	063 JumpIfEqual {168}
	064 Move X20, 0xA15000
	065 Move W8, [X20+3420]
	066 Compare W8, 0
	067 JumpIfNotEqual {73}
	068 Move X0, 0x786000
	069 Move X0, [X0+3480]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+3420], W8
	073 Move X0, [X23]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X23]
	079 Move X8, [X0+184]
	080 Move X0, [X8+16]
	081 Compare X0, 0
	082 JumpIfEqual {168}
	083 Move X8, 0x786000
	084 Move X8, [X8+3600]
	085 Move X1, [X8]
	086 Add X8, X31, 8
	087 Call List`1<Object>.GetEnumerator, X0
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move X8, [X31+24]
	090 Move X24, 0x786000
	091 Move X24, [X24+3584]
	092 Move [X31+2], V0
	093 Move [X31+48], X8
	094 Move X25, 0x727000
	095 Move X25, [X25+1432]
	096 Move X1, [X24]
	097 Add X0, X31, 32
	098 Call Enumerator<Object>.MoveNext, X0
	099 Move W20, W0
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {148}
	104 Move X22, [X31+48]
	105 Compare X22, 0
	106 JumpIfEqual {96}
	107 Move X0, [X25]
	108 Move X21, [X22+24]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X21
	114 Move X1, X31
	115 Move X2, X31
	116 Call Object.op_Equality, X0, X1
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {96}
	121 Move X21, [X22+24]
	122 Compare X21, 0
	123 JumpIfEqual {167}
	124 Move X0, [X23]
	125 Move X22, [X21+32]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X19
	131 Move X1, X21
	132 Move X2, X22
	133 Call LensFlareCommonSRP.IsLensFlareSRPHidden, X0, X1, X2
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {96}
	138 Move W8, [X21+88]
	139 Compare W8, 0
	140 JumpIfEqual {96}
	141 Move W8, [X21+100]
	142 Compare W8, 0
	143 JumpIfEqual {96}
	144 Move W8, [X21+96]
	145 Compare W8, 0
	146 JumpIfEqual {96}
	147 Move W19, 6
	148 Move W19, 7
	149 Move X8, 0x786000
	150 Move X8, [X8+3576]
	151 Add X0, X31, 32
	152 Move X1, [X8]
	153 Call Enumerator<Object>.Dispose, X0
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CSET not yet implemented."
	156 And W0, W20, W8
	157 Move X20, [X31+112]
	158 Move X19, [X31+120]
	159 Move X22, [X31+96]
	160 Move X21, [X31+104]
	161 Move X24, [X31+80]
	162 Move X23, [X31+88]
	163 Move X30, [X31+64]
	164 Move X25, [X31+72]
	165 Add X31, X31, 128
	166 Return X0
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 Move X19, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, X19
	172 Call 0x3EB2AD0
	173 Move X20, [X0]
	174 Call 0x3EB2AE0
	175 Move X8, 0x786000
	176 Move X8, [X8+3576]
	177 Add X0, X31, 32
	178 Move X1, [X8]
	179 Call Enumerator<Object>.Dispose, X0
	180 Compare X20, 0
	181 JumpIfNotEqual {184}
	182 Move W19, W31
	183 Move X20, X31
	184 Move X0, X20
	185 Call 0x1C17F18
	186 Move X19, X0
	187 Move X8, 0x786000
	188 Move X8, [X8+3576]
	189 Move X1, [X8]
	190 Add X0, X31, 32
	191 Call Enumerator<Object>.Dispose, X0
	192 Compare X20, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X19
	195 Call 0x1D2D690
	196 Move X0, X20
	197 Call 0x1C17F18
	198 Call 0x1991590

Method: System.Void SetOcclusionPermutation(UnityEngine.Rendering.CommandBuffer cmd, System.Boolean useBackgroundCloudOcclusion, System.Boolean volumetricCloudOcclusion, System.Boolean hasCloudLayer, System.Int32 _FlareCloudOpacity, System.Int32 _FlareSunOcclusionTex, UnityEngine.Texture cloudOpacityTexture, UnityEngine.Texture sunOcclusionTexture)

Disassembly:
	0x039CDD14 LDR X8, [X8 + 0xDF8]
	0x039CDD18 LDR X1, [X8]
	0x039CDD1C ADD X0, X31, 0x200
	0x039CDD20 BL 0x2BC434C
	0x039CDD24 CBNZ X22, 0x39CDD30
	0x039CDD28 MOV X0, X21
	0x039CDD2C BL 0x1D2C690
	0x039CDD30 MOV X0, X22
	0x039CDD34 BL 0x1C16F18
	0x039CDD38 BL 0x1990590
	0x039CDD3C SUB X31, X31, 0x80
	0x039CDD40 STR D12, [X31 + 0x40]
	0x039CDD44 STP D11, D10, [X31 + 0x48]
	0x039CDD48 STP D9, D8, [X31 + 0x58]
	0x039CDD4C STR X30, [X31 + 0x68]
	0x039CDD50 STP X20, X19, [X31 + 0x70]
	0x039CDD54 STR D1, [X31 + 0x20]
	0x039CDD58 STR D0, [X31 + 0x30]
	0x039CDD5C ADRP X19, 0xA14000
	0x039CDD60 ADRP X20, 0x785000
	0x039CDD64 LDRB W8, [X19 + 0xD09]
	0x039CDD68 LDR X20, [X20 + 0xD98]
	0x039CDD6C MOV V8.16B, V6.16B
	0x039CDD70 MOV V9.16B, V5.16B
	0x039CDD74 MOV V10.16B, V4.16B
	0x039CDD78 MOV V11.16B, V3.16B
	0x039CDD7C MOV V12.16B, V2.16B
	0x039CDD80 TBNZ X8, 0x0, 0x39CDD98
	0x039CDD84 ADRP X0, 0x785000
	0x039CDD88 LDR X0, [X0 + 0xD98]
	0x039CDD8C BL 0x1C16CF4
	0x039CDD90 MOVZ W8, 0x1
	0x039CDD94 STRB W8, [X19 + 0xD09]
	0x039CDD98 LDR X0, [X20]
	0x039CDD9C LDR W8, [X0 + 0xE0]
	0x039CDDA0 CBNZ W8, 0x39CDDA8
	0x039CDDA4 BL 0x1C16DFC
	0x039CDDA8 ADRP X8, 0xFFFFFFFFFD11D000
	0x039CDDAC LDR V0, [X8 + 0x104]
	0x039CDDB0 FMOV S1, 0.5
	0x039CDDB4 FMUL S0, S10, S0
	0x039CDDB8 FMUL S0, S0, S1
	0x039CDDBC BL 0x3EB1E50
	0x039CDDC0 FDIV S1, S12, S11
	0x039CDDC4 STR V0, [X31 + 0x1]
	0x039CDDC8 FMUL S0, S1, S0
	0x039CDDCC STR V0, [X31]
	0x039CDDD0 MOV V0.16B, V12.16B
	0x039CDDD4 MOV V1.16B, V11.16B
	0x039CDDD8 MOV V2.16B, V10.16B
	0x039CDDDC MOV V3.16B, V8.16B
	0x039CDDE0 BL 0x39D05B0
	0x039CDDE4 LDP V16, V5, [X31]
	0x039CDDE8 LDP V4, V6, [X31 + 0x20]
	0x039CDDEC FMOV S2, 1
	0x039CDDF0 FMOV S3, W31
	0x039CDDF4 FDIV S0, S0, S16
	0x039CDDF8 FDIV S1, S1, S5
	0x039CDDFC MOV V6.S[1], V4.S[0]
	0x039CDE00 MOV V16.S[1], V5.S[0]
	0x039CDE04 FMOV V5.2S, 0x0
	0x039CDE08 FCMP S0, S1
	0x039CDE0C FADD V6.2S, V6.2S, V6.2S
	0x039CDE10 FCSEL S0, S0, S1, MI
	0x039CDE14 FMIN S1, S9, S2
	0x039CDE18 FCMP S9, 0x0
	0x039CDE1C FADD V5.2S, V6.2S, V5.2S
	0x039CDE20 FMOV S4, -1
	0x039CDE24 FMIN S6, S0, S2
	0x039CDE28 FCSEL S1, S1, S3, PL
	0x039CDE2C FCMP S0, 0x0
	0x00000000 INVALID
	0x039CDE34 FADD S3, S6, S4
	0x00000000 INVALID
	0x039CDE3C FCSEL S3, S3, S4, PL
	0x039CDE40 FADD S4, S5, S2
	0x039CDE44 FMUL S1, S1, S3
	0x039CDE48 FSQRT S3, S4
	0x039CDE4C FADD S7, S8, S2
	0x039CDE50 FADD S1, S1, S2
	0x039CDE54 FDIV S2, S2, S3
	0x039CDE58 FADD S3, S2, S8
	0x00000000 INVALID
	0x039CDE60 FDIV S2, S7, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x039CDE70 MOVI V1.2S, 0x3F, 0x18
	0x039CDE74 LDP X20, X19, [X31 + 0x70]
	0x039CDE78 LDR X30, [X31 + 0x68]
	0x039CDE7C LDP D9, D8, [X31 + 0x58]
	0x039CDE80 LDP D11, D10, [X31 + 0x48]
	0x039CDE84 LDR V12, [X31 + 0x40]
	0x00000000 INVALID
	0x039CDE8C FADD V0.2S, V0.2S, V1.2S
	0x039CDE90 MOV S1, V0.S[1]
	0x039CDE94 ADD X31, X31, 0x80
	0x039CDE98 RET
	0x039CDE9C STR D8, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 Move X27, 0xA15000
	013 Move W8, [X27+3334]
	014 Move X21, X7
	015 Move X24, X6
	016 Move W19, W5
	017 Move W23, W4
	018 Move W25, W3
	019 Move W22, W2
	020 Move W26, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x727000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x786000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0x786000
	033 Move X0, [X0+3616]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X27+3334], W8
	037 Compare X20, 0
	038 JumpIfEqual {126}
	039 Move X8, 0x786000
	040 Move X8, [X8+3616]
	041 Move X27, 0x727000
	042 Move X1, [X8]
	043 Move X27, [X27+1432]
	044 Move TEMP, X26
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {70}
	048 Move TEMP, X25
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {70}
	052 Move X0, X20
	053 Move X2, X31
	054 Call CommandBuffer.EnableShaderKeyword, X0, X1
	055 Add X8, X31, 88
	056 Move X0, X24
	057 Move X1, X31
	058 Call RenderTargetIdentifier.op_Implicit, X0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move X8, [X31+120]
	062 Add X2, X31, 48
	063 Move X0, X20
	064 Move W1, W23
	065 Move X3, X31
	066 Move [X31+48], V0
	067 Move [X31+56], V1
	068 Move [X31+80], X8
	069 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	070 Move X0, X20
	071 Move X2, X31
	072 Call CommandBuffer.DisableShaderKeyword, X0, X1
	073 Move X0, [X27]
	074 Move X23, 0x786000
	075 Move W8, [X0+224]
	076 Move X23, [X23+3608]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X21
	081 Move X1, X31
	082 Move X2, X31
	083 Call Object.op_Inequality, X0, X1
	084 Move X1, [X23]
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {111}
	089 Move TEMP, X22
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {111}
	093 Move X0, X20
	094 Move X2, X31
	095 Call CommandBuffer.EnableShaderKeyword, X0, X1
	096 Add X8, X31, 88
	097 Move X0, X21
	098 Move X1, X31
	099 Call RenderTargetIdentifier.op_Implicit, X0
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X31+120]
	103 Add X2, X31, 0
	104 Move X0, X20
	105 Move W1, W19
	106 Move X3, X31
	107 Move [X31], V0
	108 Move [X31+8], V1
	109 Move [X31+32], X8
	110 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	111 Move X0, X20
	112 Move X2, X31
	113 Call CommandBuffer.DisableShaderKeyword, X0, X1
	114 Move X20, [X31+192]
	115 Move X19, [X31+200]
	116 Move X22, [X31+176]
	117 Move X21, [X31+184]
	118 Move X24, [X31+160]
	119 Move X23, [X31+168]
	120 Move X26, [X31+144]
	121 Move X25, [X31+152]
	122 Move X30, [X31+128]
	123 Move X27, [X31+136]
	124 Add X31, X31, 208
	125 Return 
	126 Call 0x1C17F20

Method: System.Void ComputeOcclusion(UnityEngine.Material lensFlareShader, UnityEngine.Camera cam, System.Single actualWidth, System.Single actualHeight, System.Boolean usePanini, System.Single paniniDistance, System.Single paniniCropToFit, System.Boolean isCameraRelative, UnityEngine.Vector3 cameraPositionWS, UnityEngine.Matrix4x4 viewProjMatrix, UnityEngine.Rendering.CommandBuffer cmd, System.Boolean taaEnabled, System.Boolean hasCloudLayer, UnityEngine.Texture cloudOpacityTexture, UnityEngine.Texture sunOcclusionTexture, System.Int32 _FlareOcclusionTex, System.Int32 _FlareCloudOpacity, System.Int32 _FlareOcclusionIndex, System.Int32 _FlareTex, System.Int32 _FlareColorValue, System.Int32 _FlareSunOcclusionTex, System.Int32 _FlareData0, System.Int32 _FlareData1, System.Int32 _FlareData2, System.Int32 _FlareData3, System.Int32 _FlareData4)

Disassembly:
	0x039CDEA0 STR X30, [X31 + 0x8]
	0x039CDEA4 STP X22, X21, [X31 + 0x10]
	0x039CDEA8 STP X20, X19, [X31 + 0x20]
	0x039CDEAC ADRP X22, 0xA14000
	0x039CDEB0 ADRP X21, 0x785000
	0x039CDEB4 LDRB W8, [X22 + 0xD10]
	0x039CDEB8 LDR X21, [X21 + 0xE38]
	0x039CDEBC MOV X20, X1
	0x039CDEC0 MOV X19, X0
	0x039CDEC4 TBNZ X8, 0x0, 0x39CDEE8
	0x039CDEC8 ADRP X0, 0x785000
	0x039CDECC LDR X0, [X0 + 0xE38]
	0x039CDED0 BL 0x1C16CF4
	0x039CDED4 ADRP X0, 0x726000
	0x039CDED8 LDR X0, [X0 + 0x5A8]
	0x039CDEDC BL 0x1C16CF4
	0x039CDEE0 MOVZ W8, 0x1
	0x039CDEE4 STRB W8, [X22 + 0xD10]
	0x039CDEE8 LDR X0, [X21]
	0x039CDEEC ADRP X22, 0x726000
	0x039CDEF0 LDR W8, [X0 + 0xE0]
	0x039CDEF4 LDR X22, [X22 + 0x5A8]
	0x039CDEF8 CBNZ W8, 0x39CDF04
	0x039CDEFC BL 0x1C16DFC
	0x039CDF00 LDR X0, [X21]
	0x039CDF04 LDR X8, [X22]
	0x039CDF08 LDR X9, [X0 + 0xB8]
	0x039CDF0C LDR W10, [X8 + 0xE0]
	0x039CDF10 LDR V8, [X9]
	0x039CDF14 CBNZ W10, 0x39CDF20
	0x039CDF18 MOV X0, X8
	0x039CDF1C BL 0x1C16DFC
	0x039CDF20 CBZ X20, 0x39CDF60
	0x039CDF24 FCVT S0, S8
	0x039CDF28 BL 0x3EB1DD0
	0x039CDF2C MOV X0, X20
	0x039CDF30 MOV X1, X31
	0x039CDF34 MOV V8.16B, V0.16B
	0x039CDF38 BL 0x3C03618
	0x039CDF3C LDR V1, [X19 + 0x5C]
	0x039CDF40 LDP X20, X19, [X31 + 0x20]
	0x039CDF44 LDP X22, X21, [X31 + 0x10]
	0x039CDF48 LDR X30, [X31 + 0x8]
	0x00000000 INVALID
	0x039CDF50 FMUL S0, S0, S2
	0x039CDF54 FMUL S0, S1, S0
	0x039CDF58 LDR V8, [X31], #0x30
	0x039CDF5C RET
	0x039CDF60 BL 0x1C16F20
	0x039CDF64 CBZ X0, 0x39CDF80
	0x039CDF68 LDR X9, [X0 + 0x48]
	0x039CDF6C LDUR V0, [X0 + 0x38]
	0x039CDF70 LDUR V1, [X0 + 0x28]
	0x039CDF74 STR X9, [X8 + 0x20]
	0x039CDF78 STP V1, V0, [X8]
	0x039CDF7C RET
	0x039CDF80 MOVI V0.2D, 0x0
	0x039CDF84 STR X31, [X8 + 0x20]
	0x039CDF88 STP V0, V0, [X8]
	0x039CDF8C RET
	0x039CDF90 STP D15, D14, [X31 - 0xA0]!
	0x039CDF94 STP D13, D12, [X31 + 0x10]
	0x039CDF98 STP D11, D10, [X31 + 0x20]
	0x039CDF9C STP D9, D8, [X31 + 0x30]
	0x039CDFA0 STP X29, X30, [X31 + 0x40]
	0x039CDFA4 STP X28, X27, [X31 + 0x50]
	0x039CDFA8 STP X26, X25, [X31 + 0x60]
	0x039CDFAC STP X24, X23, [X31 + 0x70]
	0x039CDFB0 STP X22, X21, [X31 + 0x80]
	0x039CDFB4 STP X20, X19, [X31 + 0x90]
	0x039CDFB8 SUB X31, X31, 0x340
	0x039CDFBC ADRP X21, 0xA14000
	0x039CDFC0 LDRB W8, [X21 + 0xD08]
	0x039CDFC4 MOV X19, X5
	0x039CDFC8 MOV X20, X4
	0x039CDFCC MOV V8.16B, V1.16B
	0x039CDFD0 MOV V9.16B, V0.16B
	0x039CDFD4 MOV X23, X1
	0x039CDFD8 STR S6, [X31 + 0x10C]
	0x039CDFDC STR S5, [X31 + 0x108]
	0x039CDFE0 STR S4, [X31 + 0x104]
	0x039CDFE4 STR W3, [X31 + 0x120]
	0x039CDFE8 STP S2, S3, [X31 + 0xCC]
	0x039CDFEC STR W2, [X31 + 0x11C]
	0x039CDFF0 STR X0, [X31 + 0x110]
	0x039CDFF4 TBNZ X8, 0x0, 0x39CE0A8
	0x039CDFF8 ADRP X0, 0x785000
	0x039CDFFC LDR X0, [X0 + 0xE28]
	0x039CE000 BL 0x1C16CF4
	0x039CE004 ADRP X0, 0x72B000
	0x039CE008 LDR X0, [X0 + 0xDF0]
	0x039CE00C BL 0x1C16CF4
	0x039CE010 ADRP X0, 0x74D000
	0x039CE014 LDR X0, [X0 + 0x8F8]
	0x039CE018 BL 0x1C16CF4
	0x039CE01C ADRP X0, 0x784000
	0x039CE020 LDR X0, [X0 + 0xDF8]
	0x039CE024 BL 0x1C16CF4
	0x039CE028 ADRP X0, 0x784000
	0x039CE02C LDR X0, [X0 + 0xE00]
	0x039CE030 BL 0x1C16CF4
	0x039CE034 ADRP X0, 0x784000
	0x039CE038 LDR X0, [X0 + 0xE08]
	0x039CE03C BL 0x1C16CF4
	0x039CE040 ADRP X0, 0x784000
	0x039CE044 LDR X0, [X0 + 0xD98]
	0x039CE048 BL 0x1C16CF4
	0x039CE04C ADRP X0, 0x784000
	0x039CE050 LDR X0, [X0 + 0xE10]
	0x039CE054 BL 0x1C16CF4
	0x039CE058 ADRP X0, 0x725000
	0x039CE05C LDR X0, [X0 + 0x598]
	0x039CE060 BL 0x1C16CF4
	0x039CE064 ADRP X0, 0x784000
	0x039CE068 LDR X0, [X0 + 0xE40]
	0x039CE06C BL 0x1C16CF4
	0x039CE070 ADRP X0, 0x784000
	0x039CE074 LDR X0, [X0 + 0xE48]
	0x039CE078 BL 0x1C16CF4
	0x039CE07C ADRP X0, 0x784000
	0x039CE080 LDR X0, [X0 + 0xE50]
	0x039CE084 BL 0x1C16CF4
	0x039CE088 ADRP X0, 0x784000
	0x039CE08C LDR X0, [X0 + 0xE58]
	0x039CE090 BL 0x1C16CF4
	0x039CE094 ADRP X0, 0x784000
	0x039CE098 LDR X0, [X0 + 0xE60]
	0x039CE09C BL 0x1C16CF4
	0x039CE0A0 MOVZ W8, 0x1
	0x039CE0A4 STRB W8, [X21 + 0xD08]
	0x039CE0A8 STR X31, [X31 + 0x328]
	0x039CE0AC STR X31, [X31 + 0x320]
	0x039CE0B0 STR X31, [X31 + 0x330]
	0x039CE0B4 STR X31, [X31 + 0x318]
	0x039CE0B8 STR X31, [X31 + 0x310]
	0x039CE0BC ADRP X8, 0x784000
	0x039CE0C0 LDR X8, [X8 + 0xD98]
	0x039CE0C4 STR X31, [X31 + 0x300]
	0x039CE0C8 STR X31, [X31 + 0x2F8]
	0x039CE0CC STR W31, [X31 + 0x308]
	0x039CE0D0 LDR X0, [X8]
	0x039CE0D4 LDR W8, [X0 + 0xE0]
	0x039CE0D8 CBNZ W8, 0x39CE0E0
	0x039CE0DC BL 0x1C16DFC
	0x039CE0E0 BL 0x39CB4D4
	0x039CE0E4 CBZ X0, 0x39CFEC8
	0x039CE0E8 BL 0x39CB6B0
	0x039CE0EC TBNZ X0, 0x0, 0x39CFE90
	0x039CE0F0 LDR X8, [X31 + 0x3F0]
	0x039CE0F4 ADD X22, X31, 0x1D0
	0x039CE0F8 LDR X9, [X8 + 0x20]
	0x039CE0FC LDP V0, V1, [X8]
	0x039CE100 ADRP X8, 0x74D000
	0x039CE104 LDR X8, [X8 + 0x8F8]
	0x039CE108 STR X9, [X31 + 0x2B0]
	0x039CE10C STP V0, V1, [X22 + 0xC0]
	0x039CE110 LDR X0, [X8]
	0x039CE114 LDR W8, [X0 + 0xE0]
	0x039CE118 CBNZ W8, 0x39CE120
	0x039CE11C BL 0x1C16DFC
	0x039CE120 LDP V0, V1, [X22 + 0xC0]
	0x039CE124 LDR X8, [X31 + 0x2B0]
	0x039CE128 ADD X1, X31, 0x2D0
	0x039CE12C MOVN W4, 0x0
	0x039CE130 MOVN W5, 0x0
	0x039CE134 MOV X0, X19
	0x039CE138 MOV W2, W31
	0x039CE13C MOV W3, W31
	0x039CE140 MOV X6, X31
	0x039CE144 STP V0, V1, [X22 + 0x100]
	0x039CE148 STR X8, [X31 + 0x2F0]
	0x039CE14C BL 0x39E66DC
	0x039CE150 CBZ X19, 0x39CFEC8
	0x039CE154 LDRB W21, [X31 + 0x460]
	0x039CE158 FMOV S0, W31
	0x039CE15C FMOV S1, W31
	0x039CE160 MOV X0, X19
	0x039CE164 MOV V2.16B, V9.16B
	0x039CE168 MOV V3.16B, V8.16B
	0x039CE16C MOV X1, X31
	0x039CE170 BL 0x3C4C86C
	0x039CE174 TBZ X21, 0x0, 0x39CE19C
	0x039CE178 FMOV S0, W31
	0x039CE17C FMOV S1, W31
	0x039CE180 FMOV S2, W31
	0x039CE184 FMOV S3, 1
	0x039CE188 MOVZ W2, 0x1
	0x039CE18C MOV X0, X19
	0x039CE190 MOV W1, W31
	0x039CE194 MOV X3, X31
	0x039CE198 BL 0x3C4CCDC
	0x039CE19C ADRP X21, 0x784000
	0x039CE1A0 LDR X21, [X21 + 0xD98]
	0x039CE1A4 LDR X0, [X21]
	0x039CE1A8 LDR W8, [X0 + 0xE0]
	0x039CE1AC CBNZ W8, 0x39CE1B8
	0x039CE1B0 BL 0x1C16DFC
	0x039CE1B4 LDR X0, [X21]
	0x039CE1B8 LDR X8, [X0 + 0xB8]
	0x039CE1BC LDR X0, [X8 + 0x10]
	0x039CE1C0 CBZ X0, 0x39CFEC8
	0x039CE1C4 LDR W9, [X31 + 0x458]
	0x039CE1C8 LDR W8, [X31 + 0x450]
	0x039CE1CC LDR W10, [X31 + 0x410]
	0x039CE1D0 FDIV S0, S9, S8
	0x039CE1D4 STP W9, W8, [X31 + 0x84]
	0x039CE1D8 LDR W8, [X31 + 0x440]
	0x039CE1DC LDR W9, [X31 + 0x448]
	0x039CE1E0 STR W8, [X31 + 0x98]
	0x039CE1E4 LDR W8, [X31 + 0x438]
	0x039CE1E8 STP W9, W8, [X31 + 0xF0]
	0x039CE1EC LDR W8, [X31 + 0x430]
	0x039CE1F0 LDR W9, [X31 + 0x428]
	0x039CE1F4 STR W8, [X31 + 0xEC]
	0x039CE1F8 LDR W8, [X31 + 0x408]
	0x039CE1FC STP W9, W8, [X31 + 0x70]
	0x039CE200 LDR W8, [X31 + 0x400]
	0x039CE204 STP W8, W10, [X31 + 0x8C]
	0x039CE208 LDR X8, [X31 + 0x3F8]
	0x039CE20C STR X8, [X31 + 0x78]
	0x039CE210 ADRP X8, 0x784000
	0x039CE214 LDR X8, [X8 + 0xE10]
	0x039CE218 STR S0, [X31 + 0xF8]
	0x039CE21C LDR X1, [X8]
	0x039CE220 ADD X8, X31, 0x290
	0x039CE224 BL 0x301CB58
	0x039CE228 LDR V0, [X22 + 0xC]
	0x039CE22C LDR X8, [X31 + 0x2A0]
	0x039CE230 FDIV S1, S8, S9
	0x039CE234 STP S8, S9, [X31 + 0xB8]
	0x039CE238 STR S1, [X31 + 0x94]
	0x039CE23C STR X8, [X31 + 0x330]
	0x039CE240 STR V0, [X22 + 0x15]
	0x039CE244 ADRP X8, 0x784000
	0x039CE248 LDR X8, [X8 + 0xE00]
	0x039CE24C LDR X1, [X8]
	0x039CE250 ADD X0, X31, 0x320
	0x039CE254 BL 0x2BC4350
	0x039CE258 TBZ X0, 0x0, 0x39CFE7C
	0x039CE25C LDR X21, [X31 + 0x330]
	0x039CE260 CBZ X21, 0x39CE244
	0x039CE264 ADRP X8, 0x725000
	0x039CE268 LDR X8, [X8 + 0x598]
	0x039CE26C LDR X25, [X21 + 0x18]
	0x039CE270 LDR X0, [X8]
	0x039CE274 LDR W8, [X0 + 0xE0]
	0x039CE278 CBNZ W8, 0x39CE280
	0x039CE27C BL 0x1C16DFC
	0x039CE280 MOV X0, X25
	0x039CE284 MOV X1, X31
	0x039CE288 MOV X2, X31
	0x039CE28C BL 0x3C3883C
	0x039CE290 TBNZ X0, 0x0, 0x39CE244
	0x039CE294 LDR X28, [X21 + 0x18]
	0x039CE298 CBZ X28, 0x39CFEC4
	0x039CE29C ADRP X8, 0x784000
	0x039CE2A0 LDR X8, [X8 + 0xD98]
	0x039CE2A4 LDR X27, [X28 + 0x20]
	0x039CE2A8 LDR X0, [X8]
	0x039CE2AC LDR W8, [X0 + 0xE0]
	0x039CE2B0 CBNZ W8, 0x39CE2B8
	0x039CE2B4 BL 0x1C16DFC
	0x039CE2B8 MOV X0, X23
	0x039CE2BC MOV X1, X28
	0x039CE2C0 MOV X2, X27
	0x039CE2C4 BL 0x39CC464
	0x039CE2C8 TBNZ X0, 0x0, 0x39CE244
	0x039CE2CC ADRP X8, 0x72B000
	0x039CE2D0 LDR X8, [X8 + 0xDF0]
	0x039CE2D4 LDR X1, [X8]
	0x039CE2D8 MOV X0, X28
	0x039CE2DC BL 0x21A3894
	0x039CE2E0 ADRP X8, 0x725000
	0x039CE2E4 LDR X8, [X8 + 0x598]
	0x039CE2E8 MOV X26, X0
	0x039CE2EC LDR X0, [X8]
	0x039CE2F0 LDR W8, [X0 + 0xE0]
	0x039CE2F4 CBNZ W8, 0x39CE2FC
	0x039CE2F8 BL 0x1C16DFC
	0x039CE2FC MOV X0, X26
	0x039CE300 MOV X1, X31
	0x039CE304 MOV X2, X31
	0x039CE308 BL 0x3C354F8
	0x039CE30C TBZ X0, 0x0, 0x39CE37C
	0x039CE310 CBZ X26, 0x39CFED8
	0x039CE314 MOV X0, X26
	0x039CE318 MOV X1, X31
	0x039CE31C BL 0x3C1668C
	0x039CE320 CMP W0, 0x1
	0x039CE324 B.NE 0x39CE37C
	0x039CE328 MOV X0, X26
	0x039CE32C MOV X1, X31
	0x039CE330 BL 0x3C32E90
	0x039CE334 CBZ X0, 0x39CFEF0
	0x039CE338 MOV X1, X31
	0x039CE33C BL 0x3C3FA04
	0x039CE340 CBZ X23, 0x39CFEEC
	0x039CE344 MOV V8.16B, V0.16B
	0x039CE348 MOV V9.16B, V1.16B
	0x039CE34C MOV V10.16B, V2.16B
	0x039CE350 MOV X0, X23
	0x039CE354 MOV X1, X31
	0x039CE358 BL 0x3C03618
	0x039CE35C FNEG S1, S8
	0x039CE360 FNEG S2, S9
	0x039CE364 FNEG S3, S10
	0x039CE368 FMUL S8, S0, S1
	0x039CE36C FMUL S9, S0, S2
	0x039CE370 FMUL S10, S0, S3
	0x039CE374 MOVZ W24, 0x1
	0x039CE378 B 0x39CE3A4
	0x039CE37C MOV X0, X28
	0x039CE380 MOV X1, X31
	0x039CE384 BL 0x3C32E90
	0x039CE388 CBZ X0, 0x39CFECC
	0x039CE38C MOV X1, X31
	0x039CE390 BL 0x3C3F58C
	0x039CE394 MOV V8.16B, V0.16B
	0x039CE398 MOV V9.16B, V1.16B
	0x039CE39C MOV V10.16B, V2.16B
	0x039CE3A0 MOV W24, W31
	0x039CE3A4 ADRP X8, 0x784000
	0x039CE3A8 LDP V0, V1, [X20 + 0x20]
	0x039CE3AC LDP V2, V3, [X20]
	0x039CE3B0 LDR X8, [X8 + 0xD98]
	0x039CE3B4 STP V0, V1, [X22 + 0xE0]
	0x039CE3B8 STP V2, V3, [X22 + 0xC0]
	0x039CE3BC LDR X0, [X8]
	0x039CE3C0 LDR W8, [X0 + 0xE0]
	0x039CE3C4 CBNZ W8, 0x39CE3CC
	0x039CE3C8 BL 0x1C16DFC
	0x039CE3CC LDP V0, V1, [X22 + 0xC0]
	0x039CE3D0 LDP V2, V3, [X22 + 0xE0]
	0x039CE3D4 EOR W29, W24, 0x1
	0x039CE3D8 STP V0, V1, [X22 + 0x80]
	0x039CE3DC STP V2, V3, [X22 + 0xA0]
	0x039CE3E0 LDR W8, [X31 + 0x120]
	0x039CE3E4 ADD X3, X31, 0x250
	0x039CE3E8 MOV X0, X23
	0x039CE3EC MOV W1, W29
	0x039CE3F0 AND W2, W8, 0x1
	0x039CE3F4 MOV V0.16B, V8.16B
	0x039CE3F8 MOV V1.16B, V9.16B
	0x039CE3FC MOV V2.16B, V10.16B
	0x039CE400 STR S8, [X31 + 0x12C]
	0x039CE404 STR S9, [X31 + 0x128]
	0x039CE408 STR S10, [X31 + 0x124]
	0x039CE40C BL 0x39CC7D8
	0x039CE410 LDR W8, [X31 + 0x11C]
	0x039CE414 MOV V13.16B, V0.16B
	0x039CE418 MOV V14.16B, V1.16B
	0x039CE41C MOV V11.16B, V2.16B
	0x039CE420 TBZ X8, 0x0, 0x39CE4B4
	0x039CE424 MOV X0, X31
	0x039CE428 BL 0x3C047F8
	0x039CE42C ADRP X8, 0x725000
	0x039CE430 LDR X8, [X8 + 0x598]
	0x039CE434 MOV X25, X0
	0x039CE438 LDR X0, [X8]
	0x039CE43C LDR W8, [X0 + 0xE0]
	0x039CE440 CBNZ W8, 0x39CE448
	0x039CE444 BL 0x1C16DFC
	0x039CE448 MOV X0, X23
	0x039CE44C MOV X1, X25
	0x039CE450 MOV X2, X31
	0x039CE454 BL 0x3C3883C
	0x039CE458 TBZ X0, 0x0, 0x39CE4B4
	0x039CE45C CBZ X23, 0x39CFEF4
	0x039CE460 MOV X0, X23
	0x039CE464 MOV X1, X31
	0x039CE468 BL 0x3C03654
	0x039CE46C LDR V9, [X31 + 0xBC]
	0x039CE470 ADRP X8, 0x784000
	0x039CE474 LDR X8, [X8 + 0xD98]
	0x039CE478 MOV V8.16B, V0.16B
	0x039CE47C LDR X0, [X8]
	0x039CE480 LDR W8, [X0 + 0xE0]
	0x039CE484 CBNZ W8, 0x39CE48C
	0x039CE488 BL 0x1C16DFC
	0x039CE48C LDR V3, [X31 + 0xB8]
	0x039CE490 LDP S6, S5, [X31 + 0xCC]
	0x039CE494 MOV V0.16B, V13.16B
	0x039CE498 MOV V1.16B, V14.16B
	0x039CE49C MOV V2.16B, V9.16B
	0x039CE4A0 MOV V4.16B, V8.16B
	0x039CE4A4 BL 0x39CDD3C
	0x039CE4A8 MOV V13.16B, V0.16B
	0x039CE4AC MOV V14.16B, V1.16B
	0x039CE4B0 B 0x39CE4BC
	0x039CE4B4 FCMP S11, 0x0
	0x039CE4B8 B.MI 0x39CE244
	0x039CE4BC LDRB W8, [X28 + 0x70]
	0x039CE4C0 CBNZ W8, 0x39CE4EC
	0x039CE4C4 FMOV S0, 1
	0x039CE4C8 FCMP S14, S0
	0x039CE4CC B.GT 0x39CE244
	0x039CE4D0 FCMP S13, 0x0
	0x039CE4D4 B.MI 0x39CE244
	0x039CE4D8 FMOV S0, 1
	0x039CE4DC FCMP S13, S0
	0x039CE4E0 B.GT 0x39CE244
	0x039CE4E4 FCMP S14, 0x0
	0x039CE4E8 B.MI 0x39CE244
	0x039CE4EC CBZ X23, 0x39CFED0
	0x039CE4F0 MOV X0, X23
	0x039CE4F4 MOV X1, X31
	0x039CE4F8 BL 0x3C32E90
	0x039CE4FC CBZ X0, 0x39CFED4
	0x039CE500 MOV X1, X31
	0x039CE504 BL 0x3C3FA04
	0x039CE508 LDR V3, [X31 + 0x104]
	0x039CE50C LDR V4, [X31 + 0x12C]
	0x039CE510 FSUB S8, S4, S3
	0x039CE514 LDR V3, [X31 + 0x108]
	0x039CE518 LDR V4, [X31 + 0x128]
	0x039CE51C FMUL S0, S8, S0
	0x039CE520 FSUB S9, S4, S3
	0x039CE524 LDR V3, [X31 + 0x10C]
	0x039CE528 LDR V4, [X31 + 0x124]
	0x039CE52C FMUL S1, S9, S1
	0x039CE530 FADD S0, S0, S1
	0x039CE534 FSUB S10, S4, S3
	0x039CE538 FMUL S1, S10, S2
	0x039CE53C FADD S0, S1, S0
	0x039CE540 FCMP S0, 0x0
	0x039CE544 B.MI 0x39CE244
	0x039CE548 ADRP X8, 0xA0A000
	0x039CE54C LDRB W8, [X8 + 0x784]
	0x039CE550 CBNZ W8, 0x39CE56C
	0x039CE554 ADRP X0, 0x725000
	0x039CE558 LDR X0, [X0 + 0x5A8]
	0x039CE55C BL 0x1C16CF4
	0x039CE560 ADRP X8, 0xA0A000
	0x039CE564 MOVZ W9, 0x1
	0x039CE568 STRB W9, [X8 + 0x784]
	0x039CE56C ADRP X8, 0x725000
	0x039CE570 LDR X8, [X8 + 0x5A8]
	0x039CE574 LDR X0, [X8]
	0x039CE578 LDR W8, [X0 + 0xE0]
	0x039CE57C CBNZ W8, 0x39CE584
	0x039CE580 BL 0x1C16DFC
	0x039CE584 FMUL S0, S8, S8
	0x039CE588 FMUL S1, S9, S9
	0x039CE58C FMUL S2, S10, S10
	0x039CE590 FADD S0, S0, S1
	0x039CE594 FADD S0, S2, S0
	0x039CE598 FMOV S3, 1
	0x039CE59C FSQRT S11, S0
	0x039CE5A0 FMOV S0, 1
	0x039CE5A4 STP S0, S3, [X31 + 0xFC]
	0x039CE5A8 TBNZ X24, 0x0, 0x39CE628
	0x039CE5AC LDR X0, [X28 + 0x38]
	0x039CE5B0 CBZ X0, 0x39CFF68
	0x039CE5B4 LDP S15, S12, [X28 + 0x2C]
	0x039CE5B8 MOV X1, X31
	0x039CE5BC BL 0x3C01178
	0x039CE5C0 CMP W0, 0x0
	0x039CE5C4 B.LE 0x39CE5E4
	0x039CE5C8 LDR X0, [X28 + 0x38]
	0x039CE5CC CBZ X0, 0x39CFFA8
	0x039CE5D0 FDIV S0, S11, S15
	0x039CE5D4 MOV X1, X31
	0x039CE5D8 BL 0x3C00CC4
	0x039CE5DC STR S0, [X31 + 0x100]
	0x039CE5E0 B 0x39CE5EC
	0x039CE5E4 FMOV S0, 1
	0x039CE5E8 STR S0, [X31 + 0x100]
	0x039CE5EC LDR X0, [X28 + 0x40]
	0x039CE5F0 CBZ X0, 0x39CFF5C
	0x039CE5F4 MOV X1, X31
	0x039CE5F8 BL 0x3C01178
	0x039CE5FC CMP W0, 0x0
	0x039CE600 B.LE 0x39CE620
	0x039CE604 LDR X0, [X28 + 0x40]
	0x039CE608 CBZ X0, 0x39CFFA4
	0x039CE60C FDIV S0, S11, S12
	0x039CE610 MOV X1, X31
	0x039CE614 BL 0x3C00CC4
	0x039CE618 STR S0, [X31 + 0xFC]
	0x039CE61C B 0x39CE628
	0x039CE620 FMOV S0, 1
	0x039CE624 STR S0, [X31 + 0xFC]
	0x039CE628 ADRP X8, 0x725000
	0x039CE62C LDR X8, [X8 + 0x598]
	0x039CE630 LDR X0, [X8]
	0x039CE634 LDR W8, [X0 + 0xE0]
	0x039CE638 CBNZ W8, 0x39CE640
	0x039CE63C BL 0x1C16DFC
	0x039CE640 MOV X0, X26
	0x039CE644 MOV X1, X31
	0x039CE648 MOV X2, X31
	0x039CE64C BL 0x3C354F8
	0x039CE650 FMOV S0, 1
	0x039CE654 TBZ X0, 0x0, 0x39CE724
	0x039CE658 LDRB W8, [X28 + 0x48]
	0x039CE65C CBZ W8, 0x39CE724
	0x039CE660 ADRP X8, 0xA0A000
	0x039CE664 LDRB W8, [X8 + 0x785]
	0x039CE668 CBNZ W8, 0x39CE684
	0x039CE66C ADRP X0, 0x725000
	0x039CE670 LDR X0, [X0 + 0x5A8]
	0x039CE674 BL 0x1C16CF4
	0x039CE678 MOVZ W8, 0x1
	0x039CE67C ADRP X9, 0xA0A000
	0x039CE680 STRB W8, [X9 + 0x785]
	0x039CE684 ADRP X8, 0x725000
	0x039CE688 LDR X8, [X8 + 0x5A8]
	0x039CE68C LDR X0, [X8]
	0x039CE690 LDR W8, [X0 + 0xE0]
	0x039CE694 CBNZ W8, 0x39CE69C
	0x039CE698 BL 0x1C16DFC
	0x039CE69C ADRP X8, 0xFFFFFFFFFD11C000
	0x039CE6A0 LDR V0, [X8 + 0x17C]
	0x039CE6A4 FCMP S11, S0
	0x039CE6A8 B.LE 0x39CE6BC
	0x039CE6AC FDIV S0, S8, S11
	0x039CE6B0 FDIV S1, S9, S11
	0x039CE6B4 FDIV S2, S10, S11
	0x039CE6B8 B 0x39CE6F8
	0x039CE6BC ADRP X8, 0xA0A000
	0x039CE6C0 LDRB W8, [X8 + 0x783]
	0x039CE6C4 CBNZ W8, 0x39CE6E0
	0x039CE6C8 ADRP X0, 0x725000
	0x039CE6CC LDR X0, [X0 + 0x5A0]
	0x039CE6D0 BL 0x1C16CF4
	0x039CE6D4 MOVZ W8, 0x1
	0x039CE6D8 ADRP X9, 0xA0A000
	0x039CE6DC STRB W8, [X9 + 0x783]
	0x039CE6E0 ADRP X8, 0x725000
	0x039CE6E4 LDR X8, [X8 + 0x5A0]
	0x039CE6E8 LDR X8, [X8]
	0x039CE6EC LDR X8, [X8 + 0xB8]
	0x039CE6F0 LDP S0, S1, [X8]
	0x039CE6F4 LDR V2, [X8 + 0x8]
	0x039CE6F8 LDR X9, [X31 + 0x78]
	0x039CE6FC CBZ X9, 0x39CFFAC
	0x039CE700 LDR X0, [X9 + 0x40]
	0x039CE704 LDR X8, [X9 + 0x18]
	0x039CE708 LDR X3, [X9 + 0x28]
	0x039CE70C FNEG S0, S0
	0x039CE710 FNEG S2, S2
	0x039CE714 FNEG S1, S1
	0x039CE718 MOV X1, X26
	0x039CE71C MOV X2, X23
	0x039CE720 BLR X8
	0x039CE724 FADD S1, S14, S14
	0x039CE728 FMOV S2, -1
	0x039CE72C STR S0, [X31 + 0xE8]
	0x039CE730 FADD S0, S13, S13
	0x039CE734 FADD S8, S1, S2
	0x039CE738 FADD S0, S0, S2
	0x039CE73C FNEG S1, S8
	0x039CE740 STR S0, [X31 + 0x130]
	0x039CE744 STR S0, [X31 + 0x318]
	0x039CE748 STR S1, [X31 + 0x134]
	0x039CE74C STR S1, [X31 + 0x31C]
	0x039CE750 MOV X0, X31
	0x039CE754 BL 0x3C3BB1C
	0x039CE758 EOR W8, W0, 0x1
	0x039CE75C AND W8, W24, W8, 0x0
	0x039CE760 TBZ X8, 0x0, 0x39CE76C
	0x039CE764 STR S8, [X31 + 0x31C]
	0x039CE768 STR S8, [X31 + 0x134]
	0x039CE76C LDR V0, [X31 + 0x130]
	0x039CE770 LDR V1, [X31 + 0x134]
	0x039CE774 LDR X0, [X28 + 0x50]
	0x039CE778 FABS S0, S0
	0x039CE77C FABS S1, S1
	0x039CE780 FCMP S0, S1
	0x039CE784 FCSEL S8, S0, S1, GT
	0x039CE788 CBZ X0, 0x39CFEE4
	0x039CE78C MOV X1, X31
	0x039CE790 BL 0x3C01178
	0x039CE794 CMP W0, 0x0
	0x039CE798 B.LE 0x39CE7B4
	0x039CE79C LDR X0, [X28 + 0x50]
	0x039CE7A0 CBZ X0, 0x39CFF48
	0x039CE7A4 MOV V0.16B, V8.16B
	0x039CE7A8 MOV X1, X31
	0x039CE7AC BL 0x3C00CC4
	0x039CE7B0 B 0x39CE7B8
	0x039CE7B4 FMOV S0, 1
	0x039CE7B8 LDR V1, [X28 + 0x28]
	0x039CE7BC FMUL S0, S0, S1
	0x039CE7C0 LDR V1, [X31 + 0x100]
	0x039CE7C4 FMUL S0, S1, S0
	0x039CE7C8 FCMP S0, 0x0
	0x039CE7CC STR S0, [X31 + 0xC0]
	0x039CE7D0 B.LS 0x39CE244
	0x039CE7D4 MOV X0, X23
	0x039CE7D8 MOV X1, X31
	0x039CE7DC BL 0x3C32E90
	0x039CE7E0 CBZ X0, 0x39CFF64
	0x039CE7E4 MOV X1, X31
	0x039CE7E8 BL 0x3C3F58C
	0x039CE7EC MOV V11.16B, V0.16B
	0x039CE7F0 MOV V12.16B, V1.16B
	0x039CE7F4 MOV V15.16B, V2.16B
	0x039CE7F8 MOV X0, X28
	0x039CE7FC MOV X1, X31
	0x039CE800 BL 0x3C32E90
	0x039CE804 CBZ X0, 0x39CFF60
	0x039CE808 MOV X1, X31
	0x039CE80C BL 0x3C3F58C
	0x039CE810 ADRP X8, 0xA0A000
	0x039CE814 LDRB W8, [X8 + 0x785]
	0x039CE818 MOV V8.16B, V0.16B
	0x039CE81C MOV V9.16B, V1.16B
	0x039CE820 MOV V10.16B, V2.16B
	0x039CE824 CBNZ W8, 0x39CE840
	0x039CE828 ADRP X0, 0x725000
	0x039CE82C LDR X0, [X0 + 0x5A8]
	0x039CE830 BL 0x1C16CF4
	0x039CE834 MOVZ W8, 0x1
	0x039CE838 ADRP X9, 0xA0A000
	0x039CE83C STRB W8, [X9 + 0x785]
	0x039CE840 ADRP X8, 0x725000
	0x039CE844 LDR X8, [X8 + 0x5A8]
	0x039CE848 LDR X0, [X8]
	0x039CE84C LDR W8, [X0 + 0xE0]
	0x039CE850 CBNZ W8, 0x39CE858
	0x039CE854 BL 0x1C16DFC
	0x039CE858 FSUB S0, S11, S8
	0x039CE85C FSUB S1, S12, S9
	0x039CE860 ADRP X8, 0xFFFFFFFFFD11C000
	0x039CE864 FSUB S2, S15, S10
	0x039CE868 LDR V4, [X8 + 0x17C]
	0x039CE86C FMUL S3, S0, S0
	0x039CE870 FMUL S5, S1, S1
	0x039CE874 FADD S3, S3, S5
	0x039CE878 FMUL S5, S2, S2
	0x039CE87C FADD S3, S5, S3
	0x039CE880 FSQRT S3, S3
	0x039CE884 FCMP S3, S4
	0x039CE888 B.LE 0x39CE89C
	0x039CE88C FDIV S8, S0, S3
	0x039CE890 FDIV S9, S1, S3
	0x039CE894 FDIV S10, S2, S3
	0x039CE898 B 0x39CE8D8
	0x039CE89C ADRP X8, 0xA0A000
	0x039CE8A0 LDRB W8, [X8 + 0x783]
	0x039CE8A4 CBNZ W8, 0x39CE8C0
	0x039CE8A8 ADRP X0, 0x725000
	0x039CE8AC LDR X0, [X0 + 0x5A0]
	0x039CE8B0 BL 0x1C16CF4
	0x039CE8B4 MOVZ W8, 0x1
	0x039CE8B8 ADRP X9, 0xA0A000
	0x039CE8BC STRB W8, [X9 + 0x783]
	0x039CE8C0 ADRP X8, 0x725000
	0x039CE8C4 LDR X8, [X8 + 0x5A0]
	0x039CE8C8 LDR X8, [X8]
	0x039CE8CC LDR X8, [X8 + 0xB8]
	0x039CE8D0 LDP S8, S9, [X8]
	0x039CE8D4 LDR V10, [X8 + 0x8]
	0x039CE8D8 ADRP X8, 0x784000
	0x039CE8DC LDP V0, V1, [X20 + 0x20]
	0x039CE8E0 LDP V2, V3, [X20]
	0x039CE8E4 LDR X8, [X8 + 0xD98]
	0x039CE8E8 STP V0, V1, [X22 + 0xE0]
	0x039CE8EC STP V2, V3, [X22 + 0xC0]
	0x039CE8F0 LDR X0, [X8]
	0x039CE8F4 LDR V11, [X28 + 0x68]
	0x039CE8F8 LDR W8, [X0 + 0xE0]
	0x039CE8FC CBNZ W8, 0x39CE904
	0x039CE900 BL 0x1C16DFC
	0x039CE904 LDR V7, [X31 + 0x12C]
	0x039CE908 FMUL S0, S8, S11
	0x039CE90C FMUL S1, S9, S11
	0x039CE910 LDP V3, V4, [X22 + 0xC0]
	0x039CE914 FADD S0, S7, S0
	0x039CE918 LDR V7, [X31 + 0x128]
	0x039CE91C LDP V5, V6, [X22 + 0xE0]
	0x039CE920 FMUL S2, S10, S11
	0x039CE924 STP V3, V4, [X22 + 0x40]
	0x039CE928 FADD S1, S7, S1
	0x039CE92C LDR V7, [X31 + 0x124]
	0x039CE930 STP V5, V6, [X22 + 0x60]
	0x039CE934 FADD S2, S7, S2
	0x039CE938 LDR W8, [X31 + 0x120]
	0x039CE93C ADD X3, X31, 0x210
	0x039CE940 MOV X0, X23
	0x039CE944 MOV W1, W29
	0x039CE948 AND W2, W8, 0x1
	0x039CE94C BL 0x39CC7D8
	0x039CE950 MOV V11.16B, V2.16B
	0x039CE954 TBZ X24, 0x0, 0x39CE96C
	0x039CE958 MOV X0, X28
	0x039CE95C MOV X1, X23
	0x039CE960 BL 0x39CDE9C
	0x039CE964 MOV V12.16B, V0.16B
	0x039CE968 B 0x39CE970
	0x039CE96C LDR V12, [X28 + 0x5C]
	0x039CE970 LDP V1, V0, [X20 + 0x20]
	0x039CE974 LDP V3, V2, [X20]
	0x039CE978 STP V1, V0, [X22 + 0xE0]
	0x039CE97C STP V3, V2, [X22 + 0xC0]
	0x039CE980 MOV X0, X23
	0x039CE984 MOV X1, X31
	0x039CE988 BL 0x3C32E90
	0x039CE98C CBZ X0, 0x39CFF58
	0x039CE990 MOV X1, X31
	0x039CE994 BL 0x3C3F988
	0x039CE998 ADRP X8, 0x784000
	0x039CE99C LDR X8, [X8 + 0xD98]
	0x039CE9A0 MOV V8.16B, V0.16B
	0x039CE9A4 MOV V9.16B, V1.16B
	0x039CE9A8 MOV V10.16B, V2.16B
	0x039CE9AC LDR X0, [X8]
	0x039CE9B0 LDR W8, [X0 + 0xE0]
	0x039CE9B4 CBNZ W8, 0x39CE9BC
	0x039CE9B8 BL 0x1C16DFC
	0x039CE9BC LDR V7, [X31 + 0x12C]
	0x039CE9C0 FMUL S0, S12, S8
	0x039CE9C4 FMUL S1, S12, S9
	0x039CE9C8 LDP V3, V4, [X22 + 0xC0]
	0x039CE9CC FADD S0, S7, S0
	0x039CE9D0 LDR V7, [X31 + 0x128]
	0x039CE9D4 LDP V5, V6, [X22 + 0xE0]
	0x039CE9D8 FMUL S2, S12, S10
	0x039CE9DC STP V3, V4, [X22]
	0x039CE9E0 FADD S1, S7, S1
	0x039CE9E4 LDR V7, [X31 + 0x124]
	0x039CE9E8 STP V5, V6, [X22 + 0x20]
	0x039CE9EC FADD S2, S7, S2
	0x039CE9F0 LDR W8, [X31 + 0x120]
	0x039CE9F4 ADD X3, X31, 0x1D0
	0x039CE9F8 MOV X0, X23
	0x039CE9FC MOV W1, W29
	0x039CEA00 AND W2, W8, 0x1
	0x039CEA04 BL 0x39CC7D8
	0x039CEA08 ADRP X8, 0xA0B000
	0x039CEA0C LDRB W8, [X8 + 0x818]
	0x039CEA10 MOV V8.16B, V0.16B
	0x039CEA14 MOV V9.16B, V1.16B
	0x039CEA18 CBNZ W8, 0x39CEA34
	0x039CEA1C ADRP X0, 0x725000
	0x039CEA20 LDR X0, [X0 + 0x5A8]
	0x039CEA24 BL 0x1C16CF4
	0x039CEA28 MOVZ W8, 0x1
	0x039CEA2C ADRP X9, 0xA0B000
	0x039CEA30 STRB W8, [X9 + 0x818]
	0x039CEA34 ADRP X8, 0x725000
	0x039CEA38 LDR X8, [X8 + 0x5A8]
	0x039CEA3C LDR X0, [X8]
	0x039CEA40 LDR W8, [X0 + 0xE0]
	0x039CEA44 CBNZ W8, 0x39CEA4C
	0x039CEA48 BL 0x1C16DFC
	0x039CEA4C LDR V2, [X28 + 0x64]
	0x039CEA50 FSUB S0, S8, S13
	0x039CEA54 FSUB S1, S9, S14
	0x039CEA58 FMUL S0, S0, S0
	0x039CEA5C FMUL S1, S1, S1
	0x039CEA60 FADD S0, S0, S1
	0x039CEA64 FSQRT S0, S0
	0x039CEA68 UCVTF S1, S2
	0x039CEA6C LDR W1, [X31 + 0x98]
	0x039CEA70 LDR V3, [X31 + 0x94]
	0x039CEA74 MOV X0, X19
	0x039CEA78 MOV V2.16B, V11.16B
	0x039CEA7C MOV X2, X31
	0x039CEA80 BL 0x3C4CED8
	0x039CEA84 LDRB W8, [X28 + 0x58]
	0x039CEA88 CBZ W8, 0x39CEAD4
	0x039CEA8C ADRP X8, 0x784000
	0x039CEA90 LDR X8, [X8 + 0xD98]
	0x039CEA94 LDR X0, [X8]
	0x039CEA98 LDR W8, [X0 + 0xE0]
	0x039CEA9C CBNZ W8, 0x39CEAB0
	0x039CEAA0 BL 0x1C16DFC
	0x039CEAA4 ADRP X8, 0x784000
	0x039CEAA8 LDR X8, [X8 + 0xD98]
	0x039CEAAC LDR X0, [X8]
	0x039CEAB0 LDR X8, [X0 + 0xB8]
	0x039CEAB4 LDR X8, [X8 + 0x30]
	0x039CEAB8 CBZ X8, 0x39CEAF0
	0x039CEABC LDR X9, [X8 + 0x48]
	0x039CEAC0 LDUR V0, [X8 + 0x38]
	0x039CEAC4 LDUR V1, [X8 + 0x28]
	0x039CEAC8 STR X9, [X31 + 0x2B0]
	0x039CEACC STP V1, V0, [X22 + 0xC0]
	0x039CEAD0 B 0x39CEAFC
	0x039CEAD4 ADRP X8, 0x784000
	0x039CEAD8 LDR X8, [X8 + 0xE50]
	0x039CEADC LDR X1, [X8]
	0x039CEAE0 MOV X0, X19
	0x039CEAE4 MOV X2, X31
	0x039CEAE8 BL 0x3C4D124
	0x039CEAEC B 0x39CEB38
	0x039CEAF0 MOVI V0.2D, 0x0
	0x039CEAF4 STR X31, [X31 + 0x2B0]
	0x039CEAF8 STP V0, V0, [X22 + 0xC0]
	0x039CEAFC LDP V0, V1, [X22 + 0xC0]
	0x039CEB00 LDR X8, [X31 + 0x2B0]
	0x039CEB04 STP V0, V1, [X31 + 0x1A0]
	0x039CEB08 STR X8, [X31 + 0x1C0]
	0x039CEB0C LDR W1, [X31 + 0x74]
	0x039CEB10 ADD X2, X31, 0x1A0
	0x039CEB14 MOV X0, X19
	0x039CEB18 MOV X3, X31
	0x039CEB1C BL 0x3C4FCFC
	0x039CEB20 ADRP X8, 0x784000
	0x039CEB24 LDR X8, [X8 + 0xE50]
	0x039CEB28 LDR X1, [X8]
	0x039CEB2C MOV X0, X19
	0x039CEB30 MOV X2, X31
	0x039CEB34 BL 0x3C4D0E0
	0x039CEB38 ADRP X8, 0x784000
	0x039CEB3C LDR X8, [X8 + 0xD98]
	0x039CEB40 LDR X0, [X8]
	0x039CEB44 LDR W8, [X0 + 0xE0]
	0x039CEB48 CBNZ W8, 0x39CEB50
	0x039CEB4C BL 0x1C16DFC
	0x039CEB50 BL 0x39CAFF4
	0x039CEB54 ADRP X8, 0x784000
	0x039CEB58 LDR X8, [X8 + 0xE40]
	0x039CEB5C LDR X1, [X8]
	0x039CEB60 TBZ X0, 0x0, 0x39CEB74
	0x039CEB64 MOV X0, X19
	0x039CEB68 MOV X2, X31
	0x039CEB6C BL 0x3C4D124
	0x039CEB70 B 0x39CEB80
	0x039CEB74 MOV X0, X19
	0x039CEB78 MOV X2, X31
	0x039CEB7C BL 0x3C4D0E0
	0x039CEB80 LDR V0, [X21 + 0x10]
	0x039CEB84 SCVTF S0, S0
	0x039CEB88 LDR W1, [X31 + 0x90]
	0x039CEB8C FMOV S1, W31
	0x039CEB90 FMOV S2, W31
	0x039CEB94 FMOV S3, W31
	0x039CEB98 MOV X0, X19
	0x039CEB9C MOV X2, X31
	0x039CEBA0 BL 0x3C4CED8
	0x039CEBA4 LDR X0, [X28 + 0x78]
	0x039CEBA8 CBZ X0, 0x39CFF54
	0x039CEBAC MOV X1, X31
	0x039CEBB0 BL 0x39ECEF8
	0x039CEBB4 ADD X8, X31, 0x290
	0x039CEBB8 MOV X1, X31
	0x039CEBBC BL 0x3C4B274
	0x039CEBC0 LDP V0, V1, [X22 + 0xC0]
	0x039CEBC4 LDR X8, [X31 + 0x2B0]
	0x039CEBC8 STP V0, V1, [X31 + 0x170]
	0x039CEBCC STR X8, [X31 + 0x190]
	0x039CEBD0 LDR W1, [X31 + 0x8C]
	0x039CEBD4 ADD X2, X31, 0x170
	0x039CEBD8 MOV X0, X19
	0x039CEBDC MOV X3, X31
	0x039CEBE0 BL 0x3C4FCFC
	0x039CEBE4 CBZ X27, 0x39CFF50
	0x039CEBE8 LDR X29, [X27 + 0x18]
	0x039CEBEC CBZ X29, 0x39CFF4C
	0x039CEBF0 LDR X8, [X29 + 0x18]
	0x039CEBF4 CMP W8, 0x1
	0x039CEBF8 B.LT 0x39CE244
	0x039CEBFC LDP S2, S0, [X31 + 0xFC]
	0x039CEC00 LDR V1, [X31 + 0xE8]
	0x039CEC04 ADRP X9, 0xFFFFFFFFFD11C000
	0x039CEC08 MOV X21, X31
	0x039CEC0C AND X8, X8, 0x0
	0x039CEC10 FMUL S0, S0, S1
	0x039CEC14 LDR V1, [X31 + 0x130]
	0x039CEC18 STR S0, [X31 + 0xC4]
	0x039CEC1C LDR V0, [X9 + 0xBC]
	0x039CEC20 FSUB S3, S1, S1
	0x039CEC24 LDR V1, [X31 + 0x134]
	0x039CEC28 FMUL S0, S2, S0
	0x039CEC2C STR S0, [X31 + 0x6C]
	0x039CEC30 FSUB S1, S1, S1
	0x039CEC34 FNEG S0, S1
	0x039CEC38 STP S1, S3, [X31 + 0x58]
	0x039CEC3C STR S0, [X31 + 0x54]
	0x039CEC40 CMP X21, W8, UXTW
	0x039CEC44 B.CS 0x39CFEC0
	0x039CEC48 ADD X8, X29, X21, 0x3, LSL
	0x039CEC4C LDR X8, [X8 + 0x20]
	0x039CEC50 STR X8, [X31 + 0x310]
	0x039CEC54 CBZ X8, 0x39CF42C
	0x039CEC58 LDRB W9, [X8 + 0x10]
	0x039CEC5C CBZ W9, 0x39CF42C
	0x039CEC60 ADRP X9, 0x725000
	0x039CEC64 LDR X9, [X9 + 0x598]
	0x039CEC68 LDR X25, [X8 + 0x30]
	0x039CEC6C LDR X0, [X9]
	0x039CEC70 LDR W9, [X0 + 0xE0]
	0x039CEC74 CBNZ W9, 0x39CEC7C
	0x039CEC78 BL 0x1C16DFC
	0x039CEC7C MOV X0, X25
	0x039CEC80 MOV X1, X31
	0x039CEC84 MOV X2, X31
	0x039CEC88 BL 0x3C3883C
	0x039CEC8C LDR X8, [X31 + 0x310]
	0x039CEC90 TBZ X0, 0x0, 0x39CECA4
	0x039CEC94 CBZ X8, 0x39CFEE0
	0x039CEC98 LDR W9, [X8 + 0x6C]
	0x039CEC9C CBNZ W9, 0x39CECA8
	0x039CECA0 B 0x39CF42C
	0x039CECA4 CBZ X8, 0x39CFEDC
	0x039CECA8 LDR V0, [X8 + 0x2C]
	0x039CECAC FCMP S0, 0x0
	0x039CECB0 B.LS 0x39CF42C
	0x039CECB4 LDR W8, [X8 + 0x48]
	0x039CECB8 CMP W8, 0x1
	0x039CECBC B.LT 0x39CF42C
	0x039CECC0 ADRP X8, 0x725000
	0x039CECC4 LDR X8, [X8 + 0x598]
	0x039CECC8 LDR X0, [X8]
	0x039CECCC LDR W8, [X0 + 0xE0]
	0x039CECD0 CBNZ W8, 0x39CECD8
	0x039CECD4 BL 0x1C16DFC
	0x039CECD8 MOV X0, X26
	0x039CECDC MOV X1, X31
	0x039CECE0 MOV X2, X31
	0x039CECE4 BL 0x3C354F8
	0x039CECE8 LDR V0, [X31 + 0xC4]
	0x039CECEC MOV V8.16B, V0.16B
	0x039CECF0 MOV V12.16B, V0.16B
	0x039CECF4 MOV V9.16B, V0.16B
	0x039CECF8 MOV V13.16B, V0.16B
	0x039CECFC TBZ X0, 0x0, 0x39CED9C
	0x039CED00 LDR X8, [X31 + 0x310]
	0x039CED04 CBZ X8, 0x39CFF80
	0x039CED08 LDR V0, [X31 + 0xC4]
	0x039CED0C LDRB W8, [X8 + 0x70]
	0x039CED10 MOV V8.16B, V0.16B
	0x039CED14 MOV V12.16B, V0.16B
	0x039CED18 MOV V9.16B, V0.16B
	0x039CED1C MOV V13.16B, V0.16B
	0x039CED20 CBZ W8, 0x39CED9C
	0x039CED24 CBZ X26, 0x39CFFB0
	0x039CED28 MOV X0, X26
	0x039CED2C MOV X1, X31
	0x039CED30 BL 0x3C168B0
	0x039CED34 TBZ X0, 0x0, 0x39CED7C
	0x039CED38 MOV X0, X26

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 544
	022 Move X22, 0xA15000
	023 Move X20, 0x786000
	024 Move W8, [X22+3335]
	025 Move X20, [X20+3480]
	026 Move W26, W7
	027 Move W23, W6
	028 Move X19, X5
	029 Move X21, X4
	030 Move V8, V6
	031 Move V9, V5
	032 Move V10, V4
	033 Move W25, W3
	034 Move V11, V3
	035 Move V12, V2
	036 Move W28, W2
	037 Move V13, V1
	038 Move V14, V0
	039 Move X24, X1
	040 Move X29, X0
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {80}
	045 Move X0, 0x786000
	046 Move X0, [X0+3624]
	047 Call 0x1C17CF4
	048 Move X0, 0x72D000
	049 Move X0, [X0+3568]
	050 Call 0x1C17CF4
	051 Move X0, 0x74F000
	052 Move X0, [X0+2296]
	053 Call 0x1C17CF4
	054 Move X0, 0x786000
	055 Move X0, [X0+3576]
	056 Call 0x1C17CF4
	057 Move X0, 0x786000
	058 Move X0, [X0+3584]
	059 Call 0x1C17CF4
	060 Move X0, 0x786000
	061 Move X0, [X0+3592]
	062 Call 0x1C17CF4
	063 Move X0, 0x786000
	064 Move X0, [X0+3480]
	065 Call 0x1C17CF4
	066 Move X0, 0x786000
	067 Move X0, [X0+3600]
	068 Call 0x1C17CF4
	069 Move X0, 0x786000
	070 Move X0, [X0+3488]
	071 Call 0x1C17CF4
	072 Move X0, 0x727000
	073 Move X0, [X0+1432]
	074 Call 0x1C17CF4
	075 Move X0, 0x786000
	076 Move X0, [X0+3632]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X22+3335], W8
	080 Move X0, [X20]
	081 Move [X31+520], X31
	082 Move [X31+512], X31
	083 Move [X31+528], X31
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Call LensFlareCommonSRP.IsOcclusionRTCompatible
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {934}
	093 Move X0, [X20]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Call LensFlareCommonSRP.get_Instance
	099 Compare X0, 0
	100 JumpIfEqual {957}
	101 Call LensFlareCommonSRP.IsEmpty, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {934}
	106 Move X0, [X20]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X20]
	112 Move X8, 0x74E000
	113 Move X8, [X8+2296]
	114 Move X9, [X0+184]
	115 Move X8, [X8]
	116 Move X27, [X9+48]
	117 Move W10, [X8+224]
	118 Compare W10, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X8
	121 Call 0x1C17DFC
	122 Move TEMP, 0
	123 Not TEMP
	124 Move W4, TEMP
	125 Move TEMP, 0
	126 Not TEMP
	127 Move W5, TEMP
	128 Move X0, X19
	129 Move X1, X27
	130 Move W2, W31
	131 Move W3, W31
	132 Move X6, X31
	133 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	134 Move TEMP, X23
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {149}
	138 Compare X19, 0
	139 JumpIfEqual {957}
	140 Move S0, W31
	141 Move S1, W31
	142 Move S2, W31
	143 Move S3, 1
	144 Move W2, 1
	145 Move X0, X19
	146 Move W1, W31
	147 Move X3, X31
	148 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, X3
	149 Move X0, [X20]
	150 Move [X31+64], X29
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {161}
	154 Call 0x1C17DFC
	155 Move X0, [X20]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X20]
	161 Move X8, [X0+184]
	162 Move [X31+144], W23
	163 Move [X31+148], W28
	164 Move [X31+84], S12
	165 Move [X31+92], S11
	166 Move [X31+156], W25
	167 Move X0, [X8+16]
	168 Move [X31+132], S10
	169 Move [X31+140], S9
	170 Move [X31+140], S8
	171 Compare X0, 0
	172 JumpIfEqual {957}
	173 Move W8, [X31+792]
	174 Move W9, [X31+784]
	175 NotImplemented "Instruction FDIV not yet implemented."
	176 Move [X31+72], W8
	177 Move W8, [X31+776]
	178 Move [X31+128], W8
	179 Move W8, [X31+768]
	180 Move [X31+52], W9
	181 Move [X31+56], W8
	182 Move W9, [X31+760]
	183 Move W8, [X31+728]
	184 Move [X31+116], W8
	185 Move [X31+120], W9
	186 Move X9, [X31+712]
	187 Move X8, [X31+704]
	188 Move [X31+96], X8
	189 Move [X31+104], X9
	190 Move X8, 0x785000
	191 Move X8, [X8+3600]
	192 Move [X31+60], S0
	193 Move X1, [X8]
	194 Add X8, X31, 448
	195 Call List`1<Object>.GetEnumerator, X0
	196 NotImplemented "Instruction FDIV not yet implemented."
	197 Move [X31+76], S14
	198 Move [X31+84], S13
	199 Move [X31+124], S1
	200 Move X25, 0x785000
	201 Move X23, 0x726000
	202 Move V0, [X31+28]
	203 Move X8, [X31+464]
	204 Move X25, [X25+3584]
	205 Move X23, [X23+1432]
	206 And W9, W26, 1
	207 Move [X31+92], W9
	208 Move [X31+32], V0
	209 Move [X31+528], X8
	210 Move X1, [X25]
	211 Add X0, X31, 512
	212 Call Enumerator<Object>.MoveNext, X0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {846}
	217 Move X26, [X31+528]
	218 Compare X26, 0
	219 JumpIfEqual {210}
	220 Move X0, [X23]
	221 Move X27, [X26+24]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X27
	227 Move X1, X31
	228 Move X2, X31
	229 Call Object.op_Equality, X0, X1
	230 Move TEMP, X0
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {210}
	234 Move X27, [X26+24]
	235 Compare X27, 0
	236 JumpIfEqual {956}
	237 Move X0, [X20]
	238 Move X28, [X27+32]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X24
	244 Move X1, X27
	245 Move X2, X28
	246 Call LensFlareCommonSRP.IsLensFlareSRPHidden, X0, X1, X2
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {210}
	251 Move W8, [X27+88]
	252 Compare W8, 0
	253 JumpIfEqual {210}
	254 Move W8, [X27+100]
	255 Compare W8, 0
	256 JumpIfEqual {210}
	257 Move X8, 0x72C000
	258 Move X8, [X8+3568]
	259 Move X1, [X8]
	260 Move X0, X27
	261 Call 0x21A4894, X0
	262 Move X29, X0
	263 Move X0, [X23]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X29
	269 Move X1, X31
	270 Move X2, X31
	271 Call Object.op_Inequality, X0, X1
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfNotEqual {304}
	276 Compare X29, 0
	277 JumpIfEqual {961}
	278 Move X0, X29
	279 Move X1, X31
	280 Call Light.get_type, X0
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X29
	283 Move X1, X31
	284 Call Component.get_transform, X0
	285 Compare X0, 0
	286 JumpIfEqual {965}
	287 Move X1, X31
	288 Call Transform.get_forward, X0
	289 Compare X24, 0
	290 JumpIfEqual {967}
	291 Move V8, V0
	292 Move V9, V1
	293 Move V10, V2
	294 Move X0, X24
	295 Move X1, X31
	296 Call Camera.get_farClipPlane, X0
	297 NotImplemented "Instruction FNEG not yet implemented."
	298 NotImplemented "Instruction FNEG not yet implemented."
	299 NotImplemented "Instruction FNEG not yet implemented."
	300 Multiply S10, S0, S1
	301 Multiply S8, S0, S2
	302 Multiply S9, S0, S3
	303 Move W22, 1
	304 Move X0, X27
	305 Move X1, X31
	306 Call Component.get_transform, X0
	307 Compare X0, 0
	308 JumpIfEqual {958}
	309 Move X1, X31
	310 Call Transform.get_position, X0
	311 Move V10, V0
	312 Move V8, V1
	313 Move V9, V2
	314 Move W22, W31
	315 Move V0, [X21+32]
	316 Move V1, [X21+48]
	317 Move V2, [X21]
	318 Move V3, [X21+16]
	319 Move X0, [X20]
	320 Move [X31+480], V0
	321 Move [X31+488], V1
	322 Move [X31+448], V2
	323 Move [X31+456], V3
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17DFC
	328 Move V0, [X31+448]
	329 Move V1, [X31+464]
	330 Move V2, [X31+480]
	331 Move V3, [X31+496]
	332 Xor W29, W22, 1
	333 Move [X31+384], V0
	334 Move [X31+392], V1
	335 Move [X31+416], V2
	336 Move [X31+424], V3
	337 Move W8, [X31+156]
	338 Add X3, X31, 384
	339 Move X0, X24
	340 Move W1, W29
	341 And W2, W8, 1
	342 Move V0, V10
	343 Move V1, V8
	344 Move V2, V9
	345 Move [X31+152], S10
	346 Call LensFlareCommonSRP.WorldToViewport, X0, X1, X2, X3, X4
	347 Move W8, [X31+148]
	348 Move V11, V0
	349 Move V15, V1
	350 Move V10, V2
	351 Move TEMP, X8
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfNotEqual {392}
	355 Move X0, X31
	356 Call Camera.get_main
	357 Move X28, X0
	358 Move X0, [X23]
	359 Move W8, [X0+224]
	360 Compare W8, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X0, X24
	364 Move X1, X28
	365 Move X2, X31
	366 Call Object.op_Equality, X0, X1
	367 Move TEMP, X0
	368 And TEMP, TEMP, 1
	369 Compare TEMP, 1
	370 JumpIfNotEqual {392}
	371 Compare X24, 0
	372 JumpIfEqual {966}
	373 Move X0, X24
	374 Move X1, X31
	375 Call Camera.get_fieldOfView, X0
	376 Move X0, [X20]
	377 Move V10, V0
	378 Move W8, [X0+224]
	379 Compare W8, 0
	380 JumpIfNotEqual {382}
	381 Call 0x1C17DFC
	382 Move S2, [X31+76]
	383 Move S3, [X31+80]
	384 Move S6, [X31+84]
	385 Move S5, [X31+88]
	386 Move V0, V11
	387 Move V1, V15
	388 Move V4, V10
	389 Call LensFlareCommonSRP.DoPaniniProjection, X0, V0, V1, V2, V3, V4
	390 Move V11, V0
	391 Move V15, V1
	392 NotImplemented "Instruction FCMP not yet implemented."
	393 Move W8, [X27+112]
	394 Compare W8, 0
	395 JumpIfNotEqual {402}
	396 Move S0, 1
	397 NotImplemented "Instruction FCMP not yet implemented."
	398 NotImplemented "Instruction FCMP not yet implemented."
	399 Move S0, 1
	400 NotImplemented "Instruction FCMP not yet implemented."
	401 NotImplemented "Instruction FCMP not yet implemented."
	402 Compare X24, 0
	403 JumpIfEqual {960}
	404 Move X0, X24
	405 Move X1, X31
	406 Call Component.get_transform, X0
	407 Compare X0, 0
	408 JumpIfEqual {959}
	409 Move X1, X31
	410 Call Transform.get_forward, X0
	411 Move V3, [X31+132]
	412 Move V4, [X31+152]
	413 Subtract S13, S4, S3
	414 Move V3, [X31+136]
	415 Multiply S0, S13, S0
	416 Subtract S14, S8, S3
	417 Move V3, [X31+140]
	418 Multiply S1, S14, S1
	419 Add S0, S0, S1
	420 Subtract S12, S9, S3
	421 Multiply S1, S12, S2
	422 Add S0, S1, S0
	423 NotImplemented "Instruction FCMP not yet implemented."
	424 Move X8, 0xA0B000
	425 Move W8, [X8+1924]
	426 Compare W8, 0
	427 JumpIfNotEqual {434}
	428 Move X0, 0x726000
	429 Move X0, [X0+1448]
	430 Call 0x1C17CF4
	431 Move X8, 0xA0B000
	432 Move W9, 1
	433 Move [X8+1924], W9
	434 Move X8, 0x726000
	435 Move X8, [X8+1448]
	436 Move X0, [X8]
	437 Move W8, [X0+224]
	438 Compare W8, 0
	439 JumpIfNotEqual {441}
	440 Call 0x1C17DFC
	441 Move TEMP, X22
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfNotEqual {457}
	445 Move X0, X27
	446 Move X1, X31
	447 Call Component.get_transform, X0
	448 Compare X0, 0
	449 JumpIfEqual {972}
	450 Move X1, X31
	451 Call Transform.get_forward, X0
	452 Move V10, V0
	453 Move S0, 1
	454 Move V13, V1
	455 Move V14, V2
	456 Move [X31+44], S0
	457 Move X0, [X27+56]
	458 Compare X0, 0
	459 JumpIfEqual {971}
	460 Move S10, [X27+44]
	461 Move S0, [X27+48]
	462 Move [X31+48], S0
	463 Move X1, X31
	464 Call AnimationCurve.get_length, X0
	465 Multiply S0, S13, S13
	466 Multiply S1, S14, S14
	467 Multiply S2, S12, S12
	468 Add S0, S0, S1
	469 Add S0, S2, S0
	470 NotImplemented "Instruction CMP not yet implemented."
	471 NotImplemented "Instruction FSQRT not yet implemented."
	472 Move X0, [X27+56]
	473 Compare X0, 0
	474 JumpIfEqual {974}
	475 NotImplemented "Instruction FDIV not yet implemented."
	476 Move X1, X31
	477 Call AnimationCurve.Evaluate, X0, V0
	478 Move [X31+44], S0
	479 Move S0, 1
	480 Move [X31+44], S0
	481 Move X0, [X27+64]
	482 Compare X0, 0
	483 JumpIfEqual {973}
	484 Move X1, X31
	485 Call AnimationCurve.get_length, X0
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move X0, [X27+64]
	488 Compare X0, 0
	489 JumpIfEqual {975}
	490 Move V0, [X31+48]
	491 NotImplemented "Instruction FDIV not yet implemented."
	492 Move X1, X31
	493 Call AnimationCurve.Evaluate, X0, V0
	494 Move X0, X24
	495 Move X1, X31
	496 Call Component.get_transform, X0
	497 Compare X0, 0
	498 JumpIfEqual {969}
	499 Move X1, X31
	500 Call Transform.get_position, X0
	501 Move [X31+48], S1
	502 Move [X31+40], S2
	503 Move V12, V0
	504 Move X0, X27
	505 Move X1, X31
	506 Call Component.get_transform, X0
	507 Compare X0, 0
	508 JumpIfEqual {970}
	509 Move X1, X31
	510 Call Transform.get_position, X0
	511 Move X8, 0xA0B000
	512 Move W8, [X8+1925]
	513 Move V10, V0
	514 Move V13, V1
	515 Move V14, V2
	516 Compare W8, 0
	517 JumpIfNotEqual {524}
	518 Move X0, 0x726000
	519 Move X0, [X0+1448]
	520 Call 0x1C17CF4
	521 Move W8, 1
	522 Move X9, 0xA0B000
	523 Move [X9+1925], W8
	524 Move X8, 0x726000
	525 Move X8, [X8+1448]
	526 Move X0, [X8]
	527 Move W8, [X0+224]
	528 Compare W8, 0
	529 JumpIfNotEqual {531}
	530 Call 0x1C17DFC
	531 Move V1, [X31+48]
	532 Move V2, [X31+40]
	533 Subtract S0, S12, S10
	534 Move X8, -49164288
	535 Subtract S1, S1, S13
	536 Subtract S2, S2, S14
	537 Move V4, [X8+380]
	538 Multiply S3, S0, S0
	539 Multiply S5, S1, S1
	540 Add S3, S3, S5
	541 Multiply S5, S2, S2
	542 Add S3, S5, S3
	543 NotImplemented "Instruction FSQRT not yet implemented."
	544 NotImplemented "Instruction FCMP not yet implemented."
	545 NotImplemented "Instruction FDIV not yet implemented."
	546 NotImplemented "Instruction FDIV not yet implemented."
	547 NotImplemented "Instruction FDIV not yet implemented."
	548 Move X8, 0xA0B000
	549 Move W8, [X8+1923]
	550 Compare W8, 0
	551 JumpIfNotEqual {558}
	552 Move X0, 0x726000
	553 Move X0, [X0+1440]
	554 Call 0x1C17CF4
	555 Move W8, 1
	556 Move X9, 0xA0B000
	557 Move [X9+1923], W8
	558 Move X8, 0x726000
	559 Move X8, [X8+1440]
	560 Move X8, [X8]
	561 Move X8, [X8+184]
	562 Move S10, [X8]
	563 Move S13, [X8+4]
	564 Move V14, [X8+8]
	565 Move V0, [X21+32]
	566 Move V1, [X21+48]
	567 Move V2, [X21]
	568 Move V3, [X21+16]
	569 Move X0, [X20]
	570 Move [X31+480], V0
	571 Move [X31+488], V1
	572 Move [X31+448], V2
	573 Move [X31+456], V3
	574 Move W8, [X0+224]
	575 Move V12, [X27+104]
	576 Compare W8, 0
	577 JumpIfNotEqual {579}
	578 Call 0x1C17DFC
	579 Move V3, [X31+448]
	580 Move V4, [X31+464]
	581 Move V5, [X31+480]
	582 Move V6, [X31+496]
	583 Move V7, [X31+152]
	584 Multiply S0, S10, S12
	585 Multiply S1, S13, S12
	586 Multiply S2, S14, S12
	587 Add S0, S7, S0
	588 Add S1, S8, S1
	589 Add S2, S9, S2
	590 Move [X31+320], V3
	591 Move [X31+328], V4
	592 Move [X31+352], V5
	593 Move [X31+360], V6
	594 Move W8, [X31+156]
	595 Add X3, X31, 320
	596 Move X0, X24
	597 Move W1, W29
	598 And W2, W8, 1
	599 Call LensFlareCommonSRP.WorldToViewport, X0, X1, X2, X3, X4
	600 Move [X31+48], S2
	601 Move TEMP, X22
	602 And TEMP, TEMP, 1
	603 Compare TEMP, 1
	604 JumpIfNotEqual {609}
	605 Move X0, X27
	606 Move X1, X24
	607 Call LensFlareComponentSRP.celestialProjectedOcclusionRadius, X0, X1
	608 Move V13, V0
	609 Move V13, [X27+92]
	610 Move V1, [X21+32]
	611 Move V0, [X21+48]
	612 Move V3, [X21]
	613 Move V2, [X21+16]
	614 Move [X31+480], V1
	615 Move [X31+488], V0
	616 Move [X31+448], V3
	617 Move [X31+456], V2
	618 Move X0, X24
	619 Move X1, X31
	620 Call Component.get_transform, X0
	621 Compare X0, 0
	622 JumpIfEqual {963}
	623 Move X1, X31
	624 Call Transform.get_up, X0
	625 Move X0, [X20]
	626 Move V14, V0
	627 Move V10, V1
	628 Move V12, V2
	629 Move W8, [X0+224]
	630 Compare W8, 0
	631 JumpIfNotEqual {633}
	632 Call 0x1C17DFC
	633 Move V7, [X31+152]
	634 Move V3, [X31+448]
	635 Move V4, [X31+464]
	636 Move V5, [X31+480]
	637 Move V6, [X31+496]
	638 Multiply S0, S13, S14
	639 Multiply S1, S13, S10
	640 Multiply S2, S13, S12
	641 Add S0, S7, S0
	642 Add S1, S8, S1
	643 Add S2, S9, S2
	644 Move [X31+256], V3
	645 Move [X31+264], V4
	646 Move [X31+288], V5
	647 Move [X31+296], V6
	648 Move W8, [X31+156]
	649 Add X3, X31, 256
	650 Move X0, X24
	651 Move W1, W29
	652 And W2, W8, 1
	653 Call LensFlareCommonSRP.WorldToViewport, X0, X1, X2, X3, X4
	654 Move X8, 0xA0C000
	655 Move W8, [X8+2072]
	656 Move V8, V0
	657 Move V9, V1
	658 Compare W8, 0
	659 JumpIfNotEqual {666}
	660 Move X0, 0x726000
	661 Move X0, [X0+1448]
	662 Call 0x1C17CF4
	663 Move W8, 1
	664 Move X9, 0xA0C000
	665 Move [X9+2072], W8
	666 Move X8, 0x726000
	667 Move X8, [X8+1448]
	668 Move X0, [X8]
	669 Move W8, [X0+224]
	670 Compare W8, 0
	671 JumpIfNotEqual {673}
	672 Call 0x1C17DFC
	673 Compare X19, 0
	674 JumpIfEqual {964}
	675 Move V2, [X27+100]
	676 Subtract S0, S8, S11
	677 Subtract S1, S9, S15
	678 Multiply S0, S0, S0
	679 Multiply S1, S1, S1
	680 Add S0, S0, S1
	681 NotImplemented "Instruction UCVTF not yet implemented."
	682 NotImplemented "Instruction FSQRT not yet implemented."
	683 Move W1, [X31+128]
	684 Move V2, [X31+48]
	685 Move V3, [X31+124]
	686 Move X0, X19
	687 Move X2, X31
	688 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	689 Move W1, [X27+96]
	690 Move W2, [X27+113]
	691 Move W3, [X31+92]
	692 Move W4, [X31+116]
	693 Move W5, [X31+120]
	694 Move X6, [X31+96]
	695 Move X7, [X31+104]
	696 Move X0, X19
	697 Call LensFlareCommonSRP.SetOcclusionPermutation, X0, X1, X2, X3, X4, X5, X6, X7
	698 Move X8, 0x785000
	699 Move X8, [X8+3632]
	700 Move X1, [X8]
	701 Move X0, X19
	702 Move X2, X31
	703 Call CommandBuffer.EnableShaderKeyword, X0, X1
	704 Move X0, X31
	705 Call SystemInfo.get_graphicsUVStartsAtTop
	706 Add S0, S11, S11
	707 Add S1, S15, S15
	708 Move S2, -1
	709 And W31, W0, 1
	710 Move X0, [X27+80]
	711 Add S8, S0, S2
	712 Add S0, S1, S2
	713 NotImplemented "Instruction FNEG not yet implemented."
	714 NotImplemented "Instruction FABS not yet implemented."
	715 NotImplemented "Instruction FABS not yet implemented."
	716 NotImplemented "Instruction FCSEL not yet implemented."
	717 NotImplemented "Instruction FCMP not yet implemented."
	718 Move S11, -1
	719 NotImplemented "Instruction FCSEL not yet implemented."
	720 Compare X0, 0
	721 JumpIfEqual {962}
	722 Move X1, X31
	723 Call AnimationCurve.get_length, X0
	724 NotImplemented "Instruction CMP not yet implemented."
	725 Move X0, [X27+80]
	726 Compare X0, 0
	727 JumpIfEqual {968}
	728 Move V0, V10
	729 Move X1, X31
	730 Call AnimationCurve.Evaluate, X0, V0
	731 Move S0, 1
	732 Move V1, [X27+40]
	733 Multiply S0, S0, S1
	734 Move V1, [X31+44]
	735 Multiply S0, S1, S0
	736 NotImplemented "Instruction FCMP not yet implemented."
	737 Move W8, [X27+112]
	738 Move S0, 1
	739 NotImplemented "Instruction CMP not yet implemented."
	740 NotImplemented "Instruction FCSEL not yet implemented."
	741 Move X8, -49164288
	742 Move V1, [X8+436]
	743 Move X8, -49164288
	744 Move V2, [X8+792]
	745 Move X8, -49164288
	746 Move V3, [X8+40]
	747 Move W1, [X31+72]
	748 Move X0, X19
	749 Move X2, X31
	750 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	751 Move X0, [X20]
	752 Move W8, [X0+224]
	753 Compare W8, 0
	754 JumpIfNotEqual {756}
	755 Call 0x1C17DFC
	756 Move X8, 0xA14000
	757 Move X22, 0x72E000
	758 Move W8, [X8+2632]
	759 Move X22, [X22+3848]
	760 Compare W8, 0
	761 JumpIfNotEqual {767}
	762 Move X0, X22
	763 Call 0x1C17CF4
	764 Move W8, 1
	765 Move X9, 0xA14000
	766 Move [X9+2632], W8
	767 Move X8, [X22]
	768 Move X9, 0xA0C000
	769 Move W9, [X9+1935]
	770 Move X8, [X8+184]
	771 Move S11, [X8+8]
	772 Move S10, [X8+12]
	773 Compare W9, 0
	774 JumpIfNotEqual {782}
	775 Move X0, X22
	776 Call 0x1C17CF4
	777 Move X8, [X22]
	778 Move W9, 1
	779 Move X10, 0xA0C000
	780 Move [X10+1935], W9
	781 Move X8, [X8+184]
	782 Move S2, [X8]
	783 Move S3, [X8+4]
	784 Subtract S1, S9, S9
	785 Move S6, W31
	786 Subtract S0, S8, S8
	787 NotImplemented "Instruction FNEG not yet implemented."
	788 Multiply S1, S1, S6
	789 Subtract S4, S1, S0
	790 Move S12, W31
	791 Multiply S0, S0, S6
	792 Subtract S5, S5, S0
	793 Move V6, [X31+60]
	794 Move [X31+24], S2
	795 Move [X31+32], S3
	796 Move S7, 1
	797 Move V0, V8
	798 Move V1, V9
	799 Move V2, V11
	800 Move V3, V10
	801 Move W0, W31
	802 Move [X31+16], W31
	803 Move [X31+8], W31
	804 Move [X31], W31
	805 Call LensFlareCommonSRP.GetFlareData0, X0, X1, X2, X3, V0, V1, V2, X4, X5
	806 Move W1, [X31+56]
	807 Move X0, X19
	808 Move X2, X31
	809 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	810 Move W1, [X31+52]
	811 Move S2, W31
	812 Move S3, W31
	813 Move X0, X19
	814 Move V0, V8
	815 Move V1, V9
	816 Move X2, X31
	817 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	818 Move X8, [X20]
	819 Move V0, [X26+16]
	820 Move X8, [X8+184]
	821 NotImplemented "Instruction SCVTF not yet implemented."
	822 Move W9, [X8+56]
	823 Move W8, [X8+40]
	824 Add W8, W8, W9
	825 NotImplemented "Instruction SCVTF not yet implemented."
	826 Move W8, [X31+144]
	827 And W31, W8, 1
	828 NotImplemented "Instruction FCSEL not yet implemented."
	829 Move S2, 1
	830 Move S3, 1
	831 Move X0, X19
	832 Move X1, X31
	833 Call CommandBuffer.SetViewport, X0, X1
	834 Move X8, 0x785000
	835 Move X8, [X8+3624]
	836 Move X0, [X8]
	837 Move W8, [X0+224]
	838 Compare W8, 0
	839 JumpIfNotEqual {841}
	840 Call 0x1C17DFC
	841 Move X1, [X31+64]
	842 Move W2, 4
	843 Move X0, X19
	844 Move X3, X31
	845 Call Blitter.DrawQuad, X0, X1, X2
	846 Move X8, 0x785000
	847 Move X8, [X8+3576]
	848 Add X0, X31, 512
	849 Move X1, [X8]
	850 Call Enumerator<Object>.Dispose, X0
	851 Move W8, [X31+144]
	852 Move TEMP, X8
	853 And TEMP, TEMP, 1
	854 Compare TEMP, 1
	855 JumpIfNotEqual {921}
	856 Move X0, [X20]
	857 Move W8, [X0+224]
	858 Compare W8, 0
	859 JumpIfNotEqual {862}
	860 Call 0x1C17DFC
	861 Move X0, [X20]
	862 Move X8, [X0+184]
	863 Move X8, [X8+48]
	864 Compare X8, 0
	865 JumpIfEqual {872}
	866 Move X9, [X8+72]
	867 NotImplemented "Instruction LDUR not yet implemented."
	868 NotImplemented "Instruction LDUR not yet implemented."
	869 Move [X31+240], X9
	870 Move [X31+208], V1
	871 Move [X31+216], V0
	872 NotImplemented "Instruction MOVI not yet implemented."
	873 Move [X31+240], X31
	874 Move [X31+208], V0
	875 Move [X31+216], V0
	876 Move V0, [X31+208]
	877 Move V1, [X31+224]
	878 Move X8, [X31+240]
	879 Move [X31+448], V0
	880 Move [X31+456], V1
	881 Move [X31+480], X8
	882 Compare X19, 0
	883 JumpIfEqual {957}
	884 Move V0, [X31+448]
	885 Move V1, [X31+464]
	886 Move X8, [X31+480]
	887 Add X1, X31, 160
	888 Move X0, X19
	889 Move X2, X31
	890 Move [X31+160], V0
	891 Move [X31+168], V1
	892 Move [X31+192], X8
	893 Call CommandBuffer.SetRenderTarget, X0, X1
	894 Move X8, [X20]
	895 Move X8, [X8+184]
	896 Move X9, [X8+16]
	897 Compare X9, 0
	898 JumpIfEqual {957}
	899 Move W9, [X9+24]
	900 Move W10, [X8+32]
	901 Move W11, [X8+36]
	902 Move W8, [X8+40]
	903 Move S1, W31
	904 NotImplemented "Instruction SCVTF not yet implemented."
	905 Subtract W9, W10, W9
	906 Add W8, W8, W11
	907 NotImplemented "Instruction SCVTF not yet implemented."
	908 NotImplemented "Instruction SCVTF not yet implemented."
	909 Move X0, X19
	910 Move X1, X31
	911 Call CommandBuffer.SetViewport, X0, X1
	912 Move S0, W31
	913 Move S1, W31
	914 Move S2, W31
	915 Move S3, 1
	916 Move W2, 1
	917 Move X0, X19
	918 Move W1, W31
	919 Move X3, X31
	920 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, X3
	921 Move X0, [X20]
	922 Move W8, [X0+224]
	923 Compare W8, 0
	924 JumpIfNotEqual {927}
	925 Call 0x1C17DFC
	926 Move X0, [X20]
	927 Move X8, [X0+184]
	928 Move W9, [X8+56]
	929 Move W10, [X8+36]
	930 Add W9, W9, 1
	931 NotImplemented "Instruction SDIV not yet implemented."
	932 NotImplemented "Instruction MSUB not yet implemented."
	933 Move [X8+56], W9
	934 Add X31, X31, 544
	935 Move X20, [X31+144]
	936 Move X19, [X31+152]
	937 Move X22, [X31+128]
	938 Move X21, [X31+136]
	939 Move X24, [X31+112]
	940 Move X23, [X31+120]
	941 Move X26, [X31+96]
	942 Move X25, [X31+104]
	943 Move X28, [X31+80]
	944 Move X27, [X31+88]
	945 Move X29, [X31+64]
	946 Move X30, [X31+72]
	947 Move D9, [X31+48]
	948 Move D8, [X31+56]
	949 Move D11, [X31+32]
	950 Move D10, [X31+40]
	951 Move D13, [X31+16]
	952 Move D12, [X31+24]
	953 Move D15, [X31+160]
	954 Move D14, [X31+168]
	955 Return 
	956 Call 0x1C17F20
	957 Call 0x1C17F20
	958 Call 0x1C17F20
	959 Call 0x1C17F20
	960 Call 0x1C17F20
	961 Call 0x1C17F20
	962 Call 0x1C17F20
	963 Call 0x1C17F20
	964 Call 0x1C17F20
	965 Call 0x1C17F20
	966 Call 0x1C17F20
	967 Call 0x1C17F20
	968 Call 0x1C17F20
	969 Call 0x1C17F20
	970 Call 0x1C17F20
	971 Call 0x1C17F20
	972 Call 0x1C17F20
	973 Call 0x1C17F20
	974 Call 0x1C17F20
	975 Call 0x1C17F20
	976 Move X21, X0
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Move X0, X21
	979 Call 0x3EB2AD0
	980 Move X22, [X0]
	981 Call 0x3EB2AE0
	982 Move X8, 0x785000
	983 Move X8, [X8+3576]
	984 Add X0, X31, 512
	985 Move X1, [X8]
	986 Call Enumerator<Object>.Dispose, X0
	987 Compare X22, 0
	988 JumpIfEqual {851}
	989 Move X0, X22
	990 Call 0x1C17F18
	991 Move X22, X31
	992 Move X21, X0
	993 Move X8, 0x785000
	994 Move X8, [X8+3576]
	995 Move X1, [X8]
	996 Add X0, X31, 512
	997 Call Enumerator<Object>.Dispose, X0
	998 Compare X22, 0
	999 JumpIfNotEqual {1002}
	1000 Move X0, X21
	1001 Call 0x1D2D690
	1002 Move X0, X22
	1003 Call 0x1C17F18
	1004 Call 0x1991590

Method: System.Void DoLensFlareDataDrivenCommon(UnityEngine.Material lensFlareShader, UnityEngine.Camera cam, System.Single actualWidth, System.Single actualHeight, System.Boolean usePanini, System.Single paniniDistance, System.Single paniniCropToFit, System.Boolean isCameraRelative, UnityEngine.Vector3 cameraPositionWS, UnityEngine.Matrix4x4 viewProjMatrix, UnityEngine.Rendering.CommandBuffer cmd, System.Boolean taaEnabled, System.Boolean hasCloudLayer, UnityEngine.Texture cloudOpacityTexture, UnityEngine.Texture sunOcclusionTexture, UnityEngine.Rendering.RenderTargetIdentifier colorBuffer, System.Func`4<UnityEngine.Light, UnityEngine.Camera, UnityEngine.Vector3, System.Single> GetLensFlareLightAttenuation, System.Int32 _FlareOcclusionRemapTex, System.Int32 _FlareOcclusionTex, System.Int32 _FlareOcclusionIndex, System.Int32 _FlareCloudOpacity, System.Int32 _FlareSunOcclusionTex, System.Int32 _FlareTex, System.Int32 _FlareColorValue, System.Int32 _FlareData0, System.Int32 _FlareData1, System.Int32 _FlareData2, System.Int32 _FlareData3, System.Int32 _FlareData4, System.Boolean debugView)

Disassembly:
	0x039CEF90 LDR X8, [X8 + 0xE60]
	0x039CEF94 LDR X1, [X8]
	0x039CEF98 MOV X0, X19
	0x039CEF9C MOV X2, X31
	0x039CEFA0 BL 0x3C4D124
	0x039CEFA4 ADRP X8, 0x784000
	0x039CEFA8 LDR X8, [X8 + 0xE58]
	0x039CEFAC LDR X1, [X8]
	0x039CEFB0 MOV X0, X19
	0x039CEFB4 MOV X2, X31
	0x039CEFB8 BL 0x3C4D124
	0x039CEFBC LDR X8, [X31 + 0x310]
	0x039CEFC0 CBZ X8, 0x39CFF78
	0x039CEFC4 LDR W9, [X8 + 0x6C]
	0x039CEFC8 SUB W9, W9, 0x1
	0x039CEFCC CMP W9, 0x2
	0x039CEFD0 B.CS 0x39CEFF8
	0x039CEFD4 ADRP X9, 0x784000
	0x039CEFD8 LDRB W8, [X8 + 0xDC]
	0x039CEFDC LDR X9, [X9 + 0xE48]
	0x039CEFE0 LDR X1, [X9]
	0x039CEFE4 CBZ W8, 0x39CF014
	0x039CEFE8 MOV X0, X19
	0x039CEFEC MOV X2, X31
	0x039CEFF0 BL 0x3C4D0E0
	0x039CEFF4 B 0x39CF020
	0x039CEFF8 ADRP X8, 0x784000
	0x039CEFFC LDR X8, [X8 + 0xE48]
	0x039CF000 LDR X1, [X8]
	0x039CF004 MOV X0, X19
	0x039CF008 MOV X2, X31
	0x039CF00C BL 0x3C4D124
	0x039CF010 B 0x39CF020
	0x039CF014 MOV X0, X19
	0x039CF018 MOV X2, X31
	0x039CF01C BL 0x3C4D124
	0x039CF020 LDR X8, [X31 + 0x310]
	0x039CF024 CBZ X8, 0x39CFF74
	0x039CF028 ADRP X9, 0x724000
	0x039CF02C LDR X9, [X9 + 0x598]
	0x039CF030 LDR X25, [X8 + 0x30]
	0x039CF034 LDR X0, [X9]
	0x039CF038 LDR W9, [X0 + 0xE0]
	0x039CF03C CBNZ W9, 0x39CF044
	0x039CF040 BL 0x1C16DFC
	0x039CF044 MOV X0, X25
	0x039CF048 MOV X1, X31
	0x039CF04C MOV X2, X31
	0x039CF050 BL 0x3C354F8
	0x039CF054 TBZ X0, 0x0, 0x39CF094
	0x039CF058 LDR X8, [X31 + 0x310]
	0x039CF05C CBZ X8, 0x39CFFB4
	0x039CF060 LDR X0, [X8 + 0x30]
	0x039CF064 ADD X8, X31, 0x290
	0x039CF068 MOV X1, X31
	0x039CF06C BL 0x3C4B274
	0x039CF070 LDP V0, V1, [X22 + 0xC0]
	0x039CF074 LDR X8, [X31 + 0x2B0]
	0x039CF078 STP V0, V1, [X31 + 0x140]
	0x039CF07C STR X8, [X31 + 0x160]
	0x039CF080 LDR W1, [X31 + 0x70]
	0x039CF084 ADD X2, X31, 0x140
	0x039CF088 MOV X0, X19
	0x039CF08C MOV X3, X31
	0x039CF090 BL 0x3C4FCFC
	0x039CF094 LDR X24, [X31 + 0x310]
	0x039CF098 CBZ X24, 0x39CFF70
	0x039CF09C LDR V0, [X24 + 0xD0]
	0x039CF0A0 ADRP X8, 0xFFFFFFFFFD11B000
	0x039CF0A4 LDR V1, [X8 + 0x350]
	0x039CF0A8 LDR W8, [X24 + 0x6C]
	0x039CF0AC FSUB S0, S10, S0
	0x039CF0B0 STR S14, [X31 + 0x128]
	0x039CF0B4 FADD S0, S0, S1
	0x039CF0B8 FMIN S1, S0, S10
	0x039CF0BC FCMP S0, 0x0
	0x039CF0C0 FMOV S0, W31
	0x039CF0C4 STR S13, [X31 + 0xB4]
	0x039CF0C8 STR S9, [X31 + 0xC8]
	0x039CF0CC FCSEL S9, S1, S0, PL
	0x039CF0D0 MOV V14.16B, V12.16B
	0x039CF0D4 MOV V13.16B, V8.16B
	0x039CF0D8 CMP W8, 0x2
	0x039CF0DC B.NE 0x39CF0F0
	0x039CF0E0 FADD S0, S9, S10
	0x039CF0E4 FMOV S1, 5
	0x039CF0E8 BL 0x3EB1B50
	0x039CF0EC MOV V9.16B, V0.16B
	0x039CF0F0 LDRB W8, [X28 + 0x70]
	0x039CF0F4 LDR V0, [X24 + 0xCC]
	0x039CF0F8 FMOV S12, 1
	0x039CF0FC FMOV S1, -1
	0x039CF100 CMP W8, 0x0
	0x039CF104 FSUB S0, S10, S0
	0x039CF108 FCSEL S10, S1, S12, EQ
	0x039CF10C FMIN S1, S0, S12
	0x039CF110 FCMP S0, 0x0
	0x039CF114 FMOV S2, W31
	0x039CF118 FCSEL S0, S1, S2, PL
	0x039CF11C LDR V8, [X24 + 0xD8]
	0x039CF120 FMAX S0, S0, S2
	0x039CF124 FMOV S1, 4
	0x039CF128 FMUL S0, S0, S1
	0x039CF12C FADD S0, S0, S2
	0x039CF130 BL 0x3EB1E70
	0x039CF134 MOV V2.16B, V0.16B
	0x039CF138 LDR V0, [X24 + 0xD4]
	0x039CF13C SCVTF S0, S0
	0x039CF140 FDIV S3, S12, S0
	0x039CF144 LDR W1, [X31 + 0x88]
	0x039CF148 MOV X0, X19
	0x039CF14C MOV V0.16B, V10.16B
	0x039CF150 MOV V1.16B, V9.16B
	0x039CF154 MOV X2, X31
	0x039CF158 BL 0x3C4CED8
	0x039CF15C LDR X8, [X31 + 0x310]
	0x039CF160 CBZ X8, 0x39CFF6C
	0x039CF164 LDR W9, [X8 + 0x6C]
	0x039CF168 CMP W9, 0x2
	0x039CF16C B.NE 0x39CF1D4
	0x039CF170 LDR V0, [X8 + 0xD4]
	0x039CF174 ADRP X8, 0xFFFFFFFFFD11A000
	0x039CF178 LDR V1, [X8 + 0xF4C]
	0x039CF17C FMOV S2, 1
	0x039CF180 SCVTF S0, S0
	0x039CF184 FDIV S10, S2, S0
	0x039CF188 FMUL S0, S10, S1
	0x039CF18C BL 0x3EB1BD0
	0x039CF190 ADRP X8, 0xFFFFFFFFFD11B000
	0x039CF194 LDR V1, [X8 + 0x6C]
	0x039CF198 FMUL S2, S8, S0
	0x039CF19C FSUB S9, S0, S2
	0x039CF1A0 FMOV S0, 0.5
	0x039CF1A4 FMUL S10, S10, S1
	0x039CF1A8 FMUL S0, S10, S0
	0x039CF1AC BL 0x3EB1E50
	0x039CF1B0 FMUL S3, S0, S9
	0x039CF1B4 LDR W1, [X31 + 0x84]
	0x039CF1B8 MOV X0, X19
	0x039CF1BC MOV V0.16B, V8.16B
	0x039CF1C0 MOV V1.16B, V9.16B
	0x039CF1C4 MOV V2.16B, V10.16B
	0x039CF1C8 MOV X2, X31
	0x039CF1CC BL 0x3C4CED8
	0x039CF1D0 B 0x39CF1F4
	0x039CF1D4 LDR W1, [X31 + 0x84]
	0x039CF1D8 FMOV S1, W31
	0x039CF1DC FMOV S2, W31
	0x039CF1E0 FMOV S3, W31
	0x039CF1E4 MOV X0, X19
	0x039CF1E8 MOV V0.16B, V8.16B
	0x039CF1EC MOV X2, X31
	0x039CF1F0 BL 0x3C4CED8
	0x039CF1F4 LDR X8, [X31 + 0x310]
	0x039CF1F8 CBZ X8, 0x39CFF7C
	0x039CF1FC LDR V0, [X31 + 0x128]
	0x039CF200 LDP S2, S1, [X31 + 0xD8]
	0x039CF204 LDR V3, [X31 + 0xD4]
	0x039CF208 LDRB W9, [X8 + 0x44]
	0x039CF20C FMUL S0, S0, S11
	0x039CF210 STR S0, [X31 + 0x128]
	0x039CF214 LDR V0, [X31 + 0x124]
	0x039CF218 FMUL S3, S13, S3
	0x039CF21C FMUL S0, S0, S11
	0x039CF220 STR S0, [X31 + 0x124]
	0x039CF224 LDR V0, [X31 + 0xB4]
	0x039CF228 FMUL S0, S0, S1
	0x039CF22C LDR V1, [X31 + 0xC8]
	0x039CF230 FMUL S4, S15, S0
	0x039CF234 FMUL S1, S1, S2
	0x039CF238 LDR V2, [X31 + 0xE0]
	0x039CF23C FMUL S0, S15, S1
	0x039CF240 STP S4, S0, [X31 + 0xD4]
	0x039CF244 FMUL S0, S15, S3
	0x039CF248 FMUL S2, S14, S2
	0x039CF24C FMUL S1, S15, S2
	0x039CF250 STP S1, S0, [X31 + 0xDC]
	0x039CF254 CBZ W9, 0x39CF264
	0x039CF258 LDR W9, [X8 + 0x48]
	0x039CF25C SUBS W10, W9, 0x1
	0x039CF260 B.NE 0x39CF440
	0x039CF264 ADRP X9, 0x783000
	0x039CF268 LDR X9, [X9 + 0xD98]
	0x039CF26C LDR X0, [X9]
	0x039CF270 LDR W9, [X0 + 0xE0]
	0x039CF274 CBNZ W9, 0x39CF280
	0x039CF278 BL 0x1C16DFC
	0x039CF27C LDR X8, [X31 + 0x310]
	0x039CF280 CBZ X8, 0x39CFFA0
	0x039CF284 LDR V1, [X31 + 0x12C]
	0x039CF288 LDR V2, [X31 + 0x130]
	0x039CF28C LDR V3, [X31 + 0x134]
	0x039CF290 FMOV S0, -1
	0x039CF294 LDP S5, S4, [X31 + 0xFC]
	0x039CF298 FADD S0, S1, S0
	0x039CF29C FMUL S1, S2, S0
	0x039CF2A0 FMUL S0, S3, S0
	0x039CF2A4 LDRB W9, [X8 + 0xB4]
	0x039CF2A8 FADD S1, S2, S1
	0x039CF2AC FADD S0, S3, S0
	0x039CF2B0 FNEG S2, S0
	0x039CF2B4 FMUL S0, S5, S0
	0x039CF2B8 FMUL S3, S4, S1
	0x039CF2BC FSUB S8, S0, S3
	0x039CF2C0 FMUL S0, S4, S2
	0x039CF2C4 FMUL S1, S5, S1
	0x039CF2C8 FSUB S9, S0, S1
	0x039CF2CC CBZ W9, 0x39CF34C
	0x039CF2D0 ADRP X9, 0x783000
	0x039CF2D4 LDR X9, [X9 + 0xD98]
	0x039CF2D8 LDR X0, [X9]
	0x039CF2DC LDR W9, [X0 + 0xE0]
	0x039CF2E0 CBNZ W9, 0x39CF2F0
	0x039CF2E4 BL 0x1C16DFC
	0x039CF2E8 LDR X8, [X31 + 0x310]
	0x039CF2EC CBZ X8, 0x39CFFD8
	0x039CF2F0 LDR V0, [X31 + 0x54]
	0x039CF2F4 LDP S5, S4, [X31 + 0xFC]
	0x039CF2F8 LDR V2, [X31 + 0x5C]
	0x039CF2FC LDR X0, [X8 + 0xC0]
	0x039CF300 FMUL S0, S4, S0
	0x039CF304 FMUL S1, S2, S5
	0x039CF308 FSUB S3, S0, S1
	0x039CF30C LDR V0, [X31 + 0x58]
	0x039CF310 FMUL S1, S2, S4
	0x039CF314 FMUL S0, S0, S5
	0x039CF318 FSUB S2, S0, S1
	0x039CF31C LDR V4, [X31 + 0x128]
	0x039CF320 LDR V5, [X31 + 0x124]
	0x039CF324 ADD X1, X31, 0x318
	0x039CF328 ADD X2, X31, 0x310
	0x039CF32C ADD X3, X31, 0x2F8
	0x039CF330 MOV V0.16B, V8.16B
	0x039CF334 MOV V1.16B, V9.16B
	0x039CF338 BL 0x39D03B8
	0x039CF33C STR S0, [X31 + 0x128]
	0x039CF340 STR S1, [X31 + 0x124]
	0x039CF344 LDR X8, [X31 + 0x310]
	0x039CF348 CBZ X8, 0x39CFFC0
	0x039CF34C ADRP X9, 0x783000
	0x039CF350 LDR X9, [X9 + 0xD98]
	0x039CF354 LDP S11, S10, [X8 + 0x24]
	0x039CF358 LDP S12, S13, [X8 + 0x18]
	0x039CF35C LDRB W24, [X8 + 0x68]
	0x039CF360 LDR X0, [X9]
	0x039CF364 LDR W9, [X0 + 0xE0]
	0x039CF368 CBNZ W9, 0x39CF370
	0x039CF36C BL 0x1C16DFC
	0x039CF370 CMP W24, 0x0
	0x039CF374 CSET W0, NE
	0x039CF378 LDR V0, [X31 + 0xE4]
	0x039CF37C LDR V1, [X31 + 0x134]
	0x039CF380 LDR V6, [X31 + 0xF8]
	0x039CF384 FMOV S7, 1
	0x039CF388 STR S0, [X31 + 0x10]
	0x039CF38C LDR V0, [X31 + 0x12C]
	0x039CF390 MOV V2.16B, V11.16B
	0x039CF394 MOV V3.16B, V10.16B
	0x039CF398 MOV V4.16B, V8.16B
	0x039CF39C STR S0, [X31 + 0x8]
	0x039CF3A0 LDR V0, [X31 + 0xE8]
	0x039CF3A4 MOV V5.16B, V9.16B
	0x039CF3A8 STP S12, S13, [X31 + 0x18]
	0x039CF3AC STR S0, [X31]
	0x039CF3B0 LDR V0, [X31 + 0x130]
	0x039CF3B4 BL 0x39CC588
	0x039CF3B8 LDR W1, [X31 + 0xF4]
	0x039CF3BC MOV X0, X19
	0x039CF3C0 MOV X2, X31
	0x039CF3C4 BL 0x3C4CED8
	0x039CF3C8 LDR W1, [X31 + 0xF0]
	0x039CF3CC LDR V0, [X31 + 0x130]
	0x039CF3D0 LDR V1, [X31 + 0x134]
	0x039CF3D4 LDR V2, [X31 + 0x128]
	0x039CF3D8 LDR V3, [X31 + 0x124]
	0x039CF3DC MOV X0, X19
	0x039CF3E0 MOV X2, X31
	0x039CF3E4 BL 0x3C4CED8
	0x039CF3E8 LDR W1, [X31 + 0xEC]
	0x039CF3EC LDP S0, S1, [X31 + 0xD4]
	0x039CF3F0 LDP S2, S3, [X31 + 0xDC]
	0x039CF3F4 MOV X0, X19
	0x039CF3F8 MOV X2, X31
	0x039CF3FC BL 0x3C4CED8
	0x039CF400 ADRP X8, 0x783000
	0x039CF404 LDR X8, [X8 + 0xE28]
	0x039CF408 LDR X0, [X8]
	0x039CF40C LDR W8, [X0 + 0xE0]
	0x039CF410 CBNZ W8, 0x39CF418
	0x039CF414 BL 0x1C16DFC
	0x039CF418 LDR X1, [X31 + 0x110]
	0x039CF41C MOV X0, X19
	0x039CF420 MOV W2, W27
	0x039CF424 MOV X3, X31
	0x039CF428 BL 0x39E20B0
	0x039CF42C LDR W8, [X29 + 0x18]
	0x039CF430 ADD X21, X21, 0x1
	0x039CF434 CMP X21, W8, SXTW
	0x039CF438 B.LT 0x39CEC40
	0x039CF43C B 0x39CE244
	0x039CF440 LDR V0, [X8 + 0x78]
	0x039CF444 LDR W11, [X8 + 0x74]
	0x039CF448 SCVTF S1, W10
	0x039CF44C FADD S0, S0, S0
	0x039CF450 FDIV S0, S0, S1
	0x039CF454 STR S0, [X31 + 0xB4]
	0x039CF458 CBZ W11, 0x39CFBE4
	0x039CF45C CMP W11, 0x2
	0x039CF460 B.EQ 0x39CF7DC
	0x039CF464 CMP W11, 0x1
	0x039CF468 B.NE 0x39CF42C
	0x039CF46C CMP W9, 0x1
	0x039CF470 B.LT 0x39CF42C
	0x039CF474 LDR V0, [X31 + 0x134]
	0x039CF478 LDR V2, [X31 + 0x5C]
	0x039CF47C LDP S5, S4, [X31 + 0xFC]
	0x039CF480 MOV W24, W31
	0x039CF484 FSUB S0, S0, S0
	0x039CF488 FNEG S3, S0
	0x039CF48C FMUL S1, S5, S2
	0x039CF490 FMUL S2, S4, S2
	0x039CF494 FMUL S0, S5, S0
	0x039CF498 FMUL S3, S4, S3
	0x039CF49C FSUB S1, S3, S1
	0x039CF4A0 FSUB S0, S0, S2
	0x039CF4A4 STR S1, [X31 + 0x80]
	0x039CF4A8 STR S0, [X31 + 0x68]
	0x039CF4AC CMP W9, 0x2
	0x039CF4B0 FMOV S13, 0.5
	0x039CF4B4 B.LT 0x39CF4C8
	0x039CF4B8 SUB W9, W9, 0x1
	0x039CF4BC SCVTF S0, W24
	0x039CF4C0 SCVTF S1, W9
	0x039CF4C4 FDIV S13, S0, S1
	0x039CF4C8 LDR X0, [X8 + 0x98]
	0x039CF4CC CBZ X0, 0x39CFF30
	0x039CF4D0 MOV V0.16B, V13.16B
	0x039CF4D4 MOV X1, X31
	0x039CF4D8 BL 0x3C269D0
	0x039CF4DC LDR X8, [X31 + 0x310]
	0x039CF4E0 CBZ X8, 0x39CFF2C
	0x039CF4E4 LDR X0, [X8 + 0x80]
	0x039CF4E8 CBZ X0, 0x39CFF24
	0x039CF4EC MOV V10.16B, V0.16B
	0x039CF4F0 MOV V11.16B, V1.16B
	0x039CF4F4 MOV V12.16B, V2.16B
	0x039CF4F8 MOV V14.16B, V3.16B
	0x039CF4FC MOV X1, X31
	0x039CF500 BL 0x3C01178
	0x039CF504 CMP W0, 0x0
	0x039CF508 B.LE 0x39CF530
	0x039CF50C LDR X8, [X31 + 0x310]
	0x039CF510 CBZ X8, 0x39CFF94
	0x039CF514 LDR X0, [X8 + 0x80]
	0x039CF518 CBZ X0, 0x39CFF90
	0x039CF51C MOV V0.16B, V13.16B
	0x039CF520 MOV X1, X31
	0x039CF524 BL 0x3C00CC4
	0x039CF528 MOV V8.16B, V0.16B
	0x039CF52C B 0x39CF534
	0x039CF530 FMOV S8, 1
	0x039CF534 LDR X8, [X31 + 0x310]
	0x039CF538 CBZ X8, 0x39CFF14
	0x039CF53C ADRP X9, 0x783000
	0x039CF540 LDR X9, [X9 + 0xD98]
	0x039CF544 LDR V9, [X8 + 0x78]
	0x039CF548 LDR X0, [X9]
	0x039CF54C LDR W9, [X0 + 0xE0]
	0x039CF550 CBNZ W9, 0x39CF55C
	0x039CF554 BL 0x1C16DFC
	0x039CF558 LDR X8, [X31 + 0x310]
	0x039CF55C CBZ X8, 0x39CFF0C
	0x039CF560 LDR V1, [X31 + 0x12C]
	0x039CF564 FADD S0, S9, S9
	0x039CF568 LDR V2, [X31 + 0x130]
	0x039CF56C LDR V3, [X31 + 0x134]
	0x039CF570 FMUL S0, S8, S0
	0x039CF574 FADD S1, S1, S0
	0x039CF578 FMOV S0, -1
	0x039CF57C LDP S5, S4, [X31 + 0xFC]
	0x039CF580 FADD S0, S1, S0
	0x039CF584 STR S1, [X31 + 0xC8]
	0x039CF588 FMUL S1, S2, S0
	0x039CF58C FMUL S0, S3, S0
	0x039CF590 LDRB W9, [X8 + 0xB4]
	0x039CF594 FADD S1, S2, S1
	0x039CF598 FADD S0, S3, S0
	0x039CF59C FNEG S2, S0
	0x039CF5A0 FMUL S0, S5, S0
	0x039CF5A4 FMUL S3, S4, S1
	0x039CF5A8 FSUB S8, S0, S3
	0x039CF5AC FMUL S0, S4, S2
	0x039CF5B0 FMUL S1, S5, S1
	0x039CF5B4 FSUB S9, S0, S1
	0x039CF5B8 CBZ W9, 0x39CF618
	0x039CF5BC ADRP X9, 0x783000
	0x039CF5C0 LDR X9, [X9 + 0xD98]
	0x039CF5C4 LDR X0, [X9]
	0x039CF5C8 LDR W9, [X0 + 0xE0]
	0x039CF5CC CBNZ W9, 0x39CF5DC
	0x039CF5D0 BL 0x1C16DFC
	0x039CF5D4 LDR X8, [X31 + 0x310]
	0x039CF5D8 CBZ X8, 0x39CFFCC
	0x039CF5DC LDR X0, [X8 + 0xC0]
	0x039CF5E0 LDR V2, [X31 + 0x68]
	0x039CF5E4 LDR V3, [X31 + 0x80]
	0x039CF5E8 LDR V4, [X31 + 0x128]
	0x039CF5EC LDR V5, [X31 + 0x124]
	0x039CF5F0 ADD X1, X31, 0x318
	0x039CF5F4 ADD X2, X31, 0x310
	0x039CF5F8 ADD X3, X31, 0x2F8
	0x039CF5FC MOV V0.16B, V8.16B
	0x039CF600 MOV V1.16B, V9.16B
	0x039CF604 BL 0x39D03B8
	0x039CF608 STP S1, S0, [X31 + 0xB0]
	0x039CF60C LDR X8, [X31 + 0x310]
	0x039CF610 CBNZ X8, 0x39CF624
	0x039CF614 B 0x39CFF8C
	0x039CF618 LDR V1, [X31 + 0x128]
	0x039CF61C LDR V0, [X31 + 0x124]
	0x039CF620 STP S0, S1, [X31 + 0xB0]
	0x039CF624 LDR X0, [X8 + 0x88]
	0x039CF628 CBZ X0, 0x39CFF00
	0x039CF62C MOV X1, X31
	0x039CF630 BL 0x3C01178
	0x039CF634 CMP W0, 0x0
	0x039CF638 B.LE 0x39CF660
	0x039CF63C LDR X8, [X31 + 0x310]
	0x039CF640 CBZ X8, 0x39CFF84
	0x039CF644 LDR X0, [X8 + 0x88]
	0x039CF648 CBZ X0, 0x39CFF9C
	0x039CF64C MOV V0.16B, V13.16B
	0x039CF650 MOV X1, X31
	0x039CF654 BL 0x3C00CC4
	0x039CF658 STR S0, [X31 + 0xAC]
	0x039CF65C B 0x39CF668
	0x039CF660 FMOV S0, 1
	0x039CF664 STR S0, [X31 + 0xAC]
	0x039CF668 LDR X8, [X31 + 0x310]
	0x039CF66C CBZ X8, 0x39CFF38
	0x039CF670 LDR X0, [X8 + 0xE8]
	0x039CF674 CBZ X0, 0x39CFF44
	0x039CF678 MOV V0.16B, V13.16B
	0x039CF67C MOV X1, X31
	0x039CF680 BL 0x3C00CC4
	0x039CF684 LDR X8, [X31 + 0x310]
	0x039CF688 STP S12, S14, [X31 + 0xA4]
	0x039CF68C CBZ X8, 0x39CFF3C
	0x039CF690 ADRP X9, 0x783000
	0x039CF694 LDR V13, [X8 + 0x48]
	0x039CF698 LDR X9, [X9 + 0xD98]
	0x039CF69C MOV V15.16B, V0.16B
	0x039CF6A0 MOV V12.16B, V11.16B
	0x039CF6A4 LDR V1, [X8 + 0x24]
	0x039CF6A8 LDR X0, [X9]
	0x039CF6AC LDR V0, [X8 + 0x28]
	0x039CF6B0 LDP S11, S14, [X8 + 0x18]
	0x039CF6B4 LDRB W25, [X8 + 0x68]
	0x039CF6B8 LDR W9, [X0 + 0xE0]
	0x039CF6BC STP S1, S0, [X31 + 0x9C]
	0x039CF6C0 CBNZ W9, 0x39CF6C8
	0x039CF6C4 BL 0x1C16DFC
	0x039CF6C8 MOVZ W8, 0x43340000
	0x039CF6CC SCVTF S0, S13
	0x039CF6D0 FMOV S1, W8
	0x039CF6D4 FDIV S0, S1, S0
	0x039CF6D8 FSUB S0, S1, S0
	0x039CF6DC LDR V1, [X31 + 0xE8]
	0x039CF6E0 CMP W25, 0x0
	0x039CF6E4 FMUL S0, S15, S0
	0x039CF6E8 CSET W0, NE
	0x039CF6EC FADD S0, S1, S0
	0x039CF6F0 LDR V1, [X31 + 0xE4]
	0x039CF6F4 STR S0, [X31]
	0x039CF6F8 LDR V0, [X31 + 0x130]
	0x039CF6FC LDP S2, S3, [X31 + 0x9C]
	0x039CF700 STR S1, [X31 + 0x10]
	0x039CF704 LDR V1, [X31 + 0xC8]
	0x039CF708 LDR V6, [X31 + 0xF8]
	0x039CF70C FMOV S7, 1
	0x039CF710 MOV V4.16B, V8.16B
	0x039CF714 STR S1, [X31 + 0x8]
	0x039CF718 LDR V1, [X31 + 0x134]
	0x039CF71C MOV V5.16B, V9.16B
	0x039CF720 STP S11, S14, [X31 + 0x18]
	0x039CF724 BL 0x39CC588
	0x039CF728 LDR W1, [X31 + 0xF4]
	0x039CF72C MOV X0, X19
	0x039CF730 MOV X2, X31
	0x039CF734 BL 0x3C4CED8
	0x039CF738 MOV V9.16B, V12.16B
	0x039CF73C LDP S12, S13, [X31 + 0xA4]
	0x039CF740 LDR V0, [X31 + 0xB4]
	0x039CF744 LDR V1, [X31 + 0xAC]
	0x039CF748 FMUL S2, S0, S1
	0x039CF74C LDR V0, [X31 + 0xB0]
	0x039CF750 FMUL S3, S0, S1
	0x039CF754 LDR W1, [X31 + 0xF0]
	0x039CF758 LDR V0, [X31 + 0x130]
	0x039CF75C LDR V1, [X31 + 0x134]
	0x039CF760 MOV X0, X19
	0x039CF764 MOV X2, X31
	0x039CF768 BL 0x3C4CED8
	0x039CF76C LDP S0, S1, [X31 + 0xD4]
	0x039CF770 LDP S2, S3, [X31 + 0xDC]
	0x039CF774 FMUL S0, S0, S10
	0x039CF778 FMUL S1, S1, S9
	0x039CF77C FMUL S2, S2, S12
	0x039CF780 FMUL S3, S3, S13
	0x039CF784 LDR W1, [X31 + 0xEC]
	0x039CF788 MOV X0, X19
	0x039CF78C MOV X2, X31
	0x039CF790 BL 0x3C4CED8
	0x039CF794 ADRP X8, 0x783000
	0x039CF798 LDR X8, [X8 + 0xE28]
	0x039CF79C LDR X0, [X8]
	0x039CF7A0 LDR W8, [X0 + 0xE0]
	0x039CF7A4 CBNZ W8, 0x39CF7AC
	0x039CF7A8 BL 0x1C16DFC
	0x039CF7AC LDR X1, [X31 + 0x110]
	0x039CF7B0 MOV X0, X19
	0x039CF7B4 MOV W2, W27
	0x039CF7B8 MOV X3, X31
	0x039CF7BC BL 0x39E20B0
	0x039CF7C0 LDR X8, [X31 + 0x310]
	0x039CF7C4 CBZ X8, 0x39CFF1C
	0x039CF7C8 LDR W9, [X8 + 0x48]
	0x039CF7CC ADD W24, W24, 0x1
	0x039CF7D0 CMP W24, W9
	0x039CF7D4 B.LT 0x39CF4AC
	0x039CF7D8 B 0x39CF42C
	0x039CF7DC MOV X0, X31
	0x039CF7E0 BL 0x3C3086C
	0x039CF7E4 LDR X8, [X31 + 0x310]
	0x039CF7E8 CBZ X8, 0x39CFFE0
	0x039CF7EC STP X1, X0, [X31 + 0x30]
	0x039CF7F0 LDR W0, [X8 + 0x90]
	0x039CF7F4 MOV X1, X31
	0x039CF7F8 BL 0x3C30830
	0x039CF7FC LDR X8, [X31 + 0x310]
	0x039CF800 CBZ X8, 0x39CFFDC
	0x039CF804 LDR W9, [X8 + 0x48]
	0x039CF808 CMP W9, 0x1
	0x039CF80C B.LT 0x39CFBD4
	0x039CF810 LDR V1, [X31 + 0x134]
	0x039CF814 LDR V3, [X31 + 0x5C]
	0x039CF818 LDP S6, S5, [X31 + 0xFC]
	0x039CF81C LDR V0, [X8 + 0xA8]
	0x039CF820 FSUB S1, S1, S1
	0x039CF824 FNEG S4, S1
	0x039CF828 FMUL S2, S6, S3
	0x039CF82C FMUL S3, S5, S3
	0x039CF830 FMUL S1, S6, S1
	0x039CF834 FMUL S4, S5, S4
	0x039CF838 FSUB S7, S1, S3
	0x039CF83C FSUB S1, S4, S2
	0x039CF840 STP S1, S7, [X31 + 0x4C]
	0x039CF844 FMUL S1, S6, S0
	0x039CF848 FMUL S0, S5, S0
	0x039CF84C STP S0, S1, [X31 + 0x44]
	0x039CF850 LDR V1, [X31 + 0xB4]
	0x039CF854 FMOV S0, 0.5
	0x039CF858 MOV W24, W31
	0x039CF85C FMUL S0, S1, S0
	0x039CF860 STR S0, [X31 + 0x68]
	0x039CF864 ADRP X8, 0x783000
	0x039CF868 LDR X8, [X8 + 0xD98]
	0x039CF86C LDR X0, [X8]
	0x039CF870 LDR W8, [X0 + 0xE0]
	0x039CF874 CBNZ W8, 0x39CF87C
	0x039CF878 BL 0x1C16DFC
	0x039CF87C FMOV S0, -1
	0x039CF880 FMOV S1, 1
	0x039CF884 MOV X0, X31
	0x039CF888 BL 0x3C30968
	0x039CF88C LDR X8, [X31 + 0x310]
	0x039CF890 CBZ X8, 0x39CFF04
	0x039CF894 LDR V1, [X31 + 0x12C]
	0x039CF898 LDR V2, [X31 + 0x130]
	0x039CF89C LDR V3, [X31 + 0x134]
	0x039CF8A0 MOV V15.16B, V0.16B
	0x039CF8A4 FMOV S0, -1
	0x039CF8A8 LDP S5, S4, [X31 + 0xFC]
	0x039CF8AC FADD S0, S1, S0
	0x039CF8B0 FMUL S1, S2, S0
	0x039CF8B4 FMUL S0, S3, S0
	0x039CF8B8 LDR V12, [X8 + 0xA0]
	0x039CF8BC LDRB W9, [X8 + 0xB4]
	0x039CF8C0 FADD S1, S2, S1
	0x039CF8C4 FADD S0, S3, S0
	0x039CF8C8 FNEG S2, S0
	0x039CF8CC FMUL S0, S5, S0
	0x039CF8D0 FMUL S3, S4, S1
	0x039CF8D4 FSUB S8, S0, S3
	0x039CF8D8 FMUL S0, S4, S2
	0x039CF8DC FMUL S1, S5, S1
	0x039CF8E0 FSUB S10, S0, S1
	0x039CF8E4 CBZ W9, 0x39CF944
	0x039CF8E8 ADRP X9, 0x783000
	0x039CF8EC LDR X9, [X9 + 0xD98]
	0x039CF8F0 LDR X0, [X9]
	0x039CF8F4 LDR W9, [X0 + 0xE0]
	0x039CF8F8 CBNZ W9, 0x39CF908
	0x039CF8FC BL 0x1C16DFC
	0x039CF900 LDR X8, [X31 + 0x310]
	0x039CF904 CBZ X8, 0x39CFFC4
	0x039CF908 LDR X0, [X8 + 0xC0]
	0x039CF90C LDP S3, S2, [X31 + 0x4C]
	0x039CF910 LDR V4, [X31 + 0x128]
	0x039CF914 LDR V5, [X31 + 0x124]
	0x039CF918 ADD X1, X31, 0x318
	0x039CF91C ADD X2, X31, 0x310
	0x039CF920 ADD X3, X31, 0x2F8
	0x039CF924 MOV V0.16B, V8.16B
	0x039CF928 MOV V1.16B, V10.16B
	0x039CF92C BL 0x39D03B8
	0x039CF930 LDR X8, [X31 + 0x310]
	0x039CF934 CBZ X8, 0x39CFF98
	0x039CF938 MOV V11.16B, V0.16B
	0x039CF93C MOV V9.16B, V1.16B
	0x039CF940 B 0x39CF94C
	0x039CF944 LDR V11, [X31 + 0x128]
	0x039CF948 LDR V9, [X31 + 0x124]
	0x039CF94C ADRP X9, 0x783000
	0x039CF950 LDR X9, [X9 + 0xD98]
	0x039CF954 LDR V13, [X8 + 0xAC]
	0x039CF958 LDR X0, [X9]
	0x039CF95C LDR W9, [X0 + 0xE0]
	0x039CF960 CBNZ W9, 0x39CF968
	0x039CF964 BL 0x1C16DFC
	0x039CF968 FMOV S0, -1
	0x039CF96C FMOV S1, 1
	0x039CF970 MOV X0, X31
	0x039CF974 BL 0x3C30968
	0x039CF978 LDR X8, [X31 + 0x310]
	0x039CF97C CBZ X8, 0x39CFEF8
	0x039CF980 LDR X25, [X8 + 0x98]
	0x039CF984 MOV V14.16B, V0.16B
	0x039CF988 FMOV S0, W31
	0x039CF98C FMOV S1, 1
	0x039CF990 MOV X0, X31
	0x039CF994 BL 0x3C30968
	0x039CF998 CBZ X25, 0x39CFF28
	0x039CF99C MOV X0, X25
	0x039CF9A0 MOV X1, X31
	0x039CF9A4 STP S9, S14, [X31 + 0xAC]
	0x039CF9A8 STR S13, [X31 + 0xC8]
	0x039CF9AC BL 0x3C269D0
	0x039CF9B0 LDR X8, [X31 + 0x310]
	0x039CF9B4 STR S3, [X31 + 0x80]
	0x039CF9B8 STP S2, S1, [X31 + 0x9C]
	0x039CF9BC STP S0, S11, [X31 + 0xA4]
	0x039CF9C0 CBZ X8, 0x39CFF34
	0x039CF9C4 MOV V9.16B, V8.16B
	0x039CF9C8 LDP S11, S8, [X8 + 0x18]
	0x039CF9CC MOV V14.16B, V10.16B
	0x039CF9D0 FMOV S0, -1
	0x039CF9D4 FMOV S1, 1
	0x039CF9D8 MOV X0, X31
	0x039CF9DC BL 0x3C30968
	0x039CF9E0 MOV V10.16B, V0.16B
	0x039CF9E4 ADRP X8, 0xFFFFFFFFFD11B000
	0x039CF9E8 LDR V0, [X8 + 0xAC]
	0x039CF9EC ADRP X8, 0xFFFFFFFFFD11A000
	0x039CF9F0 LDR V1, [X8 + 0xF4C]
	0x039CF9F4 MOV X0, X31
	0x039CF9F8 BL 0x3C30968
	0x039CF9FC LDR X8, [X31 + 0x310]
	0x039CFA00 CBZ X8, 0x39CFF20
	0x039CFA04 MOV V13.16B, V0.16B
	0x039CFA08 FMUL S0, S15, S12
	0x039CFA0C FMOV S1, 1
	0x039CFA10 FADD S15, S0, S1
	0x039CFA14 FCMP S15, 0x0
	0x039CFA18 B.LE 0x39CFB6C
	0x039CFA1C ADRP X9, 0x783000
	0x039CFA20 LDR X9, [X9 + 0xD98]
	0x039CFA24 LDR V12, [X8 + 0xB0]
	0x039CFA28 LDR V1, [X8 + 0x24]
	0x039CFA2C LDR V0, [X8 + 0x28]
	0x039CFA30 LDR X0, [X9]
	0x039CFA34 LDRB W25, [X8 + 0x68]
	0x039CFA38 STP S1, S0, [X31 + 0x60]
	0x039CFA3C LDR W9, [X0 + 0xE0]
	0x039CFA40 CBNZ W9, 0x39CFA48
	0x039CFA44 BL 0x1C16DFC
	0x039CFA48 LDP S1, S0, [X31 + 0x44]
	0x039CFA4C LDR V3, [X31 + 0xE8]
	0x039CFA50 FMUL S2, S13, S12
	0x039CFA54 CMP W25, 0x0
	0x039CFA58 FMUL S0, S0, S10
	0x039CFA5C FMUL S1, S1, S10
	0x039CFA60 FADD S0, S11, S0
	0x039CFA64 FADD S1, S8, S1
	0x039CFA68 FADD S2, S3, S2
	0x039CFA6C CSET W0, NE
	0x039CFA70 STP S0, S1, [X31 + 0x18]
	0x039CFA74 LDR V0, [X31 + 0xE4]
	0x039CFA78 STR S2, [X31]
	0x039CFA7C LDR V1, [X31 + 0x134]
	0x039CFA80 LDP S2, S3, [X31 + 0x60]
	0x039CFA84 STR S0, [X31 + 0x10]
	0x039CFA88 LDR V0, [X31 + 0x12C]
	0x039CFA8C LDR V6, [X31 + 0xF8]
	0x039CFA90 FMOV S7, 1
	0x039CFA94 MOV V4.16B, V9.16B
	0x039CFA98 STR S0, [X31 + 0x8]
	0x039CFA9C LDR V0, [X31 + 0x130]
	0x039CFAA0 MOV V5.16B, V14.16B
	0x039CFAA4 BL 0x39CC588
	0x039CFAA8 LDR W1, [X31 + 0xF4]
	0x039CFAAC MOV X0, X19
	0x039CFAB0 MOV X2, X31
	0x039CFAB4 BL 0x3C4CED8
	0x039CFAB8 LDR V9, [X31 + 0xA8]
	0x039CFABC LDR V0, [X31 + 0xC8]
	0x039CFAC0 LDR V1, [X31 + 0xB0]
	0x039CFAC4 LDR V3, [X31 + 0xAC]
	0x039CFAC8 FMUL S0, S0, S1
	0x039CFACC FMUL S1, S9, S0
	0x039CFAD0 FADD S2, S9, S1
	0x039CFAD4 FMUL S0, S3, S0
	0x039CFAD8 FADD S3, S3, S0
	0x039CFADC LDR W1, [X31 + 0xF0]
	0x039CFAE0 LDR V0, [X31 + 0x130]
	0x039CFAE4 LDR V1, [X31 + 0x134]
	0x039CFAE8 MOV X0, X19
	0x039CFAEC MOV X2, X31
	0x039CFAF0 BL 0x3C4CED8
	0x039CFAF4 LDR V0, [X31 + 0xD4]
	0x039CFAF8 LDP S2, S1, [X31 + 0xA0]
	0x039CFAFC LDR V3, [X31 + 0x9C]
	0x039CFB00 LDR V4, [X31 + 0x80]
	0x039CFB04 FMUL S0, S0, S1
	0x039CFB08 LDR V1, [X31 + 0xD8]
	0x039CFB0C FMUL S0, S15, S0
	0x039CFB10 FMUL S1, S1, S2
	0x039CFB14 LDR V2, [X31 + 0xDC]
	0x039CFB18 FMUL S1, S15, S1
	0x039CFB1C FMUL S2, S2, S3
	0x039CFB20 LDR V3, [X31 + 0xE0]
	0x039CFB24 FMUL S2, S15, S2
	0x039CFB28 FMUL S3, S3, S4
	0x039CFB2C FMUL S3, S15, S3
	0x039CFB30 LDR W1, [X31 + 0xEC]
	0x039CFB34 MOV X0, X19
	0x039CFB38 MOV X2, X31
	0x039CFB3C BL 0x3C4CED8
	0x039CFB40 ADRP X8, 0x783000
	0x039CFB44 LDR X8, [X8 + 0xE28]
	0x039CFB48 LDR X0, [X8]
	0x039CFB4C LDR W8, [X0 + 0xE0]
	0x039CFB50 CBNZ W8, 0x39CFB58
	0x039CFB54 BL 0x1C16DFC
	0x039CFB58 LDR X1, [X31 + 0x110]
	0x039CFB5C MOV X0, X19
	0x039CFB60 MOV W2, W27
	0x039CFB64 MOV X3, X31
	0x039CFB68 BL 0x39E20B0
	0x039CFB6C ADRP X8, 0x783000
	0x039CFB70 LDR X8, [X8 + 0xD98]
	0x039CFB74 LDR X0, [X8]
	0x039CFB78 LDR W8, [X0 + 0xE0]
	0x039CFB7C CBNZ W8, 0x39CFB84
	0x039CFB80 BL 0x1C16DFC
	0x039CFB84 FMOV S0, -1
	0x039CFB88 FMOV S1, 1
	0x039CFB8C MOV X0, X31
	0x039CFB90 BL 0x3C30968
	0x039CFB94 LDR X8, [X31 + 0x310]
	0x039CFB98 CBZ X8, 0x39CFF40
	0x039CFB9C LDR V2, [X31 + 0x12C]
	0x039CFBA0 LDR V3, [X31 + 0xB4]
	0x039CFBA4 LDR V1, [X8 + 0xA4]
	0x039CFBA8 ADD W24, W24, 0x1
	0x039CFBAC FADD S2, S3, S2
	0x039CFBB0 LDR V3, [X31 + 0x68]
	0x039CFBB4 FMUL S0, S3, S0
	0x039CFBB8 FMUL S0, S0, S1
	0x039CFBBC FADD S0, S2, S0
	0x039CFBC0 STR S0, [X31 + 0x2F8]
	0x039CFBC4 LDR W8, [X8 + 0x48]
	0x039CFBC8 STR S0, [X31 + 0x12C]
	0x039CFBCC CMP W24, W8
	0x039CFBD0 B.LT 0x39CF864
	0x039CFBD4 LDP X1, X0, [X31 + 0x30]
	0x039CFBD8 MOV X2, X31
	0x039CFBDC BL 0x3C308EC
	0x039CFBE0 B 0x39CF42C
	0x039CFBE4 CMP W9, 0x1
	0x039CFBE8 B.LT 0x39CF42C
	0x039CFBEC LDR V0, [X31 + 0x134]
	0x039CFBF0 LDR V2, [X31 + 0x5C]
	0x039CFBF4 LDP S5, S4, [X31 + 0xFC]
	0x039CFBF8 MOV W24, W31
	0x039CFBFC FSUB S0, S0, S0
	0x039CFC00 FNEG S3, S0
	0x039CFC04 FMUL S1, S5, S2
	0x039CFC08 FMUL S2, S2, S4
	0x039CFC0C FMUL S0, S5, S0
	0x039CFC10 FMUL S3, S4, S3
	0x039CFC14 FSUB S4, S0, S2
	0x039CFC18 FSUB S0, S3, S1
	0x039CFC1C STP S0, S4, [X31 + 0x9C]
	0x039CFC20 FMOV S0, W31
	0x039CFC24 STR S0, [X31 + 0xC8]
	0x039CFC28 ADRP X9, 0x783000
	0x039CFC2C LDR X9, [X9 + 0xD98]
	0x039CFC30 LDR X0, [X9]
	0x039CFC34 LDR W9, [X0 + 0xE0]
	0x039CFC38 CBNZ W9, 0x39CFC44
	0x039CFC3C BL 0x1C16DFC
	0x039CFC40 LDR X8, [X31 + 0x310]
	0x039CFC44 CBZ X8, 0x39CFF18
	0x039CFC48 LDR V1, [X31 + 0x12C]
	0x039CFC4C LDR V2, [X31 + 0x130]
	0x039CFC50 LDR V3, [X31 + 0x134]
	0x039CFC54 FMOV S0, -1
	0x039CFC58 LDP S5, S4, [X31 + 0xFC]
	0x039CFC5C FADD S0, S1, S0
	0x039CFC60 FMUL S1, S2, S0
	0x039CFC64 FMUL S0, S3, S0
	0x039CFC68 LDRB W9, [X8 + 0xB4]
	0x039CFC6C FADD S1, S2, S1
	0x039CFC70 FADD S0, S3, S0
	0x039CFC74 FNEG S2, S0
	0x039CFC78 FMUL S0, S5, S0
	0x039CFC7C FMUL S3, S4, S1
	0x039CFC80 FSUB S10, S0, S3
	0x039CFC84 FMUL S0, S4, S2
	0x039CFC88 FMUL S1, S5, S1
	0x039CFC8C FSUB S8, S0, S1
	0x039CFC90 CBZ W9, 0x39CFCF0
	0x039CFC94 ADRP X9, 0x783000
	0x039CFC98 LDR X9, [X9 + 0xD98]
	0x039CFC9C LDR X0, [X9]
	0x039CFCA0 LDR W9, [X0 + 0xE0]
	0x039CFCA4 CBNZ W9, 0x39CFCB4
	0x039CFCA8 BL 0x1C16DFC
	0x039CFCAC LDR X8, [X31 + 0x310]
	0x039CFCB0 CBZ X8, 0x39CFFC8
	0x039CFCB4 LDR X0, [X8 + 0xC0]
	0x039CFCB8 LDP S3, S2, [X31 + 0x9C]
	0x039CFCBC LDR V4, [X31 + 0x128]
	0x039CFCC0 LDR V5, [X31 + 0x124]
	0x039CFCC4 ADD X1, X31, 0x318
	0x039CFCC8 ADD X2, X31, 0x310
	0x039CFCCC ADD X3, X31, 0x2F8
	0x039CFCD0 MOV V0.16B, V10.16B
	0x039CFCD4 MOV V1.16B, V8.16B
	0x039CFCD8 BL 0x39D03B8
	0x039CFCDC LDR X8, [X31 + 0x310]
	0x039CFCE0 CBZ X8, 0x39CFF88
	0x039CFCE4 MOV V9.16B, V0.16B
	0x039CFCE8 MOV V11.16B, V1.16B
	0x039CFCEC B 0x39CFCF8
	0x039CFCF0 LDR V9, [X31 + 0x128]
	0x039CFCF4 LDR V11, [X31 + 0x124]
	0x039CFCF8 LDR W9, [X8 + 0x48]
	0x039CFCFC FMOV S0, 0.5
	0x039CFD00 SUBS W9, W9, 0x1
	0x039CFD04 B.LE 0x39CFD14
	0x039CFD08 SCVTF S0, W24
	0x039CFD0C SCVTF S1, W9
	0x039CFD10 FDIV S0, S0, S1
	0x039CFD14 LDR X0, [X8 + 0x98]
	0x039CFD18 CBZ X0, 0x39CFF10
	0x039CFD1C MOV X1, X31
	0x039CFD20 BL 0x3C269D0
	0x039CFD24 STP S1, S0, [X31 + 0xAC]
	0x039CFD28 STP S3, S2, [X31 + 0xA4]
	0x039CFD2C LDR X8, [X31 + 0x310]
	0x039CFD30 CBZ X8, 0x39CFF08
	0x039CFD34 ADRP X9, 0x783000
	0x039CFD38 LDR X9, [X9 + 0xD98]
	0x039CFD3C LDP S15, S14, [X8 + 0x24]
	0x039CFD40 LDP S13, S12, [X8 + 0x18]
	0x039CFD44 LDRB W25, [X8 + 0x68]
	0x039CFD48 LDR X0, [X9]
	0x039CFD4C LDR W9, [X0 + 0xE0]
	0x039CFD50 CBNZ W9, 0x39CFD58
	0x039CFD54 BL 0x1C16DFC
	0x039CFD58 LDR V0, [X31 + 0xE8]
	0x039CFD5C LDR V1, [X31 + 0xC8]
	0x039CFD60 CMP W25, 0x0
	0x039CFD64 CSET W0, NE
	0x039CFD68 FADD S0, S0, S1
	0x039CFD6C LDR V1, [X31 + 0xE4]
	0x039CFD70 STR S0, [X31]
	0x039CFD74 LDR V0, [X31 + 0x130]
	0x039CFD78 LDR V6, [X31 + 0xF8]
	0x039CFD7C STR S1, [X31 + 0x10]
	0x039CFD80 LDR V1, [X31 + 0x12C]
	0x039CFD84 FMOV S7, 1
	0x039CFD88 MOV V2.16B, V15.16B
	0x039CFD8C MOV V3.16B, V14.16B
	0x039CFD90 STR S1, [X31 + 0x8]
	0x039CFD94 LDR V1, [X31 + 0x134]
	0x039CFD98 MOV V4.16B, V10.16B
	0x039CFD9C MOV V5.16B, V8.16B
	0x039CFDA0 STP S13, S12, [X31 + 0x18]
	0x039CFDA4 BL 0x39CC588
	0x039CFDA8 LDR W1, [X31 + 0xF4]
	0x039CFDAC MOV X0, X19
	0x039CFDB0 MOV X2, X31
	0x039CFDB4 BL 0x3C4CED8
	0x039CFDB8 LDR W1, [X31 + 0xF0]
	0x039CFDBC LDR V0, [X31 + 0x130]
	0x039CFDC0 LDR V1, [X31 + 0x134]
	0x039CFDC4 MOV X0, X19
	0x039CFDC8 MOV V2.16B, V9.16B
	0x039CFDCC MOV V3.16B, V11.16B
	0x039CFDD0 MOV X2, X31
	0x039CFDD4 BL 0x3C4CED8
	0x039CFDD8 LDR V0, [X31 + 0xD4]
	0x039CFDDC LDP S2, S1, [X31 + 0xAC]
	0x039CFDE0 LDP S4, S3, [X31 + 0xA4]
	0x039CFDE4 FMUL S0, S0, S1
	0x039CFDE8 LDR V1, [X31 + 0xD8]
	0x039CFDEC FMUL S1, S1, S2
	0x039CFDF0 LDR V2, [X31 + 0xDC]
	0x039CFDF4 FMUL S2, S2, S3
	0x039CFDF8 LDR V3, [X31 + 0xE0]
	0x039CFDFC FMUL S3, S3, S4
	0x039CFE00 LDR W1, [X31 + 0xEC]
	0x039CFE04 MOV X0, X19
	0x039CFE08 MOV X2, X31
	0x039CFE0C BL 0x3C4CED8
	0x039CFE10 ADRP X8, 0x783000
	0x039CFE14 LDR X8, [X8 + 0xE28]
	0x039CFE18 LDR X0, [X8]
	0x039CFE1C LDR W8, [X0 + 0xE0]
	0x039CFE20 CBNZ W8, 0x39CFE28
	0x039CFE24 BL 0x1C16DFC
	0x039CFE28 LDR X1, [X31 + 0x110]
	0x039CFE2C MOV X0, X19
	0x039CFE30 MOV W2, W27
	0x039CFE34 MOV X3, X31
	0x039CFE38 BL 0x39E20B0
	0x039CFE3C LDR V0, [X31 + 0x12C]
	0x039CFE40 LDR V1, [X31 + 0xB4]
	0x039CFE44 LDR X8, [X31 + 0x310]
	0x039CFE48 FADD S0, S1, S0
	0x039CFE4C STR S0, [X31 + 0x12C]
	0x039CFE50 STR S0, [X31 + 0x2F8]
	0x039CFE54 CBZ X8, 0x39CFEFC
	0x039CFE58 LDR W9, [X8 + 0x48]
	0x039CFE5C LDR V0, [X8 + 0xE0]
	0x039CFE60 LDR V1, [X31 + 0xC8]
	0x039CFE64 ADD W24, W24, 0x1
	0x039CFE68 CMP W24, W9
	0x039CFE6C FADD S1, S1, S0
	0x039CFE70 STR S1, [X31 + 0xC8]
	0x039CFE74 B.LT 0x39CFC28
	0x039CFE78 B 0x39CF42C
	0x039CFE7C ADRP X8, 0x783000
	0x039CFE80 LDR X8, [X8 + 0xDF8]
	0x039CFE84 ADD X0, X31, 0x320
	0x039CFE88 LDR X1, [X8]
	0x039CFE8C BL 0x2BC434C
	0x039CFE90 ADD X31, X31, 0x340
	0x039CFE94 LDP X20, X19, [X31 + 0x90]
	0x039CFE98 LDP X22, X21, [X31 + 0x80]
	0x039CFE9C LDP X24, X23, [X31 + 0x70]
	0x039CFEA0 LDP X26, X25, [X31 + 0x60]
	0x039CFEA4 LDP X28, X27, [X31 + 0x50]
	0x039CFEA8 LDP X29, X30, [X31 + 0x40]
	0x039CFEAC LDP D9, D8, [X31 + 0x30]
	0x039CFEB0 LDP D11, D10, [X31 + 0x20]
	0x039CFEB4 LDP D13, D12, [X31 + 0x10]
	0x039CFEB8 LDP D15, D14, [X31], #0xA0
	0x039CFEBC RET
	0x039CFEC0 BL 0x1C16F28
	0x039CFEC4 BL 0x1C16F20
	0x039CFEC8 BL 0x1C16F20
	0x039CFECC BL 0x1C16F20
	0x039CFED0 BL 0x1C16F20
	0x039CFED4 BL 0x1C16F20
	0x039CFED8 BL 0x1C16F20
	0x039CFEDC BL 0x1C16F20
	0x039CFEE0 BL 0x1C16F20
	0x039CFEE4 BL 0x1C16F20
	0x039CFEE8 BL 0x1C16F20
	0x039CFEEC BL 0x1C16F20
	0x039CFEF0 BL 0x1C16F20
	0x039CFEF4 BL 0x1C16F20
	0x039CFEF8 BL 0x1C16F20
	0x039CFEFC BL 0x1C16F20
	0x039CFF00 BL 0x1C16F20
	0x039CFF04 BL 0x1C16F20
	0x039CFF08 BL 0x1C16F20
	0x039CFF0C BL 0x1C16F20
	0x039CFF10 BL 0x1C16F20
	0x039CFF14 BL 0x1C16F20
	0x039CFF18 BL 0x1C16F20
	0x039CFF1C BL 0x1C16F20
	0x039CFF20 BL 0x1C16F20
	0x039CFF24 BL 0x1C16F20
	0x039CFF28 BL 0x1C16F20
	0x039CFF2C BL 0x1C16F20
	0x039CFF30 BL 0x1C16F20
	0x039CFF34 BL 0x1C16F20
	0x039CFF38 BL 0x1C16F20
	0x039CFF3C BL 0x1C16F20
	0x039CFF40 BL 0x1C16F20
	0x039CFF44 BL 0x1C16F20
	0x039CFF48 BL 0x1C16F20
	0x039CFF4C BL 0x1C16F20
	0x039CFF50 BL 0x1C16F20
	0x039CFF54 BL 0x1C16F20
	0x039CFF58 BL 0x1C16F20
	0x039CFF5C BL 0x1C16F20
	0x039CFF60 BL 0x1C16F20
	0x039CFF64 BL 0x1C16F20
	0x039CFF68 BL 0x1C16F20
	0x039CFF6C BL 0x1C16F20
	0x039CFF70 BL 0x1C16F20
	0x039CFF74 BL 0x1C16F20
	0x039CFF78 BL 0x1C16F20
	0x039CFF7C BL 0x1C16F20
	0x039CFF80 BL 0x1C16F20
	0x039CFF84 BL 0x1C16F20
	0x039CFF88 BL 0x1C16F20
	0x039CFF8C BL 0x1C16F20
	0x039CFF90 BL 0x1C16F20
	0x039CFF94 BL 0x1C16F20
	0x039CFF98 BL 0x1C16F20
	0x039CFF9C BL 0x1C16F20
	0x039CFFA0 BL 0x1C16F20
	0x039CFFA4 BL 0x1C16F20
	0x039CFFA8 BL 0x1C16F20
	0x039CFFAC BL 0x1C16F20
	0x039CFFB0 BL 0x1C16F20
	0x039CFFB4 BL 0x1C16F20
	0x039CFFB8 BL 0x1C16F20
	0x039CFFBC BL 0x1C16F20
	0x039CFFC0 BL 0x1C16F20
	0x039CFFC4 BL 0x1C16F20
	0x039CFFC8 BL 0x1C16F20
	0x039CFFCC BL 0x1C16F20
	0x039CFFD0 BL 0x1C16F20
	0x039CFFD4 BL 0x1C16F20
	0x039CFFD8 BL 0x1C16F20
	0x039CFFDC BL 0x1C16F20
	0x039CFFE0 BL 0x1C16F20
	0x039CFFE4 B 0x39D0344
	0x039CFFE8 B 0x39D0344
	0x039CFFEC B 0x39D0344
	0x039CFFF0 B 0x39D0344
	0x039CFFF4 B 0x39D0344
	0x039CFFF8 B 0x39D0344
	0x039CFFFC B 0x39D0344
	0x039D0000 B 0x39D0344
	0x039D0004 B 0x39D033C
	0x039D0008 B 0x39D0344
	0x039D000C B 0x39D0344
	0x039D0010 B 0x39D0344
	0x039D0014 B 0x39D033C
	0x039D0018 B 0x39D0344
	0x039D001C B 0x39D0344
	0x039D0020 B 0x39D0344
	0x039D0024 B 0x39D0344
	0x039D0028 B 0x39D0344
	0x039D002C B 0x39D0344
	0x039D0030 B 0x39D0344
	0x039D0034 B 0x39D0344
	0x039D0038 B 0x39D0344
	0x039D003C B 0x39D033C
	0x039D0040 B 0x39D0344
	0x039D0044 B 0x39D033C
	0x039D0048 B 0x39D033C
	0x039D004C B 0x39D033C
	0x039D0050 B 0x39D0344
	0x039D0054 B 0x39D0344
	0x039D0058 B 0x39D0344
	0x039D005C B 0x39D0344
	0x039D0060 B 0x39D0344
	0x039D0064 B 0x39D0344
	0x039D0068 B 0x39D0344
	0x039D006C B 0x39D033C
	0x039D0070 B 0x39D033C
	0x039D0074 B 0x39D033C
	0x039D0078 B 0x39D033C
	0x039D007C B 0x39D0344
	0x039D0080 B 0x39D0344
	0x039D0084 B 0x39D0344
	0x039D0088 B 0x39D0344
	0x039D008C B 0x39D0344
	0x039D0090 B 0x39D0344
	0x039D0094 B 0x39D0344
	0x039D0098 B 0x39D0344
	0x039D009C B 0x39D0344
	0x039D00A0 B 0x39D0344
	0x039D00A4 B 0x39D033C
	0x039D00A8 B 0x39D033C
	0x039D00AC B 0x39D033C
	0x039D00B0 B 0x39D0344
	0x039D00B4 B 0x39D0344
	0x039D00B8 B 0x39D0344
	0x039D00BC B 0x39D0344
	0x039D00C0 B 0x39D033C
	0x039D00C4 B 0x39D0344
	0x039D00C8 B 0x39D0344
	0x039D00CC B 0x39D033C
	0x039D00D0 B 0x39D033C
	0x039D00D4 B 0x39D033C
	0x039D00D8 B 0x39D033C
	0x039D00DC B 0x39D033C
	0x039D00E0 B 0x39D033C
	0x039D00E4 B 0x39D033C
	0x039D00E8 B 0x39D033C
	0x039D00EC B 0x39D033C
	0x039D00F0 B 0x39D033C
	0x039D00F4 B 0x39D033C
	0x039D00F8 B 0x39D0344
	0x039D00FC B 0x39D0344
	0x039D0100 B 0x39D0344
	0x039D0104 B 0x39D0344
	0x039D0108 B 0x39D0344
	0x039D010C B 0x39D033C
	0x039D0110 B 0x39D033C
	0x039D0114 B 0x39D033C
	0x039D0118 B 0x39D033C
	0x039D011C B 0x39D0344
	0x039D0120 B 0x39D0344
	0x039D0124 B 0x39D0344
	0x039D0128 B 0x39D0344
	0x039D012C B 0x39D033C
	0x039D0130 B 0x39D033C
	0x039D0134 B 0x39D0344
	0x039D0138 B 0x39D0344
	0x039D013C B 0x39D0344
	0x039D0140 B 0x39D0344
	0x039D0144 B 0x39D0344
	0x039D0148 B 0x39D0344
	0x039D014C B 0x39D0344
	0x039D0150 B 0x39D0344
	0x039D0154 B 0x39D0344
	0x039D0158 B 0x39D0344
	0x039D015C B 0x39D0344
	0x039D0160 B 0x39D0344
	0x039D0164 B 0x39D033C
	0x039D0168 B 0x39D0344
	0x039D016C B 0x39D0344
	0x039D0170 B 0x39D0344
	0x039D0174 B 0x39D0344
	0x039D0178 B 0x39D0344
	0x039D017C B 0x39D0344
	0x039D0180 B 0x39D0344
	0x039D0184 B 0x39D0344
	0x039D0188 B 0x39D033C
	0x039D018C B 0x39D033C
	0x039D0190 B 0x39D033C
	0x039D0194 B 0x39D033C
	0x039D0198 B 0x39D033C
	0x039D019C B 0x39D033C
	0x039D01A0 B 0x39D033C
	0x039D01A4 B 0x39D033C
	0x039D01A8 B 0x39D033C
	0x039D01AC B 0x39D033C
	0x039D01B0 B 0x39D033C
	0x039D01B4 B 0x39D033C
	0x039D01B8 B 0x39D033C
	0x039D01BC B 0x39D033C
	0x039D01C0 B 0x39D033C
	0x039D01C4 B 0x39D033C
	0x039D01C8 B 0x39D033C
	0x039D01CC B 0x39D033C
	0x039D01D0 B 0x39D033C
	0x039D01D4 B 0x39D033C
	0x039D01D8 B 0x39D033C
	0x039D01DC B 0x39D033C
	0x039D01E0 B 0x39D0344
	0x039D01E4 B 0x39D033C
	0x039D01E8 B 0x39D033C
	0x039D01EC B 0x39D033C
	0x039D01F0 B 0x39D033C
	0x039D01F4 B 0x39D033C
	0x039D01F8 B 0x39D0344
	0x039D01FC B 0x39D0344
	0x039D0200 B 0x39D0344
	0x039D0204 B 0x39D0344
	0x039D0208 B 0x39D0344
	0x039D020C B 0x39D0344
	0x039D0210 B 0x39D0344
	0x039D0214 B 0x39D0344
	0x039D0218 B 0x39D0344
	0x039D021C B 0x39D0344
	0x039D0220 B 0x39D0344
	0x039D0224 B 0x39D0344
	0x039D0228 B 0x39D0344
	0x039D022C B 0x39D0344
	0x039D0230 B 0x39D0344
	0x039D0234 B 0x39D0344
	0x039D0238 B 0x39D0344
	0x039D023C B 0x39D0344
	0x039D0240 B 0x39D0344
	0x039D0244 B 0x39D0344
	0x039D0248 B 0x39D0344
	0x039D024C B 0x39D0344
	0x039D0250 B 0x39D0344
	0x039D0254 B 0x39D0344
	0x039D0258 B 0x39D0344
	0x039D025C B 0x39D0344
	0x039D0260 B 0x39D0344
	0x039D0264 B 0x39D0344
	0x039D0268 B 0x39D0344
	0x039D026C B 0x39D0344
	0x039D0270 B 0x39D0344
	0x039D0274 B 0x39D0344
	0x039D0278 B 0x39D0344
	0x039D027C B 0x39D0344
	0x039D0280 B 0x39D0344
	0x039D0284 B 0x39D0344
	0x039D0288 B 0x39D0344
	0x039D028C B 0x39D0344
	0x039D0290 B 0x39D0344
	0x039D0294 B 0x39D0344
	0x039D0298 B 0x39D033C
	0x039D029C B 0x39D033C
	0x039D02A0 B 0x39D033C
	0x039D02A4 B 0x39D033C
	0x039D02A8 B 0x39D033C
	0x039D02AC B 0x39D033C
	0x039D02B0 B 0x39D033C
	0x039D02B4 B 0x39D033C
	0x039D02B8 B 0x39D033C
	0x039D02BC B 0x39D033C
	0x039D02C0 B 0x39D033C
	0x039D02C4 B 0x39D033C
	0x039D02C8 B 0x39D033C
	0x039D02CC B 0x39D033C
	0x039D02D0 B 0x39D033C
	0x039D02D4 B 0x39D033C
	0x039D02D8 B 0x39D033C
	0x039D02DC B 0x39D033C
	0x039D02E0 B 0x39D033C
	0x039D02E4 B 0x39D033C
	0x039D02E8 B 0x39D033C
	0x039D02EC B 0x39D033C
	0x039D02F0 B 0x39D033C
	0x039D02F4 B 0x39D033C
	0x039D02F8 B 0x39D033C
	0x039D02FC B 0x39D033C
	0x039D0300 B 0x39D033C
	0x039D0304 B 0x39D033C
	0x039D0308 B 0x39D033C
	0x039D030C B 0x39D033C
	0x039D0310 B 0x39D033C
	0x039D0314 B 0x39D033C
	0x039D0318 B 0x39D033C
	0x039D031C B 0x39D033C
	0x039D0320 B 0x39D033C
	0x039D0324 B 0x39D033C
	0x039D0328 B 0x39D033C
	0x039D032C B 0x39D033C
	0x039D0330 B 0x39D033C
	0x039D0334 B 0x39D033C
	0x039D0338 B 0x39D033C
	0x039D033C MOV X19, X0
	0x039D0340 B 0x39D0348
	0x039D0344 MOV X19, X0
	0x039D0348 CMP W1, 0x1
	0x039D034C B.NE 0x39D0380
	0x039D0350 MOV X0, X19
	0x039D0354 BL 0x3EB1AD0
	0x039D0358 LDR X20, [X0]
	0x039D035C BL 0x3EB1AE0
	0x039D0360 ADRP X8, 0x782000
	0x039D0364 LDR X8, [X8 + 0xDF8]
	0x039D0368 ADD X0, X31, 0x320
	0x039D036C LDR X1, [X8]
	0x039D0370 BL 0x2BC434C
	0x039D0374 CBZ X20, 0x39CFE90
	0x039D0378 MOV X0, X20
	0x039D037C BL 0x1C16F18
	0x039D0380 MOV X20, X31
	0x039D0384 B 0x39D038C
	0x039D0388 MOV X19, X0
	0x039D038C ADRP X8, 0x782000
	0x039D0390 LDR X8, [X8 + 0xDF8]
	0x039D0394 LDR X1, [X8]
	0x039D0398 ADD X0, X31, 0x320
	0x039D039C BL 0x2BC434C
	0x039D03A0 CBNZ X20, 0x39D03AC
	0x039D03A4 MOV X0, X19
	0x039D03A8 BL 0x1D2C690
	0x039D03AC MOV X0, X20
	0x039D03B0 BL 0x1C16F18
	0x039D03B4 BL 0x1990590
	0x039D03B8 SUB X31, X31, 0x80
	0x039D03BC STP D11, D10, [X31 + 0x20]
	0x039D03C0 STP D9, D8, [X31 + 0x30]
	0x039D03C4 STR X30, [X31 + 0x40]
	0x039D03C8 STP X24, X23, [X31 + 0x50]
	0x039D03CC STP X22, X21, [X31 + 0x60]
	0x039D03D0 STP X20, X19, [X31 + 0x70]
	0x039D03D4 ADRP X23, 0xA11000
	0x039D03D8 ADRP X24, 0x782000
	0x039D03DC LDRB W8, [X23 + 0xD0D]
	0x039D03E0 LDR X24, [X24 + 0xD98]
	0x039D03E4 MOV X19, X3
	0x039D03E8 MOV X20, X2
	0x039D03EC MOV X22, X1
	0x039D03F0 MOV X21, X0
	0x039D03F4 MOV V8.16B, V5.16B
	0x039D03F8 MOV V9.16B, V4.16B
	0x039D03FC MOV V10.16B, V3.16B
	0x039D0400 MOV V11.16B, V2.16B
	0x039D0404 TBNZ X8, 0x0, 0x39D0424
	0x039D0408 ADRP X0, 0x782000
	0x039D040C LDR X0, [X0 + 0xD98]
	0x039D0410 STP V0, V1, [X31]
	0x039D0414 BL 0x1C16CF4
	0x039D0418 LDP V0, V1, [X31]
	0x039D041C MOVZ W8, 0x1
	0x039D0420 STRB W8, [X23 + 0xD0D]
	0x039D0424 LDR X0, [X24]
	0x039D0428 LDR W8, [X0 + 0xE0]
	0x039D042C CBNZ W8, 0x39D043C
	0x039D0430 STP V0, V1, [X31]
	0x039D0434 BL 0x1C16DFC
	0x039D0438 LDP V0, V1, [X31]
	0x039D043C LDR X8, [X20]
	0x039D0440 CBZ X8, 0x39D0564
	0x039D0444 LDRB W9, [X8 + 0xC8]
	0x039D0448 CBZ W9, 0x39D04C0
	0x039D044C LDR V5, [X8 + 0x18]
	0x039D0450 LDR V10, [X22]
	0x039D0454 MOV V4.16B, V0.16B
	0x039D0458 LDUR V2, [X8 + 0x24]
	0x039D045C ADRP X22, 0xA09000
	0x039D0460 MOV V4.S[1], V1.S[0]
	0x039D0464 LDRB W8, [X22 + 0x818]
	0x039D0468 FADD V3.2S, V0.2S, V5.2S
	0x039D046C FSUB V0.2S, V4.2S, V5.2S
	0x039D0470 MOV V3.S[1], V0.S[1]
	0x00000000 INVALID
	0x039D0478 CBNZ W8, 0x39D0490
	0x039D047C ADRP X0, 0x723000
	0x039D0480 LDR X0, [X0 + 0x5A8]
	0x039D0484 BL 0x1C16CF4
	0x039D0488 MOVZ W8, 0x1
	0x039D048C STRB W8, [X22 + 0x818]
	0x039D0490 ADRP X8, 0x723000
	0x039D0494 LDR X8, [X8 + 0x5A8]
	0x039D0498 FADD V10.2S, V10.2S, V11.2S
	0x039D049C LDR X0, [X8]
	0x039D04A0 LDR W8, [X0 + 0xE0]
	0x039D04A4 CBNZ W8, 0x39D04AC
	0x039D04A8 BL 0x1C16DFC
	0x00000000 INVALID
	0x039D04B0 FADDP S0, V0.2S
	0x039D04B4 FSQRT S0, S0
	0x039D04B8 CBNZ X21, 0x39D04E8
	0x039D04BC B 0x39D0564
	0x039D04C0 FSUB S0, S0, S11
	0x039D04C4 FSUB S1, S1, S10
	0x039D04C8 FMOV S2, 0.5
	0x039D04CC FMUL S0, S0, S2
	0x039D04D0 FMUL S1, S1, S2
	0x039D04D4 FABS S0, S0
	0x039D04D8 FABS S1, S1
	0x039D04DC FCMP S0, S1
	0x039D04E0 FCSEL S0, S0, S1, GT
	0x039D04E4 CBZ X21, 0x39D0564
	0x039D04E8 FMOV S10, 1
	0x039D04EC FMIN S0, S0, S10
	0x039D04F0 MOV X0, X21
	0x039D04F4 MOV X1, X31
	0x039D04F8 BL 0x3C00CC4
	0x039D04FC LDR X8, [X20]
	0x039D0500 FMIN S1, S0, S10
	0x039D0504 FCMP S0, 0x0
	0x039D0508 FMOV S0, W31
	0x039D050C FCSEL S1, S1, S0, PL
	0x039D0510 CBZ X8, 0x39D0564
	0x039D0514 LDP S2, S5, [X19 + 0xC]
	0x039D0518 LDP S3, S4, [X8 + 0xB8]
	0x039D051C FMAX S0, S1, S0
	0x039D0520 LDP X20, X19, [X31 + 0x70]
	0x039D0524 LDP X22, X21, [X31 + 0x60]
	0x039D0528 FMUL S1, S3, S2
	0x039D052C FMUL S2, S2, S4
	0x039D0530 FDIV S1, S1, S5
	0x039D0534 FSUB S2, S2, S8
	0x039D0538 FSUB S1, S1, S9
	0x039D053C FMUL S2, S0, S2
	0x039D0540 FMUL S0, S0, S1
	0x039D0544 FADD S0, S9, S0
	0x039D0548 FADD S1, S8, S2
	0x039D054C LDP X24, X23, [X31 + 0x50]
	0x039D0550 LDR X30, [X31 + 0x40]
	0x039D0554 LDP D9, D8, [X31 + 0x30]
	0x039D0558 LDP D11, D10, [X31 + 0x20]
	0x039D055C ADD X31, X31, 0x80
	0x039D0560 RET
	0x039D0564 BL 0x1C16F20
	0x039D0568 MOV X0, X31
	0x039D056C B 0x3C30968
	0x039D0570 STP D9, D8, [X31 - 0x20]!
	0x039D0574 STR X30, [X31 + 0x10]
	0x039D0578 ADRP X8, 0xFFFFFFFFFD11A000
	0x039D057C MOV V9.16B, V0.16B
	0x039D0580 LDR V0, [X8 + 0x104]
	0x039D0584 MOV V8.16B, V1.16B
	0x039D0588 FMOV S1, 0.5
	0x039D058C FMUL S0, S2, S0
	0x039D0590 FMUL S0, S0, S1
	0x039D0594 BL 0x3EB1E50
	0x039D0598 LDR X30, [X31 + 0x10]
	0x039D059C MOV V1.16B, V0.16B
	0x039D05A0 FDIV S0, S9, S8
	0x039D05A4 FMUL S0, S0, S1
	0x039D05A8 LDP D9, D8, [X31], #0x20
	0x039D05AC RET
	0x039D05B0 STP D13, D12, [X31 - 0x50]!
	0x039D05B4 STP D11, D10, [X31 + 0x10]
	0x039D05B8 STP D9, D8, [X31 + 0x20]
	0x039D05BC STR X30, [X31 + 0x30]
	0x039D05C0 STP X20, X19, [X31 + 0x40]
	0x039D05C4 ADRP X19, 0xA11000
	0x039D05C8 ADRP X20, 0x782000
	0x039D05CC LDRB W8, [X19 + 0xD0A]
	0x039D05D0 LDR X20, [X20 + 0xD98]
	0x039D05D4 MOV V8.16B, V3.16B
	0x039D05D8 MOV V11.16B, V2.16B
	0x039D05DC MOV V9.16B, V1.16B
	0x039D05E0 MOV V10.16B, V0.16B
	0x039D05E4 TBNZ X8, 0x0, 0x39D05FC
	0x039D05E8 ADRP X0, 0x782000
	0x039D05EC LDR X0, [X0 + 0xD98]
	0x039D05F0 BL 0x1C16CF4
	0x039D05F4 MOVZ W8, 0x1
	0x039D05F8 STRB W8, [X19 + 0xD0A]
	0x039D05FC LDR X0, [X20]
	0x039D0600 LDR W8, [X0 + 0xE0]
	0x039D0604 CBNZ W8, 0x39D060C
	0x039D0608 BL 0x1C16DFC
	0x039D060C ADRP X8, 0xFFFFFFFFFD11A000
	0x039D0610 LDR V0, [X8 + 0x104]
	0x039D0614 FMOV S1, 0.5
	0x039D0618 FMOV S12, 1
	0x039D061C FADD S13, S8, S12
	0x039D0620 FMUL S0, S11, S0
	0x039D0624 FMUL S0, S0, S1
	0x039D0628 BL 0x3EB1E50
	0x039D062C FDIV S1, S10, S9
	0x039D0630 FMUL S1, S1, S0
	0x039D0634 FMUL S2, S1, S1
	0x039D0638 FADD S2, S2, S12
	0x039D063C FSQRT S2, S2
	0x039D0640 FDIV S2, S12, S2
	0x039D0644 FADD S3, S2, S8
	0x039D0648 LDP X20, X19, [X31 + 0x40]
	0x039D064C LDR X30, [X31 + 0x30]
	0x039D0650 LDP D9, D8, [X31 + 0x20]
	0x039D0654 LDP D11, D10, [X31 + 0x10]
	0x039D0658 FMUL S1, S1, S2
	0x039D065C FMUL S2, S0, S2
	0x039D0660 FDIV S3, S13, S3
	0x039D0664 FMUL S0, S1, S3
	0x039D0668 FMUL S1, S2, S3
	0x039D066C LDP D13, D12, [X31], #0x50
	0x039D0670 RET
	0x039D0674 FMOV S3, 1
	0x039D0678 FMUL S4, S0, S0
	0x039D067C FADD S4, S4, S3
	0x039D0680 FSQRT S4, S4
	0x039D0684 FADD S5, S2, S3
	0x039D0688 FDIV S3, S3, S4
	0x039D068C FADD S2, S3, S2
	0x039D0690 FMUL S0, S0, S3
	0x039D0694 FMUL S1, S1, S3
	0x039D0698 FDIV S2, S5, S2
	0x039D069C FMUL S0, S0, S2
	0x039D06A0 FMUL S1, S1, S2
	0x039D06A4 RET
	0x039D06A8 STP X30, X25, [X31 - 0x40]!
	0x039D06AC STP X24, X23, [X31 + 0x10]
	0x039D06B0 STP X22, X21, [X31 + 0x20]
	0x039D06B4 STP X20, X19, [X31 + 0x30]
	0x039D06B8 ADRP X25, 0xA11000
	0x039D06BC ADRP X20, 0x782000
	0x039D06C0 ADRP X19, 0x729000
	0x039D06C4 ADRP X24, 0x782000
	0x039D06C8 ADRP X23, 0x782000
	0x039D06CC ADRP X22, 0x724000
	0x039D06D0 ADRP X21, 0x727000
	0x039D06D4 LDR X20, [X20 + 0xD98]
	0x039D06D8 LDRB W8, [X25 + 0xD0B]
	0x039D06DC LDR X19, [X19 + 0xCC0]
	0x039D06E0 LDR X24, [X24 + 0xE68]
	0x039D06E4 LDR X23, [X23 + 0xE70]
	0x039D06E8 LDR X22, [X22 + 0xE30]
	0x039D06EC LDR X21, [X21 + 0xB70]
	0x039D06F0 TBNZ X8, 0x0, 0x39D0744
	0x039D06F4 ADRP X0, 0x782000
	0x039D06F8 LDR X0, [X0 + 0xD98]
	0x039D06FC BL 0x1C16CF4
	0x039D0700 ADRP X0, 0x727000
	0x039D0704 LDR X0, [X0 + 0xB70]
	0x039D0708 BL 0x1C16CF4
	0x039D070C ADRP X0, 0x782000
	0x039D0710 LDR X0, [X0 + 0xE70]
	0x039D0714 BL 0x1C16CF4
	0x039D0718 ADRP X0, 0x724000
	0x039D071C LDR X0, [X0 + 0xE30]
	0x039D0720 BL 0x1C16CF4
	0x039D0724 ADRP X0, 0x782000
	0x039D0728 LDR X0, [X0 + 0xE68]
	0x039D072C BL 0x1C16CF4
	0x039D0730 ADRP X0, 0x729000
	0x039D0734 LDR X0, [X0 + 0xCC0]
	0x039D0738 BL 0x1C16CF4
	0x039D073C MOVZ W8, 0x1
	0x039D0740 STRB W8, [X25 + 0xD0B]
	0x039D0744 LDR X8, [X20]
	0x039D0748 LDR X8, [X8 + 0xB8]
	0x039D074C STR X31, [X8]
	0x039D0750 LDR X0, [X19]
	0x039D0754 BL 0x1C16F10
	0x039D0758 MOV X1, X31
	0x039D075C MOV X19, X0
	0x039D0760 BL 0x33BDD8C
	0x039D0764 LDR X8, [X20]
	0x039D0768 LDR X8, [X8 + 0xB8]
	0x039D076C STR X19, [X8 + 0x8]
	0x039D0770 LDR X0, [X24]
	0x039D0774 BL 0x1C16F10
	0x039D0778 LDR X1, [X23]
	0x039D077C MOV X19, X0
	0x039D0780 BL 0x301B7C4
	0x039D0784 LDR X8, [X20]
	0x039D0788 LDR X8, [X8 + 0xB8]
	0x039D078C STR X19, [X8 + 0x10]
	0x039D0790 LDR X0, [X22]
	0x039D0794 BL 0x1C16F10
	0x039D0798 LDR X1, [X21]
	0x039D079C MOV X19, X0
	0x039D07A0 BL 0x2FDBF14
	0x039D07A4 LDR X8, [X20]
	0x039D07A8 ADRP X9, 0xFFFFFFFFFD11D000
	0x039D07AC LDR V0, [X9 + 0xAB0]
	0x039D07B0 MOVZ W9, 0x1
	0x039D07B4 LDR X8, [X8 + 0xB8]
	0x039D07B8 MOVZ W0, 0x31
	0x039D07BC MOVZ W1, 0x4
	0x039D07C0 MOV X2, X31
	0x039D07C4 STR X19, [X8 + 0x18]
	0x039D07C8 STR D0, [X8 + 0x20]
	0x039D07CC STR W9, [X8 + 0x28]
	0x039D07D0 STR X31, [X8 + 0x30]
	0x039D07D4 STR W31, [X8 + 0x38]
	0x039D07D8 BL 0x3C3C4BC
	0x039D07DC LDR X8, [X20]
	0x039D07E0 LDP X20, X19, [X31 + 0x30]
	0x039D07E4 LDP X22, X21, [X31 + 0x20]
	0x039D07E8 LDP X24, X23, [X31 + 0x10]
	0x039D07EC LDR X8, [X8 + 0xB8]
	0x039D07F0 AND W9, W0, 0x1
	0x039D07F4 STRB W9, [X8 + 0x3C]
	0x039D07F8 LDP X30, X25, [X31], #0x40
	0x039D07FC RET
	0x039D0800 STP D9, D8, [X31 - 0x20]!
	0x039D0804 STR X30, [X31 + 0x10]
	0x039D0808 MOV V9.16B, V0.16B
	0x039D080C FDIV S0, S1, S0
	0x039D0810 MOV V8.16B, V1.16B
	0x039D0814 BL 0x3EB1BE0
	0x039D0818 FMUL S1, S9, S9
	0x039D081C FMUL S2, S8, S8
	0x039D0820 FADD S2, S1, S2
	0x039D0824 LDR X30, [X31 + 0x10]
	0x039D0828 FMUL S2, S2, S9
	0x039D082C FDIV S2, S8, S2
	0x039D0830 FDIV S0, S0, S1
	0x039D0834 FADD S0, S2, S0
	0x039D0838 LDP D9, D8, [X31], #0x20
	0x039D083C RET
	0x039D0840 FMUL S1, S1, S1
	0x039D0844 FMUL S2, S0, S0
	0x039D0848 FADD S2, S2, S1
	0x039D084C FMUL S0, S2, S0
	0x039D0850 FDIV S0, S1, S0
	0x039D0854 RET
	0x039D0858 STP X30, X21, [X31 - 0x20]!
	0x039D085C STP X20, X19, [X31 + 0x10]
	0x039D0860 ADRP X21, 0xA11000
	0x039D0864 LDRB W8, [X21 + 0xD0E]
	0x039D0868 MOV X19, X1
	0x039D086C MOV X20, X0
	0x039D0870 TBNZ X8, 0x0, 0x39D0888
	0x039D0874 ADRP X0, 0x723000
	0x039D0878 LDR X0, [X0 + 0x598]
	0x039D087C BL 0x1C16CF4
	0x039D0880 MOVZ W8, 0x1
	0x039D0884 STRB W8, [X21 + 0xD0E]
	0x039D0888 CBZ X19, 0x39D08C4
	0x039D088C ADRP X8, 0x723000
	0x039D0890 LDR X8, [X8 + 0x598]
	0x039D0894 LDR X19, [X19 + 0x18]
	0x039D0898 LDR X20, [X20 + 0x10]
	0x039D089C LDR X0, [X8]
	0x039D08A0 LDR W8, [X0 + 0xE0]
	0x039D08A4 CBNZ W8, 0x39D08AC
	0x039D08A8 BL 0x1C16DFC
	0x039D08AC MOV X0, X19
	0x039D08B0 MOV X1, X20
	0x039D08B4 LDP X20, X19, [X31 + 0x10]
	0x039D08B8 MOV X2, X31
	0x039D08BC LDP X30, X21, [X31], #0x20
	0x039D08C0 B 0x3C3883C
	0x039D08C4 BL 0x1C16F20
	0x039D08C8 STP X30, X21, [X31 - 0x20]!
	0x039D08CC STP X20, X19, [X31 + 0x10]
	0x039D08D0 ADRP X21, 0xA11000
	0x039D08D4 LDRB W8, [X21 + 0xD0F]
	0x039D08D8 MOV X19, X1
	0x039D08DC MOV X20, X0
	0x039D08E0 TBNZ X8, 0x0, 0x39D08F8
	0x039D08E4 ADRP X0, 0x723000
	0x039D08E8 LDR X0, [X0 + 0x598]
	0x039D08EC BL 0x1C16CF4
	0x039D08F0 MOVZ W8, 0x1
	0x039D08F4 STRB W8, [X21 + 0xD0F]
	0x039D08F8 CBZ X19, 0x39D0934
	0x039D08FC ADRP X8, 0x723000
	0x039D0900 LDR X8, [X8 + 0x598]
	0x039D0904 LDR X19, [X19 + 0x18]
	0x039D0908 LDR X20, [X20 + 0x10]
	0x039D090C LDR X0, [X8]
	0x039D0910 LDR W8, [X0 + 0xE0]
	0x039D0914 CBNZ W8, 0x39D091C
	0x039D0918 BL 0x1C16DFC
	0x039D091C MOV X0, X19
	0x039D0920 MOV X1, X20
	0x039D0924 LDP X20, X19, [X31 + 0x10]
	0x039D0928 MOV X2, X31
	0x039D092C LDP X30, X21, [X31], #0x20
	0x039D0930 B 0x3C3883C
	0x039D0934 BL 0x1C16F20
	0x039D0938 LDR X0, [X0 + 0x20]
	0x039D093C RET
	0x039D0940 STR X1, [X0 + 0x20]
	0x039D0944 B 0x39D0948
	0x039D0948 STP X30, X21, [X31 - 0x20]!
	0x039D094C STP X20, X19, [X31 + 0x10]
	0x039D0950 ADRP X20, 0xA11000
	0x039D0954 LDRB W8, [X20 + 0xD13]
	0x039D0958 MOV X19, X0
	0x039D095C TBNZ X8, 0x0, 0x39D0980
	0x039D0960 ADRP X0, 0x782000
	0x039D0964 LDR X0, [X0 + 0xD98]
	0x039D0968 BL 0x1C16CF4
	0x039D096C ADRP X0, 0x723000
	0x039D0970 LDR X0, [X0 + 0x598]
	0x039D0974 BL 0x1C16CF4
	0x039D0978 MOVZ W8, 0x1
	0x039D097C STRB W8, [X20 + 0xD13]
	0x039D0980 ADRP X21, 0x782000
	0x039D0984 LDR X21, [X21 + 0xD98]
	0x039D0988 MOV X0, X19
	0x039D098C MOV X1, X31
	0x039D0990 BL 0x3C32454
	0x039D0994 TBZ X0, 0x0, 0x39D09F0
	0x039D0998 ADRP X8, 0x723000
	0x039D099C LDR X8, [X8 + 0x598]
	0x039D09A0 LDR X20, [X19 + 0x20]
	0x039D09A4 LDR X0, [X8]
	0x039D09A8 LDR W8, [X0 + 0xE0]
	0x039D09AC CBNZ W8, 0x39D09B4
	0x039D09B0 BL 0x1C16DFC
	0x039D09B4 MOV X0, X20
	0x039D09B8 MOV X1, X31
	0x039D09BC MOV X2, X31
	0x039D09C0 BL 0x3C354F8
	0x039D09C4 TBZ X0, 0x0, 0x39D09F0
	0x039D09C8 LDR X0, [X21]
	0x039D09CC LDR W8, [X0 + 0xE0]
	0x039D09D0 CBNZ W8, 0x39D09D8
	0x039D09D4 BL 0x1C16DFC
	0x039D09D8 BL 0x39CB4D4
	0x039D09DC CBZ X0, 0x39D0A18
	0x039D09E0 MOV X1, X19
	0x039D09E4 LDP X20, X19, [X31 + 0x10]
	0x039D09E8 LDP X30, X21, [X31], #0x20
	0x039D09EC B 0x39CB848
	0x039D09F0 LDR X0, [X21]
	0x039D09F4 LDR W8, [X0 + 0xE0]
	0x039D09F8 CBNZ W8, 0x39D0A00
	0x039D09FC BL 0x1C16DFC
	0x039D0A00 BL 0x39CB4D4
	0x039D0A04 CBZ X0, 0x39D0A18
	0x039D0A08 MOV X1, X19
	0x039D0A0C LDP X20, X19, [X31 + 0x10]
	0x039D0A10 LDP X30, X21, [X31], #0x20
	0x039D0A14 B 0x39CBA58
	0x039D0A18 BL 0x1C16F20
	0x039D0A1C STP X30, X21, [X31 - 0x20]!
	0x039D0A20 STP X20, X19, [X31 + 0x10]
	0x039D0A24 ADRP X21, 0xA11000
	0x039D0A28 ADRP X20, 0x723000
	0x039D0A2C LDRB W8, [X21 + 0xD11]
	0x039D0A30 LDR X20, [X20 + 0x598]
	0x039D0A34 MOV X19, X0
	0x039D0A38 TBNZ X8, 0x0, 0x39D0A5C
	0x039D0A3C ADRP X0, 0x782000
	0x039D0A40 LDR X0, [X0 + 0xD98]
	0x039D0A44 BL 0x1C16CF4
	0x039D0A48 ADRP X0, 0x723000
	0x039D0A4C LDR X0, [X0 + 0x598]
	0x039D0A50 BL 0x1C16CF4
	0x039D0A54 MOVZ W8, 0x1
	0x039D0A58 STRB W8, [X21 + 0xD11]
	0x039D0A5C LDR X0, [X20]
	0x039D0A60 ADRP X21, 0x782000
	0x039D0A64 LDR X20, [X19 + 0x20]
	0x039D0A68 LDR W8, [X0 + 0xE0]
	0x039D0A6C LDR X21, [X21 + 0xD98]
	0x039D0A70 CBNZ W8, 0x39D0A78
	0x039D0A74 BL 0x1C16DFC
	0x039D0A78 MOV X0, X20
	0x039D0A7C MOV X1, X31
	0x039D0A80 BL 0x3C38948
	0x039D0A84 LDR X8, [X21]
	0x039D0A88 MOV W20, W0
	0x039D0A8C LDR W9, [X8 + 0xE0]
	0x039D0A90 CBNZ W9, 0x39D0A9C
	0x039D0A94 MOV X0, X8
	0x039D0A98 BL 0x1C16DFC
	0x039D0A9C BL 0x39CB4D4
	0x039D0AA0 CBZ X0, 0x39D0AC4
	0x039D0AA4 MOV X1, X19
	0x039D0AA8 TBZ X20, 0x0, 0x39D0AB8
	0x039D0AAC LDP X20, X19, [X31 + 0x10]
	0x039D0AB0 LDP X30, X21, [X31], #0x20
	0x039D0AB4 B 0x39CB848
	0x039D0AB8 LDP X20, X19, [X31 + 0x10]
	0x039D0ABC LDP X30, X21, [X31], #0x20
	0x039D0AC0 B 0x39CBA58
	0x039D0AC4 BL 0x1C16F20
	0x039D0AC8 STP X30, X21, [X31 - 0x20]!
	0x039D0ACC STP X20, X19, [X31 + 0x10]
	0x039D0AD0 ADRP X20, 0xA11000
	0x039D0AD4 ADRP X21, 0x782000
	0x039D0AD8 LDRB W8, [X20 + 0xD12]
	0x039D0ADC LDR X21, [X21 + 0xD98]
	0x039D0AE0 MOV X19, X0
	0x039D0AE4 TBNZ X8, 0x0, 0x39D0AFC
	0x039D0AE8 ADRP X0, 0x782000
	0x039D0AEC LDR X0, [X0 + 0xD98]
	0x039D0AF0 BL 0x1C16CF4
	0x039D0AF4 MOVZ W8, 0x1
	0x039D0AF8 STRB W8, [X20 + 0xD12]
	0x039D0AFC LDR X0, [X21]
	0x039D0B00 LDR W8, [X0 + 0xE0]
	0x039D0B04 CBNZ W8, 0x39D0B0C
	0x039D0B08 BL 0x1C16DFC
	0x039D0B0C BL 0x39CB4D4
	0x039D0B10 CBZ X0, 0x39D0B24
	0x039D0B14 MOV X1, X19
	0x039D0B18 LDP X20, X19, [X31 + 0x10]
	0x039D0B1C LDP X30, X21, [X31], #0x20
	0x039D0B20 B 0x39CBA58
	0x039D0B24 BL 0x1C16F20
	0x039D0B28 SUB X31, X31, 0x1D0
	0x039D0B2C STP X29, X30, [X31 + 0x190]
	0x039D0B30 STP X24, X23, [X31 + 0x1A0]
	0x039D0B34 STP X22, X21, [X31 + 0x1B0]
	0x039D0B38 STP X20, X19, [X31 + 0x1C0]
	0x039D0B3C ADRP X20, 0xA11000
	0x039D0B40 ADRP X22, 0x72A000
	0x039D0B44 LDRB W8, [X20 + 0xD14]
	0x039D0B48 LDR X22, [X22 + 0x790]
	0x039D0B4C MOV X19, X0
	0x039D0B50 TBNZ X8, 0x0, 0x39D0B80
	0x039D0B54 ADRP X0, 0x72A000
	0x039D0B58 LDR X0, [X0 + 0x730]
	0x039D0B5C BL 0x1C16CF4
	0x039D0B60 ADRP X0, 0x72A000
	0x039D0B64 LDR X0, [X0 + 0x790]
	0x039D0B68 BL 0x1C16CF4
	0x039D0B6C ADRP X0, 0x782000
	0x039D0B70 LDR X0, [X0 + 0xE78]
	0x039D0B74 BL 0x1C16CF4
	0x039D0B78 MOVZ W8, 0x1
	0x039D0B7C STRB W8, [X20 + 0xD14]
	0x039D0B80 ADRP X8, 0xFFFFFFFFFD11E000
	0x039D0B84 LDR V0, [X8 + 0x3E8]
	0x039D0B88 MOVZ W8, 0x42C80000
	0x039D0B8C STR X31, [X31 + 0x188]
	0x039D0B90 STR W8, [X19 + 0x30]
	0x039D0B94 STR D0, [X19 + 0x28]
	0x039D0B98 LDR X0, [X22]
	0x039D0B9C MOVZ W1, 0x2
	0x039D0BA0 BL 0x1C16D6C
	0x039D0BA4 MOV X20, X0
	0x039D0BA8 ADD X0, X31, 0x168
	0x039D0BAC FMOV S0, W31
	0x039D0BB0 FMOV S1, 1
	0x039D0BB4 MOV X1, X31
	0x039D0BB8 STP X31, X31, [X31 + 0x168]
	0x039D0BBC STR W31, [X31 + 0x180]
	0x039D0BC0 STR X31, [X31 + 0x178]
	0x039D0BC4 BL 0x3C00A74
	0x039D0BC8 CBZ X20, 0x39D0E98
	0x039D0BCC ADD X24, X31, 0x80
	0x039D0BD0 LDUR V0, [X24 + 0xE8]
	0x039D0BD4 LDUR V1, [X24 + 0xF4]
	0x039D0BD8 STR V0, [X31 + 0x14]
	0x039D0BDC STUR V1, [X24 + 0xCC]
	0x039D0BE0 LDR W8, [X20 + 0x18]
	0x039D0BE4 CBZ W8, 0x39D0E94
	0x039D0BE8 LDUR V0, [X24 + 0xCC]
	0x039D0BEC LDR V1, [X31 + 0x14]
	0x039D0BF0 ADD X0, X31, 0x120
	0x039D0BF4 MOV X1, X31
	0x039D0BF8 STUR V0, [X20 + 0x2C]
	0x039D0BFC STR V1, [X20 + 0x2]
	0x039D0C00 FMOV S0, 1
	0x039D0C04 FMOV S1, W31
	0x039D0C08 STP X31, X31, [X31 + 0x120]
	0x039D0C0C STR W31, [X31 + 0x138]
	0x039D0C10 STR X31, [X31 + 0x130]
	0x039D0C14 BL 0x3C00A74
	0x039D0C18 LDUR V0, [X24 + 0xAC]
	0x039D0C1C LDR V1, [X31 + 0x12]
	0x039D0C20 STUR V0, [X24 + 0x8C]
	0x039D0C24 STR V1, [X31 + 0x10]
	0x039D0C28 LDR W8, [X20 + 0x18]
	0x039D0C2C CMP W8, 0x1
	0x039D0C30 B.LS 0x39D0E94
	0x039D0C34 LDUR V0, [X24 + 0x8C]
	0x039D0C38 LDR V1, [X31 + 0x10]
	0x039D0C3C ADRP X23, 0x72A000
	0x039D0C40 LDR X23, [X23 + 0x730]
	0x039D0C44 STUR V0, [X20 + 0x48]
	0x039D0C48 STUR V1, [X20 + 0x3C]
	0x039D0C4C LDR X0, [X23]
	0x039D0C50 BL 0x1C16F10
	0x039D0C54 MOV X1, X20
	0x039D0C58 MOV X2, X31
	0x039D0C5C MOV X21, X0
	0x039D0C60 BL 0x3C013D4
	0x039D0C64 STR X21, [X19 + 0x38]
	0x039D0C68 LDR X0, [X22]
	0x039D0C6C MOVZ W1, 0x2
	0x039D0C70 BL 0x1C16D6C
	0x039D0C74 MOV X20, X0
	0x039D0C78 ADD X0, X31, 0xE0
	0x039D0C7C FMOV S0, W31
	0x039D0C80 FMOV S1, 1
	0x039D0C84 MOV X1, X31
	0x039D0C88 STP X31, X31, [X31 + 0xE0]
	0x039D0C8C STR W31, [X31 + 0xF8]
	0x039D0C90 STR X31, [X31 + 0xF0]
	0x039D0C94 BL 0x3C00A74
	0x039D0C98 CBZ X20, 0x39D0E98
	0x039D0C9C LDR V0, [X31 + 0xE]
	0x039D0CA0 LDUR V1, [X24 + 0x6C]
	0x039D0CA4 STR V0, [X31 + 0xC]
	0x039D0CA8 STUR V1, [X24 + 0x4C]
	0x039D0CAC LDR W8, [X20 + 0x18]
	0x039D0CB0 CBZ W8, 0x39D0E94
	0x039D0CB4 LDUR V0, [X24 + 0x4C]
	0x039D0CB8 LDR V1, [X31 + 0xC]
	0x039D0CBC ADD X0, X31, 0xA0
	0x039D0CC0 MOV X1, X31
	0x039D0CC4 STUR V0, [X20 + 0x2C]
	0x039D0CC8 STR V1, [X20 + 0x2]
	0x039D0CCC FMOV S0, 1
	0x039D0CD0 FMOV S1, W31
	0x039D0CD4 STP X31, X31, [X31 + 0xA0]
	0x039D0CD8 STR W31, [X31 + 0xB8]
	0x039D0CDC STR X31, [X31 + 0xB0]
	0x039D0CE0 BL 0x3C00A74
	0x039D0CE4 LDUR V0, [X24 + 0x2C]
	0x039D0CE8 LDR V1, [X31 + 0xA]
	0x039D0CEC STUR V0, [X24 + 0xC]
	0x039D0CF0 STR V1, [X31 + 0x8]
	0x039D0CF4 LDR W8, [X20 + 0x18]
	0x039D0CF8 CMP W8, 0x1
	0x039D0CFC B.LS 0x39D0E94
	0x039D0D00 LDUR V0, [X24 + 0xC]
	0x039D0D04 LDR V1, [X31 + 0x8]
	0x039D0D08 STUR V0, [X20 + 0x48]
	0x039D0D0C STUR V1, [X20 + 0x3C]
	0x039D0D10 LDR X0, [X23]
	0x039D0D14 BL 0x1C16F10
	0x039D0D18 MOV X1, X20
	0x039D0D1C MOV X2, X31
	0x039D0D20 MOV X21, X0
	0x039D0D24 BL 0x3C013D4
	0x039D0D28 MOVZ W8, 0x1
	0x039D0D2C STR X21, [X19 + 0x40]
	0x039D0D30 STRB W8, [X19 + 0x48]
	0x039D0D34 LDR X0, [X22]
	0x039D0D38 MOVZ W1, 0x2
	0x039D0D3C BL 0x1C16D6C
	0x039D0D40 MOV X20, X0
	0x039D0D44 ADD X0, X31, 0x60
	0x039D0D48 FMOV S0, W31
	0x039D0D4C FMOV S1, 1
	0x039D0D50 MOV X1, X31
	0x039D0D54 STP X31, X31, [X31 + 0x60]
	0x039D0D58 STR W31, [X31 + 0x78]
	0x039D0D5C STR X31, [X31 + 0x70]
	0x039D0D60 BL 0x3C00A74
	0x039D0D64 CBZ X20, 0x39D0E98
	0x039D0D68 LDR V0, [X31 + 0x6]
	0x039D0D6C LDUR V1, [X31 + 0x6C]
	0x039D0D70 STR V0, [X31 + 0x4]
	0x039D0D74 STUR V1, [X31 + 0x4C]
	0x039D0D78 LDR W8, [X20 + 0x18]
	0x039D0D7C CBZ W8, 0x39D0E94
	0x039D0D80 LDUR V0, [X31 + 0x4C]
	0x039D0D84 LDR V1, [X31 + 0x4]
	0x039D0D88 ADD X0, X31, 0x20
	0x039D0D8C MOV X1, X31
	0x039D0D90 STUR V0, [X20 + 0x2C]
	0x039D0D94 STR V1, [X20 + 0x2]
	0x039D0D98 FMOV S0, 1
	0x039D0D9C FMOV S1, 1
	0x039D0DA0 STP X31, X31, [X31 + 0x20]
	0x039D0DA4 STR W31, [X31 + 0x38]
	0x039D0DA8 STR X31, [X31 + 0x30]
	0x039D0DAC BL 0x3C00A74
	0x039D0DB0 LDUR V0, [X31 + 0x2C]
	0x039D0DB4 LDR V1, [X31 + 0x2]
	0x039D0DB8 STUR V0, [X31 + 0xC]
	0x039D0DBC STR V1, [X31]
	0x039D0DC0 LDR W8, [X20 + 0x18]
	0x039D0DC4 CMP W8, 0x1
	0x039D0DC8 B.LS 0x39D0E94
	0x039D0DCC LDUR V0, [X31 + 0xC]
	0x039D0DD0 LDR V1, [X31]
	0x039D0DD4 ADRP X22, 0x782000
	0x039D0DD8 STUR V0, [X20 + 0x48]
	0x039D0DDC STUR V1, [X20 + 0x3C]
	0x039D0DE0 LDR X0, [X23]
	0x039D0DE4 LDR X22, [X22 + 0xE78]
	0x039D0DE8 BL 0x1C16F10
	0x039D0DEC MOV X1, X20
	0x039D0DF0 MOV X2, X31
	0x039D0DF4 MOV X21, X0
	0x039D0DF8 BL 0x3C013D4
	0x039D0DFC ADRP X9, 0xFFFFFFFFFD11E000
	0x039D0E00 LDR V0, [X9 + 0x98]
	0x039D0E04 MOVZ W8, 0xCCCD
	0x039D0E08 MOVK W8, 0x3DCC0000
	0x039D0E0C STR W8, [X19 + 0x5C]
	0x039D0E10 MOVZ W8, 0x20
	0x039D0E14 STR D0, [X19 + 0x68]
	0x039D0E18 FMOV S0, W31
	0x039D0E1C FMOV S1, W31
	0x039D0E20 FMOV S2, 1
	0x039D0E24 FMOV S3, 1
	0x039D0E28 MOV X0, X31
	0x039D0E2C STR X21, [X19 + 0x50]
	0x039D0E30 STR W8, [X19 + 0x64]
	0x039D0E34 BL 0x3C01298
	0x039D0E38 ADRP X8, 0xFFFFFFFFFD11E000
	0x039D0E3C MOV X20, X0
	0x039D0E40 LDR V0, [X8]
	0x039D0E44 LDR X0, [X22]
	0x039D0E48 STR D0, [X31 + 0x188]
	0x039D0E4C BL 0x1C16F10
	0x039D0E50 FMOV S0, 1
	0x039D0E54 ADD X3, X31, 0x188
	0x039D0E58 MOV X1, X20
	0x039D0E5C MOV W2, W31
	0x039D0E60 MOV X4, X31
	0x039D0E64 MOV X21, X0
	0x039D0E68 BL 0x39ECCD8
	0x039D0E6C MOV X0, X19
	0x039D0E70 MOV X1, X31
	0x039D0E74 STR X21, [X19 + 0x78]
	0x039D0E78 BL 0x3C36C30
	0x039D0E7C LDP X20, X19, [X31 + 0x1C0]
	0x039D0E80 LDP X22, X21, [X31 + 0x1B0]
	0x039D0E84 LDP X24, X23, [X31 + 0x1A0]
	0x039D0E88 LDP X29, X30, [X31 + 0x190]
	0x039D0E8C ADD X31, X31, 0x1D0
	0x039D0E90 RET
	0x039D0E94 BL 0x1C16F28
	0x039D0E98 BL 0x1C16F20
	0x039D0E9C STR X30, [X31 - 0x20]!
	0x039D0EA0 STP X20, X19, [X31 + 0x10]
	0x039D0EA4 ADRP X19, 0xA11000
	0x039D0EA8 ADRP X20, 0x782000
	0x039D0EAC LDRB W8, [X19 + 0xD15]
	0x039D0EB0 LDR X20, [X20 + 0xE38]
	0x039D0EB4 TBNZ X8, 0x0, 0x39D0ECC
	0x039D0EB8 ADRP X0, 0x782000
	0x039D0EBC LDR X0, [X0 + 0xE38]
	0x039D0EC0 BL 0x1C16CF4
	0x039D0EC4 MOVZ W8, 0x1
	0x039D0EC8 STRB W8, [X19 + 0xD15]
	0x039D0ECC LDR X8, [X20]
	0x039D0ED0 LDP X20, X19, [X31 + 0x10]
	0x039D0ED4 MOVZ W9, 0xE9A5
	0x039D0ED8 MOVK W9, 0x3D6B0000
	0x039D0EDC LDR X8, [X8 + 0xB8]
	0x039D0EE0 STR W9, [X8]
	0x039D0EE4 LDR X30, [X31], #0x20
	0x039D0EE8 RET
	0x039D0EEC STP X29, X30, [X31 - 0x50]!
	0x039D0EF0 STP X26, X25, [X31 + 0x10]
	0x039D0EF4 STP X24, X23, [X31 + 0x20]
	0x039D0EF8 STP X22, X21, [X31 + 0x30]
	0x039D0EFC STP X20, X19, [X31 + 0x40]
	0x039D0F00 SUB X31, X31, 0x270
	0x039D0F04 ADRP X20, 0xA11000
	0x039D0F08 LDRB W8, [X20 + 0xD16]
	0x039D0F0C MOV X19, X0
	0x039D0F10 TBNZ X8, 0x0, 0x39D0F58
	0x039D0F14 ADRP X0, 0x72A000
	0x039D0F18 LDR X0, [X0 + 0x730]
	0x039D0F1C BL 0x1C16CF4
	0x039D0F20 ADRP X0, 0x782000
	0x039D0F24 LDR X0, [X0 + 0xE80]
	0x039D0F28 BL 0x1C16CF4
	0x039D0F2C ADRP X0, 0x782000
	0x039D0F30 LDR X0, [X0 + 0xE88]
	0x039D0F34 BL 0x1C16CF4
	0x039D0F38 ADRP X0, 0x782000
	0x039D0F3C LDR X0, [X0 + 0xE90]
	0x039D0F40 BL 0x1C16CF4
	0x039D0F44 ADRP X0, 0x72A000
	0x039D0F48 LDR X0, [X0 + 0x790]
	0x039D0F4C BL 0x1C16CF4
	0x039D0F50 MOVZ W8, 0x1
	0x039D0F54 STRB W8, [X20 + 0xD16]
	0x039D0F58 ADRP X20, 0x782000
	0x039D0F5C ADRP X21, 0x782000
	0x039D0F60 LDR X20, [X20 + 0xE90]
	0x039D0F64 LDR X21, [X21 + 0xE88]
	0x039D0F68 MOV X0, X19
	0x039D0F6C MOV X1, X31
	0x039D0F70 BL 0x33BDD8C
	0x039D0F74 MOVZ W22, 0x1
	0x039D0F78 MOVZ W8, 0x3F800000
	0x039D0F7C FMOV V0.2S, 0x0
	0x039D0F80 STUR X31, [X19 + 0x1C]
	0x039D0F84 STUR X31, [X19 + 0x14]
	0x039D0F88 STR X31, [X19 + 0x30]
	0x039D0F8C STRB W22, [X19 + 0x10]
	0x039D0F90 STR W8, [X19 + 0x2C]
	0x039D0F94 STUR D0, [X19 + 0x24]
	0x039D0F98 STR W8, [X19 + 0x38]
	0x039D0F9C ADRP X23, 0xA11000
	0x039D0FA0 LDRB W8, [X23 + 0xA48]
	0x039D0FA4 CBNZ W8, 0x39D0FB8
	0x039D0FA8 ADRP X0, 0x72B000
	0x039D0FAC LDR X0, [X0 + 0xF08]
	0x039D0FB0 BL 0x1C16CF4
	0x039D0FB4 STRB W22, [X23 + 0xA48]
	0x039D0FB8 ADRP X24, 0x72B000
	0x039D0FBC LDR X24, [X24 + 0xF08]
	0x039D0FC0 ADRP X9, 0xFFFFFFFFFD11B000
	0x039D0FC4 LDR V0, [X9 + 0xD5]
	0x039D0FC8 LDR X8, [X24]
	0x039D0FCC LDR X8, [X8 + 0xB8]
	0x039D0FD0 LDR V1, [X8 + 0x8]
	0x039D0FD4 MOVZ W8, 0x5
	0x039D0FD8 STR W8, [X19 + 0x48]
	0x039D0FDC MOVZ W8, 0x3F000000
	0x039D0FE0 STR X8, [X19 + 0x60]
	0x039D0FE4 MOVZ X8, 0x3F800000
	0x039D0FE8 STR V0, [X19 + 0x5]
	0x039D0FEC STRB W31, [X19 + 0x44]
	0x039D0FF0 STRB W31, [X19 + 0x68]
	0x039D0FF4 STRB W22, [X19 + 0x71]
	0x039D0FF8 STR W22, [X19 + 0x6C]
	0x039D0FFC STUR D1, [X19 + 0x3C]
	0x039D1000 STUR X8, [X19 + 0x74]
	0x039D1004 LDR X0, [X20]
	0x039D1008 BL 0x1C16F10
	0x039D100C MOV X1, X31
	0x039D1010 MOV X20, X0
	0x039D1014 BL 0x3C268D0
	0x039D1018 STR X20, [X19 + 0x98]
	0x039D101C LDR X0, [X21]
	0x039D1020 MOVZ W1, 0x2
	0x039D1024 BL 0x1C16D6C
	0x039D1028 MOV X21, X0
	0x039D102C ADD X0, X31, 0x258
	0x039D1030 FMOV S0, 1
	0x039D1034 FMOV S1, 1
	0x039D1038 FMOV S2, 1
	0x039D103C FMOV S3, 1
	0x039D1040 FMOV S4, W31
	0x039D1044 MOV X1, X31
	0x039D1048 STR X31, [X31 + 0x260]
	0x039D104C STR X31, [X31 + 0x258]
	0x039D1050 STR W31, [X31 + 0x268]
	0x039D1054 BL 0x3C26810
	0x039D1058 CBZ X21, 0x39D153C
	0x039D105C ADD X26, X31, 0x180
	0x039D1060 LDUR V0, [X26 + 0xD8]
	0x039D1064 LDR W8, [X31 + 0x268]
	0x039D1068 STR V0, [X31 + 0x24]
	0x039D106C STR W8, [X31 + 0x250]
	0x039D1070 LDR W8, [X21 + 0x18]
	0x039D1074 CBZ W8, 0x39D1538
	0x039D1078 LDR V0, [X31 + 0x24]
	0x039D107C LDR W8, [X31 + 0x250]
	0x039D1080 ADD X0, X31, 0x228
	0x039D1084 FMOV S1, 1
	0x039D1088 STR V0, [X21 + 0x2]
	0x039D108C FMOV S0, 1
	0x039D1090 FMOV S2, 1
	0x039D1094 FMOV S3, 1
	0x039D1098 FMOV S4, 1
	0x039D109C MOV X1, X31
	0x039D10A0 STR W8, [X21 + 0x30]
	0x039D10A4 STR X31, [X31 + 0x230]
	0x039D10A8 STR X31, [X31 + 0x228]
	0x039D10AC STR W31, [X31 + 0x238]
	0x039D10B0 BL 0x3C26810
	0x039D10B4 LDR W8, [X31 + 0x238]
	0x039D10B8 LDUR V0, [X26 + 0xA8]
	0x039D10BC STR W8, [X31 + 0x220]
	0x039D10C0 STR V0, [X31 + 0x21]
	0x039D10C4 LDR W8, [X21 + 0x18]
	0x039D10C8 CMP W8, 0x1
	0x039D10CC B.LS 0x39D1538
	0x039D10D0 LDR W8, [X31 + 0x220]
	0x039D10D4 LDR V0, [X31 + 0x21]
	0x039D10D8 ADRP X9, 0x781000
	0x039D10DC LDR X9, [X9 + 0xE80]
	0x039D10E0 STR W8, [X21 + 0x44]
	0x039D10E4 STUR V0, [X21 + 0x34]
	0x039D10E8 MOVZ W1, 0x2
	0x039D10EC LDR X0, [X9]
	0x039D10F0 BL 0x1C16D6C
	0x039D10F4 MOV X22, X0
	0x039D10F8 ADD X0, X31, 0x208
	0x039D10FC FMOV S0, 1
	0x039D1100 FMOV S1, W31
	0x039D1104 MOV X1, X31
	0x039D1108 STR X31, [X31 + 0x208]
	0x039D110C BL 0x3C26820
	0x039D1110 CBZ X22, 0x39D153C
	0x039D1114 LDR W8, [X22 + 0x18]
	0x039D1118 CBZ W8, 0x39D1538
	0x039D111C LDR V0, [X31 + 0x208]
	0x039D1120 ADD X0, X31, 0x200
	0x039D1124 FMOV S1, 1
	0x039D1128 MOV X1, X31
	0x039D112C STR D0, [X22 + 0x20]
	0x039D1130 FMOV S0, 1
	0x039D1134 STR X31, [X31 + 0x200]
	0x039D1138 BL 0x3C26820
	0x039D113C LDR W8, [X22 + 0x18]
	0x039D1140 CMP W8, 0x1
	0x039D1144 B.LS 0x39D1538
	0x039D1148 LDR V0, [X31 + 0x200]
	0x039D114C STR D0, [X22 + 0x28]
	0x039D1150 CBZ X20, 0x39D153C
	0x039D1154 ADRP X25, 0x729000
	0x039D1158 LDR X25, [X25 + 0x790]
	0x039D115C MOV X0, X20
	0x039D1160 MOV X1, X21
	0x039D1164 MOV X2, X22
	0x039D1168 MOV X3, X31
	0x039D116C BL 0x3C26B14
	0x039D1170 LDR X0, [X25]
	0x039D1174 MOVZ W1, 0x2
	0x039D1178 BL 0x1C16D6C
	0x039D117C MOV X20, X0
	0x039D1180 ADD X0, X31, 0x1E0
	0x039D1184 FMOV S0, W31
	0x039D1188 FMOV S1, W31
	0x039D118C FMOV S2, 1
	0x039D1190 FMOV S3, 1
	0x039D1194 MOV X1, X31
	0x039D1198 STP X31, X31, [X31 + 0x1E0]
	0x039D119C STR W31, [X31 + 0x1F8]
	0x039D11A0 STR X31, [X31 + 0x1F0]
	0x039D11A4 BL 0x3C00A84
	0x039D11A8 CBZ X20, 0x39D153C
	0x039D11AC LDR V0, [X31 + 0x1E]
	0x039D11B0 LDUR V1, [X26 + 0x6C]
	0x039D11B4 STR V0, [X31 + 0x1C]
	0x039D11B8 STUR V1, [X26 + 0x4C]
	0x039D11BC LDR W8, [X20 + 0x18]
	0x039D11C0 CBZ W8, 0x39D1538
	0x039D11C4 LDUR V0, [X26 + 0x4C]
	0x039D11C8 LDR V1, [X31 + 0x1C]
	0x039D11CC ADD X0, X31, 0x1A0
	0x039D11D0 FMOV S2, 1
	0x039D11D4 STUR V0, [X20 + 0x2C]
	0x039D11D8 STR V1, [X20 + 0x2]
	0x039D11DC FMOV S0, 1
	0x039D11E0 FMOV S1, 1
	0x039D11E4 FMOV S3, -1
	0x039D11E8 MOV X1, X31
	0x039D11EC STP X31, X31, [X31 + 0x1A0]
	0x039D11F0 STR W31, [X31 + 0x1B8]
	0x039D11F4 STR X31, [X31 + 0x1B0]
	0x039D11F8 BL 0x3C00A84
	0x039D11FC LDUR V0, [X26 + 0x2C]
	0x039D1200 LDR V1, [X31 + 0x1A]
	0x039D1204 STUR V0, [X26 + 0xC]
	0x039D1208 STR V1, [X31 + 0x18]
	0x039D120C LDR W8, [X20 + 0x18]
	0x039D1210 CMP W8, 0x1
	0x039D1214 B.LS 0x39D1538
	0x039D1218 LDUR V0, [X26 + 0xC]
	0x039D121C LDR V1, [X31 + 0x18]
	0x039D1220 ADRP X22, 0x729000
	0x039D1224 LDR X22, [X22 + 0x730]
	0x039D1228 STUR V0, [X20 + 0x48]
	0x039D122C STUR V1, [X20 + 0x3C]
	0x039D1230 LDR X0, [X22]
	0x039D1234 BL 0x1C16F10
	0x039D1238 MOV X1, X20
	0x039D123C MOV X2, X31
	0x039D1240 MOV X21, X0
	0x039D1244 BL 0x3C013D4
	0x039D1248 STR X21, [X19 + 0x80]
	0x039D124C LDR X0, [X25]
	0x039D1250 MOVZ W1, 0x2
	0x039D1254 BL 0x1C16D6C
	0x039D1258 MOV X20, X0
	0x039D125C ADD X0, X31, 0x160
	0x039D1260 FMOV S0, W31
	0x039D1264 FMOV S1, 1
	0x039D1268 MOV X1, X31
	0x039D126C STP X31, X31, [X31 + 0x160]
	0x039D1270 STR W31, [X31 + 0x178]
	0x039D1274 STR X31, [X31 + 0x170]
	0x039D1278 BL 0x3C00A74
	0x039D127C CBZ X20, 0x39D153C
	0x039D1280 ADD X26, X31, 0x80
	0x039D1284 LDR V0, [X31 + 0x16]
	0x039D1288 LDUR V1, [X26 + 0xEC]
	0x039D128C STR V0, [X31 + 0x14]
	0x039D1290 STUR V1, [X26 + 0xCC]
	0x039D1294 LDR W8, [X20 + 0x18]
	0x039D1298 CBZ W8, 0x39D1538
	0x039D129C LDUR V0, [X26 + 0xCC]
	0x039D12A0 LDR V1, [X31 + 0x14]
	0x039D12A4 ADD X0, X31, 0x120
	0x039D12A8 MOV X1, X31
	0x039D12AC STUR V0, [X20 + 0x2C]
	0x039D12B0 STR V1, [X20 + 0x2]
	0x039D12B4 FMOV S0, 1
	0x039D12B8 FMOV S1, 1
	0x039D12BC STP X31, X31, [X31 + 0x120]
	0x039D12C0 STR W31, [X31 + 0x138]
	0x039D12C4 STR X31, [X31 + 0x130]
	0x039D12C8 BL 0x3C00A74
	0x039D12CC LDUR V0, [X26 + 0xAC]
	0x039D12D0 LDR V1, [X31 + 0x12]
	0x039D12D4 STUR V0, [X26 + 0x8C]
	0x039D12D8 STR V1, [X31 + 0x10]
	0x039D12DC LDR W8, [X20 + 0x18]
	0x039D12E0 CMP W8, 0x1
	0x039D12E4 B.LS 0x39D1538
	0x039D12E8 LDUR V0, [X26 + 0x8C]
	0x039D12EC LDR V1, [X31 + 0x10]
	0x039D12F0 STUR V0, [X20 + 0x48]
	0x039D12F4 STUR V1, [X20 + 0x3C]
	0x039D12F8 LDR X0, [X22]
	0x039D12FC BL 0x1C16F10
	0x039D1300 MOV X1, X20
	0x039D1304 MOV X2, X31
	0x039D1308 MOV X21, X0
	0x039D130C BL 0x3C013D4
	0x039D1310 STR X21, [X19 + 0x88]
	0x039D1314 LDR X0, [X25]
	0x039D1318 MOVZ W1, 0x2
	0x039D131C BL 0x1C16D6C
	0x039D1320 MOV X20, X0
	0x039D1324 ADD X0, X31, 0xE0
	0x039D1328 FMOV S0, W31
	0x039D132C FMOV S1, W31
	0x039D1330 MOV X1, X31
	0x039D1334 STP X31, X31, [X31 + 0xE0]
	0x039D1338 STR W31, [X31 + 0xF8]
	0x039D133C STR X31, [X31 + 0xF0]
	0x039D1340 BL 0x3C00A74
	0x039D1344 CBZ X20, 0x39D153C
	0x039D1348 LDR V0, [X31 + 0xE]
	0x039D134C LDUR V1, [X26 + 0x6C]
	0x039D1350 STR V0, [X31 + 0xC]
	0x039D1354 STUR V1, [X26 + 0x4C]
	0x039D1358 LDR W8, [X20 + 0x18]
	0x039D135C CBZ W8, 0x39D1538
	0x039D1360 LDUR V0, [X26 + 0x4C]
	0x039D1364 LDR V1, [X31 + 0xC]
	0x039D1368 ADD X0, X31, 0xA0
	0x039D136C MOV X1, X31
	0x039D1370 STUR V0, [X20 + 0x2C]
	0x039D1374 STR V1, [X20 + 0x2]
	0x039D1378 FMOV S0, 1
	0x039D137C FMOV S1, W31
	0x039D1380 STP X31, X31, [X31 + 0xA0]
	0x039D1384 STR W31, [X31 + 0xB8]
	0x039D1388 STR X31, [X31 + 0xB0]
	0x039D138C BL 0x3C00A74
	0x039D1390 LDUR V0, [X26 + 0x2C]
	0x039D1394 LDR V1, [X31 + 0xA]
	0x039D1398 STUR V0, [X26 + 0xC]
	0x039D139C STR V1, [X31 + 0x8]
	0x039D13A0 LDR W8, [X20 + 0x18]
	0x039D13A4 CMP W8, 0x1
	0x039D13A8 B.LS 0x39D1538
	0x039D13AC LDUR V0, [X26 + 0xC]
	0x039D13B0 LDR V1, [X31 + 0x8]
	0x039D13B4 STUR V0, [X20 + 0x48]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 832
	022 Move X21, 0xA14000
	023 Move W8, [X21+3336]
	024 Move X19, X5
	025 Move X20, X4
	026 Move V8, V1
	027 Move V9, V0
	028 Move X23, X1
	029 Move [X31+268], S6
	030 Move [X31+264], S5
	031 Move [X31+260], S4
	032 Move [X31+288], W3
	033 Move [X31+204], S2
	034 Move [X31+212], S3
	035 Move [X31+284], W2
	036 Move [X31+272], X0
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {85}
	041 Move X0, 0x785000
	042 Move X0, [X0+3624]
	043 Call 0x1C17CF4
	044 Move X0, 0x72B000
	045 Move X0, [X0+3568]
	046 Call 0x1C17CF4
	047 Move X0, 0x74D000
	048 Move X0, [X0+2296]
	049 Call 0x1C17CF4
	050 Move X0, 0x784000
	051 Move X0, [X0+3576]
	052 Call 0x1C17CF4
	053 Move X0, 0x784000
	054 Move X0, [X0+3584]
	055 Call 0x1C17CF4
	056 Move X0, 0x784000
	057 Move X0, [X0+3592]
	058 Call 0x1C17CF4
	059 Move X0, 0x784000
	060 Move X0, [X0+3480]
	061 Call 0x1C17CF4
	062 Move X0, 0x784000
	063 Move X0, [X0+3600]
	064 Call 0x1C17CF4
	065 Move X0, 0x725000
	066 Move X0, [X0+1432]
	067 Call 0x1C17CF4
	068 Move X0, 0x784000
	069 Move X0, [X0+3648]
	070 Call 0x1C17CF4
	071 Move X0, 0x784000
	072 Move X0, [X0+3656]
	073 Call 0x1C17CF4
	074 Move X0, 0x784000
	075 Move X0, [X0+3664]
	076 Call 0x1C17CF4
	077 Move X0, 0x784000
	078 Move X0, [X0+3672]
	079 Call 0x1C17CF4
	080 Move X0, 0x784000
	081 Move X0, [X0+3680]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X21+3336], W8
	085 Move [X31+808], X31
	086 Move [X31+800], X31
	087 Move [X31+816], X31
	088 Move [X31+792], X31
	089 Move [X31+784], X31
	090 Move X8, 0x784000
	091 Move X8, [X8+3480]
	092 Move [X31+768], X31
	093 Move [X31+760], X31
	094 Move [X31+776], W31
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Call LensFlareCommonSRP.get_Instance
	101 Compare X0, 0
	102 JumpIfEqual {2253}
	103 Call LensFlareCommonSRP.IsEmpty, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {2229}
	108 Move X8, [X31+1008]
	109 Add X22, X31, 464
	110 Move X9, [X8+32]
	111 Move V0, [X8]
	112 Move V1, [X8+16]
	113 Move X8, 0x74D000
	114 Move X8, [X8+2296]
	115 Move [X31+688], X9
	116 Move [X22+192], V0
	117 Move [X22+200], V1
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move V0, [X22+192]
	124 Move V1, [X22+208]
	125 Move X8, [X31+688]
	126 Add X1, X31, 720
	127 Move TEMP, 0
	128 Not TEMP
	129 Move W4, TEMP
	130 Move TEMP, 0
	131 Not TEMP
	132 Move W5, TEMP
	133 Move X0, X19
	134 Move W2, W31
	135 Move W3, W31
	136 Move X6, X31
	137 Move [X22+256], V0
	138 Move [X22+264], V1
	139 Move [X31+752], X8
	140 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	141 Compare X19, 0
	142 JumpIfEqual {2253}
	143 Move W21, [X31+1120]
	144 Move S0, W31
	145 Move S1, W31
	146 Move X0, X19
	147 Move V2, V9
	148 Move V3, V8
	149 Move X1, X31
	150 Call CommandBuffer.SetViewport, X0, X1
	151 Move TEMP, X21
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {164}
	155 Move S0, W31
	156 Move S1, W31
	157 Move S2, W31
	158 Move S3, 1
	159 Move W2, 1
	160 Move X0, X19
	161 Move W1, W31
	162 Move X3, X31
	163 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, X3
	164 Move X21, 0x784000
	165 Move X21, [X21+3480]
	166 Move X0, [X21]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X21]
	172 Move X8, [X0+184]
	173 Move X0, [X8+16]
	174 Compare X0, 0
	175 JumpIfEqual {2253}
	176 Move W9, [X31+1112]
	177 Move W8, [X31+1104]
	178 Move W10, [X31+1040]
	179 NotImplemented "Instruction FDIV not yet implemented."
	180 Move [X31+132], W9
	181 Move [X31+136], W8
	182 Move W8, [X31+1088]
	183 Move W9, [X31+1096]
	184 Move [X31+152], W8
	185 Move W8, [X31+1080]
	186 Move [X31+240], W9
	187 Move [X31+244], W8
	188 Move W8, [X31+1072]
	189 Move W9, [X31+1064]
	190 Move [X31+236], W8
	191 Move W8, [X31+1032]
	192 Move [X31+112], W9
	193 Move [X31+116], W8
	194 Move W8, [X31+1024]
	195 Move [X31+140], W8
	196 Move [X31+144], W10
	197 Move X8, [X31+1016]
	198 Move [X31+120], X8
	199 Move X8, 0x784000
	200 Move X8, [X8+3600]
	201 Move [X31+248], S0
	202 Move X1, [X8]
	203 Add X8, X31, 656
	204 Call List`1<Object>.GetEnumerator, X0
	205 Move V0, [X22+12]
	206 Move X8, [X31+672]
	207 NotImplemented "Instruction FDIV not yet implemented."
	208 Move [X31+184], S8
	209 Move [X31+192], S9
	210 Move [X31+148], S1
	211 Move [X31+816], X8
	212 Move [X22+21], V0
	213 Move X8, 0x784000
	214 Move X8, [X8+3584]
	215 Move X1, [X8]
	216 Add X0, X31, 800
	217 Call Enumerator<Object>.MoveNext, X0
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {2224}
	222 Move X21, [X31+816]
	223 Compare X21, 0
	224 JumpIfEqual {213}
	225 Move X8, 0x725000
	226 Move X8, [X8+1432]
	227 Move X25, [X21+24]
	228 Move X0, [X8]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {233}
	232 Call 0x1C17DFC
	233 Move X0, X25
	234 Move X1, X31
	235 Move X2, X31
	236 Call Object.op_Equality, X0, X1
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {213}
	241 Move X28, [X21+24]
	242 Compare X28, 0
	243 JumpIfEqual {2252}
	244 Move X8, 0x784000
	245 Move X8, [X8+3480]
	246 Move X27, [X28+32]
	247 Move X0, [X8]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 Move X0, X23
	253 Move X1, X28
	254 Move X2, X27
	255 Call LensFlareCommonSRP.IsLensFlareSRPHidden, X0, X1, X2
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {213}
	260 Move X8, 0x72B000
	261 Move X8, [X8+3568]
	262 Move X1, [X8]
	263 Move X0, X28
	264 Call 0x21A4894, X0
	265 Move X8, 0x725000
	266 Move X8, [X8+1432]
	267 Move X26, X0
	268 Move X0, [X8]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, X26
	274 Move X1, X31
	275 Move X2, X31
	276 Call Object.op_Inequality, X0, X1
	277 Move TEMP, X0
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfNotEqual {309}
	281 Compare X26, 0
	282 JumpIfEqual {2257}
	283 Move X0, X26
	284 Move X1, X31
	285 Call Light.get_type, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X26
	288 Move X1, X31
	289 Call Component.get_transform, X0
	290 Compare X0, 0
	291 JumpIfEqual {2263}
	292 Move X1, X31
	293 Call Transform.get_forward, X0
	294 Compare X23, 0
	295 JumpIfEqual {2262}
	296 Move V8, V0
	297 Move V9, V1
	298 Move V10, V2
	299 Move X0, X23
	300 Move X1, X31
	301 Call Camera.get_farClipPlane, X0
	302 NotImplemented "Instruction FNEG not yet implemented."
	303 NotImplemented "Instruction FNEG not yet implemented."
	304 NotImplemented "Instruction FNEG not yet implemented."
	305 Multiply S8, S0, S1
	306 Multiply S9, S0, S2
	307 Multiply S10, S0, S3
	308 Move W24, 1
	309 Move X0, X28
	310 Move X1, X31
	311 Call Component.get_transform, X0
	312 Compare X0, 0
	313 JumpIfEqual {2254}
	314 Move X1, X31
	315 Call Transform.get_position, X0
	316 Move V8, V0
	317 Move V9, V1
	318 Move V10, V2
	319 Move W24, W31
	320 Move X8, 0x784000
	321 Move V0, [X20+32]
	322 Move V1, [X20+48]
	323 Move V2, [X20]
	324 Move V3, [X20+16]
	325 Move X8, [X8+3480]
	326 Move [X22+224], V0
	327 Move [X22+232], V1
	328 Move [X22+192], V2
	329 Move [X22+200], V3
	330 Move X0, [X8]
	331 Move W8, [X0+224]
	332 Compare W8, 0
	333 JumpIfNotEqual {335}
	334 Call 0x1C17DFC
	335 Move V0, [X22+192]
	336 Move V1, [X22+208]
	337 Move V2, [X22+224]
	338 Move V3, [X22+240]
	339 Xor W29, W24, 1
	340 Move [X22+128], V0
	341 Move [X22+136], V1
	342 Move [X22+160], V2
	343 Move [X22+168], V3
	344 Move W8, [X31+288]
	345 Add X3, X31, 592
	346 Move X0, X23
	347 Move W1, W29
	348 And W2, W8, 1
	349 Move V0, V8
	350 Move V1, V9
	351 Move V2, V10
	352 Move [X31+300], S8
	353 Move [X31+296], S9
	354 Move [X31+292], S10
	355 Call LensFlareCommonSRP.WorldToViewport, X0, X1, X2, X3, X4
	356 Move W8, [X31+284]
	357 Move V13, V0
	358 Move V14, V1
	359 Move V11, V2
	360 Move TEMP, X8
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfNotEqual {406}
	364 Move X0, X31
	365 Call Camera.get_main
	366 Move X8, 0x725000
	367 Move X8, [X8+1432]
	368 Move X25, X0
	369 Move X0, [X8]
	370 Move W8, [X0+224]
	371 Compare W8, 0
	372 JumpIfNotEqual {374}
	373 Call 0x1C17DFC
	374 Move X0, X23
	375 Move X1, X25
	376 Move X2, X31
	377 Call Object.op_Equality, X0, X1
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfNotEqual {406}
	382 Compare X23, 0
	383 JumpIfEqual {2264}
	384 Move X0, X23
	385 Move X1, X31
	386 Call Camera.get_fieldOfView, X0
	387 Move V9, [X31+188]
	388 Move X8, 0x784000
	389 Move X8, [X8+3480]
	390 Move V8, V0
	391 Move X0, [X8]
	392 Move W8, [X0+224]
	393 Compare W8, 0
	394 JumpIfNotEqual {396}
	395 Call 0x1C17DFC
	396 Move V3, [X31+184]
	397 Move S6, [X31+204]
	398 Move S5, [X31+208]
	399 Move V0, V13
	400 Move V1, V14
	401 Move V2, V9
	402 Move V4, V8
	403 Call LensFlareCommonSRP.DoPaniniProjection, X0, V0, V1, V2, V3, V4
	404 Move V13, V0
	405 Move V14, V1
	406 NotImplemented "Instruction FCMP not yet implemented."
	407 Move W8, [X28+112]
	408 Compare W8, 0
	409 JumpIfNotEqual {416}
	410 Move S0, 1
	411 NotImplemented "Instruction FCMP not yet implemented."
	412 NotImplemented "Instruction FCMP not yet implemented."
	413 Move S0, 1
	414 NotImplemented "Instruction FCMP not yet implemented."
	415 NotImplemented "Instruction FCMP not yet implemented."
	416 Compare X23, 0
	417 JumpIfEqual {2255}
	418 Move X0, X23
	419 Move X1, X31
	420 Call Component.get_transform, X0
	421 Compare X0, 0
	422 JumpIfEqual {2256}
	423 Move X1, X31
	424 Call Transform.get_forward, X0
	425 Move V3, [X31+260]
	426 Move V4, [X31+300]
	427 Subtract S8, S4, S3
	428 Move V3, [X31+264]
	429 Move V4, [X31+296]
	430 Multiply S0, S8, S0
	431 Subtract S9, S4, S3
	432 Move V3, [X31+268]
	433 Move V4, [X31+292]
	434 Multiply S1, S9, S1
	435 Add S0, S0, S1
	436 Subtract S10, S4, S3
	437 Multiply S1, S10, S2
	438 Add S0, S1, S0
	439 NotImplemented "Instruction FCMP not yet implemented."
	440 Move X8, 0xA0A000
	441 Move W8, [X8+1924]
	442 Compare W8, 0
	443 JumpIfNotEqual {450}
	444 Move X0, 0x725000
	445 Move X0, [X0+1448]
	446 Call 0x1C17CF4
	447 Move X8, 0xA0A000
	448 Move W9, 1
	449 Move [X8+1924], W9
	450 Move X8, 0x725000
	451 Move X8, [X8+1448]
	452 Move X0, [X8]
	453 Move W8, [X0+224]
	454 Compare W8, 0
	455 JumpIfNotEqual {457}
	456 Call 0x1C17DFC
	457 Multiply S0, S8, S8
	458 Multiply S1, S9, S9
	459 Multiply S2, S10, S10
	460 Add S0, S0, S1
	461 Add S0, S2, S0
	462 Move S3, 1
	463 NotImplemented "Instruction FSQRT not yet implemented."
	464 Move S0, 1
	465 Move [X31+252], S0
	466 Move [X31+260], S3
	467 Move TEMP, X24
	468 And TEMP, TEMP, 1
	469 Compare TEMP, 1
	470 JumpIfEqual {503}
	471 Move X0, [X28+56]
	472 Compare X0, 0
	473 JumpIfEqual {2293}
	474 Move S15, [X28+44]
	475 Move S12, [X28+48]
	476 Move X1, X31
	477 Call AnimationCurve.get_length, X0
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Move X0, [X28+56]
	480 Compare X0, 0
	481 JumpIfEqual {2309}
	482 NotImplemented "Instruction FDIV not yet implemented."
	483 Move X1, X31
	484 Call AnimationCurve.Evaluate, X0, V0
	485 Move [X31+256], S0
	486 Move S0, 1
	487 Move [X31+256], S0
	488 Move X0, [X28+64]
	489 Compare X0, 0
	490 JumpIfEqual {2290}
	491 Move X1, X31
	492 Call AnimationCurve.get_length, X0
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Move X0, [X28+64]
	495 Compare X0, 0
	496 JumpIfEqual {2308}
	497 NotImplemented "Instruction FDIV not yet implemented."
	498 Move X1, X31
	499 Call AnimationCurve.Evaluate, X0, V0
	500 Move [X31+252], S0
	501 Move S0, 1
	502 Move [X31+252], S0
	503 Move X8, 0x725000
	504 Move X8, [X8+1432]
	505 Move X0, [X8]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {510}
	509 Call 0x1C17DFC
	510 Move X0, X26
	511 Move X1, X31
	512 Move X2, X31
	513 Call Object.op_Inequality, X0, X1
	514 Move S0, 1
	515 Move TEMP, X0
	516 And TEMP, TEMP, 1
	517 Compare TEMP, 1
	518 JumpIfNotEqual {574}
	519 Move W8, [X28+72]
	520 Compare W8, 0
	521 JumpIfEqual {574}
	522 Move X8, 0xA0A000
	523 Move W8, [X8+1925]
	524 Compare W8, 0
	525 JumpIfNotEqual {532}
	526 Move X0, 0x725000
	527 Move X0, [X0+1448]
	528 Call 0x1C17CF4
	529 Move W8, 1
	530 Move X9, 0xA0A000
	531 Move [X9+1925], W8
	532 Move X8, 0x725000
	533 Move X8, [X8+1448]
	534 Move X0, [X8]
	535 Move W8, [X0+224]
	536 Compare W8, 0
	537 JumpIfNotEqual {539}
	538 Call 0x1C17DFC
	539 Move X8, -49168384
	540 Move V0, [X8+380]
	541 NotImplemented "Instruction FCMP not yet implemented."
	542 NotImplemented "Instruction FDIV not yet implemented."
	543 NotImplemented "Instruction FDIV not yet implemented."
	544 NotImplemented "Instruction FDIV not yet implemented."
	545 Move X8, 0xA0A000
	546 Move W8, [X8+1923]
	547 Compare W8, 0
	548 JumpIfNotEqual {555}
	549 Move X0, 0x725000
	550 Move X0, [X0+1440]
	551 Call 0x1C17CF4
	552 Move W8, 1
	553 Move X9, 0xA0A000
	554 Move [X9+1923], W8
	555 Move X8, 0x725000
	556 Move X8, [X8+1440]
	557 Move X8, [X8]
	558 Move X8, [X8+184]
	559 Move S0, [X8]
	560 Move S1, [X8+4]
	561 Move V2, [X8+8]
	562 Move X9, [X31+120]
	563 Compare X9, 0
	564 JumpIfEqual {2310}
	565 Move X0, [X9+64]
	566 Move X8, [X9+24]
	567 Move X3, [X9+40]
	568 NotImplemented "Instruction FNEG not yet implemented."
	569 NotImplemented "Instruction FNEG not yet implemented."
	570 NotImplemented "Instruction FNEG not yet implemented."
	571 Move X1, X26
	572 Move X2, X23
	573 NotImplemented "Instruction BLR not yet implemented."
	574 Add S1, S14, S14
	575 Move S2, -1
	576 Move [X31+232], S0
	577 Add S0, S13, S13
	578 Add S8, S1, S2
	579 Add S0, S0, S2
	580 NotImplemented "Instruction FNEG not yet implemented."
	581 Move [X31+304], S0
	582 Move [X31+792], S0
	583 Move [X31+308], S1
	584 Move [X31+796], S1
	585 Move X0, X31
	586 Call SystemInfo.get_graphicsUVStartsAtTop
	587 Xor W8, W0, 1
	588 And W8, W24, W8
	589 Move TEMP, X8
	590 And TEMP, TEMP, 1
	591 Compare TEMP, 1
	592 JumpIfNotEqual {595}
	593 Move [X31+796], S8
	594 Move [X31+308], S8
	595 Move V0, [X31+304]
	596 Move V1, [X31+308]
	597 Move X0, [X28+80]
	598 NotImplemented "Instruction FABS not yet implemented."
	599 NotImplemented "Instruction FABS not yet implemented."
	600 NotImplemented "Instruction FCMP not yet implemented."
	601 NotImplemented "Instruction FCSEL not yet implemented."
	602 Compare X0, 0
	603 JumpIfEqual {2260}
	604 Move X1, X31
	605 Call AnimationCurve.get_length, X0
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X0, [X28+80]
	608 Compare X0, 0
	609 JumpIfEqual {2285}
	610 Move V0, V8
	611 Move X1, X31
	612 Call AnimationCurve.Evaluate, X0, V0
	613 Move S0, 1
	614 Move V1, [X28+40]
	615 Multiply S0, S0, S1
	616 Move V1, [X31+256]
	617 Multiply S0, S1, S0
	618 NotImplemented "Instruction FCMP not yet implemented."
	619 Move [X31+192], S0
	620 Move X0, X23
	621 Move X1, X31
	622 Call Component.get_transform, X0
	623 Compare X0, 0
	624 JumpIfEqual {2292}
	625 Move X1, X31
	626 Call Transform.get_position, X0
	627 Move V11, V0
	628 Move V12, V1
	629 Move V15, V2
	630 Move X0, X28
	631 Move X1, X31
	632 Call Component.get_transform, X0
	633 Compare X0, 0
	634 JumpIfEqual {2291}
	635 Move X1, X31
	636 Call Transform.get_position, X0
	637 Move X8, 0xA0A000
	638 Move W8, [X8+1925]
	639 Move V8, V0
	640 Move V9, V1
	641 Move V10, V2
	642 Compare W8, 0
	643 JumpIfNotEqual {650}
	644 Move X0, 0x725000
	645 Move X0, [X0+1448]
	646 Call 0x1C17CF4
	647 Move W8, 1
	648 Move X9, 0xA0A000
	649 Move [X9+1925], W8
	650 Move X8, 0x725000
	651 Move X8, [X8+1448]
	652 Move X0, [X8]
	653 Move W8, [X0+224]
	654 Compare W8, 0
	655 JumpIfNotEqual {657}
	656 Call 0x1C17DFC
	657 Subtract S0, S11, S8
	658 Subtract S1, S12, S9
	659 Move X8, -49168384
	660 Subtract S2, S15, S10
	661 Move V4, [X8+380]
	662 Multiply S3, S0, S0
	663 Multiply S5, S1, S1
	664 Add S3, S3, S5
	665 Multiply S5, S2, S2
	666 Add S3, S5, S3
	667 NotImplemented "Instruction FSQRT not yet implemented."
	668 NotImplemented "Instruction FCMP not yet implemented."
	669 NotImplemented "Instruction FDIV not yet implemented."
	670 NotImplemented "Instruction FDIV not yet implemented."
	671 NotImplemented "Instruction FDIV not yet implemented."
	672 Move X8, 0xA0A000
	673 Move W8, [X8+1923]
	674 Compare W8, 0
	675 JumpIfNotEqual {682}
	676 Move X0, 0x725000
	677 Move X0, [X0+1440]
	678 Call 0x1C17CF4
	679 Move W8, 1
	680 Move X9, 0xA0A000
	681 Move [X9+1923], W8
	682 Move X8, 0x725000
	683 Move X8, [X8+1440]
	684 Move X8, [X8]
	685 Move X8, [X8+184]
	686 Move S8, [X8]
	687 Move S9, [X8+4]
	688 Move V10, [X8+8]
	689 Move X8, 0x784000
	690 Move V0, [X20+32]
	691 Move V1, [X20+48]
	692 Move V2, [X20]
	693 Move V3, [X20+16]
	694 Move X8, [X8+3480]
	695 Move [X22+224], V0
	696 Move [X22+232], V1
	697 Move [X22+192], V2
	698 Move [X22+200], V3
	699 Move X0, [X8]
	700 Move V11, [X28+104]
	701 Move W8, [X0+224]
	702 Compare W8, 0
	703 JumpIfNotEqual {705}
	704 Call 0x1C17DFC
	705 Move V7, [X31+300]
	706 Multiply S0, S8, S11
	707 Multiply S1, S9, S11
	708 Move V3, [X22+192]
	709 Move V4, [X22+208]
	710 Add S0, S7, S0
	711 Move V7, [X31+296]
	712 Move V5, [X22+224]
	713 Move V6, [X22+240]
	714 Multiply S2, S10, S11
	715 Move [X22+64], V3
	716 Move [X22+72], V4
	717 Add S1, S7, S1
	718 Move V7, [X31+292]
	719 Move [X22+96], V5
	720 Move [X22+104], V6
	721 Add S2, S7, S2
	722 Move W8, [X31+288]
	723 Add X3, X31, 528
	724 Move X0, X23
	725 Move W1, W29
	726 And W2, W8, 1
	727 Call LensFlareCommonSRP.WorldToViewport, X0, X1, X2, X3, X4
	728 Move V11, V2
	729 Move TEMP, X24
	730 And TEMP, TEMP, 1
	731 Compare TEMP, 1
	732 JumpIfNotEqual {737}
	733 Move X0, X28
	734 Move X1, X23
	735 Call LensFlareComponentSRP.celestialProjectedOcclusionRadius, X0, X1
	736 Move V12, V0
	737 Move V12, [X28+92]
	738 Move V1, [X20+32]
	739 Move V0, [X20+48]
	740 Move V3, [X20]
	741 Move V2, [X20+16]
	742 Move [X22+224], V1
	743 Move [X22+232], V0
	744 Move [X22+192], V3
	745 Move [X22+200], V2
	746 Move X0, X23
	747 Move X1, X31
	748 Call Component.get_transform, X0
	749 Compare X0, 0
	750 JumpIfEqual {2289}
	751 Move X1, X31
	752 Call Transform.get_up, X0
	753 Move X8, 0x784000
	754 Move X8, [X8+3480]
	755 Move V8, V0
	756 Move V9, V1
	757 Move V10, V2
	758 Move X0, [X8]
	759 Move W8, [X0+224]
	760 Compare W8, 0
	761 JumpIfNotEqual {763}
	762 Call 0x1C17DFC
	763 Move V7, [X31+300]
	764 Multiply S0, S12, S8
	765 Multiply S1, S12, S9
	766 Move V3, [X22+192]
	767 Move V4, [X22+208]
	768 Add S0, S7, S0
	769 Move V7, [X31+296]
	770 Move V5, [X22+224]
	771 Move V6, [X22+240]
	772 Multiply S2, S12, S10
	773 Move [X22], V3
	774 Move [X22+8], V4
	775 Add S1, S7, S1
	776 Move V7, [X31+292]
	777 Move [X22+32], V5
	778 Move [X22+40], V6
	779 Add S2, S7, S2
	780 Move W8, [X31+288]
	781 Add X3, X31, 464
	782 Move X0, X23
	783 Move W1, W29
	784 And W2, W8, 1
	785 Call LensFlareCommonSRP.WorldToViewport, X0, X1, X2, X3, X4
	786 Move X8, 0xA0B000
	787 Move W8, [X8+2072]
	788 Move V8, V0
	789 Move V9, V1
	790 Compare W8, 0
	791 JumpIfNotEqual {798}
	792 Move X0, 0x725000
	793 Move X0, [X0+1448]
	794 Call 0x1C17CF4
	795 Move W8, 1
	796 Move X9, 0xA0B000
	797 Move [X9+2072], W8
	798 Move X8, 0x725000
	799 Move X8, [X8+1448]
	800 Move X0, [X8]
	801 Move W8, [X0+224]
	802 Compare W8, 0
	803 JumpIfNotEqual {805}
	804 Call 0x1C17DFC
	805 Move V2, [X28+100]
	806 Subtract S0, S8, S13
	807 Subtract S1, S9, S14
	808 Multiply S0, S0, S0
	809 Multiply S1, S1, S1
	810 Add S0, S0, S1
	811 NotImplemented "Instruction FSQRT not yet implemented."
	812 NotImplemented "Instruction UCVTF not yet implemented."
	813 Move W1, [X31+152]
	814 Move V3, [X31+148]
	815 Move X0, X19
	816 Move V2, V11
	817 Move X2, X31
	818 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	819 Move W8, [X28+88]
	820 Compare W8, 0
	821 JumpIfEqual {842}
	822 Move X8, 0x784000
	823 Move X8, [X8+3480]
	824 Move X0, [X8]
	825 Move W8, [X0+224]
	826 Compare W8, 0
	827 JumpIfNotEqual {832}
	828 Call 0x1C17DFC
	829 Move X8, 0x784000
	830 Move X8, [X8+3480]
	831 Move X0, [X8]
	832 Move X8, [X0+184]
	833 Move X8, [X8+48]
	834 Compare X8, 0
	835 JumpIfEqual {848}
	836 Move X9, [X8+72]
	837 NotImplemented "Instruction LDUR not yet implemented."
	838 NotImplemented "Instruction LDUR not yet implemented."
	839 Move [X31+688], X9
	840 Move [X22+192], V1
	841 Move [X22+200], V0
	842 Move X8, 0x784000
	843 Move X8, [X8+3664]
	844 Move X1, [X8]
	845 Move X0, X19
	846 Move X2, X31
	847 Call CommandBuffer.DisableShaderKeyword, X0, X1
	848 NotImplemented "Instruction MOVI not yet implemented."
	849 Move [X31+688], X31
	850 Move [X22+192], V0
	851 Move [X22+200], V0
	852 Move V0, [X22+192]
	853 Move V1, [X22+208]
	854 Move X8, [X31+688]
	855 Move [X31+416], V0
	856 Move [X31+424], V1
	857 Move [X31+448], X8
	858 Move W1, [X31+116]
	859 Add X2, X31, 416
	860 Move X0, X19
	861 Move X3, X31
	862 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	863 Move X8, 0x784000
	864 Move X8, [X8+3664]
	865 Move X1, [X8]
	866 Move X0, X19
	867 Move X2, X31
	868 Call CommandBuffer.EnableShaderKeyword, X0, X1
	869 Move X8, 0x784000
	870 Move X8, [X8+3480]
	871 Move X0, [X8]
	872 Move W8, [X0+224]
	873 Compare W8, 0
	874 JumpIfNotEqual {876}
	875 Call 0x1C17DFC
	876 Call LensFlareCommonSRP.IsOcclusionRTCompatible
	877 Move X8, 0x784000
	878 Move X8, [X8+3648]
	879 Move X1, [X8]
	880 Move TEMP, X0
	881 And TEMP, TEMP, 1
	882 Compare TEMP, 1
	883 JumpIfNotEqual {887}
	884 Move X0, X19
	885 Move X2, X31
	886 Call CommandBuffer.DisableShaderKeyword, X0, X1
	887 Move X0, X19
	888 Move X2, X31
	889 Call CommandBuffer.EnableShaderKeyword, X0, X1
	890 Move V0, [X21+16]
	891 NotImplemented "Instruction SCVTF not yet implemented."
	892 Move W1, [X31+144]
	893 Move S1, W31
	894 Move S2, W31
	895 Move S3, W31
	896 Move X0, X19
	897 Move X2, X31
	898 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	899 Move X0, [X28+120]
	900 Compare X0, 0
	901 JumpIfEqual {2288}
	902 Move X1, X31
	903 Call TextureCurve.GetTexture, X0
	904 Add X8, X31, 656
	905 Move X1, X31
	906 Call RenderTargetIdentifier.op_Implicit, X0
	907 Move V0, [X22+192]
	908 Move V1, [X22+208]
	909 Move X8, [X31+688]
	910 Move [X31+368], V0
	911 Move [X31+376], V1
	912 Move [X31+400], X8
	913 Move W1, [X31+140]
	914 Add X2, X31, 368
	915 Move X0, X19
	916 Move X3, X31
	917 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	918 Compare X27, 0
	919 JumpIfEqual {2287}
	920 Move X29, [X27+24]
	921 Compare X29, 0
	922 JumpIfEqual {2286}
	923 Move X8, [X29+24]
	924 NotImplemented "Instruction CMP not yet implemented."
	925 Move S2, [X31+252]
	926 Move S0, [X31+256]
	927 Move V1, [X31+232]
	928 Move X9, -49168384
	929 Move X21, X31
	930 And X8, X8, 0
	931 Multiply S0, S0, S1
	932 Move V1, [X31+304]
	933 Move [X31+196], S0
	934 Move V0, [X9+188]
	935 Subtract S3, S1, S1
	936 Move V1, [X31+308]
	937 Multiply S0, S2, S0
	938 Move [X31+108], S0
	939 Subtract S1, S1, S1
	940 NotImplemented "Instruction FNEG not yet implemented."
	941 Move [X31+88], S1
	942 Move [X31+96], S3
	943 Move [X31+84], S0
	944 NotImplemented "Instruction CMP not yet implemented."
	945 Add X8, X29, X21
	946 Move X8, [X8+32]
	947 Move [X31+784], X8
	948 Compare X8, 0
	949 JumpIfEqual {1498}
	950 Move W9, [X8+16]
	951 Compare W9, 0
	952 JumpIfEqual {1498}
	953 Move X9, 0x725000
	954 Move X9, [X9+1432]
	955 Move X25, [X8+48]
	956 Move X0, [X9]
	957 Move W9, [X0+224]
	958 Compare W9, 0
	959 JumpIfNotEqual {961}
	960 Call 0x1C17DFC
	961 Move X0, X25
	962 Move X1, X31
	963 Move X2, X31
	964 Call Object.op_Equality, X0, X1
	965 Move X8, [X31+784]
	966 Move TEMP, X0
	967 And TEMP, TEMP, 1
	968 Compare TEMP, 1
	969 JumpIfNotEqual {975}
	970 Compare X8, 0
	971 JumpIfEqual {2259}
	972 Move W9, [X8+108]
	973 Compare W9, 0
	974 JumpIfNotEqual {977}
	975 Compare X8, 0
	976 JumpIfEqual {2258}
	977 Move V0, [X8+44]
	978 NotImplemented "Instruction FCMP not yet implemented."
	979 Move W8, [X8+72]
	980 NotImplemented "Instruction CMP not yet implemented."
	981 Move X8, 0x725000
	982 Move X8, [X8+1432]
	983 Move X0, [X8]
	984 Move W8, [X0+224]
	985 Compare W8, 0
	986 JumpIfNotEqual {988}
	987 Call 0x1C17DFC
	988 Move X0, X26
	989 Move X1, X31
	990 Move X2, X31
	991 Call Object.op_Inequality, X0, X1
	992 Move V0, [X31+196]
	993 Move V8, V0
	994 Move V12, V0
	995 Move V9, V0
	996 Move V13, V0
	997 Move TEMP, X0
	998 And TEMP, TEMP, 1
	999 Compare TEMP, 1
	1000 JumpIfNotEqual {1045}
	1001 Move X8, [X31+784]
	1002 Compare X8, 0
	1003 JumpIfEqual {2299}
	1004 Move V0, [X31+196]
	1005 Move W8, [X8+112]
	1006 Move V8, V0
	1007 Move V12, V0
	1008 Move V9, V0
	1009 Move V13, V0
	1010 Compare W8, 0
	1011 JumpIfEqual {1045}
	1012 Compare X26, 0
	1013 JumpIfEqual {2311}
	1014 Move X0, X26
	1015 Move X1, X31
	1016 Call Light.get_useColorTemperature, X0
	1017 Move TEMP, X0
	1018 And TEMP, TEMP, 1
	1019 Compare TEMP, 1
	1020 JumpIfNotEqual {1037}
	1021 Move X0, X26
	1022 Move X1, X31
	1023 Call Light.get_color, X0
	1024 Move V8, V0
	1025 Move V9, V1
	1026 Move V10, V2
	1027 Move V11, V3
	1028 Move X0, X26
	1029 Move X1, X31
	1030 Call Light.get_colorTemperature, X0
	1031 Move X0, X31
	1032 Call Mathf.CorrelatedColorTemperatureToRGB, V0
	1033 Multiply S0, S8, S0
	1034 Multiply S1, S9, S1
	1035 Multiply S2, S10, S2
	1036 Multiply S3, S11, S3
	1037 Move X0, X26
	1038 Move X1, X31
	1039 Call Light.get_color, X0
	1040 Move V4, [X31+196]
	1041 Multiply S13, S4, S0
	1042 Multiply S9, S4, S1
	1043 Multiply S12, S4, S2
	1044 Multiply S8, S4, S3
	1045 Move X8, [X31+784]
	1046 Compare X8, 0
	1047 JumpIfEqual {2261}
	1048 Move V0, [X8+44]
	1049 Move V1, [X31+192]
	1050 Multiply S15, S1, S0
	1051 NotImplemented "Instruction FCMP not yet implemented."
	1052 Move W9, [X8+108]
	1053 Compare W9, 0
	1054 JumpIfEqual {1058}
	1055 Move W9, 0x3F800000
	1056 Move S10, 1
	1057 Move [X31+776], W9
	1058 Move W9, [X8+76]
	1059 Compare W9, 0
	1060 JumpIfEqual {1055}
	1061 Move X25, [X8+48]
	1062 Move S10, 1
	1063 Compare X25, 0
	1064 JumpIfEqual {2320}
	1065 Move X8, [X25]
	1066 Move X9, [X8+424]
	1067 Move X1, [X8+432]
	1068 Move X0, X25
	1069 NotImplemented "Instruction BLR not yet implemented."
	1070 Move X8, [X25]
	1071 Move W27, W0
	1072 Move X9, [X8+392]
	1073 Move X1, [X8+400]
	1074 Move X0, X25
	1075 NotImplemented "Instruction BLR not yet implemented."
	1076 Move X8, [X31+784]
	1077 NotImplemented "Instruction SCVTF not yet implemented."
	1078 NotImplemented "Instruction SCVTF not yet implemented."
	1079 NotImplemented "Instruction FDIV not yet implemented."
	1080 Move [X31+776], S0
	1081 Compare X8, 0
	1082 JumpIfEqual {2319}
	1083 Move W9, [X8+76]
	1084 Compare W9, 0
	1085 JumpIfEqual {1092}
	1086 Move V0, [X31+776]
	1087 Move S14, [X8+60]
	1088 Move S1, [X8+64]
	1089 NotImplemented "Instruction FCMP not yet implemented."
	1090 Multiply S1, S0, S1
	1091 Move [X31+292], S1
	1092 Move S14, [X8+60]
	1093 Move S0, [X8+64]
	1094 Move [X31+292], S0
	1095 Move [X31+292], S1
	1096 NotImplemented "Instruction FDIV not yet implemented."
	1097 Move V2, [X8+80]
	1098 Move V0, [X8+56]
	1099 Move V1, [X28+108]
	1100 Move [X31+232], S2
	1101 Move V2, [X31+108]
	1102 Multiply S0, S2, S0
	1103 Multiply S11, S0, S1
	1104 Move [X31+772], S11
	1105 Move V1, [X8+84]
	1106 Move V0, [X8+88]
	1107 Move [X31+216], S0
	1108 Move [X31+224], S1
	1109 Move V0, [X8+92]
	1110 Move [X31+224], S0
	1111 Move V0, [X8+96]
	1112 Move [X31+212], S0
	1113 Move X0, X31
	1114 Call SystemInfo.get_graphicsUVStartsAtTop
	1115 Move X24, [X31+784]
	1116 Move TEMP, X0
	1117 And TEMP, TEMP, 1
	1118 Compare TEMP, 1
	1119 JumpIfNotEqual {1123}
	1120 Compare X24, 0
	1121 JumpIfEqual {2313}
	1122 Move V1, [X24+32]
	1123 Compare X24, 0
	1124 JumpIfEqual {2314}
	1125 Move V0, [X24+32]
	1126 NotImplemented "Instruction FNEG not yet implemented."
	1127 Move X8, -49168384
	1128 Move V0, [X8+100]
	1129 Add X0, X31, 316
	1130 Add X1, X31, 312
	1131 Move [X31+228], S1
	1132 Multiply S0, S1, S0
	1133 Call 0x3EB2BC0
	1134 Move V0, [X31+312]
	1135 Move V1, [X31+316]
	1136 Move [X31+764], S0
	1137 Move [X31+768], S1
	1138 Move [X31+252], S1
	1139 Move [X31+260], S0
	1140 Move V0, [X24+20]
	1141 Add S0, S0, S0
	1142 Move [X31+760], S0
	1143 Move W9, [X24+100]
	1144 Move W8, [X24+108]
	1145 Move [X31+300], S0
	1146 Subtract W10, W9, 1
	1147 NotImplemented "Instruction CMP not yet implemented."
	1148 NotImplemented "Instruction CSEL not yet implemented."
	1149 Compare W8, 0
	1150 JumpIfEqual {1177}
	1151 NotImplemented "Instruction CMP not yet implemented."
	1152 NotImplemented "Instruction CMP not yet implemented."
	1153 Move X8, 0x784000
	1154 Move X8, [X8+3680]
	1155 Move X1, [X8]
	1156 Move X0, X19
	1157 Move X2, X31
	1158 Call CommandBuffer.DisableShaderKeyword, X0, X1
	1159 Move X8, 0x784000
	1160 Move X8, [X8+3672]
	1161 Move X1, [X8]
	1162 Move X0, X19
	1163 Move X2, X31
	1164 Call CommandBuffer.EnableShaderKeyword, X0, X1
	1165 Move X8, 0x784000
	1166 Move X8, [X8+3680]
	1167 Move X1, [X8]
	1168 Move X0, X19
	1169 Move X2, X31
	1170 Call CommandBuffer.EnableShaderKeyword, X0, X1
	1171 Move X8, 0x784000
	1172 Move X8, [X8+3672]
	1173 Move X1, [X8]
	1174 Move X0, X19
	1175 Move X2, X31
	1176 Call CommandBuffer.DisableShaderKeyword, X0, X1
	1177 Move X8, 0x784000
	1178 Move X8, [X8+3680]
	1179 Move X1, [X8]
	1180 Move X0, X19
	1181 Move X2, X31
	1182 Call CommandBuffer.DisableShaderKeyword, X0, X1
	1183 Move X8, 0x784000
	1184 Move X8, [X8+3672]
	1185 Move X1, [X8]
	1186 Move X0, X19
	1187 Move X2, X31
	1188 Call CommandBuffer.DisableShaderKeyword, X0, X1
	1189 Move X8, [X31+784]
	1190 Compare X8, 0
	1191 JumpIfEqual {2297}
	1192 Move W9, [X8+108]
	1193 Subtract W9, W9, 1
	1194 NotImplemented "Instruction CMP not yet implemented."
	1195 Move X9, 0x784000
	1196 Move W8, [X8+220]
	1197 Move X9, [X9+3656]
	1198 Move X1, [X9]
	1199 Compare W8, 0
	1200 JumpIfEqual {1210}
	1201 Move X0, X19
	1202 Move X2, X31
	1203 Call CommandBuffer.EnableShaderKeyword, X0, X1
	1204 Move X8, 0x784000
	1205 Move X8, [X8+3656]
	1206 Move X1, [X8]
	1207 Move X0, X19
	1208 Move X2, X31
	1209 Call CommandBuffer.DisableShaderKeyword, X0, X1
	1210 Move X0, X19
	1211 Move X2, X31
	1212 Call CommandBuffer.DisableShaderKeyword, X0, X1
	1213 Move X8, [X31+784]
	1214 Compare X8, 0
	1215 JumpIfEqual {2296}
	1216 Move X9, 0x724000
	1217 Move X9, [X9+1432]
	1218 Move X25, [X8+48]
	1219 Move X0, [X9]
	1220 Move W9, [X0+224]
	1221 Compare W9, 0
	1222 JumpIfNotEqual {1224}
	1223 Call 0x1C17DFC
	1224 Move X0, X25
	1225 Move X1, X31
	1226 Move X2, X31
	1227 Call Object.op_Inequality, X0, X1
	1228 Move TEMP, X0
	1229 And TEMP, TEMP, 1
	1230 Compare TEMP, 1
	1231 JumpIfNotEqual {1250}
	1232 Move X8, [X31+784]
	1233 Compare X8, 0
	1234 JumpIfEqual {2312}
	1235 Move X0, [X8+48]
	1236 Add X8, X31, 656
	1237 Move X1, X31
	1238 Call RenderTargetIdentifier.op_Implicit, X0
	1239 Move V0, [X22+192]
	1240 Move V1, [X22+208]
	1241 Move X8, [X31+688]
	1242 Move [X31+320], V0
	1243 Move [X31+328], V1
	1244 Move [X31+352], X8
	1245 Move W1, [X31+112]
	1246 Add X2, X31, 320
	1247 Move X0, X19
	1248 Move X3, X31
	1249 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	1250 Move X24, [X31+784]
	1251 Compare X24, 0
	1252 JumpIfEqual {2295}
	1253 Move V0, [X24+208]
	1254 Move X8, -49172480
	1255 Move V1, [X8+848]
	1256 Move W8, [X24+108]
	1257 Subtract S0, S10, S0
	1258 Move [X31+296], S14
	1259 Add S0, S0, S1
	1260 NotImplemented "Instruction FMIN not yet implemented."
	1261 NotImplemented "Instruction FCMP not yet implemented."
	1262 Move S0, W31
	1263 Move [X31+180], S13
	1264 Move [X31+200], S9
	1265 NotImplemented "Instruction FCSEL not yet implemented."
	1266 Move V14, V12
	1267 Move V13, V8
	1268 NotImplemented "Instruction CMP not yet implemented."
	1269 Add S0, S9, S10
	1270 Move S1, 5
	1271 Call 0x3EB2B50
	1272 Move V9, V0
	1273 Move W8, [X28+112]
	1274 Move V0, [X24+204]
	1275 Move S12, 1
	1276 Move S1, -1
	1277 NotImplemented "Instruction CMP not yet implemented."
	1278 Subtract S0, S10, S0
	1279 NotImplemented "Instruction FCSEL not yet implemented."
	1280 NotImplemented "Instruction FMIN not yet implemented."
	1281 NotImplemented "Instruction FCMP not yet implemented."
	1282 Move S2, W31
	1283 NotImplemented "Instruction FCSEL not yet implemented."
	1284 Move V8, [X24+216]
	1285 NotImplemented "Instruction FMAX not yet implemented."
	1286 Move S1, 4
	1287 Multiply S0, S0, S1
	1288 Add S0, S0, S2
	1289 Call 0x3EB2E70
	1290 Move V2, V0
	1291 Move V0, [X24+212]
	1292 NotImplemented "Instruction SCVTF not yet implemented."
	1293 NotImplemented "Instruction FDIV not yet implemented."
	1294 Move W1, [X31+136]
	1295 Move X0, X19
	1296 Move V0, V10
	1297 Move V1, V9
	1298 Move X2, X31
	1299 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1300 Move X8, [X31+784]
	1301 Compare X8, 0
	1302 JumpIfEqual {2294}
	1303 Move W9, [X8+108]
	1304 NotImplemented "Instruction CMP not yet implemented."
	1305 Move V0, [X8+212]
	1306 Move X8, -49176576
	1307 Move V1, [X8+3916]
	1308 Move S2, 1
	1309 NotImplemented "Instruction SCVTF not yet implemented."
	1310 NotImplemented "Instruction FDIV not yet implemented."
	1311 Multiply S0, S10, S1
	1312 Call 0x3EB2BD0
	1313 Move X8, -49172480
	1314 Move V1, [X8+108]
	1315 Multiply S2, S8, S0
	1316 Subtract S9, S0, S2
	1317 Move S0, 0.5
	1318 Multiply S10, S10, S1
	1319 Multiply S0, S10, S0
	1320 Call 0x3EB2E50
	1321 Multiply S3, S0, S9
	1322 Move W1, [X31+132]
	1323 Move X0, X19
	1324 Move V0, V8
	1325 Move V1, V9
	1326 Move V2, V10
	1327 Move X2, X31
	1328 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1329 Move W1, [X31+132]
	1330 Move S1, W31
	1331 Move S2, W31
	1332 Move S3, W31
	1333 Move X0, X19
	1334 Move V0, V8
	1335 Move X2, X31
	1336 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1337 Move X8, [X31+784]
	1338 Compare X8, 0
	1339 JumpIfEqual {2298}
	1340 Move V0, [X31+296]
	1341 Move S2, [X31+216]
	1342 Move S1, [X31+220]
	1343 Move V3, [X31+212]
	1344 Move W9, [X8+68]
	1345 Multiply S0, S0, S11
	1346 Move [X31+296], S0
	1347 Move V0, [X31+292]
	1348 Multiply S3, S13, S3
	1349 Multiply S0, S0, S11
	1350 Move [X31+292], S0
	1351 Move V0, [X31+180]
	1352 Multiply S0, S0, S1
	1353 Move V1, [X31+200]
	1354 Multiply S4, S15, S0
	1355 Multiply S1, S1, S2
	1356 Move V2, [X31+224]
	1357 Multiply S0, S15, S1
	1358 Move [X31+212], S4
	1359 Move [X31+220], S0
	1360 Multiply S0, S15, S3
	1361 Multiply S2, S14, S2
	1362 Multiply S1, S15, S2
	1363 Move [X31+220], S1
	1364 Move [X31+228], S0
	1365 Compare W9, 0
	1366 JumpIfEqual {1369}
	1367 Move W9, [X8+72]
	1368 Subtract W10, W9, 1
	1369 Move X9, 0x783000
	1370 Move X9, [X9+3480]
	1371 Move X0, [X9]
	1372 Move W9, [X0+224]
	1373 Compare W9, 0
	1374 JumpIfNotEqual {1377}
	1375 Call 0x1C17DFC
	1376 Move X8, [X31+784]
	1377 Compare X8, 0
	1378 JumpIfEqual {2307}
	1379 Move V1, [X31+300]
	1380 Move V2, [X31+304]
	1381 Move V3, [X31+308]
	1382 Move S0, -1
	1383 Move S5, [X31+252]
	1384 Move S4, [X31+256]
	1385 Add S0, S1, S0
	1386 Multiply S1, S2, S0
	1387 Multiply S0, S3, S0
	1388 Move W9, [X8+180]
	1389 Add S1, S2, S1
	1390 Add S0, S3, S0
	1391 NotImplemented "Instruction FNEG not yet implemented."
	1392 Multiply S0, S5, S0
	1393 Multiply S3, S4, S1
	1394 Subtract S8, S0, S3
	1395 Multiply S0, S4, S2
	1396 Multiply S1, S5, S1
	1397 Subtract S9, S0, S1
	1398 Compare W9, 0
	1399 JumpIfEqual {1435}
	1400 Move X9, 0x783000
	1401 Move X9, [X9+3480]
	1402 Move X0, [X9]
	1403 Move W9, [X0+224]
	1404 Compare W9, 0
	1405 JumpIfNotEqual {1410}
	1406 Call 0x1C17DFC
	1407 Move X8, [X31+784]
	1408 Compare X8, 0
	1409 JumpIfEqual {2321}
	1410 Move V0, [X31+84]
	1411 Move S5, [X31+252]
	1412 Move S4, [X31+256]
	1413 Move V2, [X31+92]
	1414 Move X0, [X8+192]
	1415 Multiply S0, S4, S0
	1416 Multiply S1, S2, S5
	1417 Subtract S3, S0, S1
	1418 Move V0, [X31+88]
	1419 Multiply S1, S2, S4
	1420 Multiply S0, S0, S5
	1421 Subtract S2, S0, S1
	1422 Move V4, [X31+296]
	1423 Move V5, [X31+292]
	1424 Add X1, X31, 792
	1425 Add X2, X31, 784
	1426 Add X3, X31, 760
	1427 Move V0, V8
	1428 Move V1, V9
	1429 Call LensFlareCommonSRP.<DoLensFlareDataDrivenCommon>g__ComputeLocalSize|40_0, X0, X1, X2, X3, X4, X5, X6
	1430 Move [X31+296], S0
	1431 Move [X31+292], S1
	1432 Move X8, [X31+784]
	1433 Compare X8, 0
	1434 JumpIfEqual {2315}
	1435 Move X9, 0x783000
	1436 Move X9, [X9+3480]
	1437 Move S11, [X8+36]
	1438 Move S10, [X8+40]
	1439 Move S12, [X8+24]
	1440 Move S13, [X8+28]
	1441 Move W24, [X8+104]
	1442 Move X0, [X9]
	1443 Move W9, [X0+224]
	1444 Compare W9, 0
	1445 JumpIfNotEqual {1447}
	1446 Call 0x1C17DFC
	1447 NotImplemented "Instruction CMP not yet implemented."
	1448 NotImplemented "Instruction CSET not yet implemented."
	1449 Move V0, [X31+228]
	1450 Move V1, [X31+308]
	1451 Move V6, [X31+248]
	1452 Move S7, 1
	1453 Move [X31+16], S0
	1454 Move V0, [X31+300]
	1455 Move V2, V11
	1456 Move V3, V10
	1457 Move V4, V8
	1458 Move [X31+8], S0
	1459 Move V0, [X31+232]
	1460 Move V5, V9
	1461 Move [X31+24], S12
	1462 Move [X31+32], S13
	1463 Move [X31], S0
	1464 Move V0, [X31+304]
	1465 Call LensFlareCommonSRP.GetFlareData0, X0, X1, X2, X3, V0, V1, V2, X4, X5
	1466 Move W1, [X31+244]
	1467 Move X0, X19
	1468 Move X2, X31
	1469 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1470 Move W1, [X31+240]
	1471 Move V0, [X31+304]
	1472 Move V1, [X31+308]
	1473 Move V2, [X31+296]
	1474 Move V3, [X31+292]
	1475 Move X0, X19
	1476 Move X2, X31
	1477 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1478 Move W1, [X31+236]
	1479 Move S0, [X31+212]
	1480 Move S1, [X31+216]
	1481 Move S2, [X31+220]
	1482 Move S3, [X31+224]
	1483 Move X0, X19
	1484 Move X2, X31
	1485 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1486 Move X8, 0x783000
	1487 Move X8, [X8+3624]
	1488 Move X0, [X8]
	1489 Move W8, [X0+224]
	1490 Compare W8, 0
	1491 JumpIfNotEqual {1493}
	1492 Call 0x1C17DFC
	1493 Move X1, [X31+272]
	1494 Move X0, X19
	1495 Move W2, W27
	1496 Move X3, X31
	1497 Call Blitter.DrawQuad, X0, X1, X2
	1498 Move W8, [X29+24]
	1499 Add X21, X21, 1
	1500 NotImplemented "Instruction CMP not yet implemented."
	1501 Move V0, [X8+120]
	1502 Move W11, [X8+116]
	1503 NotImplemented "Instruction SCVTF not yet implemented."
	1504 Add S0, S0, S0
	1505 NotImplemented "Instruction FDIV not yet implemented."
	1506 Move [X31+180], S0
	1507 Compare W11, 0
	1508 JumpIfEqual {2041}
	1509 NotImplemented "Instruction CMP not yet implemented."
	1510 NotImplemented "Instruction CMP not yet implemented."
	1511 NotImplemented "Instruction CMP not yet implemented."
	1512 Move V0, [X31+308]
	1513 Move V2, [X31+92]
	1514 Move S5, [X31+252]
	1515 Move S4, [X31+256]
	1516 Move W24, W31
	1517 Subtract S0, S0, S0
	1518 NotImplemented "Instruction FNEG not yet implemented."
	1519 Multiply S1, S5, S2
	1520 Multiply S2, S4, S2
	1521 Multiply S0, S5, S0
	1522 Multiply S3, S4, S3
	1523 Subtract S1, S3, S1
	1524 Subtract S0, S0, S2
	1525 Move [X31+128], S1
	1526 Move [X31+104], S0
	1527 NotImplemented "Instruction CMP not yet implemented."
	1528 Move S13, 0.5
	1529 Subtract W9, W9, 1
	1530 NotImplemented "Instruction SCVTF not yet implemented."
	1531 NotImplemented "Instruction SCVTF not yet implemented."
	1532 NotImplemented "Instruction FDIV not yet implemented."
	1533 Move X0, [X8+152]
	1534 Compare X0, 0
	1535 JumpIfEqual {2279}
	1536 Move V0, V13
	1537 Move X1, X31
	1538 Call Gradient.Evaluate, X0, V0
	1539 Move X8, [X31+784]
	1540 Compare X8, 0
	1541 JumpIfEqual {2278}
	1542 Move X0, [X8+128]
	1543 Compare X0, 0
	1544 JumpIfEqual {2276}
	1545 Move V10, V0
	1546 Move V11, V1
	1547 Move V12, V2
	1548 Move V14, V3
	1549 Move X1, X31
	1550 Call AnimationCurve.get_length, X0
	1551 NotImplemented "Instruction CMP not yet implemented."
	1552 Move X8, [X31+784]
	1553 Compare X8, 0
	1554 JumpIfEqual {2304}
	1555 Move X0, [X8+128]
	1556 Compare X0, 0
	1557 JumpIfEqual {2303}
	1558 Move V0, V13
	1559 Move X1, X31
	1560 Call AnimationCurve.Evaluate, X0, V0
	1561 Move V8, V0
	1562 Move S8, 1
	1563 Move X8, [X31+784]
	1564 Compare X8, 0
	1565 JumpIfEqual {2272}
	1566 Move X9, 0x783000
	1567 Move X9, [X9+3480]
	1568 Move V9, [X8+120]
	1569 Move X0, [X9]
	1570 Move W9, [X0+224]
	1571 Compare W9, 0
	1572 JumpIfNotEqual {1575}
	1573 Call 0x1C17DFC
	1574 Move X8, [X31+784]
	1575 Compare X8, 0
	1576 JumpIfEqual {2270}
	1577 Move V1, [X31+300]
	1578 Add S0, S9, S9
	1579 Move V2, [X31+304]
	1580 Move V3, [X31+308]
	1581 Multiply S0, S8, S0
	1582 Add S1, S1, S0
	1583 Move S0, -1
	1584 Move S5, [X31+252]
	1585 Move S4, [X31+256]
	1586 Add S0, S1, S0
	1587 Move [X31+200], S1
	1588 Multiply S1, S2, S0
	1589 Multiply S0, S3, S0
	1590 Move W9, [X8+180]
	1591 Add S1, S2, S1
	1592 Add S0, S3, S0
	1593 NotImplemented "Instruction FNEG not yet implemented."
	1594 Multiply S0, S5, S0
	1595 Multiply S3, S4, S1
	1596 Subtract S8, S0, S3
	1597 Multiply S0, S4, S2
	1598 Multiply S1, S5, S1
	1599 Subtract S9, S0, S1
	1600 Compare W9, 0
	1601 JumpIfEqual {1628}
	1602 Move X9, 0x783000
	1603 Move X9, [X9+3480]
	1604 Move X0, [X9]
	1605 Move W9, [X0+224]
	1606 Compare W9, 0
	1607 JumpIfNotEqual {1612}
	1608 Call 0x1C17DFC
	1609 Move X8, [X31+784]
	1610 Compare X8, 0
	1611 JumpIfEqual {2318}
	1612 Move X0, [X8+192]
	1613 Move V2, [X31+104]
	1614 Move V3, [X31+128]
	1615 Move V4, [X31+296]
	1616 Move V5, [X31+292]
	1617 Add X1, X31, 792
	1618 Add X2, X31, 784
	1619 Add X3, X31, 760
	1620 Move V0, V8
	1621 Move V1, V9
	1622 Call LensFlareCommonSRP.<DoLensFlareDataDrivenCommon>g__ComputeLocalSize|40_0, X0, X1, X2, X3, X4, X5, X6
	1623 Move [X31+176], S1
	1624 Move [X31+184], S0
	1625 Move X8, [X31+784]
	1626 Compare X8, 0
	1627 JumpIfNotEqual {1632}
	1628 Move V1, [X31+296]
	1629 Move V0, [X31+292]
	1630 Move [X31+176], S0
	1631 Move [X31+184], S1
	1632 Move X0, [X8+136]
	1633 Compare X0, 0
	1634 JumpIfEqual {2267}
	1635 Move X1, X31
	1636 Call AnimationCurve.get_length, X0
	1637 NotImplemented "Instruction CMP not yet implemented."
	1638 Move X8, [X31+784]
	1639 Compare X8, 0
	1640 JumpIfEqual {2300}
	1641 Move X0, [X8+136]
	1642 Compare X0, 0
	1643 JumpIfEqual {2306}
	1644 Move V0, V13
	1645 Move X1, X31
	1646 Call AnimationCurve.Evaluate, X0, V0
	1647 Move [X31+172], S0
	1648 Move S0, 1
	1649 Move [X31+172], S0
	1650 Move X8, [X31+784]
	1651 Compare X8, 0
	1652 JumpIfEqual {2281}
	1653 Move X0, [X8+232]
	1654 Compare X0, 0
	1655 JumpIfEqual {2284}
	1656 Move V0, V13
	1657 Move X1, X31
	1658 Call AnimationCurve.Evaluate, X0, V0
	1659 Move X8, [X31+784]
	1660 Move [X31+164], S12
	1661 Move [X31+172], S14
	1662 Compare X8, 0
	1663 JumpIfEqual {2282}
	1664 Move X9, 0x783000
	1665 Move V13, [X8+72]
	1666 Move X9, [X9+3480]
	1667 Move V15, V0
	1668 Move V12, V11
	1669 Move V1, [X8+36]
	1670 Move X0, [X9]
	1671 Move V0, [X8+40]
	1672 Move S11, [X8+24]
	1673 Move S14, [X8+28]
	1674 Move W25, [X8+104]
	1675 Move W9, [X0+224]
	1676 Move [X31+156], S1
	1677 Move [X31+164], S0
	1678 Compare W9, 0
	1679 JumpIfNotEqual {1681}
	1680 Call 0x1C17DFC
	1681 Move W8, 0x43340000
	1682 NotImplemented "Instruction SCVTF not yet implemented."
	1683 Move S1, W8
	1684 NotImplemented "Instruction FDIV not yet implemented."
	1685 Subtract S0, S1, S0
	1686 Move V1, [X31+232]
	1687 NotImplemented "Instruction CMP not yet implemented."
	1688 Multiply S0, S15, S0
	1689 NotImplemented "Instruction CSET not yet implemented."
	1690 Add S0, S1, S0
	1691 Move V1, [X31+228]
	1692 Move [X31], S0
	1693 Move V0, [X31+304]
	1694 Move S2, [X31+156]
	1695 Move S3, [X31+160]
	1696 Move [X31+16], S1
	1697 Move V1, [X31+200]
	1698 Move V6, [X31+248]
	1699 Move S7, 1
	1700 Move V4, V8
	1701 Move [X31+8], S1
	1702 Move V1, [X31+308]
	1703 Move V5, V9
	1704 Move [X31+24], S11
	1705 Move [X31+32], S14
	1706 Call LensFlareCommonSRP.GetFlareData0, X0, X1, X2, X3, V0, V1, V2, X4, X5
	1707 Move W1, [X31+244]
	1708 Move X0, X19
	1709 Move X2, X31
	1710 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1711 Move V9, V12
	1712 Move S12, [X31+164]
	1713 Move S13, [X31+168]
	1714 Move V0, [X31+180]
	1715 Move V1, [X31+172]
	1716 Multiply S2, S0, S1
	1717 Move V0, [X31+176]
	1718 Multiply S3, S0, S1
	1719 Move W1, [X31+240]
	1720 Move V0, [X31+304]
	1721 Move V1, [X31+308]
	1722 Move X0, X19
	1723 Move X2, X31
	1724 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1725 Move S0, [X31+212]
	1726 Move S1, [X31+216]
	1727 Move S2, [X31+220]
	1728 Move S3, [X31+224]
	1729 Multiply S0, S0, S10
	1730 Multiply S1, S1, S9
	1731 Multiply S2, S2, S12
	1732 Multiply S3, S3, S13
	1733 Move W1, [X31+236]
	1734 Move X0, X19
	1735 Move X2, X31
	1736 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1737 Move X8, 0x783000
	1738 Move X8, [X8+3624]
	1739 Move X0, [X8]
	1740 Move W8, [X0+224]
	1741 Compare W8, 0
	1742 JumpIfNotEqual {1744}
	1743 Call 0x1C17DFC
	1744 Move X1, [X31+272]
	1745 Move X0, X19
	1746 Move W2, W27
	1747 Move X3, X31
	1748 Call Blitter.DrawQuad, X0, X1, X2
	1749 Move X8, [X31+784]
	1750 Compare X8, 0
	1751 JumpIfEqual {2274}
	1752 Move W9, [X8+72]
	1753 Add W24, W24, 1
	1754 NotImplemented "Instruction CMP not yet implemented."
	1755 Move X0, X31
	1756 Call Random.get_state
	1757 Move X8, [X31+784]
	1758 Compare X8, 0
	1759 JumpIfEqual {2323}
	1760 Move [X31+48], X1
	1761 Move [X31+56], X0
	1762 Move W0, [X8+144]
	1763 Move X1, X31
	1764 Call Random.InitState, X0
	1765 Move X8, [X31+784]
	1766 Compare X8, 0
	1767 JumpIfEqual {2322}
	1768 Move W9, [X8+72]
	1769 NotImplemented "Instruction CMP not yet implemented."
	1770 Move V1, [X31+308]
	1771 Move V3, [X31+92]
	1772 Move S6, [X31+252]
	1773 Move S5, [X31+256]
	1774 Move V0, [X8+168]
	1775 Subtract S1, S1, S1
	1776 NotImplemented "Instruction FNEG not yet implemented."
	1777 Multiply S2, S6, S3
	1778 Multiply S3, S5, S3
	1779 Multiply S1, S6, S1
	1780 Multiply S4, S5, S4
	1781 Subtract S7, S1, S3
	1782 Subtract S1, S4, S2
	1783 Move [X31+76], S1
	1784 Move [X31+84], S7
	1785 Multiply S1, S6, S0
	1786 Multiply S0, S5, S0
	1787 Move [X31+68], S0
	1788 Move [X31+76], S1
	1789 Move V1, [X31+180]
	1790 Move S0, 0.5
	1791 Move W24, W31
	1792 Multiply S0, S1, S0
	1793 Move [X31+104], S0
	1794 Move X8, 0x783000
	1795 Move X8, [X8+3480]
	1796 Move X0, [X8]
	1797 Move W8, [X0+224]
	1798 Compare W8, 0
	1799 JumpIfNotEqual {1801}
	1800 Call 0x1C17DFC
	1801 Move S0, -1
	1802 Move S1, 1
	1803 Move X0, X31
	1804 Call Random.Range, V0, V1
	1805 Move X8, [X31+784]
	1806 Compare X8, 0
	1807 JumpIfEqual {2268}
	1808 Move V1, [X31+300]
	1809 Move V2, [X31+304]
	1810 Move V3, [X31+308]
	1811 Move V15, V0
	1812 Move S0, -1
	1813 Move S5, [X31+252]
	1814 Move S4, [X31+256]
	1815 Add S0, S1, S0
	1816 Multiply S1, S2, S0
	1817 Multiply S0, S3, S0
	1818 Move V12, [X8+160]
	1819 Move W9, [X8+180]
	1820 Add S1, S2, S1
	1821 Add S0, S3, S0
	1822 NotImplemented "Instruction FNEG not yet implemented."
	1823 Multiply S0, S5, S0
	1824 Multiply S3, S4, S1
	1825 Subtract S8, S0, S3
	1826 Multiply S0, S4, S2
	1827 Multiply S1, S5, S1
	1828 Subtract S10, S0, S1
	1829 Compare W9, 0
	1830 JumpIfEqual {1857}
	1831 Move X9, 0x783000
	1832 Move X9, [X9+3480]
	1833 Move X0, [X9]
	1834 Move W9, [X0+224]
	1835 Compare W9, 0
	1836 JumpIfNotEqual {1841}
	1837 Call 0x1C17DFC
	1838 Move X8, [X31+784]
	1839 Compare X8, 0
	1840 JumpIfEqual {2316}
	1841 Move X0, [X8+192]
	1842 Move S3, [X31+76]
	1843 Move S2, [X31+80]
	1844 Move V4, [X31+296]
	1845 Move V5, [X31+292]
	1846 Add X1, X31, 792
	1847 Add X2, X31, 784
	1848 Add X3, X31, 760
	1849 Move V0, V8
	1850 Move V1, V10
	1851 Call LensFlareCommonSRP.<DoLensFlareDataDrivenCommon>g__ComputeLocalSize|40_0, X0, X1, X2, X3, X4, X5, X6
	1852 Move X8, [X31+784]
	1853 Compare X8, 0
	1854 JumpIfEqual {2305}
	1855 Move V11, V0
	1856 Move V9, V1
	1857 Move V11, [X31+296]
	1858 Move V9, [X31+292]
	1859 Move X9, 0x783000
	1860 Move X9, [X9+3480]
	1861 Move V13, [X8+172]
	1862 Move X0, [X9]
	1863 Move W9, [X0+224]
	1864 Compare W9, 0
	1865 JumpIfNotEqual {1867}
	1866 Call 0x1C17DFC
	1867 Move S0, -1
	1868 Move S1, 1
	1869 Move X0, X31
	1870 Call Random.Range, V0, V1
	1871 Move X8, [X31+784]
	1872 Compare X8, 0
	1873 JumpIfEqual {2265}
	1874 Move X25, [X8+152]
	1875 Move V14, V0
	1876 Move S0, W31
	1877 Move S1, 1
	1878 Move X0, X31
	1879 Call Random.Range, V0, V1
	1880 Compare X25, 0
	1881 JumpIfEqual {2277}
	1882 Move X0, X25
	1883 Move X1, X31
	1884 Move [X31+172], S9
	1885 Move [X31+180], S14
	1886 Move [X31+200], S13
	1887 Call Gradient.Evaluate, X0, V0
	1888 Move X8, [X31+784]
	1889 Move [X31+128], S3
	1890 Move [X31+156], S2
	1891 Move [X31+164], S1
	1892 Move [X31+164], S0
	1893 Move [X31+172], S11
	1894 Compare X8, 0
	1895 JumpIfEqual {2280}
	1896 Move V9, V8
	1897 Move S11, [X8+24]
	1898 Move S8, [X8+28]
	1899 Move V14, V10
	1900 Move S0, -1
	1901 Move S1, 1
	1902 Move X0, X31
	1903 Call Random.Range, V0, V1
	1904 Move V10, V0
	1905 Move X8, -49172480
	1906 Move V0, [X8+172]
	1907 Move X8, -49176576
	1908 Move V1, [X8+3916]
	1909 Move X0, X31
	1910 Call Random.Range, V0, V1
	1911 Move X8, [X31+784]
	1912 Compare X8, 0
	1913 JumpIfEqual {2275}
	1914 Move V13, V0
	1915 Multiply S0, S15, S12
	1916 Move S1, 1
	1917 Add S15, S0, S1
	1918 NotImplemented "Instruction FCMP not yet implemented."
	1919 Move X9, 0x783000
	1920 Move X9, [X9+3480]
	1921 Move V12, [X8+176]
	1922 Move V1, [X8+36]
	1923 Move V0, [X8+40]
	1924 Move X0, [X9]
	1925 Move W25, [X8+104]
	1926 Move [X31+96], S1
	1927 Move [X31+104], S0
	1928 Move W9, [X0+224]
	1929 Compare W9, 0
	1930 JumpIfNotEqual {1932}
	1931 Call 0x1C17DFC
	1932 Move S1, [X31+68]
	1933 Move S0, [X31+72]
	1934 Move V3, [X31+232]
	1935 Multiply S2, S13, S12
	1936 NotImplemented "Instruction CMP not yet implemented."
	1937 Multiply S0, S0, S10
	1938 Multiply S1, S1, S10
	1939 Add S0, S11, S0
	1940 Add S1, S8, S1
	1941 Add S2, S3, S2
	1942 NotImplemented "Instruction CSET not yet implemented."
	1943 Move [X31+24], S0
	1944 Move [X31+32], S1
	1945 Move V0, [X31+228]
	1946 Move [X31], S2
	1947 Move V1, [X31+308]
	1948 Move S2, [X31+96]
	1949 Move S3, [X31+100]
	1950 Move [X31+16], S0
	1951 Move V0, [X31+300]
	1952 Move V6, [X31+248]
	1953 Move S7, 1
	1954 Move V4, V9
	1955 Move [X31+8], S0
	1956 Move V0, [X31+304]
	1957 Move V5, V14
	1958 Call LensFlareCommonSRP.GetFlareData0, X0, X1, X2, X3, V0, V1, V2, X4, X5
	1959 Move W1, [X31+244]
	1960 Move X0, X19
	1961 Move X2, X31
	1962 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1963 Move V9, [X31+168]
	1964 Move V0, [X31+200]
	1965 Move V1, [X31+176]
	1966 Move V3, [X31+172]
	1967 Multiply S0, S0, S1
	1968 Multiply S1, S9, S0
	1969 Add S2, S9, S1
	1970 Multiply S0, S3, S0
	1971 Add S3, S3, S0
	1972 Move W1, [X31+240]
	1973 Move V0, [X31+304]
	1974 Move V1, [X31+308]
	1975 Move X0, X19
	1976 Move X2, X31
	1977 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1978 Move V0, [X31+212]
	1979 Move S2, [X31+160]
	1980 Move S1, [X31+164]
	1981 Move V3, [X31+156]
	1982 Move V4, [X31+128]
	1983 Multiply S0, S0, S1
	1984 Move V1, [X31+216]
	1985 Multiply S0, S15, S0
	1986 Multiply S1, S1, S2
	1987 Move V2, [X31+220]
	1988 Multiply S1, S15, S1
	1989 Multiply S2, S2, S3
	1990 Move V3, [X31+224]
	1991 Multiply S2, S15, S2
	1992 Multiply S3, S3, S4
	1993 Multiply S3, S15, S3
	1994 Move W1, [X31+236]
	1995 Move X0, X19
	1996 Move X2, X31
	1997 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	1998 Move X8, 0x783000
	1999 Move X8, [X8+3624]
	2000 Move X0, [X8]
	2001 Move W8, [X0+224]
	2002 Compare W8, 0
	2003 JumpIfNotEqual {2005}
	2004 Call 0x1C17DFC
	2005 Move X1, [X31+272]
	2006 Move X0, X19
	2007 Move W2, W27
	2008 Move X3, X31
	2009 Call Blitter.DrawQuad, X0, X1, X2
	2010 Move X8, 0x783000
	2011 Move X8, [X8+3480]
	2012 Move X0, [X8]
	2013 Move W8, [X0+224]
	2014 Compare W8, 0
	2015 JumpIfNotEqual {2017}
	2016 Call 0x1C17DFC
	2017 Move S0, -1
	2018 Move S1, 1
	2019 Move X0, X31
	2020 Call Random.Range, V0, V1
	2021 Move X8, [X31+784]
	2022 Compare X8, 0
	2023 JumpIfEqual {2283}
	2024 Move V2, [X31+300]
	2025 Move V3, [X31+180]
	2026 Move V1, [X8+164]
	2027 Add W24, W24, 1
	2028 Add S2, S3, S2
	2029 Move V3, [X31+104]
	2030 Multiply S0, S3, S0
	2031 Multiply S0, S0, S1
	2032 Add S0, S2, S0
	2033 Move [X31+760], S0
	2034 Move W8, [X8+72]
	2035 Move [X31+300], S0
	2036 NotImplemented "Instruction CMP not yet implemented."
	2037 Move X1, [X31+48]
	2038 Move X0, [X31+56]
	2039 Move X2, X31
	2040 Call Random.set_state, X0
	2041 NotImplemented "Instruction CMP not yet implemented."
	2042 Move V0, [X31+308]
	2043 Move V2, [X31+92]
	2044 Move S5, [X31+252]
	2045 Move S4, [X31+256]
	2046 Move W24, W31
	2047 Subtract S0, S0, S0
	2048 NotImplemented "Instruction FNEG not yet implemented."
	2049 Multiply S1, S5, S2
	2050 Multiply S2, S2, S4
	2051 Multiply S0, S5, S0
	2052 Multiply S3, S4, S3
	2053 Subtract S4, S0, S2
	2054 Subtract S0, S3, S1
	2055 Move [X31+156], S0
	2056 Move [X31+164], S4
	2057 Move S0, W31
	2058 Move [X31+200], S0
	2059 Move X9, 0x783000
	2060 Move X9, [X9+3480]
	2061 Move X0, [X9]
	2062 Move W9, [X0+224]
	2063 Compare W9, 0
	2064 JumpIfNotEqual {2067}
	2065 Call 0x1C17DFC
	2066 Move X8, [X31+784]
	2067 Compare X8, 0
	2068 JumpIfEqual {2273}
	2069 Move V1, [X31+300]
	2070 Move V2, [X31+304]
	2071 Move V3, [X31+308]
	2072 Move S0, -1
	2073 Move S5, [X31+252]
	2074 Move S4, [X31+256]
	2075 Add S0, S1, S0
	2076 Multiply S1, S2, S0
	2077 Multiply S0, S3, S0
	2078 Move W9, [X8+180]
	2079 Add S1, S2, S1
	2080 Add S0, S3, S0
	2081 NotImplemented "Instruction FNEG not yet implemented."
	2082 Multiply S0, S5, S0
	2083 Multiply S3, S4, S1
	2084 Subtract S10, S0, S3
	2085 Multiply S0, S4, S2
	2086 Multiply S1, S5, S1
	2087 Subtract S8, S0, S1
	2088 Compare W9, 0
	2089 JumpIfEqual {2116}
	2090 Move X9, 0x783000
	2091 Move X9, [X9+3480]
	2092 Move X0, [X9]
	2093 Move W9, [X0+224]
	2094 Compare W9, 0
	2095 JumpIfNotEqual {2100}
	2096 Call 0x1C17DFC
	2097 Move X8, [X31+784]
	2098 Compare X8, 0
	2099 JumpIfEqual {2317}
	2100 Move X0, [X8+192]
	2101 Move S3, [X31+156]
	2102 Move S2, [X31+160]
	2103 Move V4, [X31+296]
	2104 Move V5, [X31+292]
	2105 Add X1, X31, 792
	2106 Add X2, X31, 784
	2107 Add X3, X31, 760
	2108 Move V0, V10
	2109 Move V1, V8
	2110 Call LensFlareCommonSRP.<DoLensFlareDataDrivenCommon>g__ComputeLocalSize|40_0, X0, X1, X2, X3, X4, X5, X6
	2111 Move X8, [X31+784]
	2112 Compare X8, 0
	2113 JumpIfEqual {2301}
	2114 Move V9, V0
	2115 Move V11, V1
	2116 Move V9, [X31+296]
	2117 Move V11, [X31+292]
	2118 Move W9, [X8+72]
	2119 Move S0, 0.5
	2120 Subtract W9, W9, 1
	2121 NotImplemented "Instruction SCVTF not yet implemented."
	2122 NotImplemented "Instruction SCVTF not yet implemented."
	2123 NotImplemented "Instruction FDIV not yet implemented."
	2124 Move X0, [X8+152]
	2125 Compare X0, 0
	2126 JumpIfEqual {2271}
	2127 Move X1, X31
	2128 Call Gradient.Evaluate, X0, V0
	2129 Move [X31+172], S1
	2130 Move [X31+180], S0
	2131 Move [X31+164], S3
	2132 Move [X31+172], S2
	2133 Move X8, [X31+784]
	2134 Compare X8, 0
	2135 JumpIfEqual {2269}
	2136 Move X9, 0x783000
	2137 Move X9, [X9+3480]
	2138 Move S15, [X8+36]
	2139 Move S14, [X8+40]
	2140 Move S13, [X8+24]
	2141 Move S12, [X8+28]
	2142 Move W25, [X8+104]
	2143 Move X0, [X9]
	2144 Move W9, [X0+224]
	2145 Compare W9, 0
	2146 JumpIfNotEqual {2148}
	2147 Call 0x1C17DFC
	2148 Move V0, [X31+232]
	2149 Move V1, [X31+200]
	2150 NotImplemented "Instruction CMP not yet implemented."
	2151 NotImplemented "Instruction CSET not yet implemented."
	2152 Add S0, S0, S1
	2153 Move V1, [X31+228]
	2154 Move [X31], S0
	2155 Move V0, [X31+304]
	2156 Move V6, [X31+248]
	2157 Move [X31+16], S1
	2158 Move V1, [X31+300]
	2159 Move S7, 1
	2160 Move V2, V15
	2161 Move V3, V14
	2162 Move [X31+8], S1
	2163 Move V1, [X31+308]
	2164 Move V4, V10
	2165 Move V5, V8
	2166 Move [X31+24], S13
	2167 Move [X31+32], S12
	2168 Call LensFlareCommonSRP.GetFlareData0, X0, X1, X2, X3, V0, V1, V2, X4, X5
	2169 Move W1, [X31+244]
	2170 Move X0, X19
	2171 Move X2, X31
	2172 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	2173 Move W1, [X31+240]
	2174 Move V0, [X31+304]
	2175 Move V1, [X31+308]
	2176 Move X0, X19
	2177 Move V2, V9
	2178 Move V3, V11
	2179 Move X2, X31
	2180 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	2181 Move V0, [X31+212]
	2182 Move S2, [X31+172]
	2183 Move S1, [X31+176]
	2184 Move S4, [X31+164]
	2185 Move S3, [X31+168]
	2186 Multiply S0, S0, S1
	2187 Move V1, [X31+216]
	2188 Multiply S1, S1, S2
	2189 Move V2, [X31+220]
	2190 Multiply S2, S2, S3
	2191 Move V3, [X31+224]
	2192 Multiply S3, S3, S4
	2193 Move W1, [X31+236]
	2194 Move X0, X19
	2195 Move X2, X31
	2196 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	2197 Move X8, 0x783000
	2198 Move X8, [X8+3624]
	2199 Move X0, [X8]
	2200 Move W8, [X0+224]
	2201 Compare W8, 0
	2202 JumpIfNotEqual {2204}
	2203 Call 0x1C17DFC
	2204 Move X1, [X31+272]
	2205 Move X0, X19
	2206 Move W2, W27
	2207 Move X3, X31
	2208 Call Blitter.DrawQuad, X0, X1, X2
	2209 Move V0, [X31+300]
	2210 Move V1, [X31+180]
	2211 Move X8, [X31+784]
	2212 Add S0, S1, S0
	2213 Move [X31+300], S0
	2214 Move [X31+760], S0
	2215 Compare X8, 0
	2216 JumpIfEqual {2266}
	2217 Move W9, [X8+72]
	2218 Move V0, [X8+224]
	2219 Move V1, [X31+200]
	2220 Add W24, W24, 1
	2221 NotImplemented "Instruction CMP not yet implemented."
	2222 Add S1, S1, S0
	2223 Move [X31+200], S1
	2224 Move X8, 0x783000
	2225 Move X8, [X8+3576]
	2226 Add X0, X31, 800
	2227 Move X1, [X8]
	2228 Call Enumerator<Object>.Dispose, X0
	2229 Add X31, X31, 832
	2230 Move X20, [X31+144]
	2231 Move X19, [X31+152]
	2232 Move X22, [X31+128]
	2233 Move X21, [X31+136]
	2234 Move X24, [X31+112]
	2235 Move X23, [X31+120]
	2236 Move X26, [X31+96]
	2237 Move X25, [X31+104]
	2238 Move X28, [X31+80]
	2239 Move X27, [X31+88]
	2240 Move X29, [X31+64]
	2241 Move X30, [X31+72]
	2242 Move D9, [X31+48]
	2243 Move D8, [X31+56]
	2244 Move D11, [X31+32]
	2245 Move D10, [X31+40]
	2246 Move D13, [X31+16]
	2247 Move D12, [X31+24]
	2248 Move D15, [X31+160]
	2249 Move D14, [X31+168]
	2250 Return 
	2251 Call 0x1C17F28
	2252 Call 0x1C17F20
	2253 Call 0x1C17F20
	2254 Call 0x1C17F20
	2255 Call 0x1C17F20
	2256 Call 0x1C17F20
	2257 Call 0x1C17F20
	2258 Call 0x1C17F20
	2259 Call 0x1C17F20
	2260 Call 0x1C17F20
	2261 Call 0x1C17F20
	2262 Call 0x1C17F20
	2263 Call 0x1C17F20
	2264 Call 0x1C17F20
	2265 Call 0x1C17F20
	2266 Call 0x1C17F20
	2267 Call 0x1C17F20
	2268 Call 0x1C17F20
	2269 Call 0x1C17F20
	2270 Call 0x1C17F20
	2271 Call 0x1C17F20
	2272 Call 0x1C17F20
	2273 Call 0x1C17F20
	2274 Call 0x1C17F20
	2275 Call 0x1C17F20
	2276 Call 0x1C17F20
	2277 Call 0x1C17F20
	2278 Call 0x1C17F20
	2279 Call 0x1C17F20
	2280 Call 0x1C17F20
	2281 Call 0x1C17F20
	2282 Call 0x1C17F20
	2283 Call 0x1C17F20
	2284 Call 0x1C17F20
	2285 Call 0x1C17F20
	2286 Call 0x1C17F20
	2287 Call 0x1C17F20
	2288 Call 0x1C17F20
	2289 Call 0x1C17F20
	2290 Call 0x1C17F20
	2291 Call 0x1C17F20
	2292 Call 0x1C17F20
	2293 Call 0x1C17F20
	2294 Call 0x1C17F20
	2295 Call 0x1C17F20
	2296 Call 0x1C17F20
	2297 Call 0x1C17F20
	2298 Call 0x1C17F20
	2299 Call 0x1C17F20
	2300 Call 0x1C17F20
	2301 Call 0x1C17F20
	2302 Call 0x1C17F20
	2303 Call 0x1C17F20
	2304 Call 0x1C17F20
	2305 Call 0x1C17F20
	2306 Call 0x1C17F20
	2307 Call 0x1C17F20
	2308 Call 0x1C17F20
	2309 Call 0x1C17F20
	2310 Call 0x1C17F20
	2311 Call 0x1C17F20
	2312 Call 0x1C17F20
	2313 Call 0x1C17F20
	2314 Call 0x1C17F20
	2315 Call 0x1C17F20
	2316 Call 0x1C17F20
	2317 Call 0x1C17F20
	2318 Call 0x1C17F20
	2319 Call 0x1C17F20
	2320 Call 0x1C17F20
	2321 Call 0x1C17F20
	2322 Call 0x1C17F20
	2323 Call 0x1C17F20
	2324 Move X19, X0
	2325 Move X19, X0
	2326 NotImplemented "Instruction CMP not yet implemented."
	2327 Move X0, X19
	2328 Call 0x3EB2AD0
	2329 Move X20, [X0]
	2330 Call 0x3EB2AE0
	2331 Move X8, 0x782000
	2332 Move X8, [X8+3576]
	2333 Add X0, X31, 800
	2334 Move X1, [X8]
	2335 Call Enumerator<Object>.Dispose, X0
	2336 Compare X20, 0
	2337 JumpIfEqual {2229}
	2338 Move X0, X20
	2339 Call 0x1C17F18
	2340 Move X20, X31
	2341 Move X19, X0
	2342 Move X8, 0x782000
	2343 Move X8, [X8+3576]
	2344 Move X1, [X8]
	2345 Add X0, X31, 800
	2346 Call Enumerator<Object>.Dispose, X0
	2347 Compare X20, 0
	2348 JumpIfNotEqual {2351}
	2349 Move X0, X19
	2350 Call 0x1D2D690
	2351 Move X0, X20
	2352 Call 0x1C17F18
	2353 Call 0x1991590

Method: UnityEngine.Vector2 DoPaniniProjection(UnityEngine.Vector2 screenPos, System.Single actualWidth, System.Single actualHeight, System.Single fieldOfView, System.Single paniniProjectionCropToFit, System.Single paniniProjectionDistance)

Disassembly:
	0x039CED3C MOV X1, X31
	0x039CED40 BL 0x3C16740
	0x039CED44 MOV V8.16B, V0.16B
	0x039CED48 MOV V9.16B, V1.16B
	0x039CED4C MOV V10.16B, V2.16B
	0x039CED50 MOV V11.16B, V3.16B
	0x039CED54 MOV X0, X26
	0x039CED58 MOV X1, X31
	0x039CED5C BL 0x3C16874
	0x039CED60 MOV X0, X31
	0x039CED64 BL 0x3C2B37C
	0x039CED68 FMUL S0, S8, S0
	0x039CED6C FMUL S1, S9, S1
	0x039CED70 FMUL S2, S10, S2
	0x039CED74 FMUL S3, S11, S3
	0x039CED78 B 0x39CED88
	0x039CED7C MOV X0, X26
	0x039CED80 MOV X1, X31
	0x039CED84 BL 0x3C16740
	0x039CED88 LDR V4, [X31 + 0xC4]
	0x039CED8C FMUL S13, S4, S0
	0x039CED90 FMUL S9, S4, S1
	0x039CED94 FMUL S12, S4, S2
	0x039CED98 FMUL S8, S4, S3
	0x039CED9C LDR X8, [X31 + 0x310]
	0x039CEDA0 CBZ X8, 0x39CFEE8
	0x039CEDA4 LDR V0, [X8 + 0x2C]
	0x039CEDA8 LDR V1, [X31 + 0xC0]
	0x039CEDAC FMUL S15, S1, S0
	0x039CEDB0 FCMP S15, 0x0
	0x039CEDB4 B.LS 0x39CF42C
	0x039CEDB8 LDR W9, [X8 + 0x6C]
	0x039CEDBC CBZ W9, 0x39CEDD0
	0x039CEDC0 MOVZ W9, 0x3F800000
	0x039CEDC4 FMOV S10, 1
	0x039CEDC8 STR W9, [X31 + 0x308]
	0x039CEDCC B 0x39CEE20
	0x039CEDD0 LDRB W9, [X8 + 0x4C]
	0x039CEDD4 CBZ W9, 0x39CEDC0
	0x039CEDD8 LDR X25, [X8 + 0x30]
	0x039CEDDC FMOV S10, 1
	0x039CEDE0 CBZ X25, 0x39CFFD4
	0x039CEDE4 LDR X8, [X25]
	0x039CEDE8 LDP X9, X1, [X8 + 0x1A8]
	0x039CEDEC MOV X0, X25
	0x039CEDF0 BLR X9
	0x039CEDF4 LDR X8, [X25]
	0x039CEDF8 MOV W27, W0
	0x039CEDFC LDP X9, X1, [X8 + 0x188]
	0x039CEE00 MOV X0, X25
	0x039CEE04 BLR X9
	0x039CEE08 LDR X8, [X31 + 0x310]
	0x039CEE0C SCVTF S0, W27
	0x039CEE10 SCVTF S1, W0
	0x039CEE14 FDIV S0, S0, S1
	0x039CEE18 STR S0, [X31 + 0x308]
	0x039CEE1C CBZ X8, 0x39CFFD0
	0x039CEE20 LDRB W9, [X8 + 0x4C]
	0x039CEE24 CBZ W9, 0x39CEE44
	0x039CEE28 LDR V0, [X31 + 0x308]
	0x039CEE2C LDP S14, S1, [X8 + 0x3C]
	0x039CEE30 FCMP S0, S10
	0x039CEE34 B.GE 0x39CEE50
	0x039CEE38 FMUL S1, S0, S1
	0x039CEE3C STR S1, [X31 + 0x124]
	0x039CEE40 B 0x39CEE58
	0x039CEE44 LDP S14, S0, [X8 + 0x3C]
	0x039CEE48 STR S0, [X31 + 0x124]
	0x039CEE4C B 0x39CEE58
	0x039CEE50 STR S1, [X31 + 0x124]
	0x039CEE54 FDIV S14, S14, S0
	0x039CEE58 LDR V2, [X8 + 0x50]
	0x039CEE5C LDR V0, [X8 + 0x38]
	0x039CEE60 LDR V1, [X28 + 0x6C]
	0x039CEE64 STR S2, [X31 + 0xE8]
	0x039CEE68 LDR V2, [X31 + 0x6C]
	0x039CEE6C FMUL S0, S2, S0
	0x039CEE70 FMUL S11, S0, S1
	0x039CEE74 STR S11, [X31 + 0x304]
	0x039CEE78 LDR V1, [X8 + 0x54]
	0x039CEE7C LDR V0, [X8 + 0x58]
	0x039CEE80 STP S0, S1, [X31 + 0xD8]
	0x039CEE84 LDR V0, [X8 + 0x5C]
	0x039CEE88 STR S0, [X31 + 0xE0]
	0x039CEE8C LDR V0, [X8 + 0x60]
	0x039CEE90 STR S0, [X31 + 0xD4]
	0x039CEE94 MOV X0, X31
	0x039CEE98 BL 0x3C3BB1C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D12
	003 Move [X31+72], D11
	004 Move [X31+80], D10
	005 Move [X31+88], D9
	006 Move [X31+96], D8
	007 Move [X31+104], X30
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move [X31+32], D1
	011 Move [X31+48], D0
	012 Move X19, 0xA14000
	013 Move X20, 0x785000
	014 Move W8, [X19+3337]
	015 Move X20, [X20+3480]
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V12, V2
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x785000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+3337], W8
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, -49164288
	036 Move V0, [X8+260]
	037 Move S1, 0.5
	038 Multiply S0, S10, S0
	039 Multiply S0, S0, S1
	040 Call 0x3EB2E50
	041 NotImplemented "Instruction FDIV not yet implemented."
	042 Move [X31+1], V0
	043 Multiply S0, S1, S0
	044 Move [X31], V0
	045 Move V0, V12
	046 Move V1, V11
	047 Move V2, V10
	048 Move V3, V8
	049 Call LensFlareCommonSRP.CalcCropExtents, V0, V1, V2, V3
	050 Move V16, [X31]
	051 Move V5, [X31+16]
	052 Move V4, [X31+32]
	053 Move V6, [X31+48]
	054 Move S2, 1
	055 Move S3, W31
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 NotImplemented "Instruction FDIV not yet implemented."
	058 Move V6.S[1], V4.S[0]
	059 Move V16.S[1], V5.S[0]
	060 Move V5, 0
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Add V6, V6, V6
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 NotImplemented "Instruction FMIN not yet implemented."
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Add V5, V6, V5
	067 Move S4, -1
	068 NotImplemented "Instruction FMIN not yet implemented."
	069 NotImplemented "Instruction FCSEL not yet implemented."
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction INVALID not yet implemented."
	072 Add S3, S6, S4
	073 NotImplemented "Instruction INVALID not yet implemented."
	074 NotImplemented "Instruction FCSEL not yet implemented."
	075 Add S4, S5, S2
	076 Multiply S1, S1, S3
	077 NotImplemented "Instruction FSQRT not yet implemented."
	078 Add S7, S8, S2
	079 Add S1, S1, S2
	080 NotImplemented "Instruction FDIV not yet implemented."
	081 Add S3, S2, S8
	082 NotImplemented "Instruction INVALID not yet implemented."
	083 NotImplemented "Instruction FDIV not yet implemented."
	084 NotImplemented "Instruction INVALID not yet implemented."
	085 NotImplemented "Instruction INVALID not yet implemented."
	086 NotImplemented "Instruction INVALID not yet implemented."
	087 NotImplemented "Instruction MOVI not yet implemented."
	088 Move X20, [X31+112]
	089 Move X19, [X31+120]
	090 Move X30, [X31+104]
	091 Move D9, [X31+88]
	092 Move D8, [X31+96]
	093 Move D11, [X31+72]
	094 Move D10, [X31+80]
	095 Move V12, [X31+64]
	096 NotImplemented "Instruction INVALID not yet implemented."
	097 Add V0, V0, V1
	098 Move S1, V0.S[1]
	099 Add X31, X31, 128
	100 Return X0

Method: UnityEngine.Vector2 CalcViewExtents(System.Single actualWidth, System.Single actualHeight, System.Single fieldOfView)

Disassembly:
	0x039D1570 FMOV S1, 1
	0x039D1574 FCMP S0, 0x0
	0x039D1578 FMIN S0, S0, S1
	0x039D157C FMOV S1, W31
	0x039D1580 FCSEL S0, S0, S1, PL
	0x039D1584 STR S0, [X0 + 0xCC]
	0x039D1588 RET
	0x039D158C FMOV S1, 1
	0x039D1590 FCMP S0, 0x0
	0x039D1594 FMIN S0, S0, S1
	0x039D1598 FMOV S1, W31
	0x039D159C FCSEL S0, S0, S1, PL
	0x039D15A0 STR S0, [X0 + 0xD0]
	0x039D15A4 RET
	0x039D15A8 FMOV S1, 1
	0x039D15AC FCMP S0, 0x0

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move X8, -49176576
	005 Move V9, V0
	006 Move V0, [X8+260]
	007 Move V8, V1
	008 Move S1, 0.5
	009 Multiply S0, S2, S0
	010 Multiply S0, S0, S1
	011 Call 0x3EB2E50
	012 Move X30, [X31+16]
	013 Move V1, V0
	014 NotImplemented "Instruction FDIV not yet implemented."
	015 Multiply S0, S0, S1
	016 Move D9, [X31+32]
	017 Move D8, [X31+40]
	018 Return X0

Method: UnityEngine.Vector2 CalcCropExtents(System.Single actualWidth, System.Single actualHeight, System.Single fieldOfView, System.Single d)

Disassembly:
	0x039D15B0 FMIN S0, S0, S1
	0x039D15B4 FMOV S1, W31
	0x039D15B8 FCSEL S0, S0, S1, PL
	0x039D15BC STR S0, [X0 + 0xD8]
	0x039D15C0 RET
	0x039D15C4 CMP W1, 0x3
	0x039D15C8 MOVZ W8, 0x3
	0x039D15CC CSEL W8, W1, W8, GT
	0x039D15D0 STR W8, [X0 + 0xD4]
	0x039D15D4 RET
	0x039D15D8 LDR V0, [X0 + 0x2C]
	0x039D15DC RET
	0x039D15E0 LDR W0, [X0 + 0x48]
	0x039D15E4 RET
	0x039D15E8 LDR V0, [X0 + 0xA0]
	0x039D15EC RET
	0x039D15F0 LDR V0, [X0 + 0xCC]
	0x039D15F4 RET
	0x039D15F8 LDR V0, [X0 + 0xD0]
	0x039D15FC RET
	0x039D1600 LDR W0, [X0 + 0xD4]
	0x039D1604 RET
	0x039D1608 LDR V0, [X0 + 0xD8]
	0x039D160C RET
	0x039D1610 STP X30, X19, [X31 - 0x10]!
	0x039D1614 MOV X1, X31
	0x039D1618 MOV X19, X0
	0x039D161C BL 0x3C36D2C
	0x039D1620 STR X31, [X19 + 0x18]
	0x039D1624 LDP X30, X19, [X31], #0x10
	0x039D1628 RET
	0x039D162C MOV X0, X31
	0x039D1630 RET
	0x039D1634 LDR X8, [X0]
	0x039D1638 LDP X2, X1, [X8 + 0x178]
	0x039D163C BR X2
	0x039D1640 MOV X1, X31
	0x039D1644 B 0x3C36D2C
	0x039D1648 STP X29, X30, [X31 - 0x60]!
	0x039D164C STP X28, X27, [X31 + 0x10]
	0x039D1650 STP X26, X25, [X31 + 0x20]
	0x039D1654 STP X24, X23, [X31 + 0x30]
	0x039D1658 STP X22, X21, [X31 + 0x40]
	0x039D165C STP X20, X19, [X31 + 0x50]
	0x039D1660 LDRB W8, [X31 + 0x60]
	0x039D1664 LDR W22, [X31 + 0x68]
	0x039D1668 LDR X23, [X31 + 0x70]
	0x039D166C MOV W20, W1
	0x039D1670 MOV X1, X31

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xA11000
	011 Move X20, 0x782000
	012 Move W8, [X19+3338]
	013 Move X20, [X20+3480]
	014 Move V8, V3
	015 Move V11, V2
	016 Move V9, V1
	017 Move V10, V0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x782000
	023 Move X0, [X0+3480]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3338], W8
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, -49176576
	033 Move V0, [X8+260]
	034 Move S1, 0.5
	035 Move S12, 1
	036 Add S13, S8, S12
	037 Multiply S0, S11, S0
	038 Multiply S0, S0, S1
	039 Call 0x3EB2E50
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 Multiply S1, S1, S0
	042 Multiply S2, S1, S1
	043 Add S2, S2, S12
	044 NotImplemented "Instruction FSQRT not yet implemented."
	045 NotImplemented "Instruction FDIV not yet implemented."
	046 Add S3, S2, S8
	047 Move X20, [X31+64]
	048 Move X19, [X31+72]
	049 Move X30, [X31+48]
	050 Move D9, [X31+32]
	051 Move D8, [X31+40]
	052 Move D11, [X31+16]
	053 Move D10, [X31+24]
	054 Multiply S1, S1, S2
	055 Multiply S2, S0, S2
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 Multiply S0, S1, S3
	058 Multiply S1, S2, S3
	059 Move D13, [X31+80]
	060 Move D12, [X31+88]
	061 Return X0

Method: UnityEngine.Vector2 Panini_Generic_Inv(UnityEngine.Vector2 projPos, System.Single d)

Disassembly:
	0x039D1674 MOV W19, W5
	0x039D1678 MOV X21, X0
	0x039D167C AND W24, W2, 0x1
	0x039D1680 AND W25, W3, 0x1
	0x039D1684 AND W26, W4, 0x1
	0x039D1688 AND W27, W6, 0x1
	0x039D168C AND W28, W7, 0x1
	0x039D1690 AND W29, W8, 0x1
	0x039D1694 BL 0x33A51F0
	0x039D1698 STR X23, [X21 + 0x28]
	0x039D169C STR W20, [X21 + 0x10]
	0x039D16A0 STRB W24, [X21 + 0x15]
	0x039D16A4 STRB W25, [X21 + 0x16]

ISIL:
	001 Move S3, 1
	002 Multiply S4, S0, S0
	003 Add S4, S4, S3
	004 NotImplemented "Instruction FSQRT not yet implemented."
	005 Add S5, S2, S3
	006 NotImplemented "Instruction FDIV not yet implemented."
	007 Add S2, S3, S2
	008 Multiply S0, S0, S3
	009 Multiply S1, S1, S3
	010 NotImplemented "Instruction FDIV not yet implemented."
	011 Multiply S0, S0, S2
	012 Multiply S1, S1, S2
	013 Return X0

Method: System.Void .cctor()

Disassembly:
	0x039D16A8 STRB W26, [X21 + 0x17]
	0x039D16AC STR W19, [X21 + 0x18]
	0x039D16B0 STRB W27, [X21 + 0x1C]
	0x039D16B4 STRB W28, [X21 + 0x14]
	0x039D16B8 STRB W29, [X21 + 0x1D]
	0x039D16BC STR W22, [X21 + 0x20]
	0x039D16C0 LDP X20, X19, [X31 + 0x50]
	0x039D16C4 LDP X22, X21, [X31 + 0x40]
	0x039D16C8 LDP X24, X23, [X31 + 0x30]
	0x039D16CC LDP X26, X25, [X31 + 0x20]
	0x039D16D0 LDP X28, X27, [X31 + 0x10]
	0x039D16D4 LDP X29, X30, [X31], #0x60
	0x039D16D8 RET
	0x039D16DC STP X30, X27, [X31 - 0x50]!
	0x039D16E0 STP X26, X25, [X31 + 0x10]
	0x039D16E4 STP X24, X23, [X31 + 0x20]
	0x039D16E8 STP X22, X21, [X31 + 0x30]
	0x039D16EC STP X20, X19, [X31 + 0x40]
	0x039D16F0 ADRP X27, 0xA10000
	0x039D16F4 ADRP X26, 0x722000
	0x039D16F8 LDRB W8, [X27 + 0xD17]
	0x039D16FC LDR X26, [X26 + 0xAC8]
	0x039D1700 MOV X19, X6
	0x039D1704 MOV W22, W5
	0x039D1708 MOV W20, W4
	0x039D170C MOV W24, W3
	0x039D1710 MOV W25, W2
	0x039D1714 MOV X23, X1
	0x039D1718 MOV X21, X0
	0x039D171C TBNZ X8, 0x0, 0x39D1734
	0x039D1720 ADRP X0, 0x722000
	0x039D1724 LDR X0, [X0 + 0xAC8]
	0x039D1728 BL 0x1C16CF4
	0x039D172C MOVZ W8, 0x1
	0x039D1730 STRB W8, [X27 + 0xD17]
	0x039D1734 MOV X0, X21
	0x039D1738 MOV X1, X31
	0x039D173C BL 0x33A51F0
	0x039D1740 LDR X0, [X26]
	0x039D1744 MOVZ W1, 0x1
	0x039D1748 BL 0x1C16D6C
	0x039D174C STR X0, [X21 + 0x10]
	0x039D1750 CBZ X0, 0x39D1798
	0x039D1754 LDR W8, [X0 + 0x18]
	0x039D1758 CBZ W8, 0x39D179C
	0x039D175C AND W8, W25, 0x1
	0x039D1760 AND W9, W24, 0x1
	0x039D1764 AND W10, W22, 0x1
	0x039D1768 STR X23, [X0 + 0x20]
	0x039D176C STR W20, [X21 + 0x1C]
	0x039D1770 STRB W8, [X21 + 0x18]
	0x039D1774 STRB W9, [X21 + 0x19]
	0x039D1778 STRB W10, [X21 + 0x20]
	0x039D177C STR X19, [X21 + 0x28]
	0x039D1780 LDP X20, X19, [X31 + 0x40]
	0x039D1784 LDP X22, X21, [X31 + 0x30]
	0x039D1788 LDP X24, X23, [X31 + 0x20]
	0x039D178C LDP X26, X25, [X31 + 0x10]
	0x039D1790 LDP X30, X27, [X31], #0x50
	0x039D1794 RET
	0x039D1798 BL 0x1C16F20
	0x039D179C BL 0x1C16F28
	0x039D17A0 STP X30, X25, [X31 - 0x40]!
	0x039D17A4 STP X24, X23, [X31 + 0x10]
	0x039D17A8 STP X22, X21, [X31 + 0x20]
	0x039D17AC STP X20, X19, [X31 + 0x30]
	0x039D17B0 MOV X21, X1
	0x039D17B4 MOV X1, X31
	0x039D17B8 MOV X19, X6
	0x039D17BC MOV W20, W4
	0x039D17C0 MOV X22, X0
	0x039D17C4 AND W23, W2, 0x1
	0x039D17C8 AND W24, W3, 0x1
	0x039D17CC AND W25, W5, 0x1
	0x039D17D0 BL 0x33A51F0
	0x039D17D4 STR X21, [X22 + 0x10]
	0x039D17D8 STRB W23, [X22 + 0x18]
	0x039D17DC STRB W24, [X22 + 0x19]
	0x039D17E0 STR W20, [X22 + 0x1C]
	0x039D17E4 STRB W25, [X22 + 0x20]
	0x039D17E8 STR X19, [X22 + 0x28]
	0x039D17EC LDP X20, X19, [X31 + 0x30]
	0x039D17F0 LDP X22, X21, [X31 + 0x20]
	0x039D17F4 LDP X24, X23, [X31 + 0x10]
	0x039D17F8 LDP X30, X25, [X31], #0x40
	0x039D17FC RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xA11000
	010 Move X20, 0x782000
	011 Move X19, 0x729000
	012 Move X24, 0x782000
	013 Move X23, 0x782000
	014 Move X22, 0x724000
	015 Move X21, 0x727000
	016 Move X20, [X20+3480]
	017 Move W8, [X25+3339]
	018 Move X19, [X19+3264]
	019 Move X24, [X24+3688]
	020 Move X23, [X23+3696]
	021 Move X22, [X22+3632]
	022 Move X21, [X21+2928]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x782000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move X0, 0x727000
	031 Move X0, [X0+2928]
	032 Call 0x1C17CF4
	033 Move X0, 0x782000
	034 Move X0, [X0+3696]
	035 Call 0x1C17CF4
	036 Move X0, 0x724000
	037 Move X0, [X0+3632]
	038 Call 0x1C17CF4
	039 Move X0, 0x782000
	040 Move X0, [X0+3688]
	041 Call 0x1C17CF4
	042 Move X0, 0x729000
	043 Move X0, [X0+3264]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+3339], W8
	047 Move X8, [X20]
	048 Move X8, [X8+184]
	049 Move [X8], X31
	050 Move X0, [X19]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X19, X0
	054 Call Object..ctor, X0
	055 Move X8, [X20]
	056 Move X8, [X8+184]
	057 Move [X8+8], X19
	058 Move X0, [X24]
	059 Call 0x1C17F10
	060 Move X1, [X23]
	061 Move X19, X0
	062 Call List`1<Object>..ctor, X0
	063 Move X8, [X20]
	064 Move X8, [X8+184]
	065 Move [X8+16], X19
	066 Move X0, [X22]
	067 Call 0x1C17F10
	068 Move X1, [X21]
	069 Move X19, X0
	070 Call List`1<Int32>..ctor, X0
	071 Move X8, [X20]
	072 Move X9, -49164288
	073 Move V0, [X9+2736]
	074 Move W9, 1
	075 Move X8, [X8+184]
	076 Move W0, 49
	077 Move W1, 4
	078 Move X2, X31
	079 Move [X8+24], X19
	080 Move [X8+32], D0
	081 Move [X8+40], W9
	082 Move [X8+48], X31
	083 Move [X8+56], W31
	084 Call SystemInfo.IsFormatSupported, X0, X1
	085 Move X8, [X20]
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X8, [X8+184]
	093 And W9, W0, 1
	094 Move [X8+60], W9
	095 Move X30, [X31+64]
	096 Move X25, [X31+72]
	097 Return 

Method: System.Single <ShapeAttenuationAreaTubeLight>g__Fpo|28_0(System.Single d, System.Single l)

Disassembly:
	0x039D1800 STP X30, X21, [X31 - 0x20]!
	0x039D1804 STP X20, X19, [X31 + 0x10]
	0x039D1808 MOV W20, W1
	0x039D180C MOV X1, X31
	0x039D1810 MOV X19, X2
	0x039D1814 MOV X21, X0
	0x039D1818 BL 0x33A51F0
	0x039D181C STR W20, [X21 + 0x10]
	0x039D1820 STR X19, [X21 + 0x18]
	0x039D1824 LDP X20, X19, [X31 + 0x10]
	0x039D1828 LDP X30, X21, [X31], #0x20
	0x039D182C RET
	0x039D1830 STP D9, D8, [X31 - 0x70]!
	0x039D1834 STR X30, [X31 + 0x10]
	0x039D1838 STP X28, X27, [X31 + 0x20]
	0x039D183C STP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move V9, V0
	005 NotImplemented "Instruction FDIV not yet implemented."
	006 Move V8, V1
	007 Call 0x3EB2BE0
	008 Multiply S1, S9, S9
	009 Multiply S2, S8, S8
	010 Add S2, S1, S2
	011 Move X30, [X31+16]
	012 Multiply S2, S2, S9
	013 NotImplemented "Instruction FDIV not yet implemented."
	014 NotImplemented "Instruction FDIV not yet implemented."
	015 Add S0, S2, S0
	016 Move D9, [X31+32]
	017 Move D8, [X31+40]
	018 Return V0

Method: System.Single <ShapeAttenuationAreaTubeLight>g__Fwt|28_1(System.Single d, System.Single l)

Disassembly:
	0x039D1840 STP X24, X23, [X31 + 0x40]
	0x039D1844 STP X22, X21, [X31 + 0x50]
	0x039D1848 STP X20, X19, [X31 + 0x60]
	0x039D184C ADRP X28, 0xA10000
	0x039D1850 ADRP X27, 0x722000
	0x039D1854 LDRB W8, [X28 + 0xD18]

ISIL:
	001 Multiply S1, S1, S1
	002 Multiply S2, S0, S0
	003 Add S2, S2, S1
	004 Multiply S0, S2, S0
	005 NotImplemented "Instruction FDIV not yet implemented."
	006 Return V0

Method: System.Single <ShapeAttenuationAreaTubeLight>g__DiffLineIntegral|28_2(UnityEngine.Vector3 p1, UnityEngine.Vector3 p2)

Disassembly:
	0x039CD04C FMOV S0, W31
	0x039CD050 FMOV S1, W31
	0x039CD054 FMOV S2, W31
	0x039CD058 FMOV S3, 1
	0x039CD05C MOVZ W2, 0x1
	0x039CD060 MOV X0, X19
	0x039CD064 MOV W1, W31
	0x039CD068 MOV X3, X31
	0x039CD06C BL 0x3C4CCDC
	0x039CD070 LDR X0, [X20]
	0x039CD074 STR X29, [X31 + 0x40]
	0x039CD078 LDR W8, [X0 + 0xE0]
	0x039CD07C CBNZ W8, 0x39CD098
	0x039CD080 BL 0x1C16DFC
	0x039CD084 LDR X0, [X20]
	0x039CD088 LDR W8, [X0 + 0xE0]
	0x039CD08C CBNZ W8, 0x39CD098
	0x039CD090 BL 0x1C16DFC
	0x039CD094 LDR X0, [X20]
	0x039CD098 LDR X8, [X0 + 0xB8]
	0x039CD09C STP W23, W28, [X31 + 0x90]
	0x039CD0A0 STP S12, S11, [X31 + 0x54]
	0x039CD0A4 STR W25, [X31 + 0x9C]
	0x039CD0A8 LDR X0, [X8 + 0x10]
	0x039CD0AC STP S10, S9, [X31 + 0x84]
	0x039CD0B0 STR S8, [X31 + 0x8C]
	0x039CD0B4 CBZ X0, 0x39CDB4C
	0x039CD0B8 LDR W8, [X31 + 0x318]
	0x039CD0BC LDR W9, [X31 + 0x310]
	0x039CD0C0 FDIV S0, S14, S13
	0x039CD0C4 STR W8, [X31 + 0x48]
	0x039CD0C8 LDR W8, [X31 + 0x308]
	0x039CD0CC STR W8, [X31 + 0x80]
	0x039CD0D0 LDR W8, [X31 + 0x300]
	0x039CD0D4 STP W9, W8, [X31 + 0x34]
	0x039CD0D8 LDR W9, [X31 + 0x2F8]
	0x039CD0DC LDR W8, [X31 + 0x2D8]
	0x039CD0E0 STP W8, W9, [X31 + 0x74]
	0x039CD0E4 LDR X9, [X31 + 0x2C8]
	0x039CD0E8 LDR X8, [X31 + 0x2C0]
	0x039CD0EC STP X8, X9, [X31 + 0x60]
	0x039CD0F0 ADRP X8, 0x785000
	0x039CD0F4 LDR X8, [X8 + 0xE10]
	0x039CD0F8 STR S0, [X31 + 0x3C]
	0x039CD0FC LDR X1, [X8]
	0x039CD100 ADD X8, X31, 0x1C0
	0x039CD104 BL 0x301CB58
	0x039CD108 FDIV S1, S13, S14
	0x039CD10C STP S14, S13, [X31 + 0x4C]
	0x039CD110 STR S1, [X31 + 0x7C]
	0x039CD114 ADRP X25, 0x785000
	0x039CD118 ADRP X23, 0x726000
	0x039CD11C LDR V0, [X31 + 0x1C]
	0x039CD120 LDR X8, [X31 + 0x1D0]
	0x039CD124 LDR X25, [X25 + 0xE00]
	0x039CD128 LDR X23, [X23 + 0x598]
	0x039CD12C AND W9, W26, 0x1
	0x039CD130 STR W9, [X31 + 0x5C]
	0x039CD134 STR V0, [X31 + 0x20]
	0x039CD138 STR X8, [X31 + 0x210]
	0x039CD13C LDR X1, [X25]
	0x039CD140 ADD X0, X31, 0x200
	0x039CD144 BL 0x2BC4350
	0x039CD148 TBZ X0, 0x0, 0x39CD9F0
	0x039CD14C LDR X26, [X31 + 0x210]
	0x039CD150 CBZ X26, 0x39CD13C
	0x039CD154 LDR X0, [X23]
	0x039CD158 LDR X27, [X26 + 0x18]
	0x039CD15C LDR W8, [X0 + 0xE0]
	0x039CD160 CBNZ W8, 0x39CD168
	0x039CD164 BL 0x1C16DFC
	0x039CD168 MOV X0, X27
	0x039CD16C MOV X1, X31
	0x039CD170 MOV X2, X31
	0x039CD174 BL 0x3C3883C
	0x039CD178 TBNZ X0, 0x0, 0x39CD13C
	0x039CD17C LDR X27, [X26 + 0x18]
	0x039CD180 CBZ X27, 0x39CDB48
	0x039CD184 LDR X0, [X20]
	0x039CD188 LDR X28, [X27 + 0x20]
	0x039CD18C LDR W8, [X0 + 0xE0]
	0x039CD190 CBNZ W8, 0x39CD198
	0x039CD194 BL 0x1C16DFC
	0x039CD198 MOV X0, X24
	0x039CD19C MOV X1, X27
	0x039CD1A0 MOV X2, X28
	0x039CD1A4 BL 0x39CC464
	0x039CD1A8 TBNZ X0, 0x0, 0x39CD13C
	0x039CD1AC LDRB W8, [X27 + 0x58]
	0x039CD1B0 CBZ W8, 0x39CD13C
	0x039CD1B4 LDR W8, [X27 + 0x64]
	0x039CD1B8 CBZ W8, 0x39CD13C
	0x039CD1BC ADRP X8, 0x72C000
	0x039CD1C0 LDR X8, [X8 + 0xDF0]
	0x039CD1C4 LDR X1, [X8]
	0x039CD1C8 MOV X0, X27
	0x039CD1CC BL 0x21A3894
	0x039CD1D0 MOV X29, X0
	0x039CD1D4 LDR X0, [X23]
	0x039CD1D8 LDR W8, [X0 + 0xE0]
	0x039CD1DC CBNZ W8, 0x39CD1E4
	0x039CD1E0 BL 0x1C16DFC
	0x039CD1E4 MOV X0, X29
	0x039CD1E8 MOV X1, X31
	0x039CD1EC MOV X2, X31
	0x039CD1F0 BL 0x3C354F8
	0x039CD1F4 TBZ X0, 0x0, 0x39CD264
	0x039CD1F8 CBZ X29, 0x39CDB5C
	0x039CD1FC MOV X0, X29
	0x039CD200 MOV X1, X31
	0x039CD204 BL 0x3C1668C
	0x039CD208 CMP W0, 0x1
	0x039CD20C B.NE 0x39CD264
	0x039CD210 MOV X0, X29
	0x039CD214 MOV X1, X31
	0x039CD218 BL 0x3C32E90
	0x039CD21C CBZ X0, 0x39CDB6C
	0x039CD220 MOV X1, X31
	0x039CD224 BL 0x3C3FA04
	0x039CD228 CBZ X24, 0x39CDB74
	0x039CD22C MOV V8.16B, V0.16B
	0x039CD230 MOV V9.16B, V1.16B
	0x039CD234 MOV V10.16B, V2.16B
	0x039CD238 MOV X0, X24
	0x039CD23C MOV X1, X31
	0x039CD240 BL 0x3C03618
	0x039CD244 FNEG S1, S8
	0x039CD248 FNEG S2, S9
	0x039CD24C FNEG S3, S10
	0x039CD250 FMUL S10, S0, S1
	0x039CD254 FMUL S8, S0, S2
	0x039CD258 FMUL S9, S0, S3
	0x039CD25C MOVZ W22, 0x1
	0x039CD260 B 0x39CD28C
	0x039CD264 MOV X0, X27
	0x039CD268 MOV X1, X31
	0x039CD26C BL 0x3C32E90
	0x039CD270 CBZ X0, 0x39CDB50
	0x039CD274 MOV X1, X31
	0x039CD278 BL 0x3C3F58C
	0x039CD27C MOV V10.16B, V0.16B
	0x039CD280 MOV V8.16B, V1.16B
	0x039CD284 MOV V9.16B, V2.16B
	0x039CD288 MOV W22, W31
	0x039CD28C LDP V0, V1, [X21 + 0x20]
	0x039CD290 LDP V2, V3, [X21]
	0x039CD294 LDR X0, [X20]
	0x039CD298 STP V0, V1, [X31 + 0x1E0]
	0x039CD29C STP V2, V3, [X31 + 0x1C0]
	0x039CD2A0 LDR W8, [X0 + 0xE0]
	0x039CD2A4 CBNZ W8, 0x39CD2AC
	0x039CD2A8 BL 0x1C16DFC
	0x039CD2AC LDP V0, V1, [X31 + 0x1C0]
	0x039CD2B0 LDP V2, V3, [X31 + 0x1E0]
	0x039CD2B4 EOR W29, W22, 0x1
	0x039CD2B8 STP V0, V1, [X31 + 0x180]
	0x039CD2BC STP V2, V3, [X31 + 0x1A0]
	0x039CD2C0 LDR W8, [X31 + 0x9C]
	0x039CD2C4 ADD X3, X31, 0x180
	0x039CD2C8 MOV X0, X24
	0x039CD2CC MOV W1, W29
	0x039CD2D0 AND W2, W8, 0x1
	0x039CD2D4 MOV V0.16B, V10.16B
	0x039CD2D8 MOV V1.16B, V8.16B
	0x039CD2DC MOV V2.16B, V9.16B
	0x039CD2E0 STR S10, [X31 + 0x98]
	0x039CD2E4 BL 0x39CC7D8
	0x039CD2E8 LDR W8, [X31 + 0x94]
	0x039CD2EC MOV V11.16B, V0.16B
	0x039CD2F0 MOV V15.16B, V1.16B
	0x039CD2F4 MOV V10.16B, V2.16B
	0x039CD2F8 TBZ X8, 0x0, 0x39CD374
	0x039CD2FC MOV X0, X31
	0x039CD300 BL 0x3C047F8
	0x039CD304 MOV X28, X0
	0x039CD308 LDR X0, [X23]
	0x039CD30C LDR W8, [X0 + 0xE0]
	0x039CD310 CBNZ W8, 0x39CD318
	0x039CD314 BL 0x1C16DFC
	0x039CD318 MOV X0, X24
	0x039CD31C MOV X1, X28
	0x039CD320 MOV X2, X31
	0x039CD324 BL 0x3C3883C
	0x039CD328 TBZ X0, 0x0, 0x39CD374
	0x039CD32C CBZ X24, 0x39CDB70
	0x039CD330 MOV X0, X24

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X19, 0xA15000
	014 Move W8, [X19+3340]
	015 Move V8, V5
	016 Move V14, V4
	017 Move V12, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x786000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+3340], W8
	030 Move X19, 0xA0C000
	031 Move W8, [X19+1925]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x727000
	035 Move X0, [X0+1448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+1925], W8
	039 Move X19, 0x727000
	040 Move X19, [X19+1448]
	041 Move [X31+92], S12
	042 Subtract S12, S12, S11
	043 Move V13, V14
	044 Move X0, [X19]
	045 Subtract S14, S14, S10
	046 Subtract S15, S8, S9
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Multiply S0, S12, S12
	052 Multiply S1, S14, S14
	053 Move X8, -49160192
	054 Add S0, S0, S1
	055 Move V1, [X8+380]
	056 Multiply S2, S15, S15
	057 Add S0, S2, S0
	058 NotImplemented "Instruction FSQRT not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 NotImplemented "Instruction FDIV not yet implemented."
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 NotImplemented "Instruction FDIV not yet implemented."
	063 Move X20, 0xA0C000
	064 Move W8, [X20+1923]
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x727000
	068 Move X0, [X0+1440]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+1923], W8
	072 Move X8, 0x727000
	073 Move X8, [X8+1440]
	074 Move X8, [X8]
	075 Move X8, [X8+184]
	076 Move S1, [X8]
	077 Move S2, [X8+4]
	078 Move V16, [X8+8]
	079 Move V17, V13
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 Move S0, W31
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 Move V5, [X31+92]
	085 Multiply S0, S11, S8
	086 Multiply S3, S10, S8
	087 Multiply S4, S9, S8
	088 Multiply S5, S9, S5
	089 Multiply S6, S9, S17
	090 Subtract S0, S0, S5
	091 Subtract S3, S3, S6
	092 Subtract S4, S4, S4
	093 NotImplemented "Instruction FDIV not yet implemented."
	094 NotImplemented "Instruction FDIV not yet implemented."
	095 NotImplemented "Instruction FDIV not yet implemented."
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Move V0, [X31+92]
	098 Multiply S3, S17, S9
	099 Multiply S4, S8, S9
	100 Multiply S5, S8, S11
	101 Multiply S0, S0, S9
	102 Multiply S6, S8, S10
	103 Subtract S7, S9, S8
	104 Subtract S0, S0, S5
	105 Subtract S3, S3, S6
	106 Subtract S4, S4, S4
	107 NotImplemented "Instruction FDIV not yet implemented."
	108 NotImplemented "Instruction FDIV not yet implemented."
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 Move V5, [X31+92]
	111 Move X20, 0xA0C000
	112 Multiply S0, S1, S11
	113 Multiply S3, S2, S10
	114 Move W8, [X20+1924]
	115 Multiply S4, S16, S9
	116 Add S0, S0, S3
	117 Add S13, S4, S0
	118 Multiply S15, S1, S5
	119 Multiply S12, S2, S17
	120 Multiply S14, S1, S13
	121 Multiply S0, S2, S13
	122 Multiply S1, S16, S13
	123 Move [X31+92], S16
	124 Compare W8, 0
	125 JumpIfNotEqual {136}
	126 Move X0, 0x727000
	127 Move X0, [X0+1448]
	128 Move [X31+88], S0
	129 Move [X31+12], S1
	130 Call 0x1C17CF4
	131 Move V1, [X31+12]
	132 Move S0, [X31+88]
	133 Move S16, [X31+92]
	134 Move W8, 1
	135 Move [X20+1924], W8
	136 Move X0, [X19]
	137 Move X19, 0x786000
	138 Add S12, S15, S12
	139 Multiply S15, S16, S8
	140 Move W8, [X0+224]
	141 Move X19, [X19+3480]
	142 Subtract S14, S11, S14
	143 Subtract S8, S10, S0
	144 Subtract S11, S9, S1
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X0, [X19]
	149 Multiply S0, S14, S14
	150 Multiply S1, S8, S8
	151 Add S0, S0, S1
	152 Move W8, [X0+224]
	153 Multiply S1, S11, S11
	154 Add S0, S1, S0
	155 Add S10, S15, S12
	156 NotImplemented "Instruction FSQRT not yet implemented."
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 NotImplemented "Instruction FDIV not yet implemented."
	161 Call 0x3EB2BE0
	162 Multiply S8, S9, S9
	163 Multiply S12, S10, S10
	164 Add S1, S8, S12
	165 Multiply S14, S9, S1
	166 NotImplemented "Instruction FDIV not yet implemented."
	167 NotImplemented "Instruction FDIV not yet implemented."
	168 Add S10, S1, S0
	169 NotImplemented "Instruction FDIV not yet implemented."
	170 Call 0x3EB2BE0
	171 Multiply S1, S13, S13
	172 Add S3, S1, S8
	173 Multiply S3, S9, S3
	174 NotImplemented "Instruction FDIV not yet implemented."
	175 NotImplemented "Instruction FDIV not yet implemented."
	176 Subtract S1, S2, S1
	177 Move V2, [X31+92]
	178 NotImplemented "Instruction FDIV not yet implemented."
	179 Move X8, -49164288
	180 NotImplemented "Instruction FDIV not yet implemented."
	181 Move V4, [X8+3916]
	182 Add S0, S5, S0
	183 Subtract S0, S10, S0
	184 Multiply S0, S11, S0
	185 Multiply S1, S2, S1
	186 Add S0, S1, S0
	187 NotImplemented "Instruction FDIV not yet implemented."
	188 Move X20, [X31+96]
	189 Move X19, [X31+104]
	190 Move X30, [X31+80]
	191 Move D9, [X31+64]
	192 Move D8, [X31+72]
	193 Move D11, [X31+48]
	194 Move D10, [X31+56]
	195 Move D13, [X31+32]
	196 Move D12, [X31+40]
	197 Move D15, [X31+16]
	198 Move D14, [X31+24]
	199 Add X31, X31, 112
	200 Return V0

Method: UnityEngine.Vector2 <DoLensFlareDataDrivenCommon>g__ComputeLocalSize|40_0(UnityEngine.Vector2 rayOff, UnityEngine.Vector2 rayOff0, UnityEngine.Vector2 curSize, UnityEngine.AnimationCurve distortionCurve, ref UnityEngine.Rendering.LensFlareCommonSRP/<>c__DisplayClass40_0 param_4, ref UnityEngine.Rendering.LensFlareCommonSRP/<>c__DisplayClass40_1 param_5, ref UnityEngine.Rendering.LensFlareCommonSRP/<>c__DisplayClass40_2 param_6)

Disassembly:
	0x039D13B8 STUR V1, [X20 + 0x3C]
	0x039D13BC LDR X0, [X22]
	0x039D13C0 BL 0x1C16F10
	0x039D13C4 MOV X1, X20
	0x039D13C8 MOV X2, X31
	0x039D13CC MOV X21, X0
	0x039D13D0 BL 0x3C013D4
	0x039D13D4 ADRP X8, 0xFFFFFFFFFD11C000
	0x039D13D8 ADRP X9, 0xFFFFFFFFFD11C000
	0x039D13DC LDR V0, [X8 + 0x648]
	0x039D13E0 LDR V1, [X9 + 0xCF0]
	0x039D13E4 MOVZ W8, 0x3F400000
	0x039D13E8 STR X21, [X19 + 0xE8]
	0x039D13EC STR W31, [X19 + 0x90]
	0x039D13F0 STR W8, [X19 + 0xA0]
	0x039D13F4 STUR D0, [X19 + 0xA4]
	0x039D13F8 STUR D1, [X19 + 0xAC]
	0x039D13FC STRB W31, [X19 + 0xB4]
	0x039D1400 LDRB W8, [X23 + 0xA48]
	0x039D1404 CBNZ W8, 0x39D141C
	0x039D1408 ADRP X0, 0x72A000
	0x039D140C LDR X0, [X0 + 0xF08]
	0x039D1410 BL 0x1C16CF4
	0x039D1414 MOVZ W8, 0x1
	0x039D1418 STRB W8, [X23 + 0xA48]
	0x039D141C LDR X8, [X24]
	0x039D1420 MOVZ W1, 0x2
	0x039D1424 LDR X8, [X8 + 0xB8]
	0x039D1428 LDR V0, [X8 + 0x8]
	0x039D142C STR D0, [X19 + 0xB8]
	0x039D1430 LDR X0, [X25]
	0x039D1434 BL 0x1C16D6C
	0x039D1438 MOV X20, X0
	0x039D143C ADD X0, X31, 0x60
	0x039D1440 FMOV S0, W31
	0x039D1444 FMOV S1, W31
	0x039D1448 FMOV S2, 1
	0x039D144C FMOV S3, 1
	0x039D1450 MOV X1, X31
	0x039D1454 STP X31, X31, [X31 + 0x60]
	0x039D1458 STR W31, [X31 + 0x78]
	0x039D145C STR X31, [X31 + 0x70]
	0x039D1460 BL 0x3C00A84
	0x039D1464 CBZ X20, 0x39D153C
	0x039D1468 LDR V0, [X31 + 0x6]
	0x039D146C LDUR V1, [X31 + 0x6C]
	0x039D1470 STR V0, [X31 + 0x4]
	0x039D1474 STUR V1, [X31 + 0x4C]
	0x039D1478 LDR W8, [X20 + 0x18]
	0x039D147C CBZ W8, 0x39D1538
	0x039D1480 LDUR V0, [X31 + 0x4C]
	0x039D1484 LDR V1, [X31 + 0x4]
	0x039D1488 ADD X0, X31, 0x20
	0x039D148C FMOV S2, 1
	0x039D1490 STUR V0, [X20 + 0x2C]
	0x039D1494 STR V1, [X20 + 0x2]
	0x039D1498 FMOV S0, 1
	0x039D149C FMOV S1, 1
	0x039D14A0 FMOV S3, -1
	0x039D14A4 MOV X1, X31
	0x039D14A8 STP X31, X31, [X31 + 0x20]
	0x039D14AC STR W31, [X31 + 0x38]
	0x039D14B0 STR X31, [X31 + 0x30]
	0x039D14B4 BL 0x3C00A84
	0x039D14B8 LDUR V0, [X31 + 0x2C]
	0x039D14BC LDR V1, [X31 + 0x2]
	0x039D14C0 STUR V0, [X31 + 0xC]
	0x039D14C4 STR V1, [X31]
	0x039D14C8 LDR W8, [X20 + 0x18]
	0x039D14CC CMP W8, 0x1
	0x039D14D0 B.LS 0x39D1538
	0x039D14D4 LDUR V0, [X31 + 0xC]
	0x039D14D8 LDR V1, [X31]
	0x039D14DC STUR V0, [X20 + 0x48]
	0x039D14E0 STUR V1, [X20 + 0x3C]
	0x039D14E4 LDR X0, [X22]
	0x039D14E8 BL 0x1C16F10
	0x039D14EC MOV X1, X20
	0x039D14F0 MOV X2, X31
	0x039D14F4 MOV X21, X0
	0x039D14F8 BL 0x3C013D4
	0x039D14FC ADRP X8, 0xFFFFFFFFFD11C000
	0x039D1500 LDR V0, [X8 + 0x488]
	0x039D1504 MOVZ W8, 0x6
	0x039D1508 STR X21, [X19 + 0xC0]
	0x039D150C STRB W31, [X19 + 0xC8]
	0x039D1510 STUR X8, [X19 + 0xD4]
	0x039D1514 STUR D0, [X19 + 0xCC]
	0x039D1518 STRB W31, [X19 + 0xDC]
	0x039D151C ADD X31, X31, 0x270
	0x039D1520 LDP X20, X19, [X31 + 0x40]
	0x039D1524 LDP X22, X21, [X31 + 0x30]
	0x039D1528 LDP X24, X23, [X31 + 0x20]
	0x039D152C LDP X26, X25, [X31 + 0x10]
	0x039D1530 LDP X29, X30, [X31], #0x50
	0x039D1534 RET
	0x039D1538 BL 0x1C16F28
	0x039D153C BL 0x1C16F20
	0x039D1540 FMOV S1, W31
	0x039D1544 FMAX S0, S0, S1
	0x039D1548 STR S0, [X0 + 0x2C]
	0x039D154C RET
	0x039D1550 CMP W1, 0x1
	0x039D1554 CSINC W8, W1, W31, GT
	0x039D1558 STR W8, [X0 + 0x48]
	0x039D155C RET
	0x039D1560 FMOV S1, W31
	0x039D1564 FMAX S0, S0, S1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D11
	003 Move [X31+40], D10
	004 Move [X31+48], D9
	005 Move [X31+56], D8
	006 Move [X31+64], X30
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X23, 0xA11000
	014 Move X24, 0x782000
	015 Move W8, [X23+3341]
	016 Move X24, [X24+3480]
	017 Move X19, X3
	018 Move X20, X2
	019 Move X22, X1
	020 Move X21, X0
	021 Move V8, V5
	022 Move V9, V4
	023 Move V10, V3
	024 Move V11, V2
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {38}
	029 Move X0, 0x782000
	030 Move X0, [X0+3480]
	031 Move [X31], V0
	032 Move [X31+8], V1
	033 Call 0x1C17CF4
	034 Move V0, [X31]
	035 Move V1, [X31+16]
	036 Move W8, 1
	037 Move [X23+3341], W8
	038 Move X0, [X24]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move [X31], V0
	043 Move [X31+8], V1
	044 Call 0x1C17DFC
	045 Move V0, [X31]
	046 Move V1, [X31+16]
	047 Move X8, [X20]
	048 Compare X8, 0
	049 JumpIfEqual {134}
	050 Move W9, [X8+200]
	051 Compare W9, 0
	052 JumpIfEqual {84}
	053 Move V5, [X8+24]
	054 Move V10, [X22]
	055 Move V4, V0
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X22, 0xA09000
	058 Move V4.S[1], V1.S[0]
	059 Move W8, [X22+2072]
	060 Add V3, V0, V5
	061 Subtract V0, V4, V5
	062 Move V3.S[1], V0.S[1]
	063 NotImplemented "Instruction INVALID not yet implemented."
	064 Compare W8, 0
	065 JumpIfNotEqual {71}
	066 Move X0, 0x723000
	067 Move X0, [X0+1448]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X22+2072], W8
	071 Move X8, 0x723000
	072 Move X8, [X8+1448]
	073 Add V10, V10, V11
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 Invalid "Jump target not found in method."
	078 Call 0x1C17DFC
	079 NotImplemented "Instruction INVALID not yet implemented."
	080 NotImplemented "Instruction FADDP not yet implemented."
	081 NotImplemented "Instruction FSQRT not yet implemented."
	082 Compare X21, 0
	083 JumpIfNotEqual {95}
	084 Subtract S0, S0, S11
	085 Subtract S1, S1, S10
	086 Move S2, 0.5
	087 Multiply S0, S0, S2
	088 Multiply S1, S1, S2
	089 NotImplemented "Instruction FABS not yet implemented."
	090 NotImplemented "Instruction FABS not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction FCSEL not yet implemented."
	093 Compare X21, 0
	094 JumpIfEqual {134}
	095 Move S10, 1
	096 NotImplemented "Instruction FMIN not yet implemented."
	097 Move X0, X21
	098 Move X1, X31
	099 Call AnimationCurve.Evaluate, X0, V0
	100 Move X8, [X20]
	101 NotImplemented "Instruction FMIN not yet implemented."
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Move S0, W31
	104 NotImplemented "Instruction FCSEL not yet implemented."
	105 Compare X8, 0
	106 JumpIfEqual {134}
	107 Move S2, [X19+12]
	108 Move S5, [X19+16]
	109 Move S3, [X8+184]
	110 Move S4, [X8+188]
	111 NotImplemented "Instruction FMAX not yet implemented."
	112 Move X20, [X31+112]
	113 Move X19, [X31+120]
	114 Move X22, [X31+96]
	115 Move X21, [X31+104]
	116 Multiply S1, S3, S2
	117 Multiply S2, S2, S4
	118 NotImplemented "Instruction FDIV not yet implemented."
	119 Subtract S2, S2, S8
	120 Subtract S1, S1, S9
	121 Multiply S2, S0, S2
	122 Multiply S0, S0, S1
	123 Add S0, S9, S0
	124 Add S1, S8, S2
	125 Move X24, [X31+80]
	126 Move X23, [X31+88]
	127 Move X30, [X31+64]
	128 Move D9, [X31+48]
	129 Move D8, [X31+56]
	130 Move D11, [X31+32]
	131 Move D10, [X31+40]
	132 Add X31, X31, 128
	133 Return X0
	134 Call 0x1C17F20

Method: System.Single <DoLensFlareDataDrivenCommon>g__RandomRange|40_1(System.Single min, System.Single max)

Disassembly:
	0x039D1568 STR S0, [X0 + 0xA0]
	0x039D156C RET

ISIL:
	001 Move X0, X31
	002 Call Random.Range, V0, V1
	003 Return V0

