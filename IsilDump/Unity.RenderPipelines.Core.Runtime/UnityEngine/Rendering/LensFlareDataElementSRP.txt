Type: UnityEngine.Rendering.LensFlareDataElementSRP

Method: System.Void .ctor()

Disassembly:
	0x039D1EEC LDR X30, [X31], #0x50
	0x039D1EF0 B 0x21A53E4
	0x039D1EF4 STP X29, X30, [X31 - 0x60]!
	0x039D1EF8 STP X28, X27, [X31 + 0x10]
	0x039D1EFC STP X26, X25, [X31 + 0x20]
	0x039D1F00 STP X24, X23, [X31 + 0x30]
	0x039D1F04 STP X22, X21, [X31 + 0x40]
	0x039D1F08 STP X20, X19, [X31 + 0x50]
	0x039D1F0C ADRP X29, 0xA10000
	0x039D1F10 ADRP X26, 0x722000
	0x039D1F14 ADRP X19, 0x781000
	0x039D1F18 ADRP X20, 0x781000
	0x039D1F1C ADRP X28, 0x781000
	0x039D1F20 ADRP X27, 0x781000
	0x039D1F24 ADRP X25, 0x781000
	0x039D1F28 ADRP X24, 0x781000
	0x039D1F2C ADRP X23, 0x781000
	0x039D1F30 ADRP X22, 0x781000
	0x039D1F34 ADRP X21, 0x781000
	0x039D1F38 LDR X26, [X26 + 0x638]
	0x039D1F3C LDR X19, [X19 + 0xEE0]
	0x039D1F40 LDR X20, [X20 + 0xE98]
	0x039D1F44 LDR X28, [X28 + 0xEE8]
	0x039D1F48 LDR X27, [X27 + 0xEF0]
	0x039D1F4C LDRB W8, [X29 + 0xD1C]
	0x039D1F50 LDR X25, [X25 + 0xEF8]
	0x039D1F54 LDR X24, [X24 + 0xF00]
	0x039D1F58 LDR X23, [X23 + 0xF08]
	0x039D1F5C LDR X22, [X22 + 0xF10]
	0x039D1F60 LDR X21, [X21 + 0xF18]
	0x039D1F64 TBNZ X8, 0x0, 0x39D1FE8
	0x039D1F68 ADRP X0, 0x781000
	0x039D1F6C LDR X0, [X0 + 0xE98]
	0x039D1F70 BL 0x1C16CF4
	0x039D1F74 ADRP X0, 0x722000
	0x039D1F78 LDR X0, [X0 + 0x638]
	0x039D1F7C BL 0x1C16CF4
	0x039D1F80 ADRP X0, 0x781000
	0x039D1F84 LDR X0, [X0 + 0xEE0]
	0x039D1F88 BL 0x1C16CF4
	0x039D1F8C ADRP X0, 0x781000
	0x039D1F90 LDR X0, [X0 + 0xEE8]
	0x039D1F94 BL 0x1C16CF4
	0x039D1F98 ADRP X0, 0x781000
	0x039D1F9C LDR X0, [X0 + 0xEF0]
	0x039D1FA0 BL 0x1C16CF4
	0x039D1FA4 ADRP X0, 0x781000
	0x039D1FA8 LDR X0, [X0 + 0xEF8]
	0x039D1FAC BL 0x1C16CF4
	0x039D1FB0 ADRP X0, 0x781000
	0x039D1FB4 LDR X0, [X0 + 0xF10]
	0x039D1FB8 BL 0x1C16CF4
	0x039D1FBC ADRP X0, 0x781000
	0x039D1FC0 LDR X0, [X0 + 0xF18]
	0x039D1FC4 BL 0x1C16CF4
	0x039D1FC8 ADRP X0, 0x781000
	0x039D1FCC LDR X0, [X0 + 0xF00]
	0x039D1FD0 BL 0x1C16CF4
	0x039D1FD4 ADRP X0, 0x781000
	0x039D1FD8 LDR X0, [X0 + 0xF08]
	0x039D1FDC BL 0x1C16CF4
	0x039D1FE0 MOVZ W8, 0x1
	0x039D1FE4 STRB W8, [X29 + 0xD1C]
	0x039D1FE8 LDR X0, [X26]
	0x039D1FEC MOVZ W1, 0x40
	0x039D1FF0 BL 0x1C16D6C
	0x039D1FF4 LDR X1, [X19]
	0x039D1FF8 MOV X2, X31
	0x039D1FFC MOV X19, X0
	0x039D2000 BL 0x32C5BD8
	0x039D2004 LDR X8, [X20]
	0x039D2008 MOVZ W1, 0x80
	0x039D200C LDR X8, [X8 + 0xB8]
	0x039D2010 STR X19, [X8]
	0x039D2014 LDR X0, [X26]
	0x039D2018 BL 0x1C16D6C
	0x039D201C LDR X1, [X28]
	0x039D2020 MOV X2, X31
	0x039D2024 MOV X19, X0
	0x039D2028 BL 0x32C5BD8
	0x039D202C LDR X8, [X20]
	0x039D2030 MOVZ W1, 0x100
	0x039D2034 LDR X8, [X8 + 0xB8]
	0x039D2038 STR X19, [X8 + 0x8]
	0x039D203C LDR X0, [X26]
	0x039D2040 BL 0x1C16D6C
	0x039D2044 LDR X1, [X27]
	0x039D2048 MOV X2, X31
	0x039D204C MOV X19, X0
	0x039D2050 BL 0x32C5BD8
	0x039D2054 LDR X8, [X20]
	0x039D2058 MOVZ W1, 0x400
	0x039D205C LDR X8, [X8 + 0xB8]
	0x039D2060 STR X19, [X8 + 0x10]
	0x039D2064 LDR X0, [X26]
	0x039D2068 BL 0x1C16D6C
	0x039D206C LDR X1, [X25]
	0x039D2070 MOV X2, X31
	0x039D2074 MOV X19, X0
	0x039D2078 BL 0x32C5BD8
	0x039D207C LDR X8, [X20]
	0x039D2080 MOV X1, X31
	0x039D2084 LDR X8, [X8 + 0xB8]
	0x039D2088 STR X19, [X8 + 0x18]
	0x039D208C LDR X0, [X24]
	0x039D2090 BL 0x3C124EC
	0x039D2094 LDR X8, [X20]
	0x039D2098 MOV X1, X31
	0x039D209C LDR X8, [X8 + 0xB8]
	0x039D20A0 STR W0, [X8 + 0x20]
	0x039D20A4 LDR X0, [X23]
	0x039D20A8 BL 0x3C124EC
	0x039D20AC LDR X8, [X20]
	0x039D20B0 MOV X1, X31
	0x039D20B4 LDR X8, [X8 + 0xB8]
	0x039D20B8 STR W0, [X8 + 0x24]
	0x039D20BC LDR X0, [X22]
	0x039D20C0 BL 0x3C124EC
	0x039D20C4 LDR X8, [X20]
	0x039D20C8 MOV X1, X31
	0x039D20CC LDR X8, [X8 + 0xB8]
	0x039D20D0 STR W0, [X8 + 0x28]
	0x039D20D4 LDR X0, [X21]
	0x039D20D8 BL 0x3C124EC
	0x039D20DC LDR X8, [X20]
	0x039D20E0 LDP X20, X19, [X31 + 0x50]
	0x039D20E4 LDP X22, X21, [X31 + 0x40]
	0x039D20E8 LDP X24, X23, [X31 + 0x30]
	0x039D20EC LDR X8, [X8 + 0xB8]
	0x039D20F0 LDP X26, X25, [X31 + 0x20]
	0x039D20F4 LDP X28, X27, [X31 + 0x10]
	0x039D20F8 STR W0, [X8 + 0x2C]
	0x039D20FC LDP X29, X30, [X31], #0x60
	0x039D2100 RET
	0x039D2104 STR X30, [X31 - 0x10]!
	0x039D2108 LDR X8, [X0 + 0x18]
	0x039D210C CBZ X8, 0x39D211C
	0x039D2110 LDR W0, [X8 + 0x60]
	0x039D2114 LDR X30, [X31], #0x10
	0x039D2118 RET
	0x039D211C BL 0x1C16F20
	0x039D2120 STR X30, [X31 - 0x10]!
	0x039D2124 LDR X8, [X0 + 0x18]
	0x039D2128 CBZ X8, 0x39D2138
	0x039D212C LDR W0, [X8 + 0x64]
	0x039D2130 LDR X30, [X31], #0x10
	0x039D2134 RET
	0x039D2138 BL 0x1C16F20
	0x039D213C STR X30, [X31 - 0x10]!
	0x039D2140 LDR X9, [X0 + 0x18]
	0x039D2144 CBZ X9, 0x39D2160
	0x039D2148 LDP V1, V0, [X9 + 0x40]
	0x039D214C LDR V2, [X9 + 0x3]
	0x039D2150 STP V1, V0, [X8 + 0x10]
	0x039D2154 STR V2, [X8]
	0x039D2158 LDR X30, [X31], #0x10
	0x039D215C RET
	0x039D2160 BL 0x1C16F20
	0x039D2164 STR X30, [X31 - 0x30]!
	0x039D2168 STP X22, X21, [X31 + 0x10]
	0x039D216C STP X20, X19, [X31 + 0x20]
	0x039D2170 ADRP X22, 0xA0F000
	0x039D2174 LDRB W8, [X22 + 0xD1D]
	0x039D2178 MOV W19, W2
	0x039D217C MOV W20, W1
	0x039D2180 MOV X21, X0
	0x039D2184 TBNZ X8, 0x0, 0x39D21A8
	0x039D2188 ADRP X0, 0x780000
	0x039D218C LDR X0, [X0 + 0xF20]
	0x039D2190 BL 0x1C16CF4
	0x039D2194 ADRP X0, 0x780000
	0x039D2198 LDR X0, [X0 + 0xF28]
	0x039D219C BL 0x1C16CF4
	0x039D21A0 MOVZ W8, 0x1
	0x039D21A4 STRB W8, [X22 + 0xD1D]
	0x039D21A8 LDR X0, [X21 + 0x10]
	0x039D21AC CBZ X0, 0x39D2214
	0x039D21B0 ADRP X8, 0x780000
	0x039D21B4 LDR X8, [X8 + 0xF20]
	0x039D21B8 MOV W1, W20
	0x039D21BC LDR X2, [X8]
	0x039D21C0 BL 0x2A13880
	0x039D21C4 TBZ X0, 0x0, 0x39D2200
	0x039D21C8 LDR X0, [X21 + 0x10]
	0x039D21CC CBZ X0, 0x39D2214
	0x039D21D0 ADRP X8, 0x780000
	0x039D21D4 LDR X8, [X8 + 0xF28]
	0x039D21D8 MOV W1, W20
	0x039D21DC LDR X2, [X8]
	0x039D21E0 BL 0x2A135EC
	0x039D21E4 CBZ X0, 0x39D2214
	0x039D21E8 LDR W8, [X0 + 0x18]
	0x039D21EC CMP W8, W19
	0x039D21F0 B.LS 0x39D2218
	0x039D21F4 ADD X8, X0, W19, 0x3, SXTW
	0x039D21F8 LDR X0, [X8 + 0x20]
	0x039D21FC B 0x39D2204
	0x039D2200 MOV X0, X31
	0x039D2204 LDP X20, X19, [X31 + 0x20]
	0x039D2208 LDP X22, X21, [X31 + 0x10]
	0x039D220C LDR X30, [X31], #0x30
	0x039D2210 RET
	0x039D2214 BL 0x1C16F20
	0x039D2218 BL 0x1C16F28
	0x039D221C STR X30, [X31 - 0x50]!
	0x039D2220 STP X26, X25, [X31 + 0x10]
	0x039D2224 STP X24, X23, [X31 + 0x20]
	0x039D2228 STP X22, X21, [X31 + 0x30]
	0x039D222C STP X20, X19, [X31 + 0x40]
	0x039D2230 ADRP X23, 0xA0F000
	0x039D2234 ADRP X24, 0x780000
	0x039D2238 LDRB W8, [X23 + 0xD1E]
	0x039D223C LDR X24, [X24 + 0xF30]
	0x039D2240 MOV W21, W3
	0x039D2244 MOV X19, X2
	0x039D2248 MOV W22, W1
	0x039D224C MOV X20, X0
	0x039D2250 TBNZ X8, 0x0, 0x39D2274
	0x039D2254 ADRP X0, 0x780000
	0x039D2258 LDR X0, [X0 + 0xF38]
	0x039D225C BL 0x1C16CF4
	0x039D2260 ADRP X0, 0x780000
	0x039D2264 LDR X0, [X0 + 0xF30]
	0x039D2268 BL 0x1C16CF4
	0x039D226C MOVZ W8, 0x1
	0x039D2270 STRB W8, [X23 + 0xD1E]
	0x039D2274 LDR X0, [X24]
	0x039D2278 MOV W1, W21
	0x039D227C BL 0x1C16D6C
	0x039D2280 LDR X8, [X20 + 0x10]
	0x039D2284 CBZ X8, 0x39D2388
	0x039D2288 ADRP X9, 0x780000
	0x039D228C LDR X9, [X9 + 0xF38]
	0x039D2290 MOV X21, X0
	0x039D2294 MOV X0, X8
	0x039D2298 MOV W1, W22
	0x039D229C LDR X3, [X9]
	0x039D22A0 MOV X2, X21
	0x039D22A4 BL 0x2A1368C
	0x039D22A8 CBZ X19, 0x39D2388
	0x039D22AC LDR X1, [X20 + 0x18]
	0x039D22B0 LDR X8, [X19 + 0x18]
	0x039D22B4 LDR X0, [X19 + 0x40]
	0x039D22B8 LDR X3, [X19 + 0x28]
	0x039D22BC MOV W2, W31
	0x039D22C0 BLR X8
	0x039D22C4 CBZ X21, 0x39D2388
	0x039D22C8 MOV X22, X0
	0x039D22CC CBZ X0, 0x39D22E4
	0x039D22D0 LDR X8, [X21]
	0x039D22D4 MOV X0, X22
	0x039D22D8 LDR X1, [X8 + 0x40]
	0x039D22DC BL 0x1C16E00
	0x039D22E0 CBZ X0, 0x39D2390
	0x039D22E4 LDR X8, [X21 + 0x18]
	0x039D22E8 CBZ W8, 0x39D238C
	0x039D22EC CMP W8, 0x2
	0x039D22F0 STR X22, [X21 + 0x20]
	0x039D22F4 B.LT 0x39D2370
	0x039D22F8 AND X8, X8, 0x0
	0x039D22FC MOV X24, X31
	0x039D2300 ADD X25, X21, 0x28
	0x039D2304 SUB X26, X8, 0x1
	0x039D2308 LDR X1, [X20 + 0x18]
	0x039D230C LDR X8, [X19 + 0x18]
	0x039D2310 LDR X0, [X19 + 0x40]
	0x039D2314 LDR X3, [X19 + 0x28]
	0x039D2318 ADD X23, X24, 0x1
	0x039D231C MOV W2, W23
	0x039D2320 BLR X8
	0x039D2324 MOV X22, X0
	0x039D2328 CBZ X0, 0x39D2340
	0x039D232C LDR X8, [X21]
	0x039D2330 MOV X0, X22
	0x039D2334 LDR X1, [X8 + 0x40]
	0x039D2338 BL 0x1C16E00
	0x039D233C CBZ X0, 0x39D2390
	0x039D2340 LDR W8, [X21 + 0x18]
	0x039D2344 CMP X23, X8
	0x039D2348 B.CS 0x39D238C
	0x039D234C STR X22, [X25, X24, LSL #3]
	0x039D2350 LDR X0, [X20 + 0x18]
	0x039D2354 CBZ X0, 0x39D2388
	0x039D2358 MOVZ W2, 0x1
	0x039D235C MOV X1, X22
	0x039D2360 BL 0x39D239C
	0x039D2364 ADD X24, X24, 0x1
	0x039D2368 CMP X26, X24
	0x039D236C B.NE 0x39D2308
	0x039D2370 LDP X20, X19, [X31 + 0x40]
	0x039D2374 LDP X22, X21, [X31 + 0x30]
	0x039D2378 LDP X24, X23, [X31 + 0x20]
	0x039D237C LDP X26, X25, [X31 + 0x10]
	0x039D2380 LDR X30, [X31], #0x50
	0x039D2384 RET
	0x039D2388 BL 0x1C16F20
	0x039D238C BL 0x1C16F28
	0x039D2390 BL 0x1C16F44
	0x039D2394 MOV X1, X31
	0x039D2398 BL 0x1C16DEC
	0x039D239C STR X30, [X31 - 0x30]!
	0x039D23A0 STP X22, X21, [X31 + 0x10]
	0x039D23A4 STP X20, X19, [X31 + 0x20]
	0x039D23A8 ADRP X22, 0xA0F000
	0x039D23AC LDRB W8, [X22 + 0xD50]
	0x039D23B0 MOV W21, W2
	0x039D23B4 MOV X19, X1
	0x039D23B8 MOV X20, X0
	0x039D23BC TBNZ X8, 0x0, 0x39D23EC
	0x039D23C0 ADRP X0, 0x780000
	0x039D23C4 LDR X0, [X0 + 0xF40]
	0x039D23C8 BL 0x1C16CF4
	0x039D23CC ADRP X0, 0x780000
	0x039D23D0 LDR X0, [X0 + 0xF48]
	0x039D23D4 BL 0x1C16CF4
	0x039D23D8 ADRP X0, 0x780000
	0x039D23DC LDR X0, [X0 + 0xF50]
	0x039D23E0 BL 0x1C16CF4
	0x039D23E4 MOVZ W8, 0x1
	0x039D23E8 STRB W8, [X22 + 0xD50]
	0x039D23EC CBZ X19, 0x39D24AC
	0x039D23F0 LDRB W8, [X19 + 0xA8]
	0x039D23F4 CBZ W8, 0x39D242C
	0x039D23F8 CBZ W21, 0x39D243C
	0x039D23FC CMP W21, 0x1
	0x039D2400 B.NE 0x39D242C
	0x039D2404 LDR X0, [X20 + 0x18]
	0x039D2408 CBZ X0, 0x39D24AC
	0x039D240C ADRP X8, 0x780000
	0x039D2410 LDR X8, [X8 + 0xF50]
	0x039D2414 MOV X1, X19
	0x039D2418 LDR X2, [X8]
	0x039D241C BL 0x2DBE67C
	0x039D2420 LDR X0, [X20 + 0x28]
	0x039D2424 CBNZ X0, 0x39D248C
	0x039D2428 B 0x39D24AC
	0x039D242C LDP X20, X19, [X31 + 0x20]
	0x039D2430 LDP X22, X21, [X31 + 0x10]
	0x039D2434 LDR X30, [X31], #0x30
	0x039D2438 RET
	0x039D243C LDR X0, [X20 + 0x28]
	0x039D2440 CBZ X0, 0x39D24AC
	0x039D2444 ADRP X8, 0x780000
	0x039D2448 LDR X8, [X8 + 0xF48]
	0x039D244C MOV X1, X19
	0x039D2450 LDR X2, [X8]
	0x039D2454 BL 0x2DBE4B0
	0x039D2458 TBZ X0, 0x0, 0x39D2468
	0x039D245C MOV X0, X20
	0x039D2460 MOV X1, X19
	0x039D2464 BL 0x39D7BBC
	0x039D2468 LDR X0, [X20 + 0x28]
	0x039D246C CBZ X0, 0x39D24AC
	0x039D2470 ADRP X8, 0x780000
	0x039D2474 LDR X8, [X8 + 0xF50]
	0x039D2478 MOV X1, X19
	0x039D247C LDR X2, [X8]
	0x039D2480 BL 0x2DBE67C
	0x039D2484 LDR X0, [X20 + 0x18]
	0x039D2488 CBZ X0, 0x39D24AC
	0x039D248C ADRP X8, 0x780000
	0x039D2490 LDR X8, [X8 + 0xF40]
	0x039D2494 MOV X1, X19
	0x039D2498 LDP X20, X19, [X31 + 0x20]
	0x039D249C LDP X22, X21, [X31 + 0x10]
	0x039D24A0 LDR X2, [X8]
	0x039D24A4 LDR X30, [X31], #0x30
	0x039D24A8 B 0x2DBEF30
	0x039D24AC BL 0x1C16F20
	0x039D24B0 SUB X31, X31, 0x40
	0x039D24B4 STP X30, X23, [X31 + 0x10]
	0x039D24B8 STP X22, X21, [X31 + 0x20]
	0x039D24BC STP X20, X19, [X31 + 0x30]
	0x039D24C0 ADRP X21, 0xA0F000
	0x039D24C4 LDRB W8, [X21 + 0xD1F]
	0x039D24C8 MOV W19, W1
	0x039D24CC MOV X20, X0
	0x039D24D0 TBNZ X8, 0x0, 0x39D24F4
	0x039D24D4 ADRP X0, 0x780000
	0x039D24D8 LDR X0, [X0 + 0xF58]
	0x039D24DC BL 0x1C16CF4
	0x039D24E0 ADRP X0, 0x780000
	0x039D24E4 LDR X0, [X0 + 0xF60]
	0x039D24E8 BL 0x1C16CF4
	0x039D24EC MOVZ W8, 0x1
	0x039D24F0 STRB W8, [X21 + 0xD1F]
	0x039D24F4 STR X31, [X31 + 0x8]
	0x039D24F8 LDR X0, [X20 + 0x10]
	0x039D24FC CBZ X0, 0x39D2598
	0x039D2500 ADRP X8, 0x780000
	0x039D2504 LDR X8, [X8 + 0xF60]
	0x039D2508 ADD X2, X31, 0x8
	0x039D250C MOV W1, W19
	0x039D2510 LDR X3, [X8]
	0x039D2514 BL 0x2A150AC
	0x039D2518 TBZ X0, 0x0, 0x39D2568
	0x039D251C LDR X21, [X31 + 0x8]
	0x039D2520 CBZ X21, 0x39D2598
	0x039D2524 LDR X8, [X21 + 0x18]
	0x039D2528 CMP W8, 0x1
	0x039D252C B.LT 0x39D2568
	0x039D2530 MOV X22, X31
	0x039D2534 AND X8, X8, 0x0
	0x039D2538 ADD X23, X21, 0x20
	0x039D253C CMP X22, W8, UXTW

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 624
	012 Move X20, 0xA11000
	013 Move W8, [X20+3350]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x72A000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move X0, 0x782000
	023 Move X0, [X0+3712]
	024 Call 0x1C17CF4
	025 Move X0, 0x782000
	026 Move X0, [X0+3720]
	027 Call 0x1C17CF4
	028 Move X0, 0x782000
	029 Move X0, [X0+3728]
	030 Call 0x1C17CF4
	031 Move X0, 0x72A000
	032 Move X0, [X0+1936]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3350], W8
	036 Move X20, 0x782000
	037 Move X21, 0x782000
	038 Move X20, [X20+3728]
	039 Move X21, [X21+3720]
	040 Move X0, X19
	041 Move X1, X31
	042 Call Object..ctor, X0
	043 Move W22, 1
	044 Move W8, 0x3F800000
	045 Move V0, 0
	046 Move [X19+28], X31
	047 Move [X19+20], X31
	048 Move [X19+48], X31
	049 Move [X19+16], W22
	050 Move [X19+44], W8
	051 Move [X19+36], D0
	052 Move [X19+56], W8
	053 Move X23, 0xA11000
	054 Move W8, [X23+2632]
	055 Compare W8, 0
	056 JumpIfNotEqual {61}
	057 Move X0, 0x72B000
	058 Move X0, [X0+3848]
	059 Call 0x1C17CF4
	060 Move [X23+2632], W22
	061 Move X24, 0x72B000
	062 Move X24, [X24+3848]
	063 Move X9, -49172480
	064 Move V0, [X9+213]
	065 Move X8, [X24]
	066 Move X8, [X8+184]
	067 Move V1, [X8+8]
	068 Move W8, 5
	069 Move [X19+72], W8
	070 Move W8, 0x3F000000
	071 Move [X19+96], X8
	072 Move X8, 0x3F800000
	073 Move [X19+5], V0
	074 Move [X19+68], W31
	075 Move [X19+104], W31
	076 Move [X19+113], W22
	077 Move [X19+108], W22
	078 Move [X19+60], D1
	079 Move [X19+116], X8
	080 Move X0, [X20]
	081 Call 0x1C17F10
	082 Move X1, X31
	083 Move X20, X0
	084 Call Gradient..ctor, X0
	085 Move [X19+152], X20
	086 Move X0, [X21]
	087 Move W1, 2
	088 Call 0x1C17D6C
	089 Move X21, X0
	090 Add X0, X31, 600
	091 Move S0, 1
	092 Move S1, 1
	093 Move S2, 1
	094 Move S3, 1
	095 Move S4, W31
	096 Move X1, X31
	097 Move [X31+608], X31
	098 Move [X31+600], X31
	099 Move [X31+616], W31
	100 Call GradientColorKey..ctor, X0, X1, V0
	101 Compare X21, 0
	102 JumpIfEqual {435}
	103 Add X26, X31, 384
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move W8, [X31+616]
	106 Move [X31+36], V0
	107 Move [X31+592], W8
	108 Move W8, [X21+24]
	109 Compare W8, 0
	110 JumpIfEqual {434}
	111 Move V0, [X31+36]
	112 Move W8, [X31+592]
	113 Add X0, X31, 552
	114 Move S1, 1
	115 Move [X21+2], V0
	116 Move S0, 1
	117 Move S2, 1
	118 Move S3, 1
	119 Move S4, 1
	120 Move X1, X31
	121 Move [X21+48], W8
	122 Move [X31+560], X31
	123 Move [X31+552], X31
	124 Move [X31+568], W31
	125 Call GradientColorKey..ctor, X0, X1, V0
	126 Move W8, [X31+568]
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Move [X31+544], W8
	129 Move [X31+33], V0
	130 Move W8, [X21+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move W8, [X31+544]
	133 Move V0, [X31+33]
	134 Move X9, 0x781000
	135 Move X9, [X9+3712]
	136 Move [X21+68], W8
	137 Move [X21+52], V0
	138 Move W1, 2
	139 Move X0, [X9]
	140 Call 0x1C17D6C
	141 Move X22, X0
	142 Add X0, X31, 520
	143 Move S0, 1
	144 Move S1, W31
	145 Move X1, X31
	146 Move [X31+520], X31
	147 Call GradientAlphaKey..ctor, X0, V0, V1
	148 Compare X22, 0
	149 JumpIfEqual {435}
	150 Move W8, [X22+24]
	151 Compare W8, 0
	152 JumpIfEqual {434}
	153 Move V0, [X31+520]
	154 Add X0, X31, 512
	155 Move S1, 1
	156 Move X1, X31
	157 Move [X22+32], D0
	158 Move S0, 1
	159 Move [X31+512], X31
	160 Call GradientAlphaKey..ctor, X0, V0, V1
	161 Move W8, [X22+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move V0, [X31+512]
	164 Move [X22+40], D0
	165 Compare X20, 0
	166 JumpIfEqual {435}
	167 Move X25, 0x729000
	168 Move X25, [X25+1936]
	169 Move X0, X20
	170 Move X1, X21
	171 Move X2, X22
	172 Move X3, X31
	173 Call Gradient.SetKeys, X0, X1, X2
	174 Move X0, [X25]
	175 Move W1, 2
	176 Call 0x1C17D6C
	177 Move X20, X0
	178 Add X0, X31, 480
	179 Move S0, W31
	180 Move S1, W31
	181 Move S2, 1
	182 Move S3, 1
	183 Move X1, X31
	184 Move [X31+480], X31
	185 Move [X31+488], X31
	186 Move [X31+504], W31
	187 Move [X31+496], X31
	188 Call Keyframe..ctor, X0, V0, V1, V2, V3
	189 Compare X20, 0
	190 JumpIfEqual {435}
	191 Move V0, [X31+30]
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 Move [X31+28], V0
	194 Move [X26+76], V1
	195 Move W8, [X20+24]
	196 Compare W8, 0
	197 JumpIfEqual {434}
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move V1, [X31+28]
	200 Add X0, X31, 416
	201 Move S2, 1
	202 Move [X20+44], V0
	203 Move [X20+2], V1
	204 Move S0, 1
	205 Move S1, 1
	206 Move S3, -1
	207 Move X1, X31
	208 Move [X31+416], X31
	209 Move [X31+424], X31
	210 Move [X31+440], W31
	211 Move [X31+432], X31
	212 Call Keyframe..ctor, X0, V0, V1, V2, V3
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 Move V1, [X31+26]
	215 Move [X26+12], V0
	216 Move [X31+24], V1
	217 Move W8, [X20+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 Move V1, [X31+24]
	221 Move X22, 0x729000
	222 Move X22, [X22+1840]
	223 Move [X20+72], V0
	224 Move [X20+60], V1
	225 Move X0, [X22]
	226 Call 0x1C17F10
	227 Move X1, X20
	228 Move X2, X31
	229 Move X21, X0
	230 Call AnimationCurve..ctor, X0, X1
	231 Move [X19+128], X21
	232 Move X0, [X25]
	233 Move W1, 2
	234 Call 0x1C17D6C
	235 Move X20, X0
	236 Add X0, X31, 352
	237 Move S0, W31
	238 Move S1, 1
	239 Move X1, X31
	240 Move [X31+352], X31
	241 Move [X31+360], X31
	242 Move [X31+376], W31
	243 Move [X31+368], X31
	244 Call Keyframe..ctor, X0, V0, V1
	245 Compare X20, 0
	246 JumpIfEqual {435}
	247 Add X26, X31, 128
	248 Move V0, [X31+22]
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 Move [X31+20], V0
	251 Move [X26+204], V1
	252 Move W8, [X20+24]
	253 Compare W8, 0
	254 JumpIfEqual {434}
	255 NotImplemented "Instruction LDUR not yet implemented."
	256 Move V1, [X31+20]
	257 Add X0, X31, 288
	258 Move X1, X31
	259 Move [X20+44], V0
	260 Move [X20+2], V1
	261 Move S0, 1
	262 Move S1, 1
	263 Move [X31+288], X31
	264 Move [X31+296], X31
	265 Move [X31+312], W31
	266 Move [X31+304], X31
	267 Call Keyframe..ctor, X0, V0, V1
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 Move V1, [X31+18]
	270 Move [X26+140], V0
	271 Move [X31+16], V1
	272 Move W8, [X20+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 Move V1, [X31+16]
	276 Move [X20+72], V0
	277 Move [X20+60], V1
	278 Move X0, [X22]
	279 Call 0x1C17F10
	280 Move X1, X20
	281 Move X2, X31
	282 Move X21, X0
	283 Call AnimationCurve..ctor, X0, X1
	284 Move [X19+136], X21
	285 Move X0, [X25]
	286 Move W1, 2
	287 Call 0x1C17D6C
	288 Move X20, X0
	289 Add X0, X31, 224
	290 Move S0, W31
	291 Move S1, W31
	292 Move X1, X31
	293 Move [X31+224], X31
	294 Move [X31+232], X31
	295 Move [X31+248], W31
	296 Move [X31+240], X31
	297 Call Keyframe..ctor, X0, V0, V1
	298 Compare X20, 0
	299 JumpIfEqual {435}
	300 Move V0, [X31+14]
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 Move [X31+12], V0
	303 Move [X26+76], V1
	304 Move W8, [X20+24]
	305 Compare W8, 0
	306 JumpIfEqual {434}
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 Move V1, [X31+12]
	309 Add X0, X31, 160
	310 Move X1, X31
	311 Move [X20+44], V0
	312 Move [X20+2], V1
	313 Move S0, 1
	314 Move S1, W31
	315 Move [X31+160], X31
	316 Move [X31+168], X31
	317 Move [X31+184], W31
	318 Move [X31+176], X31
	319 Call Keyframe..ctor, X0, V0, V1
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 Move V1, [X31+10]
	322 Move [X26+12], V0
	323 Move [X31+8], V1
	324 Move W8, [X20+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction LDUR not yet implemented."
	327 Move V1, [X31+8]
	328 Move [X20+72], V0
	329 Move [X20+60], V1
	330 Move X0, [X22]
	331 Call 0x1C17F10
	332 Move X1, X20
	333 Move X2, X31
	334 Move X21, X0
	335 Call AnimationCurve..ctor, X0, X1
	336 Move X8, -49168384
	337 Move X9, -49168384
	338 Move V0, [X8+1608]
	339 Move V1, [X9+3312]
	340 Move W8, 0x3F400000
	341 Move [X19+232], X21
	342 Move [X19+144], W31
	343 Move [X19+160], W8
	344 Move [X19+164], D0
	345 Move [X19+172], D1
	346 Move [X19+180], W31
	347 Move W8, [X23+2632]
	348 Compare W8, 0
	349 JumpIfNotEqual {355}
	350 Move X0, 0x72A000
	351 Move X0, [X0+3848]
	352 Call 0x1C17CF4
	353 Move W8, 1
	354 Move [X23+2632], W8
	355 Move X8, [X24]
	356 Move W1, 2
	357 Move X8, [X8+184]
	358 Move V0, [X8+8]
	359 Move [X19+184], D0
	360 Move X0, [X25]
	361 Call 0x1C17D6C
	362 Move X20, X0
	363 Add X0, X31, 96
	364 Move S0, W31
	365 Move S1, W31
	366 Move S2, 1
	367 Move S3, 1
	368 Move X1, X31
	369 Move [X31+96], X31
	370 Move [X31+104], X31
	371 Move [X31+120], W31
	372 Move [X31+112], X31
	373 Call Keyframe..ctor, X0, V0, V1, V2, V3
	374 Compare X20, 0
	375 JumpIfEqual {435}
	376 Move V0, [X31+6]
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 Move [X31+4], V0
	379 Move [X31+76], V1
	380 Move W8, [X20+24]
	381 Compare W8, 0
	382 JumpIfEqual {434}
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 Move V1, [X31+4]
	385 Add X0, X31, 32
	386 Move S2, 1
	387 Move [X20+44], V0
	388 Move [X20+2], V1
	389 Move S0, 1
	390 Move S1, 1
	391 Move S3, -1
	392 Move X1, X31
	393 Move [X31+32], X31
	394 Move [X31+40], X31
	395 Move [X31+56], W31
	396 Move [X31+48], X31
	397 Call Keyframe..ctor, X0, V0, V1, V2, V3
	398 NotImplemented "Instruction LDUR not yet implemented."
	399 Move V1, [X31+2]
	400 Move [X31+12], V0
	401 Move [X31], V1
	402 Move W8, [X20+24]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 NotImplemented "Instruction LDUR not yet implemented."
	405 Move V1, [X31]
	406 Move [X20+72], V0
	407 Move [X20+60], V1
	408 Move X0, [X22]
	409 Call 0x1C17F10
	410 Move X1, X20
	411 Move X2, X31
	412 Move X21, X0
	413 Call AnimationCurve..ctor, X0, X1
	414 Move X8, -49168384
	415 Move V0, [X8+1160]
	416 Move W8, 6
	417 Move [X19+192], X21
	418 Move [X19+200], W31
	419 Move [X19+212], X8
	420 Move [X19+204], D0
	421 Move [X19+220], W31
	422 Add X31, X31, 624
	423 Move X20, [X31+64]
	424 Move X19, [X31+72]
	425 Move X22, [X31+48]
	426 Move X21, [X31+56]
	427 Move X24, [X31+32]
	428 Move X23, [X31+40]
	429 Move X26, [X31+16]
	430 Move X25, [X31+24]
	431 Move X29, [X31+80]
	432 Move X30, [X31+88]
	433 Return 
	434 Call 0x1C17F28
	435 Call 0x1C17F20

Method: System.Single get_localIntensity()

Disassembly:
	0x039D25D8 LDP X20, X19, [X31 + 0x10]
	0x039D25DC MOV W3, W31

ISIL:
	001 Move V0, [X0+44]
	002 Return V0

Method: System.Void set_localIntensity(System.Single value)

Disassembly:
	0x039D2540 B.CS 0x39D259C
	0x039D2544 LDR X8, [X20 + 0x18]
	0x039D2548 CBZ X8, 0x39D2598
	0x039D254C LDR X0, [X23, X22, LSL #3]

ISIL:
	001 Move S1, W31
	002 NotImplemented "Instruction FMAX not yet implemented."
	003 Move [X0+44], S0
	004 Return 

Method: System.Int32 get_count()

Disassembly:
	0x039D25E0 LDP X30, X21, [X31], #0x20
	0x039D25E4 B 0x39D7748

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_count(System.Int32 value)

Disassembly:
	0x039D2550 CBZ X0, 0x39D2558
	0x039D2554 BL 0x39D4B1C
	0x039D2558 LDR W8, [X21 + 0x18]
	0x039D255C ADD X22, X22, 0x1

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSINC not yet implemented."
	003 Move [X0+72], W8
	004 Return 

Method: System.Single get_intensityVariation()

Disassembly:
	0x039D25E8 BL 0x1C16F20
	0x039D25EC SUB X31, X31, 0xB0

ISIL:
	001 Move V0, [X0+160]
	002 Return V0

Method: System.Void set_intensityVariation(System.Single value)

Disassembly:
	0x039D2560 CMP X22, W8, SXTW
	0x039D2564 B.LT 0x39D253C
	0x039D2568 LDR X0, [X20 + 0x10]
	0x039D256C CBZ X0, 0x39D2598

ISIL:
	001 Move S1, W31
	002 NotImplemented "Instruction FMAX not yet implemented."
	003 Move [X0+160], S0
	004 Return 

Method: System.Single get_fallOff()

Disassembly:
	0x039D25F0 STR X30, [X31 + 0x60]
	0x039D25F4 STP X26, X25, [X31 + 0x70]

ISIL:
	001 Move V0, [X0+204]
	002 Return V0

Method: System.Void set_fallOff(System.Single value)

Disassembly:
	0x039D2570 ADRP X8, 0x780000
	0x039D2574 LDR X8, [X8 + 0xF58]
	0x039D2578 MOV W1, W19
	0x039D257C LDR X2, [X8]
	0x039D2580 BL 0x2A14A88
	0x039D2584 LDP X20, X19, [X31 + 0x30]
	0x039D2588 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+204], S0
	007 Return 

Method: System.Single get_edgeOffset()

Disassembly:
	0x039D25F8 STP X24, X23, [X31 + 0x80]
	0x039D25FC STP X22, X21, [X31 + 0x90]

ISIL:
	001 Move V0, [X0+208]
	002 Return V0

Method: System.Void set_edgeOffset(System.Single value)

Disassembly:
	0x039D258C LDP X30, X23, [X31 + 0x10]
	0x039D2590 ADD X31, X31, 0x40
	0x039D2594 RET
	0x039D2598 BL 0x1C16F20
	0x039D259C BL 0x1C16F28
	0x039D25A0 CBZ X1, 0x39D25AC
	0x039D25A4 MOV X0, X1

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+208], S0
	007 Return 

Method: System.Int32 get_sideCount()

Disassembly:
	0x039D2600 STP X20, X19, [X31 + 0xA0]
	0x039D2604 ADRP X20, 0xA0F000

ISIL:
	001 Move W0, [X0+212]
	002 Return X0

Method: System.Void set_sideCount(System.Int32 value)

Disassembly:
	0x039D25C4 BL 0x39D25EC
	0x039D25C8 LDR X0, [X21 + 0x18]
	0x039D25CC CBZ X0, 0x39D25E8
	0x039D25D0 MOV W1, W20
	0x039D25D4 MOV W2, W19

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 3
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Move [X0+212], W8
	005 Return 

Method: System.Single get_sdfRoundness()

Disassembly:
	0x039D2608 LDRB W8, [X20 + 0xD21]
	0x039D260C MOV X19, X0

ISIL:
	001 Move V0, [X0+216]
	002 Return V0

Method: System.Void set_sdfRoundness(System.Single value)

Disassembly:
	0x039D25A8 B 0x39D4B1C
	0x039D25AC RET
	0x039D25B0 STP X30, X21, [X31 - 0x20]!
	0x039D25B4 STP X20, X19, [X31 + 0x10]
	0x039D25B8 MOV W19, W2
	0x039D25BC MOV W20, W1
	0x039D25C0 MOV X21, X0

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+216], S0
	007 Return 

