Type: UnityEngine.Rendering.DebugDisplaySettingsVolume/WidgetFactory/<>c__DisplayClass3_0

Method: System.Void .ctor()

Disassembly:
	0x039A4C08 ADRP X0, 0x7AD000
	0x039A4C0C LDR X0, [X0 + 0x488]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <CreateVolumeTable>g__AddParameterRows|0(System.Type type, System.String baseName = null, System.Int32 skip = 0)

Disassembly:
	0x039A4D54 LDR X21, [X21 + 0x488]
	0x039A4D58 MOV X2, X31
	0x039A4D5C BL 0x32CFB70
	0x039A4D60 CBZ X0, 0x39A4D94
	0x039A4D64 LDR X8, [X0]
	0x039A4D68 MOV X1, X31
	0x039A4D6C MOV X20, X0
	0x039A4D70 LDP X9, X2, [X8 + 0x138]
	0x039A4D74 BLR X9
	0x039A4D78 TBNZ X0, 0x0, 0x39A4D94
	0x039A4D7C LDR X0, [X19 + 0x10]
	0x039A4D80 CBZ X0, 0x39A4DBC
	0x039A4D84 MOV X1, X20
	0x039A4D88 MOV X2, X31
	0x039A4D8C BL 0x32CFB70
	0x039A4D90 CBNZ X0, 0x39A4DB0
	0x039A4D94 LDR X0, [X21]
	0x039A4D98 LDR W8, [X0 + 0xE0]
	0x039A4D9C CBNZ W8, 0x39A4DA8
	0x039A4DA0 BL 0x1C16DFC
	0x039A4DA4 LDR X0, [X21]
	0x039A4DA8 LDR X8, [X0 + 0xB8]
	0x039A4DAC LDR X0, [X8]
	0x039A4DB0 LDP X20, X19, [X31 + 0x10]
	0x039A4DB4 LDP X30, X21, [X31], #0x20
	0x039A4DB8 RET
	0x039A4DBC BL 0x1C16F20
	0x039A4DC0 STP X29, X30, [X31 - 0x60]!
	0x039A4DC4 STP X28, X27, [X31 + 0x10]
	0x039A4DC8 STP X26, X25, [X31 + 0x20]
	0x039A4DCC STP X24, X23, [X31 + 0x30]
	0x039A4DD0 STP X22, X21, [X31 + 0x40]
	0x039A4DD4 STP X20, X19, [X31 + 0x50]
	0x039A4DD8 ADRP X20, 0xA3D000
	0x039A4DDC ADRP X24, 0x7AD000
	0x039A4DE0 LDRB W8, [X20 + 0xBA2]
	0x039A4DE4 LDR X24, [X24 + 0x750]
	0x039A4DE8 MOV W21, W3
	0x039A4DEC MOV X22, X2
	0x039A4DF0 MOV X23, X1
	0x039A4DF4 MOV X19, X0
	0x039A4DF8 TBNZ X8, 0x0, 0x39A4EC4
	0x039A4DFC ADRP X0, 0x7AD000
	0x039A4E00 LDR X0, [X0 + 0x758]
	0x039A4E04 BL 0x1C16CF4
	0x039A4E08 ADRP X0, 0x7AD000
	0x039A4E0C LDR X0, [X0 + 0x760]
	0x039A4E10 BL 0x1C16CF4
	0x039A4E14 ADRP X0, 0x758000
	0x039A4E18 LDR X0, [X0 + 0x940]
	0x039A4E1C BL 0x1C16CF4
	0x039A4E20 ADRP X0, 0x7AD000
	0x039A4E24 LDR X0, [X0 + 0x768]
	0x039A4E28 BL 0x1C16CF4
	0x039A4E2C ADRP X0, 0x7AD000
	0x039A4E30 LDR X0, [X0 + 0x770]
	0x039A4E34 BL 0x1C16CF4
	0x039A4E38 ADRP X0, 0x7AD000
	0x039A4E3C LDR X0, [X0 + 0x778]
	0x039A4E40 BL 0x1C16CF4
	0x039A4E44 ADRP X0, 0x7AC000
	0x039A4E48 LDR X0, [X0 + 0x7A0]
	0x039A4E4C BL 0x1C16CF4
	0x039A4E50 ADRP X0, 0x7AD000
	0x039A4E54 LDR X0, [X0 + 0x6B8]
	0x039A4E58 BL 0x1C16CF4
	0x039A4E5C ADRP X0, 0x7AD000
	0x039A4E60 LDR X0, [X0 + 0x488]
	0x039A4E64 BL 0x1C16CF4
	0x039A4E68 ADRP X0, 0x74F000
	0x039A4E6C LDR X0, [X0 + 0x6C0]
	0x039A4E70 BL 0x1C16CF4
	0x039A4E74 ADRP X0, 0x7AD000
	0x039A4E78 LDR X0, [X0 + 0x750]
	0x039A4E7C BL 0x1C16CF4
	0x039A4E80 ADRP X0, 0x7AD000
	0x039A4E84 LDR X0, [X0 + 0x780]
	0x039A4E88 BL 0x1C16CF4
	0x039A4E8C ADRP X0, 0x7AD000
	0x039A4E90 LDR X0, [X0 + 0x788]
	0x039A4E94 BL 0x1C16CF4
	0x039A4E98 ADRP X0, 0x779000
	0x039A4E9C LDR X0, [X0 + 0xFC8]
	0x039A4EA0 BL 0x1C16CF4
	0x039A4EA4 ADRP X0, 0x750000
	0x039A4EA8 LDR X0, [X0 + 0x608]
	0x039A4EAC BL 0x1C16CF4
	0x039A4EB0 ADRP X0, 0x750000
	0x039A4EB4 LDR X0, [X0 + 0x610]
	0x039A4EB8 BL 0x1C16CF4
	0x039A4EBC MOVZ W8, 0x1
	0x039A4EC0 STRB W8, [X20 + 0xBA2]
	0x039A4EC4 LDR X0, [X24]
	0x039A4EC8 BL 0x1C16F10
	0x039A4ECC MOV X1, X31
	0x039A4ED0 MOV X20, X0
	0x039A4ED4 BL 0x33BDD8C
	0x039A4ED8 CBZ X23, 0x39A52FC
	0x039A4EDC LDR X8, [X23]
	0x039A4EE0 ADRP X24, 0x7AD000
	0x039A4EE4 ADRP X25, 0x74F000
	0x039A4EE8 MOV X0, X23
	0x039A4EEC LDP X9, X1, [X8 + 0x1A8]
	0x039A4EF0 LDR X24, [X24 + 0x760]
	0x039A4EF4 LDR X25, [X25 + 0x6C0]
	0x039A4EF8 BLR X9
	0x039A4EFC MOV X1, X0
	0x039A4F00 MOV X0, X22
	0x039A4F04 MOV X2, X31
	0x039A4F08 BL 0x321B938
	0x039A4F0C LDR X8, [X25]
	0x039A4F10 LDR X25, [X24]
	0x039A4F14 MOV X24, X0
	0x039A4F18 LDR W9, [X8 + 0xE0]
	0x039A4F1C CBNZ W9, 0x39A4F28
	0x039A4F20 MOV X0, X8
	0x039A4F24 BL 0x1C16DFC
	0x039A4F28 MOV X0, X25
	0x039A4F2C MOV X1, X31
	0x039A4F30 BL 0x338C698
	0x039A4F34 LDR X8, [X23]
	0x039A4F38 MOV X1, X0
	0x039A4F3C MOVZ W2, 0x1
	0x039A4F40 MOV X0, X23
	0x039A4F44 LDR X9, [X8 + 0x208]
	0x039A4F48 LDR X3, [X8 + 0x210]
	0x039A4F4C BLR X9
	0x039A4F50 CBZ X0, 0x39A52FC
	0x039A4F54 ADRP X8, 0x7AD000
	0x039A4F58 LDR X8, [X8 + 0x758]
	0x039A4F5C MOV X23, X0
	0x039A4F60 LDR X25, [X8]
	0x039A4F64 MOV X1, X25
	0x039A4F68 BL 0x1C16E00
	0x039A4F6C CBZ X0, 0x39A5304
	0x039A4F70 LDR X8, [X0 + 0x18]
	0x039A4F74 CBZ X8, 0x39A4F98
	0x039A4F78 CBZ W8, 0x39A5300
	0x039A4F7C LDR X8, [X0 + 0x20]
	0x039A4F80 CBZ X8, 0x39A52FC
	0x039A4F84 LDR X1, [X8 + 0x10]
	0x039A4F88 MOV X0, X22
	0x039A4F8C MOV X2, X31
	0x039A4F90 BL 0x321B938
	0x039A4F94 MOV X24, X0
	0x039A4F98 LDR X8, [X19 + 0x18]
	0x039A4F9C CBZ X8, 0x39A52FC
	0x039A4FA0 CBZ X20, 0x39A52FC
	0x039A4FA4 LDR W8, [X8 + 0x18]
	0x039A4FA8 ADRP X9, 0x7AD000
	0x039A4FAC LDR X9, [X9 + 0x6B8]
	0x039A4FB0 ADD W8, W8, W21
	0x039A4FB4 STR W8, [X20 + 0x10]
	0x039A4FB8 LDR X0, [X9]
	0x039A4FBC BL 0x1C16F10
	0x039A4FC0 MOV X21, X0
	0x039A4FC4 BL 0x39A3C60
	0x039A4FC8 CBZ X21, 0x39A52FC
	0x039A4FCC ADRP X23, 0x7AD000
	0x039A4FD0 LDR X23, [X23 + 0x488]
	0x039A4FD4 STR X24, [X21 + 0x28]
	0x039A4FD8 LDR X22, [X21 + 0x48]
	0x039A4FDC LDR X0, [X23]
	0x039A4FE0 LDR W8, [X0 + 0xE0]
	0x039A4FE4 CBNZ W8, 0x39A4FF0
	0x039A4FE8 BL 0x1C16DFC
	0x039A4FEC LDR X0, [X23]
	0x039A4FF0 LDR X8, [X19 + 0x28]
	0x039A4FF4 CBZ X8, 0x39A52FC
	0x039A4FF8 LDR X8, [X8 + 0x28]
	0x039A4FFC CBZ X8, 0x39A52FC
	0x039A5000 ADRP X10, 0x7AC000
	0x039A5004 LDR X9, [X0 + 0xB8]
	0x039A5008 B 0x3EB1704
	0x039A500C LDR W1, [X20 + 0x10]
	0x039A5010 MOV X0, X8
	0x039A5014 LDR X23, [X9 + 0x30]
	0x039A5018 LDR X2, [X10]
	0x039A501C BL 0x301BCCC
	0x039A5020 MOV X1, X0
	0x039A5024 MOV X0, X23
	0x039A5028 MOV X2, X31
	0x039A502C BL 0x39A2284
	0x039A5030 CBZ X22, 0x39A52FC
	0x039A5034 ADRP X8, 0x7AB000
	0x039A5038 LDR X8, [X8 + 0x7A0]
	0x039A503C MOV X1, X0
	0x039A5040 MOV X0, X22
	0x039A5044 LDR X2, [X8]
	0x039A5048 BL 0x2497EC8
	0x039A504C LDR X29, [X19 + 0x30]
	0x039A5050 STR X21, [X19 + 0x20]
	0x039A5054 CBZ X29, 0x39A52FC
	0x039A5058 LDR W8, [X29 + 0x18]
	0x039A505C CMP W8, 0x1
	0x039A5060 B.LT 0x39A51E8
	0x039A5064 ADRP X27, 0x757000
	0x039A5068 ADRP X28, 0x7AC000
	0x039A506C LDR X27, [X27 + 0x940]
	0x039A5070 LDR X28, [X28 + 0x780]
	0x039A5074 MOV W26, W31
	0x039A5078 CMP W26, W8
	0x039A507C B.CS 0x39A5300
	0x039A5080 ADD X8, X29, W26, 0x3, SXTW
	0x039A5084 LDR X22, [X8 + 0x20]
	0x039A5088 ADRP X8, 0x7AC000
	0x039A508C LDR X8, [X8 + 0x788]
	0x039A5090 LDR X0, [X8]
	0x039A5094 BL 0x1C16F10
	0x039A5098 MOV X1, X31
	0x039A509C MOV X21, X0
	0x039A50A0 BL 0x33BDD8C
	0x039A50A4 CBZ X21, 0x39A52FC
	0x039A50A8 STR X20, [X21 + 0x18]
	0x039A50AC CBZ X22, 0x39A52FC
	0x039A50B0 MOV X0, X22
	0x039A50B4 MOV X1, X31
	0x039A50B8 BL 0x39EE760
	0x039A50BC TBZ X0, 0x0, 0x39A50D4
	0x039A50C0 MOV X0, X22
	0x039A50C4 MOV X1, X31
	0x039A50C8 BL 0x39EE408
	0x039A50CC MOV X23, X0
	0x039A50D0 B 0x39A50D8
	0x039A50D4 LDR X23, [X22 + 0x30]
	0x039A50D8 CBZ X23, 0x39A52FC
	0x039A50DC ADRP X8, 0x778000
	0x039A50E0 LDR X1, [X19 + 0x38]
	0x039A50E4 LDR X8, [X8 + 0xFC8]
	0x039A50E8 ADD X24, X21, 0x10
	0x039A50EC MOV X0, X23
	0x039A50F0 MOV X2, X24
	0x039A50F4 LDR X3, [X8]
	0x039A50F8 BL 0x22AC5F8
	0x039A50FC TBZ X0, 0x0, 0x39A5134
	0x039A5100 LDR X9, [X24]
	0x039A5104 CBZ X9, 0x39A52FC
	0x039A5108 LDR X8, [X21 + 0x18]
	0x039A510C CBZ X8, 0x39A52FC
	0x039A5110 LDR X0, [X9 + 0x28]
	0x039A5114 CBZ X0, 0x39A52FC
	0x039A5118 LDR W1, [X8 + 0x10]
	0x039A511C ADRP X8, 0x7AC000
	0x039A5120 LDR X8, [X8 + 0x778]
	0x039A5124 LDR X2, [X8]
	0x039A5128 BL 0x301BCCC
	0x039A512C MOV X25, X0
	0x039A5130 B 0x39A5138
	0x039A5134 MOV X25, X31
	0x039A5138 LDR X8, [X19 + 0x20]
	0x039A513C CBZ X8, 0x39A52FC
	0x039A5140 LDR X24, [X8 + 0x48]
	0x039A5144 MOV X0, X22
	0x039A5148 MOV X1, X31
	0x039A514C BL 0x3C389D4
	0x039A5150 MOV X22, X0
	0x039A5154 MOV X0, X23
	0x039A5158 MOV X1, X31
	0x039A515C BL 0x3C389D4
	0x039A5160 ADRP X8, 0x74F000
	0x039A5164 LDR X8, [X8 + 0x610]
	0x039A5168 MOV X2, X0
	0x039A516C MOV X0, X22
	0x039A5170 MOV X4, X31
	0x039A5174 LDR X1, [X8]
	0x039A5178 ADRP X8, 0x74F000
	0x039A517C LDR X8, [X8 + 0x608]
	0x039A5180 LDR X3, [X8]
	0x039A5184 BL 0x32277C4
	0x039A5188 LDR X8, [X27]
	0x039A518C MOV X22, X0
	0x039A5190 MOV X0, X8
	0x039A5194 BL 0x1C16F10
	0x039A5198 LDR X2, [X28]
	0x039A519C MOV X1, X21
	0x039A51A0 MOV X3, X31
	0x039A51A4 MOV X23, X0
	0x039A51A8 BL 0x2D27194
	0x039A51AC MOV X0, X22
	0x039A51B0 MOV X1, X25
	0x039A51B4 MOV X2, X23
	0x039A51B8 BL 0x39A2284
	0x039A51BC CBZ X24, 0x39A52FC
	0x039A51C0 ADRP X8, 0x7AB000
	0x039A51C4 LDR X8, [X8 + 0x7A0]
	0x039A51C8 MOV X1, X0
	0x039A51CC MOV X0, X24
	0x039A51D0 LDR X2, [X8]
	0x039A51D4 BL 0x2497EC8
	0x039A51D8 LDR W8, [X29 + 0x18]
	0x039A51DC ADD W26, W26, 0x1
	0x039A51E0 CMP W26, W8
	0x039A51E4 B.LT 0x39A5078
	0x039A51E8 LDR X8, [X19 + 0x20]
	0x039A51EC CBZ X8, 0x39A52FC
	0x039A51F0 ADRP X22, 0x7AC000
	0x039A51F4 LDR X22, [X22 + 0x488]
	0x039A51F8 LDR X21, [X8 + 0x48]
	0x039A51FC LDR X0, [X22]
	0x039A5200 LDR W9, [X0 + 0xE0]
	0x039A5204 CBNZ W9, 0x39A5210
	0x039A5208 BL 0x1C16DFC
	0x039A520C LDR X0, [X22]
	0x039A5210 LDR X8, [X19 + 0x40]
	0x039A5214 CBZ X8, 0x39A52FC
	0x039A5218 LDR X8, [X8 + 0x28]
	0x039A521C CBZ X8, 0x39A52FC
	0x039A5220 LDR X9, [X0 + 0xB8]
	0x039A5224 LDR W1, [X20 + 0x10]
	0x039A5228 MOV X0, X8
	0x039A522C LDR X20, [X9 + 0x38]
	0x039A5230 ADRP X9, 0x7AC000
	0x039A5234 LDR X9, [X9 + 0x778]
	0x039A5238 LDR X2, [X9]
	0x039A523C BL 0x301BCCC
	0x039A5240 MOV X1, X0
	0x039A5244 MOV X0, X20
	0x039A5248 MOV X2, X31
	0x039A524C BL 0x39A2284
	0x039A5250 CBZ X21, 0x39A52FC
	0x039A5254 ADRP X8, 0x7AB000
	0x039A5258 LDR X8, [X8 + 0x7A0]
	0x039A525C MOV X1, X0
	0x039A5260 MOV X0, X21
	0x039A5264 LDR X2, [X8]
	0x039A5268 BL 0x2497EC8
	0x039A526C LDR X0, [X19 + 0x18]
	0x039A5270 CBZ X0, 0x39A52FC
	0x039A5274 ADRP X9, 0x7AC000
	0x039A5278 LDR X9, [X9 + 0x768]
	0x039A527C LDR W10, [X0 + 0x1C]
	0x039A5280 LDR X1, [X19 + 0x20]
	0x039A5284 LDR X8, [X0 + 0x10]
	0x039A5288 LDR X9, [X9]
	0x039A528C ADD W10, W10, 0x1
	0x039A5290 STR W10, [X0 + 0x1C]
	0x039A5294 CBZ X8, 0x39A52FC
	0x039A5298 LDRSW X10, [X0 + 0x18]
	0x039A529C LDR W11, [X8 + 0x18]
	0x039A52A0 CMP W10, W11
	0x039A52A4 B.CS 0x39A52D4
	0x039A52A8 LDP X20, X19, [X31 + 0x50]
	0x039A52AC LDP X22, X21, [X31 + 0x40]
	0x039A52B0 LDP X24, X23, [X31 + 0x30]
	0x039A52B4 LDP X26, X25, [X31 + 0x20]
	0x039A52B8 LDP X28, X27, [X31 + 0x10]
	0x039A52BC ADD W9, W10, 0x1
	0x039A52C0 ADD X8, X8, X10, 0x3, LSL
	0x039A52C4 STR W9, [X0 + 0x18]
	0x039A52C8 STR X1, [X8 + 0x20]
	0x039A52CC LDP X29, X30, [X31], #0x60
	0x039A52D0 RET
	0x039A52D4 LDR X8, [X9 + 0x20]
	0x039A52D8 LDP X20, X19, [X31 + 0x50]
	0x039A52DC LDP X22, X21, [X31 + 0x40]
	0x039A52E0 LDP X24, X23, [X31 + 0x30]
	0x039A52E4 LDR X8, [X8 + 0xC0]
	0x039A52E8 LDP X26, X25, [X31 + 0x20]
	0x039A52EC LDP X28, X27, [X31 + 0x10]
	0x039A52F0 LDR X2, [X8 + 0x70]
	0x039A52F4 LDP X29, X30, [X31], #0x60
	0x039A52F8 B 0x301BF90
	0x039A52FC BL 0x1C16F20
	0x039A5300 BL 0x1C16F28
	0x039A5304 MOV X0, X23
	0x039A5308 MOV X1, X25
	0x039A530C BL 0x1C171E0
	0x039A5310 MOV X1, X31
	0x039A5314 B 0x33BDD8C
	0x039A5318 MOV X1, X31
	0x039A531C B 0x33BDD8C
	0x039A5320 STR D8, [X31 - 0x40]!
	0x039A5324 STR X30, [X31 + 0x8]
	0x039A5328 STP X24, X23, [X31 + 0x10]
	0x039A532C STP X22, X21, [X31 + 0x20]
	0x039A5330 STP X20, X19, [X31 + 0x30]
	0x039A5334 ADRP X20, 0xA3C000
	0x039A5338 LDRB W8, [X20 + 0xBA3]
	0x039A533C MOV X19, X0
	0x039A5340 TBNZ X8, 0x0, 0x39A537C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xA3E000
	015 Move W8, [X20+2977]
	016 Move X25, X2
	017 Move X19, X1
	018 Move X23, X0
	019 Move [X31+4], W3
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {65}
	024 Move X0, 0x779000
	025 Move X0, [X0+3400]
	026 Call 0x1C17CF4
	027 Move X0, 0x779000
	028 Move X0, [X0+3440]
	029 Call 0x1C17CF4
	030 Move X0, 0x750000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x77B000
	034 Move X0, [X0+3032]
	035 Call 0x1C17CF4
	036 Move X0, 0x77B000
	037 Move X0, [X0+3040]
	038 Call 0x1C17CF4
	039 Move X0, 0x750000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0x779000
	043 Move X0, [X0+2856]
	044 Call 0x1C17CF4
	045 Move X0, 0x752000
	046 Move X0, [X0+632]
	047 Call 0x1C17CF4
	048 Move X0, 0x750000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move X0, 0x7AE000
	052 Move X0, [X0+1832]
	053 Call 0x1C17CF4
	054 Move X0, 0x7AE000
	055 Move X0, [X0+1616]
	056 Call 0x1C17CF4
	057 Move X0, 0x779000
	058 Move X0, [X0+2880]
	059 Call 0x1C17CF4
	060 Move X0, 0x750000
	061 Move X0, [X0+3544]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+2977], W8
	065 Compare X19, 0
	066 JumpIfEqual {351}
	067 Move X8, [X19]
	068 Move X21, 0x7AE000
	069 Move W1, 52
	070 Move X0, X19
	071 Move X9, [X8+1672]
	072 Move X2, [X8+1680]
	073 Move X21, [X21+1616]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X21]
	076 Move X19, X0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {83}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, [X21]
	083 Move X9, [X8+184]
	084 Move X22, 0x779000
	085 Move X20, [X9+56]
	086 Move X22, [X22+3400]
	087 Compare X20, 0
	088 JumpIfNotEqual {111}
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {95}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X8, [X21]
	095 Move X9, 0x779000
	096 Move X8, [X8+184]
	097 Move X9, [X9+3440]
	098 Move X24, [X8]
	099 Move X0, [X9]
	100 Call 0x1C17F10
	101 Move X8, 0x7AE000
	102 Move X8, [X8+1832]
	103 Move X1, X24
	104 Move X3, X31
	105 Move X20, X0
	106 Move X2, [X8]
	107 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	108 Move X8, [X21]
	109 Move X8, [X8+184]
	110 Move [X8+56], X20
	111 Move X2, [X22]
	112 Move X0, X19
	113 Move X1, X20
	114 Call Enumerable.OrderBy, X0, X1
	115 Compare X0, 0
	116 JumpIfEqual {351}
	117 Move X10, 0x77B000
	118 Move X8, [X0]
	119 Move X10, [X10+3032]
	120 Move X19, X0
	121 Move [X31+8], X25
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X10]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X19
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X28, 0x750000
	139 Move X29, 0x77B000
	140 Move X27, 0x779000
	141 Move X21, 0x750000
	142 Move X22, 0x779000
	143 Move X28, [X28+3608]
	144 Move X29, [X29+3040]
	145 Move X27, [X27+2856]
	146 Move X21, [X21+1728]
	147 Move X22, [X22+2880]
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X19
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move W20, [X31+4]
	153 Move X19, X0
	154 Compare X19, 0
	155 JumpIfEqual {350}
	156 Move X8, [X19]
	157 Move X1, [X28]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X19
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X19
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move TEMP, X0
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {304}
	181 Move X8, [X19]
	182 Move X1, [X29]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X19
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X19
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X24, X0
	203 Move X0, [X21]
	204 Move X25, [X27]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X25
	210 Move X1, X31
	211 Call Type.GetTypeFromHandle, X0
	212 Move X1, X0
	213 Compare X24, 0
	214 JumpIfEqual {347}
	215 Move X8, [X24]
	216 Move X9, [X8+520]
	217 Move X3, [X8+528]
	218 Move X0, X24
	219 Move W2, W31
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X0, 0
	222 JumpIfEqual {348}
	223 Move X8, [X0+24]
	224 Compare X8, 0
	225 JumpIfNotEqual {267}
	226 Move X8, [X24]
	227 Move X1, [X8+608]
	228 Move X9, [X8+600]
	229 Move X0, X24
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X25, X0
	232 Move X0, [X21]
	233 Move X26, [X22]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X0, X26
	239 Move X1, X31
	240 Call Type.GetTypeFromHandle, X0
	241 Move X1, X0
	242 Compare X25, 0
	243 JumpIfEqual {349}
	244 Move X8, [X25]
	245 Move X9, [X8+664]
	246 Move X2, [X8+672]
	247 Move X0, X25
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {268}
	253 Move X0, X25
	254 Move X1, X31
	255 Call Type.get_IsArray, X0
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfEqual {156}
	260 Move X0, X25
	261 Move X1, X31
	262 Call Type.get_IsClass, X0
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {156}
	267 Add W20, W20, 1
	268 Move X8, [X31+8]
	269 Move X2, X8
	270 Compare X8, 0
	271 JumpIfNotEqual {277}
	272 Move X8, 0x751000
	273 Move X8, [X8+632]
	274 Move X8, [X8]
	275 Move X8, [X8+184]
	276 Move X2, [X8]
	277 Compare X23, 0
	278 JumpIfEqual {354}
	279 Move X0, X23
	280 Move X1, X24
	281 Move W3, W20
	282 Call <>c__DisplayClass3_0.<CreateVolumeTable>g__AddRow|8, X0, X1, X2, X3
	283 Move X2, [X31+8]
	284 Compare X2, 0
	285 JumpIfNotEqual {297}
	286 Move X8, [X24]
	287 Move X9, [X8+424]
	288 Move X1, [X8+432]
	289 Move X0, X24
	290 NotImplemented "Instruction BLR not yet implemented."
	291 Move X8, 0x74F000
	292 Move X8, [X8+3544]
	293 Move X1, [X8]
	294 Move X2, X31
	295 Call String.Concat, X0, X1
	296 Move X2, X0
	297 Compare X23, 0
	298 JumpIfEqual {355}
	299 Move X0, X23
	300 Move X1, X25
	301 Move W3, W20
	302 Call <>c__DisplayClass3_0.<CreateVolumeTable>g__AddParameterRows|0, X0, X1, X2, X3
	303 Add W20, W0, W20
	304 Move X21, X31
	305 Compare X19, 0
	306 JumpIfEqual {330}
	307 Move X8, [X19]
	308 Move X10, 0x74F000
	309 NotImplemented "Instruction LDRH not yet implemented."
	310 Move X10, [X10+3584]
	311 Move X1, [X10]
	312 Compare X9, 0
	313 JumpIfEqual {320}
	314 Move X10, [X8+176]
	315 Add X10, X10, 8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Subtract X9, X9, 1
	319 Add X10, X10, 16
	320 Move X0, X19
	321 Move W2, W31
	322 Call 0x1C5D788
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Add X8, X8, X9
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X1, [X0+8]
	328 Move X0, X19
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Compare X21, 0
	331 JumpIfNotEqual {352}
	332 Move W0, W20
	333 Move X20, [X31+96]
	334 Move X19, [X31+104]
	335 Move X22, [X31+80]
	336 Move X21, [X31+88]
	337 Move X24, [X31+64]
	338 Move X23, [X31+72]
	339 Move X26, [X31+48]
	340 Move X25, [X31+56]
	341 Move X28, [X31+32]
	342 Move X27, [X31+40]
	343 Move X29, [X31+16]
	344 Move X30, [X31+24]
	345 Add X31, X31, 112
	346 Return X0
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Move X0, X21
	353 Call 0x1C17F18
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Move W20, [X31+4]
	357 Move X22, X0
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X0, X22
	360 Call 0x3EB2AD0
	361 Move X21, [X0]
	362 Call 0x3EB2AE0
	363 Move X21, X31
	364 Move X22, X0
	365 Compare X19, 0
	366 JumpIfEqual {390}
	367 Move X8, [X19]
	368 Move X10, 0x74F000
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Move X10, [X10+3584]
	371 Move X1, [X10]
	372 Compare X9, 0
	373 JumpIfEqual {380}
	374 Move X10, [X8+176]
	375 Add X10, X10, 8
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Subtract X9, X9, 1
	379 Add X10, X10, 16
	380 Move X0, X19
	381 Move W2, W31
	382 Call 0x1C5D788
	383 NotImplemented "Instruction LDRSW not yet implemented."
	384 Add X8, X8, X9
	385 Add X0, X8, 312
	386 Move X8, [X0]
	387 Move X1, [X0+8]
	388 Move X0, X19
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Compare X21, 0
	391 JumpIfNotEqual {394}
	392 Move X0, X22
	393 Call 0x1D2D690
	394 Move X0, X21
	395 Call 0x1C17F18
	396 Call 0x1991590

Method: System.Void <CreateVolumeTable>g__AddRow|8(System.Reflection.FieldInfo f, System.String prefix, System.Int32 skip)

Disassembly:
	0x039A5DC0 STR V0, [X31]
	0x039A5DC4 STR X8, [X31 + 0x10]
	0x039A5DC8 BL 0x39B0C9C
	0x039A5DCC LDR X0, [X19 + 0x18]
	0x039A5DD0 CBZ X0, 0x39A5DEC
	0x039A5DD4 MOV X1, X31
	0x039A5DD8 BL 0x39B0E10
	0x039A5DDC LDP X20, X19, [X31 + 0xD0]
	0x039A5DE0 LDP X30, X21, [X31 + 0xC0]
	0x039A5DE4 ADD X31, X31, 0xE0
	0x039A5DE8 RET
	0x039A5DEC BL 0x1C16F20
	0x039A5DF0 BL 0x1C16F28
	0x039A5DF4 STP X29, X30, [X31 - 0x60]!
	0x039A5DF8 STP X28, X27, [X31 + 0x10]
	0x039A5DFC STP X26, X25, [X31 + 0x20]
	0x039A5E00 STP X24, X23, [X31 + 0x30]
	0x039A5E04 STP X22, X21, [X31 + 0x40]
	0x039A5E08 STP X20, X19, [X31 + 0x50]
	0x039A5E0C ADRP X21, 0xA3C000
	0x039A5E10 ADRP X22, 0x7AC000
	0x039A5E14 LDRB W8, [X21 + 0xBAA]
	0x039A5E18 LDR X22, [X22 + 0x7B8]
	0x039A5E1C MOV X19, X1
	0x039A5E20 MOV X20, X0
	0x039A5E24 TBNZ X8, 0x0, 0x39A6070
	0x039A5E28 ADRP X0, 0x7AC000
	0x039A5E2C LDR X0, [X0 + 0x7C0]
	0x039A5E30 BL 0x1C16CF4
	0x039A5E34 ADRP X0, 0x7AC000
	0x039A5E38 LDR X0, [X0 + 0x7C8]
	0x039A5E3C BL 0x1C16CF4
	0x039A5E40 ADRP X0, 0x7AC000
	0x039A5E44 LDR X0, [X0 + 0x7D0]
	0x039A5E48 BL 0x1C16CF4
	0x039A5E4C ADRP X0, 0x7AC000
	0x039A5E50 LDR X0, [X0 + 0x7D8]
	0x039A5E54 BL 0x1C16CF4
	0x039A5E58 ADRP X0, 0x7AC000
	0x039A5E5C LDR X0, [X0 + 0x7E0]
	0x039A5E60 BL 0x1C16CF4
	0x039A5E64 ADRP X0, 0x7AC000
	0x039A5E68 LDR X0, [X0 + 0x7E8]
	0x039A5E6C BL 0x1C16CF4
	0x039A5E70 ADRP X0, 0x7AC000
	0x039A5E74 LDR X0, [X0 + 0x7F0]
	0x039A5E78 BL 0x1C16CF4
	0x039A5E7C ADRP X0, 0x7AC000
	0x039A5E80 LDR X0, [X0 + 0x7F8]
	0x039A5E84 BL 0x1C16CF4
	0x039A5E88 ADRP X0, 0x7AC000
	0x039A5E8C LDR X0, [X0 + 0x800]
	0x039A5E90 BL 0x1C16CF4
	0x039A5E94 ADRP X0, 0x7AC000
	0x039A5E98 LDR X0, [X0 + 0x808]
	0x039A5E9C BL 0x1C16CF4
	0x039A5EA0 ADRP X0, 0x7AC000
	0x039A5EA4 LDR X0, [X0 + 0x810]
	0x039A5EA8 BL 0x1C16CF4
	0x039A5EAC ADRP X0, 0x7AC000
	0x039A5EB0 LDR X0, [X0 + 0x818]
	0x039A5EB4 BL 0x1C16CF4
	0x039A5EB8 ADRP X0, 0x7AC000
	0x039A5EBC LDR X0, [X0 + 0x820]
	0x039A5EC0 BL 0x1C16CF4
	0x039A5EC4 ADRP X0, 0x7AC000
	0x039A5EC8 LDR X0, [X0 + 0x828]
	0x039A5ECC BL 0x1C16CF4
	0x039A5ED0 ADRP X0, 0x7AC000
	0x039A5ED4 LDR X0, [X0 + 0x830]
	0x039A5ED8 BL 0x1C16CF4
	0x039A5EDC ADRP X0, 0x7AC000
	0x039A5EE0 LDR X0, [X0 + 0x838]
	0x039A5EE4 BL 0x1C16CF4
	0x039A5EE8 ADRP X0, 0x7AC000
	0x039A5EEC LDR X0, [X0 + 0x840]
	0x039A5EF0 BL 0x1C16CF4
	0x039A5EF4 ADRP X0, 0x7AC000
	0x039A5EF8 LDR X0, [X0 + 0x848]
	0x039A5EFC BL 0x1C16CF4
	0x039A5F00 ADRP X0, 0x7AC000
	0x039A5F04 LDR X0, [X0 + 0x850]
	0x039A5F08 BL 0x1C16CF4
	0x039A5F0C ADRP X0, 0x7AC000
	0x039A5F10 LDR X0, [X0 + 0x858]
	0x039A5F14 BL 0x1C16CF4
	0x039A5F18 ADRP X0, 0x7AC000
	0x039A5F1C LDR X0, [X0 + 0x860]
	0x039A5F20 BL 0x1C16CF4
	0x039A5F24 ADRP X0, 0x7AC000
	0x039A5F28 LDR X0, [X0 + 0x868]
	0x039A5F2C BL 0x1C16CF4
	0x039A5F30 ADRP X0, 0x7AC000
	0x039A5F34 LDR X0, [X0 + 0x7B8]
	0x039A5F38 BL 0x1C16CF4
	0x039A5F3C ADRP X0, 0x7AC000
	0x039A5F40 LDR X0, [X0 + 0x5E0]
	0x039A5F44 BL 0x1C16CF4
	0x039A5F48 ADRP X0, 0x7AB000
	0x039A5F4C LDR X0, [X0 + 0x790]
	0x039A5F50 BL 0x1C16CF4
	0x039A5F54 ADRP X0, 0x7AB000
	0x039A5F58 LDR X0, [X0 + 0x7A0]
	0x039A5F5C BL 0x1C16CF4
	0x039A5F60 ADRP X0, 0x7AC000
	0x039A5F64 LDR X0, [X0 + 0x870]
	0x039A5F68 BL 0x1C16CF4
	0x039A5F6C ADRP X0, 0x74E000
	0x039A5F70 LDR X0, [X0 + 0xAC8]
	0x039A5F74 BL 0x1C16CF4
	0x039A5F78 ADRP X0, 0x7AC000
	0x039A5F7C LDR X0, [X0 + 0x878]
	0x039A5F80 BL 0x1C16CF4
	0x039A5F84 ADRP X0, 0x7AC000
	0x039A5F88 LDR X0, [X0 + 0x880]
	0x039A5F8C BL 0x1C16CF4
	0x039A5F90 ADRP X0, 0x7AC000
	0x039A5F94 LDR X0, [X0 + 0x658]
	0x039A5F98 BL 0x1C16CF4
	0x039A5F9C ADRP X0, 0x7AC000
	0x039A5FA0 LDR X0, [X0 + 0x888]
	0x039A5FA4 BL 0x1C16CF4
	0x039A5FA8 ADRP X0, 0x7AC000
	0x039A5FAC LDR X0, [X0 + 0x890]
	0x039A5FB0 BL 0x1C16CF4
	0x039A5FB4 ADRP X0, 0x7AC000
	0x039A5FB8 LDR X0, [X0 + 0x898]
	0x039A5FBC BL 0x1C16CF4
	0x039A5FC0 ADRP X0, 0x7AC000
	0x039A5FC4 LDR X0, [X0 + 0x8A0]
	0x039A5FC8 BL 0x1C16CF4
	0x039A5FCC ADRP X0, 0x7AC000
	0x039A5FD0 LDR X0, [X0 + 0x8A8]
	0x039A5FD4 BL 0x1C16CF4
	0x039A5FD8 ADRP X0, 0x7AC000
	0x039A5FDC LDR X0, [X0 + 0x8B0]
	0x039A5FE0 BL 0x1C16CF4
	0x039A5FE4 ADRP X0, 0x7AC000
	0x039A5FE8 LDR X0, [X0 + 0x8B8]
	0x039A5FEC BL 0x1C16CF4
	0x039A5FF0 ADRP X0, 0x7AC000
	0x039A5FF4 LDR X0, [X0 + 0x8C0]
	0x039A5FF8 BL 0x1C16CF4
	0x039A5FFC ADRP X0, 0x7AC000
	0x039A6000 LDR X0, [X0 + 0x8C8]
	0x039A6004 BL 0x1C16CF4
	0x039A6008 ADRP X0, 0x7AB000
	0x039A600C LDR X0, [X0 + 0x8D0]
	0x039A6010 BL 0x1C16CF4
	0x039A6014 ADRP X0, 0x7AB000
	0x039A6018 LDR X0, [X0 + 0x8D8]
	0x039A601C BL 0x1C16CF4
	0x039A6020 ADRP X0, 0x7AB000
	0x039A6024 LDR X0, [X0 + 0x8E0]
	0x039A6028 BL 0x1C16CF4
	0x039A602C ADRP X0, 0x7AB000
	0x039A6030 LDR X0, [X0 + 0x8E8]
	0x039A6034 BL 0x1C16CF4
	0x039A6038 ADRP X0, 0x7AB000
	0x039A603C LDR X0, [X0 + 0x8F0]
	0x039A6040 BL 0x1C16CF4
	0x039A6044 ADRP X0, 0x7AB000
	0x039A6048 LDR X0, [X0 + 0x8F8]
	0x039A604C BL 0x1C16CF4
	0x039A6050 ADRP X0, 0x7AB000
	0x039A6054 LDR X0, [X0 + 0x900]
	0x039A6058 BL 0x1C16CF4
	0x039A605C ADRP X0, 0x7AB000
	0x039A6060 LDR X0, [X0 + 0x908]
	0x039A6064 BL 0x1C16CF4
	0x039A6068 MOVZ W8, 0x1
	0x039A606C STRB W8, [X21 + 0xBAA]
	0x039A6070 LDR X0, [X22]
	0x039A6074 BL 0x1C16F10
	0x039A6078 MOV X21, X0
	0x039A607C BL 0x39ADAE0
	0x039A6080 CBZ X21, 0x39A6EC0
	0x039A6084 ADRP X8, 0x7AB000
	0x039A6088 LDR X8, [X8 + 0x8F8]
	0x039A608C ADRP X9, 0x74D000
	0x039A6090 MOVZ W10, 0x1
	0x039A6094 MOVZ W1, 0x3
	0x039A6098 LDR X8, [X8]
	0x039A609C LDR X9, [X9 + 0xAC8]
	0x039A60A0 STRB W10, [X21 + 0x50]
	0x039A60A4 STR X8, [X21 + 0x28]
	0x039A60A8 LDR X0, [X9]
	0x039A60AC BL 0x1C16D6C
	0x039A60B0 CBZ X0, 0x39A6EC0
	0x039A60B4 LDR W8, [X0 + 0x18]
	0x039A60B8 CBZ W8, 0x39A6EC4
	0x039A60BC ADRP X9, 0x7AB000
	0x039A60C0 LDR X9, [X9 + 0x898]
	0x039A60C4 CMP W8, 0x1
	0x039A60C8 LDR X9, [X9]
	0x039A60CC STR X9, [X0 + 0x20]
	0x039A60D0 B.EQ 0x39A6EC4
	0x039A60D4 ADRP X9, 0x7AB000
	0x039A60D8 LDR X9, [X9 + 0x8D8]
	0x039A60DC CMP W8, 0x2
	0x039A60E0 LDR X9, [X9]
	0x039A60E4 STR X9, [X0 + 0x28]
	0x039A60E8 B.LS 0x39A6EC4
	0x039A60EC ADRP X8, 0x7AB000
	0x039A60F0 LDR X8, [X8 + 0x8C0]
	0x039A60F4 ADRP X9, 0x7AB000
	0x039A60F8 ADRP X24, 0x7AB000
	0x039A60FC ADRP X25, 0x7AB000
	0x039A6100 LDR X8, [X8]
	0x039A6104 LDR X9, [X9 + 0x878]
	0x039A6108 ADRP X27, 0x7AB000
	0x039A610C STR X8, [X0 + 0x30]
	0x039A6110 STR X0, [X21 + 0x60]
	0x039A6114 LDR X0, [X9]
	0x039A6118 LDR X22, [X21 + 0x48]
	0x039A611C LDR X24, [X24 + 0x8E8]
	0x039A6120 LDR X25, [X25 + 0x880]
	0x039A6124 LDR X27, [X27 + 0x658]
	0x039A6128 BL 0x1C16F10
	0x039A612C MOVN W8, 0x0
	0x039A6130 MOV X1, X31
	0x039A6134 MOV X23, X0
	0x039A6138 STR W8, [X0 + 0x50]
	0x039A613C BL 0x33BDD8C
	0x039A6140 LDR X8, [X24]
	0x039A6144 MOVZ W1, 0x3
	0x039A6148 STR X8, [X23 + 0x28]
	0x039A614C LDR X0, [X25]
	0x039A6150 BL 0x1C16D6C
	0x039A6154 LDR X8, [X27]
	0x039A6158 MOV X24, X0
	0x039A615C MOV X0, X8
	0x039A6160 BL 0x1C16F10
	0x039A6164 MOV X25, X0
	0x039A6168 BL 0x39A2BC0
	0x039A616C CBZ X25, 0x39A6EC0
	0x039A6170 ADRP X29, 0x7AB000
	0x039A6174 LDR X29, [X29 + 0x8F0]
	0x039A6178 MOVZ W8, 0xCCCD
	0x039A617C MOVK W8, 0x3E4C0000
	0x039A6180 STR W8, [X25 + 0x50]
	0x039A6184 LDR X8, [X29]
	0x039A6188 ADRP X28, 0x7AB000
	0x039A618C LDR X28, [X28 + 0x5E0]
	0x039A6190 ADRP X26, 0x7AB000
	0x039A6194 STR X8, [X25 + 0x58]
	0x039A6198 LDR X0, [X28]
	0x039A619C LDR X26, [X26 + 0x7C0]
	0x039A61A0 BL 0x1C16F10
	0x039A61A4 LDR X2, [X26]
	0x039A61A8 MOV X1, X20
	0x039A61AC MOV X3, X31
	0x039A61B0 MOV X26, X0
	0x039A61B4 BL 0x2D27AA8
	0x039A61B8 STR X26, [X25 + 0x48]
	0x039A61BC CBZ X24, 0x39A6EC0
	0x039A61C0 LDR X8, [X24]
	0x039A61C4 MOV X0, X25
	0x039A61C8 LDR X1, [X8 + 0x40]
	0x039A61CC BL 0x1C16E00
	0x039A61D0 CBZ X0, 0x39A6EC8
	0x039A61D4 LDR W8, [X24 + 0x18]
	0x039A61D8 CBZ W8, 0x39A6EC4
	0x039A61DC STR X25, [X24 + 0x20]
	0x039A61E0 LDR X0, [X27]
	0x039A61E4 BL 0x1C16F10
	0x039A61E8 MOV X25, X0
	0x039A61EC BL 0x39A2BC0
	0x039A61F0 CBZ X25, 0x39A6EC0
	0x039A61F4 MOVZ W8, 0xCCCD
	0x039A61F8 MOVK W8, 0x3E4C0000
	0x039A61FC STR W8, [X25 + 0x50]
	0x039A6200 LDR X8, [X29]
	0x039A6204 ADRP X26, 0x7AB000
	0x039A6208 STR X8, [X25 + 0x58]
	0x039A620C LDR X0, [X28]
	0x039A6210 LDR X26, [X26 + 0x818]
	0x039A6214 BL 0x1C16F10
	0x039A6218 LDR X2, [X26]
	0x039A621C MOV X1, X20
	0x039A6220 MOV X3, X31
	0x039A6224 MOV X26, X0
	0x039A6228 BL 0x2D27AA8
	0x039A622C STR X26, [X25 + 0x48]
	0x039A6230 LDR X8, [X24]
	0x039A6234 MOV X0, X25
	0x039A6238 LDR X1, [X8 + 0x40]
	0x039A623C BL 0x1C16E00
	0x039A6240 CBZ X0, 0x39A6EC8
	0x039A6244 LDR W8, [X24 + 0x18]
	0x039A6248 CMP W8, 0x1
	0x039A624C B.LS 0x39A6EC4
	0x039A6250 STR X25, [X24 + 0x28]
	0x039A6254 LDR X0, [X27]
	0x039A6258 BL 0x1C16F10
	0x039A625C MOV X25, X0
	0x039A6260 BL 0x39A2BC0
	0x039A6264 CBZ X25, 0x39A6EC0
	0x039A6268 MOVZ W8, 0xCCCD
	0x039A626C MOVK W8, 0x3E4C0000
	0x039A6270 STR W8, [X25 + 0x50]
	0x039A6274 LDR X8, [X29]
	0x039A6278 ADRP X26, 0x7AB000
	0x039A627C STR X8, [X25 + 0x58]
	0x039A6280 LDR X0, [X28]
	0x039A6284 LDR X26, [X26 + 0x830]
	0x039A6288 BL 0x1C16F10
	0x039A628C LDR X2, [X26]
	0x039A6290 MOV X1, X20
	0x039A6294 MOV X3, X31
	0x039A6298 MOV X26, X0
	0x039A629C BL 0x2D27AA8
	0x039A62A0 STR X26, [X25 + 0x48]
	0x039A62A4 LDR X8, [X24]
	0x039A62A8 MOV X0, X25
	0x039A62AC LDR X1, [X8 + 0x40]
	0x039A62B0 BL 0x1C16E00
	0x039A62B4 CBZ X0, 0x39A6EC8
	0x039A62B8 LDR W8, [X24 + 0x18]
	0x039A62BC CMP W8, 0x2
	0x039A62C0 B.LS 0x39A6EC4
	0x039A62C4 STR X25, [X24 + 0x30]
	0x039A62C8 STR X24, [X23 + 0x48]
	0x039A62CC CBZ X22, 0x39A6EC0
	0x039A62D0 ADRP X8, 0x7AA000
	0x039A62D4 LDR X8, [X8 + 0x7A0]
	0x039A62D8 ADRP X24, 0x7AB000
	0x039A62DC MOV X0, X22
	0x039A62E0 MOV X1, X23
	0x039A62E4 LDR X2, [X8]
	0x039A62E8 LDR X24, [X24 + 0x908]
	0x039A62EC BL 0x2497EC8
	0x039A62F0 ADRP X8, 0x7AB000
	0x039A62F4 LDR X22, [X21 + 0x48]
	0x039A62F8 LDR X8, [X8 + 0x878]
	0x039A62FC LDR X0, [X8]
	0x039A6300 BL 0x1C16F10
	0x039A6304 MOVN W8, 0x0
	0x039A6308 MOV X1, X31
	0x039A630C MOV X23, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0xA3D000
	014 Move X24, 0x7AD000
	015 Move W8, [X20+2978]
	016 Move X24, [X24+1872]
	017 Move W21, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {75}
	025 Move X0, 0x7AD000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0x7AD000
	029 Move X0, [X0+1888]
	030 Call 0x1C17CF4
	031 Move X0, 0x758000
	032 Move X0, [X0+2368]
	033 Call 0x1C17CF4
	034 Move X0, 0x7AD000
	035 Move X0, [X0+1896]
	036 Call 0x1C17CF4
	037 Move X0, 0x7AD000
	038 Move X0, [X0+1904]
	039 Call 0x1C17CF4
	040 Move X0, 0x7AD000
	041 Move X0, [X0+1912]
	042 Call 0x1C17CF4
	043 Move X0, 0x7AC000
	044 Move X0, [X0+1952]
	045 Call 0x1C17CF4
	046 Move X0, 0x7AD000
	047 Move X0, [X0+1720]
	048 Call 0x1C17CF4
	049 Move X0, 0x7AD000
	050 Move X0, [X0+1160]
	051 Call 0x1C17CF4
	052 Move X0, 0x74F000
	053 Move X0, [X0+1728]
	054 Call 0x1C17CF4
	055 Move X0, 0x7AD000
	056 Move X0, [X0+1872]
	057 Call 0x1C17CF4
	058 Move X0, 0x7AD000
	059 Move X0, [X0+1920]
	060 Call 0x1C17CF4
	061 Move X0, 0x7AD000
	062 Move X0, [X0+1928]
	063 Call 0x1C17CF4
	064 Move X0, 0x779000
	065 Move X0, [X0+4040]
	066 Call 0x1C17CF4
	067 Move X0, 0x750000
	068 Move X0, [X0+1544]
	069 Call 0x1C17CF4
	070 Move X0, 0x750000
	071 Move X0, [X0+1552]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X20+2978], W8
	075 Move X0, [X24]
	076 Call 0x1C17F10
	077 Move X1, X31
	078 Move X20, X0
	079 Call Object..ctor, X0
	080 Compare X23, 0
	081 JumpIfEqual {390}
	082 Move X8, [X23]
	083 Move X24, 0x7AD000
	084 Move X25, 0x74F000
	085 Move X0, X23
	086 Move X9, [X8+424]
	087 Move X1, [X8+432]
	088 Move X24, [X24+1888]
	089 Move X25, [X25+1728]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X1, X0
	092 Move X0, X22
	093 Move X2, X31
	094 Call String.Concat, X0, X1
	095 Move X8, [X25]
	096 Move X25, [X24]
	097 Move X24, X0
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move X0, X25
	104 Move X1, X31
	105 Call Type.GetTypeFromHandle, X0
	106 Move X8, [X23]
	107 Move X1, X0
	108 Move W2, 1
	109 Move X0, X23
	110 Move X9, [X8+520]
	111 Move X3, [X8+528]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Compare X0, 0
	114 JumpIfEqual {390}
	115 Move X8, 0x7AD000
	116 Move X8, [X8+1880]
	117 Move X23, X0
	118 Move X25, [X8]
	119 Move X1, X25
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {392}
	123 Move X8, [X0+24]
	124 Compare X8, 0
	125 JumpIfEqual {136}
	126 Compare W8, 0
	127 JumpIfEqual {391}
	128 Move X8, [X0+32]
	129 Compare X8, 0
	130 JumpIfEqual {390}
	131 Move X1, [X8+16]
	132 Move X0, X22
	133 Move X2, X31
	134 Call String.Concat, X0, X1
	135 Move X24, X0
	136 Move X8, [X19+24]
	137 Compare X8, 0
	138 JumpIfEqual {390}
	139 Compare X20, 0
	140 JumpIfEqual {390}
	141 Move W8, [X8+24]
	142 Move X9, 0x7AD000
	143 Move X9, [X9+1720]
	144 Add W8, W8, W21
	145 Move [X20+16], W8
	146 Move X0, [X9]
	147 Call 0x1C17F10
	148 Move X21, X0
	149 Call Row..ctor, X0
	150 Compare X21, 0
	151 JumpIfEqual {390}
	152 Move X23, 0x7AD000
	153 Move X23, [X23+1160]
	154 Move [X21+40], X24
	155 Move X22, [X21+72]
	156 Move X0, [X23]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X23]
	162 Move X8, [X19+40]
	163 Compare X8, 0
	164 JumpIfEqual {390}
	165 Move X8, [X8+40]
	166 Compare X8, 0
	167 JumpIfEqual {390}
	168 Move X10, 0x7AC000
	169 Move X9, [X0+184]
	170 Call 0x3EB2704
	171 Return 
	172 Move W1, [X20+16]
	173 Move X0, X8
	174 Move X23, [X9+48]
	175 Move X2, [X10]
	176 Call List`1<Object>.get_Item, X0, X1
	177 Move X1, X0
	178 Move X0, X23
	179 Move X2, X31
	180 Call WidgetFactory.CreateVolumeParameterWidget, X0, X1, X2
	181 Compare X22, 0
	182 JumpIfEqual {390}
	183 Move X8, 0x7AB000
	184 Move X8, [X8+1952]
	185 Move X1, X0
	186 Move X0, X22
	187 Move X2, [X8]
	188 Call 0x2498EC8, X0, X1
	189 Move X29, [X19+48]
	190 Move [X19+32], X21
	191 Compare X29, 0
	192 JumpIfEqual {390}
	193 Move W8, [X29+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X27, 0x757000
	196 Move X28, 0x7AC000
	197 Move X27, [X27+2368]
	198 Move X28, [X28+1920]
	199 Move W26, W31
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add X8, X29, W26
	202 Move X22, [X8+32]
	203 Move X8, 0x7AC000
	204 Move X8, [X8+1928]
	205 Move X0, [X8]
	206 Call 0x1C17F10
	207 Move X1, X31
	208 Move X21, X0
	209 Call Object..ctor, X0
	210 Compare X21, 0
	211 JumpIfEqual {390}
	212 Move [X21+24], X20
	213 Compare X22, 0
	214 JumpIfEqual {390}
	215 Move X0, X22
	216 Move X1, X31
	217 Call Volume.HasInstantiatedProfile, X0
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {226}
	222 Move X0, X22
	223 Move X1, X31
	224 Call Volume.get_profile, X0
	225 Move X23, X0
	226 Move X23, [X22+48]
	227 Compare X23, 0
	228 JumpIfEqual {390}
	229 Move X8, 0x778000
	230 Move X1, [X19+56]
	231 Move X8, [X8+4040]
	232 Add X24, X21, 16
	233 Move X0, X23
	234 Move X2, X24
	235 Move X3, [X8]
	236 Call 0x22AD5F8, X0, X1, X2
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {256}
	241 Move X9, [X24]
	242 Compare X9, 0
	243 JumpIfEqual {390}
	244 Move X8, [X21+24]
	245 Compare X8, 0
	246 JumpIfEqual {390}
	247 Move X0, [X9+40]
	248 Compare X0, 0
	249 JumpIfEqual {390}
	250 Move W1, [X8+16]
	251 Move X8, 0x7AC000
	252 Move X8, [X8+1912]
	253 Move X2, [X8]
	254 Call List`1<Object>.get_Item, X0, X1
	255 Move X25, X0
	256 Move X25, X31
	257 Move X8, [X19+32]
	258 Compare X8, 0
	259 JumpIfEqual {390}
	260 Move X24, [X8+72]
	261 Move X0, X22
	262 Move X1, X31
	263 Call Object.get_name, X0
	264 Move X22, X0
	265 Move X0, X23
	266 Move X1, X31
	267 Call Object.get_name, X0
	268 Move X8, 0x74F000
	269 Move X8, [X8+1552]
	270 Move X2, X0
	271 Move X0, X22
	272 Move X4, X31
	273 Move X1, [X8]
	274 Move X8, 0x74F000
	275 Move X8, [X8+1544]
	276 Move X3, [X8]
	277 Call String.Concat, X0, X1, X2, X3
	278 Move X8, [X27]
	279 Move X22, X0
	280 Move X0, X8
	281 Call 0x1C17F10
	282 Move X2, [X28]
	283 Move X1, X21
	284 Move X3, X31
	285 Move X23, X0
	286 Call Func`1<Boolean>..ctor, X0, X1, X2
	287 Move X0, X22
	288 Move X1, X25
	289 Move X2, X23
	290 Call WidgetFactory.CreateVolumeParameterWidget, X0, X1, X2
	291 Compare X24, 0
	292 JumpIfEqual {390}
	293 Move X8, 0x7AB000
	294 Move X8, [X8+1952]
	295 Move X1, X0
	296 Move X0, X24
	297 Move X2, [X8]
	298 Call 0x2498EC8, X0, X1
	299 Move W8, [X29+24]
	300 Add W26, W26, 1
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move X8, [X19+32]
	303 Compare X8, 0
	304 JumpIfEqual {390}
	305 Move X22, 0x7AC000
	306 Move X22, [X22+1160]
	307 Move X21, [X8+72]
	308 Move X0, [X22]
	309 Move W9, [X0+224]
	310 Compare W9, 0
	311 JumpIfNotEqual {314}
	312 Call 0x1C17DFC
	313 Move X0, [X22]
	314 Move X8, [X19+64]
	315 Compare X8, 0
	316 JumpIfEqual {390}
	317 Move X8, [X8+40]
	318 Compare X8, 0
	319 JumpIfEqual {390}
	320 Move X9, [X0+184]
	321 Move W1, [X20+16]
	322 Move X0, X8
	323 Move X20, [X9+56]
	324 Move X9, 0x7AC000
	325 Move X9, [X9+1912]
	326 Move X2, [X9]
	327 Call List`1<Object>.get_Item, X0, X1
	328 Move X1, X0
	329 Move X0, X20
	330 Move X2, X31
	331 Call WidgetFactory.CreateVolumeParameterWidget, X0, X1, X2
	332 Compare X21, 0
	333 JumpIfEqual {390}
	334 Move X8, 0x7AB000
	335 Move X8, [X8+1952]
	336 Move X1, X0
	337 Move X0, X21
	338 Move X2, [X8]
	339 Call 0x2498EC8, X0, X1
	340 Move X0, [X19+24]
	341 Compare X0, 0
	342 JumpIfEqual {390}
	343 Move X9, 0x7AC000
	344 Move X9, [X9+1896]
	345 Move W10, [X0+28]
	346 Move X1, [X19+32]
	347 Move X8, [X0+16]
	348 Move X9, [X9]
	349 Add W10, W10, 1
	350 Move [X0+28], W10
	351 Compare X8, 0
	352 JumpIfEqual {390}
	353 NotImplemented "Instruction LDRSW not yet implemented."
	354 Move W11, [X8+24]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Move X20, [X31+80]
	357 Move X19, [X31+88]
	358 Move X22, [X31+64]
	359 Move X21, [X31+72]
	360 Move X24, [X31+48]
	361 Move X23, [X31+56]
	362 Move X26, [X31+32]
	363 Move X25, [X31+40]
	364 Move X28, [X31+16]
	365 Move X27, [X31+24]
	366 Add W9, W10, 1
	367 Add X8, X8, X10
	368 Move [X0+24], W9
	369 Move [X8+32], X1
	370 Move X29, [X31+96]
	371 Move X30, [X31+104]
	372 Return 
	373 Move X8, [X9+32]
	374 Move X20, [X31+80]
	375 Move X19, [X31+88]
	376 Move X22, [X31+64]
	377 Move X21, [X31+72]
	378 Move X24, [X31+48]
	379 Move X23, [X31+56]
	380 Move X8, [X8+192]
	381 Move X26, [X31+32]
	382 Move X25, [X31+40]
	383 Move X28, [X31+16]
	384 Move X27, [X31+24]
	385 Move X2, [X8+112]
	386 Move X29, [X31+96]
	387 Move X30, [X31+104]
	388 Call List`1<Object>.AddWithResize, X0, X1
	389 Return 
	390 Call 0x1C17F20
	391 Call 0x1C17F28
	392 Move X0, X23
	393 Move X1, X25
	394 Call 0x1C181E0

Method: System.Boolean <CreateVolumeTable>b__1()

Disassembly:
	0x039A6320 STR X8, [X23 + 0x28]
	0x039A6324 ADRP X8, 0x7AB000
	0x039A6328 LDR X8, [X8 + 0x880]
	0x039A632C LDR X0, [X8]
	0x039A6330 BL 0x1C16D6C
	0x039A6334 LDR X8, [X27]
	0x039A6338 MOV X24, X0
	0x039A633C MOV X0, X8
	0x039A6340 BL 0x1C16F10
	0x039A6344 MOV X25, X0
	0x039A6348 BL 0x39A2BC0
	0x039A634C CBZ X25, 0x39A6EC0
	0x039A6350 ADRP X29, 0x7AB000
	0x039A6354 LDR X29, [X29 + 0x8D0]
	0x039A6358 MOVZ W8, 0xCCCD
	0x039A635C MOVK W8, 0x3E4C0000
	0x039A6360 STR W8, [X25 + 0x50]
	0x039A6364 LDR X8, [X29]
	0x039A6368 ADRP X26, 0x7AB000
	0x039A636C STR X8, [X25 + 0x58]
	0x039A6370 LDR X0, [X28]
	0x039A6374 LDR X26, [X26 + 0x838]
	0x039A6378 BL 0x1C16F10
	0x039A637C LDR X2, [X26]
	0x039A6380 MOV X1, X20
	0x039A6384 MOV X3, X31
	0x039A6388 MOV X26, X0
	0x039A638C BL 0x2D27AA8
	0x039A6390 STR X26, [X25 + 0x48]
	0x039A6394 CBZ X24, 0x39A6EC0
	0x039A6398 LDR X8, [X24]
	0x039A639C MOV X0, X25
	0x039A63A0 LDR X1, [X8 + 0x40]
	0x039A63A4 BL 0x1C16E00
	0x039A63A8 CBZ X0, 0x39A6EC8
	0x039A63AC LDR W8, [X24 + 0x18]
	0x039A63B0 CBZ W8, 0x39A6EC4
	0x039A63B4 STR X25, [X24 + 0x20]
	0x039A63B8 LDR X0, [X27]
	0x039A63BC BL 0x1C16F10
	0x039A63C0 MOV X25, X0
	0x039A63C4 BL 0x39A2BC0
	0x039A63C8 CBZ X25, 0x39A6EC0
	0x039A63CC MOVZ W8, 0xCCCD
	0x039A63D0 MOVK W8, 0x3E4C0000
	0x039A63D4 STR W8, [X25 + 0x50]
	0x039A63D8 LDR X8, [X29]
	0x039A63DC ADRP X26, 0x7AB000
	0x039A63E0 STR X8, [X25 + 0x58]
	0x039A63E4 LDR X0, [X28]
	0x039A63E8 LDR X26, [X26 + 0x840]
	0x039A63EC BL 0x1C16F10
	0x039A63F0 LDR X2, [X26]
	0x039A63F4 MOV X1, X20
	0x039A63F8 MOV X3, X31
	0x039A63FC MOV X26, X0
	0x039A6400 BL 0x2D27AA8
	0x039A6404 STR X26, [X25 + 0x48]
	0x039A6408 LDR X8, [X24]
	0x039A640C MOV X0, X25
	0x039A6410 LDR X1, [X8 + 0x40]
	0x039A6414 BL 0x1C16E00
	0x039A6418 CBZ X0, 0x39A6EC8
	0x039A641C LDR W8, [X24 + 0x18]
	0x039A6420 CMP W8, 0x1
	0x039A6424 B.LS 0x39A6EC4
	0x039A6428 STR X25, [X24 + 0x28]
	0x039A642C LDR X0, [X27]
	0x039A6430 BL 0x1C16F10
	0x039A6434 MOV X25, X0
	0x039A6438 BL 0x39A2BC0
	0x039A643C CBZ X25, 0x39A6EC0
	0x039A6440 MOVZ W8, 0xCCCD
	0x039A6444 MOVK W8, 0x3E4C0000
	0x039A6448 STR W8, [X25 + 0x50]
	0x039A644C LDR X8, [X29]
	0x039A6450 ADRP X26, 0x7AB000
	0x039A6454 STR X8, [X25 + 0x58]
	0x039A6458 LDR X0, [X28]
	0x039A645C LDR X26, [X26 + 0x848]
	0x039A6460 BL 0x1C16F10
	0x039A6464 LDR X2, [X26]
	0x039A6468 MOV X1, X20
	0x039A646C MOV X3, X31
	0x039A6470 MOV X26, X0
	0x039A6474 BL 0x2D27AA8
	0x039A6478 STR X26, [X25 + 0x48]
	0x039A647C LDR X8, [X24]
	0x039A6480 MOV X0, X25
	0x039A6484 LDR X1, [X8 + 0x40]
	0x039A6488 BL 0x1C16E00
	0x039A648C CBZ X0, 0x39A6EC8
	0x039A6490 LDR W8, [X24 + 0x18]
	0x039A6494 CMP W8, 0x2
	0x039A6498 B.LS 0x39A6EC4
	0x039A649C STR X25, [X24 + 0x30]
	0x039A64A0 STR X24, [X23 + 0x48]
	0x039A64A4 CBZ X22, 0x39A6EC0
	0x039A64A8 ADRP X8, 0x7AA000
	0x039A64AC LDR X8, [X8 + 0x7A0]
	0x039A64B0 ADRP X24, 0x7AB000
	0x039A64B4 MOV X0, X22
	0x039A64B8 MOV X1, X23
	0x039A64BC LDR X2, [X8]
	0x039A64C0 LDR X24, [X24 + 0x8C8]
	0x039A64C4 BL 0x2497EC8
	0x039A64C8 ADRP X8, 0x7AB000
	0x039A64CC LDR X22, [X21 + 0x48]
	0x039A64D0 LDR X8, [X8 + 0x878]
	0x039A64D4 LDR X0, [X8]
	0x039A64D8 BL 0x1C16F10
	0x039A64DC MOVN W8, 0x0
	0x039A64E0 MOV X1, X31
	0x039A64E4 MOV X23, X0
	0x039A64E8 STR W8, [X0 + 0x50]
	0x039A64EC BL 0x33BDD8C
	0x039A64F0 LDR X8, [X24]
	0x039A64F4 MOVZ W1, 0x3
	0x039A64F8 STR X8, [X23 + 0x28]
	0x039A64FC ADRP X8, 0x7AB000
	0x039A6500 LDR X8, [X8 + 0x880]
	0x039A6504 LDR X0, [X8]
	0x039A6508 BL 0x1C16D6C
	0x039A650C LDR X8, [X27]
	0x039A6510 MOV X24, X0
	0x039A6514 MOV X0, X8
	0x039A6518 BL 0x1C16F10
	0x039A651C MOV X25, X0
	0x039A6520 BL 0x39A2BC0
	0x039A6524 CBZ X25, 0x39A6EC0
	0x039A6528 MOVZ W8, 0xCCCD
	0x039A652C MOVK W8, 0x3E4C0000
	0x039A6530 STR W8, [X25 + 0x50]
	0x039A6534 LDR X8, [X29]
	0x039A6538 ADRP X26, 0x7AB000
	0x039A653C STR X8, [X25 + 0x58]
	0x039A6540 LDR X0, [X28]
	0x039A6544 LDR X26, [X26 + 0x850]
	0x039A6548 BL 0x1C16F10
	0x039A654C LDR X2, [X26]
	0x039A6550 MOV X1, X20
	0x039A6554 MOV X3, X31
	0x039A6558 MOV X26, X0
	0x039A655C BL 0x2D27AA8
	0x039A6560 STR X26, [X25 + 0x48]
	0x039A6564 CBZ X24, 0x39A6EC0
	0x039A6568 LDR X8, [X24]
	0x039A656C MOV X0, X25
	0x039A6570 LDR X1, [X8 + 0x40]
	0x039A6574 BL 0x1C16E00
	0x039A6578 CBZ X0, 0x39A6EC8
	0x039A657C LDR W8, [X24 + 0x18]
	0x039A6580 CBZ W8, 0x39A6EC4
	0x039A6584 STR X25, [X24 + 0x20]
	0x039A6588 LDR X0, [X27]
	0x039A658C BL 0x1C16F10
	0x039A6590 MOV X25, X0
	0x039A6594 BL 0x39A2BC0
	0x039A6598 CBZ X25, 0x39A6EC0
	0x039A659C MOVZ W8, 0xCCCD
	0x039A65A0 MOVK W8, 0x3E4C0000
	0x039A65A4 STR W8, [X25 + 0x50]
	0x039A65A8 LDR X8, [X29]
	0x039A65AC ADRP X26, 0x7AB000
	0x039A65B0 STR X8, [X25 + 0x58]
	0x039A65B4 LDR X0, [X28]
	0x039A65B8 LDR X26, [X26 + 0x858]
	0x039A65BC BL 0x1C16F10
	0x039A65C0 LDR X2, [X26]
	0x039A65C4 MOV X1, X20
	0x039A65C8 MOV X3, X31
	0x039A65CC MOV X26, X0
	0x039A65D0 BL 0x2D27AA8
	0x039A65D4 STR X26, [X25 + 0x48]
	0x039A65D8 LDR X8, [X24]
	0x039A65DC MOV X0, X25
	0x039A65E0 LDR X1, [X8 + 0x40]
	0x039A65E4 BL 0x1C16E00
	0x039A65E8 CBZ X0, 0x39A6EC8
	0x039A65EC LDR W8, [X24 + 0x18]
	0x039A65F0 CMP W8, 0x1
	0x039A65F4 B.LS 0x39A6EC4
	0x039A65F8 STR X25, [X24 + 0x28]
	0x039A65FC LDR X0, [X27]
	0x039A6600 BL 0x1C16F10
	0x039A6604 MOV X25, X0
	0x039A6608 BL 0x39A2BC0
	0x039A660C CBZ X25, 0x39A6EC0
	0x039A6610 MOVZ W8, 0xCCCD
	0x039A6614 MOVK W8, 0x3E4C0000
	0x039A6618 STR W8, [X25 + 0x50]
	0x039A661C LDR X8, [X29]
	0x039A6620 ADRP X26, 0x7AB000
	0x039A6624 STR X8, [X25 + 0x58]
	0x039A6628 LDR X0, [X28]
	0x039A662C LDR X26, [X26 + 0x860]
	0x039A6630 BL 0x1C16F10
	0x039A6634 LDR X2, [X26]
	0x039A6638 MOV X1, X20
	0x039A663C MOV X3, X31
	0x039A6640 MOV X26, X0
	0x039A6644 BL 0x2D27AA8
	0x039A6648 STR X26, [X25 + 0x48]
	0x039A664C LDR X8, [X24]
	0x039A6650 MOV X0, X25

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA3C000
	010 Move W8, [X20+2979]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x7AB000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move X0, 0x779000
	020 Move X0, [X0+8]
	021 Call 0x1C17CF4
	022 Move X0, 0x7AC000
	023 Move X0, [X0+1688]
	024 Call 0x1C17CF4
	025 Move X0, 0x74E000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+2979], W8
	030 Move V8, [X19+72]
	031 Move X0, X31
	032 Call Time.get_deltaTime
	033 Move V1, [X19+76]
	034 Add S0, S8, S0
	035 Move [X19+72], S0
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move X8, [X19+16]
	038 Compare X8, 0
	039 JumpIfEqual {227}
	040 Move X20, [X8+16]
	041 Compare X20, 0
	042 JumpIfEqual {227}
	043 Move X24, 0x7AC000
	044 Move X8, [X20]
	045 Move X24, [X24+1688]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X24]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 2
	057 Move X0, X20
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 2
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, 0x74E000
	068 Move X8, [X8+1432]
	069 Move X20, X0
	070 Move X8, [X8]
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {216}
	084 Move X8, [X19+16]
	085 Compare X8, 0
	086 JumpIfEqual {227}
	087 Move X20, [X8+16]
	088 Compare X20, 0
	089 JumpIfEqual {227}
	090 Move X8, [X20]
	091 Move X1, [X24]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move W2, 11
	102 Move X0, X20
	103 Call 0x1C5D788
	104 Move W9, [X10]
	105 Add W9, W9, 11
	106 Add X8, X8, W9
	107 Add X0, X8, 312
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X20
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X8, [X19+16]
	113 Compare X8, 0
	114 JumpIfEqual {227}
	115 Move X21, [X8+16]
	116 Compare X21, 0
	117 JumpIfEqual {227}
	118 Move X8, [X21]
	119 Move X1, [X24]
	120 Move X20, X0
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move W2, 13
	131 Move X0, X21
	132 Call 0x1C5D788
	133 Move W9, [X10]
	134 Add W9, W9, 13
	135 Add X8, X8, W9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X2, [X0+8]
	139 Move X0, X21
	140 Move X1, X20
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {194}
	146 Compare X20, 0
	147 JumpIfEqual {227}
	148 Move X8, [X20+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X21, X31
	151 And X8, X8, 0
	152 Move X9, [X19+16]
	153 Compare X9, 0
	154 JumpIfEqual {227}
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X22, [X9+16]
	157 Compare X22, 0
	158 JumpIfEqual {227}
	159 Move X8, [X22]
	160 Add X9, X20, X21
	161 Move X23, [X9+32]
	162 Move X1, [X24]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move W2, 12
	173 Move X0, X22
	174 Call 0x1C5D788
	175 Move W9, [X10]
	176 Add W9, W9, 12
	177 Add X8, X8, W9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X2, [X0+8]
	181 Move X0, X22
	182 Move X1, X23
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X8, [X19+80]
	185 Compare X8, 0
	186 JumpIfEqual {227}
	187 Add X21, X21, 1
	188 And W2, W0, 1
	189 Move X0, X8
	190 Move W1, W21
	191 Call Table.SetColumnVisibility, X0, X1, X2
	192 Move W8, [X20+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, 0x779000
	195 Move X0, [X19+48]
	196 Move X8, [X8+8]
	197 Move X1, X20
	198 Move X2, [X8]
	199 Call Enumerable.SequenceEqual, X0, X1
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {216}
	204 Move [X19+48], X20
	205 Move X8, 0x7AB000
	206 Move X8, [X8+1912]
	207 Move X0, [X8]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Call DebugManager.get_instance
	213 Compare X0, 0
	214 JumpIfEqual {227}
	215 Call DebugManager.ReDrawOnScreenDebug, X0
	216 Move [X19+72], W31
	217 Move X20, [X31+48]
	218 Move X19, [X31+56]
	219 Move X22, [X31+32]
	220 Move X21, [X31+40]
	221 Move X24, [X31+16]
	222 Move X23, [X31+24]
	223 Move X30, [X31+8]
	224 Move W0, W31
	225 Move V8, [X31+64]
	226 Return X0
	227 Call 0x1C17F20
	228 Call 0x1C17F28

