Type: UnityEngine.Rendering.VolumeManager/<>c

Method: System.Void .cctor()

Disassembly:
	0x039F3808 MOV X20, X0
	0x039F380C TBNZ X8, 0x0, 0x39F3824
	0x039F3810 ADRP X0, 0x760000
	0x039F3814 LDR X0, [X0 + 0x940]
	0x039F3818 BL 0x1C16CF4
	0x039F381C MOVZ W8, 0x1
	0x039F3820 STRB W8, [X21 + 0xE92]
	0x039F3824 LDR X2, [X22]
	0x039F3828 AND W1, W19, 0x1
	0x039F382C MOV X0, X20
	0x039F3830 MOV V1.16B, V9.16B
	0x039F3834 MOV V2.16B, V8.16B
	0x039F3838 LDP X20, X19, [X31 + 0x30]
	0x039F383C LDP X22, X21, [X31 + 0x20]
	0x039F3840 LDR X30, [X31 + 0x18]
	0x039F3844 LDP D9, D8, [X31 + 0x8]
	0x039F3848 MOV V0.16B, V10.16B
	0x039F384C LDR V10, [X31], #0x40
	0x039F3850 B 0x284D328
	0x039F3854 STP D11, D10, [X31 - 0x50]!
	0x039F3858 STP D9, D8, [X31 + 0x10]
	0x039F385C STR X30, [X31 + 0x20]
	0x039F3860 STP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9EF000
	005 Move X20, 0x761000
	006 Move W8, [X19+3704]
	007 Move X20, [X20+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x761000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3704], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x039F3864 STP X20, X19, [X31 + 0x40]
	0x039F3868 ADRP X21, 0x9EE000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.String <FilterVolumeComponentTypes>b__12_0(System.ValueTuple`2<System.String, System.Type> i)

Disassembly:
	0x039F386C ADRP X22, 0x760000
	0x039F3870 LDRB W8, [X21 + 0xE93]

ISIL:
	001 Move X0, X1
	002 Return X0

Method: System.Boolean <ReloadBaseTypes>b__29_0(System.Type t)

Disassembly:
	0x039F3874 LDR X22, [X22 + 0x948]
	0x039F3878 MOV W19, W1
	0x039F387C MOV V8.16B, V3.16B
	0x039F3880 MOV V9.16B, V2.16B
	0x039F3884 MOV V10.16B, V1.16B
	0x039F3888 MOV V11.16B, V0.16B
	0x039F388C MOV X20, X0
	0x039F3890 TBNZ X8, 0x0, 0x39F38A8
	0x039F3894 ADRP X0, 0x760000
	0x039F3898 LDR X0, [X0 + 0x948]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X0, X1
	005 Move X1, X31
	006 Call Type.get_IsAbstract, X0
	007 NotImplemented "Instruction ORN not yet implemented."
	008 And W0, W8, 1
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Boolean <GetVolumes>b__42_0(UnityEngine.Rendering.Volume v)

Disassembly:
	0x039F389C BL 0x1C16CF4
	0x039F38A0 MOVZ W8, 0x1
	0x039F38A4 STRB W8, [X21 + 0xE93]
	0x039F38A8 LDR X2, [X22]
	0x039F38AC AND W1, W19, 0x1
	0x039F38B0 MOV X0, X20
	0x039F38B4 MOV V2.16B, V9.16B
	0x039F38B8 MOV V3.16B, V8.16B
	0x039F38BC LDP X20, X19, [X31 + 0x40]
	0x039F38C0 LDP X22, X21, [X31 + 0x30]
	0x039F38C4 LDR X30, [X31 + 0x20]
	0x039F38C8 LDP D9, D8, [X31 + 0x10]
	0x039F38CC MOV V0.16B, V11.16B
	0x039F38D0 MOV V1.16B, V10.16B
	0x039F38D4 LDP D11, D10, [X31], #0x50
	0x039F38D8 B 0x284DD04
	0x039F38DC LDR V16, [X31]
	0x039F38E0 MOV V4.S[1], V5.S[0]
	0x039F38E4 MOV V0.S[1], V1.S[0]
	0x039F38E8 MOV V4.S[2], V6.S[0]
	0x039F38EC MOV V0.S[2], V2.S[0]
	0x039F38F0 MOV V4.S[3], V7.S[0]
	0x039F38F4 MOV V0.S[3], V3.S[0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9EF000
	006 Move X21, 0x701000
	007 Move W8, [X20+3705]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x701000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3705], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object.op_Equality, X0, X1
	032 Return X0

Method: UnityEngine.Rendering.VolumeManager <.cctor>b__46_0()

Disassembly:
	0x039F38F8 FSUB V1.4S, V4.4S, V0.4S
	0x00000000 INVALID
	0x039F3900 FADD V0.4S, V0.4S, V1.4S
	0x039F3904 STUR V0, [X0 + 0x14]
	0x039F3908 RET
	0x039F390C STP D11, D10, [X31 - 0x50]!
	0x039F3910 STP D9, D8, [X31 + 0x10]
	0x039F3914 STR X30, [X31 + 0x20]
	0x039F3918 STP X22, X21, [X31 + 0x30]
	0x039F391C STP X20, X19, [X31 + 0x40]
	0x039F3920 ADRP X21, 0x9EE000
	0x039F3924 ADRP X22, 0x760000
	0x039F3928 LDRB W8, [X21 + 0xE94]
	0x039F392C LDR X22, [X22 + 0x948]
	0x039F3930 MOV W19, W1
	0x039F3934 MOV V8.16B, V3.16B
	0x039F3938 MOV V9.16B, V2.16B
	0x039F393C MOV V10.16B, V1.16B
	0x039F3940 MOV V11.16B, V0.16B
	0x039F3944 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9EF000
	005 Move X20, 0x72B000
	006 Move W8, [X19+3706]
	007 Move X20, [X20+4032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x72B000
	013 Move X0, [X0+4032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3706], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call VolumeManager..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

