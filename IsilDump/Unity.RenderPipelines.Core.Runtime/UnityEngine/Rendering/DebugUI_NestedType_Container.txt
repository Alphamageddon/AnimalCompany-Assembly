Type: UnityEngine.Rendering.DebugUI/Container

Method: System.Boolean get_hideDisplayName()

Disassembly:
	0x039AE98C LDR X30, [X31 + 0x10]
	0x039AE990 LDP D9, D8, [X31], #0x40
	0x039AE994 RET
	0x039AE998 BL 0x1C16F20
	0x039AE99C MOV X0, X20
	0x039AE9A0 BL 0x1C171E0
	0x039AE9A4 FSUB S0, S0, S1
	0x039AE9A8 FSUB S1, S2, S1
	0x039AE9AC FDIV S0, S0, S1
	0x039AE9B0 RET
	0x039AE9B4 STR X30, [X31 - 0x10]!
	0x039AE9B8 LDR X8, [X0 + 0x48]
	0x039AE9BC CBZ X8, 0x39AE9CC
	0x039AE9C0 LDR W0, [X8 + 0x18]
	0x039AE9C4 LDR X30, [X31], #0x10
	0x039AE9C8 RET
	0x039AE9CC BL 0x1C16F20
	0x039AE9D0 STP X30, X21, [X31 - 0x20]!
	0x039AE9D4 STP X20, X19, [X31 + 0x10]
	0x039AE9D8 ADRP X21, 0xA33000
	0x039AE9DC ADRP X20, 0x7A3000
	0x039AE9E0 LDRB W8, [X21 + 0xC0C]
	0x039AE9E4 LDR X20, [X20 + 0xC30]
	0x039AE9E8 MOV X19, X0
	0x039AE9EC TBNZ X8, 0x0, 0x39AEA04
	0x039AE9F0 ADRP X0, 0x7A3000
	0x039AE9F4 LDR X0, [X0 + 0xC30]
	0x039AE9F8 BL 0x1C16CF4
	0x039AE9FC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA34000
	005 Move W8, [X20+3063]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x747000
	012 Move X0, [X0+2568]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3063], W8
	016 Move X0, [X19+40]
	017 Move X1, X31
	018 Call String.IsNullOrEmpty, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {28}
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move W0, 1
	026 Move X30, [X31+32]
	027 Return X0
	028 Move X0, [X19+40]
	029 Compare X0, 0
	030 JumpIfEqual {40}
	031 Move X8, 0x747000
	032 Move X8, [X8+2568]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X2, X31
	036 Move X1, [X8]
	037 Move X30, [X31+32]
	038 Call String.StartsWith, X0, X1
	039 Return X0
	040 Call 0x1C17F20

Method: UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> get_children()

Disassembly:
	0x039AEA00 STRB W8, [X21 + 0xC0C]
	0x039AEA04 LDR X0, [X19 + 0x48]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_children(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> value)

Disassembly:
	0x039AEA08 LDR X1, [X20]
	0x039AEA0C BL 0x21C4D84

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: UnityEngine.Rendering.DebugUI/Panel get_panel()

Disassembly:
	0x039AEA10 CBZ X0, 0x39AEA1C
	0x039AEA14 LDR V0, [X0 + 0x50]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_panel(UnityEngine.Rendering.DebugUI/Panel value)

Disassembly:
	0x039AEA18 B 0x39AEA24
	0x039AEA1C ADRP X8, 0xFFFFFFFFFD13C000
	0x039AEA20 LDR V0, [X8 + 0xBC]
	0x039AEA24 LDP X20, X19, [X31 + 0x10]
	0x039AEA28 LDP X30, X21, [X31], #0x20
	0x039AEA2C RET
	0x039AEA30 LDR X0, [X0 + 0x60]
	0x039AEA34 RET
	0x039AEA38 STR X1, [X0 + 0x60]
	0x039AEA3C RET
	0x039AEA40 LDR X8, [X0 + 0x60]
	0x039AEA44 CBZ X8, 0x39AEA50
	0x039AEA48 LDR W0, [X8 + 0x18]
	0x039AEA4C RET
	0x039AEA50 MOV W0, W31
	0x039AEA54 RET
	0x039AEA58 STR X30, [X31 - 0x10]!
	0x039AEA5C LDR X8, [X0 + 0x60]
	0x039AEA60 CBZ X8, 0x39AEA90
	0x039AEA64 LDR W9, [X8 + 0x18]
	0x039AEA68 CMP W9, W1
	0x039AEA6C B.LS 0x39AEA94
	0x039AEA70 ADD X8, X8, W1, 0x3, SXTW
	0x039AEA74 LDR X8, [X8 + 0x20]
	0x039AEA78 CBZ X8, 0x39AEA90
	0x039AEA7C LDR X2, [X8 + 0x18]
	0x039AEA80 LDR X0, [X8 + 0x40]
	0x039AEA84 LDR X1, [X8 + 0x28]
	0x039AEA88 LDR X30, [X31], #0x10
	0x039AEA8C BR X2
	0x039AEA90 BL 0x1C16F20
	0x039AEA94 BL 0x1C16F28
	0x039AEA98 B 0x39A2C94
	0x039AEA9C STR X30, [X31 - 0x20]!
	0x039AEAA0 STP X20, X19, [X31 + 0x10]
	0x039AEAA4 LDR X8, [X0 + 0x60]
	0x039AEAA8 MOV X20, X0
	0x039AEAAC MOV W19, W1
	0x039AEAB0 CBZ X8, 0x39AEACC
	0x039AEAB4 LDR X9, [X8 + 0x18]
	0x039AEAB8 LDR X0, [X8 + 0x40]
	0x039AEABC LDR X1, [X8 + 0x28]
	0x039AEAC0 BLR X9
	0x039AEAC4 CMP W0, W19
	0x039AEAC8 CSEL W19, W19, W0, LT
	0x039AEACC LDR X8, [X20 + 0x68]
	0x039AEAD0 CBZ X8, 0x39AEAEC
	0x039AEAD4 LDR X9, [X8 + 0x18]
	0x039AEAD8 LDR X0, [X8 + 0x40]
	0x039AEADC LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xA34000
	008 Move W8, [X21+3064]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x7A4000
	016 Move X0, [X0+3008]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A4000
	019 Move X0, [X0+3016]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3064], W8
	023 Compare X19, 0
	024 JumpIfEqual {30}
	025 Move W8, [X19+16]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 16
	028 Compare TEMP, 16
	029 JumpIfEqual {58}
	030 Move X0, [X20+72]
	031 Move [X20+16], X19
	032 Compare X0, 0
	033 JumpIfEqual {65}
	034 Move X8, 0x7A4000
	035 Move X8, [X8+3008]
	036 Move X1, [X8]
	037 Call 0x2498BA8, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X23, 0x7A4000
	040 Move X23, [X23+3016]
	041 Move W21, W0
	042 Move W22, W31
	043 Move X0, [X20+72]
	044 Compare X0, 0
	045 JumpIfEqual {65}
	046 Move X2, [X23]
	047 Move W1, W22
	048 Call 0x2498990, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {65}
	051 Move X8, [X0]
	052 Move X1, X19
	053 Move X9, [X8+392]
	054 Move X2, [X8+400]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Add W22, W22, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039AEAE0 BLR X9
	0x039AEAE4 CMP W19, W0
	0x039AEAE8 CSEL W19, W19, W0, LT
	0x039AEAEC MOV W0, W19
	0x039AEAF0 LDP X20, X19, [X31 + 0x10]
	0x039AEAF4 LDR X30, [X31], #0x20
	0x039AEAF8 RET
	0x039AEAFC STP X30, X21, [X31 - 0x20]!
	0x039AEB00 STP X20, X19, [X31 + 0x10]
	0x039AEB04 ADRP X21, 0xA33000
	0x039AEB08 ADRP X20, 0x7A3000
	0x039AEB0C LDRB W8, [X21 + 0xC0E]
	0x039AEB10 LDR X20, [X20 + 0xC38]
	0x039AEB14 MOV X19, X0
	0x039AEB18 TBNZ X8, 0x0, 0x39AEB30
	0x039AEB1C ADRP X0, 0x7A3000
	0x039AEB20 LDR X0, [X0 + 0xC38]
	0x039AEB24 BL 0x1C16CF4
	0x039AEB28 MOVZ W8, 0x1
	0x039AEB2C STRB W8, [X21 + 0xC0E]
	0x039AEB30 ADRP X8, 0xFFFFFFFFFD140000
	0x039AEB34 LDR V0, [X8 + 0x410]
	0x039AEB38 MOV X0, X19
	0x039AEB3C STR D0, [X19 + 0x70]
	0x039AEB40 LDR X1, [X20]
	0x039AEB44 LDP X20, X19, [X31 + 0x10]
	0x039AEB48 LDP X30, X21, [X31], #0x20
	0x039AEB4C B 0x2D19FAC
	0x039AEB50 STR X30, [X31 - 0x20]!
	0x039AEB54 STP X20, X19, [X31 + 0x10]
	0x039AEB58 LDR X8, [X0 + 0x60]
	0x039AEB5C MOV X20, X0
	0x039AEB60 MOV W19, W1
	0x039AEB64 CBZ X8, 0x39AEB80
	0x039AEB68 LDR X9, [X8 + 0x18]
	0x039AEB6C LDR X0, [X8 + 0x40]
	0x039AEB70 LDR X1, [X8 + 0x28]
	0x039AEB74 BLR X9
	0x039AEB78 CMP W0, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA34000
	008 Move X23, 0x748000
	009 Move X22, 0x7A4000
	010 Move X21, 0x7A4000
	011 Move W8, [X20+3065]
	012 Move X23, [X23+632]
	013 Move X22, [X22+3024]
	014 Move X21, [X21+3032]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x7A4000
	021 Move X0, [X0+3032]
	022 Call 0x1C17CF4
	023 Move X0, 0x7A4000
	024 Move X0, [X0+3024]
	025 Call 0x1C17CF4
	026 Move X0, 0x748000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3065], W8
	031 Move X8, [X23]
	032 Move X0, [X22]
	033 Move X8, [X8+184]
	034 Move X20, [X8]
	035 Call 0x1C17F10
	036 Move X1, [X21]
	037 Move X21, X0
	038 Call 0x2498C38, X0
	039 Move X0, X19
	040 Move X1, X20
	041 Move X2, X21
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]

Method: System.Void .ctor(System.String id)

Disassembly:
	0x039AED50 RET
	0x039AED54 STR X30, [X31 - 0x10]!
	0x039AED58 LDR X8, [X0 + 0x80]
	0x039AED5C CBZ X8, 0x39AED74
	0x039AED60 LDR X2, [X8 + 0x18]
	0x039AED64 LDR X0, [X8 + 0x40]
	0x039AED68 LDR X1, [X8 + 0x28]
	0x039AED6C LDR X30, [X31], #0x10
	0x039AED70 BR X2
	0x039AED74 BL 0x1C16F20
	0x039AED78 STR X30, [X31 - 0x10]!
	0x039AED7C LDR X8, [X0 + 0x88]
	0x039AED80 CBZ X8, 0x39AED98
	0x039AED84 LDR X3, [X8 + 0x18]
	0x039AED88 LDR X0, [X8 + 0x40]
	0x039AED8C LDR X2, [X8 + 0x28]
	0x039AED90 LDR X30, [X31], #0x10
	0x039AED94 BR X3
	0x039AED98 BL 0x1C16F20
	0x039AED9C STR X30, [X31 - 0x30]!
	0x039AEDA0 STP X22, X21, [X31 + 0x10]
	0x039AEDA4 STP X20, X19, [X31 + 0x20]
	0x039AEDA8 ADRP X21, 0xA33000
	0x039AEDAC ADRP X22, 0x7A3000
	0x039AEDB0 LDRB W8, [X21 + 0xC12]
	0x039AEDB4 LDR X22, [X22 + 0xC50]
	0x039AEDB8 MOV X20, X1
	0x039AEDBC MOV X19, X0
	0x039AEDC0 TBNZ X8, 0x0, 0x39AEDD8
	0x039AEDC4 ADRP X0, 0x7A3000
	0x039AEDC8 LDR X0, [X0 + 0xC50]
	0x039AEDCC BL 0x1C16CF4
	0x039AEDD0 MOVZ W8, 0x1
	0x039AEDD4 STRB W8, [X21 + 0xC12]
	0x039AEDD8 LDR X2, [X22]
	0x039AEDDC MOV X0, X19
	0x039AEDE0 MOV X1, X20
	0x039AEDE4 BL 0x2BA98A8
	0x039AEDE8 MOV X0, X19
	0x039AEDEC LDP X20, X19, [X31 + 0x20]
	0x039AEDF0 LDP X22, X21, [X31 + 0x10]
	0x039AEDF4 LDR X30, [X31], #0x30
	0x039AEDF8 B 0x39AEDFC
	0x039AEDFC STP X30, X27, [X31 - 0x50]!
	0x039AEE00 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xA34000
	009 Move X24, 0x747000
	010 Move X22, 0x7A4000
	011 Move X21, 0x7A4000
	012 Move W8, [X23+3066]
	013 Move X24, [X24+2568]
	014 Move X22, [X22+3024]
	015 Move X21, [X21+3032]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x7A4000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A4000
	026 Move X0, [X0+3024]
	027 Call 0x1C17CF4
	028 Move X0, 0x747000
	029 Move X0, [X0+2568]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+3066], W8
	033 Move X0, [X24]
	034 Move X1, X20
	035 Move X2, X31
	036 Call String.Concat, X0, X1
	037 Move X8, [X22]
	038 Move X20, X0
	039 Move X0, X8
	040 Call 0x1C17F10
	041 Move X1, [X21]
	042 Move X21, X0
	043 Call 0x2498C38, X0
	044 Move X0, X19
	045 Move X1, X20
	046 Move X2, X21
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Call Container..ctor, X0, X1, X2
	055 Return 

Method: System.Void .ctor(System.String displayName, UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> children)

Disassembly:
	0x039AEB7C CSEL W19, W19, W0, LT
	0x039AEB80 LDR X8, [X20 + 0x68]
	0x039AEB84 CBZ X8, 0x39AEBA0
	0x039AEB88 LDR X9, [X8 + 0x18]
	0x039AEB8C LDR X0, [X8 + 0x40]
	0x039AEB90 LDR X1, [X8 + 0x28]
	0x039AEB94 BLR X9
	0x039AEB98 CMP W19, W0
	0x039AEB9C CSEL W19, W19, W0, LT
	0x039AEBA0 MOV W0, W19
	0x039AEBA4 LDP X20, X19, [X31 + 0x10]
	0x039AEBA8 LDR X30, [X31], #0x20
	0x039AEBAC RET
	0x039AEBB0 STP X30, X21, [X31 - 0x20]!
	0x039AEBB4 STP X20, X19, [X31 + 0x10]
	0x039AEBB8 ADRP X21, 0xA33000
	0x039AEBBC ADRP X20, 0x7A3000
	0x039AEBC0 LDRB W8, [X21 + 0xC0F]
	0x039AEBC4 LDR X20, [X20 + 0xC40]
	0x039AEBC8 MOV X19, X0
	0x039AEBCC TBNZ X8, 0x0, 0x39AEBE4
	0x039AEBD0 ADRP X0, 0x7A3000
	0x039AEBD4 LDR X0, [X0 + 0xC40]
	0x039AEBD8 BL 0x1C16CF4
	0x039AEBDC MOVZ W8, 0x1
	0x039AEBE0 STRB W8, [X21 + 0xC0F]
	0x039AEBE4 ADRP X8, 0xFFFFFFFFFD140000
	0x039AEBE8 LDR V0, [X8 + 0x410]
	0x039AEBEC MOV X0, X19
	0x039AEBF0 STR D0, [X19 + 0x70]
	0x039AEBF4 LDR X1, [X20]
	0x039AEBF8 LDP X20, X19, [X31 + 0x10]
	0x039AEBFC LDP X30, X21, [X31], #0x20
	0x039AEC00 B 0x2D1A698
	0x039AEC04 STR D8, [X31 - 0x20]!
	0x039AEC08 STP X30, X19, [X31 + 0x10]
	0x039AEC0C LDR X8, [X0 + 0x60]
	0x039AEC10 MOV X19, X0
	0x039AEC14 MOV V8.16B, V0.16B
	0x039AEC18 CBZ X8, 0x39AEC34
	0x039AEC1C LDR X9, [X8 + 0x18]
	0x039AEC20 LDR X0, [X8 + 0x40]
	0x039AEC24 LDR X1, [X8 + 0x28]
	0x039AEC28 BLR X9
	0x039AEC2C FCMP S0, S8
	0x039AEC30 FCSEL S8, S8, S0, MI
	0x039AEC34 LDR X8, [X19 + 0x68]
	0x039AEC38 CBZ X8, 0x39AEC54
	0x039AEC3C LDR X9, [X8 + 0x18]
	0x039AEC40 LDR X0, [X8 + 0x40]
	0x039AEC44 LDR X1, [X8 + 0x28]
	0x039AEC48 BLR X9
	0x039AEC4C FCMP S8, S0
	0x039AEC50 FCSEL S8, S8, S0, MI
	0x039AEC54 LDP X30, X19, [X31 + 0x10]
	0x039AEC58 MOV V0.16B, V8.16B
	0x039AEC5C LDR V8, [X31], #0x20
	0x039AEC60 RET
	0x039AEC64 STP X30, X21, [X31 - 0x20]!
	0x039AEC68 STP X20, X19, [X31 + 0x10]
	0x039AEC6C ADRP X21, 0xA33000
	0x039AEC70 ADRP X20, 0x7A3000
	0x039AEC74 LDRB W8, [X21 + 0xC10]
	0x039AEC78 LDR X20, [X20 + 0xC48]
	0x039AEC7C MOV X19, X0
	0x039AEC80 TBNZ X8, 0x0, 0x39AEC98
	0x039AEC84 ADRP X0, 0x7A3000
	0x039AEC88 LDR X0, [X0 + 0xC48]
	0x039AEC8C BL 0x1C16CF4
	0x039AEC90 MOVZ W8, 0x1
	0x039AEC94 STRB W8, [X21 + 0xC10]
	0x039AEC98 ADRP X8, 0xFFFFFFFFFD13F000
	0x039AEC9C LDR V0, [X8 + 0xFA8]
	0x039AECA0 MOVZ W8, 0x3
	0x039AECA4 STR W8, [X19 + 0x78]
	0x039AECA8 MOV X0, X19
	0x039AECAC STR D0, [X19 + 0x70]
	0x039AECB0 LDR X1, [X20]
	0x039AECB4 LDP X20, X19, [X31 + 0x10]
	0x039AECB8 LDP X30, X21, [X31], #0x20
	0x039AECBC B 0x2D1A424
	0x039AECC0 STR X30, [X31 - 0x20]!
	0x039AECC4 STP X20, X19, [X31 + 0x10]
	0x039AECC8 ADRP X20, 0xA33000
	0x039AECCC LDRB W8, [X20 + 0xC11]
	0x039AECD0 MOV X19, X0
	0x039AECD4 TBNZ X8, 0x0, 0x39AECEC
	0x039AECD8 ADRP X0, 0x747000
	0x039AECDC LDR X0, [X0 + 0x9C8]
	0x039AECE0 BL 0x1C16CF4
	0x039AECE4 MOVZ W8, 0x1
	0x039AECE8 STRB W8, [X20 + 0xC11]
	0x039AECEC LDR X0, [X19 + 0x78]
	0x039AECF0 CBNZ X0, 0x39AED28
	0x039AECF4 LDR X8, [X19 + 0x60]
	0x039AECF8 CBZ X8, 0x39AED04
	0x039AECFC LDR W1, [X8 + 0x18]
	0x039AED00 B 0x39AED08
	0x039AED04 MOV W1, W31
	0x039AED08 MOV W0, W31
	0x039AED0C MOV X2, X31
	0x039AED10 BL 0x35DED78
	0x039AED14 ADRP X8, 0x747000
	0x039AED18 LDR X8, [X8 + 0x9C8]
	0x039AED1C LDR X1, [X8]
	0x039AED20 BL 0x21D54D4
	0x039AED24 STR X0, [X19 + 0x78]
	0x039AED28 LDP X20, X19, [X31 + 0x10]
	0x039AED2C LDR X30, [X31], #0x20
	0x039AED30 RET
	0x039AED34 LDR X0, [X0 + 0x80]
	0x039AED38 RET
	0x039AED3C STR X1, [X0 + 0x80]
	0x039AED40 RET
	0x039AED44 LDR X0, [X0 + 0x88]
	0x039AED48 RET
	0x039AED4C STR X1, [X0 + 0x88]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xA34000
	012 Move X22, 0x7A4000
	013 Move W8, [X23+3067]
	014 Move X22, [X22+3040]
	015 Move X20, X2
	016 Move X21, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x7A4000
	023 Move X0, [X0+3048]
	024 Call 0x1C17CF4
	025 Move X0, 0x7A4000
	026 Move X0, [X0+3056]
	027 Call 0x1C17CF4
	028 Move X0, 0x7A4000
	029 Move X0, [X0+3040]
	030 Call 0x1C17CF4
	031 Move X0, 0x7A4000
	032 Move X0, [X0+3064]
	033 Call 0x1C17CF4
	034 Move X0, 0x7A4000
	035 Move X0, [X0+3072]
	036 Call 0x1C17CF4
	037 Move X0, 0x7A4000
	038 Move X0, [X0+3008]
	039 Call 0x1C17CF4
	040 Move X0, 0x7A4000
	041 Move X0, [X0+3016]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+3067], W8
	045 Move X0, X19
	046 Move X1, X31
	047 Call Object..ctor, X0
	048 Move [X19+40], X21
	049 Move [X19+72], X20
	050 Move X0, [X22]
	051 Call 0x1C17F10
	052 Move X8, [X19]
	053 Move X1, X19
	054 Move X3, X31
	055 Move X21, X0
	056 Move X2, [X8+576]
	057 Call 0x2EF2FC8, X0, X1, X2
	058 Compare X20, 0
	059 JumpIfEqual {122}
	060 Move X8, 0x7A4000
	061 Move X8, [X8+3064]
	062 Move X23, 0x7A4000
	063 Move X0, X20
	064 Move X1, X21
	065 Move X2, [X8]
	066 Move X23, [X23+3072]
	067 Call 0x24986E0, X0, X1
	068 Move X0, [X22]
	069 Call 0x1C17F10
	070 Move X8, [X19]
	071 Move X1, X19
	072 Move X3, X31
	073 Move X21, X0
	074 Move X2, [X8+592]
	075 Call 0x2EF2FC8, X0, X1, X2
	076 Move X2, [X23]
	077 Move X0, X20
	078 Move X1, X21
	079 Call 0x2498838, X0, X1
	080 Move X0, [X19+72]
	081 Compare X0, 0
	082 JumpIfEqual {122}
	083 Move X24, 0x7A4000
	084 Move X25, 0x7A4000
	085 Move X26, 0x7A4000
	086 Move X27, 0x7A4000
	087 Move X24, [X24+3008]
	088 Move X25, [X25+3016]
	089 Move X26, [X26+3056]
	090 Move X27, [X27+3048]
	091 Move W20, W31
	092 Move X1, [X24]
	093 Call 0x2498BA8, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X21, [X19+72]
	096 Compare X21, 0
	097 JumpIfEqual {122}
	098 Move X2, [X25]
	099 Move X0, X21
	100 Move W1, W20
	101 Call 0x2498990, X0, X1
	102 Move X8, [X26]
	103 Move X22, X0
	104 Move X0, X8
	105 Call 0x1C17F10
	106 Move X3, [X27]
	107 Move W1, W20
	108 Move X2, X22
	109 Move X23, X0
	110 Call 0x2EF2E0C, X0, X1, X2
	111 Move X8, [X19]
	112 Move X0, X19
	113 Move X1, X21
	114 Move X2, X23
	115 Move X9, [X8+568]
	116 Move X3, [X8+576]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X0, [X19+72]
	119 Add W20, W20, 1
	120 Compare X0, 0
	121 JumpIfNotEqual {92}
	122 Call 0x1C17F20
	123 Move X20, [X31+64]
	124 Move X19, [X31+72]
	125 Move X22, [X31+48]
	126 Move X21, [X31+56]
	127 Move X24, [X31+32]
	128 Move X23, [X31+40]
	129 Move X26, [X31+16]
	130 Move X25, [X31+24]
	131 Move X30, [X31+80]
	132 Move X27, [X31+88]
	133 Return 

Method: System.Void GenerateQueryPath()

Disassembly:
	0x039AEE0C STP X20, X19, [X31 + 0x40]
	0x039AEE10 ADRP X20, 0xA33000
	0x039AEE14 ADRP X23, 0x7A3000
	0x039AEE18 LDRB W8, [X20 + 0xC13]
	0x039AEE1C LDR X23, [X23 + 0xC58]
	0x039AEE20 MOV X19, X0
	0x039AEE24 TBNZ X8, 0x0, 0x39AEE90
	0x039AEE28 ADRP X0, 0x746000
	0x039AEE2C LDR X0, [X0 + 0x58]
	0x039AEE30 BL 0x1C16CF4
	0x039AEE34 ADRP X0, 0x746000
	0x039AEE38 LDR X0, [X0 + 0xBF0]
	0x039AEE3C BL 0x1C16CF4
	0x039AEE40 ADRP X0, 0x7A3000
	0x039AEE44 LDR X0, [X0 + 0xC60]
	0x039AEE48 BL 0x1C16CF4
	0x039AEE4C ADRP X0, 0x7A3000
	0x039AEE50 LDR X0, [X0 + 0xC68]
	0x039AEE54 BL 0x1C16CF4
	0x039AEE58 ADRP X0, 0x7A3000
	0x039AEE5C LDR X0, [X0 + 0xC70]
	0x039AEE60 BL 0x1C16CF4
	0x039AEE64 ADRP X0, 0x746000
	0x039AEE68 LDR X0, [X0 + 0xE58]
	0x039AEE6C BL 0x1C16CF4
	0x039AEE70 ADRP X0, 0x7A3000
	0x039AEE74 LDR X0, [X0 + 0xC78]
	0x039AEE78 BL 0x1C16CF4
	0x039AEE7C ADRP X0, 0x7A3000
	0x039AEE80 LDR X0, [X0 + 0xC58]
	0x039AEE84 BL 0x1C16CF4
	0x039AEE88 MOVZ W8, 0x1
	0x039AEE8C STRB W8, [X20 + 0xC13]
	0x039AEE90 LDR X0, [X23]
	0x039AEE94 LDR X20, [X19 + 0x60]
	0x039AEE98 LDR W8, [X0 + 0xE0]
	0x039AEE9C CBNZ W8, 0x39AEEA8
	0x039AEEA0 BL 0x1C16DFC
	0x039AEEA4 LDR X0, [X23]
	0x039AEEA8 LDR X8, [X0 + 0xB8]
	0x039AEEAC ADRP X27, 0x7A3000
	0x039AEEB0 ADRP X26, 0x746000
	0x039AEEB4 ADRP X25, 0x746000
	0x039AEEB8 ADRP X24, 0x746000
	0x039AEEBC LDR X21, [X8 + 0x8]
	0x039AEEC0 LDR X27, [X27 + 0xC68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xA34000
	007 Move W8, [X20+3068]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x7A4000
	014 Move X0, [X0+3008]
	015 Call 0x1C17CF4
	016 Move X0, 0x7A4000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3068], W8
	021 Move X0, X19
	022 Call Widget.GenerateQueryPath, X0
	023 Move X0, [X19+72]
	024 Compare X0, 0
	025 JumpIfEqual {55}
	026 Move X8, 0x7A4000
	027 Move X8, [X8+3008]
	028 Move X1, [X8]
	029 Call 0x2498BA8, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, 0x7A4000
	032 Move X22, [X22+3016]
	033 Move W20, W0
	034 Move W21, W31
	035 Move X0, [X19+72]
	036 Compare X0, 0
	037 JumpIfEqual {55}
	038 Move X2, [X22]
	039 Move W1, W21
	040 Call 0x2498990, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {55}
	043 Move X8, [X0]
	044 Move X9, [X8+488]
	045 Move X1, [X8+496]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Add W21, W21, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return 
	055 Call 0x1C17F20

Method: System.Void OnItemAdded(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> sender, UnityEngine.Rendering.ListChangedEventArgs`1<UnityEngine.Rendering.DebugUI/Widget> e)

Disassembly:
	0x039AEFA8 LDR X2, [X25]
	0x039AEFAC ADD W21, W21, 0x1
	0x039AEFB0 B 0x39AEF84
	0x039AEFB4 LDR X9, [X19 + 0x70]
	0x039AEFB8 MOV X22, X23
	0x039AEFBC CBZ X9, 0x39AF000
	0x039AEFC0 LDR W8, [X9 + 0x18]
	0x039AEFC4 CMP X24, X8
	0x039AEFC8 B.CS 0x39AF004
	0x039AEFCC ADD X9, X9, X24, 0x2, LSL
	0x039AEFD0 ADD X24, X24, 0x1
	0x039AEFD4 ADD W10, W21, 0x1
	0x039AEFD8 CMP X24, W8, SXTW
	0x039AEFDC STR W21, [X9 + 0x20]
	0x039AEFE0 MOV W21, W10
	0x039AEFE4 B.LT 0x39AEF80
	0x039AEFE8 LDP X20, X19, [X31 + 0x40]
	0x039AEFEC LDP X22, X21, [X31 + 0x30]
	0x039AEFF0 LDP X24, X23, [X31 + 0x20]
	0x039AEFF4 LDP X26, X25, [X31 + 0x10]
	0x039AEFF8 LDP X30, X27, [X31], #0x50
	0x039AEFFC RET
	0x039AF000 BL 0x1C16F20
	0x039AF004 BL 0x1C16F28
	0x039AF008 STR X30, [X31 - 0x30]!
	0x039AF00C STP X22, X21, [X31 + 0x10]
	0x039AF010 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X2, 0
	005 JumpIfEqual {37}
	006 Move X19, X0
	007 Move X0, [X2+24]
	008 Move X20, X2
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X8, [X0]
	012 Move X1, [X19+16]
	013 Move X9, [X8+392]
	014 Move X2, [X8+400]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X20+24]
	017 Compare X0, 0
	018 JumpIfEqual {37}
	019 Move X8, [X0]
	020 Move X1, X19
	021 Move X9, [X8+424]
	022 Move X2, [X8+432]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, [X19+16]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call Panel.SetDirty, X0
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: System.Void OnItemRemoved(UnityEngine.Rendering.ObservableList`1<UnityEngine.Rendering.DebugUI/Widget> sender, UnityEngine.Rendering.ListChangedEventArgs`1<UnityEngine.Rendering.DebugUI/Widget> e)

Disassembly:
	0x039AF014 ADRP X22, 0xA32000
	0x039AF018 ADRP X21, 0x79F000
	0x039AF01C LDRB W8, [X22 + 0xC14]
	0x039AF020 LDR X21, [X21 + 0xD00]
	0x039AF024 MOV W20, W1
	0x039AF028 MOV X19, X0
	0x039AF02C TBNZ X8, 0x0, 0x39AF068
	0x039AF030 ADRP X0, 0x79F000
	0x039AF034 LDR X0, [X0 + 0xD00]
	0x039AF038 BL 0x1C16CF4
	0x039AF03C ADRP X0, 0x7A2000
	0x039AF040 LDR X0, [X0 + 0xC80]
	0x039AF044 BL 0x1C16CF4
	0x039AF048 ADRP X0, 0x7A2000
	0x039AF04C LDR X0, [X0 + 0xC88]
	0x039AF050 BL 0x1C16CF4
	0x039AF054 ADRP X0, 0x7A2000
	0x039AF058 LDR X0, [X0 + 0xC90]
	0x039AF05C BL 0x1C16CF4
	0x039AF060 MOVZ W8, 0x1
	0x039AF064 STRB W8, [X22 + 0xC14]
	0x039AF068 LDR X8, [X19]
	0x039AF06C MOV X0, X19
	0x039AF070 MOV W1, W20
	0x039AF074 LDR X9, [X8 + 0x228]
	0x039AF078 LDR X2, [X8 + 0x230]
	0x039AF07C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X2, 0
	005 JumpIfEqual {37}
	006 Move X19, X0
	007 Move X0, [X2+24]
	008 Move X20, X2
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X8, [X0]
	012 Move X1, X31
	013 Move X9, [X8+392]
	014 Move X2, [X8+400]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X20+24]
	017 Compare X0, 0
	018 JumpIfEqual {37}
	019 Move X8, [X0]
	020 Move X1, X31
	021 Move X9, [X8+424]
	022 Move X2, [X8+432]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, [X19+16]
	025 Compare X0, 0
	026 JumpIfEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call Panel.SetDirty, X0
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x039AF080 STR W0, [X31 + 0xC]
	0x039AF084 MOV W1, W0
	0x039AF088 LDR X0, [X19 + 0x68]
	0x039AF08C LDR X2, [X21]
	0x039AF090 BL 0x22E7518
	0x039AF094 LDR X8, [X19 + 0x80]
	0x039AF098 CBZ X8, 0x39AF150
	0x039AF09C MOV W20, W0
	0x039AF0A0 LDR X9, [X8 + 0x18]
	0x039AF0A4 LDR X0, [X8 + 0x40]
	0x039AF0A8 LDR X1, [X8 + 0x28]
	0x039AF0AC BLR X9
	0x039AF0B0 CMP W0, W20
	0x039AF0B4 B.EQ 0x39AF140
	0x039AF0B8 LDR X8, [X19 + 0x48]
	0x039AF0BC CBZ X8, 0x39AF150
	0x039AF0C0 LDR X9, [X8 + 0x18]
	0x039AF0C4 LDR X0, [X8 + 0x40]
	0x039AF0C8 LDR X1, [X8 + 0x28]
	0x039AF0CC BLR X9
	0x039AF0D0 MOV W1, W0
	0x039AF0D4 ADD X0, X31, 0xC
	0x039AF0D8 MOV X2, X31
	0x039AF0DC BL 0x337B6C8
	0x039AF0E0 TBNZ X0, 0x0, 0x39AF140
	0x039AF0E4 LDR X8, [X19 + 0x50]
	0x039AF0E8 CBZ X8, 0x39AF150
	0x039AF0EC LDR W1, [X31 + 0xC]
	0x039AF0F0 LDR X9, [X8 + 0x18]
	0x039AF0F4 LDR X0, [X8 + 0x40]
	0x039AF0F8 LDR X2, [X8 + 0x28]
	0x039AF0FC BLR X9
	0x039AF100 LDR X8, [X19 + 0x58]
	0x039AF104 CBZ X8, 0x39AF120
	0x039AF108 LDR W2, [X31 + 0xC]
	0x039AF10C LDR X9, [X8 + 0x18]
	0x039AF110 LDR X0, [X8 + 0x40]
	0x039AF114 LDR X3, [X8 + 0x28]
	0x039AF118 MOV X1, X19
	0x039AF11C BLR X9
	0x039AF120 TBNZ X20, 0x1F, 0x39AF140
	0x039AF124 LDR X8, [X19 + 0x88]
	0x039AF128 CBZ X8, 0x39AF150
	0x039AF12C LDR X9, [X8 + 0x18]
	0x039AF130 LDR X0, [X8 + 0x40]
	0x039AF134 LDR X2, [X8 + 0x28]
	0x039AF138 MOV W1, W20
	0x039AF13C BLR X9
	0x039AF140 LDP X20, X19, [X31 + 0x20]
	0x039AF144 LDP X22, X21, [X31 + 0x10]
	0x039AF148 LDR X30, [X31], #0x30
	0x039AF14C RET
	0x039AF150 BL 0x1C16F20
	0x039AF154 STR X30, [X31 - 0x20]!
	0x039AF158 STP X20, X19, [X31 + 0x10]
	0x039AF15C ADRP X19, 0xA32000
	0x039AF160 ADRP X20, 0x7A2000
	0x039AF164 LDRB W8, [X19 + 0xC16]
	0x039AF168 LDR X20, [X20 + 0xC58]
	0x039AF16C TBNZ X8, 0x0, 0x39AF184
	0x039AF170 ADRP X0, 0x7A2000
	0x039AF174 LDR X0, [X0 + 0xC58]
	0x039AF178 BL 0x1C16CF4
	0x039AF17C MOVZ W8, 0x1
	0x039AF180 STRB W8, [X19 + 0xC16]
	0x039AF184 LDR X0, [X20]
	0x039AF188 BL 0x1C16F10
	0x039AF18C MOV X1, X31
	0x039AF190 MOV X19, X0
	0x039AF194 BL 0x33BDD8C
	0x039AF198 LDR X8, [X20]
	0x039AF19C LDR X8, [X8 + 0xB8]
	0x039AF1A0 STR X19, [X8]
	0x039AF1A4 LDP X20, X19, [X31 + 0x10]
	0x039AF1A8 LDR X30, [X31], #0x20
	0x039AF1AC RET
	0x039AF1B0 MOV X1, X31
	0x039AF1B4 B 0x33BDD8C
	0x039AF1B8 STR X30, [X31 - 0x20]!
	0x039AF1BC STP X20, X19, [X31 + 0x10]
	0x039AF1C0 ADRP X20, 0xA32000
	0x039AF1C4 LDRB W8, [X20 + 0xC17]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA33000
	009 Move W8, [X20+3069]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x745000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move X0, 0x7A3000
	019 Move X0, [X0+3008]
	020 Call 0x1C17CF4
	021 Move X0, 0x7A3000
	022 Move X0, [X0+3016]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3069], W8
	026 Move X0, [X19+56]
	027 Compare X0, 0
	028 JumpIfEqual {96}
	029 Move X8, [X0]
	030 Move X21, 0x745000
	031 Move X9, [X8+344]
	032 Move X1, [X8+352]
	033 Move X21, [X21+2904]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, [X19+64]
	036 Move W20, W0
	037 Compare X8, 0
	038 JumpIfEqual {43}
	039 Move X9, [X8+24]
	040 Move X0, [X8+64]
	041 Move X1, [X8+40]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W0, W31
	044 Move X8, [X21]
	045 And W9, W0, 1
	046 Move [X31+12], W9
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Add X0, X31, 12
	053 Move X1, X31
	054 Call Boolean.GetHashCode, X0
	055 Move X8, [X19+72]
	056 Compare X8, 0
	057 JumpIfEqual {96}
	058 Move X9, 0x7A3000
	059 Move X9, [X9+3008]
	060 Move W23, 23
	061 Move W10, 0x2321
	062 Move X1, [X9]
	063 NotImplemented "Instruction MADD not yet implemented."
	064 Move X0, X8
	065 Add W20, W9, W10
	066 Call 0x2498BA8, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X24, 0x7A3000
	069 Move X24, [X24+3016]
	070 Move W21, W0
	071 Move W22, W31
	072 Move X0, [X19+72]
	073 Compare X0, 0
	074 JumpIfEqual {96}
	075 Move X2, [X24]
	076 Move W1, W22
	077 Call 0x2498990, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {96}
	080 Move X8, [X0]
	081 Move X9, [X8+344]
	082 Move X1, [X8+352]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Add W22, W22, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move W0, W20
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return X0
	096 Call 0x1C17F20

