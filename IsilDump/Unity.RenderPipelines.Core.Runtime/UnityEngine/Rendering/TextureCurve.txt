Type: UnityEngine.Rendering.TextureCurve

Method: System.Int32 get_length()

Disassembly:
	0x039EDC88 MOV X21, X0
	0x039EDC8C STP X31, X31, [X31 + 0x70]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_length(System.Int32 value)

Disassembly:
	0x039EDC90 STR W31, [X31 + 0x88]
	0x039EDC94 STR X31, [X31 + 0x80]

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: UnityEngine.Keyframe get_Item(System.Int32 index)

Disassembly:
	0x039EDC98 STP X31, X31, [X31 + 0x50]
	0x039EDC9C STR W31, [X31 + 0x68]
	0x039EDCA0 STR X31, [X31 + 0x60]
	0x039EDCA4 STR X31, [X31 + 0x48]
	0x039EDCA8 BL 0x39ED93C
	0x039EDCAC ADD X8, X31, 0x50
	0x039EDCB0 MOV X0, X21
	0x039EDCB4 MOV X1, X20
	0x039EDCB8 MOV W2, W19
	0x039EDCBC MOV V0.16B, V10.16B
	0x039EDCC0 MOV V1.16B, V9.16B
	0x039EDCC4 BL 0x39ED93C
	0x039EDCC8 LDR V0, [X31 + 0x7]
	0x039EDCCC LDUR V1, [X31 + 0x7C]
	0x039EDCD0 LDR V2, [X31 + 0x5]
	0x039EDCD4 LDUR V3, [X31 + 0x5C]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X19, X8
	008 Add X8, X31, 0
	009 Move X2, X31
	010 Call AnimationCurve.get_Item, X0, X1
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move V1, [X31]
	013 Move [X19+12], V0
	014 Move [X19], V1
	015 Move X30, [X31+32]
	016 Move X19, [X31+40]
	017 Add X31, X31, 48
	018 Return X0
	019 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.AnimationCurve baseCurve, System.Single zeroValue, System.Boolean loop, in UnityEngine.Vector2 bounds)

Disassembly:
	0x039EDCD8 STR V0, [X31 + 0x2]
	0x039EDCDC ADD X0, X31, 0x4C
	0x039EDCE0 ADD X1, X31, 0x48
	0x039EDCE4 ADD X2, X31, 0x20
	0x039EDCE8 ADD X3, X31, 0x0
	0x039EDCEC MOV V0.16B, V8.16B
	0x039EDCF0 STUR V1, [X31 + 0x2C]
	0x039EDCF4 STR V2, [X31]
	0x039EDCF8 STUR V3, [X31 + 0xC]
	0x039EDCFC BL 0x39EDAC8
	0x039EDD00 LDP S2, S1, [X31 + 0x48]
	0x039EDD04 MOV X0, X22
	0x039EDD08 MOV V0.16B, V8.16B
	0x039EDD0C MOV X1, X31
	0x039EDD10 MOV V3.16B, V2.16B
	0x039EDD14 STP X31, X31, [X22]
	0x039EDD18 STR W31, [X22 + 0x18]
	0x039EDD1C STR X31, [X22 + 0x10]
	0x039EDD20 BL 0x3C00A84
	0x039EDD24 LDP X20, X19, [X31 + 0xC0]
	0x039EDD28 LDP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {25}
	008 Move X21, X0
	009 Move X0, X1
	010 Move X1, X31
	011 Move X19, X3
	012 Move W20, W2
	013 Move V8, V0
	014 Call AnimationCurve.get_keys, X0
	015 And W2, W20, 1
	016 Move X1, X0
	017 Move X0, X21
	018 Move X3, X19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X30, [X31+16]
	022 Move X21, [X31+24]
	023 Move V0, V8
	024 Move V8, [X31+48]
	025 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.Keyframe[] keys, System.Single zeroValue, System.Boolean loop, in UnityEngine.Vector2 bounds)

Disassembly:
	0x039EDD2C LDR X30, [X31 + 0xA8]
	0x039EDD30 LDP D9, D8, [X31 + 0x98]
	0x039EDD34 LDR V10, [X31 + 0x90]
	0x039EDD38 ADD X31, X31, 0xD0
	0x039EDD3C RET
	0x039EDD40 SUB X31, X31, 0x1C0
	0x039EDD44 STP D11, D10, [X31 + 0x150]
	0x039EDD48 STP D9, D8, [X31 + 0x160]
	0x039EDD4C STP X29, X30, [X31 + 0x170]
	0x039EDD50 STP X26, X25, [X31 + 0x180]
	0x039EDD54 STP X24, X23, [X31 + 0x190]
	0x039EDD58 STP X22, X21, [X31 + 0x1A0]
	0x039EDD5C STP X20, X19, [X31 + 0x1B0]
	0x039EDD60 ADRP X21, 0x9F4000
	0x039EDD64 LDRB W8, [X21 + 0xE4F]
	0x039EDD68 MOV V8.16B, V0.16B
	0x039EDD6C MOV X20, X1
	0x039EDD70 MOV X19, X0
	0x039EDD74 TBNZ X8, 0x0, 0x39EDD98
	0x039EDD78 ADRP X0, 0x766000
	0x039EDD7C LDR X0, [X0 + 0x640]
	0x039EDD80 BL 0x1C16CF4
	0x039EDD84 ADRP X0, 0x766000
	0x039EDD88 LDR X0, [X0 + 0x648]
	0x039EDD8C BL 0x1C16CF4
	0x039EDD90 MOVZ W8, 0x1
	0x039EDD94 STRB W8, [X21 + 0xE4F]
	0x039EDD98 FCMP S8, 0x0
	0x039EDD9C STP X31, X31, [X31 + 0x140]
	0x039EDDA0 STP X31, X31, [X31 + 0x130]
	0x039EDDA4 STP X31, X31, [X31 + 0x120]
	0x039EDDA8 STP X31, X31, [X31 + 0x100]
	0x039EDDAC STR W31, [X31 + 0x118]
	0x039EDDB0 STR X31, [X31 + 0x110]
	0x039EDDB4 STP X31, X31, [X31 + 0xE0]
	0x039EDDB8 STR W31, [X31 + 0xF8]
	0x039EDDBC STR X31, [X31 + 0xF0]
	0x039EDDC0 STP X31, X31, [X31 + 0xC0]
	0x039EDDC4 STR W31, [X31 + 0xD8]
	0x039EDDC8 STR X31, [X31 + 0xD0]
	0x039EDDCC STP X31, X31, [X31 + 0xA0]
	0x039EDDD0 STR W31, [X31 + 0xB8]
	0x039EDDD4 STR X31, [X31 + 0xB0]
	0x039EDDD8 B.LS 0x39EE3C4
	0x039EDDDC CBZ X20, 0x39EE3E8
	0x039EDDE0 MOV X0, X20
	0x039EDDE4 MOV X1, X31
	0x039EDDE8 BL 0x3C01178
	0x039EDDEC CBZ W0, 0x39EE3C4
	0x039EDDF0 FMOV S0, 1
	0x039EDDF4 FCMP S8, S0
	0x039EDDF8 B.GE 0x39EDEDC
	0x039EDDFC LDR X0, [X19]
	0x039EDE00 CBZ X0, 0x39EE3E8
	0x039EDE04 MOV X1, X31
	0x039EDE08 BL 0x3C01178
	0x039EDE0C CBZ W0, 0x39EDEDC
	0x039EDE10 LDR X0, [X19]
	0x039EDE14 CBZ X0, 0x39EE3E8
	0x039EDE18 MOV X1, X31
	0x039EDE1C BL 0x3C01178
	0x039EDE20 ADRP X22, 0x766000
	0x039EDE24 LDR X22, [X22 + 0x648]
	0x039EDE28 MOV W1, W0
	0x039EDE2C ADD X0, X31, 0x140

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x9F5000
	011 Move X23, 0x70E000
	012 Move W8, [X24+3657]
	013 Move X23, [X23+1840]
	014 Move X21, X3
	015 Move W22, W2
	016 Move V8, V0
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x70E000
	024 Move X0, [X0+1840]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+3657], W8
	028 Move X0, X19
	029 Move X1, X31
	030 And W24, W22, 1
	031 Call Object..ctor, X0
	032 Move X0, [X23]
	033 Call 0x1C17F10
	034 Move X1, X20
	035 Move X2, X31
	036 Move X22, X0
	037 Call AnimationCurve..ctor, X0, X1
	038 Move [X19+32], X22
	039 Move [X19+24], S8
	040 Move [X19+20], W24
	041 Move X22, 0x9ED000
	042 Move W8, [X22+2072]
	043 Move S9, [X21]
	044 Move S8, [X21+4]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x707000
	048 Move X0, [X0+1448]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+2072], W8
	052 Move X8, 0x707000
	053 Move X8, [X8+1448]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Multiply S0, S9, S9
	060 Multiply S1, S8, S8
	061 Add S0, S0, S1
	062 NotImplemented "Instruction FSQRT not yet implemented."
	063 Move [X19+28], S0
	064 Compare X20, 0
	065 JumpIfEqual {80}
	066 Move X8, [X20+24]
	067 Move W9, 257
	068 NotImplemented "Instruction STRH not yet implemented."
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move [X19+16], W8
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X24, [X31+32]
	075 Move X23, [X31+40]
	076 Move X30, [X31+16]
	077 Move D9, [X31+80]
	078 Move D8, [X31+88]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void Finalize()

Disassembly:
	0x039EDE30 MOVZ W2, 0x2
	0x039EDE34 LDR X4, [X22]

ISIL:
	001 Move X1, X31
	002 Call Object.Finalize, X0
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x039EDE38 MOVZ W3, 0x1

ISIL:
	001 Return 

Method: System.Void Release()

Disassembly:
	0x039EDE3C BL 0x23D83B4
	0x039EDE40 MOV X0, X20
	0x039EDE44 MOV X1, X31
	0x039EDE48 BL 0x3C01178
	0x039EDE4C LDR X4, [X22]
	0x039EDE50 MOV W1, W0
	0x039EDE54 ADD X0, X31, 0x130
	0x039EDE58 MOVZ W2, 0x2
	0x039EDE5C MOVZ W3, 0x1
	0x039EDE60 BL 0x23D83B4
	0x039EDE64 LDR X0, [X19]
	0x039EDE68 CBZ X0, 0x39EE3E8
	0x039EDE6C MOV X23, X31
	0x039EDE70 MOV X21, X31
	0x039EDE74 ADD X24, X31, 0x80
	0x039EDE78 MOV X1, X31
	0x039EDE7C BL 0x3C01178
	0x039EDE80 CMP X21, W0, SXTW
	0x039EDE84 B.GE 0x39EDEF4
	0x039EDE88 LDR X0, [X19]
	0x039EDE8C CBZ X0, 0x39EE3E8
	0x039EDE90 ADD X8, X31, 0x60
	0x039EDE94 MOV W1, W21
	0x039EDE98 MOV X2, X31
	0x039EDE9C BL 0x3C01070

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9F5000
	006 Move X20, 0x72F000
	007 Move W8, [X21+3658]
	008 Move X20, [X20+2296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x72F000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3658], W8
	019 Move X0, [X20]
	020 Move X20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call CoreUtils.Destroy, X0
	028 Move [X19+48], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void SetDirty()

Disassembly:
	0x039EDEA0 LDUR V0, [X31 + 0x6C]
	0x039EDEA4 LDR V1, [X31 + 0x6]
	0x039EDEA8 LDR X8, [X31 + 0x140]

ISIL:
	001 Move W8, 257
	002 NotImplemented "Instruction STRH not yet implemented."
	003 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetTextureFormat()

Disassembly:
	0x039EDEAC ADD X21, X21, 0x1
	0x039EDEB0 STUR V0, [X24 + 0xC]
	0x039EDEB4 STR V1, [X31 + 0x8]
	0x039EDEB8 LDR V0, [X31 + 0x8]
	0x039EDEBC LDUR V1, [X24 + 0xC]
	0x039EDEC0 ADD X8, X8, X23
	0x039EDEC4 ADD X23, X23, 0x1C
	0x039EDEC8 STR V0, [X8]
	0x039EDECC STUR V1, [X8 + 0xC]
	0x039EDED0 LDR X0, [X19]
	0x039EDED4 CBNZ X0, 0x39EDE78
	0x039EDED8 B 0x39EE3E8
	0x039EDEDC LDR X0, [X19]
	0x039EDEE0 CBZ X0, 0x39EE3E8
	0x039EDEE4 MOV X1, X20
	0x039EDEE8 MOV X2, X31
	0x039EDEEC BL 0x3C017EC
	0x039EDEF0 B 0x39EE3C4
	0x039EDEF4 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W0, 45
	004 Move W1, 7
	005 Move X2, X31
	006 Call SystemInfo.IsFormatSupported, X0, X1
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {15}
	011 Move W0, 45
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Move W0, 5
	016 Move W1, 7
	017 Move X2, X31
	018 Move W19, 5
	019 Call SystemInfo.IsFormatSupported, X0, X1
	020 And W31, W0, 1
	021 Move W8, 8
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return X0

Method: UnityEngine.Texture2D GetTexture()

Disassembly:
	0x039EDEF8 MOV X1, X31
	0x039EDEFC BL 0x3C01178
	0x039EDF00 CMP W0, 0x1
	0x039EDF04 B.LT 0x39EDF68
	0x039EDF08 MOV X23, X31
	0x039EDF0C MOV X21, X31
	0x039EDF10 ADD X8, X31, 0x60
	0x039EDF14 MOV X0, X20
	0x039EDF18 MOV W1, W21
	0x039EDF1C MOV X2, X31
	0x039EDF20 BL 0x3C01070
	0x039EDF24 LDUR V0, [X31 + 0x6C]
	0x039EDF28 LDR V1, [X31 + 0x6]
	0x039EDF2C LDR X8, [X31 + 0x130]
	0x039EDF30 MOV X0, X20
	0x039EDF34 STUR V0, [X24 + 0xC]
	0x039EDF38 STR V1, [X31 + 0x8]
	0x039EDF3C LDR V0, [X31 + 0x8]
	0x039EDF40 LDUR V1, [X24 + 0xC]
	0x039EDF44 ADD X8, X8, X23
	0x039EDF48 MOV X1, X31
	0x039EDF4C STR V0, [X8]
	0x039EDF50 STUR V1, [X8 + 0xC]
	0x039EDF54 ADD X21, X21, 0x1
	0x039EDF58 BL 0x3C01178
	0x039EDF5C CMP X21, W0, SXTW
	0x039EDF60 ADD X23, X23, 0x1C
	0x039EDF64 B.LT 0x39EDF10
	0x039EDF68 LDR X8, [X31 + 0x140]
	0x039EDF6C ADD X0, X31, 0x100
	0x039EDF70 MOV X1, X31
	0x039EDF74 LDR V0, [X8]
	0x039EDF78 LDR X9, [X8 + 0x10]
	0x039EDF7C LDR W8, [X8 + 0x18]
	0x039EDF80 STR V0, [X31 + 0x10]
	0x039EDF84 STR X9, [X31 + 0x110]
	0x039EDF88 STR W8, [X31 + 0x118]
	0x039EDF8C BL 0x3C00A98
	0x039EDF90 LDR X8, [X31 + 0x130]
	0x039EDF94 MOV V9.16B, V0.16B
	0x039EDF98 ADD X0, X31, 0x100
	0x039EDF9C MOV X1, X31
	0x039EDFA0 LDR V0, [X8]
	0x039EDFA4 LDR X9, [X8 + 0x10]
	0x039EDFA8 LDR W8, [X8 + 0x18]
	0x039EDFAC STR V0, [X31 + 0x10]
	0x039EDFB0 STR X9, [X31 + 0x110]
	0x039EDFB4 STR W8, [X31 + 0x118]
	0x039EDFB8 BL 0x3C00A98
	0x039EDFBC LDR X0, [X19]
	0x039EDFC0 FCMP S9, S0
	0x039EDFC4 FCSEL S9, S9, S0, MI
	0x039EDFC8 CBZ X0, 0x39EE3E8
	0x039EDFCC MOV X1, X31
	0x039EDFD0 BL 0x3C01178
	0x039EDFD4 LDR X8, [X31 + 0x140]
	0x039EDFD8 SUB W9, W0, 0x1
	0x039EDFDC MOVZ W21, 0x1C
	0x039EDFE0 ADD X0, X31, 0x100
	0x039EDFE4 SMADDL X8, X9, X21, X8
	0x039EDFE8 LDR V0, [X8]
	0x039EDFEC LDR X9, [X8 + 0x10]
	0x039EDFF0 LDR W8, [X8 + 0x18]
	0x039EDFF4 MOV X1, X31
	0x039EDFF8 STR V0, [X31 + 0x10]
	0x039EDFFC STR X9, [X31 + 0x110]
	0x039EE000 STR W8, [X31 + 0x118]
	0x039EE004 BL 0x3C00A98
	0x039EE008 MOV X0, X20
	0x039EE00C MOV X1, X31
	0x039EE010 MOV V10.16B, V0.16B
	0x039EE014 BL 0x3C01178
	0x039EE018 LDR X8, [X31 + 0x130]
	0x039EE01C SUB W9, W0, 0x1
	0x039EE020 ADD X0, X31, 0x100
	0x039EE024 MOV X1, X31
	0x039EE028 SMADDL X8, X9, X21, X8
	0x039EE02C LDR V0, [X8]
	0x039EE030 LDR X9, [X8 + 0x10]
	0x039EE034 LDR W8, [X8 + 0x18]
	0x039EE038 STR V0, [X31 + 0x10]
	0x039EE03C STR X9, [X31 + 0x110]
	0x039EE040 STR W8, [X31 + 0x118]
	0x039EE044 BL 0x3C00A98
	0x039EE048 LDR X0, [X19]
	0x039EE04C FCMP S10, S0
	0x039EE050 FCSEL S10, S10, S0, GT
	0x039EE054 CBZ X0, 0x39EE3E8
	0x039EE058 MOV X1, X31
	0x039EE05C BL 0x3C01178
	0x039EE060 MOV W21, W0
	0x039EE064 MOV X0, X20
	0x039EE068 MOV X1, X31
	0x039EE06C BL 0x3C01178
	0x039EE070 LDR X4, [X22]
	0x039EE074 ADD W1, W0, W21
	0x039EE078 ADD X0, X31, 0x120
	0x039EE07C MOVZ W2, 0x2
	0x039EE080 MOVZ W3, 0x1
	0x039EE084 BL 0x23D83B4
	0x039EE088 LDR W10, [X31 + 0x138]
	0x039EE08C LDR W9, [X31 + 0x148]
	0x039EE090 CMP W10, 0x0
	0x039EE094 CSET W8, GT
	0x039EE098 CMP W9, 0x0
	0x039EE09C CSET W9, GT
	0x039EE0A0 B.GT 0x39EE0B4
	0x039EE0A4 CMP W10, 0x1
	0x039EE0A8 B.GE 0x39EE0B4
	0x039EE0AC MOV W25, W31
	0x039EE0B0 B 0x39EE344
	0x039EE0B4 MOV W25, W31
	0x039EE0B8 MOV W20, W31
	0x039EE0BC MOV W21, W31
	0x039EE0C0 MOVZ W26, 0x1C
	0x039EE0C4 STP X31, X31, [X31 + 0xE0]
	0x039EE0C8 STR W31, [X31 + 0xF8]
	0x039EE0CC STR X31, [X31 + 0xF0]
	0x039EE0D0 STP X31, X31, [X31 + 0xC8]
	0x039EE0D4 STR X31, [X31 + 0xC0]
	0x039EE0D8 STR W31, [X31 + 0xD8]
	0x039EE0DC TBZ X9, 0x0, 0x39EE150
	0x039EE0E0 TBZ X8, 0x0, 0x39EE150
	0x039EE0E4 LDP X0, X1, [X31 + 0x140]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x9F5000
	008 Move X20, 0x707000
	009 Move W8, [X21+3659]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x70C000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move X0, 0x707000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x731000
	023 Move X0, [X0+592]
	024 Call 0x1C17CF4
	025 Move X0, 0x767000
	026 Move X0, [X0+1576]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3659], W8
	030 Move X0, [X20]
	031 Move X20, [X19+48]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {93}
	044 Move X20, 0x731000
	045 Move X20, [X20+592]
	046 Call TextureCurve.GetTextureFormat
	047 Move X8, [X20]
	048 Move W21, W0
	049 Move X0, X8
	050 Call 0x1C17F10
	051 Move W1, 128
	052 Move W2, 1
	053 Move W3, W21
	054 Move W4, W31
	055 Move X5, X31
	056 Move X20, X0
	057 Call Texture2D..ctor, X0, X1, X2, X3, X4
	058 Move [X19+48], X20
	059 Compare X20, 0
	060 JumpIfEqual {142}
	061 Move X8, 0x767000
	062 Move X8, [X8+1576]
	063 Move X0, X20
	064 Move X2, X31
	065 Move X1, [X8]
	066 Call Object.set_name, X0, X1
	067 Move X0, [X19+48]
	068 Compare X0, 0
	069 JumpIfEqual {142}
	070 Move W1, 61
	071 Move X2, X31
	072 Call Object.set_hideFlags, X0, X1
	073 Move X0, [X19+48]
	074 Compare X0, 0
	075 JumpIfEqual {142}
	076 Move W1, 1
	077 Move X2, X31
	078 Call Texture.set_filterMode, X0, X1
	079 Move X0, [X19+48]
	080 Compare X0, 0
	081 JumpIfEqual {142}
	082 Move W1, 1
	083 Move X2, X31
	084 Move W20, 1
	085 Call Texture.set_wrapMode, X0, X1
	086 Move X0, [X19+48]
	087 Compare X0, 0
	088 JumpIfEqual {142}
	089 Move W1, W31
	090 Move X2, X31
	091 Call Texture.set_anisoLevel, X0, X1
	092 Move [X19+57], W20
	093 Move W8, [X19+57]
	094 Compare W8, 0
	095 JumpIfEqual {133}
	096 Move X8, 0x70B000
	097 Move X8, [X8+320]
	098 Move W1, 128
	099 Move X0, [X8]
	100 Call 0x1C17D6C
	101 Compare X0, 0
	102 JumpIfEqual {142}
	103 Move W8, [X0+24]
	104 Move X20, X0
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X21, X31
	107 Add X22, X20, 32
	108 Move W23, 0x3C000000
	109 NotImplemented "Instruction SCVTF not yet implemented."
	110 Move S1, W23
	111 Multiply S0, S0, S1
	112 Move X0, X19
	113 Call TextureCurve.Evaluate, X0, V0
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add X21, X21, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X22+16], S0
	119 Move X0, [X19+48]
	120 Compare X0, 0
	121 JumpIfEqual {142}
	122 Move X1, X20
	123 Move X2, X31
	124 Call Texture2D.SetPixels, X0, X1
	125 Move X0, [X19+48]
	126 Compare X0, 0
	127 JumpIfEqual {142}
	128 Move W1, W31
	129 Move W2, W31
	130 Move X3, X31
	131 Call Texture2D.Apply, X0, X1, X2
	132 Move [X19+57], W31
	133 Move X0, [X19+48]
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move X30, [X31+48]
	139 Move X23, [X31+56]
	140 Return X0
	141 Call 0x1C17F28
	142 Call 0x1C17F20

Method: System.Single Evaluate(System.Single time)

Disassembly:
	0x039EE0E8 ADD X8, X31, 0x80
	0x039EE0EC MOV W2, W20
	0x039EE0F0 BL 0x39ED828
	0x039EE0F4 LDR V0, [X31 + 0x8]
	0x039EE0F8 LDUR V1, [X24 + 0xC]
	0x039EE0FC LDP X0, X1, [X31 + 0x130]
	0x039EE100 ADD X8, X31, 0x60
	0x039EE104 MOV W2, W21
	0x039EE108 STR V0, [X31 + 0xE]
	0x039EE10C STUR V1, [X24 + 0x6C]
	0x039EE110 BL 0x39ED828
	0x039EE114 LDR V0, [X31 + 0x6]
	0x039EE118 LDUR V1, [X31 + 0x6C]
	0x039EE11C ADD X0, X31, 0xE0
	0x039EE120 MOV X1, X31
	0x039EE124 STR V0, [X31 + 0xC]
	0x039EE128 STUR V1, [X24 + 0x4C]
	0x039EE12C BL 0x3C00A98
	0x039EE130 ADD X0, X31, 0xC0
	0x039EE134 MOV X1, X31
	0x039EE138 MOV V11.16B, V0.16B
	0x039EE13C BL 0x3C00A98
	0x039EE140 FCMP S11, S0
	0x039EE144 B.NE 0x39EE214
	0x039EE148 ADD W20, W20, 0x1
	0x039EE14C B 0x39EE2C8
	0x039EE150 TBZ X9, 0x0, 0x39EE1B4
	0x039EE154 LDP X0, X1, [X31 + 0x140]
	0x039EE158 ADD X8, X31, 0x80
	0x039EE15C MOV W2, W20
	0x039EE160 BL 0x39ED828
	0x039EE164 LDR V0, [X31 + 0x8]
	0x039EE168 LDUR V1, [X24 + 0xC]
	0x039EE16C LDP X22, X23, [X31 + 0x130]
	0x039EE170 ADD X0, X31, 0xE0
	0x039EE174 MOV X1, X31
	0x039EE178 STR V0, [X31 + 0xE]
	0x039EE17C STUR V1, [X24 + 0x6C]
	0x039EE180 BL 0x3C00A98
	0x039EE184 MOV V2.16B, V0.16B
	0x039EE188 SUB W2, W21, 0x1
	0x039EE18C ADD X8, X31, 0x60
	0x039EE190 MOV X0, X22
	0x039EE194 MOV X1, X23
	0x039EE198 MOV W3, W21
	0x039EE19C MOV V0.16B, V9.16B
	0x039EE1A0 MOV V1.16B, V10.16B
	0x039EE1A4 BL 0x39EDC54
	0x039EE1A8 LDR V0, [X31 + 0x6]
	0x039EE1AC LDUR V1, [X31 + 0x6C]
	0x039EE1B0 B 0x39EE274
	0x039EE1B4 LDP X0, X1, [X31 + 0x130]
	0x039EE1B8 ADD X8, X31, 0x80
	0x039EE1BC MOV W2, W21
	0x039EE1C0 BL 0x39ED828
	0x039EE1C4 LDR V0, [X31 + 0x8]
	0x039EE1C8 LDUR V1, [X24 + 0xC]
	0x039EE1CC LDP X22, X23, [X31 + 0x140]
	0x039EE1D0 ADD X0, X31, 0xC0
	0x039EE1D4 MOV X1, X31
	0x039EE1D8 STR V0, [X31 + 0xC]
	0x039EE1DC STUR V1, [X24 + 0x4C]
	0x039EE1E0 BL 0x3C00A98
	0x039EE1E4 MOV V2.16B, V0.16B
	0x039EE1E8 SUB W2, W20, 0x1
	0x039EE1EC ADD X8, X31, 0x60
	0x039EE1F0 MOV X0, X22
	0x039EE1F4 MOV X1, X23
	0x039EE1F8 MOV W3, W20
	0x039EE1FC MOV V0.16B, V9.16B
	0x039EE200 MOV V1.16B, V10.16B
	0x039EE204 BL 0x39EDC54
	0x039EE208 LDR V0, [X31 + 0x6]
	0x039EE20C LDUR V1, [X31 + 0x6C]
	0x039EE210 B 0x39EE2C0
	0x039EE214 ADD X0, X31, 0xE0
	0x039EE218 MOV X1, X31
	0x039EE21C BL 0x3C00A98
	0x039EE220 ADD X0, X31, 0xC0
	0x039EE224 MOV X1, X31
	0x039EE228 MOV V11.16B, V0.16B
	0x039EE22C BL 0x3C00A98
	0x039EE230 FCMP S11, S0
	0x039EE234 B.PL 0x39EE284
	0x039EE238 LDP X22, X23, [X31 + 0x130]
	0x039EE23C ADD X0, X31, 0xE0
	0x039EE240 MOV X1, X31
	0x039EE244 BL 0x3C00A98
	0x039EE248 MOV V2.16B, V0.16B
	0x039EE24C SUB W2, W21, 0x1
	0x039EE250 ADD X8, X31, 0x80
	0x039EE254 MOV X0, X22
	0x039EE258 MOV X1, X23
	0x039EE25C MOV W3, W21
	0x039EE260 MOV V0.16B, V9.16B
	0x039EE264 MOV V1.16B, V10.16B
	0x039EE268 BL 0x39EDC54
	0x039EE26C LDR V0, [X31 + 0x8]
	0x039EE270 LDUR V1, [X24 + 0xC]
	0x039EE274 STR V0, [X31 + 0xC]
	0x039EE278 STUR V1, [X24 + 0x4C]
	0x039EE27C ADD W20, W20, 0x1
	0x039EE280 B 0x39EE2CC
	0x039EE284 LDP X22, X23, [X31 + 0x140]
	0x039EE288 ADD X0, X31, 0xC0
	0x039EE28C MOV X1, X31
	0x039EE290 BL 0x3C00A98
	0x039EE294 MOV V2.16B, V0.16B
	0x039EE298 SUB W2, W20, 0x1
	0x039EE29C ADD X8, X31, 0x80
	0x039EE2A0 MOV X0, X22
	0x039EE2A4 MOV X1, X23
	0x039EE2A8 MOV W3, W20
	0x039EE2AC MOV V0.16B, V9.16B
	0x039EE2B0 MOV V1.16B, V10.16B
	0x039EE2B4 BL 0x39EDC54
	0x039EE2B8 LDR V0, [X31 + 0x8]
	0x039EE2BC LDUR V1, [X24 + 0xC]
	0x039EE2C0 STR V0, [X31 + 0xE]
	0x039EE2C4 STUR V1, [X24 + 0x6C]
	0x039EE2C8 ADD W21, W21, 0x1
	0x039EE2CC LDR V0, [X31 + 0xE]
	0x039EE2D0 LDUR V1, [X24 + 0x6C]
	0x039EE2D4 LDR V2, [X31 + 0xC]
	0x039EE2D8 LDUR V3, [X24 + 0x4C]
	0x039EE2DC STR V0, [X31 + 0x4]
	0x039EE2E0 ADD X8, X31, 0xA0
	0x039EE2E4 ADD X0, X31, 0x40
	0x039EE2E8 ADD X1, X31, 0x20
	0x039EE2EC MOV V0.16B, V8.16B
	0x039EE2F0 STUR V1, [X31 + 0x4C]
	0x039EE2F4 STR V2, [X31 + 0x2]
	0x039EE2F8 STUR V3, [X31 + 0x2C]
	0x039EE2FC BL 0x39ED66C
	0x039EE300 LDR X8, [X31 + 0x120]
	0x039EE304 LDUR V0, [X24 + 0x2C]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], D8
	003 Move [X31+208], X30
	004 Move [X31+216], X21
	005 Move [X31+224], X20
	006 Move [X31+232], X19
	007 Move X20, 0x9F4000
	008 Move W8, [X20+3660]
	009 Move V8, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x70D000
	016 Move X0, [X0+1840]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3660], W8
	020 Move [X31+160], X31
	021 Move [X31+168], X31
	022 Move [X31+184], W31
	023 Move [X31+176], X31
	024 Move [X31+128], X31
	025 Move [X31+136], X31
	026 Move [X31+152], W31
	027 Move [X31+144], X31
	028 Move W8, [X19+56]
	029 Compare W8, 0
	030 JumpIfEqual {142}
	031 Move X0, [X19+32]
	032 Compare X0, 0
	033 JumpIfEqual {141}
	034 Move X1, X31
	035 Call AnimationCurve.get_length, X0
	036 Move [X19+16], W0
	037 Compare W0, 0
	038 JumpIfEqual {145}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X19+20]
	041 Compare W8, 0
	042 JumpIfEqual {146}
	043 Move W8, [X19+56]
	044 Compare W8, 0
	045 JumpIfEqual {138}
	046 Move X8, [X19+40]
	047 Compare X8, 0
	048 JumpIfNotEqual {57}
	049 Move X8, 0x70D000
	050 Move X8, [X8+1840]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X20, X0
	055 Call AnimationCurve..ctor, X0
	056 Move [X19+40], X20
	057 Move X0, [X19+32]
	058 Compare X0, 0
	059 JumpIfEqual {141}
	060 Move W8, [X19+16]
	061 Move X2, X31
	062 Add X21, X31, 128
	063 Subtract W1, W8, 1
	064 Add X8, X31, 96
	065 Call AnimationCurve.get_Item, X0, X1
	066 Move V0, [X31+6]
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 Add X0, X31, 160
	069 Move X1, X31
	070 Move [X31+10], V0
	071 Move [X21+44], V1
	072 Call Keyframe.get_time, X0
	073 Move V1, [X19+28]
	074 Add X0, X31, 160
	075 Move X1, X31
	076 Subtract S0, S0, S1
	077 Call Keyframe.set_time, X0, V0
	078 Move X0, [X19+32]
	079 Compare X0, 0
	080 JumpIfEqual {141}
	081 Add X8, X31, 96
	082 Move W1, W31
	083 Move X2, X31
	084 Call AnimationCurve.get_Item, X0, X1
	085 Move V0, [X31+6]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Add X0, X31, 128
	088 Move X1, X31
	089 Move [X31+8], V0
	090 Move [X21+12], V1
	091 Call Keyframe.get_time, X0
	092 Move V1, [X19+28]
	093 Add X0, X31, 128
	094 Move X1, X31
	095 Add S0, S0, S1
	096 Call Keyframe.set_time, X0, V0
	097 Move X0, [X19+32]
	098 Compare X0, 0
	099 JumpIfEqual {141}
	100 Move X20, [X19+40]
	101 Move X1, X31
	102 Call AnimationCurve.get_keys, X0
	103 Compare X20, 0
	104 JumpIfEqual {141}
	105 Move X1, X0
	106 Move X0, X20
	107 Move X2, X31
	108 Call AnimationCurve.set_keys, X0, X1
	109 Move X0, [X19+40]
	110 Move V0, [X31+10]
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 Move [X31+6], V0
	113 Move [X31+108], V1
	114 Compare X0, 0
	115 JumpIfEqual {141}
	116 Move V0, [X31+6]
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Add X1, X31, 64
	119 Move X2, X31
	120 Move [X31+4], V0
	121 Move [X31+76], V1
	122 Call AnimationCurve.AddKey, X0, X1
	123 Move X0, [X19+40]
	124 Move V0, [X31+8]
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 Move [X31+2], V0
	127 Move [X31+44], V1
	128 Compare X0, 0
	129 JumpIfEqual {141}
	130 Move V0, [X31+2]
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 Add X1, X31, 0
	133 Move X2, X31
	134 Move [X31], V0
	135 Move [X31+12], V1
	136 Call AnimationCurve.AddKey, X0, X1
	137 Move [X19+56], W31
	138 Move X0, [X19+40]
	139 Compare X0, 0
	140 JumpIfNotEqual {149}
	141 Call 0x1C17F20
	142 Move W0, [X19+16]
	143 Compare W0, 0
	144 JumpIfNotEqual {39}
	145 Move V0, [X19+24]
	146 Move X0, [X19+32]
	147 Compare X0, 0
	148 JumpIfEqual {141}
	149 Move V0, V8
	150 Move X1, X31
	151 Call AnimationCurve.Evaluate, X0, V0
	152 Move X20, [X31+224]
	153 Move X19, [X31+232]
	154 Move X30, [X31+208]
	155 Move X21, [X31+216]
	156 Move V8, [X31+192]
	157 Add X31, X31, 240
	158 Return V0

Method: System.Int32 AddKey(System.Single time, System.Single value)

Disassembly:
	0x039EE308 LDR V1, [X31 + 0xA]
	0x039EE30C NOP
	0x039EE310 SMADDL X8, X25, X26, X8
	0x039EE314 STUR V0, [X8 + 0xC]
	0x039EE318 STR V1, [X8]
	0x039EE31C LDR W10, [X31 + 0x138]
	0x039EE320 LDR W9, [X31 + 0x148]
	0x039EE324 ADD W25, W25, 0x1
	0x039EE328 CMP W21, W10
	0x039EE32C CSET W8, LT
	0x039EE330 CMP W20, W9
	0x039EE334 CSET W9, LT
	0x039EE338 B.LT 0x39EE0C4
	0x039EE33C CMP W21, W10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X1, X31
	008 Call AnimationCurve.AddKey, X0, V0, V1
	009 Move TEMP, X0
	010 And TEMP, TEMP, -2147483648
	011 Compare TEMP, -2147483648
	012 JumpIfEqual {15}
	013 Move W8, 257
	014 NotImplemented "Instruction STRH not yet implemented."
	015 And W0, W0, W0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Call 0x1C17F20

Method: System.Int32 MoveKey(System.Int32 index, in UnityEngine.Keyframe key)

Disassembly:
	0x039EE340 B.LT 0x39EE0C4
	0x039EE344 LDR X0, [X19]
	0x039EE348 CBZ X0, 0x39EE3E8
	0x039EE34C MOV X1, X31
	0x039EE350 BL 0x3C00FF0
	0x039EE354 CMP W25, 0x1
	0x039EE358 B.LT 0x39EE3B0
	0x039EE35C MOVZ W8, 0x1C
	0x039EE360 MOV X20, X31
	0x039EE364 UMADDL X21, X25, X8, X31
	0x039EE368 LDR X8, [X31 + 0x120]
	0x039EE36C LDR X0, [X19]
	0x039EE370 ADD X8, X8, X20
	0x039EE374 LDR V0, [X8]
	0x039EE378 LDUR V1, [X8 + 0xC]
	0x039EE37C STR V0, [X31 + 0x8]
	0x039EE380 STUR V1, [X24 + 0xC]
	0x039EE384 CBZ X0, 0x39EE3E8
	0x039EE388 LDR V0, [X31 + 0x8]
	0x039EE38C LDUR V1, [X24 + 0xC]
	0x039EE390 ADD X1, X31, 0x0
	0x039EE394 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move V1, [X2]
	008 Move [X31+44], V0
	009 Move [X31+2], V1
	010 Compare X0, 0
	011 JumpIfEqual {25}
	012 Move V0, [X31+2]
	013 NotImplemented "Instruction LDUR not yet implemented."
	014 Add X2, X31, 0
	015 Move X3, X31
	016 Move [X31], V0
	017 Move [X31+12], V1
	018 Call AnimationCurve.MoveKey, X0, X1, X2
	019 Move W8, 257
	020 NotImplemented "Instruction STRH not yet implemented."
	021 Move X30, [X31+64]
	022 Move X19, [X31+72]
	023 Add X31, X31, 80
	024 Return X0
	025 Call 0x1C17F20

Method: System.Void RemoveKey(System.Int32 index)

Disassembly:
	0x039EE398 STR V0, [X31]
	0x039EE39C STUR V1, [X31 + 0xC]
	0x039EE3A0 BL 0x3C00E64
	0x039EE3A4 ADD X20, X20, 0x1C
	0x039EE3A8 CMP X21, X20
	0x039EE3AC B.NE 0x39EE368
	0x039EE3B0 ADRP X8, 0x765000
	0x039EE3B4 LDR X8, [X8 + 0x640]
	0x039EE3B8 ADD X0, X31, 0x120
	0x039EE3BC LDR X1, [X8]
	0x039EE3C0 BL 0x23D8670

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X2, X31
	008 Call AnimationCurve.RemoveKey, X0, X1
	009 Move W8, 257
	010 NotImplemented "Instruction STRH not yet implemented."
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Call 0x1C17F20

Method: System.Void SmoothTangents(System.Int32 index, System.Single weight)

Disassembly:
	0x039EE3C4 LDP X20, X19, [X31 + 0x1B0]
	0x039EE3C8 LDP X22, X21, [X31 + 0x1A0]
	0x039EE3CC LDP X24, X23, [X31 + 0x190]
	0x039EE3D0 LDP X26, X25, [X31 + 0x180]
	0x039EE3D4 LDP X29, X30, [X31 + 0x170]
	0x039EE3D8 LDP D9, D8, [X31 + 0x160]
	0x039EE3DC LDP D11, D10, [X31 + 0x150]
	0x039EE3E0 ADD X31, X31, 0x1C0
	0x039EE3E4 RET
	0x039EE3E8 BL 0x1C16F20
	0x039EE3EC MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X2, X31
	008 Call AnimationCurve.SmoothTangents, X0, X1, V0
	009 Move W8, 257
	010 NotImplemented "Instruction STRH not yet implemented."
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Call 0x1C17F20

