Type: UnityEngine.Rendering.ShaderDebugPrintInput

Method: UnityEngine.Vector2 get_pos()

Disassembly:
	0x039B4638 B.NE 0x39B471C
	0x039B463C BL 0x3EB1AD0

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Return X0

Method: System.Void set_pos(UnityEngine.Vector2 value)

Disassembly:
	0x039B4640 LDR X22, [X0]
	0x039B4644 BL 0x3EB1AE0

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Return 

Method: System.Boolean get_leftDown()

Disassembly:
	0x039B4648 B 0x39B45FC
	0x039B464C ADRP X8, 0x79E000

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void set_leftDown(System.Boolean value)

Disassembly:
	0x039B4650 LDR X8, [X8 + 0x8]
	0x039B4654 ADD X0, X31, 0x50
	0x039B4658 LDR X1, [X8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+8], W8
	003 Return 

Method: System.Boolean get_rightDown()

Disassembly:
	0x039B465C BL 0x2C205A0
	0x039B4660 LDR X0, [X19 + 0x48]

ISIL:
	001 Move W0, [X0+9]
	002 Return X0

Method: System.Void set_rightDown(System.Boolean value)

Disassembly:
	0x039B4664 CBZ X0, 0x39B4760
	0x039B4668 ADRP X8, 0x79D000
	0x039B466C LDR X8, [X8 + 0xFE0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+9], W8
	003 Return 

Method: System.Boolean get_middleDown()

Disassembly:
	0x039B4670 LDR X1, [X8]
	0x039B4674 BL 0x2B2716C

ISIL:
	001 Move W0, [X0+10]
	002 Return X0

Method: System.Void set_middleDown(System.Boolean value)

Disassembly:
	0x039B4678 LDR X0, [X19 + 0x50]
	0x039B467C CBZ X0, 0x39B4760
	0x039B4680 ADRP X8, 0x79D000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+10], W8
	003 Return 

Method: System.String String()

Disassembly:
	0x039B4684 LDR X8, [X8 + 0xFE8]
	0x039B4688 LDR X1, [X8]
	0x039B468C BL 0x2AA4F58
	0x039B4690 CBZ X0, 0x39B4760
	0x039B4694 ADRP X8, 0x79E000
	0x039B4698 LDR X8, [X8 + 0x68]
	0x039B469C LDR X1, [X8]
	0x039B46A0 ADD X8, X31, 0x18
	0x039B46A4 BL 0x275A7AC
	0x039B46A8 LDR X1, [X25]
	0x039B46AC ADD X0, X31, 0x18
	0x039B46B0 BL 0x2C0B1F0
	0x039B46B4 TBZ X0, 0x0, 0x39B46D0
	0x039B46B8 LDR X0, [X19 + 0x58]
	0x039B46BC CBZ X0, 0x39B4748
	0x039B46C0 LDR X1, [X31 + 0x28]
	0x039B46C4 LDR X2, [X26]
	0x039B46C8 BL 0x2493D8C
	0x039B46CC B 0x39B46A8
	0x039B46D0 ADRP X8, 0x79E000
	0x039B46D4 LDR X8, [X8]
	0x039B46D8 ADD X0, X31, 0x18
	0x039B46DC LDR X1, [X8]
	0x039B46E0 BL 0x2C0B1EC
	0x039B46E4 LDR X0, [X19 + 0x50]
	0x039B46E8 CBZ X0, 0x39B4760
	0x039B46EC ADRP X8, 0x79D000
	0x039B46F0 LDR X8, [X8 + 0xFD8]
	0x039B46F4 LDR X1, [X8]
	0x039B46F8 BL 0x2AA5220
	0x039B46FC LDP X20, X19, [X31 + 0xC0]
	0x039B4700 LDP X22, X21, [X31 + 0xB0]
	0x039B4704 LDP X24, X23, [X31 + 0xA0]
	0x039B4708 LDP X26, X25, [X31 + 0x90]
	0x039B470C LDP X28, X27, [X31 + 0x80]
	0x039B4710 LDP X29, X30, [X31 + 0x70]
	0x039B4714 ADD X31, X31, 0xD0
	0x039B4718 RET
	0x039B471C MOV X20, X0
	0x039B4720 MOV X21, X1
	0x039B4724 MOV X22, X31
	0x039B4728 LDR X1, [X23]
	0x039B472C ADD X0, X31, 0x30
	0x039B4730 BL 0x2BC434C
	0x039B4734 MOV X1, X21
	0x039B4738 MOV X0, X20
	0x039B473C CBZ X22, 0x39B4790
	0x039B4740 MOV X0, X22
	0x039B4744 BL 0x1C16F18
	0x039B4748 BL 0x1C16F20
	0x039B474C BL 0x1C16F20
	0x039B4750 MOV X0, X22
	0x039B4754 BL 0x1C16F18
	0x039B4758 BL 0x1C16F20
	0x039B475C BL 0x1C16F28
	0x039B4760 BL 0x1C16F20
	0x039B4764 MOV X21, X1
	0x039B4768 MOV X20, X0
	0x039B476C B 0x39B4728
	0x039B4770 B 0x39B4790
	0x039B4774 B 0x39B4790
	0x039B4778 B 0x39B4790
	0x039B477C B 0x39B4790
	0x039B4780 B 0x39B4790
	0x039B4784 B 0x39B4790
	0x039B4788 B 0x39B47F0
	0x039B478C B 0x39B47F0
	0x039B4790 CMP W1, 0x1
	0x039B4794 B.NE 0x39B47C0
	0x039B4798 BL 0x3EB1AD0
	0x039B479C LDR X21, [X0]
	0x039B47A0 BL 0x3EB1AE0
	0x039B47A4 ADRP X8, 0x79E000
	0x039B47A8 LDR X8, [X8 + 0x8]
	0x039B47AC ADD X0, X31, 0x50
	0x039B47B0 LDR X1, [X8]
	0x039B47B4 BL 0x2C205A0
	0x039B47B8 CBZ X21, 0x39B4660
	0x039B47BC B 0x39B4824
	0x039B47C0 MOV X20, X0
	0x039B47C4 MOV X21, X31
	0x039B47C8 B 0x39B47D0
	0x039B47CC MOV X20, X0
	0x039B47D0 ADRP X8, 0x79E000
	0x039B47D4 LDR X8, [X8 + 0x8]
	0x039B47D8 LDR X1, [X8]
	0x039B47DC ADD X0, X31, 0x50
	0x039B47E0 BL 0x2C205A0
	0x039B47E4 CBZ X21, 0x39B4850
	0x039B47E8 MOV X0, X21
	0x039B47EC BL 0x1C16F18
	0x039B47F0 MOV X20, X0
	0x039B47F4 CMP W1, 0x1
	0x039B47F8 B.NE 0x39B482C
	0x039B47FC MOV X0, X20
	0x039B4800 BL 0x3EB1AD0
	0x039B4804 LDR X21, [X0]
	0x039B4808 BL 0x3EB1AE0
	0x039B480C ADRP X8, 0x79E000
	0x039B4810 LDR X8, [X8]
	0x039B4814 ADD X0, X31, 0x18
	0x039B4818 LDR X1, [X8]
	0x039B481C BL 0x2C0B1EC
	0x039B4820 CBZ X21, 0x39B46E4
	0x039B4824 MOV X0, X21
	0x039B4828 BL 0x1C16F18
	0x039B482C MOV X21, X31
	0x039B4830 B 0x39B4838
	0x039B4834 MOV X20, X0
	0x039B4838 ADRP X8, 0x79E000
	0x039B483C LDR X8, [X8]
	0x039B4840 LDR X1, [X8]
	0x039B4844 ADD X0, X31, 0x18
	0x039B4848 BL 0x2C0B1EC
	0x039B484C CBNZ X21, 0x39B4858
	0x039B4850 MOV X0, X20
	0x039B4854 BL 0x1D2C690
	0x039B4858 MOV X0, X21
	0x039B485C BL 0x1C16F18
	0x039B4860 BL 0x1990590
	0x039B4864 LDR W0, [X0 + 0x20]
	0x039B4868 RET
	0x039B486C STP X30, X19, [X31 - 0x10]!
	0x039B4870 MOV X19, X0
	0x039B4874 LDR X0, [X0 + 0x28]
	0x039B4878 CBZ X0, 0x39B48B0
	0x039B487C LDP W2, W8, [X19 + 0x74]
	0x039B4880 LDR X1, [X19 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xA2E000
	008 Move X21, 0x740000
	009 Move X22, 0x740000
	010 Move W8, [X20+3152]
	011 Move X21, [X21+2512]
	012 Move X22, [X22+2704]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x740000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0x740000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x740000
	025 Move X0, [X0+2704]
	026 Call 0x1C17CF4
	027 Move X0, 0x79E000
	028 Move X0, [X0+3880]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3152], W8
	032 Move X0, [X21]
	033 Move W1, 5
	034 Call 0x1C17D6C
	035 Move X20, X0
	036 Move V0, [X19]
	037 Move X0, [X22]
	038 Add X1, X31, 28
	039 Move [X31+28], S0
	040 Call 0x1C17E04
	041 Compare X20, 0
	042 JumpIfEqual {143}
	043 Move X21, X0
	044 Compare X0, 0
	045 JumpIfEqual {52}
	046 Move X8, [X20]
	047 Move X0, X21
	048 Move X1, [X8+64]
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {140}
	052 Move W8, [X20+24]
	053 Compare W8, 0
	054 JumpIfEqual {139}
	055 Move [X20+32], X21
	056 Move V0, [X19+4]
	057 Move X0, [X22]
	058 Add X1, X31, 24
	059 Move [X31+24], S0
	060 Call 0x1C17E04
	061 Move X21, X0
	062 Compare X0, 0
	063 JumpIfEqual {70}
	064 Move X8, [X20]
	065 Move X0, X21
	066 Move X1, [X8+64]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {140}
	070 Move W8, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X22, 0x740000
	073 Move X22, [X22+2904]
	074 Move [X20+40], X21
	075 Move W8, [X19+8]
	076 Add X1, X31, 12
	077 Move X0, [X22]
	078 Move [X31+12], W8
	079 Call 0x1C17E04
	080 Move X21, X0
	081 Compare X0, 0
	082 JumpIfEqual {89}
	083 Move X8, [X20]
	084 Move X0, X21
	085 Move X1, [X8+64]
	086 Call 0x1C17E00
	087 Compare X0, 0
	088 JumpIfEqual {140}
	089 Move W8, [X20+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move [X20+48], X21
	092 Move W8, [X19+9]
	093 Move X0, [X22]
	094 Add X1, X31, 8
	095 Move [X31+8], W8
	096 Call 0x1C17E04
	097 Move X21, X0
	098 Compare X0, 0
	099 JumpIfEqual {106}
	100 Move X8, [X20]
	101 Move X0, X21
	102 Move X1, [X8+64]
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {140}
	106 Move W8, [X20+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X20+56], X21
	109 Move W8, [X19+10]
	110 Move X0, [X22]
	111 Add X1, X31, 4
	112 Move [X31+4], W8
	113 Call 0x1C17E04
	114 Move X19, X0
	115 Compare X0, 0
	116 JumpIfEqual {123}
	117 Move X8, [X20]
	118 Move X0, X19
	119 Move X1, [X8+64]
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {140}
	123 Move W8, [X20+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, 0x79E000
	126 Move X8, [X8+3880]
	127 Move [X20+64], X19
	128 Move X1, X20
	129 Move X2, X31
	130 Move X0, [X8]
	131 Call String.Format, X0, X1
	132 Move X20, [X31+48]
	133 Move X19, [X31+56]
	134 Move X22, [X31+32]
	135 Move X21, [X31+40]
	136 Move X30, [X31+16]
	137 Add X31, X31, 64
	138 Return X0
	139 Call 0x1C17F28
	140 Call 0x1C17F44
	141 Move X1, X31
	142 Call 0x1C17DEC
	143 Call 0x1C17F20

