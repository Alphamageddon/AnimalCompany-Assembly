Type: UnityEngine.Rendering.VolumeParameter`1

Method: T get_value()

Disassembly:
	0x02849CC4 MOV V0.16B, V9.16B
	0x02849CC8 MOV X1, X31

ISIL:
	001 Move W0, [X0+17]
	002 Return X0

Method: System.Void set_value(T value)

Disassembly:
	0x02849CCC BL 0x338FDC0
	0x02849CD0 TBZ X0, 0x0, 0x2849CE8
	0x02849CD4 ADD X0, X19, 0xC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+17], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x02849CD8 MOV V0.16B, V8.16B
	0x02849CDC MOV X1, X31
	0x02849CE0 BL 0x338FDC0
	0x02849CE4 B 0x2849CEC
	0x02849CE8 MOV W0, W31
	0x02849CEC LDP X20, X19, [X31 + 0x50]
	0x02849CF0 LDR X30, [X31 + 0x40]
	0x02849CF4 LDP D9, D8, [X31 + 0x30]
	0x02849CF8 LDP D11, D10, [X31 + 0x20]
	0x02849CFC AND W0, W0, 0x1
	0x02849D00 ADD X31, X31, 0x60

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call VolumeParameter..ctor, X0
	006 Move X8, [X19]
	007 Move [X19+17], W31
	008 Move X0, X19
	009 Move W1, W31
	010 Move X3, [X8+408]
	011 Move X2, [X8+416]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X3

Method: System.Void .ctor(T value, System.Boolean overrideState)

Disassembly:
	0x02849D04 RET
	0x02849D08 STP D11, D10, [X31 - 0x30]!
	0x02849D0C STP D9, D8, [X31 + 0x10]
	0x02849D10 STP X30, X19, [X31 + 0x20]
	0x02849D14 LDR X8, [X1 + 0x20]
	0x02849D18 MOV V8.16B, V3.16B
	0x02849D1C MOV V9.16B, V2.16B
	0x02849D20 MOV V10.16B, V1.16B
	0x02849D24 LDRB W9, [X8 + 0x135]
	0x02849D28 MOV V11.16B, V0.16B
	0x02849D2C MOV X19, X0
	0x02849D30 TBNZ X9, 0x0, 0x2849D40
	0x02849D34 MOV X0, X8
	0x02849D38 BL 0x1C5C684
	0x02849D3C MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 And W21, W1, 1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X20, X0
	009 Call VolumeParameter..ctor, X0
	010 Move X8, [X20]
	011 Move [X20+17], W21
	012 And W1, W19, 1
	013 Move X0, X20
	014 Move X3, [X8+408]
	015 Move X2, [X8+416]
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Move X21, [X31+40]
	020 CallNoReturn X3

Method: System.Void Interp(UnityEngine.Rendering.VolumeParameter from, UnityEngine.Rendering.VolumeParameter to, System.Single t)

Disassembly:
	0x02849D40 LDR X8, [X8 + 0xC0]
	0x02849D44 MOV X0, X19
	0x02849D48 MOV V0.16B, V11.16B
	0x02849D4C MOV V1.16B, V10.16B
	0x02849D50 LDR X1, [X8 + 0x58]
	0x02849D54 MOV V2.16B, V9.16B
	0x02849D58 MOV V3.16B, V8.16B
	0x02849D5C BL 0x2849BA4
	0x02849D60 LDP X30, X19, [X31 + 0x20]
	0x02849D64 LDP D9, D8, [X31 + 0x10]
	0x02849D68 ORN W8, W31, W0, 0x0
	0x02849D6C AND W0, W8, 0x1
	0x02849D70 LDP D11, D10, [X31], #0x30
	0x02849D74 RET
	0x02849D78 STR X30, [X31 - 0x20]!
	0x02849D7C STP X20, X19, [X31 + 0x10]
	0x02849D80 CBZ X1, 0x2849DCC
	0x02849D84 MOV X20, X1
	0x02849D88 MOV X19, X0
	0x02849D8C CMP X0, X1
	0x02849D90 B.EQ 0x2849DD4
	0x02849D94 LDR X8, [X2 + 0x20]
	0x02849D98 LDR X8, [X8 + 0xC0]
	0x02849D9C LDR X0, [X8 + 0x28]
	0x02849DA0 BL 0x2118CEC
	0x02849DA4 CBZ X0, 0x2849DE4
	0x02849DA8 LDR X8, [X0]
	0x02849DAC LDP S6, S7, [X20 + 0x1C]
	0x02849DB0 LDP S4, S5, [X20 + 0x14]
	0x02849DB4 LDP S2, S3, [X19 + 0x1C]
	0x02849DB8 LDP S0, S1, [X19 + 0x14]
	0x02849DBC LDP X2, X1, [X8 + 0x1B8]
	0x02849DC0 LDP X20, X19, [X31 + 0x10]
	0x02849DC4 LDR X30, [X31], #0x20
	0x02849DC8 BR X2
	0x02849DCC MOV W0, W31
	0x02849DD0 B 0x2849DD8
	0x02849DD4 MOVZ W0, 0x1
	0x02849DD8 LDP X20, X19, [X31 + 0x10]
	0x02849DDC LDR X30, [X31], #0x20
	0x02849DE0 RET
	0x02849DE4 BL 0x1C16F20
	0x02849DE8 STP X30, X23, [X31 - 0x30]!
	0x02849DEC STP X22, X21, [X31 + 0x10]
	0x02849DF0 STP X20, X19, [X31 + 0x20]
	0x02849DF4 ADRP X22, 0x1B91000
	0x02849DF8 LDRB W8, [X22 + 0xAD1]
	0x02849DFC MOV X20, X2
	0x02849E00 MOV X19, X1
	0x02849E04 MOV X21, X0
	0x02849E08 TBNZ X8, 0x0, 0x2849E20
	0x02849E0C ADRP X0, 0x18AA000
	0x02849E10 LDR X0, [X0 + 0x6C0]
	0x02849E14 BL 0x1C16CF4
	0x02849E18 MOVZ W8, 0x1
	0x02849E1C STRB W8, [X22 + 0xAD1]
	0x02849E20 CBZ X19, 0x2849E80
	0x02849E24 CMP X21, X19
	0x02849E28 B.EQ 0x2849E88
	0x02849E2C MOV X0, X19
	0x02849E30 MOV X1, X31
	0x02849E34 BL 0x33BE520
	0x02849E38 CBZ X21, 0x2849F08
	0x02849E3C MOV X22, X0
	0x02849E40 MOV X0, X21
	0x02849E44 MOV X1, X31
	0x02849E48 BL 0x33BE520
	0x02849E4C ADRP X8, 0x18AA000
	0x02849E50 LDR X8, [X8 + 0x6C0]
	0x02849E54 MOV X23, X0
	0x02849E58 LDR X8, [X8]
	0x02849E5C LDR W9, [X8 + 0xE0]
	0x02849E60 CBNZ W9, 0x2849E6C
	0x02849E64 MOV X0, X8
	0x02849E68 BL 0x1C16DFC
	0x02849E6C MOV X0, X22
	0x02849E70 MOV X1, X23
	0x02849E74 MOV X2, X31
	0x02849E78 BL 0x3395F0C
	0x02849E7C TBZ X0, 0x0, 0x2849E9C
	0x02849E80 MOV W0, W31
	0x02849E84 B 0x2849E8C
	0x02849E88 MOVZ W0, 0x1
	0x02849E8C LDP X20, X19, [X31 + 0x20]
	0x02849E90 LDP X22, X21, [X31 + 0x10]
	0x02849E94 LDP X30, X23, [X31], #0x30
	0x02849E98 RET
	0x02849E9C LDR X8, [X20 + 0x20]
	0x02849EA0 LDR X8, [X8 + 0xC0]
	0x02849EA4 LDR X1, [X8]
	0x02849EA8 LDRB W8, [X1 + 0x135]
	0x02849EAC TBNZ X8, 0x0, 0x2849EBC
	0x02849EB0 MOV X0, X1
	0x02849EB4 BL 0x1C5C684
	0x02849EB8 MOV X1, X0
	0x02849EBC LDR X8, [X19]
	0x02849EC0 LDRB W9, [X1 + 0x130]
	0x02849EC4 LDRB W10, [X8 + 0x130]
	0x02849EC8 CMP W10, W9
	0x02849ECC B.CC 0x2849F0C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X21, X3
	009 Move V8, V0
	010 Move X20, X2
	011 Move X8, [X8+192]
	012 Move X22, X1
	013 Move X19, X0
	014 Move X8, [X8]
	015 Move W9, [X8+309]
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {23}
	020 Move X0, X8
	021 Call 0x1C5D684
	022 Move X8, X0
	023 Compare X22, 0
	024 JumpIfEqual {112}
	025 Move X9, [X22]
	026 Move W10, [X8+304]
	027 Move W11, [X9+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X21+32]
	034 Move X8, [X8+192]
	035 Move X0, [X8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X22]
	043 Move W9, [X0+304]
	044 Move W10, [X8+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X31
	047 Move X8, [X8+200]
	048 Add X8, X8, X9
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move X8, [X0]
	053 Move X9, [X8+536]
	054 Move X1, [X8+544]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X21+32]
	057 Move W22, W0
	058 Move X8, [X8+192]
	059 Move X8, [X8]
	060 Move W9, [X8+309]
	061 Move TEMP, X9
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {68}
	065 Move X0, X8
	066 Call 0x1C5D684
	067 Move X8, X0
	068 Compare X20, 0
	069 JumpIfEqual {112}
	070 Move X9, [X20]
	071 Move W10, [X8+304]
	072 Move W11, [X9+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X9, [X9+200]
	075 Add X10, X9, X10
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X21+32]
	079 Move X8, [X8+192]
	080 Move X0, [X8]
	081 Move W8, [X0+309]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Call 0x1C5D684
	087 Move X8, [X20]
	088 Move X9, [X8+200]
	089 Move W8, [X0+304]
	090 Add X8, X9, X8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Move X8, [X0]
	095 Move X9, [X8+536]
	096 Move X1, [X8+544]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X19]
	099 And W2, W0, 1
	100 And W1, W22, 1
	101 Move X0, X19
	102 Move X4, [X8+568]
	103 Move X3, [X8+576]
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+8]
	109 Move V0, V8
	110 Move V8, [X31+48]
	111 CallNoReturn X4
	112 Call 0x1C17F20

Method: System.Void Interp(T from, T to, System.Single t)

Disassembly:
	0x02849ED0 LDR X8, [X8 + 0xC8]
	0x02849ED4 ADD X8, X8, X9, 0x3, LSL
	0x02849ED8 LDUR X8, [X8 - 0x8]
	0x02849EDC CMP X8, X1
	0x02849EE0 B.NE 0x2849F0C
	0x02849EE4 LDR X8, [X20 + 0x20]
	0x02849EE8 MOV X0, X21
	0x02849EEC MOV X1, X19
	0x02849EF0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 And W8, W8, 1
	007 Move [X0+17], W8
	008 Move X30, [X31+16]
	009 Return 
	010 Call 0x1C17F20

Method: System.Void Override(T x)

Disassembly:
	0x02849EF4 LDR X8, [X8 + 0xC0]
	0x02849EF8 LDP X22, X21, [X31 + 0x10]
	0x02849EFC LDR X2, [X8 + 0x68]
	0x02849F00 LDP X30, X23, [X31], #0x30
	0x02849F04 B 0x2849D78
	0x02849F08 BL 0x1C16F20
	0x02849F0C MOV X0, X19
	0x02849F10 BL 0x1C171E0
	0x02849F14 STP D11, D10, [X31 - 0x40]!
	0x02849F18 STP D9, D8, [X31 + 0x10]
	0x02849F1C STR X30, [X31 + 0x20]
	0x02849F20 STP X20, X19, [X31 + 0x30]
	0x02849F24 CBZ X0, 0x2849FCC
	0x02849F28 LDR X8, [X1 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {18}
	006 Move X8, [X0]
	007 And W20, W1, 1
	008 Move W1, 1
	009 Move X19, X0
	010 Move X9, [X8+408]
	011 Move X2, [X8+416]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move [X19+17], W20
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return 
	018 Call 0x1C17F20

Method: System.Void SetValue(UnityEngine.Rendering.VolumeParameter parameter)

Disassembly:
	0x02849F2C MOV X19, X1
	0x02849F30 MOV X20, X0
	0x02849F34 LDR X8, [X8 + 0xC0]
	0x02849F38 LDR X1, [X8 + 0x70]
	0x02849F3C BL 0x22ABB08
	0x02849F40 LDR X8, [X20]
	0x02849F44 MOV X0, X20
	0x02849F48 MOV V8.16B, V0.16B
	0x02849F4C MOV V9.16B, V1.16B
	0x02849F50 LDP X9, X1, [X8 + 0x188]
	0x02849F54 MOV V10.16B, V2.16B
	0x02849F58 MOV V11.16B, V3.16B
	0x02849F5C BLR X9
	0x02849F60 LDR X8, [X19 + 0x20]
	0x02849F64 MOV W19, W0
	0x02849F68 LDR X8, [X8 + 0xC0]
	0x02849F6C LDR X8, [X8]
	0x02849F70 LDRB W9, [X8 + 0x135]
	0x02849F74 TBNZ X9, 0x0, 0x2849F84
	0x02849F78 MOV X0, X8
	0x02849F7C BL 0x1C5C684
	0x02849F80 MOV X8, X0
	0x02849F84 MOV X0, X8
	0x02849F88 BL 0x1C16F10
	0x02849F8C MOV X1, X31
	0x02849F90 MOV X20, X0
	0x02849F94 BL 0x39F2970
	0x02849F98 LDR X8, [X20]
	0x02849F9C STP S8, S9, [X20 + 0x14]
	0x02849FA0 STP S10, S11, [X20 + 0x1C]
	0x02849FA4 AND W1, W19, 0x1
	0x02849FA8 LDP X9, X2, [X8 + 0x198]
	0x02849FAC MOV X0, X20
	0x02849FB0 BLR X9
	0x02849FB4 MOV X0, X20
	0x02849FB8 LDP X20, X19, [X31 + 0x30]
	0x02849FBC LDR X30, [X31 + 0x20]
	0x02849FC0 LDP D9, D8, [X31 + 0x10]
	0x02849FC4 LDP D11, D10, [X31], #0x40
	0x02849FC8 RET
	0x02849FCC BL 0x1C16F20
	0x02849FD0 STR X30, [X31 - 0x10]!
	0x02849FD4 CBZ X0, 0x2849FE8
	0x02849FD8 LDP S0, S1, [X0 + 0x14]
	0x02849FDC LDP S2, S3, [X0 + 0x1C]
	0x02849FE0 LDR X30, [X31], #0x10
	0x02849FE4 RET
	0x02849FE8 BL 0x1C16F20
	0x02849FEC LDR W0, [X0 + 0x14]
	0x02849FF0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X21, X2
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8]
	011 Move W8, [X1+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X1
	017 Call 0x1C5D684
	018 Move X1, X0
	019 Compare X19, 0
	020 JumpIfEqual {57}
	021 Move X8, [X19]
	022 Move W9, [X1+304]
	023 Move W10, [X8+304]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X8+200]
	026 Add X8, X8, X9
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X21+32]
	030 Move X8, [X8+192]
	031 Move X1, [X8]
	032 Move W8, [X1+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X1
	038 Call 0x1C5D684
	039 Move X1, X0
	040 Move X8, [X19]
	041 Move W9, [X1+304]
	042 Move W10, [X8+304]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8+200]
	045 Add X8, X8, X9
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, [X19+17]
	049 Move [X20+17], W8
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, X19
	056 Call 0x1C181E0
	057 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x02849FF4 STR W1, [X0 + 0x14]
	0x02849FF8 RET
	0x02849FFC STP X30, X19, [X31 - 0x10]!
	0x0284A000 MOV X1, X31
	0x0284A004 MOV X19, X0
	0x0284A008 BL 0x39F2970
	0x0284A00C LDR X8, [X19]
	0x0284A010 STR W31, [X19 + 0x14]
	0x0284A014 MOV X0, X19
	0x0284A018 MOV W1, W31
	0x0284A01C LDP X3, X2, [X8 + 0x198]
	0x0284A020 LDP X30, X19, [X31], #0x10
	0x0284A024 BR X3
	0x0284A028 STP X30, X21, [X31 - 0x20]!
	0x0284A02C STP X20, X19, [X31 + 0x10]
	0x0284A030 MOV W20, W1
	0x0284A034 MOV X1, X31
	0x0284A038 MOV W19, W2
	0x0284A03C MOV X21, X0
	0x0284A040 BL 0x39F2970
	0x0284A044 LDR X8, [X21]
	0x0284A048 STR W20, [X21 + 0x14]
	0x0284A04C AND W1, W19, 0x1
	0x0284A050 LDP X20, X19, [X31 + 0x10]
	0x0284A054 LDP X3, X2, [X8 + 0x198]
	0x0284A058 MOV X0, X21
	0x0284A05C LDP X30, X21, [X31], #0x20
	0x0284A060 BR X3
	0x0284A064 STR D8, [X31 - 0x30]!
	0x0284A068 STR X30, [X31 + 0x8]
	0x0284A06C STP X22, X21, [X31 + 0x10]
	0x0284A070 STP X20, X19, [X31 + 0x20]
	0x0284A074 LDR X8, [X3 + 0x20]
	0x0284A078 MOV X21, X3
	0x0284A07C MOV V8.16B, V0.16B
	0x0284A080 MOV X20, X2
	0x0284A084 LDR X8, [X8 + 0xC0]
	0x0284A088 MOV X22, X1
	0x0284A08C MOV X19, X0
	0x0284A090 LDR X8, [X8]
	0x0284A094 LDRB W9, [X8 + 0x135]
	0x0284A098 TBNZ X9, 0x0, 0x284A0A8
	0x0284A09C MOV X0, X8
	0x0284A0A0 BL 0x1C5C684
	0x0284A0A4 MOV X8, X0
	0x0284A0A8 CBZ X22, 0x284A1F0
	0x0284A0AC LDR X9, [X22]
	0x0284A0B0 LDRB W10, [X8 + 0x130]
	0x0284A0B4 LDRB W11, [X9 + 0x130]
	0x0284A0B8 CMP W11, W10
	0x0284A0BC B.CC 0x284A1F0
	0x0284A0C0 LDR X9, [X9 + 0xC8]
	0x0284A0C4 ADD X9, X9, X10, 0x3, LSL
	0x0284A0C8 LDUR X9, [X9 - 0x8]
	0x0284A0CC CMP X9, X8
	0x0284A0D0 B.NE 0x284A1F0
	0x0284A0D4 LDR X8, [X21 + 0x20]
	0x0284A0D8 LDR X8, [X8 + 0xC0]
	0x0284A0DC LDR X0, [X8]
	0x0284A0E0 LDRB W8, [X0 + 0x135]
	0x0284A0E4 TBNZ X8, 0x0, 0x284A0EC
	0x0284A0E8 BL 0x1C5C684
	0x0284A0EC LDR X8, [X22]
	0x0284A0F0 LDRB W9, [X0 + 0x130]
	0x0284A0F4 LDRB W10, [X8 + 0x130]
	0x0284A0F8 CMP W10, W9
	0x0284A0FC B.CS 0x284A108
	0x0284A100 MOV X0, X31
	0x0284A104 B 0x284A11C
	0x0284A108 LDR X8, [X8 + 0xC8]
	0x0284A10C ADD X8, X8, X9, 0x3, LSL
	0x0284A110 LDUR X8, [X8 - 0x8]
	0x0284A114 CMP X8, X0
	0x0284A118 CSEL X0, X22, X31, EQ
	0x0284A11C LDR X8, [X0]
	0x0284A120 LDR X9, [X8 + 0x218]
	0x0284A124 LDR X1, [X8 + 0x220]
	0x0284A128 BLR X9
	0x0284A12C LDR X8, [X21 + 0x20]
	0x0284A130 MOV W22, W0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1B91000
	009 Move W8, [X21+2763]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x18AA000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2763], W8
	021 Move [X31+8], W31
	022 Compare X20, 0
	023 JumpIfEqual {98}
	024 Move X8, [X20]
	025 Move X23, 0x18AA000
	026 Move X0, X20
	027 Move X9, [X8+392]
	028 Move X1, [X8+400]
	029 Move X23, [X23+2904]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X23]
	032 And W9, W0, 1
	033 Move [X31+12], W9
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Add X0, X31, 12
	040 Move X1, X31
	041 Call Boolean.GetHashCode, X0
	042 Move X8, [X19+32]
	043 Move W21, W0
	044 Move X8, [X8+192]
	045 Move X8, [X8+40]
	046 Move X0, X8
	047 Call 0x21199DC
	048 Move X8, [X20]
	049 Move X22, X0
	050 Move X0, X20
	051 Move X9, [X8+536]
	052 Move X1, [X8+544]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move [X31+8], W31
	055 Compare X22, 0
	056 JumpIfEqual {98}
	057 Move X8, [X22]
	058 And W1, W0, 1
	059 Move X0, X22
	060 Move W2, W31
	061 Move X9, [X8+440]
	062 Move X3, [X8+448]
	063 Add W21, W21, 391
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {89}
	069 Move X8, [X20]
	070 Move X0, X20
	071 Move X9, [X8+536]
	072 Move X1, [X8+544]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, [X23]
	075 And W9, W0, 1
	076 Move [X31+8], W9
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, [X19+32]
	083 Add X0, X31, 8
	084 Move X8, [X8+192]
	085 Move X1, [X8+72]
	086 Call Boolean.GetHashCode, X0
	087 Move W8, 23
	088 NotImplemented "Instruction MADD not yet implemented."
	089 Move W0, W21
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X30, [X31+16]
	095 Move X23, [X31+24]
	096 Add X31, X31, 64
	097 Return X0
	098 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0284A134 LDR X8, [X8 + 0xC0]
	0x0284A138 LDR X8, [X8]
	0x0284A13C LDRB W9, [X8 + 0x135]
	0x0284A140 TBNZ X9, 0x0, 0x284A150
	0x0284A144 MOV X0, X8
	0x0284A148 BL 0x1C5C684
	0x0284A14C MOV X8, X0
	0x0284A150 CBZ X20, 0x284A1F0
	0x0284A154 LDR X9, [X20]
	0x0284A158 LDRB W10, [X8 + 0x130]
	0x0284A15C LDRB W11, [X9 + 0x130]
	0x0284A160 CMP W11, W10
	0x0284A164 B.CC 0x284A1F0
	0x0284A168 LDR X9, [X9 + 0xC8]
	0x0284A16C ADD X10, X9, X10, 0x3, LSL
	0x0284A170 LDUR X10, [X10 - 0x8]
	0x0284A174 CMP X10, X8
	0x0284A178 B.NE 0x284A1F0
	0x0284A17C LDR X8, [X21 + 0x20]
	0x0284A180 LDR X8, [X8 + 0xC0]
	0x0284A184 LDR X0, [X8]
	0x0284A188 LDRB W8, [X0 + 0x135]
	0x0284A18C TBNZ X8, 0x0, 0x284A19C
	0x0284A190 BL 0x1C5C684
	0x0284A194 LDR X8, [X20]
	0x0284A198 LDR X9, [X8 + 0xC8]
	0x0284A19C LDRB W8, [X0 + 0x130]
	0x0284A1A0 ADD X8, X9, X8, 0x3, LSL
	0x0284A1A4 LDUR X8, [X8 - 0x8]
	0x0284A1A8 CMP X8, X0
	0x0284A1AC CSEL X0, X20, X31, EQ
	0x0284A1B0 LDR X8, [X0]
	0x0284A1B4 LDR X9, [X8 + 0x218]
	0x0284A1B8 LDR X1, [X8 + 0x220]
	0x0284A1BC BLR X9
	0x0284A1C0 LDR X8, [X19]
	0x0284A1C4 MOV W2, W0
	0x0284A1C8 MOV X0, X19
	0x0284A1CC MOV W1, W22
	0x0284A1D0 LDR X4, [X8 + 0x238]
	0x0284A1D4 LDR X3, [X8 + 0x240]
	0x0284A1D8 LDP X20, X19, [X31 + 0x20]
	0x0284A1DC LDP X22, X21, [X31 + 0x10]
	0x0284A1E0 LDR X30, [X31 + 0x8]
	0x0284A1E4 MOV V0.16B, V8.16B
	0x0284A1E8 LDR V8, [X31], #0x30
	0x0284A1EC BR X4
	0x0284A1F0 BL 0x1C16F20
	0x0284A1F4 STR X30, [X31 - 0x10]!
	0x0284A1F8 CBZ X0, 0x284A210
	0x0284A1FC FCMP S0, 0x0
	0x0284A200 CSEL W8, W2, W1, GT
	0x0284A204 STR W8, [X0 + 0x14]
	0x0284A208 LDR X30, [X31], #0x10
	0x0284A20C RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1B91000
	009 Move X22, 0x18AA000
	010 Move X21, 0x18B0000
	011 Move W8, [X23+2764]
	012 Move X22, [X22+2904]
	013 Move X21, [X21+3224]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x18AA000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0x18B0000
	024 Move X0, [X0+3224]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2764], W8
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+536]
	031 Move X1, [X8+544]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 And W8, W0, 1
	034 Move [X31+12], W8
	035 Move X8, [X20+32]
	036 Add X1, X31, 12
	037 Move X8, [X8+192]
	038 Move X0, [X8+8]
	039 Call 0x1C17E04
	040 Move X8, [X19]
	041 Move X20, X0
	042 Move X0, X19
	043 Move X9, [X8+392]
	044 Move X1, [X8+400]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X8, [X22]
	047 And W9, W0, 1
	048 Add X1, X31, 8
	049 Move [X31+8], W9
	050 Move X0, X8
	051 Call 0x1C17E04
	052 Move X8, [X21]
	053 Move X2, X0
	054 Move X1, X20
	055 Move X3, X31
	056 Move X0, X8
	057 Call String.Format, X0, X1, X2
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X30, [X31+16]
	063 Move X23, [X31+24]
	064 Add X31, X31, 64
	065 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.VolumeParameter`1<T> lhs, T rhs)

Disassembly:
	0x0284A210 BL 0x1C16F20
	0x0284A214 STR X30, [X31 - 0x20]!
	0x0284A218 STP X20, X19, [X31 + 0x10]
	0x0284A21C CBZ X0, 0x284A248
	0x0284A220 LDR X8, [X0]
	0x0284A224 MOV W19, W1
	0x0284A228 MOVZ W1, 0x1
	0x0284A22C MOV X20, X0
	0x0284A230 LDP X9, X2, [X8 + 0x198]
	0x0284A234 BLR X9
	0x0284A238 STR W19, [X20 + 0x14]
	0x0284A23C LDP X20, X19, [X31 + 0x10]
	0x0284A240 LDR X30, [X31], #0x20
	0x0284A244 RET
	0x0284A248 BL 0x1C16F20
	0x0284A24C STP X30, X21, [X31 - 0x20]!
	0x0284A250 STP X20, X19, [X31 + 0x10]
	0x0284A254 LDR X8, [X2 + 0x20]
	0x0284A258 MOV X19, X1
	0x0284A25C MOV X21, X2
	0x0284A260 MOV X20, X0
	0x0284A264 LDR X8, [X8 + 0xC0]
	0x0284A268 LDR X1, [X8]
	0x0284A26C LDRB W8, [X1 + 0x135]
	0x0284A270 TBNZ X8, 0x0, 0x284A280
	0x0284A274 MOV X0, X1
	0x0284A278 BL 0x1C5C684
	0x0284A27C MOV X1, X0
	0x0284A280 CBZ X19, 0x284A310
	0x0284A284 LDR X8, [X19]
	0x0284A288 LDRB W9, [X1 + 0x130]
	0x0284A28C LDRB W10, [X8 + 0x130]
	0x0284A290 CMP W10, W9
	0x0284A294 B.CC 0x284A308
	0x0284A298 LDR X8, [X8 + 0xC8]
	0x0284A29C ADD X8, X8, X9, 0x3, LSL
	0x0284A2A0 LDUR X8, [X8 - 0x8]
	0x0284A2A4 CMP X8, X1
	0x0284A2A8 B.NE 0x284A308
	0x0284A2AC LDR X8, [X21 + 0x20]
	0x0284A2B0 LDR X8, [X8 + 0xC0]
	0x0284A2B4 LDR X1, [X8]
	0x0284A2B8 LDRB W8, [X1 + 0x135]
	0x0284A2BC TBNZ X8, 0x0, 0x284A2CC
	0x0284A2C0 MOV X0, X1
	0x0284A2C4 BL 0x1C5C684
	0x0284A2C8 MOV X1, X0
	0x0284A2CC LDR X8, [X19]
	0x0284A2D0 LDRB W9, [X1 + 0x130]
	0x0284A2D4 LDRB W10, [X8 + 0x130]
	0x0284A2D8 CMP W10, W9
	0x0284A2DC B.CC 0x284A308
	0x0284A2E0 LDR X8, [X8 + 0xC8]
	0x0284A2E4 ADD X8, X8, X9, 0x3, LSL
	0x0284A2E8 LDUR X8, [X8 - 0x8]
	0x0284A2EC CMP X8, X1
	0x0284A2F0 B.NE 0x284A308
	0x0284A2F4 LDR W8, [X19 + 0x14]
	0x0284A2F8 STR W8, [X20 + 0x14]
	0x0284A2FC LDP X20, X19, [X31 + 0x10]
	0x0284A300 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B91000
	007 Move W8, [X22+2765]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x18AA000
	016 Move X0, [X0+2904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2765], W8
	020 Compare X20, 0
	021 JumpIfEqual {68}
	022 Move X8, [X20]
	023 And W22, W21, 1
	024 Move X21, 0x18AA000
	025 Move X0, X20
	026 Move X9, [X8+536]
	027 Move X1, [X8+544]
	028 Move X21, [X21+2904]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X20]
	031 Move X0, X20
	032 Move X9, [X8+536]
	033 Move X1, [X8+544]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 And W8, W0, 1
	036 Move [X31+12], W8
	037 Move [X31+8], W22
	038 Move X0, [X19+32]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Add X1, X31, 8
	047 Move X0, [X8+8]
	048 Call 0x1C17E04
	049 Move X8, [X21]
	050 Move X20, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, [X19+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Add X0, X31, 12
	065 Move X1, X20
	066 Move X2, [X8+80]
	067 Call Boolean.Equals, X0, X1
	068 Move W0, W31
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 And W0, W0, 1
	074 Move X30, [X31+48]
	075 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Rendering.VolumeParameter`1<T> lhs, T rhs)

Disassembly:
	0x0284A304 RET
	0x0284A308 MOV X0, X19
	0x0284A30C BL 0x1C171E0
	0x0284A310 BL 0x1C16F20
	0x0284A314 STR X30, [X31 - 0x30]!
	0x0284A318 STP X22, X21, [X31 + 0x10]
	0x0284A31C STP X20, X19, [X31 + 0x20]
	0x0284A320 ADRP X21, 0x1B90000
	0x0284A324 LDRB W8, [X21 + 0xAD2]
	0x0284A328 MOV X19, X1
	0x0284A32C MOV X20, X0
	0x0284A330 TBNZ X8, 0x0, 0x284A348
	0x0284A334 ADRP X0, 0x18A9000
	0x0284A338 LDR X0, [X0 + 0xB58]
	0x0284A33C BL 0x1C16CF4
	0x0284A340 MOVZ W8, 0x1
	0x0284A344 STRB W8, [X21 + 0xAD2]
	0x0284A348 STR W31, [X31 + 0x8]
	0x0284A34C CBZ X20, 0x284A430
	0x0284A350 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X2, [X8+88]
	019 Call 0x284A210, X0, X1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction ORN not yet implemented."
	023 And W0, W8, 1
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.VolumeParameter`1<T> other)

Disassembly:
	0x0284A354 ADRP X21, 0x18A9000
	0x0284A358 MOV X0, X20
	0x0284A35C LDP X9, X1, [X8 + 0x188]
	0x0284A360 LDR X21, [X21 + 0xB58]
	0x0284A364 BLR X9
	0x0284A368 LDR X8, [X21]
	0x0284A36C AND W9, W0, 0x1
	0x0284A370 STRB W9, [X31 + 0xC]
	0x0284A374 LDR W9, [X8 + 0xE0]
	0x0284A378 CBNZ W9, 0x284A384
	0x0284A37C MOV X0, X8
	0x0284A380 BL 0x1C16DFC
	0x0284A384 ADD X0, X31, 0xC
	0x0284A388 MOV X1, X31
	0x0284A38C BL 0x33176B4
	0x0284A390 LDR X8, [X19 + 0x20]
	0x0284A394 MOV W21, W0
	0x0284A398 LDR X8, [X8 + 0xC0]
	0x0284A39C LDR X8, [X8 + 0x28]
	0x0284A3A0 MOV X0, X8
	0x0284A3A4 BL 0x211A010
	0x0284A3A8 LDR X8, [X20]
	0x0284A3AC MOV X22, X0
	0x0284A3B0 MOV X0, X20
	0x0284A3B4 LDR X9, [X8 + 0x218]
	0x0284A3B8 LDR X1, [X8 + 0x220]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Move X19, X1
	007 Move X20, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X2+32]
	010 Move X8, [X8+192]
	011 Move X0, [X8+40]
	012 Call 0x21199DC
	013 Compare X0, 0
	014 JumpIfEqual {30}
	015 Move X8, [X0]
	016 Move W2, [X19+17]
	017 Move W1, [X20+17]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X4, [X8+440]
	021 Move X3, [X8+448]
	022 Move X30, [X31+32]
	023 CallNoReturn X4
	024 Move W0, W31
	025 Move W0, 1
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x0284A3BC BLR X9
	0x0284A3C0 STR W31, [X31 + 0x8]
	0x0284A3C4 CBZ X22, 0x284A430
	0x0284A3C8 LDR X8, [X22]
	0x0284A3CC MOV W1, W0
	0x0284A3D0 MOV X0, X22
	0x0284A3D4 MOV W2, W31
	0x0284A3D8 LDP X9, X3, [X8 + 0x1B8]
	0x0284A3DC ADD W21, W21, 0x187
	0x0284A3E0 BLR X9
	0x0284A3E4 TBNZ X0, 0x0, 0x284A41C
	0x0284A3E8 LDR X8, [X20]
	0x0284A3EC MOV X0, X20
	0x0284A3F0 LDR X9, [X8 + 0x218]
	0x0284A3F4 LDR X1, [X8 + 0x220]
	0x0284A3F8 BLR X9
	0x0284A3FC STR W0, [X31 + 0x8]
	0x0284A400 LDR X8, [X19 + 0x20]
	0x0284A404 ADD X0, X31, 0x8
	0x0284A408 LDR X8, [X8 + 0xC0]
	0x0284A40C LDR X1, [X8 + 0x48]
	0x0284A410 BL 0x337B6D8
	0x0284A414 MOVZ W8, 0x17
	0x0284A418 MADD W21, W21, W8, W0
	0x0284A41C MOV W0, W21
	0x0284A420 LDP X20, X19, [X31 + 0x20]
	0x0284A424 LDP X22, X21, [X31 + 0x10]
	0x0284A428 LDR X30, [X31], #0x30
	0x0284A42C RET
	0x0284A430 BL 0x1C16F20
	0x0284A434 SUB X31, X31, 0x40
	0x0284A438 STP X30, X23, [X31 + 0x10]
	0x0284A43C STP X22, X21, [X31 + 0x20]
	0x0284A440 STP X20, X19, [X31 + 0x30]
	0x0284A444 ADRP X23, 0x1B90000
	0x0284A448 ADRP X22, 0x18A9000
	0x0284A44C ADRP X21, 0x18AF000
	0x0284A450 LDRB W8, [X23 + 0xAD3]
	0x0284A454 LDR X22, [X22 + 0xB58]
	0x0284A458 LDR X21, [X21 + 0xC98]
	0x0284A45C MOV X20, X1
	0x0284A460 MOV X19, X0
	0x0284A464 TBNZ X8, 0x0, 0x284A488
	0x0284A468 ADRP X0, 0x18A9000
	0x0284A46C LDR X0, [X0 + 0xB58]
	0x0284A470 BL 0x1C16CF4
	0x0284A474 ADRP X0, 0x18AF000
	0x0284A478 LDR X0, [X0 + 0xC98]
	0x0284A47C BL 0x1C16CF4
	0x0284A480 MOVZ W8, 0x1
	0x0284A484 STRB W8, [X23 + 0xAD3]
	0x0284A488 LDR X8, [X19]
	0x0284A48C MOV X0, X19
	0x0284A490 LDR X9, [X8 + 0x218]
	0x0284A494 LDR X1, [X8 + 0x220]
	0x0284A498 BLR X9
	0x0284A49C STR W0, [X31 + 0xC]
	0x0284A4A0 LDR X8, [X20 + 0x20]
	0x0284A4A4 ADD X1, X31, 0xC
	0x0284A4A8 LDR X8, [X8 + 0xC0]
	0x0284A4AC LDR X0, [X8 + 0x8]
	0x0284A4B0 BL 0x1C16E04
	0x0284A4B4 LDR X8, [X19]
	0x0284A4B8 MOV X20, X0
	0x0284A4BC MOV X0, X19
	0x0284A4C0 LDP X9, X1, [X8 + 0x188]
	0x0284A4C4 BLR X9
	0x0284A4C8 LDR X8, [X22]
	0x0284A4CC AND W9, W0, 0x1
	0x0284A4D0 ADD X1, X31, 0x8
	0x0284A4D4 STRB W9, [X31 + 0x8]
	0x0284A4D8 MOV X0, X8
	0x0284A4DC BL 0x1C16E04
	0x0284A4E0 LDR X8, [X21]
	0x0284A4E4 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1B91000
	008 Move W8, [X22+2766]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x18AA000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2766], W8
	021 Compare X19, 0
	022 JumpIfEqual {50}
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X19
	025 Move X1, X31
	026 Call "il2cpp_vm_object_is_inst", X0
	027 Compare X21, 0
	028 JumpIfEqual {91}
	029 Move X22, X0
	030 Move X0, X21
	031 Move X1, X31
	032 Call "il2cpp_vm_object_is_inst", X0
	033 Move X8, 0x18AA000
	034 Move X8, [X8+1728]
	035 Move X23, X0
	036 Move X8, [X8]
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X22
	043 Move X1, X23
	044 Move X2, X31
	045 Call Type.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {59}
	050 Move W0, W31
	051 Move W0, 1
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Move X8, [X20+32]
	060 Move X8, [X8+192]
	061 Move X1, [X8]
	062 Move W8, [X1+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X1
	068 Call 0x1C5D684
	069 Move X1, X0
	070 Move X8, [X19]
	071 Move W9, [X1+304]
	072 Move W10, [X8+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+200]
	075 Add X8, X8, X9
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, [X20+32]
	079 Move X0, X21
	080 Move X1, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X8, [X8+192]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X2, [X8+104]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Call 0x284A354, X0, X1
	090 Return X0
	091 Call 0x1C17F20
	092 Move X0, X19
	093 Call 0x1C181E0

Method: System.Object Clone()

Disassembly:
	0x0284A4E8 MOV X1, X20
	0x0284A4EC MOV X3, X31
	0x0284A4F0 MOV X0, X8
	0x0284A4F4 BL 0x3227BD4
	0x0284A4F8 LDP X20, X19, [X31 + 0x30]
	0x0284A4FC LDP X22, X21, [X31 + 0x20]
	0x0284A500 LDP X30, X23, [X31 + 0x10]
	0x0284A504 ADD X31, X31, 0x40
	0x0284A508 RET
	0x0284A50C CBZ X0, 0x284A5AC
	0x0284A510 SUB X31, X31, 0x30
	0x0284A514 STP X30, X21, [X31 + 0x10]
	0x0284A518 STP X20, X19, [X31 + 0x20]
	0x0284A51C LDR X8, [X0]
	0x0284A520 MOV W20, W1
	0x0284A524 MOV X19, X2
	0x0284A528 MOV X21, X0
	0x0284A52C LDR X9, [X8 + 0x218]
	0x0284A530 LDR X1, [X8 + 0x220]
	0x0284A534 BLR X9
	0x0284A538 LDR X8, [X21]
	0x0284A53C MOV X0, X21
	0x0284A540 LDR X9, [X8 + 0x218]
	0x0284A544 LDR X1, [X8 + 0x220]
	0x0284A548 BLR X9
	0x0284A54C STP W20, W0, [X31 + 0x8]
	0x0284A550 LDR X0, [X19 + 0x20]
	0x0284A554 LDRB W8, [X0 + 0x135]
	0x0284A558 TBNZ X8, 0x0, 0x284A560
	0x0284A55C BL 0x1C5C684
	0x0284A560 LDR X8, [X0 + 0xC0]
	0x0284A564 ADD X1, X31, 0x8
	0x0284A568 LDR X0, [X8 + 0x8]
	0x0284A56C BL 0x1C16E04
	0x0284A570 LDR X8, [X19 + 0x20]
	0x0284A574 MOV X19, X0
	0x0284A578 LDRB W9, [X8 + 0x135]
	0x0284A57C TBNZ X9, 0x0, 0x284A58C
	0x0284A580 MOV X0, X8
	0x0284A584 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {50}
	007 Move X8, [X1+32]
	008 Move X19, X1
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+112]
	012 Call 0x22ACA38, X0
	013 Move X8, [X21]
	014 Move W20, W0
	015 Move X0, X21
	016 Move X9, [X8+392]
	017 Move X1, [X8+400]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X8, [X19+32]
	020 Move W19, W0
	021 Move X8, [X8+192]
	022 Move X8, [X8]
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X0, X8
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X21, X0
	035 And W20, W20, 1
	036 Call VolumeParameter..ctor, X0
	037 Move X8, [X21]
	038 Move [X21+17], W20
	039 And W1, W19, 1
	040 Move X0, X21
	041 Move X9, [X8+408]
	042 Move X2, [X8+416]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X0, X21
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F20

Method: T op_Explicit(UnityEngine.Rendering.VolumeParameter`1<T> prop)

Disassembly:
	0x0284A588 MOV X8, X0
	0x0284A58C LDR X8, [X8 + 0xC0]
	0x0284A590 ADD X0, X31, 0xC
	0x0284A594 MOV X1, X19
	0x0284A598 LDR X2, [X8 + 0x50]
	0x0284A59C BL 0x337B650

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move W0, [X0+17]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

