Type: UnityEngine.Rendering.ProfilingSample

Method: System.Void .ctor(UnityEngine.Rendering.CommandBuffer cmd, System.String name, UnityEngine.Profiling.CustomSampler sampler = null)

Disassembly:
	0x039B2DB8 MOV X2, X24
	0x039B2DBC MOV X4, X31
	0x039B2DC0 BL 0x3227C18
	0x039B2DC4 MOV X1, X0
	0x039B2DC8 ADRP X26, 0x749000
	0x039B2DCC LDR X26, [X26 + 0x720]
	0x039B2DD0 MOV X0, X21
	0x039B2DD4 MOV X2, X31
	0x039B2DD8 BL 0x321B938
	0x039B2DDC B 0x39B3104
	0x039B2DE0 LDR W8, [X22, W19, SXTW]
	0x039B2DE4 STR W8, [X31 + 0x28]
	0x039B2DE8 ADD X0, X31, 0x28
	0x039B2DEC MOV X1, X31
	0x039B2DF0 BL 0x337B6E0
	0x039B2DF4 MOV X1, X0
	0x039B2DF8 MOV X0, X21
	0x039B2DFC MOV X2, X31
	0x039B2E00 BL 0x321B938
	0x039B2E04 B 0x39B3104
	0x039B2E08 MOV X20, X24
	0x039B2E0C ADD X24, X22, W19, 0x2, SXTW
	0x039B2E10 LDR V0, [X24]
	0x039B2E14 LDR X0, [X20]
	0x039B2E18 STR S0, [X31 + 0x24]
	0x039B2E1C ADD X1, X31, 0x24
	0x039B2E20 BL 0x1C16E04
	0x039B2E24 MOV X23, X0
	0x039B2E28 LDR V0, [X24 + 0x4]
	0x039B2E2C LDR X0, [X20]
	0x039B2E30 STR S0, [X31 + 0x20]
	0x039B2E34 ADD X1, X31, 0x20
	0x039B2E38 BL 0x1C16E04
	0x039B2E3C ADRP X8, 0x79F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA30000
	008 Move W8, [X23+3140]
	009 Move X19, X3
	010 Move X21, X2
	011 Move X22, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x742000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3140], W8
	022 Move [X20], X22
	023 Move [X20+8], X21
	024 Move [X20+16], W31
	025 Compare X22, 0
	026 JumpIfEqual {41}
	027 Move X8, 0x742000
	028 Move X8, [X8+2440]
	029 Move X0, X21
	030 Move X2, X31
	031 Move X1, [X8]
	032 Call String.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {41}
	037 Move X0, X22
	038 Move X1, X21
	039 Move X2, X31
	040 Call CommandBuffer.BeginSample, X0, X1
	041 Move [X20+24], X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: System.Void .ctor(UnityEngine.Rendering.CommandBuffer cmd, System.String format, System.Object arg)

Disassembly:
	0x039B2E40 LDR X8, [X8 + 0xEE8]
	0x039B2E44 MOV X2, X0
	0x039B2E48 LDR X0, [X8]
	0x039B2E4C MOV X1, X23
	0x039B2E50 MOV X3, X31
	0x039B2E54 BL 0x3227BD4
	0x039B2E58 MOV X1, X0
	0x039B2E5C MOV X0, X21
	0x039B2E60 MOV X2, X31
	0x039B2E64 BL 0x321B938
	0x039B2E68 B 0x39B3104
	0x039B2E6C LDR W19, [X31 + 0xC]
	0x039B2E70 B 0x39B3108
	0x039B2E74 MOV X8, X22
	0x039B2E78 MOV X22, X29

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move X0, X2
	007 Move X1, X3
	008 Move X2, X31
	009 Call String.Format, X0, X1
	010 Move X2, X0
	011 Move X0, X20
	012 Move X1, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X3, X31
	016 Move X30, [X31+32]
	017 Call ProfilingSample..ctor, X0, X1, X2, X3
	018 Return 

Method: System.Void .ctor(UnityEngine.Rendering.CommandBuffer cmd, System.String format, System.Object[] args)

Disassembly:
	0x039B2E7C MOV X29, X26
	0x039B2E80 ADD X26, X8, W19, 0x2, SXTW
	0x039B2E84 MOV X20, X8
	0x039B2E88 LDR W8, [X26]
	0x039B2E8C LDR X0, [X29]
	0x039B2E90 STR W8, [X31 + 0x24]
	0x039B2E94 ADD X1, X31, 0x24
	0x039B2E98 BL 0x1C16E04
	0x039B2E9C MOV X23, X0
	0x039B2EA0 LDR W8, [X26 + 0x4]
	0x039B2EA4 LDR X0, [X29]
	0x039B2EA8 STR W8, [X31 + 0x20]
	0x039B2EAC ADD X1, X31, 0x20
	0x039B2EB0 BL 0x1C16E04
	0x039B2EB4 MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move X0, X2
	007 Move X1, X3
	008 Move X2, X31
	009 Call String.Format, X0, X1
	010 Move X2, X0
	011 Move X0, X20
	012 Move X1, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X3, X31
	016 Move X30, [X31+32]
	017 Call ProfilingSample..ctor, X0, X1, X2, X3
	018 Return 

Method: System.Void Dispose()

Disassembly:
	0x039B2EB8 LDR W8, [X26 + 0x8]
	0x039B2EBC LDR X0, [X29]

ISIL:
	001 Move W1, 1

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x039B2EC0 STR W8, [X31 + 0x1C]
	0x039B2EC4 ADD X1, X31, 0x1C
	0x039B2EC8 BL 0x1C16E04
	0x039B2ECC ADRP X8, 0x799000
	0x039B2ED0 LDR X8, [X8 + 0x138]
	0x039B2ED4 MOV X3, X0
	0x039B2ED8 MOV X26, X29
	0x039B2EDC LDR X0, [X8]
	0x039B2EE0 MOV X1, X23
	0x039B2EE4 MOV X2, X24
	0x039B2EE8 MOV X4, X31
	0x039B2EEC BL 0x3227C18
	0x039B2EF0 MOV X1, X0
	0x039B2EF4 MOV X29, X22
	0x039B2EF8 MOV X0, X21
	0x039B2EFC MOV X2, X31
	0x039B2F00 BL 0x321B938
	0x039B2F04 MOV X21, X0
	0x039B2F08 MOV X22, X20
	0x039B2F0C B 0x39B3108
	0x039B2F10 ADRP X8, 0x741000
	0x039B2F14 LDR X8, [X8 + 0x9D0]
	0x039B2F18 LDR X0, [X8]
	0x039B2F1C MOVZ W1, 0x4
	0x039B2F20 BL 0x1C16D6C
	0x039B2F24 ADD X26, X22, W19, 0x2, SXTW
	0x039B2F28 ADRP X9, 0x741000
	0x039B2F2C LDR W8, [X26]
	0x039B2F30 LDR X9, [X9 + 0x758]
	0x039B2F34 MOV X23, X0
	0x039B2F38 STR W8, [X31 + 0x24]
	0x039B2F3C LDR X0, [X9]
	0x039B2F40 ADD X1, X31, 0x24
	0x039B2F44 BL 0x1C16E04
	0x039B2F48 CBZ X23, 0x39B31A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA30000
	006 Move W8, [X21+3141]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x742000
	014 Move X0, [X0+2440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3141], W8
	018 Move W8, [X19+16]
	019 Compare W8, 0
	020 JumpIfNotEqual {46}
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {44}
	025 Move X8, [X19]
	026 Compare X8, 0
	027 JumpIfEqual {44}
	028 Move X8, 0x742000
	029 Move X0, [X19+8]
	030 Move X8, [X8+2440]
	031 Move X2, X31
	032 Move X1, [X8]
	033 Call String.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {44}
	038 Move X0, [X19]
	039 Compare X0, 0
	040 JumpIfEqual {51}
	041 Move X1, [X19+8]
	042 Move X2, X31
	043 Call CommandBuffer.EndSample, X0, X1
	044 Move W8, 1
	045 Move [X19+16], W8
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

