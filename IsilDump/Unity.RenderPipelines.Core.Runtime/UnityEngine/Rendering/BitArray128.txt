Type: UnityEngine.Rendering.BitArray128

Method: System.UInt32 get_capacity()

Disassembly:
	0x039E130C LDR X1, [X0 + 0x8]
	0x039E1310 MOV X0, X21

ISIL:
	001 Move W0, 128
	002 Return X0

Method: System.Boolean get_allFalse()

Disassembly:
	0x039E1314 MOV X2, X31
	0x039E1318 BL 0x339A94C
	0x039E131C TBZ X0, 0x0, 0x39E1398
	0x039E1320 LDR X8, [X19]
	0x039E1324 LDR X1, [X22]
	0x039E1328 LDR X8, [X8 + 0x40]
	0x039E132C LDR X9, [X1 + 0x40]
	0x039E1330 CMP X8, X9

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, W31
	005 Return X0
	006 Move X8, [X0+8]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Boolean get_allTrue()

Disassembly:
	0x039E1334 B.NE 0x39E13AC
	0x039E1338 MOV X0, X19
	0x039E133C ADD X21, X20, 0x10
	0x039E1340 BL 0x1C16E08
	0x039E1344 LDR X1, [X0 + 0x10]
	0x039E1348 MOV X0, X21
	0x039E134C MOV X2, X31
	0x039E1350 BL 0x339A94C
	0x039E1354 TBZ X0, 0x0, 0x39E1398

ISIL:
	001 Move X8, [X0]
	002 Add X31, X8, 1
	003 Move W0, W31
	004 Return X0
	005 Move X8, [X0+8]
	006 Add X31, X8, 1
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.String get_humanizedData()

Disassembly:
	0x039E1358 LDR X8, [X19]
	0x039E135C LDR X1, [X22]
	0x039E1360 LDR X8, [X8 + 0x40]
	0x039E1364 LDR X9, [X1 + 0x40]
	0x039E1368 CMP X8, X9
	0x039E136C B.NE 0x39E13AC
	0x039E1370 MOV X0, X19
	0x039E1374 ADD X20, X20, 0x18
	0x039E1378 BL 0x1C16E08
	0x039E137C LDR X1, [X0 + 0x18]
	0x039E1380 MOV X0, X20
	0x039E1384 LDP X20, X19, [X31 + 0x20]
	0x039E1388 LDP X22, X21, [X31 + 0x10]
	0x039E138C MOV X2, X31
	0x039E1390 LDR X30, [X31], #0x30
	0x039E1394 B 0x339A94C
	0x039E1398 LDP X20, X19, [X31 + 0x20]
	0x039E139C LDP X22, X21, [X31 + 0x10]
	0x039E13A0 MOV W0, W31
	0x039E13A4 LDR X30, [X31], #0x30
	0x039E13A8 RET
	0x039E13AC MOV X0, X19
	0x039E13B0 BL 0x1C171E0
	0x039E13B4 STR X30, [X31 - 0x30]!
	0x039E13B8 STP X22, X21, [X31 + 0x10]
	0x039E13BC STP X20, X19, [X31 + 0x20]
	0x039E13C0 MOV X1, X31
	0x039E13C4 MOV X19, X0
	0x039E13C8 BL 0x339A95C
	0x039E13CC MOV W20, W0
	0x039E13D0 ADD X0, X19, 0x8
	0x039E13D4 MOV X1, X31
	0x039E13D8 BL 0x339A95C
	0x039E13DC MOV W21, W0
	0x039E13E0 ADD X0, X19, 0x10
	0x039E13E4 MOV X1, X31
	0x039E13E8 BL 0x339A95C
	0x039E13EC MOV W22, W0
	0x039E13F0 ADD X0, X19, 0x18
	0x039E13F4 MOV X1, X31
	0x039E13F8 BL 0x339A95C
	0x039E13FC MOVZ W8, 0x5529
	0x039E1400 MOVZ W9, 0x6BB6
	0x039E1404 MOVK W8, 0xA5550000
	0x039E1408 MOVK W9, 0x177A0000
	0x039E140C MADD W10, W20, W8, W21
	0x039E1410 MUL W9, W9, W8
	0x039E1414 MADD W9, W10, W8, W9
	0x039E1418 ADD W9, W9, W22
	0x039E141C LDP X20, X19, [X31 + 0x20]
	0x039E1420 LDP X22, X21, [X31 + 0x10]
	0x039E1424 MADD W0, W9, W8, W0
	0x039E1428 LDR X30, [X31], #0x30
	0x039E142C RET
	0x039E1430 SUB X31, X31, 0x70
	0x039E1434 STR D8, [X31 + 0x20]
	0x039E1438 STR X30, [X31 + 0x28]
	0x039E143C STP X26, X25, [X31 + 0x30]
	0x039E1440 STP X24, X23, [X31 + 0x40]
	0x039E1444 STP X22, X21, [X31 + 0x50]
	0x039E1448 STP X20, X19, [X31 + 0x60]
	0x039E144C ADRP X21, 0xA00000
	0x039E1450 ADRP X22, 0x771000
	0x039E1454 LDRB W8, [X21 + 0xDC5]
	0x039E1458 LDR X22, [X22 + 0xE28]
	0x039E145C MOV X20, X1
	0x039E1460 MOV X19, X0
	0x039E1464 TBNZ X8, 0x0, 0x39E14E8
	0x039E1468 ADRP X0, 0x771000
	0x039E146C LDR X0, [X0 + 0xE28]
	0x039E1470 BL 0x1C16CF4
	0x039E1474 ADRP X0, 0x73A000
	0x039E1478 LDR X0, [X0 + 0x8F8]
	0x039E147C BL 0x1C16CF4
	0x039E1480 ADRP X0, 0x713000
	0x039E1484 LDR X0, [X0 + 0xE58]
	0x039E1488 BL 0x1C16CF4
	0x039E148C ADRP X0, 0x719000
	0x039E1490 LDR X0, [X0 + 0x700]
	0x039E1494 BL 0x1C16CF4
	0x039E1498 ADRP X0, 0x712000
	0x039E149C LDR X0, [X0 + 0x598]
	0x039E14A0 BL 0x1C16CF4
	0x039E14A4 ADRP X0, 0x76F000
	0x039E14A8 LDR X0, [X0 + 0x618]
	0x039E14AC BL 0x1C16CF4
	0x039E14B0 ADRP X0, 0x772000
	0x039E14B4 LDR X0, [X0 + 0x370]
	0x039E14B8 BL 0x1C16CF4
	0x039E14BC ADRP X0, 0x772000
	0x039E14C0 LDR X0, [X0 + 0x378]
	0x039E14C4 BL 0x1C16CF4
	0x039E14C8 ADRP X0, 0x772000
	0x039E14CC LDR X0, [X0 + 0x380]
	0x039E14D0 BL 0x1C16CF4
	0x039E14D4 ADRP X0, 0x772000
	0x039E14D8 LDR X0, [X0 + 0x388]
	0x039E14DC BL 0x1C16CF4
	0x039E14E0 MOVZ W8, 0x1
	0x039E14E4 STRB W8, [X21 + 0xDC5]
	0x039E14E8 LDR X0, [X22]
	0x039E14EC ADRP X23, 0x712000
	0x039E14F0 LDR W8, [X0 + 0xE0]
	0x039E14F4 LDR X23, [X23 + 0x598]
	0x039E14F8 CBNZ W8, 0x39E1504
	0x039E14FC BL 0x1C16DFC
	0x039E1500 LDR X0, [X22]
	0x039E1504 LDR X8, [X23]
	0x039E1508 LDR X9, [X0 + 0xB8]
	0x039E150C LDR W10, [X8 + 0xE0]
	0x039E1510 LDR X21, [X9]
	0x039E1514 CBNZ W10, 0x39E1520
	0x039E1518 MOV X0, X8
	0x039E151C BL 0x1C16DFC
	0x039E1520 MOV X0, X21
	0x039E1524 MOV X1, X31
	0x039E1528 MOV X2, X31
	0x039E152C BL 0x3C354F8
	0x039E1530 TBNZ X0, 0x0, 0x39E18D4
	0x039E1534 ADRP X24, 0x73A000
	0x039E1538 LDR X24, [X24 + 0x8F8]
	0x039E153C LDR X0, [X24]
	0x039E1540 LDR W8, [X0 + 0xE0]
	0x039E1544 CBNZ W8, 0x39E154C
	0x039E1548 BL 0x1C16DFC
	0x039E154C ADRP X26, 0x772000
	0x039E1550 ADRP X25, 0x76F000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA01000
	009 Move X22, 0x773000
	010 Move X23, 0x71E000
	011 Move X20, 0x71C000
	012 Move W8, [X21+3513]
	013 Move X22, [X22+792]
	014 Move X23, [X23+1752]
	015 Move X20, [X20+2536]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x71C000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0x71B000
	025 Move X0, [X0+1536]
	026 Call 0x1C17CF4
	027 Move X0, 0x71E000
	028 Move X0, [X0+1752]
	029 Call 0x1C17CF4
	030 Move X0, 0x773000
	031 Move X0, [X0+824]
	032 Call 0x1C17CF4
	033 Move X0, 0x773000
	034 Move X0, [X0+832]
	035 Call 0x1C17CF4
	036 Move X0, 0x773000
	037 Move X0, [X0+792]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+3513], W8
	041 Move W8, 64
	042 Add X0, X31, 12
	043 Move X1, X31
	044 Move [X31+12], W8
	045 Call UInt32.ToString, X0
	046 Move X8, [X22]
	047 Move X2, [X23]
	048 Move X1, X0
	049 Move X3, X31
	050 Move X0, X8
	051 Call String.Concat, X0, X1, X2
	052 Move X8, [X20]
	053 Move X21, [X19+8]
	054 Move X20, X0
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move W1, 2
	061 Move X0, X21
	062 Move X2, X31
	063 Call Convert.ToString, X0, X1
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X31
	067 Call String.Format, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {141}
	070 Move X20, 0x71B000
	071 Move X21, 0x773000
	072 Move X24, 0x773000
	073 Move X20, [X20+1536]
	074 Move X21, [X21+832]
	075 Move X24, [X24+824]
	076 Move W1, 32
	077 Move W2, 48
	078 Move X3, X31
	079 Call String.Replace, X0, X1, X2
	080 Move X8, [X20]
	081 Move X20, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X1, [X21]
	088 Move X2, [X24]
	089 Move X0, X20
	090 Move X3, X31
	091 Call Regex.Replace, X0, X1, X2
	092 Move X20, X0
	093 Move W8, 64
	094 Add X0, X31, 12
	095 Move X1, X31
	096 Move [X31+12], W8
	097 Call UInt32.ToString, X0
	098 Move X8, [X22]
	099 Move X2, [X23]
	100 Move X1, X0
	101 Move X3, X31
	102 Move X0, X8
	103 Call String.Concat, X0, X1, X2
	104 Move X8, [X19]
	105 Move X19, X0
	106 Move W1, 2
	107 Move X2, X31
	108 Move X0, X8
	109 Call Convert.ToString, X0, X1
	110 Move X1, X0
	111 Move X0, X19
	112 Move X2, X31
	113 Call String.Format, X0, X1
	114 Compare X0, 0
	115 JumpIfEqual {141}
	116 Move W1, 32
	117 Move W2, 48
	118 Move X3, X31
	119 Call String.Replace, X0, X1, X2
	120 Move X1, [X21]
	121 Move X2, [X24]
	122 Move X3, X31
	123 Call Regex.Replace, X0, X1, X2
	124 Compare X0, 0
	125 JumpIfEqual {141}
	126 Move W1, 46
	127 Move X2, X31
	128 Call String.TrimEnd, X0, X1
	129 Move X1, X0
	130 Move X0, X20
	131 Move X2, X31
	132 Call String.Concat, X0, X1
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X24, [X31+16]
	138 Move X23, [X31+24]
	139 Move X30, [X31+64]
	140 Return X0
	141 Call 0x1C17F20

Method: System.Boolean get_Item(System.UInt32 index)

Disassembly:
	0x039E1554 LDR X26, [X26 + 0x378]
	0x039E1558 LDR X25, [X25 + 0x618]
	0x039E155C MOV X0, X19
	0x039E1560 BL 0x39E1920
	0x039E1564 LDR X8, [X22]
	0x039E1568 MOV X21, X0
	0x039E156C LDR W9, [X8 + 0xE0]
	0x039E1570 CBNZ W9, 0x39E1580

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Move X8, [X0]
	004 And W9, W1, 63
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 NotImplemented "Instruction LSRV not yet implemented."
	007 And W0, W8, 1
	008 Return X0

Method: System.Void set_Item(System.UInt32 index, System.Boolean value)

Disassembly:
	0x039E1588 STR X21, [X8]
	0x039E158C BL 0x39E1920
	0x039E1590 LDR X8, [X22]
	0x039E1594 MOV X1, X19
	0x039E1598 MOV X3, X31
	0x039E159C LDR X8, [X8 + 0xB8]
	0x039E15A0 STR X0, [X8 + 0x18]
	0x039E15A4 LDR X2, [X26]
	0x039E15A8 ADD X0, X31, 0x8
	0x039E15AC STP X31, X31, [X31 + 0x8]
	0x039E15B0 STR X31, [X31 + 0x18]
	0x039E15B4 BL 0x3C5D058

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Add X0, X0, 8
	003 Move X8, [X0]
	004 Move W9, 1
	005 NotImplemented "Instruction LSLV not yet implemented."
	006 And W31, W2, 1
	007 Or X10, X8, X9
	008 NotImplemented "Instruction BIC not yet implemented."
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move [X0], X8
	011 Return 

Method: System.Void .ctor(System.UInt64 initValue1, System.UInt64 initValue2)

Disassembly:
	0x039E15F8 LDR X0, [X22]
	0x039E15FC LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.UInt32> bitIndexTrue)

Disassembly:
	0x039E1600 LDR X0, [X8]
	0x039E1604 CBZ X0, 0x39E18D0
	0x039E1608 ADRP X8, 0x772000
	0x039E160C LDR X8, [X8 + 0x380]
	0x039E1610 MOV X2, X31
	0x039E1614 LDR X1, [X8]
	0x039E1618 BL 0x3C14E3C
	0x039E161C LDR X0, [X24]
	0x039E1620 LDR W8, [X0 + 0xE0]
	0x039E1624 CBNZ W8, 0x39E162C
	0x039E1628 BL 0x1C16DFC
	0x039E162C MOV X0, X19
	0x039E1630 BL 0x39E1920
	0x039E1634 LDR X8, [X22]
	0x039E1638 LDR X8, [X8 + 0xB8]
	0x039E163C STR X0, [X8 + 0x8]
	0x039E1640 MOV X0, X19
	0x039E1644 BL 0x39E1920
	0x039E1648 LDR X8, [X22]
	0x039E164C LDR X8, [X8 + 0xB8]
	0x039E1650 STR X0, [X8 + 0x10]
	0x039E1654 CBZ X0, 0x39E18D0
	0x039E1658 ADRP X8, 0x772000
	0x039E165C LDR X8, [X8 + 0x388]
	0x039E1660 MOV X2, X31
	0x039E1664 LDR X1, [X8]
	0x039E1668 BL 0x3C14E3C
	0x039E166C MOV X0, X31
	0x039E1670 BL 0x3C3BB6C
	0x039E1674 CMP W0, 0x1D
	0x039E1678 B.GT 0x39E18B0
	0x039E167C MOV X0, X31
	0x039E1680 BL 0x3C3BEDC
	0x039E1684 MOV W8, W0
	0x039E1688 LDR X0, [X22]
	0x039E168C ANDS W31, W8, 0x1
	0x039E1690 FMOV S0, -1
	0x039E1694 FMOV S1, 1
	0x039E1698 LDR W9, [X0 + 0xE0]
	0x039E169C FCSEL S8, S1, S0, NE
	0x039E16A0 CBNZ W9, 0x39E16AC
	0x039E16A4 BL 0x1C16DFC
	0x039E16A8 LDR X0, [X22]
	0x039E16AC LDR X8, [X23]
	0x039E16B0 LDR X9, [X0 + 0xB8]
	0x039E16B4 LDR W10, [X8 + 0xE0]
	0x039E16B8 LDR X19, [X9 + 0x28]
	0x039E16BC CBNZ W10, 0x39E16C8
	0x039E16C0 MOV X0, X8
	0x039E16C4 BL 0x1C16DFC
	0x039E16C8 MOV X0, X19
	0x039E16CC MOV X1, X31
	0x039E16D0 BL 0x3C38948
	0x039E16D4 TBNZ X0, 0x0, 0x39E17AC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA01000
	009 Move W8, [X21+3514]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x773000
	017 Move X0, [X0+800]
	018 Call 0x1C17CF4
	019 Move X0, 0x773000
	020 Move X0, [X0+808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3514], W8
	024 Move X22, X20
	025 Move [X22+8], X31
	026 Move [X20], X31
	027 Compare X19, 0
	028 JumpIfEqual {52}
	029 Move X8, 0x773000
	030 Move X8, [X8+800]
	031 Move X0, X19
	032 Move X1, [X8]
	033 Call Enumerable.Count, X0
	034 Subtract W21, W0, 1
	035 Move X23, 0x773000
	036 Move X23, [X23+808]
	037 Move W24, 1
	038 Move X2, [X23]
	039 Move X0, X19
	040 Move W1, W21
	041 Call Enumerable.ElementAt, X0, X1
	042 Subtract W8, W0, 64
	043 Move X8, X20
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W0, W8
	046 Move X8, X22
	047 Move X9, [X8]
	048 NotImplemented "Instruction LSLV not yet implemented."
	049 Or X9, X9, X10
	050 Move [X8], X9
	051 Subtract W21, W21, 1
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move X30, [X31+64]
	059 Return 

Method: UnityEngine.Rendering.BitArray128 op_OnesComplement(UnityEngine.Rendering.BitArray128 a)

Disassembly:
	0x039E16D8 ADRP X8, 0x719000
	0x039E16DC LDR X8, [X8 + 0x700]
	0x039E16E0 LDR X0, [X8]

ISIL:
	001 NotImplemented "Instruction ORN not yet implemented."
	002 NotImplemented "Instruction ORN not yet implemented."
	003 Return X0

Method: UnityEngine.Rendering.BitArray128 op_BitwiseOr(UnityEngine.Rendering.BitArray128 a, UnityEngine.Rendering.BitArray128 b)

Disassembly:
	0x039E16E4 BL 0x1C16F10
	0x039E16E8 MOV X1, X31
	0x039E16EC MOV X19, X0

ISIL:
	001 Or X0, X2, X0
	002 Or X1, X3, X1
	003 Return X0

Method: UnityEngine.Rendering.BitArray128 op_BitwiseAnd(UnityEngine.Rendering.BitArray128 a, UnityEngine.Rendering.BitArray128 b)

Disassembly:
	0x039E16F0 BL 0x3C17028
	0x039E16F4 LDR X0, [X22]
	0x039E16F8 LDR W8, [X0 + 0xE0]

ISIL:
	001 And X0, X2, X0
	002 And X1, X3, X1
	003 Return X0

Method: UnityEngine.Rendering.IBitArray BitAnd(UnityEngine.Rendering.IBitArray other)

Disassembly:
	0x039E16FC CBNZ W8, 0x39E1708
	0x039E1700 BL 0x1C16DFC
	0x039E1704 LDR X0, [X22]
	0x039E1708 LDR X8, [X0 + 0xB8]
	0x039E170C MOV V0.16B, V8.16B
	0x039E1710 STR X19, [X8 + 0x28]
	0x039E1714 BL 0x39E1A18
	0x039E1718 CBZ X19, 0x39E18D0
	0x039E171C MOV X1, X0
	0x039E1720 MOV X0, X19
	0x039E1724 MOV X2, X31
	0x039E1728 BL 0x3C17F08
	0x039E172C LDR X8, [X22]
	0x039E1730 LDR X8, [X8 + 0xB8]
	0x039E1734 LDR X19, [X8 + 0x28]
	0x039E1738 BL 0x39E1ACC
	0x039E173C CBZ X19, 0x39E18D0
	0x039E1740 MOV X1, X0
	0x039E1744 MOV X0, X19
	0x039E1748 MOV X2, X31
	0x039E174C BL 0x3C1810C
	0x039E1750 LDR X8, [X22]
	0x039E1754 ADRP X9, 0x713000
	0x039E1758 MOVZ W1, 0x3
	0x039E175C LDR X8, [X8 + 0xB8]
	0x039E1760 LDR X9, [X9 + 0xE58]
	0x039E1764 LDR X19, [X8 + 0x28]
	0x039E1768 LDR X0, [X9]
	0x039E176C BL 0x1C16D6C
	0x039E1770 CBZ X0, 0x39E18D0
	0x039E1774 LDR W8, [X0 + 0x18]
	0x039E1778 MOV X1, X0
	0x039E177C CMP W8, 0x1
	0x039E1780 B.LS 0x39E191C
	0x039E1784 MOVZ W9, 0x1
	0x039E1788 CMP W8, 0x2
	0x039E178C STR W9, [X1 + 0x24]
	0x039E1790 B.EQ 0x39E191C
	0x039E1794 MOVZ W8, 0x2
	0x039E1798 STR W8, [X1 + 0x28]
	0x039E179C CBZ X19, 0x39E18D0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xA01000
	008 Move W8, [X21+3515]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x773000
	016 Move X0, [X0+864]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3515], W8
	020 Compare X19, 0
	021 JumpIfEqual {49}
	022 Move X21, 0x773000
	023 Move X21, [X21+864]
	024 Move X8, [X19]
	025 Move X1, [X21]
	026 Move X8, [X8+64]
	027 Move X9, [X1+64]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X22, [X20]
	030 Move X20, [X20+8]
	031 Move X0, X19
	032 Call 0x1C17E08
	033 Move X8, [X0]
	034 Move X9, [X0+8]
	035 Move X0, [X21]
	036 Add X1, X31, 0
	037 And X8, X8, X22
	038 And X9, X9, X20
	039 Move [X31], X8
	040 Move [X31+8], X9
	041 Call 0x1C17E04
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X30, [X31+16]
	047 Add X31, X31, 64
	048 Return X0
	049 Call 0x1C17F20
	050 Move X0, X19
	051 Call 0x1C181E0

Method: UnityEngine.Rendering.IBitArray BitOr(UnityEngine.Rendering.IBitArray other)

Disassembly:
	0x039E17A0 MOV X0, X19
	0x039E17A4 MOV X2, X31
	0x039E17A8 BL 0x3C18FF0
	0x039E17AC LDR X0, [X22]
	0x039E17B0 LDR W8, [X0 + 0xE0]
	0x039E17B4 CBNZ W8, 0x39E17C0
	0x039E17B8 BL 0x1C16DFC
	0x039E17BC LDR X0, [X22]
	0x039E17C0 LDR X8, [X23]
	0x039E17C4 LDR X9, [X0 + 0xB8]
	0x039E17C8 LDR W10, [X8 + 0xE0]
	0x039E17CC LDR X19, [X9 + 0x30]
	0x039E17D0 CBNZ W10, 0x39E17DC
	0x039E17D4 MOV X0, X8
	0x039E17D8 BL 0x1C16DFC
	0x039E17DC MOV X0, X19
	0x039E17E0 MOV X1, X31
	0x039E17E4 BL 0x3C38948
	0x039E17E8 TBNZ X0, 0x0, 0x39E18B0
	0x039E17EC ADRP X8, 0x719000
	0x039E17F0 LDR X8, [X8 + 0x700]
	0x039E17F4 LDR X0, [X8]
	0x039E17F8 BL 0x1C16F10
	0x039E17FC MOV X1, X31
	0x039E1800 MOV X19, X0
	0x039E1804 BL 0x3C17028
	0x039E1808 LDR X0, [X22]
	0x039E180C LDR W8, [X0 + 0xE0]
	0x039E1810 CBNZ W8, 0x39E181C
	0x039E1814 BL 0x1C16DFC
	0x039E1818 LDR X0, [X22]
	0x039E181C LDR X8, [X0 + 0xB8]
	0x039E1820 MOV V0.16B, V8.16B
	0x039E1824 STR X19, [X8 + 0x30]
	0x039E1828 BL 0x39E1B94
	0x039E182C CBZ X19, 0x39E18D0
	0x039E1830 MOV X1, X0
	0x039E1834 MOV X0, X19
	0x039E1838 MOV X2, X31
	0x039E183C BL 0x3C17F08
	0x039E1840 LDR X8, [X22]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xA01000
	008 Move W8, [X21+3516]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x773000
	016 Move X0, [X0+864]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3516], W8
	020 Compare X19, 0
	021 JumpIfEqual {49}
	022 Move X21, 0x773000
	023 Move X21, [X21+864]
	024 Move X8, [X19]
	025 Move X1, [X21]
	026 Move X8, [X8+64]
	027 Move X9, [X1+64]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X22, [X20]
	030 Move X20, [X20+8]
	031 Move X0, X19
	032 Call 0x1C17E08
	033 Move X8, [X0]
	034 Move X9, [X0+8]
	035 Move X0, [X21]
	036 Add X1, X31, 0
	037 Or X8, X8, X22
	038 Or X9, X9, X20
	039 Move [X31], X8
	040 Move [X31+8], X9
	041 Call 0x1C17E04
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X30, [X31+16]
	047 Add X31, X31, 64
	048 Return X0
	049 Call 0x1C17F20
	050 Move X0, X19
	051 Call 0x1C181E0

Method: UnityEngine.Rendering.IBitArray BitNot()

Disassembly:
	0x039E1844 LDR X8, [X8 + 0xB8]
	0x039E1848 LDR X19, [X8 + 0x30]
	0x039E184C BL 0x39E1C3C
	0x039E1850 CBZ X19, 0x39E18D0
	0x039E1854 MOV X1, X0
	0x039E1858 MOV X0, X19
	0x039E185C MOV X2, X31
	0x039E1860 BL 0x3C1810C
	0x039E1864 LDR X8, [X22]
	0x039E1868 ADRP X9, 0x713000
	0x039E186C MOVZ W1, 0x6
	0x039E1870 LDR X8, [X8 + 0xB8]
	0x039E1874 LDR X9, [X9 + 0xE58]
	0x039E1878 LDR X19, [X8 + 0x30]
	0x039E187C LDR X0, [X9]
	0x039E1880 BL 0x1C16D6C
	0x039E1884 ADRP X8, 0x772000
	0x039E1888 LDR X8, [X8 + 0x370]
	0x039E188C MOV X2, X31
	0x039E1890 MOV X20, X0
	0x039E1894 LDR X1, [X8]
	0x039E1898 BL 0x32C5BD8
	0x039E189C CBZ X19, 0x39E18D0
	0x039E18A0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA01000
	007 Move X20, 0x773000
	008 Move W8, [X21+3517]
	009 Move X20, [X20+864]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x773000
	016 Move X0, [X0+864]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3517], W8
	020 Move V0, [X19]
	021 Move X0, [X20]
	022 Add X1, X31, 0
	023 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	024 Move [X31], V0
	025 Call 0x1C17E04
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Add X31, X31, 48
	031 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.BitArray128 a, UnityEngine.Rendering.BitArray128 b)

Disassembly:
	0x039E18A4 MOV X1, X20
	0x039E18A8 MOV X2, X31
	0x039E18AC BL 0x3C18FF0
	0x039E18B0 LDP X20, X19, [X31 + 0x60]
	0x039E18B4 LDP X22, X21, [X31 + 0x50]
	0x039E18B8 LDP X24, X23, [X31 + 0x40]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 And W0, W8, W9
	006 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Rendering.BitArray128 a, UnityEngine.Rendering.BitArray128 b)

Disassembly:
	0x039E18BC LDP X26, X25, [X31 + 0x30]
	0x039E18C0 LDR X30, [X31 + 0x28]
	0x039E18C4 LDR V8, [X31 + 0x20]
	0x039E18C8 ADD X31, X31, 0x70
	0x039E18CC RET
	0x039E18D0 BL 0x1C16F20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Or W0, W8, W9
	006 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x039E18D4 ADRP X0, 0x712000
	0x039E18D8 LDR X0, [X0 + 0x7D0]
	0x039E18DC BL 0x1C16D08
	0x039E18E0 BL 0x1C16F10
	0x039E18E4 MOV X19, X0
	0x039E18E8 ADRP X0, 0x772000
	0x039E18EC LDR X0, [X0 + 0x390]
	0x039E18F0 BL 0x1C16D08
	0x039E18F4 MOV X1, X0
	0x039E18F8 MOV X0, X19
	0x039E18FC MOV X2, X31
	0x039E1900 BL 0x33B2C70
	0x039E1904 ADRP X0, 0x772000
	0x039E1908 LDR X0, [X0 + 0x398]
	0x039E190C BL 0x1C16D08
	0x039E1910 MOV X1, X0
	0x039E1914 MOV X0, X19
	0x039E1918 BL 0x1C16DEC
	0x039E191C BL 0x1C16F28
	0x039E1920 STP X30, X21, [X31 - 0x20]!
	0x039E1924 STP X20, X19, [X31 + 0x10]
	0x039E1928 ADRP X20, 0xA00000
	0x039E192C ADRP X21, 0x712000
	0x039E1930 LDRB W8, [X20 + 0xE23]
	0x039E1934 LDR X21, [X21 + 0x598]
	0x039E1938 MOV X19, X0
	0x039E193C TBNZ X8, 0x0, 0x39E1978
	0x039E1940 ADRP X0, 0x712000
	0x039E1944 LDR X0, [X0 + 0xA28]
	0x039E1948 BL 0x1C16CF4
	0x039E194C ADRP X0, 0x716000
	0x039E1950 LDR X0, [X0 + 0xCA0]
	0x039E1954 BL 0x1C16CF4
	0x039E1958 ADRP X0, 0x712000
	0x039E195C LDR X0, [X0 + 0x598]
	0x039E1960 BL 0x1C16CF4
	0x039E1964 ADRP X0, 0x772000
	0x039E1968 LDR X0, [X0 + 0x3A0]
	0x039E196C BL 0x1C16CF4
	0x039E1970 MOVZ W8, 0x1
	0x039E1974 STRB W8, [X20 + 0xE23]
	0x039E1978 LDR X0, [X21]
	0x039E197C LDR W8, [X0 + 0xE0]
	0x039E1980 CBNZ W8, 0x39E1988
	0x039E1984 BL 0x1C16DFC
	0x039E1988 MOV X0, X19
	0x039E198C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA01000
	006 Move W8, [X21+3518]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x773000
	014 Move X0, [X0+864]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3518], W8
	018 Compare X19, 0
	019 JumpIfEqual {52}
	020 Move X21, 0x773000
	021 Move X21, [X21+864]
	022 Move X9, [X19]
	023 Move X8, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Call 0x1C17E08
	027 Move X1, [X0]
	028 Move X0, X20
	029 Move X2, X31
	030 Call UInt64.Equals, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {52}
	035 Move X8, [X19]
	036 Move X1, [X21]
	037 Move X8, [X8+64]
	038 Move X9, [X1+64]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Add X20, X20, 8
	042 Call 0x1C17E08
	043 Move X1, [X0+8]
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call UInt64.Equals, X0, X1
	051 Return X0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move W0, W31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Move X0, X19
	059 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x039E1990 MOV X2, X31
	0x039E1994 BL 0x3C3883C
	0x039E1998 TBZ X0, 0x0, 0x39E19D0
	0x039E199C ADRP X8, 0x712000
	0x039E19A0 LDR X8, [X8 + 0xA28]
	0x039E19A4 LDR X0, [X8]
	0x039E19A8 LDR W8, [X0 + 0xE0]
	0x039E19AC CBNZ W8, 0x39E19B4
	0x039E19B0 BL 0x1C16DFC
	0x039E19B4 ADRP X8, 0x772000
	0x039E19B8 LDR X8, [X8 + 0x3A0]
	0x039E19BC MOV X1, X31
	0x039E19C0 LDR X0, [X8]
	0x039E19C4 BL 0x3C0649C
	0x039E19C8 MOV X20, X31
	0x039E19CC B 0x39E1A04
	0x039E19D0 ADRP X8, 0x716000
	0x039E19D4 LDR X8, [X8 + 0xCA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call UInt64.GetHashCode, X0
	007 Move W20, W0
	008 Add X0, X19, 8
	009 Move X1, X31
	010 Call UInt64.GetHashCode, X0
	011 Move W8, 0x5529
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W9, 4001
	017 NotImplemented "Instruction MOVK not yet implemented."
	018 Add W0, W8, W9
	019 Move X30, [X31+32]
	020 Return X0

