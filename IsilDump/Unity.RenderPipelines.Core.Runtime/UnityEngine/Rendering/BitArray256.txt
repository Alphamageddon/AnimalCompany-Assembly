Type: UnityEngine.Rendering.BitArray256

Method: System.UInt32 get_capacity()

Disassembly:
	0x039E19D8 LDR X0, [X8]
	0x039E19DC BL 0x1C16F10

ISIL:
	001 Move W0, 256
	002 Return X0

Method: System.Boolean get_allFalse()

Disassembly:
	0x039E19E0 MOV X1, X19
	0x039E19E4 MOV X2, X31
	0x039E19E8 MOV X20, X0
	0x039E19EC BL 0x3C1454C
	0x039E19F0 CBZ X20, 0x39E1A14
	0x039E19F4 MOVZ W1, 0x3D
	0x039E19F8 MOV X0, X20
	0x039E19FC MOV X2, X31
	0x039E1A00 BL 0x3C396EC
	0x039E1A04 MOV X0, X20
	0x039E1A08 LDP X20, X19, [X31 + 0x10]
	0x039E1A0C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfNotEqual {10}
	004 Move X8, [X0+8]
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {12}
	010 Move W0, W31
	011 Return X0
	012 Move X8, [X0+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Return X0

Method: System.Boolean get_allTrue()

Disassembly:
	0x039E1A10 RET
	0x039E1A14 BL 0x1C16F20
	0x039E1A18 STR D8, [X31 - 0x20]!
	0x039E1A1C STR X30, [X31 + 0x8]
	0x039E1A20 STP X20, X19, [X31 + 0x10]
	0x039E1A24 ADRP X19, 0xA00000
	0x039E1A28 ADRP X20, 0x714000
	0x039E1A2C LDRB W8, [X19 + 0xDE2]
	0x039E1A30 LDR X20, [X20 + 0x9B0]
	0x039E1A34 MOV V8.16B, V0.16B
	0x039E1A38 TBNZ X8, 0x0, 0x39E1A50
	0x039E1A3C ADRP X0, 0x714000
	0x039E1A40 LDR X0, [X0 + 0x9B0]
	0x039E1A44 BL 0x1C16CF4
	0x039E1A48 MOVZ W8, 0x1

ISIL:
	001 Move X8, [X0]
	002 Add X31, X8, 1
	003 Move X8, [X0+8]
	004 Add X31, X8, 1
	005 Move X8, [X0+16]
	006 Add X31, X8, 1
	007 Move W0, W31
	008 Return X0
	009 Move X8, [X0+24]
	010 Add X31, X8, 1
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Return X0

Method: System.String get_humanizedData()

Disassembly:
	0x039E1A4C STRB W8, [X19 + 0xDE2]
	0x039E1A50 LDR X0, [X20]
	0x039E1A54 MOVZ W1, 0x3
	0x039E1A58 BL 0x1C16D6C
	0x039E1A5C CBZ X0, 0x39E1AC8
	0x039E1A60 LDR W10, [X0 + 0x18]
	0x039E1A64 MOV W8, W31
	0x039E1A68 MOV X9, X31
	0x039E1A6C ADD X11, X0, 0x28
	0x039E1A70 MOVI V0.2S, 0x2
	0x039E1A74 FMOV V1.2S, 0x0
	0x039E1A78 CMP X9, X10
	0x039E1A7C B.CS 0x39E1AC4
	0x039E1A80 FMOV S2, W8
	0x039E1A84 UNIMPLEMENTED
	0x039E1A88 AND V2.8B, V2.8B, V0.8B
	0x039E1A8C UNIMPLEMENTED
	0x039E1A90 FADD V2.2S, V2.2S, V2.2S
	0x039E1A94 ADD X9, X9, 0x1
	0x039E1A98 FADD V2.2S, V2.2S, V1.2S
	0x039E1A9C STR S8, [X11]
	0x039E1AA0 ADD W8, W8, 0x2
	0x039E1AA4 CMP X9, 0x3
	0x039E1AA8 STUR D2, [X11 - 0x8]
	0x039E1AAC ADD X11, X11, 0xC
	0x039E1AB0 B.NE 0x39E1A78
	0x039E1AB4 LDP X20, X19, [X31 + 0x10]
	0x039E1AB8 LDR X30, [X31 + 0x8]
	0x039E1ABC LDR V8, [X31], #0x20
	0x039E1AC0 RET
	0x039E1AC4 BL 0x1C16F28
	0x039E1AC8 BL 0x1C16F20
	0x039E1ACC STR D8, [X31 - 0x30]!
	0x039E1AD0 STP X30, X21, [X31 + 0x10]
	0x039E1AD4 STP X20, X19, [X31 + 0x20]
	0x039E1AD8 ADRP X19, 0xA00000
	0x039E1ADC ADRP X20, 0x76C000
	0x039E1AE0 LDRB W8, [X19 + 0xDE3]
	0x039E1AE4 LDR X20, [X20 + 0xA88]
	0x039E1AE8 TBNZ X8, 0x0, 0x39E1B00
	0x039E1AEC ADRP X0, 0x76C000
	0x039E1AF0 LDR X0, [X0 + 0xA88]
	0x039E1AF4 BL 0x1C16CF4
	0x039E1AF8 MOVZ W8, 0x1
	0x039E1AFC STRB W8, [X19 + 0xDE3]
	0x039E1B00 LDR X0, [X20]
	0x039E1B04 MOVZ W1, 0x3
	0x039E1B08 BL 0x1C16D6C
	0x039E1B0C MOV X19, X0
	0x039E1B10 MOV X20, X31
	0x039E1B14 MOV X21, X31
	0x039E1B18 FMOV S8, 1
	0x039E1B1C MOV X0, X31
	0x039E1B20 BL 0x3C3BB1C
	0x039E1B24 AND W8, W21, 0x2
	0x039E1B28 SCVTF S0, W8
	0x039E1B2C TBZ X0, 0x0, 0x39E1B48
	0x039E1B30 CBZ X19, 0x39E1B8C
	0x039E1B34 LDR W8, [X19 + 0x18]
	0x039E1B38 CMP X21, X8
	0x039E1B3C B.CS 0x39E1B90
	0x039E1B40 FSUB S0, S8, S0
	0x039E1B44 B 0x39E1B58
	0x039E1B48 CBZ X19, 0x39E1B8C
	0x039E1B4C LDR W8, [X19 + 0x18]
	0x039E1B50 CMP X21, X8
	0x039E1B54 B.CS 0x39E1B90
	0x039E1B58 AND W8, W20, 0x2
	0x039E1B5C ADD X21, X21, 0x1
	0x039E1B60 ADD X9, X19, X20, 0x2, LSL
	0x039E1B64 SCVTF S1, W8
	0x039E1B68 CMP X21, 0x3
	0x039E1B6C ADD X20, X20, 0x2
	0x039E1B70 STP S1, S0, [X9 + 0x20]
	0x039E1B74 B.NE 0x39E1B1C
	0x039E1B78 MOV X0, X19
	0x039E1B7C LDP X20, X19, [X31 + 0x20]
	0x039E1B80 LDP X30, X21, [X31 + 0x10]
	0x039E1B84 LDR V8, [X31], #0x30
	0x039E1B88 RET
	0x039E1B8C BL 0x1C16F20
	0x039E1B90 BL 0x1C16F28
	0x039E1B94 STR D8, [X31 - 0x20]!
	0x039E1B98 STR X30, [X31 + 0x8]
	0x039E1B9C STP X20, X19, [X31 + 0x10]
	0x039E1BA0 ADRP X19, 0xA00000
	0x039E1BA4 ADRP X20, 0x714000
	0x039E1BA8 LDRB W8, [X19 + 0xDE4]
	0x039E1BAC LDR X20, [X20 + 0x9B0]
	0x039E1BB0 MOV V8.16B, V0.16B
	0x039E1BB4 TBNZ X8, 0x0, 0x39E1BCC
	0x039E1BB8 ADRP X0, 0x714000
	0x039E1BBC LDR X0, [X0 + 0x9B0]
	0x039E1BC0 BL 0x1C16CF4
	0x039E1BC4 MOVZ W8, 0x1
	0x039E1BC8 STRB W8, [X19 + 0xDE4]
	0x039E1BCC LDR X0, [X20]
	0x039E1BD0 MOVZ W1, 0x4
	0x039E1BD4 BL 0x1C16D6C
	0x039E1BD8 CBZ X0, 0x39E1C38
	0x039E1BDC LDR W9, [X0 + 0x18]
	0x039E1BE0 MOV X8, X31
	0x039E1BE4 ADD X10, X0, 0x28
	0x039E1BE8 MOVZ W11, 0x1
	0x039E1BEC CMP X8, X9
	0x039E1BF0 B.CS 0x39E1C34
	0x039E1BF4 SUB W13, W11, W8, 0x1, LSR
	0x039E1BF8 UBFM X12, X8, 0x1, 0x1F
	0x039E1BFC AND W13, W13, 0x1
	0x039E1C00 ADD X8, X8, 0x1
	0x039E1C04 UCVTF S0, W12
	0x039E1C08 UCVTF S1, W13
	0x039E1C0C SUB W11, W11, 0x1
	0x039E1C10 CMP X8, 0x4
	0x039E1C14 STUR S0, [X10 - 0x8]
	0x039E1C18 STP S1, S8, [X10 - 0x4]
	0x039E1C1C ADD X10, X10, 0xC
	0x039E1C20 B.NE 0x39E1BEC
	0x039E1C24 LDP X20, X19, [X31 + 0x10]
	0x039E1C28 LDR X30, [X31 + 0x8]
	0x039E1C2C LDR V8, [X31], #0x20
	0x039E1C30 RET
	0x039E1C34 BL 0x1C16F28
	0x039E1C38 BL 0x1C16F20
	0x039E1C3C STP D9, D8, [X31 - 0x30]!
	0x039E1C40 STP X30, X21, [X31 + 0x10]
	0x039E1C44 STP X20, X19, [X31 + 0x20]
	0x039E1C48 ADRP X19, 0xA00000
	0x039E1C4C ADRP X20, 0x76C000
	0x039E1C50 LDRB W8, [X19 + 0xDE5]
	0x039E1C54 LDR X20, [X20 + 0xA88]
	0x039E1C58 TBNZ X8, 0x0, 0x39E1C70
	0x039E1C5C ADRP X0, 0x76C000
	0x039E1C60 LDR X0, [X0 + 0xA88]
	0x039E1C64 BL 0x1C16CF4
	0x039E1C68 MOVZ W8, 0x1
	0x039E1C6C STRB W8, [X19 + 0xDE5]
	0x039E1C70 LDR X0, [X20]
	0x039E1C74 MOVZ W1, 0x4
	0x039E1C78 BL 0x1C16D6C
	0x039E1C7C MOV X19, X0
	0x039E1C80 MOV X20, X31
	0x039E1C84 ADD X21, X0, 0x24
	0x039E1C88 FMOV S8, 1
	0x039E1C8C ADD W8, W20, W20, 0x1, LSR
	0x039E1C90 AND W8, W8, 0x1
	0x039E1C94 MOV X0, X31
	0x039E1C98 UCVTF S9, W8
	0x039E1C9C BL 0x3C3BB1C
	0x039E1CA0 FSUB S0, S8, S9
	0x039E1CA4 ANDS W31, W0, 0x1
	0x039E1CA8 FCSEL S0, S0, S9, NE
	0x039E1CAC CBZ X19, 0x39E1CF0
	0x039E1CB0 LDR W8, [X19 + 0x18]
	0x039E1CB4 CMP X20, X8
	0x039E1CB8 B.CS 0x39E1CF4
	0x039E1CBC UBFM X8, X20, 0x1, 0x1F
	0x039E1CC0 STR S0, [X21]
	0x039E1CC4 ADD X20, X20, 0x1
	0x039E1CC8 UCVTF S0, W8
	0x039E1CCC CMP X20, 0x4
	0x039E1CD0 STUR S0, [X21 - 0x4]
	0x039E1CD4 ADD X21, X21, 0x8
	0x039E1CD8 B.NE 0x39E1C8C
	0x039E1CDC MOV X0, X19
	0x039E1CE0 LDP X20, X19, [X31 + 0x20]
	0x039E1CE4 LDP X30, X21, [X31 + 0x10]
	0x039E1CE8 LDP D9, D8, [X31], #0x30
	0x039E1CEC RET
	0x039E1CF0 BL 0x1C16F20
	0x039E1CF4 BL 0x1C16F28
	0x039E1CF8 STR X30, [X31 - 0x20]!
	0x039E1CFC STP X20, X19, [X31 + 0x10]
	0x039E1D00 ADRP X19, 0xA00000
	0x039E1D04 ADRP X20, 0x771000
	0x039E1D08 LDRB W8, [X19 + 0xDC6]
	0x039E1D0C LDR X20, [X20 + 0xE28]
	0x039E1D10 TBNZ X8, 0x0, 0x39E1D34
	0x039E1D14 ADRP X0, 0x771000
	0x039E1D18 LDR X0, [X0 + 0xE28]
	0x039E1D1C BL 0x1C16CF4
	0x039E1D20 ADRP X0, 0x73A000
	0x039E1D24 LDR X0, [X0 + 0x8F8]
	0x039E1D28 BL 0x1C16CF4
	0x039E1D2C MOVZ W8, 0x1
	0x039E1D30 STRB W8, [X19 + 0xDC6]
	0x039E1D34 LDR X0, [X20]
	0x039E1D38 ADRP X19, 0x73A000
	0x039E1D3C LDR W8, [X0 + 0xE0]
	0x039E1D40 LDR X19, [X19 + 0x8F8]
	0x039E1D44 CBNZ W8, 0x39E1D50
	0x039E1D48 BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xA01000
	011 Move X23, 0x773000
	012 Move X24, 0x71E000
	013 Move X20, 0x71C000
	014 Move W8, [X21+3519]
	015 Move X23, [X23+792]
	016 Move X24, [X24+1752]
	017 Move X20, [X20+2536]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x71C000
	024 Move X0, [X0+2536]
	025 Call 0x1C17CF4
	026 Move X0, 0x71B000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0x71E000
	030 Move X0, [X0+1752]
	031 Call 0x1C17CF4
	032 Move X0, 0x773000
	033 Move X0, [X0+824]
	034 Call 0x1C17CF4
	035 Move X0, 0x773000
	036 Move X0, [X0+832]
	037 Call 0x1C17CF4
	038 Move X0, 0x773000
	039 Move X0, [X0+792]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+3519], W8
	043 Move W8, 64
	044 Add X0, X31, 12
	045 Move X1, X31
	046 Move [X31+12], W8
	047 Call UInt32.ToString, X0
	048 Move X8, [X23]
	049 Move X2, [X24]
	050 Move X1, X0
	051 Move X3, X31
	052 Move X0, X8
	053 Call String.Concat, X0, X1, X2
	054 Move X8, [X20]
	055 Move X21, [X19+24]
	056 Move X20, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move W1, 2
	063 Move X0, X21
	064 Move X2, X31
	065 Call Convert.ToString, X0, X1
	066 Move X1, X0
	067 Move X0, X20
	068 Move X2, X31
	069 Call String.Format, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {210}
	072 Move X20, 0x71B000
	073 Move X25, 0x773000
	074 Move X26, 0x773000
	075 Move X20, [X20+1536]
	076 Move X25, [X25+832]
	077 Move X26, [X26+824]
	078 Move W1, 32
	079 Move W2, 48
	080 Move X3, X31
	081 Call String.Replace, X0, X1, X2
	082 Move X8, [X20]
	083 Move X20, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X1, [X25]
	090 Move X2, [X26]
	091 Move X0, X20
	092 Move X3, X31
	093 Call Regex.Replace, X0, X1, X2
	094 Move X20, X0
	095 Move W22, 64
	096 Add X0, X31, 12
	097 Move X1, X31
	098 Move [X31+12], W22
	099 Call UInt32.ToString, X0
	100 Move X8, [X23]
	101 Move X2, [X24]
	102 Move X1, X0
	103 Move X3, X31
	104 Move X0, X8
	105 Call String.Concat, X0, X1, X2
	106 Move X8, [X19+16]
	107 Move X21, X0
	108 Move W1, 2
	109 Move X2, X31
	110 Move X0, X8
	111 Call Convert.ToString, X0, X1
	112 Move X1, X0
	113 Move X0, X21
	114 Move X2, X31
	115 Call String.Format, X0, X1
	116 Compare X0, 0
	117 JumpIfEqual {210}
	118 Move W1, 32
	119 Move W2, 48
	120 Move X3, X31
	121 Call String.Replace, X0, X1, X2
	122 Move X1, [X25]
	123 Move X2, [X26]
	124 Move X3, X31
	125 Call Regex.Replace, X0, X1, X2
	126 Move X21, X0
	127 Add X0, X31, 12
	128 Move X1, X31
	129 Move [X31+12], W22
	130 Call UInt32.ToString, X0
	131 Move X8, [X23]
	132 Move X2, [X24]
	133 Move X1, X0
	134 Move X3, X31
	135 Move X0, X8
	136 Call String.Concat, X0, X1, X2
	137 Move X8, [X19+8]
	138 Move X22, X0
	139 Move W1, 2
	140 Move X2, X31
	141 Move X0, X8
	142 Call Convert.ToString, X0, X1
	143 Move X1, X0
	144 Move X0, X22
	145 Move X2, X31
	146 Call String.Format, X0, X1
	147 Compare X0, 0
	148 JumpIfEqual {210}
	149 Move W1, 32
	150 Move W2, 48
	151 Move X3, X31
	152 Call String.Replace, X0, X1, X2
	153 Move X1, [X25]
	154 Move X2, [X26]
	155 Move X3, X31
	156 Call Regex.Replace, X0, X1, X2
	157 Move X22, X0
	158 Move W8, 64
	159 Add X0, X31, 12
	160 Move X1, X31
	161 Move [X31+12], W8
	162 Call UInt32.ToString, X0
	163 Move X8, [X23]
	164 Move X2, [X24]
	165 Move X1, X0
	166 Move X3, X31
	167 Move X0, X8
	168 Call String.Concat, X0, X1, X2
	169 Move X8, [X19]
	170 Move X19, X0
	171 Move W1, 2
	172 Move X2, X31
	173 Move X0, X8
	174 Call Convert.ToString, X0, X1
	175 Move X1, X0
	176 Move X0, X19
	177 Move X2, X31
	178 Call String.Format, X0, X1
	179 Compare X0, 0
	180 JumpIfEqual {210}
	181 Move W1, 32
	182 Move W2, 48
	183 Move X3, X31
	184 Call String.Replace, X0, X1, X2
	185 Move X1, [X25]
	186 Move X2, [X26]
	187 Move X3, X31
	188 Call Regex.Replace, X0, X1, X2
	189 Compare X0, 0
	190 JumpIfEqual {210}
	191 Move W1, 46
	192 Move X2, X31
	193 Call String.TrimEnd, X0, X1
	194 Move X3, X0
	195 Move X0, X20
	196 Move X1, X21
	197 Move X2, X22
	198 Move X4, X31
	199 Call String.Concat, X0, X1, X2, X3
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X24, [X31+32]
	205 Move X23, [X31+40]
	206 Move X26, [X31+16]
	207 Move X25, [X31+24]
	208 Move X30, [X31+80]
	209 Return X0
	210 Call 0x1C17F20

Method: System.Boolean get_Item(System.UInt32 index)

Disassembly:
	0x039E1D4C LDR X0, [X20]
	0x039E1D50 LDR X8, [X19]
	0x039E1D54 LDR X9, [X0 + 0xB8]
	0x039E1D58 LDR W10, [X8 + 0xE0]
	0x039E1D5C LDR X19, [X9]
	0x039E1D60 CBNZ W10, 0x39E1D6C
	0x039E1D64 MOV X0, X8
	0x039E1D68 BL 0x1C16DFC
	0x039E1D6C MOV X0, X19
	0x039E1D70 BL 0x39E1DF8
	0x039E1D74 LDR X8, [X20]
	0x039E1D78 LDR X8, [X8 + 0xB8]
	0x039E1D7C STR X31, [X8]
	0x039E1D80 LDR X8, [X20]
	0x039E1D84 LDR X8, [X8 + 0xB8]
	0x039E1D88 LDR X0, [X8 + 0x18]
	0x039E1D8C BL 0x39E1DF8
	0x039E1D90 LDR X8, [X20]

ISIL:
	001 Subtract W8, W1, 128
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, [X0+24]
	004 And W8, W1, 63
	005 Add X8, X0, 8
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Move X9, [X8]
	009 Subtract W8, W1, 64
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move X9, [X0+16]
	012 NotImplemented "Instruction LSRV not yet implemented."
	013 And W0, W8, 1
	014 Return X0

Method: System.Void set_Item(System.UInt32 index, System.Boolean value)

Disassembly:
	0x039E1DD0 LDR X8, [X8 + 0xB8]
	0x039E1DD4 LDR X0, [X8 + 0x30]
	0x039E1DD8 STR X31, [X8 + 0x28]
	0x039E1DDC BL 0x39E1DF8
	0x039E1DE0 LDR X8, [X20]
	0x039E1DE4 LDP X20, X19, [X31 + 0x10]
	0x039E1DE8 LDR X8, [X8 + 0xB8]
	0x039E1DEC STR X31, [X8 + 0x30]
	0x039E1DF0 LDR X30, [X31], #0x20

ISIL:
	001 Move X8, X0
	002 Add X9, X0, 8
	003 Add X3, X0, 16
	004 Add X4, X0, 24
	005 And W5, W2, 1
	006 Move W0, W1
	007 Move X1, X8
	008 Move X2, X9

Method: System.Void .ctor(System.UInt64 initValue1, System.UInt64 initValue2, System.UInt64 initValue3, System.UInt64 initValue4)

Disassembly:
	0x039E1E9C MOV W19, W1
	0x039E1EA0 MOV W20, W0
	0x039E1EA4 TBNZ X8, 0x0, 0x39E1EBC

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Move [X0+16], X3
	004 Move [X0+24], X4
	005 Return 

Method: System.Void .ctor(System.Collections.Generic.IEnumerable`1<System.UInt32> bitIndexTrue)

Disassembly:
	0x039E1EA8 ADRP X0, 0x771000
	0x039E1EAC LDR X0, [X0 + 0xE28]
	0x039E1EB0 BL 0x1C16CF4
	0x039E1EB4 MOVZ W8, 0x1
	0x039E1EB8 STRB W8, [X22 + 0xDC7]
	0x039E1EBC LDR X0, [X21]
	0x039E1EC0 LDR W8, [X0 + 0xE0]
	0x039E1EC4 CBNZ W8, 0x39E1ED0
	0x039E1EC8 BL 0x1C16DFC
	0x039E1ECC LDR X0, [X21]
	0x039E1ED0 LDR X8, [X0 + 0xB8]
	0x039E1ED4 CMP W20, 0x5
	0x039E1ED8 B.NE 0x39E1EEC
	0x039E1EDC TBZ X19, 0x0, 0x39E1EE8
	0x039E1EE0 ADD X8, X8, 0x10
	0x039E1EE4 B 0x39E1EEC
	0x039E1EE8 ADD X8, X8, 0x8
	0x039E1EEC LDR X0, [X8]
	0x039E1EF0 LDP X20, X19, [X31 + 0x20]
	0x039E1EF4 LDP X22, X21, [X31 + 0x10]
	0x039E1EF8 LDR X30, [X31], #0x30
	0x039E1EFC RET
	0x039E1F00 SUB X31, X31, 0x110
	0x039E1F04 STP X29, X30, [X31 + 0xD0]
	0x039E1F08 STP X24, X23, [X31 + 0xE0]
	0x039E1F0C STP X22, X21, [X31 + 0xF0]
	0x039E1F10 STP X20, X19, [X31 + 0x100]
	0x039E1F14 ADRP X22, 0xA00000
	0x039E1F18 LDRB W8, [X22 + 0xDC8]
	0x039E1F1C MOV W19, W2
	0x039E1F20 MOV X20, X1
	0x039E1F24 MOV X21, X0
	0x039E1F28 TBNZ X8, 0x0, 0x39E1F40
	0x039E1F2C ADRP X0, 0x771000
	0x039E1F30 LDR X0, [X0 + 0xE28]
	0x039E1F34 BL 0x1C16CF4
	0x039E1F38 MOVZ W8, 0x1
	0x039E1F3C STRB W8, [X22 + 0xDC8]
	0x039E1F40 MOV X0, X31
	0x039E1F44 BL 0x3C3BB6C
	0x039E1F48 CMP W0, 0x1D
	0x039E1F4C B.LE 0x39E1FF0
	0x039E1F50 ADRP X22, 0x9F7000
	0x039E1F54 LDRB W8, [X22 + 0xAC0]
	0x039E1F58 CBNZ W8, 0x39E1F70
	0x039E1F5C ADRP X0, 0x716000
	0x039E1F60 LDR X0, [X0 + 0x270]
	0x039E1F64 BL 0x1C16CF4
	0x039E1F68 MOVZ W8, 0x1
	0x039E1F6C STRB W8, [X22 + 0xAC0]
	0x039E1F70 ADRP X8, 0x716000
	0x039E1F74 LDR X8, [X8 + 0x270]
	0x039E1F78 ADRP X22, 0x771000
	0x039E1F7C LDR X8, [X8]
	0x039E1F80 LDR X8, [X8 + 0xB8]
	0x039E1F84 LDR X22, [X22 + 0xE28]
	0x039E1F88 LDP V0, V1, [X8 + 0x60]
	0x039E1F8C LDP V3, V2, [X8 + 0x40]
	0x039E1F90 LDR X0, [X22]
	0x039E1F94 STP V0, V1, [X31 + 0xB0]
	0x039E1F98 STP V3, V2, [X31 + 0x90]
	0x039E1F9C LDR W8, [X0 + 0xE0]
	0x039E1FA0 CBNZ W8, 0x39E1FA8
	0x039E1FA4 BL 0x1C16DFC
	0x039E1FA8 CBZ X21, 0x39E20AC
	0x039E1FAC LDR X8, [X22]
	0x039E1FB0 LDP V0, V1, [X31 + 0x90]
	0x039E1FB4 LDP V2, V3, [X31 + 0xB0]
	0x039E1FB8 ADD X1, X31, 0x10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xA01000
	011 Move W8, [X21+3520]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x773000
	019 Move X0, [X0+800]
	020 Call 0x1C17CF4
	021 Move X0, 0x773000
	022 Move X0, [X0+808]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3520], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move X22, X20
	028 Move X23, X20
	029 Move [X22+16], V0
	030 Move [X23+8], V0
	031 Compare X19, 0
	032 JumpIfEqual {63}
	033 Move X8, 0x773000
	034 Move X8, [X8+800]
	035 Move X0, X19
	036 Move X1, [X8]
	037 Call Enumerable.Count, X0
	038 Subtract W21, W0, 1
	039 Move X25, 0x773000
	040 Move X25, [X25+808]
	041 Add X24, X20, 24
	042 Move W26, 1
	043 Move X2, [X25]
	044 Move X0, X19
	045 Move W1, W21
	046 Call Enumerable.ElementAt, X0, X1
	047 Subtract W8, W0, 64
	048 Move X8, X20
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W0, W8
	051 Move X8, X23
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract W0, W0, 128
	054 Move X8, X22
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract W0, W0, 192
	057 Move X8, X24
	058 Move X9, [X8]
	059 NotImplemented "Instruction LSLV not yet implemented."
	060 Or X9, X9, X10
	061 Move [X8], X9
	062 Subtract W21, W21, 1
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Return 

Method: UnityEngine.Rendering.BitArray256 op_OnesComplement(UnityEngine.Rendering.BitArray256 a)

Disassembly:
	0x039E1FBC LDR X8, [X8 + 0xB8]
	0x039E1FC0 MOVZ W5, 0x3
	0x039E1FC4 MOVZ W6, 0x1
	0x039E1FC8 MOV X0, X21
	0x039E1FCC LDR X7, [X8 + 0x20]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	004 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	005 Move [X8], V0
	006 Move [X8+8], V1
	007 Return X0

Method: UnityEngine.Rendering.BitArray256 op_BitwiseOr(UnityEngine.Rendering.BitArray256 a, UnityEngine.Rendering.BitArray256 b)

Disassembly:
	0x039E1FD0 MOV X2, X20
	0x039E1FD4 MOV W3, W19
	0x039E1FD8 MOV W4, W31
	0x039E1FDC STP V0, V1, [X31 + 0x10]
	0x039E1FE0 STP V2, V3, [X31 + 0x30]
	0x039E1FE4 STR X31, [X31]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 Or V0, V2, V0
	006 Or V1, V3, V1
	007 Move [X8], V0
	008 Move [X8+8], V1
	009 Return X0

Method: UnityEngine.Rendering.BitArray256 op_BitwiseAnd(UnityEngine.Rendering.BitArray256 a, UnityEngine.Rendering.BitArray256 b)

Disassembly:
	0x039E1FE8 BL 0x3C4F388
	0x039E1FEC B 0x39E2094
	0x039E1FF0 ADRP X23, 0x771000
	0x039E1FF4 LDR X23, [X23 + 0xE28]
	0x039E1FF8 LDR X0, [X23]
	0x039E1FFC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move V0, [X0]
	002 Move V1, [X0+16]
	003 Move V2, [X1]
	004 Move V3, [X1+16]
	005 And V0, V2, V0
	006 And V1, V3, V1
	007 Move [X8], V0
	008 Move [X8+8], V1
	009 Return X0

Method: UnityEngine.Rendering.IBitArray BitAnd(UnityEngine.Rendering.IBitArray other)

Disassembly:
	0x039E2000 CBNZ W8, 0x39E200C
	0x039E2004 BL 0x1C16DFC
	0x039E2008 LDR X0, [X23]
	0x039E200C LDR X8, [X0 + 0xB8]
	0x039E2010 ADRP X24, 0x9F6000
	0x039E2014 LDRB W9, [X24 + 0xAC0]
	0x039E2018 LDR X22, [X8 + 0x28]
	0x039E201C CBNZ W9, 0x39E2034
	0x039E2020 ADRP X0, 0x715000
	0x039E2024 LDR X0, [X0 + 0x270]
	0x039E2028 BL 0x1C16CF4
	0x039E202C MOVZ W8, 0x1
	0x039E2030 STRB W8, [X24 + 0xAC0]
	0x039E2034 ADRP X8, 0x715000
	0x039E2038 LDR X8, [X8 + 0x270]
	0x039E203C LDR X8, [X8]
	0x039E2040 LDR X8, [X8 + 0xB8]
	0x039E2044 LDP V1, V0, [X8 + 0x60]
	0x039E2048 LDP V2, V3, [X8 + 0x40]
	0x039E204C STP V1, V0, [X31 + 0xB0]
	0x039E2050 STP V2, V3, [X31 + 0x90]
	0x039E2054 CBZ X21, 0x39E20AC
	0x039E2058 LDR X8, [X23]
	0x039E205C LDP V0, V1, [X31 + 0x90]
	0x039E2060 LDP V2, V3, [X31 + 0xB0]
	0x039E2064 ADD X2, X31, 0x50
	0x039E2068 LDR X8, [X8 + 0xB8]
	0x039E206C MOV X0, X21
	0x039E2070 MOV X1, X22
	0x039E2074 MOV X3, X20
	0x039E2078 LDR X6, [X8 + 0x20]
	0x039E207C MOV W4, W31
	0x039E2080 MOV W5, W19
	0x039E2084 MOV X7, X31
	0x039E2088 STP V0, V1, [X31 + 0x50]
	0x039E208C STP V2, V3, [X31 + 0x70]
	0x039E2090 BL 0x3C4EDEC
	0x039E2094 LDP X20, X19, [X31 + 0x100]
	0x039E2098 LDP X22, X21, [X31 + 0xF0]
	0x039E209C LDP X24, X23, [X31 + 0xE0]
	0x039E20A0 LDP X29, X30, [X31 + 0xD0]
	0x039E20A4 ADD X31, X31, 0x110
	0x039E20A8 RET
	0x039E20AC BL 0x1C16F20
	0x039E20B0 SUB X31, X31, 0x110
	0x039E20B4 STP X29, X30, [X31 + 0xD0]
	0x039E20B8 STP X24, X23, [X31 + 0xE0]
	0x039E20BC STP X22, X21, [X31 + 0xF0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0xA00000
	010 Move W8, [X21+3521]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x772000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3521], W8
	022 Compare X19, 0
	023 JumpIfEqual {61}
	024 Move X21, 0x772000
	025 Move X21, [X21+872]
	026 Move X8, [X19]
	027 Move X1, [X21]
	028 Move X8, [X8+64]
	029 Move X9, [X1+64]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, [X20]
	032 Move X23, [X20+8]
	033 Move X24, [X20+16]
	034 Move X20, [X20+24]
	035 Move X0, X19
	036 Call 0x1C17E08
	037 Move X8, [X0]
	038 Move X9, [X0+8]
	039 Move X10, [X0+16]
	040 Move X11, [X0+24]
	041 Move X0, [X21]
	042 Add X1, X31, 0
	043 And X8, X8, X22
	044 And X9, X9, X23
	045 And X10, X10, X24
	046 And X11, X11, X20
	047 Move [X31], X8
	048 Move [X31+8], X9
	049 Move [X31+16], X10
	050 Move [X31+24], X11
	051 Call 0x1C17E04
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X24, [X31+48]
	057 Move X23, [X31+56]
	058 Move X30, [X31+32]
	059 Add X31, X31, 96
	060 Return X0
	061 Call 0x1C17F20
	062 Move X0, X19
	063 Call 0x1C181E0

Method: UnityEngine.Rendering.IBitArray BitOr(UnityEngine.Rendering.IBitArray other)

Disassembly:
	0x039E20C0 STP X20, X19, [X31 + 0x100]
	0x039E20C4 ADRP X22, 0x9FF000
	0x039E20C8 LDRB W8, [X22 + 0xDC9]
	0x039E20CC MOV W19, W2
	0x039E20D0 MOV X20, X1
	0x039E20D4 MOV X21, X0
	0x039E20D8 TBNZ X8, 0x0, 0x39E20F0
	0x039E20DC ADRP X0, 0x770000
	0x039E20E0 LDR X0, [X0 + 0xE28]
	0x039E20E4 BL 0x1C16CF4
	0x039E20E8 MOVZ W8, 0x1
	0x039E20EC STRB W8, [X22 + 0xDC9]
	0x039E20F0 MOV X0, X31
	0x039E20F4 BL 0x3C3BB6C
	0x039E20F8 CMP W0, 0x1D
	0x039E20FC B.LE 0x39E21A0
	0x039E2100 ADRP X22, 0x9F6000
	0x039E2104 LDRB W8, [X22 + 0xAC0]
	0x039E2108 CBNZ W8, 0x39E2120
	0x039E210C ADRP X0, 0x715000
	0x039E2110 LDR X0, [X0 + 0x270]
	0x039E2114 BL 0x1C16CF4
	0x039E2118 MOVZ W8, 0x1
	0x039E211C STRB W8, [X22 + 0xAC0]
	0x039E2120 ADRP X8, 0x715000
	0x039E2124 LDR X8, [X8 + 0x270]
	0x039E2128 ADRP X22, 0x770000
	0x039E212C LDR X8, [X8]
	0x039E2130 LDR X8, [X8 + 0xB8]
	0x039E2134 LDR X22, [X22 + 0xE28]
	0x039E2138 LDP V0, V1, [X8 + 0x60]
	0x039E213C LDP V3, V2, [X8 + 0x40]
	0x039E2140 LDR X0, [X22]
	0x039E2144 STP V0, V1, [X31 + 0xB0]
	0x039E2148 STP V3, V2, [X31 + 0x90]
	0x039E214C LDR W8, [X0 + 0xE0]
	0x039E2150 CBNZ W8, 0x39E2158
	0x039E2154 BL 0x1C16DFC
	0x039E2158 CBZ X21, 0x39E225C
	0x039E215C LDR X8, [X22]
	0x039E2160 LDP V0, V1, [X31 + 0x90]
	0x039E2164 LDP V2, V3, [X31 + 0xB0]
	0x039E2168 ADD X1, X31, 0x10
	0x039E216C LDR X8, [X8 + 0xB8]
	0x039E2170 MOVZ W4, 0x2
	0x039E2174 MOVZ W5, 0x4
	0x039E2178 MOVZ W6, 0x1
	0x039E217C LDR X7, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0xA00000
	010 Move W8, [X21+3522]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x772000
	018 Move X0, [X0+872]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3522], W8
	022 Compare X19, 0
	023 JumpIfEqual {61}
	024 Move X21, 0x772000
	025 Move X21, [X21+872]
	026 Move X8, [X19]
	027 Move X1, [X21]
	028 Move X8, [X8+64]
	029 Move X9, [X1+64]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, [X20]
	032 Move X23, [X20+8]
	033 Move X24, [X20+16]
	034 Move X20, [X20+24]
	035 Move X0, X19
	036 Call 0x1C17E08
	037 Move X8, [X0]
	038 Move X9, [X0+8]
	039 Move X10, [X0+16]
	040 Move X11, [X0+24]
	041 Move X0, [X21]
	042 Add X1, X31, 0
	043 Or X8, X8, X22
	044 Or X9, X9, X23
	045 Or X10, X10, X24
	046 Or X11, X11, X20
	047 Move [X31], X8
	048 Move [X31+8], X9
	049 Move [X31+16], X10
	050 Move [X31+24], X11
	051 Call 0x1C17E04
	052 Move X20, [X31+80]
	053 Move X19, [X31+88]
	054 Move X22, [X31+64]
	055 Move X21, [X31+72]
	056 Move X24, [X31+48]
	057 Move X23, [X31+56]
	058 Move X30, [X31+32]
	059 Add X31, X31, 96
	060 Return X0
	061 Call 0x1C17F20
	062 Move X0, X19
	063 Call 0x1C181E0

Method: UnityEngine.Rendering.IBitArray BitNot()

Disassembly:
	0x039E2180 MOV X0, X21
	0x039E2184 MOV X2, X20
	0x039E2188 MOV W3, W19
	0x039E218C STP V0, V1, [X31 + 0x10]
	0x039E2190 STP V2, V3, [X31 + 0x30]
	0x039E2194 STR X31, [X31]
	0x039E2198 BL 0x3C4F388
	0x039E219C B 0x39E2244
	0x039E21A0 ADRP X23, 0x770000
	0x039E21A4 LDR X23, [X23 + 0xE28]
	0x039E21A8 LDR X0, [X23]
	0x039E21AC LDR W8, [X0 + 0xE0]
	0x039E21B0 CBNZ W8, 0x39E21BC
	0x039E21B4 BL 0x1C16DFC
	0x039E21B8 LDR X0, [X23]
	0x039E21BC LDR X8, [X0 + 0xB8]
	0x039E21C0 ADRP X24, 0x9F6000
	0x039E21C4 LDRB W9, [X24 + 0xAC0]
	0x039E21C8 LDR X22, [X8 + 0x30]
	0x039E21CC CBNZ W9, 0x39E21E4
	0x039E21D0 ADRP X0, 0x715000
	0x039E21D4 LDR X0, [X0 + 0x270]
	0x039E21D8 BL 0x1C16CF4
	0x039E21DC MOVZ W8, 0x1
	0x039E21E0 STRB W8, [X24 + 0xAC0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xA00000
	007 Move X20, 0x772000
	008 Move W8, [X21+3523]
	009 Move X20, [X20+872]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x772000
	016 Move X0, [X0+872]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3523], W8
	020 Move V0, [X19]
	021 Move V1, [X19+16]
	022 Move X0, [X20]
	023 Add X1, X31, 0
	024 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	025 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	026 Move [X31], V0
	027 Move [X31+8], V1
	028 Call 0x1C17E04
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Add X31, X31, 64
	034 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.BitArray256 a, UnityEngine.Rendering.BitArray256 b)

Disassembly:
	0x039E21E4 ADRP X8, 0x715000
	0x039E21E8 LDR X8, [X8 + 0x270]
	0x039E21EC LDR X8, [X8]
	0x039E21F0 LDR X8, [X8 + 0xB8]
	0x039E21F4 LDP V1, V0, [X8 + 0x60]
	0x039E21F8 LDP V2, V3, [X8 + 0x40]
	0x039E21FC STP V1, V0, [X31 + 0xB0]
	0x039E2200 STP V2, V3, [X31 + 0x90]
	0x039E2204 CBZ X21, 0x39E225C
	0x039E2208 LDR X8, [X23]
	0x039E220C LDP V0, V1, [X31 + 0x90]
	0x039E2210 LDP V2, V3, [X31 + 0xB0]
	0x039E2214 ADD X2, X31, 0x50
	0x039E2218 LDR X8, [X8 + 0xB8]
	0x039E221C MOV X0, X21
	0x039E2220 MOV X1, X22
	0x039E2224 MOV X3, X20
	0x039E2228 LDR X6, [X8 + 0x20]
	0x039E222C MOV W4, W31

ISIL:
	001 Move X8, [X0]
	002 Move X9, [X1]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0+8]
	005 Move X9, [X1+8]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X0+16]
	008 Move X9, [X1+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X0+24]
	011 Move X9, [X1+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Return X0
	015 Move W0, W31
	016 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Rendering.BitArray256 a, UnityEngine.Rendering.BitArray256 b)

Disassembly:
	0x039E2230 MOV W5, W19
	0x039E2234 MOV X7, X31
	0x039E2238 STP V0, V1, [X31 + 0x50]
	0x039E223C STP V2, V3, [X31 + 0x70]
	0x039E2240 BL 0x3C4EDEC
	0x039E2244 LDP X20, X19, [X31 + 0x100]
	0x039E2248 LDP X22, X21, [X31 + 0xF0]
	0x039E224C LDP X24, X23, [X31 + 0xE0]
	0x039E2250 LDP X29, X30, [X31 + 0xD0]
	0x039E2254 ADD X31, X31, 0x110
	0x039E2258 RET
	0x039E225C BL 0x1C16F20
	0x039E2260 STR D12, [X31 - 0x60]!
	0x039E2264 STP D11, D10, [X31 + 0x8]
	0x039E2268 STP D9, D8, [X31 + 0x18]
	0x039E226C STR X30, [X31 + 0x28]
	0x039E2270 STP X24, X23, [X31 + 0x30]
	0x039E2274 STP X22, X21, [X31 + 0x40]
	0x039E2278 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move X8, [X0]
	002 Move X9, [X1]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, [X0+8]
	005 Move X9, [X1+8]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X0+16]
	008 Move X9, [X1+16]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X0+24]
	011 Move X9, [X1+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Return X0
	015 Move W0, 1
	016 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x039E227C ADRP X22, 0x9FF000
	0x039E2280 ADRP X23, 0x770000
	0x039E2284 LDRB W8, [X22 + 0xDCA]
	0x039E2288 LDR X23, [X23 + 0xE28]
	0x039E228C MOV W19, W2
	0x039E2290 MOV V12.16B, V4.16B
	0x039E2294 MOV V8.16B, V3.16B
	0x039E2298 MOV V9.16B, V2.16B
	0x039E229C MOV V10.16B, V1.16B
	0x039E22A0 MOV V11.16B, V0.16B
	0x039E22A4 MOV X20, X1
	0x039E22A8 MOV X21, X0
	0x039E22AC TBNZ X8, 0x0, 0x39E22DC
	0x039E22B0 ADRP X0, 0x771000
	0x039E22B4 LDR X0, [X0 + 0x1B0]
	0x039E22B8 BL 0x1C16CF4
	0x039E22BC ADRP X0, 0x770000
	0x039E22C0 LDR X0, [X0 + 0xE28]
	0x039E22C4 BL 0x1C16CF4
	0x039E22C8 ADRP X0, 0x76E000
	0x039E22CC LDR X0, [X0 + 0x618]
	0x039E22D0 BL 0x1C16CF4
	0x039E22D4 MOVZ W8, 0x1
	0x039E22D8 STRB W8, [X22 + 0xDCA]
	0x039E22DC LDR X0, [X23]
	0x039E22E0 ADRP X24, 0x771000
	0x039E22E4 LDR W8, [X0 + 0xE0]
	0x039E22E8 LDR X24, [X24 + 0x1B0]
	0x039E22EC CBNZ W8, 0x39E22F8
	0x039E22F0 BL 0x1C16DFC
	0x039E22F4 LDR X0, [X23]
	0x039E22F8 LDR X8, [X24]
	0x039E22FC LDR X9, [X0 + 0xB8]
	0x039E2300 LDR W10, [X8 + 0xE0]
	0x039E2304 LDR X22, [X9 + 0x20]
	0x039E2308 CBNZ W10, 0x39E2314
	0x039E230C MOV X0, X8
	0x039E2310 BL 0x1C16DFC
	0x039E2314 CBZ X22, 0x39E23B0
	0x039E2318 LDR X8, [X24]
	0x039E231C ADRP X24, 0x76E000
	0x039E2320 MOV X0, X22
	0x039E2324 MOV V0.16B, V12.16B
	0x039E2328 LDR X8, [X8 + 0xB8]
	0x039E232C MOV X2, X31
	0x039E2330 LDR W1, [X8 + 0x10]
	0x039E2334 LDR X24, [X24 + 0x618]
	0x039E2338 BL 0x3C125FC
	0x039E233C LDR X0, [X24]
	0x039E2340 LDR W8, [X0 + 0xE0]
	0x039E2344 CBNZ W8, 0x39E234C
	0x039E2348 BL 0x1C16DFC
	0x039E234C BL 0x39DD084
	0x039E2350 MOV W1, W31
	0x039E2354 BL 0x39E1E80
	0x039E2358 LDR X8, [X23]
	0x039E235C MOV X22, X0
	0x039E2360 LDR W9, [X8 + 0xE0]
	0x039E2364 CBNZ W9, 0x39E2370
	0x039E2368 MOV X0, X8
	0x039E236C BL 0x1C16DFC
	0x039E2370 AND W3, W19, 0x1
	0x039E2374 MOV X0, X21
	0x039E2378 MOV X1, X20
	0x039E237C MOV V0.16B, V11.16B
	0x039E2380 MOV V1.16B, V10.16B
	0x039E2384 MOV V2.16B, V9.16B
	0x039E2388 MOV V3.16B, V8.16B
	0x039E238C MOV X2, X22
	0x039E2390 LDP X20, X19, [X31 + 0x50]
	0x039E2394 LDP X22, X21, [X31 + 0x40]
	0x039E2398 LDP X24, X23, [X31 + 0x30]
	0x039E239C LDR X30, [X31 + 0x28]
	0x039E23A0 LDP D9, D8, [X31 + 0x18]
	0x039E23A4 LDP D11, D10, [X31 + 0x8]
	0x039E23A8 LDR V12, [X31], #0x60
	0x039E23AC B 0x39E23B4
	0x039E23B0 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA00000
	007 Move W8, [X21+3524]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x772000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3524], W8
	019 Compare X19, 0
	020 JumpIfEqual {86}
	021 Move X22, 0x772000
	022 Move X22, [X22+872]
	023 Move X9, [X19]
	024 Move X8, [X22]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X19
	027 Call 0x1C17E08
	028 Move X1, [X0]
	029 Move X0, X20
	030 Move X2, X31
	031 Call UInt64.Equals, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {86}
	036 Move X8, [X19]
	037 Move X1, [X22]
	038 Move X8, [X8+64]
	039 Move X9, [X1+64]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X19
	042 Add X21, X20, 8
	043 Call 0x1C17E08
	044 Move X1, [X0+8]
	045 Move X0, X21
	046 Move X2, X31
	047 Call UInt64.Equals, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {86}
	052 Move X8, [X19]
	053 Move X1, [X22]
	054 Move X8, [X8+64]
	055 Move X9, [X1+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X19
	058 Add X21, X20, 16
	059 Call 0x1C17E08
	060 Move X1, [X0+16]
	061 Move X0, X21
	062 Move X2, X31
	063 Call UInt64.Equals, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {86}
	068 Move X8, [X19]
	069 Move X1, [X22]
	070 Move X8, [X8+64]
	071 Move X9, [X1+64]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X19
	074 Add X20, X20, 24
	075 Call 0x1C17E08
	076 Move X1, [X0+24]
	077 Move X0, X20
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X2, X31
	083 Move X30, [X31+48]
	084 Call UInt64.Equals, X0, X1
	085 Return X0
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move W0, W31
	091 Move X30, [X31+48]
	092 Return X0
	093 Move X0, X19
	094 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x039E23B4 STP D11, D10, [X31 - 0x60]!
	0x039E23B8 STP D9, D8, [X31 + 0x10]
	0x039E23BC STP X30, X25, [X31 + 0x20]
	0x039E23C0 STP X24, X23, [X31 + 0x30]
	0x039E23C4 STP X22, X21, [X31 + 0x40]
	0x039E23C8 STP X20, X19, [X31 + 0x50]
	0x039E23CC ADRP X23, 0x9FF000
	0x039E23D0 ADRP X24, 0x770000
	0x039E23D4 LDRB W8, [X23 + 0xDCD]
	0x039E23D8 LDR X24, [X24 + 0xE28]
	0x039E23DC MOV W19, W3
	0x039E23E0 MOV X20, X2
	0x039E23E4 MOV V8.16B, V3.16B
	0x039E23E8 MOV V9.16B, V2.16B
	0x039E23EC MOV V10.16B, V1.16B
	0x039E23F0 MOV V11.16B, V0.16B
	0x039E23F4 MOV X22, X1
	0x039E23F8 MOV X21, X0
	0x039E23FC TBNZ X8, 0x0, 0x39E2420
	0x039E2400 ADRP X0, 0x771000
	0x039E2404 LDR X0, [X0 + 0x1B0]
	0x039E2408 BL 0x1C16CF4
	0x039E240C ADRP X0, 0x770000
	0x039E2410 LDR X0, [X0 + 0xE28]
	0x039E2414 BL 0x1C16CF4
	0x039E2418 MOVZ W8, 0x1
	0x039E241C STRB W8, [X23 + 0xDCD]
	0x039E2420 LDR X0, [X24]
	0x039E2424 ADRP X25, 0x771000
	0x039E2428 LDR W8, [X0 + 0xE0]
	0x039E242C LDR X25, [X25 + 0x1B0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X1, X31
	007 Move X19, X0
	008 Call UInt64.GetHashCode, X0
	009 Move W20, W0
	010 Add X0, X19, 8
	011 Move X1, X31
	012 Call UInt64.GetHashCode, X0
	013 Move W21, W0
	014 Add X0, X19, 16
	015 Move X1, X31
	016 Call UInt64.GetHashCode, X0
	017 Move W22, W0
	018 Add X0, X19, 24
	019 Move X1, X31
	020 Call UInt64.GetHashCode, X0
	021 Move W8, 0x5529
	022 Move W9, 0x6BB6
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction MADD not yet implemented."
	026 Multiply W9, W9, W8
	027 NotImplemented "Instruction MADD not yet implemented."
	028 Add W9, W9, W22
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 NotImplemented "Instruction MADD not yet implemented."
	034 Move X30, [X31+48]
	035 Return X0

