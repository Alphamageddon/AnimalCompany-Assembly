Type: UnityEngine.Rendering.ProbeVolumePerSceneData

Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()

Disassembly:
	0x039C8344 BL 0x1C16DFC
	0x039C8348 LDR X0, [X21]
	0x039C834C LDR X8, [X0 + 0xB8]
	0x039C8350 LDR X0, [X8 + 0x8]
	0x039C8354 CBZ X0, 0x39C838C
	0x039C8358 TBZ X19, 0x0, 0x39C836C
	0x039C835C MOVZ W1, 0x1
	0x039C8360 MOV X2, X31
	0x039C8364 BL 0x39C2860
	0x039C8368 B 0x39C8374
	0x039C836C MOV X1, X31
	0x039C8370 BL 0x39BA960
	0x039C8374 LDP X20, X19, [X31 + 0x60]
	0x039C8378 LDP X22, X21, [X31 + 0x50]
	0x039C837C LDP X30, X23, [X31 + 0x40]
	0x039C8380 ADD X31, X31, 0x70
	0x039C8384 RET
	0x039C8388 BL 0x1C16F20
	0x039C838C BL 0x1C16F20
	0x039C8390 B 0x39C8398
	0x039C8394 B 0x39C8398
	0x039C8398 MOV X19, X0
	0x039C839C CMP W1, 0x1
	0x039C83A0 B.NE 0x39C83D4
	0x039C83A4 MOV X0, X19
	0x039C83A8 BL 0x3EB1AD0
	0x039C83AC LDR X20, [X0]
	0x039C83B0 BL 0x3EB1AE0
	0x039C83B4 ADRP X8, 0x78A000
	0x039C83B8 LDR X8, [X8 + 0x360]
	0x039C83BC ADD X0, X31, 0x20
	0x039C83C0 LDR X1, [X8]
	0x039C83C4 BL 0x2BC434C
	0x039C83C8 CBZ X20, 0x39C82B0
	0x039C83CC MOV X0, X20
	0x039C83D0 BL 0x1C16F18
	0x039C83D4 MOV X20, X31
	0x039C83D8 B 0x39C83E0
	0x039C83DC MOV X19, X0
	0x039C83E0 ADRP X8, 0x78A000
	0x039C83E4 LDR X8, [X8 + 0x360]
	0x039C83E8 LDR X1, [X8]
	0x039C83EC ADD X0, X31, 0x20
	0x039C83F0 BL 0x2BC434C
	0x039C83F4 CBNZ X20, 0x39C8400
	0x039C83F8 MOV X0, X19
	0x039C83FC BL 0x1D2C690
	0x039C8400 MOV X0, X20
	0x039C8404 BL 0x1C16F18
	0x039C8408 BL 0x1990590
	0x039C840C STP X29, X30, [X31 - 0x60]!
	0x039C8410 STP X28, X27, [X31 + 0x10]
	0x039C8414 STP X26, X25, [X31 + 0x20]
	0x039C8418 STP X24, X23, [X31 + 0x30]
	0x039C841C STP X22, X21, [X31 + 0x40]
	0x039C8420 STP X20, X19, [X31 + 0x50]
	0x039C8424 ADRP X22, 0xA19000
	0x039C8428 ADRP X9, 0x789000
	0x039C842C LDRB W8, [X22 + 0xCE7]
	0x039C8430 LDR X9, [X9 + 0xF48]
	0x039C8434 MOV X20, X2
	0x039C8438 MOV X21, X1
	0x039C843C MOV X19, X0
	0x039C8440 TBNZ X8, 0x0, 0x39C8538
	0x039C8444 ADRP X0, 0x78A000
	0x039C8448 LDR X0, [X0 + 0xB38]
	0x039C844C MOV X23, X9
	0x039C8450 BL 0x1C16CF4
	0x039C8454 ADRP X0, 0x78A000
	0x039C8458 LDR X0, [X0 + 0xB40]
	0x039C845C BL 0x1C16CF4
	0x039C8460 ADRP X0, 0x786000
	0x039C8464 LDR X0, [X0 + 0x388]
	0x039C8468 BL 0x1C16CF4
	0x039C846C ADRP X0, 0x78A000
	0x039C8470 LDR X0, [X0 + 0xB48]
	0x039C8474 BL 0x1C16CF4
	0x039C8478 ADRP X0, 0x786000
	0x039C847C LDR X0, [X0 + 0x380]
	0x039C8480 BL 0x1C16CF4
	0x039C8484 ADRP X0, 0x78A000
	0x039C8488 LDR X0, [X0 + 0xB50]
	0x039C848C BL 0x1C16CF4
	0x039C8490 ADRP X0, 0x78A000
	0x039C8494 LDR X0, [X0 + 0xB58]
	0x039C8498 BL 0x1C16CF4
	0x039C849C ADRP X0, 0x78A000
	0x039C84A0 LDR X0, [X0 + 0xB60]
	0x039C84A4 BL 0x1C16CF4
	0x039C84A8 ADRP X0, 0x78A000
	0x039C84AC LDR X0, [X0 + 0xB68]
	0x039C84B0 BL 0x1C16CF4
	0x039C84B4 ADRP X0, 0x78A000
	0x039C84B8 LDR X0, [X0 + 0xB70]
	0x039C84BC BL 0x1C16CF4
	0x039C84C0 ADRP X0, 0x78A000
	0x039C84C4 LDR X0, [X0 + 0xB78]
	0x039C84C8 BL 0x1C16CF4
	0x039C84CC ADRP X0, 0x78A000
	0x039C84D0 LDR X0, [X0 + 0xB80]
	0x039C84D4 BL 0x1C16CF4
	0x039C84D8 ADRP X0, 0x78A000
	0x039C84DC LDR X0, [X0 + 0xB88]
	0x039C84E0 BL 0x1C16CF4
	0x039C84E4 ADRP X0, 0x78A000
	0x039C84E8 LDR X0, [X0 + 0xB90]
	0x039C84EC BL 0x1C16CF4
	0x039C84F0 ADRP X0, 0x78A000
	0x039C84F4 LDR X0, [X0 + 0xB98]
	0x039C84F8 BL 0x1C16CF4
	0x039C84FC ADRP X0, 0x78A000
	0x039C8500 LDR X0, [X0 + 0xBA0]
	0x039C8504 BL 0x1C16CF4
	0x039C8508 ADRP X0, 0x78A000
	0x039C850C LDR X0, [X0 + 0xBA8]
	0x039C8510 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X20, 0xA1A000
	009 Move W8, [X20+3286]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x78B000
	016 Move X0, [X0+2712]
	017 Call 0x1C17CF4
	018 Move X0, 0x78B000
	019 Move X0, [X0+2720]
	020 Call 0x1C17CF4
	021 Move X0, 0x78B000
	022 Move X0, [X0+2728]
	023 Call 0x1C17CF4
	024 Move X0, 0x78B000
	025 Move X0, [X0+2736]
	026 Call 0x1C17CF4
	027 Move X0, 0x78B000
	028 Move X0, [X0+2744]
	029 Call 0x1C17CF4
	030 Move X0, 0x78B000
	031 Move X0, [X0+2752]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3286], W8
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+96], V0
	037 Move [X31+104], V0
	038 Move [X31+5], V0
	039 Move X0, [X19+64]
	040 Compare X0, 0
	041 JumpIfEqual {102}
	042 Move X8, 0x78B000
	043 Move X8, [X8+2720]
	044 Move X1, [X8]
	045 Call Dictionary`2<Object, PerScenarioData>.Clear, X0
	046 Move X0, [X19+56]
	047 Compare X0, 0
	048 JumpIfEqual {102}
	049 Move X8, 0x78B000
	050 Move X8, [X8+2752]
	051 Move X21, 0x78B000
	052 Move X22, 0x78B000
	053 Move X20, 0x78B000
	054 Move X1, [X8]
	055 Move X21, [X21+2736]
	056 Move X22, [X22+2712]
	057 Move X20, [X20+2728]
	058 Add X8, X31, 32
	059 Call List`1<SerializablePerScenarioDataItem>.GetEnumerator, X0
	060 Move V0, [X31+32]
	061 Move V1, [X31+48]
	062 Move V2, [X31+4]
	063 Add X8, X31, 80
	064 Add X23, X8, 24
	065 Move [X31+80], V0
	066 Move [X31+88], V1
	067 Move [X31+7], V2
	068 Move X1, [X21]
	069 Add X0, X31, 80
	070 Call Enumerator<SerializablePerScenarioDataItem>.MoveNext, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {90}
	075 Move X0, [X19+64]
	076 Move X8, [X23+16]
	077 Move V0, [X23]
	078 Move X1, [X31+96]
	079 Move [X31+16], X8
	080 Move [X31], V0
	081 Compare X0, 0
	082 JumpIfEqual {101}
	083 Move V0, [X31]
	084 Move X8, [X31+16]
	085 Move X3, [X22]
	086 Move [X31+2], V0
	087 Move [X31+48], X8
	088 Add X2, X31, 32
	089 Call Dictionary`2<Object, PerScenarioData>.Add, X0, X1, X2
	090 Move X1, [X20]
	091 Add X0, X31, 80
	092 Call Enumerator<SerializablePerScenarioDataItem>.Dispose, X0
	093 Move X20, [X31+160]
	094 Move X19, [X31+168]
	095 Move X22, [X31+144]
	096 Move X21, [X31+152]
	097 Move X30, [X31+128]
	098 Move X23, [X31+136]
	099 Add X31, X31, 176
	100 Return 
	101 Call 0x1C17F20
	102 Call 0x1C17F20
	103 Move X19, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X19
	106 Call 0x3EB2AD0
	107 Move X20, [X0]
	108 Call 0x3EB2AE0
	109 Move X8, 0x78B000
	110 Move X8, [X8+2728]
	111 Add X0, X31, 80
	112 Move X1, [X8]
	113 Call Enumerator<SerializablePerScenarioDataItem>.Dispose, X0
	114 Compare X20, 0
	115 JumpIfEqual {93}
	116 Move X0, X20
	117 Call 0x1C17F18
	118 Move X20, X31
	119 Move X19, X0
	120 Move X8, 0x78B000
	121 Move X8, [X8+2728]
	122 Move X1, [X8]
	123 Add X0, X31, 80
	124 Call Enumerator<SerializablePerScenarioDataItem>.Dispose, X0
	125 Compare X20, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X19
	128 Call 0x1D2D690
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Call 0x1991590

Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()

Disassembly:
	0x039C8514 ADRP X0, 0x78A000
	0x039C8518 LDR X0, [X0 + 0xBB0]
	0x039C851C BL 0x1C16CF4
	0x039C8520 ADRP X0, 0x789000
	0x039C8524 LDR X0, [X0 + 0xF48]
	0x039C8528 BL 0x1C16CF4
	0x039C852C MOV X9, X23
	0x039C8530 MOVZ W8, 0x1
	0x039C8534 STRB W8, [X22 + 0xCE7]
	0x039C8538 ADRP X25, 0x78A000
	0x039C853C ADRP X24, 0x78A000
	0x039C8540 ADRP X22, 0x786000
	0x039C8544 LDR X25, [X25 + 0xB50]
	0x039C8548 LDR X24, [X24 + 0xB40]
	0x039C854C LDR X22, [X22 + 0x380]
	0x039C8550 LDR X0, [X9]
	0x039C8554 ADRP X29, 0x78A000
	0x039C8558 ADRP X28, 0x78A000
	0x039C855C ADRP X23, 0x78A000
	0x039C8560 ADRP X27, 0x78A000
	0x039C8564 ADRP X26, 0x78A000
	0x039C8568 LDR X29, [X29 + 0xB98]
	0x039C856C LDR X28, [X28 + 0xB70]
	0x039C8570 LDR W8, [X0 + 0xE0]
	0x039C8574 LDR X23, [X23 + 0xB90]
	0x039C8578 LDR X27, [X27 + 0xB80]
	0x039C857C LDR X26, [X26 + 0xBA8]
	0x039C8580 CBNZ W8, 0x39C85B8
	0x039C8584 MOV X29, X28
	0x039C8588 MOV X28, X23
	0x039C858C MOV X23, X27
	0x039C8590 MOV X27, X26
	0x039C8594 MOV X26, X9
	0x039C8598 BL 0x1C16DFC
	0x039C859C LDR X0, [X26]
	0x039C85A0 MOV X26, X27
	0x039C85A4 MOV X27, X23
	0x039C85A8 MOV X23, X28
	0x039C85AC MOV X28, X29
	0x039C85B0 ADRP X29, 0x78A000
	0x039C85B4 LDR X29, [X29 + 0xB98]
	0x039C85B8 LDR X8, [X0 + 0xB8]
	0x039C85BC MOV X0, X19
	0x039C85C0 MOV X1, X31
	0x039C85C4 LDR X8, [X8]
	0x039C85C8 STR X8, [X19 + 0x70]
	0x039C85CC BL 0x33BDD8C
	0x039C85D0 STP X21, X20, [X19 + 0x38]
	0x039C85D4 LDR X0, [X25]
	0x039C85D8 BL 0x1C16F10
	0x039C85DC LDR X1, [X24]
	0x039C85E0 MOV X20, X0
	0x039C85E4 BL 0x2A8BF3C
	0x039C85E8 STR X20, [X19 + 0x48]
	0x039C85EC LDR X0, [X22]
	0x039C85F0 BL 0x1C16F10
	0x039C85F4 ADRP X8, 0x786000
	0x039C85F8 LDR X8, [X8 + 0x388]
	0x039C85FC MOV X20, X0
	0x039C8600 LDR X1, [X8]
	0x039C8604 BL 0x2A88E9C
	0x039C8608 STR X20, [X19 + 0x50]
	0x039C860C ADRP X8, 0x78A000
	0x039C8610 LDR X8, [X8 + 0xB58]
	0x039C8614 LDR X0, [X8]
	0x039C8618 BL 0x1C16F10
	0x039C861C ADRP X8, 0x78A000
	0x039C8620 LDR X8, [X8 + 0xB38]
	0x039C8624 MOV X20, X0
	0x039C8628 LDR X1, [X8]
	0x039C862C BL 0x2AA4804
	0x039C8630 STR X20, [X19 + 0x58]
	0x039C8634 ADRP X8, 0x78A000
	0x039C8638 LDR X8, [X8 + 0xB60]
	0x039C863C LDR X0, [X8]
	0x039C8640 BL 0x1C16F10
	0x039C8644 ADRP X8, 0x78A000
	0x039C8648 LDR X8, [X8 + 0xB48]
	0x039C864C MOV X20, X0
	0x039C8650 LDR X1, [X8]
	0x039C8654 BL 0x2AAAD64
	0x039C8658 STR X20, [X19 + 0x60]
	0x039C865C ADRP X8, 0x78A000
	0x039C8660 LDR X8, [X8 + 0xBA0]
	0x039C8664 LDR X0, [X8]
	0x039C8668 BL 0x1C16F10
	0x039C866C ADRP X8, 0x78A000
	0x039C8670 LDR X8, [X8 + 0xB88]
	0x039C8674 MOV X20, X0
	0x039C8678 LDR X1, [X8]
	0x039C867C BL 0x301B7C4
	0x039C8680 STR X20, [X19 + 0x68]
	0x039C8684 ADRP X8, 0x78A000
	0x039C8688 LDR X8, [X8 + 0xBB0]
	0x039C868C LDR X0, [X8]
	0x039C8690 BL 0x1C16F10
	0x039C8694 ADRP X8, 0x78A000
	0x039C8698 LDR X8, [X8 + 0xB68]
	0x039C869C MOV X20, X0
	0x039C86A0 LDR X1, [X8]
	0x039C86A4 BL 0x3125A58
	0x039C86A8 STR X20, [X19 + 0x10]
	0x039C86AC LDR X0, [X29]
	0x039C86B0 BL 0x1C16F10
	0x039C86B4 LDR X1, [X28]
	0x039C86B8 MOV X20, X0
	0x039C86BC BL 0x3128918
	0x039C86C0 STR X20, [X19 + 0x18]
	0x039C86C4 LDR X0, [X23]
	0x039C86C8 BL 0x1C16F10
	0x039C86CC LDR X1, [X27]
	0x039C86D0 MOV X20, X0
	0x039C86D4 BL 0x312E87C
	0x039C86D8 STR X20, [X19 + 0x20]
	0x039C86DC LDR X0, [X26]
	0x039C86E0 BL 0x1C16F10
	0x039C86E4 ADRP X8, 0x78A000
	0x039C86E8 LDR X8, [X8 + 0xB78]
	0x039C86EC MOV X20, X0
	0x039C86F0 LDR X1, [X8]
	0x039C86F4 BL 0x312B4AC
	0x039C86F8 STR X20, [X19 + 0x28]
	0x039C86FC MOV X0, X19
	0x039C8700 LDP X20, X19, [X31 + 0x50]
	0x039C8704 LDP X22, X21, [X31 + 0x40]
	0x039C8708 LDP X24, X23, [X31 + 0x30]
	0x039C870C LDP X26, X25, [X31 + 0x20]
	0x039C8710 LDP X28, X27, [X31 + 0x10]
	0x039C8714 LDP X29, X30, [X31], #0x60
	0x039C8718 B 0x39C871C
	0x039C871C SUB X31, X31, 0x80
	0x039C8720 STR X30, [X31 + 0x40]
	0x039C8724 STP X24, X23, [X31 + 0x50]
	0x039C8728 STP X22, X21, [X31 + 0x60]
	0x039C872C STP X20, X19, [X31 + 0x70]
	0x039C8730 ADRP X20, 0xA19000
	0x039C8734 LDRB W8, [X20 + 0xCE9]
	0x039C8738 MOV X19, X0
	0x039C873C TBNZ X8, 0x0, 0x39C8790
	0x039C8740 ADRP X0, 0x78A000
	0x039C8744 LDR X0, [X0 + 0x9E0]
	0x039C8748 BL 0x1C16CF4
	0x039C874C ADRP X0, 0x78A000
	0x039C8750 LDR X0, [X0 + 0x9F8]
	0x039C8754 BL 0x1C16CF4
	0x039C8758 ADRP X0, 0x78A000
	0x039C875C LDR X0, [X0 + 0xA08]
	0x039C8760 BL 0x1C16CF4
	0x039C8764 ADRP X0, 0x78A000
	0x039C8768 LDR X0, [X0 + 0xA18]
	0x039C876C BL 0x1C16CF4
	0x039C8770 ADRP X0, 0x72C000
	0x039C8774 LDR X0, [X0 + 0x1C8]
	0x039C8778 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+160], X30
	003 Move [X31+176], X24
	004 Move [X31+184], X23
	005 Move [X31+192], X22
	006 Move [X31+200], X21
	007 Move [X31+208], X20
	008 Move [X31+216], X19
	009 Move X20, 0xA1A000
	010 Move W8, [X20+3287]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x78B000
	017 Move X0, [X0+2760]
	018 Call 0x1C17CF4
	019 Move X0, 0x78B000
	020 Move X0, [X0+2768]
	021 Call 0x1C17CF4
	022 Move X0, 0x78B000
	023 Move X0, [X0+2776]
	024 Call 0x1C17CF4
	025 Move X0, 0x78B000
	026 Move X0, [X0+2784]
	027 Call 0x1C17CF4
	028 Move X0, 0x78B000
	029 Move X0, [X0+2792]
	030 Call 0x1C17CF4
	031 Move X0, 0x78B000
	032 Move X0, [X0+2800]
	033 Call 0x1C17CF4
	034 Move X0, 0x78B000
	035 Move X0, [X0+2808]
	036 Call 0x1C17CF4
	037 Move X0, 0x78B000
	038 Move X0, [X0+2816]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+3287], W8
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+80], X31
	044 Move [X31+48], V0
	045 Move [X31+56], V0
	046 Move [X31+2], V0
	047 Move X8, [X19+56]
	048 Compare X8, 0
	049 JumpIfEqual {141}
	050 Move W2, [X8+24]
	051 Move W9, [X8+28]
	052 Add W9, W9, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X8+24], W31
	055 Move [X8+28], W9
	056 Move X0, [X8+16]
	057 Move W1, W31
	058 Move X3, X31
	059 Call Array.Clear, X0, X1, X2
	060 Move X0, [X19+64]
	061 Compare X0, 0
	062 JumpIfEqual {141}
	063 Move X8, 0x78B000
	064 Move X8, [X8+2760]
	065 Move X21, 0x78B000
	066 Move X22, 0x78B000
	067 Move X20, 0x78B000
	068 Move X1, [X8]
	069 Move X21, [X21+2776]
	070 Move X22, [X22+2808]
	071 Move X20, [X20+2768]
	072 Add X8, X31, 32
	073 Add X23, X31, 32
	074 Call Dictionary`2<Object, PerScenarioData>.GetEnumerator, X0
	075 Add X8, X31, 128
	076 Add X23, X23, 24
	077 Add X24, X8, 8
	078 Move X1, [X21]
	079 Add X0, X31, 32
	080 Call Enumerator<Object, PerScenarioData>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {125}
	085 Move X0, [X19+56]
	086 Move X9, [X23+16]
	087 Move V0, [X23]
	088 Move X8, [X31+48]
	089 Move [X31+16], X9
	090 Move [X31], V0
	091 Compare X0, 0
	092 JumpIfEqual {137}
	093 Move V0, [X31]
	094 Move X9, [X31+16]
	095 Move X10, [X22]
	096 Move [X31+6], V0
	097 Move [X31+112], X9
	098 Move W11, [X0+28]
	099 Move X9, [X0+16]
	100 Add W11, W11, 1
	101 Move [X0+28], W11
	102 Compare X9, 0
	103 JumpIfEqual {139}
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Move W12, [X9+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W10, W11, 1
	108 Add X9, X9, X11
	109 Move [X0+24], W10
	110 Move [X9+32], X8
	111 Move X8, [X31+112]
	112 Move V0, [X31+6]
	113 Move [X9+56], X8
	114 Move [X9+40], V0
	115 Move X9, [X10+32]
	116 Move X10, [X31+112]
	117 Move V0, [X31+6]
	118 Move X9, [X9+192]
	119 Move X2, [X9+112]
	120 Move [X31+128], X8
	121 Move [X24+16], X10
	122 Move [X24], V0
	123 Add X1, X31, 128
	124 Call List`1<SerializablePerScenarioDataItem>.AddWithResize, X0, X1
	125 Move X1, [X20]
	126 Add X0, X31, 32
	127 Call Enumerator<Object, PerScenarioData>.Dispose, X0
	128 Move X20, [X31+208]
	129 Move X19, [X31+216]
	130 Move X22, [X31+192]
	131 Move X21, [X31+200]
	132 Move X24, [X31+176]
	133 Move X23, [X31+184]
	134 Move X30, [X31+160]
	135 Add X31, X31, 224
	136 Return 
	137 Move X21, X20
	138 Call 0x1C17F20
	139 Move X21, X20
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Move X21, X20
	143 Move X19, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X19
	146 Call 0x3EB2AD0
	147 Move X20, [X0]
	148 Call 0x3EB2AE0
	149 Move X1, [X21]
	150 Add X0, X31, 32
	151 Call Enumerator<Object, PerScenarioData>.Dispose, X0
	152 Compare X20, 0
	153 JumpIfEqual {128}
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Move X20, X31
	157 Move X19, X0
	158 Move X1, [X21]
	159 Add X0, X31, 32
	160 Call Enumerator<Object, PerScenarioData>.Dispose, X0
	161 Compare X20, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X19
	164 Call 0x1D2D690
	165 Move X0, X20
	166 Call 0x1C17F18
	167 Call 0x1991590

Method: System.Void Clear()

Disassembly:
	0x039C877C ADRP X0, 0x72B000
	0x039C8780 LDR X0, [X0 + 0x598]
	0x039C8784 BL 0x1C16CF4
	0x039C8788 MOVZ W8, 0x1
	0x039C878C STRB W8, [X20 + 0xCE9]
	0x039C8790 STP X31, X31, [X31 + 0x20]
	0x039C8794 STR X31, [X31 + 0x30]
	0x039C8798 LDR X0, [X19 + 0x30]
	0x039C879C CBZ X0, 0x39C8878
	0x039C87A0 ADRP X8, 0x78A000
	0x039C87A4 LDR X8, [X8 + 0xA18]
	0x039C87A8 ADRP X23, 0x78A000
	0x039C87AC ADRP X24, 0x72B000
	0x039C87B0 ADRP X22, 0x78A000
	0x039C87B4 LDR X1, [X8]
	0x039C87B8 LDR X23, [X23 + 0x9F8]
	0x039C87BC LDR X24, [X24 + 0x598]
	0x039C87C0 LDR X22, [X22 + 0x9E0]
	0x039C87C4 ADD X8, X31, 0x8
	0x039C87C8 BL 0x301CB58
	0x039C87CC LDUR V0, [X31 + 0x8]
	0x039C87D0 LDR X8, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA1A000
	005 Move W8, [X20+3288]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x78B000
	012 Move X0, [X0+2720]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3288], W8
	016 Move X0, X19
	017 Call ProbeVolumePerSceneData.QueueAssetRemoval, X0
	018 Move X0, [X19+64]
	019 Compare X0, 0
	020 JumpIfEqual {29}
	021 Move X8, 0x78B000
	022 Move X8, [X8+2720]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X1, [X8]
	026 Move X30, [X31+32]
	027 Call Dictionary`2<Object, PerScenarioData>.Clear, X0
	028 Return 
	029 Call 0x1C17F20

Method: System.Void RemoveScenario(System.String scenario)

Disassembly:
	0x039C88B4 CBZ X20, 0x39C8850
	0x039C88B8 MOV X0, X20
	0x039C88BC BL 0x1C16F18
	0x039C88C0 MOV X19, X0
	0x039C88C4 MOV X20, X31
	0x039C88C8 B 0x39C88D0
	0x039C88CC MOV X19, X0
	0x039C88D0 LDR X1, [X22]
	0x039C88D4 ADD X0, X31, 0x20
	0x039C88D8 BL 0x2BC434C
	0x039C88DC CBNZ X20, 0x39C88E8
	0x039C88E0 MOV X0, X19
	0x039C88E4 BL 0x1D2C690
	0x039C88E8 MOV X0, X20
	0x039C88EC BL 0x1C16F18
	0x039C88F0 BL 0x1990590
	0x039C88F4 STP X1, X2, [X0 + 0x38]
	0x039C88F8 B 0x39C871C
	0x039C88FC SUB X31, X31, 0x1C0
	0x039C8900 STP X29, X30, [X31 + 0x180]
	0x039C8904 STP X24, X23, [X31 + 0x190]
	0x039C8908 STP X22, X21, [X31 + 0x1A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1A000
	006 Move W8, [X21+3289]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x78B000
	014 Move X0, [X0+2824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3289], W8
	018 Move X0, [X20+64]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x78B000
	022 Move X8, [X8+2824]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<Object, PerScenarioData>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void RenameScenario(System.String scenario, System.String newName)

Disassembly:
	0x039C890C STP X20, X19, [X31 + 0x1B0]
	0x039C8910 ADRP X20, 0xA19000
	0x039C8914 LDRB W8, [X20 + 0xCE8]
	0x039C8918 MOV X19, X0
	0x039C891C TBNZ X8, 0x0, 0x39C8AE4
	0x039C8920 ADRP X0, 0x786000
	0x039C8924 LDR X0, [X0 + 0x2C8]
	0x039C8928 BL 0x1C16CF4
	0x039C892C ADRP X0, 0x78A000
	0x039C8930 LDR X0, [X0 + 0xBB8]
	0x039C8934 BL 0x1C16CF4
	0x039C8938 ADRP X0, 0x78A000
	0x039C893C LDR X0, [X0 + 0xBC0]
	0x039C8940 BL 0x1C16CF4
	0x039C8944 ADRP X0, 0x78A000
	0x039C8948 LDR X0, [X0 + 0xBC8]
	0x039C894C BL 0x1C16CF4
	0x039C8950 ADRP X0, 0x78A000
	0x039C8954 LDR X0, [X0 + 0xB38]
	0x039C8958 BL 0x1C16CF4
	0x039C895C ADRP X0, 0x78A000
	0x039C8960 LDR X0, [X0 + 0xB40]
	0x039C8964 BL 0x1C16CF4
	0x039C8968 ADRP X0, 0x786000
	0x039C896C LDR X0, [X0 + 0x388]
	0x039C8970 BL 0x1C16CF4
	0x039C8974 ADRP X0, 0x78A000
	0x039C8978 LDR X0, [X0 + 0xB48]
	0x039C897C BL 0x1C16CF4
	0x039C8980 ADRP X0, 0x786000
	0x039C8984 LDR X0, [X0 + 0x380]
	0x039C8988 BL 0x1C16CF4
	0x039C898C ADRP X0, 0x78A000
	0x039C8990 LDR X0, [X0 + 0xB50]
	0x039C8994 BL 0x1C16CF4
	0x039C8998 ADRP X0, 0x78A000
	0x039C899C LDR X0, [X0 + 0xB58]
	0x039C89A0 BL 0x1C16CF4
	0x039C89A4 ADRP X0, 0x78A000
	0x039C89A8 LDR X0, [X0 + 0xB60]
	0x039C89AC BL 0x1C16CF4
	0x039C89B0 ADRP X0, 0x78A000
	0x039C89B4 LDR X0, [X0 + 0x9E0]
	0x039C89B8 BL 0x1C16CF4
	0x039C89BC ADRP X0, 0x78A000
	0x039C89C0 LDR X0, [X0 + 0xBD0]
	0x039C89C4 BL 0x1C16CF4
	0x039C89C8 ADRP X0, 0x78A000
	0x039C89CC LDR X0, [X0 + 0xBD8]
	0x039C89D0 BL 0x1C16CF4
	0x039C89D4 ADRP X0, 0x78A000
	0x039C89D8 LDR X0, [X0 + 0xBE0]
	0x039C89DC BL 0x1C16CF4
	0x039C89E0 ADRP X0, 0x78A000
	0x039C89E4 LDR X0, [X0 + 0xBE8]
	0x039C89E8 BL 0x1C16CF4
	0x039C89EC ADRP X0, 0x78A000
	0x039C89F0 LDR X0, [X0 + 0xBF0]
	0x039C89F4 BL 0x1C16CF4
	0x039C89F8 ADRP X0, 0x78A000
	0x039C89FC LDR X0, [X0 + 0xBF8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0xA1A000
	008 Move W8, [X22+3290]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x78B000
	017 Move X0, [X0+2712]
	018 Call 0x1C17CF4
	019 Move X0, 0x78B000
	020 Move X0, [X0+2824]
	021 Call 0x1C17CF4
	022 Move X0, 0x78B000
	023 Move X0, [X0+2832]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3290], W8
	027 Move [X31+24], X31
	028 Move [X31+32], X31
	029 Move [X31+40], X31
	030 Move X0, [X20+64]
	031 Compare X0, 0
	032 JumpIfEqual {75}
	033 Move X8, 0x78B000
	034 Move X8, [X8+2832]
	035 Add X2, X31, 24
	036 Move X1, X21
	037 Move X3, [X8]
	038 Call Dictionary`2<Object, PerScenarioData>.TryGetValue, X0, X1, X2
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {68}
	043 Move X0, [X20+64]
	044 Compare X0, 0
	045 JumpIfEqual {75}
	046 Move X8, 0x78B000
	047 Move X8, [X8+2824]
	048 Move X1, X21
	049 Move X2, [X8]
	050 Call Dictionary`2<Object, PerScenarioData>.Remove, X0, X1
	051 Move X0, [X20+64]
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+40]
	054 Move [X31], V0
	055 Move [X31+16], X8
	056 Compare X0, 0
	057 JumpIfEqual {75}
	058 Move X8, 0x78B000
	059 Move X8, [X8+2712]
	060 Move V0, [X31]
	061 Move X9, [X31+16]
	062 Add X2, X31, 48
	063 Move X3, [X8]
	064 Move X1, X19
	065 Move [X31+3], V0
	066 Move [X31+64], X9
	067 Call Dictionary`2<Object, PerScenarioData>.Add, X0, X1, X2
	068 Move X20, [X31+112]
	069 Move X19, [X31+120]
	070 Move X22, [X31+96]
	071 Move X21, [X31+104]
	072 Move X30, [X31+80]
	073 Add X31, X31, 128
	074 Return 
	075 Call 0x1C17F20

Method: System.Boolean ResolveCells()

Disassembly:
	0x039C8A00 BL 0x1C16CF4
	0x039C8A04 ADRP X0, 0x78A000
	0x039C8A08 LDR X0, [X0 + 0xC00]
	0x039C8A0C BL 0x1C16CF4
	0x039C8A10 ADRP X0, 0x78A000
	0x039C8A14 LDR X0, [X0 + 0xC08]
	0x039C8A18 BL 0x1C16CF4
	0x039C8A1C ADRP X0, 0x78A000
	0x039C8A20 LDR X0, [X0 + 0x9F8]
	0x039C8A24 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ProbeVolumePerSceneData.ResolveSharedCellData, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {14}
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call ProbeVolumePerSceneData.ResolvePerScenarioCellData, X0
	013 Return X0
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Boolean ResolveSharedCellData()

Disassembly:
	0x039C8A28 ADRP X0, 0x78A000
	0x039C8A2C LDR X0, [X0 + 0xC10]
	0x039C8A30 BL 0x1C16CF4
	0x039C8A34 ADRP X0, 0x78A000
	0x039C8A38 LDR X0, [X0 + 0xC18]
	0x039C8A3C BL 0x1C16CF4
	0x039C8A40 ADRP X0, 0x78A000
	0x039C8A44 LDR X0, [X0 + 0xC20]
	0x039C8A48 BL 0x1C16CF4
	0x039C8A4C ADRP X0, 0x78A000
	0x039C8A50 LDR X0, [X0 + 0xA08]
	0x039C8A54 BL 0x1C16CF4
	0x039C8A58 ADRP X0, 0x78A000
	0x039C8A5C LDR X0, [X0 + 0xC28]
	0x039C8A60 BL 0x1C16CF4
	0x039C8A64 ADRP X0, 0x78A000
	0x039C8A68 LDR X0, [X0 + 0xC30]
	0x039C8A6C BL 0x1C16CF4
	0x039C8A70 ADRP X0, 0x78A000
	0x039C8A74 LDR X0, [X0 + 0xC38]
	0x039C8A78 BL 0x1C16CF4
	0x039C8A7C ADRP X0, 0x78A000
	0x039C8A80 LDR X0, [X0 + 0xC40]
	0x039C8A84 BL 0x1C16CF4
	0x039C8A88 ADRP X0, 0x78A000
	0x039C8A8C LDR X0, [X0 + 0xC48]
	0x039C8A90 BL 0x1C16CF4
	0x039C8A94 ADRP X0, 0x78A000
	0x039C8A98 LDR X0, [X0 + 0xA18]
	0x039C8A9C BL 0x1C16CF4
	0x039C8AA0 ADRP X0, 0x78A000
	0x039C8AA4 LDR X0, [X0 + 0xC50]
	0x039C8AA8 BL 0x1C16CF4
	0x039C8AAC ADRP X0, 0x78A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1A000
	006 Move X20, 0x72C000
	007 Move W8, [X21+3291]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x72C000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3291], W8
	019 Move X0, [X20]
	020 Move X20, [X19+32]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {44}
	033 Move X0, [X19+32]
	034 Compare X0, 0
	035 JumpIfEqual {50}
	036 Move X1, [X19+40]
	037 Move X2, [X19+48]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call ProbeVolumeAsset.ResolveSharedCellData, X0, X1, X2
	043 Return X0
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move W0, W31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean ResolvePerScenarioCellData()

Disassembly:
	0x039C8AB0 LDR X0, [X0 + 0xB88]
	0x039C8AB4 BL 0x1C16CF4
	0x039C8AB8 ADRP X0, 0x78A000
	0x039C8ABC LDR X0, [X0 + 0xBA0]
	0x039C8AC0 BL 0x1C16CF4
	0x039C8AC4 ADRP X0, 0x789000
	0x039C8AC8 LDR X0, [X0 + 0xF48]
	0x039C8ACC BL 0x1C16CF4
	0x039C8AD0 ADRP X0, 0x72B000
	0x039C8AD4 LDR X0, [X0 + 0x988]
	0x039C8AD8 BL 0x1C16CF4
	0x039C8ADC MOVZ W8, 0x1
	0x039C8AE0 STRB W8, [X20 + 0xCE8]
	0x039C8AE4 MOVI V0.2D, 0x0
	0x039C8AE8 STR X31, [X31 + 0xE0]
	0x039C8AEC STP X31, X31, [X31 + 0x80]
	0x039C8AF0 STP V0, V0, [X31 + 0x140]
	0x039C8AF4 STP V0, V0, [X31 + 0x120]
	0x039C8AF8 STP V0, V0, [X31 + 0x100]
	0x039C8AFC STR V0, [X31 + 0xF]
	0x039C8B00 STP V0, V0, [X31 + 0xC0]
	0x039C8B04 STP V0, V0, [X31 + 0xA0]
	0x039C8B08 STR X31, [X31 + 0x90]
	0x039C8B0C LDR X8, [X19 + 0x10]
	0x039C8B10 CBZ X8, 0x39C8F7C
	0x039C8B14 LDR X8, [X19 + 0x18]
	0x039C8B18 CBZ X8, 0x39C8F7C
	0x039C8B1C LDR X8, [X19 + 0x20]
	0x039C8B20 CBZ X8, 0x39C8F7C
	0x039C8B24 LDR X8, [X19 + 0x28]
	0x039C8B28 CBZ X8, 0x39C8F7C
	0x039C8B2C ADRP X8, 0x78A000
	0x039C8B30 LDR X8, [X8 + 0xB50]
	0x039C8B34 LDR X0, [X8]
	0x039C8B38 BL 0x1C16F10
	0x039C8B3C ADRP X8, 0x78A000
	0x039C8B40 LDR X8, [X8 + 0xB40]
	0x039C8B44 MOV X20, X0
	0x039C8B48 LDR X1, [X8]
	0x039C8B4C BL 0x2A8BF3C
	0x039C8B50 STR X20, [X19 + 0x48]
	0x039C8B54 ADRP X8, 0x786000
	0x039C8B58 LDR X8, [X8 + 0x380]
	0x039C8B5C LDR X0, [X8]
	0x039C8B60 BL 0x1C16F10
	0x039C8B64 ADRP X8, 0x786000
	0x039C8B68 LDR X8, [X8 + 0x388]
	0x039C8B6C MOV X20, X0
	0x039C8B70 LDR X1, [X8]
	0x039C8B74 BL 0x2A88E9C
	0x039C8B78 STR X20, [X19 + 0x50]
	0x039C8B7C ADRP X8, 0x78A000
	0x039C8B80 LDR X8, [X8 + 0xB58]
	0x039C8B84 LDR X0, [X8]
	0x039C8B88 BL 0x1C16F10
	0x039C8B8C ADRP X8, 0x78A000
	0x039C8B90 LDR X8, [X8 + 0xB38]
	0x039C8B94 MOV X20, X0
	0x039C8B98 LDR X1, [X8]
	0x039C8B9C BL 0x2AA4804
	0x039C8BA0 STR X20, [X19 + 0x58]
	0x039C8BA4 ADRP X8, 0x78A000
	0x039C8BA8 LDR X8, [X8 + 0xB60]
	0x039C8BAC LDR X0, [X8]
	0x039C8BB0 BL 0x1C16F10
	0x039C8BB4 ADRP X8, 0x78A000
	0x039C8BB8 LDR X8, [X8 + 0xB48]
	0x039C8BBC MOV X20, X0
	0x039C8BC0 LDR X1, [X8]
	0x039C8BC4 BL 0x2AAAD64
	0x039C8BC8 STR X20, [X19 + 0x60]
	0x039C8BCC ADRP X8, 0x78A000
	0x039C8BD0 LDR X8, [X8 + 0xBA0]
	0x039C8BD4 LDR X0, [X8]
	0x039C8BD8 BL 0x1C16F10
	0x039C8BDC ADRP X8, 0x78A000
	0x039C8BE0 LDR X8, [X8 + 0xB88]
	0x039C8BE4 MOV X20, X0
	0x039C8BE8 LDR X1, [X8]
	0x039C8BEC BL 0x301B7C4
	0x039C8BF0 LDR X0, [X19 + 0x10]
	0x039C8BF4 STR X20, [X19 + 0x68]
	0x039C8BF8 CBZ X0, 0x39C8FB0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X20, 0xA1A000
	008 Move W8, [X20+3292]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78B000
	015 Move X0, [X0+2832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3292], W8
	019 Move [X31+24], X31
	020 Move [X31+32], X31
	021 Move [X31+40], X31
	022 Move [X31], X31
	023 Move [X31+8], X31
	024 Move [X31+16], X31
	025 Move X22, 0x78B000
	026 Move X1, [X19+80]
	027 Move X21, [X19+88]
	028 Move X22, [X22+2832]
	029 Compare X1, 0
	030 JumpIfEqual {49}
	031 Move X0, [X19+64]
	032 Compare X0, 0
	033 JumpIfEqual {95}
	034 Move X3, [X22]
	035 Add X2, X31, 24
	036 Call Dictionary`2<Object, PerScenarioData>.TryGetValue, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {53}
	041 Move X0, [X19+32]
	042 Compare X0, 0
	043 JumpIfEqual {95}
	044 Move X1, [X31+32]
	045 Move X2, [X31+40]
	046 Move W3, W31
	047 Call ProbeVolumeAsset.ResolvePerScenarioCellData, X0, X1, X2, X3
	048 And W20, W0, 1
	049 Move W20, W31
	050 Move X1, X21
	051 Compare X1, 0
	052 JumpIfNotEqual {57}
	053 Move W20, W31
	054 Move X1, [X19+88]
	055 Compare X1, 0
	056 JumpIfEqual {76}
	057 Move X0, [X19+64]
	058 Compare X0, 0
	059 JumpIfEqual {95}
	060 Move X3, [X22]
	061 Add X2, X31, 0
	062 Call Dictionary`2<Object, PerScenarioData>.TryGetValue, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {76}
	067 Move X0, [X19+32]
	068 Compare X0, 0
	069 JumpIfEqual {95}
	070 Move X1, [X31+8]
	071 Move X2, [X31+16]
	072 Move W3, W20
	073 Call ProbeVolumeAsset.ResolvePerScenarioCellData, X0, X1, X2, X3
	074 And W8, W0, 1
	075 Add W20, W20, W8
	076 Move X8, [X19+32]
	077 Compare X8, 0
	078 JumpIfEqual {95}
	079 Move X8, [X8+32]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 Compare X8, 0
	083 JumpIfEqual {95}
	084 Move W10, [X8+24]
	085 Move W11, W31
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X12, X8, W11
	088 Move X12, [X12+32]
	089 Compare X12, 0
	090 JumpIfEqual {95}
	091 Add W11, W11, 1
	092 Move [X12+52], W9
	093 Compare X8, 0
	094 JumpIfNotEqual {86}
	095 Call 0x1C17F20
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W8, 1
	098 NotImplemented "Instruction CINC not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X30, [X31+48]
	105 NotImplemented "Instruction CSET not yet implemented."
	106 Add X31, X31, 96
	107 Return X0
	108 Call 0x1C17F28

Method: System.Void QueueAssetLoading()

Disassembly:
	0x039C8BFC ADRP X8, 0x78A000
	0x039C8C00 LDR X8, [X8 + 0xC40]
	0x039C8C04 LDR X1, [X8]
	0x039C8C08 ADD X8, X31, 0x30
	0x039C8C0C BL 0x3127030
	0x039C8C10 LDP V0, V1, [X31 + 0x30]
	0x039C8C14 LDR V2, [X31 + 0x5]
	0x039C8C18 ADRP X20, 0x78A000
	0x039C8C1C LDR X20, [X20 + 0xBF0]
	0x039C8C20 STP V0, V1, [X31 + 0x130]
	0x039C8C24 STR V2, [X31 + 0x15]
	0x039C8C28 ADRP X22, 0x78A000
	0x039C8C2C LDR X22, [X22 + 0xBC8]
	0x039C8C30 ADD X8, X31, 0x130
	0x039C8C34 ADD X21, X8, 0x18
	0x039C8C38 LDR X1, [X20]
	0x039C8C3C ADD X0, X31, 0x130
	0x039C8C40 BL 0x2BE0DC8
	0x039C8C44 TBZ X0, 0x0, 0x39C8C84
	0x039C8C48 LDR X0, [X19 + 0x48]
	0x039C8C4C LDR X8, [X21 + 0x10]
	0x039C8C50 LDR V0, [X21]
	0x039C8C54 LDR X1, [X31 + 0x140]
	0x039C8C58 STR X8, [X31 + 0x40]
	0x039C8C5C STR V0, [X31 + 0x3]
	0x039C8C60 CBZ X0, 0x39C8F94
	0x039C8C64 LDR V0, [X31 + 0x3]
	0x039C8C68 LDR X8, [X31 + 0x40]
	0x039C8C6C LDR X3, [X22]
	0x039C8C70 STR V0, [X31 + 0x16]
	0x039C8C74 STR X8, [X31 + 0x170]
	0x039C8C78 ADD X2, X31, 0x160
	0x039C8C7C BL 0x2A8C85C
	0x039C8C80 B 0x39C8C38
	0x039C8C84 ADRP X8, 0x78A000
	0x039C8C88 LDR X8, [X8 + 0xBE0]
	0x039C8C8C ADD X0, X31, 0x130
	0x039C8C90 LDR X1, [X8]
	0x039C8C94 BL 0x2BE0DC4
	0x039C8C98 LDR X0, [X19 + 0x18]
	0x039C8C9C CBZ X0, 0x39C8FB0
	0x039C8CA0 ADRP X8, 0x78A000
	0x039C8CA4 LDR X8, [X8 + 0xC48]
	0x039C8CA8 LDR X1, [X8]
	0x039C8CAC ADD X8, X31, 0x30
	0x039C8CB0 BL 0x3129D3C
	0x039C8CB4 LDP V0, V1, [X31 + 0x30]
	0x039C8CB8 ADRP X20, 0x78A000
	0x039C8CBC LDR X20, [X20 + 0xC00]
	0x039C8CC0 ADRP X21, 0x786000
	0x039C8CC4 STP V0, V1, [X31 + 0x110]
	0x039C8CC8 LDR X21, [X21 + 0x2C8]
	0x039C8CCC LDR X1, [X20]
	0x039C8CD0 ADD X0, X31, 0x110
	0x039C8CD4 BL 0x2BE0FB0
	0x039C8CD8 TBZ X0, 0x0, 0x39C8CFC
	0x039C8CDC LDR X0, [X19 + 0x50]
	0x039C8CE0 CBZ X0, 0x39C8F98
	0x039C8CE4 LDR W8, [X31 + 0x128]
	0x039C8CE8 LDR X1, [X31 + 0x120]
	0x039C8CEC LDR X3, [X21]
	0x039C8CF0 AND W2, W8, 0x1
	0x039C8CF4 BL 0x2A89740
	0x039C8CF8 B 0x39C8CCC
	0x039C8CFC ADRP X8, 0x78A000
	0x039C8D00 LDR X8, [X8 + 0xBE8]
	0x039C8D04 ADD X0, X31, 0x110
	0x039C8D08 LDR X1, [X8]
	0x039C8D0C BL 0x2BE0FAC
	0x039C8D10 LDR X0, [X19 + 0x20]
	0x039C8D14 CBZ X0, 0x39C8FB0
	0x039C8D18 ADRP X8, 0x78A000
	0x039C8D1C LDR X8, [X8 + 0xC50]
	0x039C8D20 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1A000
	006 Move X20, 0x72C000
	007 Move W8, [X21+3293]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x72C000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x78A000
	018 Move X0, [X0+3912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3293], W8
	022 Move X0, [X20]
	023 Move X20, [X19+32]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {85}
	036 Move X8, [X19+32]
	037 Compare X8, 0
	038 JumpIfEqual {90}
	039 Move W9, [X8+64]
	040 Move W10, [X8+76]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W9, [X8+68]
	043 Move W10, [X8+80]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, [X8+72]
	046 Move W8, [X8+84]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X19
	049 Call ProbeVolumePerSceneData.ResolvePerScenarioCellData, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {85}
	054 Move X20, 0x78A000
	055 Move X20, [X20+3912]
	056 Move X0, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X21, 0xA1A000
	062 Move W8, [X21+3257]
	063 Compare W8, 0
	064 JumpIfNotEqual {70}
	065 Move X0, 0x78A000
	066 Move X0, [X0+3912]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X21+3257], W8
	070 Move X0, [X20]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X20]
	076 Move X8, [X0+184]
	077 Move X0, [X8+8]
	078 Compare X0, 0
	079 JumpIfEqual {90}
	080 Move X1, [X19+32]
	081 Move X2, X31
	082 Call ProbeReferenceVolume.AddPendingAssetLoading, X0, X1
	083 Move W8, 1
	084 Move [X19+72], W8
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void QueueAssetRemoval()

Disassembly:
	0x039C87D4 STR V0, [X31 + 0x2]
	0x039C87D8 STR X8, [X31 + 0x30]
	0x039C87DC LDR X1, [X23]
	0x039C87E0 ADD X0, X31, 0x20
	0x039C87E4 BL 0x2BC4350
	0x039C87E8 TBZ X0, 0x0, 0x39C8844
	0x039C87EC LDR X20, [X31 + 0x30]
	0x039C87F0 CBZ X20, 0x39C8870
	0x039C87F4 LDR X0, [X24]
	0x039C87F8 LDR X21, [X20 + 0x50]
	0x039C87FC LDR W8, [X0 + 0xE0]
	0x039C8800 CBNZ W8, 0x39C8808
	0x039C8804 BL 0x1C16DFC
	0x039C8808 MOV X0, X21
	0x039C880C MOV X1, X31
	0x039C8810 MOV X2, X31
	0x039C8814 BL 0x3C3883C
	0x039C8818 TBZ X0, 0x0, 0x39C8828
	0x039C881C MOV X0, X19
	0x039C8820 MOV X1, X20
	0x039C8824 BL 0x39C91E8
	0x039C8828 LDR X8, [X20 + 0x58]
	0x039C882C CBZ X8, 0x39C8874
	0x039C8830 LDR W8, [X8 + 0x18]
	0x039C8834 CBNZ W8, 0x39C87DC
	0x039C8838 MOV X1, X20
	0x039C883C BL 0x39C92B8
	0x039C8840 B 0x39C87DC
	0x039C8844 LDR X1, [X22]
	0x039C8848 ADD X0, X31, 0x20
	0x039C884C BL 0x2BC434C
	0x039C8850 MOV X0, X19
	0x039C8854 BL 0x39C93CC
	0x039C8858 LDP X20, X19, [X31 + 0x70]
	0x039C885C LDP X22, X21, [X31 + 0x60]
	0x039C8860 LDP X24, X23, [X31 + 0x50]
	0x039C8864 LDR X30, [X31 + 0x40]
	0x039C8868 ADD X31, X31, 0x80
	0x039C886C RET
	0x039C8870 BL 0x1C16F20
	0x039C8874 BL 0x1C16F20
	0x039C8878 BL 0x1C16F20
	0x039C887C B 0x39C8894
	0x039C8880 B 0x39C8894
	0x039C8884 B 0x39C8894
	0x039C8888 B 0x39C8894
	0x039C888C B 0x39C8894
	0x039C8890 B 0x39C8894
	0x039C8894 CMP W1, 0x1
	0x039C8898 B.NE 0x39C88C0
	0x039C889C BL 0x3EB1AD0
	0x039C88A0 LDR X20, [X0]
	0x039C88A4 BL 0x3EB1AE0
	0x039C88A8 LDR X1, [X22]
	0x039C88AC ADD X0, X31, 0x20
	0x039C88B0 BL 0x2BC434C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1A000
	006 Move X20, 0x72C000
	007 Move W8, [X21+3294]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x72C000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x78A000
	018 Move X0, [X0+3912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3294], W8
	022 Move X0, [X20]
	023 Move X20, [X19+32]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {65}
	036 Move X20, 0x78A000
	037 Move X20, [X20+3912]
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X21, 0xA1A000
	044 Move W8, [X21+3257]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x78A000
	048 Move X0, [X0+3912]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+3257], W8
	052 Move X0, [X20]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X20]
	058 Move X8, [X0+184]
	059 Move X0, [X8+8]
	060 Compare X0, 0
	061 JumpIfEqual {71}
	062 Move X1, [X19+32]
	063 Move X2, X31
	064 Call ProbeReferenceVolume.AddPendingAssetRemoval, X0, X1
	065 Move [X19+72], W31
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x039C8D24 ADD X8, X31, 0x30
	0x039C8D28 BL 0x312FCA0
	0x039C8D2C LDP V0, V1, [X31 + 0x30]
	0x039C8D30 ADRP X20, 0x78A000
	0x039C8D34 LDR X20, [X20 + 0xC08]
	0x039C8D38 ADRP X21, 0x78A000
	0x039C8D3C STP V0, V1, [X31 + 0xF0]
	0x039C8D40 LDR X21, [X21 + 0xBB8]
	0x039C8D44 LDR X1, [X20]
	0x039C8D48 ADD X0, X31, 0xF0
	0x039C8D4C BL 0x2BE13C8
	0x039C8D50 TBZ X0, 0x0, 0x39C8D6C
	0x039C8D54 LDR X0, [X19 + 0x58]
	0x039C8D58 CBZ X0, 0x39C8F9C
	0x039C8D5C LDP X1, X2, [X31 + 0x100]
	0x039C8D60 LDR X3, [X21]
	0x039C8D64 BL 0x2AA5098
	0x039C8D68 B 0x39C8D44
	0x039C8D6C ADRP X8, 0x78A000
	0x039C8D70 LDR X8, [X8 + 0xBD8]
	0x039C8D74 ADD X0, X31, 0xF0
	0x039C8D78 LDR X1, [X8]
	0x039C8D7C BL 0x2BE13C4
	0x039C8D80 LDR X0, [X19 + 0x28]
	0x039C8D84 CBZ X0, 0x39C8FB0
	0x039C8D88 ADRP X8, 0x78A000
	0x039C8D8C LDR X8, [X8 + 0xC38]
	0x039C8D90 LDR X1, [X8]
	0x039C8D94 ADD X8, X31, 0x30
	0x039C8D98 BL 0x312CD58
	0x039C8D9C ADD X0, X31, 0xA0
	0x039C8DA0 ADD X1, X31, 0x30
	0x039C8DA4 MOVZ W2, 0x48
	0x039C8DA8 ADD X20, X31, 0xA0
	0x039C8DAC BL 0x3EB1AC0
	0x039C8DB0 ADRP X21, 0x78A000
	0x039C8DB4 ADRP X22, 0x78A000
	0x039C8DB8 LDR X21, [X21 + 0xBF8]
	0x039C8DBC LDR X22, [X22 + 0xBC0]
	0x039C8DC0 ADD X20, X20, 0x18
	0x039C8DC4 LDR X1, [X21]
	0x039C8DC8 ADD X0, X31, 0xA0
	0x039C8DCC BL 0x2BE119C
	0x039C8DD0 TBZ X0, 0x0, 0x39C8E10
	0x039C8DD4 LDP V2, V0, [X20 + 0x10]
	0x039C8DD8 LDR V1, [X20]
	0x039C8DDC LDR X0, [X19 + 0x60]
	0x039C8DE0 LDR X1, [X31 + 0xB0]
	0x039C8DE4 STP V2, V0, [X31 + 0x10]
	0x039C8DE8 STR V1, [X31]
	0x039C8DEC CBZ X0, 0x39C8FA0
	0x039C8DF0 LDP V0, V1, [X31]
	0x039C8DF4 LDR V2, [X31 + 0x2]
	0x039C8DF8 LDR X3, [X22]
	0x039C8DFC STP V0, V1, [X31 + 0x30]
	0x039C8E00 STR V2, [X31 + 0x5]
	0x039C8E04 ADD X2, X31, 0x30
	0x039C8E08 BL 0x2AAB68C
	0x039C8E0C B 0x39C8DC4
	0x039C8E10 ADRP X8, 0x78A000
	0x039C8E14 LDR X8, [X8 + 0xBD0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1A000
	006 Move X20, 0x78A000
	007 Move W8, [X21+3295]
	008 Move X20, [X20+3912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78A000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3295], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0xA1A000
	025 Move W8, [X21+3257]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x78A000
	029 Move X0, [X0+3912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3257], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X0, [X8+8]
	041 Compare X0, 0
	042 JumpIfEqual {77}
	043 Move X1, X19
	044 Move X2, X31
	045 Call ProbeReferenceVolume.RegisterPerSceneData, X0, X1
	046 Move W8, [X21+3257]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x78A000
	050 Move X0, [X0+3912]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+3257], W8
	054 Move X0, [X20]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X20]
	060 Move X8, [X0+184]
	061 Move X8, [X8+8]
	062 Compare X8, 0
	063 JumpIfEqual {77}
	064 Move X8, [X8+240]
	065 Compare X8, 0
	066 JumpIfEqual {72}
	067 Move X0, X19
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x039C8F18 B.CS 0x39C8F30
	0x039C8F1C ADD W9, W10, 0x1
	0x039C8F20 ADD X8, X8, X10, 0x3, LSL
	0x039C8F24 STR W9, [X0 + 0x18]
	0x039C8F28 STR X20, [X8 + 0x20]
	0x039C8F2C B 0x39C8EA8
	0x039C8F30 LDR X8, [X9 + 0x20]
	0x039C8F34 LDR X8, [X8 + 0xC0]
	0x039C8F38 LDR X2, [X8 + 0x70]
	0x039C8F3C MOV X1, X20
	0x039C8F40 BL 0x301BF90
	0x039C8F44 B 0x39C8EA8
	0x039C8F48 ADRP X8, 0x78A000
	0x039C8F4C LDR X8, [X8 + 0x9E0]
	0x039C8F50 ADD X0, X31, 0x80
	0x039C8F54 LDR X1, [X8]
	0x039C8F58 BL 0x2BC434C
	0x039C8F5C ADRP X8, 0x72B000
	0x039C8F60 LDR X0, [X19 + 0x78]
	0x039C8F64 LDR X8, [X8 + 0x988]
	0x039C8F68 MOV X2, X31
	0x039C8F6C LDR X1, [X8]
	0x039C8F70 BL 0x321BA08
	0x039C8F74 TBZ X0, 0x0, 0x39C8F7C
	0x039C8F78 STR X31, [X19 + 0x78]
	0x039C8F7C LDP X20, X19, [X31 + 0x1B0]
	0x039C8F80 LDP X22, X21, [X31 + 0x1A0]
	0x039C8F84 LDP X24, X23, [X31 + 0x190]
	0x039C8F88 LDP X29, X30, [X31 + 0x180]
	0x039C8F8C ADD X31, X31, 0x1C0
	0x039C8F90 RET
	0x039C8F94 BL 0x1C16F20
	0x039C8F98 BL 0x1C16F20
	0x039C8F9C BL 0x1C16F20
	0x039C8FA0 BL 0x1C16F20
	0x039C8FA4 BL 0x1C16F20
	0x039C8FA8 BL 0x1C16F20
	0x039C8FAC BL 0x1C16F20
	0x039C8FB0 BL 0x1C16F20
	0x039C8FB4 B 0x39C9174
	0x039C8FB8 B 0x39C9174
	0x039C8FBC B 0x39C9174

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1A000
	006 Move X20, 0x78A000
	007 Move W8, [X21+3296]
	008 Move X20, [X20+3912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78A000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3296], W8
	019 Move X0, X19
	020 Call ProbeVolumePerSceneData.QueueAssetRemoval, X0
	021 Move [X19+80], X31
	022 Move [X19+88], X31
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X21, 0xA1A000
	029 Move W8, [X21+3257]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x78A000
	033 Move X0, [X0+3912]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3257], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X0, [X8+8]
	045 Compare X0, 0
	046 JumpIfEqual {55}
	047 Move X1, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, X31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call ProbeReferenceVolume.UnregisterPerSceneData, X0, X1
	054 Return 
	055 Call 0x1C17F20

Method: System.Void Initialize()

Disassembly:
	0x039C8E18 ADD X0, X31, 0xA0
	0x039C8E1C LDR X1, [X8]
	0x039C8E20 BL 0x2BE1198
	0x039C8E24 LDR X0, [X19 + 0x70]
	0x039C8E28 MOV X1, X31
	0x039C8E2C BL 0x32277A8
	0x039C8E30 TBZ X0, 0x0, 0x39C8E5C
	0x039C8E34 ADRP X20, 0x789000
	0x039C8E38 LDR X20, [X20 + 0xF48]
	0x039C8E3C LDR X0, [X20]
	0x039C8E40 LDR W8, [X0 + 0xE0]
	0x039C8E44 CBNZ W8, 0x39C8E50
	0x039C8E48 BL 0x1C16DFC
	0x039C8E4C LDR X0, [X20]
	0x039C8E50 LDR X8, [X0 + 0xB8]
	0x039C8E54 LDR X8, [X8]
	0x039C8E58 STR X8, [X19 + 0x70]
	0x039C8E5C LDR X0, [X19 + 0x30]
	0x039C8E60 CBZ X0, 0x39C8FB0
	0x039C8E64 ADRP X8, 0x78A000
	0x039C8E68 LDR X8, [X8 + 0xA18]
	0x039C8E6C LDR X1, [X8]
	0x039C8E70 ADD X8, X31, 0x0
	0x039C8E74 BL 0x301CB58
	0x039C8E78 LDR V0, [X31]
	0x039C8E7C LDR X8, [X31 + 0x10]
	0x039C8E80 ADRP X21, 0x78A000
	0x039C8E84 ADRP X22, 0x78A000
	0x039C8E88 LDR X21, [X21 + 0x9F8]
	0x039C8E8C LDR X22, [X22 + 0xC30]
	0x039C8E90 MOVZ X24, 0x126F
	0x039C8E94 MOVK X24, 0xBA830000
	0x039C8E98 MOVZ W23, 0x1
	0x039C8E9C STR V0, [X31 + 0x8]
	0x039C8EA0 STR X8, [X31 + 0x90]
	0x039C8EA4 MOVK X24, 0xA
	0x039C8EA8 LDR X1, [X21]
	0x039C8EAC ADD X0, X31, 0x80
	0x039C8EB0 BL 0x2BC4350
	0x039C8EB4 TBZ X0, 0x0, 0x39C8F48
	0x039C8EB8 LDR X20, [X31 + 0x90]
	0x039C8EBC CBZ X20, 0x39C8FA8
	0x039C8EC0 LDR W8, [X20 + 0x20]
	0x039C8EC4 CMP W8, 0x1
	0x039C8EC8 B.EQ 0x39C8EEC
	0x039C8ECC CMP W8, 0x0
	0x039C8ED0 B.GT 0x39C8EE8
	0x039C8ED4 STUR X24, [X20 + 0x44]
	0x039C8ED8 MOVN W0, 0x4
	0x039C8EDC MOV X1, X31
	0x039C8EE0 BL 0x3C35CBC
	0x039C8EE4 STR W0, [X20 + 0x4C]
	0x039C8EE8 STR W23, [X20 + 0x20]
	0x039C8EEC LDR X0, [X19 + 0x68]
	0x039C8EF0 CBZ X0, 0x39C8FAC
	0x039C8EF4 LDR W10, [X0 + 0x1C]
	0x039C8EF8 LDR X8, [X0 + 0x10]
	0x039C8EFC LDR X9, [X22]
	0x039C8F00 ADD W10, W10, 0x1
	0x039C8F04 STR W10, [X0 + 0x1C]
	0x039C8F08 CBZ X8, 0x39C8FA4
	0x039C8F0C LDRSW X10, [X0 + 0x18]
	0x039C8F10 LDR W11, [X8 + 0x18]
	0x039C8F14 CMP W10, W11

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1A000
	006 Move X20, 0x78A000
	007 Move W8, [X21+3297]
	008 Move X20, [X20+3912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x78A000
	015 Move X0, [X0+3912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3297], W8
	019 Move X0, X19
	020 Call ProbeVolumePerSceneData.ResolveSharedCellData, X0
	021 Move X0, X19
	022 Call ProbeVolumePerSceneData.QueueAssetRemoval, X0
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X21, 0xA1A000
	029 Move W8, [X21+3257]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x78A000
	033 Move X0, [X0+3912]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3257], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X8, [X8+8]
	045 Compare X8, 0
	046 JumpIfEqual {81}
	047 Move X8, [X8+240]
	048 Compare X8, 0
	049 JumpIfEqual {81}
	050 Move X8, [X8+112]
	051 Move [X19+80], X8
	052 Move W8, [X21+3257]
	053 Compare W8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, X20
	056 Call 0x1C17CF4
	057 Move X0, [X20]
	058 Move W8, 1
	059 Move [X21+3257], W8
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X8, [X8+8]
	067 Compare X8, 0
	068 JumpIfEqual {81}
	069 Move X8, [X8+240]
	070 Compare X8, 0
	071 JumpIfEqual {81}
	072 Move X8, [X8+120]
	073 Move X0, X19
	074 Move [X19+88], X8
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Call ProbeVolumePerSceneData.QueueAssetLoading, X0
	080 Return 
	081 Call 0x1C17F20

Method: System.Void UpdateActiveScenario(System.String activeScenario, System.String otherScenario)

Disassembly:
	0x039C8FC0 B 0x39C8FE4
	0x039C8FC4 B 0x39C8FE4
	0x039C8FC8 B 0x39C9048
	0x039C8FCC B 0x39C9048
	0x039C8FD0 B 0x39C90AC
	0x039C8FD4 B 0x39C90AC
	0x039C8FD8 B 0x39C9110
	0x039C8FDC B 0x39C9110
	0x039C8FE0 B 0x39C9174
	0x039C8FE4 MOV X20, X0
	0x039C8FE8 CMP W1, 0x1
	0x039C8FEC B.NE 0x39C901C
	0x039C8FF0 MOV X0, X20
	0x039C8FF4 BL 0x3EB1AD0
	0x039C8FF8 LDR X21, [X0]
	0x039C8FFC BL 0x3EB1AE0
	0x039C9000 ADRP X8, 0x789000
	0x039C9004 LDR X8, [X8 + 0xBD0]
	0x039C9008 ADD X0, X31, 0xA0
	0x039C900C LDR X1, [X8]
	0x039C9010 BL 0x2BE1198
	0x039C9014 CBZ X21, 0x39C8E24
	0x039C9018 B 0x39C91A8
	0x039C901C MOV X21, X31
	0x039C9020 B 0x39C9028
	0x039C9024 MOV X20, X0
	0x039C9028 ADRP X8, 0x789000
	0x039C902C LDR X8, [X8 + 0xBD0]
	0x039C9030 LDR X1, [X8]
	0x039C9034 ADD X0, X31, 0xA0
	0x039C9038 BL 0x2BE1198
	0x039C903C CBZ X21, 0x39C91D4
	0x039C9040 MOV X0, X21
	0x039C9044 BL 0x1C16F18
	0x039C9048 MOV X20, X0
	0x039C904C CMP W1, 0x1
	0x039C9050 B.NE 0x39C9080
	0x039C9054 MOV X0, X20
	0x039C9058 BL 0x3EB1AD0
	0x039C905C LDR X21, [X0]
	0x039C9060 BL 0x3EB1AE0
	0x039C9064 ADRP X8, 0x789000
	0x039C9068 LDR X8, [X8 + 0xBD8]
	0x039C906C ADD X0, X31, 0xF0
	0x039C9070 LDR X1, [X8]
	0x039C9074 BL 0x2BE13C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xA1A000
	008 Move X22, 0x72C000
	009 Move W8, [X23+3298]
	010 Move X22, [X22+1432]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x72C000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3298], W8
	023 Move X0, [X22]
	024 Move X22, [X19+32]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {48}
	037 Move W8, [X19+72]
	038 Move [X19+80], X21
	039 Move [X19+88], X20
	040 Compare W8, 0
	041 JumpIfEqual {55}
	042 Move X0, X19
	043 Call ProbeVolumePerSceneData.ResolvePerScenarioCellData, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {64}
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return 
	055 Move X0, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Call ProbeVolumePerSceneData.QueueAssetLoading, X0
	063 Return 
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Call ProbeVolumePerSceneData.QueueAssetRemoval, X0
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x039C9078 CBZ X21, 0x39C8D80
	0x039C907C B 0x39C91A8
	0x039C9080 MOV X21, X31
	0x039C9084 B 0x39C908C
	0x039C9088 MOV X20, X0
	0x039C908C ADRP X8, 0x789000
	0x039C9090 LDR X8, [X8 + 0xBD8]
	0x039C9094 LDR X1, [X8]
	0x039C9098 ADD X0, X31, 0xF0
	0x039C909C BL 0x2BE13C4
	0x039C90A0 CBZ X21, 0x39C91D4
	0x039C90A4 MOV X0, X21
	0x039C90A8 BL 0x1C16F18
	0x039C90AC MOV X20, X0
	0x039C90B0 CMP W1, 0x1
	0x039C90B4 B.NE 0x39C90E4
	0x039C90B8 MOV X0, X20
	0x039C90BC BL 0x3EB1AD0
	0x039C90C0 LDR X21, [X0]
	0x039C90C4 BL 0x3EB1AE0
	0x039C90C8 ADRP X8, 0x789000
	0x039C90CC LDR X8, [X8 + 0xBE8]
	0x039C90D0 ADD X0, X31, 0x110
	0x039C90D4 LDR X1, [X8]
	0x039C90D8 BL 0x2BE0FAC
	0x039C90DC CBZ X21, 0x39C8D10
	0x039C90E0 B 0x39C91A8
	0x039C90E4 MOV X21, X31
	0x039C90E8 B 0x39C90F0
	0x039C90EC MOV X20, X0
	0x039C90F0 ADRP X8, 0x789000
	0x039C90F4 LDR X8, [X8 + 0xBE8]
	0x039C90F8 LDR X1, [X8]
	0x039C90FC ADD X0, X31, 0x110
	0x039C9100 BL 0x2BE0FAC
	0x039C9104 CBZ X21, 0x39C91D4
	0x039C9108 MOV X0, X21
	0x039C910C BL 0x1C16F18
	0x039C9110 MOV X20, X0
	0x039C9114 CMP W1, 0x1
	0x039C9118 B.NE 0x39C9148
	0x039C911C MOV X0, X20
	0x039C9120 BL 0x3EB1AD0
	0x039C9124 LDR X21, [X0]
	0x039C9128 BL 0x3EB1AE0
	0x039C912C ADRP X8, 0x789000
	0x039C9130 LDR X8, [X8 + 0xBE0]
	0x039C9134 ADD X0, X31, 0x130
	0x039C9138 LDR X1, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xA19000
	009 Move X24, 0x78A000
	010 Move X20, 0x78A000
	011 Move X22, 0x78A000
	012 Move X21, 0x78A000
	013 Move W8, [X23+3299]
	014 Move X24, [X24+2840]
	015 Move X20, [X20+2848]
	016 Move X22, [X22+2856]
	017 Move X21, [X21+2864]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x78A000
	024 Move X0, [X0+2864]
	025 Call 0x1C17CF4
	026 Move X0, 0x78A000
	027 Move X0, [X0+2856]
	028 Call 0x1C17CF4
	029 Move X0, 0x78A000
	030 Move X0, [X0+2848]
	031 Call 0x1C17CF4
	032 Move X0, 0x78A000
	033 Move X0, [X0+2840]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3299], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call List`1<SerializablePerScenarioDataItem>..ctor, X0
	042 Move [X19+56], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call Dictionary`2<Object, PerScenarioData>..ctor, X0
	048 Move [X19+64], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call MonoBehaviour..ctor, X0
	059 Return 

