Type: UnityEngine.Rendering.Volume

Method: System.Boolean get_isGlobal()

Disassembly:
	0x039EF3F4 LDR X0, [X0 + 0xE00]
	0x039EF3F8 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_isGlobal(System.Boolean value)

Disassembly:
	0x039EF3FC ADRP X0, 0x72F000
	0x039EF400 LDR X0, [X0 + 0xBD8]
	0x039EF404 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: UnityEngine.Rendering.VolumeProfile get_profile()

Disassembly:
	0x039EF408 ADRP X0, 0x72F000
	0x039EF40C LDR X0, [X0 + 0xBE0]
	0x039EF410 BL 0x1C16CF4
	0x039EF414 ADRP X0, 0x704000
	0x039EF418 LDR X0, [X0 + 0xE18]
	0x039EF41C BL 0x1C16CF4
	0x039EF420 ADRP X0, 0x764000
	0x039EF424 LDR X0, [X0 + 0x6B8]
	0x039EF428 BL 0x1C16CF4
	0x039EF42C ADRP X0, 0x704000
	0x039EF430 LDR X0, [X0 + 0x6C0]
	0x039EF434 BL 0x1C16CF4
	0x039EF438 ADRP X0, 0x764000
	0x039EF43C LDR X0, [X0 + 0x6C0]
	0x039EF440 BL 0x1C16CF4
	0x039EF444 ADRP X0, 0x764000
	0x039EF448 LDR X0, [X0 + 0x6C8]
	0x039EF44C BL 0x1C16CF4
	0x039EF450 ADRP X0, 0x72D000
	0x039EF454 LDR X0, [X0 + 0xB40]
	0x039EF458 BL 0x1C16CF4
	0x039EF45C ADRP X0, 0x72D000
	0x039EF460 LDR X0, [X0 + 0xD98]
	0x039EF464 BL 0x1C16CF4
	0x039EF468 MOVZ W8, 0x1
	0x039EF46C STRB W8, [X19 + 0xE5A]
	0x039EF470 CBZ X22, 0x39EF888
	0x039EF474 MOV X0, X22
	0x039EF478 MOV X1, X31
	0x039EF47C BL 0x33BE520
	0x039EF480 CBZ X0, 0x39EF8C4
	0x039EF484 LDR X8, [X0]
	0x039EF488 ADRP X25, 0x764000
	0x039EF48C MOVZ W1, 0x34
	0x039EF490 LDR X9, [X8 + 0x688]
	0x039EF494 LDR X2, [X8 + 0x690]
	0x039EF498 LDR X25, [X25 + 0x6C8]
	0x039EF49C BLR X9
	0x039EF4A0 LDR X8, [X25]
	0x039EF4A4 MOV X19, X0
	0x039EF4A8 LDR W9, [X8 + 0xE0]
	0x039EF4AC CBNZ W9, 0x39EF4BC
	0x039EF4B0 MOV X0, X8
	0x039EF4B4 BL 0x1C16DFC
	0x039EF4B8 LDR X8, [X25]
	0x039EF4BC LDR X9, [X8 + 0xB8]
	0x039EF4C0 ADRP X26, 0x72D000
	0x039EF4C4 LDR X23, [X9 + 0x8]
	0x039EF4C8 LDR X26, [X26 + 0xD48]
	0x039EF4CC CBNZ X23, 0x39EF524
	0x039EF4D0 LDR W9, [X8 + 0xE0]
	0x039EF4D4 CBNZ W9, 0x39EF4E4
	0x039EF4D8 MOV X0, X8
	0x039EF4DC BL 0x1C16DFC
	0x039EF4E0 LDR X8, [X25]
	0x039EF4E4 ADRP X9, 0x72D000
	0x039EF4E8 LDR X8, [X8 + 0xB8]
	0x039EF4EC LDR X9, [X9 + 0xD70]
	0x039EF4F0 LDR X24, [X8]
	0x039EF4F4 LDR X0, [X9]
	0x039EF4F8 BL 0x1C16F10
	0x039EF4FC ADRP X8, 0x764000
	0x039EF500 LDR X8, [X8 + 0x6C0]
	0x039EF504 MOV X1, X24
	0x039EF508 MOV X3, X31
	0x039EF50C MOV X23, X0
	0x039EF510 LDR X2, [X8]
	0x039EF514 BL 0x2D30128
	0x039EF518 LDR X8, [X25]
	0x039EF51C LDR X8, [X8 + 0xB8]
	0x039EF520 STR X23, [X8 + 0x8]
	0x039EF524 LDR X2, [X26]
	0x039EF528 MOV X0, X19
	0x039EF52C MOV X1, X23
	0x039EF530 BL 0x21C9A84
	0x039EF534 CBZ X0, 0x39EF8C4
	0x039EF538 ADRP X10, 0x72F000
	0x039EF53C LDR X8, [X0]
	0x039EF540 LDR X10, [X10 + 0xBD8]
	0x039EF544 MOV X19, X0
	0x039EF548 LDRH W9, [X8 + 0x12E]
	0x039EF54C LDR X1, [X10]
	0x039EF550 CBZ X9, 0x39EF574
	0x039EF554 LDR X10, [X8 + 0xB0]
	0x039EF558 ADD X10, X10, 0x8
	0x039EF55C LDUR X11, [X10 - 0x8]
	0x039EF560 CMP X11, X1
	0x039EF564 B.EQ 0x39EF584
	0x039EF568 SUBS X9, X9, 0x1
	0x039EF56C ADD X10, X10, 0x10
	0x039EF570 B.NE 0x39EF55C
	0x039EF574 MOV X0, X19
	0x039EF578 MOV W2, W31
	0x039EF57C BL 0x1C5C788
	0x039EF580 B 0x39EF590
	0x039EF584 LDRSW X9, [X10]
	0x039EF588 ADD X8, X8, X9, 0x4, LSL
	0x039EF58C ADD X0, X8, 0x138
	0x039EF590 LDP X8, X1, [X0]
	0x039EF594 MOV X0, X19
	0x039EF598 BLR X8
	0x039EF59C MOV X19, X0
	0x039EF5A0 CBZ X0, 0x39EF8C8
	0x039EF5A4 ADRP X26, 0x704000
	0x039EF5A8 ADRP X27, 0x72F000
	0x039EF5AC ADRP X28, 0x72D000
	0x039EF5B0 ADRP X29, 0x704000
	0x039EF5B4 LDR X26, [X26 + 0xE18]
	0x039EF5B8 LDR X27, [X27 + 0xBE0]
	0x039EF5BC LDR X28, [X28 + 0xB40]
	0x039EF5C0 LDR X29, [X29 + 0x6C0]
	0x039EF5C4 LDR X8, [X19]
	0x039EF5C8 LDR X1, [X26]
	0x039EF5CC LDRH W9, [X8 + 0x12E]
	0x039EF5D0 CBZ X9, 0x39EF5F4
	0x039EF5D4 LDR X10, [X8 + 0xB0]
	0x039EF5D8 ADD X10, X10, 0x8
	0x039EF5DC LDUR X11, [X10 - 0x8]
	0x039EF5E0 CMP X11, X1
	0x039EF5E4 B.EQ 0x39EF604
	0x039EF5E8 SUBS X9, X9, 0x1
	0x039EF5EC ADD X10, X10, 0x10
	0x039EF5F0 B.NE 0x39EF5DC
	0x039EF5F4 MOV X0, X19
	0x039EF5F8 MOV W2, W31
	0x039EF5FC BL 0x1C5C788
	0x039EF600 B 0x39EF610
	0x039EF604 LDRSW X9, [X10]
	0x039EF608 ADD X8, X8, X9, 0x4, LSL
	0x039EF60C ADD X0, X8, 0x138
	0x039EF610 LDP X8, X1, [X0]
	0x039EF614 MOV X0, X19
	0x039EF618 BLR X8
	0x039EF61C TBZ X0, 0x0, 0x39EF81C
	0x039EF620 LDR X8, [X19]
	0x039EF624 LDR X1, [X27]
	0x039EF628 LDRH W9, [X8 + 0x12E]
	0x039EF62C CBZ X9, 0x39EF650
	0x039EF630 LDR X10, [X8 + 0xB0]
	0x039EF634 ADD X10, X10, 0x8
	0x039EF638 LDUR X11, [X10 - 0x8]
	0x039EF63C CMP X11, X1
	0x039EF640 B.EQ 0x39EF660
	0x039EF644 SUBS X9, X9, 0x1
	0x039EF648 ADD X10, X10, 0x10
	0x039EF64C B.NE 0x39EF638
	0x039EF650 MOV X0, X19
	0x039EF654 MOV W2, W31
	0x039EF658 BL 0x1C5C788
	0x039EF65C B 0x39EF66C
	0x039EF660 LDRSW X9, [X10]
	0x039EF664 ADD X8, X8, X9, 0x4, LSL
	0x039EF668 ADD X0, X8, 0x138
	0x039EF66C LDP X8, X1, [X0]
	0x039EF670 MOV X0, X19
	0x039EF674 BLR X8
	0x039EF678 MOV X23, X0
	0x039EF67C CBZ X0, 0x39EF8A4
	0x039EF680 LDR X8, [X23]
	0x039EF684 LDR X1, [X8 + 0x260]
	0x039EF688 LDR X9, [X8 + 0x258]
	0x039EF68C MOV X0, X23
	0x039EF690 BLR X9
	0x039EF694 MOV X24, X0
	0x039EF698 LDR X0, [X29]
	0x039EF69C LDR X25, [X28]
	0x039EF6A0 LDR W8, [X0 + 0xE0]
	0x039EF6A4 CBNZ W8, 0x39EF6AC
	0x039EF6A8 BL 0x1C16DFC
	0x039EF6AC MOV X0, X25
	0x039EF6B0 MOV X1, X31
	0x039EF6B4 BL 0x338C698
	0x039EF6B8 MOV X1, X0
	0x039EF6BC CBZ X24, 0x39EF8A8
	0x039EF6C0 LDR X8, [X24]
	0x039EF6C4 LDR X9, [X8 + 0x298]
	0x039EF6C8 LDR X2, [X8 + 0x2A0]
	0x039EF6CC MOV X0, X24
	0x039EF6D0 BLR X9
	0x039EF6D4 TBZ X0, 0x0, 0x39EF790

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0x9F3000
	010 Move X21, 0x705000
	011 Move W8, [X20+3664]
	012 Move X21, [X21+1432]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x72E000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move X0, 0x72E000
	022 Move X0, [X0+2448]
	023 Call 0x1C17CF4
	024 Move X0, 0x72E000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move X0, 0x765000
	028 Move X0, [X0+1616]
	029 Call 0x1C17CF4
	030 Move X0, 0x72E000
	031 Move X0, [X0+2464]
	032 Call 0x1C17CF4
	033 Move X0, 0x765000
	034 Move X0, [X0+1624]
	035 Call 0x1C17CF4
	036 Move X0, 0x705000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x765000
	040 Move X0, [X0+1632]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3664], W8
	044 Move X0, [X21]
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Move X20, [X19+72]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {159}
	061 Move X8, 0x765000
	062 Move X8, [X8+1632]
	063 Move X0, [X8]
	064 Call 0x22547A0
	065 Move [X19+72], X0
	066 Move X0, [X21]
	067 Move X20, [X19+48]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {159}
	080 Move X0, [X19+48]
	081 Compare X0, 0
	082 JumpIfEqual {172}
	083 Move X20, [X19+72]
	084 Move X1, X31
	085 Call Object.get_name, X0
	086 Compare X20, 0
	087 JumpIfEqual {172}
	088 Move X1, X0
	089 Move X0, X20
	090 Move X2, X31
	091 Call Object.set_name, X0, X1
	092 Move X8, [X19+48]
	093 Compare X8, 0
	094 JumpIfEqual {172}
	095 Move X0, [X8+24]
	096 Compare X0, 0
	097 JumpIfEqual {172}
	098 Move X8, 0x72E000
	099 Move X8, [X8+2464]
	100 Move X1, [X8]
	101 Add X8, X31, 8
	102 Call List`1<Object>.GetEnumerator, X0
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Move X8, [X31+24]
	105 Move X22, 0x72E000
	106 Move X23, 0x765000
	107 Move X22, [X22+2448]
	108 Move X23, [X23+1624]
	109 Move [X31+2], V0
	110 Move [X31+48], X8
	111 Move X24, 0x765000
	112 Move X24, [X24+1616]
	113 Move X1, [X22]
	114 Add X0, X31, 32
	115 Call Enumerator<Object>.MoveNext, X0
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {154}
	120 Move X0, [X21]
	121 Move X20, [X31+48]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X1, [X23]
	127 Move X0, X20
	128 Call 0x222E35C, X0
	129 Move X1, X0
	130 Move X8, [X19+72]
	131 Compare X8, 0
	132 JumpIfEqual {170}
	133 Move X0, [X8+24]
	134 Compare X0, 0
	135 JumpIfEqual {171}
	136 Move W10, [X0+28]
	137 Move X8, [X0+16]
	138 Move X9, [X24]
	139 Add W10, W10, 1
	140 Move [X0+28], W10
	141 Compare X8, 0
	142 JumpIfEqual {169}
	143 NotImplemented "Instruction LDRSW not yet implemented."
	144 Move W11, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add W9, W10, 1
	147 Add X8, X8, X10
	148 Move [X0+24], W9
	149 Move [X8+32], X1
	150 Move X8, [X9+32]
	151 Move X8, [X8+192]
	152 Move X2, [X8+112]
	153 Call List`1<Object>.AddWithResize, X0, X1
	154 Move X8, 0x72E000
	155 Move X8, [X8+2440]
	156 Add X0, X31, 32
	157 Move X1, [X8]
	158 Call Enumerator<Object>.Dispose, X0
	159 Move X0, [X19+72]
	160 Move X20, [X31+112]
	161 Move X19, [X31+120]
	162 Move X22, [X31+96]
	163 Move X21, [X31+104]
	164 Move X24, [X31+80]
	165 Move X23, [X31+88]
	166 Move X30, [X31+64]
	167 Add X31, X31, 128
	168 Return X0
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Move X20, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X20
	176 Call 0x3EB2AD0
	177 Move X21, [X0]
	178 Call 0x3EB2AE0
	179 Move X8, 0x72E000
	180 Move X8, [X8+2440]
	181 Add X0, X31, 32
	182 Move X1, [X8]
	183 Call Enumerator<Object>.Dispose, X0
	184 Compare X21, 0
	185 JumpIfEqual {159}
	186 Move X0, X21
	187 Call 0x1C17F18
	188 Move X21, X31
	189 Move X20, X0
	190 Move X8, 0x72E000
	191 Move X8, [X8+2440]
	192 Move X1, [X8]
	193 Add X0, X31, 32
	194 Call Enumerator<Object>.Dispose, X0
	195 Compare X21, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X20
	198 Call 0x1D2D690
	199 Move X0, X21
	200 Call 0x1C17F18
	201 Call 0x1991590

Method: System.Void set_profile(UnityEngine.Rendering.VolumeProfile value)

Disassembly:
	0x039EF6D8 CBZ X20, 0x39EF6F4
	0x039EF6DC LDR X0, [X20 + 0x40]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Collider> get_colliders()

Disassembly:
	0x039EF6E0 LDR X8, [X20 + 0x18]
	0x039EF6E4 LDR X2, [X20 + 0x28]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: UnityEngine.Rendering.VolumeProfile get_profileRef()

Disassembly:
	0x039EF6E8 MOV X1, X23
	0x039EF6EC BLR X8
	0x039EF6F0 TBZ X0, 0x0, 0x39EF5C4
	0x039EF6F4 LDR X8, [X23]
	0x039EF6F8 LDR X9, [X8 + 0x2C8]
	0x039EF6FC LDR X2, [X8 + 0x2D0]
	0x039EF700 MOV X0, X23
	0x039EF704 MOV X1, X22
	0x039EF708 BLR X9
	0x039EF70C MOV X8, X0
	0x039EF710 CBZ X0, 0x39EF748
	0x039EF714 ADRP X10, 0x72D000
	0x039EF718 LDR X9, [X8]
	0x039EF71C LDR X10, [X10 + 0xD98]
	0x039EF720 LDRB W11, [X9 + 0x130]
	0x039EF724 LDR X1, [X10]
	0x039EF728 LDRB W10, [X1 + 0x130]
	0x039EF72C CMP W11, W10
	0x039EF730 B.CC 0x39EF8B0
	0x039EF734 LDR X9, [X9 + 0xC8]
	0x039EF738 ADD X9, X9, X10, 0x3, LSL
	0x039EF73C LDUR X9, [X9 - 0x8]
	0x039EF740 CMP X9, X1
	0x039EF744 B.NE 0x39EF8B0
	0x039EF748 CBZ X21, 0x39EF8BC
	0x039EF74C ADRP X10, 0x764000
	0x039EF750 LDR W11, [X21 + 0x1C]
	0x039EF754 LDR X9, [X21 + 0x10]
	0x039EF758 LDR X10, [X10 + 0x6B8]
	0x039EF75C ADD W11, W11, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9F3000
	006 Move X20, 0x705000
	007 Move W8, [X21+3665]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x705000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3665], W8
	019 Move X0, [X20]
	020 Move X20, [X19+72]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 And W31, W0, 1
	030 Move W8, 72
	031 Move W9, 48
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X0, [X19]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0

Method: System.Boolean HasInstantiatedProfile()

Disassembly:
	0x039EF760 LDR X10, [X10]
	0x039EF764 STR W11, [X21 + 0x1C]
	0x039EF768 CBZ X9, 0x39EF8B8
	0x039EF76C LDRSW X11, [X21 + 0x18]
	0x039EF770 LDR W12, [X9 + 0x18]
	0x039EF774 CMP W11, W12
	0x039EF778 B.CS 0x39EF800
	0x039EF77C ADD W10, W11, 0x1
	0x039EF780 ADD X9, X9, X11, 0x3, LSL
	0x039EF784 STR W10, [X21 + 0x18]
	0x039EF788 STR X8, [X9 + 0x20]
	0x039EF78C B 0x39EF5C4
	0x039EF790 LDR X8, [X23]
	0x039EF794 LDR X1, [X8 + 0x260]
	0x039EF798 LDR X9, [X8 + 0x258]
	0x039EF79C MOV X0, X23
	0x039EF7A0 BLR X9
	0x039EF7A4 CBZ X0, 0x39EF8AC
	0x039EF7A8 MOV X1, X31
	0x039EF7AC BL 0x3396BF8
	0x039EF7B0 TBNZ X0, 0x0, 0x39EF5C4
	0x039EF7B4 LDR X8, [X23]
	0x039EF7B8 LDR X1, [X8 + 0x260]
	0x039EF7BC LDR X9, [X8 + 0x258]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9F3000
	006 Move X20, 0x705000
	007 Move W8, [X21+3666]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x705000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3666], W8
	019 Move X0, [X20]
	020 Move X19, [X19+72]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Object.op_Inequality, X0, X1
	033 Return X0

Method: System.Void OnEnable()

Disassembly:
	0x039EF7C0 MOV X0, X23
	0x039EF7C4 BLR X9
	0x039EF7C8 CBZ X0, 0x39EF8C0
	0x039EF7CC MOV X1, X31
	0x039EF7D0 BL 0x339707C
	0x039EF7D4 TBZ X0, 0x0, 0x39EF5C4
	0x039EF7D8 LDR X8, [X23]
	0x039EF7DC LDR X9, [X8 + 0x2C8]
	0x039EF7E0 LDR X2, [X8 + 0x2D0]
	0x039EF7E4 MOV X0, X23
	0x039EF7E8 MOV X1, X22
	0x039EF7EC BLR X9
	0x039EF7F0 MOV X1, X21
	0x039EF7F4 MOV X2, X20
	0x039EF7F8 BL 0x39EF3A8
	0x039EF7FC B 0x39EF5C4
	0x039EF800 LDR X9, [X10 + 0x20]
	0x039EF804 LDR X9, [X9 + 0xC0]
	0x039EF808 LDR X2, [X9 + 0x70]
	0x039EF80C MOV X0, X21
	0x039EF810 MOV X1, X8
	0x039EF814 BL 0x301BF90
	0x039EF818 B 0x39EF5C4
	0x039EF81C MOV X21, X31
	0x039EF820 CBZ X19, 0x39EF884
	0x039EF824 ADRP X10, 0x704000
	0x039EF828 LDR X8, [X19]
	0x039EF82C LDR X10, [X10 + 0xE00]
	0x039EF830 LDRH W9, [X8 + 0x12E]
	0x039EF834 LDR X1, [X10]
	0x039EF838 CBZ X9, 0x39EF85C
	0x039EF83C LDR X10, [X8 + 0xB0]
	0x039EF840 ADD X10, X10, 0x8
	0x039EF844 LDUR X11, [X10 - 0x8]
	0x039EF848 CMP X11, X1
	0x039EF84C B.EQ 0x39EF86C
	0x039EF850 SUBS X9, X9, 0x1
	0x039EF854 ADD X10, X10, 0x10
	0x039EF858 B.NE 0x39EF844
	0x039EF85C MOV X0, X19
	0x039EF860 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9F3000
	005 Move W8, [X20+3667]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x765000
	012 Move X0, [X0+1640]
	013 Call 0x1C17CF4
	014 Move X0, 0x72F000
	015 Move X0, [X0+4032]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3667], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Component.get_gameObject, X0
	022 Compare X0, 0
	023 JumpIfEqual {50}
	024 Move X20, 0x72F000
	025 Move X20, [X20+4032]
	026 Move X1, X31
	027 Call GameObject.get_layer, X0
	028 Move [X19+64], W0
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call VolumeManager.get_instance
	035 Compare X0, 0
	036 JumpIfEqual {50}
	037 Move W2, [X19+64]
	038 Move X20, 0x765000
	039 Move X20, [X20+1640]
	040 Move X1, X19
	041 Call VolumeManager.Register, X0, X1, X2
	042 Move X1, [X19+56]
	043 Move X2, [X20]
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Call 0x21A543C, X0, X1
	049 Return 
	050 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x039EFB74 ADD X0, X31, 0x20
	0x039EFB78 BL 0x2BC434C
	0x039EFB7C LDP X20, X19, [X31 + 0x70]
	0x039EFB80 LDP X22, X21, [X31 + 0x60]
	0x039EFB84 LDP X24, X23, [X31 + 0x50]
	0x039EFB88 LDP X30, X25, [X31 + 0x40]
	0x039EFB8C ADD X31, X31, 0x80
	0x039EFB90 RET
	0x039EFB94 BL 0x1C16F20
	0x039EFB98 BL 0x1C16F20
	0x039EFB9C B 0x39EFBB0
	0x039EFBA0 B 0x39EFBB0
	0x039EFBA4 B 0x39EFBB0
	0x039EFBA8 B 0x39EFBB0
	0x039EFBAC B 0x39EFBB0
	0x039EFBB0 MOV X19, X0
	0x039EFBB4 CMP W1, 0x1
	0x039EFBB8 B.NE 0x39EFBE4
	0x039EFBBC MOV X0, X19
	0x039EFBC0 BL 0x3EB1AD0
	0x039EFBC4 LDR X20, [X0]
	0x039EFBC8 BL 0x3EB1AE0
	0x039EFBCC LDR X1, [X21]
	0x039EFBD0 ADD X0, X31, 0x20
	0x039EFBD4 BL 0x2BC434C
	0x039EFBD8 CBZ X20, 0x39EFB7C
	0x039EFBDC MOV X0, X20
	0x039EFBE0 BL 0x1C16F18
	0x039EFBE4 MOV X20, X31
	0x039EFBE8 B 0x39EFBF0
	0x039EFBEC MOV X19, X0
	0x039EFBF0 LDR X1, [X21]
	0x039EFBF4 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9F3000
	006 Move X21, 0x72F000
	007 Move W8, [X20+3668]
	008 Move X21, [X21+4032]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x72F000
	015 Move X0, [X0+4032]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3668], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call VolumeManager.get_instance
	025 Move X20, X0
	026 Move X0, X19
	027 Move X1, X31
	028 Call Component.get_gameObject, X0
	029 Compare X0, 0
	030 JumpIfEqual {42}
	031 Move X1, X31
	032 Call GameObject.get_layer, X0
	033 Compare X20, 0
	034 JumpIfEqual {42}
	035 Move W2, W0
	036 Move X0, X20
	037 Move X1, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x039EFDA0 MOVZ W8, 0x1
	0x039EFDA4 STRB W8, [X21 + 0xE5D]
	0x039EFDA8 LDR X8, [X20 + 0x28]
	0x039EFDAC CBZ X8, 0x39EFE7C
	0x039EFDB0 LDR W24, [X8 + 0x18]
	0x039EFDB4 CMP W24, 0x1
	0x039EFDB8 B.LT 0x39EFE64
	0x039EFDBC CBZ X19, 0x39EFE7C
	0x039EFDC0 ADRP X25, 0x762000
	0x039EFDC4 LDR X25, [X25 + 0x778]
	0x039EFDC8 MOV W21, W31
	0x039EFDCC LDR X0, [X19 + 0x28]
	0x039EFDD0 CBZ X0, 0x39EFE7C
	0x039EFDD4 LDR X2, [X25]
	0x039EFDD8 MOV W1, W21
	0x039EFDDC BL 0x301BCCC
	0x039EFDE0 LDR X8, [X20 + 0x28]
	0x039EFDE4 CBZ X8, 0x39EFE7C
	0x039EFDE8 LDR X2, [X25]
	0x039EFDEC MOV X22, X0
	0x039EFDF0 MOV X0, X8
	0x039EFDF4 MOV W1, W21
	0x039EFDF8 BL 0x301BCCC
	0x039EFDFC CBZ X0, 0x39EFE7C
	0x039EFE00 LDR X8, [X0]
	0x039EFE04 MOV X23, X0
	0x039EFE08 LDP X9, X1, [X8 + 0x188]
	0x039EFE0C BLR X9
	0x039EFE10 TBZ X0, 0x0, 0x39EFE58
	0x039EFE14 LDR X8, [X23]
	0x039EFE18 MOV X0, X23
	0x039EFE1C LDP X9, X1, [X8 + 0x188]
	0x039EFE20 BLR X9
	0x039EFE24 CBZ X22, 0x39EFE7C
	0x039EFE28 LDR X8, [X22]
	0x039EFE2C AND W1, W0, 0x1
	0x039EFE30 MOV X0, X22
	0x039EFE34 LDP X9, X2, [X8 + 0x198]
	0x039EFE38 BLR X9
	0x039EFE3C LDR X8, [X22]
	0x039EFE40 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9F3000
	005 Move W8, [X20+3669]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x72F000
	012 Move X0, [X0+4032]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3669], W8
	016 Move X0, X19
	017 Call Volume.UpdateLayer, X0
	018 Move V0, [X19+36]
	019 Move V1, [X19+68]
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move X8, 0x72F000
	022 Move X8, [X8+4032]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call VolumeManager.get_instance
	029 Move X20, X0
	030 Move X0, X19
	031 Move X1, X31
	032 Call Component.get_gameObject, X0
	033 Compare X0, 0
	034 JumpIfEqual {48}
	035 Move X1, X31
	036 Call GameObject.get_layer, X0
	037 Compare X20, 0
	038 JumpIfEqual {48}
	039 Move W1, W0
	040 Move X0, X20
	041 Call VolumeManager.SetLayerDirty, X0, X1
	042 Move V0, [X19+36]
	043 Move [X19+68], S0
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void UpdateLayer()

Disassembly:
	0x039EFE44 MOV X1, X22
	0x039EFE48 MOV X2, X23
	0x039EFE4C LDP X9, X3, [X8 + 0x1A8]
	0x039EFE50 MOV V0.16B, V8.16B
	0x039EFE54 BLR X9
	0x039EFE58 ADD W21, W21, 0x1
	0x039EFE5C CMP W24, W21
	0x039EFE60 B.NE 0x39EFDCC
	0x039EFE64 LDP X20, X19, [X31 + 0x40]
	0x039EFE68 LDP X22, X21, [X31 + 0x30]
	0x039EFE6C LDP X24, X23, [X31 + 0x20]
	0x039EFE70 LDP X30, X25, [X31 + 0x10]
	0x039EFE74 LDR V8, [X31], #0x50
	0x039EFE78 RET
	0x039EFE7C BL 0x1C16F20
	0x039EFE80 LDR X8, [X0 + 0x28]
	0x039EFE84 AND W2, W1, 0x1
	0x039EFE88 MOV X1, X8
	0x039EFE8C B 0x39EFE90
	0x039EFE90 STR X30, [X31 - 0x60]!
	0x039EFE94 STP X28, X27, [X31 + 0x10]
	0x039EFE98 STP X26, X25, [X31 + 0x20]
	0x039EFE9C STP X24, X23, [X31 + 0x30]
	0x039EFEA0 STP X22, X21, [X31 + 0x40]
	0x039EFEA4 STP X20, X19, [X31 + 0x50]
	0x039EFEA8 ADRP X22, 0x9F2000
	0x039EFEAC LDRB W8, [X22 + 0xE5E]
	0x039EFEB0 MOV W20, W2
	0x039EFEB4 MOV X19, X1
	0x039EFEB8 MOV X21, X0
	0x039EFEBC TBNZ X8, 0x0, 0x39EFF10
	0x039EFEC0 ADRP X0, 0x704000
	0x039EFEC4 LDR X0, [X0 + 0xE00]
	0x039EFEC8 BL 0x1C16CF4
	0x039EFECC ADRP X0, 0x764000
	0x039EFED0 LDR X0, [X0 + 0x710]
	0x039EFED4 BL 0x1C16CF4
	0x039EFED8 ADRP X0, 0x764000
	0x039EFEDC LDR X0, [X0 + 0x718]
	0x039EFEE0 BL 0x1C16CF4
	0x039EFEE4 ADRP X0, 0x704000
	0x039EFEE8 LDR X0, [X0 + 0xE18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9F3000
	006 Move W8, [X20+3670]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x72F000
	013 Move X0, [X0+4032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3670], W8
	017 Move X0, X19
	018 Move X1, X31
	019 Call Component.get_gameObject, X0
	020 Compare X0, 0
	021 JumpIfEqual {51}
	022 Move X1, X31
	023 Call GameObject.get_layer, X0
	024 Move W8, [X19+64]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x72F000
	027 Move X8, [X8+4032]
	028 Move W20, W0
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call VolumeManager.get_instance
	035 Compare X0, 0
	036 JumpIfEqual {51}
	037 Move W2, [X19+64]
	038 Move X1, X19
	039 Move X21, X0
	040 Call VolumeManager.Unregister, X0, X1, X2
	041 Move X0, X21
	042 Move X1, X19
	043 Move W2, W20
	044 Call VolumeManager.Register, X0, X1, X2
	045 Move [X19+64], W20
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039F00A0 BL 0x3397828
	0x039F00A4 CBZ X0, 0x39F0198
	0x039F00A8 LDR X8, [X0]
	0x039F00AC LDR X9, [X8 + 0x2C8]
	0x039F00B0 LDR X3, [X8 + 0x2D0]
	0x039F00B4 MOV X1, X22
	0x039F00B8 MOV X2, X31
	0x039F00BC BLR X9
	0x039F00C0 MOV X8, X0
	0x039F00C4 CBZ X0, 0x39EFFA4
	0x039F00C8 LDR X9, [X8]
	0x039F00CC LDR X1, [X28]
	0x039F00D0 LDRB W11, [X9 + 0x130]
	0x039F00D4 LDRB W10, [X1 + 0x130]
	0x039F00D8 CMP W11, W10
	0x039F00DC B.CC 0x39F018C
	0x039F00E0 LDR X9, [X9 + 0xC8]
	0x039F00E4 ADD X9, X9, X10, 0x3, LSL
	0x039F00E8 LDUR X9, [X9 - 0x8]
	0x039F00EC CMP X9, X1
	0x039F00F0 B.NE 0x39F018C
	0x039F00F4 AND W2, W20, 0x1
	0x039F00F8 MOV X0, X21
	0x039F00FC MOV X1, X8
	0x039F0100 BL 0x39EFE90
	0x039F0104 B 0x39EFFA4
	0x039F0108 MOV X21, X31
	0x039F010C CBZ X19, 0x39F0168
	0x039F0110 LDR X8, [X19]
	0x039F0114 LDR X1, [X24]
	0x039F0118 LDRH W9, [X8 + 0x12E]
	0x039F011C CBZ X9, 0x39F0140
	0x039F0120 LDR X10, [X8 + 0xB0]
	0x039F0124 ADD X10, X10, 0x8
	0x039F0128 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9F2000
	007 Move X21, 0x730000
	008 Move X20, 0x730000
	009 Move W8, [X22+3671]
	010 Move X21, [X21+3144]
	011 Move X20, [X20+3152]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x730000
	018 Move X0, [X0+3152]
	019 Call 0x1C17CF4
	020 Move X0, 0x730000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3671], W8
	025 Move W8, 1
	026 Move W9, 0x3F800000
	027 Move [X19+32], W8
	028 Move [X19+44], W9
	029 Move X0, [X21]
	030 Call 0x1C17F10
	031 Move X1, [X20]
	032 Move X20, X0
	033 Call List`1<Object>..ctor, X0
	034 Move [X19+56], X20
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X1, X31
	041 Move X30, [X31+48]
	042 Call MonoBehaviour..ctor, X0
	043 Return 

