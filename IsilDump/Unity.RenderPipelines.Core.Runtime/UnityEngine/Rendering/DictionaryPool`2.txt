Type: UnityEngine.Rendering.DictionaryPool`2

Method: System.Collections.Generic.Dictionary`2<TKey, TValue> Get()

Disassembly:
	0x029BA394 LDR W9, [X8 + 0x18]
	0x029BA398 CMP W20, W9
	0x029BA39C B.CS 0x29BA3E8
	0x029BA3A0 CBZ X0, 0x29BA3E4
	0x029BA3A4 LDR X9, [X0]
	0x029BA3A8 MOVZ W10, 0x18
	0x029BA3AC UMADDL X8, X20, X10, X8
	0x029BA3B0 LDRB W1, [X8 + 0x30]
	0x029BA3B4 LDP X8, X3, [X9 + 0x1B8]
	0x029BA3B8 ANDS W31, W19, 0xFF
	0x029BA3BC CSET W2, NE
	0x029BA3C0 BLR X8
	0x029BA3C4 TBZ X0, 0x0, 0x29BA3D0
	0x029BA3C8 MOVZ W0, 0x1
	0x029BA3CC B 0x29BA3D4
	0x029BA3D0 MOV W0, W31
	0x029BA3D4 LDP X20, X19, [X31 + 0x20]
	0x029BA3D8 LDP X22, X21, [X31 + 0x10]
	0x029BA3DC LDR X30, [X31], #0x30
	0x029BA3E0 RET
	0x029BA3E4 BL 0x1C16F20
	0x029BA3E8 BL 0x1C16F28
	0x029BA3EC STP X30, X23, [X31 - 0x30]!
	0x029BA3F0 STP X22, X21, [X31 + 0x10]
	0x029BA3F4 STP X20, X19, [X31 + 0x20]
	0x029BA3F8 LDR X8, [X3 + 0x20]
	0x029BA3FC MOV X22, X2
	0x029BA400 MOV X20, X3
	0x029BA404 MOV X19, X1
	0x029BA408 LDR X8, [X8 + 0xC0]
	0x029BA40C MOV X21, X0
	0x029BA410 LDR X2, [X8 + 0xF8]
	0x029BA414 BL 0x29BA994
	0x029BA418 TBNZ X0, 0x1F, 0x29BA48C
	0x029BA41C LDR X8, [X20 + 0x20]
	0x029BA420 MOV W23, W0
	0x029BA424 LDR X8, [X8 + 0xC0]
	0x029BA428 LDR X0, [X8 + 0x108]
	0x029BA42C BL 0x21189DC
	0x029BA430 LDR X8, [X21 + 0x18]
	0x029BA434 CBZ X8, 0x29BA4A0
	0x029BA438 LDR W9, [X8 + 0x18]
	0x029BA43C CMP W23, W9
	0x029BA440 B.CS 0x29BA4A4
	0x029BA444 CBZ X0, 0x29BA4A0
	0x029BA448 LDR X9, [X0]
	0x029BA44C MOVZ W10, 0x18
	0x029BA450 UMADDL X8, X23, X10, X8
	0x029BA454 LDRB W1, [X8 + 0x30]
	0x029BA458 LDP X8, X3, [X9 + 0x1B8]
	0x029BA45C ANDS W31, W22, 0xFF
	0x029BA460 CSET W2, NE
	0x029BA464 BLR X8
	0x029BA468 TBZ X0, 0x0, 0x29BA48C
	0x029BA46C LDR X8, [X20 + 0x20]
	0x029BA470 MOV X0, X21
	0x029BA474 MOV X1, X19
	0x029BA478 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {79}
	043 Move X8, [X19+32]
	044 Add X9, X8, 309
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move TEMP, X9
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {55}
	050 Move X0, X8
	051 Call 0x1C5D684
	052 Move X8, [X19+32]
	053 Add X9, X8, 309
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X0, X8
	056 Move X10, [X0+192]
	057 Move X10, [X10+24]
	058 Move X19, [X10]
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X8, X0
	066 Move X8, [X8+192]
	067 Add X4, X31, 8
	068 Move X0, X19
	069 Move X2, X20
	070 Move X1, [X8+24]
	071 Move X3, X31
	072 Move X8, [X1+16]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X0, [X31+8]
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Return X0
	079 Call 0x1C17F20

Method: UnityEngine.Rendering.ObjectPool`1/PooledObject<System.Collections.Generic.Dictionary`2<TKey, TValue>> Get(out System.Collections.Generic.Dictionary`2<TKey, TValue> value)

Disassembly:
	0x029BA47C LDR X2, [X8 + 0x128]
	0x029BA480 BL 0x29BB6C8
	0x029BA484 MOVZ W0, 0x1
	0x029BA488 B 0x29BA490
	0x029BA48C MOV W0, W31
	0x029BA490 LDP X20, X19, [X31 + 0x20]
	0x029BA494 LDP X22, X21, [X31 + 0x10]
	0x029BA498 LDP X30, X23, [X31], #0x30
	0x029BA49C RET
	0x029BA4A0 BL 0x1C16F20
	0x029BA4A4 BL 0x1C16F28
	0x029BA4A8 STR X30, [X31 - 0x20]!
	0x029BA4AC STP X20, X19, [X31 + 0x10]
	0x029BA4B0 LDR W20, [X0 + 0x20]
	0x029BA4B4 MOV X19, X0
	0x029BA4B8 CMP W20, 0x1
	0x029BA4BC B.LT 0x29BA4F8
	0x029BA4C0 LDR X0, [X19 + 0x10]
	0x029BA4C4 CBZ X0, 0x29BA510
	0x029BA4C8 LDR W2, [X0 + 0x18]
	0x029BA4CC MOV W1, W31
	0x029BA4D0 MOV X3, X31
	0x029BA4D4 BL 0x339FA34
	0x029BA4D8 LDR X0, [X19 + 0x18]
	0x029BA4DC MOVI D0, 0xFFFFFFFF00000000
	0x029BA4E0 MOV W1, W31
	0x029BA4E4 MOV W2, W20
	0x029BA4E8 MOV X3, X31
	0x029BA4EC STR D0, [X19 + 0x20]
	0x029BA4F0 STR W31, [X19 + 0x28]
	0x029BA4F4 BL 0x339FA34
	0x029BA4F8 LDR W8, [X19 + 0x2C]
	0x029BA4FC ADD W8, W8, 0x1
	0x029BA500 STR W8, [X19 + 0x2C]
	0x029BA504 LDP X20, X19, [X31 + 0x10]
	0x029BA508 LDR X30, [X31], #0x20
	0x029BA50C RET
	0x029BA510 BL 0x1C16F20
	0x029BA514 STR X30, [X31 - 0x10]!
	0x029BA518 LDR X8, [X2 + 0x20]
	0x029BA51C LDR X8, [X8 + 0xC0]
	0x029BA520 LDR X2, [X8 + 0xF8]
	0x029BA524 BL 0x29BA994
	0x029BA528 ORN W8, W31, W0, 0x0
	0x029BA52C UBFM W0, W8, 0x1F, 0x1F
	0x029BA530 LDR X30, [X31], #0x10
	0x029BA534 RET
	0x029BA538 STR X30, [X31 - 0x40]!
	0x029BA53C STP X24, X23, [X31 + 0x10]
	0x029BA540 STP X22, X21, [X31 + 0x20]
	0x029BA544 STP X20, X19, [X31 + 0x30]
	0x029BA548 LDR W8, [X0 + 0x20]
	0x029BA54C CMP W8, 0x1
	0x029BA550 B.LT 0x29BA5D0
	0x029BA554 LDR X22, [X0 + 0x18]
	0x029BA558 MOV X20, X0
	0x029BA55C CBZ X22, 0x29BA5F4
	0x029BA560 MOV X19, X2
	0x029BA564 MOV X23, X31
	0x029BA568 ADD X24, X22, 0x30
	0x029BA56C AND W21, W1, 0x1
	0x029BA570 LDR W9, [X22 + 0x18]
	0x029BA574 CMP X23, X9
	0x029BA578 B.CS 0x29BA5F0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X20+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, [X8+16]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+184]
	045 Move X21, [X8]
	046 Compare X21, 0
	047 JumpIfEqual {88}
	048 Move X8, [X20+32]
	049 Add X9, X8, 309
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {60}
	055 Move X0, X8
	056 Call 0x1C5D684
	057 Move X8, [X20+32]
	058 Add X9, X8, 309
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X0, X8
	061 Move X10, [X0+192]
	062 Move X10, [X10+48]
	063 Move X20, [X10]
	064 Move TEMP, X9
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X8
	069 Call 0x1C5D684
	070 Move X8, X0
	071 Move X8, [X8+192]
	072 Add X3, X31, 8
	073 Add X4, X31, 16
	074 Move X0, X20
	075 Move X1, [X8+48]
	076 Move [X31+8], X19
	077 Move X2, X21
	078 Move X8, [X1+16]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X0, [X31+16]
	081 Move X1, [X31+24]
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Add X31, X31, 64
	087 Return X0
	088 Call 0x1C17F20

Method: System.Void Release(System.Collections.Generic.Dictionary`2<TKey, TValue> toRelease)

Disassembly:
	0x029BA57C LDUR W9, [X24 - 0x10]
	0x029BA580 TBNZ X9, 0x1F, 0x29BA5C0
	0x029BA584 LDR X8, [X19 + 0x20]
	0x029BA588 LDR X8, [X8 + 0xC0]
	0x029BA58C LDR X0, [X8 + 0x108]
	0x029BA590 BL 0x21189DC
	0x029BA594 LDR W8, [X22 + 0x18]
	0x029BA598 CMP X23, X8
	0x029BA59C B.CS 0x29BA5F0
	0x029BA5A0 CBZ X0, 0x29BA5F4
	0x029BA5A4 LDR X8, [X0]
	0x029BA5A8 LDRB W1, [X24]
	0x029BA5AC MOV W2, W21
	0x029BA5B0 LDP X9, X3, [X8 + 0x1B8]
	0x029BA5B4 BLR X9
	0x029BA5B8 TBNZ X0, 0x0, 0x29BA5D8
	0x029BA5BC LDR W8, [X20 + 0x20]
	0x029BA5C0 ADD X23, X23, 0x1
	0x029BA5C4 CMP X23, W8, SXTW
	0x029BA5C8 ADD X24, X24, 0x18
	0x029BA5CC B.LT 0x29BA570
	0x029BA5D0 MOV W0, W31
	0x029BA5D4 B 0x29BA5DC
	0x029BA5D8 MOVZ W0, 0x1
	0x029BA5DC LDP X20, X19, [X31 + 0x30]
	0x029BA5E0 LDP X22, X21, [X31 + 0x20]
	0x029BA5E4 LDP X24, X23, [X31 + 0x10]
	0x029BA5E8 LDR X30, [X31], #0x40
	0x029BA5EC RET
	0x029BA5F0 BL 0x1C16F28
	0x029BA5F4 BL 0x1C16F20
	0x029BA5F8 SUB X31, X31, 0x50
	0x029BA5FC STP X30, X25, [X31 + 0x10]
	0x029BA600 STP X24, X23, [X31 + 0x20]
	0x029BA604 STP X22, X21, [X31 + 0x30]
	0x029BA608 STP X20, X19, [X31 + 0x40]
	0x029BA60C CBZ X1, 0x29BA6F8
	0x029BA610 LDR W9, [X1 + 0x18]
	0x029BA614 MOV X19, X3
	0x029BA618 MOV W21, W2
	0x029BA61C MOV X20, X1
	0x029BA620 MOV X22, X0
	0x029BA624 CMP W9, W2
	0x029BA628 B.CS 0x29BA638
	0x029BA62C MOV X0, X31
	0x029BA630 BL 0x339E2CC
	0x029BA634 LDR W9, [X20 + 0x18]
	0x029BA638 LDR W8, [X22 + 0x20]
	0x029BA63C LDR W10, [X22 + 0x28]
	0x029BA640 SUB W9, W9, W21
	0x029BA644 SUB W10, W8, W10
	0x029BA648 CMP W9, W10
	0x029BA64C B.GE 0x29BA660
	0x029BA650 MOVZ W0, 0x5
	0x029BA654 MOV X1, X31
	0x029BA658 BL 0x339DA4C
	0x029BA65C LDR W8, [X22 + 0x20]
	0x029BA660 CMP W8, 0x1
	0x029BA664 B.LT 0x29BA6DC
	0x029BA668 LDR X22, [X22 + 0x18]
	0x029BA66C CBZ X22, 0x29BA700
	0x029BA670 MOV X23, X31
	0x029BA674 MOV W24, W8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X0, [X8+16]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X20+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+192]
	037 Move X0, [X8+16]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+184]
	045 Move X21, [X8]
	046 Compare X21, 0
	047 JumpIfEqual {86}
	048 Move X8, [X20+32]
	049 Add X9, X8, 309
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {60}
	055 Move X0, X8
	056 Call 0x1C5D684
	057 Move X8, [X20+32]
	058 Add X9, X8, 309
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X0, X8
	061 Move X10, [X0+192]
	062 Move X10, [X10+64]
	063 Move X20, [X10]
	064 Move TEMP, X9
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {71}
	068 Move X0, X8
	069 Call 0x1C5D684
	070 Move X8, X0
	071 Move X8, [X8+192]
	072 Add X3, X31, 8
	073 Move X0, X20
	074 Move X2, X21
	075 Move X1, [X8+64]
	076 Move [X31+8], X19
	077 Move X4, X19
	078 Move X8, [X1+16]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Add X31, X31, 48
	085 Return 
	086 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x029BA678 ADD X25, X22, 0x30
	0x029BA67C LDR W8, [X22 + 0x18]
	0x029BA680 CMP X23, X8
	0x029BA684 B.CS 0x29BA6F4
	0x029BA688 LDUR W8, [X25 - 0x10]
	0x029BA68C TBNZ X8, 0x1F, 0x29BA6CC
	0x029BA690 LDUR X1, [X25 - 0x8]
	0x029BA694 LDRB W2, [X25]
	0x029BA698 STP X31, X31, [X31]
	0x029BA69C LDR X8, [X19 + 0x20]
	0x029BA6A0 ADD X0, X31, 0x0
	0x029BA6A4 LDR X8, [X8 + 0xC0]
	0x029BA6A8 LDR X3, [X8 + 0x140]
	0x029BA6AC BL 0x2EDCDAC
	0x029BA6B0 LDR W8, [X20 + 0x18]
	0x029BA6B4 CMP W21, W8
	0x029BA6B8 B.CS 0x29BA6F4
	0x029BA6BC LDR V0, [X31]
	0x029BA6C0 ADD X8, X20, W21, 0x4, SXTW
	0x029BA6C4 ADD W21, W21, 0x1
	0x029BA6C8 STR V0, [X8 + 0x2]
	0x029BA6CC ADD X23, X23, 0x1
	0x029BA6D0 CMP X24, X23
	0x029BA6D4 ADD X25, X25, 0x18
	0x029BA6D8 B.NE 0x29BA67C
	0x029BA6DC LDP X20, X19, [X31 + 0x40]
	0x029BA6E0 LDP X22, X21, [X31 + 0x30]
	0x029BA6E4 LDP X24, X23, [X31 + 0x20]
	0x029BA6E8 LDP X30, X25, [X31 + 0x10]
	0x029BA6EC ADD X31, X31, 0x50
	0x029BA6F0 RET
	0x029BA6F4 BL 0x1C16F28
	0x029BA6F8 MOVZ W0, 0x3
	0x029BA6FC BL 0x338F3E0
	0x029BA700 BL 0x1C16F20
	0x029BA704 MOVI V0.2D, 0x0
	0x029BA708 STR X31, [X8 + 0x20]
	0x029BA70C STP V0, V0, [X8]
	0x029BA710 LDR X9, [X1 + 0x20]
	0x029BA714 MOVZ W2, 0x2
	0x029BA718 MOV X1, X0
	0x029BA71C MOV X0, X8
	0x029BA720 LDR X9, [X9 + 0xC0]
	0x029BA724 LDR X3, [X9 + 0x150]
	0x029BA728 B 0x2BE5E24
	0x029BA72C SUB X31, X31, 0x70
	0x029BA730 STP X30, X19, [X31 + 0x60]
	0x029BA734 MOVI V0.2D, 0x0
	0x029BA738 STR X31, [X31 + 0x50]
	0x029BA73C STP V0, V0, [X31 + 0x30]
	0x029BA740 LDR X8, [X1 + 0x20]
	0x029BA744 MOV X19, X1
	0x029BA748 MOV X1, X0
	0x029BA74C ADD X0, X31, 0x30
	0x029BA750 LDR X8, [X8 + 0xC0]
	0x029BA754 MOVZ W2, 0x2
	0x029BA758 LDR X3, [X8 + 0x150]
	0x029BA75C BL 0x2BE5E24
	0x029BA760 LDP V0, V1, [X31 + 0x30]
	0x029BA764 LDR X8, [X31 + 0x50]
	0x029BA768 ADD X1, X31, 0x0
	0x029BA76C STP V0, V1, [X31]
	0x029BA770 STR X8, [X31 + 0x20]
	0x029BA774 LDR X8, [X19 + 0x20]
	0x029BA778 LDR X8, [X8 + 0xC0]
	0x029BA77C LDR X0, [X8 + 0x148]
	0x029BA780 BL 0x1C16E04
	0x029BA784 LDP X30, X19, [X31 + 0x60]
	0x029BA788 ADD X31, X31, 0x70
	0x029BA78C RET
	0x029BA790 STR X30, [X31 - 0x50]!
	0x029BA794 STP X26, X25, [X31 + 0x10]
	0x029BA798 STP X24, X23, [X31 + 0x20]
	0x029BA79C STP X22, X21, [X31 + 0x30]
	0x029BA7A0 STP X20, X19, [X31 + 0x40]
	0x029BA7A4 ADRP X22, 0x1A20000
	0x029BA7A8 LDRB W8, [X22 + 0xFDF]
	0x029BA7AC MOV X20, X4
	0x029BA7B0 MOV X19, X1
	0x029BA7B4 MOV X21, X0
	0x029BA7B8 TBNZ X8, 0x0, 0x29BA800
	0x029BA7BC ADRP X0, 0x1739000
	0x029BA7C0 LDR X0, [X0 + 0x6C0]
	0x029BA7C4 BL 0x1C16CF4
	0x029BA7C8 ADRP X0, 0x1764000
	0x029BA7CC LDR X0, [X0 + 0x630]
	0x029BA7D0 BL 0x1C16CF4
	0x029BA7D4 ADRP X0, 0x1763000
	0x029BA7D8 LDR X0, [X0 + 0x2D0]
	0x029BA7DC BL 0x1C16CF4
	0x029BA7E0 ADRP X0, 0x1764000
	0x029BA7E4 LDR X0, [X0 + 0x638]
	0x029BA7E8 BL 0x1C16CF4
	0x029BA7EC ADRP X0, 0x173A000
	0x029BA7F0 LDR X0, [X0 + 0x2A0]
	0x029BA7F4 BL 0x1C16CF4
	0x029BA7F8 MOVZ W8, 0x1
	0x029BA7FC STRB W8, [X22 + 0xFDF]
	0x029BA800 CBZ X19, 0x29BA984
	0x029BA804 ADRP X8, 0x173A000
	0x029BA808 LDR X8, [X8 + 0x2A0]
	0x029BA80C LDR W2, [X21 + 0x2C]
	0x029BA810 ADRP X22, 0x1763000
	0x029BA814 ADRP X25, 0x1739000
	0x029BA818 LDR X1, [X8]
	0x029BA81C LDR X22, [X22 + 0x2D0]
	0x029BA820 LDR X25, [X25 + 0x6C0]
	0x029BA824 MOV X0, X19
	0x029BA828 MOV X3, X31
	0x029BA82C BL 0x32A8F28
	0x029BA830 LDR X23, [X21 + 0x30]
	0x029BA834 LDR X22, [X22]
	0x029BA838 CBNZ X23, 0x29BA850
	0x029BA83C LDR X8, [X20 + 0x20]
	0x029BA840 LDR X8, [X8 + 0xC0]
	0x029BA844 LDR X0, [X8 + 0x18]
	0x029BA848 BL 0x29BCA90
	0x029BA84C MOV X23, X0
	0x029BA850 LDR X8, [X20 + 0x20]
	0x029BA854 LDR X0, [X25]
	0x029BA858 ADRP X26, 0x1764000
	0x029BA85C LDR X8, [X8 + 0xC0]
	0x029BA860 LDR W9, [X0 + 0xE0]
	0x029BA864 LDR X24, [X8 + 0x158]
	0x029BA868 LDR X26, [X26 + 0x630]
	0x029BA86C CBNZ W9, 0x29BA874
	0x029BA870 BL 0x1C16DFC
	0x029BA874 MOV X0, X24
	0x029BA878 MOV X1, X31
	0x029BA87C BL 0x338C698
	0x029BA880 MOV X3, X0
	0x029BA884 MOV X0, X19
	0x029BA888 MOV X1, X22
	0x029BA88C MOV X2, X23
	0x029BA890 MOV X4, X31
	0x029BA894 BL 0x32A89BC
	0x029BA898 LDR X8, [X21 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, [X0+32]
	009 Move W8, [X0+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X0, [X8+80]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+80]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X19+32]
	043 Move X9, [X0+184]
	044 Move W10, [X8+309]
	045 Move X21, [X9]
	046 Move TEMP, X10
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {53}
	050 Move X0, X8
	051 Call 0x1C5D684
	052 Move X8, X0
	053 Move X8, [X8+192]
	054 Move X0, [X8+96]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Call 0x1C17F10
	062 Move X8, [X19+32]
	063 Move X20, X0
	064 Add X9, X8, 309
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move TEMP, X9
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {75}
	070 Move X0, X8
	071 Call 0x1C5D684
	072 Move X8, [X19+32]
	073 Add X9, X8, 309
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X0, X8
	076 Move X10, [X0+192]
	077 Move X10, [X10+104]
	078 Move X23, [X10]
	079 Move TEMP, X9
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {88}
	083 Move X0, X8
	084 Call 0x1C5D684
	085 Move X8, [X19+32]
	086 Add X9, X8, 309
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 Move X0, X8
	089 Move X10, [X0+192]
	090 Move X22, [X10+88]
	091 Move TEMP, X9
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {98}
	095 Move X0, X8
	096 Call 0x1C5D684
	097 Move X8, X0
	098 Move X8, [X8+192]
	099 Move X0, X20
	100 Move X1, X21
	101 Move X2, X22
	102 Move X3, [X8+104]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X0, [X19+32]
	105 Move W8, [X0+309]
	106 Move TEMP, X8
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {111}
	110 Call 0x1C5D684
	111 Move X8, [X0+192]
	112 Move X0, [X8+8]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Call 0x1C17F10
	120 Move X8, [X19+32]
	121 Move X21, X0
	122 Add X9, X8, 309
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Move TEMP, X9
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {133}
	128 Move X0, X8
	129 Call 0x1C5D684
	130 Move X8, [X19+32]
	131 Add X9, X8, 309
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Move X0, X8
	134 Move X10, [X0+192]
	135 Move X10, [X10+112]
	136 Move X22, [X10]
	137 Move TEMP, X9
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {144}
	141 Move X0, X8
	142 Call 0x1C5D684
	143 Move X8, X0
	144 Move X8, [X8+192]
	145 Move W3, 1
	146 Move X0, X21
	147 Move X1, X31
	148 Move X4, [X8+112]
	149 Move X2, X20
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X0, [X19+32]
	152 Move W8, [X0+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Call 0x1C5D684
	158 Move X8, [X0+192]
	159 Move X0, [X8+16]
	160 Move W8, [X0+309]
	161 Move TEMP, X8
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {166}
	165 Call 0x1C5D684
	166 Move X8, [X0+184]
	167 Move [X8], X21
	168 Move X0, [X19+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+192]
	176 Move X0, [X8+16]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {190}
	182 Move X20, [X31+32]
	183 Move X19, [X31+40]
	184 Move X22, [X31+16]
	185 Move X21, [X31+24]
	186 Move X30, [X31+48]
	187 Move X23, [X31+56]
	188 Call 0x1C5D684
	189 Return 
	190 Move X20, [X31+32]
	191 Move X19, [X31+40]
	192 Move X22, [X31+16]
	193 Move X21, [X31+24]
	194 Move X30, [X31+48]
	195 Move X23, [X31+56]
	196 Return 

