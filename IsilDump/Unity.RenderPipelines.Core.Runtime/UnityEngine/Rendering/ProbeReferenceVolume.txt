Type: UnityEngine.Rendering.ProbeReferenceVolume

Method: UnityEngine.Bounds get_globalBounds()

Disassembly:
	0x039BA96C ADRP X20, 0xA27000
	0x039BA970 LDRB W8, [X20 + 0xC8C]
	0x039BA974 MOV X19, X0
	0x039BA978 TBNZ X8, 0x0, 0x39BA9B4
	0x039BA97C ADRP X0, 0x798000

ISIL:
	001 Move X9, [X0+120]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: System.Void set_globalBounds(UnityEngine.Bounds value)

Disassembly:
	0x039BA980 LDR X0, [X0 + 0x3E0]
	0x039BA984 BL 0x1C16CF4
	0x039BA988 ADRP X0, 0x798000
	0x039BA98C LDR X0, [X0 + 0x3E8]
	0x039BA990 BL 0x1C16CF4

ISIL:
	001 Move X8, [X1+16]
	002 Move V0, [X1]
	003 Move [X0+120], X8
	004 Move [X0+104], V0
	005 Return 

Method: System.Boolean get_isInitialized()

Disassembly:
	0x039BA994 ADRP X0, 0x798000
	0x039BA998 LDR X0, [X0 + 0x3F0]

ISIL:
	001 Move W0, [X0+321]
	002 Return X0

Method: System.Boolean get_enabledBySRP()

Disassembly:
	0x039BA99C BL 0x1C16CF4
	0x039BA9A0 ADRP X0, 0x798000

ISIL:
	001 Move W0, [X0+322]
	002 Return X0

Method: System.Boolean get_hasUnloadedCells()

Disassembly:
	0x039BA9A4 LDR X0, [X0 + 0x340]
	0x039BA9A8 BL 0x1C16CF4
	0x039BA9AC MOVZ W8, 0x1
	0x039BA9B0 STRB W8, [X20 + 0xC8C]
	0x039BA9B4 LDR X1, [X19 + 0x238]
	0x039BA9B8 CBZ X1, 0x39BAA0C
	0x039BA9BC ADRP X23, 0x798000
	0x039BA9C0 ADRP X22, 0x798000
	0x039BA9C4 ADRP X21, 0x798000
	0x039BA9C8 LDR X23, [X23 + 0x3F0]
	0x039BA9CC LDR X22, [X22 + 0x3E0]
	0x039BA9D0 LDR X21, [X21 + 0x3E8]
	0x039BA9D4 MOV W20, W31
	0x039BA9D8 LDR W8, [X1 + 0x18]
	0x039BA9DC CMP W20, W8
	0x039BA9E0 B.GE 0x39BAA10
	0x039BA9E4 LDR X2, [X23]
	0x039BA9E8 MOV X0, X1
	0x039BA9EC MOV W1, W20
	0x039BA9F0 BL 0x2B40178

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA28000
	005 Move W8, [X20+3202]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x799000
	012 Move X0, [X0+832]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3202], W8
	016 Move X8, [X19+576]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move W8, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X30, [X31+32]
	025 Return X0
	026 Call 0x1C17F20

Method: System.Boolean get_enableScenarioBlending()

Disassembly:
	0x039BA9F4 LDR X1, [X0]
	0x039BA9F8 MOV X0, X19
	0x039BA9FC BL 0x39BA6DC
	0x039BAA00 LDR X1, [X19 + 0x238]
	0x039BAA04 ADD W20, W20, 0x1
	0x039BAA08 CBNZ X1, 0x39BA9D8
	0x039BAA0C BL 0x1C16F20
	0x039BAA10 LDR X0, [X19 + 0x240]
	0x039BAA14 CBZ X0, 0x39BAA0C
	0x039BAA18 LDR X2, [X22]
	0x039BAA1C BL 0x2B3FCD0
	0x039BAA20 LDR X0, [X19 + 0x238]
	0x039BAA24 CBZ X0, 0x39BAA0C
	0x039BAA28 LDR X1, [X21]
	0x039BAA2C LDP X20, X19, [X31 + 0x20]
	0x039BAA30 LDP X22, X21, [X31 + 0x10]
	0x039BAA34 LDP X30, X23, [X31], #0x30
	0x039BAA38 B 0x2B3FBDC
	0x039BAA3C STP X30, X23, [X31 - 0x30]!
	0x039BAA40 STP X22, X21, [X31 + 0x10]
	0x039BAA44 STP X20, X19, [X31 + 0x20]
	0x039BAA48 ADRP X20, 0xA27000
	0x039BAA4C LDRB W8, [X20 + 0xC8D]
	0x039BAA50 MOV X19, X0
	0x039BAA54 TBNZ X8, 0x0, 0x39BAA90
	0x039BAA58 ADRP X0, 0x798000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA28000
	005 Move W8, [X20+3203]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x799000
	012 Move X0, [X0+608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3203], W8
	016 Move W8, [X19+372]
	017 Compare W8, 0
	018 JumpIfEqual {31}
	019 Move X8, 0x799000
	020 Move X8, [X8+608]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Call ProbeBrickBlendingPool.get_isSupported
	030 Return X0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, W31
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Int32 get_numberOfCellsLoadedPerFrame()

Disassembly:
	0x039BAA5C LDR X0, [X0 + 0x3F8]
	0x039BAA60 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+356]
	002 Return X0

Method: System.Int32 get_numberOfCellsBlendedPerFrame()

Disassembly:
	0x039BAA64 ADRP X0, 0x798000
	0x039BAA68 LDR X0, [X0 + 0x400]

ISIL:
	001 Move W0, [X0+360]
	002 Return X0

Method: System.Void set_numberOfCellsBlendedPerFrame(System.Int32 value)

Disassembly:
	0x039BAA6C BL 0x1C16CF4
	0x039BAA70 ADRP X0, 0x798000
	0x039BAA74 LDR X0, [X0 + 0x408]
	0x039BAA78 BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSINC not yet implemented."
	003 Move [X0+360], W8
	004 Return 

Method: System.Single get_turnoverRate()

Disassembly:
	0x039BAA7C ADRP X0, 0x798000
	0x039BAA80 LDR X0, [X0 + 0x410]

ISIL:
	001 Move V0, [X0+364]
	002 Return V0

Method: System.Void set_turnoverRate(System.Single value)

Disassembly:
	0x039BAA84 BL 0x1C16CF4
	0x039BAA88 MOVZ W8, 0x1
	0x039BAA8C STRB W8, [X20 + 0xC8D]
	0x039BAA90 LDR X1, [X19 + 0x258]
	0x039BAA94 CBZ X1, 0x39BAAE8
	0x039BAA98 ADRP X23, 0x798000
	0x039BAA9C ADRP X22, 0x798000

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+364], S0
	007 Return 

Method: UnityEngine.Rendering.ProbeVolumeSHBands get_shBands()

Disassembly:
	0x039BAAA0 ADRP X21, 0x798000
	0x039BAAA4 LDR X23, [X23 + 0x408]

ISIL:
	001 Move W0, [X0+376]
	002 Return X0

Method: System.String get_lightingScenario()

Disassembly:
	0x039BAAA8 LDR X22, [X22 + 0x3F8]
	0x039BAAAC LDR X21, [X21 + 0x400]
	0x039BAAB0 MOV W20, W31
	0x039BAAB4 LDR W8, [X1 + 0x18]
	0x039BAAB8 CMP W20, W8
	0x039BAABC B.GE 0x39BAAEC
	0x039BAAC0 LDR X2, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+240]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+112]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_lightingScenario(System.String value)

Disassembly:
	0x039BAAC4 MOV X0, X1
	0x039BAAC8 MOV W1, W20
	0x039BAACC BL 0x2B40178
	0x039BAAD0 LDR X1, [X0]
	0x039BAAD4 MOV X0, X19
	0x039BAAD8 BL 0x39BA7BC
	0x039BAADC LDR X1, [X19 + 0x258]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+240]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call ProbeVolumeSceneData.SetActiveScenario, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Single get_scenarioBlendingFactor()

Disassembly:
	0x039BAAE0 ADD W20, W20, 0x1
	0x039BAAE4 CBNZ X1, 0x39BAAB4
	0x039BAAE8 BL 0x1C16F20
	0x039BAAEC LDR X0, [X19 + 0x260]
	0x039BAAF0 CBZ X0, 0x39BAAE8
	0x039BAAF4 LDR X2, [X22]
	0x039BAAF8 BL 0x2B3FCD0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+240]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+128]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Void set_scenarioBlendingFactor(System.Single value)

Disassembly:
	0x039BAAFC LDR X0, [X19 + 0x258]
	0x039BAB00 CBZ X0, 0x39BAAE8
	0x039BAB04 LDR X1, [X21]
	0x039BAB08 LDP X20, X19, [X31 + 0x20]
	0x039BAB0C LDP X22, X21, [X31 + 0x10]
	0x039BAB10 LDP X30, X23, [X31], #0x30
	0x039BAB14 B 0x2B3FBDC
	0x039BAB18 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+240]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X1, [X0+120]
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call ProbeVolumeSceneData.BlendLightingScenario, X0, X1, V0
	009 Return 
	010 Call 0x1C17F20

Method: System.Void BlendLightingScenario(System.String otherScenario, System.Single blendingFactor)

Disassembly:
	0x039BAB1C STP X22, X21, [X31 + 0x10]
	0x039BAB20 STP X20, X19, [X31 + 0x20]
	0x039BAB24 ADRP X22, 0xA27000
	0x039BAB28 LDRB W8, [X22 + 0xC8E]
	0x039BAB2C MOV W21, W2
	0x039BAB30 MOV X20, X1
	0x039BAB34 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+240]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call ProbeVolumeSceneData.BlendLightingScenario, X0, X1, V0
	008 Return 
	009 Call 0x1C17F20

Method: UnityEngine.Rendering.ProbeVolumeTextureMemoryBudget get_memoryBudget()

Disassembly:
	0x039BAB38 TBNZ X8, 0x0, 0x39BAB80
	0x039BAB3C ADRP X0, 0x798000

ISIL:
	001 Move W0, [X0+368]
	002 Return X0

Method: System.Single get_probeVolumesWeight()

Disassembly:
	0x039BAB40 LDR X0, [X0 + 0x3A0]
	0x039BAB44 BL 0x1C16CF4

ISIL:
	001 Move V0, [X0+380]
	002 Return V0

Method: System.Void set_probeVolumesWeight(System.Single value)

Disassembly:
	0x039BAB48 ADRP X0, 0x798000
	0x039BAB4C LDR X0, [X0 + 0x418]
	0x039BAB50 BL 0x1C16CF4
	0x039BAB54 ADRP X0, 0x798000
	0x039BAB58 LDR X0, [X0 + 0x420]
	0x039BAB5C BL 0x1C16CF4
	0x039BAB60 ADRP X0, 0x798000

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+380], S0
	007 Return 

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeVolumePerSceneData> get_perSceneDataList()

Disassembly:
	0x039BAB64 LDR X0, [X0 + 0x428]
	0x039BAB68 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+392]
	002 Return X0

Method: System.Void set_perSceneDataList(System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeVolumePerSceneData> value)

Disassembly:
	0x039BAB6C ADRP X0, 0x798000
	0x039BAB70 LDR X0, [X0 + 0x430]

ISIL:
	001 Move [X0+392], X1
	002 Return 

Method: System.Void RegisterPerSceneData(UnityEngine.Rendering.ProbeVolumePerSceneData data)

Disassembly:
	0x039BAB74 BL 0x1C16CF4
	0x039BAB78 MOVZ W8, 0x1
	0x039BAB7C STRB W8, [X22 + 0xC8E]
	0x039BAB80 STR X31, [X31 + 0x8]
	0x039BAB84 CBZ X20, 0x39BACA8
	0x039BAB88 LDR X0, [X19 + 0x80]
	0x039BAB8C CBZ X0, 0x39BACA8
	0x039BAB90 ADRP X8, 0x798000
	0x039BAB94 LDR X8, [X8 + 0x3A0]
	0x039BAB98 LDR W1, [X20 + 0x1C]
	0x039BAB9C ADD X2, X31, 0x8
	0x039BABA0 LDR X3, [X8]
	0x039BABA4 BL 0x2A150AC
	0x039BABA8 TBZ X0, 0x0, 0x39BABC4
	0x039BABAC LDR X8, [X31 + 0x8]
	0x039BABB0 CBZ X8, 0x39BACA8
	0x039BABB4 LDR W9, [X8 + 0x9C]
	0x039BABB8 ADD W9, W9, 0x1
	0x039BABBC STR W9, [X8 + 0x9C]
	0x039BABC0 B 0x39BAC98
	0x039BABC4 LDR X0, [X19 + 0x88]
	0x039BABC8 CBZ X0, 0x39BACA8
	0x039BABCC ADRP X8, 0x798000
	0x039BABD0 LDR X8, [X8 + 0x428]
	0x039BABD4 LDR X1, [X8]
	0x039BABD8 BL 0x2493CB0
	0x039BABDC STR X0, [X31 + 0x8]
	0x039BABE0 CBZ X0, 0x39BACA8
	0x039BABE4 STR X20, [X0 + 0x10]
	0x039BABE8 LDR X8, [X19 + 0x48]
	0x039BABEC MOV X2, X0
	0x039BABF0 CBZ X8, 0x39BACA8
	0x039BABF4 LDR W10, [X20 + 0x18]
	0x039BABF8 LDUR X11, [X8 + 0x34]
	0x039BABFC LDR W12, [X8 + 0x3C]
	0x039BAC00 LDR X9, [X20 + 0x10]
	0x039BAC04 LDP W13, W8, [X8 + 0x28]
	0x039BAC08 MOVZ W14, 0x1
	0x039BAC0C SUB W10, W10, W12
	0x039BAC10 AND X12, X11, 0x0
	0x039BAC14 SUB W11, W9, W11
	0x039BAC18 SUB X9, X9, X12
	0x039BAC1C UBFM X9, X9, 0x20, 0x3F
	0x039BAC20 MADD W8, W8, W10, W9
	0x039BAC24 MADD W8, W8, W13, W11
	0x039BAC28 STR W21, [X2 + 0x94]
	0x039BAC2C STR W8, [X2 + 0x28]
	0x039BAC30 STR W14, [X2 + 0x9C]
	0x039BAC34 LDR X0, [X19 + 0x80]
	0x039BAC38 CBZ X0, 0x39BACA8
	0x039BAC3C ADRP X8, 0x798000
	0x039BAC40 LDR W1, [X20 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA28000
	006 Move W8, [X21+3204]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x799000
	014 Move X0, [X0+840]
	015 Call 0x1C17CF4
	016 Move X0, 0x799000
	017 Move X0, [X0+848]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3204], W8
	021 Move X0, [X20+392]
	022 Compare X0, 0
	023 JumpIfEqual {67}
	024 Move X8, 0x799000
	025 Move X8, [X8+848]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call List`1<Object>.Contains, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {52}
	033 Move X0, [X20+392]
	034 Compare X0, 0
	035 JumpIfEqual {67}
	036 Move X9, 0x799000
	037 Move X9, [X9+840]
	038 Move W10, [X0+28]
	039 Move X8, [X0+16]
	040 Move X9, [X9]
	041 Add W10, W10, 1
	042 Move [X0+28], W10
	043 Compare X8, 0
	044 JumpIfEqual {67}
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Move W11, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W9, W10, 1
	049 Add X8, X8, X10
	050 Move [X0+24], W9
	051 Move [X8+32], X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move X8, [X9+32]
	058 Move X1, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X8, [X8+192]
	062 Move X2, [X8+112]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call List`1<Object>.AddWithResize, X0, X1
	066 Return 
	067 Call 0x1C17F20

Method: System.Void UnregisterPerSceneData(UnityEngine.Rendering.ProbeVolumePerSceneData data)

Disassembly:
	0x039BAC44 LDR X8, [X8 + 0x418]
	0x039BAC48 LDR X3, [X8]
	0x039BAC4C BL 0x2A13678
	0x039BAC50 LDR X0, [X19 + 0x90]
	0x039BAC54 CBZ X0, 0x39BACA8
	0x039BAC58 ADRP X8, 0x798000
	0x039BAC5C LDR X8, [X8 + 0x430]
	0x039BAC60 LDR X1, [X8]
	0x039BAC64 BL 0x2493CB0
	0x039BAC68 CBZ X0, 0x39BACA8
	0x039BAC6C LDR X8, [X31 + 0x8]
	0x039BAC70 STR X8, [X0 + 0x10]
	0x039BAC74 CBZ X8, 0x39BACA8
	0x039BAC78 STR X0, [X8 + 0x18]
	0x039BAC7C LDR X0, [X19 + 0x240]
	0x039BAC80 CBZ X0, 0x39BACA8
	0x039BAC84 ADRP X8, 0x798000
	0x039BAC88 LDR X8, [X8 + 0x420]
	0x039BAC8C ADD X1, X31, 0x8
	0x039BAC90 LDR X2, [X8]
	0x039BAC94 BL 0x2B3FC18
	0x039BAC98 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA28000
	006 Move W8, [X21+3205]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x799000
	014 Move X0, [X0+856]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3205], W8
	018 Move X0, [X20+392]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x799000
	022 Move X8, [X8+856]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: UnityEngine.Rendering.ProbeReferenceVolume get_instance()

Disassembly:
	0x039BAC9C LDP X22, X21, [X31 + 0x10]
	0x039BACA0 LDR X30, [X31], #0x30
	0x039BACA4 RET
	0x039BACA8 BL 0x1C16F20
	0x039BACAC SUB X31, X31, 0x80
	0x039BACB0 STP X30, X21, [X31 + 0x60]
	0x039BACB4 STP X20, X19, [X31 + 0x70]
	0x039BACB8 MOVI V0.2D, 0x0
	0x039BACBC STP V0, V0, [X31 + 0x40]
	0x039BACC0 STR V0, [X31 + 0x3]
	0x039BACC4 CBZ X1, 0x39BADB4
	0x039BACC8 MOV X19, X1
	0x039BACCC LDR X1, [X1 + 0x10]
	0x039BACD0 MOV W21, W2
	0x039BACD4 AND W3, W2, 0x1
	0x039BACD8 ADD X2, X31, 0x30
	0x039BACDC MOV X20, X0
	0x039BACE0 BL 0x39BADB8
	0x039BACE4 TBZ X0, 0x0, 0x39BAD9C
	0x039BACE8 LDR X8, [X19 + 0x10]
	0x039BACEC CBZ X8, 0x39BADB4
	0x039BACF0 LDR X9, [X20 + 0xF8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA28000
	005 Move X19, 0x798000
	006 Move W8, [X20+3206]
	007 Move X19, [X19+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x798000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3206], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void Initialize(in UnityEngine.Rendering.ProbeVolumeSystemParameters parameters)

Disassembly:
	0x039BACF4 LDR X10, [X8 + 0x10]
	0x039BACF8 LDR W11, [X20 + 0x100]
	0x039BACFC LDR W8, [X8 + 0x18]
	0x039BAD00 UBFM X12, X9, 0x20, 0x3F
	0x039BAD04 UBFM X13, X10, 0x20, 0x3F
	0x039BAD08 CMP W9, W10
	0x039BAD0C CSEL X9, X9, X10, LT
	0x039BAD10 CMP W12, W13
	0x039BAD14 CSEL X10, X12, X13, LT
	0x039BAD18 CMP W11, W8
	0x039BAD1C CSEL W8, W11, W8, LT
	0x039BAD20 BFM X9, X10, 0x20, 0x1F
	0x039BAD24 STR X9, [X20 + 0xF8]
	0x039BAD28 STR W8, [X20 + 0x100]
	0x039BAD2C LDR X8, [X19 + 0x10]
	0x039BAD30 CBZ X8, 0x39BADB4
	0x039BAD34 ADD X9, X20, 0x104
	0x039BAD38 LDR X10, [X8 + 0x10]
	0x039BAD3C LDR X11, [X9]
	0x039BAD40 LDR W8, [X8 + 0x18]
	0x039BAD44 LDR W12, [X9 + 0x8]
	0x039BAD48 UBFM X13, X10, 0x20, 0x3F
	0x039BAD4C UBFM X14, X11, 0x20, 0x3F
	0x039BAD50 CMP W11, W10
	0x039BAD54 CSEL X10, X11, X10, GT
	0x039BAD58 CMP W14, W13
	0x039BAD5C CSEL X11, X14, X13, GT
	0x039BAD60 CMP W12, W8
	0x039BAD64 CSEL W8, W12, W8, GT
	0x039BAD68 BFM X10, X11, 0x20, 0x1F
	0x039BAD6C STR X10, [X9]
	0x039BAD70 STR W8, [X20 + 0x10C]
	0x039BAD74 LDP V0, V1, [X31 + 0x30]
	0x039BAD78 LDR V2, [X31 + 0x5]
	0x039BAD7C AND W3, W21, 0x1
	0x039BAD80 ADD X2, X31, 0x0
	0x039BAD84 MOV X0, X20
	0x039BAD88 MOV X1, X19
	0x039BAD8C STP V0, V1, [X31]
	0x039BAD90 STR V2, [X31 + 0x2]
	0x039BAD94 BL 0x39BAF28
	0x039BAD98 B 0x39BADA0
	0x039BAD9C MOV W0, W31
	0x039BADA0 LDP X20, X19, [X31 + 0x70]
	0x039BADA4 LDP X30, X21, [X31 + 0x60]
	0x039BADA8 AND W0, W0, 0x1
	0x039BADAC ADD X31, X31, 0x80
	0x039BADB0 RET
	0x039BADB4 BL 0x1C16F20
	0x039BADB8 SUB X31, X31, 0x70
	0x039BADBC STR X30, [X31 + 0x20]
	0x039BADC0 STP X26, X25, [X31 + 0x30]
	0x039BADC4 STP X24, X23, [X31 + 0x40]
	0x039BADC8 STP X22, X21, [X31 + 0x50]
	0x039BADCC STP X20, X19, [X31 + 0x60]
	0x039BADD0 ADRP X23, 0xA27000
	0x039BADD4 LDRB W8, [X23 + 0xC99]
	0x039BADD8 MOV W20, W3
	0x039BADDC MOV X19, X2
	0x039BADE0 MOV X22, X1
	0x039BADE4 MOV X21, X0
	0x039BADE8 TBNZ X8, 0x0, 0x39BAE00
	0x039BADEC ADRP X0, 0x797000
	0x039BADF0 LDR X0, [X0 + 0xF48]
	0x039BADF4 BL 0x1C16CF4
	0x039BADF8 MOVZ W8, 0x1
	0x039BADFC STRB W8, [X23 + 0xC99]
	0x039BAE00 MOVI V0.2D, 0x0
	0x039BAE04 STR W31, [X31 + 0x18]
	0x039BAE08 STR X31, [X31 + 0x10]
	0x039BAE0C STR W31, [X31 + 0x8]
	0x039BAE10 STR X31, [X31]
	0x039BAE14 STP V0, V0, [X19 + 0x10]
	0x039BAE18 STR V0, [X19]
	0x039BAE1C CBZ X22, 0x39BAF24
	0x039BAE20 LDR X1, [X22 + 0x10]
	0x039BAE24 LDR W2, [X22 + 0x18]
	0x039BAE28 LDR W3, [X22 + 0x24]
	0x039BAE2C ADRP X23, 0x797000
	0x039BAE30 LDR X23, [X23 + 0xF48]
	0x039BAE34 ADD X4, X31, 0x10
	0x039BAE38 ADD X5, X31, 0x0
	0x039BAE3C MOV X0, X21
	0x039BAE40 BL 0x39BCB28
	0x039BAE44 LDR X8, [X23]
	0x039BAE48 LDR X25, [X22 + 0x10]
	0x039BAE4C LDR W24, [X22 + 0x18]
	0x039BAE50 LDR W26, [X21 + 0x34]
	0x039BAE54 LDR W9, [X8 + 0xE0]
	0x039BAE58 MOV W23, W0
	0x039BAE5C CBNZ W9, 0x39BAE68
	0x039BAE60 MOV X0, X8
	0x039BAE64 BL 0x1C16DFC
	0x039BAE68 SUB W8, W26, 0x1
	0x039BAE6C SCVTF S1, W8
	0x039BAE70 FMOV S0, 3
	0x039BAE74 BL 0x3EB1B50
	0x039BAE78 MOVZ W8, 0x7F800000
	0x039BAE7C FMOV S1, W8
	0x039BAE80 FCVTZS W9, S0
	0x039BAE84 MOVZ W8, 0x80000000
	0x039BAE88 FCMP S0, S1
	0x039BAE8C CSEL W8, W8, W9, EQ
	0x039BAE90 UBFM X9, X25, 0x20, 0x3F
	0x039BAE94 MUL W10, W8, W25
	0x039BAE98 MUL W9, W8, W9
	0x039BAE9C MUL W8, W8, W24
	0x039BAEA0 BFM X10, X9, 0x20, 0x1F
	0x039BAEA4 STR W8, [X19 + 0x2C]
	0x039BAEA8 STUR X10, [X19 + 0x24]
	0x039BAEAC LDR W8, [X22 + 0x24]
	0x039BAEB0 STR W8, [X19 + 0x8]
	0x039BAEB4 LDR W8, [X31 + 0x18]
	0x039BAEB8 LDR X9, [X31 + 0x10]
	0x039BAEBC STR W8, [X19 + 0x14]
	0x039BAEC0 STUR X9, [X19 + 0xC]
	0x039BAEC4 LDR X9, [X31 + 0x10]
	0x039BAEC8 LDR X8, [X31]
	0x039BAECC LDR W10, [X31 + 0x8]
	0x039BAED0 LDR W11, [X31 + 0x18]
	0x039BAED4 AND X12, X9, 0x0
	0x039BAED8 ADD W9, W9, W8
	0x039BAEDC ADD X8, X12, X8
	0x039BAEE0 AND X8, X8, 0x0
	0x039BAEE4 ADD W10, W11, W10
	0x039BAEE8 ORR X8, X8, X9, 0x0
	0x039BAEEC STR X8, [X19 + 0x18]
	0x039BAEF0 STR W10, [X19 + 0x20]
	0x039BAEF4 LDR X0, [X21 + 0x40]
	0x039BAEF8 CBZ X0, 0x39BAF24
	0x039BAEFC AND W3, W20, 0x1
	0x039BAF00 MOV W1, W23
	0x039BAF04 MOV X2, X19
	0x039BAF08 LDP X20, X19, [X31 + 0x60]
	0x039BAF0C LDP X22, X21, [X31 + 0x50]
	0x039BAF10 LDP X24, X23, [X31 + 0x40]
	0x039BAF14 LDP X26, X25, [X31 + 0x30]
	0x039BAF18 LDR X30, [X31 + 0x20]
	0x039BAF1C ADD X31, X31, 0x70
	0x039BAF20 B 0x39B5248
	0x039BAF24 BL 0x1C16F20
	0x039BAF28 SUB X31, X31, 0xB0
	0x039BAF2C STP X30, X25, [X31 + 0x70]
	0x039BAF30 STP X24, X23, [X31 + 0x80]
	0x039BAF34 STP X22, X21, [X31 + 0x90]
	0x039BAF38 STP X20, X19, [X31 + 0xA0]
	0x039BAF3C ADRP X19, 0xA27000
	0x039BAF40 ADRP X24, 0x798000
	0x039BAF44 LDRB W8, [X19 + 0xCA4]
	0x039BAF48 LDR X24, [X24 + 0x438]
	0x039BAF4C MOV W23, W3
	0x039BAF50 MOV X22, X2
	0x039BAF54 MOV X21, X1
	0x039BAF58 MOV X20, X0
	0x039BAF5C TBNZ X8, 0x0, 0x39BAF98
	0x039BAF60 ADRP X0, 0x798000
	0x039BAF64 LDR X0, [X0 + 0x440]
	0x039BAF68 BL 0x1C16CF4
	0x039BAF6C ADRP X0, 0x798000
	0x039BAF70 LDR X0, [X0 + 0x3C8]
	0x039BAF74 BL 0x1C16CF4
	0x039BAF78 ADRP X0, 0x798000
	0x039BAF7C LDR X0, [X0 + 0xD0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xA28000
	007 Move W8, [X21+3207]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x73A000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x799000
	018 Move X0, [X0+864]
	019 Call 0x1C17CF4
	020 Move X0, 0x799000
	021 Move X0, [X0+872]
	022 Call 0x1C17CF4
	023 Move X0, 0x799000
	024 Move X0, [X0+880]
	025 Call 0x1C17CF4
	026 Move X0, 0x799000
	027 Move X0, [X0+888]
	028 Call 0x1C17CF4
	029 Move X0, 0x799000
	030 Move X0, [X0+608]
	031 Call 0x1C17CF4
	032 Move X0, 0x798000
	033 Move X0, [X0+3912]
	034 Call 0x1C17CF4
	035 Move X0, 0x799000
	036 Move X0, [X0+896]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3207], W8
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Move W8, [X20+16]
	044 Compare W8, 0
	045 JumpIfEqual {58}
	046 Move X8, 0x73A000
	047 Move X8, [X8+2600]
	048 Move X19, 0x799000
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Move X19, [X19+896]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, [X19]
	056 Move X1, X31
	057 Call Debug.LogError, X0
	058 Move V0, [X19]
	059 Move W9, 0x3F800000
	060 Move X0, X20
	061 Move X1, X19
	062 Move [X20+368], D0
	063 Move W8, [X19+56]
	064 Move [X20+380], W9
	065 Move [X20+376], W8
	066 Call ProbeReferenceVolume.InitializeDebug, X0, X1
	067 Move X8, 0x799000
	068 Move X8, [X8+608]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X19
	075 Call ProbeBrickBlendingPool.Initialize, X0
	076 Move W1, [X20+368]
	077 Move W2, [X20+372]
	078 Move W3, [X20+376]
	079 Move X0, X20
	080 Call ProbeReferenceVolume.InitProbeReferenceVolume, X0, X1, X2, X3
	081 Move W8, 1
	082 Move [X20+16], W8
	083 Move [X20+348], W8
	084 Move X9, [X19+48]
	085 Move [X20+240], X9
	086 Move W10, [X19+61]
	087 Move [X20+322], W8
	088 Move [X20+17], W10
	089 Compare X9, 0
	090 JumpIfEqual {144}
	091 Move X19, 0x798000
	092 Move X19, [X19+3912]
	093 Move X0, [X19]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X20, 0xA28000
	099 Move W8, [X20+3257]
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x798000
	103 Move X0, [X0+3912]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X20+3257], W8
	107 Move X0, [X19]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X19]
	113 Move X8, [X0+184]
	114 Move X8, [X8+8]
	115 Compare X8, 0
	116 JumpIfEqual {151}
	117 Move X0, [X8+392]
	118 Compare X0, 0
	119 JumpIfEqual {151}
	120 Move X8, 0x799000
	121 Move X8, [X8+888]
	122 Move X1, [X8]
	123 Add X8, X31, 8
	124 Call List`1<Object>.GetEnumerator, X0
	125 Move X19, 0x799000
	126 Move X19, [X19+872]
	127 Move X1, [X19]
	128 Add X0, X31, 8
	129 Call Enumerator<Object>.MoveNext, X0
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {139}
	134 Move X0, [X31+24]
	135 Compare X0, 0
	136 JumpIfEqual {150}
	137 Move X1, X31
	138 Call ProbeVolumePerSceneData.Initialize, X0
	139 Move X8, 0x799000
	140 Move X8, [X8+864]
	141 Add X0, X31, 8
	142 Move X1, [X8]
	143 Call Enumerator<Object>.Dispose, X0
	144 Move X20, [X31+48]
	145 Move X19, [X31+56]
	146 Move X30, [X31+32]
	147 Move X21, [X31+40]
	148 Add X31, X31, 64
	149 Return 
	150 Call 0x1C17F20
	151 Call 0x1C17F20
	152 Move X19, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, X19
	155 Call 0x3EB2AD0
	156 Move X20, [X0]
	157 Call 0x3EB2AE0
	158 Move X8, 0x799000
	159 Move X8, [X8+864]
	160 Add X0, X31, 8
	161 Move X1, [X8]
	162 Call Enumerator<Object>.Dispose, X0
	163 Compare X20, 0
	164 JumpIfEqual {144}
	165 Move X0, X20
	166 Call 0x1C17F18
	167 Move X20, X31
	168 Move X19, X0
	169 Move X8, 0x799000
	170 Move X8, [X8+864]
	171 Move X1, [X8]
	172 Add X0, X31, 8
	173 Call Enumerator<Object>.Dispose, X0
	174 Compare X20, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X19
	177 Call 0x1D2D690
	178 Move X0, X20
	179 Call 0x1C17F18
	180 Call 0x1991590

Method: System.Void SetEnableStateFromSRP(System.Boolean srpEnablesPV)

Disassembly:
	0x039BB324 ADRP X23, 0x797000
	0x039BB328 LDR X23, [X23 + 0x3A8]
	0x039BB32C LDR W8, [X0 + 0x18]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+322], W8
	003 Return 

Method: System.Void ForceSHBand(UnityEngine.Rendering.ProbeVolumeSHBands shBands)

Disassembly:
	0x039BB330 CMP W20, W8
	0x039BB334 B.GE 0x39BB36C
	0x039BB338 LDR X2, [X22]
	0x039BB33C LDR X21, [X19 + 0x240]
	0x039BB340 MOV W1, W20
	0x039BB344 BL 0x2B40178
	0x039BB348 CBZ X21, 0x39BB368
	0x039BB34C LDR X1, [X0]
	0x039BB350 LDR X2, [X23]
	0x039BB354 MOV X0, X21
	0x039BB358 BL 0x2B3FD78
	0x039BB35C LDR X0, [X19 + 0x238]
	0x039BB360 ADD W20, W20, 0x1
	0x039BB364 CBNZ X0, 0x39BB32C
	0x039BB368 BL 0x1C16F20
	0x039BB36C LDP X20, X19, [X31 + 0x30]
	0x039BB370 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+321]
	005 Move X20, X0
	006 Move W19, W1
	007 Compare W8, 0
	008 JumpIfEqual {11}
	009 Move X0, X20
	010 Call ProbeReferenceVolume.CleanupLoadedData, X0
	011 Move W1, [X20+368]
	012 Move W2, [X20+372]
	013 Move [X20+376], W19
	014 Move [X20+321], W31
	015 Move X0, X20
	016 Move W3, W19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Call ProbeReferenceVolume.InitProbeReferenceVolume, X0, X1, X2, X3
	021 Return 

Method: System.Void Cleanup()

Disassembly:
	0x039BB3DC MOVZ W8, 0x1
	0x039BB3E0 STRB W8, [X20 + 0xC90]
	0x039BB3E4 STP X31, X31, [X31 + 0x8]
	0x039BB3E8 STR X31, [X31 + 0x18]
	0x039BB3EC ADRP X8, 0xFFFFFFFFFD131000
	0x039BB3F0 LDR V0, [X8 + 0xEA]
	0x039BB3F4 LDR X0, [X19 + 0x80]
	0x039BB3F8 MOVI V1.2S, 0x80, 0x18
	0x039BB3FC STR D1, [X19 + 0x108]
	0x039BB400 STUR V0, [X19 + 0xF8]
	0x039BB404 CBZ X0, 0x39BB528
	0x039BB408 ADRP X8, 0x797000
	0x039BB40C LDR X8, [X8 + 0x448]
	0x039BB410 LDR X1, [X8]
	0x039BB414 BL 0x2A1352C
	0x039BB418 CBZ X0, 0x39BB528
	0x039BB41C ADRP X8, 0x797000
	0x039BB420 LDR X8, [X8 + 0x468]
	0x039BB424 ADRP X21, 0x797000
	0x039BB428 ADRP X20, 0x797000
	0x039BB42C LDR X1, [X8]
	0x039BB430 LDR X21, [X21 + 0x458]
	0x039BB434 LDR X20, [X20 + 0x450]
	0x039BB438 ADD X8, X31, 0x8
	0x039BB43C BL 0x274B2CC
	0x039BB440 ADD X22, X19, 0x104
	0x039BB444 LDR X1, [X21]
	0x039BB448 ADD X0, X31, 0x8
	0x039BB44C BL 0x2BF5F4C
	0x039BB450 TBZ X0, 0x0, 0x39BB4F0
	0x039BB454 LDR X8, [X31 + 0x18]
	0x039BB458 CBZ X8, 0x39BB510
	0x039BB45C LDRB W9, [X8 + 0x2C]
	0x039BB460 CBZ W9, 0x39BB444
	0x039BB464 LDR X9, [X8 + 0x10]
	0x039BB468 CBZ X9, 0x39BB520
	0x039BB46C LDR X10, [X9 + 0x10]
	0x039BB470 LDR X11, [X19 + 0xF8]
	0x039BB474 LDR W9, [X9 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA27000
	005 Move W8, [X20+3208]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x739000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x798000
	015 Move X0, [X0+912]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3208], W8
	019 Move W8, [X19+321]
	020 Compare W8, 0
	021 JumpIfEqual {30}
	022 Move W8, [X19+16]
	023 Compare W8, 0
	024 JumpIfEqual {34}
	025 Move X0, X19
	026 Call ProbeReferenceVolume.CleanupLoadedData, X0
	027 Move X0, X19
	028 Call ProbeReferenceVolume.CleanupDebug, X0
	029 Move [X19+16], W31
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return 
	034 Move X8, 0x739000
	035 Move X8, [X8+2600]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, 0x798000
	042 Move X8, [X8+912]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X0, [X8]
	047 Move X30, [X31+32]
	048 Call Debug.LogError, X0
	049 Return 

Method: System.Int32 GetVideoMemoryCost()

Disassembly:
	0x039BB4EC B 0x39BB444
	0x039BB4F0 LDR X1, [X20]
	0x039BB4F4 ADD X0, X31, 0x8
	0x039BB4F8 BL 0x2BF5F48
	0x039BB4FC LDP X20, X19, [X31 + 0x40]
	0x039BB500 LDP X22, X21, [X31 + 0x30]
	0x039BB504 LDR X30, [X31 + 0x20]
	0x039BB508 ADD X31, X31, 0x50
	0x039BB50C RET
	0x039BB510 MOV X21, X20
	0x039BB514 BL 0x1C16F20
	0x039BB518 MOV X21, X20
	0x039BB51C BL 0x1C16F20
	0x039BB520 MOV X21, X20
	0x039BB524 BL 0x1C16F20
	0x039BB528 BL 0x1C16F20
	0x039BB52C B 0x39BB53C
	0x039BB530 B 0x39BB53C
	0x039BB534 B 0x39BB53C
	0x039BB538 MOV X21, X20
	0x039BB53C MOV X19, X0
	0x039BB540 CMP W1, 0x1
	0x039BB544 B.NE 0x39BB570
	0x039BB548 MOV X0, X19
	0x039BB54C BL 0x3EB1AD0
	0x039BB550 LDR X20, [X0]
	0x039BB554 BL 0x3EB1AE0
	0x039BB558 LDR X1, [X21]
	0x039BB55C ADD X0, X31, 0x8
	0x039BB560 BL 0x2BF5F48
	0x039BB564 CBZ X20, 0x39BB4FC
	0x039BB568 MOV X0, X20
	0x039BB56C BL 0x1C16F18

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+321]
	003 Compare W8, 0
	004 JumpIfEqual {29}
	005 Move X8, [X0+56]
	006 Compare X8, 0
	007 JumpIfEqual {38}
	008 Move X9, [X0+64]
	009 Compare X9, 0
	010 JumpIfEqual {38}
	011 Move X10, [X0+72]
	012 Compare X10, 0
	013 JumpIfEqual {38}
	014 Move X11, [X0+80]
	015 Compare X11, 0
	016 JumpIfEqual {38}
	017 Move W8, [X8+16]
	018 Move W9, [X9+56]
	019 Move X12, [X11+32]
	020 Move W10, [X10+16]
	021 Compare X12, 0
	022 JumpIfEqual {30}
	023 Move X11, [X11+40]
	024 Compare X11, 0
	025 JumpIfEqual {38}
	026 Move W12, [X12+16]
	027 Move W11, [X11+16]
	028 Add W11, W11, W12
	029 Move W0, W31
	030 Move W11, W31
	031 Move W12, [X0+232]
	032 Add W8, W9, W8
	033 Add W8, W8, W10
	034 Add W8, W8, W11
	035 Add W0, W8, W12
	036 Move X30, [X31+16]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void RemoveCell(UnityEngine.Rendering.ProbeReferenceVolume/Cell cell)

Disassembly:
	0x039BB570 MOV X20, X31
	0x039BB574 B 0x39BB57C
	0x039BB578 MOV X19, X0
	0x039BB57C LDR X1, [X21]
	0x039BB580 ADD X0, X31, 0x8
	0x039BB584 BL 0x2BF5F48
	0x039BB588 CBNZ X20, 0x39BB594
	0x039BB58C MOV X0, X19
	0x039BB590 BL 0x1D2C690
	0x039BB594 MOV X0, X20
	0x039BB598 BL 0x1C16F18
	0x039BB59C BL 0x1990590
	0x039BB5A0 SUB X31, X31, 0x60
	0x039BB5A4 STR X30, [X31 + 0x20]
	0x039BB5A8 STP X24, X23, [X31 + 0x30]
	0x039BB5AC STP X22, X21, [X31 + 0x40]
	0x039BB5B0 STP X20, X19, [X31 + 0x50]
	0x039BB5B4 ADRP X22, 0xA26000
	0x039BB5B8 LDRB W8, [X22 + 0xC91]
	0x039BB5BC MOV X21, X2
	0x039BB5C0 MOV X19, X1
	0x039BB5C4 MOV X20, X0
	0x039BB5C8 TBNZ X8, 0x0, 0x39BB628
	0x039BB5CC ADRP X0, 0x797000
	0x039BB5D0 LDR X0, [X0 + 0x470]
	0x039BB5D4 BL 0x1C16CF4
	0x039BB5D8 ADRP X0, 0x797000
	0x039BB5DC LDR X0, [X0 + 0x478]
	0x039BB5E0 BL 0x1C16CF4
	0x039BB5E4 ADRP X0, 0x797000
	0x039BB5E8 LDR X0, [X0 + 0x480]
	0x039BB5EC BL 0x1C16CF4
	0x039BB5F0 ADRP X0, 0x797000
	0x039BB5F4 LDR X0, [X0 + 0x488]
	0x039BB5F8 BL 0x1C16CF4
	0x039BB5FC ADRP X0, 0x797000
	0x039BB600 LDR X0, [X0 + 0x490]
	0x039BB604 BL 0x1C16CF4
	0x039BB608 ADRP X0, 0x797000
	0x039BB60C LDR X0, [X0 + 0x498]
	0x039BB610 BL 0x1C16CF4
	0x039BB614 ADRP X0, 0x797000
	0x039BB618 LDR X0, [X0 + 0x4A0]
	0x039BB61C BL 0x1C16CF4
	0x039BB620 MOVZ W8, 0x1
	0x039BB624 STRB W8, [X22 + 0xC91]
	0x039BB628 STP X31, X31, [X31 + 0x8]
	0x039BB62C STR X31, [X31 + 0x18]
	0x039BB630 CBZ X21, 0x39BB72C
	0x039BB634 ADRP X8, 0x797000
	0x039BB638 LDR X8, [X8 + 0x478]
	0x039BB63C MOV X0, X21
	0x039BB640 LDR X1, [X8]
	0x039BB644 BL 0x2AA4E88
	0x039BB648 CMP W0, 0x1
	0x039BB64C B.LT 0x39BB6E0
	0x039BB650 ADRP X8, 0x797000
	0x039BB654 LDR X8, [X8 + 0x480]
	0x039BB658 MOV X0, X21
	0x039BB65C LDR X1, [X8]
	0x039BB660 BL 0x2AA4F58
	0x039BB664 CBZ X0, 0x39BB72C
	0x039BB668 ADRP X8, 0x797000
	0x039BB66C LDR X8, [X8 + 0x4A0]
	0x039BB670 ADRP X23, 0x797000
	0x039BB674 ADRP X24, 0x797000
	0x039BB678 ADRP X22, 0x797000
	0x039BB67C LDR X1, [X8]
	0x039BB680 LDR X23, [X23 + 0x490]
	0x039BB684 LDR X24, [X24 + 0x470]
	0x039BB688 LDR X22, [X22 + 0x488]
	0x039BB68C ADD X8, X31, 0x8
	0x039BB690 BL 0x275A7AC
	0x039BB694 LDR X1, [X23]
	0x039BB698 ADD X0, X31, 0x8
	0x039BB69C BL 0x2C0B1F0
	0x039BB6A0 TBZ X0, 0x0, 0x39BB6E8
	0x039BB6A4 LDR X21, [X31 + 0x18]
	0x039BB6A8 CBZ X21, 0x39BB724
	0x039BB6AC LDR X0, [X20 + 0x130]
	0x039BB6B0 CBZ X0, 0x39BB728
	0x039BB6B4 LDR X1, [X21 + 0x78]
	0x039BB6B8 LDR X2, [X24]
	0x039BB6BC BL 0x2AA528C
	0x039BB6C0 TBNZ X0, 0x0, 0x39BB694
	0x039BB6C4 MOV X0, X21
	0x039BB6C8 MOV X1, X19
	0x039BB6CC MOV X2, X31
	0x039BB6D0 BL 0x39C668C
	0x039BB6D4 MOV W19, W0
	0x039BB6D8 MOVZ W20, 0x5

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA27000
	007 Move W8, [X21+3209]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x798000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move X0, 0x798000
	018 Move X0, [X0+928]
	019 Call 0x1C17CF4
	020 Move X0, 0x798000
	021 Move X0, [X0+936]
	022 Call 0x1C17CF4
	023 Move X0, 0x798000
	024 Move X0, [X0+944]
	025 Call 0x1C17CF4
	026 Move X0, 0x798000
	027 Move X0, [X0+952]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3209], W8
	031 Move [X31+8], X31
	032 Compare X20, 0
	033 JumpIfEqual {110}
	034 Move X0, [X19+128]
	035 Compare X0, 0
	036 JumpIfEqual {110}
	037 Move X8, 0x798000
	038 Move X8, [X8+928]
	039 Move W1, [X20+28]
	040 Add X2, X31, 8
	041 Move X3, [X8]
	042 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {104}
	047 Move X8, [X31+8]
	048 Compare X8, 0
	049 JumpIfEqual {110}
	050 Move W9, [X8+156]
	051 Subtract W9, W9, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X8+156], W9
	054 Move X0, [X19+128]
	055 Compare X0, 0
	056 JumpIfEqual {110}
	057 Move X8, 0x798000
	058 Move W1, [X20+28]
	059 Move X8, [X8+920]
	060 Move X2, [X8]
	061 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	062 Move X1, [X31+8]
	063 Compare X1, 0
	064 JumpIfEqual {110}
	065 Move W8, [X1+44]
	066 Compare W8, 0
	067 JumpIfEqual {78}
	068 Move X0, [X19+568]
	069 Compare X0, 0
	070 JumpIfEqual {110}
	071 Move X8, 0x798000
	072 Move X8, [X8+936]
	073 Move X2, [X8]
	074 Call 0x2B40D78, X0, X1
	075 Move X1, [X31+8]
	076 Move X0, X19
	077 Call ProbeReferenceVolume.UnloadCell, X0, X1
	078 Move X0, [X19+576]
	079 Compare X0, 0
	080 JumpIfEqual {110}
	081 Move X8, 0x798000
	082 Move X8, [X8+936]
	083 Move X2, [X8]
	084 Call 0x2B40D78, X0, X1
	085 Move X8, [X31+8]
	086 Compare X8, 0
	087 JumpIfEqual {110}
	088 Move X0, [X19+144]
	089 Compare X0, 0
	090 JumpIfEqual {110}
	091 Move X1, [X8+24]
	092 Move X8, 0x798000
	093 Move X8, [X8+952]
	094 Move X2, [X8]
	095 Call 0x2494D8C, X0, X1
	096 Move X0, [X19+136]
	097 Compare X0, 0
	098 JumpIfEqual {110}
	099 Move X8, 0x798000
	100 Move X1, [X31+8]
	101 Move X8, [X8+944]
	102 Move X2, [X8]
	103 Call 0x2494D8C, X0, X1
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X30, [X31+16]
	107 Move X21, [X31+24]
	108 Add X31, X31, 48
	109 Return 
	110 Call 0x1C17F20

Method: System.Void UnloadCell(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo)

Disassembly:
	0x039BB6DC B 0x39BB6F0
	0x039BB6E0 MOVZ W8, 0x1
	0x039BB6E4 B 0x39BB708
	0x039BB6E8 MOV W19, W31
	0x039BB6EC MOVZ W20, 0x2
	0x039BB6F0 LDR X1, [X22]
	0x039BB6F4 ADD X0, X31, 0x8
	0x039BB6F8 BL 0x2C0B1EC
	0x039BB6FC CMP W20, 0x5
	0x039BB700 CSET W8, NE
	0x039BB704 ORR W8, W19, W8, 0x0
	0x039BB708 LDP X20, X19, [X31 + 0x50]
	0x039BB70C LDP X22, X21, [X31 + 0x40]
	0x039BB710 LDP X24, X23, [X31 + 0x30]
	0x039BB714 LDR X30, [X31 + 0x20]
	0x039BB718 AND W0, W8, 0x1
	0x039BB71C ADD X31, X31, 0x60
	0x039BB720 RET
	0x039BB724 BL 0x1C16F20
	0x039BB728 BL 0x1C16F20
	0x039BB72C BL 0x1C16F20
	0x039BB730 B 0x39BB740
	0x039BB734 B 0x39BB740
	0x039BB738 B 0x39BB740
	0x039BB73C B 0x39BB740
	0x039BB740 MOV X19, X0
	0x039BB744 CMP W1, 0x1
	0x039BB748 B.NE 0x39BB774
	0x039BB74C MOV X0, X19
	0x039BB750 BL 0x3EB1AD0
	0x039BB754 LDR X20, [X0]
	0x039BB758 BL 0x3EB1AE0
	0x039BB75C LDR X1, [X22]
	0x039BB760 ADD X0, X31, 0x8
	0x039BB764 BL 0x2C0B1EC
	0x039BB768 CBNZ X20, 0x39BB77C
	0x039BB76C MOV W19, W31
	0x039BB770 B 0x39BB6FC
	0x039BB774 MOV X20, X31
	0x039BB778 B 0x39BB788
	0x039BB77C MOV X0, X20
	0x039BB780 BL 0x1C16F18
	0x039BB784 MOV X19, X0
	0x039BB788 LDR X1, [X22]
	0x039BB78C ADD X0, X31, 0x8
	0x039BB790 BL 0x2C0B1EC
	0x039BB794 CBNZ X20, 0x39BB7A0
	0x039BB798 MOV X0, X19
	0x039BB79C BL 0x1D2C690
	0x039BB7A0 MOV X0, X20
	0x039BB7A4 BL 0x1C16F18
	0x039BB7A8 BL 0x1990590
	0x039BB7AC SUB X31, X31, 0xB0
	0x039BB7B0 STP D9, D8, [X31 + 0x40]
	0x039BB7B4 STP X29, X30, [X31 + 0x50]
	0x039BB7B8 STP X28, X27, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA27000
	006 Move W8, [X21+3210]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x798000
	014 Move X0, [X0+960]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3210], W8
	018 Compare X19, 0
	019 JumpIfEqual {76}
	020 Move W8, [X19+44]
	021 Compare W8, 0
	022 JumpIfEqual {39}
	023 Move X1, [X19+24]
	024 Compare X1, 0
	025 JumpIfEqual {76}
	026 Move W8, [X1+40]
	027 Compare W8, 0
	028 JumpIfEqual {44}
	029 Move X0, [X20+600]
	030 Compare X0, 0
	031 JumpIfEqual {76}
	032 Move X8, 0x798000
	033 Move X8, [X8+960]
	034 Move X2, [X8]
	035 Call 0x2B40D78, X0, X1
	036 Move X1, [X19+24]
	037 Move X0, X20
	038 Call ProbeReferenceVolume.UnloadBlendingCell, X0, X1
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Move X0, [X20+608]
	045 Compare X0, 0
	046 JumpIfEqual {76}
	047 Move X8, 0x798000
	048 Move X8, [X8+960]
	049 Move X2, [X8]
	050 Call 0x2B40D78, X0, X1
	051 Move W1, [X19+40]
	052 Move TEMP, X1
	053 And TEMP, TEMP, -2147483648
	054 Compare TEMP, -2147483648
	055 JumpIfEqual {60}
	056 Move X0, [X20+72]
	057 Compare X0, 0
	058 JumpIfEqual {76}
	059 Call ProbeCellIndices.MarkCellAsUnloaded, X0, X1
	060 Move X0, X20
	061 Move X1, X19
	062 Call ProbeReferenceVolume.ReleaseBricks, X0, X1
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move [X19+44], W31
	065 Move [X19+160], X31
	066 Move [X19+48], V0
	067 Move [X19+56], V0
	068 Move [X19+5], V0
	069 Move X0, X20
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call ProbeReferenceVolume.ClearDebugData, X0
	075 Return 
	076 Call 0x1C17F20

Method: System.Void UnloadBlendingCell(UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo blendingCell)

Disassembly:
	0x039BB7BC STP X26, X25, [X31 + 0x70]
	0x039BB7C0 STP X24, X23, [X31 + 0x80]
	0x039BB7C4 STP X22, X21, [X31 + 0x90]
	0x039BB7C8 STP X20, X19, [X31 + 0xA0]
	0x039BB7CC ADRP X21, 0xA26000
	0x039BB7D0 LDRB W8, [X21 + 0xC92]
	0x039BB7D4 MOV X20, X1
	0x039BB7D8 MOV X19, X0
	0x039BB7DC TBNZ X8, 0x0, 0x39BB86C
	0x039BB7E0 ADRP X0, 0x738000
	0x039BB7E4 LDR X0, [X0 + 0xA28]
	0x039BB7E8 BL 0x1C16CF4
	0x039BB7EC ADRP X0, 0x797000
	0x039BB7F0 LDR X0, [X0 + 0x4A8]
	0x039BB7F4 BL 0x1C16CF4
	0x039BB7F8 ADRP X0, 0x797000
	0x039BB7FC LDR X0, [X0 + 0x470]
	0x039BB800 BL 0x1C16CF4
	0x039BB804 ADRP X0, 0x797000
	0x039BB808 LDR X0, [X0 + 0x4B0]
	0x039BB80C BL 0x1C16CF4
	0x039BB810 ADRP X0, 0x797000
	0x039BB814 LDR X0, [X0 + 0x480]
	0x039BB818 BL 0x1C16CF4
	0x039BB81C ADRP X0, 0x797000
	0x039BB820 LDR X0, [X0 + 0x488]
	0x039BB824 BL 0x1C16CF4
	0x039BB828 ADRP X0, 0x797000
	0x039BB82C LDR X0, [X0 + 0x490]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA27000
	006 Move W8, [X21+3211]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x798000
	014 Move X0, [X0+968]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3211], W8
	018 Compare X19, 0
	019 JumpIfEqual {41}
	020 Move W8, [X19+40]
	021 Compare W8, 0
	022 JumpIfEqual {36}
	023 Move X0, [X20+80]
	024 Compare X0, 0
	025 JumpIfEqual {41}
	026 Move X1, [X19+24]
	027 Call ProbeBrickBlendingPool.Deallocate, X0, X1
	028 Move X8, [X19+24]
	029 Compare X8, 0
	030 JumpIfEqual {41}
	031 Move W9, [X8+28]
	032 Add W9, W9, 1
	033 Move [X8+24], W31
	034 Move [X8+28], W9
	035 Move [X19+40], W31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.Void UnloadAllCells()

Disassembly:
	0x039BB960 LDR X29, [X29 + 0x480]
	0x039BB964 LDUR X22, [X8 + 0xC]
	0x039BB968 LDR X1, [X29]
	0x039BB96C LDR W20, [X8 + 0x14]
	0x039BB970 BL 0x2AA4F58
	0x039BB974 CBZ X0, 0x39BBE34
	0x039BB978 ADRP X21, 0x797000
	0x039BB97C LDR X21, [X21 + 0x4A0]
	0x039BB980 UBFM X8, X22, 0x20, 0x3F
	0x039BB984 MOVZ W9, 0x2710
	0x039BB988 MOVZ X10, 0x2710
	0x039BB98C MUL W12, W22, W9
	0x039BB990 MUL W23, W20, W9
	0x039BB994 MUL X9, X8, X10
	0x039BB998 LDR X1, [X21]
	0x039BB99C ORR X25, X9, X12, 0x0
	0x039BB9A0 MOVZ X9, 0xD8F0
	0x039BB9A4 MOVN W11, 0x270F
	0x039BB9A8 MOVK X9, 0xFFFF0000
	0x039BB9AC MUL W10, W22, W11
	0x039BB9B0 MUL X8, X8, X9
	0x039BB9B4 ORR X24, X8, X10, 0x0
	0x039BB9B8 ADD X8, X31, 0x8
	0x039BB9BC MUL W22, W20, W11
	0x039BB9C0 BL 0x275A7AC
	0x039BB9C4 LDUR V0, [X31 + 0x8]
	0x039BB9C8 LDR X8, [X31 + 0x18]
	0x039BB9CC ADRP X27, 0x797000
	0x039BB9D0 LDR X27, [X27 + 0x490]
	0x039BB9D4 ADD X26, X19, 0x68
	0x039BB9D8 MOVZ W28, 0x1
	0x039BB9DC MOVI V8.2S, 0x3F, 0x18
	0x039BB9E0 STR V0, [X31 + 0x2]
	0x039BB9E4 STR X8, [X31 + 0x30]
	0x039BB9E8 FMOV S9, 0.5
	0x039BB9EC LDR X1, [X27]
	0x039BB9F0 ADD X0, X31, 0x20
	0x039BB9F4 BL 0x2C0B1F0
	0x039BB9F8 TBZ X0, 0x0, 0x39BBBA4
	0x039BB9FC LDR X8, [X31 + 0x30]
	0x039BBA00 CBZ X8, 0x39BBE2C
	0x039BBA04 LDUR X9, [X8 + 0x4C]
	0x039BBA08 LDR W10, [X8 + 0x54]
	0x039BBA0C UBFM X11, X25, 0x20, 0x3F
	0x039BBA10 LDR X12, [X8 + 0x40]
	0x039BBA14 CMP W25, W9
	0x039BBA18 CSEL X25, X25, X9, LT
	0x039BBA1C UBFM X9, X9, 0x20, 0x3F
	0x039BBA20 CMP W11, W9
	0x039BBA24 CSEL X9, X11, X9, LT
	0x039BBA28 LDR W11, [X8 + 0x48]
	0x039BBA2C CMP W23, W10
	0x039BBA30 CSEL W23, W23, W10, LT
	0x039BBA34 UBFM X10, X24, 0x20, 0x3F
	0x039BBA38 BFM X25, X9, 0x20, 0x1F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA27000
	008 Move W8, [X20+3212]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x798000
	015 Move X0, [X0+992]
	016 Call 0x1C17CF4
	017 Move X0, 0x798000
	018 Move X0, [X0+1000]
	019 Call 0x1C17CF4
	020 Move X0, 0x798000
	021 Move X0, [X0+1008]
	022 Call 0x1C17CF4
	023 Move X0, 0x798000
	024 Move X0, [X0+832]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3212], W8
	028 Move X1, [X19+568]
	029 Compare X1, 0
	030 JumpIfEqual {51}
	031 Move X23, 0x798000
	032 Move X22, 0x798000
	033 Move X21, 0x798000
	034 Move X23, [X23+1008]
	035 Move X22, [X22+992]
	036 Move X21, [X21+1000]
	037 Move W20, W31
	038 Move W8, [X1+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X23]
	041 Move X0, X1
	042 Move W1, W20
	043 Call 0x2B41178, X0, X1
	044 Move X1, [X0]
	045 Move X0, X19
	046 Call ProbeReferenceVolume.UnloadCell, X0, X1
	047 Move X1, [X19+568]
	048 Add W20, W20, 1
	049 Compare X1, 0
	050 JumpIfNotEqual {38}
	051 Call 0x1C17F20
	052 Move X0, [X19+576]
	053 Compare X0, 0
	054 JumpIfEqual {51}
	055 Move X2, [X22]
	056 Call 0x2B40CD0, X0, X1
	057 Move X0, [X19+568]
	058 Compare X0, 0
	059 JumpIfEqual {51}
	060 Move X1, [X21]
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Call 0x2B40BDC, X0
	068 Return 

Method: System.Void UnloadAllBlendingCells()

Disassembly:
	0x039BBA3C UBFM X9, X12, 0x20, 0x3F
	0x039BBA40 CMP W24, W12
	0x039BBA44 CSEL X24, X24, X12, GT
	0x039BBA48 CMP W10, W9
	0x039BBA4C CSEL X9, X10, X9, GT
	0x039BBA50 CMP W22, W11
	0x039BBA54 CSEL W22, W22, W11, GT
	0x039BBA58 BFM X24, X9, 0x20, 0x1F
	0x039BBA5C TBZ X28, 0x0, 0x39BBA78
	0x039BBA60 LDR X9, [X8 + 0x68]
	0x039BBA64 LDUR V0, [X8 + 0x58]
	0x039BBA68 MOV W28, W31
	0x039BBA6C STR X9, [X26 + 0x10]
	0x039BBA70 STR V0, [X26]
	0x039BBA74 B 0x39BB9EC
	0x039BBA78 LDR V1, [X8 + 0x60]
	0x039BBA7C LDR V3, [X8 + 0x6C]
	0x039BBA80 LDR V5, [X19 + 0x70]
	0x039BBA84 LDR V7, [X19 + 0x7C]
	0x039BBA88 LDR V0, [X8 + 0x58]
	0x039BBA8C LDUR V2, [X8 + 0x64]
	0x039BBA90 LDR V4, [X19 + 0x68]
	0x039BBA94 LDUR V6, [X19 + 0x74]
	0x039BBA98 FSUB S17, S1, S3
	0x039BBA9C FSUB S19, S5, S7
	0x039BBAA0 FSUB V16.2S, V0.2S, V2.2S
	0x039BBAA4 FSUB V18.2S, V4.2S, V6.2S
	0x039BBAA8 FADD V4.2S, V4.2S, V6.2S
	0x039BBAAC FADD S5, S5, S7
	0x039BBAB0 FCMP S19, S17
	0x039BBAB4 FADD V0.2S, V0.2S, V2.2S
	0x039BBAB8 FADD S1, S1, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x039BBAC4 FCSEL S6, S19, S17, MI
	0x039BBAC8 FCMP S5, S17
	0x00000000 INVALID
	0x00000000 INVALID
	0x039BBAD4 FCSEL S4, S5, S17, GT
	0x039BBAD8 FSUB V3.2S, V3.2S, V2.2S
	0x039BBADC FSUB S4, S4, S6
	0x00000000 INVALID
	0x039BBAE4 FMUL S4, S4, S9
	0x039BBAE8 FADD V2.2S, V2.2S, V3.2S
	0x039BBAEC FADD S5, S6, S4
	0x039BBAF0 FSUB V6.2S, V2.2S, V3.2S
	0x039BBAF4 FADD V2.2S, V3.2S, V2.2S
	0x039BBAF8 FSUB S3, S5, S4
	0x00000000 INVALID
	0x039BBB00 FADD S4, S4, S5
	0x00000000 INVALID
	0x039BBB08 FCMP S3, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x039BBB14 FCSEL S2, S3, S1, MI

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA27000
	008 Move W8, [X20+3213]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x798000
	015 Move X0, [X0+1016]
	016 Call 0x1C17CF4
	017 Move X0, 0x798000
	018 Move X0, [X0+1024]
	019 Call 0x1C17CF4
	020 Move X0, 0x798000
	021 Move X0, [X0+1032]
	022 Call 0x1C17CF4
	023 Move X0, 0x798000
	024 Move X0, [X0+1040]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3213], W8
	028 Move X1, [X19+600]
	029 Compare X1, 0
	030 JumpIfEqual {51}
	031 Move X23, 0x798000
	032 Move X22, 0x798000
	033 Move X21, 0x798000
	034 Move X23, [X23+1032]
	035 Move X22, [X22+1016]
	036 Move X21, [X21+1024]
	037 Move W20, W31
	038 Move W8, [X1+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X23]
	041 Move X0, X1
	042 Move W1, W20
	043 Call 0x2B41178, X0, X1
	044 Move X1, [X0]
	045 Move X0, X19
	046 Call ProbeReferenceVolume.UnloadBlendingCell, X0, X1
	047 Move X1, [X19+600]
	048 Add W20, W20, 1
	049 Compare X1, 0
	050 JumpIfNotEqual {38}
	051 Call 0x1C17F20
	052 Move X0, [X19+608]
	053 Compare X0, 0
	054 JumpIfEqual {51}
	055 Move X2, [X22]
	056 Call 0x2B40CD0, X0, X1
	057 Move X0, [X19+600]
	058 Compare X0, 0
	059 JumpIfEqual {51}
	060 Move X1, [X21]
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Call 0x2B40BDC, X0
	068 Return 

Method: System.Void AddCell(UnityEngine.Rendering.ProbeReferenceVolume/Cell cell, System.Int32 assetInstanceID)

Disassembly:
	0x039BBB18 FCMP S4, S1
	0x039BBB1C FCSEL S1, S4, S1, GT
	0x039BBB20 FSUB V0.2S, V0.2S, V6.2S
	0x039BBB24 FSUB S1, S1, S2
	0x00000000 INVALID
	0x039BBB2C FMUL S1, S1, S9
	0x039BBB30 MOV W28, W31
	0x039BBB34 STUR D0, [X19 + 0x74]
	0x039BBB38 FADD V0.2S, V6.2S, V0.2S
	0x039BBB3C STR S1, [X19 + 0x7C]
	0x039BBB40 FADD S1, S2, S1
	0x039BBB44 STR D0, [X19 + 0x68]
	0x039BBB48 STR S1, [X19 + 0x70]
	0x039BBB4C B 0x39BB9EC
	0x039BBB50 ADRP X8, 0x738000
	0x039BBB54 LDR X8, [X8 + 0xA28]
	0x039BBB58 LDR X0, [X8]
	0x039BBB5C LDR W8, [X0 + 0xE0]
	0x039BBB60 CBNZ W8, 0x39BBB68
	0x039BBB64 BL 0x1C16DFC
	0x039BBB68 ADRP X8, 0x797000
	0x039BBB6C LDR X8, [X8 + 0x4B8]
	0x039BBB70 B 0x39BBB94
	0x039BBB74 ADRP X8, 0x738000
	0x039BBB78 LDR X8, [X8 + 0xA28]
	0x039BBB7C LDR X0, [X8]
	0x039BBB80 LDR W8, [X0 + 0xE0]
	0x039BBB84 CBNZ W8, 0x39BBB8C
	0x039BBB88 BL 0x1C16DFC
	0x039BBB8C ADRP X8, 0x797000
	0x039BBB90 LDR X8, [X8 + 0x4C0]
	0x039BBB94 LDR X0, [X8]
	0x039BBB98 MOV X1, X31
	0x039BBB9C BL 0x3C0649C
	0x039BBBA0 B 0x39BBE08
	0x039BBBA4 ADRP X8, 0x797000
	0x039BBBA8 LDR X8, [X8 + 0x488]
	0x039BBBAC ADD X0, X31, 0x20
	0x039BBBB0 LDR X1, [X8]
	0x039BBBB4 BL 0x2C0B1EC
	0x039BBBB8 LDR X0, [X19 + 0x138]
	0x039BBBBC CBZ X0, 0x39BBE34
	0x039BBBC0 LDR X1, [X29]
	0x039BBBC4 BL 0x2AA4F58
	0x039BBBC8 CBZ X0, 0x39BBE34
	0x039BBBCC LDR X1, [X21]
	0x039BBBD0 ADD X8, X31, 0x8
	0x039BBBD4 BL 0x275A7AC
	0x039BBBD8 LDUR V0, [X31 + 0x8]
	0x039BBBDC LDR X8, [X31 + 0x18]
	0x039BBBE0 MOVI V8.2S, 0x3F, 0x18
	0x039BBBE4 FMOV S9, 0.5
	0x039BBBE8 STR V0, [X31 + 0x2]
	0x039BBBEC STR X8, [X31 + 0x30]
	0x039BBBF0 LDR X1, [X27]
	0x039BBBF4 ADD X0, X31, 0x20
	0x039BBBF8 BL 0x2C0B1F0
	0x039BBBFC TBZ X0, 0x0, 0x39BBD54
	0x039BBC00 LDR X8, [X31 + 0x30]
	0x039BBC04 CBZ X8, 0x39BBE30
	0x039BBC08 LDUR X9, [X8 + 0x4C]
	0x039BBC0C LDR W10, [X8 + 0x54]
	0x039BBC10 UBFM X11, X25, 0x20, 0x3F
	0x039BBC14 LDR X12, [X8 + 0x40]
	0x039BBC18 CMP W25, W9
	0x039BBC1C CSEL X25, X25, X9, LT
	0x039BBC20 UBFM X9, X9, 0x20, 0x3F
	0x039BBC24 CMP W11, W9
	0x039BBC28 CSEL X9, X11, X9, LT
	0x039BBC2C LDR W11, [X8 + 0x48]
	0x039BBC30 CMP W23, W10
	0x039BBC34 CSEL W23, W23, W10, LT
	0x039BBC38 UBFM X10, X24, 0x20, 0x3F
	0x039BBC3C BFM X25, X9, 0x20, 0x1F
	0x039BBC40 UBFM X9, X12, 0x20, 0x3F
	0x039BBC44 CMP W24, W12
	0x039BBC48 CSEL X24, X24, X12, GT
	0x039BBC4C CMP W10, W9
	0x039BBC50 CSEL X9, X10, X9, GT
	0x039BBC54 CMP W22, W11
	0x039BBC58 CSEL W22, W22, W11, GT
	0x039BBC5C BFM X24, X9, 0x20, 0x1F
	0x039BBC60 TBZ X28, 0x0, 0x39BBC7C
	0x039BBC64 LDR X9, [X8 + 0x68]
	0x039BBC68 LDUR V0, [X8 + 0x58]
	0x039BBC6C MOV W28, W31
	0x039BBC70 STR X9, [X26 + 0x10]
	0x039BBC74 STR V0, [X26]
	0x039BBC78 B 0x39BBBF0
	0x039BBC7C LDR V1, [X8 + 0x60]
	0x039BBC80 LDR V3, [X8 + 0x6C]
	0x039BBC84 LDR V5, [X19 + 0x70]
	0x039BBC88 LDR V7, [X19 + 0x7C]
	0x039BBC8C LDR V0, [X8 + 0x58]
	0x039BBC90 LDUR V2, [X8 + 0x64]
	0x039BBC94 LDR V4, [X19 + 0x68]
	0x039BBC98 LDUR V6, [X19 + 0x74]
	0x039BBC9C FSUB S17, S1, S3
	0x039BBCA0 FSUB S19, S5, S7
	0x039BBCA4 FSUB V16.2S, V0.2S, V2.2S
	0x039BBCA8 FSUB V18.2S, V4.2S, V6.2S

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA27000
	007 Move W8, [X22+3214]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x798000
	016 Move X0, [X0+928]
	017 Call 0x1C17CF4
	018 Move X0, 0x798000
	019 Move X0, [X0+1048]
	020 Call 0x1C17CF4
	021 Move X0, 0x798000
	022 Move X0, [X0+1056]
	023 Call 0x1C17CF4
	024 Move X0, 0x798000
	025 Move X0, [X0+1064]
	026 Call 0x1C17CF4
	027 Move X0, 0x798000
	028 Move X0, [X0+1072]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3214], W8
	032 Move [X31+8], X31
	033 Compare X20, 0
	034 JumpIfEqual {124}
	035 Move X0, [X19+128]
	036 Compare X0, 0
	037 JumpIfEqual {124}
	038 Move X8, 0x798000
	039 Move X8, [X8+928]
	040 Move W1, [X20+28]
	041 Add X2, X31, 8
	042 Move X3, [X8]
	043 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {54}
	048 Move X8, [X31+8]
	049 Compare X8, 0
	050 JumpIfEqual {124}
	051 Move W9, [X8+156]
	052 Add W9, W9, 1
	053 Move [X8+156], W9
	054 Move X0, [X19+136]
	055 Compare X0, 0
	056 JumpIfEqual {124}
	057 Move X8, 0x798000
	058 Move X8, [X8+1064]
	059 Move X1, [X8]
	060 Call 0x2494CB0, X0
	061 Move [X31+8], X0
	062 Compare X0, 0
	063 JumpIfEqual {124}
	064 Move [X0+16], X20
	065 Move X8, [X19+72]
	066 Move X2, X0
	067 Compare X8, 0
	068 JumpIfEqual {124}
	069 Move W10, [X20+24]
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 Move W12, [X8+60]
	072 Move X9, [X20+16]
	073 Move W13, [X8+40]
	074 Move W8, [X8+44]
	075 Move W14, 1
	076 Subtract W10, W10, W12
	077 And X12, X11, 0
	078 Subtract W11, W9, W11
	079 Subtract X9, X9, X12
	080 Move X9, X9
	081 ShiftRight X9, 32
	082 And X9, X9, 0x7FFFFFFF
	083 NotImplemented "Instruction MADD not yet implemented."
	084 NotImplemented "Instruction MADD not yet implemented."
	085 Move [X2+148], W21
	086 Move [X2+40], W8
	087 Move [X2+156], W14
	088 Move X0, [X19+128]
	089 Compare X0, 0
	090 JumpIfEqual {124}
	091 Move X8, 0x798000
	092 Move W1, [X20+28]
	093 Move X8, [X8+1048]
	094 Move X3, [X8]
	095 Call Dictionary`2<Int32, Object>.set_Item, X0, X1, X2
	096 Move X0, [X19+144]
	097 Compare X0, 0
	098 JumpIfEqual {124}
	099 Move X8, 0x798000
	100 Move X8, [X8+1072]
	101 Move X1, [X8]
	102 Call 0x2494CB0, X0
	103 Compare X0, 0
	104 JumpIfEqual {124}
	105 Move X8, [X31+8]
	106 Move [X0+16], X8
	107 Compare X8, 0
	108 JumpIfEqual {124}
	109 Move [X8+24], X0
	110 Move X0, [X19+576]
	111 Compare X0, 0
	112 JumpIfEqual {124}
	113 Move X8, 0x798000
	114 Move X8, [X8+1056]
	115 Add X1, X31, 8
	116 Move X2, [X8]
	117 Call 0x2B40C18, X0, X1
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Return 
	124 Call 0x1C17F20

Method: System.Boolean LoadCell(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo, System.Boolean ignoreErrorLog = False)

Disassembly:
	0x039BBCAC FADD V4.2S, V4.2S, V6.2S
	0x039BBCB0 FADD S5, S5, S7
	0x039BBCB4 FCMP S19, S17
	0x039BBCB8 FADD V0.2S, V0.2S, V2.2S
	0x039BBCBC FADD S1, S1, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x039BBCC8 FCSEL S6, S19, S17, MI
	0x039BBCCC FCMP S5, S17
	0x00000000 INVALID
	0x00000000 INVALID
	0x039BBCD8 FCSEL S4, S5, S17, GT
	0x039BBCDC FSUB V3.2S, V3.2S, V2.2S
	0x039BBCE0 FSUB S4, S4, S6
	0x00000000 INVALID
	0x039BBCE8 FMUL S4, S4, S9
	0x039BBCEC FADD V2.2S, V2.2S, V3.2S
	0x039BBCF0 FADD S5, S6, S4
	0x039BBCF4 FSUB V6.2S, V2.2S, V3.2S
	0x039BBCF8 FADD V2.2S, V3.2S, V2.2S
	0x039BBCFC FSUB S3, S5, S4
	0x00000000 INVALID
	0x039BBD04 FADD S4, S4, S5
	0x00000000 INVALID
	0x039BBD0C FCMP S3, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x039BBD18 FCSEL S2, S3, S1, MI
	0x039BBD1C FCMP S4, S1
	0x039BBD20 FCSEL S1, S4, S1, GT
	0x039BBD24 FSUB V0.2S, V0.2S, V6.2S
	0x039BBD28 FSUB S1, S1, S2
	0x00000000 INVALID
	0x039BBD30 FMUL S1, S1, S9
	0x039BBD34 MOV W28, W31
	0x039BBD38 STUR D0, [X19 + 0x74]
	0x039BBD3C FADD V0.2S, V6.2S, V0.2S
	0x039BBD40 STR S1, [X19 + 0x7C]
	0x039BBD44 FADD S1, S2, S1
	0x039BBD48 STR D0, [X19 + 0x68]
	0x039BBD4C STR S1, [X19 + 0x70]
	0x039BBD50 B 0x39BBBF0
	0x039BBD54 ADRP X8, 0x797000
	0x039BBD58 LDR X8, [X8 + 0x488]
	0x039BBD5C ADD X0, X31, 0x20
	0x039BBD60 LDR X1, [X8]
	0x039BBD64 BL 0x2C0B1EC
	0x039BBD68 LDR X10, [X19 + 0x40]
	0x039BBD6C LDRB W8, [X19 + 0x15C]
	0x039BBD70 CMP X10, 0x0
	0x039BBD74 CSET W9, NE
	0x039BBD78 CMP W8, 0x0
	0x039BBD7C CSET W8, NE
	0x039BBD80 CBZ X10, 0x39BBDE8
	0x039BBD84 ADD X10, X19, 0x144
	0x039BBD88 LDR X10, [X10]
	0x039BBD8C AND W8, W8, W9, 0x0
	0x039BBD90 CMP W10, W25
	0x039BBD94 B.NE 0x39BBDE8
	0x039BBD98 UBFM X9, X25, 0x20, 0x3F
	0x039BBD9C UBFM X10, X10, 0x20, 0x3F
	0x039BBDA0 CMP W10, W9
	0x039BBDA4 MOVZ W9, 0x1
	0x039BBDA8 B.NE 0x39BBDEC
	0x039BBDAC LDR W10, [X19 + 0x14C]
	0x039BBDB0 CMP W10, W23
	0x039BBDB4 B.NE 0x39BBDEC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+64], V0
	008 Move [X31+72], V0
	009 Move [X31+3], V0
	010 Compare X1, 0
	011 JumpIfEqual {87}
	012 Move X19, X1
	013 Move X1, [X1+16]
	014 Move W21, W2
	015 And W3, W2, 1
	016 Add X2, X31, 48
	017 Move X20, X0
	018 Call ProbeReferenceVolume.GetCellIndexUpdate, X0, X1, X2, X3
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {79}
	023 Move X8, [X19+16]
	024 Compare X8, 0
	025 JumpIfEqual {87}
	026 Move X9, [X20+248]
	027 Move X10, [X8+16]
	028 Move W11, [X20+256]
	029 Move W8, [X8+24]
	030 Move X12, X9
	031 ShiftRight X12, 32
	032 And X12, X12, 0x7FFFFFFF
	033 Move X13, X10
	034 ShiftRight X13, 32
	035 And X13, X13, 0x7FFFFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSEL not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 NotImplemented "Instruction BFM not yet implemented."
	043 Move [X20+248], X9
	044 Move [X20+256], W8
	045 Move X8, [X19+16]
	046 Compare X8, 0
	047 JumpIfEqual {87}
	048 Add X9, X20, 260
	049 Move X10, [X8+16]
	050 Move X11, [X9]
	051 Move W8, [X8+24]
	052 Move W12, [X9+8]
	053 Move X13, X10
	054 ShiftRight X13, 32
	055 And X13, X13, 0x7FFFFFFF
	056 Move X14, X11
	057 ShiftRight X14, 32
	058 And X14, X14, 0x7FFFFFFF
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 NotImplemented "Instruction BFM not yet implemented."
	066 Move [X9], X10
	067 Move [X20+268], W8
	068 Move V0, [X31+48]
	069 Move V1, [X31+64]
	070 Move V2, [X31+5]
	071 And W3, W21, 1
	072 Add X2, X31, 0
	073 Move X0, X20
	074 Move X1, X19
	075 Move [X31], V0
	076 Move [X31+8], V1
	077 Move [X31+2], V2
	078 Call ProbeReferenceVolume.AddBricks, X0, X1, X2, X3
	079 Move W0, W31
	080 Move X20, [X31+112]
	081 Move X19, [X31+120]
	082 Move X30, [X31+96]
	083 Move X21, [X31+104]
	084 And W0, W0, 1
	085 Add X31, X31, 128
	086 Return X0
	087 Call 0x1C17F20

Method: System.Void LoadAllCells()

Disassembly:
	0x039BC244 B.NE 0x39BC25C
	0x039BC248 LDR X0, [X19 + 0x240]
	0x039BC24C CBZ X0, 0x39BC26C
	0x039BC250 LDR X2, [X23]
	0x039BC254 MOV W1, W21
	0x039BC258 BL 0x2B3FDE0
	0x039BC25C SUBS W21, W21, 0x1
	0x039BC260 B.MI 0x39BC270
	0x039BC264 LDR X0, [X19 + 0x240]
	0x039BC268 CBNZ X0, 0x39BC228
	0x039BC26C BL 0x1C16F20
	0x039BC270 MOV X0, X19
	0x039BC274 BL 0x39BA910
	0x039BC278 MOV X0, X19
	0x039BC27C LDP X20, X19, [X31 + 0x30]
	0x039BC280 LDP X22, X21, [X31 + 0x20]
	0x039BC284 LDP X24, X23, [X31 + 0x10]
	0x039BC288 LDP X30, X25, [X31], #0x40
	0x039BC28C B 0x39BB380
	0x039BC290 BL 0x1C16F28
	0x039BC294 STP X30, X19, [X31 - 0x10]!
	0x039BC298 LDRB W8, [X0 + 0x15C]
	0x039BC29C MOV X19, X0
	0x039BC2A0 CBZ W8, 0x39BC2C8
	0x039BC2A4 MOV X0, X19
	0x039BC2A8 BL 0x39BA374
	0x039BC2AC LDR W1, [X19 + 0x170]
	0x039BC2B0 LDR W2, [X19 + 0x174]
	0x039BC2B4 LDR W3, [X19 + 0x178]
	0x039BC2B8 MOV X0, X19
	0x039BC2BC BL 0x39BA138
	0x039BC2C0 MOVZ W8, 0x1
	0x039BC2C4 STRB W31, [X19 + 0x15C]
	0x039BC2C8 STRB W8, [X19 + 0x15D]
	0x039BC2CC LDP X30, X19, [X31], #0x10
	0x039BC2D0 RET
	0x039BC2D4 STR D10, [X31 - 0x40]!
	0x039BC2D8 STP D9, D8, [X31 + 0x10]
	0x039BC2DC STP X30, X21, [X31 + 0x20]
	0x039BC2E0 STP X20, X19, [X31 + 0x30]
	0x039BC2E4 ADRP X21, 0xA1C000
	0x039BC2E8 LDRB W8, [X21 + 0x783]
	0x039BC2EC MOV W19, W1
	0x039BC2F0 MOV V8.16B, V0.16B
	0x039BC2F4 MOV X20, X0
	0x039BC2F8 CBNZ W8, 0x39BC310
	0x039BC2FC ADRP X0, 0x737000
	0x039BC300 LDR X0, [X0 + 0x5A0]
	0x039BC304 BL 0x1C16CF4
	0x039BC308 MOVZ W8, 0x1
	0x039BC30C STRB W8, [X21 + 0x783]
	0x039BC310 ADRP X8, 0x737000
	0x039BC314 LDR X8, [X8 + 0x5A0]
	0x039BC318 ADRP X21, 0xA1C000
	0x039BC31C LDRB W9, [X21 + 0x793]
	0x039BC320 LDR X8, [X8]
	0x039BC324 LDR X8, [X8 + 0xB8]
	0x039BC328 LDR V10, [X8]
	0x039BC32C LDR V9, [X8 + 0x8]
	0x039BC330 CBNZ W9, 0x39BC348
	0x039BC334 ADRP X0, 0x738000
	0x039BC338 LDR X0, [X0 + 0x5A8]
	0x039BC33C BL 0x1C16CF4
	0x039BC340 MOVZ W8, 0x1
	0x039BC344 STRB W8, [X21 + 0x793]
	0x039BC348 ADRP X8, 0x738000
	0x039BC34C LDR X8, [X8 + 0x5A8]
	0x039BC350 MOV X0, X20
	0x039BC354 MOV W1, W19
	0x039BC358 LDP X30, X21, [X31 + 0x20]
	0x039BC35C LDR X8, [X8]
	0x039BC360 LDR X8, [X8 + 0xB8]
	0x039BC364 LDR V0, [X8]
	0x039BC368 STUR D10, [X20 + 0x14]
	0x039BC36C STR S9, [X20 + 0x1C]
	0x039BC370 STR S8, [X20 + 0x30]
	0x039BC374 STR V0, [X20 + 0x2]
	0x039BC378 LDP X20, X19, [X31 + 0x30]
	0x039BC37C LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA26000
	009 Move W8, [X20+3215]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x797000
	016 Move X0, [X0+1056]
	017 Call 0x1C17CF4
	018 Move X0, 0x797000
	019 Move X0, [X0+936]
	020 Call 0x1C17CF4
	021 Move X0, 0x797000
	022 Move X0, [X0+1008]
	023 Call 0x1C17CF4
	024 Move X0, 0x797000
	025 Move X0, [X0+832]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3215], W8
	029 Move [X31+8], X31
	030 Move X8, [X19+568]
	031 Compare X8, 0
	032 JumpIfEqual {87}
	033 Move X0, [X19+576]
	034 Compare X0, 0
	035 JumpIfEqual {87}
	036 Move X22, 0x797000
	037 Move X23, 0x797000
	038 Move W20, [X8+24]
	039 Move X22, [X22+1008]
	040 Move X23, [X23+1056]
	041 Move W21, W31
	042 Move W8, [X0+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X2, [X22]
	045 Move W1, W21
	046 Call 0x2B41178, X0, X1
	047 Move X1, [X0]
	048 Move W2, 1
	049 Move X0, X19
	050 Move [X31+8], X1
	051 Call ProbeReferenceVolume.LoadCell, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {62}
	056 Move X0, [X19+568]
	057 Compare X0, 0
	058 JumpIfEqual {87}
	059 Move X2, [X23]
	060 Add X1, X31, 8
	061 Call 0x2B40C18, X0, X1
	062 Move X0, [X19+576]
	063 Add W21, W21, 1
	064 Compare X0, 0
	065 JumpIfNotEqual {42}
	066 Move X0, [X19+568]
	067 Compare X0, 0
	068 JumpIfEqual {87}
	069 Move X23, 0x797000
	070 Move X23, [X23+936]
	071 Move W8, [X0+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X2, [X22]
	074 Move X21, [X19+576]
	075 Move W1, W20
	076 Call 0x2B41178, X0, X1
	077 Compare X21, 0
	078 JumpIfEqual {87}
	079 Move X1, [X0]
	080 Move X2, [X23]
	081 Move X0, X21
	082 Call 0x2B40D78, X0, X1
	083 Move X0, [X19+568]
	084 Add W20, W20, 1
	085 Compare X0, 0
	086 JumpIfNotEqual {71}
	087 Call 0x1C17F20
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X30, [X31+16]
	093 Move X23, [X31+24]
	094 Add X31, X31, 64
	095 Return 

Method: System.Void RecomputeMinMaxLoadedCellPos()

Disassembly:
	0x039BC380 LDR V10, [X31], #0x40
	0x039BC384 B 0x39BC39C
	0x039BC388 STP S0, S1, [X0 + 0x14]
	0x039BC38C STP S2, S3, [X0 + 0x1C]
	0x039BC390 STP S4, S5, [X0 + 0x24]
	0x039BC394 STP S6, S7, [X0 + 0x2C]
	0x039BC398 RET
	0x039BC39C STR X30, [X31 - 0x30]!
	0x039BC3A0 STP X22, X21, [X31 + 0x10]
	0x039BC3A4 STP X20, X19, [X31 + 0x20]
	0x039BC3A8 ADRP X21, 0xA25000
	0x039BC3AC ADRP X22, 0x737000
	0x039BC3B0 LDRB W8, [X21 + 0xC9D]
	0x039BC3B4 LDR X22, [X22 + 0x5A8]
	0x039BC3B8 MOV W20, W1
	0x039BC3BC MOV X19, X0
	0x039BC3C0 TBNZ X8, 0x0, 0x39BC3D8
	0x039BC3C4 ADRP X0, 0x737000
	0x039BC3C8 LDR X0, [X0 + 0x5A8]
	0x039BC3CC BL 0x1C16CF4
	0x039BC3D0 MOVZ W8, 0x1
	0x039BC3D4 STRB W8, [X21 + 0xC9D]
	0x039BC3D8 LDR X0, [X22]
	0x039BC3DC LDR W8, [X0 + 0xE0]
	0x039BC3E0 CBNZ W8, 0x39BC3E8
	0x039BC3E4 BL 0x1C16DFC
	0x039BC3E8 MOVZ W1, 0x7
	0x039BC3EC MOV W0, W20
	0x039BC3F0 MOV X2, X31
	0x039BC3F4 BL 0x337EE94
	0x039BC3F8 STR W0, [X19 + 0x34]
	0x039BC3FC LDP X20, X19, [X31 + 0x20]
	0x039BC400 LDP X22, X21, [X31 + 0x10]
	0x039BC404 LDR X30, [X31], #0x30
	0x039BC408 RET
	0x039BC40C STR D8, [X31 - 0x30]!
	0x039BC410 STR X30, [X31 + 0x8]
	0x039BC414 STP X22, X21, [X31 + 0x10]
	0x039BC418 STP X20, X19, [X31 + 0x20]
	0x039BC41C ADRP X21, 0xA25000
	0x039BC420 LDRB W8, [X21 + 0xC95]
	0x039BC424 MOV X19, X1
	0x039BC428 MOV X20, X0
	0x039BC42C TBNZ X8, 0x0, 0x39BC45C
	0x039BC430 ADRP X0, 0x737000
	0x039BC434 LDR X0, [X0 + 0xA28]
	0x039BC438 BL 0x1C16CF4
	0x039BC43C ADRP X0, 0x796000
	0x039BC440 LDR X0, [X0 + 0x4D8]
	0x039BC444 BL 0x1C16CF4
	0x039BC448 ADRP X0, 0x796000
	0x039BC44C LDR X0, [X0 + 0x4E0]
	0x039BC450 BL 0x1C16CF4
	0x039BC454 MOVZ W8, 0x1
	0x039BC458 STRB W8, [X21 + 0xC95]
	0x039BC45C CBZ X19, 0x39BC50C
	0x039BC460 LDR W8, [X19 + 0x18]
	0x039BC464 CMP W8, 0x5
	0x039BC468 B.NE 0x39BC510
	0x039BC46C MOV X0, X19
	0x039BC470 MOV X1, X31
	0x039BC474 BL 0x39C6670
	0x039BC478 MOV X0, X19
	0x039BC47C MOV X1, X31
	0x039BC480 MOV V8.16B, V0.16B
	0x039BC484 BL 0x39C6664
	0x039BC488 MOV W1, W0
	0x039BC48C MOV X0, X20
	0x039BC490 MOV V0.16B, V8.16B
	0x039BC494 BL 0x39BC2D4
	0x039BC498 LDR W8, [X19 + 0x74]
	0x039BC49C LDR W9, [X20 + 0xEC]
	0x039BC4A0 CMP W8, W9
	0x039BC4A4 B.EQ 0x39BC4B4
	0x039BC4A8 MOV X0, X20
	0x039BC4AC STR W8, [X20 + 0xEC]
	0x039BC4B0 BL 0x39BC588
	0x039BC4B4 MOV X0, X20
	0x039BC4B8 BL 0x39BA910
	0x039BC4BC LDR X8, [X19 + 0x20]
	0x039BC4C0 CBZ X8, 0x39BC50C
	0x039BC4C4 MOV X22, X31
	0x039BC4C8 LDR W9, [X8 + 0x18]
	0x039BC4CC CMP X22, W9, SXTW
	0x039BC4D0 B.GE 0x39BC570
	0x039BC4D4 CMP X22, X9
	0x039BC4D8 B.CS 0x39BC584
	0x039BC4DC ADD X8, X8, X22, 0x3, LSL
	0x039BC4E0 LDR X21, [X8 + 0x20]
	0x039BC4E4 MOV X0, X19
	0x039BC4E8 MOV X1, X31
	0x039BC4EC BL 0x3C385F8
	0x039BC4F0 MOV W2, W0
	0x039BC4F4 MOV X0, X20
	0x039BC4F8 MOV X1, X21
	0x039BC4FC BL 0x39BAB18
	0x039BC500 LDR X8, [X19 + 0x20]
	0x039BC504 ADD X22, X22, 0x1
	0x039BC508 CBNZ X8, 0x39BC4C8
	0x039BC50C BL 0x1C16F20
	0x039BC510 ADRP X8, 0x796000
	0x039BC514 ADRP X9, 0x796000
	0x039BC518 LDR X1, [X19 + 0x78]
	0x039BC51C LDR X8, [X8 + 0x4E0]
	0x039BC520 LDR X9, [X9 + 0x4D8]
	0x039BC524 MOV X3, X31
	0x039BC528 LDR X0, [X8]
	0x039BC52C LDR X2, [X9]
	0x039BC530 BL 0x32274B8
	0x039BC534 ADRP X8, 0x737000
	0x039BC538 LDR X8, [X8 + 0xA28]
	0x039BC53C MOV X19, X0
	0x039BC540 LDR X8, [X8]
	0x039BC544 LDR W9, [X8 + 0xE0]
	0x039BC548 CBNZ W9, 0x39BC554
	0x039BC54C MOV X0, X8
	0x039BC550 BL 0x1C16DFC
	0x039BC554 MOV X0, X19
	0x039BC558 LDP X20, X19, [X31 + 0x20]
	0x039BC55C LDP X22, X21, [X31 + 0x10]
	0x039BC560 LDR X30, [X31 + 0x8]
	0x039BC564 MOV X1, X31
	0x039BC568 LDR V8, [X31], #0x30
	0x039BC56C B 0x3C06A04
	0x039BC570 LDP X20, X19, [X31 + 0x20]
	0x039BC574 LDP X22, X21, [X31 + 0x10]
	0x039BC578 LDR X30, [X31 + 0x8]
	0x039BC57C LDR V8, [X31], #0x30
	0x039BC580 RET
	0x039BC584 BL 0x1C16F28
	0x039BC588 SUB X31, X31, 0x70
	0x039BC58C STP X30, X21, [X31 + 0x50]
	0x039BC590 STP X20, X19, [X31 + 0x60]
	0x039BC594 ADRP X20, 0xA25000
	0x039BC598 ADRP X21, 0x796000
	0x039BC59C LDRB W8, [X20 + 0xC9B]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0xA26000
	008 Move W8, [X20+3216]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x797000
	015 Move X0, [X0+1096]
	016 Call 0x1C17CF4
	017 Move X0, 0x797000
	018 Move X0, [X0+1104]
	019 Call 0x1C17CF4
	020 Move X0, 0x797000
	021 Move X0, [X0+1112]
	022 Call 0x1C17CF4
	023 Move X0, 0x797000
	024 Move X0, [X0+1120]
	025 Call 0x1C17CF4
	026 Move X0, 0x797000
	027 Move X0, [X0+1128]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3216], W8
	031 Move [X31+8], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move X8, -49082368
	035 Move V0, [X8+234]
	036 Move X0, [X19+128]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X19+264], D1
	039 Move [X19+248], V0
	040 Compare X0, 0
	041 JumpIfEqual {131}
	042 Move X8, 0x797000
	043 Move X8, [X8+1096]
	044 Move X1, [X8]
	045 Call Dictionary`2<Int32, Object>.get_Values, X0
	046 Compare X0, 0
	047 JumpIfEqual {131}
	048 Move X8, 0x797000
	049 Move X8, [X8+1128]
	050 Move X21, 0x797000
	051 Move X20, 0x797000
	052 Move X1, [X8]
	053 Move X21, [X21+1112]
	054 Move X20, [X20+1104]
	055 Add X8, X31, 8
	056 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	057 Add X22, X19, 260
	058 Move X1, [X21]
	059 Add X0, X31, 8
	060 Call Enumerator<Int32, Object>.MoveNext, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {115}
	065 Move X8, [X31+24]
	066 Compare X8, 0
	067 JumpIfEqual {125}
	068 Move W9, [X8+44]
	069 Compare W9, 0
	070 JumpIfEqual {58}
	071 Move X9, [X8+16]
	072 Compare X9, 0
	073 JumpIfEqual {129}
	074 Move X10, [X9+16]
	075 Move X11, [X19+248]
	076 Move W9, [X9+24]
	077 Move W12, [X19+256]
	078 Move X13, X10
	079 ShiftRight X13, 32
	080 And X13, X13, 0x7FFFFFFF
	081 Move X14, X11
	082 ShiftRight X14, 32
	083 And X14, X14, 0x7FFFFFFF
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSEL not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 NotImplemented "Instruction BFM not yet implemented."
	091 Move [X19+248], X10
	092 Move [X19+256], W9
	093 Move X8, [X8+16]
	094 Compare X8, 0
	095 JumpIfEqual {127}
	096 Move X9, [X8+16]
	097 Move X10, [X22]
	098 Move W8, [X8+24]
	099 Move W11, [X19+268]
	100 Move X12, X9
	101 ShiftRight X12, 32
	102 And X12, X12, 0x7FFFFFFF
	103 Move X13, X10
	104 ShiftRight X13, 32
	105 And X13, X13, 0x7FFFFFFF
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 NotImplemented "Instruction BFM not yet implemented."
	113 Move [X22], X9
	114 Move [X19+268], W8
	115 Move X1, [X20]
	116 Add X0, X31, 8
	117 Call Enumerator<Int32, Object>.Dispose, X0
	118 Move X20, [X31+64]
	119 Move X19, [X31+72]
	120 Move X22, [X31+48]
	121 Move X21, [X31+56]
	122 Move X30, [X31+32]
	123 Add X31, X31, 80
	124 Return 
	125 Move X21, X20
	126 Call 0x1C17F20
	127 Move X21, X20
	128 Call 0x1C17F20
	129 Move X21, X20
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Move X21, X20
	133 Move X19, X0
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X19
	136 Call 0x3EB2AD0
	137 Move X20, [X0]
	138 Call 0x3EB2AE0
	139 Move X1, [X21]
	140 Add X0, X31, 8
	141 Call Enumerator<Int32, Object>.Dispose, X0
	142 Compare X20, 0
	143 JumpIfEqual {118}
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Move X20, X31
	147 Move X19, X0
	148 Move X1, [X21]
	149 Add X0, X31, 8
	150 Call Enumerator<Int32, Object>.Dispose, X0
	151 Compare X20, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X19
	154 Call 0x1D2D690
	155 Move X0, X20
	156 Call 0x1C17F18
	157 Call 0x1991590

Method: System.Boolean CheckCompatibilityWithCollection(UnityEngine.Rendering.ProbeVolumeAsset asset, System.Collections.Generic.Dictionary`2<System.String, UnityEngine.Rendering.ProbeVolumeAsset> collection)

Disassembly:
	0x039BC5A0 LDR X21, [X21 + 0x4E8]
	0x039BC5A4 MOV X19, X0
	0x039BC5A8 TBNZ X8, 0x0, 0x39BC5C0
	0x039BC5AC ADRP X0, 0x796000
	0x039BC5B0 LDR X0, [X0 + 0x4E8]
	0x039BC5B4 BL 0x1C16CF4
	0x039BC5B8 MOVZ W8, 0x1
	0x039BC5BC STRB W8, [X20 + 0xC9B]
	0x039BC5C0 ADD X20, X19, 0x98
	0x039BC5C4 MOV X0, X20
	0x039BC5C8 BL 0x39B712C
	0x039BC5CC LDR W8, [X19 + 0xEC]
	0x039BC5D0 LDR W2, [X19 + 0x178]
	0x039BC5D4 LDR X3, [X21]
	0x039BC5D8 ADD X6, X19, 0xE8
	0x039BC5DC UBFM W0, W8, 0x1A, 0x19
	0x039BC5E0 ADD X8, X31, 0x0
	0x039BC5E4 MOVZ W5, 0x1
	0x039BC5E8 MOV W1, W31
	0x039BC5EC MOV W4, W31
	0x039BC5F0 BL 0x39B6C88
	0x039BC5F4 ADD X1, X31, 0x0
	0x039BC5F8 MOVZ W2, 0x50
	0x039BC5FC MOV X0, X20
	0x039BC600 BL 0x3EB1AC0
	0x039BC604 LDP X20, X19, [X31 + 0x60]
	0x039BC608 LDP X30, X21, [X31 + 0x50]
	0x039BC60C ADD X31, X31, 0x70
	0x039BC610 RET
	0x039BC614 SUB X31, X31, 0x70
	0x039BC618 STP X30, X23, [X31 + 0x40]
	0x039BC61C STP X22, X21, [X31 + 0x50]
	0x039BC620 STP X20, X19, [X31 + 0x60]
	0x039BC624 ADRP X20, 0xA25000
	0x039BC628 LDRB W8, [X20 + 0xC96]
	0x039BC62C MOV X19, X0
	0x039BC630 TBNZ X8, 0x0, 0x39BC6A8
	0x039BC634 ADRP X0, 0x796000
	0x039BC638 LDR X0, [X0 + 0x4A8]
	0x039BC63C BL 0x1C16CF4
	0x039BC640 ADRP X0, 0x796000
	0x039BC644 LDR X0, [X0 + 0x4F0]
	0x039BC648 BL 0x1C16CF4
	0x039BC64C ADRP X0, 0x796000
	0x039BC650 LDR X0, [X0 + 0x470]
	0x039BC654 BL 0x1C16CF4
	0x039BC658 ADRP X0, 0x796000
	0x039BC65C LDR X0, [X0 + 0x478]
	0x039BC660 BL 0x1C16CF4
	0x039BC664 ADRP X0, 0x796000
	0x039BC668 LDR X0, [X0 + 0x480]
	0x039BC66C BL 0x1C16CF4
	0x039BC670 ADRP X0, 0x796000
	0x039BC674 LDR X0, [X0 + 0x488]
	0x039BC678 BL 0x1C16CF4
	0x039BC67C ADRP X0, 0x796000
	0x039BC680 LDR X0, [X0 + 0x490]
	0x039BC684 BL 0x1C16CF4
	0x039BC688 ADRP X0, 0x796000
	0x039BC68C LDR X0, [X0 + 0x498]
	0x039BC690 BL 0x1C16CF4
	0x039BC694 ADRP X0, 0x796000
	0x039BC698 LDR X0, [X0 + 0x4A0]
	0x039BC69C BL 0x1C16CF4
	0x039BC6A0 MOVZ W8, 0x1
	0x039BC6A4 STRB W8, [X20 + 0xC96]
	0x039BC6A8 STP X31, X31, [X31 + 0x20]
	0x039BC6AC STR X31, [X31 + 0x30]
	0x039BC6B0 LDR X0, [X19 + 0x128]
	0x039BC6B4 CBZ X0, 0x39BC88C
	0x039BC6B8 ADRP X20, 0x796000
	0x039BC6BC LDR X20, [X20 + 0x478]
	0x039BC6C0 LDR X1, [X20]
	0x039BC6C4 BL 0x2AA4E88
	0x039BC6C8 CBNZ W0, 0x39BC6E0
	0x039BC6CC LDR X0, [X19 + 0x138]
	0x039BC6D0 CBZ X0, 0x39BC88C
	0x039BC6D4 LDR X1, [X20]
	0x039BC6D8 BL 0x2AA4E88
	0x039BC6DC CBZ W0, 0x39BC86C
	0x039BC6E0 LDRB W8, [X19 + 0x140]
	0x039BC6E4 CBZ W8, 0x39BC86C
	0x039BC6E8 LDRB W8, [X19 + 0x141]
	0x039BC6EC CBZ W8, 0x39BC86C
	0x039BC6F0 LDR X0, [X19 + 0x38]
	0x039BC6F4 CBZ X0, 0x39BC88C
	0x039BC6F8 BL 0x39B7048
	0x039BC6FC LDR X0, [X19 + 0x50]
	0x039BC700 CBZ X0, 0x39BC88C
	0x039BC704 BL 0x39B8EBC
	0x039BC708 LDRB W8, [X19 + 0x15D]
	0x039BC70C CBZ W8, 0x39BC78C
	0x039BC710 LDR X0, [X19 + 0x138]
	0x039BC714 CBZ X0, 0x39BC88C
	0x039BC718 ADRP X8, 0x796000
	0x039BC71C LDR X8, [X8 + 0x480]
	0x039BC720 LDR X1, [X8]
	0x039BC724 BL 0x2AA4F58
	0x039BC728 CBZ X0, 0x39BC88C
	0x039BC72C ADRP X8, 0x796000
	0x039BC730 LDR X8, [X8 + 0x4A0]
	0x039BC734 LDR X1, [X8]
	0x039BC738 ADD X8, X31, 0x8
	0x039BC73C BL 0x275A7AC
	0x039BC740 LDUR V0, [X31 + 0x8]
	0x039BC744 LDR X8, [X31 + 0x18]
	0x039BC748 ADRP X20, 0x796000
	0x039BC74C STR V0, [X31 + 0x2]
	0x039BC750 STR X8, [X31 + 0x30]
	0x039BC754 LDR X20, [X20 + 0x490]
	0x039BC758 LDR X1, [X20]
	0x039BC75C ADD X0, X31, 0x20
	0x039BC760 BL 0x2C0B1F0
	0x039BC764 TBZ X0, 0x0, 0x39BC778
	0x039BC768 LDR X1, [X31 + 0x30]
	0x039BC76C MOV X0, X19
	0x039BC770 BL 0x39BC40C
	0x039BC774 B 0x39BC758
	0x039BC778 ADRP X8, 0x796000
	0x039BC77C LDR X8, [X8 + 0x488]
	0x039BC780 ADD X0, X31, 0x20
	0x039BC784 LDR X1, [X8]
	0x039BC788 BL 0x2C0B1EC
	0x039BC78C LDR X0, [X19 + 0x128]
	0x039BC790 CBZ X0, 0x39BC88C
	0x039BC794 ADRP X8, 0x796000
	0x039BC798 LDR X8, [X8 + 0x480]
	0x039BC79C LDR X1, [X8]
	0x039BC7A0 BL 0x2AA4F58
	0x039BC7A4 CBZ X0, 0x39BC88C
	0x039BC7A8 ADRP X8, 0x796000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X22, 0xA26000
	010 Move W8, [X22+3217]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x797000
	019 Move X0, [X0+1136]
	020 Call 0x1C17CF4
	021 Move X0, 0x797000
	022 Move X0, [X0+1144]
	023 Call 0x1C17CF4
	024 Move X0, 0x797000
	025 Move X0, [X0+1152]
	026 Call 0x1C17CF4
	027 Move X0, 0x797000
	028 Move X0, [X0+1160]
	029 Call 0x1C17CF4
	030 Move X0, 0x797000
	031 Move X0, [X0+1168]
	032 Call 0x1C17CF4
	033 Move X0, 0x797000
	034 Move X0, [X0+1176]
	035 Call 0x1C17CF4
	036 Move X0, 0x797000
	037 Move X0, [X0+1184]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3217], W8
	041 Move [X31+8], X31
	042 Move [X31+16], X31
	043 Move [X31+24], X31
	044 Compare X21, 0
	045 JumpIfEqual {117}
	046 Move X8, 0x797000
	047 Move X8, [X8+1144]
	048 Move X0, X21
	049 Move X1, [X8]
	050 Call Dictionary`2<Object, Object>.get_Count, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, 0x797000
	053 Move X8, [X8+1152]
	054 Move X0, X21
	055 Move X1, [X8]
	056 Call Dictionary`2<Object, Object>.get_Values, X0
	057 Compare X0, 0
	058 JumpIfEqual {117}
	059 Move X8, 0x797000
	060 Move X8, [X8+1184]
	061 Move X23, 0x797000
	062 Move X24, 0x797000
	063 Move X22, 0x797000
	064 Move X1, [X8]
	065 Move X23, [X23+1168]
	066 Move X24, [X24+1136]
	067 Move X22, [X22+1160]
	068 Add X8, X31, 8
	069 Call ValueCollection<Object, Object>.GetEnumerator, X0
	070 Move X1, [X23]
	071 Add X0, X31, 8
	072 Call Enumerator<Object, Object>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {97}
	077 Move X21, [X31+24]
	078 Compare X21, 0
	079 JumpIfEqual {115}
	080 Move X0, [X20+304]
	081 Compare X0, 0
	082 JumpIfEqual {116}
	083 Move X1, [X21+120]
	084 Move X2, [X24]
	085 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {70}
	090 Move X0, X21
	091 Move X1, X19
	092 Move X2, X31
	093 Call ProbeVolumeAsset.CompatibleWith, X0, X1
	094 Move W19, W0
	095 Move W20, 5
	096 Move W8, 1
	097 Move W19, W31
	098 Move W20, 2
	099 Move X1, [X22]
	100 Add X0, X31, 8
	101 Call Enumerator<Object, Object>.Dispose, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Or W8, W19, W8
	105 Move X20, [X31+80]
	106 Move X19, [X31+88]
	107 Move X22, [X31+64]
	108 Move X21, [X31+72]
	109 Move X24, [X31+48]
	110 Move X23, [X31+56]
	111 Move X30, [X31+32]
	112 And W0, W8, 1
	113 Add X31, X31, 96
	114 Return X0
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Move X19, X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, X19
	121 Call 0x3EB2AD0
	122 Move X20, [X0]
	123 Call 0x3EB2AE0
	124 Move X1, [X22]
	125 Add X0, X31, 8
	126 Call Enumerator<Object, Object>.Dispose, X0
	127 Compare X20, 0
	128 JumpIfNotEqual {131}
	129 Move W19, W31
	130 Move X20, X31
	131 Move X0, X20
	132 Call 0x1C17F18
	133 Move X19, X0
	134 Move X1, [X22]
	135 Add X0, X31, 8
	136 Call Enumerator<Object, Object>.Dispose, X0
	137 Compare X20, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X19
	140 Call 0x1D2D690
	141 Move X0, X20
	142 Call 0x1C17F18
	143 Call 0x1991590

Method: System.Void AddPendingAssetLoading(UnityEngine.Rendering.ProbeVolumeAsset asset)

Disassembly:
	0x039BC7AC LDR X8, [X8 + 0x4A0]
	0x039BC7B0 LDR X1, [X8]
	0x039BC7B4 ADD X8, X31, 0x8
	0x039BC7B8 BL 0x275A7AC
	0x039BC7BC LDUR V0, [X31 + 0x8]
	0x039BC7C0 LDR X8, [X31 + 0x18]
	0x039BC7C4 ADRP X21, 0x796000
	0x039BC7C8 ADRP X22, 0x796000
	0x039BC7CC LDR X21, [X21 + 0x490]
	0x039BC7D0 LDR X22, [X22 + 0x470]
	0x039BC7D4 STR V0, [X31 + 0x2]
	0x039BC7D8 STR X8, [X31 + 0x30]
	0x039BC7DC ADRP X23, 0x796000
	0x039BC7E0 LDR X23, [X23 + 0x4A8]
	0x039BC7E4 LDR X1, [X21]
	0x039BC7E8 ADD X0, X31, 0x20
	0x039BC7EC BL 0x2C0B1F0
	0x039BC7F0 TBZ X0, 0x0, 0x39BC83C
	0x039BC7F4 LDR X20, [X31 + 0x30]
	0x039BC7F8 MOV X0, X19
	0x039BC7FC MOV X1, X20
	0x039BC800 BL 0x39BC40C
	0x039BC804 CBZ X20, 0x39BC880
	0x039BC808 LDR X0, [X19 + 0x138]
	0x039BC80C CBZ X0, 0x39BC884
	0x039BC810 LDR X1, [X20 + 0x78]
	0x039BC814 LDR X2, [X22]
	0x039BC818 BL 0x2AA528C
	0x039BC81C TBNZ X0, 0x0, 0x39BC7E4
	0x039BC820 LDR X0, [X19 + 0x138]
	0x039BC824 CBZ X0, 0x39BC888
	0x039BC828 LDR X1, [X20 + 0x78]
	0x039BC82C LDR X3, [X23]
	0x039BC830 MOV X2, X20
	0x039BC834 BL 0x2AA5098
	0x039BC838 B 0x39BC7E4
	0x039BC83C ADRP X8, 0x796000
	0x039BC840 LDR X8, [X8 + 0x488]
	0x039BC844 ADD X0, X31, 0x20
	0x039BC848 LDR X1, [X8]
	0x039BC84C BL 0x2C0B1EC
	0x039BC850 LDR X0, [X19 + 0x128]
	0x039BC854 CBZ X0, 0x39BC88C
	0x039BC858 ADRP X8, 0x796000
	0x039BC85C LDR X8, [X8 + 0x4F0]
	0x039BC860 LDR X1, [X8]
	0x039BC864 BL 0x2AA5220
	0x039BC868 STRB W31, [X19 + 0x140]
	0x039BC86C LDP X20, X19, [X31 + 0x60]
	0x039BC870 LDP X22, X21, [X31 + 0x50]
	0x039BC874 LDP X30, X23, [X31 + 0x40]
	0x039BC878 ADD X31, X31, 0x70
	0x039BC87C RET
	0x039BC880 BL 0x1C16F20
	0x039BC884 BL 0x1C16F20
	0x039BC888 BL 0x1C16F20
	0x039BC88C BL 0x1C16F20
	0x039BC890 B 0x39BC910
	0x039BC894 B 0x39BC910
	0x039BC898 B 0x39BC89C
	0x039BC89C MOV X20, X0
	0x039BC8A0 CMP W1, 0x1
	0x039BC8A4 B.NE 0x39BC8D4
	0x039BC8A8 MOV X0, X20
	0x039BC8AC BL 0x3EB1AD0
	0x039BC8B0 LDR X21, [X0]
	0x039BC8B4 BL 0x3EB1AE0
	0x039BC8B8 ADRP X8, 0x796000
	0x039BC8BC LDR X8, [X8 + 0x488]
	0x039BC8C0 ADD X0, X31, 0x20
	0x039BC8C4 LDR X1, [X8]
	0x039BC8C8 BL 0x2C0B1EC
	0x039BC8CC CBZ X21, 0x39BC78C
	0x039BC8D0 B 0x39BC944
	0x039BC8D4 MOV X21, X31
	0x039BC8D8 B 0x39BC8E0
	0x039BC8DC MOV X20, X0
	0x039BC8E0 ADRP X8, 0x796000
	0x039BC8E4 LDR X8, [X8 + 0x488]
	0x039BC8E8 LDR X1, [X8]
	0x039BC8EC ADD X0, X31, 0x20
	0x039BC8F0 BL 0x2C0B1EC
	0x039BC8F4 CBZ X21, 0x39BC970
	0x039BC8F8 MOV X0, X21
	0x039BC8FC BL 0x1C16F18
	0x039BC900 B 0x39BC910
	0x039BC904 B 0x39BC910
	0x039BC908 B 0x39BC910
	0x039BC90C B 0x39BC910
	0x039BC910 MOV X20, X0
	0x039BC914 CMP W1, 0x1
	0x039BC918 B.NE 0x39BC94C
	0x039BC91C MOV X0, X20
	0x039BC920 BL 0x3EB1AD0
	0x039BC924 LDR X21, [X0]
	0x039BC928 BL 0x3EB1AE0
	0x039BC92C ADRP X8, 0x796000
	0x039BC930 LDR X8, [X8 + 0x488]
	0x039BC934 ADD X0, X31, 0x20
	0x039BC938 LDR X1, [X8]
	0x039BC93C BL 0x2C0B1EC
	0x039BC940 CBZ X21, 0x39BC850
	0x039BC944 MOV X0, X21
	0x039BC948 BL 0x1C16F18
	0x039BC94C MOV X21, X31
	0x039BC950 B 0x39BC958
	0x039BC954 MOV X20, X0
	0x039BC958 ADRP X8, 0x796000
	0x039BC95C LDR X8, [X8 + 0x488]
	0x039BC960 LDR X1, [X8]
	0x039BC964 ADD X0, X31, 0x20
	0x039BC968 BL 0x2C0B1EC
	0x039BC96C CBNZ X21, 0x39BC978
	0x039BC970 MOV X0, X20
	0x039BC974 BL 0x1D2C690
	0x039BC978 MOV X0, X21
	0x039BC97C BL 0x1C16F18
	0x039BC980 BL 0x1990590
	0x039BC984 SUB X31, X31, 0x50
	0x039BC988 STR X30, [X31 + 0x20]
	0x039BC98C STP X22, X21, [X31 + 0x30]
	0x039BC990 STP X20, X19, [X31 + 0x40]
	0x039BC994 ADRP X20, 0xA25000
	0x039BC998 LDRB W8, [X20 + 0xC97]
	0x039BC99C MOV X19, X0
	0x039BC9A0 TBNZ X8, 0x0, 0x39BC9F4
	0x039BC9A4 ADRP X0, 0x796000
	0x039BC9A8 LDR X0, [X0 + 0x4F0]
	0x039BC9AC BL 0x1C16CF4
	0x039BC9B0 ADRP X0, 0x796000
	0x039BC9B4 LDR X0, [X0 + 0x480]
	0x039BC9B8 BL 0x1C16CF4
	0x039BC9BC ADRP X0, 0x796000
	0x039BC9C0 LDR X0, [X0 + 0x488]
	0x039BC9C4 BL 0x1C16CF4
	0x039BC9C8 ADRP X0, 0x796000
	0x039BC9CC LDR X0, [X0 + 0x490]
	0x039BC9D0 BL 0x1C16CF4
	0x039BC9D4 ADRP X0, 0x796000
	0x039BC9D8 LDR X0, [X0 + 0x498]
	0x039BC9DC BL 0x1C16CF4
	0x039BC9E0 ADRP X0, 0x796000
	0x039BC9E4 LDR X0, [X0 + 0x4A0]
	0x039BC9E8 BL 0x1C16CF4
	0x039BC9EC MOVZ W8, 0x1
	0x039BC9F0 STRB W8, [X20 + 0xC97]
	0x039BC9F4 STP X31, X31, [X31 + 0x8]
	0x039BC9F8 STR X31, [X31 + 0x18]
	0x039BC9FC ADRP X22, 0x796000
	0x039BCA00 LDRB W8, [X19 + 0x141]
	0x039BCA04 LDR X22, [X22 + 0x4F0]
	0x039BCA08 CBNZ W8, 0x39BCA1C
	0x039BCA0C LDR X0, [X19 + 0x130]
	0x039BCA10 CBZ X0, 0x39BCAAC
	0x039BCA14 LDR X1, [X22]
	0x039BCA18 BL 0x2AA5220
	0x039BCA1C LDR X0, [X19 + 0x130]
	0x039BCA20 CBZ X0, 0x39BCAAC
	0x039BCA24 ADRP X8, 0x796000
	0x039BCA28 LDR X8, [X8 + 0x480]
	0x039BCA2C LDR X1, [X8]
	0x039BCA30 BL 0x2AA4F58
	0x039BCA34 CBZ X0, 0x39BCAAC
	0x039BCA38 ADRP X8, 0x796000
	0x039BCA3C LDR X8, [X8 + 0x4A0]
	0x039BCA40 ADRP X21, 0x796000
	0x039BCA44 ADRP X20, 0x796000
	0x039BCA48 LDR X1, [X8]
	0x039BCA4C LDR X21, [X21 + 0x490]
	0x039BCA50 LDR X20, [X20 + 0x488]
	0x039BCA54 ADD X8, X31, 0x8
	0x039BCA58 BL 0x275A7AC
	0x039BCA5C LDR X1, [X21]
	0x039BCA60 ADD X0, X31, 0x8
	0x039BCA64 BL 0x2C0B1F0
	0x039BCA68 TBZ X0, 0x0, 0x39BCA7C
	0x039BCA6C LDR X1, [X31 + 0x18]
	0x039BCA70 MOV X0, X19
	0x039BCA74 BL 0x39BC010
	0x039BCA78 B 0x39BCA5C
	0x039BCA7C LDR X1, [X20]
	0x039BCA80 ADD X0, X31, 0x8
	0x039BCA84 BL 0x2C0B1EC
	0x039BCA88 LDR X0, [X19 + 0x130]
	0x039BCA8C CBZ X0, 0x39BCAAC
	0x039BCA90 LDR X1, [X22]
	0x039BCA94 BL 0x2AA5220
	0x039BCA98 LDP X20, X19, [X31 + 0x40]
	0x039BCA9C LDP X22, X21, [X31 + 0x30]
	0x039BCAA0 LDR X30, [X31 + 0x20]
	0x039BCAA4 ADD X31, X31, 0x50
	0x039BCAA8 RET
	0x039BCAAC BL 0x1C16F20
	0x039BCAB0 B 0x39BCAB4
	0x039BCAB4 MOV X21, X0
	0x039BCAB8 CMP W1, 0x1
	0x039BCABC B.NE 0x39BCAF0
	0x039BCAC0 MOV X0, X21
	0x039BCAC4 BL 0x3EB1AD0
	0x039BCAC8 LDR X20, [X0]
	0x039BCACC BL 0x3EB1AE0
	0x039BCAD0 ADRP X8, 0x796000
	0x039BCAD4 LDR X8, [X8 + 0x488]
	0x039BCAD8 ADD X0, X31, 0x8
	0x039BCADC LDR X1, [X8]
	0x039BCAE0 BL 0x2C0B1EC
	0x039BCAE4 CBZ X20, 0x39BCA88
	0x039BCAE8 MOV X0, X20
	0x039BCAEC BL 0x1C16F18
	0x039BCAF0 MOV X20, X31
	0x039BCAF4 B 0x39BCAFC
	0x039BCAF8 MOV X21, X0
	0x039BCAFC ADRP X8, 0x796000
	0x039BCB00 LDR X8, [X8 + 0x488]
	0x039BCB04 LDR X1, [X8]
	0x039BCB08 ADD X0, X31, 0x8
	0x039BCB0C BL 0x2C0B1EC
	0x039BCB10 CBNZ X20, 0x39BCB1C
	0x039BCB14 MOV X0, X21
	0x039BCB18 BL 0x1D2C690
	0x039BCB1C MOV X0, X20
	0x039BCB20 BL 0x1C16F18
	0x039BCB24 BL 0x1990590
	0x039BCB28 SUB X31, X31, 0xB0
	0x039BCB2C STP D15, D14, [X31 + 0x20]
	0x039BCB30 STP D13, D12, [X31 + 0x30]
	0x039BCB34 STP D11, D10, [X31 + 0x40]
	0x039BCB38 STP D9, D8, [X31 + 0x50]
	0x039BCB3C STP X30, X27, [X31 + 0x60]
	0x039BCB40 STP X26, X25, [X31 + 0x70]
	0x039BCB44 STP X24, X23, [X31 + 0x80]
	0x039BCB48 STP X22, X21, [X31 + 0x90]
	0x039BCB4C STP X20, X19, [X31 + 0xA0]
	0x039BCB50 ADRP X25, 0xA25000
	0x039BCB54 LDRB W8, [X25 + 0xC98]
	0x039BCB58 MOV X20, X5
	0x039BCB5C MOV X21, X4
	0x039BCB60 MOV W19, W3
	0x039BCB64 MOV X23, X2
	0x039BCB68 MOV X24, X1
	0x039BCB6C MOV X22, X0
	0x039BCB70 TBNZ X8, 0x0, 0x39BCB88
	0x039BCB74 ADRP X0, 0x795000
	0x039BCB78 LDR X0, [X0 + 0xF48]
	0x039BCB7C BL 0x1C16CF4
	0x039BCB80 MOVZ W8, 0x1
	0x039BCB84 STRB W8, [X25 + 0xC98]
	0x039BCB88 ADRP X26, 0xA25000
	0x039BCB8C LDRB W8, [X26 + 0xCBB]
	0x039BCB90 UBFM X25, X24, 0x20, 0x3F
	0x039BCB94 CBNZ W8, 0x39BCBAC
	0x039BCB98 ADRP X0, 0x75F000
	0x039BCB9C LDR X0, [X0 + 0x638]
	0x039BCBA0 BL 0x1C16CF4
	0x039BCBA4 MOVZ W8, 0x1
	0x039BCBA8 STRB W8, [X26 + 0xCBB]
	0x039BCBAC ADRP X26, 0x75F000
	0x039BCBB0 LDR X26, [X26 + 0x638]
	0x039BCBB4 ADRP X27, 0xA25000
	0x039BCBB8 LDR X8, [X26]
	0x039BCBBC LDR X8, [X8 + 0xB8]
	0x039BCBC0 LDR X9, [X8]
	0x039BCBC4 LDR W8, [X8 + 0x8]
	0x039BCBC8 STR X9, [X21]
	0x039BCBCC STR W8, [X21 + 0x8]
	0x039BCBD0 LDRB W8, [X27 + 0xCBA]
	0x039BCBD4 CBNZ W8, 0x39BCBEC
	0x039BCBD8 ADRP X0, 0x75F000
	0x039BCBDC LDR X0, [X0 + 0x638]
	0x039BCBE0 BL 0x1C16CF4
	0x039BCBE4 MOVZ W8, 0x1
	0x039BCBE8 STRB W8, [X27 + 0xCBA]
	0x039BCBEC LDR X8, [X26]
	0x039BCBF0 MOV X0, X22
	0x039BCBF4 LDR X8, [X8 + 0xB8]
	0x039BCBF8 LDUR X9, [X8 + 0xC]
	0x039BCBFC LDR W8, [X8 + 0x14]
	0x039BCC00 STR X9, [X20]
	0x039BCC04 STR W8, [X20 + 0x8]
	0x039BCC08 LDR W8, [X22 + 0x34]
	0x039BCC0C SUB W1, W8, 0x1
	0x039BCC10 BL 0x39BD8BC
	0x039BCC14 LDR W8, [X22 + 0x34]
	0x039BCC18 MOV X0, X22
	0x039BCC1C MOV V8.16B, V0.16B
	0x039BCC20 SUB W1, W8, 0x1
	0x039BCC24 BL 0x39BD8BC
	0x039BCC28 LDR W8, [X22 + 0x34]
	0x039BCC2C MOV X0, X22
	0x039BCC30 MOV V9.16B, V0.16B
	0x039BCC34 SUB W1, W8, 0x1
	0x039BCC38 BL 0x39BD8BC
	0x039BCC3C SCVTF S1, W24
	0x039BCC40 SCVTF S2, W25
	0x039BCC44 SCVTF S3, W23
	0x039BCC48 ADRP X23, 0xA1C000
	0x039BCC4C FMOV S4, W31
	0x039BCC50 FMUL S5, S8, S1
	0x039BCC54 FMUL S6, S9, S2
	0x039BCC58 FMUL S3, S0, S3
	0x039BCC5C LDRB W8, [X23 + 0x85B]
	0x039BCC60 FMOV S10, 0.5
	0x039BCC64 FSUB S0, S4, S5
	0x039BCC68 FSUB S1, S4, S6
	0x039BCC6C FSUB S2, S4, S3
	0x039BCC70 FMUL S15, S0, S10
	0x039BCC74 FMUL S14, S1, S10
	0x039BCC78 FMUL S13, S2, S10
	0x039BCC7C FADD S9, S5, S15
	0x039BCC80 FADD S1, S6, S14
	0x039BCC84 FADD S0, S3, S13
	0x039BCC88 STP S6, S5, [X31 + 0x18]
	0x039BCC8C STR S3, [X31 + 0x14]
	0x039BCC90 STP S1, S0, [X31 + 0xC]
	0x039BCC94 CBNZ W8, 0x39BCCAC
	0x039BCC98 ADRP X0, 0x737000
	0x039BCC9C LDR X0, [X0 + 0x5A0]
	0x039BCCA0 BL 0x1C16CF4
	0x039BCCA4 MOVZ W8, 0x1
	0x039BCCA8 STRB W8, [X23 + 0x85B]
	0x039BCCAC ADRP X8, 0x737000
	0x039BCCB0 LDR X8, [X8 + 0x5A0]
	0x039BCCB4 LDR W9, [X22 + 0x34]
	0x039BCCB8 MOV X0, X22
	0x039BCCBC LDR X8, [X8]
	0x039BCCC0 SUB W1, W9, 0x1
	0x039BCCC4 LDR X8, [X8 + 0xB8]
	0x039BCCC8 LDP S12, S11, [X8 + 0xC]
	0x039BCCCC LDR V8, [X8 + 0x14]
	0x039BCCD0 BL 0x39BD8BC
	0x039BCCD4 LDR V20, [X31 + 0x1C]
	0x039BCCD8 FMUL S1, S12, S0
	0x039BCCDC FMUL S2, S11, S0
	0x039BCCE0 LDP S4, S5, [X31 + 0xC]
	0x039BCCE4 FADD S1, S20, S1
	0x039BCCE8 LDR V20, [X31 + 0x18]
	0x039BCCEC FSUB S3, S9, S15
	0x039BCCF0 LDP S6, S7, [X22 + 0x68]
	0x039BCCF4 LDP S16, S17, [X22 + 0x70]
	0x039BCCF8 FADD S2, S20, S2
	0x039BCCFC LDR V20, [X31 + 0x14]
	0x039BCD00 FMUL S0, S8, S0
	0x039BCD04 FSUB S4, S4, S14
	0x039BCD08 LDP S18, S19, [X22 + 0x78]
	0x039BCD0C FSUB S1, S1, S3
	0x039BCD10 FSUB S5, S5, S13
	0x039BCD14 FADD S0, S20, S0
	0x039BCD18 FSUB S2, S2, S4
	0x039BCD1C FMUL S1, S1, S10
	0x039BCD20 FSUB S0, S0, S5
	0x039BCD24 FMUL S2, S2, S10
	0x039BCD28 FADD S3, S3, S1
	0x039BCD2C FMUL S0, S0, S10
	0x039BCD30 FADD S4, S4, S2
	0x039BCD34 FSUB S20, S6, S17
	0x039BCD38 FSUB S23, S3, S1
	0x039BCD3C FADD S5, S5, S0
	0x039BCD40 FSUB S21, S7, S18
	0x039BCD44 FADD S7, S7, S18
	0x039BCD48 FSUB S18, S4, S2
	0x039BCD4C FCMP S23, S20
	0x039BCD50 FSUB S22, S16, S19
	0x039BCD54 FADD S6, S6, S17
	0x039BCD58 FADD S16, S16, S19
	0x039BCD5C FSUB S17, S5, S0
	0x039BCD60 FADD S1, S1, S3
	0x039BCD64 FCSEL S3, S23, S20, GT
	0x039BCD68 FCMP S18, S21
	0x039BCD6C FMOV S19, W31
	0x039BCD70 FADD S2, S2, S4
	0x039BCD74 FADD S0, S0, S5
	0x039BCD78 FCSEL S4, S18, S21, GT
	0x039BCD7C FCMP S17, S22
	0x039BCD80 FSUB S5, S19, S3
	0x039BCD84 STR S17, [X31 + 0x1C]
	0x039BCD88 FCSEL S17, S17, S22, GT
	0x039BCD8C FMUL S5, S5, S10
	0x039BCD90 MOV V15.16B, V18.16B
	0x039BCD94 FSUB S18, S19, S4
	0x039BCD98 FCMP S1, S6
	0x039BCD9C FSUB S19, S19, S17
	0x039BCDA0 FADD S3, S3, S5
	0x039BCDA4 FMUL S18, S18, S10
	0x039BCDA8 FCSEL S1, S1, S6, MI
	0x039BCDAC FCMP S2, S7
	0x039BCDB0 FMUL S6, S19, S10
	0x039BCDB4 FSUB S3, S3, S5
	0x039BCDB8 ADRP X23, 0xA1C000
	0x039BCDBC FADD S4, S4, S18
	0x039BCDC0 FCSEL S2, S2, S7, MI
	0x039BCDC4 FCMP S0, S16
	0x039BCDC8 FADD S5, S17, S6
	0x039BCDCC FSUB S1, S1, S3
	0x039BCDD0 LDR V14, [X22 + 0x30]
	0x039BCDD4 LDRB W8, [X23 + 0xABE]
	0x039BCDD8 FCSEL S0, S0, S16, MI
	0x039BCDDC FSUB S4, S4, S18
	0x039BCDE0 FSUB S8, S5, S6
	0x039BCDE4 FMUL S5, S1, S10
	0x039BCDE8 FSUB S2, S2, S4
	0x039BCDEC FSUB S11, S0, S8
	0x039BCDF0 FADD S0, S3, S5
	0x039BCDF4 FMUL S1, S2, S10
	0x039BCDF8 STP S0, S5, [X31 + 0xC]
	0x039BCDFC FSUB S0, S0, S5
	0x039BCE00 FADD S12, S4, S1
	0x039BCE04 FSUB S9, S0, S23
	0x039BCE08 STR S23, [X31 + 0x14]
	0x039BCE0C CBNZ W8, 0x39BCE2C
	0x039BCE10 ADRP X0, 0x737000
	0x039BCE14 LDR X0, [X0 + 0x5A8]
	0x039BCE18 MOV V13.16B, V1.16B
	0x039BCE1C BL 0x1C16CF4
	0x039BCE20 MOV V1.16B, V13.16B
	0x039BCE24 MOVZ W8, 0x1
	0x039BCE28 STRB W8, [X23 + 0xABE]
	0x039BCE2C ADRP X24, 0x737000
	0x039BCE30 LDR X24, [X24 + 0x5A8]
	0x039BCE34 FMUL S13, S11, S10
	0x039BCE38 FSUB S10, S12, S1
	0x039BCE3C FDIV S14, S9, S14
	0x039BCE40 LDR X0, [X24]
	0x039BCE44 MOV V9.16B, V12.16B
	0x039BCE48 STR S1, [X31 + 0x18]
	0x039BCE4C LDR W8, [X0 + 0xE0]
	0x039BCE50 CBZ W8, 0x39BCE5C
	0x039BCE54 MOV W8, W31
	0x039BCE58 B 0x39BCE6C
	0x039BCE5C BL 0x1C16DFC
	0x039BCE60 LDRB W8, [X23 + 0xABE]
	0x039BCE64 CMP W8, 0x0
	0x039BCE68 CSET W8, EQ
	0x039BCE6C MOVZ W9, 0x7F800000
	0x039BCE70 FRINTP S0, S14
	0x039BCE74 FMOV S1, W9
	0x039BCE78 FCVTPS W10, S14
	0x039BCE7C FCMP S0, S1
	0x039BCE80 MOVZ W9, 0x80000000
	0x039BCE84 CSEL W9, W9, W10, EQ
	0x039BCE88 STR W9, [X21]
	0x039BCE8C LDR V11, [X22 + 0x30]
	0x039BCE90 FADD S12, S8, S13
	0x039BCE94 FSUB S8, S10, S15
	0x039BCE98 CBZ W8, 0x39BCEB0
	0x039BCE9C ADRP X0, 0x737000
	0x039BCEA0 LDR X0, [X0 + 0x5A8]
	0x039BCEA4 BL 0x1C16CF4
	0x039BCEA8 MOVZ W8, 0x1
	0x039BCEAC STRB W8, [X23 + 0xABE]
	0x039BCEB0 LDR X0, [X24]
	0x039BCEB4 FSUB S14, S12, S13
	0x039BCEB8 FDIV S8, S8, S11
	0x039BCEBC LDR W8, [X0 + 0xE0]
	0x039BCEC0 CBZ W8, 0x39BCECC
	0x039BCEC4 MOV W8, W31
	0x039BCEC8 B 0x39BCEDC
	0x039BCECC BL 0x1C16DFC
	0x039BCED0 LDRB W8, [X23 + 0xABE]
	0x039BCED4 CMP W8, 0x0
	0x039BCED8 CSET W8, EQ
	0x039BCEDC MOVZ W9, 0x7F800000
	0x039BCEE0 FRINTP S0, S8
	0x039BCEE4 FMOV S1, W9
	0x039BCEE8 FCVTPS W10, S8
	0x039BCEEC FCMP S0, S1
	0x039BCEF0 MOVZ W9, 0x80000000
	0x039BCEF4 CSEL W9, W9, W10, EQ
	0x039BCEF8 STR W9, [X21 + 0x4]
	0x039BCEFC LDR V0, [X31 + 0x1C]
	0x039BCF00 LDR V8, [X22 + 0x30]
	0x039BCF04 FSUB S10, S14, S0
	0x039BCF08 MOV V14.16B, V0.16B
	0x039BCF0C CBZ W8, 0x39BCF24
	0x039BCF10 ADRP X0, 0x737000
	0x039BCF14 LDR X0, [X0 + 0x5A8]
	0x039BCF18 BL 0x1C16CF4
	0x039BCF1C MOVZ W8, 0x1
	0x039BCF20 STRB W8, [X23 + 0xABE]
	0x039BCF24 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D9
	003 Move [X31+72], D8
	004 Move [X31+80], X29
	005 Move [X31+88], X30
	006 Move [X31+96], X28
	007 Move [X31+104], X27
	008 Move [X31+112], X26
	009 Move [X31+120], X25
	010 Move [X31+128], X24
	011 Move [X31+136], X23
	012 Move [X31+144], X22
	013 Move [X31+152], X21
	014 Move [X31+160], X20
	015 Move [X31+168], X19
	016 Move X21, 0xA26000
	017 Move W8, [X21+3218]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0x738000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x797000
	028 Move X0, [X0+1192]
	029 Call 0x1C17CF4
	030 Move X0, 0x797000
	031 Move X0, [X0+1136]
	032 Call 0x1C17CF4
	033 Move X0, 0x797000
	034 Move X0, [X0+1200]
	035 Call 0x1C17CF4
	036 Move X0, 0x797000
	037 Move X0, [X0+1152]
	038 Call 0x1C17CF4
	039 Move X0, 0x797000
	040 Move X0, [X0+1160]
	041 Call 0x1C17CF4
	042 Move X0, 0x797000
	043 Move X0, [X0+1168]
	044 Call 0x1C17CF4
	045 Move X0, 0x797000
	046 Move X0, [X0+1176]
	047 Call 0x1C17CF4
	048 Move X0, 0x797000
	049 Move X0, [X0+1184]
	050 Call 0x1C17CF4
	051 Move X0, 0x797000
	052 Move X0, [X0+1208]
	053 Call 0x1C17CF4
	054 Move X0, 0x797000
	055 Move X0, [X0+1216]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+3218], W8
	059 Move [X31+32], X31
	060 Move [X31+40], X31
	061 Move [X31+48], X31
	062 Compare X20, 0
	063 JumpIfEqual {490}
	064 Move X0, [X19+296]
	065 Compare X0, 0
	066 JumpIfEqual {490}
	067 Move X8, 0x797000
	068 Move X8, [X8+1136]
	069 Move X21, [X20+120]
	070 Move X2, [X8]
	071 Move X1, X21
	072 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {85}
	077 Move X0, [X19+296]
	078 Compare X0, 0
	079 JumpIfEqual {490}
	080 Move X8, 0x797000
	081 Move X8, [X8+1200]
	082 Move X1, X21
	083 Move X2, [X8]
	084 Call Dictionary`2<Object, Object>.Remove, X0, X1
	085 Move X2, [X19+312]
	086 Move X0, X19
	087 Move X1, X20
	088 Call ProbeReferenceVolume.CheckCompatibilityWithCollection, X0, X1, X2
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {279}
	093 Move X2, [X19+296]
	094 Move X0, X19
	095 Move X1, X20
	096 Call ProbeReferenceVolume.CheckCompatibilityWithCollection, X0, X1, X2
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {288}
	101 Move X0, [X19+296]
	102 Compare X0, 0
	103 JumpIfEqual {490}
	104 Move X8, 0x797000
	105 Move X8, [X8+1192]
	106 Move X1, X21
	107 Move X2, X20
	108 Move X3, [X8]
	109 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	110 Move W20, 1
	111 Move [X19+320], W20
	112 Move X21, 0xA26000
	113 Move W8, [X21+3259]
	114 Compare W8, 0
	115 JumpIfNotEqual {120}
	116 Move X0, 0x760000
	117 Move X0, [X0+1592]
	118 Call 0x1C17CF4
	119 Move [X21+3259], W20
	120 Move X20, 0xA26000
	121 Move W8, [X20+3258]
	122 Compare W8, 0
	123 JumpIfNotEqual {129}
	124 Move X0, 0x760000
	125 Move X0, [X0+1592]
	126 Call 0x1C17CF4
	127 Move W8, 1
	128 Move [X20+3258], W8
	129 Move X0, [X19+296]
	130 Compare X0, 0
	131 JumpIfEqual {490}
	132 Move X8, 0x760000
	133 Move X8, [X8+1592]
	134 Move X29, 0x797000
	135 Move X8, [X8]
	136 Move X8, [X8+184]
	137 Move X29, [X29+1152]
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 Move X1, [X29]
	140 Move W20, [X8+20]
	141 Call Dictionary`2<Object, Object>.get_Values, X0
	142 Compare X0, 0
	143 JumpIfEqual {490}
	144 Move X21, 0x797000
	145 Move X21, [X21+1184]
	146 Move X8, X22
	147 ShiftRight X8, 32
	148 And X8, X8, 0x7FFFFFFF
	149 Move W9, 0x2710
	150 Move X10, 0x2710
	151 Multiply W12, W22, W9
	152 Multiply W23, W20, W9
	153 Multiply X9, X8, X10
	154 Move X1, [X21]
	155 Or X25, X9, X12
	156 Move X9, 0xD8F0
	157 Move TEMP, 0x270F
	158 Not TEMP
	159 Move W11, TEMP
	160 NotImplemented "Instruction MOVK not yet implemented."
	161 Multiply W10, W22, W11
	162 Multiply X8, X8, X9
	163 Or X24, X8, X10
	164 Add X8, X31, 8
	165 Multiply W22, W20, W11
	166 Call ValueCollection<Object, Object>.GetEnumerator, X0
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 Move X8, [X31+24]
	169 Move X27, 0x797000
	170 Move X27, [X27+1168]
	171 Add X26, X19, 104
	172 Move W28, 1
	173 NotImplemented "Instruction MOVI not yet implemented."
	174 Move [X31+2], V0
	175 Move [X31+48], X8
	176 Move S9, 0.5
	177 Move X1, [X27]
	178 Add X0, X31, 32
	179 Call Enumerator<Object, Object>.MoveNext, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {300}
	184 Move X8, [X31+48]
	185 Compare X8, 0
	186 JumpIfEqual {488}
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Move W10, [X8+84]
	189 Move X11, X25
	190 ShiftRight X11, 32
	191 And X11, X11, 0x7FFFFFFF
	192 Move X12, [X8+64]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction CSEL not yet implemented."
	195 Move X9, X9
	196 ShiftRight X9, 32
	197 And X9, X9, 0x7FFFFFFF
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CSEL not yet implemented."
	200 Move W11, [X8+72]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CSEL not yet implemented."
	203 Move X10, X24
	204 ShiftRight X10, 32
	205 And X10, X10, 0x7FFFFFFF
	206 NotImplemented "Instruction BFM not yet implemented."
	207 Move X9, X12
	208 ShiftRight X9, 32
	209 And X9, X9, 0x7FFFFFFF
	210 NotImplemented "Instruction CMP not yet implemented."
	211 NotImplemented "Instruction CSEL not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 NotImplemented "Instruction CSEL not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction CSEL not yet implemented."
	216 NotImplemented "Instruction BFM not yet implemented."
	217 Move TEMP, X28
	218 And TEMP, TEMP, 1
	219 Compare TEMP, 1
	220 JumpIfNotEqual {226}
	221 Move X9, [X8+104]
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 Move W28, W31
	224 Move [X26+16], X9
	225 Move [X26], V0
	226 Move V1, [X8+96]
	227 Move V3, [X8+108]
	228 Move V5, [X19+112]
	229 Move V7, [X19+124]
	230 Move V0, [X8+88]
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 Move V4, [X19+104]
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 Subtract S17, S1, S3
	235 Subtract S19, S5, S7
	236 Subtract V16, V0, V2
	237 Subtract V18, V4, V6
	238 Add V4, V4, V6
	239 Add S5, S5, S7
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Add V0, V0, V2
	242 Add S1, S1, S3
	243 NotImplemented "Instruction INVALID not yet implemented."
	244 NotImplemented "Instruction INVALID not yet implemented."
	245 NotImplemented "Instruction FCSEL not yet implemented."
	246 NotImplemented "Instruction FCMP not yet implemented."
	247 NotImplemented "Instruction INVALID not yet implemented."
	248 NotImplemented "Instruction INVALID not yet implemented."
	249 NotImplemented "Instruction FCSEL not yet implemented."
	250 Subtract V3, V3, V2
	251 Subtract S4, S4, S6
	252 NotImplemented "Instruction INVALID not yet implemented."
	253 Multiply S4, S4, S9
	254 Add V2, V2, V3
	255 Add S5, S6, S4
	256 Subtract V6, V2, V3
	257 Add V2, V3, V2
	258 Subtract S3, S5, S4
	259 NotImplemented "Instruction INVALID not yet implemented."
	260 Add S4, S4, S5
	261 NotImplemented "Instruction INVALID not yet implemented."
	262 NotImplemented "Instruction FCMP not yet implemented."
	263 NotImplemented "Instruction INVALID not yet implemented."
	264 NotImplemented "Instruction INVALID not yet implemented."
	265 NotImplemented "Instruction FCSEL not yet implemented."
	266 NotImplemented "Instruction FCMP not yet implemented."
	267 NotImplemented "Instruction FCSEL not yet implemented."
	268 Subtract V0, V0, V6
	269 Subtract S1, S1, S2
	270 NotImplemented "Instruction INVALID not yet implemented."
	271 Multiply S1, S1, S9
	272 Move W28, W31
	273 Move [X19+116], D0
	274 Add V0, V6, V0
	275 Move [X19+124], S1
	276 Add S1, S2, S1
	277 Move [X19+104], D0
	278 Move [X19+112], S1
	279 Move X8, 0x738000
	280 Move X8, [X8+2600]
	281 Move X0, [X8]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X8, 0x797000
	287 Move X8, [X8+1208]
	288 Move X8, 0x738000
	289 Move X8, [X8+2600]
	290 Move X0, [X8]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Move X8, 0x797000
	296 Move X8, [X8+1216]
	297 Move X0, [X8]
	298 Move X1, X31
	299 Call Debug.LogError, X0
	300 Move X8, 0x797000
	301 Move X8, [X8+1160]
	302 Add X0, X31, 32
	303 Move X1, [X8]
	304 Call Enumerator<Object, Object>.Dispose, X0
	305 Move X0, [X19+312]
	306 Compare X0, 0
	307 JumpIfEqual {490}
	308 Move X1, [X29]
	309 Call Dictionary`2<Object, Object>.get_Values, X0
	310 Compare X0, 0
	311 JumpIfEqual {490}
	312 Move X1, [X21]
	313 Add X8, X31, 8
	314 Call ValueCollection<Object, Object>.GetEnumerator, X0
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 Move X8, [X31+24]
	317 NotImplemented "Instruction MOVI not yet implemented."
	318 Move S9, 0.5
	319 Move [X31+2], V0
	320 Move [X31+48], X8
	321 Move X1, [X27]
	322 Add X0, X31, 32
	323 Call Enumerator<Object, Object>.MoveNext, X0
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {423}
	328 Move X8, [X31+48]
	329 Compare X8, 0
	330 JumpIfEqual {489}
	331 NotImplemented "Instruction LDUR not yet implemented."
	332 Move W10, [X8+84]
	333 Move X11, X25
	334 ShiftRight X11, 32
	335 And X11, X11, 0x7FFFFFFF
	336 Move X12, [X8+64]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 NotImplemented "Instruction CSEL not yet implemented."
	339 Move X9, X9
	340 ShiftRight X9, 32
	341 And X9, X9, 0x7FFFFFFF
	342 NotImplemented "Instruction CMP not yet implemented."
	343 NotImplemented "Instruction CSEL not yet implemented."
	344 Move W11, [X8+72]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 NotImplemented "Instruction CSEL not yet implemented."
	347 Move X10, X24
	348 ShiftRight X10, 32
	349 And X10, X10, 0x7FFFFFFF
	350 NotImplemented "Instruction BFM not yet implemented."
	351 Move X9, X12
	352 ShiftRight X9, 32
	353 And X9, X9, 0x7FFFFFFF
	354 NotImplemented "Instruction CMP not yet implemented."
	355 NotImplemented "Instruction CSEL not yet implemented."
	356 NotImplemented "Instruction CMP not yet implemented."
	357 NotImplemented "Instruction CSEL not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 NotImplemented "Instruction CSEL not yet implemented."
	360 NotImplemented "Instruction BFM not yet implemented."
	361 Move TEMP, X28
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {370}
	365 Move X9, [X8+104]
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 Move W28, W31
	368 Move [X26+16], X9
	369 Move [X26], V0
	370 Move V1, [X8+96]
	371 Move V3, [X8+108]
	372 Move V5, [X19+112]
	373 Move V7, [X19+124]
	374 Move V0, [X8+88]
	375 NotImplemented "Instruction LDUR not yet implemented."
	376 Move V4, [X19+104]
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 Subtract S17, S1, S3
	379 Subtract S19, S5, S7
	380 Subtract V16, V0, V2
	381 Subtract V18, V4, V6
	382 Add V4, V4, V6
	383 Add S5, S5, S7
	384 NotImplemented "Instruction FCMP not yet implemented."
	385 Add V0, V0, V2
	386 Add S1, S1, S3
	387 NotImplemented "Instruction INVALID not yet implemented."
	388 NotImplemented "Instruction INVALID not yet implemented."
	389 NotImplemented "Instruction FCSEL not yet implemented."
	390 NotImplemented "Instruction FCMP not yet implemented."
	391 NotImplemented "Instruction INVALID not yet implemented."
	392 NotImplemented "Instruction INVALID not yet implemented."
	393 NotImplemented "Instruction FCSEL not yet implemented."
	394 Subtract V3, V3, V2
	395 Subtract S4, S4, S6
	396 NotImplemented "Instruction INVALID not yet implemented."
	397 Multiply S4, S4, S9
	398 Add V2, V2, V3
	399 Add S5, S6, S4
	400 Subtract V6, V2, V3
	401 Add V2, V3, V2
	402 Subtract S3, S5, S4
	403 NotImplemented "Instruction INVALID not yet implemented."
	404 Add S4, S4, S5
	405 NotImplemented "Instruction INVALID not yet implemented."
	406 NotImplemented "Instruction FCMP not yet implemented."
	407 NotImplemented "Instruction INVALID not yet implemented."
	408 NotImplemented "Instruction INVALID not yet implemented."
	409 NotImplemented "Instruction FCSEL not yet implemented."
	410 NotImplemented "Instruction FCMP not yet implemented."
	411 NotImplemented "Instruction FCSEL not yet implemented."
	412 Subtract V0, V0, V6
	413 Subtract S1, S1, S2
	414 NotImplemented "Instruction INVALID not yet implemented."
	415 Multiply S1, S1, S9
	416 Move W28, W31
	417 Move [X19+116], D0
	418 Add V0, V6, V0
	419 Move [X19+124], S1
	420 Add S1, S2, S1
	421 Move [X19+104], D0
	422 Move [X19+112], S1
	423 Move X8, 0x797000
	424 Move X8, [X8+1160]
	425 Add X0, X31, 32
	426 Move X1, [X8]
	427 Call Enumerator<Object, Object>.Dispose, X0
	428 Move X10, [X19+64]
	429 Move W8, [X19+348]
	430 NotImplemented "Instruction CMP not yet implemented."
	431 NotImplemented "Instruction CSET not yet implemented."
	432 NotImplemented "Instruction CMP not yet implemented."
	433 NotImplemented "Instruction CSET not yet implemented."
	434 Compare X10, 0
	435 JumpIfEqual {464}
	436 Add X10, X19, 324
	437 Move X10, [X10]
	438 And W8, W8, W9
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move X9, X25
	441 ShiftRight X9, 32
	442 And X9, X9, 0x7FFFFFFF
	443 Move X10, X10
	444 ShiftRight X10, 32
	445 And X10, X10, 0x7FFFFFFF
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move W9, 1
	448 Move W10, [X19+332]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X9, [X19+336]
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Move W10, [X19+344]
	453 Move X11, X24
	454 ShiftRight X11, 32
	455 And X11, X11, 0x7FFFFFFF
	456 Move X9, X9
	457 ShiftRight X9, 32
	458 And X9, X9, 0x7FFFFFFF
	459 NotImplemented "Instruction CMP not yet implemented."
	460 NotImplemented "Instruction CSET not yet implemented."
	461 NotImplemented "Instruction CMP not yet implemented."
	462 NotImplemented "Instruction CSET not yet implemented."
	463 Or W9, W9, W10
	464 Move W9, 1
	465 Or W8, W9, W8
	466 Add X9, X19, 324
	467 Move [X19+348], W8
	468 Move [X9], X25
	469 Move [X9+8], W23
	470 Move [X19+336], X24
	471 Move [X19+344], W22
	472 Move X20, [X31+160]
	473 Move X19, [X31+168]
	474 Move X22, [X31+144]
	475 Move X21, [X31+152]
	476 Move X24, [X31+128]
	477 Move X23, [X31+136]
	478 Move X26, [X31+112]
	479 Move X25, [X31+120]
	480 Move X28, [X31+96]
	481 Move X27, [X31+104]
	482 Move X29, [X31+80]
	483 Move X30, [X31+88]
	484 Move D9, [X31+64]
	485 Move D8, [X31+72]
	486 Add X31, X31, 176
	487 Return 
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Call 0x1C17F20
	491 Move X20, X0
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move X0, X20
	494 Call 0x3EB2AD0
	495 Move X21, [X0]
	496 Call 0x3EB2AE0
	497 Move X8, 0x797000
	498 Move X8, [X8+1160]
	499 Add X0, X31, 32
	500 Move X1, [X8]
	501 Call Enumerator<Object, Object>.Dispose, X0
	502 Compare X21, 0
	503 JumpIfEqual {428}
	504 Move X0, X21
	505 Call 0x1C17F18
	506 Move X21, X31
	507 Move X20, X0
	508 Move X8, 0x797000
	509 Move X8, [X8+1160]
	510 Move X1, [X8]
	511 Add X0, X31, 32
	512 Call Enumerator<Object, Object>.Dispose, X0
	513 Compare X21, 0
	514 JumpIfEqual {544}
	515 Move X0, X21
	516 Call 0x1C17F18
	517 Move X20, X0
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X0, X20
	520 Call 0x3EB2AD0
	521 Move X8, [X0]
	522 Move [X31], X8
	523 Call 0x3EB2AE0
	524 Move X8, 0x797000
	525 Move X8, [X8+1160]
	526 Add X0, X31, 32
	527 Move X1, [X8]
	528 Call Enumerator<Object, Object>.Dispose, X0
	529 Move X8, [X31]
	530 Compare X8, 0
	531 JumpIfEqual {305}
	532 Move X0, [X31]
	533 Call 0x1C17F18
	534 Move [X31], X31
	535 Move X20, X0
	536 Move X8, 0x797000
	537 Move X8, [X8+1160]
	538 Move X1, [X8]
	539 Add X0, X31, 32
	540 Call Enumerator<Object, Object>.Dispose, X0
	541 Move X8, [X31]
	542 Compare X8, 0
	543 JumpIfNotEqual {546}
	544 Move X0, X20
	545 Call 0x1D2D690
	546 Move X0, [X31]
	547 Call 0x1C17F18
	548 Call 0x1991590

Method: System.Void AddPendingAssetRemoval(UnityEngine.Rendering.ProbeVolumeAsset asset)

Disassembly:
	0x039BCF28 FDIV S8, S10, S8
	0x039BCF2C LDR W8, [X0 + 0xE0]
	0x039BCF30 CBZ W8, 0x39BCF3C
	0x039BCF34 MOV W8, W31
	0x039BCF38 B 0x39BCF4C
	0x039BCF3C BL 0x1C16DFC
	0x039BCF40 LDRB W8, [X23 + 0xABE]
	0x039BCF44 CMP W8, 0x0
	0x039BCF48 CSET W8, EQ
	0x039BCF4C MOVZ W9, 0x7F800000
	0x039BCF50 FRINTP S0, S8
	0x039BCF54 FMOV S1, W9
	0x039BCF58 FCMP S0, S1
	0x039BCF5C LDP S1, S0, [X31 + 0xC]
	0x039BCF60 FCVTPS W10, S8
	0x039BCF64 MOVZ W9, 0x80000000
	0x039BCF68 CSEL W9, W9, W10, EQ
	0x039BCF6C STR W9, [X21 + 0x8]
	0x039BCF70 FADD S0, S0, S1
	0x039BCF74 LDR V1, [X31 + 0x14]
	0x039BCF78 LDR V8, [X22 + 0x30]
	0x039BCF7C FSUB S10, S0, S1
	0x039BCF80 CBZ W8, 0x39BCF98
	0x039BCF84 ADRP X0, 0x737000
	0x039BCF88 LDR X0, [X0 + 0x5A8]
	0x039BCF8C BL 0x1C16CF4
	0x039BCF90 MOVZ W8, 0x1
	0x039BCF94 STRB W8, [X23 + 0xABE]
	0x039BCF98 LDR X0, [X24]
	0x039BCF9C LDR V0, [X31 + 0x18]
	0x039BCFA0 FDIV S8, S10, S8
	0x039BCFA4 LDR W8, [X0 + 0xE0]
	0x039BCFA8 FADD S11, S0, S9
	0x039BCFAC CBZ W8, 0x39BCFB8
	0x039BCFB0 MOV W8, W31
	0x039BCFB4 B 0x39BCFC8
	0x039BCFB8 BL 0x1C16DFC
	0x039BCFBC LDRB W8, [X23 + 0xABE]
	0x039BCFC0 CMP W8, 0x0
	0x039BCFC4 CSET W8, EQ
	0x039BCFC8 MOVZ W10, 0x7F800000
	0x039BCFCC LDR W11, [X21]
	0x039BCFD0 FRINTP S0, S8
	0x039BCFD4 FMOV S1, W10
	0x039BCFD8 FCVTPS W9, S8
	0x039BCFDC FCMP S0, S1
	0x039BCFE0 ORR W10, W31, 0x80000001
	0x039BCFE4 CSINC W9, W10, W9, EQ
	0x039BCFE8 SUB W9, W9, W11
	0x039BCFEC STR W9, [X20]
	0x039BCFF0 LDR V8, [X22 + 0x30]
	0x039BCFF4 FSUB S10, S11, S15
	0x039BCFF8 CBZ W8, 0x39BD010
	0x039BCFFC ADRP X0, 0x737000
	0x039BD000 LDR X0, [X0 + 0x5A8]
	0x039BD004 BL 0x1C16CF4
	0x039BD008 MOVZ W8, 0x1
	0x039BD00C STRB W8, [X23 + 0xABE]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA26000
	007 Move W8, [X21+3219]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x797000
	015 Move X0, [X0+1136]
	016 Call 0x1C17CF4
	017 Move X0, 0x797000
	018 Move X0, [X0+1200]
	019 Call 0x1C17CF4
	020 Move X0, 0x797000
	021 Move X0, [X0+1224]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3219], W8
	025 Compare X19, 0
	026 JumpIfEqual {79}
	027 Move X0, [X20+296]
	028 Compare X0, 0
	029 JumpIfEqual {79}
	030 Move X22, 0x797000
	031 Move X22, [X22+1136]
	032 Move X21, [X19+120]
	033 Move X2, [X22]
	034 Move X1, X21
	035 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {48}
	040 Move X0, [X20+296]
	041 Compare X0, 0
	042 JumpIfEqual {79}
	043 Move X8, 0x797000
	044 Move X8, [X8+1200]
	045 Move X1, X21
	046 Move X2, [X8]
	047 Call Dictionary`2<Object, Object>.Remove, X0, X1
	048 Move X0, [X20+312]
	049 Compare X0, 0
	050 JumpIfEqual {79}
	051 Move X2, [X22]
	052 Move X1, X21
	053 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {73}
	058 Move X0, [X20+304]
	059 Compare X0, 0
	060 JumpIfEqual {79}
	061 Move X8, 0x797000
	062 Move X8, [X8+1224]
	063 Move X1, X21
	064 Move X2, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X3, [X8]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	072 Return 
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void RemovePendingAsset(UnityEngine.Rendering.ProbeVolumeAsset asset)

Disassembly:
	0x039BD010 LDR X0, [X24]
	0x039BD014 FADD S9, S13, S12
	0x039BD018 FDIV S8, S10, S8
	0x039BD01C LDR W8, [X0 + 0xE0]
	0x039BD020 CBZ W8, 0x39BD02C
	0x039BD024 MOV W8, W31
	0x039BD028 B 0x39BD03C
	0x039BD02C BL 0x1C16DFC
	0x039BD030 LDRB W8, [X23 + 0xABE]
	0x039BD034 CMP W8, 0x0
	0x039BD038 CSET W8, EQ
	0x039BD03C MOVZ W10, 0x7F800000
	0x039BD040 LDR W11, [X21 + 0x4]
	0x039BD044 FRINTP S0, S8
	0x039BD048 FMOV S1, W10
	0x039BD04C FCVTPS W9, S8
	0x039BD050 FCMP S0, S1
	0x039BD054 ORR W10, W31, 0x80000001
	0x039BD058 CSINC W9, W10, W9, EQ
	0x039BD05C SUB W9, W9, W11
	0x039BD060 STR W9, [X20 + 0x4]
	0x039BD064 LDR V8, [X22 + 0x30]
	0x039BD068 FSUB S9, S9, S14
	0x039BD06C CBZ W8, 0x39BD084
	0x039BD070 ADRP X0, 0x736000
	0x039BD074 LDR X0, [X0 + 0x5A8]
	0x039BD078 BL 0x1C16CF4
	0x039BD07C MOVZ W8, 0x1
	0x039BD080 STRB W8, [X23 + 0xABE]
	0x039BD084 LDR X0, [X24]
	0x039BD088 ADRP X23, 0x794000
	0x039BD08C FDIV S8, S9, S8
	0x039BD090 LDR W8, [X0 + 0xE0]
	0x039BD094 LDR X23, [X23 + 0xF48]
	0x039BD098 CBNZ W8, 0x39BD0A0
	0x039BD09C BL 0x1C16DFC
	0x039BD0A0 MOVZ W9, 0x7F800000
	0x039BD0A4 LDR W10, [X21 + 0x8]
	0x039BD0A8 FRINTP S0, S8
	0x039BD0AC FMOV S1, W9
	0x039BD0B0 FCVTPS W8, S8
	0x039BD0B4 FCMP S0, S1
	0x039BD0B8 MOVZ W22, 0x80000000
	0x039BD0BC CSEL W8, W22, W8, EQ
	0x039BD0C0 SUB W8, W8, W10
	0x039BD0C4 ADD W21, W8, 0x1
	0x039BD0C8 STR W21, [X20 + 0x8]
	0x039BD0CC LDR X0, [X23]
	0x039BD0D0 LDR X20, [X20]
	0x039BD0D4 LDR W8, [X0 + 0xE0]
	0x039BD0D8 CBNZ W8, 0x39BD0E0
	0x039BD0DC BL 0x1C16DFC
	0x039BD0E0 SCVTF S1, W19
	0x039BD0E4 FMOV S0, 3
	0x039BD0E8 BL 0x3EB1B50
	0x039BD0EC MOVZ W9, 0x7F800000
	0x039BD0F0 FMOV S1, W9
	0x039BD0F4 FCVTZS W8, S0
	0x039BD0F8 FCMP S0, S1
	0x039BD0FC UBFM X10, X20, 0x20, 0x3F
	0x039BD100 CSEL W8, W22, W8, EQ
	0x039BD104 SDIV W9, W20, W8
	0x039BD108 SDIV W10, W10, W8
	0x039BD10C SDIV W8, W21, W8
	0x039BD110 LDP X20, X19, [X31 + 0xA0]
	0x039BD114 LDP X22, X21, [X31 + 0x90]
	0x039BD118 LDP X24, X23, [X31 + 0x80]
	0x039BD11C LDP X26, X25, [X31 + 0x70]
	0x039BD120 LDP X30, X27, [X31 + 0x60]
	0x039BD124 LDP D9, D8, [X31 + 0x50]
	0x039BD128 LDP D11, D10, [X31 + 0x40]
	0x039BD12C LDP D13, D12, [X31 + 0x30]
	0x039BD130 LDP D15, D14, [X31 + 0x20]
	0x039BD134 MUL W9, W10, W9
	0x039BD138 MUL W0, W9, W8
	0x039BD13C ADD X31, X31, 0xB0
	0x039BD140 RET
	0x039BD144 LDR W8, [X0 + 0x34]
	0x039BD148 SUB W1, W8, 0x1
	0x039BD14C B 0x39BD8BC
	0x039BD150 LDR V0, [X0 + 0x30]
	0x039BD154 RET
	0x039BD158 STP X30, X19, [X31 - 0x10]!
	0x039BD15C MOV X19, X0
	0x039BD160 BL 0x39BC984
	0x039BD164 MOV X0, X19
	0x039BD168 BL 0x39BC294
	0x039BD16C MOV X0, X19
	0x039BD170 LDP X30, X19, [X31], #0x10
	0x039BD174 B 0x39BC614
	0x039BD178 STP X29, X30, [X31 - 0x60]!
	0x039BD17C STP X28, X27, [X31 + 0x10]
	0x039BD180 STP X26, X25, [X31 + 0x20]
	0x039BD184 STP X24, X23, [X31 + 0x30]
	0x039BD188 STP X22, X21, [X31 + 0x40]
	0x039BD18C STP X20, X19, [X31 + 0x50]
	0x039BD190 ADRP X25, 0xA24000
	0x039BD194 ADRP X26, 0x795000
	0x039BD198 ADRP X20, 0x795000
	0x039BD19C ADRP X24, 0x736000
	0x039BD1A0 ADRP X23, 0x795000
	0x039BD1A4 ADRP X21, 0x795000
	0x039BD1A8 ADRP X27, 0x795000
	0x039BD1AC LDR X26, [X26 + 0x4F8]
	0x039BD1B0 LDRB W8, [X25 + 0xC9C]
	0x039BD1B4 LDR X20, [X20 + 0x500]
	0x039BD1B8 LDR X24, [X24 + 0x638]
	0x039BD1BC LDR X23, [X23 + 0x508]
	0x039BD1C0 LDR X21, [X21 + 0x510]
	0x039BD1C4 LDR X27, [X27 + 0x518]
	0x039BD1C8 MOV X19, X0
	0x039BD1CC TBNZ X8, 0x0, 0x39BD340
	0x039BD1D0 ADRP X0, 0x73B000
	0x039BD1D4 LDR X0, [X0 + 0x140]
	0x039BD1D8 BL 0x1C16CF4
	0x039BD1DC ADRP X0, 0x795000
	0x039BD1E0 LDR X0, [X0 + 0x520]
	0x039BD1E4 BL 0x1C16CF4
	0x039BD1E8 ADRP X0, 0x795000
	0x039BD1EC LDR X0, [X0 + 0x528]
	0x039BD1F0 BL 0x1C16CF4
	0x039BD1F4 ADRP X0, 0x795000
	0x039BD1F8 LDR X0, [X0 + 0x510]
	0x039BD1FC BL 0x1C16CF4
	0x039BD200 ADRP X0, 0x795000
	0x039BD204 LDR X0, [X0 + 0x530]
	0x039BD208 BL 0x1C16CF4
	0x039BD20C ADRP X0, 0x795000
	0x039BD210 LDR X0, [X0 + 0x508]
	0x039BD214 BL 0x1C16CF4
	0x039BD218 ADRP X0, 0x795000
	0x039BD21C LDR X0, [X0 + 0x538]
	0x039BD220 BL 0x1C16CF4
	0x039BD224 ADRP X0, 0x795000
	0x039BD228 LDR X0, [X0 + 0x540]
	0x039BD22C BL 0x1C16CF4
	0x039BD230 ADRP X0, 0x795000
	0x039BD234 LDR X0, [X0 + 0x548]
	0x039BD238 BL 0x1C16CF4
	0x039BD23C ADRP X0, 0x795000
	0x039BD240 LDR X0, [X0 + 0x550]
	0x039BD244 BL 0x1C16CF4
	0x039BD248 ADRP X0, 0x795000
	0x039BD24C LDR X0, [X0 + 0x558]
	0x039BD250 BL 0x1C16CF4
	0x039BD254 ADRP X0, 0x794000
	0x039BD258 LDR X0, [X0 + 0x100]
	0x039BD25C BL 0x1C16CF4
	0x039BD260 ADRP X0, 0x737000
	0x039BD264 LDR X0, [X0 + 0xE58]
	0x039BD268 BL 0x1C16CF4
	0x039BD26C ADRP X0, 0x795000
	0x039BD270 LDR X0, [X0 + 0x500]
	0x039BD274 BL 0x1C16CF4
	0x039BD278 ADRP X0, 0x795000
	0x039BD27C LDR X0, [X0 + 0x560]
	0x039BD280 BL 0x1C16CF4
	0x039BD284 ADRP X0, 0x795000
	0x039BD288 LDR X0, [X0 + 0x4F8]
	0x039BD28C BL 0x1C16CF4
	0x039BD290 ADRP X0, 0x795000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xA25000
	010 Move W8, [X21+3220]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x796000
	018 Move X0, [X0+1136]
	019 Call 0x1C17CF4
	020 Move X0, 0x796000
	021 Move X0, [X0+1200]
	022 Call 0x1C17CF4
	023 Move X0, 0x796000
	024 Move X0, [X0+1232]
	025 Call 0x1C17CF4
	026 Move X0, 0x796000
	027 Move X0, [X0+960]
	028 Call 0x1C17CF4
	029 Move X0, 0x796000
	030 Move X0, [X0+1008]
	031 Call 0x1C17CF4
	032 Move X0, 0x796000
	033 Move X0, [X0+832]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3220], W8
	037 Compare X20, 0
	038 JumpIfEqual {171}
	039 Move X0, [X19+312]
	040 Compare X0, 0
	041 JumpIfEqual {171}
	042 Move X8, 0x796000
	043 Move X8, [X8+1136]
	044 Move X21, [X20+120]
	045 Move X2, [X8]
	046 Move X1, X21
	047 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {60}
	052 Move X0, [X19+312]
	053 Compare X0, 0
	054 JumpIfEqual {171}
	055 Move X8, 0x796000
	056 Move X8, [X8+1200]
	057 Move X1, X21
	058 Move X2, [X8]
	059 Call Dictionary`2<Object, Object>.Remove, X0, X1
	060 Move X21, [X20+32]
	061 Compare X21, 0
	062 JumpIfEqual {171}
	063 Move X8, [X21+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X22, X31
	066 And X8, X8, 0
	067 Add X23, X21, 32
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X1, [X23]
	070 Move X0, X19
	071 Call ProbeReferenceVolume.RemoveCell, X0, X1
	072 Move W8, [X21+24]
	073 Add X22, X22, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, X20
	076 Move X1, X31
	077 Call Object.GetInstanceID, X0
	078 Move X8, [X19+568]
	079 Compare X8, 0
	080 JumpIfEqual {171}
	081 Move W9, [X8+24]
	082 Move W20, W0
	083 Subtract W21, W9, 1
	084 Move X23, 0x796000
	085 Move X24, 0x796000
	086 Move X25, 0x796000
	087 Move X23, [X23+1008]
	088 Move X24, [X24+960]
	089 Move X25, [X25+1232]
	090 Move X2, [X23]
	091 Move X0, X8
	092 Move W1, W21
	093 Call 0x2B41178, X0, X1
	094 Move X8, [X0]
	095 Compare X8, 0
	096 JumpIfEqual {171}
	097 Move W8, [X8+148]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X19+568]
	100 Compare X0, 0
	101 JumpIfEqual {171}
	102 Move X2, [X23]
	103 Move W1, W21
	104 Call 0x2B41178, X0, X1
	105 Move X8, [X0]
	106 Compare X8, 0
	107 JumpIfEqual {171}
	108 Move X8, [X8+24]
	109 Compare X8, 0
	110 JumpIfEqual {171}
	111 Move W8, [X8+40]
	112 Compare W8, 0
	113 JumpIfEqual {118}
	114 Move X0, [X19+568]
	115 Compare X0, 0
	116 JumpIfEqual {171}
	117 Move X22, [X19+600]
	118 Move X0, [X19+568]
	119 Compare X0, 0
	120 JumpIfEqual {171}
	121 Move X22, [X19+608]
	122 Move X2, [X23]
	123 Move W1, W21
	124 Call 0x2B41178, X0, X1
	125 Move X8, [X0]
	126 Compare X8, 0
	127 JumpIfEqual {171}
	128 Compare X22, 0
	129 JumpIfEqual {171}
	130 Move X1, [X8+24]
	131 Move X2, [X24]
	132 Move X0, X22
	133 Call 0x2B40D78, X0, X1
	134 Move X0, [X19+568]
	135 Compare X0, 0
	136 JumpIfEqual {171}
	137 Move X2, [X25]
	138 Move W1, W21
	139 Call 0x2B40DE0, X0, X1
	140 Subtract W21, W21, 1
	141 Move X8, [X19+568]
	142 Compare X8, 0
	143 JumpIfNotEqual {90}
	144 Move X0, [X19+576]
	145 Compare X0, 0
	146 JumpIfEqual {171}
	147 Move W8, [X0+24]
	148 Subtract W21, W8, 1
	149 Move X22, 0x796000
	150 Move X23, 0x796000
	151 Move X22, [X22+1008]
	152 Move X23, [X23+1232]
	153 Move X2, [X22]
	154 Move W1, W21
	155 Call 0x2B41178, X0, X1
	156 Move X8, [X0]
	157 Compare X8, 0
	158 JumpIfEqual {171}
	159 Move W8, [X8+148]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, [X19+576]
	162 Compare X0, 0
	163 JumpIfEqual {171}
	164 Move X2, [X23]
	165 Move W1, W21
	166 Call 0x2B40DE0, X0, X1
	167 Subtract W21, W21, 1
	168 Move X0, [X19+576]
	169 Compare X0, 0
	170 JumpIfNotEqual {153}
	171 Call 0x1C17F20
	172 Move X0, X19
	173 Call ProbeReferenceVolume.ClearDebugData, X0
	174 Move X0, X19
	175 Move X20, [X31+48]
	176 Move X19, [X31+56]
	177 Move X22, [X31+32]
	178 Move X21, [X31+40]
	179 Move X24, [X31+16]
	180 Move X23, [X31+24]
	181 Move X30, [X31+64]
	182 Move X25, [X31+72]
	183 Call ProbeReferenceVolume.RecomputeMinMaxLoadedCellPos, X0
	184 Return 
	185 Call 0x1C17F28

Method: System.Void PerformPendingIndexChangeAndInit()

Disassembly:
	0x039BD294 LDR X0, [X0 + 0x568]
	0x039BD298 BL 0x1C16CF4
	0x039BD29C ADRP X0, 0x795000
	0x039BD2A0 LDR X0, [X0 + 0x570]
	0x039BD2A4 BL 0x1C16CF4
	0x039BD2A8 ADRP X0, 0x795000
	0x039BD2AC LDR X0, [X0 + 0x578]
	0x039BD2B0 BL 0x1C16CF4
	0x039BD2B4 ADRP X0, 0x795000
	0x039BD2B8 LDR X0, [X0 + 0x580]
	0x039BD2BC BL 0x1C16CF4
	0x039BD2C0 ADRP X0, 0x795000
	0x039BD2C4 LDR X0, [X0 + 0x588]
	0x039BD2C8 BL 0x1C16CF4
	0x039BD2CC ADRP X0, 0x795000
	0x039BD2D0 LDR X0, [X0 + 0x590]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+348]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {16}
	007 Move X0, X19
	008 Call ProbeReferenceVolume.CleanupLoadedData, X0
	009 Move W1, [X19+368]
	010 Move W2, [X19+372]
	011 Move W3, [X19+376]
	012 Move X0, X19
	013 Call ProbeReferenceVolume.InitProbeReferenceVolume, X0, X1, X2, X3
	014 Move W8, 1
	015 Move [X19+348], W31
	016 Move [X19+349], W8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void SetMinBrickAndMaxSubdiv(System.Single minBrickSize, System.Int32 maxSubdiv)

Disassembly:
	0x039BD2D4 BL 0x1C16CF4
	0x039BD2D8 ADRP X0, 0x795000
	0x039BD2DC LDR X0, [X0 + 0x598]
	0x039BD2E0 BL 0x1C16CF4
	0x039BD2E4 ADRP X0, 0x736000
	0x039BD2E8 LDR X0, [X0 + 0x638]
	0x039BD2EC BL 0x1C16CF4
	0x039BD2F0 ADRP X0, 0x795000
	0x039BD2F4 LDR X0, [X0 + 0x5A0]
	0x039BD2F8 BL 0x1C16CF4
	0x039BD2FC ADRP X0, 0x795000
	0x039BD300 LDR X0, [X0 + 0x5A8]
	0x039BD304 BL 0x1C16CF4
	0x039BD308 ADRP X0, 0x795000
	0x039BD30C LDR X0, [X0 + 0x518]
	0x039BD310 BL 0x1C16CF4
	0x039BD314 ADRP X0, 0x795000
	0x039BD318 LDR X0, [X0 + 0x5B0]
	0x039BD31C BL 0x1C16CF4
	0x039BD320 ADRP X0, 0x795000
	0x039BD324 LDR X0, [X0 + 0x5B8]
	0x039BD328 BL 0x1C16CF4
	0x039BD32C ADRP X0, 0x795000
	0x039BD330 LDR X0, [X0 + 0x5C0]
	0x039BD334 BL 0x1C16CF4
	0x039BD338 MOVZ W8, 0x1
	0x039BD33C STRB W8, [X25 + 0xC9C]
	0x039BD340 LDR X0, [X26]
	0x039BD344 BL 0x1C16F10
	0x039BD348 LDR X1, [X20]
	0x039BD34C MOV X20, X0
	0x039BD350 BL 0x311FF7C
	0x039BD354 STR X20, [X19 + 0x58]
	0x039BD358 LDR X0, [X24]
	0x039BD35C MOVZ W1, 0x4
	0x039BD360 BL 0x1C16D6C
	0x039BD364 STR X0, [X19 + 0x60]
	0x039BD368 LDR X0, [X23]
	0x039BD36C BL 0x1C16F10
	0x039BD370 LDR X1, [X21]
	0x039BD374 MOV X20, X0
	0x039BD378 BL 0x2A12DD4
	0x039BD37C STR X20, [X19 + 0x80]
	0x039BD380 LDR X0, [X27]
	0x039BD384 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA1C000
	009 Move W8, [X21+1923]
	010 Move W19, W1
	011 Move V8, V0
	012 Move X20, X0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x737000
	016 Move X0, [X0+1440]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1923], W8
	020 Move X8, 0x737000
	021 Move X8, [X8+1440]
	022 Move X21, 0xA1C000
	023 Move W9, [X21+1939]
	024 Move X8, [X8]
	025 Move X8, [X8+184]
	026 Move V10, [X8]
	027 Move V9, [X8+8]
	028 Compare W9, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x738000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1939], W8
	035 Move X8, 0x738000
	036 Move X8, [X8+1448]
	037 Move X0, X20
	038 Move W1, W19
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Move X8, [X8]
	042 Move X8, [X8+184]
	043 Move V0, [X8]
	044 Move [X20+20], D10
	045 Move [X20+28], S9
	046 Move [X20+48], S8
	047 Move [X20+2], V0
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move D9, [X31+16]
	051 Move D8, [X31+24]
	052 Move V10, [X31+64]
	053 Call ProbeReferenceVolume.SetMaxSubdivision, X0, X1
	054 Return 

Method: System.Void LoadAsset(UnityEngine.Rendering.ProbeVolumeAsset asset)

Disassembly:
	0x039BD40C MOV X1, X20
	0x039BD410 MOV X2, X31
	0x039BD414 MOV W3, W31
	0x039BD418 MOV X21, X0
	0x039BD41C BL 0x2493C20
	0x039BD420 STR X21, [X19 + 0x88]
	0x039BD424 LDR X0, [X27]
	0x039BD428 LDR W8, [X0 + 0xE0]
	0x039BD42C CBNZ W8, 0x39BD438
	0x039BD430 BL 0x1C16DFC
	0x039BD434 LDR X0, [X27]
	0x039BD438 ADRP X9, 0x795000
	0x039BD43C ADRP X21, 0x795000
	0x039BD440 ADRP X27, 0x795000
	0x039BD444 ADRP X23, 0x795000
	0x039BD448 ADRP X24, 0x795000
	0x039BD44C ADRP X29, 0x795000
	0x039BD450 ADRP X28, 0x795000
	0x039BD454 LDR X9, [X9 + 0x588]
	0x039BD458 LDR X21, [X21 + 0x570]
	0x039BD45C LDR X27, [X27 + 0x530]
	0x039BD460 LDR X23, [X23 + 0x528]
	0x039BD464 LDR X24, [X24 + 0x5C0]
	0x039BD468 LDR X29, [X29 + 0x568]
	0x039BD46C LDR X28, [X28 + 0x560]
	0x039BD470 LDR X8, [X0 + 0xB8]
	0x039BD474 ADRP X22, 0x795000
	0x039BD478 ADRP X26, 0x795000
	0x039BD47C ADRP X25, 0x795000
	0x039BD480 LDR X20, [X8 + 0x10]
	0x039BD484 LDR X22, [X22 + 0x550]
	0x039BD488 LDR X26, [X26 + 0x540]
	0x039BD48C LDR X25, [X25 + 0x558]
	0x039BD490 CBNZ X20, 0x39BD530
	0x039BD494 LDR W8, [X0 + 0xE0]
	0x039BD498 CBZ W8, 0x39BD4A8
	0x039BD49C ADRP X23, 0x795000
	0x039BD4A0 LDR X23, [X23 + 0x518]
	0x039BD4A4 B 0x39BD4B8
	0x039BD4A8 BL 0x1C16DFC
	0x039BD4AC ADRP X23, 0x795000
	0x039BD4B0 LDR X23, [X23 + 0x518]
	0x039BD4B4 LDR X0, [X23]
	0x039BD4B8 ADRP X9, 0x795000
	0x039BD4BC LDR X8, [X0 + 0xB8]
	0x039BD4C0 LDR X9, [X9 + 0x5B8]
	0x039BD4C4 LDR X21, [X8]
	0x039BD4C8 LDR X0, [X9]
	0x039BD4CC BL 0x1C16F10
	0x039BD4D0 ADRP X8, 0x795000
	0x039BD4D4 LDR X8, [X8 + 0x5A8]
	0x039BD4D8 MOV X1, X21
	0x039BD4DC MOV X3, X31
	0x039BD4E0 MOV X20, X0
	0x039BD4E4 LDR X2, [X8]
	0x039BD4E8 BL 0x2725C6C
	0x039BD4EC LDR X8, [X23]
	0x039BD4F0 ADRP X28, 0x795000
	0x039BD4F4 ADRP X29, 0x795000
	0x039BD4F8 ADRP X24, 0x795000
	0x039BD4FC LDR X8, [X8 + 0xB8]
	0x039BD500 ADRP X23, 0x795000
	0x039BD504 ADRP X27, 0x795000
	0x039BD508 ADRP X21, 0x795000
	0x039BD50C STR X20, [X8 + 0x10]
	0x039BD510 ADRP X9, 0x795000
	0x039BD514 LDR X28, [X28 + 0x560]
	0x039BD518 LDR X29, [X29 + 0x568]
	0x039BD51C LDR X24, [X24 + 0x5C0]
	0x039BD520 LDR X23, [X23 + 0x528]
	0x039BD524 LDR X27, [X27 + 0x530]
	0x039BD528 LDR X21, [X21 + 0x570]
	0x039BD52C LDR X9, [X9 + 0x588]
	0x039BD530 LDR X0, [X9]
	0x039BD534 BL 0x1C16F10
	0x039BD538 LDR X4, [X21]
	0x039BD53C MOV X1, X20
	0x039BD540 MOV X2, X31
	0x039BD544 MOV W3, W31
	0x039BD548 MOV X21, X0
	0x039BD54C BL 0x2493C20
	0x039BD550 ADRP X8, 0xFFFFFFFFFD12F000
	0x039BD554 LDR V0, [X8 + 0xEA]
	0x039BD558 MOVI V1.2S, 0x80, 0x18
	0x039BD55C STR X21, [X19 + 0x90]
	0x039BD560 STR D1, [X19 + 0x108]
	0x039BD564 STUR V0, [X19 + 0xF8]
	0x039BD568 LDR X0, [X27]
	0x039BD56C BL 0x1C16F10
	0x039BD570 LDR X1, [X23]
	0x039BD574 MOV X20, X0
	0x039BD578 BL 0x2AA4804
	0x039BD57C STR X20, [X19 + 0x128]
	0x039BD580 LDR X0, [X27]
	0x039BD584 BL 0x1C16F10

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xA25000
	008 Move W8, [X21+3221]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x737000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x796000
	019 Move X0, [X0+1240]
	020 Call 0x1C17CF4
	021 Move X0, 0x796000
	022 Move X0, [X0+1248]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3221], W8
	026 Compare X19, 0
	027 JumpIfEqual {69}
	028 Move W8, [X19+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X19
	031 Move X1, X31
	032 Call ProbeVolumeAsset.get_minBrickSize, X0
	033 Move X0, X19
	034 Move X1, X31
	035 Move V8, V0
	036 Call ProbeVolumeAsset.get_maxSubdivision, X0
	037 Move W1, W0
	038 Move X0, X20
	039 Move V0, V8
	040 Call ProbeReferenceVolume.SetMinBrickAndMaxSubdiv, X0, V0, X1
	041 Move W8, [X19+116]
	042 Move W9, [X20+236]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X20
	045 Move [X20+236], W8
	046 Call ProbeReferenceVolume.AllocateTemporaryDataLocation, X0
	047 Move X0, X20
	048 Call ProbeReferenceVolume.ClearDebugData, X0
	049 Move X8, [X19+32]
	050 Compare X8, 0
	051 JumpIfEqual {69}
	052 Move X22, X31
	053 Move W9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X8, X22
	057 Move X21, [X8+32]
	058 Move X0, X19
	059 Move X1, X31
	060 Call Object.GetInstanceID, X0
	061 Move W2, W0
	062 Move X0, X20
	063 Move X1, X21
	064 Call ProbeReferenceVolume.AddCell, X0, X1, X2
	065 Move X8, [X19+32]
	066 Add X22, X22, 1
	067 Compare X8, 0
	068 JumpIfNotEqual {53}
	069 Call 0x1C17F20
	070 Move X8, 0x796000
	071 Move X9, 0x796000
	072 Move X1, [X19+120]
	073 Move X8, [X8+1248]
	074 Move X9, [X9+1240]
	075 Move X3, X31
	076 Move X0, [X8]
	077 Move X2, [X9]
	078 Call String.Concat, X0, X1, X2
	079 Move X8, 0x737000
	080 Move X8, [X8+2600]
	081 Move X19, X0
	082 Move X8, [X8]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X19
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+8]
	094 Move X1, X31
	095 Move V8, [X31+48]
	096 Call Debug.LogWarning, X0
	097 Return 
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+8]
	103 Move V8, [X31+48]
	104 Return 
	105 Call 0x1C17F28

Method: System.Void PerformPendingLoading()

Disassembly:
	0x039BD614 ADRP X8, 0x73B000
	0x039BD618 LDR X8, [X8 + 0x140]
	0x039BD61C MOVZ W1, 0x7
	0x039BD620 LDR X0, [X8]
	0x039BD624 BL 0x1C16D6C
	0x039BD628 STR X0, [X19 + 0x198]
	0x039BD62C ADRP X8, 0x795000
	0x039BD630 LDR X8, [X8 + 0x590]
	0x039BD634 MOVZ W1, 0x6
	0x039BD638 LDR X0, [X8]
	0x039BD63C BL 0x1C16D6C
	0x039BD640 STR X0, [X19 + 0x1C8]
	0x039BD644 ADRP X8, 0x794000
	0x039BD648 LDR X8, [X8 + 0x100]
	0x039BD64C MOV W1, W31
	0x039BD650 LDR X0, [X8]
	0x039BD654 BL 0x1C16D6C
	0x039BD658 STR X0, [X19 + 0x1D0]
	0x039BD65C ADRP X8, 0x737000
	0x039BD660 LDR X8, [X8 + 0xE58]
	0x039BD664 MOV W1, W31
	0x039BD668 LDR X0, [X8]
	0x039BD66C BL 0x1C16D6C
	0x039BD670 STR X0, [X19 + 0x1D8]
	0x039BD674 ADRP X8, 0x795000
	0x039BD678 LDR X8, [X8 + 0x538]
	0x039BD67C LDR X0, [X8]
	0x039BD680 BL 0x1C16F10
	0x039BD684 ADRP X8, 0x795000
	0x039BD688 LDR X8, [X8 + 0x520]
	0x039BD68C MOV X20, X0
	0x039BD690 LDR X1, [X8]
	0x039BD694 BL 0x29CC180
	0x039BD698 STR X20, [X19 + 0x228]
	0x039BD69C LDR X0, [X22]
	0x039BD6A0 BL 0x1C16F10
	0x039BD6A4 LDR X1, [X26]
	0x039BD6A8 MOV X20, X0
	0x039BD6AC BL 0x2B3FB40
	0x039BD6B0 STR X20, [X19 + 0x238]
	0x039BD6B4 LDR X0, [X22]
	0x039BD6B8 BL 0x1C16F10
	0x039BD6BC LDR X1, [X26]
	0x039BD6C0 MOV X20, X0
	0x039BD6C4 BL 0x2B3FB40
	0x039BD6C8 STR X20, [X19 + 0x240]
	0x039BD6CC LDR X0, [X22]
	0x039BD6D0 BL 0x1C16F10
	0x039BD6D4 LDR X1, [X26]
	0x039BD6D8 MOV X20, X0
	0x039BD6DC BL 0x2B3FB40
	0x039BD6E0 STR X20, [X19 + 0x248]
	0x039BD6E4 LDR X0, [X22]
	0x039BD6E8 BL 0x1C16F10
	0x039BD6EC LDR X1, [X26]
	0x039BD6F0 MOV X20, X0
	0x039BD6F4 BL 0x2B3FB40
	0x039BD6F8 STR X20, [X19 + 0x250]
	0x039BD6FC LDR X0, [X25]
	0x039BD700 BL 0x1C16F10
	0x039BD704 ADRP X21, 0x795000
	0x039BD708 LDR X21, [X21 + 0x548]
	0x039BD70C MOV X20, X0
	0x039BD710 LDR X1, [X21]
	0x039BD714 BL 0x2B3FB40
	0x039BD718 STR X20, [X19 + 0x258]
	0x039BD71C LDR X0, [X25]
	0x039BD720 BL 0x1C16F10
	0x039BD724 LDR X1, [X21]
	0x039BD728 MOV X20, X0
	0x039BD72C BL 0x2B3FB40
	0x039BD730 STR X20, [X19 + 0x260]
	0x039BD734 LDR X0, [X25]
	0x039BD738 BL 0x1C16F10
	0x039BD73C LDR X1, [X21]
	0x039BD740 MOV X20, X0
	0x039BD744 BL 0x2B3FB40
	0x039BD748 STR X20, [X19 + 0x268]
	0x039BD74C LDR X0, [X25]
	0x039BD750 BL 0x1C16F10
	0x039BD754 LDR X1, [X21]
	0x039BD758 MOV X20, X0
	0x039BD75C BL 0x2B3FB40
	0x039BD760 MOV X0, X19
	0x039BD764 MOV X1, X31
	0x039BD768 STR X20, [X19 + 0x270]
	0x039BD76C BL 0x33BDD8C
	0x039BD770 ADRP X20, 0xA1B000
	0x039BD774 LDRB W8, [X20 + 0x783]
	0x039BD778 CBNZ W8, 0x39BD790
	0x039BD77C ADRP X0, 0x736000
	0x039BD780 LDR X0, [X0 + 0x5A0]
	0x039BD784 BL 0x1C16CF4
	0x039BD788 MOVZ W8, 0x1
	0x039BD78C STRB W8, [X20 + 0x783]
	0x039BD790 ADRP X8, 0x736000
	0x039BD794 LDR X8, [X8 + 0x5A0]
	0x039BD798 ADRP X20, 0xA1B000
	0x039BD79C LDR X8, [X8]
	0x039BD7A0 LDR X8, [X8 + 0xB8]
	0x039BD7A4 LDR V0, [X8]
	0x039BD7A8 LDR V1, [X8 + 0x8]
	0x039BD7AC STUR D0, [X19 + 0x14]
	0x039BD7B0 STR S1, [X19 + 0x1C]
	0x039BD7B4 LDRB W8, [X20 + 0x793]
	0x039BD7B8 CBNZ W8, 0x39BD7D0
	0x039BD7BC ADRP X0, 0x737000
	0x039BD7C0 LDR X0, [X0 + 0x5A8]
	0x039BD7C4 BL 0x1C16CF4
	0x039BD7C8 MOVZ W8, 0x1
	0x039BD7CC STRB W8, [X20 + 0x793]
	0x039BD7D0 ADRP X8, 0x737000
	0x039BD7D4 LDR X8, [X8 + 0x5A8]
	0x039BD7D8 LDP X22, X21, [X31 + 0x40]
	0x039BD7DC LDP X24, X23, [X31 + 0x30]
	0x039BD7E0 LDP X26, X25, [X31 + 0x20]
	0x039BD7E4 LDR X8, [X8]
	0x039BD7E8 LDP X28, X27, [X31 + 0x10]
	0x039BD7EC LDR X8, [X8 + 0xB8]
	0x039BD7F0 LDR V0, [X8]
	0x039BD7F4 MOVZ W8, 0x3F800000
	0x039BD7F8 STR W8, [X19 + 0x30]
	0x039BD7FC STR V0, [X19 + 0x2]
	0x039BD800 LDP X20, X19, [X31 + 0x50]
	0x039BD804 LDP X29, X30, [X31], #0x60
	0x039BD808 RET
	0x039BD80C SUB X31, X31, 0x70
	0x039BD810 STP X30, X21, [X31 + 0x50]
	0x039BD814 STP X20, X19, [X31 + 0x60]
	0x039BD818 LDRB W9, [X0 + 0x141]
	0x039BD81C MOV X19, X8
	0x039BD820 CBZ W9, 0x39BD898
	0x039BD824 MOVI V0.2D, 0x0
	0x039BD828 STP V0, V0, [X31 + 0x30]
	0x039BD82C STP V0, V0, [X31 + 0x10]
	0x039BD830 LDR X21, [X0 + 0x40]
	0x039BD834 MOV X20, X0
	0x039BD838 CBZ X21, 0x39BD8B8
	0x039BD83C LDRB W8, [X21 + 0x70]
	0x039BD840 CBZ W8, 0x39BD84C
	0x039BD844 MOV X0, X21
	0x039BD848 BL 0x39B486C
	0x039BD84C LDR X8, [X21 + 0x28]
	0x039BD850 STR X8, [X31]
	0x039BD854 LDR X21, [X20 + 0x48]
	0x039BD858 CBZ X21, 0x39BD8B8
	0x039BD85C LDRB W8, [X21 + 0x44]
	0x039BD860 CBZ W8, 0x39BD86C
	0x039BD864 MOV X0, X21
	0x039BD868 BL 0x39B9840
	0x039BD86C LDR X8, [X21 + 0x18]
	0x039BD870 STR X8, [X31 + 0x8]
	0x039BD874 LDR X0, [X20 + 0x38]
	0x039BD878 CBZ X0, 0x39BD8B8
	0x039BD87C ADD X1, X31, 0x0
	0x039BD880 BL 0x39B7218
	0x039BD884 ADD X1, X31, 0x0
	0x039BD888 MOVZ W2, 0x50
	0x039BD88C MOV X0, X19
	0x039BD890 BL 0x3EB1AC0
	0x039BD894 B 0x39BD8A8
	0x039BD898 MOVI V0.2D, 0x0
	0x039BD89C STP V0, V0, [X19 + 0x30]
	0x039BD8A0 STP V0, V0, [X19 + 0x10]
	0x039BD8A4 STR V0, [X19]
	0x039BD8A8 LDP X20, X19, [X31 + 0x60]
	0x039BD8AC LDP X30, X21, [X31 + 0x50]
	0x039BD8B0 ADD X31, X31, 0x70
	0x039BD8B4 RET
	0x039BD8B8 BL 0x1C16F20
	0x039BD8BC STR D8, [X31 - 0x30]!
	0x039BD8C0 STR X30, [X31 + 0x8]
	0x039BD8C4 STP X22, X21, [X31 + 0x10]
	0x039BD8C8 STP X20, X19, [X31 + 0x20]
	0x039BD8CC ADRP X22, 0xA24000
	0x039BD8D0 ADRP X21, 0x794000
	0x039BD8D4 LDRB W8, [X22 + 0xC9E]
	0x039BD8D8 LDR X21, [X21 + 0xF48]
	0x039BD8DC MOV W19, W1
	0x039BD8E0 MOV X20, X0
	0x039BD8E4 TBNZ X8, 0x0, 0x39BD8FC
	0x039BD8E8 ADRP X0, 0x794000
	0x039BD8EC LDR X0, [X0 + 0xF48]
	0x039BD8F0 BL 0x1C16CF4
	0x039BD8F4 MOVZ W8, 0x1
	0x039BD8F8 STRB W8, [X22 + 0xC9E]
	0x039BD8FC LDR X0, [X21]
	0x039BD900 LDR V8, [X20 + 0x30]
	0x039BD904 LDR W8, [X0 + 0xE0]
	0x039BD908 CBNZ W8, 0x39BD910
	0x039BD90C BL 0x1C16DFC
	0x039BD910 SCVTF S1, W19
	0x039BD914 FMOV S0, 3
	0x039BD918 BL 0x3EB1B50
	0x039BD91C MOVZ W9, 0x7F800000
	0x039BD920 FCVTZS W8, S0
	0x039BD924 MOVZ W10, 0xCF000000
	0x039BD928 FMOV S2, W9
	0x039BD92C LDP X20, X19, [X31 + 0x20]
	0x039BD930 LDP X22, X21, [X31 + 0x10]
	0x039BD934 LDR X30, [X31 + 0x8]
	0x039BD938 SCVTF S1, W8
	0x039BD93C FCMP S0, S2
	0x039BD940 FMOV S0, W10
	0x039BD944 FCSEL S0, S0, S1, EQ
	0x039BD948 FMUL S0, S0, S8
	0x039BD94C LDR V8, [X31], #0x30
	0x039BD950 RET
	0x039BD954 LDUR V0, [X0 + 0x24]
	0x039BD958 LDUR V1, [X0 + 0x14]
	0x039BD95C STP V1, V0, [X8]
	0x039BD960 RET
	0x039BD964 LDR W0, [X0 + 0x34]
	0x039BD968 RET
	0x039BD96C STR D8, [X31 - 0x20]!
	0x039BD970 STR X30, [X31 + 0x8]
	0x039BD974 STP X20, X19, [X31 + 0x10]
	0x039BD978 ADRP X20, 0xA1B000
	0x039BD97C LDRB W8, [X20 + 0xABE]
	0x039BD980 LDR W19, [X0 + 0x34]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0xA25000
	009 Move W8, [X20+3222]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x796000
	016 Move X0, [X0+1192]
	017 Call 0x1C17CF4
	018 Move X0, 0x796000
	019 Move X0, [X0+1264]
	020 Call 0x1C17CF4
	021 Move X0, 0x796000
	022 Move X0, [X0+1136]
	023 Call 0x1C17CF4
	024 Move X0, 0x796000
	025 Move X0, [X0+1144]
	026 Call 0x1C17CF4
	027 Move X0, 0x796000
	028 Move X0, [X0+1152]
	029 Call 0x1C17CF4
	030 Move X0, 0x796000
	031 Move X0, [X0+1160]
	032 Call 0x1C17CF4
	033 Move X0, 0x796000
	034 Move X0, [X0+1168]
	035 Call 0x1C17CF4
	036 Move X0, 0x796000
	037 Move X0, [X0+1176]
	038 Call 0x1C17CF4
	039 Move X0, 0x796000
	040 Move X0, [X0+1184]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3222], W8
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Move X0, [X19+296]
	048 Compare X0, 0
	049 JumpIfEqual {193}
	050 Move X20, 0x796000
	051 Move X20, [X20+1144]
	052 Move X1, [X20]
	053 Call Dictionary`2<Object, Object>.get_Count, X0
	054 Compare W0, 0
	055 JumpIfNotEqual {63}
	056 Move X0, [X19+312]
	057 Compare X0, 0
	058 JumpIfEqual {193}
	059 Move X1, [X20]
	060 Call Dictionary`2<Object, Object>.get_Count, X0
	061 Compare W0, 0
	062 JumpIfEqual {182}
	063 Move W8, [X19+320]
	064 Compare W8, 0
	065 JumpIfEqual {182}
	066 Move W8, [X19+321]
	067 Compare W8, 0
	068 JumpIfEqual {182}
	069 Move X0, [X19+56]
	070 Compare X0, 0
	071 JumpIfEqual {193}
	072 Call ProbeBrickPool.EnsureTextureValidity, X0
	073 Move X0, [X19+80]
	074 Compare X0, 0
	075 JumpIfEqual {193}
	076 Call ProbeBrickBlendingPool.EnsureTextureValidity, X0
	077 Move W8, [X19+349]
	078 Compare W8, 0
	079 JumpIfEqual {115}
	080 Move X0, [X19+312]
	081 Compare X0, 0
	082 JumpIfEqual {193}
	083 Move X8, 0x796000
	084 Move X8, [X8+1152]
	085 Move X1, [X8]
	086 Call Dictionary`2<Object, Object>.get_Values, X0
	087 Compare X0, 0
	088 JumpIfEqual {193}
	089 Move X8, 0x796000
	090 Move X8, [X8+1184]
	091 Move X1, [X8]
	092 Add X8, X31, 8
	093 Call ValueCollection<Object, Object>.GetEnumerator, X0
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move X8, [X31+24]
	096 Move X20, 0x796000
	097 Move [X31+2], V0
	098 Move [X31+48], X8
	099 Move X20, [X20+1168]
	100 Move X1, [X20]
	101 Add X0, X31, 32
	102 Call Enumerator<Object, Object>.MoveNext, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {110}
	107 Move X1, [X31+48]
	108 Move X0, X19
	109 Call ProbeReferenceVolume.LoadAsset, X0, X1
	110 Move X8, 0x796000
	111 Move X8, [X8+1160]
	112 Add X0, X31, 32
	113 Move X1, [X8]
	114 Call Enumerator<Object, Object>.Dispose, X0
	115 Move X0, [X19+296]
	116 Compare X0, 0
	117 JumpIfEqual {193}
	118 Move X8, 0x796000
	119 Move X8, [X8+1152]
	120 Move X1, [X8]
	121 Call Dictionary`2<Object, Object>.get_Values, X0
	122 Compare X0, 0
	123 JumpIfEqual {193}
	124 Move X8, 0x796000
	125 Move X8, [X8+1184]
	126 Move X1, [X8]
	127 Add X8, X31, 8
	128 Call ValueCollection<Object, Object>.GetEnumerator, X0
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 Move X8, [X31+24]
	131 Move X21, 0x796000
	132 Move X22, 0x796000
	133 Move X21, [X21+1168]
	134 Move X22, [X22+1136]
	135 Move [X31+2], V0
	136 Move [X31+48], X8
	137 Move X23, 0x796000
	138 Move X23, [X23+1192]
	139 Move X1, [X21]
	140 Add X0, X31, 32
	141 Call Enumerator<Object, Object>.MoveNext, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {169}
	146 Move X20, [X31+48]
	147 Move X0, X19
	148 Move X1, X20
	149 Call ProbeReferenceVolume.LoadAsset, X0, X1
	150 Compare X20, 0
	151 JumpIfEqual {190}
	152 Move X0, [X19+312]
	153 Compare X0, 0
	154 JumpIfEqual {191}
	155 Move X1, [X20+120]
	156 Move X2, [X22]
	157 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {139}
	162 Move X0, [X19+312]
	163 Compare X0, 0
	164 JumpIfEqual {192}
	165 Move X1, [X20+120]
	166 Move X3, [X23]
	167 Move X2, X20
	168 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	169 Move X8, 0x796000
	170 Move X8, [X8+1160]
	171 Add X0, X31, 32
	172 Move X1, [X8]
	173 Call Enumerator<Object, Object>.Dispose, X0
	174 Move X0, [X19+296]
	175 Compare X0, 0
	176 JumpIfEqual {193}
	177 Move X8, 0x796000
	178 Move X8, [X8+1264]
	179 Move X1, [X8]
	180 Call Dictionary`2<Object, Object>.Clear, X0
	181 Move [X19+320], W31
	182 Move X20, [X31+96]
	183 Move X19, [X31+104]
	184 Move X22, [X31+80]
	185 Move X21, [X31+88]
	186 Move X30, [X31+64]
	187 Move X23, [X31+72]
	188 Add X31, X31, 112
	189 Return 
	190 Call 0x1C17F20
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X20, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X20
	197 Call 0x3EB2AD0
	198 Move X21, [X0]
	199 Call 0x3EB2AE0
	200 Move X8, 0x796000
	201 Move X8, [X8+1160]
	202 Add X0, X31, 32
	203 Move X1, [X8]
	204 Call Enumerator<Object, Object>.Dispose, X0
	205 Compare X21, 0
	206 JumpIfEqual {115}
	207 Move X21, X31
	208 Move X20, X0
	209 Move X8, 0x796000
	210 Move X8, [X8+1160]
	211 Move X1, [X8]
	212 Add X0, X31, 32
	213 Call Enumerator<Object, Object>.Dispose, X0
	214 Compare X21, 0
	215 JumpIfEqual {242}
	216 Move X0, X21
	217 Call 0x1C17F18
	218 Move X20, X0
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X20
	221 Call 0x3EB2AD0
	222 Move X21, [X0]
	223 Call 0x3EB2AE0
	224 Move X8, 0x796000
	225 Move X8, [X8+1160]
	226 Add X0, X31, 32
	227 Move X1, [X8]
	228 Call Enumerator<Object, Object>.Dispose, X0
	229 Compare X21, 0
	230 JumpIfEqual {174}
	231 Move X0, X21
	232 Call 0x1C17F18
	233 Move X21, X31
	234 Move X20, X0
	235 Move X8, 0x796000
	236 Move X8, [X8+1160]
	237 Move X1, [X8]
	238 Add X0, X31, 32
	239 Call Enumerator<Object, Object>.Dispose, X0
	240 Compare X21, 0
	241 JumpIfNotEqual {244}
	242 Move X0, X20
	243 Call 0x1D2D690
	244 Move X0, X21
	245 Call 0x1C17F18
	246 Call 0x1991590

Method: System.Void PerformPendingDeletion()

Disassembly:
	0x039BD984 MOV V8.16B, V0.16B
	0x039BD988 CBNZ W8, 0x39BD9A0
	0x039BD98C ADRP X0, 0x736000
	0x039BD990 LDR X0, [X0 + 0x5A8]
	0x039BD994 BL 0x1C16CF4
	0x039BD998 MOVZ W8, 0x1
	0x039BD99C STRB W8, [X20 + 0xABE]
	0x039BD9A0 ADRP X8, 0x736000
	0x039BD9A4 LDR X8, [X8 + 0x5A8]
	0x039BD9A8 LDR X0, [X8]
	0x039BD9AC LDR W8, [X0 + 0xE0]
	0x039BD9B0 CBNZ W8, 0x39BD9B8
	0x039BD9B4 BL 0x1C16DFC
	0x039BD9B8 SCVTF S0, W19
	0x039BD9BC MOVZ W8, 0x7F800000
	0x039BD9C0 FMUL S0, S0, S8
	0x039BD9C4 LDP X20, X19, [X31 + 0x10]
	0x039BD9C8 LDR X30, [X31 + 0x8]
	0x039BD9CC FMOV S1, W8
	0x039BD9D0 FRINTP S2, S0
	0x039BD9D4 FCVTPS W8, S0
	0x039BD9D8 FCMP S2, S1
	0x039BD9DC MOVZ W9, 0x80000000
	0x039BD9E0 CSEL W0, W9, W8, EQ
	0x039BD9E4 LDR V8, [X31], #0x20
	0x039BD9E8 RET
	0x039BD9EC STR X30, [X31 - 0x10]!
	0x039BD9F0 BL 0x39BD8BC
	0x039BD9F4 FMOV S1, 3
	0x039BD9F8 FDIV S0, S0, S1
	0x039BD9FC LDR X30, [X31], #0x10
	0x039BDA00 RET
	0x039BDA04 STR X30, [X31 - 0x10]!
	0x039BDA08 MOV W1, W31
	0x039BDA0C BL 0x39BD8BC
	0x039BDA10 FMOV S1, 3
	0x039BDA14 FDIV S0, S0, S1
	0x039BDA18 LDR X30, [X31], #0x10
	0x039BDA1C RET
	0x039BDA20 LDRB W0, [X0 + 0x120]
	0x039BDA24 RET
	0x039BDA28 STR X30, [X31 - 0x20]!
	0x039BDA2C STP X20, X19, [X31 + 0x10]
	0x039BDA30 ADRP X20, 0xA24000
	0x039BDA34 LDRB W8, [X20 + 0xC9F]
	0x039BDA38 MOV X19, X0
	0x039BDA3C TBNZ X8, 0x0, 0x39BDA60
	0x039BDA40 ADRP X0, 0x795000
	0x039BDA44 LDR X0, [X0 + 0x4F0]
	0x039BDA48 BL 0x1C16CF4
	0x039BDA4C ADRP X0, 0x795000
	0x039BDA50 LDR X0, [X0 + 0x5C8]
	0x039BDA54 BL 0x1C16CF4
	0x039BDA58 MOVZ W8, 0x1
	0x039BDA5C STRB W8, [X20 + 0xC9F]
	0x039BDA60 LDRB W8, [X19 + 0x141]
	0x039BDA64 CBZ W8, 0x39BDAB4
	0x039BDA68 MOV X0, X19
	0x039BDA6C BL 0x39BA960
	0x039BDA70 LDR X0, [X19 + 0x38]
	0x039BDA74 CBZ X0, 0x39BDAF8
	0x039BDA78 BL 0x39B7414
	0x039BDA7C LDR X8, [X19 + 0x50]
	0x039BDA80 CBZ X8, 0x39BDAF8
	0x039BDA84 LDR X0, [X8 + 0x20]
	0x039BDA88 CBZ X0, 0x39BDA90
	0x039BDA8C BL 0x39B7414
	0x039BDA90 LDR X0, [X19 + 0x40]
	0x039BDA94 CBZ X0, 0x39BDAF8
	0x039BDA98 BL 0x39B4380
	0x039BDA9C LDR X0, [X19 + 0x80]
	0x039BDAA0 CBZ X0, 0x39BDAF8
	0x039BDAA4 ADRP X8, 0x795000
	0x039BDAA8 LDR X8, [X8 + 0x5C8]
	0x039BDAAC LDR X1, [X8]
	0x039BDAB0 BL 0x2A13814
	0x039BDAB4 LDRB W8, [X19 + 0x180]
	0x039BDAB8 CBZ W8, 0x39BDAEC
	0x039BDABC LDR X0, [X19 + 0x128]
	0x039BDAC0 CBZ X0, 0x39BDAF8
	0x039BDAC4 ADRP X20, 0x795000
	0x039BDAC8 LDR X20, [X20 + 0x4F0]
	0x039BDACC LDR X1, [X20]
	0x039BDAD0 BL 0x2AA5220
	0x039BDAD4 LDR X0, [X19 + 0x138]
	0x039BDAD8 CBZ X0, 0x39BDAF8
	0x039BDADC LDR X1, [X20]
	0x039BDAE0 LDP X20, X19, [X31 + 0x10]
	0x039BDAE4 LDR X30, [X31], #0x20
	0x039BDAE8 B 0x2AA5220
	0x039BDAEC LDP X20, X19, [X31 + 0x10]
	0x039BDAF0 LDR X30, [X31], #0x20
	0x039BDAF4 RET
	0x039BDAF8 BL 0x1C16F20
	0x039BDAFC STP X30, X27, [X31 - 0x50]!
	0x039BDB00 STP X26, X25, [X31 + 0x10]
	0x039BDB04 STP X24, X23, [X31 + 0x20]
	0x039BDB08 STP X22, X21, [X31 + 0x30]
	0x039BDB0C STP X20, X19, [X31 + 0x40]
	0x039BDB10 ADRP X23, 0xA24000
	0x039BDB14 LDRB W8, [X23 + 0xCA0]
	0x039BDB18 MOV X19, X3
	0x039BDB1C MOV W21, W2
	0x039BDB20 MOV W22, W1
	0x039BDB24 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0xA25000
	008 Move W8, [X20+3223]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x796000
	015 Move X0, [X0+1264]
	016 Call 0x1C17CF4
	017 Move X0, 0x796000
	018 Move X0, [X0+1152]
	019 Call 0x1C17CF4
	020 Move X0, 0x796000
	021 Move X0, [X0+1160]
	022 Call 0x1C17CF4
	023 Move X0, 0x796000
	024 Move X0, [X0+1168]
	025 Call 0x1C17CF4
	026 Move X0, 0x796000
	027 Move X0, [X0+1176]
	028 Call 0x1C17CF4
	029 Move X0, 0x796000
	030 Move X0, [X0+1184]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3223], W8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move X22, 0x796000
	038 Move W8, [X19+321]
	039 Move X22, [X22+1264]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, [X19+304]
	043 Compare X0, 0
	044 JumpIfEqual {90}
	045 Move X1, [X22]
	046 Call Dictionary`2<Object, Object>.Clear, X0
	047 Move X0, [X19+304]
	048 Compare X0, 0
	049 JumpIfEqual {90}
	050 Move X8, 0x796000
	051 Move X8, [X8+1152]
	052 Move X1, [X8]
	053 Call Dictionary`2<Object, Object>.get_Values, X0
	054 Compare X0, 0
	055 JumpIfEqual {90}
	056 Move X8, 0x796000
	057 Move X8, [X8+1184]
	058 Move X21, 0x796000
	059 Move X20, 0x796000
	060 Move X1, [X8]
	061 Move X21, [X21+1168]
	062 Move X20, [X20+1160]
	063 Add X8, X31, 8
	064 Call ValueCollection<Object, Object>.GetEnumerator, X0
	065 Move X1, [X21]
	066 Add X0, X31, 8
	067 Call Enumerator<Object, Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {75}
	072 Move X1, [X31+24]
	073 Move X0, X19
	074 Call ProbeReferenceVolume.RemovePendingAsset, X0, X1
	075 Move X1, [X20]
	076 Add X0, X31, 8
	077 Call Enumerator<Object, Object>.Dispose, X0
	078 Move X0, [X19+304]
	079 Compare X0, 0
	080 JumpIfEqual {90}
	081 Move X1, [X22]
	082 Call Dictionary`2<Object, Object>.Clear, X0
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X30, [X31+32]
	088 Add X31, X31, 80
	089 Return 
	090 Call 0x1C17F20
	091 Move X21, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X21
	094 Call 0x3EB2AD0
	095 Move X20, [X0]
	096 Call 0x3EB2AE0
	097 Move X8, 0x796000
	098 Move X8, [X8+1160]
	099 Add X0, X31, 8
	100 Move X1, [X8]
	101 Call Enumerator<Object, Object>.Dispose, X0
	102 Compare X20, 0
	103 JumpIfEqual {78}
	104 Move X0, X20
	105 Call 0x1C17F18
	106 Move X20, X31
	107 Move X21, X0
	108 Move X8, 0x796000
	109 Move X8, [X8+1160]
	110 Move X1, [X8]
	111 Add X0, X31, 8
	112 Call Enumerator<Object, Object>.Dispose, X0
	113 Compare X20, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X21
	116 Call 0x1D2D690
	117 Move X0, X20
	118 Call 0x1C17F18
	119 Call 0x1991590

Method: System.Int32 GetNumberOfBricksAtSubdiv(UnityEngine.Vector3Int position, System.Int32 minSubdiv, out UnityEngine.Vector3Int minValidLocalIdxAtMaxRes, out UnityEngine.Vector3Int sizeOfValidIndicesAtMaxRes)

Disassembly:
	0x039BDB28 TBNZ X8, 0x0, 0x39BDB4C
	0x039BDB2C ADRP X0, 0x795000
	0x039BDB30 LDR X0, [X0 + 0x218]
	0x039BDB34 BL 0x1C16CF4
	0x039BDB38 ADRP X0, 0x795000
	0x039BDB3C LDR X0, [X0 + 0x3C8]
	0x039BDB40 BL 0x1C16CF4
	0x039BDB44 MOVZ W8, 0x1
	0x039BDB48 STRB W8, [X23 + 0xCA0]
	0x039BDB4C LDR X0, [X20 + 0x58]
	0x039BDB50 CBZ X0, 0x39BDC7C
	0x039BDB54 ADRP X23, 0x795000
	0x039BDB58 LDR X23, [X23 + 0x218]
	0x039BDB5C LDR W10, [X0 + 0x1C]
	0x039BDB60 LDR X8, [X0 + 0x10]
	0x039BDB64 LDR X9, [X23]
	0x039BDB68 ADD W10, W10, 0x2
	0x039BDB6C STP W31, W10, [X0 + 0x18]
	0x039BDB70 CBZ X8, 0x39BDC7C
	0x039BDB74 LDR W10, [X8 + 0x18]
	0x039BDB78 CBZ W10, 0x39BDB90
	0x039BDB7C MOVZ W9, 0x1
	0x039BDB80 STR W9, [X0 + 0x18]
	0x039BDB84 STR X31, [X8 + 0x20]
	0x039BDB88 STR W31, [X8 + 0x28]
	0x039BDB8C B 0x39BDBA8
	0x039BDB90 LDR X8, [X9 + 0x20]
	0x039BDB94 MOV X1, X31
	0x039BDB98 MOV X2, X31
	0x039BDB9C LDR X8, [X8 + 0xC0]
	0x039BDBA0 LDR X3, [X8 + 0x70]
	0x039BDBA4 BL 0x31207AC
	0x039BDBA8 CMP W22, 0x2
	0x039BDBAC B.LT 0x39BDC60
	0x039BDBB0 MOV W24, W31
	0x039BDBB4 MOV W26, W31
	0x039BDBB8 MOV W25, W31
	0x039BDBBC UBFM W21, W21, 0x1E, 0x1D
	0x039BDBC0 SUB W22, W22, 0x1
	0x039BDBC4 MOVZ W27, 0xC
	0x039BDBC8 LDR W8, [X19 + 0x40]
	0x039BDBCC ADD W25, W25, W21
	0x039BDBD0 CMP W25, W8
	0x039BDBD4 B.LT 0x39BDBF4
	0x039BDBD8 LDR W8, [X19 + 0x44]
	0x039BDBDC ADD W9, W26, 0x4
	0x039BDBE0 ADD W10, W24, 0x4
	0x039BDBE4 MOV W25, W31
	0x039BDBE8 CMP W9, W8
	0x039BDBEC CSEL W26, W9, W31, LT
	0x039BDBF0 CSEL W24, W24, W10, LT
	0x039BDBF4 LDR X0, [X20 + 0x58]
	0x039BDBF8 CBZ X0, 0x39BDC7C
	0x039BDBFC LDR W10, [X0 + 0x1C]
	0x039BDC00 LDR X9, [X0 + 0x10]
	0x039BDC04 LDR X8, [X23]
	0x039BDC08 ADD W10, W10, 0x1
	0x039BDC0C STR W10, [X0 + 0x1C]
	0x039BDC10 CBZ X9, 0x39BDC7C
	0x039BDC14 LDRSW X10, [X0 + 0x18]
	0x039BDC18 LDR W11, [X9 + 0x18]
	0x039BDC1C MOV W1, W25
	0x039BDC20 BFM X1, X26, 0x20, 0x1F
	0x039BDC24 CMP W10, W11
	0x039BDC28 B.CS 0x39BDC44
	0x039BDC2C ADD W8, W10, 0x1
	0x039BDC30 MADD X9, X10, X27, X9
	0x039BDC34 STR W8, [X0 + 0x18]
	0x039BDC38 STR X1, [X9 + 0x20]
	0x039BDC3C STR W24, [X9 + 0x28]
	0x039BDC40 B 0x39BDC58
	0x039BDC44 LDR X8, [X8 + 0x20]
	0x039BDC48 MOV W2, W24
	0x039BDC4C LDR X8, [X8 + 0xC0]
	0x039BDC50 LDR X3, [X8 + 0x70]
	0x039BDC54 BL 0x31207AC
	0x039BDC58 SUBS W22, W22, 0x1
	0x039BDC5C B.NE 0x39BDBC8
	0x039BDC60 LDR X0, [X20 + 0x58]
	0x039BDC64 LDP X20, X19, [X31 + 0x40]
	0x039BDC68 LDP X22, X21, [X31 + 0x30]
	0x039BDC6C LDP X24, X23, [X31 + 0x20]
	0x039BDC70 LDP X26, X25, [X31 + 0x10]
	0x039BDC74 LDP X30, X27, [X31], #0x50
	0x039BDC78 RET
	0x039BDC7C BL 0x1C16F20
	0x039BDC80 SUB X31, X31, 0x1F0
	0x039BDC84 STP X29, X30, [X31 + 0x190]
	0x039BDC88 STP X28, X27, [X31 + 0x1A0]
	0x039BDC8C STP X26, X25, [X31 + 0x1B0]
	0x039BDC90 STP X24, X23, [X31 + 0x1C0]
	0x039BDC94 STP X22, X21, [X31 + 0x1D0]
	0x039BDC98 STP X20, X19, [X31 + 0x1E0]
	0x039BDC9C STR X1, [X31 + 0x10]
	0x039BDCA0 ADRP X19, 0xA24000
	0x039BDCA4 STP X3, X4, [X31 + 0x180]
	0x039BDCA8 ADRP X20, 0x795000
	0x039BDCAC LDRB W8, [X19 + 0xCA1]
	0x039BDCB0 LDR X20, [X20 + 0x5D0]
	0x039BDCB4 MOV W21, W6
	0x039BDCB8 MOV W29, W5
	0x039BDCBC MOV X24, X2
	0x039BDCC0 MOV X22, X0
	0x039BDCC4 TBNZ X8, 0x0, 0x39BDD0C
	0x039BDCC8 ADRP X0, 0x795000
	0x039BDCCC LDR X0, [X0 + 0x5D0]
	0x039BDCD0 BL 0x1C16CF4
	0x039BDCD4 ADRP X0, 0x75F000
	0x039BDCD8 LDR X0, [X0 + 0x2B8]
	0x039BDCDC BL 0x1C16CF4
	0x039BDCE0 ADRP X0, 0x795000
	0x039BDCE4 LDR X0, [X0 + 0x5D8]
	0x039BDCE8 BL 0x1C16CF4
	0x039BDCEC ADRP X0, 0x795000
	0x039BDCF0 LDR X0, [X0 + 0x5E0]
	0x039BDCF4 BL 0x1C16CF4
	0x039BDCF8 ADRP X0, 0x795000
	0x039BDCFC LDR X0, [X0 + 0x1C8]
	0x039BDD00 BL 0x1C16CF4
	0x039BDD04 MOVZ W8, 0x1
	0x039BDD08 STRB W8, [X19 + 0xCA1]
	0x039BDD0C STP X31, X31, [X31 + 0x160]
	0x039BDD10 MOV X23, X22
	0x039BDD14 LDR X27, [X23 + 0x98]!
	0x039BDD18 LDR V0, [X24]
	0x039BDD1C LDR X3, [X20]
	0x039BDD20 ADD X0, X31, 0x170
	0x039BDD24 LDR W19, [X23 + 0x54]
	0x039BDD28 STR V0, [X31 + 0x17]
	0x039BDD2C UBFM W25, W19, 0x18, 0x17
	0x039BDD30 MUL W26, W25, W29
	0x039BDD34 MOV W1, W26
	0x039BDD38 MOV W2, W25
	0x039BDD3C BL 0x23EC640
	0x039BDD40 CBZ X27, 0x39BE208
	0x039BDD44 ADRP X28, 0x795000
	0x039BDD48 LDR X28, [X28 + 0x1C8]
	0x039BDD4C LDR X9, [X27]
	0x039BDD50 LDR X8, [X28]
	0x039BDD54 CMP X9, X8
	0x039BDD58 B.NE 0x39BE208
	0x039BDD5C STR W29, [X31 + 0x1C]
	0x039BDD60 ADRP X8, 0x795000
	0x039BDD64 LDR X8, [X8 + 0x5E0]
	0x039BDD68 MOV X2, X0
	0x039BDD6C MOV X3, X1
	0x039BDD70 MOV X0, X27
	0x039BDD74 LDR X5, [X8]
	0x039BDD78 MOV X1, X2
	0x039BDD7C MOV X2, X3
	0x039BDD80 MOV W3, W31
	0x039BDD84 MOV W4, W31
	0x039BDD88 BL 0x229C8A0
	0x039BDD8C LDR X0, [X23]
	0x039BDD90 CBZ X0, 0x39BE208
	0x039BDD94 LDR X8, [X28]
	0x039BDD98 LDR X9, [X0]
	0x039BDD9C CMP X9, X8
	0x039BDDA0 B.NE 0x39BE208
	0x039BDDA4 ADRP X29, 0x75F000
	0x039BDDA8 LDR X29, [X29 + 0x2B8]
	0x039BDDAC MOV W1, W31
	0x039BDDB0 MOV X2, X31
	0x039BDDB4 BL 0x3C1DDDC
	0x039BDDB8 LDR V0, [X24 + 0x1]
	0x039BDDBC LDR X3, [X29]
	0x039BDDC0 LDR X27, [X22 + 0xA0]
	0x039BDDC4 ADD X0, X31, 0x160
	0x039BDDC8 MOV W1, W26
	0x039BDDCC MOV W2, W25
	0x039BDDD0 STR V0, [X31 + 0x16]
	0x039BDDD4 BL 0x23CA8FC
	0x039BDDD8 CBZ X27, 0x39BE208
	0x039BDDDC LDR X8, [X28]
	0x039BDDE0 LDR X9, [X27]
	0x039BDDE4 CMP X9, X8
	0x039BDDE8 B.NE 0x39BE208
	0x039BDDEC ADRP X20, 0x795000
	0x039BDDF0 LDR X20, [X20 + 0x5D8]
	0x039BDDF4 MOV X2, X0
	0x039BDDF8 MOV X3, X1
	0x039BDDFC MOV X0, X27
	0x039BDE00 LDR X5, [X20]
	0x039BDE04 MOV X1, X2
	0x039BDE08 MOV X2, X3
	0x039BDE0C MOV W3, W31
	0x039BDE10 MOV W4, W31
	0x039BDE14 BL 0x229C77C
	0x039BDE18 LDR X0, [X22 + 0xA0]
	0x039BDE1C CBZ X0, 0x39BE208
	0x039BDE20 LDR X8, [X28]
	0x039BDE24 LDR X9, [X0]
	0x039BDE28 CMP X9, X8
	0x039BDE2C B.NE 0x39BE208
	0x039BDE30 MOV W1, W31
	0x039BDE34 MOV X2, X31
	0x039BDE38 BL 0x3C1DDDC
	0x039BDE3C LDR V0, [X24 + 0x2]
	0x039BDE40 LDR X3, [X29]
	0x039BDE44 LDR X27, [X22 + 0xA8]
	0x039BDE48 ADD X0, X31, 0x160
	0x039BDE4C MOV W1, W26
	0x039BDE50 MOV W2, W25
	0x039BDE54 STR V0, [X31 + 0x16]
	0x039BDE58 BL 0x23CA8FC
	0x039BDE5C CBZ X27, 0x39BE208
	0x039BDE60 LDR X8, [X28]
	0x039BDE64 LDR X9, [X27]
	0x039BDE68 CMP X9, X8
	0x039BDE6C B.NE 0x39BE208
	0x039BDE70 LDR X5, [X20]
	0x039BDE74 MOV X2, X0
	0x039BDE78 MOV X3, X1
	0x039BDE7C MOV X0, X27
	0x039BDE80 MOV X1, X2
	0x039BDE84 MOV X2, X3
	0x039BDE88 MOV W3, W31
	0x039BDE8C MOV W4, W31
	0x039BDE90 BL 0x229C77C
	0x039BDE94 LDR X0, [X22 + 0xA8]
	0x039BDE98 CBZ X0, 0x39BE208
	0x039BDE9C LDR X8, [X28]
	0x039BDEA0 LDR X9, [X0]
	0x039BDEA4 CMP X9, X8
	0x039BDEA8 B.NE 0x39BE208
	0x039BDEAC MOV W1, W31
	0x039BDEB0 MOV X2, X31
	0x039BDEB4 BL 0x3C1DDDC
	0x039BDEB8 ADDS W31, W21, 0x1
	0x039BDEBC B.NE 0x39BDF18
	0x039BDEC0 LDR W8, [X31 + 0x1C]
	0x039BDEC4 LDR X3, [X29]
	0x039BDEC8 LDR X27, [X22 + 0xD0]
	0x039BDECC UBFM W2, W19, 0x1A, 0x19
	0x039BDED0 MUL W1, W2, W8
	0x039BDED4 ADD X0, X31, 0x180
	0x039BDED8 BL 0x23CA8FC
	0x039BDEDC CBZ X27, 0x39BE208
	0x039BDEE0 LDR X5, [X20]
	0x039BDEE4 MOV X2, X0
	0x039BDEE8 MOV X3, X1
	0x039BDEEC MOV X0, X27
	0x039BDEF0 MOV X1, X2
	0x039BDEF4 MOV X2, X3
	0x039BDEF8 MOV W3, W31
	0x039BDEFC MOV W4, W31
	0x039BDF00 BL 0x229C77C
	0x039BDF04 LDR X0, [X22 + 0xD0]
	0x039BDF08 CBZ X0, 0x39BE208
	0x039BDF0C MOV W1, W31
	0x039BDF10 MOV X2, X31
	0x039BDF14 BL 0x3C1DDDC
	0x039BDF18 LDR W8, [X22 + 0x178]
	0x039BDF1C CMP W8, 0x2
	0x039BDF20 B.NE 0x39BE114
	0x039BDF24 LDR V0, [X24 + 0x3]
	0x039BDF28 LDR X3, [X29]
	0x039BDF2C LDR X27, [X22 + 0xB0]
	0x039BDF30 ADD X0, X31, 0x160
	0x039BDF34 MOV W1, W26
	0x039BDF38 MOV W2, W25
	0x039BDF3C STR V0, [X31 + 0x16]
	0x039BDF40 BL 0x23CA8FC
	0x039BDF44 CBZ X27, 0x39BE208
	0x039BDF48 LDR X8, [X28]
	0x039BDF4C LDR X9, [X27]
	0x039BDF50 CMP X9, X8
	0x039BDF54 B.NE 0x39BE208
	0x039BDF58 LDR X5, [X20]
	0x039BDF5C MOV X2, X0
	0x039BDF60 MOV X3, X1
	0x039BDF64 MOV X0, X27
	0x039BDF68 MOV X1, X2
	0x039BDF6C MOV X2, X3
	0x039BDF70 MOV W3, W31
	0x039BDF74 MOV W4, W31
	0x039BDF78 BL 0x229C77C
	0x039BDF7C LDR X0, [X22 + 0xB0]
	0x039BDF80 CBZ X0, 0x39BE208
	0x039BDF84 LDR X8, [X28]
	0x039BDF88 LDR X9, [X0]
	0x039BDF8C CMP X9, X8
	0x039BDF90 B.NE 0x39BE208
	0x039BDF94 MOV W1, W31
	0x039BDF98 MOV X2, X31
	0x039BDF9C BL 0x3C1DDDC
	0x039BDFA0 LDR V0, [X24 + 0x4]
	0x039BDFA4 LDR X3, [X29]
	0x039BDFA8 LDR X27, [X22 + 0xB8]
	0x039BDFAC ADD X0, X31, 0x160
	0x039BDFB0 MOV W1, W26
	0x039BDFB4 MOV W2, W25
	0x039BDFB8 STR V0, [X31 + 0x16]
	0x039BDFBC BL 0x23CA8FC
	0x039BDFC0 CBZ X27, 0x39BE208
	0x039BDFC4 LDR X8, [X28]
	0x039BDFC8 LDR X9, [X27]
	0x039BDFCC CMP X9, X8
	0x039BDFD0 B.NE 0x39BE208
	0x039BDFD4 LDR X5, [X20]
	0x039BDFD8 MOV X2, X0
	0x039BDFDC MOV X3, X1
	0x039BDFE0 MOV X0, X27
	0x039BDFE4 MOV X1, X2
	0x039BDFE8 MOV X2, X3
	0x039BDFEC MOV W3, W31
	0x039BDFF0 MOV W4, W31
	0x039BDFF4 BL 0x229C77C
	0x039BDFF8 LDR X0, [X22 + 0xB8]
	0x039BDFFC CBZ X0, 0x39BE208
	0x039BE000 LDR X8, [X28]
	0x039BE004 LDR X9, [X0]
	0x039BE008 CMP X9, X8
	0x039BE00C B.NE 0x39BE208
	0x039BE010 MOV W1, W31
	0x039BE014 MOV X2, X31
	0x039BE018 BL 0x3C1DDDC
	0x039BE01C LDR V0, [X24 + 0x5]
	0x039BE020 LDR X3, [X29]
	0x039BE024 LDR X27, [X22 + 0xC0]
	0x039BE028 ADD X0, X31, 0x160
	0x039BE02C MOV W1, W26
	0x039BE030 MOV W2, W25
	0x039BE034 STR V0, [X31 + 0x16]
	0x039BE038 BL 0x23CA8FC
	0x039BE03C CBZ X27, 0x39BE208
	0x039BE040 LDR X8, [X28]
	0x039BE044 LDR X9, [X27]
	0x039BE048 CMP X9, X8
	0x039BE04C B.NE 0x39BE208
	0x039BE050 LDR X5, [X20]
	0x039BE054 MOV X2, X0
	0x039BE058 MOV X3, X1
	0x039BE05C MOV X0, X27
	0x039BE060 MOV X1, X2
	0x039BE064 MOV X2, X3
	0x039BE068 MOV W3, W31
	0x039BE06C MOV W4, W31
	0x039BE070 BL 0x229C77C
	0x039BE074 LDR X0, [X22 + 0xC0]
	0x039BE078 CBZ X0, 0x39BE208
	0x039BE07C LDR X8, [X28]
	0x039BE080 LDR X9, [X0]
	0x039BE084 CMP X9, X8
	0x039BE088 B.NE 0x39BE208
	0x039BE08C MOV W1, W31
	0x039BE090 MOV X2, X31
	0x039BE094 BL 0x3C1DDDC
	0x039BE098 LDR V0, [X24 + 0x6]
	0x039BE09C LDR X3, [X29]
	0x039BE0A0 LDR X27, [X22 + 0xC8]
	0x039BE0A4 ADD X0, X31, 0x160
	0x039BE0A8 MOV W1, W26
	0x039BE0AC MOV W2, W25
	0x039BE0B0 STR V0, [X31 + 0x16]
	0x039BE0B4 BL 0x23CA8FC
	0x039BE0B8 CBZ X27, 0x39BE208
	0x039BE0BC LDR X8, [X28]
	0x039BE0C0 LDR X9, [X27]
	0x039BE0C4 CMP X9, X8
	0x039BE0C8 B.NE 0x39BE208
	0x039BE0CC LDR X5, [X20]
	0x039BE0D0 MOV X2, X0
	0x039BE0D4 MOV X3, X1
	0x039BE0D8 MOV X0, X27
	0x039BE0DC MOV X1, X2
	0x039BE0E0 MOV X2, X3
	0x039BE0E4 MOV W3, W31
	0x039BE0E8 MOV W4, W31
	0x039BE0EC BL 0x229C77C
	0x039BE0F0 LDR X0, [X22 + 0xC8]
	0x039BE0F4 CBZ X0, 0x39BE208
	0x039BE0F8 LDR X8, [X28]
	0x039BE0FC LDR X9, [X0]
	0x039BE100 CMP X9, X8
	0x039BE104 B.NE 0x39BE208
	0x039BE108 MOV W1, W31
	0x039BE10C MOV X2, X31
	0x039BE110 BL 0x3C1DDDC
	0x039BE114 LDR W24, [X22 + 0xEC]
	0x039BE118 ADD X0, X31, 0x110
	0x039BE11C MOVZ W2, 0x50
	0x039BE120 MOV X1, X23
	0x039BE124 BL 0x3EB1AC0
	0x039BE128 ADD X3, X31, 0x110
	0x039BE12C MOVZ W1, 0x1
	0x039BE130 MOV X0, X22
	0x039BE134 MOV W2, W24
	0x039BE138 BL 0x39BDAFC
	0x039BE13C ADDS W31, W21, 0x1
	0x039BE140 MOV X24, X0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X27
	012 Move [X31+112], X26
	013 Move [X31+120], X25
	014 Move [X31+128], X24
	015 Move [X31+136], X23
	016 Move [X31+144], X22
	017 Move [X31+152], X21
	018 Move [X31+160], X20
	019 Move [X31+168], X19
	020 Move X25, 0xA25000
	021 Move W8, [X25+3224]
	022 Move X20, X5
	023 Move X21, X4
	024 Move W19, W3
	025 Move X23, X2
	026 Move X24, X1
	027 Move X22, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x795000
	033 Move X0, [X0+3912]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+3224], W8
	037 Move X26, 0xA25000
	038 Move W8, [X26+3259]
	039 Move X25, X24
	040 ShiftRight X25, 32
	041 And X25, X25, 0x7FFFFFFF
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x75F000
	045 Move X0, [X0+1592]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+3259], W8
	049 Move X26, 0x75F000
	050 Move X26, [X26+1592]
	051 Move X27, 0xA25000
	052 Move X8, [X26]
	053 Move X8, [X8+184]
	054 Move X9, [X8]
	055 Move W8, [X8+8]
	056 Move [X21], X9
	057 Move [X21+8], W8
	058 Move W8, [X27+3258]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0x75F000
	062 Move X0, [X0+1592]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X27+3258], W8
	066 Move X8, [X26]
	067 Move X0, X22
	068 Move X8, [X8+184]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move W8, [X8+20]
	071 Move [X20], X9
	072 Move [X20+8], W8
	073 Move W8, [X22+52]
	074 Subtract W1, W8, 1
	075 Call ProbeReferenceVolume.BrickSize, X0, X1
	076 Move W8, [X22+52]
	077 Move X0, X22
	078 Move V8, V0
	079 Subtract W1, W8, 1
	080 Call ProbeReferenceVolume.BrickSize, X0, X1
	081 Move W8, [X22+52]
	082 Move X0, X22
	083 Move V9, V0
	084 Subtract W1, W8, 1
	085 Call ProbeReferenceVolume.BrickSize, X0, X1
	086 NotImplemented "Instruction SCVTF not yet implemented."
	087 NotImplemented "Instruction SCVTF not yet implemented."
	088 NotImplemented "Instruction SCVTF not yet implemented."
	089 Move X23, 0xA1C000
	090 Move S4, W31
	091 Multiply S5, S8, S1
	092 Multiply S6, S9, S2
	093 Multiply S3, S0, S3
	094 Move W8, [X23+2139]
	095 Move S10, 0.5
	096 Subtract S0, S4, S5
	097 Subtract S1, S4, S6
	098 Subtract S2, S4, S3
	099 Multiply S15, S0, S10
	100 Multiply S14, S1, S10
	101 Multiply S13, S2, S10
	102 Add S9, S5, S15
	103 Add S1, S6, S14
	104 Add S0, S3, S13
	105 Move [X31+24], S6
	106 Move [X31+32], S5
	107 Move [X31+20], S3
	108 Move [X31+12], S1
	109 Move [X31+20], S0
	110 Compare W8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, 0x737000
	113 Move X0, [X0+1440]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X23+2139], W8
	117 Move X8, 0x737000
	118 Move X8, [X8+1440]
	119 Move W9, [X22+52]
	120 Move X0, X22
	121 Move X8, [X8]
	122 Subtract W1, W9, 1
	123 Move X8, [X8+184]
	124 Move S12, [X8+12]
	125 Move S11, [X8+16]
	126 Move V8, [X8+20]
	127 Call ProbeReferenceVolume.BrickSize, X0, X1
	128 Move V20, [X31+28]
	129 Multiply S1, S12, S0
	130 Multiply S2, S11, S0
	131 Move S4, [X31+12]
	132 Move S5, [X31+16]
	133 Add S1, S20, S1
	134 Move V20, [X31+24]
	135 Subtract S3, S9, S15
	136 Move S6, [X22+104]
	137 Move S7, [X22+108]
	138 Move S16, [X22+112]
	139 Move S17, [X22+116]
	140 Add S2, S20, S2
	141 Move V20, [X31+20]
	142 Multiply S0, S8, S0
	143 Subtract S4, S4, S14
	144 Move S18, [X22+120]
	145 Move S19, [X22+124]
	146 Subtract S1, S1, S3
	147 Subtract S5, S5, S13
	148 Add S0, S20, S0
	149 Subtract S2, S2, S4
	150 Multiply S1, S1, S10
	151 Subtract S0, S0, S5
	152 Multiply S2, S2, S10
	153 Add S3, S3, S1
	154 Multiply S0, S0, S10
	155 Add S4, S4, S2
	156 Subtract S20, S6, S17
	157 Subtract S23, S3, S1
	158 Add S5, S5, S0
	159 Subtract S21, S7, S18
	160 Add S7, S7, S18
	161 Subtract S18, S4, S2
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Subtract S22, S16, S19
	164 Add S6, S6, S17
	165 Add S16, S16, S19
	166 Subtract S17, S5, S0
	167 Add S1, S1, S3
	168 NotImplemented "Instruction FCSEL not yet implemented."
	169 NotImplemented "Instruction FCMP not yet implemented."
	170 Move S19, W31
	171 Add S2, S2, S4
	172 Add S0, S0, S5
	173 NotImplemented "Instruction FCSEL not yet implemented."
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Subtract S5, S19, S3
	176 Move [X31+28], S17
	177 NotImplemented "Instruction FCSEL not yet implemented."
	178 Multiply S5, S5, S10
	179 Move V15, V18
	180 Subtract S18, S19, S4
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 Subtract S19, S19, S17
	183 Add S3, S3, S5
	184 Multiply S18, S18, S10
	185 NotImplemented "Instruction FCSEL not yet implemented."
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 Multiply S6, S19, S10
	188 Subtract S3, S3, S5
	189 Move X23, 0xA1C000
	190 Add S4, S4, S18
	191 NotImplemented "Instruction FCSEL not yet implemented."
	192 NotImplemented "Instruction FCMP not yet implemented."
	193 Add S5, S17, S6
	194 Subtract S1, S1, S3
	195 Move V14, [X22+48]
	196 Move W8, [X23+2750]
	197 NotImplemented "Instruction FCSEL not yet implemented."
	198 Subtract S4, S4, S18
	199 Subtract S8, S5, S6
	200 Multiply S5, S1, S10
	201 Subtract S2, S2, S4
	202 Subtract S11, S0, S8
	203 Add S0, S3, S5
	204 Multiply S1, S2, S10
	205 Move [X31+12], S0
	206 Move [X31+20], S5
	207 Subtract S0, S0, S5
	208 Add S12, S4, S1
	209 Subtract S9, S0, S23
	210 Move [X31+20], S23
	211 Compare W8, 0
	212 JumpIfNotEqual {220}
	213 Move X0, 0x737000
	214 Move X0, [X0+1448]
	215 Move V13, V1
	216 Call 0x1C17CF4
	217 Move V1, V13
	218 Move W8, 1
	219 Move [X23+2750], W8
	220 Move X24, 0x737000
	221 Move X24, [X24+1448]
	222 Multiply S13, S11, S10
	223 Subtract S10, S12, S1
	224 NotImplemented "Instruction FDIV not yet implemented."
	225 Move X0, [X24]
	226 Move V9, V12
	227 Move [X31+24], S1
	228 Move W8, [X0+224]
	229 Compare W8, 0
	230 JumpIfEqual {232}
	231 Move W8, W31
	232 Call 0x1C17DFC
	233 Move W8, [X23+2750]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 NotImplemented "Instruction CSET not yet implemented."
	236 Move W9, 0x7F800000
	237 NotImplemented "Instruction FRINTP not yet implemented."
	238 Move S1, W9
	239 NotImplemented "Instruction FCVTPS not yet implemented."
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Move W9, 0x80000000
	242 NotImplemented "Instruction CSEL not yet implemented."
	243 Move [X21], W9
	244 Move V11, [X22+48]
	245 Add S12, S8, S13
	246 Subtract S8, S10, S15
	247 Compare W8, 0
	248 JumpIfEqual {254}
	249 Move X0, 0x737000
	250 Move X0, [X0+1448]
	251 Call 0x1C17CF4
	252 Move W8, 1
	253 Move [X23+2750], W8
	254 Move X0, [X24]
	255 Subtract S14, S12, S13
	256 NotImplemented "Instruction FDIV not yet implemented."
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfEqual {261}
	260 Move W8, W31
	261 Call 0x1C17DFC
	262 Move W8, [X23+2750]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 NotImplemented "Instruction CSET not yet implemented."
	265 Move W9, 0x7F800000
	266 NotImplemented "Instruction FRINTP not yet implemented."
	267 Move S1, W9
	268 NotImplemented "Instruction FCVTPS not yet implemented."
	269 NotImplemented "Instruction FCMP not yet implemented."
	270 Move W9, 0x80000000
	271 NotImplemented "Instruction CSEL not yet implemented."
	272 Move [X21+4], W9
	273 Move V0, [X31+28]
	274 Move V8, [X22+48]
	275 Subtract S10, S14, S0
	276 Move V14, V0
	277 Compare W8, 0
	278 JumpIfEqual {284}
	279 Move X0, 0x737000
	280 Move X0, [X0+1448]
	281 Call 0x1C17CF4
	282 Move W8, 1
	283 Move [X23+2750], W8
	284 Move X0, [X24]
	285 NotImplemented "Instruction FDIV not yet implemented."
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfEqual {290}
	289 Move W8, W31
	290 Call 0x1C17DFC
	291 Move W8, [X23+2750]
	292 NotImplemented "Instruction CMP not yet implemented."
	293 NotImplemented "Instruction CSET not yet implemented."
	294 Move W9, 0x7F800000
	295 NotImplemented "Instruction FRINTP not yet implemented."
	296 Move S1, W9
	297 NotImplemented "Instruction FCMP not yet implemented."
	298 Move S1, [X31+12]
	299 Move S0, [X31+16]
	300 NotImplemented "Instruction FCVTPS not yet implemented."
	301 Move W9, 0x80000000
	302 NotImplemented "Instruction CSEL not yet implemented."
	303 Move [X21+8], W9
	304 Add S0, S0, S1
	305 Move V1, [X31+20]
	306 Move V8, [X22+48]
	307 Subtract S10, S0, S1
	308 Compare W8, 0
	309 JumpIfEqual {315}
	310 Move X0, 0x737000
	311 Move X0, [X0+1448]
	312 Call 0x1C17CF4
	313 Move W8, 1
	314 Move [X23+2750], W8
	315 Move X0, [X24]
	316 Move V0, [X31+24]
	317 NotImplemented "Instruction FDIV not yet implemented."
	318 Move W8, [X0+224]
	319 Add S11, S0, S9
	320 Compare W8, 0
	321 JumpIfEqual {323}
	322 Move W8, W31
	323 Call 0x1C17DFC
	324 Move W8, [X23+2750]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction CSET not yet implemented."
	327 Move W10, 0x7F800000
	328 Move W11, [X21]
	329 NotImplemented "Instruction FRINTP not yet implemented."
	330 Move S1, W10
	331 NotImplemented "Instruction FCVTPS not yet implemented."
	332 NotImplemented "Instruction FCMP not yet implemented."
	333 Or W10, W31, 0x80000001
	334 NotImplemented "Instruction CSINC not yet implemented."
	335 Subtract W9, W9, W11
	336 Move [X20], W9
	337 Move V8, [X22+48]
	338 Subtract S10, S11, S15
	339 Compare W8, 0
	340 JumpIfEqual {346}
	341 Move X0, 0x737000
	342 Move X0, [X0+1448]
	343 Call 0x1C17CF4
	344 Move W8, 1
	345 Move [X23+2750], W8
	346 Move X0, [X24]
	347 Add S9, S13, S12
	348 NotImplemented "Instruction FDIV not yet implemented."
	349 Move W8, [X0+224]
	350 Compare W8, 0
	351 JumpIfEqual {353}
	352 Move W8, W31
	353 Call 0x1C17DFC
	354 Move W8, [X23+2750]
	355 NotImplemented "Instruction CMP not yet implemented."
	356 NotImplemented "Instruction CSET not yet implemented."
	357 Move W10, 0x7F800000
	358 Move W11, [X21+4]
	359 NotImplemented "Instruction FRINTP not yet implemented."
	360 Move S1, W10
	361 NotImplemented "Instruction FCVTPS not yet implemented."
	362 NotImplemented "Instruction FCMP not yet implemented."
	363 Or W10, W31, 0x80000001
	364 NotImplemented "Instruction CSINC not yet implemented."
	365 Subtract W9, W9, W11
	366 Move [X20+4], W9
	367 Move V8, [X22+48]
	368 Subtract S9, S9, S14
	369 Compare W8, 0
	370 JumpIfEqual {376}
	371 Move X0, 0x736000
	372 Move X0, [X0+1448]
	373 Call 0x1C17CF4
	374 Move W8, 1
	375 Move [X23+2750], W8
	376 Move X0, [X24]
	377 Move X23, 0x794000
	378 NotImplemented "Instruction FDIV not yet implemented."
	379 Move W8, [X0+224]
	380 Move X23, [X23+3912]
	381 Compare W8, 0
	382 JumpIfNotEqual {384}
	383 Call 0x1C17DFC
	384 Move W9, 0x7F800000
	385 Move W10, [X21+8]
	386 NotImplemented "Instruction FRINTP not yet implemented."
	387 Move S1, W9
	388 NotImplemented "Instruction FCVTPS not yet implemented."
	389 NotImplemented "Instruction FCMP not yet implemented."
	390 Move W22, 0x80000000
	391 NotImplemented "Instruction CSEL not yet implemented."
	392 Subtract W8, W8, W10
	393 Add W21, W8, 1
	394 Move [X20+8], W21
	395 Move X0, [X23]
	396 Move X20, [X20]
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {401}
	400 Call 0x1C17DFC
	401 NotImplemented "Instruction SCVTF not yet implemented."
	402 Move S0, 3
	403 Call 0x3EB2B50
	404 Move W9, 0x7F800000
	405 Move S1, W9
	406 NotImplemented "Instruction FCVTZS not yet implemented."
	407 NotImplemented "Instruction FCMP not yet implemented."
	408 Move X10, X20
	409 ShiftRight X10, 32
	410 And X10, X10, 0x7FFFFFFF
	411 NotImplemented "Instruction CSEL not yet implemented."
	412 NotImplemented "Instruction SDIV not yet implemented."
	413 NotImplemented "Instruction SDIV not yet implemented."
	414 NotImplemented "Instruction SDIV not yet implemented."
	415 Move X20, [X31+160]
	416 Move X19, [X31+168]
	417 Move X22, [X31+144]
	418 Move X21, [X31+152]
	419 Move X24, [X31+128]
	420 Move X23, [X31+136]
	421 Move X26, [X31+112]
	422 Move X25, [X31+120]
	423 Move X30, [X31+96]
	424 Move X27, [X31+104]
	425 Move D9, [X31+80]
	426 Move D8, [X31+88]
	427 Move D11, [X31+64]
	428 Move D10, [X31+72]
	429 Move D13, [X31+48]
	430 Move D12, [X31+56]
	431 Move D15, [X31+32]
	432 Move D14, [X31+40]
	433 Multiply W9, W10, W9
	434 Multiply W0, W9, W8
	435 Add X31, X31, 176
	436 Return X0

Method: System.Boolean GetCellIndexUpdate(UnityEngine.Rendering.ProbeReferenceVolume/Cell cell, out UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellUpdateInfo, System.Boolean ignoreErrorLog)

Disassembly:
	0x039BBDB8 LDR X9, [X19 + 0x150]
	0x039BBDBC CMP W9, W24
	0x039BBDC0 B.NE 0x39BBDE8
	0x039BBDC4 LDR W10, [X19 + 0x158]
	0x039BBDC8 UBFM X11, X24, 0x20, 0x3F
	0x039BBDCC UBFM X9, X9, 0x20, 0x3F
	0x039BBDD0 CMP W9, W11
	0x039BBDD4 CSET W9, NE
	0x039BBDD8 CMP W10, W22
	0x039BBDDC CSET W10, NE
	0x039BBDE0 ORR W9, W9, W10, 0x0
	0x039BBDE4 B 0x39BBDEC
	0x039BBDE8 MOVZ W9, 0x1
	0x039BBDEC ORR W8, W9, W8, 0x0
	0x039BBDF0 ADD X9, X19, 0x144
	0x039BBDF4 STRB W8, [X19 + 0x15C]
	0x039BBDF8 STR X25, [X9]
	0x039BBDFC STR W23, [X9 + 0x8]
	0x039BBE00 STR X24, [X19 + 0x150]
	0x039BBE04 STR W22, [X19 + 0x158]
	0x039BBE08 LDP X20, X19, [X31 + 0xA0]
	0x039BBE0C LDP X22, X21, [X31 + 0x90]
	0x039BBE10 LDP X24, X23, [X31 + 0x80]
	0x039BBE14 LDP X26, X25, [X31 + 0x70]
	0x039BBE18 LDP X28, X27, [X31 + 0x60]
	0x039BBE1C LDP X29, X30, [X31 + 0x50]
	0x039BBE20 LDP D9, D8, [X31 + 0x40]
	0x039BBE24 ADD X31, X31, 0xB0
	0x039BBE28 RET
	0x039BBE2C BL 0x1C16F20
	0x039BBE30 BL 0x1C16F20
	0x039BBE34 BL 0x1C16F20
	0x039BBE38 B 0x39BBE40
	0x039BBE3C B 0x39BBEA8
	0x039BBE40 MOV X20, X0
	0x039BBE44 CMP W1, 0x1
	0x039BBE48 B.NE 0x39BBE7C
	0x039BBE4C MOV X0, X20
	0x039BBE50 BL 0x3EB1AD0
	0x039BBE54 LDR X21, [X0]
	0x039BBE58 BL 0x3EB1AE0
	0x039BBE5C ADRP X8, 0x797000
	0x039BBE60 LDR X8, [X8 + 0x488]
	0x039BBE64 ADD X0, X31, 0x20
	0x039BBE68 LDR X1, [X8]
	0x039BBE6C BL 0x2C0B1EC
	0x039BBE70 CBZ X21, 0x39BBD68
	0x039BBE74 MOV X0, X21
	0x039BBE78 BL 0x1C16F18
	0x039BBE7C MOV X21, X31
	0x039BBE80 B 0x39BBE88
	0x039BBE84 MOV X20, X0
	0x039BBE88 ADRP X8, 0x797000
	0x039BBE8C LDR X8, [X8 + 0x488]
	0x039BBE90 LDR X1, [X8]
	0x039BBE94 ADD X0, X31, 0x20
	0x039BBE98 BL 0x2C0B1EC
	0x039BBE9C CBZ X21, 0x39BBF14
	0x039BBEA0 MOV X0, X21
	0x039BBEA4 BL 0x1C16F18
	0x039BBEA8 MOV X20, X0
	0x039BBEAC CMP W1, 0x1
	0x039BBEB0 B.NE 0x39BBEEC
	0x039BBEB4 MOV X0, X20
	0x039BBEB8 BL 0x3EB1AD0
	0x039BBEBC LDR X8, [X0]
	0x039BBEC0 STR X8, [X31]
	0x039BBEC4 BL 0x3EB1AE0
	0x039BBEC8 ADRP X8, 0x797000
	0x039BBECC LDR X8, [X8 + 0x488]
	0x039BBED0 ADD X0, X31, 0x20
	0x039BBED4 LDR X1, [X8]
	0x039BBED8 BL 0x2C0B1EC
	0x039BBEDC LDR X8, [X31]
	0x039BBEE0 CBZ X8, 0x39BBBB8
	0x039BBEE4 LDR X0, [X31]
	0x039BBEE8 BL 0x1C16F18
	0x039BBEEC STR X31, [X31]
	0x039BBEF0 B 0x39BBEF8
	0x039BBEF4 MOV X20, X0
	0x039BBEF8 ADRP X8, 0x797000
	0x039BBEFC LDR X8, [X8 + 0x488]
	0x039BBF00 LDR X1, [X8]
	0x039BBF04 ADD X0, X31, 0x20
	0x039BBF08 BL 0x2C0B1EC
	0x039BBF0C LDR X8, [X31]
	0x039BBF10 CBNZ X8, 0x39BBF1C
	0x039BBF14 MOV X0, X20
	0x039BBF18 BL 0x1D2C690
	0x039BBF1C LDR X0, [X31]
	0x039BBF20 BL 0x1C16F18
	0x039BBF24 BL 0x1990590

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+48], X26
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X23, 0xA27000
	012 Move W8, [X23+3225]
	013 Move W20, W3
	014 Move X19, X2
	015 Move X22, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x797000
	022 Move X0, [X0+3912]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3225], W8
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+24], W31
	028 Move [X31+16], X31
	029 Move [X31+8], W31
	030 Move [X31], X31
	031 Move [X19+16], V0
	032 Move [X19+24], V0
	033 Move [X19], V0
	034 Compare X22, 0
	035 JumpIfEqual {110}
	036 Move X1, [X22+16]
	037 Move W2, [X22+24]
	038 Move W3, [X22+36]
	039 Move X23, 0x797000
	040 Move X23, [X23+3912]
	041 Add X4, X31, 16
	042 Add X5, X31, 0
	043 Move X0, X21
	044 Call ProbeReferenceVolume.GetNumberOfBricksAtSubdiv, X0, X1, X2, X3, X4
	045 Move X8, [X23]
	046 Move X25, [X22+16]
	047 Move W24, [X22+24]
	048 Move W26, [X21+52]
	049 Move W9, [X8+224]
	050 Move W23, W0
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Subtract W8, W26, 1
	056 NotImplemented "Instruction SCVTF not yet implemented."
	057 Move S0, 3
	058 Call 0x3EB2B50
	059 Move W8, 0x7F800000
	060 Move S1, W8
	061 NotImplemented "Instruction FCVTZS not yet implemented."
	062 Move W8, 0x80000000
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Move X9, X25
	066 ShiftRight X9, 32
	067 And X9, X9, 0x7FFFFFFF
	068 Multiply W10, W8, W25
	069 Multiply W9, W8, W9
	070 Multiply W8, W8, W24
	071 NotImplemented "Instruction BFM not yet implemented."
	072 Move [X19+44], W8
	073 Move [X19+36], X10
	074 Move W8, [X22+36]
	075 Move [X19+8], W8
	076 Move W8, [X31+24]
	077 Move X9, [X31+16]
	078 Move [X19+20], W8
	079 Move [X19+12], X9
	080 Move X9, [X31+16]
	081 Move X8, [X31]
	082 Move W10, [X31+8]
	083 Move W11, [X31+24]
	084 And X12, X9, 0
	085 Add W9, W9, W8
	086 Add X8, X12, X8
	087 And X8, X8, 0
	088 Add W10, W11, W10
	089 Or X8, X8, X9
	090 Move [X19+24], X8
	091 Move [X19+32], W10
	092 Move X0, [X21+64]
	093 Compare X0, 0
	094 JumpIfEqual {110}
	095 And W3, W20, 1
	096 Move W1, W23
	097 Move X2, X19
	098 Move X20, [X31+96]
	099 Move X19, [X31+104]
	100 Move X22, [X31+80]
	101 Move X21, [X31+88]
	102 Move X24, [X31+64]
	103 Move X23, [X31+72]
	104 Move X26, [X31+48]
	105 Move X25, [X31+56]
	106 Move X30, [X31+32]
	107 Add X31, X31, 112
	108 Call ProbeBrickIndex.AssignIndexChunksToCell, X0, X1, X2, X3
	109 Return X0
	110 Call 0x1C17F20

Method: System.Void PerformPendingOperations()

Disassembly:
	0x039BE158 BL 0x3EB1AC0
	0x039BE15C LDR W19, [X31 + 0x1C]
	0x039BE160 CBZ X25, 0x39BE208
	0x039BE164 LDR W22, [X22 + 0x178]
	0x039BE168 ADD X0, X31, 0x20
	0x039BE16C ADD X1, X31, 0xC0
	0x039BE170 MOVZ W2, 0x50
	0x039BE174 BL 0x3EB1AC0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call ProbeReferenceVolume.PerformPendingDeletion, X0
	005 Move X0, X19
	006 Call ProbeReferenceVolume.PerformPendingIndexChangeAndInit, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call ProbeReferenceVolume.PerformPendingLoading, X0
	011 Return 

Method: System.Void InitProbeReferenceVolume(UnityEngine.Rendering.ProbeVolumeTextureMemoryBudget memoryBudget, UnityEngine.Rendering.ProbeVolumeBlendingTextureMemoryBudget blendingMemoryBudget, UnityEngine.Rendering.ProbeVolumeSHBands shBands)

Disassembly:
	0x039BB138 LDP X30, X25, [X31 + 0x70]
	0x039BB13C ADD X31, X31, 0xB0
	0x039BB140 RET
	0x039BB144 LDRB W8, [X25 + 0x34]
	0x039BB148 CBZ W8, 0x39BB074
	0x039BB14C MOV X0, X20
	0x039BB150 BL 0x39B99F4
	0x039BB154 TBZ X0, 0x0, 0x39BB0F0
	0x039BB158 LDR X0, [X21 + 0x18]
	0x039BB15C CBZ X0, 0x39BB19C
	0x039BB160 MOV X1, X31
	0x039BB164 BL 0x39C3D7C
	0x039BB168 MOVZ W8, 0x1
	0x039BB16C STRB W8, [X20 + 0x284]
	0x039BB170 STRB W31, [X21 + 0x60]
	0x039BB174 B 0x39BB0F0
	0x039BB178 BL 0x1C16F20
	0x039BB17C MOV X0, X21
	0x039BB180 BL 0x1C16F18
	0x039BB184 BL 0x1C16F20
	0x039BB188 BL 0x1C16F20
	0x039BB18C BL 0x1C16F20
	0x039BB190 BL 0x1C16F20
	0x039BB194 BL 0x1C16F20
	0x039BB198 BL 0x1C16F20
	0x039BB19C BL 0x1C16F20
	0x039BB1A0 B 0x39BB1E0
	0x039BB1A4 B 0x39BB1E0
	0x039BB1A8 B 0x39BB1E0
	0x039BB1AC B 0x39BB1E0
	0x039BB1B0 B 0x39BB1E0
	0x039BB1B4 B 0x39BB1E0
	0x039BB1B8 B 0x39BB1E0
	0x039BB1BC B 0x39BB1E0
	0x039BB1C0 B 0x39BB1E0
	0x039BB1C4 B 0x39BB1E0
	0x039BB1C8 B 0x39BB1E0
	0x039BB1CC B 0x39BB1E0
	0x039BB1D0 B 0x39BB1E0
	0x039BB1D4 B 0x39BB1E0
	0x039BB1D8 B 0x39BB1E0
	0x039BB1DC B 0x39BB1E0
	0x039BB1E0 MOV X20, X0
	0x039BB1E4 CMP W1, 0x1
	0x039BB1E8 B.NE 0x39BB200
	0x039BB1EC MOV X0, X20
	0x039BB1F0 BL 0x3EB1AD0
	0x039BB1F4 LDR X21, [X0]
	0x039BB1F8 BL 0x3EB1AE0
	0x039BB1FC B 0x39BB0D0
	0x039BB200 MOV X21, X31
	0x039BB204 B 0x39BB20C
	0x039BB208 MOV X20, X0
	0x039BB20C MOV X0, X19
	0x039BB210 MOV X1, X31
	0x039BB214 MOV X2, X31
	0x039BB218 BL 0x33C5D2C
	0x039BB21C TBZ X0, 0x0, 0x39BB22C
	0x039BB220 MOV X0, X19
	0x039BB224 MOV X1, X31
	0x039BB228 BL 0x3BFEA0C
	0x039BB22C CBNZ X21, 0x39BB238
	0x039BB230 MOV X0, X20
	0x039BB234 BL 0x1D2C690
	0x039BB238 MOV X0, X21
	0x039BB23C BL 0x1C16F18
	0x039BB240 BL 0x1990590
	0x039BB244 SUB X31, X31, 0x40
	0x039BB248 STP X30, X23, [X31 + 0x10]
	0x039BB24C STP X22, X21, [X31 + 0x20]
	0x039BB250 STP X20, X19, [X31 + 0x30]
	0x039BB254 ADRP X20, 0xA26000
	0x039BB258 LDRB W8, [X20 + 0xC8F]
	0x039BB25C MOV X19, X0
	0x039BB260 TBNZ X8, 0x0, 0x39BB29C
	0x039BB264 ADRP X0, 0x797000
	0x039BB268 LDR X0, [X0 + 0x420]
	0x039BB26C BL 0x1C16CF4
	0x039BB270 ADRP X0, 0x797000
	0x039BB274 LDR X0, [X0 + 0x3A8]
	0x039BB278 BL 0x1C16CF4
	0x039BB27C ADRP X0, 0x797000
	0x039BB280 LDR X0, [X0 + 0x3F0]
	0x039BB284 BL 0x1C16CF4
	0x039BB288 ADRP X0, 0x797000
	0x039BB28C LDR X0, [X0 + 0x340]
	0x039BB290 BL 0x1C16CF4
	0x039BB294 MOVZ W8, 0x1
	0x039BB298 STRB W8, [X20 + 0xC8F]
	0x039BB29C STR X31, [X31 + 0x8]
	0x039BB2A0 LDR X8, [X19 + 0x238]
	0x039BB2A4 CBZ X8, 0x39BB368
	0x039BB2A8 LDR X0, [X19 + 0x240]
	0x039BB2AC CBZ X0, 0x39BB368
	0x039BB2B0 ADRP X22, 0x797000
	0x039BB2B4 ADRP X23, 0x797000
	0x039BB2B8 LDR W20, [X8 + 0x18]
	0x039BB2BC LDR X22, [X22 + 0x3F0]
	0x039BB2C0 LDR X23, [X23 + 0x420]
	0x039BB2C4 MOV W21, W31
	0x039BB2C8 LDR W8, [X0 + 0x18]
	0x039BB2CC CMP W21, W8
	0x039BB2D0 B.GE 0x39BB31C
	0x039BB2D4 LDR X2, [X22]
	0x039BB2D8 MOV W1, W21
	0x039BB2DC BL 0x2B40178
	0x039BB2E0 LDR X1, [X0]
	0x039BB2E4 MOVZ W2, 0x1
	0x039BB2E8 MOV X0, X19
	0x039BB2EC STR X1, [X31 + 0x8]
	0x039BB2F0 BL 0x39BACAC
	0x039BB2F4 TBZ X0, 0x0, 0x39BB30C
	0x039BB2F8 LDR X0, [X19 + 0x238]
	0x039BB2FC CBZ X0, 0x39BB368
	0x039BB300 LDR X2, [X23]
	0x039BB304 ADD X1, X31, 0x8
	0x039BB308 BL 0x2B3FC18
	0x039BB30C LDR X0, [X19 + 0x240]
	0x039BB310 ADD W21, W21, 0x1
	0x039BB314 CBNZ X0, 0x39BB2C8
	0x039BB318 B 0x39BB368
	0x039BB31C LDR X0, [X19 + 0x238]
	0x039BB320 CBZ X0, 0x39BB368

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0xA27000
	013 Move W8, [X21+3226]
	014 Move W23, W3
	015 Move W24, W2
	016 Move W20, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x798000
	023 Move X0, [X0+608]
	024 Call 0x1C17CF4
	025 Move X0, 0x798000
	026 Move X0, [X0+264]
	027 Call 0x1C17CF4
	028 Move X0, 0x798000
	029 Move X0, [X0+624]
	030 Call 0x1C17CF4
	031 Move X0, 0x798000
	032 Move X0, [X0+904]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3226], W8
	036 Move W8, [X19+321]
	037 Compare W8, 0
	038 JumpIfNotEqual {126}
	039 Move X9, 0x798000
	040 Move W21, [X19+344]
	041 Move X22, [X19+336]
	042 Move X9, [X9+624]
	043 Add X8, X19, 324
	044 Move W25, [X8+8]
	045 Move X26, [X8]
	046 Move X0, [X9]
	047 Call 0x1C17F10
	048 Move W3, 1
	049 Move W1, W20
	050 Move W2, W23
	051 Move X27, X0
	052 Call ProbeBrickPool..ctor, X0, X1, X2, X3
	053 Move [X19+56], X27
	054 Move X8, 0x798000
	055 Move X8, [X8+608]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move X1, X31
	059 Move X27, X0
	060 Call Object..ctor, X0
	061 Move [X27+48], W24
	062 Move [X27+52], W23
	063 Move [X19+80], X27
	064 Move X8, 0x798000
	065 Move X8, [X8+264]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move W1, W20
	069 Move X23, X0
	070 Call ProbeBrickIndex..ctor, X0, X1
	071 Move W8, [X19+52]
	072 Move S0, 3
	073 Move [X19+64], X23
	074 Subtract W8, W8, 1
	075 NotImplemented "Instruction SCVTF not yet implemented."
	076 Call 0x3EB2B50
	077 Move X8, 0x798000
	078 Move X8, [X8+904]
	079 Move V8, V0
	080 Move X0, [X8]
	081 Call 0x1C17F10
	082 Move W8, 0x7F800000
	083 Move S0, W8
	084 NotImplemented "Instruction FCVTZS not yet implemented."
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 Move W8, 0x80000000
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Move X1, X26
	089 Move X2, X25
	090 Move X3, X22
	091 Move X4, X21
	092 Move X20, X0
	093 Call ProbeCellIndices..ctor, X0, X1, X2, X3
	094 Move W8, [X19+236]
	095 Move [X19+72], X20
	096 Compare W8, 0
	097 JumpIfEqual {100}
	098 Move X0, X19
	099 Call ProbeReferenceVolume.AllocateTemporaryDataLocation, X0
	100 Move X8, [X19+96]
	101 Compare X8, 0
	102 JumpIfEqual {139}
	103 Move X9, [X8+24]
	104 Compare W9, 0
	105 JumpIfEqual {138}
	106 And X9, X9, 0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X8+32], W31
	109 Move W10, 0xAAAB
	110 NotImplemented "Instruction MOVK not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X8+36], W10
	113 Move X10, INVALID
	114 Move W11, 0xAAAB
	115 NotImplemented "Instruction MOVK not yet implemented."
	116 Add X9, X10, X9
	117 Move W12, 0x3F800000
	118 Move W20, 1
	119 Move [X8+40], W11
	120 Add X8, X8, X9
	121 Move X0, X19
	122 Move [X8+32], W12
	123 Move [X19+321], W20
	124 Call ProbeReferenceVolume.ClearDebugData, X0
	125 Move [X19+320], W20
	126 Move X20, [X31+80]
	127 Move X19, [X31+88]
	128 Move X22, [X31+64]
	129 Move X21, [X31+72]
	130 Move X24, [X31+48]
	131 Move X23, [X31+56]
	132 Move X26, [X31+32]
	133 Move X25, [X31+40]
	134 Move X30, [X31+16]
	135 Move X27, [X31+24]
	136 Move V8, [X31+96]
	137 Return 
	138 Call 0x1C17F28
	139 Call 0x1C17F20

Method: System.Void AllocateTemporaryDataLocation()

Disassembly:
	0x039BD588 LDR X1, [X23]
	0x039BD58C MOV X20, X0
	0x039BD590 BL 0x2AA4804
	0x039BD594 STR X20, [X19 + 0x130]
	0x039BD598 LDR X0, [X27]
	0x039BD59C BL 0x1C16F10
	0x039BD5A0 LDR X1, [X23]
	0x039BD5A4 MOV X20, X0
	0x039BD5A8 BL 0x2AA4804
	0x039BD5AC STR X20, [X19 + 0x138]
	0x039BD5B0 LDR X0, [X24]
	0x039BD5B4 MOV X1, X31
	0x039BD5B8 BL 0x3C124EC
	0x039BD5BC ADRP X8, 0xFFFFFFFFFD130000
	0x039BD5C0 LDR V0, [X8 + 0x738]
	0x039BD5C4 MOVZ W9, 0xCCCD
	0x039BD5C8 ADD X8, X19, 0x164
	0x039BD5CC MOVK W9, 0x3DCC0000
	0x039BD5D0 STR W0, [X19 + 0x160]
	0x039BD5D4 STR D0, [X8]
	0x039BD5D8 STR W9, [X19 + 0x16C]
	0x039BD5DC LDR X0, [X29]
	0x039BD5E0 BL 0x1C16F10
	0x039BD5E4 LDR X1, [X28]
	0x039BD5E8 MOV X20, X0
	0x039BD5EC BL 0x301B7C4
	0x039BD5F0 STR X20, [X19 + 0x188]
	0x039BD5F4 ADRP X8, 0x795000
	0x039BD5F8 LDR X8, [X8 + 0x598]
	0x039BD5FC LDR X0, [X8]
	0x039BD600 BL 0x1C16F10
	0x039BD604 MOV X1, X31
	0x039BD608 MOV X20, X0
	0x039BD60C BL 0x39C6168
	0x039BD610 STR X20, [X19 + 0x190]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X20, 0xA25000
	007 Move X21, 0x796000
	008 Move W8, [X20+3227]
	009 Move X21, [X21+1256]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x796000
	016 Move X0, [X0+1256]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3227], W8
	020 Add X20, X19, 152
	021 Move X0, X20
	022 Call DataLocation.Cleanup, X0
	023 Move W8, [X19+236]
	024 Move W2, [X19+376]
	025 Move X3, [X21]
	026 Add X6, X19, 232
	027 Move W0, W8
	028 ShiftRight W0, 26
	029 And W0, W0, 0x1FFFFFF
	030 Add X8, X31, 0
	031 Move W5, 1
	032 Move W1, W31
	033 Move W4, W31
	034 Call ProbeBrickPool.CreateDataLocation, X0, X1, X2, X3, X4, X5, X6
	035 Add X1, X31, 0
	036 Move W2, 80
	037 Move X0, X20
	038 Call 0x3EB2AC0
	039 Move X20, [X31+96]
	040 Move X19, [X31+104]
	041 Move X30, [X31+80]
	042 Move X21, [X31+88]
	043 Add X31, X31, 112
	044 Return 

Method: System.Void .ctor()

Disassembly:
	0x039BE178 LDR X3, [X31 + 0x10]
	0x039BE17C ADD X1, X31, 0x20
	0x039BE180 MOV X0, X25
	0x039BE184 MOV X2, X24
	0x039BE188 MOV W4, W19
	0x039BE18C MOV W5, W22
	0x039BE190 MOV W6, W21
	0x039BE194 BL 0x39B8368
	0x039BE198 B 0x39BE1E8
	0x039BE19C LDR X21, [X22 + 0x38]
	0x039BE1A0 ADD X0, X31, 0xC0
	0x039BE1A4 MOVZ W2, 0x50
	0x039BE1A8 MOV X1, X23
	0x039BE1AC BL 0x3EB1AC0
	0x039BE1B0 LDR W19, [X31 + 0x1C]
	0x039BE1B4 CBZ X21, 0x39BE208
	0x039BE1B8 LDR W22, [X22 + 0x178]
	0x039BE1BC ADD X0, X31, 0x70
	0x039BE1C0 ADD X1, X31, 0xC0
	0x039BE1C4 MOVZ W2, 0x50
	0x039BE1C8 BL 0x3EB1AC0
	0x039BE1CC LDR X3, [X31 + 0x10]
	0x039BE1D0 ADD X1, X31, 0x70
	0x039BE1D4 MOV X0, X21
	0x039BE1D8 MOV X2, X24
	0x039BE1DC MOV W4, W19
	0x039BE1E0 MOV W5, W22
	0x039BE1E4 BL 0x39B7858
	0x039BE1E8 LDP X20, X19, [X31 + 0x1E0]
	0x039BE1EC LDP X22, X21, [X31 + 0x1D0]
	0x039BE1F0 LDP X24, X23, [X31 + 0x1C0]
	0x039BE1F4 LDP X26, X25, [X31 + 0x1B0]
	0x039BE1F8 LDP X28, X27, [X31 + 0x1A0]
	0x039BE1FC LDP X29, X30, [X31 + 0x190]
	0x039BE200 ADD X31, X31, 0x1F0
	0x039BE204 RET
	0x039BE208 BL 0x1C16F20
	0x039BE20C SUB X31, X31, 0x140
	0x039BE210 STP X4, X29, [X31 + 0xF8]
	0x039BE214 STP X30, X23, [X31 + 0x110]
	0x039BE218 STP X22, X21, [X31 + 0x120]
	0x039BE21C STP X20, X19, [X31 + 0x130]
	0x039BE220 ADRP X22, 0xA23000
	0x039BE224 STR X3, [X31 + 0xF0]
	0x039BE228 ADRP X23, 0x75E000
	0x039BE22C LDRB W8, [X22 + 0xCA2]
	0x039BE230 LDR X23, [X23 + 0x2B8]
	0x039BE234 MOV W19, W5
	0x039BE238 MOV X20, X1
	0x039BE23C MOV X21, X0
	0x039BE240 TBNZ X8, 0x0, 0x39BE264
	0x039BE244 ADRP X0, 0x75E000
	0x039BE248 LDR X0, [X0 + 0x2B8]
	0x039BE24C BL 0x1C16CF4
	0x039BE250 ADRP X0, 0x794000
	0x039BE254 LDR X0, [X0 + 0x5D8]
	0x039BE258 BL 0x1C16CF4
	0x039BE25C MOVZ W8, 0x1
	0x039BE260 STRB W8, [X22 + 0xCA2]
	0x039BE264 LDR W8, [X21 + 0xEC]
	0x039BE268 LDR X3, [X23]
	0x039BE26C LDR X22, [X21 + 0xD0]
	0x039BE270 ADD X0, X31, 0xF0
	0x039BE274 UBFM W2, W8, 0x1A, 0x19
	0x039BE278 MUL W1, W2, W19
	0x039BE27C BL 0x23CA8FC
	0x039BE280 CBZ X22, 0x39BE34C
	0x039BE284 ADRP X8, 0x794000
	0x039BE288 LDR X8, [X8 + 0x5D8]
	0x039BE28C MOV X2, X0
	0x039BE290 MOV X3, X1
	0x039BE294 MOV X0, X22
	0x039BE298 LDR X5, [X8]
	0x039BE29C MOV X1, X2
	0x039BE2A0 MOV X2, X3
	0x039BE2A4 MOV W3, W31
	0x039BE2A8 MOV W4, W31
	0x039BE2AC BL 0x229C77C
	0x039BE2B0 LDR X0, [X21 + 0xD0]
	0x039BE2B4 CBZ X0, 0x39BE34C
	0x039BE2B8 MOV W1, W31
	0x039BE2BC MOV X2, X31
	0x039BE2C0 ADD X23, X21, 0x98
	0x039BE2C4 BL 0x3C1DDDC
	0x039BE2C8 LDR W22, [X21 + 0xEC]
	0x039BE2CC ADD X0, X31, 0xA0
	0x039BE2D0 MOVZ W2, 0x50
	0x039BE2D4 MOV X1, X23
	0x039BE2D8 BL 0x3EB1AC0
	0x039BE2DC ADD X3, X31, 0xA0
	0x039BE2E0 MOVZ W1, 0x1
	0x039BE2E4 MOV X0, X21
	0x039BE2E8 MOV W2, W22
	0x039BE2EC BL 0x39BDAFC
	0x039BE2F0 LDR X22, [X21 + 0x38]
	0x039BE2F4 MOV X21, X0
	0x039BE2F8 ADD X0, X31, 0x50
	0x039BE2FC MOVZ W2, 0x50
	0x039BE300 MOV X1, X23
	0x039BE304 BL 0x3EB1AC0
	0x039BE308 CBZ X22, 0x39BE34C
	0x039BE30C ADD X0, X31, 0x0
	0x039BE310 ADD X1, X31, 0x50
	0x039BE314 MOVZ W2, 0x50
	0x039BE318 BL 0x3EB1AC0
	0x039BE31C ADD X1, X31, 0x0
	0x039BE320 MOV X0, X22
	0x039BE324 MOV X2, X21
	0x039BE328 MOV X3, X20
	0x039BE32C MOV W4, W19
	0x039BE330 BL 0x39B7BF4
	0x039BE334 LDP X20, X19, [X31 + 0x130]
	0x039BE338 LDP X22, X21, [X31 + 0x120]
	0x039BE33C LDP X30, X23, [X31 + 0x110]
	0x039BE340 LDR X29, [X31 + 0x100]
	0x039BE344 ADD X31, X31, 0x140
	0x039BE348 RET
	0x039BE34C BL 0x1C16F20
	0x039BE350 SUB X31, X31, 0x1B0
	0x039BE354 STR X29, [X31 + 0x150]
	0x039BE358 STP X30, X27, [X31 + 0x160]
	0x039BE35C STP X26, X25, [X31 + 0x170]
	0x039BE360 STP X24, X23, [X31 + 0x180]
	0x039BE364 STP X22, X21, [X31 + 0x190]
	0x039BE368 STP X20, X19, [X31 + 0x1A0]
	0x039BE36C ADRP X19, 0xA23000
	0x039BE370 ADRP X22, 0x794000
	0x039BE374 LDRB W8, [X19 + 0xCA3]
	0x039BE378 LDR X22, [X22 + 0x5E8]
	0x039BE37C MOV X20, X1
	0x039BE380 MOV X21, X0
	0x039BE384 TBNZ X8, 0x0, 0x39BE3A8
	0x039BE388 ADRP X0, 0x794000
	0x039BE38C LDR X0, [X0 + 0xD0]
	0x039BE390 BL 0x1C16CF4
	0x039BE394 ADRP X0, 0x794000
	0x039BE398 LDR X0, [X0 + 0x5E8]
	0x039BE39C BL 0x1C16CF4
	0x039BE3A0 MOVZ W8, 0x1
	0x039BE3A4 STRB W8, [X19 + 0xCA3]
	0x039BE3A8 LDR X0, [X22]
	0x039BE3AC MOVZ W1, 0x1
	0x039BE3B0 MOV W2, W31
	0x039BE3B4 MOV W3, W31
	0x039BE3B8 MOV X4, X31
	0x039BE3BC BL 0x3BFE7FC
	0x039BE3C0 MOV X1, X31
	0x039BE3C4 MOV X2, X31
	0x039BE3C8 MOV X19, X0
	0x039BE3CC BL 0x33C5D2C
	0x039BE3D0 TBZ X0, 0x0, 0x39BE3E0
	0x039BE3D4 MOV X0, X19
	0x039BE3D8 MOV X1, X31
	0x039BE3DC BL 0x3BFE970
	0x039BE3E0 CBZ X20, 0x39BE5DC
	0x039BE3E4 LDR X8, [X20 + 0x10]
	0x039BE3E8 CBZ X8, 0x39BE5E8
	0x039BE3EC LDR X9, [X21 + 0xF0]
	0x039BE3F0 CBZ X9, 0x39BE5EC
	0x039BE3F4 LDR X9, [X9 + 0x78]
	0x039BE3F8 LDR X26, [X8 + 0x10]
	0x039BE3FC CBZ X9, 0x39BE434
	0x039BE400 CBZ X26, 0x39BE5F8
	0x039BE404 LDRB W9, [X26 + 0x34]
	0x039BE408 CMP W9, 0x1
	0x039BE40C B.NE 0x39BE434
	0x039BE410 LDR X0, [X21 + 0x50]
	0x039BE414 CBZ X0, 0x39BE600
	0x039BE418 ADD X22, X20, 0x18
	0x039BE41C LDR W1, [X26 + 0x30]
	0x039BE420 LDR X2, [X22]
	0x039BE424 BL 0x39B8E00
	0x039BE428 TBZ X0, 0x0, 0x39BE5D0
	0x039BE42C MOVZ W24, 0x1
	0x039BE430 B 0x39BE43C
	0x039BE434 MOV W24, W31
	0x039BE438 ADD X22, X8, 0x20
	0x039BE43C LDR X22, [X22]
	0x039BE440 CBZ X22, 0x39BE5F0
	0x039BE444 LDR X8, [X20 + 0x10]
	0x039BE448 CBZ X8, 0x39BE5F4
	0x039BE44C LDRB W9, [X8 + 0x60]
	0x039BE450 LDR W27, [X22 + 0x18]
	0x039BE454 CBNZ W9, 0x39BE494
	0x039BE458 MOV X0, X21
	0x039BE45C MOV X1, X8
	0x039BE460 BL 0x39BE6B4
	0x039BE464 CMP W27, 0x1
	0x039BE468 B.LT 0x39BE494
	0x039BE46C CBZ X26, 0x39BE60C
	0x039BE470 MOV W23, W31
	0x039BE474 LDP X3, X4, [X26 + 0x50]
	0x039BE478 MOV X0, X21
	0x039BE47C MOV X1, X22
	0x039BE480 MOV W5, W23
	0x039BE484 BL 0x39BE20C
	0x039BE488 ADD W23, W23, 0x1
	0x039BE48C CMP W27, W23
	0x039BE490 B.NE 0x39BE474
	0x039BE494 CBZ W24, 0x39BE518
	0x039BE498 CMP W27, 0x1
	0x039BE49C B.LT 0x39BE57C
	0x039BE4A0 CBZ X26, 0x39BE604
	0x039BE4A4 MOV W23, W31
	0x039BE4A8 ADD X24, X26, 0xA0
	0x039BE4AC ADD X25, X26, 0x110
	0x039BE4B0 ADD X0, X31, 0x70
	0x039BE4B4 MOVZ W2, 0x70
	0x039BE4B8 MOV X1, X24
	0x039BE4BC BL 0x3EB1AC0
	0x039BE4C0 LDP X3, X4, [X26 + 0x50]
	0x039BE4C4 ADD X2, X31, 0x70
	0x039BE4C8 MOV X0, X21
	0x039BE4CC MOV X1, X22
	0x039BE4D0 MOV W5, W23
	0x039BE4D4 MOV W6, W31
	0x039BE4D8 BL 0x39BDC80
	0x039BE4DC ADD X0, X31, 0x0
	0x039BE4E0 MOVZ W2, 0x70
	0x039BE4E4 MOV X1, X25
	0x039BE4E8 BL 0x3EB1AC0
	0x039BE4EC LDP X3, X4, [X26 + 0x50]
	0x039BE4F0 ADD X2, X31, 0x0
	0x039BE4F4 MOVZ W6, 0x1
	0x039BE4F8 MOV X0, X21
	0x039BE4FC MOV X1, X22
	0x039BE500 MOV W5, W23
	0x039BE504 BL 0x39BDC80
	0x039BE508 ADD W23, W23, 0x1
	0x039BE50C CMP W27, W23
	0x039BE510 B.NE 0x39BE4B0
	0x039BE514 B 0x39BE57C
	0x039BE518 LDR X8, [X21 + 0xF0]
	0x039BE51C CBZ X8, 0x39BE5FC
	0x039BE520 LDR V0, [X20 + 0x24]
	0x039BE524 LDR V1, [X8 + 0x80]
	0x039BE528 FCMP S0, S1
	0x039BE52C B.EQ 0x39BE57C
	0x039BE530 CMP W27, 0x1
	0x039BE534 B.LT 0x39BE57C
	0x039BE538 CBZ X26, 0x39BE608
	0x039BE53C MOV W23, W31
	0x039BE540 ADD X24, X26, 0xA0
	0x039BE544 ADD X0, X31, 0xE0
	0x039BE548 MOVZ W2, 0x70
	0x039BE54C MOV X1, X24
	0x039BE550 BL 0x3EB1AC0
	0x039BE554 LDP X3, X4, [X26 + 0x50]
	0x039BE558 ADD X2, X31, 0xE0
	0x039BE55C MOVN W6, 0x0
	0x039BE560 MOV X0, X21
	0x039BE564 MOV X1, X22
	0x039BE568 MOV W5, W23
	0x039BE56C BL 0x39BDC80
	0x039BE570 ADD W23, W23, 0x1
	0x039BE574 CMP W27, W23
	0x039BE578 B.NE 0x39BE544
	0x039BE57C MOVZ W22, 0x1
	0x039BE580 MOV X21, X31
	0x039BE584 STRB W22, [X20 + 0x28]
	0x039BE588 MOV X0, X19
	0x039BE58C MOV X1, X31
	0x039BE590 MOV X2, X31
	0x039BE594 BL 0x33C5D2C
	0x039BE598 TBZ X0, 0x0, 0x39BE5A8
	0x039BE59C MOV X0, X19
	0x039BE5A0 MOV X1, X31
	0x039BE5A4 BL 0x3BFEA0C
	0x039BE5A8 CBNZ X21, 0x39BE5E0
	0x039BE5AC MOV W0, W22
	0x039BE5B0 LDP X20, X19, [X31 + 0x1A0]
	0x039BE5B4 LDP X22, X21, [X31 + 0x190]
	0x039BE5B8 LDP X24, X23, [X31 + 0x180]
	0x039BE5BC LDP X26, X25, [X31 + 0x170]
	0x039BE5C0 LDP X30, X27, [X31 + 0x160]
	0x039BE5C4 LDR X29, [X31 + 0x150]
	0x039BE5C8 ADD X31, X31, 0x1B0
	0x039BE5CC RET
	0x039BE5D0 MOV X21, X31
	0x039BE5D4 MOV W22, W31
	0x039BE5D8 B 0x39BE588
	0x039BE5DC BL 0x1C16F20
	0x039BE5E0 MOV X0, X21
	0x039BE5E4 BL 0x1C16F18
	0x039BE5E8 BL 0x1C16F20
	0x039BE5EC BL 0x1C16F20
	0x039BE5F0 BL 0x1C16F20
	0x039BE5F4 BL 0x1C16F20
	0x039BE5F8 BL 0x1C16F20
	0x039BE5FC BL 0x1C16F20
	0x039BE600 BL 0x1C16F20
	0x039BE604 BL 0x1C16F20
	0x039BE608 BL 0x1C16F20
	0x039BE60C BL 0x1C16F20
	0x039BE610 B 0x39BE650
	0x039BE614 B 0x39BE650
	0x039BE618 B 0x39BE650
	0x039BE61C B 0x39BE650
	0x039BE620 B 0x39BE650
	0x039BE624 B 0x39BE650
	0x039BE628 B 0x39BE650
	0x039BE62C B 0x39BE650
	0x039BE630 B 0x39BE650
	0x039BE634 B 0x39BE650
	0x039BE638 B 0x39BE650
	0x039BE63C B 0x39BE650
	0x039BE640 B 0x39BE650
	0x039BE644 B 0x39BE650
	0x039BE648 B 0x39BE650
	0x039BE64C B 0x39BE650
	0x039BE650 MOV X20, X0
	0x039BE654 CMP W1, 0x1
	0x039BE658 B.NE 0x39BE670
	0x039BE65C MOV X0, X20
	0x039BE660 BL 0x3EB1AD0
	0x039BE664 LDR X21, [X0]
	0x039BE668 BL 0x3EB1AE0
	0x039BE66C B 0x39BE5D4
	0x039BE670 MOV X21, X31
	0x039BE674 B 0x39BE67C
	0x039BE678 MOV X20, X0
	0x039BE67C MOV X0, X19
	0x039BE680 MOV X1, X31
	0x039BE684 MOV X2, X31
	0x039BE688 BL 0x33C5D2C
	0x039BE68C TBZ X0, 0x0, 0x39BE69C
	0x039BE690 MOV X0, X19
	0x039BE694 MOV X1, X31
	0x039BE698 BL 0x3BFEA0C
	0x039BE69C CBNZ X21, 0x39BE6A8
	0x039BE6A0 MOV X0, X20
	0x039BE6A4 BL 0x1D2C690
	0x039BE6A8 MOV X0, X21
	0x039BE6AC BL 0x1C16F18
	0x039BE6B0 BL 0x1990590
	0x039BE6B4 SUB X31, X31, 0x120
	0x039BE6B8 STP X29, X30, [X31 + 0x100]
	0x039BE6BC STP X20, X19, [X31 + 0x110]
	0x039BE6C0 CBZ X1, 0x39BE794
	0x039BE6C4 MOVZ W8, 0x1
	0x039BE6C8 STRB W8, [X1 + 0x60]
	0x039BE6CC STRB W8, [X0 + 0x120]
	0x039BE6D0 MOV X19, X1
	0x039BE6D4 LDR X1, [X1 + 0x10]
	0x039BE6D8 MOV X20, X0
	0x039BE6DC CBZ X1, 0x39BE794
	0x039BE6E0 LDUR V0, [X19 + 0x64]
	0x039BE6E4 LDUR V1, [X19 + 0x84]
	0x039BE6E8 LDUR V2, [X19 + 0x74]
	0x039BE6EC LDP X2, X3, [X1 + 0x40]
	0x039BE6F0 STR V0, [X31 + 0xD]
	0x039BE6F4 STP V2, V1, [X31 + 0xE0]
	0x039BE6F8 LDR X8, [X20 + 0x38]
	0x039BE6FC CBZ X8, 0x39BE794
	0x039BE700 LDR X0, [X20 + 0x40]
	0x039BE704 LDR X4, [X19 + 0x20]
	0x039BE708 LDR W5, [X20 + 0xEC]
	0x039BE70C LDP V0, V1, [X31 + 0xD0]
	0x039BE710 LDR V2, [X31 + 0xF]
	0x039BE714 LDP W6, W7, [X8 + 0x58]
	0x039BE718 STP V0, V1, [X31 + 0xA0]
	0x039BE71C STR V2, [X31 + 0xC]
	0x039BE720 CBZ X0, 0x39BE794
	0x039BE724 LDP V0, V1, [X31 + 0xA0]
	0x039BE728 LDR V2, [X31 + 0xC]
	0x039BE72C ADD X8, X31, 0x70
	0x039BE730 STR X8, [X31]
	0x039BE734 STP V0, V1, [X31 + 0x70]
	0x039BE738 STR V2, [X31 + 0x9]
	0x039BE73C BL 0x39B5428
	0x039BE740 LDP V1, V0, [X31 + 0xE0]
	0x039BE744 LDR V2, [X31 + 0xD]
	0x039BE748 LDR W1, [X19 + 0x28]
	0x039BE74C STP V1, V0, [X19 + 0x40]
	0x039BE750 STR V2, [X19 + 0x3]
	0x039BE754 LDR X0, [X20 + 0x48]
	0x039BE758 LDP V0, V1, [X31 + 0xD0]
	0x039BE75C LDR V2, [X31 + 0xF]
	0x039BE760 STP V0, V1, [X31 + 0x40]
	0x039BE764 STR V2, [X31 + 0x6]
	0x039BE768 CBZ X0, 0x39BE794
	0x039BE76C LDP V0, V1, [X31 + 0x40]
	0x039BE770 LDR V2, [X31 + 0x6]
	0x039BE774 ADD X2, X31, 0x10
	0x039BE778 STP V0, V1, [X31 + 0x10]
	0x039BE77C STR V2, [X31 + 0x3]
	0x039BE780 BL 0x39B953C
	0x039BE784 LDP X20, X19, [X31 + 0x110]
	0x039BE788 LDP X29, X30, [X31 + 0x100]
	0x039BE78C ADD X31, X31, 0x120
	0x039BE790 RET
	0x039BE794 BL 0x1C16F20
	0x039BE798 SUB X31, X31, 0x120
	0x039BE79C STR D10, [X31 + 0xA0]
	0x039BE7A0 STP D9, D8, [X31 + 0xB0]
	0x039BE7A4 STP X29, X30, [X31 + 0xC0]
	0x039BE7A8 STP X28, X27, [X31 + 0xD0]
	0x039BE7AC STP X26, X25, [X31 + 0xE0]
	0x039BE7B0 STP X24, X23, [X31 + 0xF0]
	0x039BE7B4 STP X22, X21, [X31 + 0x100]
	0x039BE7B8 STP X20, X19, [X31 + 0x110]
	0x039BE7BC ADRP X22, 0xA23000
	0x039BE7C0 LDRB W8, [X22 + 0xCA6]
	0x039BE7C4 MOV X21, X2
	0x039BE7C8 MOV X19, X1
	0x039BE7CC MOV X20, X0
	0x039BE7D0 TBNZ X8, 0x0, 0x39BE7F4
	0x039BE7D4 ADRP X0, 0x794000
	0x039BE7D8 LDR X0, [X0 + 0x5F0]
	0x039BE7DC BL 0x1C16CF4
	0x039BE7E0 ADRP X0, 0x760000
	0x039BE7E4 LDR X0, [X0 + 0x570]
	0x039BE7E8 BL 0x1C16CF4
	0x039BE7EC MOVZ W8, 0x1
	0x039BE7F0 STRB W8, [X22 + 0xCA6]
	0x039BE7F4 MOVI V0.2D, 0x0
	0x039BE7F8 STP V0, V0, [X31 + 0x80]
	0x039BE7FC STP V0, V0, [X31 + 0x60]
	0x039BE800 STP V0, V0, [X31 + 0x40]
	0x039BE804 STP V0, V0, [X31 + 0x20]
	0x039BE808 LDRB W8, [X21 + 0x8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0xA24000
	014 Move X26, 0x795000
	015 Move X20, 0x795000
	016 Move X24, 0x736000
	017 Move X23, 0x795000
	018 Move X21, 0x795000
	019 Move X27, 0x795000
	020 Move X26, [X26+1272]
	021 Move W8, [X25+3228]
	022 Move X20, [X20+1280]
	023 Move X24, [X24+1592]
	024 Move X23, [X23+1288]
	025 Move X21, [X21+1296]
	026 Move X27, [X27+1304]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {124}
	032 Move X0, 0x73B000
	033 Move X0, [X0+320]
	034 Call 0x1C17CF4
	035 Move X0, 0x795000
	036 Move X0, [X0+1312]
	037 Call 0x1C17CF4
	038 Move X0, 0x795000
	039 Move X0, [X0+1320]
	040 Call 0x1C17CF4
	041 Move X0, 0x795000
	042 Move X0, [X0+1296]
	043 Call 0x1C17CF4
	044 Move X0, 0x795000
	045 Move X0, [X0+1328]
	046 Call 0x1C17CF4
	047 Move X0, 0x795000
	048 Move X0, [X0+1288]
	049 Call 0x1C17CF4
	050 Move X0, 0x795000
	051 Move X0, [X0+1336]
	052 Call 0x1C17CF4
	053 Move X0, 0x795000
	054 Move X0, [X0+1344]
	055 Call 0x1C17CF4
	056 Move X0, 0x795000
	057 Move X0, [X0+1352]
	058 Call 0x1C17CF4
	059 Move X0, 0x795000
	060 Move X0, [X0+1360]
	061 Call 0x1C17CF4
	062 Move X0, 0x795000
	063 Move X0, [X0+1368]
	064 Call 0x1C17CF4
	065 Move X0, 0x794000
	066 Move X0, [X0+256]
	067 Call 0x1C17CF4
	068 Move X0, 0x737000
	069 Move X0, [X0+3672]
	070 Call 0x1C17CF4
	071 Move X0, 0x795000
	072 Move X0, [X0+1280]
	073 Call 0x1C17CF4
	074 Move X0, 0x795000
	075 Move X0, [X0+1376]
	076 Call 0x1C17CF4
	077 Move X0, 0x795000
	078 Move X0, [X0+1272]
	079 Call 0x1C17CF4
	080 Move X0, 0x795000
	081 Move X0, [X0+1384]
	082 Call 0x1C17CF4
	083 Move X0, 0x795000
	084 Move X0, [X0+1392]
	085 Call 0x1C17CF4
	086 Move X0, 0x795000
	087 Move X0, [X0+1400]
	088 Call 0x1C17CF4
	089 Move X0, 0x795000
	090 Move X0, [X0+1408]
	091 Call 0x1C17CF4
	092 Move X0, 0x795000
	093 Move X0, [X0+1416]
	094 Call 0x1C17CF4
	095 Move X0, 0x795000
	096 Move X0, [X0+1424]
	097 Call 0x1C17CF4
	098 Move X0, 0x795000
	099 Move X0, [X0+1432]
	100 Call 0x1C17CF4
	101 Move X0, 0x736000
	102 Move X0, [X0+1592]
	103 Call 0x1C17CF4
	104 Move X0, 0x795000
	105 Move X0, [X0+1440]
	106 Call 0x1C17CF4
	107 Move X0, 0x795000
	108 Move X0, [X0+1448]
	109 Call 0x1C17CF4
	110 Move X0, 0x795000
	111 Move X0, [X0+1304]
	112 Call 0x1C17CF4
	113 Move X0, 0x795000
	114 Move X0, [X0+1456]
	115 Call 0x1C17CF4
	116 Move X0, 0x795000
	117 Move X0, [X0+1464]
	118 Call 0x1C17CF4
	119 Move X0, 0x795000
	120 Move X0, [X0+1472]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X25+3228], W8
	124 Move X0, [X26]
	125 Call 0x1C17F10
	126 Move X1, [X20]
	127 Move X20, X0
	128 Call List`1<BrickChunkAlloc>..ctor, X0
	129 Move [X19+88], X20
	130 Move X0, [X24]
	131 Move W1, 4
	132 Call 0x1C17D6C
	133 Move [X19+96], X0
	134 Move X0, [X23]
	135 Call 0x1C17F10
	136 Move X1, [X21]
	137 Move X20, X0
	138 Call Dictionary`2<Int32, Object>..ctor, X0
	139 Move [X19+128], X20
	140 Move X0, [X27]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X0, [X27]
	146 Move X8, [X0+184]
	147 Move X23, 0x795000
	148 Move X22, 0x795000
	149 Move X20, [X8+8]
	150 Move X23, [X23+1408]
	151 Move X22, [X22+1400]
	152 Compare X20, 0
	153 JumpIfNotEqual {175}
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X27]
	159 Move X9, 0x795000
	160 Move X8, [X0+184]
	161 Move X9, [X9+1456]
	162 Move X21, [X8]
	163 Move X0, [X9]
	164 Call 0x1C17F10
	165 Move X8, 0x795000
	166 Move X8, [X8+1440]
	167 Move X1, X21
	168 Move X3, X31
	169 Move X20, X0
	170 Move X2, [X8]
	171 Call UnityAction`1<Object>..ctor, X0, X1, X2
	172 Move X8, [X27]
	173 Move X8, [X8+184]
	174 Move [X8+8], X20
	175 Move X0, [X23]
	176 Call 0x1C17F10
	177 Move X4, [X22]
	178 Move X1, X20
	179 Move X2, X31
	180 Move W3, W31
	181 Move X21, X0
	182 Call 0x2494C20, X0, X1, X2, X3
	183 Move [X19+136], X21
	184 Move X0, [X27]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {190}
	188 Call 0x1C17DFC
	189 Move X0, [X27]
	190 Move X9, 0x795000
	191 Move X21, 0x795000
	192 Move X27, 0x795000
	193 Move X23, 0x795000
	194 Move X24, 0x795000
	195 Move X29, 0x795000
	196 Move X28, 0x795000
	197 Move X9, [X9+1416]
	198 Move X21, [X21+1392]
	199 Move X27, [X27+1328]
	200 Move X23, [X23+1320]
	201 Move X24, [X24+1472]
	202 Move X29, [X29+1384]
	203 Move X28, [X28+1376]
	204 Move X8, [X0+184]
	205 Move X22, 0x795000
	206 Move X26, 0x795000
	207 Move X25, 0x795000
	208 Move X20, [X8+16]
	209 Move X22, [X22+1360]
	210 Move X26, [X26+1344]
	211 Move X25, [X25+1368]
	212 Compare X20, 0
	213 JumpIfNotEqual {253}
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfEqual {219}
	217 Move X23, 0x795000
	218 Move X23, [X23+1304]
	219 Call 0x1C17DFC
	220 Move X23, 0x795000
	221 Move X23, [X23+1304]
	222 Move X0, [X23]
	223 Move X9, 0x795000
	224 Move X8, [X0+184]
	225 Move X9, [X9+1464]
	226 Move X21, [X8]
	227 Move X0, [X9]
	228 Call 0x1C17F10
	229 Move X8, 0x795000
	230 Move X8, [X8+1448]
	231 Move X1, X21
	232 Move X3, X31
	233 Move X20, X0
	234 Move X2, [X8]
	235 Call UnityAction`1<Object>..ctor, X0, X1, X2
	236 Move X8, [X23]
	237 Move X28, 0x795000
	238 Move X29, 0x795000
	239 Move X24, 0x795000
	240 Move X8, [X8+184]
	241 Move X23, 0x795000
	242 Move X27, 0x795000
	243 Move X21, 0x795000
	244 Move [X8+16], X20
	245 Move X9, 0x795000
	246 Move X28, [X28+1376]
	247 Move X29, [X29+1384]
	248 Move X24, [X24+1472]
	249 Move X23, [X23+1320]
	250 Move X27, [X27+1328]
	251 Move X21, [X21+1392]
	252 Move X9, [X9+1416]
	253 Move X0, [X9]
	254 Call 0x1C17F10
	255 Move X4, [X21]
	256 Move X1, X20
	257 Move X2, X31
	258 Move W3, W31
	259 Move X21, X0
	260 Call 0x2494C20, X0, X1, X2, X3
	261 Move X8, -49090560
	262 Move V0, [X8+234]
	263 NotImplemented "Instruction MOVI not yet implemented."
	264 Move [X19+144], X21
	265 Move [X19+264], D1
	266 Move [X19+248], V0
	267 Move X0, [X27]
	268 Call 0x1C17F10
	269 Move X1, [X23]
	270 Move X20, X0
	271 Call Dictionary`2<Object, Object>..ctor, X0
	272 Move [X19+296], X20
	273 Move X0, [X27]
	274 Call 0x1C17F10
	275 Move X1, [X23]
	276 Move X20, X0
	277 Call Dictionary`2<Object, Object>..ctor, X0
	278 Move [X19+304], X20
	279 Move X0, [X27]
	280 Call 0x1C17F10
	281 Move X1, [X23]
	282 Move X20, X0
	283 Call Dictionary`2<Object, Object>..ctor, X0
	284 Move [X19+312], X20
	285 Move X0, [X24]
	286 Move X1, X31
	287 Call Shader.PropertyToID, X0
	288 Move X8, -49086464
	289 Move V0, [X8+1848]
	290 Move W9, 0xCCCD
	291 Add X8, X19, 356
	292 NotImplemented "Instruction MOVK not yet implemented."
	293 Move [X19+352], W0
	294 Move [X8], D0
	295 Move [X19+364], W9
	296 Move X0, [X29]
	297 Call 0x1C17F10
	298 Move X1, [X28]
	299 Move X20, X0
	300 Call List`1<Object>..ctor, X0
	301 Move [X19+392], X20
	302 Move X8, 0x795000
	303 Move X8, [X8+1432]
	304 Move X0, [X8]
	305 Call 0x1C17F10
	306 Move X1, X31
	307 Move X20, X0
	308 Call ProbeVolumeDebug..ctor, X0
	309 Move [X19+400], X20
	310 Move X8, 0x73B000
	311 Move X8, [X8+320]
	312 Move W1, 7
	313 Move X0, [X8]
	314 Call 0x1C17D6C
	315 Move [X19+408], X0
	316 Move X8, 0x795000
	317 Move X8, [X8+1424]
	318 Move W1, 6
	319 Move X0, [X8]
	320 Call 0x1C17D6C
	321 Move [X19+456], X0
	322 Move X8, 0x794000
	323 Move X8, [X8+256]
	324 Move W1, W31
	325 Move X0, [X8]
	326 Call 0x1C17D6C
	327 Move [X19+464], X0
	328 Move X8, 0x737000
	329 Move X8, [X8+3672]
	330 Move W1, W31
	331 Move X0, [X8]
	332 Call 0x1C17D6C
	333 Move [X19+472], X0
	334 Move X8, 0x795000
	335 Move X8, [X8+1336]
	336 Move X0, [X8]
	337 Call 0x1C17F10
	338 Move X8, 0x795000
	339 Move X8, [X8+1312]
	340 Move X20, X0
	341 Move X1, [X8]
	342 Call Dictionary`2<Bounds, Object>..ctor, X0
	343 Move [X19+552], X20
	344 Move X0, [X22]
	345 Call 0x1C17F10
	346 Move X1, [X26]
	347 Move X20, X0
	348 Call 0x2B40B40, X0
	349 Move [X19+568], X20
	350 Move X0, [X22]
	351 Call 0x1C17F10
	352 Move X1, [X26]
	353 Move X20, X0
	354 Call 0x2B40B40, X0
	355 Move [X19+576], X20
	356 Move X0, [X22]
	357 Call 0x1C17F10
	358 Move X1, [X26]
	359 Move X20, X0
	360 Call 0x2B40B40, X0
	361 Move [X19+584], X20
	362 Move X0, [X22]
	363 Call 0x1C17F10
	364 Move X1, [X26]
	365 Move X20, X0
	366 Call 0x2B40B40, X0
	367 Move [X19+592], X20
	368 Move X0, [X25]
	369 Call 0x1C17F10
	370 Move X21, 0x795000
	371 Move X21, [X21+1352]
	372 Move X20, X0
	373 Move X1, [X21]
	374 Call 0x2B40B40, X0
	375 Move [X19+600], X20
	376 Move X0, [X25]
	377 Call 0x1C17F10
	378 Move X1, [X21]
	379 Move X20, X0
	380 Call 0x2B40B40, X0
	381 Move [X19+608], X20
	382 Move X0, [X25]
	383 Call 0x1C17F10
	384 Move X1, [X21]
	385 Move X20, X0
	386 Call 0x2B40B40, X0
	387 Move [X19+616], X20
	388 Move X0, [X25]
	389 Call 0x1C17F10
	390 Move X1, [X21]
	391 Move X20, X0
	392 Call 0x2B40B40, X0
	393 Move X0, X19
	394 Move X1, X31
	395 Move [X19+624], X20
	396 Call Object..ctor, X0
	397 Move X20, 0xA1B000
	398 Move W8, [X20+1923]
	399 Compare W8, 0
	400 JumpIfNotEqual {406}
	401 Move X0, 0x736000
	402 Move X0, [X0+1440]
	403 Call 0x1C17CF4
	404 Move W8, 1
	405 Move [X20+1923], W8
	406 Move X8, 0x736000
	407 Move X8, [X8+1440]
	408 Move X20, 0xA1B000
	409 Move X8, [X8]
	410 Move X8, [X8+184]
	411 Move V0, [X8]
	412 Move V1, [X8+8]
	413 Move [X19+20], D0
	414 Move [X19+28], S1
	415 Move W8, [X20+1939]
	416 Compare W8, 0
	417 JumpIfNotEqual {423}
	418 Move X0, 0x737000
	419 Move X0, [X0+1448]
	420 Call 0x1C17CF4
	421 Move W8, 1
	422 Move [X20+1939], W8
	423 Move X8, 0x737000
	424 Move X8, [X8+1448]
	425 Move X22, [X31+64]
	426 Move X21, [X31+72]
	427 Move X24, [X31+48]
	428 Move X23, [X31+56]
	429 Move X26, [X31+32]
	430 Move X25, [X31+40]
	431 Move X8, [X8]
	432 Move X28, [X31+16]
	433 Move X27, [X31+24]
	434 Move X8, [X8+184]
	435 Move V0, [X8]
	436 Move W8, 0x3F800000
	437 Move [X19+48], W8
	438 Move [X19+2], V0
	439 Move X20, [X31+80]
	440 Move X19, [X31+88]
	441 Move X29, [X31+96]
	442 Move X30, [X31+104]
	443 Return 

Method: UnityEngine.Rendering.ProbeReferenceVolume/RuntimeResources GetRuntimeResources()

Disassembly:
	0x039BE80C LDR V8, [X21]
	0x039BE810 TBZ X8, 0x0, 0x39BE844
	0x039BE814 MOV X0, X20
	0x039BE818 MOV W1, W31
	0x039BE81C BL 0x39BD8BC
	0x039BE820 MOV X0, X20
	0x039BE824 MOV W1, W31
	0x039BE828 STR D0, [X31 + 0x10]
	0x039BE82C BL 0x39BD8BC
	0x039BE830 LDR V1, [X31 + 0x1]
	0x039BE834 MOV V1.S[1], V0.S[0]
	0x039BE838 FMOV V0.2S, 0x0
	0x00000000 INVALID
	0x00000000 INVALID
	0x039BE844 LDR X25, [X20 + 0x48]
	0x039BE848 CBZ X25, 0x39BE9B4
	0x039BE84C LDR X26, [X20 + 0x38]
	0x039BE850 CBZ X26, 0x39BE9B4
	0x039BE854 ADRP X24, 0x760000
	0x039BE858 LDR X24, [X24 + 0x570]
	0x039BE85C LDR W8, [X20 + 0x34]
	0x039BE860 LDR X27, [X25 + 0x28]
	0x039BE864 LDUR X28, [X25 + 0x34]
	0x039BE868 LDR V9, [X26 + 0x58]
	0x039BE86C SUB W22, W8, 0x1
	0x039BE870 SCVTF S1, W22
	0x039BE874 FMOV S0, 3
	0x039BE878 UBFM X29, X27, 0x20, 0x3F
	0x039BE87C UBFM X23, X28, 0x20, 0x3F
	0x039BE880 BL 0x3EB1B50
	0x039BE884 LDR V1, [X20 + 0x30]
	0x039BE888 LDR V2, [X25 + 0x30]
	0x039BE88C MOVZ W9, 0x7F800000
	0x039BE890 FCVTZS W8, S0
	0x039BE894 MOVZ W10, 0xCF000000
	0x039BE898 SCVTF S4, W27
	0x039BE89C SCVTF S5, W29
	0x039BE8A0 FMOV S6, W9
	0x039BE8A4 LDR V3, [X25 + 0x3C]
	0x039BE8A8 LDR V10, [X26 + 0x60]
	0x039BE8AC FCMP S0, S6
	0x039BE8B0 SCVTF S6, W8
	0x039BE8B4 STP S4, S5, [X31 + 0x40]
	0x039BE8B8 FMOV S4, W10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move W9, [X0+321]
	007 Move X19, X8
	008 Compare W9, 0
	009 JumpIfEqual {45}
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+48], V0
	012 Move [X31+56], V0
	013 Move [X31+16], V0
	014 Move [X31+24], V0
	015 Move X21, [X0+64]
	016 Move X20, X0
	017 Compare X21, 0
	018 JumpIfEqual {57}
	019 Move W8, [X21+112]
	020 Compare W8, 0
	021 JumpIfEqual {24}
	022 Move X0, X21
	023 Call ProbeBrickIndex.UploadIndexData, X0
	024 Move X8, [X21+40]
	025 Move [X31], X8
	026 Move X21, [X20+72]
	027 Compare X21, 0
	028 JumpIfEqual {57}
	029 Move W8, [X21+68]
	030 Compare W8, 0
	031 JumpIfEqual {34}
	032 Move X0, X21
	033 Call ProbeCellIndices.PushComputeData, X0
	034 Move X8, [X21+24]
	035 Move [X31+8], X8
	036 Move X0, [X20+56]
	037 Compare X0, 0
	038 JumpIfEqual {57}
	039 Add X1, X31, 0
	040 Call ProbeBrickPool.GetRuntimeResources, X0, X1
	041 Add X1, X31, 0
	042 Move W2, 80
	043 Move X0, X19
	044 Call 0x3EB2AC0
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X19+48], V0
	047 Move [X19+56], V0
	048 Move [X19+16], V0
	049 Move [X19+24], V0
	050 Move [X19], V0
	051 Move X20, [X31+96]
	052 Move X19, [X31+104]
	053 Move X30, [X31+80]
	054 Move X21, [X31+88]
	055 Add X31, X31, 112
	056 Return X0
	057 Call 0x1C17F20

Method: System.Void SetTRS(UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, System.Single minBrickSize)

Disassembly:
	0x039BD388 CBNZ W8, 0x39BD394
	0x039BD38C BL 0x1C16DFC
	0x039BD390 LDR X0, [X27]
	0x039BD394 LDR X8, [X0 + 0xB8]
	0x039BD398 ADRP X23, 0x795000

ISIL:
	001 Move [X0+20], S0
	002 Move [X0+28], S1
	003 Move [X0+28], S2
	004 Move [X0+36], S3
	005 Move [X0+36], S4
	006 Move [X0+44], S5
	007 Move [X0+44], S6
	008 Move [X0+52], S7
	009 Return 

Method: System.Void SetMaxSubdivision(System.Int32 maxSubdivision)

Disassembly:
	0x039BD39C ADRP X22, 0x795000
	0x039BD3A0 LDR X20, [X8 + 0x8]
	0x039BD3A4 LDR X23, [X23 + 0x580]
	0x039BD3A8 LDR X22, [X22 + 0x578]
	0x039BD3AC CBNZ X20, 0x39BD400
	0x039BD3B0 LDR W8, [X0 + 0xE0]
	0x039BD3B4 CBNZ W8, 0x39BD3C0
	0x039BD3B8 BL 0x1C16DFC
	0x039BD3BC LDR X0, [X27]
	0x039BD3C0 ADRP X9, 0x795000
	0x039BD3C4 LDR X8, [X0 + 0xB8]
	0x039BD3C8 LDR X9, [X9 + 0x5B0]
	0x039BD3CC LDR X21, [X8]
	0x039BD3D0 LDR X0, [X9]
	0x039BD3D4 BL 0x1C16F10
	0x039BD3D8 ADRP X8, 0x795000
	0x039BD3DC LDR X8, [X8 + 0x5A0]
	0x039BD3E0 MOV X1, X21
	0x039BD3E4 MOV X3, X31
	0x039BD3E8 MOV X20, X0
	0x039BD3EC LDR X2, [X8]
	0x039BD3F0 BL 0x2725C6C
	0x039BD3F4 LDR X8, [X27]
	0x039BD3F8 LDR X8, [X8 + 0xB8]
	0x039BD3FC STR X20, [X8 + 0x8]
	0x039BD400 LDR X0, [X23]
	0x039BD404 BL 0x1C16F10
	0x039BD408 LDR X4, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xA25000
	007 Move X22, 0x737000
	008 Move W8, [X21+3229]
	009 Move X22, [X22+1448]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x737000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3229], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W1, 7
	027 Move W0, W20
	028 Move X2, X31
	029 Call Math.Min, X0, X1
	030 Move [X19+52], W0
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 

Method: System.Int32 CellSize(System.Int32 subdivisionLevel)

Disassembly:
	0x039B5BB8 BL 0x1D2C690
	0x039B5BBC MOV X0, X21
	0x039B5BC0 BL 0x1C16F18
	0x039B5BC4 B 0x39B5BC8
	0x039B5BC8 MOV X22, X0
	0x039B5BCC CMP W1, 0x1
	0x039B5BD0 B.NE 0x39B5C04
	0x039B5BD4 MOV X0, X22
	0x039B5BD8 BL 0x3EB1AD0
	0x039B5BDC LDR X19, [X0]
	0x039B5BE0 BL 0x3EB1AE0
	0x039B5BE4 ADRP X8, 0x79D000

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction SCVTF not yet implemented."
	003 Move S0, 3
	004 Call 0x3EB2B50
	005 Move W8, 0x7F800000
	006 Move S1, W8
	007 NotImplemented "Instruction FCVTZS not yet implemented."
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W8, 0x80000000
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Single BrickSize(System.Int32 subdivisionLevel)

Disassembly:
	0x039BE8BC FCSEL S4, S4, S6, EQ
	0x039BE8C0 MOVZ W11, 0x43730000
	0x039BE8C4 STP S4, S1, [X31 + 0x58]
	0x039BE8C8 SCVTF S1, S2
	0x039BE8CC STR D8, [X31 + 0x50]
	0x039BE8D0 STR W11, [X31 + 0x4C]
	0x039BE8D4 STR S1, [X31 + 0x48]
	0x039BE8D8 LDR V1, [X21 + 0xC]
	0x039BE8DC SCVTF S0, W28
	0x039BE8E0 SCVTF S5, W23
	0x039BE8E4 SCVTF S2, S3
	0x039BE8E8 MOV X0, X20
	0x039BE8EC MOV W1, W22
	0x039BE8F0 STP S0, S5, [X31 + 0x30]
	0x039BE8F4 STP S2, S1, [X31 + 0x38]
	0x039BE8F8 BL 0x39BD8BC
	0x039BE8FC UNIMPLEMENTED
	0x039BE900 SCVTF S2, S10
	0x039BE904 STR D1, [X31 + 0x20]
	0x039BE908 STP S2, S0, [X31 + 0x28]
	0x039BE90C LDR V0, [X21 + 0x10]
	0x039BE910 LDR X0, [X24]
	0x039BE914 STR S0, [X31 + 0x70]
	0x039BE918 LDUR V0, [X20 + 0xF8]
	0x039BE91C LDR V1, [X20 + 0x108]
	0x039BE920 LDR V2, [X21 + 0x20]
	0x039BE924 UNIMPLEMENTED
	0x039BE928 UNIMPLEMENTED
	0x039BE92C SCVTF S2, S2
	0x039BE930 STUR V0, [X31 + 0x74]
	0x039BE934 STUR D1, [X31 + 0x84]
	0x039BE938 STR S2, [X31 + 0x8C]
	0x039BE93C LDR V0, [X21 + 0x14]
	0x039BE940 LDR V1, [X21 + 0x18]
	0x039BE944 STR W31, [X31 + 0x6C]
	0x039BE948 SCVTF S0, S0
	0x039BE94C STUR D1, [X31 + 0x64]
	0x039BE950 STR S0, [X31 + 0x60]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xA24000
	008 Move X21, 0x794000
	009 Move W8, [X22+3230]
	010 Move X21, [X21+3912]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x794000
	018 Move X0, [X0+3912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3230], W8
	022 Move X0, [X21]
	023 Move V8, [X20+48]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 NotImplemented "Instruction SCVTF not yet implemented."
	029 Move S0, 3
	030 Call 0x3EB2B50
	031 Move W9, 0x7F800000
	032 NotImplemented "Instruction FCVTZS not yet implemented."
	033 Move W10, 0xCF000000
	034 Move S2, W9
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+8]
	040 NotImplemented "Instruction SCVTF not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move S0, W10
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 Multiply S0, S0, S8
	045 Move V8, [X31+48]
	046 Return V0

Method: System.Single MinBrickSize()

Disassembly:
	0x039BE150 MOVZ W2, 0x50
	0x039BE154 MOV X1, X23

ISIL:
	001 Move V0, [X0+48]
	002 Return V0

Method: System.Single MaxBrickSize()

Disassembly:
	0x039BE144 B.EQ 0x39BE19C
	0x039BE148 LDR X25, [X22 + 0x50]
	0x039BE14C ADD X0, X31, 0xC0

ISIL:
	001 Move W8, [X0+52]
	002 Subtract W1, W8, 1
	003 Call ProbeReferenceVolume.BrickSize, X0, X1
	004 Return V0

Method: UnityEngine.Rendering.ProbeReferenceVolume/RefVolTransform GetTransform()

Disassembly:
	0x039BE954 LDUR V0, [X21 + 0x24]
	0x039BE958 STR X31, [X31 + 0x98]
	0x039BE95C STR D0, [X31 + 0x90]
	0x039BE960 LDR W8, [X0 + 0xE0]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Int32 GetMaxSubdivision()

Disassembly:
	0x039BE964 LDR W20, [X20 + 0x160]
	0x039BE968 CBNZ W8, 0x39BE970

ISIL:
	001 Move W0, [X0+52]
	002 Return X0

Method: System.Int32 GetMaxSubdivision(System.Single multiplier)

Disassembly:
	0x039BE96C BL 0x1C16DFC
	0x039BE970 ADRP X8, 0x794000
	0x039BE974 LDR X8, [X8 + 0x5F0]
	0x039BE978 ADD X1, X31, 0x20
	0x039BE97C MOV X0, X19
	0x039BE980 MOV W2, W20
	0x039BE984 LDR X3, [X8]
	0x039BE988 BL 0x21A5158
	0x039BE98C LDP X20, X19, [X31 + 0x110]
	0x039BE990 LDP X22, X21, [X31 + 0x100]
	0x039BE994 LDP X24, X23, [X31 + 0xF0]
	0x039BE998 LDP X26, X25, [X31 + 0xE0]
	0x039BE99C LDP X28, X27, [X31 + 0xD0]
	0x039BE9A0 LDP X29, X30, [X31 + 0xC0]
	0x039BE9A4 LDP D9, D8, [X31 + 0xB0]
	0x039BE9A8 LDR V10, [X31 + 0xA0]
	0x039BE9AC ADD X31, X31, 0x120
	0x039BE9B0 RET
	0x039BE9B4 BL 0x1C16F20
	0x039BE9B8 LDR X0, [X0 + 0x190]
	0x039BE9BC RET
	0x039BE9C0 LDR X0, [X0 + 0x198]
	0x039BE9C4 RET
	0x039BE9C8 STR X30, [X31 - 0x20]!
	0x039BE9CC STP X20, X19, [X31 + 0x10]
	0x039BE9D0 CBZ X1, 0x39BEA24
	0x039BE9D4 MOV X19, X1
	0x039BE9D8 MOV X20, X0
	0x039BE9DC MOV X0, X1
	0x039BE9E0 MOV X1, X31
	0x039BE9E4 BL 0x3C03AD4
	0x039BE9E8 CMP W0, 0x10

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA1B000
	006 Move W8, [X20+2750]
	007 Move W19, [X0+52]
	008 Move V8, V0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x736000
	012 Move X0, [X0+1448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2750], W8
	016 Move X8, 0x736000
	017 Move X8, [X8+1448]
	018 Move X0, [X8]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 NotImplemented "Instruction SCVTF not yet implemented."
	024 Move W8, 0x7F800000
	025 Multiply S0, S0, S8
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+8]
	029 Move S1, W8
	030 NotImplemented "Instruction FRINTP not yet implemented."
	031 NotImplemented "Instruction FCVTPS not yet implemented."
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move W9, 0x80000000
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 Move V8, [X31+32]
	036 Return X0

Method: System.Single GetDistanceBetweenProbes(System.Int32 subdivisionLevel)

Disassembly:
	0x039BE9EC B.EQ 0x39BEA04
	0x039BE9F0 MOV X0, X19
	0x039BE9F4 MOV X1, X31
	0x039BE9F8 BL 0x3C03AD4
	0x039BE9FC CMP W0, 0x4
	0x039BEA00 B.NE 0x39BEA10

ISIL:
	001 Move [X31-16], X30
	002 Call ProbeReferenceVolume.BrickSize, X0, X1
	003 Move S1, 3
	004 NotImplemented "Instruction FDIV not yet implemented."
	005 Move X30, [X31+16]
	006 Return V0

Method: System.Single MinDistanceBetweenProbes()

Disassembly:
	0x039BEA04 LDP X20, X19, [X31 + 0x10]
	0x039BEA08 LDR X30, [X31], #0x20
	0x039BEA0C RET
	0x039BEA10 MOV X0, X20
	0x039BEA14 MOV X1, X19
	0x039BEA18 LDP X20, X19, [X31 + 0x10]
	0x039BEA1C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move W1, W31
	003 Call ProbeReferenceVolume.BrickSize, X0, X1
	004 Move S1, 3
	005 NotImplemented "Instruction FDIV not yet implemented."
	006 Move X30, [X31+16]
	007 Return V0

Method: System.Boolean DataHasBeenLoaded()

Disassembly:
	0x039BEA20 B 0x39BEA28
	0x039BEA24 BL 0x1C16F20

ISIL:
	001 Move W0, [X0+288]
	002 Return X0

Method: System.Void Clear()

Disassembly:
	0x039BEA28 SUB X31, X31, 0xE0
	0x039BEA2C STR D10, [X31 + 0x60]
	0x039BEA30 STP D9, D8, [X31 + 0x70]
	0x039BEA34 STP X29, X30, [X31 + 0x80]
	0x039BEA38 STP X28, X27, [X31 + 0x90]
	0x039BEA3C STP X26, X25, [X31 + 0xA0]
	0x039BEA40 STP X24, X23, [X31 + 0xB0]
	0x039BEA44 STP X22, X21, [X31 + 0xC0]
	0x039BEA48 STP X20, X19, [X31 + 0xD0]
	0x039BEA4C ADRP X21, 0xA23000
	0x039BEA50 LDRB W8, [X21 + 0xCAB]
	0x039BEA54 MOV X19, X1
	0x039BEA58 MOV X20, X0
	0x039BEA5C TBNZ X8, 0x0, 0x39BEB64
	0x039BEA60 ADRP X0, 0x794000
	0x039BEA64 LDR X0, [X0 + 0x5F8]
	0x039BEA68 BL 0x1C16CF4
	0x039BEA6C ADRP X0, 0x794000
	0x039BEA70 LDR X0, [X0 + 0x448]
	0x039BEA74 BL 0x1C16CF4
	0x039BEA78 ADRP X0, 0x794000
	0x039BEA7C LDR X0, [X0 + 0x450]
	0x039BEA80 BL 0x1C16CF4
	0x039BEA84 ADRP X0, 0x794000
	0x039BEA88 LDR X0, [X0 + 0x458]
	0x039BEA8C BL 0x1C16CF4
	0x039BEA90 ADRP X0, 0x794000
	0x039BEA94 LDR X0, [X0 + 0x460]
	0x039BEA98 BL 0x1C16CF4
	0x039BEA9C ADRP X0, 0x739000
	0x039BEAA0 LDR X0, [X0 + 0x2C8]
	0x039BEAA4 BL 0x1C16CF4
	0x039BEAA8 ADRP X0, 0x794000
	0x039BEAAC LDR X0, [X0 + 0x600]
	0x039BEAB0 BL 0x1C16CF4
	0x039BEAB4 ADRP X0, 0x794000
	0x039BEAB8 LDR X0, [X0 + 0x608]
	0x039BEABC BL 0x1C16CF4
	0x039BEAC0 ADRP X0, 0x794000
	0x039BEAC4 LDR X0, [X0 + 0x610]
	0x039BEAC8 BL 0x1C16CF4
	0x039BEACC ADRP X0, 0x793000
	0x039BEAD0 LDR X0, [X0 + 0xF48]
	0x039BEAD4 BL 0x1C16CF4
	0x039BEAD8 ADRP X0, 0x794000
	0x039BEADC LDR X0, [X0 + 0x468]
	0x039BEAE0 BL 0x1C16CF4
	0x039BEAE4 ADRP X0, 0x794000
	0x039BEAE8 LDR X0, [X0 + 0x618]
	0x039BEAEC BL 0x1C16CF4
	0x039BEAF0 ADRP X0, 0x794000
	0x039BEAF4 LDR X0, [X0 + 0x620]
	0x039BEAF8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA24000
	005 Move W8, [X20+3231]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x795000
	012 Move X0, [X0+1264]
	013 Call 0x1C17CF4
	014 Move X0, 0x795000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3231], W8
	019 Move W8, [X19+321]
	020 Compare W8, 0
	021 JumpIfEqual {46}
	022 Move X0, X19
	023 Call ProbeReferenceVolume.UnloadAllCells, X0
	024 Move X0, [X19+56]
	025 Compare X0, 0
	026 JumpIfEqual {69}
	027 Call ProbeBrickPool.Clear, X0
	028 Move X8, [X19+80]
	029 Compare X8, 0
	030 JumpIfEqual {69}
	031 Move X0, [X8+32]
	032 Compare X0, 0
	033 JumpIfEqual {35}
	034 Call ProbeBrickPool.Clear, X0
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {69}
	038 Call ProbeBrickIndex.Clear, X0
	039 Move X0, [X19+128]
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Move X8, 0x795000
	043 Move X8, [X8+1480]
	044 Move X1, [X8]
	045 Call Dictionary`2<Int32, Object>.Clear, X0
	046 Move W8, [X19+384]
	047 Compare W8, 0
	048 JumpIfEqual {65}
	049 Move X0, [X19+296]
	050 Compare X0, 0
	051 JumpIfEqual {69}
	052 Move X20, 0x795000
	053 Move X20, [X20+1264]
	054 Move X1, [X20]
	055 Call Dictionary`2<Object, Object>.Clear, X0
	056 Move X0, [X19+312]
	057 Compare X0, 0
	058 JumpIfEqual {69}
	059 Move X1, [X20]
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Call Dictionary`2<Object, Object>.Clear, X0
	064 Return 
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Return 
	069 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> GetSourceLocations(System.Int32 count, System.Int32 chunkSize, UnityEngine.Rendering.ProbeBrickPool/DataLocation dataLoc)

Disassembly:
	0x039BEAFC ADRP X0, 0x794000
	0x039BEB00 LDR X0, [X0 + 0x628]
	0x039BEB04 BL 0x1C16CF4
	0x039BEB08 ADRP X0, 0x794000
	0x039BEB0C LDR X0, [X0 + 0x278]
	0x039BEB10 BL 0x1C16CF4
	0x039BEB14 ADRP X0, 0x794000
	0x039BEB18 LDR X0, [X0 + 0x630]
	0x039BEB1C BL 0x1C16CF4
	0x039BEB20 ADRP X0, 0x794000
	0x039BEB24 LDR X0, [X0 + 0x638]
	0x039BEB28 BL 0x1C16CF4
	0x039BEB2C ADRP X0, 0x794000
	0x039BEB30 LDR X0, [X0 + 0x640]
	0x039BEB34 BL 0x1C16CF4
	0x039BEB38 ADRP X0, 0x794000
	0x039BEB3C LDR X0, [X0 + 0x648]
	0x039BEB40 BL 0x1C16CF4
	0x039BEB44 ADRP X0, 0x794000
	0x039BEB48 LDR X0, [X0 + 0x650]
	0x039BEB4C BL 0x1C16CF4
	0x039BEB50 ADRP X0, 0x794000
	0x039BEB54 LDR X0, [X0 + 0x658]
	0x039BEB58 BL 0x1C16CF4
	0x039BEB5C MOVZ W8, 0x1
	0x039BEB60 STRB W8, [X21 + 0xCAB]
	0x039BEB64 STP X31, X31, [X31 + 0x40]
	0x039BEB68 STR X31, [X31 + 0x50]
	0x039BEB6C LDRB W8, [X20 + 0x142]
	0x039BEB70 CBZ W8, 0x39BF208
	0x039BEB74 LDRB W8, [X20 + 0x141]
	0x039BEB78 CBZ W8, 0x39BF208
	0x039BEB7C LDR X8, [X20 + 0x190]
	0x039BEB80 CBZ X8, 0x39BF280
	0x039BEB84 LDRB W9, [X8 + 0x10]
	0x039BEB88 CBNZ W9, 0x39BEB94
	0x039BEB8C LDRB W8, [X8 + 0x38]
	0x039BEB90 CBZ W8, 0x39BF208
	0x039BEB94 LDR X1, [X20 + 0x1C8]
	0x039BEB98 MOV X0, X19
	0x039BEB9C MOV X2, X31
	0x039BEBA0 BL 0x3C0A60C
	0x039BEBA4 LDR X0, [X20 + 0x1B0]
	0x039BEBA8 CBZ X0, 0x39BF280
	0x039BEBAC MOV X1, X31
	0x039BEBB0 MOV X2, X31
	0x039BEBB4 BL 0x3C152D0
	0x039BEBB8 LDR W8, [X20 + 0x178]
	0x039BEBBC CMP W8, 0x2
	0x039BEBC0 B.EQ 0x39BEBE0
	0x039BEBC4 CMP W8, 0x1
	0x039BEBC8 B.NE 0x39BEBFC
	0x039BEBCC LDR X0, [X20 + 0x1B0]
	0x039BEBD0 CBZ X0, 0x39BF280
	0x039BEBD4 ADRP X8, 0x794000
	0x039BEBD8 LDR X8, [X8 + 0x650]
	0x039BEBDC B 0x39BEBF0
	0x039BEBE0 LDR X0, [X20 + 0x1B0]
	0x039BEBE4 CBZ X0, 0x39BF280
	0x039BEBE8 ADRP X8, 0x794000
	0x039BEBEC LDR X8, [X8 + 0x278]
	0x039BEBF0 LDR X1, [X8]
	0x039BEBF4 MOV X2, X31
	0x039BEBF8 BL 0x3C14E3C
	0x039BEBFC LDR X0, [X20 + 0x1B0]
	0x039BEC00 CBZ X0, 0x39BF280
	0x039BEC04 MOVZ W1, 0xBB8
	0x039BEC08 MOV X2, X31
	0x039BEC0C BL 0x3C14DBC
	0x039BEC10 LDR X0, [X20 + 0x1C0]
	0x039BEC14 CBZ X0, 0x39BF280
	0x039BEC18 MOVZ W1, 0xBB8
	0x039BEC1C MOV X2, X31
	0x039BEC20 BL 0x3C14DBC
	0x039BEC24 ADRP X21, 0x793000
	0x039BEC28 LDR X21, [X21 + 0xF48]
	0x039BEC2C LDR X0, [X21]
	0x039BEC30 LDR W8, [X0 + 0xE0]
	0x039BEC34 CBNZ W8, 0x39BEC3C
	0x039BEC38 BL 0x1C16DFC
	0x039BEC3C ADRP X24, 0xA23000
	0x039BEC40 LDRB W8, [X24 + 0xCB9]
	0x039BEC44 CBNZ W8, 0x39BEC5C
	0x039BEC48 ADRP X0, 0x793000
	0x039BEC4C LDR X0, [X0 + 0xF48]
	0x039BEC50 BL 0x1C16CF4
	0x039BEC54 MOVZ W8, 0x1
	0x039BEC58 STRB W8, [X24 + 0xCB9]
	0x039BEC5C LDR X0, [X21]
	0x039BEC60 LDR W8, [X0 + 0xE0]
	0x039BEC64 CBNZ W8, 0x39BEC70
	0x039BEC68 BL 0x1C16DFC
	0x039BEC6C LDR X0, [X21]
	0x039BEC70 LDR X8, [X0 + 0xB8]
	0x039BEC74 LDR X8, [X8 + 0x8]
	0x039BEC78 CBZ X8, 0x39BF280
	0x039BEC7C LDR X0, [X8 + 0x80]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0xA24000
	012 Move W8, [X23+3232]
	013 Move X19, X3
	014 Move W21, W2
	015 Move W22, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x795000
	022 Move X0, [X0+536]
	023 Call 0x1C17CF4
	024 Move X0, 0x795000
	025 Move X0, [X0+968]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3232], W8
	029 Move X0, [X20+88]
	030 Compare X0, 0
	031 JumpIfEqual {112}
	032 Move X23, 0x795000
	033 Move X23, [X23+536]
	034 Move W10, [X0+28]
	035 Move X8, [X0+16]
	036 Move X9, [X23]
	037 Add W10, W10, 2
	038 Move [X0+24], W31
	039 Move [X0+28], W10
	040 Compare X8, 0
	041 JumpIfEqual {112}
	042 Move W10, [X8+24]
	043 Compare W10, 0
	044 JumpIfEqual {49}
	045 Move W9, 1
	046 Move [X0+24], W9
	047 Move [X8+32], X31
	048 Move [X8+40], W31
	049 Move X8, [X9+32]
	050 Move X1, X31
	051 Move X2, X31
	052 Move X8, [X8+192]
	053 Move X3, [X8+112]
	054 Call List`1<BrickChunkAlloc>.AddWithResize, X0, X1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W24, W31
	057 Move W26, W31
	058 Move W25, W31
	059 Move W21, W21
	060 ShiftRight W21, 30
	061 And W21, W21, 0x1FFFFFFF
	062 Subtract W22, W22, 1
	063 Move W27, 12
	064 Move W8, [X19+64]
	065 Add W25, W25, W21
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, [X19+68]
	068 Add W9, W26, 4
	069 Add W10, W24, 4
	070 Move W25, W31
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Move X0, [X20+88]
	075 Compare X0, 0
	076 JumpIfEqual {112}
	077 Move W10, [X0+28]
	078 Move X9, [X0+16]
	079 Move X8, [X23]
	080 Add W10, W10, 1
	081 Move [X0+28], W10
	082 Compare X9, 0
	083 JumpIfEqual {112}
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move W11, [X9+24]
	086 Move W1, W25
	087 NotImplemented "Instruction BFM not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add W8, W10, 1
	090 NotImplemented "Instruction MADD not yet implemented."
	091 Move [X0+24], W8
	092 Move [X9+32], X1
	093 Move [X9+40], W24
	094 Move X8, [X8+32]
	095 Move W2, W24
	096 Move X8, [X8+192]
	097 Move X3, [X8+112]
	098 Call List`1<BrickChunkAlloc>.AddWithResize, X0, X1
	099 Subtract W22, W22, 1
	100 Move X0, [X20+88]
	101 Move X20, [X31+64]
	102 Move X19, [X31+72]
	103 Move X22, [X31+48]
	104 Move X21, [X31+56]
	105 Move X24, [X31+32]
	106 Move X23, [X31+40]
	107 Move X26, [X31+16]
	108 Move X25, [X31+24]
	109 Move X30, [X31+80]
	110 Move X27, [X31+88]
	111 Return X0
	112 Call 0x1C17F20

Method: System.Void UpdatePool(System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> chunkList, UnityEngine.Rendering.ProbeReferenceVolume/Cell/PerScenarioData data, Unity.Collections.NativeArray`1<System.Byte> validityNeighMaskData, System.Int32 chunkIndex, System.Int32 poolIndex)

Disassembly:
	0x039BEC80 CBZ X0, 0x39BF280
	0x039BEC84 ADRP X8, 0x794000
	0x039BEC88 LDR X8, [X8 + 0x5F8]
	0x039BEC8C LDR X1, [X8]
	0x039BEC90 BL 0x2A1345C
	0x039BEC94 LDR X8, [X21]
	0x039BEC98 CMP W0, 0x1
	0x039BEC9C B.LT 0x39BECFC
	0x039BECA0 LDR W9, [X8 + 0xE0]
	0x039BECA4 CBNZ W9, 0x39BECB0
	0x039BECA8 MOV X0, X8
	0x039BECAC BL 0x1C16DFC
	0x039BECB0 LDRB W8, [X24 + 0xCB9]
	0x039BECB4 CBNZ W8, 0x39BECCC
	0x039BECB8 ADRP X0, 0x793000
	0x039BECBC LDR X0, [X0 + 0xF48]
	0x039BECC0 BL 0x1C16CF4
	0x039BECC4 MOVZ W8, 0x1
	0x039BECC8 STRB W8, [X24 + 0xCB9]
	0x039BECCC LDR X8, [X21]
	0x039BECD0 LDR W9, [X8 + 0xE0]
	0x039BECD4 CBNZ W9, 0x39BECE4
	0x039BECD8 MOV X0, X8
	0x039BECDC BL 0x1C16DFC
	0x039BECE0 LDR X8, [X21]
	0x039BECE4 LDR X9, [X8 + 0xB8]
	0x039BECE8 LDR X9, [X9 + 0x8]
	0x039BECEC CBZ X9, 0x39BF280
	0x039BECF0 LDR W9, [X9 + 0x34]
	0x039BECF4 SUB W25, W9, 0x1
	0x039BECF8 B 0x39BED00
	0x039BECFC MOV W25, W31
	0x039BED00 LDR W9, [X8 + 0xE0]
	0x039BED04 CBNZ W9, 0x39BED10
	0x039BED08 MOV X0, X8
	0x039BED0C BL 0x1C16DFC
	0x039BED10 LDRB W8, [X24 + 0xCB9]
	0x039BED14 CBNZ W8, 0x39BED2C
	0x039BED18 ADRP X0, 0x793000
	0x039BED1C LDR X0, [X0 + 0xF48]
	0x039BED20 BL 0x1C16CF4
	0x039BED24 MOVZ W8, 0x1
	0x039BED28 STRB W8, [X24 + 0xCB9]
	0x039BED2C LDR X0, [X21]
	0x039BED30 LDR W8, [X0 + 0xE0]
	0x039BED34 CBNZ W8, 0x39BED40
	0x039BED38 BL 0x1C16DFC
	0x039BED3C LDR X0, [X21]
	0x039BED40 LDR X8, [X0 + 0xB8]
	0x039BED44 LDR X8, [X8 + 0x8]
	0x039BED48 CBZ X8, 0x39BF280
	0x039BED4C LDR X0, [X8 + 0x80]
	0x039BED50 CBZ X0, 0x39BF280
	0x039BED54 ADRP X26, 0x794000
	0x039BED58 LDR X26, [X26 + 0x448]
	0x039BED5C LDR X1, [X26]
	0x039BED60 BL 0x2A1352C
	0x039BED64 CBZ X0, 0x39BF280
	0x039BED68 ADRP X27, 0x794000
	0x039BED6C LDR X27, [X27 + 0x468]
	0x039BED70 ADD X8, X31, 0x28
	0x039BED74 LDR X1, [X27]
	0x039BED78 BL 0x274B2CC
	0x039BED7C LDUR V0, [X31 + 0x28]
	0x039BED80 LDR X8, [X31 + 0x38]
	0x039BED84 ADRP X22, 0x794000
	0x039BED88 STR V0, [X31 + 0x4]
	0x039BED8C STR X8, [X31 + 0x50]
	0x039BED90 LDR X22, [X22 + 0x458]
	0x039BED94 LDR X1, [X22]
	0x039BED98 ADD X0, X31, 0x40
	0x039BED9C BL 0x2BF5F4C
	0x039BEDA0 TBZ X0, 0x0, 0x39BEDC4
	0x039BEDA4 LDR X8, [X31 + 0x50]
	0x039BEDA8 CBZ X8, 0x39BF26C
	0x039BEDAC LDR X8, [X8 + 0x10]
	0x039BEDB0 CBZ X8, 0x39BF270
	0x039BEDB4 LDR W8, [X8 + 0x24]
	0x039BEDB8 CMP W25, W8
	0x039BEDBC CSEL W25, W25, W8, LT
	0x039BEDC0 B 0x39BED94
	0x039BEDC4 ADRP X8, 0x794000
	0x039BEDC8 LDR X8, [X8 + 0x450]
	0x039BEDCC ADD X0, X31, 0x40
	0x039BEDD0 LDR X1, [X8]
	0x039BEDD4 BL 0x2BF5F48
	0x039BEDD8 LDR X22, [X20 + 0x190]
	0x039BEDDC CBZ X22, 0x39BF280
	0x039BEDE0 LDR X0, [X21]
	0x039BEDE4 LDR W23, [X22 + 0x2C]
	0x039BEDE8 LDR W8, [X0 + 0xE0]
	0x039BEDEC CBNZ W8, 0x39BEDF4
	0x039BEDF0 BL 0x1C16DFC
	0x039BEDF4 LDRB W8, [X24 + 0xCB9]
	0x039BEDF8 CBNZ W8, 0x39BEE10
	0x039BEDFC ADRP X0, 0x793000
	0x039BEE00 LDR X0, [X0 + 0xF48]
	0x039BEE04 BL 0x1C16CF4
	0x039BEE08 MOVZ W8, 0x1
	0x039BEE0C STRB W8, [X24 + 0xCB9]
	0x039BEE10 LDR X0, [X21]
	0x039BEE14 LDR W8, [X0 + 0xE0]
	0x039BEE18 CBNZ W8, 0x39BEE24
	0x039BEE1C BL 0x1C16DFC
	0x039BEE20 LDR X0, [X21]
	0x039BEE24 LDR X8, [X0 + 0xB8]
	0x039BEE28 LDR X8, [X8 + 0x8]
	0x039BEE2C CBZ X8, 0x39BF280
	0x039BEE30 LDR W8, [X8 + 0x34]
	0x039BEE34 SUB W8, W8, 0x1
	0x039BEE38 CMP W23, W8
	0x039BEE3C CSEL W8, W23, W8, LT
	0x039BEE40 STR W8, [X22 + 0x2C]
	0x039BEE44 LDR X8, [X20 + 0x190]
	0x039BEE48 CBZ X8, 0x39BF280
	0x039BEE4C LDRB W9, [X24 + 0xCB9]
	0x039BEE50 LDR W22, [X8 + 0x2C]
	0x039BEE54 CBNZ W9, 0x39BEE6C
	0x039BEE58 MOV X0, X21
	0x039BEE5C BL 0x1C16CF4
	0x039BEE60 LDR X0, [X21]
	0x039BEE64 MOVZ W8, 0x1
	0x039BEE68 STRB W8, [X24 + 0xCB9]
	0x039BEE6C LDR W8, [X0 + 0xE0]
	0x039BEE70 CBNZ W8, 0x39BEE7C
	0x039BEE74 BL 0x1C16DFC
	0x039BEE78 LDR X0, [X21]
	0x039BEE7C LDR X8, [X0 + 0xB8]
	0x039BEE80 LDR X8, [X8 + 0x8]
	0x039BEE84 CBZ X8, 0x39BF280
	0x039BEE88 LDR W9, [X8 + 0x34]
	0x039BEE8C LDR X8, [X20 + 0x190]
	0x039BEE90 SUB W9, W9, 0x1
	0x039BEE94 CMP W22, W9
	0x039BEE98 CSET W9, EQ
	0x039BEE9C STRB W9, [X20 + 0x230]
	0x039BEEA0 CBZ X8, 0x39BF280
	0x039BEEA4 LDP W10, W9, [X8 + 0x2C]
	0x039BEEA8 CMP W9, W10
	0x039BEEAC CSEL W10, W10, W9, GT
	0x039BEEB0 CMP W9, W25
	0x039BEEB4 CSEL W9, W25, W10, LT
	0x039BEEB8 STR W9, [X8 + 0x30]
	0x039BEEBC LDRB W8, [X24 + 0xCB9]
	0x039BEEC0 CBNZ W8, 0x39BEED8
	0x039BEEC4 MOV X0, X21
	0x039BEEC8 BL 0x1C16CF4
	0x039BEECC LDR X0, [X21]
	0x039BEED0 MOVZ W8, 0x1
	0x039BEED4 STRB W8, [X24 + 0xCB9]
	0x039BEED8 LDR W8, [X0 + 0xE0]
	0x039BEEDC CBNZ W8, 0x39BEEE8
	0x039BEEE0 BL 0x1C16DFC
	0x039BEEE4 LDR X0, [X21]
	0x039BEEE8 LDR X8, [X0 + 0xB8]
	0x039BEEEC LDR X8, [X8 + 0x8]
	0x039BEEF0 CBZ X8, 0x39BF280
	0x039BEEF4 LDR X0, [X8 + 0x80]
	0x039BEEF8 CBZ X0, 0x39BF280
	0x039BEEFC LDR X1, [X26]
	0x039BEF00 BL 0x2A1352C
	0x039BEF04 CBZ X0, 0x39BF280
	0x039BEF08 LDR X1, [X27]
	0x039BEF0C ADD X8, X31, 0x28
	0x039BEF10 BL 0x274B2CC
	0x039BEF14 LDUR V0, [X31 + 0x28]
	0x039BEF18 LDR X8, [X31 + 0x38]
	0x039BEF1C ADRP X27, 0x794000
	0x039BEF20 ADRP X28, 0x794000
	0x039BEF24 LDR X27, [X27 + 0x638]
	0x039BEF28 LDR X28, [X28 + 0x608]
	0x039BEF2C STR V0, [X31 + 0x4]
	0x039BEF30 STR X8, [X31 + 0x50]
	0x039BEF34 ADRP X29, 0x739000
	0x039BEF38 LDR X29, [X29 + 0x2C8]
	0x039BEF3C ADRP X8, 0x794000
	0x039BEF40 LDR X8, [X8 + 0x458]
	0x039BEF44 LDR X1, [X8]
	0x039BEF48 ADD X0, X31, 0x40
	0x039BEF4C BL 0x2BF5F4C
	0x039BEF50 TBZ X0, 0x0, 0x39BF1F4
	0x039BEF54 LDR X21, [X31 + 0x50]
	0x039BEF58 CBZ X21, 0x39BF278
	0x039BEF5C LDR X8, [X21 + 0x10]
	0x039BEF60 CBZ X8, 0x39BF27C
	0x039BEF64 CBZ X19, 0x39BF274
	0x039BEF68 LDP S8, S9, [X8 + 0x10]
	0x039BEF6C LDR V10, [X8 + 0x18]
	0x039BEF70 MOV X0, X19
	0x039BEF74 MOV X1, X31
	0x039BEF78 BL 0x3C32E90
	0x039BEF7C MOV X1, X0
	0x039BEF80 LDR X2, [X20 + 0x1C8]
	0x039BEF84 SCVTF S0, S8
	0x039BEF88 SCVTF S1, S9
	0x039BEF8C SCVTF S2, S10
	0x039BEF90 MOV X0, X20
	0x039BEF94 BL 0x39C17D4
	0x039BEF98 TBNZ X0, 0x0, 0x39BEF3C
	0x039BEF9C MOV X0, X20
	0x039BEFA0 MOV X1, X21
	0x039BEFA4 BL 0x39C1A20
	0x039BEFA8 MOV X21, X0
	0x039BEFAC CBZ X0, 0x39BEF3C
	0x039BEFB0 LDR X8, [X21 + 0x10]
	0x039BEFB4 CBZ X8, 0x39BF1F0
	0x039BEFB8 MOV W22, W31
	0x039BEFBC LDR W8, [X8 + 0x18]
	0x039BEFC0 CMP W22, W8
	0x039BEFC4 B.GE 0x39BEF3C
	0x039BEFC8 LDR X0, [X21 + 0x20]
	0x039BEFCC CBZ X0, 0x39BF238
	0x039BEFD0 ADRP X8, 0x794000
	0x039BEFD4 LDR X8, [X8 + 0x610]
	0x039BEFD8 LDR X2, [X8]
	0x039BEFDC MOV W1, W22
	0x039BEFE0 BL 0x301BCCC
	0x039BEFE4 LDR X8, [X20 + 0x190]
	0x039BEFE8 CBZ X8, 0x39BF240
	0x039BEFEC MOV X23, X0
	0x039BEFF0 CBZ X0, 0x39BF244
	0x039BEFF4 LDR W2, [X8 + 0x1C]
	0x039BEFF8 ADRP X8, 0x794000
	0x039BEFFC LDR X8, [X8 + 0x620]
	0x039BF000 LDR X1, [X8]
	0x039BF004 MOV X0, X23
	0x039BF008 MOV X3, X31
	0x039BF00C BL 0x3C1246C
	0x039BF010 LDR X8, [X20 + 0x190]
	0x039BF014 CBZ X8, 0x39BF234
	0x039BF018 LDR V0, [X8 + 0x34]
	0x039BF01C ADRP X8, 0x793000
	0x039BF020 LDR X8, [X8 + 0x648]
	0x039BF024 LDR X1, [X8]
	0x039BF028 MOV X0, X23
	0x039BF02C MOV X2, X31
	0x039BF030 BL 0x3C1257C
	0x039BF034 LDR X8, [X20 + 0x190]
	0x039BF038 CBZ X8, 0x39BF23C
	0x039BF03C LDR V0, [X8 + 0x20]
	0x039BF040 ADRP X8, 0x793000
	0x039BF044 LDR X8, [X8 + 0x628]
	0x039BF048 LDR X1, [X8]
	0x039BF04C MOV X0, X23
	0x039BF050 MOV X2, X31
	0x039BF054 BL 0x3C1257C
	0x039BF058 LDR X8, [X20 + 0x190]
	0x039BF05C CBZ X8, 0x39BF248
	0x039BF060 LDR V0, [X8 + 0x28]
	0x039BF064 ADRP X8, 0x793000
	0x039BF068 LDR X8, [X8 + 0x618]
	0x039BF06C LDR X1, [X8]
	0x039BF070 MOV X0, X23
	0x039BF074 MOV X2, X31
	0x039BF078 BL 0x3C1257C
	0x039BF07C LDR X8, [X20 + 0x190]
	0x039BF080 CBZ X8, 0x39BF24C
	0x039BF084 LDR W2, [X8 + 0x2C]
	0x039BF088 ADRP X8, 0x793000
	0x039BF08C LDR X8, [X8 + 0x658]
	0x039BF090 LDR X1, [X8]
	0x039BF094 MOV X0, X23
	0x039BF098 MOV X3, X31
	0x039BF09C BL 0x3C1246C
	0x039BF0A0 LDR X8, [X20 + 0x190]
	0x039BF0A4 CBZ X8, 0x39BF250
	0x039BF0A8 LDR W2, [X8 + 0x30]
	0x039BF0AC ADRP X8, 0x793000
	0x039BF0B0 LDR X8, [X8 + 0x630]
	0x039BF0B4 LDR X1, [X8]
	0x039BF0B8 MOV X0, X23
	0x039BF0BC MOV X3, X31
	0x039BF0C0 BL 0x3C1246C
	0x039BF0C4 ADRP X8, 0x793000
	0x039BF0C8 LDR V0, [X20 + 0x204]
	0x039BF0CC LDR X8, [X8 + 0x640]
	0x039BF0D0 LDR X1, [X8]
	0x039BF0D4 MOV X0, X23
	0x039BF0D8 MOV X2, X31
	0x039BF0DC BL 0x3C1257C
	0x039BF0E0 LDR X8, [X20 + 0x190]
	0x039BF0E4 CBZ X8, 0x39BF230
	0x039BF0E8 LDR X1, [X27]
	0x039BF0EC LDR V0, [X8 + 0x3C]
	0x039BF0F0 MOV X0, X23
	0x039BF0F4 MOV X2, X31
	0x039BF0F8 BL 0x3C1257C
	0x039BF0FC LDR X8, [X20 + 0x190]
	0x039BF100 CBZ X8, 0x39BF254
	0x039BF104 LDRB W9, [X8 + 0x10]
	0x039BF108 CBZ W9, 0x39BF178
	0x039BF10C LDR X0, [X21 + 0x10]
	0x039BF110 CBZ X0, 0x39BF260
	0x039BF114 LDR X2, [X28]
	0x039BF118 MOV W1, W22
	0x039BF11C BL 0x301BCCC
	0x039BF120 MOV X24, X0
	0x039BF124 CBZ X0, 0x39BF258
	0x039BF128 LDR X0, [X29]
	0x039BF12C LDP X26, X25, [X20 + 0x1A8]
	0x039BF130 LDR W8, [X0 + 0xE0]
	0x039BF134 CBNZ W8, 0x39BF13C
	0x039BF138 BL 0x1C16DFC
	0x039BF13C LDR W4, [X24 + 0x18]
	0x039BF140 MOV X0, X26
	0x039BF144 MOV W1, W31
	0x039BF148 MOV X2, X25
	0x039BF14C MOV X3, X24
	0x039BF150 MOV X5, X23
	0x039BF154 MOV W6, W31
	0x039BF158 MOV W7, W31
	0x039BF15C STP X31, X31, [X31 + 0x18]
	0x039BF160 STR W31, [X31 + 0x10]
	0x039BF164 STR X19, [X31 + 0x8]
	0x039BF168 STR W31, [X31]
	0x039BF16C BL 0x3C0F1D0
	0x039BF170 LDR X8, [X20 + 0x190]
	0x039BF174 CBZ X8, 0x39BF268
	0x039BF178 LDRB W8, [X8 + 0x38]
	0x039BF17C CBZ W8, 0x39BF1E4
	0x039BF180 LDR X0, [X21 + 0x18]
	0x039BF184 CBZ X0, 0x39BF264
	0x039BF188 LDR X2, [X28]
	0x039BF18C MOV W1, W22
	0x039BF190 BL 0x301BCCC
	0x039BF194 MOV X24, X0
	0x039BF198 CBZ X0, 0x39BF25C
	0x039BF19C LDR X0, [X29]
	0x039BF1A0 LDP X26, X25, [X20 + 0x1B8]
	0x039BF1A4 LDR W8, [X0 + 0xE0]
	0x039BF1A8 CBNZ W8, 0x39BF1B0
	0x039BF1AC BL 0x1C16DFC
	0x039BF1B0 LDR W4, [X24 + 0x18]
	0x039BF1B4 MOV X0, X26
	0x039BF1B8 MOV W1, W31
	0x039BF1BC MOV X2, X25
	0x039BF1C0 MOV X3, X24
	0x039BF1C4 MOV X5, X23
	0x039BF1C8 MOV W6, W31
	0x039BF1CC MOV W7, W31
	0x039BF1D0 STP X31, X31, [X31 + 0x18]
	0x039BF1D4 STR W31, [X31 + 0x10]
	0x039BF1D8 STR X19, [X31 + 0x8]
	0x039BF1DC STR W31, [X31]
	0x039BF1E0 BL 0x3C0F1D0
	0x039BF1E4 LDR X8, [X21 + 0x10]
	0x039BF1E8 ADD W22, W22, 0x1
	0x039BF1EC CBNZ X8, 0x39BEFBC
	0x039BF1F0 BL 0x1C16F20
	0x039BF1F4 ADRP X8, 0x793000
	0x039BF1F8 LDR X8, [X8 + 0x450]
	0x039BF1FC ADD X0, X31, 0x40
	0x039BF200 LDR X1, [X8]
	0x039BF204 BL 0x2BF5F48
	0x039BF208 LDP X20, X19, [X31 + 0xD0]

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+400], X29
	003 Move [X31+408], X30
	004 Move [X31+416], X28
	005 Move [X31+424], X27
	006 Move [X31+432], X26
	007 Move [X31+440], X25
	008 Move [X31+448], X24
	009 Move [X31+456], X23
	010 Move [X31+464], X22
	011 Move [X31+472], X21
	012 Move [X31+480], X20
	013 Move [X31+488], X19
	014 Move [X31+16], X1
	015 Move X19, 0xA24000
	016 Move [X31+384], X3
	017 Move [X31+392], X4
	018 Move X20, 0x795000
	019 Move W8, [X19+3233]
	020 Move X20, [X20+1488]
	021 Move W21, W6
	022 Move W29, W5
	023 Move X24, X2
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {46}
	029 Move X0, 0x795000
	030 Move X0, [X0+1488]
	031 Call 0x1C17CF4
	032 Move X0, 0x75F000
	033 Move X0, [X0+696]
	034 Call 0x1C17CF4
	035 Move X0, 0x795000
	036 Move X0, [X0+1496]
	037 Call 0x1C17CF4
	038 Move X0, 0x795000
	039 Move X0, [X0+1504]
	040 Call 0x1C17CF4
	041 Move X0, 0x795000
	042 Move X0, [X0+456]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X19+3233], W8
	046 Move [X31+352], X31
	047 Move [X31+360], X31
	048 Move X23, X22
	049 Add X23, X23, 152
	050 Move X27, [X23]
	051 Move V0, [X24]
	052 Move X3, [X20]
	053 Add X0, X31, 368
	054 Move W19, [X23+84]
	055 Move [X31+23], V0
	056 Move W25, W19
	057 ShiftRight W25, 24
	058 And W25, W25, 0x7FFFFF
	059 Multiply W26, W25, W29
	060 Move W1, W26
	061 Move W2, W25
	062 Call NativeArray`1<UInt16>.GetSubArray, X0, X1, X2
	063 Compare X27, 0
	064 JumpIfEqual {377}
	065 Move X28, 0x795000
	066 Move X28, [X28+456]
	067 Move X9, [X27]
	068 Move X8, [X28]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X31+28], W29
	071 Move X8, 0x795000
	072 Move X8, [X8+1504]
	073 Move X2, X0
	074 Move X3, X1
	075 Move X0, X27
	076 Move X5, [X8]
	077 Move X1, X2
	078 Move X2, X3
	079 Move W3, W31
	080 Move W4, W31
	081 Call Texture3D.SetPixelData, X0, X1, X2, X3
	082 Move X0, [X23]
	083 Compare X0, 0
	084 JumpIfEqual {377}
	085 Move X8, [X28]
	086 Move X9, [X0]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X29, 0x75F000
	089 Move X29, [X29+696]
	090 Move W1, W31
	091 Move X2, X31
	092 Call Texture3D.Apply, X0, X1
	093 Move V0, [X24+1]
	094 Move X3, [X29]
	095 Move X27, [X22+160]
	096 Add X0, X31, 352
	097 Move W1, W26
	098 Move W2, W25
	099 Move [X31+22], V0
	100 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	101 Compare X27, 0
	102 JumpIfEqual {377}
	103 Move X8, [X28]
	104 Move X9, [X27]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X20, 0x795000
	107 Move X20, [X20+1496]
	108 Move X2, X0
	109 Move X3, X1
	110 Move X0, X27
	111 Move X5, [X20]
	112 Move X1, X2
	113 Move X2, X3
	114 Move W3, W31
	115 Move W4, W31
	116 Call 0x229D77C, X0, X1, X2, X3
	117 Move X0, [X22+160]
	118 Compare X0, 0
	119 JumpIfEqual {377}
	120 Move X8, [X28]
	121 Move X9, [X0]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W1, W31
	124 Move X2, X31
	125 Call Texture3D.Apply, X0, X1
	126 Move V0, [X24+2]
	127 Move X3, [X29]
	128 Move X27, [X22+168]
	129 Add X0, X31, 352
	130 Move W1, W26
	131 Move W2, W25
	132 Move [X31+22], V0
	133 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	134 Compare X27, 0
	135 JumpIfEqual {377}
	136 Move X8, [X28]
	137 Move X9, [X27]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X5, [X20]
	140 Move X2, X0
	141 Move X3, X1
	142 Move X0, X27
	143 Move X1, X2
	144 Move X2, X3
	145 Move W3, W31
	146 Move W4, W31
	147 Call 0x229D77C, X0, X1, X2, X3
	148 Move X0, [X22+168]
	149 Compare X0, 0
	150 JumpIfEqual {377}
	151 Move X8, [X28]
	152 Move X9, [X0]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W1, W31
	155 Move X2, X31
	156 Call Texture3D.Apply, X0, X1
	157 Add W31, W21, 1
	158 Move W8, [X31+28]
	159 Move X3, [X29]
	160 Move X27, [X22+208]
	161 Move W2, W19
	162 ShiftRight W2, 26
	163 And W2, W2, 0x1FFFFFF
	164 Multiply W1, W2, W8
	165 Add X0, X31, 384
	166 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	167 Compare X27, 0
	168 JumpIfEqual {377}
	169 Move X5, [X20]
	170 Move X2, X0
	171 Move X3, X1
	172 Move X0, X27
	173 Move X1, X2
	174 Move X2, X3
	175 Move W3, W31
	176 Move W4, W31
	177 Call 0x229D77C, X0, X1, X2, X3
	178 Move X0, [X22+208]
	179 Compare X0, 0
	180 JumpIfEqual {377}
	181 Move W1, W31
	182 Move X2, X31
	183 Call Texture3D.Apply, X0, X1
	184 Move W8, [X22+376]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move V0, [X24+3]
	187 Move X3, [X29]
	188 Move X27, [X22+176]
	189 Add X0, X31, 352
	190 Move W1, W26
	191 Move W2, W25
	192 Move [X31+22], V0
	193 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	194 Compare X27, 0
	195 JumpIfEqual {377}
	196 Move X8, [X28]
	197 Move X9, [X27]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X5, [X20]
	200 Move X2, X0
	201 Move X3, X1
	202 Move X0, X27
	203 Move X1, X2
	204 Move X2, X3
	205 Move W3, W31
	206 Move W4, W31
	207 Call 0x229D77C, X0, X1, X2, X3
	208 Move X0, [X22+176]
	209 Compare X0, 0
	210 JumpIfEqual {377}
	211 Move X8, [X28]
	212 Move X9, [X0]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W1, W31
	215 Move X2, X31
	216 Call Texture3D.Apply, X0, X1
	217 Move V0, [X24+4]
	218 Move X3, [X29]
	219 Move X27, [X22+184]
	220 Add X0, X31, 352
	221 Move W1, W26
	222 Move W2, W25
	223 Move [X31+22], V0
	224 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	225 Compare X27, 0
	226 JumpIfEqual {377}
	227 Move X8, [X28]
	228 Move X9, [X27]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X5, [X20]
	231 Move X2, X0
	232 Move X3, X1
	233 Move X0, X27
	234 Move X1, X2
	235 Move X2, X3
	236 Move W3, W31
	237 Move W4, W31
	238 Call 0x229D77C, X0, X1, X2, X3
	239 Move X0, [X22+184]
	240 Compare X0, 0
	241 JumpIfEqual {377}
	242 Move X8, [X28]
	243 Move X9, [X0]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move W1, W31
	246 Move X2, X31
	247 Call Texture3D.Apply, X0, X1
	248 Move V0, [X24+5]
	249 Move X3, [X29]
	250 Move X27, [X22+192]
	251 Add X0, X31, 352
	252 Move W1, W26
	253 Move W2, W25
	254 Move [X31+22], V0
	255 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	256 Compare X27, 0
	257 JumpIfEqual {377}
	258 Move X8, [X28]
	259 Move X9, [X27]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X5, [X20]
	262 Move X2, X0
	263 Move X3, X1
	264 Move X0, X27
	265 Move X1, X2
	266 Move X2, X3
	267 Move W3, W31
	268 Move W4, W31
	269 Call 0x229D77C, X0, X1, X2, X3
	270 Move X0, [X22+192]
	271 Compare X0, 0
	272 JumpIfEqual {377}
	273 Move X8, [X28]
	274 Move X9, [X0]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move W1, W31
	277 Move X2, X31
	278 Call Texture3D.Apply, X0, X1
	279 Move V0, [X24+6]
	280 Move X3, [X29]
	281 Move X27, [X22+200]
	282 Add X0, X31, 352
	283 Move W1, W26
	284 Move W2, W25
	285 Move [X31+22], V0
	286 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	287 Compare X27, 0
	288 JumpIfEqual {377}
	289 Move X8, [X28]
	290 Move X9, [X27]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X5, [X20]
	293 Move X2, X0
	294 Move X3, X1
	295 Move X0, X27
	296 Move X1, X2
	297 Move X2, X3
	298 Move W3, W31
	299 Move W4, W31
	300 Call 0x229D77C, X0, X1, X2, X3
	301 Move X0, [X22+200]
	302 Compare X0, 0
	303 JumpIfEqual {377}
	304 Move X8, [X28]
	305 Move X9, [X0]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move W1, W31
	308 Move X2, X31
	309 Call Texture3D.Apply, X0, X1
	310 Move W24, [X22+236]
	311 Add X0, X31, 272
	312 Move W2, 80
	313 Move X1, X23
	314 Call 0x3EB2AC0
	315 Add X3, X31, 272
	316 Move W1, 1
	317 Move X0, X22
	318 Move W2, W24
	319 Call ProbeReferenceVolume.GetSourceLocations, X0, X1, X2, X3
	320 Add W31, W21, 1
	321 Move X24, X0
	322 Move X25, [X22+80]
	323 Add X0, X31, 192
	324 Move W2, 80
	325 Move X1, X23
	326 Call 0x3EB2AC0
	327 Move W19, [X31+28]
	328 Compare X25, 0
	329 JumpIfEqual {377}
	330 Move W22, [X22+376]
	331 Add X0, X31, 32
	332 Add X1, X31, 192
	333 Move W2, 80
	334 Call 0x3EB2AC0
	335 Move X3, [X31+16]
	336 Add X1, X31, 32
	337 Move X0, X25
	338 Move X2, X24
	339 Move W4, W19
	340 Move W5, W22
	341 Move W6, W21
	342 Call ProbeBrickBlendingPool.Update, X0, X1, X2, X3, X4, X5, X6
	343 Move X21, [X22+56]
	344 Add X0, X31, 192
	345 Move W2, 80
	346 Move X1, X23
	347 Call 0x3EB2AC0
	348 Move W19, [X31+28]
	349 Compare X21, 0
	350 JumpIfEqual {377}
	351 Move W22, [X22+376]
	352 Add X0, X31, 112
	353 Add X1, X31, 192
	354 Move W2, 80
	355 Call 0x3EB2AC0
	356 Move X3, [X31+16]
	357 Add X1, X31, 112
	358 Move X0, X21
	359 Move X2, X24
	360 Move W4, W19
	361 Move W5, W22
	362 Call ProbeBrickPool.Update, X0, X1, X2, X3, X4, X5
	363 Move X20, [X31+480]
	364 Move X19, [X31+488]
	365 Move X22, [X31+464]
	366 Move X21, [X31+472]
	367 Move X24, [X31+448]
	368 Move X23, [X31+456]
	369 Move X26, [X31+432]
	370 Move X25, [X31+440]
	371 Move X28, [X31+416]
	372 Move X27, [X31+424]
	373 Move X29, [X31+400]
	374 Move X30, [X31+408]
	375 Add X31, X31, 496
	376 Return 
	377 Call 0x1C17F20

Method: System.Void UpdatePoolValidity(System.Collections.Generic.List`1<UnityEngine.Rendering.ProbeBrickPool/BrickChunkAlloc> chunkList, UnityEngine.Rendering.ProbeReferenceVolume/Cell/PerScenarioData data, Unity.Collections.NativeArray`1<System.Byte> validityNeighMaskData, System.Int32 chunkIndex)

Disassembly:
	0x039BF20C LDP X22, X21, [X31 + 0xC0]
	0x039BF210 LDP X24, X23, [X31 + 0xB0]
	0x039BF214 LDP X26, X25, [X31 + 0xA0]
	0x039BF218 LDP X28, X27, [X31 + 0x90]
	0x039BF21C LDP X29, X30, [X31 + 0x80]
	0x039BF220 LDP D9, D8, [X31 + 0x70]
	0x039BF224 LDR V10, [X31 + 0x60]
	0x039BF228 ADD X31, X31, 0xE0
	0x039BF22C RET
	0x039BF230 BL 0x1C16F20
	0x039BF234 BL 0x1C16F20
	0x039BF238 BL 0x1C16F20
	0x039BF23C BL 0x1C16F20
	0x039BF240 BL 0x1C16F20
	0x039BF244 BL 0x1C16F20
	0x039BF248 BL 0x1C16F20
	0x039BF24C BL 0x1C16F20
	0x039BF250 BL 0x1C16F20
	0x039BF254 BL 0x1C16F20
	0x039BF258 BL 0x1C16F20
	0x039BF25C BL 0x1C16F20
	0x039BF260 BL 0x1C16F20
	0x039BF264 BL 0x1C16F20
	0x039BF268 BL 0x1C16F20
	0x039BF26C BL 0x1C16F20
	0x039BF270 BL 0x1C16F20
	0x039BF274 BL 0x1C16F20
	0x039BF278 BL 0x1C16F20
	0x039BF27C BL 0x1C16F20
	0x039BF280 BL 0x1C16F20
	0x039BF284 B 0x39BF380
	0x039BF288 B 0x39BF380
	0x039BF28C B 0x39BF380
	0x039BF290 B 0x39BF380
	0x039BF294 B 0x39BF380
	0x039BF298 B 0x39BF380
	0x039BF29C B 0x39BF2A8
	0x039BF2A0 B 0x39BF2A8
	0x039BF2A4 B 0x39BF380
	0x039BF2A8 MOV X22, X0
	0x039BF2AC CMP W1, 0x1
	0x039BF2B0 B.NE 0x39BF2E4
	0x039BF2B4 MOV X0, X22
	0x039BF2B8 BL 0x3EB1AD0
	0x039BF2BC LDR X23, [X0]
	0x039BF2C0 BL 0x3EB1AE0
	0x039BF2C4 ADRP X8, 0x793000
	0x039BF2C8 LDR X8, [X8 + 0x450]
	0x039BF2CC ADD X0, X31, 0x40
	0x039BF2D0 LDR X1, [X8]
	0x039BF2D4 BL 0x2BF5F48
	0x039BF2D8 CBZ X23, 0x39BEDD8
	0x039BF2DC MOV X0, X23
	0x039BF2E0 BL 0x1C16F18
	0x039BF2E4 MOV X23, X31
	0x039BF2E8 B 0x39BF2F0
	0x039BF2EC MOV X22, X0
	0x039BF2F0 ADRP X8, 0x793000
	0x039BF2F4 LDR X8, [X8 + 0x450]
	0x039BF2F8 LDR X1, [X8]
	0x039BF2FC ADD X0, X31, 0x40
	0x039BF300 BL 0x2BF5F48
	0x039BF304 CBZ X23, 0x39BF3E0
	0x039BF308 MOV X0, X23
	0x039BF30C BL 0x1C16F18
	0x039BF310 B 0x39BF380
	0x039BF314 B 0x39BF380
	0x039BF318 B 0x39BF380
	0x039BF31C B 0x39BF380
	0x039BF320 B 0x39BF380
	0x039BF324 B 0x39BF380
	0x039BF328 B 0x39BF380
	0x039BF32C B 0x39BF380
	0x039BF330 B 0x39BF380
	0x039BF334 B 0x39BF380
	0x039BF338 B 0x39BF380
	0x039BF33C B 0x39BF380
	0x039BF340 B 0x39BF380
	0x039BF344 B 0x39BF380
	0x039BF348 B 0x39BF380
	0x039BF34C B 0x39BF380

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+248], X4
	003 Move [X31+256], X29
	004 Move [X31+272], X30
	005 Move [X31+280], X23
	006 Move [X31+288], X22
	007 Move [X31+296], X21
	008 Move [X31+304], X20
	009 Move [X31+312], X19
	010 Move X22, 0xA23000
	011 Move [X31+240], X3
	012 Move X23, 0x75E000
	013 Move W8, [X22+3234]
	014 Move X23, [X23+696]
	015 Move W19, W5
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x75E000
	023 Move X0, [X0+696]
	024 Call 0x1C17CF4
	025 Move X0, 0x794000
	026 Move X0, [X0+1496]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3234], W8
	030 Move W8, [X21+236]
	031 Move X3, [X23]
	032 Move X22, [X21+208]
	033 Add X0, X31, 240
	034 Move W2, W8
	035 ShiftRight W2, 26
	036 And W2, W2, 0x1FFFFFF
	037 Multiply W1, W2, W19
	038 Call NativeArray`1<Byte>.GetSubArray, X0, X1, X2
	039 Compare X22, 0
	040 JumpIfEqual {96}
	041 Move X8, 0x794000
	042 Move X8, [X8+1496]
	043 Move X2, X0
	044 Move X3, X1
	045 Move X0, X22
	046 Move X5, [X8]
	047 Move X1, X2
	048 Move X2, X3
	049 Move W3, W31
	050 Move W4, W31
	051 Call 0x229D77C, X0, X1, X2, X3
	052 Move X0, [X21+208]
	053 Compare X0, 0
	054 JumpIfEqual {96}
	055 Move W1, W31
	056 Move X2, X31
	057 Add X23, X21, 152
	058 Call Texture3D.Apply, X0, X1
	059 Move W22, [X21+236]
	060 Add X0, X31, 160
	061 Move W2, 80
	062 Move X1, X23
	063 Call 0x3EB2AC0
	064 Add X3, X31, 160
	065 Move W1, 1
	066 Move X0, X21
	067 Move W2, W22
	068 Call ProbeReferenceVolume.GetSourceLocations, X0, X1, X2, X3
	069 Move X22, [X21+56]
	070 Move X21, X0
	071 Add X0, X31, 80
	072 Move W2, 80
	073 Move X1, X23
	074 Call 0x3EB2AC0
	075 Compare X22, 0
	076 JumpIfEqual {96}
	077 Add X0, X31, 0
	078 Add X1, X31, 80
	079 Move W2, 80
	080 Call 0x3EB2AC0
	081 Add X1, X31, 0
	082 Move X0, X22
	083 Move X2, X21
	084 Move X3, X20
	085 Move W4, W19
	086 Call ProbeBrickPool.UpdateValidity, X0, X1, X2, X3, X4
	087 Move X20, [X31+304]
	088 Move X19, [X31+312]
	089 Move X22, [X31+288]
	090 Move X21, [X31+296]
	091 Move X30, [X31+272]
	092 Move X23, [X31+280]
	093 Move X29, [X31+256]
	094 Add X31, X31, 320
	095 Return 
	096 Call 0x1C17F20

Method: System.Boolean AddBlendingBricks(UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo blendingCell)

Disassembly:
	0x039BF350 B 0x39BF380
	0x039BF354 B 0x39BF380
	0x039BF358 B 0x39BF380
	0x039BF35C B 0x39BF380
	0x039BF360 B 0x39BF380
	0x039BF364 B 0x39BF380
	0x039BF368 B 0x39BF380
	0x039BF36C B 0x39BF380
	0x039BF370 B 0x39BF380
	0x039BF374 B 0x39BF380
	0x039BF378 B 0x39BF380
	0x039BF37C B 0x39BF380
	0x039BF380 MOV X22, X0
	0x039BF384 CMP W1, 0x1
	0x039BF388 B.NE 0x39BF3BC
	0x039BF38C MOV X0, X22
	0x039BF390 BL 0x3EB1AD0
	0x039BF394 LDR X19, [X0]
	0x039BF398 BL 0x3EB1AE0
	0x039BF39C ADRP X8, 0x793000
	0x039BF3A0 LDR X8, [X8 + 0x450]
	0x039BF3A4 ADD X0, X31, 0x40
	0x039BF3A8 LDR X1, [X8]
	0x039BF3AC BL 0x2BF5F48
	0x039BF3B0 CBZ X19, 0x39BF208
	0x039BF3B4 MOV X0, X19
	0x039BF3B8 BL 0x1C16F18
	0x039BF3BC MOV X19, X31
	0x039BF3C0 B 0x39BF3C8
	0x039BF3C4 MOV X22, X0
	0x039BF3C8 ADRP X8, 0x793000
	0x039BF3CC LDR X8, [X8 + 0x450]
	0x039BF3D0 LDR X1, [X8]
	0x039BF3D4 ADD X0, X31, 0x40
	0x039BF3D8 BL 0x2BF5F48
	0x039BF3DC CBNZ X19, 0x39BF3E8
	0x039BF3E0 MOV X0, X22
	0x039BF3E4 BL 0x1D2C690
	0x039BF3E8 MOV X0, X19
	0x039BF3EC BL 0x1C16F18
	0x039BF3F0 BL 0x1990590
	0x039BF3F4 SUB X31, X31, 0x80
	0x039BF3F8 STP X29, X30, [X31 + 0x20]
	0x039BF3FC STP X28, X27, [X31 + 0x30]
	0x039BF400 STP X26, X25, [X31 + 0x40]
	0x039BF404 STP X24, X23, [X31 + 0x50]
	0x039BF408 STP X22, X21, [X31 + 0x60]
	0x039BF40C STP X20, X19, [X31 + 0x70]
	0x039BF410 ADRP X19, 0xA22000
	0x039BF414 ADRP X21, 0x793000
	0x039BF418 LDRB W8, [X19 + 0xCA9]
	0x039BF41C LDR X21, [X21 + 0x660]
	0x039BF420 MOV X20, X1
	0x039BF424 MOV X23, X0
	0x039BF428 TBNZ X8, 0x0, 0x39BF98C
	0x039BF42C ADRP X0, 0x734000
	0x039BF430 LDR X0, [X0 + 0xD28]
	0x039BF434 BL 0x1C16CF4
	0x039BF438 ADRP X0, 0x736000
	0x039BF43C LDR X0, [X0 + 0x5B0]
	0x039BF440 BL 0x1C16CF4
	0x039BF444 ADRP X0, 0x738000
	0x039BF448 LDR X0, [X0 + 0xB00]
	0x039BF44C BL 0x1C16CF4
	0x039BF450 ADRP X0, 0x792000
	0x039BF454 LDR X0, [X0 + 0x458]
	0x039BF458 BL 0x1C16CF4
	0x039BF45C ADRP X0, 0x793000
	0x039BF460 LDR X0, [X0 + 0x668]
	0x039BF464 BL 0x1C16CF4
	0x039BF468 ADRP X0, 0x734000
	0x039BF46C LDR X0, [X0 + 0x970]
	0x039BF470 BL 0x1C16CF4
	0x039BF474 ADRP X0, 0x791000
	0x039BF478 LDR X0, [X0 + 0x768]
	0x039BF47C BL 0x1C16CF4
	0x039BF480 ADRP X0, 0x791000
	0x039BF484 LDR X0, [X0 + 0x758]
	0x039BF488 BL 0x1C16CF4
	0x039BF48C ADRP X0, 0x791000
	0x039BF490 LDR X0, [X0 + 0x778]
	0x039BF494 BL 0x1C16CF4
	0x039BF498 ADRP X0, 0x793000
	0x039BF49C LDR X0, [X0 + 0x670]
	0x039BF4A0 BL 0x1C16CF4
	0x039BF4A4 ADRP X0, 0x792000
	0x039BF4A8 LDR X0, [X0 + 0xE0]
	0x039BF4AC BL 0x1C16CF4
	0x039BF4B0 ADRP X0, 0x792000
	0x039BF4B4 LDR X0, [X0 + 0xE8]
	0x039BF4B8 BL 0x1C16CF4
	0x039BF4BC ADRP X0, 0x792000
	0x039BF4C0 LDR X0, [X0 + 0xF0]
	0x039BF4C4 BL 0x1C16CF4
	0x039BF4C8 ADRP X0, 0x793000
	0x039BF4CC LDR X0, [X0 + 0x678]
	0x039BF4D0 BL 0x1C16CF4
	0x039BF4D4 ADRP X0, 0x791000
	0x039BF4D8 LDR X0, [X0 + 0x780]
	0x039BF4DC BL 0x1C16CF4
	0x039BF4E0 ADRP X0, 0x793000
	0x039BF4E4 LDR X0, [X0 + 0x680]
	0x039BF4E8 BL 0x1C16CF4
	0x039BF4EC ADRP X0, 0x791000
	0x039BF4F0 LDR X0, [X0 + 0x788]
	0x039BF4F4 BL 0x1C16CF4
	0x039BF4F8 ADRP X0, 0x792000
	0x039BF4FC LDR X0, [X0 + 0xF8]
	0x039BF500 BL 0x1C16CF4
	0x039BF504 ADRP X0, 0x793000
	0x039BF508 LDR X0, [X0 + 0x688]
	0x039BF50C BL 0x1C16CF4
	0x039BF510 ADRP X0, 0x793000
	0x039BF514 LDR X0, [X0 + 0x690]
	0x039BF518 BL 0x1C16CF4
	0x039BF51C ADRP X0, 0x73D000
	0x039BF520 LDR X0, [X0 + 0x940]
	0x039BF524 BL 0x1C16CF4
	0x039BF528 ADRP X0, 0x77A000
	0x039BF52C LDR X0, [X0 + 0x6A0]
	0x039BF530 BL 0x1C16CF4
	0x039BF534 ADRP X0, 0x793000
	0x039BF538 LDR X0, [X0 + 0x698]
	0x039BF53C BL 0x1C16CF4
	0x039BF540 ADRP X0, 0x791000
	0x039BF544 LDR X0, [X0 + 0x790]
	0x039BF548 BL 0x1C16CF4
	0x039BF54C ADRP X0, 0x791000
	0x039BF550 LDR X0, [X0 + 0x798]
	0x039BF554 BL 0x1C16CF4
	0x039BF558 ADRP X0, 0x791000
	0x039BF55C LDR X0, [X0 + 0x750]
	0x039BF560 BL 0x1C16CF4
	0x039BF564 ADRP X0, 0x793000
	0x039BF568 LDR X0, [X0 + 0x6A0]
	0x039BF56C BL 0x1C16CF4
	0x039BF570 ADRP X0, 0x791000
	0x039BF574 LDR X0, [X0 + 0x748]
	0x039BF578 BL 0x1C16CF4
	0x039BF57C ADRP X0, 0x734000
	0x039BF580 LDR X0, [X0 + 0x598]
	0x039BF584 BL 0x1C16CF4
	0x039BF588 ADRP X0, 0x791000
	0x039BF58C LDR X0, [X0 + 0x7A0]
	0x039BF590 BL 0x1C16CF4
	0x039BF594 ADRP X0, 0x791000
	0x039BF598 LDR X0, [X0 + 0x7A8]
	0x039BF59C BL 0x1C16CF4
	0x039BF5A0 ADRP X0, 0x792000
	0x039BF5A4 LDR X0, [X0 + 0xF48]
	0x039BF5A8 BL 0x1C16CF4
	0x039BF5AC ADRP X0, 0x734000
	0x039BF5B0 LDR X0, [X0 + 0x6C0]
	0x039BF5B4 BL 0x1C16CF4
	0x039BF5B8 ADRP X0, 0x793000
	0x039BF5BC LDR X0, [X0 + 0x6A8]
	0x039BF5C0 BL 0x1C16CF4
	0x039BF5C4 ADRP X0, 0x793000
	0x039BF5C8 LDR X0, [X0 + 0x6B0]
	0x039BF5CC BL 0x1C16CF4
	0x039BF5D0 ADRP X0, 0x793000
	0x039BF5D4 LDR X0, [X0 + 0x6B8]
	0x039BF5D8 BL 0x1C16CF4
	0x039BF5DC ADRP X0, 0x793000
	0x039BF5E0 LDR X0, [X0 + 0x6C0]
	0x039BF5E4 BL 0x1C16CF4
	0x039BF5E8 ADRP X0, 0x793000
	0x039BF5EC LDR X0, [X0 + 0x6C8]
	0x039BF5F0 BL 0x1C16CF4
	0x039BF5F4 ADRP X0, 0x793000
	0x039BF5F8 LDR X0, [X0 + 0x6D0]
	0x039BF5FC BL 0x1C16CF4
	0x039BF600 ADRP X0, 0x793000
	0x039BF604 LDR X0, [X0 + 0x6D8]
	0x039BF608 BL 0x1C16CF4
	0x039BF60C ADRP X0, 0x793000
	0x039BF610 LDR X0, [X0 + 0x6E0]
	0x039BF614 BL 0x1C16CF4
	0x039BF618 ADRP X0, 0x793000
	0x039BF61C LDR X0, [X0 + 0x6E8]
	0x039BF620 BL 0x1C16CF4
	0x039BF624 ADRP X0, 0x793000
	0x039BF628 LDR X0, [X0 + 0x6F0]
	0x039BF62C BL 0x1C16CF4
	0x039BF630 ADRP X0, 0x793000
	0x039BF634 LDR X0, [X0 + 0x6F8]
	0x039BF638 BL 0x1C16CF4
	0x039BF63C ADRP X0, 0x793000
	0x039BF640 LDR X0, [X0 + 0x700]
	0x039BF644 BL 0x1C16CF4
	0x039BF648 ADRP X0, 0x793000
	0x039BF64C LDR X0, [X0 + 0x708]
	0x039BF650 BL 0x1C16CF4
	0x039BF654 ADRP X0, 0x793000
	0x039BF658 LDR X0, [X0 + 0x710]
	0x039BF65C BL 0x1C16CF4
	0x039BF660 ADRP X0, 0x793000
	0x039BF664 LDR X0, [X0 + 0x718]
	0x039BF668 BL 0x1C16CF4
	0x039BF66C ADRP X0, 0x793000
	0x039BF670 LDR X0, [X0 + 0x720]
	0x039BF674 BL 0x1C16CF4
	0x039BF678 ADRP X0, 0x793000
	0x039BF67C LDR X0, [X0 + 0x728]
	0x039BF680 BL 0x1C16CF4
	0x039BF684 ADRP X0, 0x793000
	0x039BF688 LDR X0, [X0 + 0x730]
	0x039BF68C BL 0x1C16CF4
	0x039BF690 ADRP X0, 0x793000
	0x039BF694 LDR X0, [X0 + 0x738]
	0x039BF698 BL 0x1C16CF4
	0x039BF69C ADRP X0, 0x793000
	0x039BF6A0 LDR X0, [X0 + 0x740]
	0x039BF6A4 BL 0x1C16CF4
	0x039BF6A8 ADRP X0, 0x793000
	0x039BF6AC LDR X0, [X0 + 0x748]
	0x039BF6B0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+336], X29
	003 Move [X31+352], X30
	004 Move [X31+360], X27
	005 Move [X31+368], X26
	006 Move [X31+376], X25
	007 Move [X31+384], X24
	008 Move [X31+392], X23
	009 Move [X31+400], X22
	010 Move [X31+408], X21
	011 Move [X31+416], X20
	012 Move [X31+424], X19
	013 Move X19, 0xA23000
	014 Move X22, 0x794000
	015 Move W8, [X19+3235]
	016 Move X22, [X22+1512]
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x794000
	024 Move X0, [X0+208]
	025 Call 0x1C17CF4
	026 Move X0, 0x794000
	027 Move X0, [X0+1512]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+3235], W8
	031 Move X0, [X22]
	032 Move W1, 1
	033 Move W2, W31
	034 Move W3, W31
	035 Move X4, X31
	036 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	037 Move X1, X31
	038 Move X2, X31
	039 Move X19, X0
	040 Call IntPtr.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move X0, X19
	046 Move X1, X31
	047 Call ProfilerUnsafeUtility.BeginSample, X0
	048 Compare X20, 0
	049 JumpIfEqual {196}
	050 Move X8, [X20+16]
	051 Compare X8, 0
	052 JumpIfEqual {199}
	053 Move X9, [X21+240]
	054 Compare X9, 0
	055 JumpIfEqual {200}
	056 Move X9, [X9+120]
	057 Move X26, [X8+16]
	058 Compare X9, 0
	059 JumpIfEqual {76}
	060 Compare X26, 0
	061 JumpIfEqual {203}
	062 Move W9, [X26+52]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X21+80]
	065 Compare X0, 0
	066 JumpIfEqual {205}
	067 Add X22, X20, 24
	068 Move W1, [X26+48]
	069 Move X2, [X22]
	070 Call ProbeBrickBlendingPool.Allocate, X0, X1, X2
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {194}
	075 Move W24, 1
	076 Move W24, W31
	077 Add X22, X8, 32
	078 Move X22, [X22]
	079 Compare X22, 0
	080 JumpIfEqual {201}
	081 Move X8, [X20+16]
	082 Compare X8, 0
	083 JumpIfEqual {202}
	084 Move W9, [X8+96]
	085 Move W27, [X22+24]
	086 Compare W9, 0
	087 JumpIfNotEqual {103}
	088 Move X0, X21
	089 Move X1, X8
	090 Call ProbeReferenceVolume.UpdateCellIndex, X0, X1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare X26, 0
	093 JumpIfEqual {208}
	094 Move W23, W31
	095 Move X3, [X26+80]
	096 Move X4, [X26+88]
	097 Move X0, X21
	098 Move X1, X22
	099 Move W5, W23
	100 Call ProbeReferenceVolume.UpdatePoolValidity, X0, X1, X2, X3, X4
	101 Add W23, W23, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare W24, 0
	104 JumpIfEqual {137}
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare X26, 0
	107 JumpIfEqual {206}
	108 Move W23, W31
	109 Add X24, X26, 160
	110 Add X25, X26, 272
	111 Add X0, X31, 112
	112 Move W2, 112
	113 Move X1, X24
	114 Call 0x3EB2AC0
	115 Move X3, [X26+80]
	116 Move X4, [X26+88]
	117 Add X2, X31, 112
	118 Move X0, X21
	119 Move X1, X22
	120 Move W5, W23
	121 Move W6, W31
	122 Call ProbeReferenceVolume.UpdatePool, X0, X1, X2, X3, X4, X5
	123 Add X0, X31, 0
	124 Move W2, 112
	125 Move X1, X25
	126 Call 0x3EB2AC0
	127 Move X3, [X26+80]
	128 Move X4, [X26+88]
	129 Add X2, X31, 0
	130 Move W6, 1
	131 Move X0, X21
	132 Move X1, X22
	133 Move W5, W23
	134 Call ProbeReferenceVolume.UpdatePool, X0, X1, X2, X3, X4, X5
	135 Add W23, W23, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, [X21+240]
	138 Compare X8, 0
	139 JumpIfEqual {204}
	140 Move V0, [X20+36]
	141 Move V1, [X8+128]
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Compare X26, 0
	145 JumpIfEqual {207}
	146 Move W23, W31
	147 Add X24, X26, 160
	148 Add X0, X31, 224
	149 Move W2, 112
	150 Move X1, X24
	151 Call 0x3EB2AC0
	152 Move X3, [X26+80]
	153 Move X4, [X26+88]
	154 Add X2, X31, 224
	155 Move TEMP, 0
	156 Not TEMP
	157 Move W6, TEMP
	158 Move X0, X21
	159 Move X1, X22
	160 Move W5, W23
	161 Call ProbeReferenceVolume.UpdatePool, X0, X1, X2, X3, X4, X5
	162 Add W23, W23, 1
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W22, 1
	165 Move X21, X31
	166 Move [X20+40], W22
	167 Move X0, X19
	168 Move X1, X31
	169 Move X2, X31
	170 Call IntPtr.op_Inequality, X0, X1
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {178}
	175 Move X0, X19
	176 Move X1, X31
	177 Call ProfilerUnsafeUtility.EndSample, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {197}
	180 Move W0, W22
	181 Move X20, [X31+416]
	182 Move X19, [X31+424]
	183 Move X22, [X31+400]
	184 Move X21, [X31+408]
	185 Move X24, [X31+384]
	186 Move X23, [X31+392]
	187 Move X26, [X31+368]
	188 Move X25, [X31+376]
	189 Move X30, [X31+352]
	190 Move X27, [X31+360]
	191 Move X29, [X31+336]
	192 Add X31, X31, 432
	193 Return X0
	194 Move X21, X31
	195 Move W22, W31
	196 Call 0x1C17F20
	197 Move X0, X21
	198 Call 0x1C17F18
	199 Call 0x1C17F20
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 Call 0x1C17F20
	203 Call 0x1C17F20
	204 Call 0x1C17F20
	205 Call 0x1C17F20
	206 Call 0x1C17F20
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Move X20, X0
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, X20
	212 Call 0x3EB2AD0
	213 Move X21, [X0]
	214 Call 0x3EB2AE0
	215 Move X21, X31
	216 Move X20, X0
	217 Move X0, X19
	218 Move X1, X31
	219 Move X2, X31
	220 Call IntPtr.op_Inequality, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {228}
	225 Move X0, X19
	226 Move X1, X31
	227 Call ProfilerUnsafeUtility.EndSample, X0
	228 Compare X21, 0
	229 JumpIfNotEqual {232}
	230 Move X0, X20
	231 Call 0x1D2D690
	232 Move X0, X21
	233 Call 0x1C17F18
	234 Call 0x1991590

Method: System.Boolean AddBricks(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellUpdateInfo, System.Boolean ignoreErrorLog)

Disassembly:
	0x039BBF28 STR X30, [X31 - 0x30]!
	0x039BBF2C STP X22, X21, [X31 + 0x10]
	0x039BBF30 STP X20, X19, [X31 + 0x20]
	0x039BBF34 ADRP X21, 0xA26000
	0x039BBF38 LDRB W8, [X21 + 0xC93]
	0x039BBF3C MOV X19, X1
	0x039BBF40 MOV X20, X0
	0x039BBF44 TBNZ X8, 0x0, 0x39BBF74
	0x039BBF48 ADRP X0, 0x797000
	0x039BBF4C LDR X0, [X0 + 0x470]
	0x039BBF50 BL 0x1C16CF4
	0x039BBF54 ADRP X0, 0x797000
	0x039BBF58 LDR X0, [X0 + 0x4B0]
	0x039BBF5C BL 0x1C16CF4
	0x039BBF60 ADRP X0, 0x797000
	0x039BBF64 LDR X0, [X0 + 0x4C8]
	0x039BBF68 BL 0x1C16CF4
	0x039BBF6C MOVZ W8, 0x1
	0x039BBF70 STRB W8, [X21 + 0xC93]
	0x039BBF74 CBZ X19, 0x39BC00C
	0x039BBF78 LDR X0, [X20 + 0x128]
	0x039BBF7C CBZ X0, 0x39BC00C
	0x039BBF80 ADRP X22, 0x797000
	0x039BBF84 LDR X22, [X22 + 0x470]
	0x039BBF88 LDR X21, [X19 + 0x78]
	0x039BBF8C LDR X2, [X22]
	0x039BBF90 MOV X1, X21
	0x039BBF94 BL 0x2AA528C
	0x039BBF98 TBZ X0, 0x0, 0x39BBFB8
	0x039BBF9C LDR X0, [X20 + 0x128]
	0x039BBFA0 CBZ X0, 0x39BC00C
	0x039BBFA4 ADRP X8, 0x797000
	0x039BBFA8 LDR X8, [X8 + 0x4B0]
	0x039BBFAC MOV X1, X21
	0x039BBFB0 LDR X2, [X8]
	0x039BBFB4 BL 0x2AA64F8
	0x039BBFB8 LDR X0, [X20 + 0x138]
	0x039BBFBC CBZ X0, 0x39BC00C
	0x039BBFC0 LDR X2, [X22]
	0x039BBFC4 MOV X1, X21
	0x039BBFC8 BL 0x2AA528C
	0x039BBFCC TBZ X0, 0x0, 0x39BBFFC
	0x039BBFD0 LDR X0, [X20 + 0x130]
	0x039BBFD4 CBZ X0, 0x39BC00C
	0x039BBFD8 ADRP X8, 0x797000
	0x039BBFDC LDR X8, [X8 + 0x4C8]
	0x039BBFE0 MOV X1, X21
	0x039BBFE4 MOV X2, X19
	0x039BBFE8 LDP X20, X19, [X31 + 0x20]
	0x039BBFEC LDR X3, [X8]
	0x039BBFF0 LDP X22, X21, [X31 + 0x10]
	0x039BBFF4 LDR X30, [X31], #0x30
	0x039BBFF8 B 0x2AA5084
	0x039BBFFC LDP X20, X19, [X31 + 0x20]
	0x039BC000 LDP X22, X21, [X31 + 0x10]
	0x039BC004 LDR X30, [X31], #0x30
	0x039BC008 RET
	0x039BC00C BL 0x1C16F20
	0x039BC010 STP X30, X25, [X31 - 0x40]!
	0x039BC014 STP X24, X23, [X31 + 0x10]
	0x039BC018 STP X22, X21, [X31 + 0x20]
	0x039BC01C STP X20, X19, [X31 + 0x30]
	0x039BC020 ADRP X21, 0xA25000
	0x039BC024 LDRB W8, [X21 + 0xC94]
	0x039BC028 MOV X20, X1
	0x039BC02C MOV X19, X0
	0x039BC030 TBNZ X8, 0x0, 0x39BC084
	0x039BC034 ADRP X0, 0x796000
	0x039BC038 LDR X0, [X0 + 0x470]
	0x039BC03C BL 0x1C16CF4
	0x039BC040 ADRP X0, 0x796000
	0x039BC044 LDR X0, [X0 + 0x4B0]
	0x039BC048 BL 0x1C16CF4
	0x039BC04C ADRP X0, 0x796000
	0x039BC050 LDR X0, [X0 + 0x4D0]
	0x039BC054 BL 0x1C16CF4
	0x039BC058 ADRP X0, 0x796000
	0x039BC05C LDR X0, [X0 + 0x3C0]
	0x039BC060 BL 0x1C16CF4
	0x039BC064 ADRP X0, 0x796000
	0x039BC068 LDR X0, [X0 + 0x3F0]
	0x039BC06C BL 0x1C16CF4
	0x039BC070 ADRP X0, 0x796000
	0x039BC074 LDR X0, [X0 + 0x340]
	0x039BC078 BL 0x1C16CF4
	0x039BC07C MOVZ W8, 0x1
	0x039BC080 STRB W8, [X21 + 0xC94]
	0x039BC084 CBZ X20, 0x39BC26C
	0x039BC088 LDR X0, [X19 + 0x138]
	0x039BC08C CBZ X0, 0x39BC26C
	0x039BC090 ADRP X8, 0x796000
	0x039BC094 LDR X8, [X8 + 0x470]
	0x039BC098 LDR X21, [X20 + 0x78]
	0x039BC09C LDR X2, [X8]
	0x039BC0A0 MOV X1, X21
	0x039BC0A4 BL 0x2AA528C
	0x039BC0A8 TBZ X0, 0x0, 0x39BC0C8
	0x039BC0AC LDR X0, [X19 + 0x138]
	0x039BC0B0 CBZ X0, 0x39BC26C
	0x039BC0B4 ADRP X8, 0x796000
	0x039BC0B8 LDR X8, [X8 + 0x4B0]
	0x039BC0BC MOV X1, X21
	0x039BC0C0 LDR X2, [X8]
	0x039BC0C4 BL 0x2AA64F8
	0x039BC0C8 LDR X21, [X20 + 0x20]
	0x039BC0CC CBZ X21, 0x39BC26C
	0x039BC0D0 LDR X8, [X21 + 0x18]
	0x039BC0D4 CMP W8, 0x1
	0x039BC0D8 B.LT 0x39BC10C
	0x039BC0DC MOV X22, X31
	0x039BC0E0 AND X8, X8, 0x0
	0x039BC0E4 ADD X23, X21, 0x20
	0x039BC0E8 CMP X22, W8, UXTW
	0x039BC0EC B.CS 0x39BC290
	0x039BC0F0 LDR X1, [X23, X22, LSL #3]
	0x039BC0F4 MOV X0, X19
	0x039BC0F8 BL 0x39BA570
	0x039BC0FC LDR W8, [X21 + 0x18]
	0x039BC100 ADD X22, X22, 0x1
	0x039BC104 CMP X22, W8, SXTW
	0x039BC108 B.LT 0x39BC0E8
	0x039BC10C MOV X0, X20
	0x039BC110 MOV X1, X31
	0x039BC114 BL 0x3C385F8
	0x039BC118 LDR X8, [X19 + 0x238]
	0x039BC11C CBZ X8, 0x39BC26C
	0x039BC120 LDR W9, [X8 + 0x18]
	0x039BC124 MOV W20, W0
	0x039BC128 SUBS W21, W9, 0x1
	0x039BC12C B.MI 0x39BC204
	0x039BC130 ADRP X23, 0x796000
	0x039BC134 ADRP X24, 0x796000
	0x039BC138 ADRP X25, 0x796000
	0x039BC13C LDR X23, [X23 + 0x3F0]
	0x039BC140 LDR X24, [X24 + 0x3C0]
	0x039BC144 LDR X25, [X25 + 0x4D0]
	0x039BC148 LDR X2, [X23]
	0x039BC14C MOV X0, X8
	0x039BC150 MOV W1, W21
	0x039BC154 BL 0x2B40178
	0x039BC158 LDR X8, [X0]
	0x039BC15C CBZ X8, 0x39BC26C
	0x039BC160 LDR W8, [X8 + 0x94]
	0x039BC164 CMP W8, W20
	0x039BC168 B.NE 0x39BC1F0
	0x039BC16C LDR X0, [X19 + 0x238]
	0x039BC170 CBZ X0, 0x39BC26C
	0x039BC174 LDR X2, [X23]
	0x039BC178 MOV W1, W21
	0x039BC17C BL 0x2B40178
	0x039BC180 LDR X8, [X0]
	0x039BC184 CBZ X8, 0x39BC26C
	0x039BC188 LDR X8, [X8 + 0x18]
	0x039BC18C CBZ X8, 0x39BC26C
	0x039BC190 LDRB W8, [X8 + 0x28]
	0x039BC194 CBZ W8, 0x39BC1A8
	0x039BC198 LDR X0, [X19 + 0x238]
	0x039BC19C CBZ X0, 0x39BC26C
	0x039BC1A0 LDR X22, [X19 + 0x258]
	0x039BC1A4 B 0x39BC1B4
	0x039BC1A8 LDR X0, [X19 + 0x238]
	0x039BC1AC CBZ X0, 0x39BC26C
	0x039BC1B0 LDR X22, [X19 + 0x260]
	0x039BC1B4 LDR X2, [X23]
	0x039BC1B8 MOV W1, W21
	0x039BC1BC BL 0x2B40178
	0x039BC1C0 LDR X8, [X0]
	0x039BC1C4 CBZ X8, 0x39BC26C
	0x039BC1C8 CBZ X22, 0x39BC26C
	0x039BC1CC LDR X1, [X8 + 0x18]
	0x039BC1D0 LDR X2, [X24]
	0x039BC1D4 MOV X0, X22
	0x039BC1D8 BL 0x2B3FD78
	0x039BC1DC LDR X0, [X19 + 0x238]
	0x039BC1E0 CBZ X0, 0x39BC26C
	0x039BC1E4 LDR X2, [X25]
	0x039BC1E8 MOV W1, W21
	0x039BC1EC BL 0x2B3FDE0
	0x039BC1F0 SUBS W21, W21, 0x1
	0x039BC1F4 B.MI 0x39BC204
	0x039BC1F8 LDR X8, [X19 + 0x238]
	0x039BC1FC CBNZ X8, 0x39BC148
	0x039BC200 B 0x39BC26C
	0x039BC204 LDR X0, [X19 + 0x240]
	0x039BC208 CBZ X0, 0x39BC26C
	0x039BC20C LDR W8, [X0 + 0x18]
	0x039BC210 SUBS W21, W8, 0x1
	0x039BC214 B.MI 0x39BC270
	0x039BC218 ADRP X22, 0x796000
	0x039BC21C ADRP X23, 0x796000
	0x039BC220 LDR X22, [X22 + 0x3F0]
	0x039BC224 LDR X23, [X23 + 0x4D0]
	0x039BC228 LDR X2, [X22]
	0x039BC22C MOV W1, W21
	0x039BC230 BL 0x2B40178
	0x039BC234 LDR X8, [X0]
	0x039BC238 CBZ X8, 0x39BC26C
	0x039BC23C LDR W8, [X8 + 0x94]
	0x039BC240 CMP W8, W20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X19, 0xA27000
	011 Move X24, 0x798000
	012 Move W8, [X19+3236]
	013 Move X24, [X24+1080]
	014 Move W23, W3
	015 Move X22, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x798000
	023 Move X0, [X0+1088]
	024 Call 0x1C17CF4
	025 Move X0, 0x798000
	026 Move X0, [X0+968]
	027 Call 0x1C17CF4
	028 Move X0, 0x798000
	029 Move X0, [X0+208]
	030 Call 0x1C17CF4
	031 Move X0, 0x798000
	032 Move X0, [X0+1080]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+3236], W8
	036 Move X0, [X24]
	037 Move W1, 1
	038 Move W2, W31
	039 Move W3, W31
	040 Move X4, X31
	041 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	042 Move X1, X31
	043 Move X2, X31
	044 Move X19, X0
	045 Call IntPtr.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {53}
	050 Move X0, X19
	051 Move X1, X31
	052 Call ProfilerUnsafeUtility.BeginSample, X0
	053 Compare X21, 0
	054 JumpIfEqual {191}
	055 Move X25, [X21+16]
	056 Compare X25, 0
	057 JumpIfEqual {194}
	058 Move X2, [X21+32]
	059 Compare X2, 0
	060 JumpIfEqual {195}
	061 Move W10, [X2+28]
	062 Move W9, [X25+72]
	063 Move W8, [X20+236]
	064 Add W10, W10, 1
	065 Move [X2+24], W31
	066 Move [X2+28], W10
	067 Move X0, [X20+56]
	068 Compare X0, 0
	069 JumpIfEqual {196}
	070 Add W9, W9, W8
	071 Subtract W9, W9, 1
	072 NotImplemented "Instruction SDIV not yet implemented."
	073 And W3, W23, 1
	074 Call ProbeBrickPool.Allocate, X0, X1, X2, X3
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {136}
	079 Move X0, X20
	080 Call ProbeReferenceVolume.get_enableScenarioBlending, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {93}
	085 Move X0, [X20+608]
	086 Compare X0, 0
	087 JumpIfEqual {198}
	088 Move X8, 0x797000
	089 Move X8, [X8+1088]
	090 Add X1, X21, 24
	091 Move X2, [X8]
	092 Call 0x2B40C18, X0, X1
	093 Move V1, [X22+16]
	094 Move V0, [X22+32]
	095 Move V2, [X22]
	096 Move [X21+132], V0
	097 Move [X21+116], V1
	098 Move [X21+100], V2
	099 Move X0, X20
	100 Call ProbeReferenceVolume.get_enableScenarioBlending, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {110}
	105 Move X8, [X20+240]
	106 Compare X8, 0
	107 JumpIfEqual {199}
	108 Move V0, [X8+128]
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move X24, [X21+32]
	111 Compare X24, 0
	112 JumpIfEqual {135}
	113 Move W22, W31
	114 Add X23, X25, 160
	115 Move W8, [X24+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X0, X31, 0
	118 Move W2, 112
	119 Move X1, X23
	120 Call 0x3EB2AC0
	121 Move X3, [X25+80]
	122 Move X4, [X25+88]
	123 Add X2, X31, 0
	124 Move TEMP, 0
	125 Not TEMP
	126 Move W6, TEMP
	127 Move X0, X20
	128 Move X1, X24
	129 Move W5, W22
	130 Call ProbeReferenceVolume.UpdatePool, X0, X1, X2, X3, X4, X5
	131 Move X24, [X21+32]
	132 Add W22, W22, 1
	133 Compare X24, 0
	134 JumpIfNotEqual {115}
	135 Call 0x1C17F20
	136 Move X21, X31
	137 Move W22, W31
	138 Move X0, X20
	139 Move X1, X21
	140 Call ProbeReferenceVolume.UpdateCellIndex, X0, X1
	141 Move X8, [X21+24]
	142 Compare X8, 0
	143 JumpIfEqual {197}
	144 Move [X8+36], W31
	145 Move W22, 1
	146 Move [X21+44], W22
	147 Move X0, X20
	148 Call ProbeReferenceVolume.ClearDebugData, X0
	149 Move X21, X31
	150 Move X0, X19
	151 Move X1, X31
	152 Move X2, X31
	153 Call IntPtr.op_Inequality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {161}
	158 Move X0, X19
	159 Move X1, X31
	160 Call ProfilerUnsafeUtility.EndSample, X0
	161 Compare X21, 0
	162 JumpIfNotEqual {192}
	163 Move W0, W22
	164 Move X20, [X31+160]
	165 Move X19, [X31+168]
	166 Move X22, [X31+144]
	167 Move X21, [X31+152]
	168 Move X24, [X31+128]
	169 Move X23, [X31+136]
	170 Move X30, [X31+112]
	171 Move X25, [X31+120]
	172 Add X31, X31, 176
	173 Return X0
	174 Move W8, [X25+52]
	175 Compare W8, 0
	176 JumpIfEqual {110}
	177 Move X0, X20
	178 Call ProbeReferenceVolume.get_enableScenarioBlending, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {145}
	183 Move X0, [X21+24]
	184 Compare X0, 0
	185 JumpIfEqual {200}
	186 Move X1, X31
	187 Call BlendingCellInfo.Prioritize, X0
	188 Move W8, 1
	189 Move [X20+644], W8
	190 Move [X21+96], W31
	191 Call 0x1C17F20
	192 Move X0, X21
	193 Call 0x1C17F18
	194 Call 0x1C17F20
	195 Call 0x1C17F20
	196 Call 0x1C17F20
	197 Call 0x1C17F20
	198 Call 0x1C17F20
	199 Call 0x1C17F20
	200 Call 0x1C17F20
	201 Move X20, X0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X0, X20
	204 Call 0x3EB2AD0
	205 Move X21, [X0]
	206 Call 0x3EB2AE0
	207 Move X21, X31
	208 Move X20, X0
	209 Move X0, X19
	210 Move X1, X31
	211 Move X2, X31
	212 Call IntPtr.op_Inequality, X0, X1
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {220}
	217 Move X0, X19
	218 Move X1, X31
	219 Call ProfilerUnsafeUtility.EndSample, X0
	220 Compare X21, 0
	221 JumpIfNotEqual {224}
	222 Move X0, X20
	223 Call 0x1D2D690
	224 Move X0, X21
	225 Call 0x1C17F18
	226 Call 0x1991590

Method: System.Void UpdateCellIndex(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo)

Disassembly:
	0x039BF6B4 ADRP X0, 0x793000
	0x039BF6B8 LDR X0, [X0 + 0x750]
	0x039BF6BC BL 0x1C16CF4
	0x039BF6C0 ADRP X0, 0x793000
	0x039BF6C4 LDR X0, [X0 + 0x758]
	0x039BF6C8 BL 0x1C16CF4
	0x039BF6CC ADRP X0, 0x793000
	0x039BF6D0 LDR X0, [X0 + 0x760]
	0x039BF6D4 BL 0x1C16CF4
	0x039BF6D8 ADRP X0, 0x793000
	0x039BF6DC LDR X0, [X0 + 0x768]
	0x039BF6E0 BL 0x1C16CF4
	0x039BF6E4 ADRP X0, 0x793000
	0x039BF6E8 LDR X0, [X0 + 0x770]
	0x039BF6EC BL 0x1C16CF4
	0x039BF6F0 ADRP X0, 0x793000
	0x039BF6F4 LDR X0, [X0 + 0x778]
	0x039BF6F8 BL 0x1C16CF4
	0x039BF6FC ADRP X0, 0x793000
	0x039BF700 LDR X0, [X0 + 0x780]
	0x039BF704 BL 0x1C16CF4
	0x039BF708 ADRP X0, 0x793000
	0x039BF70C LDR X0, [X0 + 0x788]
	0x039BF710 BL 0x1C16CF4
	0x039BF714 ADRP X0, 0x793000
	0x039BF718 LDR X0, [X0 + 0x790]
	0x039BF71C BL 0x1C16CF4
	0x039BF720 ADRP X0, 0x793000
	0x039BF724 LDR X0, [X0 + 0x798]
	0x039BF728 BL 0x1C16CF4
	0x039BF72C ADRP X0, 0x793000
	0x039BF730 LDR X0, [X0 + 0x7A0]
	0x039BF734 BL 0x1C16CF4
	0x039BF738 ADRP X0, 0x793000
	0x039BF73C LDR X0, [X0 + 0x7A8]
	0x039BF740 BL 0x1C16CF4
	0x039BF744 ADRP X0, 0x793000
	0x039BF748 LDR X0, [X0 + 0x7B0]
	0x039BF74C BL 0x1C16CF4
	0x039BF750 ADRP X0, 0x793000
	0x039BF754 LDR X0, [X0 + 0x7B8]
	0x039BF758 BL 0x1C16CF4
	0x039BF75C ADRP X0, 0x793000
	0x039BF760 LDR X0, [X0 + 0x7C0]
	0x039BF764 BL 0x1C16CF4
	0x039BF768 ADRP X0, 0x793000
	0x039BF76C LDR X0, [X0 + 0x7C8]
	0x039BF770 BL 0x1C16CF4
	0x039BF774 ADRP X0, 0x793000
	0x039BF778 LDR X0, [X0 + 0x7D0]
	0x039BF77C BL 0x1C16CF4
	0x039BF780 ADRP X0, 0x793000
	0x039BF784 LDR X0, [X0 + 0x7D8]
	0x039BF788 BL 0x1C16CF4
	0x039BF78C ADRP X0, 0x793000
	0x039BF790 LDR X0, [X0 + 0x7E0]
	0x039BF794 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X20
	005 Move [X31+280], X19
	006 Compare X1, 0
	007 JumpIfEqual {79}
	008 Move W8, 1
	009 Move [X1+96], W8
	010 Move [X0+288], W8
	011 Move X19, X1
	012 Move X1, [X1+16]
	013 Move X20, X0
	014 Compare X1, 0
	015 JumpIfEqual {79}
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 NotImplemented "Instruction LDUR not yet implemented."
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Move X2, [X1+64]
	020 Move X3, [X1+72]
	021 Move [X31+13], V0
	022 Move [X31+224], V2
	023 Move [X31+232], V1
	024 Move X8, [X20+56]
	025 Compare X8, 0
	026 JumpIfEqual {79}
	027 Move X0, [X20+64]
	028 Move X4, [X19+32]
	029 Move W5, [X20+236]
	030 Move V0, [X31+208]
	031 Move V1, [X31+224]
	032 Move V2, [X31+15]
	033 Move W6, [X8+88]
	034 Move W7, [X8+92]
	035 Move [X31+160], V0
	036 Move [X31+168], V1
	037 Move [X31+12], V2
	038 Compare X0, 0
	039 JumpIfEqual {79}
	040 Move V0, [X31+160]
	041 Move V1, [X31+176]
	042 Move V2, [X31+12]
	043 Add X8, X31, 112
	044 Move [X31], X8
	045 Move [X31+112], V0
	046 Move [X31+120], V1
	047 Move [X31+9], V2
	048 Call ProbeBrickIndex.AddBricks, X0, X1, X2, X3, X4, X5, X6, X7
	049 Move V1, [X31+224]
	050 Move V0, [X31+240]
	051 Move V2, [X31+13]
	052 Move W1, [X19+40]
	053 Move [X19+64], V1
	054 Move [X19+72], V0
	055 Move [X19+3], V2
	056 Move X0, [X20+72]
	057 Move V0, [X31+208]
	058 Move V1, [X31+224]
	059 Move V2, [X31+15]
	060 Move [X31+64], V0
	061 Move [X31+72], V1
	062 Move [X31+6], V2
	063 Compare X0, 0
	064 JumpIfEqual {79}
	065 Move V0, [X31+64]
	066 Move V1, [X31+80]
	067 Move V2, [X31+6]
	068 Add X2, X31, 16
	069 Move [X31+16], V0
	070 Move [X31+24], V1
	071 Move [X31+3], V2
	072 Call ProbeCellIndices.UpdateCell, X0, X1, X2
	073 Move X20, [X31+272]
	074 Move X19, [X31+280]
	075 Move X29, [X31+256]
	076 Move X30, [X31+264]
	077 Add X31, X31, 288
	078 Return 
	079 Call 0x1C17F20

Method: System.Void ReleaseBricks(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo)

Disassembly:
	0x039BB830 BL 0x1C16CF4
	0x039BB834 ADRP X0, 0x797000
	0x039BB838 LDR X0, [X0 + 0x498]
	0x039BB83C BL 0x1C16CF4
	0x039BB840 ADRP X0, 0x797000
	0x039BB844 LDR X0, [X0 + 0x4A0]
	0x039BB848 BL 0x1C16CF4
	0x039BB84C ADRP X0, 0x797000
	0x039BB850 LDR X0, [X0 + 0x4B8]
	0x039BB854 BL 0x1C16CF4
	0x039BB858 ADRP X0, 0x797000
	0x039BB85C LDR X0, [X0 + 0x4C0]
	0x039BB860 BL 0x1C16CF4
	0x039BB864 MOVZ W8, 0x1
	0x039BB868 STRB W8, [X21 + 0xC92]
	0x039BB86C STP X31, X31, [X31 + 0x20]
	0x039BB870 STR X31, [X31 + 0x30]
	0x039BB874 CBZ X20, 0x39BBE34
	0x039BB878 LDR X0, [X19 + 0x128]
	0x039BB87C CBZ X0, 0x39BBE34
	0x039BB880 ADRP X8, 0x797000
	0x039BB884 LDR X8, [X8 + 0x470]
	0x039BB888 LDR X21, [X20 + 0x78]
	0x039BB88C LDR X2, [X8]
	0x039BB890 MOV X1, X21
	0x039BB894 BL 0x2AA528C
	0x039BB898 TBZ X0, 0x0, 0x39BB8B8
	0x039BB89C LDR X0, [X19 + 0x128]
	0x039BB8A0 CBZ X0, 0x39BBE34
	0x039BB8A4 ADRP X8, 0x797000
	0x039BB8A8 LDR X8, [X8 + 0x4B0]
	0x039BB8AC MOV X1, X21
	0x039BB8B0 LDR X2, [X8]
	0x039BB8B4 BL 0x2AA64F8
	0x039BB8B8 LDR X2, [X19 + 0x138]
	0x039BB8BC MOV X0, X19
	0x039BB8C0 MOV X1, X20
	0x039BB8C4 BL 0x39BB5A0
	0x039BB8C8 TBZ X0, 0x0, 0x39BBB50
	0x039BB8CC LDR X2, [X19 + 0x128]
	0x039BB8D0 MOV X0, X19
	0x039BB8D4 MOV X1, X20
	0x039BB8D8 BL 0x39BB5A0
	0x039BB8DC TBZ X0, 0x0, 0x39BBB74
	0x039BB8E0 LDR X0, [X19 + 0x128]
	0x039BB8E4 CBZ X0, 0x39BBE34
	0x039BB8E8 ADRP X8, 0x797000
	0x039BB8EC LDR X8, [X8 + 0x4A8]
	0x039BB8F0 MOV X1, X21
	0x039BB8F4 MOV X2, X20
	0x039BB8F8 LDR X3, [X8]
	0x039BB8FC BL 0x2AA5098
	0x039BB900 MOVZ W20, 0x1
	0x039BB904 STRB W20, [X19 + 0x140]
	0x039BB908 ADRP X21, 0xA26000
	0x039BB90C LDRB W8, [X21 + 0xCBB]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA27000
	006 Move W8, [X21+3237]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x739000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x798000
	017 Move X0, [X0+968]
	018 Call 0x1C17CF4
	019 Move X0, 0x798000
	020 Move X0, [X0+208]
	021 Call 0x1C17CF4
	022 Move X0, 0x798000
	023 Move X0, [X0+976]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3237], W8
	027 Compare X19, 0
	028 JumpIfEqual {74}
	029 Move X8, [X19+32]
	030 Compare X8, 0
	031 JumpIfEqual {74}
	032 Move W8, [X8+24]
	033 Compare W8, 0
	034 JumpIfEqual {57}
	035 Move X0, [X20+64]
	036 Compare X0, 0
	037 JumpIfEqual {74}
	038 Move X1, X19
	039 Call ProbeBrickIndex.RemoveBricks, X0, X1
	040 Move X0, [X20+56]
	041 Compare X0, 0
	042 JumpIfEqual {74}
	043 Move X1, [X19+32]
	044 Call ProbeBrickPool.Deallocate, X0, X1
	045 Move X8, [X19+32]
	046 Compare X8, 0
	047 JumpIfEqual {74}
	048 Move W9, [X8+28]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Add W9, W9, 1
	052 Move [X8+24], W31
	053 Move [X8+28], W9
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move X8, 0x739000
	058 Move X8, [X8+2600]
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, 0x798000
	065 Move X8, [X8+976]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X1, X31
	069 Move X0, [X8]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Debug.Log, X0
	073 Return 
	074 Call 0x1C17F20

Method: System.Void UpdateConstantBuffer(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.ProbeVolumeShadingParameters parameters)

Disassembly:
	0x039BF798 ADRP X0, 0x793000
	0x039BF79C LDR X0, [X0 + 0x7E8]
	0x039BF7A0 BL 0x1C16CF4
	0x039BF7A4 ADRP X0, 0x793000
	0x039BF7A8 LDR X0, [X0 + 0x7F0]
	0x039BF7AC BL 0x1C16CF4
	0x039BF7B0 ADRP X0, 0x793000
	0x039BF7B4 LDR X0, [X0 + 0x7F8]
	0x039BF7B8 BL 0x1C16CF4
	0x039BF7BC ADRP X0, 0x793000
	0x039BF7C0 LDR X0, [X0 + 0x800]
	0x039BF7C4 BL 0x1C16CF4
	0x039BF7C8 ADRP X0, 0x793000
	0x039BF7CC LDR X0, [X0 + 0x808]
	0x039BF7D0 BL 0x1C16CF4
	0x039BF7D4 ADRP X0, 0x793000
	0x039BF7D8 LDR X0, [X0 + 0x810]
	0x039BF7DC BL 0x1C16CF4
	0x039BF7E0 ADRP X0, 0x793000
	0x039BF7E4 LDR X0, [X0 + 0x818]
	0x039BF7E8 BL 0x1C16CF4
	0x039BF7EC ADRP X0, 0x793000
	0x039BF7F0 LDR X0, [X0 + 0x820]
	0x039BF7F4 BL 0x1C16CF4
	0x039BF7F8 ADRP X0, 0x793000
	0x039BF7FC LDR X0, [X0 + 0x828]
	0x039BF800 BL 0x1C16CF4
	0x039BF804 ADRP X0, 0x793000
	0x039BF808 LDR X0, [X0 + 0x830]
	0x039BF80C BL 0x1C16CF4
	0x039BF810 ADRP X0, 0x793000
	0x039BF814 LDR X0, [X0 + 0x838]
	0x039BF818 BL 0x1C16CF4
	0x039BF81C ADRP X0, 0x793000
	0x039BF820 LDR X0, [X0 + 0x840]
	0x039BF824 BL 0x1C16CF4
	0x039BF828 ADRP X0, 0x793000
	0x039BF82C LDR X0, [X0 + 0x848]
	0x039BF830 BL 0x1C16CF4
	0x039BF834 ADRP X0, 0x793000
	0x039BF838 LDR X0, [X0 + 0x850]
	0x039BF83C BL 0x1C16CF4
	0x039BF840 ADRP X0, 0x793000
	0x039BF844 LDR X0, [X0 + 0x858]
	0x039BF848 BL 0x1C16CF4
	0x039BF84C ADRP X0, 0x793000
	0x039BF850 LDR X0, [X0 + 0x860]
	0x039BF854 BL 0x1C16CF4
	0x039BF858 ADRP X0, 0x793000
	0x039BF85C LDR X0, [X0 + 0x868]
	0x039BF860 BL 0x1C16CF4
	0x039BF864 ADRP X0, 0x793000
	0x039BF868 LDR X0, [X0 + 0x870]
	0x039BF86C BL 0x1C16CF4
	0x039BF870 ADRP X0, 0x793000
	0x039BF874 LDR X0, [X0 + 0x660]
	0x039BF878 BL 0x1C16CF4
	0x039BF87C ADRP X0, 0x793000
	0x039BF880 LDR X0, [X0 + 0x518]
	0x039BF884 BL 0x1C16CF4
	0x039BF888 ADRP X0, 0x793000
	0x039BF88C LDR X0, [X0 + 0x878]
	0x039BF890 BL 0x1C16CF4
	0x039BF894 ADRP X0, 0x793000
	0x039BF898 LDR X0, [X0 + 0x880]
	0x039BF89C BL 0x1C16CF4
	0x039BF8A0 ADRP X0, 0x793000
	0x039BF8A4 LDR X0, [X0 + 0x888]
	0x039BF8A8 BL 0x1C16CF4
	0x039BF8AC ADRP X0, 0x793000
	0x039BF8B0 LDR X0, [X0 + 0x890]
	0x039BF8B4 BL 0x1C16CF4
	0x039BF8B8 ADRP X0, 0x793000
	0x039BF8BC LDR X0, [X0 + 0x898]
	0x039BF8C0 BL 0x1C16CF4
	0x039BF8C4 ADRP X0, 0x793000
	0x039BF8C8 LDR X0, [X0 + 0x8A0]
	0x039BF8CC BL 0x1C16CF4
	0x039BF8D0 ADRP X0, 0x793000
	0x039BF8D4 LDR X0, [X0 + 0x8A8]
	0x039BF8D8 BL 0x1C16CF4
	0x039BF8DC ADRP X0, 0x793000
	0x039BF8E0 LDR X0, [X0 + 0x8B0]
	0x039BF8E4 BL 0x1C16CF4
	0x039BF8E8 ADRP X0, 0x793000
	0x039BF8EC LDR X0, [X0 + 0x8B8]
	0x039BF8F0 BL 0x1C16CF4
	0x039BF8F4 ADRP X0, 0x793000
	0x039BF8F8 LDR X0, [X0 + 0x8C0]
	0x039BF8FC BL 0x1C16CF4
	0x039BF900 ADRP X0, 0x793000
	0x039BF904 LDR X0, [X0 + 0x8C8]
	0x039BF908 BL 0x1C16CF4
	0x039BF90C ADRP X0, 0x793000
	0x039BF910 LDR X0, [X0 + 0x8D0]
	0x039BF914 BL 0x1C16CF4
	0x039BF918 ADRP X0, 0x793000
	0x039BF91C LDR X0, [X0 + 0x8D8]
	0x039BF920 BL 0x1C16CF4
	0x039BF924 ADRP X0, 0x793000
	0x039BF928 LDR X0, [X0 + 0x8E0]
	0x039BF92C BL 0x1C16CF4
	0x039BF930 ADRP X0, 0x793000
	0x039BF934 LDR X0, [X0 + 0x8E8]
	0x039BF938 BL 0x1C16CF4
	0x039BF93C ADRP X0, 0x793000
	0x039BF940 LDR X0, [X0 + 0x8F0]
	0x039BF944 BL 0x1C16CF4
	0x039BF948 ADRP X0, 0x793000
	0x039BF94C LDR X0, [X0 + 0x8F8]
	0x039BF950 BL 0x1C16CF4
	0x039BF954 ADRP X0, 0x793000
	0x039BF958 LDR X0, [X0 + 0x900]
	0x039BF95C BL 0x1C16CF4
	0x039BF960 ADRP X0, 0x793000
	0x039BF964 LDR X0, [X0 + 0x908]
	0x039BF968 BL 0x1C16CF4
	0x039BF96C ADRP X0, 0x793000
	0x039BF970 LDR X0, [X0 + 0x910]
	0x039BF974 BL 0x1C16CF4
	0x039BF978 ADRP X0, 0x793000
	0x039BF97C LDR X0, [X0 + 0x918]
	0x039BF980 BL 0x1C16CF4
	0x039BF984 MOVZ W8, 0x1
	0x039BF988 STRB W8, [X19 + 0xCA9]
	0x039BF98C LDR X0, [X21]
	0x039BF990 BL 0x1C16F10
	0x039BF994 MOV X1, X31
	0x039BF998 MOV X21, X0
	0x039BF99C BL 0x39C4DEC
	0x039BF9A0 CBZ X21, 0x39C16D4
	0x039BF9A4 STR X23, [X21 + 0x10]
	0x039BF9A8 LDP V0, V1, [X20 + 0x20]
	0x039BF9AC LDP V2, V3, [X20]
	0x039BF9B0 ADRP X8, 0x791000
	0x039BF9B4 LDR X8, [X8 + 0x748]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+160], D10
	003 Move [X31+176], D9
	004 Move [X31+184], D8
	005 Move [X31+192], X29
	006 Move [X31+200], X30
	007 Move [X31+208], X28
	008 Move [X31+216], X27
	009 Move [X31+224], X26
	010 Move [X31+232], X25
	011 Move [X31+240], X24
	012 Move [X31+248], X23
	013 Move [X31+256], X22
	014 Move [X31+264], X21
	015 Move [X31+272], X20
	016 Move [X31+280], X19
	017 Move X22, 0xA23000
	018 Move W8, [X22+3238]
	019 Move X21, X2
	020 Move X19, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x794000
	027 Move X0, [X0+1520]
	028 Call 0x1C17CF4
	029 Move X0, 0x760000
	030 Move X0, [X0+1392]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3238], W8
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], V0
	036 Move [X31+136], V0
	037 Move [X31+96], V0
	038 Move [X31+104], V0
	039 Move [X31+64], V0
	040 Move [X31+72], V0
	041 Move [X31+32], V0
	042 Move [X31+40], V0
	043 Move W8, [X21+8]
	044 Move V8, [X21]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {61}
	049 Move X0, X20
	050 Move W1, W31
	051 Call ProbeReferenceVolume.BrickSize, X0, X1
	052 Move X0, X20
	053 Move W1, W31
	054 Move [X31+16], D0
	055 Call ProbeReferenceVolume.BrickSize, X0, X1
	056 Move V1, [X31+1]
	057 Move V1.S[1], V0.S[0]
	058 Move V0, 0
	059 NotImplemented "Instruction INVALID not yet implemented."
	060 NotImplemented "Instruction INVALID not yet implemented."
	061 Move X25, [X20+72]
	062 Compare X25, 0
	063 JumpIfEqual {172}
	064 Move X26, [X20+56]
	065 Compare X26, 0
	066 JumpIfEqual {172}
	067 Move X24, 0x760000
	068 Move X24, [X24+1392]
	069 Move W8, [X20+52]
	070 Move X27, [X25+40]
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 Move V9, [X26+88]
	073 Subtract W22, W8, 1
	074 NotImplemented "Instruction SCVTF not yet implemented."
	075 Move S0, 3
	076 Move X29, X27
	077 ShiftRight X29, 32
	078 And X29, X29, 0x7FFFFFFF
	079 Move X23, X28
	080 ShiftRight X23, 32
	081 And X23, X23, 0x7FFFFFFF
	082 Call 0x3EB2B50
	083 Move V1, [X20+48]
	084 Move V2, [X25+48]
	085 Move W9, 0x7F800000
	086 NotImplemented "Instruction FCVTZS not yet implemented."
	087 Move W10, 0xCF000000
	088 NotImplemented "Instruction SCVTF not yet implemented."
	089 NotImplemented "Instruction SCVTF not yet implemented."
	090 Move S6, W9
	091 Move V3, [X25+60]
	092 Move V10, [X26+96]
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 NotImplemented "Instruction SCVTF not yet implemented."
	095 Move [X31+64], S4
	096 Move [X31+72], S5
	097 Move S4, W10
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 Move W11, 0x43730000
	100 Move [X31+88], S4
	101 Move [X31+96], S1
	102 NotImplemented "Instruction SCVTF not yet implemented."
	103 Move [X31+80], D8
	104 Move [X31+76], W11
	105 Move [X31+72], S1
	106 Move V1, [X21+12]
	107 NotImplemented "Instruction SCVTF not yet implemented."
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 NotImplemented "Instruction SCVTF not yet implemented."
	110 Move X0, X20
	111 Move W1, W22
	112 Move [X31+48], S0
	113 Move [X31+56], S5
	114 Move [X31+56], S2
	115 Move [X31+64], S1
	116 Call ProbeReferenceVolume.BrickSize, X0, X1
	117 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	118 NotImplemented "Instruction SCVTF not yet implemented."
	119 Move [X31+32], D1
	120 Move [X31+40], S2
	121 Move [X31+48], S0
	122 Move V0, [X21+16]
	123 Move X0, [X24]
	124 Move [X31+112], S0
	125 NotImplemented "Instruction LDUR not yet implemented."
	126 Move V1, [X20+264]
	127 Move V2, [X21+32]
	128 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	129 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	130 NotImplemented "Instruction SCVTF not yet implemented."
	131 Move [X31+116], V0
	132 Move [X31+132], D1
	133 Move [X31+140], S2
	134 Move V0, [X21+20]
	135 Move V1, [X21+24]
	136 Move [X31+108], W31
	137 NotImplemented "Instruction SCVTF not yet implemented."
	138 Move [X31+100], D1
	139 Move [X31+96], S0
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 Move [X31+152], X31
	142 Move [X31+144], D0
	143 Move W8, [X0+224]
	144 Move W20, [X20+352]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X8, 0x794000
	149 Move X8, [X8+1520]
	150 Add X1, X31, 32
	151 Move X0, X19
	152 Move W2, W20
	153 Move X3, [X8]
	154 Call 0x21A6158, X0, X1, X2
	155 Move X20, [X31+272]
	156 Move X19, [X31+280]
	157 Move X22, [X31+256]
	158 Move X21, [X31+264]
	159 Move X24, [X31+240]
	160 Move X23, [X31+248]
	161 Move X26, [X31+224]
	162 Move X25, [X31+232]
	163 Move X28, [X31+208]
	164 Move X27, [X31+216]
	165 Move X29, [X31+192]
	166 Move X30, [X31+200]
	167 Move D9, [X31+176]
	168 Move D8, [X31+184]
	169 Move V10, [X31+160]
	170 Add X31, X31, 288
	171 Return 
	172 Call 0x1C17F20

Method: System.Void CleanupLoadedData()

Disassembly:
	0x039BB374 LDP X30, X23, [X31 + 0x10]
	0x039BB378 ADD X31, X31, 0x40
	0x039BB37C RET
	0x039BB380 SUB X31, X31, 0x50
	0x039BB384 STR X30, [X31 + 0x20]
	0x039BB388 STP X22, X21, [X31 + 0x30]
	0x039BB38C STP X20, X19, [X31 + 0x40]
	0x039BB390 ADRP X20, 0xA26000
	0x039BB394 LDRB W8, [X20 + 0xC90]
	0x039BB398 MOV X19, X0
	0x039BB39C TBNZ X8, 0x0, 0x39BB3E4
	0x039BB3A0 ADRP X0, 0x797000
	0x039BB3A4 LDR X0, [X0 + 0x448]
	0x039BB3A8 BL 0x1C16CF4
	0x039BB3AC ADRP X0, 0x797000
	0x039BB3B0 LDR X0, [X0 + 0x450]
	0x039BB3B4 BL 0x1C16CF4
	0x039BB3B8 ADRP X0, 0x797000
	0x039BB3BC LDR X0, [X0 + 0x458]
	0x039BB3C0 BL 0x1C16CF4
	0x039BB3C4 ADRP X0, 0x797000
	0x039BB3C8 LDR X0, [X0 + 0x460]
	0x039BB3CC BL 0x1C16CF4
	0x039BB3D0 ADRP X0, 0x797000
	0x039BB3D4 LDR X0, [X0 + 0x468]
	0x039BB3D8 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+288], W31
	005 Call ProbeReferenceVolume.UnloadAllCells, X0
	006 Move W8, [X19+321]
	007 Compare W8, 0
	008 JumpIfEqual {28}
	009 Move X0, [X19+64]
	010 Compare X0, 0
	011 JumpIfEqual {34}
	012 Call ProbeBrickIndex.Cleanup, X0
	013 Move X0, [X19+72]
	014 Compare X0, 0
	015 JumpIfEqual {34}
	016 Call ProbeCellIndices.Cleanup, X0
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfEqual {34}
	020 Add X0, X8, 24
	021 Call DataLocation.Cleanup, X0
	022 Move X0, [X19+80]
	023 Compare X0, 0
	024 JumpIfEqual {34}
	025 Call ProbeBrickBlendingPool.Cleanup, X0
	026 Add X0, X19, 152
	027 Call DataLocation.Cleanup, X0
	028 Move [X19+321], W31
	029 Move X0, X19
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Call ProbeReferenceVolume.ClearDebugData, X0
	033 Return 
	034 Call 0x1C17F20

Method: UnityEngine.Rendering.ProbeVolumeDebug get_probeVolumeDebug()

Disassembly:
	0x039BF9B8 STUR V1, [X21 + 0x48]
	0x039BF9BC STUR V0, [X21 + 0x38]

ISIL:
	001 Move X0, [X0+400]
	002 Return X0

Method: UnityEngine.Color[] get_subdivisionDebugColors()

Disassembly:
	0x039BF9C0 STUR V3, [X21 + 0x28]
	0x039BF9C4 STUR V2, [X21 + 0x18]

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void RenderDebug(UnityEngine.Camera camera)

Disassembly:
	0x039BF9C8 LDR X0, [X8]
	0x039BF9CC ADRP X19, 0x791000
	0x039BF9D0 ADRP X22, 0x791000
	0x039BF9D4 LDR X19, [X19 + 0x750]
	0x039BF9D8 LDR X22, [X22 + 0x758]
	0x039BF9DC BL 0x1C16F10
	0x039BF9E0 LDR X1, [X19]
	0x039BF9E4 STR X0, [X31 + 0x18]
	0x039BF9E8 BL 0x301B7C4
	0x039BF9EC LDR X0, [X22]
	0x039BF9F0 BL 0x1C16F10
	0x039BF9F4 MOV X1, X31
	0x039BF9F8 MOV X26, X0
	0x039BF9FC BL 0x39ADAE0
	0x039BFA00 CBZ X26, 0x39C16D4
	0x039BFA04 ADRP X8, 0x793000
	0x039BFA08 LDR X8, [X8 + 0x8E0]
	0x039BFA0C ADRP X9, 0x791000
	0x039BFA10 MOV X20, X23
	0x039BFA14 LDR X8, [X8]
	0x039BFA18 LDR X9, [X9 + 0x768]
	0x039BFA1C LDR X23, [X26 + 0x48]
	0x039BFA20 STR X8, [X26 + 0x28]
	0x039BFA24 LDR X0, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {25}
	006 Move X19, X1
	007 Move X20, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call Camera.get_cameraType, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X0, X19
	013 Move X1, X31
	014 Call Camera.get_cameraType, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Move X0, X20
	021 Move X1, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call 0x1C17F20

Method: System.Void InitializeDebug(in UnityEngine.Rendering.ProbeVolumeSystemParameters parameters)

Disassembly:
	0x039BAF80 BL 0x1C16CF4
	0x039BAF84 ADRP X0, 0x798000
	0x039BAF88 LDR X0, [X0 + 0x438]
	0x039BAF8C BL 0x1C16CF4
	0x039BAF90 MOVZ W8, 0x1
	0x039BAF94 STRB W8, [X19 + 0xCA4]
	0x039BAF98 LDR X0, [X24]
	0x039BAF9C MOVZ W1, 0x1
	0x039BAFA0 MOV W2, W31
	0x039BAFA4 MOV W3, W31
	0x039BAFA8 MOV X4, X31
	0x039BAFAC BL 0x3BFE7FC
	0x039BAFB0 MOV X1, X31
	0x039BAFB4 MOV X2, X31
	0x039BAFB8 MOV X19, X0
	0x039BAFBC BL 0x33C5D2C
	0x039BAFC0 TBZ X0, 0x0, 0x39BAFD0
	0x039BAFC4 MOV X0, X19
	0x039BAFC8 MOV X1, X31
	0x039BAFCC BL 0x3BFE970
	0x039BAFD0 CBZ X21, 0x39BB178
	0x039BAFD4 LDR X25, [X21 + 0x10]
	0x039BAFD8 CBZ X25, 0x39BB184
	0x039BAFDC LDR X2, [X21 + 0x20]
	0x039BAFE0 CBZ X2, 0x39BB188
	0x039BAFE4 LDR W10, [X2 + 0x1C]
	0x039BAFE8 LDR W9, [X25 + 0x48]
	0x039BAFEC LDR W8, [X20 + 0xEC]
	0x039BAFF0 ADD W10, W10, 0x1
	0x039BAFF4 STP W31, W10, [X2 + 0x18]
	0x039BAFF8 LDR X0, [X20 + 0x38]
	0x039BAFFC CBZ X0, 0x39BB18C
	0x039BB000 ADD W9, W9, W8
	0x039BB004 SUB W9, W9, 0x1
	0x039BB008 SDIV W1, W9, W8
	0x039BB00C AND W3, W23, 0x1
	0x039BB010 BL 0x39B7480
	0x039BB014 TBZ X0, 0x0, 0x39BB0CC
	0x039BB018 MOV X0, X20
	0x039BB01C BL 0x39B99F4
	0x039BB020 TBZ X0, 0x0, 0x39BB040
	0x039BB024 LDR X0, [X20 + 0x260]
	0x039BB028 CBZ X0, 0x39BB194
	0x039BB02C ADRP X8, 0x797000
	0x039BB030 LDR X8, [X8 + 0x440]
	0x039BB034 ADD X1, X21, 0x18
	0x039BB038 LDR X2, [X8]
	0x039BB03C BL 0x2B3FC18
	0x039BB040 LDP V1, V0, [X22 + 0x10]
	0x039BB044 LDR V2, [X22]
	0x039BB048 STUR V0, [X21 + 0x84]
	0x039BB04C STUR V1, [X21 + 0x74]
	0x039BB050 STUR V2, [X21 + 0x64]
	0x039BB054 MOV X0, X20
	0x039BB058 BL 0x39B99F4
	0x039BB05C TBZ X0, 0x0, 0x39BB074
	0x039BB060 LDR X8, [X20 + 0xF0]
	0x039BB064 CBZ X8, 0x39BB198
	0x039BB068 LDR V0, [X8 + 0x80]
	0x039BB06C FCMP S0, 0x0
	0x039BB070 B.NE 0x39BB144
	0x039BB074 LDR X24, [X21 + 0x20]
	0x039BB078 CBZ X24, 0x39BB0C8
	0x039BB07C MOV W22, W31
	0x039BB080 ADD X23, X25, 0xA0
	0x039BB084 LDR W8, [X24 + 0x18]
	0x039BB088 CMP W22, W8
	0x039BB08C B.GE 0x39BB0D8
	0x039BB090 ADD X0, X31, 0x0
	0x039BB094 MOVZ W2, 0x70
	0x039BB098 MOV X1, X23
	0x039BB09C BL 0x3EB1AC0
	0x039BB0A0 LDP X3, X4, [X25 + 0x50]
	0x039BB0A4 ADD X2, X31, 0x0
	0x039BB0A8 MOVN W6, 0x0
	0x039BB0AC MOV X0, X20
	0x039BB0B0 MOV X1, X24
	0x039BB0B4 MOV W5, W22
	0x039BB0B8 BL 0x39BDC80
	0x039BB0BC LDR X24, [X21 + 0x20]
	0x039BB0C0 ADD W22, W22, 0x1
	0x039BB0C4 CBNZ X24, 0x39BB084
	0x039BB0C8 BL 0x1C16F20
	0x039BB0CC MOV X21, X31
	0x039BB0D0 MOV W22, W31
	0x039BB0D4 B 0x39BB104
	0x039BB0D8 MOV X0, X20
	0x039BB0DC MOV X1, X21
	0x039BB0E0 BL 0x39BE6B4
	0x039BB0E4 LDR X8, [X21 + 0x18]
	0x039BB0E8 CBZ X8, 0x39BB190
	0x039BB0EC STR W31, [X8 + 0x24]
	0x039BB0F0 MOVZ W22, 0x1
	0x039BB0F4 STRB W22, [X21 + 0x2C]
	0x039BB0F8 MOV X0, X20
	0x039BB0FC BL 0x39BA910
	0x039BB100 MOV X21, X31
	0x039BB104 MOV X0, X19
	0x039BB108 MOV X1, X31
	0x039BB10C MOV X2, X31
	0x039BB110 BL 0x33C5D2C
	0x039BB114 TBZ X0, 0x0, 0x39BB124
	0x039BB118 MOV X0, X19
	0x039BB11C MOV X1, X31
	0x039BB120 BL 0x3BFEA0C
	0x039BB124 CBNZ X21, 0x39BB17C
	0x039BB128 MOV W0, W22
	0x039BB12C LDP X20, X19, [X31 + 0xA0]
	0x039BB130 LDP X22, X21, [X31 + 0x90]
	0x039BB134 LDP X24, X23, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0xA28000
	007 Move W8, [X21+3239]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x762000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3239], W8
	019 Move W8, [X20+60]
	020 Compare W8, 0
	021 JumpIfEqual {109}
	022 Move X8, [X20+8]
	023 Move X9, 0x762000
	024 Move X9, [X9+2296]
	025 Move [X19+424], X8
	026 Move X21, [X20+16]
	027 Move X0, [X9]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Call CoreUtils.CreateEngineMaterial, X0
	035 Move [X19+432], X0
	036 Compare X0, 0
	037 JumpIfEqual {126}
	038 Move W1, 1
	039 Move X2, X31
	040 Call Material.set_enableInstancing, X0, X1
	041 Move X8, [X20+24]
	042 Move X1, X31
	043 Move [X19+440], X8
	044 Move X0, [X20+32]
	045 Call CoreUtils.CreateEngineMaterial, X0
	046 Move [X19+448], X0
	047 Compare X0, 0
	048 JumpIfEqual {126}
	049 Move W1, 1
	050 Move X2, X31
	051 Call Material.set_enableInstancing, X0, X1
	052 Move X8, [X19+408]
	053 Compare X8, 0
	054 JumpIfEqual {126}
	055 Move W9, [X8+24]
	056 Compare W9, 0
	057 JumpIfEqual {127}
	058 Move X9, -49074176
	059 Move V0, [X9+8]
	060 Move [X8+2], V0
	061 Move X8, [X19+408]
	062 Compare X8, 0
	063 JumpIfEqual {126}
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, -49078272
	067 Move V0, [X9+243]
	068 Move [X8+3], V0
	069 Move X8, [X19+408]
	070 Compare X8, 0
	071 JumpIfEqual {126}
	072 Move W9, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X9, -49086464
	075 Move V0, [X9+188]
	076 Move [X8+4], V0
	077 Move X8, [X19+408]
	078 Compare X8, 0
	079 JumpIfEqual {126}
	080 Move W9, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X9, -49074176
	083 Move V0, [X9+31]
	084 Move [X8+5], V0
	085 Move X8, [X19+408]
	086 Compare X8, 0
	087 JumpIfEqual {126}
	088 Move W9, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, -49086464
	091 Move V0, [X9+96]
	092 Move [X8+6], V0
	093 Move X8, [X19+408]
	094 Compare X8, 0
	095 JumpIfEqual {126}
	096 Move W9, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, -49082368
	099 Move V0, [X9+213]
	100 Move [X8+7], V0
	101 Move X8, [X19+408]
	102 Compare X8, 0
	103 JumpIfEqual {126}
	104 Move W9, [X8+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X9, -49086464
	107 Move V0, [X9+169]
	108 Move [X8+8], V0
	109 Move V1, [X20+32]
	110 Move V0, [X20+48]
	111 Move V3, [X20]
	112 Move V2, [X20+16]
	113 Add X1, X31, 0
	114 Move X0, X19
	115 Move [X31+32], V1
	116 Move [X31+40], V0
	117 Move [X31], V3
	118 Move [X31+8], V2
	119 Call ProbeReferenceVolume.RegisterDebug, X0, X1
	120 Move X20, [X31+80]
	121 Move X19, [X31+88]
	122 Move X30, [X31+64]
	123 Move X21, [X31+72]
	124 Add X31, X31, 96
	125 Return 
	126 Call 0x1C17F20
	127 Call 0x1C17F28

Method: System.Void CleanupDebug()

Disassembly:
	0x039BB478 LDR W12, [X19 + 0x100]
	0x039BB47C UBFM X13, X10, 0x20, 0x3F
	0x039BB480 UBFM X14, X11, 0x20, 0x3F
	0x039BB484 CMP W10, W11
	0x039BB488 CSEL X10, X10, X11, LT
	0x039BB48C CMP W13, W14
	0x039BB490 CSEL X11, X13, X14, LT
	0x039BB494 CMP W9, W12
	0x039BB498 CSEL W9, W9, W12, LT
	0x039BB49C BFM X10, X11, 0x20, 0x1F
	0x039BB4A0 STR X10, [X19 + 0xF8]
	0x039BB4A4 STR W9, [X19 + 0x100]
	0x039BB4A8 LDR X8, [X8 + 0x10]
	0x039BB4AC CBZ X8, 0x39BB518
	0x039BB4B0 LDR X9, [X8 + 0x10]
	0x039BB4B4 LDR X10, [X22]
	0x039BB4B8 LDR W8, [X8 + 0x18]
	0x039BB4BC LDR W11, [X19 + 0x10C]
	0x039BB4C0 UBFM X12, X9, 0x20, 0x3F
	0x039BB4C4 UBFM X13, X10, 0x20, 0x3F
	0x039BB4C8 CMP W9, W10
	0x039BB4CC CSEL X9, X9, X10, GT
	0x039BB4D0 CMP W12, W13
	0x039BB4D4 CSEL X10, X12, X13, GT
	0x039BB4D8 CMP W8, W11
	0x039BB4DC CSEL W8, W8, W11, GT
	0x039BB4E0 BFM X9, X10, 0x20, 0x1F
	0x039BB4E4 STR X9, [X22]
	0x039BB4E8 STR W8, [X19 + 0x10C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA27000
	006 Move X20, 0x761000
	007 Move W8, [X21+3240]
	008 Move X20, [X20+2296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x761000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3240], W8
	019 Move W1, 1
	020 Move X0, X19
	021 Call ProbeReferenceVolume.UnregisterDebug, X0, X1
	022 Move X0, [X20]
	023 Move X20, [X19+432]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call CoreUtils.Destroy, X0
	031 Move X0, [X19+448]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call CoreUtils.Destroy, X0
	038 Return 

Method: System.Void DebugCellIndexChanged(UnityEngine.Rendering.DebugUI/Field`1<T> field, T value)

Disassembly:
	0x022366C4 B.EQ 0x22366E4
	0x022366C8 SUBS X9, X9, 0x1

ISIL:
	001 Move X1, X31
	002 Call ProbeReferenceVolume.ClearDebugData, X0
	003 Return 

Method: System.Void RegisterDebug(UnityEngine.Rendering.ProbeVolumeSystemParameters parameters)

Disassembly:
	0x039C03F4 LDR X8, [X8]
	0x039C03F8 STR X8, [X26 + 0x28]
	0x039C03FC LDR X0, [X19]
	0x039C0400 ADRP X19, 0x792000
	0x039C0404 LDR X19, [X19 + 0x7C0]
	0x039C0408 LDR X20, [X20 + 0x7C8]
	0x039C040C BL 0x1C16F10
	0x039C0410 LDR X2, [X19]
	0x039C0414 MOV X1, X21
	0x039C0418 MOV X3, X31
	0x039C041C MOV X27, X0
	0x039C0420 BL 0x2D27710
	0x039C0424 STR X27, [X26 + 0x48]
	0x039C0428 LDR X0, [X22]
	0x039C042C BL 0x1C16F10
	0x039C0430 LDR X2, [X20]
	0x039C0434 MOV X1, X21
	0x039C0438 MOV X3, X31
	0x039C043C MOV X27, X0
	0x039C0440 BL 0x2983F04
	0x039C0444 STR X27, [X26 + 0x50]
	0x039C0448 LDR X0, [X23]
	0x039C044C LDR W8, [X0 + 0xE0]
	0x039C0450 CBNZ W8, 0x39C045C
	0x039C0454 BL 0x1C16DFC
	0x039C0458 LDR X0, [X23]
	0x039C045C LDR X8, [X0 + 0xB8]
	0x039C0460 LDR X22, [X31 + 0x18]
	0x039C0464 LDR X27, [X8 + 0x40]
	0x039C0468 CBNZ X27, 0x39C04C4
	0x039C046C LDR W8, [X0 + 0xE0]
	0x039C0470 CBNZ W8, 0x39C047C
	0x039C0474 BL 0x1C16DFC
	0x039C0478 LDR X0, [X23]
	0x039C047C LDR X8, [X0 + 0xB8]
	0x039C0480 LDR X28, [X8]
	0x039C0484 ADRP X8, 0x779000
	0x039C0488 LDR X8, [X8 + 0x6A0]
	0x039C048C LDR X0, [X8]
	0x039C0490 BL 0x1C16F10
	0x039C0494 ADRP X8, 0x792000
	0x039C0498 LDR X8, [X8 + 0x6C8]
	0x039C049C MOV X1, X28
	0x039C04A0 MOV X3, X31
	0x039C04A4 MOV X27, X0
	0x039C04A8 LDR X2, [X8]
	0x039C04AC BL 0x2D27710
	0x039C04B0 LDR X0, [X23]
	0x039C04B4 ADRP X28, 0x790000
	0x039C04B8 LDR X8, [X0 + 0xB8]
	0x039C04BC STR X27, [X8 + 0x40]
	0x039C04C0 LDR X28, [X28 + 0x7A0]
	0x039C04C4 STR X27, [X26 + 0x60]
	0x039C04C8 LDR W8, [X0 + 0xE0]
	0x039C04CC CBNZ W8, 0x39C04D8
	0x039C04D0 BL 0x1C16DFC
	0x039C04D4 LDR X0, [X23]
	0x039C04D8 LDR X8, [X0 + 0xB8]
	0x039C04DC LDR X27, [X8 + 0x48]
	0x039C04E0 CBNZ X27, 0x39C053C
	0x039C04E4 LDR W8, [X0 + 0xE0]
	0x039C04E8 CBNZ W8, 0x39C04F4
	0x039C04EC BL 0x1C16DFC
	0x039C04F0 LDR X0, [X23]
	0x039C04F4 LDR X8, [X0 + 0xB8]
	0x039C04F8 LDR X28, [X8]
	0x039C04FC ADRP X8, 0x779000
	0x039C0500 LDR X8, [X8 + 0x6A0]
	0x039C0504 LDR X0, [X8]
	0x039C0508 BL 0x1C16F10
	0x039C050C ADRP X8, 0x792000
	0x039C0510 LDR X8, [X8 + 0x6D0]
	0x039C0514 MOV X1, X28
	0x039C0518 MOV X3, X31
	0x039C051C MOV X27, X0
	0x039C0520 LDR X2, [X8]
	0x039C0524 BL 0x2D27710
	0x039C0528 LDR X8, [X23]
	0x039C052C ADRP X28, 0x790000
	0x039C0530 LDR X8, [X8 + 0xB8]
	0x039C0534 STR X27, [X8 + 0x48]
	0x039C0538 LDR X28, [X28 + 0x7A0]
	0x039C053C STR X27, [X26 + 0x68]
	0x039C0540 CBZ X25, 0x39C16D4
	0x039C0544 LDR X2, [X28]
	0x039C0548 MOV X0, X25
	0x039C054C MOV X1, X26
	0x039C0550 BL 0x2497EC8
	0x039C0554 LDR X27, [X31 + 0x10]
	0x039C0558 LDR X0, [X27 + 0x48]
	0x039C055C CBZ X0, 0x39C16D4
	0x039C0560 LDR X2, [X28]
	0x039C0564 MOV X1, X24
	0x039C0568 BL 0x2497EC8
	0x039C056C ADRP X8, 0x790000
	0x039C0570 LDR X24, [X27 + 0x48]
	0x039C0574 LDR X8, [X8 + 0x768]
	0x039C0578 LDR X0, [X8]
	0x039C057C BL 0x1C16F10
	0x039C0580 MOV X1, X31
	0x039C0584 MOV X25, X0
	0x039C0588 BL 0x39A2C94
	0x039C058C CBZ X25, 0x39C16D4
	0x039C0590 ADRP X8, 0x792000
	0x039C0594 LDR X8, [X8 + 0x888]
	0x039C0598 ADRP X19, 0x792000
	0x039C059C ADRP X20, 0x792000
	0x039C05A0 LDR X8, [X8]
	0x039C05A4 STR X8, [X25 + 0x28]
	0x039C05A8 ADRP X8, 0x73C000
	0x039C05AC LDR X8, [X8 + 0x940]
	0x039C05B0 LDR X0, [X8]
	0x039C05B4 LDR X19, [X19 + 0x7D0]
	0x039C05B8 LDR X20, [X20 + 0x7D8]
	0x039C05BC BL 0x1C16F10
	0x039C05C0 LDR X2, [X19]
	0x039C05C4 MOV X1, X21
	0x039C05C8 MOV X3, X31
	0x039C05CC MOV X26, X0
	0x039C05D0 BL 0x2D27194
	0x039C05D4 STR X26, [X25 + 0x48]
	0x039C05D8 ADRP X8, 0x733000
	0x039C05DC LDR X8, [X8 + 0xD28]
	0x039C05E0 LDR X0, [X8]
	0x039C05E4 BL 0x1C16F10
	0x039C05E8 LDR X2, [X20]
	0x039C05EC MOV X1, X21
	0x039C05F0 MOV X3, X31
	0x039C05F4 MOV X26, X0
	0x039C05F8 BL 0x29818C8
	0x039C05FC STR X26, [X25 + 0x50]
	0x039C0600 ADRP X8, 0x792000
	0x039C0604 LDR X8, [X8 + 0x668]
	0x039C0608 LDR X0, [X8]
	0x039C060C BL 0x1C16F10
	0x039C0610 ADRP X8, 0x792000
	0x039C0614 LDR X8, [X8 + 0x868]
	0x039C0618 MOV X1, X21
	0x039C061C MOV X3, X31
	0x039C0620 MOV X26, X0
	0x039C0624 LDR X2, [X8]
	0x039C0628 BL 0x2A76438
	0x039C062C STR X26, [X25 + 0x58]
	0x039C0630 CBZ X24, 0x39C16D4
	0x039C0634 LDR X2, [X28]
	0x039C0638 MOV X0, X24
	0x039C063C MOV X1, X25
	0x039C0640 BL 0x2497EC8
	0x039C0644 LDR X8, [X29 + 0x190]
	0x039C0648 CBZ X8, 0x39C16D4
	0x039C064C LDRB W8, [X8 + 0x38]
	0x039C0650 CBZ W8, 0x39C0814
	0x039C0654 ADRP X8, 0x792000
	0x039C0658 LDR X8, [X8 + 0x688]
	0x039C065C LDR X0, [X8]
	0x039C0660 BL 0x1C16F10
	0x039C0664 MOV X1, X31
	0x039C0668 MOV X24, X0
	0x039C066C BL 0x39AEC64
	0x039C0670 CBZ X24, 0x39C16D4
	0x039C0674 ADRP X8, 0x792000
	0x039C0678 LDR X8, [X8 + 0x8D0]
	0x039C067C ADRP X19, 0x792000
	0x039C0680 ADRP X20, 0x792000
	0x039C0684 LDR X8, [X8]
	0x039C0688 STR X8, [X24 + 0x28]
	0x039C068C ADRP X8, 0x792000
	0x039C0690 LDR X8, [X8 + 0x690]
	0x039C0694 LDR X0, [X8]
	0x039C0698 LDR X19, [X19 + 0x7E8]
	0x039C069C LDR X20, [X20 + 0x7F0]
	0x039C06A0 BL 0x1C16F10
	0x039C06A4 LDR X2, [X19]
	0x039C06A8 MOV X1, X21
	0x039C06AC MOV X3, X31
	0x039C06B0 MOV X25, X0
	0x039C06B4 BL 0x2D27F24
	0x039C06B8 STR X25, [X24 + 0x48]
	0x039C06BC ADRP X8, 0x735000
	0x039C06C0 LDR X8, [X8 + 0x5B0]
	0x039C06C4 LDR X0, [X8]
	0x039C06C8 BL 0x1C16F10
	0x039C06CC LDR X2, [X20]
	0x039C06D0 MOV X1, X21
	0x039C06D4 MOV X3, X31
	0x039C06D8 MOV X25, X0
	0x039C06DC BL 0x2A6DA40
	0x039C06E0 STR X25, [X24 + 0x50]
	0x039C06E4 LDR X0, [X23]
	0x039C06E8 LDR W8, [X0 + 0xE0]
	0x039C06EC CBNZ W8, 0x39C06F8
	0x039C06F0 BL 0x1C16DFC
	0x039C06F4 LDR X0, [X23]
	0x039C06F8 LDR X8, [X0 + 0xB8]
	0x039C06FC LDR X25, [X8 + 0x50]
	0x039C0700 CBNZ X25, 0x39C0754
	0x039C0704 LDR W8, [X0 + 0xE0]
	0x039C0708 CBNZ W8, 0x39C0714
	0x039C070C BL 0x1C16DFC
	0x039C0710 LDR X0, [X23]
	0x039C0714 LDR X8, [X0 + 0xB8]
	0x039C0718 LDR X26, [X8]
	0x039C071C ADRP X8, 0x792000
	0x039C0720 LDR X8, [X8 + 0x690]
	0x039C0724 LDR X0, [X8]
	0x039C0728 BL 0x1C16F10
	0x039C072C ADRP X8, 0x792000
	0x039C0730 LDR X8, [X8 + 0x6D8]
	0x039C0734 MOV X1, X26
	0x039C0738 MOV X3, X31
	0x039C073C MOV X25, X0
	0x039C0740 LDR X2, [X8]
	0x039C0744 BL 0x2D27F24
	0x039C0748 LDR X0, [X23]
	0x039C074C LDR X8, [X0 + 0xB8]
	0x039C0750 STR X25, [X8 + 0x50]
	0x039C0754 STR X25, [X24 + 0x60]
	0x039C0758 LDR W8, [X0 + 0xE0]
	0x039C075C CBNZ W8, 0x39C0768
	0x039C0760 BL 0x1C16DFC
	0x039C0764 LDR X0, [X23]
	0x039C0768 LDR X8, [X0 + 0xB8]
	0x039C076C LDR X25, [X8 + 0x58]
	0x039C0770 CBNZ X25, 0x39C07C4
	0x039C0774 LDR W8, [X0 + 0xE0]
	0x039C0778 CBNZ W8, 0x39C0784
	0x039C077C BL 0x1C16DFC
	0x039C0780 LDR X0, [X23]
	0x039C0784 LDR X8, [X0 + 0xB8]
	0x039C0788 LDR X26, [X8]
	0x039C078C ADRP X8, 0x792000
	0x039C0790 LDR X8, [X8 + 0x690]
	0x039C0794 LDR X0, [X8]
	0x039C0798 BL 0x1C16F10
	0x039C079C ADRP X8, 0x792000
	0x039C07A0 LDR X8, [X8 + 0x6E0]
	0x039C07A4 MOV X1, X26
	0x039C07A8 MOV X3, X31
	0x039C07AC MOV X25, X0
	0x039C07B0 LDR X2, [X8]
	0x039C07B4 BL 0x2D27F24
	0x039C07B8 LDR X8, [X23]
	0x039C07BC LDR X8, [X8 + 0xB8]
	0x039C07C0 STR X25, [X8 + 0x58]
	0x039C07C4 STR X25, [X24 + 0x68]
	0x039C07C8 ADRP X8, 0x790000
	0x039C07CC LDR X25, [X27 + 0x48]
	0x039C07D0 LDR X8, [X8 + 0x758]
	0x039C07D4 LDR X0, [X8]
	0x039C07D8 BL 0x1C16F10
	0x039C07DC MOV X1, X31
	0x039C07E0 MOV X26, X0
	0x039C07E4 BL 0x39ADAE0
	0x039C07E8 CBZ X26, 0x39C16D4
	0x039C07EC LDR X0, [X26 + 0x48]
	0x039C07F0 CBZ X0, 0x39C16D4
	0x039C07F4 LDR X2, [X28]
	0x039C07F8 MOV X1, X24
	0x039C07FC BL 0x2497EC8
	0x039C0800 CBZ X25, 0x39C16D4
	0x039C0804 LDR X2, [X28]
	0x039C0808 MOV X0, X25
	0x039C080C MOV X1, X26
	0x039C0810 BL 0x2497EC8
	0x039C0814 ADRP X8, 0x792000
	0x039C0818 LDR X24, [X27 + 0x48]
	0x039C081C LDR X8, [X8 + 0x688]
	0x039C0820 LDR X0, [X8]
	0x039C0824 BL 0x1C16F10
	0x039C0828 MOV X1, X31
	0x039C082C MOV X25, X0
	0x039C0830 BL 0x39AEC64
	0x039C0834 CBZ X25, 0x39C16D4
	0x039C0838 ADRP X8, 0x792000
	0x039C083C LDR X8, [X8 + 0x8D8]
	0x039C0840 ADRP X19, 0x792000
	0x039C0844 ADRP X20, 0x792000
	0x039C0848 LDR X8, [X8]
	0x039C084C STR X8, [X25 + 0x28]
	0x039C0850 ADRP X8, 0x792000
	0x039C0854 LDR X8, [X8 + 0x690]
	0x039C0858 LDR X0, [X8]
	0x039C085C LDR X19, [X19 + 0x7F8]
	0x039C0860 LDR X20, [X20 + 0x800]
	0x039C0864 BL 0x1C16F10
	0x039C0868 LDR X2, [X19]
	0x039C086C MOV X1, X21
	0x039C0870 MOV X3, X31
	0x039C0874 MOV X26, X0
	0x039C0878 BL 0x2D27F24
	0x039C087C STR X26, [X25 + 0x48]
	0x039C0880 ADRP X8, 0x735000
	0x039C0884 LDR X8, [X8 + 0x5B0]
	0x039C0888 LDR X0, [X8]
	0x039C088C BL 0x1C16F10
	0x039C0890 LDR X2, [X20]
	0x039C0894 MOV X1, X21
	0x039C0898 MOV X3, X31
	0x039C089C MOV X26, X0
	0x039C08A0 BL 0x2A6DA40
	0x039C08A4 STR X26, [X25 + 0x50]
	0x039C08A8 LDR X0, [X23]
	0x039C08AC LDR W8, [X0 + 0xE0]
	0x039C08B0 CBNZ W8, 0x39C08BC
	0x039C08B4 BL 0x1C16DFC
	0x039C08B8 LDR X0, [X23]
	0x039C08BC LDR X8, [X0 + 0xB8]
	0x039C08C0 LDR X26, [X8 + 0x60]
	0x039C08C4 CBNZ X26, 0x39C0918
	0x039C08C8 LDR W8, [X0 + 0xE0]
	0x039C08CC CBNZ W8, 0x39C08D8
	0x039C08D0 BL 0x1C16DFC
	0x039C08D4 LDR X0, [X23]
	0x039C08D8 LDR X8, [X0 + 0xB8]
	0x039C08DC LDR X27, [X8]
	0x039C08E0 ADRP X8, 0x792000
	0x039C08E4 LDR X8, [X8 + 0x690]
	0x039C08E8 LDR X0, [X8]
	0x039C08EC BL 0x1C16F10
	0x039C08F0 ADRP X8, 0x792000
	0x039C08F4 LDR X8, [X8 + 0x6E8]
	0x039C08F8 MOV X1, X27
	0x039C08FC MOV X3, X31
	0x039C0900 MOV X26, X0
	0x039C0904 LDR X2, [X8]
	0x039C0908 BL 0x2D27F24
	0x039C090C LDR X8, [X23]
	0x039C0910 LDR X8, [X8 + 0xB8]
	0x039C0914 STR X26, [X8 + 0x60]
	0x039C0918 STR X26, [X25 + 0x60]
	0x039C091C CBZ X24, 0x39C16D4
	0x039C0920 LDR X2, [X28]
	0x039C0924 MOV X0, X24
	0x039C0928 MOV X1, X25
	0x039C092C BL 0x2497EC8
	0x039C0930 ADRP X8, 0x790000
	0x039C0934 LDR X8, [X8 + 0x758]
	0x039C0938 LDR X0, [X8]
	0x039C093C BL 0x1C16F10
	0x039C0940 MOV X1, X31
	0x039C0944 MOV X24, X0
	0x039C0948 BL 0x39ADAE0
	0x039C094C CBZ X24, 0x39C16D4
	0x039C0950 ADRP X8, 0x792000
	0x039C0954 LDR X8, [X8 + 0x8C8]
	0x039C0958 LDR X25, [X24 + 0x48]
	0x039C095C LDR X8, [X8]
	0x039C0960 STR X8, [X24 + 0x28]
	0x039C0964 ADRP X8, 0x790000
	0x039C0968 LDR X8, [X8 + 0x768]
	0x039C096C LDR X0, [X8]
	0x039C0970 BL 0x1C16F10
	0x039C0974 MOV X1, X31
	0x039C0978 MOV X26, X0
	0x039C097C BL 0x39A2C94
	0x039C0980 CBZ X26, 0x39C16D4
	0x039C0984 ADRP X8, 0x792000
	0x039C0988 LDR X8, [X8 + 0x908]
	0x039C098C ADRP X19, 0x792000
	0x039C0990 ADRP X20, 0x792000
	0x039C0994 LDR X8, [X8]
	0x039C0998 STR X8, [X26 + 0x28]
	0x039C099C ADRP X8, 0x73C000
	0x039C09A0 LDR X8, [X8 + 0x940]
	0x039C09A4 LDR X0, [X8]
	0x039C09A8 LDR X19, [X19 + 0x808]
	0x039C09AC LDR X20, [X20 + 0x810]
	0x039C09B0 BL 0x1C16F10
	0x039C09B4 LDR X2, [X19]
	0x039C09B8 MOV X1, X21
	0x039C09BC MOV X3, X31
	0x039C09C0 MOV X27, X0
	0x039C09C4 BL 0x2D27194
	0x039C09C8 STR X27, [X26 + 0x48]
	0x039C09CC ADRP X8, 0x733000
	0x039C09D0 LDR X8, [X8 + 0xD28]
	0x039C09D4 LDR X0, [X8]
	0x039C09D8 BL 0x1C16F10
	0x039C09DC LDR X2, [X20]
	0x039C09E0 MOV X1, X21
	0x039C09E4 MOV X3, X31
	0x039C09E8 MOV X27, X0
	0x039C09EC BL 0x29818C8
	0x039C09F0 STR X27, [X26 + 0x50]
	0x039C09F4 CBZ X25, 0x39C16D4
	0x039C09F8 LDR X2, [X28]
	0x039C09FC MOV X0, X25
	0x039C0A00 MOV X1, X26
	0x039C0A04 BL 0x2497EC8
	0x039C0A08 ADRP X8, 0x792000
	0x039C0A0C LDR X25, [X24 + 0x48]
	0x039C0A10 LDR X8, [X8 + 0x698]
	0x039C0A14 LDR X0, [X8]
	0x039C0A18 BL 0x1C16F10
	0x039C0A1C MOV X1, X31
	0x039C0A20 MOV X26, X0
	0x039C0A24 BL 0x39AEAFC
	0x039C0A28 CBZ X26, 0x39C16D4
	0x039C0A2C ADRP X8, 0x792000
	0x039C0A30 LDR X8, [X8 + 0x878]
	0x039C0A34 ADRP X19, 0x737000
	0x039C0A38 MOV X20, X22
	0x039C0A3C LDR X8, [X8]
	0x039C0A40 STR X8, [X26 + 0x28]
	0x039C0A44 LDR X0, [X23]
	0x039C0A48 LDR W8, [X0 + 0xE0]
	0x039C0A4C LDR X19, [X19 + 0xB00]
	0x039C0A50 CBNZ W8, 0x39C0A5C
	0x039C0A54 BL 0x1C16DFC
	0x039C0A58 LDR X0, [X23]
	0x039C0A5C LDR X8, [X0 + 0xB8]
	0x039C0A60 LDR X27, [X8 + 0x68]
	0x039C0A64 CBNZ X27, 0x39C0AC0
	0x039C0A68 LDR W8, [X0 + 0xE0]
	0x039C0A6C CBNZ W8, 0x39C0A78
	0x039C0A70 BL 0x1C16DFC
	0x039C0A74 LDR X0, [X23]
	0x039C0A78 LDR X8, [X0 + 0xB8]
	0x039C0A7C LDR X28, [X8]
	0x039C0A80 ADRP X8, 0x779000
	0x039C0A84 LDR X8, [X8 + 0x6A0]
	0x039C0A88 LDR X0, [X8]
	0x039C0A8C BL 0x1C16F10
	0x039C0A90 ADRP X8, 0x792000
	0x039C0A94 LDR X8, [X8 + 0x6F0]
	0x039C0A98 MOV X1, X28
	0x039C0A9C MOV X3, X31
	0x039C0AA0 MOV X27, X0
	0x039C0AA4 LDR X2, [X8]
	0x039C0AA8 BL 0x2D27710
	0x039C0AAC LDR X0, [X23]
	0x039C0AB0 ADRP X28, 0x790000
	0x039C0AB4 LDR X8, [X0 + 0xB8]
	0x039C0AB8 STR X27, [X8 + 0x68]
	0x039C0ABC LDR X28, [X28 + 0x7A0]
	0x039C0AC0 STR X27, [X26 + 0x48]
	0x039C0AC4 LDR W8, [X0 + 0xE0]
	0x039C0AC8 CBNZ W8, 0x39C0AD4
	0x039C0ACC BL 0x1C16DFC
	0x039C0AD0 LDR X0, [X23]
	0x039C0AD4 LDR X8, [X0 + 0xB8]
	0x039C0AD8 LDR X27, [X8 + 0x70]
	0x039C0ADC CBNZ X27, 0x39C0B30
	0x039C0AE0 LDR W8, [X0 + 0xE0]
	0x039C0AE4 CBNZ W8, 0x39C0AF0
	0x039C0AE8 BL 0x1C16DFC
	0x039C0AEC LDR X0, [X23]
	0x039C0AF0 LDR X8, [X0 + 0xB8]
	0x039C0AF4 LDR X0, [X19]
	0x039C0AF8 LDR X28, [X8]
	0x039C0AFC BL 0x1C16F10
	0x039C0B00 ADRP X8, 0x792000
	0x039C0B04 LDR X8, [X8 + 0x6F8]
	0x039C0B08 MOV X1, X28
	0x039C0B0C MOV X3, X31
	0x039C0B10 MOV X27, X0
	0x039C0B14 LDR X2, [X8]
	0x039C0B18 BL 0x2983F04
	0x039C0B1C LDR X0, [X23]
	0x039C0B20 ADRP X28, 0x790000
	0x039C0B24 LDR X8, [X0 + 0xB8]
	0x039C0B28 STR X27, [X8 + 0x70]
	0x039C0B2C LDR X28, [X28 + 0x7A0]
	0x039C0B30 STR X27, [X26 + 0x50]
	0x039C0B34 LDR W8, [X0 + 0xE0]
	0x039C0B38 CBNZ W8, 0x39C0B44
	0x039C0B3C BL 0x1C16DFC
	0x039C0B40 LDR X0, [X23]
	0x039C0B44 LDR X8, [X0 + 0xB8]
	0x039C0B48 LDR X27, [X8 + 0x78]
	0x039C0B4C CBNZ X27, 0x39C0BA8
	0x039C0B50 LDR W8, [X0 + 0xE0]
	0x039C0B54 CBNZ W8, 0x39C0B60
	0x039C0B58 BL 0x1C16DFC
	0x039C0B5C LDR X0, [X23]
	0x039C0B60 LDR X8, [X0 + 0xB8]
	0x039C0B64 LDR X28, [X8]
	0x039C0B68 ADRP X8, 0x779000
	0x039C0B6C LDR X8, [X8 + 0x6A0]
	0x039C0B70 LDR X0, [X8]
	0x039C0B74 BL 0x1C16F10
	0x039C0B78 ADRP X8, 0x792000
	0x039C0B7C LDR X8, [X8 + 0x700]
	0x039C0B80 MOV X1, X28
	0x039C0B84 MOV X3, X31
	0x039C0B88 MOV X27, X0
	0x039C0B8C LDR X2, [X8]
	0x039C0B90 BL 0x2D27710
	0x039C0B94 LDR X8, [X23]
	0x039C0B98 ADRP X28, 0x790000
	0x039C0B9C LDR X8, [X8 + 0xB8]
	0x039C0BA0 STR X27, [X8 + 0x78]
	0x039C0BA4 LDR X28, [X28 + 0x7A0]
	0x039C0BA8 STR X27, [X26 + 0x60]
	0x039C0BAC CBZ X25, 0x39C16D4
	0x039C0BB0 LDR X2, [X28]
	0x039C0BB4 ADRP X27, 0x790000
	0x039C0BB8 LDR X27, [X27 + 0x790]
	0x039C0BBC MOV X0, X25
	0x039C0BC0 MOV X1, X26
	0x039C0BC4 ADD X28, X21, 0x18
	0x039C0BC8 BL 0x2497EC8
	0x039C0BCC LDRB W8, [X28 + 0x3C]
	0x039C0BD0 CBZ W8, 0x39C0CB4
	0x039C0BD4 ADRP X8, 0x733000
	0x039C0BD8 LDR X8, [X8 + 0x970]
	0x039C0BDC LDR X0, [X8]
	0x039C0BE0 LDR W8, [X0 + 0xE0]
	0x039C0BE4 CBNZ W8, 0x39C0BEC
	0x039C0BE8 BL 0x1C16DFC
	0x039C0BEC MOV X0, X31
	0x039C0BF0 BL 0x3C03278
	0x039C0BF4 TBZ X0, 0x0, 0x39C0C3C
	0x039C0BF8 CBZ X20, 0x39C16D4
	0x039C0BFC LDR W10, [X20 + 0x1C]
	0x039C0C00 LDR X8, [X20 + 0x10]
	0x039C0C04 LDR X9, [X27]
	0x039C0C08 ADD W10, W10, 0x1
	0x039C0C0C STR W10, [X20 + 0x1C]
	0x039C0C10 CBZ X8, 0x39C16D4
	0x039C0C14 LDRSW X10, [X20 + 0x18]
	0x039C0C18 LDR W11, [X8 + 0x18]
	0x039C0C1C CMP W10, W11
	0x039C0C20 B.CS 0x39C0C44
	0x039C0C24 ADD W9, W10, 0x1
	0x039C0C28 STR W9, [X20 + 0x18]
	0x039C0C2C LDR X9, [X31 + 0x8]
	0x039C0C30 ADD X8, X8, X10, 0x3, LSL
	0x039C0C34 STR X9, [X8 + 0x20]
	0x039C0C38 B 0x39C0C5C
	0x039C0C3C CBNZ X20, 0x39C0C5C
	0x039C0C40 B 0x39C16D4
	0x039C0C44 LDR X8, [X9 + 0x20]
	0x039C0C48 LDR X1, [X31 + 0x8]
	0x039C0C4C MOV X0, X20
	0x039C0C50 LDR X8, [X8 + 0xC0]
	0x039C0C54 LDR X2, [X8 + 0x70]
	0x039C0C58 BL 0x301BF90
	0x039C0C5C LDR W10, [X20 + 0x1C]
	0x039C0C60 LDR X8, [X20 + 0x10]
	0x039C0C64 LDR X9, [X27]
	0x039C0C68 ADD W10, W10, 0x1
	0x039C0C6C STR W10, [X20 + 0x1C]
	0x039C0C70 CBZ X8, 0x39C16D4
	0x039C0C74 LDRSW X10, [X20 + 0x18]
	0x039C0C78 LDR W11, [X8 + 0x18]
	0x039C0C7C CMP W10, W11
	0x039C0C80 B.CS 0x39C0C9C
	0x039C0C84 ADD W9, W10, 0x1
	0x039C0C88 STR W9, [X20 + 0x18]
	0x039C0C8C LDR X9, [X31 + 0x10]
	0x039C0C90 ADD X8, X8, X10, 0x3, LSL
	0x039C0C94 STR X9, [X8 + 0x20]
	0x039C0C98 B 0x39C0CB4
	0x039C0C9C LDR X8, [X9 + 0x20]
	0x039C0CA0 LDR X1, [X31 + 0x10]
	0x039C0CA4 MOV X0, X20
	0x039C0CA8 LDR X8, [X8 + 0xC0]
	0x039C0CAC LDR X2, [X8 + 0x70]
	0x039C0CB0 BL 0x301BF90
	0x039C0CB4 LDRB W8, [X28 + 0x3D]
	0x039C0CB8 CBZ W8, 0x39C0D14
	0x039C0CBC CBZ X20, 0x39C16D4
	0x039C0CC0 LDR W10, [X20 + 0x1C]
	0x039C0CC4 LDR X8, [X20 + 0x10]
	0x039C0CC8 LDR X9, [X27]
	0x039C0CCC ADD W10, W10, 0x1
	0x039C0CD0 STR W10, [X20 + 0x1C]
	0x039C0CD4 CBZ X8, 0x39C16D4
	0x039C0CD8 LDRSW X10, [X20 + 0x18]
	0x039C0CDC LDR W11, [X8 + 0x18]
	0x039C0CE0 CMP W10, W11
	0x039C0CE4 B.CS 0x39C0CFC
	0x039C0CE8 ADD W9, W10, 0x1
	0x039C0CEC ADD X8, X8, X10, 0x3, LSL
	0x039C0CF0 STR W9, [X20 + 0x18]
	0x039C0CF4 STR X24, [X8 + 0x20]
	0x039C0CF8 B 0x39C0D14
	0x039C0CFC LDR X8, [X9 + 0x20]
	0x039C0D00 MOV X0, X20
	0x039C0D04 MOV X1, X24
	0x039C0D08 LDR X8, [X8 + 0xC0]
	0x039C0D0C LDR X2, [X8 + 0x70]
	0x039C0D10 BL 0x301BF90
	0x039C0D14 ADRP X8, 0x733000
	0x039C0D18 LDR X8, [X8 + 0x598]
	0x039C0D1C LDR X22, [X28 + 0x28]
	0x039C0D20 LDR X0, [X8]
	0x039C0D24 LDR W8, [X0 + 0xE0]
	0x039C0D28 CBNZ W8, 0x39C0D30
	0x039C0D2C BL 0x1C16DFC
	0x039C0D30 MOV X0, X22
	0x039C0D34 MOV X1, X31
	0x039C0D38 MOV X2, X31
	0x039C0D3C BL 0x3C354F8
	0x039C0D40 TBZ X0, 0x0, 0x39C0DF4
	0x039C0D44 LDR W8, [X28 + 0x4]
	0x039C0D48 CBZ W8, 0x39C0DF4
	0x039C0D4C ADRP X8, 0x790000
	0x039C0D50 LDR X8, [X8 + 0x758]
	0x039C0D54 LDR X0, [X8]
	0x039C0D58 BL 0x1C16F10
	0x039C0D5C MOV X1, X31
	0x039C0D60 MOV X22, X0
	0x039C0D64 BL 0x39ADAE0
	0x039C0D68 CBZ X22, 0x39C16D4
	0x039C0D6C ADRP X8, 0x792000
	0x039C0D70 LDR X8, [X8 + 0x890]
	0x039C0D74 LDR X23, [X22 + 0x48]
	0x039C0D78 LDR X8, [X8]
	0x039C0D7C STR X8, [X22 + 0x28]
	0x039C0D80 ADRP X8, 0x792000
	0x039C0D84 LDR X8, [X8 + 0x698]
	0x039C0D88 LDR X0, [X8]
	0x039C0D8C BL 0x1C16F10
	0x039C0D90 MOV X1, X31
	0x039C0D94 MOV X24, X0
	0x039C0D98 BL 0x39AEAFC
	0x039C0D9C ADRP X19, 0x790000
	0x039C0DA0 LDR X19, [X19 + 0x7A0]
	0x039C0DA4 CBZ X24, 0x39C16D4
	0x039C0DA8 ADRP X8, 0x792000
	0x039C0DAC LDR X8, [X8 + 0x8B0]
	0x039C0DB0 ADRP X25, 0x792000
	0x039C0DB4 LDR X8, [X8]
	0x039C0DB8 STR X8, [X24 + 0x28]
	0x039C0DBC LDR X25, [X25 + 0x518]
	0x039C0DC0 LDR X0, [X25]
	0x039C0DC4 LDR W8, [X0 + 0xE0]
	0x039C0DC8 CBNZ W8, 0x39C0DD4
	0x039C0DCC BL 0x1C16DFC
	0x039C0DD0 LDR X0, [X25]
	0x039C0DD4 LDR X8, [X0 + 0xB8]
	0x039C0DD8 LDR X25, [X8 + 0x80]
	0x039C0DDC CBNZ X25, 0x39C0F38
	0x039C0DE0 LDR W8, [X0 + 0xE0]
	0x039C0DE4 CBZ W8, 0x39C0EE8
	0x039C0DE8 ADRP X28, 0x792000
	0x039C0DEC LDR X28, [X28 + 0x518]
	0x039C0DF0 B 0x39C0EF8
	0x039C0DF4 CBZ X20, 0x39C16D4
	0x039C0DF8 LDR W8, [X20 + 0x18]
	0x039C0DFC ADRP X19, 0x790000
	0x039C0E00 LDR X19, [X19 + 0x778]
	0x039C0E04 CMP W8, 0x1
	0x039C0E08 B.LT 0x39C0EA4
	0x039C0E0C ADRP X8, 0x790000
	0x039C0E10 LDR X8, [X8 + 0x798]
	0x039C0E14 ADRP X21, 0x791000
	0x039C0E18 MOV X0, X20
	0x039C0E1C LDR X1, [X8]
	0x039C0E20 LDR X21, [X21 + 0xF48]
	0x039C0E24 BL 0x301DDC4
	0x039C0E28 STR X0, [X29 + 0x1A0]
	0x039C0E2C LDR X0, [X19]
	0x039C0E30 LDR W8, [X0 + 0xE0]
	0x039C0E34 CBNZ W8, 0x39C0E3C
	0x039C0E38 BL 0x1C16DFC
	0x039C0E3C MOV X0, X31
	0x039C0E40 BL 0x399C120
	0x039C0E44 LDR X8, [X21]
	0x039C0E48 MOV X20, X0
	0x039C0E4C LDR W9, [X8 + 0xE0]
	0x039C0E50 CBNZ W9, 0x39C0E5C
	0x039C0E54 MOV X0, X8
	0x039C0E58 BL 0x1C16DFC
	0x039C0E5C CBZ X20, 0x39C16D4
	0x039C0E60 LDR X8, [X21]
	0x039C0E64 MOVZ W2, 0x1
	0x039C0E68 MOV X0, X20
	0x039C0E6C MOV W3, W31
	0x039C0E70 LDR X8, [X8 + 0xB8]
	0x039C0E74 MOV W4, W31
	0x039C0E78 MOV X5, X31
	0x039C0E7C LDR X1, [X8 + 0x10]
	0x039C0E80 BL 0x399C198
	0x039C0E84 CBZ X0, 0x39C16D4
	0x039C0E88 LDR X0, [X0 + 0x28]
	0x039C0E8C CBZ X0, 0x39C16D4
	0x039C0E90 ADRP X8, 0x790000
	0x039C0E94 LDR X8, [X8 + 0x7A8]
	0x039C0E98 LDR X1, [X29 + 0x1A0]
	0x039C0E9C LDR X2, [X8]
	0x039C0EA0 BL 0x249801C
	0x039C0EA4 LDR X0, [X19]
	0x039C0EA8 LDR W8, [X0 + 0xE0]
	0x039C0EAC CBNZ W8, 0x39C0EB4
	0x039C0EB0 BL 0x1C16DFC
	0x039C0EB4 MOV X0, X31
	0x039C0EB8 BL 0x399C120
	0x039C0EBC CBZ X0, 0x39C16D4
	0x039C0EC0 LDR X1, [X29 + 0x190]
	0x039C0EC4 LDP X20, X19, [X31 + 0x70]
	0x039C0EC8 LDP X22, X21, [X31 + 0x60]
	0x039C0ECC LDP X24, X23, [X31 + 0x50]
	0x039C0ED0 LDP X26, X25, [X31 + 0x40]
	0x039C0ED4 LDP X28, X27, [X31 + 0x30]
	0x039C0ED8 LDP X29, X30, [X31 + 0x20]
	0x039C0EDC MOV X2, X31
	0x039C0EE0 ADD X31, X31, 0x80
	0x039C0EE4 B 0x39A10EC
	0x039C0EE8 BL 0x1C16DFC
	0x039C0EEC ADRP X28, 0x792000
	0x039C0EF0 LDR X28, [X28 + 0x518]
	0x039C0EF4 LDR X0, [X28]
	0x039C0EF8 LDR X8, [X0 + 0xB8]
	0x039C0EFC LDR X26, [X8]
	0x039C0F00 ADRP X8, 0x779000
	0x039C0F04 LDR X8, [X8 + 0x6A0]
	0x039C0F08 LDR X0, [X8]
	0x039C0F0C BL 0x1C16F10
	0x039C0F10 ADRP X8, 0x792000
	0x039C0F14 LDR X8, [X8 + 0x708]
	0x039C0F18 MOV X1, X26
	0x039C0F1C MOV X3, X31
	0x039C0F20 MOV X25, X0
	0x039C0F24 LDR X2, [X8]
	0x039C0F28 BL 0x2D27710
	0x039C0F2C LDR X0, [X28]
	0x039C0F30 LDR X8, [X0 + 0xB8]
	0x039C0F34 STR X25, [X8 + 0x80]
	0x039C0F38 STR X25, [X24 + 0x48]
	0x039C0F3C LDR W8, [X0 + 0xE0]
	0x039C0F40 CBNZ W8, 0x39C0F54
	0x039C0F44 BL 0x1C16DFC
	0x039C0F48 ADRP X8, 0x792000
	0x039C0F4C LDR X8, [X8 + 0x518]
	0x039C0F50 LDR X0, [X8]
	0x039C0F54 LDR X8, [X0 + 0xB8]
	0x039C0F58 LDR X25, [X8 + 0x88]
	0x039C0F5C CBNZ X25, 0x39C0FC4
	0x039C0F60 LDR W8, [X0 + 0xE0]
	0x039C0F64 CBZ W8, 0x39C0F74
	0x039C0F68 ADRP X28, 0x792000
	0x039C0F6C LDR X28, [X28 + 0x518]
	0x039C0F70 B 0x39C0F84
	0x039C0F74 BL 0x1C16DFC
	0x039C0F78 ADRP X28, 0x792000
	0x039C0F7C LDR X28, [X28 + 0x518]
	0x039C0F80 LDR X0, [X28]
	0x039C0F84 LDR X8, [X0 + 0xB8]
	0x039C0F88 LDR X26, [X8]
	0x039C0F8C ADRP X8, 0x737000
	0x039C0F90 LDR X8, [X8 + 0xB00]
	0x039C0F94 LDR X0, [X8]
	0x039C0F98 BL 0x1C16F10
	0x039C0F9C ADRP X8, 0x792000
	0x039C0FA0 LDR X8, [X8 + 0x710]
	0x039C0FA4 MOV X1, X26
	0x039C0FA8 MOV X3, X31
	0x039C0FAC MOV X25, X0
	0x039C0FB0 LDR X2, [X8]
	0x039C0FB4 BL 0x2983F04
	0x039C0FB8 LDR X0, [X28]
	0x039C0FBC LDR X8, [X0 + 0xB8]
	0x039C0FC0 STR X25, [X8 + 0x88]
	0x039C0FC4 STR X25, [X24 + 0x50]
	0x039C0FC8 LDR W8, [X0 + 0xE0]
	0x039C0FCC CBNZ W8, 0x39C0FE0
	0x039C0FD0 BL 0x1C16DFC
	0x039C0FD4 ADRP X8, 0x792000
	0x039C0FD8 LDR X8, [X8 + 0x518]
	0x039C0FDC LDR X0, [X8]
	0x039C0FE0 LDR X8, [X0 + 0xB8]
	0x039C0FE4 LDR X25, [X8 + 0x90]
	0x039C0FE8 CBNZ X25, 0x39C1050
	0x039C0FEC LDR W8, [X0 + 0xE0]
	0x039C0FF0 CBZ W8, 0x39C1000
	0x039C0FF4 ADRP X28, 0x792000
	0x039C0FF8 LDR X28, [X28 + 0x518]
	0x039C0FFC B 0x39C1010
	0x039C1000 BL 0x1C16DFC
	0x039C1004 ADRP X28, 0x791000
	0x039C1008 LDR X28, [X28 + 0x518]
	0x039C100C LDR X0, [X28]
	0x039C1010 LDR X8, [X0 + 0xB8]
	0x039C1014 LDR X26, [X8]
	0x039C1018 ADRP X8, 0x778000
	0x039C101C LDR X8, [X8 + 0x6A0]
	0x039C1020 LDR X0, [X8]
	0x039C1024 BL 0x1C16F10
	0x039C1028 ADRP X8, 0x791000
	0x039C102C LDR X8, [X8 + 0x718]
	0x039C1030 MOV X1, X26
	0x039C1034 MOV X3, X31
	0x039C1038 MOV X25, X0
	0x039C103C LDR X2, [X8]
	0x039C1040 BL 0x2D27710
	0x039C1044 LDR X8, [X28]
	0x039C1048 LDR X8, [X8 + 0xB8]
	0x039C104C STR X25, [X8 + 0x90]
	0x039C1050 STR X25, [X24 + 0x60]
	0x039C1054 CBZ X23, 0x39C16D4
	0x039C1058 LDR X2, [X19]
	0x039C105C MOV X0, X23
	0x039C1060 MOV X1, X24
	0x039C1064 BL 0x2497EC8
	0x039C1068 ADRP X8, 0x791000
	0x039C106C LDR X23, [X22 + 0x48]
	0x039C1070 LDR X8, [X8 + 0x688]
	0x039C1074 LDR X0, [X8]
	0x039C1078 BL 0x1C16F10
	0x039C107C MOV X1, X31
	0x039C1080 MOV X24, X0
	0x039C1084 BL 0x39AEC64
	0x039C1088 CBZ X24, 0x39C16D4
	0x039C108C ADRP X8, 0x791000
	0x039C1090 LDR X8, [X8 + 0x8C0]
	0x039C1094 ADRP X25, 0x791000
	0x039C1098 LDR X8, [X8]
	0x039C109C STR X8, [X24 + 0x28]
	0x039C10A0 LDR X25, [X25 + 0x518]
	0x039C10A4 LDR X0, [X25]
	0x039C10A8 LDR W8, [X0 + 0xE0]
	0x039C10AC CBNZ W8, 0x39C10B8
	0x039C10B0 BL 0x1C16DFC
	0x039C10B4 LDR X0, [X25]
	0x039C10B8 LDR X8, [X0 + 0xB8]
	0x039C10BC LDR X25, [X8 + 0x98]
	0x039C10C0 CBNZ X25, 0x39C1128
	0x039C10C4 LDR W8, [X0 + 0xE0]
	0x039C10C8 CBZ W8, 0x39C10D8
	0x039C10CC ADRP X28, 0x791000
	0x039C10D0 LDR X28, [X28 + 0x518]
	0x039C10D4 B 0x39C10E8
	0x039C10D8 BL 0x1C16DFC
	0x039C10DC ADRP X28, 0x791000
	0x039C10E0 LDR X28, [X28 + 0x518]
	0x039C10E4 LDR X0, [X28]
	0x039C10E8 LDR X8, [X0 + 0xB8]
	0x039C10EC LDR X26, [X8]
	0x039C10F0 ADRP X8, 0x791000
	0x039C10F4 LDR X8, [X8 + 0x690]
	0x039C10F8 LDR X0, [X8]
	0x039C10FC BL 0x1C16F10
	0x039C1100 ADRP X8, 0x791000
	0x039C1104 LDR X8, [X8 + 0x720]
	0x039C1108 MOV X1, X26
	0x039C110C MOV X3, X31
	0x039C1110 MOV X25, X0
	0x039C1114 LDR X2, [X8]
	0x039C1118 BL 0x2D27F24
	0x039C111C LDR X0, [X28]
	0x039C1120 LDR X8, [X0 + 0xB8]
	0x039C1124 STR X25, [X8 + 0x98]
	0x039C1128 STR X25, [X24 + 0x48]
	0x039C112C LDR W8, [X0 + 0xE0]
	0x039C1130 CBNZ W8, 0x39C1144
	0x039C1134 BL 0x1C16DFC
	0x039C1138 ADRP X8, 0x791000
	0x039C113C LDR X8, [X8 + 0x518]
	0x039C1140 LDR X0, [X8]
	0x039C1144 LDR X8, [X0 + 0xB8]
	0x039C1148 LDR X25, [X8 + 0xA0]
	0x039C114C CBNZ X25, 0x39C11B4
	0x039C1150 LDR W8, [X0 + 0xE0]
	0x039C1154 CBZ W8, 0x39C1164
	0x039C1158 ADRP X28, 0x791000
	0x039C115C LDR X28, [X28 + 0x518]
	0x039C1160 B 0x39C1174
	0x039C1164 BL 0x1C16DFC
	0x039C1168 ADRP X28, 0x791000
	0x039C116C LDR X28, [X28 + 0x518]
	0x039C1170 LDR X0, [X28]
	0x039C1174 LDR X8, [X0 + 0xB8]
	0x039C1178 LDR X26, [X8]
	0x039C117C ADRP X8, 0x734000
	0x039C1180 LDR X8, [X8 + 0x5B0]
	0x039C1184 LDR X0, [X8]
	0x039C1188 BL 0x1C16F10
	0x039C118C ADRP X8, 0x791000
	0x039C1190 LDR X8, [X8 + 0x728]
	0x039C1194 MOV X1, X26
	0x039C1198 MOV X3, X31
	0x039C119C MOV X25, X0
	0x039C11A0 LDR X2, [X8]
	0x039C11A4 BL 0x2A6DA40
	0x039C11A8 LDR X0, [X28]
	0x039C11AC LDR X8, [X0 + 0xB8]
	0x039C11B0 STR X25, [X8 + 0xA0]
	0x039C11B4 STR X25, [X24 + 0x50]
	0x039C11B8 LDR W8, [X0 + 0xE0]
	0x039C11BC CBNZ W8, 0x39C11D0
	0x039C11C0 BL 0x1C16DFC
	0x039C11C4 ADRP X8, 0x791000
	0x039C11C8 LDR X8, [X8 + 0x518]
	0x039C11CC LDR X0, [X8]
	0x039C11D0 LDR X8, [X0 + 0xB8]
	0x039C11D4 LDR X25, [X8 + 0xA8]
	0x039C11D8 CBNZ X25, 0x39C1240
	0x039C11DC LDR W8, [X0 + 0xE0]
	0x039C11E0 CBZ W8, 0x39C11F0
	0x039C11E4 ADRP X28, 0x791000
	0x039C11E8 LDR X28, [X28 + 0x518]
	0x039C11EC B 0x39C1200
	0x039C11F0 BL 0x1C16DFC
	0x039C11F4 ADRP X28, 0x791000
	0x039C11F8 LDR X28, [X28 + 0x518]
	0x039C11FC LDR X0, [X28]
	0x039C1200 LDR X8, [X0 + 0xB8]
	0x039C1204 LDR X26, [X8]
	0x039C1208 ADRP X8, 0x791000
	0x039C120C LDR X8, [X8 + 0x690]
	0x039C1210 LDR X0, [X8]
	0x039C1214 BL 0x1C16F10
	0x039C1218 ADRP X8, 0x791000
	0x039C121C LDR X8, [X8 + 0x730]
	0x039C1220 MOV X1, X26
	0x039C1224 MOV X3, X31
	0x039C1228 MOV X25, X0
	0x039C122C LDR X2, [X8]
	0x039C1230 BL 0x2D27F24
	0x039C1234 LDR X0, [X28]
	0x039C1238 LDR X8, [X0 + 0xB8]
	0x039C123C STR X25, [X8 + 0xA8]
	0x039C1240 STR X25, [X24 + 0x60]
	0x039C1244 LDR W8, [X0 + 0xE0]
	0x039C1248 CBNZ W8, 0x39C125C
	0x039C124C BL 0x1C16DFC
	0x039C1250 ADRP X8, 0x791000
	0x039C1254 LDR X8, [X8 + 0x518]
	0x039C1258 LDR X0, [X8]
	0x039C125C LDR X8, [X0 + 0xB8]
	0x039C1260 LDR X25, [X8 + 0xB0]
	0x039C1264 CBNZ X25, 0x39C12CC
	0x039C1268 LDR W8, [X0 + 0xE0]
	0x039C126C CBZ W8, 0x39C127C
	0x039C1270 ADRP X28, 0x791000
	0x039C1274 LDR X28, [X28 + 0x518]
	0x039C1278 B 0x39C128C
	0x039C127C BL 0x1C16DFC
	0x039C1280 ADRP X28, 0x791000
	0x039C1284 LDR X28, [X28 + 0x518]
	0x039C1288 LDR X0, [X28]
	0x039C128C LDR X8, [X0 + 0xB8]
	0x039C1290 LDR X26, [X8]
	0x039C1294 ADRP X8, 0x791000
	0x039C1298 LDR X8, [X8 + 0x690]
	0x039C129C LDR X0, [X8]
	0x039C12A0 BL 0x1C16F10
	0x039C12A4 ADRP X8, 0x791000
	0x039C12A8 LDR X8, [X8 + 0x738]
	0x039C12AC MOV X1, X26
	0x039C12B0 MOV X3, X31
	0x039C12B4 MOV X25, X0
	0x039C12B8 LDR X2, [X8]
	0x039C12BC BL 0x2D27F24
	0x039C12C0 LDR X8, [X28]
	0x039C12C4 LDR X8, [X8 + 0xB8]
	0x039C12C8 STR X25, [X8 + 0xB0]
	0x039C12CC STR X25, [X24 + 0x68]
	0x039C12D0 CBZ X23, 0x39C16D4
	0x039C12D4 LDR X2, [X19]
	0x039C12D8 MOV X0, X23
	0x039C12DC MOV X1, X24
	0x039C12E0 BL 0x2497EC8
	0x039C12E4 ADRP X8, 0x790000
	0x039C12E8 LDR X8, [X8 + 0xE8]
	0x039C12EC LDR X0, [X8]
	0x039C12F0 BL 0x1C16F10
	0x039C12F4 MOV X1, X31
	0x039C12F8 MOV X23, X0
	0x039C12FC BL 0x399C0B4
	0x039C1300 CBZ X23, 0x39C16D4
	0x039C1304 ADRP X8, 0x791000
	0x039C1308 LDR X8, [X8 + 0x8F8]
	0x039C130C ADRP X9, 0x790000
	0x039C1310 MOV X0, X23
	0x039C1314 LDR X8, [X8]
	0x039C1318 STR X8, [X23 + 0x28]
	0x039C131C LDR X8, [X29 + 0x1D0]
	0x039C1320 LDR X9, [X9 + 0xE0]
	0x039C1324 STR X8, [X23 + 0x60]
	0x039C1328 LDR X1, [X29 + 0x1D8]
	0x039C132C LDR X2, [X9]
	0x039C1330 BL 0x2BA9724
	0x039C1334 ADRP X26, 0x778000
	0x039C1338 LDR X26, [X26 + 0x6A0]
	0x039C133C LDR X0, [X26]
	0x039C1340 BL 0x1C16F10
	0x039C1344 ADRP X8, 0x791000
	0x039C1348 LDR X8, [X8 + 0x828]
	0x039C134C MOV X1, X21
	0x039C1350 MOV X3, X31
	0x039C1354 MOV X24, X0
	0x039C1358 LDR X2, [X8]
	0x039C135C BL 0x2D27710
	0x039C1360 STR X24, [X23 + 0x80]
	0x039C1364 ADRP X25, 0x736000
	0x039C1368 LDR X25, [X25 + 0xB00]
	0x039C136C LDR X0, [X25]
	0x039C1370 BL 0x1C16F10
	0x039C1374 ADRP X8, 0x791000
	0x039C1378 LDR X8, [X8 + 0x830]
	0x039C137C MOV X1, X21
	0x039C1380 MOV X3, X31
	0x039C1384 MOV X24, X0
	0x039C1388 LDR X2, [X8]
	0x039C138C BL 0x2983F04
	0x039C1390 STR X24, [X23 + 0x88]
	0x039C1394 LDR X0, [X26]
	0x039C1398 BL 0x1C16F10
	0x039C139C ADRP X8, 0x791000
	0x039C13A0 LDR X8, [X8 + 0x838]
	0x039C13A4 MOV X1, X21
	0x039C13A8 MOV X3, X31
	0x039C13AC MOV X24, X0
	0x039C13B0 LDR X2, [X8]
	0x039C13B4 BL 0x2D27710
	0x039C13B8 STR X24, [X23 + 0x48]
	0x039C13BC LDR X0, [X25]
	0x039C13C0 BL 0x1C16F10
	0x039C13C4 ADRP X8, 0x791000
	0x039C13C8 LDR X8, [X8 + 0x840]
	0x039C13CC MOV X1, X21
	0x039C13D0 MOV X3, X31
	0x039C13D4 MOV X24, X0
	0x039C13D8 LDR X2, [X8]
	0x039C13DC BL 0x2983F04
	0x039C13E0 STR X24, [X23 + 0x50]
	0x039C13E4 STR X23, [X29 + 0x1F0]
	0x039C13E8 LDR X0, [X22 + 0x48]
	0x039C13EC CBZ X0, 0x39C16D4
	0x039C13F0 LDR X2, [X19]
	0x039C13F4 MOV X1, X23
	0x039C13F8 BL 0x2497EC8
	0x039C13FC ADRP X8, 0x791000
	0x039C1400 LDR X21, [X22 + 0x48]
	0x039C1404 LDR X8, [X8 + 0x688]
	0x039C1408 LDR X0, [X8]
	0x039C140C BL 0x1C16F10
	0x039C1410 MOV X1, X31
	0x039C1414 MOV X23, X0
	0x039C1418 BL 0x39AEC64
	0x039C141C CBZ X23, 0x39C16D4
	0x039C1420 ADRP X8, 0x791000
	0x039C1424 LDR X8, [X8 + 0x8A0]
	0x039C1428 ADRP X24, 0x791000
	0x039C142C LDR X8, [X8]
	0x039C1430 STR X8, [X23 + 0x28]
	0x039C1434 LDR X24, [X24 + 0x518]
	0x039C1438 LDR X0, [X24]
	0x039C143C LDR W8, [X0 + 0xE0]
	0x039C1440 CBNZ W8, 0x39C144C
	0x039C1444 BL 0x1C16DFC
	0x039C1448 LDR X0, [X24]
	0x039C144C LDR X8, [X0 + 0xB8]
	0x039C1450 LDR X24, [X8 + 0xB8]
	0x039C1454 CBNZ X24, 0x39C14BC
	0x039C1458 LDR W8, [X0 + 0xE0]
	0x039C145C CBZ W8, 0x39C146C
	0x039C1460 ADRP X26, 0x791000
	0x039C1464 LDR X26, [X26 + 0x518]
	0x039C1468 B 0x39C147C
	0x039C146C BL 0x1C16DFC
	0x039C1470 ADRP X26, 0x791000
	0x039C1474 LDR X26, [X26 + 0x518]
	0x039C1478 LDR X0, [X26]
	0x039C147C LDR X8, [X0 + 0xB8]
	0x039C1480 LDR X25, [X8]
	0x039C1484 ADRP X8, 0x791000
	0x039C1488 LDR X8, [X8 + 0x690]
	0x039C148C LDR X0, [X8]
	0x039C1490 BL 0x1C16F10
	0x039C1494 ADRP X8, 0x791000
	0x039C1498 LDR X8, [X8 + 0x740]
	0x039C149C MOV X1, X25
	0x039C14A0 MOV X3, X31
	0x039C14A4 MOV X24, X0
	0x039C14A8 LDR X2, [X8]
	0x039C14AC BL 0x2D27F24
	0x039C14B0 LDR X0, [X26]
	0x039C14B4 LDR X8, [X0 + 0xB8]
	0x039C14B8 STR X24, [X8 + 0xB8]
	0x039C14BC STR X24, [X23 + 0x48]
	0x039C14C0 LDR W8, [X0 + 0xE0]
	0x039C14C4 CBNZ W8, 0x39C14D8
	0x039C14C8 BL 0x1C16DFC
	0x039C14CC ADRP X8, 0x791000
	0x039C14D0 LDR X8, [X8 + 0x518]
	0x039C14D4 LDR X0, [X8]
	0x039C14D8 LDR X8, [X0 + 0xB8]
	0x039C14DC LDR X24, [X8 + 0xC0]
	0x039C14E0 CBNZ X24, 0x39C1548
	0x039C14E4 LDR W8, [X0 + 0xE0]
	0x039C14E8 CBZ W8, 0x39C14F8
	0x039C14EC ADRP X26, 0x791000
	0x039C14F0 LDR X26, [X26 + 0x518]
	0x039C14F4 B 0x39C1508
	0x039C14F8 BL 0x1C16DFC
	0x039C14FC ADRP X26, 0x791000
	0x039C1500 LDR X26, [X26 + 0x518]
	0x039C1504 LDR X0, [X26]
	0x039C1508 LDR X8, [X0 + 0xB8]
	0x039C150C LDR X25, [X8]
	0x039C1510 ADRP X8, 0x734000
	0x039C1514 LDR X8, [X8 + 0x5B0]
	0x039C1518 LDR X0, [X8]
	0x039C151C BL 0x1C16F10
	0x039C1520 ADRP X8, 0x791000
	0x039C1524 LDR X8, [X8 + 0x748]
	0x039C1528 MOV X1, X25
	0x039C152C MOV X3, X31
	0x039C1530 MOV X24, X0
	0x039C1534 LDR X2, [X8]
	0x039C1538 BL 0x2A6DA40
	0x039C153C LDR X0, [X26]
	0x039C1540 LDR X8, [X0 + 0xB8]
	0x039C1544 STR X24, [X8 + 0xC0]
	0x039C1548 STR X24, [X23 + 0x50]
	0x039C154C LDR W8, [X0 + 0xE0]
	0x039C1550 CBNZ W8, 0x39C1564
	0x039C1554 BL 0x1C16DFC
	0x039C1558 ADRP X8, 0x791000
	0x039C155C LDR X8, [X8 + 0x518]
	0x039C1560 LDR X0, [X8]
	0x039C1564 LDR X8, [X0 + 0xB8]
	0x039C1568 LDR X24, [X8 + 0xC8]
	0x039C156C CBNZ X24, 0x39C15D4
	0x039C1570 LDR W8, [X0 + 0xE0]
	0x039C1574 CBZ W8, 0x39C1584
	0x039C1578 ADRP X26, 0x791000
	0x039C157C LDR X26, [X26 + 0x518]
	0x039C1580 B 0x39C1594
	0x039C1584 BL 0x1C16DFC
	0x039C1588 ADRP X26, 0x791000
	0x039C158C LDR X26, [X26 + 0x518]
	0x039C1590 LDR X0, [X26]
	0x039C1594 LDR X8, [X0 + 0xB8]
	0x039C1598 LDR X25, [X8]
	0x039C159C ADRP X8, 0x791000
	0x039C15A0 LDR X8, [X8 + 0x690]
	0x039C15A4 LDR X0, [X8]
	0x039C15A8 BL 0x1C16F10
	0x039C15AC ADRP X8, 0x791000
	0x039C15B0 LDR X8, [X8 + 0x750]
	0x039C15B4 MOV X1, X25
	0x039C15B8 MOV X3, X31
	0x039C15BC MOV X24, X0
	0x039C15C0 LDR X2, [X8]
	0x039C15C4 BL 0x2D27F24
	0x039C15C8 LDR X0, [X26]
	0x039C15CC LDR X8, [X0 + 0xB8]
	0x039C15D0 STR X24, [X8 + 0xC8]
	0x039C15D4 STR X24, [X23 + 0x60]
	0x039C15D8 LDR W8, [X0 + 0xE0]
	0x039C15DC CBNZ W8, 0x39C15F0
	0x039C15E0 BL 0x1C16DFC
	0x039C15E4 ADRP X8, 0x791000
	0x039C15E8 LDR X8, [X8 + 0x518]
	0x039C15EC LDR X0, [X8]
	0x039C15F0 LDR X8, [X0 + 0xB8]
	0x039C15F4 LDR X24, [X8 + 0xD0]
	0x039C15F8 CBNZ X24, 0x39C1660
	0x039C15FC LDR W8, [X0 + 0xE0]
	0x039C1600 CBZ W8, 0x39C1610
	0x039C1604 ADRP X26, 0x791000
	0x039C1608 LDR X26, [X26 + 0x518]
	0x039C160C B 0x39C1620
	0x039C1610 BL 0x1C16DFC
	0x039C1614 ADRP X26, 0x791000
	0x039C1618 LDR X26, [X26 + 0x518]
	0x039C161C LDR X0, [X26]
	0x039C1620 LDR X8, [X0 + 0xB8]
	0x039C1624 LDR X25, [X8]
	0x039C1628 ADRP X8, 0x791000
	0x039C162C LDR X8, [X8 + 0x690]
	0x039C1630 LDR X0, [X8]
	0x039C1634 BL 0x1C16F10
	0x039C1638 ADRP X8, 0x791000
	0x039C163C LDR X8, [X8 + 0x758]
	0x039C1640 MOV X1, X25
	0x039C1644 MOV X3, X31
	0x039C1648 MOV X24, X0
	0x039C164C LDR X2, [X8]
	0x039C1650 BL 0x2D27F24
	0x039C1654 LDR X8, [X26]
	0x039C1658 LDR X8, [X8 + 0xB8]
	0x039C165C STR X24, [X8 + 0xD0]
	0x039C1660 STR X24, [X23 + 0x68]
	0x039C1664 CBZ X21, 0x39C16D4
	0x039C1668 LDR X2, [X19]
	0x039C166C MOV X0, X21
	0x039C1670 MOV X1, X23
	0x039C1674 BL 0x2497EC8
	0x039C1678 CBZ X20, 0x39C16D4
	0x039C167C LDR W10, [X20 + 0x1C]
	0x039C1680 LDR X8, [X20 + 0x10]
	0x039C1684 LDR X9, [X27]
	0x039C1688 ADD W10, W10, 0x1
	0x039C168C STR W10, [X20 + 0x1C]
	0x039C1690 CBZ X8, 0x39C16D4
	0x039C1694 LDRSW X10, [X20 + 0x18]
	0x039C1698 LDR W11, [X8 + 0x18]
	0x039C169C CMP W10, W11
	0x039C16A0 B.CS 0x39C16B8
	0x039C16A4 ADD W9, W10, 0x1
	0x039C16A8 ADD X8, X8, X10, 0x3, LSL
	0x039C16AC STR W9, [X20 + 0x18]
	0x039C16B0 STR X22, [X8 + 0x20]
	0x039C16B4 B 0x39C0DF8
	0x039C16B8 LDR X8, [X9 + 0x20]
	0x039C16BC MOV X0, X20
	0x039C16C0 MOV X1, X22
	0x039C16C4 LDR X8, [X8 + 0xC0]
	0x039C16C8 LDR X2, [X8 + 0x70]
	0x039C16CC BL 0x301BF90
	0x039C16D0 B 0x39C0DF8
	0x039C16D4 BL 0x1C16F20
	0x039C16D8 STR X30, [X31 - 0x30]!
	0x039C16DC STP X22, X21, [X31 + 0x10]
	0x039C16E0 STP X20, X19, [X31 + 0x20]
	0x039C16E4 ADRP X22, 0xA20000
	0x039C16E8 ADRP X21, 0x78F000
	0x039C16EC LDRB W8, [X22 + 0xCAA]
	0x039C16F0 LDR X21, [X21 + 0x778]
	0x039C16F4 MOV W20, W1
	0x039C16F8 MOV X19, X0
	0x039C16FC TBNZ X8, 0x0, 0x39C172C
	0x039C1700 ADRP X0, 0x78F000
	0x039C1704 LDR X0, [X0 + 0x778]
	0x039C1708 BL 0x1C16CF4
	0x039C170C ADRP X0, 0x78F000
	0x039C1710 LDR X0, [X0 + 0x810]
	0x039C1714 BL 0x1C16CF4
	0x039C1718 ADRP X0, 0x790000
	0x039C171C LDR X0, [X0 + 0xF48]
	0x039C1720 BL 0x1C16CF4
	0x039C1724 MOVZ W8, 0x1
	0x039C1728 STRB W8, [X22 + 0xCAA]
	0x039C172C LDR X0, [X21]
	0x039C1730 ADRP X22, 0x790000
	0x039C1734 LDR W8, [X0 + 0xE0]
	0x039C1738 LDR X22, [X22 + 0xF48]
	0x039C173C CBNZ W8, 0x39C1744
	0x039C1740 BL 0x1C16DFC
	0x039C1744 MOV X0, X31
	0x039C1748 BL 0x399C120
	0x039C174C LDR X8, [X22]
	0x039C1750 MOV X21, X0
	0x039C1754 LDR W9, [X8 + 0xE0]
	0x039C1758 CBNZ W9, 0x39C1768
	0x039C175C MOV X0, X8
	0x039C1760 BL 0x1C16DFC
	0x039C1764 LDR X8, [X22]
	0x039C1768 CBZ X21, 0x39C17D0
	0x039C176C LDR X8, [X8 + 0xB8]
	0x039C1770 MOV X0, X21
	0x039C1774 LDR X1, [X8 + 0x10]
	0x039C1778 TBZ X20, 0x0, 0x39C1790
	0x039C177C LDP X20, X19, [X31 + 0x20]
	0x039C1780 LDP X22, X21, [X31 + 0x10]
	0x039C1784 MOV X2, X31
	0x039C1788 LDR X30, [X31], #0x30
	0x039C178C B 0x39AA4C8
	0x039C1790 MOV W2, W31
	0x039C1794 MOV W3, W31
	0x039C1798 MOV W4, W31
	0x039C179C MOV X5, X31
	0x039C17A0 BL 0x399C198
	0x039C17A4 CBZ X0, 0x39C17D0
	0x039C17A8 LDR X0, [X0 + 0x28]
	0x039C17AC CBZ X0, 0x39C17D0
	0x039C17B0 ADRP X8, 0x78F000
	0x039C17B4 LDR X1, [X19 + 0x1A0]
	0x039C17B8 LDR X8, [X8 + 0x810]
	0x039C17BC LDP X20, X19, [X31 + 0x20]
	0x039C17C0 LDP X22, X21, [X31 + 0x10]
	0x039C17C4 LDR X2, [X8]
	0x039C17C8 LDR X30, [X31], #0x30
	0x039C17CC B 0x24982D0
	0x039C17D0 BL 0x1C16F20
	0x039C17D4 SUB X31, X31, 0xB0
	0x039C17D8 STP D13, D12, [X31 + 0x50]
	0x039C17DC STP D11, D10, [X31 + 0x60]
	0x039C17E0 STP D9, D8, [X31 + 0x70]
	0x039C17E4 STP X30, X23, [X31 + 0x80]
	0x039C17E8 STP X22, X21, [X31 + 0x90]
	0x039C17EC STP X20, X19, [X31 + 0xA0]
	0x039C17F0 LDR W8, [X0 + 0x34]
	0x039C17F4 MOV X20, X1
	0x039C17F8 MOV X19, X2
	0x039C17FC MOV V8.16B, V2.16B
	0x039C1800 SUB W1, W8, 0x1
	0x039C1804 STR D1, [X31]
	0x039C1808 STR D0, [X31 + 0x10]
	0x039C180C MOV X21, X0
	0x039C1810 BL 0x39BD8BC
	0x039C1814 ADRP X22, 0xA17000
	0x039C1818 LDUR V9, [X21 + 0x14]
	0x039C181C LDRB W8, [X22 + 0x85B]
	0x039C1820 LDR V10, [X21 + 0x1C]
	0x039C1824 STR V0, [X31 + 0x2]
	0x039C1828 CBNZ W8, 0x39C1844
	0x039C182C ADRP X0, 0x732000
	0x039C1830 LDR X0, [X0 + 0x5A0]
	0x039C1834 BL 0x1C16CF4
	0x039C1838 LDR V0, [X31 + 0x2]
	0x039C183C MOVZ W8, 0x1
	0x039C1840 STRB W8, [X22 + 0x85B]
	0x039C1844 LDR X8, [X21 + 0x190]
	0x039C1848 CBZ X8, 0x39C1A1C
	0x039C184C ADRP X21, 0x732000
	0x039C1850 LDR X21, [X21 + 0x5A0]
	0x039C1854 ADRP X23, 0xA17000
	0x039C1858 LDRB W10, [X23 + 0xABE]
	0x039C185C LDR V11, [X8 + 0x28]
	0x039C1860 LDR X9, [X21]
	0x039C1864 LDR X9, [X9 + 0xB8]
	0x039C1868 LDUR V13, [X9 + 0xC]
	0x039C186C LDR V12, [X9 + 0x14]
	0x039C1870 CBNZ W10, 0x39C188C
	0x039C1874 ADRP X0, 0x732000
	0x039C1878 LDR X0, [X0 + 0x5A8]
	0x039C187C BL 0x1C16CF4
	0x039C1880 LDR V0, [X31 + 0x2]
	0x039C1884 MOVZ W8, 0x1
	0x039C1888 STRB W8, [X23 + 0xABE]
	0x039C188C ADRP X23, 0x732000
	0x039C1890 LDR X23, [X23 + 0x5A8]
	0x039C1894 FDIV S11, S11, S0
	0x039C1898 LDR X0, [X23]
	0x039C189C LDR W8, [X0 + 0xE0]
	0x039C18A0 CBNZ W8, 0x39C18AC
	0x039C18A4 BL 0x1C16DFC
	0x039C18A8 LDR V0, [X31 + 0x2]
	0x039C18AC MOVZ W9, 0x7F800000
	0x039C18B0 FRINTP S3, S11
	0x039C18B4 FCVTPS W8, S11
	0x039C18B8 MOVZ W10, 0xCF000000
	0x039C18BC FMOV S2, W9
	0x039C18C0 SCVTF S1, W8
	0x039C18C4 FCMP S3, S2
	0x039C18C8 FMOV S2, W10
	0x039C18CC FCSEL S11, S2, S1, EQ
	0x039C18D0 CBZ X20, 0x39C1A1C
	0x039C18D4 LDP V1, V3, [X31]
	0x039C18D8 FMOV S2, 0.5
	0x039C18DC FMUL S4, S0, S2
	0x039C18E0 MOV X0, X20
	0x039C18E4 MOV V3.S[1], V1.S[0]
	0x039C18E8 FMUL S1, S8, S0
	0x00000000 INVALID
	0x039C18F0 FADD S1, S1, S10
	0x039C18F4 FADD V2.2S, V2.2S, V9.2S
	0x00000000 INVALID
	0x039C18FC FMUL S4, S4, S12
	0x039C1900 MOV X1, X31
	0x039C1904 FADD V9.2S, V2.2S, V3.2S
	0x039C1908 FADD S10, S1, S4
	0x039C190C BL 0x3C3F58C
	0x039C1910 ADRP X20, 0xA17000
	0x039C1914 LDRB W8, [X20 + 0x85C]
	0x039C1918 MOV V8.16B, V2.16B
	0x039C191C CBNZ W8, 0x39C193C
	0x039C1920 ADRP X0, 0x732000
	0x039C1924 LDR X0, [X0 + 0x5A8]
	0x039C1928 STP V1, V0, [X31]
	0x039C192C BL 0x1C16CF4
	0x039C1930 LDP V1, V0, [X31]
	0x039C1934 MOVZ W8, 0x1
	0x039C1938 STRB W8, [X20 + 0x85C]
	0x039C193C LDR X0, [X23]
	0x039C1940 LDR V4, [X31 + 0x2]
	0x039C1944 MOV V0.S[1], V1.S[0]
	0x039C1948 FSUB V12.2S, V0.2S, V9.2S
	0x039C194C LDR W8, [X0 + 0xE0]
	0x039C1950 FMUL S11, S4, S11
	0x039C1954 FSUB S8, S8, S10
	0x039C1958 CBNZ W8, 0x39C1964
	0x039C195C BL 0x1C16DFC
	0x039C1960 LDR V4, [X31 + 0x2]
	0x00000000 INVALID
	0x039C1968 FADDP S0, V0.2S
	0x039C196C FMUL S1, S8, S8
	0x039C1970 FADD S0, S1, S0
	0x039C1974 FSQRT S0, S0
	0x039C1978 FCMP S0, S11
	0x039C197C B.GT 0x39C19F4
	0x039C1980 LDRB W8, [X22 + 0x85B]
	0x039C1984 UNIMPLEMENTED
	0x039C1988 CBNZ W8, 0x39C19A4
	0x039C198C ADRP X0, 0x732000
	0x039C1990 LDR X0, [X0 + 0x5A0]
	0x039C1994 BL 0x1C16CF4
	0x039C1998 LDR V4, [X31 + 0x2]
	0x039C199C MOVZ W8, 0x1
	0x039C19A0 STRB W8, [X22 + 0x85B]
	0x039C19A4 LDR X8, [X21]
	0x039C19A8 MOVI V0.2S, 0x3F, 0x18
	0x039C19AC FMOV S1, 0.5
	0x039C19B0 ADD X1, X31, 0x38
	0x039C19B4 LDR X8, [X8 + 0xB8]
	0x039C19B8 MOV X0, X19
	0x039C19BC MOV X2, X31
	0x039C19C0 LDUR V2, [X8 + 0xC]
	0x039C19C4 LDR V3, [X8 + 0x14]
	0x039C19C8 STR D9, [X31 + 0x38]
	0x039C19CC STR S10, [X31 + 0x40]
	0x00000000 INVALID
	0x039C19D4 FMUL S3, S4, S3
	0x00000000 INVALID
	0x039C19DC FMUL S1, S3, S1
	0x039C19E0 STUR D0, [X31 + 0x44]
	0x039C19E4 STR S1, [X31 + 0x4C]
	0x039C19E8 BL 0x3C0A850
	0x039C19EC EOR W8, W0, 0x1
	0x039C19F0 B 0x39C19F8
	0x039C19F4 MOVZ W8, 0x1
	0x039C19F8 LDP X20, X19, [X31 + 0xA0]
	0x039C19FC LDP X22, X21, [X31 + 0x90]
	0x039C1A00 LDP X30, X23, [X31 + 0x80]
	0x039C1A04 LDP D9, D8, [X31 + 0x70]
	0x039C1A08 LDP D11, D10, [X31 + 0x60]
	0x039C1A0C LDP D13, D12, [X31 + 0x50]
	0x039C1A10 AND W0, W8, 0x1
	0x039C1A14 ADD X31, X31, 0xB0
	0x039C1A18 RET
	0x039C1A1C BL 0x1C16F20
	0x039C1A20 STP D15, D14, [X31 - 0xA0]!
	0x039C1A24 STP D13, D12, [X31 + 0x10]
	0x039C1A28 STP D11, D10, [X31 + 0x20]
	0x039C1A2C STP D9, D8, [X31 + 0x30]
	0x039C1A30 STP X29, X30, [X31 + 0x40]
	0x039C1A34 STP X28, X27, [X31 + 0x50]
	0x039C1A38 STP X26, X25, [X31 + 0x60]
	0x039C1A3C STP X24, X23, [X31 + 0x70]
	0x039C1A40 STP X22, X21, [X31 + 0x80]
	0x039C1A44 STP X20, X19, [X31 + 0x90]
	0x039C1A48 SUB X31, X31, 0x1E0
	0x039C1A4C ADRP X19, 0xA20000
	0x039C1A50 LDRB W8, [X19 + 0xCAE]
	0x039C1A54 MOV X24, X1
	0x039C1A58 MOV X25, X0
	0x039C1A5C TBNZ X8, 0x0, 0x39C1B88
	0x039C1A60 ADRP X0, 0x791000
	0x039C1A64 LDR X0, [X0 + 0x920]
	0x039C1A68 BL 0x1C16CF4
	0x039C1A6C ADRP X0, 0x78F000
	0x039C1A70 LDR X0, [X0 + 0xE30]
	0x039C1A74 BL 0x1C16CF4
	0x039C1A78 ADRP X0, 0x791000
	0x039C1A7C LDR X0, [X0 + 0x928]
	0x039C1A80 BL 0x1C16CF4
	0x039C1A84 ADRP X0, 0x791000
	0x039C1A88 LDR X0, [X0 + 0x930]
	0x039C1A8C BL 0x1C16CF4
	0x039C1A90 ADRP X0, 0x791000
	0x039C1A94 LDR X0, [X0 + 0x938]
	0x039C1A98 BL 0x1C16CF4
	0x039C1A9C ADRP X0, 0x791000
	0x039C1AA0 LDR X0, [X0 + 0x940]
	0x039C1AA4 BL 0x1C16CF4
	0x039C1AA8 ADRP X0, 0x791000
	0x039C1AAC LDR X0, [X0 + 0x948]
	0x039C1AB0 BL 0x1C16CF4
	0x039C1AB4 ADRP X0, 0x78F000
	0x039C1AB8 LDR X0, [X0 + 0x998]
	0x039C1ABC BL 0x1C16CF4
	0x039C1AC0 ADRP X0, 0x791000
	0x039C1AC4 LDR X0, [X0 + 0x950]
	0x039C1AC8 BL 0x1C16CF4
	0x039C1ACC ADRP X0, 0x791000
	0x039C1AD0 LDR X0, [X0 + 0x958]
	0x039C1AD4 BL 0x1C16CF4
	0x039C1AD8 ADRP X0, 0x791000
	0x039C1ADC LDR X0, [X0 + 0xE0]
	0x039C1AE0 BL 0x1C16CF4
	0x039C1AE4 ADRP X0, 0x791000
	0x039C1AE8 LDR X0, [X0 + 0x960]
	0x039C1AEC BL 0x1C16CF4
	0x039C1AF0 ADRP X0, 0x78F000
	0x039C1AF4 LDR X0, [X0 + 0x990]
	0x039C1AF8 BL 0x1C16CF4
	0x039C1AFC ADRP X0, 0x791000
	0x039C1B00 LDR X0, [X0 + 0x968]
	0x039C1B04 BL 0x1C16CF4
	0x039C1B08 ADRP X0, 0x78F000
	0x039C1B0C LDR X0, [X0 + 0x590]
	0x039C1B10 BL 0x1C16CF4
	0x039C1B14 ADRP X0, 0x791000
	0x039C1B18 LDR X0, [X0 + 0x970]
	0x039C1B1C BL 0x1C16CF4
	0x039C1B20 ADRP X0, 0x790000
	0x039C1B24 LDR X0, [X0 + 0xF48]
	0x039C1B28 BL 0x1C16CF4
	0x039C1B2C ADRP X0, 0x732000
	0x039C1B30 LDR X0, [X0 + 0x638]
	0x039C1B34 BL 0x1C16CF4
	0x039C1B38 ADRP X0, 0x78D000
	0x039C1B3C LDR X0, [X0 + 0x48]
	0x039C1B40 BL 0x1C16CF4
	0x039C1B44 ADRP X0, 0x791000
	0x039C1B48 LDR X0, [X0 + 0x1D0]
	0x039C1B4C BL 0x1C16CF4
	0x039C1B50 ADRP X0, 0x791000
	0x039C1B54 LDR X0, [X0 + 0x978]
	0x039C1B58 BL 0x1C16CF4
	0x039C1B5C ADRP X0, 0x791000
	0x039C1B60 LDR X0, [X0 + 0x980]
	0x039C1B64 BL 0x1C16CF4
	0x039C1B68 ADRP X0, 0x791000
	0x039C1B6C LDR X0, [X0 + 0x988]
	0x039C1B70 BL 0x1C16CF4
	0x039C1B74 ADRP X0, 0x791000
	0x039C1B78 LDR X0, [X0 + 0x990]
	0x039C1B7C BL 0x1C16CF4
	0x039C1B80 MOVZ W8, 0x1
	0x039C1B84 STRB W8, [X19 + 0xCAE]
	0x039C1B88 CBZ X24, 0x39C27A4
	0x039C1B8C LDR X0, [X24 + 0xA0]
	0x039C1B90 CBNZ X0, 0x39C1CDC
	0x039C1B94 ADRP X19, 0x790000
	0x039C1B98 LDR X19, [X19 + 0xF48]
	0x039C1B9C LDR X0, [X19]
	0x039C1BA0 LDR W8, [X0 + 0xE0]
	0x039C1BA4 CBNZ W8, 0x39C1BAC
	0x039C1BA8 BL 0x1C16DFC
	0x039C1BAC ADRP X20, 0xA20000
	0x039C1BB0 LDRB W8, [X20 + 0xCB9]
	0x039C1BB4 CBNZ W8, 0x39C1BCC
	0x039C1BB8 ADRP X0, 0x790000
	0x039C1BBC LDR X0, [X0 + 0xF48]
	0x039C1BC0 BL 0x1C16CF4
	0x039C1BC4 MOVZ W8, 0x1
	0x039C1BC8 STRB W8, [X20 + 0xCB9]
	0x039C1BCC LDR X0, [X19]
	0x039C1BD0 LDR W8, [X0 + 0xE0]
	0x039C1BD4 CBNZ W8, 0x39C1BE0
	0x039C1BD8 BL 0x1C16DFC
	0x039C1BDC LDR X0, [X19]
	0x039C1BE0 LDR X8, [X0 + 0xB8]
	0x039C1BE4 LDR X8, [X8 + 0x8]
	0x039C1BE8 CBZ X8, 0x39C27A4
	0x039C1BEC LDR X28, [X24 + 0x10]
	0x039C1BF0 CBZ X28, 0x39C27A4
	0x039C1BF4 LDR X9, [X28 + 0x40]
	0x039C1BF8 CBZ X9, 0x39C1CD8
	0x039C1BFC LDR W9, [X28 + 0x48]
	0x039C1C00 CBZ W9, 0x39C1CD8
	0x039C1C04 LDRB W9, [X24 + 0x2C]
	0x039C1C08 CBZ W9, 0x39C1CD8
	0x039C1C0C ADRP X19, 0x791000
	0x039C1C10 LDR W29, [X8 + 0x34]
	0x039C1C14 LDR X19, [X19 + 0x960]
	0x039C1C18 LDR X0, [X19]
	0x039C1C1C BL 0x1C16F10
	0x039C1C20 ADRP X20, 0x791000
	0x039C1C24 LDR X20, [X20 + 0x950]
	0x039C1C28 MOV X21, X0
	0x039C1C2C LDR X1, [X20]
	0x039C1C30 BL 0x301B7C4
	0x039C1C34 LDR X0, [X19]
	0x039C1C38 BL 0x1C16F10
	0x039C1C3C LDR X1, [X20]
	0x039C1C40 MOV X22, X0
	0x039C1C44 BL 0x301B7C4
	0x039C1C48 ADRP X8, 0x78F000
	0x039C1C4C LDR X8, [X8 + 0x990]
	0x039C1C50 LDR X0, [X8]
	0x039C1C54 BL 0x1C16F10
	0x039C1C58 ADRP X8, 0x78F000
	0x039C1C5C LDR X8, [X8 + 0x998]
	0x039C1C60 MOV X23, X0
	0x039C1C64 LDR X1, [X8]
	0x039C1C68 BL 0x301B7C4
	0x039C1C6C LDR X8, [X24 + 0x20]
	0x039C1C70 ADRP X19, 0x78D000
	0x039C1C74 MOVZ W1, 0x1FF
	0x039C1C78 STR X8, [X31 + 0x58]
	0x039C1C7C LDR X19, [X19 + 0x48]
	0x039C1C80 LDR X0, [X19]
	0x039C1C84 BL 0x1C16D6C
	0x039C1C88 ADRP X20, 0x732000
	0x039C1C8C LDR X20, [X20 + 0x638]
	0x039C1C90 STR X0, [X31 + 0xD8]
	0x039C1C94 MOVZ W1, 0x1FF
	0x039C1C98 LDR X8, [X20]
	0x039C1C9C MOV X0, X8
	0x039C1CA0 BL 0x1C16D6C
	0x039C1CA4 LDR X8, [X20]
	0x039C1CA8 MOV X26, X0
	0x039C1CAC MOVZ W1, 0x1FF
	0x039C1CB0 MOV X0, X8
	0x039C1CB4 BL 0x1C16D6C
	0x039C1CB8 LDR W8, [X28 + 0x78]
	0x039C1CBC MOV X27, X0
	0x039C1CC0 CMP W8, 0x1
	0x039C1CC4 B.LT 0x39C1D0C
	0x039C1CC8 LDR X0, [X20]
	0x039C1CCC MOVZ W1, 0x1FF
	0x039C1CD0 BL 0x1C16D6C
	0x039C1CD4 B 0x39C1D10
	0x039C1CD8 MOV X0, X31
	0x039C1CDC ADD X31, X31, 0x1E0
	0x039C1CE0 LDP X20, X19, [X31 + 0x90]
	0x039C1CE4 LDP X22, X21, [X31 + 0x80]
	0x039C1CE8 LDP X24, X23, [X31 + 0x70]
	0x039C1CEC LDP X26, X25, [X31 + 0x60]
	0x039C1CF0 LDP X28, X27, [X31 + 0x50]
	0x039C1CF4 LDP X29, X30, [X31 + 0x40]
	0x039C1CF8 LDP D9, D8, [X31 + 0x30]
	0x039C1CFC LDP D11, D10, [X31 + 0x20]
	0x039C1D00 LDP D13, D12, [X31 + 0x10]
	0x039C1D04 LDP D15, D14, [X31], #0xA0
	0x039C1D08 RET
	0x039C1D0C MOV X0, X31
	0x039C1D10 LDR W8, [X28 + 0x88]
	0x039C1D14 STR X0, [X31 + 0x110]
	0x039C1D18 CMP W8, 0x1
	0x039C1D1C B.LT 0x39C1D34
	0x039C1D20 LDR X0, [X19]
	0x039C1D24 MOVZ W1, 0x1FF
	0x039C1D28 BL 0x1C16D6C
	0x039C1D2C STR X0, [X31 + 0x118]
	0x039C1D30 B 0x39C1D38
	0x039C1D34 STR X31, [X31 + 0x118]
	0x039C1D38 STR X24, [X31 + 0x38]
	0x039C1D3C ADRP X20, 0x791000
	0x039C1D40 LDR X20, [X20 + 0x968]
	0x039C1D44 LDR X0, [X20]
	0x039C1D48 BL 0x1C16F10
	0x039C1D4C ADRP X24, 0x791000
	0x039C1D50 LDR X24, [X24 + 0x948]
	0x039C1D54 MOV X19, X0
	0x039C1D58 LDR X1, [X24]
	0x039C1D5C BL 0x2FFDCE4
	0x039C1D60 LDR X0, [X20]
	0x039C1D64 BL 0x1C16F10
	0x039C1D68 LDR X1, [X24]
	0x039C1D6C MOV X20, X0
	0x039C1D70 BL 0x2FFDCE4
	0x039C1D74 ADRP X8, 0x791000
	0x039C1D78 LDR X8, [X8 + 0x920]
	0x039C1D7C LDR X0, [X8]
	0x039C1D80 BL 0x1C16F10
	0x039C1D84 MOV X1, X31
	0x039C1D88 MOV X24, X0
	0x039C1D8C BL 0x39C46DC
	0x039C1D90 CBZ X24, 0x39C27A4
	0x039C1D94 STP X21, X22, [X24 + 0x10]
	0x039C1D98 STR X23, [X24 + 0x20]
	0x039C1D9C LDR W8, [X25 + 0xEC]
	0x039C1DA0 MOVZ W9, 0x3F
	0x039C1DA4 MOVZ W10, 0x3F
	0x039C1DA8 MOVK W10, 0x1000000
	0x039C1DAC UBFM W11, W8, 0x1A, 0x19
	0x039C1DB0 BFM W9, W8, 0x1A, 0x19
	0x039C1DB4 CMP W11, 0x0
	0x039C1DB8 CSEL W9, W9, W11, LT
	0x039C1DBC MOVZ W14, 0x800
	0x039C1DC0 CMP W11, W10
	0x039C1DC4 SBFM W9, W9, 0x6, 0x1F
	0x039C1DC8 MOVZ W15, 0x800
	0x039C1DCC STR X24, [X31 + 0x30]
	0x039C1DD0 STR W11, [X31 + 0x54]
	0x039C1DD4 B.GT 0x39C1E04
	0x039C1DD8 ADD W10, W9, 0x1FF
	0x039C1DDC ADD W11, W9, 0x3FE
	0x039C1DE0 CMP W10, 0x0
	0x039C1DE4 CSEL W10, W11, W10, LT
	0x039C1DE8 LDR W11, [X31 + 0x54]
	0x039C1DEC MOVZ W13, 0x8040
	0x039C1DF0 UBFM W12, W9, 0x1E, 0x1D
	0x039C1DF4 SBFM W10, W10, 0x9, 0x1F
	0x039C1DF8 CMP W11, W13
	0x039C1DFC CSEL W15, W12, W14, LT
	0x039C1E00 UBFM W14, W10, 0x1E, 0x1D
	0x039C1E04 LDR W12, [X28 + 0x20]
	0x039C1E08 MOVN W10, 0xFFFC0000
	0x039C1E0C ORR W11, W31, 0x7FFFE
	0x039C1E10 ADD W10, W9, W10
	0x039C1E14 ADD W9, W9, W11
	0x039C1E18 CMP W10, 0x0
	0x039C1E1C CSEL W10, W9, W10, LT
	0x039C1E20 ADD W9, W12, 0x3F
	0x039C1E24 CMP W12, 0x0
	0x039C1E28 CSEL W9, W9, W12, LT
	0x039C1E2C CMP W12, 0x40
	0x039C1E30 B.LT 0x39C2798
	0x039C1E34 LDR X11, [X31 + 0x58]
	0x039C1E38 CBZ X11, 0x39C27A4
	0x039C1E3C MUL W12, W15, W14
	0x039C1E40 STP X31, X12, [X31 + 0x68]
	0x039C1E44 MOV W12, W15
	0x039C1E48 STR X25, [X31 + 0x20]
	0x039C1E4C STR W31, [X31 + 0x64]
	0x039C1E50 STR W31, [X31 + 0xB4]
	0x039C1E54 STR W31, [X31 + 0x84]
	0x039C1E58 STR X12, [X31 + 0xA0]
	0x039C1E5C ADRP X17, 0x791000
	0x039C1E60 ADRP X12, 0xFFFFFFFFFD129000
	0x039C1E64 ADRP X13, 0xFFFFFFFFFD129000
	0x039C1E68 LDR X17, [X17 + 0xE0]
	0x039C1E6C LDR V8, [X12 + 0x44C]
	0x039C1E70 LDR V0, [X13 + 0x240]
	0x039C1E74 SUB W11, W29, 0x1
	0x039C1E78 SBFM W10, W10, 0x12, 0x1F
	0x039C1E7C SBFM W9, W9, 0x6, 0x1F
	0x039C1E80 MOV X16, X31
	0x039C1E84 MOV W24, W31
	0x039C1E88 SCVTF S15, W11
	0x039C1E8C UBFM W10, W10, 0x1E, 0x1D
	0x039C1E90 MOV W9, W9
	0x039C1E94 STR W10, [X31 + 0x1C]
	0x039C1E98 STR X9, [X31 + 0x28]
	0x039C1E9C STP S15, S0, [X31 + 0xD0]
	0x039C1EA0 STP W14, W15, [X31 + 0x4C]
	0x039C1EA4 STR S8, [X31 + 0x10C]
	0x039C1EA8 LDR X9, [X28 + 0x40]
	0x039C1EAC LDR X2, [X17]
	0x039C1EB0 LDR X0, [X31 + 0x58]
	0x039C1EB4 SDIV W29, W16, W8
	0x039C1EB8 ADD X9, X9, X16, 0x4, LSL
	0x039C1EBC LDR W25, [X9 + 0xC]
	0x039C1EC0 MOV W1, W29
	0x039C1EC4 STR X16, [X31 + 0x40]
	0x039C1EC8 BL 0x3120484
	0x039C1ECC UBFM X8, X0, 0x20, 0x3F
	0x039C1ED0 STR X8, [X31 + 0xA8]
	0x039C1ED4 ADD W8, W25, 0x1
	0x039C1ED8 LDR W9, [X31 + 0x54]
	0x039C1EDC LDR W14, [X31 + 0x64]
	0x039C1EE0 LDR W13, [X31 + 0x84]
	0x039C1EE4 LDR W10, [X31 + 0xB4]
	0x039C1EE8 LDR W12, [X31 + 0x4C]
	0x039C1EEC SCVTF S0, W8
	0x039C1EF0 LDR W8, [X31 + 0x50]
	0x039C1EF4 MOV W11, W31
	0x039C1EF8 LDR X11, [X31 + 0x68]
	0x039C1EFC SCVTF S1, W25
	0x039C1F00 MADD W9, W29, W9, W14
	0x039C1F04 MADD W10, W12, W13, W10
	0x039C1F08 STR S1, [X31 + 0xF0]
	0x039C1F0C FDIV S1, S1, S15
	0x039C1F10 MADD W12, W8, W10, W9
	0x039C1F14 FMUL S0, S0, S8
	0x039C1F18 ADD W8, W14, W0
	0x039C1F1C STR X1, [X31 + 0x78]
	0x039C1F20 STR S1, [X31 + 0xE4]
	0x039C1F24 MOV W9, W31
	0x039C1F28 STR S0, [X31 + 0xF4]
	0x039C1F2C STR X8, [X31 + 0xE8]
	0x039C1F30 MOVZ W10, 0xC
	0x039C1F34 STR W13, [X31 + 0x84]
	0x039C1F38 STR W9, [X31 + 0x9C]
	0x039C1F3C ADD W8, W9, W13
	0x039C1F40 LDR X9, [X31 + 0x78]
	0x039C1F44 MOV W14, W31
	0x039C1F48 STP X11, X12, [X31 + 0x88]
	0x039C1F4C STR X11, [X31 + 0xC8]
	0x039C1F50 ADD W8, W8, W9
	0x039C1F54 SCVTF S0, W8
	0x039C1F58 MOV W9, W31
	0x039C1F5C STR S0, [X31 + 0xF8]
	0x039C1F60 STR X12, [X31 + 0x100]
	0x039C1F64 LDR W8, [X31 + 0xB4]
	0x039C1F68 STR W9, [X31 + 0xB8]
	0x039C1F6C MOV X29, X31
	0x039C1F70 ADD W8, W9, W8
	0x039C1F74 LDR X9, [X31 + 0xA8]
	0x039C1F78 ADD W8, W8, W9
	0x039C1F7C SCVTF S0, W8
	0x039C1F80 STR S0, [X31 + 0xFC]
	0x039C1F84 LDR X9, [X31 + 0x100]
	0x039C1F88 LDR X8, [X28 + 0x60]
	0x039C1F8C ADD W25, W9, W29
	0x039C1F90 ADRP X9, 0xA17000
	0x039C1F94 SMADDL X8, X25, X10, X8
	0x039C1F98 LDRB W9, [X9 + 0x793]
	0x039C1F9C LDP S10, S9, [X8]
	0x039C1FA0 LDR V8, [X8 + 0x8]
	0x039C1FA4 CBNZ W9, 0x39C1FC0
	0x039C1FA8 ADRP X0, 0x733000
	0x039C1FAC LDR X0, [X0 + 0x5A8]
	0x039C1FB0 BL 0x1C16CF4
	0x039C1FB4 ADRP X8, 0xA17000
	0x039C1FB8 MOVZ W9, 0x1
	0x039C1FBC STRB W9, [X8 + 0x793]
	0x039C1FC0 ADRP X8, 0x733000
	0x039C1FC4 LDR X8, [X8 + 0x5A8]
	0x039C1FC8 ADRP X9, 0xA17000
	0x039C1FCC LDRB W9, [X9 + 0x85B]
	0x039C1FD0 LDR X8, [X8]
	0x039C1FD4 LDR X8, [X8 + 0xB8]
	0x039C1FD8 LDP S14, S13, [X8]
	0x039C1FDC LDP S12, S11, [X8 + 0x8]
	0x039C1FE0 CBNZ W9, 0x39C1FFC
	0x039C1FE4 ADRP X0, 0x732000
	0x039C1FE8 LDR X0, [X0 + 0x5A0]
	0x039C1FEC BL 0x1C16CF4
	0x039C1FF0 MOVZ W8, 0x1
	0x039C1FF4 ADRP X9, 0xA17000
	0x039C1FF8 STRB W8, [X9 + 0x85B]
	0x039C1FFC ADRP X8, 0x732000
	0x039C2000 LDR X8, [X8 + 0x5A0]
	0x039C2004 LDR V3, [X31 + 0xF4]
	0x039C2008 MOV V4.16B, V13.16B
	0x039C200C MOV V5.16B, V12.16B
	0x039C2010 LDR X8, [X8]
	0x039C2014 MOV V6.16B, V11.16B
	0x039C2018 MOV X0, X31
	0x039C201C LDR X8, [X8 + 0xB8]
	0x039C2020 LDP S0, S1, [X8 + 0xC]
	0x039C2024 LDR V2, [X8 + 0x14]
	0x039C2028 ADD X8, X31, 0x1A0
	0x039C202C FMUL S0, S3, S0
	0x039C2030 FMUL S1, S3, S1
	0x039C2034 FMUL S2, S3, S2
	0x039C2038 STP S1, S2, [X31 + 0x4]
	0x039C203C STR S0, [X31]
	0x039C2040 MOV V0.16B, V10.16B
	0x039C2044 MOV V1.16B, V9.16B
	0x039C2048 MOV V2.16B, V8.16B
	0x039C204C MOV V3.16B, V14.16B
	0x039C2050 BL 0x3C26FA8
	0x039C2054 LDP V0, V1, [X31 + 0x1A0]
	0x039C2058 LDP V2, V3, [X31 + 0x1C0]
	0x039C205C STP V0, V1, [X31 + 0x120]
	0x039C2060 STP V2, V3, [X31 + 0x140]
	0x039C2064 CBZ X19, 0x39C27A4
	0x039C2068 LDP V0, V1, [X31 + 0x120]
	0x039C206C LDP V2, V3, [X31 + 0x140]
	0x039C2070 ADRP X10, 0x790000
	0x039C2074 STP V0, V1, [X31 + 0x160]
	0x039C2078 STP V2, V3, [X31 + 0x180]
	0x039C207C LDR W9, [X19 + 0x1C]
	0x039C2080 LDR X8, [X19 + 0x10]
	0x039C2084 LDR X10, [X10 + 0x930]
	0x039C2088 ADD W9, W9, 0x1
	0x039C208C LDR X10, [X10]
	0x039C2090 STR W9, [X19 + 0x1C]
	0x039C2094 CBZ X8, 0x39C27A4
	0x039C2098 LDRSW X9, [X19 + 0x18]
	0x039C209C LDR W11, [X8 + 0x18]
	0x039C20A0 CMP W9, W11
	0x039C20A4 B.CS 0x39C20C8
	0x039C20A8 ADD W10, W9, 0x1
	0x039C20AC STR W10, [X19 + 0x18]
	0x039C20B0 LDP V0, V1, [X31 + 0x180]
	0x039C20B4 LDP V2, V3, [X31 + 0x160]
	0x039C20B8 ADD X8, X8, X9, 0x6, LSL
	0x039C20BC STP V0, V1, [X8 + 0x40]
	0x039C20C0 STP V2, V3, [X8 + 0x20]
	0x039C20C4 B 0x39C20F0
	0x039C20C8 LDR X8, [X10 + 0x20]
	0x039C20CC LDP V0, V1, [X31 + 0x160]
	0x039C20D0 LDP V2, V3, [X31 + 0x180]
	0x039C20D4 ADD X1, X31, 0x1A0
	0x039C20D8 LDR X8, [X8 + 0xC0]
	0x039C20DC MOV X0, X19
	0x039C20E0 LDR X2, [X8 + 0x70]
	0x039C20E4 STP V0, V1, [X31 + 0x1A0]
	0x039C20E8 STP V2, V3, [X31 + 0x1C0]
	0x039C20EC BL 0x2FFE584
	0x039C20F0 LDR V8, [X31 + 0x10C]
	0x039C20F4 CBZ X26, 0x39C27A4
	0x039C20F8 LDR W8, [X26 + 0x18]
	0x039C20FC CMP W24, W8
	0x039C2100 B.CS 0x39C27A8
	0x039C2104 LDR X9, [X28 + 0x90]
	0x039C2108 SXTW X8, W25
	0x039C210C LDR X25, [X31 + 0xD8]
	0x039C2110 LDR V0, [X9, X8, LSL #2]
	0x039C2114 SXTW X9, W24
	0x039C2118 ADD X10, X26, X9, 0x2, LSL
	0x039C211C STR S0, [X10 + 0x20]
	0x039C2120 CBZ X25, 0x39C27A4
	0x039C2124 LDR W10, [X25 + 0x18]
	0x039C2128 CMP W24, W10
	0x039C212C B.CS 0x39C27A8
	0x039C2130 LDR X10, [X31 + 0xE8]
	0x039C2134 LDR V0, [X31 + 0xFC]
	0x039C2138 ADD X11, X25, X9, 0x4, LSL
	0x039C213C ADD X10, X10, X29
	0x039C2140 SCVTF S1, W10
	0x039C2144 STP S1, S0, [X11 + 0x20]
	0x039C2148 LDR V1, [X31 + 0xF8]
	0x039C214C LDR V0, [X31 + 0xF0]
	0x039C2150 STP S1, S0, [X11 + 0x28]
	0x039C2154 CBZ X27, 0x39C27A4
	0x039C2158 LDR W10, [X27 + 0x18]
	0x039C215C CMP W24, W10
	0x039C2160 B.CS 0x39C27A8
	0x039C2164 LDR V0, [X31 + 0xE4]
	0x039C2168 LDR X11, [X31 + 0x110]
	0x039C216C ADD X10, X27, X9, 0x2, LSL
	0x039C2170 STR S0, [X10 + 0x20]
	0x039C2174 CBZ X11, 0x39C2194
	0x039C2178 LDR W10, [X11 + 0x18]
	0x039C217C CMP W24, W10
	0x039C2180 B.CS 0x39C27A8
	0x039C2184 LDR X10, [X28 + 0x70]
	0x039C2188 LDR V0, [X10, X8, LSL #2]
	0x039C218C ADD X10, X11, X9, 0x2, LSL
	0x039C2190 STR S0, [X10 + 0x20]
	0x039C2194 LDR X10, [X31 + 0x118]
	0x039C2198 CBZ X10, 0x39C2434
	0x039C219C LDR X11, [X31 + 0x118]
	0x039C21A0 LDR W10, [X11 + 0x18]
	0x039C21A4 CMP W24, W10
	0x039C21A8 B.CS 0x39C27A8
	0x039C21AC LDR X10, [X28 + 0x80]
	0x039C21B0 MOVZ W12, 0xC
	0x039C21B4 ADD X9, X11, X9, 0x4, LSL
	0x039C21B8 MADD X10, X8, X12, X10
	0x039C21BC LDP S12, S13, [X10]
	0x039C21C0 LDR V14, [X10 + 0x8]
	0x039C21C4 STR W31, [X9 + 0x2C]
	0x039C21C8 FMUL S0, S12, S12
	0x039C21CC FMUL S1, S13, S13
	0x039C21D0 FADD S0, S0, S1
	0x039C21D4 FMUL S1, S14, S14
	0x039C21D8 FADD S15, S0, S1
	0x039C21DC LDR V0, [X31 + 0xD4]
	0x039C21E0 STP S12, S13, [X9 + 0x20]
	0x039C21E4 STR S14, [X9 + 0x28]
	0x039C21E8 FCMP S15, S0
	0x039C21EC B.PL 0x39C229C
	0x039C21F0 ADRP X8, 0xA16000
	0x039C21F4 LDRB W8, [X8 + 0xAC0]
	0x039C21F8 CBNZ W8, 0x39C2214
	0x039C21FC ADRP X0, 0x735000
	0x039C2200 LDR X0, [X0 + 0x270]
	0x039C2204 BL 0x1C16CF4
	0x039C2208 MOVZ W8, 0x1
	0x039C220C ADRP X9, 0xA16000
	0x039C2210 STRB W8, [X9 + 0xAC0]
	0x039C2214 ADRP X8, 0x735000
	0x039C2218 LDR X8, [X8 + 0x270]
	0x039C221C LDR V15, [X31 + 0xD0]
	0x039C2220 LDR X8, [X8]
	0x039C2224 LDR X8, [X8 + 0xB8]
	0x039C2228 LDP V1, V0, [X8 + 0x60]
	0x039C222C LDP V2, V3, [X8 + 0x40]
	0x039C2230 STP V1, V0, [X31 + 0x140]
	0x039C2234 STP V2, V3, [X31 + 0x120]
	0x039C2238 CBZ X20, 0x39C27A4
	0x039C223C LDP V0, V1, [X31 + 0x120]
	0x039C2240 LDP V2, V3, [X31 + 0x140]
	0x039C2244 ADRP X10, 0x790000
	0x039C2248 STP V0, V1, [X31 + 0x160]
	0x039C224C STP V2, V3, [X31 + 0x180]
	0x039C2250 LDR W9, [X20 + 0x1C]
	0x039C2254 LDR X8, [X20 + 0x10]
	0x039C2258 LDR X10, [X10 + 0x930]
	0x039C225C ADD W9, W9, 0x1
	0x039C2260 LDR X10, [X10]
	0x039C2264 STR W9, [X20 + 0x1C]
	0x039C2268 CBZ X8, 0x39C27A4
	0x039C226C LDRSW X9, [X20 + 0x18]
	0x039C2270 LDR W11, [X8 + 0x18]
	0x039C2274 CMP W9, W11
	0x039C2278 B.CS 0x39C23D8
	0x039C227C ADD W10, W9, 0x1
	0x039C2280 STR W10, [X20 + 0x18]
	0x039C2284 LDP V0, V1, [X31 + 0x180]
	0x039C2288 LDP V2, V3, [X31 + 0x160]
	0x039C228C ADD X8, X8, X9, 0x6, LSL
	0x039C2290 STP V0, V1, [X8 + 0x40]
	0x039C2294 STP V2, V3, [X8 + 0x20]
	0x039C2298 B 0x39C2434
	0x039C229C LDR X9, [X28 + 0x60]
	0x039C22A0 FNEG S0, S12
	0x039C22A4 FNEG S1, S13
	0x039C22A8 FNEG S2, S14
	0x039C22AC MADD X8, X8, X12, X9
	0x039C22B0 LDP S8, S9, [X8]
	0x039C22B4 LDR V10, [X8 + 0x8]
	0x039C22B8 MOV X0, X31
	0x039C22BC BL 0x3C2A8C4
	0x039C22C0 ADRP X8, 0xA16000
	0x039C22C4 LDRB W8, [X8 + 0x784]
	0x039C22C8 MOV V4.16B, V0.16B
	0x039C22CC MOV V5.16B, V1.16B
	0x039C22D0 MOV V6.16B, V2.16B
	0x039C22D4 MOV V11.16B, V3.16B
	0x039C22D8 CBNZ W8, 0x39C2304
	0x039C22DC ADRP X0, 0x731000
	0x039C22E0 LDR X0, [X0 + 0x5A8]
	0x039C22E4 STP S5, S4, [X31 + 0xC0]
	0x039C22E8 STR S6, [X31 + 0xBC]
	0x039C22EC BL 0x1C16CF4
	0x039C22F0 LDP S6, S5, [X31 + 0xBC]
	0x039C22F4 LDR V4, [X31 + 0xC4]
	0x039C22F8 MOVZ W8, 0x1
	0x039C22FC ADRP X9, 0xA16000
	0x039C2300 STRB W8, [X9 + 0x784]
	0x039C2304 ADRP X8, 0x731000
	0x039C2308 LDR X8, [X8 + 0x5A8]
	0x039C230C LDR X0, [X8]
	0x039C2310 LDR W8, [X0 + 0xE0]
	0x039C2314 CBNZ W8, 0x39C232C
	0x039C2318 STP S5, S4, [X31 + 0xC0]
	0x039C231C STR S6, [X31 + 0xBC]
	0x039C2320 BL 0x1C16DFC
	0x039C2324 LDP S6, S5, [X31 + 0xBC]
	0x039C2328 LDR V4, [X31 + 0xC4]
	0x039C232C FSQRT S3, S15
	0x039C2330 FADD S0, S12, S8
	0x039C2334 FADD S1, S13, S9
	0x039C2338 FADD S2, S14, S10
	0x039C233C STR S3, [X31 + 0x8]
	0x039C2340 ADD X8, X31, 0x1A0
	0x039C2344 ORR X9, X31, 0x3F0000003F000000
	0x039C2348 MOV V3.16B, V4.16B
	0x039C234C MOV V4.16B, V5.16B
	0x039C2350 MOV V5.16B, V6.16B
	0x039C2354 MOV V6.16B, V11.16B
	0x039C2358 MOV X0, X31
	0x039C235C STR X9, [X31]
	0x039C2360 BL 0x3C26FA8
	0x039C2364 LDP V0, V1, [X31 + 0x1A0]
	0x039C2368 LDP V2, V3, [X31 + 0x1C0]
	0x039C236C STP V0, V1, [X31 + 0x120]
	0x039C2370 STP V2, V3, [X31 + 0x140]
	0x039C2374 CBZ X20, 0x39C27A4
	0x039C2378 LDP V0, V1, [X31 + 0x120]
	0x039C237C LDP V2, V3, [X31 + 0x140]
	0x039C2380 ADRP X10, 0x790000
	0x039C2384 STP V0, V1, [X31 + 0x160]
	0x039C2388 STP V2, V3, [X31 + 0x180]
	0x039C238C LDR W9, [X20 + 0x1C]
	0x039C2390 LDR X8, [X20 + 0x10]
	0x039C2394 LDR X10, [X10 + 0x930]
	0x039C2398 ADD W9, W9, 0x1
	0x039C239C LDR X10, [X10]
	0x039C23A0 STR W9, [X20 + 0x1C]
	0x039C23A4 CBZ X8, 0x39C27A4
	0x039C23A8 LDRSW X9, [X20 + 0x18]
	0x039C23AC LDR W11, [X8 + 0x18]
	0x039C23B0 CMP W9, W11
	0x039C23B4 B.CS 0x39C2404
	0x039C23B8 ADD W10, W9, 0x1
	0x039C23BC STR W10, [X20 + 0x18]
	0x039C23C0 LDP V0, V1, [X31 + 0x180]
	0x039C23C4 LDP V2, V3, [X31 + 0x160]
	0x039C23C8 ADD X8, X8, X9, 0x6, LSL
	0x039C23CC STP V0, V1, [X8 + 0x40]
	0x039C23D0 STP V2, V3, [X8 + 0x20]
	0x039C23D4 B 0x39C242C
	0x039C23D8 LDR X8, [X10 + 0x20]
	0x039C23DC LDP V0, V1, [X31 + 0x160]
	0x039C23E0 LDP V2, V3, [X31 + 0x180]
	0x039C23E4 ADD X1, X31, 0x1A0
	0x039C23E8 LDR X8, [X8 + 0xC0]
	0x039C23EC MOV X0, X20
	0x039C23F0 LDR X2, [X8 + 0x70]
	0x039C23F4 STP V0, V1, [X31 + 0x1A0]
	0x039C23F8 STP V2, V3, [X31 + 0x1C0]
	0x039C23FC BL 0x2FFE584
	0x039C2400 B 0x39C2434
	0x039C2404 LDR X8, [X10 + 0x20]
	0x039C2408 LDP V0, V1, [X31 + 0x160]
	0x039C240C LDP V2, V3, [X31 + 0x180]
	0x039C2410 ADD X1, X31, 0x1A0
	0x039C2414 LDR X8, [X8 + 0xC0]
	0x039C2418 MOV X0, X20
	0x039C241C LDR X2, [X8 + 0x70]
	0x039C2420 STP V0, V1, [X31 + 0x1A0]
	0x039C2424 STP V2, V3, [X31 + 0x1C0]
	0x039C2428 BL 0x2FFE584
	0x039C242C LDR V15, [X31 + 0xD0]
	0x039C2430 LDR V8, [X31 + 0x10C]
	0x039C2434 LDR W8, [X19 + 0x18]
	0x039C2438 CMP W8, 0x1FE
	0x039C243C B.GT 0x39C2458
	0x039C2440 LDR W8, [X28 + 0x20]
	0x039C2444 LDR X9, [X31 + 0xC8]
	0x039C2448 SUB W8, W8, 0x1
	0x039C244C ADD X9, X9, X29
	0x039C2450 CMP W9, W8
	0x039C2454 B.NE 0x39C2694
	0x039C2458 ADRP X8, 0x78E000
	0x039C245C LDR X8, [X8 + 0x590]
	0x039C2460 LDR X0, [X8]
	0x039C2464 BL 0x1C16F10
	0x039C2468 MOV X1, X31
	0x039C246C MOV X24, X0
	0x039C2470 BL 0x3C122EC
	0x039C2474 CBZ X24, 0x39C27A4
	0x039C2478 ADRP X8, 0x790000
	0x039C247C LDR X8, [X8 + 0x1D0]
	0x039C2480 MOV X0, X24
	0x039C2484 MOV X2, X26
	0x039C2488 MOV X3, X31
	0x039C248C LDR X1, [X8]
	0x039C2490 BL 0x3C128D8
	0x039C2494 ADRP X8, 0x790000
	0x039C2498 LDR X8, [X8 + 0x990]
	0x039C249C LDR X2, [X31 + 0x110]
	0x039C24A0 MOV X0, X24
	0x039C24A4 MOV X3, X31
	0x039C24A8 LDR X1, [X8]
	0x039C24AC BL 0x3C128D8
	0x039C24B0 ADRP X8, 0x790000
	0x039C24B4 LDR X8, [X8 + 0x978]
	0x039C24B8 MOV X0, X24
	0x039C24BC MOV X2, X27
	0x039C24C0 MOV X3, X31
	0x039C24C4 LDR X1, [X8]
	0x039C24C8 BL 0x3C128D8
	0x039C24CC ADRP X8, 0x790000
	0x039C24D0 LDR X8, [X8 + 0x980]
	0x039C24D4 MOV X0, X24
	0x039C24D8 MOV X2, X25
	0x039C24DC MOV X3, X31
	0x039C24E0 LDR X1, [X8]
	0x039C24E4 BL 0x3C12940
	0x039C24E8 LDR X2, [X31 + 0x118]
	0x039C24EC CBZ X2, 0x39C2508
	0x039C24F0 ADRP X8, 0x790000
	0x039C24F4 LDR X8, [X8 + 0x988]
	0x039C24F8 MOV X0, X24
	0x039C24FC MOV X3, X31
	0x039C2500 LDR X1, [X8]
	0x039C2504 BL 0x3C12940
	0x039C2508 CBZ X23, 0x39C27A4
	0x039C250C ADRP X9, 0x78E000
	0x039C2510 LDR W10, [X23 + 0x1C]
	0x039C2514 LDR X8, [X23 + 0x10]
	0x039C2518 LDR X9, [X9 + 0xE30]
	0x039C251C ADD W10, W10, 0x1
	0x039C2520 LDR X9, [X9]
	0x039C2524 STR W10, [X23 + 0x1C]
	0x039C2528 CBZ X8, 0x39C27A4
	0x039C252C LDRSW X10, [X23 + 0x18]
	0x039C2530 LDR W11, [X8 + 0x18]
	0x039C2534 CMP W10, W11
	0x039C2538 B.CS 0x39C2550
	0x039C253C ADD W9, W10, 0x1
	0x039C2540 ADD X8, X8, X10, 0x3, LSL
	0x039C2544 STR W9, [X23 + 0x18]
	0x039C2548 STR X24, [X8 + 0x20]
	0x039C254C B 0x39C2568
	0x039C2550 LDR X8, [X9 + 0x20]
	0x039C2554 MOV X0, X23
	0x039C2558 MOV X1, X24
	0x039C255C LDR X8, [X8 + 0xC0]
	0x039C2560 LDR X2, [X8 + 0x70]
	0x039C2564 BL 0x301BF90
	0x039C2568 ADRP X24, 0x790000
	0x039C256C LDR X24, [X24 + 0x940]
	0x039C2570 MOV X0, X19
	0x039C2574 LDR X1, [X24]
	0x039C2578 BL 0x3000878
	0x039C257C CBZ X21, 0x39C27A4
	0x039C2580 ADRP X9, 0x790000
	0x039C2584 LDR W10, [X21 + 0x1C]
	0x039C2588 LDR X8, [X21 + 0x10]
	0x039C258C LDR X9, [X9 + 0x928]
	0x039C2590 ADD W10, W10, 0x1
	0x039C2594 LDR X9, [X9]
	0x039C2598 STR W10, [X21 + 0x1C]
	0x039C259C CBZ X8, 0x39C27A4
	0x039C25A0 LDRSW X10, [X21 + 0x18]
	0x039C25A4 LDR W11, [X8 + 0x18]
	0x039C25A8 MOV X1, X0
	0x039C25AC CMP W10, W11
	0x039C25B0 B.CS 0x39C25C8
	0x039C25B4 ADD W9, W10, 0x1
	0x039C25B8 ADD X8, X8, X10, 0x3, LSL
	0x039C25BC STR W9, [X21 + 0x18]
	0x039C25C0 STR X1, [X8 + 0x20]
	0x039C25C4 B 0x39C25DC
	0x039C25C8 LDR X8, [X9 + 0x20]
	0x039C25CC MOV X0, X21
	0x039C25D0 LDR X8, [X8 + 0xC0]
	0x039C25D4 LDR X2, [X8 + 0x70]
	0x039C25D8 BL 0x301BF90
	0x039C25DC ADRP X8, 0x790000
	0x039C25E0 LDR X8, [X8 + 0x968]
	0x039C25E4 LDR X0, [X8]
	0x039C25E8 BL 0x1C16F10
	0x039C25EC ADRP X8, 0x790000
	0x039C25F0 LDR X8, [X8 + 0x948]
	0x039C25F4 MOV X19, X0
	0x039C25F8 LDR X1, [X8]
	0x039C25FC BL 0x2FFDCE4
	0x039C2600 CBZ X19, 0x39C27A4
	0x039C2604 LDR W8, [X19 + 0x1C]
	0x039C2608 ADD W8, W8, 0x1
	0x039C260C STP W31, W8, [X19 + 0x18]
	0x039C2610 CBZ X20, 0x39C27A4
	0x039C2614 LDR X1, [X24]
	0x039C2618 MOV X0, X20
	0x039C261C BL 0x3000878
	0x039C2620 CBZ X22, 0x39C27A4
	0x039C2624 ADRP X9, 0x790000
	0x039C2628 LDR W10, [X22 + 0x1C]
	0x039C262C LDR X8, [X22 + 0x10]
	0x039C2630 LDR X9, [X9 + 0x928]
	0x039C2634 ADD W10, W10, 0x1
	0x039C2638 LDR X9, [X9]
	0x039C263C STR W10, [X22 + 0x1C]
	0x039C2640 CBZ X8, 0x39C27A4
	0x039C2644 LDRSW X10, [X22 + 0x18]
	0x039C2648 LDR W11, [X8 + 0x18]
	0x039C264C MOV X1, X0
	0x039C2650 CMP W10, W11
	0x039C2654 B.CS 0x39C266C
	0x039C2658 ADD W9, W10, 0x1
	0x039C265C ADD X8, X8, X10, 0x3, LSL
	0x039C2660 STR W9, [X22 + 0x18]
	0x039C2664 STR X1, [X8 + 0x20]
	0x039C2668 B 0x39C2680
	0x039C266C LDR X8, [X9 + 0x20]
	0x039C2670 MOV X0, X22
	0x039C2674 LDR X8, [X8 + 0xC0]
	0x039C2678 LDR X2, [X8 + 0x70]
	0x039C267C BL 0x301BF90
	0x039C2680 LDR W8, [X20 + 0x1C]
	0x039C2684 MOV W24, W31
	0x039C2688 ADD W8, W8, 0x1
	0x039C268C STP W31, W8, [X20 + 0x18]
	0x039C2690 B 0x39C2698
	0x039C2694 ADD W24, W24, 0x1
	0x039C2698 ADD X29, X29, 0x1
	0x039C269C MOVZ W10, 0xC
	0x039C26A0 CMP X29, 0x4
	0x039C26A4 B.NE 0x39C1F84
	0x039C26A8 LDR X8, [X31 + 0xA0]
	0x039C26AC LDR X11, [X31 + 0x100]
	0x039C26B0 LDR W9, [X31 + 0xB8]
	0x039C26B4 ADD X11, X11, X8
	0x039C26B8 LDR X8, [X31 + 0xC8]
	0x039C26BC ADD W9, W9, 0x1
	0x039C26C0 CMP W9, 0x4
	0x039C26C4 STR X11, [X31 + 0x100]
	0x039C26C8 ADD X8, X8, 0x4
	0x039C26CC STR X8, [X31 + 0xC8]
	0x039C26D0 B.NE 0x39C1F64
	0x039C26D4 LDR W9, [X31 + 0x9C]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xA22000
	015 Move X21, 0x793000
	016 Move W8, [X19+3241]
	017 Move X21, [X21+1632]
	018 Move X20, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {368}
	024 Move X0, 0x734000
	025 Move X0, [X0+3368]
	026 Call 0x1C17CF4
	027 Move X0, 0x736000
	028 Move X0, [X0+1456]
	029 Call 0x1C17CF4
	030 Move X0, 0x738000
	031 Move X0, [X0+2816]
	032 Call 0x1C17CF4
	033 Move X0, 0x792000
	034 Move X0, [X0+1112]
	035 Call 0x1C17CF4
	036 Move X0, 0x793000
	037 Move X0, [X0+1640]
	038 Call 0x1C17CF4
	039 Move X0, 0x734000
	040 Move X0, [X0+2416]
	041 Call 0x1C17CF4
	042 Move X0, 0x791000
	043 Move X0, [X0+1896]
	044 Call 0x1C17CF4
	045 Move X0, 0x791000
	046 Move X0, [X0+1880]
	047 Call 0x1C17CF4
	048 Move X0, 0x791000
	049 Move X0, [X0+1912]
	050 Call 0x1C17CF4
	051 Move X0, 0x793000
	052 Move X0, [X0+1648]
	053 Call 0x1C17CF4
	054 Move X0, 0x792000
	055 Move X0, [X0+224]
	056 Call 0x1C17CF4
	057 Move X0, 0x792000
	058 Move X0, [X0+232]
	059 Call 0x1C17CF4
	060 Move X0, 0x792000
	061 Move X0, [X0+240]
	062 Call 0x1C17CF4
	063 Move X0, 0x793000
	064 Move X0, [X0+1656]
	065 Call 0x1C17CF4
	066 Move X0, 0x791000
	067 Move X0, [X0+1920]
	068 Call 0x1C17CF4
	069 Move X0, 0x793000
	070 Move X0, [X0+1664]
	071 Call 0x1C17CF4
	072 Move X0, 0x791000
	073 Move X0, [X0+1928]
	074 Call 0x1C17CF4
	075 Move X0, 0x792000
	076 Move X0, [X0+248]
	077 Call 0x1C17CF4
	078 Move X0, 0x793000
	079 Move X0, [X0+1672]
	080 Call 0x1C17CF4
	081 Move X0, 0x793000
	082 Move X0, [X0+1680]
	083 Call 0x1C17CF4
	084 Move X0, 0x73D000
	085 Move X0, [X0+2368]
	086 Call 0x1C17CF4
	087 Move X0, 0x77A000
	088 Move X0, [X0+1696]
	089 Call 0x1C17CF4
	090 Move X0, 0x793000
	091 Move X0, [X0+1688]
	092 Call 0x1C17CF4
	093 Move X0, 0x791000
	094 Move X0, [X0+1936]
	095 Call 0x1C17CF4
	096 Move X0, 0x791000
	097 Move X0, [X0+1944]
	098 Call 0x1C17CF4
	099 Move X0, 0x791000
	100 Move X0, [X0+1872]
	101 Call 0x1C17CF4
	102 Move X0, 0x793000
	103 Move X0, [X0+1696]
	104 Call 0x1C17CF4
	105 Move X0, 0x791000
	106 Move X0, [X0+1864]
	107 Call 0x1C17CF4
	108 Move X0, 0x734000
	109 Move X0, [X0+1432]
	110 Call 0x1C17CF4
	111 Move X0, 0x791000
	112 Move X0, [X0+1952]
	113 Call 0x1C17CF4
	114 Move X0, 0x791000
	115 Move X0, [X0+1960]
	116 Call 0x1C17CF4
	117 Move X0, 0x792000
	118 Move X0, [X0+3912]
	119 Call 0x1C17CF4
	120 Move X0, 0x734000
	121 Move X0, [X0+1728]
	122 Call 0x1C17CF4
	123 Move X0, 0x793000
	124 Move X0, [X0+1704]
	125 Call 0x1C17CF4
	126 Move X0, 0x793000
	127 Move X0, [X0+1712]
	128 Call 0x1C17CF4
	129 Move X0, 0x793000
	130 Move X0, [X0+1720]
	131 Call 0x1C17CF4
	132 Move X0, 0x793000
	133 Move X0, [X0+1728]
	134 Call 0x1C17CF4
	135 Move X0, 0x793000
	136 Move X0, [X0+1736]
	137 Call 0x1C17CF4
	138 Move X0, 0x793000
	139 Move X0, [X0+1744]
	140 Call 0x1C17CF4
	141 Move X0, 0x793000
	142 Move X0, [X0+1752]
	143 Call 0x1C17CF4
	144 Move X0, 0x793000
	145 Move X0, [X0+1760]
	146 Call 0x1C17CF4
	147 Move X0, 0x793000
	148 Move X0, [X0+1768]
	149 Call 0x1C17CF4
	150 Move X0, 0x793000
	151 Move X0, [X0+1776]
	152 Call 0x1C17CF4
	153 Move X0, 0x793000
	154 Move X0, [X0+1784]
	155 Call 0x1C17CF4
	156 Move X0, 0x793000
	157 Move X0, [X0+1792]
	158 Call 0x1C17CF4
	159 Move X0, 0x793000
	160 Move X0, [X0+1800]
	161 Call 0x1C17CF4
	162 Move X0, 0x793000
	163 Move X0, [X0+1808]
	164 Call 0x1C17CF4
	165 Move X0, 0x793000
	166 Move X0, [X0+1816]
	167 Call 0x1C17CF4
	168 Move X0, 0x793000
	169 Move X0, [X0+1824]
	170 Call 0x1C17CF4
	171 Move X0, 0x793000
	172 Move X0, [X0+1832]
	173 Call 0x1C17CF4
	174 Move X0, 0x793000
	175 Move X0, [X0+1840]
	176 Call 0x1C17CF4
	177 Move X0, 0x793000
	178 Move X0, [X0+1848]
	179 Call 0x1C17CF4
	180 Move X0, 0x793000
	181 Move X0, [X0+1856]
	182 Call 0x1C17CF4
	183 Move X0, 0x793000
	184 Move X0, [X0+1864]
	185 Call 0x1C17CF4
	186 Move X0, 0x793000
	187 Move X0, [X0+1872]
	188 Call 0x1C17CF4
	189 Move X0, 0x793000
	190 Move X0, [X0+1880]
	191 Call 0x1C17CF4
	192 Move X0, 0x793000
	193 Move X0, [X0+1888]
	194 Call 0x1C17CF4
	195 Move X0, 0x793000
	196 Move X0, [X0+1896]
	197 Call 0x1C17CF4
	198 Move X0, 0x793000
	199 Move X0, [X0+1904]
	200 Call 0x1C17CF4
	201 Move X0, 0x793000
	202 Move X0, [X0+1912]
	203 Call 0x1C17CF4
	204 Move X0, 0x793000
	205 Move X0, [X0+1920]
	206 Call 0x1C17CF4
	207 Move X0, 0x793000
	208 Move X0, [X0+1928]
	209 Call 0x1C17CF4
	210 Move X0, 0x793000
	211 Move X0, [X0+1936]
	212 Call 0x1C17CF4
	213 Move X0, 0x793000
	214 Move X0, [X0+1944]
	215 Call 0x1C17CF4
	216 Move X0, 0x793000
	217 Move X0, [X0+1952]
	218 Call 0x1C17CF4
	219 Move X0, 0x793000
	220 Move X0, [X0+1960]
	221 Call 0x1C17CF4
	222 Move X0, 0x793000
	223 Move X0, [X0+1968]
	224 Call 0x1C17CF4
	225 Move X0, 0x793000
	226 Move X0, [X0+1976]
	227 Call 0x1C17CF4
	228 Move X0, 0x793000
	229 Move X0, [X0+1984]
	230 Call 0x1C17CF4
	231 Move X0, 0x793000
	232 Move X0, [X0+1992]
	233 Call 0x1C17CF4
	234 Move X0, 0x793000
	235 Move X0, [X0+2000]
	236 Call 0x1C17CF4
	237 Move X0, 0x793000
	238 Move X0, [X0+2008]
	239 Call 0x1C17CF4
	240 Move X0, 0x793000
	241 Move X0, [X0+2016]
	242 Call 0x1C17CF4
	243 Move X0, 0x793000
	244 Move X0, [X0+2024]
	245 Call 0x1C17CF4
	246 Move X0, 0x793000
	247 Move X0, [X0+2032]
	248 Call 0x1C17CF4
	249 Move X0, 0x793000
	250 Move X0, [X0+2040]
	251 Call 0x1C17CF4
	252 Move X0, 0x793000
	253 Move X0, [X0+2048]
	254 Call 0x1C17CF4
	255 Move X0, 0x793000
	256 Move X0, [X0+2056]
	257 Call 0x1C17CF4
	258 Move X0, 0x793000
	259 Move X0, [X0+2064]
	260 Call 0x1C17CF4
	261 Move X0, 0x793000
	262 Move X0, [X0+2072]
	263 Call 0x1C17CF4
	264 Move X0, 0x793000
	265 Move X0, [X0+2080]
	266 Call 0x1C17CF4
	267 Move X0, 0x793000
	268 Move X0, [X0+2088]
	269 Call 0x1C17CF4
	270 Move X0, 0x793000
	271 Move X0, [X0+2096]
	272 Call 0x1C17CF4
	273 Move X0, 0x793000
	274 Move X0, [X0+2104]
	275 Call 0x1C17CF4
	276 Move X0, 0x793000
	277 Move X0, [X0+2112]
	278 Call 0x1C17CF4
	279 Move X0, 0x793000
	280 Move X0, [X0+2120]
	281 Call 0x1C17CF4
	282 Move X0, 0x793000
	283 Move X0, [X0+2128]
	284 Call 0x1C17CF4
	285 Move X0, 0x793000
	286 Move X0, [X0+2136]
	287 Call 0x1C17CF4
	288 Move X0, 0x793000
	289 Move X0, [X0+2144]
	290 Call 0x1C17CF4
	291 Move X0, 0x793000
	292 Move X0, [X0+2152]
	293 Call 0x1C17CF4
	294 Move X0, 0x793000
	295 Move X0, [X0+2160]
	296 Call 0x1C17CF4
	297 Move X0, 0x793000
	298 Move X0, [X0+1632]
	299 Call 0x1C17CF4
	300 Move X0, 0x793000
	301 Move X0, [X0+1304]
	302 Call 0x1C17CF4
	303 Move X0, 0x793000
	304 Move X0, [X0+2168]
	305 Call 0x1C17CF4
	306 Move X0, 0x793000
	307 Move X0, [X0+2176]
	308 Call 0x1C17CF4
	309 Move X0, 0x793000
	310 Move X0, [X0+2184]
	311 Call 0x1C17CF4
	312 Move X0, 0x793000
	313 Move X0, [X0+2192]
	314 Call 0x1C17CF4
	315 Move X0, 0x793000
	316 Move X0, [X0+2200]
	317 Call 0x1C17CF4
	318 Move X0, 0x793000
	319 Move X0, [X0+2208]
	320 Call 0x1C17CF4
	321 Move X0, 0x793000
	322 Move X0, [X0+2216]
	323 Call 0x1C17CF4
	324 Move X0, 0x793000
	325 Move X0, [X0+2224]
	326 Call 0x1C17CF4
	327 Move X0, 0x793000
	328 Move X0, [X0+2232]
	329 Call 0x1C17CF4
	330 Move X0, 0x793000
	331 Move X0, [X0+2240]
	332 Call 0x1C17CF4
	333 Move X0, 0x793000
	334 Move X0, [X0+2248]
	335 Call 0x1C17CF4
	336 Move X0, 0x793000
	337 Move X0, [X0+2256]
	338 Call 0x1C17CF4
	339 Move X0, 0x793000
	340 Move X0, [X0+2264]
	341 Call 0x1C17CF4
	342 Move X0, 0x793000
	343 Move X0, [X0+2272]
	344 Call 0x1C17CF4
	345 Move X0, 0x793000
	346 Move X0, [X0+2280]
	347 Call 0x1C17CF4
	348 Move X0, 0x793000
	349 Move X0, [X0+2288]
	350 Call 0x1C17CF4
	351 Move X0, 0x793000
	352 Move X0, [X0+2296]
	353 Call 0x1C17CF4
	354 Move X0, 0x793000
	355 Move X0, [X0+2304]
	356 Call 0x1C17CF4
	357 Move X0, 0x793000
	358 Move X0, [X0+2312]
	359 Call 0x1C17CF4
	360 Move X0, 0x793000
	361 Move X0, [X0+2320]
	362 Call 0x1C17CF4
	363 Move X0, 0x793000
	364 Move X0, [X0+2328]
	365 Call 0x1C17CF4
	366 Move W8, 1
	367 Move [X19+3241], W8
	368 Move X0, [X21]
	369 Call 0x1C17F10
	370 Move X1, X31
	371 Move X21, X0
	372 Call <>c__DisplayClass171_0..ctor, X0
	373 Compare X21, 0
	374 JumpIfEqual {2377}
	375 Move [X21+16], X23
	376 Move V0, [X20+32]
	377 Move V1, [X20+48]
	378 Move V2, [X20]
	379 Move V3, [X20+16]
	380 Move X8, 0x791000
	381 Move X8, [X8+1864]
	382 Move [X21+72], V1
	383 Move [X21+56], V0
	384 Move [X21+40], V3
	385 Move [X21+24], V2
	386 Move X0, [X8]
	387 Move X19, 0x791000
	388 Move X22, 0x791000
	389 Move X19, [X19+1872]
	390 Move X22, [X22+1880]
	391 Call 0x1C17F10
	392 Move X1, [X19]
	393 Move [X31+24], X0
	394 Call List`1<Object>..ctor, X0
	395 Move X0, [X22]
	396 Call 0x1C17F10
	397 Move X1, X31
	398 Move X26, X0
	399 Call Container..ctor, X0
	400 Compare X26, 0
	401 JumpIfEqual {2377}
	402 Move X8, 0x793000
	403 Move X8, [X8+2272]
	404 Move X9, 0x791000
	405 Move X20, X23
	406 Move X8, [X8]
	407 Move X9, [X9+1896]
	408 Move X23, [X26+72]
	409 Move [X26+40], X8
	410 Move X0, [X9]
	411 Call 0x1C17F10
	412 Move X1, X31
	413 Move X24, X0
	414 Call BoolField..ctor, X0
	415 Compare X24, 0
	416 JumpIfEqual {2377}
	417 Move X8, 0x793000
	418 Move X8, [X8+2200]
	419 Move X9, 0x73D000
	420 Move X19, 0x793000
	421 Move X27, 0x734000
	422 Move X8, [X8]
	423 Move X9, [X9+2368]
	424 Move X19, [X19+1960]
	425 Move X27, [X27+3368]
	426 Move [X24+40], X8
	427 Move X0, [X9]
	428 Move X22, 0x793000
	429 Move X29, 0x793000
	430 Move X28, 0x793000
	431 Move X22, [X22+2016]
	432 Move X29, [X29+1640]
	433 Move X28, [X28+2152]
	434 Call 0x1C17F10
	435 Move X2, [X19]
	436 Move X1, X21
	437 Move X3, X31
	438 Move X25, X0
	439 Call Func`1<Boolean>..ctor, X0, X1, X2
	440 Move [X24+72], X25
	441 Move X0, [X27]
	442 Call 0x1C17F10
	443 Move X2, [X22]
	444 Move X1, X21
	445 Move X3, X31
	446 Move X25, X0
	447 Call Action`1<Boolean>..ctor, X0, X1, X2
	448 Move [X24+80], X25
	449 Move X0, [X29]
	450 Call 0x1C17F10
	451 Move X2, [X28]
	452 Move X1, X21
	453 Move X3, X31
	454 Move X25, X0
	455 Call Action`2<Object, Boolean>..ctor, X0, X1, X2
	456 Move [X24+88], X25
	457 Compare X23, 0
	458 JumpIfEqual {2377}
	459 Move X28, 0x791000
	460 Move X28, [X28+1952]
	461 Move X0, X23
	462 Move X1, X24
	463 Move X2, [X28]
	464 Call 0x2498EC8, X0, X1
	465 Move X8, 0x791000
	466 Move X23, [X26+72]
	467 Move X8, [X8+1896]
	468 Move X0, [X8]
	469 Call 0x1C17F10
	470 Move X1, X31
	471 Move X24, X0
	472 Call BoolField..ctor, X0
	473 Compare X24, 0
	474 JumpIfEqual {2377}
	475 Move X8, 0x793000
	476 Move X8, [X8+2288]
	477 Move X19, 0x793000
	478 Move X22, 0x793000
	479 Move X8, [X8]
	480 Move [X24+40], X8
	481 Move X8, 0x73D000
	482 Move X8, [X8+2368]
	483 Move X0, [X8]
	484 Move X19, [X19+2072]
	485 Move X22, [X22+2080]
	486 Call 0x1C17F10
	487 Move X2, [X19]
	488 Move X1, X21
	489 Move X3, X31
	490 Move X25, X0
	491 Call Func`1<Boolean>..ctor, X0, X1, X2
	492 Move [X24+72], X25
	493 Move X8, 0x734000
	494 Move X8, [X8+3368]
	495 Move X0, [X8]
	496 Call 0x1C17F10
	497 Move X2, [X22]
	498 Move X1, X21
	499 Move X3, X31
	500 Move X25, X0
	501 Call Action`1<Boolean>..ctor, X0, X1, X2
	502 Move [X24+80], X25
	503 Move X8, 0x793000
	504 Move X8, [X8+1640]
	505 Move X0, [X8]
	506 Call 0x1C17F10
	507 Move X8, 0x793000
	508 Move X8, [X8+2152]
	509 Move X1, X21
	510 Move X3, X31
	511 Move X25, X0
	512 Move X2, [X8]
	513 Call Action`2<Object, Boolean>..ctor, X0, X1, X2
	514 Move [X24+88], X25
	515 Compare X23, 0
	516 JumpIfEqual {2377}
	517 Move X2, [X28]
	518 Move X19, 0x793000
	519 Move X19, [X19+1672]
	520 Move X0, X23
	521 Move X1, X24
	522 Move X29, X20
	523 Call 0x2498EC8, X0, X1
	524 Move X0, [X19]
	525 Move X23, [X26+72]
	526 Move [X31+8], X26
	527 Call 0x1C17F10
	528 Move X1, X31
	529 Move X24, X0
	530 Call FloatField..ctor, X0
	531 Compare X24, 0
	532 JumpIfEqual {2377}
	533 Move X8, 0x793000
	534 Move X8, [X8+2264]
	535 Move X9, 0x793000
	536 Move X19, 0x793000
	537 Move X27, 0x736000
	538 Move X8, [X8]
	539 Move X9, [X9+1680]
	540 Move X19, [X19+2120]
	541 Move X22, 0x793000
	542 Move [X24+40], X8
	543 Move X0, [X9]
	544 Move X26, 0x793000
	545 Move X27, [X27+1456]
	546 Move X22, [X22+2128]
	547 Move X26, [X26+1304]
	548 Call 0x1C17F10
	549 Move X2, [X19]
	550 Move X1, X21
	551 Move X3, X31
	552 Move X25, X0
	553 Call Func`1<Single>..ctor, X0, X1, X2
	554 Move [X24+72], X25
	555 Move X0, [X27]
	556 Call 0x1C17F10
	557 Move X2, [X22]
	558 Move X1, X21
	559 Move X3, X31
	560 Move X25, X0
	561 Call Action`1<Single>..ctor, X0, X1, X2
	562 Move [X24+80], X25
	563 Move X0, [X26]
	564 Move W8, [X0+224]
	565 Compare W8, 0
	566 JumpIfNotEqual {569}
	567 Call 0x1C17DFC
	568 Move X0, [X26]
	569 Move X8, [X0+184]
	570 Move X25, [X8+24]
	571 Compare X25, 0
	572 JumpIfNotEqual {598}
	573 Move W8, [X0+224]
	574 Compare W8, 0
	575 JumpIfEqual {578}
	576 Move X19, 0x793000
	577 Move X19, [X19+1304]
	578 Call 0x1C17DFC
	579 Move X19, 0x793000
	580 Move X19, [X19+1304]
	581 Move X0, [X19]
	582 Move X8, [X0+184]
	583 Move X26, [X8]
	584 Move X8, 0x793000
	585 Move X8, [X8+1680]
	586 Move X0, [X8]
	587 Call 0x1C17F10
	588 Move X8, 0x793000
	589 Move X8, [X8+1888]
	590 Move X1, X26
	591 Move X3, X31
	592 Move X25, X0
	593 Move X2, [X8]
	594 Call Func`1<Single>..ctor, X0, X1, X2
	595 Move X8, [X19]
	596 Move X8, [X8+184]
	597 Move [X8+24], X25
	598 Move [X24+96], X25
	599 Compare X23, 0
	600 JumpIfEqual {2377}
	601 Move X2, [X28]
	602 Move X0, X23
	603 Move X1, X24
	604 Call 0x2498EC8, X0, X1
	605 Move X8, 0x791000
	606 Move X8, [X8+1880]
	607 Move X0, [X8]
	608 Call 0x1C17F10
	609 Move X1, X31
	610 Move X27, X0
	611 Call Container..ctor, X0
	612 Compare X27, 0
	613 JumpIfEqual {2377}
	614 Move X8, 0x793000
	615 Move X8, [X8+2304]
	616 Move X24, [X27+72]
	617 Move X8, [X8]
	618 Move [X27+40], X8
	619 Move X8, 0x791000
	620 Move X8, [X8+1896]
	621 Move X0, [X8]
	622 Call 0x1C17F10
	623 Move X1, X31
	624 Move X25, X0
	625 Call BoolField..ctor, X0
	626 Move X23, 0x793000
	627 Move X23, [X23+1304]
	628 Compare X25, 0
	629 JumpIfEqual {2377}
	630 Move X8, 0x793000
	631 Move X8, [X8+2328]
	632 Move X19, 0x793000
	633 Move X22, 0x793000
	634 Move X8, [X8]
	635 Move [X25+40], X8
	636 Move X8, 0x73D000
	637 Move X8, [X8+2368]
	638 Move X0, [X8]
	639 Move X19, [X19+2136]
	640 Move X22, [X22+2144]
	641 Call 0x1C17F10
	642 Move X2, [X19]
	643 Move X1, X21
	644 Move X3, X31
	645 Move X26, X0
	646 Call Func`1<Boolean>..ctor, X0, X1, X2
	647 Move [X25+72], X26
	648 Move X8, 0x734000
	649 Move X8, [X8+3368]
	650 Move X0, [X8]
	651 Call 0x1C17F10
	652 Move X2, [X22]
	653 Move X1, X21
	654 Move X3, X31
	655 Move X26, X0
	656 Call Action`1<Boolean>..ctor, X0, X1, X2
	657 Move [X25+80], X26
	658 Move X8, 0x793000
	659 Move X8, [X8+1640]
	660 Move X0, [X8]
	661 Call 0x1C17F10
	662 Move X8, 0x793000
	663 Move X8, [X8+2152]
	664 Move X1, X21
	665 Move X3, X31
	666 Move X26, X0
	667 Move X2, [X8]
	668 Call Action`2<Object, Boolean>..ctor, X0, X1, X2
	669 Move [X25+88], X26
	670 Compare X24, 0
	671 JumpIfEqual {2377}
	672 Move X2, [X28]
	673 Move X0, X24
	674 Move X1, X25
	675 Call 0x2498EC8, X0, X1
	676 Move X8, [X29+400]
	677 Move X22, [X31+24]
	678 Compare X8, 0
	679 JumpIfEqual {2377}
	680 Move W8, [X8+16]
	681 Move [X31+16], X27
	682 Compare W8, 0
	683 JumpIfEqual {1176}
	684 Move X8, 0x791000
	685 Move X8, [X8+1880]
	686 Move X0, [X8]
	687 Call 0x1C17F10
	688 Move X1, X31
	689 Move X19, X0
	690 Call Container..ctor, X0
	691 Compare X19, 0
	692 JumpIfEqual {2377}
	693 Move [X31], X29
	694 Move X8, 0x792000
	695 Move X25, [X19+72]
	696 Move X8, [X8+232]
	697 Move X29, X19
	698 Move X0, [X8]
	699 Call 0x1C17F10
	700 Move X1, X31
	701 Move X26, X0
	702 Call EnumField..ctor, X0
	703 Compare X26, 0
	704 JumpIfEqual {2377}
	705 Move X8, 0x793000
	706 Move X8, [X8+2232]
	707 Move X27, 0x793000
	708 Move X20, 0x793000
	709 Move X27, [X27+1896]
	710 Move X20, [X20+1904]
	711 Move X8, [X8]
	712 Move X23, 0x793000
	713 Move X28, 0x734000
	714 Move X19, 0x793000
	715 Move X23, [X23+1648]
	716 Move X28, [X28+1728]
	717 Move X19, [X19+1912]
	718 Move [X26+40], X8
	719 Move X24, 0x77A000
	720 Move X24, [X24+1696]
	721 Move X0, [X24]
	722 Call 0x1C17F10
	723 Move X2, [X27]
	724 Move X1, X21
	725 Move X3, X31
	726 Move X27, X0
	727 Call Func`1<Int32>..ctor, X0, X1, X2
	728 Move [X26+72], X27
	729 Move X22, 0x738000
	730 Move X22, [X22+2816]
	731 Move X0, [X22]
	732 Call 0x1C17F10
	733 Move X2, [X20]
	734 Move X1, X21
	735 Move X3, X31
	736 Move X27, X0
	737 Call Action`1<Int32>..ctor, X0, X1, X2
	738 Move [X26+80], X27
	739 Move X0, [X28]
	740 Move X27, [X23]
	741 Move W8, [X0+224]
	742 Compare W8, 0
	743 JumpIfNotEqual {745}
	744 Call 0x1C17DFC
	745 Move X0, X27
	746 Move X1, X31
	747 Call Type.GetTypeFromHandle, X0
	748 Move X1, X0
	749 Move X0, X26
	750 Move X2, X31
	751 Call EnumField.set_autoEnum, X0, X1
	752 Move X0, [X24]
	753 Call 0x1C17F10
	754 Move X2, [X19]
	755 Move X1, X21
	756 Move X3, X31
	757 Move X27, X0
	758 Call Func`1<Int32>..ctor, X0, X1, X2
	759 Move [X26+128], X27
	760 Move X0, [X22]
	761 Call 0x1C17F10
	762 Move X8, 0x793000
	763 Move X8, [X8+1920]
	764 Move X1, X21
	765 Move X3, X31
	766 Move X27, X0
	767 Move X2, [X8]
	768 Call Action`1<Int32>..ctor, X0, X1, X2
	769 Move [X26+136], X27
	770 Move X8, 0x792000
	771 Move X8, [X8+1112]
	772 Move X0, [X8]
	773 Call 0x1C17F10
	774 Move X8, 0x793000
	775 Move X8, [X8+2160]
	776 Move X1, X21
	777 Move X3, X31
	778 Move X27, X0
	779 Move X2, [X8]
	780 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	781 Move [X26+88], X27
	782 Move X28, 0x791000
	783 Move X23, 0x793000
	784 Move X28, [X28+1952]
	785 Move X23, [X23+1304]
	786 Compare X25, 0
	787 JumpIfEqual {2377}
	788 Move X2, [X28]
	789 Move X0, X25
	790 Move X1, X26
	791 Call 0x2498EC8, X0, X1
	792 Move X8, 0x793000
	793 Move X25, [X29+72]
	794 Move X8, [X8+1672]
	795 Move X24, X29
	796 Move X0, [X8]
	797 Call 0x1C17F10
	798 Move X1, X31
	799 Move X26, X0
	800 Call FloatField..ctor, X0
	801 Move X29, [X31]
	802 Compare X26, 0
	803 JumpIfEqual {2377}
	804 Move X8, 0x792000
	805 Move X8, [X8+2280]
	806 Move X19, 0x792000
	807 Move X20, 0x792000
	808 Move X8, [X8]
	809 Move [X26+40], X8
	810 Move X8, 0x792000
	811 Move X8, [X8+1680]
	812 Move X0, [X8]
	813 Move X19, [X19+1928]
	814 Move X20, [X20+1936]
	815 Call 0x1C17F10
	816 Move X2, [X19]
	817 Move X1, X21
	818 Move X3, X31
	819 Move X27, X0
	820 Call Func`1<Single>..ctor, X0, X1, X2
	821 Move [X26+72], X27
	822 Move X8, 0x735000
	823 Move X8, [X8+1456]
	824 Move X0, [X8]
	825 Call 0x1C17F10
	826 Move X2, [X20]
	827 Move X1, X21
	828 Move X3, X31
	829 Move X27, X0
	830 Call Action`1<Single>..ctor, X0, X1, X2
	831 Move [X26+80], X27
	832 Move X0, [X23]
	833 Move W8, [X0+224]
	834 Compare W8, 0
	835 JumpIfNotEqual {838}
	836 Call 0x1C17DFC
	837 Move X0, [X23]
	838 Move X8, [X0+184]
	839 Move X19, 0x779000
	840 Move X27, [X8+32]
	841 Move X19, [X19+1696]
	842 Compare X27, 0
	843 JumpIfNotEqual {867}
	844 Move W8, [X0+224]
	845 Compare W8, 0
	846 JumpIfNotEqual {849}
	847 Call 0x1C17DFC
	848 Move X0, [X23]
	849 Move X8, [X0+184]
	850 Move X28, [X8]
	851 Move X8, 0x792000
	852 Move X8, [X8+1680]
	853 Move X0, [X8]
	854 Call 0x1C17F10
	855 Move X8, 0x792000
	856 Move X8, [X8+1704]
	857 Move X1, X28
	858 Move X3, X31
	859 Move X27, X0
	860 Move X2, [X8]
	861 Call Func`1<Single>..ctor, X0, X1, X2
	862 Move X0, [X23]
	863 Move X28, 0x790000
	864 Move X8, [X0+184]
	865 Move [X8+32], X27
	866 Move X28, [X28+1952]
	867 Move [X26+96], X27
	868 Move W8, [X0+224]
	869 Compare W8, 0
	870 JumpIfNotEqual {873}
	871 Call 0x1C17DFC
	872 Move X0, [X23]
	873 Move X8, [X0+184]
	874 Move X27, [X8+40]
	875 Compare X27, 0
	876 JumpIfNotEqual {900}
	877 Move W8, [X0+224]
	878 Compare W8, 0
	879 JumpIfNotEqual {882}
	880 Call 0x1C17DFC
	881 Move X0, [X23]
	882 Move X8, [X0+184]
	883 Move X28, [X8]
	884 Move X8, 0x792000
	885 Move X8, [X8+1680]
	886 Move X0, [X8]
	887 Call 0x1C17F10
	888 Move X8, 0x792000
	889 Move X8, [X8+1712]
	890 Move X1, X28
	891 Move X3, X31
	892 Move X27, X0
	893 Move X2, [X8]
	894 Call Func`1<Single>..ctor, X0, X1, X2
	895 Move X8, [X23]
	896 Move X28, 0x790000
	897 Move X8, [X8+184]
	898 Move [X8+40], X27
	899 Move X28, [X28+1952]
	900 Move [X26+104], X27
	901 Compare X25, 0
	902 JumpIfEqual {2377}
	903 Move X2, [X28]
	904 Move X0, X25
	905 Move X1, X26
	906 Call 0x2498EC8, X0, X1
	907 Move X8, [X29+400]
	908 Compare X8, 0
	909 JumpIfEqual {2377}
	910 Move W8, [X8+28]
	911 NotImplemented "Instruction CMP not yet implemented."
	912 Move X8, 0x792000
	913 Move X25, [X24+72]
	914 Move X8, [X8+1672]
	915 Move X0, [X8]
	916 Call 0x1C17F10
	917 Move X1, X31
	918 Move X26, X0
	919 Call FloatField..ctor, X0
	920 Compare X26, 0
	921 JumpIfEqual {2377}
	922 Move X8, 0x792000
	923 Move X8, [X8+2216]
	924 Move X8, [X8]
	925 Move [X26+40], X8
	926 Move X8, 0x792000
	927 Move X8, [X8+1680]
	928 Move X0, [X8]
	929 Call 0x1C17F10
	930 Move X8, 0x792000
	931 Move X8, [X8+1944]
	932 Move X1, X21
	933 Move X3, X31
	934 Move X27, X0
	935 Move X2, [X8]
	936 Call Func`1<Single>..ctor, X0, X1, X2
	937 Move [X26+72], X27
	938 Move X8, 0x735000
	939 Move X8, [X8+1456]
	940 Move X0, [X8]
	941 Call 0x1C17F10
	942 Move X8, 0x792000
	943 Move X8, [X8+1952]
	944 Move X1, X21
	945 Move X3, X31
	946 Move X27, X0
	947 Move X2, [X8]
	948 Call Action`1<Single>..ctor, X0, X1, X2
	949 Move [X26+80], X27
	950 Compare X25, 0
	951 JumpIfEqual {2377}
	952 Move X2, [X28]
	953 Move X0, X25
	954 Move X1, X26
	955 Call 0x2498EC8, X0, X1
	956 Move X8, 0x792000
	957 Move X25, [X24+72]
	958 Move X8, [X8+1688]
	959 Move X0, [X8]
	960 Call 0x1C17F10
	961 Move X1, X31
	962 Move X26, X0
	963 Call IntField..ctor, X0
	964 Compare X26, 0
	965 JumpIfEqual {2377}
	966 Move X8, 0x792000
	967 Move X8, [X8+2176]
	968 Move X20, 0x792000
	969 Move X8, [X8]
	970 Move [X26+40], X8
	971 Move X0, [X19]
	972 Move X19, 0x792000
	973 Move X19, [X19+1968]
	974 Move X20, [X20+1976]
	975 Call 0x1C17F10
	976 Move X2, [X19]
	977 Move X1, X21
	978 Move X3, X31
	979 Move X27, X0
	980 Call Func`1<Int32>..ctor, X0, X1, X2
	981 Move [X26+72], X27
	982 Move X0, [X22]
	983 Call 0x1C17F10
	984 Move X2, [X20]
	985 Move X1, X21
	986 Move X3, X31
	987 Move X27, X0
	988 Call Action`1<Int32>..ctor, X0, X1, X2
	989 Move [X26+80], X27
	990 Move X0, [X23]
	991 Move W8, [X0+224]
	992 Compare W8, 0
	993 JumpIfNotEqual {996}
	994 Call 0x1C17DFC
	995 Move X0, [X23]
	996 Move X8, [X0+184]
	997 Move X19, 0x779000
	998 Move X27, [X8+48]
	999 Move X19, [X19+1696]
	1000 Compare X27, 0
	1001 JumpIfNotEqual {1023}
	1002 Move W8, [X0+224]
	1003 Compare W8, 0
	1004 JumpIfNotEqual {1007}
	1005 Call 0x1C17DFC
	1006 Move X0, [X23]
	1007 Move X8, [X0+184]
	1008 Move X0, [X19]
	1009 Move X28, [X8]
	1010 Call 0x1C17F10
	1011 Move X8, 0x792000
	1012 Move X8, [X8+1720]
	1013 Move X1, X28
	1014 Move X3, X31
	1015 Move X27, X0
	1016 Move X2, [X8]
	1017 Call Func`1<Int32>..ctor, X0, X1, X2
	1018 Move X0, [X23]
	1019 Move X28, 0x790000
	1020 Move X8, [X0+184]
	1021 Move [X8+48], X27
	1022 Move X28, [X28+1952]
	1023 Move [X26+96], X27
	1024 Move W8, [X0+224]
	1025 Compare W8, 0
	1026 JumpIfNotEqual {1029}
	1027 Call 0x1C17DFC
	1028 Move X0, [X23]
	1029 Move X8, [X0+184]
	1030 Move X27, [X8+56]
	1031 Compare X27, 0
	1032 JumpIfNotEqual {1054}
	1033 Move W8, [X0+224]
	1034 Compare W8, 0
	1035 JumpIfNotEqual {1038}
	1036 Call 0x1C17DFC
	1037 Move X0, [X23]
	1038 Move X8, [X0+184]
	1039 Move X0, [X19]
	1040 Move X28, [X8]
	1041 Call 0x1C17F10
	1042 Move X8, 0x792000
	1043 Move X8, [X8+1728]
	1044 Move X1, X28
	1045 Move X3, X31
	1046 Move X27, X0
	1047 Move X2, [X8]
	1048 Call Func`1<Int32>..ctor, X0, X1, X2
	1049 Move X8, [X23]
	1050 Move X28, 0x790000
	1051 Move X8, [X8+184]
	1052 Move [X8+56], X27
	1053 Move X28, [X28+1952]
	1054 Move [X26+104], X27
	1055 Compare X25, 0
	1056 JumpIfEqual {2377}
	1057 Move X2, [X28]
	1058 Move X0, X25
	1059 Move X1, X26
	1060 Call 0x2498EC8, X0, X1
	1061 Move X8, 0x792000
	1062 Move X25, [X24+72]
	1063 Move X8, [X8+1688]
	1064 Move X0, [X8]
	1065 Call 0x1C17F10
	1066 Move X1, X31
	1067 Move X26, X0
	1068 Call IntField..ctor, X0
	1069 Compare X26, 0
	1070 JumpIfEqual {2377}
	1071 Move X8, 0x792000
	1072 Move X8, [X8+2320]
	1073 Move X20, 0x792000
	1074 Move X8, [X8]
	1075 Move [X26+40], X8
	1076 Move X0, [X19]
	1077 Move X19, 0x792000
	1078 Move X19, [X19+1984]
	1079 Move X20, [X20+1992]
	1080 Call 0x1C17F10
	1081 Move X2, [X19]
	1082 Move X1, X21
	1083 Move X3, X31
	1084 Move X27, X0
	1085 Call Func`1<Int32>..ctor, X0, X1, X2
	1086 Move [X26+72], X27
	1087 Move X0, [X22]
	1088 Call 0x1C17F10
	1089 Move X2, [X20]
	1090 Move X1, X21
	1091 Move X3, X31
	1092 Move X27, X0
	1093 Call Action`1<Int32>..ctor, X0, X1, X2
	1094 Move [X26+80], X27
	1095 Move X0, [X23]
	1096 Move W8, [X0+224]
	1097 Compare W8, 0
	1098 JumpIfNotEqual {1101}
	1099 Call 0x1C17DFC
	1100 Move X0, [X23]
	1101 Move X8, [X0+184]
	1102 Move X22, [X31+24]
	1103 Move X27, [X8+64]
	1104 Compare X27, 0
	1105 JumpIfNotEqual {1129}
	1106 Move W8, [X0+224]
	1107 Compare W8, 0
	1108 JumpIfNotEqual {1111}
	1109 Call 0x1C17DFC
	1110 Move X0, [X23]
	1111 Move X8, [X0+184]
	1112 Move X28, [X8]
	1113 Move X8, 0x779000
	1114 Move X8, [X8+1696]
	1115 Move X0, [X8]
	1116 Call 0x1C17F10
	1117 Move X8, 0x792000
	1118 Move X8, [X8+1736]
	1119 Move X1, X28
	1120 Move X3, X31
	1121 Move X27, X0
	1122 Move X2, [X8]
	1123 Call Func`1<Int32>..ctor, X0, X1, X2
	1124 Move X0, [X23]
	1125 Move X28, 0x790000
	1126 Move X8, [X0+184]
	1127 Move [X8+64], X27
	1128 Move X28, [X28+1952]
	1129 Move [X26+96], X27
	1130 Move W8, [X0+224]
	1131 Compare W8, 0
	1132 JumpIfNotEqual {1135}
	1133 Call 0x1C17DFC
	1134 Move X0, [X23]
	1135 Move X8, [X0+184]
	1136 Move X27, [X8+72]
	1137 Compare X27, 0
	1138 JumpIfNotEqual {1162}
	1139 Move W8, [X0+224]
	1140 Compare W8, 0
	1141 JumpIfNotEqual {1144}
	1142 Call 0x1C17DFC
	1143 Move X0, [X23]
	1144 Move X8, [X0+184]
	1145 Move X28, [X8]
	1146 Move X8, 0x779000
	1147 Move X8, [X8+1696]
	1148 Move X0, [X8]
	1149 Call 0x1C17F10
	1150 Move X8, 0x792000
	1151 Move X8, [X8+1744]
	1152 Move X1, X28
	1153 Move X3, X31
	1154 Move X27, X0
	1155 Move X2, [X8]
	1156 Call Func`1<Int32>..ctor, X0, X1, X2
	1157 Move X8, [X23]
	1158 Move X28, 0x790000
	1159 Move X8, [X8+184]
	1160 Move [X8+72], X27
	1161 Move X28, [X28+1952]
	1162 Move [X26+104], X27
	1163 Compare X25, 0
	1164 JumpIfEqual {2377}
	1165 Move X2, [X28]
	1166 Move X0, X25
	1167 Move X1, X26
	1168 Call 0x2498EC8, X0, X1
	1169 Move X27, [X31+16]
	1170 Move X0, [X27+72]
	1171 Compare X0, 0
	1172 JumpIfEqual {2377}
	1173 Move X2, [X28]
	1174 Move X1, X24
	1175 Call 0x2498EC8, X0, X1
	1176 Move X8, 0x790000
	1177 Move X24, [X27+72]
	1178 Move X8, [X8+1896]
	1179 Move X0, [X8]
	1180 Call 0x1C17F10
	1181 Move X1, X31
	1182 Move X25, X0
	1183 Call BoolField..ctor, X0
	1184 Compare X25, 0
	1185 JumpIfEqual {2377}
	1186 Move X8, 0x792000
	1187 Move X8, [X8+2184]
	1188 Move X19, 0x792000
	1189 Move X20, 0x792000
	1190 Move X8, [X8]
	1191 Move [X25+40], X8
	1192 Move X8, 0x73C000
	1193 Move X8, [X8+2368]
	1194 Move X0, [X8]
	1195 Move X19, [X19+2000]
	1196 Move X20, [X20+2008]
	1197 Call 0x1C17F10
	1198 Move X2, [X19]
	1199 Move X1, X21
	1200 Move X3, X31
	1201 Move X26, X0
	1202 Call Func`1<Boolean>..ctor, X0, X1, X2
	1203 Move [X25+72], X26
	1204 Move X8, 0x733000
	1205 Move X8, [X8+3368]
	1206 Move X0, [X8]
	1207 Call 0x1C17F10
	1208 Move X2, [X20]
	1209 Move X1, X21
	1210 Move X3, X31
	1211 Move X26, X0
	1212 Call Action`1<Boolean>..ctor, X0, X1, X2
	1213 Move [X25+80], X26
	1214 Move X8, 0x792000
	1215 Move X8, [X8+1640]
	1216 Move X0, [X8]
	1217 Call 0x1C17F10
	1218 Move X8, 0x792000
	1219 Move X8, [X8+2152]
	1220 Move X1, X21
	1221 Move X3, X31
	1222 Move X26, X0
	1223 Move X2, [X8]
	1224 Call Action`2<Object, Boolean>..ctor, X0, X1, X2
	1225 Move [X25+88], X26
	1226 Compare X24, 0
	1227 JumpIfEqual {2377}
	1228 Move X2, [X28]
	1229 Move X0, X24
	1230 Move X1, X25
	1231 Call 0x2498EC8, X0, X1
	1232 Move X8, [X29+400]
	1233 Compare X8, 0
	1234 JumpIfEqual {2377}
	1235 Move W8, [X8+56]
	1236 Compare W8, 0
	1237 JumpIfEqual {1360}
	1238 Move X8, 0x792000
	1239 Move X8, [X8+1672]
	1240 Move X0, [X8]
	1241 Call 0x1C17F10
	1242 Move X1, X31
	1243 Move X24, X0
	1244 Call FloatField..ctor, X0
	1245 Compare X24, 0
	1246 JumpIfEqual {2377}
	1247 Move X8, 0x792000
	1248 Move X8, [X8+2256]
	1249 Move X19, 0x792000
	1250 Move X20, 0x792000
	1251 Move X8, [X8]
	1252 Move [X24+40], X8
	1253 Move X8, 0x792000
	1254 Move X8, [X8+1680]
	1255 Move X0, [X8]
	1256 Move X19, [X19+2024]
	1257 Move X20, [X20+2032]
	1258 Call 0x1C17F10
	1259 Move X2, [X19]
	1260 Move X1, X21
	1261 Move X3, X31
	1262 Move X25, X0
	1263 Call Func`1<Single>..ctor, X0, X1, X2
	1264 Move [X24+72], X25
	1265 Move X8, 0x735000
	1266 Move X8, [X8+1456]
	1267 Move X0, [X8]
	1268 Call 0x1C17F10
	1269 Move X2, [X20]
	1270 Move X1, X21
	1271 Move X3, X31
	1272 Move X25, X0
	1273 Call Action`1<Single>..ctor, X0, X1, X2
	1274 Move [X24+80], X25
	1275 Move X0, [X23]
	1276 Move W8, [X0+224]
	1277 Compare W8, 0
	1278 JumpIfNotEqual {1281}
	1279 Call 0x1C17DFC
	1280 Move X0, [X23]
	1281 Move X8, [X0+184]
	1282 Move X25, [X8+80]
	1283 Compare X25, 0
	1284 JumpIfNotEqual {1306}
	1285 Move W8, [X0+224]
	1286 Compare W8, 0
	1287 JumpIfNotEqual {1290}
	1288 Call 0x1C17DFC
	1289 Move X0, [X23]
	1290 Move X8, [X0+184]
	1291 Move X26, [X8]
	1292 Move X8, 0x792000
	1293 Move X8, [X8+1680]
	1294 Move X0, [X8]
	1295 Call 0x1C17F10
	1296 Move X8, 0x792000
	1297 Move X8, [X8+1752]
	1298 Move X1, X26
	1299 Move X3, X31
	1300 Move X25, X0
	1301 Move X2, [X8]
	1302 Call Func`1<Single>..ctor, X0, X1, X2
	1303 Move X0, [X23]
	1304 Move X8, [X0+184]
	1305 Move [X8+80], X25
	1306 Move [X24+96], X25
	1307 Move W8, [X0+224]
	1308 Compare W8, 0
	1309 JumpIfNotEqual {1312}
	1310 Call 0x1C17DFC
	1311 Move X0, [X23]
	1312 Move X8, [X0+184]
	1313 Move X25, [X8+88]
	1314 Compare X25, 0
	1315 JumpIfNotEqual {1337}
	1316 Move W8, [X0+224]
	1317 Compare W8, 0
	1318 JumpIfNotEqual {1321}
	1319 Call 0x1C17DFC
	1320 Move X0, [X23]
	1321 Move X8, [X0+184]
	1322 Move X26, [X8]
	1323 Move X8, 0x792000
	1324 Move X8, [X8+1680]
	1325 Move X0, [X8]
	1326 Call 0x1C17F10
	1327 Move X8, 0x792000
	1328 Move X8, [X8+1760]
	1329 Move X1, X26
	1330 Move X3, X31
	1331 Move X25, X0
	1332 Move X2, [X8]
	1333 Call Func`1<Single>..ctor, X0, X1, X2
	1334 Move X8, [X23]
	1335 Move X8, [X8+184]
	1336 Move [X8+88], X25
	1337 Move [X24+104], X25
	1338 Move X8, 0x790000
	1339 Move X25, [X27+72]
	1340 Move X8, [X8+1880]
	1341 Move X0, [X8]
	1342 Call 0x1C17F10
	1343 Move X1, X31
	1344 Move X26, X0
	1345 Call Container..ctor, X0
	1346 Compare X26, 0
	1347 JumpIfEqual {2377}
	1348 Move X0, [X26+72]
	1349 Compare X0, 0
	1350 JumpIfEqual {2377}
	1351 Move X2, [X28]
	1352 Move X1, X24
	1353 Call 0x2498EC8, X0, X1
	1354 Compare X25, 0
	1355 JumpIfEqual {2377}
	1356 Move X2, [X28]
	1357 Move X0, X25
	1358 Move X1, X26
	1359 Call 0x2498EC8, X0, X1
	1360 Move X8, 0x792000
	1361 Move X24, [X27+72]
	1362 Move X8, [X8+1672]
	1363 Move X0, [X8]
	1364 Call 0x1C17F10
	1365 Move X1, X31
	1366 Move X25, X0
	1367 Call FloatField..ctor, X0
	1368 Compare X25, 0
	1369 JumpIfEqual {2377}
	1370 Move X8, 0x792000
	1371 Move X8, [X8+2264]
	1372 Move X19, 0x792000
	1373 Move X20, 0x792000
	1374 Move X8, [X8]
	1375 Move [X25+40], X8
	1376 Move X8, 0x792000
	1377 Move X8, [X8+1680]
	1378 Move X0, [X8]
	1379 Move X19, [X19+2040]
	1380 Move X20, [X20+2048]
	1381 Call 0x1C17F10
	1382 Move X2, [X19]
	1383 Move X1, X21
	1384 Move X3, X31
	1385 Move X26, X0
	1386 Call Func`1<Single>..ctor, X0, X1, X2
	1387 Move [X25+72], X26
	1388 Move X8, 0x735000
	1389 Move X8, [X8+1456]
	1390 Move X0, [X8]
	1391 Call 0x1C17F10
	1392 Move X2, [X20]
	1393 Move X1, X21
	1394 Move X3, X31
	1395 Move X26, X0
	1396 Call Action`1<Single>..ctor, X0, X1, X2
	1397 Move [X25+80], X26
	1398 Move X0, [X23]
	1399 Move W8, [X0+224]
	1400 Compare W8, 0
	1401 JumpIfNotEqual {1404}
	1402 Call 0x1C17DFC
	1403 Move X0, [X23]
	1404 Move X8, [X0+184]
	1405 Move X26, [X8+96]
	1406 Compare X26, 0
	1407 JumpIfNotEqual {1429}
	1408 Move W8, [X0+224]
	1409 Compare W8, 0
	1410 JumpIfNotEqual {1413}
	1411 Call 0x1C17DFC
	1412 Move X0, [X23]
	1413 Move X8, [X0+184]
	1414 Move X27, [X8]
	1415 Move X8, 0x792000
	1416 Move X8, [X8+1680]
	1417 Move X0, [X8]
	1418 Call 0x1C17F10
	1419 Move X8, 0x792000
	1420 Move X8, [X8+1768]
	1421 Move X1, X27
	1422 Move X3, X31
	1423 Move X26, X0
	1424 Move X2, [X8]
	1425 Call Func`1<Single>..ctor, X0, X1, X2
	1426 Move X8, [X23]
	1427 Move X8, [X8+184]
	1428 Move [X8+96], X26
	1429 Move [X25+96], X26
	1430 Compare X24, 0
	1431 JumpIfEqual {2377}
	1432 Move X2, [X28]
	1433 Move X0, X24
	1434 Move X1, X25
	1435 Call 0x2498EC8, X0, X1
	1436 Move X8, 0x790000
	1437 Move X8, [X8+1880]
	1438 Move X0, [X8]
	1439 Call 0x1C17F10
	1440 Move X1, X31
	1441 Move X24, X0
	1442 Call Container..ctor, X0
	1443 Compare X24, 0
	1444 JumpIfEqual {2377}
	1445 Move X8, 0x792000
	1446 Move X8, [X8+2248]
	1447 Move X25, [X24+72]
	1448 Move X8, [X8]
	1449 Move [X24+40], X8
	1450 Move X8, 0x790000
	1451 Move X8, [X8+1896]
	1452 Move X0, [X8]
	1453 Call 0x1C17F10
	1454 Move X1, X31
	1455 Move X26, X0
	1456 Call BoolField..ctor, X0
	1457 Compare X26, 0
	1458 JumpIfEqual {2377}
	1459 Move X8, 0x792000
	1460 Move X8, [X8+2312]
	1461 Move X19, 0x792000
	1462 Move X20, 0x792000
	1463 Move X8, [X8]
	1464 Move [X26+40], X8
	1465 Move X8, 0x73C000
	1466 Move X8, [X8+2368]
	1467 Move X0, [X8]
	1468 Move X19, [X19+2056]
	1469 Move X20, [X20+2064]
	1470 Call 0x1C17F10
	1471 Move X2, [X19]
	1472 Move X1, X21
	1473 Move X3, X31
	1474 Move X27, X0
	1475 Call Func`1<Boolean>..ctor, X0, X1, X2
	1476 Move [X26+72], X27
	1477 Move X8, 0x733000
	1478 Move X8, [X8+3368]
	1479 Move X0, [X8]
	1480 Call 0x1C17F10
	1481 Move X2, [X20]
	1482 Move X1, X21
	1483 Move X3, X31
	1484 Move X27, X0
	1485 Call Action`1<Boolean>..ctor, X0, X1, X2
	1486 Move [X26+80], X27
	1487 Compare X25, 0
	1488 JumpIfEqual {2377}
	1489 Move X2, [X28]
	1490 Move X0, X25
	1491 Move X1, X26
	1492 Call 0x2498EC8, X0, X1
	1493 Move X8, 0x792000
	1494 Move X25, [X24+72]
	1495 Move X8, [X8+1688]
	1496 Move X0, [X8]
	1497 Call 0x1C17F10
	1498 Move X1, X31
	1499 Move X26, X0
	1500 Call IntField..ctor, X0
	1501 Compare X26, 0
	1502 JumpIfEqual {2377}
	1503 Move X8, 0x792000
	1504 Move X8, [X8+2168]
	1505 Move X19, 0x737000
	1506 Move X20, X22
	1507 Move X8, [X8]
	1508 Move [X26+40], X8
	1509 Move X0, [X23]
	1510 Move W8, [X0+224]
	1511 Move X19, [X19+2816]
	1512 Compare W8, 0
	1513 JumpIfNotEqual {1516}
	1514 Call 0x1C17DFC
	1515 Move X0, [X23]
	1516 Move X8, [X0+184]
	1517 Move X27, [X8+104]
	1518 Compare X27, 0
	1519 JumpIfNotEqual {1543}
	1520 Move W8, [X0+224]
	1521 Compare W8, 0
	1522 JumpIfNotEqual {1525}
	1523 Call 0x1C17DFC
	1524 Move X0, [X23]
	1525 Move X8, [X0+184]
	1526 Move X28, [X8]
	1527 Move X8, 0x779000
	1528 Move X8, [X8+1696]
	1529 Move X0, [X8]
	1530 Call 0x1C17F10
	1531 Move X8, 0x792000
	1532 Move X8, [X8+1776]
	1533 Move X1, X28
	1534 Move X3, X31
	1535 Move X27, X0
	1536 Move X2, [X8]
	1537 Call Func`1<Int32>..ctor, X0, X1, X2
	1538 Move X0, [X23]
	1539 Move X28, 0x790000
	1540 Move X8, [X0+184]
	1541 Move [X8+104], X27
	1542 Move X28, [X28+1952]
	1543 Move [X26+72], X27
	1544 Move W8, [X0+224]
	1545 Compare W8, 0
	1546 JumpIfNotEqual {1549}
	1547 Call 0x1C17DFC
	1548 Move X0, [X23]
	1549 Move X8, [X0+184]
	1550 Move X27, [X8+112]
	1551 Compare X27, 0
	1552 JumpIfNotEqual {1574}
	1553 Move W8, [X0+224]
	1554 Compare W8, 0
	1555 JumpIfNotEqual {1558}
	1556 Call 0x1C17DFC
	1557 Move X0, [X23]
	1558 Move X8, [X0+184]
	1559 Move X0, [X19]
	1560 Move X28, [X8]
	1561 Call 0x1C17F10
	1562 Move X8, 0x792000
	1563 Move X8, [X8+1784]
	1564 Move X1, X28
	1565 Move X3, X31
	1566 Move X27, X0
	1567 Move X2, [X8]
	1568 Call Action`1<Int32>..ctor, X0, X1, X2
	1569 Move X0, [X23]
	1570 Move X28, 0x790000
	1571 Move X8, [X0+184]
	1572 Move [X8+112], X27
	1573 Move X28, [X28+1952]
	1574 Move [X26+80], X27
	1575 Move W8, [X0+224]
	1576 Compare W8, 0
	1577 JumpIfNotEqual {1580}
	1578 Call 0x1C17DFC
	1579 Move X0, [X23]
	1580 Move X8, [X0+184]
	1581 Move X27, [X8+120]
	1582 Compare X27, 0
	1583 JumpIfNotEqual {1607}
	1584 Move W8, [X0+224]
	1585 Compare W8, 0
	1586 JumpIfNotEqual {1589}
	1587 Call 0x1C17DFC
	1588 Move X0, [X23]
	1589 Move X8, [X0+184]
	1590 Move X28, [X8]
	1591 Move X8, 0x779000
	1592 Move X8, [X8+1696]
	1593 Move X0, [X8]
	1594 Call 0x1C17F10
	1595 Move X8, 0x792000
	1596 Move X8, [X8+1792]
	1597 Move X1, X28
	1598 Move X3, X31
	1599 Move X27, X0
	1600 Move X2, [X8]
	1601 Call Func`1<Int32>..ctor, X0, X1, X2
	1602 Move X8, [X23]
	1603 Move X28, 0x790000
	1604 Move X8, [X8+184]
	1605 Move [X8+120], X27
	1606 Move X28, [X28+1952]
	1607 Move [X26+96], X27
	1608 Compare X25, 0
	1609 JumpIfEqual {2377}
	1610 Move X2, [X28]
	1611 Move X27, 0x790000
	1612 Move X27, [X27+1936]
	1613 Move X0, X25
	1614 Move X1, X26
	1615 Add X28, X21, 24
	1616 Call 0x2498EC8, X0, X1
	1617 Move W8, [X28+60]
	1618 Compare W8, 0
	1619 JumpIfEqual {1679}
	1620 Move X8, 0x733000
	1621 Move X8, [X8+2416]
	1622 Move X0, [X8]
	1623 Move W8, [X0+224]
	1624 Compare W8, 0
	1625 JumpIfNotEqual {1627}
	1626 Call 0x1C17DFC
	1627 Move X0, X31
	1628 Call Application.get_isEditor
	1629 Move TEMP, X0
	1630 And TEMP, TEMP, 1
	1631 Compare TEMP, 1
	1632 JumpIfNotEqual {1650}
	1633 Compare X20, 0
	1634 JumpIfEqual {2377}
	1635 Move W10, [X20+28]
	1636 Move X8, [X20+16]
	1637 Move X9, [X27]
	1638 Add W10, W10, 1
	1639 Move [X20+28], W10
	1640 Compare X8, 0
	1641 JumpIfEqual {2377}
	1642 NotImplemented "Instruction LDRSW not yet implemented."
	1643 Move W11, [X8+24]
	1644 NotImplemented "Instruction CMP not yet implemented."
	1645 Add W9, W10, 1
	1646 Move [X20+24], W9
	1647 Move X9, [X31+8]
	1648 Add X8, X8, X10
	1649 Move [X8+32], X9
	1650 Compare X20, 0
	1651 JumpIfNotEqual {1658}
	1652 Move X8, [X9+32]
	1653 Move X1, [X31+8]
	1654 Move X0, X20
	1655 Move X8, [X8+192]
	1656 Move X2, [X8+112]
	1657 Call List`1<Object>.AddWithResize, X0, X1
	1658 Move W10, [X20+28]
	1659 Move X8, [X20+16]
	1660 Move X9, [X27]
	1661 Add W10, W10, 1
	1662 Move [X20+28], W10
	1663 Compare X8, 0
	1664 JumpIfEqual {2377}
	1665 NotImplemented "Instruction LDRSW not yet implemented."
	1666 Move W11, [X8+24]
	1667 NotImplemented "Instruction CMP not yet implemented."
	1668 Add W9, W10, 1
	1669 Move [X20+24], W9
	1670 Move X9, [X31+16]
	1671 Add X8, X8, X10
	1672 Move [X8+32], X9
	1673 Move X8, [X9+32]
	1674 Move X1, [X31+16]
	1675 Move X0, X20
	1676 Move X8, [X8+192]
	1677 Move X2, [X8+112]
	1678 Call List`1<Object>.AddWithResize, X0, X1
	1679 Move W8, [X28+61]
	1680 Compare W8, 0
	1681 JumpIfEqual {1704}
	1682 Compare X20, 0
	1683 JumpIfEqual {2377}
	1684 Move W10, [X20+28]
	1685 Move X8, [X20+16]
	1686 Move X9, [X27]
	1687 Add W10, W10, 1
	1688 Move [X20+28], W10
	1689 Compare X8, 0
	1690 JumpIfEqual {2377}
	1691 NotImplemented "Instruction LDRSW not yet implemented."
	1692 Move W11, [X8+24]
	1693 NotImplemented "Instruction CMP not yet implemented."
	1694 Add W9, W10, 1
	1695 Add X8, X8, X10
	1696 Move [X20+24], W9
	1697 Move [X8+32], X24
	1698 Move X8, [X9+32]
	1699 Move X0, X20
	1700 Move X1, X24
	1701 Move X8, [X8+192]
	1702 Move X2, [X8+112]
	1703 Call List`1<Object>.AddWithResize, X0, X1
	1704 Move X8, 0x733000
	1705 Move X8, [X8+1432]
	1706 Move X22, [X28+40]
	1707 Move X0, [X8]
	1708 Move W8, [X0+224]
	1709 Compare W8, 0
	1710 JumpIfNotEqual {1712}
	1711 Call 0x1C17DFC
	1712 Move X0, X22
	1713 Move X1, X31
	1714 Move X2, X31
	1715 Call Object.op_Inequality, X0, X1
	1716 Move TEMP, X0
	1717 And TEMP, TEMP, 1
	1718 Compare TEMP, 1
	1719 JumpIfNotEqual {1769}
	1720 Move W8, [X28+4]
	1721 Compare W8, 0
	1722 JumpIfEqual {1769}
	1723 Move X8, 0x790000
	1724 Move X8, [X8+1880]
	1725 Move X0, [X8]
	1726 Call 0x1C17F10
	1727 Move X1, X31
	1728 Move X22, X0
	1729 Call Container..ctor, X0
	1730 Compare X22, 0
	1731 JumpIfEqual {2377}
	1732 Move X8, 0x792000
	1733 Move X8, [X8+2192]
	1734 Move X23, [X22+72]
	1735 Move X8, [X8]
	1736 Move [X22+40], X8
	1737 Move X8, 0x792000
	1738 Move X8, [X8+1688]
	1739 Move X0, [X8]
	1740 Call 0x1C17F10
	1741 Move X1, X31
	1742 Move X24, X0
	1743 Call IntField..ctor, X0
	1744 Move X19, 0x790000
	1745 Move X19, [X19+1952]
	1746 Compare X24, 0
	1747 JumpIfEqual {2377}
	1748 Move X8, 0x792000
	1749 Move X8, [X8+2224]
	1750 Move X25, 0x792000
	1751 Move X8, [X8]
	1752 Move [X24+40], X8
	1753 Move X25, [X25+1304]
	1754 Move X0, [X25]
	1755 Move W8, [X0+224]
	1756 Compare W8, 0
	1757 JumpIfNotEqual {1760}
	1758 Call 0x1C17DFC
	1759 Move X0, [X25]
	1760 Move X8, [X0+184]
	1761 Move X25, [X8+128]
	1762 Compare X25, 0
	1763 JumpIfNotEqual {1864}
	1764 Move W8, [X0+224]
	1765 Compare W8, 0
	1766 JumpIfEqual {1844}
	1767 Move X28, 0x792000
	1768 Move X28, [X28+1304]
	1769 Compare X20, 0
	1770 JumpIfEqual {2377}
	1771 Move W8, [X20+24]
	1772 Move X19, 0x790000
	1773 Move X19, [X19+1912]
	1774 NotImplemented "Instruction CMP not yet implemented."
	1775 Move X8, 0x790000
	1776 Move X8, [X8+1944]
	1777 Move X21, 0x791000
	1778 Move X0, X20
	1779 Move X1, [X8]
	1780 Move X21, [X21+3912]
	1781 Call List`1<Object>.ToArray, X0
	1782 Move [X29+416], X0
	1783 Move X0, [X19]
	1784 Move W8, [X0+224]
	1785 Compare W8, 0
	1786 JumpIfNotEqual {1788}
	1787 Call 0x1C17DFC
	1788 Move X0, X31
	1789 Call DebugManager.get_instance
	1790 Move X8, [X21]
	1791 Move X20, X0
	1792 Move W9, [X8+224]
	1793 Compare W9, 0
	1794 JumpIfNotEqual {1797}
	1795 Move X0, X8
	1796 Call 0x1C17DFC
	1797 Compare X20, 0
	1798 JumpIfEqual {2377}
	1799 Move X8, [X21]
	1800 Move W2, 1
	1801 Move X0, X20
	1802 Move W3, W31
	1803 Move X8, [X8+184]
	1804 Move W4, W31
	1805 Move X5, X31
	1806 Move X1, [X8+16]
	1807 Call DebugManager.GetPanel, X0, X1, X2, X3, X4
	1808 Compare X0, 0
	1809 JumpIfEqual {2377}
	1810 Move X0, [X0+40]
	1811 Compare X0, 0
	1812 JumpIfEqual {2377}
	1813 Move X8, 0x790000
	1814 Move X8, [X8+1960]
	1815 Move X1, [X29+416]
	1816 Move X2, [X8]
	1817 Call 0x249901C, X0, X1
	1818 Move X0, [X19]
	1819 Move W8, [X0+224]
	1820 Compare W8, 0
	1821 JumpIfNotEqual {1823}
	1822 Call 0x1C17DFC
	1823 Move X0, X31
	1824 Call DebugManager.get_instance
	1825 Compare X0, 0
	1826 JumpIfEqual {2377}
	1827 Move X1, [X29+400]
	1828 Move X20, [X31+112]
	1829 Move X19, [X31+120]
	1830 Move X22, [X31+96]
	1831 Move X21, [X31+104]
	1832 Move X24, [X31+80]
	1833 Move X23, [X31+88]
	1834 Move X26, [X31+64]
	1835 Move X25, [X31+72]
	1836 Move X28, [X31+48]
	1837 Move X27, [X31+56]
	1838 Move X29, [X31+32]
	1839 Move X30, [X31+40]
	1840 Move X2, X31
	1841 Add X31, X31, 128
	1842 Call DebugManager.RegisterData, X0, X1
	1843 Return 
	1844 Call 0x1C17DFC
	1845 Move X28, 0x792000
	1846 Move X28, [X28+1304]
	1847 Move X0, [X28]
	1848 Move X8, [X0+184]
	1849 Move X26, [X8]
	1850 Move X8, 0x779000
	1851 Move X8, [X8+1696]
	1852 Move X0, [X8]
	1853 Call 0x1C17F10
	1854 Move X8, 0x792000
	1855 Move X8, [X8+1800]
	1856 Move X1, X26
	1857 Move X3, X31
	1858 Move X25, X0
	1859 Move X2, [X8]
	1860 Call Func`1<Int32>..ctor, X0, X1, X2
	1861 Move X0, [X28]
	1862 Move X8, [X0+184]
	1863 Move [X8+128], X25
	1864 Move [X24+72], X25
	1865 Move W8, [X0+224]
	1866 Compare W8, 0
	1867 JumpIfNotEqual {1872}
	1868 Call 0x1C17DFC
	1869 Move X8, 0x792000
	1870 Move X8, [X8+1304]
	1871 Move X0, [X8]
	1872 Move X8, [X0+184]
	1873 Move X25, [X8+136]
	1874 Compare X25, 0
	1875 JumpIfNotEqual {1901}
	1876 Move W8, [X0+224]
	1877 Compare W8, 0
	1878 JumpIfEqual {1881}
	1879 Move X28, 0x792000
	1880 Move X28, [X28+1304]
	1881 Call 0x1C17DFC
	1882 Move X28, 0x792000
	1883 Move X28, [X28+1304]
	1884 Move X0, [X28]
	1885 Move X8, [X0+184]
	1886 Move X26, [X8]
	1887 Move X8, 0x737000
	1888 Move X8, [X8+2816]
	1889 Move X0, [X8]
	1890 Call 0x1C17F10
	1891 Move X8, 0x792000
	1892 Move X8, [X8+1808]
	1893 Move X1, X26
	1894 Move X3, X31
	1895 Move X25, X0
	1896 Move X2, [X8]
	1897 Call Action`1<Int32>..ctor, X0, X1, X2
	1898 Move X0, [X28]
	1899 Move X8, [X0+184]
	1900 Move [X8+136], X25
	1901 Move [X24+80], X25
	1902 Move W8, [X0+224]
	1903 Compare W8, 0
	1904 JumpIfNotEqual {1909}
	1905 Call 0x1C17DFC
	1906 Move X8, 0x792000
	1907 Move X8, [X8+1304]
	1908 Move X0, [X8]
	1909 Move X8, [X0+184]
	1910 Move X25, [X8+144]
	1911 Compare X25, 0
	1912 JumpIfNotEqual {1938}
	1913 Move W8, [X0+224]
	1914 Compare W8, 0
	1915 JumpIfEqual {1918}
	1916 Move X28, 0x792000
	1917 Move X28, [X28+1304]
	1918 Call 0x1C17DFC
	1919 Move X28, 0x791000
	1920 Move X28, [X28+1304]
	1921 Move X0, [X28]
	1922 Move X8, [X0+184]
	1923 Move X26, [X8]
	1924 Move X8, 0x778000
	1925 Move X8, [X8+1696]
	1926 Move X0, [X8]
	1927 Call 0x1C17F10
	1928 Move X8, 0x791000
	1929 Move X8, [X8+1816]
	1930 Move X1, X26
	1931 Move X3, X31
	1932 Move X25, X0
	1933 Move X2, [X8]
	1934 Call Func`1<Int32>..ctor, X0, X1, X2
	1935 Move X8, [X28]
	1936 Move X8, [X8+184]
	1937 Move [X8+144], X25
	1938 Move [X24+96], X25
	1939 Compare X23, 0
	1940 JumpIfEqual {2377}
	1941 Move X2, [X19]
	1942 Move X0, X23
	1943 Move X1, X24
	1944 Call 0x2498EC8, X0, X1
	1945 Move X8, 0x791000
	1946 Move X23, [X22+72]
	1947 Move X8, [X8+1672]
	1948 Move X0, [X8]
	1949 Call 0x1C17F10
	1950 Move X1, X31
	1951 Move X24, X0
	1952 Call FloatField..ctor, X0
	1953 Compare X24, 0
	1954 JumpIfEqual {2377}
	1955 Move X8, 0x791000
	1956 Move X8, [X8+2240]
	1957 Move X25, 0x791000
	1958 Move X8, [X8]
	1959 Move [X24+40], X8
	1960 Move X25, [X25+1304]
	1961 Move X0, [X25]
	1962 Move W8, [X0+224]
	1963 Compare W8, 0
	1964 JumpIfNotEqual {1967}
	1965 Call 0x1C17DFC
	1966 Move X0, [X25]
	1967 Move X8, [X0+184]
	1968 Move X25, [X8+152]
	1969 Compare X25, 0
	1970 JumpIfNotEqual {1996}
	1971 Move W8, [X0+224]
	1972 Compare W8, 0
	1973 JumpIfEqual {1976}
	1974 Move X28, 0x791000
	1975 Move X28, [X28+1304]
	1976 Call 0x1C17DFC
	1977 Move X28, 0x791000
	1978 Move X28, [X28+1304]
	1979 Move X0, [X28]
	1980 Move X8, [X0+184]
	1981 Move X26, [X8]
	1982 Move X8, 0x791000
	1983 Move X8, [X8+1680]
	1984 Move X0, [X8]
	1985 Call 0x1C17F10
	1986 Move X8, 0x791000
	1987 Move X8, [X8+1824]
	1988 Move X1, X26
	1989 Move X3, X31
	1990 Move X25, X0
	1991 Move X2, [X8]
	1992 Call Func`1<Single>..ctor, X0, X1, X2
	1993 Move X0, [X28]
	1994 Move X8, [X0+184]
	1995 Move [X8+152], X25
	1996 Move [X24+72], X25
	1997 Move W8, [X0+224]
	1998 Compare W8, 0
	1999 JumpIfNotEqual {2004}
	2000 Call 0x1C17DFC
	2001 Move X8, 0x791000
	2002 Move X8, [X8+1304]
	2003 Move X0, [X8]
	2004 Move X8, [X0+184]
	2005 Move X25, [X8+160]
	2006 Compare X25, 0
	2007 JumpIfNotEqual {2033}
	2008 Move W8, [X0+224]
	2009 Compare W8, 0
	2010 JumpIfEqual {2013}
	2011 Move X28, 0x791000
	2012 Move X28, [X28+1304]
	2013 Call 0x1C17DFC
	2014 Move X28, 0x791000
	2015 Move X28, [X28+1304]
	2016 Move X0, [X28]
	2017 Move X8, [X0+184]
	2018 Move X26, [X8]
	2019 Move X8, 0x734000
	2020 Move X8, [X8+1456]
	2021 Move X0, [X8]
	2022 Call 0x1C17F10
	2023 Move X8, 0x791000
	2024 Move X8, [X8+1832]
	2025 Move X1, X26
	2026 Move X3, X31
	2027 Move X25, X0
	2028 Move X2, [X8]
	2029 Call Action`1<Single>..ctor, X0, X1, X2
	2030 Move X0, [X28]
	2031 Move X8, [X0+184]
	2032 Move [X8+160], X25
	2033 Move [X24+80], X25
	2034 Move W8, [X0+224]
	2035 Compare W8, 0
	2036 JumpIfNotEqual {2041}
	2037 Call 0x1C17DFC
	2038 Move X8, 0x791000
	2039 Move X8, [X8+1304]
	2040 Move X0, [X8]
	2041 Move X8, [X0+184]
	2042 Move X25, [X8+168]
	2043 Compare X25, 0
	2044 JumpIfNotEqual {2070}
	2045 Move W8, [X0+224]
	2046 Compare W8, 0
	2047 JumpIfEqual {2050}
	2048 Move X28, 0x791000
	2049 Move X28, [X28+1304]
	2050 Call 0x1C17DFC
	2051 Move X28, 0x791000
	2052 Move X28, [X28+1304]
	2053 Move X0, [X28]
	2054 Move X8, [X0+184]
	2055 Move X26, [X8]
	2056 Move X8, 0x791000
	2057 Move X8, [X8+1680]
	2058 Move X0, [X8]
	2059 Call 0x1C17F10
	2060 Move X8, 0x791000
	2061 Move X8, [X8+1840]
	2062 Move X1, X26
	2063 Move X3, X31
	2064 Move X25, X0
	2065 Move X2, [X8]
	2066 Call Func`1<Single>..ctor, X0, X1, X2
	2067 Move X0, [X28]
	2068 Move X8, [X0+184]
	2069 Move [X8+168], X25
	2070 Move [X24+96], X25
	2071 Move W8, [X0+224]
	2072 Compare W8, 0
	2073 JumpIfNotEqual {2078}
	2074 Call 0x1C17DFC
	2075 Move X8, 0x791000
	2076 Move X8, [X8+1304]
	2077 Move X0, [X8]
	2078 Move X8, [X0+184]
	2079 Move X25, [X8+176]
	2080 Compare X25, 0
	2081 JumpIfNotEqual {2107}
	2082 Move W8, [X0+224]
	2083 Compare W8, 0
	2084 JumpIfEqual {2087}
	2085 Move X28, 0x791000
	2086 Move X28, [X28+1304]
	2087 Call 0x1C17DFC
	2088 Move X28, 0x791000
	2089 Move X28, [X28+1304]
	2090 Move X0, [X28]
	2091 Move X8, [X0+184]
	2092 Move X26, [X8]
	2093 Move X8, 0x791000
	2094 Move X8, [X8+1680]
	2095 Move X0, [X8]
	2096 Call 0x1C17F10
	2097 Move X8, 0x791000
	2098 Move X8, [X8+1848]
	2099 Move X1, X26
	2100 Move X3, X31
	2101 Move X25, X0
	2102 Move X2, [X8]
	2103 Call Func`1<Single>..ctor, X0, X1, X2
	2104 Move X8, [X28]
	2105 Move X8, [X8+184]
	2106 Move [X8+176], X25
	2107 Move [X24+104], X25
	2108 Compare X23, 0
	2109 JumpIfEqual {2377}
	2110 Move X2, [X19]
	2111 Move X0, X23
	2112 Move X1, X24
	2113 Call 0x2498EC8, X0, X1
	2114 Move X8, 0x790000
	2115 Move X8, [X8+232]
	2116 Move X0, [X8]
	2117 Call 0x1C17F10
	2118 Move X1, X31
	2119 Move X23, X0
	2120 Call EnumField..ctor, X0
	2121 Compare X23, 0
	2122 JumpIfEqual {2377}
	2123 Move X8, 0x791000
	2124 Move X8, [X8+2296]
	2125 Move X9, 0x790000
	2126 Move X0, X23
	2127 Move X8, [X8]
	2128 Move [X23+40], X8
	2129 Move X8, [X29+464]
	2130 Move X9, [X9+224]
	2131 Move [X23+96], X8
	2132 Move X1, [X29+472]
	2133 Move X2, [X9]
	2134 Call 0x2BAA724, X0, X1
	2135 Move X26, 0x778000
	2136 Move X26, [X26+1696]
	2137 Move X0, [X26]
	2138 Call 0x1C17F10
	2139 Move X8, 0x791000
	2140 Move X8, [X8+2088]
	2141 Move X1, X21
	2142 Move X3, X31
	2143 Move X24, X0
	2144 Move X2, [X8]
	2145 Call Func`1<Int32>..ctor, X0, X1, X2
	2146 Move [X23+128], X24
	2147 Move X25, 0x736000
	2148 Move X25, [X25+2816]
	2149 Move X0, [X25]
	2150 Call 0x1C17F10
	2151 Move X8, 0x791000
	2152 Move X8, [X8+2096]
	2153 Move X1, X21
	2154 Move X3, X31
	2155 Move X24, X0
	2156 Move X2, [X8]
	2157 Call Action`1<Int32>..ctor, X0, X1, X2
	2158 Move [X23+136], X24
	2159 Move X0, [X26]
	2160 Call 0x1C17F10
	2161 Move X8, 0x791000
	2162 Move X8, [X8+2104]
	2163 Move X1, X21
	2164 Move X3, X31
	2165 Move X24, X0
	2166 Move X2, [X8]
	2167 Call Func`1<Int32>..ctor, X0, X1, X2
	2168 Move [X23+72], X24
	2169 Move X0, [X25]
	2170 Call 0x1C17F10
	2171 Move X8, 0x791000
	2172 Move X8, [X8+2112]
	2173 Move X1, X21
	2174 Move X3, X31
	2175 Move X24, X0
	2176 Move X2, [X8]
	2177 Call Action`1<Int32>..ctor, X0, X1, X2
	2178 Move [X23+80], X24
	2179 Move [X29+496], X23
	2180 Move X0, [X22+72]
	2181 Compare X0, 0
	2182 JumpIfEqual {2377}
	2183 Move X2, [X19]
	2184 Move X1, X23
	2185 Call 0x2498EC8, X0, X1
	2186 Move X8, 0x791000
	2187 Move X21, [X22+72]
	2188 Move X8, [X8+1672]
	2189 Move X0, [X8]
	2190 Call 0x1C17F10
	2191 Move X1, X31
	2192 Move X23, X0
	2193 Call FloatField..ctor, X0
	2194 Compare X23, 0
	2195 JumpIfEqual {2377}
	2196 Move X8, 0x791000
	2197 Move X8, [X8+2208]
	2198 Move X24, 0x791000
	2199 Move X8, [X8]
	2200 Move [X23+40], X8
	2201 Move X24, [X24+1304]
	2202 Move X0, [X24]
	2203 Move W8, [X0+224]
	2204 Compare W8, 0
	2205 JumpIfNotEqual {2208}
	2206 Call 0x1C17DFC
	2207 Move X0, [X24]
	2208 Move X8, [X0+184]
	2209 Move X24, [X8+184]
	2210 Compare X24, 0
	2211 JumpIfNotEqual {2237}
	2212 Move W8, [X0+224]
	2213 Compare W8, 0
	2214 JumpIfEqual {2217}
	2215 Move X26, 0x791000
	2216 Move X26, [X26+1304]
	2217 Call 0x1C17DFC
	2218 Move X26, 0x791000
	2219 Move X26, [X26+1304]
	2220 Move X0, [X26]
	2221 Move X8, [X0+184]
	2222 Move X25, [X8]
	2223 Move X8, 0x791000
	2224 Move X8, [X8+1680]
	2225 Move X0, [X8]
	2226 Call 0x1C17F10
	2227 Move X8, 0x791000
	2228 Move X8, [X8+1856]
	2229 Move X1, X25
	2230 Move X3, X31
	2231 Move X24, X0
	2232 Move X2, [X8]
	2233 Call Func`1<Single>..ctor, X0, X1, X2
	2234 Move X0, [X26]
	2235 Move X8, [X0+184]
	2236 Move [X8+184], X24
	2237 Move [X23+72], X24
	2238 Move W8, [X0+224]
	2239 Compare W8, 0
	2240 JumpIfNotEqual {2245}
	2241 Call 0x1C17DFC
	2242 Move X8, 0x791000
	2243 Move X8, [X8+1304]
	2244 Move X0, [X8]
	2245 Move X8, [X0+184]
	2246 Move X24, [X8+192]
	2247 Compare X24, 0
	2248 JumpIfNotEqual {2274}
	2249 Move W8, [X0+224]
	2250 Compare W8, 0
	2251 JumpIfEqual {2254}
	2252 Move X26, 0x791000
	2253 Move X26, [X26+1304]
	2254 Call 0x1C17DFC
	2255 Move X26, 0x791000
	2256 Move X26, [X26+1304]
	2257 Move X0, [X26]
	2258 Move X8, [X0+184]
	2259 Move X25, [X8]
	2260 Move X8, 0x734000
	2261 Move X8, [X8+1456]
	2262 Move X0, [X8]
	2263 Call 0x1C17F10
	2264 Move X8, 0x791000
	2265 Move X8, [X8+1864]
	2266 Move X1, X25
	2267 Move X3, X31
	2268 Move X24, X0
	2269 Move X2, [X8]
	2270 Call Action`1<Single>..ctor, X0, X1, X2
	2271 Move X0, [X26]
	2272 Move X8, [X0+184]
	2273 Move [X8+192], X24
	2274 Move [X23+80], X24
	2275 Move W8, [X0+224]
	2276 Compare W8, 0
	2277 JumpIfNotEqual {2282}
	2278 Call 0x1C17DFC
	2279 Move X8, 0x791000
	2280 Move X8, [X8+1304]
	2281 Move X0, [X8]
	2282 Move X8, [X0+184]
	2283 Move X24, [X8+200]
	2284 Compare X24, 0
	2285 JumpIfNotEqual {2311}
	2286 Move W8, [X0+224]
	2287 Compare W8, 0
	2288 JumpIfEqual {2291}
	2289 Move X26, 0x791000
	2290 Move X26, [X26+1304]
	2291 Call 0x1C17DFC
	2292 Move X26, 0x791000
	2293 Move X26, [X26+1304]
	2294 Move X0, [X26]
	2295 Move X8, [X0+184]
	2296 Move X25, [X8]
	2297 Move X8, 0x791000
	2298 Move X8, [X8+1680]
	2299 Move X0, [X8]
	2300 Call 0x1C17F10
	2301 Move X8, 0x791000
	2302 Move X8, [X8+1872]
	2303 Move X1, X25
	2304 Move X3, X31
	2305 Move X24, X0
	2306 Move X2, [X8]
	2307 Call Func`1<Single>..ctor, X0, X1, X2
	2308 Move X0, [X26]
	2309 Move X8, [X0+184]
	2310 Move [X8+200], X24
	2311 Move [X23+96], X24
	2312 Move W8, [X0+224]
	2313 Compare W8, 0
	2314 JumpIfNotEqual {2319}
	2315 Call 0x1C17DFC
	2316 Move X8, 0x791000
	2317 Move X8, [X8+1304]
	2318 Move X0, [X8]
	2319 Move X8, [X0+184]
	2320 Move X24, [X8+208]
	2321 Compare X24, 0
	2322 JumpIfNotEqual {2348}
	2323 Move W8, [X0+224]
	2324 Compare W8, 0
	2325 JumpIfEqual {2328}
	2326 Move X26, 0x791000
	2327 Move X26, [X26+1304]
	2328 Call 0x1C17DFC
	2329 Move X26, 0x791000
	2330 Move X26, [X26+1304]
	2331 Move X0, [X26]
	2332 Move X8, [X0+184]
	2333 Move X25, [X8]
	2334 Move X8, 0x791000
	2335 Move X8, [X8+1680]
	2336 Move X0, [X8]
	2337 Call 0x1C17F10
	2338 Move X8, 0x791000
	2339 Move X8, [X8+1880]
	2340 Move X1, X25
	2341 Move X3, X31
	2342 Move X24, X0
	2343 Move X2, [X8]
	2344 Call Func`1<Single>..ctor, X0, X1, X2
	2345 Move X8, [X26]
	2346 Move X8, [X8+184]
	2347 Move [X8+208], X24
	2348 Move [X23+104], X24
	2349 Compare X21, 0
	2350 JumpIfEqual {2377}
	2351 Move X2, [X19]
	2352 Move X0, X21
	2353 Move X1, X23
	2354 Call 0x2498EC8, X0, X1
	2355 Compare X20, 0
	2356 JumpIfEqual {2377}
	2357 Move W10, [X20+28]
	2358 Move X8, [X20+16]
	2359 Move X9, [X27]
	2360 Add W10, W10, 1
	2361 Move [X20+28], W10
	2362 Compare X8, 0
	2363 JumpIfEqual {2377}
	2364 NotImplemented "Instruction LDRSW not yet implemented."
	2365 Move W11, [X8+24]
	2366 NotImplemented "Instruction CMP not yet implemented."
	2367 Add W9, W10, 1
	2368 Add X8, X8, X10
	2369 Move [X20+24], W9
	2370 Move [X8+32], X22
	2371 Move X8, [X9+32]
	2372 Move X0, X20
	2373 Move X1, X22
	2374 Move X8, [X8+192]
	2375 Move X2, [X8+112]
	2376 Call List`1<Object>.AddWithResize, X0, X1
	2377 Call 0x1C17F20

Method: System.Void UnregisterDebug(System.Boolean destroyPanel)

Disassembly:
	0x039C26D8 LDR X8, [X31 + 0x70]
	0x039C26DC LDP X11, X12, [X31 + 0x88]
	0x039C26E0 LDR W13, [X31 + 0x84]
	0x039C26E4 ADD W9, W9, 0x1
	0x039C26E8 CMP W9, 0x4
	0x039C26EC ADD X12, X12, X8
	0x039C26F0 ADD X11, X11, 0x10
	0x039C26F4 B.NE 0x39C1F38
	0x039C26F8 LDR W14, [X31 + 0x64]
	0x039C26FC LDR W11, [X31 + 0x50]
	0x039C2700 ADD W14, W14, 0x4
	0x039C2704 CMP W14, W11
	0x039C2708 B.GE 0x39C2724
	0x039C270C ADRP X17, 0x790000
	0x039C2710 LDR X9, [X31 + 0x20]
	0x039C2714 LDR X12, [X31 + 0x68]
	0x039C2718 LDR X16, [X31 + 0x40]
	0x039C271C LDR X17, [X17 + 0xE0]
	0x039C2720 B 0x39C2770
	0x039C2724 LDR W8, [X31 + 0xB4]
	0x039C2728 LDR W10, [X31 + 0x4C]
	0x039C272C ADRP X17, 0x790000
	0x039C2730 LDR X9, [X31 + 0x20]
	0x039C2734 LDR X12, [X31 + 0x68]
	0x039C2738 LDR X16, [X31 + 0x40]
	0x039C273C LDR X17, [X17 + 0xE0]
	0x039C2740 ADD W8, W8, 0x4
	0x039C2744 CMP W8, W10
	0x039C2748 B.GE 0x39C2758
	0x039C274C STR W8, [X31 + 0xB4]
	0x039C2750 MOV W14, W31
	0x039C2754 B 0x39C2770
	0x039C2758 ADD W8, W13, 0x4
	0x039C275C LDR W13, [X31 + 0x1C]
	0x039C2760 MOV W14, W31
	0x039C2764 STR W31, [X31 + 0xB4]
	0x039C2768 CMP W8, W13
	0x039C276C CSEL W13, W8, W31, LT
	0x039C2770 LDR X8, [X31 + 0x28]
	0x039C2774 ADD X16, X16, 0x1
	0x039C2778 CMP X16, X8
	0x039C277C B.EQ 0x39C2798
	0x039C2780 LDR W8, [X9 + 0xEC]
	0x039C2784 ADD X12, X12, 0x40
	0x039C2788 STR X12, [X31 + 0x68]
	0x039C278C STR W13, [X31 + 0x84]
	0x039C2790 STR W14, [X31 + 0x64]
	0x039C2794 B 0x39C1EA8
	0x039C2798 LDP X0, X8, [X31 + 0x30]
	0x039C279C STR X0, [X8 + 0xA0]
	0x039C27A0 B 0x39C1CDC
	0x039C27A4 BL 0x1C16F20
	0x039C27A8 BL 0x1C16F28
	0x039C27AC STP X30, X21, [X31 - 0x20]!
	0x039C27B0 STP X20, X19, [X31 + 0x10]
	0x039C27B4 ADRP X20, 0xA1F000
	0x039C27B8 LDRB W8, [X20 + 0xCAC]
	0x039C27BC MOV X19, X0
	0x039C27C0 TBNZ X8, 0x0, 0x39C27D8
	0x039C27C4 ADRP X0, 0x78F000
	0x039C27C8 LDR X0, [X0 + 0xF48]
	0x039C27CC BL 0x1C16CF4
	0x039C27D0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA20000
	007 Move X21, 0x78F000
	008 Move W8, [X22+3242]
	009 Move X21, [X21+1912]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x78F000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move X0, 0x78F000
	020 Move X0, [X0+2064]
	021 Call 0x1C17CF4
	022 Move X0, 0x790000
	023 Move X0, [X0+3912]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3242], W8
	027 Move X0, [X21]
	028 Move X22, 0x790000
	029 Move W8, [X0+224]
	030 Move X22, [X22+3912]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X31
	035 Call DebugManager.get_instance
	036 Move X8, [X22]
	037 Move X21, X0
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X8, [X22]
	044 Compare X21, 0
	045 JumpIfEqual {82}
	046 Move X8, [X8+184]
	047 Move X0, X21
	048 Move X1, [X8+16]
	049 Move TEMP, X20
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {61}
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X2, X31
	058 Move X30, [X31+48]
	059 Call DebugManager.RemovePanel, X0, X1
	060 Return 
	061 Move W2, W31
	062 Move W3, W31
	063 Move W4, W31
	064 Move X5, X31
	065 Call DebugManager.GetPanel, X0, X1, X2, X3, X4
	066 Compare X0, 0
	067 JumpIfEqual {82}
	068 Move X0, [X0+40]
	069 Compare X0, 0
	070 JumpIfEqual {82}
	071 Move X8, 0x78F000
	072 Move X1, [X19+416]
	073 Move X8, [X8+2064]
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X2, [X8]
	079 Move X30, [X31+48]
	080 Call 0x24992D0, X0, X1
	081 Return 
	082 Call 0x1C17F20

Method: System.Boolean ShouldCullCell(UnityEngine.Vector3 cellPosition, UnityEngine.Transform cameraTransform, UnityEngine.Plane[] frustumPlanes)

Disassembly:
	0x039C27D4 STRB W8, [X20 + 0xCAC]
	0x039C27D8 LDRB W8, [X19 + 0x230]
	0x039C27DC CBZ W8, 0x39C284C
	0x039C27E0 ADRP X20, 0x78F000
	0x039C27E4 LDR X20, [X20 + 0xF48]
	0x039C27E8 LDR X19, [X19 + 0x190]
	0x039C27EC LDR X0, [X20]
	0x039C27F0 LDR W8, [X0 + 0xE0]
	0x039C27F4 CBNZ W8, 0x39C27FC
	0x039C27F8 BL 0x1C16DFC
	0x039C27FC ADRP X21, 0xA1F000
	0x039C2800 LDRB W8, [X21 + 0xCB9]
	0x039C2804 CBNZ W8, 0x39C281C
	0x039C2808 ADRP X0, 0x78F000
	0x039C280C LDR X0, [X0 + 0xF48]
	0x039C2810 BL 0x1C16CF4
	0x039C2814 MOVZ W8, 0x1
	0x039C2818 STRB W8, [X21 + 0xCB9]
	0x039C281C LDR X0, [X20]
	0x039C2820 LDR W8, [X0 + 0xE0]
	0x039C2824 CBNZ W8, 0x39C2830
	0x039C2828 BL 0x1C16DFC
	0x039C282C LDR X0, [X20]
	0x039C2830 LDR X8, [X0 + 0xB8]
	0x039C2834 LDR X8, [X8 + 0x8]
	0x039C2838 CBZ X8, 0x39C2858
	0x039C283C CBZ X19, 0x39C2858
	0x039C2840 LDR W8, [X8 + 0x34]
	0x039C2844 SUB W8, W8, 0x1
	0x039C2848 STR W8, [X19 + 0x2C]
	0x039C284C LDP X20, X19, [X31 + 0x10]
	0x039C2850 LDP X30, X21, [X31], #0x20
	0x039C2854 RET
	0x039C2858 BL 0x1C16F20
	0x039C285C B 0x39BA910
	0x039C2860 STP X30, X21, [X31 - 0x20]!
	0x039C2864 STP X20, X19, [X31 + 0x10]
	0x039C2868 ADRP X21, 0xA1F000
	0x039C286C LDRB W8, [X21 + 0xCAF]
	0x039C2870 MOV W20, W1
	0x039C2874 MOV X19, X0
	0x039C2878 TBNZ X8, 0x0, 0x39C289C
	0x039C287C ADRP X0, 0x790000
	0x039C2880 LDR X0, [X0 + 0x408]
	0x039C2884 BL 0x1C16CF4
	0x039C2888 ADRP X0, 0x790000
	0x039C288C LDR X0, [X0 + 0x410]
	0x039C2890 BL 0x1C16CF4
	0x039C2894 MOVZ W8, 0x1
	0x039C2898 STRB W8, [X21 + 0xCAF]
	0x039C289C MOVZ W8, 0x1
	0x039C28A0 STRB W8, [X19 + 0x284]
	0x039C28A4 TBZ X20, 0x0, 0x39C28FC
	0x039C28A8 MOV X0, X19
	0x039C28AC BL 0x39BAA3C
	0x039C28B0 LDR X0, [X19 + 0x260]
	0x039C28B4 CBZ X0, 0x39C28F8
	0x039C28B8 ADRP X21, 0x790000
	0x039C28BC LDR X21, [X21 + 0x408]
	0x039C28C0 MOV W20, W31
	0x039C28C4 LDR W8, [X0 + 0x18]
	0x039C28C8 CMP W20, W8
	0x039C28CC B.GE 0x39C28FC
	0x039C28D0 LDR X2, [X21]
	0x039C28D4 MOV W1, W20
	0x039C28D8 BL 0x2B40178
	0x039C28DC LDR X0, [X0]
	0x039C28E0 CBZ X0, 0x39C28F8
	0x039C28E4 MOV X1, X31
	0x039C28E8 BL 0x39C3D5C
	0x039C28EC LDR X0, [X19 + 0x260]
	0x039C28F0 ADD W20, W20, 0x1
	0x039C28F4 CBNZ X0, 0x39C28C4
	0x039C28F8 BL 0x1C16F20
	0x039C28FC LDP X20, X19, [X31 + 0x10]
	0x039C2900 LDP X30, X21, [X31], #0x20
	0x039C2904 RET
	0x039C2908 CMP W1, 0x1
	0x039C290C CSINC W8, W1, W31, GT
	0x039C2910 STR W8, [X0 + 0x164]
	0x039C2914 RET
	0x039C2918 STP D13, D12, [X31 - 0x70]!
	0x039C291C STP D11, D10, [X31 + 0x10]
	0x039C2920 STP D9, D8, [X31 + 0x20]
	0x039C2924 STP X30, X25, [X31 + 0x30]
	0x039C2928 STP X24, X23, [X31 + 0x40]
	0x039C292C STP X22, X21, [X31 + 0x50]
	0x039C2930 STP X20, X19, [X31 + 0x60]
	0x039C2934 ADRP X20, 0xA1F000
	0x039C2938 LDRB W8, [X20 + 0xCB0]
	0x039C293C MOV X19, X1
	0x039C2940 MOV V8.16B, V2.16B
	0x039C2944 MOV V9.16B, V1.16B
	0x039C2948 MOV V10.16B, V0.16B
	0x039C294C TBNZ X8, 0x0, 0x39C2970
	0x039C2950 ADRP X0, 0x790000
	0x039C2954 LDR X0, [X0 + 0x3F0]
	0x039C2958 BL 0x1C16CF4
	0x039C295C ADRP X0, 0x790000
	0x039C2960 LDR X0, [X0 + 0x340]
	0x039C2964 BL 0x1C16CF4
	0x039C2968 MOVZ W8, 0x1
	0x039C296C STRB W8, [X20 + 0xCB0]
	0x039C2970 CBZ X19, 0x39C2A4C
	0x039C2974 LDR W8, [X19 + 0x18]
	0x039C2978 CMP W8, 0x1
	0x039C297C B.LT 0x39C2A2C
	0x039C2980 ADRP X22, 0x790000
	0x039C2984 ADRP X21, 0x731000
	0x039C2988 LDR X22, [X22 + 0x3F0]
	0x039C298C LDR X21, [X21 + 0x5A8]
	0x039C2990 MOV W20, W31
	0x039C2994 ADRP X23, 0xA16000
	0x039C2998 MOVZ W24, 0x1
	0x039C299C LDR X2, [X22]
	0x039C29A0 MOV X0, X19
	0x039C29A4 MOV W1, W20
	0x039C29A8 BL 0x2B40178
	0x039C29AC LDR X25, [X0]
	0x039C29B0 CBZ X25, 0x39C2A4C
	0x039C29B4 LDR X8, [X25 + 0x10]
	0x039C29B8 CBZ X8, 0x39C2A4C
	0x039C29BC LDP S11, S12, [X8 + 0x10]
	0x039C29C0 LDRB W9, [X23 + 0x85C]
	0x039C29C4 LDR V13, [X8 + 0x18]
	0x039C29C8 CBNZ W9, 0x39C29D8
	0x039C29CC MOV X0, X21
	0x039C29D0 BL 0x1C16CF4
	0x039C29D4 STRB W24, [X23 + 0x85C]
	0x039C29D8 LDR X0, [X21]
	0x039C29DC LDR W8, [X0 + 0xE0]
	0x039C29E0 CBNZ W8, 0x39C29E8
	0x039C29E4 BL 0x1C16DFC
	0x039C29E8 SCVTF S0, S11
	0x039C29EC SCVTF S1, S12
	0x039C29F0 SCVTF S2, S13
	0x039C29F4 FSUB S0, S10, S0
	0x039C29F8 FSUB S1, S9, S1
	0x039C29FC FSUB S2, S8, S2
	0x039C2A00 FMUL S0, S0, S0
	0x039C2A04 FMUL S1, S1, S1
	0x039C2A08 FADD S0, S0, S1
	0x039C2A0C FMUL S1, S2, S2
	0x039C2A10 FADD S0, S1, S0
	0x039C2A14 FSQRT S0, S0
	0x039C2A18 STR S0, [X25 + 0x98]
	0x039C2A1C LDR W8, [X19 + 0x18]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], D13
	003 Move [X31+88], D12
	004 Move [X31+96], D11
	005 Move [X31+104], D10
	006 Move [X31+112], D9
	007 Move [X31+120], D8
	008 Move [X31+128], X30
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move W8, [X0+52]
	015 Move X20, X1
	016 Move X19, X2
	017 Move V8, V2
	018 Subtract W1, W8, 1
	019 Move [X31], D1
	020 Move [X31+16], D0
	021 Move X21, X0
	022 Call ProbeReferenceVolume.BrickSize, X0, X1
	023 Move X22, 0xA17000
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move W8, [X22+2139]
	026 Move V10, [X21+28]
	027 Move [X31+2], V0
	028 Compare W8, 0
	029 JumpIfNotEqual {36}
	030 Move X0, 0x732000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move V0, [X31+2]
	034 Move W8, 1
	035 Move [X22+2139], W8
	036 Move X8, [X21+400]
	037 Compare X8, 0
	038 JumpIfEqual {168}
	039 Move X21, 0x732000
	040 Move X21, [X21+1440]
	041 Move X23, 0xA17000
	042 Move W10, [X23+2750]
	043 Move V11, [X8+40]
	044 Move X9, [X21]
	045 Move X9, [X9+184]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move V12, [X9+20]
	048 Compare W10, 0
	049 JumpIfNotEqual {56}
	050 Move X0, 0x732000
	051 Move X0, [X0+1448]
	052 Call 0x1C17CF4
	053 Move V0, [X31+2]
	054 Move W8, 1
	055 Move [X23+2750], W8
	056 Move X23, 0x732000
	057 Move X23, [X23+1448]
	058 NotImplemented "Instruction FDIV not yet implemented."
	059 Move X0, [X23]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move V0, [X31+2]
	065 Move W9, 0x7F800000
	066 NotImplemented "Instruction FRINTP not yet implemented."
	067 NotImplemented "Instruction FCVTPS not yet implemented."
	068 Move W10, 0xCF000000
	069 Move S2, W9
	070 NotImplemented "Instruction SCVTF not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move S2, W10
	073 NotImplemented "Instruction FCSEL not yet implemented."
	074 Compare X20, 0
	075 JumpIfEqual {168}
	076 Move V1, [X31]
	077 Move V3, [X31+16]
	078 Move S2, 0.5
	079 Multiply S4, S0, S2
	080 Move X0, X20
	081 Move V3.S[1], V1.S[0]
	082 Multiply S1, S8, S0
	083 NotImplemented "Instruction INVALID not yet implemented."
	084 Add S1, S1, S10
	085 Add V2, V2, V9
	086 NotImplemented "Instruction INVALID not yet implemented."
	087 Multiply S4, S4, S12
	088 Move X1, X31
	089 Add V9, V2, V3
	090 Add S10, S1, S4
	091 Call Transform.get_position, X0
	092 Move X20, 0xA17000
	093 Move W8, [X20+2140]
	094 Move V8, V2
	095 Compare W8, 0
	096 JumpIfNotEqual {106}
	097 Move X0, 0x732000
	098 Move X0, [X0+1448]
	099 Move [X31], V1
	100 Move [X31+8], V0
	101 Call 0x1C17CF4
	102 Move V1, [X31]
	103 Move V0, [X31+16]
	104 Move W8, 1
	105 Move [X20+2140], W8
	106 Move X0, [X23]
	107 Move V4, [X31+2]
	108 Move V0.S[1], V1.S[0]
	109 Subtract V12, V0, V9
	110 Move W8, [X0+224]
	111 Multiply S11, S4, S11
	112 Subtract S8, S8, S10
	113 Compare W8, 0
	114 Invalid "Jump target not found in method."
	115 Call 0x1C17DFC
	116 Move V4, [X31+2]
	117 NotImplemented "Instruction INVALID not yet implemented."
	118 NotImplemented "Instruction FADDP not yet implemented."
	119 Multiply S1, S8, S8
	120 Add S0, S1, S0
	121 NotImplemented "Instruction FSQRT not yet implemented."
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 Move W8, [X22+2139]
	124 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	125 Compare W8, 0
	126 JumpIfNotEqual {133}
	127 Move X0, 0x732000
	128 Move X0, [X0+1440]
	129 Call 0x1C17CF4
	130 Move V4, [X31+2]
	131 Move W8, 1
	132 Move [X22+2139], W8
	133 Move X8, [X21]
	134 NotImplemented "Instruction MOVI not yet implemented."
	135 Move S1, 0.5
	136 Add X1, X31, 56
	137 Move X8, [X8+184]
	138 Move X0, X19
	139 Move X2, X31
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 Move V3, [X8+20]
	142 Move [X31+56], D9
	143 Move [X31+64], S10
	144 NotImplemented "Instruction INVALID not yet implemented."
	145 Multiply S3, S4, S3
	146 NotImplemented "Instruction INVALID not yet implemented."
	147 Multiply S1, S3, S1
	148 Move [X31+68], D0
	149 Move [X31+76], S1
	150 Call GeometryUtility.TestPlanesAABB, X0, X1
	151 Xor W8, W0, 1
	152 Move W8, 1
	153 Move X20, [X31+160]
	154 Move X19, [X31+168]
	155 Move X22, [X31+144]
	156 Move X21, [X31+152]
	157 Move X30, [X31+128]
	158 Move X23, [X31+136]
	159 Move D9, [X31+112]
	160 Move D8, [X31+120]
	161 Move D11, [X31+96]
	162 Move D10, [X31+104]
	163 Move D13, [X31+80]
	164 Move D12, [X31+88]
	165 And W0, W8, 1
	166 Add X31, X31, 176
	167 Return X0
	168 Call 0x1C17F20

Method: System.Void DrawProbeDebug(UnityEngine.Camera camera)

Disassembly:
	0x039BFA28 BL 0x1C16F10
	0x039BFA2C MOV X1, X31
	0x039BFA30 MOV X24, X0
	0x039BFA34 BL 0x39A2C94
	0x039BFA38 CBZ X24, 0x39C16D4
	0x039BFA3C ADRP X8, 0x793000
	0x039BFA40 LDR X8, [X8 + 0x898]
	0x039BFA44 ADRP X9, 0x73D000
	0x039BFA48 ADRP X19, 0x793000
	0x039BFA4C ADRP X27, 0x734000
	0x039BFA50 LDR X8, [X8]
	0x039BFA54 LDR X9, [X9 + 0x940]
	0x039BFA58 LDR X19, [X19 + 0x7A8]
	0x039BFA5C LDR X27, [X27 + 0xD28]
	0x039BFA60 STR X8, [X24 + 0x28]
	0x039BFA64 LDR X0, [X9]
	0x039BFA68 ADRP X22, 0x793000
	0x039BFA6C ADRP X29, 0x793000
	0x039BFA70 ADRP X28, 0x793000
	0x039BFA74 LDR X22, [X22 + 0x7E0]
	0x039BFA78 LDR X29, [X29 + 0x668]
	0x039BFA7C LDR X28, [X28 + 0x868]
	0x039BFA80 BL 0x1C16F10
	0x039BFA84 LDR X2, [X19]
	0x039BFA88 MOV X1, X21
	0x039BFA8C MOV X3, X31
	0x039BFA90 MOV X25, X0
	0x039BFA94 BL 0x2D27194
	0x039BFA98 STR X25, [X24 + 0x48]
	0x039BFA9C LDR X0, [X27]
	0x039BFAA0 BL 0x1C16F10
	0x039BFAA4 LDR X2, [X22]
	0x039BFAA8 MOV X1, X21
	0x039BFAAC MOV X3, X31
	0x039BFAB0 MOV X25, X0
	0x039BFAB4 BL 0x29818C8
	0x039BFAB8 STR X25, [X24 + 0x50]
	0x039BFABC LDR X0, [X29]
	0x039BFAC0 BL 0x1C16F10
	0x039BFAC4 LDR X2, [X28]
	0x039BFAC8 MOV X1, X21
	0x039BFACC MOV X3, X31
	0x039BFAD0 MOV X25, X0
	0x039BFAD4 BL 0x2A76438
	0x039BFAD8 STR X25, [X24 + 0x58]
	0x039BFADC CBZ X23, 0x39C16D4
	0x039BFAE0 ADRP X28, 0x791000
	0x039BFAE4 LDR X28, [X28 + 0x7A0]
	0x039BFAE8 MOV X0, X23
	0x039BFAEC MOV X1, X24
	0x039BFAF0 LDR X2, [X28]
	0x039BFAF4 BL 0x2497EC8
	0x039BFAF8 ADRP X8, 0x791000
	0x039BFAFC LDR X23, [X26 + 0x48]
	0x039BFB00 LDR X8, [X8 + 0x768]
	0x039BFB04 LDR X0, [X8]
	0x039BFB08 BL 0x1C16F10
	0x039BFB0C MOV X1, X31
	0x039BFB10 MOV X24, X0
	0x039BFB14 BL 0x39A2C94
	0x039BFB18 CBZ X24, 0x39C16D4
	0x039BFB1C ADRP X8, 0x793000
	0x039BFB20 LDR X8, [X8 + 0x8F0]
	0x039BFB24 ADRP X19, 0x793000
	0x039BFB28 ADRP X22, 0x793000
	0x039BFB2C LDR X8, [X8]
	0x039BFB30 STR X8, [X24 + 0x28]
	0x039BFB34 ADRP X8, 0x73D000
	0x039BFB38 LDR X8, [X8 + 0x940]
	0x039BFB3C LDR X0, [X8]
	0x039BFB40 LDR X19, [X19 + 0x818]
	0x039BFB44 LDR X22, [X22 + 0x820]
	0x039BFB48 BL 0x1C16F10
	0x039BFB4C LDR X2, [X19]
	0x039BFB50 MOV X1, X21
	0x039BFB54 MOV X3, X31
	0x039BFB58 MOV X25, X0
	0x039BFB5C BL 0x2D27194
	0x039BFB60 STR X25, [X24 + 0x48]
	0x039BFB64 ADRP X8, 0x734000
	0x039BFB68 LDR X8, [X8 + 0xD28]
	0x039BFB6C LDR X0, [X8]
	0x039BFB70 BL 0x1C16F10
	0x039BFB74 LDR X2, [X22]
	0x039BFB78 MOV X1, X21
	0x039BFB7C MOV X3, X31
	0x039BFB80 MOV X25, X0
	0x039BFB84 BL 0x29818C8
	0x039BFB88 STR X25, [X24 + 0x50]
	0x039BFB8C ADRP X8, 0x793000
	0x039BFB90 LDR X8, [X8 + 0x668]
	0x039BFB94 LDR X0, [X8]
	0x039BFB98 BL 0x1C16F10
	0x039BFB9C ADRP X8, 0x793000
	0x039BFBA0 LDR X8, [X8 + 0x868]
	0x039BFBA4 MOV X1, X21
	0x039BFBA8 MOV X3, X31
	0x039BFBAC MOV X25, X0
	0x039BFBB0 LDR X2, [X8]
	0x039BFBB4 BL 0x2A76438
	0x039BFBB8 STR X25, [X24 + 0x58]
	0x039BFBBC CBZ X23, 0x39C16D4
	0x039BFBC0 LDR X2, [X28]
	0x039BFBC4 ADRP X19, 0x793000
	0x039BFBC8 LDR X19, [X19 + 0x688]
	0x039BFBCC MOV X0, X23
	0x039BFBD0 MOV X1, X24
	0x039BFBD4 MOV X29, X20
	0x039BFBD8 BL 0x2497EC8
	0x039BFBDC LDR X0, [X19]
	0x039BFBE0 LDR X23, [X26 + 0x48]
	0x039BFBE4 STR X26, [X31 + 0x8]
	0x039BFBE8 BL 0x1C16F10
	0x039BFBEC MOV X1, X31
	0x039BFBF0 MOV X24, X0
	0x039BFBF4 BL 0x39AEC64
	0x039BFBF8 CBZ X24, 0x39C16D4
	0x039BFBFC ADRP X8, 0x793000
	0x039BFC00 LDR X8, [X8 + 0x8D8]
	0x039BFC04 ADRP X9, 0x793000
	0x039BFC08 ADRP X19, 0x793000
	0x039BFC0C ADRP X27, 0x736000
	0x039BFC10 LDR X8, [X8]
	0x039BFC14 LDR X9, [X9 + 0x690]
	0x039BFC18 LDR X19, [X19 + 0x848]
	0x039BFC1C ADRP X22, 0x793000
	0x039BFC20 STR X8, [X24 + 0x28]
	0x039BFC24 LDR X0, [X9]
	0x039BFC28 ADRP X26, 0x793000
	0x039BFC2C LDR X27, [X27 + 0x5B0]
	0x039BFC30 LDR X22, [X22 + 0x850]
	0x039BFC34 LDR X26, [X26 + 0x518]
	0x039BFC38 BL 0x1C16F10
	0x039BFC3C LDR X2, [X19]
	0x039BFC40 MOV X1, X21
	0x039BFC44 MOV X3, X31
	0x039BFC48 MOV X25, X0
	0x039BFC4C BL 0x2D27F24
	0x039BFC50 STR X25, [X24 + 0x48]
	0x039BFC54 LDR X0, [X27]
	0x039BFC58 BL 0x1C16F10
	0x039BFC5C LDR X2, [X22]
	0x039BFC60 MOV X1, X21
	0x039BFC64 MOV X3, X31
	0x039BFC68 MOV X25, X0
	0x039BFC6C BL 0x2A6DA40
	0x039BFC70 STR X25, [X24 + 0x50]
	0x039BFC74 LDR X0, [X26]
	0x039BFC78 LDR W8, [X0 + 0xE0]
	0x039BFC7C CBNZ W8, 0x39BFC88
	0x039BFC80 BL 0x1C16DFC
	0x039BFC84 LDR X0, [X26]
	0x039BFC88 LDR X8, [X0 + 0xB8]
	0x039BFC8C LDR X25, [X8 + 0x18]
	0x039BFC90 CBNZ X25, 0x39BFCF8
	0x039BFC94 LDR W8, [X0 + 0xE0]
	0x039BFC98 CBZ W8, 0x39BFCA8
	0x039BFC9C ADRP X19, 0x793000
	0x039BFCA0 LDR X19, [X19 + 0x518]
	0x039BFCA4 B 0x39BFCB8
	0x039BFCA8 BL 0x1C16DFC
	0x039BFCAC ADRP X19, 0x793000
	0x039BFCB0 LDR X19, [X19 + 0x518]
	0x039BFCB4 LDR X0, [X19]
	0x039BFCB8 LDR X8, [X0 + 0xB8]
	0x039BFCBC LDR X26, [X8]
	0x039BFCC0 ADRP X8, 0x793000
	0x039BFCC4 LDR X8, [X8 + 0x690]
	0x039BFCC8 LDR X0, [X8]
	0x039BFCCC BL 0x1C16F10
	0x039BFCD0 ADRP X8, 0x793000
	0x039BFCD4 LDR X8, [X8 + 0x760]
	0x039BFCD8 MOV X1, X26
	0x039BFCDC MOV X3, X31
	0x039BFCE0 MOV X25, X0
	0x039BFCE4 LDR X2, [X8]
	0x039BFCE8 BL 0x2D27F24
	0x039BFCEC LDR X8, [X19]
	0x039BFCF0 LDR X8, [X8 + 0xB8]
	0x039BFCF4 STR X25, [X8 + 0x18]
	0x039BFCF8 STR X25, [X24 + 0x60]
	0x039BFCFC CBZ X23, 0x39C16D4
	0x039BFD00 LDR X2, [X28]
	0x039BFD04 MOV X0, X23
	0x039BFD08 MOV X1, X24
	0x039BFD0C BL 0x2497EC8
	0x039BFD10 ADRP X8, 0x791000
	0x039BFD14 LDR X8, [X8 + 0x758]
	0x039BFD18 LDR X0, [X8]
	0x039BFD1C BL 0x1C16F10
	0x039BFD20 MOV X1, X31
	0x039BFD24 MOV X27, X0
	0x039BFD28 BL 0x39ADAE0
	0x039BFD2C CBZ X27, 0x39C16D4
	0x039BFD30 ADRP X8, 0x793000
	0x039BFD34 LDR X8, [X8 + 0x900]
	0x039BFD38 LDR X24, [X27 + 0x48]
	0x039BFD3C LDR X8, [X8]
	0x039BFD40 STR X8, [X27 + 0x28]
	0x039BFD44 ADRP X8, 0x791000
	0x039BFD48 LDR X8, [X8 + 0x768]
	0x039BFD4C LDR X0, [X8]
	0x039BFD50 BL 0x1C16F10
	0x039BFD54 MOV X1, X31
	0x039BFD58 MOV X25, X0
	0x039BFD5C BL 0x39A2C94
	0x039BFD60 ADRP X23, 0x793000
	0x039BFD64 LDR X23, [X23 + 0x518]
	0x039BFD68 CBZ X25, 0x39C16D4
	0x039BFD6C ADRP X8, 0x793000
	0x039BFD70 LDR X8, [X8 + 0x918]
	0x039BFD74 ADRP X19, 0x793000
	0x039BFD78 ADRP X22, 0x793000
	0x039BFD7C LDR X8, [X8]
	0x039BFD80 STR X8, [X25 + 0x28]
	0x039BFD84 ADRP X8, 0x73D000
	0x039BFD88 LDR X8, [X8 + 0x940]
	0x039BFD8C LDR X0, [X8]
	0x039BFD90 LDR X19, [X19 + 0x858]
	0x039BFD94 LDR X22, [X22 + 0x860]
	0x039BFD98 BL 0x1C16F10
	0x039BFD9C LDR X2, [X19]
	0x039BFDA0 MOV X1, X21
	0x039BFDA4 MOV X3, X31
	0x039BFDA8 MOV X26, X0
	0x039BFDAC BL 0x2D27194
	0x039BFDB0 STR X26, [X25 + 0x48]
	0x039BFDB4 ADRP X8, 0x734000
	0x039BFDB8 LDR X8, [X8 + 0xD28]
	0x039BFDBC LDR X0, [X8]
	0x039BFDC0 BL 0x1C16F10
	0x039BFDC4 LDR X2, [X22]
	0x039BFDC8 MOV X1, X21
	0x039BFDCC MOV X3, X31
	0x039BFDD0 MOV X26, X0
	0x039BFDD4 BL 0x29818C8
	0x039BFDD8 STR X26, [X25 + 0x50]
	0x039BFDDC ADRP X8, 0x793000
	0x039BFDE0 LDR X8, [X8 + 0x668]
	0x039BFDE4 LDR X0, [X8]
	0x039BFDE8 BL 0x1C16F10
	0x039BFDEC ADRP X8, 0x793000
	0x039BFDF0 LDR X8, [X8 + 0x868]
	0x039BFDF4 MOV X1, X21
	0x039BFDF8 MOV X3, X31
	0x039BFDFC MOV X26, X0
	0x039BFE00 LDR X2, [X8]
	0x039BFE04 BL 0x2A76438
	0x039BFE08 STR X26, [X25 + 0x58]
	0x039BFE0C CBZ X24, 0x39C16D4
	0x039BFE10 LDR X2, [X28]
	0x039BFE14 MOV X0, X24
	0x039BFE18 MOV X1, X25
	0x039BFE1C BL 0x2497EC8
	0x039BFE20 LDR X8, [X29 + 0x190]
	0x039BFE24 LDR X22, [X31 + 0x18]
	0x039BFE28 CBZ X8, 0x39C16D4
	0x039BFE2C LDRB W8, [X8 + 0x10]
	0x039BFE30 STR X27, [X31 + 0x10]
	0x039BFE34 CBZ W8, 0x39C056C
	0x039BFE38 ADRP X8, 0x791000
	0x039BFE3C LDR X8, [X8 + 0x758]
	0x039BFE40 LDR X0, [X8]
	0x039BFE44 BL 0x1C16F10
	0x039BFE48 MOV X1, X31
	0x039BFE4C MOV X19, X0
	0x039BFE50 BL 0x39ADAE0
	0x039BFE54 CBZ X19, 0x39C16D4
	0x039BFE58 STR X29, [X31]
	0x039BFE5C ADRP X8, 0x792000
	0x039BFE60 LDR X25, [X19 + 0x48]
	0x039BFE64 LDR X8, [X8 + 0xE8]
	0x039BFE68 MOV X29, X19
	0x039BFE6C LDR X0, [X8]
	0x039BFE70 BL 0x1C16F10
	0x039BFE74 MOV X1, X31
	0x039BFE78 MOV X26, X0
	0x039BFE7C BL 0x399C0B4
	0x039BFE80 CBZ X26, 0x39C16D4
	0x039BFE84 ADRP X8, 0x793000
	0x039BFE88 LDR X8, [X8 + 0x8B8]
	0x039BFE8C ADRP X27, 0x793000
	0x039BFE90 ADRP X20, 0x793000
	0x039BFE94 LDR X27, [X27 + 0x768]
	0x039BFE98 LDR X20, [X20 + 0x770]
	0x039BFE9C LDR X8, [X8]
	0x039BFEA0 ADRP X23, 0x793000
	0x039BFEA4 ADRP X28, 0x734000
	0x039BFEA8 ADRP X19, 0x793000
	0x039BFEAC LDR X23, [X23 + 0x670]
	0x039BFEB0 LDR X28, [X28 + 0x6C0]
	0x039BFEB4 LDR X19, [X19 + 0x778]
	0x039BFEB8 STR X8, [X26 + 0x28]
	0x039BFEBC ADRP X24, 0x77A000
	0x039BFEC0 LDR X24, [X24 + 0x6A0]
	0x039BFEC4 LDR X0, [X24]
	0x039BFEC8 BL 0x1C16F10
	0x039BFECC LDR X2, [X27]
	0x039BFED0 MOV X1, X21
	0x039BFED4 MOV X3, X31
	0x039BFED8 MOV X27, X0
	0x039BFEDC BL 0x2D27710
	0x039BFEE0 STR X27, [X26 + 0x48]
	0x039BFEE4 ADRP X22, 0x738000
	0x039BFEE8 LDR X22, [X22 + 0xB00]
	0x039BFEEC LDR X0, [X22]
	0x039BFEF0 BL 0x1C16F10
	0x039BFEF4 LDR X2, [X20]
	0x039BFEF8 MOV X1, X21
	0x039BFEFC MOV X3, X31
	0x039BFF00 MOV X27, X0
	0x039BFF04 BL 0x2983F04
	0x039BFF08 STR X27, [X26 + 0x50]
	0x039BFF0C LDR X0, [X28]
	0x039BFF10 LDR X27, [X23]
	0x039BFF14 LDR W8, [X0 + 0xE0]
	0x039BFF18 CBNZ W8, 0x39BFF20
	0x039BFF1C BL 0x1C16DFC
	0x039BFF20 MOV X0, X27
	0x039BFF24 MOV X1, X31
	0x039BFF28 BL 0x338C698
	0x039BFF2C MOV X1, X0
	0x039BFF30 MOV X0, X26
	0x039BFF34 MOV X2, X31
	0x039BFF38 BL 0x39AED9C
	0x039BFF3C LDR X0, [X24]
	0x039BFF40 BL 0x1C16F10
	0x039BFF44 LDR X2, [X19]
	0x039BFF48 MOV X1, X21
	0x039BFF4C MOV X3, X31
	0x039BFF50 MOV X27, X0
	0x039BFF54 BL 0x2D27710
	0x039BFF58 STR X27, [X26 + 0x80]
	0x039BFF5C LDR X0, [X22]
	0x039BFF60 BL 0x1C16F10
	0x039BFF64 ADRP X8, 0x793000
	0x039BFF68 LDR X8, [X8 + 0x780]
	0x039BFF6C MOV X1, X21
	0x039BFF70 MOV X3, X31
	0x039BFF74 MOV X27, X0
	0x039BFF78 LDR X2, [X8]
	0x039BFF7C BL 0x2983F04
	0x039BFF80 STR X27, [X26 + 0x88]
	0x039BFF84 ADRP X8, 0x792000
	0x039BFF88 LDR X8, [X8 + 0x458]
	0x039BFF8C LDR X0, [X8]
	0x039BFF90 BL 0x1C16F10
	0x039BFF94 ADRP X8, 0x793000
	0x039BFF98 LDR X8, [X8 + 0x870]
	0x039BFF9C MOV X1, X21
	0x039BFFA0 MOV X3, X31
	0x039BFFA4 MOV X27, X0
	0x039BFFA8 LDR X2, [X8]
	0x039BFFAC BL 0x2A7689C
	0x039BFFB0 STR X27, [X26 + 0x58]
	0x039BFFB4 ADRP X28, 0x791000
	0x039BFFB8 ADRP X23, 0x793000
	0x039BFFBC LDR X28, [X28 + 0x7A0]
	0x039BFFC0 LDR X23, [X23 + 0x518]
	0x039BFFC4 CBZ X25, 0x39C16D4
	0x039BFFC8 LDR X2, [X28]
	0x039BFFCC MOV X0, X25
	0x039BFFD0 MOV X1, X26
	0x039BFFD4 BL 0x2497EC8
	0x039BFFD8 ADRP X8, 0x793000
	0x039BFFDC LDR X25, [X29 + 0x48]
	0x039BFFE0 LDR X8, [X8 + 0x688]
	0x039BFFE4 MOV X24, X29
	0x039BFFE8 LDR X0, [X8]
	0x039BFFEC BL 0x1C16F10
	0x039BFFF0 MOV X1, X31
	0x039BFFF4 MOV X26, X0
	0x039BFFF8 BL 0x39AEC64
	0x039BFFFC LDR X29, [X31]
	0x039C0000 CBZ X26, 0x39C16D4
	0x039C0004 ADRP X8, 0x792000
	0x039C0008 LDR X8, [X8 + 0x8E8]
	0x039C000C ADRP X19, 0x792000
	0x039C0010 ADRP X20, 0x792000
	0x039C0014 LDR X8, [X8]
	0x039C0018 STR X8, [X26 + 0x28]
	0x039C001C ADRP X8, 0x792000
	0x039C0020 LDR X8, [X8 + 0x690]
	0x039C0024 LDR X0, [X8]
	0x039C0028 LDR X19, [X19 + 0x788]
	0x039C002C LDR X20, [X20 + 0x790]
	0x039C0030 BL 0x1C16F10
	0x039C0034 LDR X2, [X19]
	0x039C0038 MOV X1, X21
	0x039C003C MOV X3, X31
	0x039C0040 MOV X27, X0
	0x039C0044 BL 0x2D27F24
	0x039C0048 STR X27, [X26 + 0x48]
	0x039C004C ADRP X8, 0x735000
	0x039C0050 LDR X8, [X8 + 0x5B0]
	0x039C0054 LDR X0, [X8]
	0x039C0058 BL 0x1C16F10
	0x039C005C LDR X2, [X20]
	0x039C0060 MOV X1, X21
	0x039C0064 MOV X3, X31
	0x039C0068 MOV X27, X0
	0x039C006C BL 0x2A6DA40
	0x039C0070 STR X27, [X26 + 0x50]
	0x039C0074 LDR X0, [X23]
	0x039C0078 LDR W8, [X0 + 0xE0]
	0x039C007C CBNZ W8, 0x39C0088
	0x039C0080 BL 0x1C16DFC
	0x039C0084 LDR X0, [X23]
	0x039C0088 LDR X8, [X0 + 0xB8]
	0x039C008C ADRP X19, 0x779000
	0x039C0090 LDR X27, [X8 + 0x20]
	0x039C0094 LDR X19, [X19 + 0x6A0]
	0x039C0098 CBNZ X27, 0x39C00F4
	0x039C009C LDR W8, [X0 + 0xE0]
	0x039C00A0 CBNZ W8, 0x39C00AC
	0x039C00A4 BL 0x1C16DFC
	0x039C00A8 LDR X0, [X23]
	0x039C00AC LDR X8, [X0 + 0xB8]
	0x039C00B0 LDR X28, [X8]
	0x039C00B4 ADRP X8, 0x792000
	0x039C00B8 LDR X8, [X8 + 0x690]
	0x039C00BC LDR X0, [X8]
	0x039C00C0 BL 0x1C16F10
	0x039C00C4 ADRP X8, 0x792000
	0x039C00C8 LDR X8, [X8 + 0x6A8]
	0x039C00CC MOV X1, X28
	0x039C00D0 MOV X3, X31
	0x039C00D4 MOV X27, X0
	0x039C00D8 LDR X2, [X8]
	0x039C00DC BL 0x2D27F24
	0x039C00E0 LDR X0, [X23]
	0x039C00E4 ADRP X28, 0x790000
	0x039C00E8 LDR X8, [X0 + 0xB8]
	0x039C00EC STR X27, [X8 + 0x20]
	0x039C00F0 LDR X28, [X28 + 0x7A0]
	0x039C00F4 STR X27, [X26 + 0x60]
	0x039C00F8 LDR W8, [X0 + 0xE0]
	0x039C00FC CBNZ W8, 0x39C0108
	0x039C0100 BL 0x1C16DFC
	0x039C0104 LDR X0, [X23]
	0x039C0108 LDR X8, [X0 + 0xB8]
	0x039C010C LDR X27, [X8 + 0x28]
	0x039C0110 CBNZ X27, 0x39C016C
	0x039C0114 LDR W8, [X0 + 0xE0]
	0x039C0118 CBNZ W8, 0x39C0124
	0x039C011C BL 0x1C16DFC
	0x039C0120 LDR X0, [X23]
	0x039C0124 LDR X8, [X0 + 0xB8]
	0x039C0128 LDR X28, [X8]
	0x039C012C ADRP X8, 0x792000
	0x039C0130 LDR X8, [X8 + 0x690]
	0x039C0134 LDR X0, [X8]
	0x039C0138 BL 0x1C16F10
	0x039C013C ADRP X8, 0x792000
	0x039C0140 LDR X8, [X8 + 0x6B0]
	0x039C0144 MOV X1, X28
	0x039C0148 MOV X3, X31
	0x039C014C MOV X27, X0
	0x039C0150 LDR X2, [X8]
	0x039C0154 BL 0x2D27F24
	0x039C0158 LDR X8, [X23]
	0x039C015C ADRP X28, 0x790000
	0x039C0160 LDR X8, [X8 + 0xB8]
	0x039C0164 STR X27, [X8 + 0x28]
	0x039C0168 LDR X28, [X28 + 0x7A0]
	0x039C016C STR X27, [X26 + 0x68]
	0x039C0170 CBZ X25, 0x39C16D4
	0x039C0174 LDR X2, [X28]
	0x039C0178 MOV X0, X25
	0x039C017C MOV X1, X26
	0x039C0180 BL 0x2497EC8
	0x039C0184 LDR X8, [X29 + 0x190]
	0x039C0188 CBZ X8, 0x39C16D4
	0x039C018C LDR W8, [X8 + 0x1C]
	0x039C0190 CMP W8, 0x2
	0x039C0194 B.HI 0x39C0240
	0x039C0198 ADRP X8, 0x792000
	0x039C019C LDR X25, [X24 + 0x48]
	0x039C01A0 LDR X8, [X8 + 0x688]
	0x039C01A4 LDR X0, [X8]
	0x039C01A8 BL 0x1C16F10
	0x039C01AC MOV X1, X31
	0x039C01B0 MOV X26, X0
	0x039C01B4 BL 0x39AEC64
	0x039C01B8 CBZ X26, 0x39C16D4
	0x039C01BC ADRP X8, 0x792000
	0x039C01C0 LDR X8, [X8 + 0x8A8]
	0x039C01C4 LDR X8, [X8]
	0x039C01C8 STR X8, [X26 + 0x28]
	0x039C01CC ADRP X8, 0x792000
	0x039C01D0 LDR X8, [X8 + 0x690]
	0x039C01D4 LDR X0, [X8]
	0x039C01D8 BL 0x1C16F10
	0x039C01DC ADRP X8, 0x792000
	0x039C01E0 LDR X8, [X8 + 0x798]
	0x039C01E4 MOV X1, X21
	0x039C01E8 MOV X3, X31
	0x039C01EC MOV X27, X0
	0x039C01F0 LDR X2, [X8]
	0x039C01F4 BL 0x2D27F24
	0x039C01F8 STR X27, [X26 + 0x48]
	0x039C01FC ADRP X8, 0x735000
	0x039C0200 LDR X8, [X8 + 0x5B0]
	0x039C0204 LDR X0, [X8]
	0x039C0208 BL 0x1C16F10
	0x039C020C ADRP X8, 0x792000
	0x039C0210 LDR X8, [X8 + 0x7A0]
	0x039C0214 MOV X1, X21
	0x039C0218 MOV X3, X31
	0x039C021C MOV X27, X0
	0x039C0220 LDR X2, [X8]
	0x039C0224 BL 0x2A6DA40
	0x039C0228 STR X27, [X26 + 0x50]
	0x039C022C CBZ X25, 0x39C16D4
	0x039C0230 LDR X2, [X28]
	0x039C0234 MOV X0, X25
	0x039C0238 MOV X1, X26
	0x039C023C BL 0x2497EC8
	0x039C0240 ADRP X8, 0x792000
	0x039C0244 LDR X25, [X24 + 0x48]
	0x039C0248 LDR X8, [X8 + 0x698]
	0x039C024C LDR X0, [X8]
	0x039C0250 BL 0x1C16F10
	0x039C0254 MOV X1, X31
	0x039C0258 MOV X26, X0
	0x039C025C BL 0x39AEAFC
	0x039C0260 CBZ X26, 0x39C16D4
	0x039C0264 ADRP X8, 0x792000
	0x039C0268 LDR X8, [X8 + 0x880]
	0x039C026C ADRP X20, 0x792000
	0x039C0270 LDR X8, [X8]
	0x039C0274 STR X8, [X26 + 0x28]
	0x039C0278 LDR X0, [X19]
	0x039C027C ADRP X19, 0x792000
	0x039C0280 LDR X19, [X19 + 0x7B0]
	0x039C0284 LDR X20, [X20 + 0x7B8]
	0x039C0288 BL 0x1C16F10
	0x039C028C LDR X2, [X19]
	0x039C0290 MOV X1, X21
	0x039C0294 MOV X3, X31
	0x039C0298 MOV X27, X0
	0x039C029C BL 0x2D27710
	0x039C02A0 STR X27, [X26 + 0x48]
	0x039C02A4 LDR X0, [X22]
	0x039C02A8 BL 0x1C16F10
	0x039C02AC LDR X2, [X20]
	0x039C02B0 MOV X1, X21
	0x039C02B4 MOV X3, X31
	0x039C02B8 MOV X27, X0
	0x039C02BC BL 0x2983F04
	0x039C02C0 STR X27, [X26 + 0x50]
	0x039C02C4 LDR X0, [X23]
	0x039C02C8 LDR W8, [X0 + 0xE0]
	0x039C02CC CBNZ W8, 0x39C02D8
	0x039C02D0 BL 0x1C16DFC
	0x039C02D4 LDR X0, [X23]
	0x039C02D8 LDR X8, [X0 + 0xB8]
	0x039C02DC ADRP X19, 0x779000
	0x039C02E0 LDR X27, [X8 + 0x30]
	0x039C02E4 LDR X19, [X19 + 0x6A0]
	0x039C02E8 CBNZ X27, 0x39C033C
	0x039C02EC LDR W8, [X0 + 0xE0]
	0x039C02F0 CBNZ W8, 0x39C02FC
	0x039C02F4 BL 0x1C16DFC
	0x039C02F8 LDR X0, [X23]
	0x039C02FC LDR X8, [X0 + 0xB8]
	0x039C0300 LDR X0, [X19]
	0x039C0304 LDR X28, [X8]
	0x039C0308 BL 0x1C16F10
	0x039C030C ADRP X8, 0x792000
	0x039C0310 LDR X8, [X8 + 0x6B8]
	0x039C0314 MOV X1, X28
	0x039C0318 MOV X3, X31
	0x039C031C MOV X27, X0
	0x039C0320 LDR X2, [X8]
	0x039C0324 BL 0x2D27710
	0x039C0328 LDR X0, [X23]
	0x039C032C ADRP X28, 0x790000
	0x039C0330 LDR X8, [X0 + 0xB8]
	0x039C0334 STR X27, [X8 + 0x30]
	0x039C0338 LDR X28, [X28 + 0x7A0]
	0x039C033C STR X27, [X26 + 0x60]
	0x039C0340 LDR W8, [X0 + 0xE0]
	0x039C0344 CBNZ W8, 0x39C0350
	0x039C0348 BL 0x1C16DFC
	0x039C034C LDR X0, [X23]
	0x039C0350 LDR X8, [X0 + 0xB8]
	0x039C0354 LDR X27, [X8 + 0x38]
	0x039C0358 CBNZ X27, 0x39C03AC
	0x039C035C LDR W8, [X0 + 0xE0]
	0x039C0360 CBNZ W8, 0x39C036C
	0x039C0364 BL 0x1C16DFC
	0x039C0368 LDR X0, [X23]
	0x039C036C LDR X8, [X0 + 0xB8]
	0x039C0370 LDR X0, [X19]
	0x039C0374 LDR X28, [X8]
	0x039C0378 BL 0x1C16F10
	0x039C037C ADRP X8, 0x792000
	0x039C0380 LDR X8, [X8 + 0x6C0]
	0x039C0384 MOV X1, X28
	0x039C0388 MOV X3, X31
	0x039C038C MOV X27, X0
	0x039C0390 LDR X2, [X8]
	0x039C0394 BL 0x2D27710
	0x039C0398 LDR X8, [X23]
	0x039C039C ADRP X28, 0x790000
	0x039C03A0 LDR X8, [X8 + 0xB8]
	0x039C03A4 STR X27, [X8 + 0x38]
	0x039C03A8 LDR X28, [X28 + 0x7A0]
	0x039C03AC STR X27, [X26 + 0x68]
	0x039C03B0 CBZ X25, 0x39C16D4
	0x039C03B4 LDR X2, [X28]
	0x039C03B8 MOV X0, X25
	0x039C03BC MOV X1, X26
	0x039C03C0 BL 0x2497EC8
	0x039C03C4 ADRP X8, 0x792000
	0x039C03C8 LDR X25, [X24 + 0x48]
	0x039C03CC LDR X8, [X8 + 0x698]
	0x039C03D0 LDR X0, [X8]
	0x039C03D4 BL 0x1C16F10
	0x039C03D8 MOV X1, X31
	0x039C03DC MOV X26, X0
	0x039C03E0 BL 0x39AEAFC
	0x039C03E4 CBZ X26, 0x39C16D4
	0x039C03E8 ADRP X8, 0x792000
	0x039C03EC LDR X8, [X8 + 0x910]
	0x039C03F0 ADRP X20, 0x792000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+96], D10
	003 Move [X31+112], D9
	004 Move [X31+120], D8
	005 Move [X31+128], X29
	006 Move [X31+136], X30
	007 Move [X31+144], X28
	008 Move [X31+152], X27
	009 Move [X31+160], X26
	010 Move [X31+168], X25
	011 Move [X31+176], X24
	012 Move [X31+184], X23
	013 Move [X31+192], X22
	014 Move [X31+200], X21
	015 Move [X31+208], X20
	016 Move [X31+216], X19
	017 Move X21, 0xA23000
	018 Move W8, [X21+3243]
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {90}
	025 Move X0, 0x794000
	026 Move X0, [X0+1528]
	027 Call 0x1C17CF4
	028 Move X0, 0x794000
	029 Move X0, [X0+1096]
	030 Call 0x1C17CF4
	031 Move X0, 0x794000
	032 Move X0, [X0+1104]
	033 Call 0x1C17CF4
	034 Move X0, 0x794000
	035 Move X0, [X0+1112]
	036 Call 0x1C17CF4
	037 Move X0, 0x794000
	038 Move X0, [X0+1120]
	039 Call 0x1C17CF4
	040 Move X0, 0x739000
	041 Move X0, [X0+712]
	042 Call 0x1C17CF4
	043 Move X0, 0x794000
	044 Move X0, [X0+1536]
	045 Call 0x1C17CF4
	046 Move X0, 0x794000
	047 Move X0, [X0+1544]
	048 Call 0x1C17CF4
	049 Move X0, 0x794000
	050 Move X0, [X0+1552]
	051 Call 0x1C17CF4
	052 Move X0, 0x793000
	053 Move X0, [X0+3912]
	054 Call 0x1C17CF4
	055 Move X0, 0x794000
	056 Move X0, [X0+1128]
	057 Call 0x1C17CF4
	058 Move X0, 0x794000
	059 Move X0, [X0+1560]
	060 Call 0x1C17CF4
	061 Move X0, 0x794000
	062 Move X0, [X0+1568]
	063 Call 0x1C17CF4
	064 Move X0, 0x794000
	065 Move X0, [X0+1576]
	066 Call 0x1C17CF4
	067 Move X0, 0x794000
	068 Move X0, [X0+632]
	069 Call 0x1C17CF4
	070 Move X0, 0x794000
	071 Move X0, [X0+1584]
	072 Call 0x1C17CF4
	073 Move X0, 0x794000
	074 Move X0, [X0+1592]
	075 Call 0x1C17CF4
	076 Move X0, 0x794000
	077 Move X0, [X0+1600]
	078 Call 0x1C17CF4
	079 Move X0, 0x794000
	080 Move X0, [X0+1608]
	081 Call 0x1C17CF4
	082 Move X0, 0x794000
	083 Move X0, [X0+1616]
	084 Call 0x1C17CF4
	085 Move X0, 0x794000
	086 Move X0, [X0+1624]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X21+3243], W8
	090 Move [X31+64], X31
	091 Move [X31+72], X31
	092 Move [X31+80], X31
	093 Move W8, [X20+322]
	094 Compare W8, 0
	095 JumpIfEqual {591}
	096 Move W8, [X20+321]
	097 Compare W8, 0
	098 JumpIfEqual {591}
	099 Move X8, [X20+400]
	100 Compare X8, 0
	101 JumpIfEqual {628}
	102 Move W9, [X8+16]
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Move W8, [X8+56]
	106 Compare W8, 0
	107 JumpIfEqual {591}
	108 Move X1, [X20+456]
	109 Move X0, X19
	110 Move X2, X31
	111 Call GeometryUtility.CalculateFrustumPlanes, X0, X1
	112 Move X0, [X20+432]
	113 Compare X0, 0
	114 JumpIfEqual {628}
	115 Move X1, X31
	116 Move X2, X31
	117 Call Material.set_shaderKeywords, X0, X1
	118 Move W8, [X20+376]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, [X20+432]
	122 Compare X0, 0
	123 JumpIfEqual {628}
	124 Move X8, 0x794000
	125 Move X8, [X8+1616]
	126 Move X0, [X20+432]
	127 Compare X0, 0
	128 JumpIfEqual {628}
	129 Move X8, 0x794000
	130 Move X8, [X8+632]
	131 Move X1, [X8]
	132 Move X2, X31
	133 Call Material.EnableKeyword, X0, X1
	134 Move X0, [X20+432]
	135 Compare X0, 0
	136 JumpIfEqual {628}
	137 Move W1, 3000
	138 Move X2, X31
	139 Call Material.set_renderQueue, X0, X1
	140 Move X0, [X20+448]
	141 Compare X0, 0
	142 JumpIfEqual {628}
	143 Move W1, 3000
	144 Move X2, X31
	145 Call Material.set_renderQueue, X0, X1
	146 Move X21, 0x793000
	147 Move X21, [X21+3912]
	148 Move X0, [X21]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {153}
	152 Call 0x1C17DFC
	153 Move X24, 0xA23000
	154 Move W8, [X24+3257]
	155 Compare W8, 0
	156 JumpIfNotEqual {162}
	157 Move X0, 0x793000
	158 Move X0, [X0+3912]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X24+3257], W8
	162 Move X0, [X21]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move X0, [X21]
	168 Move X8, [X0+184]
	169 Move X8, [X8+8]
	170 Compare X8, 0
	171 JumpIfEqual {628}
	172 Move X0, [X8+128]
	173 Compare X0, 0
	174 JumpIfEqual {628}
	175 Move X8, 0x794000
	176 Move X8, [X8+1528]
	177 Move X1, [X8]
	178 Call Dictionary`2<Int32, Object>.get_Count, X0
	179 Move X8, [X21]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W9, [X8+224]
	182 Compare W9, 0
	183 JumpIfNotEqual {186}
	184 Move X0, X8
	185 Call 0x1C17DFC
	186 Move W8, [X24+3257]
	187 Compare W8, 0
	188 JumpIfNotEqual {194}
	189 Move X0, 0x793000
	190 Move X0, [X0+3912]
	191 Call 0x1C17CF4
	192 Move W8, 1
	193 Move [X24+3257], W8
	194 Move X8, [X21]
	195 Move W9, [X8+224]
	196 Compare W9, 0
	197 JumpIfNotEqual {201}
	198 Move X0, X8
	199 Call 0x1C17DFC
	200 Move X8, [X21]
	201 Move X9, [X8+184]
	202 Move X9, [X9+8]
	203 Compare X9, 0
	204 JumpIfEqual {628}
	205 Move W9, [X9+52]
	206 Subtract W25, W9, 1
	207 Move W25, W31
	208 Move W9, [X8+224]
	209 Compare W9, 0
	210 JumpIfNotEqual {213}
	211 Move X0, X8
	212 Call 0x1C17DFC
	213 Move W8, [X24+3257]
	214 Compare W8, 0
	215 JumpIfNotEqual {221}
	216 Move X0, 0x793000
	217 Move X0, [X0+3912]
	218 Call 0x1C17CF4
	219 Move W8, 1
	220 Move [X24+3257], W8
	221 Move X0, [X21]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {227}
	225 Call 0x1C17DFC
	226 Move X0, [X21]
	227 Move X8, [X0+184]
	228 Move X8, [X8+8]
	229 Compare X8, 0
	230 JumpIfEqual {628}
	231 Move X0, [X8+128]
	232 Compare X0, 0
	233 JumpIfEqual {628}
	234 Move X26, 0x794000
	235 Move X26, [X26+1096]
	236 Move X1, [X26]
	237 Call Dictionary`2<Int32, Object>.get_Values, X0
	238 Compare X0, 0
	239 JumpIfEqual {628}
	240 Move X27, 0x794000
	241 Move X27, [X27+1128]
	242 Add X8, X31, 40
	243 Move X1, [X27]
	244 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 Move X8, [X31+56]
	247 Move X22, 0x794000
	248 Move [X31+4], V0
	249 Move [X31+80], X8
	250 Move X22, [X22+1112]
	251 Move X1, [X22]
	252 Add X0, X31, 64
	253 Call Enumerator<Int32, Object>.MoveNext, X0
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {267}
	258 Move X8, [X31+80]
	259 Compare X8, 0
	260 JumpIfEqual {623}
	261 Move X8, [X8+16]
	262 Compare X8, 0
	263 JumpIfEqual {624}
	264 Move W8, [X8+36]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 NotImplemented "Instruction CSEL not yet implemented."
	267 Move X8, 0x794000
	268 Move X8, [X8+1104]
	269 Add X0, X31, 64
	270 Move X1, [X8]
	271 Call Enumerator<Int32, Object>.Dispose, X0
	272 Move X22, [X20+400]
	273 Compare X22, 0
	274 JumpIfEqual {628}
	275 Move X0, [X21]
	276 Move W23, [X22+44]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move W8, [X24+3257]
	282 Compare W8, 0
	283 JumpIfNotEqual {289}
	284 Move X0, 0x793000
	285 Move X0, [X0+3912]
	286 Call 0x1C17CF4
	287 Move W8, 1
	288 Move [X24+3257], W8
	289 Move X0, [X21]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {295}
	293 Call 0x1C17DFC
	294 Move X0, [X21]
	295 Move X8, [X0+184]
	296 Move X8, [X8+8]
	297 Compare X8, 0
	298 JumpIfEqual {628}
	299 Move W8, [X8+52]
	300 Subtract W8, W8, 1
	301 NotImplemented "Instruction CMP not yet implemented."
	302 NotImplemented "Instruction CSEL not yet implemented."
	303 Move [X22+44], W8
	304 Move X8, [X20+400]
	305 Compare X8, 0
	306 JumpIfEqual {628}
	307 Move W9, [X24+3257]
	308 Move W22, [X8+44]
	309 Compare W9, 0
	310 JumpIfNotEqual {316}
	311 Move X0, X21
	312 Call 0x1C17CF4
	313 Move X0, [X21]
	314 Move W8, 1
	315 Move [X24+3257], W8
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {321}
	319 Call 0x1C17DFC
	320 Move X0, [X21]
	321 Move X8, [X0+184]
	322 Move X8, [X8+8]
	323 Compare X8, 0
	324 JumpIfEqual {628}
	325 Move W9, [X8+52]
	326 Move X8, [X20+400]
	327 Subtract W9, W9, 1
	328 NotImplemented "Instruction CMP not yet implemented."
	329 NotImplemented "Instruction CSET not yet implemented."
	330 Move [X20+560], W9
	331 Compare X8, 0
	332 JumpIfEqual {628}
	333 Move W10, [X8+44]
	334 Move W9, [X8+48]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 NotImplemented "Instruction CSEL not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 NotImplemented "Instruction CSEL not yet implemented."
	339 Move [X8+48], W9
	340 Move W8, [X24+3257]
	341 Compare W8, 0
	342 JumpIfNotEqual {348}
	343 Move X0, X21
	344 Call 0x1C17CF4
	345 Move X0, [X21]
	346 Move W8, 1
	347 Move [X24+3257], W8
	348 Move W8, [X0+224]
	349 Compare W8, 0
	350 JumpIfNotEqual {353}
	351 Call 0x1C17DFC
	352 Move X0, [X21]
	353 Move X8, [X0+184]
	354 Move X8, [X8+8]
	355 Compare X8, 0
	356 JumpIfEqual {628}
	357 Move X0, [X8+128]
	358 Compare X0, 0
	359 JumpIfEqual {628}
	360 Move X1, [X26]
	361 Call Dictionary`2<Int32, Object>.get_Values, X0
	362 Compare X0, 0
	363 JumpIfEqual {628}
	364 Move X1, [X27]
	365 Add X8, X31, 40
	366 Call ValueCollection<Int32, Object>.GetEnumerator, X0
	367 NotImplemented "Instruction LDUR not yet implemented."
	368 Move X8, [X31+56]
	369 Move X27, 0x794000
	370 Move X28, 0x794000
	371 Move X27, [X27+1592]
	372 Move X28, [X28+1544]
	373 Move [X31+4], V0
	374 Move [X31+80], X8
	375 Move X29, 0x739000
	376 Move X29, [X29+712]
	377 Move X8, 0x794000
	378 Move X8, [X8+1112]
	379 Move X1, [X8]
	380 Add X0, X31, 64
	381 Call Enumerator<Int32, Object>.MoveNext, X0
	382 Move TEMP, X0
	383 And TEMP, TEMP, 1
	384 Compare TEMP, 1
	385 JumpIfNotEqual {586}
	386 Move X21, [X31+80]
	387 Compare X21, 0
	388 JumpIfEqual {626}
	389 Move X8, [X21+16]
	390 Compare X8, 0
	391 JumpIfEqual {627}
	392 Compare X19, 0
	393 JumpIfEqual {625}
	394 Move S8, [X8+16]
	395 Move S9, [X8+20]
	396 Move V10, [X8+24]
	397 Move X0, X19
	398 Move X1, X31
	399 Call Component.get_transform, X0
	400 Move X1, X0
	401 Move X2, [X20+456]
	402 NotImplemented "Instruction SCVTF not yet implemented."
	403 NotImplemented "Instruction SCVTF not yet implemented."
	404 NotImplemented "Instruction SCVTF not yet implemented."
	405 Move X0, X20
	406 Call ProbeReferenceVolume.ShouldCullCell, X0, X1, X2, X3
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfEqual {377}
	411 Move X0, X20
	412 Move X1, X21
	413 Call ProbeReferenceVolume.CreateInstancedProbes, X0, X1
	414 Move X21, X0
	415 Compare X0, 0
	416 JumpIfEqual {377}
	417 Move X8, [X21+16]
	418 Compare X8, 0
	419 JumpIfEqual {585}
	420 Move W22, W31
	421 Move W8, [X8+24]
	422 NotImplemented "Instruction CMP not yet implemented."
	423 Move X0, [X21+32]
	424 Compare X0, 0
	425 JumpIfEqual {610}
	426 Move X8, 0x794000
	427 Move X8, [X8+1552]
	428 Move X2, [X8]
	429 Move W1, W22
	430 Call List`1<Object>.get_Item, X0, X1
	431 Move X8, [X20+400]
	432 Compare X8, 0
	433 JumpIfEqual {612}
	434 Move X23, X0
	435 Compare X0, 0
	436 JumpIfEqual {613}
	437 Move W2, [X8+28]
	438 Move X8, 0x794000
	439 Move X8, [X8+1568]
	440 Move X1, [X8]
	441 Move X0, X23
	442 Move X3, X31
	443 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	444 Move X8, [X20+400]
	445 Compare X8, 0
	446 JumpIfEqual {609}
	447 Move V0, [X8+52]
	448 Move X8, 0x793000
	449 Move X8, [X8+1608]
	450 Move X1, [X8]
	451 Move X0, X23
	452 Move X2, X31
	453 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	454 Move X8, [X20+400]
	455 Compare X8, 0
	456 JumpIfEqual {611}
	457 Move V0, [X8+32]
	458 Move X8, 0x793000
	459 Move X8, [X8+1576]
	460 Move X1, [X8]
	461 Move X0, X23
	462 Move X2, X31
	463 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	464 Move X8, [X20+400]
	465 Compare X8, 0
	466 JumpIfEqual {614}
	467 Move V0, [X8+40]
	468 Move X8, 0x793000
	469 Move X8, [X8+1560]
	470 Move X1, [X8]
	471 Move X0, X23
	472 Move X2, X31
	473 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	474 Move X8, [X20+400]
	475 Compare X8, 0
	476 JumpIfEqual {615}
	477 Move W2, [X8+44]
	478 Move X8, 0x793000
	479 Move X8, [X8+1624]
	480 Move X1, [X8]
	481 Move X0, X23
	482 Move X3, X31
	483 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	484 Move X8, [X20+400]
	485 Compare X8, 0
	486 JumpIfEqual {616}
	487 Move W2, [X8+48]
	488 Move X8, 0x793000
	489 Move X8, [X8+1584]
	490 Move X1, [X8]
	491 Move X0, X23
	492 Move X3, X31
	493 Call MaterialPropertyBlock.SetInt, X0, X1, X2
	494 Move X8, 0x793000
	495 Move V0, [X20+516]
	496 Move X8, [X8+1600]
	497 Move X1, [X8]
	498 Move X0, X23
	499 Move X2, X31
	500 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	501 Move X8, [X20+400]
	502 Compare X8, 0
	503 JumpIfEqual {608}
	504 Move X1, [X27]
	505 Move V0, [X8+60]
	506 Move X0, X23
	507 Move X2, X31
	508 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	509 Move X8, [X20+400]
	510 Compare X8, 0
	511 JumpIfEqual {617}
	512 Move W9, [X8+16]
	513 Compare W9, 0
	514 JumpIfEqual {548}
	515 Move X0, [X21+16]
	516 Compare X0, 0
	517 JumpIfEqual {620}
	518 Move X2, [X28]
	519 Move W1, W22
	520 Call List`1<Object>.get_Item, X0, X1
	521 Move X24, X0
	522 Compare X0, 0
	523 JumpIfEqual {618}
	524 Move X0, [X29]
	525 Move X26, [X20+424]
	526 Move X25, [X20+432]
	527 Move W8, [X0+224]
	528 Compare W8, 0
	529 JumpIfNotEqual {531}
	530 Call 0x1C17DFC
	531 Move W4, [X24+24]
	532 Move X0, X26
	533 Move W1, W31
	534 Move X2, X25
	535 Move X3, X24
	536 Move X5, X23
	537 Move W6, W31
	538 Move W7, W31
	539 Move [X31+24], X31
	540 Move [X31+32], X31
	541 Move [X31+16], W31
	542 Move [X31+8], X19
	543 Move [X31], W31
	544 Call Graphics.DrawMeshInstanced, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	545 Move X8, [X20+400]
	546 Compare X8, 0
	547 JumpIfEqual {622}
	548 Move W8, [X8+56]
	549 Compare W8, 0
	550 JumpIfEqual {581}
	551 Move X0, [X21+24]
	552 Compare X0, 0
	553 JumpIfEqual {621}
	554 Move X2, [X28]
	555 Move W1, W22
	556 Call List`1<Object>.get_Item, X0, X1
	557 Move X24, X0
	558 Compare X0, 0
	559 JumpIfEqual {619}
	560 Move X0, [X29]
	561 Move X26, [X20+440]
	562 Move X25, [X20+448]
	563 Move W8, [X0+224]
	564 Compare W8, 0
	565 JumpIfNotEqual {567}
	566 Call 0x1C17DFC
	567 Move W4, [X24+24]
	568 Move X0, X26
	569 Move W1, W31
	570 Move X2, X25
	571 Move X3, X24
	572 Move X5, X23
	573 Move W6, W31
	574 Move W7, W31
	575 Move [X31+24], X31
	576 Move [X31+32], X31
	577 Move [X31+16], W31
	578 Move [X31+8], X19
	579 Move [X31], W31
	580 Call Graphics.DrawMeshInstanced, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	581 Move X8, [X21+16]
	582 Add W22, W22, 1
	583 Compare X8, 0
	584 JumpIfNotEqual {421}
	585 Call 0x1C17F20
	586 Move X8, 0x793000
	587 Move X8, [X8+1104]
	588 Add X0, X31, 64
	589 Move X1, [X8]
	590 Call Enumerator<Int32, Object>.Dispose, X0
	591 Move X20, [X31+208]
	592 Move X19, [X31+216]
	593 Move X22, [X31+192]
	594 Move X21, [X31+200]
	595 Move X24, [X31+176]
	596 Move X23, [X31+184]
	597 Move X26, [X31+160]
	598 Move X25, [X31+168]
	599 Move X28, [X31+144]
	600 Move X27, [X31+152]
	601 Move X29, [X31+128]
	602 Move X30, [X31+136]
	603 Move D9, [X31+112]
	604 Move D8, [X31+120]
	605 Move V10, [X31+96]
	606 Add X31, X31, 224
	607 Return 
	608 Call 0x1C17F20
	609 Call 0x1C17F20
	610 Call 0x1C17F20
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Call 0x1C17F20
	614 Call 0x1C17F20
	615 Call 0x1C17F20
	616 Call 0x1C17F20
	617 Call 0x1C17F20
	618 Call 0x1C17F20
	619 Call 0x1C17F20
	620 Call 0x1C17F20
	621 Call 0x1C17F20
	622 Call 0x1C17F20
	623 Call 0x1C17F20
	624 Call 0x1C17F20
	625 Call 0x1C17F20
	626 Call 0x1C17F20
	627 Call 0x1C17F20
	628 Call 0x1C17F20
	629 Move X22, X0
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Move X0, X22
	632 Call 0x3EB2AD0
	633 Move X23, [X0]
	634 Call 0x3EB2AE0
	635 Move X8, 0x793000
	636 Move X8, [X8+1104]
	637 Add X0, X31, 64
	638 Move X1, [X8]
	639 Call Enumerator<Int32, Object>.Dispose, X0
	640 Compare X23, 0
	641 JumpIfEqual {272}
	642 Move X0, X23
	643 Call 0x1C17F18
	644 Move X23, X31
	645 Move X22, X0
	646 Move X8, 0x793000
	647 Move X8, [X8+1104]
	648 Move X1, [X8]
	649 Add X0, X31, 64
	650 Call Enumerator<Int32, Object>.Dispose, X0
	651 Compare X23, 0
	652 JumpIfEqual {679}
	653 Move X0, X23
	654 Call 0x1C17F18
	655 Move X22, X0
	656 NotImplemented "Instruction CMP not yet implemented."
	657 Move X0, X22
	658 Call 0x3EB2AD0
	659 Move X19, [X0]
	660 Call 0x3EB2AE0
	661 Move X8, 0x793000
	662 Move X8, [X8+1104]
	663 Add X0, X31, 64
	664 Move X1, [X8]
	665 Call Enumerator<Int32, Object>.Dispose, X0
	666 Compare X19, 0
	667 JumpIfEqual {591}
	668 Move X0, X19
	669 Call 0x1C17F18
	670 Move X19, X31
	671 Move X22, X0
	672 Move X8, 0x793000
	673 Move X8, [X8+1104]
	674 Move X1, [X8]
	675 Add X0, X31, 64
	676 Call Enumerator<Int32, Object>.Dispose, X0
	677 Compare X19, 0
	678 JumpIfNotEqual {681}
	679 Move X0, X22
	680 Call 0x1D2D690
	681 Move X0, X19
	682 Call 0x1C17F18
	683 Call 0x1991590

Method: System.Void ResetDebugViewToMaxSubdiv()

Disassembly:
	0x039C37AC LDR X0, [X19 + 0x260]
	0x039C37B0 CBZ X0, 0x39C38AC
	0x039C37B4 LDR X1, [X19 + 0x270]
	0x039C37B8 LDR X2, [X26]
	0x039C37BC BL 0x2B3FCD0
	0x039C37C0 LDR X0, [X19 + 0x270]
	0x039C37C4 CBZ X0, 0x39C38AC
	0x039C37C8 LDR X1, [X25]
	0x039C37CC BL 0x2B3FBDC
	0x039C37D0 LDR X0, [X19 + 0x258]
	0x039C37D4 CBZ X0, 0x39C38AC
	0x039C37D8 LDR W8, [X0 + 0x18]
	0x039C37DC CBZ W8, 0x39C3878
	0x039C37E0 LDR X9, [X19 + 0xF0]
	0x039C37E4 CBZ X9, 0x39C38AC
	0x039C37E8 LDR W10, [X19 + 0x168]
	0x039C37EC LDR V8, [X9 + 0x80]
	0x039C37F0 CMP W10, W8
	0x039C37F4 CSEL W23, W10, W8, LT
	0x039C37F8 CMP W23, 0x1
	0x039C37FC B.LT 0x39C3860
	0x039C3800 MOV W21, W31
	0x039C3804 LDR X2, [X24]
	0x039C3808 MOV W1, W21
	0x039C380C BL 0x2B40178
	0x039C3810 LDR X8, [X0]
	0x039C3814 CBZ X8, 0x39C38AC
	0x039C3818 STR S8, [X8 + 0x24]
	0x039C381C LDR X0, [X19 + 0x258]
	0x039C3820 CBZ X0, 0x39C38AC
	0x039C3824 LDR X2, [X24]
	0x039C3828 LDR X22, [X19 + 0x50]
	0x039C382C MOV W1, W21
	0x039C3830 BL 0x2B40178
	0x039C3834 CBZ X22, 0x39C38AC
	0x039C3838 LDR X2, [X19 + 0x38]
	0x039C383C LDR X1, [X0]
	0x039C3840 MOV X0, X22
	0x039C3844 BL 0x39B8CD8
	0x039C3848 ADD W21, W21, 0x1
	0x039C384C CMP W23, W21
	0x039C3850 B.EQ 0x39C3860
	0x039C3854 LDR X0, [X19 + 0x258]
	0x039C3858 CBNZ X0, 0x39C3804

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA1F000
	006 Move W8, [X20+3244]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x78F000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3244], W8
	017 Move W8, [X19+560]
	018 Compare W8, 0
	019 JumpIfEqual {52}
	020 Move X20, 0x78F000
	021 Move X20, [X20+3912]
	022 Move X19, [X19+400]
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X21, 0xA1F000
	029 Move W8, [X21+3257]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x78F000
	033 Move X0, [X0+3912]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3257], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X8, [X8+8]
	045 Compare X8, 0
	046 JumpIfEqual {57}
	047 Compare X19, 0
	048 JumpIfEqual {57}
	049 Move W8, [X8+52]
	050 Subtract W8, W8, 1
	051 Move [X19+44], W8
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Call 0x1C17F20

Method: System.Void ClearDebugData()

Disassembly:
	0x039BB910 CBNZ W8, 0x39BB924
	0x039BB914 ADRP X0, 0x760000
	0x039BB918 LDR X0, [X0 + 0x638]
	0x039BB91C BL 0x1C16CF4
	0x039BB920 STRB W20, [X21 + 0xCBB]
	0x039BB924 ADRP X20, 0xA26000
	0x039BB928 LDRB W8, [X20 + 0xCBA]
	0x039BB92C CBNZ W8, 0x39BB944
	0x039BB930 ADRP X0, 0x760000
	0x039BB934 LDR X0, [X0 + 0x638]
	0x039BB938 BL 0x1C16CF4
	0x039BB93C MOVZ W8, 0x1
	0x039BB940 STRB W8, [X20 + 0xCBA]
	0x039BB944 LDR X0, [X19 + 0x128]
	0x039BB948 CBZ X0, 0x39BBE34
	0x039BB94C ADRP X8, 0x760000
	0x039BB950 LDR X8, [X8 + 0x638]
	0x039BB954 ADRP X29, 0x797000
	0x039BB958 LDR X8, [X8]
	0x039BB95C LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA27000
	005 Move W8, [X20+3245]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x798000
	012 Move X0, [X0+984]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3245], W8
	016 Move X0, [X19+552]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x798000
	020 Move X8, [X8+984]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call Dictionary`2<Bounds, Object>.Clear, X0
	026 Return 
	027 Call 0x1C17F20

Method: UnityEngine.Rendering.ProbeReferenceVolume/CellInstancedDebugProbes CreateInstancedProbes(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo)

Disassembly:
	0x039C2A20 ADD W20, W20, 0x1
	0x039C2A24 CMP W20, W8
	0x039C2A28 B.LT 0x39C299C
	0x039C2A2C LDP X20, X19, [X31 + 0x60]
	0x039C2A30 LDP X22, X21, [X31 + 0x50]
	0x039C2A34 LDP X24, X23, [X31 + 0x40]
	0x039C2A38 LDP X30, X25, [X31 + 0x30]
	0x039C2A3C LDP D9, D8, [X31 + 0x20]
	0x039C2A40 LDP D11, D10, [X31 + 0x10]
	0x039C2A44 LDP D13, D12, [X31], #0x70
	0x039C2A48 RET
	0x039C2A4C BL 0x1C16F20
	0x039C2A50 STP D9, D8, [X31 - 0x40]!
	0x039C2A54 STR X30, [X31 + 0x10]
	0x039C2A58 STP X22, X21, [X31 + 0x20]
	0x039C2A5C STP X20, X19, [X31 + 0x30]
	0x039C2A60 ADRP X21, 0xA1F000
	0x039C2A64 LDRB W8, [X21 + 0xCB1]
	0x039C2A68 MOV V8.16B, V0.16B
	0x039C2A6C MOV X19, X1
	0x039C2A70 MOV X20, X0
	0x039C2A74 TBNZ X8, 0x0, 0x39C2A98
	0x039C2A78 ADRP X0, 0x790000
	0x039C2A7C LDR X0, [X0 + 0x408]
	0x039C2A80 BL 0x1C16CF4
	0x039C2A84 ADRP X0, 0x790000
	0x039C2A88 LDR X0, [X0 + 0x410]
	0x039C2A8C BL 0x1C16CF4
	0x039C2A90 MOVZ W8, 0x1
	0x039C2A94 STRB W8, [X21 + 0xCB1]
	0x039C2A98 LDR X8, [X20 + 0xF0]
	0x039C2A9C CBZ X8, 0x39C2B44
	0x039C2AA0 CBZ X19, 0x39C2B44
	0x039C2AA4 LDR W9, [X19 + 0x18]
	0x039C2AA8 CMP W9, 0x1
	0x039C2AAC B.LT 0x39C2B30
	0x039C2AB0 ADRP X22, 0x790000
	0x039C2AB4 LDR V9, [X8 + 0x80]
	0x039C2AB8 LDR X22, [X22 + 0x408]
	0x039C2ABC MOV W20, W31
	0x039C2AC0 LDR X2, [X22]
	0x039C2AC4 MOV X0, X19
	0x039C2AC8 MOV W1, W20
	0x039C2ACC BL 0x2B40178
	0x039C2AD0 LDR X21, [X0]
	0x039C2AD4 CBZ X21, 0x39C2B44
	0x039C2AD8 LDR V0, [X21 + 0x24]
	0x039C2ADC FCMP S9, S0
	0x039C2AE0 B.NE 0x39C2AF4
	0x039C2AE4 MOV X0, X21
	0x039C2AE8 MOV X1, X31
	0x039C2AEC BL 0x39C3D38
	0x039C2AF0 B 0x39C2B20
	0x039C2AF4 LDR X8, [X21 + 0x10]
	0x039C2AF8 CBZ X8, 0x39C2B44
	0x039C2AFC LDR V0, [X8 + 0x98]
	0x039C2B00 MOV X0, X21
	0x039C2B04 MOV X1, X31
	0x039C2B08 STR S0, [X21 + 0x20]
	0x039C2B0C BL 0x39C3D88
	0x039C2B10 TBZ X0, 0x0, 0x39C2B20
	0x039C2B14 LDR V0, [X21 + 0x20]
	0x039C2B18 FSUB S0, S0, S8
	0x039C2B1C STR S0, [X21 + 0x20]
	0x039C2B20 LDR W8, [X19 + 0x18]
	0x039C2B24 ADD W20, W20, 0x1
	0x039C2B28 CMP W20, W8
	0x039C2B2C B.LT 0x39C2AC0
	0x039C2B30 LDP X20, X19, [X31 + 0x30]
	0x039C2B34 LDP X22, X21, [X31 + 0x20]
	0x039C2B38 LDR X30, [X31 + 0x10]
	0x039C2B3C LDP D9, D8, [X31], #0x40
	0x039C2B40 RET
	0x039C2B44 BL 0x1C16F20
	0x039C2B48 STR X30, [X31 - 0x40]!
	0x039C2B4C STP X24, X23, [X31 + 0x10]
	0x039C2B50 STP X22, X21, [X31 + 0x20]
	0x039C2B54 STP X20, X19, [X31 + 0x30]
	0x039C2B58 ADRP X24, 0xA1F000
	0x039C2B5C LDRB W8, [X24 + 0xCB2]
	0x039C2B60 MOV X21, X4
	0x039C2B64 MOV X19, X3
	0x039C2B68 MOV X20, X2
	0x039C2B6C MOV X22, X1
	0x039C2B70 MOV X23, X0
	0x039C2B74 STR X1, [X31 + 0x8]
	0x039C2B78 TBNZ X8, 0x0, 0x39C2B90
	0x039C2B7C ADRP X0, 0x790000
	0x039C2B80 LDR X0, [X0 + 0x420]
	0x039C2B84 BL 0x1C16CF4
	0x039C2B88 MOVZ W8, 0x1
	0x039C2B8C STRB W8, [X24 + 0xCB2]
	0x039C2B90 CBZ X22, 0x39C2C44
	0x039C2B94 LDR X8, [X22 + 0x10]
	0x039C2B98 CBZ X8, 0x39C2C44
	0x039C2B9C LDR W9, [X8 + 0x30]
	0x039C2BA0 LDR W10, [X20]
	0x039C2BA4 CMP W9, W10
	0x039C2BA8 B.GT 0x39C2BBC
	0x039C2BAC LDR W8, [X8 + 0x2C]
	0x039C2BB0 LDR W9, [X19]
	0x039C2BB4 CMP W8, W9
	0x039C2BB8 B.LE 0x39C2BD4
	0x039C2BBC MOV W0, W31
	0x039C2BC0 LDP X20, X19, [X31 + 0x30]
	0x039C2BC4 LDP X22, X21, [X31 + 0x20]
	0x039C2BC8 LDP X24, X23, [X31 + 0x10]
	0x039C2BCC LDR X30, [X31], #0x40
	0x039C2BD0 RET
	0x039C2BD4 MOV X0, X23
	0x039C2BD8 MOV X1, X22
	0x039C2BDC MOV W2, W31
	0x039C2BE0 BL 0x39BACAC
	0x039C2BE4 MOV W8, W0
	0x039C2BE8 MOV W0, W31
	0x039C2BEC TBZ X8, 0x0, 0x39C2BC0
	0x039C2BF0 CBZ X21, 0x39C2C44
	0x039C2BF4 ADRP X8, 0x790000
	0x039C2BF8 LDR X8, [X8 + 0x420]
	0x039C2BFC ADD X1, X31, 0x8
	0x039C2C00 MOV X0, X21
	0x039C2C04 LDR X2, [X8]
	0x039C2C08 BL 0x2B3FC18
	0x039C2C0C LDR X8, [X31 + 0x8]
	0x039C2C10 CBZ X8, 0x39C2C44
	0x039C2C14 LDR X8, [X8 + 0x10]
	0x039C2C18 CBZ X8, 0x39C2C44
	0x039C2C1C LDR W9, [X20]
	0x039C2C20 LDR W10, [X8 + 0x30]
	0x039C2C24 MOVZ W0, 0x1
	0x039C2C28 SUB W9, W9, W10
	0x039C2C2C STR W9, [X20]
	0x039C2C30 LDR W9, [X19]
	0x039C2C34 LDR W8, [X8 + 0x2C]
	0x039C2C38 SUB W8, W9, W8
	0x039C2C3C STR W8, [X19]
	0x039C2C40 B 0x39C2BC0
	0x039C2C44 BL 0x1C16F20
	0x039C2C48 STR X30, [X31 - 0x30]!
	0x039C2C4C STP X22, X21, [X31 + 0x10]
	0x039C2C50 STP X20, X19, [X31 + 0x20]
	0x039C2C54 ADRP X22, 0xA1F000
	0x039C2C58 LDRB W8, [X22 + 0xCB3]
	0x039C2C5C MOV X19, X2
	0x039C2C60 MOV X20, X1
	0x039C2C64 MOV X21, X0
	0x039C2C68 STR X1, [X31 + 0x8]
	0x039C2C6C TBNZ X8, 0x0, 0x39C2C84
	0x039C2C70 ADRP X0, 0x790000
	0x039C2C74 LDR X0, [X0 + 0x440]
	0x039C2C78 BL 0x1C16CF4
	0x039C2C7C MOVZ W8, 0x1
	0x039C2C80 STRB W8, [X22 + 0xCB3]
	0x039C2C84 MOV X0, X21
	0x039C2C88 MOV X1, X20
	0x039C2C8C BL 0x39BA7BC
	0x039C2C90 CBZ X19, 0x39C2CBC
	0x039C2C94 ADRP X8, 0x790000
	0x039C2C98 LDR X8, [X8 + 0x440]
	0x039C2C9C ADD X1, X31, 0x8
	0x039C2CA0 MOV X0, X19
	0x039C2CA4 LDR X2, [X8]
	0x039C2CA8 BL 0x2B3FC18
	0x039C2CAC LDP X20, X19, [X31 + 0x20]
	0x039C2CB0 LDP X22, X21, [X31 + 0x10]
	0x039C2CB4 LDR X30, [X31], #0x30
	0x039C2CB8 RET
	0x039C2CBC BL 0x1C16F20
	0x039C2CC0 STR X30, [X31 - 0x30]!
	0x039C2CC4 STP X22, X21, [X31 + 0x10]
	0x039C2CC8 STP X20, X19, [X31 + 0x20]
	0x039C2CCC ADRP X22, 0xA1F000
	0x039C2CD0 LDRB W8, [X22 + 0xCB4]
	0x039C2CD4 MOV X19, X2
	0x039C2CD8 MOV X20, X1
	0x039C2CDC MOV X21, X0
	0x039C2CE0 STR X1, [X31 + 0x8]
	0x039C2CE4 TBNZ X8, 0x0, 0x39C2CFC
	0x039C2CE8 ADRP X0, 0x790000
	0x039C2CEC LDR X0, [X0 + 0x440]
	0x039C2CF0 BL 0x1C16CF4
	0x039C2CF4 MOVZ W8, 0x1
	0x039C2CF8 STRB W8, [X22 + 0xCB4]
	0x039C2CFC MOV X0, X21
	0x039C2D00 MOV X1, X20
	0x039C2D04 BL 0x39BE350
	0x039C2D08 MOV W20, W0
	0x039C2D0C TBZ X0, 0x0, 0x39C2D2C
	0x039C2D10 CBZ X19, 0x39C2D40
	0x039C2D14 ADRP X8, 0x790000
	0x039C2D18 LDR X8, [X8 + 0x440]
	0x039C2D1C ADD X1, X31, 0x8
	0x039C2D20 MOV X0, X19
	0x039C2D24 LDR X2, [X8]
	0x039C2D28 BL 0x2B3FC18
	0x039C2D2C AND W0, W20, 0x1
	0x039C2D30 LDP X20, X19, [X31 + 0x20]
	0x039C2D34 LDP X22, X21, [X31 + 0x10]
	0x039C2D38 LDR X30, [X31], #0x30
	0x039C2D3C RET
	0x039C2D40 BL 0x1C16F20
	0x039C2D44 SUB X31, X31, 0xA0
	0x039C2D48 STR D10, [X31 + 0x30]
	0x039C2D4C STP D9, D8, [X31 + 0x40]
	0x039C2D50 STP X30, X27, [X31 + 0x50]
	0x039C2D54 STP X26, X25, [X31 + 0x60]
	0x039C2D58 STP X24, X23, [X31 + 0x70]
	0x039C2D5C STP X22, X21, [X31 + 0x80]
	0x039C2D60 STP X20, X19, [X31 + 0x90]
	0x039C2D64 ADRP X22, 0xA1F000
	0x039C2D68 LDRB W8, [X22 + 0xCB5]
	0x039C2D6C MOV X21, X2
	0x039C2D70 MOV X19, X1
	0x039C2D74 MOV X20, X0
	0x039C2D78 TBNZ X8, 0x0, 0x39C2DE4
	0x039C2D7C ADRP X0, 0x790000
	0x039C2D80 LDR X0, [X0 + 0x998]
	0x039C2D84 BL 0x1C16CF4
	0x039C2D88 ADRP X0, 0x790000
	0x039C2D8C LDR X0, [X0 + 0x3E0]
	0x039C2D90 BL 0x1C16CF4
	0x039C2D94 ADRP X0, 0x790000
	0x039C2D98 LDR X0, [X0 + 0x420]
	0x039C2D9C BL 0x1C16CF4
	0x039C2DA0 ADRP X0, 0x790000
	0x039C2DA4 LDR X0, [X0 + 0x3E8]
	0x039C2DA8 BL 0x1C16CF4
	0x039C2DAC ADRP X0, 0x790000
	0x039C2DB0 LDR X0, [X0 + 0x9A0]
	0x039C2DB4 BL 0x1C16CF4
	0x039C2DB8 ADRP X0, 0x790000
	0x039C2DBC LDR X0, [X0 + 0x3F0]
	0x039C2DC0 BL 0x1C16CF4
	0x039C2DC4 ADRP X0, 0x790000
	0x039C2DC8 LDR X0, [X0 + 0x340]
	0x039C2DCC BL 0x1C16CF4
	0x039C2DD0 ADRP X0, 0x790000
	0x039C2DD4 LDR X0, [X0 + 0x9A8]
	0x039C2DD8 BL 0x1C16CF4
	0x039C2DDC MOVZ W8, 0x1
	0x039C2DE0 STRB W8, [X22 + 0xCB5]
	0x039C2DE4 STR X31, [X31 + 0x28]
	0x039C2DE8 LDRB W8, [X20 + 0x141]
	0x039C2DEC CBZ W8, 0x39C31E8
	0x039C2DF0 ADRP X22, 0x790000
	0x039C2DF4 LDR X22, [X22 + 0x9A8]
	0x039C2DF8 MOVZ W0, 0x1
	0x039C2DFC LDR X1, [X22]
	0x039C2E00 BL 0x2235BC0
	0x039C2E04 CBZ X21, 0x39C3238
	0x039C2E08 MOV X0, X21
	0x039C2E0C MOV X1, X31
	0x039C2E10 BL 0x3C32E90
	0x039C2E14 CBZ X0, 0x39C323C
	0x039C2E18 MOV X1, X31
	0x039C2E1C BL 0x3C3F58C
	0x039C2E20 LDR X8, [X20 + 0x190]
	0x039C2E24 CBZ X8, 0x39C3240
	0x039C2E28 LDRB W8, [X8 + 0x40]
	0x039C2E2C CBZ W8, 0x39C2E3C
	0x039C2E30 LDR V0, [X20 + 0x278]
	0x039C2E34 LDR V8, [X20 + 0x280]
	0x039C2E38 B 0x39C2E50
	0x039C2E3C MOV V8.16B, V2.16B
	0x039C2E40 STR S0, [X20 + 0x278]
	0x039C2E44 MOV V0.S[1], V1.S[0]
	0x039C2E48 STR S1, [X20 + 0x27C]
	0x039C2E4C STR S2, [X20 + 0x280]
	0x039C2E50 STR V0, [X31 + 0x1]
	0x039C2E54 LDR W8, [X20 + 0x34]
	0x039C2E58 LDUR V9, [X20 + 0x14]
	0x039C2E5C LDR V10, [X20 + 0x1C]
	0x039C2E60 SUB W1, W8, 0x1
	0x039C2E64 MOV X0, X20
	0x039C2E68 BL 0x39BD8BC
	0x039C2E6C ADRP X21, 0xA16000
	0x039C2E70 LDRB W8, [X21 + 0x85B]
	0x039C2E74 STR V0, [X31]
	0x039C2E78 CBNZ W8, 0x39C2E90
	0x039C2E7C ADRP X0, 0x731000
	0x039C2E80 LDR X0, [X0 + 0x5A0]
	0x039C2E84 BL 0x1C16CF4
	0x039C2E88 MOVZ W8, 0x1
	0x039C2E8C STRB W8, [X21 + 0x85B]
	0x039C2E90 ADRP X8, 0x731000
	0x039C2E94 LDR X8, [X8 + 0x5A0]
	0x039C2E98 LDP V4, V1, [X31]
	0x039C2E9C FSUB S0, S8, S10
	0x039C2EA0 MOVI V3.2S, 0xBF, 0x18
	0x039C2EA4 LDR X8, [X8]
	0x039C2EA8 FSUB V1.2S, V1.2S, V9.2S
	0x039C2EAC UNIMPLEMENTED
	0x00000000 INVALID
	0x039C2EB4 LDR X8, [X8 + 0xB8]
	0x039C2EB8 FDIV S5, S0, S4
	0x039C2EBC LDR X1, [X20 + 0x240]
	0x039C2EC0 LDUR V2, [X8 + 0xC]
	0x039C2EC4 LDR V4, [X8 + 0x14]
	0x00000000 INVALID
	0x039C2ECC FMOV S3, -0.5
	0x039C2ED0 FMUL S3, S4, S3
	0x039C2ED4 FADD V0.2S, V1.2S, V2.2S
	0x039C2ED8 FADD S8, S5, S3
	0x039C2EDC MOV S9, V0.S[1]
	0x039C2EE0 MOV V1.16B, V9.16B
	0x039C2EE4 MOV V2.16B, V8.16B
	0x039C2EE8 STR V0, [X31 + 0x1]
	0x039C2EEC BL 0x39C2918
	0x039C2EF0 LDR X1, [X20 + 0x238]
	0x039C2EF4 LDR V0, [X31 + 0x1]
	0x039C2EF8 MOV V1.16B, V9.16B
	0x039C2EFC MOV V2.16B, V8.16B
	0x039C2F00 BL 0x39C2918
	0x039C2F04 ADRP X21, 0x790000
	0x039C2F08 LDR X21, [X21 + 0x998]
	0x039C2F0C LDR X0, [X20 + 0x240]
	0x039C2F10 LDR X1, [X21]
	0x039C2F14 BL 0x21AFD8C
	0x039C2F18 LDR X0, [X20 + 0x238]
	0x039C2F1C LDR X1, [X21]
	0x039C2F20 BL 0x21AFD8C
	0x039C2F24 LDR X8, [X20 + 0x40]
	0x039C2F28 CBZ X8, 0x39C3244
	0x039C2F2C LDR W8, [X8 + 0x20]
	0x039C2F30 STR W8, [X31 + 0x3C]
	0x039C2F34 LDR X8, [X20 + 0x38]
	0x039C2F38 CBZ X8, 0x39C3248
	0x039C2F3C LDR W8, [X8 + 0x80]
	0x039C2F40 STR W8, [X31 + 0x38]
	0x039C2F44 LDR X8, [X20 + 0x240]
	0x039C2F48 CBZ X8, 0x39C324C
	0x039C2F4C LDR W9, [X20 + 0x164]
	0x039C2F50 LDR W10, [X8 + 0x18]
	0x039C2F54 ADRP X23, 0x790000
	0x039C2F58 LDRB W11, [X20 + 0x11]
	0x039C2F5C LDR X23, [X23 + 0x9A0]
	0x039C2F60 CMP W9, W10
	0x039C2F64 CSEL W24, W9, W10, LT
	0x039C2F68 CBZ W11, 0x39C30C4
	0x039C2F6C ADRP X25, 0x790000
	0x039C2F70 LDR X25, [X25 + 0x3F0]
	0x039C2F74 LDR X8, [X20 + 0x248]
	0x039C2F78 CBZ X8, 0x39C320C
	0x039C2F7C LDR W1, [X8 + 0x18]
	0x039C2F80 CMP W1, W24
	0x039C2F84 B.GE 0x39C2FBC
	0x039C2F88 LDR X0, [X20 + 0x240]
	0x039C2F8C CBZ X0, 0x39C3210
	0x039C2F90 LDR X2, [X25]
	0x039C2F94 BL 0x2B40178
	0x039C2F98 LDR X1, [X0]
	0x039C2F9C LDR X4, [X20 + 0x248]
	0x039C2FA0 ADD X2, X31, 0x38
	0x039C2FA4 ADD X3, X31, 0x3C
	0x039C2FA8 MOV X0, X20
	0x039C2FAC BL 0x39C2B48
	0x039C2FB0 TBNZ X0, 0x0, 0x39C2F74
	0x039C2FB4 LDR X8, [X20 + 0x248]
	0x039C2FB8 CBZ X8, 0x39C3268
	0x039C2FBC LDR W9, [X8 + 0x18]
	0x039C2FC0 CMP W9, W24
	0x039C2FC4 B.EQ 0x39C314C
	0x039C2FC8 CBZ X8, 0x39C30C0
	0x039C2FCC ADRP X27, 0x790000
	0x039C2FD0 LDR X27, [X27 + 0x420]
	0x039C2FD4 MOV W26, W31
	0x039C2FD8 LDR W8, [X8 + 0x18]
	0x039C2FDC CMP W8, W24
	0x039C2FE0 B.GE 0x39C3120
	0x039C2FE4 LDR X8, [X20 + 0x238]
	0x039C2FE8 CBZ X8, 0x39C3218
	0x039C2FEC LDR W9, [X8 + 0x18]
	0x039C2FF0 ADDS W31, W26, W9
	0x039C2FF4 B.EQ 0x39C3120
	0x039C2FF8 LDR X2, [X25]
	0x039C2FFC ADD W9, W26, W9
	0x039C3000 SUB W1, W9, 0x1
	0x039C3004 MOV X0, X8
	0x039C3008 BL 0x2B40178
	0x039C300C LDR X8, [X0]
	0x039C3010 STR X8, [X31 + 0x28]
	0x039C3014 LDR X8, [X20 + 0x248]
	0x039C3018 CBZ X8, 0x39C3224
	0x039C301C LDR X0, [X20 + 0x240]
	0x039C3020 CBZ X0, 0x39C3220
	0x039C3024 LDR W1, [X8 + 0x18]
	0x039C3028 LDR X2, [X25]
	0x039C302C BL 0x2B40178
	0x039C3030 LDR X8, [X31 + 0x28]
	0x039C3034 CBZ X8, 0x39C321C
	0x039C3038 LDR X21, [X0]
	0x039C303C CBZ X21, 0x39C3228
	0x039C3040 LDR V0, [X8 + 0x98]
	0x039C3044 LDR V1, [X21 + 0x98]
	0x039C3048 FCMP S0, S1
	0x039C304C B.LE 0x39C3120
	0x039C3050 MOV X0, X20
	0x039C3054 MOV X1, X8
	0x039C3058 BL 0x39BA6DC
	0x039C305C LDR X8, [X31 + 0x28]
	0x039C3060 CBZ X8, 0x39C3234
	0x039C3064 LDR X8, [X8 + 0x10]
	0x039C3068 CBZ X8, 0x39C3230
	0x039C306C LDR W9, [X31 + 0x38]
	0x039C3070 LDP W8, W10, [X8 + 0x2C]
	0x039C3074 ADD W9, W10, W9
	0x039C3078 STR W9, [X31 + 0x38]
	0x039C307C LDR W9, [X31 + 0x3C]
	0x039C3080 ADD W8, W8, W9
	0x039C3084 STR W8, [X31 + 0x3C]
	0x039C3088 LDR X0, [X20 + 0x250]
	0x039C308C CBZ X0, 0x39C322C
	0x039C3090 LDR X2, [X27]
	0x039C3094 ADD X1, X31, 0x28
	0x039C3098 BL 0x2B3FC18
	0x039C309C LDR X4, [X20 + 0x248]
	0x039C30A0 ADD X2, X31, 0x38
	0x039C30A4 ADD X3, X31, 0x3C
	0x039C30A8 MOV X0, X20
	0x039C30AC MOV X1, X21
	0x039C30B0 BL 0x39C2B48
	0x039C30B4 LDR X8, [X20 + 0x248]
	0x039C30B8 SUB W26, W26, 0x1
	0x039C30BC CBNZ X8, 0x39C2FD8
	0x039C30C0 BL 0x1C16F20
	0x039C30C4 CMP W24, 0x1
	0x039C30C8 B.LT 0x39C314C
	0x039C30CC LDR X9, [X20 + 0x248]
	0x039C30D0 CBZ X9, 0x39C311C
	0x039C30D4 ADRP X21, 0x78F000
	0x039C30D8 LDR X21, [X21 + 0x3F0]
	0x039C30DC CBZ X8, 0x39C3214
	0x039C30E0 LDR W1, [X9 + 0x18]
	0x039C30E4 LDR X2, [X21]
	0x039C30E8 MOV X0, X8
	0x039C30EC BL 0x2B40178
	0x039C30F0 LDR X1, [X0]
	0x039C30F4 LDR X4, [X20 + 0x248]
	0x039C30F8 ADD X2, X31, 0x38
	0x039C30FC ADD X3, X31, 0x3C
	0x039C3100 MOV X0, X20
	0x039C3104 BL 0x39C2B48
	0x039C3108 SUBS W24, W24, 0x1
	0x039C310C B.EQ 0x39C314C
	0x039C3110 LDR X9, [X20 + 0x248]
	0x039C3114 LDR X8, [X20 + 0x240]
	0x039C3118 CBNZ X9, 0x39C30DC
	0x039C311C BL 0x1C16F20
	0x039C3120 SUB W2, W31, W26
	0x039C3124 CMP W2, 0x1
	0x039C3128 B.LT 0x39C314C
	0x039C312C LDR X0, [X20 + 0x238]
	0x039C3130 CBZ X0, 0x39C326C
	0x039C3134 LDR W8, [X0 + 0x18]
	0x039C3138 LDR X3, [X23]
	0x039C313C ADD W1, W8, W26
	0x039C3140 BL 0x2B3FE6C
	0x039C3144 MOV X0, X20
	0x039C3148 BL 0x39BB380
	0x039C314C LDR X8, [X20 + 0x248]
	0x039C3150 CBZ X8, 0x39C3250
	0x039C3154 LDR X0, [X20 + 0x240]
	0x039C3158 CBZ X0, 0x39C3254
	0x039C315C LDR W2, [X8 + 0x18]
	0x039C3160 LDR X3, [X23]
	0x039C3164 MOV W1, W31
	0x039C3168 BL 0x2B3FE6C
	0x039C316C LDR X0, [X20 + 0x238]
	0x039C3170 CBZ X0, 0x39C3258
	0x039C3174 ADRP X21, 0x78F000
	0x039C3178 LDR X21, [X21 + 0x3E0]
	0x039C317C LDR X1, [X20 + 0x248]
	0x039C3180 LDR X2, [X21]
	0x039C3184 BL 0x2B3FCD0
	0x039C3188 LDR X0, [X20 + 0x240]
	0x039C318C CBZ X0, 0x39C325C
	0x039C3190 LDR X1, [X20 + 0x250]
	0x039C3194 LDR X2, [X21]
	0x039C3198 BL 0x2B3FCD0
	0x039C319C LDR X0, [X20 + 0x248]
	0x039C31A0 CBZ X0, 0x39C3260
	0x039C31A4 ADRP X21, 0x78F000
	0x039C31A8 LDR X21, [X21 + 0x3E8]
	0x039C31AC LDR X1, [X21]
	0x039C31B0 BL 0x2B3FBDC
	0x039C31B4 LDR X0, [X20 + 0x250]
	0x039C31B8 CBZ X0, 0x39C3264
	0x039C31BC LDR X1, [X21]
	0x039C31C0 BL 0x2B3FBDC
	0x039C31C4 MOV X0, X20
	0x039C31C8 BL 0x39B99F4
	0x039C31CC TBZ X0, 0x0, 0x39C31E8
	0x039C31D0 LDR X1, [X22]
	0x039C31D4 MOVZ W0, 0x2
	0x039C31D8 BL 0x2235BC0
	0x039C31DC MOV X0, X20
	0x039C31E0 MOV X1, X19
	0x039C31E4 BL 0x39C337C
	0x039C31E8 LDP X20, X19, [X31 + 0x90]
	0x039C31EC LDP X22, X21, [X31 + 0x80]
	0x039C31F0 LDP X24, X23, [X31 + 0x70]
	0x039C31F4 LDP X26, X25, [X31 + 0x60]
	0x039C31F8 LDP X30, X27, [X31 + 0x50]
	0x039C31FC LDP D9, D8, [X31 + 0x40]
	0x039C3200 LDR V10, [X31 + 0x30]
	0x039C3204 ADD X31, X31, 0xA0
	0x039C3208 RET
	0x039C320C BL 0x1C16F20
	0x039C3210 BL 0x1C16F20
	0x039C3214 BL 0x1C16F20
	0x039C3218 BL 0x1C16F20
	0x039C321C BL 0x1C16F20
	0x039C3220 BL 0x1C16F20
	0x039C3224 BL 0x1C16F20
	0x039C3228 BL 0x1C16F20
	0x039C322C BL 0x1C16F20
	0x039C3230 BL 0x1C16F20
	0x039C3234 BL 0x1C16F20
	0x039C3238 BL 0x1C16F20
	0x039C323C BL 0x1C16F20
	0x039C3240 BL 0x1C16F20
	0x039C3244 BL 0x1C16F20
	0x039C3248 BL 0x1C16F20
	0x039C324C BL 0x1C16F20
	0x039C3250 BL 0x1C16F20
	0x039C3254 BL 0x1C16F20
	0x039C3258 BL 0x1C16F20
	0x039C325C BL 0x1C16F20
	0x039C3260 BL 0x1C16F20
	0x039C3264 BL 0x1C16F20
	0x039C3268 BL 0x1C16F20
	0x039C326C BL 0x1C16F20
	0x039C3270 B 0x39C3348
	0x039C3274 B 0x39C3348
	0x039C3278 B 0x39C3348
	0x039C327C B 0x39C3348
	0x039C3280 CMP W1, 0x1
	0x039C3284 B.NE 0x39C336C
	0x039C3288 BL 0x3EB1AD0
	0x039C328C LDR X19, [X0]
	0x039C3290 BL 0x3EB1AE0
	0x039C3294 CBZ X19, 0x39C31E8
	0x039C3298 MOV X0, X19
	0x039C329C BL 0x1C16F18
	0x039C32A0 CBZ X19, 0x39C336C
	0x039C32A4 MOV X0, X19
	0x039C32A8 BL 0x1C16F18
	0x039C32AC B 0x39C3348
	0x039C32B0 B 0x39C3348
	0x039C32B4 B 0x39C3348
	0x039C32B8 B 0x39C3348
	0x039C32BC B 0x39C3348
	0x039C32C0 B 0x39C3348
	0x039C32C4 B 0x39C3348
	0x039C32C8 B 0x39C3348
	0x039C32CC B 0x39C3348
	0x039C32D0 B 0x39C3348
	0x039C32D4 B 0x39C3348
	0x039C32D8 B 0x39C3348
	0x039C32DC B 0x39C3348
	0x039C32E0 B 0x39C3348
	0x039C32E4 B 0x39C3348
	0x039C32E8 B 0x39C3348
	0x039C32EC B 0x39C3348
	0x039C32F0 B 0x39C3348
	0x039C32F4 B 0x39C3348
	0x039C32F8 B 0x39C3348
	0x039C32FC B 0x39C3348
	0x039C3300 B 0x39C3348
	0x039C3304 B 0x39C3348
	0x039C3308 B 0x39C3348
	0x039C330C B 0x39C3348
	0x039C3310 B 0x39C3348
	0x039C3314 B 0x39C3348
	0x039C3318 B 0x39C3348
	0x039C331C B 0x39C3348
	0x039C3320 B 0x39C3348
	0x039C3324 B 0x39C3348
	0x039C3328 B 0x39C3348
	0x039C332C B 0x39C3348
	0x039C3330 B 0x39C3348
	0x039C3334 B 0x39C3348
	0x039C3338 B 0x39C3348
	0x039C333C B 0x39C3348
	0x039C3340 B 0x39C3348
	0x039C3344 B 0x39C3348
	0x039C3348 CMP W1, 0x1
	0x039C334C B.NE 0x39C336C
	0x039C3350 BL 0x3EB1AD0
	0x039C3354 LDR X21, [X0]
	0x039C3358 BL 0x3EB1AE0
	0x039C335C CBZ X21, 0x39C31C4
	0x039C3360 MOV X0, X21
	0x039C3364 BL 0x1C16F18
	0x039C3368 CBNZ X21, 0x39C3370
	0x039C336C BL 0x1D2C690
	0x039C3370 MOV X0, X21
	0x039C3374 BL 0x1C16F18
	0x039C3378 BL 0x1990590
	0x039C337C STR D8, [X31 - 0x70]!
	0x039C3380 STP X29, X30, [X31 + 0x10]
	0x039C3384 STP X28, X27, [X31 + 0x20]
	0x039C3388 STP X26, X25, [X31 + 0x30]
	0x039C338C STP X24, X23, [X31 + 0x40]
	0x039C3390 STP X22, X21, [X31 + 0x50]
	0x039C3394 STP X20, X19, [X31 + 0x60]
	0x039C3398 ADRP X21, 0xA1E000
	0x039C339C LDRB W8, [X21 + 0xCB7]
	0x039C33A0 MOV X20, X1
	0x039C33A4 MOV X19, X0
	0x039C33A8 TBNZ X8, 0x0, 0x39C3414
	0x039C33AC ADRP X0, 0x78F000
	0x039C33B0 LDR X0, [X0 + 0x9B0]
	0x039C33B4 BL 0x1C16CF4
	0x039C33B8 ADRP X0, 0x78F000
	0x039C33BC LDR X0, [X0 + 0x3F8]
	0x039C33C0 BL 0x1C16CF4
	0x039C33C4 ADRP X0, 0x78F000
	0x039C33C8 LDR X0, [X0 + 0x400]
	0x039C33CC BL 0x1C16CF4
	0x039C33D0 ADRP X0, 0x78F000
	0x039C33D4 LDR X0, [X0 + 0x9B8]
	0x039C33D8 BL 0x1C16CF4
	0x039C33DC ADRP X0, 0x78F000
	0x039C33E0 LDR X0, [X0 + 0x408]
	0x039C33E4 BL 0x1C16CF4
	0x039C33E8 ADRP X0, 0x78F000
	0x039C33EC LDR X0, [X0 + 0x3F0]
	0x039C33F0 BL 0x1C16CF4
	0x039C33F4 ADRP X0, 0x78F000
	0x039C33F8 LDR X0, [X0 + 0x340]
	0x039C33FC BL 0x1C16CF4
	0x039C3400 ADRP X0, 0x78F000
	0x039C3404 LDR X0, [X0 + 0x410]
	0x039C3408 BL 0x1C16CF4
	0x039C340C MOVZ W8, 0x1
	0x039C3410 STRB W8, [X21 + 0xCB7]
	0x039C3414 LDRB W8, [X19 + 0x284]
	0x039C3418 CBZ W8, 0x39C388C
	0x039C341C LDR X0, [X19 + 0x238]
	0x039C3420 CBZ X0, 0x39C38AC
	0x039C3424 LDR W8, [X0 + 0x18]
	0x039C3428 CBZ W8, 0x39C3450
	0x039C342C ADRP X9, 0x78F000
	0x039C3430 LDR X9, [X9 + 0x3F0]
	0x039C3434 SUB W1, W8, 0x1
	0x039C3438 LDR X2, [X9]
	0x039C343C BL 0x2B40178
	0x039C3440 LDR X8, [X0]
	0x039C3444 CBZ X8, 0x39C38AC
	0x039C3448 LDR V8, [X8 + 0x98]
	0x039C344C B 0x39C3454
	0x039C3450 FMOV S8, W31
	0x039C3454 LDR X0, [X19 + 0x240]
	0x039C3458 CBZ X0, 0x39C38AC
	0x039C345C LDR W8, [X0 + 0x18]
	0x039C3460 CBZ W8, 0x39C3488
	0x039C3464 ADRP X9, 0x78F000
	0x039C3468 LDR X9, [X9 + 0x3F0]
	0x039C346C SUB W1, W8, 0x1
	0x039C3470 LDR X2, [X9]
	0x039C3474 BL 0x2B40178
	0x039C3478 LDR X8, [X0]
	0x039C347C CBZ X8, 0x39C38AC
	0x039C3480 LDR V0, [X8 + 0x98]
	0x039C3484 B 0x39C348C
	0x039C3488 FMOV S0, W31
	0x039C348C LDR X1, [X19 + 0x260]
	0x039C3490 ADRP X21, 0x78F000
	0x039C3494 LDR X21, [X21 + 0x9B0]
	0x039C3498 FCMP S8, S0
	0x039C349C FCSEL S8, S8, S0, GT
	0x039C34A0 MOV X0, X19
	0x039C34A4 MOV V0.16B, V8.16B
	0x039C34A8 BL 0x39C2A50
	0x039C34AC LDR X1, [X19 + 0x258]
	0x039C34B0 MOV X0, X19
	0x039C34B4 MOV V0.16B, V8.16B
	0x039C34B8 BL 0x39C2A50
	0x039C34BC LDR X0, [X19 + 0x260]
	0x039C34C0 LDR X1, [X21]
	0x039C34C4 BL 0x21AFD8C
	0x039C34C8 LDR X0, [X19 + 0x258]
	0x039C34CC LDR X1, [X21]
	0x039C34D0 BL 0x21AFD8C
	0x039C34D4 LDR X8, [X19 + 0x260]
	0x039C34D8 CBZ X8, 0x39C38AC
	0x039C34DC ADRP X24, 0x78F000
	0x039C34E0 LDR X24, [X24 + 0x408]
	0x039C34E4 LDR W9, [X19 + 0x164]
	0x039C34E8 LDR W8, [X8 + 0x18]
	0x039C34EC ADRP X27, 0x78F000
	0x039C34F0 ADRP X26, 0x78F000
	0x039C34F4 ADRP X25, 0x78F000
	0x039C34F8 LDR X27, [X27 + 0x9B8]
	0x039C34FC LDR X26, [X26 + 0x3F8]
	0x039C3500 LDR X25, [X25 + 0x400]
	0x039C3504 CMP W9, W8
	0x039C3508 CSEL W28, W9, W8, LT
	0x039C350C LDR X8, [X19 + 0x268]
	0x039C3510 CBZ X8, 0x39C38AC
	0x039C3514 LDR W1, [X8 + 0x18]
	0x039C3518 CMP W1, W28
	0x039C351C B.GE 0x39C354C
	0x039C3520 LDR X0, [X19 + 0x260]
	0x039C3524 CBZ X0, 0x39C38AC
	0x039C3528 LDR X2, [X24]
	0x039C352C BL 0x2B40178
	0x039C3530 LDR X1, [X0]
	0x039C3534 LDR X2, [X19 + 0x268]
	0x039C3538 MOV X0, X19
	0x039C353C BL 0x39C2CC0
	0x039C3540 TBNZ X0, 0x0, 0x39C350C
	0x039C3544 LDR X8, [X19 + 0x268]
	0x039C3548 CBZ X8, 0x39C38AC
	0x039C354C LDR W9, [X8 + 0x18]
	0x039C3550 CMP W9, W28
	0x039C3554 B.EQ 0x39C3770
	0x039C3558 LDR X0, [X19 + 0x258]
	0x039C355C CBZ X0, 0x39C38AC
	0x039C3560 LDR W9, [X0 + 0x18]
	0x039C3564 LDR V0, [X19 + 0x16C]
	0x039C3568 FMOV S1, 1
	0x039C356C MOVZ W10, 0x7F800000
	0x039C3570 SCVTF S3, W9
	0x039C3574 FSUB S0, S1, S0
	0x039C3578 FMOV S2, W10
	0x039C357C FMUL S0, S0, S3
	0x039C3580 FCVTZS W10, S0
	0x039C3584 FCMP S0, S2
	0x039C3588 MOVZ W11, 0x80000000
	0x039C358C CSEL W1, W11, W10, EQ
	0x039C3590 CMP W1, W9
	0x039C3594 B.GE 0x39C35B0
	0x039C3598 LDR X2, [X24]
	0x039C359C BL 0x2B40178
	0x039C35A0 LDR X8, [X19 + 0x268]
	0x039C35A4 CBZ X8, 0x39C38AC
	0x039C35A8 LDR X29, [X0]
	0x039C35AC B 0x39C35B4
	0x039C35B0 MOV X29, X31
	0x039C35B4 MOVN W21, 0x0
	0x039C35B8 LDR W8, [X8 + 0x18]
	0x039C35BC CMP W8, W28
	0x039C35C0 B.GE 0x39C3744
	0x039C35C4 LDR X0, [X19 + 0x258]
	0x039C35C8 CBZ X0, 0x39C38AC
	0x039C35CC LDR X8, [X19 + 0x270]
	0x039C35D0 CBZ X8, 0x39C38AC
	0x039C35D4 LDR W9, [X0 + 0x18]
	0x039C35D8 LDR W8, [X8 + 0x18]
	0x039C35DC SUBS W8, W9, W8
	0x039C35E0 B.EQ 0x39C3744
	0x039C35E4 LDR X2, [X24]
	0x039C35E8 SUB W1, W8, 0x1
	0x039C35EC BL 0x2B40178
	0x039C35F0 LDR X9, [X19 + 0x268]
	0x039C35F4 CBZ X9, 0x39C38AC
	0x039C35F8 MOV X8, X0
	0x039C35FC LDR X0, [X19 + 0x260]
	0x039C3600 CBZ X0, 0x39C38AC
	0x039C3604 LDR W1, [X9 + 0x18]
	0x039C3608 LDR X2, [X24]
	0x039C360C LDR X23, [X8]
	0x039C3610 BL 0x2B40178
	0x039C3614 LDR X22, [X0]
	0x039C3618 CBZ X22, 0x39C38AC
	0x039C361C CMP X29, 0x0
	0x039C3620 CSEL X8, X23, X29, EQ
	0x039C3624 CBZ X8, 0x39C38AC
	0x039C3628 LDR V0, [X22 + 0x20]
	0x039C362C LDR V1, [X8 + 0x20]
	0x039C3630 FCMP S0, S1
	0x039C3634 B.LT 0x39C367C
	0x039C3638 CBZ X29, 0x39C3744
	0x039C363C ADDS W31, W21, 0x1
	0x039C3640 B.NE 0x39C3650
	0x039C3644 MOV X0, X19
	0x039C3648 BL 0x39C38B0
	0x039C364C MOV W21, W0
	0x039C3650 LDR X0, [X19 + 0x260]
	0x039C3654 CBZ X0, 0x39C38AC
	0x039C3658 LDR X2, [X24]
	0x039C365C MOV W1, W21
	0x039C3660 BL 0x2B40178
	0x039C3664 LDR X22, [X0]
	0x039C3668 CBZ X22, 0x39C38AC
	0x039C366C MOV X0, X22
	0x039C3670 MOV X1, X31
	0x039C3674 BL 0x39C3D44
	0x039C3678 TBNZ X0, 0x0, 0x39C3744
	0x039C367C LDR X2, [X19 + 0x270]
	0x039C3680 MOV X0, X19
	0x039C3684 MOV X1, X23
	0x039C3688 BL 0x39C2C48
	0x039C368C LDR X2, [X19 + 0x268]
	0x039C3690 MOV X0, X19
	0x039C3694 MOV X1, X22
	0x039C3698 BL 0x39C2CC0
	0x039C369C ADDS W31, W21, 0x1
	0x039C36A0 B.EQ 0x39C3724
	0x039C36A4 TBZ X0, 0x0, 0x39C3724
	0x039C36A8 LDR X0, [X19 + 0x260]
	0x039C36AC CBZ X0, 0x39C38AC
	0x039C36B0 LDR X2, [X24]
	0x039C36B4 MOV W1, W21
	0x039C36B8 BL 0x2B40178
	0x039C36BC LDR X8, [X19 + 0x268]
	0x039C36C0 CBZ X8, 0x39C38AC
	0x039C36C4 MOV X23, X0
	0x039C36C8 LDR X0, [X19 + 0x260]
	0x039C36CC CBZ X0, 0x39C38AC
	0x039C36D0 LDR W8, [X8 + 0x18]
	0x039C36D4 LDR X2, [X24]
	0x039C36D8 SUB W1, W8, 0x1
	0x039C36DC BL 0x2B40178
	0x039C36E0 LDR X8, [X0]
	0x039C36E4 STR X8, [X23]
	0x039C36E8 LDR X8, [X19 + 0x268]
	0x039C36EC CBZ X8, 0x39C38AC
	0x039C36F0 LDR X0, [X19 + 0x260]
	0x039C36F4 CBZ X0, 0x39C38AC
	0x039C36F8 LDR W8, [X8 + 0x18]
	0x039C36FC LDR X2, [X24]
	0x039C3700 SUB W1, W8, 0x1
	0x039C3704 BL 0x2B40178
	0x039C3708 STR X22, [X0]
	0x039C370C LDR X8, [X19 + 0x260]
	0x039C3710 CBZ X8, 0x39C38AC
	0x039C3714 LDR W8, [X8 + 0x18]
	0x039C3718 ADD W21, W21, 0x1
	0x039C371C CMP W21, W8
	0x039C3720 B.GE 0x39C3730
	0x039C3724 LDR X8, [X19 + 0x268]
	0x039C3728 CBNZ X8, 0x39C35B8
	0x039C372C B 0x39C38AC
	0x039C3730 LDR X8, [X19 + 0x268]
	0x039C3734 CBZ X8, 0x39C38AC
	0x039C3738 LDR W21, [X8 + 0x18]
	0x039C373C CBNZ X8, 0x39C35B8
	0x039C3740 B 0x39C38AC
	0x039C3744 LDR X0, [X19 + 0x258]
	0x039C3748 CBZ X0, 0x39C38AC
	0x039C374C LDR X8, [X19 + 0x270]
	0x039C3750 CBZ X8, 0x39C38AC
	0x039C3754 LDR W9, [X0 + 0x18]
	0x039C3758 LDR W2, [X8 + 0x18]
	0x039C375C LDR X3, [X27]
	0x039C3760 SUB W1, W9, W2
	0x039C3764 BL 0x2B3FE6C
	0x039C3768 LDR X8, [X19 + 0x268]
	0x039C376C CBZ X8, 0x39C38AC
	0x039C3770 LDR X0, [X19 + 0x260]
	0x039C3774 CBZ X0, 0x39C38AC
	0x039C3778 LDR W2, [X8 + 0x18]
	0x039C377C LDR X3, [X27]
	0x039C3780 MOV W1, W31
	0x039C3784 BL 0x2B3FE6C
	0x039C3788 LDR X0, [X19 + 0x258]
	0x039C378C CBZ X0, 0x39C38AC
	0x039C3790 LDR X1, [X19 + 0x268]
	0x039C3794 LDR X2, [X26]
	0x039C3798 BL 0x2B3FCD0
	0x039C379C LDR X0, [X19 + 0x268]
	0x039C37A0 CBZ X0, 0x39C38AC
	0x039C37A4 LDR X1, [X25]
	0x039C37A8 BL 0x2B3FBDC

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 480
	022 Move X19, 0xA20000
	023 Move W8, [X19+3246]
	024 Move X24, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {104}
	030 Move X0, 0x791000
	031 Move X0, [X0+2336]
	032 Call 0x1C17CF4
	033 Move X0, 0x78F000
	034 Move X0, [X0+3632]
	035 Call 0x1C17CF4
	036 Move X0, 0x791000
	037 Move X0, [X0+2344]
	038 Call 0x1C17CF4
	039 Move X0, 0x791000
	040 Move X0, [X0+2352]
	041 Call 0x1C17CF4
	042 Move X0, 0x791000
	043 Move X0, [X0+2360]
	044 Call 0x1C17CF4
	045 Move X0, 0x791000
	046 Move X0, [X0+2368]
	047 Call 0x1C17CF4
	048 Move X0, 0x791000
	049 Move X0, [X0+2376]
	050 Call 0x1C17CF4
	051 Move X0, 0x78F000
	052 Move X0, [X0+2456]
	053 Call 0x1C17CF4
	054 Move X0, 0x791000
	055 Move X0, [X0+2384]
	056 Call 0x1C17CF4
	057 Move X0, 0x791000
	058 Move X0, [X0+2392]
	059 Call 0x1C17CF4
	060 Move X0, 0x791000
	061 Move X0, [X0+224]
	062 Call 0x1C17CF4
	063 Move X0, 0x791000
	064 Move X0, [X0+2400]
	065 Call 0x1C17CF4
	066 Move X0, 0x78F000
	067 Move X0, [X0+2448]
	068 Call 0x1C17CF4
	069 Move X0, 0x791000
	070 Move X0, [X0+2408]
	071 Call 0x1C17CF4
	072 Move X0, 0x78F000
	073 Move X0, [X0+1424]
	074 Call 0x1C17CF4
	075 Move X0, 0x791000
	076 Move X0, [X0+2416]
	077 Call 0x1C17CF4
	078 Move X0, 0x790000
	079 Move X0, [X0+3912]
	080 Call 0x1C17CF4
	081 Move X0, 0x732000
	082 Move X0, [X0+1592]
	083 Call 0x1C17CF4
	084 Move X0, 0x78D000
	085 Move X0, [X0+72]
	086 Call 0x1C17CF4
	087 Move X0, 0x791000
	088 Move X0, [X0+464]
	089 Call 0x1C17CF4
	090 Move X0, 0x791000
	091 Move X0, [X0+2424]
	092 Call 0x1C17CF4
	093 Move X0, 0x791000
	094 Move X0, [X0+2432]
	095 Call 0x1C17CF4
	096 Move X0, 0x791000
	097 Move X0, [X0+2440]
	098 Call 0x1C17CF4
	099 Move X0, 0x791000
	100 Move X0, [X0+2448]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X19+3246], W8
	104 Compare X24, 0
	105 JumpIfEqual {972}
	106 Move X0, [X24+160]
	107 Compare X0, 0
	108 JumpIfNotEqual {197}
	109 Move X19, 0x790000
	110 Move X19, [X19+3912]
	111 Move X0, [X19]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X20, 0xA20000
	117 Move W8, [X20+3257]
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0x790000
	121 Move X0, [X0+3912]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X20+3257], W8
	125 Move X0, [X19]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X19]
	131 Move X8, [X0+184]
	132 Move X8, [X8+8]
	133 Compare X8, 0
	134 JumpIfEqual {972}
	135 Move X28, [X24+16]
	136 Compare X28, 0
	137 JumpIfEqual {972}
	138 Move X9, [X28+64]
	139 Compare X9, 0
	140 JumpIfEqual {196}
	141 Move W9, [X28+72]
	142 Compare W9, 0
	143 JumpIfEqual {196}
	144 Move W9, [X24+44]
	145 Compare W9, 0
	146 JumpIfEqual {196}
	147 Move X19, 0x791000
	148 Move W29, [X8+52]
	149 Move X19, [X19+2400]
	150 Move X0, [X19]
	151 Call 0x1C17F10
	152 Move X20, 0x791000
	153 Move X20, [X20+2384]
	154 Move X21, X0
	155 Move X1, [X20]
	156 Call List`1<Object>..ctor, X0
	157 Move X0, [X19]
	158 Call 0x1C17F10
	159 Move X1, [X20]
	160 Move X22, X0
	161 Call List`1<Object>..ctor, X0
	162 Move X8, 0x78F000
	163 Move X8, [X8+2448]
	164 Move X0, [X8]
	165 Call 0x1C17F10
	166 Move X8, 0x78F000
	167 Move X8, [X8+2456]
	168 Move X23, X0
	169 Move X1, [X8]
	170 Call List`1<Object>..ctor, X0
	171 Move X8, [X24+32]
	172 Move X19, 0x78D000
	173 Move W1, 511
	174 Move [X31+88], X8
	175 Move X19, [X19+72]
	176 Move X0, [X19]
	177 Call 0x1C17D6C
	178 Move X20, 0x732000
	179 Move X20, [X20+1592]
	180 Move [X31+216], X0
	181 Move W1, 511
	182 Move X8, [X20]
	183 Move X0, X8
	184 Call 0x1C17D6C
	185 Move X8, [X20]
	186 Move X26, X0
	187 Move W1, 511
	188 Move X0, X8
	189 Call 0x1C17D6C
	190 Move W8, [X28+120]
	191 Move X27, X0
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X0, [X20]
	194 Move W1, 511
	195 Call 0x1C17D6C
	196 Move X0, X31
	197 Add X31, X31, 480
	198 Move X20, [X31+144]
	199 Move X19, [X31+152]
	200 Move X22, [X31+128]
	201 Move X21, [X31+136]
	202 Move X24, [X31+112]
	203 Move X23, [X31+120]
	204 Move X26, [X31+96]
	205 Move X25, [X31+104]
	206 Move X28, [X31+80]
	207 Move X27, [X31+88]
	208 Move X29, [X31+64]
	209 Move X30, [X31+72]
	210 Move D9, [X31+48]
	211 Move D8, [X31+56]
	212 Move D11, [X31+32]
	213 Move D10, [X31+40]
	214 Move D13, [X31+16]
	215 Move D12, [X31+24]
	216 Move D15, [X31+160]
	217 Move D14, [X31+168]
	218 Return X0
	219 Move X0, X31
	220 Move W8, [X28+136]
	221 Move [X31+272], X0
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X0, [X19]
	224 Move W1, 511
	225 Call 0x1C17D6C
	226 Move [X31+280], X0
	227 Move [X31+280], X31
	228 Move [X31+56], X24
	229 Move X20, 0x791000
	230 Move X20, [X20+2408]
	231 Move X0, [X20]
	232 Call 0x1C17F10
	233 Move X24, 0x791000
	234 Move X24, [X24+2376]
	235 Move X19, X0
	236 Move X1, [X24]
	237 Call List`1<Matrix4x4>..ctor, X0
	238 Move X0, [X20]
	239 Call 0x1C17F10
	240 Move X1, [X24]
	241 Move X20, X0
	242 Call List`1<Matrix4x4>..ctor, X0
	243 Move X8, 0x791000
	244 Move X8, [X8+2336]
	245 Move X0, [X8]
	246 Call 0x1C17F10
	247 Move X1, X31
	248 Move X24, X0
	249 Call CellInstancedDebugProbes..ctor, X0
	250 Compare X24, 0
	251 JumpIfEqual {972}
	252 Move [X24+16], X21
	253 Move [X24+24], X22
	254 Move [X24+32], X23
	255 Move W8, [X25+236]
	256 Move W9, 63
	257 Move W10, 63
	258 NotImplemented "Instruction MOVK not yet implemented."
	259 Move W11, W8
	260 ShiftRight W11, 26
	261 And W11, W11, 0x1FFFFFF
	262 NotImplemented "Instruction BFM not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 NotImplemented "Instruction CSEL not yet implemented."
	265 Move W14, 2048
	266 NotImplemented "Instruction CMP not yet implemented."
	267 NotImplemented "Instruction SBFM not yet implemented."
	268 Move W15, 2048
	269 Move [X31+48], X24
	270 Move [X31+84], W11
	271 Add W10, W9, 511
	272 Add W11, W9, 1022
	273 NotImplemented "Instruction CMP not yet implemented."
	274 NotImplemented "Instruction CSEL not yet implemented."
	275 Move W11, [X31+84]
	276 Move W13, 0x8040
	277 Move W12, W9
	278 ShiftRight W12, 30
	279 And W12, W12, 0x1FFFFFFF
	280 NotImplemented "Instruction SBFM not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 NotImplemented "Instruction CSEL not yet implemented."
	283 Move W14, W10
	284 ShiftRight W14, 30
	285 And W14, W14, 0x1FFFFFFF
	286 Move W12, [X28+32]
	287 Move TEMP, 0xFFFC0000
	288 Not TEMP
	289 Move W10, TEMP
	290 Or W11, W31, 0x7FFFE
	291 Add W10, W9, W10
	292 Add W9, W9, W11
	293 NotImplemented "Instruction CMP not yet implemented."
	294 NotImplemented "Instruction CSEL not yet implemented."
	295 Add W9, W12, 63
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction CSEL not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X11, [X31+88]
	300 Compare X11, 0
	301 JumpIfEqual {972}
	302 Multiply W12, W15, W14
	303 Move [X31+104], X31
	304 Move [X31+112], X12
	305 Move W12, W15
	306 Move [X31+32], X25
	307 Move [X31+100], W31
	308 Move [X31+180], W31
	309 Move [X31+132], W31
	310 Move [X31+160], X12
	311 Move X17, 0x791000
	312 Move X12, -49115136
	313 Move X13, -49115136
	314 Move X17, [X17+224]
	315 Move V8, [X12+1100]
	316 Move V0, [X13+576]
	317 Subtract W11, W29, 1
	318 NotImplemented "Instruction SBFM not yet implemented."
	319 NotImplemented "Instruction SBFM not yet implemented."
	320 Move X16, X31
	321 Move W24, W31
	322 NotImplemented "Instruction SCVTF not yet implemented."
	323 Move W10, W10
	324 ShiftRight W10, 30
	325 And W10, W10, 0x1FFFFFFF
	326 Move W9, W9
	327 Move [X31+28], W10
	328 Move [X31+40], X9
	329 Move [X31+208], S15
	330 Move [X31+216], S0
	331 Move [X31+76], W14
	332 Move [X31+80], W15
	333 Move [X31+268], S8
	334 Move X9, [X28+64]
	335 Move X2, [X17]
	336 Move X0, [X31+88]
	337 NotImplemented "Instruction SDIV not yet implemented."
	338 Add X9, X9, X16
	339 Move W25, [X9+12]
	340 Move W1, W29
	341 Move [X31+64], X16
	342 Call List`1<BrickChunkAlloc>.get_Item, X0, X1
	343 Move X8, X0
	344 ShiftRight X8, 32
	345 And X8, X8, 0x7FFFFFFF
	346 Move [X31+168], X8
	347 Add W8, W25, 1
	348 Move W9, [X31+84]
	349 Move W14, [X31+100]
	350 Move W13, [X31+132]
	351 Move W10, [X31+180]
	352 Move W12, [X31+76]
	353 NotImplemented "Instruction SCVTF not yet implemented."
	354 Move W8, [X31+80]
	355 Move W11, W31
	356 Move X11, [X31+104]
	357 NotImplemented "Instruction SCVTF not yet implemented."
	358 NotImplemented "Instruction MADD not yet implemented."
	359 NotImplemented "Instruction MADD not yet implemented."
	360 Move [X31+240], S1
	361 NotImplemented "Instruction FDIV not yet implemented."
	362 NotImplemented "Instruction MADD not yet implemented."
	363 Multiply S0, S0, S8
	364 Add W8, W14, W0
	365 Move [X31+120], X1
	366 Move [X31+228], S1
	367 Move W9, W31
	368 Move [X31+244], S0
	369 Move [X31+232], X8
	370 Move W10, 12
	371 Move [X31+132], W13
	372 Move [X31+156], W9
	373 Add W8, W9, W13
	374 Move X9, [X31+120]
	375 Move W14, W31
	376 Move [X31+136], X11
	377 Move [X31+144], X12
	378 Move [X31+200], X11
	379 Add W8, W8, W9
	380 NotImplemented "Instruction SCVTF not yet implemented."
	381 Move W9, W31
	382 Move [X31+248], S0
	383 Move [X31+256], X12
	384 Move W8, [X31+180]
	385 Move [X31+184], W9
	386 Move X29, X31
	387 Add W8, W9, W8
	388 Move X9, [X31+168]
	389 Add W8, W8, W9
	390 NotImplemented "Instruction SCVTF not yet implemented."
	391 Move [X31+252], S0
	392 Move X9, [X31+256]
	393 Move X8, [X28+96]
	394 Add W25, W9, W29
	395 Move X9, 0xA17000
	396 NotImplemented "Instruction SMADDL not yet implemented."
	397 Move W9, [X9+1939]
	398 Move S10, [X8]
	399 Move S9, [X8+4]
	400 Move V8, [X8+8]
	401 Compare W9, 0
	402 JumpIfNotEqual {409}
	403 Move X0, 0x733000
	404 Move X0, [X0+1448]
	405 Call 0x1C17CF4
	406 Move X8, 0xA17000
	407 Move W9, 1
	408 Move [X8+1939], W9
	409 Move X8, 0x733000
	410 Move X8, [X8+1448]
	411 Move X9, 0xA17000
	412 Move W9, [X9+2139]
	413 Move X8, [X8]
	414 Move X8, [X8+184]
	415 Move S14, [X8]
	416 Move S13, [X8+4]
	417 Move S12, [X8+8]
	418 Move S11, [X8+12]
	419 Compare W9, 0
	420 JumpIfNotEqual {427}
	421 Move X0, 0x732000
	422 Move X0, [X0+1440]
	423 Call 0x1C17CF4
	424 Move W8, 1
	425 Move X9, 0xA17000
	426 Move [X9+2139], W8
	427 Move X8, 0x732000
	428 Move X8, [X8+1440]
	429 Move V3, [X31+244]
	430 Move V4, V13
	431 Move V5, V12
	432 Move X8, [X8]
	433 Move V6, V11
	434 Move X0, X31
	435 Move X8, [X8+184]
	436 Move S0, [X8+12]
	437 Move S1, [X8+16]
	438 Move V2, [X8+20]
	439 Add X8, X31, 416
	440 Multiply S0, S3, S0
	441 Multiply S1, S3, S1
	442 Multiply S2, S3, S2
	443 Move [X31+4], S1
	444 Move [X31+12], S2
	445 Move [X31], S0
	446 Move V0, V10
	447 Move V1, V9
	448 Move V2, V8
	449 Move V3, V14
	450 Call Matrix4x4.TRS, X0, X1, X2
	451 Move V0, [X31+416]
	452 Move V1, [X31+432]
	453 Move V2, [X31+448]
	454 Move V3, [X31+464]
	455 Move [X31+288], V0
	456 Move [X31+296], V1
	457 Move [X31+320], V2
	458 Move [X31+328], V3
	459 Compare X19, 0
	460 JumpIfEqual {972}
	461 Move V0, [X31+288]
	462 Move V1, [X31+304]
	463 Move V2, [X31+320]
	464 Move V3, [X31+336]
	465 Move X10, 0x790000
	466 Move [X31+352], V0
	467 Move [X31+360], V1
	468 Move [X31+384], V2
	469 Move [X31+392], V3
	470 Move W9, [X19+28]
	471 Move X8, [X19+16]
	472 Move X10, [X10+2352]
	473 Add W9, W9, 1
	474 Move X10, [X10]
	475 Move [X19+28], W9
	476 Compare X8, 0
	477 JumpIfEqual {972}
	478 NotImplemented "Instruction LDRSW not yet implemented."
	479 Move W11, [X8+24]
	480 NotImplemented "Instruction CMP not yet implemented."
	481 Add W10, W9, 1
	482 Move [X19+24], W10
	483 Move V0, [X31+384]
	484 Move V1, [X31+400]
	485 Move V2, [X31+352]
	486 Move V3, [X31+368]
	487 Add X8, X8, X9
	488 Move [X8+64], V0
	489 Move [X8+72], V1
	490 Move [X8+32], V2
	491 Move [X8+40], V3
	492 Move X8, [X10+32]
	493 Move V0, [X31+352]
	494 Move V1, [X31+368]
	495 Move V2, [X31+384]
	496 Move V3, [X31+400]
	497 Add X1, X31, 416
	498 Move X8, [X8+192]
	499 Move X0, X19
	500 Move X2, [X8+112]
	501 Move [X31+416], V0
	502 Move [X31+424], V1
	503 Move [X31+448], V2
	504 Move [X31+456], V3
	505 Call List`1<Matrix4x4>.AddWithResize, X0, X1
	506 Move V8, [X31+268]
	507 Compare X26, 0
	508 JumpIfEqual {972}
	509 Move W8, [X26+24]
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Move X9, [X28+144]
	512 Move X8, W25
	513 Move X25, [X31+216]
	514 Move V0, [X9]
	515 Move X9, W24
	516 Add X10, X26, X9
	517 Move [X10+32], S0
	518 Compare X25, 0
	519 JumpIfEqual {972}
	520 Move W10, [X25+24]
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move X10, [X31+232]
	523 Move V0, [X31+252]
	524 Add X11, X25, X9
	525 Add X10, X10, X29
	526 NotImplemented "Instruction SCVTF not yet implemented."
	527 Move [X11+32], S1
	528 Move [X11+40], S0
	529 Move V1, [X31+248]
	530 Move V0, [X31+240]
	531 Move [X11+40], S1
	532 Move [X11+48], S0
	533 Compare X27, 0
	534 JumpIfEqual {972}
	535 Move W10, [X27+24]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move V0, [X31+228]
	538 Move X11, [X31+272]
	539 Add X10, X27, X9
	540 Move [X10+32], S0
	541 Compare X11, 0
	542 JumpIfEqual {549}
	543 Move W10, [X11+24]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move X10, [X28+112]
	546 Move V0, [X10]
	547 Add X10, X11, X9
	548 Move [X10+32], S0
	549 Move X10, [X31+280]
	550 Compare X10, 0
	551 JumpIfEqual {757}
	552 Move X11, [X31+280]
	553 Move W10, [X11+24]
	554 NotImplemented "Instruction CMP not yet implemented."
	555 Move X10, [X28+128]
	556 Move W12, 12
	557 Add X9, X11, X9
	558 NotImplemented "Instruction MADD not yet implemented."
	559 Move S12, [X10]
	560 Move S13, [X10+4]
	561 Move V14, [X10+8]
	562 Move [X9+44], W31
	563 Multiply S0, S12, S12
	564 Multiply S1, S13, S13
	565 Add S0, S0, S1
	566 Multiply S1, S14, S14
	567 Add S15, S0, S1
	568 Move V0, [X31+212]
	569 Move [X9+32], S12
	570 Move [X9+40], S13
	571 Move [X9+40], S14
	572 NotImplemented "Instruction FCMP not yet implemented."
	573 Move X8, 0xA16000
	574 Move W8, [X8+2752]
	575 Compare W8, 0
	576 JumpIfNotEqual {583}
	577 Move X0, 0x735000
	578 Move X0, [X0+624]
	579 Call 0x1C17CF4
	580 Move W8, 1
	581 Move X9, 0xA16000
	582 Move [X9+2752], W8
	583 Move X8, 0x735000
	584 Move X8, [X8+624]
	585 Move V15, [X31+208]
	586 Move X8, [X8]
	587 Move X8, [X8+184]
	588 Move V1, [X8+96]
	589 Move V0, [X8+112]
	590 Move V2, [X8+64]
	591 Move V3, [X8+80]
	592 Move [X31+320], V1
	593 Move [X31+328], V0
	594 Move [X31+288], V2
	595 Move [X31+296], V3
	596 Compare X20, 0
	597 JumpIfEqual {972}
	598 Move V0, [X31+288]
	599 Move V1, [X31+304]
	600 Move V2, [X31+320]
	601 Move V3, [X31+336]
	602 Move X10, 0x790000
	603 Move [X31+352], V0
	604 Move [X31+360], V1
	605 Move [X31+384], V2
	606 Move [X31+392], V3
	607 Move W9, [X20+28]
	608 Move X8, [X20+16]
	609 Move X10, [X10+2352]
	610 Add W9, W9, 1
	611 Move X10, [X10]
	612 Move [X20+28], W9
	613 Compare X8, 0
	614 JumpIfEqual {972}
	615 NotImplemented "Instruction LDRSW not yet implemented."
	616 Move W11, [X8+24]
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Add W10, W9, 1
	619 Move [X20+24], W10
	620 Move V0, [X31+384]
	621 Move V1, [X31+400]
	622 Move V2, [X31+352]
	623 Move V3, [X31+368]
	624 Add X8, X8, X9
	625 Move [X8+64], V0
	626 Move [X8+72], V1
	627 Move [X8+32], V2
	628 Move [X8+40], V3
	629 Move X9, [X28+96]
	630 NotImplemented "Instruction FNEG not yet implemented."
	631 NotImplemented "Instruction FNEG not yet implemented."
	632 NotImplemented "Instruction FNEG not yet implemented."
	633 NotImplemented "Instruction MADD not yet implemented."
	634 Move S8, [X8]
	635 Move S9, [X8+4]
	636 Move V10, [X8+8]
	637 Move X0, X31
	638 Call Quaternion.LookRotation, X0
	639 Move X8, 0xA16000
	640 Move W8, [X8+1924]
	641 Move V4, V0
	642 Move V5, V1
	643 Move V6, V2
	644 Move V11, V3
	645 Compare W8, 0
	646 JumpIfNotEqual {659}
	647 Move X0, 0x731000
	648 Move X0, [X0+1448]
	649 Move [X31+192], S5
	650 Move [X31+200], S4
	651 Move [X31+188], S6
	652 Call 0x1C17CF4
	653 Move S6, [X31+188]
	654 Move S5, [X31+192]
	655 Move V4, [X31+196]
	656 Move W8, 1
	657 Move X9, 0xA16000
	658 Move [X9+1924], W8
	659 Move X8, 0x731000
	660 Move X8, [X8+1448]
	661 Move X0, [X8]
	662 Move W8, [X0+224]
	663 Compare W8, 0
	664 JumpIfNotEqual {672}
	665 Move [X31+192], S5
	666 Move [X31+200], S4
	667 Move [X31+188], S6
	668 Call 0x1C17DFC
	669 Move S6, [X31+188]
	670 Move S5, [X31+192]
	671 Move V4, [X31+196]
	672 NotImplemented "Instruction FSQRT not yet implemented."
	673 Add S0, S12, S8
	674 Add S1, S13, S9
	675 Add S2, S14, S10
	676 Move [X31+8], S3
	677 Add X8, X31, 416
	678 Or X9, X31, 0x3F0000003F000000
	679 Move V3, V4
	680 Move V4, V5
	681 Move V5, V6
	682 Move V6, V11
	683 Move X0, X31
	684 Move [X31], X9
	685 Call Matrix4x4.TRS, X0, X1, X2
	686 Move V0, [X31+416]
	687 Move V1, [X31+432]
	688 Move V2, [X31+448]
	689 Move V3, [X31+464]
	690 Move [X31+288], V0
	691 Move [X31+296], V1
	692 Move [X31+320], V2
	693 Move [X31+328], V3
	694 Compare X20, 0
	695 JumpIfEqual {972}
	696 Move V0, [X31+288]
	697 Move V1, [X31+304]
	698 Move V2, [X31+320]
	699 Move V3, [X31+336]
	700 Move X10, 0x790000
	701 Move [X31+352], V0
	702 Move [X31+360], V1
	703 Move [X31+384], V2
	704 Move [X31+392], V3
	705 Move W9, [X20+28]
	706 Move X8, [X20+16]
	707 Move X10, [X10+2352]
	708 Add W9, W9, 1
	709 Move X10, [X10]
	710 Move [X20+28], W9
	711 Compare X8, 0
	712 JumpIfEqual {972}
	713 NotImplemented "Instruction LDRSW not yet implemented."
	714 Move W11, [X8+24]
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Add W10, W9, 1
	717 Move [X20+24], W10
	718 Move V0, [X31+384]
	719 Move V1, [X31+400]
	720 Move V2, [X31+352]
	721 Move V3, [X31+368]
	722 Add X8, X8, X9
	723 Move [X8+64], V0
	724 Move [X8+72], V1
	725 Move [X8+32], V2
	726 Move [X8+40], V3
	727 Move X8, [X10+32]
	728 Move V0, [X31+352]
	729 Move V1, [X31+368]
	730 Move V2, [X31+384]
	731 Move V3, [X31+400]
	732 Add X1, X31, 416
	733 Move X8, [X8+192]
	734 Move X0, X20
	735 Move X2, [X8+112]
	736 Move [X31+416], V0
	737 Move [X31+424], V1
	738 Move [X31+448], V2
	739 Move [X31+456], V3
	740 Call List`1<Matrix4x4>.AddWithResize, X0, X1
	741 Move X8, [X10+32]
	742 Move V0, [X31+352]
	743 Move V1, [X31+368]
	744 Move V2, [X31+384]
	745 Move V3, [X31+400]
	746 Add X1, X31, 416
	747 Move X8, [X8+192]
	748 Move X0, X20
	749 Move X2, [X8+112]
	750 Move [X31+416], V0
	751 Move [X31+424], V1
	752 Move [X31+448], V2
	753 Move [X31+456], V3
	754 Call List`1<Matrix4x4>.AddWithResize, X0, X1
	755 Move V15, [X31+208]
	756 Move V8, [X31+268]
	757 Move W8, [X19+24]
	758 NotImplemented "Instruction CMP not yet implemented."
	759 Move W8, [X28+32]
	760 Move X9, [X31+200]
	761 Subtract W8, W8, 1
	762 Add X9, X9, X29
	763 NotImplemented "Instruction CMP not yet implemented."
	764 Move X8, 0x78E000
	765 Move X8, [X8+1424]
	766 Move X0, [X8]
	767 Call 0x1C17F10
	768 Move X1, X31
	769 Move X24, X0
	770 Call MaterialPropertyBlock..ctor, X0
	771 Compare X24, 0
	772 JumpIfEqual {972}
	773 Move X8, 0x790000
	774 Move X8, [X8+464]
	775 Move X0, X24
	776 Move X2, X26
	777 Move X3, X31
	778 Move X1, [X8]
	779 Call MaterialPropertyBlock.SetFloatArray, X0, X1, X2
	780 Move X8, 0x790000
	781 Move X8, [X8+2448]
	782 Move X2, [X31+272]
	783 Move X0, X24
	784 Move X3, X31
	785 Move X1, [X8]
	786 Call MaterialPropertyBlock.SetFloatArray, X0, X1, X2
	787 Move X8, 0x790000
	788 Move X8, [X8+2424]
	789 Move X0, X24
	790 Move X2, X27
	791 Move X3, X31
	792 Move X1, [X8]
	793 Call MaterialPropertyBlock.SetFloatArray, X0, X1, X2
	794 Move X8, 0x790000
	795 Move X8, [X8+2432]
	796 Move X0, X24
	797 Move X2, X25
	798 Move X3, X31
	799 Move X1, [X8]
	800 Call MaterialPropertyBlock.SetVectorArray, X0, X1, X2
	801 Move X2, [X31+280]
	802 Compare X2, 0
	803 JumpIfEqual {810}
	804 Move X8, 0x790000
	805 Move X8, [X8+2440]
	806 Move X0, X24
	807 Move X3, X31
	808 Move X1, [X8]
	809 Call MaterialPropertyBlock.SetVectorArray, X0, X1, X2
	810 Compare X23, 0
	811 JumpIfEqual {972}
	812 Move X9, 0x78E000
	813 Move W10, [X23+28]
	814 Move X8, [X23+16]
	815 Move X9, [X9+3632]
	816 Add W10, W10, 1
	817 Move X9, [X9]
	818 Move [X23+28], W10
	819 Compare X8, 0
	820 JumpIfEqual {972}
	821 NotImplemented "Instruction LDRSW not yet implemented."
	822 Move W11, [X8+24]
	823 NotImplemented "Instruction CMP not yet implemented."
	824 Add W9, W10, 1
	825 Add X8, X8, X10
	826 Move [X23+24], W9
	827 Move [X8+32], X24
	828 Move X8, [X9+32]
	829 Move X0, X23
	830 Move X1, X24
	831 Move X8, [X8+192]
	832 Move X2, [X8+112]
	833 Call List`1<Object>.AddWithResize, X0, X1
	834 Move X24, 0x790000
	835 Move X24, [X24+2368]
	836 Move X0, X19
	837 Move X1, [X24]
	838 Call List`1<Matrix4x4>.ToArray, X0
	839 Compare X21, 0
	840 JumpIfEqual {972}
	841 Move X9, 0x790000
	842 Move W10, [X21+28]
	843 Move X8, [X21+16]
	844 Move X9, [X9+2344]
	845 Add W10, W10, 1
	846 Move X9, [X9]
	847 Move [X21+28], W10
	848 Compare X8, 0
	849 JumpIfEqual {972}
	850 NotImplemented "Instruction LDRSW not yet implemented."
	851 Move W11, [X8+24]
	852 Move X1, X0
	853 NotImplemented "Instruction CMP not yet implemented."
	854 Add W9, W10, 1
	855 Add X8, X8, X10
	856 Move [X21+24], W9
	857 Move [X8+32], X1
	858 Move X8, [X9+32]
	859 Move X0, X21
	860 Move X8, [X8+192]
	861 Move X2, [X8+112]
	862 Call List`1<Object>.AddWithResize, X0, X1
	863 Move X8, 0x790000
	864 Move X8, [X8+2408]
	865 Move X0, [X8]
	866 Call 0x1C17F10
	867 Move X8, 0x790000
	868 Move X8, [X8+2376]
	869 Move X19, X0
	870 Move X1, [X8]
	871 Call List`1<Matrix4x4>..ctor, X0
	872 Compare X19, 0
	873 JumpIfEqual {972}
	874 Move W8, [X19+28]
	875 Add W8, W8, 1
	876 Move [X19+24], W31
	877 Move [X19+28], W8
	878 Compare X20, 0
	879 JumpIfEqual {972}
	880 Move X1, [X24]
	881 Move X0, X20
	882 Call List`1<Matrix4x4>.ToArray, X0
	883 Compare X22, 0
	884 JumpIfEqual {972}
	885 Move X9, 0x790000
	886 Move W10, [X22+28]
	887 Move X8, [X22+16]
	888 Move X9, [X9+2344]
	889 Add W10, W10, 1
	890 Move X9, [X9]
	891 Move [X22+28], W10
	892 Compare X8, 0
	893 JumpIfEqual {972}
	894 NotImplemented "Instruction LDRSW not yet implemented."
	895 Move W11, [X8+24]
	896 Move X1, X0
	897 NotImplemented "Instruction CMP not yet implemented."
	898 Add W9, W10, 1
	899 Add X8, X8, X10
	900 Move [X22+24], W9
	901 Move [X8+32], X1
	902 Move X8, [X9+32]
	903 Move X0, X22
	904 Move X8, [X8+192]
	905 Move X2, [X8+112]
	906 Call List`1<Object>.AddWithResize, X0, X1
	907 Move W8, [X20+28]
	908 Move W24, W31
	909 Add W8, W8, 1
	910 Move [X20+24], W31
	911 Move [X20+28], W8
	912 Add W24, W24, 1
	913 Add X29, X29, 1
	914 Move W10, 12
	915 NotImplemented "Instruction CMP not yet implemented."
	916 Move X8, [X31+160]
	917 Move X11, [X31+256]
	918 Move W9, [X31+184]
	919 Add X11, X11, X8
	920 Move X8, [X31+200]
	921 Add W9, W9, 1
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Move [X31+256], X11
	924 Add X8, X8, 4
	925 Move [X31+200], X8
	926 Move W9, [X31+156]
	927 Move X8, [X31+112]
	928 Move X11, [X31+136]
	929 Move X12, [X31+144]
	930 Move W13, [X31+132]
	931 Add W9, W9, 1
	932 NotImplemented "Instruction CMP not yet implemented."
	933 Add X12, X12, X8
	934 Add X11, X11, 16
	935 Move W14, [X31+100]
	936 Move W11, [X31+80]
	937 Add W14, W14, 4
	938 NotImplemented "Instruction CMP not yet implemented."
	939 Move X17, 0x790000
	940 Move X9, [X31+32]
	941 Move X12, [X31+104]
	942 Move X16, [X31+64]
	943 Move X17, [X17+224]
	944 Move W8, [X31+180]
	945 Move W10, [X31+76]
	946 Move X17, 0x790000
	947 Move X9, [X31+32]
	948 Move X12, [X31+104]
	949 Move X16, [X31+64]
	950 Move X17, [X17+224]
	951 Add W8, W8, 4
	952 NotImplemented "Instruction CMP not yet implemented."
	953 Move [X31+180], W8
	954 Move W14, W31
	955 Add W8, W13, 4
	956 Move W13, [X31+28]
	957 Move W14, W31
	958 Move [X31+180], W31
	959 NotImplemented "Instruction CMP not yet implemented."
	960 NotImplemented "Instruction CSEL not yet implemented."
	961 Move X8, [X31+40]
	962 Add X16, X16, 1
	963 NotImplemented "Instruction CMP not yet implemented."
	964 Move W8, [X9+236]
	965 Add X12, X12, 64
	966 Move [X31+104], X12
	967 Move [X31+132], W13
	968 Move [X31+100], W14
	969 Move X0, [X31+48]
	970 Move X8, [X31+56]
	971 Move [X8+160], X0
	972 Call 0x1C17F20
	973 Call 0x1C17F28

Method: System.Void OnClearLightingdata()

Disassembly:
	0x039C385C B 0x39C38AC

ISIL:
	001 Call ProbeReferenceVolume.ClearDebugData, X0
	002 Return 

Method: System.Void ScenarioBlendingChanged(System.Boolean scenarioChanged)

Disassembly:
	0x039C3860 LDR X0, [X19 + 0x50]
	0x039C3864 CBZ X0, 0x39C38AC
	0x039C3868 LDR X2, [X19 + 0x38]
	0x039C386C MOV X1, X20
	0x039C3870 MOV V0.16B, V8.16B
	0x039C3874 BL 0x39B8400
	0x039C3878 LDR X8, [X19 + 0x260]
	0x039C387C CBZ X8, 0x39C38AC
	0x039C3880 LDR W8, [X8 + 0x18]
	0x039C3884 CBNZ W8, 0x39C388C
	0x039C3888 STRB W31, [X19 + 0x284]
	0x039C388C LDP X20, X19, [X31 + 0x60]
	0x039C3890 LDP X22, X21, [X31 + 0x50]
	0x039C3894 LDP X24, X23, [X31 + 0x40]
	0x039C3898 LDP X26, X25, [X31 + 0x30]
	0x039C389C LDP X28, X27, [X31 + 0x20]
	0x039C38A0 LDP X29, X30, [X31 + 0x10]
	0x039C38A4 LDR V8, [X31], #0x70
	0x039C38A8 RET
	0x039C38AC BL 0x1C16F20
	0x039C38B0 STR D10, [X31 - 0x40]!
	0x039C38B4 STP D9, D8, [X31 + 0x8]
	0x039C38B8 STR X30, [X31 + 0x18]
	0x039C38BC STP X22, X21, [X31 + 0x20]
	0x039C38C0 STP X20, X19, [X31 + 0x30]
	0x039C38C4 ADRP X20, 0xA1E000
	0x039C38C8 LDRB W8, [X20 + 0xCB6]
	0x039C38CC MOV X19, X0
	0x039C38D0 TBNZ X8, 0x0, 0x39C38F4
	0x039C38D4 ADRP X0, 0x78F000
	0x039C38D8 LDR X0, [X0 + 0x408]
	0x039C38DC BL 0x1C16CF4
	0x039C38E0 ADRP X0, 0x78F000
	0x039C38E4 LDR X0, [X0 + 0x410]
	0x039C38E8 BL 0x1C16CF4
	0x039C38EC MOVZ W8, 0x1
	0x039C38F0 STRB W8, [X20 + 0xCB6]
	0x039C38F4 LDR X8, [X19 + 0xF0]
	0x039C38F8 CBZ X8, 0x39C3990
	0x039C38FC LDR X9, [X19 + 0x268]
	0x039C3900 CBZ X9, 0x39C3990
	0x039C3904 LDR X0, [X19 + 0x260]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA1F000
	006 Move W8, [X21+3247]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x790000
	014 Move X0, [X0+1032]
	015 Call 0x1C17CF4
	016 Move X0, 0x790000
	017 Move X0, [X0+1040]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3247], W8
	021 Move W8, 1
	022 Move [X19+644], W8
	023 Move TEMP, X20
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {50}
	027 Move X0, X19
	028 Call ProbeReferenceVolume.UnloadAllBlendingCells, X0
	029 Move X0, [X19+608]
	030 Compare X0, 0
	031 JumpIfEqual {49}
	032 Move X21, 0x790000
	033 Move X21, [X21+1032]
	034 Move W20, W31
	035 Move W8, [X0+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X2, [X21]
	038 Move W1, W20
	039 Call 0x2B41178, X0, X1
	040 Move X0, [X0]
	041 Compare X0, 0
	042 JumpIfEqual {49}
	043 Move X1, X31
	044 Call BlendingCellInfo.ForceReupload, X0
	045 Move X0, [X19+608]
	046 Add W20, W20, 1
	047 Compare X0, 0
	048 JumpIfNotEqual {35}
	049 Call 0x1C17F20
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 

Method: System.Void SetNumberOfCellsLoadedPerFrame(System.Int32 numberOfCells)

Disassembly:
	0x039C3908 CBZ X0, 0x39C3990
	0x039C390C ADRP X22, 0x78F000
	0x039C3910 LDR V8, [X8 + 0x80]
	0x039C3914 LDR W20, [X9 + 0x18]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSINC not yet implemented."
	003 Move [X0+356], W8
	004 Return 

Method: System.Void ComputeCellCameraDistance(UnityEngine.Vector3 cameraPosition, UnityEngine.Rendering.DynamicArray`1<UnityEngine.Rendering.ProbeReferenceVolume/CellInfo> cells)

Disassembly:
	0x039C3918 LDR X22, [X22 + 0x408]
	0x039C391C FMOV S9, -1
	0x039C3920 MOVN W21, 0x0
	0x039C3924 LDR W8, [X0 + 0x18]
	0x039C3928 CMP W20, W8
	0x039C392C B.GE 0x39C3998
	0x039C3930 LDR X2, [X22]
	0x039C3934 MOV W1, W20
	0x039C3938 BL 0x2B40178
	0x039C393C LDR X8, [X0]
	0x039C3940 CBZ X8, 0x39C3990
	0x039C3944 LDR V0, [X8 + 0x24]
	0x039C3948 FABD S10, S0, S0
	0x039C394C FCMP S10, S9
	0x039C3950 B.LE 0x39C3984
	0x039C3954 LDR X0, [X19 + 0x260]
	0x039C3958 CBZ X0, 0x39C3990
	0x039C395C LDR X2, [X22]
	0x039C3960 MOV W1, W20
	0x039C3964 BL 0x2B40178
	0x039C3968 LDR X0, [X0]
	0x039C396C CBZ X0, 0x39C3990
	0x039C3970 MOV X1, X31
	0x039C3974 BL 0x39C3D68
	0x039C3978 MOV V9.16B, V10.16B
	0x039C397C MOV W21, W20
	0x039C3980 TBNZ X0, 0x0, 0x39C3994
	0x039C3984 LDR X0, [X19 + 0x260]
	0x039C3988 ADD W20, W20, 0x1
	0x039C398C CBNZ X0, 0x39C3924
	0x039C3990 BL 0x1C16F20
	0x039C3994 MOV W21, W20
	0x039C3998 MOV W0, W21
	0x039C399C LDP X20, X19, [X31 + 0x30]
	0x039C39A0 LDP X22, X21, [X31 + 0x20]
	0x039C39A4 LDR X30, [X31 + 0x18]
	0x039C39A8 LDP D9, D8, [X31 + 0x8]
	0x039C39AC LDR V10, [X31], #0x40
	0x039C39B0 RET
	0x039C39B4 STR X30, [X31 - 0x30]!
	0x039C39B8 STP X22, X21, [X31 + 0x10]
	0x039C39BC STP X20, X19, [X31 + 0x20]
	0x039C39C0 ADRP X22, 0xA1E000
	0x039C39C4 ADRP X19, 0x758000
	0x039C39C8 ADRP X21, 0x78E000
	0x039C39CC ADRP X20, 0x78F000
	0x039C39D0 LDRB W8, [X22 + 0xCB8]
	0x039C39D4 LDR X19, [X19 + 0x68]
	0x039C39D8 LDR X21, [X21 + 0xF48]
	0x039C39DC LDR X20, [X20 + 0x9C0]
	0x039C39E0 TBNZ X8, 0x0, 0x39C3A10
	0x039C39E4 ADRP X0, 0x78E000
	0x039C39E8 LDR X0, [X0 + 0xF48]
	0x039C39EC BL 0x1C16CF4
	0x039C39F0 ADRP X0, 0x78F000
	0x039C39F4 LDR X0, [X0 + 0x9C0]
	0x039C39F8 BL 0x1C16CF4
	0x039C39FC ADRP X0, 0x758000
	0x039C3A00 LDR X0, [X0 + 0x68]
	0x039C3A04 BL 0x1C16CF4
	0x039C3A08 MOVZ W8, 0x1
	0x039C3A0C STRB W8, [X22 + 0xCB8]
	0x039C3A10 LDR X8, [X21]
	0x039C3A14 LDR X9, [X19]
	0x039C3A18 LDR X8, [X8 + 0xB8]
	0x039C3A1C STR X9, [X8]
	0x039C3A20 LDR X0, [X21]
	0x039C3A24 BL 0x1C16F10
	0x039C3A28 MOV X19, X0
	0x039C3A2C BL 0x39BD178
	0x039C3A30 LDR X8, [X21]
	0x039C3A34 LDR X9, [X20]
	0x039C3A38 LDP X22, X21, [X31 + 0x10]
	0x039C3A3C LDR X8, [X8 + 0xB8]
	0x039C3A40 STP X19, X9, [X8 + 0x8]
	0x039C3A44 LDP X20, X19, [X31 + 0x20]
	0x039C3A48 LDR X30, [X31], #0x30
	0x039C3A4C RET

ISIL:
	001 Move [X31-112], D13
	002 Move [X31-104], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X20, 0xA1F000
	016 Move W8, [X20+3248]
	017 Move X19, X1
	018 Move V8, V2
	019 Move V9, V1
	020 Move V10, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x790000
	026 Move X0, [X0+1008]
	027 Call 0x1C17CF4
	028 Move X0, 0x790000
	029 Move X0, [X0+832]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3248], W8
	033 Compare X19, 0
	034 JumpIfEqual {99}
	035 Move W8, [X19+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X22, 0x790000
	038 Move X21, 0x731000
	039 Move X22, [X22+1008]
	040 Move X21, [X21+1448]
	041 Move W20, W31
	042 Move X23, 0xA16000
	043 Move W24, 1
	044 Move X2, [X22]
	045 Move X0, X19
	046 Move W1, W20
	047 Call 0x2B41178, X0, X1
	048 Move X25, [X0]
	049 Compare X25, 0
	050 JumpIfEqual {99}
	051 Move X8, [X25+16]
	052 Compare X8, 0
	053 JumpIfEqual {99}
	054 Move S11, [X8+16]
	055 Move S12, [X8+20]
	056 Move W9, [X23+2140]
	057 Move V13, [X8+24]
	058 Compare W9, 0
	059 JumpIfNotEqual {63}
	060 Move X0, X21
	061 Call 0x1C17CF4
	062 Move [X23+2140], W24
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 NotImplemented "Instruction SCVTF not yet implemented."
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 NotImplemented "Instruction SCVTF not yet implemented."
	071 Subtract S0, S10, S0
	072 Subtract S1, S9, S1
	073 Subtract S2, S8, S2
	074 Multiply S0, S0, S0
	075 Multiply S1, S1, S1
	076 Add S0, S0, S1
	077 Multiply S1, S2, S2
	078 Add S0, S1, S0
	079 NotImplemented "Instruction FSQRT not yet implemented."
	080 Move [X25+152], S0
	081 Move W8, [X19+24]
	082 Add W20, W20, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X20, [X31+96]
	085 Move X19, [X31+104]
	086 Move X22, [X31+80]
	087 Move X21, [X31+88]
	088 Move X24, [X31+64]
	089 Move X23, [X31+72]
	090 Move X30, [X31+48]
	091 Move X25, [X31+56]
	092 Move D9, [X31+32]
	093 Move D8, [X31+40]
	094 Move D11, [X31+16]
	095 Move D10, [X31+24]
	096 Move D13, [X31+112]
	097 Move D12, [X31+120]
	098 Return 
	099 Call 0x1C17F20

Method: System.Void ComputeStreamingScoreForBlending(UnityEngine.Rendering.DynamicArray`1<UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo> cells, System.Single worstScore)

Disassembly:
	0x039C3A50 LDP X8, X1, [X0 + 0x40]
	0x039C3A54 MOV X0, X8
	0x039C3A58 RET
	0x039C3A5C STP X1, X2, [X0 + 0x40]
	0x039C3A60 RET
	0x039C3A64 LDP X8, X1, [X0 + 0x50]
	0x039C3A68 MOV X0, X8
	0x039C3A6C RET
	0x039C3A70 STP X1, X2, [X0 + 0x50]
	0x039C3A74 RET
	0x039C3A78 LDP X8, X1, [X0 + 0x60]
	0x039C3A7C MOV X0, X8
	0x039C3A80 RET
	0x039C3A84 STP X1, X2, [X0 + 0x60]
	0x039C3A88 RET
	0x039C3A8C LDP X8, X1, [X0 + 0x70]
	0x039C3A90 MOV X0, X8
	0x039C3A94 RET
	0x039C3A98 STP X1, X2, [X0 + 0x70]
	0x039C3A9C RET
	0x039C3AA0 LDP X8, X1, [X0 + 0x80]
	0x039C3AA4 MOV X0, X8
	0x039C3AA8 RET
	0x039C3AAC STP X1, X2, [X0 + 0x80]
	0x039C3AB0 RET
	0x039C3AB4 LDP X8, X1, [X0 + 0x90]
	0x039C3AB8 MOV X0, X8
	0x039C3ABC RET
	0x039C3AC0 STP X1, X2, [X0 + 0x90]
	0x039C3AC4 RET
	0x039C3AC8 ADD X1, X0, 0xA0
	0x039C3ACC MOVZ W2, 0x70
	0x039C3AD0 MOV X0, X8
	0x039C3AD4 B 0x3EB1AC0
	0x039C3AD8 MOV X1, X31
	0x039C3ADC B 0x33BDD8C
	0x039C3AE0 LDP X8, X1, [X0]
	0x039C3AE4 MOV X0, X8
	0x039C3AE8 RET
	0x039C3AEC STP X1, X2, [X0]
	0x039C3AF0 RET
	0x039C3AF4 LDP X8, X1, [X0 + 0x10]
	0x039C3AF8 MOV X0, X8
	0x039C3AFC RET
	0x039C3B00 STP X1, X2, [X0 + 0x10]
	0x039C3B04 RET
	0x039C3B08 LDP X8, X1, [X0 + 0x20]
	0x039C3B0C MOV X0, X8
	0x039C3B10 RET
	0x039C3B14 STP X1, X2, [X0 + 0x20]
	0x039C3B18 RET
	0x039C3B1C LDP X8, X1, [X0 + 0x30]
	0x039C3B20 MOV X0, X8
	0x039C3B24 RET
	0x039C3B28 STP X1, X2, [X0 + 0x30]
	0x039C3B2C RET
	0x039C3B30 LDP X8, X1, [X0 + 0x40]
	0x039C3B34 MOV X0, X8
	0x039C3B38 RET
	0x039C3B3C STP X1, X2, [X0 + 0x40]
	0x039C3B40 RET
	0x039C3B44 LDP X8, X1, [X0 + 0x50]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xA1F000
	009 Move W8, [X21+3249]
	010 Move V8, V0
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x790000
	018 Move X0, [X0+1032]
	019 Call 0x1C17CF4
	020 Move X0, 0x790000
	021 Move X0, [X0+1040]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3249], W8
	025 Move X8, [X20+240]
	026 Compare X8, 0
	027 JumpIfEqual {74}
	028 Compare X19, 0
	029 JumpIfEqual {74}
	030 Move W9, [X19+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, 0x790000
	033 Move V9, [X8+128]
	034 Move X22, [X22+1032]
	035 Move W20, W31
	036 Move X2, [X22]
	037 Move X0, X19
	038 Move W1, W20
	039 Call 0x2B41178, X0, X1
	040 Move X21, [X0]
	041 Compare X21, 0
	042 JumpIfEqual {74}
	043 Move V0, [X21+36]
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move X0, X21
	046 Move X1, X31
	047 Call BlendingCellInfo.MarkUpToDate, X0
	048 Move X8, [X21+16]
	049 Compare X8, 0
	050 JumpIfEqual {74}
	051 Move V0, [X8+152]
	052 Move X0, X21
	053 Move X1, X31
	054 Move [X21+32], S0
	055 Call BlendingCellInfo.ShouldPrioritize, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {63}
	060 Move V0, [X21+32]
	061 Subtract S0, S0, S8
	062 Move [X21+32], S0
	063 Move W8, [X19+24]
	064 Add W20, W20, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X30, [X31+16]
	071 Move D9, [X31+64]
	072 Move D8, [X31+72]
	073 Return 
	074 Call 0x1C17F20

Method: System.Boolean TryLoadCell(UnityEngine.Rendering.ProbeReferenceVolume/CellInfo cellInfo, ref System.Int32 shBudget, ref System.Int32 indexBudget, UnityEngine.Rendering.DynamicArray`1<UnityEngine.Rendering.ProbeReferenceVolume/CellInfo> loadedCells)

Disassembly:
	0x039C3B48 MOV X0, X8
	0x039C3B4C RET
	0x039C3B50 STP X1, X2, [X0 + 0x50]
	0x039C3B54 RET
	0x039C3B58 LDP X8, X1, [X0 + 0x60]
	0x039C3B5C MOV X0, X8
	0x039C3B60 RET
	0x039C3B64 STP X1, X2, [X0 + 0x60]
	0x039C3B68 RET
	0x039C3B6C STR X30, [X31 - 0x10]!
	0x039C3B70 CBZ X1, 0x39C3BA4
	0x039C3B74 LDR V0, [X0 + 0x98]
	0x039C3B78 LDR V1, [X1 + 0x98]
	0x039C3B7C FCMP S0, S1
	0x039C3B80 B.PL 0x39C3B8C
	0x039C3B84 MOVN W0, 0x0
	0x039C3B88 B 0x39C3B9C
	0x039C3B8C B.LE 0x39C3B98
	0x039C3B90 MOVZ W0, 0x1
	0x039C3B94 B 0x39C3B9C
	0x039C3B98 MOV W0, W31
	0x039C3B9C LDR X30, [X31], #0x10
	0x039C3BA0 RET
	0x039C3BA4 BL 0x1C16F20
	0x039C3BA8 STR X30, [X31 - 0x20]!
	0x039C3BAC STP X20, X19, [X31 + 0x10]
	0x039C3BB0 ADRP X20, 0xA1E000
	0x039C3BB4 LDRB W8, [X20 + 0xCBC]
	0x039C3BB8 MOV X19, X0
	0x039C3BBC TBNZ X8, 0x0, 0x39C3BD4
	0x039C3BC0 ADRP X0, 0x78F000
	0x039C3BC4 LDR X0, [X0 + 0x3C8]
	0x039C3BC8 BL 0x1C16CF4
	0x039C3BCC MOVZ W8, 0x1
	0x039C3BD0 STRB W8, [X20 + 0xCBC]
	0x039C3BD4 LDR X8, [X19 + 0x20]
	0x039C3BD8 STP X31, X31, [X19 + 0x10]
	0x039C3BDC CBZ X8, 0x39C3C18
	0x039C3BE0 LDR W9, [X8 + 0x1C]
	0x039C3BE4 MOVN W10, 0x0
	0x039C3BE8 MOVI V0.2D, 0x0
	0x039C3BEC ADD W9, W9, 0x1
	0x039C3BF0 STP W31, W9, [X8 + 0x18]
	0x039C3BF4 STR W10, [X19 + 0x28]
	0x039C3BF8 STRB W31, [X19 + 0x2C]
	0x039C3BFC STP V0, V0, [X19 + 0x30]
	0x039C3C00 STR V0, [X19 + 0x5]
	0x039C3C04 STR W10, [X19 + 0x94]
	0x039C3C08 STP X31, X31, [X19 + 0x98]
	0x039C3C0C LDP X20, X19, [X31 + 0x10]
	0x039C3C10 LDR X30, [X31], #0x20
	0x039C3C14 RET
	0x039C3C18 BL 0x1C16F20
	0x039C3C1C STR X30, [X31 - 0x30]!
	0x039C3C20 STP X22, X21, [X31 + 0x10]
	0x039C3C24 STP X20, X19, [X31 + 0x20]
	0x039C3C28 ADRP X21, 0xA1E000
	0x039C3C2C ADRP X22, 0x78F000
	0x039C3C30 ADRP X20, 0x78F000
	0x039C3C34 LDRB W8, [X21 + 0xCBD]
	0x039C3C38 LDR X22, [X22 + 0x4F8]
	0x039C3C3C LDR X20, [X20 + 0x500]
	0x039C3C40 MOV X19, X0
	0x039C3C44 TBNZ X8, 0x0, 0x39C3C68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xA1F000
	009 Move W8, [X24+3250]
	010 Move X21, X4
	011 Move X19, X3
	012 Move X20, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Move [X31+8], X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x790000
	021 Move X0, [X0+1056]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3250], W8
	025 Compare X22, 0
	026 JumpIfEqual {78}
	027 Move X8, [X22+16]
	028 Compare X8, 0
	029 JumpIfEqual {78}
	030 Move W9, [X8+48]
	031 Move W10, [X20]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X8+44]
	034 Move W9, [X19]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W0, W31
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Return X0
	045 Move X0, X23
	046 Move X1, X22
	047 Move W2, W31
	048 Call ProbeReferenceVolume.LoadCell, X0, X1, X2
	049 Move W8, W0
	050 Move W0, W31
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {37}
	055 Compare X21, 0
	056 JumpIfEqual {78}
	057 Move X8, 0x790000
	058 Move X8, [X8+1056]
	059 Add X1, X31, 8
	060 Move X0, X21
	061 Move X2, [X8]
	062 Call 0x2B40C18, X0, X1
	063 Move X8, [X31+8]
	064 Compare X8, 0
	065 JumpIfEqual {78}
	066 Move X8, [X8+16]
	067 Compare X8, 0
	068 JumpIfEqual {78}
	069 Move W9, [X20]
	070 Move W10, [X8+48]
	071 Move W0, 1
	072 Subtract W9, W9, W10
	073 Move [X20], W9
	074 Move W9, [X19]
	075 Move W8, [X8+44]
	076 Subtract W8, W9, W8
	077 Move [X19], W8
	078 Call 0x1C17F20

Method: System.Void UnloadBlendingCell(UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo blendingCell, UnityEngine.Rendering.DynamicArray`1<UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo> unloadedCells)

Disassembly:
	0x039C3C48 ADRP X0, 0x78F000
	0x039C3C4C LDR X0, [X0 + 0x500]
	0x039C3C50 BL 0x1C16CF4
	0x039C3C54 ADRP X0, 0x78F000
	0x039C3C58 LDR X0, [X0 + 0x4F8]
	0x039C3C5C BL 0x1C16CF4
	0x039C3C60 MOVZ W8, 0x1
	0x039C3C64 STRB W8, [X21 + 0xCBD]
	0x039C3C68 LDR X0, [X22]
	0x039C3C6C BL 0x1C16F10
	0x039C3C70 LDR X1, [X20]
	0x039C3C74 MOV X20, X0
	0x039C3C78 BL 0x311FF7C
	0x039C3C7C MOVN W8, 0x0
	0x039C3C80 STR X20, [X19 + 0x20]
	0x039C3C84 STR W8, [X19 + 0x28]
	0x039C3C88 MOV X0, X19
	0x039C3C8C LDP X20, X19, [X31 + 0x20]
	0x039C3C90 LDP X22, X21, [X31 + 0x10]
	0x039C3C94 MOV X1, X31
	0x039C3C98 LDR X30, [X31], #0x30
	0x039C3C9C B 0x33BDD8C
	0x039C3CA0 STR X30, [X31 - 0x10]!
	0x039C3CA4 CBZ X1, 0x39C3CD8
	0x039C3CA8 LDR V0, [X0 + 0x20]
	0x039C3CAC LDR V1, [X1 + 0x20]
	0x039C3CB0 FCMP S0, S1
	0x039C3CB4 B.PL 0x39C3CC0
	0x039C3CB8 MOVN W0, 0x0
	0x039C3CBC B 0x39C3CD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA1F000
	007 Move W8, [X22+3251]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move [X31+8], X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x790000
	017 Move X0, [X0+1088]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3251], W8
	021 Move X0, X21
	022 Move X1, X20
	023 Call ProbeReferenceVolume.UnloadBlendingCell, X0, X1
	024 Compare X19, 0
	025 JumpIfEqual {38}
	026 Move X8, 0x790000
	027 Move X8, [X8+1088]
	028 Add X1, X31, 8
	029 Move X0, X19
	030 Move X2, [X8]
	031 Call 0x2B40C18, X0, X1
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 
	038 Call 0x1C17F20

Method: System.Boolean TryLoadBlendingCell(UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo blendingCell, UnityEngine.Rendering.DynamicArray`1<UnityEngine.Rendering.ProbeReferenceVolume/BlendingCellInfo> loadedCells)

Disassembly:
	0x039C3CC0 B.LE 0x39C3CCC
	0x039C3CC4 MOVZ W0, 0x1
	0x039C3CC8 B 0x39C3CD0
	0x039C3CCC MOV W0, W31
	0x039C3CD0 LDR X30, [X31], #0x10
	0x039C3CD4 RET
	0x039C3CD8 BL 0x1C16F20
	0x039C3CDC STR X30, [X31 - 0x20]!
	0x039C3CE0 STP X20, X19, [X31 + 0x10]
	0x039C3CE4 ADRP X20, 0xA1E000
	0x039C3CE8 LDRB W8, [X20 + 0xCBE]
	0x039C3CEC MOV X19, X0
	0x039C3CF0 TBNZ X8, 0x0, 0x39C3D08
	0x039C3CF4 ADRP X0, 0x78F000
	0x039C3CF8 LDR X0, [X0 + 0x3C8]
	0x039C3CFC BL 0x1C16CF4
	0x039C3D00 MOVZ W8, 0x1
	0x039C3D04 STRB W8, [X20 + 0xCBE]
	0x039C3D08 LDR X8, [X19 + 0x18]
	0x039C3D0C STR X31, [X19 + 0x10]
	0x039C3D10 CBZ X8, 0x39C3D34
	0x039C3D14 LDR W9, [X8 + 0x1C]
	0x039C3D18 ADD W9, W9, 0x1
	0x039C3D1C STP W31, W9, [X8 + 0x18]
	0x039C3D20 STRB W31, [X19 + 0x28]
	0x039C3D24 STR X31, [X19 + 0x20]
	0x039C3D28 LDP X20, X19, [X31 + 0x10]
	0x039C3D2C LDR X30, [X31], #0x20
	0x039C3D30 RET
	0x039C3D34 BL 0x1C16F20
	0x039C3D38 MOVN W8, 0x80800000
	0x039C3D3C STR W8, [X0 + 0x20]
	0x039C3D40 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA1F000
	007 Move W8, [X22+3252]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move [X31+8], X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x790000
	017 Move X0, [X0+1088]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3252], W8
	021 Move X0, X21
	022 Move X1, X20
	023 Call ProbeReferenceVolume.AddBlendingBricks, X0, X1
	024 Move W20, W0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {37}
	029 Compare X19, 0
	030 JumpIfEqual {44}
	031 Move X8, 0x790000
	032 Move X8, [X8+1088]
	033 Add X1, X31, 8
	034 Move X0, X19
	035 Move X2, [X8]
	036 Call 0x2B40C18, X0, X1
	037 And W0, W20, 1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void UpdateCellStreaming(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Camera camera)

Disassembly:
	0x039C3D44 LDR V0, [X0 + 0x20]
	0x039C3D48 MOVN W8, 0x80800000
	0x039C3D4C FMOV S1, W8
	0x039C3D50 FCMP S0, S1
	0x039C3D54 CSET W0, EQ
	0x039C3D58 RET
	0x039C3D5C MOVZ W8, 0xBF800000
	0x039C3D60 STR W8, [X0 + 0x24]
	0x039C3D64 RET
	0x039C3D68 LDR V0, [X0 + 0x24]
	0x039C3D6C FMOV S1, -1
	0x039C3D70 FCMP S0, S1
	0x039C3D74 CSET W0, EQ
	0x039C3D78 RET
	0x039C3D7C MOVZ W8, 0xC0000000
	0x039C3D80 STR W8, [X0 + 0x24]
	0x039C3D84 RET
	0x039C3D88 LDR V0, [X0 + 0x24]
	0x039C3D8C FMOV S1, -2
	0x039C3D90 FCMP S0, S1
	0x039C3D94 CSET W0, EQ
	0x039C3D98 RET
	0x039C3D9C STR X30, [X31 - 0x30]!
	0x039C3DA0 STP X22, X21, [X31 + 0x10]
	0x039C3DA4 STP X20, X19, [X31 + 0x20]
	0x039C3DA8 ADRP X21, 0xA1E000
	0x039C3DAC ADRP X22, 0x78F000
	0x039C3DB0 ADRP X20, 0x78F000
	0x039C3DB4 LDRB W8, [X21 + 0xCBF]
	0x039C3DB8 LDR X22, [X22 + 0x4F8]
	0x039C3DBC LDR X20, [X20 + 0x500]
	0x039C3DC0 MOV X19, X0
	0x039C3DC4 TBNZ X8, 0x0, 0x39C3DE8
	0x039C3DC8 ADRP X0, 0x78F000
	0x039C3DCC LDR X0, [X0 + 0x500]
	0x039C3DD0 BL 0x1C16CF4
	0x039C3DD4 ADRP X0, 0x78F000
	0x039C3DD8 LDR X0, [X0 + 0x4F8]
	0x039C3DDC BL 0x1C16CF4
	0x039C3DE0 MOVZ W8, 0x1
	0x039C3DE4 STRB W8, [X21 + 0xCBF]
	0x039C3DE8 LDR X0, [X22]
	0x039C3DEC BL 0x1C16F10
	0x039C3DF0 LDR X1, [X20]
	0x039C3DF4 MOV X20, X0
	0x039C3DF8 BL 0x311FF7C
	0x039C3DFC STR X20, [X19 + 0x18]
	0x039C3E00 MOV X0, X19
	0x039C3E04 LDP X20, X19, [X31 + 0x20]
	0x039C3E08 LDP X22, X21, [X31 + 0x10]
	0x039C3E0C MOV X1, X31
	0x039C3E10 LDR X30, [X31], #0x30
	0x039C3E14 B 0x33BDD8C
	0x039C3E18 STP D9, D8, [X31 - 0x30]!
	0x039C3E1C STR X30, [X31 + 0x10]
	0x039C3E20 STP X20, X19, [X31 + 0x20]
	0x039C3E24 MOV X20, X1
	0x039C3E28 MOV X19, X0
	0x039C3E2C MOV X0, X1
	0x039C3E30 MOV W1, W31
	0x039C3E34 MOV X2, X31
	0x039C3E38 MOV V8.16B, V1.16B
	0x039C3E3C MOV V9.16B, V0.16B
	0x039C3E40 BL 0x3C27C24
	0x039C3E44 MOVZ W1, 0x1
	0x039C3E48 MOV X0, X20
	0x039C3E4C MOV X2, X31
	0x039C3E50 STP S0, S1, [X19 + 0xC]
	0x039C3E54 STR S2, [X19 + 0x14]
	0x039C3E58 BL 0x3C27C24
	0x039C3E5C MOVZ W1, 0x2
	0x039C3E60 MOV X0, X20
	0x039C3E64 MOV X2, X31
	0x039C3E68 STP S0, S1, [X19 + 0x18]
	0x039C3E6C STR S2, [X19 + 0x20]
	0x039C3E70 BL 0x3C27C24
	0x039C3E74 MOVZ W1, 0x3
	0x039C3E78 MOV X0, X20
	0x039C3E7C MOV X2, X31
	0x039C3E80 STP S0, S1, [X19 + 0x24]
	0x039C3E84 STR S2, [X19 + 0x2C]
	0x039C3E88 BL 0x3C27C24
	0x039C3E8C LDUR V3, [X19 + 0xC]
	0x039C3E90 LDR V6, [X19 + 0x18]
	0x039C3E94 LDUR V16, [X19 + 0x24]
	0x039C3E98 LDR V4, [X19 + 0x14]
	0x039C3E9C LDR V7, [X19 + 0x20]
	0x039C3EA0 MOVI V5.2S, 0x3F, 0x18
	0x039C3EA4 MOV V0.S[1], V1.S[0]
	0x039C3EA8 LDR V1, [X19 + 0x2C]
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x039C3EB8 FMOV S16, 0.5
	0x039C3EBC FMUL S4, S4, S16
	0x039C3EC0 FMUL S7, S7, S16
	0x039C3EC4 FSUB V0.2S, V0.2S, V3.2S
	0x039C3EC8 FSUB S2, S2, S4
	0x039C3ECC FMUL S1, S1, S16
	0x039C3ED0 FSUB V0.2S, V0.2S, V6.2S
	0x039C3ED4 FSUB S2, S2, S7
	0x039C3ED8 FSUB V0.2S, V0.2S, V5.2S
	0x039C3EDC FSUB S1, S2, S1
	0x039C3EE0 STR D0, [X19]
	0x039C3EE4 STR S1, [X19 + 0x8]
	0x039C3EE8 STP S9, S8, [X19 + 0x30]
	0x039C3EEC LDP X20, X19, [X31 + 0x20]
	0x039C3EF0 LDR X30, [X31 + 0x10]
	0x039C3EF4 LDP D9, D8, [X31], #0x30
	0x039C3EF8 RET
	0x039C3EFC LDR V6, [X31 + 0x28]
	0x039C3F00 LDR V7, [X31 + 0x20]
	0x039C3F04 LDR V16, [X31 + 0x18]
	0x039C3F08 LDR X8, [X31 + 0x10]
	0x039C3F0C LDR V17, [X31 + 0x8]
	0x039C3F10 LDR X9, [X31]
	0x039C3F14 STP S0, S1, [X0]
	0x039C3F18 STP S2, S3, [X0 + 0x8]
	0x039C3F1C STP S4, S5, [X0 + 0x10]
	0x039C3F20 STR X9, [X0 + 0x18]
	0x039C3F24 STR S17, [X0 + 0x20]
	0x039C3F28 STUR X8, [X0 + 0x24]
	0x039C3F2C STP S16, S7, [X0 + 0x2C]
	0x039C3F30 STR S6, [X0 + 0x34]
	0x039C3F34 RET
	0x039C3F38 SUB X31, X31, 0xC0
	0x039C3F3C LDP V1, V0, [X1]
	0x039C3F40 LDR V2, [X1 + 0x2]
	0x039C3F44 LDR X8, [X1 + 0x30]
	0x039C3F48 STP V1, V0, [X31 + 0x80]
	0x039C3F4C LDR W9, [X31 + 0x94]
	0x039C3F50 LDUR X10, [X31 + 0x8C]
	0x039C3F54 STR X8, [X31 + 0xB0]
	0x039C3F58 STR V2, [X31 + 0xA]
	0x039C3F5C STR W9, [X0 + 0x14]
	0x039C3F60 STUR X10, [X0 + 0xC]
	0x039C3F64 LDP V2, V0, [X1 + 0x10]
	0x039C3F68 LDR V1, [X1]
	0x039C3F6C LDR X8, [X1 + 0x30]
	0x039C3F70 STP V2, V0, [X31 + 0x50]
	0x039C3F74 LDR W9, [X31 + 0x60]
	0x039C3F78 LDR X10, [X31 + 0x58]
	0x039C3F7C STR X8, [X31 + 0x70]
	0x039C3F80 STR V1, [X31 + 0x4]
	0x039C3F84 STR W9, [X0 + 0x20]
	0x039C3F88 STR X10, [X0 + 0x18]
	0x039C3F8C LDP V2, V0, [X1 + 0x10]
	0x039C3F90 LDR X8, [X1 + 0x30]
	0x039C3F94 LDR V1, [X1]
	0x039C3F98 STP V2, V0, [X31 + 0x10]
	0x039C3F9C STR X8, [X31 + 0x30]
	0x039C3FA0 LDR W8, [X31 + 0x2C]
	0x039C3FA4 LDUR X9, [X31 + 0x24]
	0x039C3FA8 STR V1, [X31]
	0x039C3FAC STR W8, [X0 + 0x2C]
	0x039C3FB0 STUR X9, [X0 + 0x24]
	0x039C3FB4 LDR W8, [X1 + 0x8]
	0x039C3FB8 LDR X9, [X1]
	0x039C3FBC STR W8, [X0 + 0x8]
	0x039C3FC0 STR X9, [X0]
	0x039C3FC4 LDR V0, [X1 + 0x30]
	0x039C3FC8 STR S0, [X0 + 0x30]
	0x039C3FCC LDR V0, [X1 + 0x34]
	0x039C3FD0 STR S0, [X0 + 0x34]
	0x039C3FD4 ADD X31, X31, 0xC0
	0x039C3FD8 RET
	0x039C3FDC LDUR V0, [X1 + 0xC]
	0x039C3FE0 LDR V1, [X1 + 0x14]
	0x039C3FE4 LDR V2, [X1]
	0x039C3FE8 LDR V3, [X1 + 0x8]
	0x039C3FEC MOVI V4.2S, 0xBF, 0x18
	0x039C3FF0 FMOV S5, -0.5
	0x039C3FF4 FADD V0.2S, V0.2S, V0.2S
	0x039C3FF8 FADD S1, S1, S1
	0x00000000 INVALID
	0x039C4000 FMUL S5, S1, S5
	0x039C4004 FADD V2.2S, V2.2S, V4.2S
	0x039C4008 MOVI D4, 0x0
	0x039C400C ADD X8, X0, 0x1C
	0x039C4010 FADD S3, S3, S5
	0x039C4014 STR W31, [X0 + 0x18]
	0x039C4018 STR D4, [X0 + 0x10]
	0x039C401C STR D2, [X0]
	0x039C4020 STP S3, S0, [X0 + 0x8]
	0x039C4024 UNIMPLEMENTED
	0x039C4028 STR D4, [X0 + 0x20]
	0x039C402C STR W31, [X0 + 0x28]
	0x039C4030 STR S1, [X0 + 0x2C]
	0x039C4034 STR D4, [X0 + 0x30]
	0x039C4038 RET
	0x039C403C LDR V0, [X0]
	0x039C4040 LDR V1, [X0 + 0x8]
	0x039C4044 LDUR V2, [X0 + 0xC]
	0x039C4048 LDR V4, [X0 + 0x14]
	0x039C404C LDR V5, [X0 + 0x18]
	0x039C4050 LDR V7, [X0 + 0x20]
	0x039C4054 LDUR V16, [X0 + 0x24]
	0x039C4058 LDR V19, [X0 + 0x2C]
	0x039C405C MOVN W10, 0x80800000
	0x039C4060 UNIMPLEMENTED
	0x039C4064 FMOV S6, W10
	0x039C4068 MOVN W10, 0x800000
	0x039C406C MOV W9, W31
	0x039C4070 MVNI V18.2S, 0x80, 0x10
	0x039C4074 FMOV S17, W10
	0x039C4078 SCVTF S20, W9
	0x00000000 INVALID
	0x039C4080 FMUL S22, S4, S20
	0x039C4084 MOV W10, W31
	0x039C4088 FADD V20.2S, V0.2S, V21.2S
	0x039C408C FADD S21, S1, S22
	0x039C4090 SCVTF S22, W10
	0x00000000 INVALID
	0x039C4098 FMUL S25, S7, S22
	0x039C409C FMOV S24, W31
	0x039C40A0 FADD V22.2S, V20.2S, V23.2S
	0x039C40A4 FADD S23, S21, S25
	0x039C40A8 MOVZ W11, 0x1
	0x00000000 INVALID
	0x039C40B0 FMUL S24, S19, S24
	0x039C40B4 FADD S24, S23, S24
	0x039C40B8 FADD V25.2S, V22.2S, V25.2S
	0x039C40BC FCMP S6, S24
	0x00000000 INVALID
	0x00000000 INVALID
	0x039C40C8 FCSEL S6, S6, S24, MI
	0x039C40CC FCMP S17, S24
	0x039C40D0 MOV W12, W11
	0x00000000 INVALID
	0x00000000 INVALID
	0x039C40DC FCSEL S17, S17, S24, GT
	0x039C40E0 FMOV S24, 1
	0x039C40E4 MOV W11, W31
	0x039C40E8 TBNZ X12, 0x0, 0x39C40AC
	0x039C40EC ADD W10, W10, 0x1
	0x039C40F0 CMP W10, 0x2
	0x039C40F4 B.NE 0x39C4090
	0x039C40F8 ADD W9, W9, 0x1
	0x039C40FC CMP W9, 0x2
	0x039C4100 B.NE 0x39C4078
	0x039C4104 FADD V0.2S, V3.2S, V18.2S
	0x039C4108 FADD S1, S6, S17
	0x039C410C MOVI V2.2S, 0x3F, 0x18
	0x039C4110 FMOV S4, 0.5
	0x039C4114 FSUB V3.2S, V18.2S, V3.2S
	0x039C4118 FSUB S5, S17, S6
	0x00000000 INVALID
	0x039C4120 FMUL S1, S1, S4
	0x00000000 INVALID
	0x039C4128 FMUL S3, S5, S4
	0x039C412C STR D0, [X8]
	0x039C4130 STR S1, [X8 + 0x8]
	0x039C4134 STUR D2, [X8 + 0xC]
	0x039C4138 STR S3, [X8 + 0x14]
	0x039C413C RET
	0x039C4140 SUB X31, X31, 0xB0
	0x039C4144 STR D10, [X31 + 0x60]
	0x039C4148 STP D9, D8, [X31 + 0x70]
	0x039C414C STP X30, X23, [X31 + 0x80]
	0x039C4150 STP X22, X21, [X31 + 0x90]
	0x039C4154 STP X20, X19, [X31 + 0xA0]
	0x039C4158 ADRP X22, 0xA14000
	0x039C415C LDRB W8, [X22 + 0x784]
	0x039C4160 MOV X21, X2
	0x039C4164 MOV X19, X1
	0x039C4168 MOV X20, X0
	0x039C416C CBNZ W8, 0x39C4184
	0x039C4170 ADRP X0, 0x72F000
	0x039C4174 LDR X0, [X0 + 0x5A8]
	0x039C4178 BL 0x1C16CF4
	0x039C417C MOVZ W8, 0x1
	0x039C4180 STRB W8, [X22 + 0x784]
	0x039C4184 ADRP X23, 0x72F000
	0x039C4188 LDR X23, [X23 + 0x5A8]
	0x039C418C LDR V1, [X20 + 0xC]
	0x039C4190 LDR V0, [X20 + 0x10]
	0x039C4194 LDR X0, [X23]
	0x039C4198 STP V0, V1, [X31 + 0x40]
	0x039C419C LDR V0, [X20 + 0x14]
	0x039C41A0 LDR W8, [X0 + 0xE0]
	0x039C41A4 STR V0, [X31 + 0x3]
	0x039C41A8 CBNZ W8, 0x39C41CC
	0x039C41AC BL 0x1C16DFC
	0x039C41B0 LDRB W8, [X22 + 0x784]
	0x039C41B4 CBNZ W8, 0x39C41CC
	0x039C41B8 ADRP X0, 0x72F000
	0x039C41BC LDR X0, [X0 + 0x5A8]
	0x039C41C0 BL 0x1C16CF4
	0x039C41C4 MOVZ W8, 0x1
	0x039C41C8 STRB W8, [X22 + 0x784]
	0x039C41CC LDR X0, [X23]
	0x039C41D0 LDP S2, S1, [X20 + 0x18]
	0x039C41D4 LDR V0, [X20 + 0x20]
	0x039C41D8 LDR W8, [X0 + 0xE0]
	0x039C41DC CBNZ W8, 0x39C4218
	0x039C41E0 STP V1, V0, [X31 + 0x10]
	0x039C41E4 STR V2, [X31]
	0x039C41E8 BL 0x1C16DFC
	0x039C41EC LDP V2, V1, [X31]
	0x039C41F0 LDR V0, [X31 + 0x2]
	0x039C41F4 LDRB W8, [X22 + 0x784]
	0x039C41F8 CBNZ W8, 0x39C4218
	0x039C41FC ADRP X0, 0x72F000
	0x039C4200 LDR X0, [X0 + 0x5A8]
	0x039C4204 BL 0x1C16CF4
	0x039C4208 LDP V2, V1, [X31]
	0x039C420C LDR V0, [X31 + 0x2]
	0x039C4210 MOVZ W8, 0x1
	0x039C4214 STRB W8, [X22 + 0x784]
	0x039C4218 LDR X0, [X23]
	0x039C421C LDP S10, S9, [X20 + 0x24]
	0x039C4220 LDR V8, [X20 + 0x2C]
	0x039C4224 LDR W8, [X0 + 0xE0]
	0x039C4228 CBNZ W8, 0x39C4240
	0x039C422C STP V1, V0, [X31 + 0x10]
	0x039C4230 STR V2, [X31]
	0x039C4234 BL 0x1C16DFC
	0x039C4238 LDP V2, V1, [X31]
	0x039C423C LDR V0, [X31 + 0x2]
	0x039C4240 LDP V6, V5, [X31 + 0x40]
	0x039C4244 LDR V7, [X31 + 0x3]
	0x039C4248 MOVI V3.2S, 0x3F, 0x18
	0x039C424C FMOV S4, 0.5
	0x039C4250 MOV V5.S[1], V2.S[0]
	0x039C4254 MOV V6.S[1], V1.S[0]
	0x039C4258 MOV V7.S[1], V0.S[0]
	0x039C425C FMUL S0, S10, S10
	0x039C4260 FMUL S1, S9, S9
	0x00000000 INVALID
	0x00000000 INVALID
	0x039C426C FMUL S2, S8, S8
	0x00000000 INVALID
	0x039C4274 FADD S0, S0, S1
	0x039C4278 FADD V1.2S, V5.2S, V6.2S
	0x039C427C FADD S0, S0, S2
	0x039C4280 FADD V1.2S, V1.2S, V7.2S
	0x039C4284 FSQRT S0, S0
	0x039C4288 UNIMPLEMENTED
	0x039C428C STR S0, [X21 + 0x8]
	0x039C4290 STR D1, [X21]
	0x039C4294 LDUR V1, [X20 + 0xC]
	0x039C4298 LDR V5, [X20 + 0x18]
	0x039C429C LDUR V7, [X20 + 0x24]
	0x039C42A0 LDR V2, [X20 + 0x14]
	0x039C42A4 LDR V0, [X20]
	0x039C42A8 LDR V6, [X20 + 0x20]
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x039C42B8 LDR V7, [X20 + 0x8]
	0x039C42BC LDR V16, [X20 + 0x2C]
	0x039C42C0 FMUL S2, S2, S4
	0x039C42C4 FMUL S6, S6, S4
	0x039C42C8 FADD V0.2S, V0.2S, V1.2S
	0x039C42CC FADD S1, S7, S2
	0x039C42D0 FMUL S4, S16, S4
	0x039C42D4 FADD V0.2S, V0.2S, V5.2S
	0x039C42D8 FADD S1, S1, S6
	0x039C42DC FADD V0.2S, V0.2S, V3.2S
	0x039C42E0 FADD S1, S1, S4
	0x039C42E4 STR D0, [X19]
	0x039C42E8 STR S1, [X19 + 0x8]
	0x039C42EC LDP X20, X19, [X31 + 0xA0]
	0x039C42F0 LDP X22, X21, [X31 + 0x90]
	0x039C42F4 LDP X30, X23, [X31 + 0x80]
	0x039C42F8 LDP D9, D8, [X31 + 0x70]
	0x039C42FC LDR V10, [X31 + 0x60]
	0x039C4300 ADD X31, X31, 0xB0
	0x039C4304 RET
	0x039C4308 STR X30, [X31 - 0x20]!
	0x039C430C STP X20, X19, [X31 + 0x10]
	0x039C4310 LDP S0, S1, [X0]
	0x039C4314 LDR V2, [X0 + 0x8]
	0x039C4318 MOV X19, X0
	0x039C431C MOV X20, X1
	0x039C4320 MOV X0, X1
	0x039C4324 MOV X1, X31
	0x039C4328 BL 0x3C281F8
	0x039C432C LDP S3, S4, [X19 + 0xC]
	0x039C4330 LDR V5, [X19 + 0x14]
	0x039C4334 STP S0, S1, [X19]
	0x039C4338 STR S2, [X19 + 0x8]
	0x039C433C MOV X0, X20
	0x039C4340 MOV V0.16B, V3.16B
	0x039C4344 MOV V1.16B, V4.16B
	0x039C4348 MOV V2.16B, V5.16B
	0x039C434C MOV X1, X31
	0x039C4350 BL 0x3C282D0
	0x039C4354 LDP S3, S4, [X19 + 0x18]
	0x039C4358 LDR V5, [X19 + 0x20]
	0x039C435C STP S0, S1, [X19 + 0xC]
	0x039C4360 STR S2, [X19 + 0x14]
	0x039C4364 MOV X0, X20
	0x039C4368 MOV V0.16B, V3.16B
	0x039C436C MOV V1.16B, V4.16B
	0x039C4370 MOV V2.16B, V5.16B
	0x039C4374 MOV X1, X31
	0x039C4378 BL 0x3C282D0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D10
	003 Move [X31+64], D9
	004 Move [X31+72], D8
	005 Move [X31+80], X30
	006 Move [X31+88], X27
	007 Move [X31+96], X26
	008 Move [X31+104], X25
	009 Move [X31+112], X24
	010 Move [X31+120], X23
	011 Move [X31+128], X22
	012 Move [X31+136], X21
	013 Move [X31+144], X20
	014 Move [X31+152], X19
	015 Move X22, 0xA1F000
	016 Move W8, [X22+3253]
	017 Move X21, X2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x790000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move X0, 0x790000
	028 Move X0, [X0+992]
	029 Call 0x1C17CF4
	030 Move X0, 0x790000
	031 Move X0, [X0+1056]
	032 Call 0x1C17CF4
	033 Move X0, 0x790000
	034 Move X0, [X0+1000]
	035 Call 0x1C17CF4
	036 Move X0, 0x790000
	037 Move X0, [X0+2464]
	038 Call 0x1C17CF4
	039 Move X0, 0x790000
	040 Move X0, [X0+1008]
	041 Call 0x1C17CF4
	042 Move X0, 0x790000
	043 Move X0, [X0+832]
	044 Call 0x1C17CF4
	045 Move X0, 0x790000
	046 Move X0, [X0+2472]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+3253], W8
	050 Move [X31+40], X31
	051 Move W8, [X20+321]
	052 Compare W8, 0
	053 JumpIfEqual {339}
	054 Move X22, 0x790000
	055 Move X22, [X22+2472]
	056 Move W0, 1
	057 Move X1, [X22]
	058 Call 0x2236BC0, X0
	059 Compare X21, 0
	060 JumpIfEqual {365}
	061 Move X0, X21
	062 Move X1, X31
	063 Call Component.get_transform, X0
	064 Compare X0, 0
	065 JumpIfEqual {366}
	066 Move X1, X31
	067 Call Transform.get_position, X0
	068 Move X8, [X20+400]
	069 Compare X8, 0
	070 JumpIfEqual {367}
	071 Move W8, [X8+64]
	072 Compare W8, 0
	073 JumpIfEqual {76}
	074 Move V0, [X20+632]
	075 Move V8, [X20+640]
	076 Move V8, V2
	077 Move [X20+632], S0
	078 Move V0.S[1], V1.S[0]
	079 Move [X20+636], S1
	080 Move [X20+640], S2
	081 Move [X31+1], V0
	082 Move W8, [X20+52]
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move V10, [X20+28]
	085 Subtract W1, W8, 1
	086 Move X0, X20
	087 Call ProbeReferenceVolume.BrickSize, X0, X1
	088 Move X21, 0xA16000
	089 Move W8, [X21+2139]
	090 Move [X31], V0
	091 Compare W8, 0
	092 JumpIfNotEqual {98}
	093 Move X0, 0x731000
	094 Move X0, [X0+1440]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X21+2139], W8
	098 Move X8, 0x731000
	099 Move X8, [X8+1440]
	100 Move V4, [X31]
	101 Move V1, [X31+16]
	102 Subtract S0, S8, S10
	103 NotImplemented "Instruction MOVI not yet implemented."
	104 Move X8, [X8]
	105 Subtract V1, V1, V9
	106 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	107 NotImplemented "Instruction INVALID not yet implemented."
	108 Move X8, [X8+184]
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 Move X1, [X20+576]
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 Move V4, [X8+20]
	113 NotImplemented "Instruction INVALID not yet implemented."
	114 Move S3, -0.5
	115 Multiply S3, S4, S3
	116 Add V0, V1, V2
	117 Add S8, S5, S3
	118 Move S9, V0.S[1]
	119 Move V1, V9
	120 Move V2, V8
	121 Move [X31+1], V0
	122 Call ProbeReferenceVolume.ComputeCellCameraDistance, X0, X1, X2
	123 Move X1, [X20+568]
	124 Move V0, [X31+1]
	125 Move V1, V9
	126 Move V2, V8
	127 Call ProbeReferenceVolume.ComputeCellCameraDistance, X0, X1, X2
	128 Move X21, 0x790000
	129 Move X21, [X21+2456]
	130 Move X0, [X20+576]
	131 Move X1, [X21]
	132 Call 0x21B0D8C, X0
	133 Move X0, [X20+568]
	134 Move X1, [X21]
	135 Call 0x21B0D8C, X0
	136 Move X8, [X20+64]
	137 Compare X8, 0
	138 JumpIfEqual {368}
	139 Move W8, [X8+32]
	140 Move [X31+60], W8
	141 Move X8, [X20+56]
	142 Compare X8, 0
	143 JumpIfEqual {369}
	144 Move W8, [X8+128]
	145 Move [X31+56], W8
	146 Move X8, [X20+576]
	147 Compare X8, 0
	148 JumpIfEqual {370}
	149 Move W9, [X20+356]
	150 Move W10, [X8+24]
	151 Move X23, 0x790000
	152 Move W11, [X20+17]
	153 Move X23, [X23+2464]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 NotImplemented "Instruction CSEL not yet implemented."
	156 Compare W11, 0
	157 JumpIfEqual {256}
	158 Move X25, 0x790000
	159 Move X25, [X25+1008]
	160 Move X8, [X20+584]
	161 Compare X8, 0
	162 JumpIfEqual {354}
	163 Move W1, [X8+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, [X20+576]
	166 Compare X0, 0
	167 JumpIfEqual {355}
	168 Move X2, [X25]
	169 Call 0x2B41178, X0, X1
	170 Move X1, [X0]
	171 Move X4, [X20+584]
	172 Add X2, X31, 56
	173 Add X3, X31, 60
	174 Move X0, X20
	175 Call ProbeReferenceVolume.TryLoadCell, X0, X1, X2, X3, X4
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {160}
	180 Move X8, [X20+584]
	181 Compare X8, 0
	182 JumpIfEqual {377}
	183 Move W9, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare X8, 0
	186 JumpIfEqual {255}
	187 Move X27, 0x790000
	188 Move X27, [X27+1056]
	189 Move W26, W31
	190 Move W8, [X8+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, [X20+568]
	193 Compare X8, 0
	194 JumpIfEqual {357}
	195 Move W9, [X8+24]
	196 Add W31, W26, W9
	197 Move X2, [X25]
	198 Add W9, W26, W9
	199 Subtract W1, W9, 1
	200 Move X0, X8
	201 Call 0x2B41178, X0, X1
	202 Move X8, [X0]
	203 Move [X31+40], X8
	204 Move X8, [X20+584]
	205 Compare X8, 0
	206 JumpIfEqual {360}
	207 Move X0, [X20+576]
	208 Compare X0, 0
	209 JumpIfEqual {359}
	210 Move W1, [X8+24]
	211 Move X2, [X25]
	212 Call 0x2B41178, X0, X1
	213 Move X8, [X31+40]
	214 Compare X8, 0
	215 JumpIfEqual {358}
	216 Move X21, [X0]
	217 Compare X21, 0
	218 JumpIfEqual {361}
	219 Move V0, [X8+152]
	220 Move V1, [X21+152]
	221 NotImplemented "Instruction FCMP not yet implemented."
	222 Move X0, X20
	223 Move X1, X8
	224 Call ProbeReferenceVolume.UnloadCell, X0, X1
	225 Move X8, [X31+40]
	226 Compare X8, 0
	227 JumpIfEqual {364}
	228 Move X8, [X8+16]
	229 Compare X8, 0
	230 JumpIfEqual {363}
	231 Move W9, [X31+56]
	232 Move W8, [X8+44]
	233 Move W10, [X8+48]
	234 Add W9, W10, W9
	235 Move [X31+56], W9
	236 Move W9, [X31+60]
	237 Add W8, W8, W9
	238 Move [X31+60], W8
	239 Move X0, [X20+592]
	240 Compare X0, 0
	241 JumpIfEqual {362}
	242 Move X2, [X27]
	243 Add X1, X31, 40
	244 Call 0x2B40C18, X0, X1
	245 Move X4, [X20+584]
	246 Add X2, X31, 56
	247 Add X3, X31, 60
	248 Move X0, X20
	249 Move X1, X21
	250 Call ProbeReferenceVolume.TryLoadCell, X0, X1, X2, X3, X4
	251 Move X8, [X20+584]
	252 Subtract W26, W26, 1
	253 Compare X8, 0
	254 JumpIfNotEqual {190}
	255 Call 0x1C17F20
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X9, [X20+584]
	258 Compare X9, 0
	259 JumpIfEqual {279}
	260 Move X21, 0x78F000
	261 Move X21, [X21+1008]
	262 Compare X8, 0
	263 JumpIfEqual {356}
	264 Move W1, [X9+24]
	265 Move X2, [X21]
	266 Move X0, X8
	267 Call 0x2B41178, X0, X1
	268 Move X1, [X0]
	269 Move X4, [X20+584]
	270 Add X2, X31, 56
	271 Add X3, X31, 60
	272 Move X0, X20
	273 Call ProbeReferenceVolume.TryLoadCell, X0, X1, X2, X3, X4
	274 Subtract W24, W24, 1
	275 Move X9, [X20+584]
	276 Move X8, [X20+576]
	277 Compare X9, 0
	278 JumpIfNotEqual {262}
	279 Call 0x1C17F20
	280 Subtract W2, W31, W26
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, [X20+568]
	283 Compare X0, 0
	284 JumpIfEqual {378}
	285 Move W8, [X0+24]
	286 Move X3, [X23]
	287 Add W1, W8, W26
	288 Call 0x2B40E6C, X0, X1, X2
	289 Move X0, X20
	290 Call ProbeReferenceVolume.RecomputeMinMaxLoadedCellPos, X0
	291 Move X8, [X20+584]
	292 Compare X8, 0
	293 JumpIfEqual {371}
	294 Move X0, [X20+576]
	295 Compare X0, 0
	296 JumpIfEqual {372}
	297 Move W2, [X8+24]
	298 Move X3, [X23]
	299 Move W1, W31
	300 Call 0x2B40E6C, X0, X1, X2
	301 Move X0, [X20+568]
	302 Compare X0, 0
	303 JumpIfEqual {373}
	304 Move X21, 0x78F000
	305 Move X21, [X21+992]
	306 Move X1, [X20+584]
	307 Move X2, [X21]
	308 Call 0x2B40CD0, X0, X1
	309 Move X0, [X20+576]
	310 Compare X0, 0
	311 JumpIfEqual {374}
	312 Move X1, [X20+592]
	313 Move X2, [X21]
	314 Call 0x2B40CD0, X0, X1
	315 Move X0, [X20+584]
	316 Compare X0, 0
	317 JumpIfEqual {375}
	318 Move X21, 0x78F000
	319 Move X21, [X21+1000]
	320 Move X1, [X21]
	321 Call 0x2B40BDC, X0
	322 Move X0, [X20+592]
	323 Compare X0, 0
	324 JumpIfEqual {376}
	325 Move X1, [X21]
	326 Call 0x2B40BDC, X0
	327 Move X0, X20
	328 Call ProbeReferenceVolume.get_enableScenarioBlending, X0
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {339}
	333 Move X1, [X22]
	334 Move W0, 2
	335 Call 0x2236BC0, X0
	336 Move X0, X20
	337 Move X1, X19
	338 Call ProbeReferenceVolume.UpdateBlendingCellStreaming, X0, X1
	339 Move X20, [X31+144]
	340 Move X19, [X31+152]
	341 Move X22, [X31+128]
	342 Move X21, [X31+136]
	343 Move X24, [X31+112]
	344 Move X23, [X31+120]
	345 Move X26, [X31+96]
	346 Move X25, [X31+104]
	347 Move X30, [X31+80]
	348 Move X27, [X31+88]
	349 Move D9, [X31+64]
	350 Move D8, [X31+72]
	351 Move V10, [X31+48]
	352 Add X31, X31, 160
	353 Return 
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Call 0x1C17F20
	363 Call 0x1C17F20
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F20
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Call 0x3EB2AD0
	381 Move X19, [X0]
	382 Call 0x3EB2AE0
	383 Compare X19, 0
	384 JumpIfEqual {339}
	385 Move X0, X19
	386 Call 0x1C17F18
	387 Compare X19, 0
	388 JumpIfEqual {401}
	389 Move X0, X19
	390 Call 0x1C17F18
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Call 0x3EB2AD0
	393 Move X21, [X0]
	394 Call 0x3EB2AE0
	395 Compare X21, 0
	396 JumpIfEqual {327}
	397 Move X0, X21
	398 Call 0x1C17F18
	399 Compare X21, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1D2D690
	402 Move X0, X21
	403 Call 0x1C17F18
	404 Call 0x1991590

Method: System.Int32 FindWorstBlendingCellToBeLoaded()

Disassembly:
	0x039C48B0 CBZ X8, 0x39C48C8
	0x039C48B4 LDR W8, [X8 + 0x34]
	0x039C48B8 LDP X20, X19, [X31 + 0x10]
	0x039C48BC SUB W0, W8, 0x1
	0x039C48C0 LDR X30, [X31], #0x20
	0x039C48C4 RET
	0x039C48C8 BL 0x1C16F20
	0x039C48CC ADRP X8, 0xFFFFFFFFFD126000
	0x039C48D0 LDR V0, [X8 + 0x410]
	0x039C48D4 RET
	0x039C48D8 ADRP X8, 0xFFFFFFFFFD126000
	0x039C48DC LDR V0, [X8 + 0xBC]
	0x039C48E0 RET
	0x039C48E4 FMOV S0, W31
	0x039C48E8 RET
	0x039C48EC STR X30, [X31 - 0x20]!
	0x039C48F0 STP X20, X19, [X31 + 0x10]
	0x039C48F4 ADRP X20, 0xA1D000
	0x039C48F8 ADRP X19, 0x78D000
	0x039C48FC LDRB W8, [X20 + 0xCC4]
	0x039C4900 LDR X19, [X19 + 0xF48]
	0x039C4904 TBNZ X8, 0x0, 0x39C491C
	0x039C4908 ADRP X0, 0x78D000
	0x039C490C LDR X0, [X0 + 0xF48]
	0x039C4910 BL 0x1C16CF4
	0x039C4914 MOVZ W8, 0x1
	0x039C4918 STRB W8, [X20 + 0xCC4]
	0x039C491C LDR X0, [X19]
	0x039C4920 LDR W8, [X0 + 0xE0]
	0x039C4924 CBNZ W8, 0x39C492C
	0x039C4928 BL 0x1C16DFC
	0x039C492C ADRP X20, 0xA1D000
	0x039C4930 LDRB W8, [X20 + 0xCB9]
	0x039C4934 CBNZ W8, 0x39C494C
	0x039C4938 ADRP X0, 0x78D000
	0x039C493C LDR X0, [X0 + 0xF48]
	0x039C4940 BL 0x1C16CF4
	0x039C4944 MOVZ W8, 0x1
	0x039C4948 STRB W8, [X20 + 0xCB9]
	0x039C494C LDR X0, [X19]
	0x039C4950 LDR W8, [X0 + 0xE0]
	0x039C4954 CBNZ W8, 0x39C4960
	0x039C4958 BL 0x1C16DFC
	0x039C495C LDR X0, [X19]
	0x039C4960 LDR X8, [X0 + 0xB8]
	0x039C4964 LDR X8, [X8 + 0x8]
	0x039C4968 CBZ X8, 0x39C497C
	0x039C496C LDR W0, [X8 + 0x164]
	0x039C4970 LDP X20, X19, [X31 + 0x10]
	0x039C4974 LDR X30, [X31], #0x20
	0x039C4978 RET
	0x039C497C BL 0x1C16F20
	0x039C4980 STP X30, X21, [X31 - 0x20]!
	0x039C4984 STP X20, X19, [X31 + 0x10]
	0x039C4988 ADRP X21, 0xA1D000
	0x039C498C ADRP X20, 0x78D000
	0x039C4990 LDRB W8, [X21 + 0xCC5]
	0x039C4994 LDR X20, [X20 + 0xF48]
	0x039C4998 MOV W19, W1
	0x039C499C TBNZ X8, 0x0, 0x39C49B4
	0x039C49A0 ADRP X0, 0x78D000
	0x039C49A4 LDR X0, [X0 + 0xF48]
	0x039C49A8 BL 0x1C16CF4
	0x039C49AC MOVZ W8, 0x1
	0x039C49B0 STRB W8, [X21 + 0xCC5]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xA1E000
	010 Move W8, [X20+3254]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x78F000
	017 Move X0, [X0+1032]
	018 Call 0x1C17CF4
	019 Move X0, 0x78F000
	020 Move X0, [X0+1040]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3254], W8
	024 Move X8, [X19+240]
	025 Compare X8, 0
	026 JumpIfEqual {73}
	027 Move X9, [X19+616]
	028 Compare X9, 0
	029 JumpIfEqual {73}
	030 Move X0, [X19+608]
	031 Compare X0, 0
	032 JumpIfEqual {73}
	033 Move X22, 0x78F000
	034 Move V8, [X8+128]
	035 Move W20, [X9+24]
	036 Move X22, [X22+1032]
	037 Move S9, -1
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W21, TEMP
	041 Move W8, [X0+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X2, [X22]
	044 Move W1, W20
	045 Call 0x2B41178, X0, X1
	046 Move X8, [X0]
	047 Compare X8, 0
	048 JumpIfEqual {73}
	049 Move V0, [X8+36]
	050 NotImplemented "Instruction FABD not yet implemented."
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X0, [X19+608]
	053 Compare X0, 0
	054 JumpIfEqual {73}
	055 Move X2, [X22]
	056 Move W1, W20
	057 Call 0x2B41178, X0, X1
	058 Move X0, [X0]
	059 Compare X0, 0
	060 JumpIfEqual {73}
	061 Move X1, X31
	062 Call BlendingCellInfo.ShouldReupload, X0
	063 Move V9, V10
	064 Move W21, W20
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {74}
	069 Move X0, [X19+608]
	070 Add W20, W20, 1
	071 Compare X0, 0
	072 JumpIfNotEqual {41}
	073 Call 0x1C17F20
	074 Move W21, W20
	075 Move W0, W21
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+24]
	081 Move D9, [X31+8]
	082 Move D8, [X31+16]
	083 Move V10, [X31+64]
	084 Return X0

Method: System.Void UpdateBlendingCellStreaming(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x039C437C LDP S3, S4, [X19 + 0x24]
	0x039C4380 LDR V5, [X19 + 0x2C]
	0x039C4384 STP S0, S1, [X19 + 0x18]
	0x039C4388 STR S2, [X19 + 0x20]
	0x039C438C MOV X0, X20
	0x039C4390 MOV V0.16B, V3.16B
	0x039C4394 MOV V1.16B, V4.16B
	0x039C4398 MOV V2.16B, V5.16B
	0x039C439C MOV X1, X31
	0x039C43A0 BL 0x3C282D0
	0x039C43A4 STP S0, S1, [X19 + 0x24]
	0x039C43A8 STR S2, [X19 + 0x2C]
	0x039C43AC LDP X20, X19, [X31 + 0x10]
	0x039C43B0 LDR X30, [X31], #0x20
	0x039C43B4 RET
	0x039C43B8 SUB X31, X31, 0x70
	0x039C43BC STR X30, [X31 + 0x40]
	0x039C43C0 STP X22, X21, [X31 + 0x50]
	0x039C43C4 STP X20, X19, [X31 + 0x60]
	0x039C43C8 ADRP X20, 0xA1D000
	0x039C43CC ADRP X21, 0x72F000
	0x039C43D0 ADRP X22, 0x72F000
	0x039C43D4 LDRB W8, [X20 + 0xCC0]
	0x039C43D8 LDR X21, [X21 + 0x9D0]
	0x039C43DC LDR X22, [X22 + 0x5A0]
	0x039C43E0 MOV X19, X0
	0x039C43E4 TBNZ X8, 0x0, 0x39C4420
	0x039C43E8 ADRP X0, 0x72F000
	0x039C43EC LDR X0, [X0 + 0x9D0]
	0x039C43F0 BL 0x1C16CF4
	0x039C43F4 ADRP X0, 0x72F000
	0x039C43F8 LDR X0, [X0 + 0xA90]
	0x039C43FC BL 0x1C16CF4
	0x039C4400 ADRP X0, 0x72F000
	0x039C4404 LDR X0, [X0 + 0x5A0]
	0x039C4408 BL 0x1C16CF4
	0x039C440C ADRP X0, 0x78E000
	0x039C4410 LDR X0, [X0 + 0x9C8]
	0x039C4414 BL 0x1C16CF4
	0x039C4418 MOVZ W8, 0x1
	0x039C441C STRB W8, [X20 + 0xCC0]
	0x039C4420 LDR X0, [X21]
	0x039C4424 MOVZ W1, 0x5
	0x039C4428 BL 0x1C16D6C
	0x039C442C MOV X20, X0
	0x039C4430 LDR W8, [X19 + 0x8]
	0x039C4434 LDR X9, [X19]
	0x039C4438 LDR X0, [X22]
	0x039C443C ADD X1, X31, 0x30
	0x039C4440 STR W8, [X31 + 0x38]
	0x039C4444 STR X9, [X31 + 0x30]
	0x039C4448 BL 0x1C16E04
	0x039C444C CBZ X20, 0x39C45D4
	0x039C4450 MOV X21, X0
	0x039C4454 CBZ X0, 0x39C446C
	0x039C4458 LDR X8, [X20]
	0x039C445C MOV X0, X21
	0x039C4460 LDR X1, [X8 + 0x40]
	0x039C4464 BL 0x1C16E00
	0x039C4468 CBZ X0, 0x39C45C8
	0x039C446C LDR W8, [X20 + 0x18]
	0x039C4470 CBZ W8, 0x39C45C4
	0x039C4474 STR X21, [X20 + 0x20]
	0x039C4478 LDR W8, [X19 + 0x14]
	0x039C447C LDUR X9, [X19 + 0xC]
	0x039C4480 LDR X0, [X22]
	0x039C4484 ADD X1, X31, 0x20
	0x039C4488 STR W8, [X31 + 0x28]
	0x039C448C STR X9, [X31 + 0x20]
	0x039C4490 BL 0x1C16E04
	0x039C4494 MOV X21, X0
	0x039C4498 CBZ X0, 0x39C44B0
	0x039C449C LDR X8, [X20]
	0x039C44A0 MOV X0, X21
	0x039C44A4 LDR X1, [X8 + 0x40]
	0x039C44A8 BL 0x1C16E00
	0x039C44AC CBZ X0, 0x39C45C8
	0x039C44B0 LDR W8, [X20 + 0x18]
	0x039C44B4 CMP W8, 0x1
	0x039C44B8 B.LS 0x39C45C4
	0x039C44BC STR X21, [X20 + 0x28]
	0x039C44C0 LDR W8, [X19 + 0x20]
	0x039C44C4 LDR X9, [X19 + 0x18]
	0x039C44C8 LDR X0, [X22]
	0x039C44CC ADD X1, X31, 0x10
	0x039C44D0 STR W8, [X31 + 0x18]
	0x039C44D4 STR X9, [X31 + 0x10]
	0x039C44D8 BL 0x1C16E04
	0x039C44DC MOV X21, X0
	0x039C44E0 CBZ X0, 0x39C44F8
	0x039C44E4 LDR X8, [X20]
	0x039C44E8 MOV X0, X21
	0x039C44EC LDR X1, [X8 + 0x40]
	0x039C44F0 BL 0x1C16E00
	0x039C44F4 CBZ X0, 0x39C45C8
	0x039C44F8 LDR W8, [X20 + 0x18]
	0x039C44FC CMP W8, 0x2
	0x039C4500 B.LS 0x39C45C4
	0x039C4504 STR X21, [X20 + 0x30]
	0x039C4508 LDR W8, [X19 + 0x2C]
	0x039C450C LDUR X9, [X19 + 0x24]
	0x039C4510 LDR X0, [X22]
	0x039C4514 ADD X1, X31, 0x0
	0x039C4518 STR W8, [X31 + 0x8]
	0x039C451C STR X9, [X31]
	0x039C4520 BL 0x1C16E04
	0x039C4524 MOV X21, X0
	0x039C4528 CBZ X0, 0x39C4540
	0x039C452C LDR X8, [X20]
	0x039C4530 MOV X0, X21
	0x039C4534 LDR X1, [X8 + 0x40]
	0x039C4538 BL 0x1C16E00
	0x039C453C CBZ X0, 0x39C45C8
	0x039C4540 LDR W8, [X20 + 0x18]
	0x039C4544 CMP W8, 0x3
	0x039C4548 B.LS 0x39C45C4
	0x039C454C ADRP X8, 0x72F000
	0x039C4550 LDR X8, [X8 + 0xA90]
	0x039C4554 STR X21, [X20 + 0x38]
	0x039C4558 LDR V0, [X19 + 0x30]
	0x039C455C ADD X1, X31, 0x4C
	0x039C4560 LDR X0, [X8]
	0x039C4564 STR S0, [X31 + 0x4C]
	0x039C4568 BL 0x1C16E04
	0x039C456C MOV X19, X0
	0x039C4570 CBZ X0, 0x39C4588
	0x039C4574 LDR X8, [X20]
	0x039C4578 MOV X0, X19
	0x039C457C LDR X1, [X8 + 0x40]
	0x039C4580 BL 0x1C16E00
	0x039C4584 CBZ X0, 0x39C45C8
	0x039C4588 LDR W8, [X20 + 0x18]
	0x039C458C CMP W8, 0x4
	0x039C4590 B.LS 0x39C45C4
	0x039C4594 ADRP X8, 0x78E000
	0x039C4598 LDR X8, [X8 + 0x9C8]
	0x039C459C STR X19, [X20 + 0x40]
	0x039C45A0 MOV X1, X20
	0x039C45A4 MOV X2, X31
	0x039C45A8 LDR X0, [X8]
	0x039C45AC BL 0x3227C5C
	0x039C45B0 LDP X20, X19, [X31 + 0x60]
	0x039C45B4 LDP X22, X21, [X31 + 0x50]
	0x039C45B8 LDR X30, [X31 + 0x40]
	0x039C45BC ADD X31, X31, 0x70
	0x039C45C0 RET
	0x039C45C4 BL 0x1C16F28
	0x039C45C8 BL 0x1C16F44
	0x039C45CC MOV X1, X31
	0x039C45D0 BL 0x1C16DEC
	0x039C45D4 BL 0x1C16F20
	0x039C45D8 LDR V0, [X0]
	0x039C45DC LDR V1, [X1]
	0x039C45E0 LDUR V2, [X0 + 0x4]
	0x039C45E4 LDUR V3, [X1 + 0x4]
	0x039C45E8 ADRP X8, 0xFFFFFFFFFD125000
	0x039C45EC FSUB S1, S0, S1
	0x039C45F0 LDR V0, [X8 + 0xF20]
	0x039C45F4 FSUB V2.2S, V2.2S, V3.2S
	0x039C45F8 FMUL S1, S1, S1
	0x00000000 INVALID
	0x039C4600 FADD S1, S1, S2
	0x039C4604 MOV S2, V2.S[1]
	0x039C4608 FADD S1, S2, S1
	0x039C460C FCMP S1, S0
	0x039C4610 B.PL 0x39C46D4
	0x039C4614 LDR V1, [X0 + 0xC]
	0x039C4618 LDR V2, [X0 + 0x10]
	0x039C461C LDR V3, [X1 + 0xC]
	0x039C4620 LDR V4, [X1 + 0x10]
	0x039C4624 FSUB S1, S1, S3
	0x039C4628 FSUB V2.2S, V2.2S, V4.2S
	0x039C462C FMUL S1, S1, S1
	0x00000000 INVALID
	0x039C4634 FADD S1, S1, S2
	0x039C4638 MOV S2, V2.S[1]
	0x039C463C FADD S1, S2, S1
	0x039C4640 FCMP S1, S0
	0x039C4644 B.PL 0x39C46D4
	0x039C4648 LDR V1, [X0 + 0x18]
	0x039C464C LDUR V2, [X0 + 0x1C]
	0x039C4650 LDR V3, [X1 + 0x18]
	0x039C4654 LDUR V4, [X1 + 0x1C]
	0x039C4658 FSUB S1, S1, S3
	0x039C465C FSUB V2.2S, V2.2S, V4.2S
	0x039C4660 FMUL S1, S1, S1
	0x00000000 INVALID
	0x039C4668 FADD S1, S1, S2
	0x039C466C MOV S2, V2.S[1]
	0x039C4670 FADD S1, S2, S1
	0x039C4674 FCMP S1, S0
	0x039C4678 B.PL 0x39C46D4
	0x039C467C LDR V1, [X0 + 0x24]
	0x039C4680 LDR V2, [X0 + 0x28]
	0x039C4684 LDR V3, [X1 + 0x24]
	0x039C4688 LDR V4, [X1 + 0x28]
	0x039C468C FSUB S1, S1, S3
	0x039C4690 FSUB V2.2S, V2.2S, V4.2S
	0x039C4694 FMUL S1, S1, S1
	0x00000000 INVALID
	0x039C469C FADD S1, S1, S2
	0x039C46A0 MOV S2, V2.S[1]
	0x039C46A4 FADD S1, S2, S1
	0x039C46A8 FCMP S1, S0
	0x039C46AC B.PL 0x39C46D4
	0x039C46B0 LDR V0, [X0 + 0x34]
	0x039C46B4 LDR V1, [X1 + 0x34]
	0x039C46B8 FCMP S0, S1
	0x039C46BC B.NE 0x39C46D4
	0x039C46C0 LDR V0, [X0 + 0x30]
	0x039C46C4 LDR V1, [X1 + 0x30]
	0x039C46C8 FCMP S0, S1
	0x039C46CC CSET W0, EQ
	0x039C46D0 RET
	0x039C46D4 MOV W0, W31
	0x039C46D8 RET
	0x039C46DC MOV X1, X31
	0x039C46E0 B 0x33BDD8C
	0x039C46E4 STR X30, [X31 - 0x20]!
	0x039C46E8 STP X20, X19, [X31 + 0x10]
	0x039C46EC ADRP X19, 0xA1D000
	0x039C46F0 ADRP X20, 0x78E000
	0x039C46F4 LDRB W8, [X19 + 0xCC1]
	0x039C46F8 LDR X20, [X20 + 0x518]
	0x039C46FC TBNZ X8, 0x0, 0x39C4714
	0x039C4700 ADRP X0, 0x78E000
	0x039C4704 LDR X0, [X0 + 0x518]
	0x039C4708 BL 0x1C16CF4
	0x039C470C MOVZ W8, 0x1
	0x039C4710 STRB W8, [X19 + 0xCC1]
	0x039C4714 LDR X0, [X20]
	0x039C4718 BL 0x1C16F10
	0x039C471C MOV X1, X31
	0x039C4720 MOV X19, X0
	0x039C4724 BL 0x33BDD8C
	0x039C4728 LDR X8, [X20]
	0x039C472C LDR X8, [X8 + 0xB8]
	0x039C4730 STR X19, [X8]
	0x039C4734 LDP X20, X19, [X31 + 0x10]
	0x039C4738 LDR X30, [X31], #0x20
	0x039C473C RET
	0x039C4740 MOV X1, X31
	0x039C4744 B 0x33BDD8C
	0x039C4748 CBZ X1, 0x39C4754
	0x039C474C MOV X0, X1
	0x039C4750 B 0x39C3BA8
	0x039C4754 STR X30, [X31 - 0x10]!
	0x039C4758 BL 0x1C16F20
	0x039C475C CBZ X1, 0x39C4768
	0x039C4760 MOV X0, X1
	0x039C4764 B 0x39C3CDC
	0x039C4768 STR X30, [X31 - 0x10]!
	0x039C476C BL 0x1C16F20
	0x039C4770 FMOV S0, W31
	0x039C4774 RET
	0x039C4778 ADRP X8, 0xFFFFFFFFFD126000
	0x039C477C LDR V0, [X8 + 0x200]
	0x039C4780 RET
	0x039C4784 FMOV S0, 10
	0x039C4788 RET
	0x039C478C MOV W0, W31
	0x039C4790 RET
	0x039C4794 STR X30, [X31 - 0x20]!
	0x039C4798 STP X20, X19, [X31 + 0x10]
	0x039C479C ADRP X20, 0xA1D000
	0x039C47A0 ADRP X19, 0x78D000
	0x039C47A4 LDRB W8, [X20 + 0xCC2]
	0x039C47A8 LDR X19, [X19 + 0xF48]
	0x039C47AC TBNZ X8, 0x0, 0x39C47C4
	0x039C47B0 ADRP X0, 0x78D000
	0x039C47B4 LDR X0, [X0 + 0xF48]
	0x039C47B8 BL 0x1C16CF4
	0x039C47BC MOVZ W8, 0x1
	0x039C47C0 STRB W8, [X20 + 0xCC2]
	0x039C47C4 LDR X0, [X19]
	0x039C47C8 LDR W8, [X0 + 0xE0]
	0x039C47CC CBNZ W8, 0x39C47D4
	0x039C47D0 BL 0x1C16DFC
	0x039C47D4 ADRP X20, 0xA1D000
	0x039C47D8 LDRB W8, [X20 + 0xCB9]
	0x039C47DC CBNZ W8, 0x39C47F4
	0x039C47E0 ADRP X0, 0x78D000
	0x039C47E4 LDR X0, [X0 + 0xF48]
	0x039C47E8 BL 0x1C16CF4
	0x039C47EC MOVZ W8, 0x1
	0x039C47F0 STRB W8, [X20 + 0xCB9]
	0x039C47F4 LDR X0, [X19]
	0x039C47F8 LDR W8, [X0 + 0xE0]
	0x039C47FC CBNZ W8, 0x39C4808
	0x039C4800 BL 0x1C16DFC
	0x039C4804 LDR X0, [X19]
	0x039C4808 LDR X8, [X0 + 0xB8]
	0x039C480C LDR X8, [X8 + 0x8]
	0x039C4810 CBZ X8, 0x39C4828
	0x039C4814 LDR W8, [X8 + 0x34]
	0x039C4818 LDP X20, X19, [X31 + 0x10]
	0x039C481C SUB W0, W8, 0x1
	0x039C4820 LDR X30, [X31], #0x20
	0x039C4824 RET
	0x039C4828 BL 0x1C16F20
	0x039C482C MOV W0, W31
	0x039C4830 RET
	0x039C4834 STR X30, [X31 - 0x20]!
	0x039C4838 STP X20, X19, [X31 + 0x10]
	0x039C483C ADRP X20, 0xA1D000
	0x039C4840 ADRP X19, 0x78D000
	0x039C4844 LDRB W8, [X20 + 0xCC3]
	0x039C4848 LDR X19, [X19 + 0xF48]
	0x039C484C TBNZ X8, 0x0, 0x39C4864
	0x039C4850 ADRP X0, 0x78D000
	0x039C4854 LDR X0, [X0 + 0xF48]
	0x039C4858 BL 0x1C16CF4
	0x039C485C MOVZ W8, 0x1
	0x039C4860 STRB W8, [X20 + 0xCC3]
	0x039C4864 LDR X0, [X19]
	0x039C4868 LDR W8, [X0 + 0xE0]
	0x039C486C CBNZ W8, 0x39C4874
	0x039C4870 BL 0x1C16DFC
	0x039C4874 ADRP X20, 0xA1D000
	0x039C4878 LDRB W8, [X20 + 0xCB9]
	0x039C487C CBNZ W8, 0x39C4894
	0x039C4880 ADRP X0, 0x78D000
	0x039C4884 LDR X0, [X0 + 0xF48]
	0x039C4888 BL 0x1C16CF4
	0x039C488C MOVZ W8, 0x1
	0x039C4890 STRB W8, [X20 + 0xCB9]
	0x039C4894 LDR X0, [X19]
	0x039C4898 LDR W8, [X0 + 0xE0]
	0x039C489C CBNZ W8, 0x39C48A8
	0x039C48A0 BL 0x1C16DFC
	0x039C48A4 LDR X0, [X19]
	0x039C48A8 LDR X8, [X0 + 0xB8]
	0x039C48AC LDR X8, [X8 + 0x8]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0xA1E000
	015 Move W8, [X21+3255]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x78F000
	023 Move X0, [X0+2480]
	024 Call 0x1C17CF4
	025 Move X0, 0x78F000
	026 Move X0, [X0+1016]
	027 Call 0x1C17CF4
	028 Move X0, 0x78F000
	029 Move X0, [X0+1024]
	030 Call 0x1C17CF4
	031 Move X0, 0x78F000
	032 Move X0, [X0+2488]
	033 Call 0x1C17CF4
	034 Move X0, 0x78F000
	035 Move X0, [X0+1032]
	036 Call 0x1C17CF4
	037 Move X0, 0x78F000
	038 Move X0, [X0+1008]
	039 Call 0x1C17CF4
	040 Move X0, 0x78F000
	041 Move X0, [X0+832]
	042 Call 0x1C17CF4
	043 Move X0, 0x78F000
	044 Move X0, [X0+1040]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+3255], W8
	048 Move W8, [X19+644]
	049 Compare W8, 0
	050 JumpIfEqual {377}
	051 Move X0, [X19+568]
	052 Compare X0, 0
	053 JumpIfEqual {391}
	054 Move W8, [X0+24]
	055 Compare W8, 0
	056 JumpIfEqual {66}
	057 Move X9, 0x78F000
	058 Move X9, [X9+1008]
	059 Subtract W1, W8, 1
	060 Move X2, [X9]
	061 Call 0x2B41178, X0, X1
	062 Move X8, [X0]
	063 Compare X8, 0
	064 JumpIfEqual {391}
	065 Move V8, [X8+152]
	066 Move S8, W31
	067 Move X0, [X19+576]
	068 Compare X0, 0
	069 JumpIfEqual {391}
	070 Move W8, [X0+24]
	071 Compare W8, 0
	072 JumpIfEqual {82}
	073 Move X9, 0x78F000
	074 Move X9, [X9+1008]
	075 Subtract W1, W8, 1
	076 Move X2, [X9]
	077 Call 0x2B41178, X0, X1
	078 Move X8, [X0]
	079 Compare X8, 0
	080 JumpIfEqual {391}
	081 Move V0, [X8+152]
	082 Move S0, W31
	083 Move X1, [X19+608]
	084 Move X21, 0x78F000
	085 Move X21, [X21+2480]
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction FCSEL not yet implemented."
	088 Move X0, X19
	089 Move V0, V8
	090 Call ProbeReferenceVolume.ComputeStreamingScoreForBlending, X0, X1, V0
	091 Move X1, [X19+600]
	092 Move X0, X19
	093 Move V0, V8
	094 Call ProbeReferenceVolume.ComputeStreamingScoreForBlending, X0, X1, V0
	095 Move X0, [X19+608]
	096 Move X1, [X21]
	097 Call 0x21B0D8C, X0
	098 Move X0, [X19+600]
	099 Move X1, [X21]
	100 Call 0x21B0D8C, X0
	101 Move X8, [X19+608]
	102 Compare X8, 0
	103 JumpIfEqual {391}
	104 Move X24, 0x78F000
	105 Move X24, [X24+1032]
	106 Move W9, [X19+356]
	107 Move W8, [X8+24]
	108 Move X27, 0x78F000
	109 Move X26, 0x78F000
	110 Move X25, 0x78F000
	111 Move X27, [X27+2488]
	112 Move X26, [X26+1016]
	113 Move X25, [X25+1024]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Move X8, [X19+616]
	117 Compare X8, 0
	118 JumpIfEqual {391}
	119 Move W1, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, [X19+608]
	122 Compare X0, 0
	123 JumpIfEqual {391}
	124 Move X2, [X24]
	125 Call 0x2B41178, X0, X1
	126 Move X1, [X0]
	127 Move X2, [X19+616]
	128 Move X0, X19
	129 Call ProbeReferenceVolume.TryLoadBlendingCell, X0, X1, X2
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {116}
	134 Move X8, [X19+616]
	135 Compare X8, 0
	136 JumpIfEqual {391}
	137 Move W9, [X8+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, [X19+600]
	140 Compare X0, 0
	141 JumpIfEqual {391}
	142 Move W9, [X0+24]
	143 Move V0, [X19+364]
	144 Move S1, 1
	145 Move W10, 0x7F800000
	146 NotImplemented "Instruction SCVTF not yet implemented."
	147 Subtract S0, S1, S0
	148 Move S2, W10
	149 Multiply S0, S0, S3
	150 NotImplemented "Instruction FCVTZS not yet implemented."
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 Move W11, 0x80000000
	153 NotImplemented "Instruction CSEL not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X2, [X24]
	156 Call 0x2B41178, X0, X1
	157 Move X8, [X19+616]
	158 Compare X8, 0
	159 JumpIfEqual {391}
	160 Move X29, [X0]
	161 Move X29, X31
	162 Move TEMP, 0
	163 Not TEMP
	164 Move W21, TEMP
	165 Move W8, [X8+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, [X19+600]
	168 Compare X0, 0
	169 JumpIfEqual {391}
	170 Move X8, [X19+624]
	171 Compare X8, 0
	172 JumpIfEqual {391}
	173 Move W9, [X0+24]
	174 Move W8, [X8+24]
	175 Subtract W8, W9, W8
	176 Move X2, [X24]
	177 Subtract W1, W8, 1
	178 Call 0x2B41178, X0, X1
	179 Move X9, [X19+616]
	180 Compare X9, 0
	181 JumpIfEqual {391}
	182 Move X8, X0
	183 Move X0, [X19+608]
	184 Compare X0, 0
	185 JumpIfEqual {391}
	186 Move W1, [X9+24]
	187 Move X2, [X24]
	188 Move X23, [X8]
	189 Call 0x2B41178, X0, X1
	190 Move X22, [X0]
	191 Compare X22, 0
	192 JumpIfEqual {391}
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction CSEL not yet implemented."
	195 Compare X8, 0
	196 JumpIfEqual {391}
	197 Move V0, [X22+32]
	198 Move V1, [X8+32]
	199 NotImplemented "Instruction FCMP not yet implemented."
	200 Compare X29, 0
	201 JumpIfEqual {280}
	202 Add W31, W21, 1
	203 Move X0, X19
	204 Call ProbeReferenceVolume.FindWorstBlendingCellToBeLoaded, X0
	205 Move W21, W0
	206 Move X0, [X19+608]
	207 Compare X0, 0
	208 JumpIfEqual {391}
	209 Move X2, [X24]
	210 Move W1, W21
	211 Call 0x2B41178, X0, X1
	212 Move X22, [X0]
	213 Compare X22, 0
	214 JumpIfEqual {391}
	215 Move X0, X22
	216 Move X1, X31
	217 Call BlendingCellInfo.IsUpToDate, X0
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {280}
	222 Move X2, [X19+624]
	223 Move X0, X19
	224 Move X1, X23
	225 Call ProbeReferenceVolume.UnloadBlendingCell, X0, X1, X2
	226 Move X2, [X19+616]
	227 Move X0, X19
	228 Move X1, X22
	229 Call ProbeReferenceVolume.TryLoadBlendingCell, X0, X1, X2
	230 Add W31, W21, 1
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {271}
	235 Move X0, [X19+608]
	236 Compare X0, 0
	237 JumpIfEqual {391}
	238 Move X2, [X24]
	239 Move W1, W21
	240 Call 0x2B41178, X0, X1
	241 Move X8, [X19+616]
	242 Compare X8, 0
	243 JumpIfEqual {391}
	244 Move X23, X0
	245 Move X0, [X19+608]
	246 Compare X0, 0
	247 JumpIfEqual {391}
	248 Move W8, [X8+24]
	249 Move X2, [X24]
	250 Subtract W1, W8, 1
	251 Call 0x2B41178, X0, X1
	252 Move X8, [X0]
	253 Move [X23], X8
	254 Move X8, [X19+616]
	255 Compare X8, 0
	256 JumpIfEqual {391}
	257 Move X0, [X19+608]
	258 Compare X0, 0
	259 JumpIfEqual {391}
	260 Move W8, [X8+24]
	261 Move X2, [X24]
	262 Subtract W1, W8, 1
	263 Call 0x2B41178, X0, X1
	264 Move [X0], X22
	265 Move X8, [X19+608]
	266 Compare X8, 0
	267 JumpIfEqual {391}
	268 Move W8, [X8+24]
	269 Add W21, W21, 1
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X8, [X19+616]
	272 Compare X8, 0
	273 JumpIfNotEqual {165}
	274 Move X8, [X19+616]
	275 Compare X8, 0
	276 JumpIfEqual {391}
	277 Move W21, [X8+24]
	278 Compare X8, 0
	279 JumpIfNotEqual {165}
	280 Move X0, [X19+600]
	281 Compare X0, 0
	282 JumpIfEqual {391}
	283 Move X8, [X19+624]
	284 Compare X8, 0
	285 JumpIfEqual {391}
	286 Move W9, [X0+24]
	287 Move W2, [X8+24]
	288 Move X3, [X27]
	289 Subtract W1, W9, W2
	290 Call 0x2B40E6C, X0, X1, X2
	291 Move X8, [X19+616]
	292 Compare X8, 0
	293 JumpIfEqual {391}
	294 Move X0, [X19+608]
	295 Compare X0, 0
	296 JumpIfEqual {391}
	297 Move W2, [X8+24]
	298 Move X3, [X27]
	299 Move W1, W31
	300 Call 0x2B40E6C, X0, X1, X2
	301 Move X0, [X19+600]
	302 Compare X0, 0
	303 JumpIfEqual {391}
	304 Move X1, [X19+616]
	305 Move X2, [X26]
	306 Call 0x2B40CD0, X0, X1
	307 Move X0, [X19+616]
	308 Compare X0, 0
	309 JumpIfEqual {391}
	310 Move X1, [X25]
	311 Call 0x2B40BDC, X0
	312 Move X0, [X19+608]
	313 Compare X0, 0
	314 JumpIfEqual {391}
	315 Move X1, [X19+624]
	316 Move X2, [X26]
	317 Call 0x2B40CD0, X0, X1
	318 Move X0, [X19+624]
	319 Compare X0, 0
	320 JumpIfEqual {391}
	321 Move X1, [X25]
	322 Call 0x2B40BDC, X0
	323 Move X0, [X19+600]
	324 Compare X0, 0
	325 JumpIfEqual {391}
	326 Move W8, [X0+24]
	327 Compare W8, 0
	328 JumpIfEqual {370}
	329 Move X9, [X19+240]
	330 Compare X9, 0
	331 JumpIfEqual {391}
	332 Move W10, [X19+360]
	333 Move V8, [X9+128]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 NotImplemented "Instruction CSEL not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move W21, W31
	338 Move X2, [X24]
	339 Move W1, W21
	340 Call 0x2B41178, X0, X1
	341 Move X8, [X0]
	342 Compare X8, 0
	343 JumpIfEqual {391}
	344 Move [X8+36], S8
	345 Move X0, [X19+600]
	346 Compare X0, 0
	347 JumpIfEqual {391}
	348 Move X2, [X24]
	349 Move X22, [X19+80]
	350 Move W1, W21
	351 Call 0x2B41178, X0, X1
	352 Compare X22, 0
	353 JumpIfEqual {391}
	354 Move X2, [X19+56]
	355 Move X1, [X0]
	356 Move X0, X22
	357 Call ProbeBrickBlendingPool.BlendChunks, X0, X1, X2
	358 Add W21, W21, 1
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X0, [X19+600]
	361 Compare X0, 0
	362 JumpIfNotEqual {338}
	363 Move X0, [X19+80]
	364 Compare X0, 0
	365 JumpIfEqual {391}
	366 Move X2, [X19+56]
	367 Move X1, X20
	368 Move V0, V8
	369 Call ProbeBrickBlendingPool.PerformBlending, X0, X1, V0, X2
	370 Move X8, [X19+608]
	371 Compare X8, 0
	372 JumpIfEqual {391}
	373 Move W8, [X8+24]
	374 Compare W8, 0
	375 JumpIfNotEqual {377}
	376 Move [X19+644], W31
	377 Move X20, [X31+96]
	378 Move X19, [X31+104]
	379 Move X22, [X31+80]
	380 Move X21, [X31+88]
	381 Move X24, [X31+64]
	382 Move X23, [X31+72]
	383 Move X26, [X31+48]
	384 Move X25, [X31+56]
	385 Move X28, [X31+32]
	386 Move X27, [X31+40]
	387 Move X29, [X31+16]
	388 Move X30, [X31+24]
	389 Move V8, [X31+112]
	390 Return 
	391 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x039C49B4 LDR X0, [X20]
	0x039C49B8 LDR W8, [X0 + 0xE0]
	0x039C49BC CBNZ W8, 0x39C49C4
	0x039C49C0 BL 0x1C16DFC
	0x039C49C4 ADRP X21, 0xA1D000
	0x039C49C8 LDRB W8, [X21 + 0xCB9]
	0x039C49CC CBNZ W8, 0x39C49E4
	0x039C49D0 ADRP X0, 0x78D000
	0x039C49D4 LDR X0, [X0 + 0xF48]
	0x039C49D8 BL 0x1C16CF4
	0x039C49DC MOVZ W8, 0x1
	0x039C49E0 STRB W8, [X21 + 0xCB9]
	0x039C49E4 LDR X0, [X20]
	0x039C49E8 LDR W8, [X0 + 0xE0]
	0x039C49EC CBNZ W8, 0x39C49F8
	0x039C49F0 BL 0x1C16DFC
	0x039C49F4 LDR X0, [X20]
	0x039C49F8 LDR X8, [X0 + 0xB8]
	0x039C49FC LDR X0, [X8 + 0x8]
	0x039C4A00 CBZ X0, 0x39C4A18
	0x039C4A04 MOV W1, W19
	0x039C4A08 LDP X20, X19, [X31 + 0x10]
	0x039C4A0C MOV X2, X31
	0x039C4A10 LDP X30, X21, [X31], #0x20
	0x039C4A14 B 0x39C2908
	0x039C4A18 BL 0x1C16F20
	0x039C4A1C MOV W0, W31
	0x039C4A20 RET
	0x039C4A24 STR X30, [X31 - 0x20]!
	0x039C4A28 STP X20, X19, [X31 + 0x10]
	0x039C4A2C ADRP X20, 0xA1D000
	0x039C4A30 ADRP X19, 0x78D000
	0x039C4A34 LDRB W8, [X20 + 0xCC6]
	0x039C4A38 LDR X19, [X19 + 0xF48]
	0x039C4A3C TBNZ X8, 0x0, 0x39C4A54
	0x039C4A40 ADRP X0, 0x78D000
	0x039C4A44 LDR X0, [X0 + 0xF48]
	0x039C4A48 BL 0x1C16CF4
	0x039C4A4C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xA1E000
	007 Move X19, 0x758000
	008 Move X21, 0x78E000
	009 Move X20, 0x78F000
	010 Move W8, [X22+3256]
	011 Move X19, [X19+104]
	012 Move X21, [X21+3912]
	013 Move X20, [X20+2496]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x78E000
	019 Move X0, [X0+3912]
	020 Call 0x1C17CF4
	021 Move X0, 0x78F000
	022 Move X0, [X0+2496]
	023 Call 0x1C17CF4
	024 Move X0, 0x758000
	025 Move X0, [X0+104]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3256], W8
	029 Move X8, [X21]
	030 Move X9, [X19]
	031 Move X8, [X8+184]
	032 Move [X8], X9
	033 Move X0, [X21]
	034 Call 0x1C17F10
	035 Move X19, X0
	036 Call ProbeReferenceVolume..ctor, X0
	037 Move X8, [X21]
	038 Move X9, [X20]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X8, [X8+184]
	042 Move [X8+8], X19
	043 Move [X8+16], X9
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Return 

