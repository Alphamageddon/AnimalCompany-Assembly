Type: UnityEngine.Rendering.DocumentationInfo

Method: System.String get_version()

Disassembly:
	0x039B4B74 CMP W29, W26
	0x039B4B78 B.LT 0x39B4B38
	0x039B4B7C LDR W8, [X31 + 0xC]
	0x039B4B80 ADD W20, W20, W23
	0x039B4B84 CMP W20, W8
	0x039B4B88 B.LT 0x39B4B24
	0x039B4B8C LDP X20, X19, [X31 + 0x80]
	0x039B4B90 LDP X22, X21, [X31 + 0x70]
	0x039B4B94 LDP X24, X23, [X31 + 0x60]
	0x039B4B98 LDP X26, X25, [X31 + 0x50]
	0x039B4B9C LDP X28, X27, [X31 + 0x40]
	0x039B4BA0 LDP X29, X30, [X31 + 0x30]
	0x039B4BA4 LDP D9, D8, [X31 + 0x20]
	0x039B4BA8 LDR V10, [X31 + 0x10]
	0x039B4BAC ADD X31, X31, 0x90
	0x039B4BB0 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xA2E000
	005 Move X20, 0x79E000
	006 Move W8, [X19+3155]
	007 Move X20, [X20+3896]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x79E000
	013 Move X0, [X0+3896]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3155], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.String GetPageLink(System.String packageName, System.String pageName)

Disassembly:
	0x039B4BB4 BL 0x1C16F20
	0x039B4BB8 STR X30, [X31 - 0x10]!
	0x039B4BBC SCVTF S1, W0
	0x039B4BC0 FMOV S0, 3
	0x039B4BC4 BL 0x3EB1B50
	0x039B4BC8 MOVZ W8, 0x7F800000
	0x039B4BCC FMOV S1, W8
	0x039B4BD0 FCVTZS W9, S0
	0x039B4BD4 FCMP S0, S1
	0x039B4BD8 MOVZ W8, 0x80000000
	0x039B4BDC CSEL W0, W8, W9, EQ
	0x039B4BE0 LDR X30, [X31], #0x10
	0x039B4BE4 RET
	0x039B4BE8 SUB X31, X31, 0xB0
	0x039B4BEC STR X30, [X31 + 0x80]
	0x039B4BF0 STP X22, X21, [X31 + 0x90]
	0x039B4BF4 STP X20, X19, [X31 + 0xA0]
	0x039B4BF8 MOV X19, X3
	0x039B4BFC MOV X20, X2
	0x039B4C00 MOV X21, X1
	0x039B4C04 MOV X22, X0
	0x039B4C08 STR W31, [X31 + 0x78]
	0x039B4C0C STR X31, [X31 + 0x70]
	0x039B4C10 STR W31, [X31 + 0x68]
	0x039B4C14 STR X31, [X31 + 0x60]
	0x039B4C18 BL 0x39B3DB8
	0x039B4C1C LDP V0, V1, [X19]
	0x039B4C20 LDR V2, [X19 + 0x2]
	0x039B4C24 MOV W3, W0
	0x039B4C28 AND X2, X20, 0x0
	0x039B4C2C ADD X4, X31, 0x70
	0x039B4C30 ADD X5, X31, 0x60
	0x039B4C34 ADD X6, X31, 0x30
	0x039B4C38 MOV X0, X22
	0x039B4C3C MOV X1, X21
	0x039B4C40 STP V0, V1, [X31 + 0x30]
	0x039B4C44 STR V2, [X31 + 0x5]
	0x039B4C48 BL 0x39B4C90
	0x039B4C4C LDR X1, [X31 + 0x70]
	0x039B4C50 LDR W2, [X31 + 0x78]
	0x039B4C54 LDP V1, V0, [X19]
	0x039B4C58 LDR X3, [X31 + 0x60]
	0x039B4C5C LDR V2, [X19 + 0x2]
	0x039B4C60 LDR W4, [X31 + 0x68]
	0x039B4C64 ADD X6, X31, 0x0
	0x039B4C68 MOVN W5, 0x0
	0x039B4C6C MOV X0, X22
	0x039B4C70 STP V1, V0, [X31]
	0x039B4C74 STR V2, [X31 + 0x2]
	0x039B4C78 BL 0x39B4E3C
	0x039B4C7C LDP X20, X19, [X31 + 0xA0]
	0x039B4C80 LDP X22, X21, [X31 + 0x90]
	0x039B4C84 LDR X30, [X31 + 0x80]
	0x039B4C88 ADD X31, X31, 0xB0
	0x039B4C8C RET
	0x039B4C90 SUB X31, X31, 0x80
	0x039B4C94 STP X29, X30, [X31 + 0x20]
	0x039B4C98 STP X28, X27, [X31 + 0x30]
	0x039B4C9C STP X26, X25, [X31 + 0x40]
	0x039B4CA0 STP X24, X23, [X31 + 0x50]
	0x039B4CA4 STP X22, X21, [X31 + 0x60]
	0x039B4CA8 STP X20, X19, [X31 + 0x70]
	0x039B4CAC STP X2, X5, [X31 + 0x10]
	0x039B4CB0 STR X0, [X31]
	0x039B4CB4 ADRP X22, 0xA2D000
	0x039B4CB8 ADRP X21, 0x79D000
	0x039B4CBC LDRB W8, [X22 + 0xC61]
	0x039B4CC0 LDR X21, [X21 + 0xF48]
	0x039B4CC4 MOV X24, X6
	0x039B4CC8 MOV X20, X4
	0x039B4CCC MOV W25, W3
	0x039B4CD0 MOV X19, X1
	0x039B4CD4 TBNZ X8, 0x0, 0x39B4CEC
	0x039B4CD8 ADRP X0, 0x79D000
	0x039B4CDC LDR X0, [X0 + 0xF48]
	0x039B4CE0 BL 0x1C16CF4
	0x039B4CE4 MOVZ W8, 0x1
	0x039B4CE8 STRB W8, [X22 + 0xC61]
	0x039B4CEC LDR X0, [X21]
	0x039B4CF0 UBFM X26, X19, 0x20, 0x3F
	0x039B4CF4 STR X19, [X31 + 0x8]
	0x039B4CF8 LDR W8, [X0 + 0xE0]
	0x039B4CFC CBNZ W8, 0x39B4D04
	0x039B4D00 BL 0x1C16DFC
	0x039B4D04 SCVTF S1, W25
	0x039B4D08 FMOV S0, 3
	0x039B4D0C BL 0x3EB1B50
	0x039B4D10 LDUR X11, [X24 + 0xC]
	0x039B4D14 MOVZ W9, 0x7F800000
	0x039B4D18 LDUR X25, [X24 + 0x24]
	0x039B4D1C LDR W21, [X24 + 0x2C]
	0x039B4D20 LDR W12, [X24 + 0x14]
	0x039B4D24 ADRP X19, 0xA2D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA2E000
	007 Move X22, 0x740000
	008 Move W8, [X19+3156]
	009 Move X22, [X22+2512]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x740000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move X0, 0x740000
	020 Move X0, [X0+2440]
	021 Call 0x1C17CF4
	022 Move X0, 0x79E000
	023 Move X0, [X0+3888]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3156], W8
	027 Move X0, [X22]
	028 Move W1, 4
	029 Call 0x1C17D6C
	030 Compare X0, 0
	031 JumpIfEqual {111}
	032 Move X19, X0
	033 Compare X21, 0
	034 JumpIfEqual {41}
	035 Move X8, [X19]
	036 Move X0, X21
	037 Move X1, [X8+64]
	038 Call 0x1C17E00
	039 Compare X0, 0
	040 JumpIfEqual {108}
	041 Move W8, [X19+24]
	042 Compare W8, 0
	043 JumpIfEqual {107}
	044 Move [X19+32], X21
	045 Move X21, 0xA2E000
	046 Move X22, 0x79E000
	047 Move W8, [X21+3155]
	048 Move X22, [X22+3896]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {58}
	053 Move X0, 0x79E000
	054 Move X0, [X0+3896]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+3155], W8
	058 Move X21, [X22]
	059 Compare X21, 0
	060 JumpIfEqual {67}
	061 Move X8, [X19]
	062 Move X0, X21
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {108}
	067 Move W8, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X19+40], X21
	070 Compare X20, 0
	071 JumpIfEqual {79}
	072 Move X8, [X19]
	073 Move X0, X20
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {108}
	078 Move W8, [X19+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X21, 0x740000
	081 Move X21, [X21+2440]
	082 Move [X19+48], X20
	083 Move X0, [X21]
	084 Compare X0, 0
	085 JumpIfEqual {92}
	086 Move X8, [X19]
	087 Move X1, [X8+64]
	088 Call 0x1C17E00
	089 Compare X0, 0
	090 JumpIfEqual {108}
	091 Move W8, [X19+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, [X21]
	094 Move X9, 0x79E000
	095 Move X9, [X9+3888]
	096 Move X1, X19
	097 Move [X19+56], X8
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X0, [X9]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X2, X31
	104 Move X30, [X31+48]
	105 Call String.Format, X0, X1
	106 Return X0
	107 Call 0x1C17F28
	108 Call 0x1C17F44
	109 Move X1, X31
	110 Call 0x1C17DEC
	111 Call 0x1C17F20

Method: System.String GetPageLink(System.String packageName, System.String pageName, System.String pageHash)

Disassembly:
	0x039B49F0 CBZ W8, 0x39B4A14
	0x039B49F4 MOVZ W8, 0x7F800000
	0x039B49F8 FRINTM S0, S10
	0x039B49FC FMOV S1, W8
	0x039B4A00 FCVTMS W9, S10
	0x039B4A04 FCMP S0, S1
	0x039B4A08 MOVZ W8, 0x80000000
	0x039B4A0C CSEL W24, W8, W9, EQ
	0x039B4A10 B 0x39B4A50
	0x039B4A14 BL 0x1C16DFC
	0x039B4A18 LDRB W8, [X25 + 0xA23]
	0x039B4A1C MOVZ W9, 0x7F800000
	0x039B4A20 FRINTM S0, S10
	0x039B4A24 FMOV S1, W9
	0x039B4A28 FCVTMS W10, S10
	0x039B4A2C FCMP S0, S1
	0x039B4A30 MOVZ W9, 0x80000000
	0x039B4A34 CSEL W24, W9, W10, EQ
	0x039B4A38 CBNZ W8, 0x39B4A50
	0x039B4A3C ADRP X0, 0x73F000
	0x039B4A40 LDR X0, [X0 + 0x5A8]
	0x039B4A44 BL 0x1C16CF4
	0x039B4A48 MOVZ W8, 0x1
	0x039B4A4C STRB W8, [X25 + 0xA23]
	0x039B4A50 LDR X0, [X21]
	0x039B4A54 SCVTF S10, W20
	0x039B4A58 FMUL S9, S8, S9
	0x039B4A5C LDR W8, [X0 + 0xE0]
	0x039B4A60 CBZ W8, 0x39B4A84
	0x039B4A64 MOVZ W8, 0x7F800000
	0x039B4A68 FRINTM S0, S9
	0x039B4A6C FMOV S1, W8
	0x039B4A70 FCVTMS W9, S9
	0x039B4A74 FCMP S0, S1
	0x039B4A78 MOVZ W8, 0x80000000
	0x039B4A7C CSEL W20, W8, W9, EQ
	0x039B4A80 B 0x39B4AC0
	0x039B4A84 BL 0x1C16DFC
	0x039B4A88 LDRB W8, [X25 + 0xA23]
	0x039B4A8C MOVZ W9, 0x7F800000
	0x039B4A90 FRINTM S0, S9
	0x039B4A94 FMOV S1, W9
	0x039B4A98 FCVTMS W10, S9
	0x039B4A9C FCMP S0, S1
	0x039B4AA0 MOVZ W9, 0x80000000
	0x039B4AA4 CSEL W20, W9, W10, EQ
	0x039B4AA8 CBNZ W8, 0x39B4AC0
	0x039B4AAC ADRP X0, 0x73F000
	0x039B4AB0 LDR X0, [X0 + 0x5A8]
	0x039B4AB4 BL 0x1C16CF4
	0x039B4AB8 MOVZ W8, 0x1
	0x039B4ABC STRB W8, [X25 + 0xA23]
	0x039B4AC0 LDR X0, [X21]
	0x039B4AC4 FMUL S8, S8, S10
	0x039B4AC8 LDR W8, [X0 + 0xE0]
	0x039B4ACC CBNZ W8, 0x39B4AD4
	0x039B4AD0 BL 0x1C16DFC
	0x039B4AD4 MOVZ W9, 0x7F800000
	0x039B4AD8 FRINTM S0, S8
	0x039B4ADC FMOV S1, W9
	0x039B4AE0 FCVTMS W8, S8
	0x039B4AE4 MOVZ W10, 0x80000000
	0x039B4AE8 FCMP S0, S1
	0x039B4AEC CSEL W8, W10, W8, EQ
	0x039B4AF0 MUL W21, W24, W23
	0x039B4AF4 MUL W9, W20, W23
	0x039B4AF8 MUL W20, W8, W23
	0x039B4AFC STR X9, [X31 + 0x18]
	0x039B4B00 ADD W8, W20, W22
	0x039B4B04 CMP W20, W8
	0x039B4B08 STR W8, [X31 + 0xC]
	0x039B4B0C B.GE 0x39B4B8C
	0x039B4B10 LDR X8, [X31 + 0x18]
	0x039B4B14 ADRP X28, 0x79E000
	0x039B4B18 LDR X28, [X28 + 0x70]
	0x039B4B1C ADD W27, W21, W22
	0x039B4B20 ADD W26, W8, W22
	0x039B4B24 LDR X8, [X31 + 0x18]
	0x039B4B28 CMP W8, W26
	0x039B4B2C B.GE 0x39B4B7C
	0x039B4B30 LDR X29, [X31 + 0x18]
	0x039B4B34 MOV W22, W20
	0x039B4B38 CMP W21, W27
	0x039B4B3C B.GE 0x39B4B70
	0x039B4B40 CBZ X19, 0x39B4BB4
	0x039B4B44 UBFM X24, X29, 0x20, 0x1F
	0x039B4B48 MOV W25, W21
	0x039B4B4C LDR X3, [X28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xA2E000
	008 Move X23, 0x740000
	009 Move W8, [X20+3157]
	010 Move X23, [X23+2512]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x740000
	019 Move X0, [X0+2512]
	020 Call 0x1C17CF4
	021 Move X0, 0x79E000
	022 Move X0, [X0+3888]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3157], W8
	026 Move X0, [X23]
	027 Move W1, 4
	028 Call 0x1C17D6C
	029 Compare X0, 0
	030 JumpIfEqual {108}
	031 Move X20, X0
	032 Compare X22, 0
	033 JumpIfEqual {40}
	034 Move X8, [X20]
	035 Move X0, X22
	036 Move X1, [X8+64]
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfEqual {105}
	040 Move W8, [X20+24]
	041 Compare W8, 0
	042 JumpIfEqual {104}
	043 Move [X20+32], X22
	044 Move X22, 0xA2E000
	045 Move X23, 0x79E000
	046 Move W8, [X22+3155]
	047 Move X23, [X23+3896]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {57}
	052 Move X0, 0x79E000
	053 Move X0, [X0+3896]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+3155], W8
	057 Move X22, [X23]
	058 Compare X22, 0
	059 JumpIfEqual {66}
	060 Move X8, [X20]
	061 Move X0, X22
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {105}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X20+40], X22
	069 Compare X21, 0
	070 JumpIfEqual {78}
	071 Move X8, [X20]
	072 Move X0, X21
	073 Move X1, [X8+64]
	074 Call 0x1C17E00
	075 Compare X0, 0
	076 JumpIfEqual {105}
	077 Move W8, [X20+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X20+48], X21
	080 Compare X19, 0
	081 JumpIfEqual {89}
	082 Move X8, [X20]
	083 Move X0, X19
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {105}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, 0x79E000
	091 Move X8, [X8+3888]
	092 Move [X20+56], X19
	093 Move X1, X20
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X0, [X8]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X2, X31
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 Call String.Format, X0, X1
	103 Return X0
	104 Call 0x1C17F28
	105 Call 0x1C17F44
	106 Move X1, X31
	107 Call 0x1C17DEC
	108 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x039B4D28 FMOV S1, W9
	0x039B4D2C FCVTZS W8, S0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

