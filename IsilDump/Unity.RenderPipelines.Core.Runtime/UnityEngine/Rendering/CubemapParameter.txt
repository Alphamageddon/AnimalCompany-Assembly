Type: UnityEngine.Rendering.CubemapParameter

Method: System.Void .ctor(UnityEngine.Texture value, System.Boolean overrideState = False)

Disassembly:
	0x039F520C TBNZ X8, 0x0, 0x39F5230
	0x039F5210 ADRP X0, 0x75E000
	0x039F5214 LDR X0, [X0 + 0x7D8]
	0x039F5218 BL 0x1C16CF4
	0x039F521C ADRP X0, 0x75E000
	0x039F5220 LDR X0, [X0 + 0x7D0]
	0x039F5224 BL 0x1C16CF4
	0x039F5228 MOVZ W8, 0x1
	0x039F522C STRB W8, [X21 + 0xEB3]
	0x039F5230 LDR X0, [X22]
	0x039F5234 BL 0x1C16F10
	0x039F5238 LDR X1, [X20]
	0x039F523C MOV X20, X0
	0x039F5240 BL 0x301B7C4
	0x039F5244 MOVZ W8, 0x1
	0x039F5248 STR X20, [X19 + 0x18]
	0x039F524C STRB W8, [X19 + 0x20]
	0x039F5250 MOV X0, X19
	0x039F5254 LDP X20, X19, [X31 + 0x20]
	0x039F5258 LDP X22, X21, [X31 + 0x10]
	0x039F525C MOV X1, X31
	0x039F5260 LDR X30, [X31], #0x30
	0x039F5264 B 0x3C36D2C
	0x039F5268 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9ED000
	008 Move X23, 0x75F000
	009 Move W8, [X22+3745]
	010 Move X23, [X23+2384]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x75F000
	019 Move X0, [X0+2384]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3745], W8
	023 Move X3, [X23]
	024 And W2, W20, 1
	025 Move X0, X21
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call VolumeParameter`1<Object>..ctor, X0, X1, X2
	034 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x039F526C STP X20, X19, [X31 + 0x10]
	0x039F5270 ADRP X19, 0x9EC000
	0x039F5274 ADRP X20, 0x75E000
	0x039F5278 LDRB W8, [X19 + 0xEB4]
	0x039F527C LDR X20, [X20 + 0x9A0]
	0x039F5280 TBNZ X8, 0x0, 0x39F5298
	0x039F5284 ADRP X0, 0x75E000
	0x039F5288 LDR X0, [X0 + 0x9A0]
	0x039F528C BL 0x1C16CF4
	0x039F5290 MOVZ W8, 0x1
	0x039F5294 STRB W8, [X19 + 0xEB4]
	0x039F5298 LDR X0, [X20]
	0x039F529C BL 0x1C16F10
	0x039F52A0 MOV X1, X31
	0x039F52A4 MOV X19, X0
	0x039F52A8 BL 0x33BDD8C
	0x039F52AC LDR X8, [X20]
	0x039F52B0 LDR X8, [X8 + 0xB8]
	0x039F52B4 STR X19, [X8]
	0x039F52B8 LDP X20, X19, [X31 + 0x10]
	0x039F52BC LDR X30, [X31], #0x20
	0x039F52C0 RET
	0x039F52C4 MOV X1, X31
	0x039F52C8 B 0x33BDD8C
	0x039F52CC STP X30, X21, [X31 - 0x20]!
	0x039F52D0 STP X20, X19, [X31 + 0x10]
	0x039F52D4 ADRP X20, 0x9EC000
	0x039F52D8 ADRP X21, 0x6FE000
	0x039F52DC LDRB W8, [X20 + 0xEB5]
	0x039F52E0 LDR X21, [X21 + 0x598]
	0x039F52E4 MOV X19, X1
	0x039F52E8 TBNZ X8, 0x0, 0x39F5300
	0x039F52EC ADRP X0, 0x6FE000
	0x039F52F0 LDR X0, [X0 + 0x598]
	0x039F52F4 BL 0x1C16CF4
	0x039F52F8 MOVZ W8, 0x1
	0x039F52FC STRB W8, [X20 + 0xEB5]
	0x039F5300 LDR X0, [X21]
	0x039F5304 LDR W8, [X0 + 0xE0]
	0x039F5308 CBNZ W8, 0x39F5310
	0x039F530C BL 0x1C16DFC
	0x039F5310 MOV X0, X19
	0x039F5314 LDP X20, X19, [X31 + 0x10]
	0x039F5318 MOV X1, X31
	0x039F531C MOV X2, X31
	0x039F5320 LDP X30, X21, [X31], #0x20
	0x039F5324 B 0x3C3883C
	0x039F5328 SUB X31, X31, 0xA0
	0x039F532C STR X30, [X31 + 0x60]
	0x039F5330 STP X24, X23, [X31 + 0x70]
	0x039F5334 STP X22, X21, [X31 + 0x80]
	0x039F5338 STP X20, X19, [X31 + 0x90]
	0x039F533C ADRP X20, 0x9EC000
	0x039F5340 LDRB W8, [X20 + 0xEB7]
	0x039F5344 MOV X19, X0
	0x039F5348 TBNZ X8, 0x0, 0x39F53A8
	0x039F534C ADRP X0, 0x726000
	0x039F5350 LDR X0, [X0 + 0x8F8]
	0x039F5354 BL 0x1C16CF4
	0x039F5358 ADRP X0, 0x75E000
	0x039F535C LDR X0, [X0 + 0x9D8]
	0x039F5360 BL 0x1C16CF4
	0x039F5364 ADRP X0, 0x75E000
	0x039F5368 LDR X0, [X0 + 0x858]
	0x039F536C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9ED000
	007 Move X22, 0x75F000
	008 Move X21, 0x6FF000
	009 Move W8, [X20+3746]
	010 Move X22, [X22+2392]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x727000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x6FF000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x75F000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3746], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call VolumeParameter`1<Object>.GetHashCode, X0
	031 Move X8, [X19]
	032 Move W20, W0
	033 Move X0, X19
	034 Move X9, [X8+536]
	035 Move X1, [X8+544]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X21]
	038 Move X21, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Inequality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {71}
	052 Move X8, [X19]
	053 Move X20, 0x727000
	054 Move X0, X19
	055 Move X9, [X8+536]
	056 Move X1, [X8+544]
	057 Move X20, [X20+2296]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call CoreUtils.GetTextureHash, X0
	069 Move W8, 23
	070 Multiply W20, W0, W8
	071 Move W0, W20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0

