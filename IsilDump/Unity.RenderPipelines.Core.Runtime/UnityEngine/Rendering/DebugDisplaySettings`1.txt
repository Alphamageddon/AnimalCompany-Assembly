Type: UnityEngine.Rendering.DebugDisplaySettings`1

Method: T get_Instance()

Disassembly:
	0x029B00A8 ADD X0, X8, 0x138
	0x029B00AC LDP X8, X1, [X0]
	0x029B00B0 MOV X0, X19
	0x029B00B4 BLR X8
	0x029B00B8 AND W21, W21, W0, 0x0
	0x029B00BC B 0x29B0044
	0x029B00C0 LDR X1, [X20]
	0x029B00C4 ADD X0, X31, 0x8
	0x029B00C8 BL 0x2BC3C60
	0x029B00CC AND W0, W21, 0x1
	0x029B00D0 LDP X20, X19, [X31 + 0x40]
	0x029B00D4 LDP X22, X21, [X31 + 0x30]
	0x029B00D8 LDP X30, X23, [X31 + 0x20]
	0x029B00DC ADD X31, X31, 0x50
	0x029B00E0 RET
	0x029B00E4 MOV X22, X20
	0x029B00E8 BL 0x1C16F20
	0x029B00EC BL 0x1C16F20
	0x029B00F0 B 0x29B00FC
	0x029B00F4 B 0x29B00F8
	0x029B00F8 MOV X22, X20
	0x029B00FC MOV X19, X0
	0x029B0100 CMP W1, 0x1
	0x029B0104 B.NE 0x29B0130
	0x029B0108 MOV X0, X19
	0x029B010C BL 0x3EB1AD0
	0x029B0110 LDR X20, [X0]
	0x029B0114 BL 0x3EB1AE0
	0x029B0118 LDR X1, [X22]
	0x029B011C ADD X0, X31, 0x8
	0x029B0120 BL 0x2BC3C60
	0x029B0124 CBZ X20, 0x29B00CC
	0x029B0128 MOV X0, X20
	0x029B012C BL 0x1C16F18
	0x029B0130 MOV X20, X31
	0x029B0134 B 0x29B013C
	0x029B0138 MOV X19, X0
	0x029B013C LDR X1, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {58}
	043 Move X0, [X19+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, [X8+24]
	055 Move X30, [X31+32]
	056 Call 0x2EE9EE4, X0
	057 Return X0
	058 Call 0x1C17F20

Method: System.Boolean get_AreAnySettingsActive()

Disassembly:
	0x029B0140 ADD X0, X31, 0x8
	0x029B0144 BL 0x2BC3C60
	0x029B0148 CBNZ X20, 0x29B0154
	0x029B014C MOV X0, X19
	0x029B0150 BL 0x1D2C690
	0x029B0154 MOV X0, X20
	0x029B0158 BL 0x1C16F18
	0x029B015C BL 0x1990590
	0x029B0160 SUB X31, X31, 0x50
	0x029B0164 STP X30, X23, [X31 + 0x20]
	0x029B0168 STP X22, X21, [X31 + 0x30]
	0x029B016C STP X20, X19, [X31 + 0x40]
	0x029B0170 ADRP X20, 0x1A2A000
	0x029B0174 LDRB W8, [X20 + 0xFB0]
	0x029B0178 MOV X19, X0
	0x029B017C TBNZ X8, 0x0, 0x29B01C4
	0x029B0180 ADRP X0, 0x176E000
	0x029B0184 LDR X0, [X0 + 0x5B8]
	0x029B0188 BL 0x1C16CF4
	0x029B018C ADRP X0, 0x176E000
	0x029B0190 LDR X0, [X0 + 0x5C0]
	0x029B0194 BL 0x1C16CF4
	0x029B0198 ADRP X0, 0x176E000
	0x029B019C LDR X0, [X0 + 0x5C8]
	0x029B01A0 BL 0x1C16CF4
	0x029B01A4 ADRP X0, 0x176E000
	0x029B01A8 LDR X0, [X0 + 0x5D0]
	0x029B01AC BL 0x1C16CF4
	0x029B01B0 ADRP X0, 0x176E000
	0x029B01B4 LDR X0, [X0 + 0x5D8]
	0x029B01B8 BL 0x1C16CF4
	0x029B01BC MOVZ W8, 0x1
	0x029B01C0 STRB W8, [X20 + 0xFB0]
	0x029B01C4 STP X31, X31, [X31 + 0x8]
	0x029B01C8 STR X31, [X31 + 0x18]
	0x029B01CC LDR X0, [X19 + 0x10]
	0x029B01D0 CBZ X0, 0x29B02AC
	0x029B01D4 ADRP X8, 0x176E000
	0x029B01D8 LDR X8, [X8 + 0x5D0]
	0x029B01DC ADRP X22, 0x176E000
	0x029B01E0 ADRP X23, 0x176E000
	0x029B01E4 ADRP X20, 0x176E000
	0x029B01E8 LDR X1, [X8]
	0x029B01EC LDR X22, [X22 + 0x5C0]
	0x029B01F0 LDR X23, [X23 + 0x5D8]
	0x029B01F4 LDR X20, [X20 + 0x5B8]
	0x029B01F8 ADD X8, X31, 0x8
	0x029B01FC BL 0x2DBE924
	0x029B0200 MOVZ W21, 0x1
	0x029B0204 LDR X1, [X22]
	0x029B0208 ADD X0, X31, 0x8
	0x029B020C BL 0x2BC3C64
	0x029B0210 TBZ X0, 0x0, 0x29B0280
	0x029B0214 LDR X19, [X31 + 0x18]
	0x029B0218 CBZ X19, 0x29B02A4
	0x029B021C LDR X8, [X19]
	0x029B0220 LDR X1, [X23]
	0x029B0224 LDRH W9, [X8 + 0x12E]
	0x029B0228 CBZ X9, 0x29B024C
	0x029B022C LDR X10, [X8 + 0xB0]
	0x029B0230 ADD X10, X10, 0x8
	0x029B0234 LDUR X11, [X10 - 0x8]
	0x029B0238 CMP X11, X1
	0x029B023C B.EQ 0x29B025C
	0x029B0240 SUBS X9, X9, 0x1
	0x029B0244 ADD X10, X10, 0x10
	0x029B0248 B.NE 0x29B0234
	0x029B024C MOVZ W2, 0x2
	0x029B0250 MOV X0, X19
	0x029B0254 BL 0x1C5C788
	0x029B0258 B 0x29B026C
	0x029B025C LDR W9, [X10]
	0x029B0260 ADD W9, W9, 0x2
	0x029B0264 ADD X8, X8, W9, 0x4, SXTW
	0x029B0268 ADD X0, X8, 0x138
	0x029B026C LDP X8, X1, [X0]
	0x029B0270 MOV X0, X19
	0x029B0274 BLR X8
	0x029B0278 AND W21, W21, W0, 0x0
	0x029B027C B 0x29B0204
	0x029B0280 LDR X1, [X20]
	0x029B0284 ADD X0, X31, 0x8
	0x029B0288 BL 0x2BC3C60
	0x029B028C AND W0, W21, 0x1
	0x029B0290 LDP X20, X19, [X31 + 0x40]
	0x029B0294 LDP X22, X21, [X31 + 0x30]
	0x029B0298 LDP X30, X23, [X31 + 0x20]
	0x029B029C ADD X31, X31, 0x50
	0x029B02A0 RET
	0x029B02A4 MOV X22, X20
	0x029B02A8 BL 0x1C16F20
	0x029B02AC BL 0x1C16F20
	0x029B02B0 B 0x29B02BC
	0x029B02B4 B 0x29B02B8
	0x029B02B8 MOV X22, X20
	0x029B02BC MOV X19, X0
	0x029B02C0 CMP W1, 0x1
	0x029B02C4 B.NE 0x29B02F0
	0x029B02C8 MOV X0, X19
	0x029B02CC BL 0x3EB1AD0
	0x029B02D0 LDR X20, [X0]
	0x029B02D4 BL 0x3EB1AE0
	0x029B02D8 LDR X1, [X22]
	0x029B02DC ADD X0, X31, 0x8
	0x029B02E0 BL 0x2BC3C60
	0x029B02E4 CBZ X20, 0x29B028C
	0x029B02E8 MOV X0, X20
	0x029B02EC BL 0x1C16F18
	0x029B02F0 MOV X20, X31
	0x029B02F4 B 0x29B02FC
	0x029B02F8 MOV X19, X0
	0x029B02FC LDR X1, [X22]
	0x029B0300 ADD X0, X31, 0x8
	0x029B0304 BL 0x2BC3C60
	0x029B0308 CBNZ X20, 0x29B0314

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x1A2B000
	009 Move W8, [X20+4007]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x176F000
	016 Move X0, [X0+1464]
	017 Call 0x1C17CF4
	018 Move X0, 0x176F000
	019 Move X0, [X0+1472]
	020 Call 0x1C17CF4
	021 Move X0, 0x176F000
	022 Move X0, [X0+1480]
	023 Call 0x1C17CF4
	024 Move X0, 0x176F000
	025 Move X0, [X0+1488]
	026 Call 0x1C17CF4
	027 Move X0, 0x176F000
	028 Move X0, [X0+1496]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+4007], W8
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {102}
	038 Move X8, 0x176F000
	039 Move X8, [X8+1488]
	040 Move X22, 0x176F000
	041 Move X23, 0x176F000
	042 Move X21, 0x176F000
	043 Move X1, [X8]
	044 Move X22, [X22+1472]
	045 Move X23, [X23+1496]
	046 Move X21, [X21+1464]
	047 Add X8, X31, 8
	048 Call HashSet`1<Object>.GetEnumerator, X0
	049 Move X1, [X22]
	050 Add X0, X31, 8
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move W19, W0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {86}
	057 Move X20, [X31+24]
	058 Compare X20, 0
	059 JumpIfEqual {101}
	060 Move X8, [X20]
	061 Move X1, [X23]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X20
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X20
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {49}
	085 Move W20, 4
	086 Move W20, 5
	087 Move X1, [X21]
	088 Add X0, X31, 8
	089 Call Enumerator<Object>.Dispose, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 NotImplemented "Instruction CSET not yet implemented."
	092 And W0, W19, W8
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X30, [X31+32]
	098 Move X23, [X31+40]
	099 Add X31, X31, 80
	100 Return X0
	101 Call 0x1C17F20
	102 Call 0x1C17F20
	103 Move X19, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, X19
	106 Call 0x3EB2AD0
	107 Move X20, [X0]
	108 Call 0x3EB2AE0
	109 Move X1, [X21]
	110 Add X0, X31, 8
	111 Call Enumerator<Object>.Dispose, X0
	112 Compare X20, 0
	113 JumpIfNotEqual {116}
	114 Move W19, W31
	115 Move X20, X31
	116 Move X0, X20
	117 Call 0x1C17F18
	118 Move X19, X0
	119 Move X1, [X21]
	120 Add X0, X31, 8
	121 Call Enumerator<Object>.Dispose, X0
	122 Compare X20, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X19
	125 Call 0x1D2D690
	126 Move X0, X20
	127 Call 0x1C17F18
	128 Call 0x1991590

Method: System.Boolean get_IsPostProcessingAllowed()

Disassembly:
	0x029B030C MOV X0, X19
	0x029B0310 BL 0x1D2C690
	0x029B0314 MOV X0, X20
	0x029B0318 BL 0x1C16F18
	0x029B031C BL 0x1990590
	0x029B0320 SUB X31, X31, 0x40
	0x029B0324 STP X30, X21, [X31 + 0x20]
	0x029B0328 STP X20, X19, [X31 + 0x30]
	0x029B032C ADRP X21, 0x1A2A000
	0x029B0330 LDRB W8, [X21 + 0xFB1]
	0x029B0334 MOV X19, X1
	0x029B0338 MOV X20, X0
	0x029B033C TBNZ X8, 0x0, 0x29B0378
	0x029B0340 ADRP X0, 0x176E000
	0x029B0344 LDR X0, [X0 + 0x5B8]
	0x029B0348 BL 0x1C16CF4
	0x029B034C ADRP X0, 0x176E000
	0x029B0350 LDR X0, [X0 + 0x5C0]
	0x029B0354 BL 0x1C16CF4
	0x029B0358 ADRP X0, 0x176E000
	0x029B035C LDR X0, [X0 + 0x5C8]
	0x029B0360 BL 0x1C16CF4
	0x029B0364 ADRP X0, 0x176E000
	0x029B0368 LDR X0, [X0 + 0x5D0]
	0x029B036C BL 0x1C16CF4
	0x029B0370 MOVZ W8, 0x1
	0x029B0374 STRB W8, [X21 + 0xFB1]
	0x029B0378 STP X31, X31, [X31 + 0x8]
	0x029B037C STR X31, [X31 + 0x18]
	0x029B0380 LDR X0, [X20 + 0x10]
	0x029B0384 CBZ X0, 0x29B03F8
	0x029B0388 ADRP X8, 0x176E000
	0x029B038C LDR X8, [X8 + 0x5D0]
	0x029B0390 ADRP X21, 0x176E000
	0x029B0394 ADRP X20, 0x176E000
	0x029B0398 LDR X1, [X8]
	0x029B039C LDR X21, [X21 + 0x5C0]
	0x029B03A0 LDR X20, [X20 + 0x5B8]
	0x029B03A4 ADD X8, X31, 0x8
	0x029B03A8 BL 0x2DBE924
	0x029B03AC LDR X1, [X21]
	0x029B03B0 ADD X0, X31, 0x8
	0x029B03B4 BL 0x2BC3C64
	0x029B03B8 TBZ X0, 0x0, 0x29B03D8
	0x029B03BC CBZ X19, 0x29B03F4
	0x029B03C0 LDR X1, [X31 + 0x18]
	0x029B03C4 LDR X0, [X19 + 0x40]
	0x029B03C8 LDR X8, [X19 + 0x18]
	0x029B03CC LDR X2, [X19 + 0x28]
	0x029B03D0 BLR X8
	0x029B03D4 B 0x29B03AC
	0x029B03D8 LDR X1, [X20]
	0x029B03DC ADD X0, X31, 0x8
	0x029B03E0 BL 0x2BC3C60
	0x029B03E4 LDP X20, X19, [X31 + 0x30]
	0x029B03E8 LDP X30, X21, [X31 + 0x20]
	0x029B03EC ADD X31, X31, 0x40
	0x029B03F0 RET
	0x029B03F4 BL 0x1C16F20
	0x029B03F8 BL 0x1C16F20
	0x029B03FC B 0x29B0404
	0x029B0400 B 0x29B0404
	0x029B0404 MOV X19, X0
	0x029B0408 CMP W1, 0x1
	0x029B040C B.NE 0x29B0440
	0x029B0410 MOV X0, X19
	0x029B0414 BL 0x3EB1AD0
	0x029B0418 LDR X20, [X0]
	0x029B041C BL 0x3EB1AE0
	0x029B0420 ADRP X8, 0x176E000
	0x029B0424 LDR X8, [X8 + 0x5B8]
	0x029B0428 ADD X0, X31, 0x8
	0x029B042C LDR X1, [X8]
	0x029B0430 BL 0x2BC3C60
	0x029B0434 CBZ X20, 0x29B03E4
	0x029B0438 MOV X0, X20
	0x029B043C BL 0x1C16F18
	0x029B0440 MOV X20, X31
	0x029B0444 B 0x29B044C
	0x029B0448 MOV X19, X0
	0x029B044C ADRP X8, 0x176E000
	0x029B0450 LDR X8, [X8 + 0x5B8]
	0x029B0454 LDR X1, [X8]
	0x029B0458 ADD X0, X31, 0x8
	0x029B045C BL 0x2BC3C60
	0x029B0460 CBNZ X20, 0x29B046C
	0x029B0464 MOV X0, X19
	0x029B0468 BL 0x1D2C690
	0x029B046C MOV X0, X20
	0x029B0470 BL 0x1C16F18
	0x029B0474 BL 0x1990590
	0x029B0478 STR X30, [X31 - 0x20]!
	0x029B047C STP X20, X19, [X31 + 0x10]
	0x029B0480 ADRP X20, 0x1A2A000
	0x029B0484 LDRB W8, [X20 + 0xFB2]
	0x029B0488 MOV X19, X0
	0x029B048C TBNZ X8, 0x0, 0x29B04A4
	0x029B0490 ADRP X0, 0x176E000
	0x029B0494 LDR X0, [X0 + 0x5E0]
	0x029B0498 BL 0x1C16CF4
	0x029B049C MOVZ W8, 0x1
	0x029B04A0 STRB W8, [X20 + 0xFB2]
	0x029B04A4 LDR X0, [X19 + 0x10]
	0x029B04A8 CBZ X0, 0x29B04C4
	0x029B04AC ADRP X8, 0x176E000
	0x029B04B0 LDR X8, [X8 + 0x5E0]
	0x029B04B4 LDP X20, X19, [X31 + 0x10]
	0x029B04B8 LDR X1, [X8]
	0x029B04BC LDR X30, [X31], #0x20
	0x029B04C0 B 0x2DBE450
	0x029B04C4 BL 0x1C16F20
	0x029B04C8 SUB X31, X31, 0x60

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x1A2B000
	009 Move W8, [X20+4008]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x176F000
	016 Move X0, [X0+1464]
	017 Call 0x1C17CF4
	018 Move X0, 0x176F000
	019 Move X0, [X0+1472]
	020 Call 0x1C17CF4
	021 Move X0, 0x176F000
	022 Move X0, [X0+1480]
	023 Call 0x1C17CF4
	024 Move X0, 0x176F000
	025 Move X0, [X0+1488]
	026 Call 0x1C17CF4
	027 Move X0, 0x176F000
	028 Move X0, [X0+1496]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+4008], W8
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {97}
	038 Move X8, 0x176F000
	039 Move X8, [X8+1488]
	040 Move X22, 0x176F000
	041 Move X23, 0x176F000
	042 Move X20, 0x176F000
	043 Move X1, [X8]
	044 Move X22, [X22+1472]
	045 Move X23, [X23+1496]
	046 Move X20, [X20+1464]
	047 Add X8, X31, 8
	048 Call HashSet`1<Object>.GetEnumerator, X0
	049 Move W21, 1
	050 Move X1, [X22]
	051 Add X0, X31, 8
	052 Call Enumerator<Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {83}
	057 Move X19, [X31+24]
	058 Compare X19, 0
	059 JumpIfEqual {95}
	060 Move X8, [X19]
	061 Move X1, [X23]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 1
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 1
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 And W21, W21, W0
	083 Move X1, [X20]
	084 Add X0, X31, 8
	085 Call Enumerator<Object>.Dispose, X0
	086 And W0, W21, 1
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X30, [X31+32]
	092 Move X23, [X31+40]
	093 Add X31, X31, 80
	094 Return X0
	095 Move X22, X20
	096 Call 0x1C17F20
	097 Call 0x1C17F20
	098 Move X22, X20
	099 Move X19, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X19
	102 Call 0x3EB2AD0
	103 Move X20, [X0]
	104 Call 0x3EB2AE0
	105 Move X1, [X22]
	106 Add X0, X31, 8
	107 Call Enumerator<Object>.Dispose, X0
	108 Compare X20, 0
	109 JumpIfEqual {86}
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Move X20, X31
	113 Move X19, X0
	114 Move X1, [X22]
	115 Add X0, X31, 8
	116 Call Enumerator<Object>.Dispose, X0
	117 Compare X20, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X19
	120 Call 0x1D2D690
	121 Move X0, X20
	122 Call 0x1C17F18
	123 Call 0x1991590

Method: System.Boolean get_IsLightingActive()

Disassembly:
	0x029B04CC STR X30, [X31 + 0x20]
	0x029B04D0 STP X24, X23, [X31 + 0x30]
	0x029B04D4 STP X22, X21, [X31 + 0x40]
	0x029B04D8 STP X20, X19, [X31 + 0x50]
	0x029B04DC ADRP X21, 0x1A2A000
	0x029B04E0 LDRB W8, [X21 + 0xFB3]
	0x029B04E4 MOV X19, X1
	0x029B04E8 MOV X20, X0
	0x029B04EC TBNZ X8, 0x0, 0x29B0534
	0x029B04F0 ADRP X0, 0x176E000
	0x029B04F4 LDR X0, [X0 + 0x5B8]
	0x029B04F8 BL 0x1C16CF4
	0x029B04FC ADRP X0, 0x176E000
	0x029B0500 LDR X0, [X0 + 0x5C0]
	0x029B0504 BL 0x1C16CF4
	0x029B0508 ADRP X0, 0x176E000
	0x029B050C LDR X0, [X0 + 0x5C8]
	0x029B0510 BL 0x1C16CF4
	0x029B0514 ADRP X0, 0x176E000
	0x029B0518 LDR X0, [X0 + 0x5D0]
	0x029B051C BL 0x1C16CF4
	0x029B0520 ADRP X0, 0x176E000
	0x029B0524 LDR X0, [X0 + 0x5D8]
	0x029B0528 BL 0x1C16CF4
	0x029B052C MOVZ W8, 0x1
	0x029B0530 STRB W8, [X21 + 0xFB3]
	0x029B0534 STP X31, X31, [X31 + 0x8]
	0x029B0538 STR X31, [X31 + 0x18]
	0x029B053C LDR X0, [X20 + 0x10]
	0x029B0540 CBZ X0, 0x29B0630
	0x029B0544 ADRP X8, 0x176E000
	0x029B0548 LDR X8, [X8 + 0x5D0]
	0x029B054C ADRP X23, 0x176E000
	0x029B0550 ADRP X24, 0x176E000
	0x029B0554 ADRP X22, 0x176E000
	0x029B0558 LDR X1, [X8]
	0x029B055C LDR X23, [X23 + 0x5C0]
	0x029B0560 LDR X24, [X24 + 0x5D8]
	0x029B0564 LDR X22, [X22 + 0x5B8]
	0x029B0568 ADD X8, X31, 0x8
	0x029B056C BL 0x2DBE924
	0x029B0570 LDR X1, [X23]
	0x029B0574 ADD X0, X31, 0x8
	0x029B0578 BL 0x2BC3C64
	0x029B057C MOV W20, W0
	0x029B0580 TBZ X0, 0x0, 0x29B05F8
	0x029B0584 LDR X21, [X31 + 0x18]
	0x029B0588 CBZ X21, 0x29B062C
	0x029B058C LDR X8, [X21]
	0x029B0590 LDR X1, [X24]
	0x029B0594 LDRH W9, [X8 + 0x12E]
	0x029B0598 CBZ X9, 0x29B05BC
	0x029B059C LDR X10, [X8 + 0xB0]
	0x029B05A0 ADD X10, X10, 0x8
	0x029B05A4 LDUR X11, [X10 - 0x8]
	0x029B05A8 CMP X11, X1
	0x029B05AC B.EQ 0x29B05CC
	0x029B05B0 SUBS X9, X9, 0x1
	0x029B05B4 ADD X10, X10, 0x10
	0x029B05B8 B.NE 0x29B05A4
	0x029B05BC MOVZ W2, 0x3
	0x029B05C0 MOV X0, X21
	0x029B05C4 BL 0x1C5C788
	0x029B05C8 B 0x29B05DC
	0x029B05CC LDR W9, [X10]
	0x029B05D0 ADD W9, W9, 0x3
	0x029B05D4 ADD X8, X8, W9, 0x4, SXTW
	0x029B05D8 ADD X0, X8, 0x138
	0x029B05DC LDP X8, X2, [X0]
	0x029B05E0 MOV X0, X21
	0x029B05E4 MOV X1, X19
	0x029B05E8 BLR X8
	0x029B05EC TBZ X0, 0x0, 0x29B0570
	0x029B05F0 MOVZ W19, 0x4
	0x029B05F4 B 0x29B05FC
	0x029B05F8 MOVZ W19, 0x5
	0x029B05FC LDR X1, [X22]
	0x029B0600 ADD X0, X31, 0x8
	0x029B0604 BL 0x2BC3C60
	0x029B0608 CMP W19, 0x4
	0x029B060C CSET W8, EQ
	0x029B0610 AND W0, W20, W8, 0x0
	0x029B0614 LDP X20, X19, [X31 + 0x50]
	0x029B0618 LDP X22, X21, [X31 + 0x40]
	0x029B061C LDP X24, X23, [X31 + 0x30]
	0x029B0620 LDR X30, [X31 + 0x20]
	0x029B0624 ADD X31, X31, 0x60
	0x029B0628 RET
	0x029B062C BL 0x1C16F20
	0x029B0630 BL 0x1C16F20
	0x029B0634 B 0x29B063C
	0x029B0638 B 0x29B063C
	0x029B063C MOV X19, X0
	0x029B0640 CMP W1, 0x1
	0x029B0644 B.NE 0x29B0670
	0x029B0648 MOV X0, X19
	0x029B064C BL 0x3EB1AD0
	0x029B0650 LDR X20, [X0]
	0x029B0654 BL 0x3EB1AE0
	0x029B0658 LDR X1, [X22]
	0x029B065C ADD X0, X31, 0x8
	0x029B0660 BL 0x2BC3C60
	0x029B0664 CBNZ X20, 0x29B0678
	0x029B0668 MOV W19, W31
	0x029B066C B 0x29B0608
	0x029B0670 MOV X20, X31
	0x029B0674 B 0x29B0684
	0x029B0678 MOV X0, X20
	0x029B067C BL 0x1C16F18
	0x029B0680 MOV X19, X0
	0x029B0684 LDR X1, [X22]
	0x029B0688 ADD X0, X31, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0x1A2B000
	009 Move W8, [X20+4009]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x176F000
	016 Move X0, [X0+1464]
	017 Call 0x1C17CF4
	018 Move X0, 0x176F000
	019 Move X0, [X0+1472]
	020 Call 0x1C17CF4
	021 Move X0, 0x176F000
	022 Move X0, [X0+1480]
	023 Call 0x1C17CF4
	024 Move X0, 0x176F000
	025 Move X0, [X0+1488]
	026 Call 0x1C17CF4
	027 Move X0, 0x176F000
	028 Move X0, [X0+1496]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+4009], W8
	032 Move [X31+8], X31
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {97}
	038 Move X8, 0x176F000
	039 Move X8, [X8+1488]
	040 Move X22, 0x176F000
	041 Move X23, 0x176F000
	042 Move X20, 0x176F000
	043 Move X1, [X8]
	044 Move X22, [X22+1472]
	045 Move X23, [X23+1496]
	046 Move X20, [X20+1464]
	047 Add X8, X31, 8
	048 Call HashSet`1<Object>.GetEnumerator, X0
	049 Move W21, 1
	050 Move X1, [X22]
	051 Add X0, X31, 8
	052 Call Enumerator<Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {83}
	057 Move X19, [X31+24]
	058 Compare X19, 0
	059 JumpIfEqual {95}
	060 Move X8, [X19]
	061 Move X1, [X23]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 2
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 2
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 And W21, W21, W0
	083 Move X1, [X20]
	084 Add X0, X31, 8
	085 Call Enumerator<Object>.Dispose, X0
	086 And W0, W21, 1
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X30, [X31+32]
	092 Move X23, [X31+40]
	093 Add X31, X31, 80
	094 Return X0
	095 Move X22, X20
	096 Call 0x1C17F20
	097 Call 0x1C17F20
	098 Move X22, X20
	099 Move X19, X0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X19
	102 Call 0x3EB2AD0
	103 Move X20, [X0]
	104 Call 0x3EB2AE0
	105 Move X1, [X22]
	106 Add X0, X31, 8
	107 Call Enumerator<Object>.Dispose, X0
	108 Compare X20, 0
	109 JumpIfEqual {86}
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Move X20, X31
	113 Move X19, X0
	114 Move X1, [X22]
	115 Add X0, X31, 8
	116 Call Enumerator<Object>.Dispose, X0
	117 Compare X20, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X19
	120 Call 0x1D2D690
	121 Move X0, X20
	122 Call 0x1C17F18
	123 Call 0x1991590

Method: TData Add(TData newData)

Disassembly:
	0x0212FD88 STUR X8, [X29 - 0x8]
	0x0212FD8C STUR X1, [X29 - 0x28]
	0x0212FD90 LDR X8, [X5 + 0x38]
	0x0212FD94 MOV W23, W2
	0x0212FD98 MOV X25, X1
	0x0212FD9C MOV X21, X0
	0x0212FDA0 CBNZ X8, 0x212FDD0
	0x0212FDA4 ADRP X0, 0x1FC4000
	0x0212FDA8 LDR X0, [X0 + 0x5A8]
	0x0212FDAC BL 0x1C16CF4
	0x0212FDB0 ADRP X0, 0x1FEC000
	0x0212FDB4 LDR X0, [X0 + 0x6A0]
	0x0212FDB8 BL 0x1C16CF4
	0x0212FDBC LDR X8, [X19 + 0x38]
	0x0212FDC0 CBNZ X8, 0x212FDD0
	0x0212FDC4 MOV X0, X19
	0x0212FDC8 BL 0x1C5C6E0
	0x0212FDCC LDR X8, [X19 + 0x38]
	0x0212FDD0 LDR X8, [X8]
	0x0212FDD4 ADD X9, X8, 0x135
	0x0212FDD8 LDRH W9, [X9]
	0x0212FDDC TBNZ X9, 0x0, 0x212FDFC
	0x0212FDE0 MOV X0, X8
	0x0212FDE4 BL 0x1C5C684

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x22AB000
	006 Move W8, [X21+2087]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1FED000
	014 Move X0, [X0+1672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2087], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X8, 0x1FED000
	022 Move X8, [X8+1672]
	023 Move X1, X19
	024 Move X2, [X8]
	025 Call HashSet`1<Object>.Add, X0, X1
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void ForEach(System.Action`1<UnityEngine.Rendering.IDebugDisplaySettingsData> onExecute)

Disassembly:
	0x029B068C BL 0x2BC3C60
	0x029B0690 CBNZ X20, 0x29B069C
	0x029B0694 MOV X0, X19
	0x029B0698 BL 0x1D2C690
	0x029B069C MOV X0, X20
	0x029B06A0 BL 0x1C16F18
	0x029B06A4 BL 0x1990590
	0x029B06A8 STR X30, [X31 - 0x30]!
	0x029B06AC STP X22, X21, [X31 + 0x10]
	0x029B06B0 STP X20, X19, [X31 + 0x20]
	0x029B06B4 ADRP X21, 0x1A2A000
	0x029B06B8 ADRP X22, 0x176E000
	0x029B06BC ADRP X20, 0x176E000
	0x029B06C0 LDRB W8, [X21 + 0xFB4]
	0x029B06C4 LDR X22, [X22 + 0x5E8]
	0x029B06C8 LDR X20, [X20 + 0x5F0]
	0x029B06CC MOV X19, X0
	0x029B06D0 TBNZ X8, 0x0, 0x29B06F4
	0x029B06D4 ADRP X0, 0x176E000
	0x029B06D8 LDR X0, [X0 + 0x5F0]
	0x029B06DC BL 0x1C16CF4
	0x029B06E0 ADRP X0, 0x176E000
	0x029B06E4 LDR X0, [X0 + 0x5E8]
	0x029B06E8 BL 0x1C16CF4
	0x029B06EC MOVZ W8, 0x1
	0x029B06F0 STRB W8, [X21 + 0xFB4]
	0x029B06F4 LDR X0, [X22]
	0x029B06F8 BL 0x1C16F10
	0x029B06FC LDR X1, [X20]
	0x029B0700 MOV X20, X0
	0x029B0704 BL 0x2DBDE08
	0x029B0708 STR X20, [X19 + 0x10]
	0x029B070C MOV X0, X19
	0x029B0710 LDP X20, X19, [X31 + 0x20]
	0x029B0714 LDP X22, X21, [X31 + 0x10]
	0x029B0718 MOV X1, X31
	0x029B071C LDR X30, [X31], #0x30
	0x029B0720 B 0x33BDD8C
	0x029B0724 STP X30, X23, [X31 - 0x30]!
	0x029B0728 STP X22, X21, [X31 + 0x10]
	0x029B072C STP X20, X19, [X31 + 0x20]
	0x029B0730 MOV X19, X0
	0x029B0734 LDR X0, [X0 + 0x20]
	0x029B0738 LDRB W8, [X0 + 0x135]
	0x029B073C TBNZ X8, 0x0, 0x29B0744
	0x029B0740 BL 0x1C5C684
	0x029B0744 LDR X8, [X0 + 0xC0]
	0x029B0748 LDR X0, [X8 + 0x30]
	0x029B074C LDRB W8, [X0 + 0x135]
	0x029B0750 TBNZ X8, 0x0, 0x29B0758
	0x029B0754 BL 0x1C5C684
	0x029B0758 LDR W8, [X0 + 0xE0]
	0x029B075C CBNZ W8, 0x29B0764
	0x029B0760 BL 0x1C16DFC
	0x029B0764 LDR X0, [X19 + 0x20]
	0x029B0768 LDRB W8, [X0 + 0x135]
	0x029B076C TBNZ X8, 0x0, 0x29B0774
	0x029B0770 BL 0x1C5C684
	0x029B0774 LDR X8, [X0 + 0xC0]
	0x029B0778 LDR X0, [X8 + 0x30]
	0x029B077C LDRB W8, [X0 + 0x135]
	0x029B0780 TBNZ X8, 0x0, 0x29B0788
	0x029B0784 BL 0x1C5C684
	0x029B0788 LDR X8, [X19 + 0x20]
	0x029B078C LDR X9, [X0 + 0xB8]
	0x029B0790 LDRB W10, [X8 + 0x135]
	0x029B0794 LDR X21, [X9]
	0x029B0798 TBNZ X10, 0x0, 0x29B07A8
	0x029B079C MOV X0, X8
	0x029B07A0 BL 0x1C5C684
	0x029B07A4 MOV X8, X0
	0x029B07A8 LDR X8, [X8 + 0xC0]
	0x029B07AC LDR X0, [X8 + 0x40]
	0x029B07B0 LDRB W8, [X0 + 0x135]
	0x029B07B4 TBNZ X8, 0x0, 0x29B07BC
	0x029B07B8 BL 0x1C5C684
	0x029B07BC BL 0x1C16F10
	0x029B07C0 LDR X8, [X19 + 0x20]
	0x029B07C4 MOV X20, X0
	0x029B07C8 ADD X9, X8, 0x135
	0x029B07CC LDRH W9, [X9]
	0x029B07D0 TBNZ X9, 0x0, 0x29B07EC
	0x029B07D4 MOV X0, X8
	0x029B07D8 BL 0x1C5C684
	0x029B07DC LDR X8, [X19 + 0x20]
	0x029B07E0 ADD X9, X8, 0x135

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x1A2B000
	007 Move W8, [X21+4010]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x176F000
	015 Move X0, [X0+1464]
	016 Call 0x1C17CF4
	017 Move X0, 0x176F000
	018 Move X0, [X0+1472]
	019 Call 0x1C17CF4
	020 Move X0, 0x176F000
	021 Move X0, [X0+1480]
	022 Call 0x1C17CF4
	023 Move X0, 0x176F000
	024 Move X0, [X0+1488]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+4010], W8
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Move X0, [X20+16]
	032 Compare X0, 0
	033 JumpIfEqual {67}
	034 Move X8, 0x176F000
	035 Move X8, [X8+1488]
	036 Move X21, 0x176F000
	037 Move X20, 0x176F000
	038 Move X1, [X8]
	039 Move X21, [X21+1472]
	040 Move X20, [X20+1464]
	041 Add X8, X31, 8
	042 Call HashSet`1<Object>.GetEnumerator, X0
	043 Move X1, [X21]
	044 Add X0, X31, 8
	045 Call Enumerator<Object>.MoveNext, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {57}
	050 Compare X19, 0
	051 JumpIfEqual {66}
	052 Move X1, [X31+24]
	053 Move X0, [X19+64]
	054 Move X8, [X19+24]
	055 Move X2, [X19+40]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X1, [X20]
	058 Add X0, X31, 8
	059 Call Enumerator<Object>.Dispose, X0
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Add X31, X31, 64
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C17F20
	068 Move X19, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X19
	071 Call 0x3EB2AD0
	072 Move X20, [X0]
	073 Call 0x3EB2AE0
	074 Move X8, 0x176F000
	075 Move X8, [X8+1464]
	076 Add X0, X31, 8
	077 Move X1, [X8]
	078 Call Enumerator<Object>.Dispose, X0
	079 Compare X20, 0
	080 JumpIfEqual {60}
	081 Move X0, X20
	082 Call 0x1C17F18
	083 Move X20, X31
	084 Move X19, X0
	085 Move X8, 0x176F000
	086 Move X8, [X8+1464]
	087 Move X1, [X8]
	088 Add X0, X31, 8
	089 Call Enumerator<Object>.Dispose, X0
	090 Compare X20, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X19
	093 Call 0x1D2D690
	094 Move X0, X20
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Void Reset()

Disassembly:
	0x029B07E4 LDRH W9, [X9]
	0x029B07E8 B 0x29B07F0
	0x029B07EC MOV X0, X8
	0x029B07F0 LDR X10, [X0 + 0xC0]
	0x029B07F4 LDR X10, [X10 + 0x48]
	0x029B07F8 LDR X23, [X10]
	0x029B07FC TBNZ X9, 0x0, 0x29B0818
	0x029B0800 MOV X0, X8
	0x029B0804 BL 0x1C5C684
	0x029B0808 LDR X8, [X19 + 0x20]
	0x029B080C ADD X9, X8, 0x135
	0x029B0810 LDRH W9, [X9]
	0x029B0814 B 0x29B081C
	0x029B0818 MOV X0, X8
	0x029B081C LDR X10, [X0 + 0xC0]
	0x029B0820 LDR X22, [X10 + 0x38]
	0x029B0824 TBNZ X9, 0x0, 0x29B0834
	0x029B0828 MOV X0, X8
	0x029B082C BL 0x1C5C684
	0x029B0830 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1A2B000
	005 Move W8, [X20+4011]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x176F000
	012 Move X0, [X0+1504]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+4011], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x176F000
	020 Move X8, [X8+1504]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call HashSet`1<Object>.Clear, X0
	026 Return 
	027 Call 0x1C17F20

Method: System.Boolean TryGetScreenClearColor(ref UnityEngine.Color color)

Disassembly:
	0x029B0834 LDR X8, [X8 + 0xC0]
	0x029B0838 MOV X0, X20
	0x029B083C MOV X1, X21
	0x029B0840 MOV X2, X22
	0x029B0844 LDR X3, [X8 + 0x48]
	0x029B0848 BLR X23
	0x029B084C LDR X0, [X19 + 0x20]
	0x029B0850 LDRB W8, [X0 + 0x135]
	0x029B0854 TBNZ X8, 0x0, 0x29B085C
	0x029B0858 BL 0x1C5C684
	0x029B085C LDR X8, [X0 + 0xC0]
	0x029B0860 LDR X0, [X8 + 0x8]
	0x029B0864 LDRB W8, [X0 + 0x135]
	0x029B0868 TBNZ X8, 0x0, 0x29B0870
	0x029B086C BL 0x1C5C684
	0x029B0870 BL 0x1C16F10
	0x029B0874 LDR X8, [X19 + 0x20]
	0x029B0878 MOV X21, X0
	0x029B087C ADD X9, X8, 0x135
	0x029B0880 LDRH W9, [X9]
	0x029B0884 TBNZ X9, 0x0, 0x29B08A0
	0x029B0888 MOV X0, X8
	0x029B088C BL 0x1C5C684
	0x029B0890 LDR X8, [X19 + 0x20]
	0x029B0894 ADD X9, X8, 0x135
	0x029B0898 LDRH W9, [X9]
	0x029B089C B 0x29B08A4
	0x029B08A0 MOV X0, X8
	0x029B08A4 LDR X10, [X0 + 0xC0]
	0x029B08A8 LDR X10, [X10 + 0x50]
	0x029B08AC LDR X22, [X10]
	0x029B08B0 TBNZ X9, 0x0, 0x29B08C0
	0x029B08B4 MOV X0, X8
	0x029B08B8 BL 0x1C5C684
	0x029B08BC MOV X8, X0
	0x029B08C0 LDR X8, [X8 + 0xC0]
	0x029B08C4 MOV X0, X21
	0x029B08C8 MOV X1, X20
	0x029B08CC LDR X2, [X8 + 0x50]
	0x029B08D0 BLR X22
	0x029B08D4 LDR X0, [X19 + 0x20]
	0x029B08D8 LDRB W8, [X0 + 0x135]
	0x029B08DC TBNZ X8, 0x0, 0x29B08E4
	0x029B08E0 BL 0x1C5C684
	0x029B08E4 LDR X8, [X0 + 0xC0]
	0x029B08E8 LDR X0, [X8 + 0x10]
	0x029B08EC LDRB W8, [X0 + 0x135]
	0x029B08F0 TBNZ X8, 0x0, 0x29B08F8
	0x029B08F4 BL 0x1C5C684
	0x029B08F8 LDR X8, [X0 + 0xB8]
	0x029B08FC STR X21, [X8]
	0x029B0900 LDR X0, [X19 + 0x20]
	0x029B0904 LDRB W8, [X0 + 0x135]
	0x029B0908 TBNZ X8, 0x0, 0x29B0910
	0x029B090C BL 0x1C5C684
	0x029B0910 LDR X8, [X0 + 0xC0]
	0x029B0914 LDR X0, [X8 + 0x10]
	0x029B0918 LDRB W8, [X0 + 0x135]
	0x029B091C TBNZ X8, 0x0, 0x29B0930
	0x029B0920 LDP X20, X19, [X31 + 0x20]
	0x029B0924 LDP X22, X21, [X31 + 0x10]
	0x029B0928 LDP X30, X23, [X31], #0x30
	0x029B092C B 0x1C5C684
	0x029B0930 LDP X20, X19, [X31 + 0x20]
	0x029B0934 LDP X22, X21, [X31 + 0x10]
	0x029B0938 LDP X30, X23, [X31], #0x30
	0x029B093C RET
	0x029B0940 STP X30, X19, [X31 - 0x10]!
	0x029B0944 CBZ X0, 0x29B09A0
	0x029B0948 STR X1, [X0 + 0x58]
	0x029B094C LDR X8, [X2 + 0x20]
	0x029B0950 MOV X19, X0
	0x029B0954 LDR X8, [X8 + 0xC0]
	0x029B0958 LDR X1, [X8]
	0x029B095C BL 0x21A8CFC
	0x029B0960 STR X0, [X19 + 0x80]
	0x029B0964 CBZ X0, 0x29B09A0
	0x029B0968 LDR X8, [X19 + 0x70]
	0x029B096C CBZ X8, 0x29B09A0
	0x029B0970 LDR X9, [X8]
	0x029B0974 LDR X1, [X0 + 0x28]
	0x029B0978 MOV X0, X8
	0x029B097C LDR X10, [X9 + 0x5E8]
	0x029B0980 LDR X2, [X9 + 0x5F0]
	0x029B0984 BLR X10
	0x029B0988 LDR X8, [X19]
	0x029B098C MOV X0, X19
	0x029B0990 LDR X2, [X8 + 0x208]
	0x029B0994 LDR X1, [X8 + 0x210]
	0x029B0998 LDP X30, X19, [X31], #0x10
	0x029B099C BR X2
	0x029B09A0 BL 0x1C16F20
	0x029B09A4 STP X30, X21, [X31 - 0x20]!
	0x029B09A8 STP X20, X19, [X31 + 0x10]
	0x029B09AC ADRP X20, 0x1A2A000
	0x029B09B0 ADRP X21, 0x1743000
	0x029B09B4 LDRB W8, [X20 + 0xFB5]
	0x029B09B8 LDR X21, [X21 + 0x598]
	0x029B09BC MOV X19, X0
	0x029B09C0 TBNZ X8, 0x0, 0x29B09D8
	0x029B09C4 ADRP X0, 0x1743000
	0x029B09C8 LDR X0, [X0 + 0x598]
	0x029B09CC BL 0x1C16CF4
	0x029B09D0 MOVZ W8, 0x1
	0x029B09D4 STRB W8, [X20 + 0xFB5]
	0x029B09D8 LDR X0, [X21]
	0x029B09DC LDR X20, [X19 + 0x60]
	0x029B09E0 LDR W8, [X0 + 0xE0]
	0x029B09E4 CBNZ W8, 0x29B09EC
	0x029B09E8 BL 0x1C16DFC
	0x029B09EC MOV X0, X20
	0x029B09F0 MOV X1, X31
	0x029B09F4 MOV X2, X31
	0x029B09F8 BL 0x3C354F8
	0x029B09FC TBZ X0, 0x0, 0x29B0A20
	0x029B0A00 LDR X0, [X19 + 0x60]
	0x029B0A04 CBZ X0, 0x29B0AB8
	0x029B0A08 LDR X8, [X0]
	0x029B0A0C LDP S2, S3, [X19 + 0x38]
	0x029B0A10 LDP S0, S1, [X19 + 0x30]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0x1A2B000
	010 Move W8, [X21+4012]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x176F000
	018 Move X0, [X0+1464]
	019 Call 0x1C17CF4
	020 Move X0, 0x176F000
	021 Move X0, [X0+1472]
	022 Call 0x1C17CF4
	023 Move X0, 0x176F000
	024 Move X0, [X0+1480]
	025 Call 0x1C17CF4
	026 Move X0, 0x176F000
	027 Move X0, [X0+1488]
	028 Call 0x1C17CF4
	029 Move X0, 0x176F000
	030 Move X0, [X0+1496]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+4012], W8
	034 Move [X31+8], X31
	035 Move [X31+16], X31
	036 Move [X31+24], X31
	037 Move X0, [X20+16]
	038 Compare X0, 0
	039 JumpIfEqual {107}
	040 Move X8, 0x176F000
	041 Move X8, [X8+1488]
	042 Move X23, 0x176F000
	043 Move X24, 0x176F000
	044 Move X22, 0x176F000
	045 Move X1, [X8]
	046 Move X23, [X23+1472]
	047 Move X24, [X24+1496]
	048 Move X22, [X22+1464]
	049 Add X8, X31, 8
	050 Call HashSet`1<Object>.GetEnumerator, X0
	051 Move X1, [X23]
	052 Add X0, X31, 8
	053 Call Enumerator<Object>.MoveNext, X0
	054 Move W20, W0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {90}
	059 Move X21, [X31+24]
	060 Compare X21, 0
	061 JumpIfEqual {106}
	062 Move X8, [X21]
	063 Move X1, [X24]
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 3
	074 Move X0, X21
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 3
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X2, [X0+8]
	082 Move X0, X21
	083 Move X1, X19
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {51}
	089 Move W19, 4
	090 Move W19, 5
	091 Move X1, [X22]
	092 Add X0, X31, 8
	093 Call Enumerator<Object>.Dispose, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CSET not yet implemented."
	096 And W0, W20, W8
	097 Move X20, [X31+80]
	098 Move X19, [X31+88]
	099 Move X22, [X31+64]
	100 Move X21, [X31+72]
	101 Move X24, [X31+48]
	102 Move X23, [X31+56]
	103 Move X30, [X31+32]
	104 Add X31, X31, 96
	105 Return X0
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Move X19, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X19
	111 Call 0x3EB2AD0
	112 Move X20, [X0]
	113 Call 0x3EB2AE0
	114 Move X1, [X22]
	115 Add X0, X31, 8
	116 Call Enumerator<Object>.Dispose, X0
	117 Compare X20, 0
	118 JumpIfNotEqual {121}
	119 Move W19, W31
	120 Move X20, X31
	121 Move X0, X20
	122 Call 0x1C17F18
	123 Move X19, X0
	124 Move X1, [X22]
	125 Add X0, X31, 8
	126 Call Enumerator<Object>.Dispose, X0
	127 Compare X20, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X19
	130 Call 0x1D2D690
	131 Move X0, X20
	132 Call 0x1C17F18
	133 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x029B0A14 LDR X9, [X8 + 0x2A8]
	0x029B0A18 LDR X1, [X8 + 0x2B0]
	0x029B0A1C BLR X9
	0x029B0A20 LDR X0, [X21]
	0x029B0A24 LDR X20, [X19 + 0x68]
	0x029B0A28 LDR W8, [X0 + 0xE0]
	0x029B0A2C CBNZ W8, 0x29B0A34
	0x029B0A30 BL 0x1C16DFC
	0x029B0A34 MOV X0, X20
	0x029B0A38 MOV X1, X31
	0x029B0A3C MOV X2, X31
	0x029B0A40 BL 0x3C354F8
	0x029B0A44 TBZ X0, 0x0, 0x29B0A68
	0x029B0A48 LDR X0, [X19 + 0x68]
	0x029B0A4C CBZ X0, 0x29B0AB8
	0x029B0A50 LDR X8, [X0]
	0x029B0A54 LDP S2, S3, [X19 + 0x38]
	0x029B0A58 LDP S0, S1, [X19 + 0x30]
	0x029B0A5C LDR X9, [X8 + 0x2A8]
	0x029B0A60 LDR X1, [X8 + 0x2B0]
	0x029B0A64 BLR X9
	0x029B0A68 LDR X0, [X19 + 0x70]
	0x029B0A6C CBZ X0, 0x29B0AB8
	0x029B0A70 LDR X8, [X0]
	0x029B0A74 LDP S2, S3, [X19 + 0x38]
	0x029B0A78 LDP S0, S1, [X19 + 0x30]
	0x029B0A7C LDR X9, [X8 + 0x2A8]
	0x029B0A80 LDR X1, [X8 + 0x2B0]
	0x029B0A84 BLR X9
	0x029B0A88 LDR X0, [X19 + 0x78]
	0x029B0A8C CBZ X0, 0x29B0AB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1A2B000
	007 Move X22, 0x176F000
	008 Move X20, 0x176F000
	009 Move W8, [X21+4013]
	010 Move X22, [X22+1512]
	011 Move X20, [X20+1520]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x176F000
	018 Move X0, [X0+1520]
	019 Call 0x1C17CF4
	020 Move X0, 0x176F000
	021 Move X0, [X0+1512]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+4013], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call HashSet`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x029B0A90 LDR X8, [X0]
	0x029B0A94 LDP S2, S3, [X19 + 0x38]
	0x029B0A98 LDP S0, S1, [X19 + 0x30]
	0x029B0A9C LDR X9, [X8 + 0x2A8]
	0x029B0AA0 LDR X1, [X8 + 0x2B0]
	0x029B0AA4 BLR X9
	0x029B0AA8 LDP X20, X19, [X31 + 0x10]
	0x029B0AAC MOVZ W0, 0x1
	0x029B0AB0 LDP X30, X21, [X31], #0x20
	0x029B0AB4 RET
	0x029B0AB8 BL 0x1C16F20
	0x029B0ABC STP X30, X21, [X31 - 0x20]!
	0x029B0AC0 STP X20, X19, [X31 + 0x10]
	0x029B0AC4 ADRP X20, 0x1A2A000
	0x029B0AC8 ADRP X21, 0x1743000
	0x029B0ACC LDRB W8, [X20 + 0xFB6]
	0x029B0AD0 LDR X21, [X21 + 0x598]
	0x029B0AD4 MOV X19, X0
	0x029B0AD8 TBNZ X8, 0x0, 0x29B0AF0
	0x029B0ADC ADRP X0, 0x1743000
	0x029B0AE0 LDR X0, [X0 + 0x598]
	0x029B0AE4 BL 0x1C16CF4
	0x029B0AE8 MOVZ W8, 0x1
	0x029B0AEC STRB W8, [X20 + 0xFB6]
	0x029B0AF0 LDR X0, [X21]
	0x029B0AF4 LDR X20, [X19 + 0x60]
	0x029B0AF8 LDR W8, [X0 + 0xE0]
	0x029B0AFC CBNZ W8, 0x29B0B04
	0x029B0B00 BL 0x1C16DFC
	0x029B0B04 MOV X0, X20
	0x029B0B08 MOV X1, X31
	0x029B0B0C MOV X2, X31
	0x029B0B10 BL 0x3C354F8
	0x029B0B14 TBZ X0, 0x0, 0x29B0B38
	0x029B0B18 LDR X0, [X19 + 0x60]
	0x029B0B1C CBZ X0, 0x29B0BC8
	0x029B0B20 LDR X8, [X0]
	0x029B0B24 LDP S2, S3, [X19 + 0x28]
	0x029B0B28 LDP S0, S1, [X19 + 0x20]
	0x029B0B2C LDR X9, [X8 + 0x2A8]
	0x029B0B30 LDR X1, [X8 + 0x2B0]
	0x029B0B34 BLR X9
	0x029B0B38 LDR X0, [X21]
	0x029B0B3C LDR X20, [X19 + 0x68]
	0x029B0B40 LDR W8, [X0 + 0xE0]
	0x029B0B44 CBNZ W8, 0x29B0B4C
	0x029B0B48 BL 0x1C16DFC
	0x029B0B4C MOV X0, X20
	0x029B0B50 MOV X1, X31
	0x029B0B54 MOV X2, X31
	0x029B0B58 BL 0x3C354F8
	0x029B0B5C TBZ X0, 0x0, 0x29B0B80
	0x029B0B60 LDR X0, [X19 + 0x68]
	0x029B0B64 CBZ X0, 0x29B0BC8
	0x029B0B68 LDR X8, [X0]
	0x029B0B6C LDP S2, S3, [X19 + 0x28]
	0x029B0B70 LDP S0, S1, [X19 + 0x20]
	0x029B0B74 LDR X9, [X8 + 0x2A8]
	0x029B0B78 LDR X1, [X8 + 0x2B0]
	0x029B0B7C BLR X9
	0x029B0B80 LDR X0, [X19 + 0x70]
	0x029B0B84 CBZ X0, 0x29B0BC8
	0x029B0B88 LDR X8, [X0]
	0x029B0B8C LDP S2, S3, [X19 + 0x28]
	0x029B0B90 LDP S0, S1, [X19 + 0x20]
	0x029B0B94 LDR X9, [X8 + 0x2A8]
	0x029B0B98 LDR X1, [X8 + 0x2B0]
	0x029B0B9C BLR X9
	0x029B0BA0 LDR X0, [X19 + 0x78]
	0x029B0BA4 CBZ X0, 0x29B0BC8
	0x029B0BA8 LDR X8, [X0]
	0x029B0BAC LDP S2, S3, [X19 + 0x28]
	0x029B0BB0 LDP S0, S1, [X19 + 0x20]
	0x029B0BB4 LDP X20, X19, [X31 + 0x10]
	0x029B0BB8 LDR X2, [X8 + 0x2A8]
	0x029B0BBC LDR X1, [X8 + 0x2B0]
	0x029B0BC0 LDP X30, X21, [X31], #0x20
	0x029B0BC4 BR X2
	0x029B0BC8 BL 0x1C16F20
	0x029B0BCC STR X30, [X31 - 0x10]!
	0x029B0BD0 CBZ X0, 0x29B0BE8
	0x029B0BD4 LDR X8, [X0]
	0x029B0BD8 MOV W1, W31
	0x029B0BDC LDP X3, X2, [X8 + 0x1C8]
	0x029B0BE0 LDR X30, [X31], #0x10
	0x029B0BE4 BR X3
	0x029B0BE8 BL 0x1C16F20
	0x029B0BEC STP X30, X21, [X31 - 0x20]!
	0x029B0BF0 STP X20, X19, [X31 + 0x10]
	0x029B0BF4 ADRP X21, 0x1A2A000
	0x029B0BF8 LDRB W8, [X21 + 0xFB7]
	0x029B0BFC MOV X20, X1
	0x029B0C00 MOV X19, X0
	0x029B0C04 TBNZ X8, 0x0, 0x29B0C1C
	0x029B0C08 ADRP X0, 0x176E000
	0x029B0C0C LDR X0, [X0 + 0x5F8]
	0x029B0C10 BL 0x1C16CF4
	0x029B0C14 MOVZ W8, 0x1
	0x029B0C18 STRB W8, [X21 + 0xFB7]
	0x029B0C1C CBZ X20, 0x29B0C7C
	0x029B0C20 LDR W8, [X20 + 0x10]
	0x029B0C24 CMP W8, 0x1B
	0x029B0C28 B.LT 0x29B0C58
	0x029B0C2C MOVZ W2, 0x17
	0x029B0C30 MOV X0, X20
	0x029B0C34 MOV W1, W31
	0x029B0C38 MOV X3, X31
	0x029B0C3C BL 0x3228DE4
	0x029B0C40 ADRP X8, 0x176E000
	0x029B0C44 LDR X8, [X8 + 0x5F8]
	0x029B0C48 MOV X2, X31
	0x029B0C4C LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+32]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, [X0+192]
	015 Move X0, [X8+48]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, [X19+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, [X8+48]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X19+32]
	042 Move X9, [X0+184]
	043 Move W10, [X8+309]
	044 Move X21, [X9]
	045 Move TEMP, X10
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X8
	050 Call 0x1C5D684
	051 Move X8, X0
	052 Move X8, [X8+192]
	053 Move X0, [X8+64]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Call 0x1C17F10
	061 Move X8, [X19+32]
	062 Move X20, X0
	063 Add X9, X8, 309
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move TEMP, X9
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {74}
	069 Move X0, X8
	070 Call 0x1C5D684
	071 Move X8, [X19+32]
	072 Add X9, X8, 309
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X0, X8
	075 Move X10, [X0+192]
	076 Move X22, [X10+56]
	077 Move TEMP, X9
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {84}
	081 Move X0, X8
	082 Call 0x1C5D684
	083 Move X8, X0
	084 Move X8, [X8+192]
	085 Move X0, X20
	086 Move X1, X21
	087 Move X2, X22
	088 Move X3, [X8+72]
	089 Call Func`1<Object>..ctor, X0, X1, X2
	090 Move X0, [X19+32]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+192]
	098 Move X0, [X8+8]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Call 0x1C17F10
	106 Move X8, [X19+32]
	107 Move X21, X0
	108 Move W9, [X8+309]
	109 Move TEMP, X9
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {116}
	113 Move X0, X8
	114 Call 0x1C5D684
	115 Move X8, X0
	116 Move X8, [X8+192]
	117 Move X0, X21
	118 Move X1, X20
	119 Move X2, [X8+80]
	120 Call 0x2EE97EC, X0, X1
	121 Move X0, [X19+32]
	122 Move W8, [X0+309]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {128}
	127 Call 0x1C5D684
	128 Move X8, [X0+192]
	129 Move X0, [X8+16]
	130 Move W8, [X0+309]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move X8, [X0+184]
	137 Move [X8], X21
	138 Move X0, [X19+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Move X0, [X8+16]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {159}
	152 Move X20, [X31+32]
	153 Move X19, [X31+40]
	154 Move X22, [X31+16]
	155 Move X21, [X31+24]
	156 Move X30, [X31+48]
	157 Call 0x1C5D684
	158 Return 
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X30, [X31+48]
	164 Return 

