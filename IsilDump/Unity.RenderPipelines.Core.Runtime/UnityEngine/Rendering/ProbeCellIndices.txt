Type: UnityEngine.Rendering.ProbeCellIndices

Method: System.Int32 get_estimatedVMemCost()

Disassembly:
	0x039BA384 LDRB W8, [X19 + 0x141]
	0x039BA388 CBZ W8, 0x39BA3C8

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_estimatedVMemCost(System.Int32 value)

Disassembly:
	0x039BA38C LDR X0, [X19 + 0x40]
	0x039BA390 CBZ X0, 0x39BA3D8

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: UnityEngine.Vector3Int GetCellIndexDimension()

Disassembly:
	0x039BA394 BL 0x39B51D8
	0x039BA398 LDR X0, [X19 + 0x48]
	0x039BA39C CBZ X0, 0x39BA3D8
	0x039BA3A0 BL 0x39B98A0

ISIL:
	001 Move X8, [X0+40]
	002 Move W1, [X0+48]
	003 Move X0, X8
	004 Return X0

Method: UnityEngine.Vector3Int GetCellMinPosition()

Disassembly:
	0x039BA3A4 LDR X8, [X19 + 0x38]
	0x039BA3A8 CBZ X8, 0x39BA3D8
	0x039BA3AC ADD X0, X8, 0x18
	0x039BA3B0 BL 0x39B712C

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move W1, [X0+60]
	003 Move X0, X8
	004 Return X0

Method: System.Int32 GetFlatIndex(UnityEngine.Vector3Int normalizedPos)

Disassembly:
	0x039BA3B4 LDR X0, [X19 + 0x50]
	0x039BA3B8 CBZ X0, 0x39BA3D8
	0x039BA3BC BL 0x39B8EEC
	0x039BA3C0 ADD X0, X19, 0x98
	0x039BA3C4 BL 0x39B712C

ISIL:
	001 Move W9, [X0+40]
	002 Move W8, [X0+44]
	003 Move X10, X1
	004 ShiftRight X10, 32
	005 And X10, X10, 0x7FFFFFFF
	006 NotImplemented "Instruction MADD not yet implemented."
	007 NotImplemented "Instruction MADD not yet implemented."
	008 Return X0

Method: System.Void .ctor(UnityEngine.Vector3Int cellMin, UnityEngine.Vector3Int cellMax, System.Int32 cellSizeInMinBricks)

Disassembly:
	0x039BA3C8 STRB W31, [X19 + 0x141]
	0x039BA3CC MOV X0, X19
	0x039BA3D0 LDP X30, X19, [X31], #0x10
	0x039BA3D4 B 0x39BA910
	0x039BA3D8 BL 0x1C16F20
	0x039BA3DC STR X30, [X31 - 0x20]!
	0x039BA3E0 STP X20, X19, [X31 + 0x10]
	0x039BA3E4 ADRP X20, 0xA27000
	0x039BA3E8 LDRB W8, [X20 + 0xC88]
	0x039BA3EC MOV X19, X0
	0x039BA3F0 TBNZ X8, 0x0, 0x39BA414
	0x039BA3F4 ADRP X0, 0x739000
	0x039BA3F8 LDR X0, [X0 + 0xA28]
	0x039BA3FC BL 0x1C16CF4
	0x039BA400 ADRP X0, 0x798000
	0x039BA404 LDR X0, [X0 + 0x390]
	0x039BA408 BL 0x1C16CF4
	0x039BA40C MOVZ W8, 0x1
	0x039BA410 STRB W8, [X20 + 0xC88]
	0x039BA414 LDRB W8, [X19 + 0x141]
	0x039BA418 CBZ W8, 0x39BA438
	0x039BA41C LDRB W8, [X19 + 0x10]
	0x039BA420 CBZ W8, 0x39BA444
	0x039BA424 MOV X0, X19
	0x039BA428 BL 0x39BA374
	0x039BA42C MOV X0, X19
	0x039BA430 BL 0x39BA478
	0x039BA434 STRB W31, [X19 + 0x10]
	0x039BA438 LDP X20, X19, [X31 + 0x10]
	0x039BA43C LDR X30, [X31], #0x20
	0x039BA440 RET
	0x039BA444 ADRP X8, 0x739000
	0x039BA448 LDR X8, [X8 + 0xA28]
	0x039BA44C LDR X0, [X8]
	0x039BA450 LDR W8, [X0 + 0xE0]
	0x039BA454 CBNZ W8, 0x39BA45C
	0x039BA458 BL 0x1C16DFC
	0x039BA45C ADRP X8, 0x798000
	0x039BA460 LDR X8, [X8 + 0x390]
	0x039BA464 LDP X20, X19, [X31 + 0x10]
	0x039BA468 MOV X1, X31
	0x039BA46C LDR X0, [X8]
	0x039BA470 LDR X30, [X31], #0x20
	0x039BA474 B 0x3C0649C
	0x039BA478 STP X30, X21, [X31 - 0x20]!
	0x039BA47C STP X20, X19, [X31 + 0x10]
	0x039BA480 ADRP X21, 0xA27000
	0x039BA484 ADRP X20, 0x761000
	0x039BA488 LDRB W8, [X21 + 0xCA8]
	0x039BA48C LDR X20, [X20 + 0x8F8]
	0x039BA490 MOV X19, X0
	0x039BA494 TBNZ X8, 0x0, 0x39BA4AC
	0x039BA498 ADRP X0, 0x761000
	0x039BA49C LDR X0, [X0 + 0x8F8]
	0x039BA4A0 BL 0x1C16CF4
	0x039BA4A4 MOVZ W8, 0x1
	0x039BA4A8 STRB W8, [X21 + 0xCA8]
	0x039BA4AC MOVZ W1, 0x1
	0x039BA4B0 MOV X0, X19
	0x039BA4B4 BL 0x39C16D8
	0x039BA4B8 LDR X0, [X20]
	0x039BA4BC LDR X20, [X19 + 0x1B0]
	0x039BA4C0 LDR W8, [X0 + 0xE0]
	0x039BA4C4 CBNZ W8, 0x39BA4CC
	0x039BA4C8 BL 0x1C16DFC
	0x039BA4CC MOV X0, X20
	0x039BA4D0 MOV X1, X31
	0x039BA4D4 BL 0x39E1DF8
	0x039BA4D8 LDR X0, [X19 + 0x1C0]
	0x039BA4DC LDP X20, X19, [X31 + 0x10]
	0x039BA4E0 MOV X1, X31
	0x039BA4E4 LDP X30, X21, [X31], #0x20
	0x039BA4E8 B 0x39E1DF8
	0x039BA4EC STR X30, [X31 - 0x10]!
	0x039BA4F0 LDRB W8, [X0 + 0x141]
	0x039BA4F4 CBZ W8, 0x39BA544
	0x039BA4F8 LDR X8, [X0 + 0x38]
	0x039BA4FC CBZ X8, 0x39BA56C
	0x039BA500 LDR X9, [X0 + 0x40]
	0x039BA504 CBZ X9, 0x39BA56C
	0x039BA508 LDR X10, [X0 + 0x48]
	0x039BA50C CBZ X10, 0x39BA56C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0xA28000
	012 Move W8, [X25+3197]
	013 Move W20, W5
	014 Move X24, X4
	015 Move X22, X3
	016 Move X21, X2
	017 Move X23, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x763000
	024 Move X0, [X0+1264]
	025 Call 0x1C17CF4
	026 Move X0, 0x763000
	027 Move X0, [X0+3336]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X25+3197], W8
	031 Move X26, 0x763000
	032 Move X25, 0x763000
	033 Move X26, [X26+1264]
	034 Move X25, [X25+3336]
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object..ctor, X0
	038 Move X27, 0xA28000
	039 Move W8, [X27+3258]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0x762000
	043 Move X0, [X0+1592]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X27+3258], W8
	047 Move X8, 0x762000
	048 Move X8, [X8+1592]
	049 Subtract W11, W24, W21
	050 And X9, X23, 0
	051 Move X8, [X8]
	052 Move X8, [X8+184]
	053 Move W10, [X8+20]
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move [X19+52], X23
	056 Move [X19+60], W21
	057 Move [X19+64], W20
	058 Add W10, W10, W11
	059 And X11, X8, 0
	060 Add X11, X11, X22
	061 Add X8, X8, X22
	062 And X11, X11, 0
	063 Subtract X8, X8, X23
	064 Subtract X9, X11, X9
	065 Move X11, X9
	066 ShiftRight X11, 32
	067 And X11, X11, 0x7FFFFFFF
	068 NotImplemented "Instruction BFM not yet implemented."
	069 Move [X19+48], W10
	070 Move [X19+40], X9
	071 Move X0, [X26]
	072 Multiply W8, W10, W8
	073 Multiply W20, W8, W11
	074 Add W21, W20, W20
	075 Call 0x1C17F10
	076 Move W2, 12
	077 Move W1, W20
	078 Move X3, X31
	079 Move X22, X0
	080 Call ComputeBuffer..ctor, X0, X1, X2
	081 Move [X19+24], X22
	082 Move X0, [X25]
	083 Move W1, W21
	084 Call 0x1C17D6C
	085 Move W8, W21
	086 ShiftRight W8, 30
	087 And W8, W8, 0x1FFFFFFF
	088 Move [X19+32], X0
	089 Move [X19+68], W31
	090 Move [X19+16], W8
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X24, [X31+32]
	096 Move X23, [X31+40]
	097 Move X26, [X31+16]
	098 Move X25, [X31+24]
	099 Move X30, [X31+80]
	100 Move X27, [X31+88]
	101 Return 

Method: System.Int32 GetFlatIdxForCell(UnityEngine.Vector3Int cellPosition)

Disassembly:
	0x039BA510 LDR X11, [X0 + 0x50]
	0x039BA514 CBZ X11, 0x39BA56C
	0x039BA518 LDR W8, [X8 + 0x10]
	0x039BA51C LDR W9, [X9 + 0x38]
	0x039BA520 LDR X12, [X11 + 0x20]
	0x039BA524 LDR W10, [X10 + 0x10]
	0x039BA528 CBZ X12, 0x39BA54C
	0x039BA52C LDR X11, [X11 + 0x28]
	0x039BA530 CBZ X11, 0x39BA56C
	0x039BA534 LDR W12, [X12 + 0x10]
	0x039BA538 LDR W11, [X11 + 0x10]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move W9, [X0+60]
	003 Move W10, [X0+40]
	004 Move W11, [X0+44]
	005 And X12, X8, 0
	006 Subtract X12, X1, X12
	007 Move X12, X12
	008 ShiftRight X12, 32
	009 And X12, X12, 0x7FFFFFFF
	010 Subtract W9, W2, W9
	011 Subtract W8, W1, W8
	012 NotImplemented "Instruction MADD not yet implemented."
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Return X0

Method: System.Void UpdateCell(System.Int32 cellFlatIdx, UnityEngine.Rendering.ProbeBrickIndex/CellIndexUpdateInfo cellUpdateInfo)

Disassembly:
	0x039BA53C ADD W11, W11, W12
	0x039BA540 B 0x39BA550
	0x039BA544 MOV W0, W31
	0x039BA548 B 0x39BA564
	0x039BA54C MOV W11, W31
	0x039BA550 LDR W12, [X0 + 0xE8]
	0x039BA554 ADD W8, W9, W8
	0x039BA558 ADD W8, W8, W10
	0x039BA55C ADD W8, W8, W11
	0x039BA560 ADD W0, W8, W12
	0x039BA564 LDR X30, [X31], #0x10
	0x039BA568 RET
	0x039BA56C BL 0x1C16F20
	0x039BA570 SUB X31, X31, 0x30
	0x039BA574 STP X30, X21, [X31 + 0x10]
	0x039BA578 STP X20, X19, [X31 + 0x20]
	0x039BA57C ADRP X21, 0xA27000
	0x039BA580 LDRB W8, [X21 + 0xC89]
	0x039BA584 MOV X20, X1
	0x039BA588 MOV X19, X0
	0x039BA58C TBNZ X8, 0x0, 0x39BA5D4
	0x039BA590 ADRP X0, 0x798000
	0x039BA594 LDR X0, [X0 + 0x398]
	0x039BA598 BL 0x1C16CF4
	0x039BA59C ADRP X0, 0x798000
	0x039BA5A0 LDR X0, [X0 + 0x3A0]
	0x039BA5A4 BL 0x1C16CF4
	0x039BA5A8 ADRP X0, 0x798000
	0x039BA5AC LDR X0, [X0 + 0x3A8]
	0x039BA5B0 BL 0x1C16CF4
	0x039BA5B4 ADRP X0, 0x798000
	0x039BA5B8 LDR X0, [X0 + 0x3B0]
	0x039BA5BC BL 0x1C16CF4
	0x039BA5C0 ADRP X0, 0x798000
	0x039BA5C4 LDR X0, [X0 + 0x3B8]
	0x039BA5C8 BL 0x1C16CF4
	0x039BA5CC MOVZ W8, 0x1
	0x039BA5D0 STRB W8, [X21 + 0xC89]
	0x039BA5D4 STR X31, [X31 + 0x8]
	0x039BA5D8 CBZ X20, 0x39BA6D8
	0x039BA5DC LDR X0, [X19 + 0x80]
	0x039BA5E0 CBZ X0, 0x39BA6D8
	0x039BA5E4 ADRP X8, 0x798000
	0x039BA5E8 LDR X8, [X8 + 0x3A0]
	0x039BA5EC LDR W1, [X20 + 0x1C]
	0x039BA5F0 ADD X2, X31, 0x8
	0x039BA5F4 LDR X3, [X8]
	0x039BA5F8 BL 0x2A150AC
	0x039BA5FC TBZ X0, 0x0, 0x39BA6C8
	0x039BA600 LDR X8, [X31 + 0x8]
	0x039BA604 CBZ X8, 0x39BA6D8
	0x039BA608 LDR W9, [X8 + 0x9C]
	0x039BA60C SUB W9, W9, 0x1
	0x039BA610 CMP W9, 0x0
	0x039BA614 STR W9, [X8 + 0x9C]
	0x039BA618 B.GT 0x39BA6C8
	0x039BA61C LDR X0, [X19 + 0x80]
	0x039BA620 CBZ X0, 0x39BA6D8
	0x039BA624 ADRP X8, 0x798000
	0x039BA628 LDR W1, [X20 + 0x1C]
	0x039BA62C LDR X8, [X8 + 0x398]
	0x039BA630 LDR X2, [X8]
	0x039BA634 BL 0x2A14A88
	0x039BA638 LDR X1, [X31 + 0x8]
	0x039BA63C CBZ X1, 0x39BA6D8
	0x039BA640 LDRB W8, [X1 + 0x2C]
	0x039BA644 CBZ W8, 0x39BA670
	0x039BA648 LDR X0, [X19 + 0x238]
	0x039BA64C CBZ X0, 0x39BA6D8
	0x039BA650 ADRP X8, 0x798000
	0x039BA654 LDR X8, [X8 + 0x3A8]
	0x039BA658 LDR X2, [X8]
	0x039BA65C BL 0x2B3FD78
	0x039BA660 LDR X1, [X31 + 0x8]
	0x039BA664 MOV X0, X19
	0x039BA668 BL 0x39BA6DC
	0x039BA66C B 0x39BA688
	0x039BA670 LDR X0, [X19 + 0x240]
	0x039BA674 CBZ X0, 0x39BA6D8
	0x039BA678 ADRP X8, 0x798000
	0x039BA67C LDR X8, [X8 + 0x3A8]
	0x039BA680 LDR X2, [X8]
	0x039BA684 BL 0x2B3FD78
	0x039BA688 LDR X8, [X31 + 0x8]
	0x039BA68C CBZ X8, 0x39BA6D8
	0x039BA690 LDR X0, [X19 + 0x90]
	0x039BA694 CBZ X0, 0x39BA6D8
	0x039BA698 LDR X1, [X8 + 0x18]
	0x039BA69C ADRP X8, 0x798000
	0x039BA6A0 LDR X8, [X8 + 0x3B8]
	0x039BA6A4 LDR X2, [X8]
	0x039BA6A8 BL 0x2493D8C
	0x039BA6AC LDR X0, [X19 + 0x88]
	0x039BA6B0 CBZ X0, 0x39BA6D8
	0x039BA6B4 ADRP X8, 0x798000
	0x039BA6B8 LDR X1, [X31 + 0x8]
	0x039BA6BC LDR X8, [X8 + 0x3B0]
	0x039BA6C0 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X23, 0xA28000
	010 Move X22, 0x798000
	011 Move W8, [X23+3198]
	012 Move X22, [X22+3912]
	013 Move X21, X2
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x799000
	021 Move X0, [X0+824]
	022 Call 0x1C17CF4
	023 Move X0, 0x798000
	024 Move X0, [X0+3912]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3198], W8
	028 Move X0, [X22]
	029 Move [X31+40], X31
	030 Move W24, [X21+8]
	031 Move X22, 0x799000
	032 Move W8, [X0+224]
	033 Move X22, [X22+824]
	034 Move W23, W24
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move W23, [X21+8]
	039 NotImplemented "Instruction SCVTF not yet implemented."
	040 Move S0, 3
	041 Call 0x3EB2B50
	042 Move W9, 0x7F800000
	043 Move [X31+28], W23
	044 Move S1, W9
	045 Move W11, [X21+12]
	046 Move W9, [X21+16]
	047 Move W12, [X21+20]
	048 NotImplemented "Instruction FCVTZS not yet implemented."
	049 Move W10, 0x80000000
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 NotImplemented "Instruction SDIV not yet implemented."
	053 NotImplemented "Instruction SDIV not yet implemented."
	054 NotImplemented "Instruction SDIV not yet implemented."
	055 NotImplemented "Instruction BFM not yet implemented."
	056 Move [X31+8], W11
	057 Move [X31], X10
	058 Move W9, [X21+24]
	059 Move W10, [X21+28]
	060 Move W11, [X21+32]
	061 Move X0, [X22]
	062 NotImplemented "Instruction SDIV not yet implemented."
	063 NotImplemented "Instruction SDIV not yet implemented."
	064 NotImplemented "Instruction BFM not yet implemented."
	065 Move [X31+12], X9
	066 NotImplemented "Instruction SDIV not yet implemented."
	067 Move W8, [X21]
	068 Move [X31+20], W12
	069 Move [X31+24], W8
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Add X0, X31, 0
	075 Add X1, X31, 40
	076 Call IndexMetaData.Pack, X0, X1
	077 Move X13, [X31+40]
	078 Compare X13, 0
	079 JumpIfEqual {113}
	080 Move X9, [X19+32]
	081 Move W11, [X13+24]
	082 Add W10, W20, W20
	083 Move X8, X31
	084 Move X12, X10
	085 ShiftRight X12, 32
	086 And X12, X12, 0x7FFFFFFF
	087 Add X13, X13, 32
	088 Move X14, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {113}
	092 Move W15, [X9+24]
	093 Add X16, X10, X8
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W15, [X13]
	096 Add X8, X8, 1
	097 Add X16, X9, X12
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X12, X12, X14
	100 Move [X16+32], W15
	101 Move W8, 1
	102 Move [X19+68], W8
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X30, [X31+32]
	110 Add X31, X31, 96
	111 Return 
	112 Call 0x1C17F28
	113 Call 0x1C17F20

Method: System.Void MarkCellAsUnloaded(System.Int32 cellFlatIdx)

Disassembly:
	0x039BA7E0 BL 0x1C16CF4
	0x039BA7E4 MOVZ W8, 0x1
	0x039BA7E8 STRB W8, [X21 + 0xC8B]
	0x039BA7EC CBZ X19, 0x39BA82C
	0x039BA7F0 LDRB W8, [X19 + 0x28]
	0x039BA7F4 CBZ W8, 0x39BA820
	0x039BA7F8 LDR X0, [X20 + 0x50]
	0x039BA7FC CBZ X0, 0x39BA82C
	0x039BA800 LDR X1, [X19 + 0x18]
	0x039BA804 BL 0x39B8E58
	0x039BA808 LDR X8, [X19 + 0x18]
	0x039BA80C CBZ X8, 0x39BA82C
	0x039BA810 LDR W9, [X8 + 0x1C]
	0x039BA814 ADD W9, W9, 0x1
	0x039BA818 STP W31, W9, [X8 + 0x18]
	0x039BA81C STRB W31, [X19 + 0x28]
	0x039BA820 LDP X20, X19, [X31 + 0x10]
	0x039BA824 LDP X30, X21, [X31], #0x20
	0x039BA828 RET
	0x039BA82C BL 0x1C16F20
	0x039BA830 STP X30, X21, [X31 - 0x20]!
	0x039BA834 STP X20, X19, [X31 + 0x10]
	0x039BA838 ADRP X21, 0xA27000
	0x039BA83C LDRB W8, [X21 + 0xCA5]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {27}
	005 Move W11, [X8+24]
	006 Add W10, W1, W1
	007 Move X9, X31
	008 Move X12, X10
	009 ShiftRight X12, 32
	010 And X12, X12, 0x7FFFFFFF
	011 Move TEMP, 0
	012 Not TEMP
	013 Move W13, TEMP
	014 Move X14, 1
	015 Add X15, X10, X9
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X9, X9, 1
	018 Add X15, X8, X12
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X12, X12, X14
	021 Move [X15+32], W13
	022 Move W8, 1
	023 Move [X0+68], W8
	024 Move X30, [X31+16]
	025 Return 
	026 Call 0x1C17F28
	027 Call 0x1C17F20

Method: System.Void PushComputeData()

Disassembly:
	0x039BA840 MOV X19, X1
	0x039BA844 MOV X20, X0
	0x039BA848 TBNZ X8, 0x0, 0x39BA884
	0x039BA84C ADRP X0, 0x739000
	0x039BA850 LDR X0, [X0 + 0xA28]
	0x039BA854 BL 0x1C16CF4
	0x039BA858 ADRP X0, 0x798000
	0x039BA85C LDR X0, [X0 + 0x3C8]
	0x039BA860 BL 0x1C16CF4
	0x039BA864 ADRP X0, 0x798000
	0x039BA868 LDR X0, [X0 + 0xD0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Compare X0, 0
	006 JumpIfEqual {14}
	007 Move X1, [X19+32]
	008 Move X2, X31
	009 Call ComputeBuffer.SetData, X0, X1
	010 Move [X19+68], W31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 
	014 Call 0x1C17F20

Method: System.Void GetRuntimeResources(ref UnityEngine.Rendering.ProbeReferenceVolume/RuntimeResources rr)

Disassembly:
	0x039BA86C BL 0x1C16CF4
	0x039BA870 ADRP X0, 0x798000
	0x039BA874 LDR X0, [X0 + 0x3D0]
	0x039BA878 BL 0x1C16CF4
	0x039BA87C MOVZ W8, 0x1
	0x039BA880 STRB W8, [X21 + 0xCA5]
	0x039BA884 CBZ X19, 0x39BA90C
	0x039BA888 LDR X8, [X19 + 0x20]
	0x039BA88C CBZ X8, 0x39BA90C
	0x039BA890 LDR W8, [X8 + 0x18]
	0x039BA894 CBZ W8, 0x39BA8D8
	0x039BA898 LDR X0, [X20 + 0x40]
	0x039BA89C CBZ X0, 0x39BA90C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+68]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {11}
	009 Move X0, X19
	010 Call ProbeCellIndices.PushComputeData, X0
	011 Move X8, [X19+24]
	012 Move [X20+8], X8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Void Cleanup()

Disassembly:
	0x039BA8A0 MOV X1, X19
	0x039BA8A4 BL 0x39B5E70
	0x039BA8A8 LDR X0, [X20 + 0x38]
	0x039BA8AC CBZ X0, 0x39BA90C
	0x039BA8B0 LDR X1, [X19 + 0x20]
	0x039BA8B4 BL 0x39B76D0
	0x039BA8B8 LDR X8, [X19 + 0x20]
	0x039BA8BC CBZ X8, 0x39BA90C
	0x039BA8C0 LDR W9, [X8 + 0x1C]
	0x039BA8C4 LDP X20, X19, [X31 + 0x10]
	0x039BA8C8 ADD W9, W9, 0x1
	0x039BA8CC STP W31, W9, [X8 + 0x18]
	0x039BA8D0 LDP X30, X21, [X31], #0x20
	0x039BA8D4 RET
	0x039BA8D8 ADRP X8, 0x739000
	0x039BA8DC LDR X8, [X8 + 0xA28]
	0x039BA8E0 LDR X0, [X8]
	0x039BA8E4 LDR W8, [X0 + 0xE0]
	0x039BA8E8 CBNZ W8, 0x39BA8F0
	0x039BA8EC BL 0x1C16DFC
	0x039BA8F0 ADRP X8, 0x798000
	0x039BA8F4 LDR X8, [X8 + 0x3D0]
	0x039BA8F8 LDP X20, X19, [X31 + 0x10]
	0x039BA8FC MOV X1, X31
	0x039BA900 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA28000
	006 Move X20, 0x762000
	007 Move W8, [X21+3199]
	008 Move X20, [X20+2296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x762000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3199], W8
	019 Move X0, [X20]
	020 Move X20, [X19+24]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call CoreUtils.SafeRelease, X0
	028 Move [X19+24], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

