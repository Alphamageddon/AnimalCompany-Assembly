Type: UnityEngine.Rendering.VolumeStack

Method: System.Void .ctor()

Disassembly:
	0x039F2320 LDR X22, [X19 + 0x30]
	0x039F2324 MOV X0, X20
	0x039F2328 MOV X1, X31
	0x039F232C BL 0x3C35CB8
	0x039F2330 CBZ X22, 0x39F2438
	0x039F2334 LDR X3, [X24]
	0x039F2338 MOV W1, W0
	0x039F233C MOVZ W2, 0x1
	0x039F2340 MOV X0, X22
	0x039F2344 BL 0x29FE5B8
	0x039F2348 ADD W21, W21, 0x1
	0x039F234C CMP W25, W21
	0x039F2350 B.EQ 0x39F2360
	0x039F2354 LDR X0, [X19 + 0x28]
	0x039F2358 CBNZ X0, 0x39F2284
	0x039F235C B 0x39F2438
	0x039F2360 LDR X21, [X19 + 0x20]
	0x039F2364 MOV X0, X20
	0x039F2368 MOV X1, X31
	0x039F236C BL 0x3C35CB8
	0x039F2370 CBZ X21, 0x39F2438
	0x039F2374 ADRP X8, 0x761000
	0x039F2378 LDR X2, [X31 + 0x8]
	0x039F237C LDR X8, [X8 + 0x8B0]
	0x039F2380 MOV W1, W0
	0x039F2384 MOV X0, X21
	0x039F2388 LDR X3, [X8]
	0x039F238C BL 0x2A1368C
	0x039F2390 LDR X21, [X19 + 0x30]
	0x039F2394 MOV X0, X20
	0x039F2398 MOV X1, X31
	0x039F239C BL 0x3C35CB8
	0x039F23A0 CBZ X21, 0x39F2438

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9F0000
	007 Move X22, 0x762000
	008 Move X20, 0x762000
	009 Move W8, [X21+3766]
	010 Move X22, [X22+2056]
	011 Move X20, [X20+2064]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x762000
	018 Move X0, [X0+2064]
	019 Call 0x1C17CF4
	020 Move X0, 0x762000
	021 Move X0, [X0+2056]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3766], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Dictionary`2<Object, Object>..ctor, X0
	030 Move W8, 1
	031 Move [X19+16], X20
	032 Move [X19+32], W8
	033 Move X0, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+48]
	040 Call Object..ctor, X0
	041 Return 

Method: System.Void Clear()

Disassembly:
	0x039F6328 STR X30, [X31 - 0x30]!
	0x039F632C STP X22, X21, [X31 + 0x10]
	0x039F6330 STP X20, X19, [X31 + 0x20]
	0x039F6334 ADRP X22, 0x9EB000
	0x039F6338 LDRB W8, [X22 + 0xEC0]
	0x039F633C MOV X20, X2
	0x039F6340 MOV W21, W1
	0x039F6344 MOV X19, X0
	0x039F6348 TBNZ X8, 0x0, 0x39F6360
	0x039F634C ADRP X0, 0x75A000
	0x039F6350 LDR X0, [X0 + 0x778]
	0x039F6354 BL 0x1C16CF4
	0x039F6358 MOVZ W8, 0x1
	0x039F635C STRB W8, [X22 + 0xEC0]
	0x039F6360 TBNZ X21, 0x0, 0x39F6388
	0x039F6364 LDR X8, [X19 + 0x68]
	0x039F6368 CBZ X8, 0x39F6408
	0x039F636C LDRB W8, [X8 + 0x120]
	0x039F6370 CBZ W8, 0x39F6388
	0x039F6374 LDR X0, [X19 + 0x80]
	0x039F6378 CBZ X0, 0x39F6408
	0x039F637C MOV X1, X20
	0x039F6380 BL 0x39F640C
	0x039F6384 TBZ X0, 0x0, 0x39F63BC
	0x039F6388 LDR X0, [X19 + 0x60]
	0x039F638C CBZ X0, 0x39F6408
	0x039F6390 LDR X8, [X0]
	0x039F6394 LDP S2, S3, [X19 + 0x38]
	0x039F6398 LDP S0, S1, [X19 + 0x30]
	0x039F639C LDR X9, [X8 + 0x2A8]
	0x039F63A0 LDR X1, [X8 + 0x2B0]
	0x039F63A4 BLR X9
	0x039F63A8 LDP X20, X19, [X31 + 0x20]
	0x039F63AC LDP X22, X21, [X31 + 0x10]
	0x039F63B0 MOVZ W0, 0x1
	0x039F63B4 LDR X30, [X31], #0x30
	0x039F63B8 RET
	0x039F63BC LDR X0, [X19 + 0x80]
	0x039F63C0 CBZ X0, 0x39F6408
	0x039F63C4 BL 0x39F650C
	0x039F63C8 ADRP X8, 0x75A000
	0x039F63CC LDR X8, [X8 + 0x778]
	0x039F63D0 MOV X19, X0
	0x039F63D4 LDR X8, [X8]
	0x039F63D8 LDR W9, [X8 + 0xE0]
	0x039F63DC CBNZ W9, 0x39F63E8
	0x039F63E0 MOV X0, X8
	0x039F63E4 BL 0x1C16DFC
	0x039F63E8 MOV X0, X31
	0x039F63EC BL 0x399C120
	0x039F63F0 CBZ X0, 0x39F6408
	0x039F63F4 MOV X1, X19
	0x039F63F8 MOV W2, W31
	0x039F63FC MOV X3, X31
	0x039F6400 BL 0x39A9954
	0x039F6404 B 0x39F63A8
	0x039F6408 BL 0x1C16F20
	0x039F640C STP X30, X23, [X31 - 0x30]!
	0x039F6410 STP X22, X21, [X31 + 0x10]
	0x039F6414 STP X20, X19, [X31 + 0x20]
	0x039F6418 ADRP X21, 0x9EB000
	0x039F641C ADRP X22, 0x75D000
	0x039F6420 LDRB W8, [X21 + 0xEE0]
	0x039F6424 LDR X22, [X22 + 0xA78]
	0x039F6428 MOV X20, X1
	0x039F642C MOV X19, X0
	0x039F6430 TBNZ X8, 0x0, 0x39F646C
	0x039F6434 ADRP X0, 0x75D000
	0x039F6438 LDR X0, [X0 + 0xA80]
	0x039F643C BL 0x1C16CF4
	0x039F6440 ADRP X0, 0x75D000
	0x039F6444 LDR X0, [X0 + 0xA88]
	0x039F6448 BL 0x1C16CF4
	0x039F644C ADRP X0, 0x75D000
	0x039F6450 LDR X0, [X0 + 0xA90]
	0x039F6454 BL 0x1C16CF4
	0x039F6458 ADRP X0, 0x75D000
	0x039F645C LDR X0, [X0 + 0xA78]
	0x039F6460 BL 0x1C16CF4
	0x039F6464 MOVZ W8, 0x1
	0x039F6468 STRB W8, [X21 + 0xEE0]
	0x039F646C LDR X0, [X22]
	0x039F6470 BL 0x1C16F10
	0x039F6474 MOV X1, X31
	0x039F6478 MOV X21, X0
	0x039F647C BL 0x33BDD8C
	0x039F6480 CBZ X21, 0x39F6508
	0x039F6484 STR X20, [X21 + 0x10]
	0x039F6488 LDR X0, [X19 + 0x20]
	0x039F648C CBZ X0, 0x39F6508
	0x039F6490 MOV X1, X31
	0x039F6494 BL 0x3C40C8C
	0x039F6498 CBZ W0, 0x39F64F8
	0x039F649C ADRP X20, 0x75D000
	0x039F64A0 ADRP X22, 0x75D000
	0x039F64A4 ADRP X23, 0x75D000
	0x039F64A8 LDR X20, [X20 + 0xA88]
	0x039F64AC LDR X22, [X22 + 0xA90]
	0x039F64B0 LDR X23, [X23 + 0xA80]
	0x039F64B4 MOV X0, X19
	0x039F64B8 BL 0x39F96E0
	0x039F64BC LDR X8, [X20]
	0x039F64C0 MOV X19, X0
	0x039F64C4 MOV X0, X8
	0x039F64C8 BL 0x1C16F10
	0x039F64CC LDR X2, [X22]
	0x039F64D0 MOV X1, X21
	0x039F64D4 MOV X3, X31
	0x039F64D8 MOV X20, X0
	0x039F64DC BL 0x2D2F428
	0x039F64E0 LDR X2, [X23]
	0x039F64E4 MOV X0, X19
	0x039F64E8 MOV X1, X20
	0x039F64EC BL 0x21BFABC
	0x039F64F0 CMP W0, 0x0
	0x039F64F4 CSET W0, GT
	0x039F64F8 LDP X20, X19, [X31 + 0x20]
	0x039F64FC LDP X22, X21, [X31 + 0x10]
	0x039F6500 LDP X30, X23, [X31], #0x30
	0x039F6504 RET
	0x039F6508 BL 0x1C16F20
	0x039F650C STR X30, [X31 - 0x20]!
	0x039F6510 STP X20, X19, [X31 + 0x10]
	0x039F6514 ADRP X20, 0x9EB000
	0x039F6518 LDRB W8, [X20 + 0xEDF]
	0x039F651C MOV X19, X0
	0x039F6520 TBNZ X8, 0x0, 0x39F6544
	0x039F6524 ADRP X0, 0x75D000
	0x039F6528 LDR X0, [X0 + 0xA98]
	0x039F652C BL 0x1C16CF4
	0x039F6530 ADRP X0, 0x75D000
	0x039F6534 LDR X0, [X0 + 0xAA0]
	0x039F6538 BL 0x1C16CF4
	0x039F653C MOVZ W8, 0x1
	0x039F6540 STRB W8, [X20 + 0xEDF]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X20, 0x9EC000
	010 Move W8, [X20+3767]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x726000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x75E000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0x75E000
	023 Move X0, [X0+2136]
	024 Call 0x1C17CF4
	025 Move X0, 0x75E000
	026 Move X0, [X0+2144]
	027 Call 0x1C17CF4
	028 Move X0, 0x75E000
	029 Move X0, [X0+2152]
	030 Call 0x1C17CF4
	031 Move X0, 0x75E000
	032 Move X0, [X0+2160]
	033 Call 0x1C17CF4
	034 Move X0, 0x75E000
	035 Move X0, [X0+2176]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3767], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move X0, [X19+16]
	044 Compare X0, 0
	045 JumpIfEqual {126}
	046 Move X8, 0x75E000
	047 Move X8, [X8+2136]
	048 Move X21, 0x75E000
	049 Move X21, [X21+2152]
	050 Move X24, 0x726000
	051 Move X1, [X8]
	052 Move X22, 0x75E000
	053 Move X23, 0x75E000
	054 Move X24, [X24+2296]
	055 Move X22, [X22+2520]
	056 Move X23, [X23+2144]
	057 Add X8, X31, 8
	058 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move X8, [X31+40]
	062 Move [X31+48], V0
	063 Move [X31+56], V1
	064 Move [X31+80], X8
	065 Move X1, [X21]
	066 Add X0, X31, 48
	067 Call Enumerator<Object, Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {81}
	072 Move X0, [X24]
	073 Move X20, [X31+72]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X20
	079 Move X1, X31
	080 Call CoreUtils.Destroy, X0
	081 Move X1, [X23]
	082 Add X0, X31, 48
	083 Call Enumerator<Object, Object>.Dispose, X0
	084 Move X0, [X19+16]
	085 Compare X0, 0
	086 JumpIfEqual {126}
	087 Move X1, [X22]
	088 Call Dictionary`2<Object, Object>.Clear, X0
	089 Move X21, [X19+24]
	090 Compare X21, 0
	091 JumpIfEqual {116}
	092 Move X8, [X21+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X22, X31
	095 Move X20, X31
	096 And X8, X8, 0
	097 Add X23, X21, 40
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X9, [X23]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {112}
	104 Compare X20, 0
	105 JumpIfEqual {126}
	106 Move X8, [X20]
	107 Move X0, X20
	108 Move X9, [X8+488]
	109 Move X1, [X8+496]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move W8, [X21+24]
	112 Add X22, X22, 1
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add X23, X23, 16
	115 Move [X19+24], X31
	116 Move X20, [X31+144]
	117 Move X19, [X31+152]
	118 Move X22, [X31+128]
	119 Move X21, [X31+136]
	120 Move X24, [X31+112]
	121 Move X23, [X31+120]
	122 Move X30, [X31+96]
	123 Add X31, X31, 160
	124 Return 
	125 Call 0x1C17F28
	126 Call 0x1C17F20
	127 Move X21, X0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X21
	130 Call 0x3EB2AD0
	131 Move X20, [X0]
	132 Call 0x3EB2AE0
	133 Move X1, [X23]
	134 Add X0, X31, 48
	135 Call Enumerator<Object, Object>.Dispose, X0
	136 Compare X20, 0
	137 JumpIfEqual {84}
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Move X20, X31
	141 Move X21, X0
	142 Move X1, [X23]
	143 Add X0, X31, 48
	144 Call Enumerator<Object, Object>.Dispose, X0
	145 Compare X20, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X21
	148 Call 0x1D2D690
	149 Move X0, X20
	150 Call 0x1C17F18
	151 Call 0x1991590

Method: System.Void Reload(System.Collections.Generic.List`1<UnityEngine.Rendering.VolumeComponent> componentDefaultStates)

Disassembly:
	0x039F23A4 ADRP X8, 0x761000
	0x039F23A8 LDR X8, [X8 + 0x8C0]
	0x039F23AC MOV W1, W0
	0x039F23B0 ADD X2, X31, 0x4
	0x039F23B4 MOV X0, X21
	0x039F23B8 LDR X3, [X8]
	0x039F23BC BL 0x29FFF10
	0x039F23C0 LDRB W8, [X31 + 0x4]
	0x039F23C4 AND W8, W0, W8, 0x0
	0x039F23C8 TBZ X8, 0x0, 0x39F2418
	0x039F23CC LDR X19, [X19 + 0x30]
	0x039F23D0 MOV X0, X20
	0x039F23D4 MOV X1, X31
	0x039F23D8 BL 0x3C35CB8
	0x039F23DC CBZ X19, 0x39F2438
	0x039F23E0 LDR X3, [X24]
	0x039F23E4 ADRP X20, 0x72B000
	0x039F23E8 LDR X20, [X20 + 0xFC0]
	0x039F23EC MOV W1, W0
	0x039F23F0 MOV X0, X19
	0x039F23F4 MOV W2, W31
	0x039F23F8 BL 0x29FE5B8
	0x039F23FC LDR X0, [X20]
	0x039F2400 LDR X19, [X31 + 0x8]
	0x039F2404 LDR W8, [X0 + 0xE0]
	0x039F2408 CBNZ W8, 0x39F2410
	0x039F240C BL 0x1C16DFC
	0x039F2410 MOV X0, X19
	0x039F2414 BL 0x39F2570
	0x039F2418 LDR X0, [X31 + 0x8]
	0x039F241C LDP X20, X19, [X31 + 0x50]
	0x039F2420 LDP X22, X21, [X31 + 0x40]
	0x039F2424 LDP X24, X23, [X31 + 0x30]
	0x039F2428 LDP X26, X25, [X31 + 0x20]
	0x039F242C LDP X30, X27, [X31 + 0x10]
	0x039F2430 ADD X31, X31, 0x60
	0x039F2434 RET
	0x039F2438 BL 0x1C16F20
	0x039F243C STR X30, [X31 - 0x30]!
	0x039F2440 STP X22, X21, [X31 + 0x10]
	0x039F2444 STP X20, X19, [X31 + 0x20]
	0x039F2448 ADRP X21, 0x9EF000
	0x039F244C ADRP X22, 0x761000
	0x039F2450 LDRB W8, [X21 + 0xE74]
	0x039F2454 LDR X22, [X22 + 0x788]
	0x039F2458 MOV X20, X1
	0x039F245C MOV X19, X0
	0x039F2460 TBNZ X8, 0x0, 0x39F24A8
	0x039F2464 ADRP X0, 0x761000
	0x039F2468 LDR X0, [X0 + 0x8C8]
	0x039F246C BL 0x1C16CF4
	0x039F2470 ADRP X0, 0x761000
	0x039F2474 LDR X0, [X0 + 0x8D0]
	0x039F2478 BL 0x1C16CF4
	0x039F247C ADRP X0, 0x761000
	0x039F2480 LDR X0, [X0 + 0x8D8]
	0x039F2484 BL 0x1C16CF4
	0x039F2488 ADRP X0, 0x761000
	0x039F248C LDR X0, [X0 + 0x8E0]
	0x039F2490 BL 0x1C16CF4
	0x039F2494 ADRP X0, 0x761000
	0x039F2498 LDR X0, [X0 + 0x788]
	0x039F249C BL 0x1C16CF4
	0x039F24A0 MOVZ W8, 0x1
	0x039F24A4 STRB W8, [X21 + 0xE74]
	0x039F24A8 AND X1, X20, 0x0
	0x039F24AC MOV X0, X19
	0x039F24B0 BL 0x39F2140
	0x039F24B4 LDR X8, [X22]
	0x039F24B8 MOV X19, X0
	0x039F24BC LDR W9, [X8 + 0xE0]
	0x039F24C0 CBNZ W9, 0x39F24D0
	0x039F24C4 MOV X0, X8
	0x039F24C8 BL 0x1C16DFC
	0x039F24CC LDR X8, [X22]
	0x039F24D0 LDR X9, [X8 + 0xB8]
	0x039F24D4 LDR X20, [X9 + 0x18]
	0x039F24D8 CBNZ X20, 0x39F2530
	0x039F24DC LDR W9, [X8 + 0xE0]
	0x039F24E0 CBNZ W9, 0x39F24F0
	0x039F24E4 MOV X0, X8
	0x039F24E8 BL 0x1C16DFC
	0x039F24EC LDR X8, [X22]
	0x039F24F0 ADRP X9, 0x761000
	0x039F24F4 LDR X8, [X8 + 0xB8]
	0x039F24F8 LDR X9, [X9 + 0x8D8]
	0x039F24FC LDR X21, [X8]
	0x039F2500 LDR X0, [X9]
	0x039F2504 BL 0x1C16F10
	0x039F2508 ADRP X8, 0x761000
	0x039F250C LDR X8, [X8 + 0x8E0]
	0x039F2510 MOV X1, X21
	0x039F2514 MOV X3, X31
	0x039F2518 MOV X20, X0
	0x039F251C LDR X2, [X8]
	0x039F2520 BL 0x24AD1FC
	0x039F2524 LDR X8, [X22]
	0x039F2528 LDR X8, [X8 + 0xB8]
	0x039F252C STR X20, [X8 + 0x18]
	0x039F2530 CBZ X19, 0x39F256C
	0x039F2534 ADRP X8, 0x761000
	0x039F2538 LDR X8, [X8 + 0x8C8]
	0x039F253C ADRP X21, 0x761000
	0x039F2540 MOV X0, X19
	0x039F2544 MOV X1, X20
	0x039F2548 LDR X2, [X8]
	0x039F254C LDR X21, [X21 + 0x8D0]
	0x039F2550 BL 0x301D8DC
	0x039F2554 LDR X1, [X21]
	0x039F2558 MOV X0, X19
	0x039F255C LDP X20, X19, [X31 + 0x20]
	0x039F2560 LDP X22, X21, [X31 + 0x10]
	0x039F2564 LDR X30, [X31], #0x30
	0x039F2568 B 0x301DDC4
	0x039F256C BL 0x1C16F20
	0x039F2570 STR X30, [X31 - 0x50]!
	0x039F2574 STP X26, X25, [X31 + 0x10]
	0x039F2578 STP X24, X23, [X31 + 0x20]
	0x039F257C STP X22, X21, [X31 + 0x30]
	0x039F2580 STP X20, X19, [X31 + 0x40]
	0x039F2584 ADRP X20, 0x9EF000
	0x039F2588 LDRB W8, [X20 + 0xE76]
	0x039F258C MOV X19, X0
	0x039F2590 TBNZ X8, 0x0, 0x39F25C0
	0x039F2594 ADRP X0, 0x761000
	0x039F2598 LDR X0, [X0 + 0x888]
	0x039F259C BL 0x1C16CF4
	0x039F25A0 ADRP X0, 0x761000
	0x039F25A4 LDR X0, [X0 + 0x8A8]
	0x039F25A8 BL 0x1C16CF4
	0x039F25AC ADRP X0, 0x761000
	0x039F25B0 LDR X0, [X0 + 0x8E8]
	0x039F25B4 BL 0x1C16CF4
	0x039F25B8 MOVZ W8, 0x1
	0x039F25BC STRB W8, [X20 + 0xE76]
	0x039F25C0 CBZ X19, 0x39F26A0
	0x039F25C4 LDR W8, [X19 + 0x18]
	0x039F25C8 CMP W8, 0x2
	0x039F25CC B.LT 0x39F2688
	0x039F25D0 ADRP X25, 0x761000
	0x039F25D4 ADRP X26, 0x761000
	0x039F25D8 LDR X25, [X25 + 0x8A8]
	0x039F25DC LDR X26, [X26 + 0x8E8]
	0x039F25E0 MOVZ W20, 0x1
	0x039F25E4 MOVZ W24, 0x2
	0x039F25E8 LDR X2, [X25]
	0x039F25EC MOV X0, X19
	0x039F25F0 MOV W1, W20
	0x039F25F4 BL 0x301BCCC
	0x039F25F8 MOV X21, X0
	0x039F25FC MOV W22, W24
	0x039F2600 LDR X2, [X25]
	0x039F2604 SUB W23, W22, 0x2
	0x039F2608 MOV X0, X19
	0x039F260C MOV W1, W23
	0x039F2610 BL 0x301BCCC
	0x039F2614 CBZ X0, 0x39F26A0
	0x039F2618 CBZ X21, 0x39F26A0
	0x039F261C LDR V0, [X0 + 0x24]
	0x039F2620 LDR V1, [X21 + 0x24]
	0x039F2624 SUB W22, W22, 0x1
	0x039F2628 FCMP S0, S1
	0x039F262C B.LE 0x39F2660
	0x039F2630 LDR X2, [X25]
	0x039F2634 MOV X0, X19
	0x039F2638 MOV W1, W23
	0x039F263C BL 0x301BCCC
	0x039F2640 LDR X3, [X26]
	0x039F2644 MOV X2, X0
	0x039F2648 MOV X0, X19
	0x039F264C MOV W1, W22
	0x039F2650 BL 0x301BD20
	0x039F2654 CMP W22, 0x2
	0x039F2658 B.GE 0x39F2600
	0x039F265C MOV W22, W31
	0x039F2660 LDR X3, [X26]
	0x039F2664 MOV X0, X19
	0x039F2668 MOV W1, W22
	0x039F266C MOV X2, X21
	0x039F2670 BL 0x301BD20
	0x039F2674 LDR W8, [X19 + 0x18]
	0x039F2678 ADD W20, W20, 0x1
	0x039F267C ADD W24, W24, 0x1
	0x039F2680 CMP W20, W8
	0x039F2684 B.LT 0x39F25E8
	0x039F2688 LDP X20, X19, [X31 + 0x40]
	0x039F268C LDP X22, X21, [X31 + 0x30]
	0x039F2690 LDP X24, X23, [X31 + 0x20]
	0x039F2694 LDP X26, X25, [X31 + 0x10]
	0x039F2698 LDR X30, [X31], #0x50
	0x039F269C RET
	0x039F26A0 BL 0x1C16F20
	0x039F26A4 MOVZ W0, 0x1
	0x039F26A8 RET
	0x039F26AC STR X30, [X31 - 0x50]!
	0x039F26B0 STP X26, X25, [X31 + 0x10]
	0x039F26B4 STP X24, X23, [X31 + 0x20]
	0x039F26B8 STP X22, X21, [X31 + 0x30]
	0x039F26BC STP X20, X19, [X31 + 0x40]
	0x039F26C0 ADRP X20, 0x9EF000
	0x039F26C4 ADRP X19, 0x761000
	0x039F26C8 LDRB W8, [X20 + 0xE77]
	0x039F26CC LDR X19, [X19 + 0x788]
	0x039F26D0 TBNZ X8, 0x0, 0x39F273C
	0x039F26D4 ADRP X0, 0x707000
	0x039F26D8 LDR X0, [X0 + 0xBE0]
	0x039F26DC BL 0x1C16CF4
	0x039F26E0 ADRP X0, 0x707000
	0x039F26E4 LDR X0, [X0 + 0xBD8]
	0x039F26E8 BL 0x1C16CF4
	0x039F26EC ADRP X0, 0x761000
	0x039F26F0 LDR X0, [X0 + 0x8F0]
	0x039F26F4 BL 0x1C16CF4
	0x039F26F8 ADRP X0, 0x761000
	0x039F26FC LDR X0, [X0 + 0x8F8]
	0x039F2700 BL 0x1C16CF4
	0x039F2704 ADRP X0, 0x761000
	0x039F2708 LDR X0, [X0 + 0x900]
	0x039F270C BL 0x1C16CF4
	0x039F2710 ADRP X0, 0x761000
	0x039F2714 LDR X0, [X0 + 0x908]
	0x039F2718 BL 0x1C16CF4
	0x039F271C ADRP X0, 0x761000
	0x039F2720 LDR X0, [X0 + 0x788]
	0x039F2724 BL 0x1C16CF4
	0x039F2728 ADRP X0, 0x72B000
	0x039F272C LDR X0, [X0 + 0xFC0]
	0x039F2730 BL 0x1C16CF4
	0x039F2734 MOVZ W8, 0x1
	0x039F2738 STRB W8, [X20 + 0xE77]
	0x039F273C LDR X0, [X19]
	0x039F2740 ADRP X26, 0x761000
	0x039F2744 ADRP X20, 0x761000
	0x039F2748 ADRP X25, 0x761000
	0x039F274C ADRP X24, 0x761000
	0x039F2750 ADRP X21, 0x72B000
	0x039F2754 ADRP X23, 0x707000
	0x039F2758 ADRP X22, 0x707000
	0x039F275C LDR X26, [X26 + 0x8F0]
	0x039F2760 LDR X20, [X20 + 0x908]
	0x039F2764 LDR X25, [X25 + 0x900]
	0x039F2768 LDR W8, [X0 + 0xE0]
	0x039F276C LDR X24, [X24 + 0x8F8]
	0x039F2770 LDR X21, [X21 + 0xFC0]
	0x039F2774 LDR X23, [X23 + 0xBD8]
	0x039F2778 LDR X22, [X22 + 0xBE0]
	0x039F277C CBNZ W8, 0x39F2788
	0x039F2780 BL 0x1C16DFC
	0x039F2784 LDR X0, [X19]
	0x039F2788 LDR X8, [X0 + 0xB8]
	0x039F278C LDR X0, [X26]
	0x039F2790 LDR X19, [X8]
	0x039F2794 BL 0x1C16F10
	0x039F2798 LDR X2, [X20]
	0x039F279C MOV X1, X19
	0x039F27A0 MOV X3, X31
	0x039F27A4 MOV X20, X0
	0x039F27A8 BL 0x2D27AA8
	0x039F27AC LDR X0, [X25]
	0x039F27B0 BL 0x1C16F10
	0x039F27B4 LDR X2, [X24]
	0x039F27B8 MOV X1, X20
	0x039F27BC MOV X19, X0
	0x039F27C0 BL 0x2EE87EC
	0x039F27C4 LDR X8, [X21]
	0x039F27C8 LDR X8, [X8 + 0xB8]
	0x039F27CC STR X19, [X8]
	0x039F27D0 LDR X0, [X23]
	0x039F27D4 BL 0x1C16F10
	0x039F27D8 LDR X1, [X22]
	0x039F27DC MOV X19, X0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31], X0
	015 Move X22, 0x9F0000
	016 Move X20, 0x762000
	017 Move X19, 0x762000
	018 Move W8, [X22+3768]
	019 Move X20, [X20+2072]
	020 Move X19, [X19+2080]
	021 Move X21, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {70}
	026 Move X0, 0x762000
	027 Move X0, [X0+2088]
	028 Call 0x1C17CF4
	029 Move X0, 0x72B000
	030 Move X0, [X0+2440]
	031 Call 0x1C17CF4
	032 Move X0, 0x72B000
	033 Move X0, [X0+2448]
	034 Call 0x1C17CF4
	035 Move X0, 0x72B000
	036 Move X0, [X0+2456]
	037 Call 0x1C17CF4
	038 Move X0, 0x762000
	039 Move X0, [X0+2096]
	040 Call 0x1C17CF4
	041 Move X0, 0x72B000
	042 Move X0, [X0+2464]
	043 Call 0x1C17CF4
	044 Move X0, 0x762000
	045 Move X0, [X0+2104]
	046 Call 0x1C17CF4
	047 Move X0, 0x762000
	048 Move X0, [X0+2080]
	049 Call 0x1C17CF4
	050 Move X0, 0x762000
	051 Move X0, [X0+1800]
	052 Call 0x1C17CF4
	053 Move X0, 0x760000
	054 Move X0, [X0+1912]
	055 Call 0x1C17CF4
	056 Move X0, 0x762000
	057 Move X0, [X0+2072]
	058 Call 0x1C17CF4
	059 Move X0, 0x72B000
	060 Move X0, [X0+3472]
	061 Call 0x1C17CF4
	062 Move X0, 0x760000
	063 Move X0, [X0+1808]
	064 Call 0x1C17CF4
	065 Move X0, 0x72B000
	066 Move X0, [X0+3480]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X22+3768], W8
	070 Move X22, [X31]
	071 Move [X31+32], X31
	072 Move [X31+40], X31
	073 Move [X31+48], X31
	074 Move X0, X22
	075 Call VolumeStack.Clear, X0
	076 Move W8, 1
	077 Move [X22+32], W8
	078 Move X0, [X20]
	079 Call 0x1C17F10
	080 Move X1, [X19]
	081 Move X20, X0
	082 Call List`1<ValueTuple`2<Object, Object>>..ctor, X0
	083 Compare X21, 0
	084 JumpIfEqual {254}
	085 Move X8, 0x72B000
	086 Move X8, [X8+2464]
	087 Move X27, 0x72B000
	088 Move X29, 0x762000
	089 Move X25, 0x72B000
	090 Move X26, 0x760000
	091 Move X28, 0x72B000
	092 Move X27, [X27+2448]
	093 Move X29, [X29+2088]
	094 Move X25, [X25+3472]
	095 Move X26, [X26+1912]
	096 Move X28, [X28+3480]
	097 Move X1, [X8]
	098 Move X19, 0x762000
	099 Move X19, [X19+2096]
	100 Add X8, X31, 8
	101 Move X0, X21
	102 Call List`1<Object>.GetEnumerator, X0
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Move X8, [X31+24]
	105 Move [X31+2], V0
	106 Move [X31+48], X8
	107 Move X1, [X27]
	108 Add X0, X31, 32
	109 Call Enumerator<Object>.MoveNext, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {216}
	114 Move X21, [X31+48]
	115 Compare X21, 0
	116 JumpIfEqual {252}
	117 Move X0, X21
	118 Move X1, X31
	119 Call "il2cpp_vm_object_is_inst", X0
	120 Move X23, X0
	121 Move X1, X31
	122 Call ScriptableObject.CreateInstance, X0
	123 Move X22, X0
	124 Compare X0, 0
	125 JumpIfEqual {137}
	126 Move X9, 0x760000
	127 Move X8, [X22]
	128 Move X9, [X9+1808]
	129 Move W10, [X8+304]
	130 Move X1, [X9]
	131 Move W9, [X1+304]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, [X8+200]
	134 Add X8, X8, X9
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, [X31]
	138 Move X0, [X8+16]
	139 Compare X0, 0
	140 JumpIfEqual {253}
	141 Move X3, [X29]
	142 Move X1, X23
	143 Move X2, X22
	144 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	145 Compare X22, 0
	146 JumpIfEqual {251}
	147 Move X8, [X22+40]
	148 Compare X8, 0
	149 JumpIfEqual {215}
	150 Move W23, W31
	151 Move W8, [X8+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X22
	154 Call VolumeComponent.get_parameters, X0
	155 Compare X0, 0
	156 JumpIfEqual {246}
	157 Move X2, [X25]
	158 Move W1, W23
	159 Call ReadOnlyCollection`1<Object>.get_Item, X0, X1
	160 Move X24, X0
	161 Move X0, [X21+40]
	162 Compare X0, 0
	163 JumpIfEqual {245}
	164 Move X2, [X26]
	165 Move W1, W23
	166 Call List`1<Object>.get_Item, X0, X1
	167 Compare X0, 0
	168 JumpIfEqual {247}
	169 Move X8, [X0]
	170 Move X9, [X8+504]
	171 Move X1, [X8+512]
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Compare X0, 0
	174 JumpIfEqual {180}
	175 Move X9, [X0]
	176 Move X8, [X28]
	177 Move W11, [X9+304]
	178 Move W10, [X8+304]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X2, X31
	181 Compare X20, 0
	182 JumpIfNotEqual {190}
	183 Move X9, [X9+200]
	184 Add X9, X9, X10
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 NotImplemented "Instruction CSEL not yet implemented."
	188 Compare X20, 0
	189 JumpIfEqual {248}
	190 Move W10, [X20+28]
	191 Move X8, [X20+16]
	192 Move X9, [X19]
	193 Add W10, W10, 1
	194 Move [X20+28], W10
	195 Compare X8, 0
	196 JumpIfEqual {244}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W11, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add W9, W10, 1
	201 Add X8, X8, X10
	202 Move [X20+24], W9
	203 Move [X8+32], X24
	204 Move [X8+40], X2
	205 Move X8, [X9+32]
	206 Move X8, [X8+192]
	207 Move X3, [X8+112]
	208 Move X0, X20
	209 Move X1, X24
	210 Call List`1<ValueTuple`2<Object, Object>>.AddWithResize, X0, X1
	211 Move X8, [X22+40]
	212 Add W23, W23, 1
	213 Compare X8, 0
	214 JumpIfNotEqual {151}
	215 Call 0x1C17F20
	216 Move X8, 0x72B000
	217 Move X8, [X8+2440]
	218 Add X0, X31, 32
	219 Move X1, [X8]
	220 Call Enumerator<Object>.Dispose, X0
	221 Compare X20, 0
	222 JumpIfEqual {254}
	223 Move X8, 0x762000
	224 Move X8, [X8+2104]
	225 Move X0, X20
	226 Move X1, [X8]
	227 Call List`1<ValueTuple`2<Object, Object>>.ToArray, X0
	228 Move X8, [X31]
	229 Move X20, [X31+144]
	230 Move X19, [X31+152]
	231 Move X22, [X31+128]
	232 Move X21, [X31+136]
	233 Move X24, [X31+112]
	234 Move X23, [X31+120]
	235 Move X26, [X31+96]
	236 Move X25, [X31+104]
	237 Move X28, [X31+80]
	238 Move X27, [X31+88]
	239 Move X29, [X31+64]
	240 Move X30, [X31+72]
	241 Move [X8+24], X0
	242 Add X31, X31, 160
	243 Return 
	244 Call 0x1C17F20
	245 Call 0x1C17F20
	246 Call 0x1C17F20
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Move X0, X22
	250 Call 0x1C181E0
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Move X21, X0
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X21
	258 Call 0x3EB2AD0
	259 Move X22, [X0]
	260 Call 0x3EB2AE0
	261 Move X8, 0x72B000
	262 Move X8, [X8+2440]
	263 Add X0, X31, 32
	264 Move X1, [X8]
	265 Call Enumerator<Object>.Dispose, X0
	266 Compare X22, 0
	267 JumpIfEqual {221}
	268 Move X0, X22
	269 Call 0x1C17F18
	270 Move X22, X31
	271 Move X21, X0
	272 Move X8, 0x72B000
	273 Move X8, [X8+2440]
	274 Move X1, [X8]
	275 Add X0, X31, 32
	276 Call Enumerator<Object>.Dispose, X0
	277 Compare X22, 0
	278 JumpIfNotEqual {281}
	279 Move X0, X21
	280 Call 0x1D2D690
	281 Move X0, X22
	282 Call 0x1C17F18
	283 Call 0x1991590

Method: T GetComponent()

Disassembly:
	0x022ADD04 BL 0x2BC434C
	0x022ADD08 CBNZ X21, 0x22ADD14
	0x022ADD0C MOV X0, X20
	0x022ADD10 BL 0x1D2C690
	0x022ADD14 MOV X0, X21
	0x022ADD18 BL 0x1C16F18
	0x022ADD1C BL 0x1990590
	0x022ADD20 STP X29, X30, [X31 - 0x60]!
	0x022ADD24 STP X28, X27, [X31 + 0x10]
	0x022ADD28 STP X26, X25, [X31 + 0x20]
	0x022ADD2C STP X24, X23, [X31 + 0x30]
	0x022ADD30 STP X22, X21, [X31 + 0x40]
	0x022ADD34 STP X20, X19, [X31 + 0x50]
	0x022ADD38 ADD X29, X31, 0x0
	0x022ADD3C SUB X31, X31, 0x40
	0x022ADD40 MRS X8, 0xC000
	0x022ADD44 STP X8, X1, [X29 - 0x20]
	0x022ADD48 LDR X8, [X8 + 0x28]
	0x022ADD4C MOV X19, X3
	0x022ADD50 MOV X22, X2
	0x022ADD54 STUR X8, [X29 - 0x8]
	0x022ADD58 LDR X8, [X3 + 0x38]
	0x022ADD5C STUR X0, [X29 - 0x38]
	0x022ADD60 CBNZ X8, 0x22ADD9C
	0x022ADD64 ADRP X0, 0x1E6F000
	0x022ADD68 LDR X0, [X0 + 0x9D8]
	0x022ADD6C BL 0x1C16CF4
	0x022ADD70 ADRP X0, 0x1E6E000
	0x022ADD74 LDR X0, [X0 + 0xC0]
	0x022ADD78 BL 0x1C16CF4
	0x022ADD7C ADRP X0, 0x1E46000
	0x022ADD80 LDR X0, [X0 + 0x6C0]
	0x022ADD84 BL 0x1C16CF4
	0x022ADD88 LDR X8, [X19 + 0x38]
	0x022ADD8C CBNZ X8, 0x22ADD9C
	0x022ADD90 MOV X0, X19
	0x022ADD94 BL 0x1C5C6E0
	0x022ADD98 LDR X8, [X19 + 0x38]
	0x022ADD9C LDR X0, [X8 + 0x20]
	0x022ADDA0 LDR X8, [X8 + 0x38]
	0x022ADDA4 LDR W20, [X0 + 0xFC]
	0x022ADDA8 LDRB W9, [X0 + 0x135]
	0x022ADDAC LDR W24, [X8 + 0xFC]
	0x022ADDB0 TBNZ X9, 0x0, 0x22ADDC8
	0x022ADDB4 BL 0x1C5C684
	0x022ADDB8 LDR X8, [X19 + 0x38]
	0x022ADDBC LDR W9, [X0 + 0xFC]
	0x022ADDC0 LDR X8, [X8 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {19}
	010 Move X0, 0x1E47000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1E47000
	020 Move X9, [X9+1728]
	021 Move X21, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Move X1, X0
	031 Move X0, X20
	032 Move X2, X31
	033 Call VolumeStack.GetComponent, X0, X1
	034 Move X8, [X19+56]
	035 Move X20, X0
	036 Move X19, [X8+8]
	037 Move W8, [X19+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X19
	043 Call 0x1C5D684
	044 Move X19, X0
	045 Compare X20, 0
	046 JumpIfEqual {55}
	047 Move X0, X20
	048 Move X1, X19
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfNotEqual {56}
	052 Move X0, X20
	053 Move X1, X19
	054 Call 0x1C181E0
	055 Move X0, X31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return X0

Method: UnityEngine.Rendering.VolumeComponent GetComponent(System.Type type)

Disassembly:
	0x039F28E8 MOV X1, X31
	0x039F28EC MOV X2, X31
	0x039F28F0 LDP X30, X21, [X31], #0x20
	0x039F28F4 B 0x3C3883C
	0x039F28F8 STR X30, [X31 - 0x20]!
	0x039F28FC STP X20, X19, [X31 + 0x10]
	0x039F2900 ADRP X19, 0x9EF000
	0x039F2904 ADRP X20, 0x72B000
	0x039F2908 LDRB W8, [X19 + 0xE7A]
	0x039F290C LDR X20, [X20 + 0xFC0]
	0x039F2910 TBNZ X8, 0x0, 0x39F2928
	0x039F2914 ADRP X0, 0x72B000
	0x039F2918 LDR X0, [X0 + 0xFC0]
	0x039F291C BL 0x1C16CF4
	0x039F2920 MOVZ W8, 0x1
	0x039F2924 STRB W8, [X19 + 0xE7A]
	0x039F2928 LDR X0, [X20]
	0x039F292C BL 0x1C16F10
	0x039F2930 MOV X19, X0
	0x039F2934 BL 0x39F0E00
	0x039F2938 MOV X0, X19
	0x039F293C LDP X20, X19, [X31 + 0x10]
	0x039F2940 LDR X30, [X31], #0x20
	0x039F2944 RET
	0x039F2948 RET
	0x039F294C RET
	0x039F2950 LDRB W0, [X0 + 0x10]
	0x039F2954 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9F0000
	007 Move W8, [X21+3769]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x762000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3769], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {36}
	023 Move X8, 0x762000
	024 Move X8, [X8+2128]
	025 Add X2, X31, 8
	026 Move X1, X19
	027 Move X3, [X8]
	028 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	029 Move X0, [X31+8]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add X31, X31, 48
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x039F2800 LDR X30, [X31], #0x50

ISIL:
	001 Call VolumeStack.Clear, X0
	002 Return 

