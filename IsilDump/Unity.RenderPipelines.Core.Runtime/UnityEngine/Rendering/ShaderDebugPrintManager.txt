Type: UnityEngine.Rendering.ShaderDebugPrintManager

Method: System.Int32 DebugValueTypeToElemSize(UnityEngine.Rendering.ShaderDebugPrintManager/DebugValueType type)

Disassembly:
	0x039B2F4C MOV X24, X0
	0x039B2F50 CBZ X0, 0x39B2F68
	0x039B2F54 LDR X8, [X23]
	0x039B2F58 LDR X1, [X8 + 0x40]
	0x039B2F5C MOV X0, X24
	0x039B2F60 BL 0x1C16E00
	0x039B2F64 CBZ X0, 0x39B31F0
	0x039B2F68 LDR W8, [X23 + 0x18]
	0x039B2F6C CBZ W8, 0x39B31A0

ISIL:
	001 Subtract W8, W1, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -48340992
	004 Add X9, X9, 2696
	005 Move W0, [X9]
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Void .ctor()

Disassembly:
	0x039B2F70 STR X24, [X23 + 0x20]
	0x039B2F74 ADRP X9, 0x741000
	0x039B2F78 LDR W8, [X26 + 0x4]
	0x039B2F7C LDR X9, [X9 + 0x758]
	0x039B2F80 STR W8, [X31 + 0x20]
	0x039B2F84 LDR X0, [X9]
	0x039B2F88 ADD X1, X31, 0x20
	0x039B2F8C BL 0x1C16E04
	0x039B2F90 MOV X24, X0
	0x039B2F94 CBZ X0, 0x39B2FAC
	0x039B2F98 LDR X8, [X23]
	0x039B2F9C LDR X1, [X8 + 0x40]
	0x039B2FA0 MOV X0, X24
	0x039B2FA4 BL 0x1C16E00
	0x039B2FA8 CBZ X0, 0x39B31FC
	0x039B2FAC LDR W8, [X23 + 0x18]
	0x039B2FB0 CMP W8, 0x1
	0x039B2FB4 B.LS 0x39B3194
	0x039B2FB8 STR X24, [X23 + 0x28]
	0x039B2FBC ADRP X9, 0x741000
	0x039B2FC0 LDR W8, [X26 + 0x8]
	0x039B2FC4 LDR X9, [X9 + 0x758]
	0x039B2FC8 STR W8, [X31 + 0x1C]
	0x039B2FCC LDR X0, [X9]
	0x039B2FD0 ADD X1, X31, 0x1C
	0x039B2FD4 BL 0x1C16E04
	0x039B2FD8 MOV X24, X0
	0x039B2FDC CBZ X0, 0x39B2FF4
	0x039B2FE0 LDR X8, [X23]
	0x039B2FE4 LDR X1, [X8 + 0x40]
	0x039B2FE8 MOV X0, X24
	0x039B2FEC BL 0x1C16E00
	0x039B2FF0 CBZ X0, 0x39B3208
	0x039B2FF4 LDR W8, [X23 + 0x18]
	0x039B2FF8 CMP W8, 0x2
	0x039B2FFC B.LS 0x39B3198
	0x039B3000 STR X24, [X23 + 0x30]
	0x039B3004 ADRP X9, 0x740000
	0x039B3008 LDR W8, [X26 + 0xC]
	0x039B300C B 0x3EB170C
	0x039B3010 STR W8, [X31 + 0x18]
	0x039B3014 LDR X0, [X9]
	0x039B3018 ADD X1, X31, 0x18
	0x039B301C BL 0x1C16E04
	0x039B3020 ADRP X26, 0x748000
	0x039B3024 LDR X26, [X26 + 0x720]
	0x039B3028 MOV X24, X0
	0x039B302C CBZ X0, 0x39B3044
	0x039B3030 LDR X8, [X23]
	0x039B3034 LDR X1, [X8 + 0x40]
	0x039B3038 MOV X0, X24
	0x039B303C BL 0x1C16E00
	0x039B3040 CBZ X0, 0x39B3214
	0x039B3044 LDR W8, [X23 + 0x18]
	0x039B3048 CMP W8, 0x3
	0x039B304C B.LS 0x39B319C
	0x039B3050 STR X24, [X23 + 0x38]
	0x039B3054 ADRP X8, 0x798000
	0x039B3058 LDR X8, [X8 + 0x88]
	0x039B305C LDR X0, [X8]
	0x039B3060 MOV X1, X23
	0x039B3064 MOV X2, X31
	0x039B3068 BL 0x3227C5C
	0x039B306C MOV X1, X0
	0x039B3070 MOV X0, X21
	0x039B3074 MOV X2, X31
	0x039B3078 BL 0x321B938
	0x039B307C B 0x39B3104
	0x039B3080 ADD X26, X22, W19, 0x2, SXTW
	0x039B3084 LDR V0, [X26]
	0x039B3088 LDR X0, [X24]
	0x039B308C STR S0, [X31 + 0x24]
	0x039B3090 ADD X1, X31, 0x24
	0x039B3094 BL 0x1C16E04
	0x039B3098 MOV X23, X0
	0x039B309C LDR V0, [X26 + 0x4]
	0x039B30A0 LDR X0, [X24]
	0x039B30A4 STR S0, [X31 + 0x20]
	0x039B30A8 ADD X1, X31, 0x20
	0x039B30AC BL 0x1C16E04
	0x039B30B0 MOV X8, X24
	0x039B30B4 MOV X24, X0
	0x039B30B8 LDR V0, [X26 + 0x8]
	0x039B30BC LDR X0, [X8]
	0x039B30C0 STR S0, [X31 + 0x1C]
	0x039B30C4 ADD X1, X31, 0x1C
	0x039B30C8 BL 0x1C16E04
	0x039B30CC ADRP X8, 0x79E000
	0x039B30D0 LDR X8, [X8 + 0xED0]
	0x039B30D4 MOV X3, X0
	0x039B30D8 LDR X0, [X8]
	0x039B30DC MOV X1, X23
	0x039B30E0 MOV X2, X24
	0x039B30E4 MOV X4, X31
	0x039B30E8 BL 0x3227C18
	0x039B30EC MOV X1, X0
	0x039B30F0 ADRP X26, 0x748000
	0x039B30F4 LDR X26, [X26 + 0x720]
	0x039B30F8 MOV X0, X21
	0x039B30FC MOV X2, X31
	0x039B3100 BL 0x321B938
	0x039B3104 MOV X21, X0
	0x039B3108 LDR X1, [X29]
	0x039B310C ADD W24, W19, W28
	0x039B3110 MOV X0, X21
	0x039B3114 MOV X2, X31
	0x039B3118 BL 0x321B938
	0x039B311C MOV X21, X0
	0x039B3120 LDR X20, [X31 + 0x10]
	0x039B3124 B 0x39B280C
	0x039B3128 LDR X9, [X31]
	0x039B312C LDR W8, [X31 + 0x8]
	0x039B3130 TBNZ X8, 0x0, 0x39B3154
	0x039B3134 LDR X8, [X9 + 0x38]
	0x039B3138 STR X21, [X9 + 0x30]
	0x039B313C CBZ X8, 0x39B3250
	0x039B3140 LDR X0, [X8 + 0x40]
	0x039B3144 LDR X9, [X8 + 0x18]
	0x039B3148 LDR X2, [X8 + 0x28]
	0x039B314C MOV X1, X21
	0x039B3150 BLR X9
	0x039B3154 LDP X20, X19, [X31 + 0x90]
	0x039B3158 LDP X22, X21, [X31 + 0x80]
	0x039B315C LDP X24, X23, [X31 + 0x70]
	0x039B3160 LDP X26, X25, [X31 + 0x60]
	0x039B3164 LDP X28, X27, [X31 + 0x50]
	0x039B3168 LDP X29, X30, [X31 + 0x40]
	0x039B316C ADD X31, X31, 0xA0
	0x039B3170 RET
	0x039B3174 MOVZ W8, 0x1
	0x039B3178 STR W8, [X31 + 0x8]
	0x039B317C B 0x39B27C4
	0x039B3180 BL 0x1C16F28
	0x039B3184 BL 0x1C16F28
	0x039B3188 BL 0x1C16F28
	0x039B318C BL 0x1C16F28
	0x039B3190 BL 0x1C16F20
	0x039B3194 BL 0x1C16F28
	0x039B3198 BL 0x1C16F28
	0x039B319C BL 0x1C16F28
	0x039B31A0 BL 0x1C16F28
	0x039B31A4 BL 0x1C16F20
	0x039B31A8 BL 0x1C16F28
	0x039B31AC BL 0x1C16F28
	0x039B31B0 BL 0x1C16F28
	0x039B31B4 BL 0x1C16F28
	0x039B31B8 BL 0x1C16F20
	0x039B31BC BL 0x1C16F20
	0x039B31C0 BL 0x1C16F44
	0x039B31C4 MOV X1, X31
	0x039B31C8 BL 0x1C16DEC
	0x039B31CC BL 0x1C16F44
	0x039B31D0 MOV X1, X31
	0x039B31D4 BL 0x1C16DEC
	0x039B31D8 BL 0x1C16F44
	0x039B31DC MOV X1, X31
	0x039B31E0 BL 0x1C16DEC
	0x039B31E4 BL 0x1C16F44
	0x039B31E8 MOV X1, X31
	0x039B31EC BL 0x1C16DEC
	0x039B31F0 BL 0x1C16F44
	0x039B31F4 MOV X1, X31
	0x039B31F8 BL 0x1C16DEC
	0x039B31FC BL 0x1C16F44
	0x039B3200 MOV X1, X31
	0x039B3204 BL 0x1C16DEC
	0x039B3208 BL 0x1C16F44
	0x039B320C MOV X1, X31
	0x039B3210 BL 0x1C16DEC
	0x039B3214 BL 0x1C16F44

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xA30000
	014 Move X23, 0x7A0000
	015 Move X20, 0x7A0000
	016 Move X22, 0x7A0000
	017 Move X29, 0x7A0000
	018 Move X21, 0x742000
	019 Move W8, [X24+3142]
	020 Move X23, [X23+3648]
	021 Move X20, [X20+3656]
	022 Move X22, [X22+3664]
	023 Move X29, [X29+3672]
	024 Move X21, [X21+2440]
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {68}
	030 Move X0, 0x743000
	031 Move X0, [X0+3688]
	032 Call 0x1C17CF4
	033 Move X0, 0x7A0000
	034 Move X0, [X0+3680]
	035 Call 0x1C17CF4
	036 Move X0, 0x7A0000
	037 Move X0, [X0+3688]
	038 Call 0x1C17CF4
	039 Move X0, 0x7A0000
	040 Move X0, [X0+3696]
	041 Call 0x1C17CF4
	042 Move X0, 0x7A0000
	043 Move X0, [X0+3704]
	044 Call 0x1C17CF4
	045 Move X0, 0x7A0000
	046 Move X0, [X0+3672]
	047 Call 0x1C17CF4
	048 Move X0, 0x79F000
	049 Move X0, [X0+3656]
	050 Call 0x1C17CF4
	051 Move X0, 0x79F000
	052 Move X0, [X0+3664]
	053 Call 0x1C17CF4
	054 Move X0, 0x79F000
	055 Move X0, [X0+3648]
	056 Call 0x1C17CF4
	057 Move X0, 0x79F000
	058 Move X0, [X0+3712]
	059 Call 0x1C17CF4
	060 Move X0, 0x79F000
	061 Move X0, [X0+3720]
	062 Call 0x1C17CF4
	063 Move X0, 0x741000
	064 Move X0, [X0+2440]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X24+3142], W8
	068 Move X24, 0x79F000
	069 Move X26, 0x79F000
	070 Move X28, 0x79F000
	071 Move X27, 0x79F000
	072 Move X24, [X24+3688]
	073 Move X26, [X26+3704]
	074 Move X28, [X28+3696]
	075 Move X27, [X27+3680]
	076 Move X0, [X23]
	077 Move X25, 0x79F000
	078 Move X23, 0x742000
	079 Move X25, [X25+3712]
	080 Move X23, [X23+3688]
	081 Call 0x1C17F10
	082 Move X1, [X20]
	083 Move X20, X0
	084 Call List`1<Object>..ctor, X0
	085 Move [X19+16], X20
	086 Move X0, [X22]
	087 Call 0x1C17F10
	088 Move X1, [X29]
	089 Move X20, X0
	090 Call List`1<AsyncGPUReadbackRequest>..ctor, X0
	091 Move [X19+24], X20
	092 Move X8, [X21]
	093 Move X0, X19
	094 Move X1, X31
	095 Move [X19+48], X8
	096 Call Object..ctor, X0
	097 Move W29, 4
	098 Move X0, [X24]
	099 Move X20, [X19+16]
	100 Call 0x1C17F10
	101 Move W1, 16
	102 Move W2, 0x4000
	103 Move W3, 4
	104 Move X4, X31
	105 Move X21, X0
	106 Call GraphicsBuffer..ctor, X0, X1, X2, X3
	107 Compare X20, 0
	108 JumpIfEqual {185}
	109 Move W10, [X20+28]
	110 Move X8, [X20+16]
	111 Move X9, [X26]
	112 Add W10, W10, 1
	113 Move [X20+28], W10
	114 Compare X8, 0
	115 JumpIfEqual {185}
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Move W11, [X8+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add W9, W10, 1
	120 Add X8, X8, X10
	121 Move [X20+24], W9
	122 Move [X8+32], X21
	123 Move X8, [X9+32]
	124 Move X0, X20
	125 Move X1, X21
	126 Move X8, [X8+192]
	127 Move X2, [X8+112]
	128 Call List`1<Object>.AddWithResize, X0, X1
	129 Move X0, [X19+24]
	130 Compare X0, 0
	131 JumpIfEqual {185}
	132 Move W10, [X0+28]
	133 Move X8, [X0+16]
	134 Move X9, [X28]
	135 Add W10, W10, 1
	136 Move [X0+28], W10
	137 Compare X8, 0
	138 JumpIfEqual {185}
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Move W11, [X8+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Add W9, W10, 1
	143 Add X8, X8, X10
	144 Move [X0+24], W9
	145 Move [X8+32], X31
	146 Move [X8+40], X31
	147 Move X8, [X9+32]
	148 Move X1, X31
	149 Move X2, X31
	150 Move X8, [X8+192]
	151 Move X3, [X8+112]
	152 Call List`1<AsyncGPUReadbackRequest>.AddWithResize, X0, X1
	153 Subtract W29, W29, 1
	154 Move X0, [X27]
	155 Call 0x1C17F10
	156 Move X2, [X25]
	157 Move X1, X19
	158 Move X3, X31
	159 Move X20, X0
	160 Call Action`1<AsyncGPUReadbackRequest>..ctor, X0, X1, X2
	161 Move [X19+32], X20
	162 Move X0, [X23]
	163 Call 0x1C17F10
	164 Move X8, 0x79F000
	165 Move X8, [X8+3720]
	166 Move X1, X19
	167 Move X3, X31
	168 Move X20, X0
	169 Move X2, [X8]
	170 Call Action`1<Object>..ctor, X0, X1, X2
	171 Move [X19+56], X20
	172 Move X20, [X31+80]
	173 Move X19, [X31+88]
	174 Move X22, [X31+64]
	175 Move X21, [X31+72]
	176 Move X24, [X31+48]
	177 Move X23, [X31+56]
	178 Move X26, [X31+32]
	179 Move X25, [X31+40]
	180 Move X28, [X31+16]
	181 Move X27, [X31+24]
	182 Move X29, [X31+96]
	183 Move X30, [X31+104]
	184 Return 
	185 Call 0x1C17F20

Method: UnityEngine.Rendering.ShaderDebugPrintManager get_instance()

Disassembly:
	0x039B3218 MOV X1, X31
	0x039B321C BL 0x1C16DEC
	0x039B3220 BL 0x1C16F44
	0x039B3224 MOV X1, X31
	0x039B3228 BL 0x1C16DEC
	0x039B322C BL 0x1C16F44
	0x039B3230 MOV X1, X31
	0x039B3234 BL 0x1C16DEC
	0x039B3238 BL 0x1C16F44
	0x039B323C MOV X1, X31
	0x039B3240 BL 0x1C16DEC
	0x039B3244 BL 0x1C16F44
	0x039B3248 MOV X1, X31
	0x039B324C BL 0x1C16DEC
	0x039B3250 BL 0x1C16F20
	0x039B3254 B 0x39B3398
	0x039B3258 B 0x39B3398
	0x039B325C B 0x39B3398
	0x039B3260 B 0x39B3398
	0x039B3264 B 0x39B3398
	0x039B3268 B 0x39B3398
	0x039B326C B 0x39B3398

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xA2F000
	005 Move X19, 0x79F000
	006 Move W8, [X20+3143]
	007 Move X19, [X19+3728]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x79F000
	013 Move X0, [X0+3728]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3143], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void SetShaderDebugPrintInputConstants(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.ShaderDebugPrintInput input)

Disassembly:
	0x039B3270 B 0x39B3398
	0x039B3274 B 0x39B3398
	0x039B3278 B 0x39B3398
	0x039B327C B 0x39B3398
	0x039B3280 B 0x39B3398
	0x039B3284 B 0x39B3398
	0x039B3288 B 0x39B3398
	0x039B328C B 0x39B3398
	0x039B3290 B 0x39B3398
	0x039B3294 B 0x39B3398
	0x039B3298 B 0x39B3398
	0x039B329C B 0x39B3398
	0x039B32A0 B 0x39B3398
	0x039B32A4 B 0x39B3398
	0x039B32A8 B 0x39B3398
	0x039B32AC B 0x39B3398
	0x039B32B0 B 0x39B3398
	0x039B32B4 B 0x39B3398
	0x039B32B8 B 0x39B3398
	0x039B32BC B 0x39B3398
	0x039B32C0 B 0x39B3398
	0x039B32C4 B 0x39B3398
	0x039B32C8 B 0x39B3398
	0x039B32CC B 0x39B3398
	0x039B32D0 B 0x39B3398
	0x039B32D4 B 0x39B3398
	0x039B32D8 B 0x39B3398
	0x039B32DC B 0x39B3398
	0x039B32E0 B 0x39B3398
	0x039B32E4 B 0x39B3398
	0x039B32E8 B 0x39B3398
	0x039B32EC B 0x39B3398
	0x039B32F0 B 0x39B3398
	0x039B32F4 B 0x39B3398
	0x039B32F8 B 0x39B3398
	0x039B32FC B 0x39B3398
	0x039B3300 B 0x39B3398
	0x039B3304 B 0x39B3398
	0x039B3308 B 0x39B3398
	0x039B330C B 0x39B3398
	0x039B3310 B 0x39B3398
	0x039B3314 B 0x39B3398
	0x039B3318 B 0x39B3398
	0x039B331C B 0x39B3398
	0x039B3320 B 0x39B3398
	0x039B3324 B 0x39B3398
	0x039B3328 B 0x39B3398
	0x039B332C B 0x39B3398
	0x039B3330 B 0x39B3398
	0x039B3334 B 0x39B3398

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xA2F000
	009 Move X23, 0x79F000
	010 Move W8, [X24+3144]
	011 Move X23, [X23+3728]
	012 Move X21, X3
	013 Move X22, X2
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x79F000
	021 Move X0, [X0+3728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3144], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Compare X19, 0
	031 JumpIfEqual {64}
	032 Move X8, [X23]
	033 And X31, X21, 0xFFFF
	034 Move S2, 1
	035 Move S4, W31
	036 Move X8, [X8+184]
	037 Move X9, X22
	038 ShiftRight X9, 32
	039 And X9, X9, 0x7FFFFFFF
	040 NotImplemented "Instruction FCSEL not yet implemented."
	041 And W31, W21, 255
	042 Move W1, [X8+8]
	043 Move S1, W9
	044 Move S0, W22
	045 NotImplemented "Instruction FCSEL not yet implemented."
	046 Move X0, X19
	047 Move X2, X31
	048 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	049 Move X8, [X23]
	050 Move W2, [X20+40]
	051 Move X0, X19
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X8, [X8+184]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X3, X31
	060 Move W1, [X8+12]
	061 Move X30, [X31+64]
	062 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	063 Return 
	064 Call 0x1C17F20

Method: System.Void SetShaderDebugPrintBindings(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x039B3338 B 0x39B3398
	0x039B333C B 0x39B3398
	0x039B3340 B 0x39B3398
	0x039B3344 B 0x39B3398
	0x039B3348 B 0x39B3398
	0x039B334C B 0x39B3398
	0x039B3350 B 0x39B3398
	0x039B3354 B 0x39B3398
	0x039B3358 B 0x39B3398
	0x039B335C B 0x39B3398
	0x039B3360 B 0x39B3398
	0x039B3364 B 0x39B3398
	0x039B3368 B 0x39B3398
	0x039B336C B 0x39B3398
	0x039B3370 B 0x39B3398
	0x039B3374 B 0x39B3398
	0x039B3378 B 0x39B3398
	0x039B337C B 0x39B3398
	0x039B3380 B 0x39B3398
	0x039B3384 B 0x39B3398
	0x039B3388 B 0x39B3398
	0x039B338C B 0x39B3398
	0x039B3390 B 0x39B3398
	0x039B3394 B 0x39B3398
	0x039B3398 CMP W1, 0x1
	0x039B339C B.NE 0x39B33BC
	0x039B33A0 BL 0x3EB1AD0
	0x039B33A4 LDR X19, [X0]
	0x039B33A8 BL 0x3EB1AE0
	0x039B33AC CBZ X19, 0x39B3154
	0x039B33B0 MOV X0, X19
	0x039B33B4 BL 0x1C16F18
	0x039B33B8 CBNZ X19, 0x39B33C0
	0x039B33BC BL 0x1D2C690
	0x039B33C0 MOV X0, X19
	0x039B33C4 BL 0x1C16F18
	0x039B33C8 BL 0x1990590
	0x039B33CC STP X30, X21, [X31 - 0x20]!
	0x039B33D0 STP X20, X19, [X31 + 0x10]
	0x039B33D4 ADRP X20, 0xA2E000
	0x039B33D8 LDRB W8, [X20 + 0xC4C]
	0x039B33DC MOV X19, X0
	0x039B33E0 TBNZ X8, 0x0, 0x39B3404
	0x039B33E4 ADRP X0, 0x79E000
	0x039B33E8 LDR X0, [X0 + 0xE98]
	0x039B33EC BL 0x1C16CF4
	0x039B33F0 ADRP X0, 0x79E000
	0x039B33F4 LDR X0, [X0 + 0xF08]
	0x039B33F8 BL 0x1C16CF4
	0x039B33FC MOVZ W8, 0x1
	0x039B3400 STRB W8, [X20 + 0xC4C]
	0x039B3404 LDR W8, [X19 + 0x28]
	0x039B3408 LDR X0, [X19 + 0x10]
	0x039B340C ADD W9, W8, 0x3
	0x039B3410 CMP W8, 0x0
	0x039B3414 CSEL W9, W9, W8, LT
	0x039B3418 CBZ X0, 0x39B3488
	0x039B341C ADRP X10, 0x79E000
	0x039B3420 LDR X10, [X10 + 0xE98]
	0x039B3424 LDR X20, [X19 + 0x18]
	0x039B3428 AND W9, W9, 0xFFFFFFFC
	0x039B342C SUB W21, W8, W9
	0x039B3430 LDR X2, [X10]
	0x039B3434 MOV W1, W21
	0x039B3438 BL 0x301BCCC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0xA2F000
	008 Move W8, [X21+3145]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x79F000
	016 Move X0, [X0+3736]
	017 Call 0x1C17CF4
	018 Move X0, 0x79F000
	019 Move X0, [X0+3744]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3145], W8
	023 Move W8, [X19+40]
	024 Move X0, [X19+24]
	025 Add W9, W8, 3
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {81}
	030 Move X22, 0x79F000
	031 Move X22, [X22+3744]
	032 And W9, W9, 0xFFFFFFFC
	033 Subtract W21, W8, W9
	034 Move W1, W21
	035 Move X2, [X22]
	036 Call List`1<AsyncGPUReadbackRequest>.get_Item, X0, X1
	037 Move [X31], X0
	038 Move [X31+8], X1
	039 Add X0, X31, 0
	040 Move X1, X31
	041 Call AsyncGPUReadbackRequest.get_done, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {57}
	046 Move X0, [X19+24]
	047 Compare X0, 0
	048 JumpIfEqual {81}
	049 Move X2, [X22]
	050 Move W1, W21
	051 Call List`1<AsyncGPUReadbackRequest>.get_Item, X0, X1
	052 Move [X31], X0
	053 Move [X31+8], X1
	054 Add X0, X31, 0
	055 Move X1, X31
	056 Call AsyncGPUReadbackRequest.WaitForCompletion, X0
	057 Move X0, [X19+16]
	058 Compare X0, 0
	059 JumpIfEqual {81}
	060 Move X8, 0x79F000
	061 Move X8, [X8+3736]
	062 Move W1, W21
	063 Move X2, [X8]
	064 Call List`1<Object>.get_Item, X0, X1
	065 Compare X20, 0
	066 JumpIfEqual {81}
	067 Move X2, X0
	068 Move W1, 7
	069 Move X0, X20
	070 Move X3, X31
	071 Call CommandBuffer.SetRandomWriteTarget, X0, X1, X2
	072 Move X0, X19
	073 Call ShaderDebugPrintManager.ClearShaderDebugPrintBuffer, X0
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X30, [X31+16]
	079 Add X31, X31, 64
	080 Return 
	081 Call 0x1C17F20

Method: System.Void ClearShaderDebugPrintBuffer()

Disassembly:
	0x039B343C LDR X1, [X19 + 0x20]
	0x039B3440 MOV X2, X31
	0x039B3444 BL 0x3C4A908
	0x039B3448 CBZ X20, 0x39B3488
	0x039B344C ADRP X8, 0x79E000
	0x039B3450 LDR X8, [X8 + 0xF08]
	0x039B3454 MOV X2, X0
	0x039B3458 MOV X3, X1
	0x039B345C MOV X0, X20
	0x039B3460 LDR X4, [X8]
	0x039B3464 MOV W1, W21
	0x039B3468 BL 0x2F58ED0
	0x039B346C LDR W8, [X19 + 0x28]
	0x039B3470 STRB W31, [X19 + 0x2C]
	0x039B3474 ADD W8, W8, 0x1
	0x039B3478 STR W8, [X19 + 0x28]
	0x039B347C LDP X20, X19, [X31 + 0x10]
	0x039B3480 LDP X30, X21, [X31], #0x20
	0x039B3484 RET
	0x039B3488 BL 0x1C16F20
	0x039B348C LDR X0, [X0 + 0x30]
	0x039B3490 RET
	0x039B3494 STR X1, [X0 + 0x38]
	0x039B3498 RET
	0x039B349C STP X30, X21, [X31 - 0x20]!
	0x039B34A0 STP X20, X19, [X31 + 0x10]
	0x039B34A4 ADRP X20, 0xA2E000
	0x039B34A8 ADRP X21, 0x740000
	0x039B34AC LDRB W8, [X20 + 0xC4D]
	0x039B34B0 LDR X21, [X21 + 0xA28]
	0x039B34B4 MOV X19, X1
	0x039B34B8 TBNZ X8, 0x0, 0x39B34D0
	0x039B34BC ADRP X0, 0x740000
	0x039B34C0 LDR X0, [X0 + 0xA28]
	0x039B34C4 BL 0x1C16CF4
	0x039B34C8 MOVZ W8, 0x1
	0x039B34CC STRB W8, [X20 + 0xC4D]
	0x039B34D0 LDR X0, [X21]
	0x039B34D4 LDR W8, [X0 + 0xE0]
	0x039B34D8 CBNZ W8, 0x39B34E0
	0x039B34DC BL 0x1C16DFC
	0x039B34E0 MOV X0, X19
	0x039B34E4 LDP X20, X19, [X31 + 0x10]
	0x039B34E8 MOV X1, X31
	0x039B34EC LDP X30, X21, [X31], #0x20
	0x039B34F0 B 0x3C06048
	0x039B34F4 STR X30, [X31 - 0x30]!
	0x039B34F8 STP X22, X21, [X31 + 0x10]
	0x039B34FC STP X20, X19, [X31 + 0x20]
	0x039B3500 ADRP X19, 0xA2E000
	0x039B3504 ADRP X20, 0x79E000
	0x039B3508 ADRP X22, 0x79E000
	0x039B350C ADRP X21, 0x79E000
	0x039B3510 LDRB W8, [X19 + 0xC4E]
	0x039B3514 LDR X20, [X20 + 0xE90]
	0x039B3518 LDR X22, [X22 + 0xF10]
	0x039B351C LDR X21, [X21 + 0xF18]
	0x039B3520 TBNZ X8, 0x0, 0x39B3550
	0x039B3524 ADRP X0, 0x79E000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xA2F000
	006 Move W8, [X20+3146]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x79F000
	013 Move X0, [X0+3752]
	014 Call 0x1C17CF4
	015 Move X0, 0x79F000
	016 Move X0, [X0+3736]
	017 Call 0x1C17CF4
	018 Move X0, 0x79F000
	019 Move X0, [X0+3760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3146], W8
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move W8, [X19+44]
	026 Compare W8, 0
	027 JumpIfNotEqual {64}
	028 Move X8, 0x79F000
	029 Move W20, [X19+40]
	030 Move X8, [X8+3760]
	031 Add X0, X31, 0
	032 Move W1, 1
	033 Move W2, 2
	034 Move X4, [X8]
	035 Move W3, 1
	036 Call NativeArray`1<UInt32>..ctor, X0, X1, X2, X3
	037 Move X8, [X31]
	038 Move [X8], W31
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {69}
	042 Move X9, 0x79F000
	043 Move X9, [X9+3736]
	044 Add W8, W20, 3
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Move X2, [X9]
	048 And W8, W8, 0xFFFFFFFC
	049 Subtract W1, W20, W8
	050 Call List`1<Object>.get_Item, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {69}
	053 Move X8, 0x79F000
	054 Move X1, [X31]
	055 Move X2, [X31+8]
	056 Move X8, [X8+3752]
	057 Move W5, 1
	058 Move W3, W31
	059 Move W4, W31
	060 Move X6, [X8]
	061 Move W20, 1
	062 Call 0x21E8C54, X0, X1, X2, X3, X4
	063 Move [X19+44], W20
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X30, [X31+16]
	067 Add X31, X31, 48
	068 Return 
	069 Call 0x1C17F20

Method: System.Void BufferReadComplete(UnityEngine.Rendering.AsyncGPUReadbackRequest request)

Disassembly:
	0x039B3528 LDR X0, [X0 + 0xE90]
	0x039B352C BL 0x1C16CF4
	0x039B3530 ADRP X0, 0x79E000
	0x039B3534 LDR X0, [X0 + 0xF18]
	0x039B3538 BL 0x1C16CF4
	0x039B353C ADRP X0, 0x79E000
	0x039B3540 LDR X0, [X0 + 0xF10]
	0x039B3544 BL 0x1C16CF4
	0x039B3548 MOVZ W8, 0x1
	0x039B354C STRB W8, [X19 + 0xC4E]
	0x039B3550 LDR X0, [X20]
	0x039B3554 BL 0x1C16F10
	0x039B3558 MOV X19, X0
	0x039B355C BL 0x39B1F70
	0x039B3560 LDR X8, [X20]
	0x039B3564 MOV X1, X31
	0x039B3568 LDR X8, [X8 + 0xB8]
	0x039B356C STR X19, [X8]
	0x039B3570 LDR X0, [X22]
	0x039B3574 BL 0x3C124EC
	0x039B3578 LDR X8, [X20]
	0x039B357C MOV X1, X31
	0x039B3580 LDR X8, [X8 + 0xB8]
	0x039B3584 STR W0, [X8 + 0x8]
	0x039B3588 LDR X0, [X21]
	0x039B358C BL 0x3C124EC
	0x039B3590 LDR X8, [X20]
	0x039B3594 LDP X20, X19, [X31 + 0x20]
	0x039B3598 LDP X22, X21, [X31 + 0x10]
	0x039B359C LDR X8, [X8 + 0xB8]
	0x039B35A0 STR W0, [X8 + 0xC]
	0x039B35A4 LDR X30, [X31], #0x30
	0x039B35A8 RET
	0x039B35AC STR X30, [X31 - 0x30]!
	0x039B35B0 STP X22, X21, [X31 + 0x10]
	0x039B35B4 STP X20, X19, [X31 + 0x20]
	0x039B35B8 ADRP X21, 0xA2E000
	0x039B35BC ADRP X22, 0x79D000
	0x039B35C0 ADRP X19, 0x79E000
	0x039B35C4 ADRP X20, 0x79E000
	0x039B35C8 LDRB W8, [X21 + 0xC4F]
	0x039B35CC LDR X22, [X22 + 0x598]
	0x039B35D0 LDR X19, [X19 + 0xF20]
	0x039B35D4 LDR X20, [X20 + 0xEB8]
	0x039B35D8 TBNZ X8, 0x0, 0x39B3608
	0x039B35DC ADRP X0, 0x79D000
	0x039B35E0 LDR X0, [X0 + 0x598]
	0x039B35E4 BL 0x1C16CF4
	0x039B35E8 ADRP X0, 0x79E000
	0x039B35EC LDR X0, [X0 + 0xEB8]
	0x039B35F0 BL 0x1C16CF4
	0x039B35F4 ADRP X0, 0x79E000
	0x039B35F8 LDR X0, [X0 + 0xF20]
	0x039B35FC BL 0x1C16CF4
	0x039B3600 MOVZ W8, 0x1
	0x039B3604 STRB W8, [X21 + 0xC4F]
	0x039B3608 LDR X0, [X22]
	0x039B360C BL 0x1C16F10
	0x039B3610 LDR X1, [X19]
	0x039B3614 MOV X19, X0
	0x039B3618 BL 0x39B19AC
	0x039B361C LDR X8, [X20]
	0x039B3620 LDP X22, X21, [X31 + 0x10]
	0x039B3624 LDR X8, [X8 + 0xB8]
	0x039B3628 STR X19, [X8]
	0x039B362C LDP X20, X19, [X31 + 0x20]
	0x039B3630 LDR X30, [X31], #0x30
	0x039B3634 RET
	0x039B3638 LDP S0, S1, [X0]
	0x039B363C RET
	0x039B3640 STP S0, S1, [X0]
	0x039B3644 RET
	0x039B3648 LDRB W0, [X0 + 0x8]
	0x039B364C RET
	0x039B3650 AND W8, W1, 0x1
	0x039B3654 STRB W8, [X0 + 0x8]
	0x039B3658 RET
	0x039B365C LDRB W0, [X0 + 0x9]
	0x039B3660 RET
	0x039B3664 AND W8, W1, 0x1
	0x039B3668 STRB W8, [X0 + 0x9]
	0x039B366C RET
	0x039B3670 LDRB W0, [X0 + 0xA]
	0x039B3674 RET
	0x039B3678 AND W8, W1, 0x1
	0x039B367C STRB W8, [X0 + 0xA]
	0x039B3680 RET
	0x039B3684 SUB X31, X31, 0x40
	0x039B3688 STR X30, [X31 + 0x10]
	0x039B368C STP X22, X21, [X31 + 0x20]
	0x039B3690 STP X20, X19, [X31 + 0x30]
	0x039B3694 ADRP X20, 0xA2E000
	0x039B3698 ADRP X21, 0x740000
	0x039B369C ADRP X22, 0x740000
	0x039B36A0 LDRB W8, [X20 + 0xC50]
	0x039B36A4 LDR X21, [X21 + 0x9D0]
	0x039B36A8 LDR X22, [X22 + 0xA90]
	0x039B36AC MOV X19, X0
	0x039B36B0 TBNZ X8, 0x0, 0x39B36EC
	0x039B36B4 ADRP X0, 0x740000
	0x039B36B8 LDR X0, [X0 + 0xB58]
	0x039B36BC BL 0x1C16CF4
	0x039B36C0 ADRP X0, 0x740000
	0x039B36C4 LDR X0, [X0 + 0x9D0]
	0x039B36C8 BL 0x1C16CF4
	0x039B36CC ADRP X0, 0x740000
	0x039B36D0 LDR X0, [X0 + 0xA90]
	0x039B36D4 BL 0x1C16CF4
	0x039B36D8 ADRP X0, 0x79E000
	0x039B36DC LDR X0, [X0 + 0xF28]
	0x039B36E0 BL 0x1C16CF4
	0x039B36E4 MOVZ W8, 0x1
	0x039B36E8 STRB W8, [X20 + 0xC50]
	0x039B36EC LDR X0, [X21]
	0x039B36F0 MOVZ W1, 0x5
	0x039B36F4 BL 0x1C16D6C
	0x039B36F8 MOV X20, X0
	0x039B36FC LDR V0, [X19]
	0x039B3700 LDR X0, [X22]
	0x039B3704 ADD X1, X31, 0x1C
	0x039B3708 STR S0, [X31 + 0x1C]
	0x039B370C BL 0x1C16E04
	0x039B3710 CBZ X20, 0x39B3880
	0x039B3714 MOV X21, X0
	0x039B3718 CBZ X0, 0x39B3730
	0x039B371C LDR X8, [X20]
	0x039B3720 MOV X0, X21
	0x039B3724 LDR X1, [X8 + 0x40]
	0x039B3728 BL 0x1C16E00
	0x039B372C CBZ X0, 0x39B3874
	0x039B3730 LDR W8, [X20 + 0x18]
	0x039B3734 CBZ W8, 0x39B3870
	0x039B3738 STR X21, [X20 + 0x20]
	0x039B373C LDR V0, [X19 + 0x4]
	0x039B3740 LDR X0, [X22]
	0x039B3744 ADD X1, X31, 0x18
	0x039B3748 STR S0, [X31 + 0x18]
	0x039B374C BL 0x1C16E04
	0x039B3750 MOV X21, X0
	0x039B3754 CBZ X0, 0x39B376C
	0x039B3758 LDR X8, [X20]
	0x039B375C MOV X0, X21
	0x039B3760 LDR X1, [X8 + 0x40]
	0x039B3764 BL 0x1C16E00
	0x039B3768 CBZ X0, 0x39B3874
	0x039B376C LDR W8, [X20 + 0x18]
	0x039B3770 CMP W8, 0x1
	0x039B3774 B.LS 0x39B3870
	0x039B3778 ADRP X22, 0x740000
	0x039B377C LDR X22, [X22 + 0xB58]
	0x039B3780 STR X21, [X20 + 0x28]
	0x039B3784 LDRB W8, [X19 + 0x8]
	0x039B3788 ADD X1, X31, 0xC
	0x039B378C LDR X0, [X22]
	0x039B3790 STRB W8, [X31 + 0xC]
	0x039B3794 BL 0x1C16E04
	0x039B3798 MOV X21, X0
	0x039B379C CBZ X0, 0x39B37B4
	0x039B37A0 LDR X8, [X20]
	0x039B37A4 MOV X0, X21
	0x039B37A8 LDR X1, [X8 + 0x40]
	0x039B37AC BL 0x1C16E00
	0x039B37B0 CBZ X0, 0x39B3874
	0x039B37B4 LDR W8, [X20 + 0x18]
	0x039B37B8 CMP W8, 0x2
	0x039B37BC B.LS 0x39B3870
	0x039B37C0 STR X21, [X20 + 0x30]
	0x039B37C4 LDRB W8, [X19 + 0x9]
	0x039B37C8 LDR X0, [X22]
	0x039B37CC ADD X1, X31, 0x8
	0x039B37D0 STRB W8, [X31 + 0x8]
	0x039B37D4 BL 0x1C16E04
	0x039B37D8 MOV X21, X0
	0x039B37DC CBZ X0, 0x39B37F4
	0x039B37E0 LDR X8, [X20]
	0x039B37E4 MOV X0, X21
	0x039B37E8 LDR X1, [X8 + 0x40]
	0x039B37EC BL 0x1C16E00
	0x039B37F0 CBZ X0, 0x39B3874
	0x039B37F4 LDR W8, [X20 + 0x18]
	0x039B37F8 CMP W8, 0x3
	0x039B37FC B.LS 0x39B3870
	0x039B3800 STR X21, [X20 + 0x38]
	0x039B3804 LDRB W8, [X19 + 0xA]
	0x039B3808 LDR X0, [X22]
	0x039B380C ADD X1, X31, 0x4
	0x039B3810 STRB W8, [X31 + 0x4]
	0x039B3814 BL 0x1C16E04
	0x039B3818 MOV X19, X0
	0x039B381C CBZ X0, 0x39B3834
	0x039B3820 LDR X8, [X20]
	0x039B3824 MOV X0, X19
	0x039B3828 LDR X1, [X8 + 0x40]
	0x039B382C BL 0x1C16E00
	0x039B3830 CBZ X0, 0x39B3874
	0x039B3834 LDR W8, [X20 + 0x18]
	0x039B3838 CMP W8, 0x4
	0x039B383C B.LS 0x39B3870
	0x039B3840 ADRP X8, 0x79E000
	0x039B3844 LDR X8, [X8 + 0xF28]
	0x039B3848 STR X19, [X20 + 0x40]
	0x039B384C MOV X1, X20
	0x039B3850 MOV X2, X31
	0x039B3854 LDR X0, [X8]
	0x039B3858 BL 0x3227C5C
	0x039B385C LDP X20, X19, [X31 + 0x30]
	0x039B3860 LDP X22, X21, [X31 + 0x20]
	0x039B3864 LDR X30, [X31 + 0x10]
	0x039B3868 ADD X31, X31, 0x40
	0x039B386C RET
	0x039B3870 BL 0x1C16F28
	0x039B3874 BL 0x1C16F44
	0x039B3878 MOV X1, X31
	0x039B387C BL 0x1C16DEC
	0x039B3880 BL 0x1C16F20
	0x039B3884 STP D9, D8, [X31 - 0x30]!
	0x039B3888 STR X30, [X31 + 0x10]
	0x039B388C STP X20, X19, [X31 + 0x20]
	0x039B3890 ADRP X19, 0xA2E000
	0x039B3894 LDRB W8, [X19 + 0xC51]
	0x039B3898 TBNZ X8, 0x0, 0x39B38B0
	0x039B389C ADRP X0, 0x768000
	0x039B38A0 LDR X0, [X0 + 0x558]
	0x039B38A4 BL 0x1C16CF4
	0x039B38A8 MOVZ W8, 0x1
	0x039B38AC STRB W8, [X19 + 0xC51]
	0x039B38B0 ADRP X19, 0xA26000
	0x039B38B4 LDRB W8, [X19 + 0x817]
	0x039B38B8 CBNZ W8, 0x39B38D0
	0x039B38BC ADRP X0, 0x768000
	0x039B38C0 LDR X0, [X0 + 0x528]
	0x039B38C4 BL 0x1C16CF4
	0x039B38C8 MOVZ W8, 0x1
	0x039B38CC STRB W8, [X19 + 0x817]
	0x039B38D0 ADRP X8, 0x768000
	0x039B38D4 LDR X8, [X8 + 0x528]
	0x039B38D8 LDR X8, [X8]
	0x039B38DC LDR X8, [X8 + 0xB8]
	0x039B38E0 LDR X20, [X8]
	0x039B38E4 CBZ X20, 0x39B3980
	0x039B38E8 LDR X0, [X20 + 0x170]
	0x039B38EC CBZ X0, 0x39B3980
	0x039B38F0 ADRP X8, 0x768000
	0x039B38F4 LDR X8, [X8 + 0x558]
	0x039B38F8 LDR X1, [X8]
	0x039B38FC BL 0x2E095F8
	0x039B3900 LDR X0, [X20 + 0x1A8]
	0x039B3904 CBZ X0, 0x39B3980
	0x039B3908 MOV X1, X31
	0x039B390C MOV V8.16B, V0.16B
	0x039B3910 MOV V9.16B, V1.16B
	0x039B3914 BL 0x3758A6C
	0x039B3918 LDR X8, [X20 + 0x1B8]
	0x039B391C CBZ X8, 0x39B3980
	0x039B3920 MOV W19, W0
	0x039B3924 MOV X0, X8
	0x039B3928 MOV X1, X31
	0x039B392C BL 0x3758A6C
	0x039B3930 LDR X8, [X20 + 0x1B0]
	0x039B3934 CBZ X8, 0x39B3980
	0x039B3938 ANDS W31, W0, 0x1
	0x039B393C MOVZ W9, 0x100
	0x039B3940 CSEL X20, X9, X31, NE
	0x039B3944 MOV X0, X8
	0x039B3948 MOV X1, X31
	0x039B394C BFM X20, X19, 0x0, 0x0
	0x039B3950 BL 0x3758A6C
	0x039B3954 ANDS W31, W0, 0x1
	0x039B3958 MOVZ W8, 0x10000
	0x039B395C CSEL X8, X8, X31, NE
	0x039B3960 ORR X1, X20, X8, 0x0
	0x039B3964 LDP X20, X19, [X31 + 0x20]
	0x039B3968 LDR X30, [X31 + 0x10]
	0x039B396C FMOV W0, S8
	0x039B3970 FMOV W9, S9
	0x039B3974 BFM X0, X9, 0x20, 0x1F
	0x039B3978 LDP D9, D8, [X31], #0x30
	0x039B397C RET
	0x039B3980 BL 0x1C16F20
	0x039B3984 STP X30, X23, [X31 - 0x30]!
	0x039B3988 STP X22, X21, [X31 + 0x10]
	0x039B398C STP X20, X19, [X31 + 0x20]
	0x039B3990 ADRP X22, 0xA2E000
	0x039B3994 ADRP X23, 0x740000
	0x039B3998 LDRB W8, [X22 + 0xC52]
	0x039B399C LDR X23, [X23 + 0x988]
	0x039B39A0 MOV X21, X2
	0x039B39A4 MOV X20, X1
	0x039B39A8 MOV X19, X0
	0x039B39AC TBNZ X8, 0x0, 0x39B39C4
	0x039B39B0 ADRP X0, 0x740000
	0x039B39B4 LDR X0, [X0 + 0x988]
	0x039B39B8 BL 0x1C16CF4
	0x039B39BC MOVZ W8, 0x1
	0x039B39C0 STRB W8, [X22 + 0xC52]
	0x039B39C4 LDR X2, [X23]
	0x039B39C8 MOV X0, X21
	0x039B39CC MOV X1, X20
	0x039B39D0 BL 0x39B39F0
	0x039B39D4 MOV X1, X0
	0x039B39D8 MOV X0, X19
	0x039B39DC LDP X20, X19, [X31 + 0x20]
	0x039B39E0 LDP X22, X21, [X31 + 0x10]
	0x039B39E4 MOV X2, X31
	0x039B39E8 LDP X30, X23, [X31], #0x30
	0x039B39EC B 0x3C32334
	0x039B39F0 STP X30, X23, [X31 - 0x30]!
	0x039B39F4 STP X22, X21, [X31 + 0x10]
	0x039B39F8 STP X20, X19, [X31 + 0x20]
	0x039B39FC ADRP X20, 0xA2E000
	0x039B3A00 ADRP X23, 0x740000
	0x039B3A04 LDRB W8, [X20 + 0xC55]
	0x039B3A08 LDR X23, [X23 + 0x9D0]
	0x039B3A0C MOV X19, X2
	0x039B3A10 MOV X21, X1
	0x039B3A14 MOV X22, X0
	0x039B3A18 TBNZ X8, 0x0, 0x39B3A3C
	0x039B3A1C ADRP X0, 0x740000
	0x039B3A20 LDR X0, [X0 + 0x9D0]
	0x039B3A24 BL 0x1C16CF4
	0x039B3A28 ADRP X0, 0x79E000
	0x039B3A2C LDR X0, [X0 + 0xF30]
	0x039B3A30 BL 0x1C16CF4
	0x039B3A34 MOVZ W8, 0x1
	0x039B3A38 STRB W8, [X20 + 0xC55]
	0x039B3A3C LDR X0, [X23]
	0x039B3A40 MOVZ W1, 0x4
	0x039B3A44 BL 0x1C16D6C
	0x039B3A48 CBZ X0, 0x39B3B4C
	0x039B3A4C MOV X20, X0
	0x039B3A50 CBZ X22, 0x39B3A68
	0x039B3A54 LDR X8, [X20]
	0x039B3A58 MOV X0, X22
	0x039B3A5C LDR X1, [X8 + 0x40]
	0x039B3A60 BL 0x1C16E00
	0x039B3A64 CBZ X0, 0x39B3B40
	0x039B3A68 LDR W8, [X20 + 0x18]
	0x039B3A6C CBZ W8, 0x39B3B3C
	0x039B3A70 STR X22, [X20 + 0x20]
	0x039B3A74 ADRP X22, 0xA2E000
	0x039B3A78 ADRP X23, 0x79E000
	0x039B3A7C LDRB W8, [X22 + 0xC53]
	0x039B3A80 LDR X23, [X23 + 0xF38]
	0x039B3A84 TBNZ X8, 0x0, 0x39B3A9C
	0x039B3A88 ADRP X0, 0x79E000
	0x039B3A8C LDR X0, [X0 + 0xF38]
	0x039B3A90 BL 0x1C16CF4
	0x039B3A94 MOVZ W8, 0x1
	0x039B3A98 STRB W8, [X22 + 0xC53]
	0x039B3A9C LDR X22, [X23]
	0x039B3AA0 CBZ X22, 0x39B3AB8
	0x039B3AA4 LDR X8, [X20]
	0x039B3AA8 MOV X0, X22
	0x039B3AAC LDR X1, [X8 + 0x40]
	0x039B3AB0 BL 0x1C16E00
	0x039B3AB4 CBZ X0, 0x39B3B40
	0x039B3AB8 LDR W8, [X20 + 0x18]
	0x039B3ABC CMP W8, 0x1
	0x039B3AC0 B.LS 0x39B3B3C
	0x039B3AC4 STR X22, [X20 + 0x28]
	0x039B3AC8 CBZ X21, 0x39B3AE4
	0x039B3ACC LDR X8, [X20]
	0x039B3AD0 MOV X0, X21
	0x039B3AD4 LDR X1, [X8 + 0x40]
	0x039B3AD8 BL 0x1C16E00
	0x039B3ADC CBZ X0, 0x39B3B40
	0x039B3AE0 LDR W8, [X20 + 0x18]
	0x039B3AE4 CMP W8, 0x2
	0x039B3AE8 B.LS 0x39B3B3C
	0x039B3AEC STR X21, [X20 + 0x30]
	0x039B3AF0 CBZ X19, 0x39B3B0C
	0x039B3AF4 LDR X8, [X20]
	0x039B3AF8 MOV X0, X19
	0x039B3AFC LDR X1, [X8 + 0x40]
	0x039B3B00 BL 0x1C16E00
	0x039B3B04 CBZ X0, 0x39B3B40
	0x039B3B08 LDR W8, [X20 + 0x18]
	0x039B3B0C CMP W8, 0x3
	0x039B3B10 B.LS 0x39B3B3C
	0x039B3B14 ADRP X8, 0x79E000
	0x039B3B18 LDR X8, [X8 + 0xF30]
	0x039B3B1C STR X19, [X20 + 0x38]
	0x039B3B20 MOV X1, X20
	0x039B3B24 LDP X20, X19, [X31 + 0x20]
	0x039B3B28 LDR X0, [X8]
	0x039B3B2C LDP X22, X21, [X31 + 0x10]
	0x039B3B30 MOV X2, X31
	0x039B3B34 LDP X30, X23, [X31], #0x30
	0x039B3B38 B 0x3227C5C
	0x039B3B3C BL 0x1C16F28
	0x039B3B40 BL 0x1C16F44
	0x039B3B44 MOV X1, X31
	0x039B3B48 BL 0x1C16DEC
	0x039B3B4C BL 0x1C16F20
	0x039B3B50 STP X30, X19, [X31 - 0x10]!
	0x039B3B54 MOV X19, X0
	0x039B3B58 MOV X0, X3
	0x039B3B5C BL 0x39B39F0
	0x039B3B60 MOV X1, X0
	0x039B3B64 MOV X0, X19
	0x039B3B68 MOV X2, X31
	0x039B3B6C LDP X30, X19, [X31], #0x10
	0x039B3B70 B 0x3C32334
	0x039B3B74 STR X30, [X31 - 0x20]!
	0x039B3B78 STP X20, X19, [X31 + 0x10]
	0x039B3B7C ADRP X19, 0xA2E000
	0x039B3B80 ADRP X20, 0x79E000
	0x039B3B84 LDRB W8, [X19 + 0xC53]
	0x039B3B88 LDR X20, [X20 + 0xF38]
	0x039B3B8C TBNZ X8, 0x0, 0x39B3BA4
	0x039B3B90 ADRP X0, 0x79E000
	0x039B3B94 LDR X0, [X0 + 0xF38]
	0x039B3B98 BL 0x1C16CF4
	0x039B3B9C MOVZ W8, 0x1
	0x039B3BA0 STRB W8, [X19 + 0xC53]
	0x039B3BA4 LDR X0, [X20]
	0x039B3BA8 LDP X20, X19, [X31 + 0x10]
	0x039B3BAC LDR X30, [X31], #0x20
	0x039B3BB0 RET
	0x039B3BB4 STR X30, [X31 - 0x30]!
	0x039B3BB8 STP X22, X21, [X31 + 0x10]
	0x039B3BBC STP X20, X19, [X31 + 0x20]
	0x039B3BC0 ADRP X19, 0xA2E000
	0x039B3BC4 ADRP X22, 0x740000
	0x039B3BC8 LDRB W8, [X19 + 0xC54]
	0x039B3BCC LDR X22, [X22 + 0x9D0]
	0x039B3BD0 MOV X20, X1
	0x039B3BD4 MOV X21, X0
	0x039B3BD8 TBNZ X8, 0x0, 0x39B3C08
	0x039B3BDC ADRP X0, 0x740000
	0x039B3BE0 LDR X0, [X0 + 0x9D0]
	0x039B3BE4 BL 0x1C16CF4
	0x039B3BE8 ADRP X0, 0x740000
	0x039B3BEC LDR X0, [X0 + 0x988]
	0x039B3BF0 BL 0x1C16CF4
	0x039B3BF4 ADRP X0, 0x79E000
	0x039B3BF8 LDR X0, [X0 + 0xF30]
	0x039B3BFC BL 0x1C16CF4
	0x039B3C00 MOVZ W8, 0x1
	0x039B3C04 STRB W8, [X19 + 0xC54]
	0x039B3C08 LDR X0, [X22]
	0x039B3C0C MOVZ W1, 0x4
	0x039B3C10 BL 0x1C16D6C
	0x039B3C14 CBZ X0, 0x39B3D24
	0x039B3C18 MOV X19, X0
	0x039B3C1C CBZ X21, 0x39B3C34
	0x039B3C20 LDR X8, [X19]
	0x039B3C24 MOV X0, X21
	0x039B3C28 LDR X1, [X8 + 0x40]
	0x039B3C2C BL 0x1C16E00
	0x039B3C30 CBZ X0, 0x39B3D18
	0x039B3C34 LDR W8, [X19 + 0x18]
	0x039B3C38 CBZ W8, 0x39B3D14
	0x039B3C3C STR X21, [X19 + 0x20]
	0x039B3C40 ADRP X21, 0xA2E000
	0x039B3C44 ADRP X22, 0x79E000
	0x039B3C48 LDRB W8, [X21 + 0xC53]
	0x039B3C4C LDR X22, [X22 + 0xF38]
	0x039B3C50 TBNZ X8, 0x0, 0x39B3C68
	0x039B3C54 ADRP X0, 0x79E000
	0x039B3C58 LDR X0, [X0 + 0xF38]
	0x039B3C5C BL 0x1C16CF4
	0x039B3C60 MOVZ W8, 0x1
	0x039B3C64 STRB W8, [X21 + 0xC53]
	0x039B3C68 LDR X21, [X22]
	0x039B3C6C CBZ X21, 0x39B3C84
	0x039B3C70 LDR X8, [X19]
	0x039B3C74 MOV X0, X21
	0x039B3C78 LDR X1, [X8 + 0x40]
	0x039B3C7C BL 0x1C16E00
	0x039B3C80 CBZ X0, 0x39B3D18
	0x039B3C84 LDR W8, [X19 + 0x18]
	0x039B3C88 CMP W8, 0x1
	0x039B3C8C B.LS 0x39B3D14
	0x039B3C90 STR X21, [X19 + 0x28]
	0x039B3C94 CBZ X20, 0x39B3CB0
	0x039B3C98 LDR X8, [X19]
	0x039B3C9C MOV X0, X20
	0x039B3CA0 LDR X1, [X8 + 0x40]
	0x039B3CA4 BL 0x1C16E00
	0x039B3CA8 CBZ X0, 0x39B3D18
	0x039B3CAC LDR W8, [X19 + 0x18]
	0x039B3CB0 CMP W8, 0x2
	0x039B3CB4 B.LS 0x39B3D14
	0x039B3CB8 ADRP X21, 0x740000
	0x039B3CBC LDR X21, [X21 + 0x988]
	0x039B3CC0 STR X20, [X19 + 0x30]
	0x039B3CC4 LDR X0, [X21]
	0x039B3CC8 CBZ X0, 0x39B3CE0
	0x039B3CCC LDR X8, [X19]
	0x039B3CD0 LDR X1, [X8 + 0x40]
	0x039B3CD4 BL 0x1C16E00
	0x039B3CD8 CBZ X0, 0x39B3D18
	0x039B3CDC LDR W8, [X19 + 0x18]
	0x039B3CE0 CMP W8, 0x3
	0x039B3CE4 B.LS 0x39B3D14
	0x039B3CE8 LDR X8, [X21]
	0x039B3CEC ADRP X9, 0x79E000
	0x039B3CF0 LDR X9, [X9 + 0xF30]
	0x039B3CF4 MOV X1, X19
	0x039B3CF8 STR X8, [X19 + 0x38]
	0x039B3CFC LDP X20, X19, [X31 + 0x20]
	0x039B3D00 LDR X0, [X9]
	0x039B3D04 LDP X22, X21, [X31 + 0x10]
	0x039B3D08 MOV X2, X31
	0x039B3D0C LDR X30, [X31], #0x30
	0x039B3D10 B 0x3227C5C
	0x039B3D14 BL 0x1C16F28
	0x039B3D18 BL 0x1C16F44
	0x039B3D1C MOV X1, X31
	0x039B3D20 BL 0x1C16DEC
	0x039B3D24 BL 0x1C16F20
	0x039B3D28 MOV X1, X31
	0x039B3D2C B 0x33BDD8C
	0x039B3D30 STR X30, [X31 - 0x30]!
	0x039B3D34 STP X22, X21, [X31 + 0x10]
	0x039B3D38 STP X20, X19, [X31 + 0x20]
	0x039B3D3C ADRP X21, 0xA2E000
	0x039B3D40 ADRP X22, 0x79E000
	0x039B3D44 LDRB W8, [X21 + 0xC56]
	0x039B3D48 LDR X22, [X22 + 0xF40]
	0x039B3D4C MOV X19, X1
	0x039B3D50 MOV X20, X0
	0x039B3D54 TBNZ X8, 0x0, 0x39B3D6C
	0x039B3D58 ADRP X0, 0x79E000
	0x039B3D5C LDR X0, [X0 + 0xF40]
	0x039B3D60 BL 0x1C16CF4
	0x039B3D64 MOVZ W8, 0x1
	0x039B3D68 STRB W8, [X21 + 0xC56]
	0x039B3D6C LDR X2, [X22]
	0x039B3D70 MOV X0, X20
	0x039B3D74 MOV W1, W31
	0x039B3D78 BL 0x21A89DC
	0x039B3D7C CBZ X0, 0x39B3D88
	0x039B3D80 LDR X8, [X0 + 0x10]
	0x039B3D84 B 0x39B3D8C
	0x039B3D88 MOV X8, X31
	0x039B3D8C STR X8, [X19]
	0x039B3D90 LDP X20, X19, [X31 + 0x20]
	0x039B3D94 LDP X22, X21, [X31 + 0x10]
	0x039B3D98 CMP X0, 0x0
	0x039B3D9C CSET W0, NE
	0x039B3DA0 LDR X30, [X31], #0x30
	0x039B3DA4 RET
	0x039B3DA8 LDR W0, [X0 + 0x38]
	0x039B3DAC RET
	0x039B3DB0 STR W1, [X0 + 0x38]
	0x039B3DB4 RET
	0x039B3DB8 STR X30, [X31 - 0x20]!
	0x039B3DBC STP X20, X19, [X31 + 0x10]
	0x039B3DC0 ADRP X20, 0xA2E000
	0x039B3DC4 ADRP X19, 0x79E000
	0x039B3DC8 LDRB W8, [X20 + 0xC57]
	0x039B3DCC LDR X19, [X19 + 0xF48]
	0x039B3DD0 TBNZ X8, 0x0, 0x39B3DE8
	0x039B3DD4 ADRP X0, 0x79E000
	0x039B3DD8 LDR X0, [X0 + 0xF48]
	0x039B3DDC BL 0x1C16CF4
	0x039B3DE0 MOVZ W8, 0x1
	0x039B3DE4 STRB W8, [X20 + 0xC57]
	0x039B3DE8 LDR X0, [X19]
	0x039B3DEC LDR W8, [X0 + 0xE0]
	0x039B3DF0 CBNZ W8, 0x39B3DF8
	0x039B3DF4 BL 0x1C16DFC
	0x039B3DF8 ADRP X20, 0xA2E000
	0x039B3DFC LDRB W8, [X20 + 0xCB9]
	0x039B3E00 CBNZ W8, 0x39B3E18
	0x039B3E04 ADRP X0, 0x79E000
	0x039B3E08 LDR X0, [X0 + 0xF48]
	0x039B3E0C BL 0x1C16CF4
	0x039B3E10 MOVZ W8, 0x1
	0x039B3E14 STRB W8, [X20 + 0xCB9]
	0x039B3E18 LDR X0, [X19]
	0x039B3E1C LDR W8, [X0 + 0xE0]
	0x039B3E20 CBNZ W8, 0x39B3E2C
	0x039B3E24 BL 0x1C16DFC
	0x039B3E28 LDR X0, [X19]
	0x039B3E2C LDR X8, [X0 + 0xB8]
	0x039B3E30 LDR X8, [X8 + 0x8]
	0x039B3E34 CBZ X8, 0x39B3E58
	0x039B3E38 LDR W8, [X8 + 0x34]
	0x039B3E3C LDP X20, X19, [X31 + 0x10]
	0x039B3E40 MOVZ W9, 0x3
	0x039B3E44 SUB W8, W8, 0x1
	0x039B3E48 CMP W8, 0x3
	0x039B3E4C CSEL W0, W8, W9, LT
	0x039B3E50 LDR X30, [X31], #0x20
	0x039B3E54 RET
	0x039B3E58 BL 0x1C16F20
	0x039B3E5C CMP W1, 0x200
	0x039B3E60 B.EQ 0x39B3E8C
	0x039B3E64 CMP W1, 0x400
	0x039B3E68 B.EQ 0x39B3E80
	0x039B3E6C CMP W1, 0x800
	0x039B3E70 B.NE 0x39B3E80
	0x039B3E74 MOVZ W0, 0x9000
	0x039B3E78 MOVK W0, 0x3D00000
	0x039B3E7C RET
	0x039B3E80 MOVZ W0, 0x4800
	0x039B3E84 MOVK W0, 0x1E80000
	0x039B3E88 RET
	0x039B3E8C MOVZ W0, 0x2400
	0x039B3E90 MOVK W0, 0xF40000
	0x039B3E94 RET
	0x039B3E98 STR D8, [X31 - 0x70]!
	0x039B3E9C STP X29, X30, [X31 + 0x10]
	0x039B3EA0 STP X28, X27, [X31 + 0x20]
	0x039B3EA4 STP X26, X25, [X31 + 0x30]
	0x039B3EA8 STP X24, X23, [X31 + 0x40]
	0x039B3EAC STP X22, X21, [X31 + 0x50]
	0x039B3EB0 STP X20, X19, [X31 + 0x60]
	0x039B3EB4 ADRP X21, 0xA2E000
	0x039B3EB8 ADRP X23, 0x79E000
	0x039B3EBC LDRB W8, [X21 + 0xC58]
	0x039B3EC0 LDR X23, [X23 + 0xF50]
	0x039B3EC4 MOV W20, W1
	0x039B3EC8 MOV X19, X0
	0x039B3ECC TBNZ X8, 0x0, 0x39B3FC8
	0x039B3ED0 ADRP X0, 0x777000
	0x039B3ED4 LDR X0, [X0 + 0x5A8]
	0x039B3ED8 BL 0x1C16CF4
	0x039B3EDC ADRP X0, 0x769000
	0x039B3EE0 LDR X0, [X0 + 0x4F0]
	0x039B3EE4 BL 0x1C16CF4
	0x039B3EE8 ADRP X0, 0x79E000
	0x039B3EEC LDR X0, [X0 + 0xF58]
	0x039B3EF0 BL 0x1C16CF4
	0x039B3EF4 ADRP X0, 0x79E000
	0x039B3EF8 LDR X0, [X0 + 0xF60]
	0x039B3EFC BL 0x1C16CF4
	0x039B3F00 ADRP X0, 0x79E000
	0x039B3F04 LDR X0, [X0 + 0xF68]
	0x039B3F08 BL 0x1C16CF4
	0x039B3F0C ADRP X0, 0x79E000
	0x039B3F10 LDR X0, [X0 + 0xF70]
	0x039B3F14 BL 0x1C16CF4
	0x039B3F18 ADRP X0, 0x741000
	0x039B3F1C LDR X0, [X0 + 0xE58]
	0x039B3F20 BL 0x1C16CF4
	0x039B3F24 ADRP X0, 0x79E000
	0x039B3F28 LDR X0, [X0 + 0xF78]
	0x039B3F2C BL 0x1C16CF4
	0x039B3F30 ADRP X0, 0x79E000
	0x039B3F34 LDR X0, [X0 + 0xF80]
	0x039B3F38 BL 0x1C16CF4
	0x039B3F3C ADRP X0, 0x79E000
	0x039B3F40 LDR X0, [X0 + 0xF88]
	0x039B3F44 BL 0x1C16CF4
	0x039B3F48 ADRP X0, 0x79E000
	0x039B3F4C LDR X0, [X0 + 0xF90]
	0x039B3F50 BL 0x1C16CF4
	0x039B3F54 ADRP X0, 0x79E000
	0x039B3F58 LDR X0, [X0 + 0xF98]
	0x039B3F5C BL 0x1C16CF4
	0x039B3F60 ADRP X0, 0x79E000
	0x039B3F64 LDR X0, [X0 + 0xFA0]
	0x039B3F68 BL 0x1C16CF4
	0x039B3F6C ADRP X0, 0x79E000
	0x039B3F70 LDR X0, [X0 + 0xFA8]
	0x039B3F74 BL 0x1C16CF4
	0x039B3F78 ADRP X0, 0x79E000
	0x039B3F7C LDR X0, [X0 + 0xFB0]
	0x039B3F80 BL 0x1C16CF4
	0x039B3F84 ADRP X0, 0x79E000
	0x039B3F88 LDR X0, [X0 + 0xFB8]
	0x039B3F8C BL 0x1C16CF4
	0x039B3F90 ADRP X0, 0x79E000
	0x039B3F94 LDR X0, [X0 + 0xF50]
	0x039B3F98 BL 0x1C16CF4
	0x039B3F9C ADRP X0, 0x79E000
	0x039B3FA0 LDR X0, [X0 + 0xFC0]
	0x039B3FA4 BL 0x1C16CF4
	0x039B3FA8 ADRP X0, 0x79E000
	0x039B3FAC LDR X0, [X0 + 0xFC8]
	0x039B3FB0 BL 0x1C16CF4
	0x039B3FB4 ADRP X0, 0x79E000
	0x039B3FB8 LDR X0, [X0 + 0xFD0]
	0x039B3FBC BL 0x1C16CF4
	0x039B3FC0 MOVZ W8, 0x1
	0x039B3FC4 STRB W8, [X21 + 0xC58]
	0x039B3FC8 LDR X0, [X23]
	0x039B3FCC LDR W8, [X0 + 0xE0]
	0x039B3FD0 CBNZ W8, 0x39B3FDC
	0x039B3FD4 BL 0x1C16DFC
	0x039B3FD8 LDR X0, [X23]
	0x039B3FDC LDR X8, [X0 + 0xB8]
	0x039B3FE0 ADRP X25, 0x79E000
	0x039B3FE4 ADRP X24, 0x79E000
	0x039B3FE8 LDR X21, [X8 + 0x8]
	0x039B3FEC LDR X25, [X25 + 0xF90]
	0x039B3FF0 LDR X24, [X24 + 0xF88]
	0x039B3FF4 CBNZ X21, 0x39B4048
	0x039B3FF8 LDR W8, [X0 + 0xE0]
	0x039B3FFC CBNZ W8, 0x39B4008
	0x039B4000 BL 0x1C16DFC
	0x039B4004 LDR X0, [X23]
	0x039B4008 ADRP X9, 0x79D000
	0x039B400C LDR X8, [X0 + 0xB8]
	0x039B4010 LDR X9, [X9 + 0xFC0]
	0x039B4014 LDR X22, [X8]
	0x039B4018 LDR X0, [X9]
	0x039B401C BL 0x1C16F10
	0x039B4020 ADRP X8, 0x79D000
	0x039B4024 LDR X8, [X8 + 0xFA8]
	0x039B4028 MOV X1, X22
	0x039B402C MOV X3, X31
	0x039B4030 MOV X21, X0
	0x039B4034 LDR X2, [X8]
	0x039B4038 BL 0x2725C6C
	0x039B403C LDR X8, [X23]
	0x039B4040 LDR X8, [X8 + 0xB8]
	0x039B4044 STR X21, [X8 + 0x8]
	0x039B4048 LDR X0, [X25]
	0x039B404C BL 0x1C16F10
	0x039B4050 LDR X4, [X24]
	0x039B4054 MOV X1, X21
	0x039B4058 MOV X2, X31
	0x039B405C MOV W3, W31
	0x039B4060 MOV X22, X0
	0x039B4064 BL 0x2493C20
	0x039B4068 CBZ X19, 0x39B437C
	0x039B406C STR X22, [X19 + 0x58]
	0x039B4070 LDR X0, [X23]
	0x039B4074 LDR W8, [X0 + 0xE0]
	0x039B4078 CBNZ W8, 0x39B4084
	0x039B407C BL 0x1C16DFC
	0x039B4080 LDR X0, [X23]
	0x039B4084 LDR X8, [X0 + 0xB8]
	0x039B4088 ADRP X25, 0x79D000
	0x039B408C ADRP X24, 0x79D000
	0x039B4090 LDR X21, [X8 + 0x10]
	0x039B4094 LDR X25, [X25 + 0xF98]
	0x039B4098 LDR X24, [X24 + 0xF80]
	0x039B409C CBNZ X21, 0x39B40F0
	0x039B40A0 LDR W8, [X0 + 0xE0]
	0x039B40A4 CBNZ W8, 0x39B40B0
	0x039B40A8 BL 0x1C16DFC
	0x039B40AC LDR X0, [X23]
	0x039B40B0 ADRP X9, 0x79D000
	0x039B40B4 LDR X8, [X0 + 0xB8]
	0x039B40B8 LDR X9, [X9 + 0xFC8]
	0x039B40BC LDR X22, [X8]
	0x039B40C0 LDR X0, [X9]
	0x039B40C4 BL 0x1C16F10
	0x039B40C8 ADRP X8, 0x79D000
	0x039B40CC LDR X8, [X8 + 0xFB0]
	0x039B40D0 MOV X1, X22
	0x039B40D4 MOV X3, X31
	0x039B40D8 MOV X21, X0
	0x039B40DC LDR X2, [X8]
	0x039B40E0 BL 0x2725C6C
	0x039B40E4 LDR X8, [X23]
	0x039B40E8 LDR X8, [X8 + 0xB8]
	0x039B40EC STR X21, [X8 + 0x10]
	0x039B40F0 LDR X0, [X25]
	0x039B40F4 BL 0x1C16F10
	0x039B40F8 LDR X4, [X24]
	0x039B40FC MOV X1, X21
	0x039B4100 MOV X2, X31
	0x039B4104 MOV W3, W31
	0x039B4108 MOV X22, X0
	0x039B410C BL 0x2493C20
	0x039B4110 STR X22, [X19 + 0x60]
	0x039B4114 LDR X0, [X23]
	0x039B4118 LDR W8, [X0 + 0xE0]
	0x039B411C CBNZ W8, 0x39B4128
	0x039B4120 BL 0x1C16DFC
	0x039B4124 LDR X0, [X23]
	0x039B4128 LDR X8, [X0 + 0xB8]
	0x039B412C ADRP X29, 0x79D000
	0x039B4130 ADRP X28, 0x79D000
	0x039B4134 ADRP X27, 0x79D000
	0x039B4138 ADRP X26, 0x79D000
	0x039B413C ADRP X25, 0x79D000
	0x039B4140 ADRP X24, 0x79D000
	0x039B4144 LDR X29, [X29 + 0xFA0]
	0x039B4148 LDR X28, [X28 + 0xF78]
	0x039B414C LDR X21, [X8 + 0x18]
	0x039B4150 LDR X27, [X27 + 0xF68]
	0x039B4154 LDR X26, [X26 + 0xF58]
	0x039B4158 LDR X25, [X25 + 0xF70]
	0x039B415C LDR X24, [X24 + 0xF60]
	0x039B4160 CBNZ X21, 0x39B41B4
	0x039B4164 LDR W8, [X0 + 0xE0]
	0x039B4168 CBNZ W8, 0x39B4174
	0x039B416C BL 0x1C16DFC
	0x039B4170 LDR X0, [X23]
	0x039B4174 ADRP X9, 0x79D000
	0x039B4178 LDR X8, [X0 + 0xB8]
	0x039B417C LDR X9, [X9 + 0xFD0]
	0x039B4180 LDR X22, [X8]
	0x039B4184 LDR X0, [X9]
	0x039B4188 BL 0x1C16F10
	0x039B418C ADRP X8, 0x79D000
	0x039B4190 LDR X8, [X8 + 0xFB8]
	0x039B4194 MOV X1, X22
	0x039B4198 MOV X3, X31
	0x039B419C MOV X21, X0
	0x039B41A0 LDR X2, [X8]
	0x039B41A4 BL 0x2725C6C
	0x039B41A8 LDR X8, [X23]
	0x039B41AC LDR X8, [X8 + 0xB8]
	0x039B41B0 STR X21, [X8 + 0x18]
	0x039B41B4 LDR X0, [X29]
	0x039B41B8 BL 0x1C16F10
	0x039B41BC LDR X4, [X28]
	0x039B41C0 MOV X1, X21
	0x039B41C4 MOV X2, X31
	0x039B41C8 MOV W3, W31
	0x039B41CC MOV X22, X0
	0x039B41D0 BL 0x2493C20
	0x039B41D4 ADRP X8, 0xFFFFFFFFFD13A000
	0x039B41D8 LDR V0, [X8 + 0x38]
	0x039B41DC MOV X0, X19
	0x039B41E0 MOV X1, X31
	0x039B41E4 STR X22, [X19 + 0x68]
	0x039B41E8 STUR D0, [X19 + 0x74]
	0x039B41EC BL 0x33BDD8C
	0x039B41F0 STR X31, [X19 + 0x40]
	0x039B41F4 STR W31, [X19 + 0x3C]
	0x039B41F8 LDR X0, [X27]
	0x039B41FC BL 0x1C16F10
	0x039B4200 LDR X1, [X26]
	0x039B4204 MOV X21, X0
	0x039B4208 BL 0x2B266E4
	0x039B420C STR X21, [X19 + 0x48]
	0x039B4210 LDR X0, [X25]
	0x039B4214 BL 0x1C16F10
	0x039B4218 LDR X1, [X24]
	0x039B421C MOV X21, X0
	0x039B4220 BL 0x2AA4804
	0x039B4224 CMP W20, 0x200
	0x039B4228 STR X21, [X19 + 0x50]
	0x039B422C STRB W31, [X19 + 0x70]
	0x039B4230 B.EQ 0x39B425C
	0x039B4234 CMP W20, 0x400
	0x039B4238 B.EQ 0x39B4250
	0x039B423C CMP W20, 0x800
	0x039B4240 B.NE 0x39B4250
	0x039B4244 ADRP X8, 0xFFFFFFFFFD136000
	0x039B4248 LDR V8, [X8 + 0x80]
	0x039B424C B 0x39B4264
	0x039B4250 ADRP X8, 0xFFFFFFFFFD136000
	0x039B4254 LDR V8, [X8 + 0x84]
	0x039B4258 B 0x39B4264
	0x039B425C ADRP X8, 0xFFFFFFFFFD135000
	0x039B4260 LDR V8, [X8 + 0xFDC]
	0x039B4264 ADRP X20, 0xA24000
	0x039B4268 LDRB W8, [X20 + 0xABE]
	0x039B426C CBNZ W8, 0x39B4284
	0x039B4270 ADRP X0, 0x73F000
	0x039B4274 LDR X0, [X0 + 0x5A8]
	0x039B4278 BL 0x1C16CF4
	0x039B427C MOVZ W8, 0x1
	0x039B4280 STRB W8, [X20 + 0xABE]
	0x039B4284 ADRP X8, 0x73F000
	0x039B4288 LDR X8, [X8 + 0x5A8]
	0x039B428C ADRP X20, 0x776000
	0x039B4290 ADRP X23, 0x740000
	0x039B4294 ADRP X22, 0x768000
	0x039B4298 LDR X0, [X8]
	0x039B429C LDR W8, [X0 + 0xE0]
	0x039B42A0 LDR X20, [X20 + 0x5A8]
	0x039B42A4 LDR X23, [X23 + 0xE58]
	0x039B42A8 LDR X22, [X22 + 0x4F0]
	0x039B42AC CBNZ W8, 0x39B42B4
	0x039B42B0 BL 0x1C16DFC
	0x039B42B4 MOVZ W8, 0x43730000
	0x039B42B8 FMOV S0, W8
	0x039B42BC MOVZ W9, 0x7F800000
	0x039B42C0 FDIV S0, S8, S0
	0x039B42C4 FMOV S1, W9
	0x039B42C8 FRINTP S2, S0
	0x039B42CC MOVZ W10, 0x80000000
	0x039B42D0 FCVTPS W8, S0
	0x039B42D4 FCMP S2, S1
	0x039B42D8 CSEL W8, W10, W8, EQ
	0x039B42DC STR W8, [X19 + 0x18]
	0x039B42E0 STR W8, [X19 + 0x20]
	0x039B42E4 LDR X0, [X20]
	0x039B42E8 CMP W8, 0x1
	0x039B42EC CSINC W20, W8, W31, GT
	0x039B42F0 BL 0x1C16F10
	0x039B42F4 MOV W1, W20
	0x039B42F8 MOV X2, X31
	0x039B42FC MOV X21, X0
	0x039B4300 BL 0x335735C
	0x039B4304 LDR W24, [X19 + 0x18]
	0x039B4308 STR X21, [X19 + 0x10]
	0x039B430C LDR X0, [X23]
	0x039B4310 MOVZ W8, 0xF3
	0x039B4314 MUL W20, W24, W8
	0x039B4318 MOV W1, W20
	0x039B431C BL 0x1C16D6C
	0x039B4320 STR X0, [X19 + 0x30]
	0x039B4324 LDR X0, [X22]
	0x039B4328 BL 0x1C16F10
	0x039B432C MOVZ W2, 0x4
	0x039B4330 MOVZ W3, 0x10
	0x039B4334 MOV W1, W20
	0x039B4338 MOV X4, X31
	0x039B433C MOV X21, X0
	0x039B4340 BL 0x3C3AC18
	0x039B4344 MOVZ W8, 0x3CC
	0x039B4348 MUL W8, W24, W8
	0x039B434C STR X21, [X19 + 0x28]
	0x039B4350 STR W31, [X19 + 0x1C]
	0x039B4354 STR W8, [X19 + 0x38]
	0x039B4358 MOV X0, X19
	0x039B435C LDP X20, X19, [X31 + 0x60]
	0x039B4360 LDP X22, X21, [X31 + 0x50]
	0x039B4364 LDP X24, X23, [X31 + 0x40]
	0x039B4368 LDP X26, X25, [X31 + 0x30]
	0x039B436C LDP X28, X27, [X31 + 0x20]
	0x039B4370 LDP X29, X30, [X31 + 0x10]
	0x039B4374 LDR V8, [X31], #0x70
	0x039B4378 B 0x39B4380
	0x039B437C BL 0x1C16F20
	0x039B4380 SUB X31, X31, 0xD0
	0x039B4384 STP X29, X30, [X31 + 0x70]
	0x039B4388 STP X28, X27, [X31 + 0x80]
	0x039B438C STP X26, X25, [X31 + 0x90]
	0x039B4390 STP X24, X23, [X31 + 0xA0]
	0x039B4394 STP X22, X21, [X31 + 0xB0]
	0x039B4398 STP X20, X19, [X31 + 0xC0]
	0x039B439C ADRP X20, 0xA2D000
	0x039B43A0 LDRB W8, [X20 + 0xC59]
	0x039B43A4 MOV X19, X0
	0x039B43A8 TBNZ X8, 0x0, 0x39B4498
	0x039B43AC ADRP X0, 0x79D000
	0x039B43B0 LDR X0, [X0 + 0xFD8]
	0x039B43B4 BL 0x1C16CF4
	0x039B43B8 ADRP X0, 0x79D000
	0x039B43BC LDR X0, [X0 + 0xFE0]
	0x039B43C0 BL 0x1C16CF4
	0x039B43C4 ADRP X0, 0x79D000
	0x039B43C8 LDR X0, [X0 + 0xFE8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0xA2F000
	015 Move [X31+48], X1
	016 Move [X31+56], X2
	017 Move X19, 0x79F000
	018 Move W8, [X20+3147]
	019 Move X19, [X19+3768]
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {111}
	025 Move X0, 0x79F000
	026 Move X0, [X0+3776]
	027 Call 0x1C17CF4
	028 Move X0, 0x743000
	029 Move X0, [X0+368]
	030 Call 0x1C17CF4
	031 Move X0, 0x741000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move X0, 0x741000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x79F000
	038 Move X0, [X0+664]
	039 Call 0x1C17CF4
	040 Move X0, 0x741000
	041 Move X0, [X0+2512]
	042 Call 0x1C17CF4
	043 Move X0, 0x79F000
	044 Move X0, [X0+3768]
	045 Call 0x1C17CF4
	046 Move X0, 0x741000
	047 Move X0, [X0+2704]
	048 Call 0x1C17CF4
	049 Move X0, 0x749000
	050 Move X0, [X0+1824]
	051 Call 0x1C17CF4
	052 Move X0, 0x799000
	053 Move X0, [X0+72]
	054 Call 0x1C17CF4
	055 Move X0, 0x799000
	056 Move X0, [X0+8]
	057 Call 0x1C17CF4
	058 Move X0, 0x745000
	059 Move X0, [X0+2344]
	060 Call 0x1C17CF4
	061 Move X0, 0x799000
	062 Move X0, [X0+136]
	063 Call 0x1C17CF4
	064 Move X0, 0x741000
	065 Move X0, [X0+3544]
	066 Call 0x1C17CF4
	067 Move X0, 0x79F000
	068 Move X0, [X0+3784]
	069 Call 0x1C17CF4
	070 Move X0, 0x79F000
	071 Move X0, [X0+3792]
	072 Call 0x1C17CF4
	073 Move X0, 0x79F000
	074 Move X0, [X0+3800]
	075 Call 0x1C17CF4
	076 Move X0, 0x79F000
	077 Move X0, [X0+3808]
	078 Call 0x1C17CF4
	079 Move X0, 0x79F000
	080 Move X0, [X0+3816]
	081 Call 0x1C17CF4
	082 Move X0, 0x79F000
	083 Move X0, [X0+3824]
	084 Call 0x1C17CF4
	085 Move X0, 0x79F000
	086 Move X0, [X0+3832]
	087 Call 0x1C17CF4
	088 Move X0, 0x79F000
	089 Move X0, [X0+3840]
	090 Call 0x1C17CF4
	091 Move X0, 0x741000
	092 Move X0, [X0+2440]
	093 Call 0x1C17CF4
	094 Move X0, 0x775000
	095 Move X0, [X0+4088]
	096 Call 0x1C17CF4
	097 Move X0, 0x798000
	098 Move X0, [X0+3552]
	099 Call 0x1C17CF4
	100 Move X0, 0x799000
	101 Move X0, [X0+248]
	102 Call 0x1C17CF4
	103 Move X0, 0x776000
	104 Move X0, [X0]
	105 Call 0x1C17CF4
	106 Move X0, 0x799000
	107 Move X0, [X0+312]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X20+3147], W8
	111 Move X0, [X19]
	112 NotImplemented "Instruction STRH not yet implemented."
	113 Move [X31+40], W31
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Add X0, X31, 48
	119 Move X1, X31
	120 Call AsyncGPUReadbackRequest.get_hasError, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {136}
	125 Move X8, 0x79F000
	126 Move X8, [X8+3800]
	127 Move X1, [X8]
	128 Move X8, [X23+56]
	129 Move [X23+48], X1
	130 Compare X8, 0
	131 JumpIfEqual {838}
	132 Move X0, [X8+64]
	133 Move X9, [X8+24]
	134 Move X2, [X8+40]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, 0x79F000
	137 Move X8, [X8+3776]
	138 Move X2, [X8]
	139 Add X0, X31, 48
	140 Move W1, W31
	141 Call 0x2185884, X0, X1
	142 Move W19, [X0]
	143 Move X20, X0
	144 Move X22, X1
	145 Move W8, W19
	146 ShiftRight W8, 14
	147 And W8, W8, 0x7FFFFFFF
	148 Compare W8, 0
	149 JumpIfEqual {166}
	150 Move X8, 0x741000
	151 Move X8, [X8+2600]
	152 Move X0, [X8]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X8, 0x79F000
	158 Move X8, [X8+3832]
	159 Move X0, [X8]
	160 Move X1, X31
	161 Call Debug.LogWarning, X0
	162 Move X8, 0x741000
	163 Move X8, [X8+2440]
	164 Move W19, 0x4000
	165 Move X21, [X8]
	166 Move X8, 0x741000
	167 Move X8, [X8+2440]
	168 Move X21, [X8]
	169 Compare W19, 0
	170 JumpIfEqual {821}
	171 Add X0, X23, 40
	172 Move X1, X31
	173 Call Int32.ToString, X0
	174 Move X8, 0x79F000
	175 Move X8, [X8+3808]
	176 Move X9, 0x745000
	177 Move X9, [X9+2344]
	178 Move X2, X0
	179 Move X1, [X8]
	180 Move X3, [X9]
	181 Move X0, X21
	182 Move X4, X31
	183 Call String.Concat, X0, X1, X2, X3
	184 Move X21, X0
	185 Move [X31+8], W31
	186 Move [X31], X23
	187 Move X8, 0x79F000
	188 Move X8, [X8+664]
	189 Move X2, [X8]
	190 Move X0, X20
	191 Move X1, X22
	192 Call NativeArrayUnsafeUtility.GetUnsafePtr, X0
	193 Move [X31+12], W19
	194 Move X29, 0x741000
	195 Move X26, 0x749000
	196 Move X25, 0x743000
	197 Move X29, [X29+3544]
	198 Move X26, [X26+1824]
	199 Move X25, [X25+368]
	200 Move X22, X0
	201 Move W27, W19
	202 Move W24, 1
	203 Move [X31+16], X20
	204 Move X8, W24
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W23, [X20]
	207 Move TEMP, X23
	208 And TEMP, TEMP, 128
	209 Compare TEMP, 128
	210 JumpIfNotEqual {242}
	211 Add W19, W24, 1
	212 Move X8, W19
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move W24, [X20]
	215 Move W26, 4
	216 And W8, W24, 255
	217 NotImplemented "Instruction STRH not yet implemented."
	218 Move X0, [X25]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Add X0, X31, 44
	224 Move X1, X31
	225 Call Char.ToString, X0
	226 Move X1, X0
	227 Move X0, X21
	228 Move X2, X31
	229 Call String.Concat, X0, X1
	230 Move X21, X0
	231 Move W24, W24
	232 ShiftRight W24, 8
	233 And W24, W24, 0x7FFFFFFF
	234 Subtract W26, W26, 1
	235 Move X1, [X29]
	236 Move X0, X21
	237 Move X2, X31
	238 Call String.Concat, X0, X1
	239 Move X26, 0x749000
	240 Move X26, [X26+1824]
	241 Move X21, X0
	242 Move W19, W24
	243 Move X24, 0x741000
	244 Move X24, [X24+2704]
	245 And W8, W23, 15
	246 Subtract W8, W8, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X9, -48345088
	249 Add X9, X9, 2696
	250 Move W28, [X9]
	251 Move W28, W31
	252 Add W9, W28, W19
	253 Move X9, W9
	254 NotImplemented "Instruction CMP not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X11, -48345088
	257 Add X11, X11, 2670
	258 NotImplemented "Instruction ADR not yet implemented."
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Add X9, X9, X10
	261 Add W19, W19, 1
	262 CallNoReturn X9
	263 Move X8, [X31+16]
	264 Move X0, [X26]
	265 Move W8, [X8]
	266 Move [X31+36], W8
	267 Add X1, X31, 36
	268 Call 0x1C17E04
	269 Move X1, X0
	270 Move X8, 0x79F000
	271 Move X8, [X8+3824]
	272 Move X0, [X8]
	273 Move X2, X31
	274 Call String.Format, X0, X1
	275 Move X1, X0
	276 Move X0, X21
	277 Move X2, X31
	278 Call String.Concat, X0, X1
	279 Move X8, 0x741000
	280 Move X8, [X8+2512]
	281 Move X0, [X8]
	282 Move W1, 4
	283 Call 0x1C17D6C
	284 Add X26, X22, W19
	285 Move X23, X0
	286 Move V0, [X26]
	287 Move X0, [X24]
	288 Move [X31+36], S0
	289 Add X1, X31, 36
	290 Call 0x1C17E04
	291 Compare X23, 0
	292 JumpIfEqual {827}
	293 Move X24, X0
	294 Compare X0, 0
	295 JumpIfEqual {302}
	296 Move X8, [X23]
	297 Move X1, [X8+64]
	298 Move X0, X24
	299 Call 0x1C17E00
	300 Compare X0, 0
	301 JumpIfEqual {839}
	302 Move W8, [X23+24]
	303 Compare W8, 0
	304 JumpIfEqual {826}
	305 Move [X23+32], X24
	306 Move X8, 0x741000
	307 Move V0, [X26+4]
	308 Move X8, [X8+2704]
	309 Move [X31+32], S0
	310 Move X0, [X8]
	311 Add X1, X31, 32
	312 Call 0x1C17E04
	313 Move X24, X0
	314 Compare X0, 0
	315 JumpIfEqual {322}
	316 Move X8, [X23]
	317 Move X1, [X8+64]
	318 Move X0, X24
	319 Call 0x1C17E00
	320 Compare X0, 0
	321 JumpIfEqual {842}
	322 Move W8, [X23+24]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move [X23+40], X24
	325 Move X8, 0x741000
	326 Move V0, [X26+8]
	327 Move X8, [X8+2704]
	328 Move [X31+28], S0
	329 Move X0, [X8]
	330 Add X1, X31, 28
	331 Call 0x1C17E04
	332 Move X24, X0
	333 Compare X0, 0
	334 JumpIfEqual {341}
	335 Move X8, [X23]
	336 Move X1, [X8+64]
	337 Move X0, X24
	338 Call 0x1C17E00
	339 Compare X0, 0
	340 JumpIfEqual {845}
	341 Move W8, [X23+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move [X23+48], X24
	344 Move X8, 0x741000
	345 Move V0, [X26+12]
	346 Move X8, [X8+2704]
	347 Move [X31+24], S0
	348 Move X0, [X8]
	349 Add X1, X31, 24
	350 Call 0x1C17E04
	351 Move X26, 0x749000
	352 Move X26, [X26+1824]
	353 Move X24, X0
	354 Compare X0, 0
	355 JumpIfEqual {362}
	356 Move X8, [X23]
	357 Move X1, [X8+64]
	358 Move X0, X24
	359 Call 0x1C17E00
	360 Compare X0, 0
	361 JumpIfEqual {848}
	362 Move W8, [X23+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move [X23+56], X24
	365 Move X8, 0x79F000
	366 Move X8, [X8+3840]
	367 Move X0, [X8]
	368 Move X1, X23
	369 Move X2, X31
	370 Call String.Format, X0, X1
	371 Move X1, X0
	372 Move X0, X21
	373 Move X2, X31
	374 Call String.Concat, X0, X1
	375 Add X24, X22, W19
	376 Move X20, 0x741000
	377 Move W8, [X24]
	378 Move X20, [X20+1880]
	379 Move [X31+36], W8
	380 Move X0, [X20]
	381 Add X1, X31, 36
	382 Call 0x1C17E04
	383 Move X23, X0
	384 Move W8, [X24+4]
	385 Move X0, [X20]
	386 Move [X31+32], W8
	387 Add X1, X31, 32
	388 Call 0x1C17E04
	389 Move X8, 0x799000
	390 Move X8, [X8+8]
	391 Move X2, X0
	392 Move X0, [X8]
	393 Move X1, X23
	394 Move X3, X31
	395 Call String.Format, X0, X1, X2
	396 Move X1, X0
	397 Move X0, X21
	398 Move X2, X31
	399 Call String.Concat, X0, X1
	400 Move X8, [X31+16]
	401 Move X9, 0x776000
	402 Move W8, [X8]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move X8, 0x775000
	405 Move X8, [X8+4088]
	406 Move X9, [X9]
	407 NotImplemented "Instruction CSEL not yet implemented."
	408 Move X1, [X8]
	409 Move X0, X21
	410 Move X2, X31
	411 Call String.Concat, X0, X1
	412 Move X8, 0x741000
	413 Move X8, [X8+2512]
	414 Move X0, [X8]
	415 Move W1, 4
	416 Call 0x1C17D6C
	417 Add X26, X22, W19
	418 Move X9, 0x749000
	419 Move W8, [X26]
	420 Move X9, [X9+1824]
	421 Move X23, X0
	422 Move [X31+36], W8
	423 Move X0, [X9]
	424 Add X1, X31, 36
	425 Call 0x1C17E04
	426 Compare X23, 0
	427 JumpIfEqual {837}
	428 Move X24, X0
	429 Compare X0, 0
	430 JumpIfEqual {437}
	431 Move X8, [X23]
	432 Move X1, [X8+64]
	433 Move X0, X24
	434 Call 0x1C17E00
	435 Compare X0, 0
	436 JumpIfEqual {863}
	437 Move W8, [X23+24]
	438 Compare W8, 0
	439 JumpIfEqual {836}
	440 Move [X23+32], X24
	441 Move X9, 0x749000
	442 Move W8, [X26+4]
	443 Move X9, [X9+1824]
	444 Move [X31+32], W8
	445 Move X0, [X9]
	446 Add X1, X31, 32
	447 Call 0x1C17E04
	448 Move X24, X0
	449 Compare X0, 0
	450 JumpIfEqual {457}
	451 Move X8, [X23]
	452 Move X1, [X8+64]
	453 Move X0, X24
	454 Call 0x1C17E00
	455 Compare X0, 0
	456 JumpIfEqual {866}
	457 Move W8, [X23+24]
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move [X23+40], X24
	460 Move X9, 0x749000
	461 Move W8, [X26+8]
	462 Move X9, [X9+1824]
	463 Move [X31+28], W8
	464 Move X0, [X9]
	465 Add X1, X31, 28
	466 Call 0x1C17E04
	467 Move X24, X0
	468 Compare X0, 0
	469 JumpIfEqual {476}
	470 Move X8, [X23]
	471 Move X1, [X8+64]
	472 Move X0, X24
	473 Call 0x1C17E00
	474 Compare X0, 0
	475 JumpIfEqual {869}
	476 Move W8, [X23+24]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move [X23+48], X24
	479 Move W8, [X26+12]
	480 Move X26, 0x749000
	481 Move X26, [X26+1824]
	482 Move [X31+24], W8
	483 Move X0, [X26]
	484 Add X1, X31, 24
	485 Call 0x1C17E04
	486 Move X24, X0
	487 Compare X0, 0
	488 JumpIfEqual {495}
	489 Move X8, [X23]
	490 Move X1, [X8+64]
	491 Move X0, X24
	492 Call 0x1C17E00
	493 Compare X0, 0
	494 JumpIfEqual {872}
	495 Move W8, [X23+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move [X23+56], X24
	498 Move X8, 0x798000
	499 Move X8, [X8+3552]
	500 Move X0, [X8]
	501 Move X1, X23
	502 Move X2, X31
	503 Call String.Format, X0, X1
	504 Move X1, X0
	505 Move X0, X21
	506 Move X2, X31
	507 Call String.Concat, X0, X1
	508 Move V0, [X22]
	509 Move X0, [X24]
	510 Move [X31+36], S0
	511 Add X1, X31, 36
	512 Call 0x1C17E04
	513 Move X1, X0
	514 Move X8, 0x79F000
	515 Move X8, [X8+3784]
	516 Move X0, [X8]
	517 Move X2, X31
	518 Call String.Format, X0, X1
	519 Move X1, X0
	520 Move X0, X21
	521 Move X2, X31
	522 Call String.Concat, X0, X1
	523 Add X24, X22, W19
	524 Move W8, [X24]
	525 Move X0, [X26]
	526 Move [X31+36], W8
	527 Add X1, X31, 36
	528 Call 0x1C17E04
	529 Move X23, X0
	530 Move W8, [X24+4]
	531 Move X0, [X26]
	532 Move [X31+32], W8
	533 Add X1, X31, 32
	534 Call 0x1C17E04
	535 Move X8, 0x799000
	536 Move X8, [X8+248]
	537 Move X2, X0
	538 Move X0, [X8]
	539 Move X1, X23
	540 Move X3, X31
	541 Call String.Format, X0, X1, X2
	542 Move X1, X0
	543 Move X0, X21
	544 Move X2, X31
	545 Call String.Concat, X0, X1
	546 Add X26, X22, W19
	547 Move X20, 0x741000
	548 Move W8, [X26]
	549 Move X20, [X20+1880]
	550 Move [X31+36], W8
	551 Move X0, [X20]
	552 Add X1, X31, 36
	553 Call 0x1C17E04
	554 Move X23, X0
	555 Move W8, [X26+4]
	556 Move X0, [X20]
	557 Move [X31+32], W8
	558 Add X1, X31, 32
	559 Call 0x1C17E04
	560 Move X24, X0
	561 Move W8, [X26+8]
	562 Move X0, [X20]
	563 Move [X31+28], W8
	564 Add X1, X31, 28
	565 Call 0x1C17E04
	566 Move X8, 0x799000
	567 Move X8, [X8+72]
	568 Move X3, X0
	569 Move X0, [X8]
	570 Move X1, X23
	571 Move X2, X24
	572 Move X4, X31
	573 Call String.Format, X0, X1, X2, X3
	574 Move X1, X0
	575 Move X26, 0x749000
	576 Move X26, [X26+1824]
	577 Move X0, X21
	578 Move X2, X31
	579 Call String.Concat, X0, X1
	580 Move W8, [X22]
	581 Move [X31+40], W8
	582 Add X0, X31, 40
	583 Move X1, X31
	584 Call Int32.ToString, X0
	585 Move X1, X0
	586 Move X0, X21
	587 Move X2, X31
	588 Call String.Concat, X0, X1
	589 Move X20, X24
	590 Add X24, X22, W19
	591 Move V0, [X24]
	592 Move X0, [X20]
	593 Move [X31+36], S0
	594 Add X1, X31, 36
	595 Call 0x1C17E04
	596 Move X23, X0
	597 Move V0, [X24+4]
	598 Move X0, [X20]
	599 Move [X31+32], S0
	600 Add X1, X31, 32
	601 Call 0x1C17E04
	602 Move X8, 0x79F000
	603 Move X8, [X8+3816]
	604 Move X2, X0
	605 Move X0, [X8]
	606 Move X1, X23
	607 Move X3, X31
	608 Call String.Format, X0, X1, X2
	609 Move X1, X0
	610 Move X0, X21
	611 Move X2, X31
	612 Call String.Concat, X0, X1
	613 Move W19, [X31+12]
	614 Move X8, X22
	615 Move X22, X29
	616 Move X29, X26
	617 Add X26, X8, W19
	618 Move X20, X8
	619 Move W8, [X26]
	620 Move X0, [X29]
	621 Move [X31+36], W8
	622 Add X1, X31, 36
	623 Call 0x1C17E04
	624 Move X23, X0
	625 Move W8, [X26+4]
	626 Move X0, [X29]
	627 Move [X31+32], W8
	628 Add X1, X31, 32
	629 Call 0x1C17E04
	630 Move X24, X0
	631 Move W8, [X26+8]
	632 Move X0, [X29]
	633 Move [X31+28], W8
	634 Add X1, X31, 28
	635 Call 0x1C17E04
	636 Move X8, 0x799000
	637 Move X8, [X8+312]
	638 Move X3, X0
	639 Move X26, X29
	640 Move X0, [X8]
	641 Move X1, X23
	642 Move X2, X24
	643 Move X4, X31
	644 Call String.Format, X0, X1, X2, X3
	645 Move X1, X0
	646 Move X29, X22
	647 Move X0, X21
	648 Move X2, X31
	649 Call String.Concat, X0, X1
	650 Move X21, X0
	651 Move X22, X20
	652 Move X8, 0x741000
	653 Move X8, [X8+2512]
	654 Move X0, [X8]
	655 Move W1, 4
	656 Call 0x1C17D6C
	657 Add X26, X22, W19
	658 Move X9, 0x741000
	659 Move W8, [X26]
	660 Move X9, [X9+1880]
	661 Move X23, X0
	662 Move [X31+36], W8
	663 Move X0, [X9]
	664 Add X1, X31, 36
	665 Call 0x1C17E04
	666 Compare X23, 0
	667 JumpIfEqual {832}
	668 Move X24, X0
	669 Compare X0, 0
	670 JumpIfEqual {677}
	671 Move X8, [X23]
	672 Move X1, [X8+64]
	673 Move X0, X24
	674 Call 0x1C17E00
	675 Compare X0, 0
	676 JumpIfEqual {851}
	677 Move W8, [X23+24]
	678 Compare W8, 0
	679 JumpIfEqual {831}
	680 Move [X23+32], X24
	681 Move X9, 0x741000
	682 Move W8, [X26+4]
	683 Move X9, [X9+1880]
	684 Move [X31+32], W8
	685 Move X0, [X9]
	686 Add X1, X31, 32
	687 Call 0x1C17E04
	688 Move X24, X0
	689 Compare X0, 0
	690 JumpIfEqual {697}
	691 Move X8, [X23]
	692 Move X1, [X8+64]
	693 Move X0, X24
	694 Call 0x1C17E00
	695 Compare X0, 0
	696 JumpIfEqual {854}
	697 Move W8, [X23+24]
	698 NotImplemented "Instruction CMP not yet implemented."
	699 Move [X23+40], X24
	700 Move X9, 0x741000
	701 Move W8, [X26+8]
	702 Move X9, [X9+1880]
	703 Move [X31+28], W8
	704 Move X0, [X9]
	705 Add X1, X31, 28
	706 Call 0x1C17E04
	707 Move X24, X0
	708 Compare X0, 0
	709 JumpIfEqual {716}
	710 Move X8, [X23]
	711 Move X1, [X8+64]
	712 Move X0, X24
	713 Call 0x1C17E00
	714 Compare X0, 0
	715 JumpIfEqual {857}
	716 Move W8, [X23+24]
	717 NotImplemented "Instruction CMP not yet implemented."
	718 Move [X23+48], X24
	719 Move X9, 0x740000
	720 Move W8, [X26+12]
	721 Call 0x3EB270C
	722 Return 
	723 Move [X31+24], W8
	724 Move X0, [X9]
	725 Add X1, X31, 24
	726 Call 0x1C17E04
	727 Move X26, 0x748000
	728 Move X26, [X26+1824]
	729 Move X24, X0
	730 Compare X0, 0
	731 JumpIfEqual {738}
	732 Move X8, [X23]
	733 Move X1, [X8+64]
	734 Move X0, X24
	735 Call 0x1C17E00
	736 Compare X0, 0
	737 JumpIfEqual {860}
	738 Move W8, [X23+24]
	739 NotImplemented "Instruction CMP not yet implemented."
	740 Move [X23+56], X24
	741 Move X8, 0x798000
	742 Move X8, [X8+136]
	743 Move X0, [X8]
	744 Move X1, X23
	745 Move X2, X31
	746 Call String.Format, X0, X1
	747 Move X1, X0
	748 Move X0, X21
	749 Move X2, X31
	750 Call String.Concat, X0, X1
	751 Add X26, X22, W19
	752 Move V0, [X26]
	753 Move X0, [X24]
	754 Move [X31+36], S0
	755 Add X1, X31, 36
	756 Call 0x1C17E04
	757 Move X23, X0
	758 Move V0, [X26+4]
	759 Move X0, [X24]
	760 Move [X31+32], S0
	761 Add X1, X31, 32
	762 Call 0x1C17E04
	763 Move X8, X24
	764 Move X24, X0
	765 Move V0, [X26+8]
	766 Move X0, [X8]
	767 Move [X31+28], S0
	768 Add X1, X31, 28
	769 Call 0x1C17E04
	770 Move X8, 0x79E000
	771 Move X8, [X8+3792]
	772 Move X3, X0
	773 Move X0, [X8]
	774 Move X1, X23
	775 Move X2, X24
	776 Move X4, X31
	777 Call String.Format, X0, X1, X2, X3
	778 Move X1, X0
	779 Move X26, 0x748000
	780 Move X26, [X26+1824]
	781 Move X0, X21
	782 Move X2, X31
	783 Call String.Concat, X0, X1
	784 Move X21, X0
	785 Move X1, [X29]
	786 Add W24, W19, W28
	787 Move X0, X21
	788 Move X2, X31
	789 Call String.Concat, X0, X1
	790 Move X21, X0
	791 Move X20, [X31+16]
	792 Move X9, [X31]
	793 Move W8, [X31+8]
	794 Move TEMP, X8
	795 And TEMP, TEMP, 1
	796 Compare TEMP, 1
	797 JumpIfEqual {807}
	798 Move X8, [X9+56]
	799 Move [X9+48], X21
	800 Compare X8, 0
	801 JumpIfEqual {875}
	802 Move X0, [X8+64]
	803 Move X9, [X8+24]
	804 Move X2, [X8+40]
	805 Move X1, X21
	806 NotImplemented "Instruction BLR not yet implemented."
	807 Move X20, [X31+144]
	808 Move X19, [X31+152]
	809 Move X22, [X31+128]
	810 Move X21, [X31+136]
	811 Move X24, [X31+112]
	812 Move X23, [X31+120]
	813 Move X26, [X31+96]
	814 Move X25, [X31+104]
	815 Move X28, [X31+80]
	816 Move X27, [X31+88]
	817 Move X29, [X31+64]
	818 Move X30, [X31+72]
	819 Add X31, X31, 160
	820 Return 
	821 Move W8, 1
	822 Move [X31+8], W8
	823 Call 0x1C17F28
	824 Call 0x1C17F28
	825 Call 0x1C17F28
	826 Call 0x1C17F28
	827 Call 0x1C17F20
	828 Call 0x1C17F28
	829 Call 0x1C17F28
	830 Call 0x1C17F28
	831 Call 0x1C17F28
	832 Call 0x1C17F20
	833 Call 0x1C17F28
	834 Call 0x1C17F28
	835 Call 0x1C17F28
	836 Call 0x1C17F28
	837 Call 0x1C17F20
	838 Call 0x1C17F20
	839 Call 0x1C17F44
	840 Move X1, X31
	841 Call 0x1C17DEC
	842 Call 0x1C17F44
	843 Move X1, X31
	844 Call 0x1C17DEC
	845 Call 0x1C17F44
	846 Move X1, X31
	847 Call 0x1C17DEC
	848 Call 0x1C17F44
	849 Move X1, X31
	850 Call 0x1C17DEC
	851 Call 0x1C17F44
	852 Move X1, X31
	853 Call 0x1C17DEC
	854 Call 0x1C17F44
	855 Move X1, X31
	856 Call 0x1C17DEC
	857 Call 0x1C17F44
	858 Move X1, X31
	859 Call 0x1C17DEC
	860 Call 0x1C17F44
	861 Move X1, X31
	862 Call 0x1C17DEC
	863 Call 0x1C17F44
	864 Move X1, X31
	865 Call 0x1C17DEC
	866 Call 0x1C17F44
	867 Move X1, X31
	868 Call 0x1C17DEC
	869 Call 0x1C17F44
	870 Move X1, X31
	871 Call 0x1C17DEC
	872 Call 0x1C17F44
	873 Move X1, X31
	874 Call 0x1C17DEC
	875 Call 0x1C17F20
	876 NotImplemented "Instruction CMP not yet implemented."
	877 Call 0x3EB2AD0
	878 Move X19, [X0]
	879 Call 0x3EB2AE0
	880 Compare X19, 0
	881 JumpIfEqual {807}
	882 Move X0, X19
	883 Call 0x1C17F18
	884 Compare X19, 0
	885 JumpIfNotEqual {887}
	886 Call 0x1D2D690
	887 Move X0, X19
	888 Call 0x1C17F18
	889 Call 0x1991590

Method: System.Void EndFrame()

Disassembly:
	0x039B43CC BL 0x1C16CF4
	0x039B43D0 ADRP X0, 0x79D000
	0x039B43D4 LDR X0, [X0 + 0xFF0]
	0x039B43D8 BL 0x1C16CF4
	0x039B43DC ADRP X0, 0x79D000
	0x039B43E0 LDR X0, [X0 + 0xFF8]
	0x039B43E4 BL 0x1C16CF4
	0x039B43E8 ADRP X0, 0x79E000
	0x039B43EC LDR X0, [X0]
	0x039B43F0 BL 0x1C16CF4
	0x039B43F4 ADRP X0, 0x79E000
	0x039B43F8 LDR X0, [X0 + 0x8]
	0x039B43FC BL 0x1C16CF4
	0x039B4400 ADRP X0, 0x79E000
	0x039B4404 LDR X0, [X0 + 0x10]
	0x039B4408 BL 0x1C16CF4
	0x039B440C ADRP X0, 0x79E000
	0x039B4410 LDR X0, [X0 + 0x18]
	0x039B4414 BL 0x1C16CF4
	0x039B4418 ADRP X0, 0x79E000
	0x039B441C LDR X0, [X0 + 0x20]
	0x039B4420 BL 0x1C16CF4
	0x039B4424 ADRP X0, 0x79E000
	0x039B4428 LDR X0, [X0 + 0x28]
	0x039B442C BL 0x1C16CF4
	0x039B4430 ADRP X0, 0x79E000
	0x039B4434 LDR X0, [X0 + 0x30]
	0x039B4438 BL 0x1C16CF4
	0x039B443C ADRP X0, 0x79E000
	0x039B4440 LDR X0, [X0 + 0x38]
	0x039B4444 BL 0x1C16CF4
	0x039B4448 ADRP X0, 0x79E000
	0x039B444C LDR X0, [X0 + 0x40]
	0x039B4450 BL 0x1C16CF4
	0x039B4454 ADRP X0, 0x79E000
	0x039B4458 LDR X0, [X0 + 0x48]
	0x039B445C BL 0x1C16CF4
	0x039B4460 ADRP X0, 0x79E000
	0x039B4464 LDR X0, [X0 + 0x50]
	0x039B4468 BL 0x1C16CF4
	0x039B446C ADRP X0, 0x79E000
	0x039B4470 LDR X0, [X0 + 0x58]
	0x039B4474 BL 0x1C16CF4
	0x039B4478 ADRP X0, 0x79E000
	0x039B447C LDR X0, [X0 + 0x60]
	0x039B4480 BL 0x1C16CF4
	0x039B4484 ADRP X0, 0x79E000
	0x039B4488 LDR X0, [X0 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA2E000
	006 Move W8, [X20+3148]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x79E000
	013 Move X0, [X0+3736]
	014 Call 0x1C17CF4
	015 Move X0, 0x79E000
	016 Move X0, [X0+3848]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3148], W8
	020 Move W8, [X19+40]
	021 Move X0, [X19+16]
	022 Add W9, W8, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Compare X0, 0
	026 JumpIfEqual {57}
	027 Move X10, 0x79E000
	028 Move X10, [X10+3736]
	029 Move X20, [X19+24]
	030 And W9, W9, 0xFFFFFFFC
	031 Subtract W21, W8, W9
	032 Move X2, [X10]
	033 Move W1, W21
	034 Call List`1<Object>.get_Item, X0, X1
	035 Move X1, [X19+32]
	036 Move X2, X31
	037 Call AsyncGPUReadback.Request, X0, X1
	038 Compare X20, 0
	039 JumpIfEqual {57}
	040 Move X8, 0x79E000
	041 Move X8, [X8+3848]
	042 Move X2, X0
	043 Move X3, X1
	044 Move X0, X20
	045 Move X4, [X8]
	046 Move W1, W21
	047 Call List`1<AsyncGPUReadbackRequest>.set_Item, X0, X1, X2
	048 Move W8, [X19+40]
	049 Move [X19+44], W31
	050 Add W8, W8, 1
	051 Move [X19+40], W8
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Call 0x1C17F20

Method: System.String get_outputLine()

Disassembly:
	0x039B448C BL 0x1C16CF4
	0x039B4490 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_outputAction(System.Action`1<System.String> value)

Disassembly:
	0x039B4494 STRB W8, [X20 + 0xC59]
	0x039B4498 STP X31, X31, [X31 + 0x50]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void DefaultOutput(System.String line)

Disassembly:
	0x039B449C STR X31, [X31 + 0x60]
	0x039B44A0 STP X31, X31, [X31 + 0x30]
	0x039B44A4 STR X31, [X31 + 0x40]
	0x039B44A8 STP X31, X31, [X31 + 0x18]
	0x039B44AC STR X31, [X31 + 0x28]
	0x039B44B0 LDR X11, [X19 + 0x30]
	0x039B44B4 CBZ X11, 0x39B4760
	0x039B44B8 LDR W8, [X11 + 0x18]
	0x039B44BC UBFM X9, X8, 0x20, 0x1F
	0x039B44C0 CMP X9, 0x1
	0x039B44C4 B.LT 0x39B44F0
	0x039B44C8 MOV X9, X31
	0x039B44CC SXTW X10, W8
	0x039B44D0 ADD X11, X11, 0x20
	0x039B44D4 MOVN W12, 0x0
	0x039B44D8 CMP X9, X8
	0x039B44DC B.CS 0x39B475C
	0x039B44E0 STR W12, [X11, X9, LSL #2]
	0x039B44E4 ADD X9, X9, 0x1
	0x039B44E8 CMP X9, X10
	0x039B44EC B.LT 0x39B44D8
	0x039B44F0 LDR X0, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xA2E000
	006 Move X21, 0x740000
	007 Move W8, [X20+3149]
	008 Move X21, [X21+2600]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x740000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3149], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Debug.Log, X0
	031 Return 

Method: System.Void .cctor()

Disassembly:
	0x039B44F4 MOVZ W9, 0x1
	0x039B44F8 SUB W8, W8, 0x1
	0x039B44FC STRB W9, [X19 + 0x70]
	0x039B4500 STP W31, W8, [X19 + 0x74]
	0x039B4504 STR W31, [X19 + 0x1C]
	0x039B4508 CBZ X0, 0x39B4760
	0x039B450C MOV W1, W31
	0x039B4510 MOV X2, X31
	0x039B4514 BL 0x33577AC
	0x039B4518 LDR X0, [X19 + 0x48]
	0x039B451C CBZ X0, 0x39B4760
	0x039B4520 ADRP X8, 0x79D000
	0x039B4524 LDR X8, [X8 + 0xFF0]
	0x039B4528 LDR X1, [X8]
	0x039B452C BL 0x2B26E48
	0x039B4530 CBZ X0, 0x39B4760
	0x039B4534 ADRP X8, 0x79E000
	0x039B4538 LDR X8, [X8 + 0x60]
	0x039B453C ADRP X24, 0x79E000
	0x039B4540 ADRP X27, 0x79E000
	0x039B4544 ADRP X28, 0x79E000
	0x039B4548 ADRP X29, 0x79E000
	0x039B454C ADRP X23, 0x79D000
	0x039B4550 ADRP X20, 0x79E000
	0x039B4554 ADRP X25, 0x79E000
	0x039B4558 ADRP X26, 0x79E000
	0x039B455C LDR X24, [X24 + 0x20]
	0x039B4560 LDR X27, [X27 + 0x40]
	0x039B4564 LDR X28, [X28 + 0x10]
	0x039B4568 LDR X29, [X29 + 0x58]
	0x039B456C LDR X23, [X23 + 0xFF8]
	0x039B4570 LDR X20, [X20 + 0x48]
	0x039B4574 LDR X25, [X25 + 0x18]
	0x039B4578 LDR X26, [X26 + 0x50]
	0x039B457C LDR X1, [X8]
	0x039B4580 ADD X8, X31, 0x0
	0x039B4584 BL 0x278807C
	0x039B4588 LDR V0, [X31]
	0x039B458C LDR X8, [X31 + 0x10]
	0x039B4590 STR V0, [X31 + 0x5]
	0x039B4594 STR X8, [X31 + 0x60]
	0x039B4598 LDR X1, [X24]
	0x039B459C ADD X0, X31, 0x50
	0x039B45A0 BL 0x2C205A4
	0x039B45A4 TBZ X0, 0x0, 0x39B464C
	0x039B45A8 LDR X21, [X31 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xA2E000
	007 Move X20, 0x79E000
	008 Move X22, 0x79E000
	009 Move X21, 0x79E000
	010 Move W8, [X19+3150]
	011 Move X20, [X20+3728]
	012 Move X22, [X22+3856]
	013 Move X21, [X21+3864]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x79E000
	019 Move X0, [X0+3728]
	020 Call 0x1C17CF4
	021 Move X0, 0x79E000
	022 Move X0, [X0+3864]
	023 Call 0x1C17CF4
	024 Move X0, 0x79E000
	025 Move X0, [X0+3856]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3150], W8
	029 Move X0, [X20]
	030 Call 0x1C17F10
	031 Move X19, X0
	032 Call ShaderDebugPrintManager..ctor, X0
	033 Move X8, [X20]
	034 Move X1, X31
	035 Move X8, [X8+184]
	036 Move [X8], X19
	037 Move X0, [X22]
	038 Call Shader.PropertyToID, X0
	039 Move X8, [X20]
	040 Move X1, X31
	041 Move X8, [X8+184]
	042 Move [X8+8], W0
	043 Move X0, [X21]
	044 Call Shader.PropertyToID, X0
	045 Move X8, [X20]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X8, [X8+184]
	051 Move [X8+12], W0
	052 Move X30, [X31+48]
	053 Return 

