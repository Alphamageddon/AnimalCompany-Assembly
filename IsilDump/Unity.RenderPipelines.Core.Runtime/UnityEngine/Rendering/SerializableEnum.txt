Type: UnityEngine.Rendering.SerializableEnum

Method: System.Enum get_value()

Disassembly:
	0x039A11D8 LDRH W9, [X8 + 0x12E]
	0x039A11DC LDR X1, [X10]
	0x039A11E0 CBZ X9, 0x39A1204
	0x039A11E4 LDR X10, [X8 + 0xB0]
	0x039A11E8 ADD X10, X10, 0x8
	0x039A11EC LDUR X11, [X10 - 0x8]
	0x039A11F0 CMP X11, X1
	0x039A11F4 B.EQ 0x39A1214
	0x039A11F8 SUBS X9, X9, 0x1
	0x039A11FC ADD X10, X10, 0x10
	0x039A1200 B.NE 0x39A11EC
	0x039A1204 MOV X0, X20
	0x039A1208 MOV W2, W31
	0x039A120C BL 0x1C5C788
	0x039A1210 B 0x39A1220
	0x039A1214 LDRSW X9, [X10]
	0x039A1218 ADD X8, X8, X9, 0x4, LSL
	0x039A121C ADD X0, X8, 0x138
	0x039A1220 LDP X8, X1, [X0]
	0x039A1224 MOV X0, X20
	0x039A1228 BLR X8
	0x039A122C MOV X1, X0
	0x039A1230 MOV X0, X19
	0x039A1234 LDP X20, X19, [X31 + 0x10]
	0x039A1238 LDP X30, X21, [X31], #0x20
	0x039A123C B 0x39A93E8
	0x039A1240 BL 0x1C16F20
	0x039A1244 STR X30, [X31 - 0x30]!
	0x039A1248 STP X22, X21, [X31 + 0x10]
	0x039A124C STP X20, X19, [X31 + 0x20]
	0x039A1250 ADRP X21, 0xA40000
	0x039A1254 ADRP X22, 0x753000
	0x039A1258 ADRP X20, 0x7B0000
	0x039A125C LDRB W8, [X21 + 0xB87]
	0x039A1260 LDR X22, [X22 + 0xE70]
	0x039A1264 LDR X20, [X20 + 0x428]
	0x039A1268 MOV X19, X0
	0x039A126C TBNZ X8, 0x0, 0x39A1290
	0x039A1270 ADRP X0, 0x753000
	0x039A1274 LDR X0, [X0 + 0xE70]
	0x039A1278 BL 0x1C16CF4
	0x039A127C ADRP X0, 0x7B0000
	0x039A1280 LDR X0, [X0 + 0x428]
	0x039A1284 BL 0x1C16CF4
	0x039A1288 MOVZ W8, 0x1
	0x039A128C STRB W8, [X21 + 0xB87]
	0x039A1290 LDR X0, [X22]
	0x039A1294 BL 0x1C16F10
	0x039A1298 LDR X2, [X20]
	0x039A129C MOV X1, X19
	0x039A12A0 MOV X3, X31
	0x039A12A4 MOV X20, X0
	0x039A12A8 BL 0x3314368
	0x039A12AC MOV X0, X20
	0x039A12B0 LDP X20, X19, [X31 + 0x20]
	0x039A12B4 LDP X22, X21, [X31 + 0x10]
	0x039A12B8 LDR X30, [X31], #0x30
	0x039A12BC RET
	0x039A12C0 MOV X1, X31
	0x039A12C4 B 0x33BDD8C
	0x039A12C8 STR X30, [X31 - 0x40]!
	0x039A12CC STP X24, X23, [X31 + 0x10]
	0x039A12D0 STP X22, X21, [X31 + 0x20]
	0x039A12D4 STP X20, X19, [X31 + 0x30]
	0x039A12D8 ADRP X21, 0xA40000
	0x039A12DC LDRB W8, [X21 + 0xB88]
	0x039A12E0 MOV X20, X1
	0x039A12E4 MOV X19, X0
	0x039A12E8 TBNZ X8, 0x0, 0x39A1330
	0x039A12EC ADRP X0, 0x7B0000
	0x039A12F0 LDR X0, [X0 + 0x430]
	0x039A12F4 BL 0x1C16CF4
	0x039A12F8 ADRP X0, 0x7B0000
	0x039A12FC LDR X0, [X0 + 0x438]
	0x039A1300 BL 0x1C16CF4
	0x039A1304 ADRP X0, 0x7B0000
	0x039A1308 LDR X0, [X0 + 0x3E0]
	0x039A130C BL 0x1C16CF4
	0x039A1310 ADRP X0, 0x7B0000
	0x039A1314 LDR X0, [X0 + 0x440]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xA41000
	009 Move W8, [X20+2939]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x753000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move X0, 0x7B1000
	019 Move X0, [X0+928]
	020 Call 0x1C17CF4
	021 Move X0, 0x77C000
	022 Move X0, [X0+432]
	023 Call 0x1C17CF4
	024 Move X0, 0x753000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2939], W8
	029 Move [X31+8], X31
	030 Move X0, [X19+24]
	031 Move X1, X31
	032 Call String.IsNullOrEmpty, X0
	033 Move W8, W0
	034 Move X0, X31
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {88}
	039 Move X8, 0x753000
	040 Move X8, [X8+1728]
	041 Move X23, 0x77C000
	042 Move X22, 0x7B1000
	043 Move X21, 0x753000
	044 Move X0, [X8]
	045 Move X20, [X19+24]
	046 Move W8, [X0+224]
	047 Move X23, [X23+432]
	048 Move X22, [X22+928]
	049 Move X21, [X21+3576]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X1, [X23]
	054 Move X2, [X22]
	055 Move X0, X20
	056 Call 0x1C1803C
	057 Move X8, [X21]
	058 Move X19, [X19+16]
	059 Move X20, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Add X2, X31, 8
	066 Move X0, X20
	067 Move X1, X19
	068 Move X3, X31
	069 Call Enum.TryParse, X0, X1, X2
	070 Move W8, W0
	071 Move X0, X31
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {88}
	076 Move X0, [X31+8]
	077 Compare X0, 0
	078 JumpIfEqual {88}
	079 Move X8, [X0]
	080 Move X1, [X21]
	081 Move W10, [X8+304]
	082 Move W9, [X1+304]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X8, [X8+200]
	085 Add X8, X8, X9
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X30, [X31+16]
	093 Move X23, [X31+24]
	094 Add X31, X31, 64
	095 Return X0
	096 Call 0x1C181E0

Method: System.Void set_value(System.Enum value)

Disassembly:
	0x039A1318 BL 0x1C16CF4
	0x039A131C ADRP X0, 0x7AF000
	0x039A1320 LDR X0, [X0 + 0x7A8]
	0x039A1324 BL 0x1C16CF4
	0x039A1328 MOVZ W8, 0x1
	0x039A132C STRB W8, [X21 + 0xB88]
	0x039A1330 CBZ X20, 0x39A15C4
	0x039A1334 ADRP X10, 0x7B0000
	0x039A1338 LDR X8, [X20]
	0x039A133C LDR X10, [X10 + 0x438]
	0x039A1340 LDRH W9, [X8 + 0x12E]
	0x039A1344 LDR X1, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {16}
	005 Move X8, [X1]
	006 Move X19, X0
	007 Move X0, X1
	008 Move X9, [X8+360]
	009 Move X8, [X8+368]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move [X19+16], X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20

Method: System.Void .ctor(System.Type enumType)

Disassembly:
	0x039A1348 CBZ X9, 0x39A136C
	0x039A134C LDR X10, [X8 + 0xB0]
	0x039A1350 ADD X10, X10, 0x8
	0x039A1354 LDUR X11, [X10 - 0x8]
	0x039A1358 CMP X11, X1
	0x039A135C B.EQ 0x39A137C
	0x039A1360 SUBS X9, X9, 0x1
	0x039A1364 ADD X10, X10, 0x10
	0x039A1368 B.NE 0x39A1354
	0x039A136C MOV X0, X20
	0x039A1370 MOV W2, W31
	0x039A1374 BL 0x1C5C788
	0x039A1378 B 0x39A1388
	0x039A137C LDRSW X9, [X10]
	0x039A1380 ADD X8, X8, X9, 0x4, LSL
	0x039A1384 ADD X0, X8, 0x138
	0x039A1388 LDP X8, X1, [X0]
	0x039A138C MOV X0, X20
	0x039A1390 BLR X8
	0x039A1394 CBZ X0, 0x39A15C4
	0x039A1398 ADRP X24, 0x7B0000
	0x039A139C LDR X8, [X0]
	0x039A13A0 LDR X24, [X24 + 0x3E0]
	0x039A13A4 MOV X20, X0
	0x039A13A8 LDRH W9, [X8 + 0x12E]
	0x039A13AC LDR X1, [X24]
	0x039A13B0 CBZ X9, 0x39A13D4
	0x039A13B4 LDR X10, [X8 + 0xB0]
	0x039A13B8 ADD X10, X10, 0x8
	0x039A13BC LDUR X11, [X10 - 0x8]
	0x039A13C0 CMP X11, X1
	0x039A13C4 B.EQ 0x39A13E4
	0x039A13C8 SUBS X9, X9, 0x1
	0x039A13CC ADD X10, X10, 0x10
	0x039A13D0 B.NE 0x39A13BC
	0x039A13D4 MOVZ W2, 0x1
	0x039A13D8 MOV X0, X20
	0x039A13DC BL 0x1C5C788
	0x039A13E0 B 0x39A13F4
	0x039A13E4 LDR W9, [X10]
	0x039A13E8 ADD W9, W9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xA41000
	006 Move W8, [X21+2940]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x753000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2940], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Compare X20, 0
	022 JumpIfEqual {51}
	023 Move X8, [X20]
	024 Move X21, 0x753000
	025 Move X0, X20
	026 Move X9, [X8+728]
	027 Move X1, [X8+736]
	028 Move X21, [X21+3576]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move [X19+24], X0
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Call Enum.GetNames, X0
	039 Compare X0, 0
	040 JumpIfEqual {51}
	041 Move W8, [X0+24]
	042 Compare W8, 0
	043 JumpIfEqual {52}
	044 Move X8, [X0+32]
	045 Move [X19+16], X8
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20
	052 Call 0x1C17F28

