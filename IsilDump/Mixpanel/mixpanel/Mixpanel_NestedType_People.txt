Type: mixpanel.Mixpanel/People

Method: System.Void Append(mixpanel.Value properties)

Disassembly:
	0x031D96CC LDR X0, [X0 + 0x2D8]
	0x031D96D0 BL 0x1C16CF4
	0x031D96D4 MOVZ W8, 0x1
	0x031D96D8 STRB W8, [X20 + 0x71]
	0x031D96DC LDR X0, [X19]
	0x031D96E0 LDR W8, [X0 + 0xE0]
	0x031D96E4 CBNZ W8, 0x31D96F0
	0x031D96E8 BL 0x1C16DFC
	0x031D96EC LDR X0, [X19]
	0x031D96F0 LDR X8, [X0 + 0xB8]
	0x031D96F4 LDR X19, [X8]
	0x031D96F8 CBZ X19, 0x31D977C
	0x031D96FC ADRP X9, 0xF46000
	0x031D9700 ADRP X10, 0xF47000
	0x031D9704 LDR X8, [X19]
	0x031D9708 LDR X9, [X9 + 0xF60]
	0x031D970C LDR X10, [X10 + 0x2D8]
	0x031D9710 LDR X1, [X9]
	0x031D9714 LDRH W9, [X8 + 0x12E]
	0x031D9718 LDR X20, [X10]
	0x031D971C CBZ X9, 0x31D9740
	0x031D9720 LDR X10, [X8 + 0xB0]
	0x031D9724 ADD X10, X10, 0x8
	0x031D9728 LDUR X11, [X10 - 0x8]
	0x031D972C CMP X11, X1
	0x031D9730 B.EQ 0x31D9750
	0x031D9734 SUBS X9, X9, 0x1
	0x031D9738 ADD X10, X10, 0x10
	0x031D973C B.NE 0x31D9728
	0x031D9740 MOVZ W2, 0x2
	0x031D9744 MOV X0, X19
	0x031D9748 BL 0x1C5C788
	0x031D974C B 0x31D9760
	0x031D9750 LDR W9, [X10]
	0x031D9754 ADD W9, W9, 0x2
	0x031D9758 ADD X8, X8, W9, 0x4, SXTW
	0x031D975C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+82]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xF20000
	012 Move X0, [X0+1864]
	013 Call 0x1C17CF4
	014 Move X0, 0xF48000
	015 Move X0, [X0+520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+82], W8
	019 Call Mixpanel.IsInitialized
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {44}
	024 Move X8, 0xF20000
	025 Move X8, [X8+1864]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X20, X0
	029 Call Value..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {48}
	032 Move X8, 0xF48000
	033 Move X8, [X8+520]
	034 Move X0, X20
	035 Move X2, X19
	036 Move X1, [X8]
	037 Call Value.Add, X0, X1, X2
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call Controller.DoEngage, X0
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void Append(System.String property, mixpanel.Value values)

Disassembly:
	0x031D9760 LDP X4, X3, [X0]
	0x031D9764 MOV X0, X19
	0x031D9768 MOV X1, X20
	0x031D976C LDP X20, X19, [X31 + 0x10]
	0x031D9770 MOV W2, W31
	0x031D9774 LDR X30, [X31], #0x20
	0x031D9778 BR X4
	0x031D977C BL 0x1C16F20
	0x031D9780 STR X30, [X31 - 0x20]!
	0x031D9784 STP X20, X19, [X31 + 0x10]
	0x031D9788 ADRP X20, 0x1203000
	0x031D978C ADRP X19, 0xF46000
	0x031D9790 LDRB W8, [X20 + 0x72]
	0x031D9794 LDR X19, [X19 + 0xEE0]
	0x031D9798 TBNZ X8, 0x0, 0x31D97C8
	0x031D979C ADRP X0, 0xF46000
	0x031D97A0 LDR X0, [X0 + 0xF60]
	0x031D97A4 BL 0x1C16CF4
	0x031D97A8 ADRP X0, 0xF46000
	0x031D97AC LDR X0, [X0 + 0xEE0]
	0x031D97B0 BL 0x1C16CF4
	0x031D97B4 ADRP X0, 0xF47000
	0x031D97B8 LDR X0, [X0 + 0x2E0]
	0x031D97BC BL 0x1C16CF4
	0x031D97C0 MOVZ W8, 0x1
	0x031D97C4 STRB W8, [X20 + 0x72]
	0x031D97C8 LDR X0, [X19]
	0x031D97CC LDR W8, [X0 + 0xE0]
	0x031D97D0 CBNZ W8, 0x31D97DC
	0x031D97D4 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1204000
	007 Move X22, 0xF20000
	008 Move W8, [X21+83]
	009 Move X22, [X22+1864]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF20000
	017 Move X0, [X0+1864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+83], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X21, X0
	024 Call Value..ctor, X0
	025 Compare X21, 0
	026 JumpIfEqual {39}
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X19
	030 Call Value.Add, X0, X1, X2
	031 Move X0, X21
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call People.Append, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Void ClearCharges()

Disassembly:
	0x031D97D8 LDR X0, [X19]
	0x031D97DC LDR X8, [X0 + 0xB8]
	0x031D97E0 LDR X19, [X8]
	0x031D97E4 CBZ X19, 0x31D9868
	0x031D97E8 ADRP X9, 0xF46000
	0x031D97EC ADRP X10, 0xF47000
	0x031D97F0 LDR X8, [X19]
	0x031D97F4 LDR X9, [X9 + 0xF60]
	0x031D97F8 LDR X10, [X10 + 0x2E0]
	0x031D97FC LDR X1, [X9]
	0x031D9800 LDRH W9, [X8 + 0x12E]
	0x031D9804 LDR X20, [X10]
	0x031D9808 CBZ X9, 0x31D982C
	0x031D980C LDR X10, [X8 + 0xB0]
	0x031D9810 ADD X10, X10, 0x8
	0x031D9814 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1204000
	005 Move X20, 0xF48000
	006 Move W8, [X19+84]
	007 Move X20, [X20+528]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF48000
	013 Move X0, [X0+528]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+84], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]

Method: System.Void DeleteUser()

Disassembly:
	0x031D8EC8 STRB W8, [X20 + 0x5F]
	0x031D8ECC BL 0x31D77D8
	0x031D8ED0 TBZ X0, 0x0, 0x31D8F18
	0x031D8ED4 ADRP X8, 0xF20000
	0x031D8ED8 LDR X8, [X8 + 0x748]
	0x031D8EDC LDR X0, [X8]
	0x031D8EE0 BL 0x1C16F10
	0x031D8EE4 MOV X20, X0
	0x031D8EE8 BL 0x31D3D04
	0x031D8EEC CBZ X20, 0x31D8F24
	0x031D8EF0 ADRP X8, 0xF48000
	0x031D8EF4 LDR X8, [X8 + 0x248]
	0x031D8EF8 MOV X0, X20
	0x031D8EFC MOV X2, X19
	0x031D8F00 LDR X1, [X8]
	0x031D8F04 BL 0x31D3EA4
	0x031D8F08 MOV X0, X20
	0x031D8F0C LDP X20, X19, [X31 + 0x10]
	0x031D8F10 LDR X30, [X31], #0x20
	0x031D8F14 B 0x31D574C
	0x031D8F18 LDP X20, X19, [X31 + 0x10]
	0x031D8F1C LDR X30, [X31], #0x20
	0x031D8F20 RET
	0x031D8F24 BL 0x1C16F20
	0x031D8F28 STP X30, X21, [X31 - 0x20]!
	0x031D8F2C STP X20, X19, [X31 + 0x10]
	0x031D8F30 ADRP X21, 0x1204000
	0x031D8F34 LDRB W8, [X21 + 0x60]
	0x031D8F38 MOV X19, X1
	0x031D8F3C MOV X20, X0
	0x031D8F40 TBNZ X8, 0x0, 0x31D8F58
	0x031D8F44 ADRP X0, 0xF20000
	0x031D8F48 LDR X0, [X0 + 0x748]
	0x031D8F4C BL 0x1C16CF4
	0x031D8F50 MOVZ W8, 0x1
	0x031D8F54 STRB W8, [X21 + 0x60]
	0x031D8F58 CBZ X19, 0x31D8FA4
	0x031D8F5C LDR W8, [X19 + 0x10]
	0x031D8F60 CMP W8, 0x5
	0x031D8F64 B.NE 0x31D8FA8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x1205000
	004 Move W8, [X19+85]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {20}
	009 Move X0, 0xF21000
	010 Move X0, [X0+1864]
	011 Call 0x1C17CF4
	012 Move X0, 0xF49000
	013 Move X0, [X0+504]
	014 Call 0x1C17CF4
	015 Move X0, 0xF1C000
	016 Move X0, [X0+2440]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+85], W8
	020 Call Mixpanel.IsInitialized
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {48}
	025 Move X8, 0xF21000
	026 Move X8, [X8+1864]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X19, X0
	030 Call Value..ctor, X0
	031 Move X8, 0xF1C000
	032 Move X8, [X8+2440]
	033 Move X0, [X8]
	034 Call Value.op_Implicit, X0
	035 Compare X19, 0
	036 JumpIfEqual {51}
	037 Move X8, 0xF49000
	038 Move X8, [X8+504]
	039 Move X2, X0
	040 Move X0, X19
	041 Move X1, [X8]
	042 Call Value.Add, X0, X1, X2
	043 Move X0, X19
	044 Move X30, [X31+16]
	045 Move X19, [X31+24]
	046 Call Controller.DoEngage, X0
	047 Return 
	048 Move X30, [X31+16]
	049 Move X19, [X31+24]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void Increment(mixpanel.Value properties)

Disassembly:
	0x031D98E4 BL 0x1C16DFC
	0x031D98E8 CBNZ W19, 0x31D98D4
	0x031D98EC BL 0x31D9694
	0x031D98F0 ADRP X8, 0xF47000
	0x031D98F4 LDR X8, [X8 + 0x2D8]
	0x031D98F8 MOV W19, W0
	0x031D98FC LDR X0, [X21]
	0x031D9900 LDR X20, [X8]
	0x031D9904 LDR W9, [X0 + 0xE0]
	0x031D9908 CBNZ W9, 0x31D9914
	0x031D990C BL 0x1C16DFC
	0x031D9910 LDR X0, [X21]
	0x031D9914 LDR X8, [X0 + 0xB8]
	0x031D9918 LDR X21, [X8]
	0x031D991C CBZ X21, 0x31D9994
	0x031D9920 ADRP X10, 0xF46000
	0x031D9924 LDR X8, [X21]
	0x031D9928 LDR X10, [X10 + 0xF60]
	0x031D992C LDRH W9, [X8 + 0x12E]
	0x031D9930 LDR X1, [X10]
	0x031D9934 CBZ X9, 0x31D9958
	0x031D9938 LDR X10, [X8 + 0xB0]
	0x031D993C ADD X10, X10, 0x8
	0x031D9940 LDUR X11, [X10 - 0x8]
	0x031D9944 CMP X11, X1
	0x031D9948 B.EQ 0x31D9968
	0x031D994C SUBS X9, X9, 0x1
	0x031D9950 ADD X10, X10, 0x10
	0x031D9954 B.NE 0x31D9940
	0x031D9958 MOVZ W2, 0x6
	0x031D995C MOV X0, X21
	0x031D9960 BL 0x1C5C788
	0x031D9964 B 0x31D9978
	0x031D9968 LDR W9, [X10]
	0x031D996C ADD W9, W9, 0x6
	0x031D9970 ADD X8, X8, W9, 0x4, SXTW
	0x031D9974 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+86]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xF20000
	012 Move X0, [X0+1864]
	013 Call 0x1C17CF4
	014 Move X0, 0xF48000
	015 Move X0, [X0+544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+86], W8
	019 Call Mixpanel.IsInitialized
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {44}
	024 Move X8, 0xF20000
	025 Move X8, [X8+1864]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X20, X0
	029 Call Value..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {48}
	032 Move X8, 0xF48000
	033 Move X8, [X8+544]
	034 Move X0, X20
	035 Move X2, X19
	036 Move X1, [X8]
	037 Call Value.Add, X0, X1, X2
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call Controller.DoEngage, X0
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void Increment(System.String property, mixpanel.Value by)

Disassembly:
	0x031D9978 LDP X4, X3, [X0]
	0x031D997C ADD W2, W19, 0x1
	0x031D9980 MOV X1, X20
	0x031D9984 LDP X20, X19, [X31 + 0x10]
	0x031D9988 MOV X0, X21
	0x031D998C LDP X30, X21, [X31], #0x20
	0x031D9990 BR X4
	0x031D9994 BL 0x1C16F20
	0x031D9998 STR X30, [X31 - 0x20]!
	0x031D999C STP X20, X19, [X31 + 0x10]
	0x031D99A0 ADRP X20, 0x1203000
	0x031D99A4 ADRP X19, 0xF46000
	0x031D99A8 LDRB W8, [X20 + 0x73]
	0x031D99AC LDR X19, [X19 + 0xEE0]
	0x031D99B0 TBNZ X8, 0x0, 0x31D99E0
	0x031D99B4 ADRP X0, 0xF46000
	0x031D99B8 LDR X0, [X0 + 0xF60]
	0x031D99BC BL 0x1C16CF4
	0x031D99C0 ADRP X0, 0xF46000
	0x031D99C4 LDR X0, [X0 + 0xEE0]
	0x031D99C8 BL 0x1C16CF4
	0x031D99CC ADRP X0, 0xF47000
	0x031D99D0 LDR X0, [X0 + 0x130]
	0x031D99D4 BL 0x1C16CF4
	0x031D99D8 MOVZ W8, 0x1
	0x031D99DC STRB W8, [X20 + 0x73]
	0x031D99E0 LDR X0, [X19]
	0x031D99E4 LDR W8, [X0 + 0xE0]
	0x031D99E8 CBNZ W8, 0x31D99F4
	0x031D99EC BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1204000
	007 Move X22, 0xF20000
	008 Move W8, [X21+87]
	009 Move X22, [X22+1864]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF20000
	017 Move X0, [X0+1864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+87], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X21, X0
	024 Call Value..ctor, X0
	025 Compare X21, 0
	026 JumpIfEqual {39}
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X19
	030 Call Value.Add, X0, X1, X2
	031 Move X0, X21
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call People.Increment, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Void Set(mixpanel.Value properties)

Disassembly:
	0x031D99F0 LDR X0, [X19]
	0x031D99F4 LDR X8, [X0 + 0xB8]
	0x031D99F8 LDR X19, [X8]
	0x031D99FC CBZ X19, 0x31D9A80
	0x031D9A00 ADRP X9, 0xF46000
	0x031D9A04 ADRP X10, 0xF47000
	0x031D9A08 LDR X8, [X19]
	0x031D9A0C LDR X9, [X9 + 0xF60]
	0x031D9A10 LDR X10, [X10 + 0x130]
	0x031D9A14 LDR X1, [X9]
	0x031D9A18 LDRH W9, [X8 + 0x12E]
	0x031D9A1C LDR X20, [X10]
	0x031D9A20 CBZ X9, 0x31D9A44
	0x031D9A24 LDR X10, [X8 + 0xB0]
	0x031D9A28 ADD X10, X10, 0x8
	0x031D9A2C LDUR X11, [X10 - 0x8]
	0x031D9A30 CMP X11, X1
	0x031D9A34 B.EQ 0x31D9A54
	0x031D9A38 SUBS X9, X9, 0x1
	0x031D9A3C ADD X10, X10, 0x10
	0x031D9A40 B.NE 0x31D9A2C
	0x031D9A44 MOVZ W2, 0x2
	0x031D9A48 MOV X0, X19
	0x031D9A4C BL 0x1C5C788
	0x031D9A50 B 0x31D9A64
	0x031D9A54 LDR W9, [X10]
	0x031D9A58 ADD W9, W9, 0x2
	0x031D9A5C ADD X8, X8, W9, 0x4, SXTW
	0x031D9A60 ADD X0, X8, 0x138
	0x031D9A64 LDP X4, X3, [X0]
	0x031D9A68 MOV X0, X19
	0x031D9A6C MOV X1, X20
	0x031D9A70 LDP X20, X19, [X31 + 0x10]
	0x031D9A74 MOV W2, W31
	0x031D9A78 LDR X30, [X31], #0x20
	0x031D9A7C BR X4
	0x031D9A80 BL 0x1C16F20
	0x031D9A84 STR X30, [X31 - 0x20]!
	0x031D9A88 STP X20, X19, [X31 + 0x10]
	0x031D9A8C ADRP X20, 0x1203000
	0x031D9A90 ADRP X19, 0xF46000
	0x031D9A94 LDRB W8, [X20 + 0x74]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+88]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xF20000
	012 Move X0, [X0+1864]
	013 Call 0x1C17CF4
	014 Move X0, 0xF48000
	015 Move X0, [X0+552]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+88], W8
	019 Call Mixpanel.IsInitialized
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {50}
	024 Call Controller.GetEngageDefaultProperties
	025 Compare X19, 0
	026 JumpIfEqual {54}
	027 Move X1, X0
	028 Move X0, X19
	029 Call Value.Merge, X0, X1
	030 Move X8, 0xF20000
	031 Move X8, [X8+1864]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X20, X0
	035 Call Value..ctor, X0
	036 Compare X20, 0
	037 JumpIfEqual {54}
	038 Move X8, 0xF48000
	039 Move X8, [X8+552]
	040 Move X0, X20
	041 Move X2, X19
	042 Move X1, [X8]
	043 Call Value.Add, X0, X1, X2
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Call Controller.DoEngage, X0
	049 Return 
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void Set(System.String property, mixpanel.Value to)

Disassembly:
	0x031D9A98 LDR X19, [X19 + 0xEE0]
	0x031D9A9C TBNZ X8, 0x0, 0x31D9ACC
	0x031D9AA0 ADRP X0, 0xF46000
	0x031D9AA4 LDR X0, [X0 + 0xF60]
	0x031D9AA8 BL 0x1C16CF4
	0x031D9AAC ADRP X0, 0xF46000
	0x031D9AB0 LDR X0, [X0 + 0xEE0]
	0x031D9AB4 BL 0x1C16CF4
	0x031D9AB8 ADRP X0, 0xF47000
	0x031D9ABC LDR X0, [X0 + 0x138]
	0x031D9AC0 BL 0x1C16CF4
	0x031D9AC4 MOVZ W8, 0x1
	0x031D9AC8 STRB W8, [X20 + 0x74]
	0x031D9ACC LDR X0, [X19]
	0x031D9AD0 LDR W8, [X0 + 0xE0]
	0x031D9AD4 CBNZ W8, 0x31D9AE0
	0x031D9AD8 BL 0x1C16DFC
	0x031D9ADC LDR X0, [X19]
	0x031D9AE0 LDR X8, [X0 + 0xB8]
	0x031D9AE4 LDR X19, [X8]
	0x031D9AE8 CBZ X19, 0x31D9B6C
	0x031D9AEC ADRP X9, 0xF46000
	0x031D9AF0 ADRP X10, 0xF47000
	0x031D9AF4 LDR X8, [X19]
	0x031D9AF8 LDR X9, [X9 + 0xF60]
	0x031D9AFC LDR X10, [X10 + 0x138]
	0x031D9B00 LDR X1, [X9]
	0x031D9B04 LDRH W9, [X8 + 0x12E]
	0x031D9B08 LDR X20, [X10]
	0x031D9B0C CBZ X9, 0x31D9B30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1204000
	007 Move X22, 0xF20000
	008 Move W8, [X21+89]
	009 Move X22, [X22+1864]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF20000
	017 Move X0, [X0+1864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+89], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X21, X0
	024 Call Value..ctor, X0
	025 Compare X21, 0
	026 JumpIfEqual {39}
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X19
	030 Call Value.Add, X0, X1, X2
	031 Move X0, X21
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call People.Set, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Void SetOnce(mixpanel.Value properties)

Disassembly:
	0x031D9B10 LDR X10, [X8 + 0xB0]
	0x031D9B14 ADD X10, X10, 0x8
	0x031D9B18 LDUR X11, [X10 - 0x8]
	0x031D9B1C CMP X11, X1
	0x031D9B20 B.EQ 0x31D9B40
	0x031D9B24 SUBS X9, X9, 0x1
	0x031D9B28 ADD X10, X10, 0x10
	0x031D9B2C B.NE 0x31D9B18
	0x031D9B30 MOVZ W2, 0x2
	0x031D9B34 MOV X0, X19
	0x031D9B38 BL 0x1C5C788
	0x031D9B3C B 0x31D9B50
	0x031D9B40 LDR W9, [X10]
	0x031D9B44 ADD W9, W9, 0x2
	0x031D9B48 ADD X8, X8, W9, 0x4, SXTW
	0x031D9B4C ADD X0, X8, 0x138
	0x031D9B50 LDP X4, X3, [X0]
	0x031D9B54 MOV X0, X19
	0x031D9B58 MOV X1, X20
	0x031D9B5C LDP X20, X19, [X31 + 0x10]
	0x031D9B60 MOV W2, W31
	0x031D9B64 LDR X30, [X31], #0x20
	0x031D9B68 BR X4
	0x031D9B6C BL 0x1C16F20
	0x031D9B70 STR X30, [X31 - 0x20]!
	0x031D9B74 STP X20, X19, [X31 + 0x10]
	0x031D9B78 ADRP X19, 0x1203000
	0x031D9B7C ADRP X20, 0xF1F000
	0x031D9B80 LDRB W8, [X19 + 0xC2]
	0x031D9B84 LDR X20, [X20 + 0x748]
	0x031D9B88 TBNZ X8, 0x0, 0x31D9BA0
	0x031D9B8C ADRP X0, 0xF1F000
	0x031D9B90 LDR X0, [X0 + 0x748]
	0x031D9B94 BL 0x1C16CF4
	0x031D9B98 MOVZ W8, 0x1
	0x031D9B9C STRB W8, [X19 + 0xC2]
	0x031D9BA0 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+90]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xF20000
	012 Move X0, [X0+1864]
	013 Call 0x1C17CF4
	014 Move X0, 0xF48000
	015 Move X0, [X0+560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+90], W8
	019 Call Mixpanel.IsInitialized
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {44}
	024 Move X8, 0xF20000
	025 Move X8, [X8+1864]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X20, X0
	029 Call Value..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {48}
	032 Move X8, 0xF48000
	033 Move X8, [X8+560]
	034 Move X0, X20
	035 Move X2, X19
	036 Move X1, [X8]
	037 Call Value.Add, X0, X1, X2
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call Controller.DoEngage, X0
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void SetOnce(System.String property, mixpanel.Value to)

Disassembly:
	0x031D9BA4 BL 0x1C16F10
	0x031D9BA8 MOVZ W1, 0x5
	0x031D9BAC MOVZ W2, 0x2
	0x031D9BB0 MOV X19, X0
	0x031D9BB4 BL 0x31DC4EC
	0x031D9BB8 MOV X0, X19
	0x031D9BBC LDP X20, X19, [X31 + 0x10]
	0x031D9BC0 LDR X30, [X31], #0x20
	0x031D9BC4 RET
	0x031D9BC8 STP X30, X21, [X31 - 0x20]!
	0x031D9BCC STP X20, X19, [X31 + 0x10]
	0x031D9BD0 ADRP X21, 0x1203000
	0x031D9BD4 LDRB W8, [X21 + 0x90]
	0x031D9BD8 MOV X19, X1
	0x031D9BDC MOV X20, X0
	0x031D9BE0 TBNZ X8, 0x0, 0x31D9BF8
	0x031D9BE4 ADRP X0, 0xF47000
	0x031D9BE8 LDR X0, [X0 + 0x2E8]
	0x031D9BEC BL 0x1C16CF4
	0x031D9BF0 MOVZ W8, 0x1
	0x031D9BF4 STRB W8, [X21 + 0x90]
	0x031D9BF8 ADRP X8, 0xFFFFFFFFFD915000
	0x031D9BFC LDR V0, [X8 + 0x8]
	0x031D9C00 LDR X0, [X20 + 0x30]
	0x031D9C04 STR D0, [X20 + 0x10]
	0x031D9C08 CBZ X0, 0x31D9C74
	0x031D9C0C ADRP X9, 0xF47000
	0x031D9C10 LDR X9, [X9 + 0x2E8]
	0x031D9C14 LDR W10, [X0 + 0x1C]
	0x031D9C18 LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1204000
	007 Move X22, 0xF20000
	008 Move W8, [X21+91]
	009 Move X22, [X22+1864]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF20000
	017 Move X0, [X0+1864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+91], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X21, X0
	024 Call Value..ctor, X0
	025 Compare X21, 0
	026 JumpIfEqual {39}
	027 Move X0, X21
	028 Move X1, X20
	029 Move X2, X19
	030 Call Value.Add, X0, X1, X2
	031 Move X0, X21
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call People.SetOnce, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Void TrackCharge(System.Double amount, mixpanel.Value properties)

Disassembly:
	0x031D9C1C LDR X9, [X9]
	0x031D9C20 ADD W10, W10, 0x1
	0x031D9C24 STR W10, [X0 + 0x1C]
	0x031D9C28 CBZ X8, 0x31D9C74
	0x031D9C2C LDRSW X10, [X0 + 0x18]
	0x031D9C30 LDR W11, [X8 + 0x18]
	0x031D9C34 CMP W10, W11
	0x031D9C38 B.CS 0x31D9C58
	0x031D9C3C ADD W9, W10, 0x1
	0x031D9C40 ADD X8, X8, X10, 0x3, LSL
	0x031D9C44 STR W9, [X0 + 0x18]
	0x031D9C48 STR X19, [X8 + 0x20]
	0x031D9C4C LDP X20, X19, [X31 + 0x10]
	0x031D9C50 LDP X30, X21, [X31], #0x20
	0x031D9C54 RET
	0x031D9C58 LDR X8, [X9 + 0x20]
	0x031D9C5C MOV X1, X19
	0x031D9C60 LDP X20, X19, [X31 + 0x10]
	0x031D9C64 LDR X8, [X8 + 0xC0]
	0x031D9C68 LDR X2, [X8 + 0x70]
	0x031D9C6C LDP X30, X21, [X31], #0x20
	0x031D9C70 B 0x301BF90
	0x031D9C74 BL 0x1C16F20
	0x031D9C78 SUB X31, X31, 0x70
	0x031D9C7C STP X29, X30, [X31 + 0x10]
	0x031D9C80 STP X28, X27, [X31 + 0x20]
	0x031D9C84 STP X26, X25, [X31 + 0x30]
	0x031D9C88 STP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1204000
	006 Move W8, [X20+92]
	007 Move X19, X0
	008 Move V8, V0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF48000
	014 Move X0, [X0+568]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+92], W8
	018 Move V0, V8
	019 Call Value.op_Implicit, V0
	020 Compare X19, 0
	021 JumpIfEqual {33}
	022 Move X8, 0xF48000
	023 Move X8, [X8+568]
	024 Move X2, X0
	025 Move X0, X19
	026 Move X1, [X8]
	027 Call Value.set_Item, X0, X1, X2
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+8]
	032 Move V8, [X31+32]
	033 Call 0x1C17F20

Method: System.Void TrackCharge(System.Double amount)

Disassembly:
	0x031D9D88 BL 0x1C16DFC
	0x031D9D8C CBNZ W20, 0x31D9D80
	0x031D9D90 BL 0x31D9694
	0x031D9D94 CMP W21, 0x1
	0x031D9D98 SUB W23, W0, 0x1
	0x031D9D9C MOV W24, W19
	0x031D9DA0 MOV W8, W19
	0x031D9DA4 STR W19, [X31 + 0x8]
	0x031D9DA8 B.LT 0x31D9F58
	0x031D9DAC LDR W8, [X31 + 0x8]
	0x031D9DB0 CMP W8, W23
	0x031D9DB4 MOV W24, W8
	0x031D9DB8 B.GT 0x31D9F58
	0x031D9DBC ADRP X28, 0xF47000
	0x031D9DC0 ADRP X29, 0xF47000
	0x031D9DC4 ADRP X19, 0xF46000
	0x031D9DC8 ADRP X22, 0xF1A000
	0x031D9DCC LDR X28, [X28 + 0xD8]
	0x031D9DD0 LDR X29, [X29 + 0xD0]
	0x031D9DD4 LDR X19, [X19 + 0xF60]
	0x031D9DD8 LDR X22, [X22 + 0x5A8]
	0x031D9DDC MOV W27, W31
	0x031D9DE0 ADD X0, X31, 0xC
	0x031D9DE4 MOV X1, X31
	0x031D9DE8 BL 0x337B6E0
	0x031D9DEC CMP W20, 0x0
	0x031D9DF0 CSEL X8, X28, X29, EQ
	0x031D9DF4 LDR X8, [X8]
	0x031D9DF8 MOV X1, X0
	0x031D9DFC MOV X2, X31
	0x031D9E00 MOV X0, X8
	0x031D9E04 BL 0x321B938
	0x031D9E08 LDR X8, [X26]
	0x031D9E0C MOV X24, X0
	0x031D9E10 LDR W9, [X8 + 0xE0]
	0x031D9E14 CBNZ W9, 0x31D9E24

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x1204000
	006 Move X20, 0xF20000
	007 Move W8, [X19+93]
	008 Move X20, [X20+1864]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF20000
	015 Move X0, [X0+1864]
	016 Call 0x1C17CF4
	017 Move X0, 0xF48000
	018 Move X0, [X0+568]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+93], W8
	022 Move X0, [X20]
	023 Call 0x1C17F10
	024 Move X19, X0
	025 Call Value..ctor, X0
	026 Move V0, V8
	027 Call Value.op_Implicit, V0
	028 Compare X19, 0
	029 JumpIfEqual {43}
	030 Move X8, 0xF48000
	031 Move X8, [X8+568]
	032 Move X2, X0
	033 Move X0, X19
	034 Move X1, [X8]
	035 Call Value.Add, X0, X1, X2
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+8]
	040 Move V8, [X31+32]
	041 Call People.TrackCharge, X0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void TrackCharge(mixpanel.Value properties)

Disassembly:
	0x031D9C8C STP X22, X21, [X31 + 0x50]
	0x031D9C90 STP X20, X19, [X31 + 0x60]
	0x031D9C94 ADRP X23, 0x1203000
	0x031D9C98 ADRP X19, 0xF47000
	0x031D9C9C ADRP X22, 0xF47000
	0x031D9CA0 ADRP X26, 0xF46000
	0x031D9CA4 LDRB W8, [X23 + 0x77]
	0x031D9CA8 LDR X19, [X19 + 0x130]
	0x031D9CAC LDR X22, [X22 + 0x138]
	0x031D9CB0 LDR X26, [X26 + 0xEE0]
	0x031D9CB4 MOV W21, W1
	0x031D9CB8 MOV W20, W0
	0x031D9CBC TBNZ X8, 0x0, 0x31D9D34
	0x031D9CC0 ADRP X0, 0xF46000
	0x031D9CC4 LDR X0, [X0 + 0xF60]
	0x031D9CC8 BL 0x1C16CF4
	0x031D9CCC ADRP X0, 0xF1A000
	0x031D9CD0 LDR X0, [X0 + 0x5A8]
	0x031D9CD4 BL 0x1C16CF4
	0x031D9CD8 ADRP X0, 0xF46000
	0x031D9CDC LDR X0, [X0 + 0xEE0]
	0x031D9CE0 BL 0x1C16CF4
	0x031D9CE4 ADRP X0, 0xF47000
	0x031D9CE8 LDR X0, [X0 + 0xD0]
	0x031D9CEC BL 0x1C16CF4
	0x031D9CF0 ADRP X0, 0xF47000
	0x031D9CF4 LDR X0, [X0 + 0x130]
	0x031D9CF8 BL 0x1C16CF4
	0x031D9CFC ADRP X0, 0xF47000
	0x031D9D00 LDR X0, [X0 + 0x138]
	0x031D9D04 BL 0x1C16CF4
	0x031D9D08 ADRP X0, 0xF47000
	0x031D9D0C LDR X0, [X0 + 0x2E0]
	0x031D9D10 BL 0x1C16CF4
	0x031D9D14 ADRP X0, 0xF47000
	0x031D9D18 LDR X0, [X0 + 0xD8]
	0x031D9D1C BL 0x1C16CF4
	0x031D9D20 ADRP X0, 0xF47000
	0x031D9D24 LDR X0, [X0 + 0x2D8]
	0x031D9D28 BL 0x1C16CF4
	0x031D9D2C MOVZ W8, 0x1
	0x031D9D30 STRB W8, [X23 + 0x77]
	0x031D9D34 LDR X0, [X26]
	0x031D9D38 CMP W20, 0x0
	0x031D9D3C CSEL X8, X19, X22, EQ
	0x031D9D40 LDR X8, [X8]
	0x031D9D44 LDR W9, [X0 + 0xE0]
	0x031D9D48 STR X8, [X31]
	0x031D9D4C CBZ W9, 0x31D9D5C
	0x031D9D50 CBZ W20, 0x31D9D64
	0x031D9D54 BL 0x31D9A84
	0x031D9D58 B 0x31D9D68
	0x031D9D5C BL 0x1C16DFC
	0x031D9D60 CBNZ W20, 0x31D9D54
	0x031D9D64 BL 0x31D9998
	0x031D9D68 MOV W19, W0
	0x031D9D6C LDR X0, [X26]
	0x031D9D70 STR W19, [X31 + 0xC]
	0x031D9D74 LDR W8, [X0 + 0xE0]
	0x031D9D78 CBZ W8, 0x31D9D88
	0x031D9D7C CBZ W20, 0x31D9D90
	0x031D9D80 BL 0x31D9780
	0x031D9D84 B 0x31D9D94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1204000
	006 Move W8, [X20+94]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0xF20000
	013 Move X0, [X0+1864]
	014 Call 0x1C17CF4
	015 Move X0, 0xF48000
	016 Move X0, [X0+528]
	017 Call 0x1C17CF4
	018 Move X0, 0xF48000
	019 Move X0, [X0+224]
	020 Call 0x1C17CF4
	021 Move X0, 0xF48000
	022 Move X0, [X0+520]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+94], W8
	026 Call Mixpanel.IsInitialized
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {74}
	031 Call Util.CurrentDateTime
	032 Call Value.op_Implicit, X0
	033 Compare X19, 0
	034 JumpIfEqual {79}
	035 Move X8, 0xF48000
	036 Move X8, [X8+224]
	037 Move X2, X0
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call Value.set_Item, X0, X1, X2
	041 Move X21, 0xF20000
	042 Move X21, [X21+1864]
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X20, X0
	046 Call Value..ctor, X0
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X21, X0
	050 Call Value..ctor, X0
	051 Compare X21, 0
	052 JumpIfEqual {79}
	053 Move X8, 0xF48000
	054 Move X8, [X8+528]
	055 Move X0, X21
	056 Move X2, X19
	057 Move X1, [X8]
	058 Call Value.Add, X0, X1, X2
	059 Compare X20, 0
	060 JumpIfEqual {79}
	061 Move X8, 0xF48000
	062 Move X8, [X8+520]
	063 Move X0, X20
	064 Move X2, X21
	065 Move X1, [X8]
	066 Call Value.Add, X0, X1, X2
	067 Move X0, X20
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Controller.DoEngage, X0
	073 Return 
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void Union(mixpanel.Value properties)

Disassembly:
	0x031D9E94 LDR X0, [X26]
	0x031D9E98 LDR W8, [X0 + 0xE0]
	0x031D9E9C CBNZ W8, 0x31D9EA8
	0x031D9EA0 BL 0x1C16DFC
	0x031D9EA4 LDR X0, [X26]
	0x031D9EA8 LDR X8, [X0 + 0xB8]
	0x031D9EAC LDR X25, [X8]
	0x031D9EB0 CBZ X25, 0x31DA134
	0x031D9EB4 LDR X8, [X25]
	0x031D9EB8 LDR X1, [X19]
	0x031D9EBC LDRH W9, [X8 + 0x12E]
	0x031D9EC0 CBZ X9, 0x31D9EE4
	0x031D9EC4 LDR X10, [X8 + 0xB0]
	0x031D9EC8 ADD X10, X10, 0x8
	0x031D9ECC LDUR X11, [X10 - 0x8]
	0x031D9ED0 CMP X11, X1
	0x031D9ED4 B.EQ 0x31D9EF4
	0x031D9ED8 SUBS X9, X9, 0x1
	0x031D9EDC ADD X10, X10, 0x10
	0x031D9EE0 B.NE 0x31D9ECC
	0x031D9EE4 MOV X0, X25
	0x031D9EE8 MOV W2, W31
	0x031D9EEC BL 0x1C5C788
	0x031D9EF0 B 0x31D9F00
	0x031D9EF4 LDRSW X9, [X10]
	0x031D9EF8 ADD X8, X8, X9, 0x4, LSL
	0x031D9EFC ADD X0, X8, 0x138
	0x031D9F00 LDP X8, X2, [X0]
	0x031D9F04 MOV X0, X25
	0x031D9F08 MOV X1, X24
	0x031D9F0C BLR X8
	0x031D9F10 ADD W27, W27, 0x1
	0x031D9F14 LDR X0, [X22]
	0x031D9F18 LDR W24, [X31 + 0xC]
	0x031D9F1C LDR W8, [X0 + 0xE0]
	0x031D9F20 CBNZ W8, 0x31D9F28
	0x031D9F24 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+95]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xF20000
	012 Move X0, [X0+1864]
	013 Call 0x1C17CF4
	014 Move X0, 0xF48000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+95], W8
	019 Call Mixpanel.IsInitialized
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {44}
	024 Move X8, 0xF20000
	025 Move X8, [X8+1864]
	026 Move X0, [X8]
	027 Call 0x1C17F10
	028 Move X20, X0
	029 Call Value..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {48}
	032 Move X8, 0xF48000
	033 Move X8, [X8+584]
	034 Move X0, X20
	035 Move X2, X19
	036 Move X1, [X8]
	037 Call Value.Add, X0, X1, X2
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call Controller.DoEngage, X0
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void Union(System.String property, mixpanel.Value values)

Disassembly:
	0x031D9F28 ADD W0, W24, 0x1
	0x031D9F2C MOV W1, W23
	0x031D9F30 MOV X2, X31
	0x031D9F34 BL 0x337EE94
	0x031D9F38 LDR W8, [X31 + 0xC]
	0x031D9F3C MOV W24, W0
	0x031D9F40 CMP W27, W21
	0x031D9F44 ADD W8, W8, 0x1
	0x031D9F48 STR W8, [X31 + 0xC]
	0x031D9F4C B.GE 0x31D9F58
	0x031D9F50 CMP W8, W23
	0x031D9F54 B.LE 0x31D9DE0
	0x031D9F58 CMP W8, W23
	0x031D9F5C B.NE 0x31D9FE4
	0x031D9F60 ADRP X8, 0xF47000
	0x031D9F64 ADRP X9, 0xF47000
	0x031D9F68 LDR X8, [X8 + 0x2D8]
	0x031D9F6C LDR X0, [X26]
	0x031D9F70 LDR X9, [X9 + 0x2E0]
	0x031D9F74 CMP W20, 0x0
	0x031D9F78 CSEL X8, X8, X9, EQ
	0x031D9F7C LDR W9, [X0 + 0xE0]
	0x031D9F80 LDR X20, [X8]
	0x031D9F84 CBNZ W9, 0x31D9F90
	0x031D9F88 BL 0x1C16DFC
	0x031D9F8C LDR X0, [X26]
	0x031D9F90 LDR X8, [X0 + 0xB8]
	0x031D9F94 LDR X21, [X8]
	0x031D9F98 CBZ X21, 0x31DA134
	0x031D9F9C ADRP X19, 0xF46000
	0x031D9FA0 LDR X8, [X21]
	0x031D9FA4 LDR X19, [X19 + 0xF60]
	0x031D9FA8 LDRH W9, [X8 + 0x12E]
	0x031D9FAC LDR X1, [X19]
	0x031D9FB0 CBZ X9, 0x31D9FD4
	0x031D9FB4 LDR X10, [X8 + 0xB0]
	0x031D9FB8 ADD X10, X10, 0x8
	0x031D9FBC LDUR X11, [X10 - 0x8]
	0x031D9FC0 CMP X11, X1
	0x031D9FC4 B.EQ 0x31DA058
	0x031D9FC8 SUBS X9, X9, 0x1
	0x031D9FCC ADD X10, X10, 0x10
	0x031D9FD0 B.NE 0x31D9FBC
	0x031D9FD4 MOVZ W2, 0x6
	0x031D9FD8 MOV X0, X21
	0x031D9FDC BL 0x1C5C788
	0x031D9FE0 B 0x31DA068
	0x031D9FE4 LDR W8, [X31 + 0x8]
	0x031D9FE8 CMP W24, W8
	0x031D9FEC B.EQ 0x31DA114
	0x031D9FF0 LDR X0, [X26]
	0x031D9FF4 LDR W8, [X0 + 0xE0]
	0x031D9FF8 CBNZ W8, 0x31DA004
	0x031D9FFC BL 0x1C16DFC
	0x031DA000 LDR X0, [X26]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1204000
	006 Move W8, [X21+96]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF20000
	014 Move X0, [X0+1864]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+96], W8
	018 Compare X19, 0
	019 JumpIfEqual {41}
	020 Move W8, [X19+16]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, 0xF20000
	023 Move X8, [X8+1864]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X21, X0
	027 Call Value..ctor, X0
	028 Compare X21, 0
	029 JumpIfEqual {41}
	030 Move X0, X21
	031 Move X1, X20
	032 Move X2, X19
	033 Call Value.Add, X0, X1, X2
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X0, X21
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call People.Union, X0
	040 Return 
	041 Call 0x1C17F20
	042 Move X0, 0xF23000
	043 Move X0, [X0+1400]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0xF48000
	048 Move X0, [X0+592]
	049 Call 0x1C17D08
	050 Move X20, X0
	051 Move X0, 0xF25000
	052 Move X0, [X0+3800]
	053 Call 0x1C17D08
	054 Move X2, X0
	055 Move X0, X19
	056 Move X1, X20
	057 Move X3, X31
	058 Call ArgumentException..ctor, X0, X1, X2
	059 Move X0, 0xF48000
	060 Move X0, [X0+600]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.Void Unset(System.String property)

Disassembly:
	0x031D9818 CMP X11, X1
	0x031D981C B.EQ 0x31D983C
	0x031D9820 SUBS X9, X9, 0x1
	0x031D9824 ADD X10, X10, 0x10
	0x031D9828 B.NE 0x31D9814
	0x031D982C MOVZ W2, 0x2
	0x031D9830 MOV X0, X19
	0x031D9834 BL 0x1C5C788
	0x031D9838 B 0x31D984C
	0x031D983C LDR W9, [X10]
	0x031D9840 ADD W9, W9, 0x2
	0x031D9844 ADD X8, X8, W9, 0x4, SXTW
	0x031D9848 ADD X0, X8, 0x138
	0x031D984C LDP X4, X3, [X0]
	0x031D9850 MOV X0, X19
	0x031D9854 MOV X1, X20
	0x031D9858 LDP X20, X19, [X31 + 0x10]
	0x031D985C MOV W2, W31
	0x031D9860 LDR X30, [X31], #0x20
	0x031D9864 BR X4
	0x031D9868 BL 0x1C16F20
	0x031D986C STP X30, X21, [X31 - 0x20]!
	0x031D9870 STP X20, X19, [X31 + 0x10]
	0x031D9874 ADRP X20, 0x1203000
	0x031D9878 ADRP X21, 0xF46000
	0x031D987C LDRB W8, [X20 + 0x75]
	0x031D9880 LDR X21, [X21 + 0xEE0]
	0x031D9884 MOV W19, W0
	0x031D9888 TBNZ X8, 0x0, 0x31D98C4
	0x031D988C ADRP X0, 0xF46000
	0x031D9890 LDR X0, [X0 + 0xF60]
	0x031D9894 BL 0x1C16CF4
	0x031D9898 ADRP X0, 0xF46000
	0x031D989C LDR X0, [X0 + 0xEE0]
	0x031D98A0 BL 0x1C16CF4
	0x031D98A4 ADRP X0, 0xF47000
	0x031D98A8 LDR X0, [X0 + 0x2E0]
	0x031D98AC BL 0x1C16CF4
	0x031D98B0 ADRP X0, 0xF47000
	0x031D98B4 LDR X0, [X0 + 0x2D8]
	0x031D98B8 BL 0x1C16CF4
	0x031D98BC MOVZ W8, 0x1
	0x031D98C0 STRB W8, [X20 + 0x75]
	0x031D98C4 LDR X0, [X21]
	0x031D98C8 LDR W8, [X0 + 0xE0]
	0x031D98CC CBZ W8, 0x31D98E4
	0x031D98D0 CBZ W19, 0x31D98EC
	0x031D98D4 BL 0x31D9780
	0x031D98D8 ADRP X8, 0xF47000
	0x031D98DC LDR X8, [X8 + 0x2E0]
	0x031D98E0 B 0x31D98F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1204000
	006 Move W8, [X20+97]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xF1B000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move X0, 0xF20000
	016 Move X0, [X0+1864]
	017 Call 0x1C17CF4
	018 Move X0, 0xF48000
	019 Move X0, [X0+536]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+97], W8
	023 Call Mixpanel.IsInitialized
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {61}
	028 Move X8, 0xF20000
	029 Move X8, [X8+1864]
	030 Move X21, 0xF1B000
	031 Move X0, [X8]
	032 Move X21, [X21+2760]
	033 Call 0x1C17F10
	034 Move X20, X0
	035 Call Value..ctor, X0
	036 Move X0, [X21]
	037 Move W1, 1
	038 Call 0x1C17D6C
	039 Compare X0, 0
	040 JumpIfEqual {66}
	041 Move W8, [X0+24]
	042 Compare W8, 0
	043 JumpIfEqual {67}
	044 Move [X0+32], X19
	045 Call Value.op_Implicit, X0
	046 Compare X20, 0
	047 JumpIfEqual {66}
	048 Move X8, 0xF48000
	049 Move X8, [X8+536]
	050 Move X2, X0
	051 Move X0, X20
	052 Move X1, [X8]
	053 Call Value.Add, X0, X1, X2
	054 Move X0, X20
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call Controller.DoEngage, X0
	060 Return 
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Return 
	066 Call 0x1C17F20
	067 Call 0x1C17F28

Method: System.Void set_Email(System.String value)

Disassembly:
	0x031DA144 ADRP X21, 0xF19000
	0x031DA148 LDRB W8, [X20 + 0x86]
	0x031DA14C LDR X21, [X21 + 0x988]
	0x031DA150 MOV X19, X0
	0x031DA154 TBNZ X8, 0x0, 0x31DA184
	0x031DA158 ADRP X0, 0xF46000
	0x031DA15C LDR X0, [X0 + 0x2F0]
	0x031DA160 BL 0x1C16CF4
	0x031DA164 ADRP X0, 0xF46000
	0x031DA168 LDR X0, [X0 + 0x2F8]
	0x031DA16C BL 0x1C16CF4
	0x031DA170 ADRP X0, 0xF19000
	0x031DA174 LDR X0, [X0 + 0x988]
	0x031DA178 BL 0x1C16CF4
	0x031DA17C MOVZ W8, 0x1
	0x031DA180 STRB W8, [X20 + 0x86]
	0x031DA184 LDR X9, [X21]
	0x031DA188 LDR X8, [X19 + 0x30]
	0x031DA18C STRB W31, [X19 + 0x20]
	0x031DA190 STR X31, [X19 + 0x28]
	0x031DA194 STR X9, [X19 + 0x18]
	0x031DA198 CBZ X8, 0x31DA1EC
	0x031DA19C LDP W2, W9, [X8 + 0x18]
	0x031DA1A0 ADD W9, W9, 0x1
	0x031DA1A4 CMP W2, 0x1
	0x031DA1A8 STP W31, W9, [X8 + 0x18]
	0x031DA1AC B.LT 0x31DA1C0
	0x031DA1B0 LDR X0, [X8 + 0x10]
	0x031DA1B4 MOV W1, W31
	0x031DA1B8 MOV X3, X31
	0x031DA1BC BL 0x339FA34
	0x031DA1C0 LDR X0, [X19 + 0x40]
	0x031DA1C4 STR X31, [X19 + 0x38]
	0x031DA1C8 CBZ X0, 0x31DA1EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1203000
	006 Move X21, 0xF1F000
	007 Move W8, [X20+98]
	008 Move X21, [X21+1864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF1F000
	015 Move X0, [X0+1864]
	016 Call 0x1C17CF4
	017 Move X0, 0xF47000
	018 Move X0, [X0+640]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+98], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X20, X0
	025 Call Value..ctor, X0
	026 Move X0, X19
	027 Call Value.op_Implicit, X0
	028 Compare X20, 0
	029 JumpIfEqual {43}
	030 Move X8, 0xF47000
	031 Move X8, [X8+640]
	032 Move X2, X0
	033 Move X0, X20
	034 Move X1, [X8]
	035 Call Value.Add, X0, X1, X2
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call People.Set, X0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void set_FirstName(System.String value)

Disassembly:
	0x031DA1CC ADRP X8, 0xF46000
	0x031DA1D0 LDR X8, [X8 + 0x2F0]
	0x031DA1D4 LDR X1, [X8]
	0x031DA1D8 BL 0x2AA5220
	0x031DA1DC STP X31, X31, [X19 + 0x48]
	0x031DA1E0 LDP X20, X19, [X31 + 0x10]
	0x031DA1E4 LDP X30, X21, [X31], #0x20
	0x031DA1E8 RET
	0x031DA1EC BL 0x1C16F20
	0x031DA1F0 STP X30, X21, [X31 - 0x20]!
	0x031DA1F4 STP X20, X19, [X31 + 0x10]
	0x031DA1F8 ADRP X19, 0x1202000
	0x031DA1FC ADRP X21, 0xF46000
	0x031DA200 ADRP X20, 0xF45000
	0x031DA204 LDRB W8, [X19 + 0x85]
	0x031DA208 LDR X21, [X21 + 0x300]
	0x031DA20C LDR X20, [X20 + 0xEE0]
	0x031DA210 TBNZ X8, 0x0, 0x31DA234
	0x031DA214 ADRP X0, 0xF45000
	0x031DA218 LDR X0, [X0 + 0xEE0]
	0x031DA21C BL 0x1C16CF4
	0x031DA220 ADRP X0, 0xF46000
	0x031DA224 LDR X0, [X0 + 0x300]
	0x031DA228 BL 0x1C16CF4
	0x031DA22C MOVZ W8, 0x1
	0x031DA230 STRB W8, [X19 + 0x85]
	0x031DA234 LDR X0, [X21]
	0x031DA238 BL 0x1C16F10
	0x031DA23C MOV X1, X31
	0x031DA240 MOV X19, X0
	0x031DA244 BL 0x33BDD8C
	0x031DA248 LDR X8, [X20]
	0x031DA24C LDR X8, [X8 + 0xB8]
	0x031DA250 STR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1203000
	006 Move X21, 0xF1F000
	007 Move W8, [X20+99]
	008 Move X21, [X21+1864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF1F000
	015 Move X0, [X0+1864]
	016 Call 0x1C17CF4
	017 Move X0, 0xF47000
	018 Move X0, [X0+648]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+99], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X20, X0
	025 Call Value..ctor, X0
	026 Move X0, X19
	027 Call Value.op_Implicit, X0
	028 Compare X20, 0
	029 JumpIfEqual {43}
	030 Move X8, 0xF47000
	031 Move X8, [X8+648]
	032 Move X2, X0
	033 Move X0, X20
	034 Move X1, [X8]
	035 Call Value.Add, X0, X1, X2
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call People.Set, X0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void set_LastName(System.String value)

Disassembly:
	0x031DA254 LDP X20, X19, [X31 + 0x10]
	0x031DA258 LDP X30, X21, [X31], #0x20
	0x031DA25C RET
	0x031DA260 LDR W8, [X0 + 0x10]
	0x031DA264 CMP W8, 0x6
	0x031DA268 CSET W0, EQ
	0x031DA26C RET
	0x031DA270 STP X30, X21, [X31 - 0x20]!
	0x031DA274 STP X20, X19, [X31 + 0x10]
	0x031DA278 ADRP X21, 0x1202000
	0x031DA27C LDRB W8, [X21 + 0x87]
	0x031DA280 MOV W19, W1
	0x031DA284 MOV X20, X0
	0x031DA288 TBNZ X8, 0x0, 0x31DA2A0
	0x031DA28C ADRP X0, 0xF46000
	0x031DA290 LDR X0, [X0 + 0x308]
	0x031DA294 BL 0x1C16CF4
	0x031DA298 MOVZ W8, 0x1
	0x031DA29C STRB W8, [X21 + 0x87]
	0x031DA2A0 LDR X0, [X20 + 0x30]
	0x031DA2A4 CBZ X0, 0x31DA2C4
	0x031DA2A8 ADRP X8, 0xF46000
	0x031DA2AC LDR X8, [X8 + 0x308]
	0x031DA2B0 MOV W1, W19
	0x031DA2B4 LDP X20, X19, [X31 + 0x10]
	0x031DA2B8 LDR X2, [X8]
	0x031DA2BC LDP X30, X21, [X31], #0x20
	0x031DA2C0 B 0x301BCCC
	0x031DA2C4 BL 0x1C16F20
	0x031DA2C8 STR X30, [X31 - 0x30]!
	0x031DA2CC STP X22, X21, [X31 + 0x10]
	0x031DA2D0 STP X20, X19, [X31 + 0x20]
	0x031DA2D4 ADRP X22, 0x1202000
	0x031DA2D8 LDRB W8, [X22 + 0x88]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1203000
	006 Move X21, 0xF1F000
	007 Move W8, [X20+100]
	008 Move X21, [X21+1864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF1F000
	015 Move X0, [X0+1864]
	016 Call 0x1C17CF4
	017 Move X0, 0xF47000
	018 Move X0, [X0+656]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+100], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X20, X0
	025 Call Value..ctor, X0
	026 Move X0, X19
	027 Call Value.op_Implicit, X0
	028 Compare X20, 0
	029 JumpIfEqual {43}
	030 Move X8, 0xF47000
	031 Move X8, [X8+656]
	032 Move X2, X0
	033 Move X0, X20
	034 Move X1, [X8]
	035 Call Value.Add, X0, X1, X2
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call People.Set, X0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void set_Name(System.String value)

Disassembly:
	0x031DA2DC MOV X19, X2
	0x031DA2E0 MOV W20, W1
	0x031DA2E4 MOV X21, X0
	0x031DA2E8 TBNZ X8, 0x0, 0x31DA300
	0x031DA2EC ADRP X0, 0xF46000
	0x031DA2F0 LDR X0, [X0 + 0x310]
	0x031DA2F4 BL 0x1C16CF4
	0x031DA2F8 MOVZ W8, 0x1
	0x031DA2FC STRB W8, [X22 + 0x88]
	0x031DA300 ADRP X8, 0xFFFFFFFFFD914000
	0x031DA304 LDR V0, [X8 + 0x8]
	0x031DA308 LDR X0, [X21 + 0x30]
	0x031DA30C STR D0, [X21 + 0x10]
	0x031DA310 CBZ X0, 0x31DA338
	0x031DA314 ADRP X8, 0xF46000
	0x031DA318 LDR X8, [X8 + 0x310]
	0x031DA31C MOV W1, W20
	0x031DA320 MOV X2, X19
	0x031DA324 LDP X20, X19, [X31 + 0x20]
	0x031DA328 LDR X3, [X8]
	0x031DA32C LDP X22, X21, [X31 + 0x10]
	0x031DA330 LDR X30, [X31], #0x30
	0x031DA334 B 0x301BD20
	0x031DA338 BL 0x1C16F20
	0x031DA33C STR X30, [X31 - 0x20]!
	0x031DA340 STP X20, X19, [X31 + 0x10]
	0x031DA344 ADRP X20, 0x1202000
	0x031DA348 LDRB W8, [X20 + 0x8B]
	0x031DA34C MOV X19, X0
	0x031DA350 TBNZ X8, 0x0, 0x31DA38C
	0x031DA354 ADRP X0, 0xF19000
	0x031DA358 LDR X0, [X0 + 0xB58]
	0x031DA35C BL 0x1C16CF4
	0x031DA360 ADRP X0, 0xF1B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1203000
	006 Move X21, 0xF1F000
	007 Move W8, [X20+101]
	008 Move X21, [X21+1864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xF1F000
	015 Move X0, [X0+1864]
	016 Call 0x1C17CF4
	017 Move X0, 0xF47000
	018 Move X0, [X0+664]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+101], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X20, X0
	025 Call Value..ctor, X0
	026 Move X0, X19
	027 Call Value.op_Implicit, X0
	028 Compare X20, 0
	029 JumpIfEqual {43}
	030 Move X8, 0xF47000
	031 Move X8, [X8+664]
	032 Move X2, X0
	033 Move X0, X20
	034 Move X1, [X8]
	035 Call Value.Add, X0, X1, X2
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call People.Set, X0
	042 Return 
	043 Call 0x1C17F20

