Type: mixpanel.Controller/<>c__DisplayClass15_0

Method: System.Void .ctor()

Disassembly:
	0x031D42EC MOV X2, X0
	0x031D42F0 MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <DoFlush>b__0(System.Boolean success)

Disassembly:
	0x031D6BC4 ADD X31, X31, 0x60
	0x031D6BC8 RET
	0x031D6BCC BL 0x1C171E0
	0x031D6BD0 BL 0x1C16F20
	0x031D6BD4 BL 0x1C16F20
	0x031D6BD8 BL 0x1C16F20
	0x031D6BDC BL 0x1C16F20
	0x031D6BE0 BL 0x1C16F20
	0x031D6BE4 BL 0x1C16F20
	0x031D6BE8 MOV X0, X20
	0x031D6BEC BL 0x1C16F18
	0x031D6BF0 B 0x31D6C18
	0x031D6BF4 B 0x31D6C18
	0x031D6BF8 B 0x31D6C18
	0x031D6BFC B 0x31D6C18
	0x031D6C00 B 0x31D6C18
	0x031D6C04 B 0x31D6C18
	0x031D6C08 B 0x31D6C18
	0x031D6C0C B 0x31D6C18
	0x031D6C10 B 0x31D6C18
	0x031D6C14 B 0x31D6C18

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+16]
	003 Move X9, [X0+24]
	004 And W8, W1, W8
	005 And W1, W8, 1
	006 Move [X0+16], W1
	007 Compare X9, 0
	008 JumpIfEqual {24}
	009 Move W9, [X0+40]
	010 Move X8, [X0+32]
	011 Subtract W9, W9, 1
	012 Move [X0+40], W9
	013 Compare X8, 0
	014 JumpIfEqual {22}
	015 Compare W9, 0
	016 JumpIfNotEqual {22}
	017 Move X3, [X8+24]
	018 Move X0, [X8+64]
	019 Move X2, [X8+40]
	020 Move X30, [X31+16]
	021 CallNoReturn X3
	022 Move X30, [X31+16]
	023 Return 
	024 Call 0x1C17F20

