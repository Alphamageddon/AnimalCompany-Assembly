Type: mixpanel.Extensions/<>c__0`1

Method: System.Void .cctor()

Disassembly:
	0x02370D54 LDRB W8, [X0 + 0x135]
	0x02370D58 TBNZ X8, 0x0, 0x2370D60
	0x02370D5C BL 0x1C5C684
	0x02370D60 LDR X8, [X0 + 0xC0]
	0x02370D64 LDR X0, [X8]
	0x02370D68 LDRB W8, [X0 + 0x135]
	0x02370D6C TBNZ X8, 0x0, 0x2370D74
	0x02370D70 BL 0x1C5C684
	0x02370D74 BL 0x1C16F10
	0x02370D78 LDR X8, [X19 + 0x20]
	0x02370D7C MOV X20, X0
	0x02370D80 ADD X9, X8, 0x135
	0x02370D84 LDRH W9, [X9]
	0x02370D88 TBNZ X9, 0x0, 0x2370DA4
	0x02370D8C MOV X0, X8
	0x02370D90 BL 0x1C5C684
	0x02370D94 LDR X8, [X19 + 0x20]
	0x02370D98 ADD X9, X8, 0x135
	0x02370D9C LDRH W9, [X9]
	0x02370DA0 B 0x2370DA8
	0x02370DA4 MOV X0, X8
	0x02370DA8 LDR X10, [X0 + 0xC0]
	0x02370DAC LDR X10, [X10 + 0x8]
	0x02370DB0 LDR X21, [X10]
	0x02370DB4 TBNZ X9, 0x0, 0x2370DC4
	0x02370DB8 MOV X0, X8
	0x02370DBC BL 0x1C5C684
	0x02370DC0 MOV X8, X0
	0x02370DC4 LDR X8, [X8 + 0xC0]
	0x02370DC8 MOV X0, X20
	0x02370DCC LDR X1, [X8 + 0x8]
	0x02370DD0 BLR X21
	0x02370DD4 LDR X0, [X19 + 0x20]
	0x02370DD8 LDRB W8, [X0 + 0x135]
	0x02370DDC TBNZ X8, 0x0, 0x2370DE4
	0x02370DE0 BL 0x1C5C684
	0x02370DE4 LDR X8, [X0 + 0xC0]
	0x02370DE8 LDR X0, [X8 + 0x10]
	0x02370DEC LDRB W8, [X0 + 0x135]
	0x02370DF0 TBNZ X8, 0x0, 0x2370DF8
	0x02370DF4 BL 0x1C5C684
	0x02370DF8 LDR X8, [X0 + 0xB8]
	0x02370DFC STR X20, [X8]
	0x02370E00 LDR X0, [X19 + 0x20]
	0x02370E04 LDRB W8, [X0 + 0x135]
	0x02370E08 TBNZ X8, 0x0, 0x2370E10
	0x02370E0C BL 0x1C5C684
	0x02370E10 LDR X8, [X0 + 0xC0]
	0x02370E14 LDR X0, [X8 + 0x10]
	0x02370E18 LDRB W8, [X0 + 0x135]
	0x02370E1C TBNZ X8, 0x0, 0x2370E2C
	0x02370E20 LDP X20, X19, [X31 + 0x10]
	0x02370E24 LDP X30, X21, [X31], #0x20
	0x02370E28 B 0x1C5C684
	0x02370E2C LDP X20, X19, [X31 + 0x10]
	0x02370E30 LDP X30, X21, [X31], #0x20
	0x02370E34 RET
	0x02370E38 MOV X1, X31
	0x02370E3C B 0x33BDD8C
	0x02370E40 STP X29, X30, [X31 - 0x50]!
	0x02370E44 STR X25, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Call 0x1C17F10
	022 Move X8, [X19+32]
	023 Move X20, X0
	024 Add X9, X8, 309
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, X8
	031 Call 0x1C5D684
	032 Move X8, [X19+32]
	033 Add X9, X8, 309
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X0, X8
	036 Move X10, [X0+192]
	037 Move X10, [X10+8]
	038 Move X21, [X10]
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X8
	044 Call 0x1C5D684
	045 Move X8, X0
	046 Move X8, [X8+192]
	047 Move X0, X20
	048 Move X1, [X8+8]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move [X8], X20
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+16]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {87}
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call 0x1C5D684
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 

Method: System.Void .ctor()

Disassembly:
	0x02370E48 STP X24, X23, [X31 + 0x20]
	0x02370E4C STP X22, X21, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: <>f__AnonymousType0`2<T, System.Int32> <Batch>b__0_0(T item, System.Int32 inx)

Disassembly:
	0x02370E50 STP X20, X19, [X31 + 0x40]
	0x02370E54 ADD X29, X31, 0x0
	0x02370E58 SUB X31, X31, 0x30
	0x02370E5C MRS X25, 0xC000
	0x02370E60 LDR X8, [X25 + 0x28]
	0x02370E64 ADD X10, X31, 0x0
	0x02370E68 STUR X8, [X29 - 0x8]
	0x02370E6C LDR X8, [X2 + 0x20]
	0x02370E70 LDR X8, [X8 + 0xC0]
	0x02370E74 LDR X9, [X8 + 0x38]
	0x02370E78 LDR W9, [X9 + 0xFC]
	0x02370E7C ADD X9, X9, 0xF
	0x02370E80 AND X9, X9, 0x1FFFFFFFF
	0x02370E84 SUB X19, X10, X9
	0x02370E88 ADD X31, X19, 0x0
	0x02370E8C LDR X9, [X8 + 0x48]
	0x02370E90 ADD X10, X31, 0x0
	0x02370E94 LDR W9, [X9 + 0xFC]
	0x02370E98 ADD X9, X9, 0xF
	0x02370E9C AND X9, X9, 0x1FFFFFFFF
	0x02370EA0 SUB X20, X10, X9
	0x02370EA4 ADD X31, X20, 0x0
	0x02370EA8 LDR X9, [X8 + 0x68]
	0x02370EAC ADD X10, X31, 0x0
	0x02370EB0 LDR W9, [X9 + 0xFC]
	0x02370EB4 ADD X9, X9, 0xF
	0x02370EB8 AND X9, X9, 0x1FFFFFFFF
	0x02370EBC SUB X21, X10, X9
	0x02370EC0 ADD X31, X21, 0x0
	0x02370EC4 LDR X9, [X8 + 0x78]
	0x02370EC8 ADD X10, X31, 0x0
	0x02370ECC LDR W9, [X9 + 0xFC]
	0x02370ED0 ADD X9, X9, 0xF
	0x02370ED4 AND X9, X9, 0x1FFFFFFFF
	0x02370ED8 SUB X22, X10, X9
	0x02370EDC ADD X31, X22, 0x0
	0x02370EE0 CBZ X1, 0x23710C0
	0x02370EE4 MOV X24, X1
	0x02370EE8 LDR X1, [X8 + 0x20]
	0x02370EEC MOV X23, X2
	0x02370EF0 SUB X4, X29, 0x30
	0x02370EF4 MOV X2, X24
	0x02370EF8 LDR X0, [X1]
	0x02370EFC LDR X8, [X1 + 0x10]
	0x02370F00 MOV X3, X31
	0x02370F04 BLR X8
	0x02370F08 LDUR X2, [X29 - 0x30]
	0x02370F0C CBZ X2, 0x23710C0
	0x02370F10 LDR X8, [X23 + 0x20]
	0x02370F14 SUB X3, X29, 0x30
	0x02370F18 MOV X4, X19
	0x02370F1C LDR X8, [X8 + 0xC0]
	0x02370F20 LDR X1, [X8 + 0x30]
	0x02370F24 LDR X0, [X1]
	0x02370F28 STUR X19, [X29 - 0x30]
	0x02370F2C LDR X8, [X1 + 0x10]
	0x02370F30 BLR X8
	0x02370F34 LDR X8, [X23 + 0x20]
	0x02370F38 SUB X4, X29, 0x30
	0x02370F3C MOV X2, X24
	0x02370F40 MOV X3, X31
	0x02370F44 LDR X8, [X8 + 0xC0]
	0x02370F48 LDR X1, [X8 + 0x20]
	0x02370F4C LDR X0, [X1]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Add X29, X31, 0
	009 Subtract X31, X31, 48
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X22+40]
	012 Add X10, X31, 0
	013 Move X21, X3
	014 Move W19, W2
	015 Move [X29-8], X8
	016 Move [X29-40], X1
	017 Move X23, [X3+32]
	018 Move X8, [X23+192]
	019 Move X9, [X8+24]
	020 Move W8, [X9+252]
	021 Add X11, X8, 15
	022 And X11, X11, 0x1FFFFFFFF
	023 Subtract X20, X10, X11
	024 Add X31, X20, 0
	025 Move W9, [X9+40]
	026 Move X0, X20
	027 Move X2, X8
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X29, 40
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Call 0x3EB2AC0
	032 Move X8, [X23+192]
	033 Move X0, [X8+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Call 0x1C17F10
	041 Move X8, [X21+32]
	042 Move X21, X0
	043 Move X8, [X8+192]
	044 Move X9, [X8+24]
	045 Move X1, [X8+40]
	046 Move W9, [X9+40]
	047 Move X8, [X1]
	048 Move TEMP, X9
	049 And TEMP, TEMP, -2147483648
	050 Compare TEMP, -2147483648
	051 JumpIfEqual {53}
	052 Move X20, [X20]
	053 Subtract X9, X29, 12
	054 Move [X29-12], W19
	055 Move [X29-32], X20
	056 Move [X29-24], X9
	057 Move X9, [X1+16]
	058 Subtract X3, X29, 32
	059 Subtract X4, X29, 12
	060 Move X0, X8
	061 Move X2, X21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X22+40]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X21
	067 Add X31, X29, 0
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X23, [X31+16]
	073 Move X29, [X31+64]
	074 Move X30, [X31+72]
	075 Return X0
	076 Call 0x3EB2B20

Method: System.Collections.Generic.IEnumerable`1<T> <Batch>b__0_2(System.Linq.IGrouping`2<System.Int32, <>f__AnonymousType0`2<T, System.Int32>> g)

Disassembly:
	0x02370F50 LDR X8, [X1 + 0x10]
	0x02370F54 BLR X8
	0x02370F58 LDUR X2, [X29 - 0x30]
	0x02370F5C CBZ X2, 0x23710C0
	0x02370F60 LDR X8, [X23 + 0x20]
	0x02370F64 SUB X3, X29, 0x30
	0x02370F68 MOV X4, X20
	0x02370F6C LDR X8, [X8 + 0xC0]
	0x02370F70 LDR X1, [X8 + 0x40]
	0x02370F74 LDR X0, [X1]
	0x02370F78 STUR X20, [X29 - 0x30]
	0x02370F7C LDR X8, [X1 + 0x10]
	0x02370F80 BLR X8
	0x02370F84 LDR X8, [X23 + 0x20]
	0x02370F88 SUB X4, X29, 0x30
	0x02370F8C MOV X2, X24
	0x02370F90 MOV X3, X31
	0x02370F94 LDR X8, [X8 + 0xC0]
	0x02370F98 LDR X1, [X8 + 0x50]
	0x02370F9C LDR X0, [X1]
	0x02370FA0 LDR X8, [X1 + 0x10]
	0x02370FA4 BLR X8
	0x02370FA8 LDUR X2, [X29 - 0x30]
	0x02370FAC CBZ X2, 0x23710C0
	0x02370FB0 LDR X8, [X23 + 0x20]
	0x02370FB4 SUB X3, X29, 0x30
	0x02370FB8 MOV X4, X21
	0x02370FBC LDR X8, [X8 + 0xC0]
	0x02370FC0 LDR X1, [X8 + 0x60]
	0x02370FC4 LDR X0, [X1]
	0x02370FC8 STUR X21, [X29 - 0x30]
	0x02370FCC LDR X8, [X1 + 0x10]
	0x02370FD0 BLR X8
	0x02370FD4 LDR X8, [X23 + 0x20]
	0x02370FD8 SUB X4, X29, 0x30
	0x02370FDC MOV X2, X24
	0x02370FE0 MOV X3, X31
	0x02370FE4 LDR X8, [X8 + 0xC0]
	0x02370FE8 LDR X1, [X8 + 0x50]
	0x02370FEC LDR X0, [X1]
	0x02370FF0 LDR X8, [X1 + 0x10]
	0x02370FF4 BLR X8
	0x02370FF8 LDUR X2, [X29 - 0x30]
	0x02370FFC CBZ X2, 0x23710C0
	0x02371000 LDR X8, [X23 + 0x20]
	0x02371004 SUB X3, X29, 0x30
	0x02371008 MOV X4, X22
	0x0237100C LDR X8, [X8 + 0xC0]
	0x02371010 LDR X1, [X8 + 0x70]
	0x02371014 LDR X0, [X1]
	0x02371018 STUR X22, [X29 - 0x30]
	0x0237101C LDR X8, [X1 + 0x10]
	0x02371020 BLR X8
	0x02371024 LDR X8, [X23 + 0x20]
	0x02371028 LDR X8, [X8 + 0xC0]
	0x0237102C LDR X9, [X8 + 0x38]
	0x02371030 LDR W9, [X9 + 0x28]
	0x02371034 TBNZ X9, 0x1F, 0x237103C
	0x02371038 LDR X19, [X19]
	0x0237103C LDR X9, [X8 + 0x48]
	0x02371040 LDR X1, [X8 + 0x80]
	0x02371044 LDR W9, [X9 + 0x28]
	0x02371048 TBNZ X9, 0x1F, 0x2371050
	0x0237104C LDR X20, [X20]
	0x02371050 LDR X9, [X8 + 0x68]
	0x02371054 LDR X0, [X1]
	0x02371058 LDR W9, [X9 + 0x28]
	0x0237105C TBNZ X9, 0x1F, 0x2371064
	0x02371060 LDR X21, [X21]
	0x02371064 LDR X8, [X8 + 0x78]
	0x02371068 LDR W8, [X8 + 0x28]
	0x0237106C TBNZ X8, 0x1F, 0x2371074
	0x02371070 LDR X22, [X22]
	0x02371074 STP X19, X20, [X29 - 0x30]
	0x02371078 STP X21, X22, [X29 - 0x20]
	0x0237107C LDR X8, [X1 + 0x10]
	0x02371080 SUB X3, X29, 0x30
	0x02371084 SUB X4, X29, 0x10
	0x02371088 MOV X2, X31
	0x0237108C BLR X8
	0x02371090 LDUR X0, [X29 - 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+16]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X19+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+16]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+184]
	031 Move X21, [X8+16]
	032 Compare X21, 0
	033 JumpIfNotEqual {99}
	034 Move X8, [X19+32]
	035 Move X8, [X8+192]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X8, [X19+32]
	048 Move X8, [X8+192]
	049 Move X0, [X8+16]
	050 Move W9, [X0+309]
	051 Move TEMP, X9
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Call 0x1C5D684
	056 Move X8, [X19+32]
	057 Move X8, [X8+192]
	058 Move X8, [X8+56]
	059 Move X9, [X0+184]
	060 Move W10, [X8+309]
	061 Move X22, [X9]
	062 Move TEMP, X10
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X8
	067 Call 0x1C5D684
	068 Move X8, X0
	069 Move X0, X8
	070 Call 0x1C17F10
	071 Move X8, [X19+32]
	072 Move X1, X22
	073 Move X21, X0
	074 Move X8, [X8+192]
	075 Move X2, [X8+64]
	076 Move X3, [X8+72]
	077 Move X8, [X3]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X8, [X19+32]
	080 Move X8, [X8+192]
	081 Move X0, [X8+16]
	082 Move W9, [X0+309]
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Call 0x1C5D684
	088 Move X8, [X19+32]
	089 Move X8, [X8+192]
	090 Move X9, [X0+184]
	091 Move [X9+16], X21
	092 Move X0, [X8+16]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X8, [X19+32]
	100 Move X0, X20
	101 Move X1, X21
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X8, [X8+192]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X2, [X8+80]
	108 Move X3, [X2]
	109 Move X30, [X31+48]
	110 CallNoReturn X3

Method: T <Batch>b__0_3(<>f__AnonymousType0`2<T, System.Int32> x)

Disassembly:
	0x02371094 LDR X8, [X25 + 0x28]
	0x02371098 LDUR X9, [X29 - 0x8]
	0x0237109C CMP X8, X9
	0x023710A0 B.NE 0x23710C4
	0x023710A4 ADD X31, X29, 0x0
	0x023710A8 LDP X20, X19, [X31 + 0x40]
	0x023710AC LDP X22, X21, [X31 + 0x30]
	0x023710B0 LDP X24, X23, [X31 + 0x20]
	0x023710B4 LDR X25, [X31 + 0x10]
	0x023710B8 LDP X29, X30, [X31], #0x50
	0x023710BC RET
	0x023710C0 BL 0x1C16F20
	0x023710C4 BL 0x3EB1B20
	0x023710C8 STP X30, X21, [X31 - 0x20]!
	0x023710CC STP X20, X19, [X31 + 0x10]
	0x023710D0 MOV X19, X0
	0x023710D4 LDR X0, [X0 + 0x20]
	0x023710D8 LDRB W8, [X0 + 0x135]
	0x023710DC TBNZ X8, 0x0, 0x23710E4
	0x023710E0 BL 0x1C5C684
	0x023710E4 LDR X8, [X0 + 0xC0]
	0x023710E8 LDR X0, [X8]
	0x023710EC LDRB W8, [X0 + 0x135]
	0x023710F0 TBNZ X8, 0x0, 0x23710F8
	0x023710F4 BL 0x1C5C684
	0x023710F8 BL 0x1C16F10
	0x023710FC LDR X8, [X19 + 0x20]
	0x02371100 MOV X20, X0
	0x02371104 ADD X9, X8, 0x135
	0x02371108 LDRH W9, [X9]
	0x0237110C TBNZ X9, 0x0, 0x2371128
	0x02371110 MOV X0, X8
	0x02371114 BL 0x1C5C684
	0x02371118 LDR X8, [X19 + 0x20]
	0x0237111C ADD X9, X8, 0x135
	0x02371120 LDRH W9, [X9]
	0x02371124 B 0x237112C
	0x02371128 MOV X0, X8
	0x0237112C LDR X10, [X0 + 0xC0]
	0x02371130 LDR X10, [X10 + 0x8]
	0x02371134 LDR X21, [X10]
	0x02371138 TBNZ X9, 0x0, 0x2371148

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 16
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move [X29-8], X8
	012 Move X8, [X3+32]
	013 Move X8, [X8+192]
	014 Move X9, [X8+24]
	015 Move W20, [X9+252]
	016 Add X9, X31, 0
	017 Add X10, X20, 15
	018 And X10, X10, 0x1FFFFFFFF
	019 Subtract X21, X9, X10
	020 Add X31, X21, 0
	021 Compare X1, 0
	022 JumpIfEqual {47}
	023 Move X19, X2
	024 Move X2, X1
	025 Move X1, [X8+104]
	026 Subtract X3, X29, 16
	027 Move X4, X21
	028 Move X0, [X1]
	029 Move [X29-16], X21
	030 Move X8, [X1+16]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X0, X19
	033 Move X1, X21
	034 Move X2, X20
	035 Call 0x3EB2AC0
	036 Move X8, [X22+40]
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X31, X29, 0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X29, [X31+48]
	045 Move X30, [X31+56]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x3EB2B20

