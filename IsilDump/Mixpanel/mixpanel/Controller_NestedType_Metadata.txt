Type: mixpanel.Controller/Metadata

Method: System.Void InitSession()

Disassembly:
	0x031D37D8 LDR X10, [X10 + 0xF90]
	0x031D37DC LDR X1, [X9]
	0x031D37E0 LDRH W9, [X8 + 0x12E]
	0x031D37E4 LDR X21, [X10]
	0x031D37E8 CBZ X9, 0x31D380C
	0x031D37EC LDR X10, [X8 + 0xB0]
	0x031D37F0 ADD X10, X10, 0x8
	0x031D37F4 LDUR X11, [X10 - 0x8]
	0x031D37F8 CMP X11, X1
	0x031D37FC B.EQ 0x31D381C
	0x031D3800 SUBS X9, X9, 0x1
	0x031D3804 ADD X10, X10, 0x10
	0x031D3808 B.NE 0x31D37F4
	0x031D380C MOVZ W2, 0x7
	0x031D3810 MOV X0, X20
	0x031D3814 BL 0x1C5C788
	0x031D3818 B 0x31D382C
	0x031D381C LDR W9, [X10]
	0x031D3820 ADD W9, W9, 0x7
	0x031D3824 ADD X8, X8, W9, 0x4, SXTW
	0x031D3828 ADD X0, X8, 0x138
	0x031D382C LDP X4, X3, [X0]
	0x031D3830 MOV X0, X20
	0x031D3834 MOV X2, X19
	0x031D3838 LDP X20, X19, [X31 + 0x10]
	0x031D383C MOV X1, X21
	0x031D3840 LDP X30, X21, [X31], #0x20
	0x031D3844 BR X4
	0x031D3848 BL 0x1C16F20
	0x031D384C STR X30, [X31 - 0x10]!
	0x031D3850 CBZ X0, 0x31D3860
	0x031D3854 LDRB W0, [X0 + 0x20]
	0x031D3858 LDR X30, [X31], #0x10
	0x031D385C RET
	0x031D3860 BL 0x1C16F20
	0x031D3864 STR X30, [X31 - 0x30]!
	0x031D3868 STP X22, X21, [X31 + 0x10]
	0x031D386C STP X20, X19, [X31 + 0x20]
	0x031D3870 ADRP X22, 0x1209000
	0x031D3874 ADRP X20, 0xF4C000
	0x031D3878 LDRB W8, [X22 + 0x7B]
	0x031D387C LDR X20, [X20 + 0xEE0]
	0x031D3880 MOV W19, W0
	0x031D3884 AND W21, W0, 0x1
	0x031D3888 TBNZ X8, 0x0, 0x31D38B8
	0x031D388C ADRP X0, 0xF4C000
	0x031D3890 LDR X0, [X0 + 0xF60]
	0x031D3894 BL 0x1C16CF4
	0x031D3898 ADRP X0, 0xF4C000
	0x031D389C LDR X0, [X0 + 0xEE0]
	0x031D38A0 BL 0x1C16CF4
	0x031D38A4 ADRP X0, 0xF4C000
	0x031D38A8 LDR X0, [X0 + 0xF98]
	0x031D38AC BL 0x1C16CF4
	0x031D38B0 MOVZ W8, 0x1
	0x031D38B4 STRB W8, [X22 + 0x7B]
	0x031D38B8 LDR X0, [X20]
	0x031D38BC LDR W8, [X0 + 0xE0]
	0x031D38C0 CBNZ W8, 0x31D38CC
	0x031D38C4 BL 0x1C16DFC
	0x031D38C8 LDR X0, [X20]
	0x031D38CC LDR X8, [X0 + 0xB8]
	0x031D38D0 LDR X20, [X8]
	0x031D38D4 STRB W21, [X8 + 0x10]
	0x031D38D8 CBZ X20, 0x31D3960
	0x031D38DC ADRP X9, 0xF4C000
	0x031D38E0 ADRP X10, 0xF4C000
	0x031D38E4 LDR X8, [X20]
	0x031D38E8 LDR X9, [X9 + 0xF98]
	0x031D38EC LDR X10, [X10 + 0xF60]
	0x031D38F0 LDR X21, [X9]
	0x031D38F4 LDRH W9, [X8 + 0x12E]
	0x031D38F8 LDR X1, [X10]
	0x031D38FC CBZ X9, 0x31D3920
	0x031D3900 LDR X10, [X8 + 0xB0]
	0x031D3904 ADD X10, X10, 0x8
	0x031D3908 LDUR X11, [X10 - 0x8]
	0x031D390C CMP X11, X1
	0x031D3910 B.EQ 0x31D3930
	0x031D3914 SUBS X9, X9, 0x1
	0x031D3918 ADD X10, X10, 0x10
	0x031D391C B.NE 0x31D3908
	0x031D3920 MOVZ W2, 0x6
	0x031D3924 MOV X0, X20
	0x031D3928 BL 0x1C5C788
	0x031D392C B 0x31D3940
	0x031D3930 LDR W9, [X10]
	0x031D3934 ADD W9, W9, 0x6
	0x031D3938 ADD X8, X8, W9, 0x4, SXTW
	0x031D393C ADD X0, X8, 0x138
	0x031D3940 LDP X4, X3, [X0]
	0x031D3944 AND W2, W19, 0x1
	0x031D3948 MOV X0, X20
	0x031D394C MOV X1, X21
	0x031D3950 LDP X20, X19, [X31 + 0x20]
	0x031D3954 LDP X22, X21, [X31 + 0x10]
	0x031D3958 LDR X30, [X31], #0x30
	0x031D395C BR X4
	0x031D3960 BL 0x1C16F20
	0x031D3964 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X19, 0x120A000
	008 Move X20, 0xF4D000
	009 Move W8, [X19+52]
	010 Move X20, [X20+3792]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xF2A000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0xF22000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move X0, 0xF4D000
	022 Move X0, [X0+3792]
	023 Call 0x1C17CF4
	024 Move X0, 0xF23000
	025 Move X0, [X0+1392]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+52], W8
	029 Move X0, [X20]
	030 Move [X31+24], X31
	031 Move [X31+8], X31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move X0, [X8+24]
	039 Move [X8], X31
	040 Compare X0, 0
	041 JumpIfEqual {115}
	042 Move X8, [X0]
	043 Move X19, 0xF2A000
	044 Move X22, 0xF22000
	045 Move TEMP, 0x80000000
	046 Not TEMP
	047 Move W2, TEMP
	048 Move X9, [X8+408]
	049 Move X3, [X8+416]
	050 Move X19, [X19+2536]
	051 Move X22, [X22+2544]
	052 Move W1, W31
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19]
	055 Move W19, W0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X21, 0xF23000
	062 Move X21, [X21+1392]
	063 Move W1, 16
	064 Move W0, W19
	065 Move X2, X31
	066 Call Convert.ToString, X0, X1
	067 Move X8, [X20]
	068 Move X8, [X8+184]
	069 Move [X8+16], X0
	070 Move X0, [X22]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X31
	076 Call DateTime.get_UtcNow
	077 Move [X31+24], X0
	078 Add X0, X31, 0
	079 Move W1, 1970
	080 Move W2, 1
	081 Move W3, 1
	082 Move X4, X31
	083 Move [X31], X31
	084 Call DateTime..ctor, X0, X1, X2, X3
	085 Move X1, [X31]
	086 Add X0, X31, 24
	087 Move X2, X31
	088 Call DateTime.Subtract, X0, X1
	089 Move X8, [X21]
	090 Move [X31+8], X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Add X0, X31, 8
	097 Move X1, X31
	098 Call TimeSpan.get_TotalSeconds, X0
	099 Move X8, [X20]
	100 Move X9, 0x7FF00000
	101 Move D1, X9
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X8, [X8+184]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X30, [X31+16]
	108 NotImplemented "Instruction FCVTZS not yet implemented."
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move W9, 0x80000000
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Move [X8+8], W9
	113 Add X31, X31, 64
	114 Return 
	115 Call 0x1C17F20

Method: mixpanel.Value GetEventMetadata()

Disassembly:
	0x031D63E0 MOV X19, X0
	0x031D63E4 STR X9, [X31 + 0x10]
	0x031D63E8 CBZ W10, 0x31D63F8
	0x031D63EC CBZ W23, 0x31D6404
	0x031D63F0 BL 0x31D9A84
	0x031D63F4 B 0x31D6408
	0x031D63F8 MOV X0, X8
	0x031D63FC BL 0x1C16DFC
	0x031D6400 CBNZ W23, 0x31D63F0
	0x031D6404 BL 0x31D9998
	0x031D6408 MOV W25, W0
	0x031D640C LDR X0, [X21]
	0x031D6410 STR W25, [X31 + 0x1C]
	0x031D6414 LDR W8, [X0 + 0xE0]
	0x031D6418 CBZ W8, 0x31D6428
	0x031D641C CBZ W23, 0x31D6430
	0x031D6420 BL 0x31D9780
	0x031D6424 B 0x31D6434
	0x031D6428 BL 0x1C16DFC
	0x031D642C CBNZ W23, 0x31D6420
	0x031D6430 BL 0x31D9694
	0x031D6434 MOV W20, W0
	0x031D6438 CBZ X19, 0x31D6844
	0x031D643C MOV X0, X19
	0x031D6440 BL 0x31D6D74
	0x031D6444 CMP W0, W22
	0x031D6448 STR W25, [X31 + 0x18]
	0x031D644C B.GE 0x31D6788
	0x031D6450 LDP W25, W8, [X31 + 0x18]
	0x031D6454 SUB W26, W20, 0x1
	0x031D6458 CMP W8, W26
	0x031D645C B.GT 0x31D6788
	0x031D6460 ADRP X29, 0xF4A000
	0x031D6464 ADRP X24, 0xF4A000
	0x031D6468 ADRP X27, 0xF49000
	0x031D646C LDR X29, [X29 + 0xD8]
	0x031D6470 LDR X24, [X24 + 0xD0]
	0x031D6474 LDR X27, [X27 + 0xF60]
	0x031D6478 LDR W25, [X31 + 0x18]
	0x031D647C ADD X0, X31, 0x1C
	0x031D6480 MOV X1, X31
	0x031D6484 BL 0x337B6E0
	0x031D6488 CMP W23, 0x0
	0x031D648C CSEL X8, X29, X24, EQ
	0x031D6490 LDR X8, [X8]
	0x031D6494 MOV X1, X0
	0x031D6498 MOV X2, X31
	0x031D649C MOV X0, X8
	0x031D64A0 BL 0x321B938
	0x031D64A4 LDR X8, [X21]
	0x031D64A8 MOV X28, X0
	0x031D64AC LDR W9, [X8 + 0xE0]
	0x031D64B0 CBNZ W9, 0x31D64C0
	0x031D64B4 MOV X0, X8
	0x031D64B8 BL 0x1C16DFC
	0x031D64BC LDR X8, [X21]
	0x031D64C0 LDR X8, [X8 + 0xB8]
	0x031D64C4 LDR X20, [X8]
	0x031D64C8 CBZ X20, 0x31D6844
	0x031D64CC LDR X8, [X20]
	0x031D64D0 LDR X1, [X27]
	0x031D64D4 LDRH W9, [X8 + 0x12E]
	0x031D64D8 CBZ X9, 0x31D64FC
	0x031D64DC LDR X10, [X8 + 0xB0]
	0x031D64E0 ADD X10, X10, 0x8
	0x031D64E4 LDUR X11, [X10 - 0x8]
	0x031D64E8 CMP X11, X1
	0x031D64EC B.EQ 0x31D650C
	0x031D64F0 SUBS X9, X9, 0x1
	0x031D64F4 ADD X10, X10, 0x10
	0x031D64F8 B.NE 0x31D64E4
	0x031D64FC MOVZ W2, 0x5
	0x031D6500 MOV X0, X20
	0x031D6504 BL 0x1C5C788
	0x031D6508 B 0x31D651C
	0x031D650C LDR W9, [X10]
	0x031D6510 ADD W9, W9, 0x5
	0x031D6514 ADD X8, X8, W9, 0x4, SXTW
	0x031D6518 ADD X0, X8, 0x138
	0x031D651C LDP X8, X2, [X0]
	0x031D6520 MOV X0, X20
	0x031D6524 MOV X1, X28
	0x031D6528 BLR X8
	0x031D652C TBZ X0, 0x0, 0x31D6590
	0x031D6530 LDR X0, [X21]
	0x031D6534 LDR W8, [X0 + 0xE0]
	0x031D6538 CBNZ W8, 0x31D6544
	0x031D653C BL 0x1C16DFC
	0x031D6540 LDR X0, [X21]
	0x031D6544 LDR X8, [X0 + 0xB8]
	0x031D6548 LDR X20, [X8]
	0x031D654C CBZ X20, 0x31D6638
	0x031D6550 LDR X8, [X20]
	0x031D6554 LDR X1, [X27]
	0x031D6558 LDRH W9, [X8 + 0x12E]
	0x031D655C CBZ X9, 0x31D6580
	0x031D6560 LDR X10, [X8 + 0xB0]
	0x031D6564 ADD X10, X10, 0x8
	0x031D6568 LDUR X11, [X10 - 0x8]
	0x031D656C CMP X11, X1
	0x031D6570 B.EQ 0x31D65D0
	0x031D6574 SUBS X9, X9, 0x1
	0x031D6578 ADD X10, X10, 0x10
	0x031D657C B.NE 0x31D6568
	0x031D6580 MOVZ W2, 0x3
	0x031D6584 MOV X0, X20
	0x031D6588 BL 0x1C5C788
	0x031D658C B 0x31D65E0
	0x031D6590 MOV X0, X19
	0x031D6594 BL 0x31D6D74
	0x031D6598 CBNZ W0, 0x31D660C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x1207000
	008 Move X20, 0xF23000
	009 Move X21, 0xF4A000
	010 Move W8, [X19+53]
	011 Move X20, [X20+1864]
	012 Move X21, [X21+3792]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xF27000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0xF4A000
	021 Move X0, [X0+3792]
	022 Call 0x1C17CF4
	023 Move X0, 0xF23000
	024 Move X0, [X0+1864]
	025 Call 0x1C17CF4
	026 Move X0, 0xF4B000
	027 Move X0, [X0+176]
	028 Call 0x1C17CF4
	029 Move X0, 0xF4B000
	030 Move X0, [X0+184]
	031 Call 0x1C17CF4
	032 Move X0, 0xF4B000
	033 Move X0, [X0+192]
	034 Call 0x1C17CF4
	035 Move X0, 0xF4B000
	036 Move X0, [X0+200]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+53], W8
	040 Move X0, [X20]
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Call Value..ctor, X0
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move X0, [X8+24]
	052 Compare X0, 0
	053 JumpIfEqual {127}
	054 Move X8, [X0]
	055 Move X20, 0xF27000
	056 Move TEMP, 0x80000000
	057 Not TEMP
	058 Move W2, TEMP
	059 Move W1, W31
	060 Move X9, [X8+408]
	061 Move X3, [X8+416]
	062 Move X20, [X20+2536]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X20]
	065 Move W20, W0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move W1, 16
	072 Move W0, W20
	073 Move X2, X31
	074 Call Convert.ToString, X0, X1
	075 Call Value.op_Implicit, X0
	076 Compare X19, 0
	077 JumpIfEqual {127}
	078 Move X8, 0xF4B000
	079 Move X8, [X8+176]
	080 Move X20, 0xF4B000
	081 Move X22, 0xF4B000
	082 Move X23, 0xF4B000
	083 Move X1, [X8]
	084 Move X20, [X20+184]
	085 Move X22, [X22+192]
	086 Move X23, [X23+200]
	087 Move X2, X0
	088 Move X0, X19
	089 Call Value.Add, X0, X1, X2
	090 Move X8, [X21]
	091 Move X8, [X8+184]
	092 Move X0, [X8+16]
	093 Call Value.op_Implicit, X0
	094 Move X1, [X20]
	095 Move X2, X0
	096 Move X0, X19
	097 Call Value.Add, X0, X1, X2
	098 Move X8, [X21]
	099 Move X8, [X8+184]
	100 Move W0, [X8]
	101 Call Value.op_Implicit, X0
	102 Move X1, [X22]
	103 Move X2, X0
	104 Move X0, X19
	105 Call Value.Add, X0, X1, X2
	106 Move X8, [X21]
	107 Move X8, [X8+184]
	108 Move W0, [X8+8]
	109 Call Value.op_Implicit, X0
	110 Move X1, [X23]
	111 Move X2, X0
	112 Move X0, X19
	113 Call Value.Add, X0, X1, X2
	114 Move X8, [X21]
	115 Move X0, X19
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X8, [X8+184]
	121 Move W9, [X8]
	122 Add W9, W9, 1
	123 Move [X8], W9
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Return X0
	127 Call 0x1C17F20

Method: mixpanel.Value GetPeopleMetadata()

Disassembly:
	0x031D68A8 ADRP X0, 0xF1D000
	0x031D68AC LDR X0, [X0 + 0xE00]
	0x031D68B0 BL 0x1C16CF4
	0x031D68B4 ADRP X0, 0xF1D000
	0x031D68B8 LDR X0, [X0 + 0xE18]
	0x031D68BC BL 0x1C16CF4
	0x031D68C0 ADRP X0, 0xF49000
	0x031D68C4 LDR X0, [X0 + 0xF60]
	0x031D68C8 BL 0x1C16CF4
	0x031D68CC ADRP X0, 0xF49000
	0x031D68D0 LDR X0, [X0 + 0xEE0]
	0x031D68D4 BL 0x1C16CF4
	0x031D68D8 ADRP X0, 0xF22000
	0x031D68DC LDR X0, [X0 + 0x748]
	0x031D68E0 BL 0x1C16CF4
	0x031D68E4 ADRP X0, 0xF1F000
	0x031D68E8 LDR X0, [X0 + 0xC10]
	0x031D68EC BL 0x1C16CF4
	0x031D68F0 MOVZ W8, 0x1
	0x031D68F4 STRB W8, [X20 + 0x78]
	0x031D68F8 CBZ X19, 0x31D6BE0
	0x031D68FC ADRP X22, 0xF1D000
	0x031D6900 LDR X22, [X22 + 0xE00]
	0x031D6904 MOV X0, X19
	0x031D6908 BL 0x31D3A28
	0x031D690C MOV X19, X0
	0x031D6910 CBZ X0, 0x31D6BE4
	0x031D6914 ADRP X23, 0xF1D000
	0x031D6918 ADRP X24, 0xF22000
	0x031D691C ADRP X25, 0xF1F000
	0x031D6920 ADRP X26, 0xF49000
	0x031D6924 ADRP X27, 0xF49000
	0x031D6928 LDR X23, [X23 + 0xE18]
	0x031D692C LDR X24, [X24 + 0x748]
	0x031D6930 LDR X25, [X25 + 0xC10]
	0x031D6934 LDR X26, [X26 + 0xEE0]
	0x031D6938 LDR X27, [X27 + 0xF60]
	0x031D693C LDR X8, [X19]
	0x031D6940 LDR X1, [X23]
	0x031D6944 LDRH W9, [X8 + 0x12E]
	0x031D6948 CBZ X9, 0x31D696C
	0x031D694C LDR X10, [X8 + 0xB0]
	0x031D6950 ADD X10, X10, 0x8
	0x031D6954 LDUR X11, [X10 - 0x8]
	0x031D6958 CMP X11, X1
	0x031D695C B.EQ 0x31D697C
	0x031D6960 SUBS X9, X9, 0x1
	0x031D6964 ADD X10, X10, 0x10
	0x031D6968 B.NE 0x31D6954
	0x031D696C MOV X0, X19
	0x031D6970 MOV W2, W31
	0x031D6974 BL 0x1C5C788
	0x031D6978 B 0x31D6988
	0x031D697C LDRSW X9, [X10]
	0x031D6980 ADD X8, X8, X9, 0x4, LSL
	0x031D6984 ADD X0, X8, 0x138
	0x031D6988 LDP X8, X1, [X0]
	0x031D698C MOV X0, X19
	0x031D6990 BLR X8
	0x031D6994 TBZ X0, 0x0, 0x31D6B3C
	0x031D6998 LDR X8, [X19]
	0x031D699C LDR X1, [X23]
	0x031D69A0 LDRH W9, [X8 + 0x12E]
	0x031D69A4 CBZ X9, 0x31D69C8
	0x031D69A8 LDR X10, [X8 + 0xB0]
	0x031D69AC ADD X10, X10, 0x8
	0x031D69B0 LDUR X11, [X10 - 0x8]
	0x031D69B4 CMP X11, X1
	0x031D69B8 B.EQ 0x31D69D8
	0x031D69BC SUBS X9, X9, 0x1
	0x031D69C0 ADD X10, X10, 0x10
	0x031D69C4 B.NE 0x31D69B0
	0x031D69C8 MOVZ W2, 0x1
	0x031D69CC MOV X0, X19
	0x031D69D0 BL 0x1C5C788
	0x031D69D4 B 0x31D69E8
	0x031D69D8 LDR W9, [X10]
	0x031D69DC ADD W9, W9, 0x1
	0x031D69E0 ADD X8, X8, W9, 0x4, SXTW
	0x031D69E4 ADD X0, X8, 0x138
	0x031D69E8 LDP X8, X1, [X0]
	0x031D69EC MOV X0, X19
	0x031D69F0 BLR X8
	0x031D69F4 CBZ X0, 0x31D6BD0
	0x031D69F8 LDR X8, [X0]
	0x031D69FC LDR X1, [X24]
	0x031D6A00 LDRB W10, [X8 + 0x130]
	0x031D6A04 LDRB W9, [X1 + 0x130]
	0x031D6A08 CMP W10, W9
	0x031D6A0C B.CC 0x31D6BCC
	0x031D6A10 LDR X8, [X8 + 0xC8]
	0x031D6A14 ADD X8, X8, X9, 0x3, LSL
	0x031D6A18 LDUR X8, [X8 - 0x8]
	0x031D6A1C CMP X8, X1
	0x031D6A20 B.NE 0x31D6BCC
	0x031D6A24 LDR X1, [X25]
	0x031D6A28 BL 0x31D3650
	0x031D6A2C CBZ X0, 0x31D6BD4
	0x031D6A30 LDR X20, [X0 + 0x18]
	0x031D6A34 CBZ X20, 0x31D693C
	0x031D6A38 LDR X0, [X26]
	0x031D6A3C LDR W8, [X0 + 0xE0]
	0x031D6A40 CBNZ W8, 0x31D6A4C
	0x031D6A44 BL 0x1C16DFC
	0x031D6A48 LDR X0, [X26]
	0x031D6A4C LDR X8, [X0 + 0xB8]
	0x031D6A50 LDR X21, [X8]
	0x031D6A54 CBZ X21, 0x31D6BD8
	0x031D6A58 LDR X8, [X21]
	0x031D6A5C LDR X1, [X27]
	0x031D6A60 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x1207000
	008 Move X20, 0xF23000
	009 Move X21, 0xF4A000
	010 Move W8, [X19+54]
	011 Move X20, [X20+1864]
	012 Move X21, [X21+3792]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0xF27000
	018 Move X0, [X0+2536]
	019 Call 0x1C17CF4
	020 Move X0, 0xF4A000
	021 Move X0, [X0+3792]
	022 Call 0x1C17CF4
	023 Move X0, 0xF23000
	024 Move X0, [X0+1864]
	025 Call 0x1C17CF4
	026 Move X0, 0xF4B000
	027 Move X0, [X0+176]
	028 Call 0x1C17CF4
	029 Move X0, 0xF4B000
	030 Move X0, [X0+184]
	031 Call 0x1C17CF4
	032 Move X0, 0xF4B000
	033 Move X0, [X0+192]
	034 Call 0x1C17CF4
	035 Move X0, 0xF4B000
	036 Move X0, [X0+200]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+54], W8
	040 Move X0, [X20]
	041 Call 0x1C17F10
	042 Move X19, X0
	043 Call Value..ctor, X0
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X21]
	050 Move X8, [X0+184]
	051 Move X0, [X8+24]
	052 Compare X0, 0
	053 JumpIfEqual {127}
	054 Move X8, [X0]
	055 Move X20, 0xF27000
	056 Move TEMP, 0x80000000
	057 Not TEMP
	058 Move W2, TEMP
	059 Move W1, W31
	060 Move X9, [X8+408]
	061 Move X3, [X8+416]
	062 Move X20, [X20+2536]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X20]
	065 Move W20, W0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move W1, 16
	072 Move W0, W20
	073 Move X2, X31
	074 Call Convert.ToString, X0, X1
	075 Call Value.op_Implicit, X0
	076 Compare X19, 0
	077 JumpIfEqual {127}
	078 Move X8, 0xF4B000
	079 Move X8, [X8+176]
	080 Move X20, 0xF4B000
	081 Move X22, 0xF4B000
	082 Move X23, 0xF4B000
	083 Move X1, [X8]
	084 Move X20, [X20+184]
	085 Move X22, [X22+192]
	086 Move X23, [X23+200]
	087 Move X2, X0
	088 Move X0, X19
	089 Call Value.Add, X0, X1, X2
	090 Move X8, [X21]
	091 Move X8, [X8+184]
	092 Move X0, [X8+16]
	093 Call Value.op_Implicit, X0
	094 Move X1, [X20]
	095 Move X2, X0
	096 Move X0, X19
	097 Call Value.Add, X0, X1, X2
	098 Move X8, [X21]
	099 Move X8, [X8+184]
	100 Move W0, [X8+4]
	101 Call Value.op_Implicit, X0
	102 Move X1, [X22]
	103 Move X2, X0
	104 Move X0, X19
	105 Call Value.Add, X0, X1, X2
	106 Move X8, [X21]
	107 Move X8, [X8+184]
	108 Move W0, [X8+8]
	109 Call Value.op_Implicit, X0
	110 Move X1, [X23]
	111 Move X2, X0
	112 Move X0, X19
	113 Call Value.Add, X0, X1, X2
	114 Move X8, [X21]
	115 Move X0, X19
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X8, [X8+184]
	121 Move W9, [X8+4]
	122 Add W9, W9, 1
	123 Move [X8+4], W9
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Return X0
	127 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x031D6B1C LDRSW X9, [X10]
	0x031D6B20 ADD X8, X8, X9, 0x4, LSL
	0x031D6B24 ADD X0, X8, 0x138
	0x031D6B28 LDP X8, X2, [X0]
	0x031D6B2C MOV X0, X21
	0x031D6B30 MOV X1, X20
	0x031D6B34 BLR X8
	0x031D6B38 B 0x31D693C
	0x031D6B3C MOV X20, X31
	0x031D6B40 LDR X1, [X22]
	0x031D6B44 MOV X0, X19
	0x031D6B48 BL 0x1C16E00
	0x031D6B4C CBZ X0, 0x31D6BAC
	0x031D6B50 LDR X8, [X0]
	0x031D6B54 LDR X1, [X22]
	0x031D6B58 MOV X19, X0
	0x031D6B5C LDRH W9, [X8 + 0x12E]
	0x031D6B60 CBZ X9, 0x31D6B84
	0x031D6B64 LDR X10, [X8 + 0xB0]
	0x031D6B68 ADD X10, X10, 0x8
	0x031D6B6C LDUR X11, [X10 - 0x8]
	0x031D6B70 CMP X11, X1
	0x031D6B74 B.EQ 0x31D6B94
	0x031D6B78 SUBS X9, X9, 0x1
	0x031D6B7C ADD X10, X10, 0x10
	0x031D6B80 B.NE 0x31D6B6C
	0x031D6B84 MOV X0, X19
	0x031D6B88 MOV W2, W31
	0x031D6B8C BL 0x1C5C788
	0x031D6B90 B 0x31D6BA0
	0x031D6B94 LDRSW X9, [X10]
	0x031D6B98 ADD X8, X8, X9, 0x4, LSL
	0x031D6B9C ADD X0, X8, 0x138
	0x031D6BA0 LDP X8, X1, [X0]
	0x031D6BA4 MOV X0, X19
	0x031D6BA8 BLR X8
	0x031D6BAC CBNZ X20, 0x31D6BE8
	0x031D6BB0 LDP X20, X19, [X31 + 0x50]
	0x031D6BB4 LDP X22, X21, [X31 + 0x40]
	0x031D6BB8 LDP X24, X23, [X31 + 0x30]
	0x031D6BBC LDP X26, X25, [X31 + 0x20]
	0x031D6BC0 LDP X30, X27, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1207000
	007 Move X21, 0xF4A000
	008 Move X19, 0xF25000
	009 Move W8, [X20+55]
	010 Move X21, [X21+3792]
	011 Move X19, [X19+744]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xF4A000
	017 Move X0, [X0+3792]
	018 Call 0x1C17CF4
	019 Move X0, 0xF25000
	020 Move X0, [X0+744]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+55], W8
	024 Move X8, [X21]
	025 Move X0, X31
	026 Move X8, [X8+184]
	027 Move [X8], X31
	028 Call Guid.NewGuid
	029 Move [X31], X0
	030 Move [X31+8], X1
	031 Add X0, X31, 0
	032 Move X1, X31
	033 Call Guid.GetHashCode, X0
	034 Move X8, [X19]
	035 Move W19, W0
	036 Move X0, X8
	037 Call 0x1C17F10
	038 Move W1, W19
	039 Move X2, X31
	040 Move X20, X0
	041 Call Random..ctor, X0, X1
	042 Move X8, [X21]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 Move X8, [X8+184]
	046 Move [X8+24], X20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Add X31, X31, 48
	050 Return 

