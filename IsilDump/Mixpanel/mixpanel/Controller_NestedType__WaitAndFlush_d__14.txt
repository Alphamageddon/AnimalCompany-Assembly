Type: mixpanel.Controller/<WaitAndFlush>d__14

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x031D41CC BL 0x31D47EC
	0x031D41D0 ADRP X8, 0xF4C000
	0x031D41D4 LDR X8, [X8 + 0x20]
	0x031D41D8 MOV X2, X0
	0x031D41DC MOV X0, X19
	0x031D41E0 LDR X1, [X8]
	0x031D41E4 BL 0x31D3E30
	0x031D41E8 MOV X0, X31
	0x031D41EC BL 0x3C0E0D8
	0x031D41F0 BL 0x31D47EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x031D86AC BL 0x1C16F20

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x031D86B0 STR X30, [X31 - 0x10]!
	0x031D86B4 BL 0x31D77D8
	0x031D86B8 TBZ X0, 0x0, 0x31D86C4
	0x031D86BC LDR X30, [X31], #0x10
	0x031D86C0 B 0x31D25C0
	0x031D86C4 LDR X30, [X31], #0x10
	0x031D86C8 RET
	0x031D86CC STR X30, [X31 - 0x20]!
	0x031D86D0 STP X20, X19, [X31 + 0x10]
	0x031D86D4 ADRP X20, 0x1204000
	0x031D86D8 LDRB W8, [X20 + 0x52]
	0x031D86DC MOV X19, X0
	0x031D86E0 TBNZ X8, 0x0, 0x31D8704
	0x031D86E4 ADRP X0, 0xF20000
	0x031D86E8 LDR X0, [X0 + 0x748]
	0x031D86EC BL 0x1C16CF4
	0x031D86F0 ADRP X0, 0xF48000
	0x031D86F4 LDR X0, [X0 + 0x208]
	0x031D86F8 BL 0x1C16CF4
	0x031D86FC MOVZ W8, 0x1
	0x031D8700 STRB W8, [X20 + 0x52]
	0x031D8704 BL 0x31D77D8
	0x031D8708 TBZ X0, 0x0, 0x31D8750
	0x031D870C ADRP X8, 0xF20000
	0x031D8710 LDR X8, [X8 + 0x748]
	0x031D8714 LDR X0, [X8]
	0x031D8718 BL 0x1C16F10
	0x031D871C MOV X20, X0
	0x031D8720 BL 0x31D3D04
	0x031D8724 CBZ X20, 0x31D875C
	0x031D8728 ADRP X8, 0xF48000
	0x031D872C LDR X8, [X8 + 0x208]
	0x031D8730 MOV X0, X20
	0x031D8734 MOV X2, X19
	0x031D8738 LDR X1, [X8]
	0x031D873C BL 0x31D3EA4
	0x031D8740 MOV X0, X20
	0x031D8744 LDP X20, X19, [X31 + 0x10]
	0x031D8748 LDR X30, [X31], #0x20
	0x031D874C B 0x31D574C
	0x031D8750 LDP X20, X19, [X31 + 0x10]
	0x031D8754 LDR X30, [X31], #0x20
	0x031D8758 RET
	0x031D875C BL 0x1C16F20
	0x031D8760 STR X30, [X31 - 0x30]!
	0x031D8764 STP X22, X21, [X31 + 0x10]
	0x031D8768 STP X20, X19, [X31 + 0x20]
	0x031D876C ADRP X21, 0x1204000
	0x031D8770 ADRP X22, 0xF20000
	0x031D8774 LDRB W8, [X21 + 0x53]
	0x031D8778 LDR X22, [X22 + 0x748]
	0x031D877C MOV X19, X1
	0x031D8780 MOV X20, X0
	0x031D8784 TBNZ X8, 0x0, 0x31D879C
	0x031D8788 ADRP X0, 0xF20000

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1205000
	007 Move W8, [X20+61]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xF48000
	014 Move X0, [X0+3560]
	015 Call 0x1C17CF4
	016 Move X0, 0xF25000
	017 Move X0, [X0+2464]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+61], W8
	021 Move W8, [X19+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Compare W8, 0
	024 JumpIfNotEqual {59}
	025 Move TEMP, 0
	026 Not TEMP
	027 Move W8, TEMP
	028 Move [X19+16], W8
	029 Move X0, [X19+32]
	030 Move TEMP, 0
	031 Not TEMP
	032 Move W8, TEMP
	033 Move [X19+16], W8
	034 Compare X0, 0
	035 JumpIfEqual {66}
	036 Move X1, X31
	037 Call Controller.DoFlush, X0, X1
	038 Move X21, 0xF48000
	039 Move X21, [X21+3560]
	040 Move X20, 0xF25000
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Move X20, [X20+2464]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X0, [X20]
	050 Move V8, [X8+20]
	051 Call 0x1C17F10
	052 Move V0, V8
	053 Move X1, X31
	054 Move X20, X0
	055 Call WaitForSecondsRealtime..ctor, X0, V0
	056 Move W0, 1
	057 Move [X19+24], X20
	058 Move [X19+16], W0
	059 Move W0, W31
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Move V8, [X31+48]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x031D878C LDR X0, [X0 + 0x748]
	0x031D8790 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x031D8794 MOVZ W8, 0x1
	0x031D8798 STRB W8, [X21 + 0x53]
	0x031D879C LDR X0, [X22]
	0x031D87A0 BL 0x1C16F10
	0x031D87A4 MOV X21, X0
	0x031D87A8 BL 0x31D3D04
	0x031D87AC CBZ X21, 0x31D87D4
	0x031D87B0 MOV X0, X21
	0x031D87B4 MOV X1, X20
	0x031D87B8 MOV X2, X19
	0x031D87BC BL 0x31D3EA4
	0x031D87C0 MOV X0, X21
	0x031D87C4 LDP X20, X19, [X31 + 0x20]
	0x031D87C8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xF1C000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xF49000
	011 Move X0, [X0+456]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x031D87CC LDR X30, [X31], #0x30
	0x031D87D0 B 0x31D86CC

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

