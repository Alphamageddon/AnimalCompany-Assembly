Type: mixpanel.Controller

Method: System.Void InitializeBeforeSceneLoad()

Disassembly:
	0x031D2BCC LDR W9, [X8 + 0xE0]
	0x031D2BD0 CBNZ W9, 0x31D2BDC
	0x031D2BD4 MOV X0, X8
	0x031D2BD8 BL 0x1C16DFC
	0x031D2BDC CMP W20, 0x0
	0x031D2BE0 CSET W0, EQ
	0x031D2BE4 BL 0x31D3864
	0x031D2BE8 MOV X0, X19
	0x031D2BEC MOV X1, X31
	0x031D2BF0 BL 0x32ED09C
	0x031D2BF4 LDR X0, [X22]
	0x031D2BF8 LDR W8, [X0 + 0xE0]
	0x031D2BFC CBNZ W8, 0x31D2C04
	0x031D2C00 BL 0x1C16DFC
	0x031D2C04 MOV X0, X31
	0x031D2C08 BL 0x3C019C0
	0x031D2C0C ADRP X8, 0xF4D000
	0x031D2C10 LDR X8, [X8 + 0xF08]
	0x031D2C14 MOV X2, X31
	0x031D2C18 LDR X1, [X8]
	0x031D2C1C BL 0x321B938
	0x031D2C20 MOV X19, X0
	0x031D2C24 MOV X1, X31
	0x031D2C28 BL 0x32E57A8
	0x031D2C2C TBZ X0, 0x0, 0x31D2DFC
	0x031D2C30 MOV X0, X19
	0x031D2C34 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x120B000
	005 Move X19, 0xF4E000
	006 Move W8, [X20+34]
	007 Move X19, [X19+3560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF4E000
	013 Move X0, [X0+3560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+34], W8
	017 Call MixpanelSettings.LoadSettings
	018 Move X0, [X19]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {24}
	022 Call 0x1C17DFC
	023 Move X0, [X19]
	024 Move X8, [X0+184]
	025 Move W8, [X8+17]
	026 Compare W8, 0
	027 JumpIfEqual {32}
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Controller.Initialize
	036 Return 

Method: System.Void InitializeAfterSceneLoad()

Disassembly:
	0x031D2D00 B 0x31D2D14
	0x031D2D04 LDR W9, [X10]
	0x031D2D08 ADD W9, W9, 0x1
	0x031D2D0C ADD X8, X8, W9, 0x4, SXTW
	0x031D2D10 ADD X0, X8, 0x138
	0x031D2D14 LDP X8, X1, [X0]
	0x031D2D18 MOV X0, X21
	0x031D2D1C BLR X8
	0x031D2D20 CBZ X0, 0x31D2E54
	0x031D2D24 LDR X8, [X0]
	0x031D2D28 LDR X1, [X25]
	0x031D2D2C LDR X8, [X8 + 0x40]
	0x031D2D30 LDR X9, [X1 + 0x40]
	0x031D2D34 CMP X8, X9
	0x031D2D38 B.NE 0x31D2E5C
	0x031D2D3C BL 0x1C16E08
	0x031D2D40 LDR X20, [X0]
	0x031D2D44 CBZ X20, 0x31D2E58
	0x031D2D48 LDR X22, [X0 + 0x8]
	0x031D2D4C LDR X1, [X26]
	0x031D2D50 MOV X0, X20
	0x031D2D54 MOV X2, X31
	0x031D2D58 BL 0x3226F64
	0x031D2D5C TBNZ X0, 0x0, 0x31D2C68
	0x031D2D60 MOV X0, X20
	0x031D2D64 MOV X1, X22
	0x031D2D68 BL 0x31D3B54

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x120B000
	005 Move X19, 0xF4E000
	006 Move W8, [X20+35]
	007 Move X19, [X19+3560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF4E000
	013 Move X0, [X0+3560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+35], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W8, [X8+17]
	025 Compare W8, 0
	026 JumpIfEqual {31}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 
	031 Call Controller.GetEngageDefaultProperties
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call Controller.GetEventsDefaultProperties
	036 Return 

Method: System.Void Initialize()

Disassembly:
	0x031D2CE4 B.EQ 0x31D2D04
	0x031D2CE8 SUBS X9, X9, 0x1
	0x031D2CEC ADD X10, X10, 0x10
	0x031D2CF0 B.NE 0x31D2CDC
	0x031D2CF4 MOVZ W2, 0x1
	0x031D2CF8 MOV X0, X21
	0x031D2CFC BL 0x1C5C788

ISIL:
	001 Move [X31-16], X30
	002 Call MixpanelSettings.get_Instance
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Call MixpanelSettings.ApplyToConfig, X0
	006 Move X30, [X31+16]
	007 Call Controller.GetInstance
	008 Return 
	009 Call 0x1C17F20

Method: System.Boolean IsInitialized()

Disassembly:
	0x031D3548 ADD X0, X8, 0x138
	0x031D354C LDP X8, X3, [X0]
	0x031D3550 MOV X0, X19
	0x031D3554 MOV X1, X20
	0x031D3558 MOV W2, W31
	0x031D355C BLR X8
	0x031D3560 LDR X8, [X21]
	0x031D3564 MOV W19, W0
	0x031D3568 LDR W9, [X8 + 0xE0]
	0x031D356C CBNZ W9, 0x31D3578
	0x031D3570 MOV X0, X8
	0x031D3574 BL 0x1C16DFC
	0x031D3578 MOV W0, W19
	0x031D357C LDP X20, X19, [X31 + 0x10]
	0x031D3580 MOV X1, X31
	0x031D3584 LDP X30, X21, [X31], #0x20
	0x031D3588 B 0x331E45C
	0x031D358C BL 0x1C16F20
	0x031D3590 STP X30, X21, [X31 - 0x20]!
	0x031D3594 STP X20, X19, [X31 + 0x10]
	0x031D3598 ADRP X20, 0x1209000
	0x031D359C ADRP X21, 0xF4C000
	0x031D35A0 LDRB W8, [X20 + 0x14D]
	0x031D35A4 LDR X21, [X21 + 0xF70]
	0x031D35A8 MOV X19, X0
	0x031D35AC TBNZ X8, 0x0, 0x31D35C4
	0x031D35B0 ADRP X0, 0xF4C000
	0x031D35B4 LDR X0, [X0 + 0xF70]
	0x031D35B8 BL 0x1C16CF4
	0x031D35BC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x120A000
	006 Move X21, 0xF4D000
	007 Move X19, 0xF21000
	008 Move W8, [X20+36]
	009 Move X21, [X21+3584]
	010 Move X19, [X19+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF4D000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xF21000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+36], W8
	023 Move X8, [X21]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move X19, [X8+32]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, X31
	035 Move X2, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call Object.op_Inequality, X0, X1
	039 Return X0

Method: System.Void Disable()

Disassembly:
	0x031D35C0 STRB W8, [X20 + 0x14D]
	0x031D35C4 LDR X0, [X21]
	0x031D35C8 BL 0x1C16F10
	0x031D35CC MOV X1, X19
	0x031D35D0 MOV X2, X31
	0x031D35D4 MOV X20, X0
	0x031D35D8 BL 0x32F762C
	0x031D35DC MOV X0, X20
	0x031D35E0 BL 0x31E659C
	0x031D35E4 MOV W1, W0
	0x031D35E8 MOV X0, X20
	0x031D35EC LDP X20, X19, [X31 + 0x10]
	0x031D35F0 LDP X30, X21, [X31], #0x20
	0x031D35F4 B 0x31E6754
	0x031D35F8 STP X30, X21, [X31 - 0x20]!
	0x031D35FC STP X20, X19, [X31 + 0x10]
	0x031D3600 ADRP X21, 0x1209000
	0x031D3604 LDRB W8, [X21 + 0x8F]
	0x031D3608 MOV X19, X1
	0x031D360C MOV X20, X0
	0x031D3610 TBNZ X8, 0x0, 0x31D3628
	0x031D3614 ADRP X0, 0xF4C000
	0x031D3618 LDR X0, [X0 + 0xF78]
	0x031D361C BL 0x1C16CF4
	0x031D3620 MOVZ W8, 0x1
	0x031D3624 STRB W8, [X21 + 0x8F]
	0x031D3628 LDR X0, [X20 + 0x40]
	0x031D362C CBZ X0, 0x31D364C
	0x031D3630 ADRP X8, 0xF4C000
	0x031D3634 LDR X8, [X8 + 0xF78]
	0x031D3638 MOV X1, X19
	0x031D363C LDP X20, X19, [X31 + 0x10]
	0x031D3640 LDR X2, [X8]
	0x031D3644 LDP X30, X21, [X31], #0x20
	0x031D3648 B 0x2AA528C
	0x031D364C BL 0x1C16F20
	0x031D3650 STR X30, [X31 - 0x30]!
	0x031D3654 STP X22, X21, [X31 + 0x10]
	0x031D3658 STP X20, X19, [X31 + 0x20]
	0x031D365C ADRP X21, 0x1209000
	0x031D3660 LDRB W8, [X21 + 0x89]
	0x031D3664 MOV X19, X1
	0x031D3668 MOV X20, X0
	0x031D366C TBNZ X8, 0x0, 0x31D36A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x120A000
	006 Move X21, 0xF4D000
	007 Move X20, 0xF21000
	008 Move W8, [X19+37]
	009 Move X21, [X21+3584]
	010 Move X20, [X20+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF4D000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xF21000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+37], W8
	023 Move X8, [X21]
	024 Move X0, [X20]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move X19, [X8+32]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {55}
	039 Move X8, [X21]
	040 Move X0, [X20]
	041 Move X8, [X8+184]
	042 Move W9, [X0+224]
	043 Move X19, [X8+32]
	044 Compare W9, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X1, X31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call Object.Destroy, X0
	054 Return 
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 

Method: mixpanel.Controller GetInstance()

Disassembly:
	0x031D342C MOV X0, X23
	0x031D3430 LDP X20, X19, [X31 + 0x30]
	0x031D3434 LDP X22, X21, [X31 + 0x20]
	0x031D3438 LDP X24, X23, [X31 + 0x10]
	0x031D343C LDP X30, X25, [X31], #0x40
	0x031D3440 RET
	0x031D3444 STR X30, [X31 - 0x20]!
	0x031D3448 STP X20, X19, [X31 + 0x10]
	0x031D344C MOV W19, W1
	0x031D3450 MOV X1, X31
	0x031D3454 MOV X20, X0
	0x031D3458 BL 0x33BDD8C
	0x031D345C STR W19, [X20 + 0x10]
	0x031D3460 LDP X20, X19, [X31 + 0x10]
	0x031D3464 LDR X30, [X31], #0x20
	0x031D3468 RET
	0x031D346C STP X30, X21, [X31 - 0x20]!
	0x031D3470 STP X20, X19, [X31 + 0x10]
	0x031D3474 ADRP X20, 0x1209000
	0x031D3478 ADRP X19, 0xF4C000
	0x031D347C LDRB W8, [X20 + 0x6C]
	0x031D3480 LDR X19, [X19 + 0xEE0]
	0x031D3484 TBNZ X8, 0x0, 0x31D34C0
	0x031D3488 ADRP X0, 0xF29000
	0x031D348C LDR X0, [X0 + 0x9E8]
	0x031D3490 BL 0x1C16CF4
	0x031D3494 ADRP X0, 0xF4C000
	0x031D3498 LDR X0, [X0 + 0xF60]
	0x031D349C BL 0x1C16CF4
	0x031D34A0 ADRP X0, 0xF4C000
	0x031D34A4 LDR X0, [X0 + 0xEE0]
	0x031D34A8 BL 0x1C16CF4
	0x031D34AC ADRP X0, 0xF4C000
	0x031D34B0 LDR X0, [X0 + 0xF68]
	0x031D34B4 BL 0x1C16CF4
	0x031D34B8 MOVZ W8, 0x1
	0x031D34BC STRB W8, [X20 + 0x6C]
	0x031D34C0 LDR X0, [X19]
	0x031D34C4 LDR W8, [X0 + 0xE0]
	0x031D34C8 CBNZ W8, 0x31D34D4
	0x031D34CC BL 0x1C16DFC
	0x031D34D0 LDR X0, [X19]
	0x031D34D4 LDR X8, [X0 + 0xB8]
	0x031D34D8 LDR X19, [X8]
	0x031D34DC CBZ X19, 0x31D358C
	0x031D34E0 ADRP X9, 0xF4C000
	0x031D34E4 ADRP X10, 0xF4C000
	0x031D34E8 LDR X8, [X19]
	0x031D34EC LDR X9, [X9 + 0xF60]
	0x031D34F0 LDR X10, [X10 + 0xF68]
	0x031D34F4 ADRP X21, 0xF29000
	0x031D34F8 LDR X1, [X9]
	0x031D34FC LDRH W9, [X8 + 0x12E]
	0x031D3500 LDR X20, [X10]
	0x031D3504 LDR X21, [X21 + 0x9E8]
	0x031D3508 CBZ X9, 0x31D352C
	0x031D350C LDR X10, [X8 + 0xB0]
	0x031D3510 ADD X10, X10, 0x8
	0x031D3514 LDUR X11, [X10 - 0x8]
	0x031D3518 CMP X11, X1
	0x031D351C B.EQ 0x31D353C
	0x031D3520 SUBS X9, X9, 0x1
	0x031D3524 ADD X10, X10, 0x10
	0x031D3528 B.NE 0x31D3514
	0x031D352C MOVZ W2, 0x2
	0x031D3530 MOV X0, X19
	0x031D3534 BL 0x1C5C788
	0x031D3538 B 0x31D354C
	0x031D353C LDR W9, [X10]
	0x031D3540 ADD W9, W9, 0x2
	0x031D3544 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x120A000
	006 Move X20, 0xF4D000
	007 Move X21, 0xF21000
	008 Move W8, [X19+38]
	009 Move X20, [X20+3584]
	010 Move X21, [X21+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xF4D000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xF4D000
	019 Move X0, [X0+3760]
	020 Call 0x1C17CF4
	021 Move X0, 0xF21000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move X0, 0xF21000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0xF4D000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+38], W8
	032 Move X8, [X20]
	033 Move X0, [X21]
	034 Move X8, [X8+184]
	035 Move W9, [X0+224]
	036 Move X19, [X8+32]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {76}
	048 Move X8, 0xF21000
	049 Move X8, [X8+2648]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X8, 0xF4D000
	053 Move X8, [X8+3768]
	054 Move X2, X31
	055 Move X19, X0
	056 Move X1, [X8]
	057 Call GameObject..ctor, X0, X1
	058 Compare X19, 0
	059 JumpIfEqual {84}
	060 Move X8, 0xF4D000
	061 Move X8, [X8+3760]
	062 Move X0, X19
	063 Move X1, [X8]
	064 Call 0x21E61FC, X0
	065 Move X8, [X20]
	066 Move X8, [X8+184]
	067 Move [X8+32], X0
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Move X1, X31
	075 Call Object.DontDestroyOnLoad, X0
	076 Move X8, [X20]
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X8, [X8+184]
	080 Move X0, [X8+32]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Return X0
	084 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x031D3670 ADRP X0, 0xF4C000
	0x031D3674 LDR X0, [X0 + 0xF78]
	0x031D3678 BL 0x1C16CF4
	0x031D367C ADRP X0, 0xF4C000
	0x031D3680 LDR X0, [X0 + 0xF80]
	0x031D3684 BL 0x1C16CF4
	0x031D3688 ADRP X0, 0xF4C000
	0x031D368C LDR X0, [X0 + 0xF88]
	0x031D3690 BL 0x1C16CF4
	0x031D3694 ADRP X0, 0xF25000
	0x031D3698 LDR X0, [X0 + 0x748]
	0x031D369C BL 0x1C16CF4
	0x031D36A0 MOVZ W8, 0x1
	0x031D36A4 STRB W8, [X21 + 0x89]
	0x031D36A8 LDR X0, [X20 + 0x40]
	0x031D36AC CBZ X0, 0x31D372C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x120A000
	005 Move X20, 0xF4D000
	006 Move W8, [X19+39]
	007 Move X20, [X20+3776]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF4D000
	013 Move X0, [X0+3776]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+39], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]

Method: System.Void OnApplicationPause(System.Boolean pauseStatus)

Disassembly:
	0x031D3774 TBNZ X8, 0x0, 0x31D37A4
	0x031D3778 ADRP X0, 0xF4C000
	0x031D377C LDR X0, [X0 + 0xF60]
	0x031D3780 BL 0x1C16CF4
	0x031D3784 ADRP X0, 0xF4C000
	0x031D3788 LDR X0, [X0 + 0xEE0]
	0x031D378C BL 0x1C16CF4
	0x031D3790 ADRP X0, 0xF4C000
	0x031D3794 LDR X0, [X0 + 0xF90]
	0x031D3798 BL 0x1C16CF4
	0x031D379C MOVZ W8, 0x1
	0x031D37A0 STRB W8, [X21 + 0x6F]
	0x031D37A4 LDR X0, [X20]
	0x031D37A8 LDR W8, [X0 + 0xE0]
	0x031D37AC CBNZ W8, 0x31D37B8
	0x031D37B0 BL 0x1C16DFC
	0x031D37B4 LDR X0, [X20]
	0x031D37B8 LDR X8, [X0 + 0xB8]
	0x031D37BC LDR X20, [X8]
	0x031D37C0 STR X19, [X8 + 0x8]
	0x031D37C4 CBZ X20, 0x31D3848
	0x031D37C8 ADRP X9, 0xF4C000
	0x031D37CC ADRP X10, 0xF4C000
	0x031D37D0 LDR X8, [X20]
	0x031D37D4 LDR X9, [X9 + 0xF60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x120A000
	005 Move W8, [X20+40]
	006 Move W19, W1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {19}
	011 Move TEMP, X19
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {28}
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 
	019 Move X0, 0xF4D000
	020 Move X0, [X0+3792]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+40], W8
	024 Move TEMP, X19
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {15}
	028 Move X8, 0xF4D000
	029 Move X8, [X8+3792]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]

Method: System.Void Start()

Disassembly:
	0x031D3968 STP X20, X19, [X31 + 0x10]
	0x031D396C ADRP X21, 0x1209000
	0x031D3970 ADRP X20, 0xF4C000
	0x031D3974 LDRB W8, [X21 + 0x3F]
	0x031D3978 LDR X20, [X20 + 0xDE8]
	0x031D397C MOV X19, X0
	0x031D3980 TBNZ X8, 0x0, 0x31D39B0
	0x031D3984 ADRP X0, 0xF4C000
	0x031D3988 LDR X0, [X0 + 0xDE8]
	0x031D398C BL 0x1C16CF4
	0x031D3990 ADRP X0, 0xF20000
	0x031D3994 LDR X0, [X0 + 0xA28]
	0x031D3998 BL 0x1C16CF4
	0x031D399C ADRP X0, 0xF4C000
	0x031D39A0 LDR X0, [X0 + 0xEC8]
	0x031D39A4 BL 0x1C16CF4
	0x031D39A8 MOVZ W8, 0x1
	0x031D39AC STRB W8, [X21 + 0x3F]
	0x031D39B0 LDR X0, [X20]
	0x031D39B4 LDR W8, [X0 + 0xE0]
	0x031D39B8 CBNZ W8, 0x31D39C4
	0x031D39BC BL 0x1C16DFC
	0x031D39C0 LDR X0, [X20]
	0x031D39C4 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x120A000
	006 Move X20, 0xF4D000
	007 Move W8, [X21+41]
	008 Move X20, [X20+3800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF4D000
	015 Move X0, [X0+3800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+41], W8
	019 Call Controller.MigrateFrom1To2, X0
	020 Move X0, [X20]
	021 Call Mixpanel.Log, X0
	022 Move X0, X19
	023 Call Controller.WaitAndFlush, X0
	024 Move X1, X0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call MonoBehaviour.StartCoroutine, X0, X1
	032 Return 

Method: System.Collections.IEnumerator WaitAndFlush()

Disassembly:
	0x031D416C STRB W8, [X22 + 0x31]
	0x031D4170 LDR X0, [X21]
	0x031D4174 STR X31, [X31 + 0x8]
	0x031D4178 LDR W8, [X0 + 0xE0]
	0x031D417C CBNZ W8, 0x31D4184
	0x031D4180 BL 0x1C16DFC
	0x031D4184 BL 0x31D43C4
	0x031D4188 TBZ X0, 0x0, 0x31D43B0
	0x031D418C CBZ X19, 0x31D4198
	0x031D4190 BL 0x31D1F28
	0x031D4194 B 0x31D41B8
	0x031D4198 ADRP X8, 0xF24000
	0x031D419C LDR X8, [X8 + 0x748]
	0x031D41A0 LDR X0, [X8]
	0x031D41A4 BL 0x1C16F10
	0x031D41A8 MOV X19, X0
	0x031D41AC BL 0x31D3D04
	0x031D41B0 BL 0x31D1F28
	0x031D41B4 CBZ X19, 0x31D43C0
	0x031D41B8 MOV X1, X0
	0x031D41BC MOV X0, X19
	0x031D41C0 BL 0x31D458C
	0x031D41C4 MOV X0, X31
	0x031D41C8 BL 0x3C0E0B0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1209000
	006 Move X21, 0xF4C000
	007 Move W8, [X20+42]
	008 Move X21, [X21+3896]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF4C000
	015 Move X0, [X0+3896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+42], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void DoFlush(System.Action`1<System.Boolean> onFlushComplete = null)

Disassembly:
	0x031D41F4 ADRP X8, 0xF4C000
	0x031D41F8 LDR X8, [X8 + 0x30]
	0x031D41FC MOV X2, X0
	0x031D4200 MOV X0, X19
	0x031D4204 LDR X1, [X8]
	0x031D4208 BL 0x31D3E30
	0x031D420C LDR X0, [X21]
	0x031D4210 LDR W8, [X0 + 0xE0]
	0x031D4214 CBNZ W8, 0x31D421C
	0x031D4218 BL 0x1C16DFC
	0x031D421C BL 0x31D4844
	0x031D4220 MOV X1, X0
	0x031D4224 MOV X0, X19
	0x031D4228 BL 0x31D458C
	0x031D422C BL 0x31D4A64
	0x031D4230 MOV X1, X0
	0x031D4234 MOV X0, X19
	0x031D4238 BL 0x31D458C
	0x031D423C BL 0x31D4C84
	0x031D4240 CBZ X0, 0x31D43C0
	0x031D4244 ADD X2, X31, 0x8
	0x031D4248 MOV X1, X20
	0x031D424C BL 0x31D4EA4
	0x031D4250 TBZ X0, 0x0, 0x31D42A4
	0x031D4254 BL 0x31D4F0C
	0x031D4258 LDR X8, [X31 + 0x8]
	0x031D425C CBZ X8, 0x31D43C0
	0x031D4260 LDR V1, [X8 + 0x28]
	0x031D4264 FSUB D0, D0, D1
	0x031D4268 BL 0x31D4FF4
	0x031D426C ADRP X8, 0xF4C000
	0x031D4270 LDR X8, [X8 + 0x10]
	0x031D4274 MOV X2, X0
	0x031D4278 MOV X0, X19
	0x031D427C LDR X1, [X8]
	0x031D4280 BL 0x31D3E30
	0x031D4284 LDR X0, [X21]
	0x031D4288 LDR W8, [X0 + 0xE0]
	0x031D428C CBNZ W8, 0x31D4294
	0x031D4290 BL 0x1C16DFC
	0x031D4294 BL 0x31D4C84
	0x031D4298 CBZ X0, 0x31D43C0
	0x031D429C MOV X1, X20
	0x031D42A0 BL 0x31D5054
	0x031D42A4 BL 0x31D2278
	0x031D42A8 CBZ X0, 0x31D43C0
	0x031D42AC LDR X0, [X0 + 0x28]
	0x031D42B0 BL 0x31D3DD8
	0x031D42B4 ADRP X8, 0xF4C000
	0x031D42B8 LDR X8, [X8 + 0x8]
	0x031D42BC MOV X2, X0
	0x031D42C0 MOV X0, X19
	0x031D42C4 LDR X1, [X8]
	0x031D42C8 BL 0x31D3E30
	0x031D42CC LDR X0, [X21]
	0x031D42D0 LDR W8, [X0 + 0xE0]
	0x031D42D4 CBNZ W8, 0x31D42DC
	0x031D42D8 BL 0x1C16DFC
	0x031D42DC BL 0x31D50AC
	0x031D42E0 BL 0x31D3DD8
	0x031D42E4 ADRP X8, 0xF4B000
	0x031D42E8 LDR X8, [X8 + 0xF18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1209000
	007 Move X22, 0xF4C000
	008 Move W8, [X21+43]
	009 Move X22, [X22+3904]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xF20000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move X0, 0xF4C000
	020 Move X0, [X0+3912]
	021 Call 0x1C17CF4
	022 Move X0, 0xF4C000
	023 Move X0, [X0+3904]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+43], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call Object..ctor, X0
	032 Compare X21, 0
	033 JumpIfEqual {73}
	034 Move W8, 2
	035 Move W9, 1
	036 Move [X21+24], X19
	037 Move [X21+32], X20
	038 Move [X21+40], W8
	039 Move [X21+16], W9
	040 Compare X20, 0
	041 JumpIfEqual {53}
	042 Move X8, 0xF20000
	043 Move X8, [X8+3368]
	044 Move X20, 0xF4C000
	045 Move X0, [X8]
	046 Move X20, [X20+3912]
	047 Call 0x1C17F10
	048 Move X2, [X20]
	049 Move X1, X21
	050 Move X3, X31
	051 Move X20, X0
	052 Call Action`1<Boolean>..ctor, X0, X1, X2
	053 Move W1, W31
	054 Move X2, X20
	055 Call Controller.SendData, X0, X1, X2
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call MonoBehaviour.StartCoroutine, X0, X1
	060 Move W1, 1
	061 Move X2, X20
	062 Call Controller.SendData, X0, X1, X2
	063 Move X1, X0
	064 Move X0, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X2, X31
	070 Move X30, [X31+48]
	071 Call MonoBehaviour.StartCoroutine, X0, X1
	072 Return 
	073 Call 0x1C17F20

Method: System.Collections.IEnumerator SendData(mixpanel.MixpanelStorage/FlushType flushType, System.Action`1<System.Boolean> onComplete)

Disassembly:
	0x031D42F4 LDR X1, [X8]
	0x031D42F8 BL 0x31D3E30
	0x031D42FC BL 0x31D52F0
	0x031D4300 BL 0x31D4FF4
	0x031D4304 ADRP X8, 0xF4C000
	0x031D4308 LDR X8, [X8 + 0x18]
	0x031D430C MOV X2, X0
	0x031D4310 MOV X0, X19
	0x031D4314 LDR X1, [X8]
	0x031D4318 BL 0x31D3E30
	0x031D431C ADRP X8, 0xF24000
	0x031D4320 LDR X8, [X8 + 0x748]
	0x031D4324 LDR X0, [X8]
	0x031D4328 BL 0x1C16F10
	0x031D432C MOV X21, X0
	0x031D4330 BL 0x31D3D04
	0x031D4334 MOV X0, X20
	0x031D4338 BL 0x31D3DD8
	0x031D433C CBZ X21, 0x31D43C0
	0x031D4340 ADRP X8, 0xF4C000
	0x031D4344 LDR X8, [X8 + 0x40]
	0x031D4348 MOV X2, X0
	0x031D434C MOV X0, X21
	0x031D4350 LDR X1, [X8]
	0x031D4354 BL 0x31D3E30
	0x031D4358 ADRP X8, 0xF4C000
	0x031D435C LDR X8, [X8 + 0x28]
	0x031D4360 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1209000
	007 Move X22, 0xF4C000
	008 Move W8, [X21+44]
	009 Move X22, [X22+3920]
	010 Move X19, X2
	011 Move W20, W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xF4C000
	017 Move X0, [X0+3920]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+44], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call Object..ctor, X0
	026 Move [X21+16], W31
	027 Move [X21+40], W20
	028 Move [X21+32], X19
	029 Move X0, X21
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return X0

Method: System.Void CheckCompletion(System.Action`1<System.Boolean> onFlushComplete, ref System.Int32 coroutinesCount, System.Boolean overallSuccess)

Disassembly:
	0x031D438C ADRP X8, 0xF4C000
	0x031D4390 LDR X8, [X8 + 0x38]
	0x031D4394 MOV X2, X0
	0x031D4398 MOV X0, X21
	0x031D439C LDR X1, [X8]
	0x031D43A0 BL 0x31D3E30
	0x031D43A4 MOV X0, X21
	0x031D43A8 MOV W1, W31
	0x031D43AC BL 0x31D559C
	0x031D43B0 LDP X20, X19, [X31 + 0x20]
	0x031D43B4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W8, [X2]
	002 Subtract W8, W8, 1
	003 Move [X2], W8
	004 Compare X1, 0
	005 JumpIfEqual {13}
	006 Compare W8, 0
	007 JumpIfNotEqual {13}
	008 Move X4, [X1+24]
	009 Move X0, [X1+64]
	010 Move X2, [X1+40]
	011 And W1, W3, 1
	012 CallNoReturn X4
	013 Return 

Method: System.Collections.IEnumerator SendHttpEvent(System.String eventName, System.String apiToken, System.String distinctId, System.String properties, System.Boolean updatePeople)

Disassembly:
	0x031D43B8 LDR X30, [X31], #0x30
	0x031D43BC RET
	0x031D43C0 BL 0x1C16F20
	0x031D43C4 STP X30, X23, [X31 - 0x30]!
	0x031D43C8 STP X22, X21, [X31 + 0x10]
	0x031D43CC STP X20, X19, [X31 + 0x20]
	0x031D43D0 ADRP X19, 0x1208000
	0x031D43D4 ADRP X21, 0xF4B000
	0x031D43D8 LDRB W8, [X19 + 0x7A]
	0x031D43DC LDR X21, [X21 + 0xEE0]
	0x031D43E0 TBNZ X8, 0x0, 0x31D4410
	0x031D43E4 ADRP X0, 0xF4B000
	0x031D43E8 LDR X0, [X0 + 0xF60]
	0x031D43EC BL 0x1C16CF4
	0x031D43F0 ADRP X0, 0xF4B000
	0x031D43F4 LDR X0, [X0 + 0xEE0]
	0x031D43F8 BL 0x1C16CF4
	0x031D43FC ADRP X0, 0xF4B000
	0x031D4400 LDR X0, [X0 + 0xF98]
	0x031D4404 BL 0x1C16CF4
	0x031D4408 MOVZ W8, 0x1
	0x031D440C STRB W8, [X19 + 0x7A]
	0x031D4410 LDR X0, [X21]
	0x031D4414 LDR W8, [X0 + 0xE0]
	0x031D4418 CBNZ W8, 0x31D4424
	0x031D441C BL 0x1C16DFC
	0x031D4420 LDR X0, [X21]
	0x031D4424 LDR X8, [X0 + 0xB8]
	0x031D4428 LDR X19, [X8]
	0x031D442C CBZ X19, 0x31D4588
	0x031D4430 ADRP X23, 0xF4B000
	0x031D4434 ADRP X22, 0xF4B000
	0x031D4438 LDR X8, [X19]
	0x031D443C LDR X23, [X23 + 0xF60]
	0x031D4440 LDR X22, [X22 + 0xF98]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x1209000
	010 Move X24, 0xF4C000
	011 Move W8, [X25+45]
	012 Move X24, [X24+3928]
	013 Move W23, W5
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xF4C000
	023 Move X0, [X0+3928]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+45], W8
	027 Move X0, [X24]
	028 And W24, W23, 1
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X23, X0
	032 Call Object..ctor, X0
	033 Move [X23+16], W31
	034 Move [X23+32], X22
	035 Move [X23+40], X21
	036 Move [X23+48], X20
	037 Move [X23+56], X19
	038 Move [X23+64], W24
	039 Move X0, X23
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]
	048 Return X0

Method: System.Void MigrateFrom1To2()

Disassembly:
	0x031D39C8 LDRB W8, [X8 + 0x10]
	0x031D39CC CBZ W8, 0x31D3A1C
	0x031D39D0 ADRP X8, 0xF4C000
	0x031D39D4 LDR X8, [X8 + 0xEC8]
	0x031D39D8 ADRP X20, 0xF20000
	0x031D39DC MOV X1, X19
	0x031D39E0 MOV X2, X31
	0x031D39E4 LDR X0, [X8]
	0x031D39E8 LDR X20, [X20 + 0xA28]
	0x031D39EC BL 0x321B938
	0x031D39F0 LDR X8, [X20]
	0x031D39F4 MOV X19, X0
	0x031D39F8 LDR W9, [X8 + 0xE0]
	0x031D39FC CBNZ W9, 0x31D3A08
	0x031D3A00 MOV X0, X8
	0x031D3A04 BL 0x1C16DFC
	0x031D3A08 MOV X0, X19
	0x031D3A0C LDP X20, X19, [X31 + 0x10]
	0x031D3A10 MOV X1, X31
	0x031D3A14 LDP X30, X21, [X31], #0x20
	0x031D3A18 B 0x3C0649C
	0x031D3A1C LDP X20, X19, [X31 + 0x10]
	0x031D3A20 LDP X30, X21, [X31], #0x20
	0x031D3A24 RET
	0x031D3A28 SUB X31, X31, 0x70
	0x031D3A2C STR X30, [X31 + 0x50]
	0x031D3A30 STP X20, X19, [X31 + 0x60]
	0x031D3A34 ADRP X20, 0x1209000
	0x031D3A38 LDRB W8, [X20 + 0x8C]
	0x031D3A3C MOV X19, X0
	0x031D3A40 TBNZ X8, 0x0, 0x31D3A7C
	0x031D3A44 ADRP X0, 0xF4C000
	0x031D3A48 LDR X0, [X0 + 0xFA0]
	0x031D3A4C BL 0x1C16CF4
	0x031D3A50 ADRP X0, 0xF4C000
	0x031D3A54 LDR X0, [X0 + 0xFA8]
	0x031D3A58 BL 0x1C16CF4
	0x031D3A5C ADRP X0, 0xF4C000
	0x031D3A60 LDR X0, [X0 + 0xFB0]
	0x031D3A64 BL 0x1C16CF4
	0x031D3A68 ADRP X0, 0xF4C000
	0x031D3A6C LDR X0, [X0 + 0xFB8]
	0x031D3A70 BL 0x1C16CF4
	0x031D3A74 MOVZ W8, 0x1
	0x031D3A78 STRB W8, [X20 + 0x8C]
	0x031D3A7C LDR W8, [X19 + 0x10]
	0x031D3A80 CMP W8, 0x6
	0x031D3A84 B.EQ 0x31D3AC8
	0x031D3A88 CMP W8, 0x5
	0x031D3A8C B.NE 0x31D3B20
	0x031D3A90 LDR X0, [X19 + 0x30]
	0x031D3A94 CBZ X0, 0x31D3B1C
	0x031D3A98 ADRP X8, 0xF4C000
	0x031D3A9C LDR X8, [X8 + 0xFB8]
	0x031D3AA0 LDR X1, [X8]
	0x031D3AA4 ADD X8, X31, 0x28
	0x031D3AA8 BL 0x301CB58
	0x031D3AAC ADRP X9, 0xF4C000
	0x031D3AB0 LDUR V0, [X31 + 0x28]
	0x031D3AB4 LDR X8, [X31 + 0x38]
	0x031D3AB8 LDR X9, [X9 + 0xFB0]
	0x031D3ABC STR V0, [X31]
	0x031D3AC0 STR X8, [X31 + 0x10]
	0x031D3AC4 B 0x31D3B00
	0x031D3AC8 LDR X0, [X19 + 0x40]
	0x031D3ACC CBZ X0, 0x31D3B1C
	0x031D3AD0 ADRP X8, 0xF4C000
	0x031D3AD4 LDR X8, [X8 + 0xFA0]
	0x031D3AD8 LDR X1, [X8]
	0x031D3ADC ADD X8, X31, 0x28
	0x031D3AE0 BL 0x2AA54BC
	0x031D3AE4 ADRP X9, 0xF4C000
	0x031D3AE8 LDUR V0, [X31 + 0x28]
	0x031D3AEC LDUR V1, [X31 + 0x38]
	0x031D3AF0 LDR X8, [X31 + 0x48]
	0x031D3AF4 LDR X9, [X9 + 0xFA8]
	0x031D3AF8 STP V0, V1, [X31]
	0x031D3AFC STR X8, [X31 + 0x20]
	0x031D3B00 LDR X0, [X9]
	0x031D3B04 ADD X1, X31, 0x0
	0x031D3B08 BL 0x1C16E04
	0x031D3B0C LDP X20, X19, [X31 + 0x60]
	0x031D3B10 LDR X30, [X31 + 0x50]
	0x031D3B14 ADD X31, X31, 0x70
	0x031D3B18 RET
	0x031D3B1C BL 0x1C16F20
	0x031D3B20 ADRP X0, 0xF28000
	0x031D3B24 LDR X0, [X0 + 0x760]
	0x031D3B28 BL 0x1C16D08
	0x031D3B2C BL 0x1C16F10
	0x031D3B30 MOV X1, X31
	0x031D3B34 MOV X19, X0
	0x031D3B38 BL 0x3315FB8
	0x031D3B3C ADRP X0, 0xF4C000
	0x031D3B40 LDR X0, [X0 + 0xFC0]
	0x031D3B44 BL 0x1C16D08
	0x031D3B48 MOV X1, X0
	0x031D3B4C MOV X0, X19
	0x031D3B50 BL 0x1C16DEC
	0x031D3B54 STP X30, X21, [X31 - 0x20]!
	0x031D3B58 STP X20, X19, [X31 + 0x10]
	0x031D3B5C ADRP X21, 0x1209000
	0x031D3B60 LDRB W8, [X21 + 0x4A]
	0x031D3B64 MOV X19, X1
	0x031D3B68 MOV X20, X0
	0x031D3B6C TBNZ X8, 0x0, 0x31D3B84
	0x031D3B70 ADRP X0, 0xF4C000
	0x031D3B74 LDR X0, [X0 + 0xEE0]
	0x031D3B78 BL 0x1C16CF4
	0x031D3B7C MOVZ W8, 0x1
	0x031D3B80 STRB W8, [X21 + 0x4A]
	0x031D3B84 BL 0x31D77D8
	0x031D3B88 TBZ X0, 0x0, 0x31D3BCC
	0x031D3B8C ADRP X8, 0xF4C000
	0x031D3B90 LDR X8, [X8 + 0xEE0]
	0x031D3B94 LDR X0, [X8]
	0x031D3B98 LDR W8, [X0 + 0xE0]
	0x031D3B9C CBNZ W8, 0x31D3BA4
	0x031D3BA0 BL 0x1C16DFC
	0x031D3BA4 BL 0x31D4A64
	0x031D3BA8 CBZ X0, 0x31D3BD8
	0x031D3BAC MOV X1, X20
	0x031D3BB0 MOV X2, X19
	0x031D3BB4 MOV X21, X0
	0x031D3BB8 BL 0x31D3E30
	0x031D3BBC LDP X20, X19, [X31 + 0x10]
	0x031D3BC0 MOV X0, X21
	0x031D3BC4 LDP X30, X21, [X31], #0x20
	0x031D3BC8 B 0x31D8098
	0x031D3BCC LDP X20, X19, [X31 + 0x10]
	0x031D3BD0 LDP X30, X21, [X31], #0x20
	0x031D3BD4 RET
	0x031D3BD8 BL 0x1C16F20
	0x031D3BDC STP X30, X21, [X31 - 0x20]!
	0x031D3BE0 STP X20, X19, [X31 + 0x10]
	0x031D3BE4 ADRP X21, 0x1209000
	0x031D3BE8 ADRP X19, 0xF4C000
	0x031D3BEC LDRB W8, [X21 + 0x6D]
	0x031D3BF0 LDR X19, [X19 + 0xEE0]
	0x031D3BF4 MOV W20, W0
	0x031D3BF8 TBNZ X8, 0x0, 0x31D3C34
	0x031D3BFC ADRP X0, 0xF29000
	0x031D3C00 LDR X0, [X0 + 0x9E8]
	0x031D3C04 BL 0x1C16CF4
	0x031D3C08 ADRP X0, 0xF4C000
	0x031D3C0C LDR X0, [X0 + 0xF60]
	0x031D3C10 BL 0x1C16CF4
	0x031D3C14 ADRP X0, 0xF4C000
	0x031D3C18 LDR X0, [X0 + 0xEE0]
	0x031D3C1C BL 0x1C16CF4
	0x031D3C20 ADRP X0, 0xF4C000
	0x031D3C24 LDR X0, [X0 + 0xF68]
	0x031D3C28 BL 0x1C16CF4
	0x031D3C2C MOVZ W8, 0x1
	0x031D3C30 STRB W8, [X21 + 0x6D]
	0x031D3C34 LDR X0, [X19]
	0x031D3C38 ADRP X21, 0xF29000
	0x031D3C3C LDR W8, [X0 + 0xE0]
	0x031D3C40 LDR X21, [X21 + 0x9E8]
	0x031D3C44 CBNZ W8, 0x31D3C50
	0x031D3C48 BL 0x1C16DFC
	0x031D3C4C LDR X0, [X19]
	0x031D3C50 LDR X8, [X21]
	0x031D3C54 LDR X9, [X0 + 0xB8]
	0x031D3C58 LDR W10, [X8 + 0xE0]
	0x031D3C5C LDR X19, [X9]
	0x031D3C60 CBNZ W10, 0x31D3C6C
	0x031D3C64 MOV X0, X8
	0x031D3C68 BL 0x1C16DFC
	0x031D3C6C AND W0, W20, 0x1
	0x031D3C70 MOV X1, X31
	0x031D3C74 BL 0x331830C
	0x031D3C78 CBZ X19, 0x31D3D00
	0x031D3C7C ADRP X9, 0xF4C000
	0x031D3C80 ADRP X10, 0xF4C000
	0x031D3C84 LDR X8, [X19]
	0x031D3C88 LDR X9, [X9 + 0xF60]
	0x031D3C8C LDR X10, [X10 + 0xF68]
	0x031D3C90 MOV W20, W0
	0x031D3C94 LDR X1, [X9]
	0x031D3C98 LDRH W9, [X8 + 0x12E]
	0x031D3C9C LDR X21, [X10]
	0x031D3CA0 CBZ X9, 0x31D3CC4
	0x031D3CA4 LDR X10, [X8 + 0xB0]
	0x031D3CA8 ADD X10, X10, 0x8
	0x031D3CAC LDUR X11, [X10 - 0x8]
	0x031D3CB0 CMP X11, X1
	0x031D3CB4 B.EQ 0x31D3CD4
	0x031D3CB8 SUBS X9, X9, 0x1
	0x031D3CBC ADD X10, X10, 0x10
	0x031D3CC0 B.NE 0x31D3CAC
	0x031D3CC4 MOVZ W2, 0x6
	0x031D3CC8 MOV X0, X19
	0x031D3CCC BL 0x1C5C788
	0x031D3CD0 B 0x31D3CE4
	0x031D3CD4 LDR W9, [X10]
	0x031D3CD8 ADD W9, W9, 0x6
	0x031D3CDC ADD X8, X8, W9, 0x4, SXTW
	0x031D3CE0 ADD X0, X8, 0x138
	0x031D3CE4 LDP X4, X3, [X0]
	0x031D3CE8 MOV X0, X19
	0x031D3CEC MOV W2, W20
	0x031D3CF0 LDP X20, X19, [X31 + 0x10]
	0x031D3CF4 MOV X1, X21
	0x031D3CF8 LDP X30, X21, [X31], #0x20
	0x031D3CFC BR X4
	0x031D3D00 BL 0x1C16F20
	0x031D3D04 STR X30, [X31 - 0x40]!
	0x031D3D08 STP X24, X23, [X31 + 0x10]
	0x031D3D0C STP X22, X21, [X31 + 0x20]
	0x031D3D10 STP X20, X19, [X31 + 0x30]
	0x031D3D14 ADRP X24, 0x1209000
	0x031D3D18 ADRP X23, 0xF4C000
	0x031D3D1C ADRP X20, 0xF4C000
	0x031D3D20 ADRP X22, 0xF4C000
	0x031D3D24 ADRP X21, 0xF4C000
	0x031D3D28 LDRB W8, [X24 + 0xAD]
	0x031D3D2C LDR X23, [X23 + 0xFC8]
	0x031D3D30 LDR X20, [X20 + 0xFD0]
	0x031D3D34 LDR X22, [X22 + 0xFD8]
	0x031D3D38 LDR X21, [X21 + 0xFE0]
	0x031D3D3C MOV X19, X0
	0x031D3D40 TBNZ X8, 0x0, 0x31D3D7C
	0x031D3D44 ADRP X0, 0xF4C000
	0x031D3D48 LDR X0, [X0 + 0xFE0]
	0x031D3D4C BL 0x1C16CF4
	0x031D3D50 ADRP X0, 0xF4C000
	0x031D3D54 LDR X0, [X0 + 0xFD8]
	0x031D3D58 BL 0x1C16CF4
	0x031D3D5C ADRP X0, 0xF4C000
	0x031D3D60 LDR X0, [X0 + 0xFD0]
	0x031D3D64 BL 0x1C16CF4
	0x031D3D68 ADRP X0, 0xF4C000
	0x031D3D6C LDR X0, [X0 + 0xFC8]
	0x031D3D70 BL 0x1C16CF4
	0x031D3D74 MOVZ W8, 0x1
	0x031D3D78 STRB W8, [X24 + 0xAD]
	0x031D3D7C MOVZ W8, 0x6
	0x031D3D80 STR W8, [X19 + 0x10]
	0x031D3D84 LDR X0, [X23]
	0x031D3D88 BL 0x1C16F10
	0x031D3D8C LDR X2, [X20]
	0x031D3D90 MOVZ W1, 0x32
	0x031D3D94 MOV X20, X0
	0x031D3D98 BL 0x301B830
	0x031D3D9C STR X20, [X19 + 0x30]
	0x031D3DA0 LDR X0, [X22]
	0x031D3DA4 BL 0x1C16F10
	0x031D3DA8 LDR X2, [X21]
	0x031D3DAC MOVZ W1, 0x5
	0x031D3DB0 MOV X20, X0
	0x031D3DB4 BL 0x2AA481C
	0x031D3DB8 STR X20, [X19 + 0x40]
	0x031D3DBC MOV X0, X19
	0x031D3DC0 LDP X20, X19, [X31 + 0x30]
	0x031D3DC4 LDP X22, X21, [X31 + 0x20]
	0x031D3DC8 LDP X24, X23, [X31 + 0x10]
	0x031D3DCC MOV X1, X31
	0x031D3DD0 LDR X30, [X31], #0x40
	0x031D3DD4 B 0x33BDD8C
	0x031D3DD8 STP X30, X21, [X31 - 0x20]!
	0x031D3DDC STP X20, X19, [X31 + 0x10]
	0x031D3DE0 ADRP X20, 0x1209000
	0x031D3DE4 ADRP X21, 0xF25000
	0x031D3DE8 LDRB W8, [X20 + 0xC4]
	0x031D3DEC LDR X21, [X21 + 0x748]
	0x031D3DF0 MOV X19, X0
	0x031D3DF4 TBNZ X8, 0x0, 0x31D3E0C
	0x031D3DF8 ADRP X0, 0xF25000
	0x031D3DFC LDR X0, [X0 + 0x748]
	0x031D3E00 BL 0x1C16CF4
	0x031D3E04 MOVZ W8, 0x1
	0x031D3E08 STRB W8, [X20 + 0xC4]
	0x031D3E0C LDR X0, [X21]
	0x031D3E10 BL 0x1C16F10
	0x031D3E14 MOV X1, X19
	0x031D3E18 MOV X20, X0
	0x031D3E1C BL 0x31DC5D8
	0x031D3E20 MOV X0, X20
	0x031D3E24 LDP X20, X19, [X31 + 0x10]
	0x031D3E28 LDP X30, X21, [X31], #0x20
	0x031D3E2C RET
	0x031D3E30 STR X30, [X31 - 0x30]!
	0x031D3E34 STP X22, X21, [X31 + 0x10]
	0x031D3E38 STP X20, X19, [X31 + 0x20]
	0x031D3E3C ADRP X22, 0x1209000
	0x031D3E40 LDRB W8, [X22 + 0x8A]
	0x031D3E44 MOV X19, X2
	0x031D3E48 MOV X20, X1
	0x031D3E4C MOV X21, X0
	0x031D3E50 TBNZ X8, 0x0, 0x31D3E68
	0x031D3E54 ADRP X0, 0xF4C000
	0x031D3E58 LDR X0, [X0 + 0xF88]
	0x031D3E5C BL 0x1C16CF4
	0x031D3E60 MOVZ W8, 0x1
	0x031D3E64 STRB W8, [X22 + 0x8A]
	0x031D3E68 ADRP X8, 0xFFFFFFFFFD91B000
	0x031D3E6C LDR V0, [X8 + 0x380]
	0x031D3E70 LDR X0, [X21 + 0x40]
	0x031D3E74 STR D0, [X21 + 0x10]
	0x031D3E78 CBZ X0, 0x31D3EA0
	0x031D3E7C ADRP X8, 0xF4C000
	0x031D3E80 LDR X8, [X8 + 0xF88]
	0x031D3E84 MOV X1, X20
	0x031D3E88 MOV X2, X19
	0x031D3E8C LDP X20, X19, [X31 + 0x20]
	0x031D3E90 LDR X3, [X8]
	0x031D3E94 LDP X22, X21, [X31 + 0x10]
	0x031D3E98 LDR X30, [X31], #0x30
	0x031D3E9C B 0x2AA5084
	0x031D3EA0 BL 0x1C16F20
	0x031D3EA4 STR X30, [X31 - 0x30]!
	0x031D3EA8 STP X22, X21, [X31 + 0x10]
	0x031D3EAC STP X20, X19, [X31 + 0x20]
	0x031D3EB0 ADRP X22, 0x1209000
	0x031D3EB4 LDRB W8, [X22 + 0x91]
	0x031D3EB8 MOV X19, X2
	0x031D3EBC MOV X20, X1
	0x031D3EC0 MOV X21, X0
	0x031D3EC4 TBNZ X8, 0x0, 0x31D3EDC
	0x031D3EC8 ADRP X0, 0xF4C000
	0x031D3ECC LDR X0, [X0 + 0xFE8]
	0x031D3ED0 BL 0x1C16CF4
	0x031D3ED4 MOVZ W8, 0x1
	0x031D3ED8 STRB W8, [X22 + 0x91]
	0x031D3EDC ADRP X8, 0xFFFFFFFFFD91B000
	0x031D3EE0 LDR V0, [X8 + 0x380]
	0x031D3EE4 LDR X0, [X21 + 0x40]
	0x031D3EE8 STR D0, [X21 + 0x10]
	0x031D3EEC CBZ X0, 0x31D3F14
	0x031D3EF0 ADRP X8, 0xF4C000
	0x031D3EF4 LDR X8, [X8 + 0xFE8]
	0x031D3EF8 MOV X1, X20
	0x031D3EFC MOV X2, X19
	0x031D3F00 LDP X20, X19, [X31 + 0x20]
	0x031D3F04 LDR X3, [X8]
	0x031D3F08 LDP X22, X21, [X31 + 0x10]
	0x031D3F0C LDR X30, [X31], #0x30
	0x031D3F10 B 0x2AA5098
	0x031D3F14 BL 0x1C16F20
	0x031D3F18 STP X30, X21, [X31 - 0x20]!
	0x031D3F1C STP X20, X19, [X31 + 0x10]
	0x031D3F20 ADRP X20, 0x1209000
	0x031D3F24 ADRP X21, 0xF25000
	0x031D3F28 LDRB W8, [X20 + 0xC7]
	0x031D3F2C LDR X21, [X21 + 0x748]
	0x031D3F30 MOV W19, W0
	0x031D3F34 TBNZ X8, 0x0, 0x31D3F4C
	0x031D3F38 ADRP X0, 0xF25000
	0x031D3F3C LDR X0, [X0 + 0x748]
	0x031D3F40 BL 0x1C16CF4
	0x031D3F44 MOVZ W8, 0x1
	0x031D3F48 STRB W8, [X20 + 0xC7]
	0x031D3F4C LDR X0, [X21]
	0x031D3F50 BL 0x1C16F10
	0x031D3F54 AND W1, W19, 0x1
	0x031D3F58 MOV X20, X0
	0x031D3F5C BL 0x31DC6C4
	0x031D3F60 MOV X0, X20
	0x031D3F64 LDP X20, X19, [X31 + 0x10]
	0x031D3F68 LDP X30, X21, [X31], #0x20
	0x031D3F6C RET
	0x031D3F70 STP X30, X21, [X31 - 0x20]!
	0x031D3F74 STP X20, X19, [X31 + 0x10]
	0x031D3F78 ADRP X20, 0x1209000
	0x031D3F7C ADRP X19, 0xF20000
	0x031D3F80 LDRB W8, [X20 + 0x15B]
	0x031D3F84 LDR X19, [X19 + 0x970]
	0x031D3F88 TBNZ X8, 0x0, 0x31D3FC4
	0x031D3F8C ADRP X0, 0xF20000
	0x031D3F90 LDR X0, [X0 + 0x970]
	0x031D3F94 BL 0x1C16CF4
	0x031D3F98 ADRP X0, 0xF4C000
	0x031D3F9C LDR X0, [X0 + 0xFF0]
	0x031D3FA0 BL 0x1C16CF4
	0x031D3FA4 ADRP X0, 0xF4C000
	0x031D3FA8 LDR X0, [X0 + 0xFF8]
	0x031D3FAC BL 0x1C16CF4
	0x031D3FB0 ADRP X0, 0xF4D000
	0x031D3FB4 LDR X0, [X0]
	0x031D3FB8 BL 0x1C16CF4
	0x031D3FBC MOVZ W8, 0x1
	0x031D3FC0 STRB W8, [X20 + 0x15B]
	0x031D3FC4 LDR X0, [X19]
	0x031D3FC8 ADRP X20, 0xF4C000
	0x031D3FCC ADRP X21, 0xF4D000
	0x031D3FD0 ADRP X19, 0xF4C000
	0x031D3FD4 LDR W8, [X0 + 0xE0]
	0x031D3FD8 LDR X20, [X20 + 0xFF0]
	0x031D3FDC LDR X21, [X21]
	0x031D3FE0 LDR X19, [X19 + 0xFF8]
	0x031D3FE4 CBNZ W8, 0x31D3FEC
	0x031D3FE8 BL 0x1C16DFC
	0x031D3FEC MOV X0, X31
	0x031D3FF0 BL 0x3C01B9C
	0x031D3FF4 CMP W0, 0x1
	0x031D3FF8 CSEL X8, X21, X20, EQ
	0x031D3FFC CMP W0, 0x2
	0x031D4000 CSEL X8, X19, X8, EQ
	0x031D4004 LDR X0, [X8]
	0x031D4008 LDP X20, X19, [X31 + 0x10]
	0x031D400C LDP X30, X21, [X31], #0x20
	0x031D4010 RET
	0x031D4014 STR D8, [X31 - 0x20]!
	0x031D4018 STR X30, [X31 + 0x8]
	0x031D401C STP X20, X19, [X31 + 0x10]
	0x031D4020 ADRP X20, 0x1208000
	0x031D4024 ADRP X19, 0xF47000
	0x031D4028 LDRB W8, [X20 + 0xCA]
	0x031D402C LDR X19, [X19 + 0x5F0]
	0x031D4030 MOV V8.16B, V0.16B
	0x031D4034 TBNZ X8, 0x0, 0x31D4058
	0x031D4038 ADRP X0, 0xF47000
	0x031D403C LDR X0, [X0 + 0x5F0]
	0x031D4040 BL 0x1C16CF4
	0x031D4044 ADRP X0, 0xF24000
	0x031D4048 LDR X0, [X0 + 0x748]
	0x031D404C BL 0x1C16CF4
	0x031D4050 MOVZ W8, 0x1
	0x031D4054 STRB W8, [X20 + 0xCA]
	0x031D4058 LDR X0, [X19]
	0x031D405C ADRP X19, 0xF24000
	0x031D4060 LDR W8, [X0 + 0xE0]
	0x031D4064 LDR X19, [X19 + 0x748]
	0x031D4068 CBNZ W8, 0x31D4070
	0x031D406C BL 0x1C16DFC
	0x031D4070 MOV V0.16B, V8.16B
	0x031D4074 MOV X0, X31
	0x031D4078 BL 0x33D8F2C
	0x031D407C MOV X2, X31
	0x031D4080 BL 0x33D90E0
	0x031D4084 LDR X0, [X19]
	0x031D4088 MOV V8.16B, V0.16B
	0x031D408C BL 0x1C16F10
	0x031D4090 MOV V0.16B, V8.16B
	0x031D4094 MOV X19, X0
	0x031D4098 BL 0x31DC7B4
	0x031D409C MOV X0, X19
	0x031D40A0 LDP X20, X19, [X31 + 0x10]
	0x031D40A4 LDR X30, [X31 + 0x8]
	0x031D40A8 LDR V8, [X31], #0x20
	0x031D40AC RET
	0x031D40B0 STR X30, [X31 - 0x30]!
	0x031D40B4 STP X22, X21, [X31 + 0x10]
	0x031D40B8 STP X20, X19, [X31 + 0x20]
	0x031D40BC ADRP X22, 0x1208000
	0x031D40C0 ADRP X21, 0xF4B000
	0x031D40C4 LDRB W8, [X22 + 0x31]
	0x031D40C8 LDR X21, [X21 + 0xEE0]
	0x031D40CC MOV X19, X1
	0x031D40D0 MOV X20, X0
	0x031D40D4 TBNZ X8, 0x0, 0x31D4170
	0x031D40D8 ADRP X0, 0xF4B000
	0x031D40DC LDR X0, [X0 + 0xED0]
	0x031D40E0 BL 0x1C16CF4
	0x031D40E4 ADRP X0, 0xF4B000
	0x031D40E8 LDR X0, [X0 + 0xEE0]
	0x031D40EC BL 0x1C16CF4
	0x031D40F0 ADRP X0, 0xF24000
	0x031D40F4 LDR X0, [X0 + 0x748]
	0x031D40F8 BL 0x1C16CF4
	0x031D40FC ADRP X0, 0xF4C000
	0x031D4100 LDR X0, [X0 + 0x8]
	0x031D4104 BL 0x1C16CF4
	0x031D4108 ADRP X0, 0xF4C000
	0x031D410C LDR X0, [X0 + 0x10]
	0x031D4110 BL 0x1C16CF4
	0x031D4114 ADRP X0, 0xF4C000
	0x031D4118 LDR X0, [X0 + 0x18]
	0x031D411C BL 0x1C16CF4
	0x031D4120 ADRP X0, 0xF4C000
	0x031D4124 LDR X0, [X0 + 0x20]
	0x031D4128 BL 0x1C16CF4
	0x031D412C ADRP X0, 0xF4B000
	0x031D4130 LDR X0, [X0 + 0xF18]
	0x031D4134 BL 0x1C16CF4
	0x031D4138 ADRP X0, 0xF4C000
	0x031D413C LDR X0, [X0 + 0x28]
	0x031D4140 BL 0x1C16CF4
	0x031D4144 ADRP X0, 0xF4C000
	0x031D4148 LDR X0, [X0 + 0x30]
	0x031D414C BL 0x1C16CF4
	0x031D4150 ADRP X0, 0xF4C000
	0x031D4154 LDR X0, [X0 + 0x38]
	0x031D4158 BL 0x1C16CF4
	0x031D415C ADRP X0, 0xF4C000
	0x031D4160 LDR X0, [X0 + 0x40]
	0x031D4164 BL 0x1C16CF4
	0x031D4168 MOVZ W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x120A000
	011 Move X24, 0xF4D000
	012 Move W8, [X19+46]
	013 Move X24, [X24+3808]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0xF21000
	019 Move X0, [X0+2416]
	020 Call 0x1C17CF4
	021 Move X0, 0xF21000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0xF21000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0xF4D000
	028 Move X0, [X0+3816]
	029 Call 0x1C17CF4
	030 Move X0, 0xF4D000
	031 Move X0, [X0+3824]
	032 Call 0x1C17CF4
	033 Move X0, 0xF4D000
	034 Move X0, [X0+3832]
	035 Call 0x1C17CF4
	036 Move X0, 0xF4D000
	037 Move X0, [X0+3808]
	038 Call 0x1C17CF4
	039 Move X0, 0xF4D000
	040 Move X0, [X0+3840]
	041 Call 0x1C17CF4
	042 Move X0, 0xF4D000
	043 Move X0, [X0+3848]
	044 Call 0x1C17CF4
	045 Move X0, 0xF4D000
	046 Move X0, [X0+3856]
	047 Call 0x1C17CF4
	048 Move X0, 0xF4D000
	049 Move X0, [X0+3864]
	050 Call 0x1C17CF4
	051 Move X0, 0xF4D000
	052 Move X0, [X0+3872]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+46], W8
	056 Move X0, [X24]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Call MixpanelStorage.get_HasMigratedFrom1To2
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {76}
	066 Move X20, [X31+64]
	067 Move X19, [X31+72]
	068 Move X22, [X31+48]
	069 Move X21, [X31+56]
	070 Move X24, [X31+32]
	071 Move X23, [X31+40]
	072 Move X26, [X31+16]
	073 Move X25, [X31+24]
	074 Move X30, [X31+80]
	075 Return 
	076 Move X22, 0xF21000
	077 Move X22, [X22+2416]
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X31
	084 Call Application.get_persistentDataPath
	085 Move X8, 0xF4D000
	086 Move X8, [X8+3856]
	087 Move X2, X31
	088 Move X1, [X8]
	089 Call String.Concat, X0, X1
	090 Move X19, X0
	091 Move X1, X31
	092 Call File.Exists, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {167}
	097 Move X0, X19
	098 Move X1, X31
	099 Call File.ReadAllText, X0
	100 Call Value.Deserialize, X0
	101 Move X20, X0
	102 Compare X0, 0
	103 JumpIfEqual {347}
	104 Move X8, 0xF4D000
	105 Move X8, [X8+3864]
	106 Move X21, [X8]
	107 Move X0, X20
	108 Move X1, X21
	109 Call Value.ContainsKey, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {135}
	114 Move X0, X20
	115 Move X1, X21
	116 Call Value.get_Item, X0, X1
	117 Compare X0, 0
	118 JumpIfEqual {352}
	119 Move W8, [X0+16]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X20
	122 Move X1, X21
	123 Call Value.get_Item, X0, X1
	124 Compare X0, 0
	125 JumpIfEqual {354}
	126 Move X8, [X24]
	127 Move X21, [X0+24]
	128 Move W9, [X8+224]
	129 Compare W9, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X8
	132 Call 0x1C17DFC
	133 Move X0, X21
	134 Call MixpanelStorage.set_DistinctId, X0
	135 Move X8, 0xF4D000
	136 Move X8, [X8+3840]
	137 Move X21, [X8]
	138 Move X0, X20
	139 Move X1, X21
	140 Call Value.ContainsKey, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {167}
	145 Move X0, X20
	146 Move X1, X21
	147 Call Value.get_Item, X0, X1
	148 Compare X0, 0
	149 JumpIfEqual {353}
	150 Move W8, [X0+16]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X20
	153 Move X1, X21
	154 Call Value.get_Item, X0, X1
	155 Compare X0, 0
	156 JumpIfEqual {355}
	157 Move X8, [X24]
	158 Move W20, [X0+32]
	159 Move W9, [X8+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X8
	163 Call 0x1C17DFC
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CSET not yet implemented."
	166 Call MixpanelStorage.set_IsTracking, X0
	167 Move X0, X19
	168 Move X1, X31
	169 Call File.Delete, X0
	170 Move X0, [X22]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X31
	176 Call Application.get_persistentDataPath
	177 Move X8, 0xF4D000
	178 Move X8, [X8+3848]
	179 Move X2, X31
	180 Move X1, [X8]
	181 Call String.Concat, X0, X1
	182 Move X19, X0
	183 Move X1, X31
	184 Call File.Exists, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {311}
	189 Move X0, X19
	190 Move X1, X31
	191 Call File.ReadAllText, X0
	192 Call Value.Deserialize, X0
	193 Compare X0, 0
	194 JumpIfEqual {348}
	195 Call Value.GetEnumerator, X0
	196 Move X21, X0
	197 Compare X0, 0
	198 JumpIfEqual {349}
	199 Move X23, 0xF21000
	200 Move X25, 0xF4D000
	201 Move X26, 0xF4D000
	202 Move X23, [X23+3608]
	203 Move X25, [X25+3832]
	204 Move X26, [X26+3872]
	205 Move X8, [X21]
	206 Move X1, [X23]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X21
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X21
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {275}
	230 Move X8, [X21]
	231 Move X1, [X23]
	232 NotImplemented "Instruction LDRH not yet implemented."
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move W2, 1
	242 Move X0, X21
	243 Call 0x1C5D788
	244 Move W9, [X10]
	245 Add W9, W9, 1
	246 Add X8, X8, W9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X21
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Compare X0, 0
	253 JumpIfEqual {344}
	254 Move X8, [X0]
	255 Move X1, [X25]
	256 Move X8, [X8+64]
	257 Move X9, [X1+64]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Call 0x1C17E08
	260 Move X20, [X0]
	261 Compare X20, 0
	262 JumpIfEqual {345}
	263 Move X22, [X0+8]
	264 Move X1, [X26]
	265 Move X0, X20
	266 Move X2, X31
	267 Call String.StartsWith, X0, X1
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfEqual {205}
	272 Move X0, X20
	273 Move X1, X22
	274 Call Mixpanel.Register, X0, X1
	275 Move X20, X31
	276 Move W22, 7
	277 Move X23, 0xF21000
	278 Move X23, [X23+3584]
	279 Move X1, [X23]
	280 Move X0, X21
	281 Call 0x1C17E00
	282 Move X21, X0
	283 Compare X0, 0
	284 JumpIfEqual {306}
	285 Move X8, [X21]
	286 Move X1, [X23]
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Compare X9, 0
	289 JumpIfEqual {296}
	290 Move X10, [X8+176]
	291 Add X10, X10, 8
	292 NotImplemented "Instruction LDUR not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract X9, X9, 1
	295 Add X10, X10, 16
	296 Move X0, X21
	297 Move W2, W31
	298 Call 0x1C5D788
	299 NotImplemented "Instruction LDRSW not yet implemented."
	300 Add X8, X8, X9
	301 Add X0, X8, 312
	302 Move X8, [X0]
	303 Move X1, [X0+8]
	304 Move X0, X21
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Compare X20, 0
	307 JumpIfNotEqual {350}
	308 Compare W22, 0
	309 JumpIfEqual {311}
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X0, X19
	312 Move X1, X31
	313 Call File.Delete, X0
	314 Move X0, [X24]
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X20, [X31+64]
	320 Move X19, [X31+72]
	321 Move X22, [X31+48]
	322 Move X21, [X31+56]
	323 Move X24, [X31+32]
	324 Move X23, [X31+40]
	325 Move X26, [X31+16]
	326 Move X25, [X31+24]
	327 Move W0, 1
	328 Move X30, [X31+80]
	329 Call MixpanelStorage.set_HasMigratedFrom1To2, X0
	330 Return 
	331 Move X0, X19
	332 Move X20, [X31+64]
	333 Move X19, [X31+72]
	334 Move X22, [X31+48]
	335 Move X21, [X31+56]
	336 Move X24, [X31+32]
	337 Move X23, [X31+40]
	338 Move X26, [X31+16]
	339 Move X25, [X31+24]
	340 Move X1, X31
	341 Move X30, [X31+80]
	342 Call File.Delete, X0
	343 Return 
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Call 0x1C181E0
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Move X0, X20
	351 Call 0x1C17F18
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Move X23, X0
	357 Move X23, X0
	358 Move W22, W1
	359 Move X23, X0
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move X0, X23
	362 Call 0x3EB2AD0
	363 Move X20, X0
	364 Move X0, 0xF21000
	365 Move X0, [X0+2000]
	366 Call 0x1C17D08
	367 Move X8, [X20]
	368 Move X1, [X8]
	369 Call 0x1C18270
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfNotEqual {379}
	374 Call 0x3EB2AE0
	375 Move X0, 0xF4D000
	376 Move X0, [X0+3880]
	377 Call 0x1C17D08
	378 Call Mixpanel.LogError, X0
	379 Move W0, 8
	380 Call 0x3EB2AF0
	381 Move X8, [X20]
	382 Move [X0], X8
	383 Move X1, 0xCE2000
	384 Add X1, X1, 3672
	385 Move X2, X31
	386 Call 0x3EB2B00
	387 Move X23, X0
	388 Move X20, X1
	389 Move X23, X0
	390 Call 0x3EB2AE0
	391 Move W1, W20
	392 Move W8, 1
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X0, X23
	395 Call 0x3EB2AD0
	396 Move X20, [X0]
	397 Call 0x3EB2AE0
	398 Move X0, X19
	399 Move X1, X31
	400 Call File.Delete, X0
	401 Compare X20, 0
	402 JumpIfEqual {170}
	403 Move X20, X31
	404 Move X23, X0
	405 Move X0, X19
	406 Move X1, X31
	407 Call File.Delete, X0
	408 Compare X20, 0
	409 JumpIfEqual {509}
	410 Move X0, X20
	411 Call 0x1C17F18
	412 Move X22, X1
	413 Move X23, X0
	414 Move X23, X0
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X0, X23
	417 Call 0x3EB2AD0
	418 Move X20, [X0]
	419 Call 0x3EB2AE0
	420 Move W22, W31
	421 Move X20, X31
	422 Move X25, 0xF21000
	423 Move X25, [X25+3584]
	424 Move W22, W1
	425 Move X1, [X25]
	426 Move X0, X21
	427 Call 0x1C17E00
	428 Move X21, X0
	429 Compare X0, 0
	430 JumpIfEqual {452}
	431 Move X8, [X21]
	432 Move X1, [X25]
	433 NotImplemented "Instruction LDRH not yet implemented."
	434 Compare X9, 0
	435 JumpIfEqual {442}
	436 Move X10, [X8+176]
	437 Add X10, X10, 8
	438 NotImplemented "Instruction LDUR not yet implemented."
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Subtract X9, X9, 1
	441 Add X10, X10, 16
	442 Move X0, X21
	443 Move W2, W31
	444 Call 0x1C5D788
	445 NotImplemented "Instruction LDRSW not yet implemented."
	446 Add X8, X8, X9
	447 Add X0, X8, 312
	448 Move X8, [X0]
	449 Move X1, [X0+8]
	450 Move X0, X21
	451 NotImplemented "Instruction BLR not yet implemented."
	452 Compare X20, 0
	453 JumpIfNotEqual {473}
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move X0, X23
	456 Call 0x3EB2AD0
	457 Move X20, X0
	458 Move X0, 0xF20000
	459 Move X0, [X0+2000]
	460 Call 0x1C17D08
	461 Move X8, [X20]
	462 Move X1, [X8]
	463 Call 0x1C18270
	464 Move TEMP, X0
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfNotEqual {475}
	468 Call 0x3EB2AE0
	469 Move X0, 0xF4C000
	470 Move X0, [X0+3888]
	471 Call 0x1C17D08
	472 Call Mixpanel.LogError, X0
	473 Move X0, X20
	474 Call 0x1C17F18
	475 Move W0, 8
	476 Call 0x3EB2AF0
	477 Move X8, [X20]
	478 Move [X0], X8
	479 Move X1, 0xCE1000
	480 Add X1, X1, 3672
	481 Move X2, X31
	482 Call 0x3EB2B00
	483 Move X23, X0
	484 Move X23, X0
	485 Move W22, W1
	486 Move X22, X1
	487 Move X23, X0
	488 Call 0x3EB2AE0
	489 Move W8, 1
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move X0, X23
	492 Call 0x3EB2AD0
	493 Move X20, [X0]
	494 Call 0x3EB2AE0
	495 Move X0, X19
	496 Move X1, X31
	497 Call File.Delete, X0
	498 Compare X20, 0
	499 JumpIfEqual {314}
	500 Move X0, X20
	501 Call 0x1C17F18
	502 Move X20, X31
	503 Move X23, X0
	504 Move X0, X19
	505 Move X1, X31
	506 Call File.Delete, X0
	507 Compare X20, 0
	508 JumpIfNotEqual {511}
	509 Move X0, X23
	510 Call 0x1D2D690
	511 Move X0, X20
	512 Call 0x1C17F18
	513 Call 0x1991590

Method: mixpanel.Value GetEngageDefaultProperties()

Disassembly:
	0x031D2D6C B 0x31D2C68
	0x031D2D70 MOV X20, X31
	0x031D2D74 MOVZ W22, 0x7
	0x031D2D78 ADRP X23, 0xF21000
	0x031D2D7C LDR X23, [X23 + 0xE00]
	0x031D2D80 LDR X1, [X23]
	0x031D2D84 MOV X0, X21
	0x031D2D88 BL 0x1C16E00
	0x031D2D8C MOV X21, X0
	0x031D2D90 CBZ X0, 0x31D2DEC
	0x031D2D94 LDR X8, [X21]
	0x031D2D98 LDR X1, [X23]
	0x031D2D9C LDRH W9, [X8 + 0x12E]
	0x031D2DA0 CBZ X9, 0x31D2DC4
	0x031D2DA4 LDR X10, [X8 + 0xB0]
	0x031D2DA8 ADD X10, X10, 0x8
	0x031D2DAC LDUR X11, [X10 - 0x8]
	0x031D2DB0 CMP X11, X1
	0x031D2DB4 B.EQ 0x31D2DD4
	0x031D2DB8 SUBS X9, X9, 0x1
	0x031D2DBC ADD X10, X10, 0x10
	0x031D2DC0 B.NE 0x31D2DAC
	0x031D2DC4 MOV X0, X21
	0x031D2DC8 MOV W2, W31
	0x031D2DCC BL 0x1C5C788
	0x031D2DD0 B 0x31D2DE0
	0x031D2DD4 LDRSW X9, [X10]
	0x031D2DD8 ADD X8, X8, X9, 0x4, LSL
	0x031D2DDC ADD X0, X8, 0x138
	0x031D2DE0 LDP X8, X1, [X0]
	0x031D2DE4 MOV X0, X21
	0x031D2DE8 BLR X8
	0x031D2DEC CBNZ X20, 0x31D2E6C
	0x031D2DF0 CBZ W22, 0x31D2DFC
	0x031D2DF4 CMP W22, 0x7
	0x031D2DF8 B.NE 0x31D2E34
	0x031D2DFC MOV X0, X19
	0x031D2E00 MOV X1, X31
	0x031D2E04 BL 0x32ED09C
	0x031D2E08 LDR X0, [X24]
	0x031D2E0C LDR W8, [X0 + 0xE0]
	0x031D2E10 CBNZ W8, 0x31D2E18
	0x031D2E14 BL 0x1C16DFC
	0x031D2E18 LDP X20, X19, [X31 + 0x40]
	0x031D2E1C LDP X22, X21, [X31 + 0x30]
	0x031D2E20 LDP X24, X23, [X31 + 0x20]
	0x031D2E24 LDP X26, X25, [X31 + 0x10]
	0x031D2E28 MOVZ W0, 0x1
	0x031D2E2C LDR X30, [X31], #0x50
	0x031D2E30 B 0x31D3BDC
	0x031D2E34 MOV X0, X19
	0x031D2E38 LDP X20, X19, [X31 + 0x40]
	0x031D2E3C LDP X22, X21, [X31 + 0x30]
	0x031D2E40 LDP X24, X23, [X31 + 0x20]
	0x031D2E44 LDP X26, X25, [X31 + 0x10]
	0x031D2E48 MOV X1, X31
	0x031D2E4C LDR X30, [X31], #0x50
	0x031D2E50 B 0x32ED09C
	0x031D2E54 BL 0x1C16F20
	0x031D2E58 BL 0x1C16F20
	0x031D2E5C BL 0x1C171E0
	0x031D2E60 BL 0x1C16F20
	0x031D2E64 BL 0x1C16F20
	0x031D2E68 BL 0x1C16F20
	0x031D2E6C MOV X0, X20
	0x031D2E70 BL 0x1C16F18
	0x031D2E74 BL 0x1C16F20
	0x031D2E78 BL 0x1C16F20
	0x031D2E7C BL 0x1C16F20
	0x031D2E80 BL 0x1C16F20
	0x031D2E84 B 0x31D2ED0
	0x031D2E88 B 0x31D2ED0
	0x031D2E8C B 0x31D2ED0
	0x031D2E90 MOV X23, X0
	0x031D2E94 B 0x31D2ED4
	0x031D2E98 B 0x31D2ED0
	0x031D2E9C B 0x31D2ED0
	0x031D2EA0 B 0x31D2ED0
	0x031D2EA4 B 0x31D2FD0
	0x031D2EA8 B 0x31D2EC4
	0x031D2EAC B 0x31D2ED0
	0x031D2EB0 B 0x31D2ED0
	0x031D2EB4 B 0x31D2ED0
	0x031D2EB8 B 0x31D2EC4
	0x031D2EBC B 0x31D2ED0
	0x031D2EC0 B 0x31D2EC4
	0x031D2EC4 MOV X23, X0
	0x031D2EC8 MOV W22, W1
	0x031D2ECC B 0x31D3074
	0x031D2ED0 MOV X23, X0
	0x031D2ED4 CMP W1, 0x1
	0x031D2ED8 B.NE 0x31D2F5C
	0x031D2EDC MOV X0, X23
	0x031D2EE0 BL 0x3EB1AD0
	0x031D2EE4 MOV X20, X0
	0x031D2EE8 ADRP X0, 0xF21000
	0x031D2EEC LDR X0, [X0 + 0x7D0]
	0x031D2EF0 BL 0x1C16D08
	0x031D2EF4 LDR X8, [X20]
	0x031D2EF8 LDR X1, [X8]
	0x031D2EFC BL 0x1C17270
	0x031D2F00 TBZ X0, 0x0, 0x31D2F1C
	0x031D2F04 BL 0x3EB1AE0
	0x031D2F08 ADRP X0, 0xF4D000
	0x031D2F0C LDR X0, [X0 + 0xF28]
	0x031D2F10 BL 0x1C16D08
	0x031D2F14 BL 0x31D3964
	0x031D2F18 B 0x31D2BE8
	0x031D2F1C MOVZ W0, 0x8
	0x031D2F20 BL 0x3EB1AF0
	0x031D2F24 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x120B000
	005 Move X20, 0xF4E000
	006 Move W8, [X19+47]
	007 Move X20, [X20+3584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {44}
	012 Move X0, 0xF22000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move X0, 0xF4E000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0xF27000
	019 Move X0, [X0+1864]
	020 Call 0x1C17CF4
	021 Move X0, 0xF4E000
	022 Move X0, [X0+3592]
	023 Call 0x1C17CF4
	024 Move X0, 0xF4E000
	025 Move X0, [X0+3600]
	026 Call 0x1C17CF4
	027 Move X0, 0xF4E000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0xF4E000
	031 Move X0, [X0+3616]
	032 Call 0x1C17CF4
	033 Move X0, 0xF4E000
	034 Move X0, [X0+3624]
	035 Call 0x1C17CF4
	036 Move X0, 0xF4E000
	037 Move X0, [X0+3632]
	038 Call 0x1C17CF4
	039 Move X0, 0xF4E000
	040 Move X0, [X0+3640]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+47], W8
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move X19, [X8+8]
	047 Compare X19, 0
	048 JumpIfNotEqual {114}
	049 Move X8, 0xF27000
	050 Move X8, [X8+1864]
	051 Move X0, [X8]
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Call Value..ctor, X0
	055 Move X8, 0xF4E000
	056 Move X8, [X8+3624]
	057 Move X0, [X8]
	058 Call Value.op_Implicit, X0
	059 Compare X19, 0
	060 JumpIfEqual {119}
	061 Move X8, 0xF4E000
	062 Move X8, [X8+3592]
	063 Move X2, X0
	064 Move X0, X19
	065 Move X1, [X8]
	066 Call Value.set_Item, X0, X1, X2
	067 Move X8, 0xF4E000
	068 Move X8, [X8+3632]
	069 Move X0, [X8]
	070 Call Value.op_Implicit, X0
	071 Move X8, 0xF4E000
	072 Move X8, [X8+3608]
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, [X8]
	076 Call Value.set_Item, X0, X1, X2
	077 Move X0, X31
	078 Call SystemInfo.get_operatingSystem
	079 Call Value.op_Implicit, X0
	080 Move X8, 0xF4E000
	081 Move X8, [X8+3600]
	082 Move X2, X0
	083 Move X0, X19
	084 Move X1, [X8]
	085 Call Value.set_Item, X0, X1, X2
	086 Move X0, X31
	087 Call SystemInfo.get_deviceModel
	088 Call Value.op_Implicit, X0
	089 Move X8, 0xF4E000
	090 Move X8, [X8+3616]
	091 Move X2, X0
	092 Move X0, X19
	093 Move X1, [X8]
	094 Call Value.set_Item, X0, X1, X2
	095 Move X8, 0xF22000
	096 Move X8, [X8+2416]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X31
	103 Call Application.get_version
	104 Call Value.op_Implicit, X0
	105 Move X8, 0xF4E000
	106 Move X8, [X8+3640]
	107 Move X2, X0
	108 Move X0, X19
	109 Move X1, [X8]
	110 Call Value.set_Item, X0, X1, X2
	111 Move X8, [X20]
	112 Move X8, [X8+184]
	113 Move [X8+8], X19
	114 Move X0, X19
	115 Move X20, [X31+16]
	116 Move X19, [X31+24]
	117 Move X30, [X31+32]
	118 Return X0
	119 Call 0x1C17F20

Method: mixpanel.Value GetEventsDefaultProperties()

Disassembly:
	0x031D2F28 STR X8, [X0]
	0x031D2F2C ADRP X1, 0xCE2000
	0x031D2F30 ADD X1, X1, 0xE58
	0x031D2F34 MOV X2, X31
	0x031D2F38 BL 0x3EB1B00
	0x031D2F3C B 0x31D30E4
	0x031D2F40 B 0x31D2F44
	0x031D2F44 MOV X23, X0
	0x031D2F48 B 0x31D2F5C
	0x031D2F4C MOV X20, X1
	0x031D2F50 MOV X23, X0
	0x031D2F54 BL 0x3EB1AE0
	0x031D2F58 MOV W1, W20
	0x031D2F5C MOVZ W8, 0x1
	0x031D2F60 CMP W1, W8
	0x031D2F64 B.NE 0x31D2F8C
	0x031D2F68 MOV X0, X23
	0x031D2F6C BL 0x3EB1AD0
	0x031D2F70 LDR X20, [X0]
	0x031D2F74 BL 0x3EB1AE0
	0x031D2F78 MOV X0, X19
	0x031D2F7C MOV X1, X31
	0x031D2F80 BL 0x32ED09C
	0x031D2F84 CBZ X20, 0x31D2BF4
	0x031D2F88 B 0x31D3134
	0x031D2F8C MOV X20, X31
	0x031D2F90 B 0x31D2F98
	0x031D2F94 MOV X23, X0
	0x031D2F98 MOV X0, X19
	0x031D2F9C MOV X1, X31
	0x031D2FA0 BL 0x32ED09C
	0x031D2FA4 CBZ X20, 0x31D3158
	0x031D2FA8 MOV X0, X20
	0x031D2FAC BL 0x1C16F18
	0x031D2FB0 MOV X22, X1
	0x031D2FB4 MOV X23, X0
	0x031D2FB8 B 0x31D3074
	0x031D2FBC B 0x31D2FD0
	0x031D2FC0 B 0x31D2FD0
	0x031D2FC4 B 0x31D2FD0
	0x031D2FC8 B 0x31D2FD0
	0x031D2FCC B 0x31D2FD0
	0x031D2FD0 MOV X23, X0
	0x031D2FD4 CMP W1, 0x1
	0x031D2FD8 B.NE 0x31D2FF4
	0x031D2FDC MOV X0, X23
	0x031D2FE0 BL 0x3EB1AD0
	0x031D2FE4 LDR X20, [X0]
	0x031D2FE8 BL 0x3EB1AE0
	0x031D2FEC MOV W22, W31
	0x031D2FF0 B 0x31D2D78
	0x031D2FF4 MOV X20, X31
	0x031D2FF8 ADRP X25, 0xF21000
	0x031D2FFC LDR X25, [X25 + 0xE00]
	0x031D3000 MOV W22, W1
	0x031D3004 LDR X1, [X25]
	0x031D3008 MOV X0, X21
	0x031D300C BL 0x1C16E00
	0x031D3010 MOV X21, X0
	0x031D3014 CBZ X0, 0x31D3070
	0x031D3018 LDR X8, [X21]
	0x031D301C LDR X1, [X25]
	0x031D3020 LDRH W9, [X8 + 0x12E]
	0x031D3024 CBZ X9, 0x31D3048
	0x031D3028 LDR X10, [X8 + 0xB0]
	0x031D302C ADD X10, X10, 0x8
	0x031D3030 LDUR X11, [X10 - 0x8]
	0x031D3034 CMP X11, X1
	0x031D3038 B.EQ 0x31D3058
	0x031D303C SUBS X9, X9, 0x1
	0x031D3040 ADD X10, X10, 0x10
	0x031D3044 B.NE 0x31D3030
	0x031D3048 MOV X0, X21
	0x031D304C MOV W2, W31
	0x031D3050 BL 0x1C5C788
	0x031D3054 B 0x31D3064
	0x031D3058 LDRSW X9, [X10]
	0x031D305C ADD X8, X8, X9, 0x4, LSL
	0x031D3060 ADD X0, X8, 0x138
	0x031D3064 LDP X8, X1, [X0]
	0x031D3068 MOV X0, X21
	0x031D306C BLR X8
	0x031D3070 CBNZ X20, 0x31D30BC
	0x031D3074 CMP W22, 0x1
	0x031D3078 B.NE 0x31D3108
	0x031D307C MOV X0, X23
	0x031D3080 BL 0x3EB1AD0
	0x031D3084 MOV X20, X0
	0x031D3088 ADRP X0, 0xF20000
	0x031D308C LDR X0, [X0 + 0x7D0]
	0x031D3090 BL 0x1C16D08
	0x031D3094 LDR X8, [X20]
	0x031D3098 LDR X1, [X8]
	0x031D309C BL 0x1C17270
	0x031D30A0 TBZ X0, 0x0, 0x31D30C4
	0x031D30A4 BL 0x3EB1AE0
	0x031D30A8 ADRP X0, 0xF4C000
	0x031D30AC LDR X0, [X0 + 0xF30]
	0x031D30B0 BL 0x1C16D08
	0x031D30B4 BL 0x31D3964
	0x031D30B8 B 0x31D2DFC
	0x031D30BC MOV X0, X20
	0x031D30C0 BL 0x1C16F18
	0x031D30C4 MOVZ W0, 0x8
	0x031D30C8 BL 0x3EB1AF0
	0x031D30CC LDR X8, [X20]
	0x031D30D0 STR X8, [X0]
	0x031D30D4 ADRP X1, 0xCE1000
	0x031D30D8 ADD X1, X1, 0xE58
	0x031D30DC MOV X2, X31
	0x031D30E0 BL 0x3EB1B00
	0x031D30E4 B 0x31D30F0
	0x031D30E8 MOV X23, X0
	0x031D30EC B 0x31D2FF8
	0x031D30F0 MOV X23, X0
	0x031D30F4 MOV W22, W1
	0x031D30F8 B 0x31D3108
	0x031D30FC MOV X22, X1
	0x031D3100 MOV X23, X0
	0x031D3104 BL 0x3EB1AE0
	0x031D3108 MOVZ W8, 0x1
	0x031D310C CMP W22, W8
	0x031D3110 B.NE 0x31D313C
	0x031D3114 MOV X0, X23
	0x031D3118 BL 0x3EB1AD0
	0x031D311C LDR X20, [X0]
	0x031D3120 BL 0x3EB1AE0
	0x031D3124 MOV X0, X19
	0x031D3128 MOV X1, X31
	0x031D312C BL 0x32ED09C
	0x031D3130 CBZ X20, 0x31D2E08
	0x031D3134 MOV X0, X20
	0x031D3138 BL 0x1C16F18
	0x031D313C MOV X20, X31
	0x031D3140 B 0x31D3148
	0x031D3144 MOV X23, X0
	0x031D3148 MOV X0, X19
	0x031D314C MOV X1, X31
	0x031D3150 BL 0x32ED09C
	0x031D3154 CBNZ X20, 0x31D3160
	0x031D3158 MOV X0, X23
	0x031D315C BL 0x1D2C690
	0x031D3160 MOV X0, X20
	0x031D3164 BL 0x1C16F18
	0x031D3168 BL 0x1990590
	0x031D316C STP X30, X21, [X31 - 0x20]!
	0x031D3170 STP X20, X19, [X31 + 0x10]
	0x031D3174 ADRP X20, 0x1209000
	0x031D3178 ADRP X21, 0xF4C000
	0x031D317C LDRB W8, [X20 + 0x2A]
	0x031D3180 LDR X21, [X21 + 0xF38]
	0x031D3184 MOV X19, X0
	0x031D3188 TBNZ X8, 0x0, 0x31D31A0
	0x031D318C ADRP X0, 0xF4C000
	0x031D3190 LDR X0, [X0 + 0xF38]
	0x031D3194 BL 0x1C16CF4
	0x031D3198 MOVZ W8, 0x1
	0x031D319C STRB W8, [X20 + 0x2A]
	0x031D31A0 LDR X0, [X21]
	0x031D31A4 BL 0x1C16F10
	0x031D31A8 MOV X1, X31
	0x031D31AC MOV X20, X0
	0x031D31B0 BL 0x33BDD8C
	0x031D31B4 STR W31, [X20 + 0x10]
	0x031D31B8 STR X19, [X20 + 0x20]
	0x031D31BC MOV X0, X20
	0x031D31C0 LDP X20, X19, [X31 + 0x10]
	0x031D31C4 LDP X30, X21, [X31], #0x20
	0x031D31C8 RET
	0x031D31CC STR X30, [X31 - 0x20]!
	0x031D31D0 STP X20, X19, [X31 + 0x10]
	0x031D31D4 MOV W19, W1
	0x031D31D8 MOV X1, X31
	0x031D31DC MOV X20, X0
	0x031D31E0 BL 0x33BDD8C
	0x031D31E4 STR W19, [X20 + 0x10]
	0x031D31E8 LDP X20, X19, [X31 + 0x10]
	0x031D31EC LDR X30, [X31], #0x20
	0x031D31F0 RET
	0x031D31F4 STR X30, [X31 - 0x30]!
	0x031D31F8 STP X22, X21, [X31 + 0x10]
	0x031D31FC STP X20, X19, [X31 + 0x20]
	0x031D3200 ADRP X21, 0x1209000
	0x031D3204 ADRP X22, 0xF4C000
	0x031D3208 LDRB W8, [X21 + 0x2B]
	0x031D320C LDR X22, [X22 + 0xF40]
	0x031D3210 MOV X20, X1
	0x031D3214 MOV X19, X0
	0x031D3218 TBNZ X8, 0x0, 0x31D3248
	0x031D321C ADRP X0, 0xF20000
	0x031D3220 LDR X0, [X0 + 0xD28]
	0x031D3224 BL 0x1C16CF4
	0x031D3228 ADRP X0, 0xF4C000
	0x031D322C LDR X0, [X0 + 0xF48]
	0x031D3230 BL 0x1C16CF4
	0x031D3234 ADRP X0, 0xF4C000
	0x031D3238 LDR X0, [X0 + 0xF40]
	0x031D323C BL 0x1C16CF4
	0x031D3240 MOVZ W8, 0x1
	0x031D3244 STRB W8, [X21 + 0x2B]
	0x031D3248 LDR X0, [X22]
	0x031D324C BL 0x1C16F10
	0x031D3250 MOV X1, X31
	0x031D3254 MOV X21, X0
	0x031D3258 BL 0x33BDD8C
	0x031D325C CBZ X21, 0x31D32E8
	0x031D3260 MOVZ W8, 0x2
	0x031D3264 MOVZ W9, 0x1
	0x031D3268 STP X19, X20, [X21 + 0x18]
	0x031D326C STR W8, [X21 + 0x28]
	0x031D3270 STRB W9, [X21 + 0x10]
	0x031D3274 CBZ X20, 0x31D32A4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X19, 0x120B000
	008 Move X20, 0xF4E000
	009 Move W8, [X19+48]
	010 Move X20, [X20+3584]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {71}
	015 Move X0, 0xF22000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0xF4E000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0xF4E000
	022 Move X0, [X0+3648]
	023 Call 0x1C17CF4
	024 Move X0, 0xF2B000
	025 Move X0, [X0+2632]
	026 Call 0x1C17CF4
	027 Move X0, 0xF27000
	028 Move X0, [X0+1864]
	029 Call 0x1C17CF4
	030 Move X0, 0xF4E000
	031 Move X0, [X0+3656]
	032 Call 0x1C17CF4
	033 Move X0, 0xF4E000
	034 Move X0, [X0+3664]
	035 Call 0x1C17CF4
	036 Move X0, 0xF4E000
	037 Move X0, [X0+3672]
	038 Call 0x1C17CF4
	039 Move X0, 0xF4E000
	040 Move X0, [X0+3624]
	041 Call 0x1C17CF4
	042 Move X0, 0xF4E000
	043 Move X0, [X0+3680]
	044 Call 0x1C17CF4
	045 Move X0, 0xF4E000
	046 Move X0, [X0+3688]
	047 Call 0x1C17CF4
	048 Move X0, 0xF4E000
	049 Move X0, [X0+3696]
	050 Call 0x1C17CF4
	051 Move X0, 0xF4E000
	052 Move X0, [X0+3632]
	053 Call 0x1C17CF4
	054 Move X0, 0xF4E000
	055 Move X0, [X0+3704]
	056 Call 0x1C17CF4
	057 Move X0, 0xF4E000
	058 Move X0, [X0+3712]
	059 Call 0x1C17CF4
	060 Move X0, 0xF4D000
	061 Move X0, [X0+3720]
	062 Call 0x1C17CF4
	063 Move X0, 0xF4D000
	064 Move X0, [X0+3728]
	065 Call 0x1C17CF4
	066 Move X0, 0xF4D000
	067 Move X0, [X0+3736]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X19+48], W8
	071 Move X8, [X20]
	072 Move X8, [X8+184]
	073 Move X0, [X8]
	074 Compare X0, 0
	075 JumpIfNotEqual {219}
	076 Move X8, 0xF26000
	077 Move X8, [X8+1864]
	078 Move X0, [X8]
	079 Call 0x1C17F10
	080 Move X19, X0
	081 Call Value..ctor, X0
	082 Move X8, 0xF4D000
	083 Move X8, [X8+3656]
	084 Move X0, [X8]
	085 Call Value.op_Implicit, X0
	086 Compare X19, 0
	087 JumpIfEqual {226}
	088 Move X8, 0xF4D000
	089 Move X8, [X8+3704]
	090 Move X2, X0
	091 Move X0, X19
	092 Move X1, [X8]
	093 Call Value.Add, X0, X1, X2
	094 Move X8, 0xF4D000
	095 Move X8, [X8+3624]
	096 Move X0, [X8]
	097 Call Value.op_Implicit, X0
	098 Move X8, 0xF4D000
	099 Move X8, [X8+3736]
	100 Move X2, X0
	101 Move X0, X19
	102 Move X1, [X8]
	103 Call Value.Add, X0, X1, X2
	104 Move X0, X31
	105 Call SystemInfo.get_operatingSystemFamily
	106 Move X8, 0xF4D000
	107 Move X8, [X8+3648]
	108 Move TEMP, 0
	109 Not TEMP
	110 Move X22, TEMP
	111 Move [X31+40], W0
	112 Add X0, X31, 24
	113 Move X8, [X8]
	114 Move X1, X31
	115 Move [X31+24], X8
	116 Move [X31+32], X22
	117 Call Enum.ToString, X0
	118 Call Value.op_Implicit, X0
	119 Move X21, 0xF4D000
	120 Move X21, [X21+3720]
	121 Move X2, X0
	122 Move X0, X19
	123 Move X1, [X21]
	124 Call Value.Add, X0, X1, X2
	125 Move X0, X31
	126 Call SystemInfo.get_operatingSystem
	127 Call Value.op_Implicit, X0
	128 Move X8, 0xF4D000
	129 Move X8, [X8+3672]
	130 Move X2, X0
	131 Move X0, X19
	132 Move X1, [X8]
	133 Call Value.Add, X0, X1, X2
	134 Move X0, X31
	135 Call SystemInfo.get_deviceModel
	136 Call Value.op_Implicit, X0
	137 Move X8, 0xF4D000
	138 Move X8, [X8+3712]
	139 Move X2, X0
	140 Move X0, X19
	141 Move X1, [X8]
	142 Call Value.Add, X0, X1, X2
	143 Move X8, 0xF21000
	144 Move X8, [X8+2416]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move X0, X31
	151 Call Application.get_version
	152 Call Value.op_Implicit, X0
	153 Move X8, 0xF4D000
	154 Move X8, [X8+3728]
	155 Move X2, X0
	156 Move X0, X19
	157 Move X1, [X8]
	158 Call Value.Add, X0, X1, X2
	159 Move X0, X31
	160 Call Application.get_internetReachability
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CSET not yet implemented."
	163 Call Value.op_Implicit, X0
	164 Move X8, 0xF4D000
	165 Move X8, [X8+3664]
	166 Move X2, X0
	167 Move X0, X19
	168 Move X1, [X8]
	169 Call Value.Add, X0, X1, X2
	170 Call Util.GetRadio
	171 Call Value.op_Implicit, X0
	172 Move X8, 0xF4D000
	173 Move X8, [X8+3680]
	174 Move X2, X0
	175 Move X0, X19
	176 Move X1, [X8]
	177 Call Value.Add, X0, X1, X2
	178 Move X0, X31
	179 Call Application.get_platform
	180 Move X8, 0xF2A000
	181 Move X8, [X8+2632]
	182 Move [X31+16], W0
	183 Add X0, X31, 0
	184 Move X1, X31
	185 Move X8, [X8]
	186 Move [X31], X8
	187 Move [X31+8], X22
	188 Call Enum.ToString, X0
	189 Call Value.op_Implicit, X0
	190 Move X8, 0xF4D000
	191 Move X8, [X8+3696]
	192 Move X2, X0
	193 Move X0, X19
	194 Move X1, [X8]
	195 Call Value.Add, X0, X1, X2
	196 Move X0, X31
	197 Call Screen.get_dpi
	198 Call Value.op_Implicit, V0
	199 Move X8, 0xF4D000
	200 Move X8, [X8+3688]
	201 Move X2, X0
	202 Move X0, X19
	203 Move X1, [X8]
	204 Call Value.Add, X0, X1, X2
	205 Move X8, 0xF4D000
	206 Move X8, [X8+3632]
	207 Move X0, [X8]
	208 Call Value.op_Implicit, X0
	209 Move X1, [X21]
	210 Move X2, X0
	211 Move X0, X19
	212 Call Value.set_Item, X0, X1, X2
	213 Move X8, [X20]
	214 Move X8, [X8+184]
	215 Move [X8], X19
	216 Move X8, [X20]
	217 Move X8, [X8+184]
	218 Move X0, [X8]
	219 Move X20, [X31+80]
	220 Move X19, [X31+88]
	221 Move X22, [X31+64]
	222 Move X21, [X31+72]
	223 Move X30, [X31+48]
	224 Add X31, X31, 96
	225 Return X0
	226 Call 0x1C17F20

Method: System.Void DoTrack(System.String eventName, mixpanel.Value properties)

Disassembly:
	0x031D50B0 STP X30, X23, [X31 + 0x10]
	0x031D50B4 STP X22, X21, [X31 + 0x20]
	0x031D50B8 STP X20, X19, [X31 + 0x30]
	0x031D50BC ADRP X19, 0x1207000
	0x031D50C0 ADRP X21, 0xF4A000
	0x031D50C4 LDRB W8, [X19 + 0x6E]
	0x031D50C8 LDR X21, [X21 + 0xEE0]
	0x031D50CC TBNZ X8, 0x0, 0x31D50FC
	0x031D50D0 ADRP X0, 0xF4A000
	0x031D50D4 LDR X0, [X0 + 0xF60]
	0x031D50D8 BL 0x1C16CF4
	0x031D50DC ADRP X0, 0xF4A000
	0x031D50E0 LDR X0, [X0 + 0xEE0]
	0x031D50E4 BL 0x1C16CF4
	0x031D50E8 ADRP X0, 0xF4A000
	0x031D50EC LDR X0, [X0 + 0xF90]
	0x031D50F0 BL 0x1C16CF4
	0x031D50F4 MOVZ W8, 0x1
	0x031D50F8 STRB W8, [X19 + 0x6E]
	0x031D50FC LDR X0, [X21]
	0x031D5100 STP X31, X31, [X31]
	0x031D5104 LDR W8, [X0 + 0xE0]
	0x031D5108 CBNZ W8, 0x31D5114
	0x031D510C BL 0x1C16DFC
	0x031D5110 LDR X0, [X21]
	0x031D5114 LDR X8, [X0 + 0xB8]
	0x031D5118 MOV X1, X31
	0x031D511C LDR X0, [X8 + 0x8]
	0x031D5120 BL 0x32277A8
	0x031D5124 LDR X8, [X21]
	0x031D5128 MOV W19, W0
	0x031D512C LDR W9, [X8 + 0xE0]
	0x031D5130 CBNZ W9, 0x31D5140
	0x031D5134 MOV X0, X8
	0x031D5138 BL 0x1C16DFC
	0x031D513C LDR X8, [X21]
	0x031D5140 LDR X8, [X8 + 0xB8]
	0x031D5144 TBZ X19, 0x0, 0x31D52D4
	0x031D5148 LDR X19, [X8]
	0x031D514C CBZ X19, 0x31D52EC
	0x031D5150 ADRP X22, 0xF4A000
	0x031D5154 LDR X8, [X19]
	0x031D5158 LDR X22, [X22 + 0xF60]
	0x031D515C ADRP X23, 0xF4A000
	0x031D5160 LDR X1, [X22]
	0x031D5164 LDR X23, [X23 + 0xF90]
	0x031D5168 LDRH W9, [X8 + 0x12E]
	0x031D516C LDR X20, [X23]
	0x031D5170 CBZ X9, 0x31D5194
	0x031D5174 LDR X10, [X8 + 0xB0]
	0x031D5178 ADD X10, X10, 0x8
	0x031D517C LDUR X11, [X10 - 0x8]
	0x031D5180 CMP X11, X1
	0x031D5184 B.EQ 0x31D51A4
	0x031D5188 SUBS X9, X9, 0x1
	0x031D518C ADD X10, X10, 0x10
	0x031D5190 B.NE 0x31D517C
	0x031D5194 MOVZ W2, 0x5
	0x031D5198 MOV X0, X19
	0x031D519C BL 0x1C5C788
	0x031D51A0 B 0x31D51B4
	0x031D51A4 LDR W9, [X10]
	0x031D51A8 ADD W9, W9, 0x5
	0x031D51AC ADD X8, X8, W9, 0x4, SXTW
	0x031D51B0 ADD X0, X8, 0x138
	0x031D51B4 LDP X8, X2, [X0]
	0x031D51B8 MOV X0, X19
	0x031D51BC MOV X1, X20
	0x031D51C0 BLR X8
	0x031D51C4 LDR X8, [X21]
	0x031D51C8 TBZ X0, 0x0, 0x31D525C
	0x031D51CC LDR W9, [X8 + 0xE0]
	0x031D51D0 CBNZ W9, 0x31D51E0
	0x031D51D4 MOV X0, X8
	0x031D51D8 BL 0x1C16DFC
	0x031D51DC LDR X8, [X21]
	0x031D51E0 LDR X8, [X8 + 0xB8]
	0x031D51E4 LDR X19, [X8]
	0x031D51E8 CBZ X19, 0x31D52EC
	0x031D51EC LDR X8, [X19]
	0x031D51F0 LDR X1, [X22]
	0x031D51F4 LDR X20, [X23]
	0x031D51F8 LDRH W9, [X8 + 0x12E]
	0x031D51FC CBZ X9, 0x31D5220
	0x031D5200 LDR X10, [X8 + 0xB0]
	0x031D5204 ADD X10, X10, 0x8
	0x031D5208 LDUR X11, [X10 - 0x8]
	0x031D520C CMP X11, X1
	0x031D5210 B.EQ 0x31D5230
	0x031D5214 SUBS X9, X9, 0x1
	0x031D5218 ADD X10, X10, 0x10
	0x031D521C B.NE 0x31D5208
	0x031D5220 MOVZ W2, 0x3
	0x031D5224 MOV X0, X19
	0x031D5228 BL 0x1C5C788
	0x031D522C B 0x31D5240
	0x031D5230 LDR W9, [X10]
	0x031D5234 ADD W9, W9, 0x3
	0x031D5238 ADD X8, X8, W9, 0x4, SXTW
	0x031D523C ADD X0, X8, 0x138
	0x031D5240 LDP X8, X2, [X0]
	0x031D5244 MOV X0, X19
	0x031D5248 MOV X1, X20
	0x031D524C BLR X8
	0x031D5250 LDR X8, [X21]
	0x031D5254 LDR X9, [X8 + 0xB8]
	0x031D5258 STR X0, [X9 + 0x8]
	0x031D525C LDR W9, [X8 + 0xE0]
	0x031D5260 CBNZ W9, 0x31D5270
	0x031D5264 MOV X0, X8
	0x031D5268 BL 0x1C16DFC
	0x031D526C LDR X8, [X21]
	0x031D5270 LDR X8, [X8 + 0xB8]
	0x031D5274 MOV X1, X31
	0x031D5278 LDR X0, [X8 + 0x8]
	0x031D527C BL 0x32277A8
	0x031D5280 TBZ X0, 0x0, 0x31D52BC
	0x031D5284 MOV X0, X31
	0x031D5288 BL 0x337684C
	0x031D528C STP X0, X1, [X31]
	0x031D5290 ADD X0, X31, 0x0
	0x031D5294 MOV X1, X31
	0x031D5298 BL 0x337866C
	0x031D529C LDR X8, [X21]
	0x031D52A0 MOV X19, X0
	0x031D52A4 LDR W9, [X8 + 0xE0]
	0x031D52A8 CBNZ W9, 0x31D52B4
	0x031D52AC MOV X0, X8
	0x031D52B0 BL 0x1C16DFC
	0x031D52B4 MOV X0, X19
	0x031D52B8 BL 0x31D3758
	0x031D52BC LDR X0, [X21]
	0x031D52C0 LDR W8, [X0 + 0xE0]
	0x031D52C4 CBNZ W8, 0x31D52D0
	0x031D52C8 BL 0x1C16DFC
	0x031D52CC LDR X0, [X21]
	0x031D52D0 LDR X8, [X0 + 0xB8]
	0x031D52D4 LDR X0, [X8 + 0x8]
	0x031D52D8 LDP X20, X19, [X31 + 0x30]
	0x031D52DC LDP X22, X21, [X31 + 0x20]
	0x031D52E0 LDP X30, X23, [X31 + 0x10]
	0x031D52E4 ADD X31, X31, 0x40
	0x031D52E8 RET
	0x031D52EC BL 0x1C16F20
	0x031D52F0 SUB X31, X31, 0x30
	0x031D52F4 STR X30, [X31 + 0x10]
	0x031D52F8 STP X20, X19, [X31 + 0x20]
	0x031D52FC ADRP X20, 0x1207000
	0x031D5300 ADRP X19, 0xF1F000
	0x031D5304 LDRB W8, [X20 + 0x159]
	0x031D5308 LDR X19, [X19 + 0x9F0]
	0x031D530C TBNZ X8, 0x0, 0x31D5330
	0x031D5310 ADRP X0, 0xF1F000
	0x031D5314 LDR X0, [X0 + 0x9F0]
	0x031D5318 BL 0x1C16CF4
	0x031D531C ADRP X0, 0xF20000
	0x031D5320 LDR X0, [X0 + 0x570]
	0x031D5324 BL 0x1C16CF4
	0x031D5328 MOVZ W8, 0x1
	0x031D532C STRB W8, [X20 + 0x159]
	0x031D5330 LDR X0, [X19]
	0x031D5334 STR X31, [X31 + 0x18]
	0x031D5338 STR X31, [X31 + 0x8]
	0x031D533C ADRP X19, 0xF20000
	0x031D5340 LDR W8, [X0 + 0xE0]
	0x031D5344 LDR X19, [X19 + 0x570]
	0x031D5348 CBNZ W8, 0x31D5350
	0x031D534C BL 0x1C16DFC
	0x031D5350 ADD X0, X31, 0x18
	0x031D5354 MOVZ W1, 0x7B2
	0x031D5358 MOVZ W2, 0x1
	0x031D535C MOVZ W3, 0x1
	0x031D5360 MOVZ W7, 0x1
	0x031D5364 MOV W4, W31
	0x031D5368 MOV W5, W31
	0x031D536C MOV W6, W31
	0x031D5370 STR X31, [X31]
	0x031D5374 BL 0x335F47C
	0x031D5378 MOV X0, X31
	0x031D537C BL 0x33616A4
	0x031D5380 LDR X1, [X31 + 0x18]
	0x031D5384 MOV X2, X31
	0x031D5388 BL 0x3363010
	0x031D538C LDR X8, [X19]
	0x031D5390 STR X0, [X31 + 0x8]
	0x031D5394 LDR W9, [X8 + 0xE0]
	0x031D5398 CBNZ W9, 0x31D53A4
	0x031D539C MOV X0, X8
	0x031D53A0 BL 0x1C16DFC
	0x031D53A4 ADD X0, X31, 0x8
	0x031D53A8 MOV X1, X31
	0x031D53AC BL 0x3394200
	0x031D53B0 MOVZ X9, 0x7FF00000
	0x031D53B4 LDP X20, X19, [X31 + 0x20]
	0x031D53B8 LDR X30, [X31 + 0x10]
	0x031D53BC FCVTZS X8, D0
	0x031D53C0 MOVZ X10, 0xC3E00000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1208000
	007 Move X21, 0xF4B000
	008 Move W8, [X22+49]
	009 Move X21, [X21+3808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {54}
	016 Move X0, 0xF4B000
	017 Move X0, [X0+3792]
	018 Call 0x1C17CF4
	019 Move X0, 0xF4B000
	020 Move X0, [X0+3808]
	021 Call 0x1C17CF4
	022 Move X0, 0xF24000
	023 Move X0, [X0+1864]
	024 Call 0x1C17CF4
	025 Move X0, 0xF4C000
	026 Move X0, [X0+8]
	027 Call 0x1C17CF4
	028 Move X0, 0xF4C000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0xF4C000
	032 Move X0, [X0+24]
	033 Call 0x1C17CF4
	034 Move X0, 0xF4C000
	035 Move X0, [X0+32]
	036 Call 0x1C17CF4
	037 Move X0, 0xF4B000
	038 Move X0, [X0+3864]
	039 Call 0x1C17CF4
	040 Move X0, 0xF4C000
	041 Move X0, [X0+40]
	042 Call 0x1C17CF4
	043 Move X0, 0xF4C000
	044 Move X0, [X0+48]
	045 Call 0x1C17CF4
	046 Move X0, 0xF4C000
	047 Move X0, [X0+56]
	048 Call 0x1C17CF4
	049 Move X0, 0xF4C000
	050 Move X0, [X0+64]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+49], W8
	054 Move X0, [X21]
	055 Move [X31+8], X31
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Call MixpanelStorage.get_IsTracking
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {215}
	065 Compare X19, 0
	066 JumpIfEqual {68}
	067 Call Controller.GetEventsDefaultProperties
	068 Move X8, 0xF24000
	069 Move X8, [X8+1864]
	070 Move X0, [X8]
	071 Call 0x1C17F10
	072 Move X19, X0
	073 Call Value..ctor, X0
	074 Call Controller.GetEventsDefaultProperties
	075 Compare X19, 0
	076 JumpIfEqual {221}
	077 Move X1, X0
	078 Move X0, X19
	079 Call Value.Merge, X0, X1
	080 Move X0, X31
	081 Call Screen.get_width
	082 Call Value.op_Implicit, X0
	083 Move X8, 0xF4C000
	084 Move X8, [X8+32]
	085 Move X2, X0
	086 Move X0, X19
	087 Move X1, [X8]
	088 Call Value.set_Item, X0, X1, X2
	089 Move X0, X31
	090 Call Screen.get_height
	091 Call Value.op_Implicit, X0
	092 Move X8, 0xF4C000
	093 Move X8, [X8+48]
	094 Move X2, X0
	095 Move X0, X19
	096 Move X1, [X8]
	097 Call Value.set_Item, X0, X1, X2
	098 Move X0, [X21]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Call MixpanelStorage.get_OnceProperties
	104 Move X1, X0
	105 Move X0, X19
	106 Call Value.Merge, X0, X1
	107 Call MixpanelStorage.get_SuperProperties
	108 Move X1, X0
	109 Move X0, X19
	110 Call Value.Merge, X0, X1
	111 Call MixpanelStorage.get_TimedEvents
	112 Compare X0, 0
	113 JumpIfEqual {221}
	114 Add X2, X31, 8
	115 Move X1, X20
	116 Call Value.TryGetValue, X0, X1, X2
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {144}
	121 Call Util.CurrentTimeInSeconds
	122 Move X8, [X31+8]
	123 Compare X8, 0
	124 JumpIfEqual {221}
	125 Move V1, [X8+40]
	126 Subtract D0, D0, D1
	127 Call Value.op_Implicit, V0
	128 Move X8, 0xF4C000
	129 Move X8, [X8+16]
	130 Move X2, X0
	131 Move X0, X19
	132 Move X1, [X8]
	133 Call Value.set_Item, X0, X1, X2
	134 Move X0, [X21]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Call MixpanelStorage.get_TimedEvents
	140 Compare X0, 0
	141 JumpIfEqual {221}
	142 Move X1, X20
	143 Call Value.Remove, X0, X1
	144 Call MixpanelSettings.get_Instance
	145 Compare X0, 0
	146 JumpIfEqual {221}
	147 Move X0, [X0+40]
	148 Call Value.op_Implicit, X0
	149 Move X8, 0xF4C000
	150 Move X8, [X8+8]
	151 Move X2, X0
	152 Move X0, X19
	153 Move X1, [X8]
	154 Call Value.set_Item, X0, X1, X2
	155 Move X0, [X21]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Call MixpanelStorage.get_DistinctId
	161 Call Value.op_Implicit, X0
	162 Move X8, 0xF4B000
	163 Move X8, [X8+3864]
	164 Move X2, X0
	165 Move X0, X19
	166 Move X1, [X8]
	167 Call Value.set_Item, X0, X1, X2
	168 Call Util.CurrentTimeInMilliseconds
	169 Call Value.op_Implicit, V0
	170 Move X8, 0xF4C000
	171 Move X8, [X8+24]
	172 Move X2, X0
	173 Move X0, X19
	174 Move X1, [X8]
	175 Call Value.set_Item, X0, X1, X2
	176 Move X8, 0xF24000
	177 Move X8, [X8+1864]
	178 Move X0, [X8]
	179 Call 0x1C17F10
	180 Move X21, X0
	181 Call Value..ctor, X0
	182 Move X0, X20
	183 Call Value.op_Implicit, X0
	184 Compare X21, 0
	185 JumpIfEqual {221}
	186 Move X8, 0xF4C000
	187 Move X8, [X8+64]
	188 Move X2, X0
	189 Move X0, X21
	190 Move X1, [X8]
	191 Call Value.set_Item, X0, X1, X2
	192 Move X8, 0xF4C000
	193 Move X8, [X8+40]
	194 Move X0, X21
	195 Move X2, X19
	196 Move X1, [X8]
	197 Call Value.set_Item, X0, X1, X2
	198 Move X8, 0xF4B000
	199 Move X8, [X8+3792]
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Call Metadata.GetEventMetadata
	206 Move X8, 0xF4C000
	207 Move X8, [X8+56]
	208 Move X2, X0
	209 Move X0, X21
	210 Move X1, [X8]
	211 Call Value.set_Item, X0, X1, X2
	212 Move X0, X21
	213 Move W1, W31
	214 Call MixpanelStorage.EnqueueTrackingData, X0, X1
	215 Move X20, [X31+32]
	216 Move X19, [X31+40]
	217 Move X22, [X31+16]
	218 Move X21, [X31+24]
	219 Move X30, [X31+48]
	220 Return 
	221 Call 0x1C17F20

Method: System.Void DoEngage(mixpanel.Value properties)

Disassembly:
	0x031D674C LDRSW X9, [X10]
	0x031D6750 ADD X8, X8, X9, 0x4, LSL
	0x031D6754 ADD X0, X8, 0x138
	0x031D6758 LDP X8, X2, [X0]
	0x031D675C MOV X0, X20
	0x031D6760 MOV X1, X28
	0x031D6764 BLR X8
	0x031D6768 MOV X0, X19
	0x031D676C BL 0x31D6D74
	0x031D6770 CBNZ W0, 0x31D660C
	0x031D6774 ADRP X0, 0xF1D000
	0x031D6778 LDR W20, [X31 + 0x1C]
	0x031D677C LDR X0, [X0 + 0x5A8]
	0x031D6780 BL 0x1C16D08
	0x031D6784 B 0x31D65AC
	0x031D6788 LDR W8, [X31 + 0x18]
	0x031D678C CMP W25, W8
	0x031D6790 B.EQ 0x31D6820
	0x031D6794 LDR X0, [X21]
	0x031D6798 LDR W8, [X0 + 0xE0]
	0x031D679C CBNZ W8, 0x31D67A8
	0x031D67A0 BL 0x1C16DFC
	0x031D67A4 LDR X0, [X21]
	0x031D67A8 LDR X8, [X0 + 0xB8]
	0x031D67AC LDR X20, [X8]
	0x031D67B0 CBZ X20, 0x31D6844
	0x031D67B4 ADRP X10, 0xF49000
	0x031D67B8 LDR X8, [X20]
	0x031D67BC LDR X10, [X10 + 0xF60]
	0x031D67C0 LDRH W9, [X8 + 0x12E]
	0x031D67C4 LDR X1, [X10]
	0x031D67C8 CBZ X9, 0x31D67EC
	0x031D67CC LDR X10, [X8 + 0xB0]
	0x031D67D0 ADD X10, X10, 0x8
	0x031D67D4 LDUR X11, [X10 - 0x8]
	0x031D67D8 CMP X11, X1
	0x031D67DC B.EQ 0x31D67FC
	0x031D67E0 SUBS X9, X9, 0x1
	0x031D67E4 ADD X10, X10, 0x10
	0x031D67E8 B.NE 0x31D67D4
	0x031D67EC MOVZ W2, 0x6
	0x031D67F0 MOV X0, X20
	0x031D67F4 BL 0x1C5C788
	0x031D67F8 B 0x31D680C
	0x031D67FC LDR W9, [X10]
	0x031D6800 ADD W9, W9, 0x6
	0x031D6804 ADD X8, X8, W9, 0x4, SXTW
	0x031D6808 ADD X0, X8, 0x138
	0x031D680C LDP X8, X3, [X0]
	0x031D6810 LDR X1, [X31 + 0x10]
	0x031D6814 MOV X0, X20
	0x031D6818 MOV W2, W25
	0x031D681C BLR X8
	0x031D6820 MOV X0, X19
	0x031D6824 LDP X20, X19, [X31 + 0x70]
	0x031D6828 LDP X22, X21, [X31 + 0x60]
	0x031D682C LDP X24, X23, [X31 + 0x50]
	0x031D6830 LDP X26, X25, [X31 + 0x40]
	0x031D6834 LDP X28, X27, [X31 + 0x30]
	0x031D6838 LDP X29, X30, [X31 + 0x20]
	0x031D683C ADD X31, X31, 0x80
	0x031D6840 RET
	0x031D6844 BL 0x1C16F20
	0x031D6848 MOVZ W0, 0x8
	0x031D684C BL 0x3EB1AF0
	0x031D6850 LDR X8, [X20]
	0x031D6854 STR X8, [X0]
	0x031D6858 ADRP X1, 0xCDE000
	0x031D685C ADD X1, X1, 0xE58
	0x031D6860 MOV X2, X31
	0x031D6864 BL 0x3EB1B00
	0x031D6868 B 0x31D686C
	0x031D686C MOV X20, X0
	0x031D6870 BL 0x3EB1AE0
	0x031D6874 MOV X0, X20
	0x031D6878 BL 0x1D2C690
	0x031D687C BL 0x1990590
	0x031D6880 SUB X31, X31, 0x60
	0x031D6884 STP X30, X27, [X31 + 0x10]
	0x031D6888 STP X26, X25, [X31 + 0x20]
	0x031D688C STP X24, X23, [X31 + 0x30]
	0x031D6890 STP X22, X21, [X31 + 0x40]
	0x031D6894 STP X20, X19, [X31 + 0x50]
	0x031D6898 ADRP X20, 0x1206000
	0x031D689C LDRB W8, [X20 + 0x78]
	0x031D68A0 MOV X19, X0
	0x031D68A4 TBNZ X8, 0x0, 0x31D68F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1207000
	006 Move X20, 0xF4A000
	007 Move W8, [X21+50]
	008 Move X20, [X20+3808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0xF4A000
	015 Move X0, [X0+3792]
	016 Call 0x1C17CF4
	017 Move X0, 0xF4A000
	018 Move X0, [X0+3808]
	019 Call 0x1C17CF4
	020 Move X0, 0xF4B000
	021 Move X0, [X0+224]
	022 Call 0x1C17CF4
	023 Move X0, 0xF4B000
	024 Move X0, [X0+232]
	025 Call 0x1C17CF4
	026 Move X0, 0xF4B000
	027 Move X0, [X0+56]
	028 Call 0x1C17CF4
	029 Move X0, 0xF4B000
	030 Move X0, [X0+240]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+50], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Call MixpanelStorage.get_IsTracking
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {100}
	044 Call MixpanelSettings.get_Instance
	045 Compare X0, 0
	046 JumpIfEqual {105}
	047 Move X0, [X0+40]
	048 Call Value.op_Implicit, X0
	049 Compare X19, 0
	050 JumpIfEqual {105}
	051 Move X8, 0xF4B000
	052 Move X8, [X8+232]
	053 Move X2, X0
	054 Move X0, X19
	055 Move X1, [X8]
	056 Call Value.set_Item, X0, X1, X2
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Call MixpanelStorage.get_DistinctId
	063 Call Value.op_Implicit, X0
	064 Move X8, 0xF4B000
	065 Move X8, [X8+240]
	066 Move X2, X0
	067 Move X0, X19
	068 Move X1, [X8]
	069 Call Value.set_Item, X0, X1, X2
	070 Call Util.CurrentTimeInMilliseconds
	071 Call Value.op_Implicit, V0
	072 Move X8, 0xF4B000
	073 Move X8, [X8+224]
	074 Move X2, X0
	075 Move X0, X19
	076 Move X1, [X8]
	077 Call Value.set_Item, X0, X1, X2
	078 Move X8, 0xF4A000
	079 Move X8, [X8+3792]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Call Metadata.GetPeopleMetadata
	086 Move X8, 0xF4B000
	087 Move X8, [X8+56]
	088 Move X2, X0
	089 Move X0, X19
	090 Move X1, [X8]
	091 Call Value.set_Item, X0, X1, X2
	092 Move X0, X19
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move W1, 1
	096 Move X30, [X31+32]
	097 Move X21, [X31+40]
	098 Call MixpanelStorage.EnqueueTrackingData, X0, X1
	099 Return 
	100 Move X20, [X31+16]
	101 Move X19, [X31+24]
	102 Move X30, [X31+32]
	103 Move X21, [X31+40]
	104 Return 
	105 Call 0x1C17F20

Method: System.Void DoClear()

Disassembly:
	0x031D6A64 CBZ X9, 0x31D6A88
	0x031D6A68 LDR X10, [X8 + 0xB0]
	0x031D6A6C ADD X10, X10, 0x8
	0x031D6A70 LDUR X11, [X10 - 0x8]
	0x031D6A74 CMP X11, X1
	0x031D6A78 B.EQ 0x31D6A98
	0x031D6A7C SUBS X9, X9, 0x1
	0x031D6A80 ADD X10, X10, 0x10
	0x031D6A84 B.NE 0x31D6A70
	0x031D6A88 MOVZ W2, 0x5
	0x031D6A8C MOV X0, X21
	0x031D6A90 BL 0x1C5C788
	0x031D6A94 B 0x31D6AA8
	0x031D6A98 LDR W9, [X10]
	0x031D6A9C ADD W9, W9, 0x5
	0x031D6AA0 ADD X8, X8, W9, 0x4, SXTW
	0x031D6AA4 ADD X0, X8, 0x138
	0x031D6AA8 LDP X8, X2, [X0]
	0x031D6AAC MOV X0, X21
	0x031D6AB0 MOV X1, X20
	0x031D6AB4 BLR X8
	0x031D6AB8 TBZ X0, 0x0, 0x31D693C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1207000
	005 Move X20, 0xF4A000
	006 Move W8, [X19+51]
	007 Move X20, [X20+3808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF4A000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+51], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move W0, W31
	023 Call MixpanelStorage.DeleteAllTrackingData, X0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, 1
	027 Move X30, [X31+32]

Method: System.Void .ctor()

Disassembly:
	0x031D6B14 BL 0x1C5C788
	0x031D6B18 B 0x31D6B28

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

