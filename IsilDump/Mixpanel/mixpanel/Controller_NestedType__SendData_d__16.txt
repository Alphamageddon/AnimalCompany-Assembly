Type: mixpanel.Controller/<SendData>d__16

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x031D4364 MOV X2, X19
	0x031D4368 LDR X1, [X8]
	0x031D436C BL 0x31D3E30
	0x031D4370 ADRP X8, 0xF4B000
	0x031D4374 LDR X8, [X8 + 0xED0]
	0x031D4378 LDR X0, [X8]
	0x031D437C LDR W8, [X0 + 0xE0]
	0x031D4380 CBNZ W8, 0x31D4388
	0x031D4384 BL 0x1C16DFC
	0x031D4388 BL 0x31D53E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x031D6C18 CMP W1, 0x1
	0x031D6C1C B.NE 0x31D6C30
	0x031D6C20 BL 0x3EB1AD0
	0x031D6C24 LDR X20, [X0]
	0x031D6C28 BL 0x3EB1AE0
	0x031D6C2C B 0x31D6B40
	0x031D6C30 STR X0, [X31 + 0x8]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <SendData>d__16.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x031D6C34 MOV X20, X31
	0x031D6C38 B 0x31D6C40
	0x031D6C3C STR X0, [X31 + 0x8]
	0x031D6C40 LDR X1, [X22]
	0x031D6C44 MOV X0, X19
	0x031D6C48 BL 0x1C16E00
	0x031D6C4C MOV X19, X0
	0x031D6C50 CBZ X0, 0x31D6CAC
	0x031D6C54 LDR X8, [X19]
	0x031D6C58 LDR X1, [X22]
	0x031D6C5C LDRH W9, [X8 + 0x12E]
	0x031D6C60 CBZ X9, 0x31D6C84
	0x031D6C64 LDR X10, [X8 + 0xB0]
	0x031D6C68 ADD X10, X10, 0x8
	0x031D6C6C LDUR X11, [X10 - 0x8]
	0x031D6C70 CMP X11, X1
	0x031D6C74 B.EQ 0x31D6C94
	0x031D6C78 SUBS X9, X9, 0x1
	0x031D6C7C ADD X10, X10, 0x10
	0x031D6C80 B.NE 0x31D6C6C
	0x031D6C84 MOV X0, X19
	0x031D6C88 MOV W2, W31
	0x031D6C8C BL 0x1C5C788
	0x031D6C90 B 0x31D6CA0
	0x031D6C94 LDRSW X9, [X10]
	0x031D6C98 ADD X8, X8, X9, 0x4, LSL
	0x031D6C9C ADD X0, X8, 0x138
	0x031D6CA0 LDP X8, X1, [X0]
	0x031D6CA4 MOV X0, X19
	0x031D6CA8 BLR X8
	0x031D6CAC CBNZ X20, 0x31D6CB8
	0x031D6CB0 LDR X0, [X31 + 0x8]
	0x031D6CB4 BL 0x1D2C690
	0x031D6CB8 MOV X0, X20
	0x031D6CBC BL 0x1C16F18
	0x031D6CC0 BL 0x1990590
	0x031D6CC4 STR X30, [X31 - 0x20]!
	0x031D6CC8 STP X20, X19, [X31 + 0x10]
	0x031D6CCC ADRP X19, 0x1206000
	0x031D6CD0 LDRB W8, [X19 + 0x39]
	0x031D6CD4 MOV X20, X0
	0x031D6CD8 TBNZ X8, 0x0, 0x31D6CF0
	0x031D6CDC ADRP X0, 0xF1D000
	0x031D6CE0 LDR X0, [X0 + 0xE00]
	0x031D6CE4 BL 0x1C16CF4
	0x031D6CE8 MOVZ W8, 0x1
	0x031D6CEC STRB W8, [X19 + 0x39]
	0x031D6CF0 LDR X19, [X20 + 0x40]
	0x031D6CF4 MOVN W8, 0x0
	0x031D6CF8 STR W8, [X20 + 0x10]
	0x031D6CFC CBZ X19, 0x31D6D48
	0x031D6D00 ADRP X10, 0xF1D000
	0x031D6D04 LDR X8, [X19]
	0x031D6D08 LDR X10, [X10 + 0xE00]
	0x031D6D0C LDRH W9, [X8 + 0x12E]
	0x031D6D10 LDR X1, [X10]
	0x031D6D14 CBZ X9, 0x31D6D38
	0x031D6D18 LDR X10, [X8 + 0xB0]
	0x031D6D1C ADD X10, X10, 0x8
	0x031D6D20 LDUR X11, [X10 - 0x8]
	0x031D6D24 CMP X11, X1
	0x031D6D28 B.EQ 0x31D6D54
	0x031D6D2C SUBS X9, X9, 0x1
	0x031D6D30 ADD X10, X10, 0x10
	0x031D6D34 B.NE 0x31D6D20
	0x031D6D38 MOV X0, X19
	0x031D6D3C MOV W2, W31
	0x031D6D40 BL 0x1C5C788
	0x031D6D44 B 0x31D6D60
	0x031D6D48 LDP X20, X19, [X31 + 0x10]
	0x031D6D4C LDR X30, [X31], #0x20
	0x031D6D50 RET
	0x031D6D54 LDRSW X9, [X10]
	0x031D6D58 ADD X8, X8, X9, 0x4, LSL
	0x031D6D5C ADD X0, X8, 0x138
	0x031D6D60 LDP X2, X1, [X0]
	0x031D6D64 MOV X0, X19
	0x031D6D68 LDP X20, X19, [X31 + 0x10]
	0x031D6D6C LDR X30, [X31], #0x20
	0x031D6D70 BR X2
	0x031D6D74 STR X30, [X31 - 0x20]!
	0x031D6D78 STP X20, X19, [X31 + 0x10]
	0x031D6D7C ADRP X20, 0x1206000
	0x031D6D80 LDRB W8, [X20 + 0x8D]
	0x031D6D84 MOV X19, X0
	0x031D6D88 TBNZ X8, 0x0, 0x31D6DAC
	0x031D6D8C ADRP X0, 0xF4A000
	0x031D6D90 LDR X0, [X0 + 0x158]
	0x031D6D94 BL 0x1C16CF4
	0x031D6D98 ADRP X0, 0xF4A000
	0x031D6D9C LDR X0, [X0 + 0x160]
	0x031D6DA0 BL 0x1C16CF4
	0x031D6DA4 MOVZ W8, 0x1
	0x031D6DA8 STRB W8, [X20 + 0x8D]
	0x031D6DAC LDR W8, [X19 + 0x10]
	0x031D6DB0 CMP W8, 0x6
	0x031D6DB4 B.EQ 0x31D6DD8
	0x031D6DB8 CMP W8, 0x5
	0x031D6DBC B.NE 0x31D6DFC
	0x031D6DC0 LDR X8, [X19 + 0x30]
	0x031D6DC4 CBZ X8, 0x31D6DF8
	0x031D6DC8 LDR W0, [X8 + 0x18]
	0x031D6DCC LDP X20, X19, [X31 + 0x10]
	0x031D6DD0 LDR X30, [X31], #0x20
	0x031D6DD4 RET
	0x031D6DD8 LDR X0, [X19 + 0x40]
	0x031D6DDC CBZ X0, 0x31D6DF8
	0x031D6DE0 ADRP X8, 0xF4A000
	0x031D6DE4 LDR X8, [X8 + 0x158]
	0x031D6DE8 LDP X20, X19, [X31 + 0x10]
	0x031D6DEC LDR X1, [X8]
	0x031D6DF0 LDR X30, [X31], #0x20
	0x031D6DF4 B 0x2AA4E88
	0x031D6DF8 BL 0x1C16F20
	0x031D6DFC ADRP X0, 0xF25000
	0x031D6E00 LDR X0, [X0 + 0x760]
	0x031D6E04 BL 0x1C16D08
	0x031D6E08 BL 0x1C16F10
	0x031D6E0C MOV X1, X31
	0x031D6E10 MOV X19, X0
	0x031D6E14 BL 0x3315FB8
	0x031D6E18 ADRP X0, 0xF4A000
	0x031D6E1C LDR X0, [X0 + 0x168]
	0x031D6E20 BL 0x1C16D08
	0x031D6E24 MOV X1, X0
	0x031D6E28 MOV X0, X19
	0x031D6E2C BL 0x1C16DEC
	0x031D6E30 LDR X0, [X0 + 0x18]
	0x031D6E34 RET
	0x031D6E38 STP X30, X19, [X31 - 0x10]!
	0x031D6E3C ADRP X0, 0xF1D000
	0x031D6E40 LDR X0, [X0 + 0xB40]
	0x031D6E44 BL 0x1C16D08
	0x031D6E48 BL 0x1C16F10
	0x031D6E4C MOV X1, X31
	0x031D6E50 MOV X19, X0
	0x031D6E54 BL 0x3380310
	0x031D6E58 ADRP X0, 0xF4A000
	0x031D6E5C LDR X0, [X0 + 0x170]
	0x031D6E60 BL 0x1C16D08
	0x031D6E64 MOV X1, X0
	0x031D6E68 MOV X0, X19
	0x031D6E6C BL 0x1C16DEC
	0x031D6E70 LDR X0, [X0 + 0x18]
	0x031D6E74 RET
	0x031D6E78 LDR W8, [X0 + 0x10]
	0x031D6E7C ADD W8, W8, 0x4
	0x031D6E80 CMP W8, 0x6
	0x031D6E84 B.HI 0x31D6EA8
	0x031D6E88 ADRP X9, 0xFFFFFFFFFD957000
	0x031D6E8C ADD X9, X9, 0xCBA
	0x031D6E90 ADR X10, 0x10
	0x031D6E94 LDRB W11, [X9, X8, LSL]
	0x031D6E98 ADD X10, X10, X11, 0x2, LSL
	0x031D6E9C BR X10
	0x031D6EA0 B 0x31D75B4
	0x031D6EA4 B 0x31D7504
	0x031D6EA8 RET
	0x031D6EAC SUB X31, X31, 0x30
	0x031D6EB0 STP X30, X0, [X31 + 0x10]
	0x031D6EB4 STP X20, X19, [X31 + 0x20]
	0x031D6EB8 ADRP X20, 0x1206000
	0x031D6EBC LDRB W8, [X20 + 0x3A]
	0x031D6EC0 MOV X19, X0
	0x031D6EC4 TBNZ X8, 0x0, 0x31D6F84
	0x031D6EC8 ADRP X0, 0xF49000
	0x031D6ECC LDR X0, [X0 + 0xDE8]
	0x031D6ED0 BL 0x1C16CF4
	0x031D6ED4 ADRP X0, 0xF26000
	0x031D6ED8 LDR X0, [X0 + 0x9E8]
	0x031D6EDC BL 0x1C16CF4
	0x031D6EE0 ADRP X0, 0xF1D000
	0x031D6EE4 LDR X0, [X0 + 0xAC8]
	0x031D6EE8 BL 0x1C16CF4
	0x031D6EEC ADRP X0, 0xF4A000
	0x031D6EF0 LDR X0, [X0 + 0xF8]
	0x031D6EF4 BL 0x1C16CF4
	0x031D6EF8 ADRP X0, 0xF4A000
	0x031D6EFC LDR X0, [X0 + 0x178]
	0x031D6F00 BL 0x1C16CF4
	0x031D6F04 ADRP X0, 0xF4A000
	0x031D6F08 LDR X0, [X0 + 0x180]
	0x031D6F0C BL 0x1C16CF4
	0x031D6F10 ADRP X0, 0xF4A000
	0x031D6F14 LDR X0, [X0 + 0x188]
	0x031D6F18 BL 0x1C16CF4
	0x031D6F1C ADRP X0, 0xF4A000
	0x031D6F20 LDR X0, [X0 + 0x190]
	0x031D6F24 BL 0x1C16CF4
	0x031D6F28 ADRP X0, 0xF4A000
	0x031D6F2C LDR X0, [X0 + 0x198]
	0x031D6F30 BL 0x1C16CF4
	0x031D6F34 ADRP X0, 0xF29000
	0x031D6F38 LDR X0, [X0 + 0x690]
	0x031D6F3C BL 0x1C16CF4
	0x031D6F40 ADRP X0, 0xF4A000
	0x031D6F44 LDR X0, [X0 + 0x1A0]
	0x031D6F48 BL 0x1C16CF4
	0x031D6F4C ADRP X0, 0xF28000
	0x031D6F50 LDR X0, [X0 + 0xCD8]
	0x031D6F54 BL 0x1C16CF4
	0x031D6F58 ADRP X0, 0xF4A000
	0x031D6F5C LDR X0, [X0 + 0x1A8]
	0x031D6F60 BL 0x1C16CF4
	0x031D6F64 ADRP X0, 0xF4A000
	0x031D6F68 LDR X0, [X0 + 0x1B0]
	0x031D6F6C BL 0x1C16CF4
	0x031D6F70 ADRP X0, 0xF4A000
	0x031D6F74 LDR X0, [X0 + 0x1B8]
	0x031D6F78 BL 0x1C16CF4
	0x031D6F7C MOVZ W8, 0x1
	0x031D6F80 STRB W8, [X20 + 0x3A]
	0x031D6F84 ADD X8, X31, 0x18
	0x031D6F88 STP X31, X8, [X31]
	0x031D6F8C LDR W8, [X19 + 0x10]
	0x031D6F90 CMP W8, 0x2
	0x031D6F94 B.EQ 0x31D737C
	0x031D6F98 CMP W8, 0x1
	0x031D6F9C B.EQ 0x31D71B0
	0x031D6FA0 CBNZ W8, 0x31D74C0
	0x031D6FA4 MOVN W8, 0x0
	0x031D6FA8 STR W8, [X19 + 0x10]
	0x031D6FAC ADRP X8, 0xF1D000
	0x031D6FB0 LDR X8, [X8 + 0xAC8]
	0x031D6FB4 LDR X0, [X8]
	0x031D6FB8 MOVZ W1, 0xB
	0x031D6FBC BL 0x1C16D6C
	0x031D6FC0 CBZ X0, 0x31D739C
	0x031D6FC4 LDR W8, [X0 + 0x18]
	0x031D6FC8 CBZ W8, 0x31D73A0
	0x031D6FCC ADRP X9, 0xF4A000
	0x031D6FD0 LDR X9, [X9 + 0x198]
	0x031D6FD4 CMP W8, 0x1
	0x031D6FD8 LDR X9, [X9]
	0x031D6FDC STR X9, [X0 + 0x20]
	0x031D6FE0 B.EQ 0x31D73A4
	0x031D6FE4 LDR X9, [X31 + 0x18]
	0x031D6FE8 CMP W8, 0x2
	0x031D6FEC LDR X9, [X9 + 0x20]
	0x031D6FF0 STR X9, [X0 + 0x28]
	0x031D6FF4 B.LS 0x31D73A8
	0x031D6FF8 ADRP X9, 0xF4A000
	0x031D6FFC LDR X9, [X9 + 0x1A0]
	0x031D7000 CMP W8, 0x3
	0x031D7004 LDR X9, [X9]
	0x031D7008 STR X9, [X0 + 0x30]
	0x031D700C B.EQ 0x31D73AC
	0x031D7010 LDR X9, [X31 + 0x18]
	0x031D7014 CMP W8, 0x4
	0x031D7018 LDR X9, [X9 + 0x28]
	0x031D701C STR X9, [X0 + 0x38]
	0x031D7020 B.LS 0x31D73B0
	0x031D7024 ADRP X9, 0xF49000
	0x031D7028 LDR X9, [X9 + 0x180]
	0x031D702C CMP W8, 0x5
	0x031D7030 LDR X9, [X9]
	0x031D7034 STR X9, [X0 + 0x40]
	0x031D7038 B.EQ 0x31D73B4
	0x031D703C LDR X9, [X31 + 0x18]
	0x031D7040 CMP W8, 0x6
	0x031D7044 LDR X9, [X9 + 0x30]
	0x031D7048 STR X9, [X0 + 0x48]
	0x031D704C B.LS 0x31D73B8
	0x031D7050 ADRP X9, 0xF49000
	0x031D7054 LDR X9, [X9 + 0x1B0]
	0x031D7058 CMP W8, 0x7
	0x031D705C LDR X9, [X9]
	0x031D7060 STR X9, [X0 + 0x50]
	0x031D7064 B.EQ 0x31D73BC
	0x031D7068 LDR X9, [X31 + 0x18]
	0x031D706C CMP W8, 0x8
	0x031D7070 LDR X9, [X9 + 0x30]
	0x031D7074 STR X9, [X0 + 0x58]
	0x031D7078 B.LS 0x31D73C0
	0x031D707C ADRP X9, 0xF27000
	0x031D7080 LDR X9, [X9 + 0xCD8]
	0x031D7084 CMP W8, 0x9
	0x031D7088 LDR X9, [X9]
	0x031D708C STR X9, [X0 + 0x60]
	0x031D7090 B.EQ 0x31D73C4
	0x031D7094 LDR X9, [X31 + 0x18]
	0x031D7098 CMP W8, 0xA
	0x031D709C LDR X9, [X9 + 0x38]
	0x031D70A0 STR X9, [X0 + 0x68]
	0x031D70A4 B.LS 0x31D73C8
	0x031D70A8 ADRP X8, 0xF49000
	0x031D70AC LDR X8, [X8 + 0x190]
	0x031D70B0 LDR X8, [X8]
	0x031D70B4 STR X8, [X0 + 0x70]
	0x031D70B8 MOV X1, X31
	0x031D70BC BL 0x32278CC
	0x031D70C0 MOV X19, X0
	0x031D70C4 MOV X0, X31
	0x031D70C8 BL 0x3241948
	0x031D70CC CBZ X0, 0x31D73CC
	0x031D70D0 LDR X8, [X0]
	0x031D70D4 LDR X9, [X8 + 0x268]
	0x031D70D8 LDR X2, [X8 + 0x270]
	0x031D70DC MOV X1, X19
	0x031D70E0 BLR X9
	0x031D70E4 ADRP X8, 0xF25000
	0x031D70E8 LDR X8, [X8 + 0x9E8]
	0x031D70EC MOV X19, X0
	0x031D70F0 LDR X0, [X8]
	0x031D70F4 LDR W8, [X0 + 0xE0]
	0x031D70F8 CBNZ W8, 0x31D7100
	0x031D70FC BL 0x1C16DFC
	0x031D7100 MOV X0, X19
	0x031D7104 MOV X1, X31
	0x031D7108 BL 0x33225A0
	0x031D710C ADRP X8, 0xF49000
	0x031D7110 LDR X8, [X8 + 0xF8]
	0x031D7114 MOV X20, X0
	0x031D7118 LDR X0, [X8]
	0x031D711C BL 0x1C16F10
	0x031D7120 MOV X19, X0
	0x031D7124 MOV X1, X31
	0x031D7128 BL 0x3E5B7FC
	0x031D712C CBZ X19, 0x31D73D0
	0x031D7130 ADRP X8, 0xF28000
	0x031D7134 LDR X8, [X8 + 0x690]
	0x031D7138 LDR X1, [X8]
	0x031D713C MOV X0, X19
	0x031D7140 MOV X2, X20
	0x031D7144 MOV X3, X31
	0x031D7148 BL 0x3E5B978
	0x031D714C ADRP X20, 0xF48000
	0x031D7150 LDR X20, [X20 + 0xDE8]
	0x031D7154 LDR X0, [X20]
	0x031D7158 LDR W8, [X0 + 0xE0]
	0x031D715C CBNZ W8, 0x31D7168
	0x031D7160 BL 0x1C16DFC
	0x031D7164 LDR X0, [X20]
	0x031D7168 LDR X8, [X0 + 0xB8]
	0x031D716C LDR X0, [X8]
	0x031D7170 MOV X1, X19
	0x031D7174 MOV X2, X31
	0x031D7178 BL 0x3E60610
	0x031D717C LDR X8, [X31 + 0x18]
	0x031D7180 MOVN W9, 0x2
	0x031D7184 STR X0, [X8 + 0x48]
	0x031D7188 STR W9, [X8 + 0x10]
	0x031D718C CBZ X0, 0x31D73D4
	0x031D7190 MOV X1, X31
	0x031D7194 BL 0x3E5F060
	0x031D7198 LDR X9, [X31 + 0x18]
	0x031D719C MOV X8, X0
	0x031D71A0 MOVZ W0, 0x1
	0x031D71A4 STR X8, [X9 + 0x18]
	0x031D71A8 STR W0, [X9 + 0x10]
	0x031D71AC B 0x31D74C4
	0x031D71B0 MOVN W8, 0x2
	0x031D71B4 STR W8, [X19 + 0x10]
	0x031D71B8 MOV X0, X19
	0x031D71BC BL 0x31D7504
	0x031D71C0 LDR X8, [X31 + 0x18]
	0x031D71C4 LDRB W9, [X8 + 0x40]
	0x031D71C8 STR X31, [X8 + 0x48]
	0x031D71CC CBZ W9, 0x31D74C0
	0x031D71D0 ADRP X8, 0xF1C000
	0x031D71D4 LDR X8, [X8 + 0xAC8]
	0x031D71D8 LDR X0, [X8]
	0x031D71DC MOVZ W1, 0x7
	0x031D71E0 BL 0x1C16D6C
	0x031D71E4 CBZ X0, 0x31D73D8
	0x031D71E8 LDR W8, [X0 + 0x18]
	0x031D71EC CBZ W8, 0x31D73DC
	0x031D71F0 ADRP X9, 0xF49000
	0x031D71F4 LDR X9, [X9 + 0x1B8]
	0x031D71F8 CMP W8, 0x1
	0x031D71FC LDR X9, [X9]
	0x031D7200 STR X9, [X0 + 0x20]
	0x031D7204 B.EQ 0x31D73E0
	0x031D7208 LDR X9, [X31 + 0x18]
	0x031D720C CMP W8, 0x2
	0x031D7210 LDR X9, [X9 + 0x20]
	0x031D7214 STR X9, [X0 + 0x28]
	0x031D7218 B.LS 0x31D73E4
	0x031D721C ADRP X9, 0xF49000
	0x031D7220 LDR X9, [X9 + 0x188]
	0x031D7224 CMP W8, 0x3
	0x031D7228 LDR X9, [X9]
	0x031D722C STR X9, [X0 + 0x30]
	0x031D7230 B.EQ 0x31D73E8
	0x031D7234 LDR X9, [X31 + 0x18]
	0x031D7238 CMP W8, 0x4
	0x031D723C LDR X9, [X9 + 0x28]
	0x031D7240 STR X9, [X0 + 0x38]
	0x031D7244 B.LS 0x31D73EC
	0x031D7248 ADRP X9, 0xF49000
	0x031D724C LDR X9, [X9 + 0x178]
	0x031D7250 CMP W8, 0x5
	0x031D7254 LDR X9, [X9]
	0x031D7258 STR X9, [X0 + 0x40]
	0x031D725C B.EQ 0x31D73F0
	0x031D7260 LDR X9, [X31 + 0x18]
	0x031D7264 CMP W8, 0x6
	0x031D7268 LDR X9, [X9 + 0x30]
	0x031D726C STR X9, [X0 + 0x48]
	0x031D7270 B.LS 0x31D73F4
	0x031D7274 ADRP X8, 0xF49000
	0x031D7278 LDR X8, [X8 + 0x1A8]
	0x031D727C LDR X8, [X8]
	0x031D7280 STR X8, [X0 + 0x50]
	0x031D7284 MOV X1, X31
	0x031D7288 BL 0x32278CC
	0x031D728C MOV X19, X0
	0x031D7290 MOV X0, X31
	0x031D7294 BL 0x3241948
	0x031D7298 CBZ X0, 0x31D73F8
	0x031D729C LDR X8, [X0]
	0x031D72A0 LDR X9, [X8 + 0x268]
	0x031D72A4 LDR X2, [X8 + 0x270]
	0x031D72A8 MOV X1, X19
	0x031D72AC BLR X9
	0x031D72B0 ADRP X8, 0xF25000
	0x031D72B4 LDR X8, [X8 + 0x9E8]
	0x031D72B8 MOV X19, X0
	0x031D72BC LDR X0, [X8]
	0x031D72C0 LDR W8, [X0 + 0xE0]
	0x031D72C4 CBNZ W8, 0x31D72CC
	0x031D72C8 BL 0x1C16DFC
	0x031D72CC MOV X0, X19
	0x031D72D0 MOV X1, X31
	0x031D72D4 BL 0x33225A0
	0x031D72D8 ADRP X8, 0xF49000
	0x031D72DC LDR X8, [X8 + 0xF8]
	0x031D72E0 MOV X20, X0
	0x031D72E4 LDR X0, [X8]
	0x031D72E8 BL 0x1C16F10
	0x031D72EC MOV X19, X0
	0x031D72F0 MOV X1, X31
	0x031D72F4 BL 0x3E5B7FC
	0x031D72F8 CBZ X19, 0x31D73FC
	0x031D72FC ADRP X8, 0xF28000
	0x031D7300 LDR X8, [X8 + 0x690]
	0x031D7304 LDR X1, [X8]
	0x031D7308 MOV X0, X19
	0x031D730C MOV X2, X20
	0x031D7310 MOV X3, X31
	0x031D7314 BL 0x3E5B978

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X0
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x1207000
	007 Move W8, [X20+56]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {60}
	013 Move X0, 0xF4A000
	014 Move X0, [X0+3560]
	015 Call 0x1C17CF4
	016 Move X0, 0xF4A000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0xF1F000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move X0, 0xF1E000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move X0, 0xF4A000
	026 Move X0, [X0+3808]
	027 Call 0x1C17CF4
	028 Move X0, 0xF1E000
	029 Move X0, [X0+2760]
	030 Call 0x1C17CF4
	031 Move X0, 0xF4B000
	032 Move X0, [X0+248]
	033 Call 0x1C17CF4
	034 Move X0, 0xF4B000
	035 Move X0, [X0+256]
	036 Call 0x1C17CF4
	037 Move X0, 0xF4B000
	038 Move X0, [X0+264]
	039 Call 0x1C17CF4
	040 Move X0, 0xF2A000
	041 Move X0, [X0+1680]
	042 Call 0x1C17CF4
	043 Move X0, 0xF4B000
	044 Move X0, [X0+272]
	045 Call 0x1C17CF4
	046 Move X0, 0xF1F000
	047 Move X0, [X0+1544]
	048 Call 0x1C17CF4
	049 Move X0, 0xF4B000
	050 Move X0, [X0+280]
	051 Call 0x1C17CF4
	052 Move X0, 0xF4B000
	053 Move X0, [X0+288]
	054 Call 0x1C17CF4
	055 Move X0, 0xF4B000
	056 Move X0, [X0+296]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+56], W8
	060 Add X8, X31, 40
	061 Move [X31+8], X31
	062 Move [X31+16], X8
	063 Move [X31+24], X31
	064 Move W8, [X19+16]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare W8, 0
	067 JumpIfNotEqual {389}
	068 Move TEMP, 0
	069 Not TEMP
	070 Move W8, TEMP
	071 Move [X19+16], W8
	072 Move X20, 0xF4A000
	073 Move X20, [X20+3584]
	074 Move X9, 0xF1F000
	075 Move X8, [X20]
	076 Move X9, [X9+2544]
	077 Move X8, [X8+184]
	078 Move X0, [X9]
	079 Move X19, [X8+24]
	080 Move W9, [X0+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X31
	085 Call DateTime.get_Now
	086 Move X1, X0
	087 Move X0, X19
	088 Move X2, X31
	089 Call DateTime.op_GreaterThan, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {162}
	094 Move X8, [X20]
	095 Move X8, [X8+184]
	096 Move W8, [X8+16]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, [X31+40]
	099 Move X8, [X8+32]
	100 Compare X8, 0
	101 JumpIfEqual {389}
	102 Move X0, [X8+64]
	103 Move X9, [X8+24]
	104 Move X2, [X8+40]
	105 Move W1, W31
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move W0, W31
	108 Move X0, [X19+64]
	109 Move TEMP, 2
	110 Not TEMP
	111 Move W8, TEMP
	112 Move [X19+16], W8
	113 Compare X0, 0
	114 JumpIfEqual {396}
	115 Move X1, X31
	116 Call UnityWebRequest.get_result, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, 0xF4A000
	119 Move X8, [X8+3584]
	120 Move X8, [X8]
	121 Move X8, [X8+184]
	122 Move [X8+16], W31
	123 Move X8, 0xF4A000
	124 Move X8, [X8+3808]
	125 Move X0, [X8]
	126 Move X8, [X31+40]
	127 Move W9, [X0+224]
	128 Move X19, [X8+56]
	129 Compare W9, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X0, X19
	133 Call MixpanelStorage.DeleteBatchTrackingData, X0
	134 Move X20, 0xF4A000
	135 Move X20, [X20+3560]
	136 Move X8, [X31+40]
	137 Move X0, [X20]
	138 Move W19, [X8+40]
	139 Move W9, [X0+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X20]
	144 Move X8, [X0+184]
	145 Move W1, [X8+24]
	146 Move W0, W19
	147 Call MixpanelStorage.DequeueBatchTrackingData, X0, X1
	148 Move X8, [X31+40]
	149 Move [X8+56], X0
	150 Move X1, [X8+48]
	151 Move X8, 0xF4B000
	152 Move X8, [X8+288]
	153 Move X0, [X8]
	154 Move X2, X31
	155 Call String.Concat, X0, X1
	156 Call Mixpanel.Log, X0
	157 Move X0, [X31+40]
	158 Call <SendData>d__16.<>m__Finally1, X0
	159 Move X8, [X31+40]
	160 Move X0, [X8+56]
	161 Move [X8+64], X31
	162 Move X20, 0xF4A000
	163 Move X19, [X31+40]
	164 Move X20, [X20+3560]
	165 Move W9, [X19+40]
	166 Move X0, [X20]
	167 Move W8, [X0+224]
	168 Compare W9, 0
	169 JumpIfEqual {295}
	170 Compare W8, 0
	171 JumpIfNotEqual {174}
	172 Call 0x1C17DFC
	173 Move X0, [X20]
	174 Move X8, [X0+184]
	175 Add X8, X8, 8
	176 Move X8, [X31+40]
	177 Move X0, [X8+64]
	178 Compare X0, 0
	179 JumpIfEqual {400}
	180 Move X19, [X8+48]
	181 Move X1, X31
	182 Call UnityWebRequest.get_error, X0
	183 Move X8, 0xF4B000
	184 Move X8, [X8+264]
	185 Move X9, 0xF4B000
	186 Move X9, [X9+280]
	187 Move X3, X0
	188 Move X0, [X8]
	189 Move X2, [X9]
	190 Move X1, X19
	191 Move X4, X31
	192 Call String.Concat, X0, X1, X2, X3
	193 Call Mixpanel.Log, X0
	194 Move X20, 0xF4A000
	195 Move X20, [X20+3584]
	196 Move X8, [X20]
	197 Move X8, [X8+184]
	198 Move W19, [X8+16]
	199 Add W9, W19, 1
	200 Move [X8+16], W9
	201 Move X8, 0xF1E000
	202 Move X8, [X8+1448]
	203 Move X0, [X8]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 NotImplemented "Instruction SCVTF not yet implemented."
	209 Move D0, 2
	210 Move X0, X31
	211 Call Math.Pow, V0, V1
	212 Move X8, 0x404E0000
	213 Move D1, X8
	214 Multiply D0, D0, D1
	215 Move [X31+24], D0
	216 Move X8, -40796160
	217 Move V1, [X8+1456]
	218 Move X0, X31
	219 Call Math.Min, V0, V1
	220 Move X8, 0xF1F000
	221 Move X8, [X8+2544]
	222 Move [X31+24], D0
	223 Move X0, [X8]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, X31
	229 Call DateTime.get_Now
	230 Move X8, [X20]
	231 Move X9, [X8+184]
	232 Move [X9+24], X0
	233 Move X8, [X8+184]
	234 Move V0, [X31+24]
	235 Add X0, X8, 24
	236 Move X1, X31
	237 Call DateTime.AddSeconds, X0, V0
	238 Move X8, [X20]
	239 Move X8, [X8+184]
	240 Move [X8+24], X0
	241 Move X8, 0xF1E000
	242 Move X8, [X8+2760]
	243 Move X0, [X8]
	244 Move W1, 5
	245 Call 0x1C17D6C
	246 Move X19, X0
	247 Compare X0, 0
	248 JumpIfEqual {401}
	249 Move W8, [X19+24]
	250 Compare W8, 0
	251 JumpIfEqual {402}
	252 Move X8, 0xF4B000
	253 Move X8, [X8+256]
	254 Move X8, [X8]
	255 Move [X19+32], X8
	256 Add X0, X31, 24
	257 Move X1, X31
	258 Call Double.ToString, X0
	259 Move W8, [X19+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move [X19+40], X0
	263 Move X8, 0xF4A000
	264 Move X8, [X8+272]
	265 Move X8, [X8]
	266 Move [X19+48], X8
	267 Move X8, [X20]
	268 Move X8, [X8+184]
	269 Add X0, X8, 16
	270 Move X1, X31
	271 Call Int32.ToString, X0
	272 Move W8, [X19+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move [X19+56], X0
	276 Move X8, 0xF1E000
	277 Move X8, [X8+1544]
	278 Move X8, [X8]
	279 Move [X19+64], X8
	280 Move X0, X19
	281 Move X1, X31
	282 Call String.Concat, X0
	283 Call Mixpanel.Log, X0
	284 Move X0, [X31+40]
	285 Move X8, [X0+32]
	286 Compare X8, 0
	287 JumpIfEqual {294}
	288 Move X0, [X8+64]
	289 Move X9, [X8+24]
	290 Move X2, [X8+40]
	291 Move W1, W31
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Move X0, [X31+40]
	294 Call <SendData>d__16.<>m__Finally1, X0
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move X0, [X20]
	299 Move X8, [X0+184]
	300 Move X8, [X8]
	301 Move [X19+48], X8
	302 Move X8, [X31+40]
	303 Move W9, [X0+224]
	304 Move W19, [X8+40]
	305 Compare W9, 0
	306 JumpIfNotEqual {309}
	307 Call 0x1C17DFC
	308 Move X0, [X20]
	309 Move X8, 0xF49000
	310 Move X8, [X8+3808]
	311 Move X9, [X0+184]
	312 Move X8, [X8]
	313 Move W20, [X9+24]
	314 Move W10, [X8+224]
	315 Compare W10, 0
	316 JumpIfNotEqual {319}
	317 Move X0, X8
	318 Call 0x1C17DFC
	319 Move W0, W19
	320 Move W1, W20
	321 Call MixpanelStorage.DequeueBatchTrackingData, X0, X1
	322 Move X8, [X31+40]
	323 Move [X8+56], X0
	324 Compare X0, 0
	325 JumpIfEqual {395}
	326 Call Value.get_Count, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X8, 0xF4A000
	329 Move X8, [X8+248]
	330 Move X0, [X8]
	331 Call 0x1C17F10
	332 Move X19, X0
	333 Move X1, X31
	334 Call WWWForm..ctor, X0
	335 Move X8, [X31+40]
	336 Move X0, [X8+56]
	337 Compare X0, 0
	338 JumpIfEqual {397}
	339 Move X8, [X0]
	340 Move X9, [X8+360]
	341 Move X1, [X8+368]
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Compare X19, 0
	344 JumpIfEqual {398}
	345 Move X8, 0xF29000
	346 Move X8, [X8+1680]
	347 Move X20, X0
	348 Move X1, [X8]
	349 Move X0, X19
	350 Move X2, X20
	351 Move X3, X31
	352 Call WWWForm.AddField, X0, X1, X2
	353 Move X8, 0xF4A000
	354 Move X8, [X8+296]
	355 Move X0, [X8]
	356 Move X1, X20
	357 Move X2, X31
	358 Call String.Concat, X0, X1
	359 Call Mixpanel.Log, X0
	360 Move X8, [X31+40]
	361 Move X0, [X8+48]
	362 Move X1, X19
	363 Move X2, X31
	364 Call UnityWebRequest.Post, X0, X1
	365 Move X8, [X31+40]
	366 Move TEMP, 2
	367 Not TEMP
	368 Move W9, TEMP
	369 Move [X8+64], X0
	370 Move [X8+16], W9
	371 Compare X0, 0
	372 JumpIfEqual {399}
	373 Move X1, X31
	374 Call UnityWebRequest.SendWebRequest, X0
	375 Move X9, [X31+40]
	376 Move X8, X0
	377 Move W0, 1
	378 Move [X9+24], X8
	379 Move [X9+16], W0
	380 Move X8, [X31+40]
	381 Move X8, [X8+32]
	382 Compare X8, 0
	383 JumpIfEqual {389}
	384 Move X0, [X8+64]
	385 Move X9, [X8+24]
	386 Move X2, [X8+40]
	387 Move W1, 1
	388 NotImplemented "Instruction BLR not yet implemented."
	389 Move W0, W31
	390 Move X20, [X31+48]
	391 Move X19, [X31+56]
	392 Move X30, [X31+32]
	393 Add X31, X31, 64
	394 Return X0
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F28
	403 Call 0x1C17F28
	404 Call 0x1C17F28
	405 Call 0x1C17F28
	406 Call 0x1C17F28
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Call 0x3EB2AD0
	409 Move X19, [X0]
	410 Move [X31+8], X19
	411 Call 0x3EB2AE0
	412 Compare X19, 0
	413 JumpIfEqual {389}
	414 Add X8, X31, 8
	415 Add X0, X8, 8
	416 Call 0x1BB440C
	417 Move X0, X19
	418 Call 0x1C17F18
	419 Compare X19, 0
	420 JumpIfNotEqual {422}
	421 Call 0x1D2D690
	422 Move X0, [X31+40]
	423 Move W8, [X0+16]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Add W31, W8, 3
	426 Call <SendData>d__16.<>m__Finally1, X0
	427 Move X0, X19
	428 Call 0x1C17F18
	429 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x031D7CC4 MOV X2, X31
	0x031D7CC8 BL 0x321BA08
	0x031D7CCC TBZ X0, 0x0, 0x31D7CDC
	0x031D7CD0 LDP X20, X19, [X31 + 0x10]
	0x031D7CD4 LDR X30, [X31], #0x20
	0x031D7CD8 RET
	0x031D7CDC LDR X0, [X20]
	0x031D7CE0 LDR W8, [X0 + 0xE0]
	0x031D7CE4 CBNZ W8, 0x31D7CEC
	0x031D7CE8 BL 0x1C16DFC
	0x031D7CEC BL 0x31D50AC
	0x031D7CF0 MOV X20, X0
	0x031D7CF4 MOV X0, X19
	0x031D7CF8 BL 0x31D3758
	0x031D7CFC MOV X0, X20
	0x031D7D00 BL 0x31D3DD8
	0x031D7D04 ADRP X8, 0xF49000
	0x031D7D08 LDR X8, [X8 + 0x1E8]
	0x031D7D0C ADRP X9, 0xF49000
	0x031D7D10 LDR X9, [X9 + 0x1F0]
	0x031D7D14 LDP X20, X19, [X31 + 0x10]
	0x031D7D18 LDR X8, [X8]
	0x031D7D1C MOV X2, X0
	0x031D7D20 LDR X1, [X9]
	0x031D7D24 MOV X0, X8
	0x031D7D28 LDR X30, [X31], #0x20
	0x031D7D2C B 0x31D7D30
	0x031D7D30 STR X30, [X31 - 0x30]!
	0x031D7D34 STP X22, X21, [X31 + 0x10]
	0x031D7D38 STP X20, X19, [X31 + 0x20]
	0x031D7D3C ADRP X22, 0x1205000
	0x031D7D40 LDRB W8, [X22 + 0x50]
	0x031D7D44 MOV X19, X2
	0x031D7D48 MOV X21, X1
	0x031D7D4C MOV X20, X0
	0x031D7D50 TBNZ X8, 0x0, 0x31D7D68
	0x031D7D54 ADRP X0, 0xF21000
	0x031D7D58 LDR X0, [X0 + 0x748]
	0x031D7D5C BL 0x1C16CF4
	0x031D7D60 MOVZ W8, 0x1
	0x031D7D64 STRB W8, [X22 + 0x50]
	0x031D7D68 BL 0x31D77D8
	0x031D7D6C TBZ X0, 0x0, 0x31D7DB4
	0x031D7D70 ADRP X8, 0xF21000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1206000
	005 Move W8, [X19+57]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF1D000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+57], W8
	016 Move X19, [X20+64]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0xF1D000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Object System.Collections.Generic.IEnumerator<System.Object>.get_Current()

Disassembly:
	0x031D7E30 ADRP X0, 0xF48000
	0x031D7E34 LDR X0, [X0 + 0xEE0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x031D7E38 BL 0x1C16CF4
	0x031D7E3C MOVZ W8, 0x1
	0x031D7E40 STRB W8, [X19 + 0x47]
	0x031D7E44 LDR X0, [X20]
	0x031D7E48 LDR W8, [X0 + 0xE0]
	0x031D7E4C CBNZ W8, 0x31D7E54
	0x031D7E50 BL 0x1C16DFC
	0x031D7E54 LDP X20, X19, [X31 + 0x10]
	0x031D7E58 LDR X30, [X31], #0x20
	0x031D7E5C B 0x31D50AC
	0x031D7E60 STP X30, X19, [X31 - 0x10]!
	0x031D7E64 ADRP X19, 0x1205000
	0x031D7E68 LDRB W8, [X19 + 0x48]
	0x031D7E6C TBNZ X8, 0x0, 0x31D7E84

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0xF1D000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0xF4A000
	011 Move X0, [X0+368]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x031D7E70 ADRP X0, 0xF48000
	0x031D7E74 LDR X0, [X0 + 0xEE0]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

