Type: mixpanel.MixpanelSettings

Method: System.String get_Token()

Disassembly:
	0x031DA364 LDR X0, [X0 + 0xC48]
	0x031DA368 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void ApplyToConfig()

Disassembly:
	0x031D32C4 MOV X2, X20
	0x031D32C8 BL 0x31D32F4
	0x031D32CC MOV X1, X0
	0x031D32D0 MOV X0, X19
	0x031D32D4 LDP X20, X19, [X31 + 0x20]
	0x031D32D8 LDP X22, X21, [X31 + 0x10]
	0x031D32DC MOV X2, X31
	0x031D32E0 LDR X30, [X31], #0x30
	0x031D32E4 B 0x3C366FC
	0x031D32E8 BL 0x1C16F20
	0x031D32EC MOV X1, X31
	0x031D32F0 B 0x33BDD8C
	0x031D32F4 STR X30, [X31 - 0x30]!
	0x031D32F8 STP X22, X21, [X31 + 0x10]
	0x031D32FC STP X20, X19, [X31 + 0x20]
	0x031D3300 ADRP X21, 0x1209000
	0x031D3304 ADRP X22, 0xF4C000
	0x031D3308 LDRB W8, [X21 + 0x2C]
	0x031D330C LDR X22, [X22 + 0xF50]
	0x031D3310 MOV X19, X2
	0x031D3314 MOV W20, W1
	0x031D3318 TBNZ X8, 0x0, 0x31D3330
	0x031D331C ADRP X0, 0xF4C000
	0x031D3320 LDR X0, [X0 + 0xF50]
	0x031D3324 BL 0x1C16CF4
	0x031D3328 MOVZ W8, 0x1
	0x031D332C STRB W8, [X21 + 0x2C]
	0x031D3330 LDR X0, [X22]
	0x031D3334 BL 0x1C16F10
	0x031D3338 MOV X1, X31
	0x031D333C MOV X21, X0
	0x031D3340 BL 0x33BDD8C
	0x031D3344 STR W31, [X21 + 0x10]
	0x031D3348 STR W20, [X21 + 0x28]
	0x031D334C STR X19, [X21 + 0x20]
	0x031D3350 MOV X0, X21
	0x031D3354 LDP X20, X19, [X31 + 0x20]
	0x031D3358 LDP X22, X21, [X31 + 0x10]
	0x031D335C LDR X30, [X31], #0x30
	0x031D3360 RET
	0x031D3364 STR X30, [X31 - 0x20]!
	0x031D3368 STP X20, X19, [X31 + 0x10]
	0x031D336C MOV W19, W1
	0x031D3370 MOV X1, X31
	0x031D3374 MOV X20, X0
	0x031D3378 BL 0x33BDD8C
	0x031D337C STR W19, [X20 + 0x10]
	0x031D3380 LDP X20, X19, [X31 + 0x10]
	0x031D3384 LDR X30, [X31], #0x20
	0x031D3388 RET
	0x031D338C LDR W8, [X2]
	0x031D3390 SUB W8, W8, 0x1
	0x031D3394 STR W8, [X2]
	0x031D3398 CBZ X1, 0x31D33B4
	0x031D339C CBNZ W8, 0x31D33B4
	0x031D33A0 LDR X4, [X1 + 0x18]
	0x031D33A4 LDR X0, [X1 + 0x40]
	0x031D33A8 LDR X2, [X1 + 0x28]
	0x031D33AC AND W1, W3, 0x1
	0x031D33B0 BR X4
	0x031D33B4 RET
	0x031D33B8 STP X30, X25, [X31 - 0x40]!
	0x031D33BC STP X24, X23, [X31 + 0x10]
	0x031D33C0 STP X22, X21, [X31 + 0x20]
	0x031D33C4 STP X20, X19, [X31 + 0x30]
	0x031D33C8 ADRP X25, 0x1209000
	0x031D33CC ADRP X24, 0xF4C000
	0x031D33D0 LDRB W8, [X25 + 0x2D]
	0x031D33D4 LDR X24, [X24 + 0xF58]
	0x031D33D8 MOV W23, W5
	0x031D33DC MOV X19, X4
	0x031D33E0 MOV X20, X3
	0x031D33E4 MOV X21, X2
	0x031D33E8 MOV X22, X1
	0x031D33EC TBNZ X8, 0x0, 0x31D3404
	0x031D33F0 ADRP X0, 0xF4C000
	0x031D33F4 LDR X0, [X0 + 0xF58]
	0x031D33F8 BL 0x1C16CF4
	0x031D33FC MOVZ W8, 0x1
	0x031D3400 STRB W8, [X25 + 0x2D]
	0x031D3404 LDR X0, [X24]
	0x031D3408 AND W24, W23, 0x1
	0x031D340C BL 0x1C16F10
	0x031D3410 MOV X1, X31
	0x031D3414 MOV X23, X0
	0x031D3418 BL 0x33BDD8C
	0x031D341C STR W31, [X23 + 0x10]
	0x031D3420 STP X22, X21, [X23 + 0x20]
	0x031D3424 STP X20, X19, [X23 + 0x30]
	0x031D3428 STRB W24, [X23 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x120A000
	010 Move W8, [X20+102]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xF4D000
	017 Move X0, [X0+3560]
	018 Call 0x1C17CF4
	019 Move X0, 0xF22000
	020 Move X0, [X0+3784]
	021 Call 0x1C17CF4
	022 Move X0, 0xF4D000
	023 Move X0, [X0+3744]
	024 Call 0x1C17CF4
	025 Move X0, 0xF45000
	026 Move X0, [X0+3776]
	027 Call 0x1C17CF4
	028 Move X0, 0xF23000
	029 Move X0, [X0+1200]
	030 Call 0x1C17CF4
	031 Move X0, 0xF4D000
	032 Move X0, [X0+3752]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+102], W8
	036 Move X0, [X19+32]
	037 Compare X0, 0
	038 JumpIfEqual {106}
	039 Move X25, 0xF22000
	040 Move X25, [X25+3784]
	041 Move X21, 0xF23000
	042 Move X21, [X21+1200]
	043 Move X24, 0xF45000
	044 Move X1, [X25]
	045 Move X22, 0xF4D000
	046 Move X23, 0xF4D000
	047 Move X24, [X24+3776]
	048 Move X22, [X22+3752]
	049 Move X23, [X23+3560]
	050 Move X2, X31
	051 Call String.EndsWith, X0, X1
	052 Move X20, [X19+32]
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {62}
	057 Move X1, [X25]
	058 Move X0, X20
	059 Move X2, X31
	060 Call String.Concat, X0, X1
	061 Move X20, X0
	062 Move W8, [X19+60]
	063 Move X0, [X22]
	064 Move X1, X20
	065 Move X3, X31
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Move X21, [X8]
	069 Move X24, 0xF4D000
	070 Move X24, [X24+3744]
	071 Move X2, X21
	072 Call String.Format, X0, X1, X2
	073 Move X8, [X23]
	074 Move X22, X0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {81}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X8, [X23]
	081 Move X8, [X8+184]
	082 Move X1, X20
	083 Move X2, X21
	084 Move X3, X31
	085 Move [X8], X22
	086 Move X0, [X24]
	087 Call String.Format, X0, X1, X2
	088 Move X8, [X23]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X8, [X8+184]
	094 Move [X8+8], X0
	095 Move W9, [X19+24]
	096 Move [X8+16], W9
	097 Move W9, [X19+25]
	098 Move [X8+17], W9
	099 Move V0, [X19+56]
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move [X8+20], S0
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 Return 
	106 Call 0x1C17F20

Method: System.Void LoadSettings()

Disassembly:
	0x031D2C38 BL 0x32ED2B0
	0x031D2C3C BL 0x31D3590
	0x031D2C40 CBZ X0, 0x31D2E64
	0x031D2C44 BL 0x31D3A28
	0x031D2C48 MOV X21, X0
	0x031D2C4C CBZ X0, 0x31D2E68
	0x031D2C50 ADRP X23, 0xF21000
	0x031D2C54 ADRP X25, 0xF4D000
	0x031D2C58 ADRP X26, 0xF4D000
	0x031D2C5C LDR X23, [X23 + 0xE18]
	0x031D2C60 LDR X25, [X25 + 0xEF8]
	0x031D2C64 LDR X26, [X26 + 0xF20]
	0x031D2C68 LDR X8, [X21]
	0x031D2C6C LDR X1, [X23]
	0x031D2C70 LDRH W9, [X8 + 0x12E]
	0x031D2C74 CBZ X9, 0x31D2C98
	0x031D2C78 LDR X10, [X8 + 0xB0]
	0x031D2C7C ADD X10, X10, 0x8
	0x031D2C80 LDUR X11, [X10 - 0x8]
	0x031D2C84 CMP X11, X1
	0x031D2C88 B.EQ 0x31D2CA8
	0x031D2C8C SUBS X9, X9, 0x1
	0x031D2C90 ADD X10, X10, 0x10
	0x031D2C94 B.NE 0x31D2C80
	0x031D2C98 MOV X0, X21
	0x031D2C9C MOV W2, W31
	0x031D2CA0 BL 0x1C5C788
	0x031D2CA4 B 0x31D2CB4
	0x031D2CA8 LDRSW X9, [X10]
	0x031D2CAC ADD X8, X8, X9, 0x4, LSL
	0x031D2CB0 ADD X0, X8, 0x138
	0x031D2CB4 LDP X8, X1, [X0]
	0x031D2CB8 MOV X0, X21
	0x031D2CBC BLR X8
	0x031D2CC0 TBZ X0, 0x0, 0x31D2D70
	0x031D2CC4 LDR X8, [X21]
	0x031D2CC8 LDR X1, [X23]
	0x031D2CCC LDRH W9, [X8 + 0x12E]
	0x031D2CD0 CBZ X9, 0x31D2CF4
	0x031D2CD4 LDR X10, [X8 + 0xB0]
	0x031D2CD8 ADD X10, X10, 0x8
	0x031D2CDC LDUR X11, [X10 - 0x8]
	0x031D2CE0 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x120B000
	006 Move X20, 0xF4E000
	007 Move X19, 0xF22000
	008 Move W8, [X21+103]
	009 Move X20, [X20+3576]
	010 Move X19, [X19+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xF4E000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move X0, 0xF22000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+103], W8
	023 Move X8, [X20]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move X19, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Call Object.op_Implicit, X0
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {43}
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Call MixpanelSettings.FindOrCreateInstance
	044 Move X8, [X20]
	045 Move X8, [X8+184]
	046 Move [X8], X0
	047 Move X8, [X20]
	048 Move X8, [X8+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {58}
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call MixpanelSettings.ApplyToConfig, X0
	057 Return 
	058 Call 0x1C17F20

Method: mixpanel.MixpanelSettings get_Instance()

Disassembly:
	0x031D3278 ADRP X8, 0xF20000
	0x031D327C LDR X8, [X8 + 0xD28]
	0x031D3280 ADRP X20, 0xF4C000
	0x031D3284 LDR X0, [X8]
	0x031D3288 LDR X20, [X20 + 0xF48]
	0x031D328C BL 0x1C16F10
	0x031D3290 LDR X2, [X20]
	0x031D3294 MOV X1, X21
	0x031D3298 MOV X3, X31
	0x031D329C MOV X20, X0
	0x031D32A0 BL 0x29818C8
	0x031D32A4 MOV W1, W31
	0x031D32A8 MOV X2, X20
	0x031D32AC BL 0x31D32F4
	0x031D32B0 MOV X1, X0
	0x031D32B4 MOV X0, X19
	0x031D32B8 MOV X2, X31
	0x031D32BC BL 0x3C366FC
	0x031D32C0 MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x120A000
	005 Move X19, 0xF4D000
	006 Move W8, [X20+104]
	007 Move X19, [X19+3576]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF4D000
	013 Move X0, [X0+3576]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+104], W8
	017 Call MixpanelSettings.LoadSettings
	018 Move X8, [X19]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X8, [X8+184]
	022 Move X0, [X8]
	023 Move X30, [X31+32]
	024 Return X0

Method: mixpanel.MixpanelSettings FindOrCreateInstance()

Disassembly:
	0x031DA36C ADRP X0, 0xF40000
	0x031DA370 LDR X0, [X0 + 0x260]
	0x031DA374 BL 0x1C16CF4
	0x031DA378 ADRP X0, 0xF19000
	0x031DA37C LDR X0, [X0 + 0x830]
	0x031DA380 BL 0x1C16CF4
	0x031DA384 MOVZ W8, 0x1
	0x031DA388 STRB W8, [X20 + 0x8B]
	0x031DA38C LDR W8, [X19 + 0x10]
	0x031DA390 CMP W8, 0x6
	0x031DA394 B.HI 0x31DA488
	0x031DA398 ADRP X9, 0xFFFFFFFFFD9BC000
	0x031DA39C ADD X9, X9, 0x3D2
	0x031DA3A0 ADR X10, 0x10
	0x031DA3A4 LDRB W11, [X9, X8, LSL]
	0x031DA3A8 ADD X10, X10, X11, 0x2, LSL
	0x031DA3AC BR X10
	0x031DA3B0 ADRP X8, 0xF19000
	0x031DA3B4 LDR X8, [X8 + 0x830]
	0x031DA3B8 LDR X0, [X8]
	0x031DA3BC B 0x31DA40C
	0x031DA3C0 ADRP X8, 0xF40000
	0x031DA3C4 LDR X8, [X8 + 0x260]
	0x031DA3C8 LDR X0, [X8]
	0x031DA3CC BL 0x1C16F10
	0x031DA3D0 MOV X1, X31
	0x031DA3D4 MOV X20, X0
	0x031DA3D8 BL 0x32F7A6C
	0x031DA3DC MOV X0, X19
	0x031DA3E0 MOV X1, X20
	0x031DA3E4 MOV W2, W31
	0x031DA3E8 BL 0x31DA4BC
	0x031DA3EC CBZ X20, 0x31DA484
	0x031DA3F0 LDR X8, [X20]
	0x031DA3F4 MOV X0, X20
	0x031DA3F8 LDP X20, X19, [X31 + 0x10]
	0x031DA3FC LDP X2, X1, [X8 + 0x168]
	0x031DA400 LDR X30, [X31], #0x20
	0x031DA404 BR X2
	0x031DA408 LDR X0, [X19 + 0x18]
	0x031DA40C LDP X20, X19, [X31 + 0x10]
	0x031DA410 LDR X30, [X31], #0x20
	0x031DA414 RET
	0x031DA418 ADRP X8, 0xF19000
	0x031DA41C LDR X8, [X8 + 0xB58]
	0x031DA420 ADD X19, X19, 0x20
	0x031DA424 LDR X0, [X8]
	0x031DA428 LDR W8, [X0 + 0xE0]
	0x031DA42C CBNZ W8, 0x31DA434
	0x031DA430 BL 0x1C16DFC
	0x031DA434 MOV X0, X19
	0x031DA438 LDP X20, X19, [X31 + 0x10]
	0x031DA43C MOV X1, X31
	0x031DA440 LDR X30, [X31], #0x20
	0x031DA444 B 0x33176C4
	0x031DA448 ADRP X8, 0xF1B000
	0x031DA44C LDR X8, [X8 + 0xC48]
	0x031DA450 ADD X19, X19, 0x28
	0x031DA454 LDR X0, [X8]
	0x031DA458 LDR W8, [X0 + 0xE0]
	0x031DA45C CBNZ W8, 0x31DA464
	0x031DA460 BL 0x1C16DFC
	0x031DA464 MOV X0, X31
	0x031DA468 BL 0x3338524
	0x031DA46C MOV X1, X0
	0x031DA470 MOV X0, X19
	0x031DA474 LDP X20, X19, [X31 + 0x10]
	0x031DA478 MOV X2, X31
	0x031DA47C LDR X30, [X31], #0x20
	0x031DA480 B 0x33662E0
	0x031DA484 BL 0x1C16F20
	0x031DA488 ADRP X0, 0xF21000
	0x031DA48C LDR X0, [X0 + 0x760]
	0x031DA490 BL 0x1C16D08
	0x031DA494 BL 0x1C16F10
	0x031DA498 MOV X1, X31
	0x031DA49C MOV X19, X0
	0x031DA4A0 BL 0x3315FB8
	0x031DA4A4 ADRP X0, 0xF46000
	0x031DA4A8 LDR X0, [X0 + 0x318]
	0x031DA4AC BL 0x1C16D08
	0x031DA4B0 MOV X1, X0
	0x031DA4B4 MOV X0, X19
	0x031DA4B8 BL 0x1C16DEC
	0x031DA4BC SUB X31, X31, 0xD0
	0x031DA4C0 STR X30, [X31 + 0x70]
	0x031DA4C4 STP X28, X27, [X31 + 0x80]
	0x031DA4C8 STP X26, X25, [X31 + 0x90]
	0x031DA4CC STP X24, X23, [X31 + 0xA0]
	0x031DA4D0 STP X22, X21, [X31 + 0xB0]
	0x031DA4D4 STP X20, X19, [X31 + 0xC0]
	0x031DA4D8 ADRP X22, 0x1202000
	0x031DA4DC LDRB W8, [X22 + 0x147]
	0x031DA4E0 MOV W20, W2
	0x031DA4E4 MOV X19, X1
	0x031DA4E8 MOV X21, X0
	0x031DA4EC TBNZ X8, 0x0, 0x31DA63C
	0x031DA4F0 ADRP X0, 0xF1B000
	0x031DA4F4 LDR X0, [X0 + 0xC48]
	0x031DA4F8 BL 0x1C16CF4
	0x031DA4FC ADRP X0, 0xF46000
	0x031DA500 LDR X0, [X0 + 0x320]
	0x031DA504 BL 0x1C16CF4
	0x031DA508 ADRP X0, 0xF45000
	0x031DA50C LDR X0, [X0 + 0xFA0]
	0x031DA510 BL 0x1C16CF4
	0x031DA514 ADRP X0, 0xF46000
	0x031DA518 LDR X0, [X0 + 0x158]
	0x031DA51C BL 0x1C16CF4
	0x031DA520 ADRP X0, 0xF46000
	0x031DA524 LDR X0, [X0 + 0x328]
	0x031DA528 BL 0x1C16CF4
	0x031DA52C ADRP X0, 0xF46000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1203000
	005 Move X20, 0xF1A000
	006 Move W8, [X19+105]
	007 Move X20, [X20+1432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {35}
	012 Move X0, 0xF47000
	013 Move X0, [X0+672]
	014 Call 0x1C17CF4
	015 Move X0, 0xF47000
	016 Move X0, [X0+680]
	017 Call 0x1C17CF4
	018 Move X0, 0xF1A000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0xF47000
	022 Move X0, [X0+688]
	023 Call 0x1C17CF4
	024 Move X0, 0xF47000
	025 Move X0, [X0+696]
	026 Call 0x1C17CF4
	027 Move X0, 0xF1C000
	028 Move X0, [X0+632]
	029 Call 0x1C17CF4
	030 Move X0, 0xF46000
	031 Move X0, [X0+3768]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+105], W8
	035 Move X0, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X31
	041 Move X1, X31
	042 Call Object.op_Implicit, X0
	043 Move X19, X31
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {56}
	048 Move X8, 0xF46000
	049 Move X9, 0xF47000
	050 Move X8, [X8+3768]
	051 Move X9, [X9+696]
	052 Move X0, [X8]
	053 Move X1, [X9]
	054 Call 0x2242FB8, X0
	055 Move X19, X0
	056 Move X0, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X19
	062 Move X1, X31
	063 Call Object.op_Implicit, X0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {82}
	068 Move X8, 0xF1C000
	069 Move X8, [X8+632]
	070 Move X9, 0xF47000
	071 Move X8, [X8]
	072 Move X8, [X8+184]
	073 Move X9, [X9+688]
	074 Move X0, [X8]
	075 Move X1, [X9]
	076 Call 0x2243078, X0
	077 Move X8, 0xF47000
	078 Move X8, [X8+672]
	079 Move X1, [X8]
	080 Call Enumerable.FirstOrDefault, X0
	081 Move X19, X0
	082 Move X0, [X20]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X1, X31
	089 Call Object.op_Implicit, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {99}
	094 Move X8, 0xF47000
	095 Move X8, [X8+680]
	096 Move X0, [X8]
	097 Call 0x221EFB0
	098 Move X19, X0
	099 Move X0, [X20]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Move X1, X31
	106 Move X2, X31
	107 Call Object.op_Equality, X0, X1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {117}
	112 Move X0, X19
	113 Move X20, [X31+16]
	114 Move X19, [X31+24]
	115 Move X30, [X31+32]
	116 Return X0
	117 Move X0, 0xF1A000
	118 Move X0, [X0+2000]
	119 Call 0x1C17D08
	120 Call 0x1C17F10
	121 Move X19, X0
	122 Move X0, 0xF47000
	123 Move X0, [X0+704]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X19
	127 Move X2, X31
	128 Call Exception..ctor, X0, X1
	129 Move X0, 0xF47000
	130 Move X0, [X0+712]
	131 Call 0x1C17D08
	132 Move X1, X0
	133 Move X0, X19
	134 Call 0x1C17DEC

Method: T CreateAndSave()

Disassembly:
	0x0221EFB0 MOV X2, X22
	0x0221EFB4 BL 0x3EB1AC0
	0x0221EFB8 LDR X8, [X19 + 0x38]
	0x0221EFBC LDR X0, [X8]
	0x0221EFC0 LDRB W9, [X0 + 0x135]
	0x0221EFC4 TBNZ X9, 0x0, 0x221EFD0
	0x0221EFC8 BL 0x1C5C684
	0x0221EFCC LDR X8, [X19 + 0x38]
	0x0221EFD0 LDR X9, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Compare X8, 0
	005 JumpIfNotEqual {9}
	006 Move X19, X0
	007 Call 0x1C5D6E0
	008 Move X8, [X19+56]
	009 Move X0, [X8]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call 0x22547A0
	013 Return X0

Method: System.Void .ctor()

Disassembly:
	0x031DA530 LDR X0, [X0 + 0x330]
	0x031DA534 BL 0x1C16CF4
	0x031DA538 ADRP X0, 0xF46000
	0x031DA53C LDR X0, [X0 + 0x338]
	0x031DA540 BL 0x1C16CF4
	0x031DA544 ADRP X0, 0xF46000
	0x031DA548 LDR X0, [X0 + 0x340]
	0x031DA54C BL 0x1C16CF4
	0x031DA550 ADRP X0, 0xF46000
	0x031DA554 LDR X0, [X0 + 0x348]
	0x031DA558 BL 0x1C16CF4
	0x031DA55C ADRP X0, 0xF46000
	0x031DA560 LDR X0, [X0 + 0x350]
	0x031DA564 BL 0x1C16CF4
	0x031DA568 ADRP X0, 0xF45000
	0x031DA56C LDR X0, [X0 + 0xEE8]
	0x031DA570 BL 0x1C16CF4
	0x031DA574 ADRP X0, 0xF45000
	0x031DA578 LDR X0, [X0 + 0xEF0]
	0x031DA57C BL 0x1C16CF4
	0x031DA580 ADRP X0, 0xF45000
	0x031DA584 LDR X0, [X0 + 0xFB8]
	0x031DA588 BL 0x1C16CF4
	0x031DA58C ADRP X0, 0xF46000
	0x031DA590 LDR X0, [X0 + 0x160]
	0x031DA594 BL 0x1C16CF4
	0x031DA598 ADRP X0, 0xF46000
	0x031DA59C LDR X0, [X0 + 0x358]
	0x031DA5A0 BL 0x1C16CF4
	0x031DA5A4 ADRP X0, 0xF46000
	0x031DA5A8 LDR X0, [X0 + 0x360]
	0x031DA5AC BL 0x1C16CF4
	0x031DA5B0 ADRP X0, 0xF46000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1203000
	007 Move X22, 0xF47000
	008 Move X20, 0xF1A000
	009 Move W8, [X21+106]
	010 Move X22, [X22+720]
	011 Move X20, [X20+2440]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xF47000
	018 Move X0, [X0+720]
	019 Call 0x1C17CF4
	020 Move X0, 0xF1A000
	021 Move X0, [X0+2440]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+106], W8
	025 Move X11, [X22]
	026 Move X8, [X20]
	027 Move W9, 0x42700000
	028 Move W10, 1
	029 Move [X19+56], W9
	030 Move [X19+32], X11
	031 Move [X19+40], X8
	032 Move [X19+48], X8
	033 Move [X19+60], W10
	034 Move X0, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X1, X31
	040 Move X30, [X31+48]
	041 Call ScriptableObject..ctor, X0
	042 Return 

