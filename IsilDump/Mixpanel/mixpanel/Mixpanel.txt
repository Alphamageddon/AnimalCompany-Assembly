Type: mixpanel.Mixpanel

Method: System.Void Log(System.String s)

Disassembly:
	0x031D36B0 ADRP X8, 0xF4C000
	0x031D36B4 LDR X8, [X8 + 0xF78]
	0x031D36B8 MOV X1, X19
	0x031D36BC LDR X2, [X8]
	0x031D36C0 BL 0x2AA528C
	0x031D36C4 TBNZ X0, 0x0, 0x31D3704
	0x031D36C8 ADRP X8, 0xF25000
	0x031D36CC LDR X21, [X20 + 0x40]
	0x031D36D0 LDR X8, [X8 + 0x748]
	0x031D36D4 LDR X0, [X8]
	0x031D36D8 BL 0x1C16F10
	0x031D36DC MOV X22, X0
	0x031D36E0 BL 0x31D3D04
	0x031D36E4 CBZ X21, 0x31D372C
	0x031D36E8 ADRP X8, 0xF4C000
	0x031D36EC LDR X8, [X8 + 0xF88]
	0x031D36F0 MOV X0, X21
	0x031D36F4 MOV X1, X19
	0x031D36F8 MOV X2, X22
	0x031D36FC LDR X3, [X8]
	0x031D3700 BL 0x2AA5084
	0x031D3704 LDR X0, [X20 + 0x40]
	0x031D3708 CBZ X0, 0x31D372C
	0x031D370C ADRP X8, 0xF4C000
	0x031D3710 LDR X8, [X8 + 0xF80]
	0x031D3714 MOV X1, X19
	0x031D3718 LDP X20, X19, [X31 + 0x20]
	0x031D371C LDP X22, X21, [X31 + 0x10]
	0x031D3720 LDR X2, [X8]
	0x031D3724 LDR X30, [X31], #0x30
	0x031D3728 B 0x2AA5018
	0x031D372C BL 0x1C16F20
	0x031D3730 LDR W8, [X0 + 0x10]
	0x031D3734 CMP W8, 0x1
	0x031D3738 CSET W0, EQ
	0x031D373C RET
	0x031D3740 STR X30, [X31 - 0x10]!
	0x031D3744 CBZ X0, 0x31D3754
	0x031D3748 LDR X0, [X0 + 0x18]
	0x031D374C LDR X30, [X31], #0x10
	0x031D3750 RET
	0x031D3754 BL 0x1C16F20
	0x031D3758 STP X30, X21, [X31 - 0x20]!
	0x031D375C STP X20, X19, [X31 + 0x10]
	0x031D3760 ADRP X21, 0x1209000
	0x031D3764 ADRP X20, 0xF4C000
	0x031D3768 LDRB W8, [X21 + 0x6F]
	0x031D376C LDR X20, [X20 + 0xEE0]
	0x031D3770 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x120A000
	006 Move X20, 0xF4D000
	007 Move W8, [X21+62]
	008 Move X20, [X20+3560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xF4D000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move X0, 0xF21000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0xF4D000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+62], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move W8, [X8+16]
	033 Compare W8, 0
	034 JumpIfEqual {58}
	035 Move X8, 0xF4D000
	036 Move X8, [X8+3784]
	037 Move X20, 0xF21000
	038 Move X1, X19
	039 Move X2, X31
	040 Move X0, [X8]
	041 Move X20, [X20+2600]
	042 Call String.Concat, X0, X1
	043 Move X8, [X20]
	044 Move X19, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call Debug.Log, X0
	057 Return 
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 

Method: System.Void LogError(System.String s)

Disassembly:
	0x031D4964 ADRP X8, 0xF24000
	0x031D4968 LDR X8, [X8 + 0x748]
	0x031D496C MOV W19, W0
	0x031D4970 LDR X8, [X8]
	0x031D4974 MOV X0, X8
	0x031D4978 BL 0x1C16F10
	0x031D497C MOV X20, X0
	0x031D4980 BL 0x31D3D04
	0x031D4984 LDR X0, [X21]
	0x031D4988 LDR W8, [X0 + 0xE0]
	0x031D498C CBZ W8, 0x31D49EC
	0x031D4990 TBZ X19, 0x0, 0x31D49F4
	0x031D4994 LDR X8, [X21]
	0x031D4998 LDR X8, [X8 + 0xB8]
	0x031D499C LDR X19, [X8]
	0x031D49A0 STR X20, [X8 + 0x18]
	0x031D49A4 CBZ X19, 0x31D4A60
	0x031D49A8 LDR X8, [X19]
	0x031D49AC LDR X1, [X22]
	0x031D49B0 LDR X20, [X23]
	0x031D49B4 LDRH W9, [X8 + 0x12E]
	0x031D49B8 CBZ X9, 0x31D49DC
	0x031D49BC LDR X10, [X8 + 0xB0]
	0x031D49C0 ADD X10, X10, 0x8
	0x031D49C4 LDUR X11, [X10 - 0x8]
	0x031D49C8 CMP X11, X1
	0x031D49CC B.EQ 0x31D4A00
	0x031D49D0 SUBS X9, X9, 0x1
	0x031D49D4 ADD X10, X10, 0x10
	0x031D49D8 B.NE 0x31D49C4
	0x031D49DC MOVZ W2, 0x3
	0x031D49E0 MOV X0, X19
	0x031D49E4 BL 0x1C5C788
	0x031D49E8 B 0x31D4A10
	0x031D49EC BL 0x1C16DFC
	0x031D49F0 TBNZ X19, 0x0, 0x31D4994
	0x031D49F4 MOV X0, X20
	0x031D49F8 BL 0x31D825C
	0x031D49FC B 0x31D4A34
	0x031D4A00 LDR W9, [X10]
	0x031D4A04 ADD W9, W9, 0x3
	0x031D4A08 ADD X8, X8, W9, 0x4, SXTW
	0x031D4A0C ADD X0, X8, 0x138
	0x031D4A10 LDP X8, X2, [X0]
	0x031D4A14 MOV X0, X19
	0x031D4A18 MOV X1, X20
	0x031D4A1C BLR X8
	0x031D4A20 LDR X8, [X21]
	0x031D4A24 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1209000
	006 Move X20, 0xF4C000
	007 Move W8, [X21+63]
	008 Move X20, [X20+3560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xF4C000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move X0, 0xF20000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0xF4C000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+63], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move W8, [X8+16]
	033 Compare W8, 0
	034 JumpIfEqual {58}
	035 Move X8, 0xF4C000
	036 Move X8, [X8+3784]
	037 Move X20, 0xF20000
	038 Move X1, X19
	039 Move X2, X31
	040 Move X0, [X8]
	041 Move X20, [X20+2600]
	042 Call String.Concat, X0, X1
	043 Move X8, [X20]
	044 Move X19, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call Debug.LogError, X0
	057 Return 
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 

Method: System.Void Init()

Disassembly:
	0x031D87D4 BL 0x1C16F20

ISIL:
	001 Call Controller.Initialize
	002 Return 

Method: System.Boolean IsInitialized()

Disassembly:
	0x031D87D8 STR X30, [X31 - 0x20]!
	0x031D87DC STP X20, X19, [X31 + 0x10]
	0x031D87E0 ADRP X19, 0x1204000
	0x031D87E4 ADRP X20, 0xF48000
	0x031D87E8 LDRB W8, [X19 + 0x54]
	0x031D87EC LDR X20, [X20 + 0x210]
	0x031D87F0 TBNZ X8, 0x0, 0x31D8808
	0x031D87F4 ADRP X0, 0xF48000
	0x031D87F8 LDR X0, [X0 + 0x210]
	0x031D87FC BL 0x1C16CF4
	0x031D8800 MOVZ W8, 0x1
	0x031D8804 STRB W8, [X19 + 0x54]
	0x031D8808 LDR X0, [X20]
	0x031D880C LDP X20, X19, [X31 + 0x10]
	0x031D8810 LDR X30, [X31], #0x20
	0x031D8814 B 0x31D8818
	0x031D8818 STP X30, X21, [X31 - 0x20]!
	0x031D881C STP X20, X19, [X31 + 0x10]
	0x031D8820 ADRP X20, 0x1204000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x1205000
	004 Move W8, [X19+64]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0xF49000
	010 Move X0, [X0+464]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+64], W8
	014 Call Controller.IsInitialized
	015 Move W19, W0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {24}
	020 Move X8, 0xF49000
	021 Move X8, [X8+464]
	022 Move X0, [X8]
	023 Call Mixpanel.Log, X0
	024 And W0, W19, 1
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0

Method: System.Void SetPreferencesSource(mixpanel.IPreferences preferences)

Disassembly:
	0x031D8824 LDRB W8, [X20 + 0x61]
	0x031D8828 MOV X19, X0
	0x031D882C TBNZ X8, 0x0, 0x31D885C
	0x031D8830 ADRP X0, 0xF1B000
	0x031D8834 LDR X0, [X0 + 0xAC8]
	0x031D8838 BL 0x1C16CF4
	0x031D883C ADRP X0, 0xF20000
	0x031D8840 LDR X0, [X0 + 0x748]
	0x031D8844 BL 0x1C16CF4
	0x031D8848 ADRP X0, 0xF48000
	0x031D884C LDR X0, [X0 + 0x218]
	0x031D8850 BL 0x1C16CF4
	0x031D8854 MOVZ W8, 0x1
	0x031D8858 STRB W8, [X20 + 0x61]
	0x031D885C BL 0x31D77D8
	0x031D8860 TBZ X0, 0x0, 0x31D88D0
	0x031D8864 ADRP X8, 0xF20000
	0x031D8868 LDR X8, [X8 + 0x748]
	0x031D886C ADRP X21, 0xF1B000
	0x031D8870 LDR X0, [X8]
	0x031D8874 LDR X21, [X21 + 0xAC8]
	0x031D8878 BL 0x1C16F10
	0x031D887C MOV X20, X0
	0x031D8880 BL 0x31D3D04
	0x031D8884 LDR X0, [X21]
	0x031D8888 MOVZ W1, 0x1
	0x031D888C BL 0x1C16D6C
	0x031D8890 CBZ X0, 0x31D88DC
	0x031D8894 LDR W8, [X0 + 0x18]
	0x031D8898 CBZ W8, 0x31D88E0
	0x031D889C STR X19, [X0 + 0x20]
	0x031D88A0 BL 0x31D9014
	0x031D88A4 CBZ X20, 0x31D88DC
	0x031D88A8 ADRP X8, 0xF48000
	0x031D88AC LDR X8, [X8 + 0x218]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1205000
	006 Move X20, 0xF48000
	007 Move W8, [X21+65]
	008 Move X20, [X20+3808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF48000
	015 Move X0, [X0+3808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+65], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X21, 0x1205000
	025 Move W8, [X21+348]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0xF48000
	029 Move X0, [X0+3808]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+348], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move [X8], X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 

Method: System.Void Alias(System.String alias)

Disassembly:
	0x031D88B0 MOV X2, X0
	0x031D88B4 MOV X0, X20
	0x031D88B8 LDR X1, [X8]
	0x031D88BC BL 0x31D3EA4
	0x031D88C0 MOV X0, X20
	0x031D88C4 LDP X20, X19, [X31 + 0x10]
	0x031D88C8 LDP X30, X21, [X31], #0x20
	0x031D88CC B 0x31D574C
	0x031D88D0 LDP X20, X19, [X31 + 0x10]
	0x031D88D4 LDP X30, X21, [X31], #0x20
	0x031D88D8 RET
	0x031D88DC BL 0x1C16F20
	0x031D88E0 BL 0x1C16F28
	0x031D88E4 STR X30, [X31 - 0x20]!
	0x031D88E8 STP X20, X19, [X31 + 0x10]
	0x031D88EC ADRP X20, 0x1204000
	0x031D88F0 LDRB W8, [X20 + 0x56]
	0x031D88F4 MOV X19, X0
	0x031D88F8 TBNZ X8, 0x0, 0x31D891C
	0x031D88FC ADRP X0, 0xF20000
	0x031D8900 LDR X0, [X0 + 0x748]
	0x031D8904 BL 0x1C16CF4
	0x031D8908 ADRP X0, 0xF48000
	0x031D890C LDR X0, [X0 + 0x220]
	0x031D8910 BL 0x1C16CF4
	0x031D8914 MOVZ W8, 0x1
	0x031D8918 STRB W8, [X20 + 0x56]
	0x031D891C BL 0x31D77D8
	0x031D8920 TBZ X0, 0x0, 0x31D8968
	0x031D8924 ADRP X8, 0xF20000
	0x031D8928 LDR X8, [X8 + 0x748]
	0x031D892C LDR X0, [X8]
	0x031D8930 BL 0x1C16F10
	0x031D8934 MOV X20, X0
	0x031D8938 BL 0x31D3D04
	0x031D893C CBZ X20, 0x31D8974
	0x031D8940 ADRP X8, 0xF48000
	0x031D8944 LDR X8, [X8 + 0x220]
	0x031D8948 MOV X0, X20
	0x031D894C MOV X2, X19
	0x031D8950 LDR X1, [X8]
	0x031D8954 BL 0x31D3EA4
	0x031D8958 MOV X0, X20
	0x031D895C LDP X20, X19, [X31 + 0x10]
	0x031D8960 LDR X30, [X31], #0x20
	0x031D8964 B 0x31D574C
	0x031D8968 LDP X20, X19, [X31 + 0x10]
	0x031D896C LDR X30, [X31], #0x20
	0x031D8970 RET
	0x031D8974 BL 0x1C16F20
	0x031D8978 STR X30, [X31 - 0x30]!
	0x031D897C STP X22, X21, [X31 + 0x10]
	0x031D8980 STP X20, X19, [X31 + 0x20]
	0x031D8984 ADRP X21, 0x1204000
	0x031D8988 ADRP X22, 0xF20000
	0x031D898C LDRB W8, [X21 + 0x57]
	0x031D8990 LDR X22, [X22 + 0x748]
	0x031D8994 MOV X19, X1
	0x031D8998 MOV X20, X0
	0x031D899C TBNZ X8, 0x0, 0x31D89B4
	0x031D89A0 ADRP X0, 0xF20000
	0x031D89A4 LDR X0, [X0 + 0x748]
	0x031D89A8 BL 0x1C16CF4
	0x031D89AC MOVZ W8, 0x1
	0x031D89B0 STRB W8, [X21 + 0x57]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1205000
	005 Move W8, [X20+66]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {25}
	011 Move X0, 0xF48000
	012 Move X0, [X0+3808]
	013 Call 0x1C17CF4
	014 Move X0, 0xF21000
	015 Move X0, [X0+1864]
	016 Call 0x1C17CF4
	017 Move X0, 0xF49000
	018 Move X0, [X0+472]
	019 Call 0x1C17CF4
	020 Move X0, 0xF49000
	021 Move X0, [X0+480]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+66], W8
	025 Call Mixpanel.IsInitialized
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {46}
	030 Move X8, 0xF48000
	031 Move X8, [X8+3808]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Call MixpanelStorage.get_DistinctId
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call String.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {50}
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 
	050 Move X8, 0xF21000
	051 Move X8, [X8+1864]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X20, X0
	055 Call Value..ctor, X0
	056 Move X0, X19
	057 Call Value.op_Implicit, X0
	058 Compare X20, 0
	059 JumpIfEqual {83}
	060 Move X8, 0xF49000
	061 Move X8, [X8+472]
	062 Move X2, X0
	063 Move X0, X20
	064 Move X1, [X8]
	065 Call Value.set_Item, X0, X1, X2
	066 Move X8, 0xF49000
	067 Move X8, [X8+480]
	068 Move X19, [X8]
	069 Call Mixpanel.IsInitialized
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {77}
	074 Move X0, X19
	075 Move X1, X20
	076 Call Controller.DoTrack, X0, X1
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X0, X31
	080 Move X30, [X31+32]
	081 Call Mixpanel.Flush, X0
	082 Return 
	083 Call 0x1C17F20

Method: System.Void ClearTimedEvents()

Disassembly:
	0x031D8A1C BL 0x1C16CF4
	0x031D8A20 MOVZ W8, 0x1
	0x031D8A24 STRB W8, [X20 + 0x58]
	0x031D8A28 BL 0x31D77D8
	0x031D8A2C TBZ X0, 0x0, 0x31D8A88
	0x031D8A30 BL 0x31D1D6C
	0x031D8A34 CBZ X19, 0x31D8A94
	0x031D8A38 MOV X1, X0
	0x031D8A3C MOV X0, X19
	0x031D8A40 BL 0x31D458C
	0x031D8A44 ADRP X8, 0xF20000
	0x031D8A48 LDR X8, [X8 + 0x748]
	0x031D8A4C LDR X0, [X8]
	0x031D8A50 BL 0x1C16F10
	0x031D8A54 MOV X20, X0
	0x031D8A58 BL 0x31D3D04
	0x031D8A5C CBZ X20, 0x31D8A94
	0x031D8A60 ADRP X8, 0xF48000
	0x031D8A64 LDR X8, [X8 + 0x228]
	0x031D8A68 MOV X0, X20
	0x031D8A6C MOV X2, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x1205000
	004 Move W8, [X19+67]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0xF48000
	010 Move X0, [X0+3808]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+67], W8
	014 Call Mixpanel.IsInitialized
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {28}
	019 Move X8, 0xF48000
	020 Move X8, [X8+3808]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return 

Method: System.Void ClearTimedEvent(System.String eventName)

Disassembly:
	0x031D8AD4 LDR X0, [X22]
	0x031D8AD8 BL 0x1C16F10
	0x031D8ADC MOV X21, X0
	0x031D8AE0 BL 0x31D3D04
	0x031D8AE4 CBZ X21, 0x31D8B0C
	0x031D8AE8 MOV X0, X21
	0x031D8AEC MOV X1, X20
	0x031D8AF0 MOV X2, X19
	0x031D8AF4 BL 0x31D3EA4
	0x031D8AF8 MOV X0, X21
	0x031D8AFC LDP X20, X19, [X31 + 0x20]
	0x031D8B00 LDP X22, X21, [X31 + 0x10]
	0x031D8B04 LDR X30, [X31], #0x30
	0x031D8B08 B 0x31D89F0
	0x031D8B0C BL 0x1C16F20
	0x031D8B10 STR X30, [X31 - 0x20]!
	0x031D8B14 STP X20, X19, [X31 + 0x10]
	0x031D8B18 ADRP X20, 0x1204000
	0x031D8B1C LDRB W8, [X20 + 0x5A]
	0x031D8B20 MOV X19, X0
	0x031D8B24 TBNZ X8, 0x0, 0x31D8B48
	0x031D8B28 ADRP X0, 0xF20000
	0x031D8B2C LDR X0, [X0 + 0x748]
	0x031D8B30 BL 0x1C16CF4
	0x031D8B34 ADRP X0, 0xF48000
	0x031D8B38 LDR X0, [X0 + 0x230]
	0x031D8B3C BL 0x1C16CF4
	0x031D8B40 MOVZ W8, 0x1
	0x031D8B44 STRB W8, [X20 + 0x5A]
	0x031D8B48 BL 0x31D77D8
	0x031D8B4C TBZ X0, 0x0, 0x31D8B94
	0x031D8B50 ADRP X8, 0xF20000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1205000
	005 Move W8, [X20+68]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF48000
	012 Move X0, [X0+3808]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+68], W8
	016 Call Mixpanel.IsInitialized
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {38}
	021 Move X8, 0xF48000
	022 Move X8, [X8+3808]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call MixpanelStorage.get_TimedEvents
	029 Compare X0, 0
	030 JumpIfEqual {42}
	031 Move X1, X19
	032 Move X20, X0
	033 Call Value.Remove, X0, X1
	034 Move X0, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Identify(System.String uniqueId)

Disassembly:
	0x031D8C58 CBZ X19, 0x31D8C88
	0x031D8C5C ADRP X8, 0xF48000
	0x031D8C60 LDR X8, [X8 + 0x238]
	0x031D8C64 MOV X2, X0
	0x031D8C68 MOV X0, X19
	0x031D8C6C LDR X1, [X8]
	0x031D8C70 BL 0x31D3E30
	0x031D8C74 MOV X0, X19
	0x031D8C78 LDP X20, X19, [X31 + 0x10]
	0x031D8C7C LDR X30, [X31 + 0x8]
	0x031D8C80 LDR V8, [X31], #0x20
	0x031D8C84 B 0x31D8C8C
	0x031D8C88 BL 0x1C16F20
	0x031D8C8C STP X30, X21, [X31 - 0x20]!
	0x031D8C90 STP X20, X19, [X31 + 0x10]
	0x031D8C94 ADRP X20, 0x1204000
	0x031D8C98 LDRB W8, [X20 + 0x5E]
	0x031D8C9C MOV X19, X0
	0x031D8CA0 TBNZ X8, 0x0, 0x31D8CDC
	0x031D8CA4 ADRP X0, 0xF20000
	0x031D8CA8 LDR X0, [X0 + 0x748]
	0x031D8CAC BL 0x1C16CF4
	0x031D8CB0 ADRP X0, 0xF48000
	0x031D8CB4 LDR X0, [X0 + 0x210]
	0x031D8CB8 BL 0x1C16CF4
	0x031D8CBC ADRP X0, 0xF48000
	0x031D8CC0 LDR X0, [X0 + 0xE0]
	0x031D8CC4 BL 0x1C16CF4
	0x031D8CC8 ADRP X0, 0xF48000
	0x031D8CCC LDR X0, [X0 + 0x208]
	0x031D8CD0 BL 0x1C16CF4
	0x031D8CD4 MOVZ W8, 0x1
	0x031D8CD8 STRB W8, [X20 + 0x5E]
	0x031D8CDC BL 0x31D77D8
	0x031D8CE0 TBZ X0, 0x0, 0x31D8D78
	0x031D8CE4 BL 0x31D8E18
	0x031D8CE8 BL 0x31D3DD8
	0x031D8CEC CBZ X19, 0x31D8D84
	0x031D8CF0 ADRP X8, 0xF48000
	0x031D8CF4 LDR X8, [X8 + 0xE0]
	0x031D8CF8 MOV X2, X0
	0x031D8CFC MOV X0, X19
	0x031D8D00 LDR X1, [X8]
	0x031D8D04 BL 0x31D3E30
	0x031D8D08 ADRP X21, 0xF20000
	0x031D8D0C LDR X21, [X21 + 0x748]
	0x031D8D10 LDR X0, [X21]
	0x031D8D14 BL 0x1C16F10
	0x031D8D18 MOV X20, X0
	0x031D8D1C BL 0x31D3D04
	0x031D8D20 LDR X0, [X21]
	0x031D8D24 BL 0x1C16F10
	0x031D8D28 MOV X21, X0
	0x031D8D2C BL 0x31D3D04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1205000
	005 Move W8, [X20+69]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0xF48000
	012 Move X0, [X0+3808]
	013 Call 0x1C17CF4
	014 Move X0, 0xF49000
	015 Move X0, [X0+488]
	016 Call 0x1C17CF4
	017 Move X0, 0xF49000
	018 Move X0, [X0+496]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+69], W8
	022 Call Mixpanel.IsInitialized
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {42}
	027 Move X20, 0xF48000
	028 Move X20, [X20+3808]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Call MixpanelStorage.get_DistinctId
	035 Move X1, X19
	036 Move X2, X31
	037 Call String.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {46}
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return 
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Call MixpanelStorage.get_DistinctId
	052 Move X20, X0
	053 Move X0, X19
	054 Call MixpanelStorage.set_DistinctId, X0
	055 Move X0, X20
	056 Call Value.op_Implicit, X0
	057 Move X8, 0xF49000
	058 Move X8, [X8+488]
	059 Move X9, 0xF49000
	060 Move X9, [X9+496]
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X8, [X8]
	064 Move X2, X0
	065 Move X1, [X9]
	066 Move X0, X8
	067 Move X30, [X31+32]

Method: System.String get_DistinctID()

Disassembly:
	0x031D8DC8 STRB W8, [X19 + 0x5D]
	0x031D8DCC LDR X0, [X20]
	0x031D8DD0 BL 0x1C16F10
	0x031D8DD4 MOV X19, X0
	0x031D8DD8 BL 0x31D3D04
	0x031D8DDC MOV V0.16B, V8.16B
	0x031D8DE0 BL 0x31D4FF4
	0x031D8DE4 CBZ X19, 0x31D8E14
	0x031D8DE8 ADRP X8, 0xF48000
	0x031D8DEC LDR X8, [X8 + 0x238]
	0x031D8DF0 MOV X2, X0
	0x031D8DF4 MOV X0, X19
	0x031D8DF8 LDR X1, [X8]
	0x031D8DFC BL 0x31D3EA4
	0x031D8E00 MOV X0, X19
	0x031D8E04 LDP X20, X19, [X31 + 0x10]
	0x031D8E08 LDR X30, [X31 + 0x8]
	0x031D8E0C LDR V8, [X31], #0x20
	0x031D8E10 B 0x31D8C8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1205000
	005 Move X20, 0xF48000
	006 Move W8, [X19+70]
	007 Move X20, [X20+3808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF48000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+70], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call MixpanelStorage.get_DistinctId
	026 Return X0

Method: System.String get_DistinctId()

Disassembly:
	0x031D8E14 BL 0x1C16F20
	0x031D8E18 STR X30, [X31 - 0x20]!
	0x031D8E1C STP X20, X19, [X31 + 0x10]
	0x031D8E20 ADRP X20, 0x1204000
	0x031D8E24 ADRP X19, 0xF1C000
	0x031D8E28 LDRB W8, [X20 + 0x15A]
	0x031D8E2C LDR X19, [X19 + 0x9F0]
	0x031D8E30 TBNZ X8, 0x0, 0x31D8E54
	0x031D8E34 ADRP X0, 0xF1C000
	0x031D8E38 LDR X0, [X0 + 0x9F0]
	0x031D8E3C BL 0x1C16CF4
	0x031D8E40 ADRP X0, 0xF48000
	0x031D8E44 LDR X0, [X0 + 0x240]
	0x031D8E48 BL 0x1C16CF4
	0x031D8E4C MOVZ W8, 0x1
	0x031D8E50 STRB W8, [X20 + 0x15A]
	0x031D8E54 LDR X0, [X19]
	0x031D8E58 ADRP X19, 0xF48000
	0x031D8E5C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1205000
	005 Move X20, 0xF48000
	006 Move W8, [X19+71]
	007 Move X20, [X20+3808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF48000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+71], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call MixpanelStorage.get_DistinctId
	026 Return X0

Method: System.Void OptOutTracking()

Disassembly:
	0x031D8E60 LDR X19, [X19 + 0x240]
	0x031D8E64 CBNZ W8, 0x31D8E6C
	0x031D8E68 BL 0x1C16DFC
	0x031D8E6C MOV X0, X31
	0x031D8E70 BL 0x33616A4
	0x031D8E74 LDR X1, [X19]
	0x031D8E78 STR X0, [X31 + 0x8]
	0x031D8E7C ADD X0, X31, 0x8
	0x031D8E80 MOV X2, X31
	0x031D8E84 BL 0x33622A8
	0x031D8E88 LDP X20, X19, [X31 + 0x10]
	0x031D8E8C LDR X30, [X31], #0x20
	0x031D8E90 RET
	0x031D8E94 STR X30, [X31 - 0x20]!
	0x031D8E98 STP X20, X19, [X31 + 0x10]
	0x031D8E9C ADRP X20, 0x1204000
	0x031D8EA0 LDRB W8, [X20 + 0x5F]
	0x031D8EA4 MOV X19, X0
	0x031D8EA8 TBNZ X8, 0x0, 0x31D8ECC
	0x031D8EAC ADRP X0, 0xF20000
	0x031D8EB0 LDR X0, [X0 + 0x748]
	0x031D8EB4 BL 0x1C16CF4
	0x031D8EB8 ADRP X0, 0xF48000
	0x031D8EBC LDR X0, [X0 + 0x248]
	0x031D8EC0 BL 0x1C16CF4
	0x031D8EC4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x1205000
	004 Move W8, [X19+72]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0xF48000
	010 Move X0, [X0+3808]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+72], W8
	014 Call Mixpanel.IsInitialized
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {35}
	019 Move X19, 0xF48000
	020 Move X19, [X19+3808]
	021 Call People.DeleteUser
	022 Move X0, X31
	023 Call Mixpanel.Flush, X0
	024 Call Mixpanel.Reset
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W31
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Call MixpanelStorage.set_IsTracking, X0
	034 Return 
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 

Method: System.Void OptInTracking()

Disassembly:
	0x031D8FF8 MOV X1, X0
	0x031D8FFC MOV X0, X19
	0x031D9000 BL 0x1C16DEC
	0x031D9004 LDR W8, [X0 + 0x10]
	0x031D9008 CMP W8, 0x5
	0x031D900C CSET W0, EQ
	0x031D9010 RET
	0x031D9014 STR X30, [X31 - 0x40]!
	0x031D9018 STP X24, X23, [X31 + 0x10]
	0x031D901C STP X22, X21, [X31 + 0x20]
	0x031D9020 STP X20, X19, [X31 + 0x30]
	0x031D9024 ADRP X20, 0x1203000
	0x031D9028 ADRP X22, 0xF47000
	0x031D902C LDRB W8, [X20 + 0xC5]
	0x031D9030 LDR X22, [X22 + 0x260]
	0x031D9034 MOV X19, X0
	0x031D9038 TBNZ X8, 0x0, 0x31D9080
	0x031D903C ADRP X0, 0xF47000
	0x031D9040 LDR X0, [X0 + 0x268]
	0x031D9044 BL 0x1C16CF4
	0x031D9048 ADRP X0, 0xF47000
	0x031D904C LDR X0, [X0 + 0x270]
	0x031D9050 BL 0x1C16CF4
	0x031D9054 ADRP X0, 0xF47000
	0x031D9058 LDR X0, [X0 + 0x278]
	0x031D905C BL 0x1C16CF4
	0x031D9060 ADRP X0, 0xF47000
	0x031D9064 LDR X0, [X0 + 0x260]
	0x031D9068 BL 0x1C16CF4
	0x031D906C ADRP X0, 0xF1F000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x1205000
	004 Move W8, [X19+73]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {17}
	009 Move X0, 0xF47000
	010 Move X0, [X0+3808]
	011 Call 0x1C17CF4
	012 Move X0, 0xF48000
	013 Move X0, [X0+512]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+73], W8
	017 Call Mixpanel.IsInitialized
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {39}
	022 Move X8, 0xF47000
	023 Move X8, [X8+3808]
	024 Move X19, 0xF48000
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Move X19, [X19+512]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, 1
	032 Call MixpanelStorage.set_IsTracking, X0
	033 Move X0, [X19]
	034 Move X1, X31
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Call Controller.DoTrack, X0, X1
	038 Return 
	039 Move X30, [X31+16]
	040 Move X19, [X31+24]
	041 Return 

Method: System.Void OptInTracking(System.String distinctId)

Disassembly:
	0x031D9070 LDR X0, [X0 + 0x748]
	0x031D9074 BL 0x1C16CF4
	0x031D9078 MOVZ W8, 0x1
	0x031D907C STRB W8, [X20 + 0xC5]
	0x031D9080 LDR X0, [X22]
	0x031D9084 LDR W8, [X0 + 0xE0]
	0x031D9088 CBNZ W8, 0x31D9094
	0x031D908C BL 0x1C16DFC
	0x031D9090 LDR X0, [X22]
	0x031D9094 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Mixpanel.IsInitialized
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {15}
	009 Move X0, X19
	010 Call Mixpanel.Identify, X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call Mixpanel.OptInTracking
	014 Return 
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void Register(System.String key, mixpanel.Value value)

Disassembly:
	0x031D4B54 MOVZ W2, 0x5
	0x031D4B58 MOV X0, X19
	0x031D4B5C BL 0x1C5C788
	0x031D4B60 B 0x31D4B74
	0x031D4B64 LDR W9, [X10]
	0x031D4B68 ADD W9, W9, 0x5
	0x031D4B6C ADD X8, X8, W9, 0x4, SXTW
	0x031D4B70 ADD X0, X8, 0x138
	0x031D4B74 LDP X8, X2, [X0]
	0x031D4B78 MOV X0, X19
	0x031D4B7C MOV X1, X20
	0x031D4B80 BLR X8
	0x031D4B84 ADRP X8, 0xF24000
	0x031D4B88 LDR X8, [X8 + 0x748]
	0x031D4B8C MOV W19, W0
	0x031D4B90 LDR X8, [X8]
	0x031D4B94 MOV X0, X8
	0x031D4B98 BL 0x1C16F10
	0x031D4B9C MOV X20, X0
	0x031D4BA0 BL 0x31D3D04
	0x031D4BA4 LDR X0, [X21]
	0x031D4BA8 LDR W8, [X0 + 0xE0]
	0x031D4BAC CBZ W8, 0x31D4C0C
	0x031D4BB0 TBZ X19, 0x0, 0x31D4C14
	0x031D4BB4 LDR X8, [X21]
	0x031D4BB8 LDR X8, [X8 + 0xB8]
	0x031D4BBC LDR X19, [X8]
	0x031D4BC0 STR X20, [X8 + 0x20]
	0x031D4BC4 CBZ X19, 0x31D4C80
	0x031D4BC8 LDR X8, [X19]
	0x031D4BCC LDR X1, [X22]
	0x031D4BD0 LDR X20, [X23]
	0x031D4BD4 LDRH W9, [X8 + 0x12E]
	0x031D4BD8 CBZ X9, 0x31D4BFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1209000
	006 Move W8, [X21+74]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xF4C000
	014 Move X0, [X0+3808]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+74], W8
	018 Call Mixpanel.IsInitialized
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {44}
	023 Move X8, 0xF4C000
	024 Move X8, [X8+3808]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Call MixpanelStorage.get_SuperProperties
	031 Compare X0, 0
	032 JumpIfEqual {49}
	033 Move X1, X20
	034 Move X2, X19
	035 Move X21, X0
	036 Call Value.set_Item, X0, X1, X2
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X21
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call MixpanelStorage.set_SuperProperties, X0
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Call 0x1C17F20

Method: System.Void RegisterOnce(System.String key, mixpanel.Value value)

Disassembly:
	0x031D919C CBZ X20, 0x31D91C8
	0x031D91A0 ADRP X8, 0xF47000
	0x031D91A4 LDR X8, [X8 + 0x280]
	0x031D91A8 MOV X2, X0
	0x031D91AC MOV X0, X20
	0x031D91B0 LDR X1, [X8]
	0x031D91B4 BL 0x31D3EA4
	0x031D91B8 MOV X0, X20
	0x031D91BC LDP X20, X19, [X31 + 0x10]
	0x031D91C0 LDP X30, X21, [X31], #0x20
	0x031D91C4 B 0x31D89F0
	0x031D91C8 BL 0x1C16F20
	0x031D91CC STP X30, X21, [X31 - 0x20]!
	0x031D91D0 STP X20, X19, [X31 + 0x10]
	0x031D91D4 ADRP X20, 0x1203000
	0x031D91D8 ADRP X21, 0xF1F000
	0x031D91DC LDRB W8, [X20 + 0x63]
	0x031D91E0 LDR X21, [X21 + 0x748]
	0x031D91E4 MOV X19, X0
	0x031D91E8 TBNZ X8, 0x0, 0x31D920C
	0x031D91EC ADRP X0, 0xF1F000
	0x031D91F0 LDR X0, [X0 + 0x748]
	0x031D91F4 BL 0x1C16CF4
	0x031D91F8 ADRP X0, 0xF47000
	0x031D91FC LDR X0, [X0 + 0x288]
	0x031D9200 BL 0x1C16CF4
	0x031D9204 MOVZ W8, 0x1
	0x031D9208 STRB W8, [X20 + 0x63]
	0x031D920C LDR X0, [X21]
	0x031D9210 BL 0x1C16F10
	0x031D9214 MOV X20, X0
	0x031D9218 BL 0x31D3D04
	0x031D921C MOV X0, X19
	0x031D9220 BL 0x31D3DD8
	0x031D9224 CBZ X20, 0x31D9250
	0x031D9228 ADRP X8, 0xF47000
	0x031D922C LDR X8, [X8 + 0x288]
	0x031D9230 MOV X2, X0
	0x031D9234 MOV X0, X20
	0x031D9238 LDR X1, [X8]
	0x031D923C BL 0x31D3EA4
	0x031D9240 MOV X0, X20
	0x031D9244 LDP X20, X19, [X31 + 0x10]
	0x031D9248 LDP X30, X21, [X31], #0x20
	0x031D924C B 0x31D89F0
	0x031D9250 BL 0x1C16F20
	0x031D9254 STP X30, X21, [X31 - 0x20]!
	0x031D9258 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1204000
	007 Move W8, [X21+75]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xF47000
	015 Move X0, [X0+3808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+75], W8
	019 Call Mixpanel.IsInitialized
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {56}
	024 Move X22, 0xF47000
	025 Move X22, [X22+3808]
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call MixpanelStorage.get_OnceProperties
	032 Compare X0, 0
	033 JumpIfEqual {62}
	034 Move X1, X20
	035 Move X21, X0
	036 Call Value.get_Item, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {62}
	039 Move W8, [X0+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X21
	042 Move X1, X20
	043 Move X2, X19
	044 Call Value.set_Item, X0, X1, X2
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x031D8F68 ADRP X8, 0xF20000
	0x031D8F6C LDR X8, [X8 + 0x748]
	0x031D8F70 LDR X0, [X8]
	0x031D8F74 BL 0x1C16F10
	0x031D8F78 MOV X21, X0
	0x031D8F7C BL 0x31D3D04
	0x031D8F80 CBZ X21, 0x31D8FA4
	0x031D8F84 MOV X0, X21
	0x031D8F88 MOV X1, X20
	0x031D8F8C MOV X2, X19
	0x031D8F90 BL 0x31D3EA4
	0x031D8F94 LDP X20, X19, [X31 + 0x10]
	0x031D8F98 MOV X0, X21
	0x031D8F9C LDP X30, X21, [X31], #0x20
	0x031D8FA0 B 0x31D8E94
	0x031D8FA4 BL 0x1C16F20
	0x031D8FA8 ADRP X0, 0xF23000
	0x031D8FAC LDR X0, [X0 + 0x578]
	0x031D8FB0 BL 0x1C16D08
	0x031D8FB4 BL 0x1C16F10
	0x031D8FB8 MOV X19, X0
	0x031D8FBC ADRP X0, 0xF48000
	0x031D8FC0 LDR X0, [X0 + 0x250]
	0x031D8FC4 BL 0x1C16D08
	0x031D8FC8 MOV X20, X0
	0x031D8FCC ADRP X0, 0xF25000
	0x031D8FD0 LDR X0, [X0 + 0xED8]
	0x031D8FD4 BL 0x1C16D08
	0x031D8FD8 MOV X2, X0
	0x031D8FDC MOV X0, X19
	0x031D8FE0 MOV X1, X20
	0x031D8FE4 MOV X3, X31
	0x031D8FE8 BL 0x330E16C
	0x031D8FEC ADRP X0, 0xF48000
	0x031D8FF0 LDR X0, [X0 + 0x258]
	0x031D8FF4 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x1205000
	004 Move W8, [X19+76]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {17}
	009 Move X0, 0xF48000
	010 Move X0, [X0+3808]
	011 Call 0x1C17CF4
	012 Move X0, 0xF1C000
	013 Move X0, [X0+2440]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+76], W8
	017 Call Mixpanel.IsInitialized
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {45}
	022 Move X8, 0xF48000
	023 Move X8, [X8+3808]
	024 Move X19, 0xF1C000
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Move X19, [X19+2440]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W0, W31
	032 Call MixpanelStorage.DeleteAllTrackingData, X0
	033 Move W0, 1
	034 Call MixpanelStorage.DeleteAllTrackingData, X0
	035 Call MixpanelStorage.ResetSuperProperties
	036 Call MixpanelStorage.ResetOnceProperties
	037 Call MixpanelStorage.ResetTimedEvents
	038 Move X0, X31
	039 Call Mixpanel.Flush, X0
	040 Move X0, [X19]
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Call MixpanelStorage.set_DistinctId, X0
	044 Return 
	045 Move X30, [X31+16]
	046 Move X19, [X31+24]
	047 Return 

Method: System.Void Clear()

Disassembly:
	0x031D9428 LDR X0, [X20]
	0x031D942C LDR W8, [X0 + 0xE0]
	0x031D9430 CBNZ W8, 0x31D9438
	0x031D9434 BL 0x1C16DFC
	0x031D9438 MOV X0, X19
	0x031D943C MOV X1, X31
	0x031D9440 BL 0x3C38948

ISIL:
	001 Move [X31-16], X30
	002 Call Mixpanel.IsInitialized
	003 Move TEMP, X0
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X30, [X31+16]
	008 Call Controller.DoClear
	009 Return 
	010 Move X30, [X31+16]
	011 Return 

Method: System.Void ClearSuperProperties()

Disassembly:
	0x031D9444 TBNZ X0, 0x0, 0x31D9480
	0x031D9448 ADRP X8, 0xF1C000
	0x031D944C LDR X8, [X8 + 0x278]
	0x031D9450 ADRP X9, 0xF47000
	0x031D9454 LDR X8, [X8]
	0x031D9458 LDR X8, [X8 + 0xB8]
	0x031D945C LDR X9, [X9 + 0x2B0]
	0x031D9460 LDR X0, [X8]
	0x031D9464 LDR X1, [X9]
	0x031D9468 BL 0x2242078
	0x031D946C ADRP X8, 0xF47000
	0x031D9470 LDR X8, [X8 + 0x2A0]
	0x031D9474 LDR X1, [X8]
	0x031D9478 BL 0x21C4D84
	0x031D947C MOV X19, X0
	0x031D9480 LDR X0, [X20]
	0x031D9484 LDR W8, [X0 + 0xE0]
	0x031D9488 CBNZ W8, 0x31D9490
	0x031D948C BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x1204000
	005 Move X20, 0xF47000
	006 Move W8, [X19+77]
	007 Move X20, [X20+3808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xF47000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+77], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call MixpanelStorage.ResetSuperProperties
	026 Return 

Method: System.Void StartTimedEvent(System.String eventName)

Disassembly:
	0x031D9490 MOV X0, X19
	0x031D9494 MOV X1, X31
	0x031D9498 BL 0x3C38948
	0x031D949C TBNZ X0, 0x0, 0x31D94B4
	0x031D94A0 ADRP X8, 0xF47000
	0x031D94A4 LDR X8, [X8 + 0x2A8]
	0x031D94A8 LDR X0, [X8]
	0x031D94AC BL 0x221DFB0
	0x031D94B0 MOV X19, X0
	0x031D94B4 LDR X0, [X20]
	0x031D94B8 LDR W8, [X0 + 0xE0]
	0x031D94BC CBNZ W8, 0x31D94C4
	0x031D94C0 BL 0x1C16DFC
	0x031D94C4 MOV X0, X19
	0x031D94C8 MOV X1, X31
	0x031D94CC MOV X2, X31
	0x031D94D0 BL 0x3C3883C
	0x031D94D4 TBNZ X0, 0x0, 0x31D94E8
	0x031D94D8 MOV X0, X19
	0x031D94DC LDP X20, X19, [X31 + 0x10]
	0x031D94E0 LDR X30, [X31], #0x20
	0x031D94E4 RET
	0x031D94E8 ADRP X0, 0xF1A000
	0x031D94EC LDR X0, [X0 + 0x7D0]
	0x031D94F0 BL 0x1C16D08
	0x031D94F4 BL 0x1C16F10
	0x031D94F8 MOV X19, X0
	0x031D94FC ADRP X0, 0xF47000
	0x031D9500 LDR X0, [X0 + 0x2C0]
	0x031D9504 BL 0x1C16D08
	0x031D9508 MOV X1, X0
	0x031D950C MOV X0, X19
	0x031D9510 MOV X2, X31
	0x031D9514 BL 0x33B2C70
	0x031D9518 ADRP X0, 0xF47000
	0x031D951C LDR X0, [X0 + 0x2C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+78]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF47000
	012 Move X0, [X0+3808]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+78], W8
	016 Call Mixpanel.IsInitialized
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {44}
	021 Move X8, 0xF47000
	022 Move X8, [X8+3808]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call MixpanelStorage.get_TimedEvents
	029 Move X20, X0
	030 Call Util.CurrentTimeInSeconds
	031 Call Value.op_Implicit, V0
	032 Compare X20, 0
	033 JumpIfEqual {48}
	034 Move X2, X0
	035 Move X0, X20
	036 Move X1, X19
	037 Call Value.set_Item, X0, X1, X2
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call MixpanelStorage.set_TimedEvents, X0
	043 Return 
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void StartTimedEventOnce(System.String eventName)

Disassembly:
	0x031D9520 BL 0x1C16D08
	0x031D9524 MOV X1, X0
	0x031D9528 MOV X0, X19
	0x031D952C BL 0x1C16DEC
	0x031D9530 STR X30, [X31 - 0x30]!
	0x031D9534 STP X22, X21, [X31 + 0x10]
	0x031D9538 STP X20, X19, [X31 + 0x20]
	0x031D953C ADRP X21, 0x1203000
	0x031D9540 ADRP X22, 0xF47000
	0x031D9544 ADRP X20, 0xF1A000
	0x031D9548 LDRB W8, [X21 + 0x6A]
	0x031D954C LDR X22, [X22 + 0x2D0]
	0x031D9550 LDR X20, [X20 + 0x988]
	0x031D9554 MOV X19, X0
	0x031D9558 TBNZ X8, 0x0, 0x31D957C
	0x031D955C ADRP X0, 0xF47000
	0x031D9560 LDR X0, [X0 + 0x2D0]
	0x031D9564 BL 0x1C16CF4
	0x031D9568 ADRP X0, 0xF1A000
	0x031D956C LDR X0, [X0 + 0x988]
	0x031D9570 BL 0x1C16CF4
	0x031D9574 MOVZ W8, 0x1
	0x031D9578 STRB W8, [X21 + 0x6A]
	0x031D957C LDR X11, [X22]
	0x031D9580 LDR X8, [X20]
	0x031D9584 MOVZ W9, 0x42700000
	0x031D9588 MOVZ W10, 0x1
	0x031D958C STR W9, [X19 + 0x38]
	0x031D9590 STP X11, X8, [X19 + 0x20]
	0x031D9594 STR X8, [X19 + 0x30]
	0x031D9598 STRB W10, [X19 + 0x3C]
	0x031D959C MOV X0, X19
	0x031D95A0 LDP X20, X19, [X31 + 0x20]
	0x031D95A4 LDP X22, X21, [X31 + 0x10]
	0x031D95A8 MOV X1, X31
	0x031D95AC LDR X30, [X31], #0x30
	0x031D95B0 B 0x3C36D2C
	0x031D95B4 MOV X0, X1
	0x031D95B8 MOV X1, X31
	0x031D95BC B 0x3C30368
	0x031D95C0 MOV X0, X1
	0x031D95C4 MOV X1, X31
	0x031D95C8 B 0x3C301AC
	0x031D95CC MOV X0, X1
	0x031D95D0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+79]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF47000
	012 Move X0, [X0+3808]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+79], W8
	016 Call Mixpanel.IsInitialized
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {37}
	021 Move X20, 0xF47000
	022 Move X20, [X20+3808]
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call MixpanelStorage.get_TimedEvents
	029 Compare X0, 0
	030 JumpIfEqual {62}
	031 Move X1, X19
	032 Call Value.ContainsKey, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {41}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Move X0, [X20]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Call MixpanelStorage.get_TimedEvents
	047 Move X20, X0
	048 Call Util.CurrentTimeInSeconds
	049 Call Value.op_Implicit, V0
	050 Compare X20, 0
	051 JumpIfEqual {62}
	052 Move X2, X0
	053 Move X0, X20
	054 Move X1, X19
	055 Call Value.set_Item, X0, X1, X2
	056 Move X0, X20
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Call MixpanelStorage.set_TimedEvents, X0
	061 Return 
	062 Call 0x1C17F20

Method: System.Void Track(System.String eventName)

Disassembly:
	0x031D95D4 B 0x3C30120
	0x031D95D8 MOV X0, X1
	0x031D95DC MOV W1, W2
	0x031D95E0 MOV X2, X31
	0x031D95E4 B 0x3C300DC
	0x031D95E8 MOV X0, X1
	0x031D95EC MOV X1, X31
	0x031D95F0 B 0x3C302C0
	0x031D95F4 MOV X0, X1
	0x031D95F8 MOV X1, X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Mixpanel.IsInitialized
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {15}
	009 Move X0, X19
	010 Move X1, X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call Controller.DoTrack, X0, X1
	014 Return 
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

Method: System.Void Track(System.String eventName, System.String key, mixpanel.Value value)

Disassembly:
	0x031D8D30 CBZ X21, 0x31D8D84
	0x031D8D34 ADRP X8, 0xF48000
	0x031D8D38 LDR X8, [X8 + 0x210]
	0x031D8D3C MOV X0, X21
	0x031D8D40 MOV X2, X19
	0x031D8D44 LDR X1, [X8]
	0x031D8D48 BL 0x31D3EA4
	0x031D8D4C CBZ X20, 0x31D8D84
	0x031D8D50 ADRP X8, 0xF48000
	0x031D8D54 LDR X8, [X8 + 0x208]
	0x031D8D58 MOV X0, X20
	0x031D8D5C MOV X2, X21
	0x031D8D60 LDR X1, [X8]
	0x031D8D64 BL 0x31D3EA4
	0x031D8D68 MOV X0, X20
	0x031D8D6C LDP X20, X19, [X31 + 0x10]
	0x031D8D70 LDP X30, X21, [X31], #0x20
	0x031D8D74 B 0x31D574C
	0x031D8D78 LDP X20, X19, [X31 + 0x10]
	0x031D8D7C LDP X30, X21, [X31], #0x20
	0x031D8D80 RET
	0x031D8D84 BL 0x1C16F20
	0x031D8D88 STR D8, [X31 - 0x20]!
	0x031D8D8C STR X30, [X31 + 0x8]
	0x031D8D90 STP X20, X19, [X31 + 0x10]
	0x031D8D94 ADRP X19, 0x1204000
	0x031D8D98 ADRP X20, 0xF20000
	0x031D8D9C LDRB W8, [X19 + 0x5D]
	0x031D8DA0 LDR X20, [X20 + 0x748]
	0x031D8DA4 MOV V8.16B, V0.16B
	0x031D8DA8 TBNZ X8, 0x0, 0x31D8DCC
	0x031D8DAC ADRP X0, 0xF20000
	0x031D8DB0 LDR X0, [X0 + 0x748]
	0x031D8DB4 BL 0x1C16CF4
	0x031D8DB8 ADRP X0, 0xF48000
	0x031D8DBC LDR X0, [X0 + 0x238]
	0x031D8DC0 BL 0x1C16CF4
	0x031D8DC4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1205000
	007 Move W8, [X22+80]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xF21000
	016 Move X0, [X0+1864]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+80], W8
	020 Call Mixpanel.IsInitialized
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {46}
	025 Move X8, 0xF21000
	026 Move X8, [X8+1864]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X22, X0
	030 Call Value..ctor, X0
	031 Compare X22, 0
	032 JumpIfEqual {52}
	033 Move X0, X22
	034 Move X1, X21
	035 Move X2, X19
	036 Call Value.set_Item, X0, X1, X2
	037 Move X0, X20
	038 Move X1, X22
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Controller.DoTrack, X0, X1
	045 Return 
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Call 0x1C17F20

Method: System.Void Track(System.String eventName, mixpanel.Value properties)

Disassembly:
	0x031D89B4 LDR X0, [X22]
	0x031D89B8 BL 0x1C16F10
	0x031D89BC MOV X21, X0
	0x031D89C0 BL 0x31D3D04
	0x031D89C4 CBZ X21, 0x31D89EC
	0x031D89C8 MOV X0, X21
	0x031D89CC MOV X1, X20
	0x031D89D0 MOV X2, X19
	0x031D89D4 BL 0x31D3EA4
	0x031D89D8 MOV X0, X21
	0x031D89DC LDP X20, X19, [X31 + 0x20]
	0x031D89E0 LDP X22, X21, [X31 + 0x10]
	0x031D89E4 LDR X30, [X31], #0x30
	0x031D89E8 B 0x31D88E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call Mixpanel.IsInitialized
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {18}
	011 Move X0, X20
	012 Move X1, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Call Controller.DoTrack, X0, X1
	017 Return 
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 

Method: System.Void Unregister(System.String key)

Disassembly:
	0x031D95FC MOV X2, X31
	0x031D9600 B 0x3C3027C
	0x031D9604 MOV X0, X1
	0x031D9608 MOV X1, X31
	0x031D960C B 0x3C3032C
	0x031D9610 MOV X0, X1
	0x031D9614 MOV W1, W2
	0x031D9618 MOV X2, X31
	0x031D961C B 0x3C3004C
	0x031D9620 MOV X0, X1
	0x031D9624 MOV X1, X2
	0x031D9628 MOV X2, X31
	0x031D962C B 0x3C301EC
	0x031D9630 MOV X1, X31
	0x031D9634 B 0x33BDD8C
	0x031D9638 STP X30, X21, [X31 - 0x20]!
	0x031D963C STP X20, X19, [X31 + 0x10]
	0x031D9640 ADRP X21, 0x1203000
	0x031D9644 ADRP X20, 0xF46000
	0x031D9648 LDRB W8, [X21 + 0x6B]
	0x031D964C LDR X20, [X20 + 0xEE0]
	0x031D9650 MOV X19, X0
	0x031D9654 TBNZ X8, 0x0, 0x31D966C
	0x031D9658 ADRP X0, 0xF46000
	0x031D965C LDR X0, [X0 + 0xEE0]
	0x031D9660 BL 0x1C16CF4
	0x031D9664 MOVZ W8, 0x1
	0x031D9668 STRB W8, [X21 + 0x6B]
	0x031D966C LDR X0, [X20]
	0x031D9670 LDR W8, [X0 + 0xE0]
	0x031D9674 CBNZ W8, 0x31D9680
	0x031D9678 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move W8, [X20+81]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xF47000
	012 Move X0, [X0+3808]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+81], W8
	016 Call Mixpanel.IsInitialized
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {40}
	021 Move X8, 0xF47000
	022 Move X8, [X8+3808]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Call MixpanelStorage.get_SuperProperties
	029 Compare X0, 0
	030 JumpIfEqual {44}
	031 Move X1, X19
	032 Move X20, X0
	033 Call Value.Remove, X0, X1
	034 Move X0, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Call MixpanelStorage.set_SuperProperties, X0
	039 Return 
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void Flush(System.Action`1<System.Boolean> onFlushComplete = null)

Disassembly:
	0x031D89EC BL 0x1C16F20
	0x031D89F0 STR X30, [X31 - 0x20]!
	0x031D89F4 STP X20, X19, [X31 + 0x10]
	0x031D89F8 ADRP X20, 0x1204000
	0x031D89FC LDRB W8, [X20 + 0x58]
	0x031D8A00 MOV X19, X0
	0x031D8A04 TBNZ X8, 0x0, 0x31D8A28
	0x031D8A08 ADRP X0, 0xF20000
	0x031D8A0C LDR X0, [X0 + 0x748]
	0x031D8A10 BL 0x1C16CF4
	0x031D8A14 ADRP X0, 0xF48000
	0x031D8A18 LDR X0, [X0 + 0x228]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Mixpanel.IsInitialized
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {17}
	009 Call Controller.GetInstance
	010 Compare X0, 0
	011 JumpIfEqual {20}
	012 Move X1, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call Controller.DoFlush, X0, X1
	016 Return 
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void SetToken(System.String token)

Disassembly:
	0x031D967C LDR X0, [X20]
	0x031D9680 LDR X8, [X0 + 0xB8]
	0x031D9684 STR X19, [X8]
	0x031D9688 LDP X20, X19, [X31 + 0x10]
	0x031D968C LDP X30, X21, [X31], #0x20
	0x031D9690 RET
	0x031D9694 STR X30, [X31 - 0x20]!
	0x031D9698 STP X20, X19, [X31 + 0x10]
	0x031D969C ADRP X20, 0x1203000
	0x031D96A0 ADRP X19, 0xF46000
	0x031D96A4 LDRB W8, [X20 + 0x71]
	0x031D96A8 LDR X19, [X19 + 0xEE0]
	0x031D96AC TBNZ X8, 0x0, 0x31D96DC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call Mixpanel.IsInitialized
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {17}
	009 Call MixpanelSettings.get_Instance
	010 Compare X0, 0
	011 JumpIfEqual {20}
	012 Move [X0+48], X19
	013 Call MixpanelSettings.get_Instance
	014 Compare X0, 0
	015 JumpIfEqual {20}
	016 Move [X0+40], X19
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void Disable()

Disassembly:
	0x031D96B0 ADRP X0, 0xF46000
	0x031D96B4 LDR X0, [X0 + 0xF60]
	0x031D96B8 BL 0x1C16CF4
	0x031D96BC ADRP X0, 0xF46000
	0x031D96C0 LDR X0, [X0 + 0xEE0]
	0x031D96C4 BL 0x1C16CF4
	0x031D96C8 ADRP X0, 0xF47000

ISIL:
	001 Move [X31-16], X30
	002 Call Mixpanel.IsInitialized
	003 Move TEMP, X0
	004 And TEMP, TEMP, 1
	005 Compare TEMP, 1
	006 JumpIfNotEqual {10}
	007 Move X30, [X31+16]
	008 Call Controller.Disable
	009 Return 
	010 Move X30, [X31+16]
	011 Return 

