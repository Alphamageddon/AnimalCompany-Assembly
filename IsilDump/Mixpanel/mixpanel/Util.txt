Type: mixpanel.Util

Method: System.Double CurrentTimeInSeconds()

Disassembly:
	0x031D5F0C ADD W9, W19, 0x1
	0x031D5F10 STR W9, [X8 + 0x10]
	0x031D5F14 ADRP X8, 0xF1E000
	0x031D5F18 LDR X8, [X8 + 0x5A8]
	0x031D5F1C LDR X0, [X8]
	0x031D5F20 LDR W8, [X0 + 0xE0]
	0x031D5F24 CBNZ W8, 0x31D5F2C
	0x031D5F28 BL 0x1C16DFC
	0x031D5F2C SCVTF D1, W19
	0x031D5F30 FMOV D0, 2
	0x031D5F34 MOV X0, X31
	0x031D5F38 BL 0x337F438
	0x031D5F3C MOVZ X8, 0x404E0000
	0x031D5F40 FMOV D1, X8
	0x031D5F44 FMUL D0, D0, D1
	0x031D5F48 STR D0, [X31 + 0x18]
	0x031D5F4C ADRP X8, 0xFFFFFFFFFD918000
	0x031D5F50 LDR V1, [X8 + 0x5B0]
	0x031D5F54 MOV X0, X31
	0x031D5F58 BL 0x337EE64
	0x031D5F5C ADRP X8, 0xF1F000
	0x031D5F60 LDR X8, [X8 + 0x9F0]
	0x031D5F64 STR D0, [X31 + 0x18]
	0x031D5F68 LDR X0, [X8]
	0x031D5F6C LDR W8, [X0 + 0xE0]
	0x031D5F70 CBNZ W8, 0x31D5F78
	0x031D5F74 BL 0x1C16DFC
	0x031D5F78 MOV X0, X31
	0x031D5F7C BL 0x3361584
	0x031D5F80 LDR X8, [X20]
	0x031D5F84 LDR X9, [X8 + 0xB8]
	0x031D5F88 STR X0, [X9 + 0x18]
	0x031D5F8C LDR X8, [X8 + 0xB8]
	0x031D5F90 LDR V0, [X31 + 0x18]
	0x031D5F94 ADD X0, X8, 0x18
	0x031D5F98 MOV X1, X31
	0x031D5F9C BL 0x336059C
	0x031D5FA0 LDR X8, [X20]
	0x031D5FA4 LDR X8, [X8 + 0xB8]
	0x031D5FA8 STR X0, [X8 + 0x18]
	0x031D5FAC ADRP X8, 0xF1E000
	0x031D5FB0 LDR X8, [X8 + 0xAC8]
	0x031D5FB4 LDR X0, [X8]
	0x031D5FB8 MOVZ W1, 0x5
	0x031D5FBC BL 0x1C16D6C
	0x031D5FC0 MOV X19, X0
	0x031D5FC4 CBZ X0, 0x31D620C
	0x031D5FC8 LDR W8, [X19 + 0x18]
	0x031D5FCC CBZ W8, 0x31D6210
	0x031D5FD0 ADRP X8, 0xF4B000
	0x031D5FD4 LDR X8, [X8 + 0x100]
	0x031D5FD8 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x1208000
	006 Move X19, 0xF20000
	007 Move W8, [X20+344]
	008 Move X19, [X19+2544]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xF20000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0xF21000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+344], W8
	021 Move X0, [X19]
	022 Move [X31+24], X31
	023 Move [X31+8], X31
	024 Move X19, 0xF21000
	025 Move W8, [X0+224]
	026 Move X19, [X19+1392]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 24
	031 Move W1, 1970
	032 Move W2, 1
	033 Move W3, 1
	034 Move W7, 1
	035 Move W4, W31
	036 Move W5, W31
	037 Move W6, W31
	038 Move [X31], X31
	039 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	040 Move X0, X31
	041 Call DateTime.get_UtcNow
	042 Move X1, [X31+24]
	043 Move X2, X31
	044 Call DateTime.op_Subtraction, X0, X1
	045 Move X8, [X19]
	046 Move [X31+8], X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call TimeSpan.get_TotalSeconds, X0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Add X31, X31, 48
	059 Return V0

Method: System.Double CurrentTimeInMilliseconds()

Disassembly:
	0x031D62F0 LDR X0, [X31 + 0x28]
	0x031D62F4 LDR W8, [X0 + 0x10]
	0x031D62F8 CMP W8, 0x1
	0x031D62FC B.EQ 0x31D6308
	0x031D6300 ADDS W31, W8, 0x3
	0x031D6304 B.NE 0x31D630C
	0x031D6308 BL 0x31D6CC4
	0x031D630C MOV X0, X19
	0x031D6310 BL 0x1C16F18
	0x031D6314 BL 0x1990590
	0x031D6318 SUB X31, X31, 0x80
	0x031D631C STP X29, X30, [X31 + 0x20]
	0x031D6320 STP X28, X27, [X31 + 0x30]
	0x031D6324 STP X26, X25, [X31 + 0x40]
	0x031D6328 STP X24, X23, [X31 + 0x50]
	0x031D632C STP X22, X21, [X31 + 0x60]
	0x031D6330 STP X20, X19, [X31 + 0x70]
	0x031D6334 ADRP X24, 0x1206000
	0x031D6338 ADRP X19, 0xF4A000
	0x031D633C ADRP X20, 0xF4A000
	0x031D6340 ADRP X21, 0xF49000
	0x031D6344 LDRB W8, [X24 + 0x76]
	0x031D6348 LDR X19, [X19 + 0x130]
	0x031D634C LDR X20, [X20 + 0x138]
	0x031D6350 LDR X21, [X21 + 0xEE0]
	0x031D6354 MOV W22, W1
	0x031D6358 MOV W23, W0
	0x031D635C TBNZ X8, 0x0, 0x31D63C8
	0x031D6360 ADRP X0, 0xF49000
	0x031D6364 LDR X0, [X0 + 0xF60]
	0x031D6368 BL 0x1C16CF4
	0x031D636C ADRP X0, 0xF4A000
	0x031D6370 LDR X0, [X0 + 0x140]
	0x031D6374 BL 0x1C16CF4
	0x031D6378 ADRP X0, 0xF1D000
	0x031D637C LDR X0, [X0 + 0x5A8]
	0x031D6380 BL 0x1C16CF4
	0x031D6384 ADRP X0, 0xF49000
	0x031D6388 LDR X0, [X0 + 0xEE0]
	0x031D638C BL 0x1C16CF4
	0x031D6390 ADRP X0, 0xF4A000
	0x031D6394 LDR X0, [X0 + 0xD0]
	0x031D6398 BL 0x1C16CF4
	0x031D639C ADRP X0, 0xF4A000
	0x031D63A0 LDR X0, [X0 + 0x130]
	0x031D63A4 BL 0x1C16CF4
	0x031D63A8 ADRP X0, 0xF4A000
	0x031D63AC LDR X0, [X0 + 0x138]
	0x031D63B0 BL 0x1C16CF4
	0x031D63B4 ADRP X0, 0xF4A000
	0x031D63B8 LDR X0, [X0 + 0xD8]
	0x031D63BC BL 0x1C16CF4
	0x031D63C0 MOVZ W8, 0x1
	0x031D63C4 STRB W8, [X24 + 0x76]
	0x031D63C8 BL 0x31D9B70
	0x031D63CC LDR X8, [X21]
	0x031D63D0 CMP W23, 0x0
	0x031D63D4 CSEL X9, X19, X20, EQ
	0x031D63D8 LDR X9, [X9]
	0x031D63DC LDR W10, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x1207000
	006 Move X19, 0xF1F000
	007 Move W8, [X20+345]
	008 Move X19, [X19+2544]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xF1F000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0xF20000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+345], W8
	021 Move X0, [X19]
	022 Move [X31+24], X31
	023 Move [X31+8], X31
	024 Move X19, 0xF20000
	025 Move W8, [X0+224]
	026 Move X19, [X19+1392]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 24
	031 Move W1, 1970
	032 Move W2, 1
	033 Move W3, 1
	034 Move W7, 1
	035 Move W4, W31
	036 Move W5, W31
	037 Move W6, W31
	038 Move [X31], X31
	039 Call DateTime..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	040 Move X0, X31
	041 Call DateTime.get_UtcNow
	042 Move X1, [X31+24]
	043 Move X2, X31
	044 Call DateTime.op_Subtraction, X0, X1
	045 Move X8, [X19]
	046 Move [X31+8], X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call TimeSpan.get_TotalMilliseconds, X0
	055 Move X9, 0x7FF00000
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X30, [X31+16]
	059 NotImplemented "Instruction FCVTZS not yet implemented."
	060 Move X10, 0xC3E00000
	061 Move D2, X9
	062 NotImplemented "Instruction SCVTF not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move D0, X10
	065 NotImplemented "Instruction FCSEL not yet implemented."
	066 Add X31, X31, 48
	067 Return V0

Method: System.String CurrentDateTime()

Disassembly:
	0x031D9E18 MOV X0, X8
	0x031D9E1C BL 0x1C16DFC
	0x031D9E20 LDR X8, [X26]
	0x031D9E24 LDR X8, [X8 + 0xB8]
	0x031D9E28 LDR X25, [X8]
	0x031D9E2C CBZ X25, 0x31DA134
	0x031D9E30 LDR X8, [X25]
	0x031D9E34 LDR X1, [X19]
	0x031D9E38 LDRH W9, [X8 + 0x12E]
	0x031D9E3C CBZ X9, 0x31D9E60
	0x031D9E40 LDR X10, [X8 + 0xB0]
	0x031D9E44 ADD X10, X10, 0x8
	0x031D9E48 LDUR X11, [X10 - 0x8]
	0x031D9E4C CMP X11, X1
	0x031D9E50 B.EQ 0x31D9E70
	0x031D9E54 SUBS X9, X9, 0x1
	0x031D9E58 ADD X10, X10, 0x10
	0x031D9E5C B.NE 0x31D9E48
	0x031D9E60 MOVZ W2, 0x5
	0x031D9E64 MOV X0, X25
	0x031D9E68 BL 0x1C5C788
	0x031D9E6C B 0x31D9E80
	0x031D9E70 LDR W9, [X10]
	0x031D9E74 ADD W9, W9, 0x5
	0x031D9E78 ADD X8, X8, W9, 0x4, SXTW
	0x031D9E7C ADD X0, X8, 0x138
	0x031D9E80 LDP X8, X2, [X0]
	0x031D9E84 MOV X0, X25
	0x031D9E88 MOV X1, X24
	0x031D9E8C BLR X8
	0x031D9E90 TBZ X0, 0x0, 0x31D9F14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1204000
	005 Move X19, 0xF1C000
	006 Move W8, [X20+346]
	007 Move X19, [X19+2544]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xF1C000
	013 Move X0, [X0+2544]
	014 Call 0x1C17CF4
	015 Move X0, 0xF48000
	016 Move X0, [X0+576]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+346], W8
	020 Move X0, [X19]
	021 Move X19, 0xF48000
	022 Move W8, [X0+224]
	023 Move X19, [X19+576]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call DateTime.get_UtcNow
	029 Move X1, [X19]
	030 Move [X31+8], X0
	031 Add X0, X31, 8
	032 Move X2, X31
	033 Call DateTime.ToString, X0, X1
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.String GetRadio()

Disassembly:
	0x031D4F70 MOVZ W1, 0x7B2
	0x031D4F74 MOVZ W2, 0x1
	0x031D4F78 MOVZ W3, 0x1
	0x031D4F7C MOVZ W7, 0x1
	0x031D4F80 MOV W4, W31
	0x031D4F84 MOV W5, W31
	0x031D4F88 MOV W6, W31
	0x031D4F8C STR X31, [X31]
	0x031D4F90 BL 0x335F47C
	0x031D4F94 MOV X0, X31
	0x031D4F98 BL 0x33616A4
	0x031D4F9C LDR X1, [X31 + 0x18]
	0x031D4FA0 MOV X2, X31
	0x031D4FA4 BL 0x3363010
	0x031D4FA8 LDR X8, [X19]
	0x031D4FAC STR X0, [X31 + 0x8]
	0x031D4FB0 LDR W9, [X8 + 0xE0]
	0x031D4FB4 CBNZ W9, 0x31D4FC0
	0x031D4FB8 MOV X0, X8
	0x031D4FBC BL 0x1C16DFC
	0x031D4FC0 ADD X0, X31, 0x8
	0x031D4FC4 MOV X1, X31
	0x031D4FC8 BL 0x3394234
	0x031D4FCC LDP X20, X19, [X31 + 0x20]
	0x031D4FD0 LDR X30, [X31 + 0x10]
	0x031D4FD4 ADD X31, X31, 0x30
	0x031D4FD8 RET
	0x031D4FDC STR X30, [X31 - 0x10]!
	0x031D4FE0 CBZ X0, 0x31D4FF0
	0x031D4FE4 LDR V0, [X0 + 0x28]
	0x031D4FE8 LDR X30, [X31], #0x10
	0x031D4FEC RET
	0x031D4FF0 BL 0x1C16F20
	0x031D4FF4 STR D8, [X31 - 0x20]!
	0x031D4FF8 STR X30, [X31 + 0x8]
	0x031D4FFC STP X20, X19, [X31 + 0x10]
	0x031D5000 ADRP X19, 0x1207000
	0x031D5004 ADRP X20, 0xF23000
	0x031D5008 LDRB W8, [X19 + 0xCD]
	0x031D500C B 0x3EB160C
	0x031D5010 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1209000
	006 Move X19, 0xF20000
	007 Move W8, [X20+347]
	008 Move X19, [X19+2416]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0xF20000
	014 Move X0, [X0+2416]
	015 Call 0x1C17CF4
	016 Move X0, 0xF4C000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move X0, 0xF4C000
	020 Move X0, [X0+4088]
	021 Call 0x1C17CF4
	022 Move X0, 0xF4D000
	023 Move X0, [X0]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+347], W8
	027 Move X0, [X19]
	028 Move X20, 0xF4C000
	029 Move X21, 0xF4D000
	030 Move X19, 0xF4C000
	031 Move W8, [X0+224]
	032 Move X20, [X20+4080]
	033 Move X21, [X21]
	034 Move X19, [X19+4088]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call Application.get_internetReachability
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X0, [X8]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0

