Type: UnityEngineInternal.Input.NativeInputSystem

Method: System.Action`2<System.Int32, System.String> get_onDeviceDiscovered()

Disassembly:
	0x03C87684 ADRP X22, 0x46C000
	0x03C87688 ADRP X21, 0x46C000
	0x03C8768C LDRB W8, [X19 + 0xBA0]
	0x03C87690 LDR X22, [X22 + 0x9D0]
	0x03C87694 LDR X21, [X21 + 0x758]
	0x03C87698 MOV X20, X0
	0x03C8769C TBNZ X8, 0x0, 0x3C876CC
	0x03C876A0 ADRP X0, 0x46C000
	0x03C876A4 LDR X0, [X0 + 0x758]
	0x03C876A8 BL 0x1C16CF4
	0x03C876AC ADRP X0, 0x46C000
	0x03C876B0 LDR X0, [X0 + 0x9D0]
	0x03C876B4 BL 0x1C16CF4
	0x03C876B8 ADRP X0, 0x4B6000
	0x03C876BC LDR X0, [X0 + 0x6F8]
	0x03C876C0 BL 0x1C16CF4
	0x03C876C4 MOVZ W8, 0x1
	0x03C876C8 STRB W8, [X19 + 0xBA0]
	0x03C876CC LDR X0, [X22]
	0x03C876D0 MOVZ W1, 0x1
	0x03C876D4 BL 0x1C16D6C
	0x03C876D8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x760000
	005 Move X19, 0x4C4000
	006 Move W8, [X20+2824]
	007 Move X19, [X19+1056]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4C4000
	013 Move X0, [X0+1056]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2824], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_onDeviceDiscovered(System.Action`2<System.Int32, System.String> value)

Disassembly:
	0x03C876DC LDR W8, [X20]
	0x03C876E0 LDR X0, [X21]
	0x03C876E4 ADD X1, X31, 0xC
	0x03C876E8 STR W8, [X31 + 0xC]
	0x03C876EC BL 0x1C16E04
	0x03C876F0 CBZ X19, 0x3C87744
	0x03C876F4 MOV X20, X0
	0x03C876F8 CBZ X0, 0x3C87710
	0x03C876FC LDR X8, [X19]
	0x03C87700 MOV X0, X20
	0x03C87704 LDR X1, [X8 + 0x40]
	0x03C87708 BL 0x1C16E00
	0x03C8770C CBZ X0, 0x3C8774C
	0x03C87710 LDR W8, [X19 + 0x18]
	0x03C87714 CBZ W8, 0x3C87748
	0x03C87718 ADRP X8, 0x4B6000
	0x03C8771C LDR X8, [X8 + 0x6F8]
	0x03C87720 STR X20, [X19 + 0x20]
	0x03C87724 MOV X1, X19
	0x03C87728 MOV X2, X31
	0x03C8772C LDR X0, [X8]
	0x03C87730 BL 0x3C96574
	0x03C87734 LDP X20, X19, [X31 + 0x20]
	0x03C87738 LDP X22, X21, [X31 + 0x10]
	0x03C8773C LDR X30, [X31], #0x30
	0x03C87740 RET
	0x03C87744 BL 0x1C16F20
	0x03C87748 BL 0x1C16F28
	0x03C8774C BL 0x1C16F44
	0x03C87750 MOV X1, X31
	0x03C87754 BL 0x1C16DEC
	0x03C87758 CMP W0, W1
	0x03C8775C CSET W0, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x760000
	006 Move X20, 0x4C4000
	007 Move W8, [X21+2825]
	008 Move X20, [X20+1056]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4C4000
	015 Move X0, [X0+1056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2825], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X20, 0x760000
	027 Move [X8+24], X19
	028 Move X1, [X20+2832]
	029 Compare X1, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51941376
	032 Add X0, X0, 2478
	033 Call 0x1C17CB8
	034 Move X1, X0
	035 Move [X20+2832], X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X1

Method: System.Void .cctor()

Disassembly:
	0x03C8779C CBZ X20, 0x3C877B8
	0x03C877A0 ADRP X8, 0x4D9000
	0x03C877A4 LDR X8, [X8 + 0x888]
	0x03C877A8 LDR X9, [X20]
	0x03C877AC LDR X8, [X8]
	0x03C877B0 CMP X9, X8
	0x03C877B4 B.EQ 0x3C877C0
	0x03C877B8 MOV W0, W31
	0x03C877BC B 0x3C877D8
	0x03C877C0 MOV X0, X20
	0x03C877C4 BL 0x1C16E08
	0x03C877C8 LDR W8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x760000
	004 Move X1, [X19+2832]
	005 Compare X1, 0
	006 JumpIfNotEqual {12}
	007 Move X0, -51941376
	008 Add X0, X0, 2478
	009 Call 0x1C17CB8
	010 Move X1, X0
	011 Move [X19+2832], X0
	012 Move W0, W31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 CallNoReturn X1

Method: System.Void NotifyBeforeUpdate(UnityEngineInternal.Input.NativeInputUpdateType updateType)

Disassembly:
	0x03C877CC LDR W9, [X19]
	0x03C877D0 CMP W9, W8
	0x03C877D4 CSET W0, EQ
	0x03C877D8 LDP X20, X19, [X31 + 0x10]
	0x03C877DC LDP X30, X21, [X31], #0x20
	0x03C877E0 RET
	0x03C877E4 LDR W8, [X0]
	0x03C877E8 CMP W8, W1
	0x03C877EC CSET W0, EQ
	0x03C877F0 RET
	0x03C877F4 SUB X31, X31, 0x20
	0x03C877F8 STP X30, X19, [X31 + 0x10]
	0x03C877FC ADRP X19, 0x75F000
	0x03C87800 LDR W9, [X0]
	0x03C87804 LDR X8, [X19 + 0xBA8]
	0x03C87808 STR W9, [X31 + 0x8]
	0x03C8780C CBNZ X8, 0x3C87824
	0x03C87810 ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C87814 ADD X0, X0, 0x889
	0x03C87818 BL 0x1C16CB8
	0x03C8781C MOV X8, X0
	0x03C87820 STR X0, [X19 + 0xBA8]
	0x03C87824 ADD X0, X31, 0x8
	0x03C87828 BLR X8
	0x03C8782C LDP X30, X19, [X31 + 0x10]
	0x03C87830 AND W0, W0, 0x1
	0x03C87834 ADD X31, X31, 0x20
	0x03C87838 RET
	0x03C8783C SUB X31, X31, 0x20
	0x03C87840 STP X30, X19, [X31 + 0x10]
	0x03C87844 ADRP X19, 0x75F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x760000
	006 Move X20, 0x4C4000
	007 Move W8, [X21+2826]
	008 Move X20, [X20+1056]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4C4000
	015 Move X0, [X0+1056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2826], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8+8]
	027 Compare X8, 0
	028 JumpIfEqual {38}
	029 Move X3, [X8+24]
	030 Move X0, [X8+64]
	031 Move X2, [X8+40]
	032 Move W1, W19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 CallNoReturn X3
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

Method: System.Void NotifyUpdate(UnityEngineInternal.Input.NativeInputUpdateType updateType, System.IntPtr eventBuffer)

Disassembly:
	0x03C87848 LDR X8, [X19 + 0xBA8]
	0x03C8784C STR W0, [X31 + 0x8]
	0x03C87850 CBNZ X8, 0x3C87868
	0x03C87854 ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C87858 ADD X0, X0, 0x889
	0x03C8785C BL 0x1C16CB8
	0x03C87860 MOV X8, X0
	0x03C87864 STR X0, [X19 + 0xBA8]
	0x03C87868 ADD X0, X31, 0x8
	0x03C8786C BLR X8
	0x03C87870 LDP X30, X19, [X31 + 0x10]
	0x03C87874 AND W0, W0, 0x1
	0x03C87878 ADD X31, X31, 0x20
	0x03C8787C RET
	0x03C87880 STR X30, [X31 - 0x20]!
	0x03C87884 STP X20, X19, [X31 + 0x10]
	0x03C87888 ADRP X20, 0x75F000
	0x03C8788C LDR X1, [X20 + 0xBA8]
	0x03C87890 MOV X19, X0
	0x03C87894 CBNZ X1, 0x3C878AC
	0x03C87898 ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C8789C ADD X0, X0, 0x889
	0x03C878A0 BL 0x1C16CB8
	0x03C878A4 MOV X1, X0
	0x03C878A8 STR X0, [X20 + 0xBA8]
	0x03C878AC MOV X0, X19
	0x03C878B0 LDP X20, X19, [X31 + 0x10]
	0x03C878B4 LDR X30, [X31], #0x20
	0x03C878B8 BR X1
	0x03C878BC SUB X31, X31, 0x30
	0x03C878C0 STR D8, [X31 + 0x10]
	0x03C878C4 STR X30, [X31 + 0x18]
	0x03C878C8 STP X20, X19, [X31 + 0x20]
	0x03C878CC ADRP X20, 0x75F000
	0x03C878D0 LDRB W8, [X20 + 0xBA2]
	0x03C878D4 MOV V8.16B, V0.16B
	0x03C878D8 MOV X19, X0
	0x03C878DC TBNZ X8, 0x0, 0x3C878F4
	0x03C878E0 ADRP X0, 0x473000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x760000
	007 Move X21, 0x4C4000
	008 Move W8, [X22+2827]
	009 Move X21, [X21+1056]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4C4000
	017 Move X0, [X0+1056]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2827], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X8, [X8]
	029 Compare X8, 0
	030 JumpIfEqual {42}
	031 Move X4, [X8+24]
	032 Move X0, [X8+64]
	033 Move X3, [X8+40]
	034 Move W1, W20
	035 Move X2, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 CallNoReturn X4
	042 Compare X19, 0
	043 JumpIfEqual {51}
	044 Move [X19+8], X31
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void NotifyDeviceDiscovered(System.Int32 deviceId, System.String deviceDescriptor)

Disassembly:
	0x03C878E4 LDR X0, [X0 + 0xC60]
	0x03C878E8 BL 0x1C16CF4
	0x03C878EC MOVZ W8, 0x1
	0x03C878F0 STRB W8, [X20 + 0xBA2]
	0x03C878F4 ADRP X20, 0x75F000
	0x03C878F8 LDR W9, [X19]
	0x03C878FC LDR X8, [X20 + 0xBA8]
	0x03C87900 STR W9, [X31 + 0x8]
	0x03C87904 CBNZ X8, 0x3C8791C
	0x03C87908 ADRP X0, 0xFFFFFFFFFCE6E000
	0x03C8790C ADD X0, X0, 0x889
	0x03C87910 BL 0x1C16CB8
	0x03C87914 MOV X8, X0
	0x03C87918 STR X0, [X20 + 0xBA8]
	0x03C8791C ADD X0, X31, 0x8
	0x03C87920 BLR X8
	0x03C87924 TBZ X0, 0x0, 0x3C87968
	0x03C87928 ADRP X8, 0x473000
	0x03C8792C LDR X8, [X8 + 0xC60]
	0x03C87930 LDR W19, [X19]
	0x03C87934 LDR X0, [X8]
	0x03C87938 LDR W8, [X0 + 0xE0]
	0x03C8793C CBNZ W8, 0x3C87944
	0x03C87940 BL 0x1C16DFC
	0x03C87944 MOV X0, X19
	0x03C87948 MOV V0.16B, V8.16B
	0x03C8794C BL 0x3C879B0
	0x03C87950 LDP X20, X19, [X31 + 0x20]
	0x03C87954 LDR X30, [X31 + 0x18]
	0x03C87958 LDR V8, [X31 + 0x10]
	0x03C8795C AND W0, W0, 0x1
	0x03C87960 ADD X31, X31, 0x30
	0x03C87964 RET
	0x03C87968 ADRP X0, 0x46C000
	0x03C8796C LDR X0, [X0 + 0x5B0]
	0x03C87970 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x760000
	007 Move X21, 0x4C4000
	008 Move W8, [X22+2828]
	009 Move X21, [X21+1056]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4C4000
	017 Move X0, [X0+1056]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2828], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X8, [X8+24]
	029 Compare X8, 0
	030 JumpIfEqual {42}
	031 Move X4, [X8+24]
	032 Move X0, [X8+64]
	033 Move X3, [X8+40]
	034 Move W1, W20
	035 Move X2, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 CallNoReturn X4
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Void ShouldRunUpdate(UnityEngineInternal.Input.NativeInputUpdateType updateType, out System.Boolean retval)

Disassembly:
	0x03C87974 BL 0x1C16F10
	0x03C87978 MOV X19, X0
	0x03C8797C ADRP X0, 0x4D9000
	0x03C87980 LDR X0, [X0 + 0x890]
	0x03C87984 BL 0x1C16D08
	0x03C87988 MOV X1, X0
	0x03C8798C MOV X0, X19
	0x03C87990 MOV X2, X31
	0x03C87994 BL 0x337DF1C
	0x03C87998 ADRP X0, 0x4D9000
	0x03C8799C LDR X0, [X0 + 0x898]
	0x03C879A0 BL 0x1C16D08
	0x03C879A4 MOV X1, X0
	0x03C879A8 MOV X0, X19
	0x03C879AC BL 0x1C16DEC
	0x03C879B0 SUB X31, X31, 0x30
	0x03C879B4 STR D8, [X31 + 0x10]
	0x03C879B8 STR X30, [X31 + 0x18]
	0x03C879BC STP X20, X19, [X31 + 0x20]
	0x03C879C0 ADRP X19, 0x75F000
	0x03C879C4 STR W0, [X31 + 0x8]
	0x03C879C8 ADRP X20, 0x473000
	0x03C879CC LDRB W8, [X19 + 0xC29]
	0x03C879D0 LDR X20, [X20 + 0xC60]
	0x03C879D4 MOV V8.16B, V0.16B
	0x03C879D8 TBNZ X8, 0x0, 0x3C879F0
	0x03C879DC ADRP X0, 0x473000
	0x03C879E0 LDR X0, [X0 + 0xC60]
	0x03C879E4 BL 0x1C16CF4
	0x03C879E8 MOVZ W8, 0x1
	0x03C879EC STRB W8, [X19 + 0xC29]
	0x03C879F0 LDR X0, [X20]
	0x03C879F4 LDR W8, [X0 + 0xE0]
	0x03C879F8 CBNZ W8, 0x3C87A00
	0x03C879FC BL 0x1C16DFC
	0x03C87A00 ADRP X19, 0x75F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x760000
	007 Move X21, 0x4C4000
	008 Move W8, [X22+2829]
	009 Move X21, [X21+1056]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4C4000
	017 Move X0, [X0+1056]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2829], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X8, [X8+16]
	029 Compare X8, 0
	030 JumpIfEqual {37}
	031 Move X9, [X8+24]
	032 Move X0, [X8+64]
	033 Move X2, [X8+40]
	034 Move W1, W20
	035 NotImplemented "Instruction BLR not yet implemented."
	036 And W8, W0, 1
	037 Move W8, 1
	038 Move [X19], W8
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 

Method: System.Void set_hasDeviceDiscoveredCallback(System.Boolean value)

Disassembly:
	0x03C87760 RET
	0x03C87764 LDR W0, [X0]
	0x03C87768 RET
	0x03C8776C STP X30, X21, [X31 - 0x20]!
	0x03C87770 STP X20, X19, [X31 + 0x10]
	0x03C87774 ADRP X21, 0x75F000
	0x03C87778 LDRB W8, [X21 + 0xBA1]
	0x03C8777C MOV X20, X1
	0x03C87780 MOV X19, X0
	0x03C87784 TBNZ X8, 0x0, 0x3C8779C
	0x03C87788 ADRP X0, 0x4D9000
	0x03C8778C LDR X0, [X0 + 0x888]
	0x03C87790 BL 0x1C16CF4
	0x03C87794 MOVZ W8, 0x1
	0x03C87798 STRB W8, [X21 + 0xBA1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x760000
	005 Move X1, [X20+2832]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51941376
	010 Add X0, X0, 2478
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2832], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Double get_currentTime()

Disassembly:
	0x03C87A04 LDR X8, [X19 + 0xC40]
	0x03C87A08 CBNZ X8, 0x3C87A20
	0x03C87A0C ADRP X0, 0xFFFFFFFFFCE86000
	0x03C87A10 ADD X0, X0, 0x898
	0x03C87A14 BL 0x1C16CB8
	0x03C87A18 MOV X8, X0
	0x03C87A1C STR X0, [X19 + 0xC40]
	0x03C87A20 ADD X0, X31, 0x8
	0x03C87A24 MOV V0.16B, V8.16B
	0x03C87A28 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x760000
	004 Move X0, [X19+2840]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51924992
	008 Add X0, X0, 1584
	009 Call 0x1C17CB8
	010 Move [X19+2840], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Double get_currentTimeOffsetToRealtimeSinceStartup()

Disassembly:
	0x03C87A2C LDP X20, X19, [X31 + 0x20]
	0x03C87A30 LDR X30, [X31 + 0x18]
	0x03C87A34 LDR V8, [X31 + 0x10]
	0x03C87A38 AND W0, W0, 0x1
	0x03C87A3C ADD X31, X31, 0x30
	0x03C87A40 RET
	0x03C87A44 SUB X31, X31, 0xB0
	0x03C87A48 STR D12, [X31 + 0x70]
	0x03C87A4C STP D11, D10, [X31 + 0x78]
	0x03C87A50 STP D9, D8, [X31 + 0x88]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x760000
	004 Move X0, [X19+2848]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51998720
	008 Add X0, X0, 1805
	009 Call 0x1C17CB8
	010 Move [X19+2848], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Int32 AllocateDeviceId()

Disassembly:
	0x03C87A54 STR X30, [X31 + 0x98]
	0x03C87A58 STP X20, X19, [X31 + 0xA0]
	0x03C87A5C MOV V12.16B, V0.16B
	0x03C87A60 MOVI V0.2D, 0x0
	0x03C87A64 MOVZ W9, 0xFF800000
	0x03C87A68 MOVZ W10, 0x7F800000
	0x03C87A6C MOV V11.16B, V1.16B
	0x03C87A70 MOV X19, X0
	0x03C87A74 MOV X20, X8
	0x03C87A78 STP V0, V0, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x760000
	004 Move X0, [X19+2856]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51916800
	008 Add X0, X0, 2287
	009 Call 0x1C17CB8
	010 Move [X19+2856], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void QueueInputEvent(System.IntPtr inputEvent)

Disassembly:
	0x03C87A7C ADD X8, X31, 0x50
	0x03C87A80 FMOV S0, W9
	0x03C87A84 FMOV S1, W10
	0x03C87A88 MOV W0, W1
	0x03C87A8C MOV V8.16B, V4.16B
	0x03C87A90 MOV V9.16B, V3.16B
	0x03C87A94 MOV V10.16B, V2.16B
	0x03C87A98 STP X31, X31, [X31 + 0x50]
	0x03C87A9C STR W31, [X31 + 0x68]
	0x03C87AA0 STR X31, [X31 + 0x60]
	0x03C87AA4 STR W31, [X31 + 0x40]
	0x03C87AA8 BL 0x3C87B0C
	0x03C87AAC LDR V0, [X31 + 0x5]
	0x03C87AB0 LDUR V1, [X31 + 0x5C]
	0x03C87AB4 LDR W0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x760000
	005 Move X1, [X20+2864]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51843072
	010 Add X0, X0, 179
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2864], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int64 IOCTL(System.Int32 deviceId, System.Int32 code, System.IntPtr data, System.Int32 sizeInBytes)

Disassembly:
	0x03C87AB8 ADD X8, X31, 0x20
	0x03C87ABC STR V0, [X31]
	0x03C87AC0 STUR V1, [X31 + 0xC]
	0x03C87AC4 ADD X1, X31, 0x0
	0x03C87AC8 MOV V0.16B, V12.16B
	0x03C87ACC MOV V1.16B, V11.16B
	0x03C87AD0 MOV V2.16B, V10.16B
	0x03C87AD4 MOV V3.16B, V9.16B
	0x03C87AD8 MOV V4.16B, V8.16B
	0x03C87ADC BL 0x3C87C0C
	0x03C87AE0 LDR W8, [X31 + 0x40]
	0x03C87AE4 LDP V1, V0, [X31 + 0x20]
	0x03C87AE8 LDR X30, [X31 + 0x98]
	0x03C87AEC LDP D9, D8, [X31 + 0x88]
	0x03C87AF0 STR W8, [X20 + 0x20]
	0x03C87AF4 STP V1, V0, [X20]
	0x03C87AF8 LDP X20, X19, [X31 + 0xA0]
	0x03C87AFC LDP D11, D10, [X31 + 0x78]
	0x03C87B00 LDR V12, [X31 + 0x70]
	0x03C87B04 ADD X31, X31, 0xB0
	0x03C87B08 RET
	0x03C87B0C SUB X31, X31, 0x60
	0x03C87B10 STP D9, D8, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x760000
	008 Move X4, [X23+2872]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move W22, W0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51916800
	016 Add X0, X0, 2351
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2872], X0
	020 Move W0, W22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetPollingFrequency(System.Single hertz)

Disassembly:
	0x03C87B14 STR X30, [X31 + 0x30]
	0x03C87B18 STP X22, X21, [X31 + 0x40]
	0x03C87B1C STP X20, X19, [X31 + 0x50]
	0x03C87B20 ADRP X22, 0x75F000
	0x03C87B24 ADRP X21, 0x473000
	0x03C87B28 MOV X19, X8
	0x03C87B2C LDRB W8, [X22 + 0xC50]
	0x03C87B30 LDR X21, [X21 + 0xC60]
	0x03C87B34 MOV V8.16B, V1.16B
	0x03C87B38 MOV V9.16B, V0.16B
	0x03C87B3C MOV W20, W0
	0x03C87B40 TBNZ X8, 0x0, 0x3C87B58
	0x03C87B44 ADRP X0, 0x473000
	0x03C87B48 LDR X0, [X0 + 0xC60]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x760000
	005 Move X0, [X19+2880]
	006 Move V8, V0
	007 Compare X0, 0
	008 JumpIfNotEqual {13}
	009 Move X0, -51793920
	010 Add X0, X0, 806
	011 Call 0x1C17CB8
	012 Move [X19+2880], X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Move V0, V8
	016 Move V8, [X31+32]
	017 CallNoReturn X0

Method: System.Void Update(UnityEngineInternal.Input.NativeInputUpdateType updateType)

Disassembly:
	0x03C87B4C BL 0x1C16CF4
	0x03C87B50 MOVZ W8, 0x1
	0x03C87B54 STRB W8, [X22 + 0xC50]
	0x03C87B58 LDR X0, [X21]
	0x03C87B5C STP X31, X31, [X31]
	0x03C87B60 STR W31, [X31 + 0x18]
	0x03C87B64 STR X31, [X31 + 0x10]
	0x03C87B68 LDR W8, [X0 + 0xE0]
	0x03C87B6C CBNZ W8, 0x3C87B74
	0x03C87B70 BL 0x1C16DFC
	0x03C87B74 ADRP X21, 0x75F000
	0x03C87B78 LDR X8, [X21 + 0xBF0]
	0x03C87B7C CBNZ X8, 0x3C87B94
	0x03C87B80 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C87B84 ADD X0, X0, 0xFAE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x760000
	005 Move X1, [X20+2888]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51793920
	010 Add X0, X0, 886
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2888], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

