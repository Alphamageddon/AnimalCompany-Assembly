Type: SpatialSys.PriorityQueueNS.PriorityQueue`1

Method: System.Void .ctor()

Disassembly:
	0x024B4510 LDR X21, [X31 + 0x18]
	0x024B4514 STR W8, [X9]
	0x024B4518 LDR X0, [X10 + 0x48]
	0x024B451C LDRB W8, [X0 + 0x135]
	0x024B4520 TBNZ X8, 0x0, 0x24B4528
	0x024B4524 BL 0x1C5C684
	0x024B4528 LDR X20, [X31 + 0x28]
	0x024B452C BL 0x1C16F10
	0x024B4530 LDR X8, [X26 + 0x20]
	0x024B4534 MOV X22, X0
	0x024B4538 LDR X8, [X8 + 0xC0]
	0x024B453C LDR X1, [X8 + 0x50]
	0x024B4540 BL 0x25FFE84
	0x024B4544 CBZ X22, 0x24B4760
	0x024B4548 SUB W8, W27, W20
	0x024B454C ADD W8, W8, 0x1
	0x024B4550 SUB W9, W28, W24
	0x024B4554 CMP W8, W9
	0x024B4558 B.LT 0x24B4590
	0x024B455C STP W20, W27, [X22 + 0x10]
	0x024B4560 LDR X8, [X26 + 0x20]
	0x024B4564 MOV X0, X21
	0x024B4568 MOV X1, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X8, [X20+32]
	009 Move X8, [X8+192]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X20, X0
	020 Move X8, [X8+192]
	021 Move X1, [X8+8]
	022 Call SortedList`2<Int32, Object>..ctor, X0
	023 Move [X19+16], X20
	024 Move [X19+24], W31
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x024B456C ADD W20, W24, 0x1
	0x024B4570 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Boolean get_IsEmpty()

Disassembly:
	0x024B4574 LDR X2, [X8 + 0x58]
	0x024B4578 BL 0x2602314
	0x024B457C LDR W13, [X31 + 0x14]
	0x024B4580 ADD W8, W24, 0xB

ISIL:
	001 Move W8, [X0+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void Enqueue(T item, System.Int32 priority)

Disassembly:
	0x024B4584 CMP W28, W8
	0x024B4588 B.GT 0x24B436C
	0x024B458C B 0x24B45C4
	0x024B4590 ADD W8, W24, 0x1
	0x024B4594 STP W8, W28, [X22 + 0x10]
	0x024B4598 LDR X8, [X26 + 0x20]
	0x024B459C MOV X0, X21
	0x024B45A0 MOV X1, X22
	0x024B45A4 LDR X8, [X8 + 0xC0]
	0x024B45A8 LDR X2, [X8 + 0x58]
	0x024B45AC BL 0x2602314
	0x024B45B0 ADD W8, W20, 0xA
	0x024B45B4 CMP W27, W8
	0x024B45B8 MOV W28, W27
	0x024B45BC B.GT 0x24B4364
	0x024B45C0 B 0x24B45CC
	0x024B45C4 ADD W20, W24, 0x1
	0x024B45C8 MOV W27, W28
	0x024B45CC ADD W22, W20, 0x1
	0x024B45D0 CMP W22, W27
	0x024B45D4 B.GT 0x24B4708
	0x024B45D8 LDR X8, [X19 + 0x28]
	0x024B45DC SXTW X24, W20
	0x024B45E0 MOV W25, W20
	0x024B45E4 STR X20, [X31 + 0x28]
	0x024B45E8 CBZ X8, 0x24B4760
	0x024B45EC LDR X9, [X8 + 0x18]
	0x024B45F0 CMP W22, W9
	0x024B45F4 B.CS 0x24B475C
	0x024B45F8 SXTW X21, W22
	0x024B45FC ADD X10, X8, X21, 0x2, LSL
	0x024B4600 LDR W28, [X10 + 0x20]
	0x024B4604 CMP W22, W20
	0x024B4608 B.LE 0x24B46CC
	0x024B460C MOV X29, X31
	0x024B4610 SBFM X23, X22, 0x3E, 0x1F
	0x024B4614 SXTW X26, W28
	0x024B4618 LDR X10, [X19 + 0x20]
	0x024B461C CBZ X10, 0x24B4760
	0x024B4620 LDR W11, [X10 + 0x18]
	0x024B4624 CMP W28, W11
	0x024B4628 B.CS 0x24B475C
	0x024B462C ADD X20, X25, X29
	0x024B4630 CMP W20, W9
	0x024B4634 B.CS 0x24B475C
	0x024B4638 ADD X8, X8, X23
	0x024B463C ADD X8, X8, X29, 0x2, LSL
	0x024B4640 LDRSW X8, [X8 + 0x1C]
	0x024B4644 CMP W8, W11
	0x024B4648 B.CS 0x24B475C
	0x024B464C LDR X9, [X19 + 0x10]
	0x024B4650 CBZ X9, 0x24B4760
	0x024B4654 ADD X11, X10, X26, 0x3, LSL
	0x024B4658 ADD X8, X10, X8, 0x3, LSL
	0x024B465C LDR X10, [X9 + 0x18]
	0x024B4660 LDR X0, [X9 + 0x40]
	0x024B4664 LDR X1, [X11 + 0x20]
	0x024B4668 LDR X2, [X8 + 0x20]
	0x024B466C LDR X3, [X9 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Move X0, [X0+16]
	010 Compare X0, 0
	011 JumpIfEqual {75}
	012 Move X8, [X3+32]
	013 Move W22, W2
	014 Move X20, X1
	015 Move W1, W22
	016 Move X8, [X8+192]
	017 Move X21, X3
	018 Move X2, [X8+24]
	019 Call SortedList`2<Int32, Object>.ContainsKey, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {49}
	024 Move X8, [X21+32]
	025 Move X23, [X19+16]
	026 Move X8, [X8+192]
	027 Move X0, [X8+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Call 0x1C17F10
	035 Move X8, [X21+32]
	036 Move X24, X0
	037 Move X8, [X8+192]
	038 Move X1, [X8+40]
	039 Call Queue`1<Object>..ctor, X0
	040 Compare X23, 0
	041 JumpIfEqual {75}
	042 Move X8, [X21+32]
	043 Move X0, X23
	044 Move W1, W22
	045 Move X2, X24
	046 Move X8, [X8+192]
	047 Move X3, [X8+48]
	048 Call SortedList`2<Int32, Object>.Add, X0, X1, X2
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfEqual {75}
	052 Move X8, [X21+32]
	053 Move W1, W22
	054 Move X8, [X8+192]
	055 Move X2, [X8+56]
	056 Call SortedList`2<Int32, Object>.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {75}
	059 Move X8, [X21+32]
	060 Move X1, X20
	061 Move X8, [X8+192]
	062 Move X2, [X8+72]
	063 Call Queue`1<Object>.Enqueue, X0, X1
	064 Move W8, [X19+24]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Add W8, W8, 1
	070 Move [X19+24], W8
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X30, [X31+64]
	074 Return 
	075 Call 0x1C17F20

Method: T Dequeue()

Disassembly:
	0x024B4670 BLR X10
	0x024B4674 ADD X8, X25, X29
	0x024B4678 ADD X10, X8, 0x1
	0x024B467C TBNZ X0, 0x0, 0x24B46D4
	0x024B4680 LDR X8, [X19 + 0x28]
	0x024B4684 CBZ X8, 0x24B4760
	0x024B4688 LDR X9, [X8 + 0x18]
	0x024B468C CMP W20, W9
	0x024B4690 B.CS 0x24B475C
	0x024B4694 CMP W10, W9
	0x024B4698 B.CS 0x24B475C
	0x024B469C ADD X10, X8, X23
	0x024B46A0 ADD X10, X10, X29, 0x2, LSL
	0x024B46A4 LDR W11, [X10 + 0x1C]
	0x024B46A8 SUB X29, X29, 0x1
	0x024B46AC ADD X12, X21, X29
	0x024B46B0 CMP X12, X24
	0x024B46B4 STR W11, [X10 + 0x20]
	0x024B46B8 B.GT 0x24B4618
	0x024B46BC LDR X20, [X31 + 0x28]
	0x024B46C0 LDR X26, [X31 + 0x8]
	0x024B46C4 MOV W10, W20
	0x024B46C8 B 0x24B46E4
	0x024B46CC MOV W10, W22
	0x024B46D0 B 0x24B46E4
	0x024B46D4 LDR X8, [X19 + 0x28]
	0x024B46D8 CBZ X8, 0x24B4760
	0x024B46DC LDR X26, [X31 + 0x8]
	0x024B46E0 LDR X20, [X31 + 0x28]
	0x024B46E4 LDR W9, [X8 + 0x18]
	0x024B46E8 CMP W10, W9
	0x024B46EC B.CS 0x24B475C
	0x024B46F0 ADD W22, W22, 0x1
	0x024B46F4 ADD X9, X8, W10, 0x2, SXTW
	0x024B46F8 CMP W22, W27
	0x024B46FC ADD X25, X25, 0x1
	0x024B4700 STR W28, [X9 + 0x20]
	0x024B4704 B.LE 0x24B45E8
	0x024B4708 LDR X23, [X31 + 0x18]
	0x024B470C LDR X8, [X26 + 0x20]
	0x024B4710 LDR W9, [X23 + 0x18]
	0x024B4714 LDR X8, [X8 + 0xC0]
	0x024B4718 CMP W9, 0x0
	0x024B471C B.GT 0x24B4344
	0x024B4720 LDR W9, [X19 + 0x30]
	0x024B4724 LDR X0, [X19 + 0x18]
	0x024B4728 MOVZ W10, 0x1
	0x024B472C STRB W10, [X19 + 0x38]
	0x024B4730 STR W9, [X19 + 0x34]
	0x024B4734 CBZ X0, 0x24B4760
	0x024B4738 LDR X1, [X8 + 0x90]
	0x024B473C LDP X20, X19, [X31 + 0x80]
	0x024B4740 LDP X22, X21, [X31 + 0x70]
	0x024B4744 LDP X24, X23, [X31 + 0x60]
	0x024B4748 LDP X26, X25, [X31 + 0x50]
	0x024B474C LDP X28, X27, [X31 + 0x40]
	0x024B4750 LDP X29, X30, [X31 + 0x30]
	0x024B4754 ADD X31, X31, 0x90
	0x024B4758 B 0x24B3000
	0x024B475C BL 0x1C16F28
	0x024B4760 BL 0x1C16F20
	0x024B4764 STP X30, X21, [X31 - 0x20]!
	0x024B4768 STP X20, X19, [X31 + 0x10]
	0x024B476C LDRB W8, [X0 + 0x38]
	0x024B4770 MOV X20, X0
	0x024B4774 MOV X19, X1
	0x024B4778 CBZ W8, 0x24B479C
	0x024B477C LDR X0, [X20 + 0x18]
	0x024B4780 CBZ X0, 0x24B4800
	0x024B4784 LDR X8, [X2 + 0x20]
	0x024B4788 MOV X1, X19
	0x024B478C LDR X8, [X8 + 0xC0]
	0x024B4790 LDR X2, [X8 + 0x98]
	0x024B4794 BL 0x24B3050
	0x024B4798 B 0x24B47F0
	0x024B479C LDP W21, W8, [X20 + 0x30]
	0x024B47A0 SXTW X21, W21
	0x024B47A4 ADD W9, W21, 0x1
	0x024B47A8 CMP W9, W8
	0x024B47AC STR W9, [X20 + 0x30]
	0x024B47B0 B.LT 0x24B47D0
	0x024B47B4 UBFM W1, W8, 0x1F, 0x1E
	0x024B47B8 STR W1, [X20 + 0x34]
	0x024B47BC LDR X8, [X2 + 0x20]
	0x024B47C0 ADD X0, X20, 0x20
	0x024B47C4 LDR X8, [X8 + 0xC0]
	0x024B47C8 LDR X2, [X8 + 0xA0]
	0x024B47CC BL 0x2142E6C
	0x024B47D0 LDR X8, [X20 + 0x20]
	0x024B47D4 CBZ X8, 0x24B4800
	0x024B47D8 LDR W9, [X8 + 0x18]
	0x024B47DC CMP W21, W9
	0x024B47E0 B.CS 0x24B4804
	0x024B47E4 ADD X8, X8, X21, 0x3, LSL
	0x024B47E8 ORN W0, W31, W21, 0x0
	0x024B47EC STR X19, [X8 + 0x20]
	0x024B47F0 LDP X20, X19, [X31 + 0x10]
	0x024B47F4 MOV W0, W0
	0x024B47F8 LDP X30, X21, [X31], #0x20
	0x024B47FC RET
	0x024B4800 BL 0x1C16F20
	0x024B4804 BL 0x1C16F28
	0x024B4808 STP X30, X21, [X31 - 0x20]!
	0x024B480C STP X20, X19, [X31 + 0x10]
	0x024B4810 LDR W8, [X0 + 0x30]
	0x024B4814 MOV X19, X0
	0x024B4818 MOV X21, X1
	0x024B481C CBZ W8, 0x24B4894
	0x024B4820 LDR X10, [X19 + 0x28]
	0x024B4824 CBZ X10, 0x24B4914
	0x024B4828 LDR W9, [X10 + 0x18]
	0x024B482C SUB W11, W8, 0x1
	0x024B4830 CMP W11, W9
	0x024B4834 B.CS 0x24B4918
	0x024B4838 LDR X9, [X19 + 0x20]
	0x024B483C CBZ X9, 0x24B4914
	0x024B4840 ADD X10, X10, W11, 0x2, SXTW
	0x024B4844 LDRSW X10, [X10 + 0x20]
	0x024B4848 LDR W11, [X9 + 0x18]
	0x024B484C CMP W10, W11
	0x024B4850 B.CS 0x24B4918
	0x024B4854 LDR X0, [X19 + 0x18]
	0x024B4858 CBZ X0, 0x24B4914

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1F26000
	008 Move W8, [X21+3029]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1C68000
	016 Move X0, [X0+1960]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3029], W8
	020 Move W8, [X20+24]
	021 Compare W8, 0
	022 JumpIfEqual {54}
	023 Move X0, [X20+16]
	024 Compare X0, 0
	025 JumpIfEqual {142}
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+88]
	029 Call SortedList`2<Int32, Object>.get_Keys, X0
	030 Move X9, [X20+16]
	031 Compare X9, 0
	032 JumpIfEqual {142}
	033 Move X21, X0
	034 Compare X0, 0
	035 JumpIfEqual {142}
	036 Move X10, 0x1C68000
	037 Move X8, [X21]
	038 Move X10, [X10+1960]
	039 Move W11, [X9+32]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Subtract W22, W11, 1
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X21
	052 Move W2, W31
	053 Call 0x1C5D788
	054 Move X22, X31
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X21
	061 Move W1, W22
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X20+16]
	064 Compare X8, 0
	065 JumpIfEqual {142}
	066 Move X9, [X19+32]
	067 Move W21, W0
	068 Move X0, X8
	069 Move X9, [X9+192]
	070 Move X1, [X9+104]
	071 Call SortedList`2<Int32, Object>.get_Values, X0
	072 Move X8, [X20+16]
	073 Compare X8, 0
	074 JumpIfEqual {142}
	075 Move X22, X0
	076 Compare X0, 0
	077 JumpIfEqual {142}
	078 Move X9, [X19+32]
	079 Move W23, [X8+32]
	080 Move X9, [X9+192]
	081 Move X1, [X9+112]
	082 Move W9, [X1+309]
	083 Move TEMP, X9
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X1
	088 Call 0x1C5D684
	089 Move X1, X0
	090 Move X8, [X22]
	091 Subtract W23, W23, 1
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X22
	102 Move W2, W31
	103 Call 0x1C5D788
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X8, X8, X9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X2, [X0+8]
	109 Move X0, X22
	110 Move W1, W23
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X0, 0
	113 JumpIfEqual {142}
	114 Move X8, [X19+32]
	115 Move X22, X0
	116 Move X8, [X8+192]
	117 Move X1, [X8+128]
	118 Call Queue`1<Object>.Dequeue, X0
	119 Move W8, [X20+24]
	120 Subtract W8, W8, 1
	121 Move [X20+24], W8
	122 Move W8, [X22+32]
	123 Move X22, X0
	124 Compare W8, 0
	125 JumpIfNotEqual {134}
	126 Move X0, [X20+16]
	127 Compare X0, 0
	128 JumpIfEqual {142}
	129 Move X8, [X19+32]
	130 Move W1, W21
	131 Move X8, [X8+192]
	132 Move X2, [X8+144]
	133 Call SortedList`2<Int32, Object>.Remove, X0, X1
	134 Move X0, X22
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X22, [X31+16]
	138 Move X21, [X31+24]
	139 Move X30, [X31+48]
	140 Move X23, [X31+56]
	141 Return X0
	142 Call 0x1C17F20

Method: T Peek()

Disassembly:
	0x024B485C ADD X9, X9, X10, 0x3, LSL
	0x024B4860 LDR W10, [X0 + 0x28]
	0x024B4864 LDR X20, [X9 + 0x20]
	0x024B4868 CBZ W10, 0x24B48B8
	0x024B486C BL 0x24B3310
	0x024B4870 LDR X8, [X19 + 0x10]
	0x024B4874 CBZ X8, 0x24B4914
	0x024B4878 MOV X1, X0
	0x024B487C LDR X9, [X8 + 0x18]
	0x024B4880 LDR X0, [X8 + 0x40]
	0x024B4884 LDR X3, [X8 + 0x28]
	0x024B4888 MOV X2, X20
	0x024B488C BLR X9
	0x024B4890 TBZ X0, 0x0, 0x24B48B4
	0x024B4894 LDR X0, [X19 + 0x18]
	0x024B4898 CBZ X0, 0x24B4914
	0x024B489C LDR X8, [X21 + 0x20]
	0x024B48A0 LDP X20, X19, [X31 + 0x10]
	0x024B48A4 LDR X8, [X8 + 0xC0]
	0x024B48A8 LDR X1, [X8 + 0xB0]
	0x024B48AC LDP X30, X21, [X31], #0x20
	0x024B48B0 B 0x24B3218
	0x024B48B4 LDR W8, [X19 + 0x30]
	0x024B48B8 SUB W8, W8, 0x1
	0x024B48BC STR W8, [X19 + 0x30]
	0x024B48C0 SUBS W8, W8, 0x1
	0x024B48C4 B.LT 0x24B4904
	0x024B48C8 LDR X9, [X19 + 0x28]
	0x024B48CC CBZ X9, 0x24B4914
	0x024B48D0 LDR W10, [X9 + 0x18]
	0x024B48D4 CMP W8, W10
	0x024B48D8 B.CS 0x24B4918
	0x024B48DC LDR X10, [X19 + 0x20]
	0x024B48E0 CBZ X10, 0x24B4914
	0x024B48E4 ADD X9, X9, W8, 0x2, UXTW
	0x024B48E8 LDRSW X9, [X9 + 0x20]
	0x024B48EC LDR W11, [X10 + 0x18]
	0x024B48F0 CMP W9, W11
	0x024B48F4 B.CS 0x24B4918
	0x024B48F8 ADD X9, X10, X9, 0x3, LSL
	0x024B48FC LDR X9, [X9 + 0x20]
	0x024B4900 CBZ X9, 0x24B48BC
	0x024B4904 MOV X0, X20
	0x024B4908 LDP X20, X19, [X31 + 0x10]
	0x024B490C LDP X30, X21, [X31], #0x20
	0x024B4910 RET
	0x024B4914 BL 0x1C16F20
	0x024B4918 BL 0x1C16F28
	0x024B491C STR X30, [X31 - 0x20]!
	0x024B4920 STP X20, X19, [X31 + 0x10]
	0x024B4924 LDR W8, [X0 + 0x30]
	0x024B4928 MOV X19, X0
	0x024B492C CBZ W8, 0x24B49BC
	0x024B4930 LDR X9, [X19 + 0x28]
	0x024B4934 CBZ X9, 0x24B49D0
	0x024B4938 LDR W11, [X9 + 0x18]
	0x024B493C SUB W10, W8, 0x1
	0x024B4940 CMP W10, W11
	0x024B4944 B.CS 0x24B49D4
	0x024B4948 LDR X8, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 Compare W8, 0
	007 JumpIfEqual {49}
	008 Move X20, X0
	009 Move X0, [X0+16]
	010 Compare X0, 0
	011 JumpIfEqual {74}
	012 Move X8, [X1+32]
	013 Move X19, X1
	014 Move X8, [X8+192]
	015 Move X1, [X8+104]
	016 Call SortedList`2<Int32, Object>.get_Values, X0
	017 Move X8, [X20+16]
	018 Compare X8, 0
	019 JumpIfEqual {74}
	020 Move X20, X0
	021 Compare X0, 0
	022 JumpIfEqual {74}
	023 Move X9, [X19+32]
	024 Move W21, [X8+32]
	025 Move X9, [X9+192]
	026 Move X1, [X9+112]
	027 Move W9, [X1+309]
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X1
	033 Call 0x1C5D684
	034 Move X1, X0
	035 Move X8, [X20]
	036 Subtract W21, W21, 1
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X20
	047 Move W2, W31
	048 Call 0x1C5D788
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X0, X31
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X20
	061 Move W1, W21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {74}
	065 Move X8, [X19+32]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X8, [X8+192]
	069 Move X1, [X8+152]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Queue`1<Object>.Peek, X0
	073 Return X0
	074 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x024B494C CBZ X8, 0x24B49D0
	0x024B4950 ADD X9, X9, W10, 0x2, SXTW
	0x024B4954 LDRSW X9, [X9 + 0x20]
	0x024B4958 LDR W10, [X8 + 0x18]
	0x024B495C CMP W9, W10
	0x024B4960 B.CS 0x24B49D4
	0x024B4964 LDR X0, [X19 + 0x18]
	0x024B4968 CBZ X0, 0x24B49D0
	0x024B496C ADD X8, X8, X9, 0x3, LSL
	0x024B4970 LDR W9, [X0 + 0x28]
	0x024B4974 LDR X20, [X8 + 0x20]
	0x024B4978 CBZ W9, 0x24B49A8
	0x024B497C BL 0x24B3310
	0x024B4980 LDR X8, [X19 + 0x10]
	0x024B4984 CBZ X8, 0x24B49D0
	0x024B4988 MOV X19, X0
	0x024B498C LDR X9, [X8 + 0x18]
	0x024B4990 LDR X0, [X8 + 0x40]
	0x024B4994 LDR X3, [X8 + 0x28]
	0x024B4998 MOV X1, X19
	0x024B499C MOV X2, X20
	0x024B49A0 BLR X9
	0x024B49A4 TBNZ X0, 0x0, 0x24B49AC
	0x024B49A8 MOV X19, X20
	0x024B49AC MOV X0, X19
	0x024B49B0 LDP X20, X19, [X31 + 0x10]
	0x024B49B4 LDR X30, [X31], #0x20
	0x024B49B8 RET
	0x024B49BC LDR X0, [X19 + 0x18]
	0x024B49C0 CBZ X0, 0x24B49D0
	0x024B49C4 LDP X20, X19, [X31 + 0x10]
	0x024B49C8 LDR X30, [X31], #0x20
	0x024B49CC B 0x24B3310
	0x024B49D0 BL 0x1C16F20
	0x024B49D4 BL 0x1C16F28
	0x024B49D8 STR X30, [X31 - 0x10]!
	0x024B49DC TBNZ X1, 0x1F, 0x24B4A00
	0x024B49E0 LDR X0, [X0 + 0x18]
	0x024B49E4 CBZ X0, 0x24B4A8C
	0x024B49E8 LDR X8, [X2 + 0x20]
	0x024B49EC AND X1, X1, 0x0
	0x024B49F0 LDR X8, [X8 + 0xC0]
	0x024B49F4 LDR X2, [X8 + 0xC0]
	0x024B49F8 LDR X30, [X31], #0x10
	0x024B49FC B 0x24B3360
	0x024B4A00 LDR X8, [X0 + 0x20]
	0x024B4A04 CBZ X8, 0x24B4A8C
	0x024B4A08 LDR W10, [X8 + 0x18]
	0x024B4A0C ORN W9, W31, W1, 0x0
	0x024B4A10 CMP W9, W10
	0x024B4A14 B.CS 0x24B4A88
	0x024B4A18 ADD X8, X8, W9, 0x3, UXTW
	0x024B4A1C STR X31, [X8 + 0x20]
	0x024B4A20 LDR W11, [X0 + 0x30]
	0x024B4A24 CMP W11, 0x1
	0x024B4A28 B.LT 0x24B4A80
	0x024B4A2C LDR X8, [X0 + 0x28]
	0x024B4A30 CBZ X8, 0x24B4A8C
	0x024B4A34 LDR X9, [X0 + 0x20]
	0x024B4A38 LDR W10, [X8 + 0x18]
	0x024B4A3C ADD W11, W11, 0x1
	0x024B4A40 SUB W12, W11, 0x2
	0x024B4A44 CMP W12, W10
	0x024B4A48 B.CS 0x24B4A88
	0x024B4A4C CBZ X9, 0x24B4A8C
	0x024B4A50 ADD X13, X8, W12, 0x2, UXTW
	0x024B4A54 LDRSW X13, [X13 + 0x20]
	0x024B4A58 LDR W14, [X9 + 0x18]
	0x024B4A5C CMP W13, W14
	0x024B4A60 B.CS 0x24B4A88
	0x024B4A64 ADD X13, X9, X13, 0x3, LSL
	0x024B4A68 LDR X13, [X13 + 0x20]
	0x024B4A6C CBNZ X13, 0x24B4A80
	0x024B4A70 SUB W11, W11, 0x1
	0x024B4A74 CMP W11, 0x2
	0x024B4A78 STR W12, [X0 + 0x30]
	0x024B4A7C B.GE 0x24B4A40
	0x024B4A80 LDR X30, [X31], #0x10
	0x024B4A84 RET
	0x024B4A88 BL 0x1C16F28
	0x024B4A8C BL 0x1C16F20
	0x024B4A90 STR X30, [X31 - 0x30]!
	0x024B4A94 STP X22, X21, [X31 + 0x10]
	0x024B4A98 STP X20, X19, [X31 + 0x20]
	0x024B4A9C MOV W22, W1
	0x024B4AA0 MOV X1, X31
	0x024B4AA4 MOV X19, X3
	0x024B4AA8 MOV X20, X2
	0x024B4AAC MOV X21, X0
	0x024B4AB0 BL 0x33BDD8C
	0x024B4AB4 CMP W22, 0x0
	0x024B4AB8 B.LE 0x24B4AF4
	0x024B4ABC STR W22, [X21 + 0x20]
	0x024B4AC0 LDR X8, [X19 + 0x20]
	0x024B4AC4 LDR X8, [X8 + 0xC0]
	0x024B4AC8 LDR X0, [X8 + 0x8]
	0x024B4ACC LDRB W8, [X0 + 0x135]
	0x024B4AD0 TBNZ X8, 0x0, 0x24B4AD8
	0x024B4AD4 BL 0x1C5C684
	0x024B4AD8 MOV W1, W22
	0x024B4ADC BL 0x1C16D6C
	0x024B4AE0 STP X20, X0, [X21 + 0x10]
	0x024B4AE4 LDP X20, X19, [X31 + 0x20]
	0x024B4AE8 LDP X22, X21, [X31 + 0x10]
	0x024B4AEC LDR X30, [X31], #0x30
	0x024B4AF0 RET
	0x024B4AF4 ADRP X0, 0x1C47000
	0x024B4AF8 LDR X0, [X0 + 0x578]
	0x024B4AFC BL 0x1C16D08
	0x024B4B00 BL 0x1C16F10
	0x024B4B04 MOV X20, X0
	0x024B4B08 ADRP X0, 0x1C68000
	0x024B4B0C LDR X0, [X0 + 0xED8]
	0x024B4B10 BL 0x1C16D08
	0x024B4B14 MOV X1, X0
	0x024B4B18 MOV X0, X20
	0x024B4B1C MOV X2, X31
	0x024B4B20 BL 0x3314A68
	0x024B4B24 MOV X0, X20
	0x024B4B28 MOV X1, X19
	0x024B4B2C BL 0x1C16DEC
	0x024B4B30 LDR W0, [X0 + 0x24]
	0x024B4B34 RET
	0x024B4B38 STR X30, [X31 - 0x20]!
	0x024B4B3C STP X20, X19, [X31 + 0x10]
	0x024B4B40 LDR W8, [X0 + 0x20]
	0x024B4B44 MOV X19, X0
	0x024B4B48 UBFM W20, W8, 0x1F, 0x1E
	0x024B4B4C STR W20, [X0 + 0x20]
	0x024B4B50 LDR X8, [X1 + 0x20]
	0x024B4B54 LDR X8, [X8 + 0xC0]
	0x024B4B58 LDR X0, [X8 + 0x8]
	0x024B4B5C LDRB W8, [X0 + 0x135]
	0x024B4B60 TBNZ X8, 0x0, 0x24B4B68
	0x024B4B64 BL 0x1C5C684
	0x024B4B68 MOV W1, W20
	0x024B4B6C BL 0x1C16D6C
	0x024B4B70 LDR X8, [X19 + 0x18]
	0x024B4B74 CBZ X8, 0x24B4BA0
	0x024B4B78 LDR W2, [X8 + 0x18]
	0x024B4B7C MOV X20, X0
	0x024B4B80 MOV X0, X8
	0x024B4B84 MOV X1, X20
	0x024B4B88 MOV X3, X31
	0x024B4B8C BL 0x33A0C7C
	0x024B4B90 STR X20, [X19 + 0x18]
	0x024B4B94 LDP X20, X19, [X31 + 0x10]
	0x024B4B98 LDR X30, [X31], #0x20
	0x024B4B9C RET
	0x024B4BA0 BL 0x1C16F20
	0x024B4BA4 STR D8, [X31 - 0x30]!
	0x024B4BA8 STP X30, X21, [X31 + 0x10]
	0x024B4BAC STP X20, X19, [X31 + 0x20]
	0x024B4BB0 LDP W10, W8, [X0 + 0x20]
	0x024B4BB4 MOV X20, X2
	0x024B4BB8 MOV V8.16B, V0.16B
	0x024B4BBC MOV X21, X1
	0x024B4BC0 ADD W9, W8, 0x1
	0x024B4BC4 MOV X19, X0
	0x024B4BC8 CMP W9, W10
	0x024B4BCC STR W9, [X0 + 0x24]
	0x024B4BD0 B.LE 0x24B4BEC
	0x024B4BD4 LDR X8, [X20 + 0x20]
	0x024B4BD8 MOV X0, X19
	0x024B4BDC LDR X8, [X8 + 0xC0]
	0x024B4BE0 LDR X1, [X8 + 0x20]
	0x024B4BE4 BL 0x24B4B38
	0x024B4BE8 LDR W9, [X19 + 0x24]
	0x024B4BEC LDR X8, [X19 + 0x18]
	0x024B4BF0 CBZ X8, 0x24B4C38
	0x024B4BF4 LDR W10, [X8 + 0x18]
	0x024B4BF8 SUB W1, W9, 0x1
	0x024B4BFC CMP W1, W10
	0x024B4C00 B.CS 0x24B4C3C
	0x024B4C04 SXTW X9, W1
	0x024B4C08 FMOV W10, S8
	0x024B4C0C ADD X8, X8, X9, 0x4, LSL
	0x024B4C10 STP X21, X10, [X8 + 0x20]
	0x024B4C14 LDR X8, [X20 + 0x20]
	0x024B4C18 MOV X0, X19
	0x024B4C1C LDP X20, X19, [X31 + 0x20]
	0x024B4C20 LDP X30, X21, [X31 + 0x10]
	0x024B4C24 LDR X8, [X8 + 0xC0]
	0x024B4C28 MOVN W2, 0x0
	0x024B4C2C LDR X3, [X8 + 0x40]
	0x024B4C30 LDR V8, [X31], #0x30
	0x024B4C34 B 0x24B4D44
	0x024B4C38 BL 0x1C16F20
	0x024B4C3C BL 0x1C16F28
	0x024B4C40 STP X30, X23, [X31 - 0x30]!
	0x024B4C44 STP X22, X21, [X31 + 0x10]
	0x024B4C48 STP X20, X19, [X31 + 0x20]
	0x024B4C4C LDR X8, [X0 + 0x18]
	0x024B4C50 CBZ X8, 0x24B4D3C
	0x024B4C54 LDR W9, [X8 + 0x18]
	0x024B4C58 CBZ W9, 0x24B4D40
	0x024B4C5C LDR X20, [X8 + 0x20]
	0x024B4C60 STR X31, [X8 + 0x20]
	0x024B4C64 LDR X23, [X0 + 0x18]
	0x024B4C68 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1F26000
	008 Move W8, [X21+3030]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1C40000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x1C40000
	019 Move X0, [X0+3608]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3030], W8
	023 Move X0, [X19+16]
	024 Compare X0, 0
	025 JumpIfEqual {175}
	026 Move X8, [X20+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+104]
	029 Call SortedList`2<Int32, Object>.get_Values, X0
	030 Compare X0, 0
	031 JumpIfEqual {175}
	032 Move X8, [X20+32]
	033 Move X21, X0
	034 Move X8, [X8+192]
	035 Move X1, [X8+160]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Move X8, [X21]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X21
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X23, 0x1C40000
	063 Move X23, [X23+3584]
	064 Move X0, X21
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X21, X0
	067 Compare X0, 0
	068 JumpIfEqual {176}
	069 Move X22, 0x1C40000
	070 Move X22, [X22+3608]
	071 Move X8, [X21]
	072 Move X1, [X22]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X21
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X21
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {133}
	096 Move X8, [X20+32]
	097 Move X8, [X8+192]
	098 Move X1, [X8+176]
	099 Move W8, [X1+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Move X0, X1
	105 Call 0x1C5D684
	106 Move X1, X0
	107 Move X8, [X21]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X21
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X21
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X0, 0
	128 JumpIfEqual {174}
	129 Move X8, [X20+32]
	130 Move X8, [X8+192]
	131 Move X1, [X8+192]
	132 Call Queue`1<Object>.Clear, X0
	133 Move X22, X31
	134 Compare X21, 0
	135 JumpIfEqual {157}
	136 Move X8, [X21]
	137 Move X1, [X23]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X21
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X1, [X0+8]
	155 Move X0, X21
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Compare X22, 0
	158 JumpIfNotEqual {177}
	159 Move X0, [X19+16]
	160 Compare X0, 0
	161 JumpIfEqual {175}
	162 Move X8, [X20+32]
	163 Move X8, [X8+192]
	164 Move X1, [X8+200]
	165 Call SortedList`2<Int32, Object>.Clear, X0
	166 Move [X19+24], W31
	167 Move X20, [X31+32]
	168 Move X19, [X31+40]
	169 Move X22, [X31+16]
	170 Move X21, [X31+24]
	171 Move X30, [X31+48]
	172 Move X23, [X31+56]
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X22
	178 Call 0x1C17F18
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Call 0x3EB2AD0
	181 Move X22, [X0]
	182 Call 0x3EB2AE0
	183 Move X19, X0
	184 Move X22, X31
	185 Move X19, X0
	186 Compare X21, 0
	187 JumpIfEqual {209}
	188 Move X8, [X21]
	189 Move X1, [X23]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move X0, X21
	200 Move W2, W31
	201 Call 0x1C5D788
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Add X8, X8, X9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X21
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X22, 0
	210 JumpIfNotEqual {213}
	211 Move X0, X19
	212 Call 0x1D2D690
	213 Move X0, X22
	214 Call 0x1C17F18
	215 Call 0x1991590

Method: System.Collections.Generic.IEnumerator`1<T> GetEnumerator()

Disassembly:
	0x024B4C6C CBZ X23, 0x24B4D3C
	0x024B4C70 LDR X22, [X19 + 0x10]
	0x024B4C74 CBZ X22, 0x24B4D3C
	0x024B4C78 LDR X8, [X1 + 0x20]
	0x024B4C7C MOV X21, X1
	0x024B4C80 LDR X8, [X8 + 0xC0]
	0x024B4C84 LDR X1, [X8 + 0x18]
	0x024B4C88 LDRB W8, [X1 + 0x135]
	0x024B4C8C TBNZ X8, 0x0, 0x24B4C9C
	0x024B4C90 MOV X0, X1
	0x024B4C94 BL 0x1C5C684
	0x024B4C98 MOV X1, X0
	0x024B4C9C LDR X8, [X22]
	0x024B4CA0 LDRH W9, [X8 + 0x12E]
	0x024B4CA4 CBZ X9, 0x24B4CC8
	0x024B4CA8 LDR X10, [X8 + 0xB0]
	0x024B4CAC ADD X10, X10, 0x8
	0x024B4CB0 LDUR X11, [X10 - 0x8]
	0x024B4CB4 CMP X11, X1
	0x024B4CB8 B.EQ 0x24B4CD8
	0x024B4CBC SUBS X9, X9, 0x1
	0x024B4CC0 ADD X10, X10, 0x10
	0x024B4CC4 B.NE 0x24B4CB0
	0x024B4CC8 MOVZ W2, 0x1
	0x024B4CCC MOV X0, X22
	0x024B4CD0 BL 0x1C5C788
	0x024B4CD4 B 0x24B4CE8
	0x024B4CD8 LDR W9, [X10]
	0x024B4CDC ADD W9, W9, 0x1
	0x024B4CE0 ADD X8, X8, W9, 0x4, SXTW
	0x024B4CE4 ADD X0, X8, 0x138
	0x024B4CE8 LDP X8, X1, [X0]
	0x024B4CEC MOV X0, X22
	0x024B4CF0 BLR X8
	0x024B4CF4 LDR W8, [X23 + 0x18]
	0x024B4CF8 CBZ W8, 0x24B4D40
	0x024B4CFC STR S0, [X23 + 0x28]
	0x024B4D00 LDR X8, [X21 + 0x20]
	0x024B4D04 MOVZ W2, 0x1
	0x024B4D08 MOV X0, X19
	0x024B4D0C MOV W1, W31
	0x024B4D10 LDR X8, [X8 + 0xC0]
	0x024B4D14 LDR X3, [X8 + 0x40]
	0x024B4D18 BL 0x24B4D44
	0x024B4D1C LDR W8, [X19 + 0x24]
	0x024B4D20 MOV X0, X20
	0x024B4D24 LDP X22, X21, [X31 + 0x10]
	0x024B4D28 SUB W8, W8, 0x1
	0x024B4D2C STR W8, [X19 + 0x24]
	0x024B4D30 LDP X20, X19, [X31 + 0x20]
	0x024B4D34 LDP X30, X23, [X31], #0x30
	0x024B4D38 RET
	0x024B4D3C BL 0x1C16F20
	0x024B4D40 BL 0x1C16F28
	0x024B4D44 SUB X31, X31, 0x80
	0x024B4D48 STR D8, [X31 + 0x10]
	0x024B4D4C STP X29, X30, [X31 + 0x20]
	0x024B4D50 STP X28, X27, [X31 + 0x30]
	0x024B4D54 STP X26, X25, [X31 + 0x40]
	0x024B4D58 STP X24, X23, [X31 + 0x50]
	0x024B4D5C STP X22, X21, [X31 + 0x60]
	0x024B4D60 STP X20, X19, [X31 + 0x70]
	0x024B4D64 MOV W20, W2
	0x024B4D68 MOV W21, W1
	0x024B4D6C ADDS W31, W2, 0x1
	0x024B4D70 MOV X22, X0
	0x024B4D74 STR X3, [X31 + 0x18]
	0x024B4D78 B.EQ 0x24B4D84
	0x024B4D7C CMP W20, 0x1
	0x024B4D80 B.NE 0x24B4F10
	0x024B4D84 LDR X8, [X22 + 0x18]
	0x024B4D88 CBZ X8, 0x24B4F08
	0x024B4D8C LDR W9, [X8 + 0x18]
	0x024B4D90 CMP W9, W21
	0x024B4D94 B.LS 0x24B4F0C
	0x024B4D98 ADDS W24, W21, W20
	0x024B4D9C B.MI 0x24B4EE4
	0x024B4DA0 MOV W9, W21
	0x024B4DA4 SXTW X9, W9
	0x024B4DA8 ADD X8, X8, X9, 0x4, LSL
	0x024B4DAC LDP X8, X25, [X8 + 0x20]
	0x024B4DB0 STR X8, [X31 + 0x8]
	0x024B4DB4 FMOV S8, W25
	0x024B4DB8 LDR W8, [X22 + 0x24]
	0x024B4DBC CMP W24, W8
	0x024B4DC0 B.GE 0x24B4EE4
	0x024B4DC4 LDR X8, [X22 + 0x18]
	0x024B4DC8 CBZ X8, 0x24B4F08
	0x024B4DCC LDR W9, [X8 + 0x18]
	0x024B4DD0 CMP W24, W9
	0x024B4DD4 B.CS 0x24B4F0C
	0x024B4DD8 LDR X23, [X22 + 0x10]
	0x024B4DDC CBZ X23, 0x24B4F08
	0x024B4DE0 LDR X9, [X31 + 0x18]
	0x024B4DE4 MOV W27, W24
	0x024B4DE8 ADD X8, X8, X27, 0x4, LSL
	0x024B4DEC LDP X29, X28, [X8 + 0x20]
	0x024B4DF0 LDR X9, [X9 + 0x20]
	0x024B4DF4 LDR X9, [X9 + 0xC0]
	0x024B4DF8 LDR X1, [X9 + 0x18]
	0x024B4DFC LDRB W9, [X1 + 0x135]
	0x024B4E00 TBNZ X9, 0x0, 0x24B4E10
	0x024B4E04 MOV X0, X1
	0x024B4E08 BL 0x1C5C684
	0x024B4E0C MOV X1, X0
	0x024B4E10 LDR X8, [X23]
	0x024B4E14 LDRH W9, [X8 + 0x12E]
	0x024B4E18 CBZ X9, 0x24B4E3C
	0x024B4E1C LDR X10, [X8 + 0xB0]
	0x024B4E20 ADD X10, X10, 0x8
	0x024B4E24 LDUR X11, [X10 - 0x8]
	0x024B4E28 CMP X11, X1
	0x024B4E2C B.EQ 0x24B4E4C
	0x024B4E30 SUBS X9, X9, 0x1
	0x024B4E34 ADD X10, X10, 0x10
	0x024B4E38 B.NE 0x24B4E24
	0x024B4E3C MOV X0, X23
	0x024B4E40 MOV W2, W31
	0x024B4E44 BL 0x1C5C788
	0x024B4E48 B 0x24B4E58
	0x024B4E4C LDRSW X9, [X10]
	0x024B4E50 ADD X8, X8, X9, 0x4, LSL
	0x024B4E54 ADD X0, X8, 0x138
	0x024B4E58 LDP X8, X1, [X0]
	0x024B4E5C CMP W20, 0x1
	0x024B4E60 FMOV S1, W28
	0x024B4E64 CSET W19, EQ
	0x024B4E68 ADDS W31, W20, 0x1
	0x024B4E6C MOV X0, X23
	0x024B4E70 MOV V0.16B, V8.16B
	0x024B4E74 CSET W26, EQ
	0x024B4E78 BLR X8
	0x024B4E7C CMP W0, 0x0
	0x024B4E80 CSET W8, GT
	0x024B4E84 AND W9, W26, W8, 0x0
	0x024B4E88 CSET W8, LT
	0x024B4E8C TBNZ X9, 0x0, 0x24B4E98
	0x024B4E90 AND W8, W19, W8, 0x0
	0x024B4E94 CBZ W8, 0x24B4EE4
	0x024B4E98 LDR X8, [X22 + 0x18]
	0x024B4E9C CBZ X8, 0x24B4F08
	0x024B4EA0 LDR W9, [X8 + 0x18]
	0x024B4EA4 CMP W21, W9
	0x024B4EA8 B.CS 0x24B4F0C
	0x024B4EAC SXTW X9, W21
	0x024B4EB0 ADD X8, X8, X9, 0x4, LSL
	0x024B4EB4 STP X29, X28, [X8 + 0x20]
	0x024B4EB8 LDR X8, [X22 + 0x18]
	0x024B4EBC CBZ X8, 0x24B4F08
	0x024B4EC0 LDR W9, [X8 + 0x18]
	0x024B4EC4 CMP W24, W9
	0x024B4EC8 B.CS 0x24B4F0C
	0x024B4ECC LDR X9, [X31 + 0x8]
	0x024B4ED0 ADD X8, X8, X27, 0x4, LSL
	0x024B4ED4 ADDS W24, W24, W20
	0x024B4ED8 ADD W21, W21, W20
	0x024B4EDC STP X9, X25, [X8 + 0x20]
	0x024B4EE0 B.PL 0x24B4DB8
	0x024B4EE4 LDP X20, X19, [X31 + 0x70]
	0x024B4EE8 LDP X22, X21, [X31 + 0x60]
	0x024B4EEC LDP X24, X23, [X31 + 0x50]
	0x024B4EF0 LDP X26, X25, [X31 + 0x40]
	0x024B4EF4 LDP X28, X27, [X31 + 0x30]
	0x024B4EF8 LDP X29, X30, [X31 + 0x20]
	0x024B4EFC LDR V8, [X31 + 0x10]
	0x024B4F00 ADD X31, X31, 0x80
	0x024B4F04 RET
	0x024B4F08 BL 0x1C16F20
	0x024B4F0C BL 0x1C16F28
	0x024B4F10 ADRP X0, 0x1C47000
	0x024B4F14 LDR X0, [X0 + 0x578]
	0x024B4F18 BL 0x1C16D08
	0x024B4F1C BL 0x1C16F10
	0x024B4F20 MOV X20, X0
	0x024B4F24 ADRP X0, 0x1C68000
	0x024B4F28 LDR X0, [X0 + 0xEE0]
	0x024B4F2C BL 0x1C16D08
	0x024B4F30 MOV X1, X0
	0x024B4F34 MOV X0, X20
	0x024B4F38 MOV X2, X31
	0x024B4F3C BL 0x3314A68
	0x024B4F40 LDR X1, [X31 + 0x18]
	0x024B4F44 MOV X0, X20
	0x024B4F48 BL 0x1C16DEC
	0x024B4F4C STR X30, [X31 - 0x20]!
	0x024B4F50 STP X20, X19, [X31 + 0x10]
	0x024B4F54 LDR W8, [X0 + 0x24]
	0x024B4F58 CBZ W8, 0x24B4F7C
	0x024B4F5C LDR X8, [X0 + 0x18]
	0x024B4F60 CBZ X8, 0x24B4FBC
	0x024B4F64 LDR W9, [X8 + 0x18]
	0x024B4F68 CBZ W9, 0x24B4FC0
	0x024B4F6C LDR X0, [X8 + 0x20]
	0x024B4F70 LDP X20, X19, [X31 + 0x10]
	0x024B4F74 LDR X30, [X31], #0x20
	0x024B4F78 RET
	0x024B4F7C ADRP X0, 0x1C3F000
	0x024B4F80 LDR X0, [X0 + 0x7D0]
	0x024B4F84 MOV X19, X1
	0x024B4F88 BL 0x1C16D08
	0x024B4F8C BL 0x1C16F10
	0x024B4F90 MOV X20, X0
	0x024B4F94 ADRP X0, 0x1C68000
	0x024B4F98 LDR X0, [X0 + 0xEE8]
	0x024B4F9C BL 0x1C16D08
	0x024B4FA0 MOV X1, X0
	0x024B4FA4 MOV X0, X20
	0x024B4FA8 MOV X2, X31
	0x024B4FAC BL 0x33B2C70
	0x024B4FB0 MOV X0, X20
	0x024B4FB4 MOV X1, X19
	0x024B4FB8 BL 0x1C16DEC
	0x024B4FBC BL 0x1C16F20
	0x024B4FC0 BL 0x1C16F28
	0x024B4FC4 STR X30, [X31 - 0x20]!
	0x024B4FC8 STP X20, X19, [X31 + 0x10]
	0x024B4FCC LDR W8, [X0 + 0x24]
	0x024B4FD0 CBZ W8, 0x24B4FF4
	0x024B4FD4 LDR X8, [X0 + 0x18]
	0x024B4FD8 CBZ X8, 0x24B5034
	0x024B4FDC LDR W9, [X8 + 0x18]
	0x024B4FE0 CBZ W9, 0x24B5038
	0x024B4FE4 LDR V0, [X8 + 0x28]
	0x024B4FE8 LDP X20, X19, [X31 + 0x10]
	0x024B4FEC LDR X30, [X31], #0x20
	0x024B4FF0 RET
	0x024B4FF4 ADRP X0, 0x1C3F000
	0x024B4FF8 LDR X0, [X0 + 0x7D0]
	0x024B4FFC MOV X19, X1
	0x024B5000 BL 0x1C16D08
	0x024B5004 BL 0x1C16F10
	0x024B5008 MOV X20, X0
	0x024B500C ADRP X0, 0x1C67000
	0x024B5010 LDR X0, [X0 + 0xEE8]
	0x024B5014 BL 0x1C16D08
	0x024B5018 MOV X1, X0
	0x024B501C MOV X0, X20
	0x024B5020 MOV X2, X31
	0x024B5024 BL 0x33B2C70
	0x024B5028 MOV X0, X20
	0x024B502C MOV X1, X19
	0x024B5030 BL 0x1C16DEC
	0x024B5034 BL 0x1C16F20
	0x024B5038 BL 0x1C16F28
	0x024B503C STR X30, [X31 - 0x30]!
	0x024B5040 STP X22, X21, [X31 + 0x10]
	0x024B5044 STP X20, X19, [X31 + 0x20]
	0x024B5048 MOV W22, W1
	0x024B504C MOV X1, X31
	0x024B5050 MOV X19, X3
	0x024B5054 MOV X20, X2
	0x024B5058 MOV X21, X0
	0x024B505C BL 0x33BDD8C
	0x024B5060 CMP W22, 0x0
	0x024B5064 B.LE 0x24B50A0
	0x024B5068 STR W22, [X21 + 0x20]
	0x024B506C LDR X8, [X19 + 0x20]
	0x024B5070 LDR X8, [X8 + 0xC0]
	0x024B5074 LDR X0, [X8 + 0x8]
	0x024B5078 LDRB W8, [X0 + 0x135]
	0x024B507C TBNZ X8, 0x0, 0x24B5084
	0x024B5080 BL 0x1C5C684
	0x024B5084 MOV W1, W22
	0x024B5088 BL 0x1C16D6C
	0x024B508C STP X20, X0, [X21 + 0x10]
	0x024B5090 LDP X20, X19, [X31 + 0x20]
	0x024B5094 LDP X22, X21, [X31 + 0x10]
	0x024B5098 LDR X30, [X31], #0x30
	0x024B509C RET
	0x024B50A0 ADRP X0, 0x1C46000
	0x024B50A4 LDR X0, [X0 + 0x578]
	0x024B50A8 BL 0x1C16D08
	0x024B50AC BL 0x1C16F10
	0x024B50B0 MOV X20, X0
	0x024B50B4 ADRP X0, 0x1C67000
	0x024B50B8 LDR X0, [X0 + 0xED8]
	0x024B50BC BL 0x1C16D08
	0x024B50C0 MOV X1, X0
	0x024B50C4 MOV X0, X20
	0x024B50C8 MOV X2, X31
	0x024B50CC BL 0x3314A68
	0x024B50D0 MOV X0, X20
	0x024B50D4 MOV X1, X19
	0x024B50D8 BL 0x1C16DEC
	0x024B50DC LDR W0, [X0 + 0x24]
	0x024B50E0 RET
	0x024B50E4 STR X30, [X31 - 0x20]!
	0x024B50E8 STP X20, X19, [X31 + 0x10]
	0x024B50EC LDR W8, [X0 + 0x20]
	0x024B50F0 MOV X19, X0
	0x024B50F4 UBFM W20, W8, 0x1F, 0x1E
	0x024B50F8 STR W20, [X0 + 0x20]
	0x024B50FC LDR X8, [X1 + 0x20]
	0x024B5100 LDR X8, [X8 + 0xC0]
	0x024B5104 LDR X0, [X8 + 0x8]
	0x024B5108 LDRB W8, [X0 + 0x135]
	0x024B510C TBNZ X8, 0x0, 0x24B5114
	0x024B5110 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+112], X30
	003 Move [X31+120], X25
	004 Move [X31+128], X24
	005 Move [X31+136], X23
	006 Move [X31+144], X22
	007 Move [X31+152], X21
	008 Move [X31+160], X20
	009 Move [X31+168], X19
	010 Move X20, 0x1F26000
	011 Move W8, [X20+3031]
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1C40000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C40000
	022 Move X0, [X0+3608]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3031], W8
	026 Move [X31+80], X31
	027 Move [X31+88], X31
	028 Move [X31+96], X31
	029 Move X8, [X19+32]
	030 Move X8, [X8+192]
	031 Move X0, [X8+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Call 0x1C17F10
	039 Move X8, [X19+32]
	040 Move X20, X0
	041 Move X8, [X8+192]
	042 Move X1, [X8+40]
	043 Call Queue`1<Object>..ctor, X0
	044 Move X0, [X21+16]
	045 Compare X0, 0
	046 JumpIfEqual {269}
	047 Move X8, [X19+32]
	048 Move X8, [X8+192]
	049 Move X1, [X8+104]
	050 Call SortedList`2<Int32, Object>.get_Values, X0
	051 Compare X0, 0
	052 JumpIfEqual {269}
	053 Move X8, [X19+32]
	054 Move X21, X0
	055 Move X8, [X8+192]
	056 Move X1, [X8+160]
	057 Move W8, [X1+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {65}
	062 Move X0, X1
	063 Call 0x1C5D684
	064 Move X1, X0
	065 Move X8, [X21]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move X0, X21
	076 Move W2, W31
	077 Call 0x1C5D788
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Add X8, X8, X9
	080 Add X0, X8, 312
	081 Move X8, [X0]
	082 Move X1, [X0+8]
	083 Move X24, 0x1C40000
	084 Move X24, [X24+3584]
	085 Move X0, X21
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X21, X0
	088 Compare X0, 0
	089 JumpIfEqual {270}
	090 Move X25, 0x1C40000
	091 Move X25, [X25+3608]
	092 Move X8, [X21]
	093 Move X1, [X25]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X21
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X21
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {195}
	117 Move X8, [X19+32]
	118 Move X8, [X8+192]
	119 Move X1, [X8+176]
	120 Move W8, [X1+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {128}
	125 Move X0, X1
	126 Call 0x1C5D684
	127 Move X1, X0
	128 Move X8, [X21]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X21
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X21
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X0, 0
	149 JumpIfEqual {268}
	150 Move X8, [X19+32]
	151 Move X8, [X8+192]
	152 Move X1, [X8+208]
	153 Add X8, X31, 48
	154 Call Queue`1<Object>.GetEnumerator, X0
	155 Move V0, [X31+3]
	156 Move X8, [X31+64]
	157 Move [X31+5], V0
	158 Move [X31+96], X8
	159 Move X8, [X19+32]
	160 Move X8, [X8+192]
	161 Move X1, [X8+240]
	162 Add X0, X31, 80
	163 Call Enumerator<Object>.MoveNext, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {181}
	168 Move X8, [X19+32]
	169 Move X8, [X8+192]
	170 Move X1, [X8+224]
	171 Add X0, X31, 80
	172 Call Enumerator<Object>.get_Current, X0
	173 Move X1, X0
	174 Compare X20, 0
	175 JumpIfEqual {189}
	176 Move X8, [X19+32]
	177 Move X8, [X8+192]
	178 Move X2, [X8+72]
	179 Move X0, X20
	180 Call Queue`1<Object>.Enqueue, X0, X1
	181 Move X23, X31
	182 Move X8, [X19+32]
	183 Move X8, [X8+192]
	184 Move X1, [X8+248]
	185 Add X0, X31, 80
	186 Call Enumerator<Object>.Dispose, X0
	187 Compare X23, 0
	188 JumpIfEqual {92}
	189 Call 0x1C17F20
	190 Move X22, X1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Call 0x3EB2AD0
	193 Move X23, [X0]
	194 Call 0x3EB2AE0
	195 Move X22, X31
	196 Move W23, 6
	197 Compare X21, 0
	198 JumpIfEqual {220}
	199 Move X8, [X21]
	200 Move X1, [X24]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move X0, X21
	211 Move W2, W31
	212 Call 0x1C5D788
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X8, X8, X9
	215 Add X0, X8, 312
	216 Move X8, [X0]
	217 Move X1, [X0+8]
	218 Move X0, X21
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Compare X22, 0
	221 JumpIfNotEqual {271}
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Compare W23, 0
	224 JumpIfNotEqual {244}
	225 Compare X20, 0
	226 JumpIfEqual {269}
	227 Move X8, [X19+32]
	228 Move X0, X20
	229 Move X8, [X8+192]
	230 Move X1, [X8+208]
	231 Add X8, X31, 16
	232 Call Queue`1<Object>.GetEnumerator, X0
	233 Move X8, [X31+32]
	234 Move V0, [X31+1]
	235 Add X1, X31, 16
	236 Move [X31+64], X8
	237 Move [X31+3], V0
	238 Move [X31+1], V0
	239 Move [X31+32], X8
	240 Move X8, [X19+32]
	241 Move X8, [X8+192]
	242 Move X0, [X8+216]
	243 Call 0x1C17E04
	244 Move X20, [X31+160]
	245 Move X19, [X31+168]
	246 Move X22, [X31+144]
	247 Move X21, [X31+152]
	248 Move X24, [X31+128]
	249 Move X23, [X31+136]
	250 Move X30, [X31+112]
	251 Move X25, [X31+120]
	252 Add X31, X31, 176
	253 Return X0
	254 Move [X31+8], X0
	255 Move X23, X31
	256 Move X8, [X19+32]
	257 Move X8, [X8+192]
	258 Move X1, [X8+248]
	259 Add X0, X31, 80
	260 Call Enumerator<Object>.Dispose, X0
	261 Move X0, [X31+8]
	262 Compare X23, 0
	263 JumpIfEqual {276}
	264 Move X0, X23
	265 Call 0x1C17F18
	266 Move X0, X23
	267 Call 0x1C17F18
	268 Call 0x1C17F20
	269 Call 0x1C17F20
	270 Call 0x1C17F20
	271 Move X0, X22
	272 Call 0x1C17F18
	273 Move X22, X1
	274 Move [X31+8], X0
	275 Move X22, X1
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Call 0x3EB2AD0
	278 Move X22, [X0]
	279 Call 0x3EB2AE0
	280 Move W23, W31
	281 Compare X21, 0
	282 JumpIfNotEqual {199}
	283 Move X19, X0
	284 Move X22, X31
	285 Move X19, X0
	286 Compare X21, 0
	287 JumpIfEqual {309}
	288 Move X8, [X21]
	289 Move X1, [X24]
	290 NotImplemented "Instruction LDRH not yet implemented."
	291 Compare X9, 0
	292 JumpIfEqual {299}
	293 Move X10, [X8+176]
	294 Add X10, X10, 8
	295 NotImplemented "Instruction LDUR not yet implemented."
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Subtract X9, X9, 1
	298 Add X10, X10, 16
	299 Move X0, X21
	300 Move W2, W31
	301 Call 0x1C5D788
	302 NotImplemented "Instruction LDRSW not yet implemented."
	303 Add X8, X8, X9
	304 Add X0, X8, 312
	305 Move X8, [X0]
	306 Move X1, [X0+8]
	307 Move X0, X21
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Compare X22, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X19
	312 Call 0x1D2D690
	313 Move X0, X22
	314 Call 0x1C17F18
	315 Call 0x1991590

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x024B5114 MOV W1, W20
	0x024B5118 BL 0x1C16D6C
	0x024B511C LDR X8, [X19 + 0x18]
	0x024B5120 CBZ X8, 0x24B514C

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+264]
	004 Call 0x24B4C6C, X0
	005 Return X0

