Type: TMPro.KerningTable

Method: System.Void .ctor()

Disassembly:
	0x03AEAB90 MOV X21, X0
	0x03AEAB94 LDR X2, [X8]
	0x03AEAB98 BL 0x2D30E18
	0x03AEAB9C LDR X8, [X23]
	0x03AEABA0 LDR X8, [X8 + 0xB8]
	0x03AEABA4 STR X21, [X8 + 0x10]
	0x03AEABA8 LDR X2, [X25]
	0x03AEABAC MOV X0, X20
	0x03AEABB0 MOV X1, X21
	0x03AEABB4 BL 0x21D4F84
	0x03AEABB8 LDR X1, [X24]
	0x03AEABBC BL 0x21D79F4
	0x03AEABC0 STR X0, [X19 + 0x10]
	0x03AEABC4 LDP X20, X19, [X31 + 0x30]
	0x03AEABC8 LDP X22, X21, [X31 + 0x20]
	0x03AEABCC LDP X24, X23, [X31 + 0x10]
	0x03AEABD0 LDP X30, X25, [X31], #0x40
	0x03AEABD4 RET
	0x03AEABD8 BL 0x1C16F20
	0x03AEABDC STR X30, [X31 - 0x20]!
	0x03AEABE0 STP X20, X19, [X31 + 0x10]
	0x03AEABE4 ADRP X19, 0x8F8000
	0x03AEABE8 ADRP X20, 0x66E000
	0x03AEABEC LDRB W8, [X19 + 0x5C2]
	0x03AEABF0 LDR X20, [X20 + 0xFD0]
	0x03AEABF4 TBNZ X8, 0x0, 0x3AEAC0C
	0x03AEABF8 ADRP X0, 0x66E000
	0x03AEABFC LDR X0, [X0 + 0xFD0]
	0x03AEAC00 BL 0x1C16CF4
	0x03AEAC04 MOVZ W8, 0x1
	0x03AEAC08 STRB W8, [X19 + 0x5C2]
	0x03AEAC0C LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8F9000
	007 Move X21, 0x66F000
	008 Move X20, 0x66F000
	009 Move W8, [X22+1467]
	010 Move X21, [X21+3808]
	011 Move X20, [X20+3816]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x66F000
	018 Move X0, [X0+3816]
	019 Call 0x1C17CF4
	020 Move X0, 0x66F000
	021 Move X0, [X0+3808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1467], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call List`1<Object>..ctor, X0
	033 Move [X19+16], X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 

Method: System.Void AddKerningPair()

Disassembly:
	0x03AEB2F8 ADRP X9, 0x60F000
	0x03AEB2FC LDR X9, [X9 + 0x678]
	0x03AEB300 MOV X0, X8
	0x03AEB304 LDR X1, [X9]
	0x03AEB308 BL 0x2DAA53C
	0x03AEB30C B 0x3AEB350
	0x03AEB310 ADRP X8, 0x609000
	0x03AEB314 LDR X8, [X8 + 0xE08]
	0x03AEB318 LDR X0, [X8]
	0x03AEB31C BL 0x1C16F10
	0x03AEB320 ADRP X8, 0x60F000
	0x03AEB324 LDR X8, [X8 + 0x688]
	0x03AEB328 MOV X25, X0
	0x03AEB32C LDR X1, [X8]
	0x03AEB330 BL 0x2DA9EF4
	0x03AEB334 LDR X0, [X26]
	0x03AEB338 LDR W8, [X0 + 0xE0]
	0x03AEB33C CBNZ W8, 0x3AEB348
	0x03AEB340 BL 0x1C16DFC
	0x03AEB344 LDR X0, [X26]
	0x03AEB348 LDR X8, [X0 + 0xB8]
	0x03AEB34C STR X25, [X8 + 0x8]
	0x03AEB350 LDR X0, [X26]
	0x03AEB354 LDR W8, [X0 + 0xE0]
	0x03AEB358 CBNZ W8, 0x3AEB360
	0x03AEB35C BL 0x1C16DFC
	0x03AEB360 AND W2, W23, 0x1
	0x03AEB364 MOV W0, W24
	0x03AEB368 MOV X1, X22
	0x03AEB36C MOV W3, W21
	0x03AEB370 MOV W4, W20
	0x03AEB374 MOV X5, X19
	0x03AEB378 LDP X20, X19, [X31 + 0x40]
	0x03AEB37C LDP X22, X21, [X31 + 0x30]
	0x03AEB380 LDP X24, X23, [X31 + 0x20]
	0x03AEB384 LDP X26, X25, [X31 + 0x10]
	0x03AEB388 LDR X30, [X31], #0x50
	0x03AEB38C B 0x3AEB394
	0x03AEB390 BL 0x1C16F20
	0x03AEB394 SUB X31, X31, 0x70
	0x03AEB398 STP X29, X30, [X31 + 0x10]
	0x03AEB39C STP X28, X27, [X31 + 0x20]
	0x03AEB3A0 STP X26, X25, [X31 + 0x30]
	0x03AEB3A4 STP X24, X23, [X31 + 0x40]
	0x03AEB3A8 STP X22, X21, [X31 + 0x50]
	0x03AEB3AC STP X20, X19, [X31 + 0x60]
	0x03AEB3B0 ADRP X25, 0x8F7000
	0x03AEB3B4 LDRB W8, [X25 + 0x5C9]
	0x03AEB3B8 MOV X19, X5
	0x03AEB3BC MOV W20, W4
	0x03AEB3C0 MOV W21, W3
	0x03AEB3C4 MOV W24, W2
	0x03AEB3C8 MOV X22, X1
	0x03AEB3CC MOV W23, W0
	0x03AEB3D0 TBNZ X8, 0x0, 0x3AEB424
	0x03AEB3D4 ADRP X0, 0x66D000
	0x03AEB3D8 LDR X0, [X0 + 0xD48]
	0x03AEB3DC BL 0x1C16CF4
	0x03AEB3E0 ADRP X0, 0x60A000
	0x03AEB3E4 LDR X0, [X0 + 0x9D8]
	0x03AEB3E8 BL 0x1C16CF4
	0x03AEB3EC ADRP X0, 0x66D000
	0x03AEB3F0 LDR X0, [X0 + 0x610]
	0x03AEB3F4 BL 0x1C16CF4
	0x03AEB3F8 ADRP X0, 0x66D000
	0x03AEB3FC LDR X0, [X0 + 0xC48]
	0x03AEB400 BL 0x1C16CF4
	0x03AEB404 ADRP X0, 0x608000
	0x03AEB408 LDR X0, [X0 + 0x598]
	0x03AEB40C BL 0x1C16CF4
	0x03AEB410 ADRP X0, 0x66D000
	0x03AEB414 LDR X0, [X0 + 0x618]
	0x03AEB418 BL 0x1C16CF4
	0x03AEB41C MOVZ W8, 0x1
	0x03AEB420 STRB W8, [X25 + 0x5C9]
	0x03AEB424 ADRP X26, 0x66D000
	0x03AEB428 LDR X26, [X26 + 0xD48]
	0x03AEB42C STRB W31, [X19]
	0x03AEB430 STR X31, [X31 + 0x8]
	0x03AEB434 TBNZ X21, 0x1, 0x3AEB448
	0x03AEB438 CMP W20, 0x190
	0x03AEB43C B.NE 0x3AEB448
	0x03AEB440 CBNZ X22, 0x3AEB590
	0x03AEB444 B 0x3AEB750
	0x03AEB448 CBZ X22, 0x3AEB750
	0x03AEB44C LDR X8, [X22 + 0x198]
	0x03AEB450 CMP W20, 0x190
	0x03AEB454 B.LE 0x3AEB480
	0x03AEB458 CMP W20, 0x258
	0x03AEB45C B.LE 0x3AEB498
	0x03AEB460 CMP W20, 0x2BC
	0x03AEB464 B.EQ 0x3AEB4CC
	0x03AEB468 CMP W20, 0x320
	0x03AEB46C B.EQ 0x3AEB4D4
	0x03AEB470 CMP W20, 0x384
	0x03AEB474 B.NE 0x3AEB4DC
	0x03AEB478 MOVZ W9, 0x9
	0x03AEB47C B 0x3AEB4E0
	0x03AEB480 CMP W20, 0xC8
	0x03AEB484 B.LE 0x3AEB4B4
	0x03AEB488 CMP W20, 0x12C
	0x03AEB48C MOVZ W9, 0x3
	0x03AEB490 CINC X9, X9, NE
	0x03AEB494 B 0x3AEB4E0
	0x03AEB498 MOVZ W9, 0x4
	0x03AEB49C MOVZ W10, 0x6
	0x03AEB4A0 CSEL X9, X10, X9, EQ
	0x03AEB4A4 CMP W20, 0x1F4
	0x03AEB4A8 MOVZ W10, 0x5
	0x03AEB4AC CSEL X9, X10, X9, EQ
	0x03AEB4B0 B 0x3AEB4E0
	0x03AEB4B4 MOVZ W9, 0x4
	0x03AEB4B8 MOVZ W10, 0x2
	0x03AEB4BC CSEL X9, X10, X9, EQ
	0x03AEB4C0 CMP W20, 0x64
	0x03AEB4C4 CSINC X9, X9, X31, NE
	0x03AEB4C8 B 0x3AEB4E0

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x8F8000
	011 Move W8, [X20+1468]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x66E000
	018 Move X0, [X0+3912]
	019 Call 0x1C17CF4
	020 Move X0, 0x66E000
	021 Move X0, [X0+3904]
	022 Call 0x1C17CF4
	023 Move X0, 0x66E000
	024 Move X0, [X0+3920]
	025 Call 0x1C17CF4
	026 Move X0, 0x66E000
	027 Move X0, [X0+3368]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1468], W8
	031 Move X20, [X19+16]
	032 Compare X20, 0
	033 JumpIfEqual {137}
	034 Move X22, 0x66E000
	035 Move X21, 0x66E000
	036 Move W8, [X20+24]
	037 Move X22, [X22+3904]
	038 Move X21, [X21+3920]
	039 Compare W8, 0
	040 JumpIfEqual {86}
	041 Move X25, 0x66E000
	042 Move X25, [X25+3912]
	043 Move X0, X20
	044 Move X1, [X25]
	045 Call Enumerable.Last, X0
	046 Compare X0, 0
	047 JumpIfEqual {137}
	048 Move W23, [X0+16]
	049 Move X0, [X19+16]
	050 Move X1, [X25]
	051 Call Enumerable.Last, X0
	052 Compare X0, 0
	053 JumpIfEqual {137}
	054 Move W24, [X0+36]
	055 Move X0, [X19+16]
	056 Move X1, [X25]
	057 Call Enumerable.Last, X0
	058 Compare X0, 0
	059 JumpIfEqual {137}
	060 Move V8, [X0+56]
	061 Move X0, [X22]
	062 Move X19, [X19+16]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X20, X0
	066 Call Object..ctor, X0
	067 Move [X20+16], W23
	068 Move [X20+36], W24
	069 Move [X20+56], S8
	070 Compare X19, 0
	071 JumpIfEqual {137}
	072 Move W10, [X19+28]
	073 Move X8, [X19+16]
	074 Move X9, [X21]
	075 Add W10, W10, 1
	076 Move [X19+28], W10
	077 Compare X8, 0
	078 JumpIfEqual {137}
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Move W11, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add W9, W10, 1
	083 Add X8, X8, X10
	084 Move [X19+24], W9
	085 Move [X8+32], X20
	086 Move X0, [X22]
	087 Call 0x1C17F10
	088 Move X1, X31
	089 Move X19, X0
	090 Call Object..ctor, X0
	091 Move [X19+16], W31
	092 Move [X19+36], W31
	093 Move [X19+56], W31
	094 Move W10, [X20+28]
	095 Move X8, [X20+16]
	096 Move X9, [X21]
	097 Add W10, W10, 1
	098 Move [X20+28], W10
	099 Compare X8, 0
	100 JumpIfEqual {137}
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Move W11, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add W9, W10, 1
	105 Add X8, X8, X10
	106 Move [X20+24], W9
	107 Move [X8+32], X19
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X30, [X31+16]
	115 Move X25, [X31+24]
	116 Move V8, [X31+80]
	117 Return 
	118 Move X8, [X9+32]
	119 Move X0, X19
	120 Move X1, X20
	121 Move X8, [X9+32]
	122 Move X0, X20
	123 Move X1, X19
	124 Move X8, [X8+192]
	125 Move X2, [X8+112]
	126 Move X20, [X31+64]
	127 Move X19, [X31+72]
	128 Move X22, [X31+48]
	129 Move X21, [X31+56]
	130 Move X24, [X31+32]
	131 Move X23, [X31+40]
	132 Move X30, [X31+16]
	133 Move X25, [X31+24]
	134 Move V8, [X31+80]
	135 Call List`1<Object>.AddWithResize, X0, X1
	136 Return 
	137 Call 0x1C17F20

Method: System.Int32 AddKerningPair(System.UInt32 first, System.UInt32 second, System.Single offset)

Disassembly:
	0x03AEB4CC MOVZ W9, 0x7
	0x03AEB4D0 B 0x3AEB4E0
	0x03AEB4D4 MOVZ W9, 0x8
	0x03AEB4D8 B 0x3AEB4E0
	0x03AEB4DC MOVZ W9, 0x4
	0x03AEB4E0 CBZ X8, 0x3AEB750
	0x03AEB4E4 LDR W10, [X8 + 0x18]
	0x03AEB4E8 CMP W9, W10
	0x03AEB4EC B.CS 0x3AEB754
	0x03AEB4F0 ADD X8, X8, X9, 0x4, LSL
	0x03AEB4F4 ADRP X9, 0x608000
	0x03AEB4F8 LDR X9, [X9 + 0x598]
	0x03AEB4FC ADD X10, X8, 0x28
	0x03AEB500 ADD X8, X8, 0x20
	0x03AEB504 ANDS W31, W21, 0x2
	0x03AEB508 LDR X0, [X9]
	0x03AEB50C CSEL X8, X8, X10, EQ
	0x03AEB510 LDR X25, [X8]
	0x03AEB514 LDR W9, [X0 + 0xE0]
	0x03AEB518 CBNZ W9, 0x3AEB520
	0x03AEB51C BL 0x1C16DFC
	0x03AEB520 MOV X0, X25
	0x03AEB524 MOV X1, X31
	0x03AEB528 MOV X2, X31
	0x03AEB52C BL 0x3C354F8
	0x03AEB530 TBZ X0, 0x0, 0x3AEB590
	0x03AEB534 CBZ X25, 0x3AEB750
	0x03AEB538 LDR X0, [X25 + 0xC8]
	0x03AEB53C CBNZ X0, 0x3AEB550
	0x03AEB540 MOV X0, X25
	0x03AEB544 BL 0x3AE1A88
	0x03AEB548 LDR X0, [X25 + 0xC8]
	0x03AEB54C CBZ X0, 0x3AEB750
	0x03AEB550 LDR X3, [X26]
	0x03AEB554 ADD X2, X31, 0x8
	0x03AEB558 MOV W1, W23
	0x03AEB55C BL 0x2B10A7C
	0x03AEB560 TBZ X0, 0x0, 0x3AEB570
	0x03AEB564 MOVZ W8, 0x1
	0x03AEB568 STRB W8, [X19]
	0x03AEB56C B 0x3AEB5BC
	0x03AEB570 LDR W8, [X25 + 0x48]
	0x03AEB574 CMP W8, 0x1
	0x03AEB578 B.NE 0x3AEB590
	0x03AEB57C ADD X2, X31, 0x8
	0x03AEB580 MOV X0, X25
	0x03AEB584 MOV W1, W23
	0x03AEB588 BL 0x3AE4974
	0x03AEB58C TBNZ X0, 0x0, 0x3AEB564
	0x03AEB590 LDR X0, [X22 + 0xC8]
	0x03AEB594 CBNZ X0, 0x3AEB5A8
	0x03AEB598 MOV X0, X22
	0x03AEB59C BL 0x3AE1A88
	0x03AEB5A0 LDR X0, [X22 + 0xC8]
	0x03AEB5A4 CBZ X0, 0x3AEB750
	0x03AEB5A8 LDR X3, [X26]
	0x03AEB5AC ADD X2, X31, 0x8
	0x03AEB5B0 MOV W1, W23
	0x03AEB5B4 BL 0x2B10A7C
	0x03AEB5B8 TBZ X0, 0x0, 0x3AEB5E0
	0x03AEB5BC LDR X0, [X31 + 0x8]
	0x03AEB5C0 LDP X20, X19, [X31 + 0x60]
	0x03AEB5C4 LDP X22, X21, [X31 + 0x50]
	0x03AEB5C8 LDP X24, X23, [X31 + 0x40]
	0x03AEB5CC LDP X26, X25, [X31 + 0x30]
	0x03AEB5D0 LDP X28, X27, [X31 + 0x20]
	0x03AEB5D4 LDP X29, X30, [X31 + 0x10]
	0x03AEB5D8 ADD X31, X31, 0x70
	0x03AEB5DC RET
	0x03AEB5E0 LDR W8, [X22 + 0x48]
	0x03AEB5E4 CMP W8, 0x1
	0x03AEB5E8 B.NE 0x3AEB600
	0x03AEB5EC ADD X2, X31, 0x8
	0x03AEB5F0 MOV X0, X22
	0x03AEB5F4 MOV W1, W23
	0x03AEB5F8 BL 0x3AE4974
	0x03AEB5FC TBNZ X0, 0x0, 0x3AEB5BC
	0x03AEB600 LDR X8, [X31 + 0x8]
	0x03AEB604 MOV X0, X31
	0x03AEB608 CBNZ X8, 0x3AEB5C0
	0x03AEB60C TBZ X24, 0x0, 0x3AEB5C0
	0x03AEB610 LDR X24, [X22 + 0x138]
	0x03AEB614 CBZ X24, 0x3AEB748
	0x03AEB618 LDR W28, [X24 + 0x18]
	0x03AEB61C CMP W28, 0x1
	0x03AEB620 B.LT 0x3AEB748
	0x03AEB624 STR X19, [X31]
	0x03AEB628 ADRP X19, 0x608000
	0x03AEB62C LDR X19, [X19 + 0x598]
	0x03AEB630 MOV W25, W31
	0x03AEB634 ADRP X8, 0x66D000
	0x03AEB638 LDR X8, [X8 + 0xC48]
	0x03AEB63C MOV X0, X24
	0x03AEB640 MOV W1, W25
	0x03AEB644 LDR X2, [X8]
	0x03AEB648 BL 0x301BCCC
	0x03AEB64C LDR X8, [X19]
	0x03AEB650 MOV X26, X0
	0x03AEB654 LDR W9, [X8 + 0xE0]
	0x03AEB658 CBNZ W9, 0x3AEB664
	0x03AEB65C MOV X0, X8
	0x03AEB660 BL 0x1C16DFC
	0x03AEB664 MOV X0, X26
	0x03AEB668 MOV X1, X31
	0x03AEB66C MOV X2, X31
	0x03AEB670 BL 0x3C3883C
	0x03AEB674 TBNZ X0, 0x0, 0x3AEB73C

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x8F8000
	009 Move X23, 0x66E000
	010 Move W8, [X22+1469]
	011 Move X23, [X23+3928]
	012 Move V8, V0
	013 Move W20, W2
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x66E000
	021 Move X0, [X0+3904]
	022 Call 0x1C17CF4
	023 Move X0, 0x66E000
	024 Move X0, [X0+3920]
	025 Call 0x1C17CF4
	026 Move X0, 0x66E000
	027 Move X0, [X0+3936]
	028 Call 0x1C17CF4
	029 Move X0, 0x66E000
	030 Move X0, [X0+3944]
	031 Call 0x1C17CF4
	032 Move X0, 0x66E000
	033 Move X0, [X0+3952]
	034 Call 0x1C17CF4
	035 Move X0, 0x66E000
	036 Move X0, [X0+3928]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1469], W8
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X22, X0
	044 Call Object..ctor, X0
	045 Compare X22, 0
	046 JumpIfEqual {120}
	047 Move X8, 0x66E000
	048 Move X8, [X8+3944]
	049 Move [X22+16], W21
	050 Move [X22+20], W20
	051 Move X21, 0x66E000
	052 Move X20, [X19+16]
	053 Move X0, [X8]
	054 Move X21, [X21+3952]
	055 Call 0x1C17F10
	056 Move X2, [X21]
	057 Move X1, X22
	058 Move X3, X31
	059 Move X21, X0
	060 Call Predicate`1<Object>..ctor, X0, X1, X2
	061 Compare X20, 0
	062 JumpIfEqual {120}
	063 Move X8, 0x66E000
	064 Move X8, [X8+3936]
	065 Move X0, X20
	066 Move X1, X21
	067 Move X2, [X8]
	068 Call List`1<Object>.FindIndex, X0, X1
	069 Add W31, W0, 1
	070 Move TEMP, 0
	071 Not TEMP
	072 Move W0, TEMP
	073 Move X8, 0x66E000
	074 Move X19, [X19+16]
	075 Move W21, [X22+16]
	076 Move W22, [X22+20]
	077 Move X8, [X8+3904]
	078 Move X0, [X8]
	079 Call 0x1C17F10
	080 Move X1, X31
	081 Move X20, X0
	082 Call Object..ctor, X0
	083 Move [X20+16], W21
	084 Move [X20+36], W22
	085 Move [X20+56], S8
	086 Compare X19, 0
	087 JumpIfEqual {120}
	088 Move X9, 0x66E000
	089 Move X9, [X9+3920]
	090 Move W10, [X19+28]
	091 Move X8, [X19+16]
	092 Move X9, [X9]
	093 Add W10, W10, 1
	094 Move [X19+28], W10
	095 Compare X8, 0
	096 JumpIfEqual {120}
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Move W11, [X8+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add W9, W10, 1
	101 Add X8, X8, X10
	102 Move W0, W31
	103 Move [X19+24], W9
	104 Move [X8+32], X20
	105 Move X8, [X9+32]
	106 Move X0, X19
	107 Move X1, X20
	108 Move X8, [X8+192]
	109 Move X2, [X8+112]
	110 Call List`1<Object>.AddWithResize, X0, X1
	111 Move W0, W31
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X30, [X31+16]
	117 Move X23, [X31+24]
	118 Move V8, [X31+64]
	119 Return X0
	120 Call 0x1C17F20

Method: System.Int32 AddGlyphPairAdjustmentRecord(System.UInt32 first, TMPro.GlyphValueRecord_Legacy firstAdjustments, System.UInt32 second, TMPro.GlyphValueRecord_Legacy secondAdjustments)

Disassembly:
	0x03AEB680 LDR W27, [X26 + 0x18]
	0x03AEB684 LDR X8, [X8 + 0x618]
	0x03AEB688 CBNZ W27, 0x3AEB6A8
	0x03AEB68C MOV X0, X26
	0x03AEB690 MOV X1, X31
	0x03AEB694 BL 0x3C385F8
	0x03AEB698 ADRP X8, 0x66D000
	0x03AEB69C LDR X8, [X8 + 0x618]
	0x03AEB6A0 MOV W27, W0
	0x03AEB6A4 STR W0, [X26 + 0x18]
	0x03AEB6A8 LDR X0, [X8]
	0x03AEB6AC MOV X29, X8
	0x03AEB6B0 LDR W8, [X0 + 0xE0]
	0x03AEB6B4 CBNZ W8, 0x3AEB6C0
	0x03AEB6B8 BL 0x1C16DFC
	0x03AEB6BC LDR X0, [X29]
	0x03AEB6C0 LDR X8, [X0 + 0xB8]
	0x03AEB6C4 LDR X0, [X8 + 0x8]
	0x03AEB6C8 CBZ X0, 0x3AEB750
	0x03AEB6CC ADRP X8, 0x60A000
	0x03AEB6D0 LDR X8, [X8 + 0x9D8]
	0x03AEB6D4 MOV W1, W27
	0x03AEB6D8 LDR X2, [X8]
	0x03AEB6DC BL 0x2DAB03C
	0x03AEB6E0 TBZ X0, 0x0, 0x3AEB73C
	0x03AEB6E4 LDR X0, [X22 + 0x1C0]
	0x03AEB6E8 CBZ X0, 0x3AEB750
	0x03AEB6EC ADRP X8, 0x60A000
	0x03AEB6F0 LDR X8, [X8 + 0x9D8]
	0x03AEB6F4 MOV W1, W27
	0x03AEB6F8 LDR X2, [X8]
	0x03AEB6FC BL 0x2DAB03C
	0x03AEB700 ADRP X8, 0x66D000
	0x03AEB704 LDR X8, [X8 + 0x618]
	0x03AEB708 LDR X0, [X8]
	0x03AEB70C LDR W8, [X0 + 0xE0]
	0x03AEB710 CBNZ W8, 0x3AEB718
	0x03AEB714 BL 0x1C16DFC
	0x03AEB718 LDR X5, [X31]
	0x03AEB71C MOVZ W2, 0x1
	0x03AEB720 MOV W0, W23
	0x03AEB724 MOV X1, X26
	0x03AEB728 MOV W3, W21
	0x03AEB72C MOV W4, W20
	0x03AEB730 BL 0x3AEB394
	0x03AEB734 STR X0, [X31 + 0x8]
	0x03AEB738 CBNZ X0, 0x3AEB5C0
	0x03AEB73C ADD W25, W25, 0x1
	0x03AEB740 CMP W28, W25
	0x03AEB744 B.NE 0x3AEB634
	0x03AEB748 MOV X0, X31
	0x03AEB74C B 0x3AEB5C0
	0x03AEB750 BL 0x1C16F20
	0x03AEB754 BL 0x1C16F28
	0x03AEB758 SUB X31, X31, 0x70
	0x03AEB75C STP X29, X30, [X31 + 0x10]
	0x03AEB760 STP X28, X27, [X31 + 0x20]
	0x03AEB764 STP X26, X25, [X31 + 0x30]
	0x03AEB768 STP X24, X23, [X31 + 0x40]
	0x03AEB76C STP X22, X21, [X31 + 0x50]
	0x03AEB770 STP X20, X19, [X31 + 0x60]
	0x03AEB774 ADRP X20, 0x8F7000
	0x03AEB778 LDRB W8, [X20 + 0x5CA]
	0x03AEB77C MOV X19, X6
	0x03AEB780 MOV W22, W3
	0x03AEB784 MOV X23, X2
	0x03AEB788 MOV X24, X1
	0x03AEB78C MOV W25, W0
	0x03AEB790 STP W4, W5, [X31 + 0x8]
	0x03AEB794 TBNZ X8, 0x0, 0x3AEB800
	0x03AEB798 ADRP X0, 0x60A000
	0x03AEB79C LDR X0, [X0 + 0x9D8]
	0x03AEB7A0 BL 0x1C16CF4
	0x03AEB7A4 ADRP X0, 0x60F000
	0x03AEB7A8 LDR X0, [X0 + 0x678]
	0x03AEB7AC BL 0x1C16CF4
	0x03AEB7B0 ADRP X0, 0x60F000
	0x03AEB7B4 LDR X0, [X0 + 0x688]
	0x03AEB7B8 BL 0x1C16CF4
	0x03AEB7BC ADRP X0, 0x609000
	0x03AEB7C0 LDR X0, [X0 + 0xE08]
	0x03AEB7C4 BL 0x1C16CF4
	0x03AEB7C8 ADRP X0, 0x66D000
	0x03AEB7CC LDR X0, [X0 + 0x610]
	0x03AEB7D0 BL 0x1C16CF4
	0x03AEB7D4 ADRP X0, 0x66D000
	0x03AEB7D8 LDR X0, [X0 + 0xC48]
	0x03AEB7DC BL 0x1C16CF4
	0x03AEB7E0 ADRP X0, 0x608000
	0x03AEB7E4 LDR X0, [X0 + 0x598]
	0x03AEB7E8 BL 0x1C16CF4
	0x03AEB7EC ADRP X0, 0x66D000
	0x03AEB7F0 LDR X0, [X0 + 0x618]
	0x03AEB7F4 BL 0x1C16CF4
	0x03AEB7F8 MOVZ W8, 0x1
	0x03AEB7FC STRB W8, [X20 + 0x5CA]
	0x03AEB800 STRB W31, [X19]
	0x03AEB804 CBZ X23, 0x3AEB98C
	0x03AEB808 LDR W29, [X23 + 0x18]
	0x03AEB80C CBZ W29, 0x3AEB98C
	0x03AEB810 TBZ X22, 0x0, 0x3AEB8B4
	0x03AEB814 ADRP X20, 0x66D000
	0x03AEB818 LDR X20, [X20 + 0x618]
	0x03AEB81C LDR X0, [X20]
	0x03AEB820 LDR W8, [X0 + 0xE0]
	0x03AEB824 CBNZ W8, 0x3AEB830
	0x03AEB828 BL 0x1C16DFC
	0x03AEB82C LDR X0, [X20]
	0x03AEB830 LDR X8, [X0 + 0xB8]
	0x03AEB834 LDR X8, [X8 + 0x8]
	0x03AEB838 CBZ X8, 0x3AEB870
	0x03AEB83C LDR W9, [X0 + 0xE0]
	0x03AEB840 CBNZ W9, 0x3AEB858
	0x03AEB844 BL 0x1C16DFC
	0x03AEB848 LDR X8, [X20]
	0x03AEB84C LDR X8, [X8 + 0xB8]
	0x03AEB850 LDR X8, [X8 + 0x8]
	0x03AEB854 CBZ X8, 0x3AEB9B0
	0x03AEB858 ADRP X9, 0x60F000
	0x03AEB85C LDR X9, [X9 + 0x678]
	0x03AEB860 MOV X0, X8
	0x03AEB864 LDR X1, [X9]
	0x03AEB868 BL 0x2DAA53C

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, 0x8F8000
	016 Move X23, 0x66E000
	017 Move W8, [X22+1470]
	018 Move X23, [X23+3960]
	019 Move V8, V7
	020 Move V9, V6
	021 Move V10, V5
	022 Move V11, V4
	023 Move W20, W2
	024 Move V12, V3
	025 Move V13, V2
	026 Move V14, V1
	027 Move V15, V0
	028 Move W21, W1
	029 Move X19, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {54}
	034 Move X0, 0x66E000
	035 Move X0, [X0+3904]
	036 Call 0x1C17CF4
	037 Move X0, 0x66E000
	038 Move X0, [X0+3920]
	039 Call 0x1C17CF4
	040 Move X0, 0x66E000
	041 Move X0, [X0+3936]
	042 Call 0x1C17CF4
	043 Move X0, 0x66E000
	044 Move X0, [X0+3944]
	045 Call 0x1C17CF4
	046 Move X0, 0x66E000
	047 Move X0, [X0+3968]
	048 Call 0x1C17CF4
	049 Move X0, 0x66E000
	050 Move X0, [X0+3960]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+1470], W8
	054 Move X0, [X23]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X22, X0
	058 Call Object..ctor, X0
	059 Compare X22, 0
	060 JumpIfEqual {148}
	061 Move X8, 0x66E000
	062 Move X8, [X8+3944]
	063 Move [X22+16], W21
	064 Move [X22+20], W20
	065 Move X21, 0x66E000
	066 Move X20, [X19+16]
	067 Move X0, [X8]
	068 Move X21, [X21+3968]
	069 Call 0x1C17F10
	070 Move X2, [X21]
	071 Move X1, X22
	072 Move X3, X31
	073 Move X21, X0
	074 Call Predicate`1<Object>..ctor, X0, X1, X2
	075 Compare X20, 0
	076 JumpIfEqual {148}
	077 Move X8, 0x66E000
	078 Move X8, [X8+3936]
	079 Move X0, X20
	080 Move X1, X21
	081 Move X2, [X8]
	082 Call List`1<Object>.FindIndex, X0, X1
	083 Add W31, W0, 1
	084 Move TEMP, 0
	085 Not TEMP
	086 Move W0, TEMP
	087 Move X8, 0x66E000
	088 Move X19, [X19+16]
	089 Move W21, [X22+16]
	090 Move W22, [X22+20]
	091 Move X8, [X8+3904]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X20, X0
	096 Call Object..ctor, X0
	097 Move [X20+16], W21
	098 Move [X20+20], S15
	099 Move [X20+28], S14
	100 Move [X20+28], S13
	101 Move [X20+36], S12
	102 Move [X20+36], W22
	103 Move [X20+40], S11
	104 Move [X20+48], S10
	105 Move [X20+48], S9
	106 Move [X20+56], S8
	107 Compare X19, 0
	108 JumpIfEqual {148}
	109 Move X9, 0x66E000
	110 Move X9, [X9+3920]
	111 Move W10, [X19+28]
	112 Move X8, [X19+16]
	113 Move X9, [X9]
	114 Add W10, W10, 1
	115 Move [X19+28], W10
	116 Compare X8, 0
	117 JumpIfEqual {148}
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 Move W11, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add W9, W10, 1
	122 Add X8, X8, X10
	123 Move W0, W31
	124 Move [X19+24], W9
	125 Move [X8+32], X20
	126 Move X8, [X9+32]
	127 Move X0, X19
	128 Move X1, X20
	129 Move X8, [X8+192]
	130 Move X2, [X8+112]
	131 Call List`1<Object>.AddWithResize, X0, X1
	132 Move W0, W31
	133 Move X20, [X31+96]
	134 Move X19, [X31+104]
	135 Move X22, [X31+80]
	136 Move X21, [X31+88]
	137 Move X30, [X31+64]
	138 Move X23, [X31+72]
	139 Move D9, [X31+48]
	140 Move D8, [X31+56]
	141 Move D11, [X31+32]
	142 Move D10, [X31+40]
	143 Move D13, [X31+16]
	144 Move D12, [X31+24]
	145 Move D15, [X31+112]
	146 Move D14, [X31+120]
	147 Return X0
	148 Call 0x1C17F20

Method: System.Void RemoveKerningPair(System.Int32 left, System.Int32 right)

Disassembly:
	0x03AEB874 LDR X8, [X8 + 0xE08]
	0x03AEB878 LDR X0, [X8]
	0x03AEB87C BL 0x1C16F10
	0x03AEB880 ADRP X8, 0x60F000
	0x03AEB884 LDR X8, [X8 + 0x688]
	0x03AEB888 MOV X26, X0
	0x03AEB88C LDR X1, [X8]
	0x03AEB890 BL 0x2DA9EF4
	0x03AEB894 LDR X0, [X20]
	0x03AEB898 LDR W8, [X0 + 0xE0]
	0x03AEB89C CBNZ W8, 0x3AEB8A8
	0x03AEB8A0 BL 0x1C16DFC
	0x03AEB8A4 LDR X0, [X20]
	0x03AEB8A8 LDR X8, [X0 + 0xB8]
	0x03AEB8AC STR X26, [X8 + 0x8]
	0x03AEB8B0 LDR W29, [X23 + 0x18]
	0x03AEB8B4 CMP W29, 0x1
	0x03AEB8B8 B.LT 0x3AEB98C
	0x03AEB8BC ADRP X20, 0x66D000
	0x03AEB8C0 ADRP X21, 0x608000
	0x03AEB8C4 LDR X20, [X20 + 0xC48]
	0x03AEB8C8 LDR X21, [X21 + 0x598]
	0x03AEB8CC MOV W26, W31
	0x03AEB8D0 LDR X2, [X20]
	0x03AEB8D4 MOV X0, X23
	0x03AEB8D8 MOV W1, W26
	0x03AEB8DC BL 0x301BCCC
	0x03AEB8E0 LDR X8, [X21]
	0x03AEB8E4 MOV X27, X0
	0x03AEB8E8 LDR W9, [X8 + 0xE0]
	0x03AEB8EC CBNZ W9, 0x3AEB8F8
	0x03AEB8F0 MOV X0, X8
	0x03AEB8F4 BL 0x1C16DFC
	0x03AEB8F8 MOV X0, X27
	0x03AEB8FC MOV X1, X31
	0x03AEB900 MOV X2, X31
	0x03AEB904 BL 0x3C3883C
	0x03AEB908 TBNZ X0, 0x0, 0x3AEB980
	0x03AEB90C CBZ X24, 0x3AEB9B0
	0x03AEB910 CBZ X27, 0x3AEB9B0
	0x03AEB914 LDR W1, [X27 + 0x18]
	0x03AEB918 LDR X28, [X24 + 0x1C0]
	0x03AEB91C CBNZ W1, 0x3AEB934
	0x03AEB920 MOV X0, X27
	0x03AEB924 MOV X1, X31
	0x03AEB928 BL 0x3C385F8
	0x03AEB92C MOV W1, W0
	0x03AEB930 STR W0, [X27 + 0x18]
	0x03AEB934 CBZ X28, 0x3AEB9B0
	0x03AEB938 ADRP X8, 0x60A000
	0x03AEB93C LDR X8, [X8 + 0x9D8]
	0x03AEB940 MOV X0, X28
	0x03AEB944 LDR X2, [X8]
	0x03AEB948 BL 0x2DAB03C
	0x03AEB94C ADRP X8, 0x66D000
	0x03AEB950 LDR X8, [X8 + 0x618]
	0x03AEB954 LDR X0, [X8]
	0x03AEB958 LDR W8, [X0 + 0xE0]
	0x03AEB95C CBNZ W8, 0x3AEB964
	0x03AEB960 BL 0x1C16DFC
	0x03AEB964 LDP W3, W4, [X31 + 0x8]
	0x03AEB968 AND W2, W22, 0x1
	0x03AEB96C MOV W0, W25
	0x03AEB970 MOV X1, X27
	0x03AEB974 MOV X5, X19
	0x03AEB978 BL 0x3AEB394
	0x03AEB97C CBNZ X0, 0x3AEB990
	0x03AEB980 ADD W26, W26, 0x1
	0x03AEB984 CMP W29, W26
	0x03AEB988 B.NE 0x3AEB8D0
	0x03AEB98C MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x8F8000
	008 Move X23, 0x66E000
	009 Move W8, [X22+1471]
	010 Move X23, [X23+3976]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x66E000
	019 Move X0, [X0+3936]
	020 Call 0x1C17CF4
	021 Move X0, 0x66E000
	022 Move X0, [X0+3984]
	023 Call 0x1C17CF4
	024 Move X0, 0x66E000
	025 Move X0, [X0+3944]
	026 Call 0x1C17CF4
	027 Move X0, 0x66E000
	028 Move X0, [X0+3992]
	029 Call 0x1C17CF4
	030 Move X0, 0x66E000
	031 Move X0, [X0+3976]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1471], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X22, X0
	039 Call Object..ctor, X0
	040 Compare X22, 0
	041 JumpIfEqual {87}
	042 Move X8, 0x66E000
	043 Move X8, [X8+3944]
	044 Move [X22+16], W21
	045 Move [X22+20], W20
	046 Move X21, 0x66E000
	047 Move X20, [X19+16]
	048 Move X0, [X8]
	049 Move X21, [X21+3992]
	050 Call 0x1C17F10
	051 Move X2, [X21]
	052 Move X1, X22
	053 Move X3, X31
	054 Move X21, X0
	055 Call Predicate`1<Object>..ctor, X0, X1, X2
	056 Compare X20, 0
	057 JumpIfEqual {87}
	058 Move X8, 0x66E000
	059 Move X8, [X8+3936]
	060 Move X0, X20
	061 Move X1, X21
	062 Move X2, [X8]
	063 Call List`1<Object>.FindIndex, X0, X1
	064 Add W31, W0, 1
	065 Move W1, W0
	066 Move X0, [X19+16]
	067 Compare X0, 0
	068 JumpIfEqual {87}
	069 Move X8, 0x66E000
	070 Move X8, [X8+3984]
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X2, [X8]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Call List`1<Object>.RemoveAt, X0, X1
	079 Return 
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Move X23, [X31+56]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void RemoveKerningPair(System.Int32 index)

Disassembly:
	0x03AEB998 LDP X24, X23, [X31 + 0x40]
	0x03AEB99C LDP X26, X25, [X31 + 0x30]
	0x03AEB9A0 LDP X28, X27, [X31 + 0x20]
	0x03AEB9A4 LDP X29, X30, [X31 + 0x10]
	0x03AEB9A8 ADD X31, X31, 0x70
	0x03AEB9AC RET
	0x03AEB9B0 BL 0x1C16F20
	0x03AEB9B4 STR X30, [X31 - 0x60]!
	0x03AEB9B8 STP X28, X27, [X31 + 0x10]
	0x03AEB9BC STP X26, X25, [X31 + 0x20]
	0x03AEB9C0 STP X24, X23, [X31 + 0x30]
	0x03AEB9C4 STP X22, X21, [X31 + 0x40]
	0x03AEB9C8 STP X20, X19, [X31 + 0x50]
	0x03AEB9CC ADRP X22, 0x8F7000
	0x03AEB9D0 ADRP X24, 0x608000
	0x03AEB9D4 LDRB W8, [X22 + 0x5CB]
	0x03AEB9D8 LDR X24, [X24 + 0x598]
	0x03AEB9DC MOV W21, W2
	0x03AEB9E0 MOV X20, X1
	0x03AEB9E4 MOV W19, W0
	0x03AEB9E8 TBNZ X8, 0x0, 0x3AEBA60
	0x03AEB9EC ADRP X0, 0x66D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8F8000
	006 Move W8, [X21+1472]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x66E000
	014 Move X0, [X0+3984]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1472], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x66E000
	022 Move X8, [X8+3984]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.RemoveAt, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void SortKerningPairs()

Disassembly:
	0x03AEB9F0 LDR X0, [X0 + 0xFE0]
	0x03AEB9F4 BL 0x1C16CF4
	0x03AEB9F8 ADRP X0, 0x60A000
	0x03AEB9FC LDR X0, [X0 + 0x9D8]
	0x03AEBA00 BL 0x1C16CF4
	0x03AEBA04 ADRP X0, 0x60F000
	0x03AEBA08 LDR X0, [X0 + 0x678]
	0x03AEBA0C BL 0x1C16CF4
	0x03AEBA10 ADRP X0, 0x60F000
	0x03AEBA14 LDR X0, [X0 + 0x688]
	0x03AEBA18 BL 0x1C16CF4
	0x03AEBA1C ADRP X0, 0x609000
	0x03AEBA20 LDR X0, [X0 + 0xE08]
	0x03AEBA24 BL 0x1C16CF4
	0x03AEBA28 ADRP X0, 0x66D000
	0x03AEBA2C LDR X0, [X0 + 0xFE8]
	0x03AEBA30 BL 0x1C16CF4
	0x03AEBA34 ADRP X0, 0x66D000
	0x03AEBA38 LDR X0, [X0 + 0xFF0]
	0x03AEBA3C BL 0x1C16CF4
	0x03AEBA40 ADRP X0, 0x608000
	0x03AEBA44 LDR X0, [X0 + 0x598]
	0x03AEBA48 BL 0x1C16CF4
	0x03AEBA4C ADRP X0, 0x66D000
	0x03AEBA50 LDR X0, [X0 + 0x618]
	0x03AEBA54 BL 0x1C16CF4
	0x03AEBA58 MOVZ W8, 0x1
	0x03AEBA5C STRB W8, [X22 + 0x5CB]
	0x03AEBA60 LDR X0, [X24]
	0x03AEBA64 STR X31, [X31 + 0x8]
	0x03AEBA68 LDR W8, [X0 + 0xE0]
	0x03AEBA6C CBNZ W8, 0x3AEBA74
	0x03AEBA70 BL 0x1C16DFC
	0x03AEBA74 MOV X0, X20
	0x03AEBA78 MOV X1, X31
	0x03AEBA7C MOV X2, X31
	0x03AEBA80 BL 0x3C3883C
	0x03AEBA84 MOV W8, W0
	0x03AEBA88 MOV X0, X31
	0x03AEBA8C TBNZ X8, 0x0, 0x3AEBC9C
	0x03AEBA90 CBZ X20, 0x3AEBCB8
	0x03AEBA94 MOV X0, X20
	0x03AEBA98 MOV X1, X31
	0x03AEBA9C BL 0x3B17194
	0x03AEBAA0 CBZ X0, 0x3AEBCB8
	0x03AEBAA4 ADRP X8, 0x66D000
	0x03AEBAA8 LDR X8, [X8 + 0xFE0]
	0x03AEBAAC ADD X2, X31, 0x8
	0x03AEBAB0 MOV W1, W19
	0x03AEBAB4 LDR X3, [X8]
	0x03AEBAB8 BL 0x2B10A7C
	0x03AEBABC TBZ X0, 0x0, 0x3AEBAC8
	0x03AEBAC0 LDR X0, [X31 + 0x8]
	0x03AEBAC4 B 0x3AEBC9C
	0x03AEBAC8 TBZ X21, 0x0, 0x3AEBC98
	0x03AEBACC ADRP X25, 0x66D000
	0x03AEBAD0 LDR X25, [X25 + 0x618]
	0x03AEBAD4 LDR X0, [X25]
	0x03AEBAD8 LDR W8, [X0 + 0xE0]
	0x03AEBADC CBNZ W8, 0x3AEBAE8
	0x03AEBAE0 BL 0x1C16DFC
	0x03AEBAE4 LDR X0, [X25]
	0x03AEBAE8 LDR X8, [X0 + 0xB8]
	0x03AEBAEC LDR X8, [X8 + 0x8]
	0x03AEBAF0 CBZ X8, 0x3AEBB2C
	0x03AEBAF4 LDR W9, [X0 + 0xE0]
	0x03AEBAF8 CBNZ W9, 0x3AEBB10
	0x03AEBAFC BL 0x1C16DFC
	0x03AEBB00 LDR X8, [X25]
	0x03AEBB04 LDR X8, [X8 + 0xB8]
	0x03AEBB08 LDR X8, [X8 + 0x8]
	0x03AEBB0C CBZ X8, 0x3AEBCB8
	0x03AEBB10 ADRP X9, 0x60F000
	0x03AEBB14 LDR X9, [X9 + 0x678]
	0x03AEBB18 MOV X0, X8
	0x03AEBB1C LDR X1, [X9]
	0x03AEBB20 BL 0x2DAA53C
	0x03AEBB24 LDR X0, [X25]
	0x03AEBB28 B 0x3AEBB6C
	0x03AEBB2C ADRP X8, 0x609000
	0x03AEBB30 LDR X8, [X8 + 0xE08]
	0x03AEBB34 LDR X0, [X8]
	0x03AEBB38 BL 0x1C16F10
	0x03AEBB3C ADRP X8, 0x60F000
	0x03AEBB40 LDR X8, [X8 + 0x688]
	0x03AEBB44 MOV X21, X0
	0x03AEBB48 LDR X1, [X8]
	0x03AEBB4C BL 0x2DA9EF4
	0x03AEBB50 LDR X0, [X25]
	0x03AEBB54 LDR W8, [X0 + 0xE0]
	0x03AEBB58 CBNZ W8, 0x3AEBB64
	0x03AEBB5C BL 0x1C16DFC
	0x03AEBB60 LDR X0, [X25]
	0x03AEBB64 LDR X8, [X0 + 0xB8]
	0x03AEBB68 STR X21, [X8 + 0x8]
	0x03AEBB6C LDR W8, [X0 + 0xE0]
	0x03AEBB70 CBNZ W8, 0x3AEBB7C
	0x03AEBB74 BL 0x1C16DFC
	0x03AEBB78 LDR X0, [X25]
	0x03AEBB7C LDR X8, [X0 + 0xB8]
	0x03AEBB80 LDR W1, [X20 + 0x18]
	0x03AEBB84 LDR X21, [X8 + 0x8]
	0x03AEBB88 CBNZ W1, 0x3AEBBA0
	0x03AEBB8C MOV X0, X20
	0x03AEBB90 MOV X1, X31
	0x03AEBB94 BL 0x3C385F8
	0x03AEBB98 MOV W1, W0
	0x03AEBB9C STR W0, [X20 + 0x18]
	0x03AEBBA0 CBZ X21, 0x3AEBCB8
	0x03AEBBA4 ADRP X26, 0x60A000
	0x03AEBBA8 LDR X26, [X26 + 0x9D8]
	0x03AEBBAC MOV X0, X21
	0x03AEBBB0 LDR X2, [X26]
	0x03AEBBB4 BL 0x2DAB03C
	0x03AEBBB8 LDR X20, [X20 + 0xD8]
	0x03AEBBBC CBZ X20, 0x3AEBC98
	0x03AEBBC0 LDR W27, [X20 + 0x18]
	0x03AEBBC4 CMP W27, 0x1
	0x03AEBBC8 B.LT 0x3AEBC98
	0x03AEBBCC ADRP X28, 0x66D000
	0x03AEBBD0 LDR X28, [X28 + 0xFF0]
	0x03AEBBD4 MOV W21, W31
	0x03AEBBD8 LDR X2, [X28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x8F8000
	010 Move W8, [X20+1473]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {42}
	016 Move X0, 0x66E000
	017 Move X0, [X0+4000]
	018 Call 0x1C17CF4
	019 Move X0, 0x66E000
	020 Move X0, [X0+4008]
	021 Call 0x1C17CF4
	022 Move X0, 0x66E000
	023 Move X0, [X0+4016]
	024 Call 0x1C17CF4
	025 Move X0, 0x66E000
	026 Move X0, [X0+4024]
	027 Call 0x1C17CF4
	028 Move X0, 0x66E000
	029 Move X0, [X0+3368]
	030 Call 0x1C17CF4
	031 Move X0, 0x66E000
	032 Move X0, [X0+4032]
	033 Call 0x1C17CF4
	034 Move X0, 0x66E000
	035 Move X0, [X0+4040]
	036 Call 0x1C17CF4
	037 Move X0, 0x66E000
	038 Move X0, [X0+4048]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X20+1473], W8
	042 Move X20, [X19+16]
	043 Compare X20, 0
	044 JumpIfEqual {140}
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X23, 0x66E000
	048 Move X23, [X23+4048]
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Move X24, 0x66E000
	057 Move X21, [X8+8]
	058 Move X24, [X24+4000]
	059 Compare X21, 0
	060 JumpIfNotEqual {82}
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X23]
	066 Move X9, 0x66E000
	067 Move X8, [X0+184]
	068 Move X9, [X9+4024]
	069 Move X22, [X8]
	070 Move X0, [X9]
	071 Call 0x1C17F10
	072 Move X8, 0x66E000
	073 Move X8, [X8+4032]
	074 Move X1, X22
	075 Move X3, X31
	076 Move X21, X0
	077 Move X2, [X8]
	078 Call Func`2<Object, UInt32>..ctor, X0, X1, X2
	079 Move X8, [X23]
	080 Move X8, [X8+184]
	081 Move [X8+8], X21
	082 Move X2, [X24]
	083 Move X0, X20
	084 Move X1, X21
	085 Call Enumerable.OrderBy, X0, X1
	086 Move X8, [X23]
	087 Move X20, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, [X23]
	094 Move X9, [X8+184]
	095 Move X25, 0x66E000
	096 Move X24, 0x66E000
	097 Move X21, [X9+16]
	098 Move X25, [X25+4008]
	099 Move X24, [X24+4016]
	100 Compare X21, 0
	101 JumpIfNotEqual {124}
	102 Move W9, [X8+224]
	103 Compare W9, 0
	104 JumpIfNotEqual {108}
	105 Move X0, X8
	106 Call 0x1C17DFC
	107 Move X8, [X23]
	108 Move X9, 0x66E000
	109 Move X8, [X8+184]
	110 Move X9, [X9+4024]
	111 Move X22, [X8]
	112 Move X0, [X9]
	113 Call 0x1C17F10
	114 Move X8, 0x66E000
	115 Move X8, [X8+4040]
	116 Move X1, X22
	117 Move X3, X31
	118 Move X21, X0
	119 Move X2, [X8]
	120 Call Func`2<Object, UInt32>..ctor, X0, X1, X2
	121 Move X8, [X23]
	122 Move X8, [X8+184]
	123 Move [X8+16], X21
	124 Move X2, [X25]
	125 Move X0, X20
	126 Move X1, X21
	127 Call Enumerable.ThenBy, X0, X1
	128 Move X1, [X24]
	129 Call Enumerable.ToList, X0
	130 Move [X19+16], X0
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X24, [X31+16]
	136 Move X23, [X31+24]
	137 Move X30, [X31+64]
	138 Move X25, [X31+72]
	139 Return 
	140 Call 0x1C17F20

