Type: TMPro.TMP_UpdateRegistry

Method: TMPro.TMP_UpdateRegistry get_instance()

Disassembly:
	0x03B21E84 ADRP X0, 0x5D8000
	0x03B21E88 LDR X0, [X0 + 0xDD8]
	0x03B21E8C BL 0x1C16CF4
	0x03B21E90 ADRP X0, 0x5D8000
	0x03B21E94 LDR X0, [X0 + 0xDE0]
	0x03B21E98 BL 0x1C16CF4
	0x03B21E9C ADRP X0, 0x5D8000
	0x03B21EA0 LDR X0, [X0 + 0xDE8]
	0x03B21EA4 BL 0x1C16CF4
	0x03B21EA8 ADRP X0, 0x5D8000
	0x03B21EAC LDR X0, [X0 + 0xD10]
	0x03B21EB0 BL 0x1C16CF4
	0x03B21EB4 ADRP X0, 0x5D8000
	0x03B21EB8 LDR X0, [X0 + 0xCF8]
	0x03B21EBC BL 0x1C16CF4
	0x03B21EC0 ADRP X0, 0x5D8000
	0x03B21EC4 LDR X0, [X0 + 0xD18]
	0x03B21EC8 BL 0x1C16CF4
	0x03B21ECC ADRP X0, 0x638000
	0x03B21ED0 LDR X0, [X0 + 0xBA0]
	0x03B21ED4 BL 0x1C16CF4
	0x03B21ED8 MOVZ W8, 0x1
	0x03B21EDC STRB W8, [X21 + 0x73F]
	0x03B21EE0 STP X31, X31, [X31 + 0x20]
	0x03B21EE4 STR X31, [X31 + 0x30]
	0x03B21EE8 STP X31, X31, [X31 + 0x48]
	0x03B21EEC STR X31, [X31 + 0x40]
	0x03B21EF0 STR W31, [X31 + 0x58]
	0x03B21EF4 CBZ X20, 0x3B2211C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x8C2000
	005 Move X20, 0x639000
	006 Move W8, [X19+1840]
	007 Move X20, [X20+2808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x639000
	013 Move X0, [X0+2808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1840], W8
	017 Move X0, [X20]
	018 Move X8, [X0+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfNotEqual {31}
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Call TMP_UpdateRegistry..ctor, X0
	025 Move X8, [X20]
	026 Move X8, [X8+184]
	027 Move [X8], X19
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move X8, [X8]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X8
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B21EF8 ADRP X8, 0x5D8000
	0x03B21EFC LDR X8, [X8 + 0xDE8]
	0x03B21F00 ADRP X21, 0x5D8000
	0x03B21F04 ADRP X23, 0x638000
	0x03B21F08 LDR X21, [X21 + 0xDD8]
	0x03B21F0C LDR X23, [X23 + 0xB98]
	0x03B21F10 LDR X1, [X8]
	0x03B21F14 ADRP X24, 0x5D8000
	0x03B21F18 ADRP X25, 0x638000
	0x03B21F1C ADRP X22, 0x5D8000
	0x03B21F20 LDR X24, [X24 + 0xCF8]
	0x03B21F24 LDR X25, [X25 + 0xBA0]
	0x03B21F28 LDR X22, [X22 + 0xDD0]
	0x03B21F2C ADD X8, X31, 0x0
	0x03B21F30 MOV X0, X20
	0x03B21F34 BL 0x301CB58
	0x03B21F38 LDR V0, [X31]
	0x03B21F3C LDR X8, [X31 + 0x10]
	0x03B21F40 MOVI V8.2S, 0x3F, 0x18
	0x03B21F44 FMOV S9, 0.5
	0x03B21F48 STR V0, [X31 + 0x2]
	0x03B21F4C STR X8, [X31 + 0x30]
	0x03B21F50 LDR X1, [X21]
	0x03B21F54 ADD X0, X31, 0x20
	0x03B21F58 BL 0x2BC4350
	0x03B21F5C TBZ X0, 0x0, 0x3B220D8
	0x03B21F60 LDR X0, [X31 + 0x30]
	0x03B21F64 CBZ X0, 0x3B22118
	0x03B21F68 MOV X1, X31
	0x03B21F6C BL 0x3C356F8
	0x03B21F70 MOV X20, X0
	0x03B21F74 LDR X0, [X23]
	0x03B21F78 LDR W8, [X0 + 0xE0]
	0x03B21F7C CBNZ W8, 0x3B21F84
	0x03B21F80 BL 0x1C16DFC
	0x03B21F84 ADD X8, X31, 0x0
	0x03B21F88 MOV X0, X20
	0x03B21F8C BL 0x3B2219C
	0x03B21F90 LDR V11, [X31]
	0x03B21F94 LDR V10, [X31 + 0x8]
	0x03B21F98 LDUR V12, [X31 + 0xC]
	0x03B21F9C LDRB W8, [X31 + 0x40]
	0x03B21FA0 LDR V13, [X31 + 0x14]
	0x03B21FA4 CBZ W8, 0x3B22098
	0x03B21FA8 LDR X1, [X25]
	0x03B21FAC ADD X8, X31, 0x0
	0x03B21FB0 ADD X0, X31, 0x40
	0x03B21FB4 BL 0x242DA08
	0x03B21FB8 LDR V0, [X31]
	0x03B21FBC LDR V1, [X31 + 0x8]
	0x03B21FC0 LDUR V2, [X31 + 0xC]
	0x03B21FC4 LDR V3, [X31 + 0x14]
	0x03B21FC8 FSUB V4.2S, V11.2S, V12.2S
	0x03B21FCC FSUB S5, S10, S13
	0x03B21FD0 FSUB V16.2S, V0.2S, V2.2S
	0x03B21FD4 FSUB S17, S1, S3
	0x03B21FD8 FADD V6.2S, V11.2S, V12.2S
	0x03B21FDC FADD S7, S10, S13
	0x03B21FE0 FADD V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03B21FE8 FCMP S5, S17
	0x03B21FEC FADD S1, S1, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B21FF8 FCSEL S4, S5, S17, MI
	0x03B21FFC FCMP S7, S17
	0x00000000 INVALID
	0x03B22004 FCSEL S5, S7, S17, GT
	0x03B22008 FSUB V3.2S, V3.2S, V2.2S
	0x03B2200C FSUB S5, S5, S4
	0x00000000 INVALID
	0x03B22014 FMUL S5, S5, S9
	0x03B22018 FADD V2.2S, V2.2S, V3.2S
	0x03B2201C FADD S4, S4, S5
	0x03B22020 FSUB V6.2S, V2.2S, V3.2S
	0x03B22024 FADD V2.2S, V3.2S, V2.2S
	0x03B22028 FSUB S3, S4, S5
	0x00000000 INVALID
	0x03B22030 FADD S4, S5, S4
	0x00000000 INVALID
	0x03B22038 FCMP S3, S1
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x8C2000
	011 Move X26, 0x639000
	012 Move X25, 0x639000
	013 Move X24, 0x5D4000
	014 Move X23, 0x5DA000
	015 Move X22, 0x639000
	016 Move X21, 0x639000
	017 Move X26, [X26+2816]
	018 Move W8, [X20+1841]
	019 Move X25, [X25+2824]
	020 Move X24, [X24+3592]
	021 Move X23, [X23+1672]
	022 Move X22, [X22+1072]
	023 Move X21, [X21+2832]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x5DA000
	030 Move X0, [X0+1672]
	031 Call 0x1C17CF4
	032 Move X0, 0x5D4000
	033 Move X0, [X0+3592]
	034 Call 0x1C17CF4
	035 Move X0, 0x639000
	036 Move X0, [X0+2824]
	037 Call 0x1C17CF4
	038 Move X0, 0x639000
	039 Move X0, [X0+2816]
	040 Call 0x1C17CF4
	041 Move X0, 0x639000
	042 Move X0, [X0+2832]
	043 Call 0x1C17CF4
	044 Move X0, 0x639000
	045 Move X0, [X0+1072]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1841], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X1, [X25]
	052 Move X20, X0
	053 Call List`1<Object>..ctor, X0
	054 Move [X19+16], X20
	055 Move X0, [X24]
	056 Call 0x1C17F10
	057 Move X1, [X23]
	058 Move X20, X0
	059 Call HashSet`1<Int32>..ctor, X0
	060 Move [X19+24], X20
	061 Move X0, [X26]
	062 Call 0x1C17F10
	063 Move X1, [X25]
	064 Move X20, X0
	065 Call List`1<Object>..ctor, X0
	066 Move [X19+32], X20
	067 Move X0, [X24]
	068 Call 0x1C17F10
	069 Move X1, [X23]
	070 Move X20, X0
	071 Call HashSet`1<Int32>..ctor, X0
	072 Move X0, X19
	073 Move X1, X31
	074 Move [X19+40], X20
	075 Call Object..ctor, X0
	076 Move X0, [X22]
	077 Call 0x1C17F10
	078 Move X2, [X21]
	079 Move X1, X19
	080 Move X3, X31
	081 Move X20, X0
	082 Call WillRenderCanvases..ctor, X0, X1, X2
	083 Move X0, X20
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Move X22, [X31+48]
	087 Move X21, [X31+56]
	088 Move X24, [X31+32]
	089 Move X23, [X31+40]
	090 Move X26, [X31+16]
	091 Move X25, [X31+24]
	092 Move X1, X31
	093 Move X30, [X31+80]
	094 Call Canvas.add_willRenderCanvases, X0
	095 Return 

Method: System.Void RegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03B22044 FCSEL S2, S3, S1, MI
	0x03B22048 FCMP S4, S1
	0x03B2204C FSUB V0.2S, V0.2S, V6.2S
	0x03B22050 FCSEL S1, S4, S1, GT
	0x03B22054 LDR X2, [X24]
	0x00000000 INVALID
	0x03B2205C FSUB S1, S1, S2
	0x03B22060 FADD V3.2S, V6.2S, V0.2S

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TMP_UpdateRegistry.get_instance
	005 Compare X0, 0
	006 JumpIfEqual {10}
	007 Move X1, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call 0x1C17F20

Method: System.Boolean InternalRegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03B22064 STUR D0, [X31 + 0x74]
	0x03B22068 FMUL S0, S1, S9
	0x03B2206C FADD S1, S2, S0
	0x03B22070 STP X31, X31, [X31]
	0x03B22074 STR W31, [X31 + 0x18]
	0x03B22078 STR X31, [X31 + 0x10]
	0x03B2207C STR D3, [X31 + 0x68]
	0x03B22080 STR S1, [X31 + 0x70]
	0x03B22084 STR S0, [X31 + 0x7C]
	0x03B22088 ADD X0, X31, 0x0
	0x03B2208C ADD X1, X31, 0x68
	0x03B22090 BL 0x242D9E4
	0x03B22094 B 0x3B220C4
	0x03B22098 LDR X2, [X24]
	0x03B2209C STP X31, X31, [X31]
	0x03B220A0 STR W31, [X31 + 0x18]
	0x03B220A4 STR X31, [X31 + 0x10]
	0x03B220A8 STR D11, [X31 + 0x68]
	0x03B220AC STR S10, [X31 + 0x70]
	0x03B220B0 STUR D12, [X31 + 0x74]
	0x03B220B4 STR S13, [X31 + 0x7C]
	0x03B220B8 ADD X0, X31, 0x0
	0x03B220BC ADD X1, X31, 0x68
	0x03B220C0 BL 0x242D9E4
	0x03B220C4 LDR V0, [X31]
	0x03B220C8 LDUR V1, [X31 + 0xC]
	0x03B220CC STR V0, [X31 + 0x4]
	0x03B220D0 STUR V1, [X31 + 0x4C]
	0x03B220D4 B 0x3B21F50
	0x03B220D8 LDR X1, [X22]
	0x03B220DC ADD X0, X31, 0x20
	0x03B220E0 BL 0x2BC434C
	0x03B220E4 LDUR X8, [X31 + 0x54]
	0x03B220E8 LDUR V0, [X31 + 0x44]
	0x03B220EC LDP X22, X21, [X31 + 0xD0]
	0x03B220F0 LDP X24, X23, [X31 + 0xC0]
	0x03B220F4 STR X8, [X19 + 0x10]
	0x03B220F8 STR V0, [X19]
	0x03B220FC LDP X20, X19, [X31 + 0xE0]
	0x03B22100 LDP X30, X25, [X31 + 0xB0]
	0x03B22104 LDP D9, D8, [X31 + 0xA0]
	0x03B22108 LDP D11, D10, [X31 + 0x90]
	0x03B2210C LDP D13, D12, [X31 + 0x80]
	0x03B22110 ADD X31, X31, 0xF0
	0x03B22114 RET
	0x03B22118 BL 0x1C16F20
	0x03B2211C BL 0x1C16F20
	0x03B22120 B 0x3B22138
	0x03B22124 B 0x3B22138
	0x03B22128 B 0x3B22138
	0x03B2212C B 0x3B22138
	0x03B22130 B 0x3B22138
	0x03B22134 B 0x3B22138
	0x03B22138 MOV X20, X0
	0x03B2213C CMP W1, 0x1
	0x03B22140 B.NE 0x3B2216C
	0x03B22144 MOV X0, X20
	0x03B22148 BL 0x3EB1AD0
	0x03B2214C LDR X21, [X0]
	0x03B22150 BL 0x3EB1AE0
	0x03B22154 LDR X1, [X22]
	0x03B22158 ADD X0, X31, 0x20
	0x03B2215C BL 0x2BC434C
	0x03B22160 CBZ X21, 0x3B220E4
	0x03B22164 MOV X0, X21
	0x03B22168 BL 0x1C16F18
	0x03B2216C MOV X21, X31
	0x03B22170 B 0x3B22178
	0x03B22174 MOV X20, X0
	0x03B22178 LDR X1, [X22]
	0x03B2217C ADD X0, X31, 0x20
	0x03B22180 BL 0x2BC434C
	0x03B22184 CBNZ X21, 0x3B22190
	0x03B22188 MOV X0, X20
	0x03B2218C BL 0x1D2C690
	0x03B22190 MOV X0, X21
	0x03B22194 BL 0x1C16F18
	0x03B22198 BL 0x1990590
	0x03B2219C SUB X31, X31, 0xA0
	0x03B221A0 STP D13, D12, [X31 + 0x40]
	0x03B221A4 STP D11, D10, [X31 + 0x50]
	0x03B221A8 STP D9, D8, [X31 + 0x60]
	0x03B221AC STR X30, [X31 + 0x70]
	0x03B221B0 STP X22, X21, [X31 + 0x80]
	0x03B221B4 STP X20, X19, [X31 + 0x90]
	0x03B221B8 ADRP X22, 0x8C0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C1000
	006 Move W8, [X21+1842]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x5D4000
	014 Move X0, [X0+2520]
	015 Call 0x1C17CF4
	016 Move X0, 0x5D3000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x638000
	020 Move X0, [X0+2840]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D2000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1842], W8
	027 Compare X19, 0
	028 JumpIfEqual {96}
	029 Move X8, 0x5D2000
	030 Move X8, [X8+1432]
	031 Move X9, [X19]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Move X1, X31
	042 Call Object.GetInstanceID, X0
	043 Move X8, [X20+24]
	044 Compare X8, 0
	045 JumpIfEqual {96}
	046 Move X9, 0x5D3000
	047 Move X9, [X9+3576]
	048 Move W21, W0
	049 Move X0, X8
	050 Move W1, W21
	051 Move X2, [X9]
	052 Call HashSet`1<Int32>.Contains, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {58}
	057 Move W0, W31
	058 Move X0, [X20+24]
	059 Compare X0, 0
	060 JumpIfEqual {96}
	061 Move X8, 0x5D4000
	062 Move X8, [X8+2520]
	063 Move W1, W21
	064 Move X2, [X8]
	065 Call HashSet`1<Int32>.Add, X0, X1
	066 Move X0, [X20+16]
	067 Compare X0, 0
	068 JumpIfEqual {96}
	069 Move X9, 0x638000
	070 Move X9, [X9+2840]
	071 Move W10, [X0+28]
	072 Move X8, [X0+16]
	073 Move X9, [X9]
	074 Add W10, W10, 1
	075 Move [X0+28], W10
	076 Compare X8, 0
	077 JumpIfEqual {96}
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Move W11, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W9, W10, 1
	082 Add X8, X8, X10
	083 Move [X0+24], W9
	084 Move [X8+32], X19
	085 Move X8, [X9+32]
	086 Move X1, X19
	087 Move X8, [X8+192]
	088 Move X2, [X8+112]
	089 Call List`1<Object>.AddWithResize, X0, X1
	090 Move W0, 1
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Void RegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03B221BC ADRP X21, 0x637000
	0x03B221C0 MOV X19, X8
	0x03B221C4 LDRB W8, [X22 + 0x741]
	0x03B221C8 LDR X21, [X21 + 0xB98]
	0x03B221CC MOV X20, X0
	0x03B221D0 TBNZ X8, 0x0, 0x3B22248
	0x03B221D4 ADRP X0, 0x637000
	0x03B221D8 LDR X0, [X0 + 0xB98]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TMP_UpdateRegistry.get_instance
	005 Compare X0, 0
	006 JumpIfEqual {10}
	007 Move X1, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call 0x1C17F20

Method: System.Boolean InternalRegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03B221DC BL 0x1C16CF4
	0x03B221E0 ADRP X0, 0x637000
	0x03B221E4 LDR X0, [X0 + 0xBA8]
	0x03B221E8 BL 0x1C16CF4
	0x03B221EC ADRP X0, 0x637000
	0x03B221F0 LDR X0, [X0 + 0xBB0]
	0x03B221F4 BL 0x1C16CF4
	0x03B221F8 ADRP X0, 0x5D8000
	0x03B221FC LDR X0, [X0 + 0x940]
	0x03B22200 BL 0x1C16CF4
	0x03B22204 ADRP X0, 0x5D8000
	0x03B22208 LDR X0, [X0 + 0x948]
	0x03B2220C BL 0x1C16CF4
	0x03B22210 ADRP X0, 0x5D8000
	0x03B22214 LDR X0, [X0 + 0x950]
	0x03B22218 BL 0x1C16CF4
	0x03B2221C ADRP X0, 0x5D8000
	0x03B22220 LDR X0, [X0 + 0x968]
	0x03B22224 BL 0x1C16CF4
	0x03B22228 ADRP X0, 0x5D8000
	0x03B2222C LDR X0, [X0 + 0x8B8]
	0x03B22230 BL 0x1C16CF4
	0x03B22234 ADRP X0, 0x5D8000
	0x03B22238 LDR X0, [X0 + 0x8C0]
	0x03B2223C BL 0x1C16CF4
	0x03B22240 MOVZ W8, 0x1
	0x03B22244 STRB W8, [X22 + 0x741]
	0x03B22248 LDR X0, [X21]
	0x03B2224C STP X31, X31, [X31 + 0x28]
	0x03B22250 STR X31, [X31 + 0x38]
	0x03B22254 LDR W8, [X0 + 0xE0]
	0x03B22258 CBNZ W8, 0x3B22260
	0x03B2225C BL 0x1C16DFC
	0x03B22260 CBZ X20, 0x3B224D4
	0x03B22264 LDR X8, [X21]
	0x03B22268 ADRP X9, 0x637000
	0x03B2226C MOV X0, X20
	0x03B22270 LDR X8, [X8 + 0xB8]
	0x03B22274 LDR X9, [X9 + 0xBA8]
	0x03B22278 LDR X1, [X8]
	0x03B2227C LDR X2, [X9]
	0x03B22280 BL 0x21A4608
	0x03B22284 LDR X8, [X21]
	0x03B22288 LDR X8, [X8 + 0xB8]
	0x03B2228C LDR X0, [X8]
	0x03B22290 ADD X8, X31, 0x10
	0x03B22294 BL 0x3B227A0
	0x03B22298 LDP S8, S11, [X31 + 0x18]
	0x03B2229C LDR V3, [X31 + 0x20]
	0x03B222A0 ADRP X22, 0x8B6000
	0x03B222A4 LDRB W8, [X22 + 0x783]
	0x03B222A8 LDP S9, S10, [X31 + 0x10]
	0x03B222AC FADD S13, S11, S11
	0x03B222B0 FADD V12.2S, V3.2S, V3.2S
	0x03B222B4 STR V3, [X31]
	0x03B222B8 CBNZ W8, 0x3B222D4
	0x03B222BC ADRP X0, 0x5D1000
	0x03B222C0 LDR X0, [X0 + 0x5A0]
	0x03B222C4 BL 0x1C16CF4
	0x03B222C8 LDR V3, [X31]
	0x03B222CC MOVZ W8, 0x1
	0x03B222D0 STRB W8, [X22 + 0x783]
	0x03B222D4 ADRP X8, 0x5D1000
	0x03B222D8 LDR X8, [X8 + 0x5A0]
	0x03B222DC LDR X8, [X8]
	0x03B222E0 LDR X8, [X8 + 0xB8]
	0x03B222E4 LDR V0, [X8]
	0x03B222E8 LDUR V1, [X8 + 0x4]
	0x03B222EC ADRP X8, 0xFFFFFFFFFCFC7000
	0x03B222F0 LDR V2, [X8 + 0xF20]
	0x03B222F4 FSUB S0, S13, S0
	0x03B222F8 FSUB V1.2S, V12.2S, V1.2S
	0x03B222FC FMUL S0, S0, S0
	0x00000000 INVALID
	0x03B22304 FADD S0, S0, S1
	0x03B22308 MOV S1, V1.S[1]
	0x03B2230C FADD S0, S1, S0
	0x03B22310 FCMP S0, S2
	0x03B22314 MOV S12, V3.S[1]
	0x03B22318 B.PL 0x3B224A0
	0x03B2231C LDR X0, [X21]
	0x03B22320 LDR W8, [X0 + 0xE0]
	0x03B22324 CBNZ W8, 0x3B22330
	0x03B22328 BL 0x1C16DFC
	0x03B2232C LDR X0, [X21]
	0x03B22330 ADRP X9, 0x637000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C1000
	006 Move W8, [X21+1843]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x5D4000
	014 Move X0, [X0+2520]
	015 Call 0x1C17CF4
	016 Move X0, 0x5D3000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x638000
	020 Move X0, [X0+2840]
	021 Call 0x1C17CF4
	022 Move X0, 0x5D2000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1843], W8
	027 Compare X19, 0
	028 JumpIfEqual {96}
	029 Move X8, 0x5D2000
	030 Move X8, [X8+1432]
	031 Move X9, [X19]
	032 Move X8, [X8]
	033 Move W11, [X9+304]
	034 Move W10, [X8+304]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X9+200]
	037 Add X9, X9, X10
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X19
	041 Move X1, X31
	042 Call Object.GetInstanceID, X0
	043 Move X8, [X20+40]
	044 Compare X8, 0
	045 JumpIfEqual {96}
	046 Move X9, 0x5D3000
	047 Move X9, [X9+3576]
	048 Move W21, W0
	049 Move X0, X8
	050 Move W1, W21
	051 Move X2, [X9]
	052 Call HashSet`1<Int32>.Contains, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {58}
	057 Move W0, W31
	058 Move X0, [X20+40]
	059 Compare X0, 0
	060 JumpIfEqual {96}
	061 Move X8, 0x5D4000
	062 Move X8, [X8+2520]
	063 Move W1, W21
	064 Move X2, [X8]
	065 Call HashSet`1<Int32>.Add, X0, X1
	066 Move X0, [X20+32]
	067 Compare X0, 0
	068 JumpIfEqual {96}
	069 Move X9, 0x638000
	070 Move X9, [X9+2840]
	071 Move W10, [X0+28]
	072 Move X8, [X0+16]
	073 Move X9, [X9]
	074 Add W10, W10, 1
	075 Move [X0+28], W10
	076 Compare X8, 0
	077 JumpIfEqual {96}
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Move W11, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W9, W10, 1
	082 Add X8, X8, X10
	083 Move [X0+24], W9
	084 Move [X8+32], X19
	085 Move X8, [X9+32]
	086 Move X1, X19
	087 Move X8, [X8+192]
	088 Move X2, [X8+112]
	089 Call List`1<Object>.AddWithResize, X0, X1
	090 Move W0, 1
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X30, [X31+32]
	094 Move X21, [X31+40]
	095 Return X0
	096 Call 0x1C17F20

Method: System.Void PerformUpdateForCanvasRendererObjects()

Disassembly:
	0x03B22334 LDR X8, [X0 + 0xB8]
	0x03B22338 LDR X9, [X9 + 0xBB0]
	0x03B2233C MOV X0, X20
	0x03B22340 LDR X1, [X8 + 0x8]
	0x03B22344 LDR X2, [X9]
	0x03B22348 BL 0x21A4608
	0x03B2234C LDR X0, [X21]
	0x03B22350 LDR X8, [X0 + 0xB8]
	0x03B22354 LDR X8, [X8 + 0x8]
	0x03B22358 CBZ X8, 0x3B224D4
	0x03B2235C LDR W9, [X8 + 0x18]
	0x03B22360 CMP W9, 0x1
	0x03B22364 B.LT 0x3B223B8
	0x03B22368 LDR W9, [X0 + 0xE0]
	0x03B2236C CBNZ W9, 0x3B22384
	0x03B22370 BL 0x1C16DFC
	0x03B22374 LDR X8, [X21]
	0x03B22378 LDR X8, [X8 + 0xB8]
	0x03B2237C LDR X8, [X8 + 0x8]
	0x03B22380 CBZ X8, 0x3B224D4
	0x03B22384 ADRP X9, 0x5D8000
	0x03B22388 LDR X9, [X9 + 0x8C0]
	0x03B2238C MOV X0, X8
	0x03B22390 MOV W1, W31
	0x03B22394 LDR X2, [X9]
	0x03B22398 BL 0x301BCCC
	0x03B2239C CBZ X0, 0x3B224D4
	0x03B223A0 MOV X1, X31
	0x03B223A4 BL 0x3C3F58C
	0x03B223A8 LDR X0, [X21]
	0x03B223AC MOV V9.16B, V0.16B
	0x03B223B0 MOV V10.16B, V1.16B
	0x03B223B4 MOV V8.16B, V2.16B
	0x03B223B8 LDR W8, [X0 + 0xE0]
	0x03B223BC CBNZ W8, 0x3B223C8
	0x03B223C0 BL 0x1C16DFC
	0x03B223C4 LDR X0, [X21]
	0x03B223C8 LDR X8, [X0 + 0xB8]
	0x03B223CC LDR X0, [X8 + 0x8]
	0x03B223D0 CBZ X0, 0x3B224D4
	0x03B223D4 ADRP X8, 0x5D8000
	0x03B223D8 LDR X8, [X8 + 0x968]
	0x03B223DC LDR X1, [X8]
	0x03B223E0 ADD X8, X31, 0x28
	0x03B223E4 BL 0x301CB58
	0x03B223E8 ADRP X20, 0x5D8000
	0x03B223EC LDR X20, [X20 + 0x948]
	0x03B223F0 FMOV S13, 0.5
	0x03B223F4 LDR X1, [X20]
	0x03B223F8 ADD X0, X31, 0x28
	0x03B223FC BL 0x2BC4350
	0x03B22400 TBZ X0, 0x0, 0x3B2248C
	0x03B22404 LDR X0, [X31 + 0x38]
	0x03B22408 CBZ X0, 0x3B224D0
	0x03B2240C MOV X1, X31
	0x03B22410 BL 0x3C3F58C
	0x03B22414 LDR V7, [X31]
	0x03B22418 FSUB S3, S9, S11
	0x03B2241C FCMP S3, S0
	0x03B22420 FSUB S5, S8, S12
	0x03B22424 FSUB S4, S10, S7
	0x03B22428 FCSEL S3, S3, S0, MI
	0x03B2242C FCMP S4, S1
	0x03B22430 FADD S6, S11, S9
	0x03B22434 FCSEL S4, S4, S1, MI
	0x03B22438 FCMP S5, S2
	0x03B2243C FADD S7, S7, S10
	0x03B22440 FCSEL S5, S5, S2, MI
	0x03B22444 FCMP S6, S0
	0x03B22448 FADD S16, S8, S12
	0x03B2244C FCSEL S0, S6, S0, GT
	0x03B22450 FCMP S7, S1
	0x03B22454 FCSEL S1, S7, S1, GT
	0x03B22458 FCMP S16, S2
	0x03B2245C FSUB S0, S0, S3
	0x03B22460 FCSEL S2, S16, S2, GT
	0x03B22464 FSUB S1, S1, S4
	0x03B22468 FMUL S11, S0, S13
	0x03B2246C FSUB S0, S2, S5
	0x03B22470 FMUL S1, S1, S13
	0x03B22474 FMUL S12, S0, S13
	0x03B22478 FADD S9, S3, S11
	0x03B2247C FADD S10, S4, S1
	0x03B22480 FADD S8, S5, S12
	0x03B22484 STR V1, [X31]
	0x03B22488 B 0x3B223F4
	0x03B2248C ADRP X8, 0x5D8000
	0x03B22490 LDR X8, [X8 + 0x940]
	0x03B22494 ADD X0, X31, 0x28
	0x03B22498 LDR X1, [X8]
	0x03B2249C BL 0x2BC434C
	0x03B224A0 LDR V0, [X31]
	0x03B224A4 STP S9, S10, [X19]
	0x03B224A8 STP S8, S11, [X19 + 0x8]
	0x03B224AC LDP X22, X21, [X31 + 0x80]
	0x03B224B0 STP S0, S12, [X19 + 0x10]
	0x03B224B4 LDP X20, X19, [X31 + 0x90]
	0x03B224B8 LDR X30, [X31 + 0x70]
	0x03B224BC LDP D9, D8, [X31 + 0x60]
	0x03B224C0 LDP D11, D10, [X31 + 0x50]
	0x03B224C4 LDP D13, D12, [X31 + 0x40]
	0x03B224C8 ADD X31, X31, 0xA0
	0x03B224CC RET
	0x03B224D0 BL 0x1C16F20
	0x03B224D4 BL 0x1C16F20
	0x03B224D8 B 0x3B224E0
	0x03B224DC B 0x3B224E0
	0x03B224E0 MOV X21, X0
	0x03B224E4 CMP W1, 0x1
	0x03B224E8 B.NE 0x3B2251C
	0x03B224EC MOV X0, X21
	0x03B224F0 BL 0x3EB1AD0
	0x03B224F4 LDR X20, [X0]
	0x03B224F8 BL 0x3EB1AE0
	0x03B224FC ADRP X8, 0x5D8000
	0x03B22500 LDR X8, [X8 + 0x940]
	0x03B22504 ADD X0, X31, 0x28
	0x03B22508 LDR X1, [X8]
	0x03B2250C BL 0x2BC434C
	0x03B22510 CBZ X20, 0x3B224A0
	0x03B22514 MOV X0, X20
	0x03B22518 BL 0x1C16F18
	0x03B2251C MOV X20, X31
	0x03B22520 B 0x3B22528
	0x03B22524 MOV X21, X0
	0x03B22528 ADRP X8, 0x5D8000
	0x03B2252C LDR X8, [X8 + 0x940]
	0x03B22530 LDR X1, [X8]
	0x03B22534 ADD X0, X31, 0x28
	0x03B22538 BL 0x2BC434C
	0x03B2253C CBNZ X20, 0x3B22548
	0x03B22540 MOV X0, X21
	0x03B22544 BL 0x1D2C690
	0x03B22548 MOV X0, X20
	0x03B2254C BL 0x1C16F18
	0x03B22550 BL 0x1990590
	0x03B22554 SUB X31, X31, 0xC0
	0x03B22558 STP D13, D12, [X31 + 0x40]
	0x03B2255C STP D11, D10, [X31 + 0x50]
	0x03B22560 STP D9, D8, [X31 + 0x60]
	0x03B22564 STR X30, [X31 + 0x70]
	0x03B22568 STP X26, X25, [X31 + 0x80]
	0x03B2256C STP X24, X23, [X31 + 0x90]
	0x03B22570 STP X22, X21, [X31 + 0xA0]
	0x03B22574 STP X20, X19, [X31 + 0xB0]
	0x03B22578 ADRP X21, 0x8C0000
	0x03B2257C LDRB W9, [X21 + 0x740]
	0x03B22580 MOV X19, X0
	0x03B22584 MOV X20, X8
	0x03B22588 TBNZ X9, 0x0, 0x3B225D0
	0x03B2258C ADRP X0, 0x637000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8C1000
	009 Move W8, [X20+1844]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x5D9000
	016 Move X0, [X0+1656]
	017 Call 0x1C17CF4
	018 Move X0, 0x638000
	019 Move X0, [X0+2848]
	020 Call 0x1C17CF4
	021 Move X0, 0x638000
	022 Move X0, [X0+2856]
	023 Call 0x1C17CF4
	024 Move X0, 0x638000
	025 Move X0, [X0+2864]
	026 Call 0x1C17CF4
	027 Move X0, 0x638000
	028 Move X0, [X0+2872]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1844], W8
	032 Move X8, [X19+16]
	033 Compare X8, 0
	034 JumpIfEqual {170}
	035 Move X23, 0x638000
	036 Move X24, 0x638000
	037 Move X22, 0x5D9000
	038 Move X23, [X23+2872]
	039 Move X24, [X24+2848]
	040 Move X22, [X22+1656]
	041 Move W20, W31
	042 Move W2, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Call TMP_UpdateRegistry.get_instance
	045 Compare X0, 0
	046 JumpIfEqual {170}
	047 Move X0, [X0+16]
	048 Compare X0, 0
	049 JumpIfEqual {170}
	050 Move X2, [X23]
	051 Move W1, W20
	052 Call List`1<Object>.get_Item, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {170}
	055 Move X8, [X0]
	056 Move X1, [X24]
	057 Move X21, X0
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X21
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X2, [X0+8]
	075 Move X0, X21
	076 Move W1, W31
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19+16]
	079 Add W20, W20, 1
	080 Compare X8, 0
	081 JumpIfNotEqual {42}
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W9, [X8+28]
	084 Move X0, [X8+16]
	085 Move W1, W31
	086 Move X3, X31
	087 Add W9, W9, 1
	088 Move [X8+24], W31
	089 Move [X8+28], W9
	090 Call Array.Clear, X0, X1, X2
	091 Move X0, [X19+24]
	092 Compare X0, 0
	093 JumpIfEqual {170}
	094 Move X1, [X22]
	095 Call HashSet`1<Int32>.Clear, X0
	096 Move X8, [X19+32]
	097 Compare X8, 0
	098 JumpIfEqual {170}
	099 Move W20, W31
	100 Move W2, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Call TMP_UpdateRegistry.get_instance
	103 Compare X0, 0
	104 JumpIfEqual {170}
	105 Move X0, [X0+32]
	106 Compare X0, 0
	107 JumpIfEqual {170}
	108 Move X2, [X23]
	109 Move W1, W20
	110 Call List`1<Object>.get_Item, X0, X1
	111 Compare X0, 0
	112 JumpIfEqual {170}
	113 Move X8, [X0]
	114 Move X1, [X24]
	115 Move X21, X0
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X21
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X2, [X0+8]
	133 Move W1, 3
	134 Move X0, X21
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X8, [X19+32]
	137 Add W20, W20, 1
	138 Compare X8, 0
	139 JumpIfNotEqual {100}
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move W9, [X8+28]
	142 Move X0, [X8+16]
	143 Move W1, W31
	144 Move X3, X31
	145 Add W9, W9, 1
	146 Move [X8+24], W31
	147 Move [X8+28], W9
	148 Call Array.Clear, X0, X1, X2
	149 Move X0, [X19+40]
	150 Compare X0, 0
	151 JumpIfEqual {170}
	152 Move X1, [X22]
	153 Move X20, [X31+48]
	154 Move X19, [X31+56]
	155 Move X22, [X31+32]
	156 Move X21, [X31+40]
	157 Move X24, [X31+16]
	158 Move X23, [X31+24]
	159 Move X30, [X31+64]
	160 Call HashSet`1<Int32>.Clear, X0
	161 Return 
	162 Move X20, [X31+48]
	163 Move X19, [X31+56]
	164 Move X22, [X31+32]
	165 Move X21, [X31+40]
	166 Move X24, [X31+16]
	167 Move X23, [X31+24]
	168 Move X30, [X31+64]
	169 Return 
	170 Call 0x1C17F20

Method: System.Void PerformUpdateForMeshRendererObjects()

Disassembly:
	0x03B22590 LDR X0, [X0 + 0xB98]
	0x03B22594 BL 0x1C16CF4
	0x03B22598 ADRP X0, 0x5D7000
	0x03B2259C LDR X0, [X0 + 0xD10]
	0x03B225A0 BL 0x1C16CF4
	0x03B225A4 ADRP X0, 0x5D7000
	0x03B225A8 LDR X0, [X0 + 0xCF8]
	0x03B225AC BL 0x1C16CF4
	0x03B225B0 ADRP X0, 0x5D7000
	0x03B225B4 LDR X0, [X0 + 0xD18]
	0x03B225B8 BL 0x1C16CF4
	0x03B225BC ADRP X0, 0x637000
	0x03B225C0 LDR X0, [X0 + 0xBA0]
	0x03B225C4 BL 0x1C16CF4
	0x03B225C8 MOVZ W8, 0x1
	0x03B225CC STRB W8, [X21 + 0x740]
	0x03B225D0 STP X31, X31, [X31 + 0x8]
	0x03B225D4 STR W31, [X31 + 0x20]
	0x03B225D8 STR X31, [X31 + 0x18]
	0x03B225DC CBZ X19, 0x3B2279C
	0x03B225E0 LDR X8, [X19 + 0x18]
	0x03B225E4 CMP W8, 0x1
	0x03B225E8 B.LT 0x3B22760
	0x03B225EC ADRP X23, 0x637000
	0x03B225F0 ADRP X24, 0x5D7000
	0x03B225F4 ADRP X25, 0x637000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8C1000
	005 Move X19, 0x5D2000
	006 Move W8, [X20+1845]
	007 Move X19, [X19+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x5D2000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x638000
	016 Move X0, [X0+2880]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1845], W8
	020 Move X0, [X19]
	021 Move X19, 0x638000
	022 Move W8, [X0+224]
	023 Move X19, [X19+2880]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Call Debug.Log, X0
	033 Return 

Method: System.Void UnRegisterCanvasElementForRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03B225F8 LDR X23, [X23 + 0xB98]
	0x03B225FC LDR X24, [X24 + 0xCF8]
	0x03B22600 LDR X25, [X25 + 0xBA0]
	0x03B22604 MOV X22, X31
	0x03B22608 AND X8, X8, 0x0
	0x03B2260C ADD X26, X19, 0x20
	0x03B22610 MOVI V8.2S, 0x3F, 0x18
	0x03B22614 FMOV S9, 0.5
	0x03B22618 CMP X22, W8, UXTW
	0x03B2261C B.CS 0x3B22798
	0x03B22620 LDR X0, [X23]
	0x03B22624 LDR X21, [X26, X22, LSL #3]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TMP_UpdateRegistry.get_instance
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X1, X19
	008 Call TMP_UpdateRegistry.InternalUnRegisterCanvasElementForLayoutRebuild, X0, X1
	009 Call TMP_UpdateRegistry.get_instance
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X1, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call TMP_UpdateRegistry.InternalUnRegisterCanvasElementForGraphicRebuild, X0, X1
	016 Return 
	017 Call 0x1C17F20

Method: System.Void InternalUnRegisterCanvasElementForLayoutRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03B22628 LDR W8, [X0 + 0xE0]
	0x03B2262C CBNZ W8, 0x3B22634
	0x03B22630 BL 0x1C16DFC
	0x03B22634 ADD X8, X31, 0x28
	0x03B22638 MOV X0, X21
	0x03B2263C BL 0x3B2219C
	0x03B22640 LDR V11, [X31 + 0x28]
	0x03B22644 LDR V10, [X31 + 0x30]
	0x03B22648 LDUR V12, [X31 + 0x34]
	0x03B2264C LDRB W8, [X31 + 0x8]
	0x03B22650 LDR V13, [X31 + 0x3C]
	0x03B22654 CBZ W8, 0x3B22730
	0x03B22658 LDR X1, [X25]
	0x03B2265C ADD X8, X31, 0x28
	0x03B22660 ADD X0, X31, 0x8
	0x03B22664 BL 0x242DA08
	0x03B22668 LDR V0, [X31 + 0x28]
	0x03B2266C LDR V1, [X31 + 0x30]
	0x03B22670 LDUR V2, [X31 + 0x34]
	0x03B22674 LDR V3, [X31 + 0x3C]
	0x03B22678 FSUB V4.2S, V11.2S, V12.2S
	0x03B2267C FSUB S5, S10, S13
	0x03B22680 FSUB V16.2S, V0.2S, V2.2S
	0x03B22684 FSUB S17, S1, S3
	0x03B22688 FADD V6.2S, V11.2S, V12.2S
	0x03B2268C FADD S7, S10, S13
	0x03B22690 FADD V0.2S, V0.2S, V2.2S
	0x00000000 INVALID
	0x03B22698 FCMP S5, S17
	0x03B2269C FADD S1, S1, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B226A8 FCSEL S4, S5, S17, MI
	0x03B226AC FCMP S7, S17
	0x00000000 INVALID
	0x03B226B4 FCSEL S5, S7, S17, GT
	0x03B226B8 FSUB V3.2S, V3.2S, V2.2S
	0x03B226BC FSUB S5, S5, S4
	0x00000000 INVALID
	0x03B226C4 FMUL S5, S5, S9
	0x03B226C8 FADD V2.2S, V2.2S, V3.2S
	0x03B226CC FADD S4, S4, S5
	0x03B226D0 FSUB V6.2S, V2.2S, V3.2S
	0x03B226D4 FADD V2.2S, V3.2S, V2.2S
	0x03B226D8 FSUB S3, S4, S5
	0x00000000 INVALID
	0x03B226E0 FADD S4, S5, S4
	0x00000000 INVALID
	0x03B226E8 FCMP S3, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B226F4 FCSEL S2, S3, S1, MI
	0x03B226F8 FCMP S4, S1
	0x03B226FC LDR X2, [X24]
	0x03B22700 FSUB V0.2S, V0.2S, V6.2S

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C1000
	006 Move W8, [X21+1846]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x5DF000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move X0, 0x638000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D2000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1846], W8
	024 Compare X20, 0
	025 JumpIfEqual {65}
	026 Move X8, 0x5D2000
	027 Move X8, [X8+1432]
	028 Move X9, [X20]
	029 Move X8, [X8]
	030 Move W11, [X9+304]
	031 Move W10, [X8+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X9+200]
	034 Add X9, X9, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Move X1, X31
	039 Call Object.GetInstanceID, X0
	040 Move W21, W0
	041 Call TMP_UpdateRegistry.get_instance
	042 Compare X0, 0
	043 JumpIfEqual {65}
	044 Move X0, [X0+16]
	045 Compare X0, 0
	046 JumpIfEqual {65}
	047 Move X8, 0x638000
	048 Move X8, [X8+2888]
	049 Move X1, X20
	050 Move X2, [X8]
	051 Call List`1<Object>.Remove, X0, X1
	052 Move X0, [X19+40]
	053 Compare X0, 0
	054 JumpIfEqual {65}
	055 Move X8, 0x5DF000
	056 Move X8, [X8+1440]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W1, W21
	060 Move X2, [X8]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call HashSet`1<Int32>.Remove, X0, X1
	064 Return 
	065 Call 0x1C17F20

Method: System.Void InternalUnRegisterCanvasElementForGraphicRebuild(UnityEngine.UI.ICanvasElement element)

Disassembly:
	0x03B22704 FCSEL S1, S4, S1, GT
	0x00000000 INVALID
	0x03B2270C FSUB S1, S1, S2
	0x03B22710 FADD V3.2S, V6.2S, V0.2S
	0x03B22714 STUR D0, [X31 + 0x34]
	0x03B22718 FMUL S0, S1, S9
	0x03B2271C FADD S1, S2, S0
	0x03B22720 STR D3, [X31 + 0x28]
	0x03B22724 STR S1, [X31 + 0x30]
	0x03B22728 STR S0, [X31 + 0x3C]
	0x03B2272C B 0x3B22744
	0x03B22730 LDR X2, [X24]
	0x03B22734 STR D11, [X31 + 0x28]
	0x03B22738 STR S10, [X31 + 0x30]
	0x03B2273C STUR D12, [X31 + 0x34]
	0x03B22740 STR S13, [X31 + 0x3C]
	0x03B22744 ADD X0, X31, 0x8
	0x03B22748 ADD X1, X31, 0x28
	0x03B2274C BL 0x242D9E4
	0x03B22750 LDR W8, [X19 + 0x18]
	0x03B22754 ADD X22, X22, 0x1
	0x03B22758 CMP X22, W8, SXTW
	0x03B2275C B.LT 0x3B22618
	0x03B22760 LDUR X8, [X31 + 0x1C]
	0x03B22764 LDUR V0, [X31 + 0xC]
	0x03B22768 LDP X22, X21, [X31 + 0xA0]
	0x03B2276C LDP X24, X23, [X31 + 0x90]
	0x03B22770 STR X8, [X20 + 0x10]
	0x03B22774 STR V0, [X20]
	0x03B22778 LDP X20, X19, [X31 + 0xB0]
	0x03B2277C LDP X26, X25, [X31 + 0x80]
	0x03B22780 LDR X30, [X31 + 0x70]
	0x03B22784 LDP D9, D8, [X31 + 0x60]
	0x03B22788 LDP D11, D10, [X31 + 0x50]
	0x03B2278C LDP D13, D12, [X31 + 0x40]
	0x03B22790 ADD X31, X31, 0xC0
	0x03B22794 RET
	0x03B22798 BL 0x1C16F28
	0x03B2279C BL 0x1C16F20
	0x03B227A0 SUB X31, X31, 0xC0
	0x03B227A4 STP D15, D14, [X31 + 0x40]
	0x03B227A8 STP D13, D12, [X31 + 0x50]
	0x03B227AC STP D11, D10, [X31 + 0x60]
	0x03B227B0 STP D9, D8, [X31 + 0x70]
	0x03B227B4 STP X30, X25, [X31 + 0x80]
	0x03B227B8 STP X24, X23, [X31 + 0x90]
	0x03B227BC STP X22, X21, [X31 + 0xA0]
	0x03B227C0 STP X20, X19, [X31 + 0xB0]
	0x03B227C4 ADRP X20, 0x8C0000
	0x03B227C8 LDRB W9, [X20 + 0x742]
	0x03B227CC MOV X21, X0
	0x03B227D0 MOV X19, X8
	0x03B227D4 TBNZ X9, 0x0, 0x3B22828
	0x03B227D8 ADRP X0, 0x637000
	0x03B227DC LDR X0, [X0 + 0xBB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C1000
	006 Move W8, [X21+1847]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x5DF000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move X0, 0x638000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D2000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1847], W8
	024 Compare X20, 0
	025 JumpIfEqual {65}
	026 Move X8, 0x5D2000
	027 Move X8, [X8+1432]
	028 Move X9, [X20]
	029 Move X8, [X8]
	030 Move W11, [X9+304]
	031 Move W10, [X8+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, [X9+200]
	034 Add X9, X9, X10
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X20
	038 Move X1, X31
	039 Call Object.GetInstanceID, X0
	040 Move W21, W0
	041 Call TMP_UpdateRegistry.get_instance
	042 Compare X0, 0
	043 JumpIfEqual {65}
	044 Move X0, [X0+32]
	045 Compare X0, 0
	046 JumpIfEqual {65}
	047 Move X8, 0x638000
	048 Move X8, [X8+2888]
	049 Move X1, X20
	050 Move X2, [X8]
	051 Call List`1<Object>.Remove, X0, X1
	052 Move X0, [X19+24]
	053 Compare X0, 0
	054 JumpIfEqual {65}
	055 Move X8, 0x5DF000
	056 Move X8, [X8+1440]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W1, W21
	060 Move X2, [X8]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call HashSet`1<Int32>.Remove, X0, X1
	064 Return 
	065 Call 0x1C17F20

