Type: TMPro.TMP_Character

Method: System.Void .ctor()

Disassembly:
	0x03ADC8D4 ADRP X8, 0x67C000
	0x03ADC8D8 LDR X8, [X8 + 0x8D8]
	0x03ADC8DC MOV W20, W0
	0x03ADC8E0 LDR X8, [X8]
	0x03ADC8E4 LDR W9, [X8 + 0xE0]
	0x03ADC8E8 CBNZ W9, 0x3ADC8F4
	0x03ADC8EC MOV X0, X8
	0x03ADC8F0 BL 0x1C16DFC
	0x03ADC8F4 MOV X0, X19
	0x03ADC8F8 MOV W1, W20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call TMP_TextElement..ctor, X0
	006 Move W8, 1
	007 Move W9, 0x3F800000
	008 Move [X19+16], W8
	009 Move [X19+44], W9
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void .ctor(System.UInt32 unicode, UnityEngine.TextCore.Glyph glyph)

Disassembly:
	0x03ADC8FC LDP X20, X19, [X31 + 0x20]
	0x03ADC900 LDP X22, X21, [X31 + 0x10]
	0x03ADC904 LDR X30, [X31], #0x30
	0x03ADC908 B 0x3ADC9F8
	0x03ADC90C BL 0x1C16F20
	0x03ADC910 STP X30, X21, [X31 - 0x20]!
	0x03ADC914 STP X20, X19, [X31 + 0x10]
	0x03ADC918 ADRP X21, 0x906000
	0x03ADC91C ADRP X20, 0x67C000
	0x03ADC920 LDRB W8, [X21 + 0x563]
	0x03ADC924 LDR X20, [X20 + 0x8D8]
	0x03ADC928 MOV X19, X0
	0x03ADC92C TBNZ X8, 0x0, 0x3ADC944
	0x03ADC930 ADRP X0, 0x67C000
	0x03ADC934 LDR X0, [X0 + 0x8D8]
	0x03ADC938 BL 0x1C16CF4
	0x03ADC93C MOVZ W8, 0x1
	0x03ADC940 STRB W8, [X21 + 0x563]
	0x03ADC944 LDR X0, [X20]
	0x03ADC948 LDR W8, [X0 + 0xE0]
	0x03ADC94C CBNZ W8, 0x3ADC958

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, W1
	006 Move X1, X31
	007 Move X20, X2
	008 Move X19, X0
	009 Call TMP_TextElement..ctor, X0
	010 Move W8, 1
	011 Move [X19+20], W21
	012 Move [X19+16], W8
	013 Move [X19+24], X31
	014 Move [X19+32], X20
	015 Compare X20, 0
	016 JumpIfEqual {28}
	017 Move X0, X20
	018 Move X1, X31
	019 Call Glyph.get_index, X0
	020 Move W8, 0x3F800000
	021 Move [X19+40], W0
	022 Move [X19+44], W8
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 
	028 Call 0x1C17F20

Method: System.Void .ctor(System.UInt32 unicode, TMPro.TMP_FontAsset fontAsset, UnityEngine.TextCore.Glyph glyph)

Disassembly:
	0x03ADC950 BL 0x1C16DFC
	0x03ADC954 LDR X0, [X20]
	0x03ADC958 CBZ X19, 0x3ADC994
	0x03ADC95C LDR X8, [X0 + 0xB8]
	0x03ADC960 LDR X9, [X19]
	0x03ADC964 MOV X0, X19
	0x03ADC968 LDP S2, S3, [X8 + 0x30]
	0x03ADC96C LDP S0, S1, [X8 + 0x28]
	0x03ADC970 LDR X8, [X9 + 0x2A8]
	0x03ADC974 LDR X1, [X9 + 0x2B0]
	0x03ADC978 BLR X8
	0x03ADC97C MOV X0, X19
	0x03ADC980 LDP X20, X19, [X31 + 0x10]
	0x03ADC984 FMOV S0, 14
	0x03ADC988 MOV X1, X31
	0x03ADC98C LDP X30, X21, [X31], #0x20
	0x03ADC990 B 0x3AF7CDC
	0x03ADC994 BL 0x1C16F20
	0x03ADC998 STR X30, [X31 - 0x20]!
	0x03ADC99C STP X20, X19, [X31 + 0x10]
	0x03ADC9A0 ADRP X20, 0x906000
	0x03ADC9A4 LDRB W8, [X20 + 0x564]
	0x03ADC9A8 MOV X19, X0
	0x03ADC9AC TBNZ X8, 0x0, 0x3ADC9C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, W1
	007 Move X1, X31
	008 Move X20, X3
	009 Move X21, X2
	010 Move X19, X0
	011 Call TMP_TextElement..ctor, X0
	012 Move W8, 1
	013 Move [X19+20], W22
	014 Move [X19+16], W8
	015 Move [X19+24], X21
	016 Move [X19+32], X20
	017 Compare X20, 0
	018 JumpIfEqual {31}
	019 Move X0, X20
	020 Move X1, X31
	021 Call Glyph.get_index, X0
	022 Move W8, 0x3F800000
	023 Move [X19+40], W0
	024 Move [X19+44], W8
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void .ctor(System.UInt32 unicode, System.UInt32 glyphIndex)

Disassembly:
	0x03ADC9B0 ADRP X0, 0x63F000
	0x03ADC9B4 LDR X0, [X0 + 0x5E8]
	0x03ADC9B8 BL 0x1C16CF4
	0x03ADC9BC MOVZ W8, 0x1
	0x03ADC9C0 STRB W8, [X20 + 0x564]
	0x03ADC9C4 CBZ X19, 0x3ADC9F4
	0x03ADC9C8 ADRP X8, 0x63F000
	0x03ADC9CC LDR X8, [X8 + 0x5E8]
	0x03ADC9D0 LDR X0, [X8]
	0x03ADC9D4 LDR W8, [X0 + 0xE0]
	0x03ADC9D8 CBZ W8, 0x3ADC9E8
	0x03ADC9DC LDP X20, X19, [X31 + 0x10]
	0x03ADC9E0 LDR X30, [X31], #0x20
	0x03ADC9E4 RET
	0x03ADC9E8 LDP X20, X19, [X31 + 0x10]
	0x03ADC9EC LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move W19, W2
	008 Move X21, X0
	009 Call TMP_TextElement..ctor, X0
	010 Move W9, 0x3F800000
	011 Move [X21+20], W20
	012 Move [X21+40], W19
	013 Move [X21+44], W9
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W8, 1
	017 Move [X21+24], X31
	018 Move [X21+32], X31
	019 Move [X21+16], W8
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

