Type: TMPro.TextMeshPro

Method: System.Int32 get_sortingLayerID()

Disassembly:
	0x03ACD3FC MOV X0, X31
	0x03ACD400 BL 0x3AE6084
	0x03ACD404 LDRB W8, [X19 + 0x238]
	0x03ACD408 CBZ W8, 0x3ACD430
	0x03ACD40C LDR V2, [X19 + 0x1EC]
	0x03ACD410 LDR V0, [X19 + 0x254]
	0x03ACD414 LDR V1, [X19 + 0x250]
	0x03ACD418 FCMP S2, S0
	0x03ACD41C FCSEL S3, S0, S2, GT
	0x03ACD420 FCMP S2, S1
	0x03ACD424 FCSEL S2, S3, S1, PL
	0x03ACD428 STR S2, [X19 + 0x1E4]
	0x03ACD42C B 0x3ACD438
	0x03ACD430 LDR V0, [X19 + 0x254]
	0x03ACD434 LDR V1, [X19 + 0x250]
	0x03ACD438 LDR X0, [X19 + 0x6E8]
	0x03ACD43C STR S0, [X19 + 0x23C]
	0x03ACD440 STR S1, [X19 + 0x240]
	0x03ACD444 STR W31, [X19 + 0x2BC]
	0x03ACD448 STR W31, [X19 + 0x2D4]
	0x03ACD44C STRB W31, [X19 + 0x2F8]
	0x03ACD450 STRB W31, [X19 + 0x370]
	0x03ACD454 STRB W31, [X19 + 0x3FC]
	0x03ACD458 STRB W31, [X19 + 0x6AC]
	0x03ACD45C STRB W31, [X19 + 0x24C]
	0x03ACD460 STR W31, [X19 + 0x244]
	0x03ACD464 CBZ X0, 0x3ACD4B8
	0x03ACD468 MOV X1, X31
	0x03ACD46C BL 0x3C12FF8
	0x03ACD470 AND W1, W0, 0x1
	0x03ACD474 MOV X0, X19
	0x03ACD478 BL 0x3AD1DFC
	0x03ACD47C LDRB W8, [X19 + 0x24C]
	0x03ACD480 CBNZ W8, 0x3ACD4AC
	0x03ACD484 LDR X8, [X19]
	0x03ACD488 MOV X0, X19
	0x03ACD48C LDR X9, [X8 + 0xA18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x916000
	006 Move X20, 0x627000
	007 Move W8, [X21+1222]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x627000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1222], W8
	019 Move X0, X19
	020 Call TextMeshPro.get_renderer, X0
	021 Move X8, [X20]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W0, W31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Move X0, [X19+1768]
	043 Compare X0, 0
	044 JumpIfEqual {52}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Renderer.get_sortingLayerID, X0
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void set_sortingLayerID(System.Int32 value)

Disassembly:
	0x03ACD524 LDR X0, [X21]
	0x03ACD528 LDR X20, [X19 + 0x110]
	0x03ACD52C LDR W8, [X0 + 0xE0]
	0x03ACD530 CBNZ W8, 0x3ACD538
	0x03ACD534 BL 0x1C16DFC
	0x03ACD538 MOV X0, X20
	0x03ACD53C MOV X1, X31
	0x03ACD540 MOV X2, X31
	0x03ACD544 BL 0x3C3883C
	0x03ACD548 TBZ X0, 0x0, 0x3ACD558
	0x03ACD54C LDP X20, X19, [X31 + 0x10]
	0x03ACD550 LDP X30, X21, [X31], #0x20
	0x03ACD554 RET
	0x03ACD558 LDR X0, [X19 + 0x6E8]
	0x03ACD55C CBZ X0, 0x3ACD5EC
	0x03ACD560 MOV X1, X31
	0x03ACD564 BL 0x3C1349C
	0x03ACD568 LDR X8, [X21]
	0x03ACD56C MOV X20, X0
	0x03ACD570 LDR W9, [X8 + 0xE0]
	0x03ACD574 CBNZ W9, 0x3ACD580
	0x03ACD578 MOV X0, X8
	0x03ACD57C BL 0x1C16DFC
	0x03ACD580 MOV X0, X20
	0x03ACD584 MOV X1, X31
	0x03ACD588 MOV X2, X31
	0x03ACD58C BL 0x3C3883C
	0x03ACD590 TBNZ X0, 0x0, 0x3ACD5D0
	0x03ACD594 LDR X0, [X19 + 0x6E8]
	0x03ACD598 CBZ X0, 0x3ACD5EC
	0x03ACD59C MOV X1, X31
	0x03ACD5A0 BL 0x3C1349C
	0x03ACD5A4 CBZ X0, 0x3ACD5EC
	0x03ACD5A8 MOV X1, X31
	0x03ACD5AC BL 0x3C385F8
	0x03ACD5B0 LDR X8, [X19 + 0x110]
	0x03ACD5B4 CBZ X8, 0x3ACD5EC
	0x03ACD5B8 MOV W20, W0
	0x03ACD5BC MOV X0, X8
	0x03ACD5C0 MOV X1, X31
	0x03ACD5C4 BL 0x3C385F8
	0x03ACD5C8 CMP W20, W0
	0x03ACD5CC B.EQ 0x3ACD54C
	0x03ACD5D0 LDR X0, [X19 + 0x6E8]
	0x03ACD5D4 CBZ X0, 0x3ACD5EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x916000
	007 Move X21, 0x627000
	008 Move W8, [X22+1223]
	009 Move X21, [X21+1432]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x627000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1223], W8
	021 Move X0, X20
	022 Call TextMeshPro.get_renderer, X0
	023 Move X8, [X21]
	024 Move X21, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {44}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, [X20+1768]
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move W1, W19
	048 Move X2, X31
	049 Call Renderer.set_sortingLayerID, X0, X1
	050 Move [X20+1740], W19
	051 Move X0, X20
	052 Move W1, W19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Call 0x1C17F20

Method: System.Int32 get_sortingOrder()

Disassembly:
	0x03ACD6E4 LDR X30, [X31], #0x30
	0x03ACD6E8 RET
	0x03ACD6EC BL 0x1C16F28
	0x03ACD6F0 AND W8, W1, 0x1
	0x03ACD6F4 MOVZ W9, 0x1
	0x03ACD6F8 STRB W9, [X0 + 0x370]
	0x03ACD6FC STRB W8, [X0 + 0x6AC]
	0x03ACD700 B 0x3ACD274
	0x03ACD704 STP X30, X19, [X31 - 0x10]!
	0x03ACD708 MOVZ W2, 0x1
	0x03ACD70C MOV X3, X31
	0x03ACD710 MOV X19, X0
	0x03ACD714 BL 0x3AFC2B8
	0x03ACD718 LDR X8, [X19]
	0x03ACD71C LDR X1, [X19 + 0x478]
	0x03ACD720 MOV X0, X19
	0x03ACD724 LDR X9, [X8 + 0x858]
	0x03ACD728 LDR X2, [X8 + 0x860]
	0x03ACD72C BLR X9
	0x03ACD730 LDR X8, [X19]
	0x03ACD734 STR W31, [X19 + 0x318]
	0x03ACD738 MOV X0, X19
	0x03ACD73C LDR X9, [X8 + 0x8A8]
	0x03ACD740 LDR X1, [X8 + 0x8B0]
	0x03ACD744 BLR X9
	0x03ACD748 LDR X8, [X19]
	0x03ACD74C MOV X0, X19
	0x03ACD750 LDR X9, [X8 + 0xA18]
	0x03ACD754 LDR X1, [X8 + 0xA20]
	0x03ACD758 BLR X9
	0x03ACD75C LDR X0, [X19 + 0x368]
	0x03ACD760 MOVZ W8, 0xFF
	0x03ACD764 STR W8, [X19 + 0x318]
	0x03ACD768 LDP X30, X19, [X31], #0x10
	0x03ACD76C RET
	0x03ACD770 STP X30, X21, [X31 - 0x20]!
	0x03ACD774 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x916000
	006 Move X20, 0x627000
	007 Move W8, [X21+1224]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x627000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1224], W8
	019 Move X0, X19
	020 Call TextMeshPro.get_renderer, X0
	021 Move X8, [X20]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move W0, W31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Move X0, [X19+1768]
	043 Compare X0, 0
	044 JumpIfEqual {52}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Renderer.get_sortingOrder, X0
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void set_sortingOrder(System.Int32 value)

Disassembly:
	0x03ACD778 ADRP X21, 0x915000
	0x03ACD77C LDRB W8, [X21 + 0x4D4]
	0x03ACD780 MOV W19, W1
	0x03ACD784 MOV X20, X0
	0x03ACD788 TBNZ X8, 0x0, 0x3ACD7A0
	0x03ACD78C ADRP X0, 0x626000
	0x03ACD790 LDR X0, [X0 + 0x598]
	0x03ACD794 BL 0x1C16CF4
	0x03ACD798 MOVZ W8, 0x1
	0x03ACD79C STRB W8, [X21 + 0x4D4]
	0x03ACD7A0 LDR X8, [X20 + 0x368]
	0x03ACD7A4 CBZ X8, 0x3ACD828
	0x03ACD7A8 LDR X8, [X8 + 0x60]
	0x03ACD7AC CBZ X8, 0x3ACD828
	0x03ACD7B0 LDR W9, [X8 + 0x18]
	0x03ACD7B4 CBZ W9, 0x3ACD82C
	0x03ACD7B8 ADRP X9, 0x626000
	0x03ACD7BC LDR X9, [X9 + 0x598]
	0x03ACD7C0 LDR X21, [X8 + 0x20]
	0x03ACD7C4 LDR X0, [X9]
	0x03ACD7C8 LDR W9, [X0 + 0xE0]
	0x03ACD7CC CBNZ W9, 0x3ACD7D4
	0x03ACD7D0 BL 0x1C16DFC
	0x03ACD7D4 MOV X0, X21
	0x03ACD7D8 MOV X1, X31
	0x03ACD7DC MOV X2, X31
	0x03ACD7E0 BL 0x3C3883C
	0x03ACD7E4 LDR X8, [X20 + 0x368]
	0x03ACD7E8 TBZ X0, 0x0, 0x3ACD80C
	0x03ACD7EC CBZ X8, 0x3ACD828
	0x03ACD7F0 LDR X9, [X8 + 0x60]
	0x03ACD7F4 CBZ X9, 0x3ACD828
	0x03ACD7F8 LDR W10, [X9 + 0x18]
	0x03ACD7FC CBZ W10, 0x3ACD82C
	0x03ACD800 LDR X10, [X20 + 0x3A0]
	0x03ACD804 STR X10, [X9 + 0x20]
	0x03ACD808 B 0x3ACD810
	0x03ACD80C CBZ X8, 0x3ACD828
	0x03ACD810 AND W1, W19, 0x1
	0x03ACD814 LDP X20, X19, [X31 + 0x10]
	0x03ACD818 MOV X0, X8
	0x03ACD81C MOV X2, X31
	0x03ACD820 LDP X30, X21, [X31], #0x20
	0x03ACD824 B 0x3B1C34C
	0x03ACD828 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x916000
	007 Move X21, 0x627000
	008 Move W8, [X22+1225]
	009 Move X21, [X21+1432]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x627000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1225], W8
	021 Move X0, X20
	022 Call TextMeshPro.get_renderer, X0
	023 Move X8, [X21]
	024 Move X21, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {44}
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Move X0, [X20+1768]
	045 Compare X0, 0
	046 JumpIfEqual {58}
	047 Move W1, W19
	048 Move X2, X31
	049 Call Renderer.set_sortingOrder, X0, X1
	050 Move [X20+1744], W19
	051 Move X0, X20
	052 Move W1, W19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Call 0x1C17F20

Method: System.Boolean get_autoSizeTextContainer()

Disassembly:
	0x03ACD938 BL 0x33C0FDC
	0x03ACD93C CBZ X0, 0x3ACD95C

ISIL:
	001 Move W0, [X0+921]
	002 Return X0

Method: System.Void set_autoSizeTextContainer(System.Boolean value)

Disassembly:
	0x03ACD940 LDR X23, [X24]
	0x03ACD944 MOV X22, X0
	0x03ACD948 MOV X1, X23
	0x03ACD94C BL 0x1C16E00
	0x03ACD950 MOV X1, X0
	0x03ACD954 CBNZ X0, 0x3ACD960
	0x03ACD958 B 0x3ACD98C
	0x03ACD95C MOV X1, X31
	0x03ACD960 MOV X0, X20
	0x03ACD964 MOV X2, X21
	0x03ACD968 BL 0x1C24138
	0x03ACD96C CMP X21, X0
	0x03ACD970 MOV X21, X0
	0x03ACD974 B.NE 0x3ACD92C
	0x03ACD978 LDP X20, X19, [X31 + 0x30]
	0x03ACD97C LDP X22, X21, [X31 + 0x20]
	0x03ACD980 LDP X24, X23, [X31 + 0x10]
	0x03ACD984 LDR X30, [X31], #0x40
	0x03ACD988 RET
	0x03ACD98C MOV X0, X22
	0x03ACD990 MOV X1, X23
	0x03ACD994 BL 0x1C171E0
	0x03ACD998 CBZ X1, 0x3ACD9A8
	0x03ACD99C MOV X0, X1
	0x03ACD9A0 MOV X1, X31
	0x03ACD9A4 B 0x3C19CD4
	0x03ACD9A8 STR X30, [X31 - 0x10]!
	0x03ACD9AC BL 0x1C16F20
	0x03ACD9B0 STP X30, X25, [X31 - 0x40]!
	0x03ACD9B4 STP X24, X23, [X31 + 0x10]
	0x03ACD9B8 STP X22, X21, [X31 + 0x20]
	0x03ACD9BC STP X20, X19, [X31 + 0x30]
	0x03ACD9C0 LDR X8, [X0 + 0x368]
	0x03ACD9C4 CBZ X8, 0x3ACDB48
	0x03ACD9C8 LDR W8, [X8 + 0x34]
	0x03ACD9CC CMP W8, 0x1
	0x03ACD9D0 B.LT 0x3ACDB34
	0x03ACD9D4 ADD X8, X8, X8, 0x2, LSL
	0x03ACD9D8 MOV X19, X0
	0x03ACD9DC MOV W20, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x916000
	007 Move W8, [X22+1226]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x68C000
	016 Move X0, [X0+1384]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1226], W8
	020 Move W8, [X19+921]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+921], W21
	023 Move TEMP, X20
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {47}
	027 Move X8, 0x68C000
	028 Move X8, [X8+1384]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call TMP_UpdateManager.RegisterTextElementForLayoutRebuild, X0
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X2, [X8+744]
	044 Move X1, [X8+752]
	045 Move X30, [X31+48]
	046 CallNoReturn X2
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 

Method: TMPro.TextContainer get_textContainer()

Disassembly:
	0x03ACD9E0 MOV X22, X31
	0x03ACD9E4 UBFM X23, X8, 0x3C, 0x3B

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Transform get_transform()

Disassembly:
	0x03ACD9E8 MOVZ W24, 0x4
	0x03ACD9EC SUB X25, X24, 0x4
	0x03ACD9F0 CBZ X22, 0x3ACDA34
	0x03ACD9F4 LDR X8, [X19 + 0x708]
	0x03ACD9F8 CBZ X8, 0x3ACDB48
	0x03ACD9FC LDR W9, [X8 + 0x18]
	0x03ACDA00 CMP X25, X9
	0x03ACDA04 B.CS 0x3ACDB4C
	0x03ACDA08 LDR X0, [X8, X24, LSL #3]
	0x03ACDA0C CBZ X0, 0x3ACDB48
	0x03ACDA10 MOV X1, X31
	0x03ACDA14 BL 0x3B19A94
	0x03ACDA18 MOV X21, X0
	0x03ACDA1C TBNZ X20, 0x0, 0x3ACDA3C
	0x03ACDA20 TBNZ X20, 0x1, 0x3ACDA74
	0x03ACDA24 TBNZ X20, 0x2, 0x3ACDAAC
	0x03ACDA28 TBNZ X20, 0x4, 0x3ACDAE4
	0x03ACDA2C CBNZ X21, 0x3ACDB18
	0x03ACDA30 B 0x3ACDB48
	0x03ACDA34 LDR X21, [X19 + 0x3A0]
	0x03ACDA38 TBZ X20, 0x0, 0x3ACDA20
	0x03ACDA3C LDR X8, [X19 + 0x368]
	0x03ACDA40 CBZ X8, 0x3ACDB48
	0x03ACDA44 LDR X8, [X8 + 0x60]
	0x03ACDA48 CBZ X8, 0x3ACDB48
	0x03ACDA4C LDR W9, [X8 + 0x18]
	0x03ACDA50 CMP X25, X9
	0x03ACDA54 B.CS 0x3ACDB4C
	0x03ACDA58 CBZ X21, 0x3ACDB48
	0x03ACDA5C ADD X8, X8, X22
	0x03ACDA60 LDR X1, [X8 + 0x30]
	0x03ACDA64 MOV X0, X21
	0x03ACDA68 MOV X2, X31
	0x03ACDA6C BL 0x3C17F08
	0x03ACDA70 TBZ X20, 0x1, 0x3ACDA24
	0x03ACDA74 LDR X8, [X19 + 0x368]
	0x03ACDA78 CBZ X8, 0x3ACDB48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x916000
	006 Move X20, 0x627000
	007 Move W8, [X21+1227]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x68C000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move X0, 0x627000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1227], W8
	022 Move X0, [X20]
	023 Move X20, [X19+888]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x68C000
	037 Move X8, [X8+1392]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+888], X0
	042 Move X0, [X19+888]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: UnityEngine.Renderer get_renderer()

Disassembly:
	0x03ACD490 LDR X1, [X8 + 0xA20]
	0x03ACD494 BLR X9
	0x03ACD498 LDR W8, [X19 + 0x244]
	0x03ACD49C LDRB W9, [X19 + 0x24C]
	0x03ACD4A0 ADD W8, W8, 0x1
	0x03ACD4A4 STR W8, [X19 + 0x244]
	0x03ACD4A8 CBZ W9, 0x3ACD484
	0x03ACD4AC LDP X20, X19, [X31 + 0x10]
	0x03ACD4B0 LDR X30, [X31], #0x20
	0x03ACD4B4 RET
	0x03ACD4B8 BL 0x1C16F20
	0x03ACD4BC STP X30, X21, [X31 - 0x20]!
	0x03ACD4C0 STP X20, X19, [X31 + 0x10]
	0x03ACD4C4 ADRP X20, 0x915000
	0x03ACD4C8 ADRP X21, 0x626000
	0x03ACD4CC LDRB W8, [X20 + 0x4D2]
	0x03ACD4D0 LDR X21, [X21 + 0x598]
	0x03ACD4D4 MOV X19, X0
	0x03ACD4D8 TBNZ X8, 0x0, 0x3ACD4F0
	0x03ACD4DC ADRP X0, 0x626000
	0x03ACD4E0 LDR X0, [X0 + 0x598]
	0x03ACD4E4 BL 0x1C16CF4
	0x03ACD4E8 MOVZ W8, 0x1
	0x03ACD4EC STRB W8, [X20 + 0x4D2]
	0x03ACD4F0 MOV X0, X19
	0x03ACD4F4 BL 0x3ACC490
	0x03ACD4F8 LDR X8, [X21]
	0x03ACD4FC MOV X20, X0
	0x03ACD500 LDR W9, [X8 + 0xE0]
	0x03ACD504 CBNZ W9, 0x3ACD510
	0x03ACD508 MOV X0, X8
	0x03ACD50C BL 0x1C16DFC
	0x03ACD510 MOV X0, X20
	0x03ACD514 MOV X1, X31
	0x03ACD518 MOV X2, X31
	0x03ACD51C BL 0x3C3883C
	0x03ACD520 TBNZ X0, 0x0, 0x3ACD54C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x916000
	006 Move X20, 0x627000
	007 Move W8, [X21+1228]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x653000
	015 Move X0, [X0+1440]
	016 Call 0x1C17CF4
	017 Move X0, 0x627000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1228], W8
	022 Move X0, [X20]
	023 Move X20, [X19+1768]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x653000
	037 Move X8, [X8+1440]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+1768], X0
	042 Move X0, [X19+1768]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: UnityEngine.Mesh get_mesh()

Disassembly:
	0x03ACDA7C LDR X8, [X8 + 0x60]
	0x03ACDA80 CBZ X8, 0x3ACDB48
	0x03ACDA84 LDR W9, [X8 + 0x18]
	0x03ACDA88 CMP X25, X9
	0x03ACDA8C B.CS 0x3ACDB4C
	0x03ACDA90 CBZ X21, 0x3ACDB48
	0x03ACDA94 ADD X8, X8, X22
	0x03ACDA98 LDR X1, [X8 + 0x48]
	0x03ACDA9C MOV X0, X21
	0x03ACDAA0 MOV X2, X31
	0x03ACDAA4 BL 0x3C1810C
	0x03ACDAA8 TBZ X20, 0x2, 0x3ACDA28
	0x03ACDAAC LDR X8, [X19 + 0x368]
	0x03ACDAB0 CBZ X8, 0x3ACDB48
	0x03ACDAB4 LDR X8, [X8 + 0x60]
	0x03ACDAB8 CBZ X8, 0x3ACDB48
	0x03ACDABC LDR W9, [X8 + 0x18]
	0x03ACDAC0 CMP X25, X9
	0x03ACDAC4 B.CS 0x3ACDB4C
	0x03ACDAC8 CBZ X21, 0x3ACDB48
	0x03ACDACC ADD X8, X8, X22
	0x03ACDAD0 LDR X1, [X8 + 0x50]
	0x03ACDAD4 MOV X0, X21
	0x03ACDAD8 MOV X2, X31
	0x03ACDADC BL 0x3C181B8
	0x03ACDAE0 TBZ X20, 0x4, 0x3ACDA2C
	0x03ACDAE4 LDR X8, [X19 + 0x368]
	0x03ACDAE8 CBZ X8, 0x3ACDB48
	0x03ACDAEC LDR X8, [X8 + 0x60]
	0x03ACDAF0 CBZ X8, 0x3ACDB48
	0x03ACDAF4 LDR W9, [X8 + 0x18]
	0x03ACDAF8 CMP X25, X9
	0x03ACDAFC B.CS 0x3ACDB4C
	0x03ACDB00 CBZ X21, 0x3ACDB48
	0x03ACDB04 ADD X8, X8, X22
	0x03ACDB08 LDR X1, [X8 + 0x58]
	0x03ACDB0C MOV X0, X21
	0x03ACDB10 MOV X2, X31
	0x03ACDB14 BL 0x3C18318
	0x03ACDB18 MOV X0, X21
	0x03ACDB1C MOV X1, X31
	0x03ACDB20 BL 0x3C19CD4
	0x03ACDB24 ADD X22, X22, 0x50
	0x03ACDB28 CMP X23, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x916000
	006 Move X20, 0x627000
	007 Move W8, [X21+1229]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x62E000
	015 Move X0, [X0+1792]
	016 Call 0x1C17CF4
	017 Move X0, 0x627000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1229], W8
	022 Move X0, [X20]
	023 Move X20, [X19+928]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {50}
	036 Move X8, 0x62E000
	037 Move X8, [X8+1792]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call Mesh..ctor, X0
	043 Move [X19+928], X20
	044 Compare X20, 0
	045 JumpIfEqual {56}
	046 Move W1, 61
	047 Move X0, X20
	048 Move X2, X31
	049 Call Object.set_hideFlags, X0, X1
	050 Move X0, [X19+928]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: UnityEngine.MeshFilter get_meshFilter()

Disassembly:
	0x03ACDB2C ADD X24, X24, 0x1
	0x03ACDB30 B.NE 0x3ACD9EC
	0x03ACDB34 LDP X20, X19, [X31 + 0x30]
	0x03ACDB38 LDP X22, X21, [X31 + 0x20]
	0x03ACDB3C LDP X24, X23, [X31 + 0x10]
	0x03ACDB40 LDP X30, X25, [X31], #0x40
	0x03ACDB44 RET
	0x03ACDB48 BL 0x1C16F20
	0x03ACDB4C BL 0x1C16F28
	0x03ACDB50 STP X30, X25, [X31 - 0x40]!
	0x03ACDB54 STP X24, X23, [X31 + 0x10]
	0x03ACDB58 STP X22, X21, [X31 + 0x20]
	0x03ACDB5C STP X20, X19, [X31 + 0x30]
	0x03ACDB60 ADRP X20, 0x915000
	0x03ACDB64 LDRB W8, [X20 + 0x4D7]
	0x03ACDB68 MOV X19, X0
	0x03ACDB6C TBNZ X8, 0x0, 0x3ACDB84
	0x03ACDB70 ADRP X0, 0x68B000
	0x03ACDB74 LDR X0, [X0 + 0x348]
	0x03ACDB78 BL 0x1C16CF4
	0x03ACDB7C MOVZ W8, 0x1
	0x03ACDB80 STRB W8, [X20 + 0x4D7]
	0x03ACDB84 LDR X8, [X19 + 0x368]
	0x03ACDB88 CBZ X8, 0x3ACDD18
	0x03ACDB8C LDR W8, [X8 + 0x34]
	0x03ACDB90 CMP W8, 0x1
	0x03ACDB94 B.LT 0x3ACDD04
	0x03ACDB98 ADRP X22, 0x68B000
	0x03ACDB9C LDR X22, [X22 + 0x348]
	0x03ACDBA0 ADD X8, X8, X8, 0x2, LSL
	0x03ACDBA4 MOV X21, X31
	0x03ACDBA8 UBFM X23, X8, 0x3C, 0x3B
	0x03ACDBAC MOVZ W24, 0x4
	0x03ACDBB0 SUB X25, X24, 0x4
	0x03ACDBB4 CBZ X21, 0x3ACDC20
	0x03ACDBB8 LDR X8, [X19 + 0x368]
	0x03ACDBBC CBZ X8, 0x3ACDD18
	0x03ACDBC0 LDR X20, [X8 + 0x60]
	0x03ACDBC4 CBZ X20, 0x3ACDD18
	0x03ACDBC8 LDR X0, [X22]
	0x03ACDBCC LDR W8, [X0 + 0xE0]
	0x03ACDBD0 CBNZ W8, 0x3ACDBD8
	0x03ACDBD4 BL 0x1C16DFC
	0x03ACDBD8 LDR W8, [X20 + 0x18]
	0x03ACDBDC CMP X25, X8
	0x03ACDBE0 B.CS 0x3ACDD1C
	0x03ACDBE4 ADD X8, X20, X21
	0x03ACDBE8 ADD X0, X8, 0x20
	0x03ACDBEC MOV X1, X31
	0x03ACDBF0 BL 0x3B12AF8
	0x03ACDBF4 LDR X8, [X19 + 0x708]
	0x03ACDBF8 CBZ X8, 0x3ACDD18
	0x03ACDBFC LDR W9, [X8 + 0x18]
	0x03ACDC00 CMP X25, X9
	0x03ACDC04 B.CS 0x3ACDD1C
	0x03ACDC08 LDR X0, [X8, X24, LSL #3]
	0x03ACDC0C CBZ X0, 0x3ACDD18
	0x03ACDC10 MOV X1, X31
	0x03ACDC14 BL 0x3B19A94
	0x03ACDC18 MOV X20, X0
	0x03ACDC1C B 0x3ACDC24
	0x03ACDC20 LDR X20, [X19 + 0x3A0]
	0x03ACDC24 LDR X8, [X19 + 0x368]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x916000
	006 Move X21, 0x627000
	007 Move W8, [X20+1230]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x62E000
	015 Move X0, [X0+2872]
	016 Call 0x1C17CF4
	017 Move X0, 0x62E000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move X0, 0x627000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1230], W8
	025 Move X0, [X21]
	026 Move X20, [X19+1776]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {74}
	039 Move X8, 0x62E000
	040 Move X8, [X8+2872]
	041 Move X0, X19
	042 Move X1, [X8]
	043 Call 0x21A4894, X0
	044 Move [X19+1776], X0
	045 Move X20, X0
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {74}
	059 Move X0, X19
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Compare X0, 0
	063 JumpIfEqual {80}
	064 Move X8, 0x62E000
	065 Move X8, [X8+1776]
	066 Move X1, [X8]
	067 Call 0x21E61FC, X0
	068 Move [X19+1776], X0
	069 Compare X0, 0
	070 JumpIfEqual {80}
	071 Move W1, 63
	072 Move X2, X31
	073 Call Object.set_hideFlags, X0, X1
	074 Move X0, [X19+1776]
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Call 0x1C17F20

Method: TMPro.MaskingTypes get_maskType()

Disassembly:
	0x03ACDC28 CBZ X8, 0x3ACDD18
	0x03ACDC2C LDR X8, [X8 + 0x60]

ISIL:
	001 Move W0, [X0+1808]
	002 Return X0

Method: System.Void set_maskType(TMPro.MaskingTypes value)

Disassembly:
	0x03ACDC30 CBZ X8, 0x3ACDD18
	0x03ACDC34 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X0+1808], W1

Method: System.Void SetMask(TMPro.MaskingTypes type, UnityEngine.Vector4 maskCoords)

Disassembly:
	0x03ACDD80 BL 0x1C16CF4
	0x03ACDD84 ADRP X0, 0x652000
	0x03ACDD88 LDR X0, [X0 + 0x5A0]
	0x03ACDD8C BL 0x1C16CF4
	0x03ACDD90 ADRP X0, 0x68B000
	0x03ACDD94 LDR X0, [X0 + 0x5A0]
	0x03ACDD98 BL 0x1C16CF4
	0x03ACDD9C ADRP X0, 0x62D000
	0x03ACDDA0 LDR X0, [X0 + 0x6F0]
	0x03ACDDA4 BL 0x1C16CF4
	0x03ACDDA8 ADRP X0, 0x68B000
	0x03ACDDAC LDR X0, [X0 + 0x5A8]
	0x03ACDDB0 BL 0x1C16CF4
	0x03ACDDB4 ADRP X0, 0x62D000
	0x03ACDDB8 LDR X0, [X0 + 0x700]
	0x03ACDDBC BL 0x1C16CF4
	0x03ACDDC0 ADRP X0, 0x626000
	0x03ACDDC4 LDR X0, [X0 + 0x598]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move V8, V3
	008 Move V9, V2
	009 Move V10, V1
	010 Move V11, V0
	011 Move X19, X0
	012 Call TextMeshPro.SetMask, X0, X1
	013 Move X0, X19
	014 Move V2, V9
	015 Move V3, V8
	016 Move X30, [X31+32]
	017 Move X19, [X31+40]
	018 Move D9, [X31+16]
	019 Move D8, [X31+24]
	020 Move V0, V11
	021 Move V1, V10
	022 Move D11, [X31+48]
	023 Move D10, [X31+56]

Method: System.Void SetMask(TMPro.MaskingTypes type, UnityEngine.Vector4 maskCoords, System.Single softnessX, System.Single softnessY)

Disassembly:
	0x03ACDE68 STR X0, [X19 + 0x380]
	0x03ACDE6C MOV X0, X19
	0x03ACDE70 BL 0x3ACC9E8
	0x03ACDE74 STR X0, [X19 + 0x378]
	0x03ACDE78 LDR X1, [X20]
	0x03ACDE7C MOV X0, X19
	0x03ACDE80 BL 0x21A3894
	0x03ACDE84 STR X0, [X19 + 0x6F0]
	0x03ACDE88 MOV X20, X0
	0x03ACDE8C LDR X0, [X21]
	0x03ACDE90 LDR W8, [X0 + 0xE0]
	0x03ACDE94 CBNZ W8, 0x3ACDE9C
	0x03ACDE98 BL 0x1C16DFC
	0x03ACDE9C MOV X0, X20
	0x03ACDEA0 MOV X1, X31
	0x03ACDEA4 MOV X2, X31
	0x03ACDEA8 BL 0x3C3883C
	0x03ACDEAC TBZ X0, 0x0, 0x3ACDED4
	0x03ACDEB0 MOV X0, X19
	0x03ACDEB4 MOV X1, X31
	0x03ACDEB8 BL 0x3C32ECC
	0x03ACDEBC CBZ X0, 0x3ACE0C8
	0x03ACDEC0 ADRP X8, 0x62D000
	0x03ACDEC4 LDR X8, [X8 + 0x6F0]

ISIL:
	001 Move [X31-64], D13
	002 Move [X31-56], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X19
	009 Move V8, V5
	010 Move V9, V4
	011 Move V10, V3
	012 Move V11, V2
	013 Move V12, V1
	014 Move V13, V0
	015 Move X19, X0
	016 Call TextMeshPro.SetMask, X0, X1
	017 Move X0, X19
	018 Move V2, V11
	019 Move V3, V10
	020 Move V4, V9
	021 Move V5, V8
	022 Move X30, [X31+48]
	023 Move X19, [X31+56]
	024 Move D9, [X31+32]
	025 Move D8, [X31+40]
	026 Move D11, [X31+16]
	027 Move D10, [X31+24]
	028 Move V0, V13
	029 Move V1, V12
	030 Move D13, [X31+64]
	031 Move D12, [X31+72]

Method: System.Void SetVerticesDirty()

Disassembly:
	0x03ACDFB8 LDR W1, [X19 + 0x6FC]
	0x03ACDFBC LDR X8, [X8 + 0x5B8]
	0x03ACDFC0 LDR X0, [X8]
	0x03ACDFC4 BL 0x1C16D6C
	0x03ACDFC8 STR X0, [X19 + 0x478]
	0x03ACDFCC LDR X0, [X20]
	0x03ACDFD0 BL 0x1C16F10
	0x03ACDFD4 MOV X1, X31
	0x03ACDFD8 MOV X20, X0
	0x03ACDFDC BL 0x3ADB8D4
	0x03ACDFE0 MOVZ W8, 0x1
	0x03ACDFE4 STR X20, [X19 + 0x648]
	0x03ACDFE8 STRB W8, [X19 + 0x6F8]
	0x03ACDFEC LDR X1, [X21]
	0x03ACDFF0 MOV X0, X19
	0x03ACDFF4 BL 0x21A453C
	0x03ACDFF8 CBZ X0, 0x3ACE0C8
	0x03ACDFFC LDR X22, [X0 + 0x18]
	0x03ACE000 MOV X20, X0
	0x03ACE004 CBZ X22, 0x3ACE0A0
	0x03ACE008 LDR X8, [X19 + 0x708]
	0x03ACE00C CBZ X8, 0x3ACE0C8
	0x03ACE010 LDR W8, [X8 + 0x18]
	0x03ACE014 ADD W1, W22, 0x1
	0x03ACE018 ADD X21, X19, 0x708
	0x03ACE01C CMP W1, W8
	0x03ACE020 B.LE 0x3ACE038
	0x03ACE024 ADRP X8, 0x68A000
	0x03ACE028 LDR X8, [X8 + 0x598]
	0x03ACE02C MOV X0, X21
	0x03ACE030 LDR X2, [X8]
	0x03ACE034 BL 0x2142E6C
	0x03ACE038 CMP W22, 0x1
	0x03ACE03C B.LT 0x3ACE0A0
	0x03ACE040 MOV X25, X31
	0x03ACE044 AND X23, X22, 0x0
	0x03ACE048 ADD X24, X20, 0x20
	0x03ACE04C LDR W8, [X20 + 0x18]
	0x03ACE050 CMP X25, X8
	0x03ACE054 B.CS 0x3ACE0C4
	0x03ACE058 LDR X26, [X21]
	0x03ACE05C CBZ X26, 0x3ACE0C8
	0x03ACE060 LDR X22, [X24, X25, LSL #3]
	0x03ACE064 CBZ X22, 0x3ACE07C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x916000
	006 Move X21, 0x627000
	007 Move W8, [X20+1231]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x627000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x68C000
	018 Move X0, [X0+1384]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1231], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {59}
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+456]
	038 Move X1, [X8+464]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {59}
	044 Move X8, 0x68B000
	045 Move X8, [X8+1384]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call TMP_UpdateManager.RegisterTextElementForGraphicRebuild, X0
	058 Return 
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 

Method: System.Void SetLayoutDirty()

Disassembly:
	0x03ACE068 LDR X8, [X26]
	0x03ACE06C MOV X0, X22
	0x03ACE070 LDR X1, [X8 + 0x40]
	0x03ACE074 BL 0x1C16E00
	0x03ACE078 CBZ X0, 0x3ACE0CC
	0x03ACE07C LDR W9, [X26 + 0x18]
	0x03ACE080 ADD X8, X25, 0x1
	0x03ACE084 CMP X8, X9
	0x03ACE088 B.CS 0x3ACE0C4
	0x03ACE08C ADD X9, X26, X25, 0x3, LSL
	0x03ACE090 CMP X23, X8
	0x03ACE094 MOV X25, X8
	0x03ACE098 STR X22, [X9 + 0x28]
	0x03ACE09C B.NE 0x3ACE04C
	0x03ACE0A0 MOVZ W8, 0x1
	0x03ACE0A4 STRB W8, [X19 + 0x370]
	0x03ACE0A8 STRB W8, [X19 + 0x3FD]
	0x03ACE0AC LDP X20, X19, [X31 + 0x40]
	0x03ACE0B0 LDP X22, X21, [X31 + 0x30]
	0x03ACE0B4 LDP X24, X23, [X31 + 0x20]
	0x03ACE0B8 LDP X26, X25, [X31 + 0x10]
	0x03ACE0BC LDR X30, [X31], #0x50
	0x03ACE0C0 RET
	0x03ACE0C4 BL 0x1C16F28
	0x03ACE0C8 BL 0x1C16F20
	0x03ACE0CC BL 0x1C16F44
	0x03ACE0D0 MOV X1, X31
	0x03ACE0D4 BL 0x1C16DEC
	0x03ACE0D8 STR X30, [X31 - 0x20]!
	0x03ACE0DC STP X20, X19, [X31 + 0x10]
	0x03ACE0E0 ADRP X20, 0x914000
	0x03ACE0E4 LDRB W8, [X20 + 0x4D9]
	0x03ACE0E8 MOV X19, X0
	0x03ACE0EC TBNZ X8, 0x0, 0x3ACE104
	0x03ACE0F0 ADRP X0, 0x68A000
	0x03ACE0F4 LDR X0, [X0 + 0x568]
	0x03ACE0F8 BL 0x1C16CF4
	0x03ACE0FC MOVZ W8, 0x1
	0x03ACE100 STRB W8, [X20 + 0x4D9]
	0x03ACE104 LDRB W8, [X19 + 0x3FD]
	0x03ACE108 CBZ W8, 0x3ACE1C4
	0x03ACE10C LDRB W8, [X19 + 0x760]
	0x03ACE110 CBNZ W8, 0x3ACE11C
	0x03ACE114 MOVZ W8, 0x1
	0x03ACE118 STRB W8, [X19 + 0x760]
	0x03ACE11C LDRB W8, [X19 + 0x320]
	0x03ACE120 CBNZ W8, 0x3ACE148
	0x03ACE124 ADRP X8, 0x68A000
	0x03ACE128 LDR X8, [X8 + 0x568]
	0x03ACE12C LDR X0, [X8]
	0x03ACE130 LDR W8, [X0 + 0xE0]
	0x03ACE134 CBNZ W8, 0x3ACE13C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x915000
	006 Move X20, 0x626000
	007 Move W8, [X21+1232]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x629000
	015 Move X0, [X0+2336]
	016 Call 0x1C17CF4
	017 Move X0, 0x626000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1232], W8
	022 Move W8, 1
	023 Move [X19+1000], W8
	024 Move [X19+1012], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {64}
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move X9, [X8+456]
	041 Move X1, [X8+464]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {64}
	047 Move X0, X19
	048 Move X1, X31
	049 Call TMP_Text.get_rectTransform, X0
	050 Move X8, 0x629000
	051 Move X8, [X8+2336]
	052 Move X20, X0
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Call LayoutRebuilder.MarkLayoutForRebuild, X0
	062 Move W8, 1
	063 Move [X19+1020], W8
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return 

Method: System.Void SetMaterialDirty()

Disassembly:
	0x03ACE138 BL 0x1C16DFC
	0x03ACE13C MOV X0, X19
	0x03ACE140 MOV X1, X31
	0x03ACE144 BL 0x3B20260

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+952]
	003 Move X1, [X8+960]
	004 CallNoReturn X2

Method: System.Void SetAllDirty()

Disassembly:
	0x03ACE148 MOV X0, X19
	0x03ACE14C BL 0x3ACCB2C
	0x03ACE150 LDR X8, [X19]
	0x03ACE154 MOV X20, X0
	0x03ACE158 MOV X0, X19
	0x03ACE15C LDR X9, [X8 + 0x608]
	0x03ACE160 LDR X1, [X8 + 0x610]
	0x03ACE164 BLR X9
	0x03ACE168 CBZ X20, 0x3ACE1D0
	0x03ACE16C MOV X1, X0
	0x03ACE170 MOV X0, X20
	0x03ACE174 MOV X2, X31
	0x03ACE178 BL 0x3C16D40
	0x03ACE17C LDR X8, [X19]
	0x03ACE180 MOVZ W1, 0x1
	0x03ACE184 MOV X0, X19
	0x03ACE188 LDR X9, [X8 + 0x928]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+744]
	006 Move X1, [X8+752]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X8, [X19]
	009 Move X0, X19
	010 Move X9, [X8+760]
	011 Move X1, [X8+768]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X2, [X8+776]
	016 Move X1, [X8+784]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 CallNoReturn X2

Method: System.Void Rebuild(UnityEngine.UI.CanvasUpdate update)

Disassembly:
	0x03ACE18C LDR X2, [X8 + 0x930]
	0x03ACE190 BLR X9
	0x03ACE194 LDR X8, [X19]
	0x03ACE198 MOV X0, X19
	0x03ACE19C LDR X9, [X8 + 0x8A8]
	0x03ACE1A0 LDR X1, [X8 + 0x8B0]
	0x03ACE1A4 BLR X9
	0x03ACE1A8 LDR X8, [X19]
	0x03ACE1AC MOV X0, X19
	0x03ACE1B0 LDP X20, X19, [X31 + 0x10]
	0x03ACE1B4 LDR X2, [X8 + 0x2D8]
	0x03ACE1B8 LDR X1, [X8 + 0x2E0]
	0x03ACE1BC LDR X30, [X31], #0x20
	0x03ACE1C0 BR X2
	0x03ACE1C4 LDP X20, X19, [X31 + 0x10]
	0x03ACE1C8 LDR X30, [X31], #0x20
	0x03ACE1CC RET
	0x03ACE1D0 BL 0x1C16F20
	0x03ACE1D4 STR X30, [X31 - 0x20]!
	0x03ACE1D8 STP X20, X19, [X31 + 0x10]
	0x03ACE1DC ADRP X20, 0x914000
	0x03ACE1E0 LDRB W8, [X20 + 0x4DA]
	0x03ACE1E4 MOV X19, X0
	0x03ACE1E8 TBNZ X8, 0x0, 0x3ACE200
	0x03ACE1EC ADRP X0, 0x68A000
	0x03ACE1F0 LDR X0, [X0 + 0x568]
	0x03ACE1F4 BL 0x1C16CF4
	0x03ACE1F8 MOVZ W8, 0x1
	0x03ACE1FC STRB W8, [X20 + 0x4DA]
	0x03ACE200 LDRB W8, [X19 + 0x3FD]
	0x03ACE204 CBZ W8, 0x3ACE270
	0x03ACE208 ADRP X8, 0x68A000
	0x03ACE20C LDR X8, [X8 + 0x568]
	0x03ACE210 LDR X0, [X8]
	0x03ACE214 LDR W8, [X0 + 0xE0]
	0x03ACE218 CBNZ W8, 0x3ACE220
	0x03ACE21C BL 0x1C16DFC
	0x03ACE220 MOV X0, X19
	0x03ACE224 MOV X1, X31
	0x03ACE228 BL 0x3B20B70
	0x03ACE22C MOV X0, X19
	0x03ACE230 MOV X1, X31
	0x03ACE234 BL 0x3B20A78
	0x03ACE238 MOV X0, X19
	0x03ACE23C BL 0x3ACCB2C
	0x03ACE240 CBZ X0, 0x3ACE27C
	0x03ACE244 MOV X1, X31
	0x03ACE248 MOV X2, X31
	0x03ACE24C BL 0x3C16D40
	0x03ACE250 LDR X8, [X19]
	0x03ACE254 MOV X0, X19
	0x03ACE258 LDP X20, X19, [X31 + 0x10]
	0x03ACE25C MOV W1, W31
	0x03ACE260 LDR X3, [X8 + 0x928]
	0x03ACE264 LDR X2, [X8 + 0x930]
	0x03ACE268 LDR X30, [X31], #0x20
	0x03ACE26C BR X3
	0x03ACE270 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x915000
	007 Move X22, 0x626000
	008 Move W8, [X21+1233]
	009 Move X22, [X22+1432]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x626000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1233], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {69}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W20, 0
	036 JumpIfNotEqual {69}
	037 Move W8, [X19+921]
	038 Compare W8, 0
	039 JumpIfEqual {69}
	040 Move X20, [X19+896]
	041 Move W8, 0x7F800000
	042 Move S0, W8
	043 Move X0, X19
	044 Move V1, V0
	045 Move X1, X31
	046 Call TMP_Text.GetPreferredValues, X0, V0, V1
	047 Compare X20, 0
	048 JumpIfEqual {75}
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+48]
	056 Call RectTransform.set_sizeDelta, X0, X1
	057 Return 
	058 Move X0, X19
	059 Call TextMeshPro.OnPreRenderObject, X0
	060 Move W8, [X19+320]
	061 Compare W8, 0
	062 JumpIfEqual {69}
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X9, [X8+952]
	066 Move X1, [X8+960]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move [X19+320], W31
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void UpdateMaterial()

Disassembly:
	0x03ACE4BC BL 0x3AE1A88
	0x03ACE4C0 LDR X0, [X23]
	0x03ACE4C4 LDR X20, [X19 + 0x110]
	0x03ACE4C8 LDR W8, [X0 + 0xE0]
	0x03ACE4CC CBNZ W8, 0x3ACE4D4
	0x03ACE4D0 BL 0x1C16DFC
	0x03ACE4D4 MOV X0, X20
	0x03ACE4D8 MOV X1, X31
	0x03ACE4DC MOV X2, X31
	0x03ACE4E0 BL 0x3C3883C
	0x03ACE4E4 TBNZ X0, 0x0, 0x3ACE5AC
	0x03ACE4E8 LDR X0, [X22]
	0x03ACE4EC LDR X20, [X19 + 0x110]
	0x03ACE4F0 LDR W8, [X0 + 0xE0]
	0x03ACE4F4 CBNZ W8, 0x3ACE4FC
	0x03ACE4F8 BL 0x1C16DFC
	0x03ACE4FC CBZ X20, 0x3ACE924
	0x03ACE500 LDR X8, [X22]
	0x03ACE504 MOV X0, X20
	0x03ACE508 MOV X2, X31
	0x03ACE50C LDR X8, [X8 + 0xB8]
	0x03ACE510 LDR W1, [X8]
	0x03ACE514 BL 0x3C14AB8
	0x03ACE518 LDR X8, [X23]
	0x03ACE51C MOV X20, X0
	0x03ACE520 LDR W9, [X8 + 0xE0]
	0x03ACE524 CBNZ W9, 0x3ACE530
	0x03ACE528 MOV X0, X8
	0x03ACE52C BL 0x1C16DFC
	0x03ACE530 MOV X0, X20
	0x03ACE534 MOV X1, X31
	0x03ACE538 MOV X2, X31
	0x03ACE53C BL 0x3C3883C
	0x03ACE540 TBNZ X0, 0x0, 0x3ACE5AC
	0x03ACE544 LDR X0, [X19 + 0xF8]
	0x03ACE548 CBZ X0, 0x3ACE924
	0x03ACE54C MOV X1, X31
	0x03ACE550 BL 0x3AE1CF4
	0x03ACE554 CBZ X0, 0x3ACE924
	0x03ACE558 MOV X1, X31
	0x03ACE55C BL 0x3C385F8
	0x03ACE560 LDR X8, [X22]
	0x03ACE564 LDR X21, [X19 + 0x110]
	0x03ACE568 MOV W20, W0
	0x03ACE56C LDR W9, [X8 + 0xE0]
	0x03ACE570 CBNZ W9, 0x3ACE57C
	0x03ACE574 MOV X0, X8
	0x03ACE578 BL 0x1C16DFC
	0x03ACE57C CBZ X21, 0x3ACE924
	0x03ACE580 LDR X8, [X22]
	0x03ACE584 MOV X0, X21
	0x03ACE588 MOV X2, X31
	0x03ACE58C LDR X8, [X8 + 0xB8]
	0x03ACE590 LDR W1, [X8]
	0x03ACE594 BL 0x3C14AB8
	0x03ACE598 CBZ X0, 0x3ACE924
	0x03ACE59C MOV X1, X31
	0x03ACE5A0 BL 0x3C385F8
	0x03ACE5A4 CMP W20, W0
	0x03ACE5A8 B.EQ 0x3ACE6C4
	0x03ACE5AC LDR X8, [X19 + 0xF8]
	0x03ACE5B0 CBZ X8, 0x3ACE924
	0x03ACE5B4 LDR X0, [X23]
	0x03ACE5B8 LDR X20, [X8 + 0x20]
	0x03ACE5BC LDR W9, [X0 + 0xE0]
	0x03ACE5C0 CBNZ W9, 0x3ACE5C8
	0x03ACE5C4 BL 0x1C16DFC
	0x03ACE5C8 MOV X0, X20
	0x03ACE5CC MOV X1, X31
	0x03ACE5D0 MOV X2, X31
	0x03ACE5D4 BL 0x3C3883C
	0x03ACE5D8 TBZ X0, 0x0, 0x3ACE834
	0x03ACE5DC ADRP X8, 0x625000
	0x03ACE5E0 LDR X8, [X8 + 0xAC8]
	0x03ACE5E4 MOVZ W1, 0x5
	0x03ACE5E8 LDR X0, [X8]
	0x03ACE5EC BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x915000
	006 Move X21, 0x626000
	007 Move W8, [X20+1234]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x626000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1234], W8
	019 Move X0, X19
	020 Call TextMeshPro.get_renderer, X0
	021 Move X8, [X21]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {50}
	036 Move X0, [X21]
	037 Move X20, [X19+272]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, [X19+1768]
	056 Compare X0, 0
	057 JumpIfEqual {103}
	058 Move X1, X31
	059 Call Renderer.get_sharedMaterial, X0
	060 Move X8, [X21]
	061 Move X20, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {92}
	075 Move X0, [X19+1768]
	076 Compare X0, 0
	077 JumpIfEqual {103}
	078 Move X1, X31
	079 Call Renderer.get_sharedMaterial, X0
	080 Compare X0, 0
	081 JumpIfEqual {103}
	082 Move X1, X31
	083 Call Object.GetInstanceID, X0
	084 Move X8, [X19+272]
	085 Compare X8, 0
	086 JumpIfEqual {103}
	087 Move W20, W0
	088 Move X0, X8
	089 Move X1, X31
	090 Call Object.GetInstanceID, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X19+1768]
	093 Compare X0, 0
	094 JumpIfEqual {103}
	095 Move X1, [X19+272]
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X2, X31
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Call Renderer.set_sharedMaterial, X0, X1
	102 Return 
	103 Call 0x1C17F20

Method: System.Void UpdateMeshPadding()

Disassembly:
	0x03ACE5F0 CBZ X0, 0x3ACE924
	0x03ACE5F4 LDR W8, [X0 + 0x18]
	0x03ACE5F8 MOV X20, X0
	0x03ACE5FC CBZ W8, 0x3ACE928
	0x03ACE600 ADRP X8, 0x68A000
	0x03ACE604 LDR X8, [X8 + 0x5C8]
	0x03ACE608 LDR X8, [X8]
	0x03ACE60C STR X8, [X20 + 0x20]
	0x03ACE610 LDR X0, [X19 + 0xF8]
	0x03ACE614 CBZ X0, 0x3ACE924
	0x03ACE618 MOV X1, X31
	0x03ACE61C BL 0x3C389D4
	0x03ACE620 LDR W8, [X20 + 0x18]
	0x03ACE624 CMP W8, 0x1
	0x03ACE628 B.LS 0x3ACE928
	0x03ACE62C CMP W8, 0x2
	0x03ACE630 STR X0, [X20 + 0x28]
	0x03ACE634 B.EQ 0x3ACE928
	0x03ACE638 ADRP X8, 0x68A000
	0x03ACE63C LDR X8, [X8 + 0x5F8]
	0x03ACE640 MOV X0, X19
	0x03ACE644 MOV X1, X31
	0x03ACE648 LDR X8, [X8]
	0x03ACE64C STR X8, [X20 + 0x30]
	0x03ACE650 BL 0x3C32ECC
	0x03ACE654 CBZ X0, 0x3ACE924
	0x03ACE658 MOV X1, X31
	0x03ACE65C BL 0x3C389D4
	0x03ACE660 LDR W8, [X20 + 0x18]
	0x03ACE664 CMP W8, 0x3
	0x03ACE668 B.LS 0x3ACE928
	0x03ACE66C CMP W8, 0x4
	0x03ACE670 STR X0, [X20 + 0x38]
	0x03ACE674 B.EQ 0x3ACE928
	0x03ACE678 ADRP X8, 0x68A000
	0x03ACE67C LDR X8, [X8 + 0x5D0]
	0x03ACE680 MOV X0, X20
	0x03ACE684 MOV X1, X31
	0x03ACE688 LDR X8, [X8]
	0x03ACE68C STR X8, [X20 + 0x40]
	0x03ACE690 BL 0x32278CC
	0x03ACE694 ADRP X8, 0x625000
	0x03ACE698 LDR X8, [X8 + 0xA28]
	0x03ACE69C MOV X20, X0
	0x03ACE6A0 LDR X8, [X8]
	0x03ACE6A4 LDR W9, [X8 + 0xE0]
	0x03ACE6A8 CBNZ W9, 0x3ACE6B4
	0x03ACE6AC MOV X0, X8
	0x03ACE6B0 BL 0x1C16DFC
	0x03ACE6B4 MOV X0, X20
	0x03ACE6B8 MOV X1, X19
	0x03ACE6BC MOV X2, X31
	0x03ACE6C0 BL 0x3C06B0C
	0x03ACE6C4 LDR X20, [X19 + 0x110]
	0x03ACE6C8 B 0x3ACE844
	0x03ACE6CC ADRP X8, 0x68A000
	0x03ACE6D0 ADRP X9, 0x68A000
	0x03ACE6D4 LDR X8, [X8 + 0x5F0]
	0x03ACE6D8 LDR X9, [X9 + 0x5C0]
	0x03ACE6DC LDR X0, [X8]
	0x03ACE6E0 LDR X1, [X9]
	0x03ACE6E4 BL 0x2241FB8
	0x03ACE6E8 STR X0, [X19 + 0xF8]
	0x03ACE6EC MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x915000
	007 Move X20, 0x68B000
	008 Move W8, [X21+1235]
	009 Move X20, [X20+824]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x68B000
	016 Move X0, [X0+824]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1235], W8
	020 Move X0, [X20]
	021 Move X20, [X19+272]
	022 Move W21, [X19+768]
	023 Move W22, [X19+618]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X0, X20
	033 Move X3, X31
	034 Call ShaderUtilities.GetPadding, X0, X1, X2
	035 Move X0, [X19+272]
	036 Move X1, X31
	037 Move [X19+1560], S0
	038 Call ShaderUtilities.IsMaskingEnabled, X0
	039 Move X8, [X19+872]
	040 And W9, W0, 1
	041 Move [X19+775], W9
	042 Move W9, 1
	043 Move [X19+880], W9
	044 Move [X19+769], W31
	045 Compare X8, 0
	046 JumpIfEqual {68}
	047 Move W20, 5
	048 Move W9, [X8+52]
	049 Subtract X8, X20, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X19+1800]
	052 Compare X9, 0
	053 JumpIfEqual {67}
	054 Move W10, [X9+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X9]
	057 Compare X0, 0
	058 JumpIfEqual {67}
	059 Move W2, [X19+618]
	060 Move W1, [X19+768]
	061 Move X3, X31
	062 Call TMP_SubMesh.UpdateMeshPadding, X0, X1, X2
	063 Move X8, [X19+872]
	064 Add X20, X20, 1
	065 Compare X8, 0
	066 JumpIfNotEqual {48}
	067 Call 0x1C17F20
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return 
	074 Call 0x1C17F28

Method: System.Void ForceMeshUpdate(System.Boolean ignoreActiveState = False, System.Boolean forceTextReparsing = False)

Disassembly:
	0x03ACE6F0 LDR X0, [X23]
	0x03ACE6F4 LDR W8, [X0 + 0xE0]
	0x03ACE6F8 CBNZ W8, 0x3ACE700
	0x03ACE6FC BL 0x1C16DFC
	0x03ACE700 MOV X0, X20

ISIL:
	001 And W8, W1, 1
	002 Move W9, 1
	003 Move [X0+880], W9
	004 Move [X0+1708], W8
	005 Call TextMeshPro.OnPreRenderObject, X0
	006 Return 

Method: TMPro.TMP_TextInfo GetTextInfo(System.String text)

Disassembly:
	0x03ACE704 MOV X1, X31
	0x03ACE708 MOV X2, X31
	0x03ACE70C BL 0x3C3883C
	0x03ACE710 TBZ X0, 0x0, 0x3ACE790
	0x03ACE714 MOV X0, X19
	0x03ACE718 MOV X1, X31
	0x03ACE71C BL 0x3C32ECC
	0x03ACE720 CBZ X0, 0x3ACE924
	0x03ACE724 MOV X1, X31
	0x03ACE728 BL 0x3C389D4
	0x03ACE72C ADRP X8, 0x68A000
	0x03ACE730 LDR X8, [X8 + 0x5D8]
	0x03ACE734 ADRP X9, 0x62E000
	0x03ACE738 LDR X9, [X9 + 0x790]
	0x03ACE73C MOV X1, X0
	0x03ACE740 LDR X8, [X8]
	0x03ACE744 MOV X3, X31
	0x03ACE748 LDR X2, [X9]
	0x03ACE74C MOV X0, X8
	0x03ACE750 BL 0x32274B8
	0x03ACE754 ADRP X8, 0x625000
	0x03ACE758 LDR X8, [X8 + 0xA28]
	0x03ACE75C MOV X20, X0
	0x03ACE760 LDR X8, [X8]
	0x03ACE764 LDR W9, [X8 + 0xE0]
	0x03ACE768 CBNZ W9, 0x3ACE774
	0x03ACE76C MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, 1
	004 Move X3, X31
	005 Move X19, X0
	006 Call TMP_Text.SetText, X0, X1, X2
	007 Move X8, [X19]
	008 Move X1, [X19+1144]
	009 Move X0, X19
	010 Move X9, [X8+2136]
	011 Move X2, [X8+2144]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19]
	014 Move [X19+792], W31
	015 Move X0, X19
	016 Move X9, [X8+2216]
	017 Move X1, [X8+2224]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+2584]
	022 Move X1, [X8+2592]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, [X19+872]
	025 Move W8, 255
	026 Move [X19+792], W8
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return X0

Method: System.Void ClearMesh(System.Boolean updateMesh)

Disassembly:
	0x03ACE770 BL 0x1C16DFC
	0x03ACE774 MOV X0, X20
	0x03ACE778 MOV X1, X19
	0x03ACE77C LDP X20, X19, [X31 + 0x20]
	0x03ACE780 LDP X22, X21, [X31 + 0x10]
	0x03ACE784 MOV X2, X31
	0x03ACE788 LDP X30, X23, [X31], #0x30
	0x03ACE78C B 0x3C06B0C
	0x03ACE790 LDR X0, [X19 + 0xF8]
	0x03ACE794 CBZ X0, 0x3ACE924
	0x03ACE798 MOV X1, X31
	0x03ACE79C BL 0x3AE1CD0
	0x03ACE7A0 CBNZ X0, 0x3ACE7D0
	0x03ACE7A4 ADRP X8, 0x625000
	0x03ACE7A8 LDR X8, [X8 + 0xA28]
	0x03ACE7AC LDR X0, [X8]
	0x03ACE7B0 LDR W8, [X0 + 0xE0]
	0x03ACE7B4 CBNZ W8, 0x3ACE7BC
	0x03ACE7B8 BL 0x1C16DFC
	0x03ACE7BC ADRP X8, 0x68A000
	0x03ACE7C0 LDR X8, [X8 + 0x5E8]
	0x03ACE7C4 MOV X1, X31
	0x03ACE7C8 LDR X0, [X8]
	0x03ACE7CC BL 0x3C06048
	0x03ACE7D0 LDR X8, [X19 + 0xF8]
	0x03ACE7D4 CBZ X8, 0x3ACE924
	0x03ACE7D8 LDR X0, [X8 + 0x20]
	0x03ACE7DC STR X0, [X19 + 0x110]
	0x03ACE7E0 CBZ X0, 0x3ACE924
	0x03ACE7E4 ADRP X8, 0x68A000
	0x03ACE7E8 LDR X8, [X8 + 0x5E0]
	0x03ACE7EC FMOV S0, W31
	0x03ACE7F0 MOV X2, X31
	0x03ACE7F4 LDR X1, [X8]
	0x03ACE7F8 BL 0x3C15C58
	0x03ACE7FC LDR X0, [X22]
	0x03ACE800 LDR X20, [X19 + 0x110]
	0x03ACE804 LDR W8, [X0 + 0xE0]
	0x03ACE808 CBNZ W8, 0x3ACE810
	0x03ACE80C BL 0x1C16DFC
	0x03ACE810 CBZ X20, 0x3ACE924
	0x03ACE814 LDR X8, [X22]
	0x03ACE818 FMOV S0, 4
	0x03ACE81C MOV X0, X20
	0x03ACE820 MOV X2, X31
	0x03ACE824 LDR X8, [X8 + 0xB8]
	0x03ACE828 LDR X1, [X8 + 0x118]
	0x03ACE82C BL 0x3C15C58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x915000
	006 Move W8, [X21+1236]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x626000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1236], W8
	018 Move X8, [X20+872]
	019 Compare X8, 0
	020 JumpIfEqual {65}
	021 Move X8, [X8+96]
	022 Compare X8, 0
	023 JumpIfEqual {65}
	024 Move W9, [X8+24]
	025 Compare W9, 0
	026 JumpIfEqual {66}
	027 Move X9, 0x626000
	028 Move X9, [X9+1432]
	029 Move X21, [X8+32]
	030 Move X0, [X9]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X21
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move X8, [X20+872]
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {54}
	044 Compare X8, 0
	045 JumpIfEqual {65}
	046 Move X9, [X8+96]
	047 Compare X9, 0
	048 JumpIfEqual {65}
	049 Move W10, [X9+24]
	050 Compare W10, 0
	051 JumpIfEqual {66}
	052 Move X10, [X20+928]
	053 Move [X9+32], X10
	054 Compare X8, 0
	055 JumpIfEqual {65}
	056 And W1, W19, 1
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X0, X8
	060 Move X2, X31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call TMP_TextInfo.ClearMeshInfo, X0, X1
	064 Return 
	065 Call 0x1C17F20
	066 Call 0x1C17F28

Method: System.Void add_OnPreRenderText(System.Action`1<TMPro.TMP_TextInfo> value)

Disassembly:
	0x03ACE830 B 0x3ACE88C
	0x03ACE834 LDR X8, [X19 + 0xF8]
	0x03ACE838 CBZ X8, 0x3ACE924
	0x03ACE83C LDR X20, [X8 + 0x20]
	0x03ACE840 STR X20, [X19 + 0x110]
	0x03ACE844 LDR X0, [X22]
	0x03ACE848 LDR W8, [X0 + 0xE0]
	0x03ACE84C CBNZ W8, 0x3ACE854
	0x03ACE850 BL 0x1C16DFC
	0x03ACE854 CBZ X20, 0x3ACE924
	0x03ACE858 LDR X8, [X22]
	0x03ACE85C FMOV S0, 4
	0x03ACE860 MOV X0, X20
	0x03ACE864 MOV X2, X31
	0x03ACE868 LDR X8, [X8 + 0xB8]
	0x03ACE86C LDR X1, [X8 + 0x118]
	0x03ACE870 BL 0x3C15C58
	0x03ACE874 LDR X0, [X19 + 0x110]
	0x03ACE878 CBZ X0, 0x3ACE924
	0x03ACE87C MOV X1, X31
	0x03ACE880 BL 0x3C14FD4
	0x03ACE884 CMP W0, 0x1
	0x03ACE888 B.NE 0x3ACE8B4
	0x03ACE88C LDR X0, [X19 + 0x6E8]
	0x03ACE890 CBZ X0, 0x3ACE924
	0x03ACE894 MOV W1, W31
	0x03ACE898 MOV X2, X31
	0x03ACE89C BL 0x3C130BC
	0x03ACE8A0 LDR X0, [X19 + 0x6E8]
	0x03ACE8A4 CBZ X0, 0x3ACE924
	0x03ACE8A8 MOV W1, W31
	0x03ACE8AC MOV X2, X31
	0x03ACE8B0 BL 0x3C13078
	0x03ACE8B4 LDR X8, [X19]
	0x03ACE8B8 MOV X0, X19
	0x03ACE8BC LDR X9, [X8 + 0x7A8]
	0x03ACE8C0 LDR X1, [X8 + 0x7B0]
	0x03ACE8C4 BLR X9
	0x03ACE8C8 STR S0, [X19 + 0x618]
	0x03ACE8CC LDR X0, [X22]
	0x03ACE8D0 LDR X20, [X19 + 0x110]
	0x03ACE8D4 LDR W8, [X0 + 0xE0]
	0x03ACE8D8 CBNZ W8, 0x3ACE8E0
	0x03ACE8DC BL 0x1C16DFC
	0x03ACE8E0 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x915000
	009 Move W8, [X21+1237]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x68B000
	017 Move X0, [X0+1424]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1237], W8
	021 Move X24, 0x68B000
	022 Move X21, [X20+1752]
	023 Move X24, [X24+1424]
	024 Add X20, X20, 1752
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_OnPreRenderText(System.Action`1<TMPro.TMP_TextInfo> value)

Disassembly:
	0x03ACE8E4 MOV X1, X31
	0x03ACE8E8 BL 0x3B14EB8
	0x03ACE8EC LDR X1, [X19 + 0xF8]
	0x03ACE8F0 AND W8, W0, 0x1
	0x03ACE8F4 MOV X0, X19
	0x03ACE8F8 MOV X2, X31
	0x03ACE8FC STRB W8, [X19 + 0x307]
	0x03ACE900 BL 0x3B0ACD4
	0x03ACE904 LDR X8, [X19]
	0x03ACE908 MOV X0, X19
	0x03ACE90C LDP X20, X19, [X31 + 0x20]
	0x03ACE910 LDP X22, X21, [X31 + 0x10]
	0x03ACE914 LDR X2, [X8 + 0x308]
	0x03ACE918 LDR X1, [X8 + 0x310]
	0x03ACE91C LDP X30, X23, [X31], #0x30
	0x03ACE920 BR X2
	0x03ACE924 BL 0x1C16F20
	0x03ACE928 BL 0x1C16F28
	0x03ACE92C SUB X31, X31, 0x140
	0x03ACE930 STR D14, [X31 + 0xD0]
	0x03ACE934 STP D13, D12, [X31 + 0xE0]
	0x03ACE938 STP D11, D10, [X31 + 0xF0]
	0x03ACE93C STP D9, D8, [X31 + 0x100]
	0x03ACE940 STP X29, X30, [X31 + 0x110]
	0x03ACE944 STP X22, X21, [X31 + 0x120]
	0x03ACE948 STP X20, X19, [X31 + 0x130]
	0x03ACE94C ADRP X20, 0x914000
	0x03ACE950 ADRP X21, 0x68A000
	0x03ACE954 LDRB W8, [X20 + 0x4DD]
	0x03ACE958 LDR X21, [X21 + 0x338]
	0x03ACE95C MOV X19, X0
	0x03ACE960 TBNZ X8, 0x0, 0x3ACE984
	0x03ACE964 ADRP X0, 0x625000
	0x03ACE968 LDR X0, [X0 + 0x598]
	0x03ACE96C BL 0x1C16CF4
	0x03ACE970 ADRP X0, 0x68A000
	0x03ACE974 LDR X0, [X0 + 0x338]
	0x03ACE978 BL 0x1C16CF4
	0x03ACE97C MOVZ W8, 0x1
	0x03ACE980 STRB W8, [X20 + 0x4DD]
	0x03ACE984 LDR X0, [X21]
	0x03ACE988 LDR X20, [X19 + 0x110]
	0x03ACE98C LDR W8, [X0 + 0xE0]
	0x03ACE990 CBNZ W8, 0x3ACE998
	0x03ACE994 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x915000
	009 Move W8, [X21+1238]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x68B000
	017 Move X0, [X0+1424]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1238], W8
	021 Move X24, 0x68B000
	022 Move X21, [X20+1752]
	023 Move X24, [X24+1424]
	024 Add X20, X20, 1752
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void UpdateGeometry(UnityEngine.Mesh mesh, System.Int32 index)

Disassembly:
	0x03ACE998 CBZ X20, 0x3ACEB9C
	0x03ACE99C LDR X8, [X21]
	0x03ACE9A0 MOV X0, X20
	0x03ACE9A4 MOV X2, X31
	0x03ACE9A8 LDR X8, [X8 + 0xB8]
	0x03ACE9AC LDR W1, [X8 + 0x8C]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call Mesh.RecalculateBounds, X0
	006 Return 
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Void UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags flags)

Disassembly:
	0x03ACE9B0 BL 0x3C14D08
	0x03ACE9B4 TBZ X0, 0x0, 0x3ACEB78
	0x03ACE9B8 LDR X0, [X21]
	0x03ACE9BC LDR X20, [X19 + 0x110]
	0x03ACE9C0 LDR W8, [X0 + 0xE0]
	0x03ACE9C4 CBNZ W8, 0x3ACE9CC
	0x03ACE9C8 BL 0x1C16DFC
	0x03ACE9CC CBZ X20, 0x3ACEB9C
	0x03ACE9D0 LDR X8, [X21]
	0x03ACE9D4 MOV X0, X20
	0x03ACE9D8 MOV X2, X31
	0x03ACE9DC LDR X8, [X8 + 0xB8]
	0x03ACE9E0 LDR W1, [X8 + 0x8C]
	0x03ACE9E4 BL 0x3C14AB8
	0x03ACE9E8 ADRP X8, 0x625000
	0x03ACE9EC LDR X8, [X8 + 0x598]
	0x03ACE9F0 MOV X20, X0
	0x03ACE9F4 LDR X8, [X8]
	0x03ACE9F8 LDR W9, [X8 + 0xE0]
	0x03ACE9FC CBNZ W9, 0x3ACEA08
	0x03ACEA00 MOV X0, X8
	0x03ACEA04 BL 0x1C16DFC
	0x03ACEA08 MOV X0, X20
	0x03ACEA0C MOV X1, X31
	0x03ACEA10 MOV X2, X31
	0x03ACEA14 BL 0x3C3883C
	0x03ACEA18 TBNZ X0, 0x0, 0x3ACEB78
	0x03ACEA1C LDR X0, [X21]
	0x03ACEA20 LDR X20, [X19 + 0x110]
	0x03ACEA24 LDR W8, [X0 + 0xE0]
	0x03ACEA28 CBNZ W8, 0x3ACEA30
	0x03ACEA2C BL 0x1C16DFC
	0x03ACEA30 CBZ X20, 0x3ACEB9C
	0x03ACEA34 LDR X8, [X21]
	0x03ACEA38 MOV X0, X20
	0x03ACEA3C MOV X2, X31
	0x03ACEA40 LDR X8, [X8 + 0xB8]
	0x03ACEA44 LDR W1, [X8 + 0x94]
	0x03ACEA48 BL 0x3C15FDC
	0x03ACEA4C ADRP X20, 0x90A000
	0x03ACEA50 LDRB W8, [X20 + 0x783]
	0x03ACEA54 MOV V11.16B, V0.16B
	0x03ACEA58 MOV V12.16B, V1.16B
	0x03ACEA5C MOV V13.16B, V2.16B
	0x03ACEA60 CBNZ W8, 0x3ACEA78
	0x03ACEA64 ADRP X0, 0x625000
	0x03ACEA68 LDR X0, [X0 + 0x5A0]
	0x03ACEA6C BL 0x1C16CF4
	0x03ACEA70 MOVZ W8, 0x1
	0x03ACEA74 STRB W8, [X20 + 0x783]
	0x03ACEA78 ADRP X20, 0x625000
	0x03ACEA7C LDR X20, [X20 + 0x5A0]
	0x03ACEA80 ADRP X9, 0xFFFFFFFFFD01C000
	0x03ACEA84 LDR V2, [X9 + 0x104]
	0x03ACEA88 MOV X0, X31
	0x03ACEA8C LDR X8, [X20]
	0x03ACEA90 FMUL S0, S11, S2
	0x03ACEA94 FMUL S1, S12, S2
	0x03ACEA98 LDR X8, [X8 + 0xB8]
	0x03ACEA9C FMUL S2, S13, S2
	0x03ACEAA0 LDP S10, S9, [X8]
	0x03ACEAA4 LDR V8, [X8 + 0x8]
	0x03ACEAA8 BL 0x3C2A574
	0x03ACEAAC ADRP X22, 0x90A000
	0x03ACEAB0 LDRB W8, [X22 + 0x85B]
	0x03ACEAB4 MOV V11.16B, V0.16B
	0x03ACEAB8 MOV V12.16B, V1.16B
	0x03ACEABC MOV V13.16B, V2.16B
	0x03ACEAC0 MOV V14.16B, V3.16B
	0x03ACEAC4 CBNZ W8, 0x3ACEADC
	0x03ACEAC8 ADRP X0, 0x625000
	0x03ACEACC LDR X0, [X0 + 0x5A0]
	0x03ACEAD0 BL 0x1C16CF4
	0x03ACEAD4 MOVZ W8, 0x1
	0x03ACEAD8 STRB W8, [X22 + 0x85B]
	0x03ACEADC LDR X8, [X20]
	0x03ACEAE0 MOV V1.16B, V9.16B
	0x03ACEAE4 MOV V2.16B, V8.16B
	0x03ACEAE8 MOV V3.16B, V11.16B
	0x03ACEAEC LDR X8, [X8 + 0xB8]
	0x03ACEAF0 MOV V4.16B, V12.16B
	0x03ACEAF4 MOV V5.16B, V13.16B
	0x03ACEAF8 MOV V6.16B, V14.16B
	0x03ACEAFC LDR V0, [X8 + 0x14]
	0x03ACEB00 LDUR X9, [X8 + 0xC]
	0x03ACEB04 ADD X8, X31, 0x50
	0x03ACEB08 MOV X0, X31
	0x03ACEB0C STR S0, [X31 + 0x8]
	0x03ACEB10 MOV V0.16B, V10.16B
	0x03ACEB14 STR X9, [X31]
	0x03ACEB18 BL 0x3C26FA8
	0x03ACEB1C LDP V1, V0, [X31 + 0x70]
	0x03ACEB20 LDP V3, V2, [X31 + 0x50]
	0x03ACEB24 ADD X8, X19, 0x714
	0x03ACEB28 STP V1, V0, [X31 + 0xB0]
	0x03ACEB2C STP V3, V2, [X31 + 0x90]
	0x03ACEB30 STP V1, V0, [X8 + 0x20]
	0x03ACEB34 STP V3, V2, [X8]
	0x03ACEB38 LDR X8, [X21]
	0x03ACEB3C LDR X0, [X19 + 0x110]
	0x03ACEB40 LDP V0, V1, [X31 + 0x90]
	0x03ACEB44 LDP V2, V3, [X31 + 0xB0]
	0x03ACEB48 LDR X8, [X8 + 0xB8]
	0x03ACEB4C LDR W1, [X8 + 0x90]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+872]
	010 Compare X8, 0
	011 JumpIfEqual {146}
	012 Move W8, [X8+52]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X8, X8, X8
	015 Move X19, X0
	016 Move W20, W1
	017 Move X22, X31
	018 Move X23, X8
	019 ShiftRight X23, 60
	020 And X23, X23, 0x7FFFFFF
	021 Move W24, 4
	022 Subtract X25, X24, 4
	023 Compare X22, 0
	024 JumpIfEqual {54}
	025 Move X8, [X19+1800]
	026 Compare X8, 0
	027 JumpIfEqual {146}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X8]
	031 Compare X0, 0
	032 JumpIfEqual {146}
	033 Move X1, X31
	034 Call TMP_SubMesh.get_mesh, X0
	035 Move X21, X0
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {59}
	040 Move TEMP, X20
	041 And TEMP, TEMP, 2
	042 Compare TEMP, 2
	043 JumpIfEqual {78}
	044 Move TEMP, X20
	045 And TEMP, TEMP, 4
	046 Compare TEMP, 4
	047 JumpIfEqual {97}
	048 Move TEMP, X20
	049 And TEMP, TEMP, 16
	050 Compare TEMP, 16
	051 JumpIfEqual {116}
	052 Compare X21, 0
	053 JumpIfNotEqual {131}
	054 Move X21, [X19+928]
	055 Move TEMP, X20
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {40}
	059 Move X8, [X19+872]
	060 Compare X8, 0
	061 JumpIfEqual {146}
	062 Move X8, [X8+96]
	063 Compare X8, 0
	064 JumpIfEqual {146}
	065 Move W9, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare X21, 0
	068 JumpIfEqual {146}
	069 Add X8, X8, X22
	070 Move X1, [X8+48]
	071 Move X0, X21
	072 Move X2, X31
	073 Call Mesh.set_vertices, X0, X1
	074 Move TEMP, X20
	075 And TEMP, TEMP, 2
	076 Compare TEMP, 2
	077 JumpIfNotEqual {44}
	078 Move X8, [X19+872]
	079 Compare X8, 0
	080 JumpIfEqual {146}
	081 Move X8, [X8+96]
	082 Compare X8, 0
	083 JumpIfEqual {146}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Compare X21, 0
	087 JumpIfEqual {146}
	088 Add X8, X8, X22
	089 Move X1, [X8+72]
	090 Move X0, X21
	091 Move X2, X31
	092 Call Mesh.set_uv, X0, X1
	093 Move TEMP, X20
	094 And TEMP, TEMP, 4
	095 Compare TEMP, 4
	096 JumpIfNotEqual {48}
	097 Move X8, [X19+872]
	098 Compare X8, 0
	099 JumpIfEqual {146}
	100 Move X8, [X8+96]
	101 Compare X8, 0
	102 JumpIfEqual {146}
	103 Move W9, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare X21, 0
	106 JumpIfEqual {146}
	107 Add X8, X8, X22
	108 Move X1, [X8+80]
	109 Move X0, X21
	110 Move X2, X31
	111 Call Mesh.set_uv2, X0, X1
	112 Move TEMP, X20
	113 And TEMP, TEMP, 16
	114 Compare TEMP, 16
	115 JumpIfNotEqual {52}
	116 Move X8, [X19+872]
	117 Compare X8, 0
	118 JumpIfEqual {146}
	119 Move X8, [X8+96]
	120 Compare X8, 0
	121 JumpIfEqual {146}
	122 Move W9, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Compare X21, 0
	125 JumpIfEqual {146}
	126 Add X8, X8, X22
	127 Move X1, [X8+88]
	128 Move X0, X21
	129 Move X2, X31
	130 Call Mesh.set_colors32, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Call Mesh.RecalculateBounds, X0
	134 Add X22, X22, 80
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X24, X24, 1
	137 Move X20, [X31+48]
	138 Move X19, [X31+56]
	139 Move X22, [X31+32]
	140 Move X21, [X31+40]
	141 Move X24, [X31+16]
	142 Move X23, [X31+24]
	143 Move X30, [X31+64]
	144 Move X25, [X31+72]
	145 Return 
	146 Call 0x1C17F20
	147 Call 0x1C17F28

Method: System.Void UpdateVertexData()

Disassembly:
	0x03ACEB50 STP V0, V1, [X31 + 0x50]
	0x03ACEB54 STP V2, V3, [X31 + 0x70]
	0x03ACEB58 CBZ X0, 0x3ACEB9C
	0x03ACEB5C LDP V0, V1, [X31 + 0x50]
	0x03ACEB60 LDP V2, V3, [X31 + 0x70]
	0x03ACEB64 ADD X2, X31, 0x10
	0x03ACEB68 MOV X3, X31
	0x03ACEB6C STP V0, V1, [X31 + 0x10]
	0x03ACEB70 STP V2, V3, [X31 + 0x30]
	0x03ACEB74 BL 0x3C15D84
	0x03ACEB78 LDP X20, X19, [X31 + 0x130]
	0x03ACEB7C LDP X22, X21, [X31 + 0x120]
	0x03ACEB80 LDP X29, X30, [X31 + 0x110]
	0x03ACEB84 LDP D9, D8, [X31 + 0x100]
	0x03ACEB88 LDP D11, D10, [X31 + 0xF0]
	0x03ACEB8C LDP D13, D12, [X31 + 0xE0]
	0x03ACEB90 LDR V14, [X31 + 0xD0]
	0x03ACEB94 ADD X31, X31, 0x140
	0x03ACEB98 RET
	0x03ACEB9C BL 0x1C16F20
	0x03ACEBA0 STP X30, X21, [X31 - 0x20]!
	0x03ACEBA4 STP X20, X19, [X31 + 0x10]
	0x03ACEBA8 ADRP X20, 0x914000
	0x03ACEBAC ADRP X21, 0x68A000
	0x03ACEBB0 LDRB W8, [X20 + 0x4E1]
	0x03ACEBB4 LDR X21, [X21 + 0x338]
	0x03ACEBB8 MOV X19, X0
	0x03ACEBBC TBNZ X8, 0x0, 0x3ACEBD4
	0x03ACEBC0 ADRP X0, 0x68A000
	0x03ACEBC4 LDR X0, [X0 + 0x338]
	0x03ACEBC8 BL 0x1C16CF4
	0x03ACEBCC MOVZ W8, 0x1
	0x03ACEBD0 STRB W8, [X20 + 0x4E1]
	0x03ACEBD4 LDR X0, [X21]
	0x03ACEBD8 LDR X20, [X19 + 0x110]
	0x03ACEBDC LDR W8, [X0 + 0xE0]
	0x03ACEBE0 CBNZ W8, 0x3ACEBE8
	0x03ACEBE4 BL 0x1C16DFC
	0x03ACEBE8 CBZ X20, 0x3ACEC94
	0x03ACEBEC LDR X8, [X21]
	0x03ACEBF0 MOV X0, X20
	0x03ACEBF4 MOV X2, X31
	0x03ACEBF8 LDR X8, [X8 + 0xB8]
	0x03ACEBFC LDR W1, [X8 + 0x9C]
	0x03ACEC00 BL 0x3C14D08
	0x03ACEC04 TBZ X0, 0x0, 0x3ACEC88
	0x03ACEC08 LDR X0, [X21]
	0x03ACEC0C LDR X20, [X19 + 0x110]
	0x03ACEC10 LDR W8, [X0 + 0xE0]
	0x03ACEC14 CBNZ W8, 0x3ACEC1C
	0x03ACEC18 BL 0x1C16DFC
	0x03ACEC1C CBZ X20, 0x3ACEC94
	0x03ACEC20 LDR X8, [X21]
	0x03ACEC24 MOV X0, X20
	0x03ACEC28 MOV X2, X31
	0x03ACEC2C LDR X8, [X8 + 0xB8]
	0x03ACEC30 LDR X1, [X8 + 0xF8]
	0x03ACEC34 BL 0x3C14E3C
	0x03ACEC38 LDR X0, [X19 + 0x110]
	0x03ACEC3C CBZ X0, 0x3ACEC94
	0x03ACEC40 LDR X8, [X21]
	0x03ACEC44 MOV X2, X31
	0x03ACEC48 LDR X8, [X8 + 0xB8]
	0x03ACEC4C LDR X1, [X8 + 0x100]
	0x03ACEC50 BL 0x3C14E80
	0x03ACEC54 LDR X0, [X19 + 0x110]
	0x03ACEC58 CBZ X0, 0x3ACEC94
	0x03ACEC5C LDR X8, [X21]
	0x03ACEC60 MOV X2, X31
	0x03ACEC64 LDR X8, [X8 + 0xB8]
	0x03ACEC68 LDR X1, [X8 + 0x108]
	0x03ACEC6C BL 0x3C14E80
	0x03ACEC70 MOVZ W8, 0x1
	0x03ACEC74 STRB W8, [X19 + 0x307]
	0x03ACEC78 MOV X0, X19
	0x03ACEC7C LDP X20, X19, [X31 + 0x10]
	0x03ACEC80 LDP X30, X21, [X31], #0x20
	0x03ACEC84 B 0x3ACEC98
	0x03ACEC88 LDP X20, X19, [X31 + 0x10]
	0x03ACEC8C LDP X30, X21, [X31], #0x20
	0x03ACEC90 RET
	0x03ACEC94 BL 0x1C16F20
	0x03ACEC98 STR X30, [X31 - 0x20]!
	0x03ACEC9C STP X20, X19, [X31 + 0x10]
	0x03ACECA0 ADRP X20, 0x914000
	0x03ACECA4 LDRB W8, [X20 + 0x4E3]
	0x03ACECA8 MOV X19, X0
	0x03ACECAC TBNZ X8, 0x0, 0x3ACECC4
	0x03ACECB0 ADRP X0, 0x625000
	0x03ACECB4 LDR X0, [X0 + 0x598]
	0x03ACECB8 BL 0x1C16CF4
	0x03ACECBC MOVZ W8, 0x1
	0x03ACECC0 STRB W8, [X20 + 0x4E3]
	0x03ACECC4 LDRB W8, [X19 + 0x307]
	0x03ACECC8 CBZ W8, 0x3ACED0C
	0x03ACECCC ADRP X8, 0x625000
	0x03ACECD0 LDR X8, [X8 + 0x598]
	0x03ACECD4 LDR X20, [X19 + 0x130]
	0x03ACECD8 LDR X0, [X8]
	0x03ACECDC LDR W8, [X0 + 0xE0]
	0x03ACECE0 CBNZ W8, 0x3ACECE8
	0x03ACECE4 BL 0x1C16DFC
	0x03ACECE8 MOV X0, X20
	0x03ACECEC MOV X1, X31
	0x03ACECF0 MOV X2, X31
	0x03ACECF4 BL 0x3C3883C
	0x03ACECF8 TBZ X0, 0x0, 0x3ACED0C
	0x03ACECFC MOV X0, X19
	0x03ACED00 LDP X20, X19, [X31 + 0x10]
	0x03ACED04 LDR X30, [X31], #0x20
	0x03ACED08 B 0x3ACEE0C
	0x03ACED0C LDP X20, X19, [X31 + 0x10]
	0x03ACED10 LDR X30, [X31], #0x20
	0x03ACED14 RET
	0x03ACED18 STP X30, X21, [X31 - 0x20]!
	0x03ACED1C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x915000
	010 Move W8, [X20+1239]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x68B000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1239], W8
	021 Move X8, [X19+872]
	022 Compare X8, 0
	023 JumpIfEqual {135}
	024 Move W8, [X8+52]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X22, 0x68B000
	027 Move X22, [X22+840]
	028 Add X8, X8, X8
	029 Move X21, X31
	030 Move X23, X8
	031 ShiftRight X23, 60
	032 And X23, X23, 0x7FFFFFF
	033 Move W24, 4
	034 Subtract X25, X24, 4
	035 Compare X21, 0
	036 JumpIfEqual {65}
	037 Move X8, [X19+872]
	038 Compare X8, 0
	039 JumpIfEqual {135}
	040 Move X20, [X8+96]
	041 Compare X20, 0
	042 JumpIfEqual {135}
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W8, [X20+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X20, X21
	051 Add X0, X8, 32
	052 Move X1, X31
	053 Call TMP_MeshInfo.ClearUnusedVertices, X0
	054 Move X8, [X19+1800]
	055 Compare X8, 0
	056 JumpIfEqual {135}
	057 Move W9, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X8]
	060 Compare X0, 0
	061 JumpIfEqual {135}
	062 Move X1, X31
	063 Call TMP_SubMesh.get_mesh, X0
	064 Move X20, X0
	065 Move X20, [X19+928]
	066 Move X8, [X19+872]
	067 Compare X8, 0
	068 JumpIfEqual {135}
	069 Move X8, [X8+96]
	070 Compare X8, 0
	071 JumpIfEqual {135}
	072 Move W9, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X20, 0
	075 JumpIfEqual {135}
	076 Add X8, X8, X21
	077 Move X1, [X8+48]
	078 Move X0, X20
	079 Move X2, X31
	080 Call Mesh.set_vertices, X0, X1
	081 Move X8, [X19+872]
	082 Compare X8, 0
	083 JumpIfEqual {135}
	084 Move X8, [X8+96]
	085 Compare X8, 0
	086 JumpIfEqual {135}
	087 Move W9, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X8, X21
	090 Move X1, [X8+72]
	091 Move X0, X20
	092 Move X2, X31
	093 Call Mesh.set_uv, X0, X1
	094 Move X8, [X19+872]
	095 Compare X8, 0
	096 JumpIfEqual {135}
	097 Move X8, [X8+96]
	098 Compare X8, 0
	099 JumpIfEqual {135}
	100 Move W9, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X8, X8, X21
	103 Move X1, [X8+80]
	104 Move X0, X20
	105 Move X2, X31
	106 Call Mesh.set_uv2, X0, X1
	107 Move X8, [X19+872]
	108 Compare X8, 0
	109 JumpIfEqual {135}
	110 Move X8, [X8+96]
	111 Compare X8, 0
	112 JumpIfEqual {135}
	113 Move W9, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X8, X21
	116 Move X1, [X8+88]
	117 Move X0, X20
	118 Move X2, X31
	119 Call Mesh.set_colors32, X0, X1
	120 Move X0, X20
	121 Move X1, X31
	122 Call Mesh.RecalculateBounds, X0
	123 Add X21, X21, 80
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X24, X24, 1
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X24, [X31+16]
	131 Move X23, [X31+24]
	132 Move X30, [X31+64]
	133 Move X25, [X31+72]
	134 Return 
	135 Call 0x1C17F20
	136 Call 0x1C17F28

Method: System.Void UpdateFontAsset()

Disassembly:
	0x03ACED20 ADRP X20, 0x914000
	0x03ACED24 ADRP X21, 0x68A000
	0x03ACED28 LDRB W8, [X20 + 0x4E2]
	0x03ACED2C LDR X21, [X21 + 0x338]

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1736]
	003 Move X1, [X8+1744]
	004 CallNoReturn X2

Method: System.Void CalculateLayoutInputHorizontal()

Disassembly:
	0x03ACED30 MOV X19, X0

ISIL:
	001 Return 

Method: System.Void CalculateLayoutInputVertical()

Disassembly:
	0x03ACED34 TBNZ X8, 0x0, 0x3ACED4C

ISIL:
	001 Return 

Method: System.Void Awake()

Disassembly:
	0x03ACED38 ADRP X0, 0x68A000
	0x03ACED3C LDR X0, [X0 + 0x338]
	0x03ACED40 BL 0x1C16CF4
	0x03ACED44 MOVZ W8, 0x1
	0x03ACED48 STRB W8, [X20 + 0x4E2]
	0x03ACED4C LDR X0, [X21]
	0x03ACED50 LDR X20, [X19 + 0x110]
	0x03ACED54 LDR W8, [X0 + 0xE0]
	0x03ACED58 CBNZ W8, 0x3ACED60
	0x03ACED5C BL 0x1C16DFC
	0x03ACED60 CBZ X20, 0x3ACEE08
	0x03ACED64 LDR X8, [X21]
	0x03ACED68 MOV X0, X20
	0x03ACED6C MOV X2, X31
	0x03ACED70 LDR X8, [X8 + 0xB8]
	0x03ACED74 LDR W1, [X8 + 0x9C]
	0x03ACED78 BL 0x3C14D08
	0x03ACED7C TBZ X0, 0x0, 0x3ACEDFC
	0x03ACED80 LDR X0, [X21]
	0x03ACED84 LDR X20, [X19 + 0x110]
	0x03ACED88 LDR W8, [X0 + 0xE0]
	0x03ACED8C CBNZ W8, 0x3ACED94
	0x03ACED90 BL 0x1C16DFC
	0x03ACED94 CBZ X20, 0x3ACEE08
	0x03ACED98 LDR X8, [X21]
	0x03ACED9C MOV X0, X20
	0x03ACEDA0 MOV X2, X31
	0x03ACEDA4 LDR X8, [X8 + 0xB8]
	0x03ACEDA8 LDR X1, [X8 + 0xF8]
	0x03ACEDAC BL 0x3C14E80
	0x03ACEDB0 LDR X0, [X19 + 0x110]
	0x03ACEDB4 CBZ X0, 0x3ACEE08
	0x03ACEDB8 LDR X8, [X21]
	0x03ACEDBC MOV X2, X31
	0x03ACEDC0 LDR X8, [X8 + 0xB8]
	0x03ACEDC4 LDR X1, [X8 + 0x100]
	0x03ACEDC8 BL 0x3C14E80
	0x03ACEDCC LDR X0, [X19 + 0x110]
	0x03ACEDD0 CBZ X0, 0x3ACEE08
	0x03ACEDD4 LDR X8, [X21]
	0x03ACEDD8 MOV X2, X31
	0x03ACEDDC LDR X8, [X8 + 0xB8]
	0x03ACEDE0 LDR X1, [X8 + 0x108]
	0x03ACEDE4 BL 0x3C14E80
	0x03ACEDE8 STRB W31, [X19 + 0x307]
	0x03ACEDEC MOV X0, X19
	0x03ACEDF0 LDP X20, X19, [X31 + 0x10]
	0x03ACEDF4 LDP X30, X21, [X31], #0x20
	0x03ACEDF8 B 0x3ACEC98
	0x03ACEDFC LDP X20, X19, [X31 + 0x10]
	0x03ACEE00 LDP X30, X21, [X31], #0x20
	0x03ACEE04 RET
	0x03ACEE08 BL 0x1C16F20
	0x03ACEE0C STP X30, X21, [X31 - 0x20]!
	0x03ACEE10 STP X20, X19, [X31 + 0x10]
	0x03ACEE14 ADRP X21, 0x914000
	0x03ACEE18 ADRP X20, 0x629000
	0x03ACEE1C LDRB W8, [X21 + 0x4EB]
	0x03ACEE20 LDR X20, [X20 + 0xCA0]
	0x03ACEE24 MOV X19, X0
	0x03ACEE28 TBNZ X8, 0x0, 0x3ACEE4C
	0x03ACEE2C ADRP X0, 0x629000
	0x03ACEE30 LDR X0, [X0 + 0xCA0]
	0x03ACEE34 BL 0x1C16CF4
	0x03ACEE38 ADRP X0, 0x68A000
	0x03ACEE3C LDR X0, [X0 + 0x600]
	0x03ACEE40 BL 0x1C16CF4
	0x03ACEE44 MOVZ W8, 0x1
	0x03ACEE48 STRB W8, [X21 + 0x4EB]
	0x03ACEE4C LDR X0, [X20]
	0x03ACEE50 LDR X21, [X19 + 0x110]
	0x03ACEE54 BL 0x1C16F10
	0x03ACEE58 MOV X1, X21
	0x03ACEE5C MOV X2, X31
	0x03ACEE60 MOV X20, X0
	0x03ACEE64 BL 0x3C145DC
	0x03ACEE68 LDR X0, [X19 + 0x110]
	0x03ACEE6C CBZ X0, 0x3ACEECC
	0x03ACEE70 MOV X1, X31
	0x03ACEE74 BL 0x3C15294
	0x03ACEE78 CBZ X20, 0x3ACEECC
	0x03ACEE7C ADRP X21, 0x68A000
	0x03ACEE80 LDR X21, [X21 + 0x600]
	0x03ACEE84 MOV X1, X0
	0x03ACEE88 MOV X0, X20
	0x03ACEE8C MOV X2, X31
	0x03ACEE90 BL 0x3C152D0
	0x03ACEE94 MOV X0, X20
	0x03ACEE98 MOV X1, X31
	0x03ACEE9C BL 0x3C389D4
	0x03ACEEA0 LDR X1, [X21]
	0x03ACEEA4 MOV X2, X31
	0x03ACEEA8 BL 0x321B938
	0x03ACEEAC MOV X1, X0
	0x03ACEEB0 MOV X0, X20
	0x03ACEEB4 MOV X2, X31
	0x03ACEEB8 BL 0x3C38A84
	0x03ACEEBC STR X20, [X19 + 0x130]
	0x03ACEEC0 LDP X20, X19, [X31 + 0x10]
	0x03ACEEC4 LDP X30, X21, [X31], #0x20
	0x03ACEEC8 RET
	0x03ACEECC BL 0x1C16F20
	0x03ACEED0 STR X30, [X31 - 0x30]!
	0x03ACEED4 STP X22, X21, [X31 + 0x10]
	0x03ACEED8 STP X20, X19, [X31 + 0x20]
	0x03ACEEDC ADRP X22, 0x914000
	0x03ACEEE0 ADRP X21, 0x625000
	0x03ACEEE4 LDRB W8, [X22 + 0x4E4]
	0x03ACEEE8 LDR X21, [X21 + 0x598]
	0x03ACEEEC MOV X20, X1
	0x03ACEEF0 MOV X19, X0
	0x03ACEEF4 TBNZ X8, 0x0, 0x3ACEF0C
	0x03ACEEF8 ADRP X0, 0x625000
	0x03ACEEFC LDR X0, [X0 + 0x598]
	0x03ACEF00 BL 0x1C16CF4
	0x03ACEF04 MOVZ W8, 0x1
	0x03ACEF08 STRB W8, [X22 + 0x4E4]
	0x03ACEF0C LDR X0, [X21]
	0x03ACEF10 LDR X21, [X19 + 0x130]
	0x03ACEF14 LDR W8, [X0 + 0xE0]
	0x03ACEF18 CBNZ W8, 0x3ACEF20
	0x03ACEF1C BL 0x1C16DFC
	0x03ACEF20 MOV X0, X21
	0x03ACEF24 MOV X1, X31
	0x03ACEF28 MOV X2, X31
	0x03ACEF2C BL 0x3C3883C
	0x03ACEF30 TBNZ X0, 0x0, 0x3ACEF68
	0x03ACEF34 LDR X0, [X19 + 0x130]
	0x03ACEF38 CBZ X0, 0x3ACEFDC
	0x03ACEF3C MOV X1, X31
	0x03ACEF40 BL 0x3C385F8
	0x03ACEF44 CBZ X20, 0x3ACEFDC
	0x03ACEF48 MOV W21, W0
	0x03ACEF4C MOV X0, X20
	0x03ACEF50 MOV X1, X31
	0x03ACEF54 BL 0x3C385F8
	0x03ACEF58 CMP W21, W0
	0x03ACEF5C B.NE 0x3ACEF68
	0x03ACEF60 LDR X0, [X19 + 0x130]
	0x03ACEF64 B 0x3ACEF84
	0x03ACEF68 LDR X8, [X19]
	0x03ACEF6C MOV X0, X19
	0x03ACEF70 MOV X1, X20
	0x03ACEF74 LDR X9, [X8 + 0x738]
	0x03ACEF78 LDR X2, [X8 + 0x740]
	0x03ACEF7C BLR X9
	0x03ACEF80 STR X0, [X19 + 0x130]
	0x03ACEF84 LDR X8, [X19]
	0x03ACEF88 STR X0, [X19 + 0x110]
	0x03ACEF8C MOV X0, X19
	0x03ACEF90 LDR X9, [X8 + 0x7A8]
	0x03ACEF94 LDR X1, [X8 + 0x7B0]
	0x03ACEF98 BLR X9
	0x03ACEF9C LDR X8, [X19]
	0x03ACEFA0 STR S0, [X19 + 0x618]
	0x03ACEFA4 MOV X0, X19
	0x03ACEFA8 LDR X9, [X8 + 0x2F8]
	0x03ACEFAC LDR X1, [X8 + 0x300]
	0x03ACEFB0 BLR X9
	0x03ACEFB4 LDR X8, [X19]
	0x03ACEFB8 MOV X0, X19
	0x03ACEFBC LDR X9, [X8 + 0x308]
	0x03ACEFC0 LDR X1, [X8 + 0x310]
	0x03ACEFC4 BLR X9
	0x03ACEFC8 LDR X0, [X19 + 0x110]
	0x03ACEFCC LDP X20, X19, [X31 + 0x20]
	0x03ACEFD0 LDP X22, X21, [X31 + 0x10]
	0x03ACEFD4 LDR X30, [X31], #0x30
	0x03ACEFD8 RET
	0x03ACEFDC BL 0x1C16F20
	0x03ACEFE0 STR X30, [X31 - 0x40]!
	0x03ACEFE4 STP X24, X23, [X31 + 0x10]
	0x03ACEFE8 STP X22, X21, [X31 + 0x20]
	0x03ACEFEC STP X20, X19, [X31 + 0x30]
	0x03ACEFF0 ADRP X20, 0x914000
	0x03ACEFF4 LDRB W8, [X20 + 0x4E5]
	0x03ACEFF8 MOV X19, X0
	0x03ACEFFC TBNZ X8, 0x0, 0x3ACF02C
	0x03ACF000 ADRP X0, 0x62B000
	0x03ACF004 LDR X0, [X0 + 0x7A0]
	0x03ACF008 BL 0x1C16CF4
	0x03ACF00C ADRP X0, 0x689000
	0x03ACF010 LDR X0, [X0 + 0x608]
	0x03ACF014 BL 0x1C16CF4
	0x03ACF018 ADRP X0, 0x689000
	0x03ACF01C LDR X0, [X0 + 0x368]
	0x03ACF020 BL 0x1C16CF4
	0x03ACF024 MOVZ W8, 0x1
	0x03ACF028 STRB W8, [X20 + 0x4E5]
	0x03ACF02C LDR X8, [X19 + 0x368]
	0x03ACF030 CBZ X8, 0x3ACF174
	0x03ACF034 LDR X9, [X19 + 0x138]
	0x03ACF038 LDR W20, [X8 + 0x34]
	0x03ACF03C ADD X21, X19, 0x138
	0x03ACF040 CBZ X9, 0x3ACF088
	0x03ACF044 LDR W8, [X9 + 0x18]
	0x03ACF048 CMP W20, W8
	0x03ACF04C B.EQ 0x3ACF0A0
	0x03ACF050 ADRP X8, 0x689000
	0x03ACF054 LDR X8, [X8 + 0x368]
	0x03ACF058 LDR X0, [X8]
	0x03ACF05C LDR W8, [X0 + 0xE0]
	0x03ACF060 CBNZ W8, 0x3ACF068
	0x03ACF064 BL 0x1C16DFC
	0x03ACF068 ADRP X8, 0x689000
	0x03ACF06C LDR X8, [X8 + 0x608]
	0x03ACF070 MOV X0, X21
	0x03ACF074 MOV W1, W20
	0x03ACF078 MOV W2, W31
	0x03ACF07C LDR X3, [X8]
	0x03ACF080 BL 0x22991D0
	0x03ACF084 B 0x3ACF0A0
	0x03ACF088 ADRP X8, 0x62B000
	0x03ACF08C LDR X8, [X8 + 0x7A0]
	0x03ACF090 MOV W1, W20
	0x03ACF094 LDR X0, [X8]
	0x03ACF098 BL 0x1C16D6C
	0x03ACF09C STR X0, [X21]
	0x03ACF0A0 CMP W20, 0x1
	0x03ACF0A4 B.LT 0x3ACF158
	0x03ACF0A8 MOV X23, X31
	0x03ACF0AC LDR X24, [X21]
	0x03ACF0B0 CBZ X23, 0x3ACF114
	0x03ACF0B4 LDR X8, [X19 + 0x708]
	0x03ACF0B8 CBZ X8, 0x3ACF174
	0x03ACF0BC LDR W9, [X8 + 0x18]
	0x03ACF0C0 CMP X23, X9
	0x03ACF0C4 B.CS 0x3ACF178
	0x03ACF0C8 ADD X8, X8, X23, 0x3, LSL
	0x03ACF0CC LDR X0, [X8 + 0x20]
	0x03ACF0D0 CBZ X0, 0x3ACF174
	0x03ACF0D4 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x915000
	011 Move X22, 0x652000
	012 Move X21, 0x626000
	013 Move W8, [X20+1240]
	014 Move X22, [X22+1440]
	015 Move X21, [X21+1432]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x68B000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x62D000
	025 Move X0, [X0+2872]
	026 Call 0x1C17CF4
	027 Move X0, 0x652000
	028 Move X0, [X0+1440]
	029 Call 0x1C17CF4
	030 Move X0, 0x68B000
	031 Move X0, [X0+1440]
	032 Call 0x1C17CF4
	033 Move X0, 0x62D000
	034 Move X0, [X0+1776]
	035 Call 0x1C17CF4
	036 Move X0, 0x68B000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move X0, 0x62D000
	040 Move X0, [X0+1792]
	041 Call 0x1C17CF4
	042 Move X0, 0x626000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x68B000
	046 Move X0, [X0+1456]
	047 Call 0x1C17CF4
	048 Move X0, 0x68B000
	049 Move X0, [X0+872]
	050 Call 0x1C17CF4
	051 Move X0, 0x68B000
	052 Move X0, [X0+1464]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1240], W8
	056 Move X1, [X22]
	057 Move X0, X19
	058 Call 0x21A4894, X0
	059 Move [X19+1768], X0
	060 Move X20, X0
	061 Move X0, [X21]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {84}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Component.get_gameObject, X0
	077 Compare X0, 0
	078 JumpIfEqual {259}
	079 Move X8, 0x68B000
	080 Move X8, [X8+1448]
	081 Move X1, [X8]
	082 Call 0x21E61FC, X0
	083 Move [X19+1768], X0
	084 Move X20, 0x62D000
	085 Move X20, [X20+2872]
	086 Move X0, X19
	087 Move X1, X31
	088 Call TMP_Text.get_rectTransform, X0
	089 Move [X19+896], X0
	090 Move X0, X19
	091 Call TextMeshPro.get_transform, X0
	092 Move [X19+888], X0
	093 Move X1, [X20]
	094 Move X0, X19
	095 Call 0x21A4894, X0
	096 Move [X19+1776], X0
	097 Move X20, X0
	098 Move X0, [X21]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X20
	104 Move X1, X31
	105 Move X2, X31
	106 Call Object.op_Equality, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {121}
	111 Move X0, X19
	112 Move X1, X31
	113 Call Component.get_gameObject, X0
	114 Compare X0, 0
	115 JumpIfEqual {259}
	116 Move X8, 0x62D000
	117 Move X8, [X8+1776]
	118 Move X1, [X8]
	119 Call 0x21E61FC, X0
	120 Move [X19+1776], X0
	121 Move X0, [X21]
	122 Move X20, [X19+928]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X20
	128 Move X1, X31
	129 Move X2, X31
	130 Call Object.op_Equality, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {164}
	135 Move X8, 0x62D000
	136 Move X8, [X8+1792]
	137 Move X0, [X8]
	138 Call 0x1C17F10
	139 Move X1, X31
	140 Move X20, X0
	141 Call Mesh..ctor, X0
	142 Move [X19+928], X20
	143 Compare X20, 0
	144 JumpIfEqual {259}
	145 Move W1, 61
	146 Move X0, X20
	147 Move X2, X31
	148 Call Object.set_hideFlags, X0, X1
	149 Move X0, [X19+1776]
	150 Compare X0, 0
	151 JumpIfEqual {259}
	152 Move X1, [X19+928]
	153 Move X2, X31
	154 Call MeshFilter.set_sharedMesh, X0, X1
	155 Move X8, 0x68B000
	156 Move X8, [X8+872]
	157 Move X0, [X8]
	158 Call 0x1C17F10
	159 Move X1, X19
	160 Move X2, X31
	161 Move X20, X0
	162 Call TMP_TextInfo..ctor, X0, X1
	163 Move [X19+872], X20
	164 Move X0, [X19+1776]
	165 Compare X0, 0
	166 JumpIfEqual {259}
	167 Move X20, 0x68B000
	168 Move X21, 0x68B000
	169 Move X20, [X20+1456]
	170 Move X21, [X21+1440]
	171 Move W1, 63
	172 Move X2, X31
	173 Call Object.set_hideFlags, X0, X1
	174 Move X0, X19
	175 Move X1, X31
	176 Call TMP_Text.LoadDefaultSettings, X0
	177 Move X8, [X19]
	178 Move X0, X19
	179 Move X9, [X8+1736]
	180 Move X1, [X8+1744]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X19+1144]
	183 Compare X8, 0
	184 JumpIfNotEqual {191}
	185 Move X8, 0x68B000
	186 Move W1, [X19+1788]
	187 Move X8, [X8+1464]
	188 Move X0, [X8]
	189 Call 0x1C17D6C
	190 Move [X19+1144], X0
	191 Move X0, [X20]
	192 Call 0x1C17F10
	193 Move X1, X31
	194 Move X20, X0
	195 Call TMP_Character..ctor, X0
	196 Move W8, 1
	197 Move [X19+1608], X20
	198 Move [X19+1784], W8
	199 Move X1, [X21]
	200 Move X0, X19
	201 Call 0x21A553C, X0
	202 Compare X0, 0
	203 JumpIfEqual {259}
	204 Move X22, [X0+24]
	205 Move X20, X0
	206 Compare X22, 0
	207 JumpIfEqual {245}
	208 Move X8, [X19+1800]
	209 Compare X8, 0
	210 JumpIfEqual {259}
	211 Move W8, [X8+24]
	212 Add W1, W22, 1
	213 Add X21, X19, 1800
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X8, 0x68A000
	216 Move X8, [X8+1432]
	217 Move X0, X21
	218 Move X2, [X8]
	219 Call Array.Resize, X0, X1
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X25, X31
	222 And X23, X22, 0
	223 Add X24, X20, 32
	224 Move W8, [X20+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X26, [X21]
	227 Compare X26, 0
	228 JumpIfEqual {259}
	229 Move X22, [X24]
	230 Compare X22, 0
	231 JumpIfEqual {238}
	232 Move X8, [X26]
	233 Move X0, X22
	234 Move X1, [X8+64]
	235 Call 0x1C17E00
	236 Compare X0, 0
	237 JumpIfEqual {260}
	238 Move W9, [X26+24]
	239 Add X8, X25, 1
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Add X9, X26, X25
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X25, X8
	244 Move [X9+40], X22
	245 Move W8, 1
	246 Move [X19+880], W8
	247 Move [X19+1021], W8
	248 Move X20, [X31+64]
	249 Move X19, [X31+72]
	250 Move X22, [X31+48]
	251 Move X21, [X31+56]
	252 Move X24, [X31+32]
	253 Move X23, [X31+40]
	254 Move X26, [X31+16]
	255 Move X25, [X31+24]
	256 Move X30, [X31+80]
	257 Return 
	258 Call 0x1C17F28
	259 Call 0x1C17F20
	260 Call 0x1C17F44
	261 Move X1, X31
	262 Call 0x1C17DEC

Method: System.Void OnEnable()

Disassembly:
	0x03ACF0D8 BL 0x3B1947C
	0x03ACF0DC CBZ X24, 0x3ACF174
	0x03ACF0E0 MOV X22, X0
	0x03ACF0E4 CBZ X0, 0x3ACF0FC
	0x03ACF0E8 LDR X8, [X24]
	0x03ACF0EC MOV X0, X22
	0x03ACF0F0 LDR X1, [X8 + 0x40]
	0x03ACF0F4 BL 0x1C16E00
	0x03ACF0F8 CBZ X0, 0x3ACF17C
	0x03ACF0FC LDR W8, [X24 + 0x18]
	0x03ACF100 CMP X23, X8
	0x03ACF104 B.CS 0x3ACF178
	0x03ACF108 ADD X8, X24, X23, 0x3, LSL
	0x03ACF10C STR X22, [X8 + 0x20]
	0x03ACF110 B 0x3ACF14C
	0x03ACF114 MOV X0, X19
	0x03ACF118 MOV X1, X31
	0x03ACF11C BL 0x3AF73F0
	0x03ACF120 CBZ X24, 0x3ACF174
	0x03ACF124 MOV X22, X0
	0x03ACF128 CBZ X0, 0x3ACF140
	0x03ACF12C LDR X8, [X24]
	0x03ACF130 MOV X0, X22
	0x03ACF134 LDR X1, [X8 + 0x40]
	0x03ACF138 BL 0x1C16E00
	0x03ACF13C CBZ X0, 0x3ACF17C
	0x03ACF140 LDR W8, [X24 + 0x18]
	0x03ACF144 CBZ W8, 0x3ACF178
	0x03ACF148 STR X22, [X24 + 0x20]
	0x03ACF14C ADD X23, X23, 0x1
	0x03ACF150 CMP X20, X23
	0x03ACF154 B.NE 0x3ACF0AC
	0x03ACF158 LDR X0, [X19 + 0x138]
	0x03ACF15C LDP X22, X21, [X31 + 0x20]
	0x03ACF160 LDP X24, X23, [X31 + 0x10]
	0x03ACF164 STR X0, [X19 + 0x128]
	0x03ACF168 LDP X20, X19, [X31 + 0x30]
	0x03ACF16C LDR X30, [X31], #0x40
	0x03ACF170 RET
	0x03ACF174 BL 0x1C16F20
	0x03ACF178 BL 0x1C16F28
	0x03ACF17C BL 0x1C16F44
	0x03ACF180 MOV X1, X31
	0x03ACF184 BL 0x1C16DEC
	0x03ACF188 STP X30, X19, [X31 - 0x10]!
	0x03ACF18C LDR X8, [X0]
	0x03ACF190 STR X1, [X0 + 0x110]
	0x03ACF194 MOV X19, X0
	0x03ACF198 LDR X9, [X8 + 0x7A8]
	0x03ACF19C LDR X1, [X8 + 0x7B0]
	0x03ACF1A0 BLR X9
	0x03ACF1A4 LDR X8, [X19]
	0x03ACF1A8 STR S0, [X19 + 0x618]
	0x03ACF1AC MOV X0, X19
	0x03ACF1B0 LDR X2, [X8 + 0x308]
	0x03ACF1B4 LDR X1, [X8 + 0x310]
	0x03ACF1B8 LDP X30, X19, [X31], #0x10
	0x03ACF1BC BR X2
	0x03ACF1C0 STR X30, [X31 - 0x40]!
	0x03ACF1C4 STP X24, X23, [X31 + 0x10]
	0x03ACF1C8 STP X22, X21, [X31 + 0x20]
	0x03ACF1CC STP X20, X19, [X31 + 0x30]
	0x03ACF1D0 ADRP X20, 0x913000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x914000
	005 Move W8, [X20+1241]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x68A000
	012 Move X0, [X0+1384]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1241], W8
	016 Move W8, [X19+1021]
	017 Compare W8, 0
	018 JumpIfEqual {70}
	019 Move W8, [X19+1888]
	020 Compare W8, 0
	021 JumpIfNotEqual {24}
	022 Move W8, 1
	023 Move [X19+1888], W8
	024 Move W8, [X19+800]
	025 Compare W8, 0
	026 JumpIfNotEqual {37}
	027 Move X8, 0x68A000
	028 Move X8, [X8+1384]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call TMP_UpdateManager.RegisterTextObjectForUpdate, X0
	037 Move X0, X19
	038 Call TextMeshPro.get_meshFilter, X0
	039 Move X8, [X19]
	040 Move X20, X0
	041 Move X0, X19
	042 Move X9, [X8+1544]
	043 Move X1, [X8+1552]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X20, 0
	046 JumpIfEqual {74}
	047 Move X1, X0
	048 Move X0, X20
	049 Move X2, X31
	050 Call MeshFilter.set_sharedMesh, X0, X1
	051 Move X8, [X19]
	052 Move W1, 1
	053 Move X0, X19
	054 Move X9, [X8+2344]
	055 Move X2, [X8+2352]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X19]
	058 Move X0, X19
	059 Move X9, [X8+2216]
	060 Move X1, [X8+2224]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X19]
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X2, [X8+728]
	067 Move X1, [X8+736]
	068 Move X30, [X31+32]
	069 CallNoReturn X2
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Return 
	074 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03ACF1D4 LDRB W8, [X20 + 0x4E6]
	0x03ACF1D8 MOV X19, X0
	0x03ACF1DC TBNZ X8, 0x0, 0x3ACF20C
	0x03ACF1E0 ADRP X0, 0x62B000
	0x03ACF1E4 LDR X0, [X0 + 0x7A0]
	0x03ACF1E8 BL 0x1C16CF4
	0x03ACF1EC ADRP X0, 0x689000
	0x03ACF1F0 LDR X0, [X0 + 0x608]
	0x03ACF1F4 BL 0x1C16CF4
	0x03ACF1F8 ADRP X0, 0x689000
	0x03ACF1FC LDR X0, [X0 + 0x368]
	0x03ACF200 BL 0x1C16CF4
	0x03ACF204 MOVZ W8, 0x1
	0x03ACF208 STRB W8, [X20 + 0x4E6]
	0x03ACF20C LDR X8, [X19 + 0x368]
	0x03ACF210 CBZ X8, 0x3ACF33C
	0x03ACF214 LDR X9, [X19 + 0x128]
	0x03ACF218 LDR W21, [X8 + 0x34]
	0x03ACF21C ADD X20, X19, 0x128
	0x03ACF220 CBZ X9, 0x3ACF268
	0x03ACF224 LDR W8, [X9 + 0x18]
	0x03ACF228 CMP W21, W8
	0x03ACF22C B.EQ 0x3ACF280
	0x03ACF230 ADRP X8, 0x689000
	0x03ACF234 LDR X8, [X8 + 0x368]
	0x03ACF238 LDR X0, [X8]
	0x03ACF23C LDR W8, [X0 + 0xE0]
	0x03ACF240 CBNZ W8, 0x3ACF248
	0x03ACF244 BL 0x1C16DFC
	0x03ACF248 ADRP X8, 0x689000
	0x03ACF24C LDR X8, [X8 + 0x608]
	0x03ACF250 MOV X0, X20
	0x03ACF254 MOV W1, W21
	0x03ACF258 MOV W2, W31
	0x03ACF25C LDR X3, [X8]
	0x03ACF260 BL 0x22991D0
	0x03ACF264 B 0x3ACF280
	0x03ACF268 ADRP X8, 0x62B000
	0x03ACF26C LDR X8, [X8 + 0x7A0]
	0x03ACF270 MOV W1, W21
	0x03ACF274 LDR X0, [X8]
	0x03ACF278 BL 0x1C16D6C
	0x03ACF27C STR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x914000
	005 Move W8, [X20+1242]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x68A000
	012 Move X0, [X0+1384]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1242], W8
	016 Move W8, [X19+1021]
	017 Compare W8, 0
	018 JumpIfEqual {48}
	019 Move X8, 0x68A000
	020 Move X8, [X8+1384]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Call TMP_UpdateManager.UnRegisterTextElementForRebuild, X0
	029 Move X0, X19
	030 Move X1, X31
	031 Call TMP_UpdateManager.UnRegisterTextObjectForUpdate, X0
	032 Move X0, X19
	033 Call TextMeshPro.get_meshFilter, X0
	034 Compare X0, 0
	035 JumpIfEqual {52}
	036 Move X1, X31
	037 Move X2, X31
	038 Call MeshFilter.set_sharedMesh, X0, X1
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W1, W31
	044 Move X3, [X8+2344]
	045 Move X2, [X8+2352]
	046 Move X30, [X31+32]
	047 CallNoReturn X3
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03ACF280 CMP W21, 0x1
	0x03ACF284 B.LT 0x3ACF324
	0x03ACF288 MOV X23, X31
	0x03ACF28C LDR X24, [X20]
	0x03ACF290 CBZ X23, 0x3ACF2EC
	0x03ACF294 LDR X8, [X19 + 0x708]
	0x03ACF298 CBZ X8, 0x3ACF33C
	0x03ACF29C LDR W9, [X8 + 0x18]
	0x03ACF2A0 CMP X23, X9
	0x03ACF2A4 B.CS 0x3ACF340
	0x03ACF2A8 ADD X8, X8, X23, 0x3, LSL
	0x03ACF2AC LDR X8, [X8 + 0x20]
	0x03ACF2B0 CBZ X8, 0x3ACF33C
	0x03ACF2B4 CBZ X24, 0x3ACF33C
	0x03ACF2B8 LDR X22, [X8 + 0x38]
	0x03ACF2BC CBZ X22, 0x3ACF2D4
	0x03ACF2C0 LDR X8, [X24]
	0x03ACF2C4 MOV X0, X22
	0x03ACF2C8 LDR X1, [X8 + 0x40]
	0x03ACF2CC BL 0x1C16E00
	0x03ACF2D0 CBZ X0, 0x3ACF344
	0x03ACF2D4 LDR W8, [X24 + 0x18]
	0x03ACF2D8 CMP X23, X8
	0x03ACF2DC B.CS 0x3ACF340
	0x03ACF2E0 ADD X8, X24, X23, 0x3, LSL
	0x03ACF2E4 STR X22, [X8 + 0x20]
	0x03ACF2E8 B 0x3ACF318
	0x03ACF2EC CBZ X24, 0x3ACF33C
	0x03ACF2F0 LDR X22, [X19 + 0x110]
	0x03ACF2F4 CBZ X22, 0x3ACF30C
	0x03ACF2F8 LDR X8, [X24]
	0x03ACF2FC MOV X0, X22
	0x03ACF300 LDR X1, [X8 + 0x40]
	0x03ACF304 BL 0x1C16E00
	0x03ACF308 CBZ X0, 0x3ACF344
	0x03ACF30C LDR W8, [X24 + 0x18]
	0x03ACF310 CBZ W8, 0x3ACF340
	0x03ACF314 STR X22, [X24 + 0x20]
	0x03ACF318 ADD X23, X23, 0x1
	0x03ACF31C CMP X21, X23
	0x03ACF320 B.NE 0x3ACF28C
	0x03ACF324 LDR X0, [X20]
	0x03ACF328 LDP X20, X19, [X31 + 0x30]
	0x03ACF32C LDP X22, X21, [X31 + 0x20]
	0x03ACF330 LDP X24, X23, [X31 + 0x10]
	0x03ACF334 LDR X30, [X31], #0x40
	0x03ACF338 RET
	0x03ACF33C BL 0x1C16F20
	0x03ACF340 BL 0x1C16F28
	0x03ACF344 BL 0x1C16F44
	0x03ACF348 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x914000
	007 Move X21, 0x625000
	008 Move W8, [X20+1243]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x625000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x68A000
	019 Move X0, [X0+1384]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1243], W8
	023 Move X0, [X21]
	024 Move X20, [X19+928]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x68A000
	030 Move X22, [X22+1384]
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {48}
	039 Move X0, [X21]
	040 Move X20, [X19+928]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Call Object.DestroyImmediate, X0
	048 Move [X19+1888], W31
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X31
	056 Call TMP_UpdateManager.UnRegisterTextElementForRebuild, X0
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call TMP_UpdateManager.UnRegisterTextObjectForUpdate, X0
	065 Return 

Method: System.Void LoadFontAsset()

Disassembly:
	0x03ACF34C BL 0x1C16DEC
	0x03ACF350 STP X29, X30, [X31 - 0x60]!
	0x03ACF354 STP X28, X27, [X31 + 0x10]
	0x03ACF358 STP X26, X25, [X31 + 0x20]
	0x03ACF35C STP X24, X23, [X31 + 0x30]
	0x03ACF360 STP X22, X21, [X31 + 0x40]
	0x03ACF364 STP X20, X19, [X31 + 0x50]
	0x03ACF368 ADRP X21, 0x913000
	0x03ACF36C LDRB W8, [X21 + 0x4E7]
	0x03ACF370 MOV X19, X1
	0x03ACF374 MOV X20, X0
	0x03ACF378 TBNZ X8, 0x0, 0x3ACF3C0
	0x03ACF37C ADRP X0, 0x62B000
	0x03ACF380 LDR X0, [X0 + 0x7A0]
	0x03ACF384 BL 0x1C16CF4
	0x03ACF388 ADRP X0, 0x624000
	0x03ACF38C LDR X0, [X0 + 0x598]
	0x03ACF390 BL 0x1C16CF4
	0x03ACF394 ADRP X0, 0x689000
	0x03ACF398 LDR X0, [X0 + 0x338]
	0x03ACF39C BL 0x1C16CF4
	0x03ACF3A0 ADRP X0, 0x689000
	0x03ACF3A4 LDR X0, [X0 + 0x608]
	0x03ACF3A8 BL 0x1C16CF4
	0x03ACF3AC ADRP X0, 0x689000
	0x03ACF3B0 LDR X0, [X0 + 0x368]
	0x03ACF3B4 BL 0x1C16CF4
	0x03ACF3B8 MOVZ W8, 0x1
	0x03ACF3BC STRB W8, [X21 + 0x4E7]
	0x03ACF3C0 LDR X8, [X20 + 0x368]
	0x03ACF3C4 CBZ X8, 0x3ACF6A4
	0x03ACF3C8 LDR X9, [X20 + 0x128]
	0x03ACF3CC LDR W21, [X8 + 0x34]
	0x03ACF3D0 ADD X22, X20, 0x128
	0x03ACF3D4 CBZ X9, 0x3ACF41C
	0x03ACF3D8 LDR W8, [X9 + 0x18]
	0x03ACF3DC CMP W21, W8
	0x03ACF3E0 B.EQ 0x3ACF434
	0x03ACF3E4 ADRP X8, 0x689000
	0x03ACF3E8 LDR X8, [X8 + 0x368]
	0x03ACF3EC LDR X0, [X8]
	0x03ACF3F0 LDR W8, [X0 + 0xE0]
	0x03ACF3F4 CBNZ W8, 0x3ACF3FC
	0x03ACF3F8 BL 0x1C16DFC
	0x03ACF3FC ADRP X8, 0x689000
	0x03ACF400 LDR X8, [X8 + 0x608]
	0x03ACF404 MOV X0, X22
	0x03ACF408 MOV W1, W21
	0x03ACF40C MOV W2, W31
	0x03ACF410 LDR X3, [X8]
	0x03ACF414 BL 0x22991D0
	0x03ACF418 B 0x3ACF434
	0x03ACF41C ADRP X8, 0x62B000
	0x03ACF420 LDR X8, [X8 + 0x7A0]
	0x03ACF424 MOV W1, W21
	0x03ACF428 LDR X0, [X8]
	0x03ACF42C BL 0x1C16D6C
	0x03ACF430 STR X0, [X22]
	0x03ACF434 CMP W21, 0x1
	0x03ACF438 B.LT 0x3ACF688
	0x03ACF43C CBZ X19, 0x3ACF6A4
	0x03ACF440 ADRP X25, 0x689000
	0x03ACF444 ADRP X26, 0x624000
	0x03ACF448 LDR X25, [X25 + 0x338]
	0x03ACF44C LDR X26, [X26 + 0x598]
	0x03ACF450 MOV W8, W31
	0x03ACF454 LDR W9, [X19 + 0x18]
	0x03ACF458 CMP W8, W9
	0x03ACF45C B.CS 0x3ACF6A8
	0x03ACF460 SXTW X27, W8
	0x03ACF464 ADD X28, X19, X27, 0x3, LSL
	0x03ACF468 LDR X23, [X28 + 0x20]!
	0x03ACF46C LDR X0, [X25]
	0x03ACF470 LDR W8, [X0 + 0xE0]
	0x03ACF474 CBNZ W8, 0x3ACF47C
	0x03ACF478 BL 0x1C16DFC
	0x03ACF47C CBZ X23, 0x3ACF6A4
	0x03ACF480 LDR X8, [X25]
	0x03ACF484 MOV X0, X23
	0x03ACF488 MOV X2, X31
	0x03ACF48C LDR X8, [X8 + 0xB8]
	0x03ACF490 LDR W1, [X8]
	0x03ACF494 BL 0x3C14AB8
	0x03ACF498 LDR X8, [X26]
	0x03ACF49C MOV X23, X0
	0x03ACF4A0 LDR W9, [X8 + 0xE0]
	0x03ACF4A4 CBNZ W9, 0x3ACF4B0
	0x03ACF4A8 MOV X0, X8
	0x03ACF4AC BL 0x1C16DFC
	0x03ACF4B0 MOV X0, X23
	0x03ACF4B4 MOV X1, X31
	0x03ACF4B8 MOV X2, X31
	0x03ACF4BC BL 0x3C3883C
	0x03ACF4C0 CBZ W27, 0x3ACF5C0
	0x03ACF4C4 TBNZ X0, 0x0, 0x3ACF67C
	0x03ACF4C8 CBZ X23, 0x3ACF6A4
	0x03ACF4CC MOV X0, X23
	0x03ACF4D0 MOV X1, X31
	0x03ACF4D4 BL 0x3C385F8
	0x03ACF4D8 LDR X8, [X20 + 0x708]
	0x03ACF4DC CBZ X8, 0x3ACF6A4
	0x03ACF4E0 LDR W9, [X8 + 0x18]
	0x03ACF4E4 CMP W27, W9
	0x03ACF4E8 B.CS 0x3ACF6A8
	0x03ACF4EC ADD X8, X8, X27, 0x3, LSL
	0x03ACF4F0 LDR X8, [X8 + 0x20]
	0x03ACF4F4 CBZ X8, 0x3ACF6A4
	0x03ACF4F8 MOV W23, W0
	0x03ACF4FC LDR X0, [X25]
	0x03ACF500 LDR X24, [X8 + 0x38]
	0x03ACF504 LDR W9, [X0 + 0xE0]
	0x03ACF508 CBNZ W9, 0x3ACF510
	0x03ACF50C BL 0x1C16DFC
	0x03ACF510 CBZ X24, 0x3ACF6A4
	0x03ACF514 LDR X8, [X25]
	0x03ACF518 MOV X0, X24
	0x03ACF51C MOV X2, X31
	0x03ACF520 LDR X8, [X8 + 0xB8]
	0x03ACF524 LDR W1, [X8]
	0x03ACF528 BL 0x3C14AB8
	0x03ACF52C CBZ X0, 0x3ACF6A4
	0x03ACF530 MOV X1, X31
	0x03ACF534 BL 0x3C385F8
	0x03ACF538 CMP W23, W0
	0x03ACF53C B.NE 0x3ACF67C
	0x03ACF540 LDR X8, [X20 + 0x708]
	0x03ACF544 CBZ X8, 0x3ACF6A4
	0x03ACF548 LDR W9, [X8 + 0x18]
	0x03ACF54C CMP W27, W9
	0x03ACF550 B.CS 0x3ACF6A8
	0x03ACF554 ADD X8, X8, X27, 0x3, LSL
	0x03ACF558 LDR X23, [X8 + 0x20]
	0x03ACF55C CBZ X23, 0x3ACF6A4
	0x03ACF560 LDRB W8, [X23 + 0x50]
	0x03ACF564 CBZ W8, 0x3ACF67C
	0x03ACF568 LDR W8, [X19 + 0x18]
	0x03ACF56C CMP W27, W8
	0x03ACF570 B.CS 0x3ACF6A8
	0x03ACF574 LDR X29, [X22]
	0x03ACF578 CBZ X29, 0x3ACF6A4
	0x03ACF57C LDR X24, [X28]
	0x03ACF580 CBZ X24, 0x3ACF598
	0x03ACF584 LDR X8, [X29]
	0x03ACF588 MOV X0, X24
	0x03ACF58C LDR X1, [X8 + 0x40]
	0x03ACF590 BL 0x1C16E00
	0x03ACF594 CBZ X0, 0x3ACF6AC
	0x03ACF598 LDR W8, [X29 + 0x18]
	0x03ACF59C CMP W27, W8
	0x03ACF5A0 B.CS 0x3ACF6A8
	0x03ACF5A4 ADD X8, X29, X27, 0x3, LSL
	0x03ACF5A8 MOV X0, X23
	0x03ACF5AC MOV X1, X24
	0x03ACF5B0 MOV X2, X31
	0x03ACF5B4 STR X24, [X8 + 0x20]
	0x03ACF5B8 BL 0x3B19750
	0x03ACF5BC B 0x3ACF67C
	0x03ACF5C0 TBNZ X0, 0x0, 0x3ACF67C
	0x03ACF5C4 CBZ X23, 0x3ACF6A4
	0x03ACF5C8 MOV X0, X23
	0x03ACF5CC MOV X1, X31
	0x03ACF5D0 BL 0x3C385F8
	0x03ACF5D4 LDR X8, [X25]
	0x03ACF5D8 LDR X24, [X20 + 0x110]
	0x03ACF5DC MOV W23, W0
	0x03ACF5E0 LDR W9, [X8 + 0xE0]
	0x03ACF5E4 CBNZ W9, 0x3ACF5F0
	0x03ACF5E8 MOV X0, X8
	0x03ACF5EC BL 0x1C16DFC
	0x03ACF5F0 CBZ X24, 0x3ACF6A4
	0x03ACF5F4 LDR X8, [X25]
	0x03ACF5F8 MOV X0, X24
	0x03ACF5FC MOV X2, X31
	0x03ACF600 LDR X8, [X8 + 0xB8]
	0x03ACF604 LDR W1, [X8]
	0x03ACF608 BL 0x3C14AB8
	0x03ACF60C CBZ X0, 0x3ACF6A4
	0x03ACF610 MOV X1, X31
	0x03ACF614 BL 0x3C385F8
	0x03ACF618 CMP W23, W0
	0x03ACF61C B.NE 0x3ACF67C
	0x03ACF620 LDR W8, [X19 + 0x18]
	0x03ACF624 CBZ W8, 0x3ACF6A8
	0x03ACF628 LDR X24, [X22]
	0x03ACF62C CBZ X24, 0x3ACF6A4
	0x03ACF630 LDR X23, [X28]
	0x03ACF634 CBZ X23, 0x3ACF64C
	0x03ACF638 LDR X8, [X24]
	0x03ACF63C MOV X0, X23
	0x03ACF640 LDR X1, [X8 + 0x40]
	0x03ACF644 BL 0x1C16E00
	0x03ACF648 CBZ X0, 0x3ACF6AC
	0x03ACF64C LDR W8, [X24 + 0x18]
	0x03ACF650 CBZ W8, 0x3ACF6A8
	0x03ACF654 ADD X8, X24, X27, 0x3, LSL
	0x03ACF658 STR X23, [X8 + 0x20]
	0x03ACF65C LDR X8, [X20]
	0x03ACF660 STR X23, [X20 + 0x110]
	0x03ACF664 MOV X0, X20
	0x03ACF668 MOV X1, X23
	0x03ACF66C LDR X9, [X8 + 0x7B8]
	0x03ACF670 LDR X2, [X8 + 0x7C0]
	0x03ACF674 BLR X9
	0x03ACF678 STR S0, [X20 + 0x618]
	0x03ACF67C ADD W8, W27, 0x1
	0x03ACF680 CMP W21, W8
	0x03ACF684 B.NE 0x3ACF454
	0x03ACF688 LDP X20, X19, [X31 + 0x50]
	0x03ACF68C LDP X22, X21, [X31 + 0x40]
	0x03ACF690 LDP X24, X23, [X31 + 0x30]
	0x03ACF694 LDP X26, X25, [X31 + 0x20]
	0x03ACF698 LDP X28, X27, [X31 + 0x10]
	0x03ACF69C LDP X29, X30, [X31], #0x60
	0x03ACF6A0 RET
	0x03ACF6A4 BL 0x1C16F20
	0x03ACF6A8 BL 0x1C16F28
	0x03ACF6AC BL 0x1C16F44
	0x03ACF6B0 MOV X1, X31
	0x03ACF6B4 BL 0x1C16DEC
	0x03ACF6B8 STR D8, [X31 - 0x30]!
	0x03ACF6BC STP X30, X21, [X31 + 0x10]
	0x03ACF6C0 STP X20, X19, [X31 + 0x20]
	0x03ACF6C4 ADRP X20, 0x913000
	0x03ACF6C8 LDRB W8, [X20 + 0x4E8]
	0x03ACF6CC MOV V8.16B, V0.16B
	0x03ACF6D0 MOV X19, X0
	0x03ACF6D4 TBNZ X8, 0x0, 0x3ACF6F8
	0x03ACF6D8 ADRP X0, 0x624000
	0x03ACF6DC LDR X0, [X0 + 0x598]
	0x03ACF6E0 BL 0x1C16CF4
	0x03ACF6E4 ADRP X0, 0x689000
	0x03ACF6E8 LDR X0, [X0 + 0x338]
	0x03ACF6EC BL 0x1C16CF4
	0x03ACF6F0 MOVZ W8, 0x1
	0x03ACF6F4 STRB W8, [X20 + 0x4E8]
	0x03ACF6F8 LDR X0, [X19 + 0x6E8]
	0x03ACF6FC FMOV S0, 1
	0x03ACF700 FMIN S0, S8, S0
	0x03ACF704 FCMP S8, 0x0
	0x03ACF708 FMOV S1, W31
	0x03ACF70C FCSEL S8, S0, S1, PL
	0x03ACF710 CBZ X0, 0x3ACF7E0
	0x03ACF714 ADRP X21, 0x689000
	0x03ACF718 LDR X21, [X21 + 0x338]
	0x03ACF71C MOV X1, X31
	0x03ACF720 BL 0x3C1341C
	0x03ACF724 LDR X8, [X21]
	0x03ACF728 MOV X20, X0
	0x03ACF72C LDR W9, [X8 + 0xE0]
	0x03ACF730 CBNZ W9, 0x3ACF73C
	0x03ACF734 MOV X0, X8
	0x03ACF738 BL 0x1C16DFC
	0x03ACF73C CBZ X20, 0x3ACF7E0
	0x03ACF740 LDR X8, [X21]
	0x03ACF744 ADRP X21, 0x624000
	0x03ACF748 MOV X0, X20
	0x03ACF74C MOV V0.16B, V8.16B
	0x03ACF750 LDR X8, [X8 + 0xB8]
	0x03ACF754 MOV X2, X31
	0x03ACF758 LDR W1, [X8 + 0x3C]
	0x03ACF75C LDR X21, [X21 + 0x598]
	0x03ACF760 BL 0x3C15CD8
	0x03ACF764 LDR X0, [X21]
	0x03ACF768 LDR X20, [X19 + 0x130]
	0x03ACF76C LDR W8, [X0 + 0xE0]
	0x03ACF770 CBNZ W8, 0x3ACF778
	0x03ACF774 BL 0x1C16DFC
	0x03ACF778 MOV X0, X20
	0x03ACF77C MOV X1, X31
	0x03ACF780 MOV X2, X31
	0x03ACF784 BL 0x3C3883C
	0x03ACF788 TBZ X0, 0x0, 0x3ACF7A0
	0x03ACF78C LDR X0, [X19 + 0x6E8]
	0x03ACF790 CBZ X0, 0x3ACF7E0
	0x03ACF794 MOV X1, X31
	0x03ACF798 BL 0x3C1341C
	0x03ACF79C STR X0, [X19 + 0x130]
	0x03ACF7A0 LDR X0, [X19 + 0x6E8]
	0x03ACF7A4 CBZ X0, 0x3ACF7E0
	0x03ACF7A8 MOV X1, X31
	0x03ACF7AC BL 0x3C1341C
	0x03ACF7B0 LDR X8, [X19]
	0x03ACF7B4 STR X0, [X19 + 0x130]
	0x03ACF7B8 STR X0, [X19 + 0x110]
	0x03ACF7BC MOV X0, X19
	0x03ACF7C0 LDR X9, [X8 + 0x7A8]
	0x03ACF7C4 LDR X1, [X8 + 0x7B0]
	0x03ACF7C8 BLR X9
	0x03ACF7CC STR S0, [X19 + 0x618]
	0x03ACF7D0 LDP X20, X19, [X31 + 0x20]
	0x03ACF7D4 LDP X30, X21, [X31 + 0x10]
	0x03ACF7D8 LDR V8, [X31], #0x30
	0x03ACF7DC RET
	0x03ACF7E0 BL 0x1C16F20
	0x03ACF7E4 STP X30, X23, [X31 - 0x30]!
	0x03ACF7E8 STP X22, X21, [X31 + 0x10]
	0x03ACF7EC STP X20, X19, [X31 + 0x20]
	0x03ACF7F0 ADRP X21, 0x913000
	0x03ACF7F4 LDRB W8, [X21 + 0x4E9]
	0x03ACF7F8 MOV X20, X1
	0x03ACF7FC MOV X19, X0
	0x03ACF800 TBNZ X8, 0x0, 0x3ACF824
	0x03ACF804 ADRP X0, 0x624000
	0x03ACF808 LDR X0, [X0 + 0x598]
	0x03ACF80C BL 0x1C16CF4
	0x03ACF810 ADRP X0, 0x689000
	0x03ACF814 LDR X0, [X0 + 0x338]
	0x03ACF818 BL 0x1C16CF4
	0x03ACF81C MOVZ W8, 0x1
	0x03ACF820 STRB W8, [X21 + 0x4E9]
	0x03ACF824 LDR X0, [X19 + 0x6E8]
	0x03ACF828 CBZ X0, 0x3ACF908
	0x03ACF82C ADRP X22, 0x689000
	0x03ACF830 LDR X22, [X22 + 0x338]
	0x03ACF834 MOV X1, X31
	0x03ACF838 BL 0x3C1341C
	0x03ACF83C LDR X8, [X22]
	0x03ACF840 MOV X21, X0
	0x03ACF844 LDR W9, [X8 + 0xE0]
	0x03ACF848 CBNZ W9, 0x3ACF854
	0x03ACF84C MOV X0, X8
	0x03ACF850 BL 0x1C16DFC
	0x03ACF854 CBZ X21, 0x3ACF908
	0x03ACF858 MOVZ W9, 0x437F0000
	0x03ACF85C ADRP X23, 0x624000
	0x03ACF860 LDR X23, [X23 + 0x598]
	0x03ACF864 FMOV S4, W9
	0x03ACF868 LDR X9, [X22]
	0x03ACF86C UBFM X8, X20, 0x18, 0x1F
	0x03ACF870 UCVTF S0, W8
	0x03ACF874 UBFM W8, W20, 0x10, 0x17
	0x03ACF878 FDIV S3, S0, S4
	0x03ACF87C UCVTF S0, W8
	0x03ACF880 LDR X8, [X9 + 0xB8]
	0x03ACF884 UBFM W9, W20, 0x8, 0xF
	0x03ACF888 FDIV S2, S0, S4
	0x03ACF88C UCVTF S0, W9
	0x03ACF890 LDR W1, [X8 + 0x8]
	0x03ACF894 AND W8, W20, 0xFF
	0x03ACF898 FDIV S1, S0, S4
	0x03ACF89C UCVTF S0, W8
	0x03ACF8A0 FDIV S0, S0, S4
	0x03ACF8A4 MOV X0, X21
	0x03ACF8A8 MOV X2, X31
	0x03ACF8AC BL 0x3C14988
	0x03ACF8B0 LDR X0, [X23]
	0x03ACF8B4 LDR X20, [X19 + 0x130]
	0x03ACF8B8 LDR W8, [X0 + 0xE0]
	0x03ACF8BC CBNZ W8, 0x3ACF8C4
	0x03ACF8C0 BL 0x1C16DFC
	0x03ACF8C4 MOV X0, X20
	0x03ACF8C8 MOV X1, X31
	0x03ACF8CC MOV X2, X31
	0x03ACF8D0 BL 0x3C3883C
	0x03ACF8D4 TBZ X0, 0x0, 0x3ACF8F0
	0x03ACF8D8 LDR X0, [X19 + 0x6E8]
	0x03ACF8DC CBZ X0, 0x3ACF908
	0x03ACF8E0 MOV X1, X31
	0x03ACF8E4 BL 0x3C1341C
	0x03ACF8E8 STR X0, [X19 + 0x130]
	0x03ACF8EC B 0x3ACF8F4
	0x03ACF8F0 LDR X0, [X19 + 0x130]
	0x03ACF8F4 STR X0, [X19 + 0x110]
	0x03ACF8F8 LDP X20, X19, [X31 + 0x20]
	0x03ACF8FC LDP X22, X21, [X31 + 0x10]
	0x03ACF900 LDP X30, X23, [X31], #0x30
	0x03ACF904 RET
	0x03ACF908 BL 0x1C16F20
	0x03ACF90C STP X30, X23, [X31 - 0x30]!
	0x03ACF910 STP X22, X21, [X31 + 0x10]
	0x03ACF914 STP X20, X19, [X31 + 0x20]
	0x03ACF918 ADRP X21, 0x913000
	0x03ACF91C LDRB W8, [X21 + 0x4EA]
	0x03ACF920 MOV X20, X1
	0x03ACF924 MOV X19, X0
	0x03ACF928 TBNZ X8, 0x0, 0x3ACF94C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x914000
	008 Move X22, 0x68A000
	009 Move W8, [X20+1244]
	010 Move X22, [X22+824]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0x625000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x625000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x68A000
	023 Move X0, [X0+1472]
	024 Call 0x1C17CF4
	025 Move X0, 0x68A000
	026 Move X0, [X0+824]
	027 Call 0x1C17CF4
	028 Move X0, 0x625000
	029 Move X0, [X0+2760]
	030 Call 0x1C17CF4
	031 Move X0, 0x68A000
	032 Move X0, [X0+1480]
	033 Call 0x1C17CF4
	034 Move X0, 0x68A000
	035 Move X0, [X0+1488]
	036 Call 0x1C17CF4
	037 Move X0, 0x68A000
	038 Move X0, [X0+1496]
	039 Call 0x1C17CF4
	040 Move X0, 0x68A000
	041 Move X0, [X0+1504]
	042 Call 0x1C17CF4
	043 Move X0, 0x68A000
	044 Move X0, [X0+1512]
	045 Call 0x1C17CF4
	046 Move X0, 0x68A000
	047 Move X0, [X0+1520]
	048 Call 0x1C17CF4
	049 Move X0, 0x68A000
	050 Move X0, [X0+1528]
	051 Call 0x1C17CF4
	052 Move X0, 0x62E000
	053 Move X0, [X0+1936]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+1244], W8
	057 Move X0, [X22]
	058 Move X23, 0x625000
	059 Move W8, [X0+224]
	060 Move X23, [X23+1432]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X31
	065 Call ShaderUtilities.GetShaderPropertyIDs
	066 Move X0, [X23]
	067 Move X20, [X19+248]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {99}
	080 Move X0, X31
	081 Call TMP_Settings.get_defaultFontAsset
	082 Move X8, [X23]
	083 Move X20, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {261}
	097 Move X0, X31
	098 Call TMP_Settings.get_defaultFontAsset
	099 Move X0, [X19+248]
	100 Compare X0, 0
	101 JumpIfEqual {436}
	102 Move X1, X31
	103 Call TMP_FontAsset.get_characterLookupTable, X0
	104 Compare X0, 0
	105 JumpIfNotEqual {111}
	106 Move X0, [X19+248]
	107 Compare X0, 0
	108 JumpIfEqual {436}
	109 Move X1, X31
	110 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	111 Move X0, [X23]
	112 Move X20, [X19+272]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X20
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Equality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {184}
	125 Move X0, [X22]
	126 Move X20, [X19+272]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Compare X20, 0
	132 JumpIfEqual {436}
	133 Move X8, [X22]
	134 Move X0, X20
	135 Move X2, X31
	136 Move X8, [X8+184]
	137 Move W1, [X8]
	138 Call Material.GetTexture, X0, X1
	139 Move X8, [X23]
	140 Move X20, X0
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X0, X20
	147 Move X1, X31
	148 Move X2, X31
	149 Call Object.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {184}
	154 Move X0, [X19+248]
	155 Compare X0, 0
	156 JumpIfEqual {436}
	157 Move X1, X31
	158 Call TMP_FontAsset.get_atlasTexture, X0
	159 Compare X0, 0
	160 JumpIfEqual {436}
	161 Move X1, X31
	162 Call Object.GetInstanceID, X0
	163 Move X8, [X22]
	164 Move X21, [X19+272]
	165 Move W20, W0
	166 Move W9, [X8+224]
	167 Compare W9, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Compare X21, 0
	172 JumpIfEqual {436}
	173 Move X8, [X22]
	174 Move X0, X21
	175 Move X2, X31
	176 Move X8, [X8+184]
	177 Move W1, [X8]
	178 Call Material.GetTexture, X0, X1
	179 Compare X0, 0
	180 JumpIfEqual {436}
	181 Move X1, X31
	182 Call Object.GetInstanceID, X0
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X8, [X19+248]
	185 Compare X8, 0
	186 JumpIfEqual {436}
	187 Move X0, [X23]
	188 Move X20, [X8+32]
	189 Move W9, [X0+224]
	190 Compare W9, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X0, X20
	194 Move X1, X31
	195 Move X2, X31
	196 Call Object.op_Equality, X0, X1
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {367}
	201 Move X8, 0x625000
	202 Move X8, [X8+2760]
	203 Move W1, 5
	204 Move X0, [X8]
	205 Call 0x1C17D6C
	206 Compare X0, 0
	207 JumpIfEqual {436}
	208 Move W8, [X0+24]
	209 Move X20, X0
	210 Compare W8, 0
	211 JumpIfEqual {437}
	212 Move X8, 0x68A000
	213 Move X8, [X8+1480]
	214 Move X8, [X8]
	215 Move [X20+32], X8
	216 Move X0, [X19+248]
	217 Compare X0, 0
	218 JumpIfEqual {436}
	219 Move X1, X31
	220 Call Object.get_name, X0
	221 Move W8, [X20+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move [X20+40], X0
	225 Move X8, 0x68A000
	226 Move X8, [X8+1528]
	227 Move X0, X19
	228 Move X1, X31
	229 Move X8, [X8]
	230 Move [X20+48], X8
	231 Call Component.get_gameObject, X0
	232 Compare X0, 0
	233 JumpIfEqual {436}
	234 Move X1, X31
	235 Call Object.get_name, X0
	236 Move W8, [X20+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move [X20+56], X0
	240 Move X8, 0x68A000
	241 Move X8, [X8+1488]
	242 Move X0, X20
	243 Move X1, X31
	244 Move X8, [X8]
	245 Move [X20+64], X8
	246 Call String.Concat, X0
	247 Move X8, 0x625000
	248 Move X8, [X8+2600]
	249 Move X20, X0
	250 Move X8, [X8]
	251 Move W9, [X8+224]
	252 Compare W9, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X8
	255 Call 0x1C17DFC
	256 Move X0, X20
	257 Move X1, X19
	258 Move X2, X31
	259 Call Debug.LogWarning, X0, X1
	260 Move X20, [X19+272]
	261 Move X8, 0x68A000
	262 Move X9, 0x68A000
	263 Move X8, [X8+1520]
	264 Move X9, [X9+1472]
	265 Move X0, [X8]
	266 Move X1, [X9]
	267 Call 0x2242FB8, X0
	268 Move [X19+248], X0
	269 Move X20, X0
	270 Move X0, [X23]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X0, X20
	276 Move X1, X31
	277 Move X2, X31
	278 Call Object.op_Equality, X0, X1
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {320}
	283 Move X0, X19
	284 Move X1, X31
	285 Call Component.get_gameObject, X0
	286 Compare X0, 0
	287 JumpIfEqual {436}
	288 Move X1, X31
	289 Call Object.get_name, X0
	290 Move X8, 0x68A000
	291 Move X8, [X8+1496]
	292 Move X9, 0x62E000
	293 Move X9, [X9+1936]
	294 Move X1, X0
	295 Move X8, [X8]
	296 Move X3, X31
	297 Move X2, [X9]
	298 Move X0, X8
	299 Call String.Concat, X0, X1, X2
	300 Move X8, 0x625000
	301 Move X8, [X8+2600]
	302 Move X20, X0
	303 Move X8, [X8]
	304 Move W9, [X8+224]
	305 Compare W9, 0
	306 JumpIfNotEqual {309}
	307 Move X0, X8
	308 Call 0x1C17DFC
	309 Move X0, X20
	310 Move X1, X19
	311 Move X20, [X31+32]
	312 Move X19, [X31+40]
	313 Move X22, [X31+16]
	314 Move X21, [X31+24]
	315 Move X2, X31
	316 Move X30, [X31+48]
	317 Move X23, [X31+56]
	318 Call Debug.LogWarning, X0, X1
	319 Return 
	320 Move X0, [X19+248]
	321 Compare X0, 0
	322 JumpIfEqual {436}
	323 Move X1, X31
	324 Call TMP_FontAsset.get_characterLookupTable, X0
	325 Compare X0, 0
	326 JumpIfNotEqual {339}
	327 Move X8, 0x625000
	328 Move X8, [X8+2600]
	329 Move X0, [X8]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X8, 0x68A000
	335 Move X8, [X8+1512]
	336 Move X1, X31
	337 Move X0, [X8]
	338 Call Debug.Log, X0
	339 Move X8, [X19+248]
	340 Compare X8, 0
	341 JumpIfEqual {436}
	342 Move X0, [X8+32]
	343 Move [X19+272], X0
	344 Compare X0, 0
	345 JumpIfEqual {436}
	346 Move X8, 0x68A000
	347 Move X8, [X8+1504]
	348 Move S0, W31
	349 Move X2, X31
	350 Move X1, [X8]
	351 Call Material.SetFloat, X0, X1, V0
	352 Move X0, [X22]
	353 Move X20, [X19+272]
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Compare X20, 0
	359 JumpIfEqual {436}
	360 Move X8, [X22]
	361 Move S0, 4
	362 Move X0, X20
	363 Move X2, X31
	364 Move X8, [X8+184]
	365 Move X1, [X8+280]
	366 Call Material.SetFloat, X0, X1, V0
	367 Move X8, [X19+248]
	368 Compare X8, 0
	369 JumpIfEqual {436}
	370 Move X20, [X8+32]
	371 Move [X19+272], X20
	372 Move X0, [X22]
	373 Move W8, [X0+224]
	374 Compare W8, 0
	375 JumpIfNotEqual {377}
	376 Call 0x1C17DFC
	377 Compare X20, 0
	378 JumpIfEqual {436}
	379 Move X8, [X22]
	380 Move S0, 4
	381 Move X0, X20
	382 Move X2, X31
	383 Move X8, [X8+184]
	384 Move X1, [X8+280]
	385 Call Material.SetFloat, X0, X1, V0
	386 Move X0, [X19+272]
	387 Compare X0, 0
	388 JumpIfEqual {436}
	389 Move X1, X31
	390 Call Material.get_passCount, X0
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, [X19+1768]
	393 Compare X0, 0
	394 JumpIfEqual {436}
	395 Move W1, W31
	396 Move X2, X31
	397 Call Renderer.set_receiveShadows, X0, X1
	398 Move X0, [X19+1768]
	399 Compare X0, 0
	400 JumpIfEqual {436}
	401 Move W1, W31
	402 Move X2, X31
	403 Call Renderer.set_shadowCastingMode, X0, X1
	404 Move X8, [X19]
	405 Move X0, X19
	406 Move X9, [X8+1960]
	407 Move X1, [X8+1968]
	408 NotImplemented "Instruction BLR not yet implemented."
	409 Move [X19+1560], S0
	410 Move X0, [X22]
	411 Move X20, [X19+272]
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {416}
	415 Call 0x1C17DFC
	416 Move X0, X20
	417 Move X1, X31
	418 Call ShaderUtilities.IsMaskingEnabled, X0
	419 Move X1, [X19+248]
	420 And W8, W0, 1
	421 Move X0, X19
	422 Move X2, X31
	423 Move [X19+775], W8
	424 Call TMP_Text.GetSpecialCharacters, X0, X1
	425 Move X8, [X19]
	426 Move X0, X19
	427 Move X20, [X31+32]
	428 Move X19, [X31+40]
	429 Move X22, [X31+16]
	430 Move X21, [X31+24]
	431 Move X2, [X8+776]
	432 Move X1, [X8+784]
	433 Move X30, [X31+48]
	434 Move X23, [X31+56]
	435 CallNoReturn X2
	436 Call 0x1C17F20
	437 Call 0x1C17F28

Method: System.Void UpdateEnvMapMatrix()

Disassembly:
	0x03ACF92C ADRP X0, 0x624000
	0x03ACF930 LDR X0, [X0 + 0x598]
	0x03ACF934 BL 0x1C16CF4
	0x03ACF938 ADRP X0, 0x689000
	0x03ACF93C LDR X0, [X0 + 0x338]
	0x03ACF940 BL 0x1C16CF4
	0x03ACF944 MOVZ W8, 0x1
	0x03ACF948 STRB W8, [X21 + 0x4EA]
	0x03ACF94C LDR X0, [X19 + 0x6E8]
	0x03ACF950 CBZ X0, 0x3ACFA30
	0x03ACF954 ADRP X22, 0x689000
	0x03ACF958 LDR X22, [X22 + 0x338]
	0x03ACF95C MOV X1, X31
	0x03ACF960 BL 0x3C1341C
	0x03ACF964 LDR X8, [X22]
	0x03ACF968 MOV X21, X0
	0x03ACF96C LDR W9, [X8 + 0xE0]
	0x03ACF970 CBNZ W9, 0x3ACF97C
	0x03ACF974 MOV X0, X8
	0x03ACF978 BL 0x1C16DFC
	0x03ACF97C CBZ X21, 0x3ACFA30
	0x03ACF980 MOVZ W9, 0x437F0000
	0x03ACF984 ADRP X23, 0x624000
	0x03ACF988 LDR X23, [X23 + 0x598]
	0x03ACF98C FMOV S4, W9
	0x03ACF990 LDR X9, [X22]
	0x03ACF994 UBFM X8, X20, 0x18, 0x1F
	0x03ACF998 UCVTF S0, W8
	0x03ACF99C UBFM W8, W20, 0x10, 0x17
	0x03ACF9A0 FDIV S3, S0, S4
	0x03ACF9A4 UCVTF S0, W8
	0x03ACF9A8 LDR X8, [X9 + 0xB8]
	0x03ACF9AC UBFM W9, W20, 0x8, 0xF
	0x03ACF9B0 FDIV S2, S0, S4
	0x03ACF9B4 UCVTF S0, W9
	0x03ACF9B8 LDR W1, [X8 + 0x44]
	0x03ACF9BC AND W8, W20, 0xFF
	0x03ACF9C0 FDIV S1, S0, S4
	0x03ACF9C4 UCVTF S0, W8
	0x03ACF9C8 FDIV S0, S0, S4
	0x03ACF9CC MOV X0, X21
	0x03ACF9D0 MOV X2, X31
	0x03ACF9D4 BL 0x3C14988
	0x03ACF9D8 LDR X0, [X23]
	0x03ACF9DC LDR X20, [X19 + 0x130]
	0x03ACF9E0 LDR W8, [X0 + 0xE0]
	0x03ACF9E4 CBNZ W8, 0x3ACF9EC
	0x03ACF9E8 BL 0x1C16DFC
	0x03ACF9EC MOV X0, X20
	0x03ACF9F0 MOV X1, X31
	0x03ACF9F4 MOV X2, X31
	0x03ACF9F8 BL 0x3C3883C
	0x03ACF9FC TBZ X0, 0x0, 0x3ACFA18
	0x03ACFA00 LDR X0, [X19 + 0x6E8]
	0x03ACFA04 CBZ X0, 0x3ACFA30
	0x03ACFA08 MOV X1, X31
	0x03ACFA0C BL 0x3C1341C
	0x03ACFA10 STR X0, [X19 + 0x130]
	0x03ACFA14 B 0x3ACFA1C
	0x03ACFA18 LDR X0, [X19 + 0x130]
	0x03ACFA1C STR X0, [X19 + 0x110]
	0x03ACFA20 LDP X20, X19, [X31 + 0x20]
	0x03ACFA24 LDP X22, X21, [X31 + 0x10]
	0x03ACFA28 LDP X30, X23, [X31], #0x30
	0x03ACFA2C RET
	0x03ACFA30 BL 0x1C16F20
	0x03ACFA34 STR X30, [X31 - 0x30]!
	0x03ACFA38 STP X22, X21, [X31 + 0x10]
	0x03ACFA3C STP X20, X19, [X31 + 0x20]
	0x03ACFA40 ADRP X20, 0x913000
	0x03ACFA44 ADRP X21, 0x689000
	0x03ACFA48 LDRB W8, [X20 + 0x4EC]
	0x03ACFA4C LDR X21, [X21 + 0x338]
	0x03ACFA50 MOV X19, X0
	0x03ACFA54 TBNZ X8, 0x0, 0x3ACFA6C
	0x03ACFA58 ADRP X0, 0x689000
	0x03ACFA5C LDR X0, [X0 + 0x338]
	0x03ACFA60 BL 0x1C16CF4
	0x03ACFA64 MOVZ W8, 0x1
	0x03ACFA68 STRB W8, [X20 + 0x4EC]
	0x03ACFA6C LDR X0, [X21]
	0x03ACFA70 LDRB W22, [X19 + 0x304]
	0x03ACFA74 LDR X20, [X19 + 0x110]
	0x03ACFA78 LDR W8, [X0 + 0xE0]
	0x03ACFA7C CBNZ W8, 0x3ACFA88
	0x03ACFA80 BL 0x1C16DFC
	0x03ACFA84 LDR X0, [X21]
	0x03ACFA88 CBZ X20, 0x3ACFB18
	0x03ACFA8C LDR X8, [X0 + 0xB8]
	0x03ACFA90 LDR X1, [X8 + 0x118]
	0x03ACFA94 CBZ W22, 0x3ACFAC4
	0x03ACFA98 FMOV S0, W31
	0x03ACFA9C MOV X0, X20
	0x03ACFAA0 MOV X2, X31
	0x03ACFAA4 BL 0x3C15C58
	0x03ACFAA8 LDR X0, [X19 + 0x6E8]
	0x03ACFAAC CBZ X0, 0x3ACFB18
	0x03ACFAB0 MOV X1, X31
	0x03ACFAB4 BL 0x3C1341C
	0x03ACFAB8 CBZ X0, 0x3ACFB18
	0x03ACFABC MOVZ W1, 0xFA0
	0x03ACFAC0 B 0x3ACFAEC
	0x03ACFAC4 FMOV S0, 4
	0x03ACFAC8 MOV X0, X20
	0x03ACFACC MOV X2, X31
	0x03ACFAD0 BL 0x3C15C58
	0x03ACFAD4 LDR X0, [X19 + 0x6E8]
	0x03ACFAD8 CBZ X0, 0x3ACFB18
	0x03ACFADC MOV X1, X31
	0x03ACFAE0 BL 0x3C1341C
	0x03ACFAE4 CBZ X0, 0x3ACFB18
	0x03ACFAE8 MOVN W1, 0x0
	0x03ACFAEC MOV X2, X31
	0x03ACFAF0 BL 0x3C14DBC
	0x03ACFAF4 LDR X0, [X19 + 0x6E8]
	0x03ACFAF8 CBZ X0, 0x3ACFB18
	0x03ACFAFC MOV X1, X31
	0x03ACFB00 BL 0x3C1341C
	0x03ACFB04 STR X0, [X19 + 0x110]
	0x03ACFB08 LDP X20, X19, [X31 + 0x20]
	0x03ACFB0C LDP X22, X21, [X31 + 0x10]
	0x03ACFB10 LDR X30, [X31], #0x30
	0x03ACFB14 RET
	0x03ACFB18 BL 0x1C16F20
	0x03ACFB1C STR X30, [X31 - 0x40]!
	0x03ACFB20 STP X24, X23, [X31 + 0x10]
	0x03ACFB24 STP X22, X21, [X31 + 0x20]
	0x03ACFB28 STP X20, X19, [X31 + 0x30]
	0x03ACFB2C ADRP X20, 0x913000
	0x03ACFB30 LDRB W8, [X20 + 0x4ED]
	0x03ACFB34 MOV X19, X0
	0x03ACFB38 TBNZ X8, 0x0, 0x3ACFB68
	0x03ACFB3C ADRP X0, 0x624000
	0x03ACFB40 LDR X0, [X0 + 0x598]
	0x03ACFB44 BL 0x1C16CF4
	0x03ACFB48 ADRP X0, 0x689000
	0x03ACFB4C LDR X0, [X0 + 0x338]
	0x03ACFB50 BL 0x1C16CF4
	0x03ACFB54 ADRP X0, 0x689000
	0x03ACFB58 LDR X0, [X0 + 0x5E0]
	0x03ACFB5C BL 0x1C16CF4
	0x03ACFB60 MOVZ W8, 0x1
	0x03ACFB64 STRB W8, [X20 + 0x4ED]
	0x03ACFB68 LDR X0, [X19 + 0x6E8]
	0x03ACFB6C CBZ X0, 0x3ACFD9C
	0x03ACFB70 LDRB W20, [X19 + 0x306]
	0x03ACFB74 MOV X1, X31
	0x03ACFB78 BL 0x3C1341C
	0x03ACFB7C CBZ X0, 0x3ACFD9C
	0x03ACFB80 ADRP X8, 0x689000
	0x03ACFB84 LDR X8, [X8 + 0x5E0]
	0x03ACFB88 ADRP X21, 0x624000
	0x03ACFB8C ADRP X22, 0x689000
	0x03ACFB90 LDR X1, [X8]
	0x03ACFB94 LDR X21, [X21 + 0x598]
	0x03ACFB98 LDR X22, [X22 + 0x338]
	0x03ACFB9C CBZ W20, 0x3ACFCA0

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+208], D14
	003 Move [X31+224], D13
	004 Move [X31+232], D12
	005 Move [X31+240], D11
	006 Move [X31+248], D10
	007 Move [X31+256], D9
	008 Move [X31+264], D8
	009 Move [X31+272], X29
	010 Move [X31+280], X30
	011 Move [X31+288], X22
	012 Move [X31+296], X21
	013 Move [X31+304], X20
	014 Move [X31+312], X19
	015 Move X20, 0x914000
	016 Move X21, 0x68A000
	017 Move W8, [X20+1245]
	018 Move X21, [X21+824]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x625000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x68A000
	028 Move X0, [X0+824]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1245], W8
	032 Move X0, [X21]
	033 Move X20, [X19+272]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Compare X20, 0
	039 JumpIfEqual {203}
	040 Move X8, [X21]
	041 Move X0, X20
	042 Move X2, X31
	043 Move X8, [X8+184]
	044 Move W1, [X8+140]
	045 Call Material.HasProperty, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {188}
	050 Move X0, [X21]
	051 Move X20, [X19+272]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Compare X20, 0
	057 JumpIfEqual {203}
	058 Move X8, [X21]
	059 Move X0, X20
	060 Move X2, X31
	061 Move X8, [X8+184]
	062 Move W1, [X8+140]
	063 Call Material.GetTexture, X0, X1
	064 Move X8, 0x625000
	065 Move X8, [X8+1432]
	066 Move X20, X0
	067 Move X8, [X8]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {188}
	081 Move X0, [X21]
	082 Move X20, [X19+272]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Compare X20, 0
	088 JumpIfEqual {203}
	089 Move X8, [X21]
	090 Move X0, X20
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move W1, [X8+148]
	094 Call Material.GetVector, X0, X1
	095 Move X20, 0x90A000
	096 Move W8, [X20+1923]
	097 Move V11, V0
	098 Move V12, V1
	099 Move V13, V2
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x625000
	103 Move X0, [X0+1440]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X20+1923], W8
	107 Move X20, 0x625000
	108 Move X20, [X20+1440]
	109 Move X9, -50216960
	110 Move V2, [X9+260]
	111 Move X0, X31
	112 Move X8, [X20]
	113 Multiply S0, S11, S2
	114 Multiply S1, S12, S2
	115 Move X8, [X8+184]
	116 Multiply S2, S13, S2
	117 Move S10, [X8]
	118 Move S9, [X8+4]
	119 Move V8, [X8+8]
	120 Call Quaternion.Internal_FromEulerRad, X0
	121 Move X22, 0x90A000
	122 Move W8, [X22+2139]
	123 Move V11, V0
	124 Move V12, V1
	125 Move V13, V2
	126 Move V14, V3
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0x625000
	130 Move X0, [X0+1440]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X22+2139], W8
	134 Move X8, [X20]
	135 Move V1, V9
	136 Move V2, V8
	137 Move V3, V11
	138 Move X8, [X8+184]
	139 Move V4, V12
	140 Move V5, V13
	141 Move V6, V14
	142 Move V0, [X8+20]
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Add X8, X31, 80
	145 Move X0, X31
	146 Move [X31+8], S0
	147 Move V0, V10
	148 Move [X31], X9
	149 Call Matrix4x4.TRS, X0, X1, X2
	150 Move V1, [X31+112]
	151 Move V0, [X31+128]
	152 Move V3, [X31+80]
	153 Move V2, [X31+96]
	154 Add X8, X19, 1812
	155 Move [X31+176], V1
	156 Move [X31+184], V0
	157 Move [X31+144], V3
	158 Move [X31+152], V2
	159 Move [X8+32], V1
	160 Move [X8+40], V0
	161 Move [X8], V3
	162 Move [X8+8], V2
	163 Move X8, [X21]
	164 Move X0, [X19+272]
	165 Move V0, [X31+144]
	166 Move V1, [X31+160]
	167 Move V2, [X31+176]
	168 Move V3, [X31+192]
	169 Move X8, [X8+184]
	170 Move W1, [X8+144]
	171 Move [X31+80], V0
	172 Move [X31+88], V1
	173 Move [X31+112], V2
	174 Move [X31+120], V3
	175 Compare X0, 0
	176 JumpIfEqual {203}
	177 Move V0, [X31+80]
	178 Move V1, [X31+96]
	179 Move V2, [X31+112]
	180 Move V3, [X31+128]
	181 Add X2, X31, 16
	182 Move X3, X31
	183 Move [X31+16], V0
	184 Move [X31+24], V1
	185 Move [X31+48], V2
	186 Move [X31+56], V3
	187 Call Material.SetMatrix, X0, X1, X2
	188 Move X20, [X31+304]
	189 Move X19, [X31+312]
	190 Move X22, [X31+288]
	191 Move X21, [X31+296]
	192 Move X29, [X31+272]
	193 Move X30, [X31+280]
	194 Move D9, [X31+256]
	195 Move D8, [X31+264]
	196 Move D11, [X31+240]
	197 Move D10, [X31+248]
	198 Move D13, [X31+224]
	199 Move D12, [X31+232]
	200 Move V14, [X31+208]
	201 Add X31, X31, 320
	202 Return 
	203 Call 0x1C17F20

Method: System.Void SetMask(TMPro.MaskingTypes maskType)

Disassembly:
	0x03ACDC38 CMP X25, X9
	0x03ACDC3C B.CS 0x3ACDD1C
	0x03ACDC40 CBZ X20, 0x3ACDD18
	0x03ACDC44 ADD X8, X8, X21
	0x03ACDC48 LDR X1, [X8 + 0x30]
	0x03ACDC4C MOV X0, X20
	0x03ACDC50 MOV X2, X31
	0x03ACDC54 BL 0x3C17F08
	0x03ACDC58 LDR X8, [X19 + 0x368]
	0x03ACDC5C CBZ X8, 0x3ACDD18
	0x03ACDC60 LDR X8, [X8 + 0x60]
	0x03ACDC64 CBZ X8, 0x3ACDD18
	0x03ACDC68 LDR W9, [X8 + 0x18]
	0x03ACDC6C CMP X25, X9
	0x03ACDC70 B.CS 0x3ACDD1C
	0x03ACDC74 ADD X8, X8, X21
	0x03ACDC78 LDR X1, [X8 + 0x48]
	0x03ACDC7C MOV X0, X20
	0x03ACDC80 MOV X2, X31
	0x03ACDC84 BL 0x3C1810C
	0x03ACDC88 LDR X8, [X19 + 0x368]
	0x03ACDC8C CBZ X8, 0x3ACDD18
	0x03ACDC90 LDR X8, [X8 + 0x60]
	0x03ACDC94 CBZ X8, 0x3ACDD18
	0x03ACDC98 LDR W9, [X8 + 0x18]
	0x03ACDC9C CMP X25, X9
	0x03ACDCA0 B.CS 0x3ACDD1C
	0x03ACDCA4 ADD X8, X8, X21
	0x03ACDCA8 LDR X1, [X8 + 0x50]
	0x03ACDCAC MOV X0, X20
	0x03ACDCB0 MOV X2, X31
	0x03ACDCB4 BL 0x3C181B8
	0x03ACDCB8 LDR X8, [X19 + 0x368]
	0x03ACDCBC CBZ X8, 0x3ACDD18
	0x03ACDCC0 LDR X8, [X8 + 0x60]
	0x03ACDCC4 CBZ X8, 0x3ACDD18
	0x03ACDCC8 LDR W9, [X8 + 0x18]
	0x03ACDCCC CMP X25, X9
	0x03ACDCD0 B.CS 0x3ACDD1C
	0x03ACDCD4 ADD X8, X8, X21
	0x03ACDCD8 LDR X1, [X8 + 0x58]
	0x03ACDCDC MOV X0, X20
	0x03ACDCE0 MOV X2, X31
	0x03ACDCE4 BL 0x3C18318
	0x03ACDCE8 MOV X0, X20
	0x03ACDCEC MOV X1, X31
	0x03ACDCF0 BL 0x3C19CD4
	0x03ACDCF4 ADD X21, X21, 0x50
	0x03ACDCF8 CMP X23, X21
	0x03ACDCFC ADD X24, X24, 0x1
	0x03ACDD00 B.NE 0x3ACDBB0
	0x03ACDD04 LDP X20, X19, [X31 + 0x30]
	0x03ACDD08 LDP X22, X21, [X31 + 0x20]
	0x03ACDD0C LDP X24, X23, [X31 + 0x10]
	0x03ACDD10 LDP X30, X25, [X31], #0x40
	0x03ACDD14 RET
	0x03ACDD18 BL 0x1C16F20
	0x03ACDD1C BL 0x1C16F28
	0x03ACDD20 LDR X8, [X0]
	0x03ACDD24 LDR X2, [X8 + 0x6C8]
	0x03ACDD28 LDR X1, [X8 + 0x6D0]
	0x03ACDD2C BR X2
	0x03ACDD30 RET
	0x03ACDD34 RET
	0x03ACDD38 STR X30, [X31 - 0x50]!
	0x03ACDD3C STP X26, X25, [X31 + 0x10]
	0x03ACDD40 STP X24, X23, [X31 + 0x20]
	0x03ACDD44 STP X22, X21, [X31 + 0x30]
	0x03ACDD48 STP X20, X19, [X31 + 0x40]
	0x03ACDD4C ADRP X20, 0x915000
	0x03ACDD50 ADRP X22, 0x652000
	0x03ACDD54 ADRP X21, 0x626000
	0x03ACDD58 LDRB W8, [X20 + 0x4D8]
	0x03ACDD5C LDR X22, [X22 + 0x5A0]
	0x03ACDD60 LDR X21, [X21 + 0x598]
	0x03ACDD64 MOV X19, X0
	0x03ACDD68 TBNZ X8, 0x0, 0x3ACDDF8
	0x03ACDD6C ADRP X0, 0x68B000
	0x03ACDD70 LDR X0, [X0 + 0x598]
	0x03ACDD74 BL 0x1C16CF4
	0x03ACDD78 ADRP X0, 0x62D000
	0x03ACDD7C LDR X0, [X0 + 0xB38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x916000
	006 Move W8, [X21+1246]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x68C000
	014 Move X0, [X0+824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1246], W8
	018 Move X21, 0x68C000
	019 Move X21, [X21+824]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare W20, 0
	023 JumpIfNotEqual {93}
	024 Move X0, [X21]
	025 Move X20, [X19+272]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Compare X20, 0
	031 JumpIfEqual {98}
	032 Move X8, [X21]
	033 Move X0, X20
	034 Move X2, X31
	035 Move X8, [X8+184]
	036 Move X1, [X8+248]
	037 Call Material.DisableKeyword, X0, X1
	038 Move X0, [X21]
	039 Move X20, [X19+272]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Compare X20, 0
	045 JumpIfEqual {98}
	046 Move X8, [X21]
	047 Move X0, X20
	048 Move X2, X31
	049 Move X8, [X8+184]
	050 Move X1, [X8+248]
	051 Call Material.EnableKeyword, X0, X1
	052 Move X0, [X19+272]
	053 Compare X0, 0
	054 JumpIfEqual {98}
	055 Move X8, [X21]
	056 Move X8, [X8+184]
	057 Move X1, [X8+256]
	058 Move X0, [X21]
	059 Move X20, [X19+272]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Compare X20, 0
	065 JumpIfEqual {98}
	066 Move X8, [X21]
	067 Move X0, X20
	068 Move X2, X31
	069 Move X8, [X8+184]
	070 Move X1, [X8+256]
	071 Call Material.EnableKeyword, X0, X1
	072 Move X0, [X19+272]
	073 Compare X0, 0
	074 JumpIfEqual {98}
	075 Move X8, [X21]
	076 Move X8, [X8+184]
	077 Move X1, [X8+248]
	078 Move X2, X31
	079 Call Material.DisableKeyword, X0, X1
	080 Move X0, [X19+272]
	081 Compare X0, 0
	082 JumpIfEqual {98}
	083 Move X8, [X21]
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X2, X31
	087 Move X8, [X8+184]
	088 Move X1, [X8+264]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Call Material.DisableKeyword, X0, X1
	092 Return 
	093 Move X20, [X31+16]
	094 Move X19, [X31+24]
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Return 
	098 Call 0x1C17F20

Method: System.Void SetMaskCoordinates(UnityEngine.Vector4 coords)

Disassembly:
	0x03ACDDC8 BL 0x1C16CF4
	0x03ACDDCC ADRP X0, 0x68B000
	0x03ACDDD0 LDR X0, [X0 + 0x5B0]
	0x03ACDDD4 BL 0x1C16CF4
	0x03ACDDD8 ADRP X0, 0x68B000
	0x03ACDDDC LDR X0, [X0 + 0x368]
	0x03ACDDE0 BL 0x1C16CF4
	0x03ACDDE4 ADRP X0, 0x68B000
	0x03ACDDE8 LDR X0, [X0 + 0x5B8]
	0x03ACDDEC BL 0x1C16CF4
	0x03ACDDF0 MOVZ W8, 0x1
	0x03ACDDF4 STRB W8, [X20 + 0x4D8]
	0x03ACDDF8 LDR X1, [X22]
	0x03ACDDFC MOV X0, X19
	0x03ACDE00 BL 0x21A3894
	0x03ACDE04 STR X0, [X19 + 0x6E8]
	0x03ACDE08 MOV X20, X0
	0x03ACDE0C LDR X0, [X21]
	0x03ACDE10 LDR W8, [X0 + 0xE0]
	0x03ACDE14 CBNZ W8, 0x3ACDE1C
	0x03ACDE18 BL 0x1C16DFC
	0x03ACDE1C MOV X0, X20
	0x03ACDE20 MOV X1, X31
	0x03ACDE24 MOV X2, X31
	0x03ACDE28 BL 0x3C3883C
	0x03ACDE2C TBZ X0, 0x0, 0x3ACDE54
	0x03ACDE30 MOV X0, X19
	0x03ACDE34 MOV X1, X31
	0x03ACDE38 BL 0x3C32ECC
	0x03ACDE3C CBZ X0, 0x3ACE0C8
	0x03ACDE40 ADRP X8, 0x68B000
	0x03ACDE44 LDR X8, [X8 + 0x5A8]
	0x03ACDE48 LDR X1, [X8]
	0x03ACDE4C BL 0x21E51FC
	0x03ACDE50 STR X0, [X19 + 0x6E8]
	0x03ACDE54 ADRP X20, 0x62D000
	0x03ACDE58 LDR X20, [X20 + 0xB38]
	0x03ACDE5C MOV X0, X19
	0x03ACDE60 MOV X1, X31
	0x03ACDE64 BL 0x3AF8E0C

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x916000
	010 Move X20, 0x68C000
	011 Move W8, [X21+1247]
	012 Move X20, [X20+824]
	013 Move V8, V3
	014 Move V9, V2
	015 Move V10, V1
	016 Move V11, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x68C000
	023 Move X0, [X0+824]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1247], W8
	027 Move X0, [X20]
	028 Move X19, [X19+272]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Compare X19, 0
	034 JumpIfEqual {54}
	035 Move X8, [X20]
	036 Move X0, X19
	037 Move V2, V9
	038 Move V3, V8
	039 Move X8, [X8+184]
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Move D9, [X31+16]
	045 Move D8, [X31+24]
	046 Move W1, [X8+156]
	047 Move V0, V11
	048 Move V1, V10
	049 Move X2, X31
	050 Move D11, [X31+64]
	051 Move D10, [X31+72]
	052 Call Material.SetVector, X0, X1, X2
	053 Return 
	054 Call 0x1C17F20

Method: System.Void SetMaskCoordinates(UnityEngine.Vector4 coords, System.Single softX, System.Single softY)

Disassembly:
	0x03ACDEC8 LDR X1, [X8]
	0x03ACDECC BL 0x21E51FC
	0x03ACDED0 STR X0, [X19 + 0x6F0]
	0x03ACDED4 LDR X0, [X21]
	0x03ACDED8 LDR X20, [X19 + 0x3A0]
	0x03ACDEDC LDR W8, [X0 + 0xE0]
	0x03ACDEE0 CBNZ W8, 0x3ACDEE8
	0x03ACDEE4 BL 0x1C16DFC
	0x03ACDEE8 MOV X0, X20
	0x03ACDEEC MOV X1, X31
	0x03ACDEF0 MOV X2, X31
	0x03ACDEF4 BL 0x3C3883C
	0x03ACDEF8 TBZ X0, 0x0, 0x3ACDF68
	0x03ACDEFC ADRP X8, 0x62D000
	0x03ACDF00 LDR X8, [X8 + 0x700]
	0x03ACDF04 LDR X0, [X8]
	0x03ACDF08 BL 0x1C16F10
	0x03ACDF0C MOV X1, X31
	0x03ACDF10 MOV X20, X0
	0x03ACDF14 BL 0x3C17028
	0x03ACDF18 STR X20, [X19 + 0x3A0]
	0x03ACDF1C CBZ X20, 0x3ACE0C8
	0x03ACDF20 MOVZ W1, 0x3D
	0x03ACDF24 MOV X0, X20
	0x03ACDF28 MOV X2, X31
	0x03ACDF2C BL 0x3C396EC
	0x03ACDF30 LDR X0, [X19 + 0x6F0]
	0x03ACDF34 CBZ X0, 0x3ACE0C8
	0x03ACDF38 LDR X1, [X19 + 0x3A0]
	0x03ACDF3C MOV X2, X31
	0x03ACDF40 BL 0x3C16D40
	0x03ACDF44 ADRP X8, 0x68B000
	0x03ACDF48 LDR X8, [X8 + 0x368]
	0x03ACDF4C LDR X0, [X8]
	0x03ACDF50 BL 0x1C16F10
	0x03ACDF54 MOV X1, X19
	0x03ACDF58 MOV X2, X31
	0x03ACDF5C MOV X20, X0
	0x03ACDF60 BL 0x3B1C058
	0x03ACDF64 STR X20, [X19 + 0x368]
	0x03ACDF68 LDR X0, [X19 + 0x6F0]
	0x03ACDF6C CBZ X0, 0x3ACE0C8
	0x03ACDF70 ADRP X20, 0x68B000
	0x03ACDF74 ADRP X21, 0x68B000
	0x03ACDF78 LDR X20, [X20 + 0x5B0]
	0x03ACDF7C LDR X21, [X21 + 0x5A0]
	0x03ACDF80 MOVZ W1, 0x3F
	0x03ACDF84 MOV X2, X31
	0x03ACDF88 BL 0x3C396EC
	0x03ACDF8C MOV X0, X19
	0x03ACDF90 MOV X1, X31
	0x03ACDF94 BL 0x3B0AA60
	0x03ACDF98 LDR X8, [X19]
	0x03ACDF9C MOV X0, X19
	0x03ACDFA0 LDR X9, [X8 + 0x6C8]
	0x03ACDFA4 LDR X1, [X8 + 0x6D0]
	0x03ACDFA8 BLR X9
	0x03ACDFAC LDR X8, [X19 + 0x478]
	0x03ACDFB0 CBNZ X8, 0x3ACDFCC
	0x03ACDFB4 ADRP X8, 0x68B000

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x916000
	012 Move X21, 0x68C000
	013 Move W8, [X20+1248]
	014 Move X21, [X21+824]
	015 Move V8, V5
	016 Move V9, V4
	017 Move V10, V3
	018 Move V11, V2
	019 Move V12, V1
	020 Move V13, V0
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x68C000
	027 Move X0, [X0+824]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1248], W8
	031 Move X0, [X21]
	032 Move X20, [X19+272]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Compare X20, 0
	038 JumpIfEqual {78}
	039 Move X8, [X21]
	040 Move X0, X20
	041 Move V0, V13
	042 Move V1, V12
	043 Move X8, [X8+184]
	044 Move V2, V11
	045 Move V3, V10
	046 Move X2, X31
	047 Move W1, [X8+156]
	048 Call Material.SetVector, X0, X1, X2
	049 Move X0, [X19+272]
	050 Compare X0, 0
	051 JumpIfEqual {78}
	052 Move X8, [X21]
	053 Move V0, V9
	054 Move X2, X31
	055 Move X8, [X8+184]
	056 Move W1, [X8+160]
	057 Call Material.SetFloat, X0, X1, V0
	058 Move X0, [X19+272]
	059 Compare X0, 0
	060 JumpIfEqual {78}
	061 Move X8, [X21]
	062 Move V0, V8
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X30, [X31+48]
	066 Move X21, [X31+56]
	067 Move X8, [X8+184]
	068 Move D9, [X31+32]
	069 Move D8, [X31+40]
	070 Move D11, [X31+16]
	071 Move D10, [X31+24]
	072 Move X2, X31
	073 Move W1, [X8+164]
	074 Move D13, [X31+80]
	075 Move D12, [X31+88]
	076 Call Material.SetFloat, X0, X1, V0
	077 Return 
	078 Call 0x1C17F20

Method: System.Void EnableMasking()

Disassembly:
	0x03ACFBA0 FMOV S0, 2
	0x03ACFBA4 MOV X2, X31
	0x03ACFBA8 BL 0x3C15C58
	0x03ACFBAC LDR X8, [X19 + 0x708]
	0x03ACFBB0 CBZ X8, 0x3ACFD9C
	0x03ACFBB4 MOVZ W23, 0x5
	0x03ACFBB8 LDR W9, [X8 + 0x18]
	0x03ACFBBC SUB X24, X23, 0x4
	0x03ACFBC0 CMP W24, W9
	0x03ACFBC4 B.GE 0x3ACFDA0
	0x03ACFBC8 CMP W24, W9
	0x03ACFBCC B.CS 0x3ACFDB4
	0x03ACFBD0 LDR X0, [X21]
	0x03ACFBD4 LDR X20, [X8, X23, LSL #3]
	0x03ACFBD8 LDR W9, [X0 + 0xE0]
	0x03ACFBDC CBNZ W9, 0x3ACFBE4
	0x03ACFBE0 BL 0x1C16DFC
	0x03ACFBE4 MOV X0, X20
	0x03ACFBE8 MOV X1, X31
	0x03ACFBEC MOV X2, X31
	0x03ACFBF0 BL 0x3C354F8
	0x03ACFBF4 TBZ X0, 0x0, 0x3ACFDA0
	0x03ACFBF8 LDR X8, [X19 + 0x708]
	0x03ACFBFC CBZ X8, 0x3ACFD9C
	0x03ACFC00 LDR W9, [X8 + 0x18]
	0x03ACFC04 CMP W24, W9
	0x03ACFC08 B.CS 0x3ACFDB4
	0x03ACFC0C LDR X0, [X8, X23, LSL #3]
	0x03ACFC10 CBZ X0, 0x3ACFD9C
	0x03ACFC14 MOV X1, X31
	0x03ACFC18 BL 0x3B19904
	0x03ACFC1C LDR X8, [X21]
	0x03ACFC20 MOV X20, X0
	0x03ACFC24 LDR W9, [X8 + 0xE0]
	0x03ACFC28 CBNZ W9, 0x3ACFC34
	0x03ACFC2C MOV X0, X8
	0x03ACFC30 BL 0x1C16DFC
	0x03ACFC34 MOV X0, X20
	0x03ACFC38 MOV X1, X31
	0x03ACFC3C MOV X2, X31
	0x03ACFC40 BL 0x3C354F8
	0x03ACFC44 TBZ X0, 0x0, 0x3ACFC90
	0x03ACFC48 CBZ X20, 0x3ACFD9C
	0x03ACFC4C MOV X0, X20
	0x03ACFC50 MOV X1, X31
	0x03ACFC54 BL 0x3C1341C
	0x03ACFC58 LDR X8, [X22]
	0x03ACFC5C MOV X20, X0
	0x03ACFC60 LDR W9, [X8 + 0xE0]
	0x03ACFC64 CBNZ W9, 0x3ACFC70
	0x03ACFC68 MOV X0, X8
	0x03ACFC6C BL 0x1C16DFC
	0x03ACFC70 CBZ X20, 0x3ACFD9C
	0x03ACFC74 LDR X8, [X22]
	0x03ACFC78 FMOV S0, 2
	0x03ACFC7C MOV X0, X20
	0x03ACFC80 MOV X2, X31
	0x03ACFC84 LDR X8, [X8 + 0xB8]
	0x03ACFC88 LDR X1, [X8 + 0x120]
	0x03ACFC8C BL 0x3C15C58
	0x03ACFC90 LDR X8, [X19 + 0x708]
	0x03ACFC94 ADD X23, X23, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x914000
	006 Move X21, 0x68A000
	007 Move W8, [X20+1249]
	008 Move X21, [X21+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x68A000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1249], W8
	019 Move X0, [X21]
	020 Move X20, [X19+272]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Compare X20, 0
	026 JumpIfEqual {79}
	027 Move X8, [X21]
	028 Move X0, X20
	029 Move X2, X31
	030 Move X8, [X8+184]
	031 Move W1, [X8+156]
	032 Call Material.HasProperty, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {74}
	037 Move X0, [X21]
	038 Move X20, [X19+272]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Compare X20, 0
	044 JumpIfEqual {79}
	045 Move X8, [X21]
	046 Move X0, X20
	047 Move X2, X31
	048 Move X8, [X8+184]
	049 Move X1, [X8+248]
	050 Call Material.EnableKeyword, X0, X1
	051 Move X0, [X19+272]
	052 Compare X0, 0
	053 JumpIfEqual {79}
	054 Move X8, [X21]
	055 Move X2, X31
	056 Move X8, [X8+184]
	057 Move X1, [X8+256]
	058 Call Material.DisableKeyword, X0, X1
	059 Move X0, [X19+272]
	060 Compare X0, 0
	061 JumpIfEqual {79}
	062 Move X8, [X21]
	063 Move X2, X31
	064 Move X8, [X8+184]
	065 Move X1, [X8+264]
	066 Call Material.DisableKeyword, X0, X1
	067 Move W8, 1
	068 Move [X19+775], W8
	069 Move X0, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void DisableMasking()

Disassembly:
	0x03ACFD18 BL 0x3B19904
	0x03ACFD1C LDR X8, [X21]
	0x03ACFD20 MOV X20, X0
	0x03ACFD24 LDR W9, [X8 + 0xE0]
	0x03ACFD28 CBNZ W9, 0x3ACFD34
	0x03ACFD2C MOV X0, X8
	0x03ACFD30 BL 0x1C16DFC
	0x03ACFD34 MOV X0, X20
	0x03ACFD38 MOV X1, X31
	0x03ACFD3C MOV X2, X31
	0x03ACFD40 BL 0x3C354F8
	0x03ACFD44 TBZ X0, 0x0, 0x3ACFD90
	0x03ACFD48 CBZ X20, 0x3ACFD9C
	0x03ACFD4C MOV X0, X20
	0x03ACFD50 MOV X1, X31
	0x03ACFD54 BL 0x3C1341C
	0x03ACFD58 LDR X8, [X22]
	0x03ACFD5C MOV X20, X0
	0x03ACFD60 LDR W9, [X8 + 0xE0]
	0x03ACFD64 CBNZ W9, 0x3ACFD70
	0x03ACFD68 MOV X0, X8
	0x03ACFD6C BL 0x1C16DFC
	0x03ACFD70 CBZ X20, 0x3ACFD9C
	0x03ACFD74 LDR X8, [X22]
	0x03ACFD78 FMOV S0, W31
	0x03ACFD7C MOV X0, X20
	0x03ACFD80 MOV X2, X31
	0x03ACFD84 LDR X8, [X8 + 0xB8]
	0x03ACFD88 LDR X1, [X8 + 0x120]
	0x03ACFD8C BL 0x3C15C58
	0x03ACFD90 LDR X8, [X19 + 0x708]
	0x03ACFD94 ADD X23, X23, 0x1
	0x03ACFD98 CBNZ X8, 0x3ACFCB8
	0x03ACFD9C BL 0x1C16F20
	0x03ACFDA0 LDP X20, X19, [X31 + 0x30]
	0x03ACFDA4 LDP X22, X21, [X31 + 0x20]
	0x03ACFDA8 LDP X24, X23, [X31 + 0x10]
	0x03ACFDAC LDR X30, [X31], #0x40
	0x03ACFDB0 RET
	0x03ACFDB4 BL 0x1C16F28
	0x03ACFDB8 STP X30, X21, [X31 - 0x20]!
	0x03ACFDBC STP X20, X19, [X31 + 0x10]
	0x03ACFDC0 ADRP X21, 0x913000
	0x03ACFDC4 ADRP X20, 0x689000
	0x03ACFDC8 LDRB W8, [X21 + 0x4EE]
	0x03ACFDCC LDR X20, [X20 + 0x338]
	0x03ACFDD0 MOV X19, X0
	0x03ACFDD4 TBNZ X8, 0x0, 0x3ACFDEC
	0x03ACFDD8 ADRP X0, 0x689000
	0x03ACFDDC LDR X0, [X0 + 0x338]
	0x03ACFDE0 BL 0x1C16CF4
	0x03ACFDE4 MOVZ W8, 0x1
	0x03ACFDE8 STRB W8, [X21 + 0x4EE]
	0x03ACFDEC LDR X0, [X20]
	0x03ACFDF0 LDRB W21, [X19 + 0x305]
	0x03ACFDF4 LDR X19, [X19 + 0x110]
	0x03ACFDF8 LDR W8, [X0 + 0xE0]
	0x03ACFDFC CBNZ W8, 0x3ACFE08
	0x03ACFE00 BL 0x1C16DFC
	0x03ACFE04 LDR X0, [X20]
	0x03ACFE08 CBZ X19, 0x3ACFE38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x914000
	006 Move X21, 0x68A000
	007 Move W8, [X20+1250]
	008 Move X21, [X21+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x68A000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1250], W8
	019 Move X0, [X21]
	020 Move X20, [X19+272]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Compare X20, 0
	026 JumpIfEqual {80}
	027 Move X8, [X21]
	028 Move X0, X20
	029 Move X2, X31
	030 Move X8, [X8+184]
	031 Move W1, [X8+156]
	032 Call Material.HasProperty, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {75}
	037 Move X0, [X21]
	038 Move X20, [X19+272]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Compare X20, 0
	044 JumpIfEqual {80}
	045 Move X8, [X21]
	046 Move X0, X20
	047 Move X2, X31
	048 Move X8, [X8+184]
	049 Move X1, [X8+248]
	050 Call Material.DisableKeyword, X0, X1
	051 Move X0, [X19+272]
	052 Compare X0, 0
	053 JumpIfEqual {80}
	054 Move X8, [X21]
	055 Move X2, X31
	056 Move X8, [X8+184]
	057 Move X1, [X8+256]
	058 Call Material.DisableKeyword, X0, X1
	059 Move X0, [X19+272]
	060 Compare X0, 0
	061 JumpIfEqual {80}
	062 Move X8, [X21]
	063 Move X2, X31
	064 Move X8, [X8+184]
	065 Move X1, [X8+264]
	066 Call Material.DisableKeyword, X0, X1
	067 Move [X19+775], W31
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call TextMeshPro.UpdateMask, X0
	074 Return 
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void UpdateMask()

Disassembly:
	0x03ACFC98 CBNZ X8, 0x3ACFBB8
	0x03ACFC9C B 0x3ACFD9C
	0x03ACFCA0 FMOV S0, W31
	0x03ACFCA4 MOV X2, X31
	0x03ACFCA8 BL 0x3C15C58
	0x03ACFCAC LDR X8, [X19 + 0x708]
	0x03ACFCB0 CBZ X8, 0x3ACFD9C
	0x03ACFCB4 MOVZ W23, 0x5
	0x03ACFCB8 LDR W9, [X8 + 0x18]
	0x03ACFCBC SUB X24, X23, 0x4
	0x03ACFCC0 CMP W24, W9
	0x03ACFCC4 B.GE 0x3ACFDA0
	0x03ACFCC8 CMP W24, W9
	0x03ACFCCC B.CS 0x3ACFDB4
	0x03ACFCD0 LDR X0, [X21]
	0x03ACFCD4 LDR X20, [X8, X23, LSL #3]
	0x03ACFCD8 LDR W9, [X0 + 0xE0]
	0x03ACFCDC CBNZ W9, 0x3ACFCE4
	0x03ACFCE0 BL 0x1C16DFC
	0x03ACFCE4 MOV X0, X20
	0x03ACFCE8 MOV X1, X31
	0x03ACFCEC MOV X2, X31
	0x03ACFCF0 BL 0x3C354F8
	0x03ACFCF4 TBZ X0, 0x0, 0x3ACFDA0
	0x03ACFCF8 LDR X8, [X19 + 0x708]
	0x03ACFCFC CBZ X8, 0x3ACFD9C
	0x03ACFD00 LDR W9, [X8 + 0x18]
	0x03ACFD04 CMP W24, W9
	0x03ACFD08 B.CS 0x3ACFDB4
	0x03ACFD0C LDR X0, [X8, X23, LSL #3]
	0x03ACFD10 CBZ X0, 0x3ACFD9C
	0x03ACFD14 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x914000
	005 Move W8, [X20+1251]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x625000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1251], W8
	016 Move W8, [X19+775]
	017 Compare W8, 0
	018 JumpIfEqual {41}
	019 Move X8, 0x625000
	020 Move X8, [X8+1432]
	021 Move X20, [X19+304]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call TextMeshPro.CreateMaterialInstance, X0
	040 Return 
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 

Method: UnityEngine.Material GetMaterial(UnityEngine.Material mat)

Disassembly:
	0x03ACFED0 LDR X0, [X0 + 0x9D0]
	0x03ACFED4 BL 0x1C16CF4
	0x03ACFED8 ADRP X0, 0x624000
	0x03ACFEDC LDR X0, [X0 + 0x598]
	0x03ACFEE0 BL 0x1C16CF4
	0x03ACFEE4 ADRP X0, 0x626000
	0x03ACFEE8 LDR X0, [X0 + 0x278]
	0x03ACFEEC BL 0x1C16CF4
	0x03ACFEF0 ADRP X0, 0x689000
	0x03ACFEF4 LDR X0, [X0 + 0x618]
	0x03ACFEF8 BL 0x1C16CF4
	0x03ACFEFC ADRP X0, 0x689000
	0x03ACFF00 LDR X0, [X0 + 0x578]
	0x03ACFF04 BL 0x1C16CF4
	0x03ACFF08 ADRP X0, 0x689000
	0x03ACFF0C LDR X0, [X0 + 0x620]
	0x03ACFF10 BL 0x1C16CF4
	0x03ACFF14 ADRP X0, 0x689000
	0x03ACFF18 LDR X0, [X0 + 0x348]
	0x03ACFF1C BL 0x1C16CF4
	0x03ACFF20 ADRP X0, 0x689000
	0x03ACFF24 LDR X0, [X0 + 0x628]
	0x03ACFF28 BL 0x1C16CF4
	0x03ACFF2C ADRP X0, 0x689000
	0x03ACFF30 LDR X0, [X0 + 0x630]
	0x03ACFF34 BL 0x1C16CF4
	0x03ACFF38 ADRP X0, 0x689000
	0x03ACFF3C LDR X0, [X0 + 0x638]
	0x03ACFF40 BL 0x1C16CF4
	0x03ACFF44 ADRP X0, 0x689000
	0x03ACFF48 LDR X0, [X0 + 0x640]
	0x03ACFF4C BL 0x1C16CF4
	0x03ACFF50 ADRP X0, 0x689000
	0x03ACFF54 LDR X0, [X0 + 0x368]
	0x03ACFF58 BL 0x1C16CF4
	0x03ACFF5C ADRP X0, 0x689000
	0x03ACFF60 LDR X0, [X0 + 0x3B0]
	0x03ACFF64 BL 0x1C16CF4
	0x03ACFF68 ADRP X0, 0x689000
	0x03ACFF6C LDR X0, [X0 + 0x3C8]
	0x03ACFF70 BL 0x1C16CF4
	0x03ACFF74 ADRP X0, 0x689000
	0x03ACFF78 LDR X0, [X0 + 0x3E8]
	0x03ACFF7C BL 0x1C16CF4
	0x03ACFF80 ADRP X0, 0x62C000
	0x03ACFF84 LDR X0, [X0 + 0x720]
	0x03ACFF88 BL 0x1C16CF4
	0x03ACFF8C ADRP X0, 0x689000
	0x03ACFF90 LDR X0, [X0 + 0x648]
	0x03ACFF94 BL 0x1C16CF4
	0x03ACFF98 ADRP X0, 0x689000
	0x03ACFF9C LDR X0, [X0 + 0x650]
	0x03ACFFA0 BL 0x1C16CF4
	0x03ACFFA4 ADRP X0, 0x689000
	0x03ACFFA8 LDR X0, [X0 + 0x658]
	0x03ACFFAC BL 0x1C16CF4
	0x03ACFFB0 ADRP X0, 0x689000
	0x03ACFFB4 LDR X0, [X0 + 0x660]
	0x03ACFFB8 BL 0x1C16CF4
	0x03ACFFBC MOVZ W8, 0x1
	0x03ACFFC0 STRB W8, [X21 + 0x4EF]
	0x03ACFFC4 ADRP X21, 0x689000
	0x03ACFFC8 ADRP X27, 0x689000
	0x03ACFFCC LDR X21, [X21 + 0x3C8]
	0x03ACFFD0 LDR X27, [X27 + 0x3E8]
	0x03ACFFD4 STRB W31, [X31 + 0x19C]
	0x03ACFFD8 STR W31, [X31 + 0x198]
	0x03ACFFDC LDR W8, [X19 + 0x258]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x914000
	007 Move X21, 0x625000
	008 Move W8, [X22+1252]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x625000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1252], W8
	021 Move X0, [X21]
	022 Move X21, [X19+304]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {48}
	035 Move X0, [X19+304]
	036 Compare X0, 0
	037 JumpIfEqual {79}
	038 Move X1, X31
	039 Call Object.GetInstanceID, X0
	040 Compare X20, 0
	041 JumpIfEqual {79}
	042 Move W21, W0
	043 Move X0, X20
	044 Move X1, X31
	045 Call Object.GetInstanceID, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X19+304]
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X1, X20
	051 Move X9, [X8+1848]
	052 Move X2, [X8+1856]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move [X19+304], X0
	055 Move X8, [X19]
	056 Move [X19+272], X0
	057 Move X0, X19
	058 Move X9, [X8+1960]
	059 Move X1, [X8+1968]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, [X19]
	062 Move [X19+1560], S0
	063 Move X0, X19
	064 Move X9, [X8+760]
	065 Move X1, [X8+768]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X19]
	068 Move X0, X19
	069 Move X9, [X8+776]
	070 Move X1, [X8+784]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X0, [X19+272]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Call 0x1C17F20

Method: UnityEngine.Material[] GetMaterials(UnityEngine.Material[] mats)

Disassembly:
	0x03ACFFE0 ADD X0, X19, 0x260
	0x03ACFFE4 MOV X1, X31
	0x03ACFFE8 STR W31, [X19 + 0x490]
	0x03ACFFEC STRB W31, [X19 + 0x26A]
	0x03ACFFF0 STRH W31, [X19 + 0x430]
	0x03ACFFF4 STR W8, [X19 + 0x25C]
	0x03ACFFF8 BL 0x3B1CF2C
	0x03ACFFFC LDRB W8, [X19 + 0x25C]
	0x03AD0000 TBNZ X8, 0x0, 0x3AD000C
	0x03AD0004 LDR W1, [X19 + 0x210]
	0x03AD0008 B 0x3AD0010
	0x03AD000C MOVZ W1, 0x2BC
	0x03AD0010 STR W1, [X19 + 0x214]
	0x03AD0014 LDR X2, [X21]
	0x03AD0018 ADRP X21, 0x688000
	0x03AD001C LDR X21, [X21 + 0x3B0]
	0x03AD0020 ADD X0, X19, 0x218
	0x03AD0024 BL 0x2672150
	0x03AD0028 LDR X2, [X19 + 0xF8]
	0x03AD002C LDR X4, [X19 + 0x110]
	0x03AD0030 STR W31, [X19 + 0x120]
	0x03AD0034 STR X2, [X19 + 0x100]
	0x03AD0038 STR X4, [X19 + 0x118]
	0x03AD003C LDR X0, [X27]
	0x03AD0040 LDR W8, [X0 + 0xE0]
	0x03AD0044 CBZ W8, 0x3AD0050
	0x03AD0048 MOV W1, W31
	0x03AD004C B 0x3AD0060
	0x03AD0050 BL 0x1C16DFC
	0x03AD0054 LDR W1, [X19 + 0x120]
	0x03AD0058 LDR X2, [X19 + 0x100]
	0x03AD005C LDR X4, [X19 + 0x118]
	0x03AD0060 LDR V0, [X19 + 0x618]
	0x03AD0064 MOVI V1.2D, 0x0
	0x03AD0068 ADD X0, X31, 0x160
	0x03AD006C MOV X3, X31
	0x03AD0070 STR X31, [X31 + 0x190]
	0x03AD0074 STP V1, V1, [X31 + 0x170]
	0x03AD0078 STR V1, [X31 + 0x16]
	0x03AD007C BL 0x3ACB488
	0x03AD0080 LDR X8, [X27]
	0x03AD0084 LDR X2, [X21]
	0x03AD0088 LDP V0, V1, [X31 + 0x160]
	0x03AD008C LDR V2, [X31 + 0x18]
	0x03AD0090 LDR X8, [X8 + 0xB8]
	0x03AD0094 LDR X9, [X31 + 0x190]
	0x03AD0098 ADD X1, X31, 0xD0
	0x03AD009C STP V0, V1, [X31 + 0xD0]
	0x03AD00A0 ADD X0, X8, 0x10
	0x03AD00A4 STR V2, [X31 + 0xF]
	0x03AD00A8 STR X9, [X31 + 0x100]
	0x03AD00AC BL 0x2672734
	0x03AD00B0 LDR X8, [X27]
	0x03AD00B4 LDR X8, [X8 + 0xB8]
	0x03AD00B8 LDR X0, [X8 + 0x8]
	0x03AD00BC CBZ X0, 0x3AD1954
	0x03AD00C0 ADRP X8, 0x64D000
	0x03AD00C4 LDR X8, [X8 + 0x8D0]
	0x03AD00C8 ADRP X24, 0x688000
	0x03AD00CC LDR X1, [X8]
	0x03AD00D0 LDR X24, [X24 + 0x368]
	0x03AD00D4 BL 0x2A0A4C4
	0x03AD00D8 LDR X8, [X27]
	0x03AD00DC LDR X0, [X19 + 0x118]
	0x03AD00E0 LDR X1, [X19 + 0x100]
	0x03AD00E4 LDR X2, [X8 + 0xB8]
	0x03AD00E8 LDR X3, [X2 + 0x8]
	0x03AD00EC BL 0x3ACB600
	0x03AD00F0 LDR X21, [X19 + 0x368]
	0x03AD00F4 CBZ X21, 0x3AD0140
	0x03AD00F8 LDR X8, [X21 + 0x38]!
	0x03AD00FC CBZ X8, 0x3AD1954
	0x03AD0100 LDR W22, [X19 + 0x480]
	0x03AD0104 LDR W8, [X8 + 0x18]
	0x03AD0108 CMP W22, W8
	0x03AD010C B.LE 0x3AD0160
	0x03AD0110 LDR X0, [X24]
	0x03AD0114 LDR W8, [X0 + 0xE0]
	0x03AD0118 CBNZ W8, 0x3AD0120
	0x03AD011C BL 0x1C16DFC
	0x03AD0120 ADRP X8, 0x688000
	0x03AD0124 LDR X8, [X8 + 0x630]
	0x03AD0128 MOV X0, X21
	0x03AD012C MOV W1, W22
	0x03AD0130 MOV W2, W31
	0x03AD0134 LDR X3, [X8]
	0x03AD0138 BL 0x2299270
	0x03AD013C B 0x3AD0160
	0x03AD0140 LDR X0, [X24]
	0x03AD0144 LDR W21, [X19 + 0x480]
	0x03AD0148 BL 0x1C16F10
	0x03AD014C MOV W1, W21
	0x03AD0150 MOV X2, X31
	0x03AD0154 MOV X22, X0
	0x03AD0158 BL 0x3B1BF2C
	0x03AD015C STR X22, [X19 + 0x368]
	0x03AD0160 LDR W8, [X19 + 0x2E0]
	0x03AD0164 STR W31, [X19 + 0x644]
	0x03AD0168 CMP W8, 0x1
	0x03AD016C B.NE 0x3AD0328
	0x03AD0170 LDR X1, [X19 + 0x100]
	0x03AD0174 MOV X0, X19
	0x03AD0178 MOV X2, X31
	0x03AD017C BL 0x3B0ACFC
	0x03AD0180 LDR X8, [X19 + 0x650]
	0x03AD0184 CBZ X8, 0x3AD020C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x914000
	009 Move W8, [X20+1253]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x62B000
	016 Move X0, [X0+1952]
	017 Call 0x1C17CF4
	018 Move X0, 0x689000
	019 Move X0, [X0+1544]
	020 Call 0x1C17CF4
	021 Move X0, 0x689000
	022 Move X0, [X0+872]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1253], W8
	026 Move X8, [X19+872]
	027 Compare X8, 0
	028 JumpIfEqual {117}
	029 Move X9, [X19+312]
	030 Move W20, [X8+52]
	031 Add X21, X19, 312
	032 Compare X9, 0
	033 JumpIfEqual {50}
	034 Move W8, [X9+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0x689000
	037 Move X8, [X8+872]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, 0x689000
	044 Move X8, [X8+1544]
	045 Move X0, X21
	046 Move W1, W20
	047 Move W2, W31
	048 Move X3, [X8]
	049 Call 0x229A1D0, X0, X1, X2
	050 Move X8, 0x62B000
	051 Move X8, [X8+1952]
	052 Move W1, W20
	053 Move X0, [X8]
	054 Call 0x1C17D6C
	055 Move [X21], X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X23, X31
	058 Move X24, [X21]
	059 Compare X23, 0
	060 JumpIfEqual {87}
	061 Move X8, [X19+1800]
	062 Compare X8, 0
	063 JumpIfEqual {117}
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, X23
	067 Move X0, [X8+32]
	068 Compare X0, 0
	069 JumpIfEqual {117}
	070 Move X1, X31
	071 Call TMP_SubMesh.get_material, X0
	072 Compare X24, 0
	073 JumpIfEqual {117}
	074 Move X22, X0
	075 Compare X0, 0
	076 JumpIfEqual {83}
	077 Move X8, [X24]
	078 Move X0, X22
	079 Move X1, [X8+64]
	080 Call 0x1C17E00
	081 Compare X0, 0
	082 JumpIfEqual {119}
	083 Move W8, [X24+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X8, X24, X23
	086 Move [X8+32], X22
	087 Move X0, X19
	088 Move X1, X31
	089 Call TMP_Text.get_fontMaterial, X0
	090 Compare X24, 0
	091 JumpIfEqual {117}
	092 Move X22, X0
	093 Compare X0, 0
	094 JumpIfEqual {101}
	095 Move X8, [X24]
	096 Move X0, X22
	097 Move X1, [X8+64]
	098 Call 0x1C17E00
	099 Compare X0, 0
	100 JumpIfEqual {119}
	101 Move W8, [X24+24]
	102 Compare W8, 0
	103 JumpIfEqual {118}
	104 Move [X24+32], X22
	105 Add X23, X23, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, [X19+312]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move [X19+296], X0
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X30, [X31+64]
	116 Return X0
	117 Call 0x1C17F20
	118 Call 0x1C17F28
	119 Call 0x1C17F44
	120 Move X1, X31
	121 Call 0x1C17DEC

Method: System.Void SetSharedMaterial(UnityEngine.Material mat)

Disassembly:
	0x03AD0188 LDR X0, [X19 + 0x658]
	0x03AD018C CBZ X0, 0x3AD1954
	0x03AD0190 MOV X1, X31
	0x03AD0194 BL 0x3C385F8
	0x03AD0198 LDR X8, [X19 + 0x100]
	0x03AD019C CBZ X8, 0x3AD1954
	0x03AD01A0 MOV W21, W0
	0x03AD01A4 MOV X0, X8
	0x03AD01A8 MOV X1, X31
	0x03AD01AC BL 0x3C385F8
	0x03AD01B0 CMP W21, W0
	0x03AD01B4 B.EQ 0x3AD0324
	0x03AD01B8 MOV X0, X31
	0x03AD01BC BL 0x3B13F90

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move [X0+272], X1
	005 Move X19, X0
	006 Move X9, [X8+1960]
	007 Move X1, [X8+1968]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move [X19+1560], S0
	011 Move X0, X19
	012 Move X2, [X8+776]
	013 Move X1, [X8+784]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X2

Method: UnityEngine.Material[] GetSharedMaterials()

Disassembly:
	0x03AD01C0 TBZ X0, 0x0, 0x3AD01F8
	0x03AD01C4 LDR X0, [X19 + 0x118]
	0x03AD01C8 CBZ X0, 0x3AD1954
	0x03AD01CC MOV X1, X31
	0x03AD01D0 BL 0x3C385F8
	0x03AD01D4 LDR X8, [X19 + 0x658]
	0x03AD01D8 CBZ X8, 0x3AD1954
	0x03AD01DC MOV W21, W0
	0x03AD01E0 LDR X0, [X8 + 0x20]
	0x03AD01E4 CBZ X0, 0x3AD1954
	0x03AD01E8 MOV X1, X31
	0x03AD01EC BL 0x3C385F8
	0x03AD01F0 CMP W21, W0
	0x03AD01F4 B.NE 0x3AD028C
	0x03AD01F8 LDR X21, [X19 + 0x658]
	0x03AD01FC CBZ X21, 0x3AD1954
	0x03AD0200 LDR X22, [X21 + 0x20]
	0x03AD0204 STR X22, [X19 + 0x660]
	0x03AD0208 B 0x3AD02D0
	0x03AD020C MOVZ W8, 0x3
	0x03AD0210 MOV X0, X31
	0x03AD0214 STR W8, [X19 + 0x2E0]
	0x03AD0218 BL 0x3B13E38
	0x03AD021C TBNZ X0, 0x0, 0x3AD0324
	0x03AD0220 LDR X0, [X19 + 0x100]
	0x03AD0224 CBZ X0, 0x3AD1954
	0x03AD0228 MOV X1, X31
	0x03AD022C BL 0x3C389D4
	0x03AD0230 ADRP X8, 0x688000
	0x03AD0234 LDR X8, [X8 + 0x658]
	0x03AD0238 ADRP X9, 0x688000
	0x03AD023C LDR X9, [X9 + 0x660]
	0x03AD0240 MOV X1, X0
	0x03AD0244 LDR X8, [X8]
	0x03AD0248 MOV X3, X31
	0x03AD024C LDR X2, [X9]
	0x03AD0250 MOV X0, X8
	0x03AD0254 BL 0x32274B8
	0x03AD0258 ADRP X8, 0x623000
	0x03AD025C LDR X8, [X8 + 0xA28]
	0x03AD0260 MOV X21, X0
	0x03AD0264 LDR X8, [X8]
	0x03AD0268 LDR W9, [X8 + 0xE0]
	0x03AD026C CBNZ W9, 0x3AD0278
	0x03AD0270 MOV X0, X8
	0x03AD0274 BL 0x1C16DFC
	0x03AD0278 MOV X0, X21
	0x03AD027C MOV X1, X19
	0x03AD0280 MOV X2, X31
	0x03AD0284 BL 0x3C06B0C
	0x03AD0288 B 0x3AD0324
	0x03AD028C LDR X8, [X19 + 0x658]
	0x03AD0290 CBZ X8, 0x3AD1954
	0x03AD0294 ADRP X9, 0x688000
	0x03AD0298 LDR X9, [X9 + 0x620]
	0x03AD029C LDR X21, [X19 + 0x118]
	0x03AD02A0 LDR X22, [X8 + 0x20]
	0x03AD02A4 LDR X0, [X9]
	0x03AD02A8 LDR W9, [X0 + 0xE0]
	0x03AD02AC CBNZ W9, 0x3AD02B4
	0x03AD02B0 BL 0x1C16DFC
	0x03AD02B4 MOV X0, X21
	0x03AD02B8 MOV X1, X22
	0x03AD02BC MOV X2, X31
	0x03AD02C0 BL 0x3B10470
	0x03AD02C4 LDR X21, [X19 + 0x658]
	0x03AD02C8 MOV X22, X0
	0x03AD02CC STR X0, [X19 + 0x660]
	0x03AD02D0 LDR X0, [X27]
	0x03AD02D4 LDR W8, [X0 + 0xE0]
	0x03AD02D8 CBNZ W8, 0x3AD02E4
	0x03AD02DC BL 0x1C16DFC
	0x03AD02E0 LDR X0, [X27]
	0x03AD02E4 LDR X2, [X0 + 0xB8]
	0x03AD02E8 MOV X0, X22
	0x03AD02EC MOV X1, X21
	0x03AD02F0 LDR X3, [X2 + 0x8]
	0x03AD02F4 BL 0x3ACB600
	0x03AD02F8 STR W0, [X19 + 0x668]
	0x03AD02FC LDR X8, [X27]
	0x03AD0300 LDR X8, [X8 + 0xB8]
	0x03AD0304 LDR X8, [X8]
	0x03AD0308 CBZ X8, 0x3AD1954
	0x03AD030C LDR W9, [X8 + 0x18]
	0x03AD0310 CMP W0, W9
	0x03AD0314 B.CS 0x3AD1958
	0x03AD0318 MOVZ W9, 0x38
	0x03AD031C SMADDL X8, X0, X9, X8
	0x03AD0320 STR W31, [X8 + 0x54]
	0x03AD0324 LDR W8, [X19 + 0x2E0]
	0x03AD0328 CMP W8, 0x6
	0x03AD032C B.NE 0x3AD0394
	0x03AD0330 ADRP X8, 0x623000
	0x03AD0334 LDR X8, [X8 + 0x598]
	0x03AD0338 LDR X21, [X19 + 0x2E8]
	0x03AD033C LDR X0, [X8]
	0x03AD0340 LDR W8, [X0 + 0xE0]
	0x03AD0344 CBNZ W8, 0x3AD034C
	0x03AD0348 BL 0x1C16DFC
	0x03AD034C MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x913000
	009 Move W8, [X20+1254]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x62B000
	016 Move X0, [X0+1952]
	017 Call 0x1C17CF4
	018 Move X0, 0x689000
	019 Move X0, [X0+1544]
	020 Call 0x1C17CF4
	021 Move X0, 0x689000
	022 Move X0, [X0+872]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1254], W8
	026 Move X8, [X19+872]
	027 Compare X8, 0
	028 JumpIfEqual {111}
	029 Move X9, [X19+296]
	030 Move W21, [X8+52]
	031 Add X20, X19, 296
	032 Compare X9, 0
	033 JumpIfEqual {50}
	034 Move W8, [X9+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0x689000
	037 Move X8, [X8+872]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, 0x689000
	044 Move X8, [X8+1544]
	045 Move X0, X20
	046 Move W1, W21
	047 Move W2, W31
	048 Move X3, [X8]
	049 Call 0x229A1D0, X0, X1, X2
	050 Move X8, 0x62B000
	051 Move X8, [X8+1952]
	052 Move W1, W21
	053 Move X0, [X8]
	054 Call 0x1C17D6C
	055 Move [X20], X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X23, X31
	058 Move X24, [X20]
	059 Compare X23, 0
	060 JumpIfEqual {85}
	061 Move X8, [X19+1800]
	062 Compare X8, 0
	063 JumpIfEqual {111}
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, X23
	067 Move X8, [X8+32]
	068 Compare X8, 0
	069 JumpIfEqual {111}
	070 Compare X24, 0
	071 JumpIfEqual {111}
	072 Move X22, [X8+56]
	073 Compare X22, 0
	074 JumpIfEqual {81}
	075 Move X8, [X24]
	076 Move X0, X22
	077 Move X1, [X8+64]
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {113}
	081 Move W8, [X24+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X24, X23
	084 Move [X8+32], X22
	085 Compare X24, 0
	086 JumpIfEqual {111}
	087 Move X22, [X19+272]
	088 Compare X22, 0
	089 JumpIfEqual {96}
	090 Move X8, [X24]
	091 Move X0, X22
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {113}
	096 Move W8, [X24+24]
	097 Compare W8, 0
	098 JumpIfEqual {112}
	099 Move [X24+32], X22
	100 Add X23, X23, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X20]
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X30, [X31+64]
	110 Return X0
	111 Call 0x1C17F20
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC

Method: System.Void SetSharedMaterials(UnityEngine.Material[] materials)

Disassembly:
	0x03AD0350 MOV X1, X31
	0x03AD0354 MOV X2, X31
	0x03AD0358 BL 0x3C354F8
	0x03AD035C TBZ X0, 0x0, 0x3AD0394
	0x03AD0360 LDRB W8, [X19 + 0x3F5]
	0x03AD0364 CBNZ W8, 0x3AD0394
	0x03AD0368 LDR X0, [X19 + 0x2E8]
	0x03AD036C CBZ X0, 0x3AD1954
	0x03AD0370 ADRP X8, 0x625000
	0x03AD0374 LDR X8, [X8 + 0x278]
	0x03AD0378 LDR X9, [X0]
	0x03AD037C LDR X8, [X8]
	0x03AD0380 LDR X10, [X9 + 0x558]
	0x03AD0384 LDR X2, [X9 + 0x560]
	0x03AD0388 LDR X8, [X8 + 0xB8]
	0x03AD038C LDR X1, [X8]
	0x03AD0390 BLR X10
	0x03AD0394 CBZ X20, 0x3AD1954
	0x03AD0398 LDR W8, [X20 + 0x18]
	0x03AD039C CMP W8, 0x1
	0x03AD03A0 B.LT 0x3AD1168
	0x03AD03A4 MOV W28, W31
	0x03AD03A8 MOVZ W29, 0xC
	0x03AD03AC STR W31, [X31 + 0x28]
	0x03AD03B0 CMP W28, W8
	0x03AD03B4 B.CS 0x3AD1958
	0x03AD03B8 MOV X26, X27
	0x03AD03BC SMADDL X27, X28, X29, X20
	0x03AD03C0 LDR W9, [X27 + 0x20]!
	0x03AD03C4 CBZ W9, 0x3AD1170
	0x03AD03C8 LDR X21, [X19 + 0x368]
	0x03AD03CC CBZ X21, 0x3AD1954
	0x03AD03D0 LDR X9, [X21 + 0x38]!
	0x03AD03D4 LDR W22, [X19 + 0x490]
	0x03AD03D8 CBZ X9, 0x3AD03E8
	0x03AD03DC LDR W9, [X9 + 0x18]
	0x03AD03E0 CMP W22, W9
	0x03AD03E4 B.LT 0x3AD0418
	0x03AD03E8 LDR X0, [X24]
	0x03AD03EC LDR W8, [X0 + 0xE0]
	0x03AD03F0 CBNZ W8, 0x3AD03F8
	0x03AD03F4 BL 0x1C16DFC
	0x03AD03F8 ADRP X8, 0x688000
	0x03AD03FC LDR X8, [X8 + 0x630]
	0x03AD0400 ADD W1, W22, 0x1
	0x03AD0404 MOVZ W2, 0x1
	0x03AD0408 MOV X0, X21
	0x03AD040C LDR X3, [X8]
	0x03AD0410 BL 0x2299270
	0x03AD0414 LDR W8, [X20 + 0x18]
	0x03AD0418 CMP W28, W8
	0x03AD041C B.CS 0x3AD1958
	0x03AD0420 LDR W23, [X27]
	0x03AD0424 SXTW X29, W28
	0x03AD0428 CMP W23, 0x3C
	0x03AD042C B.NE 0x3AD05E4
	0x03AD0430 LDRB W8, [X19 + 0x302]
	0x03AD0434 CBZ W8, 0x3AD05E4
	0x03AD0438 LDR W21, [X19 + 0x120]
	0x03AD043C ADD W2, W28, 0x1
	0x03AD0440 ADD X3, X31, 0x198
	0x03AD0444 MOV X0, X19
	0x03AD0448 MOV X1, X20
	0x03AD044C MOV X4, X31
	0x03AD0450 BL 0x3AFFFE4
	0x03AD0454 TBZ X0, 0x0, 0x3AD05E4
	0x03AD0458 LDR W8, [X20 + 0x18]
	0x03AD045C CMP W28, W8
	0x03AD0460 B.CS 0x3AD1958
	0x03AD0464 MOVZ W8, 0xC
	0x03AD0468 MADD X8, X29, X8, X20
	0x03AD046C LDRB W9, [X19 + 0x25C]
	0x03AD0470 LDR W22, [X8 + 0x24]
	0x03AD0474 MOVZ W29, 0xC
	0x03AD0478 MOV X27, X26
	0x03AD047C TBZ X9, 0x0, 0x3AD0488
	0x03AD0480 MOVZ W8, 0x1
	0x03AD0484 STRB W8, [X19 + 0x26A]
	0x03AD0488 LDR W8, [X19 + 0x644]
	0x03AD048C LDR W28, [X31 + 0x198]
	0x03AD0490 MOVZ W25, 0x178
	0x03AD0494 CMP W8, 0x1
	0x03AD0498 B.NE 0x3AD1154
	0x03AD049C LDR X0, [X27]
	0x03AD04A0 LDR W8, [X0 + 0xE0]
	0x03AD04A4 CBNZ W8, 0x3AD04B0
	0x03AD04A8 BL 0x1C16DFC
	0x03AD04AC LDR X0, [X27]
	0x03AD04B0 LDR X8, [X0 + 0xB8]
	0x03AD04B4 LDR X8, [X8]
	0x03AD04B8 CBZ X8, 0x3AD1954
	0x03AD04BC LDRSW X9, [X19 + 0x120]
	0x03AD04C0 LDR W10, [X8 + 0x18]
	0x03AD04C4 CMP W9, W10
	0x03AD04C8 B.CS 0x3AD1958
	0x03AD04CC MOVZ W10, 0x38
	0x03AD04D0 MADD X8, X9, X10, X8
	0x03AD04D4 LDR W9, [X8 + 0x54]
	0x03AD04D8 ADD W9, W9, 0x1
	0x03AD04DC STR W9, [X8 + 0x54]
	0x03AD04E0 LDR X8, [X19 + 0x368]
	0x03AD04E4 CBZ X8, 0x3AD1954
	0x03AD04E8 LDR X23, [X8 + 0x38]
	0x03AD04EC CBZ X23, 0x3AD1954
	0x03AD04F0 LDRSW X24, [X19 + 0x490]
	0x03AD04F4 LDR W8, [X23 + 0x18]
	0x03AD04F8 CMP W24, W8
	0x03AD04FC B.CS 0x3AD1958
	0x03AD0500 LDR W8, [X19 + 0x6A4]
	0x03AD0504 NOP
	0x03AD0508 MADD X9, X24, X25, X23
	0x03AD050C SUB W10, W8, 0x2000
	0x03AD0510 STRH W10, [X9 + 0x20]
	0x03AD0514 STR W8, [X9 + 0x48]
	0x03AD0518 LDR X8, [X19 + 0x100]
	0x03AD051C STR X8, [X9 + 0x38]
	0x03AD0520 LDR X0, [X19 + 0x698]
	0x03AD0524 STR X0, [X9 + 0x40]
	0x03AD0528 LDR W8, [X19 + 0x120]
	0x03AD052C STR W8, [X9 + 0x58]
	0x03AD0530 CBZ X0, 0x3AD1954
	0x03AD0534 MOV X1, X31
	0x03AD0538 BL 0x3B16BEC
	0x03AD053C CBZ X0, 0x3AD1954
	0x03AD0540 ADRP X8, 0x688000
	0x03AD0544 LDR W1, [X19 + 0x6A4]
	0x03AD0548 LDR X8, [X8 + 0x330]
	0x03AD054C LDR X2, [X8]
	0x03AD0550 BL 0x301BCCC
	0x03AD0554 LDR W8, [X23 + 0x18]
	0x03AD0558 CMP W24, W8
	0x03AD055C B.CS 0x3AD1958
	0x03AD0560 MADD X8, X24, X25, X23
	0x03AD0564 STR X0, [X8 + 0x30]
	0x03AD0568 LDR X8, [X19 + 0x368]
	0x03AD056C CBZ X8, 0x3AD1954
	0x03AD0570 ADRP X24, 0x688000
	0x03AD0574 LDR X9, [X8 + 0x38]
	0x03AD0578 LDR X24, [X24 + 0x368]
	0x03AD057C CBZ X9, 0x3AD1954
	0x03AD0580 LDR W8, [X19 + 0x490]
	0x03AD0584 LDR W10, [X9 + 0x18]
	0x03AD0588 CMP W8, W10
	0x03AD058C B.CS 0x3AD1958
	0x03AD0590 LDR W11, [X19 + 0x644]
	0x03AD0594 SXTW X10, W8
	0x03AD0598 MADD X12, X10, X25, X9
	0x03AD059C STR W22, [X12 + 0x24]
	0x03AD05A0 STR W11, [X12 + 0x2C]
	0x03AD05A4 LDR W11, [X20 + 0x18]
	0x03AD05A8 CMP W28, W11
	0x03AD05AC B.CS 0x3AD1958
	0x03AD05B0 MOV W11, W28
	0x03AD05B4 SXTW X11, W11
	0x03AD05B8 MADD X11, X11, X29, X20
	0x03AD05BC LDR W11, [X11 + 0x24]
	0x03AD05C0 NOP
	0x03AD05C4 MADD X9, X10, X25, X9
	0x03AD05C8 SUB W10, W11, W22
	0x03AD05CC ADD W10, W10, 0x1
	0x03AD05D0 STR W10, [X9 + 0x28]
	0x03AD05D4 LDR W9, [X31 + 0x28]
	0x03AD05D8 STR W31, [X19 + 0x644]
	0x03AD05DC STR W21, [X19 + 0x120]
	0x03AD05E0 B 0x3AD0DD8
	0x03AD05E4 LDR X10, [X19 + 0x100]
	0x03AD05E8 LDR X11, [X19 + 0x118]
	0x03AD05EC LDR W8, [X19 + 0x644]
	0x03AD05F0 LDR W9, [X19 + 0x120]
	0x03AD05F4 STP X11, X10, [X31 + 0x18]
	0x03AD05F8 STR W9, [X31 + 0x2C]
	0x03AD05FC CBNZ W8, 0x3AD06B0
	0x03AD0600 LDR W8, [X19 + 0x25C]
	0x03AD0604 TBNZ X8, 0x4, 0x3AD0610
	0x03AD0608 TBNZ X8, 0x3, 0x3AD0660
	0x03AD060C TBZ X8, 0x5, 0x3AD06B0
	0x03AD0610 ADRP X8, 0x625000
	0x03AD0614 LDR X8, [X8 + 0x170]
	0x03AD0618 LDR X0, [X8]
	0x03AD061C LDR W8, [X0 + 0xE0]
	0x03AD0620 CBNZ W8, 0x3AD0628
	0x03AD0624 BL 0x1C16DFC
	0x03AD0628 MOV W0, W23
	0x03AD062C MOV X1, X31
	0x03AD0630 BL 0x331AA58
	0x03AD0634 TBZ X0, 0x0, 0x3AD06B0
	0x03AD0638 ADRP X8, 0x625000
	0x03AD063C LDR X8, [X8 + 0x170]
	0x03AD0640 LDR X0, [X8]
	0x03AD0644 LDR W8, [X0 + 0xE0]
	0x03AD0648 CBNZ W8, 0x3AD0650
	0x03AD064C BL 0x1C16DFC
	0x03AD0650 MOV W0, W23
	0x03AD0654 MOV X1, X31
	0x03AD0658 BL 0x331ACB8
	0x03AD065C B 0x3AD06AC
	0x03AD0660 ADRP X8, 0x625000
	0x03AD0664 LDR X8, [X8 + 0x170]
	0x03AD0668 LDR X0, [X8]
	0x03AD066C LDR W8, [X0 + 0xE0]
	0x03AD0670 CBNZ W8, 0x3AD0678
	0x03AD0674 BL 0x1C16DFC
	0x03AD0678 MOV W0, W23
	0x03AD067C MOV X1, X31
	0x03AD0680 BL 0x331A99C
	0x03AD0684 TBZ X0, 0x0, 0x3AD06B0
	0x03AD0688 ADRP X8, 0x625000
	0x03AD068C LDR X8, [X8 + 0x170]
	0x03AD0690 LDR X0, [X8]
	0x03AD0694 LDR W8, [X0 + 0xE0]
	0x03AD0698 CBNZ W8, 0x3AD06A0
	0x03AD069C BL 0x1C16DFC
	0x03AD06A0 MOV W0, W23
	0x03AD06A4 MOV X1, X31
	0x03AD06A8 BL 0x331AE30
	0x03AD06AC AND W23, W0, 0xFFFF
	0x03AD06B0 LDR X2, [X19 + 0x100]
	0x03AD06B4 LDR W3, [X19 + 0x25C]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x913000
	014 Move W8, [X21+1255]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x62B000
	022 Move X0, [X0+1952]
	023 Call 0x1C17CF4
	024 Move X0, 0x624000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x689000
	028 Move X0, [X0+824]
	029 Call 0x1C17CF4
	030 Move X0, 0x689000
	031 Move X0, [X0+1544]
	032 Call 0x1C17CF4
	033 Move X0, 0x689000
	034 Move X0, [X0+872]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1255], W8
	038 Move X8, [X20+872]
	039 Compare X8, 0
	040 JumpIfEqual {253}
	041 Move X9, [X20+296]
	042 Move W21, [X8+52]
	043 Add X22, X20, 296
	044 Compare X9, 0
	045 JumpIfEqual {62}
	046 Move W8, [X9+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, 0x689000
	049 Move X8, [X8+872]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, 0x689000
	056 Move X8, [X8+1544]
	057 Move X0, X22
	058 Move W1, W21
	059 Move W2, W31
	060 Move X3, [X8]
	061 Call 0x229A1D0, X0, X1, X2
	062 Move X8, 0x62B000
	063 Move X8, [X8+1952]
	064 Move W1, W21
	065 Move X0, [X8]
	066 Call 0x1C17D6C
	067 Move [X22], X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Compare X19, 0
	070 JumpIfEqual {253}
	071 Move X25, 0x689000
	072 Move X26, 0x624000
	073 Move X25, [X25+824]
	074 Move X26, [X26+1432]
	075 Move W8, W31
	076 Move W9, [X19+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X27, W8
	079 Add X28, X19, X27
	080 Add X28, X28, 32
	081 Move X23, [X28]
	082 Move X0, [X25]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Compare X23, 0
	088 JumpIfEqual {253}
	089 Move X8, [X25]
	090 Move X0, X23
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move W1, [X8]
	094 Call Material.GetTexture, X0, X1
	095 Move X8, [X26]
	096 Move X23, X0
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X23
	103 Move X1, X31
	104 Move X2, X31
	105 Call Object.op_Equality, X0, X1
	106 Compare W27, 0
	107 JumpIfEqual {180}
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {238}
	112 Compare X23, 0
	113 JumpIfEqual {253}
	114 Move X0, X23
	115 Move X1, X31
	116 Call Object.GetInstanceID, X0
	117 Move X8, [X20+1800]
	118 Compare X8, 0
	119 JumpIfEqual {253}
	120 Move W9, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X8, X8, X27
	123 Move X8, [X8+32]
	124 Compare X8, 0
	125 JumpIfEqual {253}
	126 Move W23, W0
	127 Move X0, [X25]
	128 Move X24, [X8+56]
	129 Move W9, [X0+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Compare X24, 0
	134 JumpIfEqual {253}
	135 Move X8, [X25]
	136 Move X0, X24
	137 Move X2, X31
	138 Move X8, [X8+184]
	139 Move W1, [X8]
	140 Call Material.GetTexture, X0, X1
	141 Compare X0, 0
	142 JumpIfEqual {253}
	143 Move X1, X31
	144 Call Object.GetInstanceID, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, [X20+1800]
	147 Compare X8, 0
	148 JumpIfEqual {253}
	149 Move W9, [X8+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add X8, X8, X27
	152 Move X23, [X8+32]
	153 Compare X23, 0
	154 JumpIfEqual {253}
	155 Move W8, [X23+80]
	156 Compare W8, 0
	157 JumpIfEqual {238}
	158 Move W8, [X19+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X29, [X22]
	161 Compare X29, 0
	162 JumpIfEqual {253}
	163 Move X24, [X28]
	164 Compare X24, 0
	165 JumpIfEqual {172}
	166 Move X8, [X29]
	167 Move X0, X24
	168 Move X1, [X8+64]
	169 Call 0x1C17E00
	170 Compare X0, 0
	171 JumpIfEqual {255}
	172 Move W8, [X29+24]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X8, X29, X27
	175 Move X0, X23
	176 Move X1, X24
	177 Move X2, X31
	178 Move [X8+32], X24
	179 Call TMP_SubMesh.set_sharedMaterial, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfEqual {238}
	184 Compare X23, 0
	185 JumpIfEqual {253}
	186 Move X0, X23
	187 Move X1, X31
	188 Call Object.GetInstanceID, X0
	189 Move X8, [X25]
	190 Move X24, [X20+272]
	191 Move W23, W0
	192 Move W9, [X8+224]
	193 Compare W9, 0
	194 JumpIfNotEqual {197}
	195 Move X0, X8
	196 Call 0x1C17DFC
	197 Compare X24, 0
	198 JumpIfEqual {253}
	199 Move X8, [X25]
	200 Move X0, X24
	201 Move X2, X31
	202 Move X8, [X8+184]
	203 Move W1, [X8]
	204 Call Material.GetTexture, X0, X1
	205 Compare X0, 0
	206 JumpIfEqual {253}
	207 Move X1, X31
	208 Call Object.GetInstanceID, X0
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move W8, [X19+24]
	211 Compare W8, 0
	212 JumpIfEqual {254}
	213 Move X24, [X22]
	214 Compare X24, 0
	215 JumpIfEqual {253}
	216 Move X23, [X28]
	217 Compare X23, 0
	218 JumpIfEqual {225}
	219 Move X8, [X24]
	220 Move X0, X23
	221 Move X1, [X8+64]
	222 Call 0x1C17E00
	223 Compare X0, 0
	224 JumpIfEqual {255}
	225 Move W8, [X24+24]
	226 Compare W8, 0
	227 JumpIfEqual {254}
	228 Add X8, X24, X27
	229 Move [X8+32], X23
	230 Move X8, [X20]
	231 Move [X20+272], X23
	232 Move X0, X20
	233 Move X1, X23
	234 Move X9, [X8+1976]
	235 Move X2, [X8+1984]
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move [X20+1560], S0
	238 Add W8, W27, 1
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X20, [X31+80]
	241 Move X19, [X31+88]
	242 Move X22, [X31+64]
	243 Move X21, [X31+72]
	244 Move X24, [X31+48]
	245 Move X23, [X31+56]
	246 Move X26, [X31+32]
	247 Move X25, [X31+40]
	248 Move X28, [X31+16]
	249 Move X27, [X31+24]
	250 Move X29, [X31+96]
	251 Move X30, [X31+104]
	252 Return 
	253 Call 0x1C17F20
	254 Call 0x1C17F28
	255 Call 0x1C17F44
	256 Move X1, X31
	257 Call 0x1C17DEC

Method: System.Void SetOutlineThickness(System.Single thickness)

Disassembly:
	0x03AD06B8 LDR W4, [X19 + 0x214]
	0x03AD06BC ADD X5, X31, 0x19C
	0x03AD06C0 MOV X0, X19
	0x03AD06C4 MOV W1, W23
	0x03AD06C8 MOV X6, X31
	0x03AD06CC BL 0x3B0B030
	0x03AD06D0 CBZ X0, 0x3AD06E8
	0x03AD06D4 MOV X22, X0
	0x03AD06D8 MOV W21, W23
	0x03AD06DC MOV X27, X26
	0x03AD06E0 MOVZ W26, 0x178
	0x03AD06E4 B 0x3AD0BDC
	0x03AD06E8 BL 0x3B13DFC
	0x03AD06EC LDR W8, [X20 + 0x18]
	0x03AD06F0 CMP W28, W8
	0x03AD06F4 B.CS 0x3AD1958
	0x03AD06F8 CBZ W0, 0x3AD070C
	0x03AD06FC MOV X0, X31
	0x03AD0700 BL 0x3B13DFC
	0x03AD0704 MOV W21, W0
	0x03AD0708 B 0x3AD0710
	0x03AD070C MOVZ W21, 0x25A1
	0x03AD0710 STR W21, [X27]
	0x03AD0714 ADRP X8, 0x688000
	0x03AD0718 LDR X8, [X8 + 0x618]
	0x03AD071C LDR X24, [X19 + 0x100]
	0x03AD0720 LDR W22, [X19 + 0x25C]
	0x03AD0724 LDR W25, [X19 + 0x214]
	0x03AD0728 LDR X0, [X8]
	0x03AD072C LDR W8, [X0 + 0xE0]
	0x03AD0730 CBNZ W8, 0x3AD0738
	0x03AD0734 BL 0x1C16DFC
	0x03AD0738 ADD X5, X31, 0x19C
	0x03AD073C MOVZ W2, 0x1
	0x03AD0740 MOV W0, W21
	0x03AD0744 MOV X1, X24
	0x03AD0748 MOV W3, W22
	0x03AD074C MOV W4, W25
	0x03AD0750 MOV X6, X31
	0x03AD0754 BL 0x3AEB240
	0x03AD0758 CBZ X0, 0x3AD08BC
	0x03AD075C MOV X22, X0
	0x03AD0760 MOV X0, X31
	0x03AD0764 BL 0x3B13E38
	0x03AD0768 TBZ X0, 0x0, 0x3AD0784
	0x03AD076C ADRP X24, 0x688000
	0x03AD0770 LDR X24, [X24 + 0x368]
	0x03AD0774 MOV X27, X26
	0x03AD0778 MOVZ W26, 0x178
	0x03AD077C CBNZ X22, 0x3AD0BDC
	0x03AD0780 B 0x3AD1954
	0x03AD0784 ADRP X8, 0x623000
	0x03AD0788 LDR X8, [X8 + 0x9D0]
	0x03AD078C MOVZ W1, 0x4
	0x03AD0790 LDR X0, [X8]
	0x03AD0794 BL 0x1C16D6C
	0x03AD0798 ADRP X8, 0x623000
	0x03AD079C LDR X8, [X8 + 0x758]
	0x03AD07A0 CMP W23, 0x10000
	0x03AD07A4 MOV X24, X0
	0x03AD07A8 MOV X27, X26
	0x03AD07AC B.LT 0x3AD0A90
	0x03AD07B0 LDR X0, [X8]
	0x03AD07B4 ADD X1, X31, 0xD0
	0x03AD07B8 STR W23, [X31 + 0xD0]
	0x03AD07BC BL 0x1C16E04
	0x03AD07C0 MOVZ W26, 0x178
	0x03AD07C4 CBZ X24, 0x3AD1954
	0x03AD07C8 MOV X23, X0
	0x03AD07CC CBZ X0, 0x3AD07E4
	0x03AD07D0 LDR X8, [X24]
	0x03AD07D4 MOV X0, X23
	0x03AD07D8 LDR X1, [X8 + 0x40]
	0x03AD07DC BL 0x1C16E00
	0x03AD07E0 CBZ X0, 0x3AD195C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x913000
	007 Move W8, [X20+1256]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x624000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x689000
	018 Move X0, [X0+824]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1256], W8
	022 Move X0, [X19+1768]
	023 Move S0, 1
	024 NotImplemented "Instruction FMIN not yet implemented."
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Move S1, W31
	027 NotImplemented "Instruction FCSEL not yet implemented."
	028 Compare X0, 0
	029 JumpIfEqual {91}
	030 Move X21, 0x689000
	031 Move X21, [X21+824]
	032 Move X1, X31
	033 Call Renderer.get_material, X0
	034 Move X8, [X21]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Compare X20, 0
	042 JumpIfEqual {91}
	043 Move X8, [X21]
	044 Move X21, 0x624000
	045 Move X0, X20
	046 Move V0, V8
	047 Move X8, [X8+184]
	048 Move X2, X31
	049 Move W1, [X8+60]
	050 Move X21, [X21+1432]
	051 Call Material.SetFloat, X0, X1, V0
	052 Move X0, [X21]
	053 Move X20, [X19+304]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {72}
	066 Move X0, [X19+1768]
	067 Compare X0, 0
	068 JumpIfEqual {91}
	069 Move X1, X31
	070 Call Renderer.get_material, X0
	071 Move [X19+304], X0
	072 Move X0, [X19+1768]
	073 Compare X0, 0
	074 JumpIfEqual {91}
	075 Move X1, X31
	076 Call Renderer.get_material, X0
	077 Move X8, [X19]
	078 Move [X19+304], X0
	079 Move [X19+272], X0
	080 Move X0, X19
	081 Move X9, [X8+1960]
	082 Move X1, [X8+1968]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move [X19+1560], S0
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X30, [X31+16]
	088 Move X21, [X31+24]
	089 Move V8, [X31+48]
	090 Return 
	091 Call 0x1C17F20

Method: System.Void SetFaceColor(UnityEngine.Color32 color)

Disassembly:
	0x03AD07E4 LDR W8, [X24 + 0x18]
	0x03AD07E8 CBZ W8, 0x3AD1958
	0x03AD07EC STR X23, [X24 + 0x20]
	0x03AD07F0 LDR X0, [X19 + 0xF8]
	0x03AD07F4 CBZ X0, 0x3AD1954
	0x03AD07F8 MOV X1, X31
	0x03AD07FC BL 0x3C389D4
	0x03AD0800 MOV X23, X0
	0x03AD0804 CBZ X0, 0x3AD081C
	0x03AD0808 LDR X8, [X24]
	0x03AD080C MOV X0, X23
	0x03AD0810 LDR X1, [X8 + 0x40]
	0x03AD0814 BL 0x1C16E00
	0x03AD0818 CBZ X0, 0x3AD195C
	0x03AD081C LDR W8, [X24 + 0x18]
	0x03AD0820 CMP W8, 0x1
	0x03AD0824 B.LS 0x3AD1958
	0x03AD0828 STR X23, [X24 + 0x28]
	0x03AD082C CBZ X22, 0x3AD1954
	0x03AD0830 ADRP X9, 0x62B000
	0x03AD0834 LDR W8, [X22 + 0x14]
	0x03AD0838 LDR X9, [X9 + 0x720]
	0x03AD083C ADD X1, X31, 0x160
	0x03AD0840 STR W8, [X31 + 0x160]
	0x03AD0844 LDR X0, [X9]
	0x03AD0848 BL 0x1C16E04
	0x03AD084C MOV X23, X0
	0x03AD0850 CBZ X0, 0x3AD0868
	0x03AD0854 LDR X8, [X24]
	0x03AD0858 MOV X0, X23
	0x03AD085C LDR X1, [X8 + 0x40]
	0x03AD0860 BL 0x1C16E00
	0x03AD0864 CBZ X0, 0x3AD195C
	0x03AD0868 LDR W8, [X24 + 0x18]
	0x03AD086C CMP W8, 0x2
	0x03AD0870 B.LS 0x3AD1958
	0x03AD0874 MOV X0, X19
	0x03AD0878 MOV X1, X31
	0x03AD087C STR X23, [X24 + 0x30]
	0x03AD0880 BL 0x3C389D4
	0x03AD0884 MOV X23, X0
	0x03AD0888 CBZ X0, 0x3AD08A0
	0x03AD088C LDR X8, [X24]
	0x03AD0890 MOV X0, X23
	0x03AD0894 LDR X1, [X8 + 0x40]
	0x03AD0898 BL 0x1C16E00
	0x03AD089C CBZ X0, 0x3AD195C
	0x03AD08A0 LDR W8, [X24 + 0x18]
	0x03AD08A4 CMP W8, 0x3
	0x03AD08A8 B.LS 0x3AD1958
	0x03AD08AC STR X23, [X24 + 0x38]
	0x03AD08B0 ADRP X8, 0x688000
	0x03AD08B4 LDR X8, [X8 + 0x648]
	0x03AD08B8 B 0x3AD0B98
	0x03AD08BC BL 0x3B13F74
	0x03AD08C0 CBZ X0, 0x3AD093C
	0x03AD08C4 MOV X0, X31
	0x03AD08C8 BL 0x3B13F74
	0x03AD08CC CBZ X0, 0x3AD1954
	0x03AD08D0 LDR W8, [X0 + 0x18]
	0x03AD08D4 CMP W8, 0x1
	0x03AD08D8 B.LT 0x3AD093C
	0x03AD08DC LDR X8, [X19 + 0x100]
	0x03AD08E0 MOV X0, X31
	0x03AD08E4 STR X8, [X31 + 0x10]
	0x03AD08E8 BL 0x3B13F74
	0x03AD08EC ADRP X8, 0x688000
	0x03AD08F0 LDR X8, [X8 + 0x618]
	0x03AD08F4 LDR W24, [X19 + 0x25C]
	0x03AD08F8 LDR W25, [X19 + 0x214]
	0x03AD08FC MOV X22, X0
	0x03AD0900 LDR X8, [X8]
	0x03AD0904 LDR W9, [X8 + 0xE0]
	0x03AD0908 CBNZ W9, 0x3AD0914

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x913000
	008 Move W8, [X21+1257]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x624000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x689000
	019 Move X0, [X0+824]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1257], W8
	023 Move X0, [X19+1768]
	024 Compare X0, 0
	025 JumpIfEqual {96}
	026 Move X22, 0x689000
	027 Move X22, [X22+824]
	028 Move X1, X31
	029 Call Renderer.get_material, X0
	030 Move X8, [X22]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Compare X21, 0
	038 JumpIfEqual {96}
	039 Move W9, 0x437F0000
	040 Move X23, 0x624000
	041 Move X23, [X23+1432]
	042 Move S4, W9
	043 Move X9, [X22]
	044 Move X8, X20
	045 ShiftRight X8, 24
	046 And X8, X8, 0x7FFFFFFF
	047 NotImplemented "Instruction UCVTF not yet implemented."
	048 Move W8, W20
	049 ShiftRight W8, 16
	050 And W8, W8, 0x7FFFFF
	051 NotImplemented "Instruction FDIV not yet implemented."
	052 NotImplemented "Instruction UCVTF not yet implemented."
	053 Move X8, [X9+184]
	054 Move W9, W20
	055 ShiftRight W9, 8
	056 And W9, W9, 0x7FFF
	057 NotImplemented "Instruction FDIV not yet implemented."
	058 NotImplemented "Instruction UCVTF not yet implemented."
	059 Move W1, [X8+8]
	060 And W8, W20, 255
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 NotImplemented "Instruction UCVTF not yet implemented."
	063 NotImplemented "Instruction FDIV not yet implemented."
	064 Move X0, X21
	065 Move X2, X31
	066 Call Material.SetColor, X0, X1, X2
	067 Move X0, [X23]
	068 Move X20, [X19+304]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {87}
	081 Move X0, [X19+1768]
	082 Compare X0, 0
	083 JumpIfEqual {96}
	084 Move X1, X31
	085 Call Renderer.get_material, X0
	086 Move [X19+304], X0
	087 Move X0, [X19+304]
	088 Move [X19+272], X0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Return 
	096 Call 0x1C17F20

Method: System.Void SetOutlineColor(UnityEngine.Color32 color)

Disassembly:
	0x03AD090C MOV X0, X8
	0x03AD0910 BL 0x1C16DFC
	0x03AD0914 LDR X1, [X31 + 0x10]
	0x03AD0918 ADD X6, X31, 0x19C
	0x03AD091C MOVZ W3, 0x1
	0x03AD0920 MOV W0, W21
	0x03AD0924 MOV X2, X22
	0x03AD0928 MOV W4, W24
	0x03AD092C MOV W5, W25
	0x03AD0930 MOV X7, X31
	0x03AD0934 BL 0x3AEB758
	0x03AD0938 CBNZ X0, 0x3AD075C
	0x03AD093C MOV X0, X31
	0x03AD0940 BL 0x3B13E54
	0x03AD0944 ADRP X8, 0x623000
	0x03AD0948 LDR X8, [X8 + 0x598]
	0x03AD094C MOV X22, X0
	0x03AD0950 LDR X8, [X8]
	0x03AD0954 LDR W9, [X8 + 0xE0]
	0x03AD0958 CBNZ W9, 0x3AD0964
	0x03AD095C MOV X0, X8
	0x03AD0960 BL 0x1C16DFC
	0x03AD0964 MOV X0, X22
	0x03AD0968 MOV X1, X31
	0x03AD096C MOV X2, X31
	0x03AD0970 BL 0x3C354F8
	0x03AD0974 TBZ X0, 0x0, 0x3AD09D0
	0x03AD0978 MOV X0, X31
	0x03AD097C BL 0x3B13E54
	0x03AD0980 ADRP X8, 0x688000
	0x03AD0984 LDR X8, [X8 + 0x618]
	0x03AD0988 LDR W22, [X19 + 0x25C]
	0x03AD098C LDR W24, [X19 + 0x214]
	0x03AD0990 MOV X25, X0
	0x03AD0994 LDR X8, [X8]
	0x03AD0998 LDR W9, [X8 + 0xE0]
	0x03AD099C CBNZ W9, 0x3AD09A8
	0x03AD09A0 MOV X0, X8
	0x03AD09A4 BL 0x1C16DFC
	0x03AD09A8 ADD X5, X31, 0x19C
	0x03AD09AC MOVZ W2, 0x1
	0x03AD09B0 MOV W0, W21
	0x03AD09B4 MOV X1, X25
	0x03AD09B8 MOV W3, W22
	0x03AD09BC MOV W4, W24
	0x03AD09C0 MOV X6, X31
	0x03AD09C4 BL 0x3AEB240
	0x03AD09C8 MOV X22, X0
	0x03AD09CC CBNZ X0, 0x3AD0760
	0x03AD09D0 LDR W8, [X20 + 0x18]
	0x03AD09D4 CMP W28, W8
	0x03AD09D8 B.CS 0x3AD1958
	0x03AD09DC MOVZ W8, 0x20
	0x03AD09E0 STR W8, [X27]
	0x03AD09E4 ADRP X8, 0x688000
	0x03AD09E8 LDR X8, [X8 + 0x618]
	0x03AD09EC LDR X24, [X19 + 0x100]
	0x03AD09F0 LDR W22, [X19 + 0x25C]
	0x03AD09F4 LDR W25, [X19 + 0x214]
	0x03AD09F8 LDR X0, [X8]
	0x03AD09FC LDR W8, [X0 + 0xE0]
	0x03AD0A00 CBNZ W8, 0x3AD0A08
	0x03AD0A04 BL 0x1C16DFC
	0x03AD0A08 ADD X5, X31, 0x19C
	0x03AD0A0C MOVZ W0, 0x20
	0x03AD0A10 MOVZ W2, 0x1
	0x03AD0A14 MOV X1, X24
	0x03AD0A18 MOV W3, W22
	0x03AD0A1C MOV W4, W25
	0x03AD0A20 MOV X6, X31
	0x03AD0A24 MOVZ W21, 0x20
	0x03AD0A28 BL 0x3AEB240
	0x03AD0A2C CBNZ X0, 0x3AD075C
	0x03AD0A30 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x913000
	008 Move W8, [X21+1258]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x624000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x689000
	019 Move X0, [X0+824]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1258], W8
	023 Move X0, [X19+1768]
	024 Compare X0, 0
	025 JumpIfEqual {96}
	026 Move X22, 0x689000
	027 Move X22, [X22+824]
	028 Move X1, X31
	029 Call Renderer.get_material, X0
	030 Move X8, [X22]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Compare X21, 0
	038 JumpIfEqual {96}
	039 Move W9, 0x437F0000
	040 Move X23, 0x624000
	041 Move X23, [X23+1432]
	042 Move S4, W9
	043 Move X9, [X22]
	044 Move X8, X20
	045 ShiftRight X8, 24
	046 And X8, X8, 0x7FFFFFFF
	047 NotImplemented "Instruction UCVTF not yet implemented."
	048 Move W8, W20
	049 ShiftRight W8, 16
	050 And W8, W8, 0x7FFFFF
	051 NotImplemented "Instruction FDIV not yet implemented."
	052 NotImplemented "Instruction UCVTF not yet implemented."
	053 Move X8, [X9+184]
	054 Move W9, W20
	055 ShiftRight W9, 8
	056 And W9, W9, 0x7FFF
	057 NotImplemented "Instruction FDIV not yet implemented."
	058 NotImplemented "Instruction UCVTF not yet implemented."
	059 Move W1, [X8+68]
	060 And W8, W20, 255
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 NotImplemented "Instruction UCVTF not yet implemented."
	063 NotImplemented "Instruction FDIV not yet implemented."
	064 Move X0, X21
	065 Move X2, X31
	066 Call Material.SetColor, X0, X1, X2
	067 Move X0, [X23]
	068 Move X20, [X19+304]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {87}
	081 Move X0, [X19+1768]
	082 Compare X0, 0
	083 JumpIfEqual {96}
	084 Move X1, X31
	085 Call Renderer.get_material, X0
	086 Move [X19+304], X0
	087 Move X0, [X19+304]
	088 Move [X19+272], X0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Return 
	096 Call 0x1C17F20

Method: System.Void CreateMaterialInstance()

Disassembly:
	0x03ACFE0C LDR X8, [X0 + 0xB8]
	0x03ACFE10 MOV X0, X19
	0x03ACFE14 LDP X20, X19, [X31 + 0x10]
	0x03ACFE18 CMP W21, 0x0
	0x03ACFE1C LDR W1, [X8 + 0x60]
	0x03ACFE20 FMOV S0, W31
	0x03ACFE24 FMOV S1, 0.875
	0x03ACFE28 FCSEL S0, S1, S0, EQ
	0x03ACFE2C MOV X2, X31
	0x03ACFE30 LDP X30, X21, [X31], #0x20
	0x03ACFE34 B 0x3C15CD8
	0x03ACFE38 BL 0x1C16F20
	0x03ACFE3C STP X29, X30, [X31 - 0x60]!
	0x03ACFE40 STP X28, X27, [X31 + 0x10]
	0x03ACFE44 STP X26, X25, [X31 + 0x20]
	0x03ACFE48 STP X24, X23, [X31 + 0x30]
	0x03ACFE4C STP X22, X21, [X31 + 0x40]
	0x03ACFE50 STP X20, X19, [X31 + 0x50]
	0x03ACFE54 SUB X31, X31, 0x1A0
	0x03ACFE58 ADRP X21, 0x913000
	0x03ACFE5C LDRB W8, [X21 + 0x4EF]
	0x03ACFE60 MOV X20, X1
	0x03ACFE64 MOV X19, X0
	0x03ACFE68 TBNZ X8, 0x0, 0x3ACFFC4
	0x03ACFE6C ADRP X0, 0x626000
	0x03ACFE70 LDR X0, [X0 + 0x170]
	0x03ACFE74 BL 0x1C16CF4
	0x03ACFE78 ADRP X0, 0x624000
	0x03ACFE7C LDR X0, [X0 + 0xA28]
	0x03ACFE80 BL 0x1C16CF4
	0x03ACFE84 ADRP X0, 0x64E000
	0x03ACFE88 LDR X0, [X0 + 0x8D0]
	0x03ACFE8C BL 0x1C16CF4
	0x03ACFE90 ADRP X0, 0x67F000
	0x03ACFE94 LDR X0, [X0 + 0xD78]
	0x03ACFE98 BL 0x1C16CF4
	0x03ACFE9C ADRP X0, 0x624000
	0x03ACFEA0 LDR X0, [X0 + 0x758]
	0x03ACFEA4 BL 0x1C16CF4
	0x03ACFEA8 ADRP X0, 0x689000
	0x03ACFEAC LDR X0, [X0 + 0x610]
	0x03ACFEB0 BL 0x1C16CF4
	0x03ACFEB4 ADRP X0, 0x689000
	0x03ACFEB8 LDR X0, [X0 + 0x330]
	0x03ACFEBC BL 0x1C16CF4
	0x03ACFEC0 ADRP X0, 0x628000
	0x03ACFEC4 LDR X0, [X0 + 0xCA0]
	0x03ACFEC8 BL 0x1C16CF4
	0x03ACFECC ADRP X0, 0x624000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x914000
	006 Move X20, 0x629000
	007 Move W8, [X21+1259]
	008 Move X20, [X20+3232]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x629000
	015 Move X0, [X0+3232]
	016 Call 0x1C17CF4
	017 Move X0, 0x68A000
	018 Move X0, [X0+1536]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1259], W8
	022 Move X0, [X20]
	023 Move X21, [X19+272]
	024 Call 0x1C17F10
	025 Move X1, X21
	026 Move X2, X31
	027 Move X20, X0
	028 Call Material..ctor, X0, X1
	029 Move X0, [X19+272]
	030 Compare X0, 0
	031 JumpIfEqual {58}
	032 Move X1, X31
	033 Call Material.get_shaderKeywords, X0
	034 Compare X20, 0
	035 JumpIfEqual {58}
	036 Move X21, 0x68A000
	037 Move X21, [X21+1536]
	038 Move X1, X0
	039 Move X0, X20
	040 Move X2, X31
	041 Call Material.set_shaderKeywords, X0, X1
	042 Move X0, X20
	043 Move X1, X31
	044 Call Object.get_name, X0
	045 Move X1, [X21]
	046 Move X2, X31
	047 Call String.Concat, X0, X1
	048 Move X1, X0
	049 Move X0, X20
	050 Move X2, X31
	051 Call Object.set_name, X0, X1
	052 Move [X19+304], X20
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void SetShaderDepth()

Disassembly:
	0x03AD0A34 CMP W28, W8
	0x03AD0A38 B.CS 0x3AD1958
	0x03AD0A3C MOVZ W8, 0x3
	0x03AD0A40 STR W8, [X27]
	0x03AD0A44 ADRP X8, 0x688000
	0x03AD0A48 LDR X8, [X8 + 0x618]
	0x03AD0A4C LDR X24, [X19 + 0x100]
	0x03AD0A50 LDR W22, [X19 + 0x25C]
	0x03AD0A54 LDR W25, [X19 + 0x214]
	0x03AD0A58 LDR X0, [X8]
	0x03AD0A5C LDR W8, [X0 + 0xE0]
	0x03AD0A60 CBNZ W8, 0x3AD0A68
	0x03AD0A64 BL 0x1C16DFC
	0x03AD0A68 ADD X5, X31, 0x19C
	0x03AD0A6C MOVZ W0, 0x3
	0x03AD0A70 MOVZ W2, 0x1
	0x03AD0A74 MOV X1, X24
	0x03AD0A78 MOV W3, W22
	0x03AD0A7C MOV W4, W25
	0x03AD0A80 MOV X6, X31
	0x03AD0A84 MOVZ W21, 0x3
	0x03AD0A88 BL 0x3AEB240
	0x03AD0A8C B 0x3AD075C
	0x03AD0A90 LDR X0, [X8]
	0x03AD0A94 ADD X1, X31, 0xD0
	0x03AD0A98 STR W23, [X31 + 0xD0]
	0x03AD0A9C BL 0x1C16E04
	0x03AD0AA0 MOVZ W26, 0x178
	0x03AD0AA4 CBZ X24, 0x3AD1954
	0x03AD0AA8 MOV X23, X0
	0x03AD0AAC CBZ X0, 0x3AD0AC4
	0x03AD0AB0 LDR X8, [X24]
	0x03AD0AB4 MOV X0, X23
	0x03AD0AB8 LDR X1, [X8 + 0x40]
	0x03AD0ABC BL 0x1C16E00
	0x03AD0AC0 CBZ X0, 0x3AD195C
	0x03AD0AC4 LDR W8, [X24 + 0x18]
	0x03AD0AC8 CBZ W8, 0x3AD1958
	0x03AD0ACC STR X23, [X24 + 0x20]
	0x03AD0AD0 LDR X0, [X19 + 0xF8]
	0x03AD0AD4 CBZ X0, 0x3AD1954
	0x03AD0AD8 MOV X1, X31
	0x03AD0ADC BL 0x3C389D4
	0x03AD0AE0 MOV X23, X0
	0x03AD0AE4 CBZ X0, 0x3AD0AFC
	0x03AD0AE8 LDR X8, [X24]
	0x03AD0AEC MOV X0, X23
	0x03AD0AF0 LDR X1, [X8 + 0x40]
	0x03AD0AF4 BL 0x1C16E00
	0x03AD0AF8 CBZ X0, 0x3AD195C
	0x03AD0AFC LDR W8, [X24 + 0x18]
	0x03AD0B00 CMP W8, 0x1
	0x03AD0B04 B.LS 0x3AD1958
	0x03AD0B08 STR X23, [X24 + 0x28]
	0x03AD0B0C CBZ X22, 0x3AD1954
	0x03AD0B10 ADRP X9, 0x62B000
	0x03AD0B14 LDR W8, [X22 + 0x14]
	0x03AD0B18 LDR X9, [X9 + 0x720]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x913000
	007 Move X21, 0x689000
	008 Move W8, [X20+1260]
	009 Move X21, [X21+824]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x689000
	016 Move X0, [X0+824]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1260], W8
	020 Move X0, [X21]
	021 Move W22, [X19+772]
	022 Move X20, [X19+272]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Compare X20, 0
	029 JumpIfEqual {74}
	030 Move X8, [X0+184]
	031 Move X1, [X8+280]
	032 Compare W22, 0
	033 JumpIfEqual {46}
	034 Move S0, W31
	035 Move X0, X20
	036 Move X2, X31
	037 Call Material.SetFloat, X0, X1, V0
	038 Move X0, [X19+1768]
	039 Compare X0, 0
	040 JumpIfEqual {74}
	041 Move X1, X31
	042 Call Renderer.get_material, X0
	043 Compare X0, 0
	044 JumpIfEqual {74}
	045 Move W1, 4000
	046 Move S0, 4
	047 Move X0, X20
	048 Move X2, X31
	049 Call Material.SetFloat, X0, X1, V0
	050 Move X0, [X19+1768]
	051 Compare X0, 0
	052 JumpIfEqual {74}
	053 Move X1, X31
	054 Call Renderer.get_material, X0
	055 Compare X0, 0
	056 JumpIfEqual {74}
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W1, TEMP
	060 Move X2, X31
	061 Call Material.set_renderQueue, X0, X1
	062 Move X0, [X19+1768]
	063 Compare X0, 0
	064 JumpIfEqual {74}
	065 Move X1, X31
	066 Call Renderer.get_material, X0
	067 Move [X19+272], X0
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return 
	074 Call 0x1C17F20

Method: System.Void SetCulling()

Disassembly:
	0x03AD0B1C ADD X1, X31, 0x160
	0x03AD0B20 STR W8, [X31 + 0x160]
	0x03AD0B24 LDR X0, [X9]
	0x03AD0B28 BL 0x1C16E04
	0x03AD0B2C MOV X23, X0
	0x03AD0B30 CBZ X0, 0x3AD0B48
	0x03AD0B34 LDR X8, [X24]
	0x03AD0B38 MOV X0, X23
	0x03AD0B3C LDR X1, [X8 + 0x40]
	0x03AD0B40 BL 0x1C16E00
	0x03AD0B44 CBZ X0, 0x3AD195C
	0x03AD0B48 LDR W8, [X24 + 0x18]
	0x03AD0B4C CMP W8, 0x2
	0x03AD0B50 B.LS 0x3AD1958
	0x03AD0B54 MOV X0, X19
	0x03AD0B58 MOV X1, X31
	0x03AD0B5C STR X23, [X24 + 0x30]
	0x03AD0B60 BL 0x3C389D4
	0x03AD0B64 MOV X23, X0
	0x03AD0B68 CBZ X0, 0x3AD0B80
	0x03AD0B6C LDR X8, [X24]
	0x03AD0B70 MOV X0, X23
	0x03AD0B74 LDR X1, [X8 + 0x40]
	0x03AD0B78 BL 0x1C16E00
	0x03AD0B7C CBZ X0, 0x3AD195C
	0x03AD0B80 LDR W8, [X24 + 0x18]
	0x03AD0B84 CMP W8, 0x3
	0x03AD0B88 B.LS 0x3AD1958
	0x03AD0B8C STR X23, [X24 + 0x38]
	0x03AD0B90 ADRP X8, 0x688000
	0x03AD0B94 LDR X8, [X8 + 0x650]
	0x03AD0B98 LDR X0, [X8]
	0x03AD0B9C MOV X1, X24
	0x03AD0BA0 MOV X2, X31
	0x03AD0BA4 BL 0x3227C5C
	0x03AD0BA8 ADRP X8, 0x623000
	0x03AD0BAC LDR X8, [X8 + 0xA28]
	0x03AD0BB0 MOV X23, X0
	0x03AD0BB4 ADRP X24, 0x688000
	0x03AD0BB8 LDR X0, [X8]
	0x03AD0BBC LDR W8, [X0 + 0xE0]
	0x03AD0BC0 LDR X24, [X24 + 0x368]
	0x03AD0BC4 CBNZ W8, 0x3AD0BCC
	0x03AD0BC8 BL 0x1C16DFC
	0x03AD0BCC MOV X0, X23
	0x03AD0BD0 MOV X1, X19
	0x03AD0BD4 MOV X2, X31
	0x03AD0BD8 BL 0x3C06B0C
	0x03AD0BDC LDRB W8, [X22 + 0x10]
	0x03AD0BE0 CMP W8, 0x1
	0x03AD0BE4 B.NE 0x3AD0C18
	0x03AD0BE8 LDR X0, [X22 + 0x18]
	0x03AD0BEC CBZ X0, 0x3AD1954
	0x03AD0BF0 MOV X1, X31
	0x03AD0BF4 BL 0x3ADB8A4
	0x03AD0BF8 LDR X8, [X19 + 0x100]
	0x03AD0BFC CBZ X8, 0x3AD1954
	0x03AD0C00 MOV W23, W0
	0x03AD0C04 MOV X0, X8
	0x03AD0C08 MOV X1, X31
	0x03AD0C0C BL 0x3ADB8A4
	0x03AD0C10 CMP W23, W0
	0x03AD0C14 B.NE 0x3AD0C20
	0x03AD0C18 MOV W25, W31
	0x03AD0C1C B 0x3AD0C74
	0x03AD0C20 LDR X8, [X22 + 0x18]
	0x03AD0C24 CBZ X8, 0x3AD0C50
	0x03AD0C28 ADRP X9, 0x688000
	0x03AD0C2C LDR X10, [X8]
	0x03AD0C30 LDR X9, [X9 + 0x578]
	0x03AD0C34 LDRB W12, [X10 + 0x130]
	0x03AD0C38 LDR X9, [X9]
	0x03AD0C3C LDRB W11, [X9 + 0x130]
	0x03AD0C40 CMP W12, W11
	0x03AD0C44 B.CS 0x3AD0C58
	0x03AD0C48 MOV X8, X31
	0x03AD0C4C B 0x3AD0C6C
	0x03AD0C50 STR X31, [X19 + 0x100]
	0x03AD0C54 B 0x3AD0C70
	0x03AD0C58 LDR X10, [X10 + 0xC8]
	0x03AD0C5C ADD X10, X10, X11, 0x3, LSL
	0x03AD0C60 LDUR X10, [X10 - 0x8]
	0x03AD0C64 CMP X10, X9
	0x03AD0C68 CSEL X8, X8, X31, EQ
	0x03AD0C6C STR X8, [X19 + 0x100]
	0x03AD0C70 MOVZ W25, 0x1
	0x03AD0C74 LDR X8, [X19 + 0x368]
	0x03AD0C78 CBZ X8, 0x3AD1954
	0x03AD0C7C LDR X8, [X8 + 0x38]
	0x03AD0C80 CBZ X8, 0x3AD1954
	0x03AD0C84 LDRSW X9, [X19 + 0x490]
	0x03AD0C88 LDR W10, [X8 + 0x18]
	0x03AD0C8C CMP W9, W10
	0x03AD0C90 B.CS 0x3AD1958
	0x03AD0C94 MADD X10, X9, X26, X8
	0x03AD0C98 STR W31, [X10 + 0x2C]
	0x03AD0C9C STR X22, [X10 + 0x30]
	0x03AD0CA0 LDRB W11, [X31 + 0x19C]
	0x03AD0CA4 STRH W21, [X10 + 0x20]
	0x03AD0CA8 STRB W11, [X10 + 0x5C]
	0x03AD0CAC LDR W10, [X20 + 0x18]
	0x03AD0CB0 CMP W28, W10
	0x03AD0CB4 B.CS 0x3AD1958
	0x03AD0CB8 MOVZ W10, 0xC
	0x03AD0CBC MADD X10, X29, X10, X20
	0x03AD0CC0 LDUR V0, [X10 + 0x24]
	0x03AD0CC4 NOP
	0x03AD0CC8 MADD X8, X9, X26, X8
	0x03AD0CCC MOVZ W29, 0xC
	0x03AD0CD0 STUR D0, [X8 + 0x24]
	0x03AD0CD4 LDR X0, [X19 + 0x100]
	0x03AD0CD8 STR X0, [X8 + 0x38]
	0x03AD0CDC LDRB W8, [X22 + 0x10]
	0x03AD0CE0 CMP W8, 0x2
	0x03AD0CE4 B.NE 0x3AD0DE4
	0x03AD0CE8 LDR X21, [X22 + 0x18]
	0x03AD0CEC CBZ X21, 0x3AD1954
	0x03AD0CF0 ADRP X8, 0x688000
	0x03AD0CF4 LDR X9, [X21]
	0x03AD0CF8 LDR X8, [X8 + 0x628]
	0x03AD0CFC LDRB W11, [X9 + 0x130]
	0x03AD0D00 LDR X8, [X8]
	0x03AD0D04 LDRB W10, [X8 + 0x130]
	0x03AD0D08 CMP W11, W10
	0x03AD0D0C B.CC 0x3AD1954
	0x03AD0D10 LDR X9, [X9 + 0xC8]
	0x03AD0D14 ADD X9, X9, X10, 0x3, LSL
	0x03AD0D18 LDUR X9, [X9 - 0x8]
	0x03AD0D1C CMP X9, X8
	0x03AD0D20 B.NE 0x3AD1954
	0x03AD0D24 LDR X0, [X27]
	0x03AD0D28 LDR X23, [X21 + 0x20]
	0x03AD0D2C LDR W8, [X0 + 0xE0]
	0x03AD0D30 CBNZ W8, 0x3AD0D3C
	0x03AD0D34 BL 0x1C16DFC
	0x03AD0D38 LDR X0, [X27]
	0x03AD0D3C LDR X2, [X0 + 0xB8]
	0x03AD0D40 MOV X0, X23
	0x03AD0D44 MOV X1, X21
	0x03AD0D48 LDR X3, [X2 + 0x8]
	0x03AD0D4C BL 0x3ACB80C
	0x03AD0D50 STR W0, [X19 + 0x120]
	0x03AD0D54 LDR X8, [X27]
	0x03AD0D58 LDR X8, [X8 + 0xB8]
	0x03AD0D5C LDR X8, [X8]
	0x03AD0D60 CBZ X8, 0x3AD1954
	0x03AD0D64 LDR W9, [X8 + 0x18]
	0x03AD0D68 CMP W0, W9
	0x03AD0D6C B.CS 0x3AD1958
	0x03AD0D70 MOVZ W9, 0x38
	0x03AD0D74 SMADDL X8, X0, X9, X8
	0x03AD0D78 LDR W9, [X8 + 0x54]
	0x03AD0D7C ADD W9, W9, 0x1
	0x03AD0D80 STR W9, [X8 + 0x54]
	0x03AD0D84 LDR X8, [X19 + 0x368]
	0x03AD0D88 CBZ X8, 0x3AD1954
	0x03AD0D8C LDR X9, [X8 + 0x38]
	0x03AD0D90 CBZ X9, 0x3AD1954
	0x03AD0D94 LDR W8, [X19 + 0x490]
	0x03AD0D98 LDR W10, [X9 + 0x18]
	0x03AD0D9C CMP W8, W10
	0x03AD0DA0 B.CS 0x3AD1958
	0x03AD0DA4 SXTW X10, W8
	0x03AD0DA8 MADD X9, X10, X26, X9
	0x03AD0DAC MOVZ W10, 0x1
	0x03AD0DB0 STR W10, [X9 + 0x2C]
	0x03AD0DB4 LDR W10, [X19 + 0x120]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x913000
	009 Move W8, [X20+1261]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x624000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x689000
	019 Move X0, [X0+824]
	020 Call 0x1C17CF4
	021 Move X0, 0x689000
	022 Move X0, [X0+1504]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1261], W8
	026 Move X0, [X19+1768]
	027 Compare X0, 0
	028 JumpIfEqual {193}
	029 Move W20, [X19+774]
	030 Move X1, X31
	031 Call Renderer.get_material, X0
	032 Compare X0, 0
	033 JumpIfEqual {193}
	034 Move X8, 0x689000
	035 Move X8, [X8+1504]
	036 Move X21, 0x624000
	037 Move X22, 0x689000
	038 Move X1, [X8]
	039 Move X21, [X21+1432]
	040 Move X22, [X22+824]
	041 Compare W20, 0
	042 JumpIfEqual {118}
	043 Move S0, 2
	044 Move X2, X31
	045 Call Material.SetFloat, X0, X1, V0
	046 Move X8, [X19+1800]
	047 Compare X8, 0
	048 JumpIfEqual {193}
	049 Move W23, 5
	050 Move W9, [X8+24]
	051 Subtract X24, X23, 4
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X21]
	055 Move X20, [X8]
	056 Move W9, [X0+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Inequality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {194}
	068 Move X8, [X19+1800]
	069 Compare X8, 0
	070 JumpIfEqual {193}
	071 Move W9, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X8]
	074 Compare X0, 0
	075 JumpIfEqual {193}
	076 Move X1, X31
	077 Call TMP_SubMesh.get_renderer, X0
	078 Move X8, [X21]
	079 Move X20, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Move X2, X31
	088 Call Object.op_Inequality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {114}
	093 Compare X20, 0
	094 JumpIfEqual {193}
	095 Move X0, X20
	096 Move X1, X31
	097 Call Renderer.get_material, X0
	098 Move X8, [X22]
	099 Move X20, X0
	100 Move W9, [X8+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {105}
	103 Move X0, X8
	104 Call 0x1C17DFC
	105 Compare X20, 0
	106 JumpIfEqual {193}
	107 Move X8, [X22]
	108 Move S0, 2
	109 Move X0, X20
	110 Move X2, X31
	111 Move X8, [X8+184]
	112 Move X1, [X8+288]
	113 Call Material.SetFloat, X0, X1, V0
	114 Move X8, [X19+1800]
	115 Add X23, X23, 1
	116 Compare X8, 0
	117 JumpIfNotEqual {50}
	118 Move S0, W31
	119 Move X2, X31
	120 Call Material.SetFloat, X0, X1, V0
	121 Move X8, [X19+1800]
	122 Compare X8, 0
	123 JumpIfEqual {193}
	124 Move W23, 5
	125 Move W9, [X8+24]
	126 Subtract X24, X23, 4
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X21]
	130 Move X20, [X8]
	131 Move W9, [X0+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X20
	136 Move X1, X31
	137 Move X2, X31
	138 Call Object.op_Inequality, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {194}
	143 Move X8, [X19+1800]
	144 Compare X8, 0
	145 JumpIfEqual {193}
	146 Move W9, [X8+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X0, [X8]
	149 Compare X0, 0
	150 JumpIfEqual {193}
	151 Move X1, X31
	152 Call TMP_SubMesh.get_renderer, X0
	153 Move X8, [X21]
	154 Move X20, X0
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move X0, X20
	161 Move X1, X31
	162 Move X2, X31
	163 Call Object.op_Inequality, X0, X1
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {189}
	168 Compare X20, 0
	169 JumpIfEqual {193}
	170 Move X0, X20
	171 Move X1, X31
	172 Call Renderer.get_material, X0
	173 Move X8, [X22]
	174 Move X20, X0
	175 Move W9, [X8+224]
	176 Compare W9, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X8
	179 Call 0x1C17DFC
	180 Compare X20, 0
	181 JumpIfEqual {193}
	182 Move X8, [X22]
	183 Move S0, W31
	184 Move X0, X20
	185 Move X2, X31
	186 Move X8, [X8+184]
	187 Move X1, [X8+288]
	188 Call Material.SetFloat, X0, X1, V0
	189 Move X8, [X19+1800]
	190 Add X23, X23, 1
	191 Compare X8, 0
	192 JumpIfNotEqual {125}
	193 Call 0x1C17F20
	194 Move X20, [X31+48]
	195 Move X19, [X31+56]
	196 Move X22, [X31+32]
	197 Move X21, [X31+40]
	198 Move X24, [X31+16]
	199 Move X23, [X31+24]
	200 Move X30, [X31+64]
	201 Return 
	202 Call 0x1C17F28

Method: System.Void SetPerspectiveCorrection()

Disassembly:
	0x03AD0DB8 STR X21, [X9 + 0x40]
	0x03AD0DBC STR W10, [X9 + 0x58]
	0x03AD0DC0 LDR W10, [X22 + 0x28]
	0x03AD0DC4 STR W10, [X9 + 0x48]
	0x03AD0DC8 LDR W9, [X31 + 0x2C]
	0x03AD0DCC STR W31, [X19 + 0x644]
	0x03AD0DD0 STR W9, [X19 + 0x120]
	0x03AD0DD4 LDR W9, [X31 + 0x28]
	0x03AD0DD8 ADD W9, W9, 0x1
	0x03AD0DDC STR W9, [X31 + 0x28]
	0x03AD0DE0 B 0x3AD114C
	0x03AD0DE4 CBZ W25, 0x3AD0EA8
	0x03AD0DE8 CBZ X0, 0x3AD1954
	0x03AD0DEC MOV X1, X31
	0x03AD0DF0 BL 0x3ADB8A4
	0x03AD0DF4 LDR X8, [X19 + 0xF8]
	0x03AD0DF8 CBZ X8, 0x3AD1954
	0x03AD0DFC MOV W23, W0
	0x03AD0E00 MOV X0, X8
	0x03AD0E04 MOV X1, X31
	0x03AD0E08 BL 0x3ADB8A4
	0x03AD0E0C CMP W23, W0
	0x03AD0E10 B.EQ 0x3AD0EA8
	0x03AD0E14 MOV X0, X31
	0x03AD0E18 BL 0x3B13F90
	0x03AD0E1C TBZ X0, 0x0, 0x3AD0E64
	0x03AD0E20 LDR X8, [X19 + 0x100]
	0x03AD0E24 CBZ X8, 0x3AD1954
	0x03AD0E28 ADRP X9, 0x688000
	0x03AD0E2C LDR X9, [X9 + 0x620]
	0x03AD0E30 LDR X23, [X19 + 0x118]
	0x03AD0E34 LDR X24, [X8 + 0x20]
	0x03AD0E38 LDR X0, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x913000
	006 Move X20, 0x689000
	007 Move W8, [X21+1262]
	008 Move X20, [X20+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x689000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1262], W8
	019 Move X0, [X20]
	020 Move W21, [X19+773]
	021 Move X19, [X19+272]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Compare X19, 0
	028 JumpIfEqual {43}
	029 Move X8, [X0+184]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W1, [X8+96]
	035 Move S0, W31
	036 Move S1, 0.875
	037 NotImplemented "Instruction FCSEL not yet implemented."
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Material.SetFloat, X0, X1, V0
	042 Return 
	043 Call 0x1C17F20

Method: System.Int32 SetArraySizes(TMPro.TMP_Text/UnicodeChar[] unicodeChars)

Disassembly:
	0x03AD0E3C LDR W9, [X0 + 0xE0]
	0x03AD0E40 CBNZ W9, 0x3AD0E48
	0x03AD0E44 BL 0x1C16DFC
	0x03AD0E48 MOV X0, X23
	0x03AD0E4C MOV X1, X24
	0x03AD0E50 MOV X2, X31
	0x03AD0E54 BL 0x3B10470
	0x03AD0E58 LDR X23, [X19 + 0x100]
	0x03AD0E5C MOV X24, X0
	0x03AD0E60 B 0x3AD0E70
	0x03AD0E64 LDR X23, [X19 + 0x100]
	0x03AD0E68 CBZ X23, 0x3AD1954
	0x03AD0E6C LDR X24, [X23 + 0x20]
	0x03AD0E70 STR X24, [X19 + 0x118]
	0x03AD0E74 LDR X0, [X27]
	0x03AD0E78 LDR W8, [X0 + 0xE0]
	0x03AD0E7C CBNZ W8, 0x3AD0E88
	0x03AD0E80 BL 0x1C16DFC
	0x03AD0E84 LDR X0, [X27]
	0x03AD0E88 LDR X2, [X0 + 0xB8]
	0x03AD0E8C MOV X0, X24
	0x03AD0E90 MOV X1, X23
	0x03AD0E94 LDR X3, [X2 + 0x8]
	0x03AD0E98 BL 0x3ACB600
	0x03AD0E9C STR W0, [X19 + 0x120]
	0x03AD0EA0 ADRP X24, 0x688000
	0x03AD0EA4 LDR X24, [X24 + 0x368]
	0x03AD0EA8 LDR X0, [X22 + 0x20]
	0x03AD0EAC CBZ X0, 0x3AD1954
	0x03AD0EB0 MOV X1, X31
	0x03AD0EB4 BL 0x3C9C4F0
	0x03AD0EB8 CMP W0, 0x1
	0x03AD0EBC B.LT 0x3AD0F50
	0x03AD0EC0 LDR X0, [X22 + 0x20]
	0x03AD0EC4 CBZ X0, 0x3AD1954
	0x03AD0EC8 LDR X22, [X19 + 0x100]
	0x03AD0ECC LDR X23, [X19 + 0x118]
	0x03AD0ED0 MOV X1, X31
	0x03AD0ED4 BL 0x3C9C4F0
	0x03AD0ED8 ADRP X8, 0x688000
	0x03AD0EDC LDR X8, [X8 + 0x620]
	0x03AD0EE0 MOV W24, W0
	0x03AD0EE4 LDR X8, [X8]
	0x03AD0EE8 LDR W9, [X8 + 0xE0]
	0x03AD0EEC CBNZ W9, 0x3AD0EF8
	0x03AD0EF0 MOV X0, X8
	0x03AD0EF4 BL 0x1C16DFC
	0x03AD0EF8 MOV X0, X22
	0x03AD0EFC MOV X1, X23
	0x03AD0F00 MOV W2, W24
	0x03AD0F04 MOV X3, X31
	0x03AD0F08 BL 0x3B0FF2C
	0x03AD0F0C STR X0, [X19 + 0x118]
	0x03AD0F10 MOV X22, X0
	0x03AD0F14 LDR X0, [X27]
	0x03AD0F18 LDR X23, [X19 + 0x100]
	0x03AD0F1C LDR W8, [X0 + 0xE0]
	0x03AD0F20 CBNZ W8, 0x3AD0F2C
	0x03AD0F24 BL 0x1C16DFC
	0x03AD0F28 LDR X0, [X27]
	0x03AD0F2C ADRP X24, 0x688000
	0x03AD0F30 LDR X24, [X24 + 0x368]
	0x03AD0F34 LDR X2, [X0 + 0xB8]
	0x03AD0F38 MOV X0, X22
	0x03AD0F3C MOV X1, X23
	0x03AD0F40 LDR X3, [X2 + 0x8]
	0x03AD0F44 BL 0x3ACB600
	0x03AD0F48 MOVZ W25, 0x1
	0x03AD0F4C STR W0, [X19 + 0x120]
	0x03AD0F50 ADRP X8, 0x625000
	0x03AD0F54 LDR X8, [X8 + 0x170]
	0x03AD0F58 LDR X0, [X8]
	0x03AD0F5C LDR W8, [X0 + 0xE0]
	0x03AD0F60 CBNZ W8, 0x3AD0F68
	0x03AD0F64 BL 0x1C16DFC
	0x03AD0F68 MOV W0, W21
	0x03AD0F6C MOV X1, X31
	0x03AD0F70 BL 0x3317FCC
	0x03AD0F74 MOVZ W8, 0x200B
	0x03AD0F78 CMP W21, W8
	0x03AD0F7C B.EQ 0x3AD1080
	0x03AD0F80 TBNZ X0, 0x0, 0x3AD1080
	0x03AD0F84 LDR X8, [X27]
	0x03AD0F88 LDR W9, [X8 + 0xE0]
	0x03AD0F8C CBNZ W9, 0x3AD0F9C
	0x03AD0F90 MOV X0, X8
	0x03AD0F94 BL 0x1C16DFC
	0x03AD0F98 LDR X8, [X27]
	0x03AD0F9C LDR X9, [X8 + 0xB8]
	0x03AD0FA0 LDR X9, [X9]
	0x03AD0FA4 CBZ X9, 0x3AD1954
	0x03AD0FA8 LDR W0, [X19 + 0x120]
	0x03AD0FAC LDR W10, [X9 + 0x18]
	0x03AD0FB0 CMP W0, W10
	0x03AD0FB4 B.CS 0x3AD1958
	0x03AD0FB8 SXTW X10, W0
	0x03AD0FBC MOVZ W11, 0x38
	0x03AD0FC0 MADD X10, X10, X11, X9
	0x03AD0FC4 LDR W10, [X10 + 0x54]
	0x03AD0FC8 MOVZ W11, 0x3FFE
	0x03AD0FCC CMP W10, W11
	0x03AD0FD0 B.LE 0x3AD103C
	0x03AD0FD4 ADRP X8, 0x627000
	0x03AD0FD8 LDR X22, [X19 + 0x118]
	0x03AD0FDC LDR X8, [X8 + 0xCA0]
	0x03AD0FE0 LDR X0, [X8]
	0x03AD0FE4 BL 0x1C16F10
	0x03AD0FE8 MOV X1, X22
	0x03AD0FEC MOV X2, X31
	0x03AD0FF0 MOV X21, X0
	0x03AD0FF4 BL 0x3C145DC
	0x03AD0FF8 LDR X0, [X27]
	0x03AD0FFC LDR X22, [X19 + 0x100]
	0x03AD1000 LDR W8, [X0 + 0xE0]
	0x03AD1004 CBNZ W8, 0x3AD1010
	0x03AD1008 BL 0x1C16DFC
	0x03AD100C LDR X0, [X27]
	0x03AD1010 LDR X2, [X0 + 0xB8]
	0x03AD1014 MOV X0, X21
	0x03AD1018 MOV X1, X22
	0x03AD101C LDR X3, [X2 + 0x8]
	0x03AD1020 BL 0x3ACB600
	0x03AD1024 STR W0, [X19 + 0x120]
	0x03AD1028 LDR X8, [X27]
	0x03AD102C LDR X8, [X8 + 0xB8]
	0x03AD1030 LDR X9, [X8]
	0x03AD1034 CBNZ X9, 0x3AD1060
	0x03AD1038 B 0x3AD1954
	0x03AD103C LDR W10, [X8 + 0xE0]
	0x03AD1040 CBNZ W10, 0x3AD1060
	0x03AD1044 MOV X0, X8
	0x03AD1048 BL 0x1C16DFC
	0x03AD104C LDR X8, [X27]
	0x03AD1050 LDR X8, [X8 + 0xB8]
	0x03AD1054 LDR X9, [X8]
	0x03AD1058 CBZ X9, 0x3AD1954
	0x03AD105C LDR W0, [X19 + 0x120]
	0x03AD1060 LDR W8, [X9 + 0x18]
	0x03AD1064 CMP W0, W8
	0x03AD1068 B.CS 0x3AD1958
	0x03AD106C MOVZ W8, 0x38
	0x03AD1070 SMADDL X8, X0, X8, X9
	0x03AD1074 LDR W9, [X8 + 0x54]
	0x03AD1078 ADD W9, W9, 0x1
	0x03AD107C STR W9, [X8 + 0x54]
	0x03AD1080 LDR X8, [X19 + 0x368]
	0x03AD1084 CBZ X8, 0x3AD1954
	0x03AD1088 LDR X8, [X8 + 0x38]
	0x03AD108C CBZ X8, 0x3AD1954
	0x03AD1090 LDRSW X9, [X19 + 0x490]
	0x03AD1094 LDR W10, [X8 + 0x18]
	0x03AD1098 CMP W9, W10
	0x03AD109C B.CS 0x3AD1958
	0x03AD10A0 LDR X10, [X19 + 0x118]
	0x03AD10A4 NOP
	0x03AD10A8 MADD X9, X9, X26, X8
	0x03AD10AC STR X10, [X9 + 0x50]
	0x03AD10B0 LDR W8, [X19 + 0x120]
	0x03AD10B4 STR W8, [X9 + 0x58]
	0x03AD10B8 LDR X0, [X27]
	0x03AD10BC LDR W9, [X0 + 0xE0]
	0x03AD10C0 CBNZ W9, 0x3AD10D0
	0x03AD10C4 BL 0x1C16DFC
	0x03AD10C8 LDR X0, [X27]
	0x03AD10CC LDR W8, [X19 + 0x120]
	0x03AD10D0 LDR X9, [X0 + 0xB8]
	0x03AD10D4 LDR X9, [X9]
	0x03AD10D8 CBZ X9, 0x3AD1954
	0x03AD10DC LDR W10, [X9 + 0x18]
	0x03AD10E0 CMP W8, W10
	0x03AD10E4 B.CS 0x3AD1958
	0x03AD10E8 MOVZ W10, 0x38
	0x03AD10EC SMADDL X10, X8, X10, X9
	0x03AD10F0 STRB W25, [X10 + 0x41]
	0x03AD10F4 CBZ W25, 0x3AD1148
	0x03AD10F8 LDR W10, [X0 + 0xE0]
	0x03AD10FC CBNZ W10, 0x3AD1118
	0x03AD1100 BL 0x1C16DFC
	0x03AD1104 LDR X8, [X27]
	0x03AD1108 LDR X8, [X8 + 0xB8]
	0x03AD110C LDR X9, [X8]
	0x03AD1110 CBZ X9, 0x3AD1954
	0x03AD1114 LDR W8, [X19 + 0x120]
	0x03AD1118 LDR W10, [X9 + 0x18]
	0x03AD111C CMP W8, W10
	0x03AD1120 B.CS 0x3AD1958
	0x03AD1124 MOVZ W10, 0x38
	0x03AD1128 SMADDL X8, X8, X10, X9
	0x03AD112C LDR X9, [X31 + 0x18]
	0x03AD1130 STR X9, [X8 + 0x48]
	0x03AD1134 LDR X8, [X31 + 0x20]
	0x03AD1138 STR X9, [X19 + 0x118]
	0x03AD113C STR X8, [X19 + 0x100]
	0x03AD1140 LDR W8, [X31 + 0x2C]
	0x03AD1144 STR W8, [X19 + 0x120]
	0x03AD1148 LDR W8, [X19 + 0x490]
	0x03AD114C ADD W8, W8, 0x1
	0x03AD1150 STR W8, [X19 + 0x490]
	0x03AD1154 LDR W8, [X20 + 0x18]
	0x03AD1158 ADD W28, W28, 0x1
	0x03AD115C CMP W28, W8
	0x03AD1160 B.LT 0x3AD03B0
	0x03AD1164 B 0x3AD1174
	0x03AD1168 STR W31, [X31 + 0x28]
	0x03AD116C B 0x3AD1174
	0x03AD1170 MOV X27, X26
	0x03AD1174 LDRB W8, [X19 + 0x3F5]
	0x03AD1178 CBZ W8, 0x3AD11A4
	0x03AD117C STRB W31, [X19 + 0x3F5]
	0x03AD1180 LDR W0, [X19 + 0x490]
	0x03AD1184 ADD X31, X31, 0x1A0
	0x03AD1188 LDP X20, X19, [X31 + 0x50]
	0x03AD118C LDP X22, X21, [X31 + 0x40]
	0x03AD1190 LDP X24, X23, [X31 + 0x30]
	0x03AD1194 LDP X26, X25, [X31 + 0x20]
	0x03AD1198 LDP X28, X27, [X31 + 0x10]
	0x03AD119C LDP X29, X30, [X31], #0x60
	0x03AD11A0 RET
	0x03AD11A4 LDR X21, [X19 + 0x368]
	0x03AD11A8 CBZ X21, 0x3AD1954
	0x03AD11AC LDR W8, [X31 + 0x28]
	0x03AD11B0 STR W8, [X21 + 0x1C]
	0x03AD11B4 LDR X0, [X27]
	0x03AD11B8 LDR W8, [X0 + 0xE0]
	0x03AD11BC CBNZ W8, 0x3AD11C8
	0x03AD11C0 BL 0x1C16DFC
	0x03AD11C4 LDR X0, [X27]
	0x03AD11C8 LDR X8, [X0 + 0xB8]
	0x03AD11CC LDR X0, [X8 + 0x8]
	0x03AD11D0 CBZ X0, 0x3AD1954
	0x03AD11D4 ADRP X8, 0x67D000
	0x03AD11D8 LDR X8, [X8 + 0xD78]
	0x03AD11DC LDR X1, [X8]
	0x03AD11E0 BL 0x2A0A118
	0x03AD11E4 STR W0, [X21 + 0x34]
	0x03AD11E8 LDR X21, [X19 + 0x368]
	0x03AD11EC CBZ X21, 0x3AD1954
	0x03AD11F0 LDR X8, [X21 + 0x60]!
	0x03AD11F4 CBZ X8, 0x3AD1954
	0x03AD11F8 LDR W8, [X8 + 0x18]
	0x03AD11FC MOV W20, W0
	0x03AD1200 CMP W0, W8
	0x03AD1204 B.LE 0x3AD1234
	0x03AD1208 LDR X0, [X24]
	0x03AD120C LDR W8, [X0 + 0xE0]
	0x03AD1210 CBNZ W8, 0x3AD1218
	0x03AD1214 BL 0x1C16DFC
	0x03AD1218 ADRP X8, 0x687000
	0x03AD121C LDR X8, [X8 + 0x638]
	0x03AD1220 MOV X0, X21
	0x03AD1224 MOV W1, W20
	0x03AD1228 MOV W2, W31
	0x03AD122C LDR X3, [X8]
	0x03AD1230 BL 0x2299310
	0x03AD1234 LDR X8, [X19 + 0x708]
	0x03AD1238 CBZ X8, 0x3AD1954
	0x03AD123C LDR W8, [X8 + 0x18]
	0x03AD1240 ADD X21, X19, 0x708
	0x03AD1244 CMP W20, W8
	0x03AD1248 B.LE 0x3AD1288
	0x03AD124C ADD W0, W20, 0x1
	0x03AD1250 MOV X1, X31
	0x03AD1254 BL 0x3C2B340
	0x03AD1258 LDR X8, [X24]
	0x03AD125C MOV W22, W0
	0x03AD1260 LDR W9, [X8 + 0xE0]
	0x03AD1264 CBNZ W9, 0x3AD1270
	0x03AD1268 MOV X0, X8
	0x03AD126C BL 0x1C16DFC
	0x03AD1270 ADRP X8, 0x687000
	0x03AD1274 LDR X8, [X8 + 0x640]
	0x03AD1278 MOV X0, X21
	0x03AD127C MOV W1, W22
	0x03AD1280 LDR X2, [X8]
	0x03AD1284 BL 0x229905C
	0x03AD1288 LDRB W8, [X19 + 0x321]
	0x03AD128C CBZ W8, 0x3AD12F0
	0x03AD1290 LDR X22, [X19 + 0x368]
	0x03AD1294 CBZ X22, 0x3AD1954
	0x03AD1298 LDR X9, [X22 + 0x38]!
	0x03AD129C CBZ X9, 0x3AD1954
	0x03AD12A0 LDR W8, [X19 + 0x490]
	0x03AD12A4 LDR W9, [X9 + 0x18]
	0x03AD12A8 SUB W9, W9, W8
	0x03AD12AC CMP W9, 0x101
	0x03AD12B0 B.LT 0x3AD12F0
	0x03AD12B4 LDR X0, [X24]
	0x03AD12B8 ADD W10, W8, 0x1
	0x03AD12BC CMP W10, 0x100
	0x03AD12C0 MOVZ W10, 0x100
	0x03AD12C4 LDR W9, [X0 + 0xE0]
	0x03AD12C8 CSINC W23, W10, W8, LE
	0x03AD12CC CBNZ W9, 0x3AD12D4
	0x03AD12D0 BL 0x1C16DFC
	0x03AD12D4 ADRP X8, 0x687000
	0x03AD12D8 LDR X8, [X8 + 0x630]
	0x03AD12DC MOVZ W2, 0x1
	0x03AD12E0 MOV X0, X22
	0x03AD12E4 MOV W1, W23
	0x03AD12E8 LDR X3, [X8]
	0x03AD12EC BL 0x2299270
	0x03AD12F0 CMP W20, 0x1
	0x03AD12F4 B.LT 0x3AD1890
	0x03AD12F8 ADRP X29, 0x687000
	0x03AD12FC LDR X29, [X29 + 0x348]
	0x03AD1300 MOV X24, X31
	0x03AD1304 MOV X25, X31
	0x03AD1308 MOV W26, W20
	0x03AD130C MOVZ W28, 0x54
	0x03AD1310 CBZ X25, 0x3AD1680
	0x03AD1314 LDR X8, [X21]
	0x03AD1318 CBZ X8, 0x3AD1954
	0x03AD131C LDR W9, [X8 + 0x18]
	0x03AD1320 CMP X25, X9
	0x03AD1324 B.CS 0x3AD1958
	0x03AD1328 ADRP X9, 0x622000
	0x03AD132C LDR X9, [X9 + 0x598]
	0x03AD1330 ADD X8, X8, X25, 0x3, LSL
	0x03AD1334 LDR X22, [X8 + 0x20]
	0x03AD1338 LDR X0, [X9]
	0x03AD133C LDR W9, [X0 + 0xE0]
	0x03AD1340 CBNZ W9, 0x3AD1348
	0x03AD1344 BL 0x1C16DFC
	0x03AD1348 MOV X0, X22
	0x03AD134C MOV X1, X31
	0x03AD1350 MOV X2, X31
	0x03AD1354 BL 0x3C3883C
	0x03AD1358 TBZ X0, 0x0, 0x3AD1414
	0x03AD135C LDR X0, [X27]
	0x03AD1360 LDR X23, [X21]
	0x03AD1364 LDR W8, [X0 + 0xE0]
	0x03AD1368 CBNZ W8, 0x3AD1374
	0x03AD136C BL 0x1C16DFC
	0x03AD1370 LDR X0, [X27]
	0x03AD1374 LDR X8, [X0 + 0xB8]
	0x03AD1378 LDR X8, [X8]
	0x03AD137C CBZ X8, 0x3AD1954
	0x03AD1380 LDR W9, [X8 + 0x18]
	0x03AD1384 CMP X25, X9
	0x03AD1388 B.CS 0x3AD1958
	0x03AD138C ADD X8, X8, X28
	0x03AD1390 LDUR X9, [X8 - 0x4]
	0x03AD1394 LDUR V0, [X8 - 0x14]
	0x03AD1398 LDUR V1, [X8 - 0x24]
	0x03AD139C LDUR V2, [X8 - 0x34]
	0x03AD13A0 ADD X1, X31, 0x120
	0x03AD13A4 MOV X0, X19
	0x03AD13A8 MOV X2, X31
	0x03AD13AC STR X9, [X31 + 0x150]
	0x03AD13B0 STP V1, V0, [X31 + 0x130]
	0x03AD13B4 STR V2, [X31 + 0x12]
	0x03AD13B8 BL 0x3B19BE0
	0x03AD13BC CBZ X23, 0x3AD1954
	0x03AD13C0 MOV X22, X0
	0x03AD13C4 CBZ X0, 0x3AD13DC
	0x03AD13C8 LDR X8, [X23]
	0x03AD13CC MOV X0, X22
	0x03AD13D0 LDR X1, [X8 + 0x40]
	0x03AD13D4 BL 0x1C16E00
	0x03AD13D8 CBZ X0, 0x3AD195C
	0x03AD13DC LDR W8, [X23 + 0x18]
	0x03AD13E0 CMP X25, X8
	0x03AD13E4 B.CS 0x3AD1958
	0x03AD13E8 ADD X8, X23, X25, 0x3, LSL
	0x03AD13EC STR X22, [X8 + 0x20]
	0x03AD13F0 LDR X8, [X19 + 0x368]
	0x03AD13F4 CBZ X8, 0x3AD1954
	0x03AD13F8 LDR X8, [X8 + 0x60]
	0x03AD13FC CBZ X8, 0x3AD1954
	0x03AD1400 LDR W9, [X8 + 0x18]
	0x03AD1404 CMP X25, X9
	0x03AD1408 B.CS 0x3AD1958
	0x03AD140C ADD X8, X8, X24
	0x03AD1410 STR X31, [X8 + 0x30]
	0x03AD1414 LDR X8, [X21]
	0x03AD1418 CBZ X8, 0x3AD1954
	0x03AD141C LDR W9, [X8 + 0x18]
	0x03AD1420 CMP X25, X9
	0x03AD1424 B.CS 0x3AD1958
	0x03AD1428 ADD X8, X8, X25, 0x3, LSL
	0x03AD142C LDR X8, [X8 + 0x20]
	0x03AD1430 CBZ X8, 0x3AD1954
	0x03AD1434 ADRP X9, 0x622000
	0x03AD1438 LDR X9, [X9 + 0x598]
	0x03AD143C LDR X22, [X8 + 0x38]
	0x03AD1440 LDR X0, [X9]
	0x03AD1444 LDR W9, [X0 + 0xE0]
	0x03AD1448 CBNZ W9, 0x3AD1450
	0x03AD144C BL 0x1C16DFC
	0x03AD1450 MOV X0, X22
	0x03AD1454 MOV X1, X31
	0x03AD1458 MOV X2, X31
	0x03AD145C BL 0x3C3883C
	0x03AD1460 TBNZ X0, 0x0, 0x3AD14EC
	0x03AD1464 LDR X8, [X21]
	0x03AD1468 CBZ X8, 0x3AD1954
	0x03AD146C LDR W9, [X8 + 0x18]
	0x03AD1470 CMP X25, X9
	0x03AD1474 B.CS 0x3AD1958
	0x03AD1478 ADD X8, X8, X25, 0x3, LSL
	0x03AD147C LDR X8, [X8 + 0x20]
	0x03AD1480 CBZ X8, 0x3AD1954
	0x03AD1484 LDR X0, [X8 + 0x38]
	0x03AD1488 CBZ X0, 0x3AD1954
	0x03AD148C MOV X1, X31
	0x03AD1490 BL 0x3C385F8
	0x03AD1494 LDR X8, [X27]
	0x03AD1498 MOV W22, W0
	0x03AD149C LDR W9, [X8 + 0xE0]
	0x03AD14A0 CBNZ W9, 0x3AD14B0
	0x03AD14A4 MOV X0, X8
	0x03AD14A8 BL 0x1C16DFC
	0x03AD14AC LDR X8, [X27]
	0x03AD14B0 LDR X8, [X8 + 0xB8]
	0x03AD14B4 LDR X8, [X8]
	0x03AD14B8 CBZ X8, 0x3AD1954
	0x03AD14BC LDR W9, [X8 + 0x18]
	0x03AD14C0 CMP X25, X9
	0x03AD14C4 B.CS 0x3AD1958
	0x03AD14C8 ADD X8, X8, X28
	0x03AD14CC LDUR X0, [X8 - 0x1C]
	0x03AD14D0 CBZ X0, 0x3AD1954
	0x03AD14D4 MOV X1, X31
	0x03AD14D8 BL 0x3C385F8
	0x03AD14DC CMP W22, W0
	0x03AD14E0 B.NE 0x3AD14EC
	0x03AD14E4 LDR X0, [X27]
	0x03AD14E8 B 0x3AD15A4
	0x03AD14EC LDR X8, [X21]
	0x03AD14F0 CBZ X8, 0x3AD1954
	0x03AD14F4 LDR W9, [X8 + 0x18]
	0x03AD14F8 CMP X25, X9
	0x03AD14FC B.CS 0x3AD1958
	0x03AD1500 LDR X0, [X27]
	0x03AD1504 ADD X8, X8, X25, 0x3, LSL
	0x03AD1508 LDR X22, [X8 + 0x20]
	0x03AD150C LDR W9, [X0 + 0xE0]
	0x03AD1510 CBNZ W9, 0x3AD151C
	0x03AD1514 BL 0x1C16DFC
	0x03AD1518 LDR X0, [X27]
	0x03AD151C LDR X8, [X0 + 0xB8]
	0x03AD1520 LDR X8, [X8]
	0x03AD1524 CBZ X8, 0x3AD1954
	0x03AD1528 LDR W9, [X8 + 0x18]
	0x03AD152C CMP X25, X9
	0x03AD1530 B.CS 0x3AD1958
	0x03AD1534 CBZ X22, 0x3AD1954
	0x03AD1538 ADD X8, X8, X28
	0x03AD153C LDUR X1, [X8 - 0x1C]
	0x03AD1540 MOV X0, X22
	0x03AD1544 MOV X2, X31
	0x03AD1548 BL 0x3B19750
	0x03AD154C LDR X8, [X21]
	0x03AD1550 CBZ X8, 0x3AD1954
	0x03AD1554 LDR W9, [X8 + 0x18]
	0x03AD1558 CMP X25, X9
	0x03AD155C B.CS 0x3AD1958
	0x03AD1560 LDR X0, [X27]
	0x03AD1564 LDR X9, [X0 + 0xB8]
	0x03AD1568 LDR X9, [X9]
	0x03AD156C CBZ X9, 0x3AD1954
	0x03AD1570 LDR W10, [X9 + 0x18]
	0x03AD1574 CMP X25, X10
	0x03AD1578 B.CS 0x3AD1958
	0x03AD157C ADD X8, X8, X25, 0x3, LSL
	0x03AD1580 LDR X10, [X8 + 0x20]
	0x03AD1584 CBZ X10, 0x3AD1954
	0x03AD1588 ADD X9, X9, X28
	0x03AD158C LDUR X11, [X9 - 0x2C]
	0x03AD1590 STR X11, [X10 + 0x20]
	0x03AD1594 LDR X8, [X8 + 0x20]
	0x03AD1598 CBZ X8, 0x3AD1954
	0x03AD159C LDUR X9, [X9 - 0x24]
	0x03AD15A0 STR X9, [X8 + 0x28]
	0x03AD15A4 LDR W8, [X0 + 0xE0]
	0x03AD15A8 CBNZ W8, 0x3AD15B4
	0x03AD15AC BL 0x1C16DFC
	0x03AD15B0 LDR X0, [X27]
	0x03AD15B4 LDR X8, [X0 + 0xB8]
	0x03AD15B8 LDR X8, [X8]
	0x03AD15BC CBZ X8, 0x3AD1954
	0x03AD15C0 LDR W9, [X8 + 0x18]
	0x03AD15C4 CMP X25, X9
	0x03AD15C8 B.CS 0x3AD1958
	0x03AD15CC ADD X9, X8, X28
	0x03AD15D0 LDURB W9, [X9 - 0x13]
	0x03AD15D4 CBZ W9, 0x3AD1684
	0x03AD15D8 LDR X9, [X21]
	0x03AD15DC CBZ X9, 0x3AD1954
	0x03AD15E0 LDR W10, [X9 + 0x18]
	0x03AD15E4 CMP X25, X10
	0x03AD15E8 B.CS 0x3AD1958
	0x03AD15EC ADD X9, X9, X25, 0x3, LSL
	0x03AD15F0 LDR W10, [X0 + 0xE0]
	0x03AD15F4 LDR X22, [X9 + 0x20]
	0x03AD15F8 CBNZ W10, 0x3AD1610
	0x03AD15FC BL 0x1C16DFC
	0x03AD1600 LDR X8, [X27]
	0x03AD1604 LDR X8, [X8 + 0xB8]
	0x03AD1608 LDR X8, [X8]
	0x03AD160C CBZ X8, 0x3AD1954
	0x03AD1610 LDR W9, [X8 + 0x18]
	0x03AD1614 CMP X25, X9
	0x03AD1618 B.CS 0x3AD1958
	0x03AD161C CBZ X22, 0x3AD1954
	0x03AD1620 ADD X8, X8, X28
	0x03AD1624 LDUR X1, [X8 - 0x1C]
	0x03AD1628 MOV X0, X22
	0x03AD162C MOV X2, X31
	0x03AD1630 BL 0x3B19798
	0x03AD1634 LDR X8, [X21]
	0x03AD1638 CBZ X8, 0x3AD1954
	0x03AD163C LDR W9, [X8 + 0x18]
	0x03AD1640 CMP X25, X9
	0x03AD1644 B.CS 0x3AD1958
	0x03AD1648 LDR X0, [X27]
	0x03AD164C LDR X9, [X0 + 0xB8]
	0x03AD1650 LDR X9, [X9]
	0x03AD1654 CBZ X9, 0x3AD1954
	0x03AD1658 LDR W10, [X9 + 0x18]
	0x03AD165C CMP X25, X10
	0x03AD1660 B.CS 0x3AD1958
	0x03AD1664 ADD X8, X8, X25, 0x3, LSL
	0x03AD1668 LDR X8, [X8 + 0x20]
	0x03AD166C CBZ X8, 0x3AD1954
	0x03AD1670 ADD X9, X9, X28
	0x03AD1674 LDUR X9, [X9 - 0xC]
	0x03AD1678 STR X9, [X8 + 0x48]
	0x03AD167C B 0x3AD1684
	0x03AD1680 LDR X0, [X27]
	0x03AD1684 LDR W8, [X0 + 0xE0]
	0x03AD1688 CBNZ W8, 0x3AD1694
	0x03AD168C BL 0x1C16DFC
	0x03AD1690 LDR X0, [X27]
	0x03AD1694 LDR X8, [X0 + 0xB8]
	0x03AD1698 LDR X8, [X8]
	0x03AD169C CBZ X8, 0x3AD1954
	0x03AD16A0 LDR W9, [X8 + 0x18]
	0x03AD16A4 CMP X25, X9
	0x03AD16A8 B.CS 0x3AD1958
	0x03AD16AC LDR X9, [X19 + 0x368]
	0x03AD16B0 CBZ X9, 0x3AD1954
	0x03AD16B4 LDR X22, [X9 + 0x60]
	0x03AD16B8 CBZ X22, 0x3AD1954
	0x03AD16BC LDR W9, [X22 + 0x18]
	0x03AD16C0 CMP X25, X9
	0x03AD16C4 B.CS 0x3AD1958
	0x03AD16C8 ADD X9, X22, X24
	0x03AD16CC LDR X10, [X9 + 0x30]
	0x03AD16D0 LDR W23, [X8, X28, LSL]
	0x03AD16D4 CBZ X10, 0x3AD1724
	0x03AD16D8 LDR W8, [X10 + 0x18]
	0x03AD16DC ADD X22, X9, 0x20
	0x03AD16E0 CMP W8, W23, LSL
	0x03AD16E4 B.LT 0x3AD1714
	0x03AD16E8 CMP W23, 0x1
	0x03AD16EC B.LT 0x3AD1824
	0x03AD16F0 LDRB W9, [X19 + 0x321]
	0x03AD16F4 CBZ W9, 0x3AD1824
	0x03AD16F8 ADD W9, W8, 0x3
	0x03AD16FC CMP W8, 0x0
	0x03AD1700 CSEL W8, W9, W8, LT
	0x03AD1704 SBFM W8, W8, 0x2, 0x1F
	0x03AD1708 SUB W8, W8, W23
	0x03AD170C CMP W8, 0x101
	0x03AD1710 B.LT 0x3AD1824
	0x03AD1714 CMP W23, 0x400
	0x03AD1718 B.LE 0x3AD17A0
	0x03AD171C ADD W23, W23, 0x100
	0x03AD1720 B 0x3AD17B0
	0x03AD1724 CBZ X25, 0x3AD17D4
	0x03AD1728 LDR X8, [X21]
	0x03AD172C CBZ X8, 0x3AD1954
	0x03AD1730 LDR W9, [X8 + 0x18]
	0x03AD1734 CMP X25, X9
	0x03AD1738 B.CS 0x3AD1958
	0x03AD173C ADD X8, X8, X25, 0x3, LSL
	0x03AD1740 LDR X0, [X8 + 0x20]
	0x03AD1744 CBZ X0, 0x3AD1954
	0x03AD1748 MOV X1, X31
	0x03AD174C BL 0x3B19A94
	0x03AD1750 MOV X1, X0
	0x03AD1754 MOVI V0.2D, 0x0
	0x03AD1758 ADD W2, W23, 0x1
	0x03AD175C ADD X0, X31, 0xD0
	0x03AD1760 MOV X3, X31
	0x03AD1764 STP V0, V0, [X31 + 0x100]
	0x03AD1768 STP V0, V0, [X31 + 0xE0]
	0x03AD176C STR V0, [X31 + 0xD]
	0x03AD1770 BL 0x3B10F58
	0x03AD1774 ADD X0, X31, 0x30
	0x03AD1778 ADD X1, X31, 0xD0
	0x03AD177C MOVZ W2, 0x50
	0x03AD1780 BL 0x3EB1AC0
	0x03AD1784 LDR W8, [X22 + 0x18]
	0x03AD1788 CMP X25, X8
	0x03AD178C B.CS 0x3AD1958
	0x03AD1790 ADD X8, X22, X24
	0x03AD1794 ADD X0, X8, 0x20
	0x03AD1798 ADD X1, X31, 0x30
	0x03AD179C B 0x3AD181C
	0x03AD17A0 ADD W0, W23, 0x1
	0x03AD17A4 MOV X1, X31
	0x03AD17A8 BL 0x3C2B340
	0x03AD17AC MOV W23, W0
	0x03AD17B0 LDR X0, [X29]
	0x03AD17B4 LDR W8, [X0 + 0xE0]
	0x03AD17B8 CBNZ W8, 0x3AD17C0
	0x03AD17BC BL 0x1C16DFC
	0x03AD17C0 MOV X0, X22
	0x03AD17C4 MOV W1, W23
	0x03AD17C8 MOV X2, X31
	0x03AD17CC BL 0x3B11BD0
	0x03AD17D0 B 0x3AD1824
	0x03AD17D4 LDR X1, [X19 + 0x3A0]
	0x03AD17D8 MOVI V0.2D, 0x0
	0x03AD17DC ADD W2, W23, 0x1
	0x03AD17E0 ADD X0, X31, 0xD0
	0x03AD17E4 MOV X3, X31
	0x03AD17E8 STP V0, V0, [X31 + 0x100]
	0x03AD17EC STP V0, V0, [X31 + 0xE0]
	0x03AD17F0 STR V0, [X31 + 0xD]
	0x03AD17F4 BL 0x3B10F58
	0x03AD17F8 ADD X0, X31, 0x80
	0x03AD17FC ADD X1, X31, 0xD0
	0x03AD1800 MOVZ W2, 0x50
	0x03AD1804 BL 0x3EB1AC0
	0x03AD1808 LDR W8, [X22 + 0x18]
	0x03AD180C CBZ W8, 0x3AD1958
	0x03AD1810 ADD X8, X22, X24
	0x03AD1814 ADD X0, X8, 0x20
	0x03AD1818 ADD X1, X31, 0x80
	0x03AD181C MOVZ W2, 0x50
	0x03AD1820 BL 0x3EB1AC0
	0x03AD1824 LDR X8, [X19 + 0x368]
	0x03AD1828 CBZ X8, 0x3AD1954
	0x03AD182C LDR X22, [X8 + 0x60]
	0x03AD1830 CBZ X22, 0x3AD1954
	0x03AD1834 LDR X0, [X27]
	0x03AD1838 LDR W8, [X0 + 0xE0]
	0x03AD183C CBNZ W8, 0x3AD1848
	0x03AD1840 BL 0x1C16DFC
	0x03AD1844 LDR X0, [X27]
	0x03AD1848 LDR X8, [X0 + 0xB8]
	0x03AD184C LDR X8, [X8]
	0x03AD1850 CBZ X8, 0x3AD1954
	0x03AD1854 LDR W9, [X8 + 0x18]
	0x03AD1858 CMP X25, X9
	0x03AD185C B.CS 0x3AD1958
	0x03AD1860 LDR W9, [X22 + 0x18]
	0x03AD1864 CMP X25, X9
	0x03AD1868 B.CS 0x3AD1958
	0x03AD186C ADD X8, X8, X28
	0x03AD1870 LDUR X8, [X8 - 0x1C]
	0x03AD1874 ADD X25, X25, 0x1
	0x03AD1878 ADD X9, X22, X24
	0x03AD187C ADD X24, X24, 0x50
	0x03AD1880 CMP X26, X25
	0x03AD1884 ADD X28, X28, 0x38
	0x03AD1888 STR X8, [X9 + 0x68]
	0x03AD188C B.NE 0x3AD1310
	0x03AD1890 LDR X8, [X21]
	0x03AD1894 CBZ X8, 0x3AD1954
	0x03AD1898 ADRP X25, 0x687000
	0x03AD189C LDR X25, [X25 + 0x348]
	0x03AD18A0 MOVZ W9, 0x50
	0x03AD18A4 SBFM X10, X20, 0x3D, 0x1F
	0x03AD18A8 SMADDL X9, X20, X9, X31
	0x03AD18AC ADD X23, X10, 0x20
	0x03AD18B0 ADD X24, X9, 0x20
	0x03AD18B4 LDR W9, [X8 + 0x18]
	0x03AD18B8 CMP W20, W9
	0x03AD18BC B.GE 0x3AD1180
	0x03AD18C0 B.CS 0x3AD1958
	0x03AD18C4 ADRP X9, 0x622000
	0x03AD18C8 LDR X9, [X9 + 0x598]
	0x03AD18CC LDR X22, [X8, X23, LSL]
	0x03AD18D0 LDR X0, [X9]
	0x03AD18D4 LDR W9, [X0 + 0xE0]
	0x03AD18D8 CBNZ W9, 0x3AD18E0
	0x03AD18DC BL 0x1C16DFC
	0x03AD18E0 MOV X0, X22
	0x03AD18E4 MOV X1, X31
	0x03AD18E8 MOV X2, X31
	0x03AD18EC BL 0x3C354F8
	0x03AD18F0 TBZ X0, 0x0, 0x3AD1180
	0x03AD18F4 LDR X8, [X19 + 0x368]
	0x03AD18F8 CBZ X8, 0x3AD1954
	0x03AD18FC LDR X22, [X8 + 0x60]
	0x03AD1900 CBZ X22, 0x3AD1954
	0x03AD1904 LDR W8, [X22 + 0x18]
	0x03AD1908 CMP W20, W8
	0x03AD190C B.GE 0x3AD1940
	0x03AD1910 LDR X0, [X25]
	0x03AD1914 LDR W9, [X0 + 0xE0]
	0x03AD1918 CBNZ W9, 0x3AD1924
	0x03AD191C BL 0x1C16DFC
	0x03AD1920 LDR W8, [X22 + 0x18]
	0x03AD1924 CMP W20, W8
	0x03AD1928 B.CS 0x3AD1958
	0x03AD192C ADD X0, X22, X24
	0x03AD1930 MOVZ W2, 0x1
	0x03AD1934 MOV W1, W31
	0x03AD1938 MOV X3, X31
	0x03AD193C BL 0x3B12B68
	0x03AD1940 LDR X8, [X21]
	0x03AD1944 ADD W20, W20, 0x1
	0x03AD1948 ADD X24, X24, 0x50
	0x03AD194C ADD X23, X23, 0x8
	0x03AD1950 CBNZ X8, 0x3AD18B4
	0x03AD1954 BL 0x1C16F20
	0x03AD1958 BL 0x1C16F28
	0x03AD195C BL 0x1C16F44
	0x03AD1960 MOV X1, X31
	0x03AD1964 BL 0x1C16DEC
	0x03AD1968 STP X30, X21, [X31 - 0x20]!
	0x03AD196C STP X20, X19, [X31 + 0x10]
	0x03AD1970 ADRP X21, 0x911000
	0x03AD1974 ADRP X20, 0x622000
	0x03AD1978 LDRB W8, [X21 + 0x4F0]
	0x03AD197C LDR X20, [X20 + 0x598]
	0x03AD1980 MOV X19, X0
	0x03AD1984 TBNZ X8, 0x0, 0x3AD199C
	0x03AD1988 ADRP X0, 0x622000
	0x03AD198C LDR X0, [X0 + 0x598]
	0x03AD1990 BL 0x1C16CF4
	0x03AD1994 MOVZ W8, 0x1
	0x03AD1998 STRB W8, [X21 + 0x4F0]
	0x03AD199C MOV X0, X19
	0x03AD19A0 MOV X1, X31
	0x03AD19A4 BL 0x3AF8E0C
	0x03AD19A8 LDR X8, [X20]
	0x03AD19AC MOV X20, X0
	0x03AD19B0 LDR W9, [X8 + 0xE0]
	0x03AD19B4 CBNZ W9, 0x3AD19C0
	0x03AD19B8 MOV X0, X8
	0x03AD19BC BL 0x1C16DFC
	0x03AD19C0 MOV X0, X20
	0x03AD19C4 MOV X1, X31
	0x03AD19C8 MOV X2, X31
	0x03AD19CC BL 0x3C354F8
	0x03AD19D0 TBZ X0, 0x0, 0x3AD1A34
	0x03AD19D4 LDR X0, [X19 + 0x380]
	0x03AD19D8 CBZ X0, 0x3AD1A40
	0x03AD19DC MOV X1, X31
	0x03AD19E0 BL 0x3C3E51C
	0x03AD19E4 LDR V0, [X19 + 0x340]
	0x03AD19E8 LDR V1, [X19 + 0x348]
	0x03AD19EC LDR X0, [X19 + 0x380]
	0x03AD19F0 STR S2, [X19 + 0x388]
	0x03AD19F4 MOV V2.S[1], V3.S[0]
	0x03AD19F8 FSUB V0.2S, V2.2S, V0.2S
	0x03AD19FC FSUB V0.2S, V0.2S, V1.2S
	0x03AD1A00 STR D0, [X19 + 0x358]
	0x03AD1A04 STR S3, [X19 + 0x38C]
	0x03AD1A08 CBZ X0, 0x3AD1A40
	0x03AD1A0C MOV X1, X31
	0x03AD1A10 BL 0x3C3EA28
	0x03AD1A14 LDR X8, [X19]
	0x03AD1A18 STR S0, [X19 + 0x390]
	0x03AD1A1C STR S1, [X19 + 0x394]
	0x03AD1A20 MOV X0, X19
	0x03AD1A24 LDR X9, [X8 + 0x7C8]
	0x03AD1A28 LDR X1, [X8 + 0x7D0]
	0x03AD1A2C BLR X9
	0x03AD1A30 STR X0, [X19 + 0x758]
	0x03AD1A34 LDP X20, X19, [X31 + 0x10]
	0x03AD1A38 LDP X30, X21, [X31], #0x20
	0x03AD1A3C RET
	0x03AD1A40 BL 0x1C16F20
	0x03AD1A44 LDR X8, [X0]
	0x03AD1A48 MOVZ W9, 0x1
	0x03AD1A4C STRB W9, [X0 + 0x370]
	0x03AD1A50 STRB W9, [X0 + 0x308]
	0x03AD1A54 LDR X2, [X8 + 0x2F8]
	0x03AD1A58 LDR X1, [X8 + 0x300]
	0x03AD1A5C BR X2
	0x03AD1A60 STP X30, X19, [X31 - 0x10]!
	0x03AD1A64 LDR X8, [X0]
	0x03AD1A68 MOV X19, X0
	0x03AD1A6C LDR X9, [X8 + 0x2F8]
	0x03AD1A70 LDR X1, [X8 + 0x300]
	0x03AD1A74 BLR X9
	0x03AD1A78 LDR X8, [X19]
	0x03AD1A7C MOV X0, X19
	0x03AD1A80 LDR X2, [X8 + 0x2E8]
	0x03AD1A84 LDR X1, [X8 + 0x2F0]
	0x03AD1A88 LDP X30, X19, [X31], #0x10
	0x03AD1A8C BR X2
	0x03AD1A90 STR D8, [X31 - 0x30]!
	0x03AD1A94 STP X30, X21, [X31 + 0x10]
	0x03AD1A98 STP X20, X19, [X31 + 0x20]
	0x03AD1A9C ADRP X21, 0x911000
	0x03AD1AA0 ADRP X20, 0x622000
	0x03AD1AA4 LDRB W8, [X21 + 0x4F1]
	0x03AD1AA8 LDR X20, [X20 + 0x598]
	0x03AD1AAC MOV X19, X0
	0x03AD1AB0 TBNZ X8, 0x0, 0x3AD1AC8
	0x03AD1AB4 ADRP X0, 0x622000
	0x03AD1AB8 LDR X0, [X0 + 0x598]
	0x03AD1ABC BL 0x1C16CF4
	0x03AD1AC0 MOVZ W8, 0x1
	0x03AD1AC4 STRB W8, [X21 + 0x4F1]
	0x03AD1AC8 MOV X0, X19
	0x03AD1ACC MOV X1, X31
	0x03AD1AD0 BL 0x3AF8E0C
	0x03AD1AD4 LDR X8, [X20]
	0x03AD1AD8 MOV X20, X0
	0x03AD1ADC LDR W9, [X8 + 0xE0]
	0x03AD1AE0 CBNZ W9, 0x3AD1AEC
	0x03AD1AE4 MOV X0, X8
	0x03AD1AE8 BL 0x1C16DFC
	0x03AD1AEC MOV X0, X20
	0x03AD1AF0 MOV X1, X31
	0x03AD1AF4 MOV X2, X31
	0x03AD1AF8 BL 0x3C354F8
	0x03AD1AFC TBZ X0, 0x0, 0x3AD1B88
	0x03AD1B00 LDR X0, [X19 + 0x380]
	0x03AD1B04 CBZ X0, 0x3AD1BE0
	0x03AD1B08 MOV X1, X31
	0x03AD1B0C BL 0x3C3E51C
	0x03AD1B10 LDR V0, [X19 + 0x388]
	0x03AD1B14 ADRP X8, 0xFFFFFFFFFD018000
	0x03AD1B18 LDR V8, [X8 + 0xF28]
	0x03AD1B1C FABD S0, S2, S2
	0x03AD1B20 FCMP S0, S8
	0x03AD1B24 B.PL 0x3AD1B88
	0x03AD1B28 LDR X0, [X19 + 0x380]
	0x03AD1B2C CBZ X0, 0x3AD1BE0
	0x03AD1B30 MOV X1, X31
	0x03AD1B34 BL 0x3C3E51C
	0x03AD1B38 LDR V0, [X19 + 0x38C]
	0x03AD1B3C FABD S0, S3, S3
	0x03AD1B40 FCMP S0, S8
	0x03AD1B44 B.PL 0x3AD1B88
	0x03AD1B48 LDR X0, [X19 + 0x380]
	0x03AD1B4C CBZ X0, 0x3AD1BE0
	0x03AD1B50 MOV X1, X31
	0x03AD1B54 BL 0x3C3EA28
	0x03AD1B58 LDR V1, [X19 + 0x390]
	0x03AD1B5C FABD S0, S0, S0
	0x03AD1B60 FCMP S0, S8
	0x03AD1B64 B.PL 0x3AD1B88
	0x03AD1B68 LDR X0, [X19 + 0x380]
	0x03AD1B6C CBZ X0, 0x3AD1BE0
	0x03AD1B70 MOV X1, X31
	0x03AD1B74 BL 0x3C3EA28
	0x03AD1B78 LDR V0, [X19 + 0x394]
	0x03AD1B7C FABD S0, S1, S1
	0x03AD1B80 FCMP S0, S8
	0x03AD1B84 B.MI 0x3AD1BD0
	0x03AD1B88 LDR X8, [X19]
	0x03AD1B8C MOV X0, X19
	0x03AD1B90 LDR X9, [X8 + 0x8A8]
	0x03AD1B94 LDR X1, [X8 + 0x8B0]
	0x03AD1B98 BLR X9
	0x03AD1B9C LDR X8, [X19]
	0x03AD1BA0 MOV X0, X19
	0x03AD1BA4 LDR X9, [X8 + 0x2F8]
	0x03AD1BA8 LDR X1, [X8 + 0x300]
	0x03AD1BAC BLR X9
	0x03AD1BB0 LDR X8, [X19]
	0x03AD1BB4 MOV X0, X19
	0x03AD1BB8 LDP X20, X19, [X31 + 0x20]
	0x03AD1BBC LDP X30, X21, [X31 + 0x10]
	0x03AD1BC0 LDR X2, [X8 + 0x2E8]
	0x03AD1BC4 LDR X1, [X8 + 0x2F0]
	0x03AD1BC8 LDR V8, [X31], #0x30
	0x03AD1BCC BR X2
	0x03AD1BD0 LDP X20, X19, [X31 + 0x20]
	0x03AD1BD4 LDP X30, X21, [X31 + 0x10]
	0x03AD1BD8 LDR V8, [X31], #0x30
	0x03AD1BDC RET
	0x03AD1BE0 BL 0x1C16F20
	0x03AD1BE4 STR D8, [X31 - 0x20]!
	0x03AD1BE8 STP X30, X19, [X31 + 0x10]
	0x03AD1BEC LDRB W8, [X0 + 0x370]
	0x03AD1BF0 MOV X19, X0
	0x03AD1BF4 CBNZ W8, 0x3AD1C4C
	0x03AD1BF8 LDR X0, [X19 + 0x380]
	0x03AD1BFC CBZ X0, 0x3AD1C78
	0x03AD1C00 MOV X1, X31
	0x03AD1C04 BL 0x3C40EA8
	0x03AD1C08 LDR V0, [X19 + 0x6E4]
	0x03AD1C0C ADRP X8, 0xFFFFFFFFFD018000
	0x03AD1C10 LDR V2, [X8 + 0xF28]
	0x03AD1C14 MOV V8.16B, V1.16B
	0x03AD1C18 FABD S1, S1, S1
	0x03AD1C1C FCMP S1, S2
	0x03AD1C20 B.LE 0x3AD1C4C
	0x03AD1C24 LDR X8, [X19 + 0x478]
	0x03AD1C28 CBZ X8, 0x3AD1C78
	0x03AD1C2C LDR W9, [X8 + 0x18]
	0x03AD1C30 CBZ W9, 0x3AD1C7C
	0x03AD1C34 LDR W8, [X8 + 0x20]
	0x03AD1C38 CBZ W8, 0x3AD1C4C
	0x03AD1C3C FDIV S0, S8, S0
	0x03AD1C40 MOV X0, X19
	0x03AD1C44 BL 0x3AD1C80
	0x03AD1C48 STR S8, [X19 + 0x6E4]
	0x03AD1C4C LDRB W8, [X19 + 0x371]
	0x03AD1C50 CBZ W8, 0x3AD1C6C
	0x03AD1C54 MOVZ W8, 0x1
	0x03AD1C58 STRB W8, [X19 + 0x370]
	0x03AD1C5C MOV X0, X19
	0x03AD1C60 LDP X30, X19, [X31 + 0x10]
	0x03AD1C64 LDR V8, [X31], #0x20
	0x03AD1C68 B 0x3ACD274
	0x03AD1C6C LDP X30, X19, [X31 + 0x10]
	0x03AD1C70 LDR V8, [X31], #0x20
	0x03AD1C74 RET
	0x03AD1C78 BL 0x1C16F20
	0x03AD1C7C BL 0x1C16F28
	0x03AD1C80 STP X30, X21, [X31 - 0x20]!
	0x03AD1C84 STP X20, X19, [X31 + 0x10]
	0x03AD1C88 MOVZ W8, 0xFF800000
	0x03AD1C8C FMOV S1, W8
	0x03AD1C90 FCMP S0, S1
	0x03AD1C94 MOV X19, X0
	0x03AD1C98 B.EQ 0x3AD1DD4
	0x03AD1C9C FCMP S0, 0x0
	0x03AD1CA0 B.EQ 0x3AD1DD4
	0x03AD1CA4 MOVZ W8, 0x7F800000
	0x03AD1CA8 FMOV S1, W8
	0x03AD1CAC FCMP S0, S1
	0x03AD1CB0 B.EQ 0x3AD1DD4
	0x03AD1CB4 LDR X8, [X19 + 0x368]
	0x03AD1CB8 CBZ X8, 0x3AD1DD0
	0x03AD1CBC LDR W9, [X8 + 0x34]
	0x03AD1CC0 CMP W9, 0x1
	0x03AD1CC4 B.LT 0x3AD1D34
	0x03AD1CC8 LDR X11, [X8 + 0x60]
	0x03AD1CCC MOV W10, W31
	0x03AD1CD0 FABS S0, S0
	0x03AD1CD4 MOVZ W12, 0x50
	0x03AD1CD8 CBZ X11, 0x3AD1DD0
	0x03AD1CDC LDR W13, [X11 + 0x18]
	0x03AD1CE0 CMP W10, W13
	0x03AD1CE4 B.CS 0x3AD1DF8
	0x03AD1CE8 SMADDL X13, X10, X12, X11
	0x03AD1CEC LDR X15, [X13 + 0x50]
	0x03AD1CF0 CBZ X15, 0x3AD1DD0
	0x03AD1CF4 LDR W13, [X15 + 0x18]
	0x03AD1CF8 UBFM X14, X13, 0x20, 0x1F
	0x03AD1CFC CMP X14, 0x1
	0x03AD1D00 B.LT 0x3AD1D28
	0x03AD1D04 SXTW X14, W13
	0x03AD1D08 ADD X15, X15, 0x24
	0x03AD1D0C CBZ X13, 0x3AD1DF8
	0x03AD1D10 LDR V1, [X15]
	0x03AD1D14 SUB X14, X14, 0x1
	0x03AD1D18 SUB X13, X13, 0x1
	0x03AD1D1C FMUL S1, S0, S1
	0x03AD1D20 STR S1, [X15], #0x8
	0x03AD1D24 CBNZ X14, 0x3AD1D0C
	0x03AD1D28 ADD W10, W10, 0x1
	0x03AD1D2C CMP W10, W9
	0x03AD1D30 B.LT 0x3AD1CD8
	0x03AD1D34 MOV X20, X31
	0x03AD1D38 MOVZ W21, 0x50
	0x03AD1D3C LDR X8, [X8 + 0x60]
	0x03AD1D40 CBZ X8, 0x3AD1DD0
	0x03AD1D44 LDR X9, [X8 + 0x18]
	0x03AD1D48 CMP X20, W9, SXTW
	0x03AD1D4C B.GE 0x3AD1DEC
	0x03AD1D50 CBZ X20, 0x3AD1DA4
	0x03AD1D54 LDR X8, [X19 + 0x708]
	0x03AD1D58 CBZ X8, 0x3AD1DD0
	0x03AD1D5C LDR W9, [X8 + 0x18]
	0x03AD1D60 CMP X20, X9
	0x03AD1D64 B.CS 0x3AD1DF8
	0x03AD1D68 ADD X8, X8, X20, 0x3, LSL
	0x03AD1D6C LDR X0, [X8 + 0x20]
	0x03AD1D70 CBZ X0, 0x3AD1DD0
	0x03AD1D74 MOV X1, X31
	0x03AD1D78 BL 0x3B19A94
	0x03AD1D7C LDR X8, [X19 + 0x368]
	0x03AD1D80 CBZ X8, 0x3AD1DD0
	0x03AD1D84 LDR X8, [X8 + 0x60]
	0x03AD1D88 CBZ X8, 0x3AD1DD0
	0x03AD1D8C LDR W9, [X8 + 0x18]
	0x03AD1D90 CMP X20, X9
	0x03AD1D94 B.CS 0x3AD1DF8
	0x03AD1D98 CBZ X0, 0x3AD1DD0
	0x03AD1D9C ADD X8, X8, X21
	0x03AD1DA0 B 0x3AD1DB4
	0x03AD1DA4 CBZ W9, 0x3AD1DF8
	0x03AD1DA8 LDR X0, [X19 + 0x3A0]
	0x03AD1DAC CBZ X0, 0x3AD1DD0
	0x03AD1DB0 ADD X8, X8, 0x50
	0x03AD1DB4 LDR X1, [X8]
	0x03AD1DB8 MOV X2, X31
	0x03AD1DBC BL 0x3C181B8
	0x03AD1DC0 LDR X8, [X19 + 0x368]
	0x03AD1DC4 ADD X20, X20, 0x1
	0x03AD1DC8 ADD X21, X21, 0x50
	0x03AD1DCC CBNZ X8, 0x3AD1D3C
	0x03AD1DD0 BL 0x1C16F20
	0x03AD1DD4 MOVZ W8, 0x1
	0x03AD1DD8 STRB W8, [X19 + 0x370]
	0x03AD1DDC MOV X0, X19
	0x03AD1DE0 LDP X20, X19, [X31 + 0x10]
	0x03AD1DE4 LDP X30, X21, [X31], #0x20
	0x03AD1DE8 B 0x3ACD274
	0x03AD1DEC LDP X20, X19, [X31 + 0x10]
	0x03AD1DF0 LDP X30, X21, [X31], #0x20
	0x03AD1DF4 RET
	0x03AD1DF8 BL 0x1C16F28
	0x03AD1DFC STR X30, [X31 - 0x40]!
	0x03AD1E00 STP X24, X23, [X31 + 0x10]
	0x03AD1E04 STP X22, X21, [X31 + 0x20]
	0x03AD1E08 STP X20, X19, [X31 + 0x30]
	0x03AD1E0C ADRP X21, 0x911000
	0x03AD1E10 LDRB W8, [X21 + 0x4F6]
	0x03AD1E14 MOV W19, W1
	0x03AD1E18 MOV X20, X0
	0x03AD1E1C TBNZ X8, 0x0, 0x3AD1E34
	0x03AD1E20 ADRP X0, 0x622000
	0x03AD1E24 LDR X0, [X0 + 0x598]
	0x03AD1E28 BL 0x1C16CF4
	0x03AD1E2C MOVZ W8, 0x1
	0x03AD1E30 STRB W8, [X21 + 0x4F6]
	0x03AD1E34 LDR X8, [X20 + 0x708]
	0x03AD1E38 CBZ X8, 0x3AD1F10
	0x03AD1E3C ADRP X22, 0x622000
	0x03AD1E40 LDR X22, [X22 + 0x598]
	0x03AD1E44 MOVZ W23, 0x5
	0x03AD1E48 LDR W9, [X8 + 0x18]
	0x03AD1E4C SUB X24, X23, 0x4
	0x03AD1E50 CMP W24, W9
	0x03AD1E54 B.GE 0x3AD1F14
	0x03AD1E58 CMP W24, W9
	0x03AD1E5C B.CS 0x3AD1F28
	0x03AD1E60 LDR X0, [X22]
	0x03AD1E64 LDR X21, [X8, X23, LSL #3]
	0x03AD1E68 LDR W9, [X0 + 0xE0]
	0x03AD1E6C CBNZ W9, 0x3AD1E74
	0x03AD1E70 BL 0x1C16DFC
	0x03AD1E74 MOV X0, X21
	0x03AD1E78 MOV X1, X31
	0x03AD1E7C MOV X2, X31
	0x03AD1E80 BL 0x3C354F8
	0x03AD1E84 TBZ X0, 0x0, 0x3AD1F14
	0x03AD1E88 LDR X8, [X20 + 0x708]
	0x03AD1E8C CBZ X8, 0x3AD1F10
	0x03AD1E90 LDR W9, [X8 + 0x18]
	0x03AD1E94 CMP W24, W9
	0x03AD1E98 B.CS 0x3AD1F28
	0x03AD1E9C LDR X0, [X8, X23, LSL #3]
	0x03AD1EA0 CBZ X0, 0x3AD1F10
	0x03AD1EA4 MOV X1, X31
	0x03AD1EA8 BL 0x3B19904
	0x03AD1EAC LDR X8, [X22]
	0x03AD1EB0 MOV X21, X0
	0x03AD1EB4 LDR W9, [X8 + 0xE0]
	0x03AD1EB8 CBNZ W9, 0x3AD1EC4
	0x03AD1EBC MOV X0, X8
	0x03AD1EC0 BL 0x1C16DFC
	0x03AD1EC4 MOV X0, X21
	0x03AD1EC8 MOV X1, X31
	0x03AD1ECC MOV X2, X31
	0x03AD1ED0 BL 0x3C354F8
	0x03AD1ED4 TBZ X0, 0x0, 0x3AD1F04
	0x03AD1ED8 CBZ X21, 0x3AD1F10
	0x03AD1EDC MOV X0, X21
	0x03AD1EE0 MOV X1, X31
	0x03AD1EE4 BL 0x3C12FF8
	0x03AD1EE8 AND W8, W0, 0x1
	0x03AD1EEC AND W1, W19, 0x1
	0x03AD1EF0 CMP W8, W1
	0x03AD1EF4 B.EQ 0x3AD1F04
	0x03AD1EF8 MOV X0, X21
	0x03AD1EFC MOV X2, X31
	0x03AD1F00 BL 0x3C13034
	0x03AD1F04 LDR X8, [X20 + 0x708]
	0x03AD1F08 ADD X23, X23, 0x1
	0x03AD1F0C CBNZ X8, 0x3AD1E48
	0x03AD1F10 BL 0x1C16F20
	0x03AD1F14 LDP X20, X19, [X31 + 0x30]
	0x03AD1F18 LDP X22, X21, [X31 + 0x20]
	0x03AD1F1C LDP X24, X23, [X31 + 0x10]
	0x03AD1F20 LDR X30, [X31], #0x40
	0x03AD1F24 RET
	0x03AD1F28 BL 0x1C16F28
	0x03AD1F2C STP X30, X21, [X31 - 0x20]!
	0x03AD1F30 STP X20, X19, [X31 + 0x10]
	0x03AD1F34 ADRP X21, 0x911000
	0x03AD1F38 ADRP X20, 0x622000
	0x03AD1F3C LDRB W8, [X21 + 0x4F3]
	0x03AD1F40 LDR X20, [X20 + 0x598]
	0x03AD1F44 MOV X19, X0
	0x03AD1F48 TBNZ X8, 0x0, 0x3AD1F60
	0x03AD1F4C ADRP X0, 0x622000
	0x03AD1F50 LDR X0, [X0 + 0x598]
	0x03AD1F54 BL 0x1C16CF4
	0x03AD1F58 MOVZ W8, 0x1
	0x03AD1F5C STRB W8, [X21 + 0x4F3]
	0x03AD1F60 LDR X0, [X20]
	0x03AD1F64 LDR X20, [X19 + 0x380]
	0x03AD1F68 LDR W8, [X0 + 0xE0]
	0x03AD1F6C CBNZ W8, 0x3AD1F74
	0x03AD1F70 BL 0x1C16DFC
	0x03AD1F74 MOV X0, X20
	0x03AD1F78 MOV X1, X31
	0x03AD1F7C MOV X2, X31
	0x03AD1F80 BL 0x3C3883C
	0x03AD1F84 TBZ X0, 0x0, 0x3AD1F9C
	0x03AD1F88 MOV X0, X19
	0x03AD1F8C MOV X1, X31
	0x03AD1F90 BL 0x3AF8E0C
	0x03AD1F94 STR X0, [X19 + 0x380]
	0x03AD1F98 B 0x3AD1FA0
	0x03AD1F9C LDR X0, [X19 + 0x380]
	0x03AD1FA0 CBZ X0, 0x3AD1FC0
	0x03AD1FA4 LDR X1, [X19 + 0x758]
	0x03AD1FA8 MOV X2, X31
	0x03AD1FAC BL 0x3C3EF78
	0x03AD1FB0 LDR X0, [X19 + 0x758]
	0x03AD1FB4 LDP X20, X19, [X31 + 0x10]
	0x03AD1FB8 LDP X30, X21, [X31], #0x20
	0x03AD1FBC RET
	0x03AD1FC0 BL 0x1C16F20
	0x03AD1FC4 STR X30, [X31 - 0x40]!
	0x03AD1FC8 STP X24, X23, [X31 + 0x10]
	0x03AD1FCC STP X22, X21, [X31 + 0x20]
	0x03AD1FD0 STP X20, X19, [X31 + 0x30]
	0x03AD1FD4 ADRP X21, 0x911000
	0x03AD1FD8 ADRP X22, 0x622000
	0x03AD1FDC LDRB W8, [X21 + 0x4F4]
	0x03AD1FE0 LDR X22, [X22 + 0x598]
	0x03AD1FE4 MOV W19, W1
	0x03AD1FE8 MOV X20, X0
	0x03AD1FEC TBNZ X8, 0x0, 0x3AD2004
	0x03AD1FF0 ADRP X0, 0x622000
	0x03AD1FF4 LDR X0, [X0 + 0x598]
	0x03AD1FF8 BL 0x1C16CF4
	0x03AD1FFC MOVZ W8, 0x1
	0x03AD2000 STRB W8, [X21 + 0x4F4]
	0x03AD2004 LDR X0, [X22]
	0x03AD2008 LDR X21, [X20 + 0x6F0]
	0x03AD200C LDR W8, [X0 + 0xE0]
	0x03AD2010 CBNZ W8, 0x3AD2018
	0x03AD2014 BL 0x1C16DFC
	0x03AD2018 MOV X0, X21
	0x03AD201C MOV X1, X31
	0x03AD2020 MOV X2, X31
	0x03AD2024 BL 0x3C354F8
	0x03AD2028 TBZ X0, 0x0, 0x3AD2050
	0x03AD202C LDR X0, [X20 + 0x6F0]
	0x03AD2030 TBZ X19, 0x0, 0x3AD2040
	0x03AD2034 CBZ X0, 0x3AD2168
	0x03AD2038 LDR X1, [X20 + 0x3A0]
	0x03AD203C B 0x3AD2048
	0x03AD2040 CBZ X0, 0x3AD2168
	0x03AD2044 MOV X1, X31
	0x03AD2048 MOV X2, X31
	0x03AD204C BL 0x3C16D40
	0x03AD2050 LDR X8, [X20 + 0x708]
	0x03AD2054 CBZ X8, 0x3AD2168
	0x03AD2058 MOVZ W23, 0x5
	0x03AD205C LDR W9, [X8 + 0x18]
	0x03AD2060 SUB X24, X23, 0x4
	0x03AD2064 CMP W24, W9
	0x03AD2068 B.GE 0x3AD216C
	0x03AD206C CMP W24, W9
	0x03AD2070 B.CS 0x3AD2180
	0x03AD2074 LDR X0, [X22]
	0x03AD2078 LDR X21, [X8, X23, LSL #3]
	0x03AD207C LDR W9, [X0 + 0xE0]
	0x03AD2080 CBNZ W9, 0x3AD2088
	0x03AD2084 BL 0x1C16DFC
	0x03AD2088 MOV X0, X21
	0x03AD208C MOV X1, X31
	0x03AD2090 MOV X2, X31
	0x03AD2094 BL 0x3C354F8
	0x03AD2098 TBZ X0, 0x0, 0x3AD216C
	0x03AD209C LDR X8, [X20 + 0x708]
	0x03AD20A0 CBZ X8, 0x3AD2168
	0x03AD20A4 LDR W9, [X8 + 0x18]
	0x03AD20A8 CMP W24, W9
	0x03AD20AC B.CS 0x3AD2180
	0x03AD20B0 LDR X0, [X8, X23, LSL #3]
	0x03AD20B4 CBZ X0, 0x3AD2168
	0x03AD20B8 MOV X1, X31
	0x03AD20BC BL 0x3B19998
	0x03AD20C0 LDR X8, [X22]
	0x03AD20C4 MOV X21, X0
	0x03AD20C8 LDR W9, [X8 + 0xE0]
	0x03AD20CC CBNZ W9, 0x3AD20D8
	0x03AD20D0 MOV X0, X8
	0x03AD20D4 BL 0x1C16DFC
	0x03AD20D8 MOV X0, X21
	0x03AD20DC MOV X1, X31
	0x03AD20E0 MOV X2, X31
	0x03AD20E4 BL 0x3C354F8
	0x03AD20E8 TBZ X0, 0x0, 0x3AD215C
	0x03AD20EC LDR X8, [X20 + 0x708]
	0x03AD20F0 CBZ X8, 0x3AD2168
	0x03AD20F4 LDR W9, [X8 + 0x18]
	0x03AD20F8 CMP W24, W9
	0x03AD20FC B.CS 0x3AD2180
	0x03AD2100 LDR X0, [X8, X23, LSL #3]
	0x03AD2104 CBZ X0, 0x3AD2168
	0x03AD2108 MOV X1, X31
	0x03AD210C BL 0x3B19998
	0x03AD2110 MOV X21, X0
	0x03AD2114 TBZ X19, 0x0, 0x3AD2148
	0x03AD2118 LDR X8, [X20 + 0x708]
	0x03AD211C CBZ X8, 0x3AD2168
	0x03AD2120 LDR W9, [X8 + 0x18]
	0x03AD2124 CMP W24, W9
	0x03AD2128 B.CS 0x3AD2180
	0x03AD212C LDR X0, [X8, X23, LSL #3]
	0x03AD2130 CBZ X0, 0x3AD2168
	0x03AD2134 MOV X1, X31
	0x03AD2138 BL 0x3B19A94
	0x03AD213C CBZ X21, 0x3AD2168
	0x03AD2140 MOV X1, X0
	0x03AD2144 B 0x3AD2150
	0x03AD2148 CBZ X21, 0x3AD2168
	0x03AD214C MOV X1, X31
	0x03AD2150 MOV X0, X21
	0x03AD2154 MOV X2, X31
	0x03AD2158 BL 0x3C16D40
	0x03AD215C LDR X8, [X20 + 0x708]
	0x03AD2160 ADD X23, X23, 0x1
	0x03AD2164 CBNZ X8, 0x3AD205C
	0x03AD2168 BL 0x1C16F20
	0x03AD216C LDP X20, X19, [X31 + 0x30]
	0x03AD2170 LDP X22, X21, [X31 + 0x20]
	0x03AD2174 LDP X24, X23, [X31 + 0x10]
	0x03AD2178 LDR X30, [X31], #0x40
	0x03AD217C RET
	0x03AD2180 BL 0x1C16F28
	0x03AD2184 STR X30, [X31 - 0x40]!
	0x03AD2188 STP X24, X23, [X31 + 0x10]
	0x03AD218C STP X22, X21, [X31 + 0x20]
	0x03AD2190 STP X20, X19, [X31 + 0x30]
	0x03AD2194 ADRP X21, 0x910000
	0x03AD2198 LDRB W8, [X21 + 0x4F5]
	0x03AD219C MOV W19, W1
	0x03AD21A0 MOV X20, X0
	0x03AD21A4 TBNZ X8, 0x0, 0x3AD21BC
	0x03AD21A8 ADRP X0, 0x621000
	0x03AD21AC LDR X0, [X0 + 0x598]
	0x03AD21B0 BL 0x1C16CF4
	0x03AD21B4 MOVZ W8, 0x1
	0x03AD21B8 STRB W8, [X21 + 0x4F5]
	0x03AD21BC LDR X8, [X20 + 0x708]
	0x03AD21C0 CBZ X8, 0x3AD2278
	0x03AD21C4 ADRP X22, 0x621000
	0x03AD21C8 LDR X22, [X22 + 0x598]
	0x03AD21CC MOVZ W23, 0x5
	0x03AD21D0 LDR W9, [X8 + 0x18]
	0x03AD21D4 SUB X24, X23, 0x4
	0x03AD21D8 CMP W24, W9
	0x03AD21DC B.GE 0x3AD227C
	0x03AD21E0 CMP W24, W9
	0x03AD21E4 B.CS 0x3AD2290
	0x03AD21E8 LDR X0, [X22]
	0x03AD21EC LDR X21, [X8, X23, LSL #3]
	0x03AD21F0 LDR W9, [X0 + 0xE0]
	0x03AD21F4 CBNZ W9, 0x3AD21FC
	0x03AD21F8 BL 0x1C16DFC
	0x03AD21FC MOV X0, X21
	0x03AD2200 MOV X1, X31
	0x03AD2204 MOV X2, X31
	0x03AD2208 BL 0x3C354F8
	0x03AD220C TBZ X0, 0x0, 0x3AD227C
	0x03AD2210 LDR X8, [X20 + 0x708]
	0x03AD2214 CBZ X8, 0x3AD2278
	0x03AD2218 LDR W9, [X8 + 0x18]
	0x03AD221C CMP W24, W9
	0x03AD2220 B.CS 0x3AD2290
	0x03AD2224 LDR X0, [X8, X23, LSL #3]
	0x03AD2228 CBZ X0, 0x3AD2278
	0x03AD222C MOV X1, X31
	0x03AD2230 BL 0x3C323D4
	0x03AD2234 AND W8, W0, 0x1
	0x03AD2238 AND W9, W19, 0x1
	0x03AD223C CMP W8, W9
	0x03AD2240 B.EQ 0x3AD226C
	0x03AD2244 LDR X8, [X20 + 0x708]
	0x03AD2248 CBZ X8, 0x3AD2278
	0x03AD224C LDR W9, [X8 + 0x18]
	0x03AD2250 CMP W24, W9
	0x03AD2254 B.CS 0x3AD2290
	0x03AD2258 LDR X0, [X8, X23, LSL #3]
	0x03AD225C CBZ X0, 0x3AD2278
	0x03AD2260 AND W1, W19, 0x1
	0x03AD2264 MOV X2, X31
	0x03AD2268 BL 0x3C32410
	0x03AD226C LDR X8, [X20 + 0x708]
	0x03AD2270 ADD X23, X23, 0x1
	0x03AD2274 CBNZ X8, 0x3AD21D0
	0x03AD2278 BL 0x1C16F20
	0x03AD227C LDP X20, X19, [X31 + 0x30]
	0x03AD2280 LDP X22, X21, [X31 + 0x20]
	0x03AD2284 LDP X24, X23, [X31 + 0x10]
	0x03AD2288 LDR X30, [X31], #0x40
	0x03AD228C RET
	0x03AD2290 BL 0x1C16F28
	0x03AD2294 STP X30, X23, [X31 - 0x30]!
	0x03AD2298 STP X22, X21, [X31 + 0x10]
	0x03AD229C STP X20, X19, [X31 + 0x20]
	0x03AD22A0 ADRP X20, 0x910000
	0x03AD22A4 LDRB W8, [X20 + 0x4F7]
	0x03AD22A8 MOV X19, X0
	0x03AD22AC TBNZ X8, 0x0, 0x3AD22C4
	0x03AD22B0 ADRP X0, 0x621000
	0x03AD22B4 LDR X0, [X0 + 0x598]
	0x03AD22B8 BL 0x1C16CF4
	0x03AD22BC MOVZ W8, 0x1
	0x03AD22C0 STRB W8, [X20 + 0x4F7]
	0x03AD22C4 LDR X8, [X19 + 0x708]
	0x03AD22C8 CBZ X8, 0x3AD2358
	0x03AD22CC ADRP X21, 0x621000
	0x03AD22D0 LDR X21, [X21 + 0x598]
	0x03AD22D4 MOVZ W22, 0x5
	0x03AD22D8 LDR W9, [X8 + 0x18]
	0x03AD22DC SUB X23, X22, 0x4
	0x03AD22E0 CMP X23, W9, SXTW
	0x03AD22E4 B.GE 0x3AD235C
	0x03AD22E8 CMP X23, X9
	0x03AD22EC B.CS 0x3AD236C
	0x03AD22F0 LDR X0, [X21]
	0x03AD22F4 LDR X20, [X8, X22, LSL #3]
	0x03AD22F8 LDR W9, [X0 + 0xE0]
	0x03AD22FC CBNZ W9, 0x3AD2304
	0x03AD2300 BL 0x1C16DFC
	0x03AD2304 MOV X0, X20
	0x03AD2308 MOV X1, X31
	0x03AD230C MOV X2, X31
	0x03AD2310 BL 0x3C354F8
	0x03AD2314 TBZ X0, 0x0, 0x3AD235C
	0x03AD2318 LDR X8, [X19 + 0x708]
	0x03AD231C CBZ X8, 0x3AD2358
	0x03AD2320 LDR W9, [X8 + 0x18]
	0x03AD2324 CMP X23, X9
	0x03AD2328 B.CS 0x3AD236C
	0x03AD232C LDR X0, [X21]
	0x03AD2330 LDR X20, [X8, X22, LSL #3]
	0x03AD2334 LDR W9, [X0 + 0xE0]
	0x03AD2338 CBNZ W9, 0x3AD2340
	0x03AD233C BL 0x1C16DFC
	0x03AD2340 MOV X0, X20
	0x03AD2344 MOV X1, X31
	0x03AD2348 BL 0x3C39564
	0x03AD234C LDR X8, [X19 + 0x708]
	0x03AD2350 ADD X22, X22, 0x1
	0x03AD2354 CBNZ X8, 0x3AD22D8
	0x03AD2358 BL 0x1C16F20
	0x03AD235C LDP X20, X19, [X31 + 0x20]
	0x03AD2360 LDP X22, X21, [X31 + 0x10]
	0x03AD2364 LDP X30, X23, [X31], #0x30
	0x03AD2368 RET
	0x03AD236C BL 0x1C16F28
	0x03AD2370 SUB X31, X31, 0xA0
	0x03AD2374 STP D11, D10, [X31 + 0x40]
	0x03AD2378 STP D9, D8, [X31 + 0x50]
	0x03AD237C STR X30, [X31 + 0x60]
	0x03AD2380 STP X24, X23, [X31 + 0x70]
	0x03AD2384 STP X22, X21, [X31 + 0x80]
	0x03AD2388 STP X20, X19, [X31 + 0x90]
	0x03AD238C ADRP X21, 0x910000
	0x03AD2390 LDRB W9, [X21 + 0x4FA]
	0x03AD2394 MOV X20, X0
	0x03AD2398 MOV X19, X8
	0x03AD239C TBNZ X9, 0x0, 0x3AD23B4
	0x03AD23A0 ADRP X0, 0x621000
	0x03AD23A4 LDR X0, [X0 + 0x598]
	0x03AD23A8 BL 0x1C16CF4
	0x03AD23AC MOVZ W8, 0x1
	0x03AD23B0 STRB W8, [X21 + 0x4FA]
	0x03AD23B4 LDR X0, [X20 + 0x3A0]
	0x03AD23B8 CBZ X0, 0x3AD24D8
	0x03AD23BC ADD X8, X31, 0x8
	0x03AD23C0 MOV X1, X31
	0x03AD23C4 BL 0x3C17768
	0x03AD23C8 LDP S0, S1, [X31 + 0x8]
	0x03AD23CC LDP S2, S3, [X31 + 0x10]
	0x03AD23D0 LDP S4, S5, [X31 + 0x18]
	0x03AD23D4 FSUB S6, S0, S3
	0x03AD23D8 FSUB S7, S1, S4
	0x03AD23DC FSUB S16, S2, S5
	0x03AD23E0 FADD S0, S0, S3
	0x03AD23E4 FADD S1, S1, S4
	0x03AD23E8 FADD S2, S2, S5
	0x03AD23EC STP S6, S7, [X31 + 0x30]
	0x03AD23F0 STR S16, [X31 + 0x38]
	0x03AD23F4 STP S0, S1, [X31 + 0x20]
	0x03AD23F8 STR S2, [X31 + 0x28]
	0x03AD23FC LDR X8, [X20 + 0x708]
	0x03AD2400 CBZ X8, 0x3AD24D8
	0x03AD2404 ADRP X22, 0x621000
	0x03AD2408 LDP S11, S10, [X31 + 0x30]
	0x03AD240C LDP S9, S8, [X31 + 0x20]
	0x03AD2410 LDR X22, [X22 + 0x598]
	0x03AD2414 MOVZ W23, 0x5
	0x03AD2418 LDR W9, [X8 + 0x18]
	0x03AD241C SUB X24, X23, 0x4
	0x03AD2420 CMP W24, W9
	0x03AD2424 B.GE 0x3AD24DC
	0x03AD2428 CMP W24, W9
	0x03AD242C B.CS 0x3AD2554
	0x03AD2430 LDR X0, [X22]
	0x03AD2434 LDR X21, [X8, X23, LSL #3]
	0x03AD2438 LDR W9, [X0 + 0xE0]
	0x03AD243C CBNZ W9, 0x3AD2444
	0x03AD2440 BL 0x1C16DFC
	0x03AD2444 MOV X0, X21
	0x03AD2448 MOV X1, X31
	0x03AD244C MOV X2, X31
	0x03AD2450 BL 0x3C354F8
	0x03AD2454 TBZ X0, 0x0, 0x3AD24DC
	0x03AD2458 LDR X8, [X20 + 0x708]
	0x03AD245C CBZ X8, 0x3AD2548
	0x03AD2460 LDR W9, [X8 + 0x18]
	0x03AD2464 CMP W24, W9
	0x03AD2468 B.CS 0x3AD2554
	0x03AD246C LDR X0, [X8, X23, LSL #3]
	0x03AD2470 CBZ X0, 0x3AD2548
	0x03AD2474 MOV X1, X31
	0x03AD2478 BL 0x3B19A94
	0x03AD247C CBZ X0, 0x3AD2548
	0x03AD2480 ADD X8, X31, 0x8
	0x03AD2484 MOV X1, X31
	0x03AD2488 BL 0x3C17768
	0x03AD248C LDP S0, S1, [X31 + 0x8]
	0x03AD2490 LDP S2, S3, [X31 + 0x14]
	0x03AD2494 LDR X8, [X20 + 0x708]
	0x03AD2498 ADD X23, X23, 0x1
	0x03AD249C FSUB S4, S0, S2
	0x03AD24A0 FSUB S5, S1, S3
	0x03AD24A4 FCMP S11, S4
	0x03AD24A8 FADD S0, S0, S2
	0x03AD24AC FCSEL S11, S11, S4, MI
	0x03AD24B0 FCMP S10, S5
	0x03AD24B4 FADD S1, S1, S3
	0x03AD24B8 FCSEL S10, S10, S5, MI
	0x03AD24BC FCMP S9, S0
	0x03AD24C0 FCSEL S9, S9, S0, GT
	0x03AD24C4 FCMP S8, S1
	0x03AD24C8 FCSEL S8, S8, S1, GT
	0x03AD24CC CBNZ X8, 0x3AD2418
	0x03AD24D0 STP S11, S10, [X31 + 0x30]
	0x03AD24D4 STP S9, S8, [X31 + 0x20]
	0x03AD24D8 BL 0x1C16F20
	0x03AD24DC LDR V0, [X31 + 0x38]
	0x03AD24E0 LDR V1, [X31 + 0x28]
	0x03AD24E4 FADD S2, S11, S9
	0x03AD24E8 FADD S3, S10, S8
	0x03AD24EC FSUB S4, S9, S11
	0x03AD24F0 FMOV S5, 0.5
	0x03AD24F4 FSUB S6, S8, S10
	0x03AD24F8 FADD S0, S0, S1
	0x03AD24FC FMUL S2, S2, S5
	0x03AD2500 FMUL S3, S3, S5
	0x03AD2504 FMUL S4, S4, S5
	0x03AD2508 FMUL S6, S6, S5
	0x03AD250C FMUL S0, S0, S5
	0x03AD2510 STP S11, S10, [X31 + 0x30]
	0x03AD2514 STP S9, S8, [X31 + 0x20]
	0x03AD2518 STP S2, S3, [X19]
	0x03AD251C STP S4, S6, [X19 + 0xC]
	0x03AD2520 STR S0, [X19 + 0x8]
	0x03AD2524 STR W31, [X19 + 0x14]
	0x03AD2528 LDP X20, X19, [X31 + 0x90]
	0x03AD252C LDP X22, X21, [X31 + 0x80]
	0x03AD2530 LDP X24, X23, [X31 + 0x70]
	0x03AD2534 LDR X30, [X31 + 0x60]
	0x03AD2538 LDP D9, D8, [X31 + 0x50]
	0x03AD253C LDP D11, D10, [X31 + 0x40]
	0x03AD2540 ADD X31, X31, 0xA0
	0x03AD2544 RET
	0x03AD2548 STP S11, S10, [X31 + 0x30]
	0x03AD254C STP S9, S8, [X31 + 0x20]
	0x03AD2550 BL 0x1C16F20
	0x03AD2554 STP S11, S10, [X31 + 0x30]
	0x03AD2558 STP S9, S8, [X31 + 0x20]
	0x03AD255C BL 0x1C16F28
	0x03AD2560 STP X30, X23, [X31 - 0x30]!
	0x03AD2564 STP X22, X21, [X31 + 0x10]
	0x03AD2568 STP X20, X19, [X31 + 0x20]
	0x03AD256C ADRP X23, 0x910000
	0x03AD2570 ADRP X22, 0x686000
	0x03AD2574 ADRP X21, 0x623000
	0x03AD2578 ADRP X20, 0x686000
	0x03AD257C LDRB W8, [X23 + 0x4FB]
	0x03AD2580 LDR X22, [X22 + 0x668]
	0x03AD2584 LDR X21, [X21 + 0x9B0]
	0x03AD2588 LDR X20, [X20 + 0x3E8]
	0x03AD258C MOV X19, X0
	0x03AD2590 TBNZ X8, 0x0, 0x3AD25C0
	0x03AD2594 ADRP X0, 0x686000
	0x03AD2598 LDR X0, [X0 + 0x668]
	0x03AD259C BL 0x1C16CF4
	0x03AD25A0 ADRP X0, 0x686000
	0x03AD25A4 LDR X0, [X0 + 0x3E8]
	0x03AD25A8 BL 0x1C16CF4
	0x03AD25AC ADRP X0, 0x623000
	0x03AD25B0 LDR X0, [X0 + 0x9B0]
	0x03AD25B4 BL 0x1C16CF4
	0x03AD25B8 MOVZ W8, 0x1
	0x03AD25BC STRB W8, [X23 + 0x4FB]
	0x03AD25C0 ADRP X8, 0xFFFFFFFFFD01C000
	0x03AD25C4 LDR V0, [X8 + 0x450]
	0x03AD25C8 MOVZ W8, 0xBF800000
	0x03AD25CC STR W8, [X19 + 0x6E4]
	0x03AD25D0 ADD X8, X19, 0x6FC
	0x03AD25D4 STR D0, [X8]
	0x03AD25D8 LDR X0, [X22]
	0x03AD25DC MOVZ W1, 0x8
	0x03AD25E0 BL 0x1C16D6C
	0x03AD25E4 STR X0, [X19 + 0x708]
	0x03AD25E8 LDR X0, [X21]
	0x03AD25EC MOVZ W1, 0x4
	0x03AD25F0 BL 0x1C16D6C
	0x03AD25F4 STR X0, [X19 + 0x758]
	0x03AD25F8 LDR X0, [X20]
	0x03AD25FC LDR W8, [X0 + 0xE0]
	0x03AD2600 CBNZ W8, 0x3AD2608
	0x03AD2604 BL 0x1C16DFC
	0x03AD2608 MOV X0, X19
	0x03AD260C LDP X20, X19, [X31 + 0x20]
	0x03AD2610 LDP X22, X21, [X31 + 0x10]
	0x03AD2614 MOV X1, X31
	0x03AD2618 LDP X30, X23, [X31], #0x30
	0x03AD261C B 0x3B0C400
	0x03AD2620 STP X29, X30, [X31 - 0x60]!
	0x03AD2624 STP X28, X27, [X31 + 0x10]
	0x03AD2628 STP X26, X25, [X31 + 0x20]
	0x03AD262C STP X24, X23, [X31 + 0x30]
	0x03AD2630 STP X22, X21, [X31 + 0x40]
	0x03AD2634 STP X20, X19, [X31 + 0x50]
	0x03AD2638 ADRP X29, 0x910000
	0x03AD263C ADRP X20, 0x686000
	0x03AD2640 ADRP X19, 0x686000
	0x03AD2644 ADRP X28, 0x686000
	0x03AD2648 ADRP X27, 0x686000
	0x03AD264C ADRP X26, 0x686000
	0x03AD2650 ADRP X25, 0x686000
	0x03AD2654 ADRP X24, 0x686000
	0x03AD2658 ADRP X23, 0x686000
	0x03AD265C ADRP X22, 0x686000
	0x03AD2660 ADRP X21, 0x686000
	0x03AD2664 LDR X20, [X20 + 0x670]
	0x03AD2668 LDR X19, [X19 + 0x678]
	0x03AD266C LDR X28, [X28 + 0x680]
	0x03AD2670 LDR X27, [X27 + 0x688]
	0x03AD2674 LDR X26, [X26 + 0x690]
	0x03AD2678 LDR X25, [X25 + 0x698]
	0x03AD267C LDR X24, [X24 + 0x6A0]
	0x03AD2680 LDR X23, [X23 + 0x6A8]
	0x03AD2684 LDR X22, [X22 + 0x6B0]
	0x03AD2688 LDR X21, [X21 + 0x6B8]
	0x03AD268C LDRB W8, [X29 + 0x4FC]
	0x03AD2690 TBNZ X8, 0x0, 0x3AD2798
	0x03AD2694 ADRP X0, 0x686000
	0x03AD2698 LDR X0, [X0 + 0x678]
	0x03AD269C BL 0x1C16CF4
	0x03AD26A0 ADRP X0, 0x686000
	0x03AD26A4 LDR X0, [X0 + 0x6B0]
	0x03AD26A8 BL 0x1C16CF4
	0x03AD26AC ADRP X0, 0x686000
	0x03AD26B0 LDR X0, [X0 + 0x6C0]
	0x03AD26B4 BL 0x1C16CF4
	0x03AD26B8 ADRP X0, 0x686000
	0x03AD26BC LDR X0, [X0 + 0x6C8]
	0x03AD26C0 BL 0x1C16CF4
	0x03AD26C4 ADRP X0, 0x686000
	0x03AD26C8 LDR X0, [X0 + 0x690]
	0x03AD26CC BL 0x1C16CF4
	0x03AD26D0 ADRP X0, 0x686000
	0x03AD26D4 LDR X0, [X0 + 0x6D0]
	0x03AD26D8 BL 0x1C16CF4
	0x03AD26DC ADRP X0, 0x686000
	0x03AD26E0 LDR X0, [X0 + 0x688]
	0x03AD26E4 BL 0x1C16CF4
	0x03AD26E8 ADRP X0, 0x686000
	0x03AD26EC LDR X0, [X0 + 0x670]
	0x03AD26F0 BL 0x1C16CF4
	0x03AD26F4 ADRP X0, 0x686000
	0x03AD26F8 LDR X0, [X0 + 0x6B8]
	0x03AD26FC BL 0x1C16CF4
	0x03AD2700 ADRP X0, 0x686000
	0x03AD2704 LDR X0, [X0 + 0x6D8]
	0x03AD2708 BL 0x1C16CF4
	0x03AD270C ADRP X0, 0x686000
	0x03AD2710 LDR X0, [X0 + 0x6E0]
	0x03AD2714 BL 0x1C16CF4
	0x03AD2718 ADRP X0, 0x686000
	0x03AD271C LDR X0, [X0 + 0x6A0]
	0x03AD2720 BL 0x1C16CF4
	0x03AD2724 ADRP X0, 0x686000
	0x03AD2728 LDR X0, [X0 + 0x6E8]
	0x03AD272C BL 0x1C16CF4
	0x03AD2730 ADRP X0, 0x686000
	0x03AD2734 LDR X0, [X0 + 0x6F0]
	0x03AD2738 BL 0x1C16CF4
	0x03AD273C ADRP X0, 0x686000
	0x03AD2740 LDR X0, [X0 + 0x6A8]
	0x03AD2744 BL 0x1C16CF4
	0x03AD2748 ADRP X0, 0x686000
	0x03AD274C LDR X0, [X0 + 0x6F8]
	0x03AD2750 BL 0x1C16CF4
	0x03AD2754 ADRP X0, 0x686000
	0x03AD2758 LDR X0, [X0 + 0x680]
	0x03AD275C BL 0x1C16CF4
	0x03AD2760 ADRP X0, 0x686000
	0x03AD2764 LDR X0, [X0 + 0x700]
	0x03AD2768 BL 0x1C16CF4
	0x03AD276C ADRP X0, 0x686000
	0x03AD2770 LDR X0, [X0 + 0x708]
	0x03AD2774 BL 0x1C16CF4
	0x03AD2778 ADRP X0, 0x686000
	0x03AD277C LDR X0, [X0 + 0x710]
	0x03AD2780 BL 0x1C16CF4
	0x03AD2784 ADRP X0, 0x686000
	0x03AD2788 LDR X0, [X0 + 0x698]
	0x03AD278C BL 0x1C16CF4
	0x03AD2790 MOVZ W8, 0x1
	0x03AD2794 STRB W8, [X29 + 0x4FC]
	0x03AD2798 LDR X0, [X20]
	0x03AD279C MOVZ W1, 0x1
	0x03AD27A0 MOV W2, W31
	0x03AD27A4 MOV W3, W31
	0x03AD27A8 MOV X4, X31
	0x03AD27AC BL 0x3BFE7FC
	0x03AD27B0 LDR X8, [X19]
	0x03AD27B4 MOVZ W1, 0x1
	0x03AD27B8 MOV W2, W31
	0x03AD27BC MOV W3, W31
	0x03AD27C0 LDR X8, [X8 + 0xB8]
	0x03AD27C4 MOV X4, X31
	0x03AD27C8 STR X0, [X8]
	0x03AD27CC LDR X0, [X28]
	0x03AD27D0 BL 0x3BFE7FC
	0x03AD27D4 LDR X8, [X19]
	0x03AD27D8 MOVZ W1, 0x1
	0x03AD27DC MOV W2, W31
	0x03AD27E0 MOV W3, W31
	0x03AD27E4 LDR X8, [X8 + 0xB8]
	0x03AD27E8 MOV X4, X31
	0x03AD27EC STR X0, [X8 + 0x8]
	0x03AD27F0 LDR X0, [X27]
	0x03AD27F4 BL 0x3BFE7FC
	0x03AD27F8 LDR X8, [X19]
	0x03AD27FC MOVZ W1, 0x1
	0x03AD2800 MOV W2, W31
	0x03AD2804 MOV W3, W31
	0x03AD2808 LDR X8, [X8 + 0xB8]
	0x03AD280C MOV X4, X31
	0x03AD2810 STR X0, [X8 + 0x10]
	0x03AD2814 LDR X0, [X26]
	0x03AD2818 BL 0x3BFE7FC
	0x03AD281C LDR X8, [X19]
	0x03AD2820 MOVZ W1, 0x1
	0x03AD2824 MOV W2, W31
	0x03AD2828 MOV W3, W31
	0x03AD282C LDR X8, [X8 + 0xB8]
	0x03AD2830 MOV X4, X31
	0x03AD2834 STR X0, [X8 + 0x18]
	0x03AD2838 LDR X0, [X25]
	0x03AD283C BL 0x3BFE7FC
	0x03AD2840 LDR X8, [X19]
	0x03AD2844 MOVZ W1, 0x1
	0x03AD2848 MOV W2, W31
	0x03AD284C MOV W3, W31
	0x03AD2850 LDR X8, [X8 + 0xB8]
	0x03AD2854 MOV X4, X31
	0x03AD2858 STR X0, [X8 + 0x20]
	0x03AD285C LDR X0, [X24]
	0x03AD2860 BL 0x3BFE7FC
	0x03AD2864 LDR X8, [X19]
	0x03AD2868 MOVZ W1, 0x1
	0x03AD286C MOV W2, W31
	0x03AD2870 MOV W3, W31
	0x03AD2874 LDR X8, [X8 + 0xB8]
	0x03AD2878 MOV X4, X31
	0x03AD287C STR X0, [X8 + 0x28]
	0x03AD2880 LDR X0, [X23]
	0x03AD2884 BL 0x3BFE7FC
	0x03AD2888 LDR X8, [X19]
	0x03AD288C MOVZ W1, 0x1
	0x03AD2890 MOV W2, W31
	0x03AD2894 MOV W3, W31
	0x03AD2898 LDR X8, [X8 + 0xB8]
	0x03AD289C MOV X4, X31
	0x03AD28A0 STR X0, [X8 + 0x30]
	0x03AD28A4 LDR X0, [X22]
	0x03AD28A8 BL 0x3BFE7FC
	0x03AD28AC LDR X8, [X19]
	0x03AD28B0 MOVZ W1, 0x1
	0x03AD28B4 MOV W2, W31
	0x03AD28B8 MOV W3, W31
	0x03AD28BC LDR X8, [X8 + 0xB8]
	0x03AD28C0 MOV X4, X31
	0x03AD28C4 STR X0, [X8 + 0x38]
	0x03AD28C8 LDR X0, [X21]
	0x03AD28CC BL 0x3BFE7FC
	0x03AD28D0 LDR X8, [X19]
	0x03AD28D4 MOVZ W1, 0x1
	0x03AD28D8 MOV W2, W31
	0x03AD28DC MOV W3, W31
	0x03AD28E0 LDR X8, [X8 + 0xB8]
	0x03AD28E4 MOV X4, X31
	0x03AD28E8 STR X0, [X8 + 0x40]
	0x03AD28EC ADRP X8, 0x686000
	0x03AD28F0 LDR X8, [X8 + 0x708]
	0x03AD28F4 LDR X0, [X8]
	0x03AD28F8 BL 0x3BFE7FC
	0x03AD28FC LDR X8, [X19]
	0x03AD2900 MOVZ W1, 0x1
	0x03AD2904 MOV W2, W31
	0x03AD2908 MOV W3, W31
	0x03AD290C LDR X8, [X8 + 0xB8]
	0x03AD2910 MOV X4, X31
	0x03AD2914 STR X0, [X8 + 0x48]
	0x03AD2918 ADRP X8, 0x686000
	0x03AD291C LDR X8, [X8 + 0x6E8]
	0x03AD2920 LDR X0, [X8]
	0x03AD2924 BL 0x3BFE7FC
	0x03AD2928 LDR X8, [X19]
	0x03AD292C MOVZ W1, 0x1
	0x03AD2930 MOV W2, W31
	0x03AD2934 MOV W3, W31
	0x03AD2938 LDR X8, [X8 + 0xB8]
	0x03AD293C MOV X4, X31
	0x03AD2940 STR X0, [X8 + 0x50]
	0x03AD2944 ADRP X8, 0x686000
	0x03AD2948 LDR X8, [X8 + 0x700]
	0x03AD294C LDR X0, [X8]
	0x03AD2950 BL 0x3BFE7FC
	0x03AD2954 LDR X8, [X19]
	0x03AD2958 MOVZ W1, 0x1
	0x03AD295C MOV W2, W31
	0x03AD2960 MOV W3, W31
	0x03AD2964 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 416
	014 Move X21, 0x913000
	015 Move W8, [X21+1263]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {108}
	022 Move X0, 0x626000
	023 Move X0, [X0+368]
	024 Call 0x1C17CF4
	025 Move X0, 0x624000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0x64E000
	029 Move X0, [X0+2256]
	030 Call 0x1C17CF4
	031 Move X0, 0x67F000
	032 Move X0, [X0+3448]
	033 Call 0x1C17CF4
	034 Move X0, 0x624000
	035 Move X0, [X0+1880]
	036 Call 0x1C17CF4
	037 Move X0, 0x689000
	038 Move X0, [X0+1552]
	039 Call 0x1C17CF4
	040 Move X0, 0x689000
	041 Move X0, [X0+816]
	042 Call 0x1C17CF4
	043 Move X0, 0x628000
	044 Move X0, [X0+3232]
	045 Call 0x1C17CF4
	046 Move X0, 0x624000
	047 Move X0, [X0+2512]
	048 Call 0x1C17CF4
	049 Move X0, 0x624000
	050 Move X0, [X0+1432]
	051 Call 0x1C17CF4
	052 Move X0, 0x626000
	053 Move X0, [X0+632]
	054 Call 0x1C17CF4
	055 Move X0, 0x689000
	056 Move X0, [X0+1560]
	057 Call 0x1C17CF4
	058 Move X0, 0x689000
	059 Move X0, [X0+1400]
	060 Call 0x1C17CF4
	061 Move X0, 0x689000
	062 Move X0, [X0+1568]
	063 Call 0x1C17CF4
	064 Move X0, 0x689000
	065 Move X0, [X0+840]
	066 Call 0x1C17CF4
	067 Move X0, 0x689000
	068 Move X0, [X0+1576]
	069 Call 0x1C17CF4
	070 Move X0, 0x689000
	071 Move X0, [X0+1584]
	072 Call 0x1C17CF4
	073 Move X0, 0x689000
	074 Move X0, [X0+1592]
	075 Call 0x1C17CF4
	076 Move X0, 0x689000
	077 Move X0, [X0+1600]
	078 Call 0x1C17CF4
	079 Move X0, 0x689000
	080 Move X0, [X0+872]
	081 Call 0x1C17CF4
	082 Move X0, 0x689000
	083 Move X0, [X0+944]
	084 Call 0x1C17CF4
	085 Move X0, 0x689000
	086 Move X0, [X0+968]
	087 Call 0x1C17CF4
	088 Move X0, 0x689000
	089 Move X0, [X0+1000]
	090 Call 0x1C17CF4
	091 Move X0, 0x62C000
	092 Move X0, [X0+1824]
	093 Call 0x1C17CF4
	094 Move X0, 0x689000
	095 Move X0, [X0+1608]
	096 Call 0x1C17CF4
	097 Move X0, 0x689000
	098 Move X0, [X0+1616]
	099 Call 0x1C17CF4
	100 Move X0, 0x689000
	101 Move X0, [X0+1624]
	102 Call 0x1C17CF4
	103 Move X0, 0x689000
	104 Move X0, [X0+1632]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X21+1263], W8
	108 Move X21, 0x689000
	109 Move X27, 0x689000
	110 Move X21, [X21+968]
	111 Move X27, [X27+1000]
	112 Move [X31+412], W31
	113 Move [X31+408], W31
	114 Move W8, [X19+600]
	115 Add X0, X19, 608
	116 Move X1, X31
	117 Move [X19+1168], W31
	118 Move [X19+618], W31
	119 NotImplemented "Instruction STRH not yet implemented."
	120 Move [X19+604], W8
	121 Call TMP_FontStyleStack.Clear, X0
	122 Move W8, [X19+604]
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {128}
	127 Move W1, [X19+528]
	128 Move W1, 700
	129 Move [X19+532], W1
	130 Move X2, [X21]
	131 Move X21, 0x688000
	132 Move X21, [X21+944]
	133 Add X0, X19, 536
	134 Call TMP_TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	135 Move X2, [X19+248]
	136 Move X4, [X19+272]
	137 Move [X19+288], W31
	138 Move [X19+256], X2
	139 Move [X19+280], X4
	140 Move X0, [X27]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfEqual {145}
	144 Move W1, W31
	145 Call 0x1C17DFC
	146 Move W1, [X19+288]
	147 Move X2, [X19+256]
	148 Move X4, [X19+280]
	149 Move V0, [X19+1560]
	150 NotImplemented "Instruction MOVI not yet implemented."
	151 Add X0, X31, 352
	152 Move X3, X31
	153 Move [X31+400], X31
	154 Move [X31+368], V1
	155 Move [X31+376], V1
	156 Move [X31+22], V1
	157 Call MaterialReference..ctor, X0, X1, X2, X3, X4, V0
	158 Move X8, [X27]
	159 Move X2, [X21]
	160 Move V0, [X31+352]
	161 Move V1, [X31+368]
	162 Move V2, [X31+24]
	163 Move X8, [X8+184]
	164 Move X9, [X31+400]
	165 Add X1, X31, 208
	166 Move [X31+208], V0
	167 Move [X31+216], V1
	168 Add X0, X8, 16
	169 Move [X31+15], V2
	170 Move [X31+256], X9
	171 Call TMP_TextProcessingStack`1<MaterialReference>.SetDefault, X0, X1
	172 Move X8, [X27]
	173 Move X8, [X8+184]
	174 Move X0, [X8+8]
	175 Compare X0, 0
	176 JumpIfEqual {1894}
	177 Move X8, 0x64D000
	178 Move X8, [X8+2256]
	179 Move X24, 0x688000
	180 Move X1, [X8]
	181 Move X24, [X24+872]
	182 Call Dictionary`2<Int32, Int32>.Clear, X0
	183 Move X8, [X27]
	184 Move X0, [X19+280]
	185 Move X1, [X19+256]
	186 Move X2, [X8+184]
	187 Move X3, [X2+8]
	188 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	189 Move X21, [X19+872]
	190 Compare X21, 0
	191 JumpIfEqual {211}
	192 Add X21, X21, 56
	193 Move X8, [X21]
	194 Compare X8, 0
	195 JumpIfEqual {1894}
	196 Move W22, [X19+1152]
	197 Move W8, [X8+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, [X24]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X8, 0x688000
	205 Move X8, [X8+1584]
	206 Move X0, X21
	207 Move W1, W22
	208 Move W2, W31
	209 Move X3, [X8]
	210 Call TMP_TextInfo.Resize, X0, X1, X2
	211 Move X0, [X24]
	212 Move W21, [X19+1152]
	213 Call 0x1C17F10
	214 Move W1, W21
	215 Move X2, X31
	216 Move X22, X0
	217 Call TMP_TextInfo..ctor, X0, X1
	218 Move [X19+872], X22
	219 Move W8, [X19+736]
	220 Move [X19+1604], W31
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X1, [X19+256]
	223 Move X0, X19
	224 Move X2, X31
	225 Call TMP_Text.GetEllipsisSpecialCharacter, X0, X1
	226 Move X8, [X19+1616]
	227 Compare X8, 0
	228 JumpIfEqual {268}
	229 Move X0, [X19+1624]
	230 Compare X0, 0
	231 JumpIfEqual {1894}
	232 Move X1, X31
	233 Call Object.GetInstanceID, X0
	234 Move X8, [X19+256]
	235 Compare X8, 0
	236 JumpIfEqual {1894}
	237 Move W21, W0
	238 Move X0, X8
	239 Move X1, X31
	240 Call Object.GetInstanceID, X0
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X0, X31
	243 Call TMP_Settings.get_matchMaterialPreset
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfNotEqual {263}
	248 Move X0, [X19+280]
	249 Compare X0, 0
	250 JumpIfEqual {1894}
	251 Move X1, X31
	252 Call Object.GetInstanceID, X0
	253 Move X8, [X19+1624]
	254 Compare X8, 0
	255 JumpIfEqual {1894}
	256 Move W21, W0
	257 Move X0, [X8+32]
	258 Compare X0, 0
	259 JumpIfEqual {1894}
	260 Move X1, X31
	261 Call Object.GetInstanceID, X0
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X21, [X19+1624]
	264 Compare X21, 0
	265 JumpIfEqual {1894}
	266 Move X22, [X21+32]
	267 Move [X19+1632], X22
	268 Move W8, 3
	269 Move X0, X31
	270 Move [X19+736], W8
	271 Call TMP_Settings.get_warningsDisabled
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {345}
	276 Move X0, [X19+256]
	277 Compare X0, 0
	278 JumpIfEqual {1894}
	279 Move X1, X31
	280 Call Object.get_name, X0
	281 Move X8, 0x688000
	282 Move X8, [X8+1624]
	283 Move X9, 0x688000
	284 Move X9, [X9+1632]
	285 Move X1, X0
	286 Move X8, [X8]
	287 Move X3, X31
	288 Move X2, [X9]
	289 Move X0, X8
	290 Call String.Concat, X0, X1, X2
	291 Move X8, 0x623000
	292 Move X8, [X8+2600]
	293 Move X21, X0
	294 Move X8, [X8]
	295 Move W9, [X8+224]
	296 Compare W9, 0
	297 JumpIfNotEqual {300}
	298 Move X0, X8
	299 Call 0x1C17DFC
	300 Move X0, X21
	301 Move X1, X19
	302 Move X2, X31
	303 Call Debug.LogWarning, X0, X1
	304 Move X8, [X19+1624]
	305 Compare X8, 0
	306 JumpIfEqual {1894}
	307 Move X9, 0x688000
	308 Move X9, [X9+1568]
	309 Move X21, [X19+280]
	310 Move X22, [X8+32]
	311 Move X0, [X9]
	312 Move W9, [X0+224]
	313 Compare W9, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move X0, X21
	317 Move X1, X22
	318 Move X2, X31
	319 Call TMP_MaterialManager.GetFallbackMaterial, X0, X1
	320 Move X21, [X19+1624]
	321 Move X22, X0
	322 Move [X19+1632], X0
	323 Move X0, [X27]
	324 Move W8, [X0+224]
	325 Compare W8, 0
	326 JumpIfNotEqual {329}
	327 Call 0x1C17DFC
	328 Move X0, [X27]
	329 Move X2, [X0+184]
	330 Move X0, X22
	331 Move X1, X21
	332 Move X3, [X2+8]
	333 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	334 Move [X19+1640], W0
	335 Move X8, [X27]
	336 Move X8, [X8+184]
	337 Move X8, [X8]
	338 Compare X8, 0
	339 JumpIfEqual {1894}
	340 Move W9, [X8+24]
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move W9, 56
	343 NotImplemented "Instruction SMADDL not yet implemented."
	344 Move [X8+84], W31
	345 Move W8, [X19+736]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move X8, 0x623000
	348 Move X8, [X8+1432]
	349 Move X21, [X19+744]
	350 Move X0, [X8]
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move X0, X21
	356 Move X1, X31
	357 Move X2, X31
	358 Call Object.op_Inequality, X0, X1
	359 Move TEMP, X0
	360 And TEMP, TEMP, 1
	361 Compare TEMP, 1
	362 JumpIfNotEqual {378}
	363 Move W8, [X19+1013]
	364 Compare W8, 0
	365 JumpIfNotEqual {378}
	366 Move X0, [X19+744]
	367 Compare X0, 0
	368 JumpIfEqual {1894}
	369 Move X8, 0x625000
	370 Move X8, [X8+632]
	371 Move X9, [X0]
	372 Move X8, [X8]
	373 Move X10, [X9+1368]
	374 Move X2, [X9+1376]
	375 Move X8, [X8+184]
	376 Move X1, [X8]
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Compare X20, 0
	379 JumpIfEqual {1894}
	380 Move W8, [X20+24]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move W28, W31
	383 Move W29, 12
	384 Move [X31+40], W31
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X26, X27
	387 NotImplemented "Instruction SMADDL not yet implemented."
	388 Add X27, X27, 32
	389 Move W9, [X27]
	390 Compare W9, 0
	391 JumpIfEqual {1337}
	392 Move X21, [X19+872]
	393 Compare X21, 0
	394 JumpIfEqual {1894}
	395 Add X21, X21, 56
	396 Move X9, [X21]
	397 Move W22, [X19+1168]
	398 Compare X9, 0
	399 JumpIfEqual {402}
	400 Move W9, [X9+24]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move X0, [X24]
	403 Move W8, [X0+224]
	404 Compare W8, 0
	405 JumpIfNotEqual {407}
	406 Call 0x1C17DFC
	407 Move X8, 0x688000
	408 Move X8, [X8+1584]
	409 Add W1, W22, 1
	410 Move W2, 1
	411 Move X0, X21
	412 Move X3, [X8]
	413 Call TMP_TextInfo.Resize, X0, X1, X2
	414 Move W8, [X20+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move W23, [X27]
	417 Move X29, W28
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Move W8, [X19+770]
	420 Compare W8, 0
	421 JumpIfEqual {535}
	422 Move W21, [X19+288]
	423 Add W2, W28, 1
	424 Add X3, X31, 408
	425 Move X0, X19
	426 Move X1, X20
	427 Move X4, X31
	428 Call TMP_Text.ValidateHtmlTag, X0, X1, X2, X3
	429 Move TEMP, X0
	430 And TEMP, TEMP, 1
	431 Compare TEMP, 1
	432 JumpIfNotEqual {535}
	433 Move W8, [X20+24]
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Move W8, 12
	436 NotImplemented "Instruction MADD not yet implemented."
	437 Move W9, [X19+604]
	438 Move W22, [X8+36]
	439 Move W29, 12
	440 Move X27, X26
	441 Move TEMP, X9
	442 And TEMP, TEMP, 1
	443 Compare TEMP, 1
	444 JumpIfNotEqual {447}
	445 Move W8, 1
	446 Move [X19+618], W8
	447 Move W8, [X19+1604]
	448 Move W28, [X31+408]
	449 Move W25, 376
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move X0, [X27]
	452 Move W8, [X0+224]
	453 Compare W8, 0
	454 JumpIfNotEqual {457}
	455 Call 0x1C17DFC
	456 Move X0, [X27]
	457 Move X8, [X0+184]
	458 Move X8, [X8]
	459 Compare X8, 0
	460 JumpIfEqual {1894}
	461 NotImplemented "Instruction LDRSW not yet implemented."
	462 Move W10, [X8+24]
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Move W10, 56
	465 NotImplemented "Instruction MADD not yet implemented."
	466 Move W9, [X8+84]
	467 Add W9, W9, 1
	468 Move [X8+84], W9
	469 Move X8, [X19+872]
	470 Compare X8, 0
	471 JumpIfEqual {1894}
	472 Move X23, [X8+56]
	473 Compare X23, 0
	474 JumpIfEqual {1894}
	475 NotImplemented "Instruction LDRSW not yet implemented."
	476 Move W8, [X23+24]
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move W8, [X19+1700]
	479 NotImplemented "Instruction NOP not yet implemented."
	480 NotImplemented "Instruction MADD not yet implemented."
	481 Subtract W10, W8, 0x2000
	482 NotImplemented "Instruction STRH not yet implemented."
	483 Move [X9+72], W8
	484 Move X8, [X19+256]
	485 Move [X9+56], X8
	486 Move X0, [X19+1688]
	487 Move [X9+64], X0
	488 Move W8, [X19+288]
	489 Move [X9+88], W8
	490 Compare X0, 0
	491 JumpIfEqual {1894}
	492 Move X1, X31
	493 Call TMP_SpriteAsset.get_spriteCharacterTable, X0
	494 Compare X0, 0
	495 JumpIfEqual {1894}
	496 Move X8, 0x688000
	497 Move W1, [X19+1700]
	498 Move X8, [X8+816]
	499 Move X2, [X8]
	500 Call List`1<Object>.get_Item, X0, X1
	501 Move W8, [X23+24]
	502 NotImplemented "Instruction CMP not yet implemented."
	503 NotImplemented "Instruction MADD not yet implemented."
	504 Move [X8+48], X0
	505 Move X8, [X19+872]
	506 Compare X8, 0
	507 JumpIfEqual {1894}
	508 Move X24, 0x688000
	509 Move X9, [X8+56]
	510 Move X24, [X24+872]
	511 Compare X9, 0
	512 JumpIfEqual {1894}
	513 Move W8, [X19+1168]
	514 Move W10, [X9+24]
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move W11, [X19+1604]
	517 Move X10, W8
	518 NotImplemented "Instruction MADD not yet implemented."
	519 Move [X12+36], W22
	520 Move [X12+44], W11
	521 Move W11, [X20+24]
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move W11, W28
	524 Move X11, W11
	525 NotImplemented "Instruction MADD not yet implemented."
	526 Move W11, [X11+36]
	527 NotImplemented "Instruction NOP not yet implemented."
	528 NotImplemented "Instruction MADD not yet implemented."
	529 Subtract W10, W11, W22
	530 Add W10, W10, 1
	531 Move [X9+40], W10
	532 Move W9, [X31+40]
	533 Move [X19+1604], W31
	534 Move [X19+288], W21
	535 Move X10, [X19+256]
	536 Move X11, [X19+280]
	537 Move W8, [X19+1604]
	538 Move W9, [X19+288]
	539 Move [X31+24], X11
	540 Move [X31+32], X10
	541 Move [X31+44], W9
	542 Compare W8, 0
	543 JumpIfNotEqual {606}
	544 Move W8, [X19+604]
	545 Move TEMP, X8
	546 And TEMP, TEMP, 16
	547 Compare TEMP, 16
	548 JumpIfEqual {557}
	549 Move TEMP, X8
	550 And TEMP, TEMP, 8
	551 Compare TEMP, 8
	552 JumpIfEqual {581}
	553 Move TEMP, X8
	554 And TEMP, TEMP, 32
	555 Compare TEMP, 32
	556 JumpIfNotEqual {606}
	557 Move X8, 0x625000
	558 Move X8, [X8+368]
	559 Move X0, [X8]
	560 Move W8, [X0+224]
	561 Compare W8, 0
	562 JumpIfNotEqual {564}
	563 Call 0x1C17DFC
	564 Move W0, W23
	565 Move X1, X31
	566 Call Char.IsLower, X0
	567 Move TEMP, X0
	568 And TEMP, TEMP, 1
	569 Compare TEMP, 1
	570 JumpIfNotEqual {606}
	571 Move X8, 0x625000
	572 Move X8, [X8+368]
	573 Move X0, [X8]
	574 Move W8, [X0+224]
	575 Compare W8, 0
	576 JumpIfNotEqual {578}
	577 Call 0x1C17DFC
	578 Move W0, W23
	579 Move X1, X31
	580 Call Char.ToUpper, X0
	581 Move X8, 0x625000
	582 Move X8, [X8+368]
	583 Move X0, [X8]
	584 Move W8, [X0+224]
	585 Compare W8, 0
	586 JumpIfNotEqual {588}
	587 Call 0x1C17DFC
	588 Move W0, W23
	589 Move X1, X31
	590 Call Char.IsUpper, X0
	591 Move TEMP, X0
	592 And TEMP, TEMP, 1
	593 Compare TEMP, 1
	594 JumpIfNotEqual {606}
	595 Move X8, 0x625000
	596 Move X8, [X8+368]
	597 Move X0, [X8]
	598 Move W8, [X0+224]
	599 Compare W8, 0
	600 JumpIfNotEqual {602}
	601 Call 0x1C17DFC
	602 Move W0, W23
	603 Move X1, X31
	604 Call Char.ToLower, X0
	605 And W23, W0, 0xFFFF
	606 Move X2, [X19+256]
	607 Move W3, [X19+604]
	608 Move W4, [X19+532]
	609 Add X5, X31, 412
	610 Move X0, X19
	611 Move W1, W23
	612 Move X6, X31
	613 Call TMP_Text.GetTextElement, X0, X1, X2, X3, X4, X5
	614 Compare X0, 0
	615 JumpIfEqual {620}
	616 Move X22, X0
	617 Move W21, W23
	618 Move X27, X26
	619 Move W26, 376
	620 Call TMP_Settings.get_missingGlyphCharacter
	621 Move W8, [X20+24]
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Compare W0, 0
	624 JumpIfEqual {628}
	625 Move X0, X31
	626 Call TMP_Settings.get_missingGlyphCharacter
	627 Move W21, W0
	628 Move W21, 0x25A1
	629 Move [X27], W21
	630 Move X8, 0x688000
	631 Move X8, [X8+1560]
	632 Move X24, [X19+256]
	633 Move W22, [X19+604]
	634 Move W25, [X19+532]
	635 Move X0, [X8]
	636 Move W8, [X0+224]
	637 Compare W8, 0
	638 JumpIfNotEqual {640}
	639 Call 0x1C17DFC
	640 Add X5, X31, 412
	641 Move W2, 1
	642 Move W0, W21
	643 Move X1, X24
	644 Move W3, W22
	645 Move W4, W25
	646 Move X6, X31
	647 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	648 Compare X0, 0
	649 JumpIfEqual {748}
	650 Move X22, X0
	651 Move X0, X31
	652 Call TMP_Settings.get_warningsDisabled
	653 Move TEMP, X0
	654 And TEMP, TEMP, 1
	655 Compare TEMP, 1
	656 JumpIfNotEqual {663}
	657 Move X24, 0x688000
	658 Move X24, [X24+872]
	659 Move X27, X26
	660 Move W26, 376
	661 Compare X22, 0
	662 JumpIfNotEqual {967}
	663 Move X8, 0x623000
	664 Move X8, [X8+2512]
	665 Move W1, 4
	666 Move X0, [X8]
	667 Call 0x1C17D6C
	668 Move X8, 0x623000
	669 Move X8, [X8+1880]
	670 NotImplemented "Instruction CMP not yet implemented."
	671 Move X24, X0
	672 Move X27, X26
	673 Move X0, [X8]
	674 Add X1, X31, 208
	675 Move [X31+208], W23
	676 Call 0x1C17E04
	677 Move W26, 376
	678 Compare X24, 0
	679 JumpIfEqual {1894}
	680 Move X23, X0
	681 Compare X0, 0
	682 JumpIfEqual {689}
	683 Move X8, [X24]
	684 Move X0, X23
	685 Move X1, [X8+64]
	686 Call 0x1C17E00
	687 Compare X0, 0
	688 JumpIfEqual {1896}
	689 Move W8, [X24+24]
	690 Compare W8, 0
	691 JumpIfEqual {1895}
	692 Move [X24+32], X23
	693 Move X0, [X19+248]
	694 Compare X0, 0
	695 JumpIfEqual {1894}
	696 Move X1, X31
	697 Call Object.get_name, X0
	698 Move X23, X0
	699 Compare X0, 0
	700 JumpIfEqual {707}
	701 Move X8, [X24]
	702 Move X0, X23
	703 Move X1, [X8+64]
	704 Call 0x1C17E00
	705 Compare X0, 0
	706 JumpIfEqual {1896}
	707 Move W8, [X24+24]
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move [X24+40], X23
	710 Compare X22, 0
	711 JumpIfEqual {1894}
	712 Move X9, 0x62B000
	713 Move W8, [X22+20]
	714 Move X9, [X9+1824]
	715 Add X1, X31, 352
	716 Move [X31+352], W8
	717 Move X0, [X9]
	718 Call 0x1C17E04
	719 Move X23, X0
	720 Compare X0, 0
	721 JumpIfEqual {728}
	722 Move X8, [X24]
	723 Move X0, X23
	724 Move X1, [X8+64]
	725 Call 0x1C17E00
	726 Compare X0, 0
	727 JumpIfEqual {1896}
	728 Move W8, [X24+24]
	729 NotImplemented "Instruction CMP not yet implemented."
	730 Move X0, X19
	731 Move X1, X31
	732 Move [X24+48], X23
	733 Call Object.get_name, X0
	734 Move X23, X0
	735 Compare X0, 0
	736 JumpIfEqual {743}
	737 Move X8, [X24]
	738 Move X0, X23
	739 Move X1, [X8+64]
	740 Call 0x1C17E00
	741 Compare X0, 0
	742 JumpIfEqual {1896}
	743 Move W8, [X24+24]
	744 NotImplemented "Instruction CMP not yet implemented."
	745 Move [X24+56], X23
	746 Move X8, 0x688000
	747 Move X8, [X8+1608]
	748 Call TMP_Settings.get_fallbackFontAssets
	749 Compare X0, 0
	750 JumpIfEqual {783}
	751 Move X0, X31
	752 Call TMP_Settings.get_fallbackFontAssets
	753 Compare X0, 0
	754 JumpIfEqual {1894}
	755 Move W8, [X0+24]
	756 NotImplemented "Instruction CMP not yet implemented."
	757 Move X8, [X19+256]
	758 Move X0, X31
	759 Move [X31+16], X8
	760 Call TMP_Settings.get_fallbackFontAssets
	761 Move X8, 0x688000
	762 Move X8, [X8+1560]
	763 Move W24, [X19+604]
	764 Move W25, [X19+532]
	765 Move X22, X0
	766 Move X8, [X8]
	767 Move W9, [X8+224]
	768 Compare W9, 0
	769 JumpIfNotEqual {772}
	770 Move X0, X8
	771 Call 0x1C17DFC
	772 Move X1, [X31+16]
	773 Add X6, X31, 412
	774 Move W3, 1
	775 Move W0, W21
	776 Move X2, X22
	777 Move W4, W24
	778 Move W5, W25
	779 Move X7, X31
	780 Call TMP_FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	781 Compare X0, 0
	782 JumpIfNotEqual {650}
	783 Move X0, X31
	784 Call TMP_Settings.get_defaultFontAsset
	785 Move X8, 0x623000
	786 Move X8, [X8+1432]
	787 Move X22, X0
	788 Move X8, [X8]
	789 Move W9, [X8+224]
	790 Compare W9, 0
	791 JumpIfNotEqual {794}
	792 Move X0, X8
	793 Call 0x1C17DFC
	794 Move X0, X22
	795 Move X1, X31
	796 Move X2, X31
	797 Call Object.op_Inequality, X0, X1
	798 Move TEMP, X0
	799 And TEMP, TEMP, 1
	800 Compare TEMP, 1
	801 JumpIfNotEqual {826}
	802 Move X0, X31
	803 Call TMP_Settings.get_defaultFontAsset
	804 Move X8, 0x688000
	805 Move X8, [X8+1560]
	806 Move W22, [X19+604]
	807 Move W24, [X19+532]
	808 Move X25, X0
	809 Move X8, [X8]
	810 Move W9, [X8+224]
	811 Compare W9, 0
	812 JumpIfNotEqual {815}
	813 Move X0, X8
	814 Call 0x1C17DFC
	815 Add X5, X31, 412
	816 Move W2, 1
	817 Move W0, W21
	818 Move X1, X25
	819 Move W3, W22
	820 Move W4, W24
	821 Move X6, X31
	822 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	823 Move X22, X0
	824 Compare X0, 0
	825 JumpIfNotEqual {651}
	826 Move W8, [X20+24]
	827 NotImplemented "Instruction CMP not yet implemented."
	828 Move W8, 32
	829 Move [X27], W8
	830 Move X8, 0x688000
	831 Move X8, [X8+1560]
	832 Move X24, [X19+256]
	833 Move W22, [X19+604]
	834 Move W25, [X19+532]
	835 Move X0, [X8]
	836 Move W8, [X0+224]
	837 Compare W8, 0
	838 JumpIfNotEqual {840}
	839 Call 0x1C17DFC
	840 Add X5, X31, 412
	841 Move W0, 32
	842 Move W2, 1
	843 Move X1, X24
	844 Move W3, W22
	845 Move W4, W25
	846 Move X6, X31
	847 Move W21, 32
	848 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	849 Compare X0, 0
	850 JumpIfNotEqual {650}
	851 Move W8, [X20+24]
	852 NotImplemented "Instruction CMP not yet implemented."
	853 Move W8, 3
	854 Move [X27], W8
	855 Move X8, 0x688000
	856 Move X8, [X8+1560]
	857 Move X24, [X19+256]
	858 Move W22, [X19+604]
	859 Move W25, [X19+532]
	860 Move X0, [X8]
	861 Move W8, [X0+224]
	862 Compare W8, 0
	863 JumpIfNotEqual {865}
	864 Call 0x1C17DFC
	865 Add X5, X31, 412
	866 Move W0, 3
	867 Move W2, 1
	868 Move X1, X24
	869 Move W3, W22
	870 Move W4, W25
	871 Move X6, X31
	872 Move W21, 3
	873 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	874 Move X0, [X8]
	875 Add X1, X31, 208
	876 Move [X31+208], W23
	877 Call 0x1C17E04
	878 Move W26, 376
	879 Compare X24, 0
	880 JumpIfEqual {1894}
	881 Move X23, X0
	882 Compare X0, 0
	883 JumpIfEqual {890}
	884 Move X8, [X24]
	885 Move X0, X23
	886 Move X1, [X8+64]
	887 Call 0x1C17E00
	888 Compare X0, 0
	889 JumpIfEqual {1896}
	890 Move W8, [X24+24]
	891 Compare W8, 0
	892 JumpIfEqual {1895}
	893 Move [X24+32], X23
	894 Move X0, [X19+248]
	895 Compare X0, 0
	896 JumpIfEqual {1894}
	897 Move X1, X31
	898 Call Object.get_name, X0
	899 Move X23, X0
	900 Compare X0, 0
	901 JumpIfEqual {908}
	902 Move X8, [X24]
	903 Move X0, X23
	904 Move X1, [X8+64]
	905 Call 0x1C17E00
	906 Compare X0, 0
	907 JumpIfEqual {1896}
	908 Move W8, [X24+24]
	909 NotImplemented "Instruction CMP not yet implemented."
	910 Move [X24+40], X23
	911 Compare X22, 0
	912 JumpIfEqual {1894}
	913 Move X9, 0x62B000
	914 Move W8, [X22+20]
	915 Move X9, [X9+1824]
	916 Add X1, X31, 352
	917 Move [X31+352], W8
	918 Move X0, [X9]
	919 Call 0x1C17E04
	920 Move X23, X0
	921 Compare X0, 0
	922 JumpIfEqual {929}
	923 Move X8, [X24]
	924 Move X0, X23
	925 Move X1, [X8+64]
	926 Call 0x1C17E00
	927 Compare X0, 0
	928 JumpIfEqual {1896}
	929 Move W8, [X24+24]
	930 NotImplemented "Instruction CMP not yet implemented."
	931 Move X0, X19
	932 Move X1, X31
	933 Move [X24+48], X23
	934 Call Object.get_name, X0
	935 Move X23, X0
	936 Compare X0, 0
	937 JumpIfEqual {944}
	938 Move X8, [X24]
	939 Move X0, X23
	940 Move X1, [X8+64]
	941 Call 0x1C17E00
	942 Compare X0, 0
	943 JumpIfEqual {1896}
	944 Move W8, [X24+24]
	945 NotImplemented "Instruction CMP not yet implemented."
	946 Move [X24+56], X23
	947 Move X8, 0x688000
	948 Move X8, [X8+1616]
	949 Move X0, [X8]
	950 Move X1, X24
	951 Move X2, X31
	952 Call String.Format, X0, X1
	953 Move X8, 0x623000
	954 Move X8, [X8+2600]
	955 Move X23, X0
	956 Move X24, 0x688000
	957 Move X0, [X8]
	958 Move W8, [X0+224]
	959 Move X24, [X24+872]
	960 Compare W8, 0
	961 JumpIfNotEqual {963}
	962 Call 0x1C17DFC
	963 Move X0, X23
	964 Move X1, X19
	965 Move X2, X31
	966 Call Debug.LogWarning, X0, X1
	967 Move W8, [X22+16]
	968 NotImplemented "Instruction CMP not yet implemented."
	969 Move X0, [X22+24]
	970 Compare X0, 0
	971 JumpIfEqual {1894}
	972 Move X1, X31
	973 Call TMP_Asset.get_instanceID, X0
	974 Move X8, [X19+256]
	975 Compare X8, 0
	976 JumpIfEqual {1894}
	977 Move W23, W0
	978 Move X0, X8
	979 Move X1, X31
	980 Call TMP_Asset.get_instanceID, X0
	981 NotImplemented "Instruction CMP not yet implemented."
	982 Move W25, W31
	983 Move X8, [X22+24]
	984 Compare X8, 0
	985 JumpIfEqual {994}
	986 Move X9, 0x688000
	987 Move X10, [X8]
	988 Move X9, [X9+1400]
	989 Move W12, [X10+304]
	990 Move X9, [X9]
	991 Move W11, [X9+304]
	992 NotImplemented "Instruction CMP not yet implemented."
	993 Move X8, X31
	994 Move [X19+256], X31
	995 Move X10, [X10+200]
	996 Add X10, X10, X11
	997 NotImplemented "Instruction LDUR not yet implemented."
	998 NotImplemented "Instruction CMP not yet implemented."
	999 NotImplemented "Instruction CSEL not yet implemented."
	1000 Move [X19+256], X8
	1001 Move W25, 1
	1002 Move X8, [X19+872]
	1003 Compare X8, 0
	1004 JumpIfEqual {1894}
	1005 Move X8, [X8+56]
	1006 Compare X8, 0
	1007 JumpIfEqual {1894}
	1008 NotImplemented "Instruction LDRSW not yet implemented."
	1009 Move W10, [X8+24]
	1010 NotImplemented "Instruction CMP not yet implemented."
	1011 NotImplemented "Instruction MADD not yet implemented."
	1012 Move [X10+44], W31
	1013 Move [X10+48], X22
	1014 Move W11, [X31+412]
	1015 NotImplemented "Instruction STRH not yet implemented."
	1016 Move [X10+92], W11
	1017 Move W10, [X20+24]
	1018 NotImplemented "Instruction CMP not yet implemented."
	1019 Move W10, 12
	1020 NotImplemented "Instruction MADD not yet implemented."
	1021 NotImplemented "Instruction LDUR not yet implemented."
	1022 NotImplemented "Instruction NOP not yet implemented."
	1023 NotImplemented "Instruction MADD not yet implemented."
	1024 Move W29, 12
	1025 Move [X8+36], D0
	1026 Move X0, [X19+256]
	1027 Move [X8+56], X0
	1028 Move W8, [X22+16]
	1029 NotImplemented "Instruction CMP not yet implemented."
	1030 Move X21, [X22+24]
	1031 Compare X21, 0
	1032 JumpIfEqual {1894}
	1033 Move X8, 0x688000
	1034 Move X9, [X21]
	1035 Move X8, [X8+1576]
	1036 Move W11, [X9+304]
	1037 Move X8, [X8]
	1038 Move W10, [X8+304]
	1039 NotImplemented "Instruction CMP not yet implemented."
	1040 Move X9, [X9+200]
	1041 Add X9, X9, X10
	1042 NotImplemented "Instruction LDUR not yet implemented."
	1043 NotImplemented "Instruction CMP not yet implemented."
	1044 Move X0, [X27]
	1045 Move X23, [X21+32]
	1046 Move W8, [X0+224]
	1047 Compare W8, 0
	1048 JumpIfNotEqual {1051}
	1049 Call 0x1C17DFC
	1050 Move X0, [X27]
	1051 Move X2, [X0+184]
	1052 Move X0, X23
	1053 Move X1, X21
	1054 Move X3, [X2+8]
	1055 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1056 Move [X19+288], W0
	1057 Move X8, [X27]
	1058 Move X8, [X8+184]
	1059 Move X8, [X8]
	1060 Compare X8, 0
	1061 JumpIfEqual {1894}
	1062 Move W9, [X8+24]
	1063 NotImplemented "Instruction CMP not yet implemented."
	1064 Move W9, 56
	1065 NotImplemented "Instruction SMADDL not yet implemented."
	1066 Move W9, [X8+84]
	1067 Add W9, W9, 1
	1068 Move [X8+84], W9
	1069 Move X8, [X19+872]
	1070 Compare X8, 0
	1071 JumpIfEqual {1894}
	1072 Move X9, [X8+56]
	1073 Compare X9, 0
	1074 JumpIfEqual {1894}
	1075 Move W8, [X19+1168]
	1076 Move W10, [X9+24]
	1077 NotImplemented "Instruction CMP not yet implemented."
	1078 Move X10, W8
	1079 NotImplemented "Instruction MADD not yet implemented."
	1080 Move W10, 1
	1081 Move [X9+44], W10
	1082 Move W10, [X19+288]
	1083 Move [X9+64], X21
	1084 Move [X9+88], W10
	1085 Move W10, [X22+40]
	1086 Move [X9+72], W10
	1087 Move W9, [X31+44]
	1088 Move [X19+1604], W31
	1089 Move [X19+288], W9
	1090 Move W9, [X31+40]
	1091 Add W9, W9, 1
	1092 Move [X31+40], W9
	1093 Compare W25, 0
	1094 JumpIfEqual {1150}
	1095 Compare X0, 0
	1096 JumpIfEqual {1894}
	1097 Move X1, X31
	1098 Call TMP_Asset.get_instanceID, X0
	1099 Move X8, [X19+248]
	1100 Compare X8, 0
	1101 JumpIfEqual {1894}
	1102 Move W23, W0
	1103 Move X0, X8
	1104 Move X1, X31
	1105 Call TMP_Asset.get_instanceID, X0
	1106 NotImplemented "Instruction CMP not yet implemented."
	1107 Move X0, X31
	1108 Call TMP_Settings.get_matchMaterialPreset
	1109 Move TEMP, X0
	1110 And TEMP, TEMP, 1
	1111 Compare TEMP, 1
	1112 JumpIfNotEqual {1131}
	1113 Move X8, [X19+256]
	1114 Compare X8, 0
	1115 JumpIfEqual {1894}
	1116 Move X9, 0x688000
	1117 Move X9, [X9+1568]
	1118 Move X23, [X19+280]
	1119 Move X24, [X8+32]
	1120 Move X0, [X9]
	1121 Move W9, [X0+224]
	1122 Compare W9, 0
	1123 JumpIfNotEqual {1125}
	1124 Call 0x1C17DFC
	1125 Move X0, X23
	1126 Move X1, X24
	1127 Move X2, X31
	1128 Call TMP_MaterialManager.GetFallbackMaterial, X0, X1
	1129 Move X23, [X19+256]
	1130 Move X24, X0
	1131 Move X23, [X19+256]
	1132 Compare X23, 0
	1133 JumpIfEqual {1894}
	1134 Move X24, [X23+32]
	1135 Move [X19+280], X24
	1136 Move X0, [X27]
	1137 Move W8, [X0+224]
	1138 Compare W8, 0
	1139 JumpIfNotEqual {1142}
	1140 Call 0x1C17DFC
	1141 Move X0, [X27]
	1142 Move X2, [X0+184]
	1143 Move X0, X24
	1144 Move X1, X23
	1145 Move X3, [X2+8]
	1146 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1147 Move [X19+288], W0
	1148 Move X24, 0x688000
	1149 Move X24, [X24+872]
	1150 Move X0, [X22+32]
	1151 Compare X0, 0
	1152 JumpIfEqual {1894}
	1153 Move X1, X31
	1154 Call Glyph.get_atlasIndex, X0
	1155 NotImplemented "Instruction CMP not yet implemented."
	1156 Move X0, [X22+32]
	1157 Compare X0, 0
	1158 JumpIfEqual {1894}
	1159 Move X22, [X19+256]
	1160 Move X23, [X19+280]
	1161 Move X1, X31
	1162 Call Glyph.get_atlasIndex, X0
	1163 Move X8, 0x688000
	1164 Move X8, [X8+1568]
	1165 Move W24, W0
	1166 Move X8, [X8]
	1167 Move W9, [X8+224]
	1168 Compare W9, 0
	1169 JumpIfNotEqual {1172}
	1170 Move X0, X8
	1171 Call 0x1C17DFC
	1172 Move X0, X22
	1173 Move X1, X23
	1174 Move W2, W24
	1175 Move X3, X31
	1176 Call TMP_MaterialManager.GetFallbackMaterial, X0, X1, X2
	1177 Move [X19+280], X0
	1178 Move X22, X0
	1179 Move X0, [X27]
	1180 Move X23, [X19+256]
	1181 Move W8, [X0+224]
	1182 Compare W8, 0
	1183 JumpIfNotEqual {1186}
	1184 Call 0x1C17DFC
	1185 Move X0, [X27]
	1186 Move X24, 0x688000
	1187 Move X24, [X24+872]
	1188 Move X2, [X0+184]
	1189 Move X0, X22
	1190 Move X1, X23
	1191 Move X3, [X2+8]
	1192 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1193 Move W25, 1
	1194 Move [X19+288], W0
	1195 Move X8, 0x625000
	1196 Move X8, [X8+368]
	1197 Move X0, [X8]
	1198 Move W8, [X0+224]
	1199 Compare W8, 0
	1200 JumpIfNotEqual {1202}
	1201 Call 0x1C17DFC
	1202 Move W0, W21
	1203 Move X1, X31
	1204 Call Char.IsWhiteSpace, X0
	1205 Move W8, 0x200B
	1206 NotImplemented "Instruction CMP not yet implemented."
	1207 Move TEMP, X0
	1208 And TEMP, TEMP, 1
	1209 Compare TEMP, 1
	1210 JumpIfEqual {1276}
	1211 Move X8, [X27]
	1212 Move W9, [X8+224]
	1213 Compare W9, 0
	1214 JumpIfNotEqual {1218}
	1215 Move X0, X8
	1216 Call 0x1C17DFC
	1217 Move X8, [X27]
	1218 Move X9, [X8+184]
	1219 Move X9, [X9]
	1220 Compare X9, 0
	1221 JumpIfEqual {1894}
	1222 Move W0, [X19+288]
	1223 Move W10, [X9+24]
	1224 NotImplemented "Instruction CMP not yet implemented."
	1225 Move X10, W0
	1226 Move W11, 56
	1227 NotImplemented "Instruction MADD not yet implemented."
	1228 Move W10, [X10+84]
	1229 Move W11, 0x3FFE
	1230 NotImplemented "Instruction CMP not yet implemented."
	1231 Move X8, 0x627000
	1232 Move X22, [X19+280]
	1233 Move X8, [X8+3232]
	1234 Move X0, [X8]
	1235 Call 0x1C17F10
	1236 Move X1, X22
	1237 Move X2, X31
	1238 Move X21, X0
	1239 Call Material..ctor, X0, X1
	1240 Move X0, [X27]
	1241 Move X22, [X19+256]
	1242 Move W8, [X0+224]
	1243 Compare W8, 0
	1244 JumpIfNotEqual {1247}
	1245 Call 0x1C17DFC
	1246 Move X0, [X27]
	1247 Move X2, [X0+184]
	1248 Move X0, X21
	1249 Move X1, X22
	1250 Move X3, [X2+8]
	1251 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1252 Move [X19+288], W0
	1253 Move X8, [X27]
	1254 Move X8, [X8+184]
	1255 Move X9, [X8]
	1256 Compare X9, 0
	1257 JumpIfNotEqual {1269}
	1258 Move W10, [X8+224]
	1259 Compare W10, 0
	1260 JumpIfNotEqual {1269}
	1261 Move X0, X8
	1262 Call 0x1C17DFC
	1263 Move X8, [X27]
	1264 Move X8, [X8+184]
	1265 Move X9, [X8]
	1266 Compare X9, 0
	1267 JumpIfEqual {1894}
	1268 Move W0, [X19+288]
	1269 Move W8, [X9+24]
	1270 NotImplemented "Instruction CMP not yet implemented."
	1271 Move W8, 56
	1272 NotImplemented "Instruction SMADDL not yet implemented."
	1273 Move W9, [X8+84]
	1274 Add W9, W9, 1
	1275 Move [X8+84], W9
	1276 Move X8, [X19+872]
	1277 Compare X8, 0
	1278 JumpIfEqual {1894}
	1279 Move X8, [X8+56]
	1280 Compare X8, 0
	1281 JumpIfEqual {1894}
	1282 NotImplemented "Instruction LDRSW not yet implemented."
	1283 Move W10, [X8+24]
	1284 NotImplemented "Instruction CMP not yet implemented."
	1285 Move X10, [X19+280]
	1286 NotImplemented "Instruction NOP not yet implemented."
	1287 NotImplemented "Instruction MADD not yet implemented."
	1288 Move [X9+80], X10
	1289 Move W8, [X19+288]
	1290 Move [X9+88], W8
	1291 Move X0, [X27]
	1292 Move W9, [X0+224]
	1293 Compare W9, 0
	1294 JumpIfNotEqual {1298}
	1295 Call 0x1C17DFC
	1296 Move X0, [X27]
	1297 Move W8, [X19+288]
	1298 Move X9, [X0+184]
	1299 Move X9, [X9]
	1300 Compare X9, 0
	1301 JumpIfEqual {1894}
	1302 Move W10, [X9+24]
	1303 NotImplemented "Instruction CMP not yet implemented."
	1304 Move W10, 56
	1305 NotImplemented "Instruction SMADDL not yet implemented."
	1306 Move [X10+65], W25
	1307 Compare W25, 0
	1308 JumpIfEqual {1330}
	1309 Move W10, [X0+224]
	1310 Compare W10, 0
	1311 JumpIfNotEqual {1319}
	1312 Call 0x1C17DFC
	1313 Move X8, [X27]
	1314 Move X8, [X8+184]
	1315 Move X9, [X8]
	1316 Compare X9, 0
	1317 JumpIfEqual {1894}
	1318 Move W8, [X19+288]
	1319 Move W10, [X9+24]
	1320 NotImplemented "Instruction CMP not yet implemented."
	1321 Move W10, 56
	1322 NotImplemented "Instruction SMADDL not yet implemented."
	1323 Move X9, [X31+24]
	1324 Move [X8+72], X9
	1325 Move X8, [X31+32]
	1326 Move [X19+280], X9
	1327 Move [X19+256], X8
	1328 Move W8, [X31+44]
	1329 Move [X19+288], W8
	1330 Move W8, [X19+1168]
	1331 Add W8, W8, 1
	1332 Move [X19+1168], W8
	1333 Move W8, [X20+24]
	1334 Add W28, W28, 1
	1335 NotImplemented "Instruction CMP not yet implemented."
	1336 Move [X31+40], W31
	1337 Move X27, X26
	1338 Move W8, [X19+1013]
	1339 Compare W8, 0
	1340 JumpIfEqual {1357}
	1341 Move [X19+1013], W31
	1342 Move W0, [X19+1168]
	1343 Add X31, X31, 416
	1344 Move X20, [X31+80]
	1345 Move X19, [X31+88]
	1346 Move X22, [X31+64]
	1347 Move X21, [X31+72]
	1348 Move X24, [X31+48]
	1349 Move X23, [X31+56]
	1350 Move X26, [X31+32]
	1351 Move X25, [X31+40]
	1352 Move X28, [X31+16]
	1353 Move X27, [X31+24]
	1354 Move X29, [X31+96]
	1355 Move X30, [X31+104]
	1356 Return X0
	1357 Move X21, [X19+872]
	1358 Compare X21, 0
	1359 JumpIfEqual {1894}
	1360 Move W8, [X31+40]
	1361 Move [X21+28], W8
	1362 Move X0, [X27]
	1363 Move W8, [X0+224]
	1364 Compare W8, 0
	1365 JumpIfNotEqual {1368}
	1366 Call 0x1C17DFC
	1367 Move X0, [X27]
	1368 Move X8, [X0+184]
	1369 Move X0, [X8+8]
	1370 Compare X0, 0
	1371 JumpIfEqual {1894}
	1372 Move X8, 0x67D000
	1373 Move X8, [X8+3448]
	1374 Move X1, [X8]
	1375 Call Dictionary`2<Int32, Int32>.get_Count, X0
	1376 Move [X21+52], W0
	1377 Move X21, [X19+872]
	1378 Compare X21, 0
	1379 JumpIfEqual {1894}
	1380 Add X21, X21, 96
	1381 Move X8, [X21]
	1382 Compare X8, 0
	1383 JumpIfEqual {1894}
	1384 Move W8, [X8+24]
	1385 Move W20, W0
	1386 NotImplemented "Instruction CMP not yet implemented."
	1387 Move X0, [X24]
	1388 Move W8, [X0+224]
	1389 Compare W8, 0
	1390 JumpIfNotEqual {1392}
	1391 Call 0x1C17DFC
	1392 Move X8, 0x687000
	1393 Move X8, [X8+1592]
	1394 Move X0, X21
	1395 Move W1, W20
	1396 Move W2, W31
	1397 Move X3, [X8]
	1398 Call TMP_TextInfo.Resize, X0, X1, X2
	1399 Move X8, [X19+1800]
	1400 Compare X8, 0
	1401 JumpIfEqual {1894}
	1402 Move W8, [X8+24]
	1403 Add X21, X19, 1800
	1404 NotImplemented "Instruction CMP not yet implemented."
	1405 Add W0, W20, 1
	1406 Move X1, X31
	1407 Call Mathf.NextPowerOfTwo, X0
	1408 Move X8, [X24]
	1409 Move W22, W0
	1410 Move W9, [X8+224]
	1411 Compare W9, 0
	1412 JumpIfNotEqual {1415}
	1413 Move X0, X8
	1414 Call 0x1C17DFC
	1415 Move X8, 0x687000
	1416 Move X8, [X8+1600]
	1417 Move X0, X21
	1418 Move W1, W22
	1419 Move X2, [X8]
	1420 Call 0x229A05C, X0, X1
	1421 Move W8, [X19+801]
	1422 Compare W8, 0
	1423 JumpIfEqual {1451}
	1424 Move X22, [X19+872]
	1425 Compare X22, 0
	1426 JumpIfEqual {1894}
	1427 Add X22, X22, 56
	1428 Move X9, [X22]
	1429 Compare X9, 0
	1430 JumpIfEqual {1894}
	1431 Move W8, [X19+1168]
	1432 Move W9, [X9+24]
	1433 Subtract W9, W9, W8
	1434 NotImplemented "Instruction CMP not yet implemented."
	1435 Move X0, [X24]
	1436 Add W10, W8, 1
	1437 NotImplemented "Instruction CMP not yet implemented."
	1438 Move W10, 256
	1439 Move W9, [X0+224]
	1440 NotImplemented "Instruction CSINC not yet implemented."
	1441 Compare W9, 0
	1442 JumpIfNotEqual {1444}
	1443 Call 0x1C17DFC
	1444 Move X8, 0x687000
	1445 Move X8, [X8+1584]
	1446 Move W2, 1
	1447 Move X0, X22
	1448 Move W1, W23
	1449 Move X3, [X8]
	1450 Call TMP_TextInfo.Resize, X0, X1, X2
	1451 NotImplemented "Instruction CMP not yet implemented."
	1452 Move X29, 0x687000
	1453 Move X29, [X29+840]
	1454 Move X24, X31
	1455 Move X25, X31
	1456 Move W26, W20
	1457 Move W28, 84
	1458 Compare X25, 0
	1459 JumpIfEqual {1703}
	1460 Move X8, [X21]
	1461 Compare X8, 0
	1462 JumpIfEqual {1894}
	1463 Move W9, [X8+24]
	1464 NotImplemented "Instruction CMP not yet implemented."
	1465 Move X9, 0x622000
	1466 Move X9, [X9+1432]
	1467 Add X8, X8, X25
	1468 Move X22, [X8+32]
	1469 Move X0, [X9]
	1470 Move W9, [X0+224]
	1471 Compare W9, 0
	1472 JumpIfNotEqual {1474}
	1473 Call 0x1C17DFC
	1474 Move X0, X22
	1475 Move X1, X31
	1476 Move X2, X31
	1477 Call Object.op_Equality, X0, X1
	1478 Move TEMP, X0
	1479 And TEMP, TEMP, 1
	1480 Compare TEMP, 1
	1481 JumpIfNotEqual {1533}
	1482 Move X0, [X27]
	1483 Move X23, [X21]
	1484 Move W8, [X0+224]
	1485 Compare W8, 0
	1486 JumpIfNotEqual {1489}
	1487 Call 0x1C17DFC
	1488 Move X0, [X27]
	1489 Move X8, [X0+184]
	1490 Move X8, [X8]
	1491 Compare X8, 0
	1492 JumpIfEqual {1894}
	1493 Move W9, [X8+24]
	1494 NotImplemented "Instruction CMP not yet implemented."
	1495 Add X8, X8, X28
	1496 NotImplemented "Instruction LDUR not yet implemented."
	1497 NotImplemented "Instruction LDUR not yet implemented."
	1498 NotImplemented "Instruction LDUR not yet implemented."
	1499 NotImplemented "Instruction LDUR not yet implemented."
	1500 Add X1, X31, 288
	1501 Move X0, X19
	1502 Move X2, X31
	1503 Move [X31+336], X9
	1504 Move [X31+304], V1
	1505 Move [X31+312], V0
	1506 Move [X31+18], V2
	1507 Call TMP_SubMesh.AddSubTextObject, X0, X1
	1508 Compare X23, 0
	1509 JumpIfEqual {1894}
	1510 Move X22, X0
	1511 Compare X0, 0
	1512 JumpIfEqual {1519}
	1513 Move X8, [X23]
	1514 Move X0, X22
	1515 Move X1, [X8+64]
	1516 Call 0x1C17E00
	1517 Compare X0, 0
	1518 JumpIfEqual {1896}
	1519 Move W8, [X23+24]
	1520 NotImplemented "Instruction CMP not yet implemented."
	1521 Add X8, X23, X25
	1522 Move [X8+32], X22
	1523 Move X8, [X19+872]
	1524 Compare X8, 0
	1525 JumpIfEqual {1894}
	1526 Move X8, [X8+96]
	1527 Compare X8, 0
	1528 JumpIfEqual {1894}
	1529 Move W9, [X8+24]
	1530 NotImplemented "Instruction CMP not yet implemented."
	1531 Add X8, X8, X24
	1532 Move [X8+48], X31
	1533 Move X8, [X21]
	1534 Compare X8, 0
	1535 JumpIfEqual {1894}
	1536 Move W9, [X8+24]
	1537 NotImplemented "Instruction CMP not yet implemented."
	1538 Add X8, X8, X25
	1539 Move X8, [X8+32]
	1540 Compare X8, 0
	1541 JumpIfEqual {1894}
	1542 Move X9, 0x622000
	1543 Move X9, [X9+1432]
	1544 Move X22, [X8+56]
	1545 Move X0, [X9]
	1546 Move W9, [X0+224]
	1547 Compare W9, 0
	1548 JumpIfNotEqual {1550}
	1549 Call 0x1C17DFC
	1550 Move X0, X22
	1551 Move X1, X31
	1552 Move X2, X31
	1553 Call Object.op_Equality, X0, X1
	1554 Move TEMP, X0
	1555 And TEMP, TEMP, 1
	1556 Compare TEMP, 1
	1557 JumpIfEqual {1594}
	1558 Move X8, [X21]
	1559 Compare X8, 0
	1560 JumpIfEqual {1894}
	1561 Move W9, [X8+24]
	1562 NotImplemented "Instruction CMP not yet implemented."
	1563 Add X8, X8, X25
	1564 Move X8, [X8+32]
	1565 Compare X8, 0
	1566 JumpIfEqual {1894}
	1567 Move X0, [X8+56]
	1568 Compare X0, 0
	1569 JumpIfEqual {1894}
	1570 Move X1, X31
	1571 Call Object.GetInstanceID, X0
	1572 Move X8, [X27]
	1573 Move W22, W0
	1574 Move W9, [X8+224]
	1575 Compare W9, 0
	1576 JumpIfNotEqual {1580}
	1577 Move X0, X8
	1578 Call 0x1C17DFC
	1579 Move X8, [X27]
	1580 Move X8, [X8+184]
	1581 Move X8, [X8]
	1582 Compare X8, 0
	1583 JumpIfEqual {1894}
	1584 Move W9, [X8+24]
	1585 NotImplemented "Instruction CMP not yet implemented."
	1586 Add X8, X8, X28
	1587 NotImplemented "Instruction LDUR not yet implemented."
	1588 Compare X0, 0
	1589 JumpIfEqual {1894}
	1590 Move X1, X31
	1591 Call Object.GetInstanceID, X0
	1592 NotImplemented "Instruction CMP not yet implemented."
	1593 Move X0, [X27]
	1594 Move X8, [X21]
	1595 Compare X8, 0
	1596 JumpIfEqual {1894}
	1597 Move W9, [X8+24]
	1598 NotImplemented "Instruction CMP not yet implemented."
	1599 Move X0, [X27]
	1600 Add X8, X8, X25
	1601 Move X22, [X8+32]
	1602 Move W9, [X0+224]
	1603 Compare W9, 0
	1604 JumpIfNotEqual {1607}
	1605 Call 0x1C17DFC
	1606 Move X0, [X27]
	1607 Move X8, [X0+184]
	1608 Move X8, [X8]
	1609 Compare X8, 0
	1610 JumpIfEqual {1894}
	1611 Move W9, [X8+24]
	1612 NotImplemented "Instruction CMP not yet implemented."
	1613 Compare X22, 0
	1614 JumpIfEqual {1894}
	1615 Add X8, X8, X28
	1616 NotImplemented "Instruction LDUR not yet implemented."
	1617 Move X0, X22
	1618 Move X2, X31
	1619 Call TMP_SubMesh.set_sharedMaterial, X0, X1
	1620 Move X8, [X21]
	1621 Compare X8, 0
	1622 JumpIfEqual {1894}
	1623 Move W9, [X8+24]
	1624 NotImplemented "Instruction CMP not yet implemented."
	1625 Move X0, [X27]
	1626 Move X9, [X0+184]
	1627 Move X9, [X9]
	1628 Compare X9, 0
	1629 JumpIfEqual {1894}
	1630 Move W10, [X9+24]
	1631 NotImplemented "Instruction CMP not yet implemented."
	1632 Add X8, X8, X25
	1633 Move X10, [X8+32]
	1634 Compare X10, 0
	1635 JumpIfEqual {1894}
	1636 Add X9, X9, X28
	1637 NotImplemented "Instruction LDUR not yet implemented."
	1638 Move [X10+32], X11
	1639 Move X8, [X8+32]
	1640 Compare X8, 0
	1641 JumpIfEqual {1894}
	1642 NotImplemented "Instruction LDUR not yet implemented."
	1643 Move [X8+40], X9
	1644 Move W8, [X0+224]
	1645 Compare W8, 0
	1646 JumpIfNotEqual {1649}
	1647 Call 0x1C17DFC
	1648 Move X0, [X27]
	1649 Move X8, [X0+184]
	1650 Move X8, [X8]
	1651 Compare X8, 0
	1652 JumpIfEqual {1894}
	1653 Move W9, [X8+24]
	1654 NotImplemented "Instruction CMP not yet implemented."
	1655 Add X9, X8, X28
	1656 NotImplemented "Instruction LDURB not yet implemented."
	1657 Compare W9, 0
	1658 JumpIfEqual {1704}
	1659 Move X9, [X21]
	1660 Compare X9, 0
	1661 JumpIfEqual {1894}
	1662 Move W10, [X9+24]
	1663 NotImplemented "Instruction CMP not yet implemented."
	1664 Add X9, X9, X25
	1665 Move W10, [X0+224]
	1666 Move X22, [X9+32]
	1667 Compare W10, 0
	1668 JumpIfNotEqual {1675}
	1669 Call 0x1C17DFC
	1670 Move X8, [X27]
	1671 Move X8, [X8+184]
	1672 Move X8, [X8]
	1673 Compare X8, 0
	1674 JumpIfEqual {1894}
	1675 Move W9, [X8+24]
	1676 NotImplemented "Instruction CMP not yet implemented."
	1677 Compare X22, 0
	1678 JumpIfEqual {1894}
	1679 Add X8, X8, X28
	1680 NotImplemented "Instruction LDUR not yet implemented."
	1681 Move X0, X22
	1682 Move X2, X31
	1683 Call TMP_SubMesh.set_fallbackMaterial, X0, X1
	1684 Move X8, [X21]
	1685 Compare X8, 0
	1686 JumpIfEqual {1894}
	1687 Move W9, [X8+24]
	1688 NotImplemented "Instruction CMP not yet implemented."
	1689 Move X0, [X27]
	1690 Move X9, [X0+184]
	1691 Move X9, [X9]
	1692 Compare X9, 0
	1693 JumpIfEqual {1894}
	1694 Move W10, [X9+24]
	1695 NotImplemented "Instruction CMP not yet implemented."
	1696 Add X8, X8, X25
	1697 Move X8, [X8+32]
	1698 Compare X8, 0
	1699 JumpIfEqual {1894}
	1700 Add X9, X9, X28
	1701 NotImplemented "Instruction LDUR not yet implemented."
	1702 Move [X8+72], X9
	1703 Move X0, [X27]
	1704 Move W8, [X0+224]
	1705 Compare W8, 0
	1706 JumpIfNotEqual {1709}
	1707 Call 0x1C17DFC
	1708 Move X0, [X27]
	1709 Move X8, [X0+184]
	1710 Move X8, [X8]
	1711 Compare X8, 0
	1712 JumpIfEqual {1894}
	1713 Move W9, [X8+24]
	1714 NotImplemented "Instruction CMP not yet implemented."
	1715 Move X9, [X19+872]
	1716 Compare X9, 0
	1717 JumpIfEqual {1894}
	1718 Move X22, [X9+96]
	1719 Compare X22, 0
	1720 JumpIfEqual {1894}
	1721 Move W9, [X22+24]
	1722 NotImplemented "Instruction CMP not yet implemented."
	1723 Add X9, X22, X24
	1724 Move X10, [X9+48]
	1725 Move W23, [X8]
	1726 Compare X10, 0
	1727 JumpIfEqual {1743}
	1728 Move W8, [X10+24]
	1729 Add X22, X9, 32
	1730 NotImplemented "Instruction CMP not yet implemented."
	1731 NotImplemented "Instruction CMP not yet implemented."
	1732 Move W9, [X19+801]
	1733 Compare W9, 0
	1734 JumpIfEqual {1812}
	1735 Add W9, W8, 3
	1736 NotImplemented "Instruction CMP not yet implemented."
	1737 NotImplemented "Instruction CSEL not yet implemented."
	1738 NotImplemented "Instruction SBFM not yet implemented."
	1739 Subtract W8, W8, W23
	1740 NotImplemented "Instruction CMP not yet implemented."
	1741 NotImplemented "Instruction CMP not yet implemented."
	1742 Add W23, W23, 256
	1743 Compare X25, 0
	1744 JumpIfEqual {1789}
	1745 Move X8, [X21]
	1746 Compare X8, 0
	1747 JumpIfEqual {1894}
	1748 Move W9, [X8+24]
	1749 NotImplemented "Instruction CMP not yet implemented."
	1750 Add X8, X8, X25
	1751 Move X0, [X8+32]
	1752 Compare X0, 0
	1753 JumpIfEqual {1894}
	1754 Move X1, X31
	1755 Call TMP_SubMesh.get_mesh, X0
	1756 Move X1, X0
	1757 NotImplemented "Instruction MOVI not yet implemented."
	1758 Add W2, W23, 1
	1759 Add X0, X31, 208
	1760 Move X3, X31
	1761 Move [X31+256], V0
	1762 Move [X31+264], V0
	1763 Move [X31+224], V0
	1764 Move [X31+232], V0
	1765 Move [X31+13], V0
	1766 Call TMP_MeshInfo..ctor, X0, X1, X2
	1767 Add X0, X31, 48
	1768 Add X1, X31, 208
	1769 Move W2, 80
	1770 Call 0x3EB2AC0
	1771 Move W8, [X22+24]
	1772 NotImplemented "Instruction CMP not yet implemented."
	1773 Add X8, X22, X24
	1774 Add X0, X8, 32
	1775 Add X1, X31, 48
	1776 Add W0, W23, 1
	1777 Move X1, X31
	1778 Call Mathf.NextPowerOfTwo, X0
	1779 Move W23, W0
	1780 Move X0, [X29]
	1781 Move W8, [X0+224]
	1782 Compare W8, 0
	1783 JumpIfNotEqual {1785}
	1784 Call 0x1C17DFC
	1785 Move X0, X22
	1786 Move W1, W23
	1787 Move X2, X31
	1788 Call TMP_MeshInfo.ResizeMeshInfo, X0, X1
	1789 Move X1, [X19+928]
	1790 NotImplemented "Instruction MOVI not yet implemented."
	1791 Add W2, W23, 1
	1792 Add X0, X31, 208
	1793 Move X3, X31
	1794 Move [X31+256], V0
	1795 Move [X31+264], V0
	1796 Move [X31+224], V0
	1797 Move [X31+232], V0
	1798 Move [X31+13], V0
	1799 Call TMP_MeshInfo..ctor, X0, X1, X2
	1800 Add X0, X31, 128
	1801 Add X1, X31, 208
	1802 Move W2, 80
	1803 Call 0x3EB2AC0
	1804 Move W8, [X22+24]
	1805 Compare W8, 0
	1806 JumpIfEqual {1895}
	1807 Add X8, X22, X24
	1808 Add X0, X8, 32
	1809 Add X1, X31, 128
	1810 Move W2, 80
	1811 Call 0x3EB2AC0
	1812 Move X8, [X19+872]
	1813 Compare X8, 0
	1814 JumpIfEqual {1894}
	1815 Move X22, [X8+96]
	1816 Compare X22, 0
	1817 JumpIfEqual {1894}
	1818 Move X0, [X27]
	1819 Move W8, [X0+224]
	1820 Compare W8, 0
	1821 JumpIfNotEqual {1824}
	1822 Call 0x1C17DFC
	1823 Move X0, [X27]
	1824 Move X8, [X0+184]
	1825 Move X8, [X8]
	1826 Compare X8, 0
	1827 JumpIfEqual {1894}
	1828 Move W9, [X8+24]
	1829 NotImplemented "Instruction CMP not yet implemented."
	1830 Move W9, [X22+24]
	1831 NotImplemented "Instruction CMP not yet implemented."
	1832 Add X8, X8, X28
	1833 NotImplemented "Instruction LDUR not yet implemented."
	1834 Add X25, X25, 1
	1835 Add X9, X22, X24
	1836 Add X24, X24, 80
	1837 NotImplemented "Instruction CMP not yet implemented."
	1838 Add X28, X28, 56
	1839 Move [X9+104], X8
	1840 Move X8, [X21]
	1841 Compare X8, 0
	1842 JumpIfEqual {1894}
	1843 Move X25, 0x687000
	1844 Move X25, [X25+840]
	1845 Move W9, 80
	1846 NotImplemented "Instruction SBFM not yet implemented."
	1847 NotImplemented "Instruction SMADDL not yet implemented."
	1848 Add X23, X10, 32
	1849 Add X24, X9, 32
	1850 Move W9, [X8+24]
	1851 NotImplemented "Instruction CMP not yet implemented."
	1852 Move X9, 0x622000
	1853 Move X9, [X9+1432]
	1854 Move X22, [X8]
	1855 Move X0, [X9]
	1856 Move W9, [X0+224]
	1857 Compare W9, 0
	1858 JumpIfNotEqual {1860}
	1859 Call 0x1C17DFC
	1860 Move X0, X22
	1861 Move X1, X31
	1862 Move X2, X31
	1863 Call Object.op_Inequality, X0, X1
	1864 Move TEMP, X0
	1865 And TEMP, TEMP, 1
	1866 Compare TEMP, 1
	1867 JumpIfNotEqual {1342}
	1868 Move X8, [X19+872]
	1869 Compare X8, 0
	1870 JumpIfEqual {1894}
	1871 Move X22, [X8+96]
	1872 Compare X22, 0
	1873 JumpIfEqual {1894}
	1874 Move W8, [X22+24]
	1875 NotImplemented "Instruction CMP not yet implemented."
	1876 Move X0, [X25]
	1877 Move W9, [X0+224]
	1878 Compare W9, 0
	1879 JumpIfNotEqual {1882}
	1880 Call 0x1C17DFC
	1881 Move W8, [X22+24]
	1882 NotImplemented "Instruction CMP not yet implemented."
	1883 Add X0, X22, X24
	1884 Move W2, 1
	1885 Move W1, W31
	1886 Move X3, X31
	1887 Call TMP_MeshInfo.ClearUnusedVertices, X0, X1, X2
	1888 Move X8, [X21]
	1889 Add W20, W20, 1
	1890 Add X24, X24, 80
	1891 Add X23, X23, 8
	1892 Compare X8, 0
	1893 JumpIfNotEqual {1850}
	1894 Call 0x1C17F20
	1895 Call 0x1C17F28
	1896 Call 0x1C17F44
	1897 Move X1, X31
	1898 Call 0x1C17DEC

Method: System.Void ComputeMarginSize()

Disassembly:
	0x03AD2968 MOV X4, X31
	0x03AD296C STR X0, [X8 + 0x58]
	0x03AD2970 ADRP X8, 0x686000
	0x03AD2974 LDR X8, [X8 + 0x6E0]
	0x03AD2978 LDR X0, [X8]
	0x03AD297C BL 0x3BFE7FC
	0x03AD2980 LDR X8, [X19]
	0x03AD2984 MOVZ W1, 0x1
	0x03AD2988 MOV W2, W31
	0x03AD298C MOV W3, W31
	0x03AD2990 LDR X8, [X8 + 0xB8]
	0x03AD2994 MOV X4, X31
	0x03AD2998 STR X0, [X8 + 0x60]
	0x03AD299C ADRP X8, 0x686000
	0x03AD29A0 LDR X8, [X8 + 0x6F8]
	0x03AD29A4 LDR X0, [X8]
	0x03AD29A8 BL 0x3BFE7FC
	0x03AD29AC LDR X8, [X19]
	0x03AD29B0 MOVZ W1, 0x1
	0x03AD29B4 MOV W2, W31
	0x03AD29B8 MOV W3, W31
	0x03AD29BC LDR X8, [X8 + 0xB8]
	0x03AD29C0 MOV X4, X31
	0x03AD29C4 STR X0, [X8 + 0x68]
	0x03AD29C8 ADRP X8, 0x686000
	0x03AD29CC LDR X8, [X8 + 0x6D0]
	0x03AD29D0 LDR X0, [X8]
	0x03AD29D4 BL 0x3BFE7FC
	0x03AD29D8 LDR X8, [X19]
	0x03AD29DC MOVZ W1, 0x1
	0x03AD29E0 MOV W2, W31
	0x03AD29E4 MOV W3, W31
	0x03AD29E8 LDR X8, [X8 + 0xB8]
	0x03AD29EC MOV X4, X31
	0x03AD29F0 STR X0, [X8 + 0x70]
	0x03AD29F4 ADRP X8, 0x686000
	0x03AD29F8 LDR X8, [X8 + 0x6D8]
	0x03AD29FC LDR X0, [X8]
	0x03AD2A00 BL 0x3BFE7FC
	0x03AD2A04 LDR X8, [X19]
	0x03AD2A08 MOVZ W1, 0x1
	0x03AD2A0C MOV W2, W31
	0x03AD2A10 MOV W3, W31
	0x03AD2A14 LDR X8, [X8 + 0xB8]
	0x03AD2A18 MOV X4, X31
	0x03AD2A1C STR X0, [X8 + 0x78]
	0x03AD2A20 ADRP X8, 0x686000
	0x03AD2A24 LDR X8, [X8 + 0x6F0]
	0x03AD2A28 LDR X0, [X8]
	0x03AD2A2C BL 0x3BFE7FC
	0x03AD2A30 LDR X8, [X19]
	0x03AD2A34 MOVZ W1, 0x1
	0x03AD2A38 MOV W2, W31
	0x03AD2A3C MOV W3, W31
	0x03AD2A40 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x911000
	006 Move X20, 0x622000
	007 Move W8, [X21+1264]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x622000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1264], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call TMP_Text.get_rectTransform, X0
	022 Move X8, [X20]
	023 Move X20, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {63}
	037 Move X0, [X19+896]
	038 Compare X0, 0
	039 JumpIfEqual {68}
	040 Move X1, X31
	041 Call RectTransform.get_rect, X0
	042 Move V0, [X19+832]
	043 Move V1, [X19+840]
	044 Move X0, [X19+896]
	045 Move [X19+904], S2
	046 Move V2.S[1], V3.S[0]
	047 Subtract V0, V2, V0
	048 Subtract V0, V0, V1
	049 Move [X19+856], D0
	050 Move [X19+908], S3
	051 Compare X0, 0
	052 JumpIfEqual {68}
	053 Move X1, X31
	054 Call RectTransform.get_pivot, X0
	055 Move X8, [X19]
	056 Move [X19+912], S0
	057 Move [X19+916], S1
	058 Move X0, X19
	059 Move X9, [X8+1992]
	060 Move X1, [X8+2000]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move [X19+1880], X0
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20

Method: System.Void OnDidApplyAnimationProperties()

Disassembly:
	0x03AD2A44 MOV X4, X31
	0x03AD2A48 STR X0, [X8 + 0x80]
	0x03AD2A4C ADRP X8, 0x686000
	0x03AD2A50 LDR X8, [X8 + 0x6C8]
	0x03AD2A54 LDR X0, [X8]
	0x03AD2A58 BL 0x3BFE7FC
	0x03AD2A5C LDR X8, [X19]

ISIL:
	001 Move X8, [X0]
	002 Move W9, 1
	003 Move [X0+880], W9
	004 Move [X0+776], W9
	005 Move X2, [X8+760]
	006 Move X1, [X8+768]
	007 CallNoReturn X2

Method: System.Void OnTransformParentChanged()

Disassembly:
	0x03AD2A60 MOVZ W1, 0x1
	0x03AD2A64 MOV W2, W31
	0x03AD2A68 MOV W3, W31
	0x03AD2A6C LDR X8, [X8 + 0xB8]
	0x03AD2A70 MOV X4, X31
	0x03AD2A74 STR X0, [X8 + 0x88]
	0x03AD2A78 ADRP X8, 0x686000
	0x03AD2A7C LDR X8, [X8 + 0x710]
	0x03AD2A80 LDR X0, [X8]
	0x03AD2A84 BL 0x3BFE7FC
	0x03AD2A88 LDR X8, [X19]
	0x03AD2A8C MOVZ W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+760]
	006 Move X1, [X8+768]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X8, [X19]
	009 Move X0, X19
	010 Move X2, [X8+744]
	011 Move X1, [X8+752]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X2

Method: System.Void OnRectTransformDimensionsChange()

Disassembly:
	0x03AD2A90 MOV W2, W31
	0x03AD2A94 MOV W3, W31
	0x03AD2A98 LDR X8, [X8 + 0xB8]
	0x03AD2A9C MOV X4, X31
	0x03AD2AA0 STR X0, [X8 + 0x90]
	0x03AD2AA4 ADRP X8, 0x686000
	0x03AD2AA8 LDR X8, [X8 + 0x6C0]
	0x03AD2AAC LDR X0, [X8]
	0x03AD2AB0 BL 0x3BFE7FC
	0x03AD2AB4 LDR X8, [X19]
	0x03AD2AB8 LDP X20, X19, [X31 + 0x50]
	0x03AD2ABC LDP X22, X21, [X31 + 0x40]
	0x03AD2AC0 LDP X24, X23, [X31 + 0x30]
	0x03AD2AC4 LDR X8, [X8 + 0xB8]
	0x03AD2AC8 LDP X26, X25, [X31 + 0x20]
	0x03AD2ACC LDP X28, X27, [X31 + 0x10]
	0x03AD2AD0 STR X0, [X8 + 0x98]
	0x03AD2AD4 LDP X29, X30, [X31], #0x60
	0x03AD2AD8 RET
	0x03AD2ADC STP X30, X21, [X31 - 0x20]!
	0x03AD2AE0 STP X20, X19, [X31 + 0x10]
	0x03AD2AE4 ADRP X21, 0x910000
	0x03AD2AE8 ADRP X20, 0x686000
	0x03AD2AEC LDRB W8, [X21 + 0x4FD]
	0x03AD2AF0 LDR X20, [X20 + 0x620]
	0x03AD2AF4 MOV X19, X0
	0x03AD2AF8 TBNZ X8, 0x0, 0x3AD2B10
	0x03AD2AFC ADRP X0, 0x686000
	0x03AD2B00 LDR X0, [X0 + 0x620]
	0x03AD2B04 BL 0x1C16CF4
	0x03AD2B08 MOVZ W8, 0x1
	0x03AD2B0C STRB W8, [X21 + 0x4FD]
	0x03AD2B10 LDR X0, [X20]
	0x03AD2B14 LDR X20, [X19 + 0x110]
	0x03AD2B18 LDR W8, [X0 + 0xE0]
	0x03AD2B1C CBNZ W8, 0x3AD2B24
	0x03AD2B20 BL 0x1C16DFC
	0x03AD2B24 MOV X0, X19
	0x03AD2B28 MOV X1, X20
	0x03AD2B2C LDP X20, X19, [X31 + 0x10]
	0x03AD2B30 MOV X2, X31
	0x03AD2B34 LDP X30, X21, [X31], #0x20
	0x03AD2B38 B 0x3B0FD30
	0x03AD2B3C LDRB W0, [X0 + 0x399]
	0x03AD2B40 RET
	0x03AD2B44 STR X30, [X31 - 0x30]!
	0x03AD2B48 STP X22, X21, [X31 + 0x10]
	0x03AD2B4C STP X20, X19, [X31 + 0x20]
	0x03AD2B50 ADRP X22, 0x910000
	0x03AD2B54 LDRB W8, [X22 + 0x4FE]
	0x03AD2B58 MOV W20, W1
	0x03AD2B5C MOV X19, X0
	0x03AD2B60 AND W21, W1, 0x1
	0x03AD2B64 TBNZ X8, 0x0, 0x3AD2B7C
	0x03AD2B68 ADRP X0, 0x686000
	0x03AD2B6C LDR X0, [X0 + 0x718]
	0x03AD2B70 BL 0x1C16CF4
	0x03AD2B74 MOVZ W8, 0x1
	0x03AD2B78 STRB W8, [X22 + 0x4FE]
	0x03AD2B7C LDRB W8, [X19 + 0x399]
	0x03AD2B80 CMP W8, W21
	0x03AD2B84 B.EQ 0x3AD2BD4
	0x03AD2B88 STRB W21, [X19 + 0x399]
	0x03AD2B8C TBZ X20, 0x0, 0x3AD2BD4
	0x03AD2B90 ADRP X8, 0x686000
	0x03AD2B94 LDR X8, [X8 + 0x718]
	0x03AD2B98 LDR X0, [X8]
	0x03AD2B9C LDR W8, [X0 + 0xE0]
	0x03AD2BA0 CBNZ W8, 0x3AD2BA8
	0x03AD2BA4 BL 0x1C16DFC
	0x03AD2BA8 MOV X0, X19
	0x03AD2BAC MOV X1, X31
	0x03AD2BB0 BL 0x3CD159C
	0x03AD2BB4 LDR X8, [X19]
	0x03AD2BB8 MOV X0, X19
	0x03AD2BBC LDP X20, X19, [X31 + 0x20]
	0x03AD2BC0 LDP X22, X21, [X31 + 0x10]
	0x03AD2BC4 LDR X2, [X8 + 0x2E8]
	0x03AD2BC8 LDR X1, [X8 + 0x2F0]
	0x03AD2BCC LDR X30, [X31], #0x30
	0x03AD2BD0 BR X2
	0x03AD2BD4 LDP X20, X19, [X31 + 0x20]
	0x03AD2BD8 LDP X22, X21, [X31 + 0x10]
	0x03AD2BDC LDR X30, [X31], #0x30
	0x03AD2BE0 RET

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x911000
	007 Move X20, 0x622000
	008 Move W8, [X21+1265]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x622000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1265], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call TMP_Text.get_rectTransform, X0
	023 Move X8, [X20]
	024 Move X20, X0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {72}
	038 Move X0, [X19+896]
	039 Compare X0, 0
	040 JumpIfEqual {98}
	041 Move X1, X31
	042 Call RectTransform.get_rect, X0
	043 Move V0, [X19+904]
	044 Move X8, -50233344
	045 Move V8, [X8+3880]
	046 NotImplemented "Instruction FABD not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X0, [X19+896]
	049 Compare X0, 0
	050 JumpIfEqual {98}
	051 Move X1, X31
	052 Call RectTransform.get_rect, X0
	053 Move V0, [X19+908]
	054 NotImplemented "Instruction FABD not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move X0, [X19+896]
	057 Compare X0, 0
	058 JumpIfEqual {98}
	059 Move X1, X31
	060 Call RectTransform.get_pivot, X0
	061 Move V1, [X19+912]
	062 NotImplemented "Instruction FABD not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move X0, [X19+896]
	065 Compare X0, 0
	066 JumpIfEqual {98}
	067 Move X1, X31
	068 Call RectTransform.get_pivot, X0
	069 Move V0, [X19+916]
	070 NotImplemented "Instruction FABD not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X8, [X19]
	073 Move X0, X19
	074 Move X9, [X8+2216]
	075 Move X1, [X8+2224]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X19]
	078 Move X0, X19
	079 Move X9, [X8+760]
	080 Move X1, [X8+768]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X19]
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X30, [X31+16]
	087 Move X21, [X31+24]
	088 Move X2, [X8+744]
	089 Move X1, [X8+752]
	090 Move V8, [X31+48]
	091 CallNoReturn X2
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X30, [X31+16]
	095 Move X21, [X31+24]
	096 Move V8, [X31+48]
	097 Return 
	098 Call 0x1C17F20

Method: System.Void InternalUpdate()

Disassembly:
	0x03AD2BE4 LDR X0, [X0 + 0x3A0]
	0x03AD2BE8 RET
	0x03AD2BEC STP X30, X21, [X31 - 0x20]!
	0x03AD2BF0 STP X20, X19, [X31 + 0x10]
	0x03AD2BF4 ADRP X21, 0x910000
	0x03AD2BF8 ADRP X20, 0x621000
	0x03AD2BFC LDRB W8, [X21 + 0x4FF]
	0x03AD2C00 LDR X20, [X20 + 0x598]
	0x03AD2C04 MOV X19, X0
	0x03AD2C08 TBNZ X8, 0x0, 0x3AD2C2C
	0x03AD2C0C ADRP X0, 0x686000
	0x03AD2C10 LDR X0, [X0 + 0x720]
	0x03AD2C14 BL 0x1C16CF4
	0x03AD2C18 ADRP X0, 0x621000
	0x03AD2C1C LDR X0, [X0 + 0x598]
	0x03AD2C20 BL 0x1C16CF4
	0x03AD2C24 MOVZ W8, 0x1
	0x03AD2C28 STRB W8, [X21 + 0x4FF]
	0x03AD2C2C LDR X0, [X20]
	0x03AD2C30 LDR X20, [X19 + 0x720]
	0x03AD2C34 LDR W8, [X0 + 0xE0]
	0x03AD2C38 CBNZ W8, 0x3AD2C40
	0x03AD2C3C BL 0x1C16DFC
	0x03AD2C40 MOV X0, X20
	0x03AD2C44 MOV X1, X31
	0x03AD2C48 MOV X2, X31
	0x03AD2C4C BL 0x3C3883C
	0x03AD2C50 TBZ X0, 0x0, 0x3AD2C70
	0x03AD2C54 ADRP X8, 0x686000
	0x03AD2C58 LDR X8, [X8 + 0x720]
	0x03AD2C5C MOV X0, X19
	0x03AD2C60 LDR X1, [X8]
	0x03AD2C64 BL 0x21A3894
	0x03AD2C68 STR X0, [X19 + 0x720]
	0x03AD2C6C B 0x3AD2C74
	0x03AD2C70 LDR X0, [X19 + 0x720]
	0x03AD2C74 LDP X20, X19, [X31 + 0x10]
	0x03AD2C78 LDP X30, X21, [X31], #0x20
	0x03AD2C7C RET

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W8, [X0+880]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfNotEqual {32}
	008 Move X0, [X19+896]
	009 Compare X0, 0
	010 JumpIfEqual {47}
	011 Move X1, X31
	012 Call Transform.get_lossyScale, X0
	013 Move V0, [X19+1764]
	014 Move X8, -50233344
	015 Move V2, [X8+3880]
	016 Move V8, V1
	017 NotImplemented "Instruction FABD not yet implemented."
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move X8, [X19+1144]
	020 Compare X8, 0
	021 JumpIfEqual {47}
	022 Move W9, [X8+24]
	023 Compare W9, 0
	024 JumpIfEqual {48}
	025 Move W8, [X8+32]
	026 Compare W8, 0
	027 JumpIfEqual {32}
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 Move X0, X19
	030 Call TextMeshPro.UpdateSDFScale, X0, V0
	031 Move [X19+1764], S8
	032 Move W8, [X19+881]
	033 Compare W8, 0
	034 JumpIfEqual {43}
	035 Move W8, 1
	036 Move [X19+880], W8
	037 Move X0, X19
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Move V8, [X31+32]
	041 Call TextMeshPro.OnPreRenderObject, X0
	042 Return 
	043 Move X30, [X31+16]
	044 Move X19, [X31+24]
	045 Move V8, [X31+32]
	046 Return 
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: System.Void OnPreRenderObject()

Disassembly:
	0x03ACE274 LDR X30, [X31], #0x20
	0x03ACE278 RET
	0x03ACE27C BL 0x1C16F20
	0x03ACE280 STR X30, [X31 - 0x30]!
	0x03ACE284 STP X22, X21, [X31 + 0x10]
	0x03ACE288 STP X20, X19, [X31 + 0x20]
	0x03ACE28C ADRP X20, 0x914000
	0x03ACE290 ADRP X21, 0x625000
	0x03ACE294 LDRB W8, [X20 + 0x4DB]
	0x03ACE298 LDR X21, [X21 + 0x598]
	0x03ACE29C MOV X19, X0
	0x03ACE2A0 TBNZ X8, 0x0, 0x3ACE2C4
	0x03ACE2A4 ADRP X0, 0x625000
	0x03ACE2A8 LDR X0, [X0 + 0x598]
	0x03ACE2AC BL 0x1C16CF4
	0x03ACE2B0 ADRP X0, 0x68A000
	0x03ACE2B4 LDR X0, [X0 + 0x568]
	0x03ACE2B8 BL 0x1C16CF4
	0x03ACE2BC MOVZ W8, 0x1
	0x03ACE2C0 STRB W8, [X20 + 0x4DB]
	0x03ACE2C4 LDR X0, [X21]
	0x03ACE2C8 LDR X20, [X19 + 0x3A0]
	0x03ACE2CC LDR W8, [X0 + 0xE0]
	0x03ACE2D0 CBNZ W8, 0x3ACE2D8
	0x03ACE2D4 BL 0x1C16DFC
	0x03ACE2D8 ADRP X22, 0x68A000
	0x03ACE2DC LDR X22, [X22 + 0x568]
	0x03ACE2E0 MOV X0, X20
	0x03ACE2E4 MOV X1, X31
	0x03ACE2E8 MOV X2, X31
	0x03ACE2EC BL 0x3C354F8
	0x03ACE2F0 TBZ X0, 0x0, 0x3ACE314
	0x03ACE2F4 LDR X0, [X21]
	0x03ACE2F8 LDR X20, [X19 + 0x3A0]
	0x03ACE2FC LDR W8, [X0 + 0xE0]
	0x03ACE300 CBNZ W8, 0x3ACE308
	0x03ACE304 BL 0x1C16DFC
	0x03ACE308 MOV X0, X20
	0x03ACE30C MOV X1, X31
	0x03ACE310 BL 0x3C39564
	0x03ACE314 STRB W31, [X19 + 0x760]
	0x03ACE318 LDR X0, [X22]
	0x03ACE31C LDR W8, [X0 + 0xE0]
	0x03ACE320 CBNZ W8, 0x3ACE328
	0x03ACE324 BL 0x1C16DFC
	0x03ACE328 MOV X0, X19
	0x03ACE32C MOV X1, X31
	0x03ACE330 BL 0x3B20B70
	0x03ACE334 MOV X0, X19
	0x03ACE338 LDP X20, X19, [X31 + 0x20]
	0x03ACE33C LDP X22, X21, [X31 + 0x10]
	0x03ACE340 MOV X1, X31
	0x03ACE344 LDR X30, [X31], #0x30
	0x03ACE348 B 0x3B20A78
	0x03ACE34C STP X30, X23, [X31 - 0x30]!
	0x03ACE350 STP X22, X21, [X31 + 0x10]
	0x03ACE354 STP X20, X19, [X31 + 0x20]
	0x03ACE358 ADRP X20, 0x914000
	0x03ACE35C ADRP X22, 0x68A000
	0x03ACE360 LDRB W8, [X20 + 0x4DC]
	0x03ACE364 LDR X22, [X22 + 0x338]
	0x03ACE368 MOV X19, X0
	0x03ACE36C TBNZ X8, 0x0, 0x3ACE414
	0x03ACE370 ADRP X0, 0x625000
	0x03ACE374 LDR X0, [X0 + 0xA28]
	0x03ACE378 BL 0x1C16CF4
	0x03ACE37C ADRP X0, 0x625000
	0x03ACE380 LDR X0, [X0 + 0x598]
	0x03ACE384 BL 0x1C16CF4
	0x03ACE388 ADRP X0, 0x68A000
	0x03ACE38C LDR X0, [X0 + 0x5C0]
	0x03ACE390 BL 0x1C16CF4
	0x03ACE394 ADRP X0, 0x68A000
	0x03ACE398 LDR X0, [X0 + 0x338]
	0x03ACE39C BL 0x1C16CF4
	0x03ACE3A0 ADRP X0, 0x625000
	0x03ACE3A4 LDR X0, [X0 + 0xAC8]
	0x03ACE3A8 BL 0x1C16CF4
	0x03ACE3AC ADRP X0, 0x68A000
	0x03ACE3B0 LDR X0, [X0 + 0x5C8]
	0x03ACE3B4 BL 0x1C16CF4
	0x03ACE3B8 ADRP X0, 0x68A000
	0x03ACE3BC LDR X0, [X0 + 0x5D0]
	0x03ACE3C0 BL 0x1C16CF4
	0x03ACE3C4 ADRP X0, 0x68A000
	0x03ACE3C8 LDR X0, [X0 + 0x5D8]
	0x03ACE3CC BL 0x1C16CF4
	0x03ACE3D0 ADRP X0, 0x68A000
	0x03ACE3D4 LDR X0, [X0 + 0x5E0]
	0x03ACE3D8 BL 0x1C16CF4
	0x03ACE3DC ADRP X0, 0x68A000
	0x03ACE3E0 LDR X0, [X0 + 0x5E8]
	0x03ACE3E4 BL 0x1C16CF4
	0x03ACE3E8 ADRP X0, 0x68A000
	0x03ACE3EC LDR X0, [X0 + 0x5F0]
	0x03ACE3F0 BL 0x1C16CF4
	0x03ACE3F4 ADRP X0, 0x68A000
	0x03ACE3F8 LDR X0, [X0 + 0x5F8]
	0x03ACE3FC BL 0x1C16CF4
	0x03ACE400 ADRP X0, 0x62E000
	0x03ACE404 LDR X0, [X0 + 0x790]
	0x03ACE408 BL 0x1C16CF4
	0x03ACE40C MOVZ W8, 0x1
	0x03ACE410 STRB W8, [X20 + 0x4DC]
	0x03ACE414 LDR X0, [X22]
	0x03ACE418 ADRP X23, 0x625000
	0x03ACE41C LDR W8, [X0 + 0xE0]
	0x03ACE420 LDR X23, [X23 + 0x598]
	0x03ACE424 CBNZ W8, 0x3ACE42C
	0x03ACE428 BL 0x1C16DFC
	0x03ACE42C MOV X0, X31
	0x03ACE430 BL 0x3B0DFAC
	0x03ACE434 LDR X0, [X23]
	0x03ACE438 LDR X20, [X19 + 0xF8]
	0x03ACE43C LDR W8, [X0 + 0xE0]
	0x03ACE440 CBNZ W8, 0x3ACE448
	0x03ACE444 BL 0x1C16DFC
	0x03ACE448 MOV X0, X20
	0x03ACE44C MOV X1, X31
	0x03ACE450 MOV X2, X31
	0x03ACE454 BL 0x3C3883C
	0x03ACE458 TBZ X0, 0x0, 0x3ACE49C
	0x03ACE45C MOV X0, X31
	0x03ACE460 BL 0x3B13E54
	0x03ACE464 LDR X8, [X23]
	0x03ACE468 MOV X20, X0
	0x03ACE46C LDR W9, [X8 + 0xE0]
	0x03ACE470 CBNZ W9, 0x3ACE47C
	0x03ACE474 MOV X0, X8
	0x03ACE478 BL 0x1C16DFC
	0x03ACE47C MOV X0, X20
	0x03ACE480 MOV X1, X31
	0x03ACE484 MOV X2, X31
	0x03ACE488 BL 0x3C354F8
	0x03ACE48C TBZ X0, 0x0, 0x3ACE6CC
	0x03ACE490 MOV X0, X31
	0x03ACE494 BL 0x3B13E54
	0x03ACE498 B 0x3ACE6E8
	0x03ACE49C LDR X0, [X19 + 0xF8]
	0x03ACE4A0 CBZ X0, 0x3ACE924
	0x03ACE4A4 MOV X1, X31
	0x03ACE4A8 BL 0x3AE1CD0
	0x03ACE4AC CBNZ X0, 0x3ACE4C0
	0x03ACE4B0 LDR X0, [X19 + 0xF8]
	0x03ACE4B4 CBZ X0, 0x3ACE924
	0x03ACE4B8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x915000
	005 Move W8, [X20+1266]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x626000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x626000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x68B000
	018 Move X0, [X0+1400]
	019 Call 0x1C17CF4
	020 Move X0, 0x68B000
	021 Move X0, [X0+1408]
	022 Call 0x1C17CF4
	023 Move X0, 0x68B000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1266], W8
	028 Move W8, [X19+1021]
	029 Compare W8, 0
	030 JumpIfEqual {169}
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X9, [X8+456]
	034 Move X1, [X8+464]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {43}
	040 Move W8, [X19+1708]
	041 Compare W8, 0
	042 JumpIfEqual {169}
	043 Move X8, 0x626000
	044 Move X8, [X8+1432]
	045 Move X20, [X19+248]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {92}
	059 Move X0, X19
	060 Call TextMeshPro.get_transform, X0
	061 Compare X0, 0
	062 JumpIfEqual {173}
	063 Move X1, X31
	064 Call Object.get_name, X0
	065 Move X8, 0x68B000
	066 Move X8, [X8+1408]
	067 Move X9, 0x68B000
	068 Move X9, [X9+1416]
	069 Move X1, X0
	070 Move X8, [X8]
	071 Move X3, X31
	072 Move X2, [X9]
	073 Move X0, X8
	074 Call String.Concat, X0, X1, X2
	075 Move X8, 0x626000
	076 Move X8, [X8+2600]
	077 Move X20, X0
	078 Move X8, [X8]
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X20
	085 Move X1, X19
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X2, X31
	089 Move X30, [X31+32]
	090 Call Debug.LogWarning, X0, X1
	091 Return 
	092 Move W8, [X19+880]
	093 Compare W8, 0
	094 JumpIfNotEqual {98}
	095 Move W8, [X19+1020]
	096 Compare W8, 0
	097 JumpIfEqual {169}
	098 Move W8, [X19+776]
	099 Compare W8, 0
	100 JumpIfEqual {104}
	101 Move X0, X19
	102 Call TextMeshPro.UpdateMask, X0
	103 Move [X19+776], W31
	104 Move W8, [X19+769]
	105 Compare W8, 0
	106 JumpIfEqual {112}
	107 Move X8, [X19]
	108 Move X0, X19
	109 Move X9, [X8+2088]
	110 Move X1, [X8+2096]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X0, X19
	113 Move X1, X31
	114 Call TMP_Text.ParseInputText, X0
	115 Move X8, 0x68B000
	116 Move X8, [X8+1400]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move X0, X31
	123 Call TMP_FontAsset.UpdateFontFeaturesForFontAssetsInQueue
	124 Move W8, [X19+568]
	125 Compare W8, 0
	126 JumpIfEqual {135}
	127 Move V2, [X19+492]
	128 Move V0, [X19+596]
	129 Move V1, [X19+592]
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 NotImplemented "Instruction FCSEL not yet implemented."
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 NotImplemented "Instruction FCSEL not yet implemented."
	134 Move [X19+484], S2
	135 Move V0, [X19+596]
	136 Move V1, [X19+592]
	137 Move X0, [X19+1768]
	138 Move [X19+572], S0
	139 Move [X19+576], S1
	140 Move [X19+700], W31
	141 Move [X19+724], W31
	142 Move [X19+760], W31
	143 Move [X19+880], W31
	144 Move [X19+1020], W31
	145 Move [X19+1708], W31
	146 Move [X19+588], W31
	147 Move [X19+580], W31
	148 Compare X0, 0
	149 JumpIfEqual {173}
	150 Move X1, X31
	151 Call Renderer.get_enabled, X0
	152 And W1, W0, 1
	153 Move X0, X19
	154 Call TextMeshPro.SetActiveSubTextObjectRenderers, X0, X1
	155 Move W8, [X19+588]
	156 Compare W8, 0
	157 JumpIfNotEqual {169}
	158 Move X8, [X19]
	159 Move X0, X19
	160 Move X9, [X8+2584]
	161 Move X1, [X8+2592]
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move W8, [X19+580]
	164 Move W9, [X19+588]
	165 Add W8, W8, 1
	166 Move [X19+580], W8
	167 Compare W9, 0
	168 JumpIfEqual {158}
	169 Move X20, [X31+16]
	170 Move X19, [X31+24]
	171 Move X30, [X31+32]
	172 Return 
	173 Call 0x1C17F20

Method: System.Void GenerateTextMesh()

Disassembly:
	0x03ABD008 ADD X0, X8, 0x48
	0x03ABD00C MOV X1, X31
	0x03ABD010 BL 0x3C9BF88
	0x03ABD014 LDR X8, [X19 + 0x698]
	0x03ABD018 CBZ X8, 0x3AC3158
	0x03ABD01C MOV W26, W0
	0x03ABD020 ADD X0, X8, 0x48
	0x03ABD024 MOV X1, X31
	0x03ABD028 BL 0x3C9BF98
	0x03ABD02C LDR X0, [X25 + 0x20]
	0x03ABD030 CBZ X0, 0x3AC3158
	0x03ABD034 LDRB W8, [X19 + 0x305]
	0x03ABD038 MOV V8.16B, V0.16B
	0x03ABD03C LDR V0, [X31 + 0x98]
	0x03ABD040 LDR V12, [X25 + 0x2C]
	0x03ABD044 CMP W8, 0x0
	0x03ABD048 FMOV S1, 1
	0x03ABD04C MOV X1, X31
	0x03ABD050 FCSEL S11, S0, S1, EQ
	0x03ABD054 BL 0x3C9C4E0
	0x03ABD058 LDR X8, [X19 + 0x698]
	0x03ABD05C CBZ X8, 0x3AC3158
	0x03ABD060 ADD X0, X8, 0x48
	0x03ABD064 MOV X1, X31
	0x03ABD068 MOV V9.16B, V0.16B
	0x03ABD06C BL 0x3C9BFB8
	0x03ABD070 LDR X8, [X19 + 0x698]
	0x03ABD074 STR S0, [X31 + 0x110]
	0x03ABD078 CBZ X8, 0x3AC3158
	0x03ABD07C ADD X0, X8, 0x48
	0x03ABD080 MOV X1, X31
	0x03ABD084 BL 0x3C9BFE8
	0x03ABD088 LDR X8, [X19 + 0x698]
	0x03ABD08C CBZ X8, 0x3AC3158
	0x03ABD090 LDR V13, [X19 + 0x404]
	0x03ABD094 ADD X0, X8, 0x48
	0x03ABD098 MOV X1, X31
	0x03ABD09C MOV V10.16B, V0.16B
	0x03ABD0A0 BL 0x3C9BF98
	0x03ABD0A4 LDR X8, [X19 + 0x698]
	0x03ABD0A8 CBZ X8, 0x3AC3158
	0x03ABD0AC SCVTF S1, W26
	0x03ABD0B0 FMUL S3, S15, S10
	0x03ABD0B4 FDIV S1, S14, S1
	0x03ABD0B8 FMUL S3, S3, S13
	0x03ABD0BC FMUL S1, S1, S8
	0x03ABD0C0 FMUL S0, S3, S0
	0x03ABD0C4 FMUL S2, S12, S9
	0x03ABD0C8 STR S0, [X31 + 0x14C]
	0x03ABD0CC FMUL S0, S1, S11
	0x03ABD0D0 ADD X0, X8, 0x48
	0x03ABD0D4 MOV X1, X31
	0x03ABD0D8 FMUL S11, S0, S2
	0x03ABD0DC BL 0x3C9BFF8
	0x03ABD0E0 B 0x3ABD4B8
	0x03ABD0E4 ADRP X8, 0x638000
	0x03ABD0E8 LDR X8, [X8 + 0x170]
	0x03ABD0EC LDR X0, [X8]
	0x03ABD0F0 LDR W8, [X0 + 0xE0]
	0x03ABD0F4 CBNZ W8, 0x3ABD0FC
	0x03ABD0F8 BL 0x1C16DFC
	0x03ABD0FC MOV W0, W25
	0x03ABD100 MOV X1, X31
	0x03ABD104 BL 0x331A99C
	0x03ABD108 FMOV S0, 1
	0x03ABD10C STR S0, [X31 + 0x138]
	0x03ABD110 TBZ X0, 0x0, 0x3ABD144
	0x03ABD114 ADRP X8, 0x638000
	0x03ABD118 LDR X8, [X8 + 0x170]
	0x03ABD11C LDR W25, [X31 + 0x106C]
	0x03ABD120 LDR X0, [X8]
	0x03ABD124 LDR W8, [X0 + 0xE0]
	0x03ABD128 CBNZ W8, 0x3ABD130
	0x03ABD12C BL 0x1C16DFC
	0x03ABD130 MOV W0, W25
	0x03ABD134 MOV X1, X31
	0x03ABD138 BL 0x331AE30
	0x03ABD13C AND W8, W0, 0xFFFF
	0x03ABD140 STR W8, [X31 + 0x106C]
	0x03ABD144 LDR W8, [X19 + 0x644]
	0x03ABD148 CBNZ W8, 0x3ABCDA8
	0x03ABD14C LDR X8, [X23]
	0x03ABD150 CBZ X8, 0x3AC3158
	0x03ABD154 LDR X8, [X8 + 0x38]
	0x03ABD158 CBZ X8, 0x3AC3158
	0x03ABD15C LDRSW X9, [X26]
	0x03ABD160 LDR W11, [X8 + 0x18]
	0x03ABD164 CMP W9, W11
	0x03ABD168 B.CS 0x3AC3264
	0x03ABD16C MADD X10, X9, X28, X8
	0x03ABD170 LDR X10, [X10 + 0x30]
	0x03ABD174 STR X10, [X19 + 0x648]
	0x03ABD178 CBZ X10, 0x3ABCD70
	0x03ABD17C MADD X12, X9, X28, X8
	0x03ABD180 LDR X10, [X12 + 0x38]
	0x03ABD184 LDR X22, [X31 + 0x150]
	0x03ABD188 STR X10, [X19 + 0x100]
	0x03ABD18C LDR X13, [X12 + 0x50]
	0x03ABD190 STR X13, [X19 + 0x118]
	0x03ABD194 LDR W12, [X12 + 0x58]
	0x03ABD198 STR W12, [X19 + 0x120]
	0x03ABD19C CBZ W20, 0x3ABD1D8
	0x03ABD1A0 LDR X12, [X19 + 0x478]
	0x03ABD1A4 CBZ X12, 0x3AC3158
	0x03ABD1A8 LDRSW X13, [X31 + 0x1038]
	0x03ABD1AC LDR W14, [X12 + 0x18]
	0x03ABD1B0 CMP W13, W14
	0x03ABD1B4 B.CS 0x3AC3264
	0x03ABD1B8 MOVZ W14, 0xC
	0x03ABD1BC MADD X12, X13, X14, X12
	0x03ABD1C0 LDR W12, [X12 + 0x20]
	0x03ABD1C4 CMP W12, 0xA
	0x03ABD1C8 B.NE 0x3ABD1D8
	0x03ABD1CC LDR W12, [X19 + 0x498]
	0x03ABD1D0 CMP W9, W12
	0x03ABD1D4 B.NE 0x3ABDBC0
	0x03ABD1D8 CBZ X10, 0x3AC3158
	0x03ABD1DC LDR V11, [X19 + 0x1E8]
	0x03ABD1E0 ADD X0, X10, 0x50
	0x03ABD1E4 MOV X1, X31
	0x03ABD1E8 BL 0x3C9BF88
	0x03ABD1EC LDR X8, [X19 + 0x100]
	0x03ABD1F0 CBZ X8, 0x3AC3158
	0x03ABD1F4 MOV W25, W0
	0x03ABD1F8 ADD X0, X8, 0x50
	0x03ABD1FC MOV X1, X31
	0x03ABD200 BL 0x3C9BF98
	0x03ABD204 LDRB W8, [X19 + 0x305]
	0x03ABD208 MOV V8.16B, V0.16B
	0x03ABD20C LDR W9, [X31 + 0x106C]
	0x03ABD210 LDR V0, [X31 + 0x98]
	0x03ABD214 CMP W8, 0x0
	0x03ABD218 FMOV S1, 1
	0x03ABD21C MOVZ W8, 0x2026
	0x03ABD220 FCSEL S12, S0, S1, EQ
	0x03ABD224 CMP W9, W8
	0x03ABD228 CSET W8, EQ
	0x03ABD22C AND W8, W20, W8, 0x0
	0x03ABD230 FMOV S1, W31
	0x03ABD234 FMOV S0, W31
	0x03ABD238 STR S0, [X31 + 0x110]
	0x03ABD23C TBNZ X8, 0x0, 0x3ABD270
	0x03ABD240 LDR X8, [X22]
	0x03ABD244 CBZ X8, 0x3AC3158
	0x03ABD248 ADD X0, X8, 0x50
	0x03ABD24C MOV X1, X31
	0x03ABD250 BL 0x3C9BFB8
	0x03ABD254 LDR X8, [X22]
	0x03ABD258 STR S0, [X31 + 0x110]
	0x03ABD25C CBZ X8, 0x3AC3158
	0x03ABD260 ADD X0, X8, 0x50
	0x03ABD264 MOV X1, X31
	0x03ABD268 BL 0x3C9BFF8
	0x03ABD26C MOV V1.16B, V0.16B
	0x03ABD270 LDR X8, [X19 + 0x648]
	0x03ABD274 CBZ X8, 0x3AC3158
	0x03ABD278 LDR X0, [X8 + 0x20]
	0x03ABD27C STR S1, [X31 + 0x100]
	0x03ABD280 CBZ X0, 0x3AC3158
	0x03ABD284 LDR V13, [X19 + 0x404]
	0x03ABD288 LDR V14, [X8 + 0x2C]
	0x03ABD28C MOV X1, X31
	0x03ABD290 BL 0x3C9C4E0
	0x03ABD294 LDR X8, [X22]
	0x03ABD298 CBZ X8, 0x3AC3158
	0x03ABD29C ADD X0, X8, 0x50
	0x03ABD2A0 MOV X1, X31
	0x03ABD2A4 MOV V9.16B, V0.16B
	0x03ABD2A8 BL 0x3C9BFE8
	0x03ABD2AC LDR X8, [X22]
	0x03ABD2B0 CBZ X8, 0x3AC3158
	0x03ABD2B4 LDR V15, [X19 + 0x404]
	0x03ABD2B8 ADD X0, X8, 0x50
	0x03ABD2BC MOV X1, X31
	0x03ABD2C0 MOV V10.16B, V0.16B
	0x03ABD2C4 BL 0x3C9BF98
	0x03ABD2C8 LDR X8, [X19 + 0x368]
	0x03ABD2CC CBZ X8, 0x3AC3158
	0x03ABD2D0 LDR X9, [X8 + 0x38]
	0x03ABD2D4 CBZ X9, 0x3AC3158
	0x03ABD2D8 LDRSW X10, [X26]
	0x03ABD2DC LDR W11, [X9 + 0x18]
	0x03ABD2E0 CMP W10, W11
	0x03ABD2E4 B.CS 0x3AC3264
	0x03ABD2E8 LDR V1, [X31 + 0x138]
	0x03ABD2EC SCVTF S2, W25
	0x03ABD2F0 MADD X9, X10, X28, X9
	0x03ABD2F4 STR W31, [X9 + 0x2C]
	0x03ABD2F8 FMUL S1, S1, S11
	0x03ABD2FC FDIV S1, S1, S2
	0x03ABD300 FMUL S1, S1, S8
	0x03ABD304 FMUL S1, S1, S12
	0x03ABD308 FMUL S2, S1, S13
	0x03ABD30C FMUL S2, S2, S14
	0x03ABD310 FMUL S11, S2, S9
	0x03ABD314 STR S11, [X9 + 0x160]
	0x03ABD318 LDRSW X9, [X19 + 0x120]
	0x03ABD31C FMUL S1, S1, S10
	0x03ABD320 FMUL S1, S1, S15
	0x03ABD324 FMUL S0, S1, S0
	0x03ABD328 STR S0, [X31 + 0x14C]
	0x03ABD32C CBZ W9, 0x3ABD518
	0x03ABD330 LDR X10, [X19 + 0x708]
	0x03ABD334 CBZ X10, 0x3AC3158
	0x03ABD338 LDR W11, [X10 + 0x18]
	0x03ABD33C CMP W9, W11
	0x03ABD340 B.CS 0x3AC3264
	0x03ABD344 ADD X9, X10, X9, 0x3, LSL
	0x03ABD348 LDR X9, [X9 + 0x20]
	0x03ABD34C CBZ X9, 0x3AC3158
	0x03ABD350 LDR V0, [X9 + 0x54]
	0x03ABD354 B 0x3ABD51C
	0x03ABD358 LDR X8, [X22]
	0x03ABD35C CBZ X8, 0x3AC3158
	0x03ABD360 ADD X0, X8, 0x50
	0x03ABD364 MOV X1, X31
	0x03ABD368 BL 0x3C9BF88
	0x03ABD36C LDR X8, [X22]
	0x03ABD370 CBZ X8, 0x3AC3158
	0x03ABD374 MOV W26, W0
	0x03ABD378 ADD X0, X8, 0x50
	0x03ABD37C MOV X1, X31
	0x03ABD380 BL 0x3C9BF98
	0x03ABD384 LDRB W9, [X19 + 0x305]
	0x03ABD388 MOV V8.16B, V0.16B
	0x03ABD38C LDR V0, [X31 + 0x98]
	0x03ABD390 LDR X8, [X19 + 0x100]
	0x03ABD394 CMP W9, 0x0
	0x03ABD398 FMOV S1, 1
	0x03ABD39C FCSEL S9, S0, S1, EQ
	0x03ABD3A0 CBZ X8, 0x3AC3158
	0x03ABD3A4 ADD X0, X8, 0x50
	0x03ABD3A8 MOV X1, X31
	0x03ABD3AC STR S14, [X31 + 0x14C]
	0x03ABD3B0 BL 0x3C9BFB8
	0x03ABD3B4 LDR X0, [X25 + 0x20]
	0x03ABD3B8 CBZ X0, 0x3AC3158
	0x03ABD3BC ADD X8, X31, 0x1000
	0x03ABD3C0 ADD X8, X8, 0x70
	0x03ABD3C4 MOV X1, X31
	0x03ABD3C8 MOV V12.16B, V0.16B
	0x03ABD3CC STR S15, [X31 + 0x140]
	0x03ABD3D0 BL 0x3C9C4A4
	0x03ABD3D4 LDR V0, [X27 + 0xE]
	0x03ABD3D8 LDR W8, [X31 + 0x1080]
	0x03ABD3DC ADD X0, X31, 0xF90
	0x03ABD3E0 MOV X1, X31
	0x03ABD3E4 STR V0, [X27]
	0x03ABD3E8 STR W8, [X31 + 0xFA0]
	0x03ABD3EC BL 0x3C9C2D4
	0x03ABD3F0 LDR X0, [X25 + 0x20]
	0x03ABD3F4 CBZ X0, 0x3AC3158
	0x03ABD3F8 LDR V10, [X25 + 0x2C]
	0x03ABD3FC MOV X1, X31
	0x03ABD400 MOV V11.16B, V0.16B
	0x03ABD404 BL 0x3C9C4E0
	0x03ABD408 LDR X8, [X22]
	0x03ABD40C CBZ X8, 0x3AC3158
	0x03ABD410 ADD X0, X8, 0x50
	0x03ABD414 MOV X1, X31
	0x03ABD418 STR S0, [X31 + 0x134]
	0x03ABD41C BL 0x3C9BFB8
	0x03ABD420 LDR X8, [X22]
	0x03ABD424 CBZ X8, 0x3AC3158
	0x03ABD428 ADD X0, X8, 0x50
	0x03ABD42C MOV X1, X31
	0x03ABD430 MOV V15.16B, V0.16B
	0x03ABD434 MOV V14.16B, V8.16B
	0x03ABD438 BL 0x3C9BFE8
	0x03ABD43C LDR X8, [X22]
	0x03ABD440 CBZ X8, 0x3AC3158
	0x03ABD444 LDR V8, [X19 + 0x404]
	0x03ABD448 ADD X0, X8, 0x50
	0x03ABD44C MOV X1, X31
	0x03ABD450 MOV V13.16B, V0.16B
	0x03ABD454 BL 0x3C9BF98
	0x03ABD458 LDR X8, [X19 + 0x100]
	0x03ABD45C CBZ X8, 0x3AC3158
	0x03ABD460 LDR V4, [X31 + 0x14C]
	0x03ABD464 LDR V3, [X31 + 0x140]
	0x03ABD468 SCVTF S1, W26
	0x03ABD46C FDIV S2, S12, S11
	0x03ABD470 FDIV S1, S4, S1
	0x03ABD474 LDR V4, [X31 + 0x134]
	0x03ABD478 FMUL S3, S3, S13
	0x03ABD47C FMUL S3, S3, S8
	0x03ABD480 FMUL S2, S2, S10
	0x03ABD484 FMUL S1, S1, S14
	0x03ABD488 FMUL S0, S3, S0
	0x03ABD48C FMUL S2, S2, S4
	0x03ABD490 STR S0, [X31 + 0x14C]
	0x03ABD494 FMUL S0, S1, S9
	0x03ABD498 FMUL S11, S0, S2
	0x03ABD49C FDIV S8, S0, S11
	0x03ABD4A0 FMUL S0, S8, S15
	0x03ABD4A4 ADD X0, X8, 0x50
	0x03ABD4A8 MOV X1, X31
	0x03ABD4AC STR S0, [X31 + 0x110]
	0x03ABD4B0 BL 0x3C9BFF8
	0x03ABD4B4 FMUL S0, S8, S0
	0x03ABD4B8 LDR X8, [X19 + 0x368]
	0x03ABD4BC LDR X26, [X31 + 0x160]
	0x03ABD4C0 STR X25, [X19 + 0x648]
	0x03ABD4C4 CBZ X8, 0x3AC3158
	0x03ABD4C8 LDR X9, [X8 + 0x38]
	0x03ABD4CC CBZ X9, 0x3AC3158
	0x03ABD4D0 LDRSW X10, [X26]
	0x03ABD4D4 LDR W11, [X9 + 0x18]
	0x03ABD4D8 CMP W10, W11
	0x03ABD4DC B.CS 0x3AC3264
	0x03ABD4E0 MADD X9, X10, X28, X9
	0x03ABD4E4 MOVZ W10, 0x1
	0x03ABD4E8 STR W10, [X9 + 0x2C]
	0x03ABD4EC STR S11, [X9 + 0x160]
	0x03ABD4F0 LDR X10, [X19 + 0x698]
	0x03ABD4F4 STR S0, [X31 + 0x100]
	0x03ABD4F8 FMOV S0, W31
	0x03ABD4FC STR X10, [X9 + 0x40]
	0x03ABD500 LDR X10, [X19 + 0x100]
	0x03ABD504 STR X10, [X9 + 0x38]
	0x03ABD508 LDR W10, [X19 + 0x120]
	0x03ABD50C STR W10, [X9 + 0x58]
	0x03ABD510 STR W24, [X19 + 0x120]
	0x03ABD514 B 0x3ABD51C
	0x03ABD518 LDR V0, [X19 + 0x618]
	0x03ABD51C LDR W9, [X31 + 0x106C]
	0x03ABD520 MOVZ W10, 0xAD
	0x03ABD524 STR S0, [X31 + 0x140]
	0x03ABD528 FMOV S0, W31
	0x03ABD52C CMP W9, 0x3
	0x03ABD530 CCMP W9, W10, 0x4, NE
	0x03ABD534 FCSEL S13, S0, S11, EQ
	0x03ABD538 LDR X8, [X8 + 0x38]
	0x03ABD53C CBZ X8, 0x3AC3158
	0x03ABD540 LDRSW X10, [X26]
	0x03ABD544 LDR W11, [X8 + 0x18]
	0x03ABD548 CMP W10, W11
	0x03ABD54C B.CS 0x3AC3264
	0x03ABD550 MADD X8, X10, X28, X8
	0x03ABD554 STRH W9, [X8 + 0x20]
	0x03ABD558 LDR V0, [X19 + 0x1E8]
	0x03ABD55C STR S0, [X8 + 0x60]
	0x03ABD560 LDR W9, [X19 + 0x4EC]
	0x03ABD564 STR W9, [X8 + 0x164]
	0x03ABD568 LDR X8, [X19 + 0x368]
	0x03ABD56C CBZ X8, 0x3AC3158
	0x03ABD570 LDR X8, [X8 + 0x38]
	0x03ABD574 CBZ X8, 0x3AC3158
	0x03ABD578 LDRSW X9, [X26]
	0x03ABD57C LDR W10, [X8 + 0x18]
	0x03ABD580 CMP W9, W10
	0x03ABD584 B.CS 0x3AC3264
	0x03ABD588 LDR W10, [X19 + 0x158]
	0x03ABD58C NOP
	0x03ABD590 MADD X8, X9, X28, X8
	0x03ABD594 STR W10, [X8 + 0x168]
	0x03ABD598 LDR X8, [X19 + 0x368]
	0x03ABD59C CBZ X8, 0x3AC3158
	0x03ABD5A0 LDR X8, [X8 + 0x38]
	0x03ABD5A4 CBZ X8, 0x3AC3158
	0x03ABD5A8 LDRSW X9, [X26]
	0x03ABD5AC LDR W10, [X8 + 0x18]
	0x03ABD5B0 CMP W9, W10
	0x03ABD5B4 B.CS 0x3AC3264
	0x03ABD5B8 LDR W10, [X19 + 0x15C]
	0x03ABD5BC NOP
	0x03ABD5C0 MADD X8, X9, X28, X8
	0x03ABD5C4 STR W10, [X8 + 0x170]
	0x03ABD5C8 LDR X8, [X19 + 0x368]
	0x03ABD5CC CBZ X8, 0x3AC3158
	0x03ABD5D0 LDR X22, [X8 + 0x38]
	0x03ABD5D4 CBZ X22, 0x3AC3158
	0x03ABD5D8 ADRP X8, 0x69B000
	0x03ABD5DC LDRSW X24, [X26]
	0x03ABD5E0 LDR X8, [X8 + 0x3E0]
	0x03ABD5E4 LDR X0, [X31 + 0xD0]
	0x03ABD5E8 LDR X1, [X8]
	0x03ABD5EC ADD X8, X31, 0x1A0
	0x03ABD5F0 BL 0x267140C
	0x03ABD5F4 LDR V0, [X31 + 0x1A]
	0x03ABD5F8 LDR W8, [X31 + 0x1B0]
	0x03ABD5FC STR V0, [X27 + 0xE]
	0x03ABD600 STR W8, [X31 + 0x1080]
	0x03ABD604 LDR W8, [X22 + 0x18]
	0x03ABD608 CMP W24, W8
	0x03ABD60C B.CS 0x3AC3264
	0x03ABD610 LDR W8, [X31 + 0x1080]
	0x03ABD614 LDR V0, [X27 + 0xE]
	0x03ABD618 NOP
	0x03ABD61C MADD X9, X24, X28, X22
	0x03ABD620 ADD X9, X9, 0x17C
	0x03ABD624 STR W8, [X9 + 0x10]
	0x03ABD628 STR V0, [X9]
	0x03ABD62C LDR X8, [X23]
	0x03ABD630 CBZ X8, 0x3AC3158
	0x03ABD634 LDR X8, [X8 + 0x38]
	0x03ABD638 CBZ X8, 0x3AC3158
	0x03ABD63C LDRSW X9, [X26]
	0x03ABD640 LDR W10, [X8 + 0x18]
	0x03ABD644 CMP W9, W10
	0x03ABD648 B.CS 0x3AC3264
	0x03ABD64C LDR W10, [X19 + 0x25C]
	0x03ABD650 NOP
	0x03ABD654 MADD X8, X9, X28, X8
	0x03ABD658 STR W10, [X8 + 0x190]
	0x03ABD65C LDR X8, [X19 + 0x648]
	0x03ABD660 CBZ X8, 0x3AC3158
	0x03ABD664 LDR X0, [X8 + 0x20]
	0x03ABD668 CBZ X0, 0x3AC3158
	0x03ABD66C ADD X8, X31, 0x1A0
	0x03ABD670 MOV X1, X31
	0x03ABD674 BL 0x3C9C4A4
	0x03ABD678 LDR W25, [X31 + 0x106C]
	0x03ABD67C LDR V0, [X31 + 0x1A]
	0x03ABD680 LDR W8, [X31 + 0x1B0]
	0x03ABD684 CMP W25, 0x10000
	0x03ABD688 STR V0, [X27 + 0x9]
	0x03ABD68C STR W8, [X31 + 0x1030]
	0x03ABD690 B.LT 0x3ABD6A4
	0x03ABD694 ADRP X22, 0x69B000
	0x03ABD698 LDR X22, [X22 + 0x338]
	0x03ABD69C MOV W29, W31
	0x03ABD6A0 B 0x3ABD6D4
	0x03ABD6A4 ADRP X8, 0x638000
	0x03ABD6A8 LDR X8, [X8 + 0x170]
	0x03ABD6AC ADRP X22, 0x69B000
	0x03ABD6B0 LDR X0, [X8]
	0x03ABD6B4 LDR W8, [X0 + 0xE0]
	0x03ABD6B8 LDR X22, [X22 + 0x338]
	0x03ABD6BC CBNZ W8, 0x3ABD6C4
	0x03ABD6C0 BL 0x1C16DFC
	0x03ABD6C4 MOV W0, W25
	0x03ABD6C8 MOV X1, X31
	0x03ABD6CC BL 0x3317FCC
	0x03ABD6D0 AND W29, W0, 0x1
	0x03ABD6D4 LDRB W8, [X19 + 0x2F9]
	0x03ABD6D8 LDR V0, [X19 + 0x2A8]
	0x03ABD6DC STR W31, [X19 + 0x2FC]
	0x03ABD6E0 STR S0, [X31 + 0x128]
	0x03ABD6E4 CBZ W8, 0x3ABD7A0
	0x03ABD6E8 LDR X9, [X19 + 0x648]
	0x03ABD6EC CBZ X9, 0x3AC3158
	0x03ABD6F0 LDR W8, [X26]
	0x03ABD6F4 LDR W24, [X9 + 0x28]
	0x03ABD6F8 LDR W9, [X31 + 0x90]
	0x03ABD6FC CMP W8, W9
	0x03ABD700 B.GE 0x3ABD7B4
	0x03ABD704 LDR X9, [X23]
	0x03ABD708 CBZ X9, 0x3AC3158
	0x03ABD70C LDR X9, [X9 + 0x38]
	0x03ABD710 CBZ X9, 0x3AC3158
	0x03ABD714 LDR W10, [X9 + 0x18]
	0x03ABD718 ADD W8, W8, 0x1
	0x03ABD71C CMP W8, W10
	0x03ABD720 B.CS 0x3AC3264
	0x03ABD724 SMADDL X8, X8, X28, X9
	0x03ABD728 LDR X8, [X8 + 0x30]
	0x03ABD72C CBZ X8, 0x3AC3158
	0x03ABD730 LDR X9, [X31 + 0x150]
	0x03ABD734 LDR X9, [X9]
	0x03ABD738 CBZ X9, 0x3AC3158
	0x03ABD73C LDR X9, [X9 + 0x128]
	0x03ABD740 CBZ X9, 0x3AC3158
	0x03ABD744 LDR X0, [X9 + 0x18]
	0x03ABD748 CBZ X0, 0x3AC3158
	0x03ABD74C ADRP X9, 0x69B000
	0x03ABD750 LDR W8, [X8 + 0x28]
	0x03ABD754 LDR X9, [X9 + 0x320]
	0x03ABD758 ADD X2, X31, 0xF88
	0x03ABD75C ORR W1, W24, W8, 0x10
	0x03ABD760 LDR X3, [X9]
	0x03ABD764 BL 0x2B10A7C
	0x03ABD768 FMOV S14, W31
	0x03ABD76C TBZ X0, 0x0, 0x3ABD7CC
	0x03ABD770 LDR X8, [X31 + 0xF88]
	0x03ABD774 CBZ X8, 0x3AC3158
	0x03ABD778 LDRB W9, [X8 + 0x39]
	0x03ABD77C LDP S0, S14, [X8 + 0x1C]
	0x03ABD780 LDR V1, [X31 + 0x128]
	0x03ABD784 LDP S8, S9, [X8 + 0x14]
	0x03ABD788 ANDS W31, W9, 0x1
	0x03ABD78C STR S0, [X31 + 0x120]
	0x03ABD790 FMOV S0, W31
	0x03ABD794 FCSEL S1, S1, S0, EQ
	0x03ABD798 STR S1, [X31 + 0x128]
	0x03ABD79C B 0x3ABD7DC
	0x03ABD7A0 FMOV S0, W31
	0x03ABD7A4 STR S0, [X31 + 0x120]
	0x03ABD7A8 FMOV S9, W31
	0x03ABD7AC FMOV S8, W31
	0x03ABD7B0 B 0x3ABD8A8
	0x03ABD7B4 FMOV S0, W31
	0x03ABD7B8 FMOV S14, W31
	0x03ABD7BC STR S0, [X31 + 0x120]
	0x03ABD7C0 FMOV S9, W31
	0x03ABD7C4 FMOV S8, W31
	0x03ABD7C8 B 0x3ABD7E0
	0x03ABD7CC FMOV S0, W31
	0x03ABD7D0 STR S0, [X31 + 0x120]
	0x03ABD7D4 FMOV S9, W31
	0x03ABD7D8 FMOV S8, W31
	0x03ABD7DC LDR W8, [X26]
	0x03ABD7E0 SUBS W8, W8, 0x1
	0x03ABD7E4 B.LT 0x3ABD8A0
	0x03ABD7E8 LDR X9, [X23]
	0x03ABD7EC CBZ X9, 0x3AC3158
	0x03ABD7F0 LDR X9, [X9 + 0x38]
	0x03ABD7F4 CBZ X9, 0x3AC3158
	0x03ABD7F8 LDR W10, [X9 + 0x18]
	0x03ABD7FC CMP W8, W10
	0x03ABD800 B.CS 0x3AC3264
	0x03ABD804 UMADDL X8, X8, X28, X9
	0x03ABD808 LDR X8, [X8 + 0x30]
	0x03ABD80C CBZ X8, 0x3AC3158
	0x03ABD810 LDR X9, [X31 + 0x150]
	0x03ABD814 LDR X9, [X9]
	0x03ABD818 CBZ X9, 0x3AC3158
	0x03ABD81C LDR X9, [X9 + 0x128]
	0x03ABD820 CBZ X9, 0x3AC3158
	0x03ABD824 LDR X0, [X9 + 0x18]
	0x03ABD828 CBZ X0, 0x3AC3158
	0x03ABD82C ADRP X9, 0x69B000
	0x03ABD830 LDR W8, [X8 + 0x28]
	0x03ABD834 LDR X9, [X9 + 0x320]
	0x03ABD838 ADD X2, X31, 0xF88
	0x03ABD83C ORR W1, W8, W24, 0x10
	0x03ABD840 LDR X3, [X9]
	0x03ABD844 BL 0x2B10A7C
	0x03ABD848 TBZ X0, 0x0, 0x3ABD8A0
	0x03ABD84C LDR X8, [X31 + 0xF88]
	0x03ABD850 CBZ X8, 0x3AC3158
	0x03ABD854 LDP S4, S5, [X8 + 0x28]
	0x03ABD858 LDP S6, S7, [X8 + 0x30]
	0x03ABD85C LDR V2, [X31 + 0x120]
	0x03ABD860 MOV V0.16B, V8.16B
	0x03ABD864 MOV V1.16B, V9.16B
	0x03ABD868 MOV V3.16B, V14.16B
	0x03ABD86C MOV X0, X31
	0x03ABD870 BL 0x3AEBF44
	0x03ABD874 LDR X8, [X31 + 0xF88]
	0x03ABD878 STR S2, [X31 + 0x120]
	0x03ABD87C CBZ X8, 0x3AC3158
	0x03ABD880 LDRB W8, [X8 + 0x39]
	0x03ABD884 MOV V9.16B, V1.16B
	0x03ABD888 LDR V1, [X31 + 0x128]
	0x03ABD88C MOV V8.16B, V0.16B
	0x03ABD890 ANDS W31, W8, 0x1
	0x03ABD894 FMOV S0, W31
	0x03ABD898 FCSEL S1, S1, S0, EQ
	0x03ABD89C STR S1, [X31 + 0x128]
	0x03ABD8A0 LDR V0, [X31 + 0x120]
	0x03ABD8A4 STR S0, [X19 + 0x2FC]
	0x03ABD8A8 LDRB W8, [X19 + 0xF0]
	0x03ABD8AC CBZ W8, 0x3ABD908
	0x03ABD8B0 LDR V10, [X19 + 0x640]
	0x03ABD8B4 ADD X0, X31, 0x1000
	0x03ABD8B8 ADD X0, X0, 0x20
	0x03ABD8BC MOV X1, X31
	0x03ABD8C0 BL 0x3C9C2EC
	0x03ABD8C4 LDR V1, [X19 + 0x2D4]
	0x03ABD8C8 FMOV S2, 1
	0x03ABD8CC MOVZ W9, 0x200B
	0x03ABD8D0 FSUB S1, S2, S1
	0x03ABD8D4 FMUL S0, S0, S1
	0x03ABD8D8 FMUL S0, S13, S0
	0x03ABD8DC FSUB S0, S10, S0
	0x03ABD8E0 STR S0, [X19 + 0x640]
	0x03ABD8E4 LDR W8, [X31 + 0x106C]
	0x03ABD8E8 CMP W8, W9
	0x03ABD8EC B.EQ 0x3ABD8F4
	0x03ABD8F0 CBZ W29, 0x3ABD908
	0x03ABD8F4 LDR V1, [X19 + 0x2B4]
	0x03ABD8F8 LDR V2, [X31 + 0xE0]
	0x03ABD8FC FMUL S1, S2, S1
	0x03ABD900 FSUB S0, S0, S1
	0x03ABD904 STR S0, [X19 + 0x640]
	0x03ABD908 LDR V10, [X19 + 0x2B0]
	0x03ABD90C FMOV S1, W31
	0x03ABD910 FCMP S10, 0x0
	0x03ABD914 B.EQ 0x3ABD970
	0x03ABD918 ADD X0, X31, 0x1000
	0x03ABD91C ADD X0, X0, 0x20
	0x03ABD920 MOV X1, X31
	0x03ABD924 BL 0x3C9C2CC
	0x03ABD928 ADD X0, X31, 0x1000
	0x03ABD92C ADD X0, X0, 0x20
	0x03ABD930 MOV X1, X31
	0x03ABD934 MOV V14.16B, V0.16B
	0x03ABD938 BL 0x3C9C2DC
	0x03ABD93C FMOV S3, 0.5
	0x03ABD940 LDR V1, [X19 + 0x2D4]
	0x03ABD944 FMUL S2, S10, S3
	0x03ABD948 FMUL S3, S14, S3
	0x03ABD94C FADD S0, S3, S0
	0x03ABD950 FMUL S0, S13, S0
	0x03ABD954 LDR V3, [X19 + 0x640]
	0x03ABD958 FSUB S0, S2, S0
	0x03ABD95C FMOV S2, 1
	0x03ABD960 FSUB S1, S2, S1
	0x03ABD964 FMUL S1, S1, S0
	0x03ABD968 FADD S0, S3, S1
	0x03ABD96C STR S0, [X19 + 0x640]
	0x03ABD970 LDR W8, [X19 + 0x644]
	0x03ABD974 STR S1, [X31 + 0x94]
	0x03ABD978 STR S11, [X31 + 0xE4]
	0x03ABD97C CBNZ W8, 0x3ABD98C
	0x03ABD980 CBNZ W21, 0x3ABD98C
	0x03ABD984 LDRB W8, [X19 + 0x25C]
	0x03ABD988 TBNZ X8, 0x0, 0x3ABDAC8
	0x03ABD98C ADRP X8, 0x636000
	0x03ABD990 LDR X8, [X8 + 0x598]
	0x03ABD994 LDR X25, [X19 + 0x118]
	0x03ABD998 LDR X0, [X8]
	0x03ABD99C LDR W8, [X0 + 0xE0]
	0x03ABD9A0 CBNZ W8, 0x3ABD9A8
	0x03ABD9A4 BL 0x1C16DFC
	0x03ABD9A8 MOV X0, X25
	0x03ABD9AC MOV X1, X31
	0x03ABD9B0 MOV X2, X31
	0x03ABD9B4 BL 0x3C354F8
	0x03ABD9B8 FMOV S0, W31
	0x03ABD9BC STR S0, [X31 + 0xD8]
	0x03ABD9C0 TBZ X0, 0x0, 0x3ABDABC
	0x03ABD9C4 LDR X0, [X22]
	0x03ABD9C8 LDR X25, [X19 + 0x118]
	0x03ABD9CC LDR W8, [X0 + 0xE0]
	0x03ABD9D0 CBNZ W8, 0x3ABD9D8
	0x03ABD9D4 BL 0x1C16DFC
	0x03ABD9D8 CBZ X25, 0x3AC3158
	0x03ABD9DC LDR X8, [X22]
	0x03ABD9E0 MOV X0, X25
	0x03ABD9E4 MOV X2, X31
	0x03ABD9E8 LDR X8, [X8 + 0xB8]
	0x03ABD9EC LDR W1, [X8 + 0x54]
	0x03ABD9F0 BL 0x3C14D08
	0x03ABD9F4 TBZ X0, 0x0, 0x3ABDABC
	0x03ABD9F8 LDR X0, [X22]
	0x03ABD9FC LDR X25, [X19 + 0x118]
	0x03ABDA00 LDR W8, [X0 + 0xE0]
	0x03ABDA04 CBNZ W8, 0x3ABDA0C
	0x03ABDA08 BL 0x1C16DFC
	0x03ABDA0C CBZ X25, 0x3AC3158
	0x03ABDA10 LDR X8, [X22]
	0x03ABDA14 MOV X0, X25
	0x03ABDA18 MOV X2, X31
	0x03ABDA1C LDR X8, [X8 + 0xB8]
	0x03ABDA20 LDR W1, [X8 + 0xCC]
	0x03ABDA24 BL 0x3C14D08
	0x03ABDA28 TBZ X0, 0x0, 0x3ABDABC
	0x03ABDA2C LDR X0, [X22]
	0x03ABDA30 LDR X25, [X19 + 0x118]
	0x03ABDA34 LDR W8, [X0 + 0xE0]
	0x03ABDA38 CBNZ W8, 0x3ABDA40
	0x03ABDA3C BL 0x1C16DFC
	0x03ABDA40 CBZ X25, 0x3AC3158
	0x03ABDA44 LDR X8, [X22]
	0x03ABDA48 MOV X0, X25
	0x03ABDA4C MOV X2, X31
	0x03ABDA50 LDR X8, [X8 + 0xB8]
	0x03ABDA54 LDR W1, [X8 + 0x54]
	0x03ABDA58 BL 0x3C15F98
	0x03ABDA5C LDR X8, [X31 + 0x150]
	0x03ABDA60 LDR X8, [X8]
	0x03ABDA64 CBZ X8, 0x3AC3158
	0x03ABDA68 LDR X0, [X19 + 0x118]
	0x03ABDA6C CBZ X0, 0x3AC3158
	0x03ABDA70 LDR X9, [X22]
	0x03ABDA74 LDR V10, [X8 + 0x1A8]
	0x03ABDA78 MOV X2, X31
	0x03ABDA7C MOV V15.16B, V0.16B
	0x03ABDA80 LDR X9, [X9 + 0xB8]
	0x03ABDA84 MOV V14.16B, V9.16B
	0x03ABDA88 LDR W1, [X9 + 0xCC]
	0x03ABDA8C BL 0x3C15F98
	0x03ABDA90 FMOV S1, 0.25
	0x03ABDA94 FMUL S1, S10, S1
	0x03ABDA98 FMUL S1, S15, S1
	0x03ABDA9C FMUL S11, S0, S1
	0x03ABDAA0 LDR V0, [X31 + 0x140]
	0x03ABDAA4 FADD S0, S0, S11
	0x03ABDAA8 FCMP S0, S15
	0x03ABDAAC B.LE 0x3ABDC10
	0x03ABDAB0 FSUB S0, S15, S11
	0x03ABDAB4 STR S0, [X31 + 0x140]
	0x03ABDAB8 B 0x3ABDC10
	0x03ABDABC MOV V14.16B, V9.16B
	0x03ABDAC0 FMOV S11, W31
	0x03ABDAC4 B 0x3ABDC10
	0x03ABDAC8 ADRP X8, 0x636000
	0x03ABDACC LDR X8, [X8 + 0x598]
	0x03ABDAD0 LDR X25, [X19 + 0x118]
	0x03ABDAD4 LDR X0, [X8]
	0x03ABDAD8 LDR W8, [X0 + 0xE0]
	0x03ABDADC CBNZ W8, 0x3ABDAE4
	0x03ABDAE0 BL 0x1C16DFC
	0x03ABDAE4 MOV X0, X25
	0x03ABDAE8 MOV X1, X31
	0x03ABDAEC MOV X2, X31
	0x03ABDAF0 BL 0x3C354F8
	0x03ABDAF4 FMOV S10, W31
	0x03ABDAF8 TBZ X0, 0x0, 0x3ABDBF4
	0x03ABDAFC LDR X0, [X22]
	0x03ABDB00 LDR X25, [X19 + 0x118]
	0x03ABDB04 LDR W8, [X0 + 0xE0]
	0x03ABDB08 CBNZ W8, 0x3ABDB10
	0x03ABDB0C BL 0x1C16DFC
	0x03ABDB10 CBZ X25, 0x3AC3158
	0x03ABDB14 LDR X8, [X22]
	0x03ABDB18 MOV X0, X25
	0x03ABDB1C MOV X2, X31
	0x03ABDB20 LDR X8, [X8 + 0xB8]
	0x03ABDB24 LDR W1, [X8 + 0x54]
	0x03ABDB28 BL 0x3C14D08
	0x03ABDB2C TBZ X0, 0x0, 0x3ABDBF4
	0x03ABDB30 LDR X0, [X22]
	0x03ABDB34 LDR X25, [X19 + 0x118]
	0x03ABDB38 LDR W8, [X0 + 0xE0]
	0x03ABDB3C CBNZ W8, 0x3ABDB44
	0x03ABDB40 BL 0x1C16DFC
	0x03ABDB44 CBZ X25, 0x3AC3158
	0x03ABDB48 LDR X8, [X22]
	0x03ABDB4C MOV X0, X25
	0x03ABDB50 MOV X2, X31
	0x03ABDB54 LDR X8, [X8 + 0xB8]
	0x03ABDB58 LDR W1, [X8 + 0x54]
	0x03ABDB5C BL 0x3C15F98
	0x03ABDB60 LDR X8, [X31 + 0x150]
	0x03ABDB64 LDR X8, [X8]
	0x03ABDB68 CBZ X8, 0x3AC3158
	0x03ABDB6C LDR X0, [X19 + 0x118]
	0x03ABDB70 CBZ X0, 0x3AC3158
	0x03ABDB74 LDR X9, [X22]
	0x03ABDB78 LDR V10, [X8 + 0x1B0]
	0x03ABDB7C MOV X2, X31
	0x03ABDB80 MOV V15.16B, V0.16B
	0x03ABDB84 LDR X9, [X9 + 0xB8]
	0x03ABDB88 LDR W1, [X9 + 0xCC]
	0x03ABDB8C BL 0x3C15F98
	0x03ABDB90 FMOV S1, 0.25
	0x03ABDB94 FMUL S1, S10, S1
	0x03ABDB98 FMUL S1, S15, S1
	0x03ABDB9C FMUL S1, S0, S1
	0x03ABDBA0 LDR V0, [X31 + 0x140]
	0x03ABDBA4 FADD S0, S0, S1
	0x03ABDBA8 FCMP S0, S15
	0x03ABDBAC B.LE 0x3ABDBF0
	0x03ABDBB0 MOV V10.16B, V1.16B
	0x03ABDBB4 FSUB S0, S15, S1
	0x03ABDBB8 STR S0, [X31 + 0x140]
	0x03ABDBBC B 0x3ABDBF4
	0x03ABDBC0 SUB W9, W9, 0x1
	0x03ABDBC4 CMP W9, W11
	0x03ABDBC8 B.CS 0x3AC3264
	0x03ABDBCC CBZ X10, 0x3AC3158
	0x03ABDBD0 SMADDL X8, X9, X28, X8
	0x03ABDBD4 LDR V11, [X8 + 0x60]
	0x03ABDBD8 ADD X0, X10, 0x50
	0x03ABDBDC MOV X1, X31
	0x03ABDBE0 BL 0x3C9BF88
	0x03ABDBE4 LDR X8, [X22]
	0x03ABDBE8 CBNZ X8, 0x3ABD1F4
	0x03ABDBEC B 0x3AC3158
	0x03ABDBF0 MOV V10.16B, V1.16B
	0x03ABDBF4 LDR X8, [X31 + 0x150]
	0x03ABDBF8 LDR X8, [X8]
	0x03ABDBFC CBZ X8, 0x3AC3158
	0x03ABDC00 LDR V0, [X8 + 0x1B4]
	0x03ABDC04 MOV V14.16B, V9.16B
	0x03ABDC08 MOV V11.16B, V10.16B
	0x03ABDC0C STR S0, [X31 + 0xD8]
	0x03ABDC10 LDR V10, [X19 + 0x640]
	0x03ABDC14 ADD X0, X31, 0x1000
	0x03ABDC18 ADD X0, X0, 0x20
	0x03ABDC1C MOV X1, X31
	0x03ABDC20 BL 0x3C9C2DC
	0x03ABDC24 LDR V12, [X31 + 0x140]
	0x03ABDC28 LDR V1, [X19 + 0x2D4]
	0x03ABDC2C FMOV S9, 1
	0x03ABDC30 ADD X0, X31, 0x1000
	0x03ABDC34 FSUB S0, S0, S12
	0x03ABDC38 FSUB S0, S0, S11
	0x03ABDC3C FADD S0, S8, S0
	0x03ABDC40 FMUL S0, S13, S0
	0x03ABDC44 FSUB S1, S9, S1
	0x03ABDC48 FMUL S0, S1, S0
	0x03ABDC4C ADD X0, X0, 0x20
	0x03ABDC50 MOV X1, X31
	0x03ABDC54 FADD S15, S10, S0
	0x03ABDC58 BL 0x3C9C2E4
	0x03ABDC5C LDR V3, [X31 + 0x14C]
	0x03ABDC60 LDR V1, [X19 + 0x4D8]
	0x03ABDC64 FADD S0, S12, S0
	0x03ABDC68 LDR V2, [X19 + 0x61C]
	0x03ABDC6C FADD S0, S14, S0
	0x03ABDC70 FMUL S0, S13, S0
	0x03ABDC74 FADD S0, S3, S0
	0x03ABDC78 ADD X0, X31, 0x1000
	0x03ABDC7C FSUB S0, S0, S1
	0x03ABDC80 ADD X0, X0, 0x20
	0x03ABDC84 MOV X1, X31
	0x03ABDC88 FADD S14, S2, S0
	0x03ABDC8C BL 0x3C9C2D4
	0x03ABDC90 FADD S8, S12, S12
	0x03ABDC94 FADD S0, S8, S0
	0x03ABDC98 ADD X0, X31, 0x1000
	0x03ABDC9C FMUL S0, S13, S0
	0x03ABDCA0 ADD X0, X0, 0x20
	0x03ABDCA4 MOV X1, X31
	0x03ABDCA8 FSUB S10, S14, S0
	0x03ABDCAC BL 0x3C9C2CC
	0x03ABDCB0 LDR V1, [X19 + 0x2D4]
	0x03ABDCB4 FADD S0, S8, S0
	0x03ABDCB8 FADD S2, S11, S11
	0x03ABDCBC FADD S0, S2, S0
	0x03ABDCC0 LDR W8, [X19 + 0x644]
	0x03ABDCC4 FMUL S0, S13, S0
	0x03ABDCC8 FSUB S1, S9, S1
	0x03ABDCCC FMUL S0, S1, S0
	0x03ABDCD0 MOV V8.16B, V13.16B
	0x03ABDCD4 FADD S3, S15, S0
	0x03ABDCD8 STR S11, [X31 + 0xC0]
	0x03ABDCDC CBNZ W8, 0x3ABDCEC
	0x03ABDCE0 CBNZ W21, 0x3ABDCEC
	0x03ABDCE4 LDRB W8, [X19 + 0x25C]
	0x03ABDCE8 TBNZ X8, 0x1, 0x3ABE840
	0x03ABDCEC MOV V11.16B, V3.16B
	0x03ABDCF0 MOV V12.16B, V15.16B
	0x03ABDCF4 LDRB W8, [X19 + 0x474]
	0x03ABDCF8 STR S8, [X31 + 0x134]
	0x03ABDCFC CBZ W8, 0x3ABDDDC
	0x03ABDD00 LDR X21, [X31 + 0x80]
	0x03ABDD04 MOV X1, X31
	0x03ABDD08 STR S3, [X31 + 0xC4]
	0x03ABDD0C MOV X0, X21
	0x03ABDD10 BL 0x3C26F34
	0x03ABDD14 FADD S1, S10, S14
	0x03ABDD18 FMOV S2, 0.5
	0x03ABDD1C FADD S0, S11, S15
	0x03ABDD20 FMUL S13, S1, S2
	0x03ABDD24 MOV V9.16B, V10.16B
	0x03ABDD28 FMUL S10, S0, S2
	0x03ABDD2C FSUB S8, S14, S13
	0x03ABDD30 FSUB S0, S12, S10
	0x03ABDD34 FMOV S2, W31
	0x03ABDD38 MOV X0, X21
	0x03ABDD3C MOV V1.16B, V8.16B
	0x03ABDD40 MOV X1, X31
	0x03ABDD44 BL 0x3C28278
	0x03ABDD48 FADD S0, S10, S0
	0x03ABDD4C FMOV S12, W31
	0x03ABDD50 STR S0, [X31 + 0xFC]
	0x03ABDD54 FADD S3, S13, S1
	0x03ABDD58 FADD S0, S2, S12
	0x03ABDD5C FSUB S9, S9, S13
	0x03ABDD60 STP S0, S3, [X31 + 0xEC]
	0x03ABDD64 FSUB S0, S15, S10
	0x03ABDD68 FMOV S2, W31
	0x03ABDD6C MOV X0, X21
	0x03ABDD70 MOV V1.16B, V9.16B
	0x03ABDD74 MOV X1, X31
	0x03ABDD78 BL 0x3C28278
	0x03ABDD7C FADD S3, S10, S0
	0x03ABDD80 FADD S0, S2, S12
	0x03ABDD84 FADD S15, S13, S1
	0x03ABDD88 STP S0, S3, [X31 + 0xF4]
	0x03ABDD8C FSUB S0, S11, S10
	0x03ABDD90 FMOV S2, W31
	0x03ABDD94 MOV X0, X21
	0x03ABDD98 MOV V1.16B, V8.16B
	0x03ABDD9C MOV X1, X31
	0x03ABDDA0 BL 0x3C28278
	0x03ABDDA4 FADD S11, S10, S0
	0x03ABDDA8 LDR V0, [X31 + 0xC4]
	0x03ABDDAC FADD S14, S13, S1
	0x03ABDDB0 FADD S8, S2, S12
	0x03ABDDB4 FMOV S2, W31
	0x03ABDDB8 FSUB S0, S0, S10
	0x03ABDDBC MOV X0, X21
	0x03ABDDC0 MOV V1.16B, V9.16B
	0x03ABDDC4 MOV X1, X31
	0x03ABDDC8 BL 0x3C28278
	0x03ABDDCC FADD S3, S10, S0
	0x03ABDDD0 FADD S10, S13, S1
	0x03ABDDD4 FADD S0, S2, S12
	0x03ABDDD8 B 0x3ABDDFC
	0x03ABDDDC FMOV S1, W31
	0x03ABDDE0 STP S14, S1, [X31 + 0xF0]
	0x03ABDDE4 FMOV S1, W31
	0x03ABDDE8 STP S15, S12, [X31 + 0xF8]
	0x03ABDDEC FMOV S0, W31
	0x03ABDDF0 FMOV S8, W31
	0x03ABDDF4 MOV V15.16B, V10.16B
	0x03ABDDF8 STR S1, [X31 + 0xEC]
	0x03ABDDFC LDR X8, [X23]
	0x03ABDE00 CBZ X8, 0x3AC3158
	0x03ABDE04 LDR X8, [X8 + 0x38]
	0x03ABDE08 LDR V13, [X31 + 0x134]
	0x03ABDE0C LDR V6, [X31 + 0xFC]
	0x03ABDE10 CBZ X8, 0x3AC3158
	0x03ABDE14 LDRSW X9, [X26]
	0x03ABDE18 LDR W10, [X8 + 0x18]
	0x03ABDE1C LDR V2, [X31 + 0xF8]
	0x03ABDE20 CMP W9, W10
	0x03ABDE24 B.CS 0x3AC3264
	0x03ABDE28 LDR V1, [X31 + 0xF4]
	0x03ABDE2C NOP
	0x03ABDE30 MADD X8, X9, X28, X8
	0x03ABDE34 STR S2, [X8 + 0x11C]
	0x03ABDE38 STR S15, [X8 + 0x120]
	0x03ABDE3C STR S1, [X8 + 0x124]
	0x03ABDE40 LDR X8, [X23]
	0x03ABDE44 CBZ X8, 0x3AC3158
	0x03ABDE48 LDR X8, [X8 + 0x38]
	0x03ABDE4C CBZ X8, 0x3AC3158
	0x03ABDE50 LDRSW X9, [X26]
	0x03ABDE54 LDR W10, [X8 + 0x18]
	0x03ABDE58 LDR V4, [X31 + 0xF0]
	0x03ABDE5C CMP W9, W10
	0x03ABDE60 B.CS 0x3AC3264
	0x03ABDE64 MADD X8, X9, X28, X8
	0x03ABDE68 STR S6, [X8 + 0x110]
	0x03ABDE6C LDR V6, [X31 + 0xEC]
	0x03ABDE70 STR S4, [X8 + 0x114]
	0x03ABDE74 STR S6, [X8 + 0x118]
	0x03ABDE78 LDR X8, [X23]
	0x03ABDE7C CBZ X8, 0x3AC3158
	0x03ABDE80 LDR X8, [X8 + 0x38]
	0x03ABDE84 CBZ X8, 0x3AC3158
	0x03ABDE88 LDRSW X9, [X26]
	0x03ABDE8C LDR W10, [X8 + 0x18]
	0x03ABDE90 CMP W9, W10
	0x03ABDE94 B.CS 0x3AC3264
	0x03ABDE98 MADD X8, X9, X28, X8
	0x03ABDE9C STR S11, [X8 + 0x128]
	0x03ABDEA0 STR S14, [X8 + 0x12C]
	0x03ABDEA4 STR S8, [X8 + 0x130]
	0x03ABDEA8 LDR X8, [X23]
	0x03ABDEAC CBZ X8, 0x3AC3158
	0x03ABDEB0 LDR X8, [X8 + 0x38]
	0x03ABDEB4 CBZ X8, 0x3AC3158
	0x03ABDEB8 LDRSW X9, [X26]
	0x03ABDEBC LDR W10, [X8 + 0x18]
	0x03ABDEC0 CMP W9, W10
	0x03ABDEC4 B.CS 0x3AC3264
	0x03ABDEC8 MADD X8, X9, X28, X8
	0x03ABDECC STR S3, [X8 + 0x134]
	0x03ABDED0 STR S10, [X8 + 0x138]
	0x03ABDED4 STR S0, [X8 + 0x13C]
	0x03ABDED8 LDR X8, [X23]
	0x03ABDEDC CBZ X8, 0x3AC3158
	0x03ABDEE0 LDR X8, [X8 + 0x38]
	0x03ABDEE4 CBZ X8, 0x3AC3158
	0x03ABDEE8 LDRSW X21, [X26]
	0x03ABDEEC LDR W9, [X8 + 0x18]
	0x03ABDEF0 CMP W21, W9
	0x03ABDEF4 B.CS 0x3AC3264
	0x03ABDEF8 LDR V0, [X19 + 0x640]
	0x03ABDEFC NOP
	0x03ABDF00 MADD X9, X21, X28, X8
	0x03ABDF04 FSUB S2, S11, S2
	0x03ABDF08 FSUB S3, S4, S15
	0x03ABDF0C STR S0, [X9 + 0x140]
	0x03ABDF10 LDR V1, [X19 + 0x4D8]
	0x03ABDF14 FDIV S2, S2, S3
	0x03ABDF18 LDR V3, [X31 + 0x14C]
	0x03ABDF1C LDR V0, [X19 + 0x61C]
	0x03ABDF20 STR S2, [X9 + 0x15C]
	0x03ABDF24 LDR V2, [X31 + 0x110]
	0x03ABDF28 FSUB S3, S3, S1
	0x03ABDF2C FADD S3, S3, S0
	0x03ABDF30 STR S3, [X9 + 0x14C]
	0x03ABDF34 LDR W9, [X19 + 0x644]
	0x03ABDF38 FMUL S3, S2, S13
	0x03ABDF3C CBZ W9, 0x3ABDF4C
	0x03ABDF40 LDR V2, [X31 + 0x100]
	0x03ABDF44 FMUL S2, S2, S13
	0x03ABDF48 B 0x3ABDF60
	0x03ABDF4C LDR V2, [X31 + 0x100]
	0x03ABDF50 LDR V4, [X31 + 0x138]
	0x03ABDF54 FMUL S2, S2, S13
	0x03ABDF58 FDIV S3, S3, S4
	0x03ABDF5C FDIV S2, S2, S4
	0x03ABDF60 LDR W24, [X19 + 0x498]
	0x03ABDF64 CBZ W29, 0x3ABDFA4
	0x03ABDF68 CMP W21, W24
	0x03ABDF6C B.EQ 0x3ABDFA4
	0x03ABDF70 LDR V0, [X19 + 0x4C8]
	0x03ABDF74 NOP
	0x03ABDF78 MADD X8, X21, X28, X8
	0x03ABDF7C STR S0, [X8 + 0x154]
	0x03ABDF80 LDR V2, [X19 + 0x4CC]
	0x03ABDF84 FSUB S0, S0, S1
	0x03ABDF88 STR S0, [X8 + 0x148]
	0x03ABDF8C STR S2, [X8 + 0x158]
	0x03ABDF90 STR S0, [X19 + 0x4C0]
	0x03ABDF94 FSUB S0, S2, S1
	0x03ABDF98 STR S0, [X8 + 0x150]
	0x03ABDF9C STR S0, [X19 + 0x4C4]
	0x03ABDFA0 B 0x3ABE08C
	0x03ABDFA4 FADD S2, S0, S2
	0x03ABDFA8 FADD S8, S0, S3
	0x03ABDFAC FCMP S0, 0x0
	0x03ABDFB0 MOV V3.16B, V2.16B
	0x03ABDFB4 MOV V4.16B, V8.16B
	0x03ABDFB8 B.EQ 0x3ABDFE0
	0x03ABDFBC LDR V3, [X19 + 0x404]
	0x03ABDFC0 FSUB S4, S8, S0
	0x03ABDFC4 FSUB S0, S2, S0
	0x03ABDFC8 FDIV S4, S4, S3
	0x03ABDFCC FDIV S0, S0, S3
	0x03ABDFD0 FCMP S4, S8
	0x03ABDFD4 FCSEL S4, S4, S8, GT
	0x03ABDFD8 FCMP S0, S2
	0x03ABDFDC FCSEL S3, S0, S2, MI
	0x03ABDFE0 LDR V0, [X19 + 0x4C8]
	0x03ABDFE4 LDR V5, [X19 + 0x4CC]
	0x03ABDFE8 NOP
	0x03ABDFEC MADD X8, X21, X28, X8
	0x03ABDFF0 FSUB S2, S2, S1
	0x03ABDFF4 FCMP S4, S0
	0x03ABDFF8 FCSEL S0, S4, S0, GT
	0x03ABDFFC FCMP S3, S5
	0x03ABE000 FCSEL S5, S3, S5, MI
	0x03ABE004 STR S5, [X19 + 0x4CC]
	0x03ABE008 FSUB S5, S8, S1
	0x03ABE00C STR S0, [X19 + 0x4C8]
	0x03ABE010 STR S4, [X8 + 0x154]
	0x03ABE014 STR S3, [X8 + 0x158]
	0x03ABE018 STR S5, [X8 + 0x148]
	0x03ABE01C STR S5, [X19 + 0x4C0]
	0x03ABE020 STR S2, [X8 + 0x150]
	0x03ABE024 LDR W8, [X19 + 0x4A8]
	0x03ABE028 STR S2, [X19 + 0x4C4]
	0x03ABE02C CBZ W8, 0x3ABE038
	0x03ABE030 LDRB W8, [X19 + 0x33C]
	0x03ABE034 CBZ W8, 0x3ABE070
	0x03ABE038 LDR X8, [X19 + 0x100]
	0x03ABE03C STR S0, [X19 + 0x4B8]
	0x03ABE040 CBZ X8, 0x3AC3158
	0x03ABE044 LDR V9, [X19 + 0x4BC]
	0x03ABE048 ADD X0, X8, 0x50
	0x03ABE04C MOV X1, X31
	0x03ABE050 BL 0x3C9BFC8
	0x03ABE054 LDR V1, [X31 + 0x138]
	0x03ABE058 FMUL S0, S13, S0
	0x03ABE05C FDIV S0, S0, S1
	0x03ABE060 LDR V1, [X19 + 0x4D8]
	0x03ABE064 FCMP S9, S0
	0x03ABE068 FCSEL S0, S9, S0, GT
	0x03ABE06C STR S0, [X19 + 0x4BC]
	0x03ABE070 FCMP S1, 0x0
	0x03ABE074 B.NE 0x3ABE08C
	0x03ABE078 LDR X8, [X31 + 0x88]
	0x03ABE07C LDR V0, [X8 + 0x208]
	0x03ABE080 FCMP S0, S8
	0x03ABE084 FCSEL S0, S0, S8, GT
	0x03ABE088 STR S0, [X8 + 0x208]
	0x03ABE08C LDR X8, [X23]
	0x03ABE090 CBZ X8, 0x3AC3158
	0x03ABE094 LDR X9, [X8 + 0x38]
	0x03ABE098 CBZ X9, 0x3AC3158
	0x03ABE09C LDR W27, [X26]
	0x03ABE0A0 LDR W10, [X9 + 0x18]
	0x03ABE0A4 CMP W27, W10
	0x03ABE0A8 B.CS 0x3AC3264
	0x03ABE0AC SXTW X10, W27
	0x03ABE0B0 MADD X9, X10, X28, X9
	0x03ABE0B4 STRB W31, [X9 + 0x194]
	0x03ABE0B8 LDR W25, [X31 + 0x106C]
	0x03ABE0BC LDR W10, [X19 + 0x278]
	0x03ABE0C0 CMP W25, 0x9
	0x03ABE0C4 AND W26, W10, 0x18
	0x03ABE0C8 B.EQ 0x3ABE260
	0x03ABE0CC CBZ W29, 0x3ABE244
	0x03ABE0D0 LDR W11, [X31 + 0x7C]
	0x03ABE0D4 CMP W25, 0xAD
	0x03ABE0D8 CSET W10, EQ
	0x03ABE0DC BIC W10, W10, W11, 0x0
	0x03ABE0E0 TBNZ X10, 0x0, 0x3ABE260
	0x03ABE0E4 LDR W10, [X19 + 0x644]
	0x03ABE0E8 CMP W10, 0x1
	0x03ABE0EC B.EQ 0x3ABE260
	0x03ABE0F0 AND W8, W25, 0xFFFFFFFE
	0x03ABE0F4 CMP W8, 0xA
	0x03ABE0F8 B.NE 0x3ABE714
	0x03ABE0FC LDR W8, [X19 + 0x2E0]
	0x03ABE100 CMP W8, 0x6
	0x03ABE104 B.NE 0x3ABE714
	0x03ABE108 FCMP S1, 0x0
	0x03ABE10C FMOV S0, W31
	0x03ABE110 B.LE 0x3ABE128
	0x03ABE114 LDRB W8, [X19 + 0x2C4]
	0x03ABE118 CBNZ W8, 0x3ABE128
	0x03ABE11C LDR V0, [X19 + 0x4C8]
	0x03ABE120 LDR V2, [X19 + 0x4D0]
	0x03ABE124 FSUB S0, S0, S2
	0x03ABE128 LDR V2, [X19 + 0x4CC]
	0x03ABE12C LDR V3, [X19 + 0x4B8]
	0x03ABE130 FSUB S1, S2, S1
	0x03ABE134 FSUB S1, S3, S1
	0x03ABE138 FADD S0, S1, S0
	0x03ABE13C LDR V1, [X31 + 0xBC]
	0x03ABE140 FCMP S0, S1
	0x03ABE144 B.LE 0x3ABE714
	0x03ABE148 LDR W8, [X19 + 0x2E4]
	0x03ABE14C ADDS W31, W8, 0x1
	0x03ABE150 B.NE 0x3ABE158
	0x03ABE154 STR W27, [X19 + 0x2E4]
	0x03ABE158 ADRP X29, 0x69A000
	0x03ABE15C LDR X29, [X29 + 0x3E8]
	0x03ABE160 LDR X26, [X31 + 0x160]
	0x03ABE164 LDR X0, [X29]
	0x03ABE168 LDR W8, [X0 + 0xE0]
	0x03ABE16C CBNZ W8, 0x3ABE178
	0x03ABE170 BL 0x1C16DFC
	0x03ABE174 LDR X0, [X29]
	0x03ABE178 LDR X8, [X0 + 0xB8]
	0x03ABE17C MOV X0, X19
	0x03ABE180 MOV X2, X31
	0x03ABE184 ADD X1, X8, 0xB00
	0x03ABE188 BL 0x3B05AD0
	0x03ABE18C ADRP X8, 0x635000
	0x03ABE190 LDR X8, [X8 + 0x598]
	0x03ABE194 STR W0, [X31 + 0x1038]
	0x03ABE198 LDR X25, [X19 + 0x2E8]
	0x03ABE19C LDR X8, [X8]
	0x03ABE1A0 LDR W9, [X8 + 0xE0]
	0x03ABE1A4 CBNZ W9, 0x3ABE1B0
	0x03ABE1A8 MOV X0, X8
	0x03ABE1AC BL 0x1C16DFC
	0x03ABE1B0 MOV X0, X25
	0x03ABE1B4 MOV X1, X31
	0x03ABE1B8 MOV X2, X31
	0x03ABE1BC BL 0x3C354F8
	0x03ABE1C0 TBZ X0, 0x0, 0x3ABE23C
	0x03ABE1C4 LDR X8, [X19]
	0x03ABE1C8 LDR X25, [X19 + 0x2E8]
	0x03ABE1CC MOV X0, X19
	0x03ABE1D0 LDR X9, [X8 + 0x548]
	0x03ABE1D4 LDR X1, [X8 + 0x550]
	0x03ABE1D8 BLR X9
	0x03ABE1DC CBZ X25, 0x3AC3158
	0x03ABE1E0 LDR X8, [X25]
	0x03ABE1E4 MOV X1, X0
	0x03ABE1E8 MOV X0, X25
	0x03ABE1EC LDR X9, [X8 + 0x558]
	0x03ABE1F0 LDR X2, [X8 + 0x560]
	0x03ABE1F4 BLR X9
	0x03ABE1F8 LDR X0, [X19 + 0x2E8]
	0x03ABE1FC CBZ X0, 0x3AC3158
	0x03ABE200 LDR W8, [X19 + 0x400]
	0x03ABE204 MOV X2, X31
	0x03ABE208 STR W8, [X0 + 0x400]
	0x03ABE20C LDR W1, [X19 + 0x494]
	0x03ABE210 BL 0x3AF8B48
	0x03ABE214 LDR X0, [X19 + 0x2E8]
	0x03ABE218 CBZ X0, 0x3AC3158
	0x03ABE21C LDR X8, [X0]
	0x03ABE220 MOV W1, W31
	0x03ABE224 MOV W2, W31
	0x03ABE228 LDR X9, [X8 + 0x7D8]
	0x03ABE22C LDR X3, [X8 + 0x7E0]
	0x03ABE230 BLR X9
	0x03ABE234 MOVZ W8, 0x1
	0x03ABE238 STRB W8, [X19 + 0x2F8]
	0x03ABE23C STR W27, [X31 + 0x1058]
	0x03ABE240 B 0x3ABE708
	0x03ABE244 CMP W25, 0x3
	0x03ABE248 B.EQ 0x3ABE0D0
	0x03ABE24C MOVZ W10, 0x200B
	0x03ABE250 CMP W25, W10
	0x03ABE254 B.EQ 0x3ABE0D0
	0x03ABE258 CMP W25, 0xAD
	0x03ABE25C B.EQ 0x3ABE0D0
	0x03ABE260 ADD X9, X9, 0x194
	0x03ABE264 MOVZ W10, 0x1
	0x03ABE268 STRB W10, [X9]
	0x03ABE26C LDP X9, X10, [X31 + 0xA8]
	0x03ABE270 CBZ W20, 0x3ABE29C
	0x03ABE274 LDR X8, [X8 + 0x50]
	0x03ABE278 CBZ X8, 0x3AC3158
	0x03ABE27C LDRSW X9, [X19 + 0x4A8]
	0x03ABE280 LDR W10, [X8 + 0x18]
	0x03ABE284 CMP W9, W10
	0x03ABE288 B.CS 0x3AC3264
	0x03ABE28C MOVZ W10, 0x5C
	0x03ABE290 MADD X8, X9, X10, X8
	0x03ABE294 ADD X10, X8, 0x60
	0x03ABE298 ADD X9, X8, 0x64
	0x03ABE29C LDR V8, [X10]
	0x03ABE2A0 LDR V2, [X31 + 0xA0]
	0x03ABE2A4 LDR V9, [X9]
	0x03ABE2A8 LDR V0, [X19 + 0x360]
	0x03ABE2AC LDR V10, [X19 + 0x640]
	0x03ABE2B0 FSUB S2, S2, S8
	0x03ABE2B4 FSUB S2, S2, S9
	0x03ABE2B8 LDRB W8, [X19 + 0xF0]
	0x03ABE2BC FCMP S2, S0
	0x03ABE2C0 FMOV S3, -1
	0x03ABE2C4 FCCMP S0, S3, 0x4, PL
	0x03ABE2C8 FCSEL S0, S2, S0, EQ
	0x03ABE2CC FMOV S12, W31
	0x03ABE2D0 STR S0, [X31 + 0xE8]
	0x03ABE2D4 FMOV S0, W31
	0x03ABE2D8 CBNZ W8, 0x3ABE2F4
	0x03ABE2DC ADD X0, X31, 0x1000
	0x03ABE2E0 ADD X0, X0, 0x20
	0x03ABE2E4 MOV X1, X31
	0x03ABE2E8 BL 0x3C9C2EC
	0x03ABE2EC LDR W25, [X31 + 0x106C]
	0x03ABE2F0 LDR V1, [X19 + 0x4D8]
	0x03ABE2F4 LDR V3, [X31 + 0xE4]
	0x03ABE2F8 LDR V2, [X19 + 0x2D4]
	0x03ABE2FC LDR V4, [X19 + 0x4B8]
	0x03ABE300 LDR V11, [X19 + 0x4CC]
	0x03ABE304 CMP W25, 0xAD
	0x03ABE308 FCSEL S3, S3, S13, EQ
	0x03ABE30C FCMP S1, 0x0
	0x03ABE310 B.LE 0x3ABE328
	0x03ABE314 LDRB W8, [X19 + 0x2C4]
	0x03ABE318 CBNZ W8, 0x3ABE328
	0x03ABE31C LDR V5, [X19 + 0x4C8]
	0x03ABE320 LDR V6, [X19 + 0x4D0]
	0x03ABE324 FSUB S12, S5, S6
	0x03ABE328 LDR X8, [X31 + 0x160]
	0x03ABE32C FSUB S5, S11, S1
	0x03ABE330 FSUB S4, S4, S5
	0x03ABE334 LDR V5, [X31 + 0xBC]
	0x03ABE338 LDR W27, [X8]
	0x03ABE33C FADD S4, S4, S12
	0x03ABE340 FCMP S4, S5
	0x03ABE344 B.LE 0x3ABE450
	0x03ABE348 LDR W8, [X19 + 0x2E4]
	0x03ABE34C ADDS W31, W8, 0x1
	0x03ABE350 B.NE 0x3ABE358
	0x03ABE354 STR W27, [X19 + 0x2E4]
	0x03ABE358 LDRB W8, [X19 + 0x238]
	0x03ABE35C CBZ W8, 0x3ABE3A8
	0x03ABE360 LDR V6, [X19 + 0x2BC]
	0x03ABE364 LDR V5, [X19 + 0x2C8]
	0x03ABE368 FCMP S6, S5
	0x03ABE36C B.LE 0x3ABE388
	0x03ABE370 FCMP S1, 0x0
	0x03ABE374 B.LE 0x3ABE388
	0x03ABE378 LDR W8, [X19 + 0x244]
	0x03ABE37C LDR W9, [X19 + 0x248]
	0x03ABE380 CMP W8, W9
	0x03ABE384 B.LT 0x3AC0A58
	0x03ABE388 LDR V4, [X19 + 0x1E4]
	0x03ABE38C LDR V1, [X19 + 0x250]
	0x03ABE390 FCMP S4, S1
	0x03ABE394 B.LE 0x3ABE3A8
	0x03ABE398 LDR W8, [X19 + 0x244]
	0x03ABE39C LDR W9, [X19 + 0x248]
	0x03ABE3A0 CMP W8, W9
	0x03ABE3A4 B.LT 0x3AC0A88
	0x03ABE3A8 LDR W8, [X19 + 0x2E0]
	0x03ABE3AC SUB W8, W8, 0x1
	0x03ABE3B0 CMP W8, 0x5
	0x03ABE3B4 B.HI 0x3ABE450
	0x03ABE3B8 ADRP X11, 0xFFFFFFFFFD0D9000
	0x03ABE3BC ADD X11, X11, 0xB64
	0x03ABE3C0 ADR X9, 0x10
	0x03ABE3C4 LDRB W10, [X11, X8, LSL]
	0x03ABE3C8 ADD X9, X9, X10, 0x2, LSL
	0x03ABE3CC BR X9
	0x03ABE3D0 ADRP X29, 0x69A000
	0x03ABE3D4 LDR X29, [X29 + 0x3E8]
	0x03ABE3D8 LDR X0, [X29]
	0x03ABE3DC LDR W8, [X0 + 0xE0]
	0x03ABE3E0 CBNZ W8, 0x3ABE3EC
	0x03ABE3E4 BL 0x1C16DFC
	0x03ABE3E8 LDR X0, [X29]
	0x03ABE3EC LDR X8, [X0 + 0xB8]
	0x03ABE3F0 LDR X26, [X31 + 0x160]
	0x03ABE3F4 ADD X27, X31, 0xF90
	0x03ABE3F8 LDR W9, [X8 + 0x1580]
	0x03ABE3FC CBZ W9, 0x3AC0494
	0x03ABE400 LDR W9, [X0 + 0xE0]
	0x03ABE404 CBNZ W9, 0x3ABE414
	0x03ABE408 BL 0x1C16DFC
	0x03ABE40C LDR X8, [X29]
	0x03ABE410 LDR X8, [X8 + 0xB8]
	0x03ABE414 ADRP X9, 0x69A000
	0x03ABE418 LDR X9, [X9 + 0x388]
	0x03ABE41C LDR X1, [X9]
	0x03ABE420 MOVZ W9, 0x11F0
	0x03ABE424 ADD X0, X8, X9
	0x03ABE428 ADD X8, X31, 0x1000
	0x03ABE42C ADD X8, X8, 0x70
	0x03ABE430 BL 0x2673C94
	0x03ABE434 ADD X1, X31, 0x1000
	0x03ABE438 ADD X0, X31, 0xC10
	0x03ABE43C ADD X1, X1, 0x70
	0x03ABE440 MOVZ W2, 0x378
	0x03ABE444 BL 0x3EB1AC0
	0x03ABE448 ADD X1, X31, 0xC10
	0x03ABE44C B 0x3ABE97C
	0x03ABE450 FMOV S6, 1
	0x03ABE454 FSUB S1, S6, S2
	0x03ABE458 ADRP X8, 0xFFFFFFFFFD02C000
	0x03ABE45C FMUL S0, S0, S1
	0x03ABE460 FABS S4, S10
	0x03ABE464 LDR V5, [X8 + 0x190]
	0x03ABE468 FMUL S0, S0, S3
	0x03ABE46C FADD S11, S4, S0
	0x03ABE470 LDR V0, [X31 + 0xE8]
	0x03ABE474 CMP W26, 0x0
	0x03ABE478 FCSEL S12, S6, S5, EQ
	0x03ABE47C FMUL S0, S12, S0
	0x03ABE480 FCMP S11, S0
	0x03ABE484 B.LE 0x3ABEEC0
	0x03ABE488 LDRB W8, [X19 + 0x2D8]
	0x03ABE48C CBZ W8, 0x3ABE49C
	0x03ABE490 LDR W8, [X19 + 0x498]
	0x03ABE494 CMP W27, W8
	0x03ABE498 B.NE 0x3ABE76C
	0x03ABE49C LDRB W8, [X19 + 0x238]
	0x03ABE4A0 CBZ W8, 0x3ABE4DC
	0x03ABE4A4 LDR W8, [X19 + 0x244]
	0x03ABE4A8 LDR W9, [X19 + 0x248]
	0x03ABE4AC CMP W8, W9
	0x03ABE4B0 B.GE 0x3ABE4DC
	0x03ABE4B4 LDR V0, [X19 + 0x2D0]
	0x03ABE4B8 MOVZ W8, 0x42C80000
	0x03ABE4BC FMOV S3, W8
	0x03ABE4C0 FDIV S0, S0, S3
	0x03ABE4C4 FCMP S2, S0
	0x03ABE4C8 B.MI 0x3AC31BC
	0x03ABE4CC LDR V1, [X19 + 0x1E4]
	0x03ABE4D0 LDR V0, [X19 + 0x250]
	0x03ABE4D4 FCMP S1, S0
	0x03ABE4D8 B.GT 0x3AC315C
	0x03ABE4DC LDR W8, [X19 + 0x2E0]
	0x03ABE4E0 CMP W8, 0x1
	0x03ABE4E4 B.EQ 0x3ABE900
	0x03ABE4E8 CMP W8, 0x6
	0x03ABE4EC B.EQ 0x3ABE9B8
	0x03ABE4F0 CMP W8, 0x3
	0x03ABE4F4 B.NE 0x3ABEEC0
	0x03ABE4F8 ADRP X29, 0x69A000
	0x03ABE4FC LDR X29, [X29 + 0x3E8]
	0x03ABE500 LDR X0, [X29]
	0x03ABE504 LDR W8, [X0 + 0xE0]
	0x03ABE508 CBNZ W8, 0x3ABE514
	0x03ABE50C BL 0x1C16DFC
	0x03ABE510 LDR X0, [X29]
	0x03ABE514 LDR X8, [X0 + 0xB8]
	0x03ABE518 LDR X26, [X31 + 0x160]
	0x03ABE51C ADD X1, X8, 0x98
	0x03ABE520 B 0x3ABE54C
	0x03ABE524 ADRP X29, 0x69A000
	0x03ABE528 LDR X29, [X29 + 0x3E8]
	0x03ABE52C LDR X0, [X29]
	0x03ABE530 LDR W8, [X0 + 0xE0]
	0x03ABE534 CBNZ W8, 0x3ABE540
	0x03ABE538 BL 0x1C16DFC
	0x03ABE53C LDR X0, [X29]
	0x03ABE540 LDR X8, [X0 + 0xB8]
	0x03ABE544 LDR X26, [X31 + 0x160]
	0x03ABE548 ADD X1, X8, 0xB00
	0x03ABE54C MOV X0, X19
	0x03ABE550 MOV X2, X31
	0x03ABE554 BL 0x3B05AD0
	0x03ABE558 STR W0, [X31 + 0x1038]
	0x03ABE55C B 0x3ABE704
	0x03ABE560 CBZ W27, 0x3ABEAB4
	0x03ABE564 LDR W8, [X31 + 0x1038]
	0x03ABE568 TBNZ X8, 0x1F, 0x3ABEAB4
	0x03ABE56C ADRP X29, 0x69A000
	0x03ABE570 LDR X29, [X29 + 0x3E8]
	0x03ABE574 LDR V8, [X19 + 0x4C8]
	0x03ABE578 LDR X26, [X31 + 0x160]
	0x03ABE57C LDR X0, [X29]
	0x03ABE580 LDR W8, [X0 + 0xE0]
	0x03ABE584 CBNZ W8, 0x3ABE590
	0x03ABE588 BL 0x1C16DFC
	0x03ABE58C LDR X0, [X29]
	0x03ABE590 LDR X8, [X0 + 0xB8]
	0x03ABE594 MOV X0, X19
	0x03ABE598 MOV X2, X31
	0x03ABE59C FSUB S8, S8, S11
	0x03ABE5A0 ADD X1, X8, 0x410
	0x03ABE5A4 BL 0x3B05AD0
	0x03ABE5A8 LDR V0, [X31 + 0xBC]
	0x03ABE5AC STR W0, [X31 + 0x1038]
	0x03ABE5B0 FCMP S8, S0
	0x03ABE5B4 B.GT 0x3ABE704
	0x03ABE5B8 LDR W8, [X19 + 0x494]
	0x03ABE5BC MOVZ W9, 0x1
	0x03ABE5C0 STRB W9, [X19 + 0x33C]
	0x03ABE5C4 LDR V0, [X19 + 0x40C]
	0x03ABE5C8 STR W8, [X19 + 0x498]
	0x03ABE5CC LDR X8, [X29]
	0x03ABE5D0 FMOV S1, W31
	0x03ABE5D4 FADD S0, S0, S1
	0x03ABE5D8 ADD X27, X31, 0xF90
	0x03ABE5DC LDR X8, [X8 + 0xB8]
	0x03ABE5E0 LDR V1, [X8 + 0x15A8]
	0x03ABE5E4 LDR X8, [X31 + 0x88]
	0x03ABE5E8 STR S0, [X19 + 0x640]
	0x03ABE5EC STR W31, [X19 + 0x4D0]
	0x03ABE5F0 UNIMPLEMENTED
	0x03ABE5F4 STR D0, [X19 + 0x4C8]
	0x03ABE5F8 MOVI D0, 0x0
	0x03ABE5FC STR W31, [X19 + 0x4D8]
	0x03ABE600 STR D0, [X8 + 0x208]
	0x03ABE604 LDR W8, [X19 + 0x4A8]
	0x03ABE608 LDR W9, [X19 + 0x4B0]
	0x03ABE60C ADD W8, W8, 0x1
	0x03ABE610 STR W8, [X19 + 0x4A8]
	0x03ABE614 ADD W8, W9, 0x1
	0x03ABE618 STR W8, [X19 + 0x4B0]
	0x03ABE61C B 0x3ABCD74
	0x03ABE620 ADRP X29, 0x69A000
	0x03ABE624 LDR X29, [X29 + 0x3E8]
	0x03ABE628 LDR X0, [X29]
	0x03ABE62C LDR W8, [X0 + 0xE0]
	0x03ABE630 CBNZ W8, 0x3ABE63C
	0x03ABE634 BL 0x1C16DFC
	0x03ABE638 LDR X0, [X29]
	0x03ABE63C LDR X8, [X0 + 0xB8]
	0x03ABE640 LDR X26, [X31 + 0x160]
	0x03ABE644 MOV X0, X19
	0x03ABE648 MOV X2, X31
	0x03ABE64C ADD X1, X8, 0xB00
	0x03ABE650 BL 0x3B05AD0
	0x03ABE654 ADRP X8, 0x635000
	0x03ABE658 LDR X8, [X8 + 0x598]
	0x03ABE65C STR W0, [X31 + 0x1038]
	0x03ABE660 LDR X25, [X19 + 0x2E8]
	0x03ABE664 LDR X8, [X8]
	0x03ABE668 LDR W9, [X8 + 0xE0]
	0x03ABE66C CBNZ W9, 0x3ABE678
	0x03ABE670 MOV X0, X8
	0x03ABE674 BL 0x1C16DFC
	0x03ABE678 MOV X0, X25
	0x03ABE67C MOV X1, X31
	0x03ABE680 MOV X2, X31
	0x03ABE684 BL 0x3C354F8
	0x03ABE688 TBZ X0, 0x0, 0x3ABE704
	0x03ABE68C LDR X8, [X19]
	0x03ABE690 LDR X25, [X19 + 0x2E8]
	0x03ABE694 MOV X0, X19
	0x03ABE698 LDR X9, [X8 + 0x548]
	0x03ABE69C LDR X1, [X8 + 0x550]
	0x03ABE6A0 BLR X9
	0x03ABE6A4 CBZ X25, 0x3AC3158
	0x03ABE6A8 LDR X8, [X25]
	0x03ABE6AC MOV X1, X0
	0x03ABE6B0 MOV X0, X25
	0x03ABE6B4 LDR X9, [X8 + 0x558]
	0x03ABE6B8 LDR X2, [X8 + 0x560]
	0x03ABE6BC BLR X9
	0x03ABE6C0 LDR X0, [X19 + 0x2E8]
	0x03ABE6C4 CBZ X0, 0x3AC3158
	0x03ABE6C8 LDR W8, [X19 + 0x400]
	0x03ABE6CC MOV X2, X31
	0x03ABE6D0 STR W8, [X0 + 0x400]
	0x03ABE6D4 LDR W1, [X19 + 0x494]
	0x03ABE6D8 BL 0x3AF8B48
	0x03ABE6DC LDR X0, [X19 + 0x2E8]
	0x03ABE6E0 CBZ X0, 0x3AC3158
	0x03ABE6E4 LDR X8, [X0]
	0x03ABE6E8 MOV W1, W31
	0x03ABE6EC MOV W2, W31
	0x03ABE6F0 LDR X9, [X8 + 0x7D8]
	0x03ABE6F4 LDR X3, [X8 + 0x7E0]
	0x03ABE6F8 BLR X9
	0x03ABE6FC MOVZ W8, 0x1
	0x03ABE700 STRB W8, [X19 + 0x2F8]
	0x03ABE704 STR W27, [X31 + 0x1058]
	0x03ABE708 MOVZ W8, 0x3
	0x03ABE70C STR W8, [X31 + 0x105C]
	0x03ABE710 B 0x3ABEEB0
	0x03ABE714 MOVN W8, 0x2006
	0x03ABE718 ADD W8, W25, W8
	0x03ABE71C CMP W8, 0x22
	0x03ABE720 B.LS 0x3ABEAD4
	0x03ABE724 SUB W8, W25, 0xA
	0x03ABE728 CMP W8, 0x2
	0x03ABE72C ADD X27, X31, 0xF90
	0x03ABE730 B.CC 0x3ABEAF0
	0x03ABE734 CMP W25, 0xA0
	0x03ABE738 B.EQ 0x3ABEAF0
	0x03ABE73C ADRP X8, 0x637000
	0x03ABE740 LDR X8, [X8 + 0x170]
	0x03ABE744 LDR X0, [X8]
	0x03ABE748 LDR W8, [X0 + 0xE0]
	0x03ABE74C CBNZ W8, 0x3ABE754
	0x03ABE750 BL 0x1C16DFC
	0x03ABE754 MOV W0, W25
	0x03ABE758 MOV X1, X31
	0x03ABE75C BL 0x331BAF4
	0x03ABE760 TBZ X0, 0x0, 0x3ABEB50
	0x03ABE764 LDR W25, [X31 + 0x106C]
	0x03ABE768 B 0x3ABEAF0
	0x03ABE76C ADRP X22, 0x69A000
	0x03ABE770 LDR X22, [X22 + 0x3E8]
	0x03ABE774 LDR X0, [X22]
	0x03ABE778 LDR W8, [X0 + 0xE0]
	0x03ABE77C CBNZ W8, 0x3ABE788
	0x03ABE780 BL 0x1C16DFC
	0x03ABE784 LDR X0, [X22]
	0x03ABE788 LDR X8, [X0 + 0xB8]
	0x03ABE78C MOV X0, X19
	0x03ABE790 MOV X2, X31
	0x03ABE794 ADD X1, X8, 0x98
	0x03ABE798 BL 0x3B05AD0
	0x03ABE79C STR W0, [X31 + 0x1038]
	0x03ABE7A0 ADRP X8, 0xFFFFFFFFFD02C000
	0x03ABE7A4 LDR V1, [X19 + 0x2C0]
	0x03ABE7A8 LDR V0, [X8 + 0x214]
	0x03ABE7AC FCMP S1, S0
	0x03ABE7B0 B.NE 0x3ABEB88
	0x03ABE7B4 LDR X8, [X23]
	0x03ABE7B8 CBZ X8, 0x3AC3158
	0x03ABE7BC LDR X9, [X8 + 0x38]
	0x03ABE7C0 CBZ X9, 0x3AC3158
	0x03ABE7C4 LDR X10, [X31 + 0x160]
	0x03ABE7C8 LDR W11, [X9 + 0x18]
	0x03ABE7CC LDRSW X10, [X10]
	0x03ABE7D0 CMP W10, W11
	0x03ABE7D4 B.CS 0x3AC3264
	0x03ABE7D8 LDR V0, [X19 + 0x4D8]
	0x03ABE7DC FMOV S1, W31
	0x03ABE7E0 FCMP S0, 0x0
	0x03ABE7E4 B.LE 0x3ABE7FC
	0x03ABE7E8 LDRB W11, [X19 + 0x2C4]
	0x03ABE7EC CBNZ W11, 0x3ABE7FC
	0x03ABE7F0 LDR V1, [X19 + 0x4C8]
	0x03ABE7F4 LDR V2, [X19 + 0x4D0]
	0x03ABE7F8 FSUB S1, S1, S2
	0x03ABE7FC LDR V2, [X19 + 0x4CC]
	0x03ABE800 LDR V3, [X19 + 0x2BC]
	0x03ABE804 NOP
	0x03ABE808 MADD X9, X10, X28, X9
	0x03ABE80C LDR V4, [X9 + 0x154]
	0x03ABE810 FSUB S1, S1, S2
	0x03ABE814 LDR V2, [X31 + 0x58]
	0x03ABE818 LDR V5, [X19 + 0x2B8]
	0x03ABE81C FADD S1, S4, S1
	0x03ABE820 FADD S2, S2, S3
	0x03ABE824 LDR V3, [X31 + 0x60]
	0x03ABE828 FMUL S2, S3, S2
	0x03ABE82C FADD S1, S1, S2
	0x03ABE830 LDR V2, [X31 + 0xE0]
	0x03ABE834 FMUL S2, S2, S5
	0x03ABE838 FADD S1, S2, S1
	0x03ABE83C B 0x3ABEBAC
	0x03ABE840 LDR V0, [X19 + 0x5F0]
	0x03ABE844 LDR V1, [X31 + 0x64]
	0x03ABE848 ADD X0, X31, 0x1000
	0x03ABE84C ADD X0, X0, 0x20
	0x03ABE850 SCVTF S0, S0
	0x03ABE854 MOV X1, X31
	0x03ABE858 FMUL S11, S0, S1
	0x03ABE85C STR S3, [X31 + 0xC4]
	0x03ABE860 BL 0x3C9C2E4
	0x03ABE864 LDR V1, [X31 + 0x140]
	0x03ABE868 LDR V13, [X31 + 0xC0]
	0x03ABE86C ADD X0, X31, 0x1000
	0x03ABE870 ADD X0, X0, 0x20
	0x03ABE874 FADD S0, S1, S0
	0x03ABE878 FADD S0, S13, S0
	0x03ABE87C FMUL S0, S8, S0
	0x03ABE880 MOV X1, X31
	0x03ABE884 MOV V9.16B, V8.16B
	0x03ABE888 FMUL S12, S11, S0
	0x03ABE88C BL 0x3C9C2E4
	0x03ABE890 ADD X0, X31, 0x1000
	0x03ABE894 ADD X0, X0, 0x20
	0x03ABE898 MOV X1, X31
	0x03ABE89C MOV V8.16B, V0.16B
	0x03ABE8A0 BL 0x3C9C2D4
	0x03ABE8A4 FMOV S2, W31
	0x03ABE8A8 FADD S14, S14, S2
	0x03ABE8AC FADD S10, S10, S2
	0x03ABE8B0 LDR V2, [X31 + 0x140]
	0x03ABE8B4 FSUB S0, S8, S0
	0x03ABE8B8 LDR V5, [X31 + 0xC4]
	0x03ABE8BC FADD S1, S15, S12
	0x03ABE8C0 FSUB S0, S0, S2
	0x03ABE8C4 FSUB S0, S0, S13
	0x03ABE8C8 FMUL S0, S9, S0
	0x03ABE8CC FMUL S0, S11, S0
	0x03ABE8D0 FADD S2, S5, S12
	0x03ABE8D4 FSUB S3, S12, S0
	0x03ABE8D8 FADD S4, S15, S0
	0x03ABE8DC FADD S0, S5, S0
	0x03ABE8E0 FMOV S5, 0.5
	0x03ABE8E4 FMUL S3, S3, S5
	0x03ABE8E8 MOV V8.16B, V9.16B
	0x03ABE8EC FSUB S12, S1, S3
	0x03ABE8F0 FSUB S15, S4, S3
	0x03ABE8F4 FSUB S11, S2, S3
	0x03ABE8F8 FSUB S3, S0, S3
	0x03ABE8FC B 0x3ABDCF4
	0x03ABE900 ADRP X29, 0x69A000
	0x03ABE904 LDR X29, [X29 + 0x3E8]
	0x03ABE908 LDR X0, [X29]
	0x03ABE90C LDR W8, [X0 + 0xE0]
	0x03ABE910 CBNZ W8, 0x3ABE91C
	0x03ABE914 BL 0x1C16DFC
	0x03ABE918 LDR X0, [X29]
	0x03ABE91C LDR X8, [X0 + 0xB8]
	0x03ABE920 LDR X26, [X31 + 0x160]
	0x03ABE924 ADD X27, X31, 0xF90
	0x03ABE928 LDR W9, [X8 + 0x1580]
	0x03ABE92C CBZ W9, 0x3AC0494
	0x03ABE930 LDR W9, [X0 + 0xE0]
	0x03ABE934 CBNZ W9, 0x3ABE944
	0x03ABE938 BL 0x1C16DFC
	0x03ABE93C LDR X8, [X29]
	0x03ABE940 LDR X8, [X8 + 0xB8]
	0x03ABE944 ADRP X9, 0x69A000
	0x03ABE948 LDR X9, [X9 + 0x388]
	0x03ABE94C LDR X1, [X9]
	0x03ABE950 MOVZ W9, 0x11F0
	0x03ABE954 ADD X0, X8, X9
	0x03ABE958 ADD X8, X31, 0x1000
	0x03ABE95C ADD X8, X8, 0x70
	0x03ABE960 BL 0x2673C94
	0x03ABE964 ADD X1, X31, 0x1000
	0x03ABE968 ADD X0, X31, 0x520
	0x03ABE96C ADD X1, X1, 0x70
	0x03ABE970 MOVZ W2, 0x378
	0x03ABE974 BL 0x3EB1AC0
	0x03ABE978 ADD X1, X31, 0x520
	0x03ABE97C MOV X0, X19
	0x03ABE980 MOV X2, X31
	0x03ABE984 BL 0x3B05AD0
	0x03ABE988 SUB W8, W0, 0x1
	0x03ABE98C STR W8, [X31 + 0x1038]
	0x03ABE990 LDR W8, [X19 + 0x494]
	0x03ABE994 SUB W8, W8, 0x1
	0x03ABE998 STR W8, [X19 + 0x494]
	0x03ABE99C STR W8, [X31 + 0x1058]
	0x03ABE9A0 MOVZ W8, 0x2026
	0x03ABE9A4 STR W8, [X31 + 0x105C]
	0x03ABE9A8 LDR W8, [X31 + 0x15C]
	0x03ABE9AC ADD W8, W8, 0x1
	0x03ABE9B0 STR W8, [X31 + 0x15C]
	0x03ABE9B4 B 0x3ABCD74
	0x03ABE9B8 ADRP X29, 0x69A000
	0x03ABE9BC LDR X29, [X29 + 0x3E8]
	0x03ABE9C0 LDR X26, [X31 + 0x160]
	0x03ABE9C4 LDR X0, [X29]
	0x03ABE9C8 LDR W8, [X0 + 0xE0]
	0x03ABE9CC CBNZ W8, 0x3ABE9D8
	0x03ABE9D0 BL 0x1C16DFC
	0x03ABE9D4 LDR X0, [X29]
	0x03ABE9D8 LDR X8, [X0 + 0xB8]
	0x03ABE9DC MOV X0, X19
	0x03ABE9E0 MOV X2, X31
	0x03ABE9E4 ADD X27, X31, 0xF90
	0x03ABE9E8 ADD X1, X8, 0x98
	0x03ABE9EC BL 0x3B05AD0
	0x03ABE9F0 ADRP X8, 0x635000
	0x03ABE9F4 LDR X8, [X8 + 0x598]
	0x03ABE9F8 STR W0, [X31 + 0x1038]
	0x03ABE9FC LDR X25, [X19 + 0x2E8]
	0x03ABEA00 LDR X8, [X8]
	0x03ABEA04 LDR W9, [X8 + 0xE0]
	0x03ABEA08 CBNZ W9, 0x3ABEA14
	0x03ABEA0C MOV X0, X8
	0x03ABEA10 BL 0x1C16DFC
	0x03ABEA14 MOV X0, X25
	0x03ABEA18 MOV X1, X31
	0x03ABEA1C MOV X2, X31
	0x03ABEA20 BL 0x3C354F8
	0x03ABEA24 TBZ X0, 0x0, 0x3ABEAA0
	0x03ABEA28 LDR X8, [X19]
	0x03ABEA2C LDR X25, [X19 + 0x2E8]
	0x03ABEA30 MOV X0, X19
	0x03ABEA34 LDR X9, [X8 + 0x548]
	0x03ABEA38 LDR X1, [X8 + 0x550]
	0x03ABEA3C BLR X9
	0x03ABEA40 CBZ X25, 0x3AC3158
	0x03ABEA44 LDR X8, [X25]
	0x03ABEA48 MOV X1, X0
	0x03ABEA4C MOV X0, X25
	0x03ABEA50 LDR X9, [X8 + 0x558]
	0x03ABEA54 LDR X2, [X8 + 0x560]
	0x03ABEA58 BLR X9
	0x03ABEA5C LDR X0, [X19 + 0x2E8]
	0x03ABEA60 CBZ X0, 0x3AC3158
	0x03ABEA64 LDR W8, [X19 + 0x400]
	0x03ABEA68 MOV X2, X31
	0x03ABEA6C STR W8, [X0 + 0x400]
	0x03ABEA70 LDR W1, [X19 + 0x494]
	0x03ABEA74 BL 0x3AF8B48
	0x03ABEA78 LDR X0, [X19 + 0x2E8]
	0x03ABEA7C CBZ X0, 0x3AC3158
	0x03ABEA80 LDR X8, [X0]
	0x03ABEA84 MOV W1, W31
	0x03ABEA88 MOV W2, W31
	0x03ABEA8C LDR X9, [X8 + 0x7D8]
	0x03ABEA90 LDR X3, [X8 + 0x7E0]
	0x03ABEA94 BLR X9
	0x03ABEA98 MOVZ W8, 0x1
	0x03ABEA9C STRB W8, [X19 + 0x2F8]
	0x03ABEAA0 LDR W8, [X26]
	0x03ABEAA4 MOVZ W9, 0x3
	0x03ABEAA8 STR W9, [X31 + 0x105C]
	0x03ABEAAC STR W8, [X31 + 0x1058]
	0x03ABEAB0 B 0x3ABCD74
	0x03ABEAB4 ADRP X8, 0xFFFFFFFFFD02F000
	0x03ABEAB8 LDR V0, [X8 + 0xB60]
	0x03ABEABC LDR X26, [X31 + 0x160]
	0x03ABEAC0 MOVN W8, 0x0
	0x03ABEAC4 STR W8, [X31 + 0x1038]
	0x03ABEAC8 STR W31, [X26]
	0x03ABEACC STR D0, [X31 + 0x1058]
	0x03ABEAD0 B 0x3ABED88
	0x03ABEAD4 MOVZ W9, 0x1
	0x03ABEAD8 LSLV X8, X9, X8
	0x03ABEADC MOVZ X9, 0x1
	0x03ABEAE0 MOVK X9, 0x6
	0x03ABEAE4 ANDS X31, X8, X9, 0x0
	0x03ABEAE8 B.EQ 0x3ABE724
	0x03ABEAEC ADD X27, X31, 0xF90
	0x03ABEAF0 CMP W25, 0xAD
	0x03ABEAF4 B.EQ 0x3ABEB50
	0x03ABEAF8 MOVZ W8, 0x200B
	0x03ABEAFC CMP W25, W8
	0x03ABEB00 B.EQ 0x3ABEB50
	0x03ABEB04 MOVZ W8, 0x2060
	0x03ABEB08 CMP W25, W8
	0x03ABEB0C B.EQ 0x3ABEB50
	0x03ABEB10 LDR X8, [X23]
	0x03ABEB14 CBZ X8, 0x3AC3158
	0x03ABEB18 LDR X9, [X8 + 0x50]
	0x03ABEB1C CBZ X9, 0x3AC3158
	0x03ABEB20 LDRSW X10, [X19 + 0x4A8]
	0x03ABEB24 LDR W11, [X9 + 0x18]
	0x03ABEB28 CMP W10, W11
	0x03ABEB2C B.CS 0x3AC3264
	0x03ABEB30 MOVZ W11, 0x5C
	0x03ABEB34 MADD X9, X10, X11, X9
	0x03ABEB38 LDR W10, [X9 + 0x2C]
	0x03ABEB3C ADD W10, W10, 0x1
	0x03ABEB40 STR W10, [X9 + 0x2C]
	0x03ABEB44 LDR W9, [X8 + 0x20]
	0x03ABEB48 ADD W9, W9, 0x1
	0x03ABEB4C STR W9, [X8 + 0x20]
	0x03ABEB50 LDR W8, [X31 + 0x106C]
	0x03ABEB54 CMP W8, 0xA0
	0x03ABEB58 B.NE 0x3ABF028
	0x03ABEB5C LDR X8, [X23]
	0x03ABEB60 CBZ X8, 0x3AC3158
	0x03ABEB64 LDR X8, [X8 + 0x50]
	0x03ABEB68 CBZ X8, 0x3AC3158
	0x03ABEB6C LDRSW X9, [X19 + 0x4A8]
	0x03ABEB70 LDR W10, [X8 + 0x18]
	0x03ABEB74 CMP W9, W10
	0x03ABEB78 B.CS 0x3AC3264
	0x03ABEB7C MOVZ W10, 0x5C
	0x03ABEB80 MADD X8, X9, X10, X8
	0x03ABEB84 B 0x3ABEF38
	0x03ABEB88 LDR X8, [X19 + 0x368]
	0x03ABEB8C LDR V2, [X19 + 0x2B8]
	0x03ABEB90 MOVZ W9, 0x1
	0x03ABEB94 STRB W9, [X19 + 0x2C4]
	0x03ABEB98 CBZ X8, 0x3AC3158
	0x03ABEB9C LDR V3, [X31 + 0xE0]
	0x03ABEBA0 LDR V0, [X19 + 0x4D8]
	0x03ABEBA4 FMUL S2, S3, S2
	0x03ABEBA8 FADD S1, S1, S2
	0x03ABEBAC LDR X8, [X8 + 0x38]
	0x03ABEBB0 CBZ X8, 0x3AC3158
	0x03ABEBB4 LDRSW X9, [X19 + 0x494]
	0x03ABEBB8 LDR W11, [X8 + 0x18]
	0x03ABEBBC CMP W9, W11
	0x03ABEBC0 B.CS 0x3AC3264
	0x03ABEBC4 SUB W10, W9, 0x1
	0x03ABEBC8 CMP W10, W11
	0x03ABEBCC B.CS 0x3AC3264
	0x03ABEBD0 SMADDL X12, X10, X28, X8
	0x03ABEBD4 LDRH W12, [X12 + 0x20]
	0x03ABEBD8 LDR V2, [X19 + 0x4B8]
	0x03ABEBDC NOP
	0x03ABEBE0 MADD X11, X9, X28, X8
	0x03ABEBE4 LDR V3, [X11 + 0x158]
	0x03ABEBE8 CMP W12, 0xAD
	0x03ABEBEC LDR W12, [X31 + 0x7C]
	0x03ABEBF0 FADD S1, S1, S2
	0x03ABEBF4 FADD S0, S1, S0
	0x03ABEBF8 CSET W11, NE
	0x03ABEBFC ORR W11, W12, W11, 0x0
	0x03ABEC00 FSUB S10, S0, S3
	0x03ABEC04 TBNZ X11, 0x0, 0x3ABEC1C
	0x03ABEC08 LDR V0, [X31 + 0xBC]
	0x03ABEC0C FCMP S10, S0
	0x03ABEC10 B.MI 0x3ABED68
	0x03ABEC14 LDR W11, [X19 + 0x2E0]
	0x03ABEC18 CBZ W11, 0x3ABED68
	0x03ABEC1C MADD X8, X9, X28, X8
	0x03ABEC20 LDRH W8, [X8 + 0x20]
	0x03ABEC24 CMP W8, 0xAD
	0x03ABEC28 B.NE 0x3ABEC38
	0x03ABEC2C MOVZ W8, 0x1
	0x03ABEC30 STR W8, [X31 + 0x7C]
	0x03ABEC34 B 0x3ABEEA4
	0x03ABEC38 LDRB W8, [X19 + 0x238]
	0x03ABEC3C LDR W9, [X31 + 0x70]
	0x03ABEC40 AND W8, W9, W8, 0x0
	0x03ABEC44 TBZ X8, 0x0, 0x3ABEC94
	0x03ABEC48 LDR V0, [X19 + 0x2D0]
	0x03ABEC4C LDR V1, [X19 + 0x2D4]
	0x03ABEC50 MOVZ W8, 0x42C80000
	0x03ABEC54 FMOV S2, W8
	0x03ABEC58 FDIV S0, S0, S2
	0x03ABEC5C FCMP S1, S0
	0x03ABEC60 B.PL 0x3ABEC74
	0x03ABEC64 LDR W8, [X19 + 0x244]
	0x03ABEC68 LDR W9, [X19 + 0x248]
	0x03ABEC6C CMP W8, W9
	0x03ABEC70 B.LT 0x3AC31F8
	0x03ABEC74 LDR V1, [X19 + 0x1E4]
	0x03ABEC78 LDR V0, [X19 + 0x250]
	0x03ABEC7C FCMP S1, S0
	0x03ABEC80 B.LE 0x3ABEC94
	0x03ABEC84 LDR W8, [X19 + 0x244]
	0x03ABEC88 LDR W9, [X19 + 0x248]
	0x03ABEC8C CMP W8, W9
	0x03ABEC90 B.LT 0x3AC315C
	0x03ABEC94 ADRP X22, 0x69A000
	0x03ABEC98 LDR X22, [X22 + 0x3E8]
	0x03ABEC9C LDR X0, [X22]
	0x03ABECA0 LDR W8, [X0 + 0xE0]
	0x03ABECA4 CBNZ W8, 0x3ABECB0
	0x03ABECA8 BL 0x1C16DFC
	0x03ABECAC LDR X0, [X22]
	0x03ABECB0 LDR X8, [X0 + 0xB8]
	0x03ABECB4 LDR W9, [X31 + 0x34]
	0x03ABECB8 LDR W22, [X8 + 0xE78]
	0x03ABECBC CMP W22, W9
	0x03ABECC0 B.EQ 0x3ABED98
	0x03ABECC4 ADDS W31, W22, 0x1
	0x03ABECC8 B.EQ 0x3ABED98
	0x03ABECCC LDR W9, [X31 + 0x70]
	0x03ABECD0 EOR W9, W9, 0x1
	0x03ABECD4 TBNZ X9, 0x0, 0x3ABED98
	0x03ABECD8 LDR W9, [X0 + 0xE0]
	0x03ABECDC CBNZ W9, 0x3ABECF4
	0x03ABECE0 BL 0x1C16DFC
	0x03ABECE4 ADRP X8, 0x69A000
	0x03ABECE8 LDR X8, [X8 + 0x3E8]
	0x03ABECEC LDR X8, [X8]
	0x03ABECF0 LDR X8, [X8 + 0xB8]
	0x03ABECF4 ADD X1, X8, 0xE78
	0x03ABECF8 MOV X0, X19
	0x03ABECFC MOV X2, X31
	0x03ABED00 BL 0x3B05AD0
	0x03ABED04 STR W0, [X31 + 0x1038]
	0x03ABED08 LDR X8, [X19 + 0x368]
	0x03ABED0C CBZ X8, 0x3AC3158
	0x03ABED10 LDR X9, [X8 + 0x38]
	0x03ABED14 CBZ X9, 0x3AC3158
	0x03ABED18 LDR X8, [X31 + 0x160]
	0x03ABED1C LDR W10, [X9 + 0x18]
	0x03ABED20 LDR W8, [X8]
	0x03ABED24 SUB W8, W8, 0x1
	0x03ABED28 CMP W8, W10
	0x03ABED2C B.CS 0x3AC3264
	0x03ABED30 SMADDL X9, X8, X28, X9
	0x03ABED34 LDRH W9, [X9 + 0x20]
	0x03ABED38 CMP W9, 0xAD
	0x03ABED3C B.NE 0x3ABED94
	0x03ABED40 LDR X26, [X31 + 0x160]
	0x03ABED44 MOVZ W9, 0x2D
	0x03ABED48 STR W9, [X31 + 0x105C]
	0x03ABED4C SUB W9, W0, 0x1
	0x03ABED50 STR W31, [X31 + 0x7C]
	0x03ABED54 STR W8, [X31 + 0x1058]
	0x03ABED58 STR W9, [X31 + 0x1038]
	0x03ABED5C STR W8, [X26]
	0x03ABED60 STR W22, [X31 + 0x34]
	0x03ABED64 B 0x3ABED88
	0x03ABED68 LDR X26, [X31 + 0x160]
	0x03ABED6C MOVZ W8, 0x2D
	0x03ABED70 STR W8, [X31 + 0x105C]
	0x03ABED74 SUB W8, W0, 0x1
	0x03ABED78 STR W31, [X31 + 0x7C]
	0x03ABED7C STR W10, [X31 + 0x1058]
	0x03ABED80 STR W8, [X31 + 0x1038]
	0x03ABED84 STR W10, [X26]
	0x03ABED88 ADRP X29, 0x69A000
	0x03ABED8C LDR X29, [X29 + 0x3E8]
	0x03ABED90 B 0x3ABEEB0
	0x03ABED94 STR W22, [X31 + 0x34]
	0x03ABED98 LDR V0, [X31 + 0xBC]
	0x03ABED9C FCMP S10, S0
	0x03ABEDA0 B.LE 0x3ABEE50
	0x03ABEDA4 LDR W8, [X19 + 0x2E4]
	0x03ABEDA8 ADDS W31, W8, 0x1
	0x03ABEDAC B.NE 0x3ABEDB8
	0x03ABEDB0 LDR W8, [X19 + 0x494]
	0x03ABEDB4 STR W8, [X19 + 0x2E4]
	0x03ABEDB8 LDRB W8, [X19 + 0x238]
	0x03ABEDBC CBZ W8, 0x3ABEE2C
	0x03ABEDC0 LDR V1, [X19 + 0x2BC]
	0x03ABEDC4 LDR V0, [X19 + 0x2C8]
	0x03ABEDC8 FCMP S1, S0
	0x03ABEDCC B.LE 0x3ABEDE0
	0x03ABEDD0 LDR W8, [X19 + 0x244]
	0x03ABEDD4 LDR W9, [X19 + 0x248]
	0x03ABEDD8 CMP W8, W9
	0x03ABEDDC B.LT 0x3AC3234
	0x03ABEDE0 LDR V0, [X19 + 0x2D0]
	0x03ABEDE4 LDR V1, [X19 + 0x2D4]
	0x03ABEDE8 MOVZ W8, 0x42C80000
	0x03ABEDEC FMOV S2, W8
	0x03ABEDF0 FDIV S0, S0, S2
	0x03ABEDF4 FCMP S1, S0
	0x03ABEDF8 B.PL 0x3ABEE0C
	0x03ABEDFC LDR W8, [X19 + 0x244]
	0x03ABEE00 LDR W9, [X19 + 0x248]
	0x03ABEE04 CMP W8, W9
	0x03ABEE08 B.LT 0x3AC31F8
	0x03ABEE0C LDR V1, [X19 + 0x1E4]
	0x03ABEE10 LDR V0, [X19 + 0x250]
	0x03ABEE14 FCMP S1, S0
	0x03ABEE18 B.LE 0x3ABEE2C
	0x03ABEE1C LDR W8, [X19 + 0x244]
	0x03ABEE20 LDR W9, [X19 + 0x248]
	0x03ABEE24 CMP W8, W9
	0x03ABEE28 B.LT 0x3AC315C
	0x03ABEE2C LDR W8, [X19 + 0x2E0]
	0x03ABEE30 CMP W8, 0x6
	0x03ABEE34 B.HI 0x3ABEEB8
	0x03ABEE38 ADRP X11, 0xFFFFFFFFFD0D9000
	0x03ABEE3C ADD X11, X11, 0xB6A
	0x03ABEE40 ADR X9, 0x10
	0x03ABEE44 LDRH W10, [X11, X8, LSL #1]
	0x03ABEE48 ADD X9, X9, X10, 0x2, LSL
	0x03ABEE4C BR X9
	0x03ABEE50 LDR W1, [X31 + 0x1038]
	0x03ABEE54 LDR V3, [X19 + 0x2FC]
	0x03ABEE58 LDR V0, [X31 + 0x60]
	0x03ABEE5C LDR V2, [X31 + 0xE0]
	0x03ABEE60 LDR V4, [X31 + 0xD8]
	0x03ABEE64 LDR V5, [X31 + 0x128]
	0x03ABEE68 LDR V6, [X31 + 0xE8]
	0x03ABEE6C LDR V7, [X31 + 0x58]
	0x03ABEE70 ADD X2, X31, 0x1000
	0x03ABEE74 ADD X3, X31, 0x1000
	0x03ABEE78 ADD X2, X2, 0x64
	0x03ABEE7C ADD X3, X3, 0x68
	0x03ABEE80 MOV X0, X19
	0x03ABEE84 MOV V1.16B, V13.16B
	0x03ABEE88 MOV X4, X31
	0x03ABEE8C BL 0x3B063EC
	0x03ABEE90 MOVZ W8, 0x1
	0x03ABEE94 STR W31, [X31 + 0x7C]
	0x03ABEE98 STR W8, [X31 + 0x70]
	0x03ABEE9C MOVZ W8, 0x1
	0x03ABEEA0 STR W8, [X31 + 0x6C]
	0x03ABEEA4 ADRP X29, 0x69A000
	0x03ABEEA8 LDR X29, [X29 + 0x3E8]
	0x03ABEEAC LDR X26, [X31 + 0x160]
	0x03ABEEB0 ADD X27, X31, 0xF90
	0x03ABEEB4 B 0x3ABCD74
	0x03ABEEB8 LDR W25, [X31 + 0x106C]
	0x03ABEEBC STR W31, [X31 + 0x7C]
	0x03ABEEC0 LDR V1, [X31 + 0xC0]
	0x03ABEEC4 CMP W25, 0xAD
	0x03ABEEC8 ADD X27, X31, 0xF90
	0x03ABEECC B.EQ 0x3ABEF48
	0x03ABEED0 CMP W25, 0x9
	0x03ABEED4 B.NE 0x3ABEF78
	0x03ABEED8 LDR X8, [X23]
	0x03ABEEDC CBZ X8, 0x3AC3158
	0x03ABEEE0 LDR X9, [X8 + 0x38]
	0x03ABEEE4 CBZ X9, 0x3AC3158
	0x03ABEEE8 LDR X10, [X31 + 0x160]
	0x03ABEEEC LDR W11, [X9 + 0x18]
	0x03ABEEF0 LDR W10, [X10]
	0x03ABEEF4 CMP W10, W11
	0x03ABEEF8 B.CS 0x3AC3264
	0x03ABEEFC SXTW X11, W10
	0x03ABEF00 MADD X9, X11, X28, X9
	0x03ABEF04 STRB W31, [X9 + 0x194]
	0x03ABEF08 STR W10, [X19 + 0x4A4]
	0x03ABEF0C LDR X9, [X8 + 0x50]
	0x03ABEF10 CBZ X9, 0x3AC3158
	0x03ABEF14 LDRSW X10, [X19 + 0x4A8]
	0x03ABEF18 LDR W11, [X9 + 0x18]
	0x03ABEF1C CMP W10, W11
	0x03ABEF20 B.CS 0x3AC3264
	0x03ABEF24 MOVZ W11, 0x5C
	0x03ABEF28 MADD X9, X10, X11, X9
	0x03ABEF2C LDR W10, [X9 + 0x2C]
	0x03ABEF30 ADD W10, W10, 0x1
	0x03ABEF34 STR W10, [X9 + 0x2C]
	0x03ABEF38 LDR W9, [X8 + 0x20]
	0x03ABEF3C ADD W9, W9, 0x1
	0x03ABEF40 STR W9, [X8 + 0x20]
	0x03ABEF44 B 0x3ABF028
	0x03ABEF48 LDR X8, [X23]
	0x03ABEF4C CBZ X8, 0x3AC3158
	0x03ABEF50 LDR X8, [X8 + 0x38]
	0x03ABEF54 CBZ X8, 0x3AC3158
	0x03ABEF58 LDR X9, [X31 + 0x160]
	0x03ABEF5C LDR W10, [X8 + 0x18]
	0x03ABEF60 LDRSW X9, [X9]
	0x03ABEF64 CMP W9, W10
	0x03ABEF68 B.CS 0x3AC3264
	0x03ABEF6C MADD X8, X9, X28, X8
	0x03ABEF70 STRB W31, [X8 + 0x194]
	0x03ABEF74 B 0x3ABF028
	0x03ABEF78 LDRB W8, [X19 + 0x1D4]
	0x03ABEF7C MOVZ W9, 0x144
	0x03ABEF80 MOVZ W10, 0x4EC
	0x03ABEF84 CMP W8, 0x0
	0x03ABEF88 LDR W8, [X19 + 0x644]
	0x03ABEF8C CSEL X9, X10, X9, EQ
	0x03ABEF90 LDR W1, [X19, X9, LSL]
	0x03ABEF94 CMP W8, 0x1
	0x03ABEF98 B.EQ 0x3ABEFBC
	0x03ABEF9C CBNZ W8, 0x3ABEFD0
	0x03ABEFA0 LDR X8, [X19]
	0x03ABEFA4 LDR V0, [X31 + 0x140]
	0x03ABEFA8 MOV X0, X19
	0x03ABEFAC LDR X9, [X8 + 0x8B8]
	0x03ABEFB0 LDR X2, [X8 + 0x8C0]
	0x03ABEFB4 BLR X9
	0x03ABEFB8 B 0x3ABEFD0
	0x03ABEFBC LDR X8, [X19]
	0x03ABEFC0 MOV X0, X19
	0x03ABEFC4 LDR X9, [X8 + 0x8C8]
	0x03ABEFC8 LDR X2, [X8 + 0x8D0]
	0x03ABEFCC BLR X9
	0x03ABEFD0 LDR X8, [X31 + 0x160]
	0x03ABEFD4 LDR W9, [X31 + 0x6C]
	0x03ABEFD8 LDR W8, [X8]
	0x03ABEFDC TBZ X9, 0x0, 0x3ABEFE8
	0x03ABEFE0 LDR X9, [X31 + 0x88]
	0x03ABEFE4 STR W8, [X9 + 0x1F0]
	0x03ABEFE8 LDR W10, [X19 + 0x4AC]
	0x03ABEFEC LDR X9, [X19 + 0x368]
	0x03ABEFF0 STR W8, [X19 + 0x4A4]
	0x03ABEFF4 ADD W10, W10, 0x1
	0x03ABEFF8 STR W10, [X19 + 0x4AC]
	0x03ABEFFC CBZ X9, 0x3AC3158
	0x03ABF000 LDR X8, [X9 + 0x50]
	0x03ABF004 CBZ X8, 0x3AC3158
	0x03ABF008 LDRSW X9, [X19 + 0x4A8]
	0x03ABF00C LDR W10, [X8 + 0x18]
	0x03ABF010 CMP W9, W10
	0x03ABF014 B.CS 0x3AC3264
	0x03ABF018 MOVZ W10, 0x5C
	0x03ABF01C MADD X8, X9, X10, X8
	0x03ABF020 STR W31, [X31 + 0x6C]
	0x03ABF024 STP S8, S9, [X8 + 0x60]
	0x03ABF028 LDR W8, [X19 + 0x2E0]
	0x03ABF02C CMP W8, 0x1
	0x03ABF030 B.NE 0x3ABF334
	0x03ABF034 LDR W8, [X31 + 0x106C]
	0x03ABF038 CMP W8, 0x2D
	0x03ABF03C B.EQ 0x3ABF048
	0x03ABF040 EOR W8, W20, 0x1
	0x03ABF044 CBZ W8, 0x3ABF334
	0x03ABF048 LDR X8, [X19 + 0x658]
	0x03ABF04C CBZ X8, 0x3AC3158
	0x03ABF050 LDR V8, [X19 + 0x1E8]
	0x03ABF054 ADD X0, X8, 0x50
	0x03ABF058 MOV X1, X31
	0x03ABF05C BL 0x3C9BF88
	0x03ABF060 LDR X8, [X19 + 0x658]
	0x03ABF064 CBZ X8, 0x3AC3158
	0x03ABF068 MOV W25, W0
	0x03ABF06C ADD X0, X8, 0x50
	0x03ABF070 MOV X1, X31
	0x03ABF074 BL 0x3C9BF98
	0x03ABF078 LDRB W9, [X19 + 0x305]
	0x03ABF07C LDR V1, [X31 + 0x98]
	0x03ABF080 LDR X8, [X19 + 0x650]
	0x03ABF084 FMOV S2, 1
	0x03ABF088 CMP W9, 0x0
	0x03ABF08C FCSEL S9, S1, S2, EQ
	0x03ABF090 CBZ X8, 0x3AC3158
	0x03ABF094 LDR X0, [X8 + 0x20]
	0x03ABF098 CBZ X0, 0x3AC3158
	0x03ABF09C LDR V10, [X19 + 0x404]
	0x03ABF0A0 LDR V11, [X8 + 0x2C]
	0x03ABF0A4 SCVTF S1, W25
	0x03ABF0A8 FDIV S1, S8, S1
	0x03ABF0AC MOV X1, X31
	0x03ABF0B0 FMUL S8, S1, S0
	0x03ABF0B4 BL 0x3C9C4E0
	0x03ABF0B8 LDR X9, [X31 + 0xB0]
	0x03ABF0BC FMUL S1, S8, S9
	0x03ABF0C0 FMUL S1, S10, S1
	0x03ABF0C4 LDR W8, [X31 + 0x106C]
	0x03ABF0C8 LDR V10, [X9]
	0x03ABF0CC LDR X9, [X31 + 0xA8]
	0x03ABF0D0 FMUL S1, S1, S11
	0x03ABF0D4 CMP W8, 0xA
	0x03ABF0D8 FMUL S8, S1, S0
	0x03ABF0DC LDR V9, [X9]
	0x03ABF0E0 B.NE 0x3ABF1C8
	0x03ABF0E4 LDR W8, [X19 + 0x494]
	0x03ABF0E8 LDR W9, [X19 + 0x498]
	0x03ABF0EC CMP W8, W9
	0x03ABF0F0 B.EQ 0x3ABF1C8
	0x03ABF0F4 LDR X9, [X23]
	0x03ABF0F8 CBZ X9, 0x3AC3158
	0x03ABF0FC LDR X9, [X9 + 0x38]
	0x03ABF100 CBZ X9, 0x3AC3158
	0x03ABF104 LDR W10, [X9 + 0x18]
	0x03ABF108 SUB W8, W8, 0x1
	0x03ABF10C CMP W8, W10
	0x03ABF110 B.CS 0x3AC3264
	0x03ABF114 LDR X10, [X19 + 0x658]
	0x03ABF118 CBZ X10, 0x3AC3158
	0x03ABF11C SMADDL X8, X8, X28, X9
	0x03ABF120 LDR V9, [X8 + 0x60]
	0x03ABF124 ADD X0, X10, 0x50
	0x03ABF128 MOV X1, X31
	0x03ABF12C BL 0x3C9BF88
	0x03ABF130 LDR X8, [X19 + 0x658]
	0x03ABF134 CBZ X8, 0x3AC3158
	0x03ABF138 MOV W25, W0
	0x03ABF13C ADD X0, X8, 0x50
	0x03ABF140 MOV X1, X31
	0x03ABF144 BL 0x3C9BF98
	0x03ABF148 LDRB W9, [X19 + 0x305]
	0x03ABF14C MOV V8.16B, V0.16B
	0x03ABF150 LDR V0, [X31 + 0x98]
	0x03ABF154 LDR X8, [X19 + 0x650]
	0x03ABF158 CMP W9, 0x0
	0x03ABF15C FMOV S1, 1
	0x03ABF160 FCSEL S10, S0, S1, EQ
	0x03ABF164 CBZ X8, 0x3AC3158
	0x03ABF168 LDR X0, [X8 + 0x20]
	0x03ABF16C CBZ X0, 0x3AC3158
	0x03ABF170 LDR V11, [X19 + 0x404]
	0x03ABF174 LDR V12, [X8 + 0x2C]
	0x03ABF178 MOV X1, X31
	0x03ABF17C BL 0x3C9C4E0
	0x03ABF180 LDR X8, [X23]
	0x03ABF184 CBZ X8, 0x3AC3158
	0x03ABF188 LDR X8, [X8 + 0x50]
	0x03ABF18C CBZ X8, 0x3AC3158
	0x03ABF190 LDRSW X9, [X19 + 0x4A8]
	0x03ABF194 LDR W10, [X8 + 0x18]
	0x03ABF198 CMP W9, W10
	0x03ABF19C B.CS 0x3AC3264
	0x03ABF1A0 SCVTF S1, W25
	0x03ABF1A4 MOVZ W10, 0x5C
	0x03ABF1A8 FDIV S1, S9, S1
	0x03ABF1AC MADD X8, X9, X10, X8
	0x03ABF1B0 FMUL S1, S1, S8
	0x03ABF1B4 FMUL S1, S1, S10
	0x03ABF1B8 LDP S10, S9, [X8 + 0x60]
	0x03ABF1BC FMUL S1, S11, S1
	0x03ABF1C0 FMUL S1, S1, S12
	0x03ABF1C4 FMUL S8, S1, S0
	0x03ABF1C8 LDR V12, [X19 + 0x4D8]
	0x03ABF1CC FMOV S0, W31
	0x03ABF1D0 FMOV S11, W31
	0x03ABF1D4 FCMP S12, 0x0
	0x03ABF1D8 B.LE 0x3ABF1F4
	0x03ABF1DC LDRB W8, [X19 + 0x2C4]
	0x03ABF1E0 FMOV S11, W31
	0x03ABF1E4 CBNZ W8, 0x3ABF1F4
	0x03ABF1E8 LDR V1, [X19 + 0x4C8]
	0x03ABF1EC LDR V2, [X19 + 0x4D0]
	0x03ABF1F0 FSUB S11, S1, S2
	0x03ABF1F4 LDR V14, [X19 + 0x4B8]
	0x03ABF1F8 LDR V15, [X19 + 0x4CC]
	0x03ABF1FC LDRB W8, [X19 + 0xF0]
	0x03ABF200 LDR V13, [X19 + 0x640]
	0x03ABF204 CBNZ W8, 0x3ABF244
	0x03ABF208 LDR X8, [X19 + 0x650]
	0x03ABF20C CBZ X8, 0x3AC3158
	0x03ABF210 LDR X0, [X8 + 0x20]
	0x03ABF214 CBZ X0, 0x3AC3158
	0x03ABF218 ADD X8, X31, 0x1000
	0x03ABF21C ADD X8, X8, 0x70
	0x03ABF220 MOV X1, X31
	0x03ABF224 BL 0x3C9C4A4
	0x03ABF228 LDR V0, [X27 + 0xE]
	0x03ABF22C LDR W8, [X31 + 0x1080]
	0x03ABF230 ADD X0, X31, 0xF90
	0x03ABF234 MOV X1, X31
	0x03ABF238 STR V0, [X27]
	0x03ABF23C STR W8, [X31 + 0xFA0]
	0x03ABF240 BL 0x3C9C2EC
	0x03ABF244 LDR V3, [X31 + 0xA0]
	0x03ABF248 LDR V2, [X19 + 0x360]
	0x03ABF24C FSUB S1, S15, S12
	0x03ABF250 FSUB S1, S14, S1
	0x03ABF254 FSUB S3, S3, S10
	0x03ABF258 FSUB S3, S3, S9
	0x03ABF25C FADD S5, S1, S11
	0x03ABF260 FCMP S3, S2
	0x03ABF264 FMOV S1, -1
	0x03ABF268 ADRP X8, 0xFFFFFFFFFD02B000
	0x03ABF26C FCCMP S2, S1, 0x4, PL
	0x03ABF270 LDR V4, [X8 + 0x190]
	0x03ABF274 FCSEL S1, S3, S2, EQ
	0x03ABF278 LDR V3, [X31 + 0xBC]
	0x03ABF27C CMP W26, 0x0
	0x03ABF280 FMOV S2, 1
	0x03ABF284 FCSEL S2, S2, S4, EQ
	0x03ABF288 FCMP S5, S3
	0x03ABF28C B.PL 0x3ABF334
	0x03ABF290 LDR V3, [X19 + 0x2D4]
	0x03ABF294 FMOV S5, 1
	0x03ABF298 FABS S4, S13
	0x03ABF29C FMUL S1, S2, S1
	0x03ABF2A0 FSUB S3, S5, S3
	0x03ABF2A4 FMUL S0, S0, S3
	0x03ABF2A8 FMUL S0, S8, S0
	0x03ABF2AC FADD S0, S4, S0
	0x03ABF2B0 FCMP S0, S1
	0x03ABF2B4 B.PL 0x3ABF334
	0x03ABF2B8 ADRP X22, 0x699000
	0x03ABF2BC LDR X22, [X22 + 0x3E8]
	0x03ABF2C0 LDR X0, [X22]
	0x03ABF2C4 LDR W8, [X0 + 0xE0]
	0x03ABF2C8 CBNZ W8, 0x3ABF2D4
	0x03ABF2CC BL 0x1C16DFC
	0x03ABF2D0 LDR X0, [X22]
	0x03ABF2D4 LDR X8, [X0 + 0xB8]
	0x03ABF2D8 LDR W2, [X31 + 0x1038]
	0x03ABF2DC LDR W3, [X19 + 0x494]
	0x03ABF2E0 MOV X0, X19
	0x03ABF2E4 ADD X1, X8, 0x788
	0x03ABF2E8 MOV X4, X31
	0x03ABF2EC BL 0x3B05DB4
	0x03ABF2F0 LDR X8, [X22]
	0x03ABF2F4 ADRP X9, 0x699000
	0x03ABF2F8 ADD X0, X31, 0x1000
	0x03ABF2FC ADD X0, X0, 0x70
	0x03ABF300 LDR X8, [X8 + 0xB8]
	0x03ABF304 LDR X9, [X9 + 0x390]
	0x03ABF308 MOVZ W2, 0x378
	0x03ABF30C ADD X1, X8, 0x788
	0x03ABF310 LDR X25, [X9]
	0x03ABF314 MOVZ W9, 0x11F0
	0x03ABF318 ADD X26, X8, X9
	0x03ABF31C BL 0x3EB1AC0
	0x03ABF320 ADD X1, X31, 0x1000
	0x03ABF324 ADD X1, X1, 0x70
	0x03ABF328 MOV X0, X26
	0x03ABF32C MOV X2, X25
	0x03ABF330 BL 0x2673B8C
	0x03ABF334 LDR X10, [X23]
	0x03ABF338 CBZ X10, 0x3AC3158
	0x03ABF33C LDR X9, [X10 + 0x38]
	0x03ABF340 LDR X26, [X31 + 0x160]
	0x03ABF344 LDR V13, [X31 + 0x134]
	0x03ABF348 CBZ X9, 0x3AC3158
	0x03ABF34C LDRSW X11, [X26]
	0x03ABF350 LDR W8, [X9 + 0x18]
	0x03ABF354 CMP W11, W8
	0x03ABF358 B.CS 0x3AC3264
	0x03ABF35C LDR W8, [X19 + 0x4A8]
	0x03ABF360 NOP
	0x03ABF364 MADD X11, X11, X28, X9
	0x03ABF368 STR W8, [X11 + 0x64]
	0x03ABF36C LDR W12, [X19 + 0x4B0]
	0x03ABF370 SXTW X9, W8
	0x03ABF374 STR W12, [X11 + 0x68]
	0x03ABF378 TBNZ X20, 0x0, 0x3ABF39C
	0x03ABF37C LDR W11, [X31 + 0x106C]
	0x03ABF380 CMP W11, 0xD
	0x03ABF384 B.HI 0x3ABF3C8
	0x03ABF388 MOVZ W12, 0x1
	0x03ABF38C LSLV W11, W12, W11
	0x03ABF390 MOVZ W12, 0x2C00
	0x03ABF394 ANDS W31, W11, W12, 0x0
	0x03ABF398 B.EQ 0x3ABF3C8
	0x03ABF39C LDR X10, [X10 + 0x50]
	0x03ABF3A0 CBZ X10, 0x3AC3158
	0x03ABF3A4 LDR W11, [X10 + 0x18]
	0x03ABF3A8 CMP W8, W11
	0x03ABF3AC B.CS 0x3AC3264
	0x03ABF3B0 MOVZ W11, 0x5C
	0x03ABF3B4 MADD X11, X9, X11, X10
	0x03ABF3B8 LDR W11, [X11 + 0x24]
	0x03ABF3BC CMP W11, 0x1
	0x03ABF3C0 B.EQ 0x3ABF3D0
	0x03ABF3C4 B 0x3ABF3EC
	0x03ABF3C8 LDR X10, [X10 + 0x50]
	0x03ABF3CC CBZ X10, 0x3AC3158
	0x03ABF3D0 LDR W11, [X10 + 0x18]
	0x03ABF3D4 CMP W8, W11
	0x03ABF3D8 B.CS 0x3AC3264
	0x03ABF3DC LDR W8, [X19 + 0x278]
	0x03ABF3E0 MOVZ W11, 0x5C
	0x03ABF3E4 MADD X9, X9, X11, X10
	0x03ABF3E8 STR W8, [X9 + 0x68]
	0x03ABF3EC LDR W8, [X31 + 0x106C]
	0x03ABF3F0 CMP W8, 0x9
	0x03ABF3F4 B.NE 0x3ABF448
	0x03ABF3F8 LDR X22, [X31 + 0x150]
	0x03ABF3FC LDR X8, [X22]
	0x03ABF400 CBZ X8, 0x3AC3158
	0x03ABF404 ADD X0, X8, 0x50
	0x03ABF408 MOV X1, X31
	0x03ABF40C BL 0x3C9C080
	0x03ABF410 LDR X8, [X22]
	0x03ABF414 CBZ X8, 0x3AC3158
	0x03ABF418 LDR V1, [X8 + 0x1B9]
	0x03ABF41C LDR V2, [X19 + 0x640]
	0x03ABF420 UCVTF S1, S1
	0x03ABF424 FMUL S0, S0, S1
	0x03ABF428 FMUL S0, S13, S0
	0x03ABF42C FDIV S1, S2, S0
	0x03ABF430 FRINTP S1, S1
	0x03ABF434 FMUL S1, S0, S1
	0x03ABF438 FADD S0, S2, S0
	0x03ABF43C FCMP S1, S2
	0x03ABF440 FCSEL S0, S1, S0, GT
	0x03ABF444 B 0x3ABF5E8
	0x03ABF448 LDR V0, [X19 + 0x2B0]
	0x03ABF44C FCMP S0, 0x0
	0x03ABF450 B.NE 0x3ABF4D8
	0x03ABF454 LDRB W9, [X19 + 0xF0]
	0x03ABF458 CBZ W9, 0x3ABF538
	0x03ABF45C LDR X9, [X31 + 0x150]
	0x03ABF460 LDR X9, [X9]
	0x03ABF464 CBZ X9, 0x3AC3158
	0x03ABF468 LDR V1, [X9 + 0x1AC]
	0x03ABF46C LDR V5, [X31 + 0x128]
	0x03ABF470 LDR V2, [X19 + 0x2D4]
	0x03ABF474 LDR V4, [X31 + 0x120]
	0x03ABF478 LDR V3, [X19 + 0x2AC]
	0x03ABF47C FADD S1, S5, S1
	0x03ABF480 FMOV S5, 1
	0x03ABF484 FSUB S2, S5, S2
	0x03ABF488 LDR V5, [X31 + 0xD8]
	0x03ABF48C LDR V0, [X19 + 0x640]
	0x03ABF490 FMUL S4, S13, S4
	0x03ABF494 MOVZ W9, 0x200B
	0x03ABF498 FADD S1, S5, S1
	0x03ABF49C LDR V5, [X31 + 0xE0]
	0x03ABF4A0 CMP W8, W9
	0x03ABF4A4 FMUL S1, S5, S1
	0x03ABF4A8 FADD S1, S4, S1
	0x03ABF4AC FADD S1, S3, S1
	0x03ABF4B0 FMUL S1, S2, S1
	0x03ABF4B4 FSUB S0, S0, S1
	0x03ABF4B8 STR S0, [X19 + 0x640]
	0x03ABF4BC B.EQ 0x3ABF4C4
	0x03ABF4C0 CBZ W29, 0x3ABF5EC
	0x03ABF4C4 LDR V1, [X19 + 0x2B4]
	0x03ABF4C8 LDR V2, [X31 + 0xE0]
	0x03ABF4CC FMUL S1, S2, S1
	0x03ABF4D0 FSUB S0, S0, S1
	0x03ABF4D4 B 0x3ABF5E8
	0x03ABF4D8 LDR X9, [X31 + 0x150]
	0x03ABF4DC LDR X9, [X9]
	0x03ABF4E0 CBZ X9, 0x3AC3158
	0x03ABF4E4 LDR V5, [X31 + 0x94]
	0x03ABF4E8 LDR V2, [X9 + 0x1AC]
	0x03ABF4EC LDR V3, [X19 + 0x2D4]
	0x03ABF4F0 LDR V4, [X19 + 0x2AC]
	0x03ABF4F4 FSUB S0, S0, S5
	0x03ABF4F8 LDR V5, [X31 + 0x128]
	0x03ABF4FC LDR V1, [X19 + 0x640]
	0x03ABF500 MOVZ W9, 0x200B
	0x03ABF504 CMP W8, W9
	0x03ABF508 FADD S2, S5, S2
	0x03ABF50C FMOV S5, 1
	0x03ABF510 FSUB S3, S5, S3
	0x03ABF514 LDR V5, [X31 + 0xE0]
	0x03ABF518 FMUL S2, S5, S2
	0x03ABF51C FADD S0, S0, S2
	0x03ABF520 FADD S0, S4, S0
	0x03ABF524 FMUL S0, S3, S0
	0x03ABF528 FADD S0, S1, S0
	0x03ABF52C STR S0, [X19 + 0x640]
	0x03ABF530 B.NE 0x3ABF5D4
	0x03ABF534 B 0x3ABF5D8
	0x03ABF538 LDRB W8, [X19 + 0x474]
	0x03ABF53C CBZ W8, 0x3ABF554
	0x03ABF540 LDR X0, [X31 + 0x80]
	0x03ABF544 MOV X1, X31
	0x03ABF548 BL 0x3C26F34
	0x03ABF54C MOV V8.16B, V0.16B
	0x03ABF550 B 0x3ABF558
	0x03ABF554 FMOV S8, 1
	0x03ABF558 LDR V9, [X19 + 0x640]
	0x03ABF55C ADD X0, X31, 0x1000
	0x03ABF560 ADD X0, X0, 0x20
	0x03ABF564 MOV X1, X31
	0x03ABF568 BL 0x3C9C2EC
	0x03ABF56C LDR X8, [X19 + 0x100]
	0x03ABF570 CBZ X8, 0x3AC3158
	0x03ABF574 LDR V4, [X31 + 0x120]
	0x03ABF578 FMUL S0, S8, S0
	0x03ABF57C LDR V1, [X8 + 0x1AC]
	0x03ABF580 LDR V2, [X19 + 0x2AC]
	0x03ABF584 FADD S0, S4, S0
	0x03ABF588 LDR V4, [X31 + 0x128]
	0x03ABF58C LDR V3, [X19 + 0x2D4]
	0x03ABF590 FMUL S0, S13, S0
	0x03ABF594 MOVZ W9, 0x200B
	0x03ABF598 FADD S1, S4, S1
	0x03ABF59C LDR V4, [X31 + 0xD8]
	0x03ABF5A0 FADD S1, S4, S1
	0x03ABF5A4 LDR V4, [X31 + 0xE0]
	0x03ABF5A8 FMUL S1, S4, S1
	0x03ABF5AC FADD S0, S0, S1
	0x03ABF5B0 FMOV S1, 1
	0x03ABF5B4 FADD S0, S2, S0
	0x03ABF5B8 FSUB S1, S1, S3
	0x03ABF5BC FMUL S0, S1, S0
	0x03ABF5C0 FADD S0, S9, S0
	0x03ABF5C4 STR S0, [X19 + 0x640]
	0x03ABF5C8 LDR W8, [X31 + 0x106C]
	0x03ABF5CC CMP W8, W9
	0x03ABF5D0 B.EQ 0x3ABF5D8
	0x03ABF5D4 CBZ W29, 0x3ABF5EC
	0x03ABF5D8 LDR V1, [X19 + 0x2B4]
	0x03ABF5DC LDR V2, [X31 + 0xE0]
	0x03ABF5E0 FMUL S1, S2, S1
	0x03ABF5E4 FADD S0, S0, S1
	0x03ABF5E8 STR S0, [X19 + 0x640]
	0x03ABF5EC LDR X8, [X23]
	0x03ABF5F0 CBZ X8, 0x3AC3158
	0x03ABF5F4 LDR X9, [X8 + 0x38]
	0x03ABF5F8 CBZ X9, 0x3AC3158
	0x03ABF5FC LDRSW X12, [X26]
	0x03ABF600 LDR X10, [X9 + 0x18]
	0x03ABF604 CMP W12, W10
	0x03ABF608 B.CS 0x3AC3264
	0x03ABF60C MADD X11, X12, X28, X9
	0x03ABF610 STR S0, [X11 + 0x144]
	0x03ABF614 LDR W11, [X31 + 0x106C]
	0x03ABF618 CMP W11, 0xC
	0x03ABF61C B.GT 0x3ABF638
	0x03ABF620 SUB W13, W11, 0xA
	0x03ABF624 CMP W13, 0x2
	0x03ABF628 B.CC 0x3ABF68C
	0x03ABF62C CMP W11, 0x3
	0x03ABF630 B.EQ 0x3ABF68C
	0x03ABF634 B 0x3ABF670
	0x03ABF638 MOVN W13, 0x2027
	0x03ABF63C ADD W13, W11, W13
	0x03ABF640 CMP W13, 0x2
	0x03ABF644 B.CC 0x3ABF68C
	0x03ABF648 CMP W11, 0xD
	0x03ABF64C B.NE 0x3ABF670
	0x03ABF650 LDR V0, [X19 + 0x40C]
	0x03ABF654 LDR W13, [X31 + 0x90]
	0x03ABF658 FMOV S1, W31
	0x03ABF65C FADD S0, S0, S1
	0x03ABF660 CMP W12, W13
	0x03ABF664 STR S0, [X19 + 0x640]
	0x03ABF668 B.NE 0x3ABFC14
	0x03ABF66C B 0x3ABF68C
	0x03ABF670 CMP W11, 0x2D
	0x03ABF674 CSET W13, EQ
	0x03ABF678 AND W13, W20, W13, 0x0
	0x03ABF67C TBNZ X13, 0x0, 0x3ABF68C
	0x03ABF680 LDR W13, [X31 + 0x90]
	0x03ABF684 CMP W12, W13
	0x03ABF688 B.NE 0x3ABFC14
	0x03ABF68C LDR V0, [X19 + 0x4D8]
	0x03ABF690 FCMP S0, 0x0
	0x03ABF694 B.LE 0x3ABF804
	0x03ABF698 ADRP X8, 0x634000
	0x03ABF69C LDR X8, [X8 + 0x5A8]
	0x03ABF6A0 LDR V8, [X19 + 0x4C8]
	0x03ABF6A4 LDR V9, [X19 + 0x4D0]
	0x03ABF6A8 LDR X0, [X8]
	0x03ABF6AC LDR W8, [X0 + 0xE0]
	0x03ABF6B0 CBNZ W8, 0x3ABF6B8
	0x03ABF6B4 BL 0x1C16DFC
	0x03ABF6B8 LDR V1, [X31 + 0x64]
	0x03ABF6BC FSUB S8, S8, S9
	0x03ABF6C0 FABS S0, S8
	0x03ABF6C4 FCMP S0, S1
	0x03ABF6C8 B.LE 0x3ABF804
	0x03ABF6CC LDRB W8, [X19 + 0x2C4]
	0x03ABF6D0 CBNZ W8, 0x3ABF804
	0x03ABF6D4 LDRB W8, [X19 + 0x33C]
	0x03ABF6D8 CBNZ W8, 0x3ABF804
	0x03ABF6DC LDR W1, [X19 + 0x498]
	0x03ABF6E0 LDR W2, [X19 + 0x494]
	0x03ABF6E4 MOV X0, X19
	0x03ABF6E8 MOV V0.16B, V8.16B
	0x03ABF6EC MOV X3, X31
	0x03ABF6F0 BL 0x3B06080
	0x03ABF6F4 LDR V0, [X19 + 0x4C4]
	0x03ABF6F8 LDR V1, [X19 + 0x4D8]
	0x03ABF6FC ADRP X20, 0x699000
	0x03ABF700 FSUB S0, S0, S8
	0x03ABF704 FADD S1, S8, S1
	0x03ABF708 STR S0, [X19 + 0x4C4]
	0x03ABF70C STR S1, [X19 + 0x4D8]
	0x03ABF710 LDR X20, [X20 + 0x3E8]
	0x03ABF714 LDR X0, [X20]
	0x03ABF718 LDR W8, [X0 + 0xE0]
	0x03ABF71C CBNZ W8, 0x3ABF728
	0x03ABF720 BL 0x1C16DFC
	0x03ABF724 LDR X0, [X20]
	0x03ABF728 LDR X8, [X0 + 0xB8]
	0x03ABF72C LDR W10, [X19 + 0x4A8]
	0x03ABF730 LDR W9, [X8 + 0x7AC]
	0x03ABF734 CMP W9, W10
	0x03ABF738 B.NE 0x3ABF804
	0x03ABF73C LDR W9, [X0 + 0xE0]
	0x03ABF740 CBNZ W9, 0x3ABF758
	0x03ABF744 BL 0x1C16DFC
	0x03ABF748 ADRP X8, 0x699000
	0x03ABF74C LDR X8, [X8 + 0x3E8]
	0x03ABF750 LDR X8, [X8]
	0x03ABF754 LDR X8, [X8 + 0xB8]
	0x03ABF758 ADRP X9, 0x699000
	0x03ABF75C LDR X9, [X9 + 0x388]
	0x03ABF760 MOVZ W22, 0x11F0
	0x03ABF764 ADD X0, X8, X22
	0x03ABF768 ADD X8, X31, 0x1000
	0x03ABF76C LDR X1, [X9]
	0x03ABF770 ADD X8, X8, 0x70
	0x03ABF774 BL 0x2673C94
	0x03ABF778 ADD X1, X31, 0x1000
	0x03ABF77C ADD X0, X31, 0x1A0
	0x03ABF780 ADD X1, X1, 0x70
	0x03ABF784 MOVZ W2, 0x378
	0x03ABF788 BL 0x3EB1AC0
	0x03ABF78C ADRP X8, 0x699000
	0x03ABF790 LDR X8, [X8 + 0x3E8]
	0x03ABF794 ADD X1, X31, 0x1A0
	0x03ABF798 MOVZ W2, 0x378
	0x03ABF79C LDR X20, [X8]
	0x03ABF7A0 LDR X8, [X20 + 0xB8]
	0x03ABF7A4 ADD X0, X8, 0x788
	0x03ABF7A8 BL 0x3EB1AC0
	0x03ABF7AC LDR X8, [X20 + 0xB8]
	0x03ABF7B0 ADRP X9, 0x699000
	0x03ABF7B4 ADD X0, X31, 0x1000
	0x03ABF7B8 ADD X0, X0, 0x70
	0x03ABF7BC LDR V0, [X8 + 0x7BC]
	0x03ABF7C0 LDR V1, [X8 + 0x800]
	0x03ABF7C4 ADD X1, X8, 0x788
	0x03ABF7C8 MOVZ W2, 0x378
	0x03ABF7CC FADD S0, S8, S0
	0x03ABF7D0 FADD S1, S8, S1
	0x03ABF7D4 STR S0, [X8 + 0x7BC]
	0x03ABF7D8 STR S1, [X8 + 0x800]
	0x03ABF7DC LDR X9, [X9 + 0x390]
	0x03ABF7E0 ADD X26, X8, X22
	0x03ABF7E4 LDR X25, [X9]
	0x03ABF7E8 BL 0x3EB1AC0
	0x03ABF7EC ADD X1, X31, 0x1000
	0x03ABF7F0 ADD X1, X1, 0x70
	0x03ABF7F4 MOV X0, X26
	0x03ABF7F8 MOV X2, X25
	0x03ABF7FC BL 0x2673B8C
	0x03ABF800 LDR X26, [X31 + 0x160]
	0x03ABF804 LDR V1, [X19 + 0x4D8]
	0x03ABF808 LDR V0, [X19 + 0x4CC]
	0x03ABF80C LDR V2, [X19 + 0x4C4]
	0x03ABF810 STRB W31, [X19 + 0x33C]
	0x03ABF814 ADD X8, X31, 0x65
	0x03ABF818 FSUB S0, S0, S1
	0x03ABF81C FCMP S2, S0
	0x03ABF820 FCSEL S3, S2, S0, MI
	0x03ABF824 STR S3, [X19 + 0x4C4]
	0x03ABF828 LDRB W8, [X8 + 0xFFF]
	0x03ABF82C LDR V2, [X19 + 0x4C8]
	0x03ABF830 CBNZ W8, 0x3ABF838
	0x03ABF834 STR S3, [X31 + 0x1068]
	0x03ABF838 LDRB W8, [X19 + 0x334]
	0x03ABF83C CBZ W8, 0x3ABF86C
	0x03ABF840 LDR W8, [X19 + 0x494]
	0x03ABF844 LDR W9, [X19 + 0x328]
	0x03ABF848 CMP W8, W9
	0x03ABF84C B.GE 0x3ABF860
	0x03ABF850 LDR W8, [X19 + 0x4A8]
	0x03ABF854 LDR W9, [X19 + 0x330]
	0x03ABF858 CMP W8, W9
	0x03ABF85C B.LT 0x3ABF86C
	0x03ABF860 MOVZ W8, 0x1
	0x03ABF864 ADD X9, X31, 0x65
	0x03ABF868 STRB W8, [X9 + 0xFFF]
	0x03ABF86C LDR X10, [X23]
	0x03ABF870 CBZ X10, 0x3AC3158
	0x03ABF874 LDR X8, [X10 + 0x50]
	0x03ABF878 CBZ X8, 0x3AC3158
	0x03ABF87C LDRSW X9, [X19 + 0x4A8]
	0x03ABF880 LDR W11, [X8 + 0x18]
	0x03ABF884 CMP W9, W11
	0x03ABF888 B.CS 0x3AC3264
	0x03ABF88C LDR W11, [X19 + 0x498]
	0x03ABF890 MOVZ W12, 0x5C
	0x03ABF894 MADD X12, X9, X12, X8
	0x03ABF898 STR W11, [X12 + 0x34]
	0x03ABF89C LDR W13, [X19 + 0x49C]
	0x03ABF8A0 LDR W14, [X19 + 0x498]
	0x03ABF8A4 CMP W11, W13
	0x03ABF8A8 CSEL W11, W14, W13, GT
	0x03ABF8AC STR W11, [X19 + 0x49C]
	0x03ABF8B0 STR W11, [X12 + 0x38]
	0x03ABF8B4 LDR W13, [X19 + 0x494]
	0x03ABF8B8 STR W13, [X19 + 0x4A0]
	0x03ABF8BC STR W13, [X12 + 0x3C]
	0x03ABF8C0 LDR W13, [X19 + 0x4A4]
	0x03ABF8C4 LDR W14, [X19 + 0x49C]
	0x03ABF8C8 CMP W13, W11
	0x03ABF8CC CSEL W13, W14, W13, LT
	0x03ABF8D0 STR W13, [X31 + 0x103C]
	0x03ABF8D4 STR W13, [X19 + 0x4A4]
	0x03ABF8D8 LDR W14, [X12 + 0x3C]
	0x03ABF8DC LDR W15, [X12 + 0x34]
	0x03ABF8E0 STR W13, [X12 + 0x40]
	0x03ABF8E4 SUB W13, W14, W15
	0x03ABF8E8 ADD W13, W13, 0x1
	0x03ABF8EC STR W13, [X12 + 0x24]
	0x03ABF8F0 LDR W13, [X19 + 0x4AC]
	0x03ABF8F4 STR W13, [X12 + 0x28]
	0x03ABF8F8 LDR X10, [X10 + 0x38]
	0x03ABF8FC CBZ X10, 0x3AC3158
	0x03ABF900 LDR W12, [X10 + 0x18]
	0x03ABF904 CMP W11, W12
	0x03ABF908 B.CS 0x3AC3264
	0x03ABF90C SMADDL X10, X11, X28, X10
	0x03ABF910 LDR W10, [X10 + 0x11C]
	0x03ABF914 MOVZ W11, 0x5C
	0x03ABF918 MADD X8, X9, X11, X8
	0x03ABF91C STR S0, [X8 + 0x70]
	0x03ABF920 STR W10, [X8 + 0x6C]
	0x03ABF924 LDR X10, [X23]
	0x03ABF928 CBZ X10, 0x3AC3158
	0x03ABF92C LDR X8, [X10 + 0x50]
	0x03ABF930 CBZ X8, 0x3AC3158
	0x03ABF934 LDRSW X9, [X19 + 0x4A8]
	0x03ABF938 LDR W11, [X8 + 0x18]
	0x03ABF93C CMP W9, W11
	0x03ABF940 B.CS 0x3AC3264
	0x03ABF944 LDR X10, [X10 + 0x38]
	0x03ABF948 CBZ X10, 0x3AC3158
	0x03ABF94C LDRSW X11, [X19 + 0x4A4]
	0x03ABF950 LDR W12, [X10 + 0x18]
	0x03ABF954 CMP W11, W12
	0x03ABF958 B.CS 0x3AC3264
	0x03ABF95C MADD X10, X11, X28, X10
	0x03ABF960 LDR W10, [X10 + 0x128]
	0x03ABF964 MOVZ W11, 0x5C
	0x03ABF968 FSUB S1, S2, S1
	0x03ABF96C MADD X8, X9, X11, X8
	0x03ABF970 STR W10, [X8 + 0x74]
	0x03ABF974 STR S1, [X8 + 0x78]
	0x03ABF978 LDR X8, [X23]
	0x03ABF97C CBZ X8, 0x3AC3158
	0x03ABF980 LDR X11, [X8 + 0x50]
	0x03ABF984 CBZ X11, 0x3AC3158
	0x03ABF988 LDRSW X12, [X19 + 0x4A8]
	0x03ABF98C LDR W9, [X11 + 0x18]
	0x03ABF990 CMP W12, W9
	0x03ABF994 B.CS 0x3AC3264
	0x03ABF998 MOVZ W9, 0x5C
	0x03ABF99C MADD X9, X12, X9, X11
	0x03ABF9A0 LDR V3, [X31 + 0x140]
	0x03ABF9A4 LDR V2, [X9 + 0x74]
	0x03ABF9A8 LDR W10, [X9 + 0x24]
	0x03ABF9AC FMUL S3, S13, S3
	0x03ABF9B0 FSUB S2, S2, S3
	0x03ABF9B4 STR S2, [X9 + 0x44]
	0x03ABF9B8 LDR V2, [X31 + 0xE8]
	0x03ABF9BC CMP W10, 0x1
	0x03ABF9C0 STR S2, [X9 + 0x5C]
	0x03ABF9C4 B.NE 0x3ABF9D8
	0x03ABF9C8 LDR W9, [X19 + 0x278]
	0x03ABF9CC MOVZ W10, 0x5C
	0x03ABF9D0 MADD X10, X12, X10, X11
	0x03ABF9D4 STR W9, [X10 + 0x68]
	0x03ABF9D8 LDR X9, [X31 + 0x150]
	0x03ABF9DC LDR X14, [X9]
	0x03ABF9E0 CBZ X14, 0x3AC3158
	0x03ABF9E4 LDR X9, [X8 + 0x38]
	0x03ABF9E8 CBZ X9, 0x3AC3158
	0x03ABF9EC LDRSW X13, [X19 + 0x4A4]
	0x03ABF9F0 LDR X10, [X9 + 0x18]
	0x03ABF9F4 CMP W13, W10
	0x03ABF9F8 B.CS 0x3AC3264
	0x03ABF9FC LDR V3, [X14 + 0x1AC]
	0x03ABFA00 NOP
	0x03ABFA04 MADD X14, X13, X28, X9
	0x03ABFA08 LDR V2, [X19 + 0x2AC]
	0x03ABFA0C LDRB W14, [X14 + 0x194]
	0x03ABFA10 LDR V4, [X19 + 0x2D4]
	0x03ABFA14 CBNZ W14, 0x3ABFA24
	0x03ABFA18 LDRSW X13, [X19 + 0x4A0]
	0x03ABFA1C CMP W13, W10
	0x03ABFA20 B.CS 0x3AC3264
	0x03ABFA24 LDR V5, [X31 + 0x128]
	0x03ABFA28 LDR V6, [X31 + 0xE0]
	0x03ABFA2C LDRB W14, [X19 + 0xF0]
	0x03ABFA30 NOP
	0x03ABFA34 MADD X13, X13, X28, X9
	0x03ABFA38 FADD S3, S5, S3
	0x03ABFA3C FMOV S5, 1
	0x03ABFA40 FSUB S4, S5, S4
	0x03ABFA44 LDR V5, [X31 + 0xD8]
	0x03ABFA48 CMP W14, 0x0
	0x03ABFA4C MOVZ W15, 0x5C
	0x03ABFA50 MADD X11, X12, X15, X11
	0x03ABFA54 FADD S3, S5, S3
	0x03ABFA58 FMUL S3, S6, S3
	0x03ABFA5C LDR V5, [X13 + 0x144]
	0x03ABFA60 FSUB S2, S3, S2
	0x03ABFA64 FMUL S2, S4, S2
	0x03ABFA68 FNEG S3, S2
	0x03ABFA6C FCSEL S2, S3, S2, EQ
	0x03ABFA70 FADD S2, S5, S2
	0x03ABFA74 STR S2, [X11 + 0x58]
	0x03ABFA78 LDR V4, [X31 + 0x68]
	0x03ABFA7C LDR V2, [X19 + 0x4D8]
	0x03ABFA80 FSUB S3, S1, S0
	0x03ABFA84 FADD S3, S4, S3
	0x03ABFA88 FMOV S4, W31
	0x03ABFA8C FSUB S2, S4, S2
	0x03ABFA90 STP S2, S0, [X11 + 0x50]
	0x03ABFA94 STP S3, S1, [X11 + 0x48]
	0x03ABFA98 LDR W11, [X31 + 0x106C]
	0x03ABFA9C CMP W11, 0x2C
	0x03ABFAA0 B.GT 0x3ABFAD0
	0x03ABFAA4 SUB W12, W11, 0xA
	0x03ABFAA8 CMP W12, 0x2
	0x03ABFAAC B.CC 0x3ABFAE8
	0x03ABFAB0 CMP W11, 0x3
	0x03ABFAB4 B.NE 0x3ABFC14
	0x03ABFAB8 LDR X11, [X19 + 0x478]
	0x03ABFABC CBZ X11, 0x3AC3158
	0x03ABFAC0 LDR X11, [X11 + 0x18]
	0x03ABFAC4 STR W11, [X31 + 0x1038]
	0x03ABFAC8 MOVZ W11, 0x3
	0x03ABFACC B 0x3ABFC14
	0x03ABFAD0 MOVN W12, 0x2027
	0x03ABFAD4 ADD W12, W11, W12
	0x03ABFAD8 CMP W12, 0x2
	0x03ABFADC B.CC 0x3ABFAE8
	0x03ABFAE0 CMP W11, 0x2D
	0x03ABFAE4 B.NE 0x3ABFC14
	0x03ABFAE8 ADRP X29, 0x699000
	0x03ABFAEC LDR X29, [X29 + 0x3E8]
	0x03ABFAF0 LDR X0, [X29]
	0x03ABFAF4 LDR W8, [X0 + 0xE0]
	0x03ABFAF8 CBNZ W8, 0x3ABFB04
	0x03ABFAFC BL 0x1C16DFC
	0x03ABFB00 LDR X0, [X29]
	0x03ABFB04 LDR X8, [X0 + 0xB8]
	0x03ABFB08 LDR W2, [X31 + 0x1038]
	0x03ABFB0C LDR W3, [X19 + 0x494]
	0x03ABFB10 MOV X0, X19
	0x03ABFB14 ADD X1, X8, 0x410
	0x03ABFB18 MOV X4, X31
	0x03ABFB1C BL 0x3B05DB4
	0x03ABFB20 LDR W9, [X19 + 0x4A8]
	0x03ABFB24 LDR W10, [X19 + 0x494]
	0x03ABFB28 LDR X8, [X19 + 0x368]
	0x03ABFB2C STR W31, [X19 + 0x4AC]
	0x03ABFB30 ADD W1, W9, 0x1
	0x03ABFB34 ADD W9, W10, 0x1
	0x03ABFB38 STR W1, [X19 + 0x4A8]
	0x03ABFB3C STR W9, [X19 + 0x498]
	0x03ABFB40 CBZ X8, 0x3AC3158
	0x03ABFB44 LDR X9, [X8 + 0x50]
	0x03ABFB48 CBZ X9, 0x3AC3158
	0x03ABFB4C LDR W9, [X9 + 0x18]
	0x03ABFB50 CMP W1, W9
	0x03ABFB54 B.LT 0x3ABFB6C
	0x03ABFB58 MOV X0, X19
	0x03ABFB5C MOV X2, X31
	0x03ABFB60 BL 0x3B06238
	0x03ABFB64 LDR X8, [X19 + 0x368]
	0x03ABFB68 CBZ X8, 0x3AC3158
	0x03ABFB6C LDR X8, [X8 + 0x38]
	0x03ABFB70 CBZ X8, 0x3AC3158
	0x03ABFB74 LDR W3, [X26]
	0x03ABFB78 LDR W9, [X8 + 0x18]
	0x03ABFB7C CMP W3, W9
	0x03ABFB80 B.CS 0x3AC3264
	0x03ABFB84 SXTW X9, W3
	0x03ABFB88 ADRP X10, 0xFFFFFFFFFD02B000
	0x03ABFB8C LDR V0, [X19 + 0x2C0]
	0x03ABFB90 LDR V1, [X10 + 0x214]
	0x03ABFB94 NOP
	0x03ABFB98 MADD X8, X9, X28, X8
	0x03ABFB9C LDR V8, [X8 + 0x154]
	0x03ABFBA0 FCMP S0, S1
	0x03ABFBA4 B.NE 0x3ABFD58
	0x03ABFBA8 LDR W8, [X31 + 0x106C]
	0x03ABFBAC MOVZ W9, 0x2029
	0x03ABFBB0 FMOV S0, W31
	0x03ABFBB4 CMP W8, W9
	0x03ABFBB8 B.EQ 0x3ABFBC8
	0x03ABFBBC CMP W8, 0xA
	0x03ABFBC0 FMOV S1, W31
	0x03ABFBC4 B.NE 0x3ABFBCC
	0x03ABFBC8 LDR V1, [X19 + 0x2CC]
	0x03ABFBCC LDR V2, [X19 + 0x4CC]
	0x03ABFBD0 LDR V3, [X19 + 0x2BC]
	0x03ABFBD4 LDR V4, [X19 + 0x2B8]
	0x03ABFBD8 LDR V5, [X19 + 0x4D8]
	0x03ABFBDC FSUB S0, S0, S2
	0x03ABFBE0 LDR V2, [X31 + 0x58]
	0x03ABFBE4 FADD S0, S8, S0
	0x03ABFBE8 FADD S1, S4, S1
	0x03ABFBEC MOV W8, W31
	0x03ABFBF0 FADD S2, S2, S3
	0x03ABFBF4 LDR V3, [X31 + 0x60]
	0x03ABFBF8 FMUL S2, S3, S2
	0x03ABFBFC FADD S0, S0, S2
	0x03ABFC00 LDR V2, [X31 + 0xE0]
	0x03ABFC04 FMUL S1, S2, S1
	0x03ABFC08 FADD S0, S0, S1
	0x03ABFC0C FADD S0, S0, S5
	0x03ABFC10 B 0x3ABFD98
	0x03ABFC14 LDR W3, [X26]
	0x03ABFC18 CMP W3, W10
	0x03ABFC1C B.CS 0x3AC3264
	0x03ABFC20 SXTW X10, W3
	0x03ABFC24 MADD X12, X10, X28, X9
	0x03ABFC28 LDRB W12, [X12 + 0x194]
	0x03ABFC2C CBZ W12, 0x3ABFC68
	0x03ABFC30 LDR X12, [X31 + 0x88]
	0x03ABFC34 NOP
	0x03ABFC38 MADD X9, X10, X28, X9
	0x03ABFC3C ADD X10, X9, 0x11C
	0x03ABFC40 LDR V1, [X10]
	0x03ABFC44 LDR V0, [X12 + 0x230]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03ABFC50 STR D0, [X12 + 0x230]
	0x03ABFC54 LDR V0, [X12 + 0x238]
	0x03ABFC58 LDR V1, [X9 + 0x128]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03ABFC64 STR D0, [X12 + 0x238]
	0x03ABFC68 LDR W9, [X19 + 0x2E0]
	0x03ABFC6C CMP W9, 0x5
	0x03ABFC70 B.NE 0x3ABFC90
	0x03ABFC74 CMP W11, 0xD
	0x03ABFC78 B.HI 0x3AC0034
	0x03ABFC7C MOVZ W9, 0x1
	0x03ABFC80 LSLV W9, W9, W11
	0x03ABFC84 MOVZ W10, 0x2C00
	0x03ABFC88 ANDS W31, W9, W10, 0x0
	0x03ABFC8C B.EQ 0x3AC0034
	0x03ABFC90 LDRB W8, [X19 + 0x2D8]
	0x03ABFC94 CBNZ W8, 0x3ABFCB8
	0x03ABFC98 LDR W8, [X19 + 0x2E0]
	0x03ABFC9C CMP W8, 0x6
	0x03ABFCA0 B.HI 0x3AC0244
	0x03ABFCA4 MOVZ W9, 0x1
	0x03ABFCA8 LSLV W8, W9, W8
	0x03ABFCAC MOVZ W9, 0x4A
	0x03ABFCB0 ANDS W31, W8, W9, 0x0
	0x03ABFCB4 B.EQ 0x3AC0244
	0x03ABFCB8 LDR W8, [X31 + 0x106C]
	0x03ABFCBC CBZ W29, 0x3ABFE34
	0x03ABFCC0 LDRB W9, [X19 + 0x2DA]
	0x03ABFCC4 CMP W9, 0x1
	0x03ABFCC8 B.EQ 0x3ABFEEC
	0x03ABFCCC MOVN W9, 0x2006
	0x03ABFCD0 ADD W9, W8, W9
	0x03ABFCD4 CMP W9, 0x28
	0x03ABFCD8 B.HI 0x3ABFCF4
	0x03ABFCDC MOVZ W10, 0x1
	0x03ABFCE0 LSLV X9, X10, X9
	0x03ABFCE4 MOVZ X10, 0x401
	0x03ABFCE8 MOVK X10, 0x100
	0x03ABFCEC ANDS X31, X9, X10, 0x0
	0x03ABFCF0 B.NE 0x3ABFE64
	0x03ABFCF4 CMP W8, 0xA0
	0x03ABFCF8 B.EQ 0x3ABFE64
	0x03ABFCFC MOVZ W9, 0x2060
	0x03ABFD00 CMP W8, W9
	0x03ABFD04 B.EQ 0x3ABFE64
	0x03ABFD08 ADRP X29, 0x699000
	0x03ABFD0C LDR X29, [X29 + 0x3E8]
	0x03ABFD10 LDR X0, [X29]
	0x03ABFD14 LDR W8, [X0 + 0xE0]
	0x03ABFD18 CBNZ W8, 0x3ABFD28
	0x03ABFD1C BL 0x1C16DFC
	0x03ABFD20 LDR W3, [X26]
	0x03ABFD24 LDR X0, [X29]
	0x03ABFD28 LDR X8, [X0 + 0xB8]
	0x03ABFD2C LDR W2, [X31 + 0x1038]
	0x03ABFD30 MOV X0, X19
	0x03ABFD34 MOV X4, X31
	0x03ABFD38 ADD X1, X8, 0x98
	0x03ABFD3C BL 0x3B05DB4
	0x03ABFD40 LDR X8, [X29]
	0x03ABFD44 MOVN W9, 0x0
	0x03ABFD48 STR W31, [X31 + 0x70]
	0x03ABFD4C LDR X8, [X8 + 0xB8]
	0x03ABFD50 STR W9, [X8 + 0xE78]
	0x03ABFD54 B 0x3AC024C
	0x03ABFD58 LDR W8, [X31 + 0x106C]
	0x03ABFD5C MOVZ W9, 0x2029
	0x03ABFD60 CMP W8, W9
	0x03ABFD64 B.EQ 0x3ABFD74
	0x03ABFD68 CMP W8, 0xA
	0x03ABFD6C FMOV S1, W31
	0x03ABFD70 B.NE 0x3ABFD78
	0x03ABFD74 LDR V1, [X19 + 0x2CC]
	0x03ABFD78 LDR V2, [X19 + 0x2B8]
	0x03ABFD7C LDR V3, [X19 + 0x4D8]
	0x03ABFD80 MOVZ W8, 0x1
	0x03ABFD84 FADD S1, S2, S1
	0x03ABFD88 LDR V2, [X31 + 0xE0]
	0x03ABFD8C FMUL S1, S2, S1
	0x03ABFD90 FADD S0, S0, S1
	0x03ABFD94 FADD S0, S3, S0
	0x03ABFD98 STR S0, [X19 + 0x4D8]
	0x03ABFD9C STRB W8, [X19 + 0x2C4]
	0x03ABFDA0 LDR X0, [X29]
	0x03ABFDA4 LDR W8, [X0 + 0xE0]
	0x03ABFDA8 CBNZ W8, 0x3ABFDB8
	0x03ABFDAC BL 0x1C16DFC
	0x03ABFDB0 LDR X0, [X29]
	0x03ABFDB4 LDR W3, [X26]
	0x03ABFDB8 LDR X8, [X0 + 0xB8]
	0x03ABFDBC LDR V0, [X19 + 0x408]
	0x03ABFDC0 LDR V1, [X19 + 0x40C]
	0x03ABFDC4 FMOV S3, W31
	0x03ABFDC8 LDR V2, [X8 + 0x15A8]
	0x03ABFDCC FADD S0, S0, S3
	0x03ABFDD0 FADD S0, S0, S1
	0x03ABFDD4 STR S8, [X19 + 0x4D0]
	0x03ABFDD8 UNIMPLEMENTED
	0x03ABFDDC STR D1, [X19 + 0x4C8]
	0x03ABFDE0 STR S0, [X19 + 0x640]
	0x03ABFDE4 LDR W2, [X31 + 0x1038]
	0x03ABFDE8 ADD X1, X8, 0x98
	0x03ABFDEC MOV X0, X19
	0x03ABFDF0 MOV X4, X31
	0x03ABFDF4 BL 0x3B05DB4
	0x03ABFDF8 LDR X8, [X29]
	0x03ABFDFC LDR W2, [X31 + 0x1038]
	0x03ABFE00 LDR W3, [X19 + 0x494]
	0x03ABFE04 MOV X0, X19
	0x03ABFE08 LDR X8, [X8 + 0xB8]
	0x03ABFE0C MOV X4, X31
	0x03ABFE10 ADD X1, X8, 0xB00
	0x03ABFE14 BL 0x3B05DB4
	0x03ABFE18 LDR W8, [X19 + 0x494]
	0x03ABFE1C MOVZ W9, 0x1
	0x03ABFE20 ADD W8, W8, 0x1
	0x03ABFE24 STR W8, [X19 + 0x494]
	0x03ABFE28 MOVZ W8, 0x1
	0x03ABFE2C STP W8, W9, [X31 + 0x6C]
	0x03ABFE30 B 0x3ABCD74
	0x03ABFE34 CMP W8, 0x2D
	0x03ABFE38 B.EQ 0x3ABFCC0
	0x03ABFE3C MOVZ W9, 0x200B
	0x03ABFE40 CMP W8, W9
	0x03ABFE44 B.EQ 0x3ABFCC0
	0x03ABFE48 CMP W8, 0xAD
	0x03ABFE4C B.EQ 0x3ABFCC0
	0x03ABFE50 LDRB W9, [X19 + 0x2DA]
	0x03ABFE54 CBZ W9, 0x3ABFE64
	0x03ABFE58 LDR W9, [X31 + 0x70]
	0x03ABFE5C TBNZ X9, 0x0, 0x3ABFEF8
	0x03ABFE60 B 0x3AC0240
	0x03ABFE64 MOVN W9, 0xAC00
	0x03ABFE68 ADD W9, W8, W9
	0x03ABFE6C MOVZ W10, 0x2BFE
	0x03ABFE70 CMP W9, W10
	0x03ABFE74 B.CC 0x3ABFE98
	0x03ABFE78 MOVN W9, 0x1100
	0x03ABFE7C ADD W9, W8, W9
	0x03ABFE80 CMP W9, 0xFE
	0x03ABFE84 B.CC 0x3ABFE98
	0x03ABFE88 MOVN W9, 0xA960
	0x03ABFE8C ADD W9, W8, W9
	0x03ABFE90 CMP W9, 0x1D
	0x03ABFE94 B.HI 0x3ABFEA8
	0x03ABFE98 MOV X0, X31
	0x03ABFE9C BL 0x3B14228
	0x03ABFEA0 TBZ X0, 0x0, 0x3ABFF10
	0x03ABFEA4 LDR W8, [X31 + 0x106C]
	0x03ABFEA8 MOVN W9, 0xFF00
	0x03ABFEAC ADD W9, W8, W9
	0x03ABFEB0 CMP W9, 0xEE
	0x03ABFEB4 B.CC 0x3ABFF10
	0x03ABFEB8 MOVN W9, 0xFE30
	0x03ABFEBC ADD W9, W8, W9
	0x03ABFEC0 CMP W9, 0x1E
	0x03ABFEC4 B.CC 0x3ABFF10
	0x03ABFEC8 MOVN W9, 0x2E80
	0x03ABFECC ADD W9, W8, W9
	0x03ABFED0 MOVZ W10, 0x717E
	0x03ABFED4 CMP W9, W10
	0x03ABFED8 B.CC 0x3ABFF10
	0x03ABFEDC MOVN W9, 0xF900
	0x03ABFEE0 ADD W9, W8, W9
	0x03ABFEE4 CMP W9, 0x1FD
	0x03ABFEE8 B.LS 0x3ABFF10
	0x03ABFEEC LDR W9, [X31 + 0x70]
	0x03ABFEF0 TBZ X9, 0x0, 0x3AC0240
	0x03ABFEF4 CBNZ W29, 0x3AC014C
	0x03ABFEF8 LDR W9, [X31 + 0x7C]
	0x03ABFEFC CMP W8, 0xAD
	0x03ABFF00 CSET W8, NE
	0x03ABFF04 ORR W8, W9, W8, 0x0
	0x03ABFF08 TBZ X8, 0x0, 0x3AC014C
	0x03ABFF0C B 0x3AC0184
	0x03ABFF10 MOV X0, X31
	0x03ABFF14 BL 0x3B140EC
	0x03ABFF18 CBZ X0, 0x3AC3158
	0x03ABFF1C LDR X0, [X0 + 0x10]
	0x03ABFF20 CBZ X0, 0x3AC3158
	0x03ABFF24 ADRP X8, 0x699000
	0x03ABFF28 LDR W1, [X31 + 0x106C]
	0x03ABFF2C LDR X8, [X8 + 0x318]
	0x03ABFF30 LDR X2, [X8]
	0x03ABFF34 BL 0x2A04684
	0x03ABFF38 LDR W8, [X26]
	0x03ABFF3C LDR W9, [X31 + 0x90]
	0x03ABFF40 CMP W8, W9
	0x03ABFF44 LDR W8, [X31 + 0x54]
	0x03ABFF48 CSEL W8, W0, W8, LT
	0x03ABFF4C STR W8, [X31 + 0x54]
	0x03ABFF50 B.GE 0x3AC0130
	0x03ABFF54 MOV X0, X31
	0x03ABFF58 BL 0x3B140EC
	0x03ABFF5C CBZ X0, 0x3AC3158
	0x03ABFF60 LDR X8, [X23]
	0x03ABFF64 CBZ X8, 0x3AC3158
	0x03ABFF68 LDR X8, [X8 + 0x38]
	0x03ABFF6C CBZ X8, 0x3AC3158
	0x03ABFF70 LDR W9, [X26]
	0x03ABFF74 LDR W10, [X8 + 0x18]
	0x03ABFF78 ADD W9, W9, 0x1
	0x03ABFF7C CMP W9, W10
	0x03ABFF80 B.CS 0x3AC3264
	0x03ABFF84 LDR X0, [X0 + 0x18]
	0x03ABFF88 CBZ X0, 0x3AC3158
	0x03ABFF8C SMADDL X8, X9, X28, X8
	0x03ABFF90 LDRH W1, [X8 + 0x20]
	0x03ABFF94 ADRP X8, 0x699000
	0x03ABFF98 LDR X8, [X8 + 0x318]
	0x03ABFF9C LDR X2, [X8]
	0x03ABFFA0 BL 0x2A04684
	0x03ABFFA4 LDR W8, [X31 + 0x54]
	0x03ABFFA8 TBNZ X8, 0x0, 0x3AC0134
	0x03ABFFAC TBZ X0, 0x0, 0x3AC01C8
	0x03ABFFB0 LDR W8, [X31 + 0x70]
	0x03ABFFB4 TBZ X8, 0x0, 0x3AC023C
	0x03ABFFB8 CBZ W29, 0x3ABFFF4
	0x03ABFFBC ADRP X20, 0x699000
	0x03ABFFC0 LDR X20, [X20 + 0x3E8]
	0x03ABFFC4 LDR X0, [X20]
	0x03ABFFC8 LDR W8, [X0 + 0xE0]
	0x03ABFFCC CBNZ W8, 0x3ABFFD8
	0x03ABFFD0 BL 0x1C16DFC
	0x03ABFFD4 LDR X0, [X20]
	0x03ABFFD8 LDR X8, [X0 + 0xB8]
	0x03ABFFDC LDR W2, [X31 + 0x1038]
	0x03ABFFE0 LDR W3, [X19 + 0x494]
	0x03ABFFE4 MOV X0, X19
	0x03ABFFE8 ADD X1, X8, 0xE78
	0x03ABFFEC MOV X4, X31
	0x03ABFFF0 BL 0x3B05DB4
	0x03ABFFF4 ADRP X29, 0x699000
	0x03ABFFF8 LDR X29, [X29 + 0x3E8]
	0x03ABFFFC LDR X0, [X29]
	0x03AC0000 LDR W8, [X0 + 0xE0]
	0x03AC0004 CBNZ W8, 0x3AC0010
	0x03AC0008 BL 0x1C16DFC
	0x03AC000C LDR X0, [X29]
	0x03AC0010 LDR X8, [X0 + 0xB8]
	0x03AC0014 LDR W2, [X31 + 0x1038]
	0x03AC0018 LDR W3, [X19 + 0x494]
	0x03AC001C MOV X0, X19
	0x03AC0020 ADD X1, X8, 0x98
	0x03AC0024 MOV X4, X31
	0x03AC0028 BL 0x3B05DB4
	0x03AC002C STR W31, [X31 + 0x54]
	0x03AC0030 B 0x3AC01BC
	0x03AC0034 MOV X25, X8
	0x03AC0038 LDR X9, [X25 + 0x58]!
	0x03AC003C CBZ X9, 0x3AC3158
	0x03AC0040 LDR W10, [X19 + 0x4B0]
	0x03AC0044 LDR W9, [X9 + 0x18]
	0x03AC0048 ADD W26, W10, 0x1
	0x03AC004C CMP W26, W9
	0x03AC0050 B.LE 0x3AC0090
	0x03AC0054 ADRP X8, 0x698000
	0x03AC0058 LDR X8, [X8 + 0x368]
	0x03AC005C LDR X0, [X8]
	0x03AC0060 LDR W8, [X0 + 0xE0]
	0x03AC0064 CBNZ W8, 0x3AC006C
	0x03AC0068 BL 0x1C16DFC
	0x03AC006C ADRP X8, 0x698000
	0x03AC0070 LDR X8, [X8 + 0x358]
	0x03AC0074 MOVZ W2, 0x1
	0x03AC0078 MOV X0, X25
	0x03AC007C MOV W1, W26
	0x03AC0080 LDR X3, [X8]
	0x03AC0084 BL 0x22993B0
	0x03AC0088 LDR X8, [X23]
	0x03AC008C CBZ X8, 0x3AC3158
	0x03AC0090 LDR X9, [X8 + 0x58]
	0x03AC0094 CBZ X9, 0x3AC3158
	0x03AC0098 LDRSW X10, [X19 + 0x4B0]
	0x03AC009C LDR W11, [X9 + 0x18]
	0x03AC00A0 LDR X26, [X31 + 0x160]
	0x03AC00A4 CMP W10, W11
	0x03AC00A8 B.CS 0x3AC3264
	0x03AC00AC LDR V0, [X19 + 0x4B4]
	0x03AC00B0 MOVZ W14, 0x14
	0x03AC00B4 MADD X12, X10, X14, X9
	0x03AC00B8 LDR V1, [X12 + 0x30]
	0x03AC00BC STR S0, [X12 + 0x28]
	0x03AC00C0 LDR V0, [X19 + 0x4C4]
	0x03AC00C4 AND X13, X10, 0x0
	0x03AC00C8 FCMP S0, S1
	0x03AC00CC FCSEL S0, S0, S1, MI
	0x03AC00D0 STR S0, [X12 + 0x30]
	0x03AC00D4 LDR W3, [X19 + 0x494]
	0x03AC00D8 ORR W12, W3, W13, 0x0
	0x03AC00DC CBZ W12, 0x3AC0208
	0x03AC00E0 MOVZ W15, 0x14
	0x03AC00E4 SUBS W12, W3, 0x1
	0x03AC00E8 B.LT 0x3AC0110
	0x03AC00EC LDR X8, [X8 + 0x38]
	0x03AC00F0 CBZ X8, 0x3AC3158
	0x03AC00F4 LDR W14, [X8 + 0x18]
	0x03AC00F8 CMP W12, W14
	0x03AC00FC B.CS 0x3AC3264
	0x03AC0100 UMADDL X8, X12, X28, X8
	0x03AC0104 LDR W8, [X8 + 0x68]
	0x03AC0108 CMP W10, W8
	0x03AC010C B.NE 0x3AC0214
	0x03AC0110 LDR W8, [X31 + 0x90]
	0x03AC0114 CMP W3, W8
	0x03AC0118 B.NE 0x3ABFC90
	0x03AC011C MADD X8, X10, X15, X9
	0x03AC0120 LDR W9, [X31 + 0x90]
	0x03AC0124 MOV W3, W9
	0x03AC0128 STR W9, [X8 + 0x24]
	0x03AC012C B 0x3ABFC90
	0x03AC0130 TBZ X0, 0x0, 0x3AC01C8
	0x03AC0134 LDR W9, [X31 + 0x70]
	0x03AC0138 CMP W21, W24
	0x03AC013C CSET W8, NE
	0x03AC0140 ORN W8, W8, W9, 0x0
	0x03AC0144 TBNZ X8, 0x0, 0x3AC0244
	0x03AC0148 CBZ W29, 0x3AC0184
	0x03AC014C ADRP X20, 0x698000
	0x03AC0150 LDR X20, [X20 + 0x3E8]
	0x03AC0154 LDR X0, [X20]
	0x03AC0158 LDR W8, [X0 + 0xE0]
	0x03AC015C CBNZ W8, 0x3AC0168
	0x03AC0160 BL 0x1C16DFC
	0x03AC0164 LDR X0, [X20]
	0x03AC0168 LDR X8, [X0 + 0xB8]
	0x03AC016C LDR W2, [X31 + 0x1038]
	0x03AC0170 LDR W3, [X19 + 0x494]
	0x03AC0174 MOV X0, X19
	0x03AC0178 ADD X1, X8, 0xE78
	0x03AC017C MOV X4, X31
	0x03AC0180 BL 0x3B05DB4
	0x03AC0184 ADRP X29, 0x698000
	0x03AC0188 LDR X29, [X29 + 0x3E8]
	0x03AC018C LDR X0, [X29]
	0x03AC0190 LDR W8, [X0 + 0xE0]
	0x03AC0194 CBNZ W8, 0x3AC01A0
	0x03AC0198 BL 0x1C16DFC
	0x03AC019C LDR X0, [X29]
	0x03AC01A0 LDR X8, [X0 + 0xB8]
	0x03AC01A4 LDR W2, [X31 + 0x1038]
	0x03AC01A8 LDR W3, [X19 + 0x494]
	0x03AC01AC MOV X0, X19
	0x03AC01B0 ADD X1, X8, 0x98
	0x03AC01B4 MOV X4, X31
	0x03AC01B8 BL 0x3B05DB4
	0x03AC01BC MOVZ W8, 0x1
	0x03AC01C0 STR W8, [X31 + 0x70]
	0x03AC01C4 B 0x3AC024C
	0x03AC01C8 ADRP X29, 0x698000
	0x03AC01CC LDR X29, [X29 + 0x3E8]
	0x03AC01D0 LDR X0, [X29]
	0x03AC01D4 LDR W8, [X0 + 0xE0]
	0x03AC01D8 CBNZ W8, 0x3AC01E4
	0x03AC01DC BL 0x1C16DFC
	0x03AC01E0 LDR X0, [X29]
	0x03AC01E4 LDR X8, [X0 + 0xB8]
	0x03AC01E8 LDR W2, [X31 + 0x1038]
	0x03AC01EC LDR W3, [X19 + 0x494]
	0x03AC01F0 MOV X0, X19
	0x03AC01F4 ADD X1, X8, 0x98
	0x03AC01F8 MOV X4, X31
	0x03AC01FC BL 0x3B05DB4
	0x03AC0200 STR W31, [X31 + 0x70]
	0x03AC0204 B 0x3AC024C
	0x03AC0208 MADD X8, X13, X14, X9
	0x03AC020C STR W3, [X8 + 0x20]
	0x03AC0210 B 0x3ABFC90
	0x03AC0214 SUB W8, W13, 0x1
	0x03AC0218 CMP W8, W11
	0x03AC021C B.CS 0x3AC3264
	0x03AC0220 ADD X9, X9, 0x20
	0x03AC0224 MOVZ W11, 0x14
	0x03AC0228 MUL X10, X10, X11
	0x03AC022C SMADDL X8, X8, X11, X9
	0x03AC0230 STR W12, [X8 + 0x4]
	0x03AC0234 STR W3, [X9, X10, LSL]
	0x03AC0238 B 0x3ABFC90
	0x03AC023C STR W31, [X31 + 0x54]
	0x03AC0240 STR W31, [X31 + 0x70]
	0x03AC0244 ADRP X29, 0x698000
	0x03AC0248 LDR X29, [X29 + 0x3E8]
	0x03AC024C LDR X0, [X29]
	0x03AC0250 LDR W8, [X0 + 0xE0]
	0x03AC0254 CBNZ W8, 0x3AC0260
	0x03AC0258 BL 0x1C16DFC
	0x03AC025C LDR X0, [X29]
	0x03AC0260 LDR X8, [X0 + 0xB8]
	0x03AC0264 LDR W2, [X31 + 0x1038]
	0x03AC0268 LDR W3, [X19 + 0x494]
	0x03AC026C MOV X0, X19
	0x03AC0270 ADD X1, X8, 0xB00
	0x03AC0274 MOV X4, X31
	0x03AC0278 BL 0x3B05DB4
	0x03AC027C LDR W8, [X19 + 0x494]
	0x03AC0280 ADD W8, W8, 0x1
	0x03AC0284 STR W8, [X19 + 0x494]
	0x03AC0288 B 0x3ABCD74
	0x03AC028C ADRP X29, 0x698000
	0x03AC0290 LDR X29, [X29 + 0x3E8]
	0x03AC0294 LDR X26, [X31 + 0x160]
	0x03AC0298 LDR X0, [X29]
	0x03AC029C LDR W8, [X0 + 0xE0]
	0x03AC02A0 CBNZ W8, 0x3AC02AC
	0x03AC02A4 BL 0x1C16DFC
	0x03AC02A8 LDR X0, [X29]
	0x03AC02AC LDR X8, [X0 + 0xB8]
	0x03AC02B0 ADD X27, X31, 0xF90
	0x03AC02B4 LDR W9, [X8 + 0x1580]
	0x03AC02B8 CBZ W9, 0x3AC0490
	0x03AC02BC LDR W9, [X0 + 0xE0]
	0x03AC02C0 CBNZ W9, 0x3AC02D0
	0x03AC02C4 BL 0x1C16DFC
	0x03AC02C8 LDR X8, [X29]
	0x03AC02CC LDR X8, [X8 + 0xB8]
	0x03AC02D0 ADRP X9, 0x698000
	0x03AC02D4 LDR X9, [X9 + 0x388]
	0x03AC02D8 LDR X1, [X9]
	0x03AC02DC MOVZ W9, 0x11F0
	0x03AC02E0 ADD X0, X8, X9
	0x03AC02E4 ADD X8, X31, 0x1000
	0x03AC02E8 ADD X8, X8, 0x70
	0x03AC02EC BL 0x2673C94
	0x03AC02F0 ADD X1, X31, 0x1000
	0x03AC02F4 ADD X0, X31, 0x898
	0x03AC02F8 ADD X1, X1, 0x70
	0x03AC02FC MOVZ W2, 0x378
	0x03AC0300 BL 0x3EB1AC0
	0x03AC0304 ADD X1, X31, 0x898
	0x03AC0308 MOV X0, X19
	0x03AC030C MOV X2, X31
	0x03AC0310 BL 0x3B05AD0
	0x03AC0314 STR W31, [X31 + 0x7C]
	0x03AC0318 B 0x3ABE988
	0x03AC031C ADRP X29, 0x698000
	0x03AC0320 LDR X29, [X29 + 0x3E8]
	0x03AC0324 LDR X26, [X31 + 0x160]
	0x03AC0328 LDR X0, [X29]
	0x03AC032C LDR W8, [X0 + 0xE0]
	0x03AC0330 CBNZ W8, 0x3AC033C
	0x03AC0334 BL 0x1C16DFC
	0x03AC0338 LDR X0, [X29]
	0x03AC033C LDR X8, [X0 + 0xB8]
	0x03AC0340 MOV X0, X19
	0x03AC0344 MOV X2, X31
	0x03AC0348 ADD X1, X8, 0xB00
	0x03AC034C BL 0x3B05AD0
	0x03AC0350 STR W31, [X31 + 0x7C]
	0x03AC0354 B 0x3ABE558
	0x03AC0358 MOVZ W9, 0x1
	0x03AC035C STRB W9, [X19 + 0x33C]
	0x03AC0360 LDR W1, [X31 + 0x1038]
	0x03AC0364 LDR V3, [X19 + 0x2FC]
	0x03AC0368 LDR V0, [X31 + 0x60]
	0x03AC036C LDR V2, [X31 + 0xE0]
	0x03AC0370 LDR V4, [X31 + 0xD8]
	0x03AC0374 LDR V5, [X31 + 0x128]
	0x03AC0378 LDR V6, [X31 + 0xE8]
	0x03AC037C LDR V7, [X31 + 0x58]
	0x03AC0380 ADD X2, X31, 0x1000
	0x03AC0384 ADD X3, X31, 0x1000
	0x03AC0388 MOVZ W8, 0x1
	0x03AC038C ADD X2, X2, 0x64
	0x03AC0390 ADD X3, X3, 0x68
	0x03AC0394 MOV X0, X19
	0x03AC0398 MOV V1.16B, V13.16B
	0x03AC039C MOV X4, X31
	0x03AC03A0 STR W8, [X31 + 0x70]
	0x03AC03A4 BL 0x3B063EC
	0x03AC03A8 LDR X8, [X31 + 0x88]
	0x03AC03AC MOVI D0, 0x0
	0x03AC03B0 STR W31, [X19 + 0x4D0]
	0x03AC03B4 STR W31, [X19 + 0x4D8]
	0x03AC03B8 STR D0, [X8 + 0x208]
	0x03AC03BC LDR W8, [X19 + 0x4B0]
	0x03AC03C0 STR W31, [X31 + 0x7C]
	0x03AC03C4 ADD W8, W8, 0x1
	0x03AC03C8 STR W8, [X19 + 0x4B0]
	0x03AC03CC B 0x3ABEE9C
	0x03AC03D0 ADRP X8, 0x633000
	0x03AC03D4 LDR X8, [X8 + 0x598]
	0x03AC03D8 ADRP X29, 0x698000
	0x03AC03DC LDR X25, [X19 + 0x2E8]
	0x03AC03E0 LDR X0, [X8]
	0x03AC03E4 LDR W8, [X0 + 0xE0]
	0x03AC03E8 LDR X29, [X29 + 0x3E8]
	0x03AC03EC LDR X26, [X31 + 0x160]
	0x03AC03F0 CBNZ W8, 0x3AC03F8
	0x03AC03F4 BL 0x1C16DFC
	0x03AC03F8 MOV X0, X25
	0x03AC03FC MOV X1, X31
	0x03AC0400 MOV X2, X31
	0x03AC0404 BL 0x3C354F8
	0x03AC0408 ADD X27, X31, 0xF90
	0x03AC040C TBZ X0, 0x0, 0x3AC0488
	0x03AC0410 LDR X8, [X19]
	0x03AC0414 LDR X25, [X19 + 0x2E8]
	0x03AC0418 MOV X0, X19
	0x03AC041C LDR X9, [X8 + 0x548]
	0x03AC0420 LDR X1, [X8 + 0x550]
	0x03AC0424 BLR X9
	0x03AC0428 CBZ X25, 0x3AC3158
	0x03AC042C LDR X8, [X25]
	0x03AC0430 MOV X1, X0
	0x03AC0434 MOV X0, X25
	0x03AC0438 LDR X9, [X8 + 0x558]
	0x03AC043C LDR X2, [X8 + 0x560]
	0x03AC0440 BLR X9
	0x03AC0444 LDR X0, [X19 + 0x2E8]
	0x03AC0448 CBZ X0, 0x3AC3158
	0x03AC044C LDR W8, [X19 + 0x400]
	0x03AC0450 MOV X2, X31
	0x03AC0454 STR W8, [X0 + 0x400]
	0x03AC0458 LDR W1, [X19 + 0x494]
	0x03AC045C BL 0x3AF8B48
	0x03AC0460 LDR X0, [X19 + 0x2E8]
	0x03AC0464 CBZ X0, 0x3AC3158
	0x03AC0468 LDR X8, [X0]
	0x03AC046C MOV W1, W31
	0x03AC0470 MOV W2, W31
	0x03AC0474 LDR X9, [X8 + 0x7D8]
	0x03AC0478 LDR X3, [X8 + 0x7E0]
	0x03AC047C BLR X9
	0x03AC0480 MOVZ W8, 0x1
	0x03AC0484 STRB W8, [X19 + 0x2F8]
	0x03AC0488 STR W31, [X31 + 0x7C]
	0x03AC048C B 0x3ABEAA0
	0x03AC0490 STR W31, [X31 + 0x7C]
	0x03AC0494 ADRP X8, 0xFFFFFFFFFD02D000
	0x03AC0498 LDR V0, [X8 + 0xB60]
	0x03AC049C MOVN W8, 0x0
	0x03AC04A0 STR W8, [X31 + 0x1038]
	0x03AC04A4 STR D0, [X31 + 0x1058]
	0x03AC04A8 STR X31, [X26]
	0x03AC04AC B 0x3ABCD74
	0x03AC04B0 LDRB W8, [X19 + 0x238]
	0x03AC04B4 CBZ W8, 0x3AC0574
	0x03AC04B8 LDR V2, [X19 + 0x23C]
	0x03AC04BC LDR V0, [X19 + 0x240]
	0x03AC04C0 ADRP X8, 0xFFFFFFFFFD02A000
	0x03AC04C4 LDR V1, [X8 + 0xD0]
	0x03AC04C8 FSUB S0, S2, S0
	0x03AC04CC FCMP S0, S1
	0x03AC04D0 B.LE 0x3AC0574
	0x03AC04D4 LDR V1, [X19 + 0x1E4]
	0x03AC04D8 LDR V0, [X19 + 0x254]
	0x03AC04DC FCMP S1, S0
	0x03AC04E0 B.PL 0x3AC0574
	0x03AC04E4 LDR W8, [X19 + 0x244]
	0x03AC04E8 LDR W9, [X19 + 0x248]
	0x03AC04EC CMP W8, W9
	0x03AC04F0 B.GE 0x3AC0574
	0x03AC04F4 LDR V3, [X19 + 0x2D0]
	0x03AC04F8 LDR V4, [X19 + 0x2D4]
	0x03AC04FC MOVZ W8, 0x42C80000
	0x03AC0500 FMOV S5, W8
	0x03AC0504 FDIV S3, S3, S5
	0x03AC0508 FCMP S4, S3
	0x03AC050C B.PL 0x3AC0514
	0x03AC0510 STR W31, [X19 + 0x2D4]
	0x03AC0514 ADRP X8, 0xFFFFFFFFFD02A000
	0x03AC0518 LDR V3, [X8 + 0x200]
	0x03AC051C FSUB S2, S2, S1
	0x03AC0520 FMOV S4, 0.5
	0x03AC0524 FMUL S2, S2, S4
	0x03AC0528 FMAXNM S2, S2, S3
	0x03AC052C STR S1, [X19 + 0x240]
	0x03AC0530 FMOV S3, 20
	0x03AC0534 FADD S1, S1, S2
	0x03AC0538 FMUL S1, S1, S3
	0x03AC053C ADRP X8, 0xFFFFFFFFFD02A000
	0x03AC0540 FADD S1, S1, S4
	0x03AC0544 LDR V2, [X8 + 0x420]
	0x03AC0548 FCVTZS W8, S1
	0x03AC054C SCVTF S4, W8
	0x03AC0550 MOVZ W8, 0x7F800000
	0x03AC0554 FDIV S3, S4, S3
	0x03AC0558 FMOV S4, W8
	0x03AC055C FCMP S1, S4
	0x03AC0560 FCSEL S1, S2, S3, EQ
	0x03AC0564 FCMP S1, S0
	0x03AC0568 FCSEL S0, S1, S0, MI
	0x03AC056C STR S0, [X19 + 0x1E4]
	0x03AC0570 B 0x3AC065C
	0x03AC0574 LDR W8, [X19 + 0x244]
	0x03AC0578 LDR W9, [X19 + 0x248]
	0x03AC057C LDR W22, [X31 + 0x44]
	0x03AC0580 MOVZ W10, 0x1
	0x03AC0584 STRB W10, [X19 + 0x24C]
	0x03AC0588 CMP W8, W9
	0x03AC058C B.LT 0x3AC0604
	0x03AC0590 LDR X0, [X31 + 0x38]
	0x03AC0594 MOV X1, X31
	0x03AC0598 BL 0x337B6E0
	0x03AC059C MOV X21, X0
	0x03AC05A0 LDR X0, [X31 + 0x48]
	0x03AC05A4 MOV X1, X31
	0x03AC05A8 BL 0x338FE24
	0x03AC05AC ADRP X8, 0x698000
	0x03AC05B0 LDR X8, [X8 + 0x420]
	0x03AC05B4 ADRP X9, 0x698000
	0x03AC05B8 LDR X9, [X9 + 0x408]
	0x03AC05BC MOV X3, X0
	0x03AC05C0 LDR X8, [X8]
	0x03AC05C4 MOV X1, X21
	0x03AC05C8 LDR X2, [X9]
	0x03AC05CC MOV X4, X31
	0x03AC05D0 MOV X0, X8
	0x03AC05D4 BL 0x32277C4
	0x03AC05D8 ADRP X8, 0x633000
	0x03AC05DC LDR X8, [X8 + 0xA28]
	0x03AC05E0 MOV X21, X0
	0x03AC05E4 LDR X8, [X8]
	0x03AC05E8 LDR W9, [X8 + 0xE0]
	0x03AC05EC CBNZ W9, 0x3AC05F8
	0x03AC05F0 MOV X0, X8
	0x03AC05F4 BL 0x1C16DFC
	0x03AC05F8 MOV X0, X21
	0x03AC05FC MOV X1, X31
	0x03AC0600 BL 0x3C06048
	0x03AC0604 LDR W8, [X26]
	0x03AC0608 CBZ W8, 0x3AC0620
	0x03AC060C CMP W8, 0x1
	0x03AC0610 B.NE 0x3AC0690
	0x03AC0614 LDR W8, [X31 + 0x106C]
	0x03AC0618 CMP W8, 0x3
	0x03AC061C B.NE 0x3AC0690
	0x03AC0620 LDR X8, [X19]
	0x03AC0624 MOVZ W1, 0x1
	0x03AC0628 MOV X0, X19
	0x03AC062C LDR X9, [X8 + 0x958]
	0x03AC0630 LDR X2, [X8 + 0x960]
	0x03AC0634 BLR X9
	0x03AC0638 ADRP X8, 0x698000
	0x03AC063C LDR X8, [X8 + 0x3F0]
	0x03AC0640 LDR X0, [X8]
	0x03AC0644 LDR W8, [X0 + 0xE0]
	0x03AC0648 CBNZ W8, 0x3AC0650
	0x03AC064C BL 0x1C16DFC
	0x03AC0650 MOV X0, X19
	0x03AC0654 MOV X1, X31
	0x03AC0658 BL 0x3ADA254
	0x03AC065C ADD X31, X31, 0x1000
	0x03AC0660 ADD X31, X31, 0x3F0
	0x03AC0664 LDP X20, X19, [X31 + 0x90]
	0x03AC0668 LDP X22, X21, [X31 + 0x80]
	0x03AC066C LDP X24, X23, [X31 + 0x70]
	0x03AC0670 LDP X26, X25, [X31 + 0x60]
	0x03AC0674 LDP X28, X27, [X31 + 0x50]
	0x03AC0678 LDP X29, X30, [X31 + 0x40]
	0x03AC067C LDP D9, D8, [X31 + 0x30]
	0x03AC0680 LDP D11, D10, [X31 + 0x20]
	0x03AC0684 LDP D13, D12, [X31 + 0x10]
	0x03AC0688 LDP D15, D14, [X31], #0xA0
	0x03AC068C RET
	0x03AC0690 LDR X0, [X29]
	0x03AC0694 LDR W8, [X0 + 0xE0]
	0x03AC0698 CBNZ W8, 0x3AC06A4
	0x03AC069C BL 0x1C16DFC
	0x03AC06A0 LDR X0, [X29]
	0x03AC06A4 LDR X8, [X0 + 0xB8]
	0x03AC06A8 LDR X8, [X8]
	0x03AC06AC CBZ X8, 0x3AC3158
	0x03AC06B0 LDRSW X9, [X19 + 0x688]
	0x03AC06B4 LDR W10, [X8 + 0x18]
	0x03AC06B8 CMP W9, W10
	0x03AC06BC B.CS 0x3AC3264
	0x03AC06C0 MOVZ W10, 0x38
	0x03AC06C4 MADD X8, X9, X10, X8
	0x03AC06C8 LDR W8, [X8 + 0x54]
	0x03AC06CC UBFM W8, W8, 0x1E, 0x1D
	0x03AC06D0 STR W8, [X31 + 0x1054]
	0x03AC06D4 LDR X8, [X23]
	0x03AC06D8 CBZ X8, 0x3AC3158
	0x03AC06DC LDR X20, [X8 + 0x60]
	0x03AC06E0 CBZ X20, 0x3AC3158
	0x03AC06E4 ADRP X25, 0x698000
	0x03AC06E8 LDR X25, [X25 + 0x348]
	0x03AC06EC LDR X0, [X25]
	0x03AC06F0 LDR W8, [X0 + 0xE0]
	0x03AC06F4 CBNZ W8, 0x3AC06FC
	0x03AC06F8 BL 0x1C16DFC
	0x03AC06FC LDR W8, [X20 + 0x18]
	0x03AC0700 CBZ W8, 0x3AC3264
	0x03AC0704 ADD X0, X20, 0x20
	0x03AC0708 MOV W1, W31
	0x03AC070C MOV X2, X31
	0x03AC0710 BL 0x3B129C0
	0x03AC0714 ADRP X8, 0x918000
	0x03AC0718 LDRB W8, [X8 + 0x783]
	0x03AC071C CBNZ W8, 0x3AC0738
	0x03AC0720 ADRP X0, 0x633000
	0x03AC0724 LDR X0, [X0 + 0x5A0]
	0x03AC0728 BL 0x1C16CF4
	0x03AC072C MOVZ W8, 0x1
	0x03AC0730 ADRP X9, 0x918000
	0x03AC0734 STRB W8, [X9 + 0x783]
	0x03AC0738 ADRP X8, 0x633000
	0x03AC073C LDR X8, [X8 + 0x5A0]
	0x03AC0740 LDR W9, [X19 + 0x270]
	0x03AC0744 ADRP X20, 0x698000
	0x03AC0748 LDR X8, [X8]
	0x03AC074C CMP W9, 0x400
	0x03AC0750 LDR X8, [X8 + 0xB8]
	0x03AC0754 LDR V0, [X8]
	0x03AC0758 STR S0, [X31 + 0xE0]
	0x03AC075C LDUR V0, [X8 + 0x4]
	0x03AC0760 LDR X8, [X19 + 0x758]
	0x03AC0764 STR D0, [X31 + 0xD8]
	0x03AC0768 LDR X20, [X20 + 0x350]
	0x03AC076C B.LE 0x3AC0814
	0x03AC0770 CMP W9, 0x800
	0x03AC0774 B.EQ 0x3AC0888
	0x03AC0778 CMP W9, 0x1000
	0x03AC077C B.EQ 0x3AC08E4
	0x03AC0780 LDR V0, [X31 + 0xE0]
	0x03AC0784 CMP W9, 0x2000
	0x03AC0788 STR S0, [X31 + 0xA8]
	0x03AC078C LDR V0, [X31 + 0xD8]
	0x03AC0790 STR D0, [X31 + 0xA0]
	0x03AC0794 B.NE 0x3AC0B84
	0x03AC0798 CBZ X8, 0x3AC3158
	0x03AC079C LDR W9, [X8 + 0x18]
	0x03AC07A0 CMP W9, 0x1
	0x03AC07A4 B.EQ 0x3AC3264
	0x03AC07A8 CBZ W9, 0x3AC3264
	0x03AC07AC LDUR V2, [X8 + 0x24]
	0x03AC07B0 LDR V3, [X8 + 0x30]
	0x03AC07B4 LDR V0, [X8 + 0x20]
	0x03AC07B8 LDR V1, [X8 + 0x2C]
	0x03AC07BC LDR V4, [X19 + 0x4BC]
	0x03AC07C0 FADD V2.2S, V2.2S, V3.2S
	0x03AC07C4 MOVI V3.2S, 0x3F, 0x18
	0x03AC07C8 LDR V5, [X31 + 0x24]
	0x03AC07CC LDR V6, [X31 + 0x30]
	0x00000000 INVALID
	0x03AC07D4 LDR V3, [X31 + 0x28]
	0x03AC07D8 FADD S0, S0, S1
	0x03AC07DC FMOV S1, 0.5
	0x03AC07E0 FSUB S4, S4, S5
	0x03AC07E4 FMOV S5, W31
	0x03AC07E8 FADD S6, S6, S5
	0x03AC07EC FMUL S0, S0, S1
	0x03AC07F0 FSUB S3, S4, S3
	0x03AC07F4 FMUL S1, S3, S1
	0x03AC07F8 FADD S0, S6, S0
	0x03AC07FC STR S0, [X31 + 0xA8]
	0x03AC0800 FSUB S0, S5, S1
	0x03AC0804 MOVI D1, 0x0
	0x03AC0808 MOV V1.S[0], V0.S[0]
	0x03AC080C FADD V0.2S, V2.2S, V1.2S
	0x03AC0810 B 0x3AC0B80
	0x03AC0814 CMP W9, 0x100
	0x03AC0818 B.EQ 0x3AC095C
	0x03AC081C CMP W9, 0x200
	0x03AC0820 B.EQ 0x3AC09AC
	0x03AC0824 LDR V0, [X31 + 0xE0]
	0x03AC0828 CMP W9, 0x400
	0x03AC082C STR S0, [X31 + 0xA8]
	0x03AC0830 LDR V0, [X31 + 0xD8]
	0x03AC0834 STR D0, [X31 + 0xA0]
	0x03AC0838 B.NE 0x3AC0B84
	0x03AC083C CBZ X8, 0x3AC3158
	0x03AC0840 LDR W9, [X8 + 0x18]
	0x03AC0844 CBZ W9, 0x3AC3264
	0x03AC0848 LDR W9, [X19 + 0x2E0]
	0x03AC084C LDR V1, [X8 + 0x20]
	0x03AC0850 LDUR V0, [X8 + 0x24]
	0x03AC0854 CMP W9, 0x5
	0x03AC0858 B.NE 0x3AC0AE8
	0x03AC085C LDR X8, [X23]
	0x03AC0860 CBZ X8, 0x3AC3158
	0x03AC0864 LDR X8, [X8 + 0x58]
	0x03AC0868 CBZ X8, 0x3AC3158
	0x03AC086C LDR W9, [X8 + 0x18]
	0x03AC0870 CMP W22, W9
	0x03AC0874 B.CS 0x3AC3264
	0x03AC0878 MOVZ W9, 0x14
	0x03AC087C SMADDL X8, X22, X9, X8
	0x03AC0880 LDR V2, [X8 + 0x30]
	0x03AC0884 B 0x3AC0AEC
	0x03AC0888 CBZ X8, 0x3AC3158
	0x03AC088C LDR W9, [X8 + 0x18]
	0x03AC0890 CMP W9, 0x1
	0x03AC0894 B.EQ 0x3AC3264
	0x03AC0898 CBZ W9, 0x3AC3264
	0x03AC089C LDR V1, [X8 + 0x20]
	0x03AC08A0 LDR V2, [X8 + 0x2C]
	0x03AC08A4 LDUR V0, [X8 + 0x24]
	0x03AC08A8 LDR V3, [X8 + 0x30]
	0x03AC08AC LDR V16, [X31 + 0x30]
	0x03AC08B0 FMOV S4, 0.5
	0x03AC08B4 FMOV S6, W31
	0x03AC08B8 FADD S1, S1, S2
	0x03AC08BC MOVI V5.2S, 0x3F, 0x18
	0x03AC08C0 FADD S6, S16, S6
	0x03AC08C4 FADD V0.2S, V0.2S, V3.2S
	0x03AC08C8 FMUL S1, S1, S4
	0x03AC08CC MOVI D7, 0x0
	0x00000000 INVALID
	0x03AC08D4 FADD S1, S6, S1
	0x03AC08D8 STR S1, [X31 + 0xA8]
	0x03AC08DC FADD V0.2S, V0.2S, V7.2S
	0x03AC08E0 B 0x3AC0B80
	0x03AC08E4 CBZ X8, 0x3AC3158
	0x03AC08E8 LDR W9, [X8 + 0x18]
	0x03AC08EC CMP W9, 0x1
	0x03AC08F0 B.EQ 0x3AC3264
	0x03AC08F4 CBZ W9, 0x3AC3264
	0x03AC08F8 LDUR V0, [X8 + 0x24]
	0x03AC08FC LDR V3, [X8 + 0x30]
	0x03AC0900 LDR V1, [X8 + 0x20]
	0x03AC0904 LDR V2, [X8 + 0x2C]
	0x03AC0908 LDR V5, [X19 + 0x4E8]
	0x03AC090C LDR V6, [X31 + 0x24]
	0x03AC0910 FADD V0.2S, V0.2S, V3.2S
	0x03AC0914 LDR V3, [X19 + 0x4E0]
	0x03AC0918 FADD S1, S1, S2
	0x03AC091C MOVI V2.2S, 0x3F, 0x18
	0x03AC0920 FADD S5, S6, S5
	0x03AC0924 LDR V7, [X31 + 0x30]
	0x00000000 INVALID
	0x03AC092C FADD S2, S5, S3
	0x03AC0930 LDR V3, [X31 + 0x28]
	0x03AC0934 FMOV S4, 0.5
	0x03AC0938 FMOV S6, W31
	0x03AC093C FADD S7, S7, S6
	0x03AC0940 FMUL S1, S1, S4
	0x03AC0944 FSUB S2, S2, S3
	0x03AC0948 FADD S1, S7, S1
	0x03AC094C STR S1, [X31 + 0xA8]
	0x03AC0950 FMUL S1, S2, S4
	0x03AC0954 FSUB S1, S6, S1
	0x03AC0958 B 0x3AC0B74
	0x03AC095C CBZ X8, 0x3AC3158
	0x03AC0960 LDR W9, [X8 + 0x18]
	0x03AC0964 CMP W9, 0x1
	0x03AC0968 B.LS 0x3AC3264
	0x03AC096C LDR W9, [X19 + 0x2E0]
	0x03AC0970 LDR V1, [X8 + 0x2C]
	0x03AC0974 LDR V0, [X8 + 0x30]
	0x03AC0978 CMP W9, 0x5
	0x03AC097C B.NE 0x3AC0B10
	0x03AC0980 LDR X8, [X23]
	0x03AC0984 CBZ X8, 0x3AC3158
	0x03AC0988 LDR X8, [X8 + 0x58]
	0x03AC098C CBZ X8, 0x3AC3158
	0x03AC0990 LDR W9, [X8 + 0x18]
	0x03AC0994 CMP W22, W9
	0x03AC0998 B.CS 0x3AC3264
	0x03AC099C MOVZ W9, 0x14
	0x03AC09A0 SMADDL X8, X22, X9, X8
	0x03AC09A4 LDR V2, [X8 + 0x28]
	0x03AC09A8 B 0x3AC0B14
	0x03AC09AC CBZ X8, 0x3AC3158
	0x03AC09B0 LDR W9, [X8 + 0x18]
	0x03AC09B4 CMP W9, 0x1
	0x03AC09B8 B.EQ 0x3AC3264
	0x03AC09BC CBZ W9, 0x3AC3264
	0x03AC09C0 LDUR V0, [X8 + 0x24]
	0x03AC09C4 LDR V1, [X8 + 0x20]
	0x03AC09C8 LDR V2, [X8 + 0x2C]
	0x03AC09CC LDR V3, [X8 + 0x30]
	0x03AC09D0 LDR W9, [X19 + 0x2E0]
	0x03AC09D4 FMOV S4, 0.5
	0x03AC09D8 MOVI V5.2S, 0x3F, 0x18
	0x03AC09DC FADD S1, S1, S2
	0x03AC09E0 FADD V0.2S, V0.2S, V3.2S
	0x03AC09E4 CMP W9, 0x5
	0x03AC09E8 FMUL S1, S1, S4
	0x00000000 INVALID
	0x03AC09F0 B.NE 0x3AC0B38
	0x03AC09F4 LDR X8, [X23]
	0x03AC09F8 CBZ X8, 0x3AC3158
	0x03AC09FC LDR X8, [X8 + 0x58]
	0x03AC0A00 CBZ X8, 0x3AC3158
	0x03AC0A04 LDR W9, [X8 + 0x18]
	0x03AC0A08 CMP W22, W9
	0x03AC0A0C B.CS 0x3AC3264
	0x03AC0A10 LDR V3, [X31 + 0x30]
	0x03AC0A14 MOVZ W9, 0x14
	0x03AC0A18 FMOV S2, W31
	0x03AC0A1C SMADDL X8, X22, X9, X8
	0x03AC0A20 FADD S3, S3, S2
	0x03AC0A24 LDR V4, [X8 + 0x28]
	0x03AC0A28 FADD S1, S3, S1
	0x03AC0A2C LDR V3, [X31 + 0x24]
	0x03AC0A30 LDR V5, [X8 + 0x30]
	0x03AC0A34 STR S1, [X31 + 0xA8]
	0x03AC0A38 FMOV S1, -0.5
	0x03AC0A3C FADD S3, S3, S4
	0x03AC0A40 LDR V4, [X31 + 0x28]
	0x03AC0A44 FADD S3, S3, S5
	0x03AC0A48 FSUB S3, S3, S4
	0x03AC0A4C FMUL S1, S3, S1
	0x03AC0A50 FADD S1, S1, S2
	0x03AC0A54 B 0x3AC0B74
	0x03AC0A58 LDR V0, [X19 + 0x4A8]
	0x03AC0A5C LDR V1, [X31 + 0x20]
	0x03AC0A60 SCVTF S0, S0
	0x03AC0A64 FSUB S1, S1, S4
	0x03AC0A68 FDIV S0, S1, S0
	0x03AC0A6C LDR V1, [X31 + 0x60]
	0x03AC0A70 FDIV S0, S0, S1
	0x03AC0A74 FADD S0, S6, S0
	0x03AC0A78 FCMP S0, S5
	0x03AC0A7C FCSEL S0, S0, S5, GT
	0x03AC0A80 STR S0, [X19 + 0x2BC]
	0x03AC0A84 B 0x3AC065C
	0x03AC0A88 LDR V0, [X19 + 0x240]
	0x03AC0A8C ADRP X8, 0xFFFFFFFFFD02A000
	0x03AC0A90 LDR V2, [X8 + 0x200]
	0x03AC0A94 FMOV S3, 0.5
	0x03AC0A98 FSUB S0, S4, S0
	0x03AC0A9C FMUL S0, S0, S3
	0x03AC0AA0 FMAXNM S0, S0, S2
	0x03AC0AA4 FMOV S2, 20
	0x03AC0AA8 FSUB S0, S4, S0
	0x03AC0AAC FMUL S0, S0, S2
	0x03AC0AB0 ADRP X8, 0xFFFFFFFFFD02A000
	0x03AC0AB4 FADD S0, S0, S3
	0x03AC0AB8 STR S4, [X19 + 0x23C]
	0x03AC0ABC LDR V4, [X8 + 0x420]
	0x03AC0AC0 FCVTZS W8, S0
	0x03AC0AC4 SCVTF S3, W8
	0x03AC0AC8 MOVZ W8, 0x7F800000
	0x03AC0ACC FDIV S2, S3, S2
	0x03AC0AD0 FMOV S3, W8
	0x03AC0AD4 FCMP S0, S3
	0x03AC0AD8 FCSEL S0, S4, S2, EQ
	0x03AC0ADC FCMP S0, S1
	0x03AC0AE0 FCSEL S0, S0, S1, GT
	0x03AC0AE4 B 0x3AC056C
	0x03AC0AE8 LDR V2, [X31 + 0x1068]
	0x03AC0AEC LDR V4, [X31 + 0x30]
	0x03AC0AF0 FMOV S3, W31
	0x03AC0AF4 FADD S4, S4, S3
	0x03AC0AF8 FADD S1, S4, S1
	0x03AC0AFC STR S1, [X31 + 0xA8]
	0x03AC0B00 FSUB S1, S3, S2
	0x03AC0B04 LDR V2, [X31 + 0x28]
	0x03AC0B08 FADD S1, S2, S1
	0x03AC0B0C B 0x3AC0B74
	0x03AC0B10 LDR V2, [X19 + 0x4B8]
	0x03AC0B14 LDR V4, [X31 + 0x30]
	0x03AC0B18 FMOV S3, W31
	0x03AC0B1C FADD S4, S4, S3
	0x03AC0B20 FADD S1, S4, S1
	0x03AC0B24 STR S1, [X31 + 0xA8]
	0x03AC0B28 FSUB S1, S3, S2
	0x03AC0B2C LDR V2, [X31 + 0x24]
	0x03AC0B30 FSUB S1, S1, S2
	0x03AC0B34 B 0x3AC0B74
	0x03AC0B38 LDR V6, [X31 + 0x30]
	0x03AC0B3C FMOV S4, W31
	0x03AC0B40 LDR V2, [X19 + 0x4B8]
	0x03AC0B44 LDR V3, [X31 + 0x1068]
	0x03AC0B48 FADD S6, S6, S4
	0x03AC0B4C FADD S1, S6, S1
	0x03AC0B50 STR S1, [X31 + 0xA8]
	0x03AC0B54 LDR V1, [X31 + 0x24]
	0x03AC0B58 FMOV S5, -0.5
	0x03AC0B5C FADD S1, S1, S2
	0x03AC0B60 LDR V2, [X31 + 0x28]
	0x03AC0B64 FADD S1, S1, S3
	0x03AC0B68 FSUB S1, S1, S2
	0x03AC0B6C FMUL S1, S1, S5
	0x03AC0B70 FADD S1, S1, S4
	0x03AC0B74 MOVI D2, 0x0
	0x03AC0B78 MOV V2.S[0], V1.S[0]
	0x03AC0B7C FADD V0.2S, V0.2S, V2.2S
	0x03AC0B80 STR D0, [X31 + 0xA0]
	0x03AC0B84 MOV X0, X19
	0x03AC0B88 MOV X1, X31
	0x03AC0B8C BL 0x3ACC9E8
	0x03AC0B90 CBZ X0, 0x3AC3158
	0x03AC0B94 MOV X1, X31
	0x03AC0B98 BL 0x3C40EA8
	0x03AC0B9C MOV V8.16B, V1.16B
	0x03AC0BA0 STR S1, [X19 + 0x6E4]
	0x03AC0BA4 FMOV S0, 1
	0x03AC0BA8 FMOV S1, 1
	0x03AC0BAC FMOV S2, 1
	0x03AC0BB0 FMOV S3, 1
	0x03AC0BB4 MOV X0, X31
	0x03AC0BB8 BL 0x1E43664
	0x03AC0BBC STR X0, [X31 + 0x70]
	0x03AC0BC0 FMOV S0, 1
	0x03AC0BC4 FMOV S1, 1
	0x03AC0BC8 FMOV S2, 1
	0x03AC0BCC FMOV S3, 1
	0x03AC0BD0 MOV X0, X31
	0x03AC0BD4 BL 0x1E43664
	0x03AC0BD8 LDR X8, [X20]
	0x03AC0BDC STR X0, [X31 + 0x98]
	0x03AC0BE0 LDR W9, [X8 + 0xE0]
	0x03AC0BE4 CBNZ W9, 0x3AC0BF0
	0x03AC0BE8 MOV X0, X8
	0x03AC0BEC BL 0x1C16DFC
	0x03AC0BF0 ADRP X21, 0x922000
	0x03AC0BF4 LDRB W8, [X21 + 0x4A6]
	0x03AC0BF8 CBNZ W8, 0x3AC0C10
	0x03AC0BFC ADRP X0, 0x698000
	0x03AC0C00 LDR X0, [X0 + 0x350]
	0x03AC0C04 BL 0x1C16CF4
	0x03AC0C08 MOVZ W8, 0x1
	0x03AC0C0C STRB W8, [X21 + 0x4A6]
	0x03AC0C10 LDR X0, [X20]
	0x03AC0C14 LDR W8, [X0 + 0xE0]
	0x03AC0C18 CBNZ W8, 0x3AC0C24
	0x03AC0C1C BL 0x1C16DFC
	0x03AC0C20 LDR X0, [X20]
	0x03AC0C24 LDR X8, [X0 + 0xB8]
	0x03AC0C28 ADD X0, X31, 0x1000
	0x03AC0C2C ADD X0, X0, 0x40
	0x03AC0C30 MOVN W1, 0xBFFF0000
	0x03AC0C34 LDP S0, S1, [X8]
	0x03AC0C38 LDP S2, S3, [X8 + 0x8]
	0x03AC0C3C MOV X2, X31
	0x03AC0C40 BL 0x3ADBDE8
	0x03AC0C44 LDR X0, [X29]
	0x03AC0C48 LDR W8, [X0 + 0xE0]
	0x03AC0C4C CBNZ W8, 0x3AC0C54
	0x03AC0C50 BL 0x1C16DFC
	0x03AC0C54 LDR X9, [X23]
	0x03AC0C58 CBZ X9, 0x3AC3158
	0x03AC0C5C LDR W8, [X26]
	0x03AC0C60 CMP W8, 0x1
	0x03AC0C64 B.LT 0x3AC2D50
	0x03AC0C68 LDR X22, [X9 + 0x38]
	0x03AC0C6C CBZ X22, 0x3AC3158
	0x03AC0C70 LDR X8, [X29]
	0x03AC0C74 LDP S2, S1, [X31 + 0xC8]
	0x03AC0C78 FMOV S0, W31
	0x03AC0C7C FABS S3, S8
	0x03AC0C80 LDR X8, [X8 + 0xB8]
	0x03AC0C84 MOV W15, W31
	0x03AC0C88 MOVZ W9, 0x2E0
	0x03AC0C8C MOVZ W21, 0x178
	0x03AC0C90 LDR V4, [X8 + 0x15A8]
	0x03AC0C94 MOVZ W10, 0x1
	0x03AC0C98 FMOV S14, W31
	0x03AC0C9C FMOV S15, W31
	0x03AC0CA0 STP S0, S4, [X31 + 0xE4]
	0x03AC0CA4 FMOV S0, W31
	0x03AC0CA8 STP S2, S0, [X31 + 0x68]
	0x03AC0CAC FMOV S0, W31
	0x03AC0CB0 STP S0, S3, [X31 + 0x34]
	0x03AC0CB4 FMOV S0, W31
	0x03AC0CB8 STP S2, S0, [X31 + 0x90]
	0x03AC0CBC FMOV S0, W31
	0x03AC0CC0 STR S0, [X31 + 0x30]
	0x03AC0CC4 LDR V0, [X31 + 0xB8]
	0x03AC0CC8 STP X31, X31, [X31 + 0xF0]
	0x03AC0CCC STR W31, [X31 + 0xEC]
	0x03AC0CD0 STR W31, [X31 + 0xC4]
	0x03AC0CD4 STR W31, [X31 + 0x2C]
	0x03AC0CD8 STR W31, [X31 + 0x14C]
	0x03AC0CDC STR W31, [X31 + 0x54]
	0x03AC0CE0 STR X9, [X31 + 0x138]
	0x03AC0CE4 STP S2, S1, [X31 + 0xBC]
	0x03AC0CE8 STP S1, S0, [X31 + 0x60]
	0x03AC0CEC STP S0, S1, [X31 + 0x7C]
	0x03AC0CF0 STR X22, [X31 + 0xB0]
	0x03AC0CF4 LDR W8, [X22 + 0x18]
	0x03AC0CF8 SUB W24, W10, 0x1
	0x03AC0CFC CMP W24, W8
	0x03AC0D00 B.CS 0x3AC3264
	0x03AC0D04 LDR X9, [X23]
	0x03AC0D08 CBZ X9, 0x3AC3158
	0x03AC0D0C LDR X9, [X9 + 0x50]
	0x03AC0D10 MOVZ W12, 0x5C
	0x03AC0D14 STR W10, [X31 + 0x134]
	0x03AC0D18 CBZ X9, 0x3AC3158
	0x03AC0D1C SXTW X28, W24
	0x03AC0D20 MADD X10, X28, X21, X22
	0x03AC0D24 LDR W20, [X10 + 0x64]
	0x03AC0D28 LDR W11, [X9 + 0x18]
	0x03AC0D2C MOVZ W25, 0x178
	0x03AC0D30 CMP W20, W11
	0x03AC0D34 B.CS 0x3AC3264
	0x03AC0D38 LDR X11, [X10 + 0x38]
	0x03AC0D3C LDRH W10, [X10 + 0x20]
	0x03AC0D40 SXTW X14, W20
	0x03AC0D44 MADD X9, X14, X12, X9
	0x03AC0D48 LDR W22, [X9 + 0x68]
	0x03AC0D4C STR W10, [X31 + 0x15C]
	0x03AC0D50 LDRSW X10, [X9 + 0x3C]
	0x03AC0D54 LDR W21, [X9 + 0x20]
	0x03AC0D58 LDP W26, W29, [X9 + 0x28]
	0x03AC0D5C LDR V3, [X9 + 0x4C]
	0x03AC0D60 STR X10, [X31 + 0xD0]
	0x03AC0D64 LDRSW X10, [X9 + 0x40]
	0x03AC0D68 LDP S4, S10, [X9 + 0x54]
	0x03AC0D6C LDP S11, S12, [X9 + 0x5C]
	0x03AC0D70 LDP S9, S13, [X9 + 0x6C]
	0x03AC0D74 LDP S8, S5, [X9 + 0x74]
	0x03AC0D78 CMP W22, 0x8
	0x03AC0D7C STP X10, X11, [X31 + 0x120]
	0x03AC0D80 STR X14, [X31 + 0x140]
	0x03AC0D84 B.LE 0x3AC0DB0
	0x03AC0D88 CMP W22, 0x10
	0x03AC0D8C B.EQ 0x3AC0DE8
	0x03AC0D90 CMP W22, 0x20
	0x03AC0D94 B.NE 0x3AC0F10
	0x03AC0D98 FMOV S2, 0.5
	0x03AC0D9C FMUL S0, S11, S2
	0x03AC0DA0 FADD S1, S9, S8
	0x03AC0DA4 FADD S0, S12, S0
	0x03AC0DA8 FMUL S1, S1, S2
	0x03AC0DAC B 0x3AC0E94
	0x03AC0DB0 SUB W9, W22, 0x1
	0x03AC0DB4 CMP W9, 0x7
	0x03AC0DB8 B.HI 0x3AC0F10
	0x03AC0DBC ADRP X12, 0xFFFFFFFFFD0D7000
	0x03AC0DC0 ADD X12, X12, 0xB78
	0x03AC0DC4 ADR X10, 0x10
	0x03AC0DC8 LDRB W11, [X12, X9, LSL]
	0x03AC0DCC ADD X10, X10, X11, 0x2, LSL
	0x03AC0DD0 BR X10
	0x03AC0DD4 LDRB W8, [X19 + 0xF0]
	0x03AC0DD8 CBZ W8, 0x3AC0EB4
	0x03AC0DDC FMOV S0, W31
	0x03AC0DE0 FSUB S0, S0, S10
	0x03AC0DE4 B 0x3AC0F04
	0x03AC0DE8 LDR W10, [X31 + 0x15C]
	0x03AC0DEC CMP W10, 0xAC
	0x03AC0DF0 B.LE 0x3AC0E18
	0x03AC0DF4 CMP W10, 0xAD
	0x03AC0DF8 B.EQ 0x3AC0F10
	0x03AC0DFC MOVZ W9, 0x200B
	0x03AC0E00 CMP W10, W9
	0x03AC0E04 B.EQ 0x3AC0F10
	0x03AC0E08 MOVZ W9, 0x2060
	0x03AC0E0C CMP W10, W9
	0x03AC0E10 B.EQ 0x3AC0F10
	0x03AC0E14 B 0x3AC0E28
	0x03AC0E18 CMP W10, 0x3
	0x03AC0E1C B.EQ 0x3AC0F10
	0x03AC0E20 CMP W10, 0xA
	0x03AC0E24 B.EQ 0x3AC0F10
	0x03AC0E28 LDR X9, [X31 + 0xD0]
	0x03AC0E2C STR S5, [X31 + 0x100]
	0x03AC0E30 STR S4, [X31 + 0x110]
	0x03AC0E34 STR S3, [X31 + 0x150]
	0x03AC0E38 CMP W9, W8
	0x03AC0E3C B.CS 0x3AC3264
	0x03AC0E40 STR X15, [X31 + 0x58]
	0x03AC0E44 ADRP X8, 0x635000
	0x03AC0E48 LDR X8, [X8 + 0x170]
	0x03AC0E4C LDR X0, [X8]
	0x03AC0E50 LDR X8, [X31 + 0xB0]
	0x03AC0E54 NOP
	0x03AC0E58 MADD X8, X9, X25, X8
	0x03AC0E5C LDR W9, [X0 + 0xE0]
	0x03AC0E60 LDRH W27, [X8 + 0x20]
	0x03AC0E64 CBNZ W9, 0x3AC0E6C
	0x03AC0E68 BL 0x1C16DFC
	0x03AC0E6C MOV W0, W27
	0x03AC0E70 MOV X1, X31
	0x03AC0E74 BL 0x331B664
	0x03AC0E78 TBZ X0, 0x0, 0x3AC0EC0
	0x03AC0E7C MOV W8, W31
	0x03AC0E80 B 0x3AC0ECC
	0x03AC0E84 FMOV S1, 0.5
	0x03AC0E88 FMUL S0, S11, S1
	0x03AC0E8C FMUL S1, S10, S1
	0x03AC0E90 FADD S0, S12, S0
	0x03AC0E94 FSUB S0, S0, S1
	0x03AC0E98 B 0x3AC0F04
	0x03AC0E9C LDRB W8, [X19 + 0xF0]
	0x03AC0EA0 FADD S0, S11, S12
	0x03AC0EA4 FSUB S1, S0, S10
	0x03AC0EA8 CMP W8, 0x0
	0x03AC0EAC FCSEL S0, S1, S0, EQ
	0x03AC0EB0 B 0x3AC0F04
	0x03AC0EB4 FMOV S0, W31
	0x03AC0EB8 FADD S0, S12, S0
	0x03AC0EBC B 0x3AC0F04
	0x03AC0EC0 LDR W8, [X19 + 0x4A8]
	0x03AC0EC4 CMP W20, W8
	0x03AC0EC8 CSET W8, LT
	0x03AC0ECC LDR X15, [X31 + 0x58]
	0x03AC0ED0 LDR V3, [X31 + 0x150]
	0x03AC0ED4 LDR V4, [X31 + 0x110]
	0x03AC0ED8 LDR V5, [X31 + 0x100]
	0x03AC0EDC LDR X14, [X31 + 0x140]
	0x03AC0EE0 ADD X27, X31, 0xF90
	0x03AC0EE4 FCMP S10, S11
	0x03AC0EE8 B.GT 0x3AC1160
	0x03AC0EEC ORR W8, W8, W22, 0x4
	0x03AC0EF0 CBNZ W8, 0x3AC1160
	0x03AC0EF4 LDRB W8, [X19 + 0xF0]
	0x03AC0EF8 FADD S0, S11, S12
	0x03AC0EFC CMP W8, 0x0
	0x03AC0F00 FCSEL S0, S12, S0, EQ
	0x03AC0F04 STR S0, [X31 + 0xE0]
	0x03AC0F08 MOVI D0, 0x0
	0x03AC0F0C STR D0, [X31 + 0xD8]
	0x03AC0F10 LDR X22, [X31 + 0xB0]
	0x03AC0F14 LDR X21, [X22 + 0x18]
	0x03AC0F18 CMP W24, W21
	0x03AC0F1C B.CS 0x3AC3264
	0x03AC0F20 LDR V0, [X31 + 0xE0]
	0x03AC0F24 LDR V1, [X31 + 0xA8]
	0x03AC0F28 MOVZ W9, 0x178
	0x03AC0F2C MADD X26, X28, X9, X22
	0x03AC0F30 LDRB W8, [X26 + 0x194]
	0x03AC0F34 FADD S2, S1, S0
	0x03AC0F38 LDR V0, [X31 + 0xD8]
	0x03AC0F3C LDR V1, [X31 + 0xA0]
	0x03AC0F40 STR X20, [X31 + 0x150]
	0x03AC0F44 FADD V1.2S, V1.2S, V0.2S
	0x03AC0F48 STP V2, V1, [X31 + 0x100]
	0x03AC0F4C CBZ W8, 0x3AC0FD0
	0x03AC0F50 MADD X8, X28, X9, X22
	0x03AC0F54 LDR W27, [X8 + 0x2C]
	0x03AC0F58 MOVZ W25, 0x178
	0x03AC0F5C CBNZ W27, 0x3AC15A4
	0x03AC0F60 LDR V0, [X19 + 0x314]
	0x03AC0F64 SCVTF S1, W20
	0x03AC0F68 MOV V14.16B, V5.16B
	0x03AC0F6C MOV V12.16B, V4.16B
	0x03AC0F70 FMUL S0, S0, S1
	0x03AC0F74 FMOV S1, 1
	0x03AC0F78 MOV V10.16B, V3.16B
	0x03AC0F7C STR X15, [X31 + 0x58]
	0x03AC0F80 BL 0x3EB1BA0
	0x03AC0F84 LDR W8, [X19 + 0x30C]
	0x03AC0F88 CMP W8, 0x3
	0x03AC0F8C B.HI 0x3AC0FE0
	0x03AC0F90 ADRP X11, 0xFFFFFFFFFD0D7000
	0x03AC0F94 ADD X11, X11, 0xB80
	0x03AC0F98 ADR X9, 0x18
	0x03AC0F9C LDRB W10, [X11, X8, LSL]
	0x03AC0FA0 ADD X9, X9, X10, 0x2, LSL
	0x03AC0FA4 MOV V11.16B, V0.16B
	0x03AC0FA8 MOV V5.16B, V12.16B
	0x03AC0FAC BR X9
	0x03AC0FB0 MOVZ W10, 0x178
	0x03AC0FB4 MADD X8, X28, X10, X22
	0x03AC0FB8 MOVZ W9, 0x3F800000
	0x03AC0FBC STR W31, [X8 + 0x84]
	0x03AC0FC0 STR W31, [X8 + 0xAC]
	0x03AC0FC4 STR W9, [X8 + 0xD4]
	0x03AC0FC8 FMOV S0, 1
	0x03AC0FCC B 0x3AC12F4
	0x03AC0FD0 LDR X26, [X31 + 0x160]
	0x03AC0FD4 MOVZ W21, 0x178
	0x03AC0FD8 MOVZ W25, 0x5C
	0x03AC0FDC B 0x3AC182C
	0x03AC0FE0 MOV V5.16B, V12.16B
	0x03AC0FE4 B 0x3AC1300
	0x03AC0FE8 MOVZ W10, 0x178
	0x03AC0FEC LDR W8, [X19 + 0x274]
	0x03AC0FF0 NOP
	0x03AC0FF4 MADD X9, X28, X10, X22
	0x03AC0FF8 LDR V0, [X9 + 0x70]
	0x03AC0FFC CMP W8, 0x208
	0x03AC1000 B.NE 0x3AC110C
	0x03AC1004 LDR X9, [X31 + 0x88]
	0x03AC1008 LDR V3, [X31 + 0xE0]
	0x03AC100C NOP
	0x03AC1010 MADD X8, X28, X10, X22
	0x03AC1014 LDR V1, [X9 + 0x230]
	0x03AC1018 LDR V2, [X9 + 0x238]
	0x03AC101C FADD S0, S3, S0
	0x03AC1020 FSUB S0, S0, S1
	0x03AC1024 FSUB S1, S2, S1
	0x03AC1028 B 0x3AC1054
	0x03AC102C LDR X9, [X31 + 0x88]
	0x03AC1030 MOVZ W10, 0x178
	0x03AC1034 MADD X8, X28, X10, X22
	0x03AC1038 LDR V2, [X8 + 0x70]
	0x03AC103C LDR V3, [X31 + 0xE0]
	0x03AC1040 LDR V0, [X9 + 0x230]
	0x03AC1044 LDR V1, [X9 + 0x238]
	0x03AC1048 FADD S2, S3, S2
	0x03AC104C FSUB S1, S1, S0
	0x03AC1050 FSUB S0, S2, S0
	0x03AC1054 FDIV S0, S0, S1
	0x03AC1058 FADD S0, S11, S0
	0x03AC105C LDR V2, [X8 + 0x98]
	0x03AC1060 STR S0, [X8 + 0x84]
	0x03AC1064 LDR V0, [X9 + 0x230]
	0x03AC1068 LDR V1, [X9 + 0x238]
	0x03AC106C FADD S2, S3, S2
	0x03AC1070 FSUB S2, S2, S0
	0x03AC1074 FSUB S0, S1, S0
	0x03AC1078 FDIV S0, S2, S0
	0x03AC107C FADD S0, S11, S0
	0x03AC1080 LDR V1, [X8 + 0xC0]
	0x03AC1084 STR S0, [X8 + 0xAC]
	0x03AC1088 LDR V0, [X9 + 0x230]
	0x03AC108C LDR V2, [X9 + 0x238]
	0x03AC1090 FADD S1, S3, S1
	0x03AC1094 FSUB S1, S1, S0
	0x03AC1098 FSUB S0, S2, S0
	0x03AC109C FDIV S0, S1, S0
	0x03AC10A0 FADD S0, S11, S0
	0x03AC10A4 LDR V2, [X8 + 0xE8]
	0x03AC10A8 STR S0, [X8 + 0xD4]
	0x03AC10AC LDR V0, [X9 + 0x230]
	0x03AC10B0 LDR V1, [X9 + 0x238]
	0x03AC10B4 FADD S2, S3, S2
	0x03AC10B8 FSUB S2, S2, S0
	0x03AC10BC FSUB S0, S1, S0
	0x03AC10C0 FDIV S0, S2, S0
	0x03AC10C4 FADD S0, S11, S0
	0x03AC10C8 B 0x3AC12F4
	0x03AC10CC LDR W8, [X19 + 0x310]
	0x03AC10D0 CMP W8, 0x3
	0x03AC10D4 B.HI 0x3AC129C
	0x03AC10D8 ADRP X11, 0xFFFFFFFFFD0D6000
	0x03AC10DC ADD X11, X11, 0xB84
	0x03AC10E0 ADR X9, 0x10
	0x03AC10E4 LDRB W10, [X11, X8, LSL]
	0x03AC10E8 ADD X9, X9, X10, 0x2, LSL
	0x03AC10EC BR X9
	0x03AC10F0 MADD X8, X28, X25, X22
	0x03AC10F4 MOVZ W9, 0x3F800000
	0x03AC10F8 STR W31, [X8 + 0x88]
	0x03AC10FC STR W9, [X8 + 0xB0]
	0x03AC1100 STR W31, [X8 + 0xD8]
	0x03AC1104 STR W9, [X8 + 0x100]
	0x03AC1108 B 0x3AC129C
	0x03AC110C MADD X8, X28, X10, X22
	0x03AC1110 LDR V2, [X8 + 0x98]
	0x03AC1114 LDR V3, [X8 + 0xC0]
	0x03AC1118 FSUB S0, S0, S9
	0x03AC111C FSUB S1, S8, S9
	0x03AC1120 LDR V4, [X8 + 0xE8]
	0x03AC1124 FDIV S0, S0, S1
	0x03AC1128 FADD S0, S11, S0
	0x03AC112C STR S0, [X8 + 0x84]
	0x03AC1130 FSUB S0, S2, S9
	0x03AC1134 FSUB S2, S3, S9
	0x03AC1138 FSUB S3, S4, S9
	0x03AC113C FDIV S0, S0, S1
	0x03AC1140 FDIV S2, S2, S1
	0x03AC1144 FDIV S1, S3, S1
	0x03AC1148 FADD S0, S11, S0
	0x03AC114C FADD S2, S11, S2
	0x03AC1150 STR S0, [X8 + 0xAC]
	0x03AC1154 STR S2, [X8 + 0xD4]
	0x03AC1158 FADD S0, S11, S1
	0x03AC115C B 0x3AC12F4
	0x03AC1160 LDR W8, [X31 + 0x134]
	0x03AC1164 LDR X10, [X31 + 0xB0]
	0x03AC1168 CMP W8, 0x1
	0x03AC116C B.EQ 0x3AC1184
	0x03AC1170 CMP W20, W15
	0x03AC1174 B.NE 0x3AC1184
	0x03AC1178 LDR W8, [X19 + 0x324]
	0x03AC117C CMP W24, W8
	0x03AC1180 B.NE 0x3AC2C1C
	0x03AC1184 ADRP X8, 0x634000
	0x03AC1188 LDR X8, [X8 + 0x170]
	0x03AC118C FADD S0, S11, S12
	0x03AC1190 LDR X0, [X8]
	0x03AC1194 LDRB W8, [X19 + 0xF0]
	0x03AC1198 LDR W9, [X0 + 0xE0]
	0x03AC119C CMP W8, 0x0
	0x03AC11A0 FCSEL S0, S12, S0, EQ
	0x03AC11A4 STR S0, [X31 + 0xE0]
	0x03AC11A8 CBNZ W9, 0x3AC11B0
	0x03AC11AC BL 0x1C16DFC
	0x03AC11B0 LDR W0, [X31 + 0x15C]
	0x03AC11B4 MOV X1, X31
	0x03AC11B8 BL 0x331BAF4
	0x03AC11BC LDR X14, [X31 + 0x140]
	0x03AC11C0 LDR X15, [X31 + 0x58]
	0x03AC11C4 LDR V3, [X31 + 0x150]
	0x03AC11C8 LDR V4, [X31 + 0x110]
	0x03AC11CC LDR V5, [X31 + 0x100]
	0x03AC11D0 MOVI D0, 0x0
	0x03AC11D4 STR W0, [X31 + 0x2C]
	0x03AC11D8 B 0x3AC0F0C
	0x03AC11DC MADD X8, X28, X25, X22
	0x03AC11E0 LDR V0, [X8 + 0x74]
	0x03AC11E4 LDR V1, [X8 + 0x9C]
	0x03AC11E8 FSUB S2, S14, S13
	0x03AC11EC FSUB S0, S0, S13
	0x03AC11F0 FSUB S1, S1, S13
	0x03AC11F4 FDIV S0, S0, S2
	0x03AC11F8 FDIV S1, S1, S2
	0x03AC11FC FADD S0, S11, S0
	0x03AC1200 FADD S1, S11, S1
	0x03AC1204 STR S0, [X8 + 0x88]
	0x03AC1208 STR S1, [X8 + 0xB0]
	0x03AC120C STR S0, [X8 + 0xD8]
	0x03AC1210 STR S1, [X8 + 0x100]
	0x03AC1214 B 0x3AC129C
	0x03AC1218 MADD X8, X28, X25, X22
	0x03AC121C LDR V0, [X19 + 0x4E0]
	0x03AC1220 LDR V1, [X19 + 0x4E8]
	0x03AC1224 LDR V2, [X8 + 0x74]
	0x03AC1228 LDR V3, [X8 + 0x9C]
	0x03AC122C FSUB S1, S1, S0
	0x03AC1230 FSUB S0, S2, S0
	0x03AC1234 FDIV S0, S0, S1
	0x03AC1238 FADD S0, S11, S0
	0x03AC123C STR S0, [X8 + 0x88]
	0x03AC1240 LDR V1, [X19 + 0x4E0]
	0x03AC1244 LDR V2, [X19 + 0x4E8]
	0x03AC1248 STR S0, [X8 + 0xD8]
	0x03AC124C FSUB S0, S3, S1
	0x03AC1250 FSUB S1, S2, S1
	0x03AC1254 FDIV S0, S0, S1
	0x03AC1258 FADD S0, S11, S0
	0x03AC125C STR S0, [X8 + 0xB0]
	0x03AC1260 STR S0, [X8 + 0x100]
	0x03AC1264 B 0x3AC129C
	0x03AC1268 ADRP X8, 0x632000
	0x03AC126C LDR X8, [X8 + 0xA28]
	0x03AC1270 LDR X0, [X8]
	0x03AC1274 LDR W8, [X0 + 0xE0]
	0x03AC1278 CBNZ W8, 0x3AC1280
	0x03AC127C BL 0x1C16DFC
	0x03AC1280 ADRP X8, 0x697000
	0x03AC1284 LDR X8, [X8 + 0x418]
	0x03AC1288 MOV X1, X31
	0x03AC128C LDR X0, [X8]
	0x03AC1290 BL 0x3C06048
	0x03AC1294 LDR X21, [X22 + 0x18]
	0x03AC1298 MOV V5.16B, V12.16B
	0x03AC129C CMP W24, W21
	0x03AC12A0 B.CS 0x3AC3264
	0x03AC12A4 MOVZ W10, 0x178
	0x03AC12A8 MADD X8, X28, X10, X22
	0x03AC12AC LDR V0, [X8 + 0x88]
	0x03AC12B0 LDR V1, [X8 + 0xB0]
	0x03AC12B4 LDR V2, [X8 + 0x15C]
	0x03AC12B8 FADD S3, S0, S1
	0x03AC12BC FMUL S0, S0, S2
	0x03AC12C0 FMUL S1, S1, S2
	0x03AC12C4 FMUL S2, S3, S2
	0x03AC12C8 FMOV S3, 1
	0x03AC12CC FSUB S2, S3, S2
	0x03AC12D0 FMOV S3, 0.5
	0x03AC12D4 FMUL S2, S2, S3
	0x03AC12D8 FADD S0, S0, S2
	0x03AC12DC FADD S1, S2, S1
	0x03AC12E0 FADD S2, S11, S0
	0x03AC12E4 FADD S0, S11, S1
	0x03AC12E8 STR S2, [X8 + 0x84]
	0x03AC12EC STR S2, [X8 + 0xAC]
	0x03AC12F0 STR S0, [X8 + 0xD4]
	0x03AC12F4 MOVZ W25, 0x178
	0x03AC12F8 MADD X8, X28, X10, X22
	0x03AC12FC STR S0, [X8 + 0xFC]
	0x03AC1300 LDR W8, [X19 + 0x310]
	0x03AC1304 CMP W8, 0x3
	0x03AC1308 B.HI 0x3AC1418
	0x03AC130C ADRP X11, 0xFFFFFFFFFD0D6000
	0x03AC1310 ADD X11, X11, 0xB88
	0x03AC1314 ADR X9, 0x10
	0x03AC1318 LDRB W10, [X11, X8, LSL]
	0x03AC131C ADD X9, X9, X10, 0x2, LSL
	0x03AC1320 BR X9
	0x03AC1324 CMP W24, W21
	0x03AC1328 B.CS 0x3AC3264
	0x03AC132C MADD X8, X28, X25, X22
	0x03AC1330 MOVZ W9, 0x3F800000
	0x03AC1334 STR W31, [X8 + 0x88]
	0x03AC1338 STR W9, [X8 + 0xB0]
	0x03AC133C STR W9, [X8 + 0xD8]
	0x03AC1340 STR W31, [X8 + 0x100]
	0x03AC1344 B 0x3AC1418
	0x03AC1348 CMP W24, W21
	0x03AC134C B.CS 0x3AC3264
	0x03AC1350 MADD X8, X28, X25, X22
	0x03AC1354 LDR V0, [X8 + 0x74]
	0x03AC1358 LDR V1, [X8 + 0x9C]
	0x03AC135C FSUB S2, S10, S5
	0x03AC1360 FSUB S0, S0, S5
	0x03AC1364 FSUB S1, S1, S5
	0x03AC1368 FDIV S0, S0, S2
	0x03AC136C FDIV S1, S1, S2
	0x03AC1370 STR S0, [X8 + 0x88]
	0x03AC1374 B 0x3AC13B8
	0x03AC1378 CMP W24, W21
	0x03AC137C B.CS 0x3AC3264
	0x03AC1380 MADD X8, X28, X25, X22
	0x03AC1384 LDR V0, [X19 + 0x4E0]
	0x03AC1388 LDR V1, [X19 + 0x4E8]
	0x03AC138C LDR V2, [X8 + 0x74]
	0x03AC1390 LDR V3, [X8 + 0x9C]
	0x03AC1394 FSUB S1, S1, S0
	0x03AC1398 FSUB S0, S2, S0
	0x03AC139C FDIV S0, S0, S1
	0x03AC13A0 STR S0, [X8 + 0x88]
	0x03AC13A4 LDR V1, [X19 + 0x4E0]
	0x03AC13A8 LDR V2, [X19 + 0x4E8]
	0x03AC13AC FSUB S3, S3, S1
	0x03AC13B0 FSUB S1, S2, S1
	0x03AC13B4 FDIV S1, S3, S1
	0x03AC13B8 STR S1, [X8 + 0xB0]
	0x03AC13BC STR S1, [X8 + 0xD8]
	0x03AC13C0 STR S0, [X8 + 0x100]
	0x03AC13C4 B 0x3AC1418
	0x03AC13C8 CMP W24, W21
	0x03AC13CC B.CS 0x3AC3264
	0x03AC13D0 MADD X8, X28, X25, X22
	0x03AC13D4 LDR V0, [X8 + 0x84]
	0x03AC13D8 LDR V1, [X8 + 0xD4]
	0x03AC13DC LDR V2, [X8 + 0x15C]
	0x03AC13E0 FADD S3, S0, S1
	0x03AC13E4 FDIV S0, S0, S2
	0x03AC13E8 FDIV S1, S1, S2
	0x03AC13EC FDIV S2, S3, S2
	0x03AC13F0 FMOV S3, 1
	0x03AC13F4 FSUB S2, S3, S2
	0x03AC13F8 FMOV S3, 0.5
	0x03AC13FC FMUL S2, S2, S3
	0x03AC1400 FADD S0, S0, S2
	0x03AC1404 FADD S1, S2, S1
	0x03AC1408 STR S0, [X8 + 0x88]
	0x03AC140C STR S1, [X8 + 0xB0]
	0x03AC1410 STR S0, [X8 + 0x100]
	0x03AC1414 STR S1, [X8 + 0xD8]
	0x03AC1418 CMP W24, W21
	0x03AC141C B.CS 0x3AC3264
	0x03AC1420 MOVZ W9, 0x178
	0x03AC1424 MADD X8, X28, X9, X22
	0x03AC1428 LDR V0, [X8 + 0x160]
	0x03AC142C LDR V2, [X31 + 0x38]
	0x03AC1430 LDR V1, [X19 + 0x2D4]
	0x03AC1434 LDRB W8, [X8 + 0x5C]
	0x03AC1438 STR W27, [X31 + 0x48]
	0x03AC143C FMUL S0, S2, S0
	0x03AC1440 FMOV S2, 1
	0x03AC1444 FSUB S1, S2, S1
	0x03AC1448 FMUL S14, S0, S1
	0x03AC144C CBZ W8, 0x3AC1458
	0x03AC1450 LDR W27, [X31 + 0x14C]
	0x03AC1454 B 0x3AC1470
	0x03AC1458 MADD X8, X28, X9, X22
	0x03AC145C LDRB W8, [X8 + 0x190]
	0x03AC1460 LDR W27, [X31 + 0x14C]
	0x03AC1464 FNEG S0, S14
	0x03AC1468 ANDS W31, W8, 0x1
	0x03AC146C FCSEL S14, S14, S0, EQ
	0x03AC1470 MADD X29, X28, X9, X22
	0x03AC1474 LDR V0, [X29 + 0x88]!
	0x03AC1478 MOVZ W8, 0x7F800000
	0x03AC147C FMOV S1, W8
	0x03AC1480 MOVZ W8, 0xCF000000
	0x03AC1484 LDUR V3, [X29 - 0x4]
	0x03AC1488 FMOV S2, W8
	0x03AC148C FCVTZS W8, S0
	0x03AC1490 SCVTF S4, W8
	0x03AC1494 FCVTZS W8, S3
	0x03AC1498 FCMP S3, S1
	0x03AC149C SCVTF S5, W8
	0x03AC14A0 MOV X25, X22
	0x03AC14A4 MOV X22, X29
	0x03AC14A8 MOV X21, X29
	0x03AC14AC FCSEL S9, S2, S5, EQ
	0x03AC14B0 FCMP S0, S1
	0x03AC14B4 LDR V8, [X22 + 0x4C]!
	0x03AC14B8 LDR V10, [X21 + 0x50]!
	0x03AC14BC FCSEL S12, S2, S4, EQ
	0x03AC14C0 FSUB S13, S3, S9
	0x03AC14C4 FSUB S11, S0, S12
	0x03AC14C8 MOV X0, X19
	0x03AC14CC MOV V0.16B, V13.16B
	0x03AC14D0 MOV V1.16B, V11.16B
	0x03AC14D4 MOV X1, X31
	0x03AC14D8 MOVZ W20, 0x178
	0x03AC14DC BL 0x3B0B51C
	0x03AC14E0 STUR S0, [X29 - 0x4]
	0x03AC14E4 LDR W8, [X25 + 0x18]
	0x03AC14E8 CMP W24, W8
	0x03AC14EC B.CS 0x3AC3264
	0x03AC14F0 FSUB S10, S10, S12
	0x03AC14F4 MOV X0, X19
	0x03AC14F8 MOV V0.16B, V13.16B
	0x03AC14FC MOV V1.16B, V10.16B
	0x03AC1500 MOV X1, X31
	0x03AC1504 STR S14, [X29]
	0x03AC1508 BL 0x3B0B51C
	0x03AC150C MADD X8, X28, X20, X25
	0x03AC1510 STR S0, [X8 + 0xAC]
	0x03AC1514 LDR W8, [X25 + 0x18]
	0x03AC1518 CMP W24, W8
	0x03AC151C B.CS 0x3AC3264
	0x03AC1520 FSUB S13, S8, S9
	0x03AC1524 MADD X8, X28, X20, X25
	0x03AC1528 MOV X0, X19
	0x03AC152C MOV V0.16B, V13.16B
	0x03AC1530 MOV V1.16B, V10.16B
	0x03AC1534 MOV X1, X31
	0x03AC1538 STR S14, [X8 + 0xB0]
	0x03AC153C BL 0x3B0B51C
	0x03AC1540 STR S0, [X22]
	0x03AC1544 LDR W8, [X25 + 0x18]
	0x03AC1548 CMP W24, W8
	0x03AC154C B.CS 0x3AC3264
	0x03AC1550 MOV X0, X19
	0x03AC1554 MOV V0.16B, V13.16B
	0x03AC1558 MOV V1.16B, V11.16B
	0x03AC155C MOV X1, X31
	0x03AC1560 MOV X22, X25
	0x03AC1564 STR S14, [X21]
	0x03AC1568 BL 0x3B0B51C
	0x03AC156C MADD X8, X28, X20, X25
	0x03AC1570 STR S0, [X8 + 0xFC]
	0x03AC1574 LDR X21, [X25 + 0x18]
	0x03AC1578 STR W27, [X31 + 0x14C]
	0x03AC157C CMP W24, W21
	0x03AC1580 B.CS 0x3AC3264
	0x03AC1584 MADD X8, X28, X20, X22
	0x03AC1588 LDR X20, [X31 + 0x150]
	0x03AC158C LDP V2, V1, [X31 + 0x100]
	0x03AC1590 LDR X14, [X31 + 0x140]
	0x03AC1594 LDR X15, [X31 + 0x58]
	0x03AC1598 LDR W27, [X31 + 0x48]
	0x03AC159C MOVZ W25, 0x178
	0x03AC15A0 STR S14, [X8 + 0x100]
	0x03AC15A4 LDR W8, [X19 + 0x328]
	0x03AC15A8 CMP W24, W8
	0x03AC15AC B.GE 0x3AC168C
	0x03AC15B0 LDR W8, [X19 + 0x32C]
	0x03AC15B4 LDR W9, [X31 + 0xC4]
	0x03AC15B8 CMP W9, W8
	0x03AC15BC B.GE 0x3AC168C
	0x03AC15C0 LDR W8, [X19 + 0x330]
	0x03AC15C4 CMP W20, W8
	0x03AC15C8 B.GE 0x3AC15D8
	0x03AC15CC LDR W8, [X19 + 0x2E0]
	0x03AC15D0 CMP W8, 0x5
	0x03AC15D4 B.NE 0x3AC177C
	0x03AC15D8 LDR W8, [X19 + 0x330]
	0x03AC15DC CMP W20, W8
	0x03AC15E0 B.GE 0x3AC168C
	0x03AC15E4 LDR W8, [X19 + 0x2E0]
	0x03AC15E8 CMP W8, 0x5
	0x03AC15EC B.NE 0x3AC168C
	0x03AC15F0 CMP W24, W21
	0x03AC15F4 B.CS 0x3AC3264
	0x03AC15F8 MADD X8, X28, X25, X22
	0x03AC15FC LDR W8, [X8 + 0x68]
	0x03AC1600 LDR W9, [X31 + 0x44]
	0x03AC1604 CMP W8, W9
	0x03AC1608 B.NE 0x3AC168C
	0x03AC160C MOVZ W21, 0x178
	0x03AC1610 MADD X8, X28, X21, X22
	0x03AC1614 UNIMPLEMENTED
	0x03AC1618 LDR V2, [X8 + 0x70]
	0x03AC161C LDR V4, [X8 + 0x98]
	0x03AC1620 LDR V6, [X8 + 0xC0]
	0x03AC1624 LDR V16, [X8 + 0xE8]
	0x03AC1628 LDR V3, [X8 + 0x78]
	0x03AC162C LDR V5, [X8 + 0xA0]
	0x03AC1630 LDR V7, [X8 + 0xC8]
	0x03AC1634 FADD V2.2S, V0.2S, V2.2S
	0x03AC1638 FADD V4.2S, V0.2S, V4.2S
	0x03AC163C FADD V6.2S, V0.2S, V6.2S
	0x03AC1640 FADD V0.2S, V0.2S, V16.2S
	0x03AC1644 LDR V16, [X8 + 0xF0]
	0x03AC1648 LDR X26, [X31 + 0x160]
	0x03AC164C MOV S1, V1.S[1]
	0x03AC1650 FADD S3, S1, S3
	0x03AC1654 FADD S5, S1, S5
	0x03AC1658 FADD S7, S1, S7
	0x03AC165C FADD S1, S1, S16
	0x03AC1660 STR D2, [X8 + 0x70]
	0x03AC1664 STR S3, [X8 + 0x78]
	0x03AC1668 STR D4, [X8 + 0x98]
	0x03AC166C STR S5, [X8 + 0xA0]
	0x03AC1670 STR D6, [X8 + 0xC0]
	0x03AC1674 STR S7, [X8 + 0xC8]
	0x03AC1678 STR D0, [X8 + 0xE8]
	0x03AC167C STR S1, [X8 + 0xF0]
	0x03AC1680 MOVZ W25, 0x5C
	0x03AC1684 CBNZ W27, 0x3AC1764
	0x03AC1688 B 0x3AC1800
	0x03AC168C CMP W24, W21
	0x03AC1690 B.CS 0x3AC3264
	0x03AC1694 ADRP X8, 0x917000
	0x03AC1698 LDRB W8, [X8 + 0x783]
	0x03AC169C CBNZ W8, 0x3AC16C8
	0x03AC16A0 ADRP X0, 0x632000
	0x03AC16A4 LDR X0, [X0 + 0x5A0]
	0x03AC16A8 MOV X21, X15
	0x03AC16AC BL 0x1C16CF4
	0x03AC16B0 ADRP X8, 0x917000
	0x03AC16B4 MOVZ W9, 0x1
	0x03AC16B8 STRB W9, [X8 + 0x783]
	0x03AC16BC MOV X15, X21
	0x03AC16C0 LDR X14, [X31 + 0x140]
	0x03AC16C4 LDR W21, [X22 + 0x18]
	0x03AC16C8 ADRP X10, 0x632000
	0x03AC16CC LDR X10, [X10 + 0x5A0]
	0x03AC16D0 MOVZ W9, 0x178
	0x03AC16D4 CMP W24, W21
	0x03AC16D8 MOVZ W25, 0x5C
	0x03AC16DC LDR X8, [X10]
	0x03AC16E0 LDR X8, [X8 + 0xB8]
	0x03AC16E4 LDR V0, [X8]
	0x03AC16E8 LDR V1, [X8 + 0x8]
	0x03AC16EC NOP
	0x03AC16F0 MADD X8, X28, X9, X22
	0x03AC16F4 STR D0, [X8 + 0x70]
	0x03AC16F8 STR S1, [X8 + 0x78]
	0x03AC16FC B.CS 0x3AC3264
	0x03AC1700 LDR X8, [X10]
	0x03AC1704 MOVZ W21, 0x178
	0x03AC1708 LDR X8, [X8 + 0xB8]
	0x03AC170C LDR V0, [X8]
	0x03AC1710 LDR V1, [X8 + 0x8]
	0x03AC1714 NOP
	0x03AC1718 MADD X8, X28, X9, X22
	0x03AC171C STR D0, [X8 + 0x98]
	0x03AC1720 STR S1, [X8 + 0xA0]
	0x03AC1724 LDR X9, [X10]
	0x03AC1728 LDR X9, [X9 + 0xB8]
	0x03AC172C LDR V0, [X9]
	0x03AC1730 LDR V1, [X9 + 0x8]
	0x03AC1734 STR D0, [X8 + 0xC0]
	0x03AC1738 STR S1, [X8 + 0xC8]
	0x03AC173C LDR X9, [X10]
	0x03AC1740 LDR X9, [X9 + 0xB8]
	0x03AC1744 LDR V0, [X9]
	0x03AC1748 LDR V1, [X9 + 0x8]
	0x03AC174C ADD X9, X26, 0x194
	0x03AC1750 LDR X26, [X31 + 0x160]
	0x03AC1754 STR D0, [X8 + 0xE8]
	0x03AC1758 STR S1, [X8 + 0xF0]
	0x03AC175C STRB W31, [X9]
	0x03AC1760 CBZ W27, 0x3AC1800
	0x03AC1764 CMP W27, 0x1
	0x03AC1768 B.NE 0x3AC1828
	0x03AC176C LDR X8, [X19]
	0x03AC1770 LDR X9, [X8 + 0x8F8]
	0x03AC1774 LDR X3, [X8 + 0x900]
	0x03AC1778 B 0x3AC180C
	0x03AC177C LDR X26, [X31 + 0x160]
	0x03AC1780 CMP W24, W21
	0x03AC1784 MOVZ W25, 0x5C
	0x03AC1788 B.CS 0x3AC3264
	0x03AC178C MOVZ W21, 0x178
	0x03AC1790 MADD X8, X28, X21, X22
	0x03AC1794 UNIMPLEMENTED
	0x03AC1798 LDR V2, [X8 + 0x70]
	0x03AC179C LDR V4, [X8 + 0x98]
	0x03AC17A0 LDR V6, [X8 + 0xC0]
	0x03AC17A4 LDR V16, [X8 + 0xE8]
	0x03AC17A8 LDR V3, [X8 + 0x78]
	0x03AC17AC LDR V5, [X8 + 0xA0]
	0x03AC17B0 LDR V7, [X8 + 0xC8]
	0x03AC17B4 FADD V2.2S, V0.2S, V2.2S
	0x03AC17B8 FADD V4.2S, V0.2S, V4.2S
	0x03AC17BC FADD V6.2S, V0.2S, V6.2S
	0x03AC17C0 FADD V0.2S, V0.2S, V16.2S
	0x03AC17C4 LDR V16, [X8 + 0xF0]
	0x03AC17C8 MOV S1, V1.S[1]
	0x03AC17CC FADD S3, S1, S3
	0x03AC17D0 FADD S5, S1, S5
	0x03AC17D4 FADD S7, S1, S7
	0x03AC17D8 FADD S1, S1, S16
	0x03AC17DC STR D2, [X8 + 0x70]
	0x03AC17E0 STR S3, [X8 + 0x78]
	0x03AC17E4 STR D4, [X8 + 0x98]
	0x03AC17E8 STR S5, [X8 + 0xA0]
	0x03AC17EC STR D6, [X8 + 0xC0]
	0x03AC17F0 STR S7, [X8 + 0xC8]
	0x03AC17F4 STR D0, [X8 + 0xE8]
	0x03AC17F8 STR S1, [X8 + 0xF0]
	0x03AC17FC CBNZ W27, 0x3AC1764
	0x03AC1800 LDR X8, [X19]
	0x03AC1804 LDR X9, [X8 + 0x8D8]
	0x03AC1808 LDR X3, [X8 + 0x8E0]
	0x03AC180C MOV X0, X19
	0x03AC1810 MOV W1, W24
	0x03AC1814 MOV W2, W31
	0x03AC1818 MOV X27, X15
	0x03AC181C BLR X9
	0x03AC1820 LDR X14, [X31 + 0x140]
	0x03AC1824 MOV X15, X27
	0x03AC1828 ADD X27, X31, 0xF90
	0x03AC182C LDR X8, [X23]
	0x03AC1830 CBZ X8, 0x3AC3158
	0x03AC1834 LDR X8, [X8 + 0x38]
	0x03AC1838 LDP V6, V5, [X31 + 0x100]
	0x03AC183C CBZ X8, 0x3AC3158
	0x03AC1840 LDR W9, [X8 + 0x18]
	0x03AC1844 CMP W24, W9
	0x03AC1848 B.CS 0x3AC3264
	0x03AC184C MADD X8, X28, X21, X8
	0x03AC1850 ADD X8, X8, 0x11C
	0x03AC1854 LDR V2, [X8]
	0x03AC1858 LDR V3, [X8 + 0x8]
	0x03AC185C UNIMPLEMENTED
	0x03AC1860 MOV S1, V5.S[1]
	0x03AC1864 FADD V2.2S, V0.2S, V2.2S
	0x03AC1868 FADD S3, S1, S3
	0x03AC186C STR D2, [X8]
	0x03AC1870 STR S3, [X8 + 0x8]
	0x03AC1874 LDR X8, [X23]
	0x03AC1878 CBZ X8, 0x3AC3158
	0x03AC187C LDR X8, [X8 + 0x38]
	0x03AC1880 CBZ X8, 0x3AC3158
	0x03AC1884 LDR W9, [X8 + 0x18]
	0x03AC1888 CMP W24, W9
	0x03AC188C B.CS 0x3AC3264
	0x03AC1890 MADD X8, X28, X21, X8
	0x03AC1894 LDR V2, [X8 + 0x110]
	0x03AC1898 LDR V3, [X8 + 0x118]
	0x03AC189C FADD V2.2S, V0.2S, V2.2S
	0x03AC18A0 FADD S3, S1, S3
	0x03AC18A4 STR D2, [X8 + 0x110]
	0x03AC18A8 STR S3, [X8 + 0x118]
	0x03AC18AC LDR X8, [X23]
	0x03AC18B0 CBZ X8, 0x3AC3158
	0x03AC18B4 LDR X8, [X8 + 0x38]
	0x03AC18B8 CBZ X8, 0x3AC3158
	0x03AC18BC LDR W9, [X8 + 0x18]
	0x03AC18C0 CMP W24, W9
	0x03AC18C4 B.CS 0x3AC3264
	0x03AC18C8 MADD X8, X28, X21, X8
	0x03AC18CC LDR V2, [X8 + 0x128]
	0x03AC18D0 LDR V3, [X8 + 0x130]
	0x03AC18D4 FADD V0.2S, V0.2S, V2.2S
	0x03AC18D8 FADD S1, S1, S3
	0x03AC18DC STR D0, [X8 + 0x128]
	0x03AC18E0 STR S1, [X8 + 0x130]
	0x03AC18E4 LDR X8, [X23]
	0x03AC18E8 CBZ X8, 0x3AC3158
	0x03AC18EC LDR X8, [X8 + 0x38]
	0x03AC18F0 CBZ X8, 0x3AC3158
	0x03AC18F4 LDR W9, [X8 + 0x18]
	0x03AC18F8 CMP W24, W9
	0x03AC18FC B.CS 0x3AC3264
	0x03AC1900 MADD X8, X28, X21, X8
	0x03AC1904 LDR V0, [X8 + 0x134]
	0x03AC1908 LDR V1, [X8 + 0x138]
	0x03AC190C FADD S0, S6, S0
	0x03AC1910 FADD V1.2S, V5.2S, V1.2S
	0x03AC1914 STR S0, [X8 + 0x134]
	0x03AC1918 STR D1, [X8 + 0x138]
	0x03AC191C LDR X9, [X23]
	0x03AC1920 CBZ X9, 0x3AC3158
	0x03AC1924 LDR X8, [X9 + 0x38]
	0x03AC1928 CBZ X8, 0x3AC3158
	0x03AC192C LDR W10, [X8 + 0x18]
	0x03AC1930 CMP W24, W10
	0x03AC1934 B.CS 0x3AC3264
	0x03AC1938 MADD X11, X28, X21, X8
	0x03AC193C LDP D2, D4, [X11 + 0x140]
	0x03AC1940 LDR V3, [X11 + 0x150]
	0x03AC1944 UNIMPLEMENTED
	0x03AC1948 UNIMPLEMENTED
	0x03AC194C CMP W20, W15
	0x03AC1950 FADD V1.2S, V1.2S, V2.2S
	0x03AC1954 FADD S2, S5, S3
	0x03AC1958 FADD V3.2S, V0.2S, V4.2S
	0x03AC195C STR S2, [X11 + 0x150]
	0x03AC1960 STP D1, D3, [X11 + 0x140]
	0x03AC1964 B.NE 0x3AC197C
	0x03AC1968 LDR W8, [X26]
	0x03AC196C SUB W8, W8, 0x1
	0x03AC1970 CMP W24, W8
	0x03AC1974 B.EQ 0x3AC1A2C
	0x03AC1978 B 0x3AC1AEC
	0x03AC197C LDR X11, [X9 + 0x50]
	0x03AC1980 CBZ X11, 0x3AC3158
	0x03AC1984 LDR W9, [X11 + 0x18]
	0x03AC1988 CMP W15, W9
	0x03AC198C B.CS 0x3AC3264
	0x03AC1990 SXTW X9, W15
	0x03AC1994 MADD X13, X9, X25, X11
	0x03AC1998 LDUR V1, [X13 + 0x4C]
	0x03AC199C LDP S2, S3, [X13 + 0x54]
	0x03AC19A0 LDRSW X12, [X13 + 0x34]
	0x03AC19A4 FADD V4.2S, V0.2S, V1.2S
	0x03AC19A8 FADD S1, S5, S2
	0x03AC19AC FADD S2, S6, S3
	0x03AC19B0 CMP W12, W10
	0x03AC19B4 STUR D4, [X13 + 0x4C]
	0x03AC19B8 STP S1, S2, [X13 + 0x54]
	0x03AC19BC B.CS 0x3AC3264
	0x03AC19C0 MADD X8, X12, X21, X8
	0x03AC19C4 LDR W8, [X8 + 0x11C]
	0x03AC19C8 NOP
	0x03AC19CC MADD X10, X9, X25, X11
	0x03AC19D0 STR S1, [X10 + 0x70]
	0x03AC19D4 STR W8, [X10 + 0x6C]
	0x03AC19D8 LDR X10, [X23]
	0x03AC19DC CBZ X10, 0x3AC3158
	0x03AC19E0 LDR X8, [X10 + 0x50]
	0x03AC19E4 CBZ X8, 0x3AC3158
	0x03AC19E8 LDR W11, [X8 + 0x18]
	0x03AC19EC CMP W15, W11
	0x03AC19F0 B.CS 0x3AC3264
	0x03AC19F4 LDR X10, [X10 + 0x38]
	0x03AC19F8 CBZ X10, 0x3AC3158
	0x03AC19FC MADD X11, X9, X25, X8
	0x03AC1A00 LDRSW X11, [X11 + 0x40]
	0x03AC1A04 LDR W12, [X10 + 0x18]
	0x03AC1A08 CMP W11, W12
	0x03AC1A0C B.CS 0x3AC3264
	0x03AC1A10 MADD X10, X11, X21, X10
	0x03AC1A14 MADD X8, X9, X25, X8
	0x03AC1A18 LDR W9, [X10 + 0x128]
	0x03AC1A1C LDR W10, [X8 + 0x4C]
	0x03AC1A20 STP W9, W10, [X8 + 0x74]
	0x03AC1A24 LDR W8, [X26]
	0x03AC1A28 SUB W8, W8, 0x1
	0x03AC1A2C CMP W24, W8
	0x03AC1A30 B.NE 0x3AC1AEC
	0x03AC1A34 LDR X9, [X23]
	0x03AC1A38 CBZ X9, 0x3AC3158
	0x03AC1A3C LDR X8, [X9 + 0x50]
	0x03AC1A40 CBZ X8, 0x3AC3158
	0x03AC1A44 LDR W10, [X8 + 0x18]
	0x03AC1A48 CMP W20, W10
	0x03AC1A4C B.CS 0x3AC3264
	0x03AC1A50 MADD X10, X14, X25, X8
	0x03AC1A54 LDUR V1, [X10 + 0x4C]
	0x03AC1A58 LDP S2, S3, [X10 + 0x54]
	0x03AC1A5C FADD V1.2S, V0.2S, V1.2S
	0x03AC1A60 FADD S0, S5, S2
	0x03AC1A64 FADD S2, S6, S3
	0x03AC1A68 STUR D1, [X10 + 0x4C]
	0x03AC1A6C STP S0, S2, [X10 + 0x54]
	0x03AC1A70 LDR X9, [X9 + 0x38]
	0x03AC1A74 CBZ X9, 0x3AC3158
	0x03AC1A78 LDRSW X10, [X10 + 0x34]
	0x03AC1A7C LDR W11, [X9 + 0x18]
	0x03AC1A80 CMP W10, W11
	0x03AC1A84 B.CS 0x3AC3264
	0x03AC1A88 MADD X9, X10, X21, X9
	0x03AC1A8C LDR W9, [X9 + 0x11C]
	0x03AC1A90 NOP
	0x03AC1A94 MADD X8, X14, X25, X8
	0x03AC1A98 STR S0, [X8 + 0x70]
	0x03AC1A9C STR W9, [X8 + 0x6C]
	0x03AC1AA0 LDR X9, [X23]
	0x03AC1AA4 CBZ X9, 0x3AC3158
	0x03AC1AA8 LDR X8, [X9 + 0x50]
	0x03AC1AAC CBZ X8, 0x3AC3158
	0x03AC1AB0 LDR W10, [X8 + 0x18]
	0x03AC1AB4 CMP W20, W10
	0x03AC1AB8 B.CS 0x3AC3264
	0x03AC1ABC LDR X9, [X9 + 0x38]
	0x03AC1AC0 CBZ X9, 0x3AC3158
	0x03AC1AC4 MADD X10, X14, X25, X8
	0x03AC1AC8 LDRSW X10, [X10 + 0x40]
	0x03AC1ACC LDR W11, [X9 + 0x18]
	0x03AC1AD0 CMP W10, W11
	0x03AC1AD4 B.CS 0x3AC3264
	0x03AC1AD8 MADD X9, X10, X21, X9
	0x03AC1ADC MADD X8, X14, X25, X8
	0x03AC1AE0 LDR W9, [X9 + 0x128]
	0x03AC1AE4 LDR W10, [X8 + 0x4C]
	0x03AC1AE8 STP W9, W10, [X8 + 0x74]
	0x03AC1AEC ADRP X8, 0x634000
	0x03AC1AF0 LDR X8, [X8 + 0x170]
	0x03AC1AF4 LDR X0, [X8]
	0x03AC1AF8 LDR W8, [X0 + 0xE0]
	0x03AC1AFC CBNZ W8, 0x3AC1B04
	0x03AC1B00 BL 0x1C16DFC
	0x03AC1B04 LDR W29, [X31 + 0x15C]
	0x03AC1B08 MOV X1, X31
	0x03AC1B0C MOV W0, W29
	0x03AC1B10 BL 0x331ABF0
	0x03AC1B14 TBNZ X0, 0x0, 0x3AC1B38
	0x03AC1B18 MOVN W8, 0x200F
	0x03AC1B1C ADD W8, W29, W8
	0x03AC1B20 CMP W8, 0x2
	0x03AC1B24 B.CC 0x3AC1B38
	0x03AC1B28 CMP W29, 0xAD
	0x03AC1B2C B.EQ 0x3AC1B38
	0x03AC1B30 CMP W29, 0x2D
	0x03AC1B34 B.NE 0x3AC1DB8
	0x03AC1B38 LDR W9, [X31 + 0xF0]
	0x03AC1B3C LDR W8, [X26]
	0x03AC1B40 ANDS W31, W9, 0x1
	0x03AC1B44 LDR W9, [X31 + 0x14C]
	0x03AC1B48 SUB W8, W8, 0x1
	0x03AC1B4C CSEL W9, W9, W24, NE
	0x03AC1B50 CMP W24, W8
	0x03AC1B54 STR W9, [X31 + 0x14C]
	0x03AC1B58 B.NE 0x3AC1C48
	0x03AC1B5C LDR X8, [X23]
	0x03AC1B60 LDR X29, [X31 + 0x128]
	0x03AC1B64 CBZ X8, 0x3AC3158
	0x03AC1B68 MOV X27, X8
	0x03AC1B6C LDR X9, [X27 + 0x40]!
	0x03AC1B70 LDR X12, [X31 + 0x140]
	0x03AC1B74 CBZ X9, 0x3AC3158
	0x03AC1B78 LDRSW X20, [X8 + 0x24]
	0x03AC1B7C LDR W21, [X9 + 0x18]
	0x03AC1B80 ADD W9, W20, 0x1
	0x03AC1B84 CMP W9, W21
	0x03AC1B88 B.LE 0x3AC1BC8
	0x03AC1B8C ADRP X8, 0x697000
	0x03AC1B90 LDR X8, [X8 + 0x368]
	0x03AC1B94 LDR X0, [X8]
	0x03AC1B98 LDR W8, [X0 + 0xE0]
	0x03AC1B9C CBNZ W8, 0x3AC1BA4
	0x03AC1BA0 BL 0x1C16DFC
	0x03AC1BA4 ADRP X8, 0x697000
	0x03AC1BA8 LDR X8, [X8 + 0x360]
	0x03AC1BAC ADD W1, W21, 0x1
	0x03AC1BB0 MOV X0, X27
	0x03AC1BB4 LDR X2, [X8]
	0x03AC1BB8 BL 0x2299114
	0x03AC1BBC LDR X8, [X23]
	0x03AC1BC0 LDR X12, [X31 + 0x140]
	0x03AC1BC4 CBZ X8, 0x3AC3158
	0x03AC1BC8 LDR X9, [X8 + 0x40]
	0x03AC1BCC CBZ X9, 0x3AC3158
	0x03AC1BD0 LDR W10, [X9 + 0x18]
	0x03AC1BD4 ADD X27, X31, 0xF90
	0x03AC1BD8 MOVZ W21, 0x178
	0x03AC1BDC CMP W20, W10
	0x03AC1BE0 B.CS 0x3AC3264
	0x03AC1BE4 MOVZ W10, 0x18
	0x03AC1BE8 MADD X9, X20, X10, X9
	0x03AC1BEC LDR W10, [X31 + 0x134]
	0x03AC1BF0 LDR W11, [X31 + 0x14C]
	0x03AC1BF4 STR X19, [X9 + 0x20]
	0x03AC1BF8 SUB W10, W10, W11
	0x03AC1BFC STP W11, W24, [X9 + 0x28]
	0x03AC1C00 STR W10, [X9 + 0x30]
	0x03AC1C04 LDR W10, [X8 + 0x24]
	0x03AC1C08 LDR X9, [X8 + 0x50]
	0x03AC1C0C ADD W10, W10, 0x1
	0x03AC1C10 STR W10, [X8 + 0x24]
	0x03AC1C14 CBZ X9, 0x3AC3158
	0x03AC1C18 LDR W8, [X9 + 0x18]
	0x03AC1C1C LDR X20, [X31 + 0x150]
	0x03AC1C20 CMP W20, W8
	0x03AC1C24 B.CS 0x3AC3264
	0x03AC1C28 MADD X8, X12, X25, X9
	0x03AC1C2C LDR W9, [X8 + 0x30]
	0x03AC1C30 LDR W10, [X31 + 0xC4]
	0x03AC1C34 ADD W9, W9, 0x1
	0x03AC1C38 ADD W10, W10, 0x1
	0x03AC1C3C STR W10, [X31 + 0xC4]
	0x03AC1C40 STR W9, [X8 + 0x30]
	0x03AC1C44 B 0x3AC1C4C
	0x03AC1C48 LDR X29, [X31 + 0x128]
	0x03AC1C4C MOVZ W8, 0x1
	0x03AC1C50 STR W8, [X31 + 0xF0]
	0x03AC1C54 LDR X8, [X23]
	0x03AC1C58 CBZ X8, 0x3AC3158
	0x03AC1C5C LDR X8, [X8 + 0x38]
	0x03AC1C60 CBZ X8, 0x3AC3158
	0x03AC1C64 LDR W9, [X8 + 0x18]
	0x03AC1C68 CMP W24, W9
	0x03AC1C6C B.CS 0x3AC3264
	0x03AC1C70 MADD X10, X28, X21, X8
	0x03AC1C74 LDRB W10, [X10 + 0x190]
	0x03AC1C78 TBNZ X10, 0x2, 0x3AC1CB4
	0x03AC1C7C LDR W25, [X31 + 0x134]
	0x03AC1C80 LDR W10, [X31 + 0xFC]
	0x03AC1C84 TBZ X10, 0x0, 0x3AC2140
	0x03AC1C88 SUB W10, W25, 0x2
	0x03AC1C8C CMP W10, W9
	0x03AC1C90 B.CS 0x3AC3264
	0x03AC1C94 LDR X9, [X31 + 0x138]
	0x03AC1C98 ADD X8, X8, X9
	0x03AC1C9C SUB X10, X8, 0x330
	0x03AC1CA0 SUB X8, X8, 0x2F8
	0x03AC1CA4 LDR X9, [X19]
	0x03AC1CA8 LDR V3, [X10]
	0x03AC1CAC LDR V7, [X8]
	0x03AC1CB0 B 0x3AC21D8
	0x03AC1CB4 LDR W9, [X31 + 0x1054]
	0x03AC1CB8 NOP
	0x03AC1CBC MADD X8, X28, X21, X8
	0x03AC1CC0 LDR W21, [X8 + 0x68]
	0x03AC1CC4 MOVZ W25, 0x178
	0x03AC1CC8 STR W9, [X8 + 0x16C]
	0x03AC1CCC LDR W9, [X19 + 0x328]
	0x03AC1CD0 CMP W24, W9
	0x03AC1CD4 B.GT 0x3AC1CE4
	0x03AC1CD8 LDR W8, [X19 + 0x330]
	0x03AC1CDC CMP W20, W8
	0x03AC1CE0 B.LE 0x3AC1D8C
	0x03AC1CE4 MOV W20, W31
	0x03AC1CE8 ADRP X8, 0x634000
	0x03AC1CEC LDR X8, [X8 + 0x170]
	0x03AC1CF0 LDR X0, [X8]
	0x03AC1CF4 LDR W8, [X0 + 0xE0]
	0x03AC1CF8 CBNZ W8, 0x3AC1D00
	0x03AC1CFC BL 0x1C16DFC
	0x03AC1D00 LDR W29, [X31 + 0x15C]
	0x03AC1D04 MOV X1, X31
	0x03AC1D08 MOV W0, W29
	0x03AC1D0C BL 0x3317FCC
	0x03AC1D10 MOVZ W8, 0x200B
	0x03AC1D14 CMP W29, W8
	0x03AC1D18 B.EQ 0x3AC1DB0
	0x03AC1D1C LDR X29, [X31 + 0x128]
	0x03AC1D20 TBNZ X0, 0x0, 0x3AC20C4
	0x03AC1D24 LDR X8, [X23]
	0x03AC1D28 CBZ X8, 0x3AC3158
	0x03AC1D2C LDR X9, [X8 + 0x38]
	0x03AC1D30 CBZ X9, 0x3AC3158
	0x03AC1D34 LDR W10, [X9 + 0x18]
	0x03AC1D38 CMP W24, W10
	0x03AC1D3C B.CS 0x3AC3264
	0x03AC1D40 MADD X9, X28, X25, X9
	0x03AC1D44 LDR V0, [X9 + 0x160]
	0x03AC1D48 LDR W9, [X31 + 0x54]
	0x03AC1D4C FABS S1, S14
	0x03AC1D50 FCMP S15, S0
	0x03AC1D54 FCSEL S15, S15, S0, GT
	0x03AC1D58 LDR V0, [X31 + 0xE4]
	0x03AC1D5C FCMP S0, S1
	0x03AC1D60 FCSEL S0, S0, S1, GT
	0x03AC1D64 CMP W21, W9
	0x03AC1D68 STR S0, [X31 + 0xE4]
	0x03AC1D6C B.EQ 0x3AC2078
	0x03AC1D70 ADRP X9, 0x697000
	0x03AC1D74 LDR X9, [X9 + 0x3E8]
	0x03AC1D78 LDR X0, [X9]
	0x03AC1D7C LDR W9, [X0 + 0xE0]
	0x03AC1D80 CBZ W9, 0x3AC2054
	0x03AC1D84 LDR X9, [X0 + 0xB8]
	0x03AC1D88 B 0x3AC2070
	0x03AC1D8C LDR W8, [X19 + 0x2E0]
	0x03AC1D90 CMP W8, 0x5
	0x03AC1D94 B.NE 0x3AC1DA8
	0x03AC1D98 LDR W8, [X19 + 0x338]
	0x03AC1D9C ADD W9, W21, 0x1
	0x03AC1DA0 CMP W9, W8
	0x03AC1DA4 B.NE 0x3AC1CE4
	0x03AC1DA8 MOVZ W20, 0x1
	0x03AC1DAC B 0x3AC1CE8
	0x03AC1DB0 LDR X29, [X31 + 0x128]
	0x03AC1DB4 B 0x3AC20C4
	0x03AC1DB8 LDR W8, [X31 + 0xF0]
	0x03AC1DBC TBZ X8, 0x0, 0x3AC1EA0
	0x03AC1DC0 LDR W8, [X31 + 0x134]
	0x03AC1DC4 LDR X29, [X31 + 0x128]
	0x03AC1DC8 CMP W8, 0x1
	0x03AC1DCC B.EQ 0x3AC1F20
	0x03AC1DD0 LDR W8, [X22 + 0x18]
	0x03AC1DD4 SUB W9, W8, 0x1
	0x03AC1DD8 CMP W24, W9
	0x03AC1DDC B.GE 0x3AC1F20
	0x03AC1DE0 LDR W9, [X26]
	0x03AC1DE4 CMP W24, W9
	0x03AC1DE8 B.GE 0x3AC1F20
	0x03AC1DEC LDR W10, [X31 + 0x15C]
	0x03AC1DF0 MOVZ W9, 0x2019
	0x03AC1DF4 CMP W10, W9
	0x03AC1DF8 B.EQ 0x3AC1E08
	0x03AC1DFC LDR W9, [X31 + 0x15C]
	0x03AC1E00 CMP W9, 0x27
	0x03AC1E04 B.NE 0x3AC1F20
	0x03AC1E08 LDR W9, [X31 + 0x134]
	0x03AC1E0C SUB W9, W9, 0x2
	0x03AC1E10 CMP W9, W8
	0x03AC1E14 B.CS 0x3AC3264
	0x03AC1E18 ADRP X8, 0x634000
	0x03AC1E1C LDR X8, [X8 + 0x170]
	0x03AC1E20 LDR X0, [X8]
	0x03AC1E24 LDR X8, [X31 + 0x138]
	0x03AC1E28 LDR W9, [X0 + 0xE0]
	0x03AC1E2C ADD X8, X22, X8
	0x03AC1E30 SUB X8, X8, 0x438
	0x03AC1E34 LDRH W27, [X8]
	0x03AC1E38 CBNZ W9, 0x3AC1E40
	0x03AC1E3C BL 0x1C16DFC
	0x03AC1E40 MOV W0, W27
	0x03AC1E44 MOV X1, X31
	0x03AC1E48 BL 0x331ABF0
	0x03AC1E4C TBZ X0, 0x0, 0x3AC1F20
	0x03AC1E50 LDR W8, [X22 + 0x18]
	0x03AC1E54 LDR W9, [X31 + 0x134]
	0x03AC1E58 CMP W9, W8
	0x03AC1E5C B.CS 0x3AC3264
	0x03AC1E60 ADRP X8, 0x634000
	0x03AC1E64 LDR X8, [X8 + 0x170]
	0x03AC1E68 LDR X0, [X8]
	0x03AC1E6C LDR X8, [X31 + 0x138]
	0x03AC1E70 LDR W9, [X0 + 0xE0]
	0x03AC1E74 ADD X8, X22, X8
	0x03AC1E78 SUB X8, X8, 0x148
	0x03AC1E7C LDRH W27, [X8]
	0x03AC1E80 CBNZ W9, 0x3AC1E88
	0x03AC1E84 BL 0x1C16DFC
	0x03AC1E88 MOV W0, W27
	0x03AC1E8C MOV X1, X31
	0x03AC1E90 BL 0x331ABF0
	0x03AC1E94 ADD X27, X31, 0xF90
	0x03AC1E98 TBNZ X0, 0x0, 0x3AC1C4C
	0x03AC1E9C B 0x3AC1F20
	0x03AC1EA0 LDR W8, [X31 + 0x134]
	0x03AC1EA4 LDR X29, [X31 + 0x128]
	0x03AC1EA8 CMP W8, 0x1
	0x03AC1EAC B.NE 0x3AC26D0
	0x03AC1EB0 ADRP X8, 0x634000
	0x03AC1EB4 LDR X8, [X8 + 0x170]
	0x03AC1EB8 LDR X0, [X8]
	0x03AC1EBC LDR W8, [X0 + 0xE0]
	0x03AC1EC0 CBNZ W8, 0x3AC1EC8
	0x03AC1EC4 BL 0x1C16DFC
	0x03AC1EC8 LDR W0, [X31 + 0x15C]
	0x03AC1ECC MOV X1, X31
	0x03AC1ED0 BL 0x331AB24
	0x03AC1ED4 TBZ X0, 0x0, 0x3AC1F20
	0x03AC1ED8 ADRP X8, 0x634000
	0x03AC1EDC LDR X8, [X8 + 0x170]
	0x03AC1EE0 LDR X0, [X8]
	0x03AC1EE4 LDR W8, [X0 + 0xE0]
	0x03AC1EE8 CBNZ W8, 0x3AC1EF0
	0x03AC1EEC BL 0x1C16DFC
	0x03AC1EF0 LDR W29, [X31 + 0x15C]
	0x03AC1EF4 MOV X1, X31
	0x03AC1EF8 MOV W0, W29
	0x03AC1EFC BL 0x3317FCC
	0x03AC1F00 MOVZ W8, 0x200B
	0x03AC1F04 CMP W29, W8
	0x03AC1F08 LDR X29, [X31 + 0x128]
	0x03AC1F0C B.EQ 0x3AC1F20
	0x03AC1F10 TBNZ X0, 0x0, 0x3AC1F20
	0x03AC1F14 LDR W8, [X26]
	0x03AC1F18 CMP W8, 0x1
	0x03AC1F1C B.NE 0x3AC26D0
	0x03AC1F20 LDR W8, [X26]
	0x03AC1F24 SUB W8, W8, 0x1
	0x03AC1F28 CMP W24, W8
	0x03AC1F2C B.NE 0x3AC1F5C
	0x03AC1F30 ADRP X8, 0x634000
	0x03AC1F34 LDR X8, [X8 + 0x170]
	0x03AC1F38 LDR X0, [X8]
	0x03AC1F3C LDR W8, [X0 + 0xE0]
	0x03AC1F40 CBNZ W8, 0x3AC1F48
	0x03AC1F44 BL 0x1C16DFC
	0x03AC1F48 LDR W0, [X31 + 0x15C]
	0x03AC1F4C MOV X1, X31
	0x03AC1F50 BL 0x331ABF0
	0x03AC1F54 LDR W20, [X31 + 0xF4]
	0x03AC1F58 TBNZ X0, 0x0, 0x3AC1F64
	0x03AC1F5C LDR W8, [X31 + 0x134]
	0x03AC1F60 SUB W20, W8, 0x2
	0x03AC1F64 LDR X8, [X23]
	0x03AC1F68 CBZ X8, 0x3AC3158
	0x03AC1F6C MOV X27, X8
	0x03AC1F70 LDR X9, [X27 + 0x40]!
	0x03AC1F74 LDR X12, [X31 + 0x140]
	0x03AC1F78 CBZ X9, 0x3AC3158
	0x03AC1F7C LDRSW X21, [X8 + 0x24]
	0x03AC1F80 LDR W22, [X9 + 0x18]
	0x03AC1F84 ADD W9, W21, 0x1
	0x03AC1F88 CMP W9, W22
	0x03AC1F8C B.LE 0x3AC1FCC
	0x03AC1F90 ADRP X8, 0x697000
	0x03AC1F94 LDR X8, [X8 + 0x368]
	0x03AC1F98 LDR X0, [X8]
	0x03AC1F9C LDR W8, [X0 + 0xE0]
	0x03AC1FA0 CBNZ W8, 0x3AC1FA8
	0x03AC1FA4 BL 0x1C16DFC
	0x03AC1FA8 ADRP X8, 0x697000
	0x03AC1FAC LDR X8, [X8 + 0x360]
	0x03AC1FB0 ADD W1, W22, 0x1
	0x03AC1FB4 MOV X0, X27
	0x03AC1FB8 LDR X2, [X8]
	0x03AC1FBC BL 0x2299114
	0x03AC1FC0 LDR X8, [X23]
	0x03AC1FC4 LDR X12, [X31 + 0x140]
	0x03AC1FC8 CBZ X8, 0x3AC3158
	0x03AC1FCC LDR X9, [X8 + 0x40]
	0x03AC1FD0 CBZ X9, 0x3AC3158
	0x03AC1FD4 LDR W10, [X9 + 0x18]
	0x03AC1FD8 LDR X22, [X31 + 0xB0]
	0x03AC1FDC ADD X27, X31, 0xF90
	0x03AC1FE0 CMP W21, W10
	0x03AC1FE4 B.CS 0x3AC3264
	0x03AC1FE8 LDR W11, [X31 + 0x14C]
	0x03AC1FEC MOVZ W10, 0x18
	0x03AC1FF0 MADD X9, X21, X10, X9
	0x03AC1FF4 STR X19, [X9 + 0x20]
	0x03AC1FF8 SUB W10, W20, W11
	0x03AC1FFC ADD W10, W10, 0x1
	0x03AC2000 STP W11, W20, [X9 + 0x28]
	0x03AC2004 STR W10, [X9 + 0x30]
	0x03AC2008 LDR W10, [X8 + 0x24]
	0x03AC200C LDR X9, [X8 + 0x50]
	0x03AC2010 ADD W10, W10, 0x1
	0x03AC2014 STR W10, [X8 + 0x24]
	0x03AC2018 CBZ X9, 0x3AC3158
	0x03AC201C LDR W8, [X9 + 0x18]
	0x03AC2020 LDR X20, [X31 + 0x150]
	0x03AC2024 MOVZ W21, 0x178
	0x03AC2028 CMP W20, W8
	0x03AC202C B.CS 0x3AC3264
	0x03AC2030 MADD X8, X12, X25, X9
	0x03AC2034 LDR W9, [X8 + 0x30]
	0x03AC2038 LDR W10, [X31 + 0xC4]
	0x03AC203C STR W31, [X31 + 0xF0]
	0x03AC2040 ADD W9, W9, 0x1
	0x03AC2044 ADD W10, W10, 0x1
	0x03AC2048 STR W10, [X31 + 0xC4]
	0x03AC204C STR W9, [X8 + 0x30]
	0x03AC2050 B 0x3AC1C54
	0x03AC2054 BL 0x1C16DFC
	0x03AC2058 LDR X8, [X23]
	0x03AC205C CBZ X8, 0x3AC3158
	0x03AC2060 ADRP X9, 0x696000
	0x03AC2064 LDR X9, [X9 + 0x3E8]
	0x03AC2068 LDR X9, [X9]
	0x03AC206C LDR X9, [X9 + 0xB8]
	0x03AC2070 LDR V0, [X9 + 0x15A8]
	0x03AC2074 STR S0, [X31 + 0xE8]
	0x03AC2078 LDR X8, [X8 + 0x38]
	0x03AC207C CBZ X8, 0x3AC3158
	0x03AC2080 LDR W9, [X8 + 0x18]
	0x03AC2084 CMP W24, W9
	0x03AC2088 B.CS 0x3AC3264
	0x03AC208C LDR X9, [X19 + 0xF8]
	0x03AC2090 CBZ X9, 0x3AC3158
	0x03AC2094 MADD X8, X28, X25, X8
	0x03AC2098 LDR V8, [X8 + 0x14C]
	0x03AC209C ADD X0, X9, 0x50
	0x03AC20A0 MOV X1, X31
	0x03AC20A4 BL 0x3C9C048
	0x03AC20A8 LDR V1, [X31 + 0xE8]
	0x03AC20AC FMUL S0, S15, S0
	0x03AC20B0 FADD S0, S8, S0
	0x03AC20B4 STR W21, [X31 + 0x54]
	0x03AC20B8 FCMP S1, S0
	0x03AC20BC FCSEL S1, S1, S0, MI
	0x03AC20C0 STR S1, [X31 + 0xE8]
	0x03AC20C4 LDR W25, [X31 + 0x134]
	0x03AC20C8 LDR W8, [X31 + 0xFC]
	0x03AC20CC TBZ X8, 0x0, 0x3AC20D8
	0x03AC20D0 MOVZ W21, 0x178
	0x03AC20D4 B 0x3AC21A0
	0x03AC20D8 LDR W8, [X31 + 0x15C]
	0x03AC20DC MOVZ W21, 0x178
	0x03AC20E0 STR W31, [X31 + 0xFC]
	0x03AC20E4 CMP W8, 0xD
	0x03AC20E8 B.EQ 0x3AC2248
	0x03AC20EC AND W8, W8, 0xFFFE
	0x03AC20F0 CMP W8, 0xA
	0x03AC20F4 B.EQ 0x3AC2248
	0x03AC20F8 LDR X8, [X31 + 0x120]
	0x03AC20FC CMP W24, W8
	0x03AC2100 B.GT 0x3AC2248
	0x03AC2104 EOR W8, W20, 0x1
	0x03AC2108 TBNZ X8, 0x0, 0x3AC2248
	0x03AC210C LDR X8, [X31 + 0x120]
	0x03AC2110 CMP W24, W8
	0x03AC2114 B.NE 0x3AC2148
	0x03AC2118 ADRP X8, 0x633000
	0x03AC211C LDR X8, [X8 + 0x170]
	0x03AC2120 LDR X0, [X8]
	0x03AC2124 LDR W8, [X0 + 0xE0]
	0x03AC2128 CBNZ W8, 0x3AC2130
	0x03AC212C BL 0x1C16DFC
	0x03AC2130 LDR W0, [X31 + 0x15C]
	0x03AC2134 MOV X1, X31
	0x03AC2138 BL 0x331BAF4
	0x03AC213C TBZ X0, 0x0, 0x3AC2148
	0x03AC2140 STR W31, [X31 + 0xFC]
	0x03AC2144 B 0x3AC2248
	0x03AC2148 LDR X8, [X23]
	0x03AC214C CBZ X8, 0x3AC3158
	0x03AC2150 LDR X8, [X8 + 0x38]
	0x03AC2154 CBZ X8, 0x3AC3158
	0x03AC2158 LDR W9, [X8 + 0x18]
	0x03AC215C CMP W24, W9
	0x03AC2160 B.CS 0x3AC3264
	0x03AC2164 MADD X8, X28, X21, X8
	0x03AC2168 LDR V0, [X8 + 0x160]
	0x03AC216C LDR V1, [X8 + 0x11C]
	0x03AC2170 FCMP S15, 0x0
	0x03AC2174 LDR W8, [X8 + 0x168]
	0x03AC2178 FCSEL S15, S0, S15, EQ
	0x03AC217C STP S1, S0, [X31 + 0x68]
	0x03AC2180 LDR V1, [X31 + 0xE4]
	0x03AC2184 FMOV S0, W31
	0x03AC2188 STR S0, [X31 + 0x64]
	0x03AC218C LDR V0, [X31 + 0xE8]
	0x03AC2190 FCSEL S1, S14, S1, EQ
	0x03AC2194 STR X8, [X31 + 0x70]
	0x03AC2198 STR S1, [X31 + 0xE4]
	0x03AC219C STR S0, [X31 + 0x60]
	0x03AC21A0 LDR W8, [X26]
	0x03AC21A4 SUBS W8, W8, 0x1
	0x03AC21A8 B.NE 0x3AC23A8
	0x03AC21AC LDR X8, [X23]
	0x03AC21B0 CBZ X8, 0x3AC3158
	0x03AC21B4 LDR X8, [X8 + 0x38]
	0x03AC21B8 CBZ X8, 0x3AC3158
	0x03AC21BC LDR W9, [X8 + 0x18]
	0x03AC21C0 CMP W24, W9
	0x03AC21C4 B.CS 0x3AC3264
	0x03AC21C8 MADD X8, X28, X21, X8
	0x03AC21CC LDR X9, [X19]
	0x03AC21D0 LDR V3, [X8 + 0x128]
	0x03AC21D4 LDR V7, [X8 + 0x160]
	0x03AC21D8 LDR X8, [X9 + 0x908]
	0x03AC21DC LDR X3, [X9 + 0x910]
	0x03AC21E0 LDP S0, S4, [X31 + 0xE4]
	0x03AC21E4 LDR X9, [X31 + 0x70]
	0x03AC21E8 LDR V1, [X31 + 0x60]
	0x03AC21EC LDR V6, [X31 + 0x6C]
	0x03AC21F0 STR S0, [X31 + 0x8]
	0x03AC21F4 LDP S2, S0, [X31 + 0x64]
	0x03AC21F8 ADD X1, X31, 0x1000
	0x03AC21FC MOV W2, W9
	0x03AC2200 FMOV S5, W31
	0x03AC2204 ADD X1, X1, 0x54
	0x03AC2208 MOV X0, X19
	0x03AC220C STR S15, [X31]
	0x03AC2210 BLR X8
	0x03AC2214 ADRP X20, 0x696000
	0x03AC2218 LDR X20, [X20 + 0x3E8]
	0x03AC221C LDR X0, [X20]
	0x03AC2220 LDR W8, [X0 + 0xE0]
	0x03AC2224 CBNZ W8, 0x3AC2230
	0x03AC2228 BL 0x1C16DFC
	0x03AC222C LDR X0, [X20]
	0x03AC2230 LDR X8, [X0 + 0xB8]
	0x03AC2234 FMOV S15, W31
	0x03AC2238 FMOV S0, W31
	0x03AC223C STR W31, [X31 + 0xFC]
	0x03AC2240 LDR V1, [X8 + 0x15A8]
	0x03AC2244 STP S0, S1, [X31 + 0xE4]
	0x03AC2248 LDR X8, [X23]
	0x03AC224C CBZ X8, 0x3AC3158
	0x03AC2250 LDR X8, [X8 + 0x38]
	0x03AC2254 CBZ X8, 0x3AC3158
	0x03AC2258 LDR W9, [X8 + 0x18]
	0x03AC225C CMP W24, W9
	0x03AC2260 B.CS 0x3AC3264
	0x03AC2264 CBZ X29, 0x3AC3158
	0x03AC2268 MADD X8, X28, X21, X8
	0x03AC226C LDR W20, [X8 + 0x190]
	0x03AC2270 ADD X0, X29, 0x50
	0x03AC2274 MOV X1, X31
	0x03AC2278 BL 0x3C9C068
	0x03AC227C MOV V11.16B, V0.16B
	0x03AC2280 TBNZ X20, 0x6, 0x3AC22E0
	0x03AC2284 LDR W8, [X31 + 0xF8]
	0x03AC2288 TBZ X8, 0x0, 0x3AC23A0
	0x03AC228C LDR X8, [X23]
	0x03AC2290 CBZ X8, 0x3AC3158
	0x03AC2294 LDR X8, [X8 + 0x38]
	0x03AC2298 CBZ X8, 0x3AC3158
	0x03AC229C LDR W9, [X8 + 0x18]
	0x03AC22A0 LDR X20, [X31 + 0x150]
	0x03AC22A4 SUB W10, W25, 0x2
	0x03AC22A8 CMP W10, W9
	0x03AC22AC B.CS 0x3AC3264
	0x03AC22B0 LDR X9, [X31 + 0x138]
	0x03AC22B4 LDR V6, [X31 + 0x94]
	0x03AC22B8 ADD X8, X8, X9
	0x03AC22BC LDR X9, [X19]
	0x03AC22C0 SUB X10, X8, 0x330
	0x03AC22C4 SUB X8, X8, 0x30C
	0x03AC22C8 LDR V3, [X10]
	0x03AC22CC LDR V0, [X8]
	0x03AC22D0 LDR X8, [X9 + 0x908]
	0x03AC22D4 LDR X3, [X9 + 0x910]
	0x03AC22D8 FMUL S1, S6, S11
	0x03AC22DC B 0x3AC278C
	0x03AC22E0 LDR X8, [X23]
	0x03AC22E4 CBZ X8, 0x3AC3158
	0x03AC22E8 LDR X9, [X8 + 0x38]
	0x03AC22EC LDR X12, [X31 + 0x150]
	0x03AC22F0 CBZ X9, 0x3AC3158
	0x03AC22F4 LDR W10, [X9 + 0x18]
	0x03AC22F8 CMP W24, W10
	0x03AC22FC B.CS 0x3AC3264
	0x03AC2300 LDR W10, [X31 + 0x1054]
	0x03AC2304 NOP
	0x03AC2308 MADD X11, X28, X21, X9
	0x03AC230C STR W10, [X11 + 0x174]
	0x03AC2310 LDR W10, [X19 + 0x328]
	0x03AC2314 CMP W24, W10
	0x03AC2318 B.GT 0x3AC2328
	0x03AC231C LDR W10, [X19 + 0x330]
	0x03AC2320 CMP W12, W10
	0x03AC2324 B.LE 0x3AC2418
	0x03AC2328 MOV W20, W31
	0x03AC232C LDR W9, [X31 + 0x15C]
	0x03AC2330 CMP W9, 0xD
	0x03AC2334 B.EQ 0x3AC2398
	0x03AC2338 LDR W9, [X31 + 0x15C]
	0x03AC233C AND W9, W9, 0xFFFE
	0x03AC2340 CMP W9, 0xA
	0x03AC2344 B.EQ 0x3AC2398
	0x03AC2348 LDR X9, [X31 + 0x120]
	0x03AC234C CMP W24, W9
	0x03AC2350 B.GT 0x3AC2398
	0x03AC2354 LDR W10, [X31 + 0xF8]
	0x03AC2358 EOR W9, W20, 0x1
	0x03AC235C ORR W9, W10, W9, 0x0
	0x03AC2360 TBNZ X9, 0x0, 0x3AC2398
	0x03AC2364 LDR X9, [X31 + 0x120]
	0x03AC2368 CMP W24, W9
	0x03AC236C B.NE 0x3AC24AC
	0x03AC2370 ADRP X8, 0x633000
	0x03AC2374 LDR X8, [X8 + 0x170]
	0x03AC2378 LDR X0, [X8]
	0x03AC237C LDR W8, [X0 + 0xE0]
	0x03AC2380 CBNZ W8, 0x3AC2388
	0x03AC2384 BL 0x1C16DFC
	0x03AC2388 LDR W0, [X31 + 0x15C]
	0x03AC238C MOV X1, X31
	0x03AC2390 BL 0x331BAF4
	0x03AC2394 TBZ X0, 0x0, 0x3AC24A4
	0x03AC2398 LDR W8, [X31 + 0xF8]
	0x03AC239C TBNZ X8, 0x0, 0x3AC24F4
	0x03AC23A0 LDR X20, [X31 + 0x150]
	0x03AC23A4 B 0x3AC27C0
	0x03AC23A8 LDR X9, [X31 + 0xD0]
	0x03AC23AC CMP W24, W9
	0x03AC23B0 B.EQ 0x3AC2444
	0x03AC23B4 LDR X9, [X31 + 0x120]
	0x03AC23B8 CMP W24, W9
	0x03AC23BC B.GE 0x3AC2444
	0x03AC23C0 TBZ X20, 0x0, 0x3AC2684
	0x03AC23C4 CMP W24, W8
	0x03AC23C8 B.GE 0x3AC26D8
	0x03AC23CC LDR X8, [X23]
	0x03AC23D0 CBZ X8, 0x3AC3158
	0x03AC23D4 LDR X8, [X8 + 0x38]
	0x03AC23D8 CBZ X8, 0x3AC3158
	0x03AC23DC LDR W9, [X8 + 0x18]
	0x03AC23E0 CMP W25, W9
	0x03AC23E4 B.CS 0x3AC3264
	0x03AC23E8 LDR X9, [X31 + 0x138]
	0x03AC23EC MOV X2, X31
	0x03AC23F0 LDR W1, [X8, X9, LSL]
	0x03AC23F4 LDR X8, [X31 + 0x70]
	0x03AC23F8 MOV W27, W8
	0x03AC23FC MOV X0, X27
	0x03AC2400 BL 0x3ADAC28
	0x03AC2404 TBZ X0, 0x0, 0x3AC2B90
	0x03AC2408 MOVZ W8, 0x1
	0x03AC240C STR W8, [X31 + 0xFC]
	0x03AC2410 ADD X27, X31, 0xF90
	0x03AC2414 B 0x3AC2248
	0x03AC2418 LDR W10, [X19 + 0x2E0]
	0x03AC241C CMP W10, 0x5
	0x03AC2420 B.NE 0x3AC243C
	0x03AC2424 MADD X9, X28, X21, X9
	0x03AC2428 LDR W9, [X9 + 0x68]
	0x03AC242C LDR W10, [X19 + 0x338]
	0x03AC2430 ADD W9, W9, 0x1
	0x03AC2434 CMP W9, W10
	0x03AC2438 B.NE 0x3AC2328
	0x03AC243C MOVZ W20, 0x1
	0x03AC2440 B 0x3AC232C
	0x03AC2444 ADRP X8, 0x633000
	0x03AC2448 LDR X8, [X8 + 0x170]
	0x03AC244C LDR X0, [X8]
	0x03AC2450 LDR W8, [X0 + 0xE0]
	0x03AC2454 CBNZ W8, 0x3AC245C
	0x03AC2458 BL 0x1C16DFC
	0x03AC245C LDR W0, [X31 + 0x15C]
	0x03AC2460 MOVZ W8, 0x200B
	0x03AC2464 MOV X1, X31
	0x03AC2468 CMP W0, W8
	0x03AC246C CSET W20, EQ
	0x03AC2470 BL 0x3317FCC
	0x03AC2474 LDR X8, [X23]
	0x03AC2478 CBZ X8, 0x3AC3158
	0x03AC247C LDR X8, [X8 + 0x38]
	0x03AC2480 CBZ X8, 0x3AC3158
	0x03AC2484 LDR W9, [X8 + 0x18]
	0x03AC2488 ORR W10, W20, W0, 0x0
	0x03AC248C TBZ X10, 0x0, 0x3AC269C
	0x03AC2490 LDR X10, [X31 + 0x120]
	0x03AC2494 CMP W10, W9
	0x03AC2498 MOV X9, X10
	0x03AC249C B.CC 0x3AC26A8
	0x03AC24A0 B 0x3AC3264
	0x03AC24A4 LDR X8, [X23]
	0x03AC24A8 CBZ X8, 0x3AC3158
	0x03AC24AC LDR X8, [X8 + 0x38]
	0x03AC24B0 CBZ X8, 0x3AC3158
	0x03AC24B4 LDR W9, [X8 + 0x18]
	0x03AC24B8 CMP W24, W9
	0x03AC24BC B.CS 0x3AC3264
	0x03AC24C0 MADD X8, X28, X21, X8
	0x03AC24C4 LDR V0, [X8 + 0x160]
	0x03AC24C8 LDR V2, [X8 + 0x11C]
	0x03AC24CC LDR V3, [X8 + 0x60]
	0x03AC24D0 LDR V1, [X8 + 0x14C]
	0x03AC24D4 LDR W8, [X8 + 0x170]
	0x03AC24D8 STP S2, S0, [X31 + 0x90]
	0x03AC24DC FMUL S0, S11, S0
	0x03AC24E0 STP S1, S3, [X31 + 0x30]
	0x03AC24E4 FADD S3, S0, S1
	0x03AC24E8 FMOV S0, W31
	0x03AC24EC STR X8, [X31 + 0x98]
	0x03AC24F0 STP S0, S3, [X31 + 0x7C]
	0x03AC24F4 LDR W8, [X26]
	0x03AC24F8 CMP W8, 0x1
	0x03AC24FC B.NE 0x3AC253C
	0x03AC2500 LDR X8, [X23]
	0x03AC2504 CBZ X8, 0x3AC3158
	0x03AC2508 LDR X8, [X8 + 0x38]
	0x03AC250C LDR X20, [X31 + 0x150]
	0x03AC2510 CBZ X8, 0x3AC3158
	0x03AC2514 LDR W9, [X8 + 0x18]
	0x03AC2518 CMP W24, W9
	0x03AC251C B.CS 0x3AC3264
	0x03AC2520 MADD X8, X28, X21, X8
	0x03AC2524 LDR X9, [X19]
	0x03AC2528 LDR V3, [X8 + 0x128]
	0x03AC252C LDR V0, [X8 + 0x14C]
	0x03AC2530 LDR X8, [X9 + 0x908]
	0x03AC2534 LDR X3, [X9 + 0x910]
	0x03AC2538 B 0x3AC2784
	0x03AC253C LDR X9, [X31 + 0xD0]
	0x03AC2540 CMP W24, W9
	0x03AC2544 B.NE 0x3AC25AC
	0x03AC2548 ADRP X8, 0x633000
	0x03AC254C LDR X8, [X8 + 0x170]
	0x03AC2550 LDR X0, [X8]
	0x03AC2554 LDR W8, [X0 + 0xE0]
	0x03AC2558 CBNZ W8, 0x3AC2560
	0x03AC255C BL 0x1C16DFC
	0x03AC2560 LDR W20, [X31 + 0x15C]
	0x03AC2564 MOV X1, X31
	0x03AC2568 MOV W0, W20
	0x03AC256C BL 0x3317FCC
	0x03AC2570 MOVZ W9, 0x200B
	0x03AC2574 LDR X8, [X23]
	0x03AC2578 CMP W20, W9
	0x03AC257C LDR X20, [X31 + 0x150]
	0x03AC2580 CSET W9, EQ
	0x03AC2584 CBZ X8, 0x3AC3158
	0x03AC2588 LDR X8, [X8 + 0x38]
	0x03AC258C CBZ X8, 0x3AC3158
	0x03AC2590 LDR W10, [X8 + 0x18]
	0x03AC2594 ORR W9, W9, W0, 0x0
	0x03AC2598 TBZ X9, 0x0, 0x3AC26C8
	0x03AC259C LDR X9, [X31 + 0x120]
	0x03AC25A0 CMP W9, W10
	0x03AC25A4 B.CC 0x3AC2768
	0x03AC25A8 B 0x3AC3264
	0x03AC25AC CMP W24, W8
	0x03AC25B0 B.GE 0x3AC2624
	0x03AC25B4 LDR X8, [X23]
	0x03AC25B8 CBZ X8, 0x3AC3158
	0x03AC25BC LDR X9, [X8 + 0x38]
	0x03AC25C0 CBZ X9, 0x3AC3158
	0x03AC25C4 LDR W10, [X9 + 0x18]
	0x03AC25C8 CMP W25, W10
	0x03AC25CC B.CS 0x3AC3264
	0x03AC25D0 LDR X10, [X31 + 0x138]
	0x03AC25D4 LDR V1, [X31 + 0x34]
	0x03AC25D8 ADD X9, X9, X10
	0x03AC25DC SUB X10, X9, 0x108
	0x03AC25E0 LDR V0, [X10]
	0x03AC25E4 FCMP S0, S1
	0x03AC25E8 B.NE 0x3AC2730
	0x03AC25EC ADRP X8, 0x696000
	0x03AC25F0 LDR X8, [X8 + 0x340]
	0x03AC25F4 LDUR V8, [X9 - 0x1C]
	0x03AC25F8 LDR X0, [X8]
	0x03AC25FC LDR W8, [X0 + 0xE0]
	0x03AC2600 CBNZ W8, 0x3AC2608
	0x03AC2604 BL 0x1C16DFC
	0x03AC2608 LDR V0, [X31 + 0x11]
	0x03AC260C LDR V1, [X31 + 0x30]
	0x03AC2610 MOV X0, X31
	0x03AC2614 FADD S0, S0, S8
	0x03AC2618 BL 0x3ADB03C
	0x03AC261C TBZ X0, 0x0, 0x3AC2728
	0x03AC2620 LDR W8, [X26]
	0x03AC2624 CMP W24, W8
	0x03AC2628 B.GE 0x3AC2670
	0x03AC262C MOV X0, X29
	0x03AC2630 MOV X1, X31
	0x03AC2634 BL 0x3C385F8
	0x03AC2638 LDR W8, [X22 + 0x18]
	0x03AC263C CMP W25, W8
	0x03AC2640 B.CS 0x3AC3264
	0x03AC2644 LDR X8, [X31 + 0x138]
	0x03AC2648 MOV W26, W0
	0x03AC264C ADD X8, X22, X8
	0x03AC2650 SUB X8, X8, 0x130
	0x03AC2654 LDR X0, [X8]
	0x03AC2658 CBZ X0, 0x3AC3158
	0x03AC265C MOV X1, X31
	0x03AC2660 BL 0x3C385F8
	0x03AC2664 CMP W26, W0
	0x03AC2668 LDR X26, [X31 + 0x160]
	0x03AC266C B.NE 0x3AC2500
	0x03AC2670 TBZ X20, 0x0, 0x3AC26E4
	0x03AC2674 LDR X20, [X31 + 0x150]
	0x03AC2678 MOVZ W8, 0x1
	0x03AC267C STR W8, [X31 + 0xF8]
	0x03AC2680 B 0x3AC27C4
	0x03AC2684 LDR X8, [X23]
	0x03AC2688 CBZ X8, 0x3AC3158
	0x03AC268C LDR X8, [X8 + 0x38]
	0x03AC2690 CBZ X8, 0x3AC3158
	0x03AC2694 LDR W9, [X8 + 0x18]
	0x03AC2698 B 0x3AC1C88
	0x03AC269C CMP W24, W9
	0x03AC26A0 MOV X9, X28
	0x03AC26A4 B.CS 0x3AC3264
	0x03AC26A8 LDR X10, [X19]
	0x03AC26AC NOP
	0x03AC26B0 MADD X8, X9, X21, X8
	0x03AC26B4 LDR V3, [X8 + 0x128]
	0x03AC26B8 LDR V7, [X8 + 0x160]
	0x03AC26BC LDR X8, [X10 + 0x908]
	0x03AC26C0 LDR X3, [X10 + 0x910]
	0x03AC26C4 B 0x3AC21E0
	0x03AC26C8 CMP W24, W10
	0x03AC26CC B 0x3AC2760
	0x03AC26D0 STR W31, [X31 + 0xF0]
	0x03AC26D4 B 0x3AC1C54
	0x03AC26D8 MOVZ W8, 0x1
	0x03AC26DC STR W8, [X31 + 0xFC]
	0x03AC26E0 B 0x3AC2248
	0x03AC26E4 LDR X8, [X23]
	0x03AC26E8 CBZ X8, 0x3AC3158
	0x03AC26EC LDR X8, [X8 + 0x38]
	0x03AC26F0 CBZ X8, 0x3AC3158
	0x03AC26F4 LDR W9, [X8 + 0x18]
	0x03AC26F8 LDR X20, [X31 + 0x150]
	0x03AC26FC SUB W10, W25, 0x2
	0x03AC2700 CMP W10, W9
	0x03AC2704 B.CS 0x3AC3264
	0x03AC2708 LDR X9, [X31 + 0x138]
	0x03AC270C ADD X8, X8, X9
	0x03AC2710 SUB X10, X8, 0x330
	0x03AC2714 SUB X8, X8, 0x30C
	0x03AC2718 LDR X9, [X19]
	0x03AC271C LDR V3, [X10]
	0x03AC2720 LDR V0, [X8]
	0x03AC2724 B 0x3AC2530
	0x03AC2728 LDR X8, [X23]
	0x03AC272C CBZ X8, 0x3AC3158
	0x03AC2730 LDR X8, [X8 + 0x38]
	0x03AC2734 CBZ X8, 0x3AC3158
	0x03AC2738 LDR X10, [X31 + 0x120]
	0x03AC273C LDR W9, [X8 + 0x18]
	0x03AC2740 LDR X20, [X31 + 0x150]
	0x03AC2744 CMP W24, W10
	0x03AC2748 B.LE 0x3AC275C
	0x03AC274C CMP W10, W9
	0x03AC2750 MOV X9, X10
	0x03AC2754 B.CC 0x3AC2768
	0x03AC2758 B 0x3AC3264
	0x03AC275C CMP W24, W9
	0x03AC2760 MOV X9, X28
	0x03AC2764 B.CS 0x3AC3264
	0x03AC2768 LDR X10, [X19]
	0x03AC276C NOP
	0x03AC2770 MADD X8, X9, X21, X8
	0x03AC2774 LDR V0, [X8 + 0x14C]
	0x03AC2778 LDR V3, [X8 + 0x128]
	0x03AC277C LDR X8, [X10 + 0x908]
	0x03AC2780 LDR X3, [X10 + 0x910]
	0x03AC2784 LDR V6, [X31 + 0x94]
	0x03AC2788 FMUL S1, S11, S6
	0x03AC278C LDR X9, [X31 + 0x98]
	0x03AC2790 FADD S4, S1, S0
	0x03AC2794 LDR V0, [X31 + 0x90]
	0x03AC2798 LDP S2, S1, [X31 + 0x7C]
	0x03AC279C ADD X1, X31, 0x1000
	0x03AC27A0 MOV W2, W9
	0x03AC27A4 FMOV S5, W31
	0x03AC27A8 ADD X1, X1, 0x54
	0x03AC27AC MOV X0, X19
	0x03AC27B0 MOV V7.16B, V6.16B
	0x03AC27B4 STR S14, [X31 + 0x8]
	0x03AC27B8 STR S6, [X31]
	0x03AC27BC BLR X8
	0x03AC27C0 STR W31, [X31 + 0xF8]
	0x03AC27C4 LDR X8, [X23]
	0x03AC27C8 CBZ X8, 0x3AC3158
	0x03AC27CC LDR X8, [X8 + 0x38]
	0x03AC27D0 CBZ X8, 0x3AC3158
	0x03AC27D4 LDR X9, [X8 + 0x18]
	0x03AC27D8 CMP W24, W9
	0x03AC27DC B.CS 0x3AC3264
	0x03AC27E0 MADD X10, X28, X21, X8
	0x03AC27E4 LDRB W10, [X10 + 0x191]
	0x03AC27E8 TBNZ X10, 0x1, 0x3AC2828
	0x03AC27EC LDR W8, [X31 + 0xEC]
	0x03AC27F0 TBZ X8, 0x0, 0x3AC2B20
	0x03AC27F4 LDR X8, [X19]
	0x03AC27F8 LDP S2, S3, [X31 + 0xB8]
	0x03AC27FC LDR W2, [X31 + 0x1040]
	0x03AC2800 LDP S0, S1, [X31 + 0xC8]
	0x03AC2804 LDR X9, [X8 + 0x918]
	0x03AC2808 LDR X3, [X8 + 0x920]
	0x03AC280C LDR V4, [X31 + 0xC0]
	0x03AC2810 ADD X1, X31, 0x1000
	0x03AC2814 ADD X1, X1, 0x54
	0x03AC2818 MOV X0, X19
	0x03AC281C MOV V5.16B, V2.16B
	0x03AC2820 BLR X9
	0x03AC2824 B 0x3AC2B20
	0x03AC2828 LDR W10, [X19 + 0x328]
	0x03AC282C CMP W24, W10
	0x03AC2830 B.GT 0x3AC286C
	0x03AC2834 LDR W10, [X19 + 0x330]
	0x03AC2838 CMP W20, W10
	0x03AC283C B.GT 0x3AC286C
	0x03AC2840 LDR W10, [X19 + 0x2E0]
	0x03AC2844 CMP W10, 0x5
	0x03AC2848 B.NE 0x3AC2864
	0x03AC284C MADD X10, X28, X21, X8
	0x03AC2850 LDR W10, [X10 + 0x68]
	0x03AC2854 LDR W11, [X19 + 0x338]
	0x03AC2858 ADD W10, W10, 0x1
	0x03AC285C CMP W10, W11
	0x03AC2860 B.NE 0x3AC286C
	0x03AC2864 MOVZ W20, 0x1
	0x03AC2868 B 0x3AC2870
	0x03AC286C MOV W20, W31
	0x03AC2870 LDR W10, [X31 + 0xEC]
	0x03AC2874 TBNZ X10, 0x0, 0x3AC2954
	0x03AC2878 LDR W8, [X31 + 0x15C]
	0x03AC287C MOV W9, W31
	0x03AC2880 CMP W8, 0xD
	0x03AC2884 B.EQ 0x3AC2B84
	0x03AC2888 AND W8, W8, 0xFFFE
	0x03AC288C CMP W8, 0xA
	0x03AC2890 B.EQ 0x3AC2B84
	0x03AC2894 LDR X8, [X31 + 0x120]
	0x03AC2898 CMP W24, W8
	0x03AC289C B.GT 0x3AC2B84
	0x03AC28A0 EOR W8, W20, 0x1
	0x03AC28A4 TBNZ X8, 0x0, 0x3AC2B84
	0x03AC28A8 LDR X8, [X31 + 0x120]
	0x03AC28AC CMP W24, W8
	0x03AC28B0 B.NE 0x3AC28DC
	0x03AC28B4 ADRP X8, 0x633000
	0x03AC28B8 LDR X8, [X8 + 0x170]
	0x03AC28BC LDR X0, [X8]
	0x03AC28C0 LDR W8, [X0 + 0xE0]
	0x03AC28C4 CBNZ W8, 0x3AC28CC
	0x03AC28C8 BL 0x1C16DFC
	0x03AC28CC LDR W0, [X31 + 0x15C]
	0x03AC28D0 MOV X1, X31
	0x03AC28D4 BL 0x331BAF4
	0x03AC28D8 TBNZ X0, 0x0, 0x3AC2B1C
	0x03AC28DC ADRP X29, 0x696000
	0x03AC28E0 LDR X29, [X29 + 0x3E8]
	0x03AC28E4 LDR X0, [X29]
	0x03AC28E8 LDR W8, [X0 + 0xE0]
	0x03AC28EC CBNZ W8, 0x3AC28F8
	0x03AC28F0 BL 0x1C16DFC
	0x03AC28F4 LDR X0, [X29]
	0x03AC28F8 LDR X8, [X23]
	0x03AC28FC CBZ X8, 0x3AC3158
	0x03AC2900 LDR X8, [X8 + 0x38]
	0x03AC2904 CBZ X8, 0x3AC3158
	0x03AC2908 LDR X9, [X8 + 0x18]
	0x03AC290C CMP W24, W9
	0x03AC2910 B.CS 0x3AC3264
	0x03AC2914 LDR X10, [X0 + 0xB8]
	0x03AC2918 NOP
	0x03AC291C MADD X11, X28, X21, X8
	0x03AC2920 ADD X11, X11, 0x17C
	0x03AC2924 LDR V0, [X11]
	0x03AC2928 LDR V2, [X10 + 0x1598]
	0x03AC292C LDR V1, [X10 + 0x159C]
	0x03AC2930 LDR W11, [X11 + 0x10]
	0x03AC2934 STP S2, S1, [X31 + 0xC8]
	0x03AC2938 LDR V2, [X10 + 0x15A0]
	0x03AC293C LDR V1, [X10 + 0x15A4]
	0x03AC2940 STR V0, [X27 + 0xB]
	0x03AC2944 FMOV S0, W31
	0x03AC2948 STR W11, [X31 + 0x1050]
	0x03AC294C STP S2, S1, [X31 + 0xBC]
	0x03AC2950 STR S0, [X31 + 0xB8]
	0x03AC2954 CMP W24, W9
	0x03AC2958 B.CS 0x3AC3264
	0x03AC295C MADD X8, X28, X21, X8
	0x03AC2960 ADD X10, X8, 0x17C
	0x03AC2964 MOV V9.16B, V14.16B
	0x03AC2968 LDR V0, [X27 + 0xB]
	0x03AC296C LDR W9, [X31 + 0x1050]
	0x03AC2970 LDR V1, [X8 + 0x128]
	0x03AC2974 LDR V12, [X8 + 0x188]
	0x03AC2978 LDR X21, [X10]
	0x03AC297C LDR V14, [X10 + 0x8]
	0x03AC2980 LDR V13, [X10 + 0x10]
	0x03AC2984 LDR V10, [X8 + 0x11C]
	0x03AC2988 LDR V8, [X8 + 0x148]
	0x03AC298C LDR V11, [X8 + 0x150]
	0x03AC2990 ADD X0, X31, 0x180
	0x03AC2994 ADD X1, X31, 0x168
	0x03AC2998 MOV X2, X31
	0x03AC299C STR S1, [X31 + 0x15C]
	0x03AC29A0 STR V0, [X31 + 0x18]
	0x03AC29A4 STR W9, [X31 + 0x190]
	0x03AC29A8 STR X21, [X31 + 0x168]
	0x03AC29AC STR S14, [X31 + 0x170]
	0x03AC29B0 STR S12, [X31 + 0x174]
	0x03AC29B4 STR S13, [X31 + 0x178]
	0x03AC29B8 BL 0x3ADBEC4
	0x03AC29BC ADRP X8, 0x696000
	0x03AC29C0 LDR X8, [X8 + 0x350]
	0x03AC29C4 LDR X8, [X8]
	0x03AC29C8 LDR W9, [X8 + 0xE0]
	0x03AC29CC TBZ X0, 0x0, 0x3AC2A70
	0x03AC29D0 CBNZ W9, 0x3AC29DC
	0x03AC29D4 MOV X0, X8
	0x03AC29D8 BL 0x1C16DFC
	0x03AC29DC LDR V0, [X31 + 0x1048]
	0x03AC29E0 LDR V2, [X31 + 0xBC]
	0x03AC29E4 LDR V1, [X31 + 0xCC]
	0x03AC29E8 LDR X8, [X19]
	0x03AC29EC LDR W2, [X31 + 0x1040]
	0x03AC29F0 FSUB S0, S2, S0
	0x03AC29F4 FADD S0, S10, S0
	0x03AC29F8 FMOV S2, 0.5
	0x03AC29FC FMUL S10, S0, S2
	0x03AC2A00 LDR V0, [X31 + 0xC0]
	0x03AC2A04 FCMP S1, S11
	0x03AC2A08 FCSEL S1, S1, S11, MI
	0x03AC2A0C LDR V2, [X31 + 0xB8]
	0x03AC2A10 FCMP S0, S8
	0x03AC2A14 LDR X9, [X8 + 0x918]
	0x03AC2A18 LDR X3, [X8 + 0x920]
	0x03AC2A1C FCSEL S4, S0, S8, GT
	0x03AC2A20 LDR V0, [X31 + 0xC8]
	0x03AC2A24 ADD X1, X31, 0x1000
	0x03AC2A28 ADD X1, X1, 0x54
	0x03AC2A2C MOV X0, X19
	0x03AC2A30 MOV V3.16B, V10.16B
	0x03AC2A34 MOV V5.16B, V2.16B
	0x03AC2A38 BLR X9
	0x03AC2A3C FSUB S0, S11, S13
	0x03AC2A40 STP S10, S0, [X31 + 0xC8]
	0x03AC2A44 LDR V0, [X31 + 0x15C]
	0x03AC2A48 STR X21, [X31 + 0x1040]
	0x03AC2A4C STR S14, [X31 + 0x1048]
	0x03AC2A50 STR S12, [X31 + 0x104C]
	0x03AC2A54 FADD S6, S0, S14
	0x03AC2A58 FADD S0, S8, S12
	0x03AC2A5C STP S6, S0, [X31 + 0xBC]
	0x03AC2A60 FMOV S0, W31
	0x03AC2A64 STR S13, [X31 + 0x1050]
	0x03AC2A68 STR S0, [X31 + 0xB8]
	0x03AC2A6C B 0x3AC2AD8
	0x03AC2A70 CBNZ W9, 0x3AC2A7C
	0x03AC2A74 MOV X0, X8
	0x03AC2A78 BL 0x1C16DFC
	0x03AC2A7C LDR V2, [X31 + 0x1048]
	0x03AC2A80 LDR V4, [X31 + 0x15C]
	0x03AC2A84 LDR V0, [X31 + 0x1044]
	0x03AC2A88 LDR V1, [X31 + 0x1050]
	0x03AC2A8C LDR V3, [X31 + 0x104C]
	0x03AC2A90 FADD S2, S4, S2
	0x03AC2A94 LDR V4, [X31 + 0xC8]
	0x03AC2A98 FSUB S0, S10, S0
	0x03AC2A9C FSUB S1, S11, S1
	0x03AC2AA0 FADD S3, S8, S3
	0x03AC2AA4 FCMP S4, S0
	0x03AC2AA8 FCSEL S4, S4, S0, MI
	0x03AC2AAC LDR V0, [X31 + 0xCC]
	0x03AC2AB0 FCMP S0, S1
	0x03AC2AB4 FCSEL S0, S0, S1, MI
	0x03AC2AB8 STP S4, S0, [X31 + 0xC8]
	0x03AC2ABC LDR V0, [X31 + 0xBC]
	0x03AC2AC0 FCMP S0, S2
	0x03AC2AC4 FCSEL S1, S0, S2, GT
	0x03AC2AC8 LDR V0, [X31 + 0xC0]
	0x03AC2ACC FCMP S0, S3
	0x03AC2AD0 FCSEL S0, S0, S3, GT
	0x03AC2AD4 STP S1, S0, [X31 + 0xBC]
	0x03AC2AD8 LDR W8, [X26]
	0x03AC2ADC MOVZ W21, 0x178
	0x03AC2AE0 MOV V14.16B, V9.16B
	0x03AC2AE4 CMP W8, 0x1
	0x03AC2AE8 B.NE 0x3AC2B58
	0x03AC2AEC LDR X8, [X19]
	0x03AC2AF0 LDP S2, S3, [X31 + 0xB8]
	0x03AC2AF4 LDR W2, [X31 + 0x1040]
	0x03AC2AF8 LDP S0, S1, [X31 + 0xC8]
	0x03AC2AFC LDR X9, [X8 + 0x918]
	0x03AC2B00 LDR X3, [X8 + 0x920]
	0x03AC2B04 LDR V4, [X31 + 0xC0]
	0x03AC2B08 ADD X1, X31, 0x1000
	0x03AC2B0C ADD X1, X1, 0x54
	0x03AC2B10 MOV X0, X19
	0x03AC2B14 MOV V5.16B, V2.16B
	0x03AC2B18 BLR X9
	0x03AC2B1C LDR X20, [X31 + 0x150]
	0x03AC2B20 STR W31, [X31 + 0xEC]
	0x03AC2B24 LDR W9, [X31 + 0xF4]
	0x03AC2B28 LDR X10, [X31 + 0x138]
	0x03AC2B2C LDR W8, [X26]
	0x03AC2B30 MOV W15, W20
	0x03AC2B34 ADD W9, W9, 0x1
	0x03AC2B38 STR W9, [X31 + 0xF4]
	0x03AC2B3C ADD W9, W25, 0x1
	0x03AC2B40 ADD X10, X10, 0x178
	0x03AC2B44 CMP W25, W8
	0x03AC2B48 STR X10, [X31 + 0x138]
	0x03AC2B4C MOV W10, W9
	0x03AC2B50 B.LT 0x3AC0CF4
	0x03AC2B54 B 0x3AC2D34
	0x03AC2B58 LDR X8, [X31 + 0xD0]
	0x03AC2B5C CMP W24, W8
	0x03AC2B60 B.EQ 0x3AC2AEC
	0x03AC2B64 LDR X8, [X31 + 0x120]
	0x03AC2B68 CMP W24, W8
	0x03AC2B6C B.GE 0x3AC2AEC
	0x03AC2B70 TBZ X20, 0x0, 0x3AC2AEC
	0x03AC2B74 LDR X20, [X31 + 0x150]
	0x03AC2B78 MOVZ W8, 0x1
	0x03AC2B7C STR W8, [X31 + 0xEC]
	0x03AC2B80 B 0x3AC2B24
	0x03AC2B84 LDR X20, [X31 + 0x150]
	0x03AC2B88 STR W9, [X31 + 0xEC]
	0x03AC2B8C B 0x3AC2B24
	0x03AC2B90 LDR X8, [X23]
	0x03AC2B94 CBZ X8, 0x3AC3158
	0x03AC2B98 LDR X8, [X8 + 0x38]
	0x03AC2B9C CBZ X8, 0x3AC3158
	0x03AC2BA0 LDR W9, [X8 + 0x18]
	0x03AC2BA4 CMP W24, W9
	0x03AC2BA8 B.CS 0x3AC3264
	0x03AC2BAC LDR X9, [X19]
	0x03AC2BB0 LDP S0, S4, [X31 + 0xE4]
	0x03AC2BB4 NOP
	0x03AC2BB8 MADD X8, X28, X21, X8
	0x03AC2BBC LDR V3, [X8 + 0x128]
	0x03AC2BC0 LDR V7, [X8 + 0x160]
	0x03AC2BC4 LDR X8, [X9 + 0x908]
	0x03AC2BC8 LDR X3, [X9 + 0x910]
	0x03AC2BCC STR S0, [X31 + 0x8]
	0x03AC2BD0 LDP S2, S0, [X31 + 0x64]
	0x03AC2BD4 LDR V1, [X31 + 0x60]
	0x03AC2BD8 LDR V6, [X31 + 0x6C]
	0x03AC2BDC ADD X1, X31, 0x1000
	0x03AC2BE0 FMOV S5, W31
	0x03AC2BE4 ADD X1, X1, 0x54
	0x03AC2BE8 MOV X0, X19
	0x03AC2BEC MOV X2, X27
	0x03AC2BF0 STR S15, [X31]
	0x03AC2BF4 BLR X8
	0x03AC2BF8 ADRP X20, 0x696000
	0x03AC2BFC LDR X20, [X20 + 0x3E8]
	0x03AC2C00 LDR X0, [X20]
	0x03AC2C04 LDR W8, [X0 + 0xE0]
	0x03AC2C08 CBNZ W8, 0x3AC2C14
	0x03AC2C0C BL 0x1C16DFC
	0x03AC2C10 LDR X0, [X20]
	0x03AC2C14 ADD X27, X31, 0xF90
	0x03AC2C18 B 0x3AC2230
	0x03AC2C1C LDRB W8, [X19 + 0xF0]
	0x03AC2C20 LDR W9, [X10 + 0x18]
	0x03AC2C24 LDR X11, [X31 + 0xD0]
	0x03AC2C28 FNEG S0, S10
	0x03AC2C2C CMP W8, 0x0
	0x03AC2C30 FCSEL S0, S0, S10, EQ
	0x03AC2C34 CMP W11, W9
	0x03AC2C38 B.CS 0x3AC3264
	0x03AC2C3C MADD X9, X11, X25, X10
	0x03AC2C40 LDR W10, [X31 + 0x2C]
	0x00000000 INVALID
	0x03AC2C48 SBFM W10, W10, 0x0, 0x0
	0x03AC2C4C SUB W10, W10, W21
	0x03AC2C50 ADD W10, W10, W29
	0x03AC2C54 ADD W9, W9, W10
	0x03AC2C58 SUB W22, W9, 0x1
	0x03AC2C5C CMP W22, 0x1
	0x03AC2C60 B.LT 0x3AC2C6C
	0x03AC2C64 LDR V10, [X19 + 0x2DC]
	0x03AC2C68 B 0x3AC2C74
	0x03AC2C6C FMOV S10, 1
	0x03AC2C70 MOVZ W22, 0x1
	0x03AC2C74 LDR W25, [X31 + 0x15C]
	0x03AC2C78 FADD S11, S11, S0
	0x03AC2C7C CMP W25, 0x9
	0x03AC2C80 B.EQ 0x3AC2CC8
	0x03AC2C84 CMP W25, 0xA0
	0x03AC2C88 B.EQ 0x3AC2CDC
	0x03AC2C8C ADRP X8, 0x633000
	0x03AC2C90 LDR X8, [X8 + 0x170]
	0x03AC2C94 LDR X0, [X8]
	0x03AC2C98 LDR W8, [X0 + 0xE0]
	0x03AC2C9C CBNZ W8, 0x3AC2CA4
	0x03AC2CA0 BL 0x1C16DFC
	0x03AC2CA4 MOV W0, W25
	0x03AC2CA8 MOV X1, X31
	0x03AC2CAC BL 0x331BAF4
	0x03AC2CB0 LDRB W8, [X19 + 0xF0]
	0x03AC2CB4 LDR X15, [X31 + 0x58]
	0x03AC2CB8 LDR V3, [X31 + 0x150]
	0x03AC2CBC LDR V4, [X31 + 0x110]
	0x03AC2CC0 LDR V5, [X31 + 0x100]
	0x03AC2CC4 TBZ X0, 0x0, 0x3AC2CDC
	0x03AC2CC8 FMOV S0, 1
	0x03AC2CCC FSUB S0, S0, S10
	0x03AC2CD0 FMUL S0, S11, S0
	0x03AC2CD4 SCVTF S1, W22
	0x03AC2CD8 B 0x3AC2CF8
	0x03AC2CDC LDR W9, [X31 + 0x2C]
	0x03AC2CE0 FMUL S0, S11, S10
	0x03AC2CE4 ORN W9, W31, W9, 0x0
	0x03AC2CE8 AND W9, W9, 0x1
	0x03AC2CEC SUB W9, W21, W9
	0x03AC2CF0 ADD W9, W9, W26
	0x03AC2CF4 SCVTF S1, W9
	0x03AC2CF8 FDIV S0, S0, S1
	0x03AC2CFC CBZ W8, 0x3AC2D14
	0x03AC2D00 LDR V1, [X31 + 0xE0]
	0x03AC2D04 LDR X14, [X31 + 0x140]
	0x03AC2D08 FSUB S1, S1, S0
	0x03AC2D0C STR S1, [X31 + 0xE0]
	0x03AC2D10 B 0x3AC0F10
	0x03AC2D14 LDR V1, [X31 + 0xE0]
	0x03AC2D18 LDR X14, [X31 + 0x140]
	0x03AC2D1C FADD S1, S1, S0
	0x03AC2D20 LDR V0, [X31 + 0xD8]
	0x03AC2D24 STR S1, [X31 + 0xE0]
	0x03AC2D28 MOVI D1, 0x0
	0x03AC2D2C FADD V0.2S, V0.2S, V1.2S
	0x03AC2D30 B 0x3AC0F0C
	0x03AC2D34 LDR X9, [X23]
	0x03AC2D38 CBZ X9, 0x3AC3158
	0x03AC2D3C ADRP X25, 0x696000
	0x03AC2D40 LDR X25, [X25 + 0x348]
	0x03AC2D44 LDR W11, [X31 + 0xC4]
	0x03AC2D48 ADD W10, W20, 0x1
	0x03AC2D4C B 0x3AC2D58
	0x03AC2D50 MOV W11, W31
	0x03AC2D54 MOV W10, W31
	0x03AC2D58 STR W8, [X9 + 0x18]
	0x03AC2D5C CMP W8, 0x1
	0x03AC2D60 LDR W8, [X19 + 0x6A0]
	0x03AC2D64 CCMP W11, 0x0, 0x4, GE
	0x03AC2D68 STR W10, [X9 + 0x2C]
	0x03AC2D6C CSINC W10, W11, W31, NE
	0x03AC2D70 STR W8, [X9 + 0x1C]
	0x03AC2D74 STR W10, [X9 + 0x24]
	0x03AC2D78 LDR W8, [X19 + 0x4B0]
	0x03AC2D7C ADD W8, W8, 0x1
	0x03AC2D80 STR W8, [X9 + 0x30]
	0x03AC2D84 LDR W8, [X19 + 0x318]
	0x03AC2D88 CMP W8, 0xFF
	0x03AC2D8C B.NE 0x3AC0638
	0x03AC2D90 LDR X8, [X19]
	0x03AC2D94 MOV X0, X19
	0x03AC2D98 LDP X9, X1, [X8 + 0x1C8]
	0x03AC2D9C BLR X9
	0x03AC2DA0 TBZ X0, 0x0, 0x3AC0638
	0x03AC2DA4 LDR X8, [X19 + 0x6D8]
	0x03AC2DA8 CBZ X8, 0x3AC2DC0
	0x03AC2DAC LDR X1, [X23]
	0x03AC2DB0 LDR X9, [X8 + 0x18]
	0x03AC2DB4 LDR X0, [X8 + 0x40]
	0x03AC2DB8 LDR X2, [X8 + 0x28]
	0x03AC2DBC BLR X9
	0x03AC2DC0 LDR W8, [X19 + 0x31C]
	0x03AC2DC4 CBZ W8, 0x3AC2E00
	0x03AC2DC8 LDR X8, [X23]
	0x03AC2DCC CBZ X8, 0x3AC3158
	0x03AC2DD0 LDR X20, [X8 + 0x60]
	0x03AC2DD4 CBZ X20, 0x3AC3158
	0x03AC2DD8 LDR X0, [X25]
	0x03AC2DDC LDR W8, [X0 + 0xE0]
	0x03AC2DE0 CBNZ W8, 0x3AC2DE8
	0x03AC2DE4 BL 0x1C16DFC
	0x03AC2DE8 LDR W8, [X20 + 0x18]
	0x03AC2DEC CBZ W8, 0x3AC3264
	0x03AC2DF0 ADD X0, X20, 0x20
	0x03AC2DF4 MOVZ W1, 0x1
	0x03AC2DF8 MOV X2, X31
	0x03AC2DFC BL 0x3B12C2C
	0x03AC2E00 LDR X0, [X19 + 0x3A0]
	0x03AC2E04 CBZ X0, 0x3AC3158
	0x03AC2E08 MOV X1, X31
	0x03AC2E0C BL 0x3C19FC8
	0x03AC2E10 LDR X8, [X19 + 0x368]
	0x03AC2E14 CBZ X8, 0x3AC3158
	0x03AC2E18 LDR X8, [X8 + 0x60]
	0x03AC2E1C CBZ X8, 0x3AC3158
	0x03AC2E20 LDR W9, [X8 + 0x18]
	0x03AC2E24 CBZ W9, 0x3AC3264
	0x03AC2E28 LDR X0, [X19 + 0x3A0]
	0x03AC2E2C CBZ X0, 0x3AC3158
	0x03AC2E30 LDR X1, [X8 + 0x30]
	0x03AC2E34 MOV X2, X31
	0x03AC2E38 BL 0x3C17F08
	0x03AC2E3C LDR X8, [X19 + 0x368]
	0x03AC2E40 CBZ X8, 0x3AC3158
	0x03AC2E44 LDR X8, [X8 + 0x60]
	0x03AC2E48 CBZ X8, 0x3AC3158
	0x03AC2E4C LDR W9, [X8 + 0x18]
	0x03AC2E50 CBZ W9, 0x3AC3264
	0x03AC2E54 LDR X0, [X19 + 0x3A0]
	0x03AC2E58 CBZ X0, 0x3AC3158
	0x03AC2E5C LDR X1, [X8 + 0x48]
	0x03AC2E60 MOV X2, X31
	0x03AC2E64 BL 0x3C1810C
	0x03AC2E68 LDR X8, [X19 + 0x368]
	0x03AC2E6C CBZ X8, 0x3AC3158
	0x03AC2E70 LDR X8, [X8 + 0x60]
	0x03AC2E74 CBZ X8, 0x3AC3158
	0x03AC2E78 LDR W9, [X8 + 0x18]
	0x03AC2E7C CBZ W9, 0x3AC3264
	0x03AC2E80 LDR X0, [X19 + 0x3A0]
	0x03AC2E84 CBZ X0, 0x3AC3158
	0x03AC2E88 LDR X1, [X8 + 0x50]
	0x03AC2E8C MOV X2, X31
	0x03AC2E90 BL 0x3C181B8
	0x03AC2E94 LDR X8, [X19 + 0x368]
	0x03AC2E98 CBZ X8, 0x3AC3158
	0x03AC2E9C LDR X8, [X8 + 0x60]
	0x03AC2EA0 CBZ X8, 0x3AC3158
	0x03AC2EA4 LDR W9, [X8 + 0x18]
	0x03AC2EA8 CBZ W9, 0x3AC3264
	0x03AC2EAC LDR X0, [X19 + 0x3A0]
	0x03AC2EB0 CBZ X0, 0x3AC3158
	0x03AC2EB4 LDR X1, [X8 + 0x58]
	0x03AC2EB8 MOV X2, X31
	0x03AC2EBC BL 0x3C18318
	0x03AC2EC0 LDR X0, [X19 + 0x3A0]
	0x03AC2EC4 CBZ X0, 0x3AC3158
	0x03AC2EC8 MOV X1, X31
	0x03AC2ECC BL 0x3C19CD4
	0x03AC2ED0 LDR X8, [X23]
	0x03AC2ED4 CBZ X8, 0x3AC3158
	0x03AC2ED8 MOV X21, X31
	0x03AC2EDC MOV X22, X31
	0x03AC2EE0 LDRSW X9, [X8 + 0x34]
	0x03AC2EE4 ADD X24, X22, 0x1
	0x03AC2EE8 CMP X24, X9
	0x03AC2EEC B.GE 0x3AC0638
	0x03AC2EF0 LDR X20, [X8 + 0x60]
	0x03AC2EF4 CBZ X20, 0x3AC3158
	0x03AC2EF8 LDR X0, [X25]
	0x03AC2EFC LDR W8, [X0 + 0xE0]
	0x03AC2F00 CBNZ W8, 0x3AC2F08
	0x03AC2F04 BL 0x1C16DFC
	0x03AC2F08 LDR W8, [X20 + 0x18]
	0x03AC2F0C CMP X24, X8
	0x03AC2F10 B.CS 0x3AC3264
	0x03AC2F14 ADD X8, X20, X21
	0x03AC2F18 ADD X0, X8, 0x70
	0x03AC2F1C MOV X1, X31
	0x03AC2F20 BL 0x3B12AF8
	0x03AC2F24 LDR X8, [X19 + 0x708]
	0x03AC2F28 CBZ X8, 0x3AC3158
	0x03AC2F2C LDR W9, [X8 + 0x18]
	0x03AC2F30 CMP X24, X9
	0x03AC2F34 B.CS 0x3AC3264
	0x03AC2F38 ADRP X9, 0x631000
	0x03AC2F3C LDR X9, [X9 + 0x598]
	0x03AC2F40 ADD X8, X8, X22, 0x3, LSL
	0x03AC2F44 LDR X20, [X8 + 0x28]
	0x03AC2F48 LDR X0, [X9]
	0x03AC2F4C LDR W9, [X0 + 0xE0]
	0x03AC2F50 CBNZ W9, 0x3AC2F58
	0x03AC2F54 BL 0x1C16DFC
	0x03AC2F58 MOV X0, X20
	0x03AC2F5C MOV X1, X31
	0x03AC2F60 MOV X2, X31
	0x03AC2F64 BL 0x3C3883C
	0x03AC2F68 TBNZ X0, 0x0, 0x3AC3148
	0x03AC2F6C LDR W8, [X19 + 0x31C]
	0x03AC2F70 CBZ W8, 0x3AC2FB4
	0x03AC2F74 LDR X8, [X23]
	0x03AC2F78 CBZ X8, 0x3AC3158
	0x03AC2F7C LDR X20, [X8 + 0x60]
	0x03AC2F80 CBZ X20, 0x3AC3158
	0x03AC2F84 LDR X0, [X25]
	0x03AC2F88 LDR W8, [X0 + 0xE0]
	0x03AC2F8C CBNZ W8, 0x3AC2F94
	0x03AC2F90 BL 0x1C16DFC
	0x03AC2F94 LDR W8, [X20 + 0x18]
	0x03AC2F98 CMP X24, X8
	0x03AC2F9C B.CS 0x3AC3264
	0x03AC2FA0 ADD X8, X20, X21
	0x03AC2FA4 ADD X0, X8, 0x70
	0x03AC2FA8 MOVZ W1, 0x1
	0x03AC2FAC MOV X2, X31
	0x03AC2FB0 BL 0x3B12C2C
	0x03AC2FB4 LDR X8, [X19 + 0x708]
	0x03AC2FB8 CBZ X8, 0x3AC3158
	0x03AC2FBC LDR W9, [X8 + 0x18]
	0x03AC2FC0 CMP X24, X9
	0x03AC2FC4 B.CS 0x3AC3264
	0x03AC2FC8 ADD X8, X8, X22, 0x3, LSL
	0x03AC2FCC LDR X0, [X8 + 0x28]
	0x03AC2FD0 CBZ X0, 0x3AC3158
	0x03AC2FD4 MOV X1, X31
	0x03AC2FD8 BL 0x3B19A94
	0x03AC2FDC LDR X8, [X23]
	0x03AC2FE0 CBZ X8, 0x3AC3158
	0x03AC2FE4 LDR X8, [X8 + 0x60]
	0x03AC2FE8 CBZ X8, 0x3AC3158
	0x03AC2FEC LDR W9, [X8 + 0x18]
	0x03AC2FF0 CMP X24, X9
	0x03AC2FF4 B.CS 0x3AC3264
	0x03AC2FF8 CBZ X0, 0x3AC3158
	0x03AC2FFC ADD X8, X8, X21
	0x03AC3000 LDR X1, [X8 + 0x80]
	0x03AC3004 MOV X2, X31
	0x03AC3008 BL 0x3C17F08
	0x03AC300C LDR X8, [X19 + 0x708]
	0x03AC3010 CBZ X8, 0x3AC3158
	0x03AC3014 LDR W9, [X8 + 0x18]
	0x03AC3018 CMP X24, X9
	0x03AC301C B.CS 0x3AC3264
	0x03AC3020 ADD X8, X8, X22, 0x3, LSL
	0x03AC3024 LDR X0, [X8 + 0x28]
	0x03AC3028 CBZ X0, 0x3AC3158
	0x03AC302C MOV X1, X31
	0x03AC3030 BL 0x3B19A94
	0x03AC3034 LDR X8, [X23]
	0x03AC3038 CBZ X8, 0x3AC3158
	0x03AC303C LDR X8, [X8 + 0x60]
	0x03AC3040 CBZ X8, 0x3AC3158
	0x03AC3044 LDR W9, [X8 + 0x18]
	0x03AC3048 CMP X24, X9
	0x03AC304C B.CS 0x3AC3264
	0x03AC3050 CBZ X0, 0x3AC3158
	0x03AC3054 ADD X8, X8, X21
	0x03AC3058 LDR X1, [X8 + 0x98]
	0x03AC305C MOV X2, X31
	0x03AC3060 BL 0x3C1810C
	0x03AC3064 LDR X8, [X19 + 0x708]
	0x03AC3068 CBZ X8, 0x3AC3158
	0x03AC306C LDR W9, [X8 + 0x18]
	0x03AC3070 CMP X24, X9
	0x03AC3074 B.CS 0x3AC3264
	0x03AC3078 ADD X8, X8, X22, 0x3, LSL
	0x03AC307C LDR X0, [X8 + 0x28]
	0x03AC3080 CBZ X0, 0x3AC3158
	0x03AC3084 MOV X1, X31
	0x03AC3088 BL 0x3B19A94
	0x03AC308C LDR X8, [X23]
	0x03AC3090 CBZ X8, 0x3AC3158
	0x03AC3094 LDR X8, [X8 + 0x60]
	0x03AC3098 CBZ X8, 0x3AC3158
	0x03AC309C LDR W9, [X8 + 0x18]
	0x03AC30A0 CMP X24, X9
	0x03AC30A4 B.CS 0x3AC3264
	0x03AC30A8 CBZ X0, 0x3AC3158
	0x03AC30AC ADD X8, X8, X21
	0x03AC30B0 LDR X1, [X8 + 0xA0]
	0x03AC30B4 MOV X2, X31
	0x03AC30B8 BL 0x3C181B8
	0x03AC30BC LDR X8, [X19 + 0x708]
	0x03AC30C0 CBZ X8, 0x3AC3158
	0x03AC30C4 LDR W9, [X8 + 0x18]
	0x03AC30C8 CMP X24, X9
	0x03AC30CC B.CS 0x3AC3264
	0x03AC30D0 ADD X8, X8, X22, 0x3, LSL
	0x03AC30D4 LDR X0, [X8 + 0x28]
	0x03AC30D8 CBZ X0, 0x3AC3158
	0x03AC30DC MOV X1, X31
	0x03AC30E0 BL 0x3B19A94
	0x03AC30E4 LDR X8, [X23]
	0x03AC30E8 CBZ X8, 0x3AC3158
	0x03AC30EC LDR X8, [X8 + 0x60]
	0x03AC30F0 CBZ X8, 0x3AC3158
	0x03AC30F4 LDR W9, [X8 + 0x18]
	0x03AC30F8 CMP X24, X9
	0x03AC30FC B.CS 0x3AC3264
	0x03AC3100 CBZ X0, 0x3AC3158
	0x03AC3104 ADD X8, X8, X21
	0x03AC3108 LDR X1, [X8 + 0xA8]
	0x03AC310C MOV X2, X31
	0x03AC3110 BL 0x3C18318
	0x03AC3114 LDR X8, [X19 + 0x708]
	0x03AC3118 CBZ X8, 0x3AC3158
	0x03AC311C LDR W9, [X8 + 0x18]
	0x03AC3120 CMP X24, X9
	0x03AC3124 B.CS 0x3AC3264
	0x03AC3128 ADD X8, X8, X22, 0x3, LSL
	0x03AC312C LDR X0, [X8 + 0x28]
	0x03AC3130 CBZ X0, 0x3AC3158
	0x03AC3134 MOV X1, X31
	0x03AC3138 BL 0x3B19A94
	0x03AC313C CBZ X0, 0x3AC3158
	0x03AC3140 MOV X1, X31
	0x03AC3144 BL 0x3C19CD4
	0x03AC3148 LDR X8, [X23]
	0x03AC314C ADD X22, X22, 0x1
	0x03AC3150 ADD X21, X21, 0x50
	0x03AC3154 CBNZ X8, 0x3AC2EE0
	0x03AC3158 BL 0x1C16F20
	0x03AC315C LDR V2, [X19 + 0x240]
	0x03AC3160 ADRP X8, 0xFFFFFFFFFD027000
	0x03AC3164 LDR V3, [X8 + 0x200]
	0x03AC3168 FMOV S4, 0.5
	0x03AC316C FSUB S2, S1, S2
	0x03AC3170 FMUL S2, S2, S4
	0x03AC3174 FMAXNM S2, S2, S3
	0x03AC3178 STR S1, [X19 + 0x23C]
	0x03AC317C FMOV S3, 20
	0x03AC3180 FSUB S1, S1, S2
	0x03AC3184 FMUL S1, S1, S3
	0x03AC3188 ADRP X8, 0xFFFFFFFFFD027000
	0x03AC318C FADD S1, S1, S4
	0x03AC3190 LDR V2, [X8 + 0x420]
	0x03AC3194 FCVTZS W8, S1
	0x03AC3198 SCVTF S4, W8
	0x03AC319C MOVZ W8, 0x7F800000
	0x03AC31A0 FDIV S3, S4, S3
	0x03AC31A4 FMOV S4, W8
	0x03AC31A8 FCMP S1, S4
	0x03AC31AC FCSEL S1, S2, S3, EQ
	0x03AC31B0 FCMP S1, S0
	0x03AC31B4 FCSEL S0, S1, S0, GT
	0x03AC31B8 B 0x3AC056C
	0x03AC31BC ADRP X8, 0xFFFFFFFFFD027000
	0x03AC31C0 LDR V3, [X8 + 0x2F0]
	0x03AC31C4 LDR V4, [X31 + 0xE8]
	0x03AC31C8 FDIV S1, S11, S1
	0x03AC31CC FCMP S2, 0x0
	0x03AC31D0 FCSEL S1, S1, S11, GT
	0x03AC31D4 FADD S3, S4, S3
	0x03AC31D8 FMUL S3, S12, S3
	0x03AC31DC FSUB S3, S11, S3
	0x03AC31E0 FDIV S1, S3, S1
	0x03AC31E4 FADD S1, S2, S1
	0x03AC31E8 FCMP S1, S0
	0x03AC31EC FCSEL S0, S1, S0, MI
	0x03AC31F0 STR S0, [X19 + 0x2D4]
	0x03AC31F4 B 0x3AC065C
	0x03AC31F8 FCMP S1, 0x0
	0x03AC31FC MOV V2.16B, V11.16B
	0x03AC3200 B.LE 0x3AC3210
	0x03AC3204 FMOV S2, 1
	0x03AC3208 FSUB S2, S2, S1
	0x03AC320C FDIV S2, S11, S2
	0x03AC3210 ADRP X8, 0xFFFFFFFFFD027000
	0x03AC3214 LDR V3, [X8 + 0x2F0]
	0x03AC3218 LDR V4, [X31 + 0xE8]
	0x03AC321C FADD S3, S4, S3
	0x03AC3220 FMUL S3, S12, S3
	0x03AC3224 FSUB S3, S11, S3
	0x03AC3228 FDIV S2, S3, S2
	0x03AC322C FADD S1, S1, S2
	0x03AC3230 B 0x3AC31E8
	0x03AC3234 LDR W8, [X19 + 0x4A8]
	0x03AC3238 LDR V2, [X31 + 0x20]
	0x03AC323C ADD W8, W8, 0x1
	0x03AC3240 FSUB S2, S2, S10
	0x03AC3244 SCVTF S3, W8
	0x03AC3248 FDIV S2, S2, S3
	0x03AC324C LDR V3, [X31 + 0x60]
	0x03AC3250 FDIV S2, S2, S3
	0x03AC3254 FADD S1, S1, S2
	0x03AC3258 FCMP S1, S0
	0x03AC325C FCSEL S0, S1, S0, GT
	0x03AC3260 B 0x3AC0A80
	0x03AC3264 BL 0x1C16F28
	0x03AC3268 STP D15, D14, [X31 - 0xA0]!
	0x03AC326C STP D13, D12, [X31 + 0x10]
	0x03AC3270 STP D11, D10, [X31 + 0x20]
	0x03AC3274 STP D9, D8, [X31 + 0x30]
	0x03AC3278 STP X29, X30, [X31 + 0x40]
	0x03AC327C STP X28, X27, [X31 + 0x50]
	0x03AC3280 STP X26, X25, [X31 + 0x60]
	0x03AC3284 STP X24, X23, [X31 + 0x70]
	0x03AC3288 STP X22, X21, [X31 + 0x80]
	0x03AC328C STP X20, X19, [X31 + 0x90]
	0x03AC3290 SUB X31, X31, 0x1000
	0x03AC3294 SUB X31, X31, 0x400
	0x03AC3298 ADRP X20, 0x91F000
	0x03AC329C ADRP X21, 0x630000
	0x03AC32A0 LDRB W8, [X20 + 0x4A7]
	0x03AC32A4 LDR X21, [X21 + 0x598]
	0x03AC32A8 MOV X19, X0
	0x03AC32AC ADD X27, X31, 0xFA0
	0x03AC32B0 TBNZ X8, 0x0, 0x3AC3484
	0x03AC32B4 ADRP X0, 0x632000
	0x03AC32B8 LDR X0, [X0 + 0x170]
	0x03AC32BC BL 0x1C16CF4
	0x03AC32C0 ADRP X0, 0x630000
	0x03AC32C4 LDR X0, [X0 + 0xA28]
	0x03AC32C8 BL 0x1C16CF4
	0x03AC32CC ADRP X0, 0x695000
	0x03AC32D0 LDR X0, [X0 + 0x318]
	0x03AC32D4 BL 0x1C16CF4
	0x03AC32D8 ADRP X0, 0x695000
	0x03AC32DC LDR X0, [X0 + 0x320]
	0x03AC32E0 BL 0x1C16CF4
	0x03AC32E4 ADRP X0, 0x695000
	0x03AC32E8 LDR X0, [X0 + 0x328]
	0x03AC32EC BL 0x1C16CF4
	0x03AC32F0 ADRP X0, 0x695000
	0x03AC32F4 LDR X0, [X0 + 0x330]
	0x03AC32F8 BL 0x1C16CF4
	0x03AC32FC ADRP X0, 0x630000
	0x03AC3300 LDR X0, [X0 + 0x5A8]
	0x03AC3304 BL 0x1C16CF4
	0x03AC3308 ADRP X0, 0x630000
	0x03AC330C LDR X0, [X0 + 0x598]
	0x03AC3310 BL 0x1C16CF4
	0x03AC3314 ADRP X0, 0x695000
	0x03AC3318 LDR X0, [X0 + 0x338]
	0x03AC331C BL 0x1C16CF4
	0x03AC3320 ADRP X0, 0x695000
	0x03AC3324 LDR X0, [X0 + 0x340]
	0x03AC3328 BL 0x1C16CF4
	0x03AC332C ADRP X0, 0x695000
	0x03AC3330 LDR X0, [X0 + 0x348]
	0x03AC3334 BL 0x1C16CF4
	0x03AC3338 ADRP X0, 0x695000
	0x03AC333C LDR X0, [X0 + 0x350]
	0x03AC3340 BL 0x1C16CF4
	0x03AC3344 ADRP X0, 0x695000
	0x03AC3348 LDR X0, [X0 + 0x358]
	0x03AC334C BL 0x1C16CF4
	0x03AC3350 ADRP X0, 0x695000
	0x03AC3354 LDR X0, [X0 + 0x360]
	0x03AC3358 BL 0x1C16CF4
	0x03AC335C ADRP X0, 0x695000
	0x03AC3360 LDR X0, [X0 + 0x368]
	0x03AC3364 BL 0x1C16CF4
	0x03AC3368 ADRP X0, 0x695000
	0x03AC336C LDR X0, [X0 + 0x370]
	0x03AC3370 BL 0x1C16CF4
	0x03AC3374 ADRP X0, 0x695000
	0x03AC3378 LDR X0, [X0 + 0x378]
	0x03AC337C BL 0x1C16CF4
	0x03AC3380 ADRP X0, 0x695000
	0x03AC3384 LDR X0, [X0 + 0x380]
	0x03AC3388 BL 0x1C16CF4
	0x03AC338C ADRP X0, 0x695000
	0x03AC3390 LDR X0, [X0 + 0x388]
	0x03AC3394 BL 0x1C16CF4
	0x03AC3398 ADRP X0, 0x695000
	0x03AC339C LDR X0, [X0 + 0x390]
	0x03AC33A0 BL 0x1C16CF4
	0x03AC33A4 ADRP X0, 0x695000
	0x03AC33A8 LDR X0, [X0 + 0x398]
	0x03AC33AC BL 0x1C16CF4
	0x03AC33B0 ADRP X0, 0x695000
	0x03AC33B4 LDR X0, [X0 + 0x3A0]
	0x03AC33B8 BL 0x1C16CF4
	0x03AC33BC ADRP X0, 0x695000
	0x03AC33C0 LDR X0, [X0 + 0x3A8]
	0x03AC33C4 BL 0x1C16CF4
	0x03AC33C8 ADRP X0, 0x695000
	0x03AC33CC LDR X0, [X0 + 0x3B0]
	0x03AC33D0 BL 0x1C16CF4
	0x03AC33D4 ADRP X0, 0x695000
	0x03AC33D8 LDR X0, [X0 + 0x3B8]
	0x03AC33DC BL 0x1C16CF4
	0x03AC33E0 ADRP X0, 0x695000
	0x03AC33E4 LDR X0, [X0 + 0x3C0]
	0x03AC33E8 BL 0x1C16CF4
	0x03AC33EC ADRP X0, 0x695000
	0x03AC33F0 LDR X0, [X0 + 0x3C8]
	0x03AC33F4 BL 0x1C16CF4
	0x03AC33F8 ADRP X0, 0x695000
	0x03AC33FC LDR X0, [X0 + 0x3D0]
	0x03AC3400 BL 0x1C16CF4
	0x03AC3404 ADRP X0, 0x695000
	0x03AC3408 LDR X0, [X0 + 0x3D8]
	0x03AC340C BL 0x1C16CF4
	0x03AC3410 ADRP X0, 0x695000
	0x03AC3414 LDR X0, [X0 + 0x3E0]
	0x03AC3418 BL 0x1C16CF4
	0x03AC341C ADRP X0, 0x695000
	0x03AC3420 LDR X0, [X0 + 0x3E8]
	0x03AC3424 BL 0x1C16CF4
	0x03AC3428 ADRP X0, 0x695000
	0x03AC342C LDR X0, [X0 + 0x3F0]
	0x03AC3430 BL 0x1C16CF4
	0x03AC3434 ADRP X0, 0x695000
	0x03AC3438 LDR X0, [X0 + 0x3F8]
	0x03AC343C BL 0x1C16CF4
	0x03AC3440 ADRP X0, 0x695000
	0x03AC3444 LDR X0, [X0 + 0x400]
	0x03AC3448 BL 0x1C16CF4
	0x03AC344C ADRP X0, 0x695000
	0x03AC3450 LDR X0, [X0 + 0x408]
	0x03AC3454 BL 0x1C16CF4
	0x03AC3458 ADRP X0, 0x695000
	0x03AC345C LDR X0, [X0 + 0x410]
	0x03AC3460 BL 0x1C16CF4
	0x03AC3464 ADRP X0, 0x695000
	0x03AC3468 LDR X0, [X0 + 0x418]
	0x03AC346C BL 0x1C16CF4
	0x03AC3470 ADRP X0, 0x695000
	0x03AC3474 LDR X0, [X0 + 0x420]
	0x03AC3478 BL 0x1C16CF4
	0x03AC347C MOVZ W8, 0x1
	0x03AC3480 STRB W8, [X20 + 0x4A7]
	0x03AC3484 ADD X8, X31, 0x75
	0x03AC3488 MOVI V0.2D, 0x0
	0x03AC348C ADD X0, X31, 0xC20
	0x03AC3490 MOVZ W2, 0x378
	0x03AC3494 MOV W1, W31
	0x03AC3498 STR X31, [X31 + 0x1078]
	0x03AC349C STRB W31, [X8 + 0xFFF]
	0x03AC34A0 STR X31, [X31 + 0x1068]
	0x03AC34A4 STR X31, [X31 + 0x1060]
	0x03AC34A8 STR X31, [X31 + 0x1058]
	0x03AC34AC STR X31, [X31 + 0x1050]
	0x03AC34B0 STR X31, [X31 + 0x1048]
	0x03AC34B4 STR X31, [X31 + 0x1038]
	0x03AC34B8 STR X31, [X31 + 0x1030]
	0x03AC34BC STR W31, [X31 + 0x1040]
	0x03AC34C0 STR W31, [X31 + 0x102C]
	0x03AC34C4 STR X31, [X31 + 0xFA8]
	0x03AC34C8 STR X31, [X31 + 0xFA0]
	0x03AC34CC STR W31, [X31 + 0xFB0]
	0x03AC34D0 STP V0, V0, [X27 + 0x60]
	0x03AC34D4 STP V0, V0, [X27 + 0x40]
	0x03AC34D8 STP V0, V0, [X27 + 0x20]
	0x03AC34DC STR X31, [X31 + 0xF98]
	0x03AC34E0 BL 0x3EB1B10
	0x03AC34E4 ADD X0, X31, 0x8A8
	0x03AC34E8 MOVZ W2, 0x378
	0x03AC34EC MOV W1, W31
	0x03AC34F0 BL 0x3EB1B10
	0x03AC34F4 ADD X0, X31, 0x530
	0x03AC34F8 MOVZ W2, 0x378
	0x03AC34FC MOV W1, W31
	0x03AC3500 BL 0x3EB1B10
	0x03AC3504 LDR X0, [X21]
	0x03AC3508 LDR X20, [X19 + 0xF8]
	0x03AC350C LDR W8, [X0 + 0xE0]
	0x03AC3510 CBNZ W8, 0x3AC3518
	0x03AC3514 BL 0x1C16DFC
	0x03AC3518 ADRP X22, 0x630000
	0x03AC351C LDR X22, [X22 + 0xA28]
	0x03AC3520 MOV X0, X20
	0x03AC3524 MOV X1, X31
	0x03AC3528 MOV X2, X31
	0x03AC352C BL 0x3C3883C
	0x03AC3530 TBNZ X0, 0x0, 0x3AC35A4
	0x03AC3534 LDR X0, [X19 + 0xF8]
	0x03AC3538 CBZ X0, 0x3ACA6A8
	0x03AC353C MOV X1, X31
	0x03AC3540 BL 0x3AE1CD0
	0x03AC3544 CBZ X0, 0x3AC35A4
	0x03AC3548 LDR X0, [X19 + 0x368]
	0x03AC354C CBZ X0, 0x3AC3558
	0x03AC3550 MOV X1, X31
	0x03AC3554 BL 0x3B1C1C4
	0x03AC3558 LDR X8, [X19 + 0x478]
	0x03AC355C CBZ X8, 0x3AC3608
	0x03AC3560 LDR X9, [X8 + 0x18]
	0x03AC3564 CBZ X9, 0x3AC3608
	0x03AC3568 CBZ W9, 0x3ACA7B4
	0x03AC356C LDR W8, [X8 + 0x20]
	0x03AC3570 CBZ W8, 0x3AC3608
	0x03AC3574 LDR X2, [X19 + 0xF8]
	0x03AC3578 LDR X4, [X19 + 0x110]
	0x03AC357C STR W31, [X19 + 0x120]
	0x03AC3580 ADRP X29, 0x695000
	0x03AC3584 STR X2, [X19 + 0x100]
	0x03AC3588 STR X4, [X19 + 0x118]
	0x03AC358C LDR X29, [X29 + 0x3E8]
	0x03AC3590 LDR X0, [X29]
	0x03AC3594 LDR W8, [X0 + 0xE0]
	0x03AC3598 CBZ W8, 0x3AC3684
	0x03AC359C MOV W1, W31
	0x03AC35A0 B 0x3AC3694
	0x03AC35A4 ADRP X20, 0x695000
	0x03AC35A8 LDR X20, [X20 + 0x3F8]
	0x03AC35AC MOV X0, X19
	0x03AC35B0 MOV X1, X31
	0x03AC35B4 BL 0x3C385F8
	0x03AC35B8 STR W0, [X31 + 0x104C]
	0x03AC35BC ADD X0, X31, 0x1000
	0x03AC35C0 ADD X0, X0, 0x4C
	0x03AC35C4 MOV X1, X31
	0x03AC35C8 BL 0x337B6E0
	0x03AC35CC LDR X8, [X20]
	0x03AC35D0 MOV X1, X0
	0x03AC35D4 MOV X2, X31
	0x03AC35D8 MOV X0, X8
	0x03AC35DC BL 0x321B938
	0x03AC35E0 LDR X8, [X22]
	0x03AC35E4 MOV X20, X0
	0x03AC35E8 LDR W9, [X8 + 0xE0]
	0x03AC35EC CBNZ W9, 0x3AC35F8
	0x03AC35F0 MOV X0, X8
	0x03AC35F4 BL 0x1C16DFC
	0x03AC35F8 MOV X0, X20
	0x03AC35FC MOV X1, X31
	0x03AC3600 BL 0x3C06A04
	0x03AC3604 B 0x3AC3648
	0x03AC3608 LDR X8, [X19]
	0x03AC360C MOV X0, X19
	0x03AC3610 LDR X9, [X8 + 0x948]
	0x03AC3614 LDR X1, [X8 + 0x950]
	0x03AC3618 BLR X9
	0x03AC361C STR W31, [X19 + 0x3E0]
	0x03AC3620 STR W31, [X19 + 0x3EC]
	0x03AC3624 ADRP X8, 0x695000
	0x03AC3628 LDR X8, [X8 + 0x3F0]
	0x03AC362C LDR X0, [X8]
	0x03AC3630 LDR W8, [X0 + 0xE0]
	0x03AC3634 CBNZ W8, 0x3AC363C
	0x03AC3638 BL 0x1C16DFC
	0x03AC363C MOV X0, X19
	0x03AC3640 MOV X1, X31
	0x03AC3644 BL 0x3ADA254
	0x03AC3648 MOVZ W8, 0x1
	0x03AC364C STRB W8, [X19 + 0x24C]
	0x03AC3650 ADD X31, X31, 0x1000
	0x03AC3654 ADD X31, X31, 0x400
	0x03AC3658 LDP X20, X19, [X31 + 0x90]
	0x03AC365C LDP X22, X21, [X31 + 0x80]
	0x03AC3660 LDP X24, X23, [X31 + 0x70]
	0x03AC3664 LDP X26, X25, [X31 + 0x60]
	0x03AC3668 LDP X28, X27, [X31 + 0x50]
	0x03AC366C LDP X29, X30, [X31 + 0x40]
	0x03AC3670 LDP D9, D8, [X31 + 0x30]
	0x03AC3674 LDP D11, D10, [X31 + 0x20]
	0x03AC3678 LDP D13, D12, [X31 + 0x10]
	0x03AC367C LDP D15, D14, [X31], #0xA0
	0x03AC3680 RET
	0x03AC3684 BL 0x1C16DFC
	0x03AC3688 LDR W1, [X19 + 0x120]
	0x03AC368C LDR X2, [X19 + 0x100]
	0x03AC3690 LDR X4, [X19 + 0x118]
	0x03AC3694 LDR V0, [X19 + 0x618]
	0x03AC3698 MOVI V1.2D, 0x0
	0x03AC369C ADD X0, X31, 0x1B0
	0x03AC36A0 MOV X3, X31
	0x03AC36A4 MOV X5, X31
	0x03AC36A8 STR X31, [X31 + 0x1E0]
	0x03AC36AC STP V1, V1, [X31 + 0x1C0]
	0x03AC36B0 STR V1, [X31 + 0x1B]
	0x03AC36B4 BL 0x3ACB488
	0x03AC36B8 LDR X8, [X29]
	0x03AC36BC ADRP X9, 0x695000
	0x03AC36C0 LDR X9, [X9 + 0x3B0]
	0x03AC36C4 LDP V0, V1, [X31 + 0x1B0]
	0x03AC36C8 LDR X8, [X8 + 0xB8]
	0x03AC36CC LDR V2, [X31 + 0x1D]
	0x03AC36D0 LDR X10, [X31 + 0x1E0]
	0x03AC36D4 LDR X2, [X9]
	0x03AC36D8 ADD X1, X31, 0x1000
	0x03AC36DC ADD X0, X8, 0x10
	0x03AC36E0 ADD X1, X1, 0x80
	0x03AC36E4 STP V0, V1, [X27 + 0xE0]
	0x03AC36E8 STR V2, [X27 + 0x10]
	0x03AC36EC STR X10, [X31 + 0x10B0]
	0x03AC36F0 BL 0x2672734
	0x03AC36F4 LDR X8, [X19 + 0x1B0]
	0x03AC36F8 LDR X20, [X19 + 0x3B8]
	0x03AC36FC STR X8, [X19 + 0x698]
	0x03AC3700 LDR X0, [X21]
	0x03AC3704 LDR W8, [X0 + 0xE0]
	0x03AC3708 CBNZ W8, 0x3AC3710
	0x03AC370C BL 0x1C16DFC
	0x03AC3710 MOV X0, X20
	0x03AC3714 MOV X1, X31
	0x03AC3718 MOV X2, X31
	0x03AC371C BL 0x3C354F8
	0x03AC3720 TBZ X0, 0x0, 0x3AC3734
	0x03AC3724 LDR X0, [X19 + 0x3B8]
	0x03AC3728 CBZ X0, 0x3ACA6A8
	0x03AC372C MOV X1, X31
	0x03AC3730 BL 0x3B16054
	0x03AC3734 LDR X8, [X19 + 0xF8]
	0x03AC3738 CBZ X8, 0x3ACA6A8
	0x03AC373C LDR W20, [X19 + 0x490]
	0x03AC3740 LDR V14, [X19 + 0x1E4]
	0x03AC3744 ADD X0, X8, 0x50
	0x03AC3748 MOV X1, X31
	0x03AC374C BL 0x3C9BF88
	0x03AC3750 LDR X8, [X19 + 0xF8]
	0x03AC3754 CBZ X8, 0x3ACA6A8
	0x03AC3758 MOV W22, W0
	0x03AC375C ADD X0, X8, 0x50
	0x03AC3760 MOV X1, X31
	0x03AC3764 BL 0x3C9BF98
	0x03AC3768 LDR V9, [X19 + 0x1E4]
	0x03AC376C MOVZ W10, 0x3F800000
	0x03AC3770 STR W10, [X19 + 0x404]
	0x03AC3774 ADRP X21, 0x695000
	0x03AC3778 STR S9, [X19 + 0x1E8]
	0x03AC377C LDRB W8, [X19 + 0x305]
	0x03AC3780 LDR X21, [X21 + 0x3D0]
	0x03AC3784 ADRP X9, 0xFFFFFFFFFD027000
	0x03AC3788 LDR V1, [X9 + 0xBC]
	0x03AC378C MOV V15.16B, V0.16B
	0x03AC3790 LDR X1, [X21]
	0x03AC3794 CMP W8, 0x0
	0x03AC3798 FMOV S0, 1
	0x03AC379C FCSEL S13, S1, S0, EQ
	0x03AC37A0 ADD X0, X19, 0x1F0
	0x03AC37A4 MOV V0.16B, V9.16B
	0x03AC37A8 STR S1, [X31 + 0x90]
	0x03AC37AC BL 0x26733E0
	0x03AC37B0 STR W31, [X31 + 0x107C]
	0x03AC37B4 LDR W8, [X19 + 0x258]
	0x03AC37B8 STR W8, [X19 + 0x25C]
	0x03AC37BC TBNZ X8, 0x0, 0x3AC37C8
	0x03AC37C0 LDR W1, [X19 + 0x210]
	0x03AC37C4 B 0x3AC37CC
	0x03AC37C8 MOVZ W1, 0x2BC
	0x03AC37CC STR W1, [X19 + 0x214]
	0x03AC37D0 ADRP X8, 0x695000
	0x03AC37D4 LDR X8, [X8 + 0x3C8]
	0x03AC37D8 ADD X0, X19, 0x218
	0x03AC37DC LDR X2, [X8]
	0x03AC37E0 BL 0x2672150
	0x03AC37E4 ADD X0, X19, 0x260
	0x03AC37E8 MOV X1, X31
	0x03AC37EC BL 0x3B1CF2C
	0x03AC37F0 LDR W1, [X19 + 0x26C]
	0x03AC37F4 ADRP X8, 0x695000
	0x03AC37F8 ADD X0, X19, 0x280
	0x03AC37FC STR W1, [X19 + 0x278]
	0x03AC3800 LDR X8, [X8 + 0x3A0]
	0x03AC3804 LDR X2, [X8]
	0x03AC3808 BL 0x2672150
	0x03AC380C STR W31, [X19 + 0x61C]
	0x03AC3810 ADRP X8, 0x695000
	0x03AC3814 LDR X8, [X8 + 0x370]
	0x03AC3818 ADD X0, X19, 0x620
	0x03AC381C LDR X1, [X8]
	0x03AC3820 BL 0x26733D4
	0x03AC3824 ADRP X8, 0x915000
	0x03AC3828 LDRB W8, [X8 + 0x783]
	0x03AC382C CBNZ W8, 0x3AC3848
	0x03AC3830 ADRP X0, 0x630000
	0x03AC3834 LDR X0, [X0 + 0x5A0]
	0x03AC3838 BL 0x1C16CF4
	0x03AC383C MOVZ W8, 0x1
	0x03AC3840 ADRP X9, 0x915000
	0x03AC3844 STRB W8, [X9 + 0x783]
	0x03AC3848 ADRP X8, 0x630000
	0x03AC384C LDR X8, [X8 + 0x5A0]
	0x03AC3850 LDR V0, [X19 + 0x148]
	0x03AC3854 LDR V1, [X19 + 0x14C]
	0x03AC3858 LDR V2, [X19 + 0x150]
	0x03AC385C LDR X8, [X8]
	0x03AC3860 MOV X0, X31
	0x03AC3864 LDR X8, [X8 + 0xB8]
	0x03AC3868 LDR V4, [X8]
	0x03AC386C LDR V3, [X8 + 0x4]
	0x03AC3870 STP S4, S3, [X31 + 0xC0]
	0x03AC3874 LDR V3, [X8 + 0x8]
	0x03AC3878 STR S3, [X31 + 0xAC]
	0x03AC387C LDR V3, [X19 + 0x154]
	0x03AC3880 BL 0x1E43664
	0x03AC3884 STR W0, [X19 + 0x144]
	0x03AC3888 STR W0, [X19 + 0x4EC]
	0x03AC388C STR W0, [X19 + 0x158]
	0x03AC3890 STR W0, [X19 + 0x15C]
	0x03AC3894 ADRP X23, 0x695000
	0x03AC3898 LDR X23, [X23 + 0x3A8]
	0x03AC389C ADD X8, X19, 0x4F0
	0x03AC38A0 AND X1, X0, 0x0
	0x03AC38A4 MOV X0, X8
	0x03AC38A8 LDR X2, [X23]
	0x03AC38AC BL 0x2670FAC
	0x03AC38B0 LDR W1, [X19 + 0x4EC]
	0x03AC38B4 LDR X2, [X23]
	0x03AC38B8 ADD X0, X19, 0x510
	0x03AC38BC BL 0x2670FAC
	0x03AC38C0 LDR W1, [X19 + 0x4EC]
	0x03AC38C4 LDR X2, [X23]
	0x03AC38C8 ADD X0, X19, 0x530
	0x03AC38CC BL 0x2670FAC
	0x03AC38D0 ADRP X8, 0x695000
	0x03AC38D4 LDR X8, [X8 + 0x350]
	0x03AC38D8 LDR W23, [X19 + 0x4EC]
	0x03AC38DC LDR X0, [X8]
	0x03AC38E0 LDR W8, [X0 + 0xE0]
	0x03AC38E4 CBNZ W8, 0x3AC38EC
	0x03AC38E8 BL 0x1C16DFC
	0x03AC38EC ADRP X24, 0x91F000
	0x03AC38F0 LDRB W8, [X24 + 0x4A6]
	0x03AC38F4 ADD X9, X19, 0x550
	0x03AC38F8 STR X9, [X31 + 0xD0]
	0x03AC38FC CBNZ W8, 0x3AC3914
	0x03AC3900 ADRP X0, 0x695000
	0x03AC3904 LDR X0, [X0 + 0x350]
	0x03AC3908 BL 0x1C16CF4
	0x03AC390C MOVZ W8, 0x1
	0x03AC3910 STRB W8, [X24 + 0x4A6]
	0x03AC3914 ADRP X24, 0x695000
	0x03AC3918 LDR X24, [X24 + 0x350]
	0x03AC391C LDR X0, [X24]
	0x03AC3920 LDR W8, [X0 + 0xE0]
	0x03AC3924 CBNZ W8, 0x3AC3930
	0x03AC3928 BL 0x1C16DFC
	0x03AC392C LDR X0, [X24]
	0x03AC3930 LDR X8, [X0 + 0xB8]
	0x03AC3934 ADD X0, X31, 0x1B0
	0x03AC3938 MOV X1, X23
	0x03AC393C MOV X2, X31
	0x03AC3940 LDP S0, S1, [X8]
	0x03AC3944 LDP S2, S3, [X8 + 0x8]
	0x03AC3948 STP X31, X31, [X31 + 0x1B0]
	0x03AC394C STR W31, [X31 + 0x1C0]
	0x03AC3950 BL 0x3ADBDE8
	0x03AC3954 ADRP X8, 0x695000
	0x03AC3958 LDR X8, [X8 + 0x398]
	0x03AC395C LDR V0, [X31 + 0x1B]
	0x03AC3960 LDR W9, [X31 + 0x1C0]
	0x03AC3964 LDR X0, [X31 + 0xD0]
	0x03AC3968 LDR X2, [X8]
	0x03AC396C ADD X1, X31, 0x1000
	0x03AC3970 ADD X1, X1, 0x80
	0x03AC3974 STR V0, [X27 + 0xE]
	0x03AC3978 STR W9, [X31 + 0x1090]
	0x03AC397C BL 0x267154C
	0x03AC3980 STR X31, [X19 + 0x580]
	0x03AC3984 ADRP X8, 0x695000
	0x03AC3988 LDR X8, [X8 + 0x3C0]
	0x03AC398C ADD X0, X19, 0x588
	0x03AC3990 MOV X1, X31
	0x03AC3994 LDR X2, [X8]
	0x03AC3998 BL 0x2672E94
	0x03AC399C LDR X8, [X19 + 0x100]
	0x03AC39A0 CBZ X8, 0x3ACA6A8
	0x03AC39A4 LDRB W1, [X8 + 0x1B8]
	0x03AC39A8 ADRP X8, 0x695000
	0x03AC39AC ADD X0, X19, 0x5D0
	0x03AC39B0 STR W1, [X19 + 0x5F0]
	0x03AC39B4 LDR X8, [X8 + 0x3B8]
	0x03AC39B8 LDR X2, [X8]
	0x03AC39BC BL 0x2671C04
	0x03AC39C0 ADRP X8, 0x695000
	0x03AC39C4 LDR X8, [X8 + 0x380]
	0x03AC39C8 ADD X0, X19, 0x5F8
	0x03AC39CC LDR X1, [X8]
	0x03AC39D0 BL 0x2671BF8
	0x03AC39D4 LDR X8, [X19 + 0x100]
	0x03AC39D8 MOVZ W9, 0xFE00
	0x03AC39DC MOVK W9, 0xC6FF0000
	0x03AC39E0 STRB W31, [X19 + 0x474]
	0x03AC39E4 STR W31, [X19 + 0x4D8]
	0x03AC39E8 STR W9, [X19 + 0x2C0]
	0x03AC39EC CBZ X8, 0x3ACA6A8
	0x03AC39F0 ADD X0, X8, 0x50
	0x03AC39F4 MOV X1, X31
	0x03AC39F8 ADD X23, X19, 0x100
	0x03AC39FC BL 0x3C9BFA8
	0x03AC3A00 LDR X8, [X23]
	0x03AC3A04 CBZ X8, 0x3ACA6A8
	0x03AC3A08 ADD X0, X8, 0x50
	0x03AC3A0C MOV X1, X31
	0x03AC3A10 MOV V10.16B, V0.16B
	0x03AC3A14 BL 0x3C9BFB8
	0x03AC3A18 LDR X8, [X23]
	0x03AC3A1C STR X23, [X31 + 0x160]
	0x03AC3A20 CBZ X8, 0x3ACA6A8
	0x03AC3A24 ADD X0, X8, 0x50
	0x03AC3A28 MOV X1, X31
	0x03AC3A2C MOV V11.16B, V0.16B
	0x03AC3A30 ADD X23, X19, 0x2AC
	0x03AC3A34 BL 0x3C9BFF8
	0x03AC3A38 MOVI D8, 0x0
	0x03AC3A3C STR D8, [X23]
	0x03AC3A40 STR W31, [X19 + 0x640]
	0x03AC3A44 STR D8, [X19 + 0x408]
	0x03AC3A48 LDR X1, [X21]
	0x03AC3A4C MOV V12.16B, V0.16B
	0x03AC3A50 ADD X0, X19, 0x410
	0x03AC3A54 FMOV S0, W31
	0x03AC3A58 BL 0x26733E0
	0x03AC3A5C LDR W8, [X19 + 0x324]
	0x03AC3A60 STRB W31, [X19 + 0x430]
	0x03AC3A64 STR W31, [X19 + 0x494]
	0x03AC3A68 STR S9, [X31 + 0x170]
	0x03AC3A6C STR W8, [X19 + 0x498]
	0x03AC3A70 STR X31, [X23 + 0x1F0]
	0x03AC3A74 STR W31, [X19 + 0x4A4]
	0x03AC3A78 LDR X0, [X29]
	0x03AC3A7C LDR W8, [X0 + 0xE0]
	0x03AC3A80 CBNZ W8, 0x3AC3A8C
	0x03AC3A84 BL 0x1C16DFC
	0x03AC3A88 LDR X0, [X29]
	0x03AC3A8C LDR X8, [X0 + 0xB8]
	0x03AC3A90 LDR X0, [X19 + 0x368]
	0x03AC3A94 MOVI V0.2D, 0x0
	0x03AC3A98 MOVN W9, 0x0
	0x03AC3A9C LDR V1, [X8 + 0x15A8]
	0x03AC3AA0 STR D0, [X19 + 0x4A8]
	0x03AC3AA4 STR D8, [X19 + 0x4D0]
	0x03AC3AA8 STRB W31, [X19 + 0x2C4]
	0x03AC3AAC UNIMPLEMENTED
	0x03AC3AB0 STR W9, [X19 + 0x2E4]
	0x03AC3AB4 STR D0, [X19 + 0x4C8]
	0x03AC3AB8 STR W31, [X19 + 0x4B0]
	0x03AC3ABC CBZ X0, 0x3ACA6A8
	0x03AC3AC0 LDR X8, [X0 + 0x58]
	0x03AC3AC4 CBZ X8, 0x3ACA6A8
	0x03AC3AC8 LDR W9, [X19 + 0x338]
	0x03AC3ACC LDR W8, [X8 + 0x18]
	0x03AC3AD0 MOV X1, X31
	0x03AC3AD4 MOV V9.16B, V13.16B
	0x03AC3AD8 SUB W9, W9, 0x1
	0x03AC3ADC SUB W8, W8, 0x1
	0x03AC3AE0 CMP W9, W8
	0x03AC3AE4 CSEL W8, W8, W9, GT
	0x03AC3AE8 CMP W9, 0x0
	0x03AC3AEC CSEL W8, W31, W8, LT
	0x03AC3AF0 MOV V13.16B, V15.16B
	0x03AC3AF4 STR W8, [X31 + 0x50]
	0x03AC3AF8 BL 0x3B1C7A0
	0x03AC3AFC LDR V0, [X19 + 0x340]
	0x03AC3B00 MOVZ W8, 0xBF800000
	0x03AC3B04 STR W8, [X19 + 0x360]
	0x03AC3B08 LDR V1, [X19 + 0x344]
	0x03AC3B0C STR S0, [X31 + 0x30]
	0x03AC3B10 MOVI D0, 0x0
	0x03AC3B14 STR D0, [X19 + 0x350]
	0x03AC3B18 LDR X0, [X29]
	0x03AC3B1C LDR V0, [X19 + 0x34C]
	0x03AC3B20 LDR V15, [X19 + 0x358]
	0x03AC3B24 LDR V8, [X19 + 0x35C]
	0x03AC3B28 LDR W8, [X0 + 0xE0]
	0x03AC3B2C STP S1, S0, [X31 + 0x24]
	0x03AC3B30 CBNZ W8, 0x3AC3B3C
	0x03AC3B34 BL 0x1C16DFC
	0x03AC3B38 LDR X0, [X29]
	0x03AC3B3C LDR X8, [X0 + 0xB8]
	0x03AC3B40 LDR X8, [X8 + 0x1598]
	0x03AC3B44 STR X8, [X23 + 0x230]
	0x03AC3B48 LDR X8, [X0 + 0xB8]
	0x03AC3B4C LDR X8, [X8 + 0x15A0]
	0x03AC3B50 STR X8, [X23 + 0x238]
	0x03AC3B54 LDR X0, [X19 + 0x368]
	0x03AC3B58 CBZ X0, 0x3ACA6A8
	0x03AC3B5C MOV X1, X31
	0x03AC3B60 BL 0x3B1C620
	0x03AC3B64 ADD X0, X31, 0x1000
	0x03AC3B68 MOVI D0, 0x0
	0x03AC3B6C ADD X8, X31, 0x75
	0x03AC3B70 ADD X0, X0, 0x68
	0x03AC3B74 MOVN W1, 0x0
	0x03AC3B78 MOV W2, W31
	0x03AC3B7C MOV X3, X31
	0x03AC3B80 STR W31, [X19 + 0x4BC]
	0x03AC3B84 STR W31, [X19 + 0x4C4]
	0x03AC3B88 STR X23, [X31 + 0x80]
	0x03AC3B8C STR D0, [X23 + 0x208]
	0x03AC3B90 STR W31, [X31 + 0x1078]
	0x03AC3B94 STRB W31, [X8 + 0xFFF]
	0x03AC3B98 STRB W31, [X19 + 0x33C]
	0x03AC3B9C STRB W31, [X19 + 0x2DA]
	0x03AC3BA0 BL 0x3B1BAD0
	0x03AC3BA4 LDR X8, [X29]
	0x03AC3BA8 MOVN W2, 0x0
	0x03AC3BAC MOVN W3, 0x0
	0x03AC3BB0 MOV X0, X19
	0x03AC3BB4 LDR X8, [X8 + 0xB8]
	0x03AC3BB8 MOV X4, X31
	0x03AC3BBC ADD X1, X8, 0x98
	0x03AC3BC0 BL 0x3B05DB4
	0x03AC3BC4 LDR X8, [X29]
	0x03AC3BC8 MOVN W2, 0x0
	0x03AC3BCC MOVN W3, 0x0
	0x03AC3BD0 MOV X0, X19
	0x03AC3BD4 LDR X8, [X8 + 0xB8]
	0x03AC3BD8 MOV X4, X31
	0x03AC3BDC ADD X1, X8, 0x410
	0x03AC3BE0 BL 0x3B05DB4
	0x03AC3BE4 LDR X8, [X29]
	0x03AC3BE8 MOVN W2, 0x0
	0x03AC3BEC MOVN W3, 0x0
	0x03AC3BF0 MOV X0, X19
	0x03AC3BF4 LDR X8, [X8 + 0xB8]
	0x03AC3BF8 MOV X4, X31
	0x03AC3BFC ADD X1, X8, 0x788
	0x03AC3C00 BL 0x3B05DB4
	0x03AC3C04 LDR X8, [X29]
	0x03AC3C08 MOVN W2, 0x0
	0x03AC3C0C MOVN W3, 0x0
	0x03AC3C10 MOV X0, X19
	0x03AC3C14 LDR X8, [X8 + 0xB8]
	0x03AC3C18 MOV X4, X31
	0x03AC3C1C ADD X1, X8, 0xB00
	0x03AC3C20 BL 0x3B05DB4
	0x03AC3C24 LDR X8, [X29]
	0x03AC3C28 MOVN W2, 0x0
	0x03AC3C2C MOVN W3, 0x0
	0x03AC3C30 MOV X0, X19
	0x03AC3C34 LDR X8, [X8 + 0xB8]
	0x03AC3C38 MOV X4, X31
	0x03AC3C3C ADD X1, X8, 0xE78
	0x03AC3C40 BL 0x3B05DB4
	0x03AC3C44 LDR X8, [X29]
	0x03AC3C48 ADRP X9, 0x695000
	0x03AC3C4C LDR X8, [X8 + 0xB8]
	0x03AC3C50 LDR X9, [X9 + 0x378]
	0x03AC3C54 LDR X1, [X9]
	0x03AC3C58 MOVZ W9, 0x11F0
	0x03AC3C5C ADD X0, X8, X9
	0x03AC3C60 BL 0x26739A8
	0x03AC3C64 STR W31, [X31 + 0x1048]
	0x03AC3C68 LDR X8, [X19 + 0x478]
	0x03AC3C6C CBZ X8, 0x3ACA6A8
	0x03AC3C70 LDR X12, [X31 + 0x80]
	0x03AC3C74 ADD X13, X19, 0x1E4
	0x03AC3C78 SCVTF S1, W22
	0x03AC3C7C FSUB S2, S11, S12
	0x03AC3C80 ADD X23, X12, 0x1E8
	0x03AC3C84 ADD X12, X19, 0x350
	0x03AC3C88 STR X12, [X31 + 0xB0]
	0x03AC3C8C ADD X12, X19, 0x354
	0x03AC3C90 STR X12, [X31 + 0xA0]
	0x03AC3C94 SUB W12, W20, 0x1
	0x03AC3C98 STR W12, [X31 + 0x88]
	0x03AC3C9C ADD X12, X19, 0x434
	0x03AC3CA0 STR X12, [X31 + 0x78]
	0x03AC3CA4 ADD X12, X19, 0x244
	0x03AC3CA8 STP X12, X13, [X31 + 0x38]
	0x03AC3CAC ADRP X12, 0xFFFFFFFFFD027000
	0x03AC3CB0 LDR V5, [X12 + 0x5C]
	0x03AC3CB4 FMOV S0, W31
	0x03AC3CB8 FDIV S1, S14, S1
	0x03AC3CBC FMAXNM S6, S8, S0
	0x03AC3CC0 STR S5, [X31 + 0x2C]
	0x03AC3CC4 FSUB S5, S10, S2
	0x03AC3CC8 FMOV S2, W31
	0x03AC3CCC STR S2, [X31 + 0x150]
	0x03AC3CD0 FMAXNM S2, S15, S0
	0x03AC3CD4 FMUL S0, S1, S13
	0x03AC3CD8 ADRP X10, 0xFFFFFFFFFD027000
	0x03AC3CDC FMUL S0, S0, S9
	0x03AC3CE0 ADRP X11, 0xFFFFFFFFFD026000
	0x03AC3CE4 LDR V4, [X10 + 0x330]
	0x03AC3CE8 STP S5, S0, [X31 + 0x54]
	0x03AC3CEC FMUL S1, S0, S5
	0x03AC3CF0 MOV V11.16B, V0.16B
	0x03AC3CF4 LDR V0, [X31 + 0x170]
	0x03AC3CF8 LDR V3, [X11 + 0xF28]
	0x03AC3CFC ADD X22, X19, 0x368
	0x03AC3D00 STP S4, S1, [X31 + 0x5C]
	0x03AC3D04 FMUL S0, S0, S4
	0x03AC3D08 FADD S1, S2, S3
	0x03AC3D0C FADD S2, S6, S3
	0x03AC3D10 FMUL S0, S0, S9
	0x03AC3D14 MOVZ W11, 0x1
	0x03AC3D18 MOVZ W10, 0x1
	0x03AC3D1C STR W31, [X31 + 0x34]
	0x03AC3D20 STR W31, [X31 + 0x74]
	0x03AC3D24 STR W31, [X31 + 0x168]
	0x03AC3D28 STR W31, [X31 + 0x4C]
	0x03AC3D2C MOV W9, W31
	0x03AC3D30 MOVZ W21, 0x178
	0x03AC3D34 STR S6, [X31 + 0x20]
	0x03AC3D38 STR S2, [X31 + 0xB8]
	0x03AC3D3C STR S0, [X31 + 0xE0]
	0x03AC3D40 STR S1, [X31 + 0x98]
	0x03AC3D44 STR S1, [X31 + 0xE8]
	0x03AC3D48 STP W11, W10, [X31 + 0x64]
	0x03AC3D4C STR X22, [X31 + 0x170]
	0x03AC3D50 LDR W10, [X8 + 0x18]
	0x03AC3D54 CMP W9, W10
	0x03AC3D58 B.GE 0x3AC7780
	0x03AC3D5C B.CS 0x3ACA7B4
	0x03AC3D60 MOVZ W10, 0xC
	0x03AC3D64 SMADDL X8, X9, X10, X8
	0x03AC3D68 LDR W8, [X8 + 0x20]
	0x03AC3D6C CBZ W8, 0x3AC7780
	0x03AC3D70 LDR W9, [X31 + 0x168]
	0x03AC3D74 STR W8, [X31 + 0x107C]
	0x03AC3D78 CMP W9, 0x6
	0x03AC3D7C B.LT 0x3AC3E10
	0x03AC3D80 ADD X0, X31, 0x1000
	0x03AC3D84 ADD X0, X0, 0x7C
	0x03AC3D88 MOV X1, X31
	0x03AC3D8C BL 0x337B6E0
	0x03AC3D90 MOV X25, X0
	0x03AC3D94 ADD X0, X31, 0x1000
	0x03AC3D98 ADD X0, X0, 0x48
	0x03AC3D9C MOV X1, X31
	0x03AC3DA0 BL 0x337B6E0
	0x03AC3DA4 ADRP X8, 0x695000
	0x03AC3DA8 LDR X8, [X8 + 0x400]
	0x03AC3DAC ADRP X9, 0x695000
	0x03AC3DB0 MOV X3, X0
	0x03AC3DB4 MOV X1, X25
	0x03AC3DB8 LDR X8, [X8]
	0x03AC3DBC LDR X9, [X9 + 0x410]
	0x03AC3DC0 MOV X4, X31
	0x03AC3DC4 MOV X0, X8
	0x03AC3DC8 LDR X2, [X9]
	0x03AC3DCC BL 0x32277C4
	0x03AC3DD0 ADRP X8, 0x630000
	0x03AC3DD4 LDR X8, [X8 + 0xA28]
	0x03AC3DD8 MOV X25, X0
	0x03AC3DDC LDR X8, [X8]
	0x03AC3DE0 LDR W9, [X8 + 0xE0]
	0x03AC3DE4 CBNZ W9, 0x3AC3DF0
	0x03AC3DE8 MOV X0, X8
	0x03AC3DEC BL 0x1C16DFC
	0x03AC3DF0 MOV X0, X25
	0x03AC3DF4 MOV X1, X31
	0x03AC3DF8 BL 0x3C0649C
	0x03AC3DFC LDR W9, [X23]
	0x03AC3E00 LDR W8, [X31 + 0x107C]
	0x03AC3E04 STR W9, [X31 + 0x1068]
	0x03AC3E08 MOVZ W9, 0x3
	0x03AC3E0C STR W9, [X31 + 0x106C]
	0x03AC3E10 LDRB W9, [X19 + 0x302]
	0x03AC3E14 CBZ W9, 0x3AC3E64
	0x03AC3E18 CMP W8, 0x3C
	0x03AC3E1C B.NE 0x3AC3E64
	0x03AC3E20 MOVZ W8, 0x1
	0x03AC3E24 STRB W8, [X19 + 0x431]
	0x03AC3E28 STR W31, [X19 + 0x644]
	0x03AC3E2C LDR W8, [X31 + 0x1048]
	0x03AC3E30 LDR X1, [X19 + 0x478]
	0x03AC3E34 ADD X3, X31, 0x1000
	0x03AC3E38 ADD X3, X3, 0x2C
	0x03AC3E3C ADD W2, W8, 0x1
	0x03AC3E40 MOV X0, X19
	0x03AC3E44 MOV X4, X31
	0x03AC3E48 BL 0x3AFFFE4
	0x03AC3E4C TBZ X0, 0x0, 0x3AC3EA0
	0x03AC3E50 LDR W8, [X31 + 0x102C]
	0x03AC3E54 STR W8, [X31 + 0x1048]
	0x03AC3E58 LDR W8, [X19 + 0x644]
	0x03AC3E5C CBNZ W8, 0x3AC3EA0
	0x03AC3E60 B 0x3AC3FF4
	0x03AC3E64 LDR X8, [X22]
	0x03AC3E68 CBZ X8, 0x3ACA6A8
	0x03AC3E6C LDR X8, [X8 + 0x38]
	0x03AC3E70 CBZ X8, 0x3ACA6A8
	0x03AC3E74 LDRSW X9, [X23]
	0x03AC3E78 LDR W10, [X8 + 0x18]
	0x03AC3E7C CMP W9, W10
	0x03AC3E80 B.CS 0x3ACA7B4
	0x03AC3E84 MADD X8, X9, X21, X8
	0x03AC3E88 LDR W9, [X8 + 0x2C]
	0x03AC3E8C STR W9, [X19 + 0x644]
	0x03AC3E90 LDR W9, [X8 + 0x58]
	0x03AC3E94 STR W9, [X19 + 0x120]
	0x03AC3E98 LDR X8, [X8 + 0x38]
	0x03AC3E9C STR X8, [X19 + 0x100]
	0x03AC3EA0 LDR X8, [X19 + 0x368]
	0x03AC3EA4 CBZ X8, 0x3ACA6A8
	0x03AC3EA8 LDR X25, [X8 + 0x38]
	0x03AC3EAC CBZ X25, 0x3ACA6A8
	0x03AC3EB0 LDR W22, [X23]
	0x03AC3EB4 LDR W8, [X25 + 0x18]
	0x03AC3EB8 CMP W22, W8
	0x03AC3EBC B.CS 0x3ACA7B4
	0x03AC3EC0 SXTW X26, W22
	0x03AC3EC4 MADD X8, X26, X21, X25
	0x03AC3EC8 LDRB W24, [X8 + 0x5C]
	0x03AC3ECC STRB W31, [X19 + 0x431]
	0x03AC3ED0 LDR W8, [X31 + 0x1068]
	0x03AC3ED4 LDR W28, [X19 + 0x120]
	0x03AC3ED8 CMP W8, W22
	0x03AC3EDC B.NE 0x3AC3F54
	0x03AC3EE0 LDR W8, [X31 + 0x106C]
	0x03AC3EE4 MOVZ W9, 0x2026
	0x03AC3EE8 MOVZ W20, 0x1
	0x03AC3EEC CMP W8, W9
	0x03AC3EF0 STR W8, [X31 + 0x107C]
	0x03AC3EF4 STR W31, [X19 + 0x644]
	0x03AC3EF8 B.EQ 0x3AC3F5C
	0x03AC3EFC CMP W8, 0x3
	0x03AC3F00 B.NE 0x3AC3F9C
	0x03AC3F04 LDR X8, [X31 + 0x160]
	0x03AC3F08 LDR X0, [X8]
	0x03AC3F0C CBZ X0, 0x3ACA6A8
	0x03AC3F10 MOV X1, X31
	0x03AC3F14 BL 0x3AE1CD0
	0x03AC3F18 CBZ X0, 0x3ACA6A8
	0x03AC3F1C ADRP X8, 0x695000
	0x03AC3F20 LDR X8, [X8 + 0x328]
	0x03AC3F24 MOVZ W1, 0x3
	0x03AC3F28 LDR X2, [X8]
	0x03AC3F2C BL 0x2B0EFBC
	0x03AC3F30 LDR W8, [X25 + 0x18]
	0x03AC3F34 CMP W22, W8
	0x03AC3F38 B.CS 0x3ACA7B4
	0x03AC3F3C MADD X8, X26, X21, X25
	0x03AC3F40 STR X0, [X8 + 0x30]
	0x03AC3F44 LDR W22, [X19 + 0x494]
	0x03AC3F48 MOVZ W20, 0x1
	0x03AC3F4C STRB W20, [X19 + 0x2F8]
	0x03AC3F50 B 0x3AC3F9C
	0x03AC3F54 MOV W20, W31
	0x03AC3F58 B 0x3AC3F9C
	0x03AC3F5C LDR X8, [X19 + 0x650]
	0x03AC3F60 NOP
	0x03AC3F64 MADD X9, X26, X21, X25
	0x03AC3F68 STR W31, [X9 + 0x2C]
	0x03AC3F6C ADD W10, W22, 0x1
	0x03AC3F70 STR X8, [X9 + 0x30]
	0x03AC3F74 LDR X8, [X19 + 0x658]
	0x03AC3F78 STR X8, [X9 + 0x38]
	0x03AC3F7C LDR X8, [X19 + 0x660]
	0x03AC3F80 STR X8, [X9 + 0x50]
	0x03AC3F84 LDR W8, [X19 + 0x668]
	0x03AC3F88 STR W8, [X9 + 0x58]
	0x03AC3F8C MOVZ W8, 0x3
	0x03AC3F90 STRB W20, [X19 + 0x2F8]
	0x03AC3F94 STR W10, [X31 + 0x1068]
	0x03AC3F98 STR W8, [X31 + 0x106C]
	0x03AC3F9C LDR W8, [X19 + 0x324]
	0x03AC3FA0 LDR W25, [X31 + 0x107C]
	0x03AC3FA4 CMP W22, W8
	0x03AC3FA8 B.GE 0x3AC4014
	0x03AC3FAC CMP W25, 0x3
	0x03AC3FB0 B.EQ 0x3AC4014
	0x03AC3FB4 LDR X8, [X31 + 0x170]
	0x03AC3FB8 LDR X8, [X8]
	0x03AC3FBC CBZ X8, 0x3ACA6A8
	0x03AC3FC0 LDR X8, [X8 + 0x38]
	0x03AC3FC4 CBZ X8, 0x3ACA6A8
	0x03AC3FC8 LDR W9, [X8 + 0x18]
	0x03AC3FCC CMP W22, W9
	0x03AC3FD0 B.CS 0x3ACA7B4
	0x03AC3FD4 SMADDL X8, X22, X21, X8
	0x03AC3FD8 ADD W9, W22, 0x1
	0x03AC3FDC LDR X22, [X31 + 0x170]
	0x03AC3FE0 MOVZ W10, 0x200B
	0x03AC3FE4 STRB W31, [X8 + 0x194]
	0x03AC3FE8 STRH W10, [X8 + 0x20]
	0x03AC3FEC STR W31, [X8 + 0x64]
	0x03AC3FF0 STR W9, [X23]
	0x03AC3FF4 MOV V13.16B, V11.16B
	0x03AC3FF8 LDR W8, [X31 + 0x1048]
	0x03AC3FFC MOV V11.16B, V13.16B
	0x03AC4000 ADD W9, W8, 0x1
	0x03AC4004 STR W9, [X31 + 0x1048]
	0x03AC4008 LDR X8, [X19 + 0x478]
	0x03AC400C CBNZ X8, 0x3AC3D50
	0x03AC4010 B 0x3ACA6A8
	0x03AC4014 LDR W8, [X19 + 0x644]
	0x03AC4018 CBZ W8, 0x3AC40B4
	0x03AC401C LDR X22, [X31 + 0x170]
	0x03AC4020 FMOV S0, 1
	0x03AC4024 STR S0, [X31 + 0x148]
	0x03AC4028 CBZ W8, 0x3AC43D0
	0x03AC402C CMP W8, 0x1
	0x03AC4030 B.NE 0x3AC4134
	0x03AC4034 LDR X8, [X22]
	0x03AC4038 CBZ X8, 0x3ACA6A8
	0x03AC403C LDR X8, [X8 + 0x38]
	0x03AC4040 CBZ X8, 0x3ACA6A8
	0x03AC4044 LDRSW X9, [X23]
	0x03AC4048 LDR W10, [X8 + 0x18]
	0x03AC404C CMP W9, W10
	0x03AC4050 B.CS 0x3ACA7B4
	0x03AC4054 MADD X8, X9, X21, X8
	0x03AC4058 LDR X0, [X8 + 0x40]
	0x03AC405C STR X0, [X19 + 0x698]
	0x03AC4060 LDR W8, [X8 + 0x48]
	0x03AC4064 STR W8, [X19 + 0x6A4]
	0x03AC4068 CBZ X0, 0x3ACA6A8
	0x03AC406C MOV X1, X31
	0x03AC4070 BL 0x3B16BEC
	0x03AC4074 CBZ X0, 0x3ACA6A8
	0x03AC4078 ADRP X8, 0x694000
	0x03AC407C LDR W1, [X19 + 0x6A4]
	0x03AC4080 LDR X8, [X8 + 0x330]
	0x03AC4084 LDR X2, [X8]
	0x03AC4088 BL 0x301BCCC
	0x03AC408C CBZ X0, 0x3AC3FF4
	0x03AC4090 LDR W8, [X31 + 0x107C]
	0x03AC4094 MOV X25, X0
	0x03AC4098 CMP W8, 0x3C
	0x03AC409C B.NE 0x3AC41CC
	0x03AC40A0 LDR W8, [X19 + 0x6A4]
	0x03AC40A4 LDR X22, [X31 + 0x160]
	0x03AC40A8 ADD W8, W8, 0xE000
	0x03AC40AC STR W8, [X31 + 0x107C]
	0x03AC40B0 B 0x3AC41F0
	0x03AC40B4 LDR W8, [X19 + 0x25C]
	0x03AC40B8 LDR X22, [X31 + 0x170]
	0x03AC40BC TBNZ X8, 0x4, 0x3AC4170
	0x03AC40C0 TBNZ X8, 0x3, 0x3AC4368
	0x03AC40C4 FMOV S0, 1
	0x03AC40C8 STR S0, [X31 + 0x148]
	0x03AC40CC TBZ X8, 0x5, 0x3AC43C8
	0x03AC40D0 ADRP X8, 0x631000
	0x03AC40D4 LDR X8, [X8 + 0x170]
	0x03AC40D8 LDR X0, [X8]
	0x03AC40DC LDR W8, [X0 + 0xE0]
	0x03AC40E0 CBNZ W8, 0x3AC40E8
	0x03AC40E4 BL 0x1C16DFC
	0x03AC40E8 MOV W0, W25
	0x03AC40EC MOV X1, X31
	0x03AC40F0 BL 0x331AA58
	0x03AC40F4 TBZ X0, 0x0, 0x3AC43C8
	0x03AC40F8 ADRP X8, 0x631000
	0x03AC40FC LDR X8, [X8 + 0x170]
	0x03AC4100 LDR W25, [X31 + 0x107C]
	0x03AC4104 LDR X0, [X8]
	0x03AC4108 LDR W8, [X0 + 0xE0]
	0x03AC410C CBNZ W8, 0x3AC4114
	0x03AC4110 BL 0x1C16DFC
	0x03AC4114 MOV W0, W25
	0x03AC4118 MOV X1, X31
	0x03AC411C BL 0x331ACB8
	0x03AC4120 LDR V0, [X31 + 0x2C]
	0x03AC4124 AND W8, W0, 0xFFFF
	0x03AC4128 STR W8, [X31 + 0x107C]
	0x03AC412C STR S0, [X31 + 0x148]
	0x03AC4130 B 0x3AC43C8
	0x03AC4134 LDR W9, [X31 + 0x107C]
	0x03AC4138 LDR X8, [X22]
	0x03AC413C MOVZ W10, 0xAD
	0x03AC4140 FMOV S1, W31
	0x03AC4144 CMP W9, 0x3
	0x03AC4148 CCMP W9, W10, 0x4, NE
	0x03AC414C FMOV S0, W31
	0x03AC4150 FCSEL S13, S1, S11, EQ
	0x03AC4154 STR S0, [X31 + 0x15C]
	0x03AC4158 CBZ X8, 0x3ACA6A8
	0x03AC415C FMOV S0, W31
	0x03AC4160 STR S0, [X31 + 0x110]
	0x03AC4164 FMOV S0, W31
	0x03AC4168 STR S0, [X31 + 0x108]
	0x03AC416C B 0x3AC47B8
	0x03AC4170 ADRP X8, 0x631000
	0x03AC4174 LDR X8, [X8 + 0x170]
	0x03AC4178 LDR X0, [X8]
	0x03AC417C LDR W8, [X0 + 0xE0]
	0x03AC4180 CBNZ W8, 0x3AC4188
	0x03AC4184 BL 0x1C16DFC
	0x03AC4188 MOV W0, W25
	0x03AC418C MOV X1, X31
	0x03AC4190 BL 0x331AA58
	0x03AC4194 FMOV S0, 1
	0x03AC4198 STR S0, [X31 + 0x148]
	0x03AC419C TBZ X0, 0x0, 0x3AC43C8
	0x03AC41A0 ADRP X8, 0x631000
	0x03AC41A4 LDR X8, [X8 + 0x170]
	0x03AC41A8 LDR W25, [X31 + 0x107C]
	0x03AC41AC LDR X0, [X8]
	0x03AC41B0 LDR W8, [X0 + 0xE0]
	0x03AC41B4 CBNZ W8, 0x3AC41BC
	0x03AC41B8 BL 0x1C16DFC
	0x03AC41BC MOV W0, W25
	0x03AC41C0 MOV X1, X31
	0x03AC41C4 BL 0x331ACB8
	0x03AC41C8 B 0x3AC43C0
	0x03AC41CC LDR X0, [X29]
	0x03AC41D0 LDR W8, [X0 + 0xE0]
	0x03AC41D4 CBNZ W8, 0x3AC41E0
	0x03AC41D8 BL 0x1C16DFC
	0x03AC41DC LDR X0, [X29]
	0x03AC41E0 LDR X8, [X0 + 0xB8]
	0x03AC41E4 LDR X22, [X31 + 0x160]
	0x03AC41E8 LDR W8, [X8 + 0x68]
	0x03AC41EC STR W8, [X19 + 0x1BC]
	0x03AC41F0 LDR X8, [X19 + 0x100]
	0x03AC41F4 CBZ X8, 0x3ACA6A8
	0x03AC41F8 LDR V8, [X19 + 0x1E8]
	0x03AC41FC ADD X1, X8, 0x50
	0x03AC4200 ADD X0, X31, 0xFC0
	0x03AC4204 MOVZ W2, 0x60
	0x03AC4208 BL 0x3EB1B30
	0x03AC420C ADD X0, X31, 0xFC0
	0x03AC4210 MOV X1, X31
	0x03AC4214 BL 0x3C9BF88
	0x03AC4218 LDR X8, [X22]
	0x03AC421C CBZ X8, 0x3ACA6A8
	0x03AC4220 MOV W26, W0
	0x03AC4224 ADD X1, X8, 0x50
	0x03AC4228 ADD X0, X31, 0xFC0
	0x03AC422C MOVZ W2, 0x60
	0x03AC4230 BL 0x3EB1B30
	0x03AC4234 ADD X0, X31, 0xFC0
	0x03AC4238 MOV X1, X31
	0x03AC423C BL 0x3C9BF98
	0x03AC4240 LDRB W9, [X19 + 0x305]
	0x03AC4244 LDR V1, [X31 + 0x90]
	0x03AC4248 LDR X8, [X19 + 0x698]
	0x03AC424C FMOV S2, 1
	0x03AC4250 CMP W9, 0x0
	0x03AC4254 FCSEL S1, S1, S2, EQ
	0x03AC4258 CBZ X8, 0x3ACA6A8
	0x03AC425C SCVTF S2, W26
	0x03AC4260 FDIV S2, S8, S2
	0x03AC4264 FMUL S0, S2, S0

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 4096
	022 Subtract X31, X31, 1008
	023 Move X20, 0x926000
	024 Move X21, 0x637000
	025 Move W8, [X20+1189]
	026 Move X21, [X21+1432]
	027 Move X19, X0
	028 Add X27, X31, 3984
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {149}
	033 Move X0, 0x639000
	034 Move X0, [X0+368]
	035 Call 0x1C17CF4
	036 Move X0, 0x637000
	037 Move X0, [X0+2600]
	038 Call 0x1C17CF4
	039 Move X0, 0x69C000
	040 Move X0, [X0+792]
	041 Call 0x1C17CF4
	042 Move X0, 0x69C000
	043 Move X0, [X0+800]
	044 Call 0x1C17CF4
	045 Move X0, 0x69C000
	046 Move X0, [X0+808]
	047 Call 0x1C17CF4
	048 Move X0, 0x69C000
	049 Move X0, [X0+816]
	050 Call 0x1C17CF4
	051 Move X0, 0x637000
	052 Move X0, [X0+1448]
	053 Call 0x1C17CF4
	054 Move X0, 0x637000
	055 Move X0, [X0+1432]
	056 Call 0x1C17CF4
	057 Move X0, 0x69C000
	058 Move X0, [X0+824]
	059 Call 0x1C17CF4
	060 Move X0, 0x69C000
	061 Move X0, [X0+832]
	062 Call 0x1C17CF4
	063 Move X0, 0x69C000
	064 Move X0, [X0+840]
	065 Call 0x1C17CF4
	066 Move X0, 0x69C000
	067 Move X0, [X0+848]
	068 Call 0x1C17CF4
	069 Move X0, 0x69C000
	070 Move X0, [X0+856]
	071 Call 0x1C17CF4
	072 Move X0, 0x69C000
	073 Move X0, [X0+864]
	074 Call 0x1C17CF4
	075 Move X0, 0x69C000
	076 Move X0, [X0+872]
	077 Call 0x1C17CF4
	078 Move X0, 0x69C000
	079 Move X0, [X0+880]
	080 Call 0x1C17CF4
	081 Move X0, 0x69C000
	082 Move X0, [X0+888]
	083 Call 0x1C17CF4
	084 Move X0, 0x69C000
	085 Move X0, [X0+896]
	086 Call 0x1C17CF4
	087 Move X0, 0x69C000
	088 Move X0, [X0+904]
	089 Call 0x1C17CF4
	090 Move X0, 0x69C000
	091 Move X0, [X0+912]
	092 Call 0x1C17CF4
	093 Move X0, 0x69C000
	094 Move X0, [X0+920]
	095 Call 0x1C17CF4
	096 Move X0, 0x69C000
	097 Move X0, [X0+928]
	098 Call 0x1C17CF4
	099 Move X0, 0x69C000
	100 Move X0, [X0+936]
	101 Call 0x1C17CF4
	102 Move X0, 0x69C000
	103 Move X0, [X0+944]
	104 Call 0x1C17CF4
	105 Move X0, 0x69C000
	106 Move X0, [X0+952]
	107 Call 0x1C17CF4
	108 Move X0, 0x69C000
	109 Move X0, [X0+960]
	110 Call 0x1C17CF4
	111 Move X0, 0x69C000
	112 Move X0, [X0+968]
	113 Call 0x1C17CF4
	114 Move X0, 0x69C000
	115 Move X0, [X0+976]
	116 Call 0x1C17CF4
	117 Move X0, 0x69C000
	118 Move X0, [X0+984]
	119 Call 0x1C17CF4
	120 Move X0, 0x69C000
	121 Move X0, [X0+992]
	122 Call 0x1C17CF4
	123 Move X0, 0x69C000
	124 Move X0, [X0+1000]
	125 Call 0x1C17CF4
	126 Move X0, 0x69C000
	127 Move X0, [X0+1008]
	128 Call 0x1C17CF4
	129 Move X0, 0x69C000
	130 Move X0, [X0+1016]
	131 Call 0x1C17CF4
	132 Move X0, 0x69C000
	133 Move X0, [X0+1024]
	134 Call 0x1C17CF4
	135 Move X0, 0x69C000
	136 Move X0, [X0+1032]
	137 Call 0x1C17CF4
	138 Move X0, 0x69C000
	139 Move X0, [X0+1040]
	140 Call 0x1C17CF4
	141 Move X0, 0x69C000
	142 Move X0, [X0+1048]
	143 Call 0x1C17CF4
	144 Move X0, 0x69C000
	145 Move X0, [X0+1056]
	146 Call 0x1C17CF4
	147 Move W8, 1
	148 Move [X20+1189], W8
	149 Add X8, X31, 101
	150 NotImplemented "Instruction MOVI not yet implemented."
	151 Add X0, X31, 3088
	152 Move W2, 888
	153 Move W1, W31
	154 Move [X31+4200], X31
	155 Move [X8+4095], W31
	156 Move [X31+4184], X31
	157 Move [X31+4176], X31
	158 Move [X31+4168], X31
	159 Move [X31+4160], X31
	160 Move [X31+4152], X31
	161 Move [X31+4136], X31
	162 Move [X31+4128], X31
	163 Move [X31+4144], W31
	164 Move [X31+4124], W31
	165 Move [X31+3992], X31
	166 Move [X31+3984], X31
	167 Move [X31+4000], W31
	168 Move [X27+96], V0
	169 Move [X27+104], V0
	170 Move [X27+64], V0
	171 Move [X27+72], V0
	172 Move [X27+32], V0
	173 Move [X27+40], V0
	174 Move [X31+3976], X31
	175 Call 0x3EB2B10
	176 Add X0, X31, 2200
	177 Move W2, 888
	178 Move W1, W31
	179 Call 0x3EB2B10
	180 Add X0, X31, 1312
	181 Move W2, 888
	182 Move W1, W31
	183 Call 0x3EB2B10
	184 Move X0, [X21]
	185 Move X20, [X19+248]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X22, 0x637000
	191 Move X22, [X22+2600]
	192 Move X0, X20
	193 Move X1, X31
	194 Move X2, X31
	195 Call Object.op_Equality, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {235}
	200 Move X0, [X19+248]
	201 Compare X0, 0
	202 JumpIfEqual {7639}
	203 Move X1, X31
	204 Call TMP_FontAsset.get_characterLookupTable, X0
	205 Compare X0, 0
	206 JumpIfEqual {235}
	207 Move X0, [X19+872]
	208 Compare X0, 0
	209 JumpIfEqual {212}
	210 Move X1, X31
	211 Call TMP_TextInfo.Clear, X0
	212 Move X8, [X19+1144]
	213 Compare X8, 0
	214 JumpIfEqual {262}
	215 Move X9, [X8+24]
	216 Compare X9, 0
	217 JumpIfEqual {262}
	218 Compare W9, 0
	219 JumpIfEqual {7701}
	220 Move W8, [X8+32]
	221 Compare W8, 0
	222 JumpIfEqual {262}
	223 Move X2, [X19+248]
	224 Move X4, [X19+272]
	225 Move [X19+288], W31
	226 Move X29, 0x69C000
	227 Move [X19+256], X2
	228 Move [X19+280], X4
	229 Move X29, [X29+1000]
	230 Move X0, [X29]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfEqual {282}
	234 Move W1, W31
	235 Move X20, 0x69C000
	236 Move X20, [X20+1016]
	237 Move X0, X19
	238 Move X1, X31
	239 Call Object.GetInstanceID, X0
	240 Move [X31+4156], W0
	241 Add X0, X31, 4096
	242 Add X0, X0, 60
	243 Move X1, X31
	244 Call Int32.ToString, X0
	245 Move X8, [X20]
	246 Move X1, X0
	247 Move X2, X31
	248 Move X0, X8
	249 Call String.Concat, X0, X1
	250 Move X8, [X22]
	251 Move X20, X0
	252 Move W9, [X8+224]
	253 Compare W9, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X8
	256 Call 0x1C17DFC
	257 Move X0, X20
	258 Move X1, X31
	259 Call Debug.LogWarning, X0
	260 Move W8, 1
	261 Move [X19+588], W8
	262 Move X8, [X19]
	263 Move W1, 1
	264 Move X0, X19
	265 Move W20, 1
	266 Move X9, [X8+2392]
	267 Move X2, [X8+2400]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move [X19+992], W31
	270 Move [X19+1004], W31
	271 Move X8, 0x69C000
	272 Move X8, [X8+1008]
	273 Move X0, [X8]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Move X0, X19
	279 Move X1, X31
	280 Call TMPro_EventManager.ON_TEXT_CHANGED, X0
	281 Move [X19+588], W20
	282 Call 0x1C17DFC
	283 Move W1, [X19+288]
	284 Move X2, [X19+256]
	285 Move X4, [X19+280]
	286 Move V0, [X19+1560]
	287 NotImplemented "Instruction MOVI not yet implemented."
	288 Add X0, X31, 416
	289 Move X3, X31
	290 Move X5, X31
	291 Move [X31+464], X31
	292 Move [X31+432], V1
	293 Move [X31+440], V1
	294 Move [X31+26], V1
	295 Call MaterialReference..ctor, X0, X1, X2, X3, X4, V0
	296 Move X8, [X29]
	297 Move X9, 0x69C000
	298 Move X9, [X9+944]
	299 Move V0, [X31+416]
	300 Move V1, [X31+432]
	301 Move X8, [X8+184]
	302 Move V2, [X31+28]
	303 Move X10, [X31+464]
	304 Move X2, [X9]
	305 Add X1, X31, 4096
	306 Add X0, X8, 16
	307 Add X1, X1, 112
	308 Move [X27+224], V0
	309 Move [X27+232], V1
	310 Move [X27+16], V2
	311 Move [X31+4256], X10
	312 Call TMP_TextProcessingStack`1<MaterialReference>.SetDefault, X0, X1
	313 Move X8, [X19+432]
	314 Move X20, [X19+952]
	315 Move [X19+1688], X8
	316 Move X0, [X21]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X20
	322 Move X1, X31
	323 Move X2, X31
	324 Call Object.op_Inequality, X0, X1
	325 Move TEMP, X0
	326 And TEMP, TEMP, 1
	327 Compare TEMP, 1
	328 JumpIfNotEqual {334}
	329 Move X0, [X19+952]
	330 Compare X0, 0
	331 JumpIfEqual {7639}
	332 Move X1, X31
	333 Call TMP_SpriteAnimator.StopAllAnimations, X0
	334 Move X8, [X19+248]
	335 Compare X8, 0
	336 JumpIfEqual {7639}
	337 Move W20, [X19+1168]
	338 Move V14, [X19+484]
	339 Add X0, X8, 80
	340 Move X1, X31
	341 Call FaceInfo.get_pointSize, X0
	342 Move X8, [X19+248]
	343 Compare X8, 0
	344 JumpIfEqual {7639}
	345 Move W22, W0
	346 Add X0, X8, 80
	347 Move X1, X31
	348 Call FaceInfo.get_scale, X0
	349 Move V9, [X19+484]
	350 Move W10, 0x3F800000
	351 Move [X19+1028], W10
	352 Move X21, 0x69C000
	353 Move [X19+488], S9
	354 Move W8, [X19+773]
	355 Move X21, [X21+976]
	356 Move X9, -50143232
	357 Move V1, [X9+188]
	358 Move V15, V0
	359 Move X1, [X21]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move S0, 1
	362 NotImplemented "Instruction FCSEL not yet implemented."
	363 Add X0, X19, 496
	364 Move V0, V9
	365 Move [X31+152], S1
	366 Call TMP_TextProcessingStack`1<Single>.SetDefault, X0, V0
	367 Move [X31+4204], W31
	368 Move W8, [X19+600]
	369 Move [X19+604], W8
	370 Move TEMP, X8
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfEqual {375}
	374 Move W1, [X19+528]
	375 Move W1, 700
	376 Move [X19+532], W1
	377 Move X8, 0x69C000
	378 Move X8, [X8+968]
	379 Add X0, X19, 536
	380 Move X2, [X8]
	381 Call TMP_TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	382 Add X0, X19, 608
	383 Move X1, X31
	384 Call TMP_FontStyleStack.Clear, X0
	385 Move W1, [X19+620]
	386 Move X8, 0x69C000
	387 Add X0, X19, 640
	388 Move [X19+632], W1
	389 Move X8, [X8+928]
	390 Move X2, [X8]
	391 Call TMP_TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	392 Move [X19+1564], W31
	393 Move X8, 0x69C000
	394 Move X8, [X8+880]
	395 Add X0, X19, 1568
	396 Move X1, [X8]
	397 Call TMP_TextProcessingStack`1<Single>.Clear, X0
	398 Move X8, 0x91C000
	399 Move W8, [X8+1923]
	400 Compare W8, 0
	401 JumpIfNotEqual {408}
	402 Move X0, 0x637000
	403 Move X0, [X0+1440]
	404 Call 0x1C17CF4
	405 Move W8, 1
	406 Move X9, 0x91C000
	407 Move [X9+1923], W8
	408 Move X8, 0x637000
	409 Move X8, [X8+1440]
	410 Move V0, [X19+328]
	411 Move V1, [X19+332]
	412 Move V2, [X19+336]
	413 Move X8, [X8]
	414 Move X0, X31
	415 Move X8, [X8+184]
	416 Move V4, [X8]
	417 Move V3, [X8+4]
	418 Move [X31+200], S4
	419 Move [X31+208], S3
	420 Move V3, [X8+8]
	421 Move [X31+184], S3
	422 Move V3, [X19+340]
	423 Call 0x1E44664
	424 Move [X19+324], W0
	425 Move [X19+1260], W0
	426 Move [X19+344], W0
	427 Move [X19+348], W0
	428 Move X23, 0x69C000
	429 Move X23, [X23+936]
	430 Add X8, X19, 1264
	431 And X1, X0, 0
	432 Move X0, X8
	433 Move X2, [X23]
	434 Call 0x2671FAC, X0, X1
	435 Move W1, [X19+1260]
	436 Move X2, [X23]
	437 Add X0, X19, 1296
	438 Call 0x2671FAC, X0, X1
	439 Move W1, [X19+1260]
	440 Move X2, [X23]
	441 Add X0, X19, 1328
	442 Call 0x2671FAC, X0, X1
	443 Move X8, 0x69C000
	444 Move X8, [X8+848]
	445 Move W23, [X19+1260]
	446 Move X0, [X8]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move X24, 0x926000
	452 Move W8, [X24+1190]
	453 Add X9, X19, 1360
	454 Move [X31+208], X9
	455 Compare W8, 0
	456 JumpIfNotEqual {462}
	457 Move X0, 0x69C000
	458 Move X0, [X0+848]
	459 Call 0x1C17CF4
	460 Move W8, 1
	461 Move [X24+1190], W8
	462 Move X24, 0x69C000
	463 Move X24, [X24+848]
	464 Move X0, [X24]
	465 Move W8, [X0+224]
	466 Compare W8, 0
	467 JumpIfNotEqual {470}
	468 Call 0x1C17DFC
	469 Move X0, [X24]
	470 Move X8, [X0+184]
	471 Add X0, X31, 416
	472 Move X1, X23
	473 Move X2, X31
	474 Move S0, [X8]
	475 Move S1, [X8+4]
	476 Move S2, [X8+8]
	477 Move S3, [X8+12]
	478 Move [X31+416], X31
	479 Move [X31+424], X31
	480 Move [X31+432], W31
	481 Call HighlightState..ctor, X0, X1, X2
	482 Move X8, 0x69C000
	483 Move X8, [X8+920]
	484 Move V0, [X31+26]
	485 Move W9, [X31+432]
	486 Move X0, [X31+208]
	487 Move X2, [X8]
	488 Add X1, X31, 4096
	489 Add X1, X1, 112
	490 Move [X27+14], V0
	491 Move [X31+4224], W9
	492 Call TMP_TextProcessingStack`1<HighlightState>.SetDefault, X0, X1
	493 Move [X19+1408], X31
	494 Move X8, 0x69C000
	495 Move X8, [X8+960]
	496 Add X0, X19, 1416
	497 Move X1, X31
	498 Move X2, [X8]
	499 Call TMP_TextProcessingStack`1<Object>.SetDefault, X0, X1
	500 Move X8, [X19+256]
	501 Compare X8, 0
	502 JumpIfEqual {7639}
	503 Move W1, [X8+440]
	504 Move X8, 0x69C000
	505 Add X0, X19, 1488
	506 Move [X19+1520], W1
	507 Move X8, [X8+952]
	508 Move X2, [X8]
	509 Call TMP_TextProcessingStack`1<Int32>.SetDefault, X0, X1
	510 Move X8, 0x69C000
	511 Move X8, [X8+896]
	512 Add X0, X19, 1528
	513 Move X1, [X8]
	514 Call TMP_TextProcessingStack`1<Int32>.Clear, X0
	515 Move X8, [X19+256]
	516 Move W9, 0xFE00
	517 NotImplemented "Instruction MOVK not yet implemented."
	518 Move [X19+1140], W31
	519 Move [X19+1240], W31
	520 Move [X19+704], W9
	521 Compare X8, 0
	522 JumpIfEqual {7639}
	523 Add X0, X8, 80
	524 Move X1, X31
	525 Add X23, X19, 256
	526 Call FaceInfo.get_lineHeight, X0
	527 Move X8, [X23]
	528 Compare X8, 0
	529 JumpIfEqual {7639}
	530 Add X0, X8, 80
	531 Move X1, X31
	532 Move V10, V0
	533 Call FaceInfo.get_ascentLine, X0
	534 Move X8, [X23]
	535 Move [X31+336], X23
	536 Compare X8, 0
	537 JumpIfEqual {7639}
	538 Add X0, X8, 80
	539 Move X1, X31
	540 Move V11, V0
	541 Add X23, X19, 684
	542 Call FaceInfo.get_descentLine, X0
	543 NotImplemented "Instruction MOVI not yet implemented."
	544 Move [X23], D8
	545 Move [X19+1600], W31
	546 Move [X19+1032], D8
	547 Move X1, [X21]
	548 Move V12, V0
	549 Add X0, X19, 1040
	550 Move S0, W31
	551 Call TMP_TextProcessingStack`1<Single>.SetDefault, X0, V0
	552 Move W8, [X19+804]
	553 Move [X19+1072], W31
	554 Move [X19+1172], W31
	555 Move [X31+352], S9
	556 Move [X19+1176], W8
	557 Move [X23+496], X31
	558 Move [X19+1188], W31
	559 Move X0, [X29]
	560 Move W8, [X0+224]
	561 Compare W8, 0
	562 JumpIfNotEqual {565}
	563 Call 0x1C17DFC
	564 Move X0, [X29]
	565 Move X8, [X0+184]
	566 Move X0, [X19+872]
	567 NotImplemented "Instruction MOVI not yet implemented."
	568 Move TEMP, 0
	569 Not TEMP
	570 Move W9, TEMP
	571 Move V1, [X8+5544]
	572 Move [X19+1192], D0
	573 Move [X19+1232], D8
	574 Move [X19+708], W31
	575 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	576 Move [X19+740], W9
	577 Move [X19+1224], D0
	578 Move [X19+1200], W31
	579 Compare X0, 0
	580 JumpIfEqual {7639}
	581 Move X8, [X0+88]
	582 Compare X8, 0
	583 JumpIfEqual {7639}
	584 Move W9, [X19+824]
	585 Move W8, [X8+24]
	586 Move X1, X31
	587 Move V9, V13
	588 Subtract W9, W9, 1
	589 Subtract W8, W8, 1
	590 NotImplemented "Instruction CMP not yet implemented."
	591 NotImplemented "Instruction CSEL not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Move V13, V15
	594 NotImplemented "Instruction CSEL not yet implemented."
	595 Call TMP_TextInfo.ClearPageInfo, X0
	596 Move V0, [X19+832]
	597 Move W8, 0xBF800000
	598 Move [X19+864], W8
	599 Move V1, [X19+836]
	600 Move [X31+48], S0
	601 NotImplemented "Instruction MOVI not yet implemented."
	602 Move [X19+848], D0
	603 Move X0, [X29]
	604 Move V0, [X19+844]
	605 Move V15, [X19+856]
	606 Move V8, [X19+860]
	607 Move W8, [X0+224]
	608 Move [X31+36], S1
	609 Move [X31+44], S0
	610 Compare W8, 0
	611 JumpIfNotEqual {614}
	612 Call 0x1C17DFC
	613 Move X0, [X29]
	614 Move X8, [X0+184]
	615 Move [X31+68], W21
	616 Move X8, [X8+5528]
	617 Move [X23+560], X8
	618 Move X8, [X0+184]
	619 Move X8, [X8+5536]
	620 Move [X23+568], X8
	621 Move X0, [X19+872]
	622 Compare X0, 0
	623 JumpIfEqual {7639}
	624 Move X1, X31
	625 Call TMP_TextInfo.ClearLineInfo, X0
	626 Add X0, X31, 4096
	627 NotImplemented "Instruction MOVI not yet implemented."
	628 Add X8, X31, 101
	629 Add X0, X0, 88
	630 Move TEMP, 0
	631 Not TEMP
	632 Move W1, TEMP
	633 Move W2, W31
	634 Move X3, X31
	635 Move [X19+1212], W31
	636 Move [X19+1220], W31
	637 Move [X31+136], X23
	638 Move [X23+520], D0
	639 Move [X31+4200], W31
	640 Move [X8+4095], W31
	641 Move [X19+828], W31
	642 Move [X19+730], W31
	643 Call CharacterSubstitution..ctor, X0, X1, X2
	644 Move X8, [X29]
	645 Move TEMP, 0
	646 Not TEMP
	647 Move W2, TEMP
	648 Move TEMP, 0
	649 Not TEMP
	650 Move W3, TEMP
	651 Move X0, X19
	652 Move X8, [X8+184]
	653 Move X4, X31
	654 Add X1, X8, 152
	655 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	656 Move X8, [X29]
	657 Move TEMP, 0
	658 Not TEMP
	659 Move W2, TEMP
	660 Move TEMP, 0
	661 Not TEMP
	662 Move W3, TEMP
	663 Move X0, X19
	664 Move X8, [X8+184]
	665 Move X4, X31
	666 Add X1, X8, 1040
	667 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	668 Move X8, [X29]
	669 Move TEMP, 0
	670 Not TEMP
	671 Move W2, TEMP
	672 Move TEMP, 0
	673 Not TEMP
	674 Move W3, TEMP
	675 Move X0, X19
	676 Move X8, [X8+184]
	677 Move X4, X31
	678 Add X1, X8, 1928
	679 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	680 Move X8, [X29]
	681 Move TEMP, 0
	682 Not TEMP
	683 Move W2, TEMP
	684 Move TEMP, 0
	685 Not TEMP
	686 Move W3, TEMP
	687 Move X0, X19
	688 Move X8, [X8+184]
	689 Move X4, X31
	690 Add X1, X8, 2816
	691 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	692 Move X8, [X29]
	693 Move TEMP, 0
	694 Not TEMP
	695 Move W2, TEMP
	696 Move TEMP, 0
	697 Not TEMP
	698 Move W3, TEMP
	699 Move X0, X19
	700 Move X8, [X8+184]
	701 Move X4, X31
	702 Add X1, X8, 3704
	703 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	704 Move X8, [X29]
	705 Move X9, 0x69C000
	706 Move X8, [X8+184]
	707 Move X9, [X9+888]
	708 Move X1, [X9]
	709 Move W9, 0x11F0
	710 Add X0, X8, X9
	711 Call TMP_TextProcessingStack`1<WordWrapState>.Clear, X0
	712 Move [X31+4152], W31
	713 Move X8, [X19+1144]
	714 Compare X8, 0
	715 JumpIfEqual {7639}
	716 Add X12, X19, 484
	717 Move [X31+72], X12
	718 Move X12, [X31+136]
	719 Add X13, X19, 848
	720 NotImplemented "Instruction SCVTF not yet implemented."
	721 Subtract S2, S11, S12
	722 Add X26, X12, 488
	723 Add X12, X19, 852
	724 Move [X31+168], X12
	725 Move [X31+176], X13
	726 Subtract W12, W20, 1
	727 Move [X31+144], W12
	728 Add X12, X19, 1076
	729 Move [X31+128], X12
	730 Add X12, X19, 580
	731 Move [X31+56], X12
	732 Move X12, -50143232
	733 Move V5, [X12+92]
	734 Move S0, W31
	735 NotImplemented "Instruction FDIV not yet implemented."
	736 NotImplemented "Instruction FMAXNM not yet implemented."
	737 Move [X31+44], S5
	738 Subtract S5, S10, S2
	739 Move S2, W31
	740 Move [X31+320], S2
	741 NotImplemented "Instruction FMAXNM not yet implemented."
	742 Multiply S0, S1, S13
	743 Move X10, -50143232
	744 Multiply S0, S0, S9
	745 Move X11, -50147328
	746 Move V4, [X10+816]
	747 Multiply S1, S0, S5
	748 Move [X31+96], S0
	749 Move V11, V0
	750 Move V0, [X31+352]
	751 Move V3, [X11+3880]
	752 Move [X31+100], S4
	753 Move [X31+108], S1
	754 Move W11, 1
	755 Multiply S0, S0, S4
	756 Add S1, S2, S3
	757 Add S2, S6, S3
	758 Multiply S0, S0, S9
	759 Move W10, 1
	760 Move [X31+52], W31
	761 Move [X31+124], W31
	762 Move [X31+348], W31
	763 Move [X31+84], W31
	764 Move W9, W31
	765 Add X23, X19, 872
	766 Move W28, 376
	767 Move [X31+88], S5
	768 Move [X31+32], S6
	769 Move [X31+188], S2
	770 Move [X31+224], S0
	771 Move [X31+160], S1
	772 Move [X31+232], S1
	773 Move [X31+108], W11
	774 Move [X31+112], W10
	775 Move [X31+352], X26
	776 Move W10, [X8+24]
	777 NotImplemented "Instruction CMP not yet implemented."
	778 Move W10, 12
	779 NotImplemented "Instruction SMADDL not yet implemented."
	780 Move W8, [X8+32]
	781 Compare W8, 0
	782 JumpIfEqual {4663}
	783 Move W9, [X31+348]
	784 Move [X31+4204], W8
	785 NotImplemented "Instruction CMP not yet implemented."
	786 Add X0, X31, 4096
	787 Add X0, X0, 108
	788 Move X1, X31
	789 Call Int32.ToString, X0
	790 Move X25, X0
	791 Add X0, X31, 4096
	792 Add X0, X0, 56
	793 Move X1, X31
	794 Call Int32.ToString, X0
	795 Move X8, 0x69C000
	796 Move X8, [X8+1024]
	797 Move X9, 0x69C000
	798 Move X3, X0
	799 Move X1, X25
	800 Move X8, [X8]
	801 Move X9, [X9+1040]
	802 Move X4, X31
	803 Move X0, X8
	804 Move X2, [X9]
	805 Call String.Concat, X0, X1, X2, X3
	806 Move X8, 0x637000
	807 Move X8, [X8+2600]
	808 Move X25, X0
	809 Move X8, [X8]
	810 Move W9, [X8+224]
	811 Compare W9, 0
	812 JumpIfNotEqual {815}
	813 Move X0, X8
	814 Call 0x1C17DFC
	815 Move X0, X25
	816 Move X1, X31
	817 Call Debug.LogError, X0
	818 Move W9, [X26]
	819 Move W8, [X31+4204]
	820 Move [X31+4184], W9
	821 Move W9, 3
	822 Move [X31+4188], W9
	823 Move W9, [X19+770]
	824 Compare W9, 0
	825 JumpIfEqual {847}
	826 NotImplemented "Instruction CMP not yet implemented."
	827 Move W8, 1
	828 Move [X19+1073], W8
	829 Move [X19+1604], W31
	830 Move W8, [X31+4152]
	831 Move X1, [X19+1144]
	832 Add X3, X31, 4096
	833 Add X3, X3, 28
	834 Add W2, W8, 1
	835 Move X0, X19
	836 Move X4, X31
	837 Call TMP_Text.ValidateHtmlTag, X0, X1, X2, X3
	838 Move TEMP, X0
	839 And TEMP, TEMP, 1
	840 Compare TEMP, 1
	841 JumpIfNotEqual {863}
	842 Move W8, [X31+4124]
	843 Move [X31+4152], W8
	844 Move W8, [X19+1604]
	845 Compare W8, 0
	846 JumpIfNotEqual {863}
	847 Move X8, [X23]
	848 Compare X8, 0
	849 JumpIfEqual {7639}
	850 Move X8, [X8+56]
	851 Compare X8, 0
	852 JumpIfEqual {7639}
	853 NotImplemented "Instruction LDRSW not yet implemented."
	854 Move W10, [X8+24]
	855 NotImplemented "Instruction CMP not yet implemented."
	856 NotImplemented "Instruction MADD not yet implemented."
	857 Move W9, [X8+44]
	858 Move [X19+1604], W9
	859 Move W9, [X8+88]
	860 Move [X19+288], W9
	861 Move X8, [X8+56]
	862 Move [X19+256], X8
	863 Move X8, [X19+872]
	864 Compare X8, 0
	865 JumpIfEqual {7639}
	866 Move X22, [X8+56]
	867 Compare X22, 0
	868 JumpIfEqual {7639}
	869 Move W26, [X26]
	870 Move W8, [X22+24]
	871 NotImplemented "Instruction CMP not yet implemented."
	872 Move X25, W26
	873 NotImplemented "Instruction MADD not yet implemented."
	874 Move W21, [X8+92]
	875 Move [X19+1073], W31
	876 Move W8, [X31+4184]
	877 Move W24, [X19+288]
	878 NotImplemented "Instruction CMP not yet implemented."
	879 Move W8, [X31+4188]
	880 Move W9, 0x2026
	881 Move W20, 1
	882 NotImplemented "Instruction CMP not yet implemented."
	883 Move [X31+4204], W8
	884 Move [X19+1604], W31
	885 NotImplemented "Instruction CMP not yet implemented."
	886 Move X8, [X31+336]
	887 Move X0, [X8]
	888 Compare X0, 0
	889 JumpIfEqual {7639}
	890 Move X1, X31
	891 Call TMP_FontAsset.get_characterLookupTable, X0
	892 Compare X0, 0
	893 JumpIfEqual {7639}
	894 Move X8, 0x69C000
	895 Move X8, [X8+808]
	896 Move W1, 3
	897 Move X2, [X8]
	898 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	899 Move W8, [X22+24]
	900 NotImplemented "Instruction CMP not yet implemented."
	901 NotImplemented "Instruction MADD not yet implemented."
	902 Move [X8+48], X0
	903 Move W26, [X19+1172]
	904 Move W20, 1
	905 Move [X19+760], W20
	906 Move W20, W31
	907 Move X8, [X19+1616]
	908 NotImplemented "Instruction NOP not yet implemented."
	909 NotImplemented "Instruction MADD not yet implemented."
	910 Move [X9+44], W31
	911 Add W10, W26, 1
	912 Move [X9+48], X8
	913 Move X8, [X19+1624]
	914 Move [X9+56], X8
	915 Move X8, [X19+1632]
	916 Move [X9+80], X8
	917 Move W8, [X19+1640]
	918 Move [X9+88], W8
	919 Move W8, 3
	920 Move [X19+760], W20
	921 Move [X31+4184], W10
	922 Move [X31+4188], W8
	923 Move W8, [X19+804]
	924 Move W25, [X31+4204]
	925 NotImplemented "Instruction CMP not yet implemented."
	926 NotImplemented "Instruction CMP not yet implemented."
	927 Move X8, [X23]
	928 Compare X8, 0
	929 JumpIfEqual {7639}
	930 Move X8, [X8+56]
	931 Compare X8, 0
	932 JumpIfEqual {7639}
	933 Move W9, [X8+24]
	934 NotImplemented "Instruction CMP not yet implemented."
	935 NotImplemented "Instruction SMADDL not yet implemented."
	936 Add W9, W26, 1
	937 Move X26, [X31+352]
	938 Move W10, 0x200B
	939 Move [X8+404], W31
	940 NotImplemented "Instruction STRH not yet implemented."
	941 Move [X8+100], W31
	942 Move [X26], W9
	943 Move V13, V11
	944 Move W8, [X31+4152]
	945 Move V11, V13
	946 Add W9, W8, 1
	947 Move [X31+4152], W9
	948 Move X8, [X19+1144]
	949 Compare X8, 0
	950 JumpIfNotEqual {776}
	951 Move W8, [X19+1604]
	952 Compare W8, 0
	953 JumpIfEqual {994}
	954 Move X26, [X31+352]
	955 Move S0, 1
	956 Move [X31+312], S0
	957 Compare W8, 0
	958 JumpIfEqual {1225}
	959 NotImplemented "Instruction CMP not yet implemented."
	960 Move X8, [X23]
	961 Compare X8, 0
	962 JumpIfEqual {7639}
	963 Move X8, [X8+56]
	964 Compare X8, 0
	965 JumpIfEqual {7639}
	966 NotImplemented "Instruction LDRSW not yet implemented."
	967 Move W10, [X8+24]
	968 NotImplemented "Instruction CMP not yet implemented."
	969 NotImplemented "Instruction MADD not yet implemented."
	970 Move X0, [X8+64]
	971 Move [X19+1688], X0
	972 Move W8, [X8+72]
	973 Move [X19+1700], W8
	974 Compare X0, 0
	975 JumpIfEqual {7639}
	976 Move X1, X31
	977 Call TMP_SpriteAsset.get_spriteCharacterTable, X0
	978 Compare X0, 0
	979 JumpIfEqual {7639}
	980 Move X8, 0x69C000
	981 Move W1, [X19+1700]
	982 Move X8, [X8+816]
	983 Move X2, [X8]
	984 Call List`1<Object>.get_Item, X0, X1
	985 Compare X0, 0
	986 JumpIfEqual {943}
	987 Move W8, [X31+4204]
	988 Move X25, X0
	989 NotImplemented "Instruction CMP not yet implemented."
	990 Move W8, [X19+1700]
	991 Move X22, [X31+336]
	992 Add W8, W8, 0xE000
	993 Move [X31+4204], W8
	994 Move W8, [X19+604]
	995 Move X26, [X31+352]
	996 Move TEMP, X8
	997 And TEMP, TEMP, 16
	998 Compare TEMP, 16
	999 JumpIfEqual {1054}
	1000 Move TEMP, X8
	1001 And TEMP, TEMP, 8
	1002 Compare TEMP, 8
	1003 JumpIfEqual {1193}
	1004 Move S0, 1
	1005 Move [X31+312], S0
	1006 Move TEMP, X8
	1007 And TEMP, TEMP, 32
	1008 Compare TEMP, 32
	1009 JumpIfNotEqual {1222}
	1010 Move X8, 0x639000
	1011 Move X8, [X8+368]
	1012 Move X0, [X8]
	1013 Move W8, [X0+224]
	1014 Compare W8, 0
	1015 JumpIfNotEqual {1017}
	1016 Call 0x1C17DFC
	1017 Move W0, W25
	1018 Move X1, X31
	1019 Call Char.IsLower, X0
	1020 Move TEMP, X0
	1021 And TEMP, TEMP, 1
	1022 Compare TEMP, 1
	1023 JumpIfNotEqual {1222}
	1024 Move X8, 0x639000
	1025 Move X8, [X8+368]
	1026 Move W25, [X31+4204]
	1027 Move X0, [X8]
	1028 Move W8, [X0+224]
	1029 Compare W8, 0
	1030 JumpIfNotEqual {1032}
	1031 Call 0x1C17DFC
	1032 Move W0, W25
	1033 Move X1, X31
	1034 Call Char.ToUpper, X0
	1035 Move V0, [X31+44]
	1036 And W8, W0, 0xFFFF
	1037 Move [X31+4204], W8
	1038 Move [X31+312], S0
	1039 Move W9, [X31+4204]
	1040 Move X8, [X23]
	1041 Move W10, 173
	1042 Move S1, W31
	1043 NotImplemented "Instruction CMP not yet implemented."
	1044 NotImplemented "Instruction CCMP not yet implemented."
	1045 Move S0, W31
	1046 NotImplemented "Instruction FCSEL not yet implemented."
	1047 Move [X31+332], S0
	1048 Compare X8, 0
	1049 JumpIfEqual {7639}
	1050 Move S0, W31
	1051 Move [X31+272], S0
	1052 Move S0, W31
	1053 Move [X31+256], S0
	1054 Move X8, 0x639000
	1055 Move X8, [X8+368]
	1056 Move X0, [X8]
	1057 Move W8, [X0+224]
	1058 Compare W8, 0
	1059 JumpIfNotEqual {1061}
	1060 Call 0x1C17DFC
	1061 Move W0, W25
	1062 Move X1, X31
	1063 Call Char.IsLower, X0
	1064 Move S0, 1
	1065 Move [X31+312], S0
	1066 Move TEMP, X0
	1067 And TEMP, TEMP, 1
	1068 Compare TEMP, 1
	1069 JumpIfNotEqual {1222}
	1070 Move X8, 0x639000
	1071 Move X8, [X8+368]
	1072 Move W25, [X31+4204]
	1073 Move X0, [X8]
	1074 Move W8, [X0+224]
	1075 Compare W8, 0
	1076 JumpIfNotEqual {1078}
	1077 Call 0x1C17DFC
	1078 Move W0, W25
	1079 Move X1, X31
	1080 Call Char.ToUpper, X0
	1081 Move X0, [X29]
	1082 Move W8, [X0+224]
	1083 Compare W8, 0
	1084 JumpIfNotEqual {1087}
	1085 Call 0x1C17DFC
	1086 Move X0, [X29]
	1087 Move X8, [X0+184]
	1088 Move X22, [X31+336]
	1089 Move W8, [X8+104]
	1090 Move [X19+444], W8
	1091 Move X8, [X19+256]
	1092 Compare X8, 0
	1093 JumpIfEqual {7639}
	1094 Move V8, [X19+488]
	1095 Add X1, X8, 80
	1096 Add X0, X31, 4016
	1097 Move W2, 96
	1098 Call 0x3EB2B30
	1099 Add X0, X31, 4016
	1100 Move X1, X31
	1101 Call FaceInfo.get_pointSize, X0
	1102 Move X8, [X22]
	1103 Compare X8, 0
	1104 JumpIfEqual {7639}
	1105 Move W26, W0
	1106 Add X1, X8, 80
	1107 Add X0, X31, 4016
	1108 Move W2, 96
	1109 Call 0x3EB2B30
	1110 Add X0, X31, 4016
	1111 Move X1, X31
	1112 Call FaceInfo.get_scale, X0
	1113 Move W9, [X19+773]
	1114 Move V1, [X31+152]
	1115 Move X8, [X19+1688]
	1116 Move S2, 1
	1117 NotImplemented "Instruction CMP not yet implemented."
	1118 NotImplemented "Instruction FCSEL not yet implemented."
	1119 Compare X8, 0
	1120 JumpIfEqual {7639}
	1121 NotImplemented "Instruction SCVTF not yet implemented."
	1122 NotImplemented "Instruction FDIV not yet implemented."
	1123 Multiply S0, S2, S0
	1124 Add X0, X8, 72
	1125 Move X1, X31
	1126 Multiply S15, S0, S1
	1127 Call FaceInfo.get_pointSize, X0
	1128 Move V14, [X19+488]
	1129 NotImplemented "Instruction CMP not yet implemented."
	1130 Move X8, [X19+1688]
	1131 Compare X8, 0
	1132 JumpIfEqual {7639}
	1133 Add X0, X8, 72
	1134 Move X1, X31
	1135 Call FaceInfo.get_pointSize, X0
	1136 Move X8, [X19+1688]
	1137 Compare X8, 0
	1138 JumpIfEqual {7639}
	1139 Move W26, W0
	1140 Add X0, X8, 72
	1141 Move X1, X31
	1142 Call FaceInfo.get_scale, X0
	1143 Move X0, [X25+32]
	1144 Compare X0, 0
	1145 JumpIfEqual {7639}
	1146 Move W8, [X19+773]
	1147 Move V8, V0
	1148 Move V0, [X31+152]
	1149 Move V12, [X25+44]
	1150 NotImplemented "Instruction CMP not yet implemented."
	1151 Move S1, 1
	1152 Move X1, X31
	1153 NotImplemented "Instruction FCSEL not yet implemented."
	1154 Call Glyph.get_scale, X0
	1155 Move X8, [X19+1688]
	1156 Compare X8, 0
	1157 JumpIfEqual {7639}
	1158 Add X0, X8, 72
	1159 Move X1, X31
	1160 Move V9, V0
	1161 Call FaceInfo.get_ascentLine, X0
	1162 Move X8, [X19+1688]
	1163 Move [X31+272], S0
	1164 Compare X8, 0
	1165 JumpIfEqual {7639}
	1166 Add X0, X8, 72
	1167 Move X1, X31
	1168 Call FaceInfo.get_baseline, X0
	1169 Move X8, [X19+1688]
	1170 Compare X8, 0
	1171 JumpIfEqual {7639}
	1172 Move V13, [X19+1028]
	1173 Add X0, X8, 72
	1174 Move X1, X31
	1175 Move V10, V0
	1176 Call FaceInfo.get_scale, X0
	1177 Move X8, [X19+1688]
	1178 Compare X8, 0
	1179 JumpIfEqual {7639}
	1180 NotImplemented "Instruction SCVTF not yet implemented."
	1181 Multiply S3, S15, S10
	1182 NotImplemented "Instruction FDIV not yet implemented."
	1183 Multiply S3, S3, S13
	1184 Multiply S1, S1, S8
	1185 Multiply S0, S3, S0
	1186 Multiply S2, S12, S9
	1187 Move [X31+332], S0
	1188 Multiply S0, S1, S11
	1189 Add X0, X8, 72
	1190 Move X1, X31
	1191 Multiply S11, S0, S2
	1192 Call FaceInfo.get_descentLine, X0
	1193 Move X8, 0x638000
	1194 Move X8, [X8+368]
	1195 Move X0, [X8]
	1196 Move W8, [X0+224]
	1197 Compare W8, 0
	1198 JumpIfNotEqual {1200}
	1199 Call 0x1C17DFC
	1200 Move W0, W25
	1201 Move X1, X31
	1202 Call Char.IsUpper, X0
	1203 Move S0, 1
	1204 Move [X31+312], S0
	1205 Move TEMP, X0
	1206 And TEMP, TEMP, 1
	1207 Compare TEMP, 1
	1208 JumpIfNotEqual {1222}
	1209 Move X8, 0x638000
	1210 Move X8, [X8+368]
	1211 Move W25, [X31+4204]
	1212 Move X0, [X8]
	1213 Move W8, [X0+224]
	1214 Compare W8, 0
	1215 JumpIfNotEqual {1217}
	1216 Call 0x1C17DFC
	1217 Move W0, W25
	1218 Move X1, X31
	1219 Call Char.ToLower, X0
	1220 And W8, W0, 0xFFFF
	1221 Move [X31+4204], W8
	1222 Move W8, [X19+1604]
	1223 Compare W8, 0
	1224 JumpIfNotEqual {959}
	1225 Move X8, [X23]
	1226 Compare X8, 0
	1227 JumpIfEqual {7639}
	1228 Move X8, [X8+56]
	1229 Compare X8, 0
	1230 JumpIfEqual {7639}
	1231 NotImplemented "Instruction LDRSW not yet implemented."
	1232 Move W11, [X8+24]
	1233 NotImplemented "Instruction CMP not yet implemented."
	1234 NotImplemented "Instruction MADD not yet implemented."
	1235 Move X10, [X10+48]
	1236 Move [X19+1608], X10
	1237 Compare X10, 0
	1238 JumpIfEqual {943}
	1239 NotImplemented "Instruction MADD not yet implemented."
	1240 Move X10, [X12+56]
	1241 Move X22, [X31+336]
	1242 Move [X19+256], X10
	1243 Move X13, [X12+80]
	1244 Move [X19+280], X13
	1245 Move W12, [X12+88]
	1246 Move [X19+288], W12
	1247 Compare W20, 0
	1248 JumpIfEqual {1261}
	1249 Move X12, [X19+1144]
	1250 Compare X12, 0
	1251 JumpIfEqual {7639}
	1252 NotImplemented "Instruction LDRSW not yet implemented."
	1253 Move W14, [X12+24]
	1254 NotImplemented "Instruction CMP not yet implemented."
	1255 Move W14, 12
	1256 NotImplemented "Instruction MADD not yet implemented."
	1257 Move W12, [X12+32]
	1258 NotImplemented "Instruction CMP not yet implemented."
	1259 Move W12, [X19+1176]
	1260 NotImplemented "Instruction CMP not yet implemented."
	1261 Compare X10, 0
	1262 JumpIfEqual {7639}
	1263 Move V11, [X19+488]
	1264 Add X0, X10, 80
	1265 Move X1, X31
	1266 Call FaceInfo.get_pointSize, X0
	1267 Move X8, [X19+256]
	1268 Compare X8, 0
	1269 JumpIfEqual {7639}
	1270 Move W25, W0
	1271 Add X0, X8, 80
	1272 Move X1, X31
	1273 Call FaceInfo.get_scale, X0
	1274 Move W8, [X19+773]
	1275 Move V8, V0
	1276 Move W9, [X31+4204]
	1277 Move V0, [X31+152]
	1278 NotImplemented "Instruction CMP not yet implemented."
	1279 Move S1, 1
	1280 Move W8, 0x2026
	1281 NotImplemented "Instruction FCSEL not yet implemented."
	1282 NotImplemented "Instruction CMP not yet implemented."
	1283 NotImplemented "Instruction CSET not yet implemented."
	1284 And W8, W20, W8
	1285 Move S1, W31
	1286 Move S0, W31
	1287 Move [X31+272], S0
	1288 Move TEMP, X8
	1289 And TEMP, TEMP, 1
	1290 Compare TEMP, 1
	1291 JumpIfEqual {1306}
	1292 Move X8, [X22]
	1293 Compare X8, 0
	1294 JumpIfEqual {7639}
	1295 Add X0, X8, 80
	1296 Move X1, X31
	1297 Call FaceInfo.get_ascentLine, X0
	1298 Move X8, [X22]
	1299 Move [X31+272], S0
	1300 Compare X8, 0
	1301 JumpIfEqual {7639}
	1302 Add X0, X8, 80
	1303 Move X1, X31
	1304 Call FaceInfo.get_descentLine, X0
	1305 Move V1, V0
	1306 Move X8, [X19+1608]
	1307 Compare X8, 0
	1308 JumpIfEqual {7639}
	1309 Move X0, [X8+32]
	1310 Move [X31+256], S1
	1311 Compare X0, 0
	1312 JumpIfEqual {7639}
	1313 Move V13, [X19+1028]
	1314 Move V14, [X8+44]
	1315 Move X1, X31
	1316 Call Glyph.get_scale, X0
	1317 Move X8, [X22]
	1318 Compare X8, 0
	1319 JumpIfEqual {7639}
	1320 Add X0, X8, 80
	1321 Move X1, X31
	1322 Move V9, V0
	1323 Call FaceInfo.get_baseline, X0
	1324 Move X8, [X22]
	1325 Compare X8, 0
	1326 JumpIfEqual {7639}
	1327 Move V15, [X19+1028]
	1328 Add X0, X8, 80
	1329 Move X1, X31
	1330 Move V10, V0
	1331 Call FaceInfo.get_scale, X0
	1332 Move X8, [X19+872]
	1333 Compare X8, 0
	1334 JumpIfEqual {7639}
	1335 Move X9, [X8+56]
	1336 Compare X9, 0
	1337 JumpIfEqual {7639}
	1338 NotImplemented "Instruction LDRSW not yet implemented."
	1339 Move W11, [X9+24]
	1340 NotImplemented "Instruction CMP not yet implemented."
	1341 Move V1, [X31+312]
	1342 NotImplemented "Instruction SCVTF not yet implemented."
	1343 NotImplemented "Instruction MADD not yet implemented."
	1344 Move [X9+44], W31
	1345 Multiply S1, S1, S11
	1346 NotImplemented "Instruction FDIV not yet implemented."
	1347 Multiply S1, S1, S8
	1348 Multiply S1, S1, S12
	1349 Multiply S2, S1, S13
	1350 Multiply S2, S2, S14
	1351 Multiply S11, S2, S9
	1352 Move [X9+352], S11
	1353 NotImplemented "Instruction LDRSW not yet implemented."
	1354 Multiply S1, S1, S10
	1355 Multiply S1, S1, S15
	1356 Multiply S0, S1, S0
	1357 Move [X31+332], S0
	1358 Compare W9, 0
	1359 JumpIfEqual {1491}
	1360 Move X10, [X19+1800]
	1361 Compare X10, 0
	1362 JumpIfEqual {7639}
	1363 Move W11, [X10+24]
	1364 NotImplemented "Instruction CMP not yet implemented."
	1365 Add X9, X10, X9
	1366 Move X9, [X9+32]
	1367 Compare X9, 0
	1368 JumpIfEqual {7639}
	1369 Move V0, [X9+84]
	1370 Move X8, [X22]
	1371 Compare X8, 0
	1372 JumpIfEqual {7639}
	1373 Add X0, X8, 80
	1374 Move X1, X31
	1375 Call FaceInfo.get_pointSize, X0
	1376 Move X8, [X22]
	1377 Compare X8, 0
	1378 JumpIfEqual {7639}
	1379 Move W26, W0
	1380 Add X0, X8, 80
	1381 Move X1, X31
	1382 Call FaceInfo.get_scale, X0
	1383 Move W9, [X19+773]
	1384 Move V8, V0
	1385 Move V0, [X31+152]
	1386 Move X8, [X19+256]
	1387 NotImplemented "Instruction CMP not yet implemented."
	1388 Move S1, 1
	1389 NotImplemented "Instruction FCSEL not yet implemented."
	1390 Compare X8, 0
	1391 JumpIfEqual {7639}
	1392 Add X0, X8, 80
	1393 Move X1, X31
	1394 Move [X31+332], S14
	1395 Call FaceInfo.get_ascentLine, X0
	1396 Move X0, [X25+32]
	1397 Compare X0, 0
	1398 JumpIfEqual {7639}
	1399 Add X8, X31, 4096
	1400 Add X8, X8, 112
	1401 Move X1, X31
	1402 Move V12, V0
	1403 Move [X31+320], S15
	1404 Call Glyph.get_metrics, X0
	1405 Move V0, [X27+14]
	1406 Move W8, [X31+4224]
	1407 Add X0, X31, 3984
	1408 Move X1, X31
	1409 Move [X27], V0
	1410 Move [X31+4000], W8
	1411 Call GlyphMetrics.get_height, X0
	1412 Move X0, [X25+32]
	1413 Compare X0, 0
	1414 JumpIfEqual {7639}
	1415 Move V10, [X25+44]
	1416 Move X1, X31
	1417 Move V11, V0
	1418 Call Glyph.get_scale, X0
	1419 Move X8, [X22]
	1420 Compare X8, 0
	1421 JumpIfEqual {7639}
	1422 Add X0, X8, 80
	1423 Move X1, X31
	1424 Move [X31+308], S0
	1425 Call FaceInfo.get_ascentLine, X0
	1426 Move X8, [X22]
	1427 Compare X8, 0
	1428 JumpIfEqual {7639}
	1429 Add X0, X8, 80
	1430 Move X1, X31
	1431 Move V15, V0
	1432 Move V14, V8
	1433 Call FaceInfo.get_baseline, X0
	1434 Move X8, [X22]
	1435 Compare X8, 0
	1436 JumpIfEqual {7639}
	1437 Move V8, [X19+1028]
	1438 Add X0, X8, 80
	1439 Move X1, X31
	1440 Move V13, V0
	1441 Call FaceInfo.get_scale, X0
	1442 Move X8, [X19+256]
	1443 Compare X8, 0
	1444 JumpIfEqual {7639}
	1445 Move V4, [X31+332]
	1446 Move V3, [X31+320]
	1447 NotImplemented "Instruction SCVTF not yet implemented."
	1448 NotImplemented "Instruction FDIV not yet implemented."
	1449 NotImplemented "Instruction FDIV not yet implemented."
	1450 Move V4, [X31+308]
	1451 Multiply S3, S3, S13
	1452 Multiply S3, S3, S8
	1453 Multiply S2, S2, S10
	1454 Multiply S1, S1, S14
	1455 Multiply S0, S3, S0
	1456 Multiply S2, S2, S4
	1457 Move [X31+332], S0
	1458 Multiply S0, S1, S9
	1459 Multiply S11, S0, S2
	1460 NotImplemented "Instruction FDIV not yet implemented."
	1461 Multiply S0, S8, S15
	1462 Add X0, X8, 80
	1463 Move X1, X31
	1464 Move [X31+272], S0
	1465 Call FaceInfo.get_descentLine, X0
	1466 Multiply S0, S8, S0
	1467 Move X8, [X19+872]
	1468 Move X26, [X31+352]
	1469 Move [X19+1608], X25
	1470 Compare X8, 0
	1471 JumpIfEqual {7639}
	1472 Move X9, [X8+56]
	1473 Compare X9, 0
	1474 JumpIfEqual {7639}
	1475 NotImplemented "Instruction LDRSW not yet implemented."
	1476 Move W11, [X9+24]
	1477 NotImplemented "Instruction CMP not yet implemented."
	1478 NotImplemented "Instruction MADD not yet implemented."
	1479 Move W10, 1
	1480 Move [X9+44], W10
	1481 Move [X9+352], S11
	1482 Move X10, [X19+1688]
	1483 Move [X31+256], S0
	1484 Move S0, W31
	1485 Move [X9+64], X10
	1486 Move X10, [X19+256]
	1487 Move [X9+56], X10
	1488 Move W10, [X19+288]
	1489 Move [X9+88], W10
	1490 Move [X19+288], W24
	1491 Move V0, [X19+1560]
	1492 Move W9, [X31+4204]
	1493 Move W10, 173
	1494 Move [X31+320], S0
	1495 Move S0, W31
	1496 NotImplemented "Instruction CMP not yet implemented."
	1497 NotImplemented "Instruction CCMP not yet implemented."
	1498 NotImplemented "Instruction FCSEL not yet implemented."
	1499 Move X8, [X8+56]
	1500 Compare X8, 0
	1501 JumpIfEqual {7639}
	1502 NotImplemented "Instruction LDRSW not yet implemented."
	1503 Move W11, [X8+24]
	1504 NotImplemented "Instruction CMP not yet implemented."
	1505 NotImplemented "Instruction MADD not yet implemented."
	1506 NotImplemented "Instruction STRH not yet implemented."
	1507 Move V0, [X19+488]
	1508 Move [X8+96], S0
	1509 Move W9, [X19+1260]
	1510 Move [X8+356], W9
	1511 Move X8, [X19+872]
	1512 Compare X8, 0
	1513 JumpIfEqual {7639}
	1514 Move X8, [X8+56]
	1515 Compare X8, 0
	1516 JumpIfEqual {7639}
	1517 NotImplemented "Instruction LDRSW not yet implemented."
	1518 Move W10, [X8+24]
	1519 NotImplemented "Instruction CMP not yet implemented."
	1520 Move W10, [X19+344]
	1521 NotImplemented "Instruction NOP not yet implemented."
	1522 NotImplemented "Instruction MADD not yet implemented."
	1523 Move [X8+360], W10
	1524 Move X8, [X19+872]
	1525 Compare X8, 0
	1526 JumpIfEqual {7639}
	1527 Move X8, [X8+56]
	1528 Compare X8, 0
	1529 JumpIfEqual {7639}
	1530 NotImplemented "Instruction LDRSW not yet implemented."
	1531 Move W10, [X8+24]
	1532 NotImplemented "Instruction CMP not yet implemented."
	1533 Move W10, [X19+348]
	1534 NotImplemented "Instruction NOP not yet implemented."
	1535 NotImplemented "Instruction MADD not yet implemented."
	1536 Move [X8+368], W10
	1537 Move X8, [X19+872]
	1538 Compare X8, 0
	1539 JumpIfEqual {7639}
	1540 Move X22, [X8+56]
	1541 Compare X22, 0
	1542 JumpIfEqual {7639}
	1543 Move X8, 0x69B000
	1544 NotImplemented "Instruction LDRSW not yet implemented."
	1545 Move X8, [X8+992]
	1546 Move X0, [X31+208]
	1547 Move X1, [X8]
	1548 Add X8, X31, 416
	1549 Call TMP_TextProcessingStack`1<HighlightState>.get_current, X0
	1550 Move V0, [X31+26]
	1551 Move W8, [X31+432]
	1552 Move [X27+14], V0
	1553 Move [X31+4224], W8
	1554 Move W8, [X22+24]
	1555 NotImplemented "Instruction CMP not yet implemented."
	1556 Move W8, [X31+4224]
	1557 Move V0, [X27+14]
	1558 NotImplemented "Instruction NOP not yet implemented."
	1559 NotImplemented "Instruction MADD not yet implemented."
	1560 Add X9, X9, 380
	1561 Move [X9+16], W8
	1562 Move [X9], V0
	1563 Move X8, [X23]
	1564 Compare X8, 0
	1565 JumpIfEqual {7639}
	1566 Move X8, [X8+56]
	1567 Compare X8, 0
	1568 JumpIfEqual {7639}
	1569 NotImplemented "Instruction LDRSW not yet implemented."
	1570 Move W10, [X8+24]
	1571 NotImplemented "Instruction CMP not yet implemented."
	1572 Move W10, [X19+604]
	1573 NotImplemented "Instruction NOP not yet implemented."
	1574 NotImplemented "Instruction MADD not yet implemented."
	1575 Move [X8+400], W10
	1576 Move X8, [X19+1608]
	1577 Compare X8, 0
	1578 JumpIfEqual {7639}
	1579 Move X0, [X8+32]
	1580 Compare X0, 0
	1581 JumpIfEqual {7639}
	1582 Add X8, X31, 416
	1583 Move X1, X31
	1584 Call Glyph.get_metrics, X0
	1585 Move W25, [X31+4204]
	1586 Move V0, [X31+26]
	1587 Move W8, [X31+432]
	1588 NotImplemented "Instruction CMP not yet implemented."
	1589 Move [X27+9], V0
	1590 Move [X31+4144], W8
	1591 Move X22, 0x69B000
	1592 Move X22, [X22+824]
	1593 Move W29, W31
	1594 Move X8, 0x638000
	1595 Move X8, [X8+368]
	1596 Move X22, 0x69B000
	1597 Move X0, [X8]
	1598 Move W8, [X0+224]
	1599 Move X22, [X22+824]
	1600 Compare W8, 0
	1601 JumpIfNotEqual {1603}
	1602 Call 0x1C17DFC
	1603 Move W0, W25
	1604 Move X1, X31
	1605 Call Char.IsWhiteSpace, X0
	1606 And W29, W0, 1
	1607 Move W8, [X19+761]
	1608 Move V0, [X19+680]
	1609 Move [X19+764], W31
	1610 Move [X31+296], S0
	1611 Compare W8, 0
	1612 JumpIfEqual {1669}
	1613 Move X9, [X19+1608]
	1614 Compare X9, 0
	1615 JumpIfEqual {7639}
	1616 Move W8, [X26]
	1617 Move W24, [X9+40]
	1618 Move W9, [X31+144]
	1619 NotImplemented "Instruction CMP not yet implemented."
	1620 Move X9, [X23]
	1621 Compare X9, 0
	1622 JumpIfEqual {7639}
	1623 Move X9, [X9+56]
	1624 Compare X9, 0
	1625 JumpIfEqual {7639}
	1626 Move W10, [X9+24]
	1627 Add W8, W8, 1
	1628 NotImplemented "Instruction CMP not yet implemented."
	1629 NotImplemented "Instruction SMADDL not yet implemented."
	1630 Move X8, [X8+48]
	1631 Compare X8, 0
	1632 JumpIfEqual {7639}
	1633 Move X9, [X31+336]
	1634 Move X9, [X9]
	1635 Compare X9, 0
	1636 JumpIfEqual {7639}
	1637 Move X9, [X9+296]
	1638 Compare X9, 0
	1639 JumpIfEqual {7639}
	1640 Move X0, [X9+24]
	1641 Compare X0, 0
	1642 JumpIfEqual {7639}
	1643 Move X9, 0x69B000
	1644 Move W8, [X8+40]
	1645 Move X9, [X9+800]
	1646 Add X2, X31, 3976
	1647 Or W1, W24, W8
	1648 Move X3, [X9]
	1649 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	1650 Move S14, W31
	1651 Move TEMP, X0
	1652 And TEMP, TEMP, 1
	1653 Compare TEMP, 1
	1654 JumpIfNotEqual {1678}
	1655 Move X8, [X31+3976]
	1656 Compare X8, 0
	1657 JumpIfEqual {7639}
	1658 Move W9, [X8+57]
	1659 Move S0, [X8+28]
	1660 Move S14, [X8+32]
	1661 Move V1, [X31+296]
	1662 Move S8, [X8+20]
	1663 Move S9, [X8+24]
	1664 And W31, W9, 1
	1665 Move [X31+288], S0
	1666 Move S0, W31
	1667 NotImplemented "Instruction FCSEL not yet implemented."
	1668 Move [X31+296], S1
	1669 Move S0, W31
	1670 Move [X31+288], S0
	1671 Move S9, W31
	1672 Move S8, W31
	1673 Move S0, W31
	1674 Move S14, W31
	1675 Move [X31+288], S0
	1676 Move S9, W31
	1677 Move S8, W31
	1678 Move S0, W31
	1679 Move [X31+288], S0
	1680 Move S9, W31
	1681 Move S8, W31
	1682 Move W8, [X26]
	1683 Subtract W8, W8, 1
	1684 Move X9, [X23]
	1685 Compare X9, 0
	1686 JumpIfEqual {7639}
	1687 Move X9, [X9+56]
	1688 Compare X9, 0
	1689 JumpIfEqual {7639}
	1690 Move W10, [X9+24]
	1691 NotImplemented "Instruction CMP not yet implemented."
	1692 NotImplemented "Instruction UMADDL not yet implemented."
	1693 Move X8, [X8+48]
	1694 Compare X8, 0
	1695 JumpIfEqual {7639}
	1696 Move X9, [X31+336]
	1697 Move X9, [X9]
	1698 Compare X9, 0
	1699 JumpIfEqual {7639}
	1700 Move X9, [X9+296]
	1701 Compare X9, 0
	1702 JumpIfEqual {7639}
	1703 Move X0, [X9+24]
	1704 Compare X0, 0
	1705 JumpIfEqual {7639}
	1706 Move X9, 0x69B000
	1707 Move W8, [X8+40]
	1708 Move X9, [X9+800]
	1709 Add X2, X31, 3976
	1710 Or W1, W8, W24
	1711 Move X3, [X9]
	1712 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	1713 Move TEMP, X0
	1714 And TEMP, TEMP, 1
	1715 Compare TEMP, 1
	1716 JumpIfNotEqual {1742}
	1717 Move X8, [X31+3976]
	1718 Compare X8, 0
	1719 JumpIfEqual {7639}
	1720 Move S4, [X8+40]
	1721 Move S5, [X8+44]
	1722 Move S6, [X8+48]
	1723 Move S7, [X8+52]
	1724 Move V2, [X31+288]
	1725 Move V0, V8
	1726 Move V1, V9
	1727 Move V3, V14
	1728 Move X0, X31
	1729 Call TMP_GlyphValueRecord.op_Addition, X0, X1
	1730 Move X8, [X31+3976]
	1731 Move [X31+288], S2
	1732 Compare X8, 0
	1733 JumpIfEqual {7639}
	1734 Move W8, [X8+57]
	1735 Move V9, V1
	1736 Move V1, [X31+296]
	1737 Move V8, V0
	1738 And W31, W8, 1
	1739 Move S0, W31
	1740 NotImplemented "Instruction FCSEL not yet implemented."
	1741 Move [X31+296], S1
	1742 Move V0, [X31+288]
	1743 Move [X19+764], S0
	1744 Move W8, [X19+240]
	1745 Compare W8, 0
	1746 JumpIfEqual {1769}
	1747 Move V10, [X19+1600]
	1748 Add X0, X31, 4096
	1749 Add X0, X0, 32
	1750 Move X1, X31
	1751 Call GlyphMetrics.get_horizontalAdvance, X0
	1752 Move V1, [X19+724]
	1753 Move S2, 1
	1754 Move W9, 0x200B
	1755 Subtract S1, S2, S1
	1756 Multiply S0, S0, S1
	1757 Multiply S0, S13, S0
	1758 Subtract S0, S10, S0
	1759 Move [X19+1600], S0
	1760 Move W8, [X31+4204]
	1761 NotImplemented "Instruction CMP not yet implemented."
	1762 Compare W29, 0
	1763 JumpIfEqual {1769}
	1764 Move V1, [X19+692]
	1765 Move V2, [X31+224]
	1766 Multiply S1, S2, S1
	1767 Subtract S0, S0, S1
	1768 Move [X19+1600], S0
	1769 Move V10, [X19+688]
	1770 Move S1, W31
	1771 NotImplemented "Instruction FCMP not yet implemented."
	1772 Add X0, X31, 4096
	1773 Add X0, X0, 32
	1774 Move X1, X31
	1775 Call GlyphMetrics.get_width, X0
	1776 Add X0, X31, 4096
	1777 Add X0, X0, 32
	1778 Move X1, X31
	1779 Move V14, V0
	1780 Call GlyphMetrics.get_horizontalBearingX, X0
	1781 Move S3, 0.5
	1782 Move V1, [X19+724]
	1783 Multiply S2, S10, S3
	1784 Multiply S3, S14, S3
	1785 Add S0, S3, S0
	1786 Multiply S0, S13, S0
	1787 Move V3, [X19+1600]
	1788 Subtract S0, S2, S0
	1789 Move S2, 1
	1790 Subtract S1, S2, S1
	1791 Multiply S1, S1, S0
	1792 Add S0, S3, S1
	1793 Move [X19+1600], S0
	1794 Move W8, [X19+1604]
	1795 Move [X31+148], S1
	1796 Move [X31+228], S11
	1797 Compare W8, 0
	1798 JumpIfNotEqual {1806}
	1799 Compare W21, 0
	1800 JumpIfNotEqual {1806}
	1801 Move W8, [X19+604]
	1802 Move TEMP, X8
	1803 And TEMP, TEMP, 1
	1804 Compare TEMP, 1
	1805 JumpIfEqual {1900}
	1806 Move X8, 0x636000
	1807 Move X8, [X8+1432]
	1808 Move X25, [X19+280]
	1809 Move X0, [X8]
	1810 Move W8, [X0+224]
	1811 Compare W8, 0
	1812 JumpIfNotEqual {1814}
	1813 Call 0x1C17DFC
	1814 Move X0, X25
	1815 Move X1, X31
	1816 Move X2, X31
	1817 Call Object.op_Inequality, X0, X1
	1818 Move S0, W31
	1819 Move [X31+216], S0
	1820 Move TEMP, X0
	1821 And TEMP, TEMP, 1
	1822 Compare TEMP, 1
	1823 JumpIfNotEqual {1898}
	1824 Move X0, [X22]
	1825 Move X25, [X19+280]
	1826 Move W8, [X0+224]
	1827 Compare W8, 0
	1828 JumpIfNotEqual {1830}
	1829 Call 0x1C17DFC
	1830 Compare X25, 0
	1831 JumpIfEqual {7639}
	1832 Move X8, [X22]
	1833 Move X0, X25
	1834 Move X2, X31
	1835 Move X8, [X8+184]
	1836 Move W1, [X8+84]
	1837 Call Material.HasProperty, X0, X1
	1838 Move TEMP, X0
	1839 And TEMP, TEMP, 1
	1840 Compare TEMP, 1
	1841 JumpIfNotEqual {1898}
	1842 Move X0, [X22]
	1843 Move X25, [X19+280]
	1844 Move W8, [X0+224]
	1845 Compare W8, 0
	1846 JumpIfNotEqual {1848}
	1847 Call 0x1C17DFC
	1848 Compare X25, 0
	1849 JumpIfEqual {7639}
	1850 Move X8, [X22]
	1851 Move X0, X25
	1852 Move X2, X31
	1853 Move X8, [X8+184]
	1854 Move W1, [X8+204]
	1855 Call Material.HasProperty, X0, X1
	1856 Move TEMP, X0
	1857 And TEMP, TEMP, 1
	1858 Compare TEMP, 1
	1859 JumpIfNotEqual {1898}
	1860 Move X0, [X22]
	1861 Move X25, [X19+280]
	1862 Move W8, [X0+224]
	1863 Compare W8, 0
	1864 JumpIfNotEqual {1866}
	1865 Call 0x1C17DFC
	1866 Compare X25, 0
	1867 JumpIfEqual {7639}
	1868 Move X8, [X22]
	1869 Move X0, X25
	1870 Move X2, X31
	1871 Move X8, [X8+184]
	1872 Move W1, [X8+84]
	1873 Call Material.GetFloat, X0, X1
	1874 Move X8, [X31+336]
	1875 Move X8, [X8]
	1876 Compare X8, 0
	1877 JumpIfEqual {7639}
	1878 Move X0, [X19+280]
	1879 Compare X0, 0
	1880 JumpIfEqual {7639}
	1881 Move X9, [X22]
	1882 Move V10, [X8+424]
	1883 Move X2, X31
	1884 Move V15, V0
	1885 Move X9, [X9+184]
	1886 Move V14, V9
	1887 Move W1, [X9+204]
	1888 Call Material.GetFloat, X0, X1
	1889 Move S1, 0.25
	1890 Multiply S1, S10, S1
	1891 Multiply S1, S15, S1
	1892 Multiply S11, S0, S1
	1893 Move V0, [X31+320]
	1894 Add S0, S0, S11
	1895 NotImplemented "Instruction FCMP not yet implemented."
	1896 Subtract S0, S15, S11
	1897 Move [X31+320], S0
	1898 Move V14, V9
	1899 Move S11, W31
	1900 Move X8, 0x636000
	1901 Move X8, [X8+1432]
	1902 Move X25, [X19+280]
	1903 Move X0, [X8]
	1904 Move W8, [X0+224]
	1905 Compare W8, 0
	1906 JumpIfNotEqual {1908}
	1907 Call 0x1C17DFC
	1908 Move X0, X25
	1909 Move X1, X31
	1910 Move X2, X31
	1911 Call Object.op_Inequality, X0, X1
	1912 Move S10, W31
	1913 Move TEMP, X0
	1914 And TEMP, TEMP, 1
	1915 Compare TEMP, 1
	1916 JumpIfNotEqual {1986}
	1917 Move X0, [X22]
	1918 Move X25, [X19+280]
	1919 Move W8, [X0+224]
	1920 Compare W8, 0
	1921 JumpIfNotEqual {1923}
	1922 Call 0x1C17DFC
	1923 Compare X25, 0
	1924 JumpIfEqual {7639}
	1925 Move X8, [X22]
	1926 Move X0, X25
	1927 Move X2, X31
	1928 Move X8, [X8+184]
	1929 Move W1, [X8+84]
	1930 Call Material.HasProperty, X0, X1
	1931 Move TEMP, X0
	1932 And TEMP, TEMP, 1
	1933 Compare TEMP, 1
	1934 JumpIfNotEqual {1986}
	1935 Move X0, [X22]
	1936 Move X25, [X19+280]
	1937 Move W8, [X0+224]
	1938 Compare W8, 0
	1939 JumpIfNotEqual {1941}
	1940 Call 0x1C17DFC
	1941 Compare X25, 0
	1942 JumpIfEqual {7639}
	1943 Move X8, [X22]
	1944 Move X0, X25
	1945 Move X2, X31
	1946 Move X8, [X8+184]
	1947 Move W1, [X8+84]
	1948 Call Material.GetFloat, X0, X1
	1949 Move X8, [X31+336]
	1950 Move X8, [X8]
	1951 Compare X8, 0
	1952 JumpIfEqual {7639}
	1953 Move X0, [X19+280]
	1954 Compare X0, 0
	1955 JumpIfEqual {7639}
	1956 Move X9, [X22]
	1957 Move V10, [X8+432]
	1958 Move X2, X31
	1959 Move V15, V0
	1960 Move X9, [X9+184]
	1961 Move W1, [X9+204]
	1962 Call Material.GetFloat, X0, X1
	1963 Move S1, 0.25
	1964 Multiply S1, S10, S1
	1965 Multiply S1, S15, S1
	1966 Multiply S1, S0, S1
	1967 Move V0, [X31+320]
	1968 Add S0, S0, S1
	1969 NotImplemented "Instruction FCMP not yet implemented."
	1970 Move V10, V1
	1971 Subtract S0, S15, S1
	1972 Move [X31+320], S0
	1973 Subtract W9, W9, 1
	1974 NotImplemented "Instruction CMP not yet implemented."
	1975 Compare X10, 0
	1976 JumpIfEqual {7639}
	1977 NotImplemented "Instruction SMADDL not yet implemented."
	1978 Move V11, [X8+96]
	1979 Add X0, X10, 80
	1980 Move X1, X31
	1981 Call FaceInfo.get_pointSize, X0
	1982 Move X8, [X22]
	1983 Compare X8, 0
	1984 JumpIfNotEqual {1270}
	1985 Move V10, V1
	1986 Move X8, [X31+336]
	1987 Move X8, [X8]
	1988 Compare X8, 0
	1989 JumpIfEqual {7639}
	1990 Move V0, [X8+436]
	1991 Move V14, V9
	1992 Move V11, V10
	1993 Move [X31+216], S0
	1994 Move V10, [X19+1600]
	1995 Add X0, X31, 4096
	1996 Add X0, X0, 32
	1997 Move X1, X31
	1998 Call GlyphMetrics.get_horizontalBearingX, X0
	1999 Move V12, [X31+320]
	2000 Move V1, [X19+724]
	2001 Move S9, 1
	2002 Add X0, X31, 4096
	2003 Subtract S0, S0, S12
	2004 Subtract S0, S0, S11
	2005 Add S0, S8, S0
	2006 Multiply S0, S13, S0
	2007 Subtract S1, S9, S1
	2008 Multiply S0, S1, S0
	2009 Add X0, X0, 32
	2010 Move X1, X31
	2011 Add S15, S10, S0
	2012 Call GlyphMetrics.get_horizontalBearingY, X0
	2013 Move V3, [X31+332]
	2014 Move V1, [X19+1240]
	2015 Add S0, S12, S0
	2016 Move V2, [X19+1564]
	2017 Add S0, S14, S0
	2018 Multiply S0, S13, S0
	2019 Add S0, S3, S0
	2020 Add X0, X31, 4096
	2021 Subtract S0, S0, S1
	2022 Add X0, X0, 32
	2023 Move X1, X31
	2024 Add S14, S2, S0
	2025 Call GlyphMetrics.get_height, X0
	2026 Add S8, S12, S12
	2027 Add S0, S8, S0
	2028 Add X0, X31, 4096
	2029 Multiply S0, S13, S0
	2030 Add X0, X0, 32
	2031 Move X1, X31
	2032 Subtract S10, S14, S0
	2033 Call GlyphMetrics.get_width, X0
	2034 Move V1, [X19+724]
	2035 Add S0, S8, S0
	2036 Add S2, S11, S11
	2037 Add S0, S2, S0
	2038 Move W8, [X19+1604]
	2039 Multiply S0, S13, S0
	2040 Subtract S1, S9, S1
	2041 Multiply S0, S1, S0
	2042 Move V8, V13
	2043 Add S3, S15, S0
	2044 Move [X31+192], S11
	2045 Compare W8, 0
	2046 JumpIfNotEqual {2054}
	2047 Compare W21, 0
	2048 JumpIfNotEqual {2054}
	2049 Move W8, [X19+604]
	2050 Move TEMP, X8
	2051 And TEMP, TEMP, 2
	2052 Compare TEMP, 2
	2053 JumpIfEqual {2795}
	2054 Move V11, V3
	2055 Move V12, V15
	2056 Move W8, [X19+1140]
	2057 Move [X31+308], S8
	2058 Compare W8, 0
	2059 JumpIfEqual {2116}
	2060 Move X21, [X31+128]
	2061 Move X1, X31
	2062 Move [X31+196], S3
	2063 Move X0, X21
	2064 Call Matrix4x4.get_lossyScale, X0
	2065 Add S1, S10, S14
	2066 Move S2, 0.5
	2067 Add S0, S11, S15
	2068 Multiply S13, S1, S2
	2069 Move V9, V10
	2070 Multiply S10, S0, S2
	2071 Subtract S8, S14, S13
	2072 Subtract S0, S12, S10
	2073 Move S2, W31
	2074 Move X0, X21
	2075 Move V1, V8
	2076 Move X1, X31
	2077 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2078 Add S0, S10, S0
	2079 Move S12, W31
	2080 Move [X31+252], S0
	2081 Add S3, S13, S1
	2082 Add S0, S2, S12
	2083 Subtract S9, S9, S13
	2084 Move [X31+236], S0
	2085 Move [X31+244], S3
	2086 Subtract S0, S15, S10
	2087 Move S2, W31
	2088 Move X0, X21
	2089 Move V1, V9
	2090 Move X1, X31
	2091 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2092 Add S3, S10, S0
	2093 Add S0, S2, S12
	2094 Add S15, S13, S1
	2095 Move [X31+244], S0
	2096 Move [X31+252], S3
	2097 Subtract S0, S11, S10
	2098 Move S2, W31
	2099 Move X0, X21
	2100 Move V1, V8
	2101 Move X1, X31
	2102 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2103 Add S11, S10, S0
	2104 Move V0, [X31+196]
	2105 Add S14, S13, S1
	2106 Add S8, S2, S12
	2107 Move S2, W31
	2108 Subtract S0, S0, S10
	2109 Move X0, X21
	2110 Move V1, V9
	2111 Move X1, X31
	2112 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2113 Add S3, S10, S0
	2114 Add S10, S13, S1
	2115 Add S0, S2, S12
	2116 Move S1, W31
	2117 Move [X31+240], S14
	2118 Move [X31+248], S1
	2119 Move S1, W31
	2120 Move [X31+248], S15
	2121 Move [X31+256], S12
	2122 Move S0, W31
	2123 Move S8, W31
	2124 Move V15, V10
	2125 Move [X31+236], S1
	2126 Move X8, [X23]
	2127 Compare X8, 0
	2128 JumpIfEqual {7639}
	2129 Move X8, [X8+56]
	2130 Move V13, [X31+308]
	2131 Move V6, [X31+252]
	2132 Compare X8, 0
	2133 JumpIfEqual {7639}
	2134 NotImplemented "Instruction LDRSW not yet implemented."
	2135 Move W10, [X8+24]
	2136 Move V2, [X31+248]
	2137 NotImplemented "Instruction CMP not yet implemented."
	2138 Move V1, [X31+244]
	2139 NotImplemented "Instruction NOP not yet implemented."
	2140 NotImplemented "Instruction MADD not yet implemented."
	2141 Move [X8+284], S2
	2142 Move [X8+288], S15
	2143 Move [X8+292], S1
	2144 Move X8, [X23]
	2145 Compare X8, 0
	2146 JumpIfEqual {7639}
	2147 Move X8, [X8+56]
	2148 Compare X8, 0
	2149 JumpIfEqual {7639}
	2150 NotImplemented "Instruction LDRSW not yet implemented."
	2151 Move W10, [X8+24]
	2152 Move V4, [X31+240]
	2153 NotImplemented "Instruction CMP not yet implemented."
	2154 NotImplemented "Instruction MADD not yet implemented."
	2155 Move [X8+272], S6
	2156 Move V6, [X31+236]
	2157 Move [X8+276], S4
	2158 Move [X8+280], S6
	2159 Move X8, [X23]
	2160 Compare X8, 0
	2161 JumpIfEqual {7639}
	2162 Move X8, [X8+56]
	2163 Compare X8, 0
	2164 JumpIfEqual {7639}
	2165 NotImplemented "Instruction LDRSW not yet implemented."
	2166 Move W10, [X8+24]
	2167 NotImplemented "Instruction CMP not yet implemented."
	2168 NotImplemented "Instruction MADD not yet implemented."
	2169 Move [X8+296], S11
	2170 Move [X8+300], S14
	2171 Move [X8+304], S8
	2172 Move X8, [X23]
	2173 Compare X8, 0
	2174 JumpIfEqual {7639}
	2175 Move X8, [X8+56]
	2176 Compare X8, 0
	2177 JumpIfEqual {7639}
	2178 NotImplemented "Instruction LDRSW not yet implemented."
	2179 Move W10, [X8+24]
	2180 NotImplemented "Instruction CMP not yet implemented."
	2181 NotImplemented "Instruction MADD not yet implemented."
	2182 Move [X8+308], S3
	2183 Move [X8+312], S10
	2184 Move [X8+316], S0
	2185 Move X8, [X23]
	2186 Compare X8, 0
	2187 JumpIfEqual {7639}
	2188 Move X8, [X8+56]
	2189 Compare X8, 0
	2190 JumpIfEqual {7639}
	2191 NotImplemented "Instruction LDRSW not yet implemented."
	2192 Move W9, [X8+24]
	2193 NotImplemented "Instruction CMP not yet implemented."
	2194 Move V0, [X19+1600]
	2195 NotImplemented "Instruction NOP not yet implemented."
	2196 NotImplemented "Instruction MADD not yet implemented."
	2197 Subtract S2, S11, S2
	2198 Subtract S3, S4, S15
	2199 Move [X9+320], S0
	2200 Move V1, [X19+1240]
	2201 NotImplemented "Instruction FDIV not yet implemented."
	2202 Move V3, [X31+332]
	2203 Move V0, [X19+1564]
	2204 Move [X9+348], S2
	2205 Move V2, [X31+272]
	2206 Subtract S3, S3, S1
	2207 Add S3, S3, S0
	2208 Move [X9+332], S3
	2209 Move W9, [X19+1604]
	2210 Multiply S3, S2, S13
	2211 Compare W9, 0
	2212 JumpIfEqual {2215}
	2213 Move V2, [X31+256]
	2214 Multiply S2, S2, S13
	2215 Move V2, [X31+256]
	2216 Move V4, [X31+312]
	2217 Multiply S2, S2, S13
	2218 NotImplemented "Instruction FDIV not yet implemented."
	2219 NotImplemented "Instruction FDIV not yet implemented."
	2220 Move W24, [X19+1176]
	2221 Compare W29, 0
	2222 JumpIfEqual {2236}
	2223 NotImplemented "Instruction CMP not yet implemented."
	2224 Move V0, [X19+1224]
	2225 NotImplemented "Instruction NOP not yet implemented."
	2226 NotImplemented "Instruction MADD not yet implemented."
	2227 Move [X8+340], S0
	2228 Move V2, [X19+1228]
	2229 Subtract S0, S0, S1
	2230 Move [X8+328], S0
	2231 Move [X8+344], S2
	2232 Move [X19+1216], S0
	2233 Subtract S0, S2, S1
	2234 Move [X8+336], S0
	2235 Move [X19+1220], S0
	2236 Add S2, S0, S2
	2237 Add S8, S0, S3
	2238 NotImplemented "Instruction FCMP not yet implemented."
	2239 Move V3, V2
	2240 Move V4, V8
	2241 Move V3, [X19+1028]
	2242 Subtract S4, S8, S0
	2243 Subtract S0, S2, S0
	2244 NotImplemented "Instruction FDIV not yet implemented."
	2245 NotImplemented "Instruction FDIV not yet implemented."
	2246 NotImplemented "Instruction FCMP not yet implemented."
	2247 NotImplemented "Instruction FCSEL not yet implemented."
	2248 NotImplemented "Instruction FCMP not yet implemented."
	2249 NotImplemented "Instruction FCSEL not yet implemented."
	2250 Move V0, [X19+1224]
	2251 Move V5, [X19+1228]
	2252 NotImplemented "Instruction NOP not yet implemented."
	2253 NotImplemented "Instruction MADD not yet implemented."
	2254 Subtract S2, S2, S1
	2255 NotImplemented "Instruction FCMP not yet implemented."
	2256 NotImplemented "Instruction FCSEL not yet implemented."
	2257 NotImplemented "Instruction FCMP not yet implemented."
	2258 NotImplemented "Instruction FCSEL not yet implemented."
	2259 Move [X19+1228], S5
	2260 Subtract S5, S8, S1
	2261 Move [X19+1224], S0
	2262 Move [X8+340], S4
	2263 Move [X8+344], S3
	2264 Move [X8+328], S5
	2265 Move [X19+1216], S5
	2266 Move [X8+336], S2
	2267 Move W8, [X19+1192]
	2268 Move [X19+1220], S2
	2269 Compare W8, 0
	2270 JumpIfEqual {2274}
	2271 Move W8, [X19+828]
	2272 Compare W8, 0
	2273 JumpIfEqual {2289}
	2274 Move X8, [X19+256]
	2275 Move [X19+1208], S0
	2276 Compare X8, 0
	2277 JumpIfEqual {7639}
	2278 Move V9, [X19+1212]
	2279 Add X0, X8, 80
	2280 Move X1, X31
	2281 Call FaceInfo.get_capLine, X0
	2282 Move V1, [X31+312]
	2283 Multiply S0, S13, S0
	2284 NotImplemented "Instruction FDIV not yet implemented."
	2285 Move V1, [X19+1240]
	2286 NotImplemented "Instruction FCMP not yet implemented."
	2287 NotImplemented "Instruction FCSEL not yet implemented."
	2288 Move [X19+1212], S0
	2289 NotImplemented "Instruction FCMP not yet implemented."
	2290 Move X8, [X31+136]
	2291 Move V0, [X8+520]
	2292 NotImplemented "Instruction FCMP not yet implemented."
	2293 NotImplemented "Instruction FCSEL not yet implemented."
	2294 Move [X8+520], S0
	2295 Move X8, [X23]
	2296 Compare X8, 0
	2297 JumpIfEqual {7639}
	2298 Move X9, [X8+56]
	2299 Compare X9, 0
	2300 JumpIfEqual {7639}
	2301 Move W27, [X26]
	2302 Move W10, [X9+24]
	2303 NotImplemented "Instruction CMP not yet implemented."
	2304 Move X10, W27
	2305 NotImplemented "Instruction MADD not yet implemented."
	2306 Move [X9+404], W31
	2307 Move W25, [X31+4204]
	2308 Move W10, [X19+632]
	2309 NotImplemented "Instruction CMP not yet implemented."
	2310 And W26, W10, 24
	2311 Compare W29, 0
	2312 JumpIfEqual {2411}
	2313 Move W11, [X31+124]
	2314 NotImplemented "Instruction CMP not yet implemented."
	2315 NotImplemented "Instruction CSET not yet implemented."
	2316 NotImplemented "Instruction BIC not yet implemented."
	2317 Move TEMP, X10
	2318 And TEMP, TEMP, 1
	2319 Compare TEMP, 1
	2320 JumpIfEqual {2415}
	2321 Move W10, [X19+1604]
	2322 NotImplemented "Instruction CMP not yet implemented."
	2323 And W8, W25, 0xFFFFFFFE
	2324 NotImplemented "Instruction CMP not yet implemented."
	2325 Move W8, [X19+736]
	2326 NotImplemented "Instruction CMP not yet implemented."
	2327 NotImplemented "Instruction FCMP not yet implemented."
	2328 Move S0, W31
	2329 Move W8, [X19+708]
	2330 Compare W8, 0
	2331 JumpIfNotEqual {2335}
	2332 Move V0, [X19+1224]
	2333 Move V2, [X19+1232]
	2334 Subtract S0, S0, S2
	2335 Move V2, [X19+1228]
	2336 Move V3, [X19+1208]
	2337 Subtract S1, S2, S1
	2338 Subtract S1, S3, S1
	2339 Add S0, S1, S0
	2340 Move V1, [X31+188]
	2341 NotImplemented "Instruction FCMP not yet implemented."
	2342 Move W8, [X19+740]
	2343 Add W31, W8, 1
	2344 Move [X19+740], W27
	2345 Move X29, 0x69A000
	2346 Move X29, [X29+1000]
	2347 Move X26, [X31+352]
	2348 Move X0, [X29]
	2349 Move W8, [X0+224]
	2350 Compare W8, 0
	2351 JumpIfNotEqual {2354}
	2352 Call 0x1C17DFC
	2353 Move X0, [X29]
	2354 Move X8, [X0+184]
	2355 Move X0, X19
	2356 Move X2, X31
	2357 Add X1, X8, 2816
	2358 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2359 Move X8, 0x635000
	2360 Move X8, [X8+1432]
	2361 Move [X31+4152], W0
	2362 Move X25, [X19+744]
	2363 Move X8, [X8]
	2364 Move W9, [X8+224]
	2365 Compare W9, 0
	2366 JumpIfNotEqual {2369}
	2367 Move X0, X8
	2368 Call 0x1C17DFC
	2369 Move X0, X25
	2370 Move X1, X31
	2371 Move X2, X31
	2372 Call Object.op_Inequality, X0, X1
	2373 Move TEMP, X0
	2374 And TEMP, TEMP, 1
	2375 Compare TEMP, 1
	2376 JumpIfNotEqual {2410}
	2377 Move X8, [X19]
	2378 Move X25, [X19+744]
	2379 Move X0, X19
	2380 Move X9, [X8+1352]
	2381 Move X1, [X8+1360]
	2382 NotImplemented "Instruction BLR not yet implemented."
	2383 Compare X25, 0
	2384 JumpIfEqual {7639}
	2385 Move X8, [X25]
	2386 Move X1, X0
	2387 Move X0, X25
	2388 Move X9, [X8+1368]
	2389 Move X2, [X8+1376]
	2390 NotImplemented "Instruction BLR not yet implemented."
	2391 Move X0, [X19+744]
	2392 Compare X0, 0
	2393 JumpIfEqual {7639}
	2394 Move W8, [X19+1024]
	2395 Move X2, X31
	2396 Move [X0+1024], W8
	2397 Move W1, [X19+1172]
	2398 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	2399 Move X0, [X19+744]
	2400 Compare X0, 0
	2401 JumpIfEqual {7639}
	2402 Move X8, [X0]
	2403 Move W1, W31
	2404 Move W2, W31
	2405 Move X9, [X8+2008]
	2406 Move X3, [X8+2016]
	2407 NotImplemented "Instruction BLR not yet implemented."
	2408 Move W8, 1
	2409 Move [X19+760], W8
	2410 Move [X31+4184], W27
	2411 NotImplemented "Instruction CMP not yet implemented."
	2412 Move W10, 0x200B
	2413 NotImplemented "Instruction CMP not yet implemented."
	2414 NotImplemented "Instruction CMP not yet implemented."
	2415 Add X9, X9, 404
	2416 Move W10, 1
	2417 Move [X9], W10
	2418 Move X9, [X31+168]
	2419 Move X10, [X31+176]
	2420 Compare W20, 0
	2421 JumpIfEqual {2432}
	2422 Move X8, [X8+80]
	2423 Compare X8, 0
	2424 JumpIfEqual {7639}
	2425 NotImplemented "Instruction LDRSW not yet implemented."
	2426 Move W10, [X8+24]
	2427 NotImplemented "Instruction CMP not yet implemented."
	2428 Move W10, 92
	2429 NotImplemented "Instruction MADD not yet implemented."
	2430 Add X10, X8, 96
	2431 Add X9, X8, 100
	2432 Move V8, [X10]
	2433 Move V2, [X31+160]
	2434 Move V9, [X9]
	2435 Move V0, [X19+864]
	2436 Move V10, [X19+1600]
	2437 Subtract S2, S2, S8
	2438 Subtract S2, S2, S9
	2439 Move W8, [X19+240]
	2440 NotImplemented "Instruction FCMP not yet implemented."
	2441 Move S3, -1
	2442 NotImplemented "Instruction FCCMP not yet implemented."
	2443 NotImplemented "Instruction FCSEL not yet implemented."
	2444 Move S12, W31
	2445 Move [X31+232], S0
	2446 Move S0, W31
	2447 Compare W8, 0
	2448 JumpIfNotEqual {2455}
	2449 Add X0, X31, 4096
	2450 Add X0, X0, 32
	2451 Move X1, X31
	2452 Call GlyphMetrics.get_horizontalAdvance, X0
	2453 Move W25, [X31+4204]
	2454 Move V1, [X19+1240]
	2455 Move V3, [X31+228]
	2456 Move V2, [X19+724]
	2457 Move V4, [X19+1208]
	2458 Move V11, [X19+1228]
	2459 NotImplemented "Instruction CMP not yet implemented."
	2460 NotImplemented "Instruction FCSEL not yet implemented."
	2461 NotImplemented "Instruction FCMP not yet implemented."
	2462 Move W8, [X19+708]
	2463 Compare W8, 0
	2464 JumpIfNotEqual {2468}
	2465 Move V5, [X19+1224]
	2466 Move V6, [X19+1232]
	2467 Subtract S12, S5, S6
	2468 Move X8, [X31+352]
	2469 Subtract S5, S11, S1
	2470 Subtract S4, S4, S5
	2471 Move V5, [X31+188]
	2472 Move W27, [X8]
	2473 Add S4, S4, S12
	2474 NotImplemented "Instruction FCMP not yet implemented."
	2475 Move W8, [X19+740]
	2476 Add W31, W8, 1
	2477 Move [X19+740], W27
	2478 Move W8, [X19+568]
	2479 Compare W8, 0
	2480 JumpIfEqual {2494}
	2481 Move V6, [X19+700]
	2482 Move V5, [X19+712]
	2483 NotImplemented "Instruction FCMP not yet implemented."
	2484 NotImplemented "Instruction FCMP not yet implemented."
	2485 Move W8, [X19+580]
	2486 Move W9, [X19+584]
	2487 NotImplemented "Instruction CMP not yet implemented."
	2488 Move V4, [X19+484]
	2489 Move V1, [X19+592]
	2490 NotImplemented "Instruction FCMP not yet implemented."
	2491 Move W8, [X19+580]
	2492 Move W9, [X19+584]
	2493 NotImplemented "Instruction CMP not yet implemented."
	2494 Move W8, [X19+736]
	2495 Subtract W8, W8, 1
	2496 NotImplemented "Instruction CMP not yet implemented."
	2497 Move X11, -49442816
	2498 Add X11, X11, 2916
	2499 NotImplemented "Instruction ADR not yet implemented."
	2500 Move W10, [X11]
	2501 Add X9, X9, X10
	2502 CallNoReturn X9
	2503 Move X29, 0x69A000
	2504 Move X29, [X29+1000]
	2505 Move X0, [X29]
	2506 Move W8, [X0+224]
	2507 Compare W8, 0
	2508 JumpIfNotEqual {2511}
	2509 Call 0x1C17DFC
	2510 Move X0, [X29]
	2511 Move X8, [X0+184]
	2512 Move X26, [X31+352]
	2513 Add X27, X31, 3984
	2514 Move W9, [X8+5504]
	2515 Compare W9, 0
	2516 JumpIfEqual {4655}
	2517 Move W9, [X0+224]
	2518 Compare W9, 0
	2519 JumpIfNotEqual {2523}
	2520 Call 0x1C17DFC
	2521 Move X8, [X29]
	2522 Move X8, [X8+184]
	2523 Move X9, 0x69A000
	2524 Move X9, [X9+904]
	2525 Move X1, [X9]
	2526 Move W9, 0x11F0
	2527 Add X0, X8, X9
	2528 Add X8, X31, 4096
	2529 Add X8, X8, 112
	2530 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	2531 Add X1, X31, 4096
	2532 Add X0, X31, 3088
	2533 Add X1, X1, 112
	2534 Move W2, 888
	2535 Call 0x3EB2AC0
	2536 Add X1, X31, 3088
	2537 Move S6, 1
	2538 Subtract S1, S6, S2
	2539 Move X8, -50151424
	2540 Multiply S0, S0, S1
	2541 NotImplemented "Instruction FABS not yet implemented."
	2542 Move V5, [X8+400]
	2543 Multiply S0, S0, S3
	2544 Add S11, S4, S0
	2545 Move V0, [X31+232]
	2546 NotImplemented "Instruction CMP not yet implemented."
	2547 NotImplemented "Instruction FCSEL not yet implemented."
	2548 Multiply S0, S12, S0
	2549 NotImplemented "Instruction FCMP not yet implemented."
	2550 Move W8, [X19+728]
	2551 Compare W8, 0
	2552 JumpIfEqual {2555}
	2553 Move W8, [X19+1176]
	2554 NotImplemented "Instruction CMP not yet implemented."
	2555 Move W8, [X19+568]
	2556 Compare W8, 0
	2557 JumpIfEqual {2569}
	2558 Move W8, [X19+580]
	2559 Move W9, [X19+584]
	2560 NotImplemented "Instruction CMP not yet implemented."
	2561 Move V0, [X19+720]
	2562 Move W8, 0x42C80000
	2563 Move S3, W8
	2564 NotImplemented "Instruction FDIV not yet implemented."
	2565 NotImplemented "Instruction FCMP not yet implemented."
	2566 Move V1, [X19+484]
	2567 Move V0, [X19+592]
	2568 NotImplemented "Instruction FCMP not yet implemented."
	2569 Move W8, [X19+736]
	2570 NotImplemented "Instruction CMP not yet implemented."
	2571 NotImplemented "Instruction CMP not yet implemented."
	2572 NotImplemented "Instruction CMP not yet implemented."
	2573 Move X29, 0x69A000
	2574 Move X29, [X29+1000]
	2575 Move X0, [X29]
	2576 Move W8, [X0+224]
	2577 Compare W8, 0
	2578 JumpIfNotEqual {2581}
	2579 Call 0x1C17DFC
	2580 Move X0, [X29]
	2581 Move X8, [X0+184]
	2582 Move X26, [X31+352]
	2583 Add X1, X8, 152
	2584 Move X29, 0x69A000
	2585 Move X29, [X29+1000]
	2586 Move X0, [X29]
	2587 Move W8, [X0+224]
	2588 Compare W8, 0
	2589 JumpIfNotEqual {2592}
	2590 Call 0x1C17DFC
	2591 Move X0, [X29]
	2592 Move X8, [X0+184]
	2593 Move X26, [X31+352]
	2594 Add X1, X8, 2816
	2595 Move X0, X19
	2596 Move X2, X31
	2597 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2598 Move [X31+4152], W0
	2599 Compare W27, 0
	2600 JumpIfEqual {2960}
	2601 Move W8, [X31+4152]
	2602 Move TEMP, X8
	2603 And TEMP, TEMP, -2147483648
	2604 Compare TEMP, -2147483648
	2605 JumpIfEqual {2960}
	2606 Move X29, 0x69A000
	2607 Move X29, [X29+1000]
	2608 Move V8, [X19+1224]
	2609 Move X26, [X31+352]
	2610 Move X0, [X29]
	2611 Move W8, [X0+224]
	2612 Compare W8, 0
	2613 JumpIfNotEqual {2616}
	2614 Call 0x1C17DFC
	2615 Move X0, [X29]
	2616 Move X8, [X0+184]
	2617 Move X0, X19
	2618 Move X2, X31
	2619 Subtract S8, S8, S11
	2620 Add X1, X8, 1040
	2621 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2622 Move V0, [X31+188]
	2623 Move [X31+4152], W0
	2624 NotImplemented "Instruction FCMP not yet implemented."
	2625 Move W8, [X19+1172]
	2626 Move W9, 1
	2627 Move [X19+828], W9
	2628 Move V0, [X19+1036]
	2629 Move [X19+1176], W8
	2630 Move X8, [X29]
	2631 Move S1, W31
	2632 Add S0, S0, S1
	2633 Add X27, X31, 3984
	2634 Move X8, [X8+184]
	2635 Move V1, [X8+5544]
	2636 Move X8, [X31+136]
	2637 Move [X19+1600], S0
	2638 Move [X19+1232], W31
	2639 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2640 Move [X19+1224], D0
	2641 NotImplemented "Instruction MOVI not yet implemented."
	2642 Move [X19+1240], W31
	2643 Move [X8+520], D0
	2644 Move W8, [X19+1192]
	2645 Move W9, [X19+1200]
	2646 Add W8, W8, 1
	2647 Move [X19+1192], W8
	2648 Add W8, W9, 1
	2649 Move [X19+1200], W8
	2650 Move X29, 0x69A000
	2651 Move X29, [X29+1000]
	2652 Move X0, [X29]
	2653 Move W8, [X0+224]
	2654 Compare W8, 0
	2655 JumpIfNotEqual {2658}
	2656 Call 0x1C17DFC
	2657 Move X0, [X29]
	2658 Move X8, [X0+184]
	2659 Move X26, [X31+352]
	2660 Move X0, X19
	2661 Move X2, X31
	2662 Add X1, X8, 2816
	2663 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2664 Move X8, 0x635000
	2665 Move X8, [X8+1432]
	2666 Move [X31+4152], W0
	2667 Move X25, [X19+744]
	2668 Move X8, [X8]
	2669 Move W9, [X8+224]
	2670 Compare W9, 0
	2671 JumpIfNotEqual {2674}
	2672 Move X0, X8
	2673 Call 0x1C17DFC
	2674 Move X0, X25
	2675 Move X1, X31
	2676 Move X2, X31
	2677 Call Object.op_Inequality, X0, X1
	2678 Move TEMP, X0
	2679 And TEMP, TEMP, 1
	2680 Compare TEMP, 1
	2681 JumpIfNotEqual {2715}
	2682 Move X8, [X19]
	2683 Move X25, [X19+744]
	2684 Move X0, X19
	2685 Move X9, [X8+1352]
	2686 Move X1, [X8+1360]
	2687 NotImplemented "Instruction BLR not yet implemented."
	2688 Compare X25, 0
	2689 JumpIfEqual {7639}
	2690 Move X8, [X25]
	2691 Move X1, X0
	2692 Move X0, X25
	2693 Move X9, [X8+1368]
	2694 Move X2, [X8+1376]
	2695 NotImplemented "Instruction BLR not yet implemented."
	2696 Move X0, [X19+744]
	2697 Compare X0, 0
	2698 JumpIfEqual {7639}
	2699 Move W8, [X19+1024]
	2700 Move X2, X31
	2701 Move [X0+1024], W8
	2702 Move W1, [X19+1172]
	2703 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	2704 Move X0, [X19+744]
	2705 Compare X0, 0
	2706 JumpIfEqual {7639}
	2707 Move X8, [X0]
	2708 Move W1, W31
	2709 Move W2, W31
	2710 Move X9, [X8+2008]
	2711 Move X3, [X8+2016]
	2712 NotImplemented "Instruction BLR not yet implemented."
	2713 Move W8, 1
	2714 Move [X19+760], W8
	2715 Move [X31+4184], W27
	2716 Move W8, 3
	2717 Move [X31+4188], W8
	2718 Move TEMP, 0x2006
	2719 Not TEMP
	2720 Move W8, TEMP
	2721 Add W8, W25, W8
	2722 NotImplemented "Instruction CMP not yet implemented."
	2723 Subtract W8, W25, 10
	2724 NotImplemented "Instruction CMP not yet implemented."
	2725 Add X27, X31, 3984
	2726 NotImplemented "Instruction CMP not yet implemented."
	2727 Move X8, 0x637000
	2728 Move X8, [X8+368]
	2729 Move X0, [X8]
	2730 Move W8, [X0+224]
	2731 Compare W8, 0
	2732 JumpIfNotEqual {2734}
	2733 Call 0x1C17DFC
	2734 Move W0, W25
	2735 Move X1, X31
	2736 Call Char.IsSeparator, X0
	2737 Move TEMP, X0
	2738 And TEMP, TEMP, 1
	2739 Compare TEMP, 1
	2740 JumpIfNotEqual {2997}
	2741 Move W25, [X31+4204]
	2742 Move X22, 0x69A000
	2743 Move X22, [X22+1000]
	2744 Move X0, [X22]
	2745 Move W8, [X0+224]
	2746 Compare W8, 0
	2747 JumpIfNotEqual {2750}
	2748 Call 0x1C17DFC
	2749 Move X0, [X22]
	2750 Move X8, [X0+184]
	2751 Move X0, X19
	2752 Move X2, X31
	2753 Add X1, X8, 152
	2754 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2755 Move [X31+4152], W0
	2756 Move X8, -50151424
	2757 Move V1, [X19+704]
	2758 Move V0, [X8+532]
	2759 NotImplemented "Instruction FCMP not yet implemented."
	2760 Move X8, [X23]
	2761 Compare X8, 0
	2762 JumpIfEqual {7639}
	2763 Move X9, [X8+56]
	2764 Compare X9, 0
	2765 JumpIfEqual {7639}
	2766 Move X10, [X31+352]
	2767 Move W11, [X9+24]
	2768 NotImplemented "Instruction LDRSW not yet implemented."
	2769 NotImplemented "Instruction CMP not yet implemented."
	2770 Move V0, [X19+1240]
	2771 Move S1, W31
	2772 NotImplemented "Instruction FCMP not yet implemented."
	2773 Move W11, [X19+708]
	2774 Compare W11, 0
	2775 JumpIfNotEqual {2779}
	2776 Move V1, [X19+1224]
	2777 Move V2, [X19+1232]
	2778 Subtract S1, S1, S2
	2779 Move V2, [X19+1228]
	2780 Move V3, [X19+700]
	2781 NotImplemented "Instruction NOP not yet implemented."
	2782 NotImplemented "Instruction MADD not yet implemented."
	2783 Move V4, [X9+340]
	2784 Subtract S1, S1, S2
	2785 Move V2, [X31+88]
	2786 Move V5, [X19+696]
	2787 Add S1, S4, S1
	2788 Add S2, S2, S3
	2789 Move V3, [X31+96]
	2790 Multiply S2, S3, S2
	2791 Add S1, S1, S2
	2792 Move V2, [X31+224]
	2793 Multiply S2, S2, S5
	2794 Add S1, S2, S1
	2795 Move V0, [X19+1520]
	2796 Move V1, [X31+100]
	2797 Add X0, X31, 4096
	2798 Add X0, X0, 32
	2799 NotImplemented "Instruction SCVTF not yet implemented."
	2800 Move X1, X31
	2801 Multiply S11, S0, S1
	2802 Move [X31+196], S3
	2803 Call GlyphMetrics.get_horizontalBearingY, X0
	2804 Move V1, [X31+320]
	2805 Move V13, [X31+192]
	2806 Add X0, X31, 4096
	2807 Add X0, X0, 32
	2808 Add S0, S1, S0
	2809 Add S0, S13, S0
	2810 Multiply S0, S8, S0
	2811 Move X1, X31
	2812 Move V9, V8
	2813 Multiply S12, S11, S0
	2814 Call GlyphMetrics.get_horizontalBearingY, X0
	2815 Add X0, X31, 4096
	2816 Add X0, X0, 32
	2817 Move X1, X31
	2818 Move V8, V0
	2819 Call GlyphMetrics.get_height, X0
	2820 Move S2, W31
	2821 Add S14, S14, S2
	2822 Add S10, S10, S2
	2823 Move V2, [X31+320]
	2824 Subtract S0, S8, S0
	2825 Move V5, [X31+196]
	2826 Add S1, S15, S12
	2827 Subtract S0, S0, S2
	2828 Subtract S0, S0, S13
	2829 Multiply S0, S9, S0
	2830 Multiply S0, S11, S0
	2831 Add S2, S5, S12
	2832 Subtract S3, S12, S0
	2833 Add S4, S15, S0
	2834 Add S0, S5, S0
	2835 Move S5, 0.5
	2836 Multiply S3, S3, S5
	2837 Move V8, V9
	2838 Subtract S12, S1, S3
	2839 Subtract S15, S4, S3
	2840 Subtract S11, S2, S3
	2841 Subtract S3, S0, S3
	2842 Move X29, 0x69A000
	2843 Move X29, [X29+1000]
	2844 Move X0, [X29]
	2845 Move W8, [X0+224]
	2846 Compare W8, 0
	2847 JumpIfNotEqual {2850}
	2848 Call 0x1C17DFC
	2849 Move X0, [X29]
	2850 Move X8, [X0+184]
	2851 Move X26, [X31+352]
	2852 Add X27, X31, 3984
	2853 Move W9, [X8+5504]
	2854 Compare W9, 0
	2855 JumpIfEqual {4655}
	2856 Move W9, [X0+224]
	2857 Compare W9, 0
	2858 JumpIfNotEqual {2862}
	2859 Call 0x1C17DFC
	2860 Move X8, [X29]
	2861 Move X8, [X8+184]
	2862 Move X9, 0x69A000
	2863 Move X9, [X9+904]
	2864 Move X1, [X9]
	2865 Move W9, 0x11F0
	2866 Add X0, X8, X9
	2867 Add X8, X31, 4096
	2868 Add X8, X8, 112
	2869 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	2870 Add X1, X31, 4096
	2871 Add X0, X31, 1312
	2872 Add X1, X1, 112
	2873 Move W2, 888
	2874 Call 0x3EB2AC0
	2875 Add X1, X31, 1312
	2876 Move X0, X19
	2877 Move X2, X31
	2878 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2879 Subtract W8, W0, 1
	2880 Move [X31+4152], W8
	2881 Move W8, [X19+1172]
	2882 Subtract W8, W8, 1
	2883 Move [X19+1172], W8
	2884 Move [X31+4184], W8
	2885 Move W8, 0x2026
	2886 Move [X31+4188], W8
	2887 Move W8, [X31+348]
	2888 Add W8, W8, 1
	2889 Move [X31+348], W8
	2890 Move X29, 0x69A000
	2891 Move X29, [X29+1000]
	2892 Move X26, [X31+352]
	2893 Move X0, [X29]
	2894 Move W8, [X0+224]
	2895 Compare W8, 0
	2896 JumpIfNotEqual {2899}
	2897 Call 0x1C17DFC
	2898 Move X0, [X29]
	2899 Move X8, [X0+184]
	2900 Move X0, X19
	2901 Move X2, X31
	2902 Add X27, X31, 3984
	2903 Add X1, X8, 152
	2904 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2905 Move X8, 0x635000
	2906 Move X8, [X8+1432]
	2907 Move [X31+4152], W0
	2908 Move X25, [X19+744]
	2909 Move X8, [X8]
	2910 Move W9, [X8+224]
	2911 Compare W9, 0
	2912 JumpIfNotEqual {2915}
	2913 Move X0, X8
	2914 Call 0x1C17DFC
	2915 Move X0, X25
	2916 Move X1, X31
	2917 Move X2, X31
	2918 Call Object.op_Inequality, X0, X1
	2919 Move TEMP, X0
	2920 And TEMP, TEMP, 1
	2921 Compare TEMP, 1
	2922 JumpIfNotEqual {2956}
	2923 Move X8, [X19]
	2924 Move X25, [X19+744]
	2925 Move X0, X19
	2926 Move X9, [X8+1352]
	2927 Move X1, [X8+1360]
	2928 NotImplemented "Instruction BLR not yet implemented."
	2929 Compare X25, 0
	2930 JumpIfEqual {7639}
	2931 Move X8, [X25]
	2932 Move X1, X0
	2933 Move X0, X25
	2934 Move X9, [X8+1368]
	2935 Move X2, [X8+1376]
	2936 NotImplemented "Instruction BLR not yet implemented."
	2937 Move X0, [X19+744]
	2938 Compare X0, 0
	2939 JumpIfEqual {7639}
	2940 Move W8, [X19+1024]
	2941 Move X2, X31
	2942 Move [X0+1024], W8
	2943 Move W1, [X19+1172]
	2944 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	2945 Move X0, [X19+744]
	2946 Compare X0, 0
	2947 JumpIfEqual {7639}
	2948 Move X8, [X0]
	2949 Move W1, W31
	2950 Move W2, W31
	2951 Move X9, [X8+2008]
	2952 Move X3, [X8+2016]
	2953 NotImplemented "Instruction BLR not yet implemented."
	2954 Move W8, 1
	2955 Move [X19+760], W8
	2956 Move W8, [X26]
	2957 Move W9, 3
	2958 Move [X31+4188], W9
	2959 Move [X31+4184], W8
	2960 Move X8, -50139136
	2961 Move V0, [X8+2912]
	2962 Move X26, [X31+352]
	2963 Move TEMP, 0
	2964 Not TEMP
	2965 Move W8, TEMP
	2966 Move [X31+4152], W8
	2967 Move [X26], W31
	2968 Move [X31+4184], D0
	2969 Move W9, 1
	2970 NotImplemented "Instruction LSLV not yet implemented."
	2971 Move X9, 1
	2972 NotImplemented "Instruction MOVK not yet implemented."
	2973 And X31, X8, X9
	2974 Add X27, X31, 3984
	2975 NotImplemented "Instruction CMP not yet implemented."
	2976 Move W8, 0x200B
	2977 NotImplemented "Instruction CMP not yet implemented."
	2978 Move W8, 0x2060
	2979 NotImplemented "Instruction CMP not yet implemented."
	2980 Move X8, [X23]
	2981 Compare X8, 0
	2982 JumpIfEqual {7639}
	2983 Move X9, [X8+80]
	2984 Compare X9, 0
	2985 JumpIfEqual {7639}
	2986 NotImplemented "Instruction LDRSW not yet implemented."
	2987 Move W11, [X9+24]
	2988 NotImplemented "Instruction CMP not yet implemented."
	2989 Move W11, 92
	2990 NotImplemented "Instruction MADD not yet implemented."
	2991 Move W10, [X9+44]
	2992 Add W10, W10, 1
	2993 Move [X9+44], W10
	2994 Move W9, [X8+32]
	2995 Add W9, W9, 1
	2996 Move [X8+32], W9
	2997 Move W8, [X31+4204]
	2998 NotImplemented "Instruction CMP not yet implemented."
	2999 Move X8, [X23]
	3000 Compare X8, 0
	3001 JumpIfEqual {7639}
	3002 Move X8, [X8+80]
	3003 Compare X8, 0
	3004 JumpIfEqual {7639}
	3005 NotImplemented "Instruction LDRSW not yet implemented."
	3006 Move W10, [X8+24]
	3007 NotImplemented "Instruction CMP not yet implemented."
	3008 Move W10, 92
	3009 NotImplemented "Instruction MADD not yet implemented."
	3010 Move X8, [X19+872]
	3011 Move V2, [X19+696]
	3012 Move W9, 1
	3013 Move [X19+708], W9
	3014 Compare X8, 0
	3015 JumpIfEqual {7639}
	3016 Move V3, [X31+224]
	3017 Move V0, [X19+1240]
	3018 Multiply S2, S3, S2
	3019 Add S1, S1, S2
	3020 Move X8, [X8+56]
	3021 Compare X8, 0
	3022 JumpIfEqual {7639}
	3023 NotImplemented "Instruction LDRSW not yet implemented."
	3024 Move W11, [X8+24]
	3025 NotImplemented "Instruction CMP not yet implemented."
	3026 Subtract W10, W9, 1
	3027 NotImplemented "Instruction CMP not yet implemented."
	3028 NotImplemented "Instruction SMADDL not yet implemented."
	3029 NotImplemented "Instruction LDRH not yet implemented."
	3030 Move V2, [X19+1208]
	3031 NotImplemented "Instruction NOP not yet implemented."
	3032 NotImplemented "Instruction MADD not yet implemented."
	3033 Move V3, [X11+344]
	3034 NotImplemented "Instruction CMP not yet implemented."
	3035 Move W12, [X31+124]
	3036 Add S1, S1, S2
	3037 Add S0, S1, S0
	3038 NotImplemented "Instruction CSET not yet implemented."
	3039 Or W11, W12, W11
	3040 Subtract S10, S0, S3
	3041 Move TEMP, X11
	3042 And TEMP, TEMP, 1
	3043 Compare TEMP, 1
	3044 JumpIfEqual {3050}
	3045 Move V0, [X31+188]
	3046 NotImplemented "Instruction FCMP not yet implemented."
	3047 Move W11, [X19+736]
	3048 Compare W11, 0
	3049 JumpIfEqual {3132}
	3050 NotImplemented "Instruction MADD not yet implemented."
	3051 NotImplemented "Instruction LDRH not yet implemented."
	3052 NotImplemented "Instruction CMP not yet implemented."
	3053 Move W8, 1
	3054 Move [X31+124], W8
	3055 Move W8, [X19+568]
	3056 Move W9, [X31+112]
	3057 And W8, W9, W8
	3058 Move TEMP, X8
	3059 And TEMP, TEMP, 1
	3060 Compare TEMP, 1
	3061 JumpIfNotEqual {3077}
	3062 Move V0, [X19+720]
	3063 Move V1, [X19+724]
	3064 Move W8, 0x42C80000
	3065 Move S2, W8
	3066 NotImplemented "Instruction FDIV not yet implemented."
	3067 NotImplemented "Instruction FCMP not yet implemented."
	3068 Move W8, [X19+580]
	3069 Move W9, [X19+584]
	3070 NotImplemented "Instruction CMP not yet implemented."
	3071 Move V1, [X19+484]
	3072 Move V0, [X19+592]
	3073 NotImplemented "Instruction FCMP not yet implemented."
	3074 Move W8, [X19+580]
	3075 Move W9, [X19+584]
	3076 NotImplemented "Instruction CMP not yet implemented."
	3077 Move X22, 0x69A000
	3078 Move X22, [X22+1000]
	3079 Move X0, [X22]
	3080 Move W8, [X0+224]
	3081 Compare W8, 0
	3082 JumpIfNotEqual {3085}
	3083 Call 0x1C17DFC
	3084 Move X0, [X22]
	3085 Move X8, [X0+184]
	3086 Move W9, [X31+52]
	3087 Move W22, [X8+3704]
	3088 NotImplemented "Instruction CMP not yet implemented."
	3089 Add W31, W22, 1
	3090 Move W9, [X31+112]
	3091 Xor W9, W9, 1
	3092 Move TEMP, X9
	3093 And TEMP, TEMP, 1
	3094 Compare TEMP, 1
	3095 JumpIfEqual {3143}
	3096 Move W9, [X0+224]
	3097 Compare W9, 0
	3098 JumpIfNotEqual {3104}
	3099 Call 0x1C17DFC
	3100 Move X8, 0x69A000
	3101 Move X8, [X8+1000]
	3102 Move X8, [X8]
	3103 Move X8, [X8+184]
	3104 Add X1, X8, 3704
	3105 Move X0, X19
	3106 Move X2, X31
	3107 Call TMP_Text.RestoreWordWrappingState, X0, X1
	3108 Move [X31+4152], W0
	3109 Move X8, [X19+872]
	3110 Compare X8, 0
	3111 JumpIfEqual {7639}
	3112 Move X9, [X8+56]
	3113 Compare X9, 0
	3114 JumpIfEqual {7639}
	3115 Move X8, [X31+352]
	3116 Move W10, [X9+24]
	3117 Move W8, [X8]
	3118 Subtract W8, W8, 1
	3119 NotImplemented "Instruction CMP not yet implemented."
	3120 NotImplemented "Instruction SMADDL not yet implemented."
	3121 NotImplemented "Instruction LDRH not yet implemented."
	3122 NotImplemented "Instruction CMP not yet implemented."
	3123 Move X26, [X31+352]
	3124 Move W9, 45
	3125 Move [X31+4188], W9
	3126 Subtract W9, W0, 1
	3127 Move [X31+124], W31
	3128 Move [X31+4184], W8
	3129 Move [X31+4152], W9
	3130 Move [X26], W8
	3131 Move [X31+52], W22
	3132 Move X26, [X31+352]
	3133 Move W8, 45
	3134 Move [X31+4188], W8
	3135 Subtract W8, W0, 1
	3136 Move [X31+124], W31
	3137 Move [X31+4184], W10
	3138 Move [X31+4152], W8
	3139 Move [X26], W10
	3140 Move X29, 0x69A000
	3141 Move X29, [X29+1000]
	3142 Move [X31+52], W22
	3143 Move V0, [X31+188]
	3144 NotImplemented "Instruction FCMP not yet implemented."
	3145 Move W8, [X19+740]
	3146 Add W31, W8, 1
	3147 Move W8, [X19+1172]
	3148 Move [X19+740], W8
	3149 Move W8, [X19+568]
	3150 Compare W8, 0
	3151 JumpIfEqual {3173}
	3152 Move V1, [X19+700]
	3153 Move V0, [X19+712]
	3154 NotImplemented "Instruction FCMP not yet implemented."
	3155 Move W8, [X19+580]
	3156 Move W9, [X19+584]
	3157 NotImplemented "Instruction CMP not yet implemented."
	3158 Move V0, [X19+720]
	3159 Move V1, [X19+724]
	3160 Move W8, 0x42C80000
	3161 Move S2, W8
	3162 NotImplemented "Instruction FDIV not yet implemented."
	3163 NotImplemented "Instruction FCMP not yet implemented."
	3164 Move W8, [X19+580]
	3165 Move W9, [X19+584]
	3166 NotImplemented "Instruction CMP not yet implemented."
	3167 Move V1, [X19+484]
	3168 Move V0, [X19+592]
	3169 NotImplemented "Instruction FCMP not yet implemented."
	3170 Move W8, [X19+580]
	3171 Move W9, [X19+584]
	3172 NotImplemented "Instruction CMP not yet implemented."
	3173 Move W8, [X19+736]
	3174 NotImplemented "Instruction CMP not yet implemented."
	3175 Move X11, -49442816
	3176 Add X11, X11, 2922
	3177 NotImplemented "Instruction ADR not yet implemented."
	3178 NotImplemented "Instruction LDRH not yet implemented."
	3179 Add X9, X9, X10
	3180 CallNoReturn X9
	3181 Move W1, [X31+4152]
	3182 Move V3, [X19+764]
	3183 Move V0, [X31+96]
	3184 Move V2, [X31+224]
	3185 Move V4, [X31+216]
	3186 Move V5, [X31+296]
	3187 Move V6, [X31+232]
	3188 Move V7, [X31+88]
	3189 Add X2, X31, 4096
	3190 Add X3, X31, 4096
	3191 Add X2, X2, 100
	3192 Add X3, X3, 104
	3193 Move X0, X19
	3194 Move V1, V13
	3195 Move X4, X31
	3196 Call TMP_Text.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, V7, X2, X3
	3197 Move W8, 1
	3198 Move [X31+124], W31
	3199 Move [X31+112], W8
	3200 Move W8, 1
	3201 Move [X31+108], W8
	3202 Move X29, 0x69A000
	3203 Move X29, [X29+1000]
	3204 Move X26, [X31+352]
	3205 Add X27, X31, 3984
	3206 Move W25, [X31+4204]
	3207 Move [X31+124], W31
	3208 Move V1, [X31+192]
	3209 NotImplemented "Instruction CMP not yet implemented."
	3210 Add X27, X31, 3984
	3211 NotImplemented "Instruction CMP not yet implemented."
	3212 Move X8, [X23]
	3213 Compare X8, 0
	3214 JumpIfEqual {7639}
	3215 Move X9, [X8+56]
	3216 Compare X9, 0
	3217 JumpIfEqual {7639}
	3218 Move X10, [X31+352]
	3219 Move W11, [X9+24]
	3220 Move W10, [X10]
	3221 NotImplemented "Instruction CMP not yet implemented."
	3222 Move X11, W10
	3223 NotImplemented "Instruction MADD not yet implemented."
	3224 Move [X9+404], W31
	3225 Move [X19+1188], W10
	3226 Move X9, [X8+80]
	3227 Compare X9, 0
	3228 JumpIfEqual {7639}
	3229 NotImplemented "Instruction LDRSW not yet implemented."
	3230 Move W11, [X9+24]
	3231 NotImplemented "Instruction CMP not yet implemented."
	3232 Move W11, 92
	3233 NotImplemented "Instruction MADD not yet implemented."
	3234 Move W10, [X9+44]
	3235 Add W10, W10, 1
	3236 Move [X9+44], W10
	3237 Move W9, [X8+32]
	3238 Add W9, W9, 1
	3239 Move [X8+32], W9
	3240 Move X8, [X23]
	3241 Compare X8, 0
	3242 JumpIfEqual {7639}
	3243 Move X8, [X8+56]
	3244 Compare X8, 0
	3245 JumpIfEqual {7639}
	3246 Move X9, [X31+352]
	3247 Move W10, [X8+24]
	3248 NotImplemented "Instruction LDRSW not yet implemented."
	3249 NotImplemented "Instruction CMP not yet implemented."
	3250 NotImplemented "Instruction MADD not yet implemented."
	3251 Move [X8+404], W31
	3252 Move W8, [X19+468]
	3253 Move W9, 324
	3254 Move W10, 1260
	3255 NotImplemented "Instruction CMP not yet implemented."
	3256 Move W8, [X19+1604]
	3257 NotImplemented "Instruction CSEL not yet implemented."
	3258 Move W1, [X19]
	3259 NotImplemented "Instruction CMP not yet implemented."
	3260 Compare W8, 0
	3261 JumpIfNotEqual {3273}
	3262 Move X8, [X19]
	3263 Move V0, [X31+320]
	3264 Move X0, X19
	3265 Move X9, [X8+2232]
	3266 Move X2, [X8+2240]
	3267 NotImplemented "Instruction BLR not yet implemented."
	3268 Move X8, [X19]
	3269 Move X0, X19
	3270 Move X9, [X8+2248]
	3271 Move X2, [X8+2256]
	3272 NotImplemented "Instruction BLR not yet implemented."
	3273 Move X8, [X31+352]
	3274 Move W9, [X31+108]
	3275 Move W8, [X8]
	3276 Move TEMP, X9
	3277 And TEMP, TEMP, 1
	3278 Compare TEMP, 1
	3279 JumpIfNotEqual {3282}
	3280 Move X9, [X31+136]
	3281 Move [X9+496], W8
	3282 Move W10, [X19+1196]
	3283 Move X9, [X19+872]
	3284 Move [X19+1188], W8
	3285 Add W10, W10, 1
	3286 Move [X19+1196], W10
	3287 Compare X9, 0
	3288 JumpIfEqual {7639}
	3289 Move X8, [X9+80]
	3290 Compare X8, 0
	3291 JumpIfEqual {7639}
	3292 NotImplemented "Instruction LDRSW not yet implemented."
	3293 Move W10, [X8+24]
	3294 NotImplemented "Instruction CMP not yet implemented."
	3295 Move W10, 92
	3296 NotImplemented "Instruction MADD not yet implemented."
	3297 Move [X31+108], W31
	3298 Move [X8+96], S8
	3299 Move [X8+104], S9
	3300 Move W8, [X19+736]
	3301 NotImplemented "Instruction CMP not yet implemented."
	3302 Move W8, [X31+4204]
	3303 NotImplemented "Instruction CMP not yet implemented."
	3304 Xor W8, W20, 1
	3305 Compare W8, 0
	3306 JumpIfEqual {3505}
	3307 Move X8, [X19+1624]
	3308 Compare X8, 0
	3309 JumpIfEqual {7639}
	3310 Move V8, [X19+488]
	3311 Add X0, X8, 80
	3312 Move X1, X31
	3313 Call FaceInfo.get_pointSize, X0
	3314 Move X8, [X19+1624]
	3315 Compare X8, 0
	3316 JumpIfEqual {7639}
	3317 Move W25, W0
	3318 Add X0, X8, 80
	3319 Move X1, X31
	3320 Call FaceInfo.get_scale, X0
	3321 Move W9, [X19+773]
	3322 Move V1, [X31+152]
	3323 Move X8, [X19+1616]
	3324 Move S2, 1
	3325 NotImplemented "Instruction CMP not yet implemented."
	3326 NotImplemented "Instruction FCSEL not yet implemented."
	3327 Compare X8, 0
	3328 JumpIfEqual {7639}
	3329 Move X0, [X8+32]
	3330 Compare X0, 0
	3331 JumpIfEqual {7639}
	3332 Move V10, [X19+1028]
	3333 Move V11, [X8+44]
	3334 NotImplemented "Instruction SCVTF not yet implemented."
	3335 NotImplemented "Instruction FDIV not yet implemented."
	3336 Move X1, X31
	3337 Multiply S8, S1, S0
	3338 Call Glyph.get_scale, X0
	3339 Move X9, [X31+176]
	3340 Multiply S1, S8, S9
	3341 Multiply S1, S10, S1
	3342 Move W8, [X31+4204]
	3343 Move V10, [X9]
	3344 Move X9, [X31+168]
	3345 Multiply S1, S1, S11
	3346 NotImplemented "Instruction CMP not yet implemented."
	3347 Multiply S8, S1, S0
	3348 Move V9, [X9]
	3349 Move W8, [X19+1172]
	3350 Move W9, [X19+1176]
	3351 NotImplemented "Instruction CMP not yet implemented."
	3352 Move X9, [X23]
	3353 Compare X9, 0
	3354 JumpIfEqual {7639}
	3355 Move X9, [X9+56]
	3356 Compare X9, 0
	3357 JumpIfEqual {7639}
	3358 Move W10, [X9+24]
	3359 Subtract W8, W8, 1
	3360 NotImplemented "Instruction CMP not yet implemented."
	3361 Move X10, [X19+1624]
	3362 Compare X10, 0
	3363 JumpIfEqual {7639}
	3364 NotImplemented "Instruction SMADDL not yet implemented."
	3365 Move V9, [X8+96]
	3366 Add X0, X10, 80
	3367 Move X1, X31
	3368 Call FaceInfo.get_pointSize, X0
	3369 Move X8, [X19+1624]
	3370 Compare X8, 0
	3371 JumpIfEqual {7639}
	3372 Move W25, W0
	3373 Add X0, X8, 80
	3374 Move X1, X31
	3375 Call FaceInfo.get_scale, X0
	3376 Move W9, [X19+773]
	3377 Move V8, V0
	3378 Move V0, [X31+152]
	3379 Move X8, [X19+1616]
	3380 NotImplemented "Instruction CMP not yet implemented."
	3381 Move S1, 1
	3382 NotImplemented "Instruction FCSEL not yet implemented."
	3383 Compare X8, 0
	3384 JumpIfEqual {7639}
	3385 Move X0, [X8+32]
	3386 Compare X0, 0
	3387 JumpIfEqual {7639}
	3388 Move V11, [X19+1028]
	3389 Move V12, [X8+44]
	3390 Move X1, X31
	3391 Call Glyph.get_scale, X0
	3392 Move X8, [X23]
	3393 Compare X8, 0
	3394 JumpIfEqual {7639}
	3395 Move X8, [X8+80]
	3396 Compare X8, 0
	3397 JumpIfEqual {7639}
	3398 NotImplemented "Instruction LDRSW not yet implemented."
	3399 Move W10, [X8+24]
	3400 NotImplemented "Instruction CMP not yet implemented."
	3401 NotImplemented "Instruction SCVTF not yet implemented."
	3402 Move W10, 92
	3403 NotImplemented "Instruction FDIV not yet implemented."
	3404 NotImplemented "Instruction MADD not yet implemented."
	3405 Multiply S1, S1, S8
	3406 Multiply S1, S1, S10
	3407 Move S10, [X8+96]
	3408 Move S9, [X8+100]
	3409 Multiply S1, S11, S1
	3410 Multiply S1, S1, S12
	3411 Multiply S8, S1, S0
	3412 Move V12, [X19+1240]
	3413 Move S0, W31
	3414 Move S11, W31
	3415 NotImplemented "Instruction FCMP not yet implemented."
	3416 Move W8, [X19+708]
	3417 Move S11, W31
	3418 Compare W8, 0
	3419 JumpIfNotEqual {3423}
	3420 Move V1, [X19+1224]
	3421 Move V2, [X19+1232]
	3422 Subtract S11, S1, S2
	3423 Move V14, [X19+1208]
	3424 Move V15, [X19+1228]
	3425 Move W8, [X19+240]
	3426 Move V13, [X19+1600]
	3427 Compare W8, 0
	3428 JumpIfNotEqual {3446}
	3429 Move X8, [X19+1616]
	3430 Compare X8, 0
	3431 JumpIfEqual {7639}
	3432 Move X0, [X8+32]
	3433 Compare X0, 0
	3434 JumpIfEqual {7639}
	3435 Add X8, X31, 4096
	3436 Add X8, X8, 112
	3437 Move X1, X31
	3438 Call Glyph.get_metrics, X0
	3439 Move V0, [X27+14]
	3440 Move W8, [X31+4224]
	3441 Add X0, X31, 3984
	3442 Move X1, X31
	3443 Move [X27], V0
	3444 Move [X31+4000], W8
	3445 Call GlyphMetrics.get_horizontalAdvance, X0
	3446 Move V3, [X31+160]
	3447 Move V2, [X19+864]
	3448 Subtract S1, S15, S12
	3449 Subtract S1, S14, S1
	3450 Subtract S3, S3, S10
	3451 Subtract S3, S3, S9
	3452 Add S5, S1, S11
	3453 NotImplemented "Instruction FCMP not yet implemented."
	3454 Move S1, -1
	3455 Move X8, -50155520
	3456 NotImplemented "Instruction FCCMP not yet implemented."
	3457 Move V4, [X8+400]
	3458 NotImplemented "Instruction FCSEL not yet implemented."
	3459 Move V3, [X31+188]
	3460 NotImplemented "Instruction CMP not yet implemented."
	3461 Move S2, 1
	3462 NotImplemented "Instruction FCSEL not yet implemented."
	3463 NotImplemented "Instruction FCMP not yet implemented."
	3464 Move V3, [X19+724]
	3465 Move S5, 1
	3466 NotImplemented "Instruction FABS not yet implemented."
	3467 Multiply S1, S2, S1
	3468 Subtract S3, S5, S3
	3469 Multiply S0, S0, S3
	3470 Multiply S0, S8, S0
	3471 Add S0, S4, S0
	3472 NotImplemented "Instruction FCMP not yet implemented."
	3473 Move X22, 0x699000
	3474 Move X22, [X22+1000]
	3475 Move X0, [X22]
	3476 Move W8, [X0+224]
	3477 Compare W8, 0
	3478 JumpIfNotEqual {3481}
	3479 Call 0x1C17DFC
	3480 Move X0, [X22]
	3481 Move X8, [X0+184]
	3482 Move W2, [X31+4152]
	3483 Move W3, [X19+1172]
	3484 Move X0, X19
	3485 Add X1, X8, 1928
	3486 Move X4, X31
	3487 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	3488 Move X8, [X22]
	3489 Move X9, 0x699000
	3490 Add X0, X31, 4096
	3491 Add X0, X0, 112
	3492 Move X8, [X8+184]
	3493 Move X9, [X9+912]
	3494 Move W2, 888
	3495 Add X1, X8, 1928
	3496 Move X25, [X9]
	3497 Move W9, 0x11F0
	3498 Add X26, X8, X9
	3499 Call 0x3EB2AC0
	3500 Add X1, X31, 4096
	3501 Add X1, X1, 112
	3502 Move X0, X26
	3503 Move X2, X25
	3504 Call TMP_TextProcessingStack`1<WordWrapState>.Push, X0, X1
	3505 Move X10, [X23]
	3506 Compare X10, 0
	3507 JumpIfEqual {7639}
	3508 Move X9, [X10+56]
	3509 Move X26, [X31+352]
	3510 Move V13, [X31+308]
	3511 Compare X9, 0
	3512 JumpIfEqual {7639}
	3513 NotImplemented "Instruction LDRSW not yet implemented."
	3514 Move W8, [X9+24]
	3515 NotImplemented "Instruction CMP not yet implemented."
	3516 Move W8, [X19+1192]
	3517 NotImplemented "Instruction NOP not yet implemented."
	3518 NotImplemented "Instruction MADD not yet implemented."
	3519 Move [X11+100], W8
	3520 Move W12, [X19+1200]
	3521 Move X9, W8
	3522 Move [X11+104], W12
	3523 Move TEMP, X20
	3524 And TEMP, TEMP, 1
	3525 Compare TEMP, 1
	3526 JumpIfEqual {3533}
	3527 Move W11, [X31+4204]
	3528 NotImplemented "Instruction CMP not yet implemented."
	3529 Move W12, 1
	3530 NotImplemented "Instruction LSLV not yet implemented."
	3531 Move W12, 0x2C00
	3532 And W31, W11, W12
	3533 Move X10, [X10+80]
	3534 Compare X10, 0
	3535 JumpIfEqual {7639}
	3536 Move W11, [X10+24]
	3537 NotImplemented "Instruction CMP not yet implemented."
	3538 Move W11, 92
	3539 NotImplemented "Instruction MADD not yet implemented."
	3540 Move W11, [X11+36]
	3541 NotImplemented "Instruction CMP not yet implemented."
	3542 Move X10, [X10+80]
	3543 Compare X10, 0
	3544 JumpIfEqual {7639}
	3545 Move W11, [X10+24]
	3546 NotImplemented "Instruction CMP not yet implemented."
	3547 Move W8, [X19+632]
	3548 Move W11, 92
	3549 NotImplemented "Instruction MADD not yet implemented."
	3550 Move [X9+104], W8
	3551 Move W8, [X31+4204]
	3552 NotImplemented "Instruction CMP not yet implemented."
	3553 Move X22, [X31+336]
	3554 Move X8, [X22]
	3555 Compare X8, 0
	3556 JumpIfEqual {7639}
	3557 Add X0, X8, 80
	3558 Move X1, X31
	3559 Call FaceInfo.get_tabWidth, X0
	3560 Move X8, [X22]
	3561 Compare X8, 0
	3562 JumpIfEqual {7639}
	3563 Move V1, [X8+441]
	3564 Move V2, [X19+1600]
	3565 NotImplemented "Instruction UCVTF not yet implemented."
	3566 Multiply S0, S0, S1
	3567 Multiply S0, S13, S0
	3568 NotImplemented "Instruction FDIV not yet implemented."
	3569 NotImplemented "Instruction FRINTP not yet implemented."
	3570 Multiply S1, S0, S1
	3571 Add S0, S2, S0
	3572 NotImplemented "Instruction FCMP not yet implemented."
	3573 NotImplemented "Instruction FCSEL not yet implemented."
	3574 Move V0, [X19+688]
	3575 NotImplemented "Instruction FCMP not yet implemented."
	3576 Move W9, [X19+240]
	3577 Compare W9, 0
	3578 JumpIfEqual {3633}
	3579 Move X9, [X31+336]
	3580 Move X9, [X9]
	3581 Compare X9, 0
	3582 JumpIfEqual {7639}
	3583 Move V1, [X9+428]
	3584 Move V5, [X31+296]
	3585 Move V2, [X19+724]
	3586 Move V4, [X31+288]
	3587 Move V3, [X19+684]
	3588 Add S1, S5, S1
	3589 Move S5, 1
	3590 Subtract S2, S5, S2
	3591 Move V5, [X31+216]
	3592 Move V0, [X19+1600]
	3593 Multiply S4, S13, S4
	3594 Move W9, 0x200B
	3595 Add S1, S5, S1
	3596 Move V5, [X31+224]
	3597 NotImplemented "Instruction CMP not yet implemented."
	3598 Multiply S1, S5, S1
	3599 Add S1, S4, S1
	3600 Add S1, S3, S1
	3601 Multiply S1, S2, S1
	3602 Subtract S0, S0, S1
	3603 Move [X19+1600], S0
	3604 Compare W29, 0
	3605 JumpIfEqual {3679}
	3606 Move V1, [X19+692]
	3607 Move V2, [X31+224]
	3608 Multiply S1, S2, S1
	3609 Subtract S0, S0, S1
	3610 Move X9, [X31+336]
	3611 Move X9, [X9]
	3612 Compare X9, 0
	3613 JumpIfEqual {7639}
	3614 Move V5, [X31+148]
	3615 Move V2, [X9+428]
	3616 Move V3, [X19+724]
	3617 Move V4, [X19+684]
	3618 Subtract S0, S0, S5
	3619 Move V5, [X31+296]
	3620 Move V1, [X19+1600]
	3621 Move W9, 0x200B
	3622 NotImplemented "Instruction CMP not yet implemented."
	3623 Add S2, S5, S2
	3624 Move S5, 1
	3625 Subtract S3, S5, S3
	3626 Move V5, [X31+224]
	3627 Multiply S2, S5, S2
	3628 Add S0, S0, S2
	3629 Add S0, S4, S0
	3630 Multiply S0, S3, S0
	3631 Add S0, S1, S0
	3632 Move [X19+1600], S0
	3633 Move W8, [X19+1140]
	3634 Compare W8, 0
	3635 JumpIfEqual {3640}
	3636 Move X0, [X31+128]
	3637 Move X1, X31
	3638 Call Matrix4x4.get_lossyScale, X0
	3639 Move V8, V0
	3640 Move S8, 1
	3641 Move V9, [X19+1600]
	3642 Add X0, X31, 4096
	3643 Add X0, X0, 32
	3644 Move X1, X31
	3645 Call GlyphMetrics.get_horizontalAdvance, X0
	3646 Move X8, [X19+256]
	3647 Compare X8, 0
	3648 JumpIfEqual {7639}
	3649 Move V4, [X31+288]
	3650 Multiply S0, S8, S0
	3651 Move V1, [X8+428]
	3652 Move V2, [X19+684]
	3653 Add S0, S4, S0
	3654 Move V4, [X31+296]
	3655 Move V3, [X19+724]
	3656 Multiply S0, S13, S0
	3657 Move W9, 0x200B
	3658 Add S1, S4, S1
	3659 Move V4, [X31+216]
	3660 Add S1, S4, S1
	3661 Move V4, [X31+224]
	3662 Multiply S1, S4, S1
	3663 Add S0, S0, S1
	3664 Move S1, 1
	3665 Add S0, S2, S0
	3666 Subtract S1, S1, S3
	3667 Multiply S0, S1, S0
	3668 Add S0, S9, S0
	3669 Move [X19+1600], S0
	3670 Move W8, [X31+4204]
	3671 NotImplemented "Instruction CMP not yet implemented."
	3672 Compare W29, 0
	3673 JumpIfEqual {3679}
	3674 Move V1, [X19+692]
	3675 Move V2, [X31+224]
	3676 Multiply S1, S2, S1
	3677 Add S0, S0, S1
	3678 Move [X19+1600], S0
	3679 Move X8, [X23]
	3680 Compare X8, 0
	3681 JumpIfEqual {7639}
	3682 Move X9, [X8+56]
	3683 Compare X9, 0
	3684 JumpIfEqual {7639}
	3685 NotImplemented "Instruction LDRSW not yet implemented."
	3686 Move X10, [X9+24]
	3687 NotImplemented "Instruction CMP not yet implemented."
	3688 NotImplemented "Instruction MADD not yet implemented."
	3689 Move [X11+324], S0
	3690 Move W11, [X31+4204]
	3691 NotImplemented "Instruction CMP not yet implemented."
	3692 Subtract W13, W11, 10
	3693 NotImplemented "Instruction CMP not yet implemented."
	3694 NotImplemented "Instruction CMP not yet implemented."
	3695 Move TEMP, 0x2027
	3696 Not TEMP
	3697 Move W13, TEMP
	3698 Add W13, W11, W13
	3699 NotImplemented "Instruction CMP not yet implemented."
	3700 NotImplemented "Instruction CMP not yet implemented."
	3701 Move V0, [X19+1036]
	3702 Move W13, [X31+144]
	3703 Move S1, W31
	3704 Add S0, S0, S1
	3705 NotImplemented "Instruction CMP not yet implemented."
	3706 Move [X19+1600], S0
	3707 NotImplemented "Instruction CMP not yet implemented."
	3708 NotImplemented "Instruction CSET not yet implemented."
	3709 And W13, W20, W13
	3710 Move TEMP, X13
	3711 And TEMP, TEMP, 1
	3712 Compare TEMP, 1
	3713 JumpIfEqual {3716}
	3714 Move W13, [X31+144]
	3715 NotImplemented "Instruction CMP not yet implemented."
	3716 Move V0, [X19+1240]
	3717 NotImplemented "Instruction FCMP not yet implemented."
	3718 Move X8, 0x634000
	3719 Move X8, [X8+1448]
	3720 Move V8, [X19+1224]
	3721 Move V9, [X19+1232]
	3722 Move X0, [X8]
	3723 Move W8, [X0+224]
	3724 Compare W8, 0
	3725 JumpIfNotEqual {3727}
	3726 Call 0x1C17DFC
	3727 Move V1, [X31+100]
	3728 Subtract S8, S8, S9
	3729 NotImplemented "Instruction FABS not yet implemented."
	3730 NotImplemented "Instruction FCMP not yet implemented."
	3731 Move W8, [X19+708]
	3732 Compare W8, 0
	3733 JumpIfNotEqual {3812}
	3734 Move W8, [X19+828]
	3735 Compare W8, 0
	3736 JumpIfNotEqual {3812}
	3737 Move W1, [X19+1176]
	3738 Move W2, [X19+1172]
	3739 Move X0, X19
	3740 Move V0, V8
	3741 Move X3, X31
	3742 Call TMP_Text.AdjustLineOffset, X0, X1, X2, V0
	3743 Move V0, [X19+1220]
	3744 Move V1, [X19+1240]
	3745 Move X20, 0x699000
	3746 Subtract S0, S0, S8
	3747 Add S1, S8, S1
	3748 Move [X19+1220], S0
	3749 Move [X19+1240], S1
	3750 Move X20, [X20+1000]
	3751 Move X0, [X20]
	3752 Move W8, [X0+224]
	3753 Compare W8, 0
	3754 JumpIfNotEqual {3757}
	3755 Call 0x1C17DFC
	3756 Move X0, [X20]
	3757 Move X8, [X0+184]
	3758 Move W10, [X19+1192]
	3759 Move W9, [X8+1964]
	3760 NotImplemented "Instruction CMP not yet implemented."
	3761 Move W9, [X0+224]
	3762 Compare W9, 0
	3763 JumpIfNotEqual {3769}
	3764 Call 0x1C17DFC
	3765 Move X8, 0x699000
	3766 Move X8, [X8+1000]
	3767 Move X8, [X8]
	3768 Move X8, [X8+184]
	3769 Move X9, 0x699000
	3770 Move X9, [X9+904]
	3771 Move W22, 0x11F0
	3772 Add X0, X8, X22
	3773 Add X8, X31, 4096
	3774 Move X1, [X9]
	3775 Add X8, X8, 112
	3776 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	3777 Add X1, X31, 4096
	3778 Add X0, X31, 416
	3779 Add X1, X1, 112
	3780 Move W2, 888
	3781 Call 0x3EB2AC0
	3782 Move X8, 0x699000
	3783 Move X8, [X8+1000]
	3784 Add X1, X31, 416
	3785 Move W2, 888
	3786 Move X20, [X8]
	3787 Move X8, [X20+184]
	3788 Add X0, X8, 1928
	3789 Call 0x3EB2AC0
	3790 Move X8, [X20+184]
	3791 Move X9, 0x699000
	3792 Add X0, X31, 4096
	3793 Add X0, X0, 112
	3794 Move V0, [X8+1980]
	3795 Move V1, [X8+2048]
	3796 Add X1, X8, 1928
	3797 Move W2, 888
	3798 Add S0, S8, S0
	3799 Add S1, S8, S1
	3800 Move [X8+1980], S0
	3801 Move [X8+2048], S1
	3802 Move X9, [X9+912]
	3803 Add X26, X8, X22
	3804 Move X25, [X9]
	3805 Call 0x3EB2AC0
	3806 Add X1, X31, 4096
	3807 Add X1, X1, 112
	3808 Move X0, X26
	3809 Move X2, X25
	3810 Call TMP_TextProcessingStack`1<WordWrapState>.Push, X0, X1
	3811 Move X26, [X31+352]
	3812 Move V1, [X19+1240]
	3813 Move V0, [X19+1228]
	3814 Move V2, [X19+1220]
	3815 Move [X19+828], W31
	3816 Add X8, X31, 101
	3817 Subtract S0, S0, S1
	3818 NotImplemented "Instruction FCMP not yet implemented."
	3819 NotImplemented "Instruction FCSEL not yet implemented."
	3820 Move [X19+1220], S3
	3821 Move W8, [X8+4095]
	3822 Move V2, [X19+1224]
	3823 Compare W8, 0
	3824 JumpIfNotEqual {3826}
	3825 Move [X31+4200], S3
	3826 Move W8, [X19+820]
	3827 Compare W8, 0
	3828 JumpIfEqual {3838}
	3829 Move W8, [X19+1172]
	3830 Move W9, [X19+808]
	3831 NotImplemented "Instruction CMP not yet implemented."
	3832 Move W8, [X19+1192]
	3833 Move W9, [X19+816]
	3834 NotImplemented "Instruction CMP not yet implemented."
	3835 Move W8, 1
	3836 Add X9, X31, 101
	3837 Move [X9+4095], W8
	3838 Move X10, [X23]
	3839 Compare X10, 0
	3840 JumpIfEqual {7639}
	3841 Move X8, [X10+80]
	3842 Compare X8, 0
	3843 JumpIfEqual {7639}
	3844 NotImplemented "Instruction LDRSW not yet implemented."
	3845 Move W11, [X8+24]
	3846 NotImplemented "Instruction CMP not yet implemented."
	3847 Move W11, [X19+1176]
	3848 Move W12, 92
	3849 NotImplemented "Instruction MADD not yet implemented."
	3850 Move [X12+52], W11
	3851 Move W13, [X19+1180]
	3852 Move W14, [X19+1176]
	3853 NotImplemented "Instruction CMP not yet implemented."
	3854 NotImplemented "Instruction CSEL not yet implemented."
	3855 Move [X19+1180], W11
	3856 Move [X12+56], W11
	3857 Move W13, [X19+1172]
	3858 Move [X19+1184], W13
	3859 Move [X12+60], W13
	3860 Move W13, [X19+1188]
	3861 Move W14, [X19+1180]
	3862 NotImplemented "Instruction CMP not yet implemented."
	3863 NotImplemented "Instruction CSEL not yet implemented."
	3864 Move [X31+4156], W13
	3865 Move [X19+1188], W13
	3866 Move W14, [X12+60]
	3867 Move W15, [X12+52]
	3868 Move [X12+64], W13
	3869 Subtract W13, W14, W15
	3870 Add W13, W13, 1
	3871 Move [X12+36], W13
	3872 Move W13, [X19+1196]
	3873 Move [X12+40], W13
	3874 Move X10, [X10+56]
	3875 Compare X10, 0
	3876 JumpIfEqual {7639}
	3877 Move W12, [X10+24]
	3878 NotImplemented "Instruction CMP not yet implemented."
	3879 NotImplemented "Instruction SMADDL not yet implemented."
	3880 Move W10, [X10+284]
	3881 Move W11, 92
	3882 NotImplemented "Instruction MADD not yet implemented."
	3883 Move [X8+112], S0
	3884 Move [X8+108], W10
	3885 Move X10, [X23]
	3886 Compare X10, 0
	3887 JumpIfEqual {7639}
	3888 Move X8, [X10+80]
	3889 Compare X8, 0
	3890 JumpIfEqual {7639}
	3891 NotImplemented "Instruction LDRSW not yet implemented."
	3892 Move W11, [X8+24]
	3893 NotImplemented "Instruction CMP not yet implemented."
	3894 Move X10, [X10+56]
	3895 Compare X10, 0
	3896 JumpIfEqual {7639}
	3897 NotImplemented "Instruction LDRSW not yet implemented."
	3898 Move W12, [X10+24]
	3899 NotImplemented "Instruction CMP not yet implemented."
	3900 NotImplemented "Instruction MADD not yet implemented."
	3901 Move W10, [X10+296]
	3902 Move W11, 92
	3903 Subtract S1, S2, S1
	3904 NotImplemented "Instruction MADD not yet implemented."
	3905 Move [X8+116], W10
	3906 Move [X8+120], S1
	3907 Move X8, [X23]
	3908 Compare X8, 0
	3909 JumpIfEqual {7639}
	3910 Move X11, [X8+80]
	3911 Compare X11, 0
	3912 JumpIfEqual {7639}
	3913 NotImplemented "Instruction LDRSW not yet implemented."
	3914 Move W9, [X11+24]
	3915 NotImplemented "Instruction CMP not yet implemented."
	3916 Move W9, 92
	3917 NotImplemented "Instruction MADD not yet implemented."
	3918 Move V3, [X31+320]
	3919 Move V2, [X9+116]
	3920 Move W10, [X9+36]
	3921 Multiply S3, S13, S3
	3922 Subtract S2, S2, S3
	3923 Move [X9+68], S2
	3924 Move V2, [X31+232]
	3925 NotImplemented "Instruction CMP not yet implemented."
	3926 Move [X9+92], S2
	3927 Move W9, [X19+632]
	3928 Move W10, 92
	3929 NotImplemented "Instruction MADD not yet implemented."
	3930 Move [X10+104], W9
	3931 Move X9, [X31+336]
	3932 Move X14, [X9]
	3933 Compare X14, 0
	3934 JumpIfEqual {7639}
	3935 Move X9, [X8+56]
	3936 Compare X9, 0
	3937 JumpIfEqual {7639}
	3938 NotImplemented "Instruction LDRSW not yet implemented."
	3939 Move X10, [X9+24]
	3940 NotImplemented "Instruction CMP not yet implemented."
	3941 Move V3, [X14+428]
	3942 NotImplemented "Instruction NOP not yet implemented."
	3943 NotImplemented "Instruction MADD not yet implemented."
	3944 Move V2, [X19+684]
	3945 Move W14, [X14+404]
	3946 Move V4, [X19+724]
	3947 Compare W14, 0
	3948 JumpIfNotEqual {3951}
	3949 NotImplemented "Instruction LDRSW not yet implemented."
	3950 NotImplemented "Instruction CMP not yet implemented."
	3951 Move V5, [X31+296]
	3952 Move V6, [X31+224]
	3953 Move W14, [X19+240]
	3954 NotImplemented "Instruction NOP not yet implemented."
	3955 NotImplemented "Instruction MADD not yet implemented."
	3956 Add S3, S5, S3
	3957 Move S5, 1
	3958 Subtract S4, S5, S4
	3959 Move V5, [X31+216]
	3960 NotImplemented "Instruction CMP not yet implemented."
	3961 Move W15, 92
	3962 NotImplemented "Instruction MADD not yet implemented."
	3963 Add S3, S5, S3
	3964 Multiply S3, S6, S3
	3965 Move V5, [X13+324]
	3966 Subtract S2, S3, S2
	3967 Multiply S2, S4, S2
	3968 NotImplemented "Instruction FNEG not yet implemented."
	3969 NotImplemented "Instruction FCSEL not yet implemented."
	3970 Add S2, S5, S2
	3971 Move [X11+88], S2
	3972 Move V4, [X31+104]
	3973 Move V2, [X19+1240]
	3974 Subtract S3, S1, S0
	3975 Add S3, S4, S3
	3976 Move S4, W31
	3977 Subtract S2, S4, S2
	3978 Move [X11+80], S2
	3979 Move [X11+88], S0
	3980 Move [X11+72], S3
	3981 Move [X11+80], S1
	3982 Move W11, [X31+4204]
	3983 NotImplemented "Instruction CMP not yet implemented."
	3984 Subtract W12, W11, 10
	3985 NotImplemented "Instruction CMP not yet implemented."
	3986 NotImplemented "Instruction CMP not yet implemented."
	3987 Move X11, [X19+1144]
	3988 Compare X11, 0
	3989 JumpIfEqual {7639}
	3990 Move X11, [X11+24]
	3991 Move [X31+4152], W11
	3992 Move W11, 3
	3993 Move TEMP, 0x2027
	3994 Not TEMP
	3995 Move W12, TEMP
	3996 Add W12, W11, W12
	3997 NotImplemented "Instruction CMP not yet implemented."
	3998 NotImplemented "Instruction CMP not yet implemented."
	3999 Move X29, 0x699000
	4000 Move X29, [X29+1000]
	4001 Move X0, [X29]
	4002 Move W8, [X0+224]
	4003 Compare W8, 0
	4004 JumpIfNotEqual {4007}
	4005 Call 0x1C17DFC
	4006 Move X0, [X29]
	4007 Move X8, [X0+184]
	4008 Move W2, [X31+4152]
	4009 Move W3, [X19+1172]
	4010 Move X0, X19
	4011 Add X1, X8, 1040
	4012 Move X4, X31
	4013 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4014 Move W9, [X19+1192]
	4015 Move W10, [X19+1172]
	4016 Move X8, [X19+872]
	4017 Move [X19+1196], W31
	4018 Add W1, W9, 1
	4019 Add W9, W10, 1
	4020 Move [X19+1192], W1
	4021 Move [X19+1176], W9
	4022 Compare X8, 0
	4023 JumpIfEqual {7639}
	4024 Move X9, [X8+80]
	4025 Compare X9, 0
	4026 JumpIfEqual {7639}
	4027 Move W9, [X9+24]
	4028 NotImplemented "Instruction CMP not yet implemented."
	4029 Move X0, X19
	4030 Move X2, X31
	4031 Call TMP_Text.ResizeLineExtents, X0, X1
	4032 Move X8, [X19+872]
	4033 Compare X8, 0
	4034 JumpIfEqual {7639}
	4035 Move X8, [X8+56]
	4036 Compare X8, 0
	4037 JumpIfEqual {7639}
	4038 Move W3, [X26]
	4039 Move W9, [X8+24]
	4040 NotImplemented "Instruction CMP not yet implemented."
	4041 Move X9, W3
	4042 Move X10, -50155520
	4043 Move V0, [X19+704]
	4044 Move V1, [X10+532]
	4045 NotImplemented "Instruction NOP not yet implemented."
	4046 NotImplemented "Instruction MADD not yet implemented."
	4047 Move V8, [X8+340]
	4048 NotImplemented "Instruction FCMP not yet implemented."
	4049 Move W8, [X31+4204]
	4050 Move W9, 0x2029
	4051 Move S0, W31
	4052 NotImplemented "Instruction CMP not yet implemented."
	4053 NotImplemented "Instruction CMP not yet implemented."
	4054 Move S1, W31
	4055 Move V1, [X19+716]
	4056 Move V2, [X19+1228]
	4057 Move V3, [X19+700]
	4058 Move V4, [X19+696]
	4059 Move V5, [X19+1240]
	4060 Subtract S0, S0, S2
	4061 Move V2, [X31+88]
	4062 Add S0, S8, S0
	4063 Add S1, S4, S1
	4064 Move W8, W31
	4065 Add S2, S2, S3
	4066 Move V3, [X31+96]
	4067 Multiply S2, S3, S2
	4068 Add S0, S0, S2
	4069 Move V2, [X31+224]
	4070 Multiply S1, S2, S1
	4071 Add S0, S0, S1
	4072 Add S0, S0, S5
	4073 Move W3, [X26]
	4074 NotImplemented "Instruction CMP not yet implemented."
	4075 Move X10, W3
	4076 NotImplemented "Instruction MADD not yet implemented."
	4077 Move W12, [X12+404]
	4078 Compare W12, 0
	4079 JumpIfEqual {4094}
	4080 Move X12, [X31+136]
	4081 NotImplemented "Instruction NOP not yet implemented."
	4082 NotImplemented "Instruction MADD not yet implemented."
	4083 Add X10, X9, 284
	4084 Move V1, [X10]
	4085 Move V0, [X12+560]
	4086 NotImplemented "Instruction INVALID not yet implemented."
	4087 NotImplemented "Instruction INVALID not yet implemented."
	4088 Move [X12+560], D0
	4089 Move V0, [X12+568]
	4090 Move V1, [X9+296]
	4091 NotImplemented "Instruction INVALID not yet implemented."
	4092 NotImplemented "Instruction INVALID not yet implemented."
	4093 Move [X12+568], D0
	4094 Move W9, [X19+736]
	4095 NotImplemented "Instruction CMP not yet implemented."
	4096 NotImplemented "Instruction CMP not yet implemented."
	4097 Move W9, 1
	4098 NotImplemented "Instruction LSLV not yet implemented."
	4099 Move W10, 0x2C00
	4100 And W31, W9, W10
	4101 Move W8, [X19+728]
	4102 Compare W8, 0
	4103 JumpIfNotEqual {4110}
	4104 Move W8, [X19+736]
	4105 NotImplemented "Instruction CMP not yet implemented."
	4106 Move W9, 1
	4107 NotImplemented "Instruction LSLV not yet implemented."
	4108 Move W9, 74
	4109 And W31, W8, W9
	4110 Move W8, [X31+4204]
	4111 Compare W29, 0
	4112 JumpIfEqual {4204}
	4113 Move W9, [X19+730]
	4114 NotImplemented "Instruction CMP not yet implemented."
	4115 Move TEMP, 0x2006
	4116 Not TEMP
	4117 Move W9, TEMP
	4118 Add W9, W8, W9
	4119 NotImplemented "Instruction CMP not yet implemented."
	4120 Move W10, 1
	4121 NotImplemented "Instruction LSLV not yet implemented."
	4122 Move X10, 1025
	4123 NotImplemented "Instruction MOVK not yet implemented."
	4124 And X31, X9, X10
	4125 NotImplemented "Instruction CMP not yet implemented."
	4126 Move W9, 0x2060
	4127 NotImplemented "Instruction CMP not yet implemented."
	4128 Move X29, 0x699000
	4129 Move X29, [X29+1000]
	4130 Move X0, [X29]
	4131 Move W8, [X0+224]
	4132 Compare W8, 0
	4133 JumpIfNotEqual {4137}
	4134 Call 0x1C17DFC
	4135 Move W3, [X26]
	4136 Move X0, [X29]
	4137 Move X8, [X0+184]
	4138 Move W2, [X31+4152]
	4139 Move X0, X19
	4140 Move X4, X31
	4141 Add X1, X8, 152
	4142 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4143 Move X8, [X29]
	4144 Move TEMP, 0
	4145 Not TEMP
	4146 Move W9, TEMP
	4147 Move [X31+112], W31
	4148 Move X8, [X8+184]
	4149 Move [X8+3704], W9
	4150 Move W8, [X31+4204]
	4151 Move W9, 0x2029
	4152 NotImplemented "Instruction CMP not yet implemented."
	4153 NotImplemented "Instruction CMP not yet implemented."
	4154 Move S1, W31
	4155 Move V1, [X19+716]
	4156 Move V2, [X19+696]
	4157 Move V3, [X19+1240]
	4158 Move W8, 1
	4159 Add S1, S2, S1
	4160 Move V2, [X31+224]
	4161 Multiply S1, S2, S1
	4162 Add S0, S0, S1
	4163 Add S0, S3, S0
	4164 Move [X19+1240], S0
	4165 Move [X19+708], W8
	4166 Move X0, [X29]
	4167 Move W8, [X0+224]
	4168 Compare W8, 0
	4169 JumpIfNotEqual {4173}
	4170 Call 0x1C17DFC
	4171 Move X0, [X29]
	4172 Move W3, [X26]
	4173 Move X8, [X0+184]
	4174 Move V0, [X19+1032]
	4175 Move V1, [X19+1036]
	4176 Move S3, W31
	4177 Move V2, [X8+5544]
	4178 Add S0, S0, S3
	4179 Add S0, S0, S1
	4180 Move [X19+1232], S8
	4181 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	4182 Move [X19+1224], D1
	4183 Move [X19+1600], S0
	4184 Move W2, [X31+4152]
	4185 Add X1, X8, 152
	4186 Move X0, X19
	4187 Move X4, X31
	4188 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4189 Move X8, [X29]
	4190 Move W2, [X31+4152]
	4191 Move W3, [X19+1172]
	4192 Move X0, X19
	4193 Move X8, [X8+184]
	4194 Move X4, X31
	4195 Add X1, X8, 2816
	4196 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4197 Move W8, [X19+1172]
	4198 Move W9, 1
	4199 Add W8, W8, 1
	4200 Move [X19+1172], W8
	4201 Move W8, 1
	4202 Move [X31+108], W8
	4203 Move [X31+112], W9
	4204 NotImplemented "Instruction CMP not yet implemented."
	4205 Move W9, 0x200B
	4206 NotImplemented "Instruction CMP not yet implemented."
	4207 NotImplemented "Instruction CMP not yet implemented."
	4208 Move W9, [X19+730]
	4209 Compare W9, 0
	4210 JumpIfEqual {4216}
	4211 Move W9, [X31+112]
	4212 Move TEMP, X9
	4213 And TEMP, TEMP, 1
	4214 Compare TEMP, 1
	4215 JumpIfEqual {4267}
	4216 Move TEMP, 0xAC00
	4217 Not TEMP
	4218 Move W9, TEMP
	4219 Add W9, W8, W9
	4220 Move W10, 0x2BFE
	4221 NotImplemented "Instruction CMP not yet implemented."
	4222 Move TEMP, 0x1100
	4223 Not TEMP
	4224 Move W9, TEMP
	4225 Add W9, W8, W9
	4226 NotImplemented "Instruction CMP not yet implemented."
	4227 Move TEMP, 0xA960
	4228 Not TEMP
	4229 Move W9, TEMP
	4230 Add W9, W8, W9
	4231 NotImplemented "Instruction CMP not yet implemented."
	4232 Move X0, X31
	4233 Call TMP_Settings.get_useModernHangulLineBreakingRules
	4234 Move TEMP, X0
	4235 And TEMP, TEMP, 1
	4236 Compare TEMP, 1
	4237 JumpIfNotEqual {4275}
	4238 Move W8, [X31+4204]
	4239 Move TEMP, 0xFF00
	4240 Not TEMP
	4241 Move W9, TEMP
	4242 Add W9, W8, W9
	4243 NotImplemented "Instruction CMP not yet implemented."
	4244 Move TEMP, 0xFE30
	4245 Not TEMP
	4246 Move W9, TEMP
	4247 Add W9, W8, W9
	4248 NotImplemented "Instruction CMP not yet implemented."
	4249 Move TEMP, 0x2E80
	4250 Not TEMP
	4251 Move W9, TEMP
	4252 Add W9, W8, W9
	4253 Move W10, 0x717E
	4254 NotImplemented "Instruction CMP not yet implemented."
	4255 Move TEMP, 0xF900
	4256 Not TEMP
	4257 Move W9, TEMP
	4258 Add W9, W8, W9
	4259 NotImplemented "Instruction CMP not yet implemented."
	4260 Move W9, [X31+112]
	4261 Move TEMP, X9
	4262 And TEMP, TEMP, 1
	4263 Compare TEMP, 1
	4264 JumpIfNotEqual {4499}
	4265 Compare W29, 0
	4266 JumpIfNotEqual {4440}
	4267 Move W9, [X31+124]
	4268 NotImplemented "Instruction CMP not yet implemented."
	4269 NotImplemented "Instruction CSET not yet implemented."
	4270 Or W8, W9, W8
	4271 Move TEMP, X8
	4272 And TEMP, TEMP, 1
	4273 Compare TEMP, 1
	4274 JumpIfNotEqual {4440}
	4275 Move X0, X31
	4276 Call TMP_Settings.get_linebreakingRules
	4277 Compare X0, 0
	4278 JumpIfEqual {7639}
	4279 Move X0, [X0+16]
	4280 Compare X0, 0
	4281 JumpIfEqual {7639}
	4282 Move X8, 0x699000
	4283 Move W1, [X31+4204]
	4284 Move X8, [X8+792]
	4285 Move X2, [X8]
	4286 Call Dictionary`2<Int32, Char>.ContainsKey, X0, X1
	4287 Move W8, [X26]
	4288 Move W9, [X31+144]
	4289 NotImplemented "Instruction CMP not yet implemented."
	4290 Move W8, [X31+84]
	4291 NotImplemented "Instruction CSEL not yet implemented."
	4292 Move [X31+84], W8
	4293 Move X0, X31
	4294 Call TMP_Settings.get_linebreakingRules
	4295 Compare X0, 0
	4296 JumpIfEqual {7639}
	4297 Move X8, [X23]
	4298 Compare X8, 0
	4299 JumpIfEqual {7639}
	4300 Move X8, [X8+56]
	4301 Compare X8, 0
	4302 JumpIfEqual {7639}
	4303 Move W9, [X26]
	4304 Move W10, [X8+24]
	4305 Add W9, W9, 1
	4306 NotImplemented "Instruction CMP not yet implemented."
	4307 Move X0, [X0+24]
	4308 Compare X0, 0
	4309 JumpIfEqual {7639}
	4310 NotImplemented "Instruction SMADDL not yet implemented."
	4311 NotImplemented "Instruction LDRH not yet implemented."
	4312 Move X8, 0x699000
	4313 Move X8, [X8+792]
	4314 Move X2, [X8]
	4315 Call Dictionary`2<Int32, Char>.ContainsKey, X0, X1
	4316 Move W8, [X31+84]
	4317 Move TEMP, X8
	4318 And TEMP, TEMP, 1
	4319 Compare TEMP, 1
	4320 JumpIfEqual {4430}
	4321 Move TEMP, X0
	4322 And TEMP, TEMP, 1
	4323 Compare TEMP, 1
	4324 JumpIfNotEqual {4472}
	4325 Move W8, [X31+112]
	4326 Move TEMP, X8
	4327 And TEMP, TEMP, 1
	4328 Compare TEMP, 1
	4329 JumpIfNotEqual {4498}
	4330 Compare W29, 0
	4331 JumpIfEqual {4347}
	4332 Move X20, 0x699000
	4333 Move X20, [X20+1000]
	4334 Move X0, [X20]
	4335 Move W8, [X0+224]
	4336 Compare W8, 0
	4337 JumpIfNotEqual {4340}
	4338 Call 0x1C17DFC
	4339 Move X0, [X20]
	4340 Move X8, [X0+184]
	4341 Move W2, [X31+4152]
	4342 Move W3, [X19+1172]
	4343 Move X0, X19
	4344 Add X1, X8, 3704
	4345 Move X4, X31
	4346 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4347 Move X29, 0x699000
	4348 Move X29, [X29+1000]
	4349 Move X0, [X29]
	4350 Move W8, [X0+224]
	4351 Compare W8, 0
	4352 JumpIfNotEqual {4355}
	4353 Call 0x1C17DFC
	4354 Move X0, [X29]
	4355 Move X8, [X0+184]
	4356 Move W2, [X31+4152]
	4357 Move W3, [X19+1172]
	4358 Move X0, X19
	4359 Add X1, X8, 152
	4360 Move X4, X31
	4361 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4362 Move [X31+84], W31
	4363 Move X25, X8
	4364 Add X25, X25, 88
	4365 Move X9, [X25]
	4366 Compare X9, 0
	4367 JumpIfEqual {7639}
	4368 Move W10, [X19+1200]
	4369 Move W9, [X9+24]
	4370 Add W26, W10, 1
	4371 NotImplemented "Instruction CMP not yet implemented."
	4372 Move X8, 0x698000
	4373 Move X8, [X8+872]
	4374 Move X0, [X8]
	4375 Move W8, [X0+224]
	4376 Compare W8, 0
	4377 JumpIfNotEqual {4379}
	4378 Call 0x1C17DFC
	4379 Move X8, 0x698000
	4380 Move X8, [X8+856]
	4381 Move W2, 1
	4382 Move X0, X25
	4383 Move W1, W26
	4384 Move X3, [X8]
	4385 Call TMP_TextInfo.Resize, X0, X1, X2
	4386 Move X8, [X23]
	4387 Compare X8, 0
	4388 JumpIfEqual {7639}
	4389 Move X9, [X8+88]
	4390 Compare X9, 0
	4391 JumpIfEqual {7639}
	4392 NotImplemented "Instruction LDRSW not yet implemented."
	4393 Move W11, [X9+24]
	4394 Move X26, [X31+352]
	4395 NotImplemented "Instruction CMP not yet implemented."
	4396 Move V0, [X19+1204]
	4397 Move W14, 20
	4398 NotImplemented "Instruction MADD not yet implemented."
	4399 Move V1, [X12+48]
	4400 Move [X12+40], S0
	4401 Move V0, [X19+1220]
	4402 And X13, X10, 0
	4403 NotImplemented "Instruction FCMP not yet implemented."
	4404 NotImplemented "Instruction FCSEL not yet implemented."
	4405 Move [X12+48], S0
	4406 Move W3, [X19+1172]
	4407 Or W12, W3, W13
	4408 Compare W12, 0
	4409 JumpIfEqual {4488}
	4410 Move W15, 20
	4411 Subtract W12, W3, 1
	4412 Move X8, [X8+56]
	4413 Compare X8, 0
	4414 JumpIfEqual {7639}
	4415 Move W14, [X8+24]
	4416 NotImplemented "Instruction CMP not yet implemented."
	4417 NotImplemented "Instruction UMADDL not yet implemented."
	4418 Move W8, [X8+104]
	4419 NotImplemented "Instruction CMP not yet implemented."
	4420 Move W8, [X31+144]
	4421 NotImplemented "Instruction CMP not yet implemented."
	4422 NotImplemented "Instruction MADD not yet implemented."
	4423 Move W9, [X31+144]
	4424 Move W3, W9
	4425 Move [X8+36], W9
	4426 Move TEMP, X0
	4427 And TEMP, TEMP, 1
	4428 Compare TEMP, 1
	4429 JumpIfNotEqual {4472}
	4430 Move W9, [X31+112]
	4431 NotImplemented "Instruction CMP not yet implemented."
	4432 NotImplemented "Instruction CSET not yet implemented."
	4433 NotImplemented "Instruction ORN not yet implemented."
	4434 Move TEMP, X8
	4435 And TEMP, TEMP, 1
	4436 Compare TEMP, 1
	4437 JumpIfEqual {4500}
	4438 Compare W29, 0
	4439 JumpIfEqual {4455}
	4440 Move X20, 0x698000
	4441 Move X20, [X20+1000]
	4442 Move X0, [X20]
	4443 Move W8, [X0+224]
	4444 Compare W8, 0
	4445 JumpIfNotEqual {4448}
	4446 Call 0x1C17DFC
	4447 Move X0, [X20]
	4448 Move X8, [X0+184]
	4449 Move W2, [X31+4152]
	4450 Move W3, [X19+1172]
	4451 Move X0, X19
	4452 Add X1, X8, 3704
	4453 Move X4, X31
	4454 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4455 Move X29, 0x698000
	4456 Move X29, [X29+1000]
	4457 Move X0, [X29]
	4458 Move W8, [X0+224]
	4459 Compare W8, 0
	4460 JumpIfNotEqual {4463}
	4461 Call 0x1C17DFC
	4462 Move X0, [X29]
	4463 Move X8, [X0+184]
	4464 Move W2, [X31+4152]
	4465 Move W3, [X19+1172]
	4466 Move X0, X19
	4467 Add X1, X8, 152
	4468 Move X4, X31
	4469 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4470 Move W8, 1
	4471 Move [X31+112], W8
	4472 Move X29, 0x698000
	4473 Move X29, [X29+1000]
	4474 Move X0, [X29]
	4475 Move W8, [X0+224]
	4476 Compare W8, 0
	4477 JumpIfNotEqual {4480}
	4478 Call 0x1C17DFC
	4479 Move X0, [X29]
	4480 Move X8, [X0+184]
	4481 Move W2, [X31+4152]
	4482 Move W3, [X19+1172]
	4483 Move X0, X19
	4484 Add X1, X8, 152
	4485 Move X4, X31
	4486 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4487 Move [X31+112], W31
	4488 NotImplemented "Instruction MADD not yet implemented."
	4489 Move [X8+32], W3
	4490 Subtract W8, W13, 1
	4491 NotImplemented "Instruction CMP not yet implemented."
	4492 Add X9, X9, 32
	4493 Move W11, 20
	4494 Multiply X10, X10, X11
	4495 NotImplemented "Instruction SMADDL not yet implemented."
	4496 Move [X8+4], W12
	4497 Move [X9], W3
	4498 Move [X31+84], W31
	4499 Move [X31+112], W31
	4500 Move X29, 0x698000
	4501 Move X29, [X29+1000]
	4502 Move X0, [X29]
	4503 Move W8, [X0+224]
	4504 Compare W8, 0
	4505 JumpIfNotEqual {4508}
	4506 Call 0x1C17DFC
	4507 Move X0, [X29]
	4508 Move X8, [X0+184]
	4509 Move W2, [X31+4152]
	4510 Move W3, [X19+1172]
	4511 Move X0, X19
	4512 Add X1, X8, 2816
	4513 Move X4, X31
	4514 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4515 Move W8, [X19+1172]
	4516 Add W8, W8, 1
	4517 Move [X19+1172], W8
	4518 Move X29, 0x698000
	4519 Move X29, [X29+1000]
	4520 Move X26, [X31+352]
	4521 Move X0, [X29]
	4522 Move W8, [X0+224]
	4523 Compare W8, 0
	4524 JumpIfNotEqual {4527}
	4525 Call 0x1C17DFC
	4526 Move X0, [X29]
	4527 Move X8, [X0+184]
	4528 Add X27, X31, 3984
	4529 Move W9, [X8+5504]
	4530 Compare W9, 0
	4531 JumpIfEqual {4654}
	4532 Move W9, [X0+224]
	4533 Compare W9, 0
	4534 JumpIfNotEqual {4538}
	4535 Call 0x1C17DFC
	4536 Move X8, [X29]
	4537 Move X8, [X8+184]
	4538 Move X9, 0x698000
	4539 Move X9, [X9+904]
	4540 Move X1, [X9]
	4541 Move W9, 0x11F0
	4542 Add X0, X8, X9
	4543 Add X8, X31, 4096
	4544 Add X8, X8, 112
	4545 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	4546 Add X1, X31, 4096
	4547 Add X0, X31, 2200
	4548 Add X1, X1, 112
	4549 Move W2, 888
	4550 Call 0x3EB2AC0
	4551 Add X1, X31, 2200
	4552 Move X0, X19
	4553 Move X2, X31
	4554 Call TMP_Text.RestoreWordWrappingState, X0, X1
	4555 Move [X31+124], W31
	4556 Move X29, 0x698000
	4557 Move X29, [X29+1000]
	4558 Move X26, [X31+352]
	4559 Move X0, [X29]
	4560 Move W8, [X0+224]
	4561 Compare W8, 0
	4562 JumpIfNotEqual {4565}
	4563 Call 0x1C17DFC
	4564 Move X0, [X29]
	4565 Move X8, [X0+184]
	4566 Move X0, X19
	4567 Move X2, X31
	4568 Add X1, X8, 2816
	4569 Call TMP_Text.RestoreWordWrappingState, X0, X1
	4570 Move [X31+124], W31
	4571 Move W9, 1
	4572 Move [X19+828], W9
	4573 Move W1, [X31+4152]
	4574 Move V3, [X19+764]
	4575 Move V0, [X31+96]
	4576 Move V2, [X31+224]
	4577 Move V4, [X31+216]
	4578 Move V5, [X31+296]
	4579 Move V6, [X31+232]
	4580 Move V7, [X31+88]
	4581 Add X2, X31, 4096
	4582 Add X3, X31, 4096
	4583 Move W8, 1
	4584 Add X2, X2, 100
	4585 Add X3, X3, 104
	4586 Move X0, X19
	4587 Move V1, V13
	4588 Move X4, X31
	4589 Move [X31+112], W8
	4590 Call TMP_Text.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, V7, X2, X3
	4591 Move X8, [X31+136]
	4592 NotImplemented "Instruction MOVI not yet implemented."
	4593 Move [X19+1232], W31
	4594 Move [X19+1240], W31
	4595 Move [X8+520], D0
	4596 Move W8, [X19+1200]
	4597 Move [X31+124], W31
	4598 Add W8, W8, 1
	4599 Move [X19+1200], W8
	4600 Move X8, 0x633000
	4601 Move X8, [X8+1432]
	4602 Move X29, 0x698000
	4603 Move X25, [X19+744]
	4604 Move X0, [X8]
	4605 Move W8, [X0+224]
	4606 Move X29, [X29+1000]
	4607 Move X26, [X31+352]
	4608 Compare W8, 0
	4609 JumpIfNotEqual {4611}
	4610 Call 0x1C17DFC
	4611 Move X0, X25
	4612 Move X1, X31
	4613 Move X2, X31
	4614 Call Object.op_Inequality, X0, X1
	4615 Add X27, X31, 3984
	4616 Move TEMP, X0
	4617 And TEMP, TEMP, 1
	4618 Compare TEMP, 1
	4619 JumpIfNotEqual {4653}
	4620 Move X8, [X19]
	4621 Move X25, [X19+744]
	4622 Move X0, X19
	4623 Move X9, [X8+1352]
	4624 Move X1, [X8+1360]
	4625 NotImplemented "Instruction BLR not yet implemented."
	4626 Compare X25, 0
	4627 JumpIfEqual {7639}
	4628 Move X8, [X25]
	4629 Move X1, X0
	4630 Move X0, X25
	4631 Move X9, [X8+1368]
	4632 Move X2, [X8+1376]
	4633 NotImplemented "Instruction BLR not yet implemented."
	4634 Move X0, [X19+744]
	4635 Compare X0, 0
	4636 JumpIfEqual {7639}
	4637 Move W8, [X19+1024]
	4638 Move X2, X31
	4639 Move [X0+1024], W8
	4640 Move W1, [X19+1172]
	4641 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	4642 Move X0, [X19+744]
	4643 Compare X0, 0
	4644 JumpIfEqual {7639}
	4645 Move X8, [X0]
	4646 Move W1, W31
	4647 Move W2, W31
	4648 Move X9, [X8+2008]
	4649 Move X3, [X8+2016]
	4650 NotImplemented "Instruction BLR not yet implemented."
	4651 Move W8, 1
	4652 Move [X19+760], W8
	4653 Move [X31+124], W31
	4654 Move [X31+124], W31
	4655 Move X8, -50147328
	4656 Move V0, [X8+2912]
	4657 Move TEMP, 0
	4658 Not TEMP
	4659 Move W8, TEMP
	4660 Move [X31+4152], W8
	4661 Move [X31+4184], D0
	4662 Move [X26], X31
	4663 Move W8, [X19+568]
	4664 Compare W8, 0
	4665 JumpIfEqual {4708}
	4666 Move V2, [X19+572]
	4667 Move V0, [X19+576]
	4668 Move X8, -50159616
	4669 Move V1, [X8+208]
	4670 Subtract S0, S2, S0
	4671 NotImplemented "Instruction FCMP not yet implemented."
	4672 Move V1, [X19+484]
	4673 Move V0, [X19+596]
	4674 NotImplemented "Instruction FCMP not yet implemented."
	4675 Move W8, [X19+580]
	4676 Move W9, [X19+584]
	4677 NotImplemented "Instruction CMP not yet implemented."
	4678 Move V3, [X19+720]
	4679 Move V4, [X19+724]
	4680 Move W8, 0x42C80000
	4681 Move S5, W8
	4682 NotImplemented "Instruction FDIV not yet implemented."
	4683 NotImplemented "Instruction FCMP not yet implemented."
	4684 Move [X19+724], W31
	4685 Move X8, -50159616
	4686 Move V3, [X8+512]
	4687 Subtract S2, S2, S1
	4688 Move S4, 0.5
	4689 Multiply S2, S2, S4
	4690 NotImplemented "Instruction FMAXNM not yet implemented."
	4691 Move [X19+576], S1
	4692 Move S3, 20
	4693 Add S1, S1, S2
	4694 Multiply S1, S1, S3
	4695 Move X8, -50159616
	4696 Add S1, S1, S4
	4697 Move V2, [X8+1056]
	4698 NotImplemented "Instruction FCVTZS not yet implemented."
	4699 NotImplemented "Instruction SCVTF not yet implemented."
	4700 Move W8, 0x7F800000
	4701 NotImplemented "Instruction FDIV not yet implemented."
	4702 Move S4, W8
	4703 NotImplemented "Instruction FCMP not yet implemented."
	4704 NotImplemented "Instruction FCSEL not yet implemented."
	4705 NotImplemented "Instruction FCMP not yet implemented."
	4706 NotImplemented "Instruction FCSEL not yet implemented."
	4707 Move [X19+484], S0
	4708 Move W8, [X19+580]
	4709 Move W9, [X19+584]
	4710 Move W22, [X31+68]
	4711 Move W10, 1
	4712 Move [X19+588], W10
	4713 NotImplemented "Instruction CMP not yet implemented."
	4714 Move X0, [X31+56]
	4715 Move X1, X31
	4716 Call Int32.ToString, X0
	4717 Move X21, X0
	4718 Move X0, [X31+72]
	4719 Move X1, X31
	4720 Call Single.ToString, X0
	4721 Move X8, 0x698000
	4722 Move X8, [X8+1056]
	4723 Move X9, 0x698000
	4724 Move X9, [X9+1032]
	4725 Move X3, X0
	4726 Move X8, [X8]
	4727 Move X1, X21
	4728 Move X2, [X9]
	4729 Move X4, X31
	4730 Move X0, X8
	4731 Call String.Concat, X0, X1, X2, X3
	4732 Move X8, 0x633000
	4733 Move X8, [X8+2600]
	4734 Move X21, X0
	4735 Move X8, [X8]
	4736 Move W9, [X8+224]
	4737 Compare W9, 0
	4738 JumpIfNotEqual {4741}
	4739 Move X0, X8
	4740 Call 0x1C17DFC
	4741 Move X0, X21
	4742 Move X1, X31
	4743 Call Debug.Log, X0
	4744 Move W8, [X26]
	4745 Compare W8, 0
	4746 JumpIfEqual {4750}
	4747 NotImplemented "Instruction CMP not yet implemented."
	4748 Move W8, [X31+4204]
	4749 NotImplemented "Instruction CMP not yet implemented."
	4750 Move X8, [X19]
	4751 Move W1, 1
	4752 Move X0, X19
	4753 Move X9, [X8+2392]
	4754 Move X2, [X8+2400]
	4755 NotImplemented "Instruction BLR not yet implemented."
	4756 Move X8, 0x698000
	4757 Move X8, [X8+1008]
	4758 Move X0, [X8]
	4759 Move W8, [X0+224]
	4760 Compare W8, 0
	4761 JumpIfNotEqual {4763}
	4762 Call 0x1C17DFC
	4763 Move X0, X19
	4764 Move X1, X31
	4765 Call TMPro_EventManager.ON_TEXT_CHANGED, X0
	4766 Add X31, X31, 4096
	4767 Add X31, X31, 1008
	4768 Move X20, [X31+144]
	4769 Move X19, [X31+152]
	4770 Move X22, [X31+128]
	4771 Move X21, [X31+136]
	4772 Move X24, [X31+112]
	4773 Move X23, [X31+120]
	4774 Move X26, [X31+96]
	4775 Move X25, [X31+104]
	4776 Move X28, [X31+80]
	4777 Move X27, [X31+88]
	4778 Move X29, [X31+64]
	4779 Move X30, [X31+72]
	4780 Move D9, [X31+48]
	4781 Move D8, [X31+56]
	4782 Move D11, [X31+32]
	4783 Move D10, [X31+40]
	4784 Move D13, [X31+16]
	4785 Move D12, [X31+24]
	4786 Move D15, [X31+160]
	4787 Move D14, [X31+168]
	4788 Return 
	4789 Move X0, [X29]
	4790 Move W8, [X0+224]
	4791 Compare W8, 0
	4792 JumpIfNotEqual {4795}
	4793 Call 0x1C17DFC
	4794 Move X0, [X29]
	4795 Move X8, [X0+184]
	4796 Move X8, [X8]
	4797 Compare X8, 0
	4798 JumpIfEqual {7639}
	4799 NotImplemented "Instruction LDRSW not yet implemented."
	4800 Move W10, [X8+24]
	4801 NotImplemented "Instruction CMP not yet implemented."
	4802 Move W10, 56
	4803 NotImplemented "Instruction MADD not yet implemented."
	4804 Move W8, [X8+84]
	4805 Move W8, W8
	4806 ShiftRight W8, 30
	4807 And W8, W8, 0x1FFFFFFF
	4808 Move [X31+4180], W8
	4809 Move X8, [X23]
	4810 Compare X8, 0
	4811 JumpIfEqual {7639}
	4812 Move X20, [X8+96]
	4813 Compare X20, 0
	4814 JumpIfEqual {7639}
	4815 Move X25, 0x698000
	4816 Move X25, [X25+840]
	4817 Move X0, [X25]
	4818 Move W8, [X0+224]
	4819 Compare W8, 0
	4820 JumpIfNotEqual {4822}
	4821 Call 0x1C17DFC
	4822 Move W8, [X20+24]
	4823 Compare W8, 0
	4824 JumpIfEqual {7701}
	4825 Add X0, X20, 32
	4826 Move W1, W31
	4827 Move X2, X31
	4828 Call TMP_MeshInfo.Clear, X0, X1
	4829 Move X8, 0x918000
	4830 Move W8, [X8+1923]
	4831 Compare W8, 0
	4832 JumpIfNotEqual {4839}
	4833 Move X0, 0x633000
	4834 Move X0, [X0+1440]
	4835 Call 0x1C17CF4
	4836 Move W8, 1
	4837 Move X9, 0x918000
	4838 Move [X9+1923], W8
	4839 Move X8, 0x633000
	4840 Move X8, [X8+1440]
	4841 Move W9, [X19+624]
	4842 Move X20, 0x698000
	4843 Move X8, [X8]
	4844 NotImplemented "Instruction CMP not yet implemented."
	4845 Move X8, [X8+184]
	4846 Move V0, [X8]
	4847 Move [X31+224], S0
	4848 NotImplemented "Instruction LDUR not yet implemented."
	4849 Move X8, [X19+1880]
	4850 Move [X31+216], D0
	4851 Move X20, [X20+848]
	4852 NotImplemented "Instruction CMP not yet implemented."
	4853 NotImplemented "Instruction CMP not yet implemented."
	4854 Move V0, [X31+224]
	4855 NotImplemented "Instruction CMP not yet implemented."
	4856 Move [X31+168], S0
	4857 Move V0, [X31+216]
	4858 Move [X31+160], D0
	4859 Compare X8, 0
	4860 JumpIfEqual {7639}
	4861 Move W9, [X8+24]
	4862 NotImplemented "Instruction CMP not yet implemented."
	4863 Compare W9, 0
	4864 JumpIfEqual {7701}
	4865 NotImplemented "Instruction LDUR not yet implemented."
	4866 Move V3, [X8+48]
	4867 Move V0, [X8+32]
	4868 Move V1, [X8+44]
	4869 Move V4, [X19+1212]
	4870 Add V2, V2, V3
	4871 NotImplemented "Instruction MOVI not yet implemented."
	4872 Move V5, [X31+36]
	4873 Move V6, [X31+48]
	4874 NotImplemented "Instruction INVALID not yet implemented."
	4875 Move V3, [X31+40]
	4876 Add S0, S0, S1
	4877 Move S1, 0.5
	4878 Subtract S4, S4, S5
	4879 Move S5, W31
	4880 Add S6, S6, S5
	4881 Multiply S0, S0, S1
	4882 Subtract S3, S4, S3
	4883 Multiply S1, S3, S1
	4884 Add S0, S6, S0
	4885 Move [X31+168], S0
	4886 Subtract S0, S5, S1
	4887 NotImplemented "Instruction MOVI not yet implemented."
	4888 Move V1.S[0], V0.S[0]
	4889 Add V0, V2, V1
	4890 NotImplemented "Instruction CMP not yet implemented."
	4891 NotImplemented "Instruction CMP not yet implemented."
	4892 Move V0, [X31+224]
	4893 NotImplemented "Instruction CMP not yet implemented."
	4894 Move [X31+168], S0
	4895 Move V0, [X31+216]
	4896 Move [X31+160], D0
	4897 Compare X8, 0
	4898 JumpIfEqual {7639}
	4899 Move W9, [X8+24]
	4900 Compare W9, 0
	4901 JumpIfEqual {7701}
	4902 Move W9, [X19+736]
	4903 Move V1, [X8+32]
	4904 NotImplemented "Instruction LDUR not yet implemented."
	4905 NotImplemented "Instruction CMP not yet implemented."
	4906 Move X8, [X23]
	4907 Compare X8, 0
	4908 JumpIfEqual {7639}
	4909 Move X8, [X8+88]
	4910 Compare X8, 0
	4911 JumpIfEqual {7639}
	4912 Move W9, [X8+24]
	4913 NotImplemented "Instruction CMP not yet implemented."
	4914 Move W9, 20
	4915 NotImplemented "Instruction SMADDL not yet implemented."
	4916 Move V2, [X8+48]
	4917 Compare X8, 0
	4918 JumpIfEqual {7639}
	4919 Move W9, [X8+24]
	4920 NotImplemented "Instruction CMP not yet implemented."
	4921 Compare W9, 0
	4922 JumpIfEqual {7701}
	4923 Move V1, [X8+32]
	4924 Move V2, [X8+44]
	4925 NotImplemented "Instruction LDUR not yet implemented."
	4926 Move V3, [X8+48]
	4927 Move V16, [X31+48]
	4928 Move S4, 0.5
	4929 Move S6, W31
	4930 Add S1, S1, S2
	4931 NotImplemented "Instruction MOVI not yet implemented."
	4932 Add S6, S16, S6
	4933 Add V0, V0, V3
	4934 Multiply S1, S1, S4
	4935 NotImplemented "Instruction MOVI not yet implemented."
	4936 NotImplemented "Instruction INVALID not yet implemented."
	4937 Add S1, S6, S1
	4938 Move [X31+168], S1
	4939 Add V0, V0, V7
	4940 Compare X8, 0
	4941 JumpIfEqual {7639}
	4942 Move W9, [X8+24]
	4943 NotImplemented "Instruction CMP not yet implemented."
	4944 Compare W9, 0
	4945 JumpIfEqual {7701}
	4946 NotImplemented "Instruction LDUR not yet implemented."
	4947 Move V3, [X8+48]
	4948 Move V1, [X8+32]
	4949 Move V2, [X8+44]
	4950 Move V5, [X19+1256]
	4951 Move V6, [X31+36]
	4952 Add V0, V0, V3
	4953 Move V3, [X19+1248]
	4954 Add S1, S1, S2
	4955 NotImplemented "Instruction MOVI not yet implemented."
	4956 Add S5, S6, S5
	4957 Move V7, [X31+48]
	4958 NotImplemented "Instruction INVALID not yet implemented."
	4959 Add S2, S5, S3
	4960 Move V3, [X31+40]
	4961 Move S4, 0.5
	4962 Move S6, W31
	4963 Add S7, S7, S6
	4964 Multiply S1, S1, S4
	4965 Subtract S2, S2, S3
	4966 Add S1, S7, S1
	4967 Move [X31+168], S1
	4968 Multiply S1, S2, S4
	4969 Subtract S1, S6, S1
	4970 Compare X8, 0
	4971 JumpIfEqual {7639}
	4972 Move W9, [X8+24]
	4973 NotImplemented "Instruction CMP not yet implemented."
	4974 Move W9, [X19+736]
	4975 Move V1, [X8+44]
	4976 Move V0, [X8+48]
	4977 NotImplemented "Instruction CMP not yet implemented."
	4978 Move X8, [X23]
	4979 Compare X8, 0
	4980 JumpIfEqual {7639}
	4981 Move X8, [X8+88]
	4982 Compare X8, 0
	4983 JumpIfEqual {7639}
	4984 Move W9, [X8+24]
	4985 NotImplemented "Instruction CMP not yet implemented."
	4986 Move W9, 20
	4987 NotImplemented "Instruction SMADDL not yet implemented."
	4988 Move V2, [X8+40]
	4989 Compare X8, 0
	4990 JumpIfEqual {7639}
	4991 Move W9, [X8+24]
	4992 NotImplemented "Instruction CMP not yet implemented."
	4993 Compare W9, 0
	4994 JumpIfEqual {7701}
	4995 NotImplemented "Instruction LDUR not yet implemented."
	4996 Move V1, [X8+32]
	4997 Move V2, [X8+44]
	4998 Move V3, [X8+48]
	4999 Move W9, [X19+736]
	5000 Move S4, 0.5
	5001 NotImplemented "Instruction MOVI not yet implemented."
	5002 Add S1, S1, S2
	5003 Add V0, V0, V3
	5004 NotImplemented "Instruction CMP not yet implemented."
	5005 Multiply S1, S1, S4
	5006 NotImplemented "Instruction INVALID not yet implemented."
	5007 Move X8, [X23]
	5008 Compare X8, 0
	5009 JumpIfEqual {7639}
	5010 Move X8, [X8+88]
	5011 Compare X8, 0
	5012 JumpIfEqual {7639}
	5013 Move W9, [X8+24]
	5014 NotImplemented "Instruction CMP not yet implemented."
	5015 Move V3, [X31+48]
	5016 Move W9, 20
	5017 Move S2, W31
	5018 NotImplemented "Instruction SMADDL not yet implemented."
	5019 Add S3, S3, S2
	5020 Move V4, [X8+40]
	5021 Add S1, S3, S1
	5022 Move V3, [X31+36]
	5023 Move V5, [X8+48]
	5024 Move [X31+168], S1
	5025 Move S1, -0.5
	5026 Add S3, S3, S4
	5027 Move V4, [X31+40]
	5028 Add S3, S3, S5
	5029 Subtract S3, S3, S4
	5030 Multiply S1, S3, S1
	5031 Add S1, S1, S2
	5032 Move V0, [X19+1192]
	5033 Move V1, [X31+32]
	5034 NotImplemented "Instruction SCVTF not yet implemented."
	5035 Subtract S1, S1, S4
	5036 NotImplemented "Instruction FDIV not yet implemented."
	5037 Move V1, [X31+96]
	5038 NotImplemented "Instruction FDIV not yet implemented."
	5039 Add S0, S6, S0
	5040 NotImplemented "Instruction FCMP not yet implemented."
	5041 NotImplemented "Instruction FCSEL not yet implemented."
	5042 Move [X19+700], S0
	5043 Move V0, [X19+576]
	5044 Move X8, -50159616
	5045 Move V2, [X8+512]
	5046 Move S3, 0.5
	5047 Subtract S0, S4, S0
	5048 Multiply S0, S0, S3
	5049 NotImplemented "Instruction FMAXNM not yet implemented."
	5050 Move S2, 20
	5051 Subtract S0, S4, S0
	5052 Multiply S0, S0, S2
	5053 Move X8, -50159616
	5054 Add S0, S0, S3
	5055 Move [X19+572], S4
	5056 Move V4, [X8+1056]
	5057 NotImplemented "Instruction FCVTZS not yet implemented."
	5058 NotImplemented "Instruction SCVTF not yet implemented."
	5059 Move W8, 0x7F800000
	5060 NotImplemented "Instruction FDIV not yet implemented."
	5061 Move S3, W8
	5062 NotImplemented "Instruction FCMP not yet implemented."
	5063 NotImplemented "Instruction FCSEL not yet implemented."
	5064 NotImplemented "Instruction FCMP not yet implemented."
	5065 NotImplemented "Instruction FCSEL not yet implemented."
	5066 Move V2, [X31+4200]
	5067 Move V4, [X31+48]
	5068 Move S3, W31
	5069 Add S4, S4, S3
	5070 Add S1, S4, S1
	5071 Move [X31+168], S1
	5072 Subtract S1, S3, S2
	5073 Move V2, [X31+40]
	5074 Add S1, S2, S1
	5075 Move V2, [X19+1208]
	5076 Move V4, [X31+48]
	5077 Move S3, W31
	5078 Add S4, S4, S3
	5079 Add S1, S4, S1
	5080 Move [X31+168], S1
	5081 Subtract S1, S3, S2
	5082 Move V2, [X31+36]
	5083 Subtract S1, S1, S2
	5084 Move V6, [X31+48]
	5085 Move S4, W31
	5086 Move V2, [X19+1208]
	5087 Move V3, [X31+4200]
	5088 Add S6, S6, S4
	5089 Add S1, S6, S1
	5090 Move [X31+168], S1
	5091 Move V1, [X31+36]
	5092 Move S5, -0.5
	5093 Add S1, S1, S2
	5094 Move V2, [X31+40]
	5095 Add S1, S1, S3
	5096 Subtract S1, S1, S2
	5097 Multiply S1, S1, S5
	5098 Add S1, S1, S4
	5099 NotImplemented "Instruction MOVI not yet implemented."
	5100 Move V2.S[0], V1.S[0]
	5101 Add V0, V0, V2
	5102 Move [X31+160], D0
	5103 Move X0, X19
	5104 Move X1, X31
	5105 Call TextMeshPro.get_transform, X0
	5106 Compare X0, 0
	5107 JumpIfEqual {7639}
	5108 Move X1, X31
	5109 Call Transform.get_lossyScale, X0
	5110 Move V8, V1
	5111 Move [X19+1764], S1
	5112 Move S0, 1
	5113 Move S1, 1
	5114 Move S2, 1
	5115 Move S3, 1
	5116 Move X0, X31
	5117 Call 0x1E44664
	5118 Move [X31+112], X0
	5119 Move S0, 1
	5120 Move S1, 1
	5121 Move S2, 1
	5122 Move S3, 1
	5123 Move X0, X31
	5124 Call 0x1E44664
	5125 Move X8, [X20]
	5126 Move [X31+152], X0
	5127 Move W9, [X8+224]
	5128 Compare W9, 0
	5129 JumpIfNotEqual {5132}
	5130 Move X0, X8
	5131 Call 0x1C17DFC
	5132 Move X21, 0x922000
	5133 Move W8, [X21+1190]
	5134 Compare W8, 0
	5135 JumpIfNotEqual {5141}
	5136 Move X0, 0x698000
	5137 Move X0, [X0+848]
	5138 Call 0x1C17CF4
	5139 Move W8, 1
	5140 Move [X21+1190], W8
	5141 Move X0, [X20]
	5142 Move W8, [X0+224]
	5143 Compare W8, 0
	5144 JumpIfNotEqual {5147}
	5145 Call 0x1C17DFC
	5146 Move X0, [X20]
	5147 Move X8, [X0+184]
	5148 Add X0, X31, 4096
	5149 Add X0, X0, 64
	5150 Move TEMP, 0xBFFF0000
	5151 Not TEMP
	5152 Move W1, TEMP
	5153 Move S0, [X8]
	5154 Move S1, [X8+4]
	5155 Move S2, [X8+8]
	5156 Move S3, [X8+12]
	5157 Move X2, X31
	5158 Call HighlightState..ctor, X0, X1, X2
	5159 Move X0, [X29]
	5160 Move W8, [X0+224]
	5161 Compare W8, 0
	5162 JumpIfNotEqual {5164}
	5163 Call 0x1C17DFC
	5164 Move X9, [X23]
	5165 Compare X9, 0
	5166 JumpIfEqual {7639}
	5167 Move W8, [X26]
	5168 NotImplemented "Instruction CMP not yet implemented."
	5169 Move X22, [X9+56]
	5170 Compare X22, 0
	5171 JumpIfEqual {7639}
	5172 Move X8, [X29]
	5173 Move S2, [X31+200]
	5174 Move S1, [X31+204]
	5175 Move S0, W31
	5176 NotImplemented "Instruction FABS not yet implemented."
	5177 Move X8, [X8+184]
	5178 Move W15, W31
	5179 Move W9, 736
	5180 Move W21, 376
	5181 Move V4, [X8+5544]
	5182 Move W10, 1
	5183 Move S14, W31
	5184 Move S15, W31
	5185 Move [X31+228], S0
	5186 Move [X31+236], S4
	5187 Move S0, W31
	5188 Move [X31+104], S2
	5189 Move [X31+112], S0
	5190 Move S0, W31
	5191 Move [X31+52], S0
	5192 Move [X31+60], S3
	5193 Move S0, W31
	5194 Move [X31+144], S2
	5195 Move [X31+152], S0
	5196 Move S0, W31
	5197 Move [X31+48], S0
	5198 Move V0, [X31+184]
	5199 Move [X31+240], X31
	5200 Move [X31+248], X31
	5201 Move [X31+236], W31
	5202 Move [X31+196], W31
	5203 Move [X31+44], W31
	5204 Move [X31+332], W31
	5205 Move [X31+84], W31
	5206 Move [X31+312], X9
	5207 Move [X31+188], S2
	5208 Move [X31+196], S1
	5209 Move [X31+96], S1
	5210 Move [X31+104], S0
	5211 Move [X31+124], S0
	5212 Move [X31+132], S1
	5213 Move [X31+176], X22
	5214 Move W8, [X22+24]
	5215 Subtract W24, W10, 1
	5216 NotImplemented "Instruction CMP not yet implemented."
	5217 Move X9, [X23]
	5218 Compare X9, 0
	5219 JumpIfEqual {7639}
	5220 Move X9, [X9+80]
	5221 Move W12, 92
	5222 Move [X31+308], W10
	5223 Compare X9, 0
	5224 JumpIfEqual {7639}
	5225 Move X28, W24
	5226 NotImplemented "Instruction MADD not yet implemented."
	5227 Move W20, [X10+100]
	5228 Move W11, [X9+24]
	5229 Move W25, 376
	5230 NotImplemented "Instruction CMP not yet implemented."
	5231 Move X11, [X10+56]
	5232 NotImplemented "Instruction LDRH not yet implemented."
	5233 Move X14, W20
	5234 NotImplemented "Instruction MADD not yet implemented."
	5235 Move W22, [X9+104]
	5236 Move [X31+348], W10
	5237 NotImplemented "Instruction LDRSW not yet implemented."
	5238 Move W21, [X9+32]
	5239 Move W26, [X9+40]
	5240 Move W29, [X9+44]
	5241 Move V3, [X9+76]
	5242 Move [X31+208], X10
	5243 NotImplemented "Instruction LDRSW not yet implemented."
	5244 Move S4, [X9+84]
	5245 Move S10, [X9+88]
	5246 Move S11, [X9+92]
	5247 Move S12, [X9+96]
	5248 Move S9, [X9+108]
	5249 Move S13, [X9+112]
	5250 Move S8, [X9+116]
	5251 Move S5, [X9+120]
	5252 NotImplemented "Instruction CMP not yet implemented."
	5253 Move [X31+288], X10
	5254 Move [X31+296], X11
	5255 Move [X31+320], X14
	5256 NotImplemented "Instruction CMP not yet implemented."
	5257 NotImplemented "Instruction CMP not yet implemented."
	5258 Move S2, 0.5
	5259 Multiply S0, S11, S2
	5260 Add S1, S9, S8
	5261 Add S0, S12, S0
	5262 Multiply S1, S1, S2
	5263 Subtract W9, W22, 1
	5264 NotImplemented "Instruction CMP not yet implemented."
	5265 Move X12, -49451008
	5266 Add X12, X12, 2936
	5267 NotImplemented "Instruction ADR not yet implemented."
	5268 Move W11, [X12]
	5269 Add X10, X10, X11
	5270 CallNoReturn X10
	5271 Move W8, [X19+240]
	5272 Compare W8, 0
	5273 JumpIfEqual {5320}
	5274 Move S0, W31
	5275 Subtract S0, S0, S10
	5276 Move W10, [X31+348]
	5277 NotImplemented "Instruction CMP not yet implemented."
	5278 NotImplemented "Instruction CMP not yet implemented."
	5279 Move W9, 0x200B
	5280 NotImplemented "Instruction CMP not yet implemented."
	5281 Move W9, 0x2060
	5282 NotImplemented "Instruction CMP not yet implemented."
	5283 NotImplemented "Instruction CMP not yet implemented."
	5284 NotImplemented "Instruction CMP not yet implemented."
	5285 Move X9, [X31+208]
	5286 Move [X31+256], S5
	5287 Move [X31+272], S4
	5288 Move [X31+336], S3
	5289 NotImplemented "Instruction CMP not yet implemented."
	5290 Move [X31+88], X15
	5291 Move X8, 0x635000
	5292 Move X8, [X8+368]
	5293 Move X0, [X8]
	5294 Move X8, [X31+176]
	5295 NotImplemented "Instruction NOP not yet implemented."
	5296 NotImplemented "Instruction MADD not yet implemented."
	5297 Move W9, [X0+224]
	5298 NotImplemented "Instruction LDRH not yet implemented."
	5299 Compare W9, 0
	5300 JumpIfNotEqual {5302}
	5301 Call 0x1C17DFC
	5302 Move W0, W27
	5303 Move X1, X31
	5304 Call Char.IsControl, X0
	5305 Move TEMP, X0
	5306 And TEMP, TEMP, 1
	5307 Compare TEMP, 1
	5308 JumpIfNotEqual {5322}
	5309 Move W8, W31
	5310 Move S1, 0.5
	5311 Multiply S0, S11, S1
	5312 Multiply S1, S10, S1
	5313 Add S0, S12, S0
	5314 Subtract S0, S0, S1
	5315 Move W8, [X19+240]
	5316 Add S0, S11, S12
	5317 Subtract S1, S0, S10
	5318 NotImplemented "Instruction CMP not yet implemented."
	5319 NotImplemented "Instruction FCSEL not yet implemented."
	5320 Move S0, W31
	5321 Add S0, S12, S0
	5322 Move W8, [X19+1192]
	5323 NotImplemented "Instruction CMP not yet implemented."
	5324 NotImplemented "Instruction CSET not yet implemented."
	5325 Move X15, [X31+88]
	5326 Move V3, [X31+336]
	5327 Move V4, [X31+272]
	5328 Move V5, [X31+256]
	5329 Move X14, [X31+320]
	5330 Add X27, X31, 3984
	5331 NotImplemented "Instruction FCMP not yet implemented."
	5332 Or W8, W8, W22
	5333 Compare W8, 0
	5334 JumpIfNotEqual {5482}
	5335 Move W8, [X19+240]
	5336 Add S0, S11, S12
	5337 NotImplemented "Instruction CMP not yet implemented."
	5338 NotImplemented "Instruction FCSEL not yet implemented."
	5339 Move [X31+224], S0
	5340 NotImplemented "Instruction MOVI not yet implemented."
	5341 Move [X31+216], D0
	5342 Move X22, [X31+176]
	5343 Move X21, [X22+24]
	5344 NotImplemented "Instruction CMP not yet implemented."
	5345 Move V0, [X31+224]
	5346 Move V1, [X31+168]
	5347 Move W9, 376
	5348 NotImplemented "Instruction MADD not yet implemented."
	5349 Move W8, [X26+404]
	5350 Add S2, S1, S0
	5351 Move V0, [X31+216]
	5352 Move V1, [X31+160]
	5353 Move [X31+336], X20
	5354 Add V1, V1, V0
	5355 Move [X31+256], V2
	5356 Move [X31+264], V1
	5357 Compare W8, 0
	5358 JumpIfEqual {5390}
	5359 NotImplemented "Instruction MADD not yet implemented."
	5360 Move W27, [X8+44]
	5361 Move W25, 376
	5362 Compare W27, 0
	5363 JumpIfNotEqual {5741}
	5364 Move V0, [X19+788]
	5365 NotImplemented "Instruction SCVTF not yet implemented."
	5366 Move V14, V5
	5367 Move V12, V4
	5368 Multiply S0, S0, S1
	5369 Move S1, 1
	5370 Move V10, V3
	5371 Move [X31+88], X15
	5372 Call 0x3EB2BA0
	5373 Move W8, [X19+780]
	5374 NotImplemented "Instruction CMP not yet implemented."
	5375 Move X11, -49451008
	5376 Add X11, X11, 2944
	5377 NotImplemented "Instruction ADR not yet implemented."
	5378 Move W10, [X11]
	5379 Add X9, X9, X10
	5380 Move V11, V0
	5381 Move V5, V12
	5382 CallNoReturn X9
	5383 Move W10, 376
	5384 NotImplemented "Instruction MADD not yet implemented."
	5385 Move W9, 0x3F800000
	5386 Move [X8+132], W31
	5387 Move [X8+172], W31
	5388 Move [X8+212], W9
	5389 Move S0, 1
	5390 Move X26, [X31+352]
	5391 Move W21, 376
	5392 Move W25, 92
	5393 Move V5, V12
	5394 Move W10, 376
	5395 Move W8, [X19+628]
	5396 NotImplemented "Instruction NOP not yet implemented."
	5397 NotImplemented "Instruction MADD not yet implemented."
	5398 Move V0, [X9+112]
	5399 NotImplemented "Instruction CMP not yet implemented."
	5400 Move X9, [X31+136]
	5401 Move V3, [X31+224]
	5402 NotImplemented "Instruction NOP not yet implemented."
	5403 NotImplemented "Instruction MADD not yet implemented."
	5404 Move V1, [X9+560]
	5405 Move V2, [X9+568]
	5406 Add S0, S3, S0
	5407 Subtract S0, S0, S1
	5408 Subtract S1, S2, S1
	5409 Move X9, [X31+136]
	5410 Move W10, 376
	5411 NotImplemented "Instruction MADD not yet implemented."
	5412 Move V2, [X8+112]
	5413 Move V3, [X31+224]
	5414 Move V0, [X9+560]
	5415 Move V1, [X9+568]
	5416 Add S2, S3, S2
	5417 Subtract S1, S1, S0
	5418 Subtract S0, S2, S0
	5419 NotImplemented "Instruction FDIV not yet implemented."
	5420 Add S0, S11, S0
	5421 Move V2, [X8+152]
	5422 Move [X8+132], S0
	5423 Move V0, [X9+560]
	5424 Move V1, [X9+568]
	5425 Add S2, S3, S2
	5426 Subtract S2, S2, S0
	5427 Subtract S0, S1, S0
	5428 NotImplemented "Instruction FDIV not yet implemented."
	5429 Add S0, S11, S0
	5430 Move V1, [X8+192]
	5431 Move [X8+172], S0
	5432 Move V0, [X9+560]
	5433 Move V2, [X9+568]
	5434 Add S1, S3, S1
	5435 Subtract S1, S1, S0
	5436 Subtract S0, S2, S0
	5437 NotImplemented "Instruction FDIV not yet implemented."
	5438 Add S0, S11, S0
	5439 Move V2, [X8+232]
	5440 Move [X8+212], S0
	5441 Move V0, [X9+560]
	5442 Move V1, [X9+568]
	5443 Add S2, S3, S2
	5444 Subtract S2, S2, S0
	5445 Subtract S0, S1, S0
	5446 NotImplemented "Instruction FDIV not yet implemented."
	5447 Add S0, S11, S0
	5448 Move W8, [X19+784]
	5449 NotImplemented "Instruction CMP not yet implemented."
	5450 Move X11, -49455104
	5451 Add X11, X11, 2948
	5452 NotImplemented "Instruction ADR not yet implemented."
	5453 Move W10, [X11]
	5454 Add X9, X9, X10
	5455 CallNoReturn X9
	5456 NotImplemented "Instruction MADD not yet implemented."
	5457 Move W9, 0x3F800000
	5458 Move [X8+136], W31
	5459 Move [X8+176], W9
	5460 Move [X8+216], W31
	5461 Move [X8+256], W9
	5462 NotImplemented "Instruction MADD not yet implemented."
	5463 Move V2, [X8+152]
	5464 Move V3, [X8+192]
	5465 Subtract S0, S0, S9
	5466 Subtract S1, S8, S9
	5467 Move V4, [X8+232]
	5468 NotImplemented "Instruction FDIV not yet implemented."
	5469 Add S0, S11, S0
	5470 Move [X8+132], S0
	5471 Subtract S0, S2, S9
	5472 Subtract S2, S3, S9
	5473 Subtract S3, S4, S9
	5474 NotImplemented "Instruction FDIV not yet implemented."
	5475 NotImplemented "Instruction FDIV not yet implemented."
	5476 NotImplemented "Instruction FDIV not yet implemented."
	5477 Add S0, S11, S0
	5478 Add S2, S11, S2
	5479 Move [X8+172], S0
	5480 Move [X8+212], S2
	5481 Add S0, S11, S1
	5482 Move W8, [X31+308]
	5483 Move X10, [X31+176]
	5484 NotImplemented "Instruction CMP not yet implemented."
	5485 NotImplemented "Instruction CMP not yet implemented."
	5486 Move W8, [X19+804]
	5487 NotImplemented "Instruction CMP not yet implemented."
	5488 Move X8, 0x634000
	5489 Move X8, [X8+368]
	5490 Add S0, S11, S12
	5491 Move X0, [X8]
	5492 Move W8, [X19+240]
	5493 Move W9, [X0+224]
	5494 NotImplemented "Instruction CMP not yet implemented."
	5495 NotImplemented "Instruction FCSEL not yet implemented."
	5496 Move [X31+224], S0
	5497 Compare W9, 0
	5498 JumpIfNotEqual {5500}
	5499 Call 0x1C17DFC
	5500 Move W0, [X31+348]
	5501 Move X1, X31
	5502 Call Char.IsSeparator, X0
	5503 Move X14, [X31+320]
	5504 Move X15, [X31+88]
	5505 Move V3, [X31+336]
	5506 Move V4, [X31+272]
	5507 Move V5, [X31+256]
	5508 NotImplemented "Instruction MOVI not yet implemented."
	5509 Move [X31+44], W0
	5510 NotImplemented "Instruction MADD not yet implemented."
	5511 Move V0, [X8+116]
	5512 Move V1, [X8+156]
	5513 Subtract S2, S14, S13
	5514 Subtract S0, S0, S13
	5515 Subtract S1, S1, S13
	5516 NotImplemented "Instruction FDIV not yet implemented."
	5517 NotImplemented "Instruction FDIV not yet implemented."
	5518 Add S0, S11, S0
	5519 Add S1, S11, S1
	5520 Move [X8+136], S0
	5521 Move [X8+176], S1
	5522 Move [X8+216], S0
	5523 Move [X8+256], S1
	5524 NotImplemented "Instruction MADD not yet implemented."
	5525 Move V0, [X19+1248]
	5526 Move V1, [X19+1256]
	5527 Move V2, [X8+116]
	5528 Move V3, [X8+156]
	5529 Subtract S1, S1, S0
	5530 Subtract S0, S2, S0
	5531 NotImplemented "Instruction FDIV not yet implemented."
	5532 Add S0, S11, S0
	5533 Move [X8+136], S0
	5534 Move V1, [X19+1248]
	5535 Move V2, [X19+1256]
	5536 Move [X8+216], S0
	5537 Subtract S0, S3, S1
	5538 Subtract S1, S2, S1
	5539 NotImplemented "Instruction FDIV not yet implemented."
	5540 Add S0, S11, S0
	5541 Move [X8+176], S0
	5542 Move [X8+256], S0
	5543 Move X8, 0x632000
	5544 Move X8, [X8+2600]
	5545 Move X0, [X8]
	5546 Move W8, [X0+224]
	5547 Compare W8, 0
	5548 JumpIfNotEqual {5550}
	5549 Call 0x1C17DFC
	5550 Move X8, 0x697000
	5551 Move X8, [X8+1048]
	5552 Move X1, X31
	5553 Move X0, [X8]
	5554 Call Debug.Log, X0
	5555 Move X21, [X22+24]
	5556 Move V5, V12
	5557 NotImplemented "Instruction CMP not yet implemented."
	5558 Move W10, 376
	5559 NotImplemented "Instruction MADD not yet implemented."
	5560 Move V0, [X8+136]
	5561 Move V1, [X8+176]
	5562 Move V2, [X8+348]
	5563 Add S3, S0, S1
	5564 Multiply S0, S0, S2
	5565 Multiply S1, S1, S2
	5566 Multiply S2, S3, S2
	5567 Move S3, 1
	5568 Subtract S2, S3, S2
	5569 Move S3, 0.5
	5570 Multiply S2, S2, S3
	5571 Add S0, S0, S2
	5572 Add S1, S2, S1
	5573 Add S2, S11, S0
	5574 Add S0, S11, S1
	5575 Move [X8+132], S2
	5576 Move [X8+172], S2
	5577 Move [X8+212], S0
	5578 Move W25, 376
	5579 NotImplemented "Instruction MADD not yet implemented."
	5580 Move [X8+252], S0
	5581 Move W8, [X19+784]
	5582 NotImplemented "Instruction CMP not yet implemented."
	5583 Move X11, -49455104
	5584 Add X11, X11, 2952
	5585 NotImplemented "Instruction ADR not yet implemented."
	5586 Move W10, [X11]
	5587 Add X9, X9, X10
	5588 CallNoReturn X9
	5589 NotImplemented "Instruction CMP not yet implemented."
	5590 NotImplemented "Instruction MADD not yet implemented."
	5591 Move W9, 0x3F800000
	5592 Move [X8+136], W31
	5593 Move [X8+176], W9
	5594 Move [X8+216], W9
	5595 Move [X8+256], W31
	5596 NotImplemented "Instruction CMP not yet implemented."
	5597 NotImplemented "Instruction MADD not yet implemented."
	5598 Move V0, [X8+116]
	5599 Move V1, [X8+156]
	5600 Subtract S2, S10, S5
	5601 Subtract S0, S0, S5
	5602 Subtract S1, S1, S5
	5603 NotImplemented "Instruction FDIV not yet implemented."
	5604 NotImplemented "Instruction FDIV not yet implemented."
	5605 Move [X8+136], S0
	5606 NotImplemented "Instruction CMP not yet implemented."
	5607 NotImplemented "Instruction MADD not yet implemented."
	5608 Move V0, [X19+1248]
	5609 Move V1, [X19+1256]
	5610 Move V2, [X8+116]
	5611 Move V3, [X8+156]
	5612 Subtract S1, S1, S0
	5613 Subtract S0, S2, S0
	5614 NotImplemented "Instruction FDIV not yet implemented."
	5615 Move [X8+136], S0
	5616 Move V1, [X19+1248]
	5617 Move V2, [X19+1256]
	5618 Subtract S3, S3, S1
	5619 Subtract S1, S2, S1
	5620 NotImplemented "Instruction FDIV not yet implemented."
	5621 Move [X8+176], S1
	5622 Move [X8+216], S1
	5623 Move [X8+256], S0
	5624 NotImplemented "Instruction CMP not yet implemented."
	5625 NotImplemented "Instruction MADD not yet implemented."
	5626 Move V0, [X8+132]
	5627 Move V1, [X8+212]
	5628 Move V2, [X8+348]
	5629 Add S3, S0, S1
	5630 NotImplemented "Instruction FDIV not yet implemented."
	5631 NotImplemented "Instruction FDIV not yet implemented."
	5632 NotImplemented "Instruction FDIV not yet implemented."
	5633 Move S3, 1
	5634 Subtract S2, S3, S2
	5635 Move S3, 0.5
	5636 Multiply S2, S2, S3
	5637 Add S0, S0, S2
	5638 Add S1, S2, S1
	5639 Move [X8+136], S0
	5640 Move [X8+176], S1
	5641 Move [X8+256], S0
	5642 Move [X8+216], S1
	5643 NotImplemented "Instruction CMP not yet implemented."
	5644 Move W9, 376
	5645 NotImplemented "Instruction MADD not yet implemented."
	5646 Move V0, [X8+352]
	5647 Move V2, [X31+56]
	5648 Move V1, [X19+724]
	5649 Move W8, [X8+92]
	5650 Move [X31+72], W27
	5651 Multiply S0, S2, S0
	5652 Move S2, 1
	5653 Subtract S1, S2, S1
	5654 Multiply S14, S0, S1
	5655 Compare W8, 0
	5656 JumpIfEqual {5658}
	5657 Move W27, [X31+332]
	5658 NotImplemented "Instruction MADD not yet implemented."
	5659 Move W8, [X8+400]
	5660 Move W27, [X31+332]
	5661 NotImplemented "Instruction FNEG not yet implemented."
	5662 And W31, W8, 1
	5663 NotImplemented "Instruction FCSEL not yet implemented."
	5664 NotImplemented "Instruction MADD not yet implemented."
	5665 Add X29, X29, 136
	5666 Move V0, [X29]
	5667 Move W8, 0x7F800000
	5668 Move S1, W8
	5669 Move W8, 0xCF000000
	5670 NotImplemented "Instruction LDUR not yet implemented."
	5671 Move S2, W8
	5672 NotImplemented "Instruction FCVTZS not yet implemented."
	5673 NotImplemented "Instruction SCVTF not yet implemented."
	5674 NotImplemented "Instruction FCVTZS not yet implemented."
	5675 NotImplemented "Instruction FCMP not yet implemented."
	5676 NotImplemented "Instruction SCVTF not yet implemented."
	5677 Move X25, X22
	5678 Move X22, X29
	5679 Move X21, X29
	5680 NotImplemented "Instruction FCSEL not yet implemented."
	5681 NotImplemented "Instruction FCMP not yet implemented."
	5682 Add X22, X22, 76
	5683 Move V8, [X22]
	5684 Add X21, X21, 80
	5685 Move V10, [X21]
	5686 NotImplemented "Instruction FCSEL not yet implemented."
	5687 Subtract S13, S3, S9
	5688 Subtract S11, S0, S12
	5689 Move X0, X19
	5690 Move V0, V13
	5691 Move V1, V11
	5692 Move X1, X31
	5693 Move W20, 376
	5694 Call TMP_Text.PackUV, X0, V0, V1
	5695 Move [X29-4], S0
	5696 Move W8, [X25+24]
	5697 NotImplemented "Instruction CMP not yet implemented."
	5698 Subtract S10, S10, S12
	5699 Move X0, X19
	5700 Move V0, V13
	5701 Move V1, V10
	5702 Move X1, X31
	5703 Move [X29], S14
	5704 Call TMP_Text.PackUV, X0, V0, V1
	5705 NotImplemented "Instruction MADD not yet implemented."
	5706 Move [X8+172], S0
	5707 Move W8, [X25+24]
	5708 NotImplemented "Instruction CMP not yet implemented."
	5709 Subtract S13, S8, S9
	5710 NotImplemented "Instruction MADD not yet implemented."
	5711 Move X0, X19
	5712 Move V0, V13
	5713 Move V1, V10
	5714 Move X1, X31
	5715 Move [X8+176], S14
	5716 Call TMP_Text.PackUV, X0, V0, V1
	5717 Move [X22], S0
	5718 Move W8, [X25+24]
	5719 NotImplemented "Instruction CMP not yet implemented."
	5720 Move X0, X19
	5721 Move V0, V13
	5722 Move V1, V11
	5723 Move X1, X31
	5724 Move X22, X25
	5725 Move [X21], S14
	5726 Call TMP_Text.PackUV, X0, V0, V1
	5727 NotImplemented "Instruction MADD not yet implemented."
	5728 Move [X8+252], S0
	5729 Move X21, [X25+24]
	5730 Move [X31+332], W27
	5731 NotImplemented "Instruction CMP not yet implemented."
	5732 NotImplemented "Instruction MADD not yet implemented."
	5733 Move X20, [X31+336]
	5734 Move V2, [X31+256]
	5735 Move V1, [X31+272]
	5736 Move X14, [X31+320]
	5737 Move X15, [X31+88]
	5738 Move W27, [X31+72]
	5739 Move W25, 376
	5740 Move [X8+256], S14
	5741 Move W8, [X19+808]
	5742 NotImplemented "Instruction CMP not yet implemented."
	5743 Move W8, [X19+812]
	5744 Move W9, [X31+196]
	5745 NotImplemented "Instruction CMP not yet implemented."
	5746 Move W8, [X19+816]
	5747 NotImplemented "Instruction CMP not yet implemented."
	5748 Move W8, [X19+736]
	5749 NotImplemented "Instruction CMP not yet implemented."
	5750 Move W8, [X19+816]
	5751 NotImplemented "Instruction CMP not yet implemented."
	5752 Move W8, [X19+736]
	5753 NotImplemented "Instruction CMP not yet implemented."
	5754 NotImplemented "Instruction CMP not yet implemented."
	5755 NotImplemented "Instruction MADD not yet implemented."
	5756 Move W8, [X8+104]
	5757 Move W9, [X31+68]
	5758 NotImplemented "Instruction CMP not yet implemented."
	5759 Move W21, 376
	5760 NotImplemented "Instruction MADD not yet implemented."
	5761 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5762 Move V2, [X8+112]
	5763 Move V4, [X8+152]
	5764 Move V6, [X8+192]
	5765 Move V16, [X8+232]
	5766 Move V3, [X8+120]
	5767 Move V5, [X8+160]
	5768 Move V7, [X8+200]
	5769 Add V2, V0, V2
	5770 Add V4, V0, V4
	5771 Add V6, V0, V6
	5772 Add V0, V0, V16
	5773 Move V16, [X8+240]
	5774 Move X26, [X31+352]
	5775 Move S1, V1.S[1]
	5776 Add S3, S1, S3
	5777 Add S5, S1, S5
	5778 Add S7, S1, S7
	5779 Add S1, S1, S16
	5780 Move [X8+112], D2
	5781 Move [X8+120], S3
	5782 Move [X8+152], D4
	5783 Move [X8+160], S5
	5784 Move [X8+192], D6
	5785 Move [X8+200], S7
	5786 Move [X8+232], D0
	5787 Move [X8+240], S1
	5788 Move W25, 92
	5789 Compare W27, 0
	5790 JumpIfNotEqual {5845}
	5791 NotImplemented "Instruction CMP not yet implemented."
	5792 Move X8, 0x917000
	5793 Move W8, [X8+1923]
	5794 Compare W8, 0
	5795 JumpIfNotEqual {5806}
	5796 Move X0, 0x632000
	5797 Move X0, [X0+1440]
	5798 Move X21, X15
	5799 Call 0x1C17CF4
	5800 Move X8, 0x917000
	5801 Move W9, 1
	5802 Move [X8+1923], W9
	5803 Move X15, X21
	5804 Move X14, [X31+320]
	5805 Move W21, [X22+24]
	5806 Move X10, 0x632000
	5807 Move X10, [X10+1440]
	5808 Move W9, 376
	5809 NotImplemented "Instruction CMP not yet implemented."
	5810 Move W25, 92
	5811 Move X8, [X10]
	5812 Move X8, [X8+184]
	5813 Move V0, [X8]
	5814 Move V1, [X8+8]
	5815 NotImplemented "Instruction NOP not yet implemented."
	5816 NotImplemented "Instruction MADD not yet implemented."
	5817 Move [X8+112], D0
	5818 Move [X8+120], S1
	5819 Move X8, [X10]
	5820 Move W21, 376
	5821 Move X8, [X8+184]
	5822 Move V0, [X8]
	5823 Move V1, [X8+8]
	5824 NotImplemented "Instruction NOP not yet implemented."
	5825 NotImplemented "Instruction MADD not yet implemented."
	5826 Move [X8+152], D0
	5827 Move [X8+160], S1
	5828 Move X9, [X10]
	5829 Move X9, [X9+184]
	5830 Move V0, [X9]
	5831 Move V1, [X9+8]
	5832 Move [X8+192], D0
	5833 Move [X8+200], S1
	5834 Move X9, [X10]
	5835 Move X9, [X9+184]
	5836 Move V0, [X9]
	5837 Move V1, [X9+8]
	5838 Add X9, X26, 404
	5839 Move X26, [X31+352]
	5840 Move [X8+232], D0
	5841 Move [X8+240], S1
	5842 Move [X9], W31
	5843 Compare W27, 0
	5844 JumpIfEqual {5882}
	5845 NotImplemented "Instruction CMP not yet implemented."
	5846 Move X8, [X19]
	5847 Move X9, [X8+2296]
	5848 Move X3, [X8+2304]
	5849 Move X26, [X31+352]
	5850 NotImplemented "Instruction CMP not yet implemented."
	5851 Move W25, 92
	5852 Move W21, 376
	5853 NotImplemented "Instruction MADD not yet implemented."
	5854 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5855 Move V2, [X8+112]
	5856 Move V4, [X8+152]
	5857 Move V6, [X8+192]
	5858 Move V16, [X8+232]
	5859 Move V3, [X8+120]
	5860 Move V5, [X8+160]
	5861 Move V7, [X8+200]
	5862 Add V2, V0, V2
	5863 Add V4, V0, V4
	5864 Add V6, V0, V6
	5865 Add V0, V0, V16
	5866 Move V16, [X8+240]
	5867 Move S1, V1.S[1]
	5868 Add S3, S1, S3
	5869 Add S5, S1, S5
	5870 Add S7, S1, S7
	5871 Add S1, S1, S16
	5872 Move [X8+112], D2
	5873 Move [X8+120], S3
	5874 Move [X8+152], D4
	5875 Move [X8+160], S5
	5876 Move [X8+192], D6
	5877 Move [X8+200], S7
	5878 Move [X8+232], D0
	5879 Move [X8+240], S1
	5880 Compare W27, 0
	5881 JumpIfNotEqual {5845}
	5882 Move X8, [X19]
	5883 Move X9, [X8+2264]
	5884 Move X3, [X8+2272]
	5885 Move X0, X19
	5886 Move W1, W24
	5887 Move W2, W31
	5888 Move X27, X15
	5889 NotImplemented "Instruction BLR not yet implemented."
	5890 Move X14, [X31+320]
	5891 Move X15, X27
	5892 Add X27, X31, 3984
	5893 Move X8, [X23]
	5894 Compare X8, 0
	5895 JumpIfEqual {7639}
	5896 Move X8, [X8+56]
	5897 Move V6, [X31+256]
	5898 Move V5, [X31+272]
	5899 Compare X8, 0
	5900 JumpIfEqual {7639}
	5901 Move W9, [X8+24]
	5902 NotImplemented "Instruction CMP not yet implemented."
	5903 NotImplemented "Instruction MADD not yet implemented."
	5904 Add X8, X8, 284
	5905 Move V2, [X8]
	5906 Move V3, [X8+8]
	5907 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5908 Move S1, V5.S[1]
	5909 Add V2, V0, V2
	5910 Add S3, S1, S3
	5911 Move [X8], D2
	5912 Move [X8+8], S3
	5913 Move X8, [X23]
	5914 Compare X8, 0
	5915 JumpIfEqual {7639}
	5916 Move X8, [X8+56]
	5917 Compare X8, 0
	5918 JumpIfEqual {7639}
	5919 Move W9, [X8+24]
	5920 NotImplemented "Instruction CMP not yet implemented."
	5921 NotImplemented "Instruction MADD not yet implemented."
	5922 Move V2, [X8+272]
	5923 Move V3, [X8+280]
	5924 Add V2, V0, V2
	5925 Add S3, S1, S3
	5926 Move [X8+272], D2
	5927 Move [X8+280], S3
	5928 Move X8, [X23]
	5929 Compare X8, 0
	5930 JumpIfEqual {7639}
	5931 Move X8, [X8+56]
	5932 Compare X8, 0
	5933 JumpIfEqual {7639}
	5934 Move W9, [X8+24]
	5935 NotImplemented "Instruction CMP not yet implemented."
	5936 NotImplemented "Instruction MADD not yet implemented."
	5937 Move V2, [X8+296]
	5938 Move V3, [X8+304]
	5939 Add V0, V0, V2
	5940 Add S1, S1, S3
	5941 Move [X8+296], D0
	5942 Move [X8+304], S1
	5943 Move X8, [X23]
	5944 Compare X8, 0
	5945 JumpIfEqual {7639}
	5946 Move X8, [X8+56]
	5947 Compare X8, 0
	5948 JumpIfEqual {7639}
	5949 Move W9, [X8+24]
	5950 NotImplemented "Instruction CMP not yet implemented."
	5951 NotImplemented "Instruction MADD not yet implemented."
	5952 Move V0, [X8+308]
	5953 Move V1, [X8+312]
	5954 Add S0, S6, S0
	5955 Add V1, V5, V1
	5956 Move [X8+308], S0
	5957 Move [X8+312], D1
	5958 Move X9, [X23]
	5959 Compare X9, 0
	5960 JumpIfEqual {7639}
	5961 Move X8, [X9+56]
	5962 Compare X8, 0
	5963 JumpIfEqual {7639}
	5964 Move W10, [X8+24]
	5965 NotImplemented "Instruction CMP not yet implemented."
	5966 NotImplemented "Instruction MADD not yet implemented."
	5967 Move D2, [X11+320]
	5968 Move D4, [X11+328]
	5969 Move V3, [X11+336]
	5970 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5971 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5972 NotImplemented "Instruction CMP not yet implemented."
	5973 Add V1, V1, V2
	5974 Add S2, S5, S3
	5975 Add V3, V0, V4
	5976 Move [X11+336], S2
	5977 Move [X11+320], D1
	5978 Move [X11+328], D3
	5979 Move W8, [X26]
	5980 Subtract W8, W8, 1
	5981 NotImplemented "Instruction CMP not yet implemented."
	5982 Move X11, [X9+80]
	5983 Compare X11, 0
	5984 JumpIfEqual {7639}
	5985 Move W9, [X11+24]
	5986 NotImplemented "Instruction CMP not yet implemented."
	5987 Move X9, W15
	5988 NotImplemented "Instruction MADD not yet implemented."
	5989 NotImplemented "Instruction LDUR not yet implemented."
	5990 Move S2, [X13+84]
	5991 Move S3, [X13+88]
	5992 NotImplemented "Instruction LDRSW not yet implemented."
	5993 Add V4, V0, V1
	5994 Add S1, S5, S2
	5995 Add S2, S6, S3
	5996 NotImplemented "Instruction CMP not yet implemented."
	5997 Move [X13+76], D4
	5998 Move [X13+84], S1
	5999 Move [X13+92], S2
	6000 NotImplemented "Instruction MADD not yet implemented."
	6001 Move W8, [X8+284]
	6002 NotImplemented "Instruction NOP not yet implemented."
	6003 NotImplemented "Instruction MADD not yet implemented."
	6004 Move [X10+112], S1
	6005 Move [X10+108], W8
	6006 Move X10, [X23]
	6007 Compare X10, 0
	6008 JumpIfEqual {7639}
	6009 Move X8, [X10+80]
	6010 Compare X8, 0
	6011 JumpIfEqual {7639}
	6012 Move W11, [X8+24]
	6013 NotImplemented "Instruction CMP not yet implemented."
	6014 Move X10, [X10+56]
	6015 Compare X10, 0
	6016 JumpIfEqual {7639}
	6017 NotImplemented "Instruction MADD not yet implemented."
	6018 NotImplemented "Instruction LDRSW not yet implemented."
	6019 Move W12, [X10+24]
	6020 NotImplemented "Instruction CMP not yet implemented."
	6021 NotImplemented "Instruction MADD not yet implemented."
	6022 NotImplemented "Instruction MADD not yet implemented."
	6023 Move W9, [X10+296]
	6024 Move W10, [X8+76]
	6025 Move [X8+116], W9
	6026 Move [X8+120], W10
	6027 Move W8, [X26]
	6028 Subtract W8, W8, 1
	6029 NotImplemented "Instruction CMP not yet implemented."
	6030 Move X9, [X23]
	6031 Compare X9, 0
	6032 JumpIfEqual {7639}
	6033 Move X8, [X9+80]
	6034 Compare X8, 0
	6035 JumpIfEqual {7639}
	6036 Move W10, [X8+24]
	6037 NotImplemented "Instruction CMP not yet implemented."
	6038 NotImplemented "Instruction MADD not yet implemented."
	6039 NotImplemented "Instruction LDUR not yet implemented."
	6040 Move S2, [X10+84]
	6041 Move S3, [X10+88]
	6042 Add V1, V0, V1
	6043 Add S0, S5, S2
	6044 Add S2, S6, S3
	6045 Move [X10+76], D1
	6046 Move [X10+84], S0
	6047 Move [X10+92], S2
	6048 Move X9, [X9+56]
	6049 Compare X9, 0
	6050 JumpIfEqual {7639}
	6051 NotImplemented "Instruction LDRSW not yet implemented."
	6052 Move W11, [X9+24]
	6053 NotImplemented "Instruction CMP not yet implemented."
	6054 NotImplemented "Instruction MADD not yet implemented."
	6055 Move W9, [X9+284]
	6056 NotImplemented "Instruction NOP not yet implemented."
	6057 NotImplemented "Instruction MADD not yet implemented."
	6058 Move [X8+112], S0
	6059 Move [X8+108], W9
	6060 Move X9, [X23]
	6061 Compare X9, 0
	6062 JumpIfEqual {7639}
	6063 Move X8, [X9+80]
	6064 Compare X8, 0
	6065 JumpIfEqual {7639}
	6066 Move W10, [X8+24]
	6067 NotImplemented "Instruction CMP not yet implemented."
	6068 Move X9, [X9+56]
	6069 Compare X9, 0
	6070 JumpIfEqual {7639}
	6071 NotImplemented "Instruction MADD not yet implemented."
	6072 NotImplemented "Instruction LDRSW not yet implemented."
	6073 Move W11, [X9+24]
	6074 NotImplemented "Instruction CMP not yet implemented."
	6075 NotImplemented "Instruction MADD not yet implemented."
	6076 NotImplemented "Instruction MADD not yet implemented."
	6077 Move W9, [X9+296]
	6078 Move W10, [X8+76]
	6079 Move [X8+116], W9
	6080 Move [X8+120], W10
	6081 Move X8, 0x634000
	6082 Move X8, [X8+368]
	6083 Move X0, [X8]
	6084 Move W8, [X0+224]
	6085 Compare W8, 0
	6086 JumpIfNotEqual {6088}
	6087 Call 0x1C17DFC
	6088 Move W29, [X31+348]
	6089 Move X1, X31
	6090 Move W0, W29
	6091 Call Char.IsLetterOrDigit, X0
	6092 Move TEMP, X0
	6093 And TEMP, TEMP, 1
	6094 Compare TEMP, 1
	6095 JumpIfEqual {6103}
	6096 Move TEMP, 0x200F
	6097 Not TEMP
	6098 Move W8, TEMP
	6099 Add W8, W29, W8
	6100 NotImplemented "Instruction CMP not yet implemented."
	6101 NotImplemented "Instruction CMP not yet implemented."
	6102 NotImplemented "Instruction CMP not yet implemented."
	6103 Move W9, [X31+240]
	6104 Move W8, [X26]
	6105 And W31, W9, 1
	6106 Move W9, [X31+332]
	6107 Subtract W8, W8, 1
	6108 NotImplemented "Instruction CSEL not yet implemented."
	6109 NotImplemented "Instruction CMP not yet implemented."
	6110 Move [X31+332], W9
	6111 Move X8, [X23]
	6112 Move X29, [X31+296]
	6113 Compare X8, 0
	6114 JumpIfEqual {7639}
	6115 Move X27, X8
	6116 Add X27, X27, 64
	6117 Move X9, [X27]
	6118 Move X12, [X31+320]
	6119 Compare X9, 0
	6120 JumpIfEqual {7639}
	6121 NotImplemented "Instruction LDRSW not yet implemented."
	6122 Move W21, [X9+24]
	6123 Add W9, W20, 1
	6124 NotImplemented "Instruction CMP not yet implemented."
	6125 Move X8, 0x697000
	6126 Move X8, [X8+872]
	6127 Move X0, [X8]
	6128 Move W8, [X0+224]
	6129 Compare W8, 0
	6130 JumpIfNotEqual {6132}
	6131 Call 0x1C17DFC
	6132 Move X8, 0x697000
	6133 Move X8, [X8+864]
	6134 Add W1, W21, 1
	6135 Move X0, X27
	6136 Move X2, [X8]
	6137 Call TMP_TextInfo.Resize, X0, X1
	6138 Move X8, [X23]
	6139 Move X12, [X31+320]
	6140 Compare X8, 0
	6141 JumpIfEqual {7639}
	6142 Move X9, [X8+64]
	6143 Compare X9, 0
	6144 JumpIfEqual {7639}
	6145 Move W10, [X9+24]
	6146 Add X27, X31, 3984
	6147 Move W21, 376
	6148 NotImplemented "Instruction CMP not yet implemented."
	6149 Move W10, 24
	6150 NotImplemented "Instruction MADD not yet implemented."
	6151 Move W10, [X31+308]
	6152 Move W11, [X31+332]
	6153 Move [X9+32], X19
	6154 Subtract W10, W10, W11
	6155 Move [X9+40], W11
	6156 Move [X9+44], W24
	6157 Move [X9+48], W10
	6158 Move W10, [X8+36]
	6159 Move X9, [X8+80]
	6160 Add W10, W10, 1
	6161 Move [X8+36], W10
	6162 Compare X9, 0
	6163 JumpIfEqual {7639}
	6164 Move W8, [X9+24]
	6165 Move X20, [X31+336]
	6166 NotImplemented "Instruction CMP not yet implemented."
	6167 NotImplemented "Instruction MADD not yet implemented."
	6168 Move W9, [X8+48]
	6169 Move W10, [X31+196]
	6170 Add W9, W9, 1
	6171 Add W10, W10, 1
	6172 Move [X31+196], W10
	6173 Move [X8+48], W9
	6174 Move X29, [X31+296]
	6175 Move W8, 1
	6176 Move [X31+240], W8
	6177 Move X8, [X23]
	6178 Compare X8, 0
	6179 JumpIfEqual {7639}
	6180 Move X8, [X8+56]
	6181 Compare X8, 0
	6182 JumpIfEqual {7639}
	6183 Move W9, [X8+24]
	6184 NotImplemented "Instruction CMP not yet implemented."
	6185 NotImplemented "Instruction MADD not yet implemented."
	6186 Move W10, [X10+400]
	6187 Move TEMP, X10
	6188 And TEMP, TEMP, 4
	6189 Compare TEMP, 4
	6190 JumpIfEqual {6206}
	6191 Move W25, [X31+308]
	6192 Move W10, [X31+252]
	6193 Move TEMP, X10
	6194 And TEMP, TEMP, 1
	6195 Compare TEMP, 1
	6196 JumpIfNotEqual {6516}
	6197 Subtract W10, W25, 2
	6198 NotImplemented "Instruction CMP not yet implemented."
	6199 Move X9, [X31+312]
	6200 Add X8, X8, X9
	6201 Subtract X10, X8, 816
	6202 Subtract X8, X8, 760
	6203 Move X9, [X19]
	6204 Move V3, [X10]
	6205 Move V7, [X8]
	6206 Move W9, [X31+4180]
	6207 NotImplemented "Instruction NOP not yet implemented."
	6208 NotImplemented "Instruction MADD not yet implemented."
	6209 Move W21, [X8+104]
	6210 Move W25, 376
	6211 Move [X8+364], W9
	6212 Move W9, [X19+808]
	6213 NotImplemented "Instruction CMP not yet implemented."
	6214 Move W8, [X19+816]
	6215 NotImplemented "Instruction CMP not yet implemented."
	6216 Move W20, W31
	6217 Move X8, 0x634000
	6218 Move X8, [X8+368]
	6219 Move X0, [X8]
	6220 Move W8, [X0+224]
	6221 Compare W8, 0
	6222 JumpIfNotEqual {6224}
	6223 Call 0x1C17DFC
	6224 Move W29, [X31+348]
	6225 Move X1, X31
	6226 Move W0, W29
	6227 Call Char.IsWhiteSpace, X0
	6228 Move W8, 0x200B
	6229 NotImplemented "Instruction CMP not yet implemented."
	6230 Move X29, [X31+296]
	6231 Move TEMP, X0
	6232 And TEMP, TEMP, 1
	6233 Compare TEMP, 1
	6234 JumpIfEqual {6480}
	6235 Move X8, [X23]
	6236 Compare X8, 0
	6237 JumpIfEqual {7639}
	6238 Move X9, [X8+56]
	6239 Compare X9, 0
	6240 JumpIfEqual {7639}
	6241 Move W10, [X9+24]
	6242 NotImplemented "Instruction CMP not yet implemented."
	6243 NotImplemented "Instruction MADD not yet implemented."
	6244 Move V0, [X9+352]
	6245 Move W9, [X31+84]
	6246 NotImplemented "Instruction FABS not yet implemented."
	6247 NotImplemented "Instruction FCMP not yet implemented."
	6248 NotImplemented "Instruction FCSEL not yet implemented."
	6249 Move V0, [X31+228]
	6250 NotImplemented "Instruction FCMP not yet implemented."
	6251 NotImplemented "Instruction FCSEL not yet implemented."
	6252 NotImplemented "Instruction CMP not yet implemented."
	6253 Move [X31+228], S0
	6254 Move X9, 0x697000
	6255 Move X9, [X9+1000]
	6256 Move X0, [X9]
	6257 Move W9, [X0+224]
	6258 Compare W9, 0
	6259 JumpIfEqual {6450}
	6260 Move X9, [X0+184]
	6261 Move W8, [X19+736]
	6262 NotImplemented "Instruction CMP not yet implemented."
	6263 Move W8, [X19+824]
	6264 Add W9, W21, 1
	6265 NotImplemented "Instruction CMP not yet implemented."
	6266 Move W20, 1
	6267 Move X29, [X31+296]
	6268 Move W8, [X31+240]
	6269 Move TEMP, X8
	6270 And TEMP, TEMP, 1
	6271 Compare TEMP, 1
	6272 JumpIfNotEqual {6329}
	6273 Move W8, [X31+308]
	6274 Move X29, [X31+296]
	6275 NotImplemented "Instruction CMP not yet implemented."
	6276 Move W8, [X22+24]
	6277 Subtract W9, W8, 1
	6278 NotImplemented "Instruction CMP not yet implemented."
	6279 Move W9, [X26]
	6280 NotImplemented "Instruction CMP not yet implemented."
	6281 Move W10, [X31+348]
	6282 Move W9, 0x2019
	6283 NotImplemented "Instruction CMP not yet implemented."
	6284 Move W9, [X31+348]
	6285 NotImplemented "Instruction CMP not yet implemented."
	6286 Move W9, [X31+308]
	6287 Subtract W9, W9, 2
	6288 NotImplemented "Instruction CMP not yet implemented."
	6289 Move X8, 0x634000
	6290 Move X8, [X8+368]
	6291 Move X0, [X8]
	6292 Move X8, [X31+312]
	6293 Move W9, [X0+224]
	6294 Add X8, X22, X8
	6295 Subtract X8, X8, 1080
	6296 NotImplemented "Instruction LDRH not yet implemented."
	6297 Compare W9, 0
	6298 JumpIfNotEqual {6300}
	6299 Call 0x1C17DFC
	6300 Move W0, W27
	6301 Move X1, X31
	6302 Call Char.IsLetterOrDigit, X0
	6303 Move TEMP, X0
	6304 And TEMP, TEMP, 1
	6305 Compare TEMP, 1
	6306 JumpIfNotEqual {6366}
	6307 Move W8, [X22+24]
	6308 Move W9, [X31+308]
	6309 NotImplemented "Instruction CMP not yet implemented."
	6310 Move X8, 0x634000
	6311 Move X8, [X8+368]
	6312 Move X0, [X8]
	6313 Move X8, [X31+312]
	6314 Move W9, [X0+224]
	6315 Add X8, X22, X8
	6316 Subtract X8, X8, 328
	6317 NotImplemented "Instruction LDRH not yet implemented."
	6318 Compare W9, 0
	6319 JumpIfNotEqual {6321}
	6320 Call 0x1C17DFC
	6321 Move W0, W27
	6322 Move X1, X31
	6323 Call Char.IsLetterOrDigit, X0
	6324 Add X27, X31, 3984
	6325 Move TEMP, X0
	6326 And TEMP, TEMP, 1
	6327 Compare TEMP, 1
	6328 JumpIfEqual {6175}
	6329 Move W8, [X31+308]
	6330 Move X29, [X31+296]
	6331 NotImplemented "Instruction CMP not yet implemented."
	6332 Move X8, 0x634000
	6333 Move X8, [X8+368]
	6334 Move X0, [X8]
	6335 Move W8, [X0+224]
	6336 Compare W8, 0
	6337 JumpIfNotEqual {6339}
	6338 Call 0x1C17DFC
	6339 Move W0, [X31+348]
	6340 Move X1, X31
	6341 Call Char.IsPunctuation, X0
	6342 Move TEMP, X0
	6343 And TEMP, TEMP, 1
	6344 Compare TEMP, 1
	6345 JumpIfNotEqual {6366}
	6346 Move X8, 0x634000
	6347 Move X8, [X8+368]
	6348 Move X0, [X8]
	6349 Move W8, [X0+224]
	6350 Compare W8, 0
	6351 JumpIfNotEqual {6353}
	6352 Call 0x1C17DFC
	6353 Move W29, [X31+348]
	6354 Move X1, X31
	6355 Move W0, W29
	6356 Call Char.IsWhiteSpace, X0
	6357 Move W8, 0x200B
	6358 NotImplemented "Instruction CMP not yet implemented."
	6359 Move X29, [X31+296]
	6360 Move TEMP, X0
	6361 And TEMP, TEMP, 1
	6362 Compare TEMP, 1
	6363 JumpIfEqual {6366}
	6364 Move W8, [X26]
	6365 NotImplemented "Instruction CMP not yet implemented."
	6366 Move W8, [X26]
	6367 Subtract W8, W8, 1
	6368 NotImplemented "Instruction CMP not yet implemented."
	6369 Move X8, 0x634000
	6370 Move X8, [X8+368]
	6371 Move X0, [X8]
	6372 Move W8, [X0+224]
	6373 Compare W8, 0
	6374 JumpIfNotEqual {6376}
	6375 Call 0x1C17DFC
	6376 Move W0, [X31+348]
	6377 Move X1, X31
	6378 Call Char.IsLetterOrDigit, X0
	6379 Move W20, [X31+244]
	6380 Move TEMP, X0
	6381 And TEMP, TEMP, 1
	6382 Compare TEMP, 1
	6383 JumpIfEqual {6386}
	6384 Move W8, [X31+308]
	6385 Subtract W20, W8, 2
	6386 Move X8, [X23]
	6387 Compare X8, 0
	6388 JumpIfEqual {7639}
	6389 Move X27, X8
	6390 Add X27, X27, 64
	6391 Move X9, [X27]
	6392 Move X12, [X31+320]
	6393 Compare X9, 0
	6394 JumpIfEqual {7639}
	6395 NotImplemented "Instruction LDRSW not yet implemented."
	6396 Move W22, [X9+24]
	6397 Add W9, W21, 1
	6398 NotImplemented "Instruction CMP not yet implemented."
	6399 Move X8, 0x697000
	6400 Move X8, [X8+872]
	6401 Move X0, [X8]
	6402 Move W8, [X0+224]
	6403 Compare W8, 0
	6404 JumpIfNotEqual {6406}
	6405 Call 0x1C17DFC
	6406 Move X8, 0x697000
	6407 Move X8, [X8+864]
	6408 Add W1, W22, 1
	6409 Move X0, X27
	6410 Move X2, [X8]
	6411 Call TMP_TextInfo.Resize, X0, X1
	6412 Move X8, [X23]
	6413 Move X12, [X31+320]
	6414 Compare X8, 0
	6415 JumpIfEqual {7639}
	6416 Move X9, [X8+64]
	6417 Compare X9, 0
	6418 JumpIfEqual {7639}
	6419 Move W10, [X9+24]
	6420 Move X22, [X31+176]
	6421 Add X27, X31, 3984
	6422 NotImplemented "Instruction CMP not yet implemented."
	6423 Move W11, [X31+332]
	6424 Move W10, 24
	6425 NotImplemented "Instruction MADD not yet implemented."
	6426 Move [X9+32], X19
	6427 Subtract W10, W20, W11
	6428 Add W10, W10, 1
	6429 Move [X9+40], W11
	6430 Move [X9+44], W20
	6431 Move [X9+48], W10
	6432 Move W10, [X8+36]
	6433 Move X9, [X8+80]
	6434 Add W10, W10, 1
	6435 Move [X8+36], W10
	6436 Compare X9, 0
	6437 JumpIfEqual {7639}
	6438 Move W8, [X9+24]
	6439 Move X20, [X31+336]
	6440 Move W21, 376
	6441 NotImplemented "Instruction CMP not yet implemented."
	6442 NotImplemented "Instruction MADD not yet implemented."
	6443 Move W9, [X8+48]
	6444 Move W10, [X31+196]
	6445 Move [X31+240], W31
	6446 Add W9, W9, 1
	6447 Add W10, W10, 1
	6448 Move [X31+196], W10
	6449 Move [X8+48], W9
	6450 Call 0x1C17DFC
	6451 Move X8, [X23]
	6452 Compare X8, 0
	6453 JumpIfEqual {7639}
	6454 Move X9, 0x696000
	6455 Move X9, [X9+1000]
	6456 Move X9, [X9]
	6457 Move X9, [X9+184]
	6458 Move V0, [X9+5544]
	6459 Move [X31+232], S0
	6460 Move X8, [X8+56]
	6461 Compare X8, 0
	6462 JumpIfEqual {7639}
	6463 Move W9, [X8+24]
	6464 NotImplemented "Instruction CMP not yet implemented."
	6465 Move X9, [X19+248]
	6466 Compare X9, 0
	6467 JumpIfEqual {7639}
	6468 NotImplemented "Instruction MADD not yet implemented."
	6469 Move V8, [X8+332]
	6470 Add X0, X9, 80
	6471 Move X1, X31
	6472 Call FaceInfo.get_underlineOffset, X0
	6473 Move V1, [X31+232]
	6474 Multiply S0, S15, S0
	6475 Add S0, S8, S0
	6476 Move [X31+84], W21
	6477 NotImplemented "Instruction FCMP not yet implemented."
	6478 NotImplemented "Instruction FCSEL not yet implemented."
	6479 Move [X31+232], S1
	6480 Move W25, [X31+308]
	6481 Move W8, [X31+252]
	6482 Move TEMP, X8
	6483 And TEMP, TEMP, 1
	6484 Compare TEMP, 1
	6485 JumpIfNotEqual {6487}
	6486 Move W21, 376
	6487 Move W8, [X31+348]
	6488 Move W21, 376
	6489 Move [X31+252], W31
	6490 NotImplemented "Instruction CMP not yet implemented."
	6491 And W8, W8, 0xFFFE
	6492 NotImplemented "Instruction CMP not yet implemented."
	6493 Move X8, [X31+288]
	6494 NotImplemented "Instruction CMP not yet implemented."
	6495 Xor W8, W20, 1
	6496 Move TEMP, X8
	6497 And TEMP, TEMP, 1
	6498 Compare TEMP, 1
	6499 JumpIfEqual {6587}
	6500 Move X8, [X31+288]
	6501 NotImplemented "Instruction CMP not yet implemented."
	6502 Move X8, 0x633000
	6503 Move X8, [X8+368]
	6504 Move X0, [X8]
	6505 Move W8, [X0+224]
	6506 Compare W8, 0
	6507 JumpIfNotEqual {6509}
	6508 Call 0x1C17DFC
	6509 Move W0, [X31+348]
	6510 Move X1, X31
	6511 Call Char.IsSeparator, X0
	6512 Move TEMP, X0
	6513 And TEMP, TEMP, 1
	6514 Compare TEMP, 1
	6515 JumpIfNotEqual {6517}
	6516 Move [X31+252], W31
	6517 Move X8, [X23]
	6518 Compare X8, 0
	6519 JumpIfEqual {7639}
	6520 Move X8, [X8+56]
	6521 Compare X8, 0
	6522 JumpIfEqual {7639}
	6523 Move W9, [X8+24]
	6524 NotImplemented "Instruction CMP not yet implemented."
	6525 NotImplemented "Instruction MADD not yet implemented."
	6526 Move V0, [X8+352]
	6527 Move V1, [X8+284]
	6528 NotImplemented "Instruction FCMP not yet implemented."
	6529 Move W8, [X8+360]
	6530 NotImplemented "Instruction FCSEL not yet implemented."
	6531 Move [X31+104], S1
	6532 Move [X31+112], S0
	6533 Move V1, [X31+228]
	6534 Move S0, W31
	6535 Move [X31+100], S0
	6536 Move V0, [X31+232]
	6537 NotImplemented "Instruction FCSEL not yet implemented."
	6538 Move [X31+112], X8
	6539 Move [X31+228], S1
	6540 Move [X31+96], S0
	6541 Move W8, [X26]
	6542 Subtract W8, W8, 1
	6543 Move X8, [X23]
	6544 Compare X8, 0
	6545 JumpIfEqual {7639}
	6546 Move X8, [X8+56]
	6547 Compare X8, 0
	6548 JumpIfEqual {7639}
	6549 Move W9, [X8+24]
	6550 NotImplemented "Instruction CMP not yet implemented."
	6551 NotImplemented "Instruction MADD not yet implemented."
	6552 Move X9, [X19]
	6553 Move V3, [X8+296]
	6554 Move V7, [X8+352]
	6555 Move X8, [X9+2312]
	6556 Move X3, [X9+2320]
	6557 Move S0, [X31+228]
	6558 Move S4, [X31+232]
	6559 Move X9, [X31+112]
	6560 Move V1, [X31+96]
	6561 Move V6, [X31+108]
	6562 Move [X31+8], S0
	6563 Move S2, [X31+100]
	6564 Move S0, [X31+104]
	6565 Add X1, X31, 4096
	6566 Move W2, W9
	6567 Move S5, W31
	6568 Add X1, X1, 84
	6569 Move X0, X19
	6570 Move [X31], S15
	6571 NotImplemented "Instruction BLR not yet implemented."
	6572 Move X20, 0x696000
	6573 Move X20, [X20+1000]
	6574 Move X0, [X20]
	6575 Move W8, [X0+224]
	6576 Compare W8, 0
	6577 JumpIfNotEqual {6580}
	6578 Call 0x1C17DFC
	6579 Move X0, [X20]
	6580 Move X8, [X0+184]
	6581 Move S15, W31
	6582 Move S0, W31
	6583 Move [X31+252], W31
	6584 Move V1, [X8+5544]
	6585 Move [X31+228], S0
	6586 Move [X31+236], S1
	6587 Move X8, [X23]
	6588 Compare X8, 0
	6589 JumpIfEqual {7639}
	6590 Move X8, [X8+56]
	6591 Compare X8, 0
	6592 JumpIfEqual {7639}
	6593 Move W9, [X8+24]
	6594 NotImplemented "Instruction CMP not yet implemented."
	6595 Compare X29, 0
	6596 JumpIfEqual {7639}
	6597 NotImplemented "Instruction MADD not yet implemented."
	6598 Move W20, [X8+400]
	6599 Add X0, X29, 80
	6600 Move X1, X31
	6601 Call FaceInfo.get_strikethroughOffset, X0
	6602 Move V11, V0
	6603 Move TEMP, X20
	6604 And TEMP, TEMP, 64
	6605 Compare TEMP, 64
	6606 JumpIfEqual {6633}
	6607 Move W8, [X31+248]
	6608 Move TEMP, X8
	6609 And TEMP, TEMP, 1
	6610 Compare TEMP, 1
	6611 JumpIfNotEqual {6686}
	6612 Move X8, [X23]
	6613 Compare X8, 0
	6614 JumpIfEqual {7639}
	6615 Move X8, [X8+56]
	6616 Compare X8, 0
	6617 JumpIfEqual {7639}
	6618 Move W9, [X8+24]
	6619 Move X20, [X31+336]
	6620 Subtract W10, W25, 2
	6621 NotImplemented "Instruction CMP not yet implemented."
	6622 Move X9, [X31+312]
	6623 Move V6, [X31+148]
	6624 Add X8, X8, X9
	6625 Move X9, [X19]
	6626 Subtract X10, X8, 816
	6627 Subtract X8, X8, 780
	6628 Move V3, [X10]
	6629 Move V0, [X8]
	6630 Move X8, [X9+2312]
	6631 Move X3, [X9+2320]
	6632 Multiply S1, S6, S11
	6633 Move X8, [X23]
	6634 Compare X8, 0
	6635 JumpIfEqual {7639}
	6636 Move X9, [X8+56]
	6637 Move X12, [X31+336]
	6638 Compare X9, 0
	6639 JumpIfEqual {7639}
	6640 Move W10, [X9+24]
	6641 NotImplemented "Instruction CMP not yet implemented."
	6642 Move W10, [X31+4180]
	6643 NotImplemented "Instruction NOP not yet implemented."
	6644 NotImplemented "Instruction MADD not yet implemented."
	6645 Move [X11+372], W10
	6646 Move W10, [X19+808]
	6647 NotImplemented "Instruction CMP not yet implemented."
	6648 Move W10, [X19+816]
	6649 NotImplemented "Instruction CMP not yet implemented."
	6650 Move W20, W31
	6651 Move W9, [X31+348]
	6652 NotImplemented "Instruction CMP not yet implemented."
	6653 Move W9, [X31+348]
	6654 And W9, W9, 0xFFFE
	6655 NotImplemented "Instruction CMP not yet implemented."
	6656 Move X9, [X31+288]
	6657 NotImplemented "Instruction CMP not yet implemented."
	6658 Move W10, [X31+248]
	6659 Xor W9, W20, 1
	6660 Or W9, W10, W9
	6661 Move TEMP, X9
	6662 And TEMP, TEMP, 1
	6663 Compare TEMP, 1
	6664 JumpIfEqual {6681}
	6665 Move X9, [X31+288]
	6666 NotImplemented "Instruction CMP not yet implemented."
	6667 Move X8, 0x633000
	6668 Move X8, [X8+368]
	6669 Move X0, [X8]
	6670 Move W8, [X0+224]
	6671 Compare W8, 0
	6672 JumpIfNotEqual {6674}
	6673 Call 0x1C17DFC
	6674 Move W0, [X31+348]
	6675 Move X1, X31
	6676 Call Char.IsSeparator, X0
	6677 Move TEMP, X0
	6678 And TEMP, TEMP, 1
	6679 Compare TEMP, 1
	6680 JumpIfNotEqual {6754}
	6681 Move W8, [X31+248]
	6682 Move TEMP, X8
	6683 And TEMP, TEMP, 1
	6684 Compare TEMP, 1
	6685 JumpIfEqual {6778}
	6686 Move X20, [X31+336]
	6687 Move X9, [X31+208]
	6688 NotImplemented "Instruction CMP not yet implemented."
	6689 Move X9, [X31+288]
	6690 NotImplemented "Instruction CMP not yet implemented."
	6691 Move TEMP, X20
	6692 And TEMP, TEMP, 1
	6693 Compare TEMP, 1
	6694 JumpIfNotEqual {6883}
	6695 NotImplemented "Instruction CMP not yet implemented."
	6696 Move X8, [X23]
	6697 Compare X8, 0
	6698 JumpIfEqual {7639}
	6699 Move X8, [X8+56]
	6700 Compare X8, 0
	6701 JumpIfEqual {7639}
	6702 Move W9, [X8+24]
	6703 NotImplemented "Instruction CMP not yet implemented."
	6704 Move X9, [X31+312]
	6705 Move X2, X31
	6706 Move W1, [X8]
	6707 Move X8, [X31+112]
	6708 Move W27, W8
	6709 Move X0, X27
	6710 Call TMPro_ExtensionMethods.Compare, X0, X1
	6711 Move TEMP, X0
	6712 And TEMP, TEMP, 1
	6713 Compare TEMP, 1
	6714 JumpIfNotEqual {7219}
	6715 Move W8, 1
	6716 Move [X31+252], W8
	6717 Add X27, X31, 3984
	6718 Move W10, [X19+736]
	6719 NotImplemented "Instruction CMP not yet implemented."
	6720 NotImplemented "Instruction MADD not yet implemented."
	6721 Move W9, [X9+104]
	6722 Move W10, [X19+824]
	6723 Add W9, W9, 1
	6724 NotImplemented "Instruction CMP not yet implemented."
	6725 Move W20, 1
	6726 Move X8, 0x633000
	6727 Move X8, [X8+368]
	6728 Move X0, [X8]
	6729 Move W8, [X0+224]
	6730 Compare W8, 0
	6731 JumpIfNotEqual {6733}
	6732 Call 0x1C17DFC
	6733 Move W0, [X31+348]
	6734 Move W8, 0x200B
	6735 Move X1, X31
	6736 NotImplemented "Instruction CMP not yet implemented."
	6737 NotImplemented "Instruction CSET not yet implemented."
	6738 Call Char.IsWhiteSpace, X0
	6739 Move X8, [X23]
	6740 Compare X8, 0
	6741 JumpIfEqual {7639}
	6742 Move X8, [X8+56]
	6743 Compare X8, 0
	6744 JumpIfEqual {7639}
	6745 Move W9, [X8+24]
	6746 Or W10, W20, W0
	6747 Move TEMP, X10
	6748 And TEMP, TEMP, 1
	6749 Compare TEMP, 1
	6750 JumpIfNotEqual {6890}
	6751 Move X10, [X31+288]
	6752 NotImplemented "Instruction CMP not yet implemented."
	6753 Move X9, X10
	6754 Move X8, [X23]
	6755 Compare X8, 0
	6756 JumpIfEqual {7639}
	6757 Move X8, [X8+56]
	6758 Compare X8, 0
	6759 JumpIfEqual {7639}
	6760 Move W9, [X8+24]
	6761 NotImplemented "Instruction CMP not yet implemented."
	6762 NotImplemented "Instruction MADD not yet implemented."
	6763 Move V0, [X8+352]
	6764 Move V2, [X8+284]
	6765 Move V3, [X8+96]
	6766 Move V1, [X8+332]
	6767 Move W8, [X8+368]
	6768 Move [X31+144], S2
	6769 Move [X31+152], S0
	6770 Multiply S0, S11, S0
	6771 Move [X31+48], S1
	6772 Move [X31+56], S3
	6773 Add S3, S0, S1
	6774 Move S0, W31
	6775 Move [X31+152], X8
	6776 Move [X31+124], S0
	6777 Move [X31+132], S3
	6778 Move W8, [X26]
	6779 NotImplemented "Instruction CMP not yet implemented."
	6780 Move X8, [X23]
	6781 Compare X8, 0
	6782 JumpIfEqual {7639}
	6783 Move X8, [X8+56]
	6784 Move X20, [X31+336]
	6785 Compare X8, 0
	6786 JumpIfEqual {7639}
	6787 Move W9, [X8+24]
	6788 NotImplemented "Instruction CMP not yet implemented."
	6789 NotImplemented "Instruction MADD not yet implemented."
	6790 Move X9, [X19]
	6791 Move V3, [X8+296]
	6792 Move V0, [X8+332]
	6793 Move X8, [X9+2312]
	6794 Move X3, [X9+2320]
	6795 Move X9, [X31+208]
	6796 NotImplemented "Instruction CMP not yet implemented."
	6797 Move X8, 0x633000
	6798 Move X8, [X8+368]
	6799 Move X0, [X8]
	6800 Move W8, [X0+224]
	6801 Compare W8, 0
	6802 JumpIfNotEqual {6804}
	6803 Call 0x1C17DFC
	6804 Move W20, [X31+348]
	6805 Move X1, X31
	6806 Move W0, W20
	6807 Call Char.IsWhiteSpace, X0
	6808 Move W9, 0x200B
	6809 Move X8, [X23]
	6810 NotImplemented "Instruction CMP not yet implemented."
	6811 Move X20, [X31+336]
	6812 NotImplemented "Instruction CSET not yet implemented."
	6813 Compare X8, 0
	6814 JumpIfEqual {7639}
	6815 Move X8, [X8+56]
	6816 Compare X8, 0
	6817 JumpIfEqual {7639}
	6818 Move W10, [X8+24]
	6819 Or W9, W9, W0
	6820 Move TEMP, X9
	6821 And TEMP, TEMP, 1
	6822 Compare TEMP, 1
	6823 JumpIfNotEqual {6899}
	6824 Move X9, [X31+288]
	6825 NotImplemented "Instruction CMP not yet implemented."
	6826 NotImplemented "Instruction CMP not yet implemented."
	6827 Move X8, [X23]
	6828 Compare X8, 0
	6829 JumpIfEqual {7639}
	6830 Move X9, [X8+56]
	6831 Compare X9, 0
	6832 JumpIfEqual {7639}
	6833 Move W10, [X9+24]
	6834 NotImplemented "Instruction CMP not yet implemented."
	6835 Move X10, [X31+312]
	6836 Move V1, [X31+52]
	6837 Add X9, X9, X10
	6838 Subtract X10, X9, 264
	6839 Move V0, [X10]
	6840 NotImplemented "Instruction FCMP not yet implemented."
	6841 Move X8, 0x696000
	6842 Move X8, [X8+832]
	6843 NotImplemented "Instruction LDUR not yet implemented."
	6844 Move X0, [X8]
	6845 Move W8, [X0+224]
	6846 Compare W8, 0
	6847 JumpIfNotEqual {6849}
	6848 Call 0x1C17DFC
	6849 Move V0, [X31+17]
	6850 Move V1, [X31+48]
	6851 Move X0, X31
	6852 Add S0, S0, S8
	6853 Call TMP_Math.Approximately, V0, V1
	6854 Move TEMP, X0
	6855 And TEMP, TEMP, 1
	6856 Compare TEMP, 1
	6857 JumpIfNotEqual {6920}
	6858 Move W8, [X26]
	6859 NotImplemented "Instruction CMP not yet implemented."
	6860 Move X0, X29
	6861 Move X1, X31
	6862 Call Object.GetInstanceID, X0
	6863 Move W8, [X22+24]
	6864 NotImplemented "Instruction CMP not yet implemented."
	6865 Move X8, [X31+312]
	6866 Move W26, W0
	6867 Add X8, X22, X8
	6868 Subtract X8, X8, 304
	6869 Move X0, [X8]
	6870 Compare X0, 0
	6871 JumpIfEqual {7639}
	6872 Move X1, X31
	6873 Call Object.GetInstanceID, X0
	6874 NotImplemented "Instruction CMP not yet implemented."
	6875 Move X26, [X31+352]
	6876 Move TEMP, X20
	6877 And TEMP, TEMP, 1
	6878 Compare TEMP, 1
	6879 JumpIfNotEqual {6903}
	6880 Move X20, [X31+336]
	6881 Move W8, 1
	6882 Move [X31+248], W8
	6883 Move X8, [X23]
	6884 Compare X8, 0
	6885 JumpIfEqual {7639}
	6886 Move X8, [X8+56]
	6887 Compare X8, 0
	6888 JumpIfEqual {7639}
	6889 Move W9, [X8+24]
	6890 NotImplemented "Instruction CMP not yet implemented."
	6891 Move X9, X28
	6892 Move X10, [X19]
	6893 NotImplemented "Instruction NOP not yet implemented."
	6894 NotImplemented "Instruction MADD not yet implemented."
	6895 Move V3, [X8+296]
	6896 Move V7, [X8+352]
	6897 Move X8, [X10+2312]
	6898 Move X3, [X10+2320]
	6899 NotImplemented "Instruction CMP not yet implemented."
	6900 Move [X31+240], W31
	6901 Move W8, 1
	6902 Move [X31+252], W8
	6903 Move X8, [X23]
	6904 Compare X8, 0
	6905 JumpIfEqual {7639}
	6906 Move X8, [X8+56]
	6907 Compare X8, 0
	6908 JumpIfEqual {7639}
	6909 Move W9, [X8+24]
	6910 Move X20, [X31+336]
	6911 Subtract W10, W25, 2
	6912 NotImplemented "Instruction CMP not yet implemented."
	6913 Move X9, [X31+312]
	6914 Add X8, X8, X9
	6915 Subtract X10, X8, 816
	6916 Subtract X8, X8, 780
	6917 Move X9, [X19]
	6918 Move V3, [X10]
	6919 Move V0, [X8]
	6920 Move X8, [X23]
	6921 Compare X8, 0
	6922 JumpIfEqual {7639}
	6923 Move X8, [X8+56]
	6924 Compare X8, 0
	6925 JumpIfEqual {7639}
	6926 Move X10, [X31+288]
	6927 Move W9, [X8+24]
	6928 Move X20, [X31+336]
	6929 NotImplemented "Instruction CMP not yet implemented."
	6930 NotImplemented "Instruction CMP not yet implemented."
	6931 Move X9, X10
	6932 NotImplemented "Instruction CMP not yet implemented."
	6933 Move X9, X28
	6934 Move X10, [X19]
	6935 NotImplemented "Instruction NOP not yet implemented."
	6936 NotImplemented "Instruction MADD not yet implemented."
	6937 Move V0, [X8+332]
	6938 Move V3, [X8+296]
	6939 Move X8, [X10+2312]
	6940 Move X3, [X10+2320]
	6941 Move V6, [X31+148]
	6942 Multiply S1, S11, S6
	6943 Move X9, [X31+152]
	6944 Add S4, S1, S0
	6945 Move V0, [X31+144]
	6946 Move S2, [X31+124]
	6947 Move S1, [X31+128]
	6948 Add X1, X31, 4096
	6949 Move W2, W9
	6950 Move S5, W31
	6951 Add X1, X1, 84
	6952 Move X0, X19
	6953 Move V7, V6
	6954 Move [X31+8], S14
	6955 Move [X31], S6
	6956 NotImplemented "Instruction BLR not yet implemented."
	6957 Move [X31+248], W31
	6958 Move X8, [X23]
	6959 Compare X8, 0
	6960 JumpIfEqual {7639}
	6961 Move X8, [X8+56]
	6962 Compare X8, 0
	6963 JumpIfEqual {7639}
	6964 Move X9, [X8+24]
	6965 NotImplemented "Instruction CMP not yet implemented."
	6966 NotImplemented "Instruction MADD not yet implemented."
	6967 Move W10, [X10+401]
	6968 Move TEMP, X10
	6969 And TEMP, TEMP, 2
	6970 Compare TEMP, 2
	6971 JumpIfEqual {6991}
	6972 Move W8, [X31+236]
	6973 Move TEMP, X8
	6974 And TEMP, TEMP, 1
	6975 Compare TEMP, 1
	6976 JumpIfNotEqual {7194}
	6977 Move X8, [X19]
	6978 Move S2, [X31+184]
	6979 Move S3, [X31+188]
	6980 Move W2, [X31+4160]
	6981 Move S0, [X31+200]
	6982 Move S1, [X31+204]
	6983 Move X9, [X8+2328]
	6984 Move X3, [X8+2336]
	6985 Move V4, [X31+192]
	6986 Add X1, X31, 4096
	6987 Add X1, X1, 84
	6988 Move X0, X19
	6989 Move V5, V2
	6990 NotImplemented "Instruction BLR not yet implemented."
	6991 Move W10, [X19+808]
	6992 NotImplemented "Instruction CMP not yet implemented."
	6993 Move W10, [X19+816]
	6994 NotImplemented "Instruction CMP not yet implemented."
	6995 Move W10, [X19+736]
	6996 NotImplemented "Instruction CMP not yet implemented."
	6997 NotImplemented "Instruction MADD not yet implemented."
	6998 Move W10, [X10+104]
	6999 Move W11, [X19+824]
	7000 Add W10, W10, 1
	7001 NotImplemented "Instruction CMP not yet implemented."
	7002 Move W20, 1
	7003 Move W20, W31
	7004 Move W10, [X31+236]
	7005 Move TEMP, X10
	7006 And TEMP, TEMP, 1
	7007 Compare TEMP, 1
	7008 JumpIfEqual {7071}
	7009 Move W8, [X31+348]
	7010 Move W9, W31
	7011 NotImplemented "Instruction CMP not yet implemented."
	7012 And W8, W8, 0xFFFE
	7013 NotImplemented "Instruction CMP not yet implemented."
	7014 Move X8, [X31+288]
	7015 NotImplemented "Instruction CMP not yet implemented."
	7016 Xor W8, W20, 1
	7017 Move TEMP, X8
	7018 And TEMP, TEMP, 1
	7019 Compare TEMP, 1
	7020 JumpIfEqual {7217}
	7021 Move X8, [X31+288]
	7022 NotImplemented "Instruction CMP not yet implemented."
	7023 Move X8, 0x633000
	7024 Move X8, [X8+368]
	7025 Move X0, [X8]
	7026 Move W8, [X0+224]
	7027 Compare W8, 0
	7028 JumpIfNotEqual {7030}
	7029 Call 0x1C17DFC
	7030 Move W0, [X31+348]
	7031 Move X1, X31
	7032 Call Char.IsSeparator, X0
	7033 Move TEMP, X0
	7034 And TEMP, TEMP, 1
	7035 Compare TEMP, 1
	7036 JumpIfEqual {7193}
	7037 Move X29, 0x696000
	7038 Move X29, [X29+1000]
	7039 Move X0, [X29]
	7040 Move W8, [X0+224]
	7041 Compare W8, 0
	7042 JumpIfNotEqual {7045}
	7043 Call 0x1C17DFC
	7044 Move X0, [X29]
	7045 Move X8, [X23]
	7046 Compare X8, 0
	7047 JumpIfEqual {7639}
	7048 Move X8, [X8+56]
	7049 Compare X8, 0
	7050 JumpIfEqual {7639}
	7051 Move X9, [X8+24]
	7052 NotImplemented "Instruction CMP not yet implemented."
	7053 Move X10, [X0+184]
	7054 NotImplemented "Instruction NOP not yet implemented."
	7055 NotImplemented "Instruction MADD not yet implemented."
	7056 Add X11, X11, 380
	7057 Move V0, [X11]
	7058 Move V2, [X10+5528]
	7059 Move V1, [X10+5532]
	7060 Move W11, [X11+16]
	7061 Move [X31+200], S2
	7062 Move [X31+208], S1
	7063 Move V2, [X10+5536]
	7064 Move V1, [X10+5540]
	7065 Move [X27+11], V0
	7066 Move S0, W31
	7067 Move [X31+4176], W11
	7068 Move [X31+188], S2
	7069 Move [X31+196], S1
	7070 Move [X31+184], S0
	7071 NotImplemented "Instruction CMP not yet implemented."
	7072 NotImplemented "Instruction MADD not yet implemented."
	7073 Add X10, X8, 380
	7074 Move V9, V14
	7075 Move V0, [X27+11]
	7076 Move W9, [X31+4176]
	7077 Move V1, [X8+296]
	7078 Move V12, [X8+392]
	7079 Move X21, [X10]
	7080 Move V14, [X10+8]
	7081 Move V13, [X10+16]
	7082 Move V10, [X8+284]
	7083 Move V8, [X8+328]
	7084 Move V11, [X8+336]
	7085 Add X0, X31, 384
	7086 Add X1, X31, 360
	7087 Move X2, X31
	7088 Move [X31+348], S1
	7089 Move [X31+24], V0
	7090 Move [X31+400], W9
	7091 Move [X31+360], X21
	7092 Move [X31+368], S14
	7093 Move [X31+372], S12
	7094 Move [X31+376], S13
	7095 Call HighlightState.op_Inequality, X0, X1
	7096 Move X8, 0x696000
	7097 Move X8, [X8+848]
	7098 Move X8, [X8]
	7099 Move W9, [X8+224]
	7100 Move TEMP, X0
	7101 And TEMP, TEMP, 1
	7102 Compare TEMP, 1
	7103 JumpIfNotEqual {7146}
	7104 Compare W9, 0
	7105 JumpIfNotEqual {7108}
	7106 Move X0, X8
	7107 Call 0x1C17DFC
	7108 Move V0, [X31+4168]
	7109 Move V2, [X31+188]
	7110 Move V1, [X31+204]
	7111 Move X8, [X19]
	7112 Move W2, [X31+4160]
	7113 Subtract S0, S2, S0
	7114 Add S0, S10, S0
	7115 Move S2, 0.5
	7116 Multiply S10, S0, S2
	7117 Move V0, [X31+192]
	7118 NotImplemented "Instruction FCMP not yet implemented."
	7119 NotImplemented "Instruction FCSEL not yet implemented."
	7120 Move V2, [X31+184]
	7121 NotImplemented "Instruction FCMP not yet implemented."
	7122 Move X9, [X8+2328]
	7123 Move X3, [X8+2336]
	7124 NotImplemented "Instruction FCSEL not yet implemented."
	7125 Move V0, [X31+200]
	7126 Add X1, X31, 4096
	7127 Add X1, X1, 84
	7128 Move X0, X19
	7129 Move V3, V10
	7130 Move V5, V2
	7131 NotImplemented "Instruction BLR not yet implemented."
	7132 Subtract S0, S11, S13
	7133 Move [X31+200], S10
	7134 Move [X31+208], S0
	7135 Move V0, [X31+348]
	7136 Move [X31+4160], X21
	7137 Move [X31+4168], S14
	7138 Move [X31+4172], S12
	7139 Add S6, S0, S14
	7140 Add S0, S8, S12
	7141 Move [X31+188], S6
	7142 Move [X31+196], S0
	7143 Move S0, W31
	7144 Move [X31+4176], S13
	7145 Move [X31+184], S0
	7146 Compare W9, 0
	7147 JumpIfNotEqual {7150}
	7148 Move X0, X8
	7149 Call 0x1C17DFC
	7150 Move V2, [X31+4168]
	7151 Move V4, [X31+348]
	7152 Move V0, [X31+4164]
	7153 Move V1, [X31+4176]
	7154 Move V3, [X31+4172]
	7155 Add S2, S4, S2
	7156 Move V4, [X31+200]
	7157 Subtract S0, S10, S0
	7158 Subtract S1, S11, S1
	7159 Add S3, S8, S3
	7160 NotImplemented "Instruction FCMP not yet implemented."
	7161 NotImplemented "Instruction FCSEL not yet implemented."
	7162 Move V0, [X31+204]
	7163 NotImplemented "Instruction FCMP not yet implemented."
	7164 NotImplemented "Instruction FCSEL not yet implemented."
	7165 Move [X31+200], S4
	7166 Move [X31+208], S0
	7167 Move V0, [X31+188]
	7168 NotImplemented "Instruction FCMP not yet implemented."
	7169 NotImplemented "Instruction FCSEL not yet implemented."
	7170 Move V0, [X31+192]
	7171 NotImplemented "Instruction FCMP not yet implemented."
	7172 NotImplemented "Instruction FCSEL not yet implemented."
	7173 Move [X31+188], S1
	7174 Move [X31+196], S0
	7175 Move W8, [X26]
	7176 Move W21, 376
	7177 Move V14, V9
	7178 NotImplemented "Instruction CMP not yet implemented."
	7179 Move X8, [X19]
	7180 Move S2, [X31+184]
	7181 Move S3, [X31+188]
	7182 Move W2, [X31+4160]
	7183 Move S0, [X31+200]
	7184 Move S1, [X31+204]
	7185 Move X9, [X8+2328]
	7186 Move X3, [X8+2336]
	7187 Move V4, [X31+192]
	7188 Add X1, X31, 4096
	7189 Add X1, X1, 84
	7190 Move X0, X19
	7191 Move V5, V2
	7192 NotImplemented "Instruction BLR not yet implemented."
	7193 Move X20, [X31+336]
	7194 Move [X31+236], W31
	7195 Move W9, [X31+244]
	7196 Move X10, [X31+312]
	7197 Move W8, [X26]
	7198 Move W15, W20
	7199 Add W9, W9, 1
	7200 Move [X31+244], W9
	7201 Add W9, W25, 1
	7202 Add X10, X10, 376
	7203 NotImplemented "Instruction CMP not yet implemented."
	7204 Move [X31+312], X10
	7205 Move W10, W9
	7206 Move X8, [X31+208]
	7207 NotImplemented "Instruction CMP not yet implemented."
	7208 Move X8, [X31+288]
	7209 NotImplemented "Instruction CMP not yet implemented."
	7210 Move TEMP, X20
	7211 And TEMP, TEMP, 1
	7212 Compare TEMP, 1
	7213 JumpIfNotEqual {7179}
	7214 Move X20, [X31+336]
	7215 Move W8, 1
	7216 Move [X31+236], W8
	7217 Move X20, [X31+336]
	7218 Move [X31+236], W9
	7219 Move X8, [X23]
	7220 Compare X8, 0
	7221 JumpIfEqual {7639}
	7222 Move X8, [X8+56]
	7223 Compare X8, 0
	7224 JumpIfEqual {7639}
	7225 Move W9, [X8+24]
	7226 NotImplemented "Instruction CMP not yet implemented."
	7227 Move X9, [X19]
	7228 Move S0, [X31+228]
	7229 Move S4, [X31+232]
	7230 NotImplemented "Instruction NOP not yet implemented."
	7231 NotImplemented "Instruction MADD not yet implemented."
	7232 Move V3, [X8+296]
	7233 Move V7, [X8+352]
	7234 Move X8, [X9+2312]
	7235 Move X3, [X9+2320]
	7236 Move [X31+8], S0
	7237 Move S2, [X31+100]
	7238 Move S0, [X31+104]
	7239 Move V1, [X31+96]
	7240 Move V6, [X31+108]
	7241 Add X1, X31, 4096
	7242 Move S5, W31
	7243 Add X1, X1, 84
	7244 Move X0, X19
	7245 Move X2, X27
	7246 Move [X31], S15
	7247 NotImplemented "Instruction BLR not yet implemented."
	7248 Move X20, 0x696000
	7249 Move X20, [X20+1000]
	7250 Move X0, [X20]
	7251 Move W8, [X0+224]
	7252 Compare W8, 0
	7253 JumpIfNotEqual {7256}
	7254 Call 0x1C17DFC
	7255 Move X0, [X20]
	7256 Add X27, X31, 3984
	7257 Move W8, [X19+240]
	7258 Move W9, [X10+24]
	7259 Move X11, [X31+208]
	7260 NotImplemented "Instruction FNEG not yet implemented."
	7261 NotImplemented "Instruction CMP not yet implemented."
	7262 NotImplemented "Instruction FCSEL not yet implemented."
	7263 NotImplemented "Instruction CMP not yet implemented."
	7264 NotImplemented "Instruction MADD not yet implemented."
	7265 Move W10, [X31+44]
	7266 NotImplemented "Instruction INVALID not yet implemented."
	7267 NotImplemented "Instruction SBFM not yet implemented."
	7268 Subtract W10, W10, W21
	7269 Add W10, W10, W29
	7270 Add W9, W9, W10
	7271 Subtract W22, W9, 1
	7272 NotImplemented "Instruction CMP not yet implemented."
	7273 Move V10, [X19+732]
	7274 Move S10, 1
	7275 Move W22, 1
	7276 Move W25, [X31+348]
	7277 Add S11, S11, S0
	7278 NotImplemented "Instruction CMP not yet implemented."
	7279 NotImplemented "Instruction CMP not yet implemented."
	7280 Move X8, 0x633000
	7281 Move X8, [X8+368]
	7282 Move X0, [X8]
	7283 Move W8, [X0+224]
	7284 Compare W8, 0
	7285 JumpIfNotEqual {7287}
	7286 Call 0x1C17DFC
	7287 Move W0, W25
	7288 Move X1, X31
	7289 Call Char.IsSeparator, X0
	7290 Move W8, [X19+240]
	7291 Move X15, [X31+88]
	7292 Move V3, [X31+336]
	7293 Move V4, [X31+272]
	7294 Move V5, [X31+256]
	7295 Move TEMP, X0
	7296 And TEMP, TEMP, 1
	7297 Compare TEMP, 1
	7298 JumpIfNotEqual {7303}
	7299 Move S0, 1
	7300 Subtract S0, S0, S10
	7301 Multiply S0, S11, S0
	7302 NotImplemented "Instruction SCVTF not yet implemented."
	7303 Move W9, [X31+44]
	7304 Multiply S0, S11, S10
	7305 NotImplemented "Instruction ORN not yet implemented."
	7306 And W9, W9, 1
	7307 Subtract W9, W21, W9
	7308 Add W9, W9, W26
	7309 NotImplemented "Instruction SCVTF not yet implemented."
	7310 NotImplemented "Instruction FDIV not yet implemented."
	7311 Compare W8, 0
	7312 JumpIfEqual {7317}
	7313 Move V1, [X31+224]
	7314 Move X14, [X31+320]
	7315 Subtract S1, S1, S0
	7316 Move [X31+224], S1
	7317 Move V1, [X31+224]
	7318 Move X14, [X31+320]
	7319 Add S1, S1, S0
	7320 Move V0, [X31+216]
	7321 Move [X31+224], S1
	7322 NotImplemented "Instruction MOVI not yet implemented."
	7323 Add V0, V0, V1
	7324 Move X9, [X23]
	7325 Compare X9, 0
	7326 JumpIfEqual {7639}
	7327 Move X25, 0x696000
	7328 Move X25, [X25+840]
	7329 Move W11, [X31+196]
	7330 Add W10, W20, 1
	7331 Move W11, W31
	7332 Move W10, W31
	7333 Move [X9+24], W8
	7334 NotImplemented "Instruction CMP not yet implemented."
	7335 Move W8, [X19+1696]
	7336 NotImplemented "Instruction CCMP not yet implemented."
	7337 Move [X9+44], W10
	7338 NotImplemented "Instruction CSINC not yet implemented."
	7339 Move [X9+28], W8
	7340 Move [X9+36], W10
	7341 Move W8, [X19+1200]
	7342 Add W8, W8, 1
	7343 Move [X9+48], W8
	7344 Move W8, [X19+792]
	7345 NotImplemented "Instruction CMP not yet implemented."
	7346 Move X8, [X19]
	7347 Move X0, X19
	7348 Move X9, [X8+456]
	7349 Move X1, [X8+464]
	7350 NotImplemented "Instruction BLR not yet implemented."
	7351 Move TEMP, X0
	7352 And TEMP, TEMP, 1
	7353 Compare TEMP, 1
	7354 JumpIfNotEqual {4756}
	7355 Move X8, [X19+1752]
	7356 Compare X8, 0
	7357 JumpIfEqual {7363}
	7358 Move X1, [X23]
	7359 Move X9, [X8+24]
	7360 Move X0, [X8+64]
	7361 Move X2, [X8+40]
	7362 NotImplemented "Instruction BLR not yet implemented."
	7363 Move W8, [X19+796]
	7364 Compare W8, 0
	7365 JumpIfEqual {7384}
	7366 Move X8, [X23]
	7367 Compare X8, 0
	7368 JumpIfEqual {7639}
	7369 Move X20, [X8+96]
	7370 Compare X20, 0
	7371 JumpIfEqual {7639}
	7372 Move X0, [X25]
	7373 Move W8, [X0+224]
	7374 Compare W8, 0
	7375 JumpIfNotEqual {7377}
	7376 Call 0x1C17DFC
	7377 Move W8, [X20+24]
	7378 Compare W8, 0
	7379 JumpIfEqual {7701}
	7380 Add X0, X20, 32
	7381 Move W1, 1
	7382 Move X2, X31
	7383 Call TMP_MeshInfo.SortGeometry, X0, X1
	7384 Move X0, [X19+928]
	7385 Compare X0, 0
	7386 JumpIfEqual {7639}
	7387 Move X1, X31
	7388 Call Mesh.MarkDynamic, X0
	7389 Move X8, [X19+872]
	7390 Compare X8, 0
	7391 JumpIfEqual {7639}
	7392 Move X8, [X8+96]
	7393 Compare X8, 0
	7394 JumpIfEqual {7639}
	7395 Move W9, [X8+24]
	7396 Compare W9, 0
	7397 JumpIfEqual {7701}
	7398 Move X0, [X19+928]
	7399 Compare X0, 0
	7400 JumpIfEqual {7639}
	7401 Move X1, [X8+48]
	7402 Move X2, X31
	7403 Call Mesh.set_vertices, X0, X1
	7404 Move X8, [X19+872]
	7405 Compare X8, 0
	7406 JumpIfEqual {7639}
	7407 Move X8, [X8+96]
	7408 Compare X8, 0
	7409 JumpIfEqual {7639}
	7410 Move W9, [X8+24]
	7411 Compare W9, 0
	7412 JumpIfEqual {7701}
	7413 Move X0, [X19+928]
	7414 Compare X0, 0
	7415 JumpIfEqual {7639}
	7416 Move X1, [X8+72]
	7417 Move X2, X31
	7418 Call Mesh.set_uv, X0, X1
	7419 Move X8, [X19+872]
	7420 Compare X8, 0
	7421 JumpIfEqual {7639}
	7422 Move X8, [X8+96]
	7423 Compare X8, 0
	7424 JumpIfEqual {7639}
	7425 Move W9, [X8+24]
	7426 Compare W9, 0
	7427 JumpIfEqual {7701}
	7428 Move X0, [X19+928]
	7429 Compare X0, 0
	7430 JumpIfEqual {7639}
	7431 Move X1, [X8+80]
	7432 Move X2, X31
	7433 Call Mesh.set_uv2, X0, X1
	7434 Move X8, [X19+872]
	7435 Compare X8, 0
	7436 JumpIfEqual {7639}
	7437 Move X8, [X8+96]
	7438 Compare X8, 0
	7439 JumpIfEqual {7639}
	7440 Move W9, [X8+24]
	7441 Compare W9, 0
	7442 JumpIfEqual {7701}
	7443 Move X0, [X19+928]
	7444 Compare X0, 0
	7445 JumpIfEqual {7639}
	7446 Move X1, [X8+88]
	7447 Move X2, X31
	7448 Call Mesh.set_colors32, X0, X1
	7449 Move X0, [X19+928]
	7450 Compare X0, 0
	7451 JumpIfEqual {7639}
	7452 Move X1, X31
	7453 Call Mesh.RecalculateBounds, X0
	7454 Move X8, [X23]
	7455 Compare X8, 0
	7456 JumpIfEqual {7639}
	7457 Move X21, X31
	7458 Move X22, X31
	7459 NotImplemented "Instruction LDRSW not yet implemented."
	7460 Add X24, X22, 1
	7461 NotImplemented "Instruction CMP not yet implemented."
	7462 Move X20, [X8+96]
	7463 Compare X20, 0
	7464 JumpIfEqual {7639}
	7465 Move X0, [X25]
	7466 Move W8, [X0+224]
	7467 Compare W8, 0
	7468 JumpIfNotEqual {7470}
	7469 Call 0x1C17DFC
	7470 Move W8, [X20+24]
	7471 NotImplemented "Instruction CMP not yet implemented."
	7472 Add X8, X20, X21
	7473 Add X0, X8, 112
	7474 Move X1, X31
	7475 Call TMP_MeshInfo.ClearUnusedVertices, X0
	7476 Move X8, [X19+1800]
	7477 Compare X8, 0
	7478 JumpIfEqual {7639}
	7479 Move W9, [X8+24]
	7480 NotImplemented "Instruction CMP not yet implemented."
	7481 Move X9, 0x631000
	7482 Move X9, [X9+1432]
	7483 Add X8, X8, X22
	7484 Move X20, [X8+40]
	7485 Move X0, [X9]
	7486 Move W9, [X0+224]
	7487 Compare W9, 0
	7488 JumpIfNotEqual {7490}
	7489 Call 0x1C17DFC
	7490 Move X0, X20
	7491 Move X1, X31
	7492 Move X2, X31
	7493 Call Object.op_Equality, X0, X1
	7494 Move TEMP, X0
	7495 And TEMP, TEMP, 1
	7496 Compare TEMP, 1
	7497 JumpIfEqual {7634}
	7498 Move W8, [X19+796]
	7499 Compare W8, 0
	7500 JumpIfEqual {7519}
	7501 Move X8, [X23]
	7502 Compare X8, 0
	7503 JumpIfEqual {7639}
	7504 Move X20, [X8+96]
	7505 Compare X20, 0
	7506 JumpIfEqual {7639}
	7507 Move X0, [X25]
	7508 Move W8, [X0+224]
	7509 Compare W8, 0
	7510 JumpIfNotEqual {7512}
	7511 Call 0x1C17DFC
	7512 Move W8, [X20+24]
	7513 NotImplemented "Instruction CMP not yet implemented."
	7514 Add X8, X20, X21
	7515 Add X0, X8, 112
	7516 Move W1, 1
	7517 Move X2, X31
	7518 Call TMP_MeshInfo.SortGeometry, X0, X1
	7519 Move X8, [X19+1800]
	7520 Compare X8, 0
	7521 JumpIfEqual {7639}
	7522 Move W9, [X8+24]
	7523 NotImplemented "Instruction CMP not yet implemented."
	7524 Add X8, X8, X22
	7525 Move X0, [X8+40]
	7526 Compare X0, 0
	7527 JumpIfEqual {7639}
	7528 Move X1, X31
	7529 Call TMP_SubMesh.get_mesh, X0
	7530 Move X8, [X23]
	7531 Compare X8, 0
	7532 JumpIfEqual {7639}
	7533 Move X8, [X8+96]
	7534 Compare X8, 0
	7535 JumpIfEqual {7639}
	7536 Move W9, [X8+24]
	7537 NotImplemented "Instruction CMP not yet implemented."
	7538 Compare X0, 0
	7539 JumpIfEqual {7639}
	7540 Add X8, X8, X21
	7541 Move X1, [X8+128]
	7542 Move X2, X31
	7543 Call Mesh.set_vertices, X0, X1
	7544 Move X8, [X19+1800]
	7545 Compare X8, 0
	7546 JumpIfEqual {7639}
	7547 Move W9, [X8+24]
	7548 NotImplemented "Instruction CMP not yet implemented."
	7549 Add X8, X8, X22
	7550 Move X0, [X8+40]
	7551 Compare X0, 0
	7552 JumpIfEqual {7639}
	7553 Move X1, X31
	7554 Call TMP_SubMesh.get_mesh, X0
	7555 Move X8, [X23]
	7556 Compare X8, 0
	7557 JumpIfEqual {7639}
	7558 Move X8, [X8+96]
	7559 Compare X8, 0
	7560 JumpIfEqual {7639}
	7561 Move W9, [X8+24]
	7562 NotImplemented "Instruction CMP not yet implemented."
	7563 Compare X0, 0
	7564 JumpIfEqual {7639}
	7565 Add X8, X8, X21
	7566 Move X1, [X8+152]
	7567 Move X2, X31
	7568 Call Mesh.set_uv, X0, X1
	7569 Move X8, [X19+1800]
	7570 Compare X8, 0
	7571 JumpIfEqual {7639}
	7572 Move W9, [X8+24]
	7573 NotImplemented "Instruction CMP not yet implemented."
	7574 Add X8, X8, X22
	7575 Move X0, [X8+40]
	7576 Compare X0, 0
	7577 JumpIfEqual {7639}
	7578 Move X1, X31
	7579 Call TMP_SubMesh.get_mesh, X0
	7580 Move X8, [X23]
	7581 Compare X8, 0
	7582 JumpIfEqual {7639}
	7583 Move X8, [X8+96]
	7584 Compare X8, 0
	7585 JumpIfEqual {7639}
	7586 Move W9, [X8+24]
	7587 NotImplemented "Instruction CMP not yet implemented."
	7588 Compare X0, 0
	7589 JumpIfEqual {7639}
	7590 Add X8, X8, X21
	7591 Move X1, [X8+160]
	7592 Move X2, X31
	7593 Call Mesh.set_uv2, X0, X1
	7594 Move X8, [X19+1800]
	7595 Compare X8, 0
	7596 JumpIfEqual {7639}
	7597 Move W9, [X8+24]
	7598 NotImplemented "Instruction CMP not yet implemented."
	7599 Add X8, X8, X22
	7600 Move X0, [X8+40]
	7601 Compare X0, 0
	7602 JumpIfEqual {7639}
	7603 Move X1, X31
	7604 Call TMP_SubMesh.get_mesh, X0
	7605 Move X8, [X23]
	7606 Compare X8, 0
	7607 JumpIfEqual {7639}
	7608 Move X8, [X8+96]
	7609 Compare X8, 0
	7610 JumpIfEqual {7639}
	7611 Move W9, [X8+24]
	7612 NotImplemented "Instruction CMP not yet implemented."
	7613 Compare X0, 0
	7614 JumpIfEqual {7639}
	7615 Add X8, X8, X21
	7616 Move X1, [X8+168]
	7617 Move X2, X31
	7618 Call Mesh.set_colors32, X0, X1
	7619 Move X8, [X19+1800]
	7620 Compare X8, 0
	7621 JumpIfEqual {7639}
	7622 Move W9, [X8+24]
	7623 NotImplemented "Instruction CMP not yet implemented."
	7624 Add X8, X8, X22
	7625 Move X0, [X8+40]
	7626 Compare X0, 0
	7627 JumpIfEqual {7639}
	7628 Move X1, X31
	7629 Call TMP_SubMesh.get_mesh, X0
	7630 Compare X0, 0
	7631 JumpIfEqual {7639}
	7632 Move X1, X31
	7633 Call Mesh.RecalculateBounds, X0
	7634 Move X8, [X23]
	7635 Add X22, X22, 1
	7636 Add X21, X21, 80
	7637 Compare X8, 0
	7638 JumpIfNotEqual {7459}
	7639 Call 0x1C17F20
	7640 Move V2, [X19+576]
	7641 Move X8, -50171904
	7642 Move V3, [X8+512]
	7643 Move S4, 0.5
	7644 Subtract S2, S1, S2
	7645 Multiply S2, S2, S4
	7646 NotImplemented "Instruction FMAXNM not yet implemented."
	7647 Move [X19+572], S1
	7648 Move S3, 20
	7649 Subtract S1, S1, S2
	7650 Multiply S1, S1, S3
	7651 Move X8, -50171904
	7652 Add S1, S1, S4
	7653 Move V2, [X8+1056]
	7654 NotImplemented "Instruction FCVTZS not yet implemented."
	7655 NotImplemented "Instruction SCVTF not yet implemented."
	7656 Move W8, 0x7F800000
	7657 NotImplemented "Instruction FDIV not yet implemented."
	7658 Move S4, W8
	7659 NotImplemented "Instruction FCMP not yet implemented."
	7660 NotImplemented "Instruction FCSEL not yet implemented."
	7661 NotImplemented "Instruction FCMP not yet implemented."
	7662 NotImplemented "Instruction FCSEL not yet implemented."
	7663 Move X8, -50171904
	7664 Move V3, [X8+752]
	7665 Move V4, [X31+232]
	7666 NotImplemented "Instruction FDIV not yet implemented."
	7667 NotImplemented "Instruction FCMP not yet implemented."
	7668 NotImplemented "Instruction FCSEL not yet implemented."
	7669 Add S3, S4, S3
	7670 Multiply S3, S12, S3
	7671 Subtract S3, S11, S3
	7672 NotImplemented "Instruction FDIV not yet implemented."
	7673 Add S1, S2, S1
	7674 NotImplemented "Instruction FCMP not yet implemented."
	7675 NotImplemented "Instruction FCSEL not yet implemented."
	7676 Move [X19+724], S0
	7677 NotImplemented "Instruction FCMP not yet implemented."
	7678 Move V2, V11
	7679 Move S2, 1
	7680 Subtract S2, S2, S1
	7681 NotImplemented "Instruction FDIV not yet implemented."
	7682 Move X8, -50171904
	7683 Move V3, [X8+752]
	7684 Move V4, [X31+232]
	7685 Add S3, S4, S3
	7686 Multiply S3, S12, S3
	7687 Subtract S3, S11, S3
	7688 NotImplemented "Instruction FDIV not yet implemented."
	7689 Add S1, S1, S2
	7690 Move W8, [X19+1192]
	7691 Move V2, [X31+32]
	7692 Add W8, W8, 1
	7693 Subtract S2, S2, S10
	7694 NotImplemented "Instruction SCVTF not yet implemented."
	7695 NotImplemented "Instruction FDIV not yet implemented."
	7696 Move V3, [X31+96]
	7697 NotImplemented "Instruction FDIV not yet implemented."
	7698 Add S1, S1, S2
	7699 NotImplemented "Instruction FCMP not yet implemented."
	7700 NotImplemented "Instruction FCSEL not yet implemented."
	7701 Call 0x1C17F28

Method: UnityEngine.Vector3[] GetTextContainerLocalCorners()

Disassembly:
	0x03AD2F2C LDR X1, [X8 + 0x28]
	0x03AD2F30 LDP X20, X19, [X31 + 0x10]
	0x03AD2F34 LDP X30, X21, [X31], #0x20
	0x03AD2F38 BR X2
	0x03AD2F3C LDP X20, X19, [X31 + 0x10]
	0x03AD2F40 LDP X30, X21, [X31], #0x20
	0x03AD2F44 RET
	0x03AD2F48 STP X30, X19, [X31 - 0x10]!
	0x03AD2F4C LDR X8, [X0]
	0x03AD2F50 MOV X19, X0
	0x03AD2F54 LDR X9, [X8 + 0x2E8]
	0x03AD2F58 LDR X1, [X8 + 0x2F0]
	0x03AD2F5C BLR X9
	0x03AD2F60 LDR X8, [X19]
	0x03AD2F64 MOV X0, X19
	0x03AD2F68 LDR X9, [X8 + 0x2F8]
	0x03AD2F6C LDR X1, [X8 + 0x300]
	0x03AD2F70 BLR X9
	0x03AD2F74 LDR X8, [X19]
	0x03AD2F78 MOV X0, X19
	0x03AD2F7C LDR X2, [X8 + 0x308]
	0x03AD2F80 LDR X1, [X8 + 0x310]
	0x03AD2F84 LDP X30, X19, [X31], #0x10
	0x03AD2F88 BR X2
	0x03AD2F8C STP X30, X21, [X31 - 0x20]!
	0x03AD2F90 STP X20, X19, [X31 + 0x10]
	0x03AD2F94 ADRP X20, 0x910000
	0x03AD2F98 ADRP X21, 0x686000
	0x03AD2F9C LDRB W8, [X20 + 0x503]
	0x03AD2FA0 LDR X21, [X21 + 0x728]
	0x03AD2FA4 MOV X19, X0
	0x03AD2FA8 TBNZ X8, 0x0, 0x3AD2FC0
	0x03AD2FAC ADRP X0, 0x686000
	0x03AD2FB0 LDR X0, [X0 + 0x728]
	0x03AD2FB4 BL 0x1C16CF4
	0x03AD2FB8 MOVZ W8, 0x1
	0x03AD2FBC STRB W8, [X20 + 0x503]
	0x03AD2FC0 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x911000
	006 Move X20, 0x622000
	007 Move W8, [X21+1267]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x622000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1267], W8
	019 Move X0, [X20]
	020 Move X20, [X19+896]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {37}
	033 Move X0, X19
	034 Move X1, X31
	035 Call TMP_Text.get_rectTransform, X0
	036 Move [X19+896], X0
	037 Move X0, [X19+896]
	038 Compare X0, 0
	039 JumpIfEqual {49}
	040 Move X1, [X19+1880]
	041 Move X2, X31
	042 Call RectTransform.GetLocalCorners, X0, X1
	043 Move X0, [X19+1880]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void SetMeshFilters(System.Boolean state)

Disassembly:
	0x03AD2FC4 BL 0x1C16F10
	0x03AD2FC8 MOV X1, X31
	0x03AD2FCC MOV X20, X0
	0x03AD2FD0 BL 0x33BDD8C
	0x03AD2FD4 STR W31, [X20 + 0x10]
	0x03AD2FD8 STR X19, [X20 + 0x20]
	0x03AD2FDC MOV X0, X20
	0x03AD2FE0 LDP X20, X19, [X31 + 0x10]
	0x03AD2FE4 LDP X30, X21, [X31], #0x20
	0x03AD2FE8 RET
	0x03AD2FEC STR X30, [X31 - 0x20]!
	0x03AD2FF0 STP X20, X19, [X31 + 0x10]
	0x03AD2FF4 MOV W19, W1
	0x03AD2FF8 MOV X1, X31
	0x03AD2FFC MOV X20, X0
	0x03AD3000 BL 0x33BDD8C
	0x03AD3004 STR W19, [X20 + 0x10]
	0x03AD3008 LDP X20, X19, [X31 + 0x10]
	0x03AD300C LDR X30, [X31], #0x20
	0x03AD3010 RET
	0x03AD3014 STP X30, X21, [X31 - 0x20]!
	0x03AD3018 STP X20, X19, [X31 + 0x10]
	0x03AD301C ADRP X20, 0x90F000
	0x03AD3020 ADRP X21, 0x685000
	0x03AD3024 LDRB W8, [X20 + 0x504]
	0x03AD3028 LDR X21, [X21 + 0x730]
	0x03AD302C MOV X19, X0
	0x03AD3030 TBNZ X8, 0x0, 0x3AD3048
	0x03AD3034 ADRP X0, 0x685000
	0x03AD3038 LDR X0, [X0 + 0x730]
	0x03AD303C BL 0x1C16CF4
	0x03AD3040 MOVZ W8, 0x1
	0x03AD3044 STRB W8, [X20 + 0x504]
	0x03AD3048 LDR X0, [X21]
	0x03AD304C BL 0x1C16F10
	0x03AD3050 MOV X1, X31
	0x03AD3054 MOV X20, X0
	0x03AD3058 BL 0x33BDD8C
	0x03AD305C STR W31, [X20 + 0x10]
	0x03AD3060 STR X19, [X20 + 0x20]
	0x03AD3064 MOV X0, X20
	0x03AD3068 LDP X20, X19, [X31 + 0x10]
	0x03AD306C LDP X30, X21, [X31], #0x20
	0x03AD3070 RET
	0x03AD3074 STR X30, [X31 - 0x20]!
	0x03AD3078 STP X20, X19, [X31 + 0x10]
	0x03AD307C MOV W19, W1
	0x03AD3080 MOV X1, X31
	0x03AD3084 MOV X20, X0
	0x03AD3088 BL 0x33BDD8C
	0x03AD308C STR W19, [X20 + 0x10]
	0x03AD3090 LDP X20, X19, [X31 + 0x10]
	0x03AD3094 LDR X30, [X31], #0x20
	0x03AD3098 RET
	0x03AD309C STR X30, [X31 - 0x30]!
	0x03AD30A0 STP X22, X21, [X31 + 0x10]
	0x03AD30A4 STP X20, X19, [X31 + 0x20]
	0x03AD30A8 ADRP X21, 0x90F000
	0x03AD30AC ADRP X22, 0x620000
	0x03AD30B0 LDRB W8, [X21 + 0x505]
	0x03AD30B4 LDR X22, [X22 + 0x598]
	0x03AD30B8 MOV W20, W1
	0x03AD30BC MOV X19, X0
	0x03AD30C0 TBNZ X8, 0x0, 0x3AD30D8
	0x03AD30C4 ADRP X0, 0x620000
	0x03AD30C8 LDR X0, [X0 + 0x598]
	0x03AD30CC BL 0x1C16CF4
	0x03AD30D0 MOVZ W8, 0x1
	0x03AD30D4 STRB W8, [X21 + 0x505]
	0x03AD30D8 LDR X0, [X22]
	0x03AD30DC LDR W8, [X0 + 0xE0]
	0x03AD30E0 CBNZ W8, 0x3AD30E8
	0x03AD30E4 BL 0x1C16DFC
	0x03AD30E8 MOV X0, X19
	0x03AD30EC MOV X1, X31
	0x03AD30F0 MOV X2, X31
	0x03AD30F4 BL 0x3C3883C
	0x03AD30F8 TBNZ X0, 0x0, 0x3AD3170
	0x03AD30FC CMP W20, 0x3
	0x03AD3100 B.EQ 0x3AD3148
	0x03AD3104 CBNZ W20, 0x3AD3170
	0x03AD3108 LDRB W8, [X19 + 0x399]
	0x03AD310C CBZ W8, 0x3AD3170
	0x03AD3110 LDR X20, [X19 + 0x380]
	0x03AD3114 MOVZ W8, 0x7F800000
	0x03AD3118 FMOV S0, W8
	0x03AD311C MOV X0, X19
	0x03AD3120 MOV V1.16B, V0.16B
	0x03AD3124 MOV X1, X31
	0x03AD3128 BL 0x3AFD90C
	0x03AD312C CBZ X20, 0x3AD3180
	0x03AD3130 MOV X0, X20
	0x03AD3134 LDP X20, X19, [X31 + 0x20]
	0x03AD3138 LDP X22, X21, [X31 + 0x10]
	0x03AD313C MOV X1, X31
	0x03AD3140 LDR X30, [X31], #0x30
	0x03AD3144 B 0x3C3E99C
	0x03AD3148 MOV X0, X19
	0x03AD314C BL 0x3AD3184
	0x03AD3150 LDRB W8, [X19 + 0x140]
	0x03AD3154 CBZ W8, 0x3AD3170
	0x03AD3158 LDR X8, [X19]
	0x03AD315C MOV X0, X19
	0x03AD3160 LDR X9, [X8 + 0x3B8]
	0x03AD3164 LDR X1, [X8 + 0x3C0]
	0x03AD3168 BLR X9
	0x03AD316C STRB W31, [X19 + 0x140]
	0x03AD3170 LDP X20, X19, [X31 + 0x20]
	0x03AD3174 LDP X22, X21, [X31 + 0x10]
	0x03AD3178 LDR X30, [X31], #0x30
	0x03AD317C RET
	0x03AD3180 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x911000
	009 Move X22, 0x622000
	010 Move W8, [X21+1268]
	011 Move X22, [X22+1432]
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x622000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1268], W8
	023 Move X0, [X22]
	024 Move X21, [X20+1776]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X21
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {50}
	037 Move X0, [X20+1776]
	038 Move TEMP, X19
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {45}
	042 Compare X0, 0
	043 JumpIfEqual {135}
	044 Move X1, [X20+928]
	045 Compare X0, 0
	046 JumpIfEqual {135}
	047 Move X1, X31
	048 Move X2, X31
	049 Call MeshFilter.set_sharedMesh, X0, X1
	050 Move X8, [X20+1800]
	051 Compare X8, 0
	052 JumpIfEqual {135}
	053 Move W23, 5
	054 Move W9, [X8+24]
	055 Subtract X24, X23, 4
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X22]
	059 Move X21, [X8]
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Inequality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {136}
	072 Move X8, [X20+1800]
	073 Compare X8, 0
	074 JumpIfEqual {135}
	075 Move W9, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, [X8]
	078 Compare X0, 0
	079 JumpIfEqual {135}
	080 Move X1, X31
	081 Call TMP_SubMesh.get_meshFilter, X0
	082 Move X8, [X22]
	083 Move X21, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {131}
	097 Move X8, [X20+1800]
	098 Compare X8, 0
	099 JumpIfEqual {135}
	100 Move W9, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X8]
	103 Compare X0, 0
	104 JumpIfEqual {135}
	105 Move X1, X31
	106 Call TMP_SubMesh.get_meshFilter, X0
	107 Move X21, X0
	108 Move TEMP, X19
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {125}
	112 Move X8, [X20+1800]
	113 Compare X8, 0
	114 JumpIfEqual {135}
	115 Move W9, [X8+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, [X8]
	118 Compare X0, 0
	119 JumpIfEqual {135}
	120 Move X1, X31
	121 Call TMP_SubMesh.get_mesh, X0
	122 Compare X21, 0
	123 JumpIfEqual {135}
	124 Move X1, X0
	125 Compare X21, 0
	126 JumpIfEqual {135}
	127 Move X1, X31
	128 Move X0, X21
	129 Move X2, X31
	130 Call MeshFilter.set_sharedMesh, X0, X1
	131 Move X8, [X20+1800]
	132 Add X23, X23, 1
	133 Compare X8, 0
	134 JumpIfNotEqual {54}
	135 Call 0x1C17F20
	136 Move X20, [X31+48]
	137 Move X19, [X31+56]
	138 Move X22, [X31+32]
	139 Move X21, [X31+40]
	140 Move X24, [X31+16]
	141 Move X23, [X31+24]
	142 Move X30, [X31+64]
	143 Return 
	144 Call 0x1C17F28

Method: System.Void SetActiveSubMeshes(System.Boolean state)

Disassembly:
	0x03AD3184 STP X30, X21, [X31 - 0x20]!
	0x03AD3188 STP X20, X19, [X31 + 0x10]
	0x03AD318C ADRP X20, 0x90F000
	0x03AD3190 LDRB W8, [X20 + 0x52A]
	0x03AD3194 MOV X19, X0
	0x03AD3198 TBNZ X8, 0x0, 0x3AD31E0
	0x03AD319C ADRP X0, 0x620000
	0x03AD31A0 LDR X0, [X0 + 0xA28]
	0x03AD31A4 BL 0x1C16CF4
	0x03AD31A8 ADRP X0, 0x620000
	0x03AD31AC LDR X0, [X0 + 0x598]
	0x03AD31B0 BL 0x1C16CF4
	0x03AD31B4 ADRP X0, 0x685000
	0x03AD31B8 LDR X0, [X0 + 0x578]
	0x03AD31BC BL 0x1C16CF4
	0x03AD31C0 ADRP X0, 0x685000
	0x03AD31C4 LDR X0, [X0 + 0x580]
	0x03AD31C8 BL 0x1C16CF4
	0x03AD31CC ADRP X0, 0x685000
	0x03AD31D0 LDR X0, [X0 + 0x588]
	0x03AD31D4 BL 0x1C16CF4
	0x03AD31D8 MOVZ W8, 0x1
	0x03AD31DC STRB W8, [X20 + 0x52A]
	0x03AD31E0 LDRB W8, [X19 + 0x3FD]
	0x03AD31E4 CBZ W8, 0x3AD33E8
	0x03AD31E8 LDR X8, [X19]
	0x03AD31EC MOV X0, X19
	0x03AD31F0 LDP X9, X1, [X8 + 0x1C8]
	0x03AD31F4 BLR X9
	0x03AD31F8 TBNZ X0, 0x0, 0x3AD3204
	0x03AD31FC LDRB W8, [X19 + 0x6AC]
	0x03AD3200 CBZ W8, 0x3AD33E8
	0x03AD3204 ADRP X21, 0x620000
	0x03AD3208 LDR X21, [X21 + 0x598]
	0x03AD320C LDR X20, [X19 + 0x728]
	0x03AD3210 LDR X0, [X21]
	0x03AD3214 LDR W8, [X0 + 0xE0]
	0x03AD3218 CBNZ W8, 0x3AD3220
	0x03AD321C BL 0x1C16DFC
	0x03AD3220 MOV X0, X20
	0x03AD3224 MOV X1, X31
	0x03AD3228 MOV X2, X31
	0x03AD322C BL 0x3C3883C
	0x03AD3230 TBZ X0, 0x0, 0x3AD326C
	0x03AD3234 MOV X0, X19
	0x03AD3238 MOV X1, X31
	0x03AD323C BL 0x3CDADE8
	0x03AD3240 STR X0, [X19 + 0x728]
	0x03AD3244 MOV X20, X0
	0x03AD3248 LDR X0, [X21]
	0x03AD324C LDR W8, [X0 + 0xE0]
	0x03AD3250 CBNZ W8, 0x3AD3258
	0x03AD3254 BL 0x1C16DFC
	0x03AD3258 MOV X0, X20
	0x03AD325C MOV X1, X31
	0x03AD3260 MOV X2, X31
	0x03AD3264 BL 0x3C3883C
	0x03AD3268 TBNZ X0, 0x0, 0x3AD33E8
	0x03AD326C LDR X0, [X21]
	0x03AD3270 LDR X20, [X19 + 0xF8]
	0x03AD3274 LDR W8, [X0 + 0xE0]
	0x03AD3278 CBNZ W8, 0x3AD3280
	0x03AD327C BL 0x1C16DFC
	0x03AD3280 MOV X0, X20
	0x03AD3284 MOV X1, X31
	0x03AD3288 MOV X2, X31
	0x03AD328C BL 0x3C3883C
	0x03AD3290 TBZ X0, 0x0, 0x3AD330C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x910000
	009 Move W8, [X21+1269]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x621000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1269], W8
	021 Move X8, [X20+1800]
	022 Compare X8, 0
	023 JumpIfEqual {73}
	024 Move X22, 0x621000
	025 Move X22, [X22+1432]
	026 Move W23, 5
	027 Move W9, [X8+24]
	028 Subtract X24, X23, 4
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X22]
	032 Move X21, [X8]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, [X20+1800]
	046 Compare X8, 0
	047 JumpIfEqual {73}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X8]
	051 Compare X0, 0
	052 JumpIfEqual {73}
	053 Move X1, X31
	054 Call Behaviour.get_enabled, X0
	055 And W8, W0, 1
	056 And W9, W19, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X20+1800]
	059 Compare X8, 0
	060 JumpIfEqual {73}
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X8]
	064 Compare X0, 0
	065 JumpIfEqual {73}
	066 And W1, W19, 1
	067 Move X2, X31
	068 Call Behaviour.set_enabled, X0, X1
	069 Move X8, [X20+1800]
	070 Add X23, X23, 1
	071 Compare X8, 0
	072 JumpIfNotEqual {27}
	073 Call 0x1C17F20
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 Return 
	082 Call 0x1C17F28

Method: System.Void SetActiveSubTextObjectRenderers(System.Boolean state)

Disassembly:
	0x03AD2DFC ADRP X8, 0x624000
	0x03AD2E00 LDR X8, [X8 + 0x920]
	0x03AD2E04 MOV X20, X0
	0x03AD2E08 LDR X8, [X8]
	0x03AD2E0C LDR W9, [X8 + 0xE0]
	0x03AD2E10 CBNZ W9, 0x3AD2E1C
	0x03AD2E14 MOV X0, X8
	0x03AD2E18 BL 0x1C16DFC
	0x03AD2E1C MOV X0, X20
	0x03AD2E20 MOV X1, X31
	0x03AD2E24 BL 0x3E2F3D8
	0x03AD2E28 LDR X8, [X19 + 0x70]
	0x03AD2E2C MOVZ W9, 0x1
	0x03AD2E30 STRB W9, [X19 + 0x3FC]
	0x03AD2E34 CBZ X8, 0x3AD2E50
	0x03AD2E38 LDR X2, [X8 + 0x18]
	0x03AD2E3C LDR X0, [X8 + 0x40]
	0x03AD2E40 LDR X1, [X8 + 0x28]
	0x03AD2E44 LDP X20, X19, [X31 + 0x10]
	0x03AD2E48 LDP X30, X21, [X31], #0x20
	0x03AD2E4C BR X2
	0x03AD2E50 LDP X20, X19, [X31 + 0x10]
	0x03AD2E54 LDP X30, X21, [X31], #0x20
	0x03AD2E58 RET
	0x03AD2E5C STP X30, X21, [X31 - 0x20]!
	0x03AD2E60 STP X20, X19, [X31 + 0x10]
	0x03AD2E64 ADRP X20, 0x910000
	0x03AD2E68 ADRP X21, 0x621000
	0x03AD2E6C LDRB W8, [X20 + 0x502]
	0x03AD2E70 LDR X21, [X21 + 0x598]
	0x03AD2E74 MOV X19, X0
	0x03AD2E78 TBNZ X8, 0x0, 0x3AD2E9C
	0x03AD2E7C ADRP X0, 0x686000
	0x03AD2E80 LDR X0, [X0 + 0x718]
	0x03AD2E84 BL 0x1C16CF4
	0x03AD2E88 ADRP X0, 0x621000
	0x03AD2E8C LDR X0, [X0 + 0x598]
	0x03AD2E90 BL 0x1C16CF4
	0x03AD2E94 MOVZ W8, 0x1
	0x03AD2E98 STRB W8, [X20 + 0x502]
	0x03AD2E9C LDR X0, [X21]
	0x03AD2EA0 LDR W8, [X0 + 0xE0]
	0x03AD2EA4 CBNZ W8, 0x3AD2EAC
	0x03AD2EA8 BL 0x1C16DFC
	0x03AD2EAC MOV X0, X19
	0x03AD2EB0 MOV X1, X31
	0x03AD2EB4 MOV X2, X31
	0x03AD2EB8 BL 0x3C3883C
	0x03AD2EBC TBNZ X0, 0x0, 0x3AD2F3C
	0x03AD2EC0 LDR X8, [X19]
	0x03AD2EC4 MOV X0, X19
	0x03AD2EC8 LDP X9, X1, [X8 + 0x1C8]
	0x03AD2ECC BLR X9
	0x03AD2ED0 TBZ X0, 0x0, 0x3AD2F3C
	0x03AD2ED4 ADRP X20, 0x686000
	0x03AD2ED8 LDR X20, [X20 + 0x718]
	0x03AD2EDC LDR X0, [X20]
	0x03AD2EE0 LDR W8, [X0 + 0xE0]
	0x03AD2EE4 CBNZ W8, 0x3AD2EEC
	0x03AD2EE8 BL 0x1C16DFC
	0x03AD2EEC MOV X0, X31
	0x03AD2EF0 BL 0x3CD1F50
	0x03AD2EF4 TBNZ X0, 0x0, 0x3AD2F3C
	0x03AD2EF8 MOVZ W8, 0x1
	0x03AD2EFC STRB W8, [X19 + 0x140]
	0x03AD2F00 LDR X0, [X20]
	0x03AD2F04 LDR W8, [X0 + 0xE0]
	0x03AD2F08 CBNZ W8, 0x3AD2F10
	0x03AD2F0C BL 0x1C16DFC
	0x03AD2F10 MOV X0, X19
	0x03AD2F14 MOV X1, X31
	0x03AD2F18 BL 0x3CD16F4
	0x03AD2F1C LDR X8, [X19 + 0x80]
	0x03AD2F20 CBZ X8, 0x3AD2F3C
	0x03AD2F24 LDR X2, [X8 + 0x18]
	0x03AD2F28 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x911000
	009 Move W8, [X21+1270]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x622000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1270], W8
	021 Move X8, [X20+1800]
	022 Compare X8, 0
	023 JumpIfEqual {85}
	024 Move X22, 0x622000
	025 Move X22, [X22+1432]
	026 Move W23, 5
	027 Move W9, [X8+24]
	028 Subtract X24, X23, 4
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X22]
	032 Move X21, [X8]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {86}
	045 Move X8, [X20+1800]
	046 Compare X8, 0
	047 JumpIfEqual {85}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X8]
	051 Compare X0, 0
	052 JumpIfEqual {85}
	053 Move X1, X31
	054 Call TMP_SubMesh.get_renderer, X0
	055 Move X8, [X22]
	056 Move X21, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {81}
	070 Compare X21, 0
	071 JumpIfEqual {85}
	072 Move X0, X21
	073 Move X1, X31
	074 Call Renderer.get_enabled, X0
	075 And W8, W0, 1
	076 And W1, W19, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X21
	079 Move X2, X31
	080 Call Renderer.set_enabled, X0, X1
	081 Move X8, [X20+1800]
	082 Add X23, X23, 1
	083 Compare X8, 0
	084 JumpIfNotEqual {27}
	085 Call 0x1C17F20
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 Return 
	094 Call 0x1C17F28

Method: System.Void DestroySubMeshObjects()

Disassembly:
	0x03AD3294 MOV X0, X19
	0x03AD3298 MOV X1, X31
	0x03AD329C BL 0x3AF8D78
	0x03AD32A0 CBZ X0, 0x3AD33F4
	0x03AD32A4 MOV X1, X31
	0x03AD32A8 BL 0x3C389D4
	0x03AD32AC ADRP X8, 0x685000
	0x03AD32B0 LDR X8, [X8 + 0x580]
	0x03AD32B4 ADRP X9, 0x685000
	0x03AD32B8 LDR X9, [X9 + 0x588]
	0x03AD32BC MOV X1, X0
	0x03AD32C0 LDR X8, [X8]
	0x03AD32C4 MOV X3, X31
	0x03AD32C8 LDR X2, [X9]
	0x03AD32CC MOV X0, X8
	0x03AD32D0 BL 0x32274B8
	0x03AD32D4 ADRP X8, 0x620000
	0x03AD32D8 LDR X8, [X8 + 0xA28]
	0x03AD32DC MOV X20, X0
	0x03AD32E0 LDR X8, [X8]
	0x03AD32E4 LDR W9, [X8 + 0xE0]
	0x03AD32E8 CBNZ W9, 0x3AD32F4
	0x03AD32EC MOV X0, X8
	0x03AD32F0 BL 0x1C16DFC
	0x03AD32F4 MOV X0, X20
	0x03AD32F8 MOV X1, X19
	0x03AD32FC LDP X20, X19, [X31 + 0x10]
	0x03AD3300 MOV X2, X31
	0x03AD3304 LDP X30, X21, [X31], #0x20
	0x03AD3308 B 0x3C06B0C
	0x03AD330C LDRB W8, [X19 + 0x370]
	0x03AD3310 CBNZ W8, 0x3AD331C
	0x03AD3314 LDRB W8, [X19 + 0x3FC]
	0x03AD3318 CBZ W8, 0x3AD33E8
	0x03AD331C LDRB W8, [X19 + 0x301]
	0x03AD3320 CBZ W8, 0x3AD3338
	0x03AD3324 LDR X8, [X19]
	0x03AD3328 MOV X0, X19
	0x03AD332C LDR X9, [X8 + 0x828]
	0x03AD3330 LDR X1, [X8 + 0x830]
	0x03AD3334 BLR X9
	0x03AD3338 MOV X0, X19
	0x03AD333C MOV X1, X31
	0x03AD3340 BL 0x3AFA118
	0x03AD3344 ADRP X8, 0x685000
	0x03AD3348 LDR X8, [X8 + 0x578]
	0x03AD334C LDR X0, [X8]
	0x03AD3350 LDR W8, [X0 + 0xE0]
	0x03AD3354 CBNZ W8, 0x3AD335C
	0x03AD3358 BL 0x1C16DFC
	0x03AD335C MOV X0, X31
	0x03AD3360 BL 0x3AE6084
	0x03AD3364 LDRB W8, [X19 + 0x238]
	0x03AD3368 CBZ W8, 0x3AD3390
	0x03AD336C LDR V2, [X19 + 0x1EC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x910000
	008 Move W8, [X20+1271]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x621000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1271], W8
	019 Move X8, [X19+1800]
	020 Compare X8, 0
	021 JumpIfEqual {61}
	022 Move X21, 0x621000
	023 Move X21, [X21+1432]
	024 Move W22, 5
	025 Move W9, [X8+24]
	026 Subtract X23, X22, 4
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X21]
	030 Move X20, [X8]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {62}
	043 Move X8, [X19+1800]
	044 Compare X8, 0
	045 JumpIfEqual {61}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X21]
	049 Move X20, [X8]
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X31
	056 Call Object.DestroyImmediate, X0
	057 Move X8, [X19+1800]
	058 Add X22, X22, 1
	059 Compare X8, 0
	060 JumpIfNotEqual {25}
	061 Call 0x1C17F20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Call 0x1C17F28

Method: System.Void UpdateSubMeshSortingLayerID(System.Int32 id)

Disassembly:
	0x03ACD5D8 LDR X1, [X19 + 0x110]
	0x03ACD5DC LDP X20, X19, [X31 + 0x10]
	0x03ACD5E0 MOV X2, X31
	0x03ACD5E4 LDP X30, X21, [X31], #0x20
	0x03ACD5E8 B 0x3C134D8
	0x03ACD5EC BL 0x1C16F20
	0x03ACD5F0 STR X30, [X31 - 0x30]!
	0x03ACD5F4 STP X22, X21, [X31 + 0x10]
	0x03ACD5F8 STP X20, X19, [X31 + 0x20]
	0x03ACD5FC ADRP X21, 0x915000
	0x03ACD600 ADRP X20, 0x68B000
	0x03ACD604 LDRB W8, [X21 + 0x4D3]
	0x03ACD608 LDR X20, [X20 + 0x338]
	0x03ACD60C MOV X19, X0
	0x03ACD610 TBNZ X8, 0x0, 0x3ACD628
	0x03ACD614 ADRP X0, 0x68B000
	0x03ACD618 LDR X0, [X0 + 0x338]
	0x03ACD61C BL 0x1C16CF4
	0x03ACD620 MOVZ W8, 0x1
	0x03ACD624 STRB W8, [X21 + 0x4D3]
	0x03ACD628 LDR X0, [X20]
	0x03ACD62C LDR X20, [X19 + 0x110]
	0x03ACD630 LDRB W21, [X19 + 0x300]
	0x03ACD634 LDRB W22, [X19 + 0x26A]
	0x03ACD638 LDR W8, [X0 + 0xE0]
	0x03ACD63C CBNZ W8, 0x3ACD644
	0x03ACD640 BL 0x1C16DFC
	0x03ACD644 CMP W22, 0x0
	0x03ACD648 CSET W2, NE
	0x03ACD64C CMP W21, 0x0
	0x03ACD650 CSET W1, NE
	0x03ACD654 MOV X0, X20
	0x03ACD658 MOV X3, X31
	0x03ACD65C BL 0x3B15054
	0x03ACD660 LDR X0, [X19 + 0x110]
	0x03ACD664 MOV X1, X31
	0x03ACD668 STR S0, [X19 + 0x618]
	0x03ACD66C BL 0x3B14EB8
	0x03ACD670 LDR X8, [X19 + 0x368]
	0x03ACD674 AND W9, W0, 0x1
	0x03ACD678 STRB W9, [X19 + 0x307]
	0x03ACD67C MOVZ W9, 0x1
	0x03ACD680 STRB W9, [X19 + 0x370]
	0x03ACD684 STRB W31, [X19 + 0x301]
	0x03ACD688 CBZ X8, 0x3ACD6DC
	0x03ACD68C MOVZ W20, 0x5
	0x03ACD690 LDR W9, [X8 + 0x34]
	0x03ACD694 SUB X8, X20, 0x4
	0x03ACD698 CMP W8, W9
	0x03ACD69C B.GE 0x3ACD6DC
	0x03ACD6A0 LDR X9, [X19 + 0x708]
	0x03ACD6A4 CBZ X9, 0x3ACD6D8
	0x03ACD6A8 LDR W10, [X9 + 0x18]
	0x03ACD6AC CMP W8, W10
	0x03ACD6B0 B.CS 0x3ACD6EC
	0x03ACD6B4 LDR X0, [X9, X20, LSL #3]
	0x03ACD6B8 CBZ X0, 0x3ACD6D8
	0x03ACD6BC LDRB W2, [X19 + 0x26A]
	0x03ACD6C0 LDRB W1, [X19 + 0x300]
	0x03ACD6C4 MOV X3, X31
	0x03ACD6C8 BL 0x3B1A49C
	0x03ACD6CC LDR X8, [X19 + 0x368]
	0x03ACD6D0 ADD X20, X20, 0x1
	0x03ACD6D4 CBNZ X8, 0x3ACD690
	0x03ACD6D8 BL 0x1C16F20
	0x03ACD6DC LDP X20, X19, [X31 + 0x20]
	0x03ACD6E0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x916000
	009 Move W8, [X21+1272]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x627000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1272], W8
	021 Move X8, [X20+1800]
	022 Compare X8, 0
	023 JumpIfEqual {77}
	024 Move X23, 0x627000
	025 Move X23, [X23+1432]
	026 Move W24, 5
	027 Move W9, [X8+24]
	028 Subtract X10, X24, 4
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X23]
	032 Move X21, [X8]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {73}
	045 Compare X21, 0
	046 JumpIfEqual {77}
	047 Move X0, X21
	048 Move X1, X31
	049 Call TMP_SubMesh.get_renderer, X0
	050 Move X8, [X23]
	051 Move X22, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X22
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {73}
	065 Move X0, X21
	066 Move X1, X31
	067 Call TMP_SubMesh.get_renderer, X0
	068 Compare X0, 0
	069 JumpIfEqual {77}
	070 Move W1, W19
	071 Move X2, X31
	072 Call Renderer.set_sortingLayerID, X0, X1
	073 Move X8, [X20+1800]
	074 Add X24, X24, 1
	075 Compare X8, 0
	076 JumpIfNotEqual {27}
	077 Call 0x1C17F20
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return 
	086 Call 0x1C17F28

Method: System.Void UpdateSubMeshSortingOrder(System.Int32 order)

Disassembly:
	0x03ACD82C BL 0x1C16F28
	0x03ACD830 STR X30, [X31 - 0x40]!
	0x03ACD834 STP X24, X23, [X31 + 0x10]
	0x03ACD838 STP X22, X21, [X31 + 0x20]
	0x03ACD83C STP X20, X19, [X31 + 0x30]
	0x03ACD840 ADRP X21, 0x915000
	0x03ACD844 LDRB W8, [X21 + 0x4D5]
	0x03ACD848 MOV X19, X1
	0x03ACD84C MOV X20, X0
	0x03ACD850 TBNZ X8, 0x0, 0x3ACD868
	0x03ACD854 ADRP X0, 0x68B000
	0x03ACD858 LDR X0, [X0 + 0x590]
	0x03ACD85C BL 0x1C16CF4
	0x03ACD860 MOVZ W8, 0x1
	0x03ACD864 STRB W8, [X21 + 0x4D5]
	0x03ACD868 ADRP X24, 0x68B000
	0x03ACD86C LDR X21, [X20 + 0x6D8]
	0x03ACD870 LDR X24, [X24 + 0x590]
	0x03ACD874 ADD X20, X20, 0x6D8
	0x03ACD878 MOV X0, X21
	0x03ACD87C MOV X1, X19
	0x03ACD880 MOV X2, X31
	0x03ACD884 BL 0x33C0DE4
	0x03ACD888 CBZ X0, 0x3ACD8A8
	0x03ACD88C LDR X23, [X24]
	0x03ACD890 MOV X22, X0
	0x03ACD894 MOV X1, X23
	0x03ACD898 BL 0x1C16E00
	0x03ACD89C MOV X1, X0
	0x03ACD8A0 CBNZ X0, 0x3ACD8AC
	0x03ACD8A4 B 0x3ACD8D8
	0x03ACD8A8 MOV X1, X31
	0x03ACD8AC MOV X0, X20
	0x03ACD8B0 MOV X2, X21
	0x03ACD8B4 BL 0x1C24138
	0x03ACD8B8 CMP X21, X0
	0x03ACD8BC MOV X21, X0
	0x03ACD8C0 B.NE 0x3ACD878
	0x03ACD8C4 LDP X20, X19, [X31 + 0x30]
	0x03ACD8C8 LDP X22, X21, [X31 + 0x20]
	0x03ACD8CC LDP X24, X23, [X31 + 0x10]
	0x03ACD8D0 LDR X30, [X31], #0x40
	0x03ACD8D4 RET
	0x03ACD8D8 MOV X0, X22
	0x03ACD8DC MOV X1, X23
	0x03ACD8E0 BL 0x1C171E0
	0x03ACD8E4 STR X30, [X31 - 0x40]!
	0x03ACD8E8 STP X24, X23, [X31 + 0x10]
	0x03ACD8EC STP X22, X21, [X31 + 0x20]
	0x03ACD8F0 STP X20, X19, [X31 + 0x30]
	0x03ACD8F4 ADRP X21, 0x915000
	0x03ACD8F8 LDRB W8, [X21 + 0x4D6]
	0x03ACD8FC MOV X19, X1
	0x03ACD900 MOV X20, X0
	0x03ACD904 TBNZ X8, 0x0, 0x3ACD91C
	0x03ACD908 ADRP X0, 0x68B000
	0x03ACD90C LDR X0, [X0 + 0x590]
	0x03ACD910 BL 0x1C16CF4
	0x03ACD914 MOVZ W8, 0x1
	0x03ACD918 STRB W8, [X21 + 0x4D6]
	0x03ACD91C ADRP X24, 0x68B000
	0x03ACD920 LDR X21, [X20 + 0x6D8]
	0x03ACD924 LDR X24, [X24 + 0x590]
	0x03ACD928 ADD X20, X20, 0x6D8
	0x03ACD92C MOV X0, X21
	0x03ACD930 MOV X1, X19
	0x03ACD934 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x916000
	009 Move W8, [X21+1273]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x627000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1273], W8
	021 Move X8, [X20+1800]
	022 Compare X8, 0
	023 JumpIfEqual {77}
	024 Move X23, 0x627000
	025 Move X23, [X23+1432]
	026 Move W24, 5
	027 Move W9, [X8+24]
	028 Subtract X10, X24, 4
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X23]
	032 Move X21, [X8]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {73}
	045 Compare X21, 0
	046 JumpIfEqual {77}
	047 Move X0, X21
	048 Move X1, X31
	049 Call TMP_SubMesh.get_renderer, X0
	050 Move X8, [X23]
	051 Move X22, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X22
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {73}
	065 Move X0, X21
	066 Move X1, X31
	067 Call TMP_SubMesh.get_renderer, X0
	068 Compare X0, 0
	069 JumpIfEqual {77}
	070 Move W1, W19
	071 Move X2, X31
	072 Call Renderer.set_sortingOrder, X0, X1
	073 Move X8, [X20+1800]
	074 Add X24, X24, 1
	075 Compare X8, 0
	076 JumpIfNotEqual {27}
	077 Call 0x1C17F20
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return 
	086 Call 0x1C17F28

Method: UnityEngine.Bounds GetCompoundBounds()

Disassembly:
	0x03AD3370 LDR V0, [X19 + 0x254]
	0x03AD3374 LDR V1, [X19 + 0x250]
	0x03AD3378 FCMP S2, S0
	0x03AD337C FCSEL S3, S0, S2, GT
	0x03AD3380 FCMP S2, S1
	0x03AD3384 FCSEL S2, S3, S1, PL
	0x03AD3388 STR S2, [X19 + 0x1E4]
	0x03AD338C B 0x3AD3398
	0x03AD3390 LDR V0, [X19 + 0x254]
	0x03AD3394 LDR V1, [X19 + 0x250]
	0x03AD3398 STR S0, [X19 + 0x23C]
	0x03AD339C STR S1, [X19 + 0x240]
	0x03AD33A0 STR W31, [X19 + 0x2BC]
	0x03AD33A4 STR W31, [X19 + 0x2D4]
	0x03AD33A8 STRB W31, [X19 + 0x2F8]
	0x03AD33AC STRB W31, [X19 + 0x370]
	0x03AD33B0 STRB W31, [X19 + 0x3FC]
	0x03AD33B4 STRB W31, [X19 + 0x6AC]
	0x03AD33B8 STRB W31, [X19 + 0x24C]
	0x03AD33BC STR W31, [X19 + 0x244]
	0x03AD33C0 LDR X8, [X19]
	0x03AD33C4 MOV X0, X19
	0x03AD33C8 LDR X9, [X8 + 0xA18]
	0x03AD33CC LDR X1, [X8 + 0xA20]
	0x03AD33D0 BLR X9
	0x03AD33D4 LDR W8, [X19 + 0x244]
	0x03AD33D8 LDRB W9, [X19 + 0x24C]
	0x03AD33DC ADD W8, W8, 0x1
	0x03AD33E0 STR W8, [X19 + 0x244]
	0x03AD33E4 CBZ W9, 0x3AD33C0
	0x03AD33E8 LDP X20, X19, [X31 + 0x10]
	0x03AD33EC LDP X30, X21, [X31], #0x20
	0x03AD33F0 RET
	0x03AD33F4 BL 0x1C16F20
	0x03AD33F8 STP X30, X23, [X31 - 0x30]!
	0x03AD33FC STP X22, X21, [X31 + 0x10]
	0x03AD3400 STP X20, X19, [X31 + 0x20]
	0x03AD3404 ADRP X20, 0x90F000
	0x03AD3408 LDRB W8, [X20 + 0x506]
	0x03AD340C MOV X19, X0
	0x03AD3410 TBNZ X8, 0x0, 0x3AD3428
	0x03AD3414 ADRP X0, 0x620000
	0x03AD3418 LDR X0, [X0 + 0x598]
	0x03AD341C BL 0x1C16CF4
	0x03AD3420 MOVZ W8, 0x1
	0x03AD3424 STRB W8, [X20 + 0x506]
	0x03AD3428 LDR X8, [X19 + 0x368]
	0x03AD342C CBZ X8, 0x3AD34B8
	0x03AD3430 LDR X8, [X19 + 0x708]
	0x03AD3434 CBZ X8, 0x3AD34B4
	0x03AD3438 ADRP X21, 0x620000
	0x03AD343C LDR X21, [X21 + 0x598]
	0x03AD3440 MOVZ W22, 0x5
	0x03AD3444 LDR W9, [X8 + 0x18]
	0x03AD3448 SUB X23, X22, 0x4
	0x03AD344C CMP W23, W9
	0x03AD3450 B.GE 0x3AD34B8
	0x03AD3454 CMP W23, W9
	0x03AD3458 B.CS 0x3AD34C8
	0x03AD345C LDR X0, [X21]
	0x03AD3460 LDR X20, [X8, X22, LSL #3]
	0x03AD3464 LDR W9, [X0 + 0xE0]
	0x03AD3468 CBNZ W9, 0x3AD3470
	0x03AD346C BL 0x1C16DFC
	0x03AD3470 MOV X0, X20
	0x03AD3474 MOV X1, X31
	0x03AD3478 MOV X2, X31
	0x03AD347C BL 0x3C354F8
	0x03AD3480 TBZ X0, 0x0, 0x3AD34B8
	0x03AD3484 LDR X8, [X19 + 0x708]
	0x03AD3488 CBZ X8, 0x3AD34B4
	0x03AD348C LDR W9, [X8 + 0x18]
	0x03AD3490 CMP W23, W9
	0x03AD3494 B.CS 0x3AD34C8
	0x03AD3498 LDR X0, [X8, X22, LSL #3]
	0x03AD349C CBZ X0, 0x3AD34B4
	0x03AD34A0 MOV X1, X31
	0x03AD34A4 BL 0x3B1B700
	0x03AD34A8 LDR X8, [X19 + 0x708]
	0x03AD34AC ADD X22, X22, 0x1
	0x03AD34B0 CBNZ X8, 0x3AD3444
	0x03AD34B4 BL 0x1C16F20
	0x03AD34B8 LDP X20, X19, [X31 + 0x20]
	0x03AD34BC LDP X22, X21, [X31 + 0x10]
	0x03AD34C0 LDP X30, X23, [X31], #0x30
	0x03AD34C4 RET
	0x03AD34C8 BL 0x1C16F28
	0x03AD34CC STP X30, X21, [X31 - 0x20]!
	0x03AD34D0 STP X20, X19, [X31 + 0x10]
	0x03AD34D4 ADRP X21, 0x90F000
	0x03AD34D8 LDRB W8, [X21 + 0x507]
	0x03AD34DC MOV X19, X1
	0x03AD34E0 MOV X20, X0
	0x03AD34E4 TBNZ X8, 0x0, 0x3AD34FC
	0x03AD34E8 ADRP X0, 0x685000
	0x03AD34EC LDR X0, [X0 + 0x738]
	0x03AD34F0 BL 0x1C16CF4
	0x03AD34F4 MOVZ W8, 0x1
	0x03AD34F8 STRB W8, [X21 + 0x507]
	0x03AD34FC LDRB W8, [X20 + 0xA1]
	0x03AD3500 CBZ W8, 0x3AD3544
	0x03AD3504 MOV X0, X20
	0x03AD3508 MOV X1, X31
	0x03AD350C BL 0x3AF8D78
	0x03AD3510 MOV X1, X31
	0x03AD3514 BL 0x3E36EC0
	0x03AD3518 LDRB W8, [X20 + 0xB8]
	0x03AD351C CBZ W8, 0x3AD354C
	0x03AD3520 MOV X21, X0
	0x03AD3524 MOV X0, X20
	0x03AD3528 MOV X1, X31
	0x03AD352C BL 0x3AF8D78
	0x03AD3530 MOV X1, X21
	0x03AD3534 MOV X2, X31
	0x03AD3538 BL 0x3E37060
	0x03AD353C MOV W21, W0
	0x03AD3540 B 0x3AD3550
	0x03AD3544 LDR W21, [X20 + 0xCC]
	0x03AD3548 B 0x3AD3558
	0x03AD354C MOV W21, W31
	0x03AD3550 STR W21, [X20 + 0xCC]
	0x03AD3554 STRB W31, [X20 + 0xA1]
	0x03AD3558 CMP W21, 0x1
	0x03AD355C B.LT 0x3AD35BC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X30
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X21, 0x910000
	014 Move W9, [X21+1274]
	015 Move X20, X0
	016 Move X19, X8
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x621000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1274], W8
	026 Move X0, [X20+928]
	027 Compare X0, 0
	028 JumpIfEqual {117}
	029 Add X8, X31, 8
	030 Move X1, X31
	031 Call Mesh.get_bounds, X0
	032 Move S0, [X31+8]
	033 Move S1, [X31+12]
	034 Move S2, [X31+16]
	035 Move S3, [X31+20]
	036 Move S4, [X31+24]
	037 Move S5, [X31+28]
	038 Subtract S6, S0, S3
	039 Subtract S7, S1, S4
	040 Subtract S16, S2, S5
	041 Add S0, S0, S3
	042 Add S1, S1, S4
	043 Add S2, S2, S5
	044 Move [X31+48], S6
	045 Move [X31+56], S7
	046 Move [X31+56], S16
	047 Move [X31+32], S0
	048 Move [X31+40], S1
	049 Move [X31+40], S2
	050 Move X8, [X20+1800]
	051 Compare X8, 0
	052 JumpIfEqual {117}
	053 Move X22, 0x621000
	054 Move S11, [X31+48]
	055 Move S10, [X31+52]
	056 Move S9, [X31+32]
	057 Move S8, [X31+36]
	058 Move X22, [X22+1432]
	059 Move W23, 5
	060 Move W9, [X8+24]
	061 Subtract X24, X23, 4
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X22]
	065 Move X21, [X8]
	066 Move W9, [X0+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {118}
	078 Move X8, [X20+1800]
	079 Compare X8, 0
	080 JumpIfEqual {154}
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X8]
	084 Compare X0, 0
	085 JumpIfEqual {154}
	086 Move X1, X31
	087 Call TMP_SubMesh.get_mesh, X0
	088 Compare X0, 0
	089 JumpIfEqual {154}
	090 Add X8, X31, 8
	091 Move X1, X31
	092 Call Mesh.get_bounds, X0
	093 Move S0, [X31+8]
	094 Move S1, [X31+12]
	095 Move S2, [X31+20]
	096 Move S3, [X31+24]
	097 Move X8, [X20+1800]
	098 Add X23, X23, 1
	099 Subtract S4, S0, S2
	100 Subtract S5, S1, S3
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Add S0, S0, S2
	103 NotImplemented "Instruction FCSEL not yet implemented."
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Add S1, S1, S3
	106 NotImplemented "Instruction FCSEL not yet implemented."
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 NotImplemented "Instruction FCSEL not yet implemented."
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 NotImplemented "Instruction FCSEL not yet implemented."
	111 Compare X8, 0
	112 JumpIfNotEqual {60}
	113 Move [X31+48], S11
	114 Move [X31+56], S10
	115 Move [X31+32], S9
	116 Move [X31+40], S8
	117 Call 0x1C17F20
	118 Move V0, [X31+56]
	119 Move V1, [X31+40]
	120 Add S2, S11, S9
	121 Add S3, S10, S8
	122 Subtract S4, S9, S11
	123 Move S5, 0.5
	124 Subtract S6, S8, S10
	125 Add S0, S0, S1
	126 Multiply S2, S2, S5
	127 Multiply S3, S3, S5
	128 Multiply S4, S4, S5
	129 Multiply S6, S6, S5
	130 Multiply S0, S0, S5
	131 Move [X31+48], S11
	132 Move [X31+56], S10
	133 Move [X31+32], S9
	134 Move [X31+40], S8
	135 Move [X19], S2
	136 Move [X19+8], S3
	137 Move [X19+12], S4
	138 Move [X19+20], S6
	139 Move [X19+8], S0
	140 Move [X19+20], W31
	141 Move X20, [X31+144]
	142 Move X19, [X31+152]
	143 Move X22, [X31+128]
	144 Move X21, [X31+136]
	145 Move X24, [X31+112]
	146 Move X23, [X31+120]
	147 Move X30, [X31+96]
	148 Move D9, [X31+80]
	149 Move D8, [X31+88]
	150 Move D11, [X31+64]
	151 Move D10, [X31+72]
	152 Add X31, X31, 160
	153 Return X0
	154 Move [X31+48], S11
	155 Move [X31+56], S10
	156 Move [X31+32], S9
	157 Move [X31+40], S8
	158 Call 0x1C17F20
	159 Move [X31+48], S11
	160 Move [X31+56], S10
	161 Move [X31+32], S9
	162 Move [X31+40], S8
	163 Call 0x1C17F28

Method: System.Void UpdateSDFScale(System.Single scaleDelta)

Disassembly:
	0x03AD2C80 RET
	0x03AD2C84 RET
	0x03AD2C88 STP X30, X21, [X31 - 0x20]!
	0x03AD2C8C STP X20, X19, [X31 + 0x10]
	0x03AD2C90 ADRP X20, 0x910000
	0x03AD2C94 ADRP X21, 0x621000
	0x03AD2C98 LDRB W8, [X20 + 0x500]
	0x03AD2C9C LDR X21, [X21 + 0x598]
	0x03AD2CA0 MOV X19, X0
	0x03AD2CA4 TBNZ X8, 0x0, 0x3AD2CC8
	0x03AD2CA8 ADRP X0, 0x686000
	0x03AD2CAC LDR X0, [X0 + 0x718]
	0x03AD2CB0 BL 0x1C16CF4
	0x03AD2CB4 ADRP X0, 0x621000
	0x03AD2CB8 LDR X0, [X0 + 0x598]
	0x03AD2CBC BL 0x1C16CF4
	0x03AD2CC0 MOVZ W8, 0x1
	0x03AD2CC4 STRB W8, [X20 + 0x500]
	0x03AD2CC8 LDR X0, [X21]
	0x03AD2CCC LDR W8, [X0 + 0xE0]
	0x03AD2CD0 CBNZ W8, 0x3AD2CD8
	0x03AD2CD4 BL 0x1C16DFC
	0x03AD2CD8 MOV X0, X19
	0x03AD2CDC MOV X1, X31
	0x03AD2CE0 MOV X2, X31
	0x03AD2CE4 BL 0x3C3883C
	0x03AD2CE8 TBNZ X0, 0x0, 0x3AD2D60
	0x03AD2CEC LDR X8, [X19]
	0x03AD2CF0 MOV X0, X19
	0x03AD2CF4 LDP X9, X1, [X8 + 0x1C8]
	0x03AD2CF8 BLR X9
	0x03AD2CFC TBZ X0, 0x0, 0x3AD2D60
	0x03AD2D00 ADRP X20, 0x686000
	0x03AD2D04 LDR X20, [X20 + 0x718]
	0x03AD2D08 LDR X0, [X20]
	0x03AD2D0C LDR W8, [X0 + 0xE0]
	0x03AD2D10 CBNZ W8, 0x3AD2D18
	0x03AD2D14 BL 0x1C16DFC
	0x03AD2D18 MOV X0, X31
	0x03AD2D1C BL 0x3CD1F50
	0x03AD2D20 TBNZ X0, 0x0, 0x3AD2D60
	0x03AD2D24 LDR X0, [X20]
	0x03AD2D28 LDR W8, [X0 + 0xE0]
	0x03AD2D2C CBNZ W8, 0x3AD2D34
	0x03AD2D30 BL 0x1C16DFC
	0x03AD2D34 MOV X0, X19
	0x03AD2D38 MOV X1, X31
	0x03AD2D3C BL 0x3CD16F4
	0x03AD2D40 LDR X8, [X19 + 0x78]
	0x03AD2D44 CBZ X8, 0x3AD2D60
	0x03AD2D48 LDR X2, [X8 + 0x18]
	0x03AD2D4C LDR X0, [X8 + 0x40]
	0x03AD2D50 LDR X1, [X8 + 0x28]
	0x03AD2D54 LDP X20, X19, [X31 + 0x10]
	0x03AD2D58 LDP X30, X21, [X31], #0x20
	0x03AD2D5C BR X2
	0x03AD2D60 LDP X20, X19, [X31 + 0x10]
	0x03AD2D64 LDP X30, X21, [X31], #0x20
	0x03AD2D68 RET
	0x03AD2D6C STP X30, X21, [X31 - 0x20]!
	0x03AD2D70 STP X20, X19, [X31 + 0x10]
	0x03AD2D74 ADRP X21, 0x910000
	0x03AD2D78 ADRP X20, 0x621000
	0x03AD2D7C LDRB W8, [X21 + 0x501]
	0x03AD2D80 LDR X20, [X20 + 0x598]
	0x03AD2D84 MOV X19, X0
	0x03AD2D88 TBNZ X8, 0x0, 0x3AD2DAC
	0x03AD2D8C ADRP X0, 0x624000
	0x03AD2D90 LDR X0, [X0 + 0x920]
	0x03AD2D94 BL 0x1C16CF4
	0x03AD2D98 ADRP X0, 0x621000
	0x03AD2D9C LDR X0, [X0 + 0x598]
	0x03AD2DA0 BL 0x1C16CF4
	0x03AD2DA4 MOVZ W8, 0x1
	0x03AD2DA8 STRB W8, [X21 + 0x501]
	0x03AD2DAC MOVZ W8, 0x1
	0x03AD2DB0 STRB W8, [X19 + 0x3E8]
	0x03AD2DB4 STRB W8, [X19 + 0x3F4]
	0x03AD2DB8 LDR X0, [X20]
	0x03AD2DBC LDR W8, [X0 + 0xE0]
	0x03AD2DC0 CBNZ W8, 0x3AD2DC8
	0x03AD2DC4 BL 0x1C16DFC
	0x03AD2DC8 MOV X0, X19
	0x03AD2DCC MOV X1, X31
	0x03AD2DD0 MOV X2, X31
	0x03AD2DD4 BL 0x3C3883C
	0x03AD2DD8 TBNZ X0, 0x0, 0x3AD2E50
	0x03AD2DDC LDR X8, [X19]
	0x03AD2DE0 MOV X0, X19
	0x03AD2DE4 LDP X9, X1, [X8 + 0x1C8]
	0x03AD2DE8 BLR X9
	0x03AD2DEC TBZ X0, 0x0, 0x3AD2E50
	0x03AD2DF0 MOV X0, X19
	0x03AD2DF4 MOV X1, X31
	0x03AD2DF8 BL 0x3AF8E0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, 0xFF800000
	006 Move S1, W8
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Move X19, X0
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move W8, 0x7F800000
	011 Move S1, W8
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move X8, [X19+872]
	014 Compare X8, 0
	015 JumpIfEqual {93}
	016 Move W9, [X8+52]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X11, [X8+96]
	019 Move W10, W31
	020 NotImplemented "Instruction FABS not yet implemented."
	021 Move W12, 80
	022 Compare X11, 0
	023 JumpIfEqual {93}
	024 Move W13, [X11+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction SMADDL not yet implemented."
	027 Move X15, [X13+80]
	028 Compare X15, 0
	029 JumpIfEqual {93}
	030 Move W13, [X15+24]
	031 Move X14, X13
	032 ShiftRight X14, 32
	033 And X14, X14, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X14, W13
	036 Add X15, X15, 36
	037 Compare X13, 0
	038 JumpIfEqual {108}
	039 Move V1, [X15]
	040 Subtract X14, X14, 1
	041 Subtract X13, X13, 1
	042 Multiply S1, S0, S1
	043 Move [X15+8], S1
	044 Compare X14, 0
	045 JumpIfNotEqual {37}
	046 Add W10, W10, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, X31
	049 Move W21, 80
	050 Move X8, [X8+96]
	051 Compare X8, 0
	052 JumpIfEqual {93}
	053 Move X9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X20, 0
	056 JumpIfEqual {79}
	057 Move X8, [X19+1800]
	058 Compare X8, 0
	059 JumpIfEqual {93}
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X8, X8, X20
	063 Move X0, [X8+32]
	064 Compare X0, 0
	065 JumpIfEqual {93}
	066 Move X1, X31
	067 Call TMP_SubMesh.get_mesh, X0
	068 Move X8, [X19+872]
	069 Compare X8, 0
	070 JumpIfEqual {93}
	071 Move X8, [X8+96]
	072 Compare X8, 0
	073 JumpIfEqual {93}
	074 Move W9, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {93}
	078 Add X8, X8, X21
	079 Compare W9, 0
	080 JumpIfEqual {108}
	081 Move X0, [X19+928]
	082 Compare X0, 0
	083 JumpIfEqual {93}
	084 Add X8, X8, 80
	085 Move X1, [X8]
	086 Move X2, X31
	087 Call Mesh.set_uv2, X0, X1
	088 Move X8, [X19+872]
	089 Add X20, X20, 1
	090 Add X21, X21, 80
	091 Compare X8, 0
	092 JumpIfNotEqual {50}
	093 Call 0x1C17F20
	094 Move W8, 1
	095 Move [X19+880], W8
	096 Move X0, X19
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Call TextMeshPro.OnPreRenderObject, X0
	102 Return 
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Return 
	108 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03AD3560 ADRP X8, 0x685000
	0x03AD3564 LDR X8, [X8 + 0x738]
	0x03AD3568 LDR X0, [X8]
	0x03AD356C LDR W8, [X0 + 0xE0]
	0x03AD3570 CBNZ W8, 0x3AD3578
	0x03AD3574 BL 0x1C16DFC
	0x03AD3578 MOVN W8, 0x0
	0x03AD357C LSLV W8, W8, W21
	0x03AD3580 ORN W1, W31, W8, 0x0
	0x03AD3584 MOVZ W3, 0x3
	0x03AD3588 MOVZ W4, 0xF
	0x03AD358C MOV X0, X19
	0x03AD3590 MOV W2, W31
	0x03AD3594 MOV W5, W1
	0x03AD3598 MOV W6, W31
	0x03AD359C MOV X7, X31
	0x03AD35A0 BL 0x3E44030
	0x03AD35A4 LDR X8, [X20 + 0xA8]
	0x03AD35A8 MOV X19, X0
	0x03AD35AC MOV X1, X31
	0x03AD35B0 MOV X0, X8
	0x03AD35B4 BL 0x3E44A50
	0x03AD35B8 STR X19, [X20 + 0xA8]
	0x03AD35BC MOV X0, X19
	0x03AD35C0 LDP X20, X19, [X31 + 0x10]
	0x03AD35C4 LDP X30, X21, [X31], #0x20
	0x03AD35C8 RET
	0x03AD35CC STP X30, X21, [X31 - 0x20]!
	0x03AD35D0 STP X20, X19, [X31 + 0x10]
	0x03AD35D4 ADRP X20, 0x90F000
	0x03AD35D8 ADRP X21, 0x620000
	0x03AD35DC LDRB W8, [X20 + 0x508]
	0x03AD35E0 LDR X21, [X21 + 0x598]
	0x03AD35E4 MOV X19, X0
	0x03AD35E8 TBNZ X8, 0x0, 0x3AD3600
	0x03AD35EC ADRP X0, 0x620000
	0x03AD35F0 LDR X0, [X0 + 0x598]
	0x03AD35F4 BL 0x1C16CF4
	0x03AD35F8 MOVZ W8, 0x1
	0x03AD35FC STRB W8, [X20 + 0x508]
	0x03AD3600 LDR X0, [X21]
	0x03AD3604 LDR X20, [X19 + 0x110]
	0x03AD3608 LDR W8, [X0 + 0xE0]
	0x03AD360C CBNZ W8, 0x3AD3614
	0x03AD3610 BL 0x1C16DFC
	0x03AD3614 MOV X0, X20
	0x03AD3618 MOV X1, X31
	0x03AD361C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x910000
	008 Move X22, 0x686000
	009 Move X21, 0x623000
	010 Move X20, 0x686000
	011 Move W8, [X23+1275]
	012 Move X22, [X22+1640]
	013 Move X21, [X21+2480]
	014 Move X20, [X20+1000]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x686000
	021 Move X0, [X0+1640]
	022 Call 0x1C17CF4
	023 Move X0, 0x686000
	024 Move X0, [X0+1000]
	025 Call 0x1C17CF4
	026 Move X0, 0x623000
	027 Move X0, [X0+2480]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1275], W8
	031 Move X8, -50216960
	032 Move V0, [X8+1104]
	033 Move W8, 0xBF800000
	034 Move [X19+1764], W8
	035 Add X8, X19, 1788
	036 Move [X8], D0
	037 Move X0, [X22]
	038 Move W1, 8
	039 Call 0x1C17D6C
	040 Move [X19+1800], X0
	041 Move X0, [X21]
	042 Move W1, 4
	043 Call 0x1C17D6C
	044 Move [X19+1880], X0
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Call TMP_Text..ctor, X0
	059 Return 

Method: System.Void .cctor()

Disassembly:
	0x03AD3620 BL 0x3C3883C
	0x03AD3624 TBNZ X0, 0x0, 0x3AD365C
	0x03AD3628 MOV X0, X19
	0x03AD362C BL 0x3AD2BEC
	0x03AD3630 LDR X8, [X21]
	0x03AD3634 MOV X20, X0
	0x03AD3638 LDR W9, [X8 + 0xE0]
	0x03AD363C CBNZ W9, 0x3AD3648
	0x03AD3640 MOV X0, X8
	0x03AD3644 BL 0x1C16DFC
	0x03AD3648 MOV X0, X20
	0x03AD364C MOV X1, X31
	0x03AD3650 MOV X2, X31
	0x03AD3654 BL 0x3C3883C
	0x03AD3658 TBZ X0, 0x0, 0x3AD3668
	0x03AD365C LDP X20, X19, [X31 + 0x10]
	0x03AD3660 LDP X30, X21, [X31], #0x20
	0x03AD3664 RET
	0x03AD3668 LDR X0, [X19 + 0x720]
	0x03AD366C CBZ X0, 0x3AD36B4
	0x03AD3670 MOVZ W1, 0x1
	0x03AD3674 MOV X2, X31
	0x03AD3678 BL 0x3E224A8
	0x03AD367C LDR X8, [X19]
	0x03AD3680 LDR X20, [X19 + 0x720]
	0x03AD3684 MOV X0, X19
	0x03AD3688 LDR X9, [X8 + 0x358]
	0x03AD368C LDR X1, [X8 + 0x360]
	0x03AD3690 BLR X9
	0x03AD3694 CBZ X20, 0x3AD36B4
	0x03AD3698 MOV X1, X0
	0x03AD369C MOV X0, X20
	0x03AD36A0 LDP X20, X19, [X31 + 0x10]
	0x03AD36A4 MOV W2, W31
	0x03AD36A8 MOV X3, X31
	0x03AD36AC LDP X30, X21, [X31], #0x20
	0x03AD36B0 B 0x3E2293C
	0x03AD36B4 BL 0x1C16F20
	0x03AD36B8 LDR V0, [X0 + 0x74C]
	0x03AD36BC LDR V1, [X0 + 0x750]
	0x03AD36C0 LDR V2, [X0 + 0x754]
	0x03AD36C4 LDR V3, [X0 + 0x758]
	0x03AD36C8 RET
	0x03AD36CC STP X30, X19, [X31 - 0x10]!
	0x03AD36D0 MOV X19, X0
	0x03AD36D4 STR S0, [X0 + 0x74C]
	0x03AD36D8 STR S1, [X0 + 0x750]
	0x03AD36DC STR S2, [X0 + 0x754]
	0x03AD36E0 STR S3, [X0 + 0x758]
	0x03AD36E4 BL 0x3AD36F8
	0x03AD36E8 MOVZ W8, 0x1
	0x03AD36EC STRB W8, [X19 + 0x370]
	0x03AD36F0 LDP X30, X19, [X31], #0x10
	0x03AD36F4 RET
	0x03AD36F8 SUB X31, X31, 0x90
	0x03AD36FC STP D15, D14, [X31 + 0x30]
	0x03AD3700 STP D13, D12, [X31 + 0x40]
	0x03AD3704 STP D11, D10, [X31 + 0x50]
	0x03AD3708 STP D9, D8, [X31 + 0x60]
	0x03AD370C STP X30, X21, [X31 + 0x70]
	0x03AD3710 STP X20, X19, [X31 + 0x80]
	0x03AD3714 ADRP X21, 0x90F000
	0x03AD3718 ADRP X20, 0x620000
	0x03AD371C LDRB W8, [X21 + 0x51A]
	0x03AD3720 LDR X20, [X20 + 0x598]
	0x03AD3724 MOV X19, X0
	0x03AD3728 TBNZ X8, 0x0, 0x3AD374C
	0x03AD372C ADRP X0, 0x620000
	0x03AD3730 LDR X0, [X0 + 0x598]
	0x03AD3734 BL 0x1C16CF4
	0x03AD3738 ADRP X0, 0x685000
	0x03AD373C LDR X0, [X0 + 0x338]
	0x03AD3740 BL 0x1C16CF4
	0x03AD3744 MOVZ W8, 0x1
	0x03AD3748 STRB W8, [X21 + 0x51A]
	0x03AD374C LDR X0, [X20]
	0x03AD3750 LDR X20, [X19 + 0x380]
	0x03AD3754 LDR W8, [X0 + 0xE0]
	0x03AD3758 CBNZ W8, 0x3AD3760
	0x03AD375C BL 0x1C16DFC
	0x03AD3760 MOV X0, X20
	0x03AD3764 MOV X1, X31
	0x03AD3768 MOV X2, X31
	0x03AD376C BL 0x3C354F8
	0x03AD3770 TBZ X0, 0x0, 0x3AD39EC
	0x03AD3774 ADRP X21, 0x685000
	0x03AD3778 LDR X21, [X21 + 0x338]
	0x03AD377C LDR X0, [X21]
	0x03AD3780 LDR W8, [X0 + 0xE0]
	0x03AD3784 CBNZ W8, 0x3AD3790
	0x03AD3788 BL 0x1C16DFC
	0x03AD378C LDR X0, [X21]
	0x03AD3790 LDR X8, [X0 + 0xB8]
	0x03AD3794 LDRB W8, [X8 + 0x12C]
	0x03AD3798 CBNZ W8, 0x3AD37B4
	0x03AD379C LDR W8, [X0 + 0xE0]
	0x03AD37A0 CBNZ W8, 0x3AD37A8
	0x03AD37A4 BL 0x1C16DFC
	0x03AD37A8 MOV X0, X31
	0x03AD37AC BL 0x3B0DFAC
	0x03AD37B0 LDR X0, [X21]
	0x03AD37B4 MOVZ W8, 0x1
	0x03AD37B8 LDR V0, [X19 + 0x340]
	0x03AD37BC LDR V1, [X19 + 0x348]
	0x03AD37C0 STRB W8, [X19 + 0x748]
	0x03AD37C4 LDR W8, [X0 + 0xE0]
	0x03AD37C8 LDR X20, [X19 + 0x110]
	0x03AD37CC FCMP S0, S1
	0x03AD37D0 FCSEL S8, S0, S1, MI
	0x03AD37D4 CBNZ W8, 0x3AD37DC
	0x03AD37D8 BL 0x1C16DFC
	0x03AD37DC CBZ X20, 0x3AD3A0C
	0x03AD37E0 LDR X8, [X21]
	0x03AD37E4 MOV X0, X20
	0x03AD37E8 MOV X2, X31
	0x03AD37EC LDR X8, [X8 + 0xB8]
	0x03AD37F0 LDR W1, [X8 + 0xA0]
	0x03AD37F4 BL 0x3C15F98
	0x03AD37F8 LDR V1, [X19 + 0x344]
	0x03AD37FC LDR V2, [X19 + 0x34C]
	0x03AD3800 LDR X0, [X19 + 0x110]
	0x03AD3804 FCMP S8, S0
	0x03AD3808 FCSEL S9, S8, S0, MI
	0x03AD380C FCMP S1, S2
	0x03AD3810 FCSEL S8, S1, S2, MI
	0x03AD3814 CBZ X0, 0x3AD3A0C
	0x03AD3818 LDR X8, [X21]
	0x03AD381C MOV X2, X31
	0x03AD3820 LDR X8, [X8 + 0xB8]
	0x03AD3824 LDR W1, [X8 + 0xA4]
	0x03AD3828 BL 0x3C15F98
	0x03AD382C LDR X0, [X19 + 0x380]
	0x03AD3830 FCMP S8, S0
	0x03AD3834 FCSEL S13, S8, S0, MI
	0x03AD3838 CBZ X0, 0x3AD3A0C
	0x03AD383C MOV X1, X31
	0x03AD3840 BL 0x3C3E51C
	0x03AD3844 LDR X0, [X19 + 0x380]
	0x03AD3848 CBZ X0, 0x3AD3A0C
	0x03AD384C LDR V12, [X19 + 0x340]
	0x03AD3850 LDR V10, [X19 + 0x348]
	0x03AD3854 MOV X1, X31
	0x03AD3858 MOV V8.16B, V2.16B
	0x03AD385C BL 0x3C3E51C
	0x03AD3860 LDR X0, [X19 + 0x380]
	0x03AD3864 CBZ X0, 0x3AD3A0C
	0x03AD3868 LDR V1, [X19 + 0x344]
	0x03AD386C LDR V0, [X19 + 0x34C]
	0x03AD3870 MOV X1, X31
	0x03AD3874 MOV V11.16B, V3.16B
	0x03AD3878 STP S0, S1, [X31 + 0x28]
	0x03AD387C BL 0x3C3EB78
	0x03AD3880 LDR X0, [X19 + 0x380]
	0x03AD3884 CBZ X0, 0x3AD3A0C
	0x03AD3888 MOV X1, X31
	0x03AD388C MOV V14.16B, V0.16B
	0x03AD3890 MOV V15.16B, V1.16B
	0x03AD3894 BL 0x3C3EA28
	0x03AD3898 LDR X0, [X19 + 0x380]
	0x03AD389C STR S0, [X31 + 0x24]
	0x03AD38A0 CBZ X0, 0x3AD3A0C
	0x03AD38A4 MOV X1, X31
	0x03AD38A8 BL 0x3C3E51C
	0x03AD38AC LDR X0, [X19 + 0x380]
	0x03AD38B0 STR S2, [X31 + 0x20]
	0x03AD38B4 CBZ X0, 0x3AD3A0C
	0x03AD38B8 STP S11, S10, [X31 + 0x10]
	0x03AD38BC LDR V10, [X19 + 0x340]
	0x03AD38C0 LDR V11, [X19 + 0x348]
	0x03AD38C4 MOV X1, X31
	0x03AD38C8 STP S15, S14, [X31 + 0x8]
	0x03AD38CC STP S9, S8, [X31 + 0x18]
	0x03AD38D0 BL 0x3C3EA28
	0x03AD38D4 LDR X0, [X19 + 0x380]
	0x03AD38D8 CBZ X0, 0x3AD3A0C
	0x03AD38DC MOV X1, X31
	0x03AD38E0 MOV V14.16B, V1.16B
	0x03AD38E4 BL 0x3C3E51C
	0x03AD38E8 LDR X0, [X21]
	0x03AD38EC LDR V8, [X19 + 0x344]
	0x03AD38F0 LDR V9, [X19 + 0x34C]
	0x03AD38F4 LDR X19, [X19 + 0x110]
	0x03AD38F8 LDR W8, [X0 + 0xE0]
	0x03AD38FC MOV V15.16B, V3.16B
	0x03AD3900 CBNZ W8, 0x3AD3908
	0x03AD3904 BL 0x1C16DFC
	0x03AD3908 CBZ X19, 0x3AD3A0C
	0x03AD390C LDP S18, S22, [X31 + 0x14]
	0x03AD3910 FMOV S0, W31
	0x03AD3914 FMAXNM S16, S12, S0
	0x03AD3918 FMAXNM S21, S13, S0
	0x03AD391C FMAXNM S18, S18, S0
	0x03AD3920 FMAXNM S0, S22, S0
	0x03AD3924 LDR V22, [X31 + 0x1C]
	0x03AD3928 LDP S19, S17, [X31 + 0x28]
	0x03AD392C FMOV S1, W31
	0x03AD3930 FMOV S2, W31
	0x03AD3934 LDR X8, [X21]
	0x03AD3938 FSUB S16, S22, S16
	0x03AD393C LDR V22, [X31 + 0x10]
	0x03AD3940 FMAXNM S4, S10, S2
	0x03AD3944 FMAXNM S2, S11, S2
	0x03AD3948 FMAXNM S17, S17, S1
	0x03AD394C FMAXNM S1, S19, S1
	0x03AD3950 LDR V19, [X31 + 0x24]
	0x03AD3954 FSUB S2, S4, S2
	0x03AD3958 LDR V4, [X31 + 0x20]
	0x03AD395C FMOV S3, W31
	0x03AD3960 FMOV S5, 0.5
	0x03AD3964 FMAXNM S6, S8, S3
	0x03AD3968 FMAXNM S3, S9, S3
	0x03AD396C FSUB S17, S22, S17
	0x03AD3970 LDR X8, [X8 + 0xB8]
	0x03AD3974 FMOV S7, 0.5
	0x03AD3978 FSUB S19, S5, S19
	0x03AD397C FSUB S20, S5, S14
	0x03AD3980 FSUB S3, S3, S6
	0x03AD3984 FSUB S16, S16, S18
	0x03AD3988 FSUB S1, S17, S1
	0x03AD398C FMUL S4, S19, S4
	0x03AD3990 FMUL S6, S20, S15
	0x03AD3994 FMUL S2, S2, S5
	0x03AD3998 FMUL S3, S3, S5
	0x03AD399C FMUL S5, S16, S7
	0x03AD39A0 FMUL S1, S1, S7
	0x03AD39A4 FADD S4, S4, S2
	0x03AD39A8 FADD S6, S6, S3
	0x03AD39AC FADD S2, S0, S5
	0x03AD39B0 FADD S3, S21, S1
	0x03AD39B4 LDP S1, S0, [X31 + 0x8]
	0x03AD39B8 LDR W1, [X8 + 0x9C]
	0x03AD39BC MOV X0, X19
	0x03AD39C0 LDP X20, X19, [X31 + 0x80]
	0x03AD39C4 LDP X30, X21, [X31 + 0x70]
	0x03AD39C8 LDP D9, D8, [X31 + 0x60]
	0x03AD39CC LDP D11, D10, [X31 + 0x50]
	0x03AD39D0 LDP D13, D12, [X31 + 0x40]
	0x03AD39D4 LDP D15, D14, [X31 + 0x30]
	0x03AD39D8 FADD S0, S0, S4
	0x03AD39DC FADD S1, S1, S6
	0x03AD39E0 MOV X2, X31
	0x03AD39E4 ADD X31, X31, 0x90
	0x03AD39E8 B 0x3C15D80
	0x03AD39EC LDP X20, X19, [X31 + 0x80]
	0x03AD39F0 LDP X30, X21, [X31 + 0x70]
	0x03AD39F4 LDP D9, D8, [X31 + 0x60]
	0x03AD39F8 LDP D11, D10, [X31 + 0x50]
	0x03AD39FC LDP D13, D12, [X31 + 0x40]
	0x03AD3A00 LDP D15, D14, [X31 + 0x30]
	0x03AD3A04 ADD X31, X31, 0x90
	0x03AD3A08 RET
	0x03AD3A0C BL 0x1C16F20
	0x03AD3A10 MOV X1, X31
	0x03AD3A14 B 0x3E37F50
	0x03AD3A18 STP D11, D10, [X31 - 0x60]!
	0x03AD3A1C STP D9, D8, [X31 + 0x10]
	0x03AD3A20 STR X30, [X31 + 0x20]
	0x03AD3A24 STP X24, X23, [X31 + 0x30]
	0x03AD3A28 STP X22, X21, [X31 + 0x40]
	0x03AD3A2C STP X20, X19, [X31 + 0x50]
	0x03AD3A30 ADRP X21, 0x90F000
	0x03AD3A34 LDRB W8, [X21 + 0x509]
	0x03AD3A38 MOV W20, W1
	0x03AD3A3C MOV V8.16B, V3.16B
	0x03AD3A40 MOV V10.16B, V2.16B
	0x03AD3A44 MOV V9.16B, V1.16B
	0x03AD3A48 MOV V11.16B, V0.16B
	0x03AD3A4C MOV X19, X0
	0x03AD3A50 TBNZ X8, 0x0, 0x3AD3A80
	0x03AD3A54 ADRP X0, 0x620000
	0x03AD3A58 LDR X0, [X0 + 0x598]
	0x03AD3A5C BL 0x1C16CF4
	0x03AD3A60 ADRP X0, 0x685000
	0x03AD3A64 LDR X0, [X0 + 0x568]
	0x03AD3A68 BL 0x1C16CF4
	0x03AD3A6C ADRP X0, 0x685000
	0x03AD3A70 LDR X0, [X0 + 0x740]
	0x03AD3A74 BL 0x1C16CF4
	0x03AD3A78 MOVZ W8, 0x1
	0x03AD3A7C STRB W8, [X21 + 0x509]
	0x03AD3A80 LDRB W8, [X19 + 0x3FC]
	0x03AD3A84 CBZ W8, 0x3AD3AE0
	0x03AD3A88 ADRP X8, 0x685000
	0x03AD3A8C LDR X8, [X8 + 0x568]
	0x03AD3A90 AND W20, W20, 0x1
	0x03AD3A94 LDR X0, [X8]
	0x03AD3A98 LDR W8, [X0 + 0xE0]
	0x03AD3A9C CBNZ W8, 0x3AD3AA4
	0x03AD3AA0 BL 0x1C16DFC
	0x03AD3AA4 MOV X0, X19
	0x03AD3AA8 MOV X1, X31
	0x03AD3AAC BL 0x3B206B0
	0x03AD3AB0 STR S11, [X19 + 0x6E0]
	0x03AD3AB4 STR S9, [X19 + 0x6E4]
	0x03AD3AB8 STR S10, [X19 + 0x6E8]
	0x03AD3ABC STR S8, [X19 + 0x6EC]
	0x03AD3AC0 STRB W20, [X19 + 0x6F0]
	0x03AD3AC4 LDP X20, X19, [X31 + 0x50]
	0x03AD3AC8 LDP X22, X21, [X31 + 0x40]
	0x03AD3ACC LDP X24, X23, [X31 + 0x30]
	0x03AD3AD0 LDR X30, [X31 + 0x20]
	0x03AD3AD4 LDP D9, D8, [X31 + 0x10]
	0x03AD3AD8 LDP D11, D10, [X31], #0x60

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x910000
	014 Move X20, 0x686000
	015 Move X19, 0x686000
	016 Move X28, 0x686000
	017 Move X27, 0x686000
	018 Move X26, 0x686000
	019 Move X25, 0x686000
	020 Move X24, 0x686000
	021 Move X23, 0x686000
	022 Move X22, 0x686000
	023 Move X21, 0x686000
	024 Move X20, [X20+1648]
	025 Move X19, [X19+1656]
	026 Move X28, [X28+1664]
	027 Move X27, [X27+1672]
	028 Move X26, [X26+1680]
	029 Move X25, [X25+1688]
	030 Move X24, [X24+1696]
	031 Move X23, [X23+1704]
	032 Move X22, [X22+1712]
	033 Move X21, [X21+1720]
	034 Move W8, [X29+1276]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {104}
	039 Move X0, 0x686000
	040 Move X0, [X0+1656]
	041 Call 0x1C17CF4
	042 Move X0, 0x686000
	043 Move X0, [X0+1712]
	044 Call 0x1C17CF4
	045 Move X0, 0x686000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move X0, 0x686000
	049 Move X0, [X0+1736]
	050 Call 0x1C17CF4
	051 Move X0, 0x686000
	052 Move X0, [X0+1680]
	053 Call 0x1C17CF4
	054 Move X0, 0x686000
	055 Move X0, [X0+1744]
	056 Call 0x1C17CF4
	057 Move X0, 0x686000
	058 Move X0, [X0+1672]
	059 Call 0x1C17CF4
	060 Move X0, 0x686000
	061 Move X0, [X0+1648]
	062 Call 0x1C17CF4
	063 Move X0, 0x686000
	064 Move X0, [X0+1720]
	065 Call 0x1C17CF4
	066 Move X0, 0x686000
	067 Move X0, [X0+1752]
	068 Call 0x1C17CF4
	069 Move X0, 0x686000
	070 Move X0, [X0+1760]
	071 Call 0x1C17CF4
	072 Move X0, 0x686000
	073 Move X0, [X0+1696]
	074 Call 0x1C17CF4
	075 Move X0, 0x686000
	076 Move X0, [X0+1768]
	077 Call 0x1C17CF4
	078 Move X0, 0x686000
	079 Move X0, [X0+1776]
	080 Call 0x1C17CF4
	081 Move X0, 0x686000
	082 Move X0, [X0+1704]
	083 Call 0x1C17CF4
	084 Move X0, 0x686000
	085 Move X0, [X0+1784]
	086 Call 0x1C17CF4
	087 Move X0, 0x686000
	088 Move X0, [X0+1664]
	089 Call 0x1C17CF4
	090 Move X0, 0x686000
	091 Move X0, [X0+1792]
	092 Call 0x1C17CF4
	093 Move X0, 0x686000
	094 Move X0, [X0+1800]
	095 Call 0x1C17CF4
	096 Move X0, 0x686000
	097 Move X0, [X0+1808]
	098 Call 0x1C17CF4
	099 Move X0, 0x686000
	100 Move X0, [X0+1688]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X29+1276], W8
	104 Move X0, [X20]
	105 Move W1, 1
	106 Move W2, W31
	107 Move W3, W31
	108 Move X4, X31
	109 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	110 Move X8, [X19]
	111 Move W1, 1
	112 Move W2, W31
	113 Move W3, W31
	114 Move X8, [X8+184]
	115 Move X4, X31
	116 Move [X8], X0
	117 Move X0, [X28]
	118 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	119 Move X8, [X19]
	120 Move W1, 1
	121 Move W2, W31
	122 Move W3, W31
	123 Move X8, [X8+184]
	124 Move X4, X31
	125 Move [X8+8], X0
	126 Move X0, [X27]
	127 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	128 Move X8, [X19]
	129 Move W1, 1
	130 Move W2, W31
	131 Move W3, W31
	132 Move X8, [X8+184]
	133 Move X4, X31
	134 Move [X8+16], X0
	135 Move X0, [X26]
	136 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	137 Move X8, [X19]
	138 Move W1, 1
	139 Move W2, W31
	140 Move W3, W31
	141 Move X8, [X8+184]
	142 Move X4, X31
	143 Move [X8+24], X0
	144 Move X0, [X25]
	145 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	146 Move X8, [X19]
	147 Move W1, 1
	148 Move W2, W31
	149 Move W3, W31
	150 Move X8, [X8+184]
	151 Move X4, X31
	152 Move [X8+32], X0
	153 Move X0, [X24]
	154 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	155 Move X8, [X19]
	156 Move W1, 1
	157 Move W2, W31
	158 Move W3, W31
	159 Move X8, [X8+184]
	160 Move X4, X31
	161 Move [X8+40], X0
	162 Move X0, [X23]
	163 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	164 Move X8, [X19]
	165 Move W1, 1
	166 Move W2, W31
	167 Move W3, W31
	168 Move X8, [X8+184]
	169 Move X4, X31
	170 Move [X8+48], X0
	171 Move X0, [X22]
	172 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	173 Move X8, [X19]
	174 Move W1, 1
	175 Move W2, W31
	176 Move W3, W31
	177 Move X8, [X8+184]
	178 Move X4, X31
	179 Move [X8+56], X0
	180 Move X0, [X21]
	181 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	182 Move X8, [X19]
	183 Move W1, 1
	184 Move W2, W31
	185 Move W3, W31
	186 Move X8, [X8+184]
	187 Move X4, X31
	188 Move [X8+64], X0
	189 Move X8, 0x686000
	190 Move X8, [X8+1800]
	191 Move X0, [X8]
	192 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	193 Move X8, [X19]
	194 Move W1, 1
	195 Move W2, W31
	196 Move W3, W31
	197 Move X8, [X8+184]
	198 Move X4, X31
	199 Move [X8+72], X0
	200 Move X8, 0x686000
	201 Move X8, [X8+1768]
	202 Move X0, [X8]
	203 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	204 Move X8, [X19]
	205 Move W1, 1
	206 Move W2, W31
	207 Move W3, W31
	208 Move X8, [X8+184]
	209 Move X4, X31
	210 Move [X8+80], X0
	211 Move X8, 0x686000
	212 Move X8, [X8+1792]
	213 Move X0, [X8]
	214 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	215 Move X8, [X19]
	216 Move W1, 1
	217 Move W2, W31
	218 Move W3, W31
	219 Move X8, [X8+184]
	220 Move X4, X31
	221 Move [X8+88], X0
	222 Move X8, 0x686000
	223 Move X8, [X8+1760]
	224 Move X0, [X8]
	225 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	226 Move X8, [X19]
	227 Move W1, 1
	228 Move W2, W31
	229 Move W3, W31
	230 Move X8, [X8+184]
	231 Move X4, X31
	232 Move [X8+96], X0
	233 Move X8, 0x686000
	234 Move X8, [X8+1784]
	235 Move X0, [X8]
	236 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	237 Move X8, [X19]
	238 Move W1, 1
	239 Move W2, W31
	240 Move W3, W31
	241 Move X8, [X8+184]
	242 Move X4, X31
	243 Move [X8+104], X0
	244 Move X8, 0x686000
	245 Move X8, [X8+1744]
	246 Move X0, [X8]
	247 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	248 Move X8, [X19]
	249 Move W1, 1
	250 Move W2, W31
	251 Move W3, W31
	252 Move X8, [X8+184]
	253 Move X4, X31
	254 Move [X8+112], X0
	255 Move X8, 0x686000
	256 Move X8, [X8+1752]
	257 Move X0, [X8]
	258 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	259 Move X8, [X19]
	260 Move W1, 1
	261 Move W2, W31
	262 Move W3, W31
	263 Move X8, [X8+184]
	264 Move X4, X31
	265 Move [X8+120], X0
	266 Move X8, 0x686000
	267 Move X8, [X8+1776]
	268 Move X0, [X8]
	269 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	270 Move X8, [X19]
	271 Move W1, 1
	272 Move W2, W31
	273 Move W3, W31
	274 Move X8, [X8+184]
	275 Move X4, X31
	276 Move [X8+128], X0
	277 Move X8, 0x686000
	278 Move X8, [X8+1736]
	279 Move X0, [X8]
	280 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	281 Move X8, [X19]
	282 Move W1, 1
	283 Move W2, W31
	284 Move W3, W31
	285 Move X8, [X8+184]
	286 Move X4, X31
	287 Move [X8+136], X0
	288 Move X8, 0x686000
	289 Move X8, [X8+1808]
	290 Move X0, [X8]
	291 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	292 Move X8, [X19]
	293 Move W1, 1
	294 Move W2, W31
	295 Move W3, W31
	296 Move X8, [X8+184]
	297 Move X4, X31
	298 Move [X8+144], X0
	299 Move X8, 0x686000
	300 Move X8, [X8+1728]
	301 Move X0, [X8]
	302 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	303 Move X8, [X19]
	304 Move X20, [X31+80]
	305 Move X19, [X31+88]
	306 Move X22, [X31+64]
	307 Move X21, [X31+72]
	308 Move X24, [X31+48]
	309 Move X23, [X31+56]
	310 Move X8, [X8+184]
	311 Move X26, [X31+32]
	312 Move X25, [X31+40]
	313 Move X28, [X31+16]
	314 Move X27, [X31+24]
	315 Move [X8+152], X0
	316 Move X29, [X31+96]
	317 Move X30, [X31+104]
	318 Return 

