Type: TMPro.MaterialReference

Method: System.Void .ctor(System.Int32 index, TMPro.TMP_FontAsset fontAsset, TMPro.TMP_SpriteAsset spriteAsset, UnityEngine.Material material, System.Single padding)

Disassembly:
	0x03ACC488 B 0x3C13100
	0x03ACC48C BL 0x1C16F20
	0x03ACC490 STP X30, X21, [X31 - 0x20]!
	0x03ACC494 STP X20, X19, [X31 + 0x10]
	0x03ACC498 ADRP X21, 0x916000
	0x03ACC49C ADRP X20, 0x627000
	0x03ACC4A0 LDRB W8, [X21 + 0x4CC]
	0x03ACC4A4 LDR X20, [X20 + 0x598]
	0x03ACC4A8 MOV X19, X0
	0x03ACC4AC TBNZ X8, 0x0, 0x3ACC4D0
	0x03ACC4B0 ADRP X0, 0x653000
	0x03ACC4B4 LDR X0, [X0 + 0x5A0]
	0x03ACC4B8 BL 0x1C16CF4
	0x03ACC4BC ADRP X0, 0x627000
	0x03ACC4C0 LDR X0, [X0 + 0x598]
	0x03ACC4C4 BL 0x1C16CF4
	0x03ACC4C8 MOVZ W8, 0x1
	0x03ACC4CC STRB W8, [X21 + 0x4CC]
	0x03ACC4D0 LDR X0, [X20]
	0x03ACC4D4 LDR X20, [X19 + 0x6E8]
	0x03ACC4D8 LDR W8, [X0 + 0xE0]
	0x03ACC4DC CBNZ W8, 0x3ACC4E4
	0x03ACC4E0 BL 0x1C16DFC
	0x03ACC4E4 MOV X0, X20
	0x03ACC4E8 MOV X1, X31
	0x03ACC4EC MOV X2, X31
	0x03ACC4F0 BL 0x3C3883C
	0x03ACC4F4 TBZ X0, 0x0, 0x3ACC514
	0x03ACC4F8 ADRP X8, 0x653000
	0x03ACC4FC LDR X8, [X8 + 0x5A0]
	0x03ACC500 MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X0], W1
	007 Move [X0+8], X2
	008 Move [X0+16], X3
	009 Move [X0+24], X4
	010 Compare X4, 0
	011 JumpIfEqual {39}
	012 Move X19, X0
	013 Move X0, X4
	014 Move X1, X31
	015 Move V8, V0
	016 Move X20, X2
	017 Call Object.GetInstanceID, X0
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move W21, W0
	021 Move X0, [X20+32]
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X1, X31
	025 Call Object.GetInstanceID, X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move [X19+33], W31
	029 Move [X19+40], X31
	030 Move [X19+48], S8
	031 Move [X19+32], W8
	032 Move [X19+52], W31
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X30, [X31+16]
	036 Move X21, [X31+24]
	037 Move V8, [X31+48]
	038 Return 
	039 Call 0x1C17F20

Method: System.Boolean Contains(TMPro.MaterialReference[] materialReferences, TMPro.TMP_FontAsset fontAsset)

Disassembly:
	0x03ACC504 LDR X1, [X8]
	0x03ACC508 BL 0x21A3894
	0x03ACC50C STR X0, [X19 + 0x6E8]
	0x03ACC510 B 0x3ACC518
	0x03ACC514 LDR X0, [X19 + 0x6E8]
	0x03ACC518 LDP X20, X19, [X31 + 0x10]
	0x03ACC51C LDP X30, X21, [X31], #0x20
	0x03ACC520 RET
	0x03ACC524 STR X30, [X31 - 0x30]!
	0x03ACC528 STP X22, X21, [X31 + 0x10]
	0x03ACC52C STP X20, X19, [X31 + 0x20]
	0x03ACC530 ADRP X22, 0x916000
	0x03ACC534 ADRP X21, 0x627000
	0x03ACC538 LDRB W8, [X22 + 0x4C7]
	0x03ACC53C LDR X21, [X21 + 0x598]
	0x03ACC540 MOV W19, W1
	0x03ACC544 MOV X20, X0
	0x03ACC548 TBNZ X8, 0x0, 0x3ACC560
	0x03ACC54C ADRP X0, 0x627000
	0x03ACC550 LDR X0, [X0 + 0x598]
	0x03ACC554 BL 0x1C16CF4
	0x03ACC558 MOVZ W8, 0x1
	0x03ACC55C STRB W8, [X22 + 0x4C7]
	0x03ACC560 MOV X0, X20
	0x03ACC564 BL 0x3ACC490
	0x03ACC568 LDR X8, [X21]
	0x03ACC56C MOV X21, X0
	0x03ACC570 LDR W9, [X8 + 0xE0]
	0x03ACC574 CBNZ W9, 0x3ACC580
	0x03ACC578 MOV X0, X8
	0x03ACC57C BL 0x1C16DFC
	0x03ACC580 MOV X0, X21
	0x03ACC584 MOV X1, X31
	0x03ACC588 MOV X2, X31
	0x03ACC58C BL 0x3C3883C
	0x03ACC590 TBZ X0, 0x0, 0x3ACC5A4
	0x03ACC594 LDP X20, X19, [X31 + 0x20]
	0x03ACC598 LDP X22, X21, [X31 + 0x10]
	0x03ACC59C LDR X30, [X31], #0x30
	0x03ACC5A0 RET
	0x03ACC5A4 LDR X0, [X20 + 0x6E8]
	0x03ACC5A8 CBZ X0, 0x3ACC5D4
	0x03ACC5AC MOV W1, W19
	0x03ACC5B0 MOV X2, X31
	0x03ACC5B4 BL 0x3C1313C
	0x03ACC5B8 STR W19, [X20 + 0x6CC]
	0x03ACC5BC MOV X0, X20
	0x03ACC5C0 MOV W1, W19
	0x03ACC5C4 LDP X20, X19, [X31 + 0x20]
	0x03ACC5C8 LDP X22, X21, [X31 + 0x10]
	0x03ACC5CC LDR X30, [X31], #0x30
	0x03ACC5D0 B 0x3ACC5D8
	0x03ACC5D4 BL 0x1C16F20
	0x03ACC5D8 STR X30, [X31 - 0x40]!
	0x03ACC5DC STP X24, X23, [X31 + 0x10]
	0x03ACC5E0 STP X22, X21, [X31 + 0x20]
	0x03ACC5E4 STP X20, X19, [X31 + 0x30]
	0x03ACC5E8 ADRP X21, 0x916000
	0x03ACC5EC LDRB W8, [X21 + 0x4F8]
	0x03ACC5F0 MOV W19, W1
	0x03ACC5F4 MOV X20, X0
	0x03ACC5F8 TBNZ X8, 0x0, 0x3ACC610
	0x03ACC5FC ADRP X0, 0x627000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x917000
	010 Move W8, [X21+1211]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x628000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1211], W8
	022 Compare X20, 0
	023 JumpIfEqual {76}
	024 Move X0, X20
	025 Move X1, X31
	026 Call Object.GetInstanceID, X0
	027 Compare X19, 0
	028 JumpIfEqual {76}
	029 Move W8, [X19+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X23, 0x628000
	032 Move X23, [X23+1432]
	033 Move W20, W0
	034 Move W22, W31
	035 Move W24, 56
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction SMADDL not yet implemented."
	038 Add X25, X25, 40
	039 Move X21, [X25]
	040 Move X0, [X23]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {64}
	053 Move W8, [X19+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X25]
	056 Compare X0, 0
	057 JumpIfEqual {76}
	058 Move X1, X31
	059 Call Object.GetInstanceID, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X19+24]
	062 Add W22, W22, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W0, W31
	065 Move W0, 1
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Move X25, [X31+72]
	074 Return X0
	075 Call 0x1C17F28
	076 Call 0x1C17F20

Method: System.Int32 AddMaterialReference(UnityEngine.Material material, TMPro.TMP_FontAsset fontAsset, ref TMPro.MaterialReference[] materialReferences, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> materialReferenceIndexLookup)

Disassembly:
	0x03ACC600 LDR X0, [X0 + 0x598]
	0x03ACC604 BL 0x1C16CF4
	0x03ACC608 MOVZ W8, 0x1
	0x03ACC60C STRB W8, [X21 + 0x4F8]
	0x03ACC610 LDR X8, [X20 + 0x708]
	0x03ACC614 CBZ X8, 0x3ACC6C8
	0x03ACC618 ADRP X23, 0x627000
	0x03ACC61C LDR X23, [X23 + 0x598]
	0x03ACC620 MOVZ W24, 0x5
	0x03ACC624 LDR W9, [X8 + 0x18]
	0x03ACC628 SUB X10, X24, 0x4
	0x03ACC62C CMP X10, W9, SXTW
	0x03ACC630 B.GE 0x3ACC6CC
	0x03ACC634 CMP X10, X9
	0x03ACC638 B.CS 0x3ACC6E0
	0x03ACC63C LDR X0, [X23]
	0x03ACC640 LDR X21, [X8, X24, LSL #3]
	0x03ACC644 LDR W9, [X0 + 0xE0]
	0x03ACC648 CBNZ W9, 0x3ACC650
	0x03ACC64C BL 0x1C16DFC
	0x03ACC650 MOV X0, X21
	0x03ACC654 MOV X1, X31
	0x03ACC658 MOV X2, X31
	0x03ACC65C BL 0x3C354F8
	0x03ACC660 TBZ X0, 0x0, 0x3ACC6BC
	0x03ACC664 CBZ X21, 0x3ACC6C8
	0x03ACC668 MOV X0, X21
	0x03ACC66C MOV X1, X31
	0x03ACC670 BL 0x3B19904
	0x03ACC674 LDR X8, [X23]
	0x03ACC678 MOV X22, X0
	0x03ACC67C LDR W9, [X8 + 0xE0]
	0x03ACC680 CBNZ W9, 0x3ACC68C
	0x03ACC684 MOV X0, X8
	0x03ACC688 BL 0x1C16DFC
	0x03ACC68C MOV X0, X22
	0x03ACC690 MOV X1, X31
	0x03ACC694 MOV X2, X31
	0x03ACC698 BL 0x3C354F8
	0x03ACC69C TBZ X0, 0x0, 0x3ACC6BC
	0x03ACC6A0 MOV X0, X21
	0x03ACC6A4 MOV X1, X31
	0x03ACC6A8 BL 0x3B19904
	0x03ACC6AC CBZ X0, 0x3ACC6C8
	0x03ACC6B0 MOV W1, W19
	0x03ACC6B4 MOV X2, X31
	0x03ACC6B8 BL 0x3C1313C
	0x03ACC6BC LDR X8, [X20 + 0x708]
	0x03ACC6C0 ADD X24, X24, 0x1
	0x03ACC6C4 CBNZ X8, 0x3ACC624
	0x03ACC6C8 BL 0x1C16F20
	0x03ACC6CC LDP X20, X19, [X31 + 0x30]
	0x03ACC6D0 LDP X22, X21, [X31 + 0x20]
	0x03ACC6D4 LDP X24, X23, [X31 + 0x10]
	0x03ACC6D8 LDR X30, [X31], #0x40
	0x03ACC6DC RET
	0x03ACC6E0 BL 0x1C16F28
	0x03ACC6E4 STP X30, X21, [X31 - 0x20]!
	0x03ACC6E8 STP X20, X19, [X31 + 0x10]
	0x03ACC6EC ADRP X21, 0x916000
	0x03ACC6F0 ADRP X20, 0x627000
	0x03ACC6F4 LDRB W8, [X21 + 0x4C8]
	0x03ACC6F8 LDR X20, [X20 + 0x598]
	0x03ACC6FC MOV X19, X0
	0x03ACC700 TBNZ X8, 0x0, 0x3ACC718
	0x03ACC704 ADRP X0, 0x627000
	0x03ACC708 LDR X0, [X0 + 0x598]
	0x03ACC70C BL 0x1C16CF4
	0x03ACC710 MOVZ W8, 0x1
	0x03ACC714 STRB W8, [X21 + 0x4C8]
	0x03ACC718 MOV X0, X19
	0x03ACC71C BL 0x3ACC490
	0x03ACC720 LDR X8, [X20]
	0x03ACC724 MOV X20, X0
	0x03ACC728 LDR W9, [X8 + 0xE0]
	0x03ACC72C CBNZ W9, 0x3ACC738
	0x03ACC730 MOV X0, X8
	0x03ACC734 BL 0x1C16DFC
	0x03ACC738 MOV X0, X20
	0x03ACC73C MOV X1, X31
	0x03ACC740 MOV X2, X31
	0x03ACC744 BL 0x3C3883C
	0x03ACC748 TBZ X0, 0x0, 0x3ACC75C
	0x03ACC74C LDP X20, X19, [X31 + 0x10]
	0x03ACC750 MOV W0, W31
	0x03ACC754 LDP X30, X21, [X31], #0x20
	0x03ACC758 RET
	0x03ACC75C LDR X0, [X19 + 0x6E8]
	0x03ACC760 CBZ X0, 0x3ACC774
	0x03ACC764 LDP X20, X19, [X31 + 0x10]
	0x03ACC768 MOV X1, X31
	0x03ACC76C LDP X30, X21, [X31], #0x20
	0x03ACC770 B 0x3C13180
	0x03ACC774 BL 0x1C16F20
	0x03ACC778 STR X30, [X31 - 0x30]!
	0x03ACC77C STP X22, X21, [X31 + 0x10]
	0x03ACC780 STP X20, X19, [X31 + 0x20]
	0x03ACC784 ADRP X22, 0x916000
	0x03ACC788 ADRP X21, 0x627000
	0x03ACC78C LDRB W8, [X22 + 0x4C9]
	0x03ACC790 LDR X21, [X21 + 0x598]
	0x03ACC794 MOV W19, W1
	0x03ACC798 MOV X20, X0
	0x03ACC79C TBNZ X8, 0x0, 0x3ACC7B4
	0x03ACC7A0 ADRP X0, 0x627000
	0x03ACC7A4 LDR X0, [X0 + 0x598]
	0x03ACC7A8 BL 0x1C16CF4
	0x03ACC7AC MOVZ W8, 0x1
	0x03ACC7B0 STRB W8, [X22 + 0x4C9]
	0x03ACC7B4 MOV X0, X20
	0x03ACC7B8 BL 0x3ACC490
	0x03ACC7BC LDR X8, [X21]
	0x03ACC7C0 MOV X21, X0
	0x03ACC7C4 LDR W9, [X8 + 0xE0]
	0x03ACC7C8 CBNZ W9, 0x3ACC7D4
	0x03ACC7CC MOV X0, X8
	0x03ACC7D0 BL 0x1C16DFC
	0x03ACC7D4 MOV X0, X21
	0x03ACC7D8 MOV X1, X31
	0x03ACC7DC MOV X2, X31
	0x03ACC7E0 BL 0x3C3883C
	0x03ACC7E4 TBZ X0, 0x0, 0x3ACC7F8
	0x03ACC7E8 LDP X20, X19, [X31 + 0x20]
	0x03ACC7EC LDP X22, X21, [X31 + 0x10]
	0x03ACC7F0 LDR X30, [X31], #0x30
	0x03ACC7F4 RET
	0x03ACC7F8 LDR X0, [X20 + 0x6E8]
	0x03ACC7FC CBZ X0, 0x3ACC828
	0x03ACC800 MOV W1, W19
	0x03ACC804 MOV X2, X31
	0x03ACC808 BL 0x3C131BC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x917000
	009 Move W8, [X22+1212]
	010 Move X23, X3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x68D000
	019 Move X0, [X0+1344]
	020 Call 0x1C17CF4
	021 Move X0, 0x632000
	022 Move X0, [X0+2160]
	023 Call 0x1C17CF4
	024 Move X0, 0x683000
	025 Move X0, [X0+3448]
	026 Call 0x1C17CF4
	027 Move X0, 0x652000
	028 Move X0, [X0+2224]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1212], W8
	032 Move [X31+12], W31
	033 Compare X21, 0
	034 JumpIfEqual {145}
	035 Move X0, X21
	036 Move X1, X31
	037 Call Object.GetInstanceID, X0
	038 Compare X23, 0
	039 JumpIfEqual {145}
	040 Move X8, 0x632000
	041 Move X8, [X8+2160]
	042 Move W22, W0
	043 Add X2, X31, 12
	044 Move X0, X23
	045 Move X3, [X8]
	046 Move W1, W22
	047 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {136}
	052 Move X8, 0x683000
	053 Move X8, [X8+3448]
	054 Move X0, X23
	055 Move X1, [X8]
	056 Call Dictionary`2<Int32, Int32>.get_Count, X0
	057 Move X8, 0x652000
	058 Move X8, [X8+2224]
	059 Move W2, W0
	060 Move [X31+12], W0
	061 Move X0, X23
	062 Move X3, [X8]
	063 Move W1, W22
	064 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	065 Move X8, [X19]
	066 Compare X8, 0
	067 JumpIfEqual {145}
	068 Move W9, [X31+12]
	069 Move W10, [X8+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W0, W9, 1
	072 Move X1, X31
	073 Call Mathf.NextPowerOfTwo, X0
	074 Move X8, 0x68D000
	075 Move X8, [X8+1344]
	076 Move W1, W0
	077 Move X0, X19
	078 Move X2, [X8]
	079 Call Array.Resize, X0, X1
	080 Move X8, [X19]
	081 Compare X8, 0
	082 JumpIfEqual {145}
	083 Move W9, [X31+12]
	084 Move W10, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W11, 56
	087 NotImplemented "Instruction SMADDL not yet implemented."
	088 Move [X11+32], W9
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W9, 56
	092 NotImplemented "Instruction MADD not yet implemented."
	093 Move [X8+40], X20
	094 Move X8, [X19]
	095 Compare X8, 0
	096 JumpIfEqual {145}
	097 Move W9, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W9, 56
	100 NotImplemented "Instruction MADD not yet implemented."
	101 Move [X8+48], X31
	102 Move X8, [X19]
	103 Compare X8, 0
	104 JumpIfEqual {145}
	105 Move W9, [X8+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W9, 56
	108 NotImplemented "Instruction MADD not yet implemented."
	109 Move [X8+56], X21
	110 Move X21, [X19]
	111 Compare X21, 0
	112 JumpIfEqual {145}
	113 Compare X20, 0
	114 JumpIfEqual {145}
	115 Move X0, [X20+32]
	116 Compare X0, 0
	117 JumpIfEqual {145}
	118 Move X1, X31
	119 Call Object.GetInstanceID, X0
	120 Move W8, [X21+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W8, 56
	124 NotImplemented "Instruction CSET not yet implemented."
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Move [X8+64], W9
	127 Move X8, [X19]
	128 Compare X8, 0
	129 JumpIfEqual {145}
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Move W10, [X8+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W10, 56
	134 NotImplemented "Instruction MADD not yet implemented."
	135 Move [X8+84], W31
	136 Move W0, [X31+12]
	137 Move X20, [X31+48]
	138 Move X19, [X31+56]
	139 Move X22, [X31+32]
	140 Move X21, [X31+40]
	141 Move X30, [X31+16]
	142 Move X23, [X31+24]
	143 Add X31, X31, 64
	144 Return X0
	145 Call 0x1C17F20
	146 Call 0x1C17F28

Method: System.Int32 AddMaterialReference(UnityEngine.Material material, TMPro.TMP_SpriteAsset spriteAsset, ref TMPro.MaterialReference[] materialReferences, System.Collections.Generic.Dictionary`2<System.Int32, System.Int32> materialReferenceIndexLookup)

Disassembly:
	0x03ACC80C STR W19, [X20 + 0x6D0]
	0x03ACC810 MOV X0, X20
	0x03ACC814 MOV W1, W19
	0x03ACC818 LDP X20, X19, [X31 + 0x20]
	0x03ACC81C LDP X22, X21, [X31 + 0x10]
	0x03ACC820 LDR X30, [X31], #0x30
	0x03ACC824 B 0x3ACC82C
	0x03ACC828 BL 0x1C16F20
	0x03ACC82C STR X30, [X31 - 0x40]!
	0x03ACC830 STP X24, X23, [X31 + 0x10]
	0x03ACC834 STP X22, X21, [X31 + 0x20]
	0x03ACC838 STP X20, X19, [X31 + 0x30]
	0x03ACC83C ADRP X21, 0x916000
	0x03ACC840 LDRB W8, [X21 + 0x4F9]
	0x03ACC844 MOV W19, W1
	0x03ACC848 MOV X20, X0
	0x03ACC84C TBNZ X8, 0x0, 0x3ACC864
	0x03ACC850 ADRP X0, 0x627000
	0x03ACC854 LDR X0, [X0 + 0x598]
	0x03ACC858 BL 0x1C16CF4
	0x03ACC85C MOVZ W8, 0x1
	0x03ACC860 STRB W8, [X21 + 0x4F9]
	0x03ACC864 LDR X8, [X20 + 0x708]
	0x03ACC868 CBZ X8, 0x3ACC91C
	0x03ACC86C ADRP X23, 0x627000
	0x03ACC870 LDR X23, [X23 + 0x598]
	0x03ACC874 MOVZ W24, 0x5
	0x03ACC878 LDR W9, [X8 + 0x18]
	0x03ACC87C SUB X10, X24, 0x4
	0x03ACC880 CMP X10, W9, SXTW
	0x03ACC884 B.GE 0x3ACC920
	0x03ACC888 CMP X10, X9
	0x03ACC88C B.CS 0x3ACC934
	0x03ACC890 LDR X0, [X23]
	0x03ACC894 LDR X21, [X8, X24, LSL #3]
	0x03ACC898 LDR W9, [X0 + 0xE0]
	0x03ACC89C CBNZ W9, 0x3ACC8A4
	0x03ACC8A0 BL 0x1C16DFC
	0x03ACC8A4 MOV X0, X21
	0x03ACC8A8 MOV X1, X31
	0x03ACC8AC MOV X2, X31
	0x03ACC8B0 BL 0x3C354F8
	0x03ACC8B4 TBZ X0, 0x0, 0x3ACC910
	0x03ACC8B8 CBZ X21, 0x3ACC91C
	0x03ACC8BC MOV X0, X21
	0x03ACC8C0 MOV X1, X31
	0x03ACC8C4 BL 0x3B19904
	0x03ACC8C8 LDR X8, [X23]
	0x03ACC8CC MOV X22, X0
	0x03ACC8D0 LDR W9, [X8 + 0xE0]
	0x03ACC8D4 CBNZ W9, 0x3ACC8E0
	0x03ACC8D8 MOV X0, X8
	0x03ACC8DC BL 0x1C16DFC
	0x03ACC8E0 MOV X0, X22
	0x03ACC8E4 MOV X1, X31
	0x03ACC8E8 MOV X2, X31
	0x03ACC8EC BL 0x3C354F8
	0x03ACC8F0 TBZ X0, 0x0, 0x3ACC910
	0x03ACC8F4 MOV X0, X21
	0x03ACC8F8 MOV X1, X31
	0x03ACC8FC BL 0x3B19904
	0x03ACC900 CBZ X0, 0x3ACC91C
	0x03ACC904 MOV W1, W19
	0x03ACC908 MOV X2, X31
	0x03ACC90C BL 0x3C131BC
	0x03ACC910 LDR X8, [X20 + 0x708]
	0x03ACC914 ADD X24, X24, 0x1
	0x03ACC918 CBNZ X8, 0x3ACC878
	0x03ACC91C BL 0x1C16F20
	0x03ACC920 LDP X20, X19, [X31 + 0x30]
	0x03ACC924 LDP X22, X21, [X31 + 0x20]
	0x03ACC928 LDP X24, X23, [X31 + 0x10]
	0x03ACC92C LDR X30, [X31], #0x40
	0x03ACC930 RET
	0x03ACC934 BL 0x1C16F28
	0x03ACC938 LDRB W0, [X0 + 0x399]
	0x03ACC93C RET
	0x03ACC940 STR X30, [X31 - 0x30]!
	0x03ACC944 STP X22, X21, [X31 + 0x10]
	0x03ACC948 STP X20, X19, [X31 + 0x20]
	0x03ACC94C ADRP X22, 0x916000
	0x03ACC950 LDRB W8, [X22 + 0x4CA]
	0x03ACC954 MOV W20, W1
	0x03ACC958 MOV X19, X0
	0x03ACC95C AND W21, W1, 0x1
	0x03ACC960 TBNZ X8, 0x0, 0x3ACC978
	0x03ACC964 ADRP X0, 0x68C000
	0x03ACC968 LDR X0, [X0 + 0x568]
	0x03ACC96C BL 0x1C16CF4
	0x03ACC970 MOVZ W8, 0x1
	0x03ACC974 STRB W8, [X22 + 0x4CA]
	0x03ACC978 LDRB W8, [X19 + 0x399]
	0x03ACC97C CMP W8, W21
	0x03ACC980 B.EQ 0x3ACC9D0
	0x03ACC984 STRB W21, [X19 + 0x399]
	0x03ACC988 TBZ X20, 0x0, 0x3ACC9D0
	0x03ACC98C ADRP X8, 0x68C000
	0x03ACC990 LDR X8, [X8 + 0x568]
	0x03ACC994 LDR X0, [X8]
	0x03ACC998 LDR W8, [X0 + 0xE0]
	0x03ACC99C CBNZ W8, 0x3ACC9A4
	0x03ACC9A0 BL 0x1C16DFC
	0x03ACC9A4 MOV X0, X19
	0x03ACC9A8 MOV X1, X31
	0x03ACC9AC BL 0x3B203D0
	0x03ACC9B0 LDR X8, [X19]
	0x03ACC9B4 MOV X0, X19
	0x03ACC9B8 LDP X20, X19, [X31 + 0x20]
	0x03ACC9BC LDP X22, X21, [X31 + 0x10]
	0x03ACC9C0 LDR X2, [X8 + 0x2E8]
	0x03ACC9C4 LDR X1, [X8 + 0x2F0]
	0x03ACC9C8 LDR X30, [X31], #0x30
	0x03ACC9CC BR X2
	0x03ACC9D0 LDP X20, X19, [X31 + 0x20]
	0x03ACC9D4 LDP X22, X21, [X31 + 0x10]
	0x03ACC9D8 LDR X30, [X31], #0x30
	0x03ACC9DC RET
	0x03ACC9E0 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x917000
	009 Move W8, [X23+1213]
	010 Move X22, X3
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x68D000
	019 Move X0, [X0+1344]
	020 Call 0x1C17CF4
	021 Move X0, 0x632000
	022 Move X0, [X0+2160]
	023 Call 0x1C17CF4
	024 Move X0, 0x683000
	025 Move X0, [X0+3448]
	026 Call 0x1C17CF4
	027 Move X0, 0x652000
	028 Move X0, [X0+2224]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+1213], W8
	032 Move [X31+12], W31
	033 Compare X20, 0
	034 JumpIfEqual {130}
	035 Move X0, X20
	036 Move X1, X31
	037 Call Object.GetInstanceID, X0
	038 Compare X22, 0
	039 JumpIfEqual {130}
	040 Move X8, 0x632000
	041 Move X8, [X8+2160]
	042 Move W23, W0
	043 Add X2, X31, 12
	044 Move X0, X22
	045 Move X3, [X8]
	046 Move W1, W23
	047 Call Dictionary`2<Int32, Int32>.TryGetValue, X0, X1, X2
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {121}
	052 Move X8, 0x683000
	053 Move X8, [X8+3448]
	054 Move X0, X22
	055 Move X1, [X8]
	056 Call Dictionary`2<Int32, Int32>.get_Count, X0
	057 Move X8, 0x652000
	058 Move X8, [X8+2224]
	059 Move W2, W0
	060 Move [X31+12], W0
	061 Move X0, X22
	062 Move X3, [X8]
	063 Move W1, W23
	064 Call Dictionary`2<Int32, Int32>.set_Item, X0, X1, X2
	065 Move X9, [X19]
	066 Compare X9, 0
	067 JumpIfEqual {130}
	068 Move W8, [X31+12]
	069 Move W10, [X9+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W0, W8, 1
	072 Move X1, X31
	073 Call Mathf.NextPowerOfTwo, X0
	074 Move X8, 0x68D000
	075 Move X8, [X8+1344]
	076 Move W1, W0
	077 Move X0, X19
	078 Move X2, [X8]
	079 Call Array.Resize, X0, X1
	080 Move X9, [X19]
	081 Compare X9, 0
	082 JumpIfEqual {130}
	083 Move W8, [X31+12]
	084 Move W10, [X9+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W11, 56
	087 NotImplemented "Instruction SMADDL not yet implemented."
	088 Move [X11+32], W8
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X10, [X9+40]
	092 Move W11, 56
	093 NotImplemented "Instruction MADD not yet implemented."
	094 Move [X9+40], X10
	095 Move X9, [X19]
	096 Compare X9, 0
	097 JumpIfEqual {130}
	098 Move W10, [X9+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W10, 56
	101 NotImplemented "Instruction MADD not yet implemented."
	102 Move [X9+48], X21
	103 Move X9, [X19]
	104 Compare X9, 0
	105 JumpIfEqual {130}
	106 Move W10, [X9+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W10, 56
	109 NotImplemented "Instruction MADD not yet implemented."
	110 Move [X9+56], X20
	111 Move X9, [X19]
	112 Compare X9, 0
	113 JumpIfEqual {130}
	114 Move W10, [X9+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move W10, 56
	117 Move W11, 1
	118 NotImplemented "Instruction MADD not yet implemented."
	119 Move [X8+64], W11
	120 Move [X8+84], W31
	121 Move W0, [X31+12]
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X30, [X31+16]
	127 Move X23, [X31+24]
	128 Add X31, X31, 64
	129 Return X0
	130 Call 0x1C17F20
	131 Call 0x1C17F28

