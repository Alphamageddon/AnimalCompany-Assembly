Type: TMPro.FastAction`3

Method: System.Void Add(System.Action`3<A, B, C> rhs)

Disassembly:
	0x02D133E0 MOV X21, X0
	0x02D133E4 TBNZ X8, 0x0, 0x2D133FC
	0x02D133E8 ADRP X0, 0x140B000
	0x02D133EC LDR X0, [X0 + 0xD20]
	0x02D133F0 BL 0x1C16CF4
	0x02D133F4 MOVZ W8, 0x1
	0x02D133F8 STRB W8, [X22 + 0x79A]
	0x02D133FC CBZ X19, 0x2D13428
	0x02D13400 LDR X8, [X20 + 0x20]
	0x02D13404 LDR W2, [X19 + 0x9C]
	0x02D13408 MOV X0, X21
	0x02D1340C MOV X1, X19
	0x02D13410 LDR X8, [X8 + 0xC0]
	0x02D13414 LDP X20, X19, [X31 + 0x20]
	0x02D13418 LDP X22, X21, [X31 + 0x10]
	0x02D1341C LDR X3, [X8 + 0x88]
	0x02D13420 LDR X30, [X31], #0x30
	0x02D13424 B 0x2D1342C
	0x02D13428 BL 0x1C16F20
	0x02D1342C STP X30, X25, [X31 - 0x40]!
	0x02D13430 STP X24, X23, [X31 + 0x10]
	0x02D13434 STP X22, X21, [X31 + 0x20]
	0x02D13438 STP X20, X19, [X31 + 0x30]
	0x02D1343C ADRP X23, 0x16C8000
	0x02D13440 LDRB W8, [X23 + 0x79B]
	0x02D13444 MOV X19, X3
	0x02D13448 MOV W22, W2
	0x02D1344C MOV X21, X1
	0x02D13450 MOV X20, X0
	0x02D13454 TBNZ X8, 0x0, 0x2D1349C
	0x02D13458 ADRP X0, 0x1409000
	0x02D1345C LDR X0, [X0 + 0xE88]
	0x02D13460 BL 0x1C16CF4
	0x02D13464 ADRP X0, 0x140B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {47}
	009 Move X8, [X2+32]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X8, [X8+192]
	013 Move X2, [X8+24]
	014 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {24}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 
	024 Move X0, [X21+16]
	025 Compare X0, 0
	026 JumpIfEqual {47}
	027 Move X8, [X20+32]
	028 Move X21, [X21+24]
	029 Move X1, X19
	030 Move X8, [X8+192]
	031 Move X2, [X8+40]
	032 Call LinkedList`1<Object>.AddLast, X0, X1
	033 Compare X21, 0
	034 JumpIfEqual {47}
	035 Move X8, [X20+32]
	036 Move X1, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, X0
	040 Move X8, [X8+192]
	041 Move X0, X21
	042 Move X3, [X8+56]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	046 Return 
	047 Call 0x1C17F20

Method: System.Void Remove(System.Action`3<A, B, C> rhs)

Disassembly:
	0x02D13468 LDR X0, [X0 + 0xD28]
	0x02D1346C BL 0x1C16CF4
	0x02D13470 ADRP X0, 0x140B000
	0x02D13474 LDR X0, [X0 + 0xA0]
	0x02D13478 BL 0x1C16CF4
	0x02D1347C ADRP X0, 0x140B000
	0x02D13480 LDR X0, [X0 + 0xD30]
	0x02D13484 BL 0x1C16CF4
	0x02D13488 ADRP X0, 0x1409000
	0x02D1348C LDR X0, [X0 + 0xE50]
	0x02D13490 BL 0x1C16CF4
	0x02D13494 MOVZ W8, 0x1
	0x02D13498 STRB W8, [X23 + 0x79B]
	0x02D1349C LDRB W8, [X20 + 0x30]
	0x02D134A0 CBZ W8, 0x2D13630
	0x02D134A4 ADRP X8, 0x140B000
	0x02D134A8 LDR X8, [X8 + 0xA0]
	0x02D134AC STRB W31, [X20 + 0x30]
	0x02D134B0 LDR X23, [X20 + 0x18]
	0x02D134B4 LDR X0, [X8]
	0x02D134B8 BL 0x1C16F10
	0x02D134BC LDR X8, [X19 + 0x20]
	0x02D134C0 MOV X1, X20
	0x02D134C4 MOV X3, X31
	0x02D134C8 MOV X24, X0
	0x02D134CC LDR X8, [X8 + 0xC0]
	0x02D134D0 LDR X2, [X8 + 0x48]
	0x02D134D4 BL 0x2D0E824
	0x02D134D8 CBZ X23, 0x2D13670
	0x02D134DC ADRP X8, 0x140B000
	0x02D134E0 LDR X8, [X8 + 0xD28]
	0x02D134E4 ADRP X25, 0x140B000
	0x02D134E8 MOV X0, X23
	0x02D134EC MOV X1, X24

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X20, X0
	008 Move X0, [X0+24]
	009 Compare X0, 0
	010 JumpIfEqual {44}
	011 Move X8, [X2+32]
	012 Move X19, X2
	013 Add X2, X31, 8
	014 Move X21, X1
	015 Move X8, [X8+192]
	016 Move X3, [X8+64]
	017 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {38}
	022 Move X0, [X20+24]
	023 Compare X0, 0
	024 JumpIfEqual {44}
	025 Move X8, [X19+32]
	026 Move X1, X21
	027 Move X8, [X8+192]
	028 Move X2, [X8+80]
	029 Call Dictionary`2<Object, Object>.Remove, X0, X1
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {44}
	033 Move X8, [X19+32]
	034 Move X1, [X31+8]
	035 Move X8, [X8+192]
	036 Move X2, [X8+88]
	037 Call LinkedList`1<Object>.Remove, X0, X1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 Return 
	044 Call 0x1C17F20

Method: System.Void Call(A a, B b, C c)

Disassembly:
	0x02D134F0 LDR X3, [X8]
	0x02D134F4 LDR X25, [X25 + 0xD30]
	0x02D134F8 MOV W2, W31
	0x02D134FC BL 0x21A18B4
	0x02D13500 LDR X0, [X20 + 0x18]
	0x02D13504 MOV W1, W22
	0x02D13508 MOV X2, X31
	0x02D1350C BL 0x3DBAE34
	0x02D13510 LDR X1, [X25]
	0x02D13514 MOV X0, X21
	0x02D13518 BL 0x1C16E00
	0x02D1351C CBZ X0, 0x2D13568
	0x02D13520 LDR X0, [X20 + 0x18]
	0x02D13524 CBZ X0, 0x2D13670
	0x02D13528 MOV X1, X31
	0x02D1352C BL 0x3DEC0CC
	0x02D13530 ADRP X22, 0x1409000
	0x02D13534 LDR X22, [X22 + 0xE50]
	0x02D13538 MOV X21, X0
	0x02D1353C LDR X8, [X22]
	0x02D13540 LDR W9, [X8 + 0xE0]
	0x02D13544 CBNZ W9, 0x2D13554
	0x02D13548 MOV X0, X8
	0x02D1354C BL 0x1C16DFC
	0x02D13550 LDR X8, [X22]
	0x02D13554 LDR X8, [X8 + 0xB8]
	0x02D13558 MOV X0, X21
	0x02D1355C MOV X2, X31
	0x02D13560 LDR W1, [X8 + 0x8]
	0x02D13564 BL 0x3DBAC98
	0x02D13568 LDR X0, [X20 + 0x18]
	0x02D1356C CBZ X0, 0x2D13670

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {42}
	010 Move X23, [X8+16]
	011 Compare X23, 0
	012 JumpIfEqual {35}
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X8, [X23+40]
	018 Compare X8, 0
	019 JumpIfEqual {42}
	020 Move X9, [X8+24]
	021 Move X0, [X8+64]
	022 Move X4, [X8+40]
	023 Move X1, X22
	024 Move X2, X21
	025 Move X3, X20
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X19+32]
	028 Move X0, X23
	029 Move X8, [X8+192]
	030 Move X1, [X8+144]
	031 Call LinkedListNode`1<Object>.get_Next, X0
	032 Move X23, X0
	033 Compare X0, 0
	034 JumpIfNotEqual {17}
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02D13570 MOV X1, X31
	0x02D13574 BL 0x3DEC0CC
	0x02D13578 CBZ X0, 0x2D135CC
	0x02D1357C ADRP X8, 0x1409000
	0x02D13580 LDR X8, [X8 + 0xE88]
	0x02D13584 LDR X9, [X0]
	0x02D13588 LDR X8, [X8]
	0x02D1358C LDRB W11, [X9 + 0x130]
	0x02D13590 LDRB W10, [X8 + 0x130]
	0x02D13594 CMP W11, W10
	0x02D13598 B.CC 0x2D135CC
	0x02D1359C LDR X9, [X9 + 0xC8]
	0x02D135A0 ADD X9, X9, X10, 0x3, LSL
	0x02D135A4 LDUR X9, [X9 - 0x8]
	0x02D135A8 CMP X9, X8
	0x02D135AC B.NE 0x2D135CC
	0x02D135B0 MOV X1, X31
	0x02D135B4 BL 0x3DBBA8C
	0x02D135B8 CBZ X0, 0x2D135CC
	0x02D135BC LDR X8, [X0]
	0x02D135C0 MOV W1, W31
	0x02D135C4 LDP X9, X2, [X8 + 0x178]
	0x02D135C8 BLR X9
	0x02D135CC LDR X20, [X20 + 0x10]
	0x02D135D0 CBZ X20, 0x2D13670
	0x02D135D4 LDR X8, [X19 + 0x20]
	0x02D135D8 LDR X8, [X8 + 0xC0]
	0x02D135DC LDR X1, [X8]
	0x02D135E0 LDRB W8, [X1 + 0x135]
	0x02D135E4 TBNZ X8, 0x0, 0x2D135F4
	0x02D135E8 MOV X0, X1
	0x02D135EC BL 0x1C5C684
	0x02D135F0 MOV X1, X0
	0x02D135F4 LDR X8, [X20]
	0x02D135F8 LDRH W9, [X8 + 0x12E]
	0x02D135FC CBZ X9, 0x2D13620
	0x02D13600 LDR X10, [X8 + 0xB0]
	0x02D13604 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8+32]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+152]
	024 Call LinkedList`1<Object>..ctor, X0
	025 Move [X19+16], X21
	026 Move X8, [X20+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8+8]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Call 0x1C17F10
	036 Move X8, [X20+32]
	037 Move X20, X0
	038 Move X8, [X8+192]
	039 Move X1, [X8+160]
	040 Call Dictionary`2<Object, Object>..ctor, X0
	041 Move [X19+24], X20
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Object..ctor, X0
	049 Return 

