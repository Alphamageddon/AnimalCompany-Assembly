Type: TMPro.TMP_FontUtilities

Method: TMPro.TMP_FontAsset SearchForCharacter(TMPro.TMP_FontAsset font, System.UInt32 unicode, out TMPro.TMP_Character character)

Disassembly:
	0x03AEBD24 BL 0x1C16CF4
	0x03AEBD28 ADRP X0, 0x66D000
	0x03AEBD2C LDR X0, [X0 + 0x618]
	0x03AEBD30 BL 0x1C16CF4
	0x03AEBD34 MOVZ W8, 0x1
	0x03AEBD38 STRB W8, [X22 + 0x5CC]
	0x03AEBD3C STR X31, [X31 + 0x8]
	0x03AEBD40 CBZ X20, 0x3AEBE94
	0x03AEBD44 MOV X0, X20
	0x03AEBD48 MOV X1, X31
	0x03AEBD4C BL 0x3B17194
	0x03AEBD50 CBZ X0, 0x3AEBE94
	0x03AEBD54 ADRP X8, 0x66D000
	0x03AEBD58 LDR X8, [X8 + 0xFE0]
	0x03AEBD5C ADD X2, X31, 0x8
	0x03AEBD60 MOV W1, W19
	0x03AEBD64 LDR X3, [X8]
	0x03AEBD68 BL 0x2B10A7C
	0x03AEBD6C TBZ X0, 0x0, 0x3AEBD78
	0x03AEBD70 LDR X0, [X31 + 0x8]
	0x03AEBD74 B 0x3AEBE78
	0x03AEBD78 TBZ X21, 0x0, 0x3AEBE74
	0x03AEBD7C LDR X20, [X20 + 0xD8]
	0x03AEBD80 CBZ X20, 0x3AEBE74
	0x03AEBD84 LDR W24, [X20 + 0x18]
	0x03AEBD88 CMP W24, 0x1
	0x03AEBD8C B.LT 0x3AEBE74
	0x03AEBD90 ADRP X25, 0x66D000
	0x03AEBD94 ADRP X26, 0x608000
	0x03AEBD98 ADRP X27, 0x66D000
	0x03AEBD9C ADRP X28, 0x60A000
	0x03AEBDA0 LDR X25, [X25 + 0xFF0]
	0x03AEBDA4 LDR X26, [X26 + 0x598]
	0x03AEBDA8 LDR X27, [X27 + 0x618]
	0x03AEBDAC LDR X28, [X28 + 0x9D8]
	0x03AEBDB0 MOV W21, W31
	0x03AEBDB4 LDR X2, [X25]
	0x03AEBDB8 MOV X0, X20
	0x03AEBDBC MOV W1, W21
	0x03AEBDC0 BL 0x301BCCC
	0x03AEBDC4 LDR X8, [X26]
	0x03AEBDC8 MOV X22, X0
	0x03AEBDCC LDR W9, [X8 + 0xE0]
	0x03AEBDD0 CBNZ W9, 0x3AEBDDC
	0x03AEBDD4 MOV X0, X8
	0x03AEBDD8 BL 0x1C16DFC
	0x03AEBDDC MOV X0, X22
	0x03AEBDE0 MOV X1, X31
	0x03AEBDE4 MOV X2, X31
	0x03AEBDE8 BL 0x3C3883C
	0x03AEBDEC TBNZ X0, 0x0, 0x3AEBE68
	0x03AEBDF0 CBZ X22, 0x3AEBE94
	0x03AEBDF4 LDR W23, [X22 + 0x18]
	0x03AEBDF8 CBNZ W23, 0x3AEBE10
	0x03AEBDFC MOV X0, X22
	0x03AEBE00 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x8F8000
	008 Move X23, 0x66E000
	009 Move W8, [X22+1475]
	010 Move X23, [X23+4056]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x610000
	019 Move X0, [X0+2136]
	020 Call 0x1C17CF4
	021 Move X0, 0x60D000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move X0, 0x60A000
	025 Move X0, [X0+3632]
	026 Call 0x1C17CF4
	027 Move X0, 0x66E000
	028 Move X0, [X0+4056]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1475], W8
	032 Move X8, [X23]
	033 Move X8, [X8+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfNotEqual {54}
	037 Move X8, 0x60A000
	038 Move X8, [X8+3632]
	039 Move X0, [X8]
	040 Call 0x1C17F10
	041 Move X8, 0x60D000
	042 Move X8, [X8+2928]
	043 Move X22, X0
	044 Move X1, [X8]
	045 Call List`1<Int32>..ctor, X0
	046 Move X8, [X23]
	047 Move X8, [X8+184]
	048 Move [X8], X22
	049 Move X8, [X23]
	050 Move X8, [X8+184]
	051 Move X8, [X8]
	052 Compare X8, 0
	053 JumpIfEqual {67}
	054 Move W9, [X8+28]
	055 Move X0, X21
	056 Move W1, W20
	057 Move X2, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Add W9, W9, 1
	063 Move [X8+24], W31
	064 Move [X8+28], W9
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Call 0x1C17F20

Method: TMPro.TMP_FontAsset SearchForCharacter(System.Collections.Generic.List`1<TMPro.TMP_FontAsset> fonts, System.UInt32 unicode, out TMPro.TMP_Character character)

Disassembly:
	0x03AEC090 MOV X19, X0

ISIL:
No ISIL was generated
Method: TMPro.TMP_FontAsset SearchForCharacterInternal(TMPro.TMP_FontAsset font, System.UInt32 unicode, out TMPro.TMP_Character character)

Disassembly:
	0x03AEBE04 BL 0x3C385F8
	0x03AEBE08 MOV W23, W0
	0x03AEBE0C STR W0, [X22 + 0x18]
	0x03AEBE10 LDR X0, [X27]
	0x03AEBE14 LDR W8, [X0 + 0xE0]
	0x03AEBE18 CBNZ W8, 0x3AEBE24
	0x03AEBE1C BL 0x1C16DFC
	0x03AEBE20 LDR X0, [X27]
	0x03AEBE24 LDR X8, [X0 + 0xB8]
	0x03AEBE28 LDR X0, [X8 + 0x8]
	0x03AEBE2C CBZ X0, 0x3AEBE94
	0x03AEBE30 LDR X2, [X28]
	0x03AEBE34 MOV W1, W23
	0x03AEBE38 BL 0x2DAB03C
	0x03AEBE3C TBZ X0, 0x0, 0x3AEBE68
	0x03AEBE40 LDR X0, [X27]
	0x03AEBE44 LDR W8, [X0 + 0xE0]
	0x03AEBE48 CBNZ W8, 0x3AEBE50
	0x03AEBE4C BL 0x1C16DFC
	0x03AEBE50 MOVZ W2, 0x1
	0x03AEBE54 MOV W0, W19
	0x03AEBE58 MOV X1, X22
	0x03AEBE5C BL 0x3AEBCBC
	0x03AEBE60 STR X0, [X31 + 0x8]
	0x03AEBE64 CBNZ X0, 0x3AEBE78
	0x03AEBE68 ADD W21, W21, 0x1
	0x03AEBE6C CMP W24, W21
	0x03AEBE70 B.NE 0x3AEBDB4
	0x03AEBE74 MOV X0, X31
	0x03AEBE78 LDP X20, X19, [X31 + 0x50]
	0x03AEBE7C LDP X22, X21, [X31 + 0x40]
	0x03AEBE80 LDP X24, X23, [X31 + 0x30]
	0x03AEBE84 LDP X26, X25, [X31 + 0x20]
	0x03AEBE88 LDP X28, X27, [X31 + 0x10]
	0x03AEBE8C LDR X30, [X31], #0x60
	0x03AEBE90 RET
	0x03AEBE94 BL 0x1C16F20
	0x03AEBE98 LDR V0, [X0]
	0x03AEBE9C RET
	0x03AEBEA0 STR S0, [X0]
	0x03AEBEA4 RET
	0x03AEBEA8 LDR V0, [X0 + 0x4]
	0x03AEBEAC RET
	0x03AEBEB0 STR S0, [X0 + 0x4]
	0x03AEBEB4 RET
	0x03AEBEB8 LDR V0, [X0 + 0x8]
	0x03AEBEBC RET
	0x03AEBEC0 STR S0, [X0 + 0x8]
	0x03AEBEC4 RET
	0x03AEBEC8 LDR V0, [X0 + 0xC]
	0x03AEBECC RET
	0x03AEBED0 STR S0, [X0 + 0xC]
	0x03AEBED4 RET
	0x03AEBED8 STP S0, S1, [X0]
	0x03AEBEDC STP S2, S3, [X0 + 0x8]
	0x03AEBEE0 RET
	0x03AEBEE4 SUB X31, X31, 0x20
	0x03AEBEE8 STP X30, X19, [X31 + 0x10]
	0x03AEBEEC MOV X19, X0
	0x03AEBEF0 ADD X0, X31, 0x0
	0x03AEBEF4 MOV X1, X31
	0x03AEBEF8 STP S0, S1, [X31]
	0x03AEBEFC STP S2, S3, [X31 + 0x8]
	0x03AEBF00 BL 0x3C9E364
	0x03AEBF04 ADD X0, X31, 0x0
	0x03AEBF08 MOV X1, X31
	0x03AEBF0C STR S0, [X19]
	0x03AEBF10 BL 0x3C9E374
	0x03AEBF14 ADD X0, X31, 0x0
	0x03AEBF18 MOV X1, X31
	0x03AEBF1C STR S0, [X19 + 0x4]
	0x03AEBF20 BL 0x3C9E384
	0x03AEBF24 ADD X0, X31, 0x0
	0x03AEBF28 MOV X1, X31
	0x03AEBF2C STR S0, [X19 + 0x8]
	0x03AEBF30 BL 0x3C9E38C
	0x03AEBF34 STR S0, [X19 + 0xC]
	0x03AEBF38 LDP X30, X19, [X31 + 0x10]
	0x03AEBF3C ADD X31, X31, 0x20
	0x03AEBF40 RET
	0x03AEBF44 FADD S0, S0, S4
	0x03AEBF48 FADD S1, S1, S5
	0x03AEBF4C FADD S2, S2, S6
	0x03AEBF50 FADD S3, S3, S7
	0x03AEBF54 RET
	0x03AEBF58 LDR W0, [X0]
	0x03AEBF5C RET
	0x03AEBF60 STR W1, [X0]
	0x03AEBF64 RET
	0x03AEBF68 LDP S0, S1, [X0 + 0x4]
	0x03AEBF6C LDP S2, S3, [X0 + 0xC]
	0x03AEBF70 RET
	0x03AEBF74 STP S0, S1, [X0 + 0x4]
	0x03AEBF78 STP S2, S3, [X0 + 0xC]
	0x03AEBF7C RET
	0x03AEBF80 SUB X31, X31, 0x30
	0x03AEBF84 STR X30, [X31 + 0x10]
	0x03AEBF88 STP X20, X19, [X31 + 0x20]
	0x03AEBF8C MOV X19, X1
	0x03AEBF90 MOV X20, X0
	0x03AEBF94 MOV X0, X1
	0x03AEBF98 MOV X1, X31
	0x03AEBF9C BL 0x3C9E52C
	0x03AEBFA0 STR W0, [X20]
	0x03AEBFA4 MOV X0, X19
	0x03AEBFA8 MOV X1, X31
	0x03AEBFAC BL 0x3C9E534
	0x03AEBFB0 ADD X0, X31, 0x0
	0x03AEBFB4 STP X31, X31, [X31]
	0x03AEBFB8 BL 0x3AEBEE4
	0x03AEBFBC LDR V0, [X31]
	0x03AEBFC0 LDR X30, [X31 + 0x10]
	0x03AEBFC4 STUR V0, [X20 + 0x4]
	0x03AEBFC8 LDP X20, X19, [X31 + 0x20]
	0x03AEBFCC ADD X31, X31, 0x30
	0x03AEBFD0 RET
	0x03AEBFD4 LDR W9, [X0 + 0x20]
	0x03AEBFD8 LDR V0, [X0 + 0x1]
	0x03AEBFDC STR W9, [X8 + 0x10]
	0x03AEBFE0 STR V0, [X8]
	0x03AEBFE4 RET
	0x03AEBFE8 LDR W8, [X1 + 0x10]
	0x03AEBFEC LDR V0, [X1]
	0x03AEBFF0 STR W8, [X0 + 0x20]
	0x03AEBFF4 STR V0, [X0 + 0x1]
	0x03AEBFF8 RET
	0x03AEBFFC LDR W9, [X0 + 0x34]
	0x03AEC000 LDUR V0, [X0 + 0x24]
	0x03AEC004 STR W9, [X8 + 0x10]
	0x03AEC008 STR V0, [X8]
	0x03AEC00C RET
	0x03AEC010 LDR W8, [X1 + 0x10]
	0x03AEC014 LDR V0, [X1]
	0x03AEC018 STR W8, [X0 + 0x34]
	0x03AEC01C STUR V0, [X0 + 0x24]
	0x03AEC020 RET
	0x03AEC024 LDR W0, [X0 + 0x38]
	0x03AEC028 RET
	0x03AEC02C STR W1, [X0 + 0x38]
	0x03AEC030 RET
	0x03AEC034 ORR W8, W1, W2, 0x10
	0x03AEC038 STP W1, W2, [X0]
	0x03AEC03C STR W8, [X0 + 0x8]
	0x03AEC040 RET
	0x03AEC044 LDR X0, [X0 + 0x10]
	0x03AEC048 RET
	0x03AEC04C STR X1, [X0 + 0x10]
	0x03AEC050 RET
	0x03AEC054 STR X30, [X31 - 0x20]!
	0x03AEC058 STP X20, X19, [X31 + 0x10]
	0x03AEC05C ADRP X19, 0x8F6000
	0x03AEC060 ADRP X20, 0x66C000
	0x03AEC064 LDRB W8, [X19 + 0x5CF]
	0x03AEC068 LDR X20, [X20 + 0xDF8]
	0x03AEC06C TBNZ X8, 0x0, 0x3AEC084
	0x03AEC070 ADRP X0, 0x66C000
	0x03AEC074 LDR X0, [X0 + 0xDF8]
	0x03AEC078 BL 0x1C16CF4
	0x03AEC07C MOVZ W8, 0x1
	0x03AEC080 STRB W8, [X19 + 0x5CF]
	0x03AEC084 LDR X0, [X20]
	0x03AEC088 BL 0x1C16F10
	0x03AEC08C MOV X1, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x8F8000
	014 Move X25, 0x609000
	015 Move W8, [X22+1476]
	016 Move X25, [X25+1432]
	017 Move X19, X2
	018 Move W21, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x66E000
	025 Move X0, [X0+3400]
	026 Call 0x1C17CF4
	027 Move X0, 0x60A000
	028 Move X0, [X0+3600]
	029 Call 0x1C17CF4
	030 Move X0, 0x60D000
	031 Move X0, [X0+2920]
	032 Call 0x1C17CF4
	033 Move X0, 0x66E000
	034 Move X0, [X0+1552]
	035 Call 0x1C17CF4
	036 Move X0, 0x66E000
	037 Move X0, [X0+3144]
	038 Call 0x1C17CF4
	039 Move X0, 0x609000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x66E000
	043 Move X0, [X0+4056]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1476], W8
	047 Move [X19], X31
	048 Move X0, [X25]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Equality, X0, X1
	057 Move X23, X31
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {187}
	062 Compare X20, 0
	063 JumpIfEqual {201}
	064 Move X0, [X20+200]
	065 Compare X0, 0
	066 JumpIfNotEqual {72}
	067 Move X0, X20
	068 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	069 Move X0, [X20+200]
	070 Compare X0, 0
	071 JumpIfEqual {201}
	072 Move X8, 0x66E000
	073 Move X8, [X8+3400]
	074 Move W1, W21
	075 Move X2, X19
	076 Move X3, [X8]
	077 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {83}
	082 Move X23, X20
	083 Move X0, [X20+312]
	084 Compare X0, 0
	085 JumpIfEqual {186}
	086 Move W8, [X0+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X26, 0x66E000
	089 Move X27, 0x66E000
	090 Move X28, 0x60D000
	091 Move X29, 0x60A000
	092 Move X26, [X26+3144]
	093 Move X27, [X27+4056]
	094 Move X28, [X28+2920]
	095 Move X29, [X29+3600]
	096 Move W22, W31
	097 Move X8, [X19]
	098 Compare X8, 0
	099 JumpIfNotEqual {186}
	100 Move X2, [X26]
	101 Move W1, W22
	102 Call List`1<Object>.get_Item, X0, X1
	103 Move X8, [X25]
	104 Move X23, X0
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X0, X23
	111 Move X1, X31
	112 Move X2, X31
	113 Call Object.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {180}
	118 Compare X23, 0
	119 JumpIfEqual {201}
	120 Move X0, X23
	121 Move X1, X31
	122 Call Object.GetInstanceID, X0
	123 Move X8, [X27]
	124 Move X8, [X8+184]
	125 Move X8, [X8]
	126 Compare X8, 0
	127 JumpIfEqual {201}
	128 Move X2, [X28]
	129 Move W24, W0
	130 Move X0, X8
	131 Move W1, W24
	132 Call List`1<Int32>.Contains, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {180}
	137 Move X8, [X27]
	138 Move X8, [X8+184]
	139 Move X0, [X8]
	140 Compare X0, 0
	141 JumpIfEqual {201}
	142 Move W10, [X0+28]
	143 Move X8, [X0+16]
	144 Move X9, [X29]
	145 Add W10, W10, 1
	146 Move [X0+28], W10
	147 Compare X8, 0
	148 JumpIfEqual {201}
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Move W11, [X8+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add W9, W10, 1
	153 Add X8, X8, X10
	154 Move [X0+24], W9
	155 Move [X8+32], W24
	156 Move X8, [X9+32]
	157 Move W1, W24
	158 Move X8, [X8+192]
	159 Move X2, [X8+112]
	160 Call List`1<Int32>.AddWithResize, X0, X1
	161 Move X0, X23
	162 Move W1, W21
	163 Move X2, X19
	164 Call TMP_FontUtilities.SearchForCharacterInternal, X0, X1, X2
	165 Move X8, [X25]
	166 Move X23, X0
	167 Move W9, [X8+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {172}
	170 Move X0, X8
	171 Call 0x1C17DFC
	172 Move X0, X23
	173 Move X1, X31
	174 Move X2, X31
	175 Call Object.op_Inequality, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {187}
	180 Move X0, [X20+312]
	181 Compare X0, 0
	182 JumpIfEqual {201}
	183 Move W8, [X0+24]
	184 Add W22, W22, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X23, X31
	187 Move X0, X23
	188 Move X20, [X31+80]
	189 Move X19, [X31+88]
	190 Move X22, [X31+64]
	191 Move X21, [X31+72]
	192 Move X24, [X31+48]
	193 Move X23, [X31+56]
	194 Move X26, [X31+32]
	195 Move X25, [X31+40]
	196 Move X28, [X31+16]
	197 Move X27, [X31+24]
	198 Move X29, [X31+96]
	199 Move X30, [X31+104]
	200 Return X0
	201 Call 0x1C17F20

Method: TMPro.TMP_FontAsset SearchForCharacterInternal(System.Collections.Generic.List`1<TMPro.TMP_FontAsset> fonts, System.UInt32 unicode, out TMPro.TMP_Character character)

Disassembly:
	0x03AEC094 BL 0x33BDD8C
	0x03AEC098 LDR X8, [X20]
	0x03AEC09C LDR X8, [X8 + 0xB8]
	0x03AEC0A0 STR X19, [X8]
	0x03AEC0A4 LDP X20, X19, [X31 + 0x10]
	0x03AEC0A8 LDR X30, [X31], #0x20
	0x03AEC0AC RET
	0x03AEC0B0 MOV X1, X31
	0x03AEC0B4 B 0x33BDD8C
	0x03AEC0B8 STR X30, [X31 - 0x10]!
	0x03AEC0BC CBZ X1, 0x3AEC0CC
	0x03AEC0C0 LDR W0, [X1 + 0x10]
	0x03AEC0C4 LDR X30, [X31], #0x10
	0x03AEC0C8 RET
	0x03AEC0CC BL 0x1C16F20
	0x03AEC0D0 STR X30, [X31 - 0x10]!
	0x03AEC0D4 CBZ X1, 0x3AEC0E4
	0x03AEC0D8 LDR W0, [X1 + 0x24]
	0x03AEC0DC LDR X30, [X31], #0x10
	0x03AEC0E0 RET
	0x03AEC0E4 BL 0x1C16F20
	0x03AEC0E8 STP X30, X21, [X31 - 0x20]!
	0x03AEC0EC STP X20, X19, [X31 + 0x10]
	0x03AEC0F0 ADRP X19, 0x8F6000
	0x03AEC0F4 ADRP X20, 0x62E000
	0x03AEC0F8 LDRB W8, [X19 + 0x5D0]
	0x03AEC0FC LDR X20, [X20 + 0xDF8]
	0x03AEC100 TBNZ X8, 0x0, 0x3AEC124
	0x03AEC104 ADRP X0, 0x62E000
	0x03AEC108 LDR X0, [X0 + 0xDF8]
	0x03AEC10C BL 0x1C16CF4
	0x03AEC110 ADRP X0, 0x607000
	0x03AEC114 LDR X0, [X0 + 0x598]
	0x03AEC118 BL 0x1C16CF4
	0x03AEC11C MOVZ W8, 0x1
	0x03AEC120 STRB W8, [X19 + 0x5D0]
	0x03AEC124 LDR X0, [X20]
	0x03AEC128 ADRP X21, 0x607000
	0x03AEC12C LDR W8, [X0 + 0xE0]
	0x03AEC130 LDR X21, [X21 + 0x598]
	0x03AEC134 CBNZ W8, 0x3AEC13C
	0x03AEC138 BL 0x1C16DFC
	0x03AEC13C MOV X0, X31
	0x03AEC140 BL 0x3E4FF90
	0x03AEC144 LDR X8, [X21]
	0x03AEC148 MOV X19, X0
	0x03AEC14C LDR W9, [X8 + 0xE0]
	0x03AEC150 CBNZ W9, 0x3AEC15C
	0x03AEC154 MOV X0, X8
	0x03AEC158 BL 0x1C16DFC
	0x03AEC15C MOV X0, X19
	0x03AEC160 MOV X1, X31
	0x03AEC164 BL 0x3C38948
	0x03AEC168 TBZ X0, 0x0, 0x3AEC1E4
	0x03AEC16C LDR X0, [X20]
	0x03AEC170 LDR W8, [X0 + 0xE0]
	0x03AEC174 CBNZ W8, 0x3AEC17C
	0x03AEC178 BL 0x1C16DFC
	0x03AEC17C MOV X0, X31
	0x03AEC180 BL 0x3E4FF90

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x8F7000
	010 Move W8, [X22+1477]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x66D000
	019 Move X0, [X0+1552]
	020 Call 0x1C17CF4
	021 Move X0, 0x66D000
	022 Move X0, [X0+3144]
	023 Call 0x1C17CF4
	024 Move X0, 0x608000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1477], W8
	029 Move [X19], X31
	030 Compare X21, 0
	031 JumpIfEqual {64}
	032 Move W8, [X21+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X24, 0x66D000
	035 Move X25, 0x608000
	036 Move X24, [X24+3144]
	037 Move X25, [X25+1432]
	038 Move W22, W31
	039 Move X2, [X24]
	040 Move X0, X21
	041 Move W1, W22
	042 Call List`1<Object>.get_Item, X0, X1
	043 Move W1, W20
	044 Move X2, X19
	045 Call TMP_FontUtilities.SearchForCharacterInternal, X0, X1, X2
	046 Move X8, [X25]
	047 Move X23, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X23
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Inequality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {65}
	061 Move W8, [X21+24]
	062 Add W22, W22, 1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X23, X31
	065 Move X0, X23
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Move X25, [X31+72]
	074 Return X0

