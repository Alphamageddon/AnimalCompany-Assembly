Type: TMPro.TMP_Text/<>c

Method: System.Void .cctor()

Disassembly:
	0x03B1CD44 LDR X0, [X0 + 0xA80]
	0x03B1CD48 BL 0x1C16CF4
	0x03B1CD4C MOVZ W8, 0x1
	0x03B1CD50 STRB W8, [X20 + 0x707]
	0x03B1CD54 LDR X0, [X21]
	0x03B1CD58 CBZ X0, 0x3B1CD90
	0x03B1CD5C LDR W8, [X0 + 0x10]
	0x03B1CD60 SUB W8, W8, 0x1
	0x03B1CD64 CMP W8, W19, UXTH
	0x03B1CD68 B.GE 0x3B1CD7C
	0x03B1CD6C MOV W0, W19
	0x03B1CD70 LDP X20, X19, [X31 + 0x10]
	0x03B1CD74 LDP X30, X21, [X31], #0x20
	0x03B1CD78 RET
	0x03B1CD7C AND W1, W19, 0xFFFF
	0x03B1CD80 LDP X20, X19, [X31 + 0x10]
	0x03B1CD84 MOV X2, X31
	0x03B1CD88 LDP X30, X21, [X31], #0x20
	0x03B1CD8C B 0x3222A1C
	0x03B1CD90 BL 0x1C16F20
	0x03B1CD94 STP X30, X21, [X31 - 0x20]!
	0x03B1CD98 STP X20, X19, [X31 + 0x10]
	0x03B1CD9C ADRP X20, 0x8C6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x8C7000
	005 Move X20, 0x63E000
	006 Move W8, [X19+1782]
	007 Move X20, [X20+920]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x63E000
	013 Move X0, [X0+920]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1782], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B1CDA0 ADRP X21, 0x63D000
	0x03B1CDA4 LDRB W8, [X20 + 0x706]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.ctor>b__622_0(TMPro.TMP_TextInfo <p0>)

Disassembly:
	0x03B1CDA8 LDR X21, [X21 + 0xA88]

ISIL:
	001 Return 

