Type: TMPro.TMP_LinkInfo

Method: System.Void SetLinkID(System.Char[] text, System.Int32 startIndex, System.Int32 length)

Disassembly:
	0x03ADC12C LDP X20, X19, [X31 + 0x10]
	0x03ADC130 LDP X30, X21, [X31], #0x20
	0x03ADC134 RET
	0x03ADC138 STP D11, D10, [X31 - 0x40]!
	0x03ADC13C STP D9, D8, [X31 + 0x10]
	0x03ADC140 STR X30, [X31 + 0x20]
	0x03ADC144 STP X20, X19, [X31 + 0x30]
	0x03ADC148 MOVZ W20, 0x3
	0x03ADC14C MOV X1, X31
	0x03ADC150 MOV V8.16B, V3.16B
	0x03ADC154 MOV V9.16B, V2.16B
	0x03ADC158 MOV V10.16B, V1.16B
	0x03ADC15C MOV V11.16B, V0.16B
	0x03ADC160 MOV X19, X0
	0x03ADC164 STR W20, [X0 + 0x18]
	0x03ADC168 BL 0x3C36D2C
	0x03ADC16C STR W20, [X19 + 0x18]
	0x03ADC170 STP S11, S10, [X19 + 0x1C]
	0x03ADC174 STP S9, S8, [X19 + 0x24]
	0x03ADC178 STP S11, S10, [X19 + 0x2C]
	0x03ADC17C STP S9, S8, [X19 + 0x34]
	0x03ADC180 STP S11, S10, [X19 + 0x3C]
	0x03ADC184 STP S9, S8, [X19 + 0x44]
	0x03ADC188 STP S11, S10, [X19 + 0x4C]
	0x03ADC18C STP S9, S8, [X19 + 0x54]
	0x03ADC190 LDP X20, X19, [X31 + 0x30]
	0x03ADC194 LDR X30, [X31 + 0x20]
	0x03ADC198 LDP D9, D8, [X31 + 0x10]
	0x03ADC19C LDP D11, D10, [X31], #0x40
	0x03ADC1A0 RET
	0x03ADC1A4 SUB X31, X31, 0x80
	0x03ADC1A8 STP D15, D14, [X31 + 0x20]
	0x03ADC1AC STP D13, D12, [X31 + 0x30]
	0x03ADC1B0 STP D11, D10, [X31 + 0x40]
	0x03ADC1B4 STP D9, D8, [X31 + 0x50]
	0x03ADC1B8 STR X30, [X31 + 0x60]
	0x03ADC1BC STP X20, X19, [X31 + 0x70]
	0x03ADC1C0 MOV V15.16B, V0.16B
	0x03ADC1C4 LDR V0, [X31 + 0x9]
	0x03ADC1C8 MOVZ W20, 0x3
	0x03ADC1CC MOV X1, X31
	0x03ADC1D0 MOV V8.16B, V7.16B
	0x03ADC1D4 STR V0, [X31 + 0x1]
	0x03ADC1D8 LDR V0, [X31 + 0x8]
	0x03ADC1DC MOV V9.16B, V6.16B
	0x03ADC1E0 MOV V10.16B, V5.16B
	0x03ADC1E4 MOV V11.16B, V4.16B
	0x03ADC1E8 MOV V12.16B, V3.16B
	0x03ADC1EC MOV V13.16B, V2.16B
	0x03ADC1F0 MOV V14.16B, V1.16B
	0x03ADC1F4 MOV X19, X0
	0x03ADC1F8 STR V0, [X31]
	0x03ADC1FC STR W20, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x907000
	008 Move W8, [X23+1351]
	009 Move W21, W3
	010 Move W20, W2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x621000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+1351], W8
	022 Move X0, [X22+32]
	023 Compare X0, 0
	024 JumpIfEqual {27}
	025 Move W8, [X0+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X8, 0x621000
	028 Move X8, [X8+2264]
	029 Move W1, W21
	030 Move X0, [X8]
	031 Call 0x1C17D6C
	032 Move [X22+32], X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Compare X19, 0
	035 JumpIfEqual {60}
	036 Move W9, [X19+24]
	037 Move X8, X31
	038 Move W10, W21
	039 Add X11, X0, 32
	040 Move W12, W20
	041 Add X13, X12, X8
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {60}
	045 Move W14, [X0+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X13, X19, W13
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 NotImplemented "Instruction STRH not yet implemented."
	050 Add X8, X8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return 
	059 Call 0x1C17F28
	060 Call 0x1C17F20

Method: System.String GetLinkText()

Disassembly:
	0x03ADC200 BL 0x3C36D2C
	0x03ADC204 LDR V0, [X31]
	0x03ADC208 STR W20, [X19 + 0x18]
	0x03ADC20C STP S15, S14, [X19 + 0x1C]
	0x03ADC210 STP S13, S12, [X19 + 0x24]
	0x03ADC214 STUR V0, [X19 + 0x3C]
	0x03ADC218 LDR V0, [X31 + 0x1]
	0x03ADC21C STP S11, S10, [X19 + 0x2C]
	0x03ADC220 STP S9, S8, [X19 + 0x34]
	0x03ADC224 LDR X30, [X31 + 0x60]
	0x03ADC228 STUR V0, [X19 + 0x4C]
	0x03ADC22C LDP X20, X19, [X31 + 0x70]
	0x03ADC230 LDP D9, D8, [X31 + 0x50]
	0x03ADC234 LDP D11, D10, [X31 + 0x40]
	0x03ADC238 LDP D13, D12, [X31 + 0x30]
	0x03ADC23C LDP D15, D14, [X31 + 0x20]
	0x03ADC240 ADD X31, X31, 0x80
	0x03ADC244 RET
	0x03ADC248 STR X30, [X31 - 0x20]!
	0x03ADC24C STP X20, X19, [X31 + 0x10]
	0x03ADC250 ADRP X19, 0x906000
	0x03ADC254 ADRP X20, 0x67C000
	0x03ADC258 LDRB W8, [X19 + 0x55A]
	0x03ADC25C LDR X20, [X20 + 0x890]
	0x03ADC260 TBNZ X8, 0x0, 0x3ADC278
	0x03ADC264 ADRP X0, 0x67C000
	0x03ADC268 LDR X0, [X0 + 0x890]
	0x03ADC26C BL 0x1C16CF4
	0x03ADC270 MOVZ W8, 0x1
	0x03ADC274 STRB W8, [X19 + 0x55A]
	0x03ADC278 LDR X8, [X20]
	0x03ADC27C LDP X20, X19, [X31 + 0x10]
	0x03ADC280 FMOV V0.4S, 0x0
	0x03ADC284 LDR X8, [X8 + 0xB8]
	0x03ADC288 STR V0, [X8]
	0x03ADC28C LDR X30, [X31], #0x20
	0x03ADC290 RET
	0x03ADC294 SUB W8, W0, 0x1
	0x03ADC298 CMP W8, 0x16
	0x03ADC29C B.HI 0x3ADC2B0
	0x03ADC2A0 ADRP X9, 0xFFFFFFFFFD0BB000
	0x03ADC2A4 ADD X9, X9, 0xC18
	0x03ADC2A8 LDR W0, [X9, W8, SXTW]
	0x03ADC2AC RET
	0x03ADC2B0 MOVZ W0, 0x101
	0x03ADC2B4 RET
	0x03ADC2B8 LDP S0, S1, [X0 + 0x8]
	0x03ADC2BC LDP S2, S3, [X0 + 0x10]
	0x03ADC2C0 RET
	0x03ADC2C4 STP S0, S1, [X0 + 0x8]
	0x03ADC2C8 STP S2, S3, [X0 + 0x10]
	0x03ADC2CC RET
	0x03ADC2D0 LDP S0, S1, [X0 + 0x18]
	0x03ADC2D4 LDP S2, S3, [X0 + 0x20]
	0x03ADC2D8 RET
	0x03ADC2DC STP S0, S1, [X0 + 0x18]
	0x03ADC2E0 STP S2, S3, [X0 + 0x20]
	0x03ADC2E4 RET
	0x03ADC2E8 LDR W0, [X0 + 0x28]
	0x03ADC2EC RET
	0x03ADC2F0 STR W1, [X0 + 0x28]
	0x03ADC2F4 RET
	0x03ADC2F8 LDR V0, [X0 + 0x2C]
	0x03ADC2FC RET
	0x03ADC300 STR S0, [X0 + 0x2C]
	0x03ADC304 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x907000
	010 Move W8, [X20+1352]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x61A000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0x61A000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1352], W8
	024 Move X8, [X19]
	025 Compare X8, 0
	026 JumpIfEqual {79}
	027 Move X9, 0x61A000
	028 Move X9, [X9+632]
	029 Move W21, [X19+20]
	030 Move W10, [X19+24]
	031 Move X21, W21
	032 Move X9, [X9]
	033 Move X9, [X9+184]
	034 Move X20, [X9]
	035 Add W9, W10, W21
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X22, [X8+872]
	038 Compare X22, 0
	039 JumpIfEqual {79}
	040 Move X24, 0x61A000
	041 Move X24, [X24+368]
	042 Move W8, 376
	043 Or X9, X31, 63
	044 NotImplemented "Instruction MADD not yet implemented."
	045 Move X25, [X22+56]
	046 Compare X25, 0
	047 JumpIfEqual {79}
	048 Move W8, [X25+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X0, X25, X23
	056 Move X1, X31
	057 Call Char.ToString, X0
	058 Move X1, X0
	059 Move X0, X20
	060 Move X2, X31
	061 Call String.Concat, X0, X1
	062 Move W8, [X19+20]
	063 Move W9, [X19+24]
	064 Add X21, X21, 1
	065 Move X20, X0
	066 Add X23, X23, 376
	067 Add W8, W9, W8
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X20
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Move X25, [X31+72]
	078 Return X0
	079 Call 0x1C17F20
	080 Call 0x1C17F28

Method: System.String GetLinkID()

Disassembly:
	0x03ADC308 LDRB W0, [X0 + 0x30]
	0x03ADC30C RET
	0x03ADC310 AND W8, W1, 0x1
	0x03ADC314 STRB W8, [X0 + 0x30]
	0x03ADC318 RET
	0x03ADC31C STR D8, [X31 - 0x20]!
	0x03ADC320 STR X30, [X31 + 0x8]
	0x03ADC324 STP X20, X19, [X31 + 0x10]
	0x03ADC328 ADRP X20, 0x906000
	0x03ADC32C LDRB W8, [X20 + 0x55B]
	0x03ADC330 MOV V8.16B, V0.16B
	0x03ADC334 MOV X19, X0
	0x03ADC338 TBNZ X8, 0x0, 0x3ADC350
	0x03ADC33C ADRP X0, 0x67C000
	0x03ADC340 LDR X0, [X0 + 0x898]
	0x03ADC344 BL 0x1C16CF4
	0x03ADC348 MOVZ W8, 0x1
	0x03ADC34C STRB W8, [X20 + 0x55B]
	0x03ADC350 LDR X0, [X19]
	0x03ADC354 CBZ X0, 0x3ADC3E8
	0x03ADC358 ADRP X8, 0x67C000
	0x03ADC35C LDR X8, [X8 + 0x898]
	0x03ADC360 LDR V1, [X19 + 0x14]
	0x03ADC364 LDR V3, [X19 + 0x24]
	0x03ADC368 LDUR V4, [X19 + 0xC]
	0x03ADC36C FMOV S2, 1
	0x03ADC370 LDR W9, [X19 + 0x28]
	0x03ADC374 LDR V0, [X19 + 0x8]
	0x03ADC378 FCMP S8, 0x0
	0x03ADC37C FMOV S5, W31
	0x03ADC380 FMIN S2, S8, S2
	0x03ADC384 FCSEL S5, S2, S5, PL
	0x03ADC388 FSUB S3, S3, S1
	0x03ADC38C FMUL S3, S5, S3
	0x03ADC390 UNIMPLEMENTED
	0x03ADC394 CMP W9, 0x2
	0x03ADC398 FADD S3, S1, S3
	0x03ADC39C B.EQ 0x3ADC3D0
	0x03ADC3A0 LDUR V7, [X19 + 0x1C]
	0x03ADC3A4 LDR V6, [X19 + 0x18]
	0x03ADC3A8 CMP W9, 0x1
	0x03ADC3AC FSUB V4.2S, V7.2S, V4.2S

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x907000
	006 Move X20, 0x618000
	007 Move W8, [X21+1353]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x618000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x61A000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1353], W8
	022 Move X0, [X20]
	023 Move X20, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {46}
	036 Move X8, 0x61A000
	037 Move X8, [X8+632]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X8, [X8]
	041 Move X8, [X8+184]
	042 Move X0, [X8]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0
	046 Move X1, [X19+32]
	047 Move W3, [X19+16]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X0, X31
	051 Move W2, W31
	052 Move X4, X31
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call String.CreateString, X0, X1, X2, X3
	056 Return X0

