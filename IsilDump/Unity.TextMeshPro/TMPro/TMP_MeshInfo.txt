Type: TMPro.TMP_MeshInfo

Method: System.Void .ctor(UnityEngine.Mesh mesh, System.Int32 size)

Disassembly:
	0x03B11F58 ADD W26, W26, 0x6
	0x03B11F5C SUBS X25, X25, 0x1
	0x03B11F60 STR W24, [X8 + 0x20]
	0x03B11F64 ADD W24, W24, 0x4
	0x03B11F68 B.NE 0x3B11D4C
	0x03B11F6C LDR X0, [X19]
	0x03B11F70 CBZ X0, 0x3B12040
	0x03B11F74 LDR X1, [X19 + 0x10]
	0x03B11F78 MOV X2, X31
	0x03B11F7C BL 0x3C17F08
	0x03B11F80 LDR X0, [X19]
	0x03B11F84 CBZ X0, 0x3B12040
	0x03B11F88 LDR X1, [X19 + 0x18]
	0x03B11F8C MOV X2, X31
	0x03B11F90 BL 0x3C17FB4
	0x03B11F94 LDR X0, [X19]
	0x03B11F98 CBZ X0, 0x3B12040
	0x03B11F9C LDR X1, [X19 + 0x20]
	0x03B11FA0 MOV X2, X31
	0x03B11FA4 BL 0x3C18060
	0x03B11FA8 LDR X0, [X19]
	0x03B11FAC CBZ X0, 0x3B12040
	0x03B11FB0 LDR X1, [X21]
	0x03B11FB4 LDP X20, X19, [X31 + 0x50]
	0x03B11FB8 LDP X22, X21, [X31 + 0x40]
	0x03B11FBC LDP X24, X23, [X31 + 0x30]
	0x03B11FC0 LDP X26, X25, [X31 + 0x20]
	0x03B11FC4 LDP X28, X27, [X31 + 0x10]
	0x03B11FC8 MOV X2, X31
	0x03B11FCC LDP X29, X30, [X31], #0x60
	0x03B11FD0 B 0x3C18FF0
	0x03B11FD4 LDR X0, [X19]
	0x03B11FD8 CBZ X0, 0x3B12040
	0x03B11FDC LDR X1, [X19 + 0x40]
	0x03B11FE0 MOV X2, X31
	0x03B11FE4 BL 0x3C18FF0
	0x03B11FE8 LDR X0, [X19]
	0x03B11FEC CBZ X0, 0x3B12040
	0x03B11FF0 LDR X1, [X19 + 0x10]
	0x03B11FF4 MOV X2, X31
	0x03B11FF8 BL 0x3C17F08
	0x03B11FFC LDR X0, [X19]
	0x03B12000 CBZ X0, 0x3B12040
	0x03B12004 LDR X1, [X19 + 0x18]
	0x03B12008 MOV X2, X31
	0x03B1200C BL 0x3C17FB4
	0x03B12010 LDR X0, [X19]
	0x03B12014 CBZ X0, 0x3B12040
	0x03B12018 LDR X1, [X20]
	0x03B1201C LDP X20, X19, [X31 + 0x50]
	0x03B12020 LDP X22, X21, [X31 + 0x40]
	0x03B12024 LDP X24, X23, [X31 + 0x30]
	0x03B12028 LDP X26, X25, [X31 + 0x20]
	0x03B1202C LDP X28, X27, [X31 + 0x10]
	0x03B12030 MOV X2, X31
	0x03B12034 LDP X29, X30, [X31], #0x60
	0x03B12038 B 0x3C18060
	0x03B1203C BL 0x1C16F28
	0x03B12040 BL 0x1C16F20
	0x03B12044 SUB X31, X31, 0x90
	0x03B12048 STP X29, X30, [X31 + 0x30]
	0x03B1204C STP X28, X27, [X31 + 0x40]
	0x03B12050 STP X26, X25, [X31 + 0x50]
	0x03B12054 STP X24, X23, [X31 + 0x60]
	0x03B12058 STP X22, X21, [X31 + 0x70]
	0x03B1205C STP X20, X19, [X31 + 0x80]
	0x03B12060 ADRP X19, 0x8D0000
	0x03B12064 LDRB W8, [X19 + 0x68F]
	0x03B12068 MOV W21, W1
	0x03B1206C MOV X29, X0
	0x03B12070 STR W2, [X31 + 0x1C]
	0x03B12074 TBNZ X8, 0x0, 0x3B120CC
	0x03B12078 ADRP X0, 0x647000
	0x03B1207C LDR X0, [X0 + 0x770]
	0x03B12080 BL 0x1C16CF4
	0x03B12084 ADRP X0, 0x60A000
	0x03B12088 LDR X0, [X0 + 0xED0]
	0x03B1208C BL 0x1C16CF4
	0x03B12090 ADRP X0, 0x647000
	0x03B12094 LDR X0, [X0 + 0x778]
	0x03B12098 BL 0x1C16CF4
	0x03B1209C ADRP X0, 0x63C000
	0x03B120A0 LDR X0, [X0 + 0x228]
	0x03B120A4 BL 0x1C16CF4
	0x03B120A8 ADRP X0, 0x647000
	0x03B120AC LDR X0, [X0 + 0x780]
	0x03B120B0 BL 0x1C16CF4
	0x03B120B4 ADRP X0, 0x646000
	0x03B120B8 LDR X0, [X0 + 0x348]
	0x03B120BC BL 0x1C16CF4
	0x03B120C0 LDR W2, [X31 + 0x1C]
	0x03B120C4 MOVZ W8, 0x1
	0x03B120C8 STRB W8, [X19 + 0x68F]
	0x03B120CC ANDS W31, W2, 0x1
	0x03B120D0 MOVZ W8, 0x4
	0x03B120D4 MOVZ W9, 0x8
	0x03B120D8 MOV X0, X29
	0x03B120DC CSEL W27, W9, W8, NE
	0x03B120E0 LDR X8, [X0 + 0x10]!
	0x03B120E4 MOVZ W9, 0xFFFC
	0x03B120E8 MOVZ W10, 0x6
	0x03B120EC MOVZ W11, 0x24
	0x03B120F0 UDIV W9, W9, W27
	0x03B120F4 CSEL W28, W11, W10, NE
	0x03B120F8 CMP W9, W21
	0x03B120FC CSEL W19, W21, W9, GT
	0x03B12100 CBZ X8, 0x3B12918
	0x03B12104 ADRP X20, 0x63C000
	0x03B12108 LDR X20, [X20 + 0x228]
	0x03B1210C ADRP X21, 0x647000
	0x03B12110 ADRP X26, 0x647000
	0x03B12114 LDR X21, [X21 + 0x780]
	0x03B12118 LDR X26, [X26 + 0x778]
	0x03B1211C LDR W8, [X8 + 0x18]
	0x03B12120 LDR X2, [X20]
	0x03B12124 MUL W22, W19, W27
	0x03B12128 MOV W1, W22
	0x03B1212C MUL W24, W19, W28
	0x03B12130 SDIV W25, W8, W27
	0x03B12134 BL 0x2144898
	0x03B12138 LDR X2, [X20]
	0x03B1213C ADD X23, X29, 0x18
	0x03B12140 MOV X0, X23
	0x03B12144 MOV W1, W22
	0x03B12148 BL 0x2144898
	0x03B1214C LDR X2, [X21]
	0x03B12150 ADD X21, X29, 0x20
	0x03B12154 MOV X0, X21
	0x03B12158 MOV W1, W22
	0x03B1215C BL 0x21449A4
	0x03B12160 LDR X2, [X26]
	0x03B12164 ADD X0, X29, 0x28
	0x03B12168 MOV W1, W22
	0x03B1216C BL 0x214478C
	0x03B12170 LDR X2, [X26]
	0x03B12174 ADD X0, X29, 0x30
	0x03B12178 MOV W1, W22
	0x03B1217C BL 0x214478C
	0x03B12180 ADRP X8, 0x647000
	0x03B12184 LDR X8, [X8 + 0x770]
	0x03B12188 ADD X0, X29, 0x38
	0x03B1218C MOV W1, W22
	0x03B12190 LDR X2, [X8]
	0x03B12194 BL 0x211581C
	0x03B12198 ADRP X8, 0x60A000
	0x03B1219C LDR X8, [X8 + 0xED0]
	0x03B121A0 ADD X0, X29, 0x40
	0x03B121A4 MOV W1, W24
	0x03B121A8 STR X0, [X31 + 0x28]
	0x03B121AC LDR X2, [X8]
	0x03B121B0 BL 0x2116294
	0x03B121B4 CMP W19, W25
	0x03B121B8 B.LE 0x3B128A8
	0x03B121BC SXTW X8, W19
	0x03B121C0 STR X29, [X31 + 0x8]
	0x03B121C4 STR X8, [X31 + 0x20]
	0x03B121C8 MOV W1, W28
	0x03B121CC MUL W8, W28, W25
	0x03B121D0 ADRP X28, 0x646000
	0x03B121D4 LDR X28, [X28 + 0x348]
	0x03B121D8 LDR W16, [X31 + 0x1C]
	0x03B121DC ORR W9, W31, 0x3
	0x03B121E0 SXTW X24, W25
	0x03B121E4 ADD W29, W8, 0x11
	0x03B121E8 MADD W19, W27, W25, W9
	0x03B121EC MOVZ W26, 0xC
	0x03B121F0 MOV W17, W27
	0x03B121F4 STP W1, W27, [X31 + 0x14]
	0x03B121F8 LDR X0, [X28]
	0x03B121FC LDR X20, [X23]
	0x03B12200 LDR W8, [X0 + 0xE0]
	0x03B12204 CBNZ W8, 0x3B12218
	0x03B12208 BL 0x1C16DFC
	0x03B1220C LDP W1, W17, [X31 + 0x14]
	0x03B12210 LDR W16, [X31 + 0x1C]
	0x03B12214 LDR X0, [X28]
	0x03B12218 CBZ X20, 0x3B12918
	0x03B1221C LDR W8, [X20 + 0x18]
	0x03B12220 SUB W27, W19, 0x3
	0x03B12224 CMP W27, W8
	0x03B12228 B.CS 0x3B12914
	0x03B1222C LDR X8, [X0 + 0xB8]
	0x03B12230 LDUR V0, [X8 + 0x4]
	0x03B12234 LDR V1, [X8 + 0xC]
	0x03B12238 SXTW X8, W27
	0x03B1223C MADD X9, X8, X26, X20
	0x03B12240 STR D0, [X9 + 0x20]
	0x03B12244 STR S1, [X9 + 0x28]
	0x03B12248 LDR X10, [X23]
	0x03B1224C CBZ X10, 0x3B12918
	0x03B12250 LDR W9, [X10 + 0x18]
	0x03B12254 SUB W22, W19, 0x2
	0x03B12258 CMP W22, W9
	0x03B1225C B.CS 0x3B12914
	0x03B12260 LDR X9, [X28]
	0x03B12264 LDR X9, [X9 + 0xB8]
	0x03B12268 LDUR V0, [X9 + 0x4]
	0x03B1226C LDR V1, [X9 + 0xC]
	0x03B12270 SXTW X9, W22
	0x03B12274 MADD X10, X9, X26, X10
	0x03B12278 STR D0, [X10 + 0x20]
	0x03B1227C STR S1, [X10 + 0x28]
	0x03B12280 LDR X11, [X23]
	0x03B12284 CBZ X11, 0x3B12918
	0x03B12288 LDR W10, [X11 + 0x18]
	0x03B1228C SUB W25, W19, 0x1
	0x03B12290 CMP W25, W10
	0x03B12294 B.CS 0x3B12914
	0x03B12298 LDR X10, [X28]
	0x03B1229C LDR X10, [X10 + 0xB8]
	0x03B122A0 LDUR V0, [X10 + 0x4]
	0x03B122A4 LDR V1, [X10 + 0xC]
	0x03B122A8 SXTW X10, W25
	0x03B122AC MADD X11, X10, X26, X11
	0x03B122B0 STR D0, [X11 + 0x20]
	0x03B122B4 STR S1, [X11 + 0x28]
	0x03B122B8 LDR X12, [X23]
	0x03B122BC CBZ X12, 0x3B12918
	0x03B122C0 LDR W11, [X12 + 0x18]
	0x03B122C4 CMP W19, W11
	0x03B122C8 B.CS 0x3B12914
	0x03B122CC LDR X11, [X28]
	0x03B122D0 LDR X11, [X11 + 0xB8]
	0x03B122D4 LDUR V0, [X11 + 0x4]
	0x03B122D8 LDR V1, [X11 + 0xC]
	0x03B122DC SXTW X11, W19
	0x03B122E0 MADD X12, X11, X26, X12
	0x03B122E4 STR D0, [X12 + 0x20]
	0x03B122E8 STR S1, [X12 + 0x28]
	0x03B122EC LDR X12, [X21]
	0x03B122F0 CBZ X12, 0x3B12918
	0x03B122F4 LDR W13, [X12 + 0x18]
	0x03B122F8 CMP W27, W13
	0x03B122FC B.CS 0x3B12914
	0x03B12300 LDR X13, [X28]
	0x03B12304 ADD X8, X12, X8, 0x4, LSL
	0x03B12308 LDR X13, [X13 + 0xB8]
	0x03B1230C LDR V0, [X13 + 0x1]
	0x03B12310 STR V0, [X8 + 0x2]
	0x03B12314 LDR X8, [X21]
	0x03B12318 CBZ X8, 0x3B12918
	0x03B1231C LDR W12, [X8 + 0x18]
	0x03B12320 CMP W22, W12
	0x03B12324 B.CS 0x3B12914
	0x03B12328 LDR X12, [X28]
	0x03B1232C ADD X8, X8, X9, 0x4, LSL
	0x03B12330 LDR X12, [X12 + 0xB8]
	0x03B12334 LDR V0, [X12 + 0x1]
	0x03B12338 STR V0, [X8 + 0x2]
	0x03B1233C LDR X8, [X21]
	0x03B12340 CBZ X8, 0x3B12918
	0x03B12344 LDR W9, [X8 + 0x18]
	0x03B12348 CMP W25, W9
	0x03B1234C B.CS 0x3B12914
	0x03B12350 LDR X9, [X28]
	0x03B12354 ADD X8, X8, X10, 0x4, LSL
	0x03B12358 LDR X9, [X9 + 0xB8]
	0x03B1235C LDR V0, [X9 + 0x1]
	0x03B12360 STR V0, [X8 + 0x2]
	0x03B12364 LDR X8, [X21]
	0x03B12368 CBZ X8, 0x3B12918
	0x03B1236C LDR W9, [X8 + 0x18]
	0x03B12370 CMP W19, W9
	0x03B12374 B.CS 0x3B12914
	0x03B12378 LDR X9, [X28]
	0x03B1237C ADD X8, X8, X11, 0x4, LSL
	0x03B12380 LDR X9, [X9 + 0xB8]
	0x03B12384 LDR V0, [X9 + 0x1]
	0x03B12388 STR V0, [X8 + 0x2]
	0x03B1238C TBZ X16, 0x0, 0x3B1252C
	0x03B12390 LDR X0, [X28]
	0x03B12394 LDR X20, [X23]
	0x03B12398 LDR W8, [X0 + 0xE0]
	0x03B1239C CBNZ W8, 0x3B123B0
	0x03B123A0 BL 0x1C16DFC
	0x03B123A4 LDP W1, W17, [X31 + 0x14]
	0x03B123A8 LDR W16, [X31 + 0x1C]
	0x03B123AC LDR X0, [X28]
	0x03B123B0 CBZ X20, 0x3B12918
	0x03B123B4 LDR W9, [X20 + 0x18]
	0x03B123B8 ADD W8, W19, 0x1
	0x03B123BC CMP W8, W9
	0x03B123C0 B.CS 0x3B12914
	0x03B123C4 LDR X9, [X0 + 0xB8]
	0x03B123C8 SXTW X8, W8
	0x03B123CC LDUR V0, [X9 + 0x4]
	0x03B123D0 LDR V1, [X9 + 0xC]
	0x03B123D4 NOP
	0x03B123D8 MADD X9, X8, X26, X20
	0x03B123DC STR D0, [X9 + 0x20]
	0x03B123E0 STR S1, [X9 + 0x28]
	0x03B123E4 LDR X10, [X23]
	0x03B123E8 CBZ X10, 0x3B12918
	0x03B123EC LDR W11, [X10 + 0x18]
	0x03B123F0 ADD W9, W19, 0x2
	0x03B123F4 CMP W9, W11
	0x03B123F8 B.CS 0x3B12914
	0x03B123FC LDR X11, [X28]
	0x03B12400 SXTW X9, W9
	0x03B12404 MADD X10, X9, X26, X10
	0x03B12408 LDR X11, [X11 + 0xB8]
	0x03B1240C LDUR V0, [X11 + 0x4]
	0x03B12410 LDR V1, [X11 + 0xC]
	0x03B12414 STR D0, [X10 + 0x20]
	0x03B12418 STR S1, [X10 + 0x28]
	0x03B1241C LDR X11, [X23]
	0x03B12420 CBZ X11, 0x3B12918
	0x03B12424 LDR W12, [X11 + 0x18]
	0x03B12428 ADD W10, W19, 0x3
	0x03B1242C CMP W10, W12
	0x03B12430 B.CS 0x3B12914
	0x03B12434 LDR X12, [X28]
	0x03B12438 SXTW X10, W10
	0x03B1243C MADD X11, X10, X26, X11
	0x03B12440 LDR X12, [X12 + 0xB8]
	0x03B12444 LDUR V0, [X12 + 0x4]
	0x03B12448 LDR V1, [X12 + 0xC]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X22, 0x8D2000
	015 Move X23, 0x5E3000
	016 Move W8, [X22+1676]
	017 Move X23, [X23+1432]
	018 Move W20, W2
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {51}
	025 Move X0, 0x60F000
	026 Move X0, [X0+2808]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E4000
	029 Move X0, [X0+3672]
	030 Call 0x1C17CF4
	031 Move X0, 0x5EA000
	032 Move X0, [X0+1792]
	033 Call 0x1C17CF4
	034 Move X0, 0x5E3000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x648000
	038 Move X0, [X0+840]
	039 Call 0x1C17CF4
	040 Move X0, 0x63D000
	041 Move X0, [X0+2696]
	042 Call 0x1C17CF4
	043 Move X0, 0x5E5000
	044 Move X0, [X0+2480]
	045 Call 0x1C17CF4
	046 Move X0, 0x63E000
	047 Move X0, [X0+72]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+1676], W8
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Equality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {71}
	064 Move X8, 0x5E9000
	065 Move X8, [X8+1792]
	066 Move X0, [X8]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X21, X0
	070 Call Mesh..ctor, X0
	071 Compare X21, 0
	072 JumpIfEqual {351}
	073 Move X0, X21
	074 Move X1, X31
	075 Call Mesh.Clear, X0
	076 Move X24, 0x5E4000
	077 Move X24, [X24+2480]
	078 Move X25, 0x63C000
	079 Move X26, 0x60E000
	080 Move X27, 0x63D000
	081 Move X28, 0x5E3000
	082 Move X23, 0x647000
	083 Move X25, [X25+2696]
	084 Move X26, [X26+2808]
	085 Move X27, [X27+72]
	086 Move X28, [X28+3672]
	087 Move X23, [X23+840]
	088 Move [X19], X21
	089 Move W8, 0x3FFF
	090 Move [X19+8], W31
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X24]
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Move W21, W8
	095 ShiftRight W21, 30
	096 And W21, W21, 0x1FFFFFFF
	097 Move [X31+4], W8
	098 Add W8, W8, W8
	099 Move W1, W21
	100 Move W22, W8
	101 ShiftRight W22, 31
	102 And W22, W22, 0x3FFFFFFF
	103 Call 0x1C17D6C
	104 Move [X19+16], X0
	105 Move X0, [X25]
	106 Move W1, W21
	107 Call 0x1C17D6C
	108 Move [X19+40], X0
	109 Move X0, [X25]
	110 Move W1, W21
	111 Call 0x1C17D6C
	112 Move [X19+48], X0
	113 Move X0, [X26]
	114 Move W1, W21
	115 Call 0x1C17D6C
	116 Move [X19+56], X0
	117 Move X0, [X24]
	118 Move W1, W21
	119 Call 0x1C17D6C
	120 Move [X19+24], X0
	121 Move X0, [X27]
	122 Move W1, W21
	123 Call 0x1C17D6C
	124 Move [X19+32], X0
	125 Move X0, [X28]
	126 Move W1, W22
	127 Call 0x1C17D6C
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move [X19+64], X0
	130 Move X21, 0x5EA000
	131 Move X21, [X21+3848]
	132 Move X22, X31
	133 Move W13, W31
	134 Move X8, W22
	135 Move X9, X8
	136 ShiftRight X9, 63
	137 And X9, X9, 0x3FFFFFFF
	138 Move X10, X8
	139 ShiftRight X10, 61
	140 And X10, X10, 0xFFFFFFF
	141 Move X11, X8
	142 ShiftRight X11, 62
	143 And X11, X11, 0x1FFFFFFF
	144 Move X8, X8
	145 ShiftRight X8, 60
	146 And X8, X8, 0x7FFFFFF
	147 Add X9, X9, W22
	148 Move [X31+8], X13
	149 Move X29, X31
	150 Add X24, X10, 32
	151 Add X27, X11, 32
	152 Move X25, X9
	153 ShiftRight X25, 62
	154 And X25, X25, 0x1FFFFFFF
	155 Add X26, X8, 32
	156 Move X8, 0x8C7000
	157 Move W8, [X8+1923]
	158 Move X20, [X19+16]
	159 Compare W8, 0
	160 JumpIfNotEqual {167}
	161 Move X0, 0x5E2000
	162 Move X0, [X0+1440]
	163 Call 0x1C17CF4
	164 Move X8, 0x8C7000
	165 Move W9, 1
	166 Move [X8+1923], W9
	167 Compare X20, 0
	168 JumpIfEqual {351}
	169 Move W8, [X20+24]
	170 Add X28, X22, X29
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X8, 0x5E2000
	173 Move X8, [X8+1440]
	174 Move X8, [X8]
	175 Move X8, [X8+184]
	176 Move V0, [X8]
	177 Move V1, [X8+8]
	178 Add X8, X20, X25
	179 Move [X8+32], D0
	180 Move [X8+40], S1
	181 Move X8, 0x8C8000
	182 Move W8, [X8+1935]
	183 Move X20, [X19+40]
	184 Compare W8, 0
	185 JumpIfNotEqual {191}
	186 Move X0, X21
	187 Call 0x1C17CF4
	188 Move W8, 1
	189 Move X9, 0x8C8000
	190 Move [X9+1935], W8
	191 Compare X20, 0
	192 JumpIfEqual {351}
	193 Move W8, [X20+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, [X21]
	196 Move X8, [X8+184]
	197 Move V0, [X8]
	198 Add X8, X20, X24
	199 Move [X8], D0
	200 Move X8, [X19+48]
	201 Compare X8, 0
	202 JumpIfEqual {351}
	203 Move W9, [X8+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X9, [X21]
	206 Add X8, X8, X24
	207 Move X9, [X9+184]
	208 Move V0, [X9]
	209 Move [X8], D0
	210 Move X0, [X23]
	211 Move X20, [X19+56]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {217}
	215 Call 0x1C17DFC
	216 Move X0, [X23]
	217 Compare X20, 0
	218 JumpIfEqual {351}
	219 Move W8, [X20+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X8, [X0+184]
	222 Add X9, X20, X27
	223 Move W8, [X8]
	224 Move [X9], W8
	225 Move X8, [X19+24]
	226 Compare X8, 0
	227 JumpIfEqual {351}
	228 Move W9, [X8+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X9, [X23]
	231 Add X8, X8, X25
	232 Move X9, [X9+184]
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 Move V1, [X9+12]
	235 Move [X8+32], D0
	236 Move [X8+40], S1
	237 Move X8, [X19+32]
	238 Compare X8, 0
	239 JumpIfEqual {351}
	240 Move W9, [X8+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X9, [X23]
	243 Add X8, X8, X26
	244 Add X25, X25, 12
	245 Move X9, [X9+184]
	246 Move V0, [X9+1]
	247 Move [X8], V0
	248 Add X29, X29, 1
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move X8, [X19+64]
	251 Compare X8, 0
	252 JumpIfEqual {351}
	253 Move W9, [X8+24]
	254 Move X13, [X31+8]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X10, W13
	257 Or X10, X10, 1
	258 Add X11, X8, W13
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move [X11+32], W22
	261 Add W11, W13, 2
	262 Or W12, W22, 1
	263 Add X10, X8, X10
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move [X10+32], W12
	266 Add X12, X8, W11
	267 Add W11, W13, 3
	268 Or W10, W22, 2
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move [X12+32], W10
	271 Add X12, X8, W11
	272 Add W11, W13, 4
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X12+32], W10
	275 Add W10, W13, 5
	276 Or W12, W22, 3
	277 Add X11, X8, W11
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move [X11+32], W12
	280 Add X8, X8, W10
	281 Move W9, [X31+4]
	282 Move [X8+32], W22
	283 Add X22, X22, 4
	284 Add W8, W22, 3
	285 NotImplemented "Instruction CMP not yet implemented."
	286 NotImplemented "Instruction CSEL not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Add W13, W13, 6
	289 Move X0, [X19]
	290 Compare X0, 0
	291 JumpIfEqual {351}
	292 Move X1, [X19+16]
	293 Move X2, X31
	294 Call Mesh.set_vertices, X0, X1
	295 Move X0, [X19]
	296 Compare X0, 0
	297 JumpIfEqual {351}
	298 Move X1, [X19+24]
	299 Move X2, X31
	300 Call Mesh.set_normals, X0, X1
	301 Move X0, [X19]
	302 Compare X0, 0
	303 JumpIfEqual {351}
	304 Move X1, [X19+32]
	305 Move X2, X31
	306 Call Mesh.set_tangents, X0, X1
	307 Move X0, [X19]
	308 Compare X0, 0
	309 JumpIfEqual {351}
	310 Move X1, [X19+64]
	311 Move X2, X31
	312 Call Mesh.set_triangles, X0, X1
	313 Move X0, [X23]
	314 Move X20, [X19]
	315 Move W8, [X0+224]
	316 Compare W8, 0
	317 JumpIfNotEqual {320}
	318 Call 0x1C17DFC
	319 Move X0, [X23]
	320 Move X8, [X0+184]
	321 Move X9, [X8+48]
	322 Move V0, [X8+2]
	323 Move [X31+64], X9
	324 Move [X31+3], V0
	325 Compare X20, 0
	326 JumpIfEqual {351}
	327 Move V0, [X31+3]
	328 Move X8, [X31+64]
	329 Add X1, X31, 16
	330 Move X0, X20
	331 Move X2, X31
	332 Move [X31+1], V0
	333 Move [X31+32], X8
	334 Call Mesh.set_bounds, X0, X1
	335 Move [X19+72], X31
	336 Move X20, [X31+160]
	337 Move X19, [X31+168]
	338 Move X22, [X31+144]
	339 Move X21, [X31+152]
	340 Move X24, [X31+128]
	341 Move X23, [X31+136]
	342 Move X26, [X31+112]
	343 Move X25, [X31+120]
	344 Move X28, [X31+96]
	345 Move X27, [X31+104]
	346 Move X29, [X31+80]
	347 Move X30, [X31+88]
	348 Add X31, X31, 176
	349 Return 
	350 Call 0x1C17F28
	351 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.Mesh mesh, System.Int32 size, System.Boolean isVolumetric)

Disassembly:
	0x03B1244C STR D0, [X11 + 0x20]
	0x03B12450 STR S1, [X11 + 0x28]
	0x03B12454 LDR X12, [X23]
	0x03B12458 CBZ X12, 0x3B12918
	0x03B1245C LDR W13, [X12 + 0x18]
	0x03B12460 ADD W11, W19, 0x4
	0x03B12464 CMP W11, W13
	0x03B12468 B.CS 0x3B12914
	0x03B1246C LDR X13, [X28]
	0x03B12470 SXTW X11, W11
	0x03B12474 MADD X12, X11, X26, X12
	0x03B12478 LDR X13, [X13 + 0xB8]
	0x03B1247C LDUR V0, [X13 + 0x4]
	0x03B12480 LDR V1, [X13 + 0xC]
	0x03B12484 STR D0, [X12 + 0x20]
	0x03B12488 STR S1, [X12 + 0x28]
	0x03B1248C LDR X12, [X21]
	0x03B12490 CBZ X12, 0x3B12918
	0x03B12494 LDR W13, [X12 + 0x18]
	0x03B12498 CMP W8, W13
	0x03B1249C B.CS 0x3B12914
	0x03B124A0 LDR X13, [X28]
	0x03B124A4 ADD X8, X12, X8, 0x4, LSL
	0x03B124A8 LDR X13, [X13 + 0xB8]
	0x03B124AC LDR V0, [X13 + 0x1]
	0x03B124B0 STR V0, [X8 + 0x2]
	0x03B124B4 LDR X8, [X21]
	0x03B124B8 CBZ X8, 0x3B12918
	0x03B124BC LDR W12, [X8 + 0x18]
	0x03B124C0 CMP W9, W12
	0x03B124C4 B.CS 0x3B12914
	0x03B124C8 LDR X12, [X28]
	0x03B124CC ADD X8, X8, X9, 0x4, LSL
	0x03B124D0 LDR X12, [X12 + 0xB8]
	0x03B124D4 LDR V0, [X12 + 0x1]
	0x03B124D8 STR V0, [X8 + 0x2]
	0x03B124DC LDR X8, [X21]
	0x03B124E0 CBZ X8, 0x3B12918
	0x03B124E4 LDR W9, [X8 + 0x18]
	0x03B124E8 CMP W10, W9
	0x03B124EC B.CS 0x3B12914
	0x03B124F0 LDR X9, [X28]
	0x03B124F4 ADD X8, X8, X10, 0x4, LSL
	0x03B124F8 LDR X9, [X9 + 0xB8]
	0x03B124FC LDR V0, [X9 + 0x1]
	0x03B12500 STR V0, [X8 + 0x2]
	0x03B12504 LDR X8, [X21]
	0x03B12508 CBZ X8, 0x3B12918
	0x03B1250C LDR W9, [X8 + 0x18]
	0x03B12510 CMP W11, W9
	0x03B12514 B.CS 0x3B12914
	0x03B12518 LDR X9, [X28]
	0x03B1251C ADD X8, X8, X11, 0x4, LSL
	0x03B12520 LDR X9, [X9 + 0xB8]
	0x03B12524 LDR V0, [X9 + 0x1]
	0x03B12528 STR V0, [X8 + 0x2]
	0x03B1252C LDR X8, [X31 + 0x28]
	0x03B12530 LDR X8, [X8]
	0x03B12534 CBZ X8, 0x3B12918
	0x03B12538 LDR W9, [X8 + 0x18]
	0x03B1253C SUB W10, W29, 0x11
	0x03B12540 CMP W10, W9
	0x03B12544 B.CS 0x3B12914
	0x03B12548 ADD X11, X8, W10, 0x2, SXTW
	0x03B1254C SUB W10, W29, 0x10
	0x03B12550 CMP W10, W9
	0x03B12554 STR W27, [X11 + 0x20]
	0x03B12558 B.CS 0x3B12914
	0x03B1255C ADD X11, X8, W10, 0x2, SXTW
	0x03B12560 SUB W10, W29, 0xF
	0x03B12564 CMP W10, W9
	0x03B12568 STR W22, [X11 + 0x20]
	0x03B1256C B.CS 0x3B12914
	0x03B12570 ADD X11, X8, W10, 0x2, SXTW
	0x03B12574 SUB W10, W29, 0xE
	0x03B12578 CMP W10, W9
	0x03B1257C STR W25, [X11 + 0x20]
	0x03B12580 B.CS 0x3B12914
	0x03B12584 ADD X11, X8, W10, 0x2, SXTW
	0x03B12588 SUB W10, W29, 0xD
	0x03B1258C CMP W10, W9
	0x03B12590 STR W25, [X11 + 0x20]
	0x03B12594 B.CS 0x3B12914
	0x03B12598 ADD X11, X8, W10, 0x2, SXTW
	0x03B1259C SUB W10, W29, 0xC
	0x03B125A0 CMP W10, W9
	0x03B125A4 STR W19, [X11 + 0x20]
	0x03B125A8 B.CS 0x3B12914
	0x03B125AC ADD X10, X8, W10, 0x2, SXTW
	0x03B125B0 STR W27, [X10 + 0x20]
	0x03B125B4 TBZ X16, 0x0, 0x3B1281C
	0x03B125B8 SUB W11, W29, 0xB
	0x03B125BC CMP W11, W9
	0x03B125C0 B.CS 0x3B12914
	0x03B125C4 SUB W12, W29, 0xA
	0x03B125C8 ADD W10, W19, 0x1
	0x03B125CC ADD X11, X8, W11, 0x2, SXTW
	0x03B125D0 CMP W12, W9
	0x03B125D4 STR W10, [X11 + 0x20]
	0x03B125D8 B.CS 0x3B12914
	0x03B125DC ADD X13, X8, W12, 0x2, SXTW
	0x03B125E0 SUB W12, W29, 0x9
	0x03B125E4 ADD W11, W19, 0x2
	0x03B125E8 CMP W12, W9
	0x03B125EC STR W11, [X13 + 0x20]
	0x03B125F0 B.CS 0x3B12914
	0x03B125F4 ADD X13, X8, W12, 0x2, SXTW
	0x03B125F8 SUB W12, W29, 0x8
	0x03B125FC CMP W12, W9
	0x03B12600 STR W22, [X13 + 0x20]
	0x03B12604 B.CS 0x3B12914
	0x03B12608 ADD X13, X8, W12, 0x2, SXTW
	0x03B1260C SUB W12, W29, 0x7
	0x03B12610 CMP W12, W9
	0x03B12614 STR W22, [X13 + 0x20]
	0x03B12618 B.CS 0x3B12914
	0x03B1261C ADD X13, X8, W12, 0x2, SXTW
	0x03B12620 SUB W12, W29, 0x6
	0x03B12624 CMP W12, W9
	0x03B12628 STR W27, [X13 + 0x20]
	0x03B1262C B.CS 0x3B12914
	0x03B12630 ADD X13, X8, W12, 0x2, SXTW
	0x03B12634 SUB W12, W29, 0x5
	0x03B12638 CMP W12, W9
	0x03B1263C STR W10, [X13 + 0x20]
	0x03B12640 B.CS 0x3B12914
	0x03B12644 ADD X13, X8, W12, 0x2, SXTW
	0x03B12648 SUB W12, W29, 0x4
	0x03B1264C CMP W12, W9
	0x03B12650 STR W19, [X13 + 0x20]
	0x03B12654 B.CS 0x3B12914
	0x03B12658 ADD X13, X8, W12, 0x2, SXTW
	0x03B1265C SUB W12, W29, 0x3
	0x03B12660 CMP W12, W9
	0x03B12664 STR W25, [X13 + 0x20]
	0x03B12668 B.CS 0x3B12914
	0x03B1266C ADD X14, X8, W12, 0x2, SXTW
	0x03B12670 SUB W12, W29, 0x2
	0x03B12674 ADD W13, W19, 0x3
	0x03B12678 CMP W12, W9
	0x03B1267C STR W13, [X14 + 0x20]
	0x03B12680 B.CS 0x3B12914
	0x03B12684 SUB W14, W29, 0x1
	0x03B12688 ADD X12, X8, W12, 0x2, SXTW
	0x03B1268C CMP W14, W9
	0x03B12690 STR W13, [X12 + 0x20]
	0x03B12694 B.CS 0x3B12914
	0x03B12698 ADD W12, W19, 0x4
	0x03B1269C ADD X14, X8, W14, 0x2, SXTW
	0x03B126A0 CMP W29, W9
	0x03B126A4 STR W12, [X14 + 0x20]
	0x03B126A8 B.CS 0x3B12914
	0x03B126AC ADD W14, W29, 0x1
	0x03B126B0 ADD X15, X8, W29, 0x2, SXTW
	0x03B126B4 CMP W14, W9
	0x03B126B8 STR W19, [X15 + 0x20]
	0x03B126BC B.CS 0x3B12914
	0x03B126C0 ADD X15, X8, W14, 0x2, SXTW
	0x03B126C4 ADD W14, W29, 0x2
	0x03B126C8 CMP W14, W9
	0x03B126CC STR W22, [X15 + 0x20]
	0x03B126D0 B.CS 0x3B12914
	0x03B126D4 ADD X15, X8, W14, 0x2, SXTW
	0x03B126D8 ADD W14, W29, 0x3
	0x03B126DC CMP W14, W9
	0x03B126E0 STR W11, [X15 + 0x20]
	0x03B126E4 B.CS 0x3B12914
	0x03B126E8 ADD X15, X8, W14, 0x2, SXTW
	0x03B126EC ADD W14, W29, 0x4
	0x03B126F0 CMP W14, W9
	0x03B126F4 STR W13, [X15 + 0x20]
	0x03B126F8 B.CS 0x3B12914
	0x03B126FC ADD X15, X8, W14, 0x2, SXTW
	0x03B12700 ADD W14, W29, 0x5
	0x03B12704 CMP W14, W9
	0x03B12708 STR W13, [X15 + 0x20]
	0x03B1270C B.CS 0x3B12914
	0x03B12710 ADD X15, X8, W14, 0x2, SXTW
	0x03B12714 ADD W14, W29, 0x6
	0x03B12718 CMP W14, W9
	0x03B1271C STR W25, [X15 + 0x20]
	0x03B12720 B.CS 0x3B12914
	0x03B12724 ADD X15, X8, W14, 0x2, SXTW
	0x03B12728 ADD W14, W29, 0x7
	0x03B1272C CMP W14, W9
	0x03B12730 STR W22, [X15 + 0x20]
	0x03B12734 B.CS 0x3B12914
	0x03B12738 ADD X15, X8, W14, 0x2, SXTW
	0x03B1273C ADD W14, W29, 0x8
	0x03B12740 CMP W14, W9
	0x03B12744 STR W10, [X15 + 0x20]
	0x03B12748 B.CS 0x3B12914
	0x03B1274C ADD X15, X8, W14, 0x2, SXTW
	0x03B12750 ADD W14, W29, 0x9
	0x03B12754 CMP W14, W9
	0x03B12758 STR W27, [X15 + 0x20]
	0x03B1275C B.CS 0x3B12914
	0x03B12760 ADD X15, X8, W14, 0x2, SXTW
	0x03B12764 ADD W14, W29, 0xA
	0x03B12768 CMP W14, W9
	0x03B1276C STR W19, [X15 + 0x20]
	0x03B12770 B.CS 0x3B12914
	0x03B12774 ADD X15, X8, W14, 0x2, SXTW
	0x03B12778 ADD W14, W29, 0xB
	0x03B1277C CMP W14, W9
	0x03B12780 STR W19, [X15 + 0x20]
	0x03B12784 B.CS 0x3B12914
	0x03B12788 ADD X15, X8, W14, 0x2, SXTW
	0x03B1278C ADD W14, W29, 0xC
	0x03B12790 CMP W14, W9
	0x03B12794 STR W12, [X15 + 0x20]
	0x03B12798 B.CS 0x3B12914
	0x03B1279C ADD X15, X8, W14, 0x2, SXTW
	0x03B127A0 ADD W14, W29, 0xD
	0x03B127A4 CMP W14, W9
	0x03B127A8 STR W10, [X15 + 0x20]
	0x03B127AC B.CS 0x3B12914
	0x03B127B0 ADD X15, X8, W14, 0x2, SXTW
	0x03B127B4 ADD W14, W29, 0xE
	0x03B127B8 CMP W14, W9
	0x03B127BC STR W12, [X15 + 0x20]
	0x03B127C0 B.CS 0x3B12914
	0x03B127C4 ADD X15, X8, W14, 0x2, SXTW
	0x03B127C8 ADD W14, W29, 0xF
	0x03B127CC CMP W14, W9
	0x03B127D0 STR W13, [X15 + 0x20]
	0x03B127D4 B.CS 0x3B12914
	0x03B127D8 ADD W13, W29, 0x10
	0x03B127DC ADD X14, X8, W14, 0x2, SXTW
	0x03B127E0 CMP W13, W9
	0x03B127E4 STR W11, [X14 + 0x20]
	0x03B127E8 B.CS 0x3B12914
	0x03B127EC ADD X14, X8, W13, 0x2, SXTW
	0x03B127F0 ADD W13, W29, 0x11
	0x03B127F4 CMP W13, W9
	0x03B127F8 STR W11, [X14 + 0x20]
	0x03B127FC B.CS 0x3B12914
	0x03B12800 ADD W11, W29, 0x12
	0x03B12804 ADD X13, X8, W13, 0x2, SXTW
	0x03B12808 CMP W11, W9
	0x03B1280C STR W10, [X13 + 0x20]
	0x03B12810 B.CS 0x3B12914
	0x03B12814 ADD X8, X8, W11, 0x2, SXTW
	0x03B12818 STR W12, [X8 + 0x20]
	0x03B1281C LDR X8, [X31 + 0x20]
	0x03B12820 ADD X24, X24, 0x1
	0x03B12824 ADD W29, W29, W1
	0x03B12828 ADD W19, W19, W17
	0x03B1282C CMP X24, X8
	0x03B12830 B.NE 0x3B121F8
	0x03B12834 LDR X19, [X31 + 0x8]
	0x03B12838 LDR X0, [X19]
	0x03B1283C CBZ X0, 0x3B12918
	0x03B12840 LDR X1, [X19 + 0x10]
	0x03B12844 MOV X2, X31
	0x03B12848 BL 0x3C17F08
	0x03B1284C LDR X0, [X19]
	0x03B12850 CBZ X0, 0x3B12918
	0x03B12854 LDR X1, [X19 + 0x18]
	0x03B12858 MOV X2, X31
	0x03B1285C BL 0x3C17FB4
	0x03B12860 LDR X0, [X19]
	0x03B12864 CBZ X0, 0x3B12918
	0x03B12868 LDR X1, [X19 + 0x20]
	0x03B1286C MOV X2, X31
	0x03B12870 BL 0x3C18060
	0x03B12874 LDR X0, [X19]
	0x03B12878 CBZ X0, 0x3B12918
	0x03B1287C LDR X8, [X31 + 0x28]
	0x03B12880 LDP X20, X19, [X31 + 0x80]
	0x03B12884 LDP X22, X21, [X31 + 0x70]
	0x03B12888 LDP X24, X23, [X31 + 0x60]
	0x03B1288C LDR X1, [X8]
	0x03B12890 LDP X26, X25, [X31 + 0x50]
	0x03B12894 LDP X28, X27, [X31 + 0x40]
	0x03B12898 LDP X29, X30, [X31 + 0x30]
	0x03B1289C MOV X2, X31
	0x03B128A0 ADD X31, X31, 0x90
	0x03B128A4 B 0x3C18FF0
	0x03B128A8 LDR X0, [X29]
	0x03B128AC CBZ X0, 0x3B12918
	0x03B128B0 LDR X1, [X29 + 0x40]
	0x03B128B4 MOV X2, X31
	0x03B128B8 BL 0x3C18FF0
	0x03B128BC LDR X0, [X29]
	0x03B128C0 CBZ X0, 0x3B12918
	0x03B128C4 LDR X1, [X29 + 0x10]
	0x03B128C8 MOV X2, X31
	0x03B128CC BL 0x3C17F08
	0x03B128D0 LDR X0, [X29]
	0x03B128D4 CBZ X0, 0x3B12918
	0x03B128D8 LDR X1, [X29 + 0x18]
	0x03B128DC MOV X2, X31
	0x03B128E0 BL 0x3C17FB4
	0x03B128E4 LDR X0, [X29]
	0x03B128E8 CBZ X0, 0x3B12918
	0x03B128EC LDR X1, [X21]
	0x03B128F0 LDP X20, X19, [X31 + 0x80]
	0x03B128F4 LDP X22, X21, [X31 + 0x70]
	0x03B128F8 LDP X24, X23, [X31 + 0x60]
	0x03B128FC LDP X26, X25, [X31 + 0x50]
	0x03B12900 LDP X28, X27, [X31 + 0x40]
	0x03B12904 LDP X29, X30, [X31 + 0x30]
	0x03B12908 MOV X2, X31
	0x03B1290C ADD X31, X31, 0x90
	0x03B12910 B 0x3C18060
	0x03B12914 BL 0x1C16F28
	0x03B12918 BL 0x1C16F20
	0x03B1291C STR X30, [X31 - 0x20]!
	0x03B12920 STP X20, X19, [X31 + 0x10]
	0x03B12924 ADRP X20, 0x8D0000
	0x03B12928 LDRB W8, [X20 + 0x690]
	0x03B1292C MOV X19, X0
	0x03B12930 TBNZ X8, 0x0, 0x3B12948
	0x03B12934 ADRP X0, 0x5E1000
	0x03B12938 LDR X0, [X0 + 0x598]
	0x03B1293C BL 0x1C16CF4
	0x03B12940 MOVZ W8, 0x1
	0x03B12944 STRB W8, [X20 + 0x690]
	0x03B12948 LDR X0, [X19 + 0x10]
	0x03B1294C CBZ X0, 0x3B129B0
	0x03B12950 LDR W2, [X0 + 0x18]
	0x03B12954 ADRP X20, 0x5E1000
	0x03B12958 LDR X20, [X20 + 0x598]
	0x03B1295C MOV W1, W31
	0x03B12960 MOV X3, X31
	0x03B12964 BL 0x339FA34
	0x03B12968 STR W31, [X19 + 0x8]
	0x03B1296C LDR X0, [X20]
	0x03B12970 LDR X20, [X19]
	0x03B12974 LDR W8, [X0 + 0xE0]
	0x03B12978 CBNZ W8, 0x3B12980
	0x03B1297C BL 0x1C16DFC
	0x03B12980 MOV X0, X20
	0x03B12984 MOV X1, X31
	0x03B12988 MOV X2, X31
	0x03B1298C BL 0x3C354F8
	0x03B12990 TBZ X0, 0x0, 0x3B129B0
	0x03B12994 LDR X0, [X19]
	0x03B12998 CBZ X0, 0x3B129BC
	0x03B1299C LDR X1, [X19 + 0x10]
	0x03B129A0 LDP X20, X19, [X31 + 0x10]
	0x03B129A4 MOV X2, X31
	0x03B129A8 LDR X30, [X31], #0x20
	0x03B129AC B 0x3C17F08
	0x03B129B0 LDP X20, X19, [X31 + 0x10]
	0x03B129B4 LDR X30, [X31], #0x20
	0x03B129B8 RET
	0x03B129BC BL 0x1C16F20
	0x03B129C0 SUB X31, X31, 0x60
	0x03B129C4 STP X30, X21, [X31 + 0x40]
	0x03B129C8 STP X20, X19, [X31 + 0x50]
	0x03B129CC ADRP X21, 0x8D0000
	0x03B129D0 LDRB W8, [X21 + 0x691]
	0x03B129D4 MOV W20, W1
	0x03B129D8 MOV X19, X0
	0x03B129DC TBNZ X8, 0x0, 0x3B12A00
	0x03B129E0 ADRP X0, 0x5E1000
	0x03B129E4 LDR X0, [X0 + 0x598]
	0x03B129E8 BL 0x1C16CF4
	0x03B129EC ADRP X0, 0x646000
	0x03B129F0 LDR X0, [X0 + 0x348]
	0x03B129F4 BL 0x1C16CF4
	0x03B129F8 MOVZ W8, 0x1
	0x03B129FC STRB W8, [X21 + 0x691]
	0x03B12A00 LDR X0, [X19 + 0x10]
	0x03B12A04 CBZ X0, 0x3B12AE4
	0x03B12A08 LDR W2, [X0 + 0x18]
	0x03B12A0C ADRP X21, 0x5E1000
	0x03B12A10 LDR X21, [X21 + 0x598]
	0x03B12A14 MOV W1, W31
	0x03B12A18 MOV X3, X31
	0x03B12A1C BL 0x339FA34
	0x03B12A20 STR W31, [X19 + 0x8]
	0x03B12A24 TBZ X20, 0x0, 0x3B12A64
	0x03B12A28 LDR X0, [X21]
	0x03B12A2C LDR X20, [X19]
	0x03B12A30 LDR W8, [X0 + 0xE0]
	0x03B12A34 CBNZ W8, 0x3B12A3C
	0x03B12A38 BL 0x1C16DFC
	0x03B12A3C MOV X0, X20
	0x03B12A40 MOV X1, X31
	0x03B12A44 MOV X2, X31
	0x03B12A48 BL 0x3C354F8
	0x03B12A4C TBZ X0, 0x0, 0x3B12A64
	0x03B12A50 LDR X0, [X19]
	0x03B12A54 CBZ X0, 0x3B12AF4
	0x03B12A58 LDR X1, [X19 + 0x10]
	0x03B12A5C MOV X2, X31
	0x03B12A60 BL 0x3C17F08
	0x03B12A64 LDR X0, [X21]
	0x03B12A68 LDR X20, [X19]
	0x03B12A6C LDR W8, [X0 + 0xE0]
	0x03B12A70 CBNZ W8, 0x3B12A78
	0x03B12A74 BL 0x1C16DFC
	0x03B12A78 MOV X0, X20
	0x03B12A7C MOV X1, X31
	0x03B12A80 MOV X2, X31
	0x03B12A84 BL 0x3C354F8
	0x03B12A88 TBZ X0, 0x0, 0x3B12AE4
	0x03B12A8C ADRP X20, 0x646000
	0x03B12A90 LDR X20, [X20 + 0x348]
	0x03B12A94 LDR X19, [X19]
	0x03B12A98 LDR X0, [X20]
	0x03B12A9C LDR W8, [X0 + 0xE0]
	0x03B12AA0 CBNZ W8, 0x3B12AAC
	0x03B12AA4 BL 0x1C16DFC
	0x03B12AA8 LDR X0, [X20]
	0x03B12AAC LDR X8, [X0 + 0xB8]
	0x03B12AB0 LDR X9, [X8 + 0x30]
	0x03B12AB4 LDR V0, [X8 + 0x2]
	0x03B12AB8 STR X9, [X31 + 0x30]
	0x03B12ABC STR V0, [X31 + 0x2]
	0x03B12AC0 CBZ X19, 0x3B12AF4
	0x03B12AC4 LDR V0, [X31 + 0x2]
	0x03B12AC8 LDR X8, [X31 + 0x30]
	0x03B12ACC ADD X1, X31, 0x0
	0x03B12AD0 MOV X0, X19
	0x03B12AD4 MOV X2, X31
	0x03B12AD8 STR V0, [X31]
	0x03B12ADC STR X8, [X31 + 0x10]
	0x03B12AE0 BL 0x3C17814
	0x03B12AE4 LDP X20, X19, [X31 + 0x50]
	0x03B12AE8 LDP X30, X21, [X31 + 0x40]
	0x03B12AEC ADD X31, X31, 0x60
	0x03B12AF0 RET
	0x03B12AF4 BL 0x1C16F20
	0x03B12AF8 STR X30, [X31 - 0x10]!
	0x03B12AFC MOV X8, X0
	0x03B12B00 LDR X0, [X0 + 0x10]
	0x03B12B04 CBZ X0, 0x3B12B30
	0x03B12B08 LDR W1, [X8 + 0x8]
	0x03B12B0C LDR W8, [X0 + 0x18]
	0x03B12B10 SUB W2, W8, W1
	0x03B12B14 CMP W2, 0x1
	0x03B12B18 B.LT 0x3B12B28
	0x03B12B1C MOV X3, X31
	0x03B12B20 LDR X30, [X31], #0x10
	0x03B12B24 B 0x339FA34
	0x03B12B28 LDR X30, [X31], #0x10
	0x03B12B2C RET
	0x03B12B30 BL 0x1C16F20
	0x03B12B34 STR X30, [X31 - 0x10]!
	0x03B12B38 LDR X0, [X0 + 0x10]
	0x03B12B3C CBZ X0, 0x3B12B64
	0x03B12B40 LDR W8, [X0 + 0x18]
	0x03B12B44 SUB W2, W8, W1
	0x03B12B48 CMP W2, 0x1
	0x03B12B4C B.LT 0x3B12B5C
	0x03B12B50 MOV X3, X31
	0x03B12B54 LDR X30, [X31], #0x10
	0x03B12B58 B 0x339FA34
	0x03B12B5C LDR X30, [X31], #0x10
	0x03B12B60 RET
	0x03B12B64 BL 0x1C16F20
	0x03B12B68 STR X30, [X31 - 0x30]!
	0x03B12B6C STP X22, X21, [X31 + 0x10]
	0x03B12B70 STP X20, X19, [X31 + 0x20]
	0x03B12B74 ADRP X22, 0x8D0000
	0x03B12B78 LDRB W8, [X22 + 0x692]
	0x03B12B7C MOV W20, W2
	0x03B12B80 MOV W21, W1
	0x03B12B84 MOV X19, X0
	0x03B12B88 TBNZ X8, 0x0, 0x3B12BA0
	0x03B12B8C ADRP X0, 0x5E1000
	0x03B12B90 LDR X0, [X0 + 0x598]
	0x03B12B94 BL 0x1C16CF4
	0x03B12B98 MOVZ W8, 0x1
	0x03B12B9C STRB W8, [X22 + 0x692]
	0x03B12BA0 LDR X0, [X19 + 0x10]
	0x03B12BA4 CBZ X0, 0x3B12C28
	0x03B12BA8 LDR W8, [X0 + 0x18]
	0x03B12BAC SUB W2, W8, W21
	0x03B12BB0 CMP W2, 0x1
	0x03B12BB4 B.LT 0x3B12BC4
	0x03B12BB8 MOV W1, W21
	0x03B12BBC MOV X3, X31
	0x03B12BC0 BL 0x339FA34
	0x03B12BC4 TBZ X20, 0x0, 0x3B12C18
	0x03B12BC8 ADRP X8, 0x5E1000
	0x03B12BCC LDR X8, [X8 + 0x598]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move [X31+24], W3
	015 Move X20, 0x8D1000
	016 Move X23, 0x5E2000
	017 Move W8, [X20+1677]
	018 Move X23, [X23+1432]
	019 Move W21, W2
	020 Move X22, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {52}
	026 Move X0, 0x60E000
	027 Move X0, [X0+2808]
	028 Call 0x1C17CF4
	029 Move X0, 0x5E3000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0x5E9000
	033 Move X0, [X0+1792]
	034 Call 0x1C17CF4
	035 Move X0, 0x5E2000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x647000
	039 Move X0, [X0+840]
	040 Call 0x1C17CF4
	041 Move X0, 0x63C000
	042 Move X0, [X0+2696]
	043 Call 0x1C17CF4
	044 Move X0, 0x5E4000
	045 Move X0, [X0+2480]
	046 Call 0x1C17CF4
	047 Move X0, 0x63D000
	048 Move X0, [X0+72]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+1677], W8
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X22
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {72}
	065 Move X8, 0x5E9000
	066 Move X8, [X8+1792]
	067 Move X0, [X8]
	068 Call 0x1C17F10
	069 Move X1, X31
	070 Move X22, X0
	071 Call Mesh..ctor, X0
	072 Compare X22, 0
	073 JumpIfEqual {477}
	074 Move X0, X22
	075 Move X1, X31
	076 Call Mesh.Clear, X0
	077 Move X24, 0x5E4000
	078 Move X25, 0x63C000
	079 Move X26, 0x60E000
	080 Move X27, 0x63D000
	081 Move X20, 0x5E3000
	082 Move X23, 0x647000
	083 Move X24, [X24+2480]
	084 Move X25, [X25+2696]
	085 Move X26, [X26+2808]
	086 Move X27, [X27+72]
	087 Move X20, [X20+3672]
	088 Move X23, [X23+840]
	089 Move W8, [X31+24]
	090 Move W9, 8
	091 Move W12, 0xFFFC
	092 Move [X19], X22
	093 And W31, W8, 1
	094 Move W8, 4
	095 NotImplemented "Instruction CSEL not yet implemented."
	096 Move W10, 6
	097 Move W11, 36
	098 Move [X19+8], W31
	099 NotImplemented "Instruction UDIV not yet implemented."
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 Move X0, [X24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 Multiply W21, W28, W9
	105 Move W1, W21
	106 Move [X31+16], W10
	107 Move [X31+20], W9
	108 Multiply W22, W28, W10
	109 Call 0x1C17D6C
	110 Move [X19+16], X0
	111 Move X0, [X25]
	112 Move W1, W21
	113 Call 0x1C17D6C
	114 Move [X19+40], X0
	115 Move X0, [X25]
	116 Move W1, W21
	117 Call 0x1C17D6C
	118 Move [X19+48], X0
	119 Move X0, [X26]
	120 Move W1, W21
	121 Call 0x1C17D6C
	122 Move [X19+56], X0
	123 Move X0, [X24]
	124 Move W1, W21
	125 Call 0x1C17D6C
	126 Move [X19+24], X0
	127 Move X0, [X27]
	128 Move W1, W21
	129 Call 0x1C17D6C
	130 Move [X19+32], X0
	131 Move X0, [X20]
	132 Move W1, W22
	133 Call 0x1C17D6C
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X31+12], W28
	136 Move [X19+64], X0
	137 Move W8, [X31+20]
	138 Move X21, 0x5E2000
	139 Move X22, 0x5EA000
	140 Move W1, W31
	141 Move W8, W8
	142 Move [X31], X8
	143 Move X21, [X21+1440]
	144 Move X22, [X22+3848]
	145 Move W28, W31
	146 Move W29, 12
	147 Move X24, [X31]
	148 Move W25, W1
	149 Move [X31+28], W1
	150 Move X27, X25
	151 ShiftRight X27, 32
	152 And X27, X27, 0x7FFFFFFF
	153 Move X8, 0x8C7000
	154 Move W8, [X8+1923]
	155 Move X26, [X19+16]
	156 Compare W8, 0
	157 JumpIfNotEqual {163}
	158 Move X0, X21
	159 Call 0x1C17CF4
	160 Move X8, 0x8C7000
	161 Move W9, 1
	162 Move [X8+1923], W9
	163 Compare X26, 0
	164 JumpIfEqual {477}
	165 Move W8, [X26+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, [X21]
	168 NotImplemented "Instruction SBFM not yet implemented."
	169 Move X8, [X8+184]
	170 Move V0, [X8]
	171 Move V1, [X8+8]
	172 NotImplemented "Instruction NOP not yet implemented."
	173 NotImplemented "Instruction MADD not yet implemented."
	174 Move [X8+32], D0
	175 Move [X8+40], S1
	176 Move X8, 0x8C8000
	177 Move W8, [X8+1935]
	178 Move X26, [X19+40]
	179 Compare W8, 0
	180 JumpIfNotEqual {186}
	181 Move X0, X22
	182 Call 0x1C17CF4
	183 Move W8, 1
	184 Move X9, 0x8C8000
	185 Move [X9+1935], W8
	186 Compare X26, 0
	187 JumpIfEqual {477}
	188 Move W8, [X26+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X8, [X22]
	191 Move X8, [X8+184]
	192 Move V0, [X8]
	193 Add X8, X26, X20
	194 Move [X8+32], D0
	195 Move X8, [X19+48]
	196 Compare X8, 0
	197 JumpIfEqual {477}
	198 Move W9, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X9, [X22]
	201 Add X8, X8, X20
	202 Move X9, [X9+184]
	203 Move V0, [X9]
	204 Move [X8+32], D0
	205 Move X0, [X23]
	206 Move X26, [X19+56]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {212}
	210 Call 0x1C17DFC
	211 Move X0, [X23]
	212 Compare X26, 0
	213 JumpIfEqual {477}
	214 Move W8, [X26+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X8, [X0+184]
	217 Add X9, X26, X20
	218 Move W8, [X8]
	219 Move [X9+32], W8
	220 Move X8, [X19+24]
	221 Compare X8, 0
	222 JumpIfEqual {477}
	223 Move W9, [X8+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X9, [X23]
	226 NotImplemented "Instruction NOP not yet implemented."
	227 NotImplemented "Instruction MADD not yet implemented."
	228 Move X9, [X9+184]
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 Move V1, [X9+12]
	231 Move [X8+32], D0
	232 Move [X8+40], S1
	233 Move X8, [X19+32]
	234 Compare X8, 0
	235 JumpIfEqual {477}
	236 Move W9, [X8+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X9, [X23]
	239 Add X8, X8, X20
	240 Subtract X24, X24, 1
	241 Add X25, X25, 1
	242 Move X9, [X9+184]
	243 Move V0, [X9+1]
	244 Move X9, 1
	245 Add X27, X27, X9
	246 Move [X8+2], V0
	247 Move X8, [X19+64]
	248 Compare X8, 0
	249 JumpIfEqual {477}
	250 Move W9, [X8+24]
	251 Move W1, [X31+28]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X10, W28
	254 Or X10, X10, 1
	255 Add X11, X8, W28
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move [X11+32], W1
	258 Add X11, X8, X10
	259 Add W10, W28, 2
	260 Or W13, W1, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move [X11+32], W13
	263 Add X11, X8, W10
	264 Add W10, W28, 3
	265 Or W14, W1, 2
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X11+32], W14
	268 Add X11, X8, W10
	269 Add W10, W28, 4
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move [X11+32], W14
	272 Add X11, X8, W10
	273 Add W10, W28, 5
	274 Or W12, W1, 3
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move [X11+32], W12
	277 Add X10, X8, W10
	278 Move [X10+32], W1
	279 Move W10, [X31+24]
	280 Move TEMP, X10
	281 And TEMP, TEMP, 1
	282 Compare TEMP, 1
	283 JumpIfNotEqual {408}
	284 Add W11, W28, 6
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add W15, W28, 7
	287 Add W10, W1, 4
	288 Add X11, X8, W11
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move [X11+32], W10
	291 Add X16, X8, W15
	292 Add W15, W28, 8
	293 Add W11, W1, 5
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move [X16+32], W11
	296 Add X16, X8, W15
	297 Add W15, W28, 9
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move [X16+32], W13
	300 Add X16, X8, W15
	301 Add W15, W28, 10
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move [X16+32], W13
	304 Add X16, X8, W15
	305 Add W15, W28, 11
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move [X16+32], W1
	308 Add X16, X8, W15
	309 Add W15, W28, 12
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move [X16+32], W10
	312 Add X16, X8, W15
	313 Add W15, W28, 13
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move [X16+32], W12
	316 Add X16, X8, W15
	317 Add W15, W28, 14
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move [X16+32], W14
	320 Add X17, X8, W15
	321 Add W15, W28, 15
	322 Add W16, W1, 6
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move [X17+32], W16
	325 Add W17, W28, 16
	326 Add X15, X8, W15
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move [X15+32], W16
	329 Add X0, X8, W17
	330 Add W17, W28, 17
	331 Add W15, W1, 7
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move [X0+32], W15
	334 Add X0, X8, W17
	335 Add W17, W28, 18
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Move [X0+32], W12
	338 Add X0, X8, W17
	339 Add W17, W28, 19
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move [X0+32], W13
	342 Add X0, X8, W17
	343 Add W17, W28, 20
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move [X0+32], W11
	346 Add X0, X8, W17
	347 Add W17, W28, 21
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move [X0+32], W16
	350 Add X0, X8, W17
	351 Add W17, W28, 22
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move [X0+32], W16
	354 Add X0, X8, W17
	355 Add W17, W28, 23
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move [X0+32], W14
	358 Add W14, W28, 24
	359 Add X17, X8, W17
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Move [X17+32], W13
	362 Add W13, W28, 25
	363 Add X14, X8, W14
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move [X14+32], W10
	366 Add X14, X8, W13
	367 Add W13, W28, 26
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move [X14+32], W1
	370 Add X14, X8, W13
	371 Add W13, W28, 27
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move [X14+32], W12
	374 Add X14, X8, W13
	375 Add W13, W28, 28
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move [X14+32], W12
	378 Add W12, W28, 29
	379 Add X13, X8, W13
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move [X13+32], W15
	382 Add X13, X8, W12
	383 Add W12, W28, 30
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move [X13+32], W10
	386 Add X13, X8, W12
	387 Add W12, W28, 31
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move [X13+32], W15
	390 Add X13, X8, W12
	391 Add W12, W28, 32
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move [X13+32], W16
	394 Add X13, X8, W12
	395 Add W12, W28, 33
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move [X13+32], W11
	398 Add X13, X8, W12
	399 Add W12, W28, 34
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move [X13+32], W11
	402 Add W11, W28, 35
	403 Add X12, X8, W12
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move [X12+32], W10
	406 Add X8, X8, W11
	407 Move [X8+32], W15
	408 Move W8, [X31+20]
	409 Move W9, [X31+12]
	410 Add W1, W1, W8
	411 NotImplemented "Instruction SDIV not yet implemented."
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move W8, [X31+16]
	414 Add W28, W28, W8
	415 Move X0, [X19]
	416 Compare X0, 0
	417 JumpIfEqual {477}
	418 Move X1, [X19+16]
	419 Move X2, X31
	420 Call Mesh.set_vertices, X0, X1
	421 Move X0, [X19]
	422 Compare X0, 0
	423 JumpIfEqual {477}
	424 Move X1, [X19+24]
	425 Move X2, X31
	426 Call Mesh.set_normals, X0, X1
	427 Move X0, [X19]
	428 Compare X0, 0
	429 JumpIfEqual {477}
	430 Move X1, [X19+32]
	431 Move X2, X31
	432 Call Mesh.set_tangents, X0, X1
	433 Move X0, [X19]
	434 Compare X0, 0
	435 JumpIfEqual {477}
	436 Move X1, [X19+64]
	437 Move X2, X31
	438 Call Mesh.set_triangles, X0, X1
	439 Move X0, [X23]
	440 Move X20, [X19]
	441 Move W8, [X0+224]
	442 Compare W8, 0
	443 JumpIfNotEqual {446}
	444 Call 0x1C17DFC
	445 Move X0, [X23]
	446 Move X8, [X0+184]
	447 Move X9, [X8+48]
	448 Move V0, [X8+2]
	449 Move [X31+80], X9
	450 Move [X31+4], V0
	451 Compare X20, 0
	452 JumpIfEqual {477}
	453 Move V0, [X31+4]
	454 Move X8, [X31+80]
	455 Add X1, X31, 32
	456 Move X0, X20
	457 Move X2, X31
	458 Move [X31+2], V0
	459 Move [X31+48], X8
	460 Call Mesh.set_bounds, X0, X1
	461 Move [X19+72], X31
	462 Move X20, [X31+176]
	463 Move X19, [X31+184]
	464 Move X22, [X31+160]
	465 Move X21, [X31+168]
	466 Move X24, [X31+144]
	467 Move X23, [X31+152]
	468 Move X26, [X31+128]
	469 Move X25, [X31+136]
	470 Move X28, [X31+112]
	471 Move X27, [X31+120]
	472 Move X29, [X31+96]
	473 Move X30, [X31+104]
	474 Add X31, X31, 192
	475 Return 
	476 Call 0x1C17F28
	477 Call 0x1C17F20

Method: System.Void ResizeMeshInfo(System.Int32 size)

Disassembly:
	0x03B12BD0 LDR X20, [X19]
	0x03B12BD4 LDR X0, [X8]
	0x03B12BD8 LDR W8, [X0 + 0xE0]
	0x03B12BDC CBNZ W8, 0x3B12BE4
	0x03B12BE0 BL 0x1C16DFC
	0x03B12BE4 MOV X0, X20
	0x03B12BE8 MOV X1, X31
	0x03B12BEC MOV X2, X31
	0x03B12BF0 BL 0x3C354F8
	0x03B12BF4 TBZ X0, 0x0, 0x3B12C18
	0x03B12BF8 LDR X0, [X19]
	0x03B12BFC CBZ X0, 0x3B12C28
	0x03B12C00 LDR X1, [X19 + 0x10]
	0x03B12C04 LDP X20, X19, [X31 + 0x20]
	0x03B12C08 LDP X22, X21, [X31 + 0x10]
	0x03B12C0C MOV X2, X31
	0x03B12C10 LDR X30, [X31], #0x30
	0x03B12C14 B 0x3C17F08
	0x03B12C18 LDP X20, X19, [X31 + 0x20]
	0x03B12C1C LDP X22, X21, [X31 + 0x10]
	0x03B12C20 LDR X30, [X31], #0x30
	0x03B12C24 RET
	0x03B12C28 BL 0x1C16F20
	0x03B12C2C STP X30, X23, [X31 - 0x30]!
	0x03B12C30 STP X22, X21, [X31 + 0x10]
	0x03B12C34 STP X20, X19, [X31 + 0x20]
	0x03B12C38 ADRP X21, 0x8D0000
	0x03B12C3C LDRB W8, [X21 + 0x693]
	0x03B12C40 MOV W20, W1
	0x03B12C44 MOV X19, X0
	0x03B12C48 TBNZ X8, 0x0, 0x3B12C60
	0x03B12C4C ADRP X0, 0x646000
	0x03B12C50 LDR X0, [X0 + 0x348]
	0x03B12C54 BL 0x1C16CF4
	0x03B12C58 MOVZ W8, 0x1
	0x03B12C5C STRB W8, [X21 + 0x693]
	0x03B12C60 CMP W20, 0x1
	0x03B12C64 B.NE 0x3B12CD0
	0x03B12C68 LDR W9, [X19 + 0x8]
	0x03B12C6C ADD W8, W9, 0x3
	0x03B12C70 CMP W9, 0x0
	0x03B12C74 CSEL W8, W8, W9, LT
	0x03B12C78 CMP W9, 0x4
	0x03B12C7C B.LT 0x3B12CD0
	0x03B12C80 ADRP X23, 0x646000
	0x03B12C84 LDR X23, [X23 + 0x348]
	0x03B12C88 SBFM W22, W8, 0x2, 0x1F
	0x03B12C8C UBFM W8, W22, 0x1E, 0x1D
	0x03B12C90 MOV W20, W31
	0x03B12C94 SUB W21, W8, 0x4
	0x03B12C98 CMP W20, W21
	0x03B12C9C B.GE 0x3B12CC0
	0x03B12CA0 LDR X0, [X23]
	0x03B12CA4 LDR W8, [X0 + 0xE0]
	0x03B12CA8 CBNZ W8, 0x3B12CB0
	0x03B12CAC BL 0x1C16DFC
	0x03B12CB0 MOV X0, X19
	0x03B12CB4 MOV W1, W20
	0x03B12CB8 MOV W2, W21
	0x03B12CBC BL 0x3B12CE0
	0x03B12CC0 SUB W22, W22, 0x1
	0x03B12CC4 ADD W20, W20, 0x4
	0x03B12CC8 SUB W21, W21, 0x4
	0x03B12CCC CBNZ W22, 0x3B12C98
	0x03B12CD0 LDP X20, X19, [X31 + 0x20]
	0x03B12CD4 LDP X22, X21, [X31 + 0x10]
	0x03B12CD8 LDP X30, X23, [X31], #0x30
	0x03B12CDC RET
	0x03B12CE0 STR X30, [X31 - 0x10]!
	0x03B12CE4 LDR X10, [X0 + 0x10]
	0x03B12CE8 CBZ X10, 0x3B13268
	0x03B12CEC LDR W8, [X10 + 0x18]
	0x03B12CF0 CMP W8, W2
	0x03B12CF4 B.LS 0x3B13264
	0x03B12CF8 SXTW X9, W2
	0x03B12CFC MOVZ W11, 0xC
	0x03B12D00 MADD X11, X9, X11, X10
	0x03B12D04 LDR V0, [X11 + 0x20]!
	0x03B12D08 CMP W8, W1
	0x03B12D0C MOV X12, X11
	0x03B12D10 LDR V1, [X12 + 0x8]!
	0x03B12D14 B.LS 0x3B13264
	0x03B12D18 SXTW X8, W1
	0x03B12D1C MOVZ W13, 0xC
	0x03B12D20 MADD X10, X8, X13, X10
	0x03B12D24 LDR V2, [X10 + 0x20]
	0x03B12D28 LDR V3, [X10 + 0x28]
	0x03B12D2C STR D2, [X11]
	0x03B12D30 STR S3, [X12]
	0x03B12D34 LDR X10, [X0 + 0x10]
	0x03B12D38 CBZ X10, 0x3B13268
	0x03B12D3C LDR W11, [X10 + 0x18]
	0x03B12D40 CMP W11, W1
	0x03B12D44 B.LS 0x3B13264
	0x03B12D48 MOVZ W11, 0xC
	0x03B12D4C MADD X10, X8, X11, X10
	0x03B12D50 STR D0, [X10 + 0x20]
	0x03B12D54 STR S1, [X10 + 0x28]
	0x03B12D58 LDR X12, [X0 + 0x10]
	0x03B12D5C CBZ X12, 0x3B13268
	0x03B12D60 LDR W10, [X12 + 0x18]
	0x03B12D64 ADD W11, W2, 0x1
	0x03B12D68 CMP W11, W10
	0x03B12D6C B.CS 0x3B13264
	0x03B12D70 SXTW X11, W11
	0x03B12D74 MOVZ W13, 0xC
	0x03B12D78 MADD X13, X11, X13, X12
	0x03B12D7C LDR V0, [X13 + 0x20]!
	0x03B12D80 ADD W15, W1, 0x1
	0x03B12D84 CMP W15, W10
	0x03B12D88 MOV X14, X13
	0x03B12D8C LDR V1, [X14 + 0x8]!
	0x03B12D90 B.CS 0x3B13264
	0x03B12D94 SXTW X10, W15
	0x03B12D98 MOVZ W15, 0xC
	0x03B12D9C MADD X12, X10, X15, X12
	0x03B12DA0 LDR V2, [X12 + 0x20]
	0x03B12DA4 LDR V3, [X12 + 0x28]
	0x03B12DA8 STR D2, [X13]
	0x03B12DAC STR S3, [X14]
	0x03B12DB0 LDR X12, [X0 + 0x10]
	0x03B12DB4 CBZ X12, 0x3B13268
	0x03B12DB8 LDR W13, [X12 + 0x18]
	0x03B12DBC CMP W10, W13
	0x03B12DC0 B.CS 0x3B13264
	0x03B12DC4 MOVZ W13, 0xC
	0x03B12DC8 MADD X12, X10, X13, X12
	0x03B12DCC STR D0, [X12 + 0x20]
	0x03B12DD0 STR S1, [X12 + 0x28]
	0x03B12DD4 LDR X14, [X0 + 0x10]
	0x03B12DD8 CBZ X14, 0x3B13268
	0x03B12DDC LDR W12, [X14 + 0x18]
	0x03B12DE0 ADD W13, W2, 0x2
	0x03B12DE4 CMP W13, W12
	0x03B12DE8 B.CS 0x3B13264
	0x03B12DEC SXTW X13, W13
	0x03B12DF0 MOVZ W15, 0xC
	0x03B12DF4 MADD X15, X13, X15, X14
	0x03B12DF8 LDR V0, [X15 + 0x20]!
	0x03B12DFC ADD W17, W1, 0x2
	0x03B12E00 CMP W17, W12
	0x03B12E04 MOV X16, X15
	0x03B12E08 LDR V1, [X16 + 0x8]!
	0x03B12E0C B.CS 0x3B13264
	0x03B12E10 SXTW X12, W17
	0x03B12E14 MOVZ W17, 0xC
	0x03B12E18 MADD X14, X12, X17, X14
	0x03B12E1C LDR V2, [X14 + 0x20]
	0x03B12E20 LDR V3, [X14 + 0x28]
	0x03B12E24 STR D2, [X15]
	0x03B12E28 STR S3, [X16]
	0x03B12E2C LDR X14, [X0 + 0x10]
	0x03B12E30 CBZ X14, 0x3B13268
	0x03B12E34 LDR W15, [X14 + 0x18]
	0x03B12E38 CMP W12, W15
	0x03B12E3C B.CS 0x3B13264
	0x03B12E40 MOVZ W15, 0xC
	0x03B12E44 MADD X14, X12, X15, X14
	0x03B12E48 STR D0, [X14 + 0x20]
	0x03B12E4C STR S1, [X14 + 0x28]
	0x03B12E50 LDR X16, [X0 + 0x10]
	0x03B12E54 CBZ X16, 0x3B13268
	0x03B12E58 LDR W14, [X16 + 0x18]
	0x03B12E5C ADD W15, W2, 0x3
	0x03B12E60 CMP W15, W14
	0x03B12E64 B.CS 0x3B13264
	0x03B12E68 SXTW X15, W15
	0x03B12E6C MOVZ W17, 0xC
	0x03B12E70 MADD X17, X15, X17, X16
	0x03B12E74 LDR V0, [X17 + 0x20]!
	0x03B12E78 ADD W4, W1, 0x3
	0x03B12E7C CMP W4, W14
	0x03B12E80 MOV X3, X17
	0x03B12E84 LDR V1, [X3 + 0x8]!
	0x03B12E88 B.CS 0x3B13264
	0x03B12E8C SXTW X14, W4
	0x03B12E90 MOVZ W4, 0xC
	0x03B12E94 MADD X16, X14, X4, X16
	0x03B12E98 LDR V2, [X16 + 0x20]
	0x03B12E9C LDR V3, [X16 + 0x28]
	0x03B12EA0 STR D2, [X17]
	0x03B12EA4 STR S3, [X3]
	0x03B12EA8 LDR X16, [X0 + 0x10]
	0x03B12EAC CBZ X16, 0x3B13268
	0x03B12EB0 LDR W17, [X16 + 0x18]
	0x03B12EB4 CMP W14, W17
	0x03B12EB8 B.CS 0x3B13264
	0x03B12EBC MOVZ W17, 0xC
	0x03B12EC0 MADD X16, X14, X17, X16
	0x03B12EC4 STR D0, [X16 + 0x20]
	0x03B12EC8 STR S1, [X16 + 0x28]
	0x03B12ECC LDR X16, [X0 + 0x28]
	0x03B12ED0 CBZ X16, 0x3B13268
	0x03B12ED4 LDR W3, [X16 + 0x18]
	0x03B12ED8 CMP W3, W2
	0x03B12EDC B.LS 0x3B13264
	0x03B12EE0 ADD X17, X16, X9, 0x3, LSL
	0x03B12EE4 LDR V0, [X17 + 0x20]!
	0x03B12EE8 CMP W3, W1
	0x03B12EEC B.LS 0x3B13264
	0x03B12EF0 ADD X16, X16, X8, 0x3, LSL
	0x03B12EF4 LDR V1, [X16 + 0x20]
	0x03B12EF8 STR D1, [X17]
	0x03B12EFC LDR X16, [X0 + 0x28]
	0x03B12F00 CBZ X16, 0x3B13268
	0x03B12F04 LDR W17, [X16 + 0x18]
	0x03B12F08 CMP W17, W1
	0x03B12F0C B.LS 0x3B13264
	0x03B12F10 ADD X16, X16, X8, 0x3, LSL
	0x03B12F14 STR D0, [X16 + 0x20]
	0x03B12F18 LDR X16, [X0 + 0x28]
	0x03B12F1C CBZ X16, 0x3B13268
	0x03B12F20 LDR W17, [X16 + 0x18]
	0x03B12F24 CMP W11, W17
	0x03B12F28 B.CS 0x3B13264
	0x03B12F2C ADD X3, X16, X11, 0x3, LSL
	0x03B12F30 LDR V0, [X3 + 0x20]!
	0x03B12F34 CMP W10, W17
	0x03B12F38 B.CS 0x3B13264
	0x03B12F3C ADD X16, X16, X10, 0x3, LSL
	0x03B12F40 LDR V1, [X16 + 0x20]
	0x03B12F44 STR D1, [X3]
	0x03B12F48 LDR X16, [X0 + 0x28]
	0x03B12F4C CBZ X16, 0x3B13268
	0x03B12F50 LDR W17, [X16 + 0x18]
	0x03B12F54 CMP W10, W17
	0x03B12F58 B.CS 0x3B13264
	0x03B12F5C ADD X16, X16, X10, 0x3, LSL
	0x03B12F60 STR D0, [X16 + 0x20]
	0x03B12F64 LDR X16, [X0 + 0x28]
	0x03B12F68 CBZ X16, 0x3B13268
	0x03B12F6C LDR W17, [X16 + 0x18]
	0x03B12F70 CMP W13, W17
	0x03B12F74 B.CS 0x3B13264
	0x03B12F78 ADD X3, X16, X13, 0x3, LSL
	0x03B12F7C LDR V0, [X3 + 0x20]!
	0x03B12F80 CMP W12, W17
	0x03B12F84 B.CS 0x3B13264
	0x03B12F88 ADD X16, X16, X12, 0x3, LSL
	0x03B12F8C LDR V1, [X16 + 0x20]
	0x03B12F90 STR D1, [X3]
	0x03B12F94 LDR X16, [X0 + 0x28]
	0x03B12F98 CBZ X16, 0x3B13268
	0x03B12F9C LDR W17, [X16 + 0x18]
	0x03B12FA0 CMP W12, W17
	0x03B12FA4 B.CS 0x3B13264
	0x03B12FA8 ADD X16, X16, X12, 0x3, LSL
	0x03B12FAC STR D0, [X16 + 0x20]
	0x03B12FB0 LDR X16, [X0 + 0x28]
	0x03B12FB4 CBZ X16, 0x3B13268
	0x03B12FB8 LDR W17, [X16 + 0x18]
	0x03B12FBC CMP W15, W17
	0x03B12FC0 B.CS 0x3B13264
	0x03B12FC4 ADD X3, X16, X15, 0x3, LSL
	0x03B12FC8 LDR V0, [X3 + 0x20]!
	0x03B12FCC CMP W14, W17
	0x03B12FD0 B.CS 0x3B13264
	0x03B12FD4 ADD X16, X16, X14, 0x3, LSL
	0x03B12FD8 LDR V1, [X16 + 0x20]
	0x03B12FDC STR D1, [X3]
	0x03B12FE0 LDR X16, [X0 + 0x28]
	0x03B12FE4 CBZ X16, 0x3B13268
	0x03B12FE8 LDR W17, [X16 + 0x18]
	0x03B12FEC CMP W14, W17
	0x03B12FF0 B.CS 0x3B13264
	0x03B12FF4 ADD X16, X16, X14, 0x3, LSL
	0x03B12FF8 STR D0, [X16 + 0x20]
	0x03B12FFC LDR X16, [X0 + 0x30]
	0x03B13000 CBZ X16, 0x3B13268
	0x03B13004 LDR W3, [X16 + 0x18]
	0x03B13008 CMP W3, W2
	0x03B1300C B.LS 0x3B13264
	0x03B13010 ADD X17, X16, X9, 0x3, LSL
	0x03B13014 LDR V0, [X17 + 0x20]!
	0x03B13018 CMP W3, W1
	0x03B1301C B.LS 0x3B13264
	0x03B13020 ADD X16, X16, X8, 0x3, LSL
	0x03B13024 LDR V1, [X16 + 0x20]
	0x03B13028 STR D1, [X17]
	0x03B1302C LDR X16, [X0 + 0x30]
	0x03B13030 CBZ X16, 0x3B13268
	0x03B13034 LDR W17, [X16 + 0x18]
	0x03B13038 CMP W17, W1
	0x03B1303C B.LS 0x3B13264
	0x03B13040 ADD X16, X16, X8, 0x3, LSL

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x8D1000
	014 Move W8, [X21+1678]
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x648000
	022 Move X0, [X0+1904]
	023 Call 0x1C17CF4
	024 Move X0, 0x60B000
	025 Move X0, [X0+3792]
	026 Call 0x1C17CF4
	027 Move X0, 0x648000
	028 Move X0, [X0+1912]
	029 Call 0x1C17CF4
	030 Move X0, 0x63D000
	031 Move X0, [X0+552]
	032 Call 0x1C17CF4
	033 Move X0, 0x648000
	034 Move X0, [X0+1920]
	035 Call 0x1C17CF4
	036 Move X0, 0x647000
	037 Move X0, [X0+840]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1678], W8
	041 Move X0, X19
	042 Add X0, X0, 16
	043 Move X8, [X0]
	044 Move W9, 0x3FFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Compare X8, 0
	048 JumpIfEqual {320}
	049 Move X20, 0x63D000
	050 Move X20, [X20+552]
	051 Move X26, 0x648000
	052 Move X27, 0x648000
	053 Move X28, 0x648000
	054 Move X29, 0x60B000
	055 Move X26, [X26+1920]
	056 Move X27, [X27+1912]
	057 Move X28, [X28+1904]
	058 Move X29, [X29+3792]
	059 Move W8, [X8+24]
	060 Move X2, [X20]
	061 Move W21, W24
	062 ShiftRight W21, 30
	063 And W21, W21, 0x1FFFFFFF
	064 Add W9, W24, W24
	065 Move W23, W9
	066 ShiftRight W23, 31
	067 And W23, W23, 0x3FFFFFFF
	068 Add W9, W8, 3
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W1, W21
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Call Array.Resize, X0, X1
	073 Move X2, [X20]
	074 Add X22, X19, 24
	075 Move X0, X22
	076 Move W1, W21
	077 Call Array.Resize, X0, X1
	078 Move X2, [X26]
	079 Add X20, X19, 32
	080 Move X0, X20
	081 Move W1, W21
	082 Call Array.Resize, X0, X1
	083 Move X2, [X27]
	084 Add X0, X19, 40
	085 Move W1, W21
	086 Call Array.Resize, X0, X1
	087 Move X2, [X27]
	088 Add X0, X19, 48
	089 Move W1, W21
	090 Call Array.Resize, X0, X1
	091 Move X2, [X28]
	092 Add X0, X19, 56
	093 Move W1, W21
	094 Call Array.Resize, X0, X1
	095 Move X2, [X29]
	096 Add X21, X19, 64
	097 Move X0, X21
	098 Move W1, W23
	099 Call Array.Resize, X0, X1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X23, 0x647000
	102 Move X23, [X23+840]
	103 NotImplemented "Instruction SBFM not yet implemented."
	104 Move X9, W24
	105 Add W10, W8, W8
	106 Move W24, W8
	107 ShiftRight W24, 30
	108 And W24, W24, 0x1FFFFFFF
	109 Subtract X25, X9, W8
	110 Move W26, W10
	111 ShiftRight W26, 31
	112 And W26, W26, 0x3FFFFFFF
	113 Move W27, 12
	114 Move X0, [X23]
	115 Move X28, [X22]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X23]
	121 Compare X28, 0
	122 JumpIfEqual {320}
	123 Move W8, [X28+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X0+184]
	126 Move X11, W24
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Move V1, [X8+12]
	129 NotImplemented "Instruction NOP not yet implemented."
	130 NotImplemented "Instruction MADD not yet implemented."
	131 Move [X8+32], D0
	132 Move [X8+40], S1
	133 Move X9, [X22]
	134 Compare X9, 0
	135 JumpIfEqual {320}
	136 Move W10, [X9+24]
	137 Add W8, W24, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X10, [X23]
	140 Move X12, W8
	141 NotImplemented "Instruction MADD not yet implemented."
	142 Move X10, [X10+184]
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Move V1, [X10+12]
	145 Move [X9+32], D0
	146 Move [X9+40], S1
	147 Move X10, [X22]
	148 Compare X10, 0
	149 JumpIfEqual {320}
	150 Move W13, [X10+24]
	151 Add W9, W24, 2
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X13, [X23]
	154 Move X13, [X13+184]
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 Move V1, [X13+12]
	157 Move X13, W9
	158 NotImplemented "Instruction MADD not yet implemented."
	159 Move [X10+32], D0
	160 Move [X10+40], S1
	161 Move X15, [X22]
	162 Compare X15, 0
	163 JumpIfEqual {320}
	164 Move W14, [X15+24]
	165 Add W10, W24, 3
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X14, [X23]
	168 Move X14, [X14+184]
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 Move V1, [X14+12]
	171 Move X14, W10
	172 NotImplemented "Instruction MADD not yet implemented."
	173 Move [X15+32], D0
	174 Move [X15+40], S1
	175 Move X15, [X20]
	176 Compare X15, 0
	177 JumpIfEqual {320}
	178 Move W16, [X15+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X16, [X23]
	181 Add X11, X15, X11
	182 Move X16, [X16+184]
	183 Move V0, [X16+1]
	184 Move [X11+2], V0
	185 Move X11, [X20]
	186 Compare X11, 0
	187 JumpIfEqual {320}
	188 Move W15, [X11+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X15, [X23]
	191 Add X11, X11, X12
	192 Move X15, [X15+184]
	193 Move V0, [X15+1]
	194 Move [X11+2], V0
	195 Move X11, [X20]
	196 Compare X11, 0
	197 JumpIfEqual {320}
	198 Move W12, [X11+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X12, [X23]
	201 Add X11, X11, X13
	202 Move X12, [X12+184]
	203 Move V0, [X12+1]
	204 Move [X11+2], V0
	205 Move X11, [X20]
	206 Compare X11, 0
	207 JumpIfEqual {320}
	208 Move W12, [X11+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X12, [X23]
	211 Add X11, X11, X14
	212 Move X12, [X12+184]
	213 Move V0, [X12+1]
	214 Move [X11+2], V0
	215 Move X11, [X21]
	216 Compare X11, 0
	217 JumpIfEqual {320}
	218 Move W12, [X11+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add W13, W26, 1
	221 Add X14, X11, W26
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move [X14+32], W24
	224 Add X14, X11, W13
	225 Add W13, W26, 2
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move [X14+32], W8
	228 Add W8, W26, 3
	229 Add X13, X11, W13
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move [X13+32], W9
	232 Add X13, X11, W8
	233 Add W8, W26, 4
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move [X13+32], W9
	236 Add X9, X11, W8
	237 Add W8, W26, 5
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move [X9+32], W10
	240 Add X8, X11, W8
	241 Add W26, W26, 6
	242 Subtract X25, X25, 1
	243 Move [X8+32], W24
	244 Add W24, W24, 4
	245 Move X0, [X19]
	246 Compare X0, 0
	247 JumpIfEqual {320}
	248 Move X1, [X19+16]
	249 Move X2, X31
	250 Call Mesh.set_vertices, X0, X1
	251 Move X0, [X19]
	252 Compare X0, 0
	253 JumpIfEqual {320}
	254 Move X1, [X19+24]
	255 Move X2, X31
	256 Call Mesh.set_normals, X0, X1
	257 Move X0, [X19]
	258 Compare X0, 0
	259 JumpIfEqual {320}
	260 Move X1, [X19+32]
	261 Move X2, X31
	262 Call Mesh.set_tangents, X0, X1
	263 Move X0, [X19]
	264 Compare X0, 0
	265 JumpIfEqual {320}
	266 Move X1, [X21]
	267 Move X20, [X31+80]
	268 Move X19, [X31+88]
	269 Move X22, [X31+64]
	270 Move X21, [X31+72]
	271 Move X24, [X31+48]
	272 Move X23, [X31+56]
	273 Move X26, [X31+32]
	274 Move X25, [X31+40]
	275 Move X28, [X31+16]
	276 Move X27, [X31+24]
	277 Move X2, X31
	278 Move X29, [X31+96]
	279 Move X30, [X31+104]
	280 Call Mesh.set_triangles, X0, X1
	281 Return 
	282 Move X0, [X19]
	283 Compare X0, 0
	284 JumpIfEqual {320}
	285 Move X1, [X19+64]
	286 Move X2, X31
	287 Call Mesh.set_triangles, X0, X1
	288 Move X0, [X19]
	289 Compare X0, 0
	290 JumpIfEqual {320}
	291 Move X1, [X19+16]
	292 Move X2, X31
	293 Call Mesh.set_vertices, X0, X1
	294 Move X0, [X19]
	295 Compare X0, 0
	296 JumpIfEqual {320}
	297 Move X1, [X19+24]
	298 Move X2, X31
	299 Call Mesh.set_normals, X0, X1
	300 Move X0, [X19]
	301 Compare X0, 0
	302 JumpIfEqual {320}
	303 Move X1, [X20]
	304 Move X20, [X31+80]
	305 Move X19, [X31+88]
	306 Move X22, [X31+64]
	307 Move X21, [X31+72]
	308 Move X24, [X31+48]
	309 Move X23, [X31+56]
	310 Move X26, [X31+32]
	311 Move X25, [X31+40]
	312 Move X28, [X31+16]
	313 Move X27, [X31+24]
	314 Move X2, X31
	315 Move X29, [X31+96]
	316 Move X30, [X31+104]
	317 Call Mesh.set_tangents, X0, X1
	318 Return 
	319 Call 0x1C17F28
	320 Call 0x1C17F20

Method: System.Void ResizeMeshInfo(System.Int32 size, System.Boolean isVolumetric)

Disassembly:
	0x03B13044 STR D0, [X16 + 0x20]
	0x03B13048 LDR X16, [X0 + 0x30]
	0x03B1304C CBZ X16, 0x3B13268
	0x03B13050 LDR W17, [X16 + 0x18]
	0x03B13054 CMP W11, W17
	0x03B13058 B.CS 0x3B13264
	0x03B1305C ADD X3, X16, X11, 0x3, LSL
	0x03B13060 LDR V0, [X3 + 0x20]!
	0x03B13064 CMP W10, W17
	0x03B13068 B.CS 0x3B13264
	0x03B1306C ADD X16, X16, X10, 0x3, LSL
	0x03B13070 LDR V1, [X16 + 0x20]
	0x03B13074 STR D1, [X3]
	0x03B13078 LDR X16, [X0 + 0x30]
	0x03B1307C CBZ X16, 0x3B13268
	0x03B13080 LDR W17, [X16 + 0x18]
	0x03B13084 CMP W10, W17
	0x03B13088 B.CS 0x3B13264
	0x03B1308C ADD X16, X16, X10, 0x3, LSL
	0x03B13090 STR D0, [X16 + 0x20]
	0x03B13094 LDR X16, [X0 + 0x30]
	0x03B13098 CBZ X16, 0x3B13268
	0x03B1309C LDR W17, [X16 + 0x18]
	0x03B130A0 CMP W13, W17
	0x03B130A4 B.CS 0x3B13264
	0x03B130A8 ADD X3, X16, X13, 0x3, LSL
	0x03B130AC LDR V0, [X3 + 0x20]!
	0x03B130B0 CMP W12, W17
	0x03B130B4 B.CS 0x3B13264
	0x03B130B8 ADD X16, X16, X12, 0x3, LSL
	0x03B130BC LDR V1, [X16 + 0x20]
	0x03B130C0 STR D1, [X3]
	0x03B130C4 LDR X16, [X0 + 0x30]
	0x03B130C8 CBZ X16, 0x3B13268
	0x03B130CC LDR W17, [X16 + 0x18]
	0x03B130D0 CMP W12, W17
	0x03B130D4 B.CS 0x3B13264
	0x03B130D8 ADD X16, X16, X12, 0x3, LSL
	0x03B130DC STR D0, [X16 + 0x20]
	0x03B130E0 LDR X16, [X0 + 0x30]
	0x03B130E4 CBZ X16, 0x3B13268
	0x03B130E8 LDR W17, [X16 + 0x18]
	0x03B130EC CMP W15, W17
	0x03B130F0 B.CS 0x3B13264
	0x03B130F4 ADD X3, X16, X15, 0x3, LSL
	0x03B130F8 LDR V0, [X3 + 0x20]!
	0x03B130FC CMP W14, W17
	0x03B13100 B.CS 0x3B13264
	0x03B13104 ADD X16, X16, X14, 0x3, LSL
	0x03B13108 LDR V1, [X16 + 0x20]
	0x03B1310C STR D1, [X3]
	0x03B13110 LDR X16, [X0 + 0x30]
	0x03B13114 CBZ X16, 0x3B13268
	0x03B13118 LDR W17, [X16 + 0x18]
	0x03B1311C CMP W14, W17
	0x03B13120 B.CS 0x3B13264
	0x03B13124 ADD X16, X16, X14, 0x3, LSL
	0x03B13128 STR D0, [X16 + 0x20]
	0x03B1312C LDR X16, [X0 + 0x38]
	0x03B13130 CBZ X16, 0x3B13268
	0x03B13134 LDR W3, [X16 + 0x18]
	0x03B13138 CMP W3, W2
	0x03B1313C B.LS 0x3B13264
	0x03B13140 ADD X17, X16, X9, 0x2, LSL
	0x03B13144 LDR W9, [X17 + 0x20]!
	0x03B13148 CMP W3, W1
	0x03B1314C B.LS 0x3B13264
	0x03B13150 ADD X16, X16, X8, 0x2, LSL
	0x03B13154 LDR W16, [X16 + 0x20]
	0x03B13158 STR W16, [X17]
	0x03B1315C LDR X16, [X0 + 0x38]
	0x03B13160 CBZ X16, 0x3B13268
	0x03B13164 LDR W17, [X16 + 0x18]
	0x03B13168 CMP W17, W1
	0x03B1316C B.LS 0x3B13264
	0x03B13170 ADD X8, X16, X8, 0x2, LSL
	0x03B13174 STR W9, [X8 + 0x20]
	0x03B13178 LDR X9, [X0 + 0x38]
	0x03B1317C CBZ X9, 0x3B13268
	0x03B13180 LDR W16, [X9 + 0x18]
	0x03B13184 CMP W11, W16
	0x03B13188 B.CS 0x3B13264
	0x03B1318C ADD X11, X9, X11, 0x2, LSL
	0x03B13190 LDR W8, [X11 + 0x20]!
	0x03B13194 CMP W10, W16
	0x03B13198 B.CS 0x3B13264
	0x03B1319C ADD X9, X9, X10, 0x2, LSL
	0x03B131A0 LDR W9, [X9 + 0x20]
	0x03B131A4 STR W9, [X11]
	0x03B131A8 LDR X9, [X0 + 0x38]
	0x03B131AC CBZ X9, 0x3B13268
	0x03B131B0 LDR W11, [X9 + 0x18]
	0x03B131B4 CMP W10, W11
	0x03B131B8 B.CS 0x3B13264
	0x03B131BC ADD X9, X9, X10, 0x2, LSL
	0x03B131C0 STR W8, [X9 + 0x20]
	0x03B131C4 LDR X9, [X0 + 0x38]
	0x03B131C8 CBZ X9, 0x3B13268
	0x03B131CC LDR W10, [X9 + 0x18]
	0x03B131D0 CMP W13, W10
	0x03B131D4 B.CS 0x3B13264
	0x03B131D8 ADD X11, X9, X13, 0x2, LSL
	0x03B131DC LDR W8, [X11 + 0x20]!
	0x03B131E0 CMP W12, W10
	0x03B131E4 B.CS 0x3B13264
	0x03B131E8 ADD X9, X9, X12, 0x2, LSL
	0x03B131EC LDR W9, [X9 + 0x20]
	0x03B131F0 STR W9, [X11]
	0x03B131F4 LDR X9, [X0 + 0x38]
	0x03B131F8 CBZ X9, 0x3B13268
	0x03B131FC LDR W10, [X9 + 0x18]
	0x03B13200 CMP W12, W10
	0x03B13204 B.CS 0x3B13264
	0x03B13208 ADD X9, X9, X12, 0x2, LSL
	0x03B1320C STR W8, [X9 + 0x20]
	0x03B13210 LDR X9, [X0 + 0x38]
	0x03B13214 CBZ X9, 0x3B13268
	0x03B13218 LDR W10, [X9 + 0x18]
	0x03B1321C CMP W15, W10
	0x03B13220 B.CS 0x3B13264
	0x03B13224 ADD X11, X9, X15, 0x2, LSL
	0x03B13228 LDR W8, [X11 + 0x20]!
	0x03B1322C CMP W14, W10
	0x03B13230 B.CS 0x3B13264
	0x03B13234 ADD X9, X9, X14, 0x2, LSL
	0x03B13238 LDR W9, [X9 + 0x20]
	0x03B1323C STR W9, [X11]
	0x03B13240 LDR X9, [X0 + 0x38]
	0x03B13244 CBZ X9, 0x3B13268
	0x03B13248 LDR W10, [X9 + 0x18]
	0x03B1324C CMP W14, W10
	0x03B13250 B.CS 0x3B13264
	0x03B13254 ADD X9, X9, X14, 0x2, LSL
	0x03B13258 STR W8, [X9 + 0x20]
	0x03B1325C LDR X30, [X31], #0x10
	0x03B13260 RET
	0x03B13264 BL 0x1C16F28
	0x03B13268 BL 0x1C16F20
	0x03B1326C STP X30, X25, [X31 - 0x40]!
	0x03B13270 STP X24, X23, [X31 + 0x10]
	0x03B13274 STP X22, X21, [X31 + 0x20]
	0x03B13278 STP X20, X19, [X31 + 0x30]
	0x03B1327C ADRP X21, 0x8CF000
	0x03B13280 LDRB W8, [X21 + 0x694]
	0x03B13284 MOV X19, X1
	0x03B13288 MOV X20, X0
	0x03B1328C TBNZ X8, 0x0, 0x3B132BC
	0x03B13290 ADRP X0, 0x608000
	0x03B13294 LDR X0, [X0 + 0x7A0]
	0x03B13298 BL 0x1C16CF4
	0x03B1329C ADRP X0, 0x608000
	0x03B132A0 LDR X0, [X0 + 0x7A8]
	0x03B132A4 BL 0x1C16CF4
	0x03B132A8 ADRP X0, 0x645000
	0x03B132AC LDR X0, [X0 + 0x348]
	0x03B132B0 BL 0x1C16CF4
	0x03B132B4 MOVZ W8, 0x1
	0x03B132B8 STRB W8, [X21 + 0x694]
	0x03B132BC CBZ X19, 0x3B13460
	0x03B132C0 ADRP X10, 0x608000
	0x03B132C4 LDR X8, [X19]
	0x03B132C8 LDR X10, [X10 + 0x7A0]
	0x03B132CC LDRH W9, [X8 + 0x12E]
	0x03B132D0 LDR X1, [X10]
	0x03B132D4 CBZ X9, 0x3B132F8
	0x03B132D8 LDR X10, [X8 + 0xB0]
	0x03B132DC ADD X10, X10, 0x8
	0x03B132E0 LDUR X11, [X10 - 0x8]
	0x03B132E4 CMP X11, X1
	0x03B132E8 B.EQ 0x3B13308
	0x03B132EC SUBS X9, X9, 0x1
	0x03B132F0 ADD X10, X10, 0x10
	0x03B132F4 B.NE 0x3B132E0
	0x03B132F8 MOV X0, X19
	0x03B132FC MOV W2, W31
	0x03B13300 BL 0x1C5C788
	0x03B13304 B 0x3B13314
	0x03B13308 LDRSW X9, [X10]
	0x03B1330C ADD X8, X8, X9, 0x4, LSL
	0x03B13310 ADD X0, X8, 0x138
	0x03B13314 LDP X8, X1, [X0]
	0x03B13318 MOV X0, X19
	0x03B1331C BLR X8
	0x03B13320 LDR X8, [X20 + 0x10]
	0x03B13324 CBZ X8, 0x3B13460
	0x03B13328 LDR W8, [X8 + 0x18]
	0x03B1332C MOV W21, W0
	0x03B13330 CMP W8, W0, LSL
	0x03B13334 B.LT 0x3B1344C
	0x03B13338 CMP W21, 0x1
	0x03B1333C B.LT 0x3B1344C
	0x03B13340 ADRP X24, 0x608000
	0x03B13344 ADRP X25, 0x645000
	0x03B13348 LDR X24, [X24 + 0x7A8]
	0x03B1334C LDR X25, [X25 + 0x348]
	0x03B13350 MOV W22, W31
	0x03B13354 LDR X8, [X19]
	0x03B13358 LDR X1, [X24]
	0x03B1335C LDRH W9, [X8 + 0x12E]
	0x03B13360 CBZ X9, 0x3B13384
	0x03B13364 LDR X10, [X8 + 0xB0]
	0x03B13368 ADD X10, X10, 0x8
	0x03B1336C LDUR X11, [X10 - 0x8]
	0x03B13370 CMP X11, X1
	0x03B13374 B.EQ 0x3B13394
	0x03B13378 SUBS X9, X9, 0x1
	0x03B1337C ADD X10, X10, 0x10
	0x03B13380 B.NE 0x3B1336C
	0x03B13384 MOV X0, X19
	0x03B13388 MOV W2, W31
	0x03B1338C BL 0x1C5C788
	0x03B13390 B 0x3B133A0
	0x03B13394 LDRSW X9, [X10]
	0x03B13398 ADD X8, X8, X9, 0x4, LSL
	0x03B1339C ADD X0, X8, 0x138
	0x03B133A0 LDP X8, X2, [X0]
	0x03B133A4 MOV X0, X19
	0x03B133A8 MOV W1, W22
	0x03B133AC BLR X8
	0x03B133B0 MOV W23, W0
	0x03B133B4 CMP W0, W22
	0x03B133B8 B.GE 0x3B13418
	0x03B133BC LDR X8, [X19]
	0x03B133C0 LDR X1, [X24]
	0x03B133C4 LDRH W9, [X8 + 0x12E]
	0x03B133C8 CBZ X9, 0x3B133EC
	0x03B133CC LDR X10, [X8 + 0xB0]
	0x03B133D0 ADD X10, X10, 0x8
	0x03B133D4 LDUR X11, [X10 - 0x8]
	0x03B133D8 CMP X11, X1
	0x03B133DC B.EQ 0x3B133FC
	0x03B133E0 SUBS X9, X9, 0x1
	0x03B133E4 ADD X10, X10, 0x10
	0x03B133E8 B.NE 0x3B133D4
	0x03B133EC MOV X0, X19
	0x03B133F0 MOV W2, W31
	0x03B133F4 BL 0x1C5C788
	0x03B133F8 B 0x3B13408
	0x03B133FC LDRSW X9, [X10]
	0x03B13400 ADD X8, X8, X9, 0x4, LSL
	0x03B13404 ADD X0, X8, 0x138
	0x03B13408 LDP X8, X2, [X0]
	0x03B1340C MOV X0, X19
	0x03B13410 MOV W1, W23
	0x03B13414 B 0x3B133AC
	0x03B13418 CMP W23, W22
	0x03B1341C B.EQ 0x3B13440
	0x03B13420 LDR X0, [X25]
	0x03B13424 LDR W8, [X0 + 0xE0]
	0x03B13428 CBNZ W8, 0x3B13430
	0x03B1342C BL 0x1C16DFC
	0x03B13430 UBFM W1, W23, 0x1E, 0x1D
	0x03B13434 UBFM W2, W22, 0x1E, 0x1D
	0x03B13438 MOV X0, X20
	0x03B1343C BL 0x3B12CE0
	0x03B13440 ADD W22, W22, 0x1
	0x03B13444 CMP W22, W21
	0x03B13448 B.NE 0x3B13354
	0x03B1344C LDP X20, X19, [X31 + 0x30]
	0x03B13450 LDP X22, X21, [X31 + 0x20]
	0x03B13454 LDP X24, X23, [X31 + 0x10]
	0x03B13458 LDP X30, X25, [X31], #0x40
	0x03B1345C RET
	0x03B13460 BL 0x1C16F20
	0x03B13464 STR X30, [X31 - 0x20]!
	0x03B13468 STP X20, X19, [X31 + 0x10]
	0x03B1346C ADRP X20, 0x8CF000
	0x03B13470 ADRP X19, 0x645000
	0x03B13474 LDRB W8, [X20 + 0x695]
	0x03B13478 LDR X19, [X19 + 0x348]
	0x03B1347C TBNZ X8, 0x0, 0x3B13494
	0x03B13480 ADRP X0, 0x645000
	0x03B13484 LDR X0, [X0 + 0x348]
	0x03B13488 BL 0x1C16CF4
	0x03B1348C MOVZ W8, 0x1
	0x03B13490 STRB W8, [X20 + 0x695]
	0x03B13494 LDR X8, [X19]
	0x03B13498 MOVN W9, 0x0
	0x03B1349C LDR X8, [X8 + 0xB8]
	0x03B134A0 STR W9, [X8]
	0x03B134A4 LDR X8, [X19]
	0x03B134A8 MOVZ W9, 0xBF800000
	0x03B134AC LDR X8, [X8 + 0xB8]
	0x03B134B0 STP W31, W31, [X8 + 0x4]
	0x03B134B4 STR W9, [X8 + 0xC]
	0x03B134B8 LDR X8, [X19]
	0x03B134BC ADRP X9, 0xFFFFFFFFFCFD7000
	0x03B134C0 LDR V0, [X9 + 0x5C]
	0x03B134C4 LDP X20, X19, [X31 + 0x10]
	0x03B134C8 LDR X9, [X8 + 0xB8]
	0x03B134CC STR V0, [X9 + 0x1]
	0x03B134D0 LDR X8, [X8 + 0xB8]
	0x03B134D4 STP X31, X31, [X8 + 0x20]
	0x03B134D8 STR X31, [X8 + 0x30]
	0x03B134DC LDR X30, [X31], #0x20
	0x03B134E0 RET
	0x03B134E4 STR X30, [X31 - 0x40]!
	0x03B134E8 STP X24, X23, [X31 + 0x10]
	0x03B134EC STP X22, X21, [X31 + 0x20]
	0x03B134F0 STP X20, X19, [X31 + 0x30]
	0x03B134F4 ADRP X19, 0x8CF000
	0x03B134F8 ADRP X20, 0x646000
	0x03B134FC ADRP X24, 0x645000
	0x03B13500 ADRP X23, 0x645000
	0x03B13504 ADRP X22, 0x645000
	0x03B13508 ADRP X21, 0x645000
	0x03B1350C LDRB W8, [X19 + 0x696]
	0x03B13510 LDR X20, [X20 + 0x788]
	0x03B13514 LDR X24, [X24 + 0xC58]
	0x03B13518 LDR X23, [X23 + 0xF18]
	0x03B1351C LDR X22, [X22 + 0x4B8]
	0x03B13520 LDR X21, [X21 + 0x4C0]
	0x03B13524 TBNZ X8, 0x0, 0x3B1356C
	0x03B13528 ADRP X0, 0x645000
	0x03B1352C LDR X0, [X0 + 0x4C0]
	0x03B13530 BL 0x1C16CF4
	0x03B13534 ADRP X0, 0x645000
	0x03B13538 LDR X0, [X0 + 0x4B8]
	0x03B1353C BL 0x1C16CF4
	0x03B13540 ADRP X0, 0x645000
	0x03B13544 LDR X0, [X0 + 0xF18]
	0x03B13548 BL 0x1C16CF4
	0x03B1354C ADRP X0, 0x645000
	0x03B13550 LDR X0, [X0 + 0xC58]
	0x03B13554 BL 0x1C16CF4
	0x03B13558 ADRP X0, 0x646000
	0x03B1355C LDR X0, [X0 + 0x788]
	0x03B13560 BL 0x1C16CF4
	0x03B13564 MOVZ W8, 0x1
	0x03B13568 STRB W8, [X19 + 0x696]
	0x03B1356C LDR X0, [X20]
	0x03B13570 BL 0x1C16F10
	0x03B13574 MOV X1, X31
	0x03B13578 MOV X19, X0
	0x03B1357C BL 0x33BDD8C
	0x03B13580 LDR X8, [X20]
	0x03B13584 LDR X8, [X8 + 0xB8]
	0x03B13588 STR X19, [X8]
	0x03B1358C LDR X0, [X24]
	0x03B13590 BL 0x1C16F10
	0x03B13594 LDR X1, [X23]
	0x03B13598 MOV X19, X0
	0x03B1359C BL 0x301B7C4
	0x03B135A0 LDR X8, [X20]
	0x03B135A4 LDR X8, [X8 + 0xB8]
	0x03B135A8 STR X19, [X8 + 0x10]
	0x03B135AC LDR X0, [X22]
	0x03B135B0 BL 0x1C16F10
	0x03B135B4 LDR X1, [X21]
	0x03B135B8 MOV X19, X0
	0x03B135BC BL 0x2A12DD4
	0x03B135C0 LDR X8, [X20]
	0x03B135C4 LDP X22, X21, [X31 + 0x20]
	0x03B135C8 LDP X24, X23, [X31 + 0x10]
	0x03B135CC LDR X8, [X8 + 0xB8]
	0x03B135D0 STR X19, [X8 + 0x18]
	0x03B135D4 LDP X20, X19, [X31 + 0x30]
	0x03B135D8 LDR X30, [X31], #0x40
	0x03B135DC RET
	0x03B135E0 MOV X1, X31
	0x03B135E4 B 0x33BDD8C
	0x03B135E8 STR X30, [X31 - 0x20]!
	0x03B135EC STP X20, X19, [X31 + 0x10]
	0x03B135F0 ADRP X19, 0x8CF000
	0x03B135F4 ADRP X20, 0x646000
	0x03B135F8 LDRB W8, [X19 + 0x697]
	0x03B135FC LDR X20, [X20 + 0x788]
	0x03B13600 TBNZ X8, 0x0, 0x3B1363C
	0x03B13604 ADRP X0, 0x5E0000
	0x03B13608 LDR X0, [X0 + 0x598]
	0x03B1360C BL 0x1C16CF4
	0x03B13610 ADRP X0, 0x646000
	0x03B13614 LDR X0, [X0 + 0x790]
	0x03B13618 BL 0x1C16CF4
	0x03B1361C ADRP X0, 0x646000
	0x03B13620 LDR X0, [X0 + 0x788]
	0x03B13624 BL 0x1C16CF4
	0x03B13628 ADRP X0, 0x646000
	0x03B1362C LDR X0, [X0 + 0x798]
	0x03B13630 BL 0x1C16CF4
	0x03B13634 MOVZ W8, 0x1
	0x03B13638 STRB W8, [X19 + 0x697]
	0x03B1363C LDR X0, [X20]
	0x03B13640 ADRP X19, 0x5E0000
	0x03B13644 LDR W8, [X0 + 0xE0]
	0x03B13648 LDR X19, [X19 + 0x598]
	0x03B1364C CBNZ W8, 0x3B13658
	0x03B13650 BL 0x1C16DFC
	0x03B13654 LDR X0, [X20]
	0x03B13658 LDR X8, [X19]
	0x03B1365C LDR X9, [X0 + 0xB8]
	0x03B13660 LDR W10, [X8 + 0xE0]
	0x03B13664 LDR X19, [X9 + 0x8]
	0x03B13668 CBNZ W10, 0x3B13674
	0x03B1366C MOV X0, X8
	0x03B13670 BL 0x1C16DFC
	0x03B13674 MOV X0, X19
	0x03B13678 MOV X1, X31
	0x03B1367C MOV X2, X31
	0x03B13680 BL 0x3C3883C
	0x03B13684 TBZ X0, 0x0, 0x3B136CC
	0x03B13688 ADRP X8, 0x646000
	0x03B1368C ADRP X9, 0x646000
	0x03B13690 LDR X8, [X8 + 0x798]
	0x03B13694 LDR X9, [X9 + 0x790]
	0x03B13698 LDR X0, [X8]
	0x03B1369C LDR X1, [X9]
	0x03B136A0 BL 0x2241FB8
	0x03B136A4 LDR X8, [X20]
	0x03B136A8 MOV X19, X0
	0x03B136AC LDR W9, [X8 + 0xE0]
	0x03B136B0 CBNZ W9, 0x3B136C0
	0x03B136B4 MOV X0, X8
	0x03B136B8 BL 0x1C16DFC
	0x03B136BC LDR X8, [X20]
	0x03B136C0 LDR X9, [X8 + 0xB8]
	0x03B136C4 STR X19, [X9 + 0x8]
	0x03B136C8 B 0x3B136D0
	0x03B136CC LDR X8, [X20]
	0x03B136D0 LDR W9, [X8 + 0xE0]
	0x03B136D4 CBNZ W9, 0x3B136E4
	0x03B136D8 MOV X0, X8
	0x03B136DC BL 0x1C16DFC
	0x03B136E0 LDR X8, [X20]
	0x03B136E4 LDR X8, [X8 + 0xB8]
	0x03B136E8 LDP X20, X19, [X31 + 0x10]
	0x03B136EC LDR X0, [X8 + 0x8]
	0x03B136F0 LDR X30, [X31], #0x20
	0x03B136F4 RET
	0x03B136F8 STP X30, X21, [X31 - 0x20]!
	0x03B136FC STP X20, X19, [X31 + 0x10]
	0x03B13700 ADRP X20, 0x8CF000
	0x03B13704 LDRB W8, [X20 + 0x698]
	0x03B13708 MOV X19, X0
	0x03B1370C TBNZ X8, 0x0, 0x3B13748
	0x03B13710 ADRP X0, 0x645000
	0x03B13714 LDR X0, [X0 + 0x4E8]
	0x03B13718 BL 0x1C16CF4
	0x03B1371C ADRP X0, 0x645000
	0x03B13720 LDR X0, [X0 + 0x4F8]
	0x03B13724 BL 0x1C16CF4
	0x03B13728 ADRP X0, 0x645000
	0x03B1372C LDR X0, [X0 + 0xC18]
	0x03B13730 BL 0x1C16CF4
	0x03B13734 ADRP X0, 0x646000
	0x03B13738 LDR X0, [X0 + 0x788]
	0x03B1373C BL 0x1C16CF4
	0x03B13740 MOVZ W8, 0x1
	0x03B13744 STRB W8, [X20 + 0x698]
	0x03B13748 CBZ X19, 0x3B13844
	0x03B1374C ADRP X21, 0x646000
	0x03B13750 LDR X21, [X21 + 0x788]
	0x03B13754 LDR W20, [X19 + 0x1C]
	0x03B13758 LDR X0, [X21]
	0x03B1375C LDR W8, [X0 + 0xE0]
	0x03B13760 CBNZ W8, 0x3B1376C
	0x03B13764 BL 0x1C16DFC
	0x03B13768 LDR X0, [X21]
	0x03B1376C LDR X8, [X0 + 0xB8]
	0x03B13770 LDR X0, [X8 + 0x18]
	0x03B13774 CBZ X0, 0x3B13844
	0x03B13778 ADRP X8, 0x645000
	0x03B1377C LDR X8, [X8 + 0x4F8]
	0x03B13780 MOV W1, W20
	0x03B13784 LDR X2, [X8]
	0x03B13788 BL 0x2A13880
	0x03B1378C TBZ X0, 0x0, 0x3B1379C
	0x03B13790 LDP X20, X19, [X31 + 0x10]
	0x03B13794 LDP X30, X21, [X31], #0x20
	0x03B13798 RET
	0x03B1379C LDR X0, [X21]
	0x03B137A0 LDR W8, [X0 + 0xE0]
	0x03B137A4 CBNZ W8, 0x3B137B0
	0x03B137A8 BL 0x1C16DFC
	0x03B137AC LDR X0, [X21]
	0x03B137B0 LDR X8, [X0 + 0xB8]
	0x03B137B4 LDR X0, [X8 + 0x10]
	0x03B137B8 CBZ X0, 0x3B13844
	0x03B137BC ADRP X9, 0x645000
	0x03B137C0 LDR X9, [X9 + 0xC18]
	0x03B137C4 LDR W10, [X0 + 0x1C]
	0x03B137C8 LDR X8, [X0 + 0x10]
	0x03B137CC LDR X9, [X9]
	0x03B137D0 ADD W10, W10, 0x1
	0x03B137D4 STR W10, [X0 + 0x1C]
	0x03B137D8 CBZ X8, 0x3B13844
	0x03B137DC LDRSW X10, [X0 + 0x18]
	0x03B137E0 LDR W11, [X8 + 0x18]
	0x03B137E4 CMP W10, W11
	0x03B137E8 B.CS 0x3B13800
	0x03B137EC ADD W9, W10, 0x1
	0x03B137F0 ADD X8, X8, X10, 0x3, LSL
	0x03B137F4 STR W9, [X0 + 0x18]
	0x03B137F8 STR X19, [X8 + 0x20]
	0x03B137FC B 0x3B13814
	0x03B13800 LDR X8, [X9 + 0x20]
	0x03B13804 MOV X1, X19
	0x03B13808 LDR X8, [X8 + 0xC0]
	0x03B1380C LDR X2, [X8 + 0x70]
	0x03B13810 BL 0x301BF90
	0x03B13814 LDR X8, [X21]
	0x03B13818 LDR X8, [X8 + 0xB8]
	0x03B1381C LDR X0, [X8 + 0x18]
	0x03B13820 CBZ X0, 0x3B13844
	0x03B13824 ADRP X8, 0x645000
	0x03B13828 LDR X8, [X8 + 0x4E8]
	0x03B1382C MOV W1, W20
	0x03B13830 MOV X2, X19
	0x03B13834 LDP X20, X19, [X31 + 0x10]
	0x03B13838 LDR X3, [X8]
	0x03B1383C LDP X30, X21, [X31], #0x20
	0x03B13840 B 0x2A1368C
	0x03B13844 BL 0x1C16F20
	0x03B13848 STR X30, [X31 - 0x30]!
	0x03B1384C STP X22, X21, [X31 + 0x10]
	0x03B13850 STP X20, X19, [X31 + 0x20]
	0x03B13854 ADRP X22, 0x8CF000
	0x03B13858 ADRP X21, 0x646000
	0x03B1385C LDRB W8, [X22 + 0x699]
	0x03B13860 LDR X21, [X21 + 0x788]
	0x03B13864 MOV X19, X1
	0x03B13868 MOV W20, W0
	0x03B1386C TBNZ X8, 0x0, 0x3B13890
	0x03B13870 ADRP X0, 0x645000
	0x03B13874 LDR X0, [X0 + 0x520]
	0x03B13878 BL 0x1C16CF4
	0x03B1387C ADRP X0, 0x646000
	0x03B13880 LDR X0, [X0 + 0x788]
	0x03B13884 BL 0x1C16CF4
	0x03B13888 MOVZ W8, 0x1
	0x03B1388C STRB W8, [X22 + 0x699]
	0x03B13890 STR X31, [X19]
	0x03B13894 LDR X0, [X21]
	0x03B13898 LDR W8, [X0 + 0xE0]
	0x03B1389C CBNZ W8, 0x3B138A8
	0x03B138A0 BL 0x1C16DFC
	0x03B138A4 LDR X0, [X21]
	0x03B138A8 LDR X8, [X0 + 0xB8]
	0x03B138AC LDR X0, [X8 + 0x18]
	0x03B138B0 CBZ X0, 0x3B138D8
	0x03B138B4 ADRP X8, 0x645000
	0x03B138B8 LDR X8, [X8 + 0x520]
	0x03B138BC MOV W1, W20
	0x03B138C0 MOV X2, X19
	0x03B138C4 LDP X20, X19, [X31 + 0x20]
	0x03B138C8 LDR X3, [X8]
	0x03B138CC LDP X22, X21, [X31 + 0x10]
	0x03B138D0 LDR X30, [X31], #0x30
	0x03B138D4 B 0x2A150AC
	0x03B138D8 BL 0x1C16F20
	0x03B138DC STR X30, [X31 - 0x40]!
	0x03B138E0 STP X24, X23, [X31 + 0x10]
	0x03B138E4 STP X22, X21, [X31 + 0x20]
	0x03B138E8 STP X20, X19, [X31 + 0x30]
	0x03B138EC ADRP X20, 0x8CF000
	0x03B138F0 LDRB W8, [X20 + 0x69A]
	0x03B138F4 MOV W19, W0
	0x03B138F8 TBNZ X8, 0x0, 0x3B13934
	0x03B138FC ADRP X0, 0x5E1000
	0x03B13900 LDR X0, [X0 + 0xDF8]
	0x03B13904 BL 0x1C16CF4
	0x03B13908 ADRP X0, 0x645000
	0x03B1390C LDR X0, [X0 + 0x610]
	0x03B13910 BL 0x1C16CF4
	0x03B13914 ADRP X0, 0x645000
	0x03B13918 LDR X0, [X0 + 0xC48]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x8D0000
	015 Move W8, [X19+1679]
	016 Move W21, W1
	017 Move X29, X0
	018 Move [X31+28], W2
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {44}
	023 Move X0, 0x647000
	024 Move X0, [X0+1904]
	025 Call 0x1C17CF4
	026 Move X0, 0x60A000
	027 Move X0, [X0+3792]
	028 Call 0x1C17CF4
	029 Move X0, 0x647000
	030 Move X0, [X0+1912]
	031 Call 0x1C17CF4
	032 Move X0, 0x63C000
	033 Move X0, [X0+552]
	034 Call 0x1C17CF4
	035 Move X0, 0x647000
	036 Move X0, [X0+1920]
	037 Call 0x1C17CF4
	038 Move X0, 0x646000
	039 Move X0, [X0+840]
	040 Call 0x1C17CF4
	041 Move W2, [X31+28]
	042 Move W8, 1
	043 Move [X19+1679], W8
	044 And W31, W2, 1
	045 Move W8, 4
	046 Move W9, 8
	047 Move X0, X29
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Add X0, X0, 16
	050 Move X8, [X0]
	051 Move W9, 0xFFFC
	052 Move W10, 6
	053 Move W11, 36
	054 NotImplemented "Instruction UDIV not yet implemented."
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Compare X8, 0
	059 JumpIfEqual {573}
	060 Move X20, 0x63C000
	061 Move X20, [X20+552]
	062 Move X21, 0x647000
	063 Move X26, 0x647000
	064 Move X21, [X21+1920]
	065 Move X26, [X26+1912]
	066 Move W8, [X8+24]
	067 Move X2, [X20]
	068 Multiply W22, W19, W27
	069 Move W1, W22
	070 Multiply W24, W19, W28
	071 NotImplemented "Instruction SDIV not yet implemented."
	072 Call Array.Resize, X0, X1
	073 Move X2, [X20]
	074 Add X23, X29, 24
	075 Move X0, X23
	076 Move W1, W22
	077 Call Array.Resize, X0, X1
	078 Move X2, [X21]
	079 Add X21, X29, 32
	080 Move X0, X21
	081 Move W1, W22
	082 Call Array.Resize, X0, X1
	083 Move X2, [X26]
	084 Add X0, X29, 40
	085 Move W1, W22
	086 Call Array.Resize, X0, X1
	087 Move X2, [X26]
	088 Add X0, X29, 48
	089 Move W1, W22
	090 Call Array.Resize, X0, X1
	091 Move X8, 0x647000
	092 Move X8, [X8+1904]
	093 Add X0, X29, 56
	094 Move W1, W22
	095 Move X2, [X8]
	096 Call Array.Resize, X0, X1
	097 Move X8, 0x60A000
	098 Move X8, [X8+3792]
	099 Add X0, X29, 64
	100 Move W1, W24
	101 Move [X31+40], X0
	102 Move X2, [X8]
	103 Call Array.Resize, X0, X1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, W19
	106 Move [X31+8], X29
	107 Move [X31+32], X8
	108 Move W1, W28
	109 Multiply W8, W28, W25
	110 Move X28, 0x646000
	111 Move X28, [X28+840]
	112 Move W16, [X31+28]
	113 Or W9, W31, 3
	114 Move X24, W25
	115 Add W29, W8, 17
	116 NotImplemented "Instruction MADD not yet implemented."
	117 Move W26, 12
	118 Move W17, W27
	119 Move [X31+20], W1
	120 Move [X31+24], W27
	121 Move X0, [X28]
	122 Move X20, [X23]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {131}
	126 Call 0x1C17DFC
	127 Move W1, [X31+20]
	128 Move W17, [X31+24]
	129 Move W16, [X31+28]
	130 Move X0, [X28]
	131 Compare X20, 0
	132 JumpIfEqual {573}
	133 Move W8, [X20+24]
	134 Subtract W27, W19, 3
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, [X0+184]
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 Move V1, [X8+12]
	139 Move X8, W27
	140 NotImplemented "Instruction MADD not yet implemented."
	141 Move [X9+32], D0
	142 Move [X9+40], S1
	143 Move X10, [X23]
	144 Compare X10, 0
	145 JumpIfEqual {573}
	146 Move W9, [X10+24]
	147 Subtract W22, W19, 2
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X9, [X28]
	150 Move X9, [X9+184]
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 Move V1, [X9+12]
	153 Move X9, W22
	154 NotImplemented "Instruction MADD not yet implemented."
	155 Move [X10+32], D0
	156 Move [X10+40], S1
	157 Move X11, [X23]
	158 Compare X11, 0
	159 JumpIfEqual {573}
	160 Move W10, [X11+24]
	161 Subtract W25, W19, 1
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X10, [X28]
	164 Move X10, [X10+184]
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move V1, [X10+12]
	167 Move X10, W25
	168 NotImplemented "Instruction MADD not yet implemented."
	169 Move [X11+32], D0
	170 Move [X11+40], S1
	171 Move X12, [X23]
	172 Compare X12, 0
	173 JumpIfEqual {573}
	174 Move W11, [X12+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X11, [X28]
	177 Move X11, [X11+184]
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move V1, [X11+12]
	180 Move X11, W19
	181 NotImplemented "Instruction MADD not yet implemented."
	182 Move [X12+32], D0
	183 Move [X12+40], S1
	184 Move X12, [X21]
	185 Compare X12, 0
	186 JumpIfEqual {573}
	187 Move W13, [X12+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X13, [X28]
	190 Add X8, X12, X8
	191 Move X13, [X13+184]
	192 Move V0, [X13+1]
	193 Move [X8+2], V0
	194 Move X8, [X21]
	195 Compare X8, 0
	196 JumpIfEqual {573}
	197 Move W12, [X8+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X12, [X28]
	200 Add X8, X8, X9
	201 Move X12, [X12+184]
	202 Move V0, [X12+1]
	203 Move [X8+2], V0
	204 Move X8, [X21]
	205 Compare X8, 0
	206 JumpIfEqual {573}
	207 Move W9, [X8+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X9, [X28]
	210 Add X8, X8, X10
	211 Move X9, [X9+184]
	212 Move V0, [X9+1]
	213 Move [X8+2], V0
	214 Move X8, [X21]
	215 Compare X8, 0
	216 JumpIfEqual {573}
	217 Move W9, [X8+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X9, [X28]
	220 Add X8, X8, X11
	221 Move X9, [X9+184]
	222 Move V0, [X9+1]
	223 Move [X8+2], V0
	224 Move TEMP, X16
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {333}
	228 Move X0, [X28]
	229 Move X20, [X23]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {238}
	233 Call 0x1C17DFC
	234 Move W1, [X31+20]
	235 Move W17, [X31+24]
	236 Move W16, [X31+28]
	237 Move X0, [X28]
	238 Compare X20, 0
	239 JumpIfEqual {573}
	240 Move W9, [X20+24]
	241 Add W8, W19, 1
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X9, [X0+184]
	244 Move X8, W8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 Move V1, [X9+12]
	247 NotImplemented "Instruction NOP not yet implemented."
	248 NotImplemented "Instruction MADD not yet implemented."
	249 Move [X9+32], D0
	250 Move [X9+40], S1
	251 Move X10, [X23]
	252 Compare X10, 0
	253 JumpIfEqual {573}
	254 Move W11, [X10+24]
	255 Add W9, W19, 2
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X11, [X28]
	258 Move X9, W9
	259 NotImplemented "Instruction MADD not yet implemented."
	260 Move X11, [X11+184]
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 Move V1, [X11+12]
	263 Move [X10+32], D0
	264 Move [X10+40], S1
	265 Move X11, [X23]
	266 Compare X11, 0
	267 JumpIfEqual {573}
	268 Move W12, [X11+24]
	269 Add W10, W19, 3
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X12, [X28]
	272 Move X10, W10
	273 NotImplemented "Instruction MADD not yet implemented."
	274 Move X12, [X12+184]
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 Move V1, [X12+12]
	277 Move [X11+32], D0
	278 Move [X11+40], S1
	279 Move X12, [X23]
	280 Compare X12, 0
	281 JumpIfEqual {573}
	282 Move W13, [X12+24]
	283 Add W11, W19, 4
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X13, [X28]
	286 Move X11, W11
	287 NotImplemented "Instruction MADD not yet implemented."
	288 Move X13, [X13+184]
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 Move V1, [X13+12]
	291 Move [X12+32], D0
	292 Move [X12+40], S1
	293 Move X12, [X21]
	294 Compare X12, 0
	295 JumpIfEqual {573}
	296 Move W13, [X12+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move X13, [X28]
	299 Add X8, X12, X8
	300 Move X13, [X13+184]
	301 Move V0, [X13+1]
	302 Move [X8+2], V0
	303 Move X8, [X21]
	304 Compare X8, 0
	305 JumpIfEqual {573}
	306 Move W12, [X8+24]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Move X12, [X28]
	309 Add X8, X8, X9
	310 Move X12, [X12+184]
	311 Move V0, [X12+1]
	312 Move [X8+2], V0
	313 Move X8, [X21]
	314 Compare X8, 0
	315 JumpIfEqual {573}
	316 Move W9, [X8+24]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Move X9, [X28]
	319 Add X8, X8, X10
	320 Move X9, [X9+184]
	321 Move V0, [X9+1]
	322 Move [X8+2], V0
	323 Move X8, [X21]
	324 Compare X8, 0
	325 JumpIfEqual {573}
	326 Move W9, [X8+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X9, [X28]
	329 Add X8, X8, X11
	330 Move X9, [X9+184]
	331 Move V0, [X9+1]
	332 Move [X8+2], V0
	333 Move X8, [X31+40]
	334 Move X8, [X8]
	335 Compare X8, 0
	336 JumpIfEqual {573}
	337 Move W9, [X8+24]
	338 Subtract W10, W29, 17
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add X11, X8, W10
	341 Subtract W10, W29, 16
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move [X11+32], W27
	344 Add X11, X8, W10
	345 Subtract W10, W29, 15
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move [X11+32], W22
	348 Add X11, X8, W10
	349 Subtract W10, W29, 14
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move [X11+32], W25
	352 Add X11, X8, W10
	353 Subtract W10, W29, 13
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move [X11+32], W25
	356 Add X11, X8, W10
	357 Subtract W10, W29, 12
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move [X11+32], W19
	360 Add X10, X8, W10
	361 Move [X10+32], W27
	362 Move TEMP, X16
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {489}
	366 Subtract W11, W29, 11
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Subtract W12, W29, 10
	369 Add W10, W19, 1
	370 Add X11, X8, W11
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move [X11+32], W10
	373 Add X13, X8, W12
	374 Subtract W12, W29, 9
	375 Add W11, W19, 2
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move [X13+32], W11
	378 Add X13, X8, W12
	379 Subtract W12, W29, 8
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move [X13+32], W22
	382 Add X13, X8, W12
	383 Subtract W12, W29, 7
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move [X13+32], W22
	386 Add X13, X8, W12
	387 Subtract W12, W29, 6
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move [X13+32], W27
	390 Add X13, X8, W12
	391 Subtract W12, W29, 5
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move [X13+32], W10
	394 Add X13, X8, W12
	395 Subtract W12, W29, 4
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move [X13+32], W19
	398 Add X13, X8, W12
	399 Subtract W12, W29, 3
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move [X13+32], W25
	402 Add X14, X8, W12
	403 Subtract W12, W29, 2
	404 Add W13, W19, 3
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move [X14+32], W13
	407 Subtract W14, W29, 1
	408 Add X12, X8, W12
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move [X12+32], W13
	411 Add W12, W19, 4
	412 Add X14, X8, W14
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Move [X14+32], W12
	415 Add W14, W29, 1
	416 Add X15, X8, W29
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move [X15+32], W19
	419 Add X15, X8, W14
	420 Add W14, W29, 2
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move [X15+32], W22
	423 Add X15, X8, W14
	424 Add W14, W29, 3
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move [X15+32], W11
	427 Add X15, X8, W14
	428 Add W14, W29, 4
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move [X15+32], W13
	431 Add X15, X8, W14
	432 Add W14, W29, 5
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move [X15+32], W13
	435 Add X15, X8, W14
	436 Add W14, W29, 6
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move [X15+32], W25
	439 Add X15, X8, W14
	440 Add W14, W29, 7
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move [X15+32], W22
	443 Add X15, X8, W14
	444 Add W14, W29, 8
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move [X15+32], W10
	447 Add X15, X8, W14
	448 Add W14, W29, 9
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move [X15+32], W27
	451 Add X15, X8, W14
	452 Add W14, W29, 10
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move [X15+32], W19
	455 Add X15, X8, W14
	456 Add W14, W29, 11
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Move [X15+32], W19
	459 Add X15, X8, W14
	460 Add W14, W29, 12
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move [X15+32], W12
	463 Add X15, X8, W14
	464 Add W14, W29, 13
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move [X15+32], W10
	467 Add X15, X8, W14
	468 Add W14, W29, 14
	469 NotImplemented "Instruction CMP not yet implemented."
	470 Move [X15+32], W12
	471 Add X15, X8, W14
	472 Add W14, W29, 15
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move [X15+32], W13
	475 Add W13, W29, 16
	476 Add X14, X8, W14
	477 NotImplemented "Instruction CMP not yet implemented."
	478 Move [X14+32], W11
	479 Add X14, X8, W13
	480 Add W13, W29, 17
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move [X14+32], W11
	483 Add W11, W29, 18
	484 Add X13, X8, W13
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move [X13+32], W10
	487 Add X8, X8, W11
	488 Move [X8+32], W12
	489 Move X8, [X31+32]
	490 Add X24, X24, 1
	491 Add W29, W29, W1
	492 Add W19, W19, W17
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Move X19, [X31+8]
	495 Move X0, [X19]
	496 Compare X0, 0
	497 JumpIfEqual {573}
	498 Move X1, [X19+16]
	499 Move X2, X31
	500 Call Mesh.set_vertices, X0, X1
	501 Move X0, [X19]
	502 Compare X0, 0
	503 JumpIfEqual {573}
	504 Move X1, [X19+24]
	505 Move X2, X31
	506 Call Mesh.set_normals, X0, X1
	507 Move X0, [X19]
	508 Compare X0, 0
	509 JumpIfEqual {573}
	510 Move X1, [X19+32]
	511 Move X2, X31
	512 Call Mesh.set_tangents, X0, X1
	513 Move X0, [X19]
	514 Compare X0, 0
	515 JumpIfEqual {573}
	516 Move X8, [X31+40]
	517 Move X20, [X31+128]
	518 Move X19, [X31+136]
	519 Move X22, [X31+112]
	520 Move X21, [X31+120]
	521 Move X24, [X31+96]
	522 Move X23, [X31+104]
	523 Move X1, [X8]
	524 Move X26, [X31+80]
	525 Move X25, [X31+88]
	526 Move X28, [X31+64]
	527 Move X27, [X31+72]
	528 Move X29, [X31+48]
	529 Move X30, [X31+56]
	530 Move X2, X31
	531 Add X31, X31, 144
	532 Call Mesh.set_triangles, X0, X1
	533 Return 
	534 Move X0, [X29]
	535 Compare X0, 0
	536 JumpIfEqual {573}
	537 Move X1, [X29+64]
	538 Move X2, X31
	539 Call Mesh.set_triangles, X0, X1
	540 Move X0, [X29]
	541 Compare X0, 0
	542 JumpIfEqual {573}
	543 Move X1, [X29+16]
	544 Move X2, X31
	545 Call Mesh.set_vertices, X0, X1
	546 Move X0, [X29]
	547 Compare X0, 0
	548 JumpIfEqual {573}
	549 Move X1, [X29+24]
	550 Move X2, X31
	551 Call Mesh.set_normals, X0, X1
	552 Move X0, [X29]
	553 Compare X0, 0
	554 JumpIfEqual {573}
	555 Move X1, [X21]
	556 Move X20, [X31+128]
	557 Move X19, [X31+136]
	558 Move X22, [X31+112]
	559 Move X21, [X31+120]
	560 Move X24, [X31+96]
	561 Move X23, [X31+104]
	562 Move X26, [X31+80]
	563 Move X25, [X31+88]
	564 Move X28, [X31+64]
	565 Move X27, [X31+72]
	566 Move X29, [X31+48]
	567 Move X30, [X31+56]
	568 Move X2, X31
	569 Add X31, X31, 144
	570 Call Mesh.set_tangents, X0, X1
	571 Return 
	572 Call 0x1C17F28
	573 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03B1391C BL 0x1C16CF4
	0x03B13920 ADRP X0, 0x646000
	0x03B13924 LDR X0, [X0 + 0x788]
	0x03B13928 BL 0x1C16CF4
	0x03B1392C MOVZ W8, 0x1
	0x03B13930 STRB W8, [X20 + 0x69A]
	0x03B13934 ADRP X22, 0x646000
	0x03B13938 ADRP X23, 0x645000
	0x03B1393C ADRP X24, 0x5E1000
	0x03B13940 LDR X22, [X22 + 0x788]
	0x03B13944 LDR X23, [X23 + 0xC48]
	0x03B13948 LDR X24, [X24 + 0xDF8]
	0x03B1394C MOV W20, W31
	0x03B13950 LDR X0, [X22]
	0x03B13954 LDR W8, [X0 + 0xE0]
	0x03B13958 CBNZ W8, 0x3B13964
	0x03B1395C BL 0x1C16DFC
	0x03B13960 LDR X0, [X22]
	0x03B13964 LDR X8, [X0 + 0xB8]
	0x03B13968 LDR X8, [X8 + 0x10]
	0x03B1396C CBZ X8, 0x3B139F0
	0x03B13970 LDR W9, [X8 + 0x18]
	0x03B13974 CMP W20, W9
	0x03B13978 B.GE 0x3B139DC
	0x03B1397C LDR W9, [X0 + 0xE0]
	0x03B13980 CBNZ W9, 0x3B13998
	0x03B13984 BL 0x1C16DFC
	0x03B13988 LDR X8, [X22]
	0x03B1398C LDR X8, [X8 + 0xB8]
	0x03B13990 LDR X8, [X8 + 0x10]
	0x03B13994 CBZ X8, 0x3B139F0
	0x03B13998 LDR X2, [X23]
	0x03B1399C MOV X0, X8
	0x03B139A0 MOV W1, W20
	0x03B139A4 BL 0x301BCCC
	0x03B139A8 CBZ X0, 0x3B139F0
	0x03B139AC MOV X21, X0
	0x03B139B0 LDR X0, [X0 + 0x1C0]
	0x03B139B4 CBZ X0, 0x3B139F0
	0x03B139B8 LDR X2, [X24]
	0x03B139BC MOV W1, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8D0000
	005 Move W8, [X20+1680]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5E1000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1680], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {50}
	019 Move W2, [X0+24]
	020 Move X20, 0x5E1000
	021 Move X20, [X20+1432]
	022 Move W1, W31
	023 Move X3, X31
	024 Call Array.Clear, X0, X1, X2
	025 Move [X19+8], W31
	026 Move X0, [X20]
	027 Move X20, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Inequality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {50}
	040 Move X0, [X19]
	041 Compare X0, 0
	042 JumpIfEqual {54}
	043 Move X1, [X19+16]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, X31
	047 Move X30, [X31+32]
	048 Call Mesh.set_vertices, X0, X1
	049 Return 
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void Clear(System.Boolean uploadChanges)

Disassembly:
	0x03B139C0 BL 0x2DAA59C
	0x03B139C4 TBZ X0, 0x0, 0x3B139D4
	0x03B139C8 MOV X0, X21
	0x03B139CC MOV X1, X31
	0x03B139D0 BL 0x3AE1A88
	0x03B139D4 ADD W20, W20, 0x1
	0x03B139D8 B 0x3B13950
	0x03B139DC LDP X20, X19, [X31 + 0x30]
	0x03B139E0 LDP X22, X21, [X31 + 0x20]
	0x03B139E4 LDP X24, X23, [X31 + 0x10]
	0x03B139E8 LDR X30, [X31], #0x40
	0x03B139EC RET
	0x03B139F0 BL 0x1C16F20
	0x03B139F4 STR X30, [X31 - 0x20]!
	0x03B139F8 STP X20, X19, [X31 + 0x10]
	0x03B139FC ADRP X20, 0x8CF000
	0x03B13A00 ADRP X19, 0x5E0000
	0x03B13A04 LDRB W8, [X20 + 0x69B]
	0x03B13A08 LDR X19, [X19 + 0xA28]
	0x03B13A0C TBNZ X8, 0x0, 0x3B13A30
	0x03B13A10 ADRP X0, 0x5E0000
	0x03B13A14 LDR X0, [X0 + 0xA28]
	0x03B13A18 BL 0x1C16CF4
	0x03B13A1C ADRP X0, 0x646000
	0x03B13A20 LDR X0, [X0 + 0x7A0]
	0x03B13A24 BL 0x1C16CF4
	0x03B13A28 MOVZ W8, 0x1
	0x03B13A2C STRB W8, [X20 + 0x69B]
	0x03B13A30 LDR X0, [X19]
	0x03B13A34 ADRP X19, 0x646000
	0x03B13A38 LDR W8, [X0 + 0xE0]
	0x03B13A3C LDR X19, [X19 + 0x7A0]
	0x03B13A40 CBNZ W8, 0x3B13A48
	0x03B13A44 BL 0x1C16DFC
	0x03B13A48 LDR X0, [X19]
	0x03B13A4C LDP X20, X19, [X31 + 0x10]
	0x03B13A50 MOV X1, X31
	0x03B13A54 LDR X30, [X31], #0x20
	0x03B13A58 B 0x3C06048
	0x03B13A5C STP X30, X21, [X31 - 0x20]!
	0x03B13A60 STP X20, X19, [X31 + 0x10]
	0x03B13A64 ADRP X21, 0x8CF000
	0x03B13A68 ADRP X20, 0x5E0000
	0x03B13A6C LDRB W8, [X21 + 0x69C]
	0x03B13A70 LDR X20, [X20 + 0xA28]
	0x03B13A74 MOV X19, X0
	0x03B13A78 TBNZ X8, 0x0, 0x3B13A9C
	0x03B13A7C ADRP X0, 0x5E0000
	0x03B13A80 LDR X0, [X0 + 0xA28]
	0x03B13A84 BL 0x1C16CF4
	0x03B13A88 ADRP X0, 0x646000
	0x03B13A8C LDR X0, [X0 + 0x7A8]
	0x03B13A90 BL 0x1C16CF4
	0x03B13A94 MOVZ W8, 0x1
	0x03B13A98 STRB W8, [X21 + 0x69C]
	0x03B13A9C LDR X0, [X20]
	0x03B13AA0 ADRP X20, 0x646000
	0x03B13AA4 LDR W8, [X0 + 0xE0]
	0x03B13AA8 LDR X20, [X20 + 0x7A8]
	0x03B13AAC CBNZ W8, 0x3B13AB4
	0x03B13AB0 BL 0x1C16DFC
	0x03B13AB4 LDR X0, [X20]
	0x03B13AB8 MOV X1, X31
	0x03B13ABC BL 0x3C06048
	0x03B13AC0 MOVZ W8, 0x1
	0x03B13AC4 STRB W8, [X19 + 0x20]
	0x03B13AC8 LDP X20, X19, [X31 + 0x10]
	0x03B13ACC LDP X30, X21, [X31], #0x20
	0x03B13AD0 RET
	0x03B13AD4 STP X30, X21, [X31 - 0x20]!
	0x03B13AD8 STP X20, X19, [X31 + 0x10]
	0x03B13ADC ADRP X21, 0x8CF000
	0x03B13AE0 ADRP X20, 0x5E0000
	0x03B13AE4 LDRB W8, [X21 + 0x69D]
	0x03B13AE8 LDR X20, [X20 + 0xA28]
	0x03B13AEC MOV X19, X0
	0x03B13AF0 TBNZ X8, 0x0, 0x3B13B14
	0x03B13AF4 ADRP X0, 0x5E0000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x8D0000
	007 Move W8, [X21+1681]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5E1000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x646000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1681], W8
	022 Move X0, [X19+16]
	023 Compare X0, 0
	024 JumpIfEqual {94}
	025 Move W2, [X0+24]
	026 Move X21, 0x5E1000
	027 Move X21, [X21+1432]
	028 Move W1, W31
	029 Move X3, X31
	030 Call Array.Clear, X0, X1, X2
	031 Move [X19+8], W31
	032 Move TEMP, X20
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {56}
	036 Move X0, [X21]
	037 Move X20, [X19]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {56}
	050 Move X0, [X19]
	051 Compare X0, 0
	052 JumpIfEqual {100}
	053 Move X1, [X19+16]
	054 Move X2, X31
	055 Call Mesh.set_vertices, X0, X1
	056 Move X0, [X21]
	057 Move X20, [X19]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {94}
	070 Move X20, 0x646000
	071 Move X20, [X20+840]
	072 Move X19, [X19]
	073 Move X0, [X20]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X20]
	079 Move X8, [X0+184]
	080 Move X9, [X8+48]
	081 Move V0, [X8+2]
	082 Move [X31+48], X9
	083 Move [X31+2], V0
	084 Compare X19, 0
	085 JumpIfEqual {100}
	086 Move V0, [X31+2]
	087 Move X8, [X31+48]
	088 Add X1, X31, 0
	089 Move X0, X19
	090 Move X2, X31
	091 Move [X31], V0
	092 Move [X31+16], X8
	093 Call Mesh.set_bounds, X0, X1
	094 Move X20, [X31+80]
	095 Move X19, [X31+88]
	096 Move X30, [X31+64]
	097 Move X21, [X31+72]
	098 Add X31, X31, 96
	099 Return 
	100 Call 0x1C17F20

Method: System.Void ClearUnusedVertices()

Disassembly:
	0x03B13AF8 LDR X0, [X0 + 0xA28]
	0x03B13AFC BL 0x1C16CF4
	0x03B13B00 ADRP X0, 0x646000
	0x03B13B04 LDR X0, [X0 + 0x7B0]
	0x03B13B08 BL 0x1C16CF4
	0x03B13B0C MOVZ W8, 0x1
	0x03B13B10 STRB W8, [X21 + 0x69D]
	0x03B13B14 LDR X0, [X20]
	0x03B13B18 ADRP X20, 0x646000
	0x03B13B1C LDR W8, [X0 + 0xE0]
	0x03B13B20 LDR X20, [X20 + 0x7B0]
	0x03B13B24 CBNZ W8, 0x3B13B2C
	0x03B13B28 BL 0x1C16DFC
	0x03B13B2C LDR X0, [X20]
	0x03B13B30 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+16]
	004 Compare X0, 0
	005 JumpIfEqual {16}
	006 Move W1, [X8+8]
	007 Move W8, [X0+24]
	008 Subtract W2, W8, W1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X3, X31
	011 Move X30, [X31+16]
	012 Call Array.Clear, X0, X1, X2
	013 Return 
	014 Move X30, [X31+16]
	015 Return 
	016 Call 0x1C17F20

Method: System.Void ClearUnusedVertices(System.Int32 startIndex)

Disassembly:
	0x03B13B34 BL 0x3C06048
	0x03B13B38 STRB W31, [X19 + 0x20]
	0x03B13B3C LDP X20, X19, [X31 + 0x10]
	0x03B13B40 LDP X30, X21, [X31], #0x20
	0x03B13B44 RET
	0x03B13B48 MOV X1, X31
	0x03B13B4C B 0x3C36C30
	0x03B13B50 STP D11, D10, [X31 - 0x40]!
	0x03B13B54 STP D9, D8, [X31 + 0x10]
	0x03B13B58 STP X30, X21, [X31 + 0x20]
	0x03B13B5C STP X20, X19, [X31 + 0x30]
	0x03B13B60 ADRP X21, 0x8CF000
	0x03B13B64 LDRB W8, [X21 + 0x69E]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {14}
	005 Move W8, [X0+24]
	006 Subtract W2, W8, W1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X3, X31
	009 Move X30, [X31+16]
	010 Call Array.Clear, X0, X1, X2
	011 Return 
	012 Move X30, [X31+16]
	013 Return 
	014 Call 0x1C17F20

Method: System.Void ClearUnusedVertices(System.Int32 startIndex, System.Boolean updateMesh)

Disassembly:
	0x03B13B68 MOV W20, W1
	0x03B13B6C MOV V8.16B, V3.16B
	0x03B13B70 MOV V9.16B, V2.16B
	0x03B13B74 MOV V10.16B, V1.16B
	0x03B13B78 MOV V11.16B, V0.16B
	0x03B13B7C MOV X19, X0
	0x03B13B80 TBNZ X8, 0x0, 0x3B13B98
	0x03B13B84 ADRP X0, 0x645000
	0x03B13B88 LDR X0, [X0 + 0x718]
	0x03B13B8C BL 0x1C16CF4
	0x03B13B90 MOVZ W8, 0x1
	0x03B13B94 STRB W8, [X21 + 0x69E]
	0x03B13B98 TBZ X20, 0x0, 0x3B13BEC
	0x03B13B9C MOV X0, X19
	0x03B13BA0 MOV X1, X31
	0x03B13BA4 BL 0x3CDBD2C
	0x03B13BA8 CBZ X0, 0x3B13C1C
	0x03B13BAC MOV W1, W31
	0x03B13BB0 MOV X2, X31
	0x03B13BB4 BL 0x3E22664
	0x03B13BB8 ADRP X8, 0x645000
	0x03B13BBC LDR X8, [X8 + 0x718]
	0x03B13BC0 LDR X0, [X8]
	0x03B13BC4 LDR W8, [X0 + 0xE0]
	0x03B13BC8 CBNZ W8, 0x3B13BD0
	0x03B13BCC BL 0x1C16DFC
	0x03B13BD0 MOV X0, X19
	0x03B13BD4 LDP X20, X19, [X31 + 0x30]
	0x03B13BD8 LDP X30, X21, [X31 + 0x20]
	0x03B13BDC LDP D9, D8, [X31 + 0x10]
	0x03B13BE0 MOV X1, X31
	0x03B13BE4 LDP D11, D10, [X31], #0x40
	0x03B13BE8 B 0x3CD16F4
	0x03B13BEC MOV X0, X19
	0x03B13BF0 MOV V2.16B, V9.16B
	0x03B13BF4 MOV V3.16B, V8.16B
	0x03B13BF8 LDP X20, X19, [X31 + 0x30]
	0x03B13BFC LDP X30, X21, [X31 + 0x20]
	0x03B13C00 LDP D9, D8, [X31 + 0x10]
	0x03B13C04 MOV V0.16B, V11.16B
	0x03B13C08 MOV V1.16B, V10.16B
	0x03B13C0C MOV W1, W31
	0x03B13C10 MOV X2, X31
	0x03B13C14 LDP D11, D10, [X31], #0x40
	0x03B13C18 B 0x3E37438
	0x03B13C1C BL 0x1C16F20
	0x03B13C20 RET
	0x03B13C24 MOV X1, X31
	0x03B13C28 B 0x3E37FD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8D0000
	007 Move W8, [X22+1682]
	008 Move W20, W2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x5E1000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1682], W8
	020 Move X0, [X19+16]
	021 Compare X0, 0
	022 JumpIfEqual {67}
	023 Move W8, [X0+24]
	024 Subtract W2, W8, W21
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W1, W21
	027 Move X3, X31
	028 Call Array.Clear, X0, X1, X2
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {61}
	033 Move X8, 0x5E1000
	034 Move X8, [X8+1432]
	035 Move X20, [X19]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {61}
	049 Move X0, [X19]
	050 Compare X0, 0
	051 JumpIfEqual {67}
	052 Move X1, [X19+16]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X2, X31
	058 Move X30, [X31+48]
	059 Call Mesh.set_vertices, X0, X1
	060 Return 
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void SortGeometry(TMPro.VertexSortingOrder order)

Disassembly:
	0x03B13C2C STR X30, [X31 - 0x20]!
	0x03B13C30 STP X20, X19, [X31 + 0x10]
	0x03B13C34 ADRP X19, 0x8CF000
	0x03B13C38 ADRP X20, 0x646000
	0x03B13C3C LDRB W8, [X19 + 0x69F]
	0x03B13C40 LDR X20, [X20 + 0x7B8]
	0x03B13C44 TBNZ X8, 0x0, 0x3B13C5C
	0x03B13C48 ADRP X0, 0x646000
	0x03B13C4C LDR X0, [X0 + 0x7B8]
	0x03B13C50 BL 0x1C16CF4
	0x03B13C54 MOVZ W8, 0x1
	0x03B13C58 STRB W8, [X19 + 0x69F]
	0x03B13C5C LDR X0, [X20]
	0x03B13C60 LDP X20, X19, [X31 + 0x10]
	0x03B13C64 LDR X30, [X31], #0x20
	0x03B13C68 RET
	0x03B13C6C STR X30, [X31 - 0x10]!
	0x03B13C70 BL 0x3B13C88
	0x03B13C74 CBZ X0, 0x3B13C84
	0x03B13C78 LDRB W0, [X0 + 0x18]
	0x03B13C7C LDR X30, [X31], #0x10
	0x03B13C80 RET
	0x03B13C84 BL 0x1C16F20
	0x03B13C88 STP X30, X21, [X31 - 0x20]!
	0x03B13C8C STP X20, X19, [X31 + 0x10]
	0x03B13C90 ADRP X21, 0x8CF000
	0x03B13C94 ADRP X20, 0x646000
	0x03B13C98 ADRP X19, 0x5E0000
	0x03B13C9C LDRB W8, [X21 + 0x6A0]
	0x03B13CA0 LDR X20, [X20 + 0x7C0]
	0x03B13CA4 LDR X19, [X19 + 0x598]
	0x03B13CA8 TBNZ X8, 0x0, 0x3B13CE4
	0x03B13CAC ADRP X0, 0x5E0000
	0x03B13CB0 LDR X0, [X0 + 0x598]
	0x03B13CB4 BL 0x1C16CF4
	0x03B13CB8 ADRP X0, 0x646000
	0x03B13CBC LDR X0, [X0 + 0x790]
	0x03B13CC0 BL 0x1C16CF4
	0x03B13CC4 ADRP X0, 0x646000
	0x03B13CC8 LDR X0, [X0 + 0x7C0]
	0x03B13CCC BL 0x1C16CF4
	0x03B13CD0 ADRP X0, 0x646000
	0x03B13CD4 LDR X0, [X0 + 0x7C8]
	0x03B13CD8 BL 0x1C16CF4
	0x03B13CDC MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x8D0000
	008 Move W8, [X21+1683]
	009 Move W20, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x646000
	016 Move X0, [X0+840]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1683], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W9, [X19+8]
	022 Add W8, W9, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X23, 0x646000
	027 Move X23, [X23+840]
	028 NotImplemented "Instruction SBFM not yet implemented."
	029 Move W8, W22
	030 ShiftRight W8, 30
	031 And W8, W8, 0x1FFFFFFF
	032 Move W20, W31
	033 Subtract W21, W8, 4
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move W1, W20
	042 Move W2, W21
	043 Call TMP_MeshInfo.SwapVertexData, X0, X1, X2
	044 Subtract W22, W22, 1
	045 Add W20, W20, 4
	046 Subtract W21, W21, 4
	047 Compare W22, 0
	048 JumpIfNotEqual {34}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return 

Method: System.Void SortGeometry(System.Collections.Generic.IList`1<System.Int32> sortingOrder)

Disassembly:
	0x03B1426C STP X20, X19, [X31 + 0x10]
	0x03B14270 ADRP X19, 0x8CE000
	0x03B14274 ADRP X20, 0x645000
	0x03B14278 ADRP X21, 0x5DF000
	0x03B1427C LDRB W8, [X19 + 0x6A1]
	0x03B14280 LDR X20, [X20 + 0x7C0]
	0x03B14284 LDR X21, [X21 + 0x598]
	0x03B14288 TBNZ X8, 0x0, 0x3B142C4
	0x03B1428C ADRP X0, 0x5DF000
	0x03B14290 LDR X0, [X0 + 0x598]
	0x03B14294 BL 0x1C16CF4
	0x03B14298 ADRP X0, 0x645000
	0x03B1429C LDR X0, [X0 + 0x790]
	0x03B142A0 BL 0x1C16CF4
	0x03B142A4 ADRP X0, 0x645000
	0x03B142A8 LDR X0, [X0 + 0x7C0]
	0x03B142AC BL 0x1C16CF4
	0x03B142B0 ADRP X0, 0x645000
	0x03B142B4 LDR X0, [X0 + 0x7C8]
	0x03B142B8 BL 0x1C16CF4
	0x03B142BC MOVZ W8, 0x1
	0x03B142C0 STRB W8, [X19 + 0x6A1]
	0x03B142C4 LDR X8, [X20]
	0x03B142C8 LDR X0, [X21]
	0x03B142CC LDR X8, [X8 + 0xB8]
	0x03B142D0 LDR W9, [X0 + 0xE0]
	0x03B142D4 LDR X19, [X8]
	0x03B142D8 CBNZ W9, 0x3B142E0
	0x03B142DC BL 0x1C16DFC
	0x03B142E0 MOV X0, X19
	0x03B142E4 MOV X1, X31
	0x03B142E8 MOV X2, X31
	0x03B142EC BL 0x3C3883C
	0x03B142F0 TBZ X0, 0x0, 0x3B14348
	0x03B142F4 ADRP X8, 0x645000
	0x03B142F8 ADRP X9, 0x645000
	0x03B142FC LDR X8, [X8 + 0x7C8]
	0x03B14300 LDR X9, [X9 + 0x790]
	0x03B14304 LDR X0, [X8]
	0x03B14308 LDR X1, [X9]
	0x03B1430C BL 0x2241FB8
	0x03B14310 LDR X8, [X21]
	0x03B14314 MOV X19, X0
	0x03B14318 LDR W9, [X8 + 0xE0]
	0x03B1431C CBNZ W9, 0x3B14328
	0x03B14320 MOV X0, X8
	0x03B14324 BL 0x1C16DFC
	0x03B14328 MOV X0, X19
	0x03B1432C MOV X1, X31
	0x03B14330 MOV X2, X31
	0x03B14334 BL 0x3C354F8
	0x03B14338 TBZ X0, 0x0, 0x3B14348
	0x03B1433C LDR X8, [X20]
	0x03B14340 LDR X8, [X8 + 0xB8]
	0x03B14344 STR X19, [X8]
	0x03B14348 LDR X8, [X20]
	0x03B1434C LDP X20, X19, [X31 + 0x10]
	0x03B14350 LDR X8, [X8 + 0xB8]
	0x03B14354 LDR X0, [X8]
	0x03B14358 LDP X30, X21, [X31], #0x20
	0x03B1435C RET
	0x03B14360 STR X30, [X31 - 0x20]!
	0x03B14364 STP X20, X19, [X31 + 0x10]
	0x03B14368 ADRP X20, 0x8CE000
	0x03B1436C ADRP X19, 0x5DF000
	0x03B14370 LDRB W8, [X20 + 0x6A2]
	0x03B14374 LDR X19, [X19 + 0x598]
	0x03B14378 TBNZ X8, 0x0, 0x3B14390
	0x03B1437C ADRP X0, 0x5DF000
	0x03B14380 LDR X0, [X0 + 0x598]
	0x03B14384 BL 0x1C16CF4
	0x03B14388 MOVZ W8, 0x1
	0x03B1438C STRB W8, [X20 + 0x6A2]
	0x03B14390 BL 0x3B13C88
	0x03B14394 LDR X8, [X19]
	0x03B14398 MOV X19, X0
	0x03B1439C LDR W9, [X8 + 0xE0]
	0x03B143A0 CBNZ W9, 0x3B143AC
	0x03B143A4 MOV X0, X8
	0x03B143A8 BL 0x1C16DFC
	0x03B143AC MOV X0, X19
	0x03B143B0 MOV X1, X31
	0x03B143B4 MOV X2, X31
	0x03B143B8 BL 0x3C3883C
	0x03B143BC TBZ X0, 0x0, 0x3B143D0
	0x03B143C0 LDP X20, X19, [X31 + 0x10]
	0x03B143C4 MOV X0, X31
	0x03B143C8 LDR X30, [X31], #0x20
	0x03B143CC RET
	0x03B143D0 LDP X20, X19, [X31 + 0x10]
	0x03B143D4 LDR X30, [X31], #0x20
	0x03B143D8 B 0x3B13C88
	0x03B143DC STR X30, [X31 - 0x20]!
	0x03B143E0 STP X20, X19, [X31 + 0x10]
	0x03B143E4 ADRP X20, 0x8CE000
	0x03B143E8 ADRP X19, 0x5DF000
	0x03B143EC LDRB W8, [X20 + 0x6A3]
	0x03B143F0 LDR X19, [X19 + 0x598]
	0x03B143F4 TBNZ X8, 0x0, 0x3B1440C
	0x03B143F8 ADRP X0, 0x5DF000
	0x03B143FC LDR X0, [X0 + 0x598]
	0x03B14400 BL 0x1C16CF4
	0x03B14404 MOVZ W8, 0x1
	0x03B14408 STRB W8, [X20 + 0x6A3]
	0x03B1440C BL 0x3B13C88
	0x03B14410 LDR X8, [X19]
	0x03B14414 MOV X19, X0
	0x03B14418 LDR W9, [X8 + 0xE0]
	0x03B1441C CBNZ W9, 0x3B14428
	0x03B14420 MOV X0, X8
	0x03B14424 BL 0x1C16DFC
	0x03B14428 MOV X0, X19
	0x03B1442C MOV X1, X31
	0x03B14430 MOV X2, X31
	0x03B14434 BL 0x3C3883C
	0x03B14438 MOV W8, W0
	0x03B1443C MOV X0, X31
	0x03B14440 TBNZ X8, 0x0, 0x3B14450
	0x03B14444 BL 0x3B13C88
	0x03B14448 CBZ X0, 0x3B1445C
	0x03B1444C LDR X0, [X0 + 0x28]
	0x03B14450 LDP X20, X19, [X31 + 0x10]
	0x03B14454 LDR X30, [X31], #0x20
	0x03B14458 RET
	0x03B1445C BL 0x1C16F20
	0x03B14460 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x8CF000
	010 Move W8, [X21+1684]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x608000
	018 Move X0, [X0+1952]
	019 Call 0x1C17CF4
	020 Move X0, 0x608000
	021 Move X0, [X0+1960]
	022 Call 0x1C17CF4
	023 Move X0, 0x645000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1684], W8
	028 Compare X19, 0
	029 JumpIfEqual {135}
	030 Move X10, 0x608000
	031 Move X8, [X19]
	032 Move X10, [X10+1952]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X19
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X19
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X20+16]
	054 Compare X8, 0
	055 JumpIfEqual {135}
	056 Move W8, [X8+24]
	057 Move W21, W0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X24, 0x608000
	061 Move X25, 0x645000
	062 Move X24, [X24+1960]
	063 Move X25, [X25+840]
	064 Move W22, W31
	065 Move X8, [X19]
	066 Move X1, [X24]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move X0, X19
	077 Move W2, W31
	078 Call 0x1C5D788
	079 NotImplemented "Instruction LDRSW not yet implemented."
	080 Add X8, X8, X9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X2, [X0+8]
	084 Move X0, X19
	085 Move W1, W22
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move W23, W0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X19]
	090 Move X1, [X24]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X19
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X2, [X0+8]
	108 Move X0, X19
	109 Move W1, W23
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, [X25]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move W1, W23
	117 ShiftRight W1, 30
	118 And W1, W1, 0x1FFFFFFF
	119 Move W2, W22
	120 ShiftRight W2, 30
	121 And W2, W2, 0x1FFFFFFF
	122 Move X0, X20
	123 Call TMP_MeshInfo.SwapVertexData, X0, X1, X2
	124 Add W22, W22, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X24, [X31+16]
	131 Move X23, [X31+24]
	132 Move X30, [X31+64]
	133 Move X25, [X31+72]
	134 Return 
	135 Call 0x1C17F20

Method: System.Void SwapVertexData(System.Int32 src, System.Int32 dst)

Disassembly:
	0x03B13CE0 STRB W8, [X21 + 0x6A0]
	0x03B13CE4 LDR X8, [X20]
	0x03B13CE8 LDR X0, [X19]
	0x03B13CEC LDR X8, [X8 + 0xB8]
	0x03B13CF0 LDR W9, [X0 + 0xE0]
	0x03B13CF4 LDR X19, [X8]
	0x03B13CF8 CBNZ W9, 0x3B13D00
	0x03B13CFC BL 0x1C16DFC
	0x03B13D00 MOV X0, X19
	0x03B13D04 MOV X1, X31
	0x03B13D08 MOV X2, X31
	0x03B13D0C BL 0x3C3883C
	0x03B13D10 TBZ X0, 0x0, 0x3B13D3C
	0x03B13D14 ADRP X8, 0x646000
	0x03B13D18 ADRP X9, 0x646000
	0x03B13D1C LDR X8, [X8 + 0x7C8]
	0x03B13D20 LDR X9, [X9 + 0x790]
	0x03B13D24 LDR X0, [X8]
	0x03B13D28 LDR X1, [X9]
	0x03B13D2C BL 0x2241FB8
	0x03B13D30 LDR X8, [X20]
	0x03B13D34 LDR X8, [X8 + 0xB8]
	0x03B13D38 STR X0, [X8]
	0x03B13D3C LDR X8, [X20]
	0x03B13D40 LDP X20, X19, [X31 + 0x10]
	0x03B13D44 LDR X8, [X8 + 0xB8]
	0x03B13D48 LDR X0, [X8]
	0x03B13D4C LDP X30, X21, [X31], #0x20
	0x03B13D50 RET
	0x03B13D54 STR X30, [X31 - 0x10]!
	0x03B13D58 BL 0x3B13C88
	0x03B13D5C CBZ X0, 0x3B13D6C
	0x03B13D60 LDRB W0, [X0 + 0x19]
	0x03B13D64 LDR X30, [X31], #0x10
	0x03B13D68 RET
	0x03B13D6C BL 0x1C16F20
	0x03B13D70 STR X30, [X31 - 0x10]!
	0x03B13D74 BL 0x3B13C88
	0x03B13D78 CBZ X0, 0x3B13D88
	0x03B13D7C LDRB W0, [X0 + 0x1A]
	0x03B13D80 LDR X30, [X31], #0x10
	0x03B13D84 RET
	0x03B13D88 BL 0x1C16F20
	0x03B13D8C STR X30, [X31 - 0x10]!
	0x03B13D90 BL 0x3B13C88
	0x03B13D94 CBZ X0, 0x3B13DA4
	0x03B13D98 LDRB W0, [X0 + 0x1B]
	0x03B13D9C LDR X30, [X31], #0x10
	0x03B13DA0 RET
	0x03B13DA4 BL 0x1C16F20
	0x03B13DA8 STR X30, [X31 - 0x10]!
	0x03B13DAC BL 0x3B13C88
	0x03B13DB0 CBZ X0, 0x3B13DC0
	0x03B13DB4 LDRB W0, [X0 + 0x1C]
	0x03B13DB8 LDR X30, [X31], #0x10
	0x03B13DBC RET
	0x03B13DC0 BL 0x1C16F20
	0x03B13DC4 STR X30, [X31 - 0x10]!
	0x03B13DC8 BL 0x3B13C88
	0x03B13DCC CBZ X0, 0x3B13DDC
	0x03B13DD0 LDRB W0, [X0 + 0x1D]
	0x03B13DD4 LDR X30, [X31], #0x10
	0x03B13DD8 RET
	0x03B13DDC BL 0x1C16F20
	0x03B13DE0 STR X30, [X31 - 0x10]!
	0x03B13DE4 BL 0x3B13C88
	0x03B13DE8 CBZ X0, 0x3B13DF8
	0x03B13DEC LDRB W0, [X0 + 0x1E]
	0x03B13DF0 LDR X30, [X31], #0x10
	0x03B13DF4 RET
	0x03B13DF8 BL 0x1C16F20
	0x03B13DFC STR X30, [X31 - 0x10]!
	0x03B13E00 BL 0x3B13C88
	0x03B13E04 CBZ X0, 0x3B13E14
	0x03B13E08 LDR W0, [X0 + 0x20]
	0x03B13E0C LDR X30, [X31], #0x10
	0x03B13E10 RET
	0x03B13E14 BL 0x1C16F20
	0x03B13E18 STP X30, X19, [X31 - 0x10]!
	0x03B13E1C MOV W19, W0
	0x03B13E20 BL 0x3B13C88
	0x03B13E24 CBZ X0, 0x3B13E34
	0x03B13E28 STR W19, [X0 + 0x20]
	0x03B13E2C LDP X30, X19, [X31], #0x10
	0x03B13E30 RET
	0x03B13E34 BL 0x1C16F20
	0x03B13E38 STR X30, [X31 - 0x10]!
	0x03B13E3C BL 0x3B13C88
	0x03B13E40 CBZ X0, 0x3B13E50
	0x03B13E44 LDRB W0, [X0 + 0x24]
	0x03B13E48 LDR X30, [X31], #0x10
	0x03B13E4C RET
	0x03B13E50 BL 0x1C16F20
	0x03B13E54 STR X30, [X31 - 0x10]!
	0x03B13E58 BL 0x3B13C88
	0x03B13E5C CBZ X0, 0x3B13E6C
	0x03B13E60 LDR X0, [X0 + 0x28]
	0x03B13E64 LDR X30, [X31], #0x10
	0x03B13E68 RET
	0x03B13E6C BL 0x1C16F20
	0x03B13E70 STR X30, [X31 - 0x10]!
	0x03B13E74 BL 0x3B13C88
	0x03B13E78 CBZ X0, 0x3B13E88
	0x03B13E7C LDR X0, [X0 + 0x30]
	0x03B13E80 LDR X30, [X31], #0x10
	0x03B13E84 RET
	0x03B13E88 BL 0x1C16F20
	0x03B13E8C STR X30, [X31 - 0x10]!
	0x03B13E90 BL 0x3B13C88
	0x03B13E94 CBZ X0, 0x3B13EA4
	0x03B13E98 LDR V0, [X0 + 0x38]
	0x03B13E9C LDR X30, [X31], #0x10
	0x03B13EA0 RET
	0x03B13EA4 BL 0x1C16F20
	0x03B13EA8 STR X30, [X31 - 0x10]!
	0x03B13EAC BL 0x3B13C88
	0x03B13EB0 CBZ X0, 0x3B13EC0
	0x03B13EB4 LDR V0, [X0 + 0x3C]
	0x03B13EB8 LDR X30, [X31], #0x10
	0x03B13EBC RET
	0x03B13EC0 BL 0x1C16F20
	0x03B13EC4 STR X30, [X31 - 0x10]!
	0x03B13EC8 BL 0x3B13C88
	0x03B13ECC CBZ X0, 0x3B13EDC
	0x03B13ED0 LDR V0, [X0 + 0x40]
	0x03B13ED4 LDR X30, [X31], #0x10
	0x03B13ED8 RET
	0x03B13EDC BL 0x1C16F20
	0x03B13EE0 STR X30, [X31 - 0x10]!
	0x03B13EE4 BL 0x3B13C88
	0x03B13EE8 CBZ X0, 0x3B13EF8
	0x03B13EEC LDP S0, S1, [X0 + 0x44]
	0x03B13EF0 LDR X30, [X31], #0x10
	0x03B13EF4 RET
	0x03B13EF8 BL 0x1C16F20
	0x03B13EFC STR X30, [X31 - 0x10]!
	0x03B13F00 BL 0x3B13C88
	0x03B13F04 CBZ X0, 0x3B13F14
	0x03B13F08 LDP S0, S1, [X0 + 0x4C]
	0x03B13F0C LDR X30, [X31], #0x10
	0x03B13F10 RET
	0x03B13F14 BL 0x1C16F20
	0x03B13F18 STR X30, [X31 - 0x10]!
	0x03B13F1C BL 0x3B13C88
	0x03B13F20 CBZ X0, 0x3B13F30
	0x03B13F24 LDRB W0, [X0 + 0x54]
	0x03B13F28 LDR X30, [X31], #0x10
	0x03B13F2C RET
	0x03B13F30 BL 0x1C16F20
	0x03B13F34 STR X30, [X31 - 0x10]!
	0x03B13F38 BL 0x3B13C88
	0x03B13F3C CBZ X0, 0x3B13F4C
	0x03B13F40 LDRB W0, [X0 + 0x55]
	0x03B13F44 LDR X30, [X31], #0x10
	0x03B13F48 RET
	0x03B13F4C BL 0x1C16F20
	0x03B13F50 STP X30, X19, [X31 - 0x10]!
	0x03B13F54 MOV W19, W0
	0x03B13F58 BL 0x3B13C88
	0x03B13F5C CBZ X0, 0x3B13F70
	0x03B13F60 AND W8, W19, 0x1
	0x03B13F64 STRB W8, [X0 + 0x55]
	0x03B13F68 LDP X30, X19, [X31], #0x10
	0x03B13F6C RET
	0x03B13F70 BL 0x1C16F20
	0x03B13F74 STR X30, [X31 - 0x10]!
	0x03B13F78 BL 0x3B13C88
	0x03B13F7C CBZ X0, 0x3B13F8C
	0x03B13F80 LDR X0, [X0 + 0x58]
	0x03B13F84 LDR X30, [X31], #0x10
	0x03B13F88 RET
	0x03B13F8C BL 0x1C16F20
	0x03B13F90 STR X30, [X31 - 0x10]!
	0x03B13F94 BL 0x3B13C88
	0x03B13F98 CBZ X0, 0x3B13FA8
	0x03B13F9C LDRB W0, [X0 + 0x60]
	0x03B13FA0 LDR X30, [X31], #0x10
	0x03B13FA4 RET
	0x03B13FA8 BL 0x1C16F20
	0x03B13FAC STR X30, [X31 - 0x10]!
	0x03B13FB0 BL 0x3B13C88
	0x03B13FB4 CBZ X0, 0x3B13FC4
	0x03B13FB8 LDR X0, [X0 + 0x68]
	0x03B13FBC LDR X30, [X31], #0x10
	0x03B13FC0 RET
	0x03B13FC4 BL 0x1C16F20
	0x03B13FC8 STR X30, [X31 - 0x10]!
	0x03B13FCC BL 0x3B13C88
	0x03B13FD0 CBZ X0, 0x3B13FE0
	0x03B13FD4 LDR X0, [X0 + 0x70]
	0x03B13FD8 LDR X30, [X31], #0x10
	0x03B13FDC RET
	0x03B13FE0 BL 0x1C16F20
	0x03B13FE4 STR X30, [X31 - 0x10]!
	0x03B13FE8 BL 0x3B13C88
	0x03B13FEC CBZ X0, 0x3B13FFC
	0x03B13FF0 LDRB W0, [X0 + 0x78]
	0x03B13FF4 LDR X30, [X31], #0x10
	0x03B13FF8 RET
	0x03B13FFC BL 0x1C16F20
	0x03B14000 STP X30, X19, [X31 - 0x10]!
	0x03B14004 MOV W19, W0
	0x03B14008 BL 0x3B13C88
	0x03B1400C CBZ X0, 0x3B14020
	0x03B14010 AND W8, W19, 0x1
	0x03B14014 STRB W8, [X0 + 0x78]
	0x03B14018 LDP X30, X19, [X31], #0x10
	0x03B1401C RET
	0x03B14020 BL 0x1C16F20
	0x03B14024 STR X30, [X31 - 0x10]!
	0x03B14028 BL 0x3B13C88
	0x03B1402C CBZ X0, 0x3B1403C
	0x03B14030 LDR W0, [X0 + 0x7C]
	0x03B14034 LDR X30, [X31], #0x10
	0x03B14038 RET
	0x03B1403C BL 0x1C16F20
	0x03B14040 STP X30, X19, [X31 - 0x10]!
	0x03B14044 MOV W19, W0
	0x03B14048 BL 0x3B13C88
	0x03B1404C CBZ X0, 0x3B1405C
	0x03B14050 STR W19, [X0 + 0x7C]
	0x03B14054 LDP X30, X19, [X31], #0x10
	0x03B14058 RET
	0x03B1405C BL 0x1C16F20
	0x03B14060 STR X30, [X31 - 0x10]!
	0x03B14064 BL 0x3B13C88
	0x03B14068 CBZ X0, 0x3B14078
	0x03B1406C LDR X0, [X0 + 0x80]
	0x03B14070 LDR X30, [X31], #0x10
	0x03B14074 RET
	0x03B14078 BL 0x1C16F20
	0x03B1407C STR X30, [X31 - 0x10]!
	0x03B14080 BL 0x3B13C88
	0x03B14084 CBZ X0, 0x3B14094
	0x03B14088 LDR X0, [X0 + 0x88]
	0x03B1408C LDR X30, [X31], #0x10
	0x03B14090 RET
	0x03B14094 BL 0x1C16F20
	0x03B14098 STR X30, [X31 - 0x10]!
	0x03B1409C BL 0x3B13C88
	0x03B140A0 CBZ X0, 0x3B140B0
	0x03B140A4 LDR X0, [X0 + 0x90]
	0x03B140A8 LDR X30, [X31], #0x10
	0x03B140AC RET
	0x03B140B0 BL 0x1C16F20
	0x03B140B4 STR X30, [X31 - 0x10]!
	0x03B140B8 BL 0x3B13C88
	0x03B140BC CBZ X0, 0x3B140CC
	0x03B140C0 LDR X0, [X0 + 0x98]
	0x03B140C4 LDR X30, [X31], #0x10
	0x03B140C8 RET
	0x03B140CC BL 0x1C16F20
	0x03B140D0 STR X30, [X31 - 0x10]!
	0x03B140D4 BL 0x3B13C88
	0x03B140D8 CBZ X0, 0x3B140E8
	0x03B140DC LDR X0, [X0 + 0xA0]
	0x03B140E0 LDR X30, [X31], #0x10
	0x03B140E4 RET
	0x03B140E8 BL 0x1C16F20
	0x03B140EC STR X30, [X31 - 0x10]!
	0x03B140F0 BL 0x3B13C88
	0x03B140F4 CBZ X0, 0x3B14118
	0x03B140F8 LDR X8, [X0 + 0xA8]
	0x03B140FC CBNZ X8, 0x3B14104
	0x03B14100 BL 0x3B1411C
	0x03B14104 BL 0x3B13C88
	0x03B14108 CBZ X0, 0x3B14118
	0x03B1410C LDR X0, [X0 + 0xA8]
	0x03B14110 LDR X30, [X31], #0x10
	0x03B14114 RET
	0x03B14118 BL 0x1C16F20
	0x03B1411C STP X30, X21, [X31 - 0x20]!
	0x03B14120 STP X20, X19, [X31 + 0x10]
	0x03B14124 ADRP X20, 0x8CE000
	0x03B14128 ADRP X19, 0x5DF000
	0x03B1412C LDRB W8, [X20 + 0x6A6]
	0x03B14130 LDR X19, [X19 + 0x598]
	0x03B14134 TBNZ X8, 0x0, 0x3B14164
	0x03B14138 ADRP X0, 0x645000
	0x03B1413C LDR X0, [X0 + 0x7D0]
	0x03B14140 BL 0x1C16CF4
	0x03B14144 ADRP X0, 0x5DF000
	0x03B14148 LDR X0, [X0 + 0x598]
	0x03B1414C BL 0x1C16CF4
	0x03B14150 ADRP X0, 0x645000
	0x03B14154 LDR X0, [X0 + 0x7C0]
	0x03B14158 BL 0x1C16CF4
	0x03B1415C MOVZ W8, 0x1
	0x03B14160 STRB W8, [X20 + 0x6A6]
	0x03B14164 BL 0x3B13C88
	0x03B14168 LDR X8, [X19]
	0x03B1416C MOV X19, X0
	0x03B14170 LDR W9, [X8 + 0xE0]
	0x03B14174 CBNZ W9, 0x3B14180
	0x03B14178 MOV X0, X8
	0x03B1417C BL 0x1C16DFC
	0x03B14180 MOV X0, X19
	0x03B14184 MOV X1, X31
	0x03B14188 MOV X2, X31
	0x03B1418C BL 0x3C3883C
	0x03B14190 TBNZ X0, 0x0, 0x3B14218
	0x03B14194 ADRP X20, 0x645000
	0x03B14198 LDR X20, [X20 + 0x7C0]
	0x03B1419C LDR X8, [X20]
	0x03B141A0 LDR X8, [X8 + 0xB8]
	0x03B141A4 LDR X21, [X8]
	0x03B141A8 CBZ X21, 0x3B14224
	0x03B141AC LDR X8, [X21 + 0xA8]
	0x03B141B0 CBNZ X8, 0x3B141E4
	0x03B141B4 ADRP X8, 0x645000
	0x03B141B8 LDR X8, [X8 + 0x7D0]
	0x03B141BC LDR X0, [X8]
	0x03B141C0 BL 0x1C16F10
	0x03B141C4 MOV X1, X31
	0x03B141C8 MOV X19, X0
	0x03B141CC BL 0x33BDD8C
	0x03B141D0 STR X19, [X21 + 0xA8]
	0x03B141D4 LDR X8, [X20]
	0x03B141D8 LDR X8, [X8 + 0xB8]
	0x03B141DC LDR X21, [X8]
	0x03B141E0 CBZ X21, 0x3B14224
	0x03B141E4 LDR X0, [X21 + 0x98]
	0x03B141E8 LDR X19, [X21 + 0xA8]
	0x03B141EC BL 0x3B14570
	0x03B141F0 CBZ X19, 0x3B14224
	0x03B141F4 STR X0, [X19 + 0x10]
	0x03B141F8 LDR X8, [X20]
	0x03B141FC LDR X8, [X8 + 0xB8]
	0x03B14200 LDR X8, [X8]
	0x03B14204 CBZ X8, 0x3B14224
	0x03B14208 LDP X0, X19, [X8 + 0xA0]
	0x03B1420C BL 0x3B14570
	0x03B14210 CBZ X19, 0x3B14224
	0x03B14214 STR X0, [X19 + 0x18]
	0x03B14218 LDP X20, X19, [X31 + 0x10]
	0x03B1421C LDP X30, X21, [X31], #0x20
	0x03B14220 RET
	0x03B14224 BL 0x1C16F20
	0x03B14228 STR X30, [X31 - 0x10]!
	0x03B1422C BL 0x3B13C88
	0x03B14230 CBZ X0, 0x3B14240
	0x03B14234 LDRB W0, [X0 + 0xB0]
	0x03B14238 LDR X30, [X31], #0x10
	0x03B1423C RET
	0x03B14240 BL 0x1C16F20
	0x03B14244 STP X30, X19, [X31 - 0x10]!
	0x03B14248 MOV W19, W0
	0x03B1424C BL 0x3B13C88
	0x03B14250 CBZ X0, 0x3B14264
	0x03B14254 AND W8, W19, 0x1
	0x03B14258 STRB W8, [X0 + 0xB0]
	0x03B1425C LDP X30, X19, [X31], #0x10
	0x03B14260 RET
	0x03B14264 BL 0x1C16F20
	0x03B14268 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move X10, [X0+16]
	003 Compare X10, 0
	004 JumpIfEqual {359}
	005 Move W8, [X10+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, W2
	008 Move W11, 12
	009 NotImplemented "Instruction MADD not yet implemented."
	010 Add X11, X11, 32
	011 Move V0, [X11]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X12, X11
	014 Add X12, X12, 8
	015 Move V1, [X12]
	016 Move X8, W1
	017 Move W13, 12
	018 NotImplemented "Instruction MADD not yet implemented."
	019 Move V2, [X10+32]
	020 Move V3, [X10+40]
	021 Move [X11], D2
	022 Move [X12], S3
	023 Move X10, [X0+16]
	024 Compare X10, 0
	025 JumpIfEqual {359}
	026 Move W11, [X10+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W11, 12
	029 NotImplemented "Instruction MADD not yet implemented."
	030 Move [X10+32], D0
	031 Move [X10+40], S1
	032 Move X12, [X0+16]
	033 Compare X12, 0
	034 JumpIfEqual {359}
	035 Move W10, [X12+24]
	036 Add W11, W2, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X11, W11
	039 Move W13, 12
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Add X13, X13, 32
	042 Move V0, [X13]
	043 Add W15, W1, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X14, X13
	046 Add X14, X14, 8
	047 Move V1, [X14]
	048 Move X10, W15
	049 Move W15, 12
	050 NotImplemented "Instruction MADD not yet implemented."
	051 Move V2, [X12+32]
	052 Move V3, [X12+40]
	053 Move [X13], D2
	054 Move [X14], S3
	055 Move X12, [X0+16]
	056 Compare X12, 0
	057 JumpIfEqual {359}
	058 Move W13, [X12+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W13, 12
	061 NotImplemented "Instruction MADD not yet implemented."
	062 Move [X12+32], D0
	063 Move [X12+40], S1
	064 Move X14, [X0+16]
	065 Compare X14, 0
	066 JumpIfEqual {359}
	067 Move W12, [X14+24]
	068 Add W13, W2, 2
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X13, W13
	071 Move W15, 12
	072 NotImplemented "Instruction MADD not yet implemented."
	073 Add X15, X15, 32
	074 Move V0, [X15]
	075 Add W17, W1, 2
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X16, X15
	078 Add X16, X16, 8
	079 Move V1, [X16]
	080 Move X12, W17
	081 Move W17, 12
	082 NotImplemented "Instruction MADD not yet implemented."
	083 Move V2, [X14+32]
	084 Move V3, [X14+40]
	085 Move [X15], D2
	086 Move [X16], S3
	087 Move X14, [X0+16]
	088 Compare X14, 0
	089 JumpIfEqual {359}
	090 Move W15, [X14+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W15, 12
	093 NotImplemented "Instruction MADD not yet implemented."
	094 Move [X14+32], D0
	095 Move [X14+40], S1
	096 Move X16, [X0+16]
	097 Compare X16, 0
	098 JumpIfEqual {359}
	099 Move W14, [X16+24]
	100 Add W15, W2, 3
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X15, W15
	103 Move W17, 12
	104 NotImplemented "Instruction MADD not yet implemented."
	105 Add X17, X17, 32
	106 Move V0, [X17]
	107 Add W4, W1, 3
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X3, X17
	110 Add X3, X3, 8
	111 Move V1, [X3]
	112 Move X14, W4
	113 Move W4, 12
	114 NotImplemented "Instruction MADD not yet implemented."
	115 Move V2, [X16+32]
	116 Move V3, [X16+40]
	117 Move [X17], D2
	118 Move [X3], S3
	119 Move X16, [X0+16]
	120 Compare X16, 0
	121 JumpIfEqual {359}
	122 Move W17, [X16+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W17, 12
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Move [X16+32], D0
	127 Move [X16+40], S1
	128 Move X16, [X0+40]
	129 Compare X16, 0
	130 JumpIfEqual {359}
	131 Move W3, [X16+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X17, X16, X9
	134 Add X17, X17, 32
	135 Move V0, [X17]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X16, X16, X8
	138 Move V1, [X16+32]
	139 Move [X17], D1
	140 Move X16, [X0+40]
	141 Compare X16, 0
	142 JumpIfEqual {359}
	143 Move W17, [X16+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X16, X16, X8
	146 Move [X16+32], D0
	147 Move X16, [X0+40]
	148 Compare X16, 0
	149 JumpIfEqual {359}
	150 Move W17, [X16+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add X3, X16, X11
	153 Add X3, X3, 32
	154 Move V0, [X3]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X16, X16, X10
	157 Move V1, [X16+32]
	158 Move [X3], D1
	159 Move X16, [X0+40]
	160 Compare X16, 0
	161 JumpIfEqual {359}
	162 Move W17, [X16+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X16, X16, X10
	165 Move [X16+32], D0
	166 Move X16, [X0+40]
	167 Compare X16, 0
	168 JumpIfEqual {359}
	169 Move W17, [X16+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X3, X16, X13
	172 Add X3, X3, 32
	173 Move V0, [X3]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Add X16, X16, X12
	176 Move V1, [X16+32]
	177 Move [X3], D1
	178 Move X16, [X0+40]
	179 Compare X16, 0
	180 JumpIfEqual {359}
	181 Move W17, [X16+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add X16, X16, X12
	184 Move [X16+32], D0
	185 Move X16, [X0+40]
	186 Compare X16, 0
	187 JumpIfEqual {359}
	188 Move W17, [X16+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Add X3, X16, X15
	191 Add X3, X3, 32
	192 Move V0, [X3]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X16, X16, X14
	195 Move V1, [X16+32]
	196 Move [X3], D1
	197 Move X16, [X0+40]
	198 Compare X16, 0
	199 JumpIfEqual {359}
	200 Move W17, [X16+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add X16, X16, X14
	203 Move [X16+32], D0
	204 Move X16, [X0+48]
	205 Compare X16, 0
	206 JumpIfEqual {359}
	207 Move W3, [X16+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Add X17, X16, X9
	210 Add X17, X17, 32
	211 Move V0, [X17]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Add X16, X16, X8
	214 Move V1, [X16+32]
	215 Move [X17], D1
	216 Move X16, [X0+48]
	217 Compare X16, 0
	218 JumpIfEqual {359}
	219 Move W17, [X16+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add X16, X16, X8
	222 Move [X16+32], D0
	223 Move X16, [X0+48]
	224 Compare X16, 0
	225 JumpIfEqual {359}
	226 Move W17, [X16+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X3, X16, X11
	229 Add X3, X3, 32
	230 Move V0, [X3]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add X16, X16, X10
	233 Move V1, [X16+32]
	234 Move [X3], D1
	235 Move X16, [X0+48]
	236 Compare X16, 0
	237 JumpIfEqual {359}
	238 Move W17, [X16+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X16, X16, X10
	241 Move [X16+32], D0
	242 Move X16, [X0+48]
	243 Compare X16, 0
	244 JumpIfEqual {359}
	245 Move W17, [X16+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X3, X16, X13
	248 Add X3, X3, 32
	249 Move V0, [X3]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X16, X16, X12
	252 Move V1, [X16+32]
	253 Move [X3], D1
	254 Move X16, [X0+48]
	255 Compare X16, 0
	256 JumpIfEqual {359}
	257 Move W17, [X16+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add X16, X16, X12
	260 Move [X16+32], D0
	261 Move X16, [X0+48]
	262 Compare X16, 0
	263 JumpIfEqual {359}
	264 Move W17, [X16+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Add X3, X16, X15
	267 Add X3, X3, 32
	268 Move V0, [X3]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Add X16, X16, X14
	271 Move V1, [X16+32]
	272 Move [X3], D1
	273 Move X16, [X0+48]
	274 Compare X16, 0
	275 JumpIfEqual {359}
	276 Move W17, [X16+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Add X16, X16, X14
	279 Move [X16+32], D0
	280 Move X16, [X0+56]
	281 Compare X16, 0
	282 JumpIfEqual {359}
	283 Move W3, [X16+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add X17, X16, X9
	286 Add X17, X17, 32
	287 Move W9, [X17]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Add X16, X16, X8
	290 Move W16, [X16+32]
	291 Move [X17], W16
	292 Move X16, [X0+56]
	293 Compare X16, 0
	294 JumpIfEqual {359}
	295 Move W17, [X16+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Add X8, X16, X8
	298 Move [X8+32], W9
	299 Move X9, [X0+56]
	300 Compare X9, 0
	301 JumpIfEqual {359}
	302 Move W16, [X9+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Add X11, X9, X11
	305 Add X11, X11, 32
	306 Move W8, [X11]
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Add X9, X9, X10
	309 Move W9, [X9+32]
	310 Move [X11], W9
	311 Move X9, [X0+56]
	312 Compare X9, 0
	313 JumpIfEqual {359}
	314 Move W11, [X9+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Add X9, X9, X10
	317 Move [X9+32], W8
	318 Move X9, [X0+56]
	319 Compare X9, 0
	320 JumpIfEqual {359}
	321 Move W10, [X9+24]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Add X11, X9, X13
	324 Add X11, X11, 32
	325 Move W8, [X11]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Add X9, X9, X12
	328 Move W9, [X9+32]
	329 Move [X11], W9
	330 Move X9, [X0+56]
	331 Compare X9, 0
	332 JumpIfEqual {359}
	333 Move W10, [X9+24]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add X9, X9, X12
	336 Move [X9+32], W8
	337 Move X9, [X0+56]
	338 Compare X9, 0
	339 JumpIfEqual {359}
	340 Move W10, [X9+24]
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Add X11, X9, X15
	343 Add X11, X11, 32
	344 Move W8, [X11]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Add X9, X9, X14
	347 Move W9, [X9+32]
	348 Move [X11], W9
	349 Move X9, [X0+56]
	350 Compare X9, 0
	351 JumpIfEqual {359}
	352 Move W10, [X9+24]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Add X9, X9, X14
	355 Move [X9+32], W8
	356 Move X30, [X31+16]
	357 Return 
	358 Call 0x1C17F28
	359 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B14464 STP X20, X19, [X31 + 0x10]
	0x03B14468 ADRP X20, 0x8CE000
	0x03B1446C ADRP X19, 0x5DF000
	0x03B14470 LDRB W8, [X20 + 0x6A4]
	0x03B14474 LDR X19, [X19 + 0x598]
	0x03B14478 TBNZ X8, 0x0, 0x3B14490
	0x03B1447C ADRP X0, 0x5DF000
	0x03B14480 LDR X0, [X0 + 0x598]
	0x03B14484 BL 0x1C16CF4
	0x03B14488 MOVZ W8, 0x1
	0x03B1448C STRB W8, [X20 + 0x6A4]
	0x03B14490 BL 0x3B13C88
	0x03B14494 LDR X8, [X19]
	0x03B14498 MOV X19, X0
	0x03B1449C LDR W9, [X8 + 0xE0]
	0x03B144A0 CBNZ W9, 0x3B144AC
	0x03B144A4 MOV X0, X8
	0x03B144A8 BL 0x1C16DFC
	0x03B144AC MOV X0, X19
	0x03B144B0 MOV X1, X31
	0x03B144B4 MOV X2, X31
	0x03B144B8 BL 0x3C3883C
	0x03B144BC MOV W8, W0
	0x03B144C0 MOV X0, X31
	0x03B144C4 TBNZ X8, 0x0, 0x3B144D4
	0x03B144C8 BL 0x3B13C88
	0x03B144CC CBZ X0, 0x3B144E0
	0x03B144D0 LDR X0, [X0 + 0x68]
	0x03B144D4 LDP X20, X19, [X31 + 0x10]
	0x03B144D8 LDR X30, [X31], #0x20
	0x03B144DC RET
	0x03B144E0 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8CF000
	005 Move X19, 0x645000
	006 Move W8, [X20+1685]
	007 Move X19, [X19+840]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x645000
	013 Move X0, [X0+840]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1685], W8
	017 Move X8, [X19]
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W9, TEMP
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X8, [X19]
	024 Move W9, 0xBF800000
	025 Move X8, [X8+184]
	026 Move [X8+4], W31
	027 Move [X8+8], W31
	028 Move [X8+12], W9
	029 Move X8, [X19]
	030 Move X9, -50499584
	031 Move V0, [X9+92]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X9, [X8+184]
	035 Move [X9+1], V0
	036 Move X8, [X8+184]
	037 Move [X8+32], X31
	038 Move [X8+40], X31
	039 Move [X8+48], X31
	040 Move X30, [X31+32]
	041 Return 

