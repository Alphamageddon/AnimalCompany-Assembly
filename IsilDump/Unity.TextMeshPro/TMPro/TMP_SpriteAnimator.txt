Type: TMPro.TMP_SpriteAnimator

Method: System.Void Awake()

Disassembly:
	0x03B16FFC LDR X25, [X25 + 0x8C8]
	0x03B17000 LDR X27, [X27 + 0x8A0]
	0x03B17004 B 0x3EB1984
	0x03B17008 LDR X0, [X19 + 0xB8]
	0x03B1700C CBZ X0, 0x3B17024
	0x03B17010 ADRP X8, 0x642000
	0x03B17014 LDR X8, [X8 + 0x888]
	0x03B17018 LDR X1, [X8]
	0x03B1701C BL 0x2B0F1E4
	0x03B17020 B 0x3B1704C
	0x03B17024 ADRP X8, 0x642000
	0x03B17028 LDR X8, [X8 + 0x8D8]
	0x03B1702C LDR X0, [X8]
	0x03B17030 BL 0x1C16F10
	0x03B17034 ADRP X8, 0x642000
	0x03B17038 LDR X8, [X8 + 0x8C0]
	0x03B1703C MOV X20, X0
	0x03B17040 LDR X1, [X8]
	0x03B17044 BL 0x2B0E7A4
	0x03B17048 STR X20, [X19 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8CC000
	006 Move X21, 0x643000
	007 Move W8, [X20+1712]
	008 Move X21, [X21+2096]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x643000
	015 Move X0, [X0+2096]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1712], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x21A4894, X0
	022 Move [X19+40], X0
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03B1704C LDR X0, [X19 + 0xB0]

ISIL:
	001 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03B17050 CBZ X0, 0x3B17168

ISIL:
	001 Return 

Method: System.Void StopAllAnimations()

Disassembly:
	0x03B17054 MOV W20, W31
	0x03B17058 MOVZ W28, 0xFFFE
	0x03B1705C LDR W8, [X0 + 0x18]
	0x03B17060 CMP W20, W8
	0x03B17064 B.GE 0x3B1716C
	0x03B17068 LDR X2, [X24]
	0x03B1706C MOV W1, W20
	0x03B17070 BL 0x301BCCC
	0x03B17074 CBZ X0, 0x3B1715C
	0x03B17078 MOV X21, X0
	0x03B1707C LDR X0, [X19 + 0xC8]
	0x03B17080 CBZ X0, 0x3B17168
	0x03B17084 LDR W22, [X21 + 0x28]
	0x03B17088 LDR X2, [X23]
	0x03B1708C MOV W1, W22
	0x03B17090 BL 0x2B0F250
	0x03B17094 TBZ X0, 0x0, 0x3B1715C
	0x03B17098 LDR X0, [X19 + 0xC8]
	0x03B1709C CBZ X0, 0x3B17168
	0x03B170A0 LDR X2, [X25]
	0x03B170A4 MOV W1, W22
	0x03B170A8 BL 0x2B0EFBC
	0x03B170AC STP X19, X0, [X21 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8CC000
	005 Move W8, [X20+1713]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x643000
	012 Move X0, [X0+2104]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1713], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call MonoBehaviour.StopAllCoroutines, X0
	019 Move X0, [X19+32]
	020 Compare X0, 0
	021 JumpIfEqual {30}
	022 Move X8, 0x643000
	023 Move X8, [X8+2104]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X1, [X8]
	027 Move X30, [X31+32]
	028 Call Dictionary`2<Int32, Boolean>.Clear, X0
	029 Return 
	030 Call 0x1C17F20

Method: System.Void DoSpriteAnimation(System.Int32 currentCharacter, TMPro.TMP_SpriteAsset spriteAsset, System.Int32 start, System.Int32 end, System.Int32 framerate)

Disassembly:
	0x03B170B0 LDR X0, [X19 + 0xB0]
	0x03B170B4 CBZ X0, 0x3B17168
	0x03B170B8 LDR X2, [X24]
	0x03B170BC MOV W1, W20
	0x03B170C0 BL 0x301BCCC
	0x03B170C4 CBZ X0, 0x3B17168
	0x03B170C8 MOV X8, X0
	0x03B170CC LDR X0, [X19 + 0x30]
	0x03B170D0 CBZ X0, 0x3B17168
	0x03B170D4 LDR W22, [X8 + 0x38]
	0x03B170D8 LDR X2, [X26]
	0x03B170DC MOV W1, W22
	0x03B170E0 BL 0x2A0A530
	0x03B170E4 TBNZ X0, 0x0, 0x3B17108
	0x03B170E8 LDR X0, [X19 + 0x30]
	0x03B170EC CBZ X0, 0x3B17168
	0x03B170F0 ADRP X8, 0x5E6000
	0x03B170F4 LDR X8, [X8 + 0x858]
	0x03B170F8 MOV W1, W22
	0x03B170FC MOV W2, W20
	0x03B17100 LDR X3, [X8]
	0x03B17104 BL 0x2A0A344
	0x03B17108 LDR X0, [X19 + 0xB0]
	0x03B1710C CBZ X0, 0x3B17168
	0x03B17110 LDR X2, [X24]
	0x03B17114 MOV W1, W20
	0x03B17118 BL 0x301BCCC
	0x03B1711C CBZ X0, 0x3B17168
	0x03B17120 LDR W22, [X0 + 0x14]
	0x03B17124 CMP W22, W28
	0x03B17128 B.EQ 0x3B1715C
	0x03B1712C LDR X0, [X19 + 0xB8]
	0x03B17130 CBZ X0, 0x3B17168
	0x03B17134 LDR X2, [X27]
	0x03B17138 MOV W1, W22
	0x03B1713C BL 0x2B0F250
	0x03B17140 TBNZ X0, 0x0, 0x3B1715C
	0x03B17144 LDR X0, [X19 + 0xB8]
	0x03B17148 CBZ X0, 0x3B17168
	0x03B1714C LDR X3, [X29]
	0x03B17150 MOV W1, W22
	0x03B17154 MOV X2, X21
	0x03B17158 BL 0x2B0F05C
	0x03B1715C LDR X0, [X19 + 0xB0]
	0x03B17160 ADD W20, W20, 0x1
	0x03B17164 CBNZ X0, 0x3B1705C
	0x03B17168 BL 0x1C16F20
	0x03B1716C STRB W31, [X19 + 0xE0]
	0x03B17170 LDP X20, X19, [X31 + 0x50]
	0x03B17174 LDP X22, X21, [X31 + 0x40]
	0x03B17178 LDP X24, X23, [X31 + 0x30]
	0x03B1717C LDP X26, X25, [X31 + 0x20]
	0x03B17180 LDP X28, X27, [X31 + 0x10]
	0x03B17184 LDP X29, X30, [X31], #0x60
	0x03B17188 RET
	0x03B1718C STR X1, [X0 + 0xB0]
	0x03B17190 RET
	0x03B17194 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x8CC000
	011 Move W8, [X25+1714]
	012 Move W21, W5
	013 Move W22, W4
	014 Move W23, W3
	015 Move X24, X2
	016 Move W19, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x643000
	023 Move X0, [X0+2112]
	024 Call 0x1C17CF4
	025 Move X0, 0x63D000
	026 Move X0, [X0+2240]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+1714], W8
	030 Move [X31+12], W31
	031 Move X0, [X20+32]
	032 Compare X0, 0
	033 JumpIfEqual {74}
	034 Move X8, 0x63D000
	035 Move X8, [X8+2240]
	036 Add X2, X31, 12
	037 Move W1, W19
	038 Move X3, [X8]
	039 Call Dictionary`2<Int32, Boolean>.TryGetValue, X0, X1, X2
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {64}
	044 Move X0, X20
	045 Move W1, W19
	046 Move X2, X24
	047 Move W3, W23
	048 Move W4, W22
	049 Move W5, W21
	050 Call TMP_SpriteAnimator.DoSpriteAnimationInternal, X0, X1, X2, X3, X4, X5
	051 Move X1, X0
	052 Move X0, X20
	053 Move X2, X31
	054 Call MonoBehaviour.StartCoroutine, X0, X1
	055 Move X0, [X20+32]
	056 Compare X0, 0
	057 JumpIfEqual {74}
	058 Move X8, 0x643000
	059 Move X8, [X8+2112]
	060 Move W2, 1
	061 Move W1, W19
	062 Move X3, [X8]
	063 Call Dictionary`2<Int32, Boolean>.Add, X0, X1, X2
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X24, [X31+32]
	069 Move X23, [X31+40]
	070 Move X30, [X31+16]
	071 Move X25, [X31+24]
	072 Add X31, X31, 80
	073 Return 
	074 Call 0x1C17F20

Method: System.Collections.IEnumerator DoSpriteAnimationInternal(System.Int32 currentCharacter, TMPro.TMP_SpriteAsset spriteAsset, System.Int32 start, System.Int32 end, System.Int32 framerate)

Disassembly:
	0x03B17198 MOV X19, X0
	0x03B1719C LDR X0, [X0 + 0xB8]
	0x03B171A0 CBNZ X0, 0x3B171B0
	0x03B171A4 MOV X0, X19
	0x03B171A8 BL 0x3B16C90
	0x03B171AC LDR X0, [X19 + 0xB8]
	0x03B171B0 LDP X30, X19, [X31], #0x10
	0x03B171B4 RET
	0x03B171B8 STR X1, [X0 + 0xB8]
	0x03B171BC RET
	0x03B171C0 LDR X0, [X0 + 0xC0]
	0x03B171C4 RET
	0x03B171C8 STR X1, [X0 + 0xC0]
	0x03B171CC RET
	0x03B171D0 STP X30, X21, [X31 - 0x20]!
	0x03B171D4 STP X20, X19, [X31 + 0x10]
	0x03B171D8 ADRP X21, 0x8CB000
	0x03B171DC ADRP X20, 0x5DC000
	0x03B171E0 LDRB W8, [X21 + 0x6B6]
	0x03B171E4 LDR X20, [X20 + 0x598]
	0x03B171E8 MOV X19, X0
	0x03B171EC TBNZ X8, 0x0, 0x3B17204
	0x03B171F0 ADRP X0, 0x5DC000
	0x03B171F4 LDR X0, [X0 + 0x598]
	0x03B171F8 BL 0x1C16CF4
	0x03B171FC MOVZ W8, 0x1
	0x03B17200 STRB W8, [X21 + 0x6B6]
	0x03B17204 LDR X0, [X20]
	0x03B17208 LDR X20, [X19 + 0x20]
	0x03B1720C LDR W8, [X0 + 0xE0]
	0x03B17210 CBNZ W8, 0x3B17218
	0x03B17214 BL 0x1C16DFC
	0x03B17218 MOV X0, X20
	0x03B1721C MOV X1, X31
	0x03B17220 MOV X2, X31
	0x03B17224 BL 0x3C354F8
	0x03B17228 TBZ X0, 0x0, 0x3B1724C
	0x03B1722C LDR X0, [X19 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x8CC000
	011 Move X26, 0x643000
	012 Move W8, [X25+1715]
	013 Move X26, [X26+2120]
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move X23, X2
	018 Move W22, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x643000
	025 Move X0, [X0+2120]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1715], W8
	029 Move X0, [X26]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X25, X0
	033 Call Object..ctor, X0
	034 Move [X25+16], W31
	035 Move [X25+32], X24
	036 Move [X25+48], X23
	037 Move [X25+40], W21
	038 Move [X25+44], W20
	039 Move [X25+56], W22
	040 Move [X25+60], W19
	041 Move X0, X25
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X26, [X31+16]
	049 Move X25, [X31+24]
	050 Move X30, [X31+80]
	051 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03B17258 SUB X31, X31, 0xA0
	0x03B1725C STP X29, X30, [X31 + 0x40]
	0x03B17260 STP X28, X27, [X31 + 0x50]
	0x03B17264 STP X26, X25, [X31 + 0x60]
	0x03B17268 STP X24, X23, [X31 + 0x70]
	0x03B1726C STP X22, X21, [X31 + 0x80]
	0x03B17270 STP X20, X19, [X31 + 0x90]
	0x03B17274 ADRP X21, 0x8CB000
	0x03B17278 ADRP X22, 0x641000
	0x03B1727C ADRP X20, 0x5DC000
	0x03B17280 LDRB W8, [X21 + 0x6C4]
	0x03B17284 LDR X22, [X22 + 0xBF0]
	0x03B17288 LDR X20, [X20 + 0xAC8]
	0x03B1728C MOV X19, X0
	0x03B17290 TBNZ X8, 0x0, 0x3B17344
	0x03B17294 ADRP X0, 0x5DC000
	0x03B17298 LDR X0, [X0 + 0xA28]
	0x03B1729C BL 0x1C16CF4
	0x03B172A0 ADRP X0, 0x642000
	0x03B172A4 LDR X0, [X0 + 0x8F8]
	0x03B172A8 BL 0x1C16CF4
	0x03B172AC ADRP X0, 0x642000
	0x03B172B0 LDR X0, [X0 + 0x900]
	0x03B172B4 BL 0x1C16CF4
	0x03B172B8 ADRP X0, 0x642000
	0x03B172BC LDR X0, [X0 + 0x908]
	0x03B172C0 BL 0x1C16CF4
	0x03B172C4 ADRP X0, 0x642000
	0x03B172C8 LDR X0, [X0 + 0x910]
	0x03B172CC BL 0x1C16CF4
	0x03B172D0 ADRP X0, 0x642000
	0x03B172D4 LDR X0, [X0 + 0x918]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8CC000
	007 Move X22, 0x63D000
	008 Move X20, 0x643000
	009 Move W8, [X21+1716]
	010 Move X22, [X22+1976]
	011 Move X20, [X20+2128]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x643000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move X0, 0x63D000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1716], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move W1, 16
	029 Move X20, X0
	030 Call Dictionary`2<Int32, Boolean>..ctor, X0, X1
	031 Move [X19+32], X20
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+48]
	039 Call MonoBehaviour..ctor, X0
	040 Return 

