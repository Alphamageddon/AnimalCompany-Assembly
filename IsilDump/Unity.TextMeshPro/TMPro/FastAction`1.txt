Type: TMPro.FastAction`1

Method: System.Void Add(System.Action`1<A> rhs)

Disassembly:
	0x02D12454 MOV X0, X21
	0x02D12458 LDR X3, [X8 + 0x38]
	0x02D1245C LDP X30, X21, [X31], #0x20
	0x02D12460 B 0x2AA5084
	0x02D12464 BL 0x1C16F20
	0x02D12468 SUB X31, X31, 0x30
	0x02D1246C STP X30, X21, [X31 + 0x10]
	0x02D12470 STP X20, X19, [X31 + 0x20]
	0x02D12474 STR X31, [X31 + 0x8]
	0x02D12478 MOV X20, X0
	0x02D1247C LDR X0, [X0 + 0x18]
	0x02D12480 CBZ X0, 0x2D124EC
	0x02D12484 LDR X8, [X2 + 0x20]
	0x02D12488 MOV X19, X2
	0x02D1248C ADD X2, X31, 0x8
	0x02D12490 MOV X21, X1
	0x02D12494 LDR X8, [X8 + 0xC0]
	0x02D12498 LDR X3, [X8 + 0x40]
	0x02D1249C BL 0x2AA6B2C
	0x02D124A0 TBZ X0, 0x0, 0x2D124DC
	0x02D124A4 LDR X0, [X20 + 0x18]
	0x02D124A8 CBZ X0, 0x2D124EC
	0x02D124AC LDR X8, [X19 + 0x20]
	0x02D124B0 MOV X1, X21
	0x02D124B4 LDR X8, [X8 + 0xC0]
	0x02D124B8 LDR X2, [X8 + 0x50]
	0x02D124BC BL 0x2AA64F8
	0x02D124C0 LDR X0, [X20 + 0x10]
	0x02D124C4 CBZ X0, 0x2D124EC
	0x02D124C8 LDR X8, [X19 + 0x20]
	0x02D124CC LDR X1, [X31 + 0x8]
	0x02D124D0 LDR X8, [X8 + 0xC0]
	0x02D124D4 LDR X2, [X8 + 0x58]
	0x02D124D8 BL 0x2EED4A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X0
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {47}
	009 Move X8, [X2+32]
	010 Move X20, X2
	011 Move X19, X1
	012 Move X8, [X8+192]
	013 Move X2, [X8+24]
	014 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {24}
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 
	024 Move X0, [X21+16]
	025 Compare X0, 0
	026 JumpIfEqual {47}
	027 Move X8, [X20+32]
	028 Move X21, [X21+24]
	029 Move X1, X19
	030 Move X8, [X8+192]
	031 Move X2, [X8+40]
	032 Call LinkedList`1<Object>.AddLast, X0, X1
	033 Compare X21, 0
	034 JumpIfEqual {47}
	035 Move X8, [X20+32]
	036 Move X1, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, X0
	040 Move X8, [X8+192]
	041 Move X0, X21
	042 Move X3, [X8+56]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	046 Return 
	047 Call 0x1C17F20

Method: System.Void Remove(System.Action`1<A> rhs)

Disassembly:
	0x02D124DC LDP X20, X19, [X31 + 0x20]
	0x02D124E0 LDP X30, X21, [X31 + 0x10]
	0x02D124E4 ADD X31, X31, 0x30
	0x02D124E8 RET
	0x02D124EC BL 0x1C16F20
	0x02D124F0 STP X30, X23, [X31 - 0x30]!
	0x02D124F4 STP X22, X21, [X31 + 0x10]
	0x02D124F8 STP X20, X19, [X31 + 0x20]
	0x02D124FC LDR X8, [X0 + 0x10]
	0x02D12500 CBZ X8, 0x2D1256C
	0x02D12504 LDR X23, [X8 + 0x10]
	0x02D12508 CBZ X23, 0x2D1255C
	0x02D1250C MOV X19, X4
	0x02D12510 MOV X20, X3
	0x02D12514 MOV X21, X2
	0x02D12518 MOV X22, X1
	0x02D1251C LDR X8, [X23 + 0x28]
	0x02D12520 CBZ X8, 0x2D1256C
	0x02D12524 LDR X9, [X8 + 0x18]
	0x02D12528 LDR X0, [X8 + 0x40]
	0x02D1252C LDR X4, [X8 + 0x28]
	0x02D12530 MOV X1, X22
	0x02D12534 MOV X2, X21
	0x02D12538 MOV X3, X20
	0x02D1253C BLR X9
	0x02D12540 LDR X8, [X19 + 0x20]
	0x02D12544 MOV X0, X23
	0x02D12548 LDR X8, [X8 + 0xC0]
	0x02D1254C LDR X1, [X8 + 0x90]
	0x02D12550 BL 0x2EEA710
	0x02D12554 MOV X23, X0
	0x02D12558 CBNZ X0, 0x2D1251C
	0x02D1255C LDP X20, X19, [X31 + 0x20]
	0x02D12560 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], X31
	007 Move X20, X0
	008 Move X0, [X0+24]
	009 Compare X0, 0
	010 JumpIfEqual {44}
	011 Move X8, [X2+32]
	012 Move X19, X2
	013 Add X2, X31, 8
	014 Move X21, X1
	015 Move X8, [X8+192]
	016 Move X3, [X8+64]
	017 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {38}
	022 Move X0, [X20+24]
	023 Compare X0, 0
	024 JumpIfEqual {44}
	025 Move X8, [X19+32]
	026 Move X1, X21
	027 Move X8, [X8+192]
	028 Move X2, [X8+80]
	029 Call Dictionary`2<Object, Object>.Remove, X0, X1
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {44}
	033 Move X8, [X19+32]
	034 Move X1, [X31+8]
	035 Move X8, [X8+192]
	036 Move X2, [X8+88]
	037 Call LinkedList`1<Object>.Remove, X0, X1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 Return 
	044 Call 0x1C17F20

Method: System.Void Call(A a)

Disassembly:
	0x02D12564 LDP X30, X23, [X31], #0x30
	0x02D12568 RET
	0x02D1256C BL 0x1C16F20
	0x02D12570 STP X30, X21, [X31 - 0x20]!
	0x02D12574 STP X20, X19, [X31 + 0x10]
	0x02D12578 LDR X8, [X1 + 0x20]
	0x02D1257C MOV X20, X1
	0x02D12580 MOV X19, X0
	0x02D12584 LDR X8, [X8 + 0xC0]
	0x02D12588 LDR X8, [X8 + 0x20]
	0x02D1258C LDRB W9, [X8 + 0x135]
	0x02D12590 TBNZ X9, 0x0, 0x2D125A0
	0x02D12594 MOV X0, X8
	0x02D12598 BL 0x1C5C684
	0x02D1259C MOV X8, X0
	0x02D125A0 MOV X0, X8
	0x02D125A4 BL 0x1C16F10
	0x02D125A8 LDR X8, [X20 + 0x20]
	0x02D125AC MOV X21, X0
	0x02D125B0 LDR X8, [X8 + 0xC0]
	0x02D125B4 LDR X1, [X8 + 0x98]
	0x02D125B8 BL 0x2EECE50
	0x02D125BC STR X21, [X19 + 0x10]
	0x02D125C0 LDR X8, [X20 + 0x20]
	0x02D125C4 LDR X8, [X8 + 0xC0]
	0x02D125C8 LDR X0, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+16]
	006 Compare X8, 0
	007 JumpIfEqual {34}
	008 Move X20, [X8+16]
	009 Compare X20, 0
	010 JumpIfEqual {29}
	011 Move X19, X2
	012 And W21, W1, 1
	013 Move X8, [X20+40]
	014 Compare X8, 0
	015 JumpIfEqual {34}
	016 Move X9, [X8+24]
	017 Move X0, [X8+64]
	018 Move X2, [X8+40]
	019 Move W1, W21
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X8, [X19+32]
	022 Move X0, X20
	023 Move X8, [X8+192]
	024 Move X1, [X8+128]
	025 Call LinkedListNode`1<Object>.get_Next, X0
	026 Move X20, X0
	027 Compare X0, 0
	028 JumpIfNotEqual {13}
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02D125CC LDRB W8, [X0 + 0x135]
	0x02D125D0 TBNZ X8, 0x0, 0x2D125D8
	0x02D125D4 BL 0x1C5C684
	0x02D125D8 BL 0x1C16F10
	0x02D125DC LDR X8, [X20 + 0x20]
	0x02D125E0 MOV X20, X0
	0x02D125E4 LDR X8, [X8 + 0xC0]
	0x02D125E8 LDR X1, [X8 + 0xA0]
	0x02D125EC BL 0x2AA4804
	0x02D125F0 STR X20, [X19 + 0x18]
	0x02D125F4 MOV X0, X19
	0x02D125F8 LDP X20, X19, [X31 + 0x10]
	0x02D125FC MOV X1, X31
	0x02D12600 LDP X30, X21, [X31], #0x20
	0x02D12604 B 0x33BDD8C
	0x02D12608 SUB X31, X31, 0x40
	0x02D1260C STP X30, X21, [X31 + 0x20]
	0x02D12610 STP X20, X19, [X31 + 0x30]
	0x02D12614 MOV X20, X2
	0x02D12618 LDR X2, [X0 + 0x18]
	0x02D1261C CBZ X2, 0x2D126C0
	0x02D12620 LDR X8, [X20 + 0x20]
	0x02D12624 MOV X19, X1
	0x02D12628 MOV X21, X0
	0x02D1262C ADD X3, X31, 0x18
	0x02D12630 LDR X8, [X8 + 0xC0]
	0x02D12634 ADD X4, X31, 0x8
	0x02D12638 LDR X1, [X8 + 0x18]
	0x02D1263C LDR X0, [X1]
	0x02D12640 STR X19, [X31 + 0x18]
	0x02D12644 LDR X8, [X1 + 0x10]
	0x02D12648 BLR X8
	0x02D1264C LDRB W8, [X31 + 0x8]
	0x02D12650 CBNZ W8, 0x2D126B0
	0x02D12654 LDR X2, [X21 + 0x10]
	0x02D12658 CBZ X2, 0x2D126C0
	0x02D1265C LDR X8, [X20 + 0x20]
	0x02D12660 LDR X21, [X21 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8+32]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+136]
	024 Call LinkedList`1<Object>..ctor, X0
	025 Move [X19+16], X21
	026 Move X8, [X20+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8+8]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Call 0x1C17F10
	036 Move X8, [X20+32]
	037 Move X20, X0
	038 Move X8, [X8+192]
	039 Move X1, [X8+144]
	040 Call Dictionary`2<Object, Object>..ctor, X0
	041 Move [X19+24], X20
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Object..ctor, X0
	049 Return 

