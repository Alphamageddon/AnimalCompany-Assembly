Type: TMPro.TMP_ListPool`1

Method: System.Collections.Generic.List`1<T> Get()

Disassembly:
	0x02670F3C AND X21, X1, 0x0
	0x02670F40 AND X8, X8, 0x0
	0x02670F44 ADD X22, X20, 0x20
	0x02670F48 CMP X23, W8, UXTW
	0x02670F4C B.CS 0x2670F98
	0x02670F50 LDR X0, [X19 + 0x20]
	0x02670F54 LDRB W8, [X0 + 0x135]
	0x02670F58 TBNZ X8, 0x0, 0x2670F60
	0x02670F5C BL 0x1C5C684
	0x02670F60 LDR X8, [X0 + 0xC0]
	0x02670F64 MOV X0, X22
	0x02670F68 MOV X1, X21
	0x02670F6C LDR X2, [X8 + 0x28]
	0x02670F70 BL 0x2670FAC
	0x02670F74 LDR W8, [X20 + 0x18]
	0x02670F78 ADD X23, X23, 0x1
	0x02670F7C ADD X22, X22, 0x20
	0x02670F80 CMP X23, W8, SXTW
	0x02670F84 B.LT 0x2670F48
	0x02670F88 LDP X20, X19, [X31 + 0x20]
	0x02670F8C LDP X22, X21, [X31 + 0x10]
	0x02670F90 LDP X30, X23, [X31], #0x30
	0x02670F94 RET
	0x02670F98 BL 0x1C16F28
	0x02670F9C BL 0x1C16F20
	0x02670FA0 STR W31, [X0 + 0x8]
	0x02670FA4 STR W31, [X0 + 0x18]
	0x02670FA8 RET
	0x02670FAC STR X30, [X31 - 0x20]!
	0x02670FB0 STP X20, X19, [X31 + 0x10]
	0x02670FB4 MOV X19, X0
	0x02670FB8 LDR X0, [X0]
	0x02670FBC MOV X20, X1
	0x02670FC0 CBNZ X0, 0x2671004
	0x02670FC4 MOVZ W8, 0x4
	0x02670FC8 STR W8, [X19 + 0x10]
	0x02670FCC LDR X0, [X2 + 0x20]
	0x02670FD0 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {58}
	043 Move X0, [X19+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, [X8+24]
	055 Move X30, [X31+32]
	056 Call 0x2671710, X0
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void Release(System.Collections.Generic.List`1<T> toRelease)

Disassembly:
	0x02670FD4 TBNZ X8, 0x0, 0x2670FDC
	0x02670FD8 BL 0x1C5C684
	0x02670FDC LDR X8, [X0 + 0xC0]
	0x02670FE0 LDR X0, [X8 + 0x18]
	0x02670FE4 LDRB W8, [X0 + 0x135]
	0x02670FE8 TBNZ X8, 0x0, 0x2670FF0
	0x02670FEC BL 0x1C5C684
	0x02670FF0 MOVZ W1, 0x4
	0x02670FF4 BL 0x1C16D6C
	0x02670FF8 STR X0, [X19]
	0x02670FFC STR W31, [X19 + 0xC]
	0x02671000 CBZ X0, 0x2671028
	0x02671004 LDR W8, [X0 + 0x18]
	0x02671008 CBZ W8, 0x2671024
	0x0267100C MOVZ W8, 0x1
	0x02671010 STR W20, [X0 + 0x20]
	0x02671014 STR W8, [X19 + 0x8]
	0x02671018 LDP X20, X19, [X31 + 0x10]
	0x0267101C LDR X30, [X31], #0x20
	0x02671020 RET
	0x02671024 BL 0x1C16F28
	0x02671028 BL 0x1C16F20
	0x0267102C STR X30, [X31 - 0x10]!
	0x02671030 LDR X8, [X0]
	0x02671034 CBZ X8, 0x267106C
	0x02671038 LDRSW X9, [X0 + 0x8]
	0x0267103C LDR W10, [X8 + 0x18]
	0x02671040 CMP W9, W10
	0x02671044 B.GE 0x2671064
	0x02671048 CMP W9, W10
	0x0267104C B.CS 0x2671070
	0x02671050 ADD X8, X8, X9, 0x2, LSL
	0x02671054 STR W1, [X8 + 0x20]
	0x02671058 LDR W8, [X0 + 0x8]
	0x0267105C ADD W8, W8, 0x1
	0x02671060 STR W8, [X0 + 0x8]
	0x02671064 LDR X30, [X31], #0x10
	0x02671068 RET
	0x0267106C BL 0x1C16F20
	0x02671070 BL 0x1C16F28
	0x02671074 STR X30, [X31 - 0x10]!
	0x02671078 LDR W8, [X0 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+16]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X21, [X8]
	045 Compare X21, 0
	046 JumpIfEqual {64}
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, X21
	059 Move X2, [X8+40]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call 0x267178C, X0, X1
	063 Return 
	064 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x0267107C SUB W9, W8, 0x1
	0x02671080 CMP W9, 0x0
	0x02671084 STR W9, [X0 + 0x8]
	0x02671088 B.LE 0x26710AC
	0x0267108C LDR X9, [X0]
	0x02671090 CBZ X9, 0x26710D0
	0x02671094 LDR W10, [X9 + 0x18]
	0x02671098 SUB W8, W8, 0x2
	0x0267109C CMP W8, W10
	0x026710A0 B.CS 0x26710D4
	0x026710A4 ADD X8, X9, W8, 0x2, UXTW
	0x026710A8 B 0x26710C4
	0x026710AC LDR X8, [X0]
	0x026710B0 MOVZ W9, 0x1
	0x026710B4 STR W9, [X0 + 0x8]
	0x026710B8 CBZ X8, 0x26710D0
	0x026710BC LDR W9, [X8 + 0x18]
	0x026710C0 CBZ W9, 0x26710D4
	0x026710C4 LDR W0, [X8 + 0x20]!
	0x026710C8 LDR X30, [X31], #0x10
	0x026710CC RET
	0x026710D0 BL 0x1C16F20
	0x026710D4 BL 0x1C16F28
	0x026710D8 STP X30, X21, [X31 - 0x20]!
	0x026710DC STP X20, X19, [X31 + 0x10]
	0x026710E0 LDR W8, [X0 + 0x8]
	0x026710E4 LDR W9, [X0 + 0x10]
	0x026710E8 MOV X19, X0
	0x026710EC MOV X20, X1
	0x026710F0 CMP W8, W9
	0x026710F4 B.NE 0x2671134
	0x026710F8 UBFM W8, W8, 0x1F, 0x1E
	0x026710FC CMP W8, 0x0
	0x02671100 MOVZ W9, 0x4
	0x02671104 CSEL W21, W9, W8, EQ
	0x02671108 STR W21, [X19 + 0x10]
	0x0267110C LDR X0, [X2 + 0x20]
	0x02671110 LDRB W8, [X0 + 0x135]
	0x02671114 TBNZ X8, 0x0, 0x267111C
	0x02671118 BL 0x1C5C684
	0x0267111C LDR X8, [X0 + 0xC0]
	0x02671120 MOV X0, X19
	0x02671124 MOV W1, W21
	0x02671128 LDR X2, [X8 + 0x38]
	0x0267112C BL 0x211581C
	0x02671130 LDR W8, [X19 + 0x8]
	0x02671134 LDR X9, [X19]
	0x02671138 CBZ X9, 0x2671198
	0x0267113C LDR W10, [X9 + 0x18]
	0x02671140 CMP W8, W10
	0x02671144 B.CS 0x267119C
	0x02671148 ADD X8, X9, W8, 0x2, SXTW
	0x0267114C STR W20, [X8 + 0x20]
	0x02671150 LDR W8, [X19 + 0x8]
	0x02671154 LDR W9, [X19 + 0x14]
	0x02671158 ADD W8, W8, 0x1
	0x0267115C CBZ W9, 0x267117C
	0x02671160 LDR W10, [X19 + 0x18]
	0x02671164 SDIV W11, W8, W9
	0x02671168 MSUB W8, W11, W9, W8
	0x0267116C STR W8, [X19 + 0x8]
	0x02671170 CMP W10, W9
	0x02671174 CSINC W8, W9, W10, GE
	0x02671178 B 0x2671188
	0x0267117C LDR W9, [X19 + 0x18]
	0x02671180 STR W8, [X19 + 0x8]
	0x02671184 ADD W8, W9, 0x1
	0x02671188 STR W8, [X19 + 0x18]
	0x0267118C LDP X20, X19, [X31 + 0x10]
	0x02671190 LDP X30, X21, [X31], #0x20
	0x02671194 RET
	0x02671198 BL 0x1C16F20
	0x0267119C BL 0x1C16F28
	0x026711A0 STR X30, [X31 - 0x10]!
	0x026711A4 LDR W8, [X0 + 0x8]
	0x026711A8 LDR W9, [X0 + 0x14]
	0x026711AC CBZ W8, 0x26711BC
	0x026711B0 SUB W8, W8, 0x1
	0x026711B4 CBNZ W9, 0x26711C4
	0x026711B8 B 0x26711D4
	0x026711BC CBZ W9, 0x267121C
	0x026711C0 MOVN W8, 0x0
	0x026711C4 SDIV W10, W8, W9
	0x026711C8 MSUB W8, W10, W9, W8
	0x026711CC AND W9, W9, W8, 0x1F
	0x026711D0 ADD W8, W9, W8
	0x026711D4 LDR X9, [X0]
	0x026711D8 STR W8, [X0 + 0x8]
	0x026711DC CBZ X9, 0x2671224
	0x026711E0 LDR W10, [X9 + 0x18]
	0x026711E4 CMP W8, W10
	0x026711E8 B.CS 0x2671228
	0x026711EC LDR W10, [X0 + 0xC]
	0x026711F0 ADD X9, X9, W8, 0x2, SXTW
	0x026711F4 LDR W8, [X9 + 0x20]
	0x026711F8 STR W10, [X9 + 0x20]
	0x026711FC LDR W9, [X0 + 0x18]
	0x02671200 SUB W10, W9, 0x1
	0x02671204 CMP W9, 0x0
	0x02671208 CSEL W9, W10, W31, GT
	0x0267120C STR W9, [X0 + 0x18]
	0x02671210 MOV X0, X8
	0x02671214 LDR X30, [X31], #0x10
	0x02671218 RET
	0x0267121C MOV X8, X31
	0x02671220 B 0x2671210
	0x02671224 BL 0x1C16F20
	0x02671228 BL 0x1C16F28
	0x0267122C STR X30, [X31 - 0x10]!
	0x02671230 LDR W9, [X0 + 0x8]
	0x02671234 CBZ W9, 0x267125C
	0x02671238 LDR X8, [X0]
	0x0267123C CBZ X8, 0x267126C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+32]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, [X0+192]
	015 Move X0, [X8+56]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, [X19+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, [X8+56]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X19+32]
	042 Move X9, [X0+184]
	043 Move W10, [X8+309]
	044 Move X21, [X9]
	045 Move TEMP, X10
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X8
	050 Call 0x1C5D684
	051 Move X8, X0
	052 Move X8, [X8+192]
	053 Move X0, [X8+72]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Call 0x1C17F10
	061 Move X8, [X19+32]
	062 Move X20, X0
	063 Add X9, X8, 309
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move TEMP, X9
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {74}
	069 Move X0, X8
	070 Call 0x1C5D684
	071 Move X8, [X19+32]
	072 Add X9, X8, 309
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X0, X8
	075 Move X10, [X0+192]
	076 Move X22, [X10+64]
	077 Move TEMP, X9
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {84}
	081 Move X0, X8
	082 Call 0x1C5D684
	083 Move X8, X0
	084 Move X8, [X8+192]
	085 Move X0, X20
	086 Move X1, X21
	087 Move X2, X22
	088 Move X3, [X8+80]
	089 Call UnityAction`1<Object>..ctor, X0, X1, X2
	090 Move X0, [X19+32]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+192]
	098 Move X0, [X8+8]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Call 0x1C17F10
	106 Move X8, [X19+32]
	107 Move X21, X0
	108 Move W9, [X8+309]
	109 Move TEMP, X9
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {116}
	113 Move X0, X8
	114 Call 0x1C5D684
	115 Move X8, X0
	116 Move X8, [X8+192]
	117 Move X0, X21
	118 Move X1, X31
	119 Move X2, X20
	120 Move X3, [X8+88]
	121 Call 0x2671694, X0, X1, X2
	122 Move X0, [X19+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X8, [X0+192]
	130 Move X0, [X8+16]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move X8, [X0+184]
	138 Move [X8], X21
	139 Move X0, [X19+32]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move X8, [X0+192]
	147 Move X0, [X8+16]
	148 Move W8, [X0+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {160}
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move X30, [X31+48]
	158 Call 0x1C5D684
	159 Return 
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X30, [X31+48]
	165 Return 

