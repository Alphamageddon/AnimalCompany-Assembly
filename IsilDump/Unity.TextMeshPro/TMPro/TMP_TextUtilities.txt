Type: TMPro.TMP_TextUtilities

Method: System.Int32 GetCursorIndexFromPosition(TMPro.TMP_Text textComponent, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B1E180 RET
	0x03B1E184 SUB X31, X31, 0x80
	0x03B1E188 STP D9, D8, [X31 + 0x40]
	0x03B1E18C STR X30, [X31 + 0x50]
	0x03B1E190 STP X22, X21, [X31 + 0x60]
	0x03B1E194 STP X20, X19, [X31 + 0x70]
	0x03B1E198 ADRP X22, 0x8C4000
	0x03B1E19C STP S0, S1, [X31 + 0x30]
	0x03B1E1A0 STR S2, [X31 + 0x38]
	0x03B1E1A4 ADRP X21, 0x63A000
	0x03B1E1A8 LDRB W8, [X22 + 0x70E]
	0x03B1E1AC LDR X21, [X21 + 0xBB8]
	0x03B1E1B0 MOV X20, X1
	0x03B1E1B4 MOV V8.16B, V1.16B
	0x03B1E1B8 MOV V9.16B, V0.16B
	0x03B1E1BC MOV X19, X0
	0x03B1E1C0 TBNZ X8, 0x0, 0x3B1E1D8
	0x03B1E1C4 ADRP X0, 0x63A000
	0x03B1E1C8 LDR X0, [X0 + 0xBB8]
	0x03B1E1CC BL 0x1C16CF4
	0x03B1E1D0 MOVZ W8, 0x1
	0x03B1E1D4 STRB W8, [X22 + 0x70E]
	0x03B1E1D8 LDR X0, [X21]
	0x03B1E1DC LDR W8, [X0 + 0xE0]
	0x03B1E1E0 CBNZ W8, 0x3B1E1E8
	0x03B1E1E4 BL 0x1C16DFC
	0x03B1E1E8 ADD X2, X31, 0x30
	0x03B1E1EC MOV X0, X19
	0x03B1E1F0 MOV V0.16B, V9.16B
	0x03B1E1F4 MOV V1.16B, V8.16B
	0x03B1E1F8 MOV X1, X20
	0x03B1E1FC BL 0x3B1D60C
	0x03B1E200 CBZ X19, 0x3B1E29C
	0x03B1E204 LDR X8, [X21]
	0x03B1E208 MOV X0, X19
	0x03B1E20C MOV X2, X31
	0x03B1E210 LDR X8, [X8 + 0xB8]
	0x03B1E214 LDR X1, [X8]
	0x03B1E218 BL 0x3C3F058
	0x03B1E21C LDR X8, [X21]
	0x03B1E220 LDR X8, [X8 + 0xB8]
	0x03B1E224 LDR X8, [X8]
	0x03B1E228 CBZ X8, 0x3B1E29C
	0x03B1E22C LDR W9, [X8 + 0x18]
	0x03B1E230 CBZ W9, 0x3B1E298
	0x03B1E234 CMP W9, 0x1
	0x03B1E238 B.EQ 0x3B1E298
	0x03B1E23C CMP W9, 0x2
	0x03B1E240 B.LS 0x3B1E298
	0x03B1E244 CMP W9, 0x3
	0x03B1E248 B.EQ 0x3B1E298
	0x03B1E24C LDP S0, S1, [X31 + 0x30]
	0x03B1E250 LDR V2, [X31 + 0x38]
	0x03B1E254 LDP S3, S4, [X8 + 0x20]
	0x03B1E258 LDP S5, S6, [X8 + 0x28]
	0x03B1E25C LDP S7, S16, [X8 + 0x30]
	0x03B1E260 LDR V17, [X8 + 0x40]
	0x03B1E264 LDR X8, [X8 + 0x38]
	0x03B1E268 STR S6, [X31]
	0x03B1E26C STP S7, S16, [X31 + 0x4]
	0x03B1E270 STR S17, [X31 + 0x18]
	0x03B1E274 STR X8, [X31 + 0x10]
	0x03B1E278 BL 0x3B1DFFC
	0x03B1E27C LDP X20, X19, [X31 + 0x70]
	0x03B1E280 LDP X22, X21, [X31 + 0x60]
	0x03B1E284 LDR X30, [X31 + 0x50]
	0x03B1E288 LDP D9, D8, [X31 + 0x40]
	0x03B1E28C AND W0, W0, 0x1
	0x03B1E290 ADD X31, X31, 0x80
	0x03B1E294 RET
	0x03B1E298 BL 0x1C16F28
	0x03B1E29C BL 0x1C16F20
	0x03B1E2A0 SUB X31, X31, 0xD0
	0x03B1E2A4 STP D15, D14, [X31 + 0x50]
	0x03B1E2A8 STP D13, D12, [X31 + 0x60]
	0x03B1E2AC STP D11, D10, [X31 + 0x70]
	0x03B1E2B0 STP D9, D8, [X31 + 0x80]
	0x03B1E2B4 STR X30, [X31 + 0x90]
	0x03B1E2B8 STP X24, X23, [X31 + 0xA0]
	0x03B1E2BC STP X22, X21, [X31 + 0xB0]
	0x03B1E2C0 STP X20, X19, [X31 + 0xC0]
	0x03B1E2C4 ADRP X21, 0x8C4000
	0x03B1E2C8 LDRB W8, [X21 + 0x70F]
	0x03B1E2CC MOV W19, W2
	0x03B1E2D0 MOV X22, X1
	0x03B1E2D4 MOV V8.16B, V1.16B
	0x03B1E2D8 MOV V9.16B, V0.16B
	0x03B1E2DC MOV X20, X0
	0x03B1E2E0 STP S0, S1, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X22, 0x8C5000
	012 Move [X31], S0
	013 Move [X31+8], S1
	014 Move [X31+8], S2
	015 Move X19, 0x63B000
	016 Move W8, [X22+1802]
	017 Move X19, [X19+3000]
	018 Move X20, X1
	019 Move V10, V2
	020 Move V8, V1
	021 Move V9, V0
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x63B000
	028 Move X0, [X0+3000]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1802], W8
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move V0, V9
	039 Move V1, V8
	040 Move V2, V10
	041 Move X1, X20
	042 Move W2, W31
	043 Call TMP_TextUtilities.FindNearestCharacter, X0, X1, X2, X3
	044 Compare X21, 0
	045 JumpIfEqual {104}
	046 Move W19, W0
	047 Move X0, X21
	048 Move X1, X31
	049 Call TMP_Text.get_rectTransform, X0
	050 Add X2, X31, 0
	051 Move V0, V9
	052 Move V1, V8
	053 Move X1, X20
	054 Move X22, X0
	055 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	056 Move X8, [X21+872]
	057 Compare X8, 0
	058 JumpIfEqual {104}
	059 Move X8, [X8+56]
	060 Compare X8, 0
	061 JumpIfEqual {104}
	062 Move W9, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare X22, 0
	065 JumpIfEqual {104}
	066 Move X9, W19
	067 Move W10, 376
	068 NotImplemented "Instruction MADD not yet implemented."
	069 Move V2, [X8+292]
	070 Move V1, [X8+288]
	071 Move V0, [X8+284]
	072 Move V8, [X8+304]
	073 Move V9, [X8+300]
	074 Move V10, [X8+296]
	075 Move X0, X22
	076 Move X1, X31
	077 Call Transform.TransformPoint, X0, X1
	078 Move V11, V0
	079 Move X0, X22
	080 Move V0, V10
	081 Move V1, V9
	082 Move V2, V8
	083 Move X1, X31
	084 Call Transform.TransformPoint, X0, X1
	085 Move V1, [X31]
	086 Subtract S0, S0, S11
	087 Move X22, [X31+64]
	088 Move X21, [X31+72]
	089 Move X30, [X31+48]
	090 Subtract S1, S1, S11
	091 NotImplemented "Instruction FDIV not yet implemented."
	092 Move S1, 0.5
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 NotImplemented "Instruction CSET not yet implemented."
	095 Add W0, W19, W8
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move D9, [X31+32]
	099 Move D8, [X31+40]
	100 Move D11, [X31+16]
	101 Move D10, [X31+24]
	102 Add X31, X31, 96
	103 Return X0
	104 Call 0x1C17F20
	105 Call 0x1C17F28

Method: System.Int32 GetCursorIndexFromPosition(TMPro.TMP_Text textComponent, UnityEngine.Vector3 position, UnityEngine.Camera camera, out TMPro.CaretPosition cursor)

Disassembly:
	0x03B1E930 BL 0x3AF8E0C
	0x03B1E934 LDR X8, [X20]
	0x03B1E938 MOV X20, X0
	0x03B1E93C LDR W9, [X8 + 0xE0]
	0x03B1E940 CBNZ W9, 0x3B1E94C
	0x03B1E944 MOV X0, X8
	0x03B1E948 BL 0x1C16DFC
	0x03B1E94C ADD X2, X31, 0x80
	0x03B1E950 MOV X0, X20
	0x03B1E954 MOV V0.16B, V9.16B
	0x03B1E958 MOV V1.16B, V8.16B
	0x03B1E95C MOV X1, X21
	0x03B1E960 BL 0x3B1D60C
	0x03B1E964 LDR X8, [X19 + 0x368]
	0x03B1E968 CBZ X8, 0x3B1EE38
	0x03B1E96C LDR V1, [X31 + 0x80]
	0x03B1E970 LDR V0, [X31 + 0x84]
	0x03B1E974 MOV X24, X31
	0x03B1E978 MOVZ W9, 0x7F800000
	0x03B1E97C MOVZ W28, 0x178
	0x03B1E980 STP S0, S1, [X31 + 0x68]
	0x03B1E984 LDR V0, [X31 + 0x88]
	0x03B1E988 MOVZ X29, 0x1
	0x03B1E98C STR W31, [X31 + 0x38]
	0x03B1E990 STR W9, [X31 + 0x5C]
	0x03B1E994 STR S0, [X31 + 0x64]
	0x03B1E998 LDRSW X9, [X8 + 0x24]
	0x03B1E99C CMP X24, X9
	0x03B1E9A0 B.GE 0x3B1EE70
	0x03B1E9A4 LDR X8, [X8 + 0x40]
	0x03B1E9A8 CBZ X8, 0x3B1EE38
	0x03B1E9AC LDR W9, [X8 + 0x18]
	0x03B1E9B0 CMP X24, X9
	0x03B1E9B4 B.CS 0x3B1EE78
	0x03B1E9B8 MOVZ W9, 0x18
	0x03B1E9BC MADD X8, X24, X9, X8
	0x03B1E9C0 ADRP X9, 0x8BA000
	0x03B1E9C4 LDRB W9, [X9 + 0x783]
	0x03B1E9C8 LDR W27, [X8 + 0x28]
	0x03B1E9CC LDR W22, [X8 + 0x30]
	0x03B1E9D0 CBNZ W9, 0x3B1E9EC
	0x03B1E9D4 ADRP X0, 0x5D5000
	0x03B1E9D8 LDR X0, [X0 + 0x5A0]
	0x03B1E9DC BL 0x1C16CF4
	0x03B1E9E0 ADRP X8, 0x8BA000
	0x03B1E9E4 MOVZ W9, 0x1
	0x03B1E9E8 STRB W9, [X8 + 0x783]
	0x03B1E9EC CMP W22, 0x1
	0x03B1E9F0 B.LT 0x3B1EE2C
	0x03B1E9F4 ADRP X9, 0x5D5000
	0x03B1E9F8 LDR X9, [X9 + 0x5A0]
	0x03B1E9FC MOV W8, W31
	0x03B1EA00 SUB W21, W22, 0x1
	0x03B1EA04 UBFM X26, X27, 0x20, 0x1F
	0x03B1EA08 LDR X9, [X9]
	0x03B1EA0C MOV X25, X22
	0x03B1EA10 LDR X9, [X9 + 0xB8]
	0x03B1EA14 LDP S1, S0, [X9]
	0x03B1EA18 LDR V15, [X9 + 0x8]
	0x03B1EA1C MOV V10.16B, V0.16B
	0x03B1EA20 STP S1, S1, [X31 + 0x78]
	0x03B1EA24 STP S15, S0, [X31 + 0x70]
	0x03B1EA28 LDR X9, [X19 + 0x368]
	0x03B1EA2C CBZ X9, 0x3B1EE38
	0x03B1EA30 LDR X9, [X9 + 0x38]
	0x03B1EA34 CBZ X9, 0x3B1EE38
	0x03B1EA38 LDR W10, [X9 + 0x18]
	0x03B1EA3C CMP X27, X10
	0x03B1EA40 B.CS 0x3B1EE78
	0x03B1EA44 SBFM X10, X26, 0x20, 0x3F
	0x03B1EA48 MADD X9, X10, X28, X9
	0x03B1EA4C LDRB W10, [X9 + 0x194]
	0x03B1EA50 LDR W23, [X9 + 0x64]
	0x03B1EA54 LDR V12, [X9 + 0x128]
	0x03B1EA58 LDR V11, [X9 + 0x148]
	0x03B1EA5C LDR V14, [X9 + 0x150]
	0x03B1EA60 BIC W10, W10, W8, 0x0
	0x03B1EA64 TBZ X10, 0x0, 0x3B1EC00
	0x03B1EA68 CBZ X20, 0x3B1EE38
	0x03B1EA6C LDR V8, [X9 + 0x11C]
	0x03B1EA70 FMOV S2, W31
	0x03B1EA74 MOV X0, X20
	0x03B1EA78 MOV V1.16B, V14.16B
	0x03B1EA7C MOV V0.16B, V8.16B
	0x03B1EA80 MOV X1, X31
	0x03B1EA84 BL 0x3C3DE4C
	0x03B1EA88 STR S0, [X31 + 0x7C]
	0x03B1EA8C MOV V10.16B, V1.16B
	0x03B1EA90 MOV V15.16B, V2.16B
	0x03B1EA94 FMOV S2, W31
	0x03B1EA98 MOV X0, X20
	0x03B1EA9C MOV V0.16B, V8.16B
	0x03B1EAA0 MOV V1.16B, V11.16B
	0x03B1EAA4 MOV X1, X31
	0x03B1EAA8 BL 0x3C3DE4C
	0x03B1EAAC CMP W22, 0x1
	0x03B1EAB0 STP S1, S0, [X31 + 0x74]
	0x03B1EAB4 STR S2, [X31 + 0x70]
	0x03B1EAB8 B.NE 0x3B1EC0C
	0x03B1EABC FMOV S2, W31
	0x03B1EAC0 MOV X0, X20
	0x03B1EAC4 MOV V0.16B, V12.16B
	0x03B1EAC8 MOV V1.16B, V14.16B
	0x03B1EACC MOV X1, X31
	0x03B1EAD0 BL 0x3C3DE4C
	0x03B1EAD4 MOV V8.16B, V0.16B
	0x03B1EAD8 MOV V13.16B, V1.16B
	0x03B1EADC MOV V9.16B, V2.16B
	0x03B1EAE0 FMOV S2, W31
	0x03B1EAE4 MOV X0, X20
	0x03B1EAE8 MOV V0.16B, V12.16B
	0x03B1EAEC MOV V1.16B, V11.16B
	0x03B1EAF0 MOV X1, X31
	0x03B1EAF4 BL 0x3C3DE4C
	0x03B1EAF8 ADRP X8, 0x63A000
	0x03B1EAFC LDR X8, [X8 + 0xBB8]
	0x03B1EB00 MOV V11.16B, V0.16B
	0x03B1EB04 MOV V12.16B, V1.16B
	0x03B1EB08 MOV V14.16B, V2.16B
	0x03B1EB0C LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x8C5000
	014 Move [X31], S0
	015 Move [X31+8], S1
	016 Move [X31+8], S2
	017 Move X24, 0x63B000
	018 Move W8, [X20+1803]
	019 Move X24, [X24+3000]
	020 Move X19, X2
	021 Move X21, X1
	022 Move V10, V2
	023 Move V8, V1
	024 Move V9, V0
	025 Move X22, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x63B000
	031 Move X0, [X0+3000]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1803], W8
	035 Move X0, [X24]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move V0, V9
	042 Move V1, V8
	043 Move V2, V10
	044 Move X1, X21
	045 Call TMP_TextUtilities.FindNearestLine, X0, X1, X2
	046 Move W23, W0
	047 Move X0, X22
	048 Move V0, V9
	049 Move V1, V8
	050 Move V2, V10
	051 Move W1, W23
	052 Move X2, X21
	053 Move W3, W31
	054 Call TMP_TextUtilities.FindNearestCharacterOnLine, X0, X1, X2, X3, X4
	055 Compare X22, 0
	056 JumpIfEqual {138}
	057 Move X8, [X22+872]
	058 Compare X8, 0
	059 JumpIfEqual {138}
	060 Move X8, [X8+80]
	061 Compare X8, 0
	062 JumpIfEqual {138}
	063 Move W9, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W9, 92
	066 NotImplemented "Instruction SMADDL not yet implemented."
	067 Move W8, [X8+36]
	068 Move W20, W0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X22
	071 Move X1, X31
	072 Call TMP_Text.get_rectTransform, X0
	073 Move X8, [X24]
	074 Move X23, X0
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Add X2, X31, 0
	081 Move X0, X23
	082 Move V0, V9
	083 Move V1, V8
	084 Move X1, X21
	085 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	086 Move X8, [X22+872]
	087 Compare X8, 0
	088 JumpIfEqual {138}
	089 Move X8, [X8+56]
	090 Compare X8, 0
	091 JumpIfEqual {138}
	092 Move W9, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Compare X23, 0
	095 JumpIfEqual {138}
	096 Move X9, W20
	097 Move W10, 376
	098 NotImplemented "Instruction MADD not yet implemented."
	099 Move V2, [X8+292]
	100 Move V1, [X8+288]
	101 Move V0, [X8+284]
	102 Move V8, [X8+304]
	103 Move V9, [X8+300]
	104 Move V10, [X8+296]
	105 Move X0, X23
	106 Move X1, X31
	107 Call Transform.TransformPoint, X0, X1
	108 Move V11, V0
	109 Move X0, X23
	110 Move V0, V10
	111 Move V1, V9
	112 Move V2, V8
	113 Move X1, X31
	114 Call Transform.TransformPoint, X0, X1
	115 Move V1, [X31]
	116 Subtract S0, S0, S11
	117 Move S2, 0.5
	118 Move W8, 2
	119 Subtract S1, S1, S11
	120 NotImplemented "Instruction FDIV not yet implemented."
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 NotImplemented "Instruction CSINC not yet implemented."
	123 Move [X19], W8
	124 Move W0, W20
	125 Move X20, [X31+96]
	126 Move X19, [X31+104]
	127 Move X22, [X31+80]
	128 Move X21, [X31+88]
	129 Move X24, [X31+64]
	130 Move X23, [X31+72]
	131 Move X30, [X31+48]
	132 Move D9, [X31+32]
	133 Move D8, [X31+40]
	134 Move D11, [X31+16]
	135 Move D10, [X31+24]
	136 Add X31, X31, 112
	137 Return X0
	138 Call 0x1C17F20
	139 Call 0x1C17F28

Method: System.Int32 FindNearestLine(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B1EB10 LDR W8, [X0 + 0xE0]
	0x03B1EB14 CBNZ W8, 0x3B1EB1C
	0x03B1EB18 BL 0x1C16DFC
	0x03B1EB1C LDR V1, [X31 + 0x70]
	0x03B1EB20 LDR V0, [X31 + 0x74]
	0x03B1EB24 LDR V2, [X31 + 0x64]
	0x03B1EB28 MOV V4.16B, V10.16B
	0x03B1EB2C MOV V5.16B, V15.16B
	0x03B1EB30 STP S0, S1, [X31 + 0x4]
	0x03B1EB34 LDP S0, S3, [X31 + 0x78]
	0x03B1EB38 STP S12, S14, [X31 + 0x14]
	0x03B1EB3C STR S11, [X31 + 0x10]
	0x03B1EB40 STR S0, [X31]
	0x03B1EB44 LDP S1, S0, [X31 + 0x68]
	0x03B1EB48 BL 0x3B1DFFC
	0x03B1EB4C TBNZ X0, 0x0, 0x3B1EE3C
	0x03B1EB50 STP S14, S12, [X31 + 0x44]
	0x03B1EB54 STP S11, S9, [X31 + 0x4C]
	0x03B1EB58 STP S13, S8, [X31 + 0x54]
	0x03B1EB5C ADRP X8, 0x63A000
	0x03B1EB60 LDR X8, [X8 + 0xBB8]
	0x03B1EB64 MOV V11.16B, V15.16B
	0x03B1EB68 LDR X0, [X8]
	0x03B1EB6C LDR W8, [X0 + 0xE0]
	0x03B1EB70 CBNZ W8, 0x3B1EB78
	0x03B1EB74 BL 0x1C16DFC
	0x03B1EB78 LDP S12, S0, [X31 + 0x78]
	0x03B1EB7C MOV V8.16B, V10.16B
	0x03B1EB80 MOV V1.16B, V10.16B
	0x03B1EB84 MOV V2.16B, V11.16B
	0x03B1EB88 STR S11, [X31 + 0x60]
	0x03B1EB8C LDP S11, S10, [X31 + 0x70]
	0x03B1EB90 LDP S14, S13, [X31 + 0x68]
	0x03B1EB94 LDR V15, [X31 + 0x64]
	0x03B1EB98 MOV V3.16B, V12.16B
	0x03B1EB9C MOV V4.16B, V10.16B
	0x03B1EBA0 MOV V5.16B, V11.16B
	0x03B1EBA4 STP S13, S14, [X31]
	0x03B1EBA8 STR S15, [X31 + 0x8]
	0x03B1EBAC BL 0x3B1E0BC
	0x03B1EBB0 STR S0, [X31 + 0x40]
	0x03B1EBB4 MOV V0.16B, V12.16B
	0x03B1EBB8 MOV V2.16B, V11.16B
	0x03B1EBBC LDP S11, S9, [X31 + 0x48]
	0x03B1EBC0 LDR V12, [X31 + 0x44]
	0x03B1EBC4 MOV V1.16B, V10.16B
	0x03B1EBC8 STP S14, S15, [X31 + 0x4]
	0x03B1EBCC MOV V3.16B, V9.16B
	0x03B1EBD0 MOV V4.16B, V11.16B
	0x03B1EBD4 MOV V5.16B, V12.16B
	0x03B1EBD8 STR S13, [X31]
	0x03B1EBDC BL 0x3B1E0BC
	0x03B1EBE0 MOV V10.16B, V8.16B
	0x03B1EBE4 STR S0, [X31 + 0x3C]
	0x03B1EBE8 MOV V0.16B, V9.16B
	0x03B1EBEC MOV V1.16B, V11.16B
	0x03B1EBF0 MOV V2.16B, V12.16B
	0x03B1EBF4 STP S14, S15, [X31 + 0x4]
	0x03B1EBF8 STR S13, [X31]
	0x03B1EBFC B 0x3B1ED8C
	0x03B1EC00 TBZ X8, 0x0, 0x3B1EE14
	0x03B1EC04 CBNZ X21, 0x3B1EC10
	0x03B1EC08 B 0x3B1EC50
	0x03B1EC0C CBZ X21, 0x3B1EC54
	0x03B1EC10 LDR X8, [X19 + 0x368]
	0x03B1EC14 CBZ X8, 0x3B1EE38
	0x03B1EC18 LDR X8, [X8 + 0x38]
	0x03B1EC1C CBZ X8, 0x3B1EE38
	0x03B1EC20 LDR W9, [X8 + 0x18]
	0x03B1EC24 ADD X10, X27, 0x1
	0x03B1EC28 CMP X10, X9
	0x03B1EC2C B.CS 0x3B1EE78
	0x03B1EC30 ADD X9, X26, X29
	0x03B1EC34 SBFM X9, X9, 0x20, 0x3F
	0x03B1EC38 MADD X8, X9, X28, X8
	0x03B1EC3C LDR W8, [X8 + 0x64]
	0x03B1EC40 CMP W23, W8
	0x03B1EC44 B.NE 0x3B1EC50
	0x03B1EC48 MOVZ W8, 0x1
	0x03B1EC4C B 0x3B1EE18
	0x03B1EC50 CBZ X20, 0x3B1EE38
	0x03B1EC54 FMOV S2, W31
	0x03B1EC58 MOV X0, X20
	0x03B1EC5C MOV V0.16B, V12.16B
	0x03B1EC60 MOV V1.16B, V14.16B
	0x03B1EC64 MOV X1, X31
	0x03B1EC68 BL 0x3C3DE4C
	0x03B1EC6C MOV V8.16B, V0.16B
	0x03B1EC70 MOV V9.16B, V1.16B
	0x03B1EC74 MOV V13.16B, V2.16B
	0x03B1EC78 FMOV S2, W31
	0x03B1EC7C MOV X0, X20
	0x03B1EC80 MOV V0.16B, V12.16B
	0x03B1EC84 MOV V1.16B, V11.16B
	0x03B1EC88 MOV X1, X31
	0x03B1EC8C BL 0x3C3DE4C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x8C5000
	013 Move W8, [X20+1804]
	014 Move X21, X1
	015 Move V8, V1
	016 Move V9, V0
	017 Move X19, X0
	018 Move [X31], S0
	019 Move [X31+8], S1
	020 Move [X31+8], S2
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x63B000
	026 Move X0, [X0+3000]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1804], W8
	030 Compare X19, 0
	031 JumpIfEqual {99}
	032 Move X20, 0x63B000
	033 Move X20, [X20+3000]
	034 Move X0, X19
	035 Move X1, X31
	036 Call TMP_Text.get_rectTransform, X0
	037 Move X8, [X20]
	038 Move X20, X0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Add X2, X31, 0
	045 Move X0, X20
	046 Move V0, V9
	047 Move V1, V8
	048 Move X1, X21
	049 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	050 Move X8, [X19+872]
	051 Compare X8, 0
	052 JumpIfEqual {99}
	053 Move V10, [X31+4]
	054 Move W9, 0x7F800000
	055 Move X23, X31
	056 Move X22, X31
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W21, TEMP
	060 Move S11, W9
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X8+80]
	064 Compare X8, 0
	065 JumpIfEqual {99}
	066 Move W9, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Compare X20, 0
	069 JumpIfEqual {99}
	070 Add X8, X8, X23
	071 Move V1, [X8+76]
	072 Move V9, [X8+84]
	073 Move S0, W31
	074 Move S2, W31
	075 Move X0, X20
	076 Move X1, X31
	077 Call Transform.TransformPoint, X0, X1
	078 Move V8, V1
	079 Move S0, W31
	080 Move S2, W31
	081 Move X0, X20
	082 Move V1, V9
	083 Move X1, X31
	084 Call Transform.TransformPoint, X0, X1
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction FABD not yet implemented."
	088 NotImplemented "Instruction FABD not yet implemented."
	089 Move X8, [X19+872]
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 NotImplemented "Instruction FCSEL not yet implemented."
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 Add X22, X22, 1
	096 Add X23, X23, 92
	097 Compare X8, 0
	098 JumpIfNotEqual {61}
	099 Call 0x1C17F20
	100 Move W21, W22
	101 Move W0, W21
	102 Move X20, [X31+80]
	103 Move X19, [X31+88]
	104 Move X22, [X31+64]
	105 Move X21, [X31+72]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Move D9, [X31+32]
	109 Move D8, [X31+40]
	110 Move D11, [X31+16]
	111 Move D10, [X31+24]
	112 Add X31, X31, 96
	113 Return X0
	114 Call 0x1C17F28

Method: System.Int32 FindNearestCharacterOnLine(TMPro.TMP_Text text, UnityEngine.Vector3 position, System.Int32 line, UnityEngine.Camera camera, System.Boolean visibleOnly)

Disassembly:
	0x03B1EC90 ADRP X8, 0x63A000
	0x03B1EC94 LDR X8, [X8 + 0xBB8]
	0x03B1EC98 MOV V11.16B, V0.16B
	0x03B1EC9C MOV V12.16B, V1.16B
	0x03B1ECA0 MOV V14.16B, V2.16B
	0x03B1ECA4 LDR X0, [X8]
	0x03B1ECA8 LDR W8, [X0 + 0xE0]
	0x03B1ECAC CBNZ W8, 0x3B1ECB4
	0x03B1ECB0 BL 0x1C16DFC
	0x03B1ECB4 LDR V1, [X31 + 0x70]
	0x03B1ECB8 LDR V0, [X31 + 0x74]
	0x03B1ECBC LDR V2, [X31 + 0x64]
	0x03B1ECC0 MOV V4.16B, V10.16B
	0x03B1ECC4 MOV V5.16B, V15.16B
	0x03B1ECC8 STP S0, S1, [X31 + 0x4]
	0x03B1ECCC LDP S0, S3, [X31 + 0x78]
	0x03B1ECD0 STP S12, S14, [X31 + 0x14]
	0x03B1ECD4 STR S11, [X31 + 0x10]
	0x03B1ECD8 STR S0, [X31]
	0x03B1ECDC LDP S1, S0, [X31 + 0x68]
	0x03B1ECE0 BL 0x3B1DFFC
	0x03B1ECE4 TBNZ X0, 0x0, 0x3B1EE3C
	0x03B1ECE8 STP S14, S12, [X31 + 0x44]
	0x03B1ECEC STP S11, S13, [X31 + 0x4C]
	0x03B1ECF0 STP S9, S8, [X31 + 0x54]
	0x03B1ECF4 ADRP X8, 0x63A000
	0x03B1ECF8 LDR X8, [X8 + 0xBB8]
	0x03B1ECFC MOV V11.16B, V15.16B
	0x03B1ED00 LDR X0, [X8]
	0x03B1ED04 LDR W8, [X0 + 0xE0]
	0x03B1ED08 CBNZ W8, 0x3B1ED10
	0x03B1ED0C BL 0x1C16DFC
	0x03B1ED10 LDP S12, S0, [X31 + 0x78]
	0x03B1ED14 MOV V2.16B, V11.16B
	0x03B1ED18 STR S11, [X31 + 0x60]
	0x03B1ED1C LDP S11, S8, [X31 + 0x70]
	0x03B1ED20 LDP S14, S13, [X31 + 0x68]
	0x03B1ED24 LDR V15, [X31 + 0x64]
	0x03B1ED28 MOV V1.16B, V10.16B
	0x03B1ED2C MOV V3.16B, V12.16B
	0x03B1ED30 MOV V4.16B, V8.16B
	0x03B1ED34 MOV V5.16B, V11.16B
	0x03B1ED38 STP S13, S14, [X31]
	0x03B1ED3C STR S15, [X31 + 0x8]
	0x03B1ED40 BL 0x3B1E0BC
	0x03B1ED44 MOV V1.16B, V8.16B
	0x03B1ED48 MOV V2.16B, V11.16B
	0x03B1ED4C LDP S9, S8, [X31 + 0x48]
	0x03B1ED50 LDR V11, [X31 + 0x44]
	0x03B1ED54 STR S0, [X31 + 0x40]
	0x03B1ED58 MOV V0.16B, V12.16B
	0x03B1ED5C MOV V3.16B, V8.16B
	0x03B1ED60 MOV V4.16B, V9.16B
	0x03B1ED64 MOV V5.16B, V11.16B
	0x03B1ED68 STP S14, S15, [X31 + 0x4]
	0x03B1ED6C STR S13, [X31]
	0x03B1ED70 BL 0x3B1E0BC
	0x03B1ED74 STR S0, [X31 + 0x3C]
	0x03B1ED78 STP S14, S15, [X31 + 0x4]
	0x03B1ED7C STR S13, [X31]
	0x03B1ED80 MOV V0.16B, V8.16B
	0x03B1ED84 MOV V1.16B, V9.16B
	0x03B1ED88 MOV V2.16B, V11.16B
	0x03B1ED8C LDP S9, S11, [X31 + 0x54]
	0x03B1ED90 LDR V12, [X31 + 0x50]
	0x03B1ED94 MOV V3.16B, V11.16B
	0x03B1ED98 MOV V4.16B, V9.16B
	0x03B1ED9C MOV V5.16B, V12.16B
	0x03B1EDA0 BL 0x3B1E0BC
	0x03B1EDA4 STP S14, S15, [X31 + 0x4]
	0x03B1EDA8 LDR V15, [X31 + 0x60]
	0x03B1EDAC LDR V3, [X31 + 0x7C]
	0x03B1EDB0 MOV V8.16B, V0.16B
	0x03B1EDB4 MOV V0.16B, V11.16B
	0x03B1EDB8 MOV V1.16B, V9.16B
	0x03B1EDBC MOV V2.16B, V12.16B
	0x03B1EDC0 MOV V4.16B, V10.16B
	0x03B1EDC4 MOV V5.16B, V15.16B
	0x03B1EDC8 STR S13, [X31]
	0x03B1EDCC MOV V14.16B, V10.16B
	0x03B1EDD0 BL 0x3B1E0BC
	0x03B1EDD4 LDP S2, S1, [X31 + 0x3C]
	0x03B1EDD8 MOV W8, W31
	0x03B1EDDC FCMP S1, S2
	0x03B1EDE0 FCSEL S1, S1, S2, MI
	0x03B1EDE4 FCMP S1, S8
	0x03B1EDE8 FCSEL S1, S1, S8, MI
	0x03B1EDEC FCMP S1, S0
	0x03B1EDF0 FCSEL S0, S1, S0, MI
	0x03B1EDF4 LDR V1, [X31 + 0x5C]
	0x03B1EDF8 FCMP S1, S0
	0x03B1EDFC B.LE 0x3B1EE0C
	0x03B1EE00 MOV W9, W24
	0x03B1EE04 STR W24, [X31 + 0x38]
	0x03B1EE08 STR S0, [X31 + 0x5C]
	0x03B1EE0C MOV V10.16B, V14.16B
	0x03B1EE10 B 0x3B1EE18
	0x03B1EE14 MOV W8, W31
	0x03B1EE18 SUB X21, X21, 0x1
	0x03B1EE1C ADD X26, X26, X29
	0x03B1EE20 SUBS X25, X25, 0x1
	0x03B1EE24 ADD X27, X27, 0x1
	0x03B1EE28 B.NE 0x3B1EA28
	0x03B1EE2C LDR X8, [X19 + 0x368]
	0x03B1EE30 ADD X24, X24, 0x1
	0x03B1EE34 CBNZ X8, 0x3B1E998
	0x03B1EE38 BL 0x1C16F20
	0x03B1EE3C MOV W0, W24
	0x03B1EE40 LDP X20, X19, [X31 + 0x120]
	0x03B1EE44 LDP X22, X21, [X31 + 0x110]
	0x03B1EE48 LDP X24, X23, [X31 + 0x100]
	0x03B1EE4C LDP X26, X25, [X31 + 0xF0]
	0x03B1EE50 LDP X28, X27, [X31 + 0xE0]
	0x03B1EE54 LDP X29, X30, [X31 + 0xD0]
	0x03B1EE58 LDP D9, D8, [X31 + 0xC0]
	0x03B1EE5C LDP D11, D10, [X31 + 0xB0]
	0x03B1EE60 LDP D13, D12, [X31 + 0xA0]
	0x03B1EE64 LDP D15, D14, [X31 + 0x90]
	0x03B1EE68 ADD X31, X31, 0x130
	0x03B1EE6C RET
	0x03B1EE70 LDR W0, [X31 + 0x38]
	0x03B1EE74 B 0x3B1EE40
	0x03B1EE78 BL 0x1C16F28
	0x03B1EE7C SUB X31, X31, 0x50
	0x03B1EE80 STR D10, [X31 + 0x10]
	0x03B1EE84 STP D9, D8, [X31 + 0x18]
	0x03B1EE88 STR X30, [X31 + 0x28]
	0x03B1EE8C STP X22, X21, [X31 + 0x30]
	0x03B1EE90 STP X20, X19, [X31 + 0x40]
	0x03B1EE94 ADRP X20, 0x8C4000
	0x03B1EE98 LDRB W8, [X20 + 0x713]
	0x03B1EE9C MOV X21, X1
	0x03B1EEA0 MOV V8.16B, V1.16B
	0x03B1EEA4 MOV V9.16B, V0.16B
	0x03B1EEA8 MOV X19, X0
	0x03B1EEAC STP S0, S1, [X31]
	0x03B1EEB0 STR S2, [X31 + 0x8]
	0x03B1EEB4 TBNZ X8, 0x0, 0x3B1EECC
	0x03B1EEB8 ADRP X0, 0x63A000
	0x03B1EEBC LDR X0, [X0 + 0xBB8]
	0x03B1EEC0 BL 0x1C16CF4
	0x03B1EEC4 MOVZ W8, 0x1
	0x03B1EEC8 STRB W8, [X20 + 0x713]
	0x03B1EECC CBZ X19, 0x3B1EFA8
	0x03B1EED0 ADRP X20, 0x63A000
	0x03B1EED4 LDR X20, [X20 + 0xBB8]
	0x03B1EED8 MOV X0, X19
	0x03B1EEDC MOV X1, X31
	0x03B1EEE0 BL 0x3AF8E0C
	0x03B1EEE4 LDR X8, [X20]
	0x03B1EEE8 MOV X20, X0
	0x03B1EEEC LDR W9, [X8 + 0xE0]
	0x03B1EEF0 CBNZ W9, 0x3B1EEFC
	0x03B1EEF4 MOV X0, X8
	0x03B1EEF8 BL 0x1C16DFC
	0x03B1EEFC ADD X2, X31, 0x0
	0x03B1EF00 MOV X0, X20
	0x03B1EF04 MOV V0.16B, V9.16B
	0x03B1EF08 MOV V1.16B, V8.16B
	0x03B1EF0C MOV X1, X21
	0x03B1EF10 BL 0x3B1D60C
	0x03B1EF14 LDR X8, [X19 + 0x368]
	0x03B1EF18 CBZ X8, 0x3B1EFA8
	0x03B1EF1C LDR V10, [X31 + 0x4]
	0x03B1EF20 MOV X22, X31
	0x03B1EF24 MOV X21, X31
	0x03B1EF28 LDRSW X9, [X8 + 0x2C]
	0x03B1EF2C CMP X21, X9
	0x03B1EF30 B.GE 0x3B1EFAC
	0x03B1EF34 LDR X8, [X8 + 0x50]
	0x03B1EF38 CBZ X8, 0x3B1EFA8
	0x03B1EF3C LDR W9, [X8 + 0x18]
	0x03B1EF40 CMP X21, X9
	0x03B1EF44 B.CS 0x3B1EFD0
	0x03B1EF48 CBZ X20, 0x3B1EFA8
	0x03B1EF4C ADD X8, X8, X22
	0x03B1EF50 LDR V1, [X8 + 0x4C]
	0x03B1EF54 LDR V8, [X8 + 0x54]
	0x03B1EF58 FMOV S0, W31
	0x03B1EF5C FMOV S2, W31
	0x03B1EF60 MOV X0, X20
	0x03B1EF64 MOV X1, X31
	0x03B1EF68 BL 0x3C3DE4C
	0x03B1EF6C MOV V9.16B, V1.16B
	0x03B1EF70 FMOV S0, W31
	0x03B1EF74 FMOV S2, W31
	0x03B1EF78 MOV X0, X20
	0x03B1EF7C MOV V1.16B, V8.16B
	0x03B1EF80 MOV X1, X31
	0x03B1EF84 BL 0x3C3DE4C
	0x03B1EF88 FCMP S9, S10
	0x03B1EF8C B.LE 0x3B1EF98
	0x03B1EF90 FCMP S1, S10
	0x03B1EF94 B.MI 0x3B1EFB0
	0x03B1EF98 LDR X8, [X19 + 0x368]
	0x03B1EF9C ADD X21, X21, 0x1
	0x03B1EFA0 ADD X22, X22, 0x5C
	0x03B1EFA4 CBNZ X8, 0x3B1EF28
	0x03B1EFA8 BL 0x1C16F20
	0x03B1EFAC MOVN W21, 0x0
	0x03B1EFB0 MOV W0, W21
	0x03B1EFB4 LDP X20, X19, [X31 + 0x40]
	0x03B1EFB8 LDP X22, X21, [X31 + 0x30]
	0x03B1EFBC LDR X30, [X31 + 0x28]
	0x03B1EFC0 LDP D9, D8, [X31 + 0x18]
	0x03B1EFC4 LDR V10, [X31 + 0x10]
	0x03B1EFC8 ADD X31, X31, 0x50
	0x03B1EFCC RET
	0x03B1EFD0 BL 0x1C16F28
	0x03B1EFD4 SUB X31, X31, 0xF0
	0x03B1EFD8 STP D15, D14, [X31 + 0x50]
	0x03B1EFDC STP D13, D12, [X31 + 0x60]
	0x03B1EFE0 STP D11, D10, [X31 + 0x70]
	0x03B1EFE4 STP D9, D8, [X31 + 0x80]
	0x03B1EFE8 STP X29, X30, [X31 + 0x90]
	0x03B1EFEC STP X28, X27, [X31 + 0xA0]
	0x03B1EFF0 STP X26, X25, [X31 + 0xB0]
	0x03B1EFF4 STP X24, X23, [X31 + 0xC0]
	0x03B1EFF8 STP X22, X21, [X31 + 0xD0]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+192], X26
	012 Move [X31+200], X25
	013 Move [X31+208], X24
	014 Move [X31+216], X23
	015 Move [X31+224], X22
	016 Move [X31+232], X21
	017 Move [X31+240], X20
	018 Move [X31+248], X19
	019 Move X21, 0x8C5000
	020 Move W8, [X21+1805]
	021 Move W19, W3
	022 Move X23, X2
	023 Move W22, W1
	024 Move V8, V1
	025 Move V9, V0
	026 Move X20, X0
	027 Move [X31+96], S0
	028 Move [X31+104], S1
	029 Move [X31+104], S2
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x63B000
	035 Move X0, [X0+3000]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1805], W8
	039 Compare X20, 0
	040 JumpIfEqual {250}
	041 Move X24, 0x63B000
	042 Move X24, [X24+3000]
	043 Move X0, X20
	044 Move X1, X31
	045 Call TMP_Text.get_rectTransform, X0
	046 Move X8, [X24]
	047 Move X21, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Add X2, X31, 96
	054 Move X0, X21
	055 Move V0, V9
	056 Move V1, V8
	057 Move X1, X23
	058 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	059 Move X8, [X20+872]
	060 Compare X8, 0
	061 JumpIfEqual {250}
	062 Move X9, [X8+80]
	063 Compare X9, 0
	064 JumpIfEqual {250}
	065 Move W10, [X9+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W10, 92
	068 NotImplemented "Instruction SMADDL not yet implemented."
	069 Move W23, [X9+52]
	070 Move W22, [X9+60]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move V1, [X31+96]
	073 Move V0, [X31+100]
	074 Move X9, W23
	075 Move W11, 376
	076 Move X10, W22
	077 Move [X31+84], S0
	078 Move [X31+92], S1
	079 Move V0, [X31+104]
	080 NotImplemented "Instruction ORN not yet implemented."
	081 Multiply X9, X9, X11
	082 Add X25, X12, X10
	083 Move W10, 0x7F800000
	084 Add X26, X9, 404
	085 Move [X31+80], S0
	086 Move [X31+56], W10
	087 Move X8, [X8+56]
	088 Compare X8, 0
	089 JumpIfEqual {250}
	090 Move W9, [X8+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X8, X26
	093 Move S8, [X8-120]
	094 Move S12, [X8-116]
	095 Move S2, [X8-112]
	096 Move S13, [X8-108]
	097 Move W9, [X8]
	098 Move S10, [X8-104]
	099 Move S9, [X8-100]
	100 Move TEMP, X9
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {108}
	104 Move TEMP, X19
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {242}
	108 Compare X21, 0
	109 JumpIfEqual {250}
	110 Move X0, X21
	111 Move V0, V8
	112 Move V1, V12
	113 Move X1, X31
	114 Call Transform.TransformPoint, X0, X1
	115 Move [X31+92], S0
	116 Move [X31+184], S1
	117 Move [X31+192], S2
	118 Move S2, W31
	119 Move X0, X21
	120 Move V0, V8
	121 Move V1, V10
	122 Move X1, X31
	123 Call Transform.TransformPoint, X0, X1
	124 Move V14, V0
	125 Move V11, V1
	126 Move V15, V2
	127 Move X0, X21
	128 Move V0, V13
	129 Move V1, V10
	130 Move V2, V9
	131 Move X1, X31
	132 Call Transform.TransformPoint, X0, X1
	133 Move V10, V0
	134 Move V9, V1
	135 Move V8, V2
	136 Move S2, W31
	137 Move X0, X21
	138 Move V0, V13
	139 Move V1, V12
	140 Move X1, X31
	141 Call Transform.TransformPoint, X0, X1
	142 Move X0, [X24]
	143 Move V13, V2
	144 Move [X31+72], S1
	145 Move [X31+80], S0
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move S1, [X31+84]
	151 Move S0, [X31+88]
	152 Move V2, [X31+80]
	153 Move V3, [X31+92]
	154 Move S4, [X31+184]
	155 Move S5, [X31+188]
	156 Move [X31+68], S8
	157 Move [X31+20], S9
	158 Move [X31+28], S8
	159 Move V8, V9
	160 Move [X31+16], S10
	161 Move V12, V15
	162 Move [X31+4], S11
	163 Move [X31+12], S15
	164 Move V15, V11
	165 Move V11, V14
	166 Move [X31], S14
	167 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {251}
	172 Move X0, [X24]
	173 Move V9, V10
	174 Move [X31+64], S13
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move S10, [X31+84]
	180 Move S13, [X31+88]
	181 Move V14, [X31+80]
	182 Move V0, [X31+92]
	183 Move S1, [X31+184]
	184 Move S2, [X31+188]
	185 Move V3, V11
	186 Move V4, V15
	187 Move V5, V12
	188 Move [X31], S13
	189 Move [X31+8], S10
	190 Move [X31+8], S14
	191 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	192 Move V2, V12
	193 Move V12, [X31+68]
	194 Move [X31+60], S0
	195 Move V0, V11
	196 Move V1, V15
	197 Move V3, V9
	198 Move V4, V8
	199 Move V5, V12
	200 Move [X31+4], S10
	201 Move [X31+12], S14
	202 Move [X31], S13
	203 Move V11, V9
	204 Move V9, V8
	205 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	206 Move V8, V0
	207 Move V0, V11
	208 Move V2, V12
	209 Move S15, [X31+72]
	210 Move S11, [X31+76]
	211 Move V12, [X31+64]
	212 Move V1, V9
	213 Move [X31+4], S10
	214 Move [X31+12], S14
	215 Move V3, V11
	216 Move V4, V15
	217 Move V5, V12
	218 Move [X31], S13
	219 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	220 Move V3, [X31+92]
	221 Move S4, [X31+184]
	222 Move S5, [X31+188]
	223 Move V9, V0
	224 Move V0, V11
	225 Move V1, V15
	226 Move V2, V12
	227 Move [X31+4], S10
	228 Move [X31+12], S14
	229 Move [X31], S13
	230 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	231 Move V1, [X31+60]
	232 NotImplemented "Instruction FCMP not yet implemented."
	233 NotImplemented "Instruction FCSEL not yet implemented."
	234 NotImplemented "Instruction FCMP not yet implemented."
	235 NotImplemented "Instruction FCSEL not yet implemented."
	236 NotImplemented "Instruction FCMP not yet implemented."
	237 NotImplemented "Instruction FCSEL not yet implemented."
	238 Move V1, [X31+56]
	239 NotImplemented "Instruction FCMP not yet implemented."
	240 Move W22, W23
	241 Move [X31+56], S0
	242 Compare X25, 0
	243 JumpIfEqual {252}
	244 Move X8, [X20+872]
	245 Add W23, W23, 1
	246 Subtract X25, X25, 1
	247 Add X26, X26, 376
	248 Compare X8, 0
	249 JumpIfNotEqual {87}
	250 Call 0x1C17F20
	251 Move W22, W23
	252 Move W0, W22
	253 Move X20, [X31+240]
	254 Move X19, [X31+248]
	255 Move X22, [X31+224]
	256 Move X21, [X31+232]
	257 Move X24, [X31+208]
	258 Move X23, [X31+216]
	259 Move X26, [X31+192]
	260 Move X25, [X31+200]
	261 Move X30, [X31+176]
	262 Move D9, [X31+160]
	263 Move D8, [X31+168]
	264 Move D11, [X31+144]
	265 Move D10, [X31+152]
	266 Move D13, [X31+128]
	267 Move D12, [X31+136]
	268 Move D15, [X31+112]
	269 Move D14, [X31+120]
	270 Add X31, X31, 256
	271 Return X0
	272 Call 0x1C17F28

Method: System.Boolean IsIntersectingRectTransform(UnityEngine.RectTransform rectTransform, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B1F184 ADD W9, W9, 0x1
	0x03B1F188 CMP W9, W10
	0x03B1F18C B.NE 0x3B1F2B4
	0x03B1F190 TBZ X8, 0x0, 0x3B1F19C
	0x03B1F194 CBNZ X24, 0x3B1F1F0
	0x03B1F198 B 0x3B1F230
	0x03B1F19C CBZ X20, 0x3B1F2D4
	0x03B1F1A0 FMOV S2, W31
	0x03B1F1A4 MOV X0, X20
	0x03B1F1A8 MOV V0.16B, V12.16B
	0x03B1F1AC MOV V1.16B, V11.16B
	0x03B1F1B0 MOV X1, X31
	0x03B1F1B4 BL 0x3C3DE4C
	0x03B1F1B8 STP S1, S0, [X31 + 0x38]
	0x03B1F1BC MOV V8.16B, V2.16B
	0x03B1F1C0 FMOV S2, W31
	0x03B1F1C4 MOV X0, X20
	0x03B1F1C8 MOV V0.16B, V12.16B
	0x03B1F1CC MOV V1.16B, V9.16B
	0x03B1F1D0 MOV X1, X31
	0x03B1F1D4 BL 0x3C3DE4C
	0x03B1F1D8 MOV V14.16B, V0.16B
	0x03B1F1DC MOV V15.16B, V1.16B
	0x03B1F1E0 CMP W25, 0x1
	0x03B1F1E4 MOV V13.16B, V2.16B
	0x03B1F1E8 B.EQ 0x3B1F234
	0x03B1F1EC CBZ X24, 0x3B1F234
	0x03B1F1F0 LDR X8, [X19 + 0x368]
	0x03B1F1F4 CBZ X8, 0x3B1F2D4
	0x03B1F1F8 LDR X8, [X8 + 0x38]
	0x03B1F1FC CBZ X8, 0x3B1F2D4
	0x03B1F200 LDR W9, [X8 + 0x18]
	0x03B1F204 ADD X10, X29, 0x1
	0x03B1F208 CMP X10, X9
	0x03B1F20C B.CS 0x3B1F310
	0x03B1F210 ADD X9, X22, X28
	0x03B1F214 SBFM X9, X9, 0x20, 0x3F
	0x03B1F218 MADD X8, X9, X27, X8
	0x03B1F21C LDR W8, [X8 + 0x64]
	0x03B1F220 CMP W23, W8
	0x03B1F224 B.NE 0x3B1F230
	0x03B1F228 MOVZ W8, 0x1
	0x03B1F22C B 0x3B1F2B4
	0x03B1F230 CBZ X20, 0x3B1F2D4
	0x03B1F234 FMOV S2, W31
	0x03B1F238 MOV X0, X20
	0x03B1F23C MOV V0.16B, V10.16B
	0x03B1F240 MOV V1.16B, V11.16B
	0x03B1F244 MOV X1, X31
	0x03B1F248 BL 0x3C3DE4C
	0x03B1F24C FMOV S2, W31
	0x03B1F250 MOV X0, X20
	0x03B1F254 MOV V0.16B, V10.16B
	0x03B1F258 MOV V1.16B, V9.16B
	0x03B1F25C MOV X1, X31
	0x03B1F260 BL 0x3C3DE4C
	0x03B1F264 ADRP X8, 0x639000
	0x03B1F268 LDR X8, [X8 + 0xBB8]
	0x03B1F26C MOV V9.16B, V0.16B
	0x03B1F270 MOV V10.16B, V1.16B
	0x03B1F274 MOV V11.16B, V2.16B
	0x03B1F278 LDR X0, [X8]
	0x03B1F27C LDR W8, [X0 + 0xE0]
	0x03B1F280 CBNZ W8, 0x3B1F288
	0x03B1F284 BL 0x1C16DFC
	0x03B1F288 LDP S1, S0, [X31 + 0x30]
	0x03B1F28C LDR V2, [X31 + 0x2C]
	0x03B1F290 LDP S4, S3, [X31 + 0x38]
	0x03B1F294 MOV V5.16B, V8.16B
	0x03B1F298 STP S10, S11, [X31 + 0x14]
	0x03B1F29C STR S9, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D9
	003 Move [X31+72], D8
	004 Move [X31+80], X30
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X22, 0x8C4000
	010 Move [X31+48], S0
	011 Move [X31+56], S1
	012 Move [X31+56], S2
	013 Move X21, 0x63A000
	014 Move W8, [X22+1806]
	015 Move X21, [X21+3000]
	016 Move X20, X1
	017 Move V8, V1
	018 Move V9, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x63A000
	025 Move X0, [X0+3000]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1806], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X2, X31, 48
	035 Move X0, X19
	036 Move V0, V9
	037 Move V1, V8
	038 Move X1, X20
	039 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	040 Compare X19, 0
	041 JumpIfEqual {87}
	042 Move X8, [X21]
	043 Move X0, X19
	044 Move X2, X31
	045 Move X8, [X8+184]
	046 Move X1, [X8]
	047 Call RectTransform.GetWorldCorners, X0, X1
	048 Move X8, [X21]
	049 Move X8, [X8+184]
	050 Move X8, [X8]
	051 Compare X8, 0
	052 JumpIfEqual {87}
	053 Move W9, [X8+24]
	054 Compare W9, 0
	055 JumpIfEqual {86}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move S0, [X31+48]
	060 Move S1, [X31+52]
	061 Move V2, [X31+56]
	062 Move S3, [X8+32]
	063 Move S4, [X8+36]
	064 Move S5, [X8+40]
	065 Move S6, [X8+44]
	066 Move S7, [X8+48]
	067 Move S16, [X8+52]
	068 Move V17, [X8+64]
	069 Move X8, [X8+56]
	070 Move [X31], S6
	071 Move [X31+4], S7
	072 Move [X31+12], S16
	073 Move [X31+24], S17
	074 Move [X31+16], X8
	075 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	076 Move X20, [X31+112]
	077 Move X19, [X31+120]
	078 Move X22, [X31+96]
	079 Move X21, [X31+104]
	080 Move X30, [X31+80]
	081 Move D9, [X31+64]
	082 Move D8, [X31+72]
	083 And W0, W0, 1
	084 Add X31, X31, 128
	085 Return X0
	086 Call 0x1C17F28
	087 Call 0x1C17F20

Method: System.Int32 FindIntersectingCharacter(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera, System.Boolean visibleOnly)

Disassembly:
	0x03B1F2A0 STP S15, S13, [X31 + 0x4]
	0x03B1F2A4 STR S14, [X31]
	0x03B1F2A8 BL 0x3B1DFFC
	0x03B1F2AC TBNZ X0, 0x0, 0x3B1F2DC
	0x03B1F2B0 MOV W8, W31
	0x03B1F2B4 SUB X24, X24, 0x1
	0x03B1F2B8 ADD X22, X22, X28
	0x03B1F2BC SUBS X26, X26, 0x1
	0x03B1F2C0 ADD X29, X29, 0x1
	0x03B1F2C4 B.NE 0x3B1F130
	0x03B1F2C8 LDR X8, [X19 + 0x368]
	0x03B1F2CC ADD X21, X21, 0x1
	0x03B1F2D0 CBNZ X8, 0x3B1F0A8
	0x03B1F2D4 BL 0x1C16F20
	0x03B1F2D8 MOVN W21, 0x0
	0x03B1F2DC MOV W0, W21
	0x03B1F2E0 LDP X20, X19, [X31 + 0xE0]
	0x03B1F2E4 LDP X22, X21, [X31 + 0xD0]
	0x03B1F2E8 LDP X24, X23, [X31 + 0xC0]
	0x03B1F2EC LDP X26, X25, [X31 + 0xB0]
	0x03B1F2F0 LDP X28, X27, [X31 + 0xA0]
	0x03B1F2F4 LDP X29, X30, [X31 + 0x90]
	0x03B1F2F8 LDP D9, D8, [X31 + 0x80]
	0x03B1F2FC LDP D11, D10, [X31 + 0x70]
	0x03B1F300 LDP D13, D12, [X31 + 0x60]
	0x03B1F304 LDP D15, D14, [X31 + 0x50]
	0x03B1F308 ADD X31, X31, 0xF0
	0x03B1F30C RET
	0x03B1F310 BL 0x1C16F28
	0x03B1F314 SUB X31, X31, 0x130
	0x03B1F318 STP D15, D14, [X31 + 0x90]
	0x03B1F31C STP D13, D12, [X31 + 0xA0]
	0x03B1F320 STP D11, D10, [X31 + 0xB0]
	0x03B1F324 STP D9, D8, [X31 + 0xC0]
	0x03B1F328 STP X29, X30, [X31 + 0xD0]
	0x03B1F32C STP X28, X27, [X31 + 0xE0]
	0x03B1F330 STP X26, X25, [X31 + 0xF0]
	0x03B1F334 STP X24, X23, [X31 + 0x100]
	0x03B1F338 STP X22, X21, [X31 + 0x110]
	0x03B1F33C STP X20, X19, [X31 + 0x120]
	0x03B1F340 ADRP X20, 0x8C3000
	0x03B1F344 LDRB W8, [X20 + 0x715]
	0x03B1F348 MOV X21, X1
	0x03B1F34C MOV V8.16B, V1.16B
	0x03B1F350 MOV V9.16B, V0.16B
	0x03B1F354 MOV X19, X0
	0x03B1F358 STP S0, S1, [X31 + 0x80]
	0x03B1F35C STR S2, [X31 + 0x88]
	0x03B1F360 TBNZ X8, 0x0, 0x3B1F378
	0x03B1F364 ADRP X0, 0x639000
	0x03B1F368 LDR X0, [X0 + 0xBB8]
	0x03B1F36C BL 0x1C16CF4
	0x03B1F370 MOVZ W8, 0x1
	0x03B1F374 STRB W8, [X20 + 0x715]
	0x03B1F378 CBZ X19, 0x3B1F9E4
	0x03B1F37C ADRP X20, 0x639000
	0x03B1F380 LDR X20, [X20 + 0xBB8]
	0x03B1F384 MOV X0, X19
	0x03B1F388 MOV X1, X31
	0x03B1F38C BL 0x3AF8E0C
	0x03B1F390 LDR X8, [X20]
	0x03B1F394 MOV X20, X0
	0x03B1F398 LDR W9, [X8 + 0xE0]
	0x03B1F39C CBNZ W9, 0x3B1F3A8
	0x03B1F3A0 MOV X0, X8
	0x03B1F3A4 BL 0x1C16DFC
	0x03B1F3A8 ADD X2, X31, 0x80
	0x03B1F3AC MOV X0, X20
	0x03B1F3B0 MOV V0.16B, V9.16B
	0x03B1F3B4 MOV V1.16B, V8.16B
	0x03B1F3B8 MOV X1, X21
	0x03B1F3BC BL 0x3B1D60C
	0x03B1F3C0 LDR X8, [X19 + 0x368]
	0x03B1F3C4 CBZ X8, 0x3B1F9E4
	0x03B1F3C8 LDR V1, [X31 + 0x80]
	0x03B1F3CC LDR V0, [X31 + 0x84]
	0x03B1F3D0 MOV X24, X31
	0x03B1F3D4 MOVZ W9, 0x7F800000
	0x03B1F3D8 MOVZ W28, 0x178
	0x03B1F3DC STP S0, S1, [X31 + 0x60]
	0x03B1F3E0 LDR V0, [X31 + 0x88]
	0x03B1F3E4 MOVZ X29, 0x1
	0x03B1F3E8 STR W31, [X31 + 0x40]
	0x03B1F3EC STR W9, [X31 + 0x58]
	0x03B1F3F0 STR S0, [X31 + 0x5C]
	0x03B1F3F4 LDRSW X9, [X8 + 0x28]
	0x03B1F3F8 CMP X24, X9
	0x03B1F3FC B.GE 0x3B1FA1C
	0x03B1F400 LDR X8, [X8 + 0x48]
	0x03B1F404 CBZ X8, 0x3B1F9E4
	0x03B1F408 LDR W9, [X8 + 0x18]
	0x03B1F40C CMP X24, X9
	0x03B1F410 B.CS 0x3B1FA24
	0x03B1F414 MOVZ W9, 0x28
	0x03B1F418 MADD X8, X24, X9, X8
	0x03B1F41C ADRP X9, 0x8B9000
	0x03B1F420 LDRB W9, [X9 + 0x783]
	0x03B1F424 LDP W27, W22, [X8 + 0x34]
	0x03B1F428 CBNZ W9, 0x3B1F444
	0x03B1F42C ADRP X0, 0x5D4000
	0x03B1F430 LDR X0, [X0 + 0x5A0]
	0x03B1F434 BL 0x1C16CF4
	0x03B1F438 ADRP X8, 0x8B9000
	0x03B1F43C MOVZ W9, 0x1
	0x03B1F440 STRB W9, [X8 + 0x783]
	0x03B1F444 CMP W22, 0x1
	0x03B1F448 B.LT 0x3B1F9D8
	0x03B1F44C ADRP X9, 0x5D4000
	0x03B1F450 LDR X9, [X9 + 0x5A0]
	0x03B1F454 MOV W8, W31
	0x03B1F458 SUB W21, W22, 0x1
	0x03B1F45C UBFM X26, X27, 0x20, 0x1F
	0x03B1F460 LDR X9, [X9]
	0x03B1F464 MOV X25, X22
	0x03B1F468 LDR X9, [X9 + 0xB8]
	0x03B1F46C LDP S0, S1, [X9]
	0x03B1F470 LDR V2, [X9 + 0x8]
	0x03B1F474 STP S1, S0, [X31 + 0x78]
	0x03B1F478 STP S1, S0, [X31 + 0x6C]
	0x03B1F47C STR S2, [X31 + 0x74]
	0x03B1F480 STR S2, [X31 + 0x68]
	0x03B1F484 LDR X9, [X19 + 0x368]
	0x03B1F488 CBZ X9, 0x3B1F9E4
	0x03B1F48C LDR X9, [X9 + 0x38]
	0x03B1F490 CBZ X9, 0x3B1F9E4
	0x03B1F494 LDR W10, [X9 + 0x18]
	0x03B1F498 CMP X27, X10
	0x03B1F49C B.CS 0x3B1FA24
	0x03B1F4A0 SBFM X10, X26, 0x20, 0x3F
	0x03B1F4A4 LDR W11, [X19 + 0x2E0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X30
	011 Move [X31+160], X24
	012 Move [X31+168], X23
	013 Move [X31+176], X22
	014 Move [X31+184], X21
	015 Move [X31+192], X20
	016 Move [X31+200], X19
	017 Move X21, 0x8C4000
	018 Move W8, [X21+1807]
	019 Move W19, W2
	020 Move X22, X1
	021 Move V8, V1
	022 Move V9, V0
	023 Move X20, X0
	024 Move [X31+64], S0
	025 Move [X31+72], S1
	026 Move [X31+72], S2
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x63A000
	032 Move X0, [X0+3000]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1807], W8
	036 Compare X20, 0
	037 JumpIfEqual {151}
	038 Move X23, 0x63A000
	039 Move X23, [X23+3000]
	040 Move X0, X20
	041 Move X1, X31
	042 Call TMP_Text.get_rectTransform, X0
	043 Move X8, [X23]
	044 Move X21, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Add X2, X31, 64
	051 Move X0, X21
	052 Move V0, V9
	053 Move V1, V8
	054 Move X1, X22
	055 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	056 Move X8, [X20+872]
	057 Compare X8, 0
	058 JumpIfEqual {151}
	059 Move V1, [X31+64]
	060 Move V0, [X31+68]
	061 Move X22, X31
	062 Move W24, 284
	063 Move [X31+52], S0
	064 Move [X31+60], S1
	065 Move V0, [X31+72]
	066 Move [X31+48], S0
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X8+56]
	070 Compare X9, 0
	071 JumpIfEqual {151}
	072 Move W10, [X9+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X9, X9, X24
	075 Move S8, [X9]
	076 Move S14, [X9+4]
	077 Move S2, [X9+8]
	078 Move S15, [X9+12]
	079 Move W10, [X9+120]
	080 Move S12, [X9+16]
	081 Move S11, [X9+20]
	082 Move TEMP, X10
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {90}
	086 Move TEMP, X19
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {147}
	090 Compare X21, 0
	091 JumpIfEqual {151}
	092 Move X0, X21
	093 Move V0, V8
	094 Move V1, V14
	095 Move X1, X31
	096 Call Transform.TransformPoint, X0, X1
	097 Move [X31+152], S1
	098 Move [X31+160], S0
	099 Move [X31+60], S2
	100 Move S2, W31
	101 Move X0, X21
	102 Move V0, V8
	103 Move V1, V12
	104 Move X1, X31
	105 Call Transform.TransformPoint, X0, X1
	106 Move V8, V0
	107 Move V9, V1
	108 Move V10, V2
	109 Move X0, X21
	110 Move V0, V15
	111 Move V1, V12
	112 Move V2, V11
	113 Move X1, X31
	114 Call Transform.TransformPoint, X0, X1
	115 Move V11, V0
	116 Move V12, V1
	117 Move V13, V2
	118 Move S2, W31
	119 Move X0, X21
	120 Move V0, V15
	121 Move V1, V14
	122 Move X1, X31
	123 Call Transform.TransformPoint, X0, X1
	124 Move X0, [X23]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move S1, [X31+52]
	130 Move S0, [X31+56]
	131 Move V2, [X31+48]
	132 Move S4, [X31+152]
	133 Move S3, [X31+156]
	134 Move V5, [X31+60]
	135 Move [X31+20], S12
	136 Move [X31+28], S13
	137 Move [X31+16], S11
	138 Move [X31+4], S9
	139 Move [X31+12], S10
	140 Move [X31], S8
	141 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {155}
	146 Move X8, [X20+872]
	147 Add X22, X22, 1
	148 Add X24, X24, 376
	149 Compare X8, 0
	150 JumpIfNotEqual {67}
	151 Call 0x1C17F20
	152 Move TEMP, 0
	153 Not TEMP
	154 Move W22, TEMP
	155 Move W0, W22
	156 Move X20, [X31+192]
	157 Move X19, [X31+200]
	158 Move X22, [X31+176]
	159 Move X21, [X31+184]
	160 Move X24, [X31+160]
	161 Move X23, [X31+168]
	162 Move X30, [X31+144]
	163 Move D9, [X31+128]
	164 Move D8, [X31+136]
	165 Move D11, [X31+112]
	166 Move D10, [X31+120]
	167 Move D13, [X31+96]
	168 Move D12, [X31+104]
	169 Move D15, [X31+80]
	170 Move D14, [X31+88]
	171 Add X31, X31, 208
	172 Return X0
	173 Call 0x1C17F28

Method: System.Int32 FindNearestCharacter(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera, System.Boolean visibleOnly)

Disassembly:
	0x03B1E2E4 STR S2, [X31 + 0x48]
	0x03B1E2E8 TBNZ X8, 0x0, 0x3B1E300
	0x03B1E2EC ADRP X0, 0x63A000
	0x03B1E2F0 LDR X0, [X0 + 0xBB8]
	0x03B1E2F4 BL 0x1C16CF4
	0x03B1E2F8 MOVZ W8, 0x1
	0x03B1E2FC STRB W8, [X21 + 0x70F]
	0x03B1E300 CBZ X20, 0x3B1E470
	0x03B1E304 ADRP X23, 0x63A000
	0x03B1E308 LDR X23, [X23 + 0xBB8]
	0x03B1E30C MOV X0, X20
	0x03B1E310 MOV X1, X31
	0x03B1E314 BL 0x3AF8E0C
	0x03B1E318 LDR X8, [X23]
	0x03B1E31C MOV X21, X0
	0x03B1E320 LDR W9, [X8 + 0xE0]
	0x03B1E324 CBNZ W9, 0x3B1E330
	0x03B1E328 MOV X0, X8
	0x03B1E32C BL 0x1C16DFC
	0x03B1E330 ADD X2, X31, 0x40
	0x03B1E334 MOV X0, X21
	0x03B1E338 MOV V0.16B, V9.16B
	0x03B1E33C MOV V1.16B, V8.16B
	0x03B1E340 MOV X1, X22
	0x03B1E344 BL 0x3B1D60C
	0x03B1E348 LDR X8, [X20 + 0x368]
	0x03B1E34C CBZ X8, 0x3B1E470
	0x03B1E350 LDR V1, [X31 + 0x40]
	0x03B1E354 LDR V0, [X31 + 0x44]
	0x03B1E358 MOV X22, X31
	0x03B1E35C MOVZ W24, 0x11C
	0x03B1E360 STP S0, S1, [X31 + 0x34]
	0x03B1E364 LDR V0, [X31 + 0x48]
	0x03B1E368 STR S0, [X31 + 0x30]
	0x03B1E36C LDRSW X9, [X8 + 0x18]
	0x03B1E370 CMP X22, X9
	0x03B1E374 B.GE 0x3B1E474
	0x03B1E378 LDR X9, [X8 + 0x38]
	0x03B1E37C CBZ X9, 0x3B1E470
	0x03B1E380 LDR W10, [X9 + 0x18]
	0x03B1E384 CMP X22, X10
	0x03B1E388 B.CS 0x3B1E4A4
	0x03B1E38C ADD X9, X9, X24
	0x03B1E390 LDP S8, S14, [X9]
	0x03B1E394 LDP S2, S15, [X9 + 0x8]
	0x03B1E398 LDRB W10, [X9 + 0x78]
	0x03B1E39C LDP S12, S11, [X9 + 0x10]
	0x03B1E3A0 TBNZ X10, 0x0, 0x3B1E3A8
	0x03B1E3A4 TBNZ X19, 0x0, 0x3B1E464
	0x03B1E3A8 CBZ X21, 0x3B1E470
	0x03B1E3AC MOV X0, X21
	0x03B1E3B0 MOV V0.16B, V8.16B
	0x03B1E3B4 MOV V1.16B, V14.16B
	0x03B1E3B8 MOV X1, X31
	0x03B1E3BC BL 0x3C3DE4C
	0x03B1E3C0 STP S1, S0, [X31 + 0x98]
	0x03B1E3C4 STR S2, [X31 + 0x3C]
	0x03B1E3C8 FMOV S2, W31
	0x03B1E3CC MOV X0, X21
	0x03B1E3D0 MOV V0.16B, V8.16B
	0x03B1E3D4 MOV V1.16B, V12.16B
	0x03B1E3D8 MOV X1, X31
	0x03B1E3DC BL 0x3C3DE4C
	0x03B1E3E0 MOV V8.16B, V0.16B
	0x03B1E3E4 MOV V9.16B, V1.16B
	0x03B1E3E8 MOV V10.16B, V2.16B
	0x03B1E3EC MOV X0, X21
	0x03B1E3F0 MOV V0.16B, V15.16B
	0x03B1E3F4 MOV V1.16B, V12.16B
	0x03B1E3F8 MOV V2.16B, V11.16B
	0x03B1E3FC MOV X1, X31
	0x03B1E400 BL 0x3C3DE4C
	0x03B1E404 MOV V11.16B, V0.16B
	0x03B1E408 MOV V12.16B, V1.16B
	0x03B1E40C MOV V13.16B, V2.16B
	0x03B1E410 FMOV S2, W31
	0x03B1E414 MOV X0, X21
	0x03B1E418 MOV V0.16B, V15.16B
	0x03B1E41C MOV V1.16B, V14.16B
	0x03B1E420 MOV X1, X31
	0x03B1E424 BL 0x3C3DE4C
	0x03B1E428 LDR X0, [X23]
	0x03B1E42C LDR W8, [X0 + 0xE0]
	0x03B1E430 CBNZ W8, 0x3B1E438
	0x03B1E434 BL 0x1C16DFC
	0x03B1E438 LDP S1, S0, [X31 + 0x34]
	0x03B1E43C LDR V2, [X31 + 0x30]
	0x03B1E440 LDP S4, S3, [X31 + 0x98]
	0x03B1E444 LDR V5, [X31 + 0x3C]
	0x03B1E448 STP S12, S13, [X31 + 0x14]
	0x03B1E44C STR S11, [X31 + 0x10]
	0x03B1E450 STP S9, S10, [X31 + 0x4]
	0x03B1E454 STR S8, [X31]
	0x03B1E458 BL 0x3B1DFFC
	0x03B1E45C TBNZ X0, 0x0, 0x3B1E478
	0x03B1E460 LDR X8, [X20 + 0x368]
	0x03B1E464 ADD X22, X22, 0x1
	0x03B1E468 ADD X24, X24, 0x178
	0x03B1E46C CBNZ X8, 0x3B1E36C
	0x03B1E470 BL 0x1C16F20
	0x03B1E474 MOVN W22, 0x0
	0x03B1E478 MOV W0, W22
	0x03B1E47C LDP X20, X19, [X31 + 0xC0]
	0x03B1E480 LDP X22, X21, [X31 + 0xB0]
	0x03B1E484 LDP X24, X23, [X31 + 0xA0]
	0x03B1E488 LDR X30, [X31 + 0x90]
	0x03B1E48C LDP D9, D8, [X31 + 0x80]
	0x03B1E490 LDP D11, D10, [X31 + 0x70]
	0x03B1E494 LDP D13, D12, [X31 + 0x60]
	0x03B1E498 LDP D15, D14, [X31 + 0x50]
	0x03B1E49C ADD X31, X31, 0xD0
	0x03B1E4A0 RET
	0x03B1E4A4 BL 0x1C16F28
	0x03B1E4A8 SUB X31, X31, 0x110
	0x03B1E4AC STP D15, D14, [X31 + 0x70]
	0x03B1E4B0 STP D13, D12, [X31 + 0x80]
	0x03B1E4B4 STP D11, D10, [X31 + 0x90]
	0x03B1E4B8 STP D9, D8, [X31 + 0xA0]
	0x03B1E4BC STP X29, X30, [X31 + 0xB0]
	0x03B1E4C0 STP X28, X27, [X31 + 0xC0]
	0x03B1E4C4 STP X26, X25, [X31 + 0xD0]
	0x03B1E4C8 STP X24, X23, [X31 + 0xE0]
	0x03B1E4CC STP X22, X21, [X31 + 0xF0]
	0x03B1E4D0 STP X20, X19, [X31 + 0x100]
	0x03B1E4D4 ADRP X20, 0x8C4000
	0x03B1E4D8 LDRB W8, [X20 + 0x711]
	0x03B1E4DC MOV X21, X1
	0x03B1E4E0 MOV V8.16B, V1.16B
	0x03B1E4E4 MOV V9.16B, V0.16B
	0x03B1E4E8 MOV X19, X0
	0x03B1E4EC STP S0, S1, [X31 + 0x60]
	0x03B1E4F0 STR S2, [X31 + 0x68]
	0x03B1E4F4 TBNZ X8, 0x0, 0x3B1E50C
	0x03B1E4F8 ADRP X0, 0x63A000
	0x03B1E4FC LDR X0, [X0 + 0xBB8]
	0x03B1E500 BL 0x1C16CF4
	0x03B1E504 MOVZ W8, 0x1
	0x03B1E508 STRB W8, [X20 + 0x711]
	0x03B1E50C CBZ X19, 0x3B1E878
	0x03B1E510 ADRP X23, 0x63A000
	0x03B1E514 LDR X23, [X23 + 0xBB8]
	0x03B1E518 MOV X0, X19
	0x03B1E51C MOV X1, X31
	0x03B1E520 BL 0x3AF8E0C
	0x03B1E524 LDR X8, [X23]
	0x03B1E528 MOV X20, X0
	0x03B1E52C LDR W9, [X8 + 0xE0]
	0x03B1E530 CBNZ W9, 0x3B1E53C
	0x03B1E534 MOV X0, X8
	0x03B1E538 BL 0x1C16DFC
	0x03B1E53C ADD X2, X31, 0x60
	0x03B1E540 MOV X0, X20
	0x03B1E544 MOV V0.16B, V9.16B
	0x03B1E548 MOV V1.16B, V8.16B
	0x03B1E54C MOV X1, X21
	0x03B1E550 BL 0x3B1D60C
	0x03B1E554 LDR X8, [X19 + 0x368]
	0x03B1E558 CBZ X8, 0x3B1E878
	0x03B1E55C LDR V1, [X31 + 0x60]
	0x03B1E560 LDR V0, [X31 + 0x64]
	0x03B1E564 MOV X21, X31
	0x03B1E568 MOVZ W27, 0x178
	0x03B1E56C MOVZ X28, 0x1
	0x03B1E570 STP S0, S1, [X31 + 0x58]
	0x03B1E574 LDR V0, [X31 + 0x68]
	0x03B1E578 STR S0, [X31 + 0x54]
	0x03B1E57C LDRSW X9, [X8 + 0x24]
	0x03B1E580 CMP X21, X9
	0x03B1E584 B.GE 0x3B1E87C
	0x03B1E588 LDR X8, [X8 + 0x40]
	0x03B1E58C CBZ X8, 0x3B1E878
	0x03B1E590 LDR W9, [X8 + 0x18]
	0x03B1E594 CMP X21, X9
	0x03B1E598 B.CS 0x3B1E8B4
	0x03B1E59C MOVZ W9, 0x18
	0x03B1E5A0 MADD X8, X21, X9, X8
	0x03B1E5A4 ADRP X9, 0x8BA000
	0x03B1E5A8 LDRB W9, [X9 + 0x783]
	0x03B1E5AC LDR W29, [X8 + 0x28]
	0x03B1E5B0 LDR W25, [X8 + 0x30]
	0x03B1E5B4 CBNZ W9, 0x3B1E5D0
	0x03B1E5B8 ADRP X0, 0x5D5000
	0x03B1E5BC LDR X0, [X0 + 0x5A0]
	0x03B1E5C0 BL 0x1C16CF4
	0x03B1E5C4 ADRP X8, 0x8BA000
	0x03B1E5C8 MOVZ W9, 0x1
	0x03B1E5CC STRB W9, [X8 + 0x783]
	0x03B1E5D0 CMP W25, 0x1
	0x03B1E5D4 B.LT 0x3B1E86C
	0x03B1E5D8 ADRP X9, 0x5D5000
	0x03B1E5DC LDR X9, [X9 + 0x5A0]
	0x03B1E5E0 MOVZ W10, 0xFF800000
	0x03B1E5E4 MOV W8, W31
	0x03B1E5E8 SUB W24, W25, 0x1
	0x03B1E5EC LDR X9, [X9]
	0x03B1E5F0 UBFM X22, X29, 0x20, 0x1F
	0x03B1E5F4 FMOV S14, W10
	0x03B1E5F8 MOV X26, X25
	0x03B1E5FC LDR X9, [X9 + 0xB8]
	0x03B1E600 LDR V10, [X9]
	0x03B1E604 MOVZ W9, 0x7F800000
	0x03B1E608 FMOV S13, W9

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+184], X25
	012 Move [X31+192], X24
	013 Move [X31+200], X23
	014 Move [X31+208], X22
	015 Move [X31+216], X21
	016 Move [X31+224], X20
	017 Move [X31+232], X19
	018 Move X21, 0x8C5000
	019 Move W8, [X21+1808]
	020 Move W19, W2
	021 Move X22, X1
	022 Move V8, V1
	023 Move V9, V0
	024 Move X20, X0
	025 Move [X31+96], S0
	026 Move [X31+104], S1
	027 Move [X31+104], S2
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x63B000
	033 Move X0, [X0+3000]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1808], W8
	037 Compare X20, 0
	038 JumpIfEqual {233}
	039 Move X23, 0x63B000
	040 Move X23, [X23+3000]
	041 Move X0, X20
	042 Move X1, X31
	043 Call TMP_Text.get_rectTransform, X0
	044 Move X8, [X23]
	045 Move X21, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Add X2, X31, 96
	052 Move X0, X21
	053 Move V0, V9
	054 Move V1, V8
	055 Move X1, X22
	056 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	057 Move X8, [X20+872]
	058 Compare X8, 0
	059 JumpIfEqual {233}
	060 Move V1, [X31+96]
	061 Move V0, [X31+100]
	062 Move W9, 0x7F800000
	063 Move X24, X31
	064 Move W22, W31
	065 Move [X31+76], S0
	066 Move [X31+84], S1
	067 Move V0, [X31+104]
	068 Move [X31+48], W9
	069 Move W25, 284
	070 Move [X31+72], S0
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X8+56]
	074 Compare X8, 0
	075 JumpIfEqual {233}
	076 Move W9, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X8, X25
	079 Move S8, [X8]
	080 Move S12, [X8+4]
	081 Move S2, [X8+8]
	082 Move S13, [X8+12]
	083 Move W9, [X8+120]
	084 Move S10, [X8+16]
	085 Move S9, [X8+20]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {94}
	090 Move TEMP, X19
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {228}
	094 Compare X21, 0
	095 JumpIfEqual {233}
	096 Move X0, X21
	097 Move V0, V8
	098 Move V1, V12
	099 Move X1, X31
	100 Call Transform.TransformPoint, X0, X1
	101 Move [X31+84], S0
	102 Move [X31+92], S1
	103 Move [X31+92], S2
	104 Move S2, W31
	105 Move X0, X21
	106 Move V0, V8
	107 Move V1, V10
	108 Move X1, X31
	109 Call Transform.TransformPoint, X0, X1
	110 Move V14, V0
	111 Move V11, V1
	112 Move V15, V2
	113 Move X0, X21
	114 Move V0, V13
	115 Move V1, V10
	116 Move V2, V9
	117 Move X1, X31
	118 Call Transform.TransformPoint, X0, X1
	119 Move V10, V0
	120 Move V9, V1
	121 Move V8, V2
	122 Move S2, W31
	123 Move X0, X21
	124 Move V0, V13
	125 Move V1, V12
	126 Move X1, X31
	127 Call Transform.TransformPoint, X0, X1
	128 Move X0, [X23]
	129 Move V13, V2
	130 Move [X31+64], S1
	131 Move [X31+72], S0
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move S1, [X31+76]
	137 Move S0, [X31+80]
	138 Move V2, [X31+72]
	139 Move S3, [X31+84]
	140 Move S4, [X31+88]
	141 Move V5, [X31+92]
	142 Move [X31+60], S8
	143 Move [X31+20], S9
	144 Move [X31+28], S8
	145 Move V8, V9
	146 Move [X31+16], S10
	147 Move V12, V15
	148 Move [X31+4], S11
	149 Move [X31+12], S15
	150 Move V15, V11
	151 Move V11, V14
	152 Move [X31], S14
	153 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {234}
	158 Move X0, [X23]
	159 Move V9, V10
	160 Move [X31+56], S13
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move S10, [X31+76]
	166 Move S13, [X31+80]
	167 Move V14, [X31+72]
	168 Move S0, [X31+84]
	169 Move S1, [X31+88]
	170 Move V2, [X31+92]
	171 Move V3, V11
	172 Move V4, V15
	173 Move V5, V12
	174 Move [X31], S13
	175 Move [X31+8], S10
	176 Move [X31+8], S14
	177 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	178 Move V2, V12
	179 Move V12, [X31+60]
	180 Move [X31+52], S0
	181 Move V0, V11
	182 Move V1, V15
	183 Move V3, V9
	184 Move V4, V8
	185 Move V5, V12
	186 Move [X31+4], S10
	187 Move [X31+12], S14
	188 Move [X31], S13
	189 Move V11, V9
	190 Move V9, V8
	191 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	192 Move V8, V0
	193 Move V0, V11
	194 Move V2, V12
	195 Move S15, [X31+64]
	196 Move S11, [X31+68]
	197 Move V12, [X31+56]
	198 Move V1, V9
	199 Move [X31+4], S10
	200 Move [X31+12], S14
	201 Move V3, V11
	202 Move V4, V15
	203 Move V5, V12
	204 Move [X31], S13
	205 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	206 Move S3, [X31+84]
	207 Move S4, [X31+88]
	208 Move V5, [X31+92]
	209 Move V9, V0
	210 Move V0, V11
	211 Move V1, V15
	212 Move V2, V12
	213 Move [X31+4], S10
	214 Move [X31+12], S14
	215 Move [X31], S13
	216 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	217 Move V1, [X31+52]
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 NotImplemented "Instruction FCSEL not yet implemented."
	220 NotImplemented "Instruction FCMP not yet implemented."
	221 NotImplemented "Instruction FCSEL not yet implemented."
	222 NotImplemented "Instruction FCMP not yet implemented."
	223 NotImplemented "Instruction FCSEL not yet implemented."
	224 Move V1, [X31+48]
	225 NotImplemented "Instruction FCMP not yet implemented."
	226 Move W22, W24
	227 Move [X31+48], S0
	228 Move X8, [X20+872]
	229 Add X24, X24, 1
	230 Add X25, X25, 376
	231 Compare X8, 0
	232 JumpIfNotEqual {71}
	233 Call 0x1C17F20
	234 Move W22, W24
	235 Move W0, W22
	236 Move X20, [X31+224]
	237 Move X19, [X31+232]
	238 Move X22, [X31+208]
	239 Move X21, [X31+216]
	240 Move X24, [X31+192]
	241 Move X23, [X31+200]
	242 Move X30, [X31+176]
	243 Move X25, [X31+184]
	244 Move D9, [X31+160]
	245 Move D8, [X31+168]
	246 Move D11, [X31+144]
	247 Move D10, [X31+152]
	248 Move D13, [X31+128]
	249 Move D12, [X31+136]
	250 Move D15, [X31+112]
	251 Move D14, [X31+120]
	252 Add X31, X31, 240
	253 Return X0
	254 Call 0x1C17F28

Method: System.Int32 FindIntersectingWord(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B1F4A8 NOP
	0x03B1F4AC MADD X12, X10, X28, X9
	0x03B1F4B0 LDR W23, [X12 + 0x64]
	0x03B1F4B4 LDR V8, [X12 + 0x11C]
	0x03B1F4B8 LDR V11, [X12 + 0x128]
	0x03B1F4BC LDR V12, [X12 + 0x148]
	0x03B1F4C0 LDR V14, [X12 + 0x150]
	0x03B1F4C4 CMP W11, 0x5
	0x03B1F4C8 B.NE 0x3B1F4E4
	0x03B1F4CC MADD X9, X10, X28, X9
	0x03B1F4D0 LDR W9, [X9 + 0x68]
	0x03B1F4D4 LDR W10, [X19 + 0x338]
	0x03B1F4D8 ADD W9, W9, 0x1
	0x03B1F4DC CMP W9, W10
	0x03B1F4E0 B.NE 0x3B1F9C4
	0x03B1F4E4 TBZ X8, 0x0, 0x3B1F4F4
	0x03B1F4E8 CBNZ X21, 0x3B1F6A4
	0x03B1F4EC CBNZ X20, 0x3B1F6E4
	0x03B1F4F0 B 0x3B1F9E4
	0x03B1F4F4 CBZ X20, 0x3B1F9E4
	0x03B1F4F8 FMOV S2, W31
	0x03B1F4FC MOV X0, X20
	0x03B1F500 MOV V0.16B, V8.16B
	0x03B1F504 MOV V1.16B, V14.16B
	0x03B1F508 MOV X1, X31
	0x03B1F50C BL 0x3C3DE4C
	0x03B1F510 STP S1, S0, [X31 + 0x78]
	0x03B1F514 STR S2, [X31 + 0x74]
	0x03B1F518 FMOV S2, W31
	0x03B1F51C MOV X0, X20
	0x03B1F520 MOV V0.16B, V8.16B
	0x03B1F524 MOV V1.16B, V12.16B
	0x03B1F528 MOV X1, X31
	0x03B1F52C BL 0x3C3DE4C
	0x03B1F530 CMP W22, 0x1
	0x03B1F534 STP S1, S0, [X31 + 0x6C]
	0x03B1F538 STR S2, [X31 + 0x68]
	0x03B1F53C B.NE 0x3B1F6A0
	0x03B1F540 FMOV S2, W31
	0x03B1F544 MOV X0, X20
	0x03B1F548 MOV V0.16B, V11.16B
	0x03B1F54C MOV V1.16B, V14.16B
	0x03B1F550 MOV X1, X31
	0x03B1F554 BL 0x3C3DE4C
	0x03B1F558 MOV V8.16B, V0.16B
	0x03B1F55C MOV V10.16B, V1.16B
	0x03B1F560 MOV V13.16B, V2.16B
	0x03B1F564 FMOV S2, W31
	0x03B1F568 MOV X0, X20
	0x03B1F56C MOV V0.16B, V11.16B
	0x03B1F570 MOV V1.16B, V12.16B
	0x03B1F574 MOV X1, X31
	0x03B1F578 BL 0x3C3DE4C
	0x03B1F57C ADRP X8, 0x639000
	0x03B1F580 LDR X8, [X8 + 0xBB8]
	0x03B1F584 MOV V9.16B, V0.16B
	0x03B1F588 MOV V11.16B, V1.16B
	0x03B1F58C MOV V12.16B, V2.16B
	0x03B1F590 LDR X0, [X8]
	0x03B1F594 LDR W8, [X0 + 0xE0]
	0x03B1F598 CBNZ W8, 0x3B1F5A0
	0x03B1F59C BL 0x1C16DFC
	0x03B1F5A0 LDR V1, [X31 + 0x68]
	0x03B1F5A4 LDR V0, [X31 + 0x6C]
	0x03B1F5A8 LDR V2, [X31 + 0x5C]
	0x03B1F5AC LDP S4, S3, [X31 + 0x78]
	0x03B1F5B0 STP S11, S12, [X31 + 0x14]
	0x03B1F5B4 STP S0, S1, [X31 + 0x4]
	0x03B1F5B8 LDP S0, S5, [X31 + 0x70]
	0x03B1F5BC STR S9, [X31 + 0x10]
	0x03B1F5C0 STR S0, [X31]
	0x03B1F5C4 LDP S1, S0, [X31 + 0x60]
	0x03B1F5C8 BL 0x3B1DFFC
	0x03B1F5CC TBNZ X0, 0x0, 0x3B1F9E8
	0x03B1F5D0 STP S12, S10, [X31 + 0x48]
	0x03B1F5D4 STP S13, S8, [X31 + 0x50]
	0x03B1F5D8 ADRP X8, 0x639000
	0x03B1F5DC LDR X8, [X8 + 0xBB8]
	0x03B1F5E0 MOV V12.16B, V11.16B
	0x03B1F5E4 MOV V11.16B, V9.16B
	0x03B1F5E8 LDR X0, [X8]
	0x03B1F5EC LDR W8, [X0 + 0xE0]
	0x03B1F5F0 CBNZ W8, 0x3B1F5F8
	0x03B1F5F4 BL 0x1C16DFC
	0x03B1F5F8 LDP S9, S2, [X31 + 0x70]
	0x03B1F5FC LDP S8, S10, [X31 + 0x68]
	0x03B1F600 LDP S14, S13, [X31 + 0x60]
	0x03B1F604 LDR V15, [X31 + 0x5C]
	0x03B1F608 LDP S1, S0, [X31 + 0x78]
	0x03B1F60C MOV V3.16B, V9.16B
	0x03B1F610 MOV V4.16B, V10.16B
	0x03B1F614 MOV V5.16B, V8.16B
	0x03B1F618 STP S13, S14, [X31]
	0x03B1F61C STR S15, [X31 + 0x8]
	0x03B1F620 BL 0x3B1E0BC
	0x03B1F624 MOV V2.16B, V8.16B
	0x03B1F628 MOV V8.16B, V11.16B
	0x03B1F62C MOV V3.16B, V11.16B
	0x03B1F630 LDR V11, [X31 + 0x48]
	0x03B1F634 STR S0, [X31 + 0x44]
	0x03B1F638 MOV V0.16B, V9.16B
	0x03B1F63C MOV V1.16B, V10.16B
	0x03B1F640 MOV V4.16B, V12.16B
	0x03B1F644 MOV V5.16B, V11.16B
	0x03B1F648 STP S14, S15, [X31 + 0x4]
	0x03B1F64C STR S13, [X31]
	0x03B1F650 BL 0x3B1E0BC
	0x03B1F654 MOV V1.16B, V12.16B
	0x03B1F658 MOV V2.16B, V11.16B
	0x03B1F65C LDP S11, S9, [X31 + 0x50]
	0x03B1F660 LDR V12, [X31 + 0x4C]
	0x03B1F664 MOV V10.16B, V0.16B
	0x03B1F668 MOV V0.16B, V8.16B
	0x03B1F66C MOV V3.16B, V9.16B
	0x03B1F670 MOV V4.16B, V12.16B
	0x03B1F674 MOV V5.16B, V11.16B
	0x03B1F678 STP S14, S15, [X31 + 0x4]
	0x03B1F67C STR S13, [X31]
	0x03B1F680 BL 0x3B1E0BC
	0x03B1F684 MOV V8.16B, V0.16B
	0x03B1F688 MOV V0.16B, V9.16B
	0x03B1F68C MOV V1.16B, V12.16B
	0x03B1F690 MOV V2.16B, V11.16B
	0x03B1F694 STP S14, S15, [X31 + 0x4]
	0x03B1F698 STR S13, [X31]
	0x03B1F69C B 0x3B1F980
	0x03B1F6A0 CBZ X21, 0x3B1F6E4
	0x03B1F6A4 LDR X8, [X19 + 0x368]
	0x03B1F6A8 CBZ X8, 0x3B1F9E4
	0x03B1F6AC LDR X8, [X8 + 0x38]
	0x03B1F6B0 CBZ X8, 0x3B1F9E4
	0x03B1F6B4 LDR W9, [X8 + 0x18]
	0x03B1F6B8 ADD X10, X27, 0x1
	0x03B1F6BC CMP X10, X9
	0x03B1F6C0 B.CS 0x3B1FA24
	0x03B1F6C4 ADD X9, X26, X29
	0x03B1F6C8 SBFM X9, X9, 0x20, 0x3F
	0x03B1F6CC MADD X8, X9, X28, X8
	0x03B1F6D0 LDR W8, [X8 + 0x64]
	0x03B1F6D4 CMP W23, W8
	0x03B1F6D8 B.NE 0x3B1F820
	0x03B1F6DC MOVZ W8, 0x1
	0x03B1F6E0 B 0x3B1F9C4
	0x03B1F6E4 FMOV S2, W31
	0x03B1F6E8 MOV X0, X20
	0x03B1F6EC MOV V0.16B, V11.16B
	0x03B1F6F0 MOV V1.16B, V14.16B
	0x03B1F6F4 MOV X1, X31
	0x03B1F6F8 BL 0x3C3DE4C
	0x03B1F6FC MOV V8.16B, V0.16B
	0x03B1F700 MOV V10.16B, V1.16B
	0x03B1F704 MOV V13.16B, V2.16B
	0x03B1F708 FMOV S2, W31
	0x03B1F70C MOV X0, X20
	0x03B1F710 MOV V0.16B, V11.16B
	0x03B1F714 MOV V1.16B, V12.16B
	0x03B1F718 MOV X1, X31
	0x03B1F71C BL 0x3C3DE4C
	0x03B1F720 ADRP X8, 0x639000
	0x03B1F724 LDR X8, [X8 + 0xBB8]
	0x03B1F728 MOV V9.16B, V0.16B
	0x03B1F72C MOV V11.16B, V1.16B
	0x03B1F730 MOV V12.16B, V2.16B
	0x03B1F734 LDR X0, [X8]
	0x03B1F738 LDR W8, [X0 + 0xE0]
	0x03B1F73C CBNZ W8, 0x3B1F744
	0x03B1F740 BL 0x1C16DFC
	0x03B1F744 LDR V1, [X31 + 0x68]
	0x03B1F748 LDR V0, [X31 + 0x6C]
	0x03B1F74C LDR V2, [X31 + 0x5C]
	0x03B1F750 LDP S4, S3, [X31 + 0x78]
	0x03B1F754 STP S11, S12, [X31 + 0x14]
	0x03B1F758 STP S0, S1, [X31 + 0x4]
	0x03B1F75C LDP S0, S5, [X31 + 0x70]
	0x03B1F760 STR S9, [X31 + 0x10]
	0x03B1F764 STR S0, [X31]
	0x03B1F768 LDP S1, S0, [X31 + 0x60]
	0x03B1F76C BL 0x3B1DFFC
	0x03B1F770 TBNZ X0, 0x0, 0x3B1F9E8
	0x03B1F774 STP S12, S10, [X31 + 0x48]
	0x03B1F778 STP S13, S8, [X31 + 0x50]
	0x03B1F77C ADRP X8, 0x639000
	0x03B1F780 LDR X8, [X8 + 0xBB8]
	0x03B1F784 MOV V12.16B, V11.16B
	0x03B1F788 LDR X0, [X8]
	0x03B1F78C LDR W8, [X0 + 0xE0]
	0x03B1F790 CBNZ W8, 0x3B1F798
	0x03B1F794 BL 0x1C16DFC
	0x03B1F798 LDP S10, S2, [X31 + 0x70]
	0x03B1F79C LDP S11, S8, [X31 + 0x68]
	0x03B1F7A0 LDP S14, S13, [X31 + 0x60]
	0x03B1F7A4 LDR V15, [X31 + 0x5C]
	0x03B1F7A8 LDP S1, S0, [X31 + 0x78]
	0x03B1F7AC MOV V3.16B, V10.16B
	0x03B1F7B0 MOV V4.16B, V8.16B
	0x03B1F7B4 MOV V5.16B, V11.16B
	0x03B1F7B8 STP S13, S14, [X31]
	0x03B1F7BC STR S15, [X31 + 0x8]
	0x03B1F7C0 BL 0x3B1E0BC
	0x03B1F7C4 MOV V2.16B, V11.16B
	0x03B1F7C8 LDR V11, [X31 + 0x48]
	0x03B1F7CC STR S0, [X31 + 0x44]
	0x03B1F7D0 MOV V0.16B, V10.16B
	0x03B1F7D4 MOV V1.16B, V8.16B
	0x03B1F7D8 MOV V3.16B, V9.16B
	0x03B1F7DC MOV V4.16B, V12.16B
	0x03B1F7E0 MOV V5.16B, V11.16B
	0x03B1F7E4 STP S14, S15, [X31 + 0x4]
	0x03B1F7E8 STR S13, [X31]
	0x03B1F7EC MOV V8.16B, V9.16B
	0x03B1F7F0 BL 0x3B1E0BC
	0x03B1F7F4 MOV V1.16B, V12.16B
	0x03B1F7F8 MOV V2.16B, V11.16B
	0x03B1F7FC LDR V11, [X31 + 0x54]
	0x03B1F800 LDR V12, [X31 + 0x4C]
	0x03B1F804 MOV V10.16B, V0.16B
	0x03B1F808 MOV V0.16B, V9.16B
	0x03B1F80C MOV V3.16B, V11.16B
	0x03B1F810 MOV V4.16B, V12.16B
	0x03B1F814 STP S14, S15, [X31 + 0x4]
	0x03B1F818 STR S13, [X31]
	0x03B1F81C B 0x3B1F95C
	0x03B1F820 CBZ X20, 0x3B1F9E4
	0x03B1F824 FMOV S2, W31
	0x03B1F828 MOV X0, X20
	0x03B1F82C MOV V0.16B, V11.16B
	0x03B1F830 MOV V1.16B, V14.16B
	0x03B1F834 MOV X1, X31
	0x03B1F838 BL 0x3C3DE4C
	0x03B1F83C MOV V8.16B, V0.16B
	0x03B1F840 MOV V9.16B, V1.16B
	0x03B1F844 MOV V10.16B, V2.16B
	0x03B1F848 FMOV S2, W31
	0x03B1F84C MOV X0, X20
	0x03B1F850 MOV V0.16B, V11.16B
	0x03B1F854 MOV V1.16B, V12.16B
	0x03B1F858 MOV X1, X31
	0x03B1F85C BL 0x3C3DE4C
	0x03B1F860 ADRP X8, 0x639000
	0x03B1F864 LDR X8, [X8 + 0xBB8]
	0x03B1F868 MOV V11.16B, V0.16B
	0x03B1F86C MOV V12.16B, V1.16B
	0x03B1F870 MOV V13.16B, V2.16B
	0x03B1F874 LDR X0, [X8]
	0x03B1F878 LDR W8, [X0 + 0xE0]
	0x03B1F87C CBNZ W8, 0x3B1F884
	0x03B1F880 BL 0x1C16DFC
	0x03B1F884 LDR V1, [X31 + 0x68]
	0x03B1F888 LDR V0, [X31 + 0x6C]
	0x03B1F88C LDR V2, [X31 + 0x5C]
	0x03B1F890 LDP S4, S3, [X31 + 0x78]
	0x03B1F894 STP S12, S13, [X31 + 0x14]
	0x03B1F898 STP S0, S1, [X31 + 0x4]
	0x03B1F89C LDP S0, S5, [X31 + 0x70]
	0x03B1F8A0 STR S11, [X31 + 0x10]
	0x03B1F8A4 STR S0, [X31]
	0x03B1F8A8 LDP S1, S0, [X31 + 0x60]
	0x03B1F8AC BL 0x3B1DFFC
	0x03B1F8B0 TBNZ X0, 0x0, 0x3B1F9E8
	0x03B1F8B4 STP S13, S12, [X31 + 0x48]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X29
	011 Move [X31+184], X30
	012 Move [X31+192], X28
	013 Move [X31+200], X27
	014 Move [X31+208], X26
	015 Move [X31+216], X25
	016 Move [X31+224], X24
	017 Move [X31+232], X23
	018 Move [X31+240], X22
	019 Move [X31+248], X21
	020 Move [X31+256], X20
	021 Move [X31+264], X19
	022 Move X20, 0x8C4000
	023 Move W8, [X20+1809]
	024 Move X21, X1
	025 Move V8, V1
	026 Move V9, V0
	027 Move X19, X0
	028 Move [X31+96], S0
	029 Move [X31+104], S1
	030 Move [X31+104], S2
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x63A000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1809], W8
	040 Compare X19, 0
	041 JumpIfEqual {290}
	042 Move X23, 0x63A000
	043 Move X23, [X23+3000]
	044 Move X0, X19
	045 Move X1, X31
	046 Call TMP_Text.get_rectTransform, X0
	047 Move X8, [X23]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Add X2, X31, 96
	055 Move X0, X20
	056 Move V0, V9
	057 Move V1, V8
	058 Move X1, X21
	059 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	060 Move X8, [X19+872]
	061 Compare X8, 0
	062 JumpIfEqual {290}
	063 Move V1, [X31+96]
	064 Move V0, [X31+100]
	065 Move X21, X31
	066 Move W27, 376
	067 Move X28, 1
	068 Move [X31+88], S0
	069 Move [X31+96], S1
	070 Move V0, [X31+104]
	071 Move [X31+84], S0
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+64]
	075 Compare X8, 0
	076 JumpIfEqual {290}
	077 Move W9, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W9, 24
	080 NotImplemented "Instruction MADD not yet implemented."
	081 Move X9, 0x8BA000
	082 Move W9, [X9+1923]
	083 Move W29, [X8+40]
	084 Move W25, [X8+48]
	085 Compare W9, 0
	086 JumpIfNotEqual {93}
	087 Move X0, 0x5D5000
	088 Move X0, [X0+1440]
	089 Call 0x1C17CF4
	090 Move X8, 0x8BA000
	091 Move W9, 1
	092 Move [X8+1923], W9
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, 0x5D5000
	095 Move X9, [X9+1440]
	096 Move W10, 0xFF800000
	097 Move W8, W31
	098 Subtract W24, W25, 1
	099 Move X9, [X9]
	100 Move X22, X29
	101 ShiftRight X22, 32
	102 And X22, X22, 0x7FFFFFFF
	103 Move S14, W10
	104 Move X26, X25
	105 Move X9, [X9+184]
	106 Move V10, [X9]
	107 Move W9, 0x7F800000
	108 Move S13, W9
	109 Move V8, V10
	110 Move X9, [X19+872]
	111 Compare X9, 0
	112 JumpIfEqual {290}
	113 Move X9, [X9+56]
	114 Compare X9, 0
	115 JumpIfEqual {290}
	116 Move W11, [X9+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction SBFM not yet implemented."
	119 NotImplemented "Instruction MADD not yet implemented."
	120 Move V2, [X12+328]
	121 Move V1, [X12+336]
	122 Move W13, [X12+404]
	123 Move W10, [X12+100]
	124 Move V15, [X12+296]
	125 NotImplemented "Instruction FCMP not yet implemented."
	126 NotImplemented "Instruction FCSEL not yet implemented."
	127 NotImplemented "Instruction FCMP not yet implemented."
	128 NotImplemented "Instruction BIC not yet implemented."
	129 NotImplemented "Instruction FCSEL not yet implemented."
	130 Move TEMP, X13
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {141}
	134 Move V8, [X12+284]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Compare X20, 0
	137 JumpIfEqual {290}
	138 Move S2, W31
	139 Move X0, X20
	140 Move V0, V8
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {217}
	145 Compare X24, 0
	146 JumpIfEqual {158}
	147 Add X8, X29, 1
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X8, X22, X28
	150 NotImplemented "Instruction SBFM not yet implemented."
	151 NotImplemented "Instruction MADD not yet implemented."
	152 Move W8, [X8+100]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W8, 1
	155 Move V10, V8
	156 Compare X24, 0
	157 JumpIfNotEqual {147}
	158 Compare X20, 0
	159 JumpIfEqual {290}
	160 Move S2, W31
	161 Move X0, X20
	162 Move V0, V10
	163 Move V1, V13
	164 Move X1, X31
	165 Call Transform.TransformPoint, X0, X1
	166 Move V10, V0
	167 Move [X31+76], S2
	168 Move [X31+84], S1
	169 Move S2, W31
	170 Move X0, X20
	171 Move V0, V8
	172 Move V1, V14
	173 Move X1, X31
	174 Call Transform.TransformPoint, X0, X1
	175 Move V8, V0
	176 Move [X31+68], S2
	177 Move [X31+76], S1
	178 Move S2, W31
	179 Move X0, X20
	180 Move V0, V15
	181 Move V1, V14
	182 Move X1, X31
	183 Call Transform.TransformPoint, X0, X1
	184 Move V11, V0
	185 Move V9, V1
	186 Move V12, V2
	187 Move S2, W31
	188 Move X0, X20
	189 Move V0, V15
	190 Move V1, V13
	191 Move X1, X31
	192 Call Transform.TransformPoint, X0, X1
	193 Move X0, [X23]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move V1, [X31+68]
	199 Move S0, [X31+72]
	200 Move S5, [X31+76]
	201 Move S4, [X31+80]
	202 Move S2, [X31+84]
	203 Move V3, V10
	204 Move [X31+20], S9
	205 Move [X31+28], S12
	206 Move [X31+4], S0
	207 Move [X31+12], S1
	208 Move S1, [X31+88]
	209 Move S0, [X31+92]
	210 Move [X31+16], S11
	211 Move [X31], S8
	212 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {294}
	217 Move W8, W31
	218 Subtract X24, X24, 1
	219 Add X22, X22, X28
	220 Subtract X26, X26, 1
	221 Add X29, X29, 1
	222 Compare X20, 0
	223 JumpIfEqual {290}
	224 Move S2, W31
	225 Move X0, X20
	226 Move V0, V10
	227 Move V1, V13
	228 Move X1, X31
	229 Call Transform.TransformPoint, X0, X1
	230 Move V9, V0
	231 Move [X31+76], S2
	232 Move [X31+84], S1
	233 Move S2, W31
	234 Move X0, X20
	235 Move V0, V8
	236 Move V1, V14
	237 Move X1, X31
	238 Call Transform.TransformPoint, X0, X1
	239 Move V8, V0
	240 Move [X31+72], S1
	241 Move V11, V2
	242 Move S2, W31
	243 Move X0, X20
	244 Move V0, V15
	245 Move V1, V14
	246 Move X1, X31
	247 Call Transform.TransformPoint, X0, X1
	248 Move V14, V0
	249 Move V10, V1
	250 Move V12, V2
	251 Move S2, W31
	252 Move X0, X20
	253 Move V0, V15
	254 Move V1, V13
	255 Move X1, X31
	256 Call Transform.TransformPoint, X0, X1
	257 Move X0, [X23]
	258 Move W8, [X0+224]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move S0, [X31+72]
	263 Move S5, [X31+76]
	264 Move S4, [X31+80]
	265 Move S2, [X31+84]
	266 Move V3, V9
	267 Move [X31+20], S10
	268 Move [X31+28], S12
	269 Move [X31+4], S0
	270 Move [X31+12], S11
	271 Move S1, [X31+88]
	272 Move S0, [X31+92]
	273 Move [X31+16], S14
	274 Move [X31], S8
	275 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {294}
	280 Move W9, 0xFF800000
	281 Move W10, 0x7F800000
	282 Move V10, V9
	283 Move W8, W31
	284 Move S14, W9
	285 Move S13, W10
	286 Move X8, [X19+872]
	287 Add X21, X21, 1
	288 Compare X8, 0
	289 JumpIfNotEqual {72}
	290 Call 0x1C17F20
	291 Move TEMP, 0
	292 Not TEMP
	293 Move W21, TEMP
	294 Move W0, W21
	295 Move X20, [X31+256]
	296 Move X19, [X31+264]
	297 Move X22, [X31+240]
	298 Move X21, [X31+248]
	299 Move X24, [X31+224]
	300 Move X23, [X31+232]
	301 Move X26, [X31+208]
	302 Move X25, [X31+216]
	303 Move X28, [X31+192]
	304 Move X27, [X31+200]
	305 Move X29, [X31+176]
	306 Move X30, [X31+184]
	307 Move D9, [X31+160]
	308 Move D8, [X31+168]
	309 Move D11, [X31+144]
	310 Move D10, [X31+152]
	311 Move D13, [X31+128]
	312 Move D12, [X31+136]
	313 Move D15, [X31+112]
	314 Move D14, [X31+120]
	315 Add X31, X31, 272
	316 Return X0
	317 Call 0x1C17F28

Method: System.Int32 FindNearestWord(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B1F8B8 STP S10, S8, [X31 + 0x50]
	0x03B1F8BC ADRP X8, 0x639000
	0x03B1F8C0 LDR X8, [X8 + 0xBB8]
	0x03B1F8C4 MOV V12.16B, V11.16B
	0x03B1F8C8 LDR X0, [X8]
	0x03B1F8CC LDR W8, [X0 + 0xE0]
	0x03B1F8D0 CBNZ W8, 0x3B1F8D8
	0x03B1F8D4 BL 0x1C16DFC
	0x03B1F8D8 LDP S10, S2, [X31 + 0x70]
	0x03B1F8DC LDP S11, S8, [X31 + 0x68]
	0x03B1F8E0 LDP S14, S13, [X31 + 0x60]
	0x03B1F8E4 LDR V15, [X31 + 0x5C]
	0x03B1F8E8 LDP S1, S0, [X31 + 0x78]
	0x03B1F8EC MOV V3.16B, V10.16B
	0x03B1F8F0 MOV V4.16B, V8.16B
	0x03B1F8F4 MOV V5.16B, V11.16B
	0x03B1F8F8 STP S13, S14, [X31]
	0x03B1F8FC STR S15, [X31 + 0x8]
	0x03B1F900 BL 0x3B1E0BC
	0x03B1F904 MOV V1.16B, V8.16B
	0x03B1F908 MOV V2.16B, V11.16B
	0x03B1F90C MOV V8.16B, V12.16B
	0x03B1F910 MOV V3.16B, V12.16B
	0x03B1F914 LDP S12, S11, [X31 + 0x48]
	0x03B1F918 STR S0, [X31 + 0x44]
	0x03B1F91C MOV V0.16B, V10.16B
	0x03B1F920 STP S14, S15, [X31 + 0x4]
	0x03B1F924 MOV V4.16B, V11.16B
	0x03B1F928 MOV V5.16B, V12.16B
	0x03B1F92C STR S13, [X31]
	0x03B1F930 BL 0x3B1E0BC
	0x03B1F934 MOV V1.16B, V11.16B
	0x03B1F938 LDR V11, [X31 + 0x54]
	0x03B1F93C MOV V10.16B, V0.16B
	0x03B1F940 STP S14, S15, [X31 + 0x4]
	0x03B1F944 STR S13, [X31]
	0x03B1F948 MOV V0.16B, V8.16B
	0x03B1F94C MOV V2.16B, V12.16B
	0x03B1F950 MOV V3.16B, V11.16B
	0x03B1F954 MOV V12.16B, V9.16B
	0x03B1F958 MOV V4.16B, V9.16B
	0x03B1F95C LDR V9, [X31 + 0x50]
	0x03B1F960 MOV V5.16B, V9.16B
	0x03B1F964 BL 0x3B1E0BC
	0x03B1F968 MOV V8.16B, V0.16B
	0x03B1F96C STP S14, S15, [X31 + 0x4]
	0x03B1F970 STR S13, [X31]
	0x03B1F974 MOV V0.16B, V11.16B
	0x03B1F978 MOV V1.16B, V12.16B
	0x03B1F97C MOV V2.16B, V9.16B
	0x03B1F980 LDP S4, S3, [X31 + 0x78]
	0x03B1F984 LDR V5, [X31 + 0x74]
	0x03B1F988 BL 0x3B1E0BC
	0x03B1F98C LDR V1, [X31 + 0x44]
	0x03B1F990 MOV W8, W31
	0x03B1F994 FCMP S1, S10
	0x03B1F998 FCSEL S1, S1, S10, MI
	0x03B1F99C FCMP S1, S8
	0x03B1F9A0 FCSEL S1, S1, S8, MI
	0x03B1F9A4 FCMP S1, S0
	0x03B1F9A8 FCSEL S0, S1, S0, MI
	0x03B1F9AC LDR V1, [X31 + 0x58]
	0x03B1F9B0 FCMP S1, S0
	0x03B1F9B4 B.LE 0x3B1F9C4
	0x03B1F9B8 MOV W9, W24
	0x03B1F9BC STR W24, [X31 + 0x40]
	0x03B1F9C0 STR S0, [X31 + 0x58]
	0x03B1F9C4 SUB X21, X21, 0x1
	0x03B1F9C8 ADD X26, X26, X29
	0x03B1F9CC SUBS X25, X25, 0x1
	0x03B1F9D0 ADD X27, X27, 0x1
	0x03B1F9D4 B.NE 0x3B1F484
	0x03B1F9D8 LDR X8, [X19 + 0x368]
	0x03B1F9DC ADD X24, X24, 0x1
	0x03B1F9E0 CBNZ X8, 0x3B1F3F4
	0x03B1F9E4 BL 0x1C16F20
	0x03B1F9E8 MOV W0, W24
	0x03B1F9EC LDP X20, X19, [X31 + 0x120]
	0x03B1F9F0 LDP X22, X21, [X31 + 0x110]
	0x03B1F9F4 LDP X24, X23, [X31 + 0x100]
	0x03B1F9F8 LDP X26, X25, [X31 + 0xF0]
	0x03B1F9FC LDP X28, X27, [X31 + 0xE0]
	0x03B1FA00 LDP X29, X30, [X31 + 0xD0]
	0x03B1FA04 LDP D9, D8, [X31 + 0xC0]
	0x03B1FA08 LDP D11, D10, [X31 + 0xB0]
	0x03B1FA0C LDP D13, D12, [X31 + 0xA0]
	0x03B1FA10 LDP D15, D14, [X31 + 0x90]
	0x03B1FA14 ADD X31, X31, 0x130
	0x03B1FA18 RET
	0x03B1FA1C LDR W0, [X31 + 0x40]
	0x03B1FA20 B 0x3B1F9EC
	0x03B1FA24 BL 0x1C16F28
	0x03B1FA28 STP D13, D12, [X31 - 0x60]!
	0x03B1FA2C STP D11, D10, [X31 + 0x10]
	0x03B1FA30 STP D9, D8, [X31 + 0x20]
	0x03B1FA34 STR X30, [X31 + 0x30]
	0x03B1FA38 STP X22, X21, [X31 + 0x40]
	0x03B1FA3C STP X20, X19, [X31 + 0x50]
	0x03B1FA40 ADRP X21, 0x8C3000
	0x03B1FA44 LDRB W8, [X21 + 0x717]
	0x03B1FA48 MOV X19, X1
	0x03B1FA4C MOV V8.16B, V5.16B
	0x03B1FA50 MOV V9.16B, V4.16B
	0x03B1FA54 MOV V10.16B, V3.16B
	0x03B1FA58 MOV V12.16B, V2.16B
	0x03B1FA5C MOV V11.16B, V1.16B
	0x03B1FA60 MOV V13.16B, V0.16B
	0x03B1FA64 MOV X20, X0
	0x03B1FA68 TBNZ X8, 0x0, 0x3B1FA80
	0x03B1FA6C ADRP X0, 0x5DB000
	0x03B1FA70 LDR X0, [X0 + 0x4B8]
	0x03B1FA74 BL 0x1C16CF4
	0x03B1FA78 MOVZ W8, 0x1
	0x03B1FA7C STRB W8, [X21 + 0x717]
	0x03B1FA80 ADRP X22, 0x8B9000
	0x03B1FA84 ADRP X21, 0x5DB000
	0x03B1FA88 LDRB W8, [X22 + 0x783]
	0x03B1FA8C LDR X21, [X21 + 0x4B8]
	0x03B1FA90 CBNZ W8, 0x3B1FAA8
	0x03B1FA94 ADRP X0, 0x5D4000
	0x03B1FA98 LDR X0, [X0 + 0x5A0]
	0x03B1FA9C BL 0x1C16CF4
	0x03B1FAA0 MOVZ W8, 0x1
	0x03B1FAA4 STRB W8, [X22 + 0x783]
	0x03B1FAA8 ADRP X8, 0x5D4000
	0x03B1FAAC LDR X8, [X8 + 0x5A0]
	0x03B1FAB0 LDR X8, [X8]
	0x03B1FAB4 LDR X8, [X8 + 0xB8]
	0x03B1FAB8 LDR V0, [X8]
	0x03B1FABC LDR V1, [X8 + 0x8]
	0x03B1FAC0 STR D0, [X19]
	0x03B1FAC4 STR S1, [X19 + 0x8]
	0x03B1FAC8 LDR X8, [X21]
	0x03B1FACC LDUR V2, [X20 + 0xC]
	0x03B1FAD0 LDR V0, [X20]
	0x03B1FAD4 LDR V4, [X20 + 0x14]
	0x03B1FAD8 LDR V1, [X20 + 0x8]
	0x03B1FADC LDR X8, [X8 + 0xB8]
	0x03B1FAE0 FSUB V3.2S, V2.2S, V0.2S
	0x03B1FAE4 FMUL S7, S10, V3.S[0]
	0x03B1FAE8 FSUB S2, S4, S1
	0x03B1FAEC FSUB S4, S0, S13
	0x03B1FAF0 FMUL S16, S9, V3.S[1]
	0x03B1FAF4 FMUL S17, S10, S4
	0x03B1FAF8 FMUL S4, S8, S2
	0x03B1FAFC FADD S7, S7, S16
	0x03B1FB00 MOV S5, V0.S[1]
	0x03B1FB04 FADD S4, S4, S7
	0x03B1FB08 LDR V7, [X8]
	0x03B1FB0C FSUB S5, S5, S11
	0x03B1FB10 FSUB S6, S1, S12
	0x03B1FB14 FMUL S5, S9, S5
	0x03B1FB18 FADD S5, S17, S5
	0x03B1FB1C FMUL S6, S8, S6
	0x03B1FB20 FABS S16, S4
	0x03B1FB24 FCMP S16, S7
	0x03B1FB28 FADD S5, S6, S5
	0x03B1FB2C B.PL 0x3B1FB3C
	0x03B1FB30 FCMP S5, 0x0
	0x03B1FB34 CSET W0, EQ
	0x03B1FB38 B 0x3B1FB7C
	0x03B1FB3C FNEG S5, S5
	0x03B1FB40 FDIV S4, S5, S4
	0x03B1FB44 FMOV S6, 1
	0x03B1FB48 FCMP S4, 0x0
	0x03B1FB4C CSET W8, PL
	0x03B1FB50 FCMP S4, S6
	0x03B1FB54 CSET W9, LE
	0x03B1FB58 AND W0, W8, W9, 0x0
	0x03B1FB5C CMP W0, 0x1
	0x03B1FB60 B.NE 0x3B1FB7C
	0x00000000 INVALID
	0x03B1FB68 FMUL S2, S2, S4
	0x03B1FB6C FADD V0.2S, V0.2S, V3.2S
	0x03B1FB70 FADD S1, S1, S2
	0x03B1FB74 STR D0, [X19]
	0x03B1FB78 STR S1, [X19 + 0x8]
	0x03B1FB7C LDP X20, X19, [X31 + 0x50]
	0x03B1FB80 LDP X22, X21, [X31 + 0x40]
	0x03B1FB84 LDR X30, [X31 + 0x30]
	0x03B1FB88 LDP D9, D8, [X31 + 0x20]
	0x03B1FB8C LDP D11, D10, [X31 + 0x10]
	0x03B1FB90 LDP D13, D12, [X31], #0x60
	0x03B1FB94 RET
	0x03B1FB98 STP X30, X21, [X31 - 0x20]!
	0x03B1FB9C STP X20, X19, [X31 + 0x10]
	0x03B1FBA0 ADRP X20, 0x8C3000
	0x03B1FBA4 ADRP X21, 0x63A000
	0x03B1FBA8 LDRB W8, [X20 + 0x718]
	0x03B1FBAC LDR X21, [X21 + 0xA88]
	0x03B1FBB0 MOV W19, W0
	0x03B1FBB4 TBNZ X8, 0x0, 0x3B1FBCC
	0x03B1FBB8 ADRP X0, 0x63A000
	0x03B1FBBC LDR X0, [X0 + 0xA88]
	0x03B1FBC0 BL 0x1C16CF4
	0x03B1FBC4 MOVZ W8, 0x1
	0x03B1FBC8 STRB W8, [X20 + 0x718]
	0x03B1FBCC LDR X0, [X21]
	0x03B1FBD0 CBZ X0, 0x3B1FC08
	0x03B1FBD4 LDR W8, [X0 + 0x10]
	0x03B1FBD8 SUB W8, W8, 0x1
	0x03B1FBDC CMP W8, W19, UXTH
	0x03B1FBE0 B.GE 0x3B1FBF4
	0x03B1FBE4 MOV W0, W19
	0x03B1FBE8 LDP X20, X19, [X31 + 0x10]
	0x03B1FBEC LDP X30, X21, [X31], #0x20
	0x03B1FBF0 RET
	0x03B1FBF4 AND W1, W19, 0xFFFF
	0x03B1FBF8 LDP X20, X19, [X31 + 0x10]
	0x03B1FBFC MOV X2, X31
	0x03B1FC00 LDP X30, X21, [X31], #0x20
	0x03B1FC04 B 0x3222A1C
	0x03B1FC08 BL 0x1C16F20
	0x03B1FC0C STP X30, X21, [X31 - 0x20]!
	0x03B1FC10 STP X20, X19, [X31 + 0x10]
	0x03B1FC14 ADRP X20, 0x8C3000
	0x03B1FC18 ADRP X21, 0x63A000
	0x03B1FC1C LDRB W8, [X20 + 0x719]
	0x03B1FC20 LDR X21, [X21 + 0xA80]
	0x03B1FC24 MOV W19, W0
	0x03B1FC28 TBNZ X8, 0x0, 0x3B1FC40
	0x03B1FC2C ADRP X0, 0x63A000
	0x03B1FC30 LDR X0, [X0 + 0xA80]
	0x03B1FC34 BL 0x1C16CF4
	0x03B1FC38 MOVZ W8, 0x1
	0x03B1FC3C STRB W8, [X20 + 0x719]
	0x03B1FC40 LDR X0, [X21]
	0x03B1FC44 CBZ X0, 0x3B1FC7C
	0x03B1FC48 LDR W8, [X0 + 0x10]
	0x03B1FC4C SUB W8, W8, 0x1
	0x03B1FC50 CMP W8, W19, UXTH
	0x03B1FC54 B.GE 0x3B1FC68
	0x03B1FC58 MOV W0, W19
	0x03B1FC5C LDP X20, X19, [X31 + 0x10]
	0x03B1FC60 LDP X30, X21, [X31], #0x20
	0x03B1FC64 RET
	0x03B1FC68 AND W1, W19, 0xFFFF
	0x03B1FC6C LDP X20, X19, [X31 + 0x10]
	0x03B1FC70 MOV X2, X31
	0x03B1FC74 LDP X30, X21, [X31], #0x20
	0x03B1FC78 B 0x3222A1C
	0x03B1FC7C BL 0x1C16F20
	0x03B1FC80 STP X30, X21, [X31 - 0x20]!
	0x03B1FC84 STP X20, X19, [X31 + 0x10]
	0x03B1FC88 ADRP X20, 0x8C3000
	0x03B1FC8C ADRP X21, 0x63A000
	0x03B1FC90 LDRB W8, [X20 + 0x71A]
	0x03B1FC94 LDR X21, [X21 + 0xA80]
	0x03B1FC98 MOV W19, W0
	0x03B1FC9C TBNZ X8, 0x0, 0x3B1FCB4
	0x03B1FCA0 ADRP X0, 0x63A000
	0x03B1FCA4 LDR X0, [X0 + 0xA80]
	0x03B1FCA8 BL 0x1C16CF4
	0x03B1FCAC MOVZ W8, 0x1
	0x03B1FCB0 STRB W8, [X20 + 0x71A]
	0x03B1FCB4 LDR X0, [X21]
	0x03B1FCB8 CBZ X0, 0x3B1FCF0
	0x03B1FCBC LDR W8, [X0 + 0x10]
	0x03B1FCC0 MOV W9, W19
	0x03B1FCC4 SUB W8, W8, 0x1
	0x03B1FCC8 CMP X9, W8, SXTW
	0x03B1FCCC B.GT 0x3B1FCE0
	0x03B1FCD0 MOV W1, W19
	0x03B1FCD4 MOV X2, X31
	0x03B1FCD8 BL 0x3222A1C
	0x03B1FCDC AND W19, W0, 0xFFFF
	0x03B1FCE0 MOV W0, W19
	0x03B1FCE4 LDP X20, X19, [X31 + 0x10]
	0x03B1FCE8 LDP X30, X21, [X31], #0x20
	0x03B1FCEC RET
	0x03B1FCF0 BL 0x1C16F20
	0x03B1FCF4 STP X30, X23, [X31 - 0x30]!
	0x03B1FCF8 STP X22, X21, [X31 + 0x10]
	0x03B1FCFC STP X20, X19, [X31 + 0x20]
	0x03B1FD00 ADRP X20, 0x8C3000
	0x03B1FD04 LDRB W8, [X20 + 0x71B]
	0x03B1FD08 MOV X19, X0
	0x03B1FD0C TBNZ X8, 0x0, 0x3B1FD24
	0x03B1FD10 ADRP X0, 0x639000
	0x03B1FD14 LDR X0, [X0 + 0xBB8]
	0x03B1FD18 BL 0x1C16CF4
	0x03B1FD1C MOVZ W8, 0x1
	0x03B1FD20 STRB W8, [X20 + 0x71B]
	0x03B1FD24 CBZ X19, 0x3B1FDAC
	0x03B1FD28 LDR W8, [X19 + 0x10]
	0x03B1FD2C CMP W8, 0x1
	0x03B1FD30 B.LT 0x3B1FD94
	0x03B1FD34 ADRP X23, 0x639000
	0x03B1FD38 LDR X23, [X23 + 0xBB8]
	0x03B1FD3C MOV W21, W31
	0x03B1FD40 MOV W20, W31
	0x03B1FD44 MOV X0, X19
	0x03B1FD48 MOV W1, W21
	0x03B1FD4C MOV X2, X31
	0x03B1FD50 BL 0x3222A1C
	0x03B1FD54 LDR X8, [X23]
	0x03B1FD58 MOV W22, W0
	0x03B1FD5C LDR W9, [X8 + 0xE0]
	0x03B1FD60 CBNZ W9, 0x3B1FD6C
	0x03B1FD64 MOV X0, X8
	0x03B1FD68 BL 0x1C16DFC
	0x03B1FD6C MOV W0, W22
	0x03B1FD70 BL 0x3B1FC0C
	0x03B1FD74 LDR W8, [X19 + 0x10]
	0x03B1FD78 ADD W9, W20, W20, 0x5, LSL
	0x03B1FD7C AND W10, W0, 0xFFFF
	0x03B1FD80 ADD W21, W21, 0x1
	0x03B1FD84 CMP W21, W8
	0x03B1FD88 EOR W20, W9, W10, 0x0
	0x03B1FD8C B.LT 0x3B1FD44
	0x03B1FD90 B 0x3B1FD98
	0x03B1FD94 MOV W20, W31
	0x03B1FD98 MOV W0, W20
	0x03B1FD9C LDP X20, X19, [X31 + 0x20]
	0x03B1FDA0 LDP X22, X21, [X31 + 0x10]
	0x03B1FDA4 LDP X30, X23, [X31], #0x30
	0x03B1FDA8 RET
	0x03B1FDAC BL 0x1C16F20
	0x03B1FDB0 STP X30, X23, [X31 - 0x30]!
	0x03B1FDB4 STP X22, X21, [X31 + 0x10]
	0x03B1FDB8 STP X20, X19, [X31 + 0x20]
	0x03B1FDBC ADRP X20, 0x8C3000
	0x03B1FDC0 LDRB W8, [X20 + 0x71C]
	0x03B1FDC4 MOV X19, X0
	0x03B1FDC8 TBNZ X8, 0x0, 0x3B1FDE0
	0x03B1FDCC ADRP X0, 0x639000
	0x03B1FDD0 LDR X0, [X0 + 0xBB8]
	0x03B1FDD4 BL 0x1C16CF4
	0x03B1FDD8 MOVZ W8, 0x1
	0x03B1FDDC STRB W8, [X20 + 0x71C]
	0x03B1FDE0 CBZ X19, 0x3B1FE68
	0x03B1FDE4 LDR W8, [X19 + 0x10]
	0x03B1FDE8 CMP W8, 0x1
	0x03B1FDEC B.LT 0x3B1FE50
	0x03B1FDF0 ADRP X23, 0x639000
	0x03B1FDF4 LDR X23, [X23 + 0xBB8]
	0x03B1FDF8 MOV W21, W31
	0x03B1FDFC MOVZ W20, 0x1505
	0x03B1FE00 MOV X0, X19
	0x03B1FE04 MOV W1, W21
	0x03B1FE08 MOV X2, X31
	0x03B1FE0C BL 0x3222A1C
	0x03B1FE10 LDR X8, [X23]
	0x03B1FE14 MOV W22, W0
	0x03B1FE18 LDR W9, [X8 + 0xE0]
	0x03B1FE1C CBNZ W9, 0x3B1FE28
	0x03B1FE20 MOV X0, X8
	0x03B1FE24 BL 0x1C16DFC
	0x03B1FE28 MOV W0, W22
	0x03B1FE2C BL 0x3B1FB98
	0x03B1FE30 LDR W8, [X19 + 0x10]
	0x03B1FE34 ADD W9, W20, W20, 0x5, LSL
	0x03B1FE38 AND W10, W0, 0xFFFF
	0x03B1FE3C ADD W21, W21, 0x1
	0x03B1FE40 CMP W21, W8
	0x03B1FE44 EOR W20, W9, W10, 0x0
	0x03B1FE48 B.LT 0x3B1FE00
	0x03B1FE4C B 0x3B1FE54
	0x03B1FE50 MOVZ W20, 0x1505
	0x03B1FE54 MOV W0, W20
	0x03B1FE58 LDP X20, X19, [X31 + 0x20]
	0x03B1FE5C LDP X22, X21, [X31 + 0x10]
	0x03B1FE60 LDP X30, X23, [X31], #0x30
	0x03B1FE64 RET
	0x03B1FE68 BL 0x1C16F20
	0x03B1FE6C SUB W8, W0, 0x30
	0x03B1FE70 AND W9, W8, 0xFFFF
	0x03B1FE74 CMP W9, 0x36
	0x03B1FE78 B.HI 0x3B1FE90

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move X20, 0x8C4000
	023 Move W8, [X20+1810]
	024 Move X21, X1
	025 Move V8, V1
	026 Move V9, V0
	027 Move X19, X0
	028 Move [X31+128], S0
	029 Move [X31+136], S1
	030 Move [X31+136], S2
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x63A000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1810], W8
	040 Compare X19, 0
	041 JumpIfEqual {422}
	042 Move X20, 0x63A000
	043 Move X20, [X20+3000]
	044 Move X0, X19
	045 Move X1, X31
	046 Call TMP_Text.get_rectTransform, X0
	047 Move X8, [X20]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Add X2, X31, 128
	055 Move X0, X20
	056 Move V0, V9
	057 Move V1, V8
	058 Move X1, X21
	059 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	060 Move X8, [X19+872]
	061 Compare X8, 0
	062 JumpIfEqual {422}
	063 Move V1, [X31+128]
	064 Move V0, [X31+132]
	065 Move X24, X31
	066 Move W9, 0x7F800000
	067 Move W28, 376
	068 Move [X31+104], S0
	069 Move [X31+112], S1
	070 Move V0, [X31+136]
	071 Move X29, 1
	072 Move [X31+56], W31
	073 Move [X31+92], W9
	074 Move [X31+100], S0
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X8+64]
	078 Compare X8, 0
	079 JumpIfEqual {422}
	080 Move W9, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W9, 24
	083 NotImplemented "Instruction MADD not yet implemented."
	084 Move X9, 0x8BA000
	085 Move W9, [X9+1923]
	086 Move W27, [X8+40]
	087 Move W22, [X8+48]
	088 Compare W9, 0
	089 JumpIfNotEqual {96}
	090 Move X0, 0x5D5000
	091 Move X0, [X0+1440]
	092 Call 0x1C17CF4
	093 Move X8, 0x8BA000
	094 Move W9, 1
	095 Move [X8+1923], W9
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X9, 0x5D5000
	098 Move X9, [X9+1440]
	099 Move W8, W31
	100 Subtract W21, W22, 1
	101 Move X26, X27
	102 ShiftRight X26, 32
	103 And X26, X26, 0x7FFFFFFF
	104 Move X9, [X9]
	105 Move X25, X22
	106 Move X9, [X9+184]
	107 Move S1, [X9]
	108 Move S0, [X9+4]
	109 Move V15, [X9+8]
	110 Move V10, V0
	111 Move [X31+120], S1
	112 Move [X31+128], S1
	113 Move [X31+112], S15
	114 Move [X31+120], S0
	115 Move X9, [X19+872]
	116 Compare X9, 0
	117 JumpIfEqual {422}
	118 Move X9, [X9+56]
	119 Compare X9, 0
	120 JumpIfEqual {422}
	121 Move W10, [X9+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction SBFM not yet implemented."
	124 NotImplemented "Instruction MADD not yet implemented."
	125 Move W10, [X9+404]
	126 Move W23, [X9+100]
	127 Move V12, [X9+296]
	128 Move V11, [X9+328]
	129 Move V14, [X9+336]
	130 NotImplemented "Instruction BIC not yet implemented."
	131 Move TEMP, X10
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {256}
	135 Compare X20, 0
	136 JumpIfEqual {422}
	137 Move V8, [X9+284]
	138 Move S2, W31
	139 Move X0, X20
	140 Move V1, V14
	141 Move V0, V8
	142 Move X1, X31
	143 Call Transform.TransformPoint, X0, X1
	144 Move [X31+124], S0
	145 Move V10, V1
	146 Move V15, V2
	147 Move S2, W31
	148 Move X0, X20
	149 Move V0, V8
	150 Move V1, V11
	151 Move X1, X31
	152 Call Transform.TransformPoint, X0, X1
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X31+116], S1
	155 Move [X31+124], S0
	156 Move [X31+112], S2
	157 Move S2, W31
	158 Move X0, X20
	159 Move V0, V12
	160 Move V1, V14
	161 Move X1, X31
	162 Call Transform.TransformPoint, X0, X1
	163 Move V8, V0
	164 Move V13, V1
	165 Move V9, V2
	166 Move S2, W31
	167 Move X0, X20
	168 Move V0, V12
	169 Move V1, V11
	170 Move X1, X31
	171 Call Transform.TransformPoint, X0, X1
	172 Move X8, 0x63A000
	173 Move X8, [X8+3000]
	174 Move V11, V0
	175 Move V12, V1
	176 Move V14, V2
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move V1, [X31+112]
	183 Move V0, [X31+116]
	184 Move V2, [X31+100]
	185 Move V4, V10
	186 Move V5, V15
	187 Move [X31+4], S0
	188 Move [X31+12], S1
	189 Move S0, [X31+120]
	190 Move S3, [X31+124]
	191 Move [X31+20], S12
	192 Move [X31+28], S14
	193 Move [X31+16], S11
	194 Move [X31], S0
	195 Move S1, [X31+104]
	196 Move S0, [X31+108]
	197 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	198 Move TEMP, X0
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {423}
	202 Move [X31+68], S14
	203 Move [X31+76], S12
	204 Move [X31+76], S11
	205 Move [X31+84], S9
	206 Move [X31+84], S13
	207 Move [X31+92], S8
	208 Move X8, 0x63A000
	209 Move X8, [X8+3000]
	210 Move V11, V15
	211 Move X0, [X8]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move S12, [X31+120]
	217 Move S0, [X31+124]
	218 Move V8, V10
	219 Move V1, V10
	220 Move V2, V11
	221 Move [X31+96], S11
	222 Move S11, [X31+112]
	223 Move S10, [X31+116]
	224 Move S14, [X31+104]
	225 Move S13, [X31+108]
	226 Move V15, [X31+100]
	227 Move V3, V12
	228 Move V4, V10
	229 Move V5, V11
	230 Move [X31], S13
	231 Move [X31+8], S14
	232 Move [X31+8], S15
	233 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	234 Move [X31+64], S0
	235 Move V0, V12
	236 Move V2, V11
	237 Move S11, [X31+72]
	238 Move S9, [X31+76]
	239 Move V12, [X31+68]
	240 Move V1, V10
	241 Move [X31+4], S14
	242 Move [X31+12], S15
	243 Move V3, V9
	244 Move V4, V11
	245 Move V5, V12
	246 Move [X31], S13
	247 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	248 Move V10, V8
	249 Move [X31+60], S0
	250 Move V0, V9
	251 Move V1, V11
	252 Move V2, V12
	253 Move [X31+4], S14
	254 Move [X31+12], S15
	255 Move [X31], S13
	256 Move TEMP, X8
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {413}
	260 Compare X21, 0
	261 JumpIfNotEqual {264}
	262 Compare X21, 0
	263 JumpIfEqual {281}
	264 Move X8, [X19+872]
	265 Compare X8, 0
	266 JumpIfEqual {422}
	267 Move X8, [X8+56]
	268 Compare X8, 0
	269 JumpIfEqual {422}
	270 Move W9, [X8+24]
	271 Add X10, X27, 1
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Add X9, X26, X29
	274 NotImplemented "Instruction SBFM not yet implemented."
	275 NotImplemented "Instruction MADD not yet implemented."
	276 Move W8, [X8+100]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move W8, 1
	279 Compare X20, 0
	280 JumpIfEqual {422}
	281 Move S2, W31
	282 Move X0, X20
	283 Move V0, V12
	284 Move V1, V14
	285 Move X1, X31
	286 Call Transform.TransformPoint, X0, X1
	287 Move V8, V0
	288 Move V9, V1
	289 Move V13, V2
	290 Move S2, W31
	291 Move X0, X20
	292 Move V0, V12
	293 Move V1, V11
	294 Move X1, X31
	295 Call Transform.TransformPoint, X0, X1
	296 Move X8, 0x63A000
	297 Move X8, [X8+3000]
	298 Move V11, V0
	299 Move V12, V1
	300 Move V14, V2
	301 Move X0, [X8]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Move V1, [X31+112]
	307 Move V0, [X31+116]
	308 Move V2, [X31+100]
	309 Move V4, V10
	310 Move V5, V15
	311 Move [X31+4], S0
	312 Move [X31+12], S1
	313 Move S0, [X31+120]
	314 Move S3, [X31+124]
	315 Move [X31+20], S12
	316 Move [X31+28], S14
	317 Move [X31+16], S11
	318 Move [X31], S0
	319 Move S1, [X31+104]
	320 Move S0, [X31+108]
	321 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfEqual {423}
	326 Move [X31+68], S14
	327 Move [X31+76], S12
	328 Move [X31+76], S11
	329 Move [X31+84], S13
	330 Move [X31+84], S9
	331 Move [X31+92], S8
	332 Move X8, 0x63A000
	333 Move X8, [X8+3000]
	334 Move V11, V15
	335 Move X0, [X8]
	336 Move W8, [X0+224]
	337 Compare W8, 0
	338 JumpIfNotEqual {340}
	339 Call 0x1C17DFC
	340 Move S12, [X31+120]
	341 Move S0, [X31+124]
	342 Move V2, V11
	343 Move [X31+96], S11
	344 Move S11, [X31+112]
	345 Move S8, [X31+116]
	346 Move S14, [X31+104]
	347 Move S13, [X31+108]
	348 Move V15, [X31+100]
	349 Move V1, V10
	350 Move V3, V12
	351 Move V4, V8
	352 Move V5, V11
	353 Move [X31], S13
	354 Move [X31+8], S14
	355 Move [X31+8], S15
	356 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	357 Move V1, V8
	358 Move V2, V11
	359 Move S9, [X31+72]
	360 Move S8, [X31+76]
	361 Move V11, [X31+68]
	362 Move [X31+64], S0
	363 Move V0, V12
	364 Move V3, V8
	365 Move V4, V9
	366 Move V5, V11
	367 Move [X31+4], S14
	368 Move [X31+12], S15
	369 Move [X31], S13
	370 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	371 Move [X31+60], S0
	372 Move [X31+4], S14
	373 Move [X31+12], S15
	374 Move [X31], S13
	375 Move V0, V8
	376 Move V1, V9
	377 Move V2, V11
	378 Move S9, [X31+84]
	379 Move S11, [X31+88]
	380 Move V12, [X31+80]
	381 Move V3, V11
	382 Move V4, V9
	383 Move V5, V12
	384 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	385 Move [X31+4], S14
	386 Move [X31+12], S15
	387 Move V15, [X31+96]
	388 Move V3, [X31+124]
	389 Move V8, V0
	390 Move V0, V11
	391 Move V1, V9
	392 Move V2, V12
	393 Move V4, V10
	394 Move V5, V15
	395 Move [X31], S13
	396 Move V14, V10
	397 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	398 Move S2, [X31+60]
	399 Move S1, [X31+64]
	400 Move W8, W31
	401 NotImplemented "Instruction FCMP not yet implemented."
	402 NotImplemented "Instruction FCSEL not yet implemented."
	403 NotImplemented "Instruction FCMP not yet implemented."
	404 NotImplemented "Instruction FCSEL not yet implemented."
	405 NotImplemented "Instruction FCMP not yet implemented."
	406 NotImplemented "Instruction FCSEL not yet implemented."
	407 Move V1, [X31+92]
	408 NotImplemented "Instruction FCMP not yet implemented."
	409 Move W9, W24
	410 Move [X31+56], W24
	411 Move [X31+92], S0
	412 Move V10, V14
	413 Move W8, W31
	414 Subtract X21, X21, 1
	415 Add X26, X26, X29
	416 Subtract X25, X25, 1
	417 Add X27, X27, 1
	418 Move X8, [X19+872]
	419 Add X24, X24, 1
	420 Compare X8, 0
	421 JumpIfNotEqual {75}
	422 Call 0x1C17F20
	423 Move W0, W24
	424 Move X20, [X31+288]
	425 Move X19, [X31+296]
	426 Move X22, [X31+272]
	427 Move X21, [X31+280]
	428 Move X24, [X31+256]
	429 Move X23, [X31+264]
	430 Move X26, [X31+240]
	431 Move X25, [X31+248]
	432 Move X28, [X31+224]
	433 Move X27, [X31+232]
	434 Move X29, [X31+208]
	435 Move X30, [X31+216]
	436 Move D9, [X31+192]
	437 Move D8, [X31+200]
	438 Move D11, [X31+176]
	439 Move D10, [X31+184]
	440 Move D13, [X31+160]
	441 Move D12, [X31+168]
	442 Move D15, [X31+144]
	443 Move D14, [X31+152]
	444 Add X31, X31, 304
	445 Return X0
	446 Move W0, [X31+56]
	447 Call 0x1C17F28

Method: System.Int32 FindIntersectingLine(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B1FE7C ADRP X9, 0xFFFFFFFFFD078000
	0x03B1FE80 SXTH X8, W8
	0x03B1FE84 ADD X9, X9, 0xCA0
	0x03B1FE88 LDR W0, [X9, X8, LSL #2]
	0x03B1FE8C RET
	0x03B1FE90 MOVZ W0, 0xF
	0x03B1FE94 RET
	0x03B1FE98 STR D8, [X31 - 0x60]!
	0x03B1FE9C STP X30, X27, [X31 + 0x10]
	0x03B1FEA0 STP X26, X25, [X31 + 0x20]
	0x03B1FEA4 STP X24, X23, [X31 + 0x30]
	0x03B1FEA8 STP X22, X21, [X31 + 0x40]
	0x03B1FEAC STP X20, X19, [X31 + 0x50]
	0x03B1FEB0 ADRP X20, 0x8C3000
	0x03B1FEB4 LDRB W8, [X20 + 0x71D]
	0x03B1FEB8 MOV X19, X0
	0x03B1FEBC TBNZ X8, 0x0, 0x3B1FED4
	0x03B1FEC0 ADRP X0, 0x639000
	0x03B1FEC4 LDR X0, [X0 + 0xBB8]
	0x03B1FEC8 BL 0x1C16CF4
	0x03B1FECC MOVZ W8, 0x1
	0x03B1FED0 STRB W8, [X20 + 0x71D]
	0x03B1FED4 CBZ X19, 0x3B1FF98
	0x03B1FED8 LDR W8, [X19 + 0x10]
	0x03B1FEDC CMP W8, 0x1
	0x03B1FEE0 B.LT 0x3B1FF74
	0x03B1FEE4 ADRP X23, 0x639000
	0x03B1FEE8 LDR X23, [X23 + 0xBB8]
	0x03B1FEEC MOV W21, W31
	0x03B1FEF0 MOV W20, W31
	0x03B1FEF4 MOVN W24, 0x0
	0x03B1FEF8 FMOV S8, 4
	0x03B1FEFC MOVZ W25, 0x7F800000
	0x03B1FF00 MOVZ W26, 0x80000000
	0x03B1FF04 MOV X0, X19
	0x03B1FF08 MOV W1, W21
	0x03B1FF0C MOV X2, X31
	0x03B1FF10 BL 0x3222A1C
	0x03B1FF14 LDR X8, [X23]
	0x03B1FF18 MOV W22, W0
	0x03B1FF1C LDR W9, [X8 + 0xE0]
	0x03B1FF20 CBNZ W9, 0x3B1FF2C
	0x03B1FF24 MOV X0, X8
	0x03B1FF28 BL 0x1C16DFC
	0x03B1FF2C MOV W0, W22
	0x03B1FF30 BL 0x3B1FE6C
	0x03B1FF34 LDR W27, [X19 + 0x10]
	0x03B1FF38 MOV W22, W0
	0x03B1FF3C ADD W8, W24, W27
	0x03B1FF40 SCVTF S0, W8
	0x03B1FF44 FMUL S0, S0, S8
	0x03B1FF48 BL 0x3EB1B90
	0x03B1FF4C FMOV S1, W25
	0x03B1FF50 FCVTZS W8, S0
	0x03B1FF54 FCMP S0, S1
	0x03B1FF58 ADD W21, W21, 0x1
	0x03B1FF5C CSEL W8, W26, W8, EQ
	0x03B1FF60 CMP W21, W27
	0x03B1FF64 MADD W20, W8, W22, W20
	0x03B1FF68 SUB W24, W24, 0x1
	0x03B1FF6C B.LT 0x3B1FF04
	0x03B1FF70 B 0x3B1FF78
	0x03B1FF74 MOV W20, W31
	0x03B1FF78 MOV W0, W20
	0x03B1FF7C LDP X20, X19, [X31 + 0x50]
	0x03B1FF80 LDP X22, X21, [X31 + 0x40]
	0x03B1FF84 LDP X24, X23, [X31 + 0x30]
	0x03B1FF88 LDP X26, X25, [X31 + 0x20]
	0x03B1FF8C LDP X30, X27, [X31 + 0x10]
	0x03B1FF90 LDR V8, [X31], #0x60
	0x03B1FF94 RET
	0x03B1FF98 BL 0x1C16F20
	0x03B1FF9C STP X30, X21, [X31 - 0x20]!
	0x03B1FFA0 STP X20, X19, [X31 + 0x10]
	0x03B1FFA4 ADRP X20, 0x8C3000
	0x03B1FFA8 ADRP X21, 0x5D6000
	0x03B1FFAC ADRP X19, 0x639000
	0x03B1FFB0 LDRB W8, [X20 + 0x71E]
	0x03B1FFB4 LDR X21, [X21 + 0x9B0]
	0x03B1FFB8 LDR X19, [X19 + 0xBB8]
	0x03B1FFBC TBNZ X8, 0x0, 0x3B1FFE0
	0x03B1FFC0 ADRP X0, 0x639000
	0x03B1FFC4 LDR X0, [X0 + 0xBB8]
	0x03B1FFC8 BL 0x1C16CF4
	0x03B1FFCC ADRP X0, 0x5D6000
	0x03B1FFD0 LDR X0, [X0 + 0x9B0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D10
	003 Move [X31+24], D9
	004 Move [X31+32], D8
	005 Move [X31+40], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x8C4000
	011 Move W8, [X20+1811]
	012 Move X21, X1
	013 Move V8, V1
	014 Move V9, V0
	015 Move X19, X0
	016 Move [X31], S0
	017 Move [X31+8], S1
	018 Move [X31+8], S2
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x63A000
	024 Move X0, [X0+3000]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1811], W8
	028 Compare X19, 0
	029 JumpIfEqual {85}
	030 Move X20, 0x63A000
	031 Move X20, [X20+3000]
	032 Move X0, X19
	033 Move X1, X31
	034 Call TMP_Text.get_rectTransform, X0
	035 Move X8, [X20]
	036 Move X20, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Add X2, X31, 0
	043 Move X0, X20
	044 Move V0, V9
	045 Move V1, V8
	046 Move X1, X21
	047 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	048 Move X8, [X19+872]
	049 Compare X8, 0
	050 JumpIfEqual {85}
	051 Move V10, [X31+4]
	052 Move X22, X31
	053 Move X21, X31
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X8+80]
	057 Compare X8, 0
	058 JumpIfEqual {85}
	059 Move W9, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Compare X20, 0
	062 JumpIfEqual {85}
	063 Add X8, X8, X22
	064 Move V1, [X8+76]
	065 Move V8, [X8+84]
	066 Move S0, W31
	067 Move S2, W31
	068 Move X0, X20
	069 Move X1, X31
	070 Call Transform.TransformPoint, X0, X1
	071 Move V9, V1
	072 Move S0, W31
	073 Move S2, W31
	074 Move X0, X20
	075 Move V1, V8
	076 Move X1, X31
	077 Call Transform.TransformPoint, X0, X1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move X8, [X19+872]
	081 Add X21, X21, 1
	082 Add X22, X22, 92
	083 Compare X8, 0
	084 JumpIfNotEqual {54}
	085 Call 0x1C17F20
	086 Move TEMP, 0
	087 Not TEMP
	088 Move W21, TEMP
	089 Move W0, W21
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X30, [X31+40]
	095 Move D9, [X31+24]
	096 Move D8, [X31+32]
	097 Move V10, [X31+16]
	098 Add X31, X31, 80
	099 Return X0
	100 Call 0x1C17F28

Method: System.Int32 FindIntersectingLink(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B1FFD4 BL 0x1C16CF4
	0x03B1FFD8 MOVZ W8, 0x1
	0x03B1FFDC STRB W8, [X20 + 0x71E]
	0x03B1FFE0 LDR X0, [X21]
	0x03B1FFE4 MOVZ W1, 0x4
	0x03B1FFE8 BL 0x1C16D6C
	0x03B1FFEC LDR X8, [X19]
	0x03B1FFF0 LDP X20, X19, [X31 + 0x10]
	0x03B1FFF4 LDR X8, [X8 + 0xB8]
	0x03B1FFF8 STR X0, [X8]
	0x03B1FFFC LDP X30, X21, [X31], #0x20
	0x03B20000 RET
	0x03B20004 STP S0, S1, [X0]
	0x03B20008 STP S2, S3, [X0 + 0x8]
	0x03B2000C STP S4, S5, [X0 + 0x10]
	0x03B20010 RET
	0x03B20014 STR X30, [X31 - 0x20]!
	0x03B20018 STP X20, X19, [X31 + 0x10]
	0x03B2001C ADRP X19, 0x8C2000
	0x03B20020 ADRP X20, 0x638000
	0x03B20024 LDRB W8, [X19 + 0x71F]
	0x03B20028 LDR X20, [X20 + 0x568]
	0x03B2002C TBNZ X8, 0x0, 0x3B20044
	0x03B20030 ADRP X0, 0x638000
	0x03B20034 LDR X0, [X0 + 0x568]
	0x03B20038 BL 0x1C16CF4
	0x03B2003C MOVZ W8, 0x1
	0x03B20040 STRB W8, [X19 + 0x71F]
	0x03B20044 LDR X0, [X20]
	0x03B20048 LDR W8, [X0 + 0xE0]
	0x03B2004C CBNZ W8, 0x3B20058
	0x03B20050 BL 0x1C16DFC
	0x03B20054 LDR X0, [X20]
	0x03B20058 LDR X8, [X0 + 0xB8]
	0x03B2005C LDR X8, [X8]
	0x03B20060 CBNZ X8, 0x3B20090
	0x03B20064 BL 0x1C16F10
	0x03B20068 MOV X19, X0
	0x03B2006C BL 0x3B200B4
	0x03B20070 LDR X0, [X20]
	0x03B20074 LDR W8, [X0 + 0xE0]
	0x03B20078 CBNZ W8, 0x3B20084
	0x03B2007C BL 0x1C16DFC
	0x03B20080 LDR X0, [X20]
	0x03B20084 LDR X8, [X0 + 0xB8]
	0x03B20088 STR X19, [X8]
	0x03B2008C LDR X0, [X20]
	0x03B20090 LDR W8, [X0 + 0xE0]
	0x03B20094 CBNZ W8, 0x3B200A0
	0x03B20098 BL 0x1C16DFC
	0x03B2009C LDR X0, [X20]
	0x03B200A0 LDR X8, [X0 + 0xB8]
	0x03B200A4 LDP X20, X19, [X31 + 0x10]
	0x03B200A8 LDR X0, [X8]
	0x03B200AC LDR X30, [X31], #0x20
	0x03B200B0 RET
	0x03B200B4 STR X30, [X31 - 0x50]!
	0x03B200B8 STP X26, X25, [X31 + 0x10]
	0x03B200BC STP X24, X23, [X31 + 0x20]
	0x03B200C0 STP X22, X21, [X31 + 0x30]
	0x03B200C4 STP X20, X19, [X31 + 0x40]
	0x03B200C8 ADRP X20, 0x8C2000
	0x03B200CC ADRP X26, 0x5D4000
	0x03B200D0 ADRP X25, 0x5DA000
	0x03B200D4 ADRP X24, 0x639000
	0x03B200D8 ADRP X23, 0x639000
	0x03B200DC ADRP X22, 0x639000
	0x03B200E0 ADRP X21, 0x639000
	0x03B200E4 LDR X26, [X26 + 0xE08]
	0x03B200E8 LDRB W8, [X20 + 0x720]
	0x03B200EC LDR X25, [X25 + 0x688]
	0x03B200F0 LDR X24, [X24 + 0xA90]
	0x03B200F4 LDR X23, [X23 + 0xA98]
	0x03B200F8 LDR X22, [X22 + 0x430]
	0x03B200FC LDR X21, [X21 + 0xAA0]
	0x03B20100 MOV X19, X0
	0x03B20104 TBNZ X8, 0x0, 0x3B20158
	0x03B20108 ADRP X0, 0x5DA000
	0x03B2010C LDR X0, [X0 + 0x688]
	0x03B20110 BL 0x1C16CF4
	0x03B20114 ADRP X0, 0x5D4000
	0x03B20118 LDR X0, [X0 + 0xE08]
	0x03B2011C BL 0x1C16CF4
	0x03B20120 ADRP X0, 0x639000
	0x03B20124 LDR X0, [X0 + 0xA98]
	0x03B20128 BL 0x1C16CF4
	0x03B2012C ADRP X0, 0x639000
	0x03B20130 LDR X0, [X0 + 0xA90]
	0x03B20134 BL 0x1C16CF4
	0x03B20138 ADRP X0, 0x639000
	0x03B2013C LDR X0, [X0 + 0xAA0]
	0x03B20140 BL 0x1C16CF4
	0x03B20144 ADRP X0, 0x639000
	0x03B20148 LDR X0, [X0 + 0x430]
	0x03B2014C BL 0x1C16CF4
	0x03B20150 MOVZ W8, 0x1
	0x03B20154 STRB W8, [X20 + 0x720]
	0x03B20158 LDR X0, [X26]
	0x03B2015C BL 0x1C16F10
	0x03B20160 LDR X1, [X25]
	0x03B20164 MOV X20, X0
	0x03B20168 BL 0x2DA9EF4
	0x03B2016C STR X20, [X19 + 0x10]
	0x03B20170 LDR X0, [X24]
	0x03B20174 BL 0x1C16F10
	0x03B20178 LDR X1, [X23]
	0x03B2017C MOV X20, X0
	0x03B20180 BL 0x301B7C4
	0x03B20184 STR X20, [X19 + 0x18]
	0x03B20188 LDR X0, [X26]
	0x03B2018C BL 0x1C16F10
	0x03B20190 LDR X1, [X25]
	0x03B20194 MOV X20, X0
	0x03B20198 BL 0x2DA9EF4
	0x03B2019C STR X20, [X19 + 0x20]
	0x03B201A0 LDR X0, [X24]
	0x03B201A4 BL 0x1C16F10
	0x03B201A8 LDR X1, [X23]
	0x03B201AC MOV X20, X0
	0x03B201B0 BL 0x301B7C4
	0x03B201B4 STR X20, [X19 + 0x28]
	0x03B201B8 LDR X0, [X26]
	0x03B201BC BL 0x1C16F10
	0x03B201C0 LDR X1, [X25]
	0x03B201C4 MOV X20, X0
	0x03B201C8 BL 0x2DA9EF4
	0x03B201CC STR X20, [X19 + 0x30]
	0x03B201D0 LDR X0, [X24]
	0x03B201D4 BL 0x1C16F10
	0x03B201D8 LDR X1, [X23]
	0x03B201DC MOV X20, X0
	0x03B201E0 BL 0x301B7C4
	0x03B201E4 STR X20, [X19 + 0x38]
	0x03B201E8 LDR X0, [X26]
	0x03B201EC BL 0x1C16F10
	0x03B201F0 LDR X1, [X25]
	0x03B201F4 MOV X20, X0
	0x03B201F8 BL 0x2DA9EF4
	0x03B201FC STR X20, [X19 + 0x40]
	0x03B20200 LDR X0, [X24]
	0x03B20204 BL 0x1C16F10
	0x03B20208 LDR X1, [X23]
	0x03B2020C MOV X20, X0
	0x03B20210 BL 0x301B7C4
	0x03B20214 MOV X0, X19
	0x03B20218 MOV X1, X31
	0x03B2021C STR X20, [X19 + 0x48]
	0x03B20220 BL 0x33BDD8C
	0x03B20224 LDR X0, [X22]
	0x03B20228 BL 0x1C16F10
	0x03B2022C LDR X2, [X21]
	0x03B20230 MOV X1, X19
	0x03B20234 MOV X3, X31
	0x03B20238 MOV X20, X0
	0x03B2023C BL 0x3E251A8
	0x03B20240 MOV X0, X20
	0x03B20244 LDP X20, X19, [X31 + 0x40]
	0x03B20248 LDP X22, X21, [X31 + 0x30]
	0x03B2024C LDP X24, X23, [X31 + 0x20]
	0x03B20250 LDP X26, X25, [X31 + 0x10]
	0x03B20254 MOV X1, X31
	0x03B20258 LDR X30, [X31], #0x50
	0x03B2025C B 0x3E24344
	0x03B20260 STP X30, X21, [X31 - 0x20]!
	0x03B20264 STP X20, X19, [X31 + 0x10]
	0x03B20268 ADRP X20, 0x8C2000
	0x03B2026C ADRP X21, 0x638000
	0x03B20270 LDRB W8, [X20 + 0x721]
	0x03B20274 LDR X21, [X21 + 0x568]
	0x03B20278 MOV X19, X0
	0x03B2027C TBNZ X8, 0x0, 0x3B20294
	0x03B20280 ADRP X0, 0x638000
	0x03B20284 LDR X0, [X0 + 0x568]
	0x03B20288 BL 0x1C16CF4
	0x03B2028C MOVZ W8, 0x1
	0x03B20290 STRB W8, [X20 + 0x721]
	0x03B20294 LDR X0, [X21]
	0x03B20298 LDR W8, [X0 + 0xE0]
	0x03B2029C CBNZ W8, 0x3B202A4
	0x03B202A0 BL 0x1C16DFC
	0x03B202A4 BL 0x3B20014
	0x03B202A8 CBZ X0, 0x3B202BC
	0x03B202AC MOV X1, X19
	0x03B202B0 LDP X20, X19, [X31 + 0x10]
	0x03B202B4 LDP X30, X21, [X31], #0x20
	0x03B202B8 B 0x3B202C0
	0x03B202BC BL 0x1C16F20
	0x03B202C0 STP X30, X21, [X31 - 0x20]!
	0x03B202C4 STP X20, X19, [X31 + 0x10]
	0x03B202C8 ADRP X21, 0x8C2000
	0x03B202CC LDRB W8, [X21 + 0x722]
	0x03B202D0 MOV X19, X1
	0x03B202D4 MOV X20, X0
	0x03B202D8 TBNZ X8, 0x0, 0x3B20308
	0x03B202DC ADRP X0, 0x5D5000
	0x03B202E0 LDR X0, [X0 + 0x9D8]
	0x03B202E4 BL 0x1C16CF4
	0x03B202E8 ADRP X0, 0x5D4000
	0x03B202EC LDR X0, [X0 + 0xDF8]
	0x03B202F0 BL 0x1C16CF4
	0x03B202F4 ADRP X0, 0x639000
	0x03B202F8 LDR X0, [X0 + 0xAA8]
	0x03B202FC BL 0x1C16CF4
	0x03B20300 MOVZ W8, 0x1
	0x03B20304 STRB W8, [X21 + 0x722]
	0x03B20308 CBZ X19, 0x3B203CC
	0x03B2030C MOV X0, X19
	0x03B20310 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D15
	003 Move [X31+88], D14
	004 Move [X31+96], D13
	005 Move [X31+104], D12
	006 Move [X31+112], D11
	007 Move [X31+120], D10
	008 Move [X31+128], D9
	009 Move [X31+136], D8
	010 Move [X31+144], X29
	011 Move [X31+152], X30
	012 Move [X31+160], X28
	013 Move [X31+168], X27
	014 Move [X31+176], X26
	015 Move [X31+184], X25
	016 Move [X31+192], X24
	017 Move [X31+200], X23
	018 Move [X31+208], X22
	019 Move [X31+216], X21
	020 Move [X31+224], X20
	021 Move [X31+232], X19
	022 Move X20, 0x8C3000
	023 Move W8, [X20+1812]
	024 Move X21, X1
	025 Move V8, V1
	026 Move V9, V0
	027 Move X19, X0
	028 Move [X31+64], S0
	029 Move [X31+72], S1
	030 Move [X31+72], S2
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x639000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1812], W8
	040 Compare X19, 0
	041 JumpIfEqual {227}
	042 Move X20, 0x639000
	043 Move X20, [X20+3000]
	044 Move X0, X19
	045 Move X1, X31
	046 Call TMP_Text.get_transform, X0
	047 Move X8, [X20]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Add X2, X31, 64
	055 Move X0, X20
	056 Move V0, V9
	057 Move V1, V8
	058 Move X1, X21
	059 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	060 Move X8, [X19+872]
	061 Compare X8, 0
	062 JumpIfEqual {227}
	063 Move V1, [X31+64]
	064 Move V0, [X31+68]
	065 Move X21, X31
	066 Move W27, 376
	067 Move X28, 1
	068 Move [X31+48], S0
	069 Move [X31+56], S1
	070 Move V0, [X31+72]
	071 Move [X31+44], S0
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X8, [X8+72]
	075 Compare X8, 0
	076 JumpIfEqual {227}
	077 Move W9, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W9, 40
	080 NotImplemented "Instruction MADD not yet implemented."
	081 Move X9, 0x8B9000
	082 Move W9, [X9+1923]
	083 Move W29, [X8+52]
	084 Move W25, [X8+56]
	085 Compare W9, 0
	086 JumpIfNotEqual {93}
	087 Move X0, 0x5D4000
	088 Move X0, [X0+1440]
	089 Call 0x1C17CF4
	090 Move X8, 0x8B9000
	091 Move W9, 1
	092 Move [X8+1923], W9
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, 0x5D4000
	095 Move X9, [X9+1440]
	096 Move W8, W31
	097 Subtract W24, W25, 1
	098 Move X22, X29
	099 ShiftRight X22, 32
	100 And X22, X22, 0x7FFFFFFF
	101 Move X9, [X9]
	102 Move X26, X25
	103 Move X9, [X9+184]
	104 Move V8, [X9+8]
	105 Move S14, [X9]
	106 Move S15, [X9+4]
	107 Move V13, V8
	108 Move [X31+56], S15
	109 Move [X31+64], S14
	110 Move X9, [X19+872]
	111 Compare X9, 0
	112 JumpIfEqual {227}
	113 Move X9, [X9+56]
	114 Compare X9, 0
	115 JumpIfEqual {227}
	116 Move W10, [X9+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction SBFM not yet implemented."
	119 Move W11, [X19+736]
	120 NotImplemented "Instruction NOP not yet implemented."
	121 NotImplemented "Instruction MADD not yet implemented."
	122 Move W23, [X12+100]
	123 Move V12, [X12+284]
	124 Move V10, [X12+296]
	125 Move V9, [X12+328]
	126 Move V11, [X12+336]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction MADD not yet implemented."
	129 Move W9, [X9+104]
	130 Move W10, [X19+824]
	131 Add W9, W9, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move TEMP, X8
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {139}
	137 Compare X24, 0
	138 JumpIfNotEqual {162}
	139 Compare X20, 0
	140 JumpIfEqual {227}
	141 Move S2, W31
	142 Move X0, X20
	143 Move V0, V12
	144 Move V1, V11
	145 Move X1, X31
	146 Call Transform.TransformPoint, X0, X1
	147 Move [X31+56], S1
	148 Move [X31+64], S0
	149 Move V8, V2
	150 Move S2, W31
	151 Move X0, X20
	152 Move V0, V12
	153 Move V1, V9
	154 Move X1, X31
	155 Call Transform.TransformPoint, X0, X1
	156 Move V14, V0
	157 Move V15, V1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move V13, V2
	160 Compare X24, 0
	161 JumpIfEqual {179}
	162 Move X8, [X19+872]
	163 Compare X8, 0
	164 JumpIfEqual {227}
	165 Move X8, [X8+56]
	166 Compare X8, 0
	167 JumpIfEqual {227}
	168 Move W9, [X8+24]
	169 Add X10, X29, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X9, X22, X28
	172 NotImplemented "Instruction SBFM not yet implemented."
	173 NotImplemented "Instruction MADD not yet implemented."
	174 Move W8, [X8+100]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move W8, 1
	177 Compare X20, 0
	178 JumpIfEqual {227}
	179 Move S2, W31
	180 Move X0, X20
	181 Move V0, V10
	182 Move V1, V11
	183 Move X1, X31
	184 Call Transform.TransformPoint, X0, X1
	185 Move S2, W31
	186 Move X0, X20
	187 Move V0, V10
	188 Move V1, V9
	189 Move X1, X31
	190 Call Transform.TransformPoint, X0, X1
	191 Move X8, 0x639000
	192 Move X8, [X8+3000]
	193 Move V9, V0
	194 Move V10, V1
	195 Move V11, V2
	196 Move X0, [X8]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move S1, [X31+48]
	202 Move S0, [X31+52]
	203 Move V2, [X31+44]
	204 Move S4, [X31+56]
	205 Move S3, [X31+60]
	206 Move V5, V8
	207 Move [X31+20], S10
	208 Move [X31+28], S11
	209 Move [X31+16], S9
	210 Move [X31+4], S15
	211 Move [X31+12], S13
	212 Move [X31], S14
	213 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	214 Move TEMP, X0
	215 And TEMP, TEMP, 1
	216 Compare TEMP, 1
	217 JumpIfEqual {231}
	218 Move W8, W31
	219 Subtract X24, X24, 1
	220 Add X22, X22, X28
	221 Subtract X26, X26, 1
	222 Add X29, X29, 1
	223 Move X8, [X19+872]
	224 Add X21, X21, 1
	225 Compare X8, 0
	226 JumpIfNotEqual {72}
	227 Call 0x1C17F20
	228 Move TEMP, 0
	229 Not TEMP
	230 Move W21, TEMP
	231 Move W0, W21
	232 Move X20, [X31+224]
	233 Move X19, [X31+232]
	234 Move X22, [X31+208]
	235 Move X21, [X31+216]
	236 Move X24, [X31+192]
	237 Move X23, [X31+200]
	238 Move X26, [X31+176]
	239 Move X25, [X31+184]
	240 Move X28, [X31+160]
	241 Move X27, [X31+168]
	242 Move X29, [X31+144]
	243 Move X30, [X31+152]
	244 Move D9, [X31+128]
	245 Move D8, [X31+136]
	246 Move D11, [X31+112]
	247 Move D10, [X31+120]
	248 Move D13, [X31+96]
	249 Move D12, [X31+104]
	250 Move D15, [X31+80]
	251 Move D14, [X31+88]
	252 Add X31, X31, 240
	253 Return X0
	254 Call 0x1C17F28

Method: System.Int32 FindNearestLink(TMPro.TMP_Text text, UnityEngine.Vector3 position, UnityEngine.Camera camera)

Disassembly:
	0x03B20314 BL 0x3C385F8
	0x03B20318 LDR X8, [X20 + 0x30]
	0x03B2031C CBZ X8, 0x3B203CC
	0x03B20320 ADRP X9, 0x5D4000
	0x03B20324 LDR X9, [X9 + 0xDF8]
	0x03B20328 MOV W21, W0
	0x03B2032C MOV X0, X8
	0x03B20330 MOV W1, W21
	0x03B20334 LDR X2, [X9]
	0x03B20338 BL 0x2DAA59C
	0x03B2033C TBNZ X0, 0x0, 0x3B203A4
	0x03B20340 LDR X0, [X20 + 0x30]
	0x03B20344 CBZ X0, 0x3B203CC
	0x03B20348 ADRP X8, 0x5D5000
	0x03B2034C LDR X8, [X8 + 0x9D8]
	0x03B20350 MOV W1, W21
	0x03B20354 LDR X2, [X8]
	0x03B20358 BL 0x2DAB03C
	0x03B2035C LDR X0, [X20 + 0x38]
	0x03B20360 CBZ X0, 0x3B203CC
	0x03B20364 ADRP X9, 0x639000
	0x03B20368 LDR X9, [X9 + 0xAA8]
	0x03B2036C LDR W10, [X0 + 0x1C]
	0x03B20370 LDR X8, [X0 + 0x10]
	0x03B20374 LDR X9, [X9]
	0x03B20378 ADD W10, W10, 0x1
	0x03B2037C STR W10, [X0 + 0x1C]
	0x03B20380 CBZ X8, 0x3B203CC
	0x03B20384 LDRSW X10, [X0 + 0x18]
	0x03B20388 LDR W11, [X8 + 0x18]
	0x03B2038C CMP W10, W11
	0x03B20390 B.CS 0x3B203B0
	0x03B20394 ADD W9, W10, 0x1
	0x03B20398 ADD X8, X8, X10, 0x3, LSL
	0x03B2039C STR W9, [X0 + 0x18]
	0x03B203A0 STR X19, [X8 + 0x20]
	0x03B203A4 LDP X20, X19, [X31 + 0x10]
	0x03B203A8 LDP X30, X21, [X31], #0x20
	0x03B203AC RET
	0x03B203B0 LDR X8, [X9 + 0x20]
	0x03B203B4 MOV X1, X19
	0x03B203B8 LDP X20, X19, [X31 + 0x10]
	0x03B203BC LDR X8, [X8 + 0xC0]
	0x03B203C0 LDR X2, [X8 + 0x70]
	0x03B203C4 LDP X30, X21, [X31], #0x20
	0x03B203C8 B 0x301BF90
	0x03B203CC BL 0x1C16F20
	0x03B203D0 STP X30, X21, [X31 - 0x20]!
	0x03B203D4 STP X20, X19, [X31 + 0x10]
	0x03B203D8 ADRP X20, 0x8C2000
	0x03B203DC ADRP X21, 0x638000
	0x03B203E0 LDRB W8, [X20 + 0x723]
	0x03B203E4 LDR X21, [X21 + 0x568]
	0x03B203E8 MOV X19, X0
	0x03B203EC TBNZ X8, 0x0, 0x3B20404
	0x03B203F0 ADRP X0, 0x638000
	0x03B203F4 LDR X0, [X0 + 0x568]
	0x03B203F8 BL 0x1C16CF4
	0x03B203FC MOVZ W8, 0x1
	0x03B20400 STRB W8, [X20 + 0x723]
	0x03B20404 LDR X0, [X21]
	0x03B20408 LDR W8, [X0 + 0xE0]
	0x03B2040C CBNZ W8, 0x3B20414
	0x03B20410 BL 0x1C16DFC
	0x03B20414 BL 0x3B20014
	0x03B20418 CBZ X0, 0x3B2042C
	0x03B2041C MOV X1, X19
	0x03B20420 LDP X20, X19, [X31 + 0x10]
	0x03B20424 LDP X30, X21, [X31], #0x20
	0x03B20428 B 0x3B20430
	0x03B2042C BL 0x1C16F20
	0x03B20430 STP X30, X21, [X31 - 0x20]!
	0x03B20434 STP X20, X19, [X31 + 0x10]
	0x03B20438 ADRP X21, 0x8C2000
	0x03B2043C LDRB W8, [X21 + 0x724]
	0x03B20440 MOV X19, X1
	0x03B20444 MOV X20, X0
	0x03B20448 TBNZ X8, 0x0, 0x3B20478
	0x03B2044C ADRP X0, 0x5D5000
	0x03B20450 LDR X0, [X0 + 0x9D8]
	0x03B20454 BL 0x1C16CF4
	0x03B20458 ADRP X0, 0x5D4000
	0x03B2045C LDR X0, [X0 + 0xDF8]
	0x03B20460 BL 0x1C16CF4
	0x03B20464 ADRP X0, 0x639000
	0x03B20468 LDR X0, [X0 + 0xAA8]
	0x03B2046C BL 0x1C16CF4
	0x03B20470 MOVZ W8, 0x1
	0x03B20474 STRB W8, [X21 + 0x724]
	0x03B20478 CBZ X19, 0x3B2053C
	0x03B2047C MOV X0, X19
	0x03B20480 MOV X1, X31
	0x03B20484 BL 0x3C385F8
	0x03B20488 LDR X8, [X20 + 0x10]
	0x03B2048C CBZ X8, 0x3B2053C
	0x03B20490 ADRP X9, 0x5D4000
	0x03B20494 LDR X9, [X9 + 0xDF8]
	0x03B20498 MOV W21, W0
	0x03B2049C MOV X0, X8
	0x03B204A0 MOV W1, W21
	0x03B204A4 LDR X2, [X9]
	0x03B204A8 BL 0x2DAA59C
	0x03B204AC TBNZ X0, 0x0, 0x3B20514
	0x03B204B0 LDR X0, [X20 + 0x10]
	0x03B204B4 CBZ X0, 0x3B2053C
	0x03B204B8 ADRP X8, 0x5D5000
	0x03B204BC LDR X8, [X8 + 0x9D8]
	0x03B204C0 MOV W1, W21
	0x03B204C4 LDR X2, [X8]
	0x03B204C8 BL 0x2DAB03C
	0x03B204CC LDR X0, [X20 + 0x18]
	0x03B204D0 CBZ X0, 0x3B2053C
	0x03B204D4 ADRP X9, 0x639000
	0x03B204D8 LDR X9, [X9 + 0xAA8]
	0x03B204DC LDR W10, [X0 + 0x1C]
	0x03B204E0 LDR X8, [X0 + 0x10]
	0x03B204E4 LDR X9, [X9]
	0x03B204E8 ADD W10, W10, 0x1
	0x03B204EC STR W10, [X0 + 0x1C]
	0x03B204F0 CBZ X8, 0x3B2053C
	0x03B204F4 LDRSW X10, [X0 + 0x18]
	0x03B204F8 LDR W11, [X8 + 0x18]
	0x03B204FC CMP W10, W11
	0x03B20500 B.CS 0x3B20520
	0x03B20504 ADD W9, W10, 0x1
	0x03B20508 ADD X8, X8, X10, 0x3, LSL
	0x03B2050C STR W9, [X0 + 0x18]
	0x03B20510 STR X19, [X8 + 0x20]
	0x03B20514 LDP X20, X19, [X31 + 0x10]
	0x03B20518 LDP X30, X21, [X31], #0x20
	0x03B2051C RET
	0x03B20520 LDR X8, [X9 + 0x20]
	0x03B20524 MOV X1, X19
	0x03B20528 LDP X20, X19, [X31 + 0x10]
	0x03B2052C LDR X8, [X8 + 0xC0]
	0x03B20530 LDR X2, [X8 + 0x70]
	0x03B20534 LDP X30, X21, [X31], #0x20
	0x03B20538 B 0x301BF90
	0x03B2053C BL 0x1C16F20
	0x03B20540 STP X30, X21, [X31 - 0x20]!
	0x03B20544 STP X20, X19, [X31 + 0x10]
	0x03B20548 ADRP X20, 0x8C2000
	0x03B2054C ADRP X21, 0x638000
	0x03B20550 LDRB W8, [X20 + 0x725]
	0x03B20554 LDR X21, [X21 + 0x568]
	0x03B20558 MOV X19, X0
	0x03B2055C TBNZ X8, 0x0, 0x3B20574
	0x03B20560 ADRP X0, 0x638000
	0x03B20564 LDR X0, [X0 + 0x568]
	0x03B20568 BL 0x1C16CF4
	0x03B2056C MOVZ W8, 0x1
	0x03B20570 STRB W8, [X20 + 0x725]
	0x03B20574 LDR X0, [X21]
	0x03B20578 LDR W8, [X0 + 0xE0]
	0x03B2057C CBNZ W8, 0x3B20584
	0x03B20580 BL 0x1C16DFC
	0x03B20584 BL 0x3B20014
	0x03B20588 CBZ X0, 0x3B2059C
	0x03B2058C MOV X1, X19
	0x03B20590 LDP X20, X19, [X31 + 0x10]
	0x03B20594 LDP X30, X21, [X31], #0x20
	0x03B20598 B 0x3B205A0
	0x03B2059C BL 0x1C16F20
	0x03B205A0 STP X30, X21, [X31 - 0x20]!
	0x03B205A4 STP X20, X19, [X31 + 0x10]
	0x03B205A8 ADRP X21, 0x8C2000
	0x03B205AC LDRB W8, [X21 + 0x726]
	0x03B205B0 MOV X19, X1
	0x03B205B4 MOV X20, X0
	0x03B205B8 TBNZ X8, 0x0, 0x3B205E8
	0x03B205BC ADRP X0, 0x5D5000
	0x03B205C0 LDR X0, [X0 + 0x9D8]
	0x03B205C4 BL 0x1C16CF4
	0x03B205C8 ADRP X0, 0x5D4000
	0x03B205CC LDR X0, [X0 + 0xDF8]
	0x03B205D0 BL 0x1C16CF4
	0x03B205D4 ADRP X0, 0x639000
	0x03B205D8 LDR X0, [X0 + 0xAA8]
	0x03B205DC BL 0x1C16CF4
	0x03B205E0 MOVZ W8, 0x1
	0x03B205E4 STRB W8, [X21 + 0x726]
	0x03B205E8 CBZ X19, 0x3B206AC
	0x03B205EC MOV X0, X19
	0x03B205F0 MOV X1, X31
	0x03B205F4 BL 0x3C385F8
	0x03B205F8 LDR X8, [X20 + 0x20]
	0x03B205FC CBZ X8, 0x3B206AC
	0x03B20600 ADRP X9, 0x5D4000
	0x03B20604 LDR X9, [X9 + 0xDF8]
	0x03B20608 MOV W21, W0
	0x03B2060C MOV X0, X8
	0x03B20610 MOV W1, W21
	0x03B20614 LDR X2, [X9]
	0x03B20618 BL 0x2DAA59C
	0x03B2061C TBNZ X0, 0x0, 0x3B20684
	0x03B20620 LDR X0, [X20 + 0x20]
	0x03B20624 CBZ X0, 0x3B206AC
	0x03B20628 ADRP X8, 0x5D5000
	0x03B2062C LDR X8, [X8 + 0x9D8]
	0x03B20630 MOV W1, W21
	0x03B20634 LDR X2, [X8]
	0x03B20638 BL 0x2DAB03C
	0x03B2063C LDR X0, [X20 + 0x28]
	0x03B20640 CBZ X0, 0x3B206AC
	0x03B20644 ADRP X9, 0x639000
	0x03B20648 LDR X9, [X9 + 0xAA8]
	0x03B2064C LDR W10, [X0 + 0x1C]
	0x03B20650 LDR X8, [X0 + 0x10]
	0x03B20654 LDR X9, [X9]
	0x03B20658 ADD W10, W10, 0x1
	0x03B2065C STR W10, [X0 + 0x1C]
	0x03B20660 CBZ X8, 0x3B206AC
	0x03B20664 LDRSW X10, [X0 + 0x18]
	0x03B20668 LDR W11, [X8 + 0x18]
	0x03B2066C CMP W10, W11
	0x03B20670 B.CS 0x3B20690
	0x03B20674 ADD W9, W10, 0x1
	0x03B20678 ADD X8, X8, X10, 0x3, LSL
	0x03B2067C STR W9, [X0 + 0x18]
	0x03B20680 STR X19, [X8 + 0x20]
	0x03B20684 LDP X20, X19, [X31 + 0x10]
	0x03B20688 LDP X30, X21, [X31], #0x20
	0x03B2068C RET
	0x03B20690 LDR X8, [X9 + 0x20]
	0x03B20694 MOV X1, X19
	0x03B20698 LDP X20, X19, [X31 + 0x10]
	0x03B2069C LDR X8, [X8 + 0xC0]
	0x03B206A0 LDR X2, [X8 + 0x70]
	0x03B206A4 LDP X30, X21, [X31], #0x20
	0x03B206A8 B 0x301BF90
	0x03B206AC BL 0x1C16F20
	0x03B206B0 STP X30, X21, [X31 - 0x20]!
	0x03B206B4 STP X20, X19, [X31 + 0x10]
	0x03B206B8 ADRP X20, 0x8C2000
	0x03B206BC ADRP X21, 0x638000
	0x03B206C0 LDRB W8, [X20 + 0x727]
	0x03B206C4 LDR X21, [X21 + 0x568]
	0x03B206C8 MOV X19, X0
	0x03B206CC TBNZ X8, 0x0, 0x3B206E4
	0x03B206D0 ADRP X0, 0x638000
	0x03B206D4 LDR X0, [X0 + 0x568]
	0x03B206D8 BL 0x1C16CF4
	0x03B206DC MOVZ W8, 0x1
	0x03B206E0 STRB W8, [X20 + 0x727]
	0x03B206E4 LDR X0, [X21]
	0x03B206E8 LDR W8, [X0 + 0xE0]
	0x03B206EC CBNZ W8, 0x3B206F4
	0x03B206F0 BL 0x1C16DFC
	0x03B206F4 BL 0x3B20014
	0x03B206F8 CBZ X0, 0x3B2070C
	0x03B206FC MOV X1, X19
	0x03B20700 LDP X20, X19, [X31 + 0x10]
	0x03B20704 LDP X30, X21, [X31], #0x20
	0x03B20708 B 0x3B20710
	0x03B2070C BL 0x1C16F20
	0x03B20710 STP X30, X21, [X31 - 0x20]!
	0x03B20714 STP X20, X19, [X31 + 0x10]
	0x03B20718 ADRP X21, 0x8C2000
	0x03B2071C LDRB W8, [X21 + 0x728]
	0x03B20720 MOV X19, X1
	0x03B20724 MOV X20, X0
	0x03B20728 TBNZ X8, 0x0, 0x3B20758
	0x03B2072C ADRP X0, 0x5D5000
	0x03B20730 LDR X0, [X0 + 0x9D8]
	0x03B20734 BL 0x1C16CF4
	0x03B20738 ADRP X0, 0x5D4000
	0x03B2073C LDR X0, [X0 + 0xDF8]
	0x03B20740 BL 0x1C16CF4
	0x03B20744 ADRP X0, 0x639000
	0x03B20748 LDR X0, [X0 + 0xAA8]
	0x03B2074C BL 0x1C16CF4
	0x03B20750 MOVZ W8, 0x1
	0x03B20754 STRB W8, [X21 + 0x728]
	0x03B20758 CBZ X19, 0x3B2081C
	0x03B2075C MOV X0, X19
	0x03B20760 MOV X1, X31
	0x03B20764 BL 0x3C385F8
	0x03B20768 LDR X8, [X20 + 0x40]
	0x03B2076C CBZ X8, 0x3B2081C
	0x03B20770 ADRP X9, 0x5D4000
	0x03B20774 LDR X9, [X9 + 0xDF8]
	0x03B20778 MOV W21, W0
	0x03B2077C MOV X0, X8
	0x03B20780 MOV W1, W21
	0x03B20784 LDR X2, [X9]
	0x03B20788 BL 0x2DAA59C
	0x03B2078C TBNZ X0, 0x0, 0x3B207F4
	0x03B20790 LDR X0, [X20 + 0x40]
	0x03B20794 CBZ X0, 0x3B2081C
	0x03B20798 ADRP X8, 0x5D5000
	0x03B2079C LDR X8, [X8 + 0x9D8]
	0x03B207A0 MOV W1, W21
	0x03B207A4 LDR X2, [X8]
	0x03B207A8 BL 0x2DAB03C
	0x03B207AC LDR X0, [X20 + 0x48]
	0x03B207B0 CBZ X0, 0x3B2081C
	0x03B207B4 ADRP X9, 0x639000
	0x03B207B8 LDR X9, [X9 + 0xAA8]
	0x03B207BC LDR W10, [X0 + 0x1C]
	0x03B207C0 LDR X8, [X0 + 0x10]
	0x03B207C4 LDR X9, [X9]
	0x03B207C8 ADD W10, W10, 0x1
	0x03B207CC STR W10, [X0 + 0x1C]
	0x03B207D0 CBZ X8, 0x3B2081C
	0x03B207D4 LDRSW X10, [X0 + 0x18]
	0x03B207D8 LDR W11, [X8 + 0x18]
	0x03B207DC CMP W10, W11
	0x03B207E0 B.CS 0x3B20800
	0x03B207E4 ADD W9, W10, 0x1
	0x03B207E8 ADD X8, X8, X10, 0x3, LSL
	0x03B207EC STR W9, [X0 + 0x18]
	0x03B207F0 STR X19, [X8 + 0x20]
	0x03B207F4 LDP X20, X19, [X31 + 0x10]
	0x03B207F8 LDP X30, X21, [X31], #0x20
	0x03B207FC RET
	0x03B20800 LDR X8, [X9 + 0x20]
	0x03B20804 MOV X1, X19
	0x03B20808 LDP X20, X19, [X31 + 0x10]
	0x03B2080C LDR X8, [X8 + 0xC0]
	0x03B20810 LDR X2, [X8 + 0x70]
	0x03B20814 LDP X30, X21, [X31], #0x20
	0x03B20818 B 0x301BF90
	0x03B2081C BL 0x1C16F20
	0x03B20820 B 0x3B20824
	0x03B20824 STR X30, [X31 - 0x30]!
	0x03B20828 STP X22, X21, [X31 + 0x10]
	0x03B2082C STP X20, X19, [X31 + 0x20]
	0x03B20830 ADRP X20, 0x8C2000
	0x03B20834 LDRB W8, [X20 + 0x729]
	0x03B20838 MOV X19, X0
	0x03B2083C TBNZ X8, 0x0, 0x3B20878
	0x03B20840 ADRP X0, 0x5DA000
	0x03B20844 LDR X0, [X0 + 0x678]
	0x03B20848 BL 0x1C16CF4
	0x03B2084C ADRP X0, 0x639000
	0x03B20850 LDR X0, [X0 + 0xAB0]
	0x03B20854 BL 0x1C16CF4
	0x03B20858 ADRP X0, 0x639000
	0x03B2085C LDR X0, [X0 + 0xAB8]
	0x03B20860 BL 0x1C16CF4
	0x03B20864 ADRP X0, 0x639000
	0x03B20868 LDR X0, [X0 + 0xAC0]
	0x03B2086C BL 0x1C16CF4
	0x03B20870 MOVZ W8, 0x1
	0x03B20874 STRB W8, [X20 + 0x729]
	0x03B20878 LDR X0, [X19 + 0x38]
	0x03B2087C CBZ X0, 0x3B20A74
	0x03B20880 ADRP X22, 0x639000
	0x03B20884 ADRP X21, 0x5DA000
	0x03B20888 LDR X22, [X22 + 0xAC0]
	0x03B2088C LDR X21, [X21 + 0x678]
	0x03B20890 MOV W20, W31
	0x03B20894 LDR W8, [X0 + 0x18]
	0x03B20898 CMP W20, W8
	0x03B2089C B.GE 0x3B208D0
	0x03B208A0 LDR X2, [X22]
	0x03B208A4 MOV W1, W20
	0x03B208A8 BL 0x301BCCC
	0x03B208AC CBZ X0, 0x3B20A74
	0x03B208B0 LDR X8, [X0]
	0x03B208B4 LDR X9, [X8 + 0x978]
	0x03B208B8 LDR X1, [X8 + 0x980]
	0x03B208BC BLR X9
	0x03B208C0 LDR X0, [X19 + 0x38]
	0x03B208C4 ADD W20, W20, 0x1
	0x03B208C8 CBNZ X0, 0x3B20894
	0x03B208CC B 0x3B20A74
	0x03B208D0 LDR X0, [X19 + 0x18]
	0x03B208D4 CBZ X0, 0x3B20A74
	0x03B208D8 MOV W20, W31
	0x03B208DC LDR W2, [X0 + 0x18]
	0x03B208E0 CMP W20, W2
	0x03B208E4 B.GE 0x3B2091C
	0x03B208E8 LDR X2, [X22]
	0x03B208EC MOV W1, W20
	0x03B208F0 BL 0x301BCCC
	0x03B208F4 CBZ X0, 0x3B20A74
	0x03B208F8 LDR X8, [X0]
	0x03B208FC MOV W1, W31
	0x03B20900 LDR X9, [X8 + 0x388]
	0x03B20904 LDR X2, [X8 + 0x390]
	0x03B20908 BLR X9
	0x03B2090C LDR X0, [X19 + 0x18]
	0x03B20910 ADD W20, W20, 0x1
	0x03B20914 CBNZ X0, 0x3B208DC
	0x03B20918 B 0x3B20A74
	0x03B2091C CMP W2, 0x1
	0x03B20920 B.LT 0x3B20954
	0x03B20924 LDR W9, [X0 + 0x1C]
	0x03B20928 LDR X8, [X0 + 0x10]
	0x03B2092C MOV W1, W31
	0x03B20930 MOV X3, X31
	0x03B20934 ADD W9, W9, 0x1
	0x03B20938 STP W31, W9, [X0 + 0x18]
	0x03B2093C MOV X0, X8
	0x03B20940 BL 0x339FA34
	0x03B20944 LDR X0, [X19 + 0x10]
	0x03B20948 CBZ X0, 0x3B20A74
	0x03B2094C LDR X1, [X21]
	0x03B20950 BL 0x2DAA53C
	0x03B20954 LDR X0, [X19 + 0x28]
	0x03B20958 CBZ X0, 0x3B20A74
	0x03B2095C MOV W20, W31
	0x03B20960 LDR W2, [X0 + 0x18]
	0x03B20964 CMP W20, W2
	0x03B20968 B.GE 0x3B209A0
	0x03B2096C LDR X2, [X22]
	0x03B20970 MOV W1, W20
	0x03B20974 BL 0x301BCCC
	0x03B20978 CBZ X0, 0x3B20A74
	0x03B2097C LDR X8, [X0]
	0x03B20980 MOVZ W1, 0x3
	0x03B20984 LDR X9, [X8 + 0x388]
	0x03B20988 LDR X2, [X8 + 0x390]
	0x03B2098C BLR X9
	0x03B20990 LDR X0, [X19 + 0x28]
	0x03B20994 ADD W20, W20, 0x1
	0x03B20998 CBNZ X0, 0x3B20960
	0x03B2099C B 0x3B20A74
	0x03B209A0 CMP W2, 0x1
	0x03B209A4 B.LT 0x3B209D8
	0x03B209A8 LDR W9, [X0 + 0x1C]
	0x03B209AC LDR X8, [X0 + 0x10]
	0x03B209B0 MOV W1, W31
	0x03B209B4 MOV X3, X31
	0x03B209B8 ADD W9, W9, 0x1
	0x03B209BC STP W31, W9, [X0 + 0x18]
	0x03B209C0 MOV X0, X8
	0x03B209C4 BL 0x339FA34
	0x03B209C8 LDR X0, [X19 + 0x20]
	0x03B209CC CBZ X0, 0x3B20A74
	0x03B209D0 LDR X1, [X21]
	0x03B209D4 BL 0x2DAA53C
	0x03B209D8 LDR X0, [X19 + 0x48]
	0x03B209DC CBZ X0, 0x3B20A74
	0x03B209E0 MOV W20, W31
	0x03B209E4 LDR W2, [X0 + 0x18]
	0x03B209E8 CMP W20, W2
	0x03B209EC B.GE 0x3B20A20
	0x03B209F0 LDR X2, [X22]
	0x03B209F4 MOV W1, W20
	0x03B209F8 BL 0x301BCCC
	0x03B209FC CBZ X0, 0x3B20A74
	0x03B20A00 LDR X8, [X0]
	0x03B20A04 LDR X9, [X8 + 0x798]
	0x03B20A08 LDR X1, [X8 + 0x7A0]
	0x03B20A0C BLR X9
	0x03B20A10 LDR X0, [X19 + 0x48]
	0x03B20A14 ADD W20, W20, 0x1
	0x03B20A18 CBNZ X0, 0x3B209E4
	0x03B20A1C B 0x3B20A74
	0x03B20A20 CMP W2, 0x1
	0x03B20A24 B.LT 0x3B20A64

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move X20, 0x8C3000
	023 Move W8, [X20+1813]
	024 Move X21, X1
	025 Move V8, V1
	026 Move V9, V0
	027 Move X19, X0
	028 Move [X31+128], S0
	029 Move [X31+136], S1
	030 Move [X31+136], S2
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x639000
	036 Move X0, [X0+3000]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1813], W8
	040 Compare X19, 0
	041 JumpIfEqual {525}
	042 Move X20, 0x639000
	043 Move X20, [X20+3000]
	044 Move X0, X19
	045 Move X1, X31
	046 Call TMP_Text.get_rectTransform, X0
	047 Move X8, [X20]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Add X2, X31, 128
	055 Move X0, X20
	056 Move V0, V9
	057 Move V1, V8
	058 Move X1, X21
	059 Call TMP_TextUtilities.ScreenPointToWorldPointInRectangle, X0, X1, X2, X3
	060 Move X8, [X19+872]
	061 Compare X8, 0
	062 JumpIfEqual {525}
	063 Move V1, [X31+128]
	064 Move V0, [X31+132]
	065 Move X24, X31
	066 Move W9, 0x7F800000
	067 Move W28, 376
	068 Move [X31+96], S0
	069 Move [X31+104], S1
	070 Move V0, [X31+136]
	071 Move X29, 1
	072 Move [X31+64], W31
	073 Move [X31+88], W9
	074 Move [X31+92], S0
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X8+72]
	078 Compare X8, 0
	079 JumpIfEqual {525}
	080 Move W9, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W9, 40
	083 NotImplemented "Instruction MADD not yet implemented."
	084 Move X9, 0x8B9000
	085 Move W9, [X9+1923]
	086 Move W27, [X8+52]
	087 Move W22, [X8+56]
	088 Compare W9, 0
	089 JumpIfNotEqual {96}
	090 Move X0, 0x5D4000
	091 Move X0, [X0+1440]
	092 Call 0x1C17CF4
	093 Move X8, 0x8B9000
	094 Move W9, 1
	095 Move [X8+1923], W9
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X9, 0x5D4000
	098 Move X9, [X9+1440]
	099 Move W8, W31
	100 Subtract W21, W22, 1
	101 Move X26, X27
	102 ShiftRight X26, 32
	103 And X26, X26, 0x7FFFFFFF
	104 Move X9, [X9]
	105 Move X25, X22
	106 Move X9, [X9+184]
	107 Move S0, [X9]
	108 Move S1, [X9+4]
	109 Move V2, [X9+8]
	110 Move [X31+120], S1
	111 Move [X31+128], S0
	112 Move [X31+108], S1
	113 Move [X31+116], S0
	114 Move [X31+116], S2
	115 Move [X31+104], S2
	116 Move X9, [X19+872]
	117 Compare X9, 0
	118 JumpIfEqual {525}
	119 Move X9, [X9+56]
	120 Compare X9, 0
	121 JumpIfEqual {525}
	122 Move W10, [X9+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction SBFM not yet implemented."
	125 Move W11, [X19+736]
	126 NotImplemented "Instruction NOP not yet implemented."
	127 NotImplemented "Instruction MADD not yet implemented."
	128 Move W23, [X12+100]
	129 Move V8, [X12+284]
	130 Move V11, [X12+296]
	131 Move V12, [X12+328]
	132 Move V14, [X12+336]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction MADD not yet implemented."
	135 Move W9, [X9+104]
	136 Move W10, [X19+824]
	137 Add W9, W9, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move TEMP, X8
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfNotEqual {147}
	143 Compare X21, 0
	144 JumpIfNotEqual {278}
	145 Compare X20, 0
	146 JumpIfNotEqual {293}
	147 Compare X20, 0
	148 JumpIfEqual {525}
	149 Move S2, W31
	150 Move X0, X20
	151 Move V0, V8
	152 Move V1, V14
	153 Move X1, X31
	154 Call Transform.TransformPoint, X0, X1
	155 Move [X31+120], S1
	156 Move [X31+128], S0
	157 Move [X31+116], S2
	158 Move S2, W31
	159 Move X0, X20
	160 Move V0, V8
	161 Move V1, V12
	162 Move X1, X31
	163 Call Transform.TransformPoint, X0, X1
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X31+108], S1
	166 Move [X31+116], S0
	167 Move [X31+104], S2
	168 Move S2, W31
	169 Move X0, X20
	170 Move V0, V11
	171 Move V1, V14
	172 Move X1, X31
	173 Call Transform.TransformPoint, X0, X1
	174 Move V8, V0
	175 Move V10, V1
	176 Move V13, V2
	177 Move S2, W31
	178 Move X0, X20
	179 Move V0, V11
	180 Move V1, V12
	181 Move X1, X31
	182 Call Transform.TransformPoint, X0, X1
	183 Move X8, 0x639000
	184 Move X8, [X8+3000]
	185 Move V9, V0
	186 Move V11, V1
	187 Move V12, V2
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move V1, [X31+104]
	194 Move V0, [X31+108]
	195 Move V2, [X31+92]
	196 Move S4, [X31+120]
	197 Move S3, [X31+124]
	198 Move [X31+20], S11
	199 Move [X31+28], S12
	200 Move [X31+4], S0
	201 Move [X31+12], S1
	202 Move S0, [X31+112]
	203 Move S5, [X31+116]
	204 Move [X31+16], S9
	205 Move [X31], S0
	206 Move S1, [X31+96]
	207 Move S0, [X31+100]
	208 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {526}
	213 Move [X31+72], S12
	214 Move [X31+80], S10
	215 Move [X31+80], S13
	216 Move [X31+88], S8
	217 Move X8, 0x639000
	218 Move X8, [X8+3000]
	219 Move V12, V11
	220 Move V11, V9
	221 Move X0, [X8]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move S9, [X31+112]
	227 Move S2, [X31+116]
	228 Move S8, [X31+104]
	229 Move S10, [X31+108]
	230 Move S14, [X31+96]
	231 Move S13, [X31+100]
	232 Move V15, [X31+92]
	233 Move S1, [X31+120]
	234 Move S0, [X31+124]
	235 Move V3, V9
	236 Move V4, V10
	237 Move V5, V8
	238 Move [X31], S13
	239 Move [X31+8], S14
	240 Move [X31+8], S15
	241 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	242 Move V2, V8
	243 Move V8, V11
	244 Move V3, V11
	245 Move V11, [X31+72]
	246 Move [X31+68], S0
	247 Move V0, V9
	248 Move V1, V10
	249 Move V4, V12
	250 Move V5, V11
	251 Move [X31+4], S14
	252 Move [X31+12], S15
	253 Move [X31], S13
	254 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	255 Move V1, V12
	256 Move V2, V11
	257 Move S11, [X31+80]
	258 Move S9, [X31+84]
	259 Move V12, [X31+76]
	260 Move V10, V0
	261 Move V0, V8
	262 Move V3, V9
	263 Move V4, V12
	264 Move V5, V11
	265 Move [X31+4], S14
	266 Move [X31+12], S15
	267 Move [X31], S13
	268 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	269 Move V8, V0
	270 Move V0, V9
	271 Move V1, V12
	272 Move V2, V11
	273 Move [X31+4], S14
	274 Move [X31+12], S15
	275 Move [X31], S13
	276 Compare X21, 0
	277 JumpIfEqual {293}
	278 Move X8, [X19+872]
	279 Compare X8, 0
	280 JumpIfEqual {525}
	281 Move X8, [X8+56]
	282 Compare X8, 0
	283 JumpIfEqual {525}
	284 Move W9, [X8+24]
	285 Add X10, X27, 1
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Add X9, X26, X29
	288 NotImplemented "Instruction SBFM not yet implemented."
	289 NotImplemented "Instruction MADD not yet implemented."
	290 Move W8, [X8+100]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move W8, 1
	293 Move S2, W31
	294 Move X0, X20
	295 Move V0, V11
	296 Move V1, V14
	297 Move X1, X31
	298 Call Transform.TransformPoint, X0, X1
	299 Move V8, V0
	300 Move V10, V1
	301 Move V13, V2
	302 Move S2, W31
	303 Move X0, X20
	304 Move V0, V11
	305 Move V1, V12
	306 Move X1, X31
	307 Call Transform.TransformPoint, X0, X1
	308 Move X8, 0x639000
	309 Move X8, [X8+3000]
	310 Move V9, V0
	311 Move V11, V1
	312 Move V12, V2
	313 Move X0, [X8]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move V1, [X31+104]
	319 Move V0, [X31+108]
	320 Move V2, [X31+92]
	321 Move S4, [X31+120]
	322 Move S3, [X31+124]
	323 Move [X31+20], S11
	324 Move [X31+28], S12
	325 Move [X31+4], S0
	326 Move [X31+12], S1
	327 Move S0, [X31+112]
	328 Move S5, [X31+116]
	329 Move [X31+16], S9
	330 Move [X31], S0
	331 Move S1, [X31+96]
	332 Move S0, [X31+100]
	333 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	334 Move TEMP, X0
	335 And TEMP, TEMP, 1
	336 Compare TEMP, 1
	337 JumpIfEqual {526}
	338 Move [X31+72], S12
	339 Move [X31+80], S10
	340 Move [X31+80], S13
	341 Move [X31+88], S8
	342 Move X8, 0x639000
	343 Move X8, [X8+3000]
	344 Move V12, V11
	345 Move X0, [X8]
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move S10, [X31+112]
	351 Move S2, [X31+116]
	352 Move S11, [X31+104]
	353 Move S8, [X31+108]
	354 Move S14, [X31+96]
	355 Move S13, [X31+100]
	356 Move V15, [X31+92]
	357 Move S1, [X31+120]
	358 Move S0, [X31+124]
	359 Move V3, V10
	360 Move V4, V8
	361 Move V5, V11
	362 Move [X31], S13
	363 Move [X31+8], S14
	364 Move [X31+8], S15
	365 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	366 Move V2, V11
	367 Move V11, [X31+72]
	368 Move [X31+68], S0
	369 Move V0, V10
	370 Move V1, V8
	371 Move V3, V9
	372 Move V4, V12
	373 Move V5, V11
	374 Move [X31+4], S14
	375 Move [X31+12], S15
	376 Move [X31], S13
	377 Move V8, V9
	378 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	379 Move V1, V12
	380 Move V2, V11
	381 Move V11, [X31+84]
	382 Move V12, [X31+76]
	383 Move V10, V0
	384 Move V0, V9
	385 Move V3, V11
	386 Move V4, V12
	387 Move [X31+4], S14
	388 Move [X31+12], S15
	389 Move [X31], S13
	390 Compare X20, 0
	391 JumpIfEqual {525}
	392 Move S2, W31
	393 Move X0, X20
	394 Move V0, V11
	395 Move V1, V14
	396 Move X1, X31
	397 Call Transform.TransformPoint, X0, X1
	398 Move V8, V0
	399 Move V9, V1
	400 Move V10, V2
	401 Move S2, W31
	402 Move X0, X20
	403 Move V0, V11
	404 Move V1, V12
	405 Move X1, X31
	406 Call Transform.TransformPoint, X0, X1
	407 Move X8, 0x639000
	408 Move X8, [X8+3000]
	409 Move V11, V0
	410 Move V12, V1
	411 Move V13, V2
	412 Move X0, [X8]
	413 Move W8, [X0+224]
	414 Compare W8, 0
	415 JumpIfNotEqual {417}
	416 Call 0x1C17DFC
	417 Move V1, [X31+104]
	418 Move V0, [X31+108]
	419 Move V2, [X31+92]
	420 Move S4, [X31+120]
	421 Move S3, [X31+124]
	422 Move [X31+20], S12
	423 Move [X31+28], S13
	424 Move [X31+4], S0
	425 Move [X31+12], S1
	426 Move S0, [X31+112]
	427 Move S5, [X31+116]
	428 Move [X31+16], S11
	429 Move [X31], S0
	430 Move S1, [X31+96]
	431 Move S0, [X31+100]
	432 Call TMP_TextUtilities.PointIntersectRectangle, X0, X1, X2, X3, X4
	433 Move TEMP, X0
	434 And TEMP, TEMP, 1
	435 Compare TEMP, 1
	436 JumpIfEqual {526}
	437 Move [X31+72], S13
	438 Move [X31+80], S12
	439 Move [X31+80], S10
	440 Move [X31+88], S8
	441 Move X8, 0x639000
	442 Move X8, [X8+3000]
	443 Move V12, V11
	444 Move X0, [X8]
	445 Move W8, [X0+224]
	446 Compare W8, 0
	447 JumpIfNotEqual {449}
	448 Call 0x1C17DFC
	449 Move S10, [X31+112]
	450 Move S2, [X31+116]
	451 Move S11, [X31+104]
	452 Move S8, [X31+108]
	453 Move S14, [X31+96]
	454 Move S13, [X31+100]
	455 Move V15, [X31+92]
	456 Move S1, [X31+120]
	457 Move S0, [X31+124]
	458 Move V3, V10
	459 Move V4, V8
	460 Move V5, V11
	461 Move [X31], S13
	462 Move [X31+8], S14
	463 Move [X31+8], S15
	464 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	465 Move V1, V8
	466 Move V2, V11
	467 Move V8, V12
	468 Move V3, V12
	469 Move S12, [X31+72]
	470 Move S11, [X31+76]
	471 Move [X31+68], S0
	472 Move V0, V10
	473 Move [X31+4], S14
	474 Move [X31+12], S15
	475 Move V4, V11
	476 Move V5, V12
	477 Move [X31], S13
	478 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	479 Move V1, V11
	480 Move V11, [X31+84]
	481 Move V10, V0
	482 Move [X31+4], S14
	483 Move [X31+12], S15
	484 Move [X31], S13
	485 Move V0, V8
	486 Move V2, V12
	487 Move V3, V11
	488 Move V12, V9
	489 Move V4, V9
	490 Move V9, [X31+80]
	491 Move V5, V9
	492 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	493 Move V8, V0
	494 Move [X31+4], S14
	495 Move [X31+12], S15
	496 Move [X31], S13
	497 Move V0, V11
	498 Move V1, V12
	499 Move V2, V9
	500 Move S4, [X31+120]
	501 Move S3, [X31+124]
	502 Move V5, [X31+116]
	503 Call TMP_TextUtilities.DistanceToLine, X0, X1, X2
	504 Move V1, [X31+68]
	505 Move W8, W31
	506 NotImplemented "Instruction FCMP not yet implemented."
	507 NotImplemented "Instruction FCSEL not yet implemented."
	508 NotImplemented "Instruction FCMP not yet implemented."
	509 NotImplemented "Instruction FCSEL not yet implemented."
	510 NotImplemented "Instruction FCMP not yet implemented."
	511 NotImplemented "Instruction FCSEL not yet implemented."
	512 Move V1, [X31+88]
	513 NotImplemented "Instruction FCMP not yet implemented."
	514 Move W9, W24
	515 Move [X31+64], W24
	516 Move [X31+88], S0
	517 Subtract X21, X21, 1
	518 Add X26, X26, X29
	519 Subtract X25, X25, 1
	520 Add X27, X27, 1
	521 Move X8, [X19+872]
	522 Add X24, X24, 1
	523 Compare X8, 0
	524 JumpIfNotEqual {75}
	525 Call 0x1C17F20
	526 Move W0, W24
	527 Move X20, [X31+288]
	528 Move X19, [X31+296]
	529 Move X22, [X31+272]
	530 Move X21, [X31+280]
	531 Move X24, [X31+256]
	532 Move X23, [X31+264]
	533 Move X26, [X31+240]
	534 Move X25, [X31+248]
	535 Move X28, [X31+224]
	536 Move X27, [X31+232]
	537 Move X29, [X31+208]
	538 Move X30, [X31+216]
	539 Move D9, [X31+192]
	540 Move D8, [X31+200]
	541 Move D11, [X31+176]
	542 Move D10, [X31+184]
	543 Move D13, [X31+160]
	544 Move D12, [X31+168]
	545 Move D15, [X31+144]
	546 Move D14, [X31+152]
	547 Add X31, X31, 304
	548 Return X0
	549 Move W0, [X31+64]
	550 Call 0x1C17F28

Method: System.Boolean PointIntersectRectangle(UnityEngine.Vector3 m, UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c, UnityEngine.Vector3 d)

Disassembly:
	0x03B1EFFC STP X20, X19, [X31 + 0xE0]
	0x03B1F000 ADRP X20, 0x8C3000
	0x03B1F004 LDRB W8, [X20 + 0x714]
	0x03B1F008 MOV X21, X1
	0x03B1F00C MOV V8.16B, V1.16B
	0x03B1F010 MOV V9.16B, V0.16B
	0x03B1F014 MOV X19, X0
	0x03B1F018 STP S0, S1, [X31 + 0x40]
	0x03B1F01C STR S2, [X31 + 0x48]
	0x03B1F020 TBNZ X8, 0x0, 0x3B1F038
	0x03B1F024 ADRP X0, 0x639000
	0x03B1F028 LDR X0, [X0 + 0xBB8]
	0x03B1F02C BL 0x1C16CF4
	0x03B1F030 MOVZ W8, 0x1
	0x03B1F034 STRB W8, [X20 + 0x714]
	0x03B1F038 CBZ X19, 0x3B1F2D4
	0x03B1F03C ADRP X20, 0x639000
	0x03B1F040 LDR X20, [X20 + 0xBB8]
	0x03B1F044 MOV X0, X19
	0x03B1F048 MOV X1, X31
	0x03B1F04C BL 0x3AF8D78
	0x03B1F050 LDR X8, [X20]
	0x03B1F054 MOV X20, X0
	0x03B1F058 LDR W9, [X8 + 0xE0]
	0x03B1F05C CBNZ W9, 0x3B1F068
	0x03B1F060 MOV X0, X8
	0x03B1F064 BL 0x1C16DFC
	0x03B1F068 ADD X2, X31, 0x40
	0x03B1F06C MOV X0, X20
	0x03B1F070 MOV V0.16B, V9.16B
	0x03B1F074 MOV V1.16B, V8.16B
	0x03B1F078 MOV X1, X21
	0x03B1F07C BL 0x3B1D60C
	0x03B1F080 LDR X8, [X19 + 0x368]
	0x03B1F084 CBZ X8, 0x3B1F2D4
	0x03B1F088 LDR V1, [X31 + 0x40]
	0x03B1F08C LDR V0, [X31 + 0x44]
	0x03B1F090 MOV X21, X31
	0x03B1F094 MOVZ W27, 0x178
	0x03B1F098 MOVZ X28, 0x1
	0x03B1F09C STP S0, S1, [X31 + 0x30]
	0x03B1F0A0 LDR V0, [X31 + 0x48]
	0x03B1F0A4 STR S0, [X31 + 0x2C]
	0x03B1F0A8 LDRSW X9, [X8 + 0x28]
	0x03B1F0AC CMP X21, X9
	0x03B1F0B0 B.GE 0x3B1F2D8
	0x03B1F0B4 LDR X8, [X8 + 0x48]
	0x03B1F0B8 CBZ X8, 0x3B1F2D4

ISIL:
	001 Move S7, [X31+4]
	002 Move S6, [X31+8]
	003 Move V16, [X31]
	004 Subtract S19, S0, S3
	005 Subtract S20, S1, S4
	006 Subtract S17, S7, S4
	007 Subtract S18, S16, S3
	008 Subtract S21, S2, S5
	009 Subtract S4, S6, S5
	010 Multiply S3, S19, S18
	011 Multiply S5, S20, S17
	012 Add S3, S3, S5
	013 Multiply S5, S21, S4
	014 Add S3, S5, S3
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move W0, W31
	017 Return X0
	018 Multiply S5, S18, S18
	019 Multiply S17, S17, S17
	020 Add S5, S5, S17
	021 Multiply S4, S4, S4
	022 Add S4, S4, S5
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Move W0, W31
	025 Move S5, [X31+20]
	026 Move S4, [X31+24]
	027 Move V3, [X31+16]
	028 Subtract S17, S0, S16
	029 Subtract S18, S1, S7
	030 Subtract S1, S5, S7
	031 Subtract S3, S3, S16
	032 Subtract S2, S2, S6
	033 Subtract S0, S4, S6
	034 Multiply S4, S17, S3
	035 Multiply S5, S18, S1
	036 Add S4, S4, S5
	037 Multiply S2, S2, S0
	038 Add S2, S2, S4
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Multiply S3, S3, S3
	041 Multiply S1, S1, S1
	042 Add S1, S3, S1
	043 Multiply S0, S0, S0
	044 Add S0, S0, S1
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Return X0

Method: System.Boolean ScreenPointToWorldPointInRectangle(UnityEngine.Transform transform, UnityEngine.Vector2 screenPoint, UnityEngine.Camera cam, out UnityEngine.Vector3 worldPoint)

Disassembly:
	0x03B1E60C MOV V8.16B, V10.16B
	0x03B1E610 LDR X9, [X19 + 0x368]
	0x03B1E614 CBZ X9, 0x3B1E878
	0x03B1E618 LDR X9, [X9 + 0x38]
	0x03B1E61C CBZ X9, 0x3B1E878
	0x03B1E620 LDR W11, [X9 + 0x18]
	0x03B1E624 CMP X29, X11
	0x03B1E628 B.CS 0x3B1E8B4
	0x03B1E62C SBFM X10, X22, 0x20, 0x3F
	0x03B1E630 MADD X12, X10, X27, X9
	0x03B1E634 LDR V2, [X12 + 0x148]
	0x03B1E638 LDR V1, [X12 + 0x150]
	0x03B1E63C LDRB W13, [X12 + 0x194]
	0x03B1E640 LDR W10, [X12 + 0x64]
	0x03B1E644 LDR V15, [X12 + 0x128]
	0x03B1E648 FCMP S14, S2
	0x03B1E64C FCSEL S14, S14, S2, GT
	0x03B1E650 FCMP S13, S1
	0x03B1E654 BIC W13, W13, W8, 0x0
	0x03B1E658 FCSEL S13, S13, S1, MI
	0x03B1E65C TBZ X13, 0x0, 0x3B1E680
	0x03B1E660 LDR V8, [X12 + 0x11C]
	0x03B1E664 CMP W25, 0x1
	0x03B1E668 B.NE 0x3B1E6B4
	0x03B1E66C CBZ X20, 0x3B1E878
	0x03B1E670 FMOV S2, W31
	0x03B1E674 MOV X0, X20
	0x03B1E678 MOV V0.16B, V8.16B
	0x03B1E67C B 0x3B1E6CC
	0x03B1E680 TBZ X8, 0x0, 0x3B1E778
	0x03B1E684 CBZ X24, 0x3B1E6BC
	0x03B1E688 ADD X8, X29, 0x1
	0x03B1E68C CMP X8, X11
	0x03B1E690 B.CS 0x3B1E8B4
	0x03B1E694 ADD X8, X22, X28
	0x03B1E698 SBFM X8, X8, 0x20, 0x3F
	0x03B1E69C MADD X8, X8, X27, X9
	0x03B1E6A0 LDR W8, [X8 + 0x64]
	0x03B1E6A4 CMP W10, W8
	0x03B1E6A8 B.NE 0x3B1E794
	0x03B1E6AC MOVZ W8, 0x1
	0x03B1E6B0 B 0x3B1E77C
	0x03B1E6B4 MOV V10.16B, V8.16B
	0x03B1E6B8 CBNZ X24, 0x3B1E688
	0x03B1E6BC CBZ X20, 0x3B1E878
	0x03B1E6C0 FMOV S2, W31
	0x03B1E6C4 MOV X0, X20
	0x03B1E6C8 MOV V0.16B, V10.16B
	0x03B1E6CC MOV V1.16B, V13.16B
	0x03B1E6D0 MOV X1, X31
	0x03B1E6D4 BL 0x3C3DE4C
	0x03B1E6D8 MOV V10.16B, V0.16B
	0x03B1E6DC STP S2, S1, [X31 + 0x4C]
	0x03B1E6E0 FMOV S2, W31
	0x03B1E6E4 MOV X0, X20
	0x03B1E6E8 MOV V0.16B, V8.16B
	0x03B1E6EC MOV V1.16B, V14.16B
	0x03B1E6F0 MOV X1, X31
	0x03B1E6F4 BL 0x3C3DE4C
	0x03B1E6F8 MOV V8.16B, V0.16B
	0x03B1E6FC STP S2, S1, [X31 + 0x44]
	0x03B1E700 FMOV S2, W31
	0x03B1E704 MOV X0, X20
	0x03B1E708 MOV V0.16B, V15.16B
	0x03B1E70C MOV V1.16B, V14.16B
	0x03B1E710 MOV X1, X31
	0x03B1E714 BL 0x3C3DE4C
	0x03B1E718 MOV V11.16B, V0.16B
	0x03B1E71C MOV V9.16B, V1.16B
	0x03B1E720 MOV V12.16B, V2.16B
	0x03B1E724 FMOV S2, W31
	0x03B1E728 MOV X0, X20
	0x03B1E72C MOV V0.16B, V15.16B
	0x03B1E730 MOV V1.16B, V13.16B
	0x03B1E734 MOV X1, X31
	0x03B1E738 BL 0x3C3DE4C
	0x03B1E73C LDR X0, [X23]
	0x03B1E740 LDR W8, [X0 + 0xE0]
	0x03B1E744 CBNZ W8, 0x3B1E74C
	0x03B1E748 BL 0x1C16DFC
	0x03B1E74C LDR V1, [X31 + 0x44]
	0x03B1E750 LDP S0, S5, [X31 + 0x48]
	0x03B1E754 LDP S4, S2, [X31 + 0x50]
	0x03B1E758 MOV V3.16B, V10.16B
	0x03B1E75C STP S9, S12, [X31 + 0x14]
	0x03B1E760 STP S0, S1, [X31 + 0x4]
	0x03B1E764 LDP S1, S0, [X31 + 0x58]
	0x03B1E768 STR S11, [X31 + 0x10]
	0x03B1E76C STR S8, [X31]
	0x03B1E770 BL 0x3B1DFFC
	0x03B1E774 TBNZ X0, 0x0, 0x3B1E880
	0x03B1E778 MOV W8, W31
	0x03B1E77C SUB X24, X24, 0x1
	0x03B1E780 ADD X22, X22, X28
	0x03B1E784 SUBS X26, X26, 0x1
	0x03B1E788 ADD X29, X29, 0x1
	0x03B1E78C B.NE 0x3B1E610
	0x03B1E790 B 0x3B1E86C
	0x03B1E794 CBZ X20, 0x3B1E878
	0x03B1E798 FMOV S2, W31
	0x03B1E79C MOV X0, X20
	0x03B1E7A0 MOV V0.16B, V10.16B
	0x03B1E7A4 MOV V1.16B, V13.16B
	0x03B1E7A8 MOV X1, X31
	0x03B1E7AC BL 0x3C3DE4C
	0x03B1E7B0 MOV V9.16B, V0.16B
	0x03B1E7B4 STP S2, S1, [X31 + 0x4C]
	0x03B1E7B8 FMOV S2, W31
	0x03B1E7BC MOV X0, X20
	0x03B1E7C0 MOV V0.16B, V8.16B
	0x03B1E7C4 MOV V1.16B, V14.16B
	0x03B1E7C8 MOV X1, X31
	0x03B1E7CC BL 0x3C3DE4C
	0x03B1E7D0 MOV V8.16B, V0.16B
	0x03B1E7D4 STR S1, [X31 + 0x48]
	0x03B1E7D8 MOV V11.16B, V2.16B
	0x03B1E7DC FMOV S2, W31
	0x03B1E7E0 MOV X0, X20
	0x03B1E7E4 MOV V0.16B, V15.16B
	0x03B1E7E8 MOV V1.16B, V14.16B
	0x03B1E7EC MOV X1, X31
	0x03B1E7F0 BL 0x3C3DE4C
	0x03B1E7F4 MOV V14.16B, V0.16B
	0x03B1E7F8 MOV V10.16B, V1.16B
	0x03B1E7FC MOV V12.16B, V2.16B
	0x03B1E800 FMOV S2, W31
	0x03B1E804 MOV X0, X20
	0x03B1E808 MOV V0.16B, V15.16B
	0x03B1E80C MOV V1.16B, V13.16B
	0x03B1E810 MOV X1, X31
	0x03B1E814 BL 0x3C3DE4C
	0x03B1E818 LDR X0, [X23]
	0x03B1E81C LDR W8, [X0 + 0xE0]
	0x03B1E820 CBNZ W8, 0x3B1E828
	0x03B1E824 BL 0x1C16DFC
	0x03B1E828 LDP S0, S5, [X31 + 0x48]
	0x03B1E82C LDP S4, S2, [X31 + 0x50]
	0x03B1E830 MOV V3.16B, V9.16B
	0x03B1E834 STP S10, S12, [X31 + 0x14]
	0x03B1E838 STP S0, S11, [X31 + 0x4]
	0x03B1E83C LDP S1, S0, [X31 + 0x58]
	0x03B1E840 STR S14, [X31 + 0x10]
	0x03B1E844 STR S8, [X31]
	0x03B1E848 BL 0x3B1DFFC
	0x03B1E84C TBNZ X0, 0x0, 0x3B1E880
	0x03B1E850 MOVZ W9, 0xFF800000
	0x03B1E854 MOVZ W10, 0x7F800000
	0x03B1E858 MOV V10.16B, V9.16B
	0x03B1E85C MOV W8, W31
	0x03B1E860 FMOV S14, W9
	0x03B1E864 FMOV S13, W10
	0x03B1E868 B 0x3B1E77C
	0x03B1E86C LDR X8, [X19 + 0x368]
	0x03B1E870 ADD X21, X21, 0x1
	0x03B1E874 CBNZ X8, 0x3B1E57C
	0x03B1E878 BL 0x1C16F20
	0x03B1E87C MOVN W21, 0x0
	0x03B1E880 MOV W0, W21
	0x03B1E884 LDP X20, X19, [X31 + 0x100]
	0x03B1E888 LDP X22, X21, [X31 + 0xF0]
	0x03B1E88C LDP X24, X23, [X31 + 0xE0]
	0x03B1E890 LDP X26, X25, [X31 + 0xD0]
	0x03B1E894 LDP X28, X27, [X31 + 0xC0]
	0x03B1E898 LDP X29, X30, [X31 + 0xB0]
	0x03B1E89C LDP D9, D8, [X31 + 0xA0]
	0x03B1E8A0 LDP D11, D10, [X31 + 0x90]
	0x03B1E8A4 LDP D13, D12, [X31 + 0x80]
	0x03B1E8A8 LDP D15, D14, [X31 + 0x70]
	0x03B1E8AC ADD X31, X31, 0x110
	0x03B1E8B0 RET
	0x03B1E8B4 BL 0x1C16F28
	0x03B1E8B8 SUB X31, X31, 0x130
	0x03B1E8BC STP D15, D14, [X31 + 0x90]
	0x03B1E8C0 STP D13, D12, [X31 + 0xA0]
	0x03B1E8C4 STP D11, D10, [X31 + 0xB0]
	0x03B1E8C8 STP D9, D8, [X31 + 0xC0]
	0x03B1E8CC STP X29, X30, [X31 + 0xD0]
	0x03B1E8D0 STP X28, X27, [X31 + 0xE0]
	0x03B1E8D4 STP X26, X25, [X31 + 0xF0]
	0x03B1E8D8 STP X24, X23, [X31 + 0x100]
	0x03B1E8DC STP X22, X21, [X31 + 0x110]
	0x03B1E8E0 STP X20, X19, [X31 + 0x120]
	0x03B1E8E4 ADRP X20, 0x8C4000
	0x03B1E8E8 LDRB W8, [X20 + 0x712]
	0x03B1E8EC MOV X21, X1
	0x03B1E8F0 MOV V8.16B, V1.16B
	0x03B1E8F4 MOV V9.16B, V0.16B
	0x03B1E8F8 MOV X19, X0
	0x03B1E8FC STP S0, S1, [X31 + 0x80]
	0x03B1E900 STR S2, [X31 + 0x88]
	0x03B1E904 TBNZ X8, 0x0, 0x3B1E91C
	0x03B1E908 ADRP X0, 0x63A000
	0x03B1E90C LDR X0, [X0 + 0xBB8]
	0x03B1E910 BL 0x1C16CF4
	0x03B1E914 MOVZ W8, 0x1
	0x03B1E918 STRB W8, [X20 + 0x712]
	0x03B1E91C CBZ X19, 0x3B1EE38
	0x03B1E920 ADRP X20, 0x63A000
	0x03B1E924 LDR X20, [X20 + 0xBB8]
	0x03B1E928 MOV X0, X19
	0x03B1E92C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X23
	012 Move [X31+144], X22
	013 Move [X31+152], X21
	014 Move [X31+160], X20
	015 Move [X31+168], X19
	016 Move X22, 0x8C5000
	017 Move W8, [X22+1814]
	018 Move X19, X2
	019 Move X21, X1
	020 Move V8, V1
	021 Move V9, V0
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x62C000
	028 Move X0, [X0+1720]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1814], W8
	032 Move X23, 0x8BC000
	033 Move X22, 0x62C000
	034 Move W8, [X23+1935]
	035 Move X22, [X22+1720]
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x5DE000
	042 Move X0, [X0+3848]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+1935], W8
	046 Move X8, 0x5DE000
	047 Move X8, [X8+3848]
	048 Move X8, [X8]
	049 Move X8, [X8+184]
	050 Move V0, [X8]
	051 Move [X19+8], W31
	052 Move [X19], D0
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X8, X31, 8
	059 Move X0, X21
	060 Move V0, V9
	061 Move V1, V8
	062 Move X1, X31
	063 Call RectTransformUtility.ScreenPointToRay, X0, X1
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move X8, [X31+24]
	066 Move [X31+2], V0
	067 Move [X31+48], X8
	068 Compare X20, 0
	069 JumpIfEqual {230}
	070 Move X0, X20
	071 Move X1, X31
	072 Call Transform.get_rotation, X0
	073 Move X21, 0x8BB000
	074 Move W8, [X21+3550]
	075 Move V8, V0
	076 Move V9, V1
	077 Move V10, V2
	078 Move V11, V3
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x5D6000
	082 Move X0, [X0+1440]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X21+3550], W8
	086 Move X21, 0x5D6000
	087 Move X21, [X21+1440]
	088 Move V0, V8
	089 Move V1, V9
	090 Move V2, V10
	091 Move X8, [X21]
	092 Move V3, V11
	093 Move X0, X31
	094 Move X8, [X8+184]
	095 Move S4, [X8+84]
	096 Move S5, [X8+88]
	097 Move V6, [X8+92]
	098 Call Quaternion.op_Multiply, X0, X1
	099 Move X0, X20
	100 Move X1, X31
	101 Move V11, V0
	102 Move V12, V1
	103 Move V13, V2
	104 Call Transform.get_position, X0
	105 Move X20, 0x8BB000
	106 Move W8, [X20+1925]
	107 Move V9, V0
	108 Move V10, V1
	109 Move V8, V2
	110 Compare W8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, 0x5D6000
	113 Move X0, [X0+1448]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X20+1925], W8
	117 Move X8, 0x5D6000
	118 Move X8, [X8+1448]
	119 Move X0, [X8]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Multiply S0, S11, S11
	125 Multiply S1, S12, S12
	126 Move X8, -50540544
	127 Add S0, S0, S1
	128 Move V1, [X8+380]
	129 Multiply S2, S13, S13
	130 Add S0, S2, S0
	131 NotImplemented "Instruction FSQRT not yet implemented."
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 Move [X31], S10
	134 Move [X31+8], S8
	135 Move V10, V9
	136 NotImplemented "Instruction FDIV not yet implemented."
	137 NotImplemented "Instruction FDIV not yet implemented."
	138 NotImplemented "Instruction FDIV not yet implemented."
	139 Move X20, 0x8BB000
	140 Move W8, [X20+1923]
	141 Compare W8, 0
	142 JumpIfNotEqual {148}
	143 Move X0, 0x5D6000
	144 Move X0, [X0+1440]
	145 Call 0x1C17CF4
	146 Move W8, 1
	147 Move [X20+1923], W8
	148 Move X8, [X21]
	149 Move V10, V9
	150 Move X8, [X8+184]
	151 Move S14, [X8]
	152 Move S12, [X8+4]
	153 Move V11, [X8+8]
	154 Move S13, [X31+40]
	155 Move S0, [X31+44]
	156 Move S1, [X31+48]
	157 Move S2, [X31+52]
	158 Move X20, 0x8BC000
	159 Move S15, [X31+32]
	160 Move S8, [X31+36]
	161 Move W8, [X20+1450]
	162 Multiply S0, S14, S0
	163 Multiply S1, S12, S1
	164 Add S0, S0, S1
	165 Multiply S1, S11, S2
	166 Add S9, S1, S0
	167 Compare W8, 0
	168 JumpIfNotEqual {174}
	169 Move X0, 0x5DD000
	170 Move X0, [X0+1208]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X20+1450], W8
	174 Move X8, 0x5DD000
	175 Move X8, [X8+1208]
	176 Move X9, -50540544
	177 Move V0, [X9+576]
	178 NotImplemented "Instruction FABS not yet implemented."
	179 Move X8, [X8]
	180 Move S2, W31
	181 NotImplemented "Instruction FMAXNM not yet implemented."
	182 Multiply S0, S1, S0
	183 Move X8, [X8+184]
	184 Move S1, 8
	185 Move V3, [X8]
	186 Multiply S1, S3, S1
	187 NotImplemented "Instruction FCMP not yet implemented."
	188 NotImplemented "Instruction FCSEL not yet implemented."
	189 NotImplemented "Instruction FABD not yet implemented."
	190 NotImplemented "Instruction FCMP not yet implemented."
	191 Move S1, [X31]
	192 Move S4, [X31+4]
	193 Multiply S0, S10, S14
	194 Multiply S2, S14, S15
	195 Multiply S3, S12, S8
	196 Multiply S1, S1, S12
	197 Multiply S4, S4, S11
	198 Multiply S5, S11, S13
	199 Add S0, S0, S1
	200 Add S1, S2, S3
	201 Add S0, S4, S0
	202 Add S1, S5, S1
	203 Subtract S0, S0, S1
	204 NotImplemented "Instruction FDIV not yet implemented."
	205 NotImplemented "Instruction FCMP not yet implemented."
	206 Add X0, X31, 32
	207 Move X1, X31
	208 Call Ray.GetPoint, X0, V0
	209 Move W0, 1
	210 Move [X19], S0
	211 Move [X19+8], S1
	212 Move [X19+8], S2
	213 Move W0, W31
	214 Move X20, [X31+160]
	215 Move X19, [X31+168]
	216 Move X22, [X31+144]
	217 Move X21, [X31+152]
	218 Move X30, [X31+128]
	219 Move X23, [X31+136]
	220 Move D9, [X31+112]
	221 Move D8, [X31+120]
	222 Move D11, [X31+96]
	223 Move D10, [X31+104]
	224 Move D13, [X31+80]
	225 Move D12, [X31+88]
	226 Move D15, [X31+64]
	227 Move D14, [X31+72]
	228 Add X31, X31, 176
	229 Return X0
	230 Call 0x1C17F20

Method: System.Boolean IntersectLinePlane(TMPro.TMP_TextUtilities/LineSegment line, UnityEngine.Vector3 point, UnityEngine.Vector3 normal, out UnityEngine.Vector3 intersectingPoint)

Disassembly:
	0x03B20A28 LDR W9, [X0 + 0x1C]
	0x03B20A2C LDR X8, [X0 + 0x10]
	0x03B20A30 MOV W1, W31
	0x03B20A34 MOV X3, X31
	0x03B20A38 ADD W9, W9, 0x1
	0x03B20A3C STP W31, W9, [X0 + 0x18]
	0x03B20A40 MOV X0, X8
	0x03B20A44 BL 0x339FA34
	0x03B20A48 LDR X0, [X19 + 0x40]
	0x03B20A4C CBZ X0, 0x3B20A74
	0x03B20A50 LDR X1, [X21]
	0x03B20A54 LDP X20, X19, [X31 + 0x20]
	0x03B20A58 LDP X22, X21, [X31 + 0x10]
	0x03B20A5C LDR X30, [X31], #0x30
	0x03B20A60 B 0x2DAA53C
	0x03B20A64 LDP X20, X19, [X31 + 0x20]
	0x03B20A68 LDP X22, X21, [X31 + 0x10]
	0x03B20A6C LDR X30, [X31], #0x30
	0x03B20A70 RET
	0x03B20A74 BL 0x1C16F20
	0x03B20A78 STP X30, X21, [X31 - 0x20]!
	0x03B20A7C STP X20, X19, [X31 + 0x10]
	0x03B20A80 ADRP X20, 0x8C2000
	0x03B20A84 ADRP X21, 0x638000
	0x03B20A88 LDRB W8, [X20 + 0x72A]
	0x03B20A8C LDR X21, [X21 + 0x568]
	0x03B20A90 MOV X19, X0
	0x03B20A94 TBNZ X8, 0x0, 0x3B20AAC
	0x03B20A98 ADRP X0, 0x638000
	0x03B20A9C LDR X0, [X0 + 0x568]
	0x03B20AA0 BL 0x1C16CF4
	0x03B20AA4 MOVZ W8, 0x1
	0x03B20AA8 STRB W8, [X20 + 0x72A]
	0x03B20AAC LDR X0, [X21]
	0x03B20AB0 LDR W8, [X0 + 0xE0]
	0x03B20AB4 CBNZ W8, 0x3B20ABC
	0x03B20AB8 BL 0x1C16DFC
	0x03B20ABC BL 0x3B20014
	0x03B20AC0 CBZ X0, 0x3B20AD4
	0x03B20AC4 MOV X1, X19
	0x03B20AC8 LDP X20, X19, [X31 + 0x10]
	0x03B20ACC LDP X30, X21, [X31], #0x20
	0x03B20AD0 B 0x3B20AD8
	0x03B20AD4 BL 0x1C16F20
	0x03B20AD8 STP X30, X21, [X31 - 0x20]!
	0x03B20ADC STP X20, X19, [X31 + 0x10]
	0x03B20AE0 ADRP X21, 0x8C2000
	0x03B20AE4 LDRB W8, [X21 + 0x72E]
	0x03B20AE8 MOV X20, X1
	0x03B20AEC MOV X19, X0
	0x03B20AF0 TBNZ X8, 0x0, 0x3B20B14
	0x03B20AF4 ADRP X0, 0x5E0000
	0x03B20AF8 LDR X0, [X0 + 0x5A0]
	0x03B20AFC BL 0x1C16CF4
	0x03B20B00 ADRP X0, 0x639000
	0x03B20B04 LDR X0, [X0 + 0xAC8]
	0x03B20B08 BL 0x1C16CF4
	0x03B20B0C MOVZ W8, 0x1
	0x03B20B10 STRB W8, [X21 + 0x72E]
	0x03B20B14 CBZ X20, 0x3B20B6C
	0x03B20B18 MOV X0, X20
	0x03B20B1C MOV X1, X31
	0x03B20B20 BL 0x3C385F8
	0x03B20B24 LDR X8, [X19 + 0x38]
	0x03B20B28 CBZ X8, 0x3B20B6C
	0x03B20B2C ADRP X9, 0x639000
	0x03B20B30 LDR X9, [X9 + 0xAC8]
	0x03B20B34 MOV W21, W0
	0x03B20B38 MOV X0, X8
	0x03B20B3C MOV X1, X20
	0x03B20B40 LDR X2, [X9]
	0x03B20B44 BL 0x301D7A8
	0x03B20B48 LDR X0, [X19 + 0x30]
	0x03B20B4C CBZ X0, 0x3B20B6C
	0x03B20B50 ADRP X8, 0x5E0000
	0x03B20B54 LDR X8, [X8 + 0x5A0]
	0x03B20B58 LDP X20, X19, [X31 + 0x10]
	0x03B20B5C MOV W1, W21
	0x03B20B60 LDR X2, [X8]
	0x03B20B64 LDP X30, X21, [X31], #0x20
	0x03B20B68 B 0x2DAA770
	0x03B20B6C BL 0x1C16F20
	0x03B20B70 STP X30, X21, [X31 - 0x20]!
	0x03B20B74 STP X20, X19, [X31 + 0x10]
	0x03B20B78 ADRP X20, 0x8C2000
	0x03B20B7C ADRP X21, 0x638000
	0x03B20B80 LDRB W8, [X20 + 0x72B]
	0x03B20B84 LDR X21, [X21 + 0x568]
	0x03B20B88 MOV X19, X0
	0x03B20B8C TBNZ X8, 0x0, 0x3B20BA4
	0x03B20B90 ADRP X0, 0x638000
	0x03B20B94 LDR X0, [X0 + 0x568]

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x8C3000
	013 Move W8, [X21+1815]
	014 Move X19, X1
	015 Move V8, V5
	016 Move V9, V4
	017 Move V10, V3
	018 Move V12, V2
	019 Move V11, V1
	020 Move V13, V0
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x5DB000
	027 Move X0, [X0+1208]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1815], W8
	031 Move X22, 0x8B9000
	032 Move X21, 0x5DB000
	033 Move W8, [X22+1923]
	034 Move X21, [X21+1208]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x5D4000
	038 Move X0, [X0+1440]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1923], W8
	042 Move X8, 0x5D4000
	043 Move X8, [X8+1440]
	044 Move X8, [X8]
	045 Move X8, [X8+184]
	046 Move V0, [X8]
	047 Move V1, [X8+8]
	048 Move [X19], D0
	049 Move [X19+8], S1
	050 Move X8, [X21]
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move V0, [X20]
	053 Move V4, [X20+20]
	054 Move V1, [X20+8]
	055 Move X8, [X8+184]
	056 Subtract V3, V2, V0
	057 Multiply S7, S10, V3.S[0]
	058 Subtract S2, S4, S1
	059 Subtract S4, S0, S13
	060 Multiply S16, S9, V3.S[1]
	061 Multiply S17, S10, S4
	062 Multiply S4, S8, S2
	063 Add S7, S7, S16
	064 Move S5, V0.S[1]
	065 Add S4, S4, S7
	066 Move V7, [X8]
	067 Subtract S5, S5, S11
	068 Subtract S6, S1, S12
	069 Multiply S5, S9, S5
	070 Add S5, S17, S5
	071 Multiply S6, S8, S6
	072 NotImplemented "Instruction FABS not yet implemented."
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Add S5, S6, S5
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 NotImplemented "Instruction FNEG not yet implemented."
	078 NotImplemented "Instruction FDIV not yet implemented."
	079 Move S6, 1
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction CSET not yet implemented."
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 NotImplemented "Instruction CSET not yet implemented."
	084 And W0, W8, W9
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction INVALID not yet implemented."
	087 Multiply S2, S2, S4
	088 Add V0, V0, V3
	089 Add S1, S1, S2
	090 Move [X19], D0
	091 Move [X19+8], S1
	092 Move X20, [X31+80]
	093 Move X19, [X31+88]
	094 Move X22, [X31+64]
	095 Move X21, [X31+72]
	096 Move X30, [X31+48]
	097 Move D9, [X31+32]
	098 Move D8, [X31+40]
	099 Move D11, [X31+16]
	100 Move D10, [X31+24]
	101 Move D13, [X31+96]
	102 Move D12, [X31+104]
	103 Return X0

Method: System.Single DistanceToLine(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 point)

Disassembly:
	0x03B1F0BC LDR W9, [X8 + 0x18]
	0x03B1F0C0 CMP X21, X9
	0x03B1F0C4 B.CS 0x3B1F310
	0x03B1F0C8 MOVZ W9, 0x28
	0x03B1F0CC MADD X8, X21, X9, X8
	0x03B1F0D0 ADRP X9, 0x8B9000
	0x03B1F0D4 LDRB W9, [X9 + 0x783]
	0x03B1F0D8 LDP W29, W25, [X8 + 0x34]
	0x03B1F0DC CBNZ W9, 0x3B1F0F8
	0x03B1F0E0 ADRP X0, 0x5D4000
	0x03B1F0E4 LDR X0, [X0 + 0x5A0]
	0x03B1F0E8 BL 0x1C16CF4
	0x03B1F0EC ADRP X8, 0x8B9000
	0x03B1F0F0 MOVZ W9, 0x1
	0x03B1F0F4 STRB W9, [X8 + 0x783]
	0x03B1F0F8 CMP W25, 0x1
	0x03B1F0FC B.LT 0x3B1F2C8
	0x03B1F100 ADRP X9, 0x5D4000
	0x03B1F104 LDR X9, [X9 + 0x5A0]
	0x03B1F108 MOV W8, W31
	0x03B1F10C SUB W24, W25, 0x1
	0x03B1F110 UBFM X22, X29, 0x20, 0x1F
	0x03B1F114 LDR X9, [X9]
	0x03B1F118 MOV X26, X25
	0x03B1F11C LDR X9, [X9 + 0xB8]
	0x03B1F120 LDR V8, [X9 + 0x8]
	0x03B1F124 LDP S14, S15, [X9]
	0x03B1F128 MOV V13.16B, V8.16B
	0x03B1F12C STP S15, S14, [X31 + 0x38]
	0x03B1F130 LDR X9, [X19 + 0x368]
	0x03B1F134 CBZ X9, 0x3B1F2D4
	0x03B1F138 LDR X9, [X9 + 0x38]
	0x03B1F13C CBZ X9, 0x3B1F2D4
	0x03B1F140 LDR W10, [X9 + 0x18]
	0x03B1F144 CMP X29, X10
	0x03B1F148 B.CS 0x3B1F310
	0x03B1F14C SBFM X10, X22, 0x20, 0x3F
	0x03B1F150 LDR W11, [X19 + 0x2E0]
	0x03B1F154 NOP
	0x03B1F158 MADD X12, X10, X27, X9
	0x03B1F15C LDR W23, [X12 + 0x64]
	0x03B1F160 LDR V12, [X12 + 0x11C]
	0x03B1F164 LDR V10, [X12 + 0x128]
	0x03B1F168 LDR V9, [X12 + 0x148]
	0x03B1F16C LDR V11, [X12 + 0x150]
	0x03B1F170 CMP W11, 0x5
	0x03B1F174 B.NE 0x3B1F190
	0x03B1F178 MADD X9, X10, X27, X9
	0x03B1F17C LDR W9, [X9 + 0x68]
	0x03B1F180 LDR W10, [X19 + 0x338]

ISIL:
	001 Move S19, [X31+4]
	002 Move S18, [X31+8]
	003 Move V20, [X31]
	004 Subtract S7, S3, S0
	005 Subtract S16, S4, S1
	006 Subtract S1, S1, S19
	007 Subtract S6, S0, S20
	008 Subtract S17, S5, S2
	009 Subtract S0, S2, S18
	010 Multiply S2, S7, S6
	011 Multiply S21, S16, S1
	012 Add S2, S2, S21
	013 Multiply S21, S17, S0
	014 Add S2, S21, S2
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Multiply S2, S6, S6
	017 Subtract S20, S20, S3
	018 Subtract S4, S19, S4
	019 Subtract S3, S18, S5
	020 Multiply S5, S7, S20
	021 Multiply S18, S16, S4
	022 Add S5, S5, S18
	023 Multiply S18, S17, S3
	024 Add S5, S18, S5
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Multiply S0, S20, S20
	027 Multiply S1, S4, S4
	028 Add S1, S0, S1
	029 Multiply S0, S3, S3
	030 Multiply S3, S7, S7
	031 Multiply S4, S16, S16
	032 Add S3, S3, S4
	033 Multiply S4, S17, S17
	034 Add S3, S4, S3
	035 NotImplemented "Instruction FDIV not yet implemented."
	036 Multiply S3, S7, S2
	037 Multiply S4, S16, S2
	038 Multiply S2, S17, S2
	039 Subtract S3, S6, S3
	040 Subtract S1, S1, S4
	041 Subtract S0, S0, S2
	042 Multiply S2, S3, S3
	043 Multiply S1, S1, S1
	044 Add S1, S2, S1
	045 Multiply S0, S0, S0
	046 Add S0, S0, S1
	047 Return V0

Method: System.Char ToLowerFast(System.Char c)

Disassembly:
	0x03B20B98 BL 0x1C16CF4
	0x03B20B9C MOVZ W8, 0x1
	0x03B20BA0 STRB W8, [X20 + 0x72B]
	0x03B20BA4 LDR X0, [X21]
	0x03B20BA8 LDR W8, [X0 + 0xE0]
	0x03B20BAC CBNZ W8, 0x3B20BB4
	0x03B20BB0 BL 0x1C16DFC
	0x03B20BB4 BL 0x3B20014
	0x03B20BB8 CBZ X0, 0x3B20BEC
	0x03B20BBC MOV X1, X19
	0x03B20BC0 BL 0x3B20BF0
	0x03B20BC4 BL 0x3B20014
	0x03B20BC8 CBZ X0, 0x3B20BEC
	0x03B20BCC MOV X1, X19
	0x03B20BD0 BL 0x3B20C88
	0x03B20BD4 BL 0x3B20014
	0x03B20BD8 CBZ X0, 0x3B20BEC
	0x03B20BDC MOV X1, X19
	0x03B20BE0 LDP X20, X19, [X31 + 0x10]
	0x03B20BE4 LDP X30, X21, [X31], #0x20
	0x03B20BE8 B 0x3B20AD8
	0x03B20BEC BL 0x1C16F20
	0x03B20BF0 STP X30, X21, [X31 - 0x20]!
	0x03B20BF4 STP X20, X19, [X31 + 0x10]
	0x03B20BF8 ADRP X21, 0x8C2000
	0x03B20BFC LDRB W8, [X21 + 0x72C]
	0x03B20C00 MOV X20, X1
	0x03B20C04 MOV X19, X0
	0x03B20C08 TBNZ X8, 0x0, 0x3B20C2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C3000
	006 Move X21, 0x63A000
	007 Move W8, [X20+1816]
	008 Move X21, [X21+2696]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x63A000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1816], W8
	019 Move X0, [X21]
	020 Compare X0, 0
	021 JumpIfEqual {39}
	022 Move W8, [X0+16]
	023 Subtract W8, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 And W1, W19, 0xFFFF
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call String.get_Chars, X0, X1
	038 Return X0
	039 Call 0x1C17F20

Method: System.Char ToUpperFast(System.Char c)

Disassembly:
	0x03B20C0C ADRP X0, 0x5E0000
	0x03B20C10 LDR X0, [X0 + 0x5A0]
	0x03B20C14 BL 0x1C16CF4
	0x03B20C18 ADRP X0, 0x639000
	0x03B20C1C LDR X0, [X0 + 0xAC8]
	0x03B20C20 BL 0x1C16CF4
	0x03B20C24 MOVZ W8, 0x1
	0x03B20C28 STRB W8, [X21 + 0x72C]
	0x03B20C2C CBZ X20, 0x3B20C84
	0x03B20C30 MOV X0, X20
	0x03B20C34 MOV X1, X31
	0x03B20C38 BL 0x3C385F8
	0x03B20C3C LDR X8, [X19 + 0x28]
	0x03B20C40 CBZ X8, 0x3B20C84
	0x03B20C44 ADRP X9, 0x639000
	0x03B20C48 LDR X9, [X9 + 0xAC8]
	0x03B20C4C MOV W21, W0
	0x03B20C50 MOV X0, X8
	0x03B20C54 MOV X1, X20
	0x03B20C58 LDR X2, [X9]
	0x03B20C5C BL 0x301D7A8
	0x03B20C60 LDR X0, [X19 + 0x20]
	0x03B20C64 CBZ X0, 0x3B20C84
	0x03B20C68 ADRP X8, 0x5E0000
	0x03B20C6C LDR X8, [X8 + 0x5A0]
	0x03B20C70 LDP X20, X19, [X31 + 0x10]
	0x03B20C74 MOV W1, W21
	0x03B20C78 LDR X2, [X8]
	0x03B20C7C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C3000
	006 Move X21, 0x63A000
	007 Move W8, [X20+1817]
	008 Move X21, [X21+2688]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x63A000
	015 Move X0, [X0+2688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1817], W8
	019 Move X0, [X21]
	020 Compare X0, 0
	021 JumpIfEqual {39}
	022 Move W8, [X0+16]
	023 Subtract W8, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 And W1, W19, 0xFFFF
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X2, X31
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call String.get_Chars, X0, X1
	038 Return X0
	039 Call 0x1C17F20

Method: System.UInt32 ToUpperASCIIFast(System.UInt32 c)

Disassembly:
	0x03B20C80 B 0x2DAA770
	0x03B20C84 BL 0x1C16F20
	0x03B20C88 STP X30, X21, [X31 - 0x20]!
	0x03B20C8C STP X20, X19, [X31 + 0x10]
	0x03B20C90 ADRP X21, 0x8C2000
	0x03B20C94 LDRB W8, [X21 + 0x72D]
	0x03B20C98 MOV X20, X1
	0x03B20C9C MOV X19, X0
	0x03B20CA0 TBNZ X8, 0x0, 0x3B20CC4
	0x03B20CA4 ADRP X0, 0x5E0000
	0x03B20CA8 LDR X0, [X0 + 0x5A0]
	0x03B20CAC BL 0x1C16CF4
	0x03B20CB0 ADRP X0, 0x639000
	0x03B20CB4 LDR X0, [X0 + 0xAC8]
	0x03B20CB8 BL 0x1C16CF4
	0x03B20CBC MOVZ W8, 0x1
	0x03B20CC0 STRB W8, [X21 + 0x72D]
	0x03B20CC4 CBZ X20, 0x3B20D1C
	0x03B20CC8 MOV X0, X20
	0x03B20CCC MOV X1, X31
	0x03B20CD0 BL 0x3C385F8
	0x03B20CD4 LDR X8, [X19 + 0x18]
	0x03B20CD8 CBZ X8, 0x3B20D1C
	0x03B20CDC ADRP X9, 0x639000
	0x03B20CE0 LDR X9, [X9 + 0xAC8]
	0x03B20CE4 MOV W21, W0
	0x03B20CE8 MOV X0, X8
	0x03B20CEC MOV X1, X20
	0x03B20CF0 LDR X2, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C3000
	006 Move X21, 0x63A000
	007 Move W8, [X20+1818]
	008 Move X21, [X21+2688]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x63A000
	015 Move X0, [X0+2688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1818], W8
	019 Move X0, [X21]
	020 Compare X0, 0
	021 JumpIfEqual {36}
	022 Move W8, [X0+16]
	023 Move W9, W19
	024 Subtract W8, W8, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W1, W19
	027 Move X2, X31
	028 Call String.get_Chars, X0, X1
	029 And W19, W0, 0xFFFF
	030 Move W0, W19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Int32 GetHashCode(System.String s)

Disassembly:
	0x03B20CF4 BL 0x301D7A8
	0x03B20CF8 LDR X0, [X19 + 0x10]
	0x03B20CFC CBZ X0, 0x3B20D1C
	0x03B20D00 ADRP X8, 0x5E0000
	0x03B20D04 LDR X8, [X8 + 0x5A0]
	0x03B20D08 LDP X20, X19, [X31 + 0x10]
	0x03B20D0C MOV W1, W21
	0x03B20D10 LDR X2, [X8]
	0x03B20D14 LDP X30, X21, [X31], #0x20
	0x03B20D18 B 0x2DAA770
	0x03B20D1C BL 0x1C16F20
	0x03B20D20 STP X30, X25, [X31 - 0x40]!
	0x03B20D24 STP X24, X23, [X31 + 0x10]
	0x03B20D28 STP X22, X21, [X31 + 0x20]
	0x03B20D2C STP X20, X19, [X31 + 0x30]
	0x03B20D30 ADRP X24, 0x8C2000
	0x03B20D34 ADRP X25, 0x639000
	0x03B20D38 ADRP X19, 0x638000
	0x03B20D3C ADRP X23, 0x639000
	0x03B20D40 ADRP X22, 0x639000
	0x03B20D44 ADRP X21, 0x639000
	0x03B20D48 ADRP X20, 0x639000
	0x03B20D4C LDR X25, [X25 + 0xAD0]
	0x03B20D50 LDRB W8, [X24 + 0x72F]
	0x03B20D54 LDR X19, [X19 + 0x568]
	0x03B20D58 LDR X23, [X23 + 0xAD8]
	0x03B20D5C LDR X22, [X22 + 0xAE0]
	0x03B20D60 LDR X21, [X21 + 0xAE8]
	0x03B20D64 LDR X20, [X20 + 0xAF0]
	0x03B20D68 TBNZ X8, 0x0, 0x3B20DBC
	0x03B20D6C ADRP X0, 0x638000
	0x03B20D70 LDR X0, [X0 + 0x568]
	0x03B20D74 BL 0x1C16CF4
	0x03B20D78 ADRP X0, 0x639000
	0x03B20D7C LDR X0, [X0 + 0xAD8]
	0x03B20D80 BL 0x1C16CF4
	0x03B20D84 ADRP X0, 0x639000
	0x03B20D88 LDR X0, [X0 + 0xAF0]
	0x03B20D8C BL 0x1C16CF4
	0x03B20D90 ADRP X0, 0x639000
	0x03B20D94 LDR X0, [X0 + 0xAE8]
	0x03B20D98 BL 0x1C16CF4
	0x03B20D9C ADRP X0, 0x639000
	0x03B20DA0 LDR X0, [X0 + 0xAD0]
	0x03B20DA4 BL 0x1C16CF4
	0x03B20DA8 ADRP X0, 0x639000
	0x03B20DAC LDR X0, [X0 + 0xAE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8C3000
	008 Move W8, [X20+1819]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x639000
	015 Move X0, [X0+3000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1819], W8
	019 Compare X19, 0
	020 JumpIfEqual {55}
	021 Move W8, [X19+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X23, 0x639000
	024 Move X23, [X23+3000]
	025 Move W21, W31
	026 Move W20, W31
	027 Move X0, X19
	028 Move W1, W21
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 Move X8, [X23]
	032 Move W22, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move W0, W22
	039 Call TMP_TextUtilities.ToUpperFast, X0
	040 Move W8, [X19+16]
	041 Add W9, W20, W20
	042 And W10, W0, 0xFFFF
	043 Add W21, W21, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Xor W20, W9, W10
	046 Move W20, W31
	047 Move W0, W20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Int32 GetSimpleHashCode(System.String s)

Disassembly:
	0x03B18960 MOV W20, W1
	0x03B18964 MOV X1, X31
	0x03B18968 MOV W19, W2
	0x03B1896C MOV X21, X0
	0x03B18970 BL 0x33BDD8C
	0x03B18974 MOVZ W9, 0x3F800000
	0x03B18978 STR W20, [X21 + 0x14]
	0x03B1897C STP W19, W9, [X21 + 0x28]
	0x03B18980 LDP X20, X19, [X31 + 0x10]
	0x03B18984 MOVZ W8, 0x2
	0x03B18988 STP X31, X31, [X21 + 0x18]
	0x03B1898C STRB W8, [X21 + 0x10]
	0x03B18990 LDP X30, X21, [X31], #0x20
	0x03B18994 RET
	0x03B18998 SUB X31, X31, 0x60
	0x03B1899C STR D8, [X31 + 0x20]
	0x03B189A0 STR X30, [X31 + 0x28]
	0x03B189A4 STP X24, X23, [X31 + 0x30]
	0x03B189A8 STP X22, X21, [X31 + 0x40]
	0x03B189AC STP X20, X19, [X31 + 0x50]
	0x03B189B0 MOV W23, W1
	0x03B189B4 MOV X1, X31
	0x03B189B8 MOV W19, W5
	0x03B189BC MOV V8.16B, V0.16B
	0x03B189C0 MOV X20, X4
	0x03B189C4 MOV X21, X3
	0x03B189C8 MOV X22, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {29}
	007 Move W8, [X0+16]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W21, W31
	011 Move W20, W31
	012 Move X0, X19
	013 Move W1, W21
	014 Move X2, X31
	015 Call String.get_Chars, X0, X1
	016 Move W8, [X19+16]
	017 Add W9, W20, W20
	018 And W10, W0, 0xFFFF
	019 Add W21, W21, 1
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Xor W20, W9, W10
	022 Move W20, W31
	023 Move W0, W20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return X0
	029 Call 0x1C17F20

Method: System.UInt32 GetSimpleHashCodeLowercase(System.String s)

Disassembly:
	0x03B20DB0 BL 0x1C16CF4
	0x03B20DB4 MOVZ W8, 0x1
	0x03B20DB8 STRB W8, [X24 + 0x72F]
	0x03B20DBC LDR X0, [X25]
	0x03B20DC0 MOVZ W1, 0x1
	0x03B20DC4 MOV W2, W31
	0x03B20DC8 MOV W3, W31
	0x03B20DCC MOV X4, X31
	0x03B20DD0 BL 0x3BFE7FC
	0x03B20DD4 LDR X8, [X19]
	0x03B20DD8 MOVZ W1, 0x1
	0x03B20DDC MOV W2, W31
	0x03B20DE0 MOV W3, W31
	0x03B20DE4 LDR X8, [X8 + 0xB8]
	0x03B20DE8 MOV X4, X31
	0x03B20DEC STR X0, [X8 + 0x8]
	0x03B20DF0 LDR X0, [X23]
	0x03B20DF4 BL 0x3BFE7FC
	0x03B20DF8 LDR X8, [X19]
	0x03B20DFC MOVZ W1, 0x1
	0x03B20E00 MOV W2, W31
	0x03B20E04 MOV W3, W31
	0x03B20E08 LDR X8, [X8 + 0xB8]
	0x03B20E0C MOV X4, X31
	0x03B20E10 STR X0, [X8 + 0x10]
	0x03B20E14 LDR X0, [X22]
	0x03B20E18 BL 0x3BFE7FC
	0x03B20E1C LDR X8, [X19]
	0x03B20E20 MOVZ W1, 0x1
	0x03B20E24 MOV W2, W31
	0x03B20E28 MOV W3, W31
	0x03B20E2C LDR X8, [X8 + 0xB8]
	0x03B20E30 MOV X4, X31
	0x03B20E34 STR X0, [X8 + 0x18]
	0x03B20E38 LDR X0, [X21]
	0x03B20E3C BL 0x3BFE7FC
	0x03B20E40 LDR X8, [X19]
	0x03B20E44 MOVZ W1, 0x1
	0x03B20E48 MOV W2, W31
	0x03B20E4C MOV W3, W31
	0x03B20E50 LDR X8, [X8 + 0xB8]
	0x03B20E54 MOV X4, X31
	0x03B20E58 STR X0, [X8 + 0x20]
	0x03B20E5C LDR X0, [X20]
	0x03B20E60 BL 0x3BFE7FC
	0x03B20E64 LDR X8, [X19]
	0x03B20E68 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8C3000
	008 Move W8, [X20+1820]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x639000
	015 Move X0, [X0+3000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1820], W8
	019 Compare X19, 0
	020 JumpIfEqual {55}
	021 Move W8, [X19+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X23, 0x639000
	024 Move X23, [X23+3000]
	025 Move W21, W31
	026 Move W20, 0x1505
	027 Move X0, X19
	028 Move W1, W21
	029 Move X2, X31
	030 Call String.get_Chars, X0, X1
	031 Move X8, [X23]
	032 Move W22, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move W0, W22
	039 Call TMP_TextUtilities.ToLowerFast, X0
	040 Move W8, [X19+16]
	041 Add W9, W20, W20
	042 And W10, W0, 0xFFFF
	043 Add W21, W21, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Xor W20, W9, W10
	046 Move W20, 0x1505
	047 Move W0, W20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Int32 HexToInt(System.Char hex)

Disassembly:
	0x03B20E6C LDP X22, X21, [X31 + 0x20]
	0x03B20E70 LDP X24, X23, [X31 + 0x10]
	0x03B20E74 LDR X8, [X8 + 0xB8]
	0x03B20E78 STR X0, [X8 + 0x28]
	0x03B20E7C LDP X30, X25, [X31], #0x40
	0x03B20E80 RET
	0x03B20E84 STR X30, [X31 - 0x20]!
	0x03B20E88 STP X20, X19, [X31 + 0x10]
	0x03B20E8C ADRP X19, 0x8C2000
	0x03B20E90 ADRP X20, 0x639000
	0x03B20E94 LDRB W8, [X19 + 0x730]

ISIL:
	001 Subtract W8, W0, 48
	002 And W9, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -49840128
	005 NotImplemented "Instruction SXTH not yet implemented."
	006 Add X9, X9, 3232
	007 Move W0, [X9]
	008 Return X0
	009 Move W0, 15
	010 Return X0

Method: System.Int32 StringHexToInt(System.String s)

Disassembly:
	0x03B20E98 LDR X20, [X20 + 0xAF8]
	0x03B20E9C TBNZ X8, 0x0, 0x3B20EB4
	0x03B20EA0 ADRP X0, 0x639000
	0x03B20EA4 LDR X0, [X0 + 0xAF8]
	0x03B20EA8 BL 0x1C16CF4
	0x03B20EAC MOVZ W8, 0x1
	0x03B20EB0 STRB W8, [X19 + 0x730]
	0x03B20EB4 LDR X0, [X20]
	0x03B20EB8 LDR X8, [X0 + 0xB8]
	0x03B20EBC LDR X8, [X8]
	0x03B20EC0 CBNZ X8, 0x3B20EE8
	0x03B20EC4 BL 0x1C16F10
	0x03B20EC8 MOV X19, X0
	0x03B20ECC BL 0x3B20EF8
	0x03B20ED0 LDR X8, [X20]
	0x03B20ED4 LDR X8, [X8 + 0xB8]
	0x03B20ED8 STR X19, [X8]
	0x03B20EDC LDR X8, [X20]
	0x03B20EE0 LDR X8, [X8 + 0xB8]
	0x03B20EE4 LDR X8, [X8]
	0x03B20EE8 LDP X20, X19, [X31 + 0x10]
	0x03B20EEC MOV X0, X8
	0x03B20EF0 LDR X30, [X31], #0x20
	0x03B20EF4 RET
	0x03B20EF8 STR X30, [X31 - 0x50]!
	0x03B20EFC STP X26, X25, [X31 + 0x10]
	0x03B20F00 STP X24, X23, [X31 + 0x20]
	0x03B20F04 STP X22, X21, [X31 + 0x30]
	0x03B20F08 STP X20, X19, [X31 + 0x40]
	0x03B20F0C ADRP X20, 0x8C2000
	0x03B20F10 ADRP X26, 0x639000
	0x03B20F14 ADRP X25, 0x639000
	0x03B20F18 ADRP X24, 0x5D4000
	0x03B20F1C ADRP X23, 0x5DA000
	0x03B20F20 ADRP X22, 0x639000
	0x03B20F24 ADRP X21, 0x639000
	0x03B20F28 LDR X26, [X26 + 0xB00]
	0x03B20F2C LDRB W8, [X20 + 0x731]
	0x03B20F30 LDR X25, [X25 + 0xB08]
	0x03B20F34 LDR X24, [X24 + 0xE08]
	0x03B20F38 LDR X23, [X23 + 0x688]
	0x03B20F3C LDR X22, [X22 + 0x430]
	0x03B20F40 LDR X21, [X21 + 0xB10]
	0x03B20F44 MOV X19, X0
	0x03B20F48 TBNZ X8, 0x0, 0x3B20F9C
	0x03B20F4C ADRP X0, 0x5DA000
	0x03B20F50 LDR X0, [X0 + 0x688]
	0x03B20F54 BL 0x1C16CF4
	0x03B20F58 ADRP X0, 0x5D4000
	0x03B20F5C LDR X0, [X0 + 0xE08]
	0x03B20F60 BL 0x1C16CF4
	0x03B20F64 ADRP X0, 0x639000
	0x03B20F68 LDR X0, [X0 + 0xB08]
	0x03B20F6C BL 0x1C16CF4
	0x03B20F70 ADRP X0, 0x639000
	0x03B20F74 LDR X0, [X0 + 0xB00]
	0x03B20F78 BL 0x1C16CF4
	0x03B20F7C ADRP X0, 0x639000
	0x03B20F80 LDR X0, [X0 + 0xB10]
	0x03B20F84 BL 0x1C16CF4
	0x03B20F88 ADRP X0, 0x639000
	0x03B20F8C LDR X0, [X0 + 0x430]
	0x03B20F90 BL 0x1C16CF4
	0x03B20F94 MOVZ W8, 0x1
	0x03B20F98 STRB W8, [X20 + 0x731]

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x8C3000
	013 Move W8, [X20+1821]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x639000
	020 Move X0, [X0+3000]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1821], W8
	024 Compare X19, 0
	025 JumpIfEqual {79}
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X23, 0x639000
	029 Move X23, [X23+3000]
	030 Move W21, W31
	031 Move W20, W31
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W24, TEMP
	035 Move S8, 4
	036 Move W25, 0x7F800000
	037 Move W26, 0x80000000
	038 Move X0, X19
	039 Move W1, W21
	040 Move X2, X31
	041 Call String.get_Chars, X0, X1
	042 Move X8, [X23]
	043 Move W22, W0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move W0, W22
	050 Call TMP_TextUtilities.HexToInt, X0
	051 Move W27, [X19+16]
	052 Move W22, W0
	053 Add W8, W24, W27
	054 NotImplemented "Instruction SCVTF not yet implemented."
	055 Multiply S0, S0, S8
	056 Call 0x3EB2B90
	057 Move S1, W25
	058 NotImplemented "Instruction FCVTZS not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Add W21, W21, 1
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction MADD not yet implemented."
	064 Subtract W24, W24, 1
	065 Move W20, W31
	066 Move W0, W20
	067 Move X20, [X31+80]
	068 Move X19, [X31+88]
	069 Move X22, [X31+64]
	070 Move X21, [X31+72]
	071 Move X24, [X31+48]
	072 Move X23, [X31+56]
	073 Move X26, [X31+32]
	074 Move X25, [X31+40]
	075 Move X30, [X31+16]
	076 Move X27, [X31+24]
	077 Move V8, [X31+96]
	078 Return X0
	079 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B20F9C LDR X0, [X26]
	0x03B20FA0 BL 0x1C16F10
	0x03B20FA4 LDR X1, [X25]
	0x03B20FA8 MOV X20, X0
	0x03B20FAC BL 0x301B7C4
	0x03B20FB0 STR X20, [X19 + 0x10]
	0x03B20FB4 LDR X0, [X24]
	0x03B20FB8 BL 0x1C16F10
	0x03B20FBC LDR X1, [X23]
	0x03B20FC0 MOV X20, X0
	0x03B20FC4 BL 0x2DA9EF4
	0x03B20FC8 STR X20, [X19 + 0x18]
	0x03B20FCC LDR X0, [X26]
	0x03B20FD0 BL 0x1C16F10
	0x03B20FD4 LDR X1, [X25]
	0x03B20FD8 MOV X20, X0
	0x03B20FDC BL 0x301B7C4
	0x03B20FE0 STR X20, [X19 + 0x20]
	0x03B20FE4 LDR X0, [X24]
	0x03B20FE8 BL 0x1C16F10
	0x03B20FEC LDR X1, [X23]
	0x03B20FF0 MOV X20, X0
	0x03B20FF4 BL 0x2DA9EF4
	0x03B20FF8 MOV X0, X19
	0x03B20FFC MOV X1, X31
	0x03B21000 STR X20, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C3000
	006 Move X21, 0x5D6000
	007 Move X19, 0x639000
	008 Move W8, [X20+1822]
	009 Move X21, [X21+2480]
	010 Move X19, [X19+3000]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x639000
	016 Move X0, [X0+3000]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D6000
	019 Move X0, [X0+2480]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1822], W8
	023 Move X0, [X21]
	024 Move W1, 4
	025 Call 0x1C17D6C
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], X0
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

