Type: TMPro.TMP_SubMesh

Method: TMPro.TMP_FontAsset get_fontAsset()

Disassembly:
	0x03B1A45C BL 0x3C3883C
	0x03B1A460 TBZ X0, 0x0, 0x3B1A480

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_fontAsset(TMPro.TMP_FontAsset value)

Disassembly:
	0x03B1A464 ADRP X8, 0x605000
	0x03B1A468 LDR X8, [X8 + 0x5A0]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: TMPro.TMP_SpriteAsset get_spriteAsset()

Disassembly:
	0x03B1A46C MOV X0, X19
	0x03B1A470 LDR X1, [X8]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_spriteAsset(TMPro.TMP_SpriteAsset value)

Disassembly:
	0x03B1A474 BL 0x21A3894
	0x03B1A478 STR X0, [X19 + 0x58]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: UnityEngine.Material get_material()

Disassembly:
	0x03B1A47C B 0x3B1A484
	0x03B1A480 LDR X0, [X19 + 0x58]

ISIL:
	001 Move X1, [X0+56]

Method: System.Void set_material(UnityEngine.Material value)

Disassembly:
	0x03B1A5AC LDR X0, [X19 + 0x58]
	0x03B1A5B0 CBZ X0, 0x3B1A67C
	0x03B1A5B4 LDR X1, [X19 + 0x38]
	0x03B1A5B8 MOV X2, X31
	0x03B1A5BC BL 0x3C134D8
	0x03B1A5C0 ADRP X21, 0x63E000
	0x03B1A5C4 LDR X21, [X21 + 0x338]
	0x03B1A5C8 LDR X20, [X19 + 0x38]
	0x03B1A5CC LDR X0, [X21]
	0x03B1A5D0 LDR W8, [X0 + 0xE0]
	0x03B1A5D4 CBNZ W8, 0x3B1A5DC
	0x03B1A5D8 BL 0x1C16DFC
	0x03B1A5DC CBZ X20, 0x3B1A67C
	0x03B1A5E0 LDR X8, [X21]
	0x03B1A5E4 MOV X0, X20
	0x03B1A5E8 MOV X2, X31
	0x03B1A5EC LDR X8, [X8 + 0xB8]
	0x03B1A5F0 LDR X1, [X8 + 0x120]
	0x03B1A5F4 BL 0x3C14D4C
	0x03B1A5F8 TBZ X0, 0x0, 0x3B1A670
	0x03B1A5FC MOV X0, X19
	0x03B1A600 BL 0x3B19B4C
	0x03B1A604 CBZ X0, 0x3B1A67C
	0x03B1A608 LDR X8, [X0]
	0x03B1A60C LDR X9, [X8 + 0x568]
	0x03B1A610 LDR X1, [X8 + 0x570]
	0x03B1A614 BLR X9
	0x03B1A618 LDR X8, [X21]
	0x03B1A61C MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+56]
	007 Compare X0, 0
	008 JumpIfEqual {38}
	009 Move X20, X1
	010 Move X1, X31
	011 Call Object.GetInstanceID, X0
	012 Compare X20, 0
	013 JumpIfEqual {38}
	014 Move W21, W0
	015 Move X0, X20
	016 Move X1, X31
	017 Call Object.GetInstanceID, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 
	024 Move X0, X19
	025 Move [X19+48], X20
	026 Move [X19+56], X20
	027 Call TMP_SubMesh.GetPaddingForMaterial, X0
	028 Move X0, X19
	029 Move [X19+84], S0
	030 Call TMP_SubMesh.SetVerticesDirty, X0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call TMP_SubMesh.UpdateMaterial, X0
	037 Return 
	038 Call 0x1C17F20

Method: UnityEngine.Material get_sharedMaterial()

Disassembly:
	0x03B1A748 LDP X30, X21, [X31], #0x20
	0x03B1A74C B 0x3C14AB8

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_sharedMaterial(UnityEngine.Material value)

Disassembly:
	0x03B1A750 LDP X20, X19, [X31 + 0x10]
	0x03B1A754 MOV X0, X31
	0x03B1A758 LDP X30, X21, [X31], #0x20
	0x03B1A75C RET
	0x03B1A760 BL 0x1C16F20
	0x03B1A764 LDR X1, [X0 + 0xF0]
	0x03B1A768 B 0x3B1A76C
	0x03B1A76C STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+56], X1
	005 Call TMP_SubMesh.GetPaddingForMaterial, X0
	006 Move [X19+84], S0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call TMP_SubMesh.UpdateMaterial, X0
	011 Return 

Method: UnityEngine.Material get_fallbackMaterial()

Disassembly:
	0x03B1A790 TBNZ X8, 0x0, 0x3B1A7A8
	0x03B1A794 ADRP X0, 0x5D9000

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_fallbackMaterial(UnityEngine.Material value)

Disassembly:
	0x03B1A798 LDR X0, [X0 + 0x598]
	0x03B1A79C BL 0x1C16CF4
	0x03B1A7A0 MOVZ W8, 0x1
	0x03B1A7A4 STRB W8, [X22 + 0x6F0]
	0x03B1A7A8 LDR X0, [X21]
	0x03B1A7AC LDR X21, [X19 + 0xE8]
	0x03B1A7B0 LDR W8, [X0 + 0xE0]
	0x03B1A7B4 CBNZ W8, 0x3B1A7BC
	0x03B1A7B8 BL 0x1C16DFC
	0x03B1A7BC MOV X0, X21
	0x03B1A7C0 MOV X1, X31
	0x03B1A7C4 MOV X2, X31
	0x03B1A7C8 BL 0x3C3883C
	0x03B1A7CC TBNZ X0, 0x0, 0x3B1A804
	0x03B1A7D0 LDR X0, [X19 + 0xE8]
	0x03B1A7D4 CBZ X0, 0x3B1A85C
	0x03B1A7D8 MOV X1, X31
	0x03B1A7DC BL 0x3C385F8
	0x03B1A7E0 CBZ X20, 0x3B1A85C
	0x03B1A7E4 MOV W21, W0
	0x03B1A7E8 MOV X0, X20
	0x03B1A7EC MOV X1, X31
	0x03B1A7F0 BL 0x3C385F8
	0x03B1A7F4 CMP W21, W0
	0x03B1A7F8 B.NE 0x3B1A804
	0x03B1A7FC LDR X0, [X19 + 0xE8]
	0x03B1A800 B 0x3B1A810
	0x03B1A804 MOV X1, X20
	0x03B1A808 BL 0x3B1B9E8
	0x03B1A80C STR X0, [X19 + 0xE8]
	0x03B1A810 STR X0, [X19 + 0xF0]
	0x03B1A814 MOV X0, X19
	0x03B1A818 BL 0x3B1A948
	0x03B1A81C LDR X8, [X19]
	0x03B1A820 STR S0, [X19 + 0x10C]
	0x03B1A824 MOV X0, X19
	0x03B1A828 LDR X9, [X8 + 0x2F8]
	0x03B1A82C LDR X1, [X8 + 0x300]
	0x03B1A830 BLR X9
	0x03B1A834 LDR X8, [X19]
	0x03B1A838 MOV X0, X19
	0x03B1A83C LDR X9, [X8 + 0x308]
	0x03B1A840 LDR X1, [X8 + 0x310]
	0x03B1A844 BLR X9
	0x03B1A848 LDR X0, [X19 + 0xF0]
	0x03B1A84C LDP X20, X19, [X31 + 0x20]
	0x03B1A850 LDP X22, X21, [X31 + 0x10]
	0x03B1A854 LDR X30, [X31], #0x30
	0x03B1A858 RET
	0x03B1A85C BL 0x1C16F20
	0x03B1A860 STR X30, [X31 - 0x30]!
	0x03B1A864 STP X22, X21, [X31 + 0x10]
	0x03B1A868 STP X20, X19, [X31 + 0x20]
	0x03B1A86C ADRP X22, 0x8C8000
	0x03B1A870 ADRP X21, 0x5D9000
	0x03B1A874 LDRB W8, [X22 + 0x6E1]
	0x03B1A878 LDR X21, [X21 + 0x598]
	0x03B1A87C MOV X20, X1
	0x03B1A880 MOV X19, X0
	0x03B1A884 TBNZ X8, 0x0, 0x3B1A89C
	0x03B1A888 ADRP X0, 0x5D9000
	0x03B1A88C LDR X0, [X0 + 0x598]
	0x03B1A890 BL 0x1C16CF4
	0x03B1A894 MOVZ W8, 0x1
	0x03B1A898 STRB W8, [X22 + 0x6E1]
	0x03B1A89C LDR X0, [X21]
	0x03B1A8A0 LDR X21, [X19 + 0xF0]
	0x03B1A8A4 LDR W8, [X0 + 0xE0]
	0x03B1A8A8 CBNZ W8, 0x3B1A8B0
	0x03B1A8AC BL 0x1C16DFC
	0x03B1A8B0 MOV X0, X21
	0x03B1A8B4 MOV X1, X31
	0x03B1A8B8 MOV X2, X31
	0x03B1A8BC BL 0x3C354F8
	0x03B1A8C0 TBZ X0, 0x0, 0x3B1A900
	0x03B1A8C4 LDR X0, [X19 + 0xF0]
	0x03B1A8C8 CBZ X0, 0x3B1A944
	0x03B1A8CC MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x8C9000
	008 Move X22, 0x5DA000
	009 Move W8, [X21+1743]
	010 Move X22, [X22+1432]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5DA000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x63F000
	021 Move X0, [X0+1568]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1743], W8
	025 Move X0, [X22]
	026 Move X21, [X19+64]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X20
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {46}
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return 
	046 Move X0, [X22]
	047 Move X21, [X19+64]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X23, 0x63F000
	053 Move X23, [X23+1568]
	054 Move X0, X21
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {84}
	062 Move X0, [X22]
	063 Move X21, [X19+64]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X21
	069 Move X1, X20
	070 Move X2, X31
	071 Call Object.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {84}
	076 Move X0, [X23]
	077 Move X21, [X19+64]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X21
	083 Call TMP_MaterialManager.ReleaseFallbackMaterial, X0
	084 Move [X19+64], X20
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X20
	091 Call TMP_MaterialManager.AddFallbackMaterialReference, X0
	092 Move X8, [X19+64]
	093 Move X0, X19
	094 Move [X19+56], X8
	095 Call TMP_SubMesh.GetPaddingForMaterial, X0
	096 Move [X19+84], S0
	097 Move X0, X19
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X30, [X31+48]
	103 Move X23, [X31+56]
	104 Call TMP_SubMesh.UpdateMaterial, X0
	105 Return 

Method: UnityEngine.Material get_fallbackSourceMaterial()

Disassembly:
	0x03B1A8D0 BL 0x3C385F8
	0x03B1A8D4 CBZ X20, 0x3B1A944

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_fallbackSourceMaterial(UnityEngine.Material value)

Disassembly:
	0x03B1A8D8 MOV W21, W0
	0x03B1A8DC MOV X0, X20

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Boolean get_isDefaultMaterial()

Disassembly:
	0x03B1A8E0 MOV X1, X31
	0x03B1A8E4 BL 0x3C385F8

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_isDefaultMaterial(System.Boolean value)

Disassembly:
	0x03B1A8E8 CMP W21, W0
	0x03B1A8EC B.NE 0x3B1A900
	0x03B1A8F0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

Method: System.Single get_padding()

Disassembly:
	0x03B1A8F4 LDP X22, X21, [X31 + 0x10]
	0x03B1A8F8 LDR X30, [X31], #0x30

ISIL:
	001 Move V0, [X0+84]
	002 Return V0

Method: System.Void set_padding(System.Single value)

Disassembly:
	0x03B1A8FC RET
	0x03B1A900 MOV X0, X19

ISIL:
	001 Move [X0+84], S0
	002 Return 

Method: UnityEngine.Renderer get_renderer()

Disassembly:
	0x03B1A904 STP X20, X20, [X19 + 0xE8]
	0x03B1A908 BL 0x3B1A948
	0x03B1A90C LDR X8, [X19]
	0x03B1A910 STR S0, [X19 + 0x10C]
	0x03B1A914 MOV X0, X19
	0x03B1A918 LDR X9, [X8 + 0x2F8]
	0x03B1A91C LDR X1, [X8 + 0x300]
	0x03B1A920 BLR X9
	0x03B1A924 LDR X8, [X19]
	0x03B1A928 MOV X0, X19
	0x03B1A92C LDP X20, X19, [X31 + 0x20]
	0x03B1A930 LDP X22, X21, [X31 + 0x10]
	0x03B1A934 LDR X2, [X8 + 0x308]
	0x03B1A938 LDR X1, [X8 + 0x310]
	0x03B1A93C LDR X30, [X31], #0x30
	0x03B1A940 BR X2
	0x03B1A944 BL 0x1C16F20
	0x03B1A948 STR X30, [X31 - 0x20]!
	0x03B1A94C STP X20, X19, [X31 + 0x10]
	0x03B1A950 ADRP X20, 0x8C8000
	0x03B1A954 LDRB W8, [X20 + 0x6EA]
	0x03B1A958 MOV X19, X0
	0x03B1A95C TBNZ X8, 0x0, 0x3B1A974
	0x03B1A960 ADRP X0, 0x63E000
	0x03B1A964 LDR X0, [X0 + 0x338]
	0x03B1A968 BL 0x1C16CF4
	0x03B1A96C MOVZ W8, 0x1
	0x03B1A970 STRB W8, [X20 + 0x6EA]
	0x03B1A974 LDR X8, [X19 + 0x118]
	0x03B1A978 CBZ X8, 0x3B1A9B8
	0x03B1A97C ADRP X9, 0x63E000
	0x03B1A980 LDR X9, [X9 + 0x338]
	0x03B1A984 LDR X19, [X19 + 0xF0]
	0x03B1A988 LDRB W20, [X8 + 0x300]
	0x03B1A98C LDR X0, [X9]
	0x03B1A990 LDR W9, [X0 + 0xE0]
	0x03B1A994 CBNZ W9, 0x3B1A99C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C9000
	006 Move X20, 0x5DA000
	007 Move W8, [X21+1744]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x606000
	015 Move X0, [X0+1440]
	016 Call 0x1C17CF4
	017 Move X0, 0x5DA000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1744], W8
	022 Move X0, [X20]
	023 Move X20, [X19+88]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x606000
	037 Move X8, [X8+1440]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+88], X0
	042 Move X0, [X19+88]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: UnityEngine.MeshFilter get_meshFilter()

Disassembly:
	0x03B1A998 BL 0x1C16DFC
	0x03B1A99C CMP W20, 0x0
	0x03B1A9A0 MOV X0, X19
	0x03B1A9A4 LDP X20, X19, [X31 + 0x10]
	0x03B1A9A8 CSET W1, NE
	0x03B1A9AC MOV W2, W31
	0x03B1A9B0 LDR X30, [X31], #0x20
	0x03B1A9B4 B 0x3B15054
	0x03B1A9B8 BL 0x1C16F20
	0x03B1A9BC LDR X0, [X0 + 0xF0]
	0x03B1A9C0 RET
	0x03B1A9C4 STP X30, X19, [X31 - 0x10]!
	0x03B1A9C8 MOV X19, X0
	0x03B1A9CC STR X1, [X0 + 0xF0]
	0x03B1A9D0 STR X1, [X0 + 0x20]
	0x03B1A9D4 BL 0x3B1A948
	0x03B1A9D8 LDR X8, [X19]
	0x03B1A9DC STR S0, [X19 + 0x10C]
	0x03B1A9E0 MOV X0, X19
	0x03B1A9E4 LDR X2, [X8 + 0x308]
	0x03B1A9E8 LDR X1, [X8 + 0x310]
	0x03B1A9EC LDP X30, X19, [X31], #0x10
	0x03B1A9F0 BR X2
	0x03B1A9F4 STP X30, X19, [X31 - 0x10]!
	0x03B1A9F8 MOV X19, X0
	0x03B1A9FC STR X1, [X0 + 0xF0]
	0x03B1AA00 STR X1, [X0 + 0x20]
	0x03B1AA04 BL 0x3B1A948
	0x03B1AA08 LDR X8, [X19]
	0x03B1AA0C STR S0, [X19 + 0x10C]
	0x03B1AA10 MOV X0, X19
	0x03B1AA14 LDR X2, [X8 + 0x308]
	0x03B1AA18 LDR X1, [X8 + 0x310]
	0x03B1AA1C LDP X30, X19, [X31], #0x10
	0x03B1AA20 BR X2
	0x03B1AA24 LDR X0, [X0 + 0xF8]
	0x03B1AA28 RET
	0x03B1AA2C STP X30, X23, [X31 - 0x30]!
	0x03B1AA30 STP X22, X21, [X31 + 0x10]
	0x03B1AA34 STP X20, X19, [X31 + 0x20]
	0x03B1AA38 ADRP X21, 0x8C8000
	0x03B1AA3C ADRP X22, 0x5D9000
	0x03B1AA40 LDRB W8, [X21 + 0x6E2]
	0x03B1AA44 LDR X22, [X22 + 0x598]
	0x03B1AA48 MOV X20, X1
	0x03B1AA4C MOV X19, X0
	0x03B1AA50 TBNZ X8, 0x0, 0x3B1AA74
	0x03B1AA54 ADRP X0, 0x5D9000
	0x03B1AA58 LDR X0, [X0 + 0x598]
	0x03B1AA5C BL 0x1C16CF4
	0x03B1AA60 ADRP X0, 0x63E000
	0x03B1AA64 LDR X0, [X0 + 0x620]
	0x03B1AA68 BL 0x1C16CF4
	0x03B1AA6C MOVZ W8, 0x1
	0x03B1AA70 STRB W8, [X21 + 0x6E2]
	0x03B1AA74 LDR X0, [X22]
	0x03B1AA78 LDR X21, [X19 + 0xF8]
	0x03B1AA7C LDR W8, [X0 + 0xE0]
	0x03B1AA80 CBNZ W8, 0x3B1AA88
	0x03B1AA84 BL 0x1C16DFC
	0x03B1AA88 MOV X0, X21
	0x03B1AA8C MOV X1, X20
	0x03B1AA90 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C9000
	006 Move X21, 0x5DA000
	007 Move W8, [X20+1745]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x5E1000
	015 Move X0, [X0+2872]
	016 Call 0x1C17CF4
	017 Move X0, 0x5E1000
	018 Move X0, [X0+1776]
	019 Call 0x1C17CF4
	020 Move X0, 0x5DA000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1745], W8
	025 Move X0, [X21]
	026 Move X20, [X19+96]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {74}
	039 Move X8, 0x5E1000
	040 Move X8, [X8+2872]
	041 Move X0, X19
	042 Move X1, [X8]
	043 Call 0x21A4894, X0
	044 Move [X19+96], X0
	045 Move X20, X0
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {74}
	059 Move X0, X19
	060 Move X1, X31
	061 Call Component.get_gameObject, X0
	062 Compare X0, 0
	063 JumpIfEqual {80}
	064 Move X8, 0x5E1000
	065 Move X8, [X8+1776]
	066 Move X1, [X8]
	067 Call 0x21E61FC, X0
	068 Move [X19+96], X0
	069 Compare X0, 0
	070 JumpIfEqual {80}
	071 Move W1, 63
	072 Move X2, X31
	073 Call Object.set_hideFlags, X0, X1
	074 Move X0, [X19+96]
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Call 0x1C17F20

Method: UnityEngine.Mesh get_mesh()

Disassembly:
	0x03B1AA94 BL 0x3C3883C
	0x03B1AA98 TBZ X0, 0x0, 0x3B1AAAC
	0x03B1AA9C LDP X20, X19, [X31 + 0x20]
	0x03B1AAA0 LDP X22, X21, [X31 + 0x10]
	0x03B1AAA4 LDP X30, X23, [X31], #0x30
	0x03B1AAA8 RET
	0x03B1AAAC LDR X0, [X22]
	0x03B1AAB0 LDR X21, [X19 + 0xF8]
	0x03B1AAB4 LDR W8, [X0 + 0xE0]
	0x03B1AAB8 CBNZ W8, 0x3B1AAC0
	0x03B1AABC BL 0x1C16DFC
	0x03B1AAC0 ADRP X23, 0x63E000
	0x03B1AAC4 LDR X23, [X23 + 0x620]
	0x03B1AAC8 MOV X0, X21
	0x03B1AACC MOV X1, X31
	0x03B1AAD0 MOV X2, X31
	0x03B1AAD4 BL 0x3C354F8
	0x03B1AAD8 TBZ X0, 0x0, 0x3B1AB20
	0x03B1AADC LDR X0, [X22]
	0x03B1AAE0 LDR X21, [X19 + 0xF8]
	0x03B1AAE4 LDR W8, [X0 + 0xE0]
	0x03B1AAE8 CBNZ W8, 0x3B1AAF0
	0x03B1AAEC BL 0x1C16DFC
	0x03B1AAF0 MOV X0, X21
	0x03B1AAF4 MOV X1, X20
	0x03B1AAF8 MOV X2, X31
	0x03B1AAFC BL 0x3C354F8
	0x03B1AB00 TBZ X0, 0x0, 0x3B1AB20
	0x03B1AB04 LDR X0, [X23]
	0x03B1AB08 LDR X21, [X19 + 0xF8]
	0x03B1AB0C LDR W8, [X0 + 0xE0]
	0x03B1AB10 CBNZ W8, 0x3B1AB18
	0x03B1AB14 BL 0x1C16DFC
	0x03B1AB18 MOV X0, X21
	0x03B1AB1C BL 0x3B10BA8
	0x03B1AB20 STR X20, [X19 + 0xF8]
	0x03B1AB24 LDR X0, [X23]
	0x03B1AB28 LDR W8, [X0 + 0xE0]
	0x03B1AB2C CBNZ W8, 0x3B1AB34
	0x03B1AB30 BL 0x1C16DFC
	0x03B1AB34 MOV X0, X20
	0x03B1AB38 BL 0x3B10894
	0x03B1AB3C LDR X8, [X19 + 0xF8]
	0x03B1AB40 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C9000
	006 Move X20, 0x5DA000
	007 Move W8, [X21+1746]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5E1000
	015 Move X0, [X0+1792]
	016 Call 0x1C17CF4
	017 Move X0, 0x5DA000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1746], W8
	022 Move X0, [X20]
	023 Move X20, [X19+104]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {50}
	036 Move X8, 0x5E1000
	037 Move X8, [X8+1792]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call Mesh..ctor, X0
	043 Move [X19+104], X20
	044 Compare X20, 0
	045 JumpIfEqual {56}
	046 Move W1, 61
	047 Move X0, X20
	048 Move X2, X31
	049 Call Object.set_hideFlags, X0, X1
	050 Move X0, [X19+104]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void set_mesh(UnityEngine.Mesh value)

Disassembly:
	0x03B1AB44 STR X8, [X19 + 0xF0]
	0x03B1AB48 STR X8, [X19 + 0x20]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: TMPro.TMP_Text get_textComponent()

Disassembly:
	0x03B1AB4C BL 0x3B1A948
	0x03B1AB50 LDR X8, [X19]
	0x03B1AB54 STR S0, [X19 + 0x10C]
	0x03B1AB58 MOV X0, X19
	0x03B1AB5C LDP X20, X19, [X31 + 0x20]
	0x03B1AB60 LDR X2, [X8 + 0x308]
	0x03B1AB64 LDR X1, [X8 + 0x310]
	0x03B1AB68 LDP X22, X21, [X31 + 0x10]
	0x03B1AB6C LDP X30, X23, [X31], #0x30
	0x03B1AB70 BR X2
	0x03B1AB74 LDR X0, [X0 + 0x100]
	0x03B1AB78 RET
	0x03B1AB7C STR X1, [X0 + 0x100]
	0x03B1AB80 RET
	0x03B1AB84 STP X30, X21, [X31 - 0x20]!
	0x03B1AB88 STP X20, X19, [X31 + 0x10]
	0x03B1AB8C ADRP X21, 0x8C8000
	0x03B1AB90 ADRP X20, 0x63E000
	0x03B1AB94 LDRB W8, [X21 + 0x6E3]
	0x03B1AB98 LDR X20, [X20 + 0x620]
	0x03B1AB9C MOV X19, X0
	0x03B1ABA0 TBNZ X8, 0x0, 0x3B1ABB8
	0x03B1ABA4 ADRP X0, 0x63E000
	0x03B1ABA8 LDR X0, [X0 + 0x620]
	0x03B1ABAC BL 0x1C16CF4
	0x03B1ABB0 MOVZ W8, 0x1
	0x03B1ABB4 STRB W8, [X21 + 0x6E3]
	0x03B1ABB8 LDR X0, [X20]
	0x03B1ABBC LDR X20, [X19 + 0xF0]
	0x03B1ABC0 LDR W8, [X0 + 0xE0]
	0x03B1ABC4 CBNZ W8, 0x3B1ABCC
	0x03B1ABC8 BL 0x1C16DFC
	0x03B1ABCC MOV X0, X19
	0x03B1ABD0 MOV X1, X20
	0x03B1ABD4 LDP X20, X19, [X31 + 0x10]
	0x03B1ABD8 LDP X30, X21, [X31], #0x20
	0x03B1ABDC B 0x3B0FD30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C9000
	006 Move X20, 0x5DA000
	007 Move W8, [X21+1747]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x640000
	015 Move X0, [X0+2584]
	016 Call 0x1C17CF4
	017 Move X0, 0x5DA000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1747], W8
	022 Move X0, [X20]
	023 Move X20, [X19+112]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x640000
	037 Move X8, [X8+2584]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4F50, X0
	041 Move [X19+112], X0
	042 Move X0, [X19+112]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: TMPro.TMP_SubMesh AddSubTextObject(TMPro.TextMeshPro textComponent, TMPro.MaterialReference materialReference)

Disassembly:
	0x03B1ABE0 LDRB W0, [X0 + 0x108]
	0x03B1ABE4 RET
	0x03B1ABE8 AND W8, W1, 0x1
	0x03B1ABEC STRB W8, [X0 + 0x108]
	0x03B1ABF0 RET
	0x03B1ABF4 LDR V0, [X0 + 0x10C]
	0x03B1ABF8 RET
	0x03B1ABFC STR S0, [X0 + 0x10C]
	0x03B1AC00 RET
	0x03B1AC04 STP X30, X21, [X31 - 0x20]!
	0x03B1AC08 STP X20, X19, [X31 + 0x10]
	0x03B1AC0C ADRP X21, 0x8C8000
	0x03B1AC10 ADRP X20, 0x5D9000
	0x03B1AC14 LDRB W8, [X21 + 0x6E4]
	0x03B1AC18 LDR X20, [X20 + 0x598]
	0x03B1AC1C MOV X19, X0
	0x03B1AC20 TBNZ X8, 0x0, 0x3B1AC44
	0x03B1AC24 ADRP X0, 0x5E0000
	0x03B1AC28 LDR X0, [X0 + 0x700]
	0x03B1AC2C BL 0x1C16CF4
	0x03B1AC30 ADRP X0, 0x5D9000
	0x03B1AC34 LDR X0, [X0 + 0x598]
	0x03B1AC38 BL 0x1C16CF4
	0x03B1AC3C MOVZ W8, 0x1
	0x03B1AC40 STRB W8, [X21 + 0x6E4]
	0x03B1AC44 LDR X0, [X20]
	0x03B1AC48 LDR X20, [X19 + 0x110]
	0x03B1AC4C LDR W8, [X0 + 0xE0]
	0x03B1AC50 CBNZ W8, 0x3B1AC58
	0x03B1AC54 BL 0x1C16DFC
	0x03B1AC58 MOV X0, X20
	0x03B1AC5C MOV X1, X31
	0x03B1AC60 MOV X2, X31
	0x03B1AC64 BL 0x3C3883C
	0x03B1AC68 TBZ X0, 0x0, 0x3B1ACA0
	0x03B1AC6C ADRP X8, 0x5E0000
	0x03B1AC70 LDR X8, [X8 + 0x700]
	0x03B1AC74 LDR X0, [X8]
	0x03B1AC78 BL 0x1C16F10
	0x03B1AC7C MOV X1, X31
	0x03B1AC80 MOV X20, X0
	0x03B1AC84 BL 0x3C17028
	0x03B1AC88 STR X20, [X19 + 0x110]
	0x03B1AC8C CBZ X20, 0x3B1ACB0
	0x03B1AC90 MOVZ W1, 0x3D
	0x03B1AC94 MOV X0, X20
	0x03B1AC98 MOV X2, X31
	0x03B1AC9C BL 0x3C396EC
	0x03B1ACA0 LDR X0, [X19 + 0x110]
	0x03B1ACA4 LDP X20, X19, [X31 + 0x10]
	0x03B1ACA8 LDP X30, X21, [X31], #0x20
	0x03B1ACAC RET
	0x03B1ACB0 BL 0x1C16F20
	0x03B1ACB4 STR X1, [X0 + 0x110]
	0x03B1ACB8 RET
	0x03B1ACBC STP X30, X21, [X31 - 0x20]!
	0x03B1ACC0 STP X20, X19, [X31 + 0x10]
	0x03B1ACC4 ADRP X21, 0x8C8000
	0x03B1ACC8 ADRP X20, 0x5D9000
	0x03B1ACCC LDRB W8, [X21 + 0x6E5]
	0x03B1ACD0 LDR X20, [X20 + 0x598]
	0x03B1ACD4 MOV X19, X0
	0x03B1ACD8 TBNZ X8, 0x0, 0x3B1ACFC
	0x03B1ACDC ADRP X0, 0x63F000
	0x03B1ACE0 LDR X0, [X0 + 0xA38]
	0x03B1ACE4 BL 0x1C16CF4
	0x03B1ACE8 ADRP X0, 0x5D9000
	0x03B1ACEC LDR X0, [X0 + 0x598]
	0x03B1ACF0 BL 0x1C16CF4
	0x03B1ACF4 MOVZ W8, 0x1
	0x03B1ACF8 STRB W8, [X21 + 0x6E5]
	0x03B1ACFC LDR X0, [X20]
	0x03B1AD00 LDR X20, [X19 + 0x118]
	0x03B1AD04 LDR W8, [X0 + 0xE0]
	0x03B1AD08 CBNZ W8, 0x3B1AD10
	0x03B1AD0C BL 0x1C16DFC
	0x03B1AD10 MOV X0, X20
	0x03B1AD14 MOV X1, X31
	0x03B1AD18 MOV X2, X31
	0x03B1AD1C BL 0x3C3883C
	0x03B1AD20 TBZ X0, 0x0, 0x3B1AD40
	0x03B1AD24 ADRP X8, 0x63F000
	0x03B1AD28 LDR X8, [X8 + 0xA38]
	0x03B1AD2C MOV X0, X19
	0x03B1AD30 LDR X1, [X8]
	0x03B1AD34 BL 0x21A3F50
	0x03B1AD38 STR X0, [X19 + 0x118]
	0x03B1AD3C B 0x3B1AD44
	0x03B1AD40 LDR X0, [X19 + 0x118]
	0x03B1AD44 LDP X20, X19, [X31 + 0x10]
	0x03B1AD48 LDP X30, X21, [X31], #0x20
	0x03B1AD4C RET
	0x03B1AD50 STP X30, X25, [X31 - 0x40]!
	0x03B1AD54 STP X24, X23, [X31 + 0x10]
	0x03B1AD58 STP X22, X21, [X31 + 0x20]
	0x03B1AD5C STP X20, X19, [X31 + 0x30]
	0x03B1AD60 ADRP X21, 0x8C8000
	0x03B1AD64 LDRB W8, [X21 + 0x6E6]
	0x03B1AD68 MOV X19, X1
	0x03B1AD6C MOV X20, X0
	0x03B1AD70 TBNZ X8, 0x0, 0x3B1ADE8
	0x03B1AD74 ADRP X0, 0x639000
	0x03B1AD78 LDR X0, [X0 + 0xCC0]
	0x03B1AD7C BL 0x1C16CF4
	0x03B1AD80 ADRP X0, 0x63F000
	0x03B1AD84 LDR X0, [X0 + 0xA40]
	0x03B1AD88 BL 0x1C16CF4
	0x03B1AD8C ADRP X0, 0x639000
	0x03B1AD90 LDR X0, [X0 + 0xB40]
	0x03B1AD94 BL 0x1C16CF4
	0x03B1AD98 ADRP X0, 0x5D9000
	0x03B1AD9C LDR X0, [X0 + 0xA58]
	0x03B1ADA0 BL 0x1C16CF4
	0x03B1ADA4 ADRP X0, 0x63F000
	0x03B1ADA8 LDR X0, [X0 + 0xA48]
	0x03B1ADAC BL 0x1C16CF4
	0x03B1ADB0 ADRP X0, 0x5E1000
	0x03B1ADB4 LDR X0, [X0 + 0xC60]
	0x03B1ADB8 BL 0x1C16CF4
	0x03B1ADBC ADRP X0, 0x5D9000
	0x03B1ADC0 LDR X0, [X0 + 0x6C0]
	0x03B1ADC4 BL 0x1C16CF4
	0x03B1ADC8 ADRP X0, 0x63F000
	0x03B1ADCC LDR X0, [X0 + 0xA50]
	0x03B1ADD0 BL 0x1C16CF4
	0x03B1ADD4 ADRP X0, 0x5D9000
	0x03B1ADD8 LDR X0, [X0 + 0x848]
	0x03B1ADDC BL 0x1C16CF4
	0x03B1ADE0 MOVZ W8, 0x1
	0x03B1ADE4 STRB W8, [X21 + 0x6E6]
	0x03B1ADE8 LDR X0, [X19 + 0x18]
	0x03B1ADEC CBZ X0, 0x3B1B0EC
	0x03B1ADF0 ADRP X21, 0x63F000
	0x03B1ADF4 ADRP X22, 0x5D9000
	0x03B1ADF8 ADRP X23, 0x5E1000
	0x03B1ADFC ADRP X24, 0x63F000
	0x03B1AE00 ADRP X25, 0x5D9000
	0x03B1AE04 LDR X21, [X21 + 0xA50]
	0x03B1AE08 LDR X22, [X22 + 0x848]
	0x03B1AE0C LDR X23, [X23 + 0xC60]
	0x03B1AE10 LDR X24, [X24 + 0xA48]
	0x03B1AE14 LDR X25, [X25 + 0x6C0]
	0x03B1AE18 MOV X1, X31
	0x03B1AE1C BL 0x3C389D4
	0x03B1AE20 LDR X8, [X21]
	0x03B1AE24 LDR X2, [X22]
	0x03B1AE28 MOV X1, X0
	0x03B1AE2C MOV X3, X31
	0x03B1AE30 MOV X0, X8
	0x03B1AE34 BL 0x32274B8
	0x03B1AE38 LDR X8, [X23]
	0x03B1AE3C MOV X22, X0
	0x03B1AE40 MOVZ W1, 0x1
	0x03B1AE44 MOV X0, X8
	0x03B1AE48 BL 0x1C16D6C
	0x03B1AE4C LDR X8, [X25]
	0x03B1AE50 LDR X21, [X24]
	0x03B1AE54 MOV X23, X0
	0x03B1AE58 LDR W9, [X8 + 0xE0]
	0x03B1AE5C CBNZ W9, 0x3B1AE68
	0x03B1AE60 MOV X0, X8
	0x03B1AE64 BL 0x1C16DFC
	0x03B1AE68 MOV X0, X21
	0x03B1AE6C MOV X1, X31
	0x03B1AE70 BL 0x338C698
	0x03B1AE74 CBZ X23, 0x3B1B0EC
	0x03B1AE78 MOV X21, X0
	0x03B1AE7C CBZ X0, 0x3B1AE94
	0x03B1AE80 LDR X8, [X23]
	0x03B1AE84 MOV X0, X21
	0x03B1AE88 LDR X1, [X8 + 0x40]
	0x03B1AE8C BL 0x1C16E00
	0x03B1AE90 CBZ X0, 0x3B1B0F4
	0x03B1AE94 LDR W8, [X23 + 0x18]
	0x03B1AE98 CBZ W8, 0x3B1B0F0
	0x03B1AE9C ADRP X8, 0x5D9000
	0x03B1AEA0 LDR X8, [X8 + 0xA58]
	0x03B1AEA4 STR X21, [X23 + 0x20]
	0x03B1AEA8 LDR X0, [X8]
	0x03B1AEAC BL 0x1C16F10
	0x03B1AEB0 MOV X1, X22
	0x03B1AEB4 MOV X2, X23
	0x03B1AEB8 MOV X3, X31
	0x03B1AEBC MOV X21, X0
	0x03B1AEC0 BL 0x3C35A8C
	0x03B1AEC4 CBZ X21, 0x3B1B0EC
	0x03B1AEC8 MOVZ W1, 0x34
	0x03B1AECC MOV X0, X21
	0x03B1AED0 MOV X2, X31
	0x03B1AED4 BL 0x3C396EC
	0x03B1AED8 MOV X0, X21
	0x03B1AEDC MOV X1, X31
	0x03B1AEE0 BL 0x3C356F8
	0x03B1AEE4 CBZ X20, 0x3B1B0EC
	0x03B1AEE8 MOV X22, X0
	0x03B1AEEC MOV X0, X20
	0x03B1AEF0 MOV X1, X31
	0x03B1AEF4 BL 0x3AF8D78
	0x03B1AEF8 CBZ X22, 0x3B1B0EC
	0x03B1AEFC MOV X1, X0
	0x03B1AF00 MOV X0, X22
	0x03B1AF04 MOV W2, W31
	0x03B1AF08 MOV X3, X31
	0x03B1AF0C BL 0x3C3FEB8
	0x03B1AF10 MOV X0, X21
	0x03B1AF14 MOV X1, X31
	0x03B1AF18 BL 0x3C356F8
	0x03B1AF1C CBZ X0, 0x3B1B0EC
	0x03B1AF20 MOV X1, X31
	0x03B1AF24 BL 0x3C40CC8
	0x03B1AF28 MOV X0, X20
	0x03B1AF2C MOV X1, X31
	0x03B1AF30 BL 0x3C32ECC
	0x03B1AF34 CBZ X0, 0x3B1B0EC
	0x03B1AF38 ADRP X22, 0x639000
	0x03B1AF3C LDR X22, [X22 + 0xB40]
	0x03B1AF40 MOV X1, X31
	0x03B1AF44 BL 0x3C35734
	0x03B1AF48 MOV W1, W0
	0x03B1AF4C MOV X0, X21
	0x03B1AF50 MOV X2, X31
	0x03B1AF54 BL 0x3C35770
	0x03B1AF58 LDR X1, [X22]
	0x03B1AF5C MOV X0, X21
	0x03B1AF60 BL 0x21E52E4
	0x03B1AF64 ADRP X23, 0x8BF000
	0x03B1AF68 LDRB W8, [X23 + 0x78F]
	0x03B1AF6C MOV X22, X0
	0x03B1AF70 CBNZ W8, 0x3B1AF88
	0x03B1AF74 ADRP X0, 0x5E1000
	0x03B1AF78 LDR X0, [X0 + 0xF08]
	0x03B1AF7C BL 0x1C16CF4
	0x03B1AF80 MOVZ W8, 0x1
	0x03B1AF84 STRB W8, [X23 + 0x78F]
	0x03B1AF88 CBZ X22, 0x3B1B0EC
	0x03B1AF8C ADRP X24, 0x5E1000
	0x03B1AF90 LDR X24, [X24 + 0xF08]
	0x03B1AF94 MOV X0, X22
	0x03B1AF98 MOV X1, X31
	0x03B1AF9C LDR X8, [X24]
	0x03B1AFA0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x8C9000
	010 Move W8, [X21+1748]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x640000
	018 Move X0, [X0+2592]
	019 Call 0x1C17CF4
	020 Move X0, 0x5DA000
	021 Move X0, [X0+2648]
	022 Call 0x1C17CF4
	023 Move X0, 0x640000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x5E2000
	027 Move X0, [X0+3168]
	028 Call 0x1C17CF4
	029 Move X0, 0x5DA000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x640000
	033 Move X0, [X0+2608]
	034 Call 0x1C17CF4
	035 Move X0, 0x5DA000
	036 Move X0, [X0+2120]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+1748], W8
	040 Move X0, [X20+24]
	041 Compare X0, 0
	042 JumpIfEqual {273}
	043 Move X21, 0x640000
	044 Move X22, 0x5DA000
	045 Move X23, 0x5E2000
	046 Move X24, 0x640000
	047 Move X25, 0x5DA000
	048 Move X21, [X21+2608]
	049 Move X22, [X22+2120]
	050 Move X23, [X23+3168]
	051 Move X24, [X24+2600]
	052 Move X25, [X25+1728]
	053 Move X1, X31
	054 Call Object.get_name, X0
	055 Move X8, [X21]
	056 Move X2, [X22]
	057 Move X1, X0
	058 Move X3, X31
	059 Move X0, X8
	060 Call String.Concat, X0, X1, X2
	061 Move X8, [X23]
	062 Move X21, X0
	063 Move W1, 1
	064 Move X0, X8
	065 Call 0x1C17D6C
	066 Move X8, [X25]
	067 Move X22, [X24]
	068 Move X23, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X22
	075 Move X1, X31
	076 Call Type.GetTypeFromHandle, X0
	077 Compare X23, 0
	078 JumpIfEqual {273}
	079 Move X22, X0
	080 Compare X0, 0
	081 JumpIfEqual {88}
	082 Move X8, [X23]
	083 Move X0, X22
	084 Move X1, [X8+64]
	085 Call 0x1C17E00
	086 Compare X0, 0
	087 JumpIfEqual {275}
	088 Move W8, [X23+24]
	089 Compare W8, 0
	090 JumpIfEqual {274}
	091 Move X8, 0x5DA000
	092 Move X8, [X8+2648]
	093 Move [X23+32], X22
	094 Move X0, [X8]
	095 Call 0x1C17F10
	096 Move X1, X21
	097 Move X2, X23
	098 Move X3, X31
	099 Move X22, X0
	100 Call GameObject..ctor, X0, X1, X2
	101 Compare X22, 0
	102 JumpIfEqual {273}
	103 Move X21, 0x640000
	104 Move X21, [X21+2592]
	105 Move W1, 52
	106 Move X0, X22
	107 Move X2, X31
	108 Call Object.set_hideFlags, X0, X1
	109 Move X1, [X21]
	110 Move X0, X22
	111 Call 0x21E62E4, X0
	112 Move X21, X0
	113 Move X0, X22
	114 Move X1, X31
	115 Call GameObject.get_transform, X0
	116 Compare X19, 0
	117 JumpIfEqual {273}
	118 Move X23, X0
	119 Move X0, X19
	120 Move X1, X31
	121 Call TextMeshPro.get_transform, X0
	122 Compare X23, 0
	123 JumpIfEqual {273}
	124 Move X1, X0
	125 Move X0, X23
	126 Move W2, W31
	127 Move X3, X31
	128 Call Transform.SetParent, X0, X1, X2
	129 Move X0, X22
	130 Move X1, X31
	131 Call GameObject.get_transform, X0
	132 Move X24, 0x8BF000
	133 Move W8, [X24+1923]
	134 Move X23, X0
	135 Compare W8, 0
	136 JumpIfNotEqual {142}
	137 Move X0, 0x5DA000
	138 Move X0, [X0+1440]
	139 Call 0x1C17CF4
	140 Move W8, 1
	141 Move [X24+1923], W8
	142 Compare X23, 0
	143 JumpIfEqual {273}
	144 Move X24, 0x5DA000
	145 Move X24, [X24+1440]
	146 Move X0, X23
	147 Move X1, X31
	148 Move X8, [X24]
	149 Move X8, [X8+184]
	150 Move S1, [X8+4]
	151 Move S2, [X8+8]
	152 Move V0, [X8]
	153 Call Transform.set_localPosition, X0, X1
	154 Move X0, X22
	155 Move X1, X31
	156 Call GameObject.get_transform, X0
	157 Move X25, 0x8BF000
	158 Move W8, [X25+1939]
	159 Move X23, X0
	160 Compare W8, 0
	161 JumpIfNotEqual {167}
	162 Move X0, 0x5DB000
	163 Move X0, [X0+1448]
	164 Call 0x1C17CF4
	165 Move W8, 1
	166 Move [X25+1939], W8
	167 Compare X23, 0
	168 JumpIfEqual {273}
	169 Move X8, 0x5DB000
	170 Move X8, [X8+1448]
	171 Move X0, X23
	172 Move X1, X31
	173 Move X8, [X8]
	174 Move X8, [X8+184]
	175 Move S2, [X8+8]
	176 Move S3, [X8+12]
	177 Move S0, [X8]
	178 Move S1, [X8+4]
	179 Call Transform.set_localRotation, X0, X1
	180 Move X0, X22
	181 Move X1, X31
	182 Call GameObject.get_transform, X0
	183 Move X25, 0x8BF000
	184 Move W8, [X25+2139]
	185 Move X23, X0
	186 Compare W8, 0
	187 JumpIfNotEqual {193}
	188 Move X0, 0x5DA000
	189 Move X0, [X0+1440]
	190 Call 0x1C17CF4
	191 Move W8, 1
	192 Move [X25+2139], W8
	193 Compare X23, 0
	194 JumpIfEqual {273}
	195 Move X8, [X24]
	196 Move X0, X23
	197 Move X1, X31
	198 Move X8, [X8+184]
	199 Move S1, [X8+16]
	200 Move S2, [X8+20]
	201 Move V0, [X8+12]
	202 Call Transform.set_localScale, X0, X1
	203 Move X0, X19
	204 Move X1, X31
	205 Call Component.get_gameObject, X0
	206 Compare X0, 0
	207 JumpIfEqual {273}
	208 Move X1, X31
	209 Call GameObject.get_layer, X0
	210 Move W1, W0
	211 Move X0, X22
	212 Move X2, X31
	213 Call GameObject.set_layer, X0, X1
	214 Compare X21, 0
	215 JumpIfEqual {273}
	216 Move [X21+112], X19
	217 Move X8, [X20+8]
	218 Move X0, X21
	219 Move [X21+32], X8
	220 Move X8, [X20+16]
	221 Move [X21+40], X8
	222 Move W8, [X20+32]
	223 And W8, W8, 1
	224 Move [X21+80], W8
	225 Move X8, [X20+24]
	226 Move [X21+56], X8
	227 Call TMP_SubMesh.GetPaddingForMaterial, X0
	228 Move X0, X21
	229 Move [X21+84], S0
	230 Call TMP_SubMesh.UpdateMaterial, X0
	231 Move X0, X21
	232 Call TMP_SubMesh.get_renderer, X0
	233 Move X20, X0
	234 Move X0, X19
	235 Move X1, X31
	236 Call TextMeshPro.get_renderer, X0
	237 Compare X0, 0
	238 JumpIfEqual {273}
	239 Move X1, X31
	240 Call Renderer.get_sortingLayerID, X0
	241 Compare X20, 0
	242 JumpIfEqual {273}
	243 Move W1, W0
	244 Move X0, X20
	245 Move X2, X31
	246 Call Renderer.set_sortingLayerID, X0, X1
	247 Move X0, X21
	248 Call TMP_SubMesh.get_renderer, X0
	249 Move X20, X0
	250 Move X0, X19
	251 Move X1, X31
	252 Call TextMeshPro.get_renderer, X0
	253 Compare X0, 0
	254 JumpIfEqual {273}
	255 Move X1, X31
	256 Call Renderer.get_sortingOrder, X0
	257 Compare X20, 0
	258 JumpIfEqual {273}
	259 Move W1, W0
	260 Move X0, X20
	261 Move X2, X31
	262 Call Renderer.set_sortingOrder, X0, X1
	263 Move X0, X21
	264 Move X20, [X31+48]
	265 Move X19, [X31+56]
	266 Move X22, [X31+32]
	267 Move X21, [X31+40]
	268 Move X24, [X31+16]
	269 Move X23, [X31+24]
	270 Move X30, [X31+64]
	271 Move X25, [X31+72]
	272 Return X0
	273 Call 0x1C17F20
	274 Call 0x1C17F28
	275 Call 0x1C17F44
	276 Move X1, X31
	277 Call 0x1C17DEC

Method: System.Void OnEnable()

Disassembly:
	0x03B1AFA4 LDP S0, S1, [X8]
	0x03B1AFA8 BL 0x3C3E648
	0x03B1AFAC ADRP X25, 0x8C7000
	0x03B1AFB0 LDRB W8, [X25 + 0xA48]
	0x03B1AFB4 CBNZ W8, 0x3B1AFCC
	0x03B1AFB8 ADRP X0, 0x5E1000
	0x03B1AFBC LDR X0, [X0 + 0xF08]
	0x03B1AFC0 BL 0x1C16CF4
	0x03B1AFC4 MOVZ W8, 0x1
	0x03B1AFC8 STRB W8, [X25 + 0xA48]
	0x03B1AFCC LDR X8, [X24]
	0x03B1AFD0 MOV X0, X22
	0x03B1AFD4 MOV X1, X31
	0x03B1AFD8 LDR X8, [X8 + 0xB8]
	0x03B1AFDC LDP S0, S1, [X8 + 0x8]
	0x03B1AFE0 BL 0x3C3E764
	0x03B1AFE4 LDRB W8, [X23 + 0x78F]
	0x03B1AFE8 CBNZ W8, 0x3B1B000
	0x03B1AFEC ADRP X0, 0x5E1000
	0x03B1AFF0 LDR X0, [X0 + 0xF08]
	0x03B1AFF4 BL 0x1C16CF4
	0x03B1AFF8 MOVZ W8, 0x1
	0x03B1AFFC STRB W8, [X23 + 0x78F]
	0x03B1B000 LDR X8, [X24]
	0x03B1B004 MOV X0, X22
	0x03B1B008 MOV X1, X31
	0x03B1B00C LDR X8, [X8 + 0xB8]
	0x03B1B010 LDP S0, S1, [X8]
	0x03B1B014 BL 0x3C3E99C
	0x03B1B018 MOV X0, X20
	0x03B1B01C MOV X1, X31
	0x03B1B020 BL 0x3AF8E0C
	0x03B1B024 CBZ X0, 0x3B1B0EC
	0x03B1B028 ADRP X23, 0x638000
	0x03B1B02C LDR X23, [X23 + 0xCC0]
	0x03B1B030 MOV X1, X31
	0x03B1B034 BL 0x3C3EA28
	0x03B1B038 MOV X0, X22
	0x03B1B03C MOV X1, X31
	0x03B1B040 BL 0x3C3EAB8
	0x03B1B044 LDR X1, [X23]
	0x03B1B048 MOV X0, X21
	0x03B1B04C BL 0x21E51FC
	0x03B1B050 CBZ X0, 0x3B1B0EC
	0x03B1B054 LDR X8, [X0]
	0x03B1B058 ADRP X22, 0x63E000
	0x03B1B05C MOVZ W1, 0x1
	0x03B1B060 LDR X9, [X8 + 0x2F8]
	0x03B1B064 LDR X2, [X8 + 0x300]
	0x03B1B068 LDR X22, [X22 + 0xA40]
	0x03B1B06C BLR X9
	0x03B1B070 LDR X1, [X22]
	0x03B1B074 MOV X0, X21
	0x03B1B078 BL 0x21E51FC
	0x03B1B07C CBZ X0, 0x3B1B0EC
	0x03B1B080 STR X20, [X0 + 0x118]
	0x03B1B084 LDR W8, [X19]
	0x03B1B088 MOV X21, X0
	0x03B1B08C STR W8, [X0 + 0x124]
	0x03B1B090 LDR X8, [X19 + 0x8]
	0x03B1B094 STR X8, [X0 + 0xD8]
	0x03B1B098 LDR X8, [X19 + 0x10]
	0x03B1B09C STR X8, [X0 + 0xE0]
	0x03B1B0A0 LDRB W8, [X19 + 0x20]
	0x03B1B0A4 AND W8, W8, 0x1
	0x03B1B0A8 STRB W8, [X0 + 0x108]
	0x03B1B0AC LDR X8, [X19 + 0x18]
	0x03B1B0B0 STR X8, [X0 + 0xF0]
	0x03B1B0B4 STR X8, [X0 + 0x20]
	0x03B1B0B8 BL 0x3B1A948
	0x03B1B0BC LDR X8, [X21]
	0x03B1B0C0 STR S0, [X21 + 0x10C]
	0x03B1B0C4 MOV X0, X21
	0x03B1B0C8 LDR X9, [X8 + 0x308]
	0x03B1B0CC LDR X1, [X8 + 0x310]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C9000
	006 Move W8, [X20+1749]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x5DA000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x63F000
	016 Move X0, [X0+824]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1749], W8
	020 Move W8, [X19+120]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Move W8, 1
	024 Move [X19+120], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object.get_hideFlags, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W1, 52
	030 Move X0, X19
	031 Move X2, X31
	032 Call Object.set_hideFlags, X0, X1
	033 Move X0, X19
	034 Call TMP_SubMesh.get_meshFilter, X0
	035 Move X20, X0
	036 Move X0, X19
	037 Call TMP_SubMesh.get_mesh, X0
	038 Compare X20, 0
	039 JumpIfEqual {92}
	040 Move X21, 0x5D9000
	041 Move X21, [X21+1432]
	042 Move X1, X0
	043 Move X0, X20
	044 Move X2, X31
	045 Call MeshFilter.set_sharedMesh, X0, X1
	046 Move X0, [X21]
	047 Move X20, [X19+56]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Inequality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {87}
	060 Move X20, 0x63E000
	061 Move X20, [X20+824]
	062 Move X19, [X19+56]
	063 Move X0, [X20]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Compare X19, 0
	069 JumpIfEqual {92}
	070 Move X8, [X20]
	071 Move X9, -50528256
	072 Move X10, -50528256
	073 Move V0, [X9+532]
	074 Move X8, [X8+184]
	075 Move V2, [X10+884]
	076 Move X0, X19
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move W1, [X8+156]
	080 Move V1, V0
	081 Move V3, V2
	082 Move X2, X31
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Call Material.SetVector, X0, X1, X2
	086 Return 
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 
	092 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x03B1B0D0 BLR X9
	0x03B1B0D4 MOV X0, X21
	0x03B1B0D8 LDP X20, X19, [X31 + 0x30]
	0x03B1B0DC LDP X22, X21, [X31 + 0x20]
	0x03B1B0E0 LDP X24, X23, [X31 + 0x10]
	0x03B1B0E4 LDP X30, X25, [X31], #0x40
	0x03B1B0E8 RET
	0x03B1B0EC BL 0x1C16F20
	0x03B1B0F0 BL 0x1C16F28
	0x03B1B0F4 BL 0x1C16F44
	0x03B1B0F8 MOV X1, X31
	0x03B1B0FC BL 0x1C16DEC
	0x03B1B100 STP X30, X19, [X31 - 0x10]!
	0x03B1B104 LDRB W8, [X0 + 0x120]
	0x03B1B108 MOV X19, X0
	0x03B1B10C CBNZ W8, 0x3B1B118
	0x03B1B110 MOVZ W8, 0x1
	0x03B1B114 STRB W8, [X19 + 0x120]
	0x03B1B118 MOV X0, X19
	0x03B1B11C MOV X1, X31
	0x03B1B120 BL 0x3C396B0
	0x03B1B124 CMP W0, 0x34
	0x03B1B128 B.EQ 0x3B1B13C
	0x03B1B12C MOVZ W1, 0x34
	0x03B1B130 MOV X0, X19
	0x03B1B134 MOV X2, X31
	0x03B1B138 BL 0x3C396EC
	0x03B1B13C LDR X8, [X19]
	0x03B1B140 MOVZ W9, 0x1
	0x03B1B144 STRB W9, [X19 + 0xA1]
	0x03B1B148 MOV X0, X19
	0x03B1B14C LDR X9, [X8 + 0x528]
	0x03B1B150 LDR X1, [X8 + 0x530]
	0x03B1B154 BLR X9
	0x03B1B158 LDR X8, [X19]
	0x03B1B15C MOV X0, X19
	0x03B1B160 LDR X2, [X8 + 0x538]
	0x03B1B164 LDR X1, [X8 + 0x540]
	0x03B1B168 LDP X30, X19, [X31], #0x10
	0x03B1B16C BR X2
	0x03B1B170 STP X30, X21, [X31 - 0x20]!
	0x03B1B174 STP X20, X19, [X31 + 0x10]
	0x03B1B178 ADRP X21, 0x8C7000
	0x03B1B17C ADRP X20, 0x5D8000
	0x03B1B180 LDRB W8, [X21 + 0x6E7]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8C8000
	005 Move W8, [X20+1750]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x5D9000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move X0, 0x63E000
	015 Move X0, [X0+1568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1750], W8
	019 Move X0, [X19+96]
	020 Compare X0, 0
	021 JumpIfEqual {56}
	022 Move X20, 0x5D9000
	023 Move X20, [X20+1432]
	024 Move X1, X31
	025 Move X2, X31
	026 Call MeshFilter.set_sharedMesh, X0, X1
	027 Move X0, [X20]
	028 Move X20, [X19+64]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {52}
	041 Move X8, 0x63E000
	042 Move X8, [X8+1568]
	043 Move X20, [X19+64]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Call TMP_MaterialManager.ReleaseFallbackMaterial, X0
	051 Move [X19+64], X31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03B1B184 LDR X20, [X20 + 0x598]
	0x03B1B188 MOV X19, X0
	0x03B1B18C TBNZ X8, 0x0, 0x3B1B1B0
	0x03B1B190 ADRP X0, 0x5D8000
	0x03B1B194 LDR X0, [X0 + 0x598]
	0x03B1B198 BL 0x1C16CF4
	0x03B1B19C ADRP X0, 0x63D000
	0x03B1B1A0 LDR X0, [X0 + 0x620]
	0x03B1B1A4 BL 0x1C16CF4
	0x03B1B1A8 MOVZ W8, 0x1
	0x03B1B1AC STRB W8, [X21 + 0x6E7]
	0x03B1B1B0 MOV X0, X19
	0x03B1B1B4 MOV X1, X31
	0x03B1B1B8 BL 0x3E379EC
	0x03B1B1BC LDR X0, [X20]
	0x03B1B1C0 LDR X20, [X19 + 0xF8]
	0x03B1B1C4 LDR W8, [X0 + 0xE0]
	0x03B1B1C8 CBNZ W8, 0x3B1B1D0
	0x03B1B1CC BL 0x1C16DFC
	0x03B1B1D0 MOV X0, X20
	0x03B1B1D4 MOV X1, X31
	0x03B1B1D8 MOV X2, X31
	0x03B1B1DC BL 0x3C354F8
	0x03B1B1E0 TBZ X0, 0x0, 0x3B1B20C
	0x03B1B1E4 ADRP X8, 0x63D000
	0x03B1B1E8 LDR X8, [X8 + 0x620]
	0x03B1B1EC LDR X20, [X19 + 0xF8]
	0x03B1B1F0 LDR X0, [X8]
	0x03B1B1F4 LDR W8, [X0 + 0xE0]
	0x03B1B1F8 CBNZ W8, 0x3B1B200
	0x03B1B1FC BL 0x1C16DFC
	0x03B1B200 MOV X0, X20
	0x03B1B204 BL 0x3B10BA8
	0x03B1B208 STR X31, [X19 + 0xF8]
	0x03B1B20C LDP X20, X19, [X31 + 0x10]
	0x03B1B210 LDP X30, X21, [X31], #0x20
	0x03B1B214 RET
	0x03B1B218 STR X30, [X31 - 0x30]!
	0x03B1B21C STP X22, X21, [X31 + 0x10]
	0x03B1B220 STP X20, X19, [X31 + 0x20]
	0x03B1B224 ADRP X20, 0x8C7000
	0x03B1B228 ADRP X21, 0x5D8000
	0x03B1B22C LDRB W8, [X20 + 0x6E8]
	0x03B1B230 LDR X21, [X21 + 0x598]
	0x03B1B234 MOV X19, X0
	0x03B1B238 TBNZ X8, 0x0, 0x3B1B25C
	0x03B1B23C ADRP X0, 0x5D8000
	0x03B1B240 LDR X0, [X0 + 0x598]
	0x03B1B244 BL 0x1C16CF4
	0x03B1B248 ADRP X0, 0x63D000
	0x03B1B24C LDR X0, [X0 + 0x620]
	0x03B1B250 BL 0x1C16CF4
	0x03B1B254 MOVZ W8, 0x1
	0x03B1B258 STRB W8, [X20 + 0x6E8]
	0x03B1B25C LDR X0, [X21]
	0x03B1B260 LDR X20, [X19 + 0x110]
	0x03B1B264 LDR W8, [X0 + 0xE0]
	0x03B1B268 CBNZ W8, 0x3B1B270
	0x03B1B26C BL 0x1C16DFC
	0x03B1B270 MOV X0, X20
	0x03B1B274 MOV X1, X31
	0x03B1B278 MOV X2, X31
	0x03B1B27C BL 0x3C354F8
	0x03B1B280 TBZ X0, 0x0, 0x3B1B2A4
	0x03B1B284 LDR X0, [X21]
	0x03B1B288 LDR X20, [X19 + 0x110]
	0x03B1B28C LDR W8, [X0 + 0xE0]
	0x03B1B290 CBNZ W8, 0x3B1B298
	0x03B1B294 BL 0x1C16DFC
	0x03B1B298 MOV X0, X20
	0x03B1B29C MOV X1, X31
	0x03B1B2A0 BL 0x3C39564
	0x03B1B2A4 LDR X0, [X21]
	0x03B1B2A8 LDR X20, [X19 + 0xA8]
	0x03B1B2AC LDR W8, [X0 + 0xE0]
	0x03B1B2B0 CBNZ W8, 0x3B1B2B8
	0x03B1B2B4 BL 0x1C16DFC
	0x03B1B2B8 ADRP X22, 0x63D000
	0x03B1B2BC LDR X22, [X22 + 0x620]
	0x03B1B2C0 MOV X0, X20
	0x03B1B2C4 MOV X1, X31
	0x03B1B2C8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C8000
	006 Move X21, 0x5D9000
	007 Move W8, [X20+1751]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5D9000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x63E000
	018 Move X0, [X0+1568]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1751], W8
	022 Move X0, [X21]
	023 Move X20, [X19+104]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {45}
	036 Move X0, [X21]
	037 Move X20, [X19+104]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Call Object.DestroyImmediate, X0
	045 Move X0, [X21]
	046 Move X20, [X19+64]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Inequality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {70}
	059 Move X8, 0x63E000
	060 Move X8, [X8+1568]
	061 Move X20, [X19+64]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Call TMP_MaterialManager.ReleaseFallbackMaterial, X0
	069 Move [X19+64], X31
	070 Move [X19+120], W31
	071 Move X0, [X21]
	072 Move X20, [X19+112]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Inequality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {102}
	085 Move X0, [X19+112]
	086 Compare X0, 0
	087 JumpIfEqual {107}
	088 Move W1, 1
	089 Move X2, X31
	090 Call TMP_Text.set_havePropertiesChanged, X0, X1
	091 Move X0, [X19+112]
	092 Compare X0, 0
	093 JumpIfEqual {107}
	094 Move X8, [X0]
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X2, [X8+728]
	098 Move X1, [X8+736]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 CallNoReturn X2
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move X30, [X31+32]
	105 Move X21, [X31+40]
	106 Return 
	107 Call 0x1C17F20

Method: System.Void DestroySelf()

Disassembly:
	0x03B1B2CC BL 0x3C354F8
	0x03B1B2D0 TBZ X0, 0x0, 0x3B1B2F0
	0x03B1B2D4 LDR X0, [X22]
	0x03B1B2D8 LDR X20, [X19 + 0xA8]
	0x03B1B2DC LDR W8, [X0 + 0xE0]
	0x03B1B2E0 CBNZ W8, 0x3B1B2E8
	0x03B1B2E4 BL 0x1C16DFC
	0x03B1B2E8 MOV X0, X20
	0x03B1B2EC BL 0x3B0EA80
	0x03B1B2F0 LDR X0, [X21]
	0x03B1B2F4 LDR X20, [X19 + 0xF8]
	0x03B1B2F8 LDR W8, [X0 + 0xE0]
	0x03B1B2FC CBNZ W8, 0x3B1B304
	0x03B1B300 BL 0x1C16DFC
	0x03B1B304 MOV X0, X20
	0x03B1B308 MOV X1, X31
	0x03B1B30C MOV X2, X31
	0x03B1B310 BL 0x3C354F8
	0x03B1B314 TBZ X0, 0x0, 0x3B1B338
	0x03B1B318 LDR X0, [X22]
	0x03B1B31C LDR X20, [X19 + 0xF8]
	0x03B1B320 LDR W8, [X0 + 0xE0]
	0x03B1B324 CBNZ W8, 0x3B1B32C
	0x03B1B328 BL 0x1C16DFC
	0x03B1B32C MOV X0, X20
	0x03B1B330 BL 0x3B10BA8
	0x03B1B334 STR X31, [X19 + 0xF8]
	0x03B1B338 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C8000
	006 Move X20, 0x5D9000
	007 Move W8, [X21+1752]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5D9000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1752], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Component.get_gameObject, X0
	022 Move X8, [X20]
	023 Move X19, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move S0, 1
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call Object.Destroy, X0, V0
	037 Return 

Method: UnityEngine.Material GetMaterial(UnityEngine.Material mat)

Disassembly:
	0x03B1A484 CBZ X0, 0x3B1A498
	0x03B1A488 LDP X20, X19, [X31 + 0x10]
	0x03B1A48C MOV X1, X31
	0x03B1A490 LDP X30, X21, [X31], #0x20
	0x03B1A494 B 0x3C1349C
	0x03B1A498 BL 0x1C16F20
	0x03B1A49C STR X30, [X31 - 0x30]!
	0x03B1A4A0 STP X22, X21, [X31 + 0x10]
	0x03B1A4A4 STP X20, X19, [X31 + 0x20]
	0x03B1A4A8 ADRP X22, 0x8C8000
	0x03B1A4AC ADRP X21, 0x63E000
	0x03B1A4B0 LDRB W8, [X22 + 0x6DD]
	0x03B1A4B4 LDR X21, [X21 + 0x338]
	0x03B1A4B8 MOV W20, W1
	0x03B1A4BC MOV X19, X0
	0x03B1A4C0 TBNZ X8, 0x0, 0x3B1A4D8
	0x03B1A4C4 ADRP X0, 0x63E000
	0x03B1A4C8 LDR X0, [X0 + 0x338]
	0x03B1A4CC BL 0x1C16CF4
	0x03B1A4D0 MOVZ W8, 0x1
	0x03B1A4D4 STRB W8, [X22 + 0x6DD]
	0x03B1A4D8 LDR X0, [X21]
	0x03B1A4DC LDR X21, [X19 + 0x38]
	0x03B1A4E0 LDR W8, [X0 + 0xE0]
	0x03B1A4E4 CBNZ W8, 0x3B1A4EC
	0x03B1A4E8 BL 0x1C16DFC
	0x03B1A4EC AND W1, W20, 0x1
	0x03B1A4F0 MOV X0, X21
	0x03B1A4F4 MOV W2, W31
	0x03B1A4F8 BL 0x3B15054
	0x03B1A4FC STR S0, [X19 + 0x54]
	0x03B1A500 LDP X20, X19, [X31 + 0x20]
	0x03B1A504 LDP X22, X21, [X31 + 0x10]
	0x03B1A508 LDR X30, [X31], #0x30
	0x03B1A50C RET
	0x03B1A510 STP X30, X21, [X31 - 0x20]!
	0x03B1A514 STP X20, X19, [X31 + 0x10]
	0x03B1A518 ADRP X20, 0x8C8000
	0x03B1A51C ADRP X21, 0x5D9000
	0x03B1A520 LDRB W8, [X20 + 0x6DF]
	0x03B1A524 LDR X21, [X21 + 0x598]
	0x03B1A528 MOV X19, X0
	0x03B1A52C TBNZ X8, 0x0, 0x3B1A550
	0x03B1A530 ADRP X0, 0x5D9000
	0x03B1A534 LDR X0, [X0 + 0x598]
	0x03B1A538 BL 0x1C16CF4
	0x03B1A53C ADRP X0, 0x63E000
	0x03B1A540 LDR X0, [X0 + 0x338]
	0x03B1A544 BL 0x1C16CF4
	0x03B1A548 MOVZ W8, 0x1
	0x03B1A54C STRB W8, [X20 + 0x6DF]
	0x03B1A550 MOV X0, X19
	0x03B1A554 BL 0x3B19904
	0x03B1A558 LDR X8, [X21]
	0x03B1A55C MOV X20, X0
	0x03B1A560 LDR W9, [X8 + 0xE0]
	0x03B1A564 CBNZ W9, 0x3B1A570
	0x03B1A568 MOV X0, X8
	0x03B1A56C BL 0x1C16DFC
	0x03B1A570 MOV X0, X20
	0x03B1A574 MOV X1, X31
	0x03B1A578 MOV X2, X31
	0x03B1A57C BL 0x3C3883C
	0x03B1A580 TBNZ X0, 0x0, 0x3B1A670
	0x03B1A584 LDR X0, [X21]
	0x03B1A588 LDR X20, [X19 + 0x38]
	0x03B1A58C LDR W8, [X0 + 0xE0]
	0x03B1A590 CBNZ W8, 0x3B1A598
	0x03B1A594 BL 0x1C16DFC
	0x03B1A598 MOV X0, X20
	0x03B1A59C MOV X1, X31
	0x03B1A5A0 MOV X2, X31
	0x03B1A5A4 BL 0x3C3883C
	0x03B1A5A8 TBNZ X0, 0x0, 0x3B1A670

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8C9000
	007 Move X22, 0x5DA000
	008 Move W8, [X21+1753]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x606000
	017 Move X0, [X0+1440]
	018 Call 0x1C17CF4
	019 Move X0, 0x5DA000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1753], W8
	024 Move X0, [X22]
	025 Move X21, [X19+88]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {44}
	038 Move X8, 0x606000
	039 Move X8, [X8+1440]
	040 Move X0, X19
	041 Move X1, [X8]
	042 Call 0x21A4894, X0
	043 Move [X19+88], X0
	044 Move X0, [X22]
	045 Move X21, [X19+48]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X21
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {71}
	058 Move X0, [X19+48]
	059 Compare X0, 0
	060 JumpIfEqual {89}
	061 Move X1, X31
	062 Call Object.GetInstanceID, X0
	063 Compare X20, 0
	064 JumpIfEqual {89}
	065 Move W21, W0
	066 Move X0, X20
	067 Move X1, X31
	068 Call Object.GetInstanceID, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X19+48]
	071 Move X1, X20
	072 Call TMP_SubMesh.CreateMaterialInstance, X0, X1
	073 Move [X19+48], X0
	074 Move [X19+56], X0
	075 Move X0, X19
	076 Call TMP_SubMesh.GetPaddingForMaterial, X0
	077 Move X0, X19
	078 Move [X19+84], S0
	079 Call TMP_SubMesh.SetVerticesDirty, X0
	080 Move X0, X19
	081 Call TMP_SubMesh.UpdateMaterial, X0
	082 Move X0, [X19+56]
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0
	089 Call 0x1C17F20

Method: UnityEngine.Material CreateMaterialInstance(UnityEngine.Material source)

Disassembly:
	0x03B1B33C STRB W31, [X19 + 0x120]
	0x03B1B340 MOV X0, X19
	0x03B1B344 LDR X9, [X8 + 0x528]
	0x03B1B348 LDR X1, [X8 + 0x530]
	0x03B1B34C BLR X9
	0x03B1B350 LDR X0, [X21]
	0x03B1B354 LDR X20, [X19 + 0x118]
	0x03B1B358 LDR W8, [X0 + 0xE0]
	0x03B1B35C CBNZ W8, 0x3B1B364
	0x03B1B360 BL 0x1C16DFC
	0x03B1B364 MOV X0, X20
	0x03B1B368 MOV X1, X31
	0x03B1B36C MOV X2, X31
	0x03B1B370 BL 0x3C354F8
	0x03B1B374 TBZ X0, 0x0, 0x3B1B3B0
	0x03B1B378 LDR X0, [X19 + 0x118]
	0x03B1B37C CBZ X0, 0x3B1B3C0
	0x03B1B380 MOVZ W1, 0x1
	0x03B1B384 MOV X2, X31
	0x03B1B388 BL 0x3AF8D3C
	0x03B1B38C LDR X0, [X19 + 0x118]
	0x03B1B390 CBZ X0, 0x3B1B3C0
	0x03B1B394 LDR X8, [X0]
	0x03B1B398 LDP X20, X19, [X31 + 0x20]
	0x03B1B39C LDP X22, X21, [X31 + 0x10]
	0x03B1B3A0 LDR X2, [X8 + 0x2D8]
	0x03B1B3A4 LDR X1, [X8 + 0x2E0]
	0x03B1B3A8 LDR X30, [X31], #0x30
	0x03B1B3AC BR X2
	0x03B1B3B0 LDP X20, X19, [X31 + 0x20]
	0x03B1B3B4 LDP X22, X21, [X31 + 0x10]
	0x03B1B3B8 LDR X30, [X31], #0x30
	0x03B1B3BC RET
	0x03B1B3C0 BL 0x1C16F20
	0x03B1B3C4 STP X30, X19, [X31 - 0x10]!
	0x03B1B3C8 LDR X8, [X0]
	0x03B1B3CC MOV X19, X0
	0x03B1B3D0 LDP X9, X1, [X8 + 0x1C8]
	0x03B1B3D4 BLR X9
	0x03B1B3D8 TBZ X0, 0x0, 0x3B1B410
	0x03B1B3DC LDR X8, [X19]
	0x03B1B3E0 MOVZ W9, 0x1
	0x03B1B3E4 STRB W9, [X19 + 0xA1]
	0x03B1B3E8 MOV X0, X19
	0x03B1B3EC LDR X9, [X8 + 0x528]
	0x03B1B3F0 LDR X1, [X8 + 0x530]
	0x03B1B3F4 BLR X9
	0x03B1B3F8 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x8C8000
	006 Move X21, 0x5DD000
	007 Move W8, [X19+1754]
	008 Move X21, [X21+3232]
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5DD000
	015 Move X0, [X0+3232]
	016 Call 0x1C17CF4
	017 Move X0, 0x63F000
	018 Move X0, [X0+480]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1754], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X1, X20
	025 Move X2, X31
	026 Move X19, X0
	027 Call Material..ctor, X0, X1
	028 Compare X20, 0
	029 JumpIfEqual {57}
	030 Move X0, X20
	031 Move X1, X31
	032 Call Material.get_shaderKeywords, X0
	033 Compare X19, 0
	034 JumpIfEqual {57}
	035 Move X20, 0x63F000
	036 Move X20, [X20+480]
	037 Move X1, X0
	038 Move X0, X19
	039 Move X2, X31
	040 Call Material.set_shaderKeywords, X0, X1
	041 Move X0, X19
	042 Move X1, X31
	043 Call Object.get_name, X0
	044 Move X1, [X20]
	045 Move X2, X31
	046 Call String.Concat, X0, X1
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call Object.set_name, X0, X1
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Call 0x1C17F20

Method: UnityEngine.Material GetSharedMaterial()

Disassembly:
	0x03B1B3FC MOV X0, X19
	0x03B1B400 LDR X2, [X8 + 0x538]
	0x03B1B404 LDR X1, [X8 + 0x540]
	0x03B1B408 LDP X30, X19, [X31], #0x10
	0x03B1B40C BR X2
	0x03B1B410 LDP X30, X19, [X31], #0x10
	0x03B1B414 RET
	0x03B1B418 STP X30, X21, [X31 - 0x20]!
	0x03B1B41C STP X20, X19, [X31 + 0x10]
	0x03B1B420 ADRP X21, 0x8C7000
	0x03B1B424 LDRB W8, [X21 + 0x6E9]
	0x03B1B428 MOV X19, X1
	0x03B1B42C MOV X20, X0
	0x03B1B430 TBNZ X8, 0x0, 0x3B1B448
	0x03B1B434 ADRP X0, 0x63D000
	0x03B1B438 LDR X0, [X0 + 0x738]
	0x03B1B43C BL 0x1C16CF4
	0x03B1B440 MOVZ W8, 0x1
	0x03B1B444 STRB W8, [X21 + 0x6E9]
	0x03B1B448 LDRB W8, [X20 + 0xA1]
	0x03B1B44C CBZ W8, 0x3B1B490
	0x03B1B450 MOV X0, X20
	0x03B1B454 MOV X1, X31
	0x03B1B458 BL 0x3C32E90
	0x03B1B45C MOV X1, X31
	0x03B1B460 BL 0x3E36EC0
	0x03B1B464 LDRB W8, [X20 + 0xB8]
	0x03B1B468 CBZ W8, 0x3B1B498
	0x03B1B46C MOV X21, X0
	0x03B1B470 MOV X0, X20
	0x03B1B474 MOV X1, X31
	0x03B1B478 BL 0x3C32E90
	0x03B1B47C MOV X1, X21
	0x03B1B480 MOV X2, X31
	0x03B1B484 BL 0x3E37060
	0x03B1B488 MOV W21, W0
	0x03B1B48C B 0x3B1B49C
	0x03B1B490 LDR W21, [X20 + 0xCC]
	0x03B1B494 B 0x3B1B4A4
	0x03B1B498 MOV W21, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C8000
	006 Move X20, 0x5D9000
	007 Move W8, [X21+1755]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x605000
	015 Move X0, [X0+1440]
	016 Call 0x1C17CF4
	017 Move X0, 0x5D9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1755], W8
	022 Move X0, [X20]
	023 Move X20, [X19+88]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x605000
	037 Move X8, [X8+1440]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+88], X0
	042 Move X0, [X19+88]
	043 Compare X0, 0
	044 JumpIfEqual {52}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Renderer.get_sharedMaterial, X0
	051 Return X0
	052 Call 0x1C17F20

Method: System.Void SetSharedMaterial(UnityEngine.Material mat)

Disassembly:
	0x03B1A770 STP X22, X21, [X31 + 0x10]
	0x03B1A774 STP X20, X19, [X31 + 0x20]
	0x03B1A778 ADRP X22, 0x8C8000
	0x03B1A77C ADRP X21, 0x5D9000
	0x03B1A780 LDRB W8, [X22 + 0x6F0]
	0x03B1A784 LDR X21, [X21 + 0x598]
	0x03B1A788 MOV X20, X1
	0x03B1A78C MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+56], X1
	005 Call TMP_SubMesh.GetPaddingForMaterial, X0
	006 Move [X19+84], S0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call TMP_SubMesh.UpdateMaterial, X0
	011 Return 

Method: System.Single GetPaddingForMaterial()

Disassembly:
	0x03B1A620 LDR W9, [X8 + 0xE0]
	0x03B1A624 CBNZ W9, 0x3B1A630
	0x03B1A628 MOV X0, X8
	0x03B1A62C BL 0x1C16DFC
	0x03B1A630 CBZ X20, 0x3B1A67C
	0x03B1A634 LDR X8, [X21]
	0x03B1A638 MOV X0, X20
	0x03B1A63C MOV X2, X31
	0x03B1A640 LDR X8, [X8 + 0xB8]
	0x03B1A644 LDR X1, [X8 + 0x120]
	0x03B1A648 BL 0x3C15F28
	0x03B1A64C LDR X0, [X19 + 0x38]
	0x03B1A650 CBZ X0, 0x3B1A67C
	0x03B1A654 LDR X8, [X21]
	0x03B1A658 LDP X20, X19, [X31 + 0x10]
	0x03B1A65C MOV X2, X31
	0x03B1A660 LDR X8, [X8 + 0xB8]
	0x03B1A664 LDR X1, [X8 + 0x120]
	0x03B1A668 LDP X30, X21, [X31], #0x20
	0x03B1A66C B 0x3C15C58
	0x03B1A670 LDP X20, X19, [X31 + 0x10]
	0x03B1A674 LDP X30, X21, [X31], #0x20
	0x03B1A678 RET
	0x03B1A67C BL 0x1C16F20
	0x03B1A680 MOV X1, X31
	0x03B1A684 B 0x3C36C30
	0x03B1A688 LDR X0, [X0 + 0xD8]
	0x03B1A68C RET
	0x03B1A690 STR X1, [X0 + 0xD8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8C9000
	005 Move W8, [X20+1756]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x63F000
	012 Move X0, [X0+824]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1756], W8
	016 Move X8, [X19+112]
	017 Compare X8, 0
	018 JumpIfEqual {37}
	019 Move X9, 0x63F000
	020 Move X9, [X9+824]
	021 Move X19, [X19+56]
	022 Move W20, [X8+768]
	023 Move X0, [X9]
	024 Move W9, [X0+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W2, W31
	034 Move X30, [X31+32]
	035 Call ShaderUtilities.GetPadding, X0, X1, X2
	036 Return V0
	037 Call 0x1C17F20

Method: System.Void UpdateMeshPadding(System.Boolean isExtraPadding, System.Boolean isUsingBold)

Disassembly:
	0x03B1B49C STR W21, [X20 + 0xCC]
	0x03B1B4A0 STRB W31, [X20 + 0xA1]
	0x03B1B4A4 CMP W21, 0x1
	0x03B1B4A8 B.LT 0x3B1B508
	0x03B1B4AC ADRP X8, 0x63D000
	0x03B1B4B0 LDR X8, [X8 + 0x738]
	0x03B1B4B4 LDR X0, [X8]
	0x03B1B4B8 LDR W8, [X0 + 0xE0]
	0x03B1B4BC CBNZ W8, 0x3B1B4C4
	0x03B1B4C0 BL 0x1C16DFC
	0x03B1B4C4 MOVN W8, 0x0
	0x03B1B4C8 LSLV W8, W8, W21
	0x03B1B4CC ORN W1, W31, W8, 0x0
	0x03B1B4D0 MOVZ W3, 0x3
	0x03B1B4D4 MOVZ W4, 0xF
	0x03B1B4D8 MOV X0, X19
	0x03B1B4DC MOV W2, W31
	0x03B1B4E0 MOV W5, W1
	0x03B1B4E4 MOV W6, W31
	0x03B1B4E8 MOV X7, X31
	0x03B1B4EC BL 0x3E44030
	0x03B1B4F0 LDR X8, [X20 + 0xA8]
	0x03B1B4F4 MOV X19, X0
	0x03B1B4F8 MOV X1, X31
	0x03B1B4FC MOV X0, X8
	0x03B1B500 BL 0x3E44A50
	0x03B1B504 STR X19, [X20 + 0xA8]
	0x03B1B508 MOV X0, X19
	0x03B1B50C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8C8000
	007 Move X21, 0x63E000
	008 Move W8, [X22+1757]
	009 Move X21, [X21+824]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x63E000
	017 Move X0, [X0+824]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1757], W8
	021 Move X0, [X21]
	022 Move X21, [X19+56]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 And W1, W20, 1
	028 Move X0, X21
	029 Move W2, W31
	030 Call ShaderUtilities.GetPadding, X0, X1, X2
	031 Move [X19+84], S0
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 

Method: System.Void SetVerticesDirty()

Disassembly:
	0x03B1A694 RET
	0x03B1A698 LDR X0, [X0 + 0xE0]
	0x03B1A69C RET
	0x03B1A6A0 STR X1, [X0 + 0xE0]
	0x03B1A6A4 RET
	0x03B1A6A8 STP X30, X21, [X31 - 0x20]!
	0x03B1A6AC STP X20, X19, [X31 + 0x10]
	0x03B1A6B0 ADRP X21, 0x8C8000
	0x03B1A6B4 ADRP X20, 0x5D9000
	0x03B1A6B8 LDRB W8, [X21 + 0x6E0]
	0x03B1A6BC LDR X20, [X20 + 0x598]
	0x03B1A6C0 MOV X19, X0
	0x03B1A6C4 TBNZ X8, 0x0, 0x3B1A6E8
	0x03B1A6C8 ADRP X0, 0x5D9000
	0x03B1A6CC LDR X0, [X0 + 0x598]
	0x03B1A6D0 BL 0x1C16CF4
	0x03B1A6D4 ADRP X0, 0x63E000
	0x03B1A6D8 LDR X0, [X0 + 0x338]
	0x03B1A6DC BL 0x1C16CF4
	0x03B1A6E0 MOVZ W8, 0x1
	0x03B1A6E4 STRB W8, [X21 + 0x6E0]
	0x03B1A6E8 LDR X0, [X20]
	0x03B1A6EC LDR X20, [X19 + 0xF0]
	0x03B1A6F0 LDR W8, [X0 + 0xE0]
	0x03B1A6F4 CBNZ W8, 0x3B1A6FC
	0x03B1A6F8 BL 0x1C16DFC
	0x03B1A6FC MOV X0, X20
	0x03B1A700 MOV X1, X31
	0x03B1A704 MOV X2, X31
	0x03B1A708 BL 0x3C354F8
	0x03B1A70C TBZ X0, 0x0, 0x3B1A750
	0x03B1A710 ADRP X20, 0x63E000
	0x03B1A714 LDR X20, [X20 + 0x338]
	0x03B1A718 LDR X19, [X19 + 0xF0]
	0x03B1A71C LDR X0, [X20]
	0x03B1A720 LDR W8, [X0 + 0xE0]
	0x03B1A724 CBNZ W8, 0x3B1A72C
	0x03B1A728 BL 0x1C16DFC
	0x03B1A72C CBZ X19, 0x3B1A760
	0x03B1A730 LDR X8, [X20]
	0x03B1A734 MOV X0, X19
	0x03B1A738 LDP X20, X19, [X31 + 0x10]
	0x03B1A73C MOV X2, X31
	0x03B1A740 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8C9000
	005 Move W8, [X20+1758]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x5DA000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1758], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call Behaviour.get_enabled, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {55}
	023 Move X8, 0x5DA000
	024 Move X8, [X8+1432]
	025 Move X20, [X19+112]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {55}
	039 Move X0, [X19+112]
	040 Compare X0, 0
	041 JumpIfEqual {59}
	042 Move W1, 1
	043 Move X2, X31
	044 Call TMP_Text.set_havePropertiesChanged, X0, X1
	045 Move X0, [X19+112]
	046 Compare X0, 0
	047 JumpIfEqual {59}
	048 Move X8, [X0]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, [X8+760]
	052 Move X1, [X8+768]
	053 Move X30, [X31+32]
	054 CallNoReturn X2
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Return 
	059 Call 0x1C17F20

Method: System.Void SetMaterialDirty()

Disassembly:
	0x03B1A744 LDR W1, [X8]

ISIL:
	001 Call TMP_SubMesh.UpdateMaterial, X0
	002 Return 

Method: System.Void UpdateMaterial()

Disassembly:
	0x03B1B510 LDP X30, X21, [X31], #0x20
	0x03B1B514 RET
	0x03B1B518 STP X30, X21, [X31 - 0x20]!
	0x03B1B51C STP X20, X19, [X31 + 0x10]
	0x03B1B520 ADRP X21, 0x8C7000
	0x03B1B524 LDRB W8, [X21 + 0x6EB]
	0x03B1B528 MOV X19, X1
	0x03B1B52C MOV X20, X0
	0x03B1B530 TBNZ X8, 0x0, 0x3B1B548
	0x03B1B534 ADRP X0, 0x63D000
	0x03B1B538 LDR X0, [X0 + 0x338]
	0x03B1B53C BL 0x1C16CF4
	0x03B1B540 MOVZ W8, 0x1
	0x03B1B544 STRB W8, [X21 + 0x6EB]
	0x03B1B548 LDR X8, [X20 + 0x118]
	0x03B1B54C CBZ X8, 0x3B1B588
	0x03B1B550 ADRP X9, 0x63D000
	0x03B1B554 LDR X9, [X9 + 0x338]
	0x03B1B558 LDRB W20, [X8 + 0x300]
	0x03B1B55C LDR X0, [X9]
	0x03B1B560 LDR W9, [X0 + 0xE0]
	0x03B1B564 CBNZ W9, 0x3B1B56C
	0x03B1B568 BL 0x1C16DFC
	0x03B1B56C CMP W20, 0x0
	0x03B1B570 MOV X0, X19
	0x03B1B574 LDP X20, X19, [X31 + 0x10]
	0x03B1B578 CSET W1, NE
	0x03B1B57C MOV W2, W31
	0x03B1B580 LDP X30, X21, [X31], #0x20
	0x03B1B584 B 0x3B15054
	0x03B1B588 BL 0x1C16F20
	0x03B1B58C STR X30, [X31 - 0x30]!
	0x03B1B590 STP X22, X21, [X31 + 0x10]
	0x03B1B594 STP X20, X19, [X31 + 0x20]
	0x03B1B598 ADRP X22, 0x8C7000
	0x03B1B59C ADRP X21, 0x63D000
	0x03B1B5A0 LDRB W8, [X22 + 0x6EC]
	0x03B1B5A4 LDR X21, [X21 + 0x338]
	0x03B1B5A8 MOV W20, W1
	0x03B1B5AC MOV X19, X0
	0x03B1B5B0 TBNZ X8, 0x0, 0x3B1B5C8
	0x03B1B5B4 ADRP X0, 0x63D000
	0x03B1B5B8 LDR X0, [X0 + 0x338]
	0x03B1B5BC BL 0x1C16CF4
	0x03B1B5C0 MOVZ W8, 0x1
	0x03B1B5C4 STRB W8, [X22 + 0x6EC]
	0x03B1B5C8 LDR X0, [X21]
	0x03B1B5CC LDR X21, [X19 + 0xF0]
	0x03B1B5D0 LDR W8, [X0 + 0xE0]
	0x03B1B5D4 CBNZ W8, 0x3B1B5DC
	0x03B1B5D8 BL 0x1C16DFC
	0x03B1B5DC AND W1, W20, 0x1
	0x03B1B5E0 MOV X0, X21
	0x03B1B5E4 MOV W2, W31
	0x03B1B5E8 BL 0x3B15054
	0x03B1B5EC STR S0, [X19 + 0x10C]
	0x03B1B5F0 LDP X20, X19, [X31 + 0x20]
	0x03B1B5F4 LDP X22, X21, [X31 + 0x10]
	0x03B1B5F8 LDR X30, [X31], #0x30
	0x03B1B5FC RET
	0x03B1B600 RET
	0x03B1B604 STR X30, [X31 - 0x20]!
	0x03B1B608 STP X20, X19, [X31 + 0x10]
	0x03B1B60C ADRP X20, 0x8C7000
	0x03B1B610 LDRB W8, [X20 + 0x6ED]
	0x03B1B614 MOV X19, X0
	0x03B1B618 TBNZ X8, 0x0, 0x3B1B630
	0x03B1B61C ADRP X0, 0x5D8000
	0x03B1B620 LDR X0, [X0 + 0x598]
	0x03B1B624 BL 0x1C16CF4
	0x03B1B628 MOVZ W8, 0x1
	0x03B1B62C STRB W8, [X20 + 0x6ED]
	0x03B1B630 LDR X8, [X19]
	0x03B1B634 MOV X0, X19
	0x03B1B638 LDP X9, X1, [X8 + 0x1C8]
	0x03B1B63C BLR X9
	0x03B1B640 TBZ X0, 0x0, 0x3B1B6A8
	0x03B1B644 ADRP X8, 0x5D8000
	0x03B1B648 LDR X8, [X8 + 0x598]
	0x03B1B64C LDR X20, [X19 + 0x118]
	0x03B1B650 LDR X0, [X8]
	0x03B1B654 LDR W8, [X0 + 0xE0]
	0x03B1B658 CBNZ W8, 0x3B1B660
	0x03B1B65C BL 0x1C16DFC
	0x03B1B660 MOV X0, X20
	0x03B1B664 MOV X1, X31
	0x03B1B668 MOV X2, X31
	0x03B1B66C BL 0x3C354F8
	0x03B1B670 TBZ X0, 0x0, 0x3B1B6A8
	0x03B1B674 LDR X0, [X19 + 0x118]
	0x03B1B678 CBZ X0, 0x3B1B6B4
	0x03B1B67C MOVZ W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8C8000
	006 Move X21, 0x5D9000
	007 Move W8, [X20+1759]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5D9000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x63E000
	018 Move X0, [X0+824]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1759], W8
	022 Move X0, X19
	023 Call TMP_SubMesh.get_renderer, X0
	024 Move X8, [X21]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {115}
	039 Move X0, [X21]
	040 Move X20, [X19+56]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Equality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {115}
	053 Move X0, [X19+88]
	054 Compare X0, 0
	055 JumpIfEqual {120}
	056 Move X1, [X19+56]
	057 Move X2, X31
	058 Call Renderer.set_sharedMaterial, X0, X1
	059 Move X21, 0x63E000
	060 Move X21, [X21+824]
	061 Move X20, [X19+56]
	062 Move X0, [X21]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Compare X20, 0
	068 JumpIfEqual {120}
	069 Move X8, [X21]
	070 Move X0, X20
	071 Move X2, X31
	072 Move X8, [X8+184]
	073 Move X1, [X8+288]
	074 Call Material.HasProperty, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {115}
	079 Move X0, X19
	080 Call TMP_SubMesh.get_textComponent, X0
	081 Compare X0, 0
	082 JumpIfEqual {120}
	083 Move X8, [X0]
	084 Move X9, [X8+1384]
	085 Move X1, [X8+1392]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X8, [X21]
	088 Move X20, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Compare X20, 0
	095 JumpIfEqual {120}
	096 Move X8, [X21]
	097 Move X0, X20
	098 Move X2, X31
	099 Move X8, [X8+184]
	100 Move X1, [X8+288]
	101 Call Material.GetFloat, X0, X1
	102 Move X0, [X19+56]
	103 Compare X0, 0
	104 JumpIfEqual {120}
	105 Move X8, [X21]
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X2, X31
	109 Move X8, [X8+184]
	110 Move X1, [X8+288]
	111 Move X30, [X31+32]
	112 Move X21, [X31+40]
	113 Call Material.SetFloat, X0, X1, V0
	114 Return 
	115 Move X20, [X31+16]
	116 Move X19, [X31+24]
	117 Move X30, [X31+32]
	118 Move X21, [X31+40]
	119 Return 
	120 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B1B680 MOV X2, X31
	0x03B1B684 BL 0x3AF8D3C

ISIL:
	001 Move X1, X31
	002 Call MonoBehaviour..ctor, X0
	003 Return 

