Type: TMPro.TMP_FontAsset

Method: System.String get_version()

Disassembly:
	0x03AE29FC ADRP X8, 0x676000
	0x03AE2A00 LDR X8, [X8 + 0xC38]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_version(System.String value)

Disassembly:
	0x03AE2A04 MOV W1, W21
	0x03AE2A08 MOV X22, X0

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.Font get_sourceFontFile()

Disassembly:
	0x03AE2A0C LDR X2, [X8]
	0x03AE2A10 BL 0x301B830

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_sourceFontFile(UnityEngine.Font value)

Disassembly:
	0x03AE2A14 LDR X0, [X19 + 0x130]
	0x03AE2A18 STR X22, [X19 + 0x138]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: TMPro.AtlasPopulationMode get_atlasPopulationMode()

Disassembly:
	0x03AE2A1C CBZ X0, 0x3AE2D90
	0x03AE2A20 ADRP X20, 0x676000

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_atlasPopulationMode(TMPro.AtlasPopulationMode value)

Disassembly:
	0x03AE2A24 ADRP X24, 0x676000
	0x03AE2A28 LDR X20, [X20 + 0xC48]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: UnityEngine.TextCore.FaceInfo get_faceInfo()

Disassembly:
	0x03AE2A2C LDR X24, [X24 + 0xC18]
	0x03AE2A30 MOV W21, W31
	0x03AE2A34 LDR W8, [X0 + 0x18]
	0x03AE2A38 CMP W21, W8

ISIL:
	001 Add X1, X0, 80
	002 Move W2, 96
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_faceInfo(UnityEngine.TextCore.FaceInfo value)

Disassembly:
	0x03AE2A3C B.GE 0x3AE2AB8
	0x03AE2A40 LDR X2, [X20]
	0x03AE2A44 LDR X22, [X19 + 0x138]
	0x03AE2A48 MOV W1, W21
	0x03AE2A4C BL 0x301BCCC
	0x03AE2A50 CBZ X22, 0x3AE2D90

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 80
	003 Move W2, 96
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> get_glyphTable()

Disassembly:
	0x03AE2A54 LDR W10, [X22 + 0x1C]
	0x03AE2A58 LDR X8, [X22 + 0x10]

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_glyphTable(System.Collections.Generic.List`1<UnityEngine.TextCore.Glyph> value)

Disassembly:
	0x03AE2A5C LDR X9, [X24]
	0x03AE2A60 ADD W10, W10, 0x1

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Collections.Generic.Dictionary`2<System.UInt32, UnityEngine.TextCore.Glyph> get_glyphLookupTable()

Disassembly:
	0x03AE2A64 STR W10, [X22 + 0x1C]
	0x03AE2A68 CBZ X8, 0x3AE2D90
	0x03AE2A6C LDRSW X10, [X22 + 0x18]
	0x03AE2A70 LDR W11, [X8 + 0x18]
	0x03AE2A74 MOV X1, X0
	0x03AE2A78 CMP W10, W11
	0x03AE2A7C B.CS 0x3AE2A94
	0x03AE2A80 ADD W9, W10, 0x1
	0x03AE2A84 ADD X8, X8, X10, 0x3, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+184]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	009 Move X0, [X19+184]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Collections.Generic.List`1<TMPro.TMP_Character> get_characterTable()

Disassembly:
	0x03AE2CC0 CMP W10, W11
	0x03AE2CC4 B.CS 0x3AE2CDC

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Void set_characterTable(System.Collections.Generic.List`1<TMPro.TMP_Character> value)

Disassembly:
	0x03AE2CC8 ADD W9, W10, 0x1
	0x03AE2CCC ADD X8, X8, X10, 0x3, LSL

ISIL:
	001 Move [X0+192], X1
	002 Return 

Method: System.Collections.Generic.Dictionary`2<System.UInt32, TMPro.TMP_Character> get_characterLookupTable()

Disassembly:
	0x03AE2CD0 STR W9, [X0 + 0x18]
	0x03AE2CD4 STR X23, [X8 + 0x20]
	0x03AE2CD8 B 0x3AE2CF0
	0x03AE2CDC LDR X8, [X9 + 0x20]
	0x03AE2CE0 MOV X1, X23
	0x03AE2CE4 LDR X8, [X8 + 0xC0]
	0x03AE2CE8 LDR X2, [X8 + 0x70]
	0x03AE2CEC BL 0x301BF90
	0x03AE2CF0 ADRP X8, 0x676000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+200]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	009 Move X0, [X19+200]
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: UnityEngine.Texture2D get_atlasTexture()

Disassembly:
	0x03AE2CF4 LDR W25, [X22 + 0x10]
	0x03AE2CF8 LDR X8, [X8 + 0x5B0]
	0x03AE2CFC LDR X0, [X8]
	0x03AE2D00 BL 0x1C16F10
	0x03AE2D04 MOV W1, W25
	0x03AE2D08 MOV X2, X19
	0x03AE2D0C MOV X3, X23
	0x03AE2D10 MOV X24, X0
	0x03AE2D14 BL 0x3ADB950
	0x03AE2D18 LDR W8, [X22 + 0x10]
	0x03AE2D1C LDR X0, [X19 + 0xC0]
	0x03AE2D20 CMP W8, 0x20
	0x03AE2D24 CSET W22, EQ
	0x03AE2D28 CBZ X0, 0x3AE2D90
	0x03AE2D2C ADRP X9, 0x676000
	0x03AE2D30 LDR W10, [X0 + 0x1C]
	0x03AE2D34 LDR X8, [X0 + 0x10]
	0x03AE2D38 LDR X9, [X9 + 0xC20]
	0x03AE2D3C ADD W10, W10, 0x1
	0x03AE2D40 LDR X9, [X9]
	0x03AE2D44 STR W10, [X0 + 0x1C]
	0x03AE2D48 CBZ X8, 0x3AE2D90
	0x03AE2D4C LDRSW X10, [X0 + 0x18]
	0x03AE2D50 LDR W11, [X8 + 0x18]
	0x03AE2D54 CMP W10, W11
	0x03AE2D58 B.CS 0x3AE2D70
	0x03AE2D5C ADD W9, W10, 0x1
	0x03AE2D60 ADD X8, X8, X10, 0x3, LSL
	0x03AE2D64 STR W9, [X0 + 0x18]
	0x03AE2D68 STR X24, [X8 + 0x20]
	0x03AE2D6C B 0x3AE2D84
	0x03AE2D70 LDR X8, [X9 + 0x20]
	0x03AE2D74 MOV X1, X24
	0x03AE2D78 LDR X8, [X8 + 0xC0]
	0x03AE2D7C LDR X2, [X8 + 0x70]
	0x03AE2D80 BL 0x301BF90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x901000
	006 Move X20, 0x612000
	007 Move W8, [X21+1421]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x612000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1421], W8
	019 Move X0, [X20]
	020 Move X20, [X19+208]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {41}
	033 Move X8, [X19+216]
	034 Compare X8, 0
	035 JumpIfEqual {47}
	036 Move W9, [X8+24]
	037 Compare W9, 0
	038 JumpIfEqual {48}
	039 Move X0, [X8+32]
	040 Move [X19+208], X0
	041 Move X0, [X19+208]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: UnityEngine.Texture2D[] get_atlasTextures()

Disassembly:
	0x03AE2D84 LDR X0, [X19 + 0x118]
	0x03AE2D88 ORR W20, W20, W22, 0x0

ISIL:
	001 Move X0, [X0+216]
	002 Return X0

Method: System.Void set_atlasTextures(UnityEngine.Texture2D[] value)

Disassembly:
	0x03AE2D8C CBNZ X0, 0x3AE2B6C
	0x03AE2D90 BL 0x1C16F20

ISIL:
	001 Move [X0+216], X1
	002 Return 

Method: System.Int32 get_atlasTextureCount()

Disassembly:
	0x03AE2D94 TBNZ X20, 0x0, 0x3AE2F7C
	0x03AE2D98 MOV X0, X19
	0x03AE2D9C MOV X1, X31

ISIL:
	001 Move W8, [X0+224]
	002 Add W0, W8, 1
	003 Return X0

Method: System.Boolean get_isMultiAtlasTexturesEnabled()

Disassembly:
	0x03AE2DA0 BL 0x3C389D4
	0x03AE2DA4 ADRP X8, 0x676000

ISIL:
	001 Move W0, [X0+228]
	002 Return X0

Method: System.Void set_isMultiAtlasTexturesEnabled(System.Boolean value)

Disassembly:
	0x03AE2DA8 LDR X8, [X8 + 0xC80]
	0x03AE2DAC ADRP X9, 0x611000
	0x03AE2DB0 LDR X9, [X9 + 0x848]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+228], W8
	003 Return 

Method: System.Boolean get_clearDynamicDataOnBuild()

Disassembly:
	0x03AE2DB4 MOV X1, X0
	0x03AE2DB8 LDR X8, [X8]

ISIL:
	001 Move W0, [X0+229]
	002 Return X0

Method: System.Void set_clearDynamicDataOnBuild(System.Boolean value)

Disassembly:
	0x03AE2DBC MOV X3, X31
	0x03AE2DC0 LDR X2, [X9]
	0x03AE2DC4 MOV X0, X8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+229], W8
	003 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> get_usedGlyphRects()

Disassembly:
	0x03AE2DC8 BL 0x32274B8
	0x03AE2DCC ADRP X8, 0x611000

ISIL:
	001 Move X0, [X0+232]
	002 Return X0

Method: System.Void set_usedGlyphRects(System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> value)

Disassembly:
	0x03AE2DD0 LDR X8, [X8 + 0xA28]
	0x03AE2DD4 MOV X21, X0

ISIL:
	001 Move [X0+232], X1
	002 Return 

Method: System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> get_freeGlyphRects()

Disassembly:
	0x03AE2DD8 LDR X8, [X8]
	0x03AE2DDC LDR W9, [X8 + 0xE0]

ISIL:
	001 Move X0, [X0+240]
	002 Return X0

Method: System.Void set_freeGlyphRects(System.Collections.Generic.List`1<UnityEngine.TextCore.GlyphRect> value)

Disassembly:
	0x03AE2DE0 CBNZ W9, 0x3AE2DEC
	0x03AE2DE4 MOV X0, X8

ISIL:
	001 Move [X0+240], X1
	002 Return 

Method: TMPro.FaceInfo_Legacy get_fontInfo()

Disassembly:
	0x03AE2DE8 BL 0x1C16DFC
	0x03AE2DEC MOV X0, X21

ISIL:
	001 Move X0, [X0+248]
	002 Return X0

Method: System.Int32 get_atlasWidth()

Disassembly:
	0x03AE2DF0 MOV X1, X31
	0x03AE2DF4 BL 0x3C06048

ISIL:
	001 Move W0, [X0+264]
	002 Return X0

Method: System.Void set_atlasWidth(System.Int32 value)

Disassembly:
	0x03AE2DF8 LDR X0, [X31 + 0x68]
	0x03AE2DFC MOV X1, X31

ISIL:
	001 Move [X0+264], W1
	002 Return 

Method: System.Int32 get_atlasHeight()

Disassembly:
	0x03AE2E00 BL 0x3C9BFB8
	0x03AE2E04 FMOV S1, 5

ISIL:
	001 Move W0, [X0+268]
	002 Return X0

Method: System.Void set_atlasHeight(System.Int32 value)

Disassembly:
	0x03AE2E08 FDIV S4, S0, S1
	0x03AE2E0C ADD X0, X31, 0x38

ISIL:
	001 Move [X0+268], W1
	002 Return 

Method: System.Int32 get_atlasPadding()

Disassembly:
	0x03AE2E10 FMOV S0, W31
	0x03AE2E14 FMOV S1, W31

ISIL:
	001 Move W0, [X0+272]
	002 Return X0

Method: System.Void set_atlasPadding(System.Int32 value)

Disassembly:
	0x03AE2E18 FMOV S2, W31
	0x03AE2E1C FMOV S3, W31

ISIL:
	001 Move [X0+272], W1
	002 Return 

Method: UnityEngine.TextCore.LowLevel.GlyphRenderMode get_atlasRenderMode()

Disassembly:
	0x03AE2E20 MOV X1, X31
	0x03AE2E24 STP X31, X31, [X31 + 0x38]

ISIL:
	001 Move W0, [X0+276]
	002 Return X0

Method: System.Void set_atlasRenderMode(UnityEngine.TextCore.LowLevel.GlyphRenderMode value)

Disassembly:
	0x03AE2E28 STR W31, [X31 + 0x48]
	0x03AE2E2C BL 0x3C9C2F4

ISIL:
	001 Move [X0+276], W1
	002 Return 

Method: TMPro.TMP_FontFeatureTable get_fontFeatureTable()

Disassembly:
	0x03AE2E30 ADRP X8, 0x639000
	0x03AE2E34 LDR X8, [X8 + 0x608]

ISIL:
	001 Move X0, [X0+296]
	002 Return X0

Method: System.Void set_fontFeatureTable(TMPro.TMP_FontFeatureTable value)

Disassembly:
	0x03AE2E38 LDR X0, [X8]
	0x03AE2E3C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+296], X1
	002 Return 

Method: System.Collections.Generic.List`1<TMPro.TMP_FontAsset> get_fallbackFontAssetTable()

Disassembly:
	0x03AE2E40 CBNZ W8, 0x3AE2E48
	0x03AE2E44 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+312]
	002 Return X0

Method: System.Void set_fallbackFontAssetTable(System.Collections.Generic.List`1<TMPro.TMP_FontAsset> value)

Disassembly:
	0x03AE2E48 MOV X0, X31
	0x03AE2E4C BL 0x3C9C0B0

ISIL:
	001 Move [X0+312], X1
	002 Return 

Method: TMPro.FontAssetCreationSettings get_creationSettings()

Disassembly:
	0x03AE2E50 MOV X21, X0
	0x03AE2E54 LDR X0, [X26]
	0x03AE2E58 MOV X22, X1
	0x03AE2E5C BL 0x1C16F10

ISIL:
	001 Add X1, X0, 320
	002 Move W2, 88
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_creationSettings(TMPro.FontAssetCreationSettings value)

Disassembly:
	0x03AE2E60 LDUR V0, [X31 + 0x38]
	0x03AE2E64 LDR W8, [X31 + 0x48]
	0x03AE2E68 ADD X2, X31, 0x0
	0x03AE2E6C MOV W1, W31
	0x03AE2E70 STR V0, [X31]
	0x03AE2E74 FMOV S0, 1

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 320
	003 Move W2, 88
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: TMPro.TMP_FontWeightPair[] get_fontWeightTable()

Disassembly:
	0x03AE2E78 MOV X3, X21
	0x03AE2E7C MOV X4, X22

ISIL:
	001 Move X0, [X0+408]
	002 Return X0

Method: System.Void set_fontWeightTable(TMPro.TMP_FontWeightPair[] value)

Disassembly:
	0x03AE2E80 MOV W5, W31
	0x03AE2E84 MOV X6, X31

ISIL:
	001 Move [X0+408], X1
	002 Return 

Method: TMPro.TMP_FontAsset CreateFontAsset(UnityEngine.Font font)

Disassembly:
	0x03AE2E88 MOV X20, X0
	0x03AE2E8C STR W8, [X31 + 0x10]
	0x03AE2E90 BL 0x3C9C5B4
	0x03AE2E94 LDR X0, [X19 + 0xB0]
	0x03AE2E98 CBZ X0, 0x3AE2D90
	0x03AE2E9C ADRP X9, 0x676000
	0x03AE2EA0 LDR W10, [X0 + 0x1C]
	0x03AE2EA4 LDR X8, [X0 + 0x10]
	0x03AE2EA8 LDR X9, [X9 + 0xC10]
	0x03AE2EAC ADD W10, W10, 0x1
	0x03AE2EB0 LDR X9, [X9]
	0x03AE2EB4 STR W10, [X0 + 0x1C]
	0x03AE2EB8 CBZ X8, 0x3AE2D90
	0x03AE2EBC LDRSW X10, [X0 + 0x18]
	0x03AE2EC0 LDR W11, [X8 + 0x18]
	0x03AE2EC4 CMP W10, W11
	0x03AE2EC8 B.CS 0x3AE2EE0
	0x03AE2ECC ADD W9, W10, 0x1
	0x03AE2ED0 ADD X8, X8, X10, 0x3, LSL
	0x03AE2ED4 STR W9, [X0 + 0x18]
	0x03AE2ED8 STR X20, [X8 + 0x20]
	0x03AE2EDC B 0x3AE2EF4
	0x03AE2EE0 LDR X8, [X9 + 0x20]
	0x03AE2EE4 MOV X1, X20
	0x03AE2EE8 LDR X8, [X8 + 0xC0]
	0x03AE2EEC LDR X2, [X8 + 0x70]
	0x03AE2EF0 BL 0x301BF90
	0x03AE2EF4 ADRP X8, 0x676000
	0x03AE2EF8 LDR X21, [X19 + 0xC0]
	0x03AE2EFC LDR X8, [X8 + 0x5B0]
	0x03AE2F00 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x901000
	007 Move X21, 0x677000
	008 Move W8, [X20+1422]
	009 Move X21, [X21+1400]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x677000
	016 Move X0, [X0+1400]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1422], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W1, 90
	026 Move W2, 9
	027 Move W3, 0x1045
	028 Move W4, 1024
	029 Move W5, 1024
	030 Move W6, 1
	031 Move W7, 1
	032 Move X0, X19
	033 Call TMP_FontAsset.CreateFontAsset, X0, X1, X2, X3, X4, X5, X6, X7
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Add X31, X31, 48
	039 Return X0

Method: TMPro.TMP_FontAsset CreateFontAsset(UnityEngine.Font font, System.Int32 samplingPointSize, System.Int32 atlasPadding, UnityEngine.TextCore.LowLevel.GlyphRenderMode renderMode, System.Int32 atlasWidth, System.Int32 atlasHeight, TMPro.AtlasPopulationMode atlasPopulationMode = 1, System.Boolean enableMultiAtlasSupport = True)

Disassembly:
	0x03AE2F04 BL 0x1C16F10
	0x03AE2F08 MOVZ W1, 0x20
	0x03AE2F0C MOV X2, X19
	0x03AE2F10 MOV X3, X20
	0x03AE2F14 MOV X22, X0
	0x03AE2F18 BL 0x3ADB950
	0x03AE2F1C CBZ X21, 0x3AE2D90
	0x03AE2F20 ADRP X9, 0x676000
	0x03AE2F24 LDR W10, [X21 + 0x1C]
	0x03AE2F28 LDR X8, [X21 + 0x10]
	0x03AE2F2C LDR X9, [X9 + 0xC20]
	0x03AE2F30 ADD W10, W10, 0x1
	0x03AE2F34 LDR X9, [X9]
	0x03AE2F38 STR W10, [X21 + 0x1C]
	0x03AE2F3C CBZ X8, 0x3AE2D90
	0x03AE2F40 LDRSW X10, [X21 + 0x18]
	0x03AE2F44 LDR W11, [X8 + 0x18]
	0x03AE2F48 CMP W10, W11
	0x03AE2F4C B.CS 0x3AE2F64
	0x03AE2F50 ADD W9, W10, 0x1
	0x03AE2F54 ADD X8, X8, X10, 0x3, LSL
	0x03AE2F58 STR W9, [X21 + 0x18]
	0x03AE2F5C STR X22, [X8 + 0x20]
	0x03AE2F60 B 0x3AE2F7C
	0x03AE2F64 LDR X8, [X9 + 0x20]
	0x03AE2F68 MOV X0, X21
	0x03AE2F6C MOV X1, X22
	0x03AE2F70 LDR X8, [X8 + 0xC0]
	0x03AE2F74 LDR X2, [X8 + 0x70]
	0x03AE2F78 BL 0x301BF90
	0x03AE2F7C MOV X0, X19
	0x03AE2F80 BL 0x3AE1A88
	0x03AE2F84 LDP X20, X19, [X31 + 0xC0]
	0x03AE2F88 LDP X22, X21, [X31 + 0xB0]
	0x03AE2F8C LDP X24, X23, [X31 + 0xA0]
	0x03AE2F90 LDP X26, X25, [X31 + 0x90]
	0x03AE2F94 LDP X28, X27, [X31 + 0x80]
	0x03AE2F98 LDP X29, X30, [X31 + 0x70]
	0x03AE2F9C LDR V8, [X31 + 0x60]
	0x03AE2FA0 ADD X31, X31, 0xD0
	0x03AE2FA4 RET
	0x03AE2FA8 MOV X0, X19
	0x03AE2FAC MOV X1, X31
	0x03AE2FB0 BL 0x3C389D4
	0x03AE2FB4 ADRP X8, 0x676000
	0x03AE2FB8 LDR X8, [X8 + 0xC60]
	0x03AE2FBC ADRP X9, 0x676000
	0x03AE2FC0 LDR X9, [X9 + 0xC78]
	0x03AE2FC4 MOV X1, X0
	0x03AE2FC8 LDR X8, [X8]
	0x03AE2FCC MOV X3, X31
	0x03AE2FD0 LDR X2, [X9]
	0x03AE2FD4 MOV X0, X8
	0x03AE2FD8 BL 0x32274B8
	0x03AE2FDC LDR X8, [X25]
	0x03AE2FE0 MOV X21, X0
	0x03AE2FE4 LDR W9, [X8 + 0xE0]
	0x03AE2FE8 CBNZ W9, 0x3AE2FF4
	0x03AE2FEC MOV X0, X8
	0x03AE2FF0 BL 0x1C16DFC
	0x03AE2FF4 MOV X0, X21
	0x03AE2FF8 MOV X1, X19
	0x03AE2FFC MOV X2, X31
	0x03AE3000 BL 0x3C06B0C
	0x03AE3004 B 0x3AE2AE4
	0x03AE3008 BL 0x1C16F28
	0x03AE300C STP X30, X19, [X31 - 0x10]!
	0x03AE3010 MOV X19, X0
	0x03AE3014 BL 0x3AE3338
	0x03AE3018 MOV X0, X19
	0x03AE301C BL 0x3AE35C0
	0x03AE3020 MOV X0, X19
	0x03AE3024 LDP X30, X19, [X31], #0x10
	0x03AE3028 B 0x3AE37DC
	0x03AE302C SUB X31, X31, 0x60
	0x03AE3030 STP X30, X21, [X31 + 0x40]
	0x03AE3034 STP X20, X19, [X31 + 0x50]
	0x03AE3038 ADRP X20, 0x8FF000
	0x03AE303C LDRB W8, [X20 + 0x595]
	0x03AE3040 MOV X19, X0
	0x03AE3044 TBNZ X8, 0x0, 0x3AE3080
	0x03AE3048 ADRP X0, 0x675000
	0x03AE304C LDR X0, [X0 + 0xC88]
	0x03AE3050 BL 0x1C16CF4
	0x03AE3054 ADRP X0, 0x675000
	0x03AE3058 LDR X0, [X0 + 0x328]
	0x03AE305C BL 0x1C16CF4
	0x03AE3060 ADRP X0, 0x675000
	0x03AE3064 LDR X0, [X0 + 0xC90]
	0x03AE3068 BL 0x1C16CF4
	0x03AE306C ADRP X0, 0x675000
	0x03AE3070 LDR X0, [X0 + 0xBC0]
	0x03AE3074 BL 0x1C16CF4
	0x03AE3078 MOVZ W8, 0x1
	0x03AE307C STRB W8, [X20 + 0x595]
	0x03AE3080 STP X31, X31, [X31 + 0x20]
	0x03AE3084 STR W31, [X31 + 0x30]
	0x03AE3088 LDR W8, [X19 + 0x48]
	0x03AE308C MOV W20, W31
	0x03AE3090 CMP W8, 0x1
	0x03AE3094 B.NE 0x3AE30E0
	0x03AE3098 ADRP X21, 0x675000
	0x03AE309C LDR X20, [X19 + 0x40]
	0x03AE30A0 LDR X21, [X21 + 0xBC0]
	0x03AE30A4 ADD X0, X19, 0x50
	0x03AE30A8 MOV X1, X31
	0x03AE30AC BL 0x3C9BF88
	0x03AE30B0 LDR X8, [X21]
	0x03AE30B4 MOV W21, W0
	0x03AE30B8 LDR W9, [X8 + 0xE0]
	0x03AE30BC CBNZ W9, 0x3AE30C8
	0x03AE30C0 MOV X0, X8
	0x03AE30C4 BL 0x1C16DFC
	0x03AE30C8 MOV X0, X20
	0x03AE30CC MOV W1, W21
	0x03AE30D0 MOV X2, X31
	0x03AE30D4 BL 0x3C9C794
	0x03AE30D8 CMP W0, 0x0
	0x03AE30DC CSET W20, EQ
	0x03AE30E0 ADRP X21, 0x675000
	0x03AE30E4 LDR X21, [X21 + 0xC88]
	0x03AE30E8 MOVZ W1, 0x3
	0x03AE30EC MOVZ W3, 0x1
	0x03AE30F0 MOV X0, X19
	0x03AE30F4 MOV W2, W20
	0x03AE30F8 BL 0x3AE3CDC
	0x03AE30FC MOVZ W1, 0x9
	0x03AE3100 MOVZ W3, 0x1
	0x03AE3104 MOV X0, X19
	0x03AE3108 MOV W2, W20
	0x03AE310C BL 0x3AE3CDC
	0x03AE3110 MOVZ W1, 0xA
	0x03AE3114 MOV X0, X19
	0x03AE3118 MOV W2, W20
	0x03AE311C MOV W3, W31
	0x03AE3120 BL 0x3AE3CDC
	0x03AE3124 MOVZ W1, 0xB
	0x03AE3128 MOV X0, X19
	0x03AE312C MOV W2, W20
	0x03AE3130 MOV W3, W31
	0x03AE3134 BL 0x3AE3CDC
	0x03AE3138 MOVZ W1, 0xD
	0x03AE313C MOV X0, X19
	0x03AE3140 MOV W2, W20
	0x03AE3144 MOV W3, W31
	0x03AE3148 BL 0x3AE3CDC
	0x03AE314C MOVZ W1, 0x61C
	0x03AE3150 MOV X0, X19
	0x03AE3154 MOV W2, W20
	0x03AE3158 MOV W3, W31
	0x03AE315C BL 0x3AE3CDC
	0x03AE3160 MOVZ W1, 0x200B
	0x03AE3164 MOV X0, X19
	0x03AE3168 MOV W2, W20
	0x03AE316C MOV W3, W31
	0x03AE3170 BL 0x3AE3CDC
	0x03AE3174 MOVZ W1, 0x200E
	0x03AE3178 MOV X0, X19
	0x03AE317C MOV W2, W20
	0x03AE3180 MOV W3, W31
	0x03AE3184 BL 0x3AE3CDC
	0x03AE3188 MOVZ W1, 0x200F
	0x03AE318C MOV X0, X19
	0x03AE3190 MOV W2, W20
	0x03AE3194 MOV W3, W31
	0x03AE3198 BL 0x3AE3CDC
	0x03AE319C MOVZ W1, 0x2028
	0x03AE31A0 MOV X0, X19
	0x03AE31A4 MOV W2, W20
	0x03AE31A8 MOV W3, W31
	0x03AE31AC BL 0x3AE3CDC
	0x03AE31B0 MOVZ W1, 0x2029
	0x03AE31B4 MOV X0, X19
	0x03AE31B8 MOV W2, W20
	0x03AE31BC MOV W3, W31
	0x03AE31C0 BL 0x3AE3CDC
	0x03AE31C4 MOVZ W1, 0x2060
	0x03AE31C8 MOV X0, X19
	0x03AE31CC MOV W2, W20
	0x03AE31D0 MOV W3, W31
	0x03AE31D4 BL 0x3AE3CDC
	0x03AE31D8 ADD X20, X19, 0x50
	0x03AE31DC MOV X0, X20
	0x03AE31E0 MOV X1, X31
	0x03AE31E4 BL 0x3C9BFC8
	0x03AE31E8 FCMP S0, 0x0
	0x03AE31EC B.NE 0x3AE3280
	0x03AE31F0 LDR X0, [X19 + 0xC8]
	0x03AE31F4 CBZ X0, 0x3AE3334
	0x03AE31F8 LDR X2, [X21]
	0x03AE31FC MOVZ W1, 0x58
	0x03AE3200 BL 0x2B0F250
	0x03AE3204 TBZ X0, 0x0, 0x3AE3280
	0x03AE3208 LDR X0, [X19 + 0xC8]
	0x03AE320C CBZ X0, 0x3AE3334
	0x03AE3210 ADRP X8, 0x675000
	0x03AE3214 LDR X8, [X8 + 0x328]
	0x03AE3218 MOVZ W1, 0x58
	0x03AE321C LDR X2, [X8]
	0x03AE3220 BL 0x2B0EFBC
	0x03AE3224 CBZ X0, 0x3AE3334
	0x03AE3228 LDR X8, [X19 + 0xB8]
	0x03AE322C CBZ X8, 0x3AE3334
	0x03AE3230 ADRP X9, 0x675000
	0x03AE3234 LDR W1, [X0 + 0x28]
	0x03AE3238 LDR X9, [X9 + 0xC90]
	0x03AE323C MOV X0, X8
	0x03AE3240 LDR X2, [X9]
	0x03AE3244 BL 0x2B0EFBC
	0x03AE3248 CBZ X0, 0x3AE3334
	0x03AE324C ADD X8, X31, 0x8
	0x03AE3250 MOV X1, X31
	0x03AE3254 BL 0x3C9C4A4
	0x03AE3258 LDUR V0, [X31 + 0x8]
	0x03AE325C LDR W8, [X31 + 0x18]
	0x03AE3260 ADD X0, X31, 0x20
	0x03AE3264 MOV X1, X31
	0x03AE3268 STR V0, [X31 + 0x2]
	0x03AE326C STR W8, [X31 + 0x30]
	0x03AE3270 BL 0x3C9C2E4
	0x03AE3274 MOV X0, X20
	0x03AE3278 MOV X1, X31
	0x03AE327C BL 0x3C9BFD0
	0x03AE3280 MOV X0, X20
	0x03AE3284 MOV X1, X31
	0x03AE3288 BL 0x3C9BFD8
	0x03AE328C FCMP S0, 0x0
	0x03AE3290 B.NE 0x3AE3324
	0x03AE3294 LDR X0, [X19 + 0xC8]
	0x03AE3298 CBZ X0, 0x3AE3334
	0x03AE329C LDR X2, [X21]
	0x03AE32A0 MOVZ W1, 0x78
	0x03AE32A4 BL 0x2B0F250
	0x03AE32A8 TBZ X0, 0x0, 0x3AE3324
	0x03AE32AC LDR X0, [X19 + 0xC8]
	0x03AE32B0 CBZ X0, 0x3AE3334
	0x03AE32B4 ADRP X8, 0x675000
	0x03AE32B8 LDR X8, [X8 + 0x328]
	0x03AE32BC MOVZ W1, 0x78
	0x03AE32C0 LDR X2, [X8]
	0x03AE32C4 BL 0x2B0EFBC
	0x03AE32C8 CBZ X0, 0x3AE3334
	0x03AE32CC LDR X8, [X19 + 0xB8]
	0x03AE32D0 CBZ X8, 0x3AE3334
	0x03AE32D4 ADRP X9, 0x675000
	0x03AE32D8 LDR W1, [X0 + 0x28]
	0x03AE32DC LDR X9, [X9 + 0xC90]
	0x03AE32E0 MOV X0, X8
	0x03AE32E4 LDR X2, [X9]
	0x03AE32E8 BL 0x2B0EFBC
	0x03AE32EC CBZ X0, 0x3AE3334
	0x03AE32F0 ADD X8, X31, 0x8
	0x03AE32F4 MOV X1, X31
	0x03AE32F8 BL 0x3C9C4A4
	0x03AE32FC LDUR V0, [X31 + 0x8]
	0x03AE3300 LDR W8, [X31 + 0x18]
	0x03AE3304 ADD X0, X31, 0x20
	0x03AE3308 MOV X1, X31
	0x03AE330C STR V0, [X31 + 0x2]
	0x03AE3310 STR W8, [X31 + 0x30]
	0x03AE3314 BL 0x3C9C2E4
	0x03AE3318 MOV X0, X20
	0x03AE331C MOV X1, X31
	0x03AE3320 BL 0x3C9BFE0
	0x03AE3324 LDP X20, X19, [X31 + 0x50]
	0x03AE3328 LDP X30, X21, [X31 + 0x40]
	0x03AE332C ADD X31, X31, 0x60
	0x03AE3330 RET
	0x03AE3334 BL 0x1C16F20
	0x03AE3338 STP X30, X27, [X31 - 0x50]!
	0x03AE333C STP X26, X25, [X31 + 0x10]
	0x03AE3340 STP X24, X23, [X31 + 0x20]
	0x03AE3344 STP X22, X21, [X31 + 0x30]
	0x03AE3348 STP X20, X19, [X31 + 0x40]
	0x03AE334C ADRP X20, 0x8FF000
	0x03AE3350 LDRB W8, [X20 + 0x592]
	0x03AE3354 MOV X19, X0
	0x03AE3358 TBNZ X8, 0x0, 0x3AE33E8
	0x03AE335C ADRP X0, 0x675000
	0x03AE3360 LDR X0, [X0 + 0xC98]
	0x03AE3364 BL 0x1C16CF4
	0x03AE3368 ADRP X0, 0x675000
	0x03AE336C LDR X0, [X0 + 0xCA0]
	0x03AE3370 BL 0x1C16CF4
	0x03AE3374 ADRP X0, 0x675000
	0x03AE3378 LDR X0, [X0 + 0xCA8]
	0x03AE337C BL 0x1C16CF4
	0x03AE3380 ADRP X0, 0x675000
	0x03AE3384 LDR X0, [X0 + 0xCB0]
	0x03AE3388 BL 0x1C16CF4
	0x03AE338C ADRP X0, 0x675000
	0x03AE3390 LDR X0, [X0 + 0xCB8]
	0x03AE3394 BL 0x1C16CF4
	0x03AE3398 ADRP X0, 0x616000
	0x03AE339C LDR X0, [X0 + 0x1D0]
	0x03AE33A0 BL 0x1C16CF4
	0x03AE33A4 ADRP X0, 0x667000
	0x03AE33A8 LDR X0, [X0 + 0xB50]
	0x03AE33AC BL 0x1C16CF4
	0x03AE33B0 ADRP X0, 0x616000
	0x03AE33B4 LDR X0, [X0 + 0x1E0]
	0x03AE33B8 BL 0x1C16CF4
	0x03AE33BC ADRP X0, 0x675000
	0x03AE33C0 LDR X0, [X0 + 0xCC0]
	0x03AE33C4 BL 0x1C16CF4
	0x03AE33C8 ADRP X0, 0x675000
	0x03AE33CC LDR X0, [X0 + 0xCC8]
	0x03AE33D0 BL 0x1C16CF4
	0x03AE33D4 ADRP X0, 0x616000
	0x03AE33D8 LDR X0, [X0 + 0x1E8]
	0x03AE33DC BL 0x1C16CF4
	0x03AE33E0 MOVZ W8, 0x1
	0x03AE33E4 STRB W8, [X20 + 0x592]
	0x03AE33E8 LDR X0, [X19 + 0xB8]
	0x03AE33EC CBZ X0, 0x3AE3404
	0x03AE33F0 ADRP X8, 0x675000
	0x03AE33F4 LDR X8, [X8 + 0xCA0]
	0x03AE33F8 LDR X1, [X8]
	0x03AE33FC BL 0x2B0F1E4
	0x03AE3400 B 0x3AE342C

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X28, 0x901000
	015 Move X27, 0x677000
	016 Move W8, [X28+1423]
	017 Move X27, [X27+3008]
	018 Move W24, W7
	019 Move W26, W6
	020 Move W19, W5
	021 Move W20, W4
	022 Move W23, W3
	023 Move W22, W2
	024 Move W21, W1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {71}
	030 Move X0, 0x612000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x677000
	034 Move X0, [X0+3008]
	035 Call 0x1C17CF4
	036 Move X0, 0x677000
	037 Move X0, [X0+3016]
	038 Call 0x1C17CF4
	039 Move X0, 0x677000
	040 Move X0, [X0+3024]
	041 Call 0x1C17CF4
	042 Move X0, 0x677000
	043 Move X0, [X0+3032]
	044 Call 0x1C17CF4
	045 Move X0, 0x616000
	046 Move X0, [X0+3232]
	047 Call 0x1C17CF4
	048 Move X0, 0x677000
	049 Move X0, [X0+3040]
	050 Call 0x1C17CF4
	051 Move X0, 0x677000
	052 Move X0, [X0+824]
	053 Call 0x1C17CF4
	054 Move X0, 0x677000
	055 Move X0, [X0+3048]
	056 Call 0x1C17CF4
	057 Move X0, 0x63C000
	058 Move X0, [X0+592]
	059 Call 0x1C17CF4
	060 Move X0, 0x677000
	061 Move X0, [X0+3056]
	062 Call 0x1C17CF4
	063 Move X0, 0x677000
	064 Move X0, [X0+3064]
	065 Call 0x1C17CF4
	066 Move X0, 0x677000
	067 Move X0, [X0+3072]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X28+1423], W8
	071 Move X0, [X27]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X31
	077 Call FontEngine.InitializeFontEngine
	078 Move X0, X25
	079 Move W1, W21
	080 Move X2, X31
	081 Call FontEngine.LoadFontFace, X0, X1
	082 Compare W0, 0
	083 JumpIfEqual {113}
	084 Compare X25, 0
	085 JumpIfEqual {348}
	086 Move X19, 0x676000
	087 Move X20, 0x676000
	088 Move X21, 0x611000
	089 Move X19, [X19+3064]
	090 Move X20, [X20+3072]
	091 Move X21, [X21+2600]
	092 Move X0, X25
	093 Move X1, X31
	094 Call Object.get_name, X0
	095 Move X8, [X19]
	096 Move X2, [X20]
	097 Move X1, X0
	098 Move X3, X31
	099 Move X0, X8
	100 Call String.Concat, X0, X1, X2
	101 Move X8, [X21]
	102 Move X19, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, X19
	109 Move X1, X25
	110 Move X2, X31
	111 Call Debug.LogWarning, X0, X1
	112 Move X21, X31
	113 Move X8, 0x676000
	114 Move X8, [X8+3040]
	115 Move X0, [X8]
	116 Call 0x22547A0
	117 Compare X0, 0
	118 JumpIfEqual {348}
	119 Move X8, 0x676000
	120 Move X8, [X8+3056]
	121 Move X21, X0
	122 Move X8, [X8]
	123 Move [X0+48], X8
	124 Move X0, [X27]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Add X8, X31, 96
	130 Move X0, X31
	131 Call FontEngine.GetFaceInfo
	132 Add X0, X31, 0
	133 Add X1, X31, 96
	134 Move W2, 96
	135 Call 0x3EB2AC0
	136 Add X0, X21, 80
	137 Add X1, X31, 0
	138 Move W2, 96
	139 Call 0x3EB2AC0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move [X21+64], X25
	142 Move [X21+72], W26
	143 Move [X21+264], W20
	144 Move [X21+268], W19
	145 Move [X21+272], W22
	146 Move [X21+276], W23
	147 Move X8, 0x676000
	148 Move X8, [X8+3048]
	149 Move W1, 1
	150 Move X0, [X8]
	151 Call 0x1C17D6C
	152 Move [X21+216], X0
	153 Move X8, 0x63B000
	154 Move X8, [X8+592]
	155 Move X0, [X8]
	156 Call 0x1C17F10
	157 Move W3, 1
	158 Move W1, W31
	159 Move W2, W31
	160 Move W4, W31
	161 Move X5, X31
	162 Move X25, X0
	163 Call Texture2D..ctor, X0, X1, X2, X3, X4
	164 Move X8, [X21+216]
	165 Compare X8, 0
	166 JumpIfEqual {348}
	167 Move W9, [X8+24]
	168 Compare W9, 0
	169 JumpIfEqual {349}
	170 Move [X8+32], X25
	171 And W8, W24, 1
	172 Move [X21+228], W8
	173 Move X26, 0x676000
	174 Move X26, [X26+824]
	175 Move X0, [X26]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X31
	181 Move TEMP, X23
	182 And TEMP, TEMP, 16
	183 Compare TEMP, 16
	184 JumpIfEqual {242}
	185 Call ShaderUtilities.get_ShaderRef_MobileSDF
	186 Move X8, 0x615000
	187 Move X8, [X8+3232]
	188 Move X24, X0
	189 Move X8, [X8]
	190 Move X0, X8
	191 Call 0x1C17F10
	192 Move X1, X24
	193 Move X2, X31
	194 Move X23, X0
	195 Call Material..ctor, X0, X1
	196 Compare X23, 0
	197 JumpIfEqual {348}
	198 Move X8, [X26]
	199 Move X0, X23
	200 Move X2, X25
	201 Move X3, X31
	202 Move X8, [X8+184]
	203 Move W1, [X8]
	204 Call Material.SetTexture, X0, X1, X2
	205 Move X8, [X26]
	206 NotImplemented "Instruction SCVTF not yet implemented."
	207 Move X0, X23
	208 Move X2, X31
	209 Move X8, [X8+184]
	210 Move W1, [X8+104]
	211 Call Material.SetFloat, X0, X1, V0
	212 Move X8, [X26]
	213 NotImplemented "Instruction SCVTF not yet implemented."
	214 Move X0, X23
	215 Move X2, X31
	216 Move X8, [X8+184]
	217 Move W1, [X8+108]
	218 Call Material.SetFloat, X0, X1, V0
	219 Move X8, [X26]
	220 Move X0, X23
	221 Move X2, X31
	222 Move X8, [X8+184]
	223 Move W1, [X8+84]
	224 Add W8, W22, 1
	225 NotImplemented "Instruction SCVTF not yet implemented."
	226 Call Material.SetFloat, X0, X1, V0
	227 Move X8, [X26]
	228 Move V0, [X21+424]
	229 Move X0, X23
	230 Move X2, X31
	231 Move X8, [X8+184]
	232 Move W1, [X8+48]
	233 Call Material.SetFloat, X0, X1, V0
	234 Move X8, [X26]
	235 Move V0, [X21+432]
	236 Move X0, X23
	237 Move X2, X31
	238 Move X8, [X8+184]
	239 Move W1, [X8+52]
	240 Call Material.SetFloat, X0, X1, V0
	241 Move W25, 1
	242 Call ShaderUtilities.get_ShaderRef_MobileBitmap
	243 Move X8, 0x615000
	244 Move X8, [X8+3232]
	245 Move X22, X0
	246 Move X8, [X8]
	247 Move X0, X8
	248 Call 0x1C17F10
	249 Move X1, X22
	250 Move X2, X31
	251 Move X23, X0
	252 Call Material..ctor, X0, X1
	253 Compare X23, 0
	254 JumpIfEqual {348}
	255 Move X8, [X26]
	256 Move X0, X23
	257 Move X2, X25
	258 Move X3, X31
	259 Move X8, [X8+184]
	260 Move W1, [X8]
	261 Call Material.SetTexture, X0, X1, X2
	262 Move X8, [X26]
	263 NotImplemented "Instruction SCVTF not yet implemented."
	264 Move X0, X23
	265 Move X2, X31
	266 Move X8, [X8+184]
	267 Move W1, [X8+104]
	268 Call Material.SetFloat, X0, X1, V0
	269 Move X8, [X26]
	270 NotImplemented "Instruction SCVTF not yet implemented."
	271 Move X0, X23
	272 Move X2, X31
	273 Move X8, [X8+184]
	274 Move W1, [X8+108]
	275 Call Material.SetFloat, X0, X1, V0
	276 Move W25, W31
	277 Move [X21+32], X23
	278 Move X23, 0x676000
	279 Move X23, [X23+3032]
	280 Move X0, [X23]
	281 Call 0x1C17F10
	282 Move X24, 0x676000
	283 Move X24, [X24+3024]
	284 Move W1, 8
	285 Move X22, X0
	286 Move X2, [X24]
	287 Call List`1<GlyphRect>..ctor, X0, X1
	288 Subtract W3, W20, W25
	289 Subtract W4, W19, W25
	290 Add X0, X31, 96
	291 Move W1, W31
	292 Move W2, W31
	293 Move X5, X31
	294 Move [X31+96], X31
	295 Move [X31+104], X31
	296 Call GlyphRect..ctor, X0, X1, X2, X3, X4
	297 Compare X22, 0
	298 JumpIfEqual {348}
	299 Move X9, 0x676000
	300 Move X1, [X31+96]
	301 Move X2, [X31+104]
	302 Move X9, [X9+3016]
	303 Move W10, [X22+28]
	304 Move X8, [X22+16]
	305 Move X9, [X9]
	306 Add W10, W10, 1
	307 Move [X22+28], W10
	308 Compare X8, 0
	309 JumpIfEqual {348}
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Move W11, [X8+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Add W9, W10, 1
	314 Add X8, X8, X10
	315 Move [X22+24], W9
	316 Move [X8+32], X1
	317 Move [X8+40], X2
	318 Move X8, [X9+32]
	319 Move X0, X22
	320 Move X8, [X8+192]
	321 Move X3, [X8+112]
	322 Call List`1<GlyphRect>.AddWithResize, X0, X1
	323 Move [X21+240], X22
	324 Move X0, [X23]
	325 Call 0x1C17F10
	326 Move X2, [X24]
	327 Move W1, 8
	328 Move X19, X0
	329 Call List`1<GlyphRect>..ctor, X0, X1
	330 Move X0, X21
	331 Move [X21+232], X19
	332 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	333 Move X0, X21
	334 Move X20, [X31+272]
	335 Move X19, [X31+280]
	336 Move X22, [X31+256]
	337 Move X21, [X31+264]
	338 Move X24, [X31+240]
	339 Move X23, [X31+248]
	340 Move X26, [X31+224]
	341 Move X25, [X31+232]
	342 Move X28, [X31+208]
	343 Move X27, [X31+216]
	344 Move X29, [X31+192]
	345 Move X30, [X31+200]
	346 Add X31, X31, 288
	347 Return X0
	348 Call 0x1C17F20
	349 Call 0x1C17F28

Method: System.Void Awake()

Disassembly:
	0x03AE3404 ADRP X8, 0x675000
	0x03AE3408 LDR X8, [X8 + 0xCB8]
	0x03AE340C LDR X0, [X8]
	0x03AE3410 BL 0x1C16F10
	0x03AE3414 ADRP X8, 0x675000
	0x03AE3418 LDR X8, [X8 + 0xCB0]
	0x03AE341C MOV X20, X0
	0x03AE3420 LDR X1, [X8]
	0x03AE3424 BL 0x2B0E7A4
	0x03AE3428 STR X20, [X19 + 0xB8]
	0x03AE342C LDR X8, [X19 + 0x1D8]
	0x03AE3430 CBZ X8, 0x3AE3444
	0x03AE3434 LDR W9, [X8 + 0x1C]
	0x03AE3438 ADD W9, W9, 0x1
	0x03AE343C STP W31, W9, [X8 + 0x18]
	0x03AE3440 B 0x3AE346C
	0x03AE3444 ADRP X8, 0x616000
	0x03AE3448 LDR X8, [X8 + 0x1E8]
	0x03AE344C LDR X0, [X8]
	0x03AE3450 BL 0x1C16F10
	0x03AE3454 ADRP X8, 0x616000
	0x03AE3458 LDR X8, [X8 + 0x1E0]
	0x03AE345C MOV X20, X0
	0x03AE3460 LDR X1, [X8]
	0x03AE3464 BL 0x30C0EA0
	0x03AE3468 STR X20, [X19 + 0x1D8]
	0x03AE346C LDR X8, [X19 + 0x1E0]
	0x03AE3470 CBZ X8, 0x3AE3484
	0x03AE3474 LDR W9, [X8 + 0x1C]
	0x03AE3478 ADD W9, W9, 0x1
	0x03AE347C STP W31, W9, [X8 + 0x18]
	0x03AE3480 B 0x3AE34AC
	0x03AE3484 ADRP X8, 0x616000
	0x03AE3488 LDR X8, [X8 + 0x1E8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x900000
	006 Move X20, 0x611000
	007 Move W8, [X21+1424]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x611000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1424], W8
	019 Move X0, [X20]
	020 Move X20, [X19+32]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {45}
	033 Move X0, [X19+48]
	034 Move X1, X31
	035 Call String.IsNullOrEmpty, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {45}
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Void ReadFontAssetDefinition()

Disassembly:
	0x03AE2A88 STR W9, [X22 + 0x18]
	0x03AE2A8C STR X1, [X8 + 0x20]
	0x03AE2A90 B 0x3AE2AA8
	0x03AE2A94 LDR X8, [X9 + 0x20]
	0x03AE2A98 MOV X0, X22
	0x03AE2A9C LDR X8, [X8 + 0xC0]
	0x03AE2AA0 LDR X2, [X8 + 0x70]
	0x03AE2AA4 BL 0x301BF90
	0x03AE2AA8 LDR X0, [X19 + 0x130]
	0x03AE2AAC ADD W21, W21, 0x1
	0x03AE2AB0 CBNZ X0, 0x3AE2A34
	0x03AE2AB4 B 0x3AE2D90
	0x03AE2AB8 LDR X8, [X19 + 0x148]
	0x03AE2ABC CBNZ X8, 0x3AE2AE0
	0x03AE2AC0 LDR X8, [X23]
	0x03AE2AC4 MOV X0, X31
	0x03AE2AC8 MOV X2, X31
	0x03AE2ACC LDR X8, [X8 + 0xB8]
	0x03AE2AD0 LDR X1, [X8]
	0x03AE2AD4 BL 0x3226EF8
	0x03AE2AD8 TBZ X0, 0x0, 0x3AE2FA8
	0x03AE2ADC LDR X8, [X19 + 0x148]
	0x03AE2AE0 STR X8, [X19 + 0x38]
	0x03AE2AE4 LDR X8, [X19 + 0xB0]
	0x03AE2AE8 CBZ X8, 0x3AE2D90
	0x03AE2AEC LDP W2, W9, [X8 + 0x18]
	0x03AE2AF0 ADD W9, W9, 0x1
	0x03AE2AF4 CMP W2, 0x1
	0x03AE2AF8 STP W31, W9, [X8 + 0x18]
	0x03AE2AFC B.LT 0x3AE2B10
	0x03AE2B00 LDR X0, [X8 + 0x10]
	0x03AE2B04 MOV W1, W31
	0x03AE2B08 MOV X3, X31
	0x03AE2B0C BL 0x339FA34
	0x03AE2B10 LDR X8, [X19 + 0xC0]
	0x03AE2B14 CBZ X8, 0x3AE2D90
	0x03AE2B18 LDP W2, W9, [X8 + 0x18]
	0x03AE2B1C STR X26, [X31 + 0x68]
	0x03AE2B20 ADD W9, W9, 0x1
	0x03AE2B24 CMP W2, 0x1
	0x03AE2B28 STP W31, W9, [X8 + 0x18]
	0x03AE2B2C B.LT 0x3AE2B40
	0x03AE2B30 LDR X0, [X8 + 0x10]
	0x03AE2B34 MOV W1, W31
	0x03AE2B38 MOV X3, X31
	0x03AE2B3C BL 0x339FA34
	0x03AE2B40 LDR X0, [X19 + 0x118]
	0x03AE2B44 CBZ X0, 0x3AE2D90
	0x03AE2B48 ADRP X27, 0x676000
	0x03AE2B4C ADRP X26, 0x676000
	0x03AE2B50 LDR X27, [X27 + 0xC50]
	0x03AE2B54 LDR X26, [X26 + 0xC08]
	0x03AE2B58 MOV W20, W31
	0x03AE2B5C MOV W21, W31
	0x03AE2B60 MOVZ W28, 0x7F800000
	0x03AE2B64 MOVZ W29, 0x80000000
	0x03AE2B68 FMOV S8, 0.5
	0x03AE2B6C LDR W8, [X0 + 0x18]
	0x03AE2B70 CMP W21, W8
	0x03AE2B74 B.GE 0x3AE2D94
	0x03AE2B78 LDR X2, [X27]
	0x03AE2B7C MOV W1, W21
	0x03AE2B80 BL 0x301BCCC
	0x03AE2B84 LDR X8, [X26]
	0x03AE2B88 MOV X22, X0
	0x03AE2B8C MOV X0, X8
	0x03AE2B90 BL 0x1C16F10
	0x03AE2B94 MOV X1, X31
	0x03AE2B98 MOV X23, X0
	0x03AE2B9C BL 0x3C9C500
	0x03AE2BA0 CBZ X23, 0x3AE2D90
	0x03AE2BA4 ADD W21, W21, 0x1
	0x03AE2BA8 MOV X0, X23
	0x03AE2BAC MOV W1, W21
	0x03AE2BB0 MOV X2, X31
	0x03AE2BB4 BL 0x3C9C49C
	0x03AE2BB8 CBZ X22, 0x3AE2D90
	0x03AE2BBC LDP S0, S1, [X22 + 0x14]
	0x03AE2BC0 LDP S3, S2, [X22 + 0x1C]
	0x03AE2BC4 FMOV S4, W28
	0x03AE2BC8 LDR W8, [X19 + 0x10C]
	0x03AE2BCC FCVTZS W9, S0
	0x03AE2BD0 FCMP S0, S4
	0x03AE2BD4 FADD S0, S1, S2
	0x03AE2BD8 FADD S0, S0, S8
	0x03AE2BDC FADD S1, S3, S8
	0x03AE2BE0 CSEL W1, W29, W9, EQ
	0x03AE2BE4 FCVTZS W10, S0
	0x03AE2BE8 FCMP S0, S4
	0x03AE2BEC FADD S2, S2, S8
	0x03AE2BF0 FCVTZS W9, S1
	0x03AE2BF4 CSEL W10, W29, W10, EQ
	0x03AE2BF8 FCMP S1, S4
	0x03AE2BFC SUB W2, W8, W10
	0x03AE2C00 FCVTZS W8, S2
	0x03AE2C04 CSEL W3, W29, W9, EQ
	0x03AE2C08 FCMP S2, S4
	0x03AE2C0C CSEL W4, W29, W8, EQ
	0x03AE2C10 ADD X0, X31, 0x50
	0x03AE2C14 MOV X5, X31
	0x03AE2C18 STP X31, X31, [X31 + 0x50]
	0x03AE2C1C BL 0x3C9C108
	0x03AE2C20 LDP X1, X2, [X31 + 0x50]
	0x03AE2C24 MOV X0, X23
	0x03AE2C28 MOV X3, X31
	0x03AE2C2C BL 0x3C9C4D8
	0x03AE2C30 LDP S0, S1, [X22 + 0x1C]
	0x03AE2C34 LDP S2, S3, [X22 + 0x24]
	0x03AE2C38 LDR V4, [X22 + 0x2C]
	0x03AE2C3C ADD X0, X31, 0x38
	0x03AE2C40 MOV X1, X31
	0x03AE2C44 STP X31, X31, [X31 + 0x38]
	0x03AE2C48 STR W31, [X31 + 0x48]
	0x03AE2C4C BL 0x3C9C2F4
	0x03AE2C50 LDUR V0, [X31 + 0x38]
	0x03AE2C54 LDR W8, [X31 + 0x48]
	0x03AE2C58 ADD X1, X31, 0x20
	0x03AE2C5C MOV X0, X23
	0x03AE2C60 MOV X2, X31
	0x03AE2C64 STR V0, [X31 + 0x2]
	0x03AE2C68 STR W8, [X31 + 0x30]
	0x03AE2C6C BL 0x3C9C4B8
	0x03AE2C70 LDR V0, [X22 + 0x30]
	0x03AE2C74 MOV X0, X23
	0x03AE2C78 MOV X1, X31
	0x03AE2C7C BL 0x3C9C4E8
	0x03AE2C80 MOV X0, X23
	0x03AE2C84 MOV W1, W31
	0x03AE2C88 MOV X2, X31
	0x03AE2C8C BL 0x3C9C4F8
	0x03AE2C90 LDR X0, [X19 + 0xB0]
	0x03AE2C94 CBZ X0, 0x3AE2D90
	0x03AE2C98 ADRP X9, 0x676000
	0x03AE2C9C LDR W10, [X0 + 0x1C]
	0x03AE2CA0 LDR X8, [X0 + 0x10]
	0x03AE2CA4 LDR X9, [X9 + 0xC10]
	0x03AE2CA8 ADD W10, W10, 0x1
	0x03AE2CAC LDR X9, [X9]
	0x03AE2CB0 STR W10, [X0 + 0x1C]
	0x03AE2CB4 CBZ X8, 0x3AE2D90
	0x03AE2CB8 LDRSW X10, [X0 + 0x18]
	0x03AE2CBC LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x901000
	006 Move X20, 0x612000
	007 Move W8, [X21+1425]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x612000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x677000
	018 Move X0, [X0+824]
	019 Call 0x1C17CF4
	020 Move X0, 0x677000
	021 Move X0, [X0+1400]
	022 Call 0x1C17CF4
	023 Move X0, 0x677000
	024 Move X0, [X0+3000]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1425], W8
	028 Move X0, [X20]
	029 Move X20, [X19+32]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Inequality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {51}
	042 Move X0, [X19+48]
	043 Move X1, X31
	044 Call String.IsNullOrEmpty, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {51}
	049 Move X0, X19
	050 Call TMP_FontAsset.UpgradeFontAsset, X0
	051 Move X0, X19
	052 Call TMP_FontAsset.InitializeDictionaryLookupTables, X0
	053 Move X0, X19
	054 Call TMP_FontAsset.AddSynthesizedCharactersAndFaceMetrics, X0
	055 Add X20, X19, 80
	056 Move X0, X20
	057 Move X1, X31
	058 Call FaceInfo.get_scale, X0
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move S0, 1
	061 Move X0, X20
	062 Move X1, X31
	063 Call FaceInfo.set_scale, X0, V0
	064 Move X0, X20
	065 Move X1, X31
	066 Call FaceInfo.get_strikethroughOffset, X0
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 Move X0, X20
	069 Move X1, X31
	070 Call FaceInfo.get_capLine, X0
	071 Move S1, 2.5
	072 NotImplemented "Instruction FDIV not yet implemented."
	073 Move X0, X20
	074 Move X1, X31
	075 Call FaceInfo.set_strikethroughOffset, X0, V0
	076 Move W8, [X19+272]
	077 Compare W8, 0
	078 JumpIfNotEqual {123}
	079 Move X21, 0x677000
	080 Move X21, [X21+824]
	081 Move X20, [X19+32]
	082 Move X0, [X21]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Compare X20, 0
	088 JumpIfEqual {166}
	089 Move X8, [X21]
	090 Move X0, X20
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move W1, [X8+84]
	094 Call Material.HasProperty, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {123}
	099 Move X0, [X21]
	100 Move X20, [X19+32]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Compare X20, 0
	106 JumpIfEqual {166}
	107 Move X8, [X21]
	108 Move X0, X20
	109 Move X2, X31
	110 Move X8, [X8+184]
	111 Move W1, [X8+84]
	112 Call Material.GetFloat, X0, X1
	113 Move W9, 0x7F800000
	114 NotImplemented "Instruction FCVTZS not yet implemented."
	115 Move S1, W9
	116 Subtract W8, W8, 1
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move TEMP, 0x80000000
	119 Not TEMP
	120 Move W9, TEMP
	121 NotImplemented "Instruction CSEL not yet implemented."
	122 Move [X19+272], W8
	123 Move X20, 0x677000
	124 Move X21, 0x677000
	125 Move X20, [X20+3000]
	126 Move X21, [X21+1400]
	127 Move X0, X19
	128 Move X1, X31
	129 Call Object.get_name, X0
	130 Move X8, [X20]
	131 Move X20, X0
	132 Move W9, [X8+224]
	133 Compare W9, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X20
	138 Move X1, X31
	139 Call TMP_TextUtilities.GetSimpleHashCode, X0
	140 Move [X19+28], W0
	141 Move X0, X19
	142 Move X1, X31
	143 Call Object.get_name, X0
	144 Move X8, [X21]
	145 Move X20, X0
	146 Move W9, [X8+224]
	147 Compare W9, 0
	148 JumpIfNotEqual {152}
	149 Move X0, X8
	150 Call 0x1C17DFC
	151 Move X8, [X21]
	152 Move X8, [X8+184]
	153 Move X0, X20
	154 Move X2, X31
	155 Move X1, [X8+56]
	156 Call String.Concat, X0, X1
	157 Move X1, X31
	158 Call TMP_TextUtilities.GetSimpleHashCode, X0
	159 Move [X19+40], W0
	160 Move [X19+442], W31
	161 Move X20, [X31+16]
	162 Move X19, [X31+24]
	163 Move X30, [X31+32]
	164 Move X21, [X31+40]
	165 Return 
	166 Call 0x1C17F20

Method: System.Void InitializeDictionaryLookupTables()

Disassembly:
	0x03AE400C BL 0x1C16CF4
	0x03AE4010 MOVZ W8, 0x1
	0x03AE4014 STRB W8, [X20 + 0x598]
	0x03AE4018 LDR X20, [X19 + 0xC0]
	0x03AE401C CBZ X20, 0x3AE40D0
	0x03AE4020 LDR W8, [X20 + 0x18]
	0x03AE4024 CMP W8, 0x1
	0x03AE4028 B.LT 0x3AE40D0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TMP_FontAsset.InitializeGlyphLookupDictionary, X0
	005 Move X0, X19
	006 Call TMP_FontAsset.InitializeCharacterLookupDictionary, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call TMP_FontAsset.InitializeGlyphPaidAdjustmentRecordsLookupDictionary, X0
	011 Return 

Method: System.Void InitializeGlyphLookupDictionary()

Disassembly:
	0x03AE4338 BL 0x2D30E18
	0x03AE433C LDR X8, [X23]
	0x03AE4340 LDR X8, [X8 + 0xB8]
	0x03AE4344 STR X21, [X8 + 0x8]
	0x03AE4348 LDR X2, [X24]
	0x03AE434C MOV X0, X20
	0x03AE4350 MOV X1, X21
	0x03AE4354 BL 0x21C9CA0
	0x03AE4358 LDR X8, [X23]
	0x03AE435C MOV X20, X0
	0x03AE4360 LDR W9, [X8 + 0xE0]
	0x03AE4364 CBNZ W9, 0x3AE4374
	0x03AE4368 MOV X0, X8
	0x03AE436C BL 0x1C16DFC
	0x03AE4370 LDR X8, [X23]
	0x03AE4374 LDR X9, [X8 + 0xB8]
	0x03AE4378 ADRP X25, 0x674000
	0x03AE437C ADRP X24, 0x674000
	0x03AE4380 LDR X21, [X9 + 0x10]
	0x03AE4384 LDR X25, [X25 + 0xDD0]
	0x03AE4388 LDR X24, [X24 + 0xDD8]
	0x03AE438C CBNZ X21, 0x3AE43E4
	0x03AE4390 LDR W9, [X8 + 0xE0]
	0x03AE4394 CBNZ W9, 0x3AE43A4
	0x03AE4398 MOV X0, X8
	0x03AE439C BL 0x1C16DFC
	0x03AE43A0 LDR X8, [X23]
	0x03AE43A4 ADRP X9, 0x674000
	0x03AE43A8 LDR X8, [X8 + 0xB8]
	0x03AE43AC LDR X9, [X9 + 0xDE0]
	0x03AE43B0 LDR X22, [X8]
	0x03AE43B4 LDR X0, [X9]
	0x03AE43B8 BL 0x1C16F10
	0x03AE43BC ADRP X8, 0x674000
	0x03AE43C0 LDR X8, [X8 + 0xDF0]
	0x03AE43C4 MOV X1, X22
	0x03AE43C8 MOV X3, X31
	0x03AE43CC MOV X21, X0
	0x03AE43D0 LDR X2, [X8]
	0x03AE43D4 BL 0x2D30E18
	0x03AE43D8 LDR X8, [X23]
	0x03AE43DC LDR X8, [X8 + 0xB8]
	0x03AE43E0 STR X21, [X8 + 0x10]
	0x03AE43E4 LDR X2, [X25]
	0x03AE43E8 MOV X0, X20
	0x03AE43EC MOV X1, X21
	0x03AE43F0 BL 0x21D4F84
	0x03AE43F4 LDR X1, [X24]
	0x03AE43F8 BL 0x21D79F4
	0x03AE43FC STR X0, [X19 + 0x10]
	0x03AE4400 LDP X20, X19, [X31 + 0x30]
	0x03AE4404 LDP X22, X21, [X31 + 0x20]
	0x03AE4408 LDP X24, X23, [X31 + 0x10]
	0x03AE440C LDP X30, X25, [X31], #0x40
	0x03AE4410 RET
	0x03AE4414 BL 0x1C16F20
	0x03AE4418 STP X30, X19, [X31 - 0x10]!
	0x03AE441C MOV X19, X0
	0x03AE4420 BL 0x3AE40E0
	0x03AE4424 MOV X0, X19
	0x03AE4428 BL 0x3AE3FAC
	0x03AE442C LDR X0, [X19 + 0x128]
	0x03AE4430 CBZ X0, 0x3AE443C
	0x03AE4434 LDP X30, X19, [X31], #0x10
	0x03AE4438 B 0x3AE422C
	0x03AE443C BL 0x1C16F20
	0x03AE4440 STP X30, X21, [X31 - 0x20]!
	0x03AE4444 STP X20, X19, [X31 + 0x10]
	0x03AE4448 ADRP X21, 0x8FE000
	0x03AE444C LDRB W8, [X21 + 0x59A]
	0x03AE4450 MOV W19, W1
	0x03AE4454 MOV X20, X0
	0x03AE4458 TBNZ X8, 0x0, 0x3AE4470
	0x03AE445C ADRP X0, 0x674000
	0x03AE4460 LDR X0, [X0 + 0xC88]
	0x03AE4464 BL 0x1C16CF4
	0x03AE4468 MOVZ W8, 0x1
	0x03AE446C STRB W8, [X21 + 0x59A]
	0x03AE4470 LDR X0, [X20 + 0xC8]
	0x03AE4474 CBZ X0, 0x3AE4494
	0x03AE4478 ADRP X8, 0x674000
	0x03AE447C LDR X8, [X8 + 0xC88]
	0x03AE4480 MOV W1, W19
	0x03AE4484 LDP X20, X19, [X31 + 0x10]
	0x03AE4488 LDR X2, [X8]
	0x03AE448C LDP X30, X21, [X31], #0x20
	0x03AE4490 B 0x2B0F250
	0x03AE4494 LDP X20, X19, [X31 + 0x10]
	0x03AE4498 LDP X30, X21, [X31], #0x20
	0x03AE449C RET
	0x03AE44A0 STR X30, [X31 - 0x60]!
	0x03AE44A4 STP X28, X27, [X31 + 0x10]
	0x03AE44A8 STP X26, X25, [X31 + 0x20]
	0x03AE44AC STP X24, X23, [X31 + 0x30]
	0x03AE44B0 STP X22, X21, [X31 + 0x40]
	0x03AE44B4 STP X20, X19, [X31 + 0x50]
	0x03AE44B8 ADRP X23, 0x8FE000
	0x03AE44BC LDRB W8, [X23 + 0x59B]
	0x03AE44C0 MOV W19, W3
	0x03AE44C4 MOV W22, W2
	0x03AE44C8 MOV W20, W1
	0x03AE44CC MOV X21, X0
	0x03AE44D0 TBNZ X8, 0x0, 0x3AE4548
	0x03AE44D4 ADRP X0, 0x674000
	0x03AE44D8 LDR X0, [X0 + 0xC88]
	0x03AE44DC BL 0x1C16CF4
	0x03AE44E0 ADRP X0, 0x611000
	0x03AE44E4 LDR X0, [X0 + 0x9D8]
	0x03AE44E8 BL 0x1C16CF4
	0x03AE44EC ADRP X0, 0x616000
	0x03AE44F0 LDR X0, [X0 + 0x678]
	0x03AE44F4 BL 0x1C16CF4
	0x03AE44F8 ADRP X0, 0x616000
	0x03AE44FC LDR X0, [X0 + 0x688]
	0x03AE4500 BL 0x1C16CF4
	0x03AE4504 ADRP X0, 0x610000
	0x03AE4508 LDR X0, [X0 + 0xE08]
	0x03AE450C BL 0x1C16CF4
	0x03AE4510 ADRP X0, 0x674000
	0x03AE4514 LDR X0, [X0 + 0x610]
	0x03AE4518 BL 0x1C16CF4
	0x03AE451C ADRP X0, 0x674000
	0x03AE4520 LDR X0, [X0 + 0xC48]
	0x03AE4524 BL 0x1C16CF4
	0x03AE4528 ADRP X0, 0x60F000
	0x03AE452C LDR X0, [X0 + 0x598]
	0x03AE4530 BL 0x1C16CF4
	0x03AE4534 ADRP X0, 0x674000
	0x03AE4538 LDR X0, [X0 + 0x578]
	0x03AE453C BL 0x1C16CF4
	0x03AE4540 MOVZ W8, 0x1
	0x03AE4544 STRB W8, [X23 + 0x59B]
	0x03AE4548 STR X31, [X31 + 0x8]
	0x03AE454C LDR X0, [X21 + 0xC8]
	0x03AE4550 CBNZ X0, 0x3AE4564
	0x03AE4554 MOV X0, X21
	0x03AE4558 BL 0x3AE1A88
	0x03AE455C LDR X0, [X21 + 0xC8]
	0x03AE4560 CBZ X0, 0x3AE494C
	0x03AE4564 ADRP X8, 0x674000
	0x03AE4568 LDR X8, [X8 + 0xC88]
	0x03AE456C AND W20, W20, 0xFFFF
	0x03AE4570 MOV W1, W20
	0x03AE4574 LDR X2, [X8]
	0x03AE4578 BL 0x2B0F250
	0x03AE457C TBZ X0, 0x0, 0x3AE4588
	0x03AE4580 MOVZ W24, 0x1
	0x03AE4584 B 0x3AE4950
	0x03AE4588 TBZ X19, 0x0, 0x3AE45AC
	0x03AE458C LDR W8, [X21 + 0x48]
	0x03AE4590 CMP W8, 0x1
	0x03AE4594 B.NE 0x3AE45AC
	0x03AE4598 ADD X2, X31, 0x8
	0x03AE459C MOV X0, X21
	0x03AE45A0 MOV W1, W20
	0x03AE45A4 BL 0x3AE4974
	0x03AE45A8 TBNZ X0, 0x0, 0x3AE4580
	0x03AE45AC TBZ X22, 0x0, 0x3AE494C
	0x03AE45B0 ADRP X25, 0x674000
	0x03AE45B4 LDR X25, [X25 + 0x578]
	0x03AE45B8 LDR X0, [X25]
	0x03AE45BC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x8FF000
	012 Move W8, [X20+1426]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {53}
	018 Move X0, 0x675000
	019 Move X0, [X0+3224]
	020 Call 0x1C17CF4
	021 Move X0, 0x675000
	022 Move X0, [X0+3232]
	023 Call 0x1C17CF4
	024 Move X0, 0x675000
	025 Move X0, [X0+3240]
	026 Call 0x1C17CF4
	027 Move X0, 0x675000
	028 Move X0, [X0+3248]
	029 Call 0x1C17CF4
	030 Move X0, 0x675000
	031 Move X0, [X0+3256]
	032 Call 0x1C17CF4
	033 Move X0, 0x616000
	034 Move X0, [X0+464]
	035 Call 0x1C17CF4
	036 Move X0, 0x667000
	037 Move X0, [X0+2896]
	038 Call 0x1C17CF4
	039 Move X0, 0x616000
	040 Move X0, [X0+480]
	041 Call 0x1C17CF4
	042 Move X0, 0x675000
	043 Move X0, [X0+3264]
	044 Call 0x1C17CF4
	045 Move X0, 0x675000
	046 Move X0, [X0+3272]
	047 Call 0x1C17CF4
	048 Move X0, 0x616000
	049 Move X0, [X0+488]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1426], W8
	053 Move X0, [X19+184]
	054 Compare X0, 0
	055 JumpIfEqual {60}
	056 Move X8, 0x675000
	057 Move X8, [X8+3232]
	058 Move X1, [X8]
	059 Call Dictionary`2<UInt32, Object>.Clear, X0
	060 Move X8, 0x675000
	061 Move X8, [X8+3256]
	062 Move X0, [X8]
	063 Call 0x1C17F10
	064 Move X8, 0x675000
	065 Move X8, [X8+3248]
	066 Move X20, X0
	067 Move X1, [X8]
	068 Call Dictionary`2<UInt32, Object>..ctor, X0
	069 Move [X19+184], X20
	070 Move X8, [X19+472]
	071 Compare X8, 0
	072 JumpIfEqual {77}
	073 Move W9, [X8+28]
	074 Add W9, W9, 1
	075 Move [X8+24], W31
	076 Move [X8+28], W9
	077 Move X8, 0x616000
	078 Move X8, [X8+488]
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move X8, 0x616000
	082 Move X8, [X8+480]
	083 Move X20, X0
	084 Move X1, [X8]
	085 Call List`1<UInt32>..ctor, X0
	086 Move [X19+472], X20
	087 Move X8, [X19+480]
	088 Compare X8, 0
	089 JumpIfEqual {94}
	090 Move W9, [X8+28]
	091 Add W9, W9, 1
	092 Move [X8+24], W31
	093 Move [X8+28], W9
	094 Move X8, 0x616000
	095 Move X8, [X8+488]
	096 Move X0, [X8]
	097 Call 0x1C17F10
	098 Move X8, 0x616000
	099 Move X8, [X8+480]
	100 Move X20, X0
	101 Move X1, [X8]
	102 Call List`1<UInt32>..ctor, X0
	103 Move [X19+480], X20
	104 Move X0, [X19+176]
	105 Compare X0, 0
	106 JumpIfEqual {172}
	107 Move W23, [X0+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X24, 0x675000
	110 Move X25, 0x675000
	111 Move X26, 0x675000
	112 Move X27, 0x616000
	113 Move X24, [X24+3272]
	114 Move X25, [X25+3240]
	115 Move X26, [X26+3224]
	116 Move X27, [X27+464]
	117 Move W20, W31
	118 Move X2, [X24]
	119 Move W1, W20
	120 Call List`1<Object>.get_Item, X0, X1
	121 Compare X0, 0
	122 JumpIfEqual {172}
	123 Move X1, X31
	124 Move X22, X0
	125 Call Glyph.get_index, X0
	126 Move X8, [X19+184]
	127 Compare X8, 0
	128 JumpIfEqual {172}
	129 Move X2, [X25]
	130 Move W21, W0
	131 Move X0, X8
	132 Move W1, W21
	133 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {167}
	138 Move X0, [X19+184]
	139 Compare X0, 0
	140 JumpIfEqual {172}
	141 Move X3, [X26]
	142 Move W1, W21
	143 Move X2, X22
	144 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	145 Move X0, [X19+472]
	146 Compare X0, 0
	147 JumpIfEqual {172}
	148 Move W10, [X0+28]
	149 Move X8, [X0+16]
	150 Move X9, [X27]
	151 Add W10, W10, 1
	152 Move [X0+28], W10
	153 Compare X8, 0
	154 JumpIfEqual {172}
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move W11, [X8+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add W9, W10, 1
	159 Add X8, X8, X10
	160 Move [X0+24], W9
	161 Move [X8+32], W21
	162 Move X8, [X9+32]
	163 Move W1, W21
	164 Move X8, [X8+192]
	165 Move X2, [X8+112]
	166 Call List`1<UInt32>.AddWithResize, X0, X1
	167 Add W20, W20, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, [X19+176]
	170 Compare X0, 0
	171 JumpIfNotEqual {118}
	172 Call 0x1C17F20
	173 Move X20, [X31+64]
	174 Move X19, [X31+72]
	175 Move X22, [X31+48]
	176 Move X21, [X31+56]
	177 Move X24, [X31+32]
	178 Move X23, [X31+40]
	179 Move X26, [X31+16]
	180 Move X25, [X31+24]
	181 Move X30, [X31+80]
	182 Move X27, [X31+88]
	183 Return 

Method: System.Void InitializeCharacterLookupDictionary()

Disassembly:
	0x03AE45C0 CBNZ W8, 0x3AE45CC
	0x03AE45C4 BL 0x1C16DFC
	0x03AE45C8 LDR X0, [X25]
	0x03AE45CC LDR X8, [X0 + 0xB8]
	0x03AE45D0 LDR X8, [X8 + 0x40]
	0x03AE45D4 CBZ X8, 0x3AE4610
	0x03AE45D8 LDR W9, [X0 + 0xE0]
	0x03AE45DC CBNZ W9, 0x3AE45F4
	0x03AE45E0 BL 0x1C16DFC
	0x03AE45E4 LDR X8, [X25]
	0x03AE45E8 LDR X8, [X8 + 0xB8]
	0x03AE45EC LDR X8, [X8 + 0x40]
	0x03AE45F0 CBZ X8, 0x3AE4970
	0x03AE45F4 ADRP X9, 0x616000
	0x03AE45F8 LDR X9, [X9 + 0x678]
	0x03AE45FC MOV X0, X8
	0x03AE4600 LDR X1, [X9]
	0x03AE4604 BL 0x2DAA53C
	0x03AE4608 LDR X0, [X25]
	0x03AE460C B 0x3AE4650
	0x03AE4610 ADRP X8, 0x610000
	0x03AE4614 LDR X8, [X8 + 0xE08]
	0x03AE4618 LDR X0, [X8]
	0x03AE461C BL 0x1C16F10
	0x03AE4620 ADRP X8, 0x616000
	0x03AE4624 LDR X8, [X8 + 0x688]
	0x03AE4628 MOV X22, X0
	0x03AE462C LDR X1, [X8]
	0x03AE4630 BL 0x2DA9EF4
	0x03AE4634 LDR X0, [X25]
	0x03AE4638 LDR W8, [X0 + 0xE0]
	0x03AE463C CBNZ W8, 0x3AE4648
	0x03AE4640 BL 0x1C16DFC
	0x03AE4644 LDR X0, [X25]
	0x03AE4648 LDR X8, [X0 + 0xB8]
	0x03AE464C STR X22, [X8 + 0x40]
	0x03AE4650 LDR W8, [X0 + 0xE0]
	0x03AE4654 CBNZ W8, 0x3AE4660
	0x03AE4658 BL 0x1C16DFC
	0x03AE465C LDR X0, [X25]
	0x03AE4660 LDR X8, [X0 + 0xB8]
	0x03AE4664 MOV X0, X21
	0x03AE4668 MOV X1, X31
	0x03AE466C LDR X22, [X8 + 0x40]
	0x03AE4670 BL 0x3C385F8
	0x03AE4674 CBZ X22, 0x3AE4970
	0x03AE4678 ADRP X26, 0x611000
	0x03AE467C LDR X26, [X26 + 0x9D8]
	0x03AE4680 MOV W1, W0
	0x03AE4684 MOV X0, X22
	0x03AE4688 LDR X2, [X26]
	0x03AE468C BL 0x2DAB03C
	0x03AE4690 LDR X0, [X21 + 0x138]
	0x03AE4694 CBZ X0, 0x3AE4780
	0x03AE4698 LDR W8, [X0 + 0x18]
	0x03AE469C CMP W8, 0x1
	0x03AE46A0 B.LT 0x3AE4780
	0x03AE46A4 ADRP X27, 0x674000
	0x03AE46A8 ADRP X28, 0x60F000
	0x03AE46AC LDR X27, [X27 + 0xC48]
	0x03AE46B0 LDR X28, [X28 + 0x598]
	0x03AE46B4 MOV W22, W31
	0x03AE46B8 LDR X2, [X27]
	0x03AE46BC MOV W1, W22
	0x03AE46C0 BL 0x301BCCC
	0x03AE46C4 LDR X8, [X28]
	0x03AE46C8 MOV X23, X0
	0x03AE46CC LDR W9, [X8 + 0xE0]
	0x03AE46D0 CBNZ W9, 0x3AE46DC
	0x03AE46D4 MOV X0, X8
	0x03AE46D8 BL 0x1C16DFC
	0x03AE46DC MOV X0, X23
	0x03AE46E0 MOV X1, X31
	0x03AE46E4 MOV X2, X31
	0x03AE46E8 BL 0x3C354F8
	0x03AE46EC TBZ X0, 0x0, 0x3AE4780
	0x03AE46F0 LDR X0, [X21 + 0x138]
	0x03AE46F4 CBZ X0, 0x3AE4970
	0x03AE46F8 LDR X2, [X27]
	0x03AE46FC MOV W1, W22
	0x03AE4700 BL 0x301BCCC
	0x03AE4704 CBZ X0, 0x3AE4970
	0x03AE4708 MOV X1, X31
	0x03AE470C MOV X23, X0
	0x03AE4710 BL 0x3C385F8
	0x03AE4714 LDR X8, [X25]
	0x03AE4718 MOV W24, W0
	0x03AE471C LDR W9, [X8 + 0xE0]
	0x03AE4720 CBNZ W9, 0x3AE4730
	0x03AE4724 MOV X0, X8
	0x03AE4728 BL 0x1C16DFC
	0x03AE472C LDR X8, [X25]
	0x03AE4730 LDR X8, [X8 + 0xB8]
	0x03AE4734 LDR X0, [X8 + 0x40]
	0x03AE4738 CBZ X0, 0x3AE4970
	0x03AE473C LDR X2, [X26]
	0x03AE4740 MOV W1, W24
	0x03AE4744 BL 0x2DAB03C
	0x03AE4748 TBZ X0, 0x0, 0x3AE4768
	0x03AE474C AND W3, W19, 0x1
	0x03AE4750 MOVZ W2, 0x1
	0x03AE4754 MOV X0, X23
	0x03AE4758 MOV W1, W20
	0x03AE475C MOVZ W24, 0x1
	0x03AE4760 BL 0x3AE51DC
	0x03AE4764 TBNZ X0, 0x0, 0x3AE4950
	0x03AE4768 LDR X0, [X21 + 0x138]
	0x03AE476C CBZ X0, 0x3AE4970
	0x03AE4770 LDR W8, [X0 + 0x18]
	0x03AE4774 ADD W22, W22, 0x1
	0x03AE4778 CMP W22, W8
	0x03AE477C B.LT 0x3AE46B8
	0x03AE4780 MOV X0, X31
	0x03AE4784 BL 0x3B13F74
	0x03AE4788 CBZ X0, 0x3AE48A4
	0x03AE478C MOV X0, X31
	0x03AE4790 BL 0x3B13F74
	0x03AE4794 CBZ X0, 0x3AE4970
	0x03AE4798 LDR W8, [X0 + 0x18]
	0x03AE479C CMP W8, 0x1
	0x03AE47A0 B.LT 0x3AE48A4
	0x03AE47A4 MOV X0, X31
	0x03AE47A8 BL 0x3B13F74
	0x03AE47AC CBZ X0, 0x3AE4970
	0x03AE47B0 ADRP X27, 0x674000
	0x03AE47B4 ADRP X28, 0x60F000
	0x03AE47B8 LDR X27, [X27 + 0xC48]
	0x03AE47BC LDR X28, [X28 + 0x598]
	0x03AE47C0 MOV W21, W31
	0x03AE47C4 MOVZ W24, 0x1
	0x03AE47C8 LDR W8, [X0 + 0x18]
	0x03AE47CC CMP W21, W8
	0x03AE47D0 B.GE 0x3AE48A4
	0x03AE47D4 MOV X0, X31
	0x03AE47D8 BL 0x3B13F74

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x8FF000
	013 Move W8, [X20+1427]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0x675000
	020 Move X0, [X0+3280]
	021 Call 0x1C17CF4
	022 Move X0, 0x675000
	023 Move X0, [X0+3288]
	024 Call 0x1C17CF4
	025 Move X0, 0x675000
	026 Move X0, [X0+3208]
	027 Call 0x1C17CF4
	028 Move X0, 0x675000
	029 Move X0, [X0+3296]
	030 Call 0x1C17CF4
	031 Move X0, 0x675000
	032 Move X0, [X0+3216]
	033 Call 0x1C17CF4
	034 Move X0, 0x675000
	035 Move X0, [X0+3304]
	036 Call 0x1C17CF4
	037 Move X0, 0x617000
	038 Move X0, [X0+1656]
	039 Call 0x1C17CF4
	040 Move X0, 0x617000
	041 Move X0, [X0+1672]
	042 Call 0x1C17CF4
	043 Move X0, 0x611000
	044 Move X0, [X0+3592]
	045 Call 0x1C17CF4
	046 Move X0, 0x675000
	047 Move X0, [X0+3312]
	048 Call 0x1C17CF4
	049 Move X0, 0x675000
	050 Move X0, [X0+3320]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+1427], W8
	054 Move X0, [X19+200]
	055 Compare X0, 0
	056 JumpIfEqual {61}
	057 Move X8, 0x675000
	058 Move X8, [X8+3288]
	059 Move X1, [X8]
	060 Call Dictionary`2<UInt32, Object>.Clear, X0
	061 Move X8, 0x675000
	062 Move X8, [X8+3304]
	063 Move X0, [X8]
	064 Call 0x1C17F10
	065 Move X8, 0x675000
	066 Move X8, [X8+3296]
	067 Move X20, X0
	068 Move X1, [X8]
	069 Call Dictionary`2<UInt32, Object>..ctor, X0
	070 Move [X19+200], X20
	071 Move X0, [X19+192]
	072 Compare X0, 0
	073 JumpIfEqual {124}
	074 Move X25, 0x675000
	075 Move X26, 0x675000
	076 Move X27, 0x675000
	077 Move X28, 0x675000
	078 Move X24, 0x617000
	079 Move X25, [X25+3320]
	080 Move X26, [X26+3208]
	081 Move X27, [X27+3280]
	082 Move X28, [X28+3216]
	083 Move X24, [X24+1656]
	084 Move W20, W31
	085 Move W8, [X0+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X2, [X25]
	088 Move W1, W20
	089 Call List`1<Object>.get_Item, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {124}
	092 Move X21, X0
	093 Move X0, [X19+200]
	094 Compare X0, 0
	095 JumpIfEqual {124}
	096 Move W23, [X21+20]
	097 Move X2, [X26]
	098 Move W22, [X21+40]
	099 Move W1, W23
	100 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {120}
	105 Move X0, [X19+200]
	106 Compare X0, 0
	107 JumpIfEqual {124}
	108 Move X3, [X27]
	109 Move W1, W23
	110 Move X2, X21
	111 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	112 Move [X21+24], X19
	113 Move X0, [X19+184]
	114 Compare X0, 0
	115 JumpIfEqual {124}
	116 Move X2, [X28]
	117 Move W1, W22
	118 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	119 Move [X21+32], X0
	120 Move X0, [X19+192]
	121 Add W20, W20, 1
	122 Compare X0, 0
	123 JumpIfNotEqual {85}
	124 Call 0x1C17F20
	125 Move X0, [X19+448]
	126 Compare X0, 0
	127 JumpIfEqual {142}
	128 Move X1, [X24]
	129 Move X20, [X31+80]
	130 Move X19, [X31+88]
	131 Move X22, [X31+64]
	132 Move X21, [X31+72]
	133 Move X24, [X31+48]
	134 Move X23, [X31+56]
	135 Move X26, [X31+32]
	136 Move X25, [X31+40]
	137 Move X28, [X31+16]
	138 Move X27, [X31+24]
	139 Move X30, [X31+96]
	140 Call HashSet`1<Int32>.Clear, X0
	141 Return 
	142 Move X8, 0x611000
	143 Move X8, [X8+3592]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X8, 0x617000
	147 Move X8, [X8+1672]
	148 Move X20, X0
	149 Move X1, [X8]
	150 Call HashSet`1<Int32>..ctor, X0
	151 Move [X19+448], X20
	152 Move X20, [X31+80]
	153 Move X19, [X31+88]
	154 Move X22, [X31+64]
	155 Move X21, [X31+72]
	156 Move X24, [X31+48]
	157 Move X23, [X31+56]
	158 Move X26, [X31+32]
	159 Move X25, [X31+40]
	160 Move X28, [X31+16]
	161 Move X27, [X31+24]
	162 Move X30, [X31+96]
	163 Return 

Method: System.Void InitializeGlyphPaidAdjustmentRecordsLookupDictionary()

Disassembly:
	0x03AE47DC CBZ X0, 0x3AE4970
	0x03AE47E0 LDR X2, [X27]
	0x03AE47E4 MOV W1, W21
	0x03AE47E8 BL 0x301BCCC
	0x03AE47EC LDR X8, [X28]
	0x03AE47F0 MOV X22, X0
	0x03AE47F4 LDR W9, [X8 + 0xE0]
	0x03AE47F8 CBNZ W9, 0x3AE4804
	0x03AE47FC MOV X0, X8
	0x03AE4800 BL 0x1C16DFC
	0x03AE4804 MOV X0, X22
	0x03AE4808 MOV X1, X31
	0x03AE480C MOV X2, X31
	0x03AE4810 BL 0x3C354F8
	0x03AE4814 TBZ X0, 0x0, 0x3AE48A4
	0x03AE4818 MOV X0, X31
	0x03AE481C BL 0x3B13F74
	0x03AE4820 CBZ X0, 0x3AE4970
	0x03AE4824 LDR X2, [X27]
	0x03AE4828 MOV W1, W21
	0x03AE482C BL 0x301BCCC
	0x03AE4830 CBZ X0, 0x3AE4970
	0x03AE4834 MOV X1, X31
	0x03AE4838 MOV X22, X0
	0x03AE483C BL 0x3C385F8
	0x03AE4840 LDR X8, [X25]
	0x03AE4844 MOV W23, W0
	0x03AE4848 LDR W9, [X8 + 0xE0]
	0x03AE484C CBNZ W9, 0x3AE485C
	0x03AE4850 MOV X0, X8
	0x03AE4854 BL 0x1C16DFC
	0x03AE4858 LDR X8, [X25]
	0x03AE485C LDR X8, [X8 + 0xB8]
	0x03AE4860 LDR X0, [X8 + 0x40]
	0x03AE4864 CBZ X0, 0x3AE4970
	0x03AE4868 LDR X2, [X26]
	0x03AE486C MOV W1, W23
	0x03AE4870 BL 0x2DAB03C
	0x03AE4874 TBZ X0, 0x0, 0x3AE4890
	0x03AE4878 AND W3, W19, 0x1
	0x03AE487C MOVZ W2, 0x1
	0x03AE4880 MOV X0, X22
	0x03AE4884 MOV W1, W20
	0x03AE4888 BL 0x3AE51DC
	0x03AE488C TBNZ X0, 0x0, 0x3AE4950
	0x03AE4890 MOV X0, X31
	0x03AE4894 ADD W21, W21, 0x1
	0x03AE4898 BL 0x3B13F74
	0x03AE489C CBNZ X0, 0x3AE47C8
	0x03AE48A0 B 0x3AE4970
	0x03AE48A4 MOV X0, X31
	0x03AE48A8 BL 0x3B13E54
	0x03AE48AC ADRP X8, 0x60F000
	0x03AE48B0 LDR X8, [X8 + 0x598]
	0x03AE48B4 MOV X21, X0
	0x03AE48B8 LDR X8, [X8]
	0x03AE48BC LDR W9, [X8 + 0xE0]
	0x03AE48C0 CBNZ W9, 0x3AE48CC
	0x03AE48C4 MOV X0, X8
	0x03AE48C8 BL 0x1C16DFC
	0x03AE48CC MOV X0, X21
	0x03AE48D0 MOV X1, X31
	0x03AE48D4 MOV X2, X31
	0x03AE48D8 BL 0x3C354F8
	0x03AE48DC TBZ X0, 0x0, 0x3AE494C
	0x03AE48E0 MOV X0, X31
	0x03AE48E4 BL 0x3B13E54
	0x03AE48E8 CBZ X0, 0x3AE4970
	0x03AE48EC MOV X1, X31
	0x03AE48F0 MOV X21, X0
	0x03AE48F4 BL 0x3C385F8
	0x03AE48F8 LDR X8, [X25]
	0x03AE48FC MOV W22, W0
	0x03AE4900 LDR W9, [X8 + 0xE0]
	0x03AE4904 CBNZ W9, 0x3AE4914
	0x03AE4908 MOV X0, X8
	0x03AE490C BL 0x1C16DFC
	0x03AE4910 LDR X8, [X25]
	0x03AE4914 LDR X8, [X8 + 0xB8]
	0x03AE4918 LDR X0, [X8 + 0x40]
	0x03AE491C CBZ X0, 0x3AE4970
	0x03AE4920 LDR X2, [X26]
	0x03AE4924 MOV W1, W22
	0x03AE4928 BL 0x2DAB03C
	0x03AE492C TBZ X0, 0x0, 0x3AE494C
	0x03AE4930 AND W3, W19, 0x1
	0x03AE4934 MOVZ W2, 0x1
	0x03AE4938 MOV X0, X21
	0x03AE493C MOV W1, W20
	0x03AE4940 MOVZ W24, 0x1
	0x03AE4944 BL 0x3AE51DC
	0x03AE4948 TBNZ X0, 0x0, 0x3AE4950
	0x03AE494C MOV W24, W31
	0x03AE4950 MOV W0, W24
	0x03AE4954 LDP X20, X19, [X31 + 0x50]
	0x03AE4958 LDP X22, X21, [X31 + 0x40]
	0x03AE495C LDP X24, X23, [X31 + 0x30]
	0x03AE4960 LDP X26, X25, [X31 + 0x20]
	0x03AE4964 LDP X28, X27, [X31 + 0x10]
	0x03AE4968 LDR X30, [X31], #0x60
	0x03AE496C RET
	0x03AE4970 BL 0x1C16F20
	0x03AE4974 SUB X31, X31, 0x70
	0x03AE4978 STR X30, [X31 + 0x10]
	0x03AE497C STP X28, X27, [X31 + 0x20]
	0x03AE4980 STP X26, X25, [X31 + 0x30]
	0x03AE4984 STP X24, X23, [X31 + 0x40]
	0x03AE4988 STP X22, X21, [X31 + 0x50]
	0x03AE498C STP X20, X19, [X31 + 0x60]
	0x03AE4990 ADRP X22, 0x8FE000
	0x03AE4994 LDRB W8, [X22 + 0x5A9]
	0x03AE4998 MOV X21, X2
	0x03AE499C MOV W20, W1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x8FF000
	011 Move W8, [X20+1428]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x675000
	018 Move X0, [X0+3328]
	019 Call 0x1C17CF4
	020 Move X0, 0x675000
	021 Move X0, [X0+3336]
	022 Call 0x1C17CF4
	023 Move X0, 0x675000
	024 Move X0, [X0+3344]
	025 Call 0x1C17CF4
	026 Move X0, 0x675000
	027 Move X0, [X0+3352]
	028 Call 0x1C17CF4
	029 Move X0, 0x675000
	030 Move X0, [X0+3360]
	031 Call 0x1C17CF4
	032 Move X0, 0x675000
	033 Move X0, [X0+3368]
	034 Call 0x1C17CF4
	035 Move X0, 0x675000
	036 Move X0, [X0+3376]
	037 Call 0x1C17CF4
	038 Move X0, 0x675000
	039 Move X0, [X0+3384]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1428], W8
	043 Move X8, [X19+288]
	044 Compare X8, 0
	045 JumpIfEqual {53}
	046 Move X8, [X8+16]
	047 Compare X8, 0
	048 JumpIfEqual {53}
	049 Move W8, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X19
	052 Call TMP_FontAsset.UpgradeGlyphAdjustmentTableToFontFeatureTable, X0
	053 Move X21, [X19+296]
	054 Compare X21, 0
	055 JumpIfEqual {134}
	056 Move X0, [X21+24]
	057 Compare X0, 0
	058 JumpIfEqual {63}
	059 Move X8, 0x675000
	060 Move X8, [X8+3336]
	061 Move X1, [X8]
	062 Call Dictionary`2<UInt32, Object>.Clear, X0
	063 Move X8, 0x675000
	064 Move X8, [X8+3360]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X8, 0x675000
	068 Move X8, [X8+3352]
	069 Move X20, X0
	070 Move X1, [X8]
	071 Call Dictionary`2<UInt32, Object>..ctor, X0
	072 Move [X21+24], X20
	073 Move X8, [X19+296]
	074 Compare X8, 0
	075 JumpIfEqual {134}
	076 Move X20, [X8+16]
	077 Compare X20, 0
	078 JumpIfEqual {124}
	079 Move W8, [X20+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X24, 0x675000
	082 Move X25, 0x675000
	083 Move X26, 0x675000
	084 Move X24, [X24+3384]
	085 Move X25, [X25+3344]
	086 Move X26, [X26+3328]
	087 Move W21, W31
	088 Move X2, [X24]
	089 Move X0, X20
	090 Move W1, W21
	091 Call List`1<Object>.get_Item, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {134}
	094 Move X8, [X19+296]
	095 Compare X8, 0
	096 JumpIfEqual {134}
	097 Move X22, X0
	098 Move X0, [X8+24]
	099 Compare X0, 0
	100 JumpIfEqual {134}
	101 Move W8, [X22+16]
	102 Move W9, [X22+36]
	103 Move X2, [X25]
	104 Or W23, W8, W9
	105 Move W1, W23
	106 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {121}
	111 Move X8, [X19+296]
	112 Compare X8, 0
	113 JumpIfEqual {134}
	114 Move X0, [X8+24]
	115 Compare X0, 0
	116 JumpIfEqual {134}
	117 Move X3, [X26]
	118 Move W1, W23
	119 Move X2, X22
	120 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	121 Move W8, [X20+24]
	122 Add W21, W21, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X20, [X31+64]
	125 Move X19, [X31+72]
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X26, [X31+16]
	131 Move X25, [X31+24]
	132 Move X30, [X31+80]
	133 Return 
	134 Call 0x1C17F20

Method: System.Void AddSynthesizedCharactersAndFaceMetrics()

Disassembly:
	0x03AE402C ADRP X23, 0x674000
	0x03AE4030 LDR X23, [X23 + 0xDA0]
	0x03AE4034 LDR X0, [X23]
	0x03AE4038 LDR W8, [X0 + 0xE0]
	0x03AE403C CBNZ W8, 0x3AE4048
	0x03AE4040 BL 0x1C16DFC
	0x03AE4044 LDR X0, [X23]
	0x03AE4048 LDR X8, [X0 + 0xB8]
	0x03AE404C LDR X21, [X8 + 0x8]
	0x03AE4050 CBNZ X21, 0x3AE40A4
	0x03AE4054 LDR W8, [X0 + 0xE0]
	0x03AE4058 CBNZ W8, 0x3AE4064
	0x03AE405C BL 0x1C16DFC
	0x03AE4060 LDR X0, [X23]
	0x03AE4064 ADRP X9, 0x674000
	0x03AE4068 LDR X8, [X0 + 0xB8]
	0x03AE406C LDR X9, [X9 + 0xD90]
	0x03AE4070 LDR X22, [X8]
	0x03AE4074 LDR X0, [X9]
	0x03AE4078 BL 0x1C16F10
	0x03AE407C ADRP X8, 0x674000
	0x03AE4080 LDR X8, [X8 + 0xD98]
	0x03AE4084 MOV X1, X22
	0x03AE4088 MOV X3, X31
	0x03AE408C MOV X21, X0
	0x03AE4090 LDR X2, [X8]
	0x03AE4094 BL 0x2D30E18
	0x03AE4098 LDR X8, [X23]
	0x03AE409C LDR X8, [X8 + 0xB8]
	0x03AE40A0 STR X21, [X8 + 0x8]
	0x03AE40A4 ADRP X8, 0x674000
	0x03AE40A8 LDR X8, [X8 + 0xD80]
	0x03AE40AC MOV X0, X20
	0x03AE40B0 MOV X1, X21
	0x03AE40B4 LDR X2, [X8]
	0x03AE40B8 BL 0x21C9CA0
	0x03AE40BC ADRP X8, 0x674000
	0x03AE40C0 LDR X8, [X8 + 0xD88]
	0x03AE40C4 LDR X1, [X8]
	0x03AE40C8 BL 0x21D79F4
	0x03AE40CC STR X0, [X19 + 0xC0]
	0x03AE40D0 LDP X20, X19, [X31 + 0x20]
	0x03AE40D4 LDP X22, X21, [X31 + 0x10]
	0x03AE40D8 LDP X30, X23, [X31], #0x30
	0x03AE40DC RET
	0x03AE40E0 STP X30, X23, [X31 - 0x30]!
	0x03AE40E4 STP X22, X21, [X31 + 0x10]
	0x03AE40E8 STP X20, X19, [X31 + 0x20]
	0x03AE40EC ADRP X20, 0x8FE000
	0x03AE40F0 LDRB W8, [X20 + 0x599]
	0x03AE40F4 MOV X19, X0
	0x03AE40F8 TBNZ X8, 0x0, 0x3AE414C
	0x03AE40FC ADRP X0, 0x674000
	0x03AE4100 LDR X0, [X0 + 0xDA8]
	0x03AE4104 BL 0x1C16CF4
	0x03AE4108 ADRP X0, 0x674000
	0x03AE410C LDR X0, [X0 + 0xDB0]
	0x03AE4110 BL 0x1C16CF4
	0x03AE4114 ADRP X0, 0x674000
	0x03AE4118 LDR X0, [X0 + 0xDB8]
	0x03AE411C BL 0x1C16CF4
	0x03AE4120 ADRP X0, 0x674000
	0x03AE4124 LDR X0, [X0 + 0xCC0]
	0x03AE4128 BL 0x1C16CF4
	0x03AE412C ADRP X0, 0x674000
	0x03AE4130 LDR X0, [X0 + 0xDC0]
	0x03AE4134 BL 0x1C16CF4
	0x03AE4138 ADRP X0, 0x674000
	0x03AE413C LDR X0, [X0 + 0xDA0]
	0x03AE4140 BL 0x1C16CF4
	0x03AE4144 MOVZ W8, 0x1
	0x03AE4148 STRB W8, [X20 + 0x599]
	0x03AE414C LDR X20, [X19 + 0xB0]
	0x03AE4150 CBZ X20, 0x3AE4204
	0x03AE4154 LDR W8, [X20 + 0x18]
	0x03AE4158 CMP W8, 0x1
	0x03AE415C B.LT 0x3AE4204
	0x03AE4160 ADRP X23, 0x674000
	0x03AE4164 LDR X23, [X23 + 0xDA0]
	0x03AE4168 LDR X0, [X23]
	0x03AE416C LDR W8, [X0 + 0xE0]
	0x03AE4170 CBNZ W8, 0x3AE417C
	0x03AE4174 BL 0x1C16DFC
	0x03AE4178 LDR X0, [X23]
	0x03AE417C LDR X8, [X0 + 0xB8]
	0x03AE4180 LDR X21, [X8 + 0x10]
	0x03AE4184 CBNZ X21, 0x3AE41D8
	0x03AE4188 LDR W8, [X0 + 0xE0]
	0x03AE418C CBNZ W8, 0x3AE4198
	0x03AE4190 BL 0x1C16DFC
	0x03AE4194 LDR X0, [X23]
	0x03AE4198 ADRP X9, 0x674000
	0x03AE419C LDR X8, [X0 + 0xB8]
	0x03AE41A0 LDR X9, [X9 + 0xDB8]
	0x03AE41A4 LDR X22, [X8]
	0x03AE41A8 LDR X0, [X9]
	0x03AE41AC BL 0x1C16F10
	0x03AE41B0 ADRP X8, 0x674000
	0x03AE41B4 LDR X8, [X8 + 0xDC0]
	0x03AE41B8 MOV X1, X22
	0x03AE41BC MOV X3, X31
	0x03AE41C0 MOV X21, X0
	0x03AE41C4 LDR X2, [X8]
	0x03AE41C8 BL 0x2D30E18
	0x03AE41CC LDR X8, [X23]
	0x03AE41D0 LDR X8, [X8 + 0xB8]
	0x03AE41D4 STR X21, [X8 + 0x10]
	0x03AE41D8 ADRP X8, 0x674000
	0x03AE41DC LDR X8, [X8 + 0xDA8]
	0x03AE41E0 MOV X0, X20
	0x03AE41E4 MOV X1, X21
	0x03AE41E8 LDR X2, [X8]
	0x03AE41EC BL 0x21C9CA0
	0x03AE41F0 ADRP X8, 0x674000
	0x03AE41F4 LDR X8, [X8 + 0xDB0]
	0x03AE41F8 LDR X1, [X8]
	0x03AE41FC BL 0x21D79F4
	0x03AE4200 STR X0, [X19 + 0xB0]
	0x03AE4204 LDP X20, X19, [X31 + 0x20]
	0x03AE4208 LDP X22, X21, [X31 + 0x10]
	0x03AE420C LDP X30, X23, [X31], #0x30
	0x03AE4210 RET
	0x03AE4214 STR X30, [X31 - 0x10]!
	0x03AE4218 LDR X0, [X0 + 0x128]
	0x03AE421C CBZ X0, 0x3AE4228
	0x03AE4220 LDR X30, [X31], #0x10
	0x03AE4224 B 0x3AE422C
	0x03AE4228 BL 0x1C16F20
	0x03AE422C STP X30, X25, [X31 - 0x40]!
	0x03AE4230 STP X24, X23, [X31 + 0x10]
	0x03AE4234 STP X22, X21, [X31 + 0x20]
	0x03AE4238 STP X20, X19, [X31 + 0x30]
	0x03AE423C ADRP X20, 0x8FE000
	0x03AE4240 LDRB W8, [X20 + 0x5CE]
	0x03AE4244 MOV X19, X0
	0x03AE4248 TBNZ X8, 0x0, 0x3AE42B4
	0x03AE424C ADRP X0, 0x674000
	0x03AE4250 LDR X0, [X0 + 0xDC8]
	0x03AE4254 BL 0x1C16CF4
	0x03AE4258 ADRP X0, 0x674000
	0x03AE425C LDR X0, [X0 + 0xDD0]
	0x03AE4260 BL 0x1C16CF4
	0x03AE4264 ADRP X0, 0x674000
	0x03AE4268 LDR X0, [X0 + 0xDD8]
	0x03AE426C BL 0x1C16CF4
	0x03AE4270 ADRP X0, 0x674000
	0x03AE4274 LDR X0, [X0 + 0xDE0]
	0x03AE4278 BL 0x1C16CF4
	0x03AE427C ADRP X0, 0x674000
	0x03AE4280 LDR X0, [X0 + 0xD30]
	0x03AE4284 BL 0x1C16CF4
	0x03AE4288 ADRP X0, 0x674000
	0x03AE428C LDR X0, [X0 + 0xDE8]
	0x03AE4290 BL 0x1C16CF4
	0x03AE4294 ADRP X0, 0x674000
	0x03AE4298 LDR X0, [X0 + 0xDF0]
	0x03AE429C BL 0x1C16CF4
	0x03AE42A0 ADRP X0, 0x674000
	0x03AE42A4 LDR X0, [X0 + 0xDF8]
	0x03AE42A8 BL 0x1C16CF4
	0x03AE42AC MOVZ W8, 0x1
	0x03AE42B0 STRB W8, [X20 + 0x5CE]
	0x03AE42B4 LDR X20, [X19 + 0x10]
	0x03AE42B8 CBZ X20, 0x3AE4414
	0x03AE42BC LDR W8, [X20 + 0x18]
	0x03AE42C0 CMP W8, 0x1
	0x03AE42C4 B.LT 0x3AE4400
	0x03AE42C8 ADRP X23, 0x674000
	0x03AE42CC LDR X23, [X23 + 0xDF8]
	0x03AE42D0 LDR X0, [X23]
	0x03AE42D4 LDR W8, [X0 + 0xE0]
	0x03AE42D8 CBNZ W8, 0x3AE42E4
	0x03AE42DC BL 0x1C16DFC
	0x03AE42E0 LDR X0, [X23]
	0x03AE42E4 LDR X8, [X0 + 0xB8]
	0x03AE42E8 ADRP X24, 0x674000
	0x03AE42EC LDR X21, [X8 + 0x8]
	0x03AE42F0 LDR X24, [X24 + 0xDC8]
	0x03AE42F4 CBNZ X21, 0x3AE4348
	0x03AE42F8 LDR W8, [X0 + 0xE0]
	0x03AE42FC CBNZ W8, 0x3AE4308
	0x03AE4300 BL 0x1C16DFC
	0x03AE4304 LDR X0, [X23]
	0x03AE4308 ADRP X9, 0x674000
	0x03AE430C LDR X8, [X0 + 0xB8]
	0x03AE4310 LDR X9, [X9 + 0xDE0]
	0x03AE4314 LDR X22, [X8]
	0x03AE4318 LDR X0, [X9]
	0x03AE431C BL 0x1C16F10
	0x03AE4320 ADRP X8, 0x674000
	0x03AE4324 LDR X8, [X8 + 0xDE8]
	0x03AE4328 MOV X1, X22
	0x03AE432C MOV X3, X31
	0x03AE4330 MOV X21, X0
	0x03AE4334 LDR X2, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X20, 0x8FF000
	007 Move W8, [X20+1429]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x675000
	014 Move X0, [X0+3208]
	015 Call 0x1C17CF4
	016 Move X0, 0x675000
	017 Move X0, [X0+808]
	018 Call 0x1C17CF4
	019 Move X0, 0x675000
	020 Move X0, [X0+3216]
	021 Call 0x1C17CF4
	022 Move X0, 0x675000
	023 Move X0, [X0+3008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1429], W8
	027 Move [X31+32], X31
	028 Move [X31+40], X31
	029 Move [X31+48], W31
	030 Move W8, [X19+72]
	031 Move W20, W31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, 0x675000
	034 Move X20, [X19+64]
	035 Move X21, [X21+3008]
	036 Add X0, X19, 80
	037 Move X1, X31
	038 Call FaceInfo.get_pointSize, X0
	039 Move X8, [X21]
	040 Move W21, W0
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X20
	047 Move W1, W21
	048 Move X2, X31
	049 Call FontEngine.LoadFontFace, X0, X1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X21, 0x675000
	053 Move X21, [X21+3208]
	054 Move W1, 3
	055 Move W3, 1
	056 Move X0, X19
	057 Move W2, W20
	058 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	059 Move W1, 9
	060 Move W3, 1
	061 Move X0, X19
	062 Move W2, W20
	063 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	064 Move W1, 10
	065 Move X0, X19
	066 Move W2, W20
	067 Move W3, W31
	068 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	069 Move W1, 11
	070 Move X0, X19
	071 Move W2, W20
	072 Move W3, W31
	073 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	074 Move W1, 13
	075 Move X0, X19
	076 Move W2, W20
	077 Move W3, W31
	078 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	079 Move W1, 1564
	080 Move X0, X19
	081 Move W2, W20
	082 Move W3, W31
	083 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	084 Move W1, 0x200B
	085 Move X0, X19
	086 Move W2, W20
	087 Move W3, W31
	088 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	089 Move W1, 0x200E
	090 Move X0, X19
	091 Move W2, W20
	092 Move W3, W31
	093 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	094 Move W1, 0x200F
	095 Move X0, X19
	096 Move W2, W20
	097 Move W3, W31
	098 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	099 Move W1, 0x2028
	100 Move X0, X19
	101 Move W2, W20
	102 Move W3, W31
	103 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	104 Move W1, 0x2029
	105 Move X0, X19
	106 Move W2, W20
	107 Move W3, W31
	108 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	109 Move W1, 0x2060
	110 Move X0, X19
	111 Move W2, W20
	112 Move W3, W31
	113 Call TMP_FontAsset.AddSynthesizedCharacter, X0, X1, X2, X3
	114 Add X20, X19, 80
	115 Move X0, X20
	116 Move X1, X31
	117 Call FaceInfo.get_capLine, X0
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 Move X0, [X19+200]
	120 Compare X0, 0
	121 JumpIfEqual {217}
	122 Move X2, [X21]
	123 Move W1, 88
	124 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {163}
	129 Move X0, [X19+200]
	130 Compare X0, 0
	131 JumpIfEqual {217}
	132 Move X8, 0x675000
	133 Move X8, [X8+808]
	134 Move W1, 88
	135 Move X2, [X8]
	136 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	137 Compare X0, 0
	138 JumpIfEqual {217}
	139 Move X8, [X19+184]
	140 Compare X8, 0
	141 JumpIfEqual {217}
	142 Move X9, 0x675000
	143 Move W1, [X0+40]
	144 Move X9, [X9+3216]
	145 Move X0, X8
	146 Move X2, [X9]
	147 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	148 Compare X0, 0
	149 JumpIfEqual {217}
	150 Add X8, X31, 8
	151 Move X1, X31
	152 Call Glyph.get_metrics, X0
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 Move W8, [X31+24]
	155 Add X0, X31, 32
	156 Move X1, X31
	157 Move [X31+2], V0
	158 Move [X31+48], W8
	159 Call GlyphMetrics.get_horizontalBearingY, X0
	160 Move X0, X20
	161 Move X1, X31
	162 Call FaceInfo.set_capLine, X0, V0
	163 Move X0, X20
	164 Move X1, X31
	165 Call FaceInfo.get_meanLine, X0
	166 NotImplemented "Instruction FCMP not yet implemented."
	167 Move X0, [X19+200]
	168 Compare X0, 0
	169 JumpIfEqual {217}
	170 Move X2, [X21]
	171 Move W1, 120
	172 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {211}
	177 Move X0, [X19+200]
	178 Compare X0, 0
	179 JumpIfEqual {217}
	180 Move X8, 0x675000
	181 Move X8, [X8+808]
	182 Move W1, 120
	183 Move X2, [X8]
	184 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	185 Compare X0, 0
	186 JumpIfEqual {217}
	187 Move X8, [X19+184]
	188 Compare X8, 0
	189 JumpIfEqual {217}
	190 Move X9, 0x675000
	191 Move W1, [X0+40]
	192 Move X9, [X9+3216]
	193 Move X0, X8
	194 Move X2, [X9]
	195 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	196 Compare X0, 0
	197 JumpIfEqual {217}
	198 Add X8, X31, 8
	199 Move X1, X31
	200 Call Glyph.get_metrics, X0
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 Move W8, [X31+24]
	203 Add X0, X31, 32
	204 Move X1, X31
	205 Move [X31+2], V0
	206 Move [X31+48], W8
	207 Call GlyphMetrics.get_horizontalBearingY, X0
	208 Move X0, X20
	209 Move X1, X31
	210 Call FaceInfo.set_meanLine, X0, V0
	211 Move X20, [X31+80]
	212 Move X19, [X31+88]
	213 Move X30, [X31+64]
	214 Move X21, [X31+72]
	215 Add X31, X31, 96
	216 Return 
	217 Call 0x1C17F20

Method: System.Void AddSynthesizedCharacter(System.UInt32 unicode, System.Boolean isFontFaceLoaded, System.Boolean addImmediately = False)

Disassembly:
	0x03AE4CDC CBNZ W0, 0x3AE4D50
	0x03AE4CE0 LDR X8, [X19 + 0xD8]
	0x03AE4CE4 CBZ X8, 0x3AE51D4
	0x03AE4CE8 LDRSW X9, [X19 + 0xE0]
	0x03AE4CEC LDR W10, [X8 + 0x18]
	0x03AE4CF0 CMP W9, W10
	0x03AE4CF4 B.CS 0x3AE51D8
	0x03AE4CF8 ADD X8, X8, X9, 0x3, LSL
	0x03AE4CFC LDR X0, [X8 + 0x20]
	0x03AE4D00 CBZ X0, 0x3AE51D4
	0x03AE4D04 LDR W2, [X19 + 0x10C]
	0x03AE4D08 LDR W1, [X19 + 0x108]
	0x03AE4D0C MOV X3, X31
	0x03AE4D10 BL 0x3C1C644
	0x03AE4D14 LDR X8, [X19 + 0xD8]
	0x03AE4D18 CBZ X8, 0x3AE51D4
	0x03AE4D1C LDRSW X9, [X19 + 0xE0]
	0x03AE4D20 LDR W10, [X8 + 0x18]
	0x03AE4D24 CMP W9, W10
	0x03AE4D28 B.CS 0x3AE51D8
	0x03AE4D2C LDR X0, [X28]
	0x03AE4D30 ADD X8, X8, X9, 0x3, LSL
	0x03AE4D34 LDR X23, [X8 + 0x20]
	0x03AE4D38 LDR W9, [X0 + 0xE0]
	0x03AE4D3C CBNZ W9, 0x3AE4D44
	0x03AE4D40 BL 0x1C16DFC
	0x03AE4D44 MOV X0, X23
	0x03AE4D48 MOV X1, X31
	0x03AE4D4C BL 0x3C9E1E0
	0x03AE4D50 LDR X8, [X19 + 0xD8]
	0x03AE4D54 CBZ X8, 0x3AE51D4
	0x03AE4D58 LDRSW X9, [X19 + 0xE0]
	0x03AE4D5C LDR W10, [X8 + 0x18]
	0x03AE4D60 CMP W9, W10
	0x03AE4D64 B.CS 0x3AE51D8
	0x03AE4D68 LDR X0, [X28]
	0x03AE4D6C ADD X8, X8, X9, 0x3, LSL
	0x03AE4D70 LDR W23, [X19 + 0x110]
	0x03AE4D74 LDP X24, X26, [X19 + 0xE8]
	0x03AE4D78 LDR W25, [X19 + 0x114]
	0x03AE4D7C LDR W9, [X0 + 0xE0]
	0x03AE4D80 LDR X27, [X8 + 0x20]
	0x03AE4D84 CBNZ W9, 0x3AE4D8C
	0x03AE4D88 BL 0x1C16DFC
	0x03AE4D8C ADD X7, X31, 0x18
	0x03AE4D90 MOV W0, W22
	0x03AE4D94 MOV W1, W23
	0x03AE4D98 MOV W2, W31
	0x03AE4D9C MOV X3, X26
	0x03AE4DA0 MOV X4, X24
	0x03AE4DA4 MOV W5, W25
	0x03AE4DA8 MOV X6, X27
	0x03AE4DAC STR X31, [X31]
	0x03AE4DB0 BL 0x3C9CF80
	0x03AE4DB4 TBNZ X0, 0x0, 0x3AE4E38
	0x03AE4DB8 LDRB W8, [X19 + 0xE4]
	0x03AE4DBC CBZ W8, 0x3AE4AE8
	0x03AE4DC0 MOV X0, X19
	0x03AE4DC4 BL 0x3AE8424
	0x03AE4DC8 LDR X8, [X19 + 0xD8]
	0x03AE4DCC CBZ X8, 0x3AE51D4
	0x03AE4DD0 LDRSW X9, [X19 + 0xE0]
	0x03AE4DD4 LDR W10, [X8 + 0x18]
	0x03AE4DD8 CMP W9, W10
	0x03AE4DDC B.CS 0x3AE51D8
	0x03AE4DE0 LDR X0, [X28]
	0x03AE4DE4 ADD X8, X8, X9, 0x3, LSL
	0x03AE4DE8 LDR W23, [X19 + 0x110]
	0x03AE4DEC LDP X24, X26, [X19 + 0xE8]
	0x03AE4DF0 LDR W25, [X19 + 0x114]
	0x03AE4DF4 LDR W9, [X0 + 0xE0]
	0x03AE4DF8 LDR X27, [X8 + 0x20]
	0x03AE4DFC CBNZ W9, 0x3AE4E04
	0x03AE4E00 BL 0x1C16DFC
	0x03AE4E04 ADD X7, X31, 0x18
	0x03AE4E08 MOV W0, W22
	0x03AE4E0C MOV W1, W23
	0x03AE4E10 MOV W2, W31
	0x03AE4E14 MOV X3, X26
	0x03AE4E18 MOV X4, X24
	0x03AE4E1C MOV W5, W25
	0x03AE4E20 MOV X6, X27
	0x03AE4E24 STR X31, [X31]
	0x03AE4E28 BL 0x3C9CF80
	0x03AE4E2C MOV W8, W0
	0x03AE4E30 MOV W0, W31
	0x03AE4E34 TBZ X8, 0x0, 0x3AE4AEC
	0x03AE4E38 LDR X0, [X31 + 0x18]
	0x03AE4E3C CBZ X0, 0x3AE51D4
	0x03AE4E40 LDR W1, [X19 + 0xE0]
	0x03AE4E44 MOV X2, X31
	0x03AE4E48 BL 0x3C9C4F8
	0x03AE4E4C LDR X0, [X19 + 0xB0]
	0x03AE4E50 CBZ X0, 0x3AE51D4
	0x03AE4E54 ADRP X9, 0x674000
	0x03AE4E58 LDR X1, [X31 + 0x18]
	0x03AE4E5C LDR X9, [X9 + 0xC10]
	0x03AE4E60 LDR W10, [X0 + 0x1C]
	0x03AE4E64 LDR X8, [X0 + 0x10]
	0x03AE4E68 LDR X9, [X9]
	0x03AE4E6C ADD W10, W10, 0x1
	0x03AE4E70 STR W10, [X0 + 0x1C]
	0x03AE4E74 CBZ X8, 0x3AE51D4
	0x03AE4E78 LDRSW X10, [X0 + 0x18]
	0x03AE4E7C LDR W11, [X8 + 0x18]
	0x03AE4E80 CMP W10, W11
	0x03AE4E84 B.CS 0x3AE5010
	0x03AE4E88 ADD W9, W10, 0x1
	0x03AE4E8C ADD X8, X8, X10, 0x3, LSL
	0x03AE4E90 STR W9, [X0 + 0x18]
	0x03AE4E94 STR X1, [X8 + 0x20]
	0x03AE4E98 B 0x3AE5020
	0x03AE4E9C LDR X8, [X9 + 0x20]
	0x03AE4EA0 MOV X1, X22
	0x03AE4EA4 LDR X8, [X8 + 0xC0]
	0x03AE4EA8 LDR X2, [X8 + 0x70]
	0x03AE4EAC BL 0x301BF90
	0x03AE4EB0 LDR X0, [X19 + 0xC8]
	0x03AE4EB4 CBZ X0, 0x3AE51D4
	0x03AE4EB8 ADRP X8, 0x674000
	0x03AE4EBC LDR X2, [X21]
	0x03AE4EC0 LDR X8, [X8 + 0xCD0]
	0x03AE4EC4 MOV W1, W20
	0x03AE4EC8 LDR X3, [X8]
	0x03AE4ECC BL 0x2B0F05C
	0x03AE4ED0 MOVZ W0, 0x1
	0x03AE4ED4 B 0x3AE4AEC
	0x03AE4ED8 ADRP X8, 0x60F000
	0x03AE4EDC LDR X8, [X8 + 0xAC8]
	0x03AE4EE0 MOVZ W1, 0x5
	0x03AE4EE4 LDR X0, [X8]
	0x03AE4EE8 BL 0x1C16D6C
	0x03AE4EEC CBZ X0, 0x3AE51D4
	0x03AE4EF0 LDR W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x8FF000
	009 Move W8, [X23+1430]
	010 Move W21, W3
	011 Move W22, W2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x675000
	019 Move X0, [X0+3280]
	020 Call 0x1C17CF4
	021 Move X0, 0x675000
	022 Move X0, [X0+3208]
	023 Call 0x1C17CF4
	024 Move X0, 0x675000
	025 Move X0, [X0+3008]
	026 Call 0x1C17CF4
	027 Move X0, 0x638000
	028 Move X0, [X0+1544]
	029 Call 0x1C17CF4
	030 Move X0, 0x675000
	031 Move X0, [X0+3080]
	032 Call 0x1C17CF4
	033 Move X0, 0x675000
	034 Move X0, [X0+1456]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1430], W8
	038 Move [X31+56], X31
	039 Move X0, [X20+200]
	040 Compare X0, 0
	041 JumpIfEqual {161}
	042 Move X8, 0x675000
	043 Move X8, [X8+3208]
	044 Move W1, W19
	045 Move X2, [X8]
	046 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {153}
	051 Move TEMP, X22
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {94}
	055 Move X22, 0x675000
	056 Move X22, [X22+3008]
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move W0, W19
	063 Move X1, X31
	064 Call FontEngine.GetGlyphIndex, X0
	065 Compare W0, 0
	066 JumpIfEqual {94}
	067 Move TEMP, X21
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {153}
	071 Move X0, [X22]
	072 Move W8, [X20+276]
	073 Move W10, 8
	074 Move W9, [X0+224]
	075 And W31, W8, 4
	076 Move W8, 10
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Add X2, X31, 56
	082 Move W0, W19
	083 Move W1, W21
	084 Move X3, X31
	085 Call FontEngine.TryGetGlyphWithUnicodeValue, X0, X1, X2
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {153}
	090 Move X8, 0x675000
	091 Move X21, [X20+200]
	092 Move X23, [X31+56]
	093 Move X8, [X8+1456]
	094 Add X0, X31, 32
	095 Move S0, W31
	096 Move S1, W31
	097 Move S2, W31
	098 Move S3, W31
	099 Move S4, W31
	100 Move X1, X31
	101 Move [X31+32], X31
	102 Move [X31+40], X31
	103 Move [X31+48], W31
	104 Call GlyphMetrics..ctor, X0, V0, V1, V2, V3, V4
	105 Move X8, 0x638000
	106 Move X8, [X8+1544]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X31
	113 Call GlyphRect.get_zero
	114 Move X8, 0x675000
	115 Move X8, [X8+3080]
	116 Move X21, X0
	117 Move X22, X1
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move V0, [X31+2]
	121 Move W8, [X31+48]
	122 Add X2, X31, 0
	123 Move W1, W31
	124 Move [X31], V0
	125 Move S0, 1
	126 Move X3, X21
	127 Move X4, X22
	128 Move W5, W31
	129 Move X6, X31
	130 Move X23, X0
	131 Move [X31+16], W8
	132 Call Glyph..ctor, X0, X1, X2, X3, V0, X4
	133 Move [X31+56], X23
	134 Move X8, 0x675000
	135 Move X8, [X8+1456]
	136 Move X21, [X20+200]
	137 Move X0, [X8]
	138 Call 0x1C17F10
	139 Move W1, W19
	140 Move X2, X20
	141 Move X3, X23
	142 Move X22, X0
	143 Call TMP_Character..ctor, X0, X1, X2, X3
	144 Compare X21, 0
	145 JumpIfEqual {161}
	146 Move X8, 0x675000
	147 Move X8, [X8+3280]
	148 Move X0, X21
	149 Move W1, W19
	150 Move X2, X22
	151 Move X3, [X8]
	152 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	153 Move X20, [X31+96]
	154 Move X19, [X31+104]
	155 Move X22, [X31+80]
	156 Move X21, [X31+88]
	157 Move X30, [X31+64]
	158 Move X23, [X31+72]
	159 Add X31, X31, 112
	160 Return 
	161 Call 0x1C17F20

Method: System.Void AddCharacterToLookupCache(System.UInt32 unicode, TMPro.TMP_Character character)

Disassembly:
	0x03AE4EF4 MOV X20, X0
	0x03AE4EF8 CBZ W8, 0x3AE51D8
	0x03AE4EFC ADRP X8, 0x674000
	0x03AE4F00 LDR X8, [X8 + 0xE18]
	0x03AE4F04 MOV X0, X19
	0x03AE4F08 MOV X1, X31
	0x03AE4F0C LDR X8, [X8]
	0x03AE4F10 STR X8, [X20 + 0x20]
	0x03AE4F14 BL 0x3C389D4
	0x03AE4F18 LDR W8, [X20 + 0x18]
	0x03AE4F1C CMP W8, 0x1
	0x03AE4F20 B.LS 0x3AE51D8
	0x03AE4F24 CMP W8, 0x2
	0x03AE4F28 STR X0, [X20 + 0x28]
	0x03AE4F2C B.EQ 0x3AE51D8
	0x03AE4F30 ADRP X8, 0x674000
	0x03AE4F34 LDR X8, [X8 + 0xE10]
	0x03AE4F38 LDR X8, [X8]
	0x03AE4F3C STR X8, [X20 + 0x30]
	0x03AE4F40 LDR X8, [X19 + 0xD8]
	0x03AE4F44 CBZ X8, 0x3AE51D4
	0x03AE4F48 LDRSW X9, [X19 + 0xE0]
	0x03AE4F4C LDR W10, [X8 + 0x18]
	0x03AE4F50 CMP W9, W10
	0x03AE4F54 B.CS 0x3AE51D8
	0x03AE4F58 ADD X8, X8, X9, 0x3, LSL
	0x03AE4F5C LDR X0, [X8 + 0x20]
	0x03AE4F60 CBZ X0, 0x3AE51D4
	0x03AE4F64 MOV X1, X31
	0x03AE4F68 BL 0x3C389D4
	0x03AE4F6C LDR W8, [X20 + 0x18]
	0x03AE4F70 CMP W8, 0x3
	0x03AE4F74 B.LS 0x3AE51D8
	0x03AE4F78 CMP W8, 0x4
	0x03AE4F7C STR X0, [X20 + 0x38]
	0x03AE4F80 B.EQ 0x3AE51D8
	0x03AE4F84 ADRP X8, 0x674000
	0x03AE4F88 LDR X8, [X8 + 0xE08]
	0x03AE4F8C MOV X0, X20
	0x03AE4F90 MOV X1, X31
	0x03AE4F94 LDR X8, [X8]
	0x03AE4F98 STR X8, [X20 + 0x40]
	0x03AE4F9C BL 0x32278CC
	0x03AE4FA0 LDR X8, [X19 + 0xD8]
	0x03AE4FA4 CBZ X8, 0x3AE51D4
	0x03AE4FA8 LDRSW X9, [X19 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8FF000
	007 Move W8, [X22+1431]
	008 Move X20, X2
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x675000
	016 Move X0, [X0+3280]
	017 Call 0x1C17CF4
	018 Move X0, 0x612000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1431], W8
	023 Move X0, [X19+200]
	024 Compare X0, 0
	025 JumpIfEqual {59}
	026 Move X8, 0x675000
	027 Move X8, [X8+3280]
	028 Move W1, W21
	029 Move X2, X20
	030 Move X3, [X8]
	031 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	032 Compare X20, 0
	033 JumpIfEqual {59}
	034 Move X20, [X20+24]
	035 Compare X20, 0
	036 JumpIfEqual {59}
	037 Move W1, [X20+24]
	038 Move X19, [X19+448]
	039 Compare W1, 0
	040 JumpIfNotEqual {46}
	041 Move X0, X20
	042 Move X1, X31
	043 Call Object.GetInstanceID, X0
	044 Move W1, W0
	045 Move [X20+24], W0
	046 Compare X19, 0
	047 JumpIfEqual {59}
	048 Move X8, 0x612000
	049 Move X8, [X8+2520]
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X2, [X8]
	056 Move X30, [X31+48]
	057 Call HashSet`1<Int32>.Add, X0, X1
	058 Return 
	059 Call 0x1C17F20

Method: System.Void SortCharacterTable()

Disassembly:
	0x03AE4FAC LDR W10, [X8 + 0x18]
	0x03AE4FB0 CMP W9, W10
	0x03AE4FB4 B.CS 0x3AE51D8
	0x03AE4FB8 ADRP X10, 0x60F000
	0x03AE4FBC LDR X10, [X10 + 0xA28]
	0x03AE4FC0 MOV X20, X0
	0x03AE4FC4 ADD X8, X8, X9, 0x3, LSL
	0x03AE4FC8 LDR X19, [X8 + 0x20]
	0x03AE4FCC LDR X0, [X10]
	0x03AE4FD0 LDR W9, [X0 + 0xE0]
	0x03AE4FD4 CBNZ W9, 0x3AE4FDC
	0x03AE4FD8 BL 0x1C16DFC
	0x03AE4FDC MOV X0, X20
	0x03AE4FE0 MOV X1, X19
	0x03AE4FE4 MOV X2, X31
	0x03AE4FE8 BL 0x3C06B0C
	0x03AE4FEC B 0x3AE4AE8
	0x03AE4FF0 LDR X0, [X19 + 0x210]
	0x03AE4FF4 CBZ X0, 0x3AE51D4
	0x03AE4FF8 ADRP X8, 0x66A000
	0x03AE4FFC LDR X8, [X8 + 0x828]
	0x03AE5000 MOV W1, W20
	0x03AE5004 LDR X2, [X8]
	0x03AE5008 BL 0x2DCDCE0
	0x03AE500C B 0x3AE4AE8
	0x03AE5010 LDR X8, [X9 + 0x20]
	0x03AE5014 LDR X8, [X8 + 0xC0]
	0x03AE5018 LDR X2, [X8 + 0x70]
	0x03AE501C BL 0x301BF90
	0x03AE5020 LDR X0, [X19 + 0xB8]
	0x03AE5024 CBZ X0, 0x3AE51D4
	0x03AE5028 ADRP X8, 0x673000
	0x03AE502C LDR X2, [X31 + 0x18]
	0x03AE5030 LDR X8, [X8 + 0xC98]
	0x03AE5034 MOV W1, W22
	0x03AE5038 LDR X3, [X8]
	0x03AE503C BL 0x2B0F05C
	0x03AE5040 ADRP X8, 0x673000
	0x03AE5044 LDR X24, [X31 + 0x18]
	0x03AE5048 LDR X8, [X8 + 0x5B0]
	0x03AE504C LDR X0, [X8]
	0x03AE5050 BL 0x1C16F10
	0x03AE5054 MOV W1, W20
	0x03AE5058 MOV X2, X19
	0x03AE505C MOV X3, X24
	0x03AE5060 MOV X23, X0
	0x03AE5064 BL 0x3ADB950
	0x03AE5068 STR X23, [X21]
	0x03AE506C LDR X0, [X19 + 0xC0]
	0x03AE5070 CBZ X0, 0x3AE51D4
	0x03AE5074 ADRP X9, 0x673000
	0x03AE5078 LDR X9, [X9 + 0xC20]
	0x03AE507C LDR W10, [X0 + 0x1C]
	0x03AE5080 LDR X8, [X0 + 0x10]
	0x03AE5084 LDR X9, [X9]
	0x03AE5088 ADD W10, W10, 0x1
	0x03AE508C STR W10, [X0 + 0x1C]
	0x03AE5090 CBZ X8, 0x3AE51D4
	0x03AE5094 LDRSW X10, [X0 + 0x18]
	0x03AE5098 LDR W11, [X8 + 0x18]
	0x03AE509C CMP W10, W11
	0x03AE50A0 B.CS 0x3AE50B8
	0x03AE50A4 ADD W9, W10, 0x1
	0x03AE50A8 ADD X8, X8, X10, 0x3, LSL
	0x03AE50AC STR W9, [X0 + 0x18]
	0x03AE50B0 STR X23, [X8 + 0x20]
	0x03AE50B4 B 0x3AE50CC
	0x03AE50B8 LDR X8, [X9 + 0x20]
	0x03AE50BC MOV X1, X23
	0x03AE50C0 LDR X8, [X8 + 0xC0]
	0x03AE50C4 LDR X2, [X8 + 0x70]
	0x03AE50C8 BL 0x301BF90
	0x03AE50CC LDR X0, [X19 + 0xC8]
	0x03AE50D0 CBZ X0, 0x3AE51D4
	0x03AE50D4 ADRP X8, 0x673000
	0x03AE50D8 LDR X2, [X21]
	0x03AE50DC LDR X8, [X8 + 0xCD0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8FF000
	008 Move W8, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x675000
	015 Move X0, [X0+3456]
	016 Call 0x1C17CF4
	017 Move X0, 0x675000
	018 Move X0, [X0+3464]
	019 Call 0x1C17CF4
	020 Move X0, 0x675000
	021 Move X0, [X0+3472]
	022 Call 0x1C17CF4
	023 Move X0, 0x675000
	024 Move X0, [X0+3312]
	025 Call 0x1C17CF4
	026 Move X0, 0x675000
	027 Move X0, [X0+3480]
	028 Call 0x1C17CF4
	029 Move X0, 0x674000
	030 Move X0, [X0+3488]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1432], W8
	034 Move X20, [X19+192]
	035 Compare X20, 0
	036 JumpIfEqual {83}
	037 Move W8, [X20+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X23, 0x674000
	040 Move X23, [X23+3488]
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X23]
	047 Move X8, [X0+184]
	048 Move X21, [X8+8]
	049 Compare X21, 0
	050 JumpIfNotEqual {72}
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move X9, 0x674000
	057 Move X8, [X0+184]
	058 Move X9, [X9+3472]
	059 Move X22, [X8]
	060 Move X0, [X9]
	061 Call 0x1C17F10
	062 Move X8, 0x674000
	063 Move X8, [X8+3480]
	064 Move X1, X22
	065 Move X3, X31
	066 Move X21, X0
	067 Move X2, [X8]
	068 Call Func`2<Object, UInt32>..ctor, X0, X1, X2
	069 Move X8, [X23]
	070 Move X8, [X8+184]
	071 Move [X8+8], X21
	072 Move X8, 0x674000
	073 Move X8, [X8+3456]
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, [X8]
	077 Call Enumerable.OrderBy, X0, X1
	078 Move X8, 0x674000
	079 Move X8, [X8+3464]
	080 Move X1, [X8]
	081 Call Enumerable.ToList, X0
	082 Move [X19+192], X0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 

Method: System.Void SortGlyphTable()

Disassembly:
	0x03AE50E0 MOV W1, W20
	0x03AE50E4 LDR X3, [X8]
	0x03AE50E8 BL 0x2B0F05C
	0x03AE50EC LDR X0, [X19 + 0x1D8]
	0x03AE50F0 CBZ X0, 0x3AE51D4
	0x03AE50F4 ADRP X20, 0x614000
	0x03AE50F8 LDR X20, [X20 + 0x1D0]
	0x03AE50FC LDR W10, [X0 + 0x1C]
	0x03AE5100 LDR X8, [X0 + 0x10]
	0x03AE5104 LDR X9, [X20]
	0x03AE5108 ADD W10, W10, 0x1
	0x03AE510C STR W10, [X0 + 0x1C]
	0x03AE5110 CBZ X8, 0x3AE51D4
	0x03AE5114 LDRSW X10, [X0 + 0x18]
	0x03AE5118 LDR W11, [X8 + 0x18]
	0x03AE511C CMP W10, W11
	0x03AE5120 B.CS 0x3AE5138
	0x03AE5124 ADD W9, W10, 0x1
	0x03AE5128 ADD X8, X8, X10, 0x2, LSL
	0x03AE512C STR W9, [X0 + 0x18]
	0x03AE5130 STR W22, [X8 + 0x20]
	0x03AE5134 B 0x3AE514C
	0x03AE5138 LDR X8, [X9 + 0x20]
	0x03AE513C MOV W1, W22
	0x03AE5140 LDR X8, [X8 + 0xC0]
	0x03AE5144 LDR X2, [X8 + 0x70]
	0x03AE5148 BL 0x30C1698
	0x03AE514C LDR X0, [X19 + 0x1E0]
	0x03AE5150 CBZ X0, 0x3AE51D4
	0x03AE5154 LDR W10, [X0 + 0x1C]
	0x03AE5158 LDR X8, [X0 + 0x10]
	0x03AE515C LDR X9, [X20]
	0x03AE5160 ADD W10, W10, 0x1
	0x03AE5164 STR W10, [X0 + 0x1C]
	0x03AE5168 CBZ X8, 0x3AE51D4
	0x03AE516C LDRSW X10, [X0 + 0x18]
	0x03AE5170 LDR W11, [X8 + 0x18]
	0x03AE5174 CMP W10, W11
	0x03AE5178 B.CS 0x3AE5190
	0x03AE517C ADD W9, W10, 0x1
	0x03AE5180 ADD X8, X8, X10, 0x2, LSL
	0x03AE5184 STR W9, [X0 + 0x18]
	0x03AE5188 STR W22, [X8 + 0x20]
	0x03AE518C B 0x3AE51A4
	0x03AE5190 LDR X8, [X9 + 0x20]
	0x03AE5194 MOV W1, W22
	0x03AE5198 LDR X8, [X8 + 0xC0]
	0x03AE519C LDR X2, [X8 + 0x70]
	0x03AE51A0 BL 0x30C1698
	0x03AE51A4 MOV X0, X31
	0x03AE51A8 BL 0x3B13DE0
	0x03AE51AC TBZ X0, 0x0, 0x3AE4ED0
	0x03AE51B0 ADRP X8, 0x673000
	0x03AE51B4 LDR X8, [X8 + 0x578]
	0x03AE51B8 LDR X0, [X8]
	0x03AE51BC LDR W8, [X0 + 0xE0]
	0x03AE51C0 CBNZ W8, 0x3AE51C8
	0x03AE51C4 BL 0x1C16DFC
	0x03AE51C8 MOV X0, X19
	0x03AE51CC BL 0x3AE5F54
	0x03AE51D0 B 0x3AE4ED0
	0x03AE51D4 BL 0x1C16F20
	0x03AE51D8 BL 0x1C16F28
	0x03AE51DC STR X30, [X31 - 0x60]!
	0x03AE51E0 STP X28, X27, [X31 + 0x10]
	0x03AE51E4 STP X26, X25, [X31 + 0x20]
	0x03AE51E8 STP X24, X23, [X31 + 0x30]
	0x03AE51EC STP X22, X21, [X31 + 0x40]
	0x03AE51F0 STP X20, X19, [X31 + 0x50]
	0x03AE51F4 ADRP X23, 0x8FD000
	0x03AE51F8 LDRB W8, [X23 + 0x59C]
	0x03AE51FC MOV W19, W3
	0x03AE5200 MOV W22, W2
	0x03AE5204 MOV W20, W1
	0x03AE5208 MOV X21, X0
	0x03AE520C TBNZ X8, 0x0, 0x3AE5260
	0x03AE5210 ADRP X0, 0x673000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8FE000
	008 Move W8, [X20+1433]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x674000
	015 Move X0, [X0+3496]
	016 Call 0x1C17CF4
	017 Move X0, 0x674000
	018 Move X0, [X0+3504]
	019 Call 0x1C17CF4
	020 Move X0, 0x674000
	021 Move X0, [X0+3512]
	022 Call 0x1C17CF4
	023 Move X0, 0x674000
	024 Move X0, [X0+3264]
	025 Call 0x1C17CF4
	026 Move X0, 0x674000
	027 Move X0, [X0+3520]
	028 Call 0x1C17CF4
	029 Move X0, 0x674000
	030 Move X0, [X0+3488]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+1433], W8
	034 Move X20, [X19+176]
	035 Compare X20, 0
	036 JumpIfEqual {83}
	037 Move W8, [X20+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X23, 0x674000
	040 Move X23, [X23+3488]
	041 Move X0, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X23]
	047 Move X8, [X0+184]
	048 Move X21, [X8+16]
	049 Compare X21, 0
	050 JumpIfNotEqual {72}
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X23]
	056 Move X9, 0x674000
	057 Move X8, [X0+184]
	058 Move X9, [X9+3512]
	059 Move X22, [X8]
	060 Move X0, [X9]
	061 Call 0x1C17F10
	062 Move X8, 0x674000
	063 Move X8, [X8+3520]
	064 Move X1, X22
	065 Move X3, X31
	066 Move X21, X0
	067 Move X2, [X8]
	068 Call Func`2<Object, UInt32>..ctor, X0, X1, X2
	069 Move X8, [X23]
	070 Move X8, [X8+184]
	071 Move [X8+16], X21
	072 Move X8, 0x674000
	073 Move X8, [X8+3496]
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, [X8]
	077 Call Enumerable.OrderBy, X0, X1
	078 Move X8, 0x674000
	079 Move X8, [X8+3504]
	080 Move X1, [X8]
	081 Call Enumerable.ToList, X0
	082 Move [X19+176], X0
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 

Method: System.Void SortFontFeatureTable()

Disassembly:
	0x03AE5214 LDR X0, [X0 + 0xC88]
	0x03AE5218 BL 0x1C16CF4
	0x03AE521C ADRP X0, 0x610000
	0x03AE5220 LDR X0, [X0 + 0x9D8]
	0x03AE5224 BL 0x1C16CF4
	0x03AE5228 ADRP X0, 0x673000

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+296]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Void SortAllTables()

Disassembly:
	0x03AE5418 MOV X21, X0
	0x03AE541C TBNZ X8, 0x0, 0x3AE5464
	0x03AE5420 ADRP X0, 0x673000
	0x03AE5424 LDR X0, [X0 + 0xC88]
	0x03AE5428 BL 0x1C16CF4
	0x03AE542C ADRP X0, 0x673000
	0x03AE5430 LDR X0, [X0 + 0xE20]
	0x03AE5434 BL 0x1C16CF4
	0x03AE5438 ADRP X0, 0x673000
	0x03AE543C LDR X0, [X0 + 0xE28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TMP_FontAsset.SortGlyphTable, X0
	005 Move X0, X19
	006 Call TMP_FontAsset.SortCharacterTable, X0
	007 Move X0, [X19+296]
	008 Compare X0, 0
	009 JumpIfEqual {14}
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call TMP_FontFeatureTable.SortGlyphPairAdjustmentRecords, X0
	013 Return 
	014 Call 0x1C17F20

Method: System.Boolean HasCharacter(System.Int32 character)

Disassembly:
	0x03AE5440 BL 0x1C16CF4
	0x03AE5444 ADRP X0, 0x673000
	0x03AE5448 LDR X0, [X0 + 0xE30]
	0x03AE544C BL 0x1C16CF4
	0x03AE5450 ADRP X0, 0x673000
	0x03AE5454 LDR X0, [X0 + 0xE38]
	0x03AE5458 BL 0x1C16CF4
	0x03AE545C MOVZ W8, 0x1
	0x03AE5460 STRB W8, [X22 + 0x59D]
	0x03AE5464 LDR X8, [X21 + 0xC8]
	0x03AE5468 CBZ X8, 0x3AE5578
	0x03AE546C ADRP X8, 0x673000
	0x03AE5470 LDR X8, [X8 + 0xE38]
	0x03AE5474 ADRP X22, 0x673000
	0x03AE5478 LDR X0, [X8]
	0x03AE547C LDR X22, [X22 + 0xE28]
	0x03AE5480 BL 0x1C16F10
	0x03AE5484 LDR X1, [X22]
	0x03AE5488 MOV X22, X0
	0x03AE548C BL 0x2F6A188
	0x03AE5490 STR X22, [X19]
	0x03AE5494 CBZ X20, 0x3AE5594
	0x03AE5498 LDR W8, [X20 + 0x10]
	0x03AE549C CMP W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8FE000
	006 Move W8, [X21+1434]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x674000
	014 Move X0, [X0+3208]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1434], W8
	018 Move X0, [X20+200]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x674000
	022 Move X8, [X8+3208]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	030 Return X0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Boolean HasCharacter(System.Char character, System.Boolean searchFallbacks = False, System.Boolean tryAddCharacter = False)

Disassembly:
	0x03AE54A0 B.LT 0x3AE5560
	0x03AE54A4 ADRP X24, 0x673000
	0x03AE54A8 ADRP X25, 0x673000
	0x03AE54AC LDR X24, [X24 + 0xC88]
	0x03AE54B0 LDR X25, [X25 + 0xE20]
	0x03AE54B4 MOV W22, W31
	0x03AE54B8 LDR X23, [X21 + 0xC8]
	0x03AE54BC MOV X0, X20
	0x03AE54C0 MOV W1, W22
	0x03AE54C4 MOV X2, X31
	0x03AE54C8 BL 0x3222A1C
	0x03AE54CC CBZ X23, 0x3AE5594
	0x03AE54D0 LDR X2, [X24]
	0x03AE54D4 AND W1, W0, 0xFFFF
	0x03AE54D8 MOV X0, X23
	0x03AE54DC BL 0x2B0F250
	0x03AE54E0 TBNZ X0, 0x0, 0x3AE5550
	0x03AE54E4 LDR X23, [X19]
	0x03AE54E8 MOV X0, X20
	0x03AE54EC MOV W1, W22
	0x03AE54F0 MOV X2, X31
	0x03AE54F4 BL 0x3222A1C
	0x03AE54F8 CBZ X23, 0x3AE5594
	0x03AE54FC LDR W10, [X23 + 0x1C]
	0x03AE5500 LDR X8, [X23 + 0x10]
	0x03AE5504 LDR X9, [X25]
	0x03AE5508 ADD W10, W10, 0x1
	0x03AE550C STR W10, [X23 + 0x1C]
	0x03AE5510 CBZ X8, 0x3AE5594
	0x03AE5514 LDRSW X10, [X23 + 0x18]
	0x03AE5518 LDR W11, [X8 + 0x18]
	0x03AE551C MOV W1, W0
	0x03AE5520 CMP W10, W11
	0x03AE5524 B.CS 0x3AE553C
	0x03AE5528 ADD W9, W10, 0x1
	0x03AE552C ADD X8, X8, X10, 0x1, LSL
	0x03AE5530 STR W9, [X23 + 0x18]
	0x03AE5534 STRH W1, [X8 + 0x20]
	0x03AE5538 B 0x3AE5550
	0x03AE553C LDR X8, [X9 + 0x20]
	0x03AE5540 MOV X0, X23
	0x03AE5544 LDR X8, [X8 + 0xC0]
	0x03AE5548 LDR X2, [X8 + 0x70]
	0x03AE554C BL 0x2F6A980
	0x03AE5550 LDR W8, [X20 + 0x10]
	0x03AE5554 ADD W22, W22, 0x1
	0x03AE5558 CMP W22, W8
	0x03AE555C B.LT 0x3AE54B8
	0x03AE5560 LDR X8, [X19]
	0x03AE5564 CBZ X8, 0x3AE5594
	0x03AE5568 LDR W8, [X8 + 0x18]
	0x03AE556C CMP W8, 0x0
	0x03AE5570 CSET W0, EQ
	0x03AE5574 B 0x3AE5580
	0x03AE5578 MOV W0, W31
	0x03AE557C STR X31, [X19]
	0x03AE5580 LDP X20, X19, [X31 + 0x30]
	0x03AE5584 LDP X22, X21, [X31 + 0x20]
	0x03AE5588 LDP X24, X23, [X31 + 0x10]
	0x03AE558C LDP X30, X25, [X31], #0x40
	0x03AE5590 RET
	0x03AE5594 BL 0x1C16F20
	0x03AE5598 SUB X31, X31, 0x80
	0x03AE559C STP X29, X30, [X31 + 0x20]
	0x03AE55A0 STP X28, X27, [X31 + 0x30]
	0x03AE55A4 STP X26, X25, [X31 + 0x40]
	0x03AE55A8 STP X24, X23, [X31 + 0x50]
	0x03AE55AC STP X22, X21, [X31 + 0x60]
	0x03AE55B0 STP X20, X19, [X31 + 0x70]
	0x03AE55B4 ADRP X19, 0x8FD000
	0x03AE55B8 LDRB W8, [X19 + 0x59E]
	0x03AE55BC MOV W20, W4
	0x03AE55C0 MOV X21, X2
	0x03AE55C4 MOV X22, X1
	0x03AE55C8 MOV X23, X0
	0x03AE55CC STR W3, [X31 + 0x14]
	0x03AE55D0 TBNZ X8, 0x0, 0x3AE5678
	0x03AE55D4 ADRP X0, 0x673000
	0x03AE55D8 LDR X0, [X0 + 0xC88]
	0x03AE55DC BL 0x1C16CF4
	0x03AE55E0 ADRP X0, 0x610000
	0x03AE55E4 LDR X0, [X0 + 0x9D8]
	0x03AE55E8 BL 0x1C16CF4
	0x03AE55EC ADRP X0, 0x615000
	0x03AE55F0 LDR X0, [X0 + 0x678]
	0x03AE55F4 BL 0x1C16CF4
	0x03AE55F8 ADRP X0, 0x615000
	0x03AE55FC LDR X0, [X0 + 0x688]
	0x03AE5600 BL 0x1C16CF4
	0x03AE5604 ADRP X0, 0x60F000
	0x03AE5608 LDR X0, [X0 + 0xE08]
	0x03AE560C BL 0x1C16CF4
	0x03AE5610 ADRP X0, 0x614000
	0x03AE5614 LDR X0, [X0 + 0x1D0]
	0x03AE5618 BL 0x1C16CF4
	0x03AE561C ADRP X0, 0x665000
	0x03AE5620 LDR X0, [X0 + 0xB50]
	0x03AE5624 BL 0x1C16CF4
	0x03AE5628 ADRP X0, 0x63B000
	0x03AE562C LDR X0, [X0 + 0x558]
	0x03AE5630 BL 0x1C16CF4
	0x03AE5634 ADRP X0, 0x673000
	0x03AE5638 LDR X0, [X0 + 0x610]
	0x03AE563C BL 0x1C16CF4
	0x03AE5640 ADRP X0, 0x673000
	0x03AE5644 LDR X0, [X0 + 0x858]
	0x03AE5648 BL 0x1C16CF4
	0x03AE564C ADRP X0, 0x673000
	0x03AE5650 LDR X0, [X0 + 0xC48]
	0x03AE5654 BL 0x1C16CF4
	0x03AE5658 ADRP X0, 0x60E000
	0x03AE565C LDR X0, [X0 + 0x598]
	0x03AE5660 BL 0x1C16CF4
	0x03AE5664 ADRP X0, 0x673000
	0x03AE5668 LDR X0, [X0 + 0x578]
	0x03AE566C BL 0x1C16CF4
	0x03AE5670 MOVZ W8, 0x1
	0x03AE5674 STRB W8, [X19 + 0x59E]
	0x03AE5678 STR X31, [X31 + 0x18]
	0x03AE567C STR X31, [X21]
	0x03AE5680 LDR X8, [X23 + 0xC8]
	0x03AE5684 CBNZ X8, 0x3AE5698
	0x03AE5688 MOV X0, X23
	0x03AE568C BL 0x3AE1A88
	0x03AE5690 LDR X8, [X23 + 0xC8]
	0x03AE5694 CBZ X8, 0x3AE5B60
	0x03AE5698 LDR X8, [X23 + 0x208]
	0x03AE569C CBZ X8, 0x3AE5B84
	0x03AE56A0 LDR W9, [X8 + 0x1C]
	0x03AE56A4 STR X21, [X31 + 0x8]
	0x03AE56A8 ADD W9, W9, 0x1
	0x03AE56AC STP W31, W9, [X8 + 0x18]
	0x03AE56B0 CBZ X22, 0x3AE5B84
	0x03AE56B4 LDR W8, [X22 + 0x10]
	0x03AE56B8 CMP W8, 0x1
	0x03AE56BC B.LT 0x3AE5B20
	0x03AE56C0 ADRP X19, 0x673000
	0x03AE56C4 ADRP X21, 0x610000
	0x03AE56C8 ADRP X29, 0x673000
	0x03AE56CC LDR X19, [X19 + 0x578]
	0x03AE56D0 LDR X21, [X21 + 0x9D8]
	0x03AE56D4 LDR X29, [X29 + 0xC48]
	0x03AE56D8 MOV W24, W31
	0x03AE56DC MOV X0, X22
	0x03AE56E0 MOV W1, W24
	0x03AE56E4 MOV X2, X31
	0x03AE56E8 BL 0x3222A1C
	0x03AE56EC LDR X8, [X23 + 0xC8]
	0x03AE56F0 CBZ X8, 0x3AE5B84
	0x03AE56F4 ADRP X9, 0x673000
	0x03AE56F8 LDR X9, [X9 + 0xC88]
	0x03AE56FC AND W25, W0, 0xFFFF
	0x03AE5700 MOV X0, X8
	0x03AE5704 MOV W1, W25
	0x03AE5708 LDR X2, [X9]
	0x03AE570C BL 0x2B0F250
	0x03AE5710 TBNZ X0, 0x0, 0x3AE5B10
	0x03AE5714 TBZ X20, 0x0, 0x3AE5738
	0x03AE5718 LDR W8, [X23 + 0x48]
	0x03AE571C CMP W8, 0x1
	0x03AE5720 B.NE 0x3AE5738
	0x03AE5724 ADD X2, X31, 0x18
	0x03AE5728 MOV X0, X23
	0x03AE572C MOV W1, W25
	0x03AE5730 BL 0x3AE4974
	0x03AE5734 TBNZ X0, 0x0, 0x3AE5B10
	0x03AE5738 LDR W8, [X31 + 0x14]
	0x03AE573C TBZ X8, 0x0, 0x3AE5AB0
	0x03AE5740 LDR X0, [X19]
	0x03AE5744 LDR W8, [X0 + 0xE0]
	0x03AE5748 CBNZ W8, 0x3AE5754
	0x03AE574C BL 0x1C16DFC
	0x03AE5750 LDR X0, [X19]
	0x03AE5754 LDR X8, [X0 + 0xB8]
	0x03AE5758 LDR X8, [X8 + 0x40]
	0x03AE575C CBZ X8, 0x3AE5798
	0x03AE5760 LDR W9, [X0 + 0xE0]
	0x03AE5764 CBNZ W9, 0x3AE577C
	0x03AE5768 BL 0x1C16DFC
	0x03AE576C LDR X8, [X19]
	0x03AE5770 LDR X8, [X8 + 0xB8]
	0x03AE5774 LDR X8, [X8 + 0x40]
	0x03AE5778 CBZ X8, 0x3AE5B84
	0x03AE577C ADRP X9, 0x615000
	0x03AE5780 LDR X9, [X9 + 0x678]
	0x03AE5784 MOV X0, X8
	0x03AE5788 LDR X1, [X9]
	0x03AE578C BL 0x2DAA53C
	0x03AE5790 LDR X0, [X19]
	0x03AE5794 B 0x3AE57D8
	0x03AE5798 ADRP X8, 0x60F000
	0x03AE579C LDR X8, [X8 + 0xE08]
	0x03AE57A0 LDR X0, [X8]
	0x03AE57A4 BL 0x1C16F10
	0x03AE57A8 ADRP X8, 0x615000
	0x03AE57AC LDR X8, [X8 + 0x688]
	0x03AE57B0 MOV X26, X0
	0x03AE57B4 LDR X1, [X8]
	0x03AE57B8 BL 0x2DA9EF4
	0x03AE57BC LDR X0, [X19]
	0x03AE57C0 LDR W8, [X0 + 0xE0]
	0x03AE57C4 CBNZ W8, 0x3AE57D0
	0x03AE57C8 BL 0x1C16DFC
	0x03AE57CC LDR X0, [X19]
	0x03AE57D0 LDR X8, [X0 + 0xB8]
	0x03AE57D4 STR X26, [X8 + 0x40]
	0x03AE57D8 LDR W8, [X0 + 0xE0]
	0x03AE57DC CBNZ W8, 0x3AE57E8
	0x03AE57E0 BL 0x1C16DFC
	0x03AE57E4 LDR X0, [X19]
	0x03AE57E8 LDR X8, [X0 + 0xB8]
	0x03AE57EC MOV X0, X23
	0x03AE57F0 MOV X1, X31
	0x03AE57F4 LDR X26, [X8 + 0x40]
	0x03AE57F8 BL 0x3C385F8
	0x03AE57FC CBZ X26, 0x3AE5B84
	0x03AE5800 LDR X2, [X21]
	0x03AE5804 MOV W1, W0
	0x03AE5808 MOV X0, X26
	0x03AE580C BL 0x2DAB03C
	0x03AE5810 LDR X0, [X23 + 0x138]
	0x03AE5814 CBZ X0, 0x3AE58F4
	0x03AE5818 LDR W8, [X0 + 0x18]
	0x03AE581C CMP W8, 0x1
	0x03AE5820 B.LT 0x3AE58F4
	0x03AE5824 MOV W26, W31
	0x03AE5828 LDR X2, [X29]
	0x03AE582C MOV W1, W26
	0x03AE5830 BL 0x301BCCC
	0x03AE5834 ADRP X8, 0x60E000
	0x03AE5838 LDR X8, [X8 + 0x598]
	0x03AE583C MOV X27, X0
	0x03AE5840 LDR X8, [X8]
	0x03AE5844 LDR W9, [X8 + 0xE0]
	0x03AE5848 CBNZ W9, 0x3AE5854
	0x03AE584C MOV X0, X8
	0x03AE5850 BL 0x1C16DFC
	0x03AE5854 MOV X0, X27
	0x03AE5858 MOV X1, X31
	0x03AE585C MOV X2, X31
	0x03AE5860 BL 0x3C354F8
	0x03AE5864 TBZ X0, 0x0, 0x3AE58F4
	0x03AE5868 LDR X0, [X23 + 0x138]
	0x03AE586C CBZ X0, 0x3AE5B84
	0x03AE5870 LDR X2, [X29]
	0x03AE5874 MOV W1, W26
	0x03AE5878 BL 0x301BCCC
	0x03AE587C CBZ X0, 0x3AE5B84
	0x03AE5880 MOV X1, X31
	0x03AE5884 MOV X27, X0
	0x03AE5888 BL 0x3C385F8
	0x03AE588C LDR X8, [X19]
	0x03AE5890 MOV W28, W0
	0x03AE5894 LDR W9, [X8 + 0xE0]
	0x03AE5898 CBNZ W9, 0x3AE58A8
	0x03AE589C MOV X0, X8
	0x03AE58A0 BL 0x1C16DFC
	0x03AE58A4 LDR X8, [X19]
	0x03AE58A8 LDR X8, [X8 + 0xB8]
	0x03AE58AC LDR X0, [X8 + 0x40]
	0x03AE58B0 CBZ X0, 0x3AE5B84
	0x03AE58B4 LDR X2, [X21]
	0x03AE58B8 MOV W1, W28
	0x03AE58BC BL 0x2DAB03C
	0x03AE58C0 TBZ X0, 0x0, 0x3AE58DC
	0x03AE58C4 AND W3, W20, 0x1
	0x03AE58C8 MOVZ W2, 0x1
	0x03AE58CC MOV X0, X27
	0x03AE58D0 MOV W1, W25
	0x03AE58D4 BL 0x3AE51DC
	0x03AE58D8 TBNZ X0, 0x0, 0x3AE5B10
	0x03AE58DC LDR X0, [X23 + 0x138]
	0x03AE58E0 CBZ X0, 0x3AE5B84
	0x03AE58E4 LDR W8, [X0 + 0x18]
	0x03AE58E8 ADD W26, W26, 0x1
	0x03AE58EC CMP W26, W8
	0x03AE58F0 B.LT 0x3AE5828
	0x03AE58F4 MOV X0, X31
	0x03AE58F8 BL 0x3B13F74
	0x03AE58FC CBZ X0, 0x3AE5A0C
	0x03AE5900 MOV X0, X31
	0x03AE5904 BL 0x3B13F74
	0x03AE5908 CBZ X0, 0x3AE5B84
	0x03AE590C LDR W8, [X0 + 0x18]
	0x03AE5910 CMP W8, 0x1
	0x03AE5914 B.LT 0x3AE5A0C
	0x03AE5918 MOV X0, X31
	0x03AE591C BL 0x3B13F74
	0x03AE5920 CBZ X0, 0x3AE5B84
	0x03AE5924 MOV W26, W31
	0x03AE5928 LDR W8, [X0 + 0x18]
	0x03AE592C CMP W26, W8
	0x03AE5930 B.GE 0x3AE5A0C
	0x03AE5934 MOV X0, X31
	0x03AE5938 BL 0x3B13F74
	0x03AE593C CBZ X0, 0x3AE5B84
	0x03AE5940 LDR X2, [X29]
	0x03AE5944 MOV W1, W26
	0x03AE5948 BL 0x301BCCC
	0x03AE594C ADRP X8, 0x60E000
	0x03AE5950 LDR X8, [X8 + 0x598]
	0x03AE5954 MOV X27, X0
	0x03AE5958 LDR X8, [X8]
	0x03AE595C LDR W9, [X8 + 0xE0]
	0x03AE5960 CBNZ W9, 0x3AE596C
	0x03AE5964 MOV X0, X8
	0x03AE5968 BL 0x1C16DFC
	0x03AE596C MOV X0, X27
	0x03AE5970 MOV X1, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x8FE000
	013 Move W8, [X23+1435]
	014 Move W19, W3
	015 Move W22, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x674000
	023 Move X0, [X0+3208]
	024 Call 0x1C17CF4
	025 Move X0, 0x611000
	026 Move X0, [X0+2520]
	027 Call 0x1C17CF4
	028 Move X0, 0x616000
	029 Move X0, [X0+1656]
	030 Call 0x1C17CF4
	031 Move X0, 0x616000
	032 Move X0, [X0+1672]
	033 Call 0x1C17CF4
	034 Move X0, 0x610000
	035 Move X0, [X0+3592]
	036 Call 0x1C17CF4
	037 Move X0, 0x674000
	038 Move X0, [X0+1552]
	039 Call 0x1C17CF4
	040 Move X0, 0x674000
	041 Move X0, [X0+3144]
	042 Call 0x1C17CF4
	043 Move X0, 0x60F000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move X0, 0x674000
	047 Move X0, [X0+1400]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X23+1435], W8
	051 Move [X31+8], X31
	052 Move X0, [X21+200]
	053 Compare X0, 0
	054 JumpIfNotEqual {60}
	055 Move X0, X21
	056 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	057 Move X0, [X21+200]
	058 Compare X0, 0
	059 JumpIfEqual {369}
	060 Move X8, 0x674000
	061 Move X8, [X8+3208]
	062 And W20, W20, 0xFFFF
	063 Move W1, W20
	064 Move X2, [X8]
	065 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {71}
	070 Move W24, 1
	071 Move TEMP, X19
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {85}
	075 Move W8, [X21+72]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add X2, X31, 8
	078 Move X0, X21
	079 Move W1, W20
	080 Call TMP_FontAsset.TryAddCharacterInternal, X0, X1, X2
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {70}
	085 Move TEMP, X22
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {369}
	089 Move X25, 0x674000
	090 Move X25, [X25+1400]
	091 Move X0, [X25]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X25]
	097 Move X8, [X0+184]
	098 Move X8, [X8+64]
	099 Compare X8, 0
	100 JumpIfEqual {116}
	101 Move W9, [X0+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {110}
	104 Call 0x1C17DFC
	105 Move X8, [X25]
	106 Move X8, [X8+184]
	107 Move X8, [X8+64]
	108 Compare X8, 0
	109 JumpIfEqual {383}
	110 Move X9, 0x616000
	111 Move X9, [X9+1656]
	112 Move X0, X8
	113 Move X1, [X9]
	114 Call HashSet`1<Int32>.Clear, X0
	115 Move X0, [X25]
	116 Move X8, 0x610000
	117 Move X8, [X8+3592]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X8, 0x616000
	121 Move X8, [X8+1672]
	122 Move X22, X0
	123 Move X1, [X8]
	124 Call HashSet`1<Int32>..ctor, X0
	125 Move X0, [X25]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X25]
	131 Move X8, [X0+184]
	132 Move [X8+64], X22
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X25]
	138 Move X8, [X0+184]
	139 Move X0, X21
	140 Move X1, X31
	141 Move X22, [X8+64]
	142 Call Object.GetInstanceID, X0
	143 Compare X22, 0
	144 JumpIfEqual {383}
	145 Move X26, 0x611000
	146 Move X26, [X26+2520]
	147 Move W1, W0
	148 Move X0, X22
	149 Move X2, [X26]
	150 Call HashSet`1<Int32>.Add, X0, X1
	151 Move X0, [X21+312]
	152 Compare X0, 0
	153 JumpIfEqual {225}
	154 Move W8, [X0+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X27, 0x674000
	157 Move X28, 0x60F000
	158 Move X27, [X27+3144]
	159 Move X28, [X28+1432]
	160 Move W22, W31
	161 Move X2, [X27]
	162 Move W1, W22
	163 Call List`1<Object>.get_Item, X0, X1
	164 Move X8, [X28]
	165 Move X23, X0
	166 Move W9, [X8+224]
	167 Compare W9, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Move X0, X23
	172 Move X1, X31
	173 Move X2, X31
	174 Call Object.op_Inequality, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {225}
	179 Move X0, [X21+312]
	180 Compare X0, 0
	181 JumpIfEqual {383}
	182 Move X2, [X27]
	183 Move W1, W22
	184 Call List`1<Object>.get_Item, X0, X1
	185 Compare X0, 0
	186 JumpIfEqual {383}
	187 Move X1, X31
	188 Move X23, X0
	189 Call Object.GetInstanceID, X0
	190 Move X8, [X25]
	191 Move W24, W0
	192 Move W9, [X8+224]
	193 Compare W9, 0
	194 JumpIfNotEqual {198}
	195 Move X0, X8
	196 Call 0x1C17DFC
	197 Move X8, [X25]
	198 Move X8, [X8+184]
	199 Move X0, [X8+64]
	200 Compare X0, 0
	201 JumpIfEqual {383}
	202 Move X2, [X26]
	203 Move W1, W24
	204 Call HashSet`1<Int32>.Add, X0, X1
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {219}
	209 And W3, W19, 1
	210 Move W2, 1
	211 Move X0, X23
	212 Move W1, W20
	213 Move W24, 1
	214 Call TMP_FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {370}
	219 Move X0, [X21+312]
	220 Compare X0, 0
	221 JumpIfEqual {383}
	222 Move W8, [X0+24]
	223 Add W22, W22, 1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, X31
	226 Call TMP_Settings.get_fallbackFontAssets
	227 Compare X0, 0
	228 JumpIfEqual {314}
	229 Move X0, X31
	230 Call TMP_Settings.get_fallbackFontAssets
	231 Compare X0, 0
	232 JumpIfEqual {383}
	233 Move W8, [X0+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X0, X31
	236 Call TMP_Settings.get_fallbackFontAssets
	237 Compare X0, 0
	238 JumpIfEqual {383}
	239 Move X27, 0x674000
	240 Move X28, 0x60F000
	241 Move X27, [X27+3144]
	242 Move X28, [X28+1432]
	243 Move W21, W31
	244 Move W24, 1
	245 Move W8, [X0+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X0, X31
	248 Call TMP_Settings.get_fallbackFontAssets
	249 Compare X0, 0
	250 JumpIfEqual {383}
	251 Move X2, [X27]
	252 Move W1, W21
	253 Call List`1<Object>.get_Item, X0, X1
	254 Move X8, [X28]
	255 Move X22, X0
	256 Move W9, [X8+224]
	257 Compare W9, 0
	258 JumpIfNotEqual {261}
	259 Move X0, X8
	260 Call 0x1C17DFC
	261 Move X0, X22
	262 Move X1, X31
	263 Move X2, X31
	264 Call Object.op_Inequality, X0, X1
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {314}
	269 Move X0, X31
	270 Call TMP_Settings.get_fallbackFontAssets
	271 Compare X0, 0
	272 JumpIfEqual {383}
	273 Move X2, [X27]
	274 Move W1, W21
	275 Call List`1<Object>.get_Item, X0, X1
	276 Compare X0, 0
	277 JumpIfEqual {383}
	278 Move X1, X31
	279 Move X22, X0
	280 Call Object.GetInstanceID, X0
	281 Move X8, [X25]
	282 Move W23, W0
	283 Move W9, [X8+224]
	284 Compare W9, 0
	285 JumpIfNotEqual {289}
	286 Move X0, X8
	287 Call 0x1C17DFC
	288 Move X8, [X25]
	289 Move X8, [X8+184]
	290 Move X0, [X8+64]
	291 Compare X0, 0
	292 JumpIfEqual {383}
	293 Move X2, [X26]
	294 Move W1, W23
	295 Call HashSet`1<Int32>.Add, X0, X1
	296 Move TEMP, X0
	297 And TEMP, TEMP, 1
	298 Compare TEMP, 1
	299 JumpIfNotEqual {309}
	300 And W3, W19, 1
	301 Move W2, 1
	302 Move X0, X22
	303 Move W1, W20
	304 Call TMP_FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfEqual {370}
	309 Move X0, X31
	310 Add W21, W21, 1
	311 Call TMP_Settings.get_fallbackFontAssets
	312 Compare X0, 0
	313 JumpIfNotEqual {245}
	314 Move X0, X31
	315 Call TMP_Settings.get_defaultFontAsset
	316 Move X8, 0x60F000
	317 Move X8, [X8+1432]
	318 Move X21, X0
	319 Move X8, [X8]
	320 Move W9, [X8+224]
	321 Compare W9, 0
	322 JumpIfNotEqual {325}
	323 Move X0, X8
	324 Call 0x1C17DFC
	325 Move X0, X21
	326 Move X1, X31
	327 Move X2, X31
	328 Call Object.op_Inequality, X0, X1
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {369}
	333 Move X0, X31
	334 Call TMP_Settings.get_defaultFontAsset
	335 Compare X0, 0
	336 JumpIfEqual {383}
	337 Move X1, X31
	338 Move X21, X0
	339 Call Object.GetInstanceID, X0
	340 Move X8, [X25]
	341 Move W22, W0
	342 Move W9, [X8+224]
	343 Compare W9, 0
	344 JumpIfNotEqual {348}
	345 Move X0, X8
	346 Call 0x1C17DFC
	347 Move X8, [X25]
	348 Move X8, [X8+184]
	349 Move X0, [X8+64]
	350 Compare X0, 0
	351 JumpIfEqual {383}
	352 Move X2, [X26]
	353 Move W1, W22
	354 Call HashSet`1<Int32>.Add, X0, X1
	355 Move TEMP, X0
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfNotEqual {369}
	359 And W3, W19, 1
	360 Move W2, 1
	361 Move X0, X21
	362 Move W1, W20
	363 Move W24, 1
	364 Call TMP_FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfEqual {370}
	369 Move W24, W31
	370 Move W0, W24
	371 Move X20, [X31+80]
	372 Move X19, [X31+88]
	373 Move X22, [X31+64]
	374 Move X21, [X31+72]
	375 Move X24, [X31+48]
	376 Move X23, [X31+56]
	377 Move X26, [X31+32]
	378 Move X25, [X31+40]
	379 Move X28, [X31+16]
	380 Move X27, [X31+24]
	381 Move X30, [X31+96]
	382 Return X0
	383 Call 0x1C17F20

Method: System.Boolean HasCharacter_Internal(System.UInt32 character, System.Boolean searchFallbacks = False, System.Boolean tryAddCharacter = False)

Disassembly:
	0x03AE61DC LDP X20, X19, [X31 + 0x20]
	0x03AE61E0 LDP X22, X21, [X31 + 0x10]
	0x03AE61E4 LDP X30, X23, [X31], #0x30
	0x03AE61E8 RET
	0x03AE61EC BL 0x1C16F20
	0x03AE61F0 SUB X31, X31, 0xE0
	0x03AE61F4 STR X30, [X31 + 0x80]
	0x03AE61F8 STP X28, X27, [X31 + 0x90]
	0x03AE61FC STP X26, X25, [X31 + 0xA0]
	0x03AE6200 STP X24, X23, [X31 + 0xB0]
	0x03AE6204 STP X22, X21, [X31 + 0xC0]
	0x03AE6208 STP X20, X19, [X31 + 0xD0]
	0x03AE620C ADRP X21, 0x8FC000
	0x03AE6210 ADRP X20, 0x672000
	0x03AE6214 LDRB W8, [X21 + 0x5AE]
	0x03AE6218 LDR X20, [X20 + 0xBC0]
	0x03AE621C MOV X19, X0
	0x03AE6220 TBNZ X8, 0x0, 0x3AE6280
	0x03AE6224 ADRP X0, 0x672000
	0x03AE6228 LDR X0, [X0 + 0xD00]
	0x03AE622C BL 0x1C16CF4
	0x03AE6230 ADRP X0, 0x672000
	0x03AE6234 LDR X0, [X0 + 0xD10]
	0x03AE6238 BL 0x1C16CF4
	0x03AE623C ADRP X0, 0x672000
	0x03AE6240 LDR X0, [X0 + 0xBC0]
	0x03AE6244 BL 0x1C16CF4
	0x03AE6248 ADRP X0, 0x672000
	0x03AE624C LDR X0, [X0 + 0xD50]
	0x03AE6250 BL 0x1C16CF4
	0x03AE6254 ADRP X0, 0x664000
	0x03AE6258 LDR X0, [X0 + 0xB50]
	0x03AE625C BL 0x1C16CF4
	0x03AE6260 ADRP X0, 0x672000
	0x03AE6264 LDR X0, [X0 + 0xD70]
	0x03AE6268 BL 0x1C16CF4
	0x03AE626C ADRP X0, 0x672000
	0x03AE6270 LDR X0, [X0 + 0xD78]
	0x03AE6274 BL 0x1C16CF4
	0x03AE6278 MOVZ W8, 0x1
	0x03AE627C STRB W8, [X21 + 0x5AE]
	0x03AE6280 LDR X0, [X20]
	0x03AE6284 STR W31, [X31 + 0x8C]
	0x03AE6288 STP X31, X31, [X31 + 0x60]
	0x03AE628C STR W31, [X31 + 0x70]
	0x03AE6290 LDR W8, [X0 + 0xE0]
	0x03AE6294 LDR X20, [X19 + 0x1D8]
	0x03AE6298 CBNZ W8, 0x3AE62A0
	0x03AE629C BL 0x1C16DFC
	0x03AE62A0 ADD X1, X31, 0x8C
	0x03AE62A4 MOV X0, X20
	0x03AE62A8 MOV X2, X31
	0x03AE62AC BL 0x3C9E058
	0x03AE62B0 LDR X8, [X19 + 0x1E0]
	0x03AE62B4 CBZ X8, 0x3AE64F4
	0x03AE62B8 LDR W9, [X8 + 0x1C]
	0x03AE62BC MOV X20, X0
	0x03AE62C0 ADD W9, W9, 0x1
	0x03AE62C4 STP W31, W9, [X8 + 0x18]
	0x03AE62C8 CBZ X0, 0x3AE64D4
	0x03AE62CC LDR X8, [X20 + 0x18]
	0x03AE62D0 CBZ X8, 0x3AE64D4
	0x03AE62D4 LDR X9, [X19 + 0x128]
	0x03AE62D8 CBNZ X9, 0x3AE62FC
	0x03AE62DC ADRP X8, 0x672000
	0x03AE62E0 LDR X8, [X8 + 0xD70]
	0x03AE62E4 LDR X0, [X8]
	0x03AE62E8 BL 0x1C16F10
	0x03AE62EC MOV X21, X0
	0x03AE62F0 BL 0x3AE8D58
	0x03AE62F4 STR X21, [X19 + 0x128]
	0x03AE62F8 LDR W8, [X20 + 0x18]
	0x03AE62FC CMP W8, 0x1
	0x03AE6300 B.LT 0x3AE64D4
	0x03AE6304 ADRP X25, 0x672000
	0x03AE6308 ADRP X26, 0x672000
	0x03AE630C ADRP X27, 0x672000
	0x03AE6310 ADRP X28, 0x672000
	0x03AE6314 LDR X25, [X25 + 0xD10]
	0x03AE6318 LDR X26, [X26 + 0xD78]
	0x03AE631C LDR X27, [X27 + 0xD50]
	0x03AE6320 LDR X28, [X28 + 0xD00]
	0x03AE6324 MOV X24, X31
	0x03AE6328 ADD X21, X20, 0x20
	0x03AE632C CMP X24, W8, UXTW
	0x03AE6330 B.CS 0x3AE64F8
	0x03AE6334 ADD X8, X31, 0x30
	0x03AE6338 MOV X0, X21
	0x03AE633C MOV X1, X31
	0x03AE6340 BL 0x3C9E6D0
	0x03AE6344 LDR V0, [X31 + 0x3]
	0x03AE6348 LDR W8, [X31 + 0x40]
	0x03AE634C ADD X0, X31, 0x60
	0x03AE6350 MOV X1, X31
	0x03AE6354 STR V0, [X31 + 0x6]
	0x03AE6358 STR W8, [X31 + 0x70]
	0x03AE635C BL 0x3C9E52C
	0x03AE6360 CBZ W0, 0x3AE64D4
	0x03AE6364 LDR W8, [X20 + 0x18]
	0x03AE6368 CMP X24, X8
	0x03AE636C B.CS 0x3AE64F8
	0x03AE6370 ADD X8, X31, 0x30
	0x03AE6374 MOV X0, X21
	0x03AE6378 MOV X1, X31
	0x03AE637C BL 0x3C9E6E4
	0x03AE6380 LDR V0, [X31 + 0x3]
	0x03AE6384 LDR W8, [X31 + 0x40]
	0x03AE6388 ADD X0, X31, 0x60
	0x03AE638C MOV X1, X31
	0x03AE6390 STR V0, [X31 + 0x6]
	0x03AE6394 STR W8, [X31 + 0x70]
	0x03AE6398 BL 0x3C9E52C
	0x03AE639C LDR W8, [X20 + 0x18]
	0x03AE63A0 CMP X24, X8
	0x03AE63A4 B.CS 0x3AE64F8
	0x03AE63A8 MOV W22, W0
	0x03AE63AC ADD X8, X31, 0x30
	0x03AE63B0 MOV X0, X21
	0x03AE63B4 MOV X1, X31
	0x03AE63B8 BL 0x3C9E6D0
	0x03AE63BC LDR V0, [X31 + 0x3]
	0x03AE63C0 LDR W8, [X31 + 0x40]
	0x03AE63C4 ADD X0, X31, 0x60
	0x03AE63C8 MOV X1, X31
	0x03AE63CC STR V0, [X31 + 0x6]
	0x03AE63D0 STR W8, [X31 + 0x70]
	0x03AE63D4 BL 0x3C9E52C
	0x03AE63D8 LDR X8, [X19 + 0x128]
	0x03AE63DC CBZ X8, 0x3AE64F4
	0x03AE63E0 LDR X8, [X8 + 0x18]
	0x03AE63E4 CBZ X8, 0x3AE64F4
	0x03AE63E8 LDR X2, [X25]
	0x03AE63EC ORR W22, W0, W22, 0x10
	0x03AE63F0 MOV X0, X8
	0x03AE63F4 MOV W1, W22

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x8FD000
	013 Move W8, [X23+1436]
	014 Move W19, W3
	015 Move W22, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x673000
	023 Move X0, [X0+3208]
	024 Call 0x1C17CF4
	025 Move X0, 0x610000
	026 Move X0, [X0+2520]
	027 Call 0x1C17CF4
	028 Move X0, 0x673000
	029 Move X0, [X0+1552]
	030 Call 0x1C17CF4
	031 Move X0, 0x673000
	032 Move X0, [X0+3144]
	033 Call 0x1C17CF4
	034 Move X0, 0x60E000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x673000
	038 Move X0, [X0+1400]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+1436], W8
	042 Move [X31+8], X31
	043 Move X0, [X21+200]
	044 Compare X0, 0
	045 JumpIfNotEqual {51}
	046 Move X0, X21
	047 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	048 Move X0, [X21+200]
	049 Compare X0, 0
	050 JumpIfEqual {162}
	051 Move X8, 0x673000
	052 Move X8, [X8+3208]
	053 Move W1, W20
	054 Move X2, [X8]
	055 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {61}
	060 Move W24, 1
	061 Move TEMP, X19
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {80}
	065 Move W8, [X21+72]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X2, X31, 8
	068 Move X0, X21
	069 Move W1, W20
	070 Call TMP_FontAsset.TryAddCharacterInternal, X0, X1, X2
	071 Move W24, W0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {163}
	076 Move TEMP, X22
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {84}
	080 Move TEMP, X22
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {162}
	084 Move X0, [X21+312]
	085 Compare X0, 0
	086 JumpIfEqual {162}
	087 Move W8, [X0+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X25, 0x673000
	090 Move X26, 0x60E000
	091 Move X27, 0x673000
	092 Move X28, 0x610000
	093 Move X25, [X25+3144]
	094 Move X26, [X26+1432]
	095 Move X27, [X27+1400]
	096 Move X28, [X28+2520]
	097 Move W22, W31
	098 Move X2, [X25]
	099 Move W1, W22
	100 Call List`1<Object>.get_Item, X0, X1
	101 Move X8, [X26]
	102 Move X23, X0
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, X23
	109 Move X1, X31
	110 Move X2, X31
	111 Call Object.op_Inequality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {162}
	116 Move X0, [X21+312]
	117 Compare X0, 0
	118 JumpIfEqual {176}
	119 Move X2, [X25]
	120 Move W1, W22
	121 Call List`1<Object>.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {176}
	124 Move X1, X31
	125 Move X23, X0
	126 Call Object.GetInstanceID, X0
	127 Move X8, [X27]
	128 Move W24, W0
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X27]
	135 Move X8, [X8+184]
	136 Move X0, [X8+64]
	137 Compare X0, 0
	138 JumpIfEqual {176}
	139 Move X2, [X28]
	140 Move W1, W24
	141 Call HashSet`1<Int32>.Add, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {156}
	146 And W3, W19, 1
	147 Move W2, 1
	148 Move X0, X23
	149 Move W1, W20
	150 Move W24, 1
	151 Call TMP_FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfEqual {163}
	156 Move X0, [X21+312]
	157 Compare X0, 0
	158 JumpIfEqual {176}
	159 Move W8, [X0+24]
	160 Add W22, W22, 1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move W24, W31
	163 And W0, W24, 1
	164 Move X20, [X31+80]
	165 Move X19, [X31+88]
	166 Move X22, [X31+64]
	167 Move X21, [X31+72]
	168 Move X24, [X31+48]
	169 Move X23, [X31+56]
	170 Move X26, [X31+32]
	171 Move X25, [X31+40]
	172 Move X28, [X31+16]
	173 Move X27, [X31+24]
	174 Move X30, [X31+96]
	175 Return X0
	176 Call 0x1C17F20

Method: System.Boolean HasCharacters(System.String text, out System.Collections.Generic.List`1<System.Char> missingCharacters)

Disassembly:
	0x03AE63F8 BL 0x2B0F250
	0x03AE63FC TBNZ X0, 0x0, 0x3AE64C0
	0x03AE6400 LDR W8, [X20 + 0x18]
	0x03AE6404 CMP X24, X8
	0x03AE6408 B.CS 0x3AE64F8
	0x03AE640C LDUR V0, [X21 + 0x1C]
	0x03AE6410 LDP V2, V1, [X21]
	0x03AE6414 LDR X0, [X26]
	0x03AE6418 STUR V0, [X31 + 0x4C]
	0x03AE641C STP V2, V1, [X31 + 0x30]
	0x03AE6420 BL 0x1C16F10
	0x03AE6424 LDP V0, V1, [X31 + 0x30]
	0x03AE6428 LDUR V2, [X31 + 0x4C]
	0x03AE642C ADD X1, X31, 0x0
	0x03AE6430 MOV X23, X0
	0x03AE6434 STP V0, V1, [X31]
	0x03AE6438 STUR V2, [X31 + 0x1C]
	0x03AE643C BL 0x3AE8E20
	0x03AE6440 LDR X8, [X19 + 0x128]
	0x03AE6444 CBZ X8, 0x3AE64F4
	0x03AE6448 LDR X0, [X8 + 0x10]
	0x03AE644C CBZ X0, 0x3AE64F4
	0x03AE6450 LDR W10, [X0 + 0x1C]
	0x03AE6454 LDR X8, [X0 + 0x10]
	0x03AE6458 LDR X9, [X27]
	0x03AE645C ADD W10, W10, 0x1
	0x03AE6460 STR W10, [X0 + 0x1C]
	0x03AE6464 CBZ X8, 0x3AE64F4
	0x03AE6468 LDRSW X10, [X0 + 0x18]
	0x03AE646C LDR W11, [X8 + 0x18]
	0x03AE6470 CMP W10, W11
	0x03AE6474 B.CS 0x3AE648C
	0x03AE6478 ADD W9, W10, 0x1
	0x03AE647C ADD X8, X8, X10, 0x3, LSL
	0x03AE6480 STR W9, [X0 + 0x18]
	0x03AE6484 STR X23, [X8 + 0x20]
	0x03AE6488 B 0x3AE64A0
	0x03AE648C LDR X8, [X9 + 0x20]
	0x03AE6490 MOV X1, X23
	0x03AE6494 LDR X8, [X8 + 0xC0]
	0x03AE6498 LDR X2, [X8 + 0x70]
	0x03AE649C BL 0x301BF90
	0x03AE64A0 LDR X8, [X19 + 0x128]
	0x03AE64A4 CBZ X8, 0x3AE64F4
	0x03AE64A8 LDR X0, [X8 + 0x18]
	0x03AE64AC CBZ X0, 0x3AE64F4
	0x03AE64B0 LDR X3, [X28]
	0x03AE64B4 MOV W1, W22
	0x03AE64B8 MOV X2, X23
	0x03AE64BC BL 0x2B0F05C
	0x03AE64C0 LDR W8, [X20 + 0x18]
	0x03AE64C4 ADD X24, X24, 0x1
	0x03AE64C8 ADD X21, X21, 0x2C
	0x03AE64CC CMP X24, W8, SXTW
	0x03AE64D0 B.LT 0x3AE632C
	0x03AE64D4 LDP X20, X19, [X31 + 0xD0]
	0x03AE64D8 LDP X22, X21, [X31 + 0xC0]
	0x03AE64DC LDP X24, X23, [X31 + 0xB0]
	0x03AE64E0 LDP X26, X25, [X31 + 0xA0]
	0x03AE64E4 LDP X28, X27, [X31 + 0x90]
	0x03AE64E8 LDR X30, [X31 + 0x80]
	0x03AE64EC ADD X31, X31, 0xE0
	0x03AE64F0 RET
	0x03AE64F4 BL 0x1C16F20
	0x03AE64F8 BL 0x1C16F28
	0x03AE64FC STP X30, X21, [X31 - 0x20]!
	0x03AE6500 STP X20, X19, [X31 + 0x10]
	0x03AE6504 ADRP X20, 0x8FC000
	0x03AE6508 LDRB W8, [X20 + 0x5A5]
	0x03AE650C MOV X19, X0
	0x03AE6510 TBNZ X8, 0x0, 0x3AE6540
	0x03AE6514 ADRP X0, 0x60F000
	0x03AE6518 LDR X0, [X0 + 0x9D8]
	0x03AE651C BL 0x1C16CF4
	0x03AE6520 ADRP X0, 0x672000
	0x03AE6524 LDR X0, [X0 + 0xC18]
	0x03AE6528 BL 0x1C16CF4
	0x03AE652C ADRP X0, 0x672000
	0x03AE6530 LDR X0, [X0 + 0x578]
	0x03AE6534 BL 0x1C16CF4
	0x03AE6538 MOVZ W8, 0x1
	0x03AE653C STRB W8, [X20 + 0x5A5]
	0x03AE6540 CBZ X19, 0x3AE6628
	0x03AE6544 ADRP X21, 0x672000
	0x03AE6548 LDR W20, [X19 + 0x18]
	0x03AE654C LDR X21, [X21 + 0x578]
	0x03AE6550 CBNZ W20, 0x3AE6568
	0x03AE6554 MOV X0, X19
	0x03AE6558 MOV X1, X31
	0x03AE655C BL 0x3C385F8
	0x03AE6560 MOV W20, W0
	0x03AE6564 STR W0, [X19 + 0x18]
	0x03AE6568 LDR X0, [X21]
	0x03AE656C LDR W8, [X0 + 0xE0]
	0x03AE6570 CBNZ W8, 0x3AE657C
	0x03AE6574 BL 0x1C16DFC
	0x03AE6578 LDR X0, [X21]
	0x03AE657C LDR X8, [X0 + 0xB8]
	0x03AE6580 LDR X0, [X8 + 0x60]
	0x03AE6584 CBZ X0, 0x3AE6628
	0x03AE6588 ADRP X8, 0x60F000
	0x03AE658C LDR X8, [X8 + 0x9D8]
	0x03AE6590 MOV W1, W20
	0x03AE6594 LDR X2, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x8FD000
	010 Move W8, [X22+1437]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x673000
	019 Move X0, [X0+3208]
	020 Call 0x1C17CF4
	021 Move X0, 0x673000
	022 Move X0, [X0+3616]
	023 Call 0x1C17CF4
	024 Move X0, 0x673000
	025 Move X0, [X0+3624]
	026 Call 0x1C17CF4
	027 Move X0, 0x673000
	028 Move X0, [X0+3632]
	029 Call 0x1C17CF4
	030 Move X0, 0x673000
	031 Move X0, [X0+3640]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1437], W8
	035 Move X8, [X21+200]
	036 Compare X8, 0
	037 JumpIfEqual {108}
	038 Move X8, 0x673000
	039 Move X8, [X8+3640]
	040 Move X22, 0x673000
	041 Move X0, [X8]
	042 Move X22, [X22+3624]
	043 Call 0x1C17F10
	044 Move X1, [X22]
	045 Move X22, X0
	046 Call List`1<Char>..ctor, X0
	047 Move [X19], X22
	048 Compare X20, 0
	049 JumpIfEqual {119}
	050 Move W8, [X20+16]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X24, 0x673000
	053 Move X25, 0x673000
	054 Move X24, [X24+3208]
	055 Move X25, [X25+3616]
	056 Move W22, W31
	057 Move X23, [X21+200]
	058 Move X0, X20
	059 Move W1, W22
	060 Move X2, X31
	061 Call String.get_Chars, X0, X1
	062 Compare X23, 0
	063 JumpIfEqual {119}
	064 Move X2, [X24]
	065 And W1, W0, 0xFFFF
	066 Move X0, X23
	067 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {99}
	072 Move X23, [X19]
	073 Move X0, X20
	074 Move W1, W22
	075 Move X2, X31
	076 Call String.get_Chars, X0, X1
	077 Compare X23, 0
	078 JumpIfEqual {119}
	079 Move W10, [X23+28]
	080 Move X8, [X23+16]
	081 Move X9, [X25]
	082 Add W10, W10, 1
	083 Move [X23+28], W10
	084 Compare X8, 0
	085 JumpIfEqual {119}
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Move W11, [X8+24]
	088 Move W1, W0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W9, W10, 1
	091 Add X8, X8, X10
	092 Move [X23+24], W9
	093 NotImplemented "Instruction STRH not yet implemented."
	094 Move X8, [X9+32]
	095 Move X0, X23
	096 Move X8, [X8+192]
	097 Move X2, [X8+112]
	098 Call List`1<Char>.AddWithResize, X0, X1
	099 Move W8, [X20+16]
	100 Add W22, W22, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X19]
	103 Compare X8, 0
	104 JumpIfEqual {119}
	105 Move W8, [X8+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move W0, W31
	109 Move [X19], X31
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X30, [X31+64]
	117 Move X25, [X31+72]
	118 Return X0
	119 Call 0x1C17F20

Method: System.Boolean HasCharacters(System.String text, out System.UInt32[] missingCharacters, System.Boolean searchFallbacks = False, System.Boolean tryAddCharacter = False)

Disassembly:
	0x03AE6598 BL 0x2DAB03C
	0x03AE659C TBZ X0, 0x0, 0x3AE6600
	0x03AE65A0 LDR X0, [X21]
	0x03AE65A4 LDR W8, [X0 + 0xE0]
	0x03AE65A8 CBNZ W8, 0x3AE65B4
	0x03AE65AC BL 0x1C16DFC
	0x03AE65B0 LDR X0, [X21]
	0x03AE65B4 LDR X8, [X0 + 0xB8]
	0x03AE65B8 LDR X0, [X8 + 0x58]
	0x03AE65BC CBZ X0, 0x3AE6628
	0x03AE65C0 ADRP X9, 0x672000
	0x03AE65C4 LDR X9, [X9 + 0xC18]
	0x03AE65C8 LDR W10, [X0 + 0x1C]
	0x03AE65CC LDR X8, [X0 + 0x10]
	0x03AE65D0 LDR X9, [X9]
	0x03AE65D4 ADD W10, W10, 0x1
	0x03AE65D8 STR W10, [X0 + 0x1C]
	0x03AE65DC CBZ X8, 0x3AE6628
	0x03AE65E0 LDRSW X10, [X0 + 0x18]
	0x03AE65E4 LDR W11, [X8 + 0x18]
	0x03AE65E8 CMP W10, W11
	0x03AE65EC B.CS 0x3AE660C
	0x03AE65F0 ADD W9, W10, 0x1
	0x03AE65F4 ADD X8, X8, X10, 0x3, LSL
	0x03AE65F8 STR W9, [X0 + 0x18]
	0x03AE65FC STR X19, [X8 + 0x20]
	0x03AE6600 LDP X20, X19, [X31 + 0x10]
	0x03AE6604 LDP X30, X21, [X31], #0x20
	0x03AE6608 RET
	0x03AE660C LDR X8, [X9 + 0x20]
	0x03AE6610 MOV X1, X19
	0x03AE6614 LDP X20, X19, [X31 + 0x10]
	0x03AE6618 LDR X8, [X8 + 0xC0]
	0x03AE661C LDR X2, [X8 + 0x70]
	0x03AE6620 LDP X30, X21, [X31], #0x20
	0x03AE6624 B 0x301BF90
	0x03AE6628 BL 0x1C16F20
	0x03AE662C STP X30, X23, [X31 - 0x30]!
	0x03AE6630 STP X22, X21, [X31 + 0x10]
	0x03AE6634 STP X20, X19, [X31 + 0x20]
	0x03AE6638 ADRP X19, 0x8FC000
	0x03AE663C ADRP X20, 0x672000
	0x03AE6640 LDRB W8, [X19 + 0x5A6]
	0x03AE6644 LDR X20, [X20 + 0x578]
	0x03AE6648 TBNZ X8, 0x0, 0x3AE6690
	0x03AE664C ADRP X0, 0x614000
	0x03AE6650 LDR X0, [X0 + 0x678]
	0x03AE6654 BL 0x1C16CF4
	0x03AE6658 ADRP X0, 0x614000
	0x03AE665C LDR X0, [X0 + 0x850]
	0x03AE6660 BL 0x1C16CF4
	0x03AE6664 ADRP X0, 0x672000
	0x03AE6668 LDR X0, [X0 + 0xE40]
	0x03AE666C BL 0x1C16CF4
	0x03AE6670 ADRP X0, 0x672000
	0x03AE6674 LDR X0, [X0 + 0xC48]
	0x03AE6678 BL 0x1C16CF4
	0x03AE667C ADRP X0, 0x672000
	0x03AE6680 LDR X0, [X0 + 0x578]
	0x03AE6684 BL 0x1C16CF4
	0x03AE6688 MOVZ W8, 0x1
	0x03AE668C STRB W8, [X19 + 0x5A6]
	0x03AE6690 LDR X0, [X20]
	0x03AE6694 LDR W8, [X0 + 0xE0]
	0x03AE6698 CBNZ W8, 0x3AE66A4
	0x03AE669C BL 0x1C16DFC
	0x03AE66A0 LDR X0, [X20]
	0x03AE66A4 LDR X8, [X0 + 0xB8]
	0x03AE66A8 LDR X8, [X8 + 0x60]
	0x03AE66AC CBZ X8, 0x3AE6790
	0x03AE66B0 LDR W21, [X8 + 0x20]
	0x03AE66B4 SUBS W22, W21, 0x1
	0x03AE66B8 B.LT 0x3AE6780
	0x03AE66BC ADRP X23, 0x672000
	0x03AE66C0 LDR X23, [X23 + 0xC48]
	0x03AE66C4 MOV W19, W31
	0x03AE66C8 LDR W8, [X0 + 0xE0]
	0x03AE66CC CBNZ W8, 0x3AE66D8
	0x03AE66D0 BL 0x1C16DFC
	0x03AE66D4 LDR X0, [X20]
	0x03AE66D8 LDR X8, [X0 + 0xB8]
	0x03AE66DC LDR X0, [X8 + 0x58]
	0x03AE66E0 CBZ X0, 0x3AE6790
	0x03AE66E4 LDR X2, [X23]
	0x03AE66E8 MOV W1, W19
	0x03AE66EC BL 0x301BCCC
	0x03AE66F0 CBZ X0, 0x3AE6790
	0x03AE66F4 CMP W22, W19
	0x03AE66F8 B.EQ 0x3AE6708
	0x03AE66FC LDR X0, [X20]
	0x03AE6700 ADD W19, W19, 0x1
	0x03AE6704 B 0x3AE66C8
	0x03AE6708 CMP W21, 0x1
	0x03AE670C B.LT 0x3AE6780
	0x03AE6710 LDR X0, [X20]
	0x03AE6714 LDR W8, [X0 + 0xE0]
	0x03AE6718 CBNZ W8, 0x3AE6724
	0x03AE671C BL 0x1C16DFC
	0x03AE6720 LDR X0, [X20]
	0x03AE6724 LDR X8, [X0 + 0xB8]
	0x03AE6728 LDR X9, [X8 + 0x58]
	0x03AE672C CBZ X9, 0x3AE6790
	0x03AE6730 LDP W2, W10, [X9 + 0x18]
	0x03AE6734 ADD W10, W10, 0x1
	0x03AE6738 CMP W2, 0x1
	0x03AE673C STP W31, W10, [X9 + 0x18]
	0x03AE6740 B.LT 0x3AE675C
	0x03AE6744 LDR X0, [X9 + 0x10]
	0x03AE6748 MOV W1, W31
	0x03AE674C MOV X3, X31
	0x03AE6750 BL 0x339FA34
	0x03AE6754 LDR X8, [X20]
	0x03AE6758 LDR X8, [X8 + 0xB8]
	0x03AE675C LDR X0, [X8 + 0x60]
	0x03AE6760 CBZ X0, 0x3AE6790
	0x03AE6764 ADRP X8, 0x614000
	0x03AE6768 LDR X8, [X8 + 0x678]
	0x03AE676C LDP X20, X19, [X31 + 0x20]
	0x03AE6770 LDP X22, X21, [X31 + 0x10]
	0x03AE6774 LDR X1, [X8]
	0x03AE6778 LDP X30, X23, [X31], #0x30
	0x03AE677C B 0x2DAA53C
	0x03AE6780 LDP X20, X19, [X31 + 0x20]
	0x03AE6784 LDP X22, X21, [X31 + 0x10]
	0x03AE6788 LDP X30, X23, [X31], #0x30
	0x03AE678C RET
	0x03AE6790 BL 0x1C16F20
	0x03AE6794 RET
	0x03AE6798 STR X30, [X31 - 0x10]!
	0x03AE679C AND W3, W2, 0x1
	0x03AE67A0 ADD X2, X31, 0x8
	0x03AE67A4 STR X31, [X31 + 0x8]
	0x03AE67A8 BL 0x3AE67B8
	0x03AE67AC AND W0, W0, 0x1
	0x03AE67B0 LDR X30, [X31], #0x10
	0x03AE67B4 RET
	0x03AE67B8 SUB X31, X31, 0x80
	0x03AE67BC STP X29, X30, [X31 + 0x20]
	0x03AE67C0 STP X28, X27, [X31 + 0x30]
	0x03AE67C4 STP X26, X25, [X31 + 0x40]
	0x03AE67C8 STP X24, X23, [X31 + 0x50]
	0x03AE67CC STP X22, X21, [X31 + 0x60]
	0x03AE67D0 STP X20, X19, [X31 + 0x70]
	0x03AE67D4 ADRP X21, 0x8FC000
	0x03AE67D8 LDRB W8, [X21 + 0x5A7]
	0x03AE67DC MOV W28, W3
	0x03AE67E0 MOV X19, X2
	0x03AE67E4 MOV X22, X1
	0x03AE67E8 MOV X20, X0
	0x03AE67EC TBNZ X8, 0x0, 0x3AE6924
	0x03AE67F0 ADRP X0, 0x60D000
	0x03AE67F4 LDR X0, [X0 + 0xA28]
	0x03AE67F8 BL 0x1C16CF4
	0x03AE67FC ADRP X0, 0x672000
	0x03AE6800 LDR X0, [X0 + 0xCD0]
	0x03AE6804 BL 0x1C16CF4
	0x03AE6808 ADRP X0, 0x672000
	0x03AE680C LDR X0, [X0 + 0xC98]
	0x03AE6810 BL 0x1C16CF4
	0x03AE6814 ADRP X0, 0x672000
	0x03AE6818 LDR X0, [X0 + 0xC88]
	0x03AE681C BL 0x1C16CF4
	0x03AE6820 ADRP X0, 0x672000
	0x03AE6824 LDR X0, [X0 + 0xCA8]
	0x03AE6828 BL 0x1C16CF4
	0x03AE682C ADRP X0, 0x672000
	0x03AE6830 LDR X0, [X0 + 0xE48]
	0x03AE6834 BL 0x1C16CF4
	0x03AE6838 ADRP X0, 0x672000
	0x03AE683C LDR X0, [X0 + 0xC90]
	0x03AE6840 BL 0x1C16CF4
	0x03AE6844 ADRP X0, 0x672000
	0x03AE6848 LDR X0, [X0 + 0xE50]
	0x03AE684C BL 0x1C16CF4
	0x03AE6850 ADRP X0, 0x672000
	0x03AE6854 LDR X0, [X0 + 0xBC0]
	0x03AE6858 BL 0x1C16CF4
	0x03AE685C ADRP X0, 0x668000
	0x03AE6860 LDR X0, [X0 + 0x828]
	0x03AE6864 BL 0x1C16CF4
	0x03AE6868 ADRP X0, 0x672000
	0x03AE686C LDR X0, [X0 + 0xE58]
	0x03AE6870 BL 0x1C16CF4
	0x03AE6874 ADRP X0, 0x672000
	0x03AE6878 LDR X0, [X0 + 0xC10]
	0x03AE687C BL 0x1C16CF4
	0x03AE6880 ADRP X0, 0x613000
	0x03AE6884 LDR X0, [X0 + 0x1D0]
	0x03AE6888 BL 0x1C16CF4
	0x03AE688C ADRP X0, 0x672000
	0x03AE6890 LDR X0, [X0 + 0xC20]
	0x03AE6894 BL 0x1C16CF4
	0x03AE6898 ADRP X0, 0x672000
	0x03AE689C LDR X0, [X0 + 0xC28]
	0x03AE68A0 BL 0x1C16CF4
	0x03AE68A4 ADRP X0, 0x664000
	0x03AE68A8 LDR X0, [X0 + 0xB50]
	0x03AE68AC BL 0x1C16CF4
	0x03AE68B0 ADRP X0, 0x672000
	0x03AE68B4 LDR X0, [X0 + 0xE60]
	0x03AE68B8 BL 0x1C16CF4
	0x03AE68BC ADRP X0, 0x63A000
	0x03AE68C0 LDR X0, [X0 + 0x558]
	0x03AE68C4 BL 0x1C16CF4
	0x03AE68C8 ADRP X0, 0x672000
	0x03AE68CC LDR X0, [X0 + 0xCF0]
	0x03AE68D0 BL 0x1C16CF4
	0x03AE68D4 ADRP X0, 0x672000
	0x03AE68D8 LDR X0, [X0 + 0x858]
	0x03AE68DC BL 0x1C16CF4
	0x03AE68E0 ADRP X0, 0x672000
	0x03AE68E4 LDR X0, [X0 + 0xCF8]
	0x03AE68E8 BL 0x1C16CF4
	0x03AE68EC ADRP X0, 0x672000
	0x03AE68F0 LDR X0, [X0 + 0x5B0]
	0x03AE68F4 BL 0x1C16CF4
	0x03AE68F8 ADRP X0, 0x672000
	0x03AE68FC LDR X0, [X0 + 0xE68]
	0x03AE6900 BL 0x1C16CF4
	0x03AE6904 ADRP X0, 0x672000
	0x03AE6908 LDR X0, [X0 + 0xE70]
	0x03AE690C BL 0x1C16CF4
	0x03AE6910 ADRP X0, 0x672000
	0x03AE6914 LDR X0, [X0 + 0xE78]
	0x03AE6918 BL 0x1C16CF4
	0x03AE691C MOVZ W8, 0x1
	0x03AE6920 STRB W8, [X21 + 0x5A7]
	0x03AE6924 STP X31, X31, [X31 + 0x10]
	0x03AE6928 CBZ X22, 0x3AE69A0
	0x03AE692C LDR X8, [X22 + 0x18]
	0x03AE6930 CBZ X8, 0x3AE69A0
	0x03AE6934 LDR W8, [X20 + 0x48]
	0x03AE6938 CBZ W8, 0x3AE69A0
	0x03AE693C LDR X23, [X20 + 0x40]
	0x03AE6940 ADD X0, X20, 0x50
	0x03AE6944 MOV X1, X31
	0x03AE6948 BL 0x3C9BF88
	0x03AE694C ADRP X26, 0x672000
	0x03AE6950 LDR X26, [X26 + 0xBC0]
	0x03AE6954 MOV W24, W0
	0x03AE6958 LDR X8, [X26]
	0x03AE695C LDR W9, [X8 + 0xE0]
	0x03AE6960 CBNZ W9, 0x3AE696C
	0x03AE6964 MOV X0, X8
	0x03AE6968 BL 0x1C16DFC
	0x03AE696C MOV X0, X23
	0x03AE6970 MOV W1, W24
	0x03AE6974 MOV X2, X31
	0x03AE6978 BL 0x3C9C794
	0x03AE697C CBZ W0, 0x3AE6A44
	0x03AE6980 ADRP X8, 0x672000
	0x03AE6984 LDR X8, [X8 + 0xE50]
	0x03AE6988 MOV X0, X22
	0x03AE698C LDR X1, [X8]
	0x03AE6990 BL 0x21D588C
	0x03AE6994 MOV W8, W31
	0x03AE6998 STR X0, [X19]
	0x03AE699C B 0x3AE6A20
	0x03AE69A0 ADRP X22, 0x672000
	0x03AE69A4 LDR W21, [X20 + 0x48]
	0x03AE69A8 LDR X22, [X22 + 0xE78]
	0x03AE69AC MOV X0, X20
	0x03AE69B0 MOV X1, X31
	0x03AE69B4 BL 0x3C389D4
	0x03AE69B8 LDR X8, [X22]
	0x03AE69BC MOV X1, X0
	0x03AE69C0 CBZ W21, 0x3AE69D0
	0x03AE69C4 ADRP X9, 0x672000
	0x03AE69C8 LDR X9, [X9 + 0xE68]
	0x03AE69CC B 0x3AE69D8
	0x03AE69D0 ADRP X9, 0x672000
	0x03AE69D4 LDR X9, [X9 + 0xE70]
	0x03AE69D8 LDR X2, [X9]
	0x03AE69DC MOV X0, X8
	0x03AE69E0 MOV X3, X31
	0x03AE69E4 BL 0x32274B8
	0x03AE69E8 ADRP X8, 0x60D000
	0x03AE69EC LDR X8, [X8 + 0xA28]
	0x03AE69F0 MOV X21, X0
	0x03AE69F4 LDR X8, [X8]
	0x03AE69F8 LDR W9, [X8 + 0xE0]
	0x03AE69FC CBNZ W9, 0x3AE6A08
	0x03AE6A00 MOV X0, X8
	0x03AE6A04 BL 0x1C16DFC
	0x03AE6A08 MOV X0, X21
	0x03AE6A0C MOV X1, X20
	0x03AE6A10 MOV X2, X31
	0x03AE6A14 BL 0x3C06B0C
	0x03AE6A18 MOV W8, W31
	0x03AE6A1C STR X31, [X19]
	0x03AE6A20 LDP X20, X19, [X31 + 0x70]
	0x03AE6A24 LDP X22, X21, [X31 + 0x60]
	0x03AE6A28 LDP X24, X23, [X31 + 0x50]
	0x03AE6A2C LDP X26, X25, [X31 + 0x40]
	0x03AE6A30 LDP X28, X27, [X31 + 0x30]
	0x03AE6A34 LDP X29, X30, [X31 + 0x20]
	0x03AE6A38 AND W0, W8, 0x1
	0x03AE6A3C ADD X31, X31, 0x80
	0x03AE6A40 RET
	0x03AE6A44 LDR X8, [X20 + 0xC8]
	0x03AE6A48 CBZ X8, 0x3AE6A54
	0x03AE6A4C LDR X8, [X20 + 0xB8]
	0x03AE6A50 CBNZ X8, 0x3AE6A5C
	0x03AE6A54 MOV X0, X20
	0x03AE6A58 BL 0x3AE1A88
	0x03AE6A5C LDR X8, [X20 + 0x1E8]
	0x03AE6A60 CBZ X8, 0x3AE73A8
	0x03AE6A64 LDR W9, [X8 + 0x1C]
	0x03AE6A68 ADD W9, W9, 0x1
	0x03AE6A6C STP W31, W9, [X8 + 0x18]
	0x03AE6A70 LDR X0, [X20 + 0x1F0]
	0x03AE6A74 CBZ X0, 0x3AE73A8
	0x03AE6A78 ADRP X21, 0x672000
	0x03AE6A7C LDR X21, [X21 + 0xE58]
	0x03AE6A80 LDR X1, [X21]
	0x03AE6A84 BL 0x2DCD1E0
	0x03AE6A88 LDR X8, [X20 + 0x1F8]
	0x03AE6A8C CBZ X8, 0x3AE73A8
	0x03AE6A90 LDP W2, W9, [X8 + 0x18]
	0x03AE6A94 ADD W9, W9, 0x1
	0x03AE6A98 CMP W2, 0x1
	0x03AE6A9C STP W31, W9, [X8 + 0x18]
	0x03AE6AA0 B.LT 0x3AE6AB4
	0x03AE6AA4 LDR X0, [X8 + 0x10]
	0x03AE6AA8 MOV W1, W31
	0x03AE6AAC MOV X3, X31
	0x03AE6AB0 BL 0x339FA34
	0x03AE6AB4 LDR X0, [X20 + 0x200]
	0x03AE6AB8 CBZ X0, 0x3AE73A8
	0x03AE6ABC LDR X1, [X21]
	0x03AE6AC0 BL 0x2DCD1E0
	0x03AE6AC4 LDR X8, [X20 + 0x208]
	0x03AE6AC8 CBZ X8, 0x3AE73A8
	0x03AE6ACC LDR W9, [X8 + 0x1C]
	0x03AE6AD0 STR W28, [X31 + 0x8]
	0x03AE6AD4 ADD W9, W9, 0x1
	0x03AE6AD8 STP W31, W9, [X8 + 0x18]
	0x03AE6ADC LDR X8, [X22 + 0x18]
	0x03AE6AE0 CMP W8, 0x1
	0x03AE6AE4 B.LT 0x3AE6E20
	0x03AE6AE8 AND X8, X8, 0x0
	0x03AE6AEC CBZ X8, 0x3AE73AC
	0x03AE6AF0 STR W31, [X31 + 0xC]
	0x03AE6AF4 ADRP X21, 0x672000
	0x03AE6AF8 LDR X21, [X21 + 0xC88]
	0x03AE6AFC MOV X27, X31
	0x03AE6B00 SUB X29, X8, 0x1
	0x03AE6B04 ADD X28, X22, 0x20
	0x03AE6B08 LDR X0, [X20 + 0xC8]
	0x03AE6B0C CBZ X0, 0x3AE73A8
	0x03AE6B10 LDR W23, [X28, X27, LSL #2]
	0x03AE6B14 LDR X2, [X21]
	0x03AE6B18 MOV W1, W23
	0x03AE6B1C BL 0x2B0F250
	0x03AE6B20 TBNZ X0, 0x0, 0x3AE6E04
	0x03AE6B24 LDR X0, [X26]
	0x03AE6B28 LDR W8, [X0 + 0xE0]
	0x03AE6B2C CBNZ W8, 0x3AE6B34
	0x03AE6B30 BL 0x1C16DFC
	0x03AE6B34 MOV W0, W23
	0x03AE6B38 MOV X1, X31
	0x03AE6B3C BL 0x3C9CBD8
	0x03AE6B40 MOV W25, W0
	0x03AE6B44 CBNZ W0, 0x3AE6BA0
	0x03AE6B48 MOVZ W8, 0x2011
	0x03AE6B4C CMP W23, W8
	0x03AE6B50 B.EQ 0x3AE6B7C
	0x03AE6B54 CMP W23, 0xAD
	0x03AE6B58 B.EQ 0x3AE6B7C
	0x03AE6B5C CMP W23, 0xA0
	0x03AE6B60 B.NE 0x3AE6D04
	0x03AE6B64 LDR X0, [X26]
	0x03AE6B68 LDR W8, [X0 + 0xE0]
	0x03AE6B6C CBNZ W8, 0x3AE6B74
	0x03AE6B70 BL 0x1C16DFC
	0x03AE6B74 MOVZ W0, 0x20
	0x03AE6B78 B 0x3AE6B90
	0x03AE6B7C LDR X0, [X26]
	0x03AE6B80 LDR W8, [X0 + 0xE0]
	0x03AE6B84 CBNZ W8, 0x3AE6B8C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x8FD000
	015 Move W8, [X19+1438]
	016 Move W20, W4
	017 Move X21, X2
	018 Move X22, X1
	019 Move X23, X0
	020 Move [X31+20], W3
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {66}
	025 Move X0, 0x673000
	026 Move X0, [X0+3208]
	027 Call 0x1C17CF4
	028 Move X0, 0x610000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0x615000
	032 Move X0, [X0+1656]
	033 Call 0x1C17CF4
	034 Move X0, 0x615000
	035 Move X0, [X0+1672]
	036 Call 0x1C17CF4
	037 Move X0, 0x60F000
	038 Move X0, [X0+3592]
	039 Call 0x1C17CF4
	040 Move X0, 0x614000
	041 Move X0, [X0+464]
	042 Call 0x1C17CF4
	043 Move X0, 0x665000
	044 Move X0, [X0+2896]
	045 Call 0x1C17CF4
	046 Move X0, 0x63B000
	047 Move X0, [X0+1368]
	048 Call 0x1C17CF4
	049 Move X0, 0x673000
	050 Move X0, [X0+1552]
	051 Call 0x1C17CF4
	052 Move X0, 0x673000
	053 Move X0, [X0+2136]
	054 Call 0x1C17CF4
	055 Move X0, 0x673000
	056 Move X0, [X0+3144]
	057 Call 0x1C17CF4
	058 Move X0, 0x60E000
	059 Move X0, [X0+1432]
	060 Call 0x1C17CF4
	061 Move X0, 0x673000
	062 Move X0, [X0+1400]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+1438], W8
	066 Move [X31+24], X31
	067 Move [X21], X31
	068 Move X8, [X23+200]
	069 Compare X8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, X23
	072 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	073 Move X8, [X23+200]
	074 Compare X8, 0
	075 JumpIfEqual {442}
	076 Move X8, [X23+520]
	077 Compare X8, 0
	078 JumpIfEqual {457}
	079 Move W9, [X8+28]
	080 Move [X31+8], X21
	081 Add W9, W9, 1
	082 Move [X8+24], W31
	083 Move [X8+28], W9
	084 Compare X22, 0
	085 JumpIfEqual {457}
	086 Move W8, [X22+16]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X19, 0x673000
	089 Move X21, 0x610000
	090 Move X29, 0x673000
	091 Move X19, [X19+1400]
	092 Move X21, [X21+2520]
	093 Move X29, [X29+3144]
	094 Move W24, W31
	095 Move X0, X22
	096 Move W1, W24
	097 Move X2, X31
	098 Call String.get_Chars, X0, X1
	099 Move X8, [X23+200]
	100 Compare X8, 0
	101 JumpIfEqual {457}
	102 Move X9, 0x673000
	103 Move X9, [X9+3208]
	104 And W25, W0, 0xFFFF
	105 Move X0, X8
	106 Move W1, W25
	107 Move X2, [X9]
	108 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {425}
	113 Move TEMP, X20
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {127}
	117 Move W8, [X23+72]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Add X2, X31, 24
	120 Move X0, X23
	121 Move W1, W25
	122 Call TMP_FontAsset.TryAddCharacterInternal, X0, X1, X2
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {425}
	127 Move W8, [X31+20]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {401}
	132 Move X0, [X19]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X19]
	138 Move X8, [X0+184]
	139 Move X8, [X8+64]
	140 Compare X8, 0
	141 JumpIfEqual {157}
	142 Move W9, [X0+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {151}
	145 Call 0x1C17DFC
	146 Move X8, [X19]
	147 Move X8, [X8+184]
	148 Move X8, [X8+64]
	149 Compare X8, 0
	150 JumpIfEqual {457}
	151 Move X9, 0x615000
	152 Move X9, [X9+1656]
	153 Move X0, X8
	154 Move X1, [X9]
	155 Call HashSet`1<Int32>.Clear, X0
	156 Move X0, [X19]
	157 Move X8, 0x60F000
	158 Move X8, [X8+3592]
	159 Move X0, [X8]
	160 Call 0x1C17F10
	161 Move X8, 0x615000
	162 Move X8, [X8+1672]
	163 Move X26, X0
	164 Move X1, [X8]
	165 Call HashSet`1<Int32>..ctor, X0
	166 Move X0, [X19]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X19]
	172 Move X8, [X0+184]
	173 Move [X8+64], X26
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {179}
	177 Call 0x1C17DFC
	178 Move X0, [X19]
	179 Move X8, [X0+184]
	180 Move X0, X23
	181 Move X1, X31
	182 Move X26, [X8+64]
	183 Call Object.GetInstanceID, X0
	184 Compare X26, 0
	185 JumpIfEqual {457}
	186 Move X2, [X21]
	187 Move W1, W0
	188 Move X0, X26
	189 Call HashSet`1<Int32>.Add, X0, X1
	190 Move X0, [X23+312]
	191 Compare X0, 0
	192 JumpIfEqual {261}
	193 Move W8, [X0+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move W26, W31
	196 Move X2, [X29]
	197 Move W1, W26
	198 Call List`1<Object>.get_Item, X0, X1
	199 Move X8, 0x60E000
	200 Move X8, [X8+1432]
	201 Move X27, X0
	202 Move X8, [X8]
	203 Move W9, [X8+224]
	204 Compare W9, 0
	205 JumpIfNotEqual {208}
	206 Move X0, X8
	207 Call 0x1C17DFC
	208 Move X0, X27
	209 Move X1, X31
	210 Move X2, X31
	211 Call Object.op_Inequality, X0, X1
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {261}
	216 Move X0, [X23+312]
	217 Compare X0, 0
	218 JumpIfEqual {457}
	219 Move X2, [X29]
	220 Move W1, W26
	221 Call List`1<Object>.get_Item, X0, X1
	222 Compare X0, 0
	223 JumpIfEqual {457}
	224 Move X1, X31
	225 Move X27, X0
	226 Call Object.GetInstanceID, X0
	227 Move X8, [X19]
	228 Move W28, W0
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {235}
	232 Move X0, X8
	233 Call 0x1C17DFC
	234 Move X8, [X19]
	235 Move X8, [X8+184]
	236 Move X0, [X8+64]
	237 Compare X0, 0
	238 JumpIfEqual {457}
	239 Move X2, [X21]
	240 Move W1, W28
	241 Call HashSet`1<Int32>.Add, X0, X1
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {255}
	246 And W3, W20, 1
	247 Move W2, 1
	248 Move X0, X27
	249 Move W1, W25
	250 Call TMP_FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {425}
	255 Move X0, [X23+312]
	256 Compare X0, 0
	257 JumpIfEqual {457}
	258 Move W8, [X0+24]
	259 Add W26, W26, 1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X0, X31
	262 Call TMP_Settings.get_fallbackFontAssets
	263 Compare X0, 0
	264 JumpIfEqual {347}
	265 Move X0, X31
	266 Call TMP_Settings.get_fallbackFontAssets
	267 Compare X0, 0
	268 JumpIfEqual {457}
	269 Move W8, [X0+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X0, X31
	272 Call TMP_Settings.get_fallbackFontAssets
	273 Compare X0, 0
	274 JumpIfEqual {457}
	275 Move W26, W31
	276 Move W8, [X0+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X0, X31
	279 Call TMP_Settings.get_fallbackFontAssets
	280 Compare X0, 0
	281 JumpIfEqual {457}
	282 Move X2, [X29]
	283 Move W1, W26
	284 Call List`1<Object>.get_Item, X0, X1
	285 Move X8, 0x60E000
	286 Move X8, [X8+1432]
	287 Move X27, X0
	288 Move X8, [X8]
	289 Move W9, [X8+224]
	290 Compare W9, 0
	291 JumpIfNotEqual {294}
	292 Move X0, X8
	293 Call 0x1C17DFC
	294 Move X0, X27
	295 Move X1, X31
	296 Move X2, X31
	297 Call Object.op_Inequality, X0, X1
	298 Move TEMP, X0
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {347}
	302 Move X0, X31
	303 Call TMP_Settings.get_fallbackFontAssets
	304 Compare X0, 0
	305 JumpIfEqual {457}
	306 Move X2, [X29]
	307 Move W1, W26
	308 Call List`1<Object>.get_Item, X0, X1
	309 Compare X0, 0
	310 JumpIfEqual {457}
	311 Move X1, X31
	312 Move X27, X0
	313 Call Object.GetInstanceID, X0
	314 Move X8, [X19]
	315 Move W28, W0
	316 Move W9, [X8+224]
	317 Compare W9, 0
	318 JumpIfNotEqual {322}
	319 Move X0, X8
	320 Call 0x1C17DFC
	321 Move X8, [X19]
	322 Move X8, [X8+184]
	323 Move X0, [X8+64]
	324 Compare X0, 0
	325 JumpIfEqual {457}
	326 Move X2, [X21]
	327 Move W1, W28
	328 Call HashSet`1<Int32>.Add, X0, X1
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {342}
	333 And W3, W20, 1
	334 Move W2, 1
	335 Move X0, X27
	336 Move W1, W25
	337 Call TMP_FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	338 Move TEMP, X0
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfEqual {425}
	342 Move X0, X31
	343 Add W26, W26, 1
	344 Call TMP_Settings.get_fallbackFontAssets
	345 Compare X0, 0
	346 JumpIfNotEqual {276}
	347 Move X0, X31
	348 Call TMP_Settings.get_defaultFontAsset
	349 Move X8, 0x60E000
	350 Move X8, [X8+1432]
	351 Move X26, X0
	352 Move X8, [X8]
	353 Move W9, [X8+224]
	354 Compare W9, 0
	355 JumpIfNotEqual {358}
	356 Move X0, X8
	357 Call 0x1C17DFC
	358 Move X0, X26
	359 Move X1, X31
	360 Move X2, X31
	361 Call Object.op_Inequality, X0, X1
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {401}
	366 Move X0, X31
	367 Call TMP_Settings.get_defaultFontAsset
	368 Compare X0, 0
	369 JumpIfEqual {457}
	370 Move X1, X31
	371 Move X26, X0
	372 Call Object.GetInstanceID, X0
	373 Move X8, [X19]
	374 Move W27, W0
	375 Move W9, [X8+224]
	376 Compare W9, 0
	377 JumpIfNotEqual {381}
	378 Move X0, X8
	379 Call 0x1C17DFC
	380 Move X8, [X19]
	381 Move X8, [X8+184]
	382 Move X0, [X8+64]
	383 Compare X0, 0
	384 JumpIfEqual {457}
	385 Move X2, [X21]
	386 Move W1, W27
	387 Call HashSet`1<Int32>.Add, X0, X1
	388 Move TEMP, X0
	389 And TEMP, TEMP, 1
	390 Compare TEMP, 1
	391 JumpIfNotEqual {401}
	392 And W3, W20, 1
	393 Move W2, 1
	394 Move X0, X26
	395 Move W1, W25
	396 Call TMP_FontAsset.HasCharacter_Internal, X0, X1, X2, X3
	397 Move TEMP, X0
	398 And TEMP, TEMP, 1
	399 Compare TEMP, 1
	400 JumpIfEqual {425}
	401 Move X0, [X23+520]
	402 Compare X0, 0
	403 JumpIfEqual {457}
	404 Move X9, 0x614000
	405 Move W10, [X0+28]
	406 Move X8, [X0+16]
	407 Move X9, [X9+464]
	408 Add W10, W10, 1
	409 Move X9, [X9]
	410 Move [X0+28], W10
	411 Compare X8, 0
	412 JumpIfEqual {457}
	413 NotImplemented "Instruction LDRSW not yet implemented."
	414 Move W11, [X8+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Add W9, W10, 1
	417 Add X8, X8, X10
	418 Move [X0+24], W9
	419 Move [X8+32], W25
	420 Move X8, [X9+32]
	421 Move W1, W25
	422 Move X8, [X8+192]
	423 Move X2, [X8+112]
	424 Call List`1<UInt32>.AddWithResize, X0, X1
	425 Move W8, [X22+16]
	426 Add W24, W24, 1
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Move X0, [X23+520]
	429 Compare X0, 0
	430 JumpIfEqual {457}
	431 Move W8, [X0+24]
	432 Move X19, [X31+8]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move X8, 0x63B000
	435 Move X8, [X8+1368]
	436 Move X1, [X8]
	437 Call List`1<UInt32>.ToArray, X0
	438 Move X8, X0
	439 Move W0, W31
	440 Move [X19], X8
	441 Move W0, 1
	442 Move W0, W31
	443 Move X20, [X31+112]
	444 Move X19, [X31+120]
	445 Move X22, [X31+96]
	446 Move X21, [X31+104]
	447 Move X24, [X31+80]
	448 Move X23, [X31+88]
	449 Move X26, [X31+64]
	450 Move X25, [X31+72]
	451 Move X28, [X31+48]
	452 Move X27, [X31+56]
	453 Move X29, [X31+32]
	454 Move X30, [X31+40]
	455 Add X31, X31, 128
	456 Return X0
	457 Call 0x1C17F20

Method: System.Boolean HasCharacters(System.String text)

Disassembly:
	0x03AE6B88 BL 0x1C16DFC
	0x03AE6B8C MOVZ W0, 0x2D
	0x03AE6B90 MOV X1, X31
	0x03AE6B94 BL 0x3C9CBD8
	0x03AE6B98 MOV W25, W0
	0x03AE6B9C CBZ W0, 0x3AE6D04
	0x03AE6BA0 ADRP X8, 0x672000
	0x03AE6BA4 LDR X8, [X8 + 0x5B0]
	0x03AE6BA8 LDR X0, [X8]
	0x03AE6BAC BL 0x1C16F10
	0x03AE6BB0 MOV X1, X31
	0x03AE6BB4 MOV X24, X0
	0x03AE6BB8 BL 0x3B1889C
	0x03AE6BBC MOVZ W8, 0x1
	0x03AE6BC0 STRB W8, [X24 + 0x10]
	0x03AE6BC4 MOVZ W8, 0x3F800000
	0x03AE6BC8 STR W23, [X24 + 0x14]
	0x03AE6BCC STP X31, X31, [X24 + 0x18]
	0x03AE6BD0 STP W25, W8, [X24 + 0x28]
	0x03AE6BD4 LDR X0, [X20 + 0xB8]
	0x03AE6BD8 CBZ X0, 0x3AE73A8
	0x03AE6BDC ADRP X8, 0x672000
	0x03AE6BE0 LDR X8, [X8 + 0xCA8]
	0x03AE6BE4 MOV W1, W25
	0x03AE6BE8 LDR X2, [X8]
	0x03AE6BEC BL 0x2B0F250
	0x03AE6BF0 TBZ X0, 0x0, 0x3AE6C60
	0x03AE6BF4 LDR X0, [X20 + 0xB8]
	0x03AE6BF8 CBZ X0, 0x3AE73A8
	0x03AE6BFC ADRP X8, 0x672000
	0x03AE6C00 LDR X8, [X8 + 0xC90]
	0x03AE6C04 MOV W1, W25
	0x03AE6C08 LDR X2, [X8]
	0x03AE6C0C BL 0x2B0EFBC
	0x03AE6C10 STP X20, X0, [X24 + 0x18]
	0x03AE6C14 LDR X0, [X20 + 0xC0]
	0x03AE6C18 CBZ X0, 0x3AE73A8
	0x03AE6C1C ADRP X9, 0x672000
	0x03AE6C20 LDR W10, [X0 + 0x1C]
	0x03AE6C24 LDR X8, [X0 + 0x10]
	0x03AE6C28 LDR X9, [X9 + 0xC20]
	0x03AE6C2C ADD W10, W10, 0x1
	0x03AE6C30 LDR X9, [X9]
	0x03AE6C34 STR W10, [X0 + 0x1C]
	0x03AE6C38 CBZ X8, 0x3AE73A8
	0x03AE6C3C LDRSW X10, [X0 + 0x18]
	0x03AE6C40 LDR W11, [X8 + 0x18]
	0x03AE6C44 CMP W10, W11
	0x03AE6C48 B.CS 0x3AE6CCC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8FD000
	009 Move W8, [X21+1439]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x673000
	017 Move X0, [X0+3208]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1439], W8
	021 Move X8, [X20+200]
	022 Compare X8, 0
	023 JumpIfEqual {53}
	024 Compare X19, 0
	025 JumpIfEqual {62}
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSET not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X24, 0x673000
	031 Move X24, [X24+3208]
	032 Move W21, W31
	033 Move X22, [X20+200]
	034 Move X0, X19
	035 Move W1, W21
	036 Move X2, X31
	037 Call String.get_Chars, X0, X1
	038 Compare X22, 0
	039 JumpIfEqual {62}
	040 Move X2, [X24]
	041 And W1, W0, 0xFFFF
	042 Move X0, X22
	043 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {52}
	048 Move W8, [X19+16]
	049 Add W21, W21, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Xor W8, W23, 1
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 And W0, W8, 1
	060 Move X30, [X31+64]
	061 Return X0
	062 Call 0x1C17F20

Method: System.String GetCharacters(TMPro.TMP_FontAsset fontAsset)

Disassembly:
	0x03AE6C4C ADD W9, W10, 0x1
	0x03AE6C50 ADD X8, X8, X10, 0x3, LSL
	0x03AE6C54 STR W9, [X0 + 0x18]
	0x03AE6C58 STR X24, [X8 + 0x20]
	0x03AE6C5C B 0x3AE6CE0
	0x03AE6C60 LDR X0, [X20 + 0x1F0]
	0x03AE6C64 CBZ X0, 0x3AE73A8
	0x03AE6C68 ADRP X8, 0x668000
	0x03AE6C6C LDR X8, [X8 + 0x828]
	0x03AE6C70 MOV W1, W25
	0x03AE6C74 LDR X2, [X8]
	0x03AE6C78 BL 0x2DCDCE0
	0x03AE6C7C TBZ X0, 0x0, 0x3AE6D64
	0x03AE6C80 LDR X0, [X20 + 0x1E8]
	0x03AE6C84 CBZ X0, 0x3AE73A8
	0x03AE6C88 ADRP X9, 0x613000
	0x03AE6C8C LDR W10, [X0 + 0x1C]
	0x03AE6C90 LDR X8, [X0 + 0x10]
	0x03AE6C94 LDR X9, [X9 + 0x1D0]
	0x03AE6C98 ADD W10, W10, 0x1
	0x03AE6C9C LDR X9, [X9]
	0x03AE6CA0 STR W10, [X0 + 0x1C]
	0x03AE6CA4 CBZ X8, 0x3AE73A8
	0x03AE6CA8 LDRSW X10, [X0 + 0x18]
	0x03AE6CAC LDR W11, [X8 + 0x18]
	0x03AE6CB0 CMP W10, W11
	0x03AE6CB4 B.CS 0x3AE6D50
	0x03AE6CB8 ADD W9, W10, 0x1
	0x03AE6CBC ADD X8, X8, X10, 0x2, LSL
	0x03AE6CC0 STR W9, [X0 + 0x18]
	0x03AE6CC4 STR W25, [X8 + 0x20]
	0x03AE6CC8 B 0x3AE6D64
	0x03AE6CCC LDR X8, [X9 + 0x20]
	0x03AE6CD0 MOV X1, X24
	0x03AE6CD4 LDR X8, [X8 + 0xC0]
	0x03AE6CD8 LDR X2, [X8 + 0x70]
	0x03AE6CDC BL 0x301BF90
	0x03AE6CE0 LDR X0, [X20 + 0xC8]
	0x03AE6CE4 CBZ X0, 0x3AE73A8
	0x03AE6CE8 ADRP X8, 0x672000
	0x03AE6CEC LDR X8, [X8 + 0xCD0]
	0x03AE6CF0 MOV W1, W23
	0x03AE6CF4 MOV X2, X24
	0x03AE6CF8 LDR X3, [X8]
	0x03AE6CFC BL 0x2B0F05C
	0x03AE6D00 B 0x3AE6E04
	0x03AE6D04 LDR X0, [X20 + 0x208]
	0x03AE6D08 CBZ X0, 0x3AE73A8
	0x03AE6D0C ADRP X9, 0x613000
	0x03AE6D10 LDR W10, [X0 + 0x1C]
	0x03AE6D14 LDR X8, [X0 + 0x10]
	0x03AE6D18 LDR X9, [X9 + 0x1D0]
	0x03AE6D1C ADD W10, W10, 0x1
	0x03AE6D20 LDR X9, [X9]
	0x03AE6D24 STR W10, [X0 + 0x1C]
	0x03AE6D28 CBZ X8, 0x3AE73A8
	0x03AE6D2C LDRSW X10, [X0 + 0x18]
	0x03AE6D30 LDR W11, [X8 + 0x18]
	0x03AE6D34 CMP W10, W11
	0x03AE6D38 B.CS 0x3AE6DE8
	0x03AE6D3C ADD W9, W10, 0x1
	0x03AE6D40 ADD X8, X8, X10, 0x2, LSL
	0x03AE6D44 STR W9, [X0 + 0x18]
	0x03AE6D48 STR W23, [X8 + 0x20]
	0x03AE6D4C B 0x3AE6DFC
	0x03AE6D50 LDR X8, [X9 + 0x20]
	0x03AE6D54 MOV W1, W25

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8FD000
	009 Move W8, [X20+1440]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x610000
	016 Move X0, [X0+368]
	017 Call 0x1C17CF4
	018 Move X0, 0x673000
	019 Move X0, [X0+3312]
	020 Call 0x1C17CF4
	021 Move X0, 0x673000
	022 Move X0, [X0+3320]
	023 Call 0x1C17CF4
	024 Move X0, 0x610000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1440], W8
	029 NotImplemented "Instruction STRH not yet implemented."
	030 Compare X19, 0
	031 JumpIfEqual {71}
	032 Move X0, [X19+192]
	033 Compare X0, 0
	034 JumpIfEqual {71}
	035 Move X8, 0x610000
	036 Move X8, [X8+632]
	037 Move X22, 0x673000
	038 Move X23, 0x610000
	039 Move W20, W31
	040 Move X8, [X8]
	041 Move X8, [X8+184]
	042 Move X21, [X8]
	043 Move X22, [X22+3320]
	044 Move X23, [X23+368]
	045 Move W8, [X0+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X2, [X22]
	048 Move W1, W20
	049 Call List`1<Object>.get_Item, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {71}
	052 Move W8, [X0+20]
	053 Move X0, [X23]
	054 NotImplemented "Instruction STRH not yet implemented."
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Add X0, X31, 12
	060 Move X1, X31
	061 Call Char.ToString, X0
	062 Move X1, X0
	063 Move X0, X21
	064 Move X2, X31
	065 Call String.Concat, X0, X1
	066 Move X21, X0
	067 Move X0, [X19+192]
	068 Add W20, W20, 1
	069 Compare X0, 0
	070 JumpIfNotEqual {45}
	071 Call 0x1C17F20
	072 Move X0, X21
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Move X23, [X31+24]
	079 Add X31, X31, 64
	080 Return X0

Method: System.Int32[] GetCharactersArray(TMPro.TMP_FontAsset fontAsset)

Disassembly:
	0x03AE6D58 LDR X8, [X8 + 0xC0]
	0x03AE6D5C LDR X2, [X8 + 0x70]
	0x03AE6D60 BL 0x30C1698
	0x03AE6D64 LDR X0, [X20 + 0x200]
	0x03AE6D68 CBZ X0, 0x3AE73A8
	0x03AE6D6C ADRP X8, 0x668000
	0x03AE6D70 LDR X8, [X8 + 0x828]
	0x03AE6D74 MOV W1, W23
	0x03AE6D78 LDR X2, [X8]
	0x03AE6D7C BL 0x2DCDCE0
	0x03AE6D80 TBZ X0, 0x0, 0x3AE6E04
	0x03AE6D84 LDR X0, [X20 + 0x1F8]
	0x03AE6D88 CBZ X0, 0x3AE73A8
	0x03AE6D8C ADRP X9, 0x672000
	0x03AE6D90 LDR W10, [X0 + 0x1C]
	0x03AE6D94 LDR X8, [X0 + 0x10]
	0x03AE6D98 LDR X9, [X9 + 0xC20]
	0x03AE6D9C ADD W10, W10, 0x1
	0x03AE6DA0 LDR X9, [X9]
	0x03AE6DA4 STR W10, [X0 + 0x1C]
	0x03AE6DA8 CBZ X8, 0x3AE73A8
	0x03AE6DAC LDRSW X10, [X0 + 0x18]
	0x03AE6DB0 LDR W11, [X8 + 0x18]
	0x03AE6DB4 CMP W10, W11
	0x03AE6DB8 B.CS 0x3AE6DD0
	0x03AE6DBC ADD W9, W10, 0x1
	0x03AE6DC0 ADD X8, X8, X10, 0x3, LSL
	0x03AE6DC4 STR W9, [X0 + 0x18]
	0x03AE6DC8 STR X24, [X8 + 0x20]
	0x03AE6DCC B 0x3AE6E04
	0x03AE6DD0 LDR X8, [X9 + 0x20]
	0x03AE6DD4 MOV X1, X24
	0x03AE6DD8 LDR X8, [X8 + 0xC0]
	0x03AE6DDC LDR X2, [X8 + 0x70]
	0x03AE6DE0 BL 0x301BF90
	0x03AE6DE4 B 0x3AE6E04
	0x03AE6DE8 LDR X8, [X9 + 0x20]
	0x03AE6DEC MOV W1, W23
	0x03AE6DF0 LDR X8, [X8 + 0xC0]
	0x03AE6DF4 LDR X2, [X8 + 0x70]
	0x03AE6DF8 BL 0x30C1698
	0x03AE6DFC MOVZ W8, 0x1
	0x03AE6E00 STR W8, [X31 + 0xC]
	0x03AE6E04 CMP X29, X27
	0x03AE6E08 B.EQ 0x3AE6E24
	0x03AE6E0C LDR W8, [X22 + 0x18]
	0x03AE6E10 ADD X27, X27, 0x1
	0x03AE6E14 CMP X27, X8
	0x03AE6E18 B.CC 0x3AE6B08
	0x03AE6E1C B 0x3AE73AC
	0x03AE6E20 STR W31, [X31 + 0xC]
	0x03AE6E24 LDR X8, [X20 + 0x1E8]
	0x03AE6E28 CBZ X8, 0x3AE73A8
	0x03AE6E2C LDR W8, [X8 + 0x18]
	0x03AE6E30 CBZ W8, 0x3AE72B0
	0x03AE6E34 LDR X8, [X20 + 0xD8]
	0x03AE6E38 CBZ X8, 0x3AE73A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8FD000
	008 Move W8, [X20+1441]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x60F000
	015 Move X0, [X0+3672]
	016 Call 0x1C17CF4
	017 Move X0, 0x673000
	018 Move X0, [X0+3312]
	019 Call 0x1C17CF4
	020 Move X0, 0x673000
	021 Move X0, [X0+3320]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1441], W8
	025 Compare X19, 0
	026 JumpIfEqual {61}
	027 Move X8, [X19+192]
	028 Compare X8, 0
	029 JumpIfEqual {61}
	030 Move X9, 0x60F000
	031 Move X9, [X9+3672]
	032 Move W1, [X8+24]
	033 Move X0, [X9]
	034 Call 0x1C17D6C
	035 Move X8, [X19+192]
	036 Compare X8, 0
	037 JumpIfEqual {61}
	038 Move X22, 0x673000
	039 Move X22, [X22+3320]
	040 Move X20, X0
	041 Move X21, X31
	042 Add X23, X0, 32
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X2, [X22]
	046 Move X0, X8
	047 Move W1, W21
	048 Call List`1<Object>.get_Item, X0, X1
	049 Compare X0, 0
	050 JumpIfEqual {61}
	051 Compare X20, 0
	052 JumpIfEqual {61}
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W8, [X0+20]
	056 Move [X23], W8
	057 Move X8, [X19+192]
	058 Add X21, X21, 1
	059 Compare X8, 0
	060 JumpIfNotEqual {43}
	061 Call 0x1C17F20
	062 Move X0, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return X0
	070 Call 0x1C17F28

Method: System.UInt32 GetGlyphIndex(System.UInt32 unicode)

Disassembly:
	0x03AE6E3C LDRSW X9, [X20 + 0xE0]
	0x03AE6E40 LDR W10, [X8 + 0x18]
	0x03AE6E44 CMP W9, W10
	0x03AE6E48 B.CS 0x3AE73AC
	0x03AE6E4C ADD X8, X8, X9, 0x3, LSL
	0x03AE6E50 LDR X0, [X8 + 0x20]
	0x03AE6E54 CBZ X0, 0x3AE73A8
	0x03AE6E58 LDR X8, [X0]
	0x03AE6E5C LDP X9, X1, [X8 + 0x188]
	0x03AE6E60 BLR X9
	0x03AE6E64 CBZ W0, 0x3AE6E9C
	0x03AE6E68 LDR X8, [X20 + 0xD8]
	0x03AE6E6C CBZ X8, 0x3AE73A8
	0x03AE6E70 LDRSW X9, [X20 + 0xE0]
	0x03AE6E74 LDR W10, [X8 + 0x18]
	0x03AE6E78 CMP W9, W10
	0x03AE6E7C B.CS 0x3AE73AC
	0x03AE6E80 ADD X8, X8, X9, 0x3, LSL
	0x03AE6E84 LDR X0, [X8 + 0x20]
	0x03AE6E88 CBZ X0, 0x3AE73A8
	0x03AE6E8C LDR X8, [X0]
	0x03AE6E90 LDP X9, X1, [X8 + 0x1A8]
	0x03AE6E94 BLR X9
	0x03AE6E98 CBNZ W0, 0x3AE6F0C
	0x03AE6E9C LDR X8, [X20 + 0xD8]
	0x03AE6EA0 CBZ X8, 0x3AE73A8
	0x03AE6EA4 LDRSW X9, [X20 + 0xE0]
	0x03AE6EA8 LDR W10, [X8 + 0x18]
	0x03AE6EAC CMP W9, W10
	0x03AE6EB0 B.CS 0x3AE73AC
	0x03AE6EB4 ADD X8, X8, X9, 0x3, LSL
	0x03AE6EB8 LDR X0, [X8 + 0x20]
	0x03AE6EBC CBZ X0, 0x3AE73A8
	0x03AE6EC0 LDR W2, [X20 + 0x10C]
	0x03AE6EC4 LDR W1, [X20 + 0x108]
	0x03AE6EC8 MOV X3, X31
	0x03AE6ECC BL 0x3C1C644
	0x03AE6ED0 LDR X8, [X20 + 0xD8]
	0x03AE6ED4 CBZ X8, 0x3AE73A8
	0x03AE6ED8 LDRSW X9, [X20 + 0xE0]
	0x03AE6EDC LDR W10, [X8 + 0x18]
	0x03AE6EE0 CMP W9, W10
	0x03AE6EE4 B.CS 0x3AE73AC
	0x03AE6EE8 LDR X0, [X26]
	0x03AE6EEC ADD X8, X8, X9, 0x3, LSL
	0x03AE6EF0 LDR X22, [X8 + 0x20]
	0x03AE6EF4 LDR W9, [X0 + 0xE0]
	0x03AE6EF8 CBNZ W9, 0x3AE6F00
	0x03AE6EFC BL 0x1C16DFC
	0x03AE6F00 MOV X0, X22
	0x03AE6F04 MOV X1, X31
	0x03AE6F08 BL 0x3C9E1E0
	0x03AE6F0C LDR X8, [X20 + 0xD8]
	0x03AE6F10 CBZ X8, 0x3AE73A8
	0x03AE6F14 LDRSW X9, [X20 + 0xE0]
	0x03AE6F18 LDR W10, [X8 + 0x18]
	0x03AE6F1C CMP W9, W10
	0x03AE6F20 B.CS 0x3AE73AC
	0x03AE6F24 LDR X0, [X26]
	0x03AE6F28 ADD X8, X8, X9, 0x3, LSL
	0x03AE6F2C LDR X22, [X20 + 0x1E8]
	0x03AE6F30 LDR W23, [X20 + 0x110]
	0x03AE6F34 LDP X24, X26, [X20 + 0xE8]
	0x03AE6F38 LDR W25, [X20 + 0x114]
	0x03AE6F3C LDR W9, [X0 + 0xE0]
	0x03AE6F40 LDR X27, [X8 + 0x20]
	0x03AE6F44 CBNZ W9, 0x3AE6F4C
	0x03AE6F48 BL 0x1C16DFC
	0x03AE6F4C ADD X7, X31, 0x18
	0x03AE6F50 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8FD000
	007 Move W8, [X21+1442]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x673000
	015 Move X0, [X0+3208]
	016 Call 0x1C17CF4
	017 Move X0, 0x673000
	018 Move X0, [X0+808]
	019 Call 0x1C17CF4
	020 Move X0, 0x673000
	021 Move X0, [X0+3008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1442], W8
	025 Move X0, [X20+200]
	026 Compare X0, 0
	027 JumpIfEqual {88}
	028 Move X8, 0x673000
	029 Move X8, [X8+3208]
	030 Move W1, W19
	031 Move X2, [X8]
	032 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {48}
	037 Move X0, [X20+200]
	038 Compare X0, 0
	039 JumpIfEqual {88}
	040 Move X8, 0x673000
	041 Move X8, [X8+808]
	042 Move W1, W19
	043 Move X2, [X8]
	044 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {88}
	047 Move W0, [X0+40]
	048 Move X21, [X20+64]
	049 Add X0, X20, 80
	050 Move X1, X31
	051 Call FaceInfo.get_pointSize, X0
	052 Move X22, 0x673000
	053 Move X22, [X22+3008]
	054 Move W20, W0
	055 Move X8, [X22]
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X0, X21
	062 Move W1, W20
	063 Move X2, X31
	064 Call FontEngine.LoadFontFace, X0, X1
	065 Compare W0, 0
	066 JumpIfEqual {74}
	067 Move W0, W31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Move X0, [X22]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W0, W19
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X1, X31
	085 Move X30, [X31+48]
	086 Call FontEngine.GetGlyphIndex, X0
	087 Return X0
	088 Call 0x1C17F20

Method: System.Void RegisterFontAssetForFontFeatureUpdate(TMPro.TMP_FontAsset fontAsset)

Disassembly:
	0x03AE6F54 MOV W1, W23
	0x03AE6F58 MOV W2, W31
	0x03AE6F5C MOV X3, X26
	0x03AE6F60 MOV X4, X24
	0x03AE6F64 MOV W5, W25
	0x03AE6F68 MOV X6, X27
	0x03AE6F6C STR X31, [X31]
	0x03AE6F70 BL 0x3C9D530
	0x03AE6F74 LDR X8, [X31 + 0x18]
	0x03AE6F78 CBZ X8, 0x3AE73A8
	0x03AE6F7C ADRP X26, 0x672000
	0x03AE6F80 ADRP X27, 0x672000
	0x03AE6F84 ADRP X25, 0x613000
	0x03AE6F88 LDR X26, [X26 + 0xC10]
	0x03AE6F8C LDR X27, [X27 + 0xC98]
	0x03AE6F90 LDR X25, [X25 + 0x1D0]
	0x03AE6F94 MOV W22, W0
	0x03AE6F98 MOV X21, X31
	0x03AE6F9C LDR W9, [X8 + 0x18]
	0x03AE6FA0 CMP W21, W9
	0x03AE6FA4 B.GE 0x3AE710C
	0x03AE6FA8 CMP W21, W9
	0x03AE6FAC B.CS 0x3AE73AC
	0x03AE6FB0 ADD X8, X8, X21, 0x3, LSL
	0x03AE6FB4 LDR X24, [X8 + 0x20]
	0x03AE6FB8 CBZ X24, 0x3AE710C
	0x03AE6FBC MOV X0, X24
	0x03AE6FC0 MOV X1, X31
	0x03AE6FC4 BL 0x3C9C494
	0x03AE6FC8 LDR W1, [X20 + 0xE0]
	0x03AE6FCC MOV W23, W0
	0x03AE6FD0 MOV X0, X24
	0x03AE6FD4 MOV X2, X31
	0x03AE6FD8 BL 0x3C9C4F8
	0x03AE6FDC LDR X0, [X20 + 0xB0]
	0x03AE6FE0 CBZ X0, 0x3AE73A8
	0x03AE6FE4 LDR W10, [X0 + 0x1C]
	0x03AE6FE8 LDR X8, [X0 + 0x10]
	0x03AE6FEC LDR X9, [X26]
	0x03AE6FF0 ADD W10, W10, 0x1
	0x03AE6FF4 STR W10, [X0 + 0x1C]
	0x03AE6FF8 CBZ X8, 0x3AE73A8
	0x03AE6FFC LDRSW X10, [X0 + 0x18]
	0x03AE7000 LDR W11, [X8 + 0x18]
	0x03AE7004 CMP W10, W11
	0x03AE7008 B.CS 0x3AE7020
	0x03AE700C ADD W9, W10, 0x1
	0x03AE7010 ADD X8, X8, X10, 0x3, LSL
	0x03AE7014 STR W9, [X0 + 0x18]
	0x03AE7018 STR X24, [X8 + 0x20]
	0x03AE701C B 0x3AE7034
	0x03AE7020 LDR X8, [X9 + 0x20]
	0x03AE7024 MOV X1, X24
	0x03AE7028 LDR X8, [X8 + 0xC0]
	0x03AE702C LDR X2, [X8 + 0x70]
	0x03AE7030 BL 0x301BF90
	0x03AE7034 LDR X0, [X20 + 0xB8]
	0x03AE7038 CBZ X0, 0x3AE73A8
	0x03AE703C LDR X3, [X27]
	0x03AE7040 MOV W1, W23
	0x03AE7044 MOV X2, X24
	0x03AE7048 BL 0x2B0F05C
	0x03AE704C LDR X0, [X20 + 0x1E0]
	0x03AE7050 CBZ X0, 0x3AE73A8
	0x03AE7054 LDR W10, [X0 + 0x1C]
	0x03AE7058 LDR X8, [X0 + 0x10]
	0x03AE705C LDR X9, [X25]
	0x03AE7060 ADD W10, W10, 0x1
	0x03AE7064 STR W10, [X0 + 0x1C]
	0x03AE7068 CBZ X8, 0x3AE73A8
	0x03AE706C LDRSW X10, [X0 + 0x18]
	0x03AE7070 LDR W11, [X8 + 0x18]
	0x03AE7074 CMP W10, W11
	0x03AE7078 B.CS 0x3AE7090
	0x03AE707C ADD W9, W10, 0x1
	0x03AE7080 ADD X8, X8, X10, 0x2, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8FD000
	006 Move W8, [X20+1443]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x610000
	013 Move X0, [X0+2520]
	014 Call 0x1C17CF4
	015 Move X0, 0x673000
	016 Move X0, [X0+3096]
	017 Call 0x1C17CF4
	018 Move X0, 0x673000
	019 Move X0, [X0+1400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1443], W8
	023 Compare X19, 0
	024 JumpIfEqual {95}
	025 Move X21, 0x673000
	026 Move W20, [X19+24]
	027 Move X21, [X21+1400]
	028 Compare W20, 0
	029 JumpIfNotEqual {35}
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object.GetInstanceID, X0
	033 Move W20, W0
	034 Move [X19+24], W0
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move X0, [X8+80]
	043 Compare X0, 0
	044 JumpIfEqual {95}
	045 Move X8, 0x610000
	046 Move X8, [X8+2520]
	047 Move W1, W20
	048 Move X2, [X8]
	049 Call HashSet`1<Int32>.Add, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {80}
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X0, [X8+72]
	062 Compare X0, 0
	063 JumpIfEqual {95}
	064 Move X9, 0x672000
	065 Move X9, [X9+3096]
	066 Move W10, [X0+28]
	067 Move X8, [X0+16]
	068 Move X9, [X9]
	069 Add W10, W10, 1
	070 Move [X0+28], W10
	071 Compare X8, 0
	072 JumpIfEqual {95}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W11, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W9, W10, 1
	077 Add X8, X8, X10
	078 Move [X0+24], W9
	079 Move [X8+32], X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Return 
	085 Move X8, [X9+32]
	086 Move X1, X19
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X8, [X8+192]
	090 Move X2, [X8+112]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call List`1<Object>.AddWithResize, X0, X1
	094 Return 
	095 Call 0x1C17F20

Method: System.Void UpdateFontFeaturesForFontAssetsInQueue()

Disassembly:
	0x03AE7084 STR W9, [X0 + 0x18]
	0x03AE7088 STR W23, [X8 + 0x20]
	0x03AE708C B 0x3AE70A4
	0x03AE7090 LDR X8, [X9 + 0x20]
	0x03AE7094 MOV W1, W23
	0x03AE7098 LDR X8, [X8 + 0xC0]
	0x03AE709C LDR X2, [X8 + 0x70]
	0x03AE70A0 BL 0x30C1698
	0x03AE70A4 LDR X0, [X20 + 0x1D8]
	0x03AE70A8 CBZ X0, 0x3AE73A8
	0x03AE70AC LDR W10, [X0 + 0x1C]
	0x03AE70B0 LDR X8, [X0 + 0x10]
	0x03AE70B4 LDR X9, [X25]
	0x03AE70B8 ADD W10, W10, 0x1
	0x03AE70BC STR W10, [X0 + 0x1C]
	0x03AE70C0 CBZ X8, 0x3AE73A8
	0x03AE70C4 LDRSW X10, [X0 + 0x18]
	0x03AE70C8 LDR W11, [X8 + 0x18]
	0x03AE70CC CMP W10, W11
	0x03AE70D0 B.CS 0x3AE70E8
	0x03AE70D4 ADD W9, W10, 0x1
	0x03AE70D8 ADD X8, X8, X10, 0x2, LSL
	0x03AE70DC STR W9, [X0 + 0x18]
	0x03AE70E0 STR W23, [X8 + 0x20]
	0x03AE70E4 B 0x3AE70FC
	0x03AE70E8 LDR X8, [X9 + 0x20]
	0x03AE70EC MOV W1, W23
	0x03AE70F0 LDR X8, [X8 + 0xC0]
	0x03AE70F4 LDR X2, [X8 + 0x70]
	0x03AE70F8 BL 0x30C1698
	0x03AE70FC LDR X8, [X31 + 0x18]
	0x03AE7100 ADD X21, X21, 0x1
	0x03AE7104 CBNZ X8, 0x3AE6F9C
	0x03AE7108 B 0x3AE73A8
	0x03AE710C LDR X8, [X20 + 0x1E8]
	0x03AE7110 CBZ X8, 0x3AE73A8
	0x03AE7114 LDR W9, [X8 + 0x1C]
	0x03AE7118 ADD W9, W9, 0x1
	0x03AE711C STP W31, W9, [X8 + 0x18]
	0x03AE7120 LDR X0, [X20 + 0x1F8]
	0x03AE7124 CBZ X0, 0x3AE73A8
	0x03AE7128 ADRP X26, 0x671000
	0x03AE712C ADRP X21, 0x671000
	0x03AE7130 ADRP X27, 0x671000
	0x03AE7134 ADRP X28, 0x671000
	0x03AE7138 ADRP X29, 0x671000
	0x03AE713C LDR X26, [X26 + 0xCF8]
	0x03AE7140 LDR X21, [X21 + 0xE48]
	0x03AE7144 LDR X27, [X27 + 0xC20]
	0x03AE7148 LDR X28, [X28 + 0xCD0]
	0x03AE714C LDR X29, [X29 + 0xE60]
	0x03AE7150 MOV W23, W31
	0x03AE7154 LDR W8, [X0 + 0x18]
	0x03AE7158 CMP W23, W8
	0x03AE715C B.GE 0x3AE728C
	0x03AE7160 LDR X2, [X26]
	0x03AE7164 MOV W1, W23
	0x03AE7168 BL 0x301BCCC
	0x03AE716C CBZ X0, 0x3AE73A8
	0x03AE7170 MOV X24, X0
	0x03AE7174 LDR X0, [X20 + 0xB8]
	0x03AE7178 CBZ X0, 0x3AE73A8
	0x03AE717C LDR W1, [X24 + 0x28]
	0x03AE7180 LDR X3, [X21]
	0x03AE7184 ADD X2, X31, 0x10
	0x03AE7188 BL 0x2B10A7C
	0x03AE718C TBZ X0, 0x0, 0x3AE71DC
	0x03AE7190 LDR X8, [X31 + 0x10]
	0x03AE7194 STP X20, X8, [X24 + 0x18]
	0x03AE7198 LDR X0, [X20 + 0xC0]
	0x03AE719C CBZ X0, 0x3AE73A8
	0x03AE71A0 LDR W10, [X0 + 0x1C]
	0x03AE71A4 LDR X8, [X0 + 0x10]
	0x03AE71A8 LDR X9, [X27]
	0x03AE71AC ADD W10, W10, 0x1
	0x03AE71B0 STR W10, [X0 + 0x1C]
	0x03AE71B4 CBZ X8, 0x3AE73A8
	0x03AE71B8 LDRSW X10, [X0 + 0x18]
	0x03AE71BC LDR W11, [X8 + 0x18]
	0x03AE71C0 CMP W10, W11
	0x03AE71C4 B.CS 0x3AE7224
	0x03AE71C8 ADD W9, W10, 0x1
	0x03AE71CC ADD X8, X8, X10, 0x3, LSL
	0x03AE71D0 STR W9, [X0 + 0x18]
	0x03AE71D4 STR X24, [X8 + 0x20]
	0x03AE71D8 B 0x3AE7238
	0x03AE71DC LDR X0, [X20 + 0x1E8]
	0x03AE71E0 CBZ X0, 0x3AE73A8
	0x03AE71E4 LDR W10, [X0 + 0x1C]
	0x03AE71E8 LDR W1, [X24 + 0x28]
	0x03AE71EC LDR X8, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x8FC000
	008 Move X20, 0x672000
	009 Move W8, [X19+1444]
	010 Move X20, [X20+1400]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x614000
	016 Move X0, [X0+1656]
	017 Call 0x1C17CF4
	018 Move X0, 0x672000
	019 Move X0, [X0+3648]
	020 Call 0x1C17CF4
	021 Move X0, 0x672000
	022 Move X0, [X0+1552]
	023 Call 0x1C17CF4
	024 Move X0, 0x672000
	025 Move X0, [X0+3144]
	026 Call 0x1C17CF4
	027 Move X0, 0x672000
	028 Move X0, [X0+1400]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+1444], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8+72]
	040 Compare X8, 0
	041 JumpIfEqual {109}
	042 Move W21, [X8+24]
	043 Subtract W22, W21, 1
	044 Move X23, 0x672000
	045 Move X23, [X23+3144]
	046 Move W19, W31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X0, [X8+72]
	054 Compare X0, 0
	055 JumpIfEqual {109}
	056 Move X2, [X23]
	057 Move W1, W19
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {109}
	061 Call TMP_FontAsset.UpdateGlyphAdjustmentRecords, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X20]
	064 Add W19, W19, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, [X20]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move X9, [X8+72]
	074 Compare X9, 0
	075 JumpIfEqual {109}
	076 Move W2, [X9+24]
	077 Move W10, [X9+28]
	078 Add W10, W10, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X9+24], W31
	081 Move [X9+28], W10
	082 Move X0, [X9+16]
	083 Move W1, W31
	084 Move X3, X31
	085 Call Array.Clear, X0, X1, X2
	086 Move X8, [X20]
	087 Move X8, [X8+184]
	088 Move X0, [X8+80]
	089 Compare X0, 0
	090 JumpIfEqual {109}
	091 Move X8, 0x614000
	092 Move X8, [X8+1656]
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X1, [X8]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Call HashSet`1<Int32>.Clear, X0
	101 Return 
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Return 
	109 Call 0x1C17F20

Method: System.Void RegisterFontAssetForAtlasTextureUpdate(TMPro.TMP_FontAsset fontAsset)

Disassembly:
	0x03AE74FC ADRP X24, 0x671000
	0x03AE7500 ADRP X25, 0x671000
	0x03AE7504 ADRP X27, 0x671000
	0x03AE7508 ADRP X28, 0x671000
	0x03AE750C LDR X20, [X20 + 0xC10]
	0x03AE7510 LDR X26, [X26 + 0xC98]
	0x03AE7514 LDR X23, [X23 + 0x1D0]
	0x03AE7518 LDR X24, [X24 + 0xCF8]
	0x03AE751C LDR X25, [X25 + 0xE48]
	0x03AE7520 LDR X27, [X27 + 0xCD0]
	0x03AE7524 LDR X28, [X28 + 0xE60]
	0x03AE7528 MOV X29, X31
	0x03AE752C LDR W9, [X8 + 0x18]
	0x03AE7530 CMP W29, W9
	0x03AE7534 B.GE 0x3AE769C
	0x03AE7538 CMP W29, W9
	0x03AE753C B.CS 0x3AE7824
	0x03AE7540 ADD X8, X8, X29, 0x3, LSL
	0x03AE7544 LDR X22, [X8 + 0x20]
	0x03AE7548 CBZ X22, 0x3AE769C
	0x03AE754C MOV X0, X22
	0x03AE7550 MOV X1, X31
	0x03AE7554 BL 0x3C9C494
	0x03AE7558 LDR W1, [X19 + 0xE0]
	0x03AE755C MOV W21, W0
	0x03AE7560 MOV X0, X22
	0x03AE7564 MOV X2, X31
	0x03AE7568 BL 0x3C9C4F8
	0x03AE756C LDR X0, [X19 + 0xB0]
	0x03AE7570 CBZ X0, 0x3AE77F8
	0x03AE7574 LDR W10, [X0 + 0x1C]
	0x03AE7578 LDR X8, [X0 + 0x10]
	0x03AE757C LDR X9, [X20]
	0x03AE7580 ADD W10, W10, 0x1
	0x03AE7584 STR W10, [X0 + 0x1C]
	0x03AE7588 CBZ X8, 0x3AE77F8
	0x03AE758C LDRSW X10, [X0 + 0x18]
	0x03AE7590 LDR W11, [X8 + 0x18]
	0x03AE7594 CMP W10, W11
	0x03AE7598 B.CS 0x3AE75B0
	0x03AE759C ADD W9, W10, 0x1
	0x03AE75A0 ADD X8, X8, X10, 0x3, LSL
	0x03AE75A4 STR W9, [X0 + 0x18]
	0x03AE75A8 STR X22, [X8 + 0x20]
	0x03AE75AC B 0x3AE75C4
	0x03AE75B0 LDR X8, [X9 + 0x20]
	0x03AE75B4 MOV X1, X22
	0x03AE75B8 LDR X8, [X8 + 0xC0]
	0x03AE75BC LDR X2, [X8 + 0x70]
	0x03AE75C0 BL 0x301BF90
	0x03AE75C4 LDR X0, [X19 + 0xB8]
	0x03AE75C8 CBZ X0, 0x3AE77F8
	0x03AE75CC LDR X3, [X26]
	0x03AE75D0 MOV W1, W21
	0x03AE75D4 MOV X2, X22
	0x03AE75D8 BL 0x2B0F05C
	0x03AE75DC LDR X0, [X19 + 0x1E0]
	0x03AE75E0 CBZ X0, 0x3AE77F8
	0x03AE75E4 LDR W10, [X0 + 0x1C]
	0x03AE75E8 LDR X8, [X0 + 0x10]
	0x03AE75EC LDR X9, [X23]
	0x03AE75F0 ADD W10, W10, 0x1
	0x03AE75F4 STR W10, [X0 + 0x1C]
	0x03AE75F8 CBZ X8, 0x3AE77F8
	0x03AE75FC LDRSW X10, [X0 + 0x18]
	0x03AE7600 LDR W11, [X8 + 0x18]
	0x03AE7604 CMP W10, W11
	0x03AE7608 B.CS 0x3AE7620
	0x03AE760C ADD W9, W10, 0x1
	0x03AE7610 ADD X8, X8, X10, 0x2, LSL
	0x03AE7614 STR W9, [X0 + 0x18]
	0x03AE7618 STR W21, [X8 + 0x20]
	0x03AE761C B 0x3AE7634
	0x03AE7620 LDR X8, [X9 + 0x20]
	0x03AE7624 MOV W1, W21
	0x03AE7628 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8FC000
	006 Move W8, [X20+1445]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x60F000
	013 Move X0, [X0+2520]
	014 Call 0x1C17CF4
	015 Move X0, 0x672000
	016 Move X0, [X0+3096]
	017 Call 0x1C17CF4
	018 Move X0, 0x672000
	019 Move X0, [X0+1400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1445], W8
	023 Compare X19, 0
	024 JumpIfEqual {95}
	025 Move X21, 0x672000
	026 Move W20, [X19+24]
	027 Move X21, [X21+1400]
	028 Compare W20, 0
	029 JumpIfNotEqual {35}
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object.GetInstanceID, X0
	033 Move W20, W0
	034 Move [X19+24], W0
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move X0, [X8+96]
	043 Compare X0, 0
	044 JumpIfEqual {95}
	045 Move X8, 0x60F000
	046 Move X8, [X8+2520]
	047 Move W1, W20
	048 Move X2, [X8]
	049 Call HashSet`1<Int32>.Add, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {80}
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X0, [X8+88]
	062 Compare X0, 0
	063 JumpIfEqual {95}
	064 Move X9, 0x672000
	065 Move X9, [X9+3096]
	066 Move W10, [X0+28]
	067 Move X8, [X0+16]
	068 Move X9, [X9]
	069 Add W10, W10, 1
	070 Move [X0+28], W10
	071 Compare X8, 0
	072 JumpIfEqual {95}
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W11, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W9, W10, 1
	077 Add X8, X8, X10
	078 Move [X0+24], W9
	079 Move [X8+32], X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Return 
	085 Move X8, [X9+32]
	086 Move X1, X19
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X8, [X8+192]
	090 Move X2, [X8+112]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call List`1<Object>.AddWithResize, X0, X1
	094 Return 
	095 Call 0x1C17F20

Method: System.Void UpdateAtlasTexturesForFontAssetsInQueue()

Disassembly:
	0x03AE762C LDR X2, [X8 + 0x70]
	0x03AE7630 BL 0x30C1698
	0x03AE7634 LDR X0, [X19 + 0x1D8]
	0x03AE7638 CBZ X0, 0x3AE77F8
	0x03AE763C LDR W10, [X0 + 0x1C]
	0x03AE7640 LDR X8, [X0 + 0x10]
	0x03AE7644 LDR X9, [X23]
	0x03AE7648 ADD W10, W10, 0x1
	0x03AE764C STR W10, [X0 + 0x1C]
	0x03AE7650 CBZ X8, 0x3AE77F8
	0x03AE7654 LDRSW X10, [X0 + 0x18]
	0x03AE7658 LDR W11, [X8 + 0x18]
	0x03AE765C CMP W10, W11
	0x03AE7660 B.CS 0x3AE7678
	0x03AE7664 ADD W9, W10, 0x1
	0x03AE7668 ADD X8, X8, X10, 0x2, LSL
	0x03AE766C STR W9, [X0 + 0x18]
	0x03AE7670 STR W21, [X8 + 0x20]
	0x03AE7674 B 0x3AE768C
	0x03AE7678 LDR X8, [X9 + 0x20]
	0x03AE767C MOV W1, W21
	0x03AE7680 LDR X8, [X8 + 0xC0]
	0x03AE7684 LDR X2, [X8 + 0x70]
	0x03AE7688 BL 0x30C1698
	0x03AE768C LDR X8, [X31 + 0x18]
	0x03AE7690 ADD X29, X29, 0x1
	0x03AE7694 CBNZ X8, 0x3AE752C
	0x03AE7698 B 0x3AE77F8
	0x03AE769C LDR X8, [X19 + 0x1E8]
	0x03AE76A0 CBZ X8, 0x3AE77F8
	0x03AE76A4 LDR W9, [X8 + 0x1C]
	0x03AE76A8 ADRP X20, 0x671000
	0x03AE76AC ADD W9, W9, 0x1
	0x03AE76B0 STP W31, W9, [X8 + 0x18]
	0x03AE76B4 LDR X0, [X19 + 0x1F8]
	0x03AE76B8 LDR X20, [X20 + 0xC20]
	0x03AE76BC CBZ X0, 0x3AE77F8
	0x03AE76C0 MOV W21, W31
	0x03AE76C4 LDR W8, [X0 + 0x18]
	0x03AE76C8 CMP W21, W8
	0x03AE76CC B.GE 0x3AE77FC
	0x03AE76D0 LDR X2, [X24]
	0x03AE76D4 MOV W1, W21
	0x03AE76D8 BL 0x301BCCC
	0x03AE76DC CBZ X0, 0x3AE77F8
	0x03AE76E0 MOV X22, X0
	0x03AE76E4 LDR X0, [X19 + 0xB8]
	0x03AE76E8 CBZ X0, 0x3AE77F8
	0x03AE76EC LDR W1, [X22 + 0x28]
	0x03AE76F0 LDR X3, [X25]
	0x03AE76F4 ADD X2, X31, 0x10
	0x03AE76F8 BL 0x2B10A7C
	0x03AE76FC TBZ X0, 0x0, 0x3AE774C
	0x03AE7700 LDR X8, [X31 + 0x10]
	0x03AE7704 STP X19, X8, [X22 + 0x18]
	0x03AE7708 LDR X0, [X19 + 0xC0]
	0x03AE770C CBZ X0, 0x3AE77F8
	0x03AE7710 LDR W10, [X0 + 0x1C]
	0x03AE7714 LDR X8, [X0 + 0x10]
	0x03AE7718 LDR X9, [X20]
	0x03AE771C ADD W10, W10, 0x1
	0x03AE7720 STR W10, [X0 + 0x1C]
	0x03AE7724 CBZ X8, 0x3AE77F8
	0x03AE7728 LDRSW X10, [X0 + 0x18]
	0x03AE772C LDR W11, [X8 + 0x18]
	0x03AE7730 CMP W10, W11
	0x03AE7734 B.CS 0x3AE7794
	0x03AE7738 ADD W9, W10, 0x1
	0x03AE773C ADD X8, X8, X10, 0x3, LSL
	0x03AE7740 STR W9, [X0 + 0x18]
	0x03AE7744 STR X22, [X8 + 0x20]
	0x03AE7748 B 0x3AE77A8
	0x03AE774C LDR X0, [X19 + 0x1E8]
	0x03AE7750 CBZ X0, 0x3AE77F8
	0x03AE7754 LDR W10, [X0 + 0x1C]
	0x03AE7758 LDR W1, [X22 + 0x28]
	0x03AE775C LDR X8, [X0 + 0x10]
	0x03AE7760 LDR X9, [X23]
	0x03AE7764 ADD W10, W10, 0x1
	0x03AE7768 STR W10, [X0 + 0x1C]
	0x03AE776C CBZ X8, 0x3AE77F8
	0x03AE7770 LDRSW X10, [X0 + 0x18]
	0x03AE7774 LDR W11, [X8 + 0x18]
	0x03AE7778 CMP W10, W11
	0x03AE777C B.CS 0x3AE77DC
	0x03AE7780 ADD W9, W10, 0x1
	0x03AE7784 ADD X8, X8, X10, 0x2, LSL
	0x03AE7788 STR W9, [X0 + 0x18]
	0x03AE778C STR W1, [X8 + 0x20]
	0x03AE7790 B 0x3AE77EC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x8FC000
	008 Move X20, 0x672000
	009 Move W8, [X19+1446]
	010 Move X20, [X20+1400]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x614000
	016 Move X0, [X0+1656]
	017 Call 0x1C17CF4
	018 Move X0, 0x614000
	019 Move X0, [X0+2128]
	020 Call 0x1C17CF4
	021 Move X0, 0x672000
	022 Move X0, [X0+3648]
	023 Call 0x1C17CF4
	024 Move X0, 0x672000
	025 Move X0, [X0+3144]
	026 Call 0x1C17CF4
	027 Move X0, 0x672000
	028 Move X0, [X0+1400]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+1446], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8+96]
	040 Compare X8, 0
	041 JumpIfEqual {108}
	042 Move W21, [X8+32]
	043 Subtract W22, W21, 1
	044 Move X23, 0x672000
	045 Move X23, [X23+3144]
	046 Move W19, W31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X0, [X8+88]
	054 Compare X0, 0
	055 JumpIfEqual {108}
	056 Move X2, [X23]
	057 Move W1, W19
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {108}
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X20]
	063 Add W19, W19, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X9, [X8+88]
	073 Compare X9, 0
	074 JumpIfEqual {108}
	075 Move W2, [X9+24]
	076 Move W10, [X9+28]
	077 Add W10, W10, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X9+24], W31
	080 Move [X9+28], W10
	081 Move X0, [X9+16]
	082 Move W1, W31
	083 Move X3, X31
	084 Call Array.Clear, X0, X1, X2
	085 Move X8, [X20]
	086 Move X8, [X8+184]
	087 Move X0, [X8+96]
	088 Compare X0, 0
	089 JumpIfEqual {108}
	090 Move X8, 0x614000
	091 Move X8, [X8+1656]
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X1, [X8]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Call HashSet`1<Int32>.Clear, X0
	100 Return 
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return 
	108 Call 0x1C17F20

Method: System.Boolean TryAddCharacters(System.UInt32[] unicodes, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03AE7798 MOV X1, X22
	0x03AE779C LDR X8, [X8 + 0xC0]
	0x03AE77A0 LDR X2, [X8 + 0x70]
	0x03AE77A4 BL 0x301BF90
	0x03AE77A8 LDR X0, [X19 + 0xC8]
	0x03AE77AC CBZ X0, 0x3AE77F8
	0x03AE77B0 LDR W1, [X22 + 0x14]
	0x03AE77B4 LDR X3, [X27]

ISIL:
	001 Move [X31-16], X30
	002 And W3, W2, 1
	003 Add X2, X31, 8
	004 Move [X31+8], X31
	005 Call TMP_FontAsset.TryAddCharacters, X0, X1, X2, X3
	006 And W0, W0, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean TryAddCharacters(System.UInt32[] unicodes, out System.UInt32[] missingUnicodes, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03AE77B8 MOV X2, X22
	0x03AE77BC BL 0x2B0F05C
	0x03AE77C0 LDR X0, [X19 + 0x1F8]
	0x03AE77C4 CBZ X0, 0x3AE77F8
	0x03AE77C8 LDR X2, [X28]
	0x03AE77CC MOV W1, W21
	0x03AE77D0 BL 0x301DA48
	0x03AE77D4 SUB W21, W21, 0x1
	0x03AE77D8 B 0x3AE77EC
	0x03AE77DC LDR X8, [X9 + 0x20]
	0x03AE77E0 LDR X8, [X8 + 0xC0]
	0x03AE77E4 LDR X2, [X8 + 0x70]
	0x03AE77E8 BL 0x30C1698
	0x03AE77EC LDR X0, [X19 + 0x1F8]
	0x03AE77F0 ADD W21, W21, 0x1
	0x03AE77F4 CBNZ X0, 0x3AE76C4
	0x03AE77F8 BL 0x1C16F20
	0x03AE77FC LDR W8, [X31 + 0xC]
	0x03AE7800 LDP X20, X19, [X31 + 0x70]
	0x03AE7804 LDP X22, X21, [X31 + 0x60]
	0x03AE7808 LDP X24, X23, [X31 + 0x50]
	0x03AE780C LDP X26, X25, [X31 + 0x40]
	0x03AE7810 LDP X28, X27, [X31 + 0x30]
	0x03AE7814 LDP X29, X30, [X31 + 0x20]
	0x03AE7818 AND W0, W8, 0x1
	0x03AE781C ADD X31, X31, 0x80
	0x03AE7820 RET
	0x03AE7824 BL 0x1C16F28
	0x03AE7828 STR X30, [X31 - 0x10]!
	0x03AE782C AND W3, W2, 0x1
	0x03AE7830 ADD X2, X31, 0x8
	0x03AE7834 STR X31, [X31 + 0x8]
	0x03AE7838 BL 0x3AE7848
	0x03AE783C AND W0, W0, 0x1
	0x03AE7840 LDR X30, [X31], #0x10
	0x03AE7844 RET
	0x03AE7848 SUB X31, X31, 0x80
	0x03AE784C STP X29, X30, [X31 + 0x20]
	0x03AE7850 STP X28, X27, [X31 + 0x30]
	0x03AE7854 STP X26, X25, [X31 + 0x40]
	0x03AE7858 STP X24, X23, [X31 + 0x50]
	0x03AE785C STP X22, X21, [X31 + 0x60]
	0x03AE7860 STP X20, X19, [X31 + 0x70]
	0x03AE7864 ADRP X21, 0x8FB000
	0x03AE7868 LDRB W8, [X21 + 0x5A8]
	0x03AE786C MOV W25, W3
	0x03AE7870 MOV X19, X2
	0x03AE7874 MOV X22, X1
	0x03AE7878 MOV X20, X0
	0x03AE787C TBNZ X8, 0x0, 0x3AE79A8
	0x03AE7880 ADRP X0, 0x60C000
	0x03AE7884 LDR X0, [X0 + 0xA28]
	0x03AE7888 BL 0x1C16CF4
	0x03AE788C ADRP X0, 0x671000
	0x03AE7890 LDR X0, [X0 + 0xCD0]
	0x03AE7894 BL 0x1C16CF4
	0x03AE7898 ADRP X0, 0x671000
	0x03AE789C LDR X0, [X0 + 0xC98]
	0x03AE78A0 BL 0x1C16CF4
	0x03AE78A4 ADRP X0, 0x671000
	0x03AE78A8 LDR X0, [X0 + 0xC88]
	0x03AE78AC BL 0x1C16CF4
	0x03AE78B0 ADRP X0, 0x671000
	0x03AE78B4 LDR X0, [X0 + 0xCA8]
	0x03AE78B8 BL 0x1C16CF4
	0x03AE78BC ADRP X0, 0x671000
	0x03AE78C0 LDR X0, [X0 + 0xE48]
	0x03AE78C4 BL 0x1C16CF4
	0x03AE78C8 ADRP X0, 0x671000
	0x03AE78CC LDR X0, [X0 + 0xC90]
	0x03AE78D0 BL 0x1C16CF4
	0x03AE78D4 ADRP X0, 0x671000
	0x03AE78D8 LDR X0, [X0 + 0xBC0]
	0x03AE78DC BL 0x1C16CF4
	0x03AE78E0 ADRP X0, 0x667000
	0x03AE78E4 LDR X0, [X0 + 0x828]
	0x03AE78E8 BL 0x1C16CF4
	0x03AE78EC ADRP X0, 0x671000
	0x03AE78F0 LDR X0, [X0 + 0xE58]
	0x03AE78F4 BL 0x1C16CF4
	0x03AE78F8 ADRP X0, 0x671000
	0x03AE78FC LDR X0, [X0 + 0xC10]
	0x03AE7900 BL 0x1C16CF4
	0x03AE7904 ADRP X0, 0x612000
	0x03AE7908 LDR X0, [X0 + 0x1D0]
	0x03AE790C BL 0x1C16CF4
	0x03AE7910 ADRP X0, 0x671000
	0x03AE7914 LDR X0, [X0 + 0xC20]
	0x03AE7918 BL 0x1C16CF4
	0x03AE791C ADRP X0, 0x671000
	0x03AE7920 LDR X0, [X0 + 0xC28]
	0x03AE7924 BL 0x1C16CF4
	0x03AE7928 ADRP X0, 0x663000
	0x03AE792C LDR X0, [X0 + 0xB50]
	0x03AE7930 BL 0x1C16CF4
	0x03AE7934 ADRP X0, 0x671000
	0x03AE7938 LDR X0, [X0 + 0xE60]
	0x03AE793C BL 0x1C16CF4
	0x03AE7940 ADRP X0, 0x671000
	0x03AE7944 LDR X0, [X0 + 0xCF0]
	0x03AE7948 BL 0x1C16CF4
	0x03AE794C ADRP X0, 0x671000
	0x03AE7950 LDR X0, [X0 + 0x858]
	0x03AE7954 BL 0x1C16CF4
	0x03AE7958 ADRP X0, 0x671000
	0x03AE795C LDR X0, [X0 + 0xCF8]
	0x03AE7960 BL 0x1C16CF4
	0x03AE7964 ADRP X0, 0x60E000
	0x03AE7968 LDR X0, [X0 + 0x278]
	0x03AE796C BL 0x1C16CF4
	0x03AE7970 ADRP X0, 0x671000
	0x03AE7974 LDR X0, [X0 + 0x5B0]
	0x03AE7978 BL 0x1C16CF4
	0x03AE797C ADRP X0, 0x671000
	0x03AE7980 LDR X0, [X0 + 0xE70]
	0x03AE7984 BL 0x1C16CF4
	0x03AE7988 ADRP X0, 0x671000
	0x03AE798C LDR X0, [X0 + 0xE80]
	0x03AE7990 BL 0x1C16CF4
	0x03AE7994 ADRP X0, 0x671000
	0x03AE7998 LDR X0, [X0 + 0xE78]
	0x03AE799C BL 0x1C16CF4
	0x03AE79A0 MOVZ W8, 0x1
	0x03AE79A4 STRB W8, [X21 + 0x5A8]
	0x03AE79A8 MOV X0, X22
	0x03AE79AC MOV X1, X31
	0x03AE79B0 STP X31, X31, [X31 + 0x10]
	0x03AE79B4 BL 0x32277A8
	0x03AE79B8 LDR W21, [X20 + 0x48]
	0x03AE79BC TBZ X0, 0x0, 0x3AE79EC
	0x03AE79C0 MOV X0, X20
	0x03AE79C4 MOV X1, X31
	0x03AE79C8 BL 0x3C389D4
	0x03AE79CC ADRP X8, 0x671000
	0x03AE79D0 LDR X8, [X8 + 0xE78]
	0x03AE79D4 MOV X1, X0
	0x03AE79D8 LDR X8, [X8]
	0x03AE79DC CBZ W21, 0x3AE7E20
	0x03AE79E0 ADRP X9, 0x671000
	0x03AE79E4 LDR X9, [X9 + 0xE80]
	0x03AE79E8 B 0x3AE7E28
	0x03AE79EC CBZ W21, 0x3AE7E04
	0x03AE79F0 LDR X23, [X20 + 0x40]
	0x03AE79F4 ADD X0, X20, 0x50
	0x03AE79F8 MOV X1, X31
	0x03AE79FC BL 0x3C9BF88
	0x03AE7A00 ADRP X27, 0x671000
	0x03AE7A04 LDR X27, [X27 + 0xBC0]
	0x03AE7A08 MOV W24, W0
	0x03AE7A0C LDR X8, [X27]
	0x03AE7A10 LDR W9, [X8 + 0xE0]
	0x03AE7A14 CBNZ W9, 0x3AE7A20
	0x03AE7A18 MOV X0, X8
	0x03AE7A1C BL 0x1C16DFC
	0x03AE7A20 MOV X0, X23
	0x03AE7A24 MOV W1, W24
	0x03AE7A28 MOV X2, X31
	0x03AE7A2C BL 0x3C9C794
	0x03AE7A30 CBNZ W0, 0x3AE7E68
	0x03AE7A34 LDR X8, [X20 + 0xC8]
	0x03AE7A38 CBZ X8, 0x3AE7A44
	0x03AE7A3C LDR X8, [X20 + 0xB8]
	0x03AE7A40 CBNZ X8, 0x3AE7A4C
	0x03AE7A44 MOV X0, X20
	0x03AE7A48 BL 0x3AE1A88
	0x03AE7A4C LDR X8, [X20 + 0x1E8]
	0x03AE7A50 CBZ X8, 0x3AE83EC
	0x03AE7A54 LDR W9, [X8 + 0x1C]
	0x03AE7A58 ADD W9, W9, 0x1
	0x03AE7A5C STP W31, W9, [X8 + 0x18]
	0x03AE7A60 LDR X0, [X20 + 0x1F0]
	0x03AE7A64 CBZ X0, 0x3AE83EC
	0x03AE7A68 ADRP X21, 0x671000
	0x03AE7A6C LDR X21, [X21 + 0xE58]
	0x03AE7A70 LDR X1, [X21]
	0x03AE7A74 BL 0x2DCD1E0
	0x03AE7A78 LDR X8, [X20 + 0x1F8]
	0x03AE7A7C CBZ X8, 0x3AE83EC
	0x03AE7A80 LDP W2, W9, [X8 + 0x18]
	0x03AE7A84 ADD W9, W9, 0x1
	0x03AE7A88 CMP W2, 0x1
	0x03AE7A8C STP W31, W9, [X8 + 0x18]
	0x03AE7A90 B.LT 0x3AE7AA4
	0x03AE7A94 LDR X0, [X8 + 0x10]
	0x03AE7A98 MOV W1, W31
	0x03AE7A9C MOV X3, X31
	0x03AE7AA0 BL 0x339FA34
	0x03AE7AA4 LDR X0, [X20 + 0x200]
	0x03AE7AA8 CBZ X0, 0x3AE83EC
	0x03AE7AAC LDR X1, [X21]
	0x03AE7AB0 BL 0x2DCD1E0
	0x03AE7AB4 LDR X8, [X20 + 0x208]
	0x03AE7AB8 CBZ X8, 0x3AE83EC
	0x03AE7ABC LDR W9, [X8 + 0x1C]
	0x03AE7AC0 ADD W9, W9, 0x1
	0x03AE7AC4 STP W31, W9, [X8 + 0x18]
	0x03AE7AC8 CBZ X22, 0x3AE83EC
	0x03AE7ACC LDR W29, [X22 + 0x10]
	0x03AE7AD0 STR W25, [X31 + 0x8]
	0x03AE7AD4 CMP W29, 0x1
	0x03AE7AD8 B.LT 0x3AE7E94
	0x03AE7ADC STR W31, [X31 + 0xC]
	0x03AE7AE0 ADRP X28, 0x671000
	0x03AE7AE4 ADRP X21, 0x667000
	0x03AE7AE8 LDR X28, [X28 + 0xC88]
	0x03AE7AEC LDR X21, [X21 + 0x828]
	0x03AE7AF0 MOV W23, W31
	0x03AE7AF4 MOV X0, X22
	0x03AE7AF8 MOV W1, W23
	0x03AE7AFC MOV X2, X31
	0x03AE7B00 BL 0x3222A1C
	0x03AE7B04 LDR X8, [X20 + 0xC8]
	0x03AE7B08 CBZ X8, 0x3AE83EC
	0x03AE7B0C LDR X2, [X28]
	0x03AE7B10 AND W24, W0, 0xFFFF
	0x03AE7B14 MOV X0, X8
	0x03AE7B18 MOV W1, W24
	0x03AE7B1C BL 0x2B0F250
	0x03AE7B20 TBNZ X0, 0x0, 0x3AE7DF4
	0x03AE7B24 LDR X0, [X27]
	0x03AE7B28 LDR W8, [X0 + 0xE0]
	0x03AE7B2C CBNZ W8, 0x3AE7B34
	0x03AE7B30 BL 0x1C16DFC
	0x03AE7B34 MOV W0, W24
	0x03AE7B38 MOV X1, X31
	0x03AE7B3C BL 0x3C9CBD8
	0x03AE7B40 MOV W26, W0
	0x03AE7B44 CBNZ W0, 0x3AE7BA0
	0x03AE7B48 MOVZ W8, 0x2011
	0x03AE7B4C CMP W24, W8
	0x03AE7B50 B.EQ 0x3AE7B7C
	0x03AE7B54 CMP W24, 0xAD
	0x03AE7B58 B.EQ 0x3AE7B7C
	0x03AE7B5C CMP W24, 0xA0
	0x03AE7B60 B.NE 0x3AE7CFC
	0x03AE7B64 LDR X0, [X27]
	0x03AE7B68 LDR W8, [X0 + 0xE0]
	0x03AE7B6C CBNZ W8, 0x3AE7B74
	0x03AE7B70 BL 0x1C16DFC
	0x03AE7B74 MOVZ W0, 0x20
	0x03AE7B78 B 0x3AE7B90
	0x03AE7B7C LDR X0, [X27]
	0x03AE7B80 LDR W8, [X0 + 0xE0]
	0x03AE7B84 CBNZ W8, 0x3AE7B8C
	0x03AE7B88 BL 0x1C16DFC
	0x03AE7B8C MOVZ W0, 0x2D
	0x03AE7B90 MOV X1, X31
	0x03AE7B94 BL 0x3C9CBD8
	0x03AE7B98 MOV W26, W0
	0x03AE7B9C CBZ W0, 0x3AE7CFC
	0x03AE7BA0 ADRP X8, 0x671000
	0x03AE7BA4 LDR X8, [X8 + 0x5B0]
	0x03AE7BA8 LDR X0, [X8]
	0x03AE7BAC BL 0x1C16F10
	0x03AE7BB0 MOV X1, X31
	0x03AE7BB4 MOV X25, X0
	0x03AE7BB8 BL 0x3B1889C
	0x03AE7BBC MOVZ W8, 0x1
	0x03AE7BC0 STRB W8, [X25 + 0x10]
	0x03AE7BC4 MOVZ W8, 0x3F800000
	0x03AE7BC8 STR W24, [X25 + 0x14]
	0x03AE7BCC STP X31, X31, [X25 + 0x18]
	0x03AE7BD0 STP W26, W8, [X25 + 0x28]
	0x03AE7BD4 LDR X0, [X20 + 0xB8]
	0x03AE7BD8 CBZ X0, 0x3AE83EC
	0x03AE7BDC ADRP X8, 0x671000
	0x03AE7BE0 LDR X8, [X8 + 0xCA8]
	0x03AE7BE4 MOV W1, W26
	0x03AE7BE8 LDR X2, [X8]
	0x03AE7BEC BL 0x2B0F250
	0x03AE7BF0 TBZ X0, 0x0, 0x3AE7C60
	0x03AE7BF4 LDR X0, [X20 + 0xB8]
	0x03AE7BF8 CBZ X0, 0x3AE83EC
	0x03AE7BFC ADRP X8, 0x671000
	0x03AE7C00 LDR X8, [X8 + 0xC90]
	0x03AE7C04 MOV W1, W26
	0x03AE7C08 LDR X2, [X8]
	0x03AE7C0C BL 0x2B0EFBC
	0x03AE7C10 STP X20, X0, [X25 + 0x18]
	0x03AE7C14 LDR X0, [X20 + 0xC0]
	0x03AE7C18 CBZ X0, 0x3AE83EC
	0x03AE7C1C ADRP X9, 0x671000
	0x03AE7C20 LDR W10, [X0 + 0x1C]
	0x03AE7C24 LDR X8, [X0 + 0x10]
	0x03AE7C28 LDR X9, [X9 + 0xC20]
	0x03AE7C2C ADD W10, W10, 0x1
	0x03AE7C30 LDR X9, [X9]
	0x03AE7C34 STR W10, [X0 + 0x1C]
	0x03AE7C38 CBZ X8, 0x3AE83EC
	0x03AE7C3C LDRSW X10, [X0 + 0x18]
	0x03AE7C40 LDR W11, [X8 + 0x18]
	0x03AE7C44 CMP W10, W11
	0x03AE7C48 B.CS 0x3AE7CC4
	0x03AE7C4C ADD W9, W10, 0x1
	0x03AE7C50 ADD X8, X8, X10, 0x3, LSL
	0x03AE7C54 STR W9, [X0 + 0x18]
	0x03AE7C58 STR X25, [X8 + 0x20]
	0x03AE7C5C B 0x3AE7CD8
	0x03AE7C60 LDR X0, [X20 + 0x1F0]
	0x03AE7C64 CBZ X0, 0x3AE83EC
	0x03AE7C68 LDR X2, [X21]
	0x03AE7C6C MOV W1, W26
	0x03AE7C70 BL 0x2DCDCE0
	0x03AE7C74 TBZ X0, 0x0, 0x3AE7D5C
	0x03AE7C78 LDR X0, [X20 + 0x1E8]
	0x03AE7C7C CBZ X0, 0x3AE83EC
	0x03AE7C80 ADRP X9, 0x612000
	0x03AE7C84 LDR W10, [X0 + 0x1C]
	0x03AE7C88 LDR X8, [X0 + 0x10]
	0x03AE7C8C LDR X9, [X9 + 0x1D0]
	0x03AE7C90 ADD W10, W10, 0x1
	0x03AE7C94 LDR X9, [X9]
	0x03AE7C98 STR W10, [X0 + 0x1C]
	0x03AE7C9C CBZ X8, 0x3AE83EC
	0x03AE7CA0 LDRSW X10, [X0 + 0x18]
	0x03AE7CA4 LDR W11, [X8 + 0x18]
	0x03AE7CA8 CMP W10, W11
	0x03AE7CAC B.CS 0x3AE7D48
	0x03AE7CB0 ADD W9, W10, 0x1
	0x03AE7CB4 ADD X8, X8, X10, 0x2, LSL
	0x03AE7CB8 STR W9, [X0 + 0x18]
	0x03AE7CBC STR W26, [X8 + 0x20]
	0x03AE7CC0 B 0x3AE7D5C
	0x03AE7CC4 LDR X8, [X9 + 0x20]
	0x03AE7CC8 MOV X1, X25
	0x03AE7CCC LDR X8, [X8 + 0xC0]
	0x03AE7CD0 LDR X2, [X8 + 0x70]
	0x03AE7CD4 BL 0x301BF90
	0x03AE7CD8 LDR X0, [X20 + 0xC8]
	0x03AE7CDC CBZ X0, 0x3AE83EC
	0x03AE7CE0 ADRP X8, 0x671000
	0x03AE7CE4 LDR X8, [X8 + 0xCD0]
	0x03AE7CE8 MOV W1, W24
	0x03AE7CEC MOV X2, X25
	0x03AE7CF0 LDR X3, [X8]
	0x03AE7CF4 BL 0x2B0F05C
	0x03AE7CF8 B 0x3AE7DF4
	0x03AE7CFC LDR X0, [X20 + 0x208]
	0x03AE7D00 CBZ X0, 0x3AE83EC
	0x03AE7D04 ADRP X9, 0x612000
	0x03AE7D08 LDR W10, [X0 + 0x1C]
	0x03AE7D0C LDR X8, [X0 + 0x10]
	0x03AE7D10 LDR X9, [X9 + 0x1D0]
	0x03AE7D14 ADD W10, W10, 0x1
	0x03AE7D18 LDR X9, [X9]
	0x03AE7D1C STR W10, [X0 + 0x1C]
	0x03AE7D20 CBZ X8, 0x3AE83EC
	0x03AE7D24 LDRSW X10, [X0 + 0x18]
	0x03AE7D28 LDR W11, [X8 + 0x18]
	0x03AE7D2C CMP W10, W11
	0x03AE7D30 B.CS 0x3AE7DD8
	0x03AE7D34 ADD W9, W10, 0x1
	0x03AE7D38 ADD X8, X8, X10, 0x2, LSL
	0x03AE7D3C STR W9, [X0 + 0x18]
	0x03AE7D40 STR W24, [X8 + 0x20]
	0x03AE7D44 B 0x3AE7DEC
	0x03AE7D48 LDR X8, [X9 + 0x20]
	0x03AE7D4C MOV W1, W26
	0x03AE7D50 LDR X8, [X8 + 0xC0]
	0x03AE7D54 LDR X2, [X8 + 0x70]
	0x03AE7D58 BL 0x30C1698
	0x03AE7D5C LDR X0, [X20 + 0x200]
	0x03AE7D60 CBZ X0, 0x3AE83EC
	0x03AE7D64 LDR X2, [X21]
	0x03AE7D68 MOV W1, W24
	0x03AE7D6C BL 0x2DCDCE0
	0x03AE7D70 TBZ X0, 0x0, 0x3AE7DF4
	0x03AE7D74 LDR X0, [X20 + 0x1F8]
	0x03AE7D78 CBZ X0, 0x3AE83EC
	0x03AE7D7C ADRP X9, 0x671000
	0x03AE7D80 LDR W10, [X0 + 0x1C]
	0x03AE7D84 LDR X8, [X0 + 0x10]
	0x03AE7D88 LDR X9, [X9 + 0xC20]
	0x03AE7D8C ADD W10, W10, 0x1
	0x03AE7D90 LDR X9, [X9]
	0x03AE7D94 STR W10, [X0 + 0x1C]
	0x03AE7D98 CBZ X8, 0x3AE83EC
	0x03AE7D9C LDRSW X10, [X0 + 0x18]
	0x03AE7DA0 LDR W11, [X8 + 0x18]
	0x03AE7DA4 CMP W10, W11
	0x03AE7DA8 B.CS 0x3AE7DC0
	0x03AE7DAC ADD W9, W10, 0x1
	0x03AE7DB0 ADD X8, X8, X10, 0x3, LSL
	0x03AE7DB4 STR W9, [X0 + 0x18]
	0x03AE7DB8 STR X25, [X8 + 0x20]
	0x03AE7DBC B 0x3AE7DF4
	0x03AE7DC0 LDR X8, [X9 + 0x20]
	0x03AE7DC4 MOV X1, X25
	0x03AE7DC8 LDR X8, [X8 + 0xC0]
	0x03AE7DCC LDR X2, [X8 + 0x70]
	0x03AE7DD0 BL 0x301BF90
	0x03AE7DD4 B 0x3AE7DF4
	0x03AE7DD8 LDR X8, [X9 + 0x20]
	0x03AE7DDC MOV W1, W24
	0x03AE7DE0 LDR X8, [X8 + 0xC0]
	0x03AE7DE4 LDR X2, [X8 + 0x70]
	0x03AE7DE8 BL 0x30C1698
	0x03AE7DEC MOVZ W8, 0x1
	0x03AE7DF0 STR W8, [X31 + 0xC]
	0x03AE7DF4 ADD W23, W23, 0x1
	0x03AE7DF8 CMP W29, W23
	0x03AE7DFC B.NE 0x3AE7AF4
	0x03AE7E00 B 0x3AE7E98
	0x03AE7E04 MOV X0, X20
	0x03AE7E08 MOV X1, X31
	0x03AE7E0C BL 0x3C389D4
	0x03AE7E10 ADRP X8, 0x671000
	0x03AE7E14 LDR X8, [X8 + 0xE78]
	0x03AE7E18 MOV X1, X0
	0x03AE7E1C LDR X8, [X8]
	0x03AE7E20 ADRP X9, 0x671000
	0x03AE7E24 LDR X9, [X9 + 0xE70]
	0x03AE7E28 LDR X2, [X9]
	0x03AE7E2C MOV X0, X8
	0x03AE7E30 MOV X3, X31
	0x03AE7E34 BL 0x32274B8
	0x03AE7E38 ADRP X8, 0x60C000
	0x03AE7E3C LDR X8, [X8 + 0xA28]
	0x03AE7E40 MOV X21, X0
	0x03AE7E44 LDR X8, [X8]
	0x03AE7E48 LDR W9, [X8 + 0xE0]
	0x03AE7E4C CBNZ W9, 0x3AE7E58
	0x03AE7E50 MOV X0, X8
	0x03AE7E54 BL 0x1C16DFC
	0x03AE7E58 MOV X0, X21
	0x03AE7E5C MOV X1, X20
	0x03AE7E60 MOV X2, X31
	0x03AE7E64 BL 0x3C06B0C
	0x03AE7E68 MOV W8, W31
	0x03AE7E6C STR X22, [X19]
	0x03AE7E70 LDP X20, X19, [X31 + 0x70]
	0x03AE7E74 LDP X22, X21, [X31 + 0x60]
	0x03AE7E78 LDP X24, X23, [X31 + 0x50]
	0x03AE7E7C LDP X26, X25, [X31 + 0x40]
	0x03AE7E80 LDP X28, X27, [X31 + 0x30]
	0x03AE7E84 LDP X29, X30, [X31 + 0x20]
	0x03AE7E88 AND W0, W8, 0x1
	0x03AE7E8C ADD X31, X31, 0x80
	0x03AE7E90 RET
	0x03AE7E94 STR W31, [X31 + 0xC]
	0x03AE7E98 LDR X8, [X20 + 0x1E8]
	0x03AE7E9C CBZ X8, 0x3AE83EC
	0x03AE7EA0 LDR W8, [X8 + 0x18]
	0x03AE7EA4 CBZ W8, 0x3AE7E6C
	0x03AE7EA8 LDR X8, [X20 + 0xD8]
	0x03AE7EAC CBZ X8, 0x3AE83EC
	0x03AE7EB0 LDRSW X9, [X20 + 0xE0]
	0x03AE7EB4 LDR W10, [X8 + 0x18]
	0x03AE7EB8 CMP W9, W10
	0x03AE7EBC B.CS 0x3AE8420
	0x03AE7EC0 ADD X8, X8, X9, 0x3, LSL
	0x03AE7EC4 LDR X0, [X8 + 0x20]
	0x03AE7EC8 CBZ X0, 0x3AE83EC
	0x03AE7ECC LDR X8, [X0]
	0x03AE7ED0 LDP X9, X1, [X8 + 0x188]
	0x03AE7ED4 BLR X9
	0x03AE7ED8 CBZ W0, 0x3AE7F10
	0x03AE7EDC LDR X8, [X20 + 0xD8]
	0x03AE7EE0 CBZ X8, 0x3AE83EC
	0x03AE7EE4 LDRSW X9, [X20 + 0xE0]
	0x03AE7EE8 LDR W10, [X8 + 0x18]
	0x03AE7EEC CMP W9, W10
	0x03AE7EF0 B.CS 0x3AE8420
	0x03AE7EF4 ADD X8, X8, X9, 0x3, LSL
	0x03AE7EF8 LDR X0, [X8 + 0x20]
	0x03AE7EFC CBZ X0, 0x3AE83EC
	0x03AE7F00 LDR X8, [X0]
	0x03AE7F04 LDP X9, X1, [X8 + 0x1A8]
	0x03AE7F08 BLR X9
	0x03AE7F0C CBNZ W0, 0x3AE7F80
	0x03AE7F10 LDR X8, [X20 + 0xD8]
	0x03AE7F14 CBZ X8, 0x3AE83EC
	0x03AE7F18 LDRSW X9, [X20 + 0xE0]
	0x03AE7F1C LDR W10, [X8 + 0x18]
	0x03AE7F20 CMP W9, W10
	0x03AE7F24 B.CS 0x3AE8420
	0x03AE7F28 ADD X8, X8, X9, 0x3, LSL
	0x03AE7F2C LDR X0, [X8 + 0x20]
	0x03AE7F30 CBZ X0, 0x3AE83EC
	0x03AE7F34 LDR W2, [X20 + 0x10C]
	0x03AE7F38 LDR W1, [X20 + 0x108]
	0x03AE7F3C MOV X3, X31
	0x03AE7F40 BL 0x3C1C644
	0x03AE7F44 LDR X8, [X20 + 0xD8]
	0x03AE7F48 CBZ X8, 0x3AE83EC
	0x03AE7F4C LDRSW X9, [X20 + 0xE0]
	0x03AE7F50 LDR W10, [X8 + 0x18]
	0x03AE7F54 CMP W9, W10
	0x03AE7F58 B.CS 0x3AE8420
	0x03AE7F5C LDR X0, [X27]
	0x03AE7F60 ADD X8, X8, X9, 0x3, LSL
	0x03AE7F64 LDR X22, [X8 + 0x20]
	0x03AE7F68 LDR W9, [X0 + 0xE0]
	0x03AE7F6C CBNZ W9, 0x3AE7F74
	0x03AE7F70 BL 0x1C16DFC
	0x03AE7F74 MOV X0, X22
	0x03AE7F78 MOV X1, X31
	0x03AE7F7C BL 0x3C9E1E0
	0x03AE7F80 LDR X8, [X20 + 0xD8]
	0x03AE7F84 CBZ X8, 0x3AE83EC
	0x03AE7F88 LDRSW X9, [X20 + 0xE0]
	0x03AE7F8C LDR W10, [X8 + 0x18]
	0x03AE7F90 CMP W9, W10
	0x03AE7F94 B.CS 0x3AE8420
	0x03AE7F98 LDR X0, [X27]
	0x03AE7F9C ADD X8, X8, X9, 0x3, LSL
	0x03AE7FA0 LDR X22, [X20 + 0x1E8]
	0x03AE7FA4 LDR W23, [X20 + 0x110]
	0x03AE7FA8 LDP X24, X26, [X20 + 0xE8]
	0x03AE7FAC LDR W25, [X20 + 0x114]
	0x03AE7FB0 LDR W9, [X0 + 0xE0]
	0x03AE7FB4 LDR X27, [X8 + 0x20]
	0x03AE7FB8 CBNZ W9, 0x3AE7FC0
	0x03AE7FBC BL 0x1C16DFC
	0x03AE7FC0 ADD X7, X31, 0x18
	0x03AE7FC4 MOV X0, X22
	0x03AE7FC8 MOV W1, W23
	0x03AE7FCC MOV W2, W31
	0x03AE7FD0 MOV X3, X26
	0x03AE7FD4 MOV X4, X24
	0x03AE7FD8 MOV W5, W25
	0x03AE7FDC MOV X6, X27
	0x03AE7FE0 STR X31, [X31]
	0x03AE7FE4 BL 0x3C9D530
	0x03AE7FE8 LDR X8, [X31 + 0x18]
	0x03AE7FEC CBZ X8, 0x3AE83EC
	0x03AE7FF0 ADRP X26, 0x671000
	0x03AE7FF4 ADRP X27, 0x671000
	0x03AE7FF8 ADRP X25, 0x612000
	0x03AE7FFC LDR X26, [X26 + 0xC10]
	0x03AE8000 LDR X27, [X27 + 0xC98]
	0x03AE8004 B 0x3EB197C
	0x03AE8008 MOV W22, W0
	0x03AE800C MOV X21, X31
	0x03AE8010 LDR W9, [X8 + 0x18]
	0x03AE8014 CMP W21, W9
	0x03AE8018 B.GE 0x3AE8180
	0x03AE801C CMP W21, W9
	0x03AE8020 B.CS 0x3AE8420
	0x03AE8024 ADD X8, X8, X21, 0x3, LSL
	0x03AE8028 LDR X24, [X8 + 0x20]
	0x03AE802C CBZ X24, 0x3AE8180
	0x03AE8030 MOV X0, X24
	0x03AE8034 MOV X1, X31
	0x03AE8038 BL 0x3C9C494
	0x03AE803C LDR W1, [X20 + 0xE0]
	0x03AE8040 MOV W23, W0
	0x03AE8044 MOV X0, X24
	0x03AE8048 MOV X2, X31
	0x03AE804C BL 0x3C9C4F8
	0x03AE8050 LDR X0, [X20 + 0xB0]
	0x03AE8054 CBZ X0, 0x3AE83EC
	0x03AE8058 LDR W10, [X0 + 0x1C]
	0x03AE805C LDR X8, [X0 + 0x10]
	0x03AE8060 LDR X9, [X26]
	0x03AE8064 ADD W10, W10, 0x1
	0x03AE8068 STR W10, [X0 + 0x1C]
	0x03AE806C CBZ X8, 0x3AE83EC
	0x03AE8070 LDRSW X10, [X0 + 0x18]
	0x03AE8074 LDR W11, [X8 + 0x18]
	0x03AE8078 CMP W10, W11
	0x03AE807C B.CS 0x3AE8094
	0x03AE8080 ADD W9, W10, 0x1
	0x03AE8084 ADD X8, X8, X10, 0x3, LSL
	0x03AE8088 STR W9, [X0 + 0x18]
	0x03AE808C STR X24, [X8 + 0x20]
	0x03AE8090 B 0x3AE80A8
	0x03AE8094 LDR X8, [X9 + 0x20]
	0x03AE8098 MOV X1, X24
	0x03AE809C LDR X8, [X8 + 0xC0]
	0x03AE80A0 LDR X2, [X8 + 0x70]
	0x03AE80A4 BL 0x301BF90
	0x03AE80A8 LDR X0, [X20 + 0xB8]
	0x03AE80AC CBZ X0, 0x3AE83EC
	0x03AE80B0 LDR X3, [X27]
	0x03AE80B4 MOV W1, W23
	0x03AE80B8 MOV X2, X24
	0x03AE80BC BL 0x2B0F05C
	0x03AE80C0 LDR X0, [X20 + 0x1E0]
	0x03AE80C4 CBZ X0, 0x3AE83EC
	0x03AE80C8 LDR W10, [X0 + 0x1C]
	0x03AE80CC LDR X8, [X0 + 0x10]
	0x03AE80D0 LDR X9, [X25]
	0x03AE80D4 ADD W10, W10, 0x1
	0x03AE80D8 STR W10, [X0 + 0x1C]
	0x03AE80DC CBZ X8, 0x3AE83EC
	0x03AE80E0 LDRSW X10, [X0 + 0x18]
	0x03AE80E4 LDR W11, [X8 + 0x18]
	0x03AE80E8 CMP W10, W11
	0x03AE80EC B.CS 0x3AE8104
	0x03AE80F0 ADD W9, W10, 0x1
	0x03AE80F4 ADD X8, X8, X10, 0x2, LSL
	0x03AE80F8 STR W9, [X0 + 0x18]
	0x03AE80FC STR W23, [X8 + 0x20]
	0x03AE8100 B 0x3AE8118
	0x03AE8104 LDR X8, [X9 + 0x20]
	0x03AE8108 MOV W1, W23
	0x03AE810C LDR X8, [X8 + 0xC0]
	0x03AE8110 LDR X2, [X8 + 0x70]
	0x03AE8114 BL 0x30C1698
	0x03AE8118 LDR X0, [X20 + 0x1D8]
	0x03AE811C CBZ X0, 0x3AE83EC
	0x03AE8120 LDR W10, [X0 + 0x1C]
	0x03AE8124 LDR X8, [X0 + 0x10]
	0x03AE8128 LDR X9, [X25]
	0x03AE812C ADD W10, W10, 0x1
	0x03AE8130 STR W10, [X0 + 0x1C]
	0x03AE8134 CBZ X8, 0x3AE83EC
	0x03AE8138 LDRSW X10, [X0 + 0x18]
	0x03AE813C LDR W11, [X8 + 0x18]
	0x03AE8140 CMP W10, W11
	0x03AE8144 B.CS 0x3AE815C
	0x03AE8148 ADD W9, W10, 0x1
	0x03AE814C ADD X8, X8, X10, 0x2, LSL
	0x03AE8150 STR W9, [X0 + 0x18]
	0x03AE8154 STR W23, [X8 + 0x20]
	0x03AE8158 B 0x3AE8170
	0x03AE815C LDR X8, [X9 + 0x20]
	0x03AE8160 MOV W1, W23
	0x03AE8164 LDR X8, [X8 + 0xC0]
	0x03AE8168 LDR X2, [X8 + 0x70]
	0x03AE816C BL 0x30C1698
	0x03AE8170 LDR X8, [X31 + 0x18]
	0x03AE8174 ADD X21, X21, 0x1
	0x03AE8178 CBNZ X8, 0x3AE8010
	0x03AE817C B 0x3AE83EC
	0x03AE8180 LDR X8, [X20 + 0x1E8]
	0x03AE8184 CBZ X8, 0x3AE83EC
	0x03AE8188 LDR W9, [X8 + 0x1C]
	0x03AE818C ADD W9, W9, 0x1
	0x03AE8190 STP W31, W9, [X8 + 0x18]
	0x03AE8194 LDR X0, [X20 + 0x1F8]
	0x03AE8198 CBZ X0, 0x3AE83EC
	0x03AE819C ADRP X26, 0x670000
	0x03AE81A0 ADRP X21, 0x670000
	0x03AE81A4 ADRP X27, 0x670000
	0x03AE81A8 ADRP X28, 0x670000
	0x03AE81AC ADRP X29, 0x670000
	0x03AE81B0 LDR X26, [X26 + 0xCF8]
	0x03AE81B4 LDR X21, [X21 + 0xE48]
	0x03AE81B8 LDR X27, [X27 + 0xC20]
	0x03AE81BC LDR X28, [X28 + 0xCD0]
	0x03AE81C0 LDR X29, [X29 + 0xE60]
	0x03AE81C4 MOV W23, W31
	0x03AE81C8 LDR W8, [X0 + 0x18]
	0x03AE81CC CMP W23, W8
	0x03AE81D0 B.GE 0x3AE8300
	0x03AE81D4 LDR X2, [X26]
	0x03AE81D8 MOV W1, W23
	0x03AE81DC BL 0x301BCCC
	0x03AE81E0 CBZ X0, 0x3AE83EC
	0x03AE81E4 MOV X24, X0
	0x03AE81E8 LDR X0, [X20 + 0xB8]
	0x03AE81EC CBZ X0, 0x3AE83EC
	0x03AE81F0 LDR W1, [X24 + 0x28]
	0x03AE81F4 LDR X3, [X21]
	0x03AE81F8 ADD X2, X31, 0x10
	0x03AE81FC BL 0x2B10A7C
	0x03AE8200 TBZ X0, 0x0, 0x3AE8250
	0x03AE8204 LDR X8, [X31 + 0x10]
	0x03AE8208 STP X20, X8, [X24 + 0x18]
	0x03AE820C LDR X0, [X20 + 0xC0]
	0x03AE8210 CBZ X0, 0x3AE83EC
	0x03AE8214 LDR W10, [X0 + 0x1C]
	0x03AE8218 LDR X8, [X0 + 0x10]
	0x03AE821C LDR X9, [X27]
	0x03AE8220 ADD W10, W10, 0x1
	0x03AE8224 STR W10, [X0 + 0x1C]
	0x03AE8228 CBZ X8, 0x3AE83EC
	0x03AE822C LDRSW X10, [X0 + 0x18]
	0x03AE8230 LDR W11, [X8 + 0x18]
	0x03AE8234 CMP W10, W11
	0x03AE8238 B.CS 0x3AE8298
	0x03AE823C ADD W9, W10, 0x1
	0x03AE8240 ADD X8, X8, X10, 0x3, LSL
	0x03AE8244 STR W9, [X0 + 0x18]
	0x03AE8248 STR X24, [X8 + 0x20]
	0x03AE824C B 0x3AE82AC
	0x03AE8250 LDR X0, [X20 + 0x1E8]
	0x03AE8254 CBZ X0, 0x3AE83EC
	0x03AE8258 LDR W10, [X0 + 0x1C]
	0x03AE825C LDR W1, [X24 + 0x28]
	0x03AE8260 LDR X8, [X0 + 0x10]
	0x03AE8264 LDR X9, [X25]
	0x03AE8268 ADD W10, W10, 0x1
	0x03AE826C STR W10, [X0 + 0x1C]
	0x03AE8270 CBZ X8, 0x3AE83EC
	0x03AE8274 LDRSW X10, [X0 + 0x18]
	0x03AE8278 LDR W11, [X8 + 0x18]
	0x03AE827C CMP W10, W11
	0x03AE8280 B.CS 0x3AE82E0
	0x03AE8284 ADD W9, W10, 0x1
	0x03AE8288 ADD X8, X8, X10, 0x2, LSL
	0x03AE828C STR W9, [X0 + 0x18]
	0x03AE8290 STR W1, [X8 + 0x20]
	0x03AE8294 B 0x3AE82F0
	0x03AE8298 LDR X8, [X9 + 0x20]
	0x03AE829C MOV X1, X24
	0x03AE82A0 LDR X8, [X8 + 0xC0]
	0x03AE82A4 LDR X2, [X8 + 0x70]
	0x03AE82A8 BL 0x301BF90
	0x03AE82AC LDR X0, [X20 + 0xC8]
	0x03AE82B0 CBZ X0, 0x3AE83EC
	0x03AE82B4 LDR W1, [X24 + 0x14]
	0x03AE82B8 LDR X3, [X28]
	0x03AE82BC MOV X2, X24
	0x03AE82C0 BL 0x2B0F05C
	0x03AE82C4 LDR X0, [X20 + 0x1F8]
	0x03AE82C8 CBZ X0, 0x3AE83EC
	0x03AE82CC LDR X2, [X29]
	0x03AE82D0 MOV W1, W23
	0x03AE82D4 BL 0x301DA48
	0x03AE82D8 SUB W23, W23, 0x1
	0x03AE82DC B 0x3AE82F0
	0x03AE82E0 LDR X8, [X9 + 0x20]
	0x03AE82E4 LDR X8, [X8 + 0xC0]
	0x03AE82E8 LDR X2, [X8 + 0x70]
	0x03AE82EC BL 0x30C1698
	0x03AE82F0 LDR X0, [X20 + 0x1F8]
	0x03AE82F4 ADD W23, W23, 0x1
	0x03AE82F8 CBNZ X0, 0x3AE81C8
	0x03AE82FC B 0x3AE83EC
	0x03AE8300 LDRB W8, [X20 + 0xE4]
	0x03AE8304 CMP W8, 0x0
	0x03AE8308 CSET W8, EQ
	0x03AE830C ORR W9, W22, W8, 0x0
	0x03AE8310 CSET W8, NE
	0x03AE8314 TBZ X9, 0x0, 0x3AE8324
	0x03AE8318 LDR W21, [X31 + 0x8]
	0x03AE831C ORR W22, W22, W8, 0x0
	0x03AE8320 B 0x3AE8338
	0x03AE8324 LDR W21, [X31 + 0x8]
	0x03AE8328 MOV X0, X20
	0x03AE832C BL 0x3AE73B0
	0x03AE8330 TBZ X0, 0x0, 0x3AE8328
	0x03AE8334 MOVZ W22, 0x1
	0x03AE8338 TBZ X21, 0x0, 0x3AE8344
	0x03AE833C MOV X0, X20
	0x03AE8340 BL 0x3AE61F0
	0x03AE8344 ADRP X8, 0x60D000
	0x03AE8348 LDR X8, [X8 + 0x278]
	0x03AE834C LDR X8, [X8]
	0x03AE8350 LDR X8, [X8 + 0xB8]
	0x03AE8354 LDR X8, [X8]
	0x03AE8358 STR X8, [X19]
	0x03AE835C LDR X0, [X20 + 0x1F8]
	0x03AE8360 CBZ X0, 0x3AE83EC
	0x03AE8364 MOV W21, W31
	0x03AE8368 LDR W8, [X0 + 0x18]
	0x03AE836C CMP W21, W8
	0x03AE8370 B.GE 0x3AE83F0
	0x03AE8374 LDR X2, [X26]
	0x03AE8378 MOV W1, W21
	0x03AE837C BL 0x301BCCC
	0x03AE8380 CBZ X0, 0x3AE83EC
	0x03AE8384 MOV X8, X0
	0x03AE8388 LDR X0, [X20 + 0x208]
	0x03AE838C CBZ X0, 0x3AE83EC
	0x03AE8390 LDR W10, [X0 + 0x1C]
	0x03AE8394 LDR W1, [X8 + 0x14]
	0x03AE8398 LDR X8, [X0 + 0x10]
	0x03AE839C LDR X9, [X25]
	0x03AE83A0 ADD W10, W10, 0x1
	0x03AE83A4 STR W10, [X0 + 0x1C]
	0x03AE83A8 CBZ X8, 0x3AE83EC
	0x03AE83AC LDRSW X10, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x8FC000
	015 Move W8, [X21+1447]
	016 Move W28, W3
	017 Move X19, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {101}
	024 Move X0, 0x60D000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x672000
	028 Move X0, [X0+3280]
	029 Call 0x1C17CF4
	030 Move X0, 0x672000
	031 Move X0, [X0+3224]
	032 Call 0x1C17CF4
	033 Move X0, 0x672000
	034 Move X0, [X0+3208]
	035 Call 0x1C17CF4
	036 Move X0, 0x672000
	037 Move X0, [X0+3240]
	038 Call 0x1C17CF4
	039 Move X0, 0x672000
	040 Move X0, [X0+3656]
	041 Call 0x1C17CF4
	042 Move X0, 0x672000
	043 Move X0, [X0+3216]
	044 Call 0x1C17CF4
	045 Move X0, 0x672000
	046 Move X0, [X0+3664]
	047 Call 0x1C17CF4
	048 Move X0, 0x672000
	049 Move X0, [X0+3008]
	050 Call 0x1C17CF4
	051 Move X0, 0x668000
	052 Move X0, [X0+2088]
	053 Call 0x1C17CF4
	054 Move X0, 0x672000
	055 Move X0, [X0+3672]
	056 Call 0x1C17CF4
	057 Move X0, 0x672000
	058 Move X0, [X0+3088]
	059 Call 0x1C17CF4
	060 Move X0, 0x613000
	061 Move X0, [X0+464]
	062 Call 0x1C17CF4
	063 Move X0, 0x672000
	064 Move X0, [X0+3104]
	065 Call 0x1C17CF4
	066 Move X0, 0x672000
	067 Move X0, [X0+3112]
	068 Call 0x1C17CF4
	069 Move X0, 0x664000
	070 Move X0, [X0+2896]
	071 Call 0x1C17CF4
	072 Move X0, 0x672000
	073 Move X0, [X0+3680]
	074 Call 0x1C17CF4
	075 Move X0, 0x63A000
	076 Move X0, [X0+1368]
	077 Call 0x1C17CF4
	078 Move X0, 0x672000
	079 Move X0, [X0+3312]
	080 Call 0x1C17CF4
	081 Move X0, 0x672000
	082 Move X0, [X0+2136]
	083 Call 0x1C17CF4
	084 Move X0, 0x672000
	085 Move X0, [X0+3320]
	086 Call 0x1C17CF4
	087 Move X0, 0x672000
	088 Move X0, [X0+1456]
	089 Call 0x1C17CF4
	090 Move X0, 0x672000
	091 Move X0, [X0+3688]
	092 Call 0x1C17CF4
	093 Move X0, 0x672000
	094 Move X0, [X0+3696]
	095 Call 0x1C17CF4
	096 Move X0, 0x672000
	097 Move X0, [X0+3704]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X21+1447], W8
	101 Move [X31+16], X31
	102 Move [X31+24], X31
	103 Compare X22, 0
	104 JumpIfEqual {137}
	105 Move X8, [X22+24]
	106 Compare X8, 0
	107 JumpIfEqual {137}
	108 Move W8, [X20+72]
	109 Compare W8, 0
	110 JumpIfEqual {137}
	111 Move X23, [X20+64]
	112 Add X0, X20, 80
	113 Move X1, X31
	114 Call FaceInfo.get_pointSize, X0
	115 Move X26, 0x672000
	116 Move X26, [X26+3008]
	117 Move W24, W0
	118 Move X8, [X26]
	119 Move W9, [X8+224]
	120 Compare W9, 0
	121 JumpIfNotEqual {124}
	122 Move X0, X8
	123 Call 0x1C17DFC
	124 Move X0, X23
	125 Move W1, W24
	126 Move X2, X31
	127 Call FontEngine.LoadFontFace, X0, X1
	128 Compare W0, 0
	129 JumpIfEqual {185}
	130 Move X8, 0x672000
	131 Move X8, [X8+3664]
	132 Move X0, X22
	133 Move X1, [X8]
	134 Call Enumerable.ToArray, X0
	135 Move W8, W31
	136 Move [X19], X0
	137 Move X22, 0x672000
	138 Move W21, [X20+72]
	139 Move X22, [X22+3704]
	140 Move X0, X20
	141 Move X1, X31
	142 Call Object.get_name, X0
	143 Move X8, [X22]
	144 Move X1, X0
	145 Compare W21, 0
	146 JumpIfEqual {149}
	147 Move X9, 0x672000
	148 Move X9, [X9+3688]
	149 Move X9, 0x672000
	150 Move X9, [X9+3696]
	151 Move X2, [X9]
	152 Move X0, X8
	153 Move X3, X31
	154 Call String.Concat, X0, X1, X2
	155 Move X8, 0x60D000
	156 Move X8, [X8+2600]
	157 Move X21, X0
	158 Move X8, [X8]
	159 Move W9, [X8+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X8
	163 Call 0x1C17DFC
	164 Move X0, X21
	165 Move X1, X20
	166 Move X2, X31
	167 Call Debug.LogWarning, X0, X1
	168 Move W8, W31
	169 Move [X19], X31
	170 Move X20, [X31+112]
	171 Move X19, [X31+120]
	172 Move X22, [X31+96]
	173 Move X21, [X31+104]
	174 Move X24, [X31+80]
	175 Move X23, [X31+88]
	176 Move X26, [X31+64]
	177 Move X25, [X31+72]
	178 Move X28, [X31+48]
	179 Move X27, [X31+56]
	180 Move X29, [X31+32]
	181 Move X30, [X31+40]
	182 And W0, W8, 1
	183 Add X31, X31, 128
	184 Return X0
	185 Move X8, [X20+200]
	186 Compare X8, 0
	187 JumpIfEqual {191}
	188 Move X8, [X20+184]
	189 Compare X8, 0
	190 JumpIfNotEqual {193}
	191 Move X0, X20
	192 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	193 Move X8, [X20+488]
	194 Compare X8, 0
	195 JumpIfEqual {842}
	196 Move W9, [X8+28]
	197 Add W9, W9, 1
	198 Move [X8+24], W31
	199 Move [X8+28], W9
	200 Move X0, [X20+496]
	201 Compare X0, 0
	202 JumpIfEqual {842}
	203 Move X21, 0x672000
	204 Move X21, [X21+3672]
	205 Move X1, [X21]
	206 Call HashSet`1<UInt32>.Clear, X0
	207 Move X8, [X20+504]
	208 Compare X8, 0
	209 JumpIfEqual {842}
	210 Move W2, [X8+24]
	211 Move W9, [X8+28]
	212 Add W9, W9, 1
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X8+24], W31
	215 Move [X8+28], W9
	216 Move X0, [X8+16]
	217 Move W1, W31
	218 Move X3, X31
	219 Call Array.Clear, X0, X1, X2
	220 Move X0, [X20+512]
	221 Compare X0, 0
	222 JumpIfEqual {842}
	223 Move X1, [X21]
	224 Call HashSet`1<UInt32>.Clear, X0
	225 Move X8, [X20+520]
	226 Compare X8, 0
	227 JumpIfEqual {842}
	228 Move W9, [X8+28]
	229 Move [X31+8], W28
	230 Add W9, W9, 1
	231 Move [X8+24], W31
	232 Move [X8+28], W9
	233 Move X8, [X22+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 And X8, X8, 0
	236 Compare X8, 0
	237 JumpIfEqual {843}
	238 Move [X31+12], W31
	239 Move X21, 0x672000
	240 Move X21, [X21+3208]
	241 Move X27, X31
	242 Subtract X29, X8, 1
	243 Add X28, X22, 32
	244 Move X0, [X20+200]
	245 Compare X0, 0
	246 JumpIfEqual {842}
	247 Move W23, [X28]
	248 Move X2, [X21]
	249 Move W1, W23
	250 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {455}
	255 Move X0, [X26]
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move W0, W23
	261 Move X1, X31
	262 Call FontEngine.GetGlyphIndex, X0
	263 Move W25, W0
	264 Compare W0, 0
	265 JumpIfNotEqual {287}
	266 Move W8, 0x2011
	267 NotImplemented "Instruction CMP not yet implemented."
	268 NotImplemented "Instruction CMP not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X0, [X26]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move W0, 32
	276 Move X0, [X26]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move W0, 45
	282 Move X1, X31
	283 Call FontEngine.GetGlyphIndex, X0
	284 Move W25, W0
	285 Compare W0, 0
	286 JumpIfEqual {388}
	287 Move X8, 0x672000
	288 Move X8, [X8+1456]
	289 Move X0, [X8]
	290 Call 0x1C17F10
	291 Move X1, X31
	292 Move X24, X0
	293 Call TMP_TextElement..ctor, X0
	294 Move W8, 1
	295 Move [X24+16], W8
	296 Move W8, 0x3F800000
	297 Move [X24+20], W23
	298 Move [X24+24], X31
	299 Move [X24+32], X31
	300 Move [X24+40], W25
	301 Move [X24+44], W8
	302 Move X0, [X20+184]
	303 Compare X0, 0
	304 JumpIfEqual {842}
	305 Move X8, 0x672000
	306 Move X8, [X8+3240]
	307 Move W1, W25
	308 Move X2, [X8]
	309 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	310 Move TEMP, X0
	311 And TEMP, TEMP, 1
	312 Compare TEMP, 1
	313 JumpIfNotEqual {343}
	314 Move X0, [X20+184]
	315 Compare X0, 0
	316 JumpIfEqual {842}
	317 Move X8, 0x672000
	318 Move X8, [X8+3216]
	319 Move W1, W25
	320 Move X2, [X8]
	321 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	322 Move [X24+24], X20
	323 Move [X24+32], X0
	324 Move X0, [X20+192]
	325 Compare X0, 0
	326 JumpIfEqual {842}
	327 Move X9, 0x672000
	328 Move W10, [X0+28]
	329 Move X8, [X0+16]
	330 Move X9, [X9+3104]
	331 Add W10, W10, 1
	332 Move X9, [X9]
	333 Move [X0+28], W10
	334 Compare X8, 0
	335 JumpIfEqual {842}
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Move W11, [X8+24]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Add W9, W10, 1
	340 Add X8, X8, X10
	341 Move [X0+24], W9
	342 Move [X8+32], X24
	343 Move X0, [X20+496]
	344 Compare X0, 0
	345 JumpIfEqual {842}
	346 Move X8, 0x668000
	347 Move X8, [X8+2088]
	348 Move W1, W25
	349 Move X2, [X8]
	350 Call HashSet`1<UInt32>.Add, X0, X1
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfNotEqual {412}
	355 Move X0, [X20+488]
	356 Compare X0, 0
	357 JumpIfEqual {842}
	358 Move X9, 0x613000
	359 Move W10, [X0+28]
	360 Move X8, [X0+16]
	361 Move X9, [X9+464]
	362 Add W10, W10, 1
	363 Move X9, [X9]
	364 Move [X0+28], W10
	365 Compare X8, 0
	366 JumpIfEqual {842}
	367 NotImplemented "Instruction LDRSW not yet implemented."
	368 Move W11, [X8+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Add W9, W10, 1
	371 Add X8, X8, X10
	372 Move [X0+24], W9
	373 Move [X8+32], W25
	374 Move X8, [X9+32]
	375 Move X1, X24
	376 Move X8, [X8+192]
	377 Move X2, [X8+112]
	378 Call List`1<Object>.AddWithResize, X0, X1
	379 Move X0, [X20+200]
	380 Compare X0, 0
	381 JumpIfEqual {842}
	382 Move X8, 0x672000
	383 Move X8, [X8+3280]
	384 Move W1, W23
	385 Move X2, X24
	386 Move X3, [X8]
	387 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	388 Move X0, [X20+520]
	389 Compare X0, 0
	390 JumpIfEqual {842}
	391 Move X9, 0x613000
	392 Move W10, [X0+28]
	393 Move X8, [X0+16]
	394 Move X9, [X9+464]
	395 Add W10, W10, 1
	396 Move X9, [X9]
	397 Move [X0+28], W10
	398 Compare X8, 0
	399 JumpIfEqual {842}
	400 NotImplemented "Instruction LDRSW not yet implemented."
	401 Move W11, [X8+24]
	402 NotImplemented "Instruction CMP not yet implemented."
	403 Add W9, W10, 1
	404 Add X8, X8, X10
	405 Move [X0+24], W9
	406 Move [X8+32], W23
	407 Move X8, [X9+32]
	408 Move W1, W25
	409 Move X8, [X8+192]
	410 Move X2, [X8+112]
	411 Call List`1<UInt32>.AddWithResize, X0, X1
	412 Move X0, [X20+512]
	413 Compare X0, 0
	414 JumpIfEqual {842}
	415 Move X8, 0x668000
	416 Move X8, [X8+2088]
	417 Move W1, W23
	418 Move X2, [X8]
	419 Call HashSet`1<UInt32>.Add, X0, X1
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfNotEqual {455}
	424 Move X0, [X20+504]
	425 Compare X0, 0
	426 JumpIfEqual {842}
	427 Move X9, 0x672000
	428 Move W10, [X0+28]
	429 Move X8, [X0+16]
	430 Move X9, [X9+3104]
	431 Add W10, W10, 1
	432 Move X9, [X9]
	433 Move [X0+28], W10
	434 Compare X8, 0
	435 JumpIfEqual {842}
	436 NotImplemented "Instruction LDRSW not yet implemented."
	437 Move W11, [X8+24]
	438 NotImplemented "Instruction CMP not yet implemented."
	439 Add W9, W10, 1
	440 Add X8, X8, X10
	441 Move [X0+24], W9
	442 Move [X8+32], X24
	443 Move X8, [X9+32]
	444 Move X1, X24
	445 Move X8, [X8+192]
	446 Move X2, [X8+112]
	447 Call List`1<Object>.AddWithResize, X0, X1
	448 Move X8, [X9+32]
	449 Move W1, W23
	450 Move X8, [X8+192]
	451 Move X2, [X8+112]
	452 Call List`1<UInt32>.AddWithResize, X0, X1
	453 Move W8, 1
	454 Move [X31+12], W8
	455 NotImplemented "Instruction CMP not yet implemented."
	456 Move W8, [X22+24]
	457 Add X27, X27, 1
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move [X31+12], W31
	460 Move X8, [X20+488]
	461 Compare X8, 0
	462 JumpIfEqual {842}
	463 Move W8, [X8+24]
	464 Compare W8, 0
	465 JumpIfEqual {775}
	466 Move X8, [X20+216]
	467 Compare X8, 0
	468 JumpIfEqual {842}
	469 NotImplemented "Instruction LDRSW not yet implemented."
	470 Move W10, [X8+24]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Add X8, X8, X9
	473 Move X0, [X8+32]
	474 Compare X0, 0
	475 JumpIfEqual {842}
	476 Move X8, [X0]
	477 Move X9, [X8+392]
	478 Move X1, [X8+400]
	479 NotImplemented "Instruction BLR not yet implemented."
	480 Compare W0, 0
	481 JumpIfEqual {498}
	482 Move X8, [X20+216]
	483 Compare X8, 0
	484 JumpIfEqual {842}
	485 NotImplemented "Instruction LDRSW not yet implemented."
	486 Move W10, [X8+24]
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Add X8, X8, X9
	489 Move X0, [X8+32]
	490 Compare X0, 0
	491 JumpIfEqual {842}
	492 Move X8, [X0]
	493 Move X9, [X8+424]
	494 Move X1, [X8+432]
	495 NotImplemented "Instruction BLR not yet implemented."
	496 Compare W0, 0
	497 JumpIfNotEqual {528}
	498 Move X8, [X20+216]
	499 Compare X8, 0
	500 JumpIfEqual {842}
	501 NotImplemented "Instruction LDRSW not yet implemented."
	502 Move W10, [X8+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Add X8, X8, X9
	505 Move X0, [X8+32]
	506 Compare X0, 0
	507 JumpIfEqual {842}
	508 Move W2, [X20+268]
	509 Move W1, [X20+264]
	510 Move X3, X31
	511 Call Texture2D.Resize, X0, X1, X2
	512 Move X8, [X20+216]
	513 Compare X8, 0
	514 JumpIfEqual {842}
	515 NotImplemented "Instruction LDRSW not yet implemented."
	516 Move W10, [X8+24]
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Move X0, [X26]
	519 Add X8, X8, X9
	520 Move X22, [X8+32]
	521 Move W9, [X0+224]
	522 Compare W9, 0
	523 JumpIfNotEqual {525}
	524 Call 0x1C17DFC
	525 Move X0, X22
	526 Move X1, X31
	527 Call FontEngine.ResetAtlasTexture, X0
	528 Move X8, [X20+216]
	529 Compare X8, 0
	530 JumpIfEqual {842}
	531 NotImplemented "Instruction LDRSW not yet implemented."
	532 Move W10, [X8+24]
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Move X0, [X26]
	535 Add X8, X8, X9
	536 Move X22, [X20+488]
	537 Move W23, [X20+272]
	538 Move X24, [X20+232]
	539 Move X26, [X20+240]
	540 Move W25, [X20+276]
	541 Move W9, [X0+224]
	542 Move X27, [X8+32]
	543 Compare W9, 0
	544 JumpIfNotEqual {546}
	545 Call 0x1C17DFC
	546 Add X7, X31, 24
	547 Move X0, X22
	548 Move W1, W23
	549 Move W2, W31
	550 Move X3, X26
	551 Move X4, X24
	552 Move W5, W25
	553 Move X6, X27
	554 Move [X31], X31
	555 Call FontEngine.TryAddGlyphsToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	556 Move X8, [X31+24]
	557 Compare X8, 0
	558 JumpIfEqual {842}
	559 Move X26, 0x672000
	560 Move X27, 0x672000
	561 Move X25, 0x613000
	562 Move X26, [X26+3088]
	563 Move X27, [X27+3224]
	564 Move X25, [X25+464]
	565 Move W22, W0
	566 Move X21, X31
	567 Move W9, [X8+24]
	568 NotImplemented "Instruction CMP not yet implemented."
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Add X8, X8, X21
	571 Move X24, [X8+32]
	572 Compare X24, 0
	573 JumpIfEqual {659}
	574 Move X0, X24
	575 Move X1, X31
	576 Call Glyph.get_index, X0
	577 Move W1, [X20+224]
	578 Move W23, W0
	579 Move X0, X24
	580 Move X2, X31
	581 Call Glyph.set_atlasIndex, X0, X1
	582 Move X0, [X20+176]
	583 Compare X0, 0
	584 JumpIfEqual {842}
	585 Move W10, [X0+28]
	586 Move X8, [X0+16]
	587 Move X9, [X26]
	588 Add W10, W10, 1
	589 Move [X0+28], W10
	590 Compare X8, 0
	591 JumpIfEqual {842}
	592 NotImplemented "Instruction LDRSW not yet implemented."
	593 Move W11, [X8+24]
	594 NotImplemented "Instruction CMP not yet implemented."
	595 Add W9, W10, 1
	596 Add X8, X8, X10
	597 Move [X0+24], W9
	598 Move [X8+32], X24
	599 Move X8, [X9+32]
	600 Move X1, X24
	601 Move X8, [X8+192]
	602 Move X2, [X8+112]
	603 Call List`1<Object>.AddWithResize, X0, X1
	604 Move X0, [X20+184]
	605 Compare X0, 0
	606 JumpIfEqual {842}
	607 Move X3, [X27]
	608 Move W1, W23
	609 Move X2, X24
	610 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	611 Move X0, [X20+480]
	612 Compare X0, 0
	613 JumpIfEqual {842}
	614 Move W10, [X0+28]
	615 Move X8, [X0+16]
	616 Move X9, [X25]
	617 Add W10, W10, 1
	618 Move [X0+28], W10
	619 Compare X8, 0
	620 JumpIfEqual {842}
	621 NotImplemented "Instruction LDRSW not yet implemented."
	622 Move W11, [X8+24]
	623 NotImplemented "Instruction CMP not yet implemented."
	624 Add W9, W10, 1
	625 Add X8, X8, X10
	626 Move [X0+24], W9
	627 Move [X8+32], W23
	628 Move X8, [X9+32]
	629 Move W1, W23
	630 Move X8, [X8+192]
	631 Move X2, [X8+112]
	632 Call List`1<UInt32>.AddWithResize, X0, X1
	633 Move X0, [X20+472]
	634 Compare X0, 0
	635 JumpIfEqual {842}
	636 Move W10, [X0+28]
	637 Move X8, [X0+16]
	638 Move X9, [X25]
	639 Add W10, W10, 1
	640 Move [X0+28], W10
	641 Compare X8, 0
	642 JumpIfEqual {842}
	643 NotImplemented "Instruction LDRSW not yet implemented."
	644 Move W11, [X8+24]
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Add W9, W10, 1
	647 Add X8, X8, X10
	648 Move [X0+24], W9
	649 Move [X8+32], W23
	650 Move X8, [X9+32]
	651 Move W1, W23
	652 Move X8, [X8+192]
	653 Move X2, [X8+112]
	654 Call List`1<UInt32>.AddWithResize, X0, X1
	655 Move X8, [X31+24]
	656 Add X21, X21, 1
	657 Compare X8, 0
	658 JumpIfNotEqual {567}
	659 Move X8, [X20+488]
	660 Compare X8, 0
	661 JumpIfEqual {842}
	662 Move W9, [X8+28]
	663 Add W9, W9, 1
	664 Move [X8+24], W31
	665 Move [X8+28], W9
	666 Move X0, [X20+504]
	667 Compare X0, 0
	668 JumpIfEqual {842}
	669 Move X26, 0x671000
	670 Move X21, 0x671000
	671 Move X27, 0x671000
	672 Move X28, 0x671000
	673 Move X29, 0x671000
	674 Move X26, [X26+3320]
	675 Move X21, [X21+3656]
	676 Move X27, [X27+3104]
	677 Move X28, [X28+3280]
	678 Move X29, [X29+3680]
	679 Move W23, W31
	680 Move W8, [X0+24]
	681 NotImplemented "Instruction CMP not yet implemented."
	682 Move X2, [X26]
	683 Move W1, W23
	684 Call List`1<Object>.get_Item, X0, X1
	685 Compare X0, 0
	686 JumpIfEqual {842}
	687 Move X24, X0
	688 Move X0, [X20+184]
	689 Compare X0, 0
	690 JumpIfEqual {842}
	691 Move W1, [X24+40]
	692 Move X3, [X21]
	693 Add X2, X31, 16
	694 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	695 Move TEMP, X0
	696 And TEMP, TEMP, 1
	697 Compare TEMP, 1
	698 JumpIfNotEqual {719}
	699 Move X8, [X31+16]
	700 Move [X24+24], X20
	701 Move [X24+32], X8
	702 Move X0, [X20+192]
	703 Compare X0, 0
	704 JumpIfEqual {842}
	705 Move W10, [X0+28]
	706 Move X8, [X0+16]
	707 Move X9, [X27]
	708 Add W10, W10, 1
	709 Move [X0+28], W10
	710 Compare X8, 0
	711 JumpIfEqual {842}
	712 NotImplemented "Instruction LDRSW not yet implemented."
	713 Move W11, [X8+24]
	714 NotImplemented "Instruction CMP not yet implemented."
	715 Add W9, W10, 1
	716 Add X8, X8, X10
	717 Move [X0+24], W9
	718 Move [X8+32], X24
	719 Move X0, [X20+488]
	720 Compare X0, 0
	721 JumpIfEqual {842}
	722 Move W10, [X0+28]
	723 Move W1, [X24+40]
	724 Move X8, [X0+16]
	725 Move X9, [X25]
	726 Add W10, W10, 1
	727 Move [X0+28], W10
	728 Compare X8, 0
	729 JumpIfEqual {842}
	730 NotImplemented "Instruction LDRSW not yet implemented."
	731 Move W11, [X8+24]
	732 NotImplemented "Instruction CMP not yet implemented."
	733 Add W9, W10, 1
	734 Add X8, X8, X10
	735 Move [X0+24], W9
	736 Move [X8+32], W1
	737 Move X8, [X9+32]
	738 Move X1, X24
	739 Move X8, [X8+192]
	740 Move X2, [X8+112]
	741 Call List`1<Object>.AddWithResize, X0, X1
	742 Move X0, [X20+200]
	743 Compare X0, 0
	744 JumpIfEqual {842}
	745 Move W1, [X24+20]
	746 Move X3, [X28]
	747 Move X2, X24
	748 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	749 Move X0, [X20+504]
	750 Compare X0, 0
	751 JumpIfEqual {842}
	752 Move X2, [X29]
	753 Move W1, W23
	754 Call List`1<Object>.RemoveAt, X0, X1
	755 Subtract W23, W23, 1
	756 Move X8, [X9+32]
	757 Move X8, [X8+192]
	758 Move X2, [X8+112]
	759 Call List`1<UInt32>.AddWithResize, X0, X1
	760 Move X0, [X20+504]
	761 Add W23, W23, 1
	762 Compare X0, 0
	763 JumpIfNotEqual {680}
	764 Move W8, [X20+228]
	765 NotImplemented "Instruction CMP not yet implemented."
	766 NotImplemented "Instruction CSET not yet implemented."
	767 Or W9, W22, W8
	768 NotImplemented "Instruction CSET not yet implemented."
	769 Move TEMP, X9
	770 And TEMP, TEMP, 1
	771 Compare TEMP, 1
	772 JumpIfNotEqual {776}
	773 Move W21, [X31+8]
	774 Or W22, W22, W8
	775 Move [X19], X22
	776 Move W21, [X31+8]
	777 Move X0, X20
	778 Call TMP_FontAsset.TryAddGlyphsToNewAtlasTexture, X0
	779 Move TEMP, X0
	780 And TEMP, TEMP, 1
	781 Compare TEMP, 1
	782 JumpIfNotEqual {777}
	783 Move W22, 1
	784 Move TEMP, X21
	785 And TEMP, TEMP, 1
	786 Compare TEMP, 1
	787 JumpIfNotEqual {790}
	788 Move X0, X20
	789 Call TMP_FontAsset.UpdateGlyphAdjustmentRecords, X0
	790 Move X0, [X20+504]
	791 Compare X0, 0
	792 JumpIfEqual {842}
	793 Move W21, W31
	794 Move W8, [X0+24]
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move X2, [X26]
	797 Move W1, W21
	798 Call List`1<Object>.get_Item, X0, X1
	799 Compare X0, 0
	800 JumpIfEqual {842}
	801 Move X8, X0
	802 Move X0, [X20+520]
	803 Compare X0, 0
	804 JumpIfEqual {842}
	805 Move W10, [X0+28]
	806 Move W1, [X8+20]
	807 Move X8, [X0+16]
	808 Move X9, [X25]
	809 Add W10, W10, 1
	810 Move [X0+28], W10
	811 Compare X8, 0
	812 JumpIfEqual {842}
	813 NotImplemented "Instruction LDRSW not yet implemented."
	814 Move W11, [X8+24]
	815 NotImplemented "Instruction CMP not yet implemented."
	816 Add W9, W10, 1
	817 Add X8, X8, X10
	818 Move [X0+24], W9
	819 Move [X8+32], W1
	820 Move X8, [X9+32]
	821 Move X8, [X8+192]
	822 Move X2, [X8+112]
	823 Call List`1<UInt32>.AddWithResize, X0, X1
	824 Move X0, [X20+504]
	825 Add W21, W21, 1
	826 Compare X0, 0
	827 JumpIfNotEqual {794}
	828 Move [X19], X31
	829 Move X0, [X20+520]
	830 Compare X0, 0
	831 JumpIfEqual {842}
	832 Move W8, [X0+24]
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Move X8, 0x639000
	835 Move X8, [X8+1368]
	836 Move X1, [X8]
	837 Call List`1<UInt32>.ToArray, X0
	838 Move [X19], X0
	839 Move W8, [X31+12]
	840 Xor W8, W8, 1
	841 And W8, W22, W8
	842 Call 0x1C17F20
	843 Call 0x1C17F28

Method: System.Boolean TryAddCharacters(System.String characters, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03AE8828 LDR X8, [X8 + 0xC90]
	0x03AE882C MOV W1, W22
	0x03AE8830 LDR X2, [X8]
	0x03AE8834 BL 0x2B0EFBC
	0x03AE8838 ADRP X8, 0x670000
	0x03AE883C LDR X8, [X8 + 0x5B0]
	0x03AE8840 MOV X23, X0
	0x03AE8844 LDR X8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 And W3, W2, 1
	003 Add X2, X31, 8
	004 Move [X31+8], X31
	005 Call TMP_FontAsset.TryAddCharacters, X0, X1, X2, X3
	006 And W0, W0, 1
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean TryAddCharacters(System.String characters, out System.String missingCharacters, System.Boolean includeFontFeatures = False)

Disassembly:
	0x03AE8848 MOV X0, X8
	0x03AE884C BL 0x1C16F10
	0x03AE8850 MOV W1, W20
	0x03AE8854 MOV X2, X19
	0x03AE8858 MOV X3, X23
	0x03AE885C MOV X22, X0
	0x03AE8860 BL 0x3ADB950
	0x03AE8864 STR X22, [X21]
	0x03AE8868 LDR X0, [X19 + 0xC0]
	0x03AE886C CBZ X0, 0x3AE8BDC
	0x03AE8870 ADRP X9, 0x670000
	0x03AE8874 LDR X9, [X9 + 0xC20]
	0x03AE8878 LDR W10, [X0 + 0x1C]
	0x03AE887C LDR X8, [X0 + 0x10]
	0x03AE8880 LDR X9, [X9]
	0x03AE8884 ADD W10, W10, 0x1
	0x03AE8888 STR W10, [X0 + 0x1C]
	0x03AE888C CBZ X8, 0x3AE8BDC
	0x03AE8890 LDRSW X10, [X0 + 0x18]
	0x03AE8894 LDR W11, [X8 + 0x18]
	0x03AE8898 CMP W10, W11
	0x03AE889C B.CS 0x3AE8944
	0x03AE88A0 ADD W9, W10, 0x1
	0x03AE88A4 ADD X8, X8, X10, 0x3, LSL
	0x03AE88A8 STR W9, [X0 + 0x18]
	0x03AE88AC STR X22, [X8 + 0x20]
	0x03AE88B0 B 0x3AE8958
	0x03AE88B4 LDR X0, [X24]
	0x03AE88B8 LDR W8, [X19 + 0x114]
	0x03AE88BC STR X31, [X31 + 0x8]
	0x03AE88C0 MOVZ W10, 0x8
	0x03AE88C4 LDR W9, [X0 + 0xE0]
	0x03AE88C8 ANDS W31, W8, 0x4
	0x03AE88CC MOVZ W8, 0xA
	0x03AE88D0 CSEL W23, W10, W8, EQ
	0x03AE88D4 CBNZ W9, 0x3AE88DC
	0x03AE88D8 BL 0x1C16DFC
	0x03AE88DC ADD X2, X31, 0x8
	0x03AE88E0 MOV W0, W22
	0x03AE88E4 MOV W1, W23
	0x03AE88E8 MOV X3, X31
	0x03AE88EC BL 0x3C9CDAC
	0x03AE88F0 TBZ X0, 0x0, 0x3AE8764
	0x03AE88F4 LDR X0, [X19 + 0xB0]
	0x03AE88F8 CBZ X0, 0x3AE8BDC
	0x03AE88FC ADRP X25, 0x670000
	0x03AE8900 LDR X1, [X31 + 0x8]
	0x03AE8904 LDR X25, [X25 + 0xC10]
	0x03AE8908 LDR W10, [X0 + 0x1C]
	0x03AE890C LDR X8, [X0 + 0x10]
	0x03AE8910 LDR X9, [X25]
	0x03AE8914 ADD W10, W10, 0x1
	0x03AE8918 STR W10, [X0 + 0x1C]
	0x03AE891C CBZ X8, 0x3AE8BDC
	0x03AE8920 LDRSW X10, [X0 + 0x18]
	0x03AE8924 LDR W11, [X8 + 0x18]
	0x03AE8928 CMP W10, W11
	0x03AE892C B.CS 0x3AE899C
	0x03AE8930 ADD W9, W10, 0x1
	0x03AE8934 ADD X8, X8, X10, 0x3, LSL
	0x03AE8938 STR W9, [X0 + 0x18]
	0x03AE893C STR X1, [X8 + 0x20]
	0x03AE8940 B 0x3AE89AC
	0x03AE8944 LDR X8, [X9 + 0x20]
	0x03AE8948 MOV X1, X22
	0x03AE894C LDR X8, [X8 + 0xC0]
	0x03AE8950 LDR X2, [X8 + 0x70]
	0x03AE8954 BL 0x301BF90
	0x03AE8958 LDR X0, [X19 + 0xC8]
	0x03AE895C CBZ X0, 0x3AE8BDC
	0x03AE8960 ADRP X8, 0x670000
	0x03AE8964 LDR X2, [X21]
	0x03AE8968 LDR X8, [X8 + 0xCD0]
	0x03AE896C MOV W1, W20
	0x03AE8970 LDR X3, [X8]
	0x03AE8974 BL 0x2B0F05C
	0x03AE8978 B 0x3AE8BD4
	0x03AE897C LDR X0, [X19 + 0x210]
	0x03AE8980 CBZ X0, 0x3AE8BDC
	0x03AE8984 ADRP X8, 0x666000
	0x03AE8988 LDR X8, [X8 + 0x828]
	0x03AE898C MOV W1, W20
	0x03AE8990 LDR X2, [X8]
	0x03AE8994 BL 0x2DCDCE0
	0x03AE8998 B 0x3AE8764
	0x03AE899C LDR X8, [X9 + 0x20]
	0x03AE89A0 LDR X8, [X8 + 0xC0]
	0x03AE89A4 LDR X2, [X8 + 0x70]
	0x03AE89A8 BL 0x301BF90
	0x03AE89AC LDR X0, [X19 + 0xB8]
	0x03AE89B0 CBZ X0, 0x3AE8BDC
	0x03AE89B4 ADRP X8, 0x670000
	0x03AE89B8 LDR X2, [X31 + 0x8]
	0x03AE89BC LDR X8, [X8 + 0xC98]
	0x03AE89C0 MOV W1, W22
	0x03AE89C4 LDR X3, [X8]
	0x03AE89C8 BL 0x2B0F05C
	0x03AE89CC ADRP X8, 0x670000
	0x03AE89D0 LDR X24, [X31 + 0x8]
	0x03AE89D4 LDR X8, [X8 + 0x5B0]
	0x03AE89D8 LDR X0, [X8]
	0x03AE89DC BL 0x1C16F10
	0x03AE89E0 MOV W1, W20
	0x03AE89E4 MOV X2, X19
	0x03AE89E8 MOV X3, X24
	0x03AE89EC MOV X23, X0
	0x03AE89F0 BL 0x3ADB950
	0x03AE89F4 STR X23, [X21]
	0x03AE89F8 LDR X0, [X19 + 0xC0]
	0x03AE89FC CBZ X0, 0x3AE8BDC
	0x03AE8A00 ADRP X9, 0x670000
	0x03AE8A04 LDR X9, [X9 + 0xC20]
	0x03AE8A08 LDR W10, [X0 + 0x1C]
	0x03AE8A0C LDR X8, [X0 + 0x10]
	0x03AE8A10 LDR X9, [X9]
	0x03AE8A14 ADD W10, W10, 0x1
	0x03AE8A18 STR W10, [X0 + 0x1C]
	0x03AE8A1C CBZ X8, 0x3AE8BDC
	0x03AE8A20 LDRSW X10, [X0 + 0x18]
	0x03AE8A24 LDR W11, [X8 + 0x18]
	0x03AE8A28 CMP W10, W11
	0x03AE8A2C B.CS 0x3AE8A44
	0x03AE8A30 ADD W9, W10, 0x1
	0x03AE8A34 ADD X8, X8, X10, 0x3, LSL
	0x03AE8A38 STR W9, [X0 + 0x18]
	0x03AE8A3C STR X23, [X8 + 0x20]
	0x03AE8A40 B 0x3AE8A58
	0x03AE8A44 LDR X8, [X9 + 0x20]
	0x03AE8A48 MOV X1, X23
	0x03AE8A4C LDR X8, [X8 + 0xC0]
	0x03AE8A50 LDR X2, [X8 + 0x70]
	0x03AE8A54 BL 0x301BF90
	0x03AE8A58 LDR X0, [X19 + 0xC8]
	0x03AE8A5C CBZ X0, 0x3AE8BDC
	0x03AE8A60 ADRP X8, 0x670000
	0x03AE8A64 LDR X2, [X21]
	0x03AE8A68 LDR X8, [X8 + 0xCD0]
	0x03AE8A6C MOV W1, W20
	0x03AE8A70 LDR X3, [X8]
	0x03AE8A74 BL 0x2B0F05C
	0x03AE8A78 LDR X0, [X19 + 0x1D8]
	0x03AE8A7C CBZ X0, 0x3AE8BDC
	0x03AE8A80 ADRP X20, 0x611000
	0x03AE8A84 LDR X20, [X20 + 0x1D0]
	0x03AE8A88 LDR W10, [X0 + 0x1C]
	0x03AE8A8C LDR X8, [X0 + 0x10]
	0x03AE8A90 LDR X9, [X20]
	0x03AE8A94 ADD W10, W10, 0x1
	0x03AE8A98 STR W10, [X0 + 0x1C]
	0x03AE8A9C CBZ X8, 0x3AE8BDC
	0x03AE8AA0 LDRSW X10, [X0 + 0x18]
	0x03AE8AA4 LDR W11, [X8 + 0x18]
	0x03AE8AA8 CMP W10, W11
	0x03AE8AAC B.CS 0x3AE8AC4
	0x03AE8AB0 ADD W9, W10, 0x1
	0x03AE8AB4 ADD X8, X8, X10, 0x2, LSL
	0x03AE8AB8 STR W9, [X0 + 0x18]
	0x03AE8ABC STR W22, [X8 + 0x20]
	0x03AE8AC0 B 0x3AE8AD8
	0x03AE8AC4 LDR X8, [X9 + 0x20]
	0x03AE8AC8 MOV W1, W22
	0x03AE8ACC LDR X8, [X8 + 0xC0]
	0x03AE8AD0 LDR X2, [X8 + 0x70]
	0x03AE8AD4 BL 0x30C1698
	0x03AE8AD8 LDR X0, [X19 + 0x1E0]
	0x03AE8ADC CBZ X0, 0x3AE8BDC
	0x03AE8AE0 LDR W10, [X0 + 0x1C]
	0x03AE8AE4 LDR X8, [X0 + 0x10]
	0x03AE8AE8 LDR X9, [X20]
	0x03AE8AEC ADD W10, W10, 0x1
	0x03AE8AF0 STR W10, [X0 + 0x1C]
	0x03AE8AF4 CBZ X8, 0x3AE8BDC
	0x03AE8AF8 LDRSW X10, [X0 + 0x18]
	0x03AE8AFC LDR W11, [X8 + 0x18]
	0x03AE8B00 CMP W10, W11
	0x03AE8B04 B.CS 0x3AE8B1C
	0x03AE8B08 ADD W9, W10, 0x1
	0x03AE8B0C ADD X8, X8, X10, 0x2, LSL
	0x03AE8B10 STR W9, [X0 + 0x18]
	0x03AE8B14 STR W22, [X8 + 0x20]
	0x03AE8B18 B 0x3AE8B30
	0x03AE8B1C LDR X8, [X9 + 0x20]
	0x03AE8B20 MOV W1, W22
	0x03AE8B24 LDR X8, [X8 + 0xC0]
	0x03AE8B28 LDR X2, [X8 + 0x70]
	0x03AE8B2C BL 0x30C1698
	0x03AE8B30 MOV X0, X31
	0x03AE8B34 BL 0x3B13DE0
	0x03AE8B38 TBZ X0, 0x0, 0x3AE8B5C
	0x03AE8B3C ADRP X8, 0x670000
	0x03AE8B40 LDR X8, [X8 + 0x578]
	0x03AE8B44 LDR X0, [X8]
	0x03AE8B48 LDR W8, [X0 + 0xE0]
	0x03AE8B4C CBNZ W8, 0x3AE8B54
	0x03AE8B50 BL 0x1C16DFC
	0x03AE8B54 MOV X0, X19
	0x03AE8B58 BL 0x3AE5F54
	0x03AE8B5C LDR X0, [X19 + 0x1C8]
	0x03AE8B60 CBZ X0, 0x3AE8BDC
	0x03AE8B64 LDR W10, [X0 + 0x1C]
	0x03AE8B68 LDR X1, [X31 + 0x8]
	0x03AE8B6C LDR X8, [X0 + 0x10]
	0x03AE8B70 LDR X9, [X25]
	0x03AE8B74 ADD W10, W10, 0x1
	0x03AE8B78 STR W10, [X0 + 0x1C]
	0x03AE8B7C CBZ X8, 0x3AE8BDC
	0x03AE8B80 LDRSW X10, [X0 + 0x18]
	0x03AE8B84 LDR W11, [X8 + 0x18]
	0x03AE8B88 CMP W10, W11
	0x03AE8B8C B.CS 0x3AE8BA4
	0x03AE8B90 ADD W9, W10, 0x1
	0x03AE8B94 ADD X8, X8, X10, 0x3, LSL
	0x03AE8B98 STR W9, [X0 + 0x18]
	0x03AE8B9C STR X1, [X8 + 0x20]
	0x03AE8BA0 B 0x3AE8BB4
	0x03AE8BA4 LDR X8, [X9 + 0x20]
	0x03AE8BA8 LDR X8, [X8 + 0xC0]
	0x03AE8BAC LDR X2, [X8 + 0x70]
	0x03AE8BB0 BL 0x301BF90
	0x03AE8BB4 ADRP X8, 0x670000
	0x03AE8BB8 LDR X8, [X8 + 0x578]
	0x03AE8BBC LDR X0, [X8]
	0x03AE8BC0 LDR W8, [X0 + 0xE0]
	0x03AE8BC4 CBNZ W8, 0x3AE8BCC
	0x03AE8BC8 BL 0x1C16DFC
	0x03AE8BCC MOV X0, X19
	0x03AE8BD0 BL 0x3AE64FC
	0x03AE8BD4 MOVZ W0, 0x1
	0x03AE8BD8 B 0x3AE8768
	0x03AE8BDC BL 0x1C16F20
	0x03AE8BE0 STR X30, [X31 - 0x20]!
	0x03AE8BE4 STP X20, X19, [X31 + 0x10]
	0x03AE8BE8 ADRP X20, 0x8FA000
	0x03AE8BEC LDRB W8, [X20 + 0x5AD]
	0x03AE8BF0 MOV X19, X0
	0x03AE8BF4 TBNZ X8, 0x0, 0x3AE8C18
	0x03AE8BF8 ADRP X0, 0x670000
	0x03AE8BFC LDR X0, [X0 + 0xBC0]
	0x03AE8C00 BL 0x1C16CF4
	0x03AE8C04 ADRP X0, 0x670000
	0x03AE8C08 LDR X0, [X0 + 0xCC0]
	0x03AE8C0C BL 0x1C16CF4
	0x03AE8C10 MOVZ W8, 0x1
	0x03AE8C14 STRB W8, [X20 + 0x5AD]
	0x03AE8C18 LDR X8, [X19 + 0x1C8]
	0x03AE8C1C CBZ X8, 0x3AE8D50
	0x03AE8C20 LDR W8, [X8 + 0x18]
	0x03AE8C24 CBZ W8, 0x3AE8D44
	0x03AE8C28 LDR X8, [X19 + 0xD8]
	0x03AE8C2C CBZ X8, 0x3AE8D50
	0x03AE8C30 LDRSW X9, [X19 + 0xE0]
	0x03AE8C34 LDR W10, [X8 + 0x18]
	0x03AE8C38 CMP W9, W10
	0x03AE8C3C B.CS 0x3AE8D54
	0x03AE8C40 ADD X8, X8, X9, 0x3, LSL
	0x03AE8C44 LDR X0, [X8 + 0x20]
	0x03AE8C48 CBZ X0, 0x3AE8D50
	0x03AE8C4C LDR X8, [X0]
	0x03AE8C50 LDP X9, X1, [X8 + 0x188]
	0x03AE8C54 BLR X9
	0x03AE8C58 CBZ W0, 0x3AE8C90
	0x03AE8C5C LDR X8, [X19 + 0xD8]
	0x03AE8C60 CBZ X8, 0x3AE8D50
	0x03AE8C64 LDRSW X9, [X19 + 0xE0]
	0x03AE8C68 LDR W10, [X8 + 0x18]
	0x03AE8C6C CMP W9, W10
	0x03AE8C70 B.CS 0x3AE8D54
	0x03AE8C74 ADD X8, X8, X9, 0x3, LSL
	0x03AE8C78 LDR X0, [X8 + 0x20]
	0x03AE8C7C CBZ X0, 0x3AE8D50
	0x03AE8C80 LDR X8, [X0]
	0x03AE8C84 LDP X9, X1, [X8 + 0x1A8]
	0x03AE8C88 BLR X9
	0x03AE8C8C CBNZ W0, 0x3AE8D08
	0x03AE8C90 LDR X8, [X19 + 0xD8]
	0x03AE8C94 CBZ X8, 0x3AE8D50
	0x03AE8C98 LDRSW X9, [X19 + 0xE0]
	0x03AE8C9C LDR W10, [X8 + 0x18]
	0x03AE8CA0 CMP W9, W10
	0x03AE8CA4 B.CS 0x3AE8D54
	0x03AE8CA8 ADD X8, X8, X9, 0x3, LSL
	0x03AE8CAC LDR X0, [X8 + 0x20]
	0x03AE8CB0 CBZ X0, 0x3AE8D50
	0x03AE8CB4 LDR W2, [X19 + 0x10C]
	0x03AE8CB8 LDR W1, [X19 + 0x108]
	0x03AE8CBC MOV X3, X31
	0x03AE8CC0 BL 0x3C1C644
	0x03AE8CC4 LDR X8, [X19 + 0xD8]
	0x03AE8CC8 CBZ X8, 0x3AE8D50
	0x03AE8CCC LDRSW X9, [X19 + 0xE0]
	0x03AE8CD0 LDR W10, [X8 + 0x18]
	0x03AE8CD4 CMP W9, W10
	0x03AE8CD8 B.CS 0x3AE8D54
	0x03AE8CDC ADRP X10, 0x670000
	0x03AE8CE0 LDR X10, [X10 + 0xBC0]
	0x03AE8CE4 ADD X8, X8, X9, 0x3, LSL
	0x03AE8CE8 LDR X20, [X8 + 0x20]
	0x03AE8CEC LDR X0, [X10]
	0x03AE8CF0 LDR W9, [X0 + 0xE0]
	0x03AE8CF4 CBNZ W9, 0x3AE8CFC
	0x03AE8CF8 BL 0x1C16DFC
	0x03AE8CFC MOV X0, X20
	0x03AE8D00 MOV X1, X31
	0x03AE8D04 BL 0x3C9E1E0
	0x03AE8D08 LDR X8, [X19 + 0xD8]
	0x03AE8D0C CBZ X8, 0x3AE8D50
	0x03AE8D10 LDRSW X9, [X19 + 0xE0]
	0x03AE8D14 LDR W10, [X8 + 0x18]
	0x03AE8D18 CMP W9, W10
	0x03AE8D1C B.CS 0x3AE8D54
	0x03AE8D20 ADD X8, X8, X9, 0x3, LSL
	0x03AE8D24 LDR X0, [X8 + 0x20]
	0x03AE8D28 CBZ X0, 0x3AE8D50
	0x03AE8D2C LDP X20, X19, [X31 + 0x10]
	0x03AE8D30 MOV W1, W31
	0x03AE8D34 MOV W2, W31
	0x03AE8D38 MOV X3, X31
	0x03AE8D3C LDR X30, [X31], #0x20
	0x03AE8D40 B 0x3C1C4B4
	0x03AE8D44 LDP X20, X19, [X31 + 0x10]
	0x03AE8D48 LDR X30, [X31], #0x20
	0x03AE8D4C RET
	0x03AE8D50 BL 0x1C16F20
	0x03AE8D54 BL 0x1C16F28
	0x03AE8D58 STR X30, [X31 - 0x40]!
	0x03AE8D5C STP X24, X23, [X31 + 0x10]
	0x03AE8D60 STP X22, X21, [X31 + 0x20]
	0x03AE8D64 STP X20, X19, [X31 + 0x30]
	0x03AE8D68 ADRP X24, 0x8FA000
	0x03AE8D6C ADRP X23, 0x670000
	0x03AE8D70 ADRP X20, 0x670000
	0x03AE8D74 ADRP X22, 0x670000
	0x03AE8D78 ADRP X21, 0x670000
	0x03AE8D7C LDRB W8, [X24 + 0x5CD]
	0x03AE8D80 LDR X23, [X23 + 0xD68]
	0x03AE8D84 LDR X20, [X20 + 0xE98]
	0x03AE8D88 LDR X22, [X22 + 0xD20]
	0x03AE8D8C LDR X21, [X21 + 0xD18]
	0x03AE8D90 MOV X19, X0
	0x03AE8D94 TBNZ X8, 0x0, 0x3AE8DD0
	0x03AE8D98 ADRP X0, 0x670000
	0x03AE8D9C LDR X0, [X0 + 0xD18]
	0x03AE8DA0 BL 0x1C16CF4
	0x03AE8DA4 ADRP X0, 0x670000
	0x03AE8DA8 LDR X0, [X0 + 0xD20]
	0x03AE8DAC BL 0x1C16CF4
	0x03AE8DB0 ADRP X0, 0x670000
	0x03AE8DB4 LDR X0, [X0 + 0xE98]
	0x03AE8DB8 BL 0x1C16CF4
	0x03AE8DBC ADRP X0, 0x670000
	0x03AE8DC0 LDR X0, [X0 + 0xD68]
	0x03AE8DC4 BL 0x1C16CF4
	0x03AE8DC8 MOVZ W8, 0x1
	0x03AE8DCC STRB W8, [X24 + 0x5CD]
	0x03AE8DD0 MOV X0, X19
	0x03AE8DD4 MOV X1, X31
	0x03AE8DD8 BL 0x33BDD8C
	0x03AE8DDC LDR X0, [X23]
	0x03AE8DE0 BL 0x1C16F10
	0x03AE8DE4 LDR X1, [X20]
	0x03AE8DE8 MOV X20, X0
	0x03AE8DEC BL 0x301B7C4
	0x03AE8DF0 STR X20, [X19 + 0x10]
	0x03AE8DF4 LDR X0, [X22]
	0x03AE8DF8 BL 0x1C16F10
	0x03AE8DFC LDR X1, [X21]
	0x03AE8E00 MOV X20, X0
	0x03AE8E04 BL 0x2B0E7A4
	0x03AE8E08 STR X20, [X19 + 0x18]
	0x03AE8E0C LDP X20, X19, [X31 + 0x30]
	0x03AE8E10 LDP X22, X21, [X31 + 0x20]
	0x03AE8E14 LDP X24, X23, [X31 + 0x10]
	0x03AE8E18 LDR X30, [X31], #0x40
	0x03AE8E1C RET
	0x03AE8E20 SUB X31, X31, 0x80
	0x03AE8E24 STR X30, [X31 + 0x60]
	0x03AE8E28 STP X20, X19, [X31 + 0x70]
	0x03AE8E2C MOV X19, X1
	0x03AE8E30 MOV X1, X31
	0x03AE8E34 MOV X20, X0
	0x03AE8E38 BL 0x33BDD8C
	0x03AE8E3C ADD X8, X31, 0x48
	0x03AE8E40 MOV X0, X19
	0x03AE8E44 MOV X1, X31
	0x03AE8E48 BL 0x3C9E6D0
	0x03AE8E4C LDUR V0, [X31 + 0x48]
	0x03AE8E50 LDR W8, [X31 + 0x58]
	0x03AE8E54 ADD X0, X31, 0x48
	0x03AE8E58 ADD X1, X31, 0x30
	0x03AE8E5C STP X31, X31, [X31 + 0x48]
	0x03AE8E60 STR V0, [X31 + 0x3]
	0x03AE8E64 STR W8, [X31 + 0x40]
	0x03AE8E68 STR W31, [X31 + 0x58]
	0x03AE8E6C BL 0x3AEBF80
	0x03AE8E70 LDR W8, [X31 + 0x58]
	0x03AE8E74 LDUR V0, [X31 + 0x48]
	0x03AE8E78 MOV X0, X19
	0x03AE8E7C MOV X1, X31
	0x03AE8E80 STR W8, [X20 + 0x20]
	0x03AE8E84 ADD X8, X31, 0x18
	0x03AE8E88 STR V0, [X20 + 0x1]
	0x03AE8E8C BL 0x3C9E6E4
	0x03AE8E90 LDUR V0, [X31 + 0x18]
	0x03AE8E94 LDR W8, [X31 + 0x28]
	0x03AE8E98 ADD X0, X31, 0x18
	0x03AE8E9C ADD X1, X31, 0x0
	0x03AE8EA0 STP X31, X31, [X31 + 0x18]
	0x03AE8EA4 STR V0, [X31]
	0x03AE8EA8 STR W8, [X31 + 0x10]
	0x03AE8EAC STR W31, [X31 + 0x28]
	0x03AE8EB0 BL 0x3AEBF80
	0x03AE8EB4 LDUR V0, [X31 + 0x18]
	0x03AE8EB8 LDR W8, [X31 + 0x28]
	0x03AE8EBC LDR X30, [X31 + 0x60]
	0x03AE8EC0 STUR V0, [X20 + 0x24]
	0x03AE8EC4 STP W8, W31, [X20 + 0x34]
	0x03AE8EC8 LDP X20, X19, [X31 + 0x70]
	0x03AE8ECC ADD X31, X31, 0x80
	0x03AE8ED0 RET
	0x03AE8ED4 SUB X31, X31, 0xE0
	0x03AE8ED8 STR X30, [X31 + 0x80]
	0x03AE8EDC STP X28, X27, [X31 + 0x90]
	0x03AE8EE0 STP X26, X25, [X31 + 0xA0]
	0x03AE8EE4 STP X24, X23, [X31 + 0xB0]
	0x03AE8EE8 STP X22, X21, [X31 + 0xC0]
	0x03AE8EEC STP X20, X19, [X31 + 0xD0]
	0x03AE8EF0 ADRP X22, 0x8FA000
	0x03AE8EF4 ADRP X21, 0x670000
	0x03AE8EF8 LDRB W8, [X22 + 0x5AF]
	0x03AE8EFC LDR X21, [X21 + 0xBC0]
	0x03AE8F00 MOV X20, X1
	0x03AE8F04 MOV X19, X0
	0x03AE8F08 TBNZ X8, 0x0, 0x3AE8F5C
	0x03AE8F0C ADRP X0, 0x670000
	0x03AE8F10 LDR X0, [X0 + 0xD00]
	0x03AE8F14 BL 0x1C16CF4
	0x03AE8F18 ADRP X0, 0x670000
	0x03AE8F1C LDR X0, [X0 + 0xD10]
	0x03AE8F20 BL 0x1C16CF4
	0x03AE8F24 ADRP X0, 0x670000
	0x03AE8F28 LDR X0, [X0 + 0xBC0]
	0x03AE8F2C BL 0x1C16CF4
	0x03AE8F30 ADRP X0, 0x670000
	0x03AE8F34 LDR X0, [X0 + 0xD50]
	0x03AE8F38 BL 0x1C16CF4
	0x03AE8F3C ADRP X0, 0x670000
	0x03AE8F40 LDR X0, [X0 + 0xD70]
	0x03AE8F44 BL 0x1C16CF4
	0x03AE8F48 ADRP X0, 0x670000
	0x03AE8F4C LDR X0, [X0 + 0xD78]
	0x03AE8F50 BL 0x1C16CF4
	0x03AE8F54 MOVZ W8, 0x1
	0x03AE8F58 STRB W8, [X22 + 0x5AF]
	0x03AE8F5C LDR X0, [X21]
	0x03AE8F60 STP X31, X31, [X31 + 0x60]
	0x03AE8F64 STR W31, [X31 + 0x70]
	0x03AE8F68 LDR W8, [X0 + 0xE0]
	0x03AE8F6C CBNZ W8, 0x3AE8F74
	0x03AE8F70 BL 0x1C16DFC
	0x03AE8F74 MOV X0, X20
	0x03AE8F78 MOV X1, X31
	0x03AE8F7C BL 0x3C9DE88
	0x03AE8F80 CBZ X0, 0x3AE9190
	0x03AE8F84 LDR X8, [X0 + 0x18]
	0x03AE8F88 MOV X20, X0
	0x03AE8F8C CBZ X8, 0x3AE9190
	0x03AE8F90 LDR X9, [X19 + 0x128]
	0x03AE8F94 CBNZ X9, 0x3AE8FB8
	0x03AE8F98 ADRP X8, 0x670000
	0x03AE8F9C LDR X8, [X8 + 0xD70]
	0x03AE8FA0 LDR X0, [X8]
	0x03AE8FA4 BL 0x1C16F10
	0x03AE8FA8 MOV X21, X0
	0x03AE8FAC BL 0x3AE8D58
	0x03AE8FB0 STR X21, [X19 + 0x128]
	0x03AE8FB4 LDR W8, [X20 + 0x18]
	0x03AE8FB8 CMP W8, 0x1
	0x03AE8FBC B.LT 0x3AE9190
	0x03AE8FC0 ADRP X25, 0x670000
	0x03AE8FC4 ADRP X26, 0x670000
	0x03AE8FC8 ADRP X27, 0x670000
	0x03AE8FCC ADRP X28, 0x670000
	0x03AE8FD0 LDR X25, [X25 + 0xD10]
	0x03AE8FD4 LDR X26, [X26 + 0xD78]
	0x03AE8FD8 LDR X27, [X27 + 0xD50]
	0x03AE8FDC LDR X28, [X28 + 0xD00]
	0x03AE8FE0 MOV X24, X31
	0x03AE8FE4 ADD X21, X20, 0x20
	0x03AE8FE8 CMP X24, W8, UXTW
	0x03AE8FEC B.CS 0x3AE91B4
	0x03AE8FF0 ADD X8, X31, 0x30
	0x03AE8FF4 MOV X0, X21
	0x03AE8FF8 MOV X1, X31
	0x03AE8FFC BL 0x3C9E6D0
	0x03AE9000 LDR V0, [X31 + 0x3]
	0x03AE9004 LDR W8, [X31 + 0x40]
	0x03AE9008 ADD X0, X31, 0x60
	0x03AE900C MOV X1, X31
	0x03AE9010 STR V0, [X31 + 0x6]
	0x03AE9014 STR W8, [X31 + 0x70]
	0x03AE9018 BL 0x3C9E52C
	0x03AE901C CBZ W0, 0x3AE9190
	0x03AE9020 LDR W8, [X20 + 0x18]
	0x03AE9024 CMP X24, X8
	0x03AE9028 B.CS 0x3AE91B4
	0x03AE902C ADD X8, X31, 0x30
	0x03AE9030 MOV X0, X21
	0x03AE9034 MOV X1, X31
	0x03AE9038 BL 0x3C9E6E4
	0x03AE903C LDR V0, [X31 + 0x3]
	0x03AE9040 LDR W8, [X31 + 0x40]
	0x03AE9044 ADD X0, X31, 0x60
	0x03AE9048 MOV X1, X31
	0x03AE904C STR V0, [X31 + 0x6]
	0x03AE9050 STR W8, [X31 + 0x70]
	0x03AE9054 BL 0x3C9E52C
	0x03AE9058 LDR W8, [X20 + 0x18]
	0x03AE905C CMP X24, X8
	0x03AE9060 B.CS 0x3AE91B4
	0x03AE9064 MOV W22, W0
	0x03AE9068 ADD X8, X31, 0x30
	0x03AE906C MOV X0, X21
	0x03AE9070 MOV X1, X31
	0x03AE9074 BL 0x3C9E6D0
	0x03AE9078 LDR V0, [X31 + 0x3]
	0x03AE907C LDR W8, [X31 + 0x40]
	0x03AE9080 ADD X0, X31, 0x60
	0x03AE9084 MOV X1, X31
	0x03AE9088 STR V0, [X31 + 0x6]
	0x03AE908C STR W8, [X31 + 0x70]
	0x03AE9090 BL 0x3C9E52C
	0x03AE9094 LDR X8, [X19 + 0x128]
	0x03AE9098 CBZ X8, 0x3AE91B0
	0x03AE909C LDR X8, [X8 + 0x18]
	0x03AE90A0 CBZ X8, 0x3AE91B0
	0x03AE90A4 LDR X2, [X25]
	0x03AE90A8 ORR W22, W0, W22, 0x10
	0x03AE90AC MOV X0, X8
	0x03AE90B0 MOV W1, W22
	0x03AE90B4 BL 0x2B0F250
	0x03AE90B8 TBNZ X0, 0x0, 0x3AE917C
	0x03AE90BC LDR W8, [X20 + 0x18]
	0x03AE90C0 CMP X24, X8
	0x03AE90C4 B.CS 0x3AE91B4
	0x03AE90C8 LDUR V0, [X21 + 0x1C]
	0x03AE90CC LDP V2, V1, [X21]
	0x03AE90D0 LDR X0, [X26]
	0x03AE90D4 STUR V0, [X31 + 0x4C]
	0x03AE90D8 STP V2, V1, [X31 + 0x30]
	0x03AE90DC BL 0x1C16F10
	0x03AE90E0 LDP V0, V1, [X31 + 0x30]
	0x03AE90E4 LDUR V2, [X31 + 0x4C]
	0x03AE90E8 ADD X1, X31, 0x0
	0x03AE90EC MOV X23, X0
	0x03AE90F0 STP V0, V1, [X31]
	0x03AE90F4 STUR V2, [X31 + 0x1C]
	0x03AE90F8 BL 0x3AE8E20
	0x03AE90FC LDR X8, [X19 + 0x128]
	0x03AE9100 CBZ X8, 0x3AE91B0
	0x03AE9104 LDR X0, [X8 + 0x10]
	0x03AE9108 CBZ X0, 0x3AE91B0
	0x03AE910C LDR W10, [X0 + 0x1C]
	0x03AE9110 LDR X8, [X0 + 0x10]
	0x03AE9114 LDR X9, [X27]
	0x03AE9118 ADD W10, W10, 0x1
	0x03AE911C STR W10, [X0 + 0x1C]
	0x03AE9120 CBZ X8, 0x3AE91B0
	0x03AE9124 LDRSW X10, [X0 + 0x18]
	0x03AE9128 LDR W11, [X8 + 0x18]
	0x03AE912C CMP W10, W11
	0x03AE9130 B.CS 0x3AE9148
	0x03AE9134 ADD W9, W10, 0x1
	0x03AE9138 ADD X8, X8, X10, 0x3, LSL
	0x03AE913C STR W9, [X0 + 0x18]
	0x03AE9140 STR X23, [X8 + 0x20]
	0x03AE9144 B 0x3AE915C
	0x03AE9148 LDR X8, [X9 + 0x20]
	0x03AE914C MOV X1, X23
	0x03AE9150 LDR X8, [X8 + 0xC0]
	0x03AE9154 LDR X2, [X8 + 0x70]
	0x03AE9158 BL 0x301BF90
	0x03AE915C LDR X8, [X19 + 0x128]
	0x03AE9160 CBZ X8, 0x3AE91B0
	0x03AE9164 LDR X0, [X8 + 0x18]
	0x03AE9168 CBZ X0, 0x3AE91B0
	0x03AE916C LDR X3, [X28]
	0x03AE9170 MOV W1, W22
	0x03AE9174 MOV X2, X23
	0x03AE9178 BL 0x2B0F05C
	0x03AE917C LDR W8, [X20 + 0x18]
	0x03AE9180 ADD X24, X24, 0x1
	0x03AE9184 ADD X21, X21, 0x2C
	0x03AE9188 CMP X24, W8, SXTW
	0x03AE918C B.LT 0x3AE8FE8
	0x03AE9190 LDP X20, X19, [X31 + 0xD0]
	0x03AE9194 LDP X22, X21, [X31 + 0xC0]
	0x03AE9198 LDP X24, X23, [X31 + 0xB0]
	0x03AE919C LDP X26, X25, [X31 + 0xA0]
	0x03AE91A0 LDP X28, X27, [X31 + 0x90]
	0x03AE91A4 LDR X30, [X31 + 0x80]
	0x03AE91A8 ADD X31, X31, 0xE0
	0x03AE91AC RET
	0x03AE91B0 BL 0x1C16F20
	0x03AE91B4 BL 0x1C16F28
	0x03AE91B8 RET
	0x03AE91BC RET
	0x03AE91C0 STR X30, [X31 - 0x20]!
	0x03AE91C4 STP X20, X19, [X31 + 0x10]
	0x03AE91C8 MOV W19, W1
	0x03AE91CC MOV X20, X0
	0x03AE91D0 BL 0x3AE91F0
	0x03AE91D4 AND W1, W19, 0x1
	0x03AE91D8 MOV X0, X20
	0x03AE91DC BL 0x3AE9400
	0x03AE91E0 MOV X0, X20
	0x03AE91E4 LDP X20, X19, [X31 + 0x10]
	0x03AE91E8 LDR X30, [X31], #0x20
	0x03AE91EC B 0x3AE1A88
	0x03AE91F0 SUB X31, X31, 0x30
	0x03AE91F4 STP X30, X21, [X31 + 0x10]
	0x03AE91F8 STP X20, X19, [X31 + 0x20]
	0x03AE91FC ADRP X20, 0x8F9000
	0x03AE9200 LDRB W8, [X20 + 0x5B1]
	0x03AE9204 MOV X19, X0
	0x03AE9208 TBNZ X8, 0x0, 0x3AE9250
	0x03AE920C ADRP X0, 0x66F000
	0x03AE9210 LDR X0, [X0 + 0xBC8]
	0x03AE9214 BL 0x1C16CF4
	0x03AE9218 ADRP X0, 0x66F000
	0x03AE921C LDR X0, [X0 + 0xE90]
	0x03AE9220 BL 0x1C16CF4
	0x03AE9224 ADRP X0, 0x66F000
	0x03AE9228 LDR X0, [X0 + 0xC28]
	0x03AE922C BL 0x1C16CF4
	0x03AE9230 ADRP X0, 0x66F000
	0x03AE9234 LDR X0, [X0 + 0xEA0]
	0x03AE9238 BL 0x1C16CF4
	0x03AE923C ADRP X0, 0x66F000
	0x03AE9240 LDR X0, [X0 + 0xC30]
	0x03AE9244 BL 0x1C16CF4
	0x03AE9248 MOVZ W8, 0x1
	0x03AE924C STRB W8, [X20 + 0x5B1]
	0x03AE9250 LDR X8, [X19 + 0xB0]
	0x03AE9254 CBZ X8, 0x3AE927C
	0x03AE9258 LDP W2, W9, [X8 + 0x18]
	0x03AE925C ADD W9, W9, 0x1
	0x03AE9260 CMP W2, 0x1
	0x03AE9264 STP W31, W9, [X8 + 0x18]
	0x03AE9268 B.LT 0x3AE927C
	0x03AE926C LDR X0, [X8 + 0x10]
	0x03AE9270 MOV W1, W31
	0x03AE9274 MOV X3, X31
	0x03AE9278 BL 0x339FA34
	0x03AE927C LDR X8, [X19 + 0xC0]
	0x03AE9280 CBZ X8, 0x3AE92A8
	0x03AE9284 LDP W2, W9, [X8 + 0x18]
	0x03AE9288 ADD W9, W9, 0x1
	0x03AE928C CMP W2, 0x1
	0x03AE9290 STP W31, W9, [X8 + 0x18]
	0x03AE9294 B.LT 0x3AE92A8
	0x03AE9298 LDR X0, [X8 + 0x10]
	0x03AE929C MOV W1, W31
	0x03AE92A0 MOV X3, X31
	0x03AE92A4 BL 0x339FA34
	0x03AE92A8 LDR X8, [X19 + 0xE8]
	0x03AE92AC CBZ X8, 0x3AE92BC
	0x03AE92B0 LDR W9, [X8 + 0x1C]
	0x03AE92B4 ADD W9, W9, 0x1
	0x03AE92B8 STP W31, W9, [X8 + 0x18]
	0x03AE92BC LDR X20, [X19 + 0xF0]
	0x03AE92C0 CBZ X20, 0x3AE9360
	0x03AE92C4 LDR W9, [X20 + 0x1C]
	0x03AE92C8 LDR W8, [X19 + 0x114]
	0x03AE92CC ADRP X21, 0x66F000
	0x03AE92D0 LDR X21, [X21 + 0xBC8]
	0x03AE92D4 ADD W9, W9, 0x1
	0x03AE92D8 MOVZ W10, 0x1
	0x03AE92DC STP W31, W9, [X20 + 0x18]
	0x03AE92E0 BIC W8, W10, W8, 0x4
	0x03AE92E4 LDR W9, [X19 + 0x108]
	0x03AE92E8 LDR W10, [X19 + 0x10C]
	0x03AE92EC ADD X0, X31, 0x0
	0x03AE92F0 MOV W1, W31
	0x03AE92F4 SUB W3, W9, W8
	0x03AE92F8 SUB W4, W10, W8
	0x03AE92FC MOV W2, W31
	0x03AE9300 MOV X5, X31
	0x03AE9304 STP X31, X31, [X31]
	0x03AE9308 BL 0x3C9C108
	0x03AE930C LDR W10, [X20 + 0x1C]
	0x03AE9310 LDP X1, X2, [X31]
	0x03AE9314 LDR X8, [X20 + 0x10]
	0x03AE9318 LDR X9, [X21]
	0x03AE931C ADD W10, W10, 0x1
	0x03AE9320 STR W10, [X20 + 0x1C]
	0x03AE9324 CBZ X8, 0x3AE93FC
	0x03AE9328 LDRSW X10, [X20 + 0x18]
	0x03AE932C LDR W11, [X8 + 0x18]
	0x03AE9330 CMP W10, W11
	0x03AE9334 B.CS 0x3AE934C
	0x03AE9338 ADD W9, W10, 0x1
	0x03AE933C ADD X8, X8, X10, 0x4, LSL
	0x03AE9340 STR W9, [X20 + 0x18]
	0x03AE9344 STP X1, X2, [X8 + 0x20]
	0x03AE9348 B 0x3AE9360
	0x03AE934C LDR X8, [X9 + 0x20]
	0x03AE9350 MOV X0, X20
	0x03AE9354 LDR X8, [X8 + 0xC0]
	0x03AE9358 LDR X3, [X8 + 0x70]
	0x03AE935C BL 0x2FC569C
	0x03AE9360 LDR X8, [X19 + 0x1C8]
	0x03AE9364 CBZ X8, 0x3AE938C
	0x03AE9368 LDP W2, W9, [X8 + 0x18]
	0x03AE936C ADD W9, W9, 0x1
	0x03AE9370 CMP W2, 0x1
	0x03AE9374 STP W31, W9, [X8 + 0x18]
	0x03AE9378 B.LT 0x3AE938C
	0x03AE937C LDR X0, [X8 + 0x10]
	0x03AE9380 MOV W1, W31
	0x03AE9384 MOV X3, X31
	0x03AE9388 BL 0x339FA34
	0x03AE938C LDR X8, [X19 + 0x1D0]
	0x03AE9390 CBZ X8, 0x3AE93B8
	0x03AE9394 LDP W2, W9, [X8 + 0x18]
	0x03AE9398 ADD W9, W9, 0x1
	0x03AE939C CMP W2, 0x1
	0x03AE93A0 STP W31, W9, [X8 + 0x18]
	0x03AE93A4 B.LT 0x3AE93B8
	0x03AE93A8 LDR X0, [X8 + 0x10]
	0x03AE93AC MOV W1, W31
	0x03AE93B0 MOV X3, X31
	0x03AE93B4 BL 0x339FA34
	0x03AE93B8 LDR X8, [X19 + 0x128]
	0x03AE93BC CBZ X8, 0x3AE93EC
	0x03AE93C0 LDR X8, [X8 + 0x10]
	0x03AE93C4 CBZ X8, 0x3AE93EC
	0x03AE93C8 LDP W2, W9, [X8 + 0x18]
	0x03AE93CC ADD W9, W9, 0x1
	0x03AE93D0 CMP W2, 0x1
	0x03AE93D4 STP W31, W9, [X8 + 0x18]
	0x03AE93D8 B.LT 0x3AE93EC
	0x03AE93DC LDR X0, [X8 + 0x10]
	0x03AE93E0 MOV W1, W31
	0x03AE93E4 MOV X3, X31
	0x03AE93E8 BL 0x339FA34
	0x03AE93EC LDP X20, X19, [X31 + 0x20]
	0x03AE93F0 LDP X30, X21, [X31 + 0x10]
	0x03AE93F4 ADD X31, X31, 0x30
	0x03AE93F8 RET
	0x03AE93FC BL 0x1C16F20
	0x03AE9400 STP X30, X25, [X31 - 0x40]!
	0x03AE9404 STP X24, X23, [X31 + 0x10]
	0x03AE9408 STP X22, X21, [X31 + 0x20]
	0x03AE940C STP X20, X19, [X31 + 0x30]
	0x03AE9410 ADRP X20, 0x8F9000
	0x03AE9414 LDRB W8, [X20 + 0x5B2]
	0x03AE9418 MOV W21, W1
	0x03AE941C MOV X19, X0
	0x03AE9420 TBNZ X8, 0x0, 0x3AE948C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x8FB000
	015 Move W8, [X21+1448]
	016 Move W25, W3
	017 Move X19, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {98}
	024 Move X0, 0x60C000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x671000
	028 Move X0, [X0+3280]
	029 Call 0x1C17CF4
	030 Move X0, 0x671000
	031 Move X0, [X0+3224]
	032 Call 0x1C17CF4
	033 Move X0, 0x671000
	034 Move X0, [X0+3208]
	035 Call 0x1C17CF4
	036 Move X0, 0x671000
	037 Move X0, [X0+3240]
	038 Call 0x1C17CF4
	039 Move X0, 0x671000
	040 Move X0, [X0+3656]
	041 Call 0x1C17CF4
	042 Move X0, 0x671000
	043 Move X0, [X0+3216]
	044 Call 0x1C17CF4
	045 Move X0, 0x671000
	046 Move X0, [X0+3008]
	047 Call 0x1C17CF4
	048 Move X0, 0x667000
	049 Move X0, [X0+2088]
	050 Call 0x1C17CF4
	051 Move X0, 0x671000
	052 Move X0, [X0+3672]
	053 Call 0x1C17CF4
	054 Move X0, 0x671000
	055 Move X0, [X0+3088]
	056 Call 0x1C17CF4
	057 Move X0, 0x612000
	058 Move X0, [X0+464]
	059 Call 0x1C17CF4
	060 Move X0, 0x671000
	061 Move X0, [X0+3104]
	062 Call 0x1C17CF4
	063 Move X0, 0x671000
	064 Move X0, [X0+3112]
	065 Call 0x1C17CF4
	066 Move X0, 0x663000
	067 Move X0, [X0+2896]
	068 Call 0x1C17CF4
	069 Move X0, 0x671000
	070 Move X0, [X0+3680]
	071 Call 0x1C17CF4
	072 Move X0, 0x671000
	073 Move X0, [X0+3312]
	074 Call 0x1C17CF4
	075 Move X0, 0x671000
	076 Move X0, [X0+2136]
	077 Call 0x1C17CF4
	078 Move X0, 0x671000
	079 Move X0, [X0+3320]
	080 Call 0x1C17CF4
	081 Move X0, 0x60E000
	082 Move X0, [X0+632]
	083 Call 0x1C17CF4
	084 Move X0, 0x671000
	085 Move X0, [X0+1456]
	086 Call 0x1C17CF4
	087 Move X0, 0x671000
	088 Move X0, [X0+3696]
	089 Call 0x1C17CF4
	090 Move X0, 0x671000
	091 Move X0, [X0+3712]
	092 Call 0x1C17CF4
	093 Move X0, 0x671000
	094 Move X0, [X0+3704]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X21+1448], W8
	098 Move X0, X22
	099 Move X1, X31
	100 Move [X31+16], X31
	101 Move [X31+24], X31
	102 Call String.IsNullOrEmpty, X0
	103 Move W21, [X20+72]
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {119}
	108 Move X0, X20
	109 Move X1, X31
	110 Call Object.get_name, X0
	111 Move X8, 0x671000
	112 Move X8, [X8+3704]
	113 Move X1, X0
	114 Move X8, [X8]
	115 Compare W21, 0
	116 JumpIfEqual {419}
	117 Move X9, 0x671000
	118 Move X9, [X9+3712]
	119 Compare W21, 0
	120 JumpIfEqual {412}
	121 Move X23, [X20+64]
	122 Add X0, X20, 80
	123 Move X1, X31
	124 Call FaceInfo.get_pointSize, X0
	125 Move X27, 0x671000
	126 Move X27, [X27+3008]
	127 Move W24, W0
	128 Move X8, [X27]
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X0, X23
	135 Move W1, W24
	136 Move X2, X31
	137 Call FontEngine.LoadFontFace, X0, X1
	138 Compare W0, 0
	139 JumpIfNotEqual {438}
	140 Move X8, [X20+200]
	141 Compare X8, 0
	142 JumpIfEqual {146}
	143 Move X8, [X20+184]
	144 Compare X8, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X20
	147 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	148 Move X8, [X20+488]
	149 Compare X8, 0
	150 JumpIfEqual {830}
	151 Move W9, [X8+28]
	152 Add W9, W9, 1
	153 Move [X8+24], W31
	154 Move [X8+28], W9
	155 Move X0, [X20+496]
	156 Compare X0, 0
	157 JumpIfEqual {830}
	158 Move X21, 0x671000
	159 Move X21, [X21+3672]
	160 Move X1, [X21]
	161 Call HashSet`1<UInt32>.Clear, X0
	162 Move X8, [X20+504]
	163 Compare X8, 0
	164 JumpIfEqual {830}
	165 Move W2, [X8+24]
	166 Move W9, [X8+28]
	167 Add W9, W9, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move [X8+24], W31
	170 Move [X8+28], W9
	171 Move X0, [X8+16]
	172 Move W1, W31
	173 Move X3, X31
	174 Call Array.Clear, X0, X1, X2
	175 Move X0, [X20+512]
	176 Compare X0, 0
	177 JumpIfEqual {830}
	178 Move X1, [X21]
	179 Call HashSet`1<UInt32>.Clear, X0
	180 Move X8, [X20+520]
	181 Compare X8, 0
	182 JumpIfEqual {830}
	183 Move W9, [X8+28]
	184 Add W9, W9, 1
	185 Move [X8+24], W31
	186 Move [X8+28], W9
	187 Compare X22, 0
	188 JumpIfEqual {830}
	189 Move W29, [X22+16]
	190 Move [X31+8], W25
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X31+12], W31
	193 Move X28, 0x671000
	194 Move X21, 0x667000
	195 Move X28, [X28+3208]
	196 Move X21, [X21+2088]
	197 Move W23, W31
	198 Move X0, X22
	199 Move W1, W23
	200 Move X2, X31
	201 Call String.get_Chars, X0, X1
	202 Move X8, [X20+200]
	203 Compare X8, 0
	204 JumpIfEqual {830}
	205 Move X2, [X28]
	206 And W24, W0, 0xFFFF
	207 Move X0, X8
	208 Move W1, W24
	209 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {410}
	214 Move X0, [X27]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move W0, W24
	220 Move X1, X31
	221 Call FontEngine.GetGlyphIndex, X0
	222 Move W26, W0
	223 Compare W0, 0
	224 JumpIfNotEqual {246}
	225 Move W8, 0x2011
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, [X27]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move W0, 32
	235 Move X0, [X27]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move W0, 45
	241 Move X1, X31
	242 Call FontEngine.GetGlyphIndex, X0
	243 Move W26, W0
	244 Compare W0, 0
	245 JumpIfEqual {345}
	246 Move X8, 0x671000
	247 Move X8, [X8+1456]
	248 Move X0, [X8]
	249 Call 0x1C17F10
	250 Move X1, X31
	251 Move X25, X0
	252 Call TMP_TextElement..ctor, X0
	253 Move W8, 1
	254 Move [X25+16], W8
	255 Move W8, 0x3F800000
	256 Move [X25+20], W24
	257 Move [X25+24], X31
	258 Move [X25+32], X31
	259 Move [X25+40], W26
	260 Move [X25+44], W8
	261 Move X0, [X20+184]
	262 Compare X0, 0
	263 JumpIfEqual {830}
	264 Move X8, 0x671000
	265 Move X8, [X8+3240]
	266 Move W1, W26
	267 Move X2, [X8]
	268 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {302}
	273 Move X0, [X20+184]
	274 Compare X0, 0
	275 JumpIfEqual {830}
	276 Move X8, 0x671000
	277 Move X8, [X8+3216]
	278 Move W1, W26
	279 Move X2, [X8]
	280 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	281 Move [X25+24], X20
	282 Move [X25+32], X0
	283 Move X0, [X20+192]
	284 Compare X0, 0
	285 JumpIfEqual {830}
	286 Move X9, 0x671000
	287 Move W10, [X0+28]
	288 Move X8, [X0+16]
	289 Move X9, [X9+3104]
	290 Add W10, W10, 1
	291 Move X9, [X9]
	292 Move [X0+28], W10
	293 Compare X8, 0
	294 JumpIfEqual {830}
	295 NotImplemented "Instruction LDRSW not yet implemented."
	296 Move W11, [X8+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Add W9, W10, 1
	299 Add X8, X8, X10
	300 Move [X0+24], W9
	301 Move [X8+32], X25
	302 Move X0, [X20+496]
	303 Compare X0, 0
	304 JumpIfEqual {830}
	305 Move X2, [X21]
	306 Move W1, W26
	307 Call HashSet`1<UInt32>.Add, X0, X1
	308 Move TEMP, X0
	309 And TEMP, TEMP, 1
	310 Compare TEMP, 1
	311 JumpIfNotEqual {369}
	312 Move X0, [X20+488]
	313 Compare X0, 0
	314 JumpIfEqual {830}
	315 Move X9, 0x612000
	316 Move W10, [X0+28]
	317 Move X8, [X0+16]
	318 Move X9, [X9+464]
	319 Add W10, W10, 1
	320 Move X9, [X9]
	321 Move [X0+28], W10
	322 Compare X8, 0
	323 JumpIfEqual {830}
	324 NotImplemented "Instruction LDRSW not yet implemented."
	325 Move W11, [X8+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Add W9, W10, 1
	328 Add X8, X8, X10
	329 Move [X0+24], W9
	330 Move [X8+32], W26
	331 Move X8, [X9+32]
	332 Move X1, X25
	333 Move X8, [X8+192]
	334 Move X2, [X8+112]
	335 Call List`1<Object>.AddWithResize, X0, X1
	336 Move X0, [X20+200]
	337 Compare X0, 0
	338 JumpIfEqual {830}
	339 Move X8, 0x671000
	340 Move X8, [X8+3280]
	341 Move W1, W24
	342 Move X2, X25
	343 Move X3, [X8]
	344 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	345 Move X0, [X20+520]
	346 Compare X0, 0
	347 JumpIfEqual {830}
	348 Move X9, 0x612000
	349 Move W10, [X0+28]
	350 Move X8, [X0+16]
	351 Move X9, [X9+464]
	352 Add W10, W10, 1
	353 Move X9, [X9]
	354 Move [X0+28], W10
	355 Compare X8, 0
	356 JumpIfEqual {830}
	357 NotImplemented "Instruction LDRSW not yet implemented."
	358 Move W11, [X8+24]
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Add W9, W10, 1
	361 Add X8, X8, X10
	362 Move [X0+24], W9
	363 Move [X8+32], W24
	364 Move X8, [X9+32]
	365 Move W1, W26
	366 Move X8, [X8+192]
	367 Move X2, [X8+112]
	368 Call List`1<UInt32>.AddWithResize, X0, X1
	369 Move X0, [X20+512]
	370 Compare X0, 0
	371 JumpIfEqual {830}
	372 Move X2, [X21]
	373 Move W1, W24
	374 Call HashSet`1<UInt32>.Add, X0, X1
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {410}
	379 Move X0, [X20+504]
	380 Compare X0, 0
	381 JumpIfEqual {830}
	382 Move X9, 0x671000
	383 Move W10, [X0+28]
	384 Move X8, [X0+16]
	385 Move X9, [X9+3104]
	386 Add W10, W10, 1
	387 Move X9, [X9]
	388 Move [X0+28], W10
	389 Compare X8, 0
	390 JumpIfEqual {830}
	391 NotImplemented "Instruction LDRSW not yet implemented."
	392 Move W11, [X8+24]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Add W9, W10, 1
	395 Add X8, X8, X10
	396 Move [X0+24], W9
	397 Move [X8+32], X25
	398 Move X8, [X9+32]
	399 Move X1, X25
	400 Move X8, [X8+192]
	401 Move X2, [X8+112]
	402 Call List`1<Object>.AddWithResize, X0, X1
	403 Move X8, [X9+32]
	404 Move W1, W24
	405 Move X8, [X8+192]
	406 Move X2, [X8+112]
	407 Call List`1<UInt32>.AddWithResize, X0, X1
	408 Move W8, 1
	409 Move [X31+12], W8
	410 Add W23, W23, 1
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Move X0, X20
	413 Move X1, X31
	414 Call Object.get_name, X0
	415 Move X8, 0x671000
	416 Move X8, [X8+3704]
	417 Move X1, X0
	418 Move X8, [X8]
	419 Move X9, 0x671000
	420 Move X9, [X9+3696]
	421 Move X2, [X9]
	422 Move X0, X8
	423 Move X3, X31
	424 Call String.Concat, X0, X1, X2
	425 Move X8, 0x60C000
	426 Move X8, [X8+2600]
	427 Move X21, X0
	428 Move X8, [X8]
	429 Move W9, [X8+224]
	430 Compare W9, 0
	431 JumpIfNotEqual {434}
	432 Move X0, X8
	433 Call 0x1C17DFC
	434 Move X0, X21
	435 Move X1, X20
	436 Move X2, X31
	437 Call Debug.LogWarning, X0, X1
	438 Move W8, W31
	439 Move [X19], X22
	440 Move X20, [X31+112]
	441 Move X19, [X31+120]
	442 Move X22, [X31+96]
	443 Move X21, [X31+104]
	444 Move X24, [X31+80]
	445 Move X23, [X31+88]
	446 Move X26, [X31+64]
	447 Move X25, [X31+72]
	448 Move X28, [X31+48]
	449 Move X27, [X31+56]
	450 Move X29, [X31+32]
	451 Move X30, [X31+40]
	452 And W0, W8, 1
	453 Add X31, X31, 128
	454 Return X0
	455 Move [X31+12], W31
	456 Move X8, [X20+488]
	457 Compare X8, 0
	458 JumpIfEqual {830}
	459 Move W8, [X8+24]
	460 Compare W8, 0
	461 JumpIfEqual {439}
	462 Move X8, [X20+216]
	463 Compare X8, 0
	464 JumpIfEqual {830}
	465 NotImplemented "Instruction LDRSW not yet implemented."
	466 Move W10, [X8+24]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Add X8, X8, X9
	469 Move X0, [X8+32]
	470 Compare X0, 0
	471 JumpIfEqual {830}
	472 Move X8, [X0]
	473 Move X9, [X8+392]
	474 Move X1, [X8+400]
	475 NotImplemented "Instruction BLR not yet implemented."
	476 Compare W0, 0
	477 JumpIfEqual {494}
	478 Move X8, [X20+216]
	479 Compare X8, 0
	480 JumpIfEqual {830}
	481 NotImplemented "Instruction LDRSW not yet implemented."
	482 Move W10, [X8+24]
	483 NotImplemented "Instruction CMP not yet implemented."
	484 Add X8, X8, X9
	485 Move X0, [X8+32]
	486 Compare X0, 0
	487 JumpIfEqual {830}
	488 Move X8, [X0]
	489 Move X9, [X8+424]
	490 Move X1, [X8+432]
	491 NotImplemented "Instruction BLR not yet implemented."
	492 Compare W0, 0
	493 JumpIfNotEqual {524}
	494 Move X8, [X20+216]
	495 Compare X8, 0
	496 JumpIfEqual {830}
	497 NotImplemented "Instruction LDRSW not yet implemented."
	498 Move W10, [X8+24]
	499 NotImplemented "Instruction CMP not yet implemented."
	500 Add X8, X8, X9
	501 Move X0, [X8+32]
	502 Compare X0, 0
	503 JumpIfEqual {830}
	504 Move W2, [X20+268]
	505 Move W1, [X20+264]
	506 Move X3, X31
	507 Call Texture2D.Resize, X0, X1, X2
	508 Move X8, [X20+216]
	509 Compare X8, 0
	510 JumpIfEqual {830}
	511 NotImplemented "Instruction LDRSW not yet implemented."
	512 Move W10, [X8+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X0, [X27]
	515 Add X8, X8, X9
	516 Move X22, [X8+32]
	517 Move W9, [X0+224]
	518 Compare W9, 0
	519 JumpIfNotEqual {521}
	520 Call 0x1C17DFC
	521 Move X0, X22
	522 Move X1, X31
	523 Call FontEngine.ResetAtlasTexture, X0
	524 Move X8, [X20+216]
	525 Compare X8, 0
	526 JumpIfEqual {830}
	527 NotImplemented "Instruction LDRSW not yet implemented."
	528 Move W10, [X8+24]
	529 NotImplemented "Instruction CMP not yet implemented."
	530 Move X0, [X27]
	531 Add X8, X8, X9
	532 Move X22, [X20+488]
	533 Move W23, [X20+272]
	534 Move X24, [X20+232]
	535 Move X26, [X20+240]
	536 Move W25, [X20+276]
	537 Move W9, [X0+224]
	538 Move X27, [X8+32]
	539 Compare W9, 0
	540 JumpIfNotEqual {542}
	541 Call 0x1C17DFC
	542 Add X7, X31, 24
	543 Move X0, X22
	544 Move W1, W23
	545 Move W2, W31
	546 Move X3, X26
	547 Move X4, X24
	548 Move W5, W25
	549 Move X6, X27
	550 Move [X31], X31
	551 Call FontEngine.TryAddGlyphsToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	552 Move X8, [X31+24]
	553 Compare X8, 0
	554 JumpIfEqual {830}
	555 Move X26, 0x671000
	556 Move X27, 0x671000
	557 Move X25, 0x612000
	558 Move X26, [X26+3088]
	559 Move X27, [X27+3224]
	560 Call 0x3EB297C
	561 Return X0
	562 Move W22, W0
	563 Move X21, X31
	564 Move W9, [X8+24]
	565 NotImplemented "Instruction CMP not yet implemented."
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Add X8, X8, X21
	568 Move X24, [X8+32]
	569 Compare X24, 0
	570 JumpIfEqual {656}
	571 Move X0, X24
	572 Move X1, X31
	573 Call Glyph.get_index, X0
	574 Move W1, [X20+224]
	575 Move W23, W0
	576 Move X0, X24
	577 Move X2, X31
	578 Call Glyph.set_atlasIndex, X0, X1
	579 Move X0, [X20+176]
	580 Compare X0, 0
	581 JumpIfEqual {830}
	582 Move W10, [X0+28]
	583 Move X8, [X0+16]
	584 Move X9, [X26]
	585 Add W10, W10, 1
	586 Move [X0+28], W10
	587 Compare X8, 0
	588 JumpIfEqual {830}
	589 NotImplemented "Instruction LDRSW not yet implemented."
	590 Move W11, [X8+24]
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Add W9, W10, 1
	593 Add X8, X8, X10
	594 Move [X0+24], W9
	595 Move [X8+32], X24
	596 Move X8, [X9+32]
	597 Move X1, X24
	598 Move X8, [X8+192]
	599 Move X2, [X8+112]
	600 Call List`1<Object>.AddWithResize, X0, X1
	601 Move X0, [X20+184]
	602 Compare X0, 0
	603 JumpIfEqual {830}
	604 Move X3, [X27]
	605 Move W1, W23
	606 Move X2, X24
	607 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	608 Move X0, [X20+480]
	609 Compare X0, 0
	610 JumpIfEqual {830}
	611 Move W10, [X0+28]
	612 Move X8, [X0+16]
	613 Move X9, [X25]
	614 Add W10, W10, 1
	615 Move [X0+28], W10
	616 Compare X8, 0
	617 JumpIfEqual {830}
	618 NotImplemented "Instruction LDRSW not yet implemented."
	619 Move W11, [X8+24]
	620 NotImplemented "Instruction CMP not yet implemented."
	621 Add W9, W10, 1
	622 Add X8, X8, X10
	623 Move [X0+24], W9
	624 Move [X8+32], W23
	625 Move X8, [X9+32]
	626 Move W1, W23
	627 Move X8, [X8+192]
	628 Move X2, [X8+112]
	629 Call List`1<UInt32>.AddWithResize, X0, X1
	630 Move X0, [X20+472]
	631 Compare X0, 0
	632 JumpIfEqual {830}
	633 Move W10, [X0+28]
	634 Move X8, [X0+16]
	635 Move X9, [X25]
	636 Add W10, W10, 1
	637 Move [X0+28], W10
	638 Compare X8, 0
	639 JumpIfEqual {830}
	640 NotImplemented "Instruction LDRSW not yet implemented."
	641 Move W11, [X8+24]
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Add W9, W10, 1
	644 Add X8, X8, X10
	645 Move [X0+24], W9
	646 Move [X8+32], W23
	647 Move X8, [X9+32]
	648 Move W1, W23
	649 Move X8, [X8+192]
	650 Move X2, [X8+112]
	651 Call List`1<UInt32>.AddWithResize, X0, X1
	652 Move X8, [X31+24]
	653 Add X21, X21, 1
	654 Compare X8, 0
	655 JumpIfNotEqual {564}
	656 Move X8, [X20+488]
	657 Compare X8, 0
	658 JumpIfEqual {830}
	659 Move W9, [X8+28]
	660 Add W9, W9, 1
	661 Move [X8+24], W31
	662 Move [X8+28], W9
	663 Move X0, [X20+504]
	664 Compare X0, 0
	665 JumpIfEqual {830}
	666 Move X26, 0x670000
	667 Move X21, 0x670000
	668 Move X27, 0x670000
	669 Move X28, 0x670000
	670 Move X29, 0x670000
	671 Move X26, [X26+3320]
	672 Move X21, [X21+3656]
	673 Move X27, [X27+3104]
	674 Move X28, [X28+3280]
	675 Move X29, [X29+3680]
	676 Move W23, W31
	677 Move W8, [X0+24]
	678 NotImplemented "Instruction CMP not yet implemented."
	679 Move X2, [X26]
	680 Move W1, W23
	681 Call List`1<Object>.get_Item, X0, X1
	682 Compare X0, 0
	683 JumpIfEqual {830}
	684 Move X24, X0
	685 Move X0, [X20+184]
	686 Compare X0, 0
	687 JumpIfEqual {830}
	688 Move W1, [X24+40]
	689 Move X3, [X21]
	690 Add X2, X31, 16
	691 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	692 Move TEMP, X0
	693 And TEMP, TEMP, 1
	694 Compare TEMP, 1
	695 JumpIfNotEqual {716}
	696 Move X8, [X31+16]
	697 Move [X24+24], X20
	698 Move [X24+32], X8
	699 Move X0, [X20+192]
	700 Compare X0, 0
	701 JumpIfEqual {830}
	702 Move W10, [X0+28]
	703 Move X8, [X0+16]
	704 Move X9, [X27]
	705 Add W10, W10, 1
	706 Move [X0+28], W10
	707 Compare X8, 0
	708 JumpIfEqual {830}
	709 NotImplemented "Instruction LDRSW not yet implemented."
	710 Move W11, [X8+24]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Add W9, W10, 1
	713 Add X8, X8, X10
	714 Move [X0+24], W9
	715 Move [X8+32], X24
	716 Move X0, [X20+488]
	717 Compare X0, 0
	718 JumpIfEqual {830}
	719 Move W10, [X0+28]
	720 Move W1, [X24+40]
	721 Move X8, [X0+16]
	722 Move X9, [X25]
	723 Add W10, W10, 1
	724 Move [X0+28], W10
	725 Compare X8, 0
	726 JumpIfEqual {830}
	727 NotImplemented "Instruction LDRSW not yet implemented."
	728 Move W11, [X8+24]
	729 NotImplemented "Instruction CMP not yet implemented."
	730 Add W9, W10, 1
	731 Add X8, X8, X10
	732 Move [X0+24], W9
	733 Move [X8+32], W1
	734 Move X8, [X9+32]
	735 Move X1, X24
	736 Move X8, [X8+192]
	737 Move X2, [X8+112]
	738 Call List`1<Object>.AddWithResize, X0, X1
	739 Move X0, [X20+200]
	740 Compare X0, 0
	741 JumpIfEqual {830}
	742 Move W1, [X24+20]
	743 Move X3, [X28]
	744 Move X2, X24
	745 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	746 Move X0, [X20+504]
	747 Compare X0, 0
	748 JumpIfEqual {830}
	749 Move X2, [X29]
	750 Move W1, W23
	751 Call List`1<Object>.RemoveAt, X0, X1
	752 Subtract W23, W23, 1
	753 Move X8, [X9+32]
	754 Move X8, [X8+192]
	755 Move X2, [X8+112]
	756 Call List`1<UInt32>.AddWithResize, X0, X1
	757 Move X0, [X20+504]
	758 Add W23, W23, 1
	759 Compare X0, 0
	760 JumpIfNotEqual {677}
	761 Move W8, [X20+228]
	762 NotImplemented "Instruction CMP not yet implemented."
	763 NotImplemented "Instruction CSET not yet implemented."
	764 Or W9, W22, W8
	765 NotImplemented "Instruction CSET not yet implemented."
	766 Move TEMP, X9
	767 And TEMP, TEMP, 1
	768 Compare TEMP, 1
	769 JumpIfNotEqual {772}
	770 Move W21, [X31+8]
	771 Or W22, W22, W8
	772 Move W21, [X31+8]
	773 Move X0, X20
	774 Call TMP_FontAsset.TryAddGlyphsToNewAtlasTexture, X0
	775 Move TEMP, X0
	776 And TEMP, TEMP, 1
	777 Compare TEMP, 1
	778 JumpIfNotEqual {773}
	779 Move W22, 1
	780 Move TEMP, X21
	781 And TEMP, TEMP, 1
	782 Compare TEMP, 1
	783 JumpIfNotEqual {786}
	784 Move X0, X20
	785 Call TMP_FontAsset.UpdateGlyphAdjustmentRecords, X0
	786 Move X8, 0x60D000
	787 Move X8, [X8+632]
	788 Move X8, [X8]
	789 Move X8, [X8+184]
	790 Move X8, [X8]
	791 Move [X19], X8
	792 Move X0, [X20+504]
	793 Compare X0, 0
	794 JumpIfEqual {830}
	795 Move W21, W31
	796 Move W8, [X0+24]
	797 NotImplemented "Instruction CMP not yet implemented."
	798 Move X2, [X26]
	799 Move W1, W21
	800 Call List`1<Object>.get_Item, X0, X1
	801 Compare X0, 0
	802 JumpIfEqual {830}
	803 Move X8, X0
	804 Move X0, [X20+520]
	805 Compare X0, 0
	806 JumpIfEqual {830}
	807 Move W10, [X0+28]
	808 Move W1, [X8+20]
	809 Move X8, [X0+16]
	810 Move X9, [X25]
	811 Add W10, W10, 1
	812 Move [X0+28], W10
	813 Compare X8, 0
	814 JumpIfEqual {830}
	815 NotImplemented "Instruction LDRSW not yet implemented."
	816 Move W11, [X8+24]
	817 NotImplemented "Instruction CMP not yet implemented."
	818 Add W9, W10, 1
	819 Add X8, X8, X10
	820 Move [X0+24], W9
	821 Move [X8+32], W1
	822 Move X8, [X9+32]
	823 Move X8, [X8+192]
	824 Move X2, [X8+112]
	825 Call List`1<UInt32>.AddWithResize, X0, X1
	826 Move X0, [X20+504]
	827 Add W21, W21, 1
	828 Compare X0, 0
	829 JumpIfNotEqual {796}
	830 Call 0x1C17F20
	831 Move X0, [X20+520]
	832 Compare X0, 0
	833 JumpIfEqual {830}
	834 Move W8, [X0+24]
	835 NotImplemented "Instruction CMP not yet implemented."
	836 Move X1, X31
	837 Call TMPro_ExtensionMethods.UintToString, X0
	838 Move [X19], X0
	839 Move W8, [X31+12]
	840 Xor W8, W8, 1
	841 And W8, W22, W8
	842 Call 0x1C17F28

Method: System.Boolean TryAddCharacterInternal(System.UInt32 unicode, out TMPro.TMP_Character character)

Disassembly:
	0x03AE5974 MOV X2, X31
	0x03AE5978 BL 0x3C354F8
	0x03AE597C TBZ X0, 0x0, 0x3AE5A0C
	0x03AE5980 MOV X0, X31
	0x03AE5984 BL 0x3B13F74
	0x03AE5988 CBZ X0, 0x3AE5B84
	0x03AE598C LDR X2, [X29]
	0x03AE5990 MOV W1, W26
	0x03AE5994 BL 0x301BCCC
	0x03AE5998 CBZ X0, 0x3AE5B84
	0x03AE599C MOV X1, X31
	0x03AE59A0 MOV X27, X0
	0x03AE59A4 BL 0x3C385F8
	0x03AE59A8 LDR X8, [X19]
	0x03AE59AC MOV W28, W0
	0x03AE59B0 LDR W9, [X8 + 0xE0]
	0x03AE59B4 CBNZ W9, 0x3AE59C4
	0x03AE59B8 MOV X0, X8
	0x03AE59BC BL 0x1C16DFC
	0x03AE59C0 LDR X8, [X19]
	0x03AE59C4 LDR X8, [X8 + 0xB8]
	0x03AE59C8 LDR X0, [X8 + 0x40]
	0x03AE59CC CBZ X0, 0x3AE5B84
	0x03AE59D0 LDR X2, [X21]
	0x03AE59D4 MOV W1, W28
	0x03AE59D8 BL 0x2DAB03C
	0x03AE59DC TBZ X0, 0x0, 0x3AE59F8
	0x03AE59E0 AND W3, W20, 0x1
	0x03AE59E4 MOVZ W2, 0x1
	0x03AE59E8 MOV X0, X27
	0x03AE59EC MOV W1, W25
	0x03AE59F0 BL 0x3AE51DC
	0x03AE59F4 TBNZ X0, 0x0, 0x3AE5B10
	0x03AE59F8 MOV X0, X31
	0x03AE59FC ADD W26, W26, 0x1
	0x03AE5A00 BL 0x3B13F74
	0x03AE5A04 CBNZ X0, 0x3AE5928
	0x03AE5A08 B 0x3AE5B84
	0x03AE5A0C MOV X0, X31
	0x03AE5A10 BL 0x3B13E54
	0x03AE5A14 ADRP X8, 0x60E000
	0x03AE5A18 LDR X8, [X8 + 0x598]
	0x03AE5A1C MOV X26, X0
	0x03AE5A20 LDR X8, [X8]
	0x03AE5A24 LDR W9, [X8 + 0xE0]
	0x03AE5A28 CBNZ W9, 0x3AE5A34
	0x03AE5A2C MOV X0, X8
	0x03AE5A30 BL 0x1C16DFC
	0x03AE5A34 MOV X0, X26
	0x03AE5A38 MOV X1, X31
	0x03AE5A3C MOV X2, X31
	0x03AE5A40 BL 0x3C354F8
	0x03AE5A44 TBZ X0, 0x0, 0x3AE5AB0
	0x03AE5A48 MOV X0, X31
	0x03AE5A4C BL 0x3B13E54
	0x03AE5A50 CBZ X0, 0x3AE5B84
	0x03AE5A54 MOV X1, X31
	0x03AE5A58 MOV X26, X0
	0x03AE5A5C BL 0x3C385F8
	0x03AE5A60 LDR X8, [X19]
	0x03AE5A64 MOV W27, W0
	0x03AE5A68 LDR W9, [X8 + 0xE0]
	0x03AE5A6C CBNZ W9, 0x3AE5A7C
	0x03AE5A70 MOV X0, X8
	0x03AE5A74 BL 0x1C16DFC
	0x03AE5A78 LDR X8, [X19]
	0x03AE5A7C LDR X8, [X8 + 0xB8]
	0x03AE5A80 LDR X0, [X8 + 0x40]
	0x03AE5A84 CBZ X0, 0x3AE5B84
	0x03AE5A88 LDR X2, [X21]
	0x03AE5A8C MOV W1, W27
	0x03AE5A90 BL 0x2DAB03C
	0x03AE5A94 TBZ X0, 0x0, 0x3AE5AB0
	0x03AE5A98 AND W3, W20, 0x1
	0x03AE5A9C MOVZ W2, 0x1
	0x03AE5AA0 MOV X0, X26
	0x03AE5AA4 MOV W1, W25
	0x03AE5AA8 BL 0x3AE51DC
	0x03AE5AAC TBNZ X0, 0x0, 0x3AE5B10
	0x03AE5AB0 LDR X0, [X23 + 0x208]
	0x03AE5AB4 CBZ X0, 0x3AE5B84
	0x03AE5AB8 ADRP X9, 0x614000
	0x03AE5ABC LDR W10, [X0 + 0x1C]
	0x03AE5AC0 LDR X8, [X0 + 0x10]
	0x03AE5AC4 LDR X9, [X9 + 0x1D0]
	0x03AE5AC8 ADD W10, W10, 0x1
	0x03AE5ACC LDR X9, [X9]
	0x03AE5AD0 STR W10, [X0 + 0x1C]
	0x03AE5AD4 CBZ X8, 0x3AE5B84
	0x03AE5AD8 LDRSW X10, [X0 + 0x18]
	0x03AE5ADC LDR W11, [X8 + 0x18]
	0x03AE5AE0 CMP W10, W11
	0x03AE5AE4 B.CS 0x3AE5AFC
	0x03AE5AE8 ADD W9, W10, 0x1
	0x03AE5AEC ADD X8, X8, X10, 0x2, LSL
	0x03AE5AF0 STR W9, [X0 + 0x18]
	0x03AE5AF4 STR W25, [X8 + 0x20]
	0x03AE5AF8 B 0x3AE5B10
	0x03AE5AFC LDR X8, [X9 + 0x20]
	0x03AE5B00 MOV W1, W25
	0x03AE5B04 LDR X8, [X8 + 0xC0]
	0x03AE5B08 LDR X2, [X8 + 0x70]
	0x03AE5B0C BL 0x30C1698
	0x03AE5B10 LDR W8, [X22 + 0x10]
	0x03AE5B14 ADD W24, W24, 0x1
	0x03AE5B18 CMP W24, W8
	0x03AE5B1C B.LT 0x3AE56DC
	0x03AE5B20 LDR X0, [X23 + 0x208]
	0x03AE5B24 CBZ X0, 0x3AE5B84
	0x03AE5B28 LDR W8, [X0 + 0x18]
	0x03AE5B2C LDR X19, [X31 + 0x8]
	0x03AE5B30 CMP W8, 0x1
	0x03AE5B34 B.LT 0x3AE5B58
	0x03AE5B38 ADRP X8, 0x63B000
	0x03AE5B3C LDR X8, [X8 + 0x558]
	0x03AE5B40 LDR X1, [X8]
	0x03AE5B44 BL 0x30C3454
	0x03AE5B48 MOV X8, X0
	0x03AE5B4C MOV W0, W31
	0x03AE5B50 STR X8, [X19]
	0x03AE5B54 B 0x3AE5B64
	0x03AE5B58 MOVZ W0, 0x1
	0x03AE5B5C B 0x3AE5B64
	0x03AE5B60 MOV W0, W31
	0x03AE5B64 LDP X20, X19, [X31 + 0x70]
	0x03AE5B68 LDP X22, X21, [X31 + 0x60]
	0x03AE5B6C LDP X24, X23, [X31 + 0x50]
	0x03AE5B70 LDP X26, X25, [X31 + 0x40]
	0x03AE5B74 LDP X28, X27, [X31 + 0x30]
	0x03AE5B78 LDP X29, X30, [X31 + 0x20]
	0x03AE5B7C ADD X31, X31, 0x80
	0x03AE5B80 RET
	0x03AE5B84 BL 0x1C16F20
	0x03AE5B88 STR X30, [X31 - 0x40]!
	0x03AE5B8C STP X24, X23, [X31 + 0x10]
	0x03AE5B90 STP X22, X21, [X31 + 0x20]
	0x03AE5B94 STP X20, X19, [X31 + 0x30]
	0x03AE5B98 ADRP X21, 0x8FD000
	0x03AE5B9C LDRB W8, [X21 + 0x59F]
	0x03AE5BA0 MOV X19, X1
	0x03AE5BA4 MOV X20, X0
	0x03AE5BA8 TBNZ X8, 0x0, 0x3AE5BC0
	0x03AE5BAC ADRP X0, 0x673000
	0x03AE5BB0 LDR X0, [X0 + 0xC88]
	0x03AE5BB4 BL 0x1C16CF4
	0x03AE5BB8 MOVZ W8, 0x1
	0x03AE5BBC STRB W8, [X21 + 0x59F]
	0x03AE5BC0 LDR X8, [X20 + 0xC8]
	0x03AE5BC4 CBZ X8, 0x3AE5C30
	0x03AE5BC8 CBZ X19, 0x3AE5C48
	0x03AE5BCC LDR W8, [X19 + 0x10]
	0x03AE5BD0 CMP W8, 0x0
	0x03AE5BD4 CSET W23, GT
	0x03AE5BD8 CMP W8, 0x1
	0x03AE5BDC B.LT 0x3AE5C2C
	0x03AE5BE0 ADRP X24, 0x673000
	0x03AE5BE4 LDR X24, [X24 + 0xC88]
	0x03AE5BE8 MOV W21, W31
	0x03AE5BEC LDR X22, [X20 + 0xC8]
	0x03AE5BF0 MOV X0, X19
	0x03AE5BF4 MOV W1, W21
	0x03AE5BF8 MOV X2, X31
	0x03AE5BFC BL 0x3222A1C
	0x03AE5C00 CBZ X22, 0x3AE5C48
	0x03AE5C04 LDR X2, [X24]
	0x03AE5C08 AND W1, W0, 0xFFFF
	0x03AE5C0C MOV X0, X22
	0x03AE5C10 BL 0x2B0F250
	0x03AE5C14 TBZ X0, 0x0, 0x3AE5C2C
	0x03AE5C18 LDR W8, [X19 + 0x10]
	0x03AE5C1C ADD W21, W21, 0x1
	0x03AE5C20 CMP W21, W8
	0x03AE5C24 CSET W23, LT
	0x03AE5C28 B.LT 0x3AE5BEC
	0x03AE5C2C EOR W8, W23, 0x1
	0x03AE5C30 LDP X20, X19, [X31 + 0x30]
	0x03AE5C34 LDP X22, X21, [X31 + 0x20]
	0x03AE5C38 LDP X24, X23, [X31 + 0x10]
	0x03AE5C3C AND W0, W8, 0x1
	0x03AE5C40 LDR X30, [X31], #0x40
	0x03AE5C44 RET
	0x03AE5C48 BL 0x1C16F20
	0x03AE5C4C SUB X31, X31, 0x40
	0x03AE5C50 STP X30, X23, [X31 + 0x10]
	0x03AE5C54 STP X22, X21, [X31 + 0x20]
	0x03AE5C58 STP X20, X19, [X31 + 0x30]
	0x03AE5C5C ADRP X20, 0x8FD000
	0x03AE5C60 LDRB W8, [X20 + 0x5A0]
	0x03AE5C64 MOV X19, X0
	0x03AE5C68 TBNZ X8, 0x0, 0x3AE5CA4
	0x03AE5C6C ADRP X0, 0x610000
	0x03AE5C70 LDR X0, [X0 + 0x170]
	0x03AE5C74 BL 0x1C16CF4
	0x03AE5C78 ADRP X0, 0x673000
	0x03AE5C7C LDR X0, [X0 + 0xCF0]
	0x03AE5C80 BL 0x1C16CF4
	0x03AE5C84 ADRP X0, 0x673000
	0x03AE5C88 LDR X0, [X0 + 0xCF8]
	0x03AE5C8C BL 0x1C16CF4
	0x03AE5C90 ADRP X0, 0x610000
	0x03AE5C94 LDR X0, [X0 + 0x278]
	0x03AE5C98 BL 0x1C16CF4
	0x03AE5C9C MOVZ W8, 0x1
	0x03AE5CA0 STRB W8, [X20 + 0x5A0]
	0x03AE5CA4 STRH W31, [X31 + 0xC]
	0x03AE5CA8 CBZ X19, 0x3AE5D3C
	0x03AE5CAC LDR X0, [X19 + 0xC0]
	0x03AE5CB0 CBZ X0, 0x3AE5D3C
	0x03AE5CB4 ADRP X8, 0x610000
	0x03AE5CB8 LDR X8, [X8 + 0x278]
	0x03AE5CBC ADRP X22, 0x673000
	0x03AE5CC0 ADRP X23, 0x610000
	0x03AE5CC4 MOV W20, W31
	0x03AE5CC8 LDR X8, [X8]
	0x03AE5CCC LDR X8, [X8 + 0xB8]
	0x03AE5CD0 LDR X21, [X8]
	0x03AE5CD4 LDR X22, [X22 + 0xCF8]
	0x03AE5CD8 LDR X23, [X23 + 0x170]
	0x03AE5CDC LDR W8, [X0 + 0x18]
	0x03AE5CE0 CMP W20, W8
	0x03AE5CE4 B.GE 0x3AE5D40
	0x03AE5CE8 LDR X2, [X22]
	0x03AE5CEC MOV W1, W20
	0x03AE5CF0 BL 0x301BCCC
	0x03AE5CF4 CBZ X0, 0x3AE5D3C
	0x03AE5CF8 LDR W8, [X0 + 0x14]
	0x03AE5CFC LDR X0, [X23]
	0x03AE5D00 STRH W8, [X31 + 0xC]
	0x03AE5D04 LDR W8, [X0 + 0xE0]
	0x03AE5D08 CBNZ W8, 0x3AE5D10
	0x03AE5D0C BL 0x1C16DFC
	0x03AE5D10 ADD X0, X31, 0xC
	0x03AE5D14 MOV X1, X31
	0x03AE5D18 BL 0x330A76C
	0x03AE5D1C MOV X1, X0
	0x03AE5D20 MOV X0, X21
	0x03AE5D24 MOV X2, X31
	0x03AE5D28 BL 0x321B938
	0x03AE5D2C MOV X21, X0
	0x03AE5D30 LDR X0, [X19 + 0xC0]
	0x03AE5D34 ADD W20, W20, 0x1
	0x03AE5D38 CBNZ X0, 0x3AE5CDC
	0x03AE5D3C BL 0x1C16F20
	0x03AE5D40 MOV X0, X21
	0x03AE5D44 LDP X20, X19, [X31 + 0x30]
	0x03AE5D48 LDP X22, X21, [X31 + 0x20]
	0x03AE5D4C LDP X30, X23, [X31 + 0x10]
	0x03AE5D50 ADD X31, X31, 0x40
	0x03AE5D54 RET
	0x03AE5D58 STP X30, X23, [X31 - 0x30]!
	0x03AE5D5C STP X22, X21, [X31 + 0x10]
	0x03AE5D60 STP X20, X19, [X31 + 0x20]
	0x03AE5D64 ADRP X20, 0x8FD000
	0x03AE5D68 LDRB W8, [X20 + 0x5A1]
	0x03AE5D6C MOV X19, X0
	0x03AE5D70 TBNZ X8, 0x0, 0x3AE5DA0
	0x03AE5D74 ADRP X0, 0x60F000
	0x03AE5D78 LDR X0, [X0 + 0xE58]
	0x03AE5D7C BL 0x1C16CF4
	0x03AE5D80 ADRP X0, 0x673000
	0x03AE5D84 LDR X0, [X0 + 0xCF0]
	0x03AE5D88 BL 0x1C16CF4
	0x03AE5D8C ADRP X0, 0x673000
	0x03AE5D90 LDR X0, [X0 + 0xCF8]
	0x03AE5D94 BL 0x1C16CF4
	0x03AE5D98 MOVZ W8, 0x1
	0x03AE5D9C STRB W8, [X20 + 0x5A1]
	0x03AE5DA0 CBZ X19, 0x3AE5E20
	0x03AE5DA4 LDR X8, [X19 + 0xC0]
	0x03AE5DA8 CBZ X8, 0x3AE5E20
	0x03AE5DAC ADRP X9, 0x60F000
	0x03AE5DB0 LDR X9, [X9 + 0xE58]
	0x03AE5DB4 LDR W1, [X8 + 0x18]
	0x03AE5DB8 LDR X0, [X9]
	0x03AE5DBC BL 0x1C16D6C
	0x03AE5DC0 LDR X8, [X19 + 0xC0]
	0x03AE5DC4 CBZ X8, 0x3AE5E20
	0x03AE5DC8 ADRP X22, 0x673000
	0x03AE5DCC LDR X22, [X22 + 0xCF8]
	0x03AE5DD0 MOV X20, X0
	0x03AE5DD4 MOV X21, X31
	0x03AE5DD8 ADD X23, X0, 0x20
	0x03AE5DDC LDRSW X9, [X8 + 0x18]
	0x03AE5DE0 CMP X21, X9
	0x03AE5DE4 B.GE 0x3AE5E24
	0x03AE5DE8 LDR X2, [X22]
	0x03AE5DEC MOV X0, X8
	0x03AE5DF0 MOV W1, W21
	0x03AE5DF4 BL 0x301BCCC
	0x03AE5DF8 CBZ X0, 0x3AE5E20
	0x03AE5DFC CBZ X20, 0x3AE5E20
	0x03AE5E00 LDR W8, [X20 + 0x18]
	0x03AE5E04 CMP X21, X8
	0x03AE5E08 B.CS 0x3AE5E38
	0x03AE5E0C LDR W8, [X0 + 0x14]
	0x03AE5E10 STR W8, [X23, X21, LSL #2]
	0x03AE5E14 LDR X8, [X19 + 0xC0]
	0x03AE5E18 ADD X21, X21, 0x1
	0x03AE5E1C CBNZ X8, 0x3AE5DDC
	0x03AE5E20 BL 0x1C16F20
	0x03AE5E24 MOV X0, X20
	0x03AE5E28 LDP X20, X19, [X31 + 0x20]
	0x03AE5E2C LDP X22, X21, [X31 + 0x10]
	0x03AE5E30 LDP X30, X23, [X31], #0x30
	0x03AE5E34 RET
	0x03AE5E38 BL 0x1C16F28
	0x03AE5E3C STR X30, [X31 - 0x30]!
	0x03AE5E40 STP X22, X21, [X31 + 0x10]
	0x03AE5E44 STP X20, X19, [X31 + 0x20]
	0x03AE5E48 ADRP X21, 0x8FD000
	0x03AE5E4C LDRB W8, [X21 + 0x5A2]
	0x03AE5E50 MOV W19, W1
	0x03AE5E54 MOV X20, X0
	0x03AE5E58 TBNZ X8, 0x0, 0x3AE5E88
	0x03AE5E5C ADRP X0, 0x673000
	0x03AE5E60 LDR X0, [X0 + 0xC88]
	0x03AE5E64 BL 0x1C16CF4
	0x03AE5E68 ADRP X0, 0x673000
	0x03AE5E6C LDR X0, [X0 + 0x328]
	0x03AE5E70 BL 0x1C16CF4
	0x03AE5E74 ADRP X0, 0x673000
	0x03AE5E78 LDR X0, [X0 + 0xBC0]
	0x03AE5E7C BL 0x1C16CF4
	0x03AE5E80 MOVZ W8, 0x1
	0x03AE5E84 STRB W8, [X21 + 0x5A2]
	0x03AE5E88 LDR X0, [X20 + 0xC8]
	0x03AE5E8C CBZ X0, 0x3AE5F50
	0x03AE5E90 ADRP X8, 0x673000
	0x03AE5E94 LDR X8, [X8 + 0xC88]
	0x03AE5E98 MOV W1, W19
	0x03AE5E9C LDR X2, [X8]
	0x03AE5EA0 BL 0x2B0F250
	0x03AE5EA4 TBZ X0, 0x0, 0x3AE5ED0
	0x03AE5EA8 LDR X0, [X20 + 0xC8]
	0x03AE5EAC CBZ X0, 0x3AE5F50
	0x03AE5EB0 ADRP X8, 0x673000
	0x03AE5EB4 LDR X8, [X8 + 0x328]
	0x03AE5EB8 MOV W1, W19
	0x03AE5EBC LDR X2, [X8]
	0x03AE5EC0 BL 0x2B0EFBC
	0x03AE5EC4 CBZ X0, 0x3AE5F50
	0x03AE5EC8 LDR W0, [X0 + 0x28]
	0x03AE5ECC B 0x3AE5F18
	0x03AE5ED0 LDR X21, [X20 + 0x40]
	0x03AE5ED4 ADD X0, X20, 0x50
	0x03AE5ED8 MOV X1, X31
	0x03AE5EDC BL 0x3C9BF88
	0x03AE5EE0 ADRP X22, 0x673000
	0x03AE5EE4 LDR X22, [X22 + 0xBC0]
	0x03AE5EE8 MOV W20, W0
	0x03AE5EEC LDR X8, [X22]
	0x03AE5EF0 LDR W9, [X8 + 0xE0]
	0x03AE5EF4 CBNZ W9, 0x3AE5F00
	0x03AE5EF8 MOV X0, X8
	0x03AE5EFC BL 0x1C16DFC
	0x03AE5F00 MOV X0, X21
	0x03AE5F04 MOV W1, W20
	0x03AE5F08 MOV X2, X31
	0x03AE5F0C BL 0x3C9C794
	0x03AE5F10 CBZ W0, 0x3AE5F28
	0x03AE5F14 MOV W0, W31
	0x03AE5F18 LDP X20, X19, [X31 + 0x20]
	0x03AE5F1C LDP X22, X21, [X31 + 0x10]
	0x03AE5F20 LDR X30, [X31], #0x30
	0x03AE5F24 RET
	0x03AE5F28 LDR X0, [X22]
	0x03AE5F2C LDR W8, [X0 + 0xE0]
	0x03AE5F30 CBNZ W8, 0x3AE5F38
	0x03AE5F34 BL 0x1C16DFC
	0x03AE5F38 MOV W0, W19
	0x03AE5F3C LDP X20, X19, [X31 + 0x20]
	0x03AE5F40 LDP X22, X21, [X31 + 0x10]
	0x03AE5F44 MOV X1, X31
	0x03AE5F48 LDR X30, [X31], #0x30
	0x03AE5F4C B 0x3C9CBD8
	0x03AE5F50 BL 0x1C16F20
	0x03AE5F54 STP X30, X21, [X31 - 0x20]!
	0x03AE5F58 STP X20, X19, [X31 + 0x10]
	0x03AE5F5C ADRP X20, 0x8FD000
	0x03AE5F60 LDRB W8, [X20 + 0x5A3]
	0x03AE5F64 MOV X19, X0
	0x03AE5F68 TBNZ X8, 0x0, 0x3AE5F98
	0x03AE5F6C ADRP X0, 0x610000
	0x03AE5F70 LDR X0, [X0 + 0x9D8]
	0x03AE5F74 BL 0x1C16CF4
	0x03AE5F78 ADRP X0, 0x673000
	0x03AE5F7C LDR X0, [X0 + 0xC18]
	0x03AE5F80 BL 0x1C16CF4
	0x03AE5F84 ADRP X0, 0x673000
	0x03AE5F88 LDR X0, [X0 + 0x578]
	0x03AE5F8C BL 0x1C16CF4
	0x03AE5F90 MOVZ W8, 0x1
	0x03AE5F94 STRB W8, [X20 + 0x5A3]
	0x03AE5F98 CBZ X19, 0x3AE6080
	0x03AE5F9C ADRP X21, 0x673000
	0x03AE5FA0 LDR W20, [X19 + 0x18]
	0x03AE5FA4 LDR X21, [X21 + 0x578]
	0x03AE5FA8 CBNZ W20, 0x3AE5FC0
	0x03AE5FAC MOV X0, X19
	0x03AE5FB0 MOV X1, X31
	0x03AE5FB4 BL 0x3C385F8
	0x03AE5FB8 MOV W20, W0
	0x03AE5FBC STR W0, [X19 + 0x18]
	0x03AE5FC0 LDR X0, [X21]
	0x03AE5FC4 LDR W8, [X0 + 0xE0]
	0x03AE5FC8 CBNZ W8, 0x3AE5FD4
	0x03AE5FCC BL 0x1C16DFC
	0x03AE5FD0 LDR X0, [X21]
	0x03AE5FD4 LDR X8, [X0 + 0xB8]
	0x03AE5FD8 LDR X0, [X8 + 0x50]
	0x03AE5FDC CBZ X0, 0x3AE6080
	0x03AE5FE0 ADRP X8, 0x610000
	0x03AE5FE4 LDR X8, [X8 + 0x9D8]
	0x03AE5FE8 MOV W1, W20
	0x03AE5FEC LDR X2, [X8]
	0x03AE5FF0 BL 0x2DAB03C
	0x03AE5FF4 TBZ X0, 0x0, 0x3AE6058
	0x03AE5FF8 LDR X0, [X21]
	0x03AE5FFC LDR W8, [X0 + 0xE0]
	0x03AE6000 CBNZ W8, 0x3AE600C
	0x03AE6004 BL 0x1C16DFC
	0x03AE6008 LDR X0, [X21]
	0x03AE600C LDR X8, [X0 + 0xB8]
	0x03AE6010 LDR X0, [X8 + 0x48]
	0x03AE6014 CBZ X0, 0x3AE6080
	0x03AE6018 ADRP X9, 0x672000
	0x03AE601C LDR X9, [X9 + 0xC18]
	0x03AE6020 LDR W10, [X0 + 0x1C]
	0x03AE6024 LDR X8, [X0 + 0x10]
	0x03AE6028 LDR X9, [X9]
	0x03AE602C ADD W10, W10, 0x1
	0x03AE6030 STR W10, [X0 + 0x1C]
	0x03AE6034 CBZ X8, 0x3AE6080
	0x03AE6038 LDRSW X10, [X0 + 0x18]
	0x03AE603C LDR W11, [X8 + 0x18]
	0x03AE6040 CMP W10, W11
	0x03AE6044 B.CS 0x3AE6064
	0x03AE6048 ADD W9, W10, 0x1
	0x03AE604C ADD X8, X8, X10, 0x3, LSL
	0x03AE6050 STR W9, [X0 + 0x18]
	0x03AE6054 STR X19, [X8 + 0x20]
	0x03AE6058 LDP X20, X19, [X31 + 0x10]
	0x03AE605C LDP X30, X21, [X31], #0x20
	0x03AE6060 RET
	0x03AE6064 LDR X8, [X9 + 0x20]
	0x03AE6068 MOV X1, X19
	0x03AE606C LDP X20, X19, [X31 + 0x10]
	0x03AE6070 LDR X8, [X8 + 0xC0]
	0x03AE6074 LDR X2, [X8 + 0x70]
	0x03AE6078 LDP X30, X21, [X31], #0x20
	0x03AE607C B 0x301BF90
	0x03AE6080 BL 0x1C16F20
	0x03AE6084 STP X30, X23, [X31 - 0x30]!
	0x03AE6088 STP X22, X21, [X31 + 0x10]
	0x03AE608C STP X20, X19, [X31 + 0x20]
	0x03AE6090 ADRP X19, 0x8FC000
	0x03AE6094 ADRP X20, 0x672000
	0x03AE6098 LDRB W8, [X19 + 0x5A4]
	0x03AE609C LDR X20, [X20 + 0x578]
	0x03AE60A0 TBNZ X8, 0x0, 0x3AE60E8
	0x03AE60A4 ADRP X0, 0x614000
	0x03AE60A8 LDR X0, [X0 + 0x678]
	0x03AE60AC BL 0x1C16CF4
	0x03AE60B0 ADRP X0, 0x672000
	0x03AE60B4 LDR X0, [X0 + 0xE40]
	0x03AE60B8 BL 0x1C16CF4
	0x03AE60BC ADRP X0, 0x672000
	0x03AE60C0 LDR X0, [X0 + 0x610]
	0x03AE60C4 BL 0x1C16CF4
	0x03AE60C8 ADRP X0, 0x672000
	0x03AE60CC LDR X0, [X0 + 0xC48]
	0x03AE60D0 BL 0x1C16CF4
	0x03AE60D4 ADRP X0, 0x672000
	0x03AE60D8 LDR X0, [X0 + 0x578]
	0x03AE60DC BL 0x1C16CF4
	0x03AE60E0 MOVZ W8, 0x1
	0x03AE60E4 STRB W8, [X19 + 0x5A4]
	0x03AE60E8 LDR X0, [X20]
	0x03AE60EC LDR W8, [X0 + 0xE0]
	0x03AE60F0 CBNZ W8, 0x3AE60FC
	0x03AE60F4 BL 0x1C16DFC
	0x03AE60F8 LDR X0, [X20]
	0x03AE60FC LDR X8, [X0 + 0xB8]
	0x03AE6100 LDR X8, [X8 + 0x48]
	0x03AE6104 CBZ X8, 0x3AE61EC
	0x03AE6108 LDR W21, [X8 + 0x18]
	0x03AE610C SUBS W22, W21, 0x1
	0x03AE6110 B.LT 0x3AE61DC
	0x03AE6114 ADRP X23, 0x672000
	0x03AE6118 LDR X23, [X23 + 0xC48]
	0x03AE611C MOV W19, W31
	0x03AE6120 LDR W8, [X0 + 0xE0]
	0x03AE6124 CBNZ W8, 0x3AE6130
	0x03AE6128 BL 0x1C16DFC
	0x03AE612C LDR X0, [X20]
	0x03AE6130 LDR X8, [X0 + 0xB8]
	0x03AE6134 LDR X0, [X8 + 0x48]
	0x03AE6138 CBZ X0, 0x3AE61EC
	0x03AE613C LDR X2, [X23]
	0x03AE6140 MOV W1, W19
	0x03AE6144 BL 0x301BCCC
	0x03AE6148 CBZ X0, 0x3AE61EC
	0x03AE614C BL 0x3AE61F0
	0x03AE6150 CMP W22, W19
	0x03AE6154 B.EQ 0x3AE6164
	0x03AE6158 LDR X0, [X20]
	0x03AE615C ADD W19, W19, 0x1
	0x03AE6160 B 0x3AE6120
	0x03AE6164 CMP W21, 0x1
	0x03AE6168 B.LT 0x3AE61DC
	0x03AE616C LDR X0, [X20]
	0x03AE6170 LDR W8, [X0 + 0xE0]
	0x03AE6174 CBNZ W8, 0x3AE6180
	0x03AE6178 BL 0x1C16DFC
	0x03AE617C LDR X0, [X20]
	0x03AE6180 LDR X8, [X0 + 0xB8]
	0x03AE6184 LDR X9, [X8 + 0x48]
	0x03AE6188 CBZ X9, 0x3AE61EC
	0x03AE618C LDP W2, W10, [X9 + 0x18]
	0x03AE6190 ADD W10, W10, 0x1
	0x03AE6194 CMP W2, 0x1
	0x03AE6198 STP W31, W10, [X9 + 0x18]
	0x03AE619C B.LT 0x3AE61B8
	0x03AE61A0 LDR X0, [X9 + 0x10]
	0x03AE61A4 MOV W1, W31
	0x03AE61A8 MOV X3, X31
	0x03AE61AC BL 0x339FA34
	0x03AE61B0 LDR X8, [X20]
	0x03AE61B4 LDR X8, [X8 + 0xB8]
	0x03AE61B8 LDR X0, [X8 + 0x50]
	0x03AE61BC CBZ X0, 0x3AE61EC
	0x03AE61C0 ADRP X8, 0x614000
	0x03AE61C4 LDR X8, [X8 + 0x678]
	0x03AE61C8 LDP X20, X19, [X31 + 0x20]
	0x03AE61CC LDP X22, X21, [X31 + 0x10]
	0x03AE61D0 LDR X1, [X8]
	0x03AE61D4 LDP X30, X23, [X31], #0x30
	0x03AE61D8 B 0x2DAA53C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X22, 0x8FE000
	014 Move W8, [X22+1449]
	015 Move X21, X2
	016 Move W20, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {75}
	022 Move X0, 0x60F000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x674000
	026 Move X0, [X0+3280]
	027 Call 0x1C17CF4
	028 Move X0, 0x674000
	029 Move X0, [X0+3224]
	030 Call 0x1C17CF4
	031 Move X0, 0x674000
	032 Move X0, [X0+3240]
	033 Call 0x1C17CF4
	034 Move X0, 0x674000
	035 Move X0, [X0+3216]
	036 Call 0x1C17CF4
	037 Move X0, 0x674000
	038 Move X0, [X0+3008]
	039 Call 0x1C17CF4
	040 Move X0, 0x66A000
	041 Move X0, [X0+2088]
	042 Call 0x1C17CF4
	043 Move X0, 0x674000
	044 Move X0, [X0+3584]
	045 Call 0x1C17CF4
	046 Move X0, 0x674000
	047 Move X0, [X0+3088]
	048 Call 0x1C17CF4
	049 Move X0, 0x615000
	050 Move X0, [X0+464]
	051 Call 0x1C17CF4
	052 Move X0, 0x674000
	053 Move X0, [X0+3104]
	054 Call 0x1C17CF4
	055 Move X0, 0x60F000
	056 Move X0, [X0+2760]
	057 Call 0x1C17CF4
	058 Move X0, 0x674000
	059 Move X0, [X0+1456]
	060 Call 0x1C17CF4
	061 Move X0, 0x674000
	062 Move X0, [X0+1400]
	063 Call 0x1C17CF4
	064 Move X0, 0x674000
	065 Move X0, [X0+3592]
	066 Call 0x1C17CF4
	067 Move X0, 0x674000
	068 Move X0, [X0+3600]
	069 Call 0x1C17CF4
	070 Move X0, 0x674000
	071 Move X0, [X0+3608]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X22+1449], W8
	075 Move [X31+24], X31
	076 Move [X21], X31
	077 Move X0, [X19+528]
	078 Compare X0, 0
	079 JumpIfEqual {591}
	080 Move X8, 0x674000
	081 Move X8, [X8+3584]
	082 Move W1, W20
	083 Move X2, [X8]
	084 Call HashSet`1<UInt32>.Contains, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {108}
	089 Move X22, [X19+64]
	090 Add X0, X19, 80
	091 Move X1, X31
	092 Call FaceInfo.get_pointSize, X0
	093 Move X28, 0x674000
	094 Move X28, [X28+3008]
	095 Move W23, W0
	096 Move X8, [X28]
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X22
	103 Move W1, W23
	104 Move X2, X31
	105 Call FontEngine.LoadFontFace, X0, X1
	106 Compare W0, 0
	107 JumpIfEqual {122}
	108 Move W0, W31
	109 Move X20, [X31+96]
	110 Move X19, [X31+104]
	111 Move X22, [X31+80]
	112 Move X21, [X31+88]
	113 Move X24, [X31+64]
	114 Move X23, [X31+72]
	115 Move X26, [X31+48]
	116 Move X25, [X31+56]
	117 Move X28, [X31+32]
	118 Move X27, [X31+40]
	119 Move X30, [X31+16]
	120 Add X31, X31, 112
	121 Return X0
	122 Move X0, [X28]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move W0, W20
	128 Move X1, X31
	129 Call FontEngine.GetGlyphIndex, X0
	130 Move W22, W0
	131 Compare W0, 0
	132 JumpIfNotEqual {154}
	133 Move W8, 0x2011
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X28]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move W0, 32
	143 Move X0, [X28]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move W0, 45
	149 Move X1, X31
	150 Call FontEngine.GetGlyphIndex, X0
	151 Move W22, W0
	152 Compare W0, 0
	153 JumpIfEqual {465}
	154 Move X0, [X19+184]
	155 Compare X0, 0
	156 JumpIfEqual {591}
	157 Move X8, 0x674000
	158 Move X8, [X8+3240]
	159 Move W1, W22
	160 Move X2, [X8]
	161 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {205}
	166 Move X0, [X19+184]
	167 Compare X0, 0
	168 JumpIfEqual {591}
	169 Move X8, 0x674000
	170 Move X8, [X8+3216]
	171 Move W1, W22
	172 Move X2, [X8]
	173 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	174 Move X8, 0x674000
	175 Move X8, [X8+1456]
	176 Move X23, X0
	177 Move X8, [X8]
	178 Move X0, X8
	179 Call 0x1C17F10
	180 Move W1, W20
	181 Move X2, X19
	182 Move X3, X23
	183 Move X22, X0
	184 Call TMP_Character..ctor, X0, X1, X2, X3
	185 Move [X21], X22
	186 Move X0, [X19+192]
	187 Compare X0, 0
	188 JumpIfEqual {591}
	189 Move X9, 0x674000
	190 Move X9, [X9+3104]
	191 Move W10, [X0+28]
	192 Move X8, [X0+16]
	193 Move X9, [X9]
	194 Add W10, W10, 1
	195 Move [X0+28], W10
	196 Compare X8, 0
	197 JumpIfEqual {591}
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Move W11, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add W9, W10, 1
	202 Add X8, X8, X10
	203 Move [X0+24], W9
	204 Move [X8+32], X22
	205 Move [X31+24], X31
	206 Move X8, [X19+216]
	207 Compare X8, 0
	208 JumpIfEqual {591}
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Move W10, [X8+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add X8, X8, X9
	213 Move X0, [X8+32]
	214 Compare X0, 0
	215 JumpIfEqual {591}
	216 Move X8, [X0]
	217 Move X9, [X8+488]
	218 Move X1, [X8+496]
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {396}
	224 Move X8, [X19+216]
	225 Compare X8, 0
	226 JumpIfEqual {591}
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Move W10, [X8+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add X8, X8, X9
	231 Move X0, [X8+32]
	232 Compare X0, 0
	233 JumpIfEqual {591}
	234 Move X8, [X0]
	235 Move X9, [X8+392]
	236 Move X1, [X8+400]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare W0, 0
	239 JumpIfEqual {256}
	240 Move X8, [X19+216]
	241 Compare X8, 0
	242 JumpIfEqual {591}
	243 NotImplemented "Instruction LDRSW not yet implemented."
	244 Move W10, [X8+24]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Add X8, X8, X9
	247 Move X0, [X8+32]
	248 Compare X0, 0
	249 JumpIfEqual {591}
	250 Move X8, [X0]
	251 Move X9, [X8+424]
	252 Move X1, [X8+432]
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare W0, 0
	255 JumpIfNotEqual {286}
	256 Move X8, [X19+216]
	257 Compare X8, 0
	258 JumpIfEqual {591}
	259 NotImplemented "Instruction LDRSW not yet implemented."
	260 Move W10, [X8+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Add X8, X8, X9
	263 Move X0, [X8+32]
	264 Compare X0, 0
	265 JumpIfEqual {591}
	266 Move W2, [X19+268]
	267 Move W1, [X19+264]
	268 Move X3, X31
	269 Call Texture2D.Resize, X0, X1, X2
	270 Move X8, [X19+216]
	271 Compare X8, 0
	272 JumpIfEqual {591}
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Move W10, [X8+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Move X0, [X28]
	277 Add X8, X8, X9
	278 Move X23, [X8+32]
	279 Move W9, [X0+224]
	280 Compare W9, 0
	281 JumpIfNotEqual {283}
	282 Call 0x1C17DFC
	283 Move X0, X23
	284 Move X1, X31
	285 Call FontEngine.ResetAtlasTexture, X0
	286 Move X8, [X19+216]
	287 Compare X8, 0
	288 JumpIfEqual {591}
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 Move W10, [X8+24]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X0, [X28]
	293 Add X8, X8, X9
	294 Move W23, [X19+272]
	295 Move X24, [X19+232]
	296 Move X26, [X19+240]
	297 Move W25, [X19+276]
	298 Move W9, [X0+224]
	299 Move X27, [X8+32]
	300 Compare W9, 0
	301 JumpIfNotEqual {303}
	302 Call 0x1C17DFC
	303 Add X7, X31, 24
	304 Move W0, W22
	305 Move W1, W23
	306 Move W2, W31
	307 Move X3, X26
	308 Move X4, X24
	309 Move W5, W25
	310 Move X6, X27
	311 Move [X31], X31
	312 Call FontEngine.TryAddGlyphToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfEqual {355}
	317 Move W8, [X19+228]
	318 Compare W8, 0
	319 JumpIfEqual {108}
	320 Move X0, X19
	321 Call TMP_FontAsset.SetupNewAtlasTexture, X0
	322 Move X8, [X19+216]
	323 Compare X8, 0
	324 JumpIfEqual {591}
	325 NotImplemented "Instruction LDRSW not yet implemented."
	326 Move W10, [X8+24]
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, [X28]
	329 Add X8, X8, X9
	330 Move W23, [X19+272]
	331 Move X24, [X19+232]
	332 Move X26, [X19+240]
	333 Move W25, [X19+276]
	334 Move W9, [X0+224]
	335 Move X27, [X8+32]
	336 Compare W9, 0
	337 JumpIfNotEqual {339}
	338 Call 0x1C17DFC
	339 Add X7, X31, 24
	340 Move W0, W22
	341 Move W1, W23
	342 Move W2, W31
	343 Move X3, X26
	344 Move X4, X24
	345 Move W5, W25
	346 Move X6, X27
	347 Move [X31], X31
	348 Call FontEngine.TryAddGlyphToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	349 Move W8, W0
	350 Move W0, W31
	351 Move TEMP, X8
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfNotEqual {109}
	355 Move X0, [X31+24]
	356 Compare X0, 0
	357 JumpIfEqual {591}
	358 Move W1, [X19+224]
	359 Move X2, X31
	360 Call Glyph.set_atlasIndex, X0, X1
	361 Move X0, [X19+176]
	362 Compare X0, 0
	363 JumpIfEqual {591}
	364 Move X9, 0x674000
	365 Move X1, [X31+24]
	366 Move X9, [X9+3088]
	367 Move W10, [X0+28]
	368 Move X8, [X0+16]
	369 Move X9, [X9]
	370 Add W10, W10, 1
	371 Move [X0+28], W10
	372 Compare X8, 0
	373 JumpIfEqual {591}
	374 NotImplemented "Instruction LDRSW not yet implemented."
	375 Move W11, [X8+24]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Add W9, W10, 1
	378 Add X8, X8, X10
	379 Move [X0+24], W9
	380 Move [X8+32], X1
	381 Move X8, [X9+32]
	382 Move X1, X22
	383 Move X8, [X8+192]
	384 Move X2, [X8+112]
	385 Call List`1<Object>.AddWithResize, X0, X1
	386 Move X0, [X19+200]
	387 Compare X0, 0
	388 JumpIfEqual {591}
	389 Move X8, 0x674000
	390 Move X2, [X21]
	391 Move X8, [X8+3280]
	392 Move W1, W20
	393 Move X3, [X8]
	394 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	395 Move W0, 1
	396 Move X8, 0x60F000
	397 Move X8, [X8+2760]
	398 Move W1, 5
	399 Move X0, [X8]
	400 Call 0x1C17D6C
	401 Compare X0, 0
	402 JumpIfEqual {591}
	403 Move W8, [X0+24]
	404 Move X20, X0
	405 Compare W8, 0
	406 JumpIfEqual {592}
	407 Move X8, 0x674000
	408 Move X8, [X8+3608]
	409 Move X0, X19
	410 Move X1, X31
	411 Move X8, [X8]
	412 Move [X20+32], X8
	413 Call Object.get_name, X0
	414 Move W8, [X20+24]
	415 NotImplemented "Instruction CMP not yet implemented."
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move [X20+40], X0
	418 Move X8, 0x674000
	419 Move X8, [X8+3600]
	420 Move X8, [X8]
	421 Move [X20+48], X8
	422 Move X8, [X19+216]
	423 Compare X8, 0
	424 JumpIfEqual {591}
	425 NotImplemented "Instruction LDRSW not yet implemented."
	426 Move W10, [X8+24]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Add X8, X8, X9
	429 Move X0, [X8+32]
	430 Compare X0, 0
	431 JumpIfEqual {591}
	432 Move X1, X31
	433 Call Object.get_name, X0
	434 Move W8, [X20+24]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move [X20+56], X0
	438 Move X8, 0x674000
	439 Move X8, [X8+3592]
	440 Move X0, X20
	441 Move X1, X31
	442 Move X8, [X8]
	443 Move [X20+64], X8
	444 Call String.Concat, X0
	445 Move X8, [X19+216]
	446 Compare X8, 0
	447 JumpIfEqual {591}
	448 NotImplemented "Instruction LDRSW not yet implemented."
	449 Move W10, [X8+24]
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move X10, 0x60F000
	452 Move X10, [X10+2600]
	453 Move X20, X0
	454 Add X8, X8, X9
	455 Move X19, [X8+32]
	456 Move X0, [X10]
	457 Move W9, [X0+224]
	458 Compare W9, 0
	459 JumpIfNotEqual {461}
	460 Call 0x1C17DFC
	461 Move X0, X20
	462 Move X1, X19
	463 Move X2, X31
	464 Call Debug.LogWarning, X0, X1
	465 Move X0, [X19+528]
	466 Compare X0, 0
	467 JumpIfEqual {591}
	468 Move X8, 0x66A000
	469 Move X8, [X8+2088]
	470 Move W1, W20
	471 Move X2, [X8]
	472 Call HashSet`1<UInt32>.Add, X0, X1
	473 Move X8, [X9+32]
	474 Move X8, [X8+192]
	475 Move X2, [X8+112]
	476 Call List`1<Object>.AddWithResize, X0, X1
	477 Move X0, [X19+184]
	478 Compare X0, 0
	479 JumpIfEqual {591}
	480 Move X8, 0x673000
	481 Move X2, [X31+24]
	482 Move X8, [X8+3224]
	483 Move W1, W22
	484 Move X3, [X8]
	485 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	486 Move X8, 0x673000
	487 Move X24, [X31+24]
	488 Move X8, [X8+1456]
	489 Move X0, [X8]
	490 Call 0x1C17F10
	491 Move W1, W20
	492 Move X2, X19
	493 Move X3, X24
	494 Move X23, X0
	495 Call TMP_Character..ctor, X0, X1, X2, X3
	496 Move [X21], X23
	497 Move X0, [X19+192]
	498 Compare X0, 0
	499 JumpIfEqual {591}
	500 Move X9, 0x673000
	501 Move X9, [X9+3104]
	502 Move W10, [X0+28]
	503 Move X8, [X0+16]
	504 Move X9, [X9]
	505 Add W10, W10, 1
	506 Move [X0+28], W10
	507 Compare X8, 0
	508 JumpIfEqual {591}
	509 NotImplemented "Instruction LDRSW not yet implemented."
	510 Move W11, [X8+24]
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Add W9, W10, 1
	513 Add X8, X8, X10
	514 Move [X0+24], W9
	515 Move [X8+32], X23
	516 Move X8, [X9+32]
	517 Move X1, X23
	518 Move X8, [X8+192]
	519 Move X2, [X8+112]
	520 Call List`1<Object>.AddWithResize, X0, X1
	521 Move X0, [X19+200]
	522 Compare X0, 0
	523 JumpIfEqual {591}
	524 Move X8, 0x673000
	525 Move X2, [X21]
	526 Move X8, [X8+3280]
	527 Move W1, W20
	528 Move X3, [X8]
	529 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	530 Move X0, [X19+472]
	531 Compare X0, 0
	532 JumpIfEqual {591}
	533 Move X20, 0x614000
	534 Move X20, [X20+464]
	535 Move W10, [X0+28]
	536 Move X8, [X0+16]
	537 Move X9, [X20]
	538 Add W10, W10, 1
	539 Move [X0+28], W10
	540 Compare X8, 0
	541 JumpIfEqual {591}
	542 NotImplemented "Instruction LDRSW not yet implemented."
	543 Move W11, [X8+24]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Add W9, W10, 1
	546 Add X8, X8, X10
	547 Move [X0+24], W9
	548 Move [X8+32], W22
	549 Move X8, [X9+32]
	550 Move W1, W22
	551 Move X8, [X8+192]
	552 Move X2, [X8+112]
	553 Call List`1<UInt32>.AddWithResize, X0, X1
	554 Move X0, [X19+480]
	555 Compare X0, 0
	556 JumpIfEqual {591}
	557 Move W10, [X0+28]
	558 Move X8, [X0+16]
	559 Move X9, [X20]
	560 Add W10, W10, 1
	561 Move [X0+28], W10
	562 Compare X8, 0
	563 JumpIfEqual {591}
	564 NotImplemented "Instruction LDRSW not yet implemented."
	565 Move W11, [X8+24]
	566 NotImplemented "Instruction CMP not yet implemented."
	567 Add W9, W10, 1
	568 Add X8, X8, X10
	569 Move [X0+24], W9
	570 Move [X8+32], W22
	571 Move X8, [X9+32]
	572 Move W1, W22
	573 Move X8, [X8+192]
	574 Move X2, [X8+112]
	575 Call List`1<UInt32>.AddWithResize, X0, X1
	576 Move X0, X31
	577 Call TMP_Settings.get_getFontFeaturesAtRuntime
	578 Move TEMP, X0
	579 And TEMP, TEMP, 1
	580 Compare TEMP, 1
	581 JumpIfNotEqual {395}
	582 Move X8, 0x673000
	583 Move X8, [X8+1400]
	584 Move X0, [X8]
	585 Move W8, [X0+224]
	586 Compare W8, 0
	587 JumpIfNotEqual {589}
	588 Call 0x1C17DFC
	589 Move X0, X19
	590 Call TMP_FontAsset.RegisterFontAssetForFontFeatureUpdate, X0
	591 Call 0x1C17F20
	592 Call 0x1C17F28

Method: System.Boolean TryGetCharacter_and_QueueRenderToTexture(System.UInt32 unicode, out TMPro.TMP_Character character)

Disassembly:
	0x03AE9634 ADRP X8, 0x60A000
	0x03AE9638 LDR X8, [X8 + 0xA28]
	0x03AE963C MOV X19, X0
	0x03AE9640 LDR X8, [X8]
	0x03AE9644 LDR W9, [X8 + 0xE0]
	0x03AE9648 CBNZ W9, 0x3AE9654
	0x03AE964C MOV X0, X8
	0x03AE9650 BL 0x1C16DFC
	0x03AE9654 MOV X0, X19
	0x03AE9658 MOV X1, X20
	0x03AE965C LDP X20, X19, [X31 + 0x30]
	0x03AE9660 LDP X22, X21, [X31 + 0x20]
	0x03AE9664 LDP X24, X23, [X31 + 0x10]
	0x03AE9668 MOV X2, X31
	0x03AE966C LDP X30, X25, [X31], #0x40
	0x03AE9670 B 0x3C06B0C
	0x03AE9674 LDR X8, [X20]
	0x03AE9678 MOV X0, X20
	0x03AE967C LDP X9, X1, [X8 + 0x188]
	0x03AE9680 BLR X9
	0x03AE9684 LDR W1, [X19 + 0x108]
	0x03AE9688 CMP W0, W1
	0x03AE968C B.NE 0x3AE96B4
	0x03AE9690 LDR X8, [X20]
	0x03AE9694 MOV X0, X20
	0x03AE9698 LDP X9, X1, [X8 + 0x1A8]
	0x03AE969C BLR X9
	0x03AE96A0 LDR W2, [X19 + 0x10C]
	0x03AE96A4 CMP W0, W2
	0x03AE96A8 B.EQ 0x3AE96CC
	0x03AE96AC LDR W1, [X19 + 0x108]
	0x03AE96B0 B 0x3AE96B8
	0x03AE96B4 LDR W2, [X19 + 0x10C]
	0x03AE96B8 MOVZ W3, 0x1
	0x03AE96BC MOV X0, X20
	0x03AE96C0 MOV W4, W31
	0x03AE96C4 MOV X5, X31
	0x03AE96C8 BL 0x3C1C648
	0x03AE96CC ADRP X8, 0x66F000
	0x03AE96D0 LDR X8, [X8 + 0xBC0]
	0x03AE96D4 LDR X0, [X8]
	0x03AE96D8 LDR W8, [X0 + 0xE0]
	0x03AE96DC CBNZ W8, 0x3AE96E4
	0x03AE96E0 BL 0x1C16DFC
	0x03AE96E4 MOV X0, X20
	0x03AE96E8 MOV X1, X31
	0x03AE96EC BL 0x3C9E1E0
	0x03AE96F0 MOV X0, X20
	0x03AE96F4 LDP X20, X19, [X31 + 0x30]
	0x03AE96F8 LDP X22, X21, [X31 + 0x20]
	0x03AE96FC LDP X24, X23, [X31 + 0x10]
	0x03AE9700 MOV X1, X31
	0x03AE9704 LDP X30, X25, [X31], #0x40
	0x03AE9708 B 0x3C1C540
	0x03AE970C BL 0x1C16F28
	0x03AE9710 STP X30, X19, [X31 - 0x10]!
	0x03AE9714 MOV X19, X0
	0x03AE9718 BL 0x3AE91F0
	0x03AE971C MOVZ W1, 0x1
	0x03AE9720 MOV X0, X19
	0x03AE9724 LDP X30, X19, [X31], #0x10
	0x03AE9728 B 0x3AE9400
	0x03AE972C SUB X31, X31, 0x40
	0x03AE9730 STP X30, X23, [X31 + 0x10]
	0x03AE9734 STP X22, X21, [X31 + 0x20]
	0x03AE9738 STP X20, X19, [X31 + 0x30]
	0x03AE973C ADRP X20, 0x8F9000
	0x03AE9740 LDRB W8, [X20 + 0x5B0]
	0x03AE9744 MOV X19, X0
	0x03AE9748 TBNZ X8, 0x0, 0x3AE9778
	0x03AE974C ADRP X0, 0x66F000
	0x03AE9750 LDR X0, [X0 + 0xCF0]
	0x03AE9754 BL 0x1C16CF4
	0x03AE9758 ADRP X0, 0x66F000
	0x03AE975C LDR X0, [X0 + 0xCF8]
	0x03AE9760 BL 0x1C16CF4
	0x03AE9764 ADRP X0, 0x633000
	0x03AE9768 LDR X0, [X0 + 0xD08]
	0x03AE976C BL 0x1C16CF4
	0x03AE9770 MOVZ W8, 0x1
	0x03AE9774 STRB W8, [X20 + 0x5B0]
	0x03AE9778 LDR X8, [X19 + 0xC0]
	0x03AE977C CBZ X8, 0x3AE97F4
	0x03AE9780 ADRP X9, 0x633000
	0x03AE9784 LDR X9, [X9 + 0xD08]
	0x03AE9788 LDR W1, [X8 + 0x18]
	0x03AE978C LDR X0, [X9]
	0x03AE9790 BL 0x1C16D6C
	0x03AE9794 LDR X8, [X19 + 0xC0]
	0x03AE9798 CBZ X8, 0x3AE97F4
	0x03AE979C ADRP X22, 0x66F000
	0x03AE97A0 LDR X22, [X22 + 0xCF8]
	0x03AE97A4 MOV X20, X0
	0x03AE97A8 MOV X21, X31
	0x03AE97AC ADD X23, X0, 0x20
	0x03AE97B0 LDRSW X9, [X8 + 0x18]
	0x03AE97B4 CMP X21, X9
	0x03AE97B8 B.GE 0x3AE97F8
	0x03AE97BC LDR X2, [X22]
	0x03AE97C0 MOV X0, X8
	0x03AE97C4 MOV W1, W21
	0x03AE97C8 BL 0x301BCCC
	0x03AE97CC CBZ X0, 0x3AE97F4
	0x03AE97D0 CBZ X20, 0x3AE97F4
	0x03AE97D4 LDR W8, [X20 + 0x18]
	0x03AE97D8 CMP X21, X8
	0x03AE97DC B.CS 0x3AE984C
	0x03AE97E0 LDR W8, [X0 + 0x14]
	0x03AE97E4 STR W8, [X23, X21, LSL #2]
	0x03AE97E8 LDR X8, [X19 + 0xC0]
	0x03AE97EC ADD X21, X21, 0x1
	0x03AE97F0 CBNZ X8, 0x3AE97B0
	0x03AE97F4 BL 0x1C16F20
	0x03AE97F8 MOV X0, X19
	0x03AE97FC BL 0x3AE91F0
	0x03AE9800 MOVZ W1, 0x1
	0x03AE9804 MOV X0, X19
	0x03AE9808 BL 0x3AE9400
	0x03AE980C MOV X0, X19
	0x03AE9810 BL 0x3AE1A88
	0x03AE9814 CBZ X20, 0x3AE97F4
	0x03AE9818 LDR X8, [X20 + 0x18]
	0x03AE981C CBZ X8, 0x3AE9838
	0x03AE9820 ADD X2, X31, 0x8
	0x03AE9824 MOVZ W3, 0x1
	0x03AE9828 MOV X0, X19
	0x03AE982C MOV X1, X20
	0x03AE9830 STR X31, [X31 + 0x8]
	0x03AE9834 BL 0x3AE67B8
	0x03AE9838 LDP X20, X19, [X31 + 0x30]
	0x03AE983C LDP X22, X21, [X31 + 0x20]
	0x03AE9840 LDP X30, X23, [X31 + 0x10]
	0x03AE9844 ADD X31, X31, 0x40
	0x03AE9848 RET
	0x03AE984C BL 0x1C16F28
	0x03AE9850 STP S0, S1, [X0]
	0x03AE9854 STP S2, S3, [X0 + 0x8]
	0x03AE9858 RET
	0x03AE985C STR W1, [X0]
	0x03AE9860 STP S0, S1, [X0 + 0x4]
	0x03AE9864 STP S2, S3, [X0 + 0xC]
	0x03AE9868 RET
	0x03AE986C STP X30, X21, [X31 - 0x20]!
	0x03AE9870 STP X20, X19, [X31 + 0x10]
	0x03AE9874 MOV X20, X1
	0x03AE9878 MOV X1, X31
	0x03AE987C MOV X19, X2
	0x03AE9880 MOV X21, X0
	0x03AE9884 BL 0x33BDD8C
	0x03AE9888 LDR W8, [X20 + 0x10]
	0x03AE988C LDR V0, [X20]
	0x03AE9890 STR W8, [X21 + 0x20]
	0x03AE9894 STR V0, [X21 + 0x1]
	0x03AE9898 LDR V0, [X19]
	0x03AE989C LDR W8, [X19 + 0x10]
	0x03AE98A0 LDP X20, X19, [X31 + 0x10]
	0x03AE98A4 STUR V0, [X21 + 0x24]
	0x03AE98A8 STP W8, W31, [X21 + 0x34]
	0x03AE98AC LDP X30, X21, [X31], #0x20
	0x03AE98B0 RET
	0x03AE98B4 STP X29, X30, [X31 - 0x60]!
	0x03AE98B8 STP X28, X27, [X31 + 0x10]
	0x03AE98BC STP X26, X25, [X31 + 0x20]
	0x03AE98C0 STP X24, X23, [X31 + 0x30]
	0x03AE98C4 STP X22, X21, [X31 + 0x40]
	0x03AE98C8 STP X20, X19, [X31 + 0x50]
	0x03AE98CC ADRP X20, 0x8F9000
	0x03AE98D0 ADRP X28, 0x66F000
	0x03AE98D4 ADRP X27, 0x66F000
	0x03AE98D8 ADRP X21, 0x66F000
	0x03AE98DC ADRP X26, 0x66F000
	0x03AE98E0 ADRP X25, 0x66F000
	0x03AE98E4 ADRP X29, 0x66F000
	0x03AE98E8 ADRP X24, 0x610000
	0x03AE98EC ADRP X23, 0x610000
	0x03AE98F0 ADRP X22, 0x665000
	0x03AE98F4 LDR X28, [X28 + 0xEB0]
	0x03AE98F8 LDR X27, [X27 + 0xEB8]
	0x03AE98FC LDR X21, [X21 + 0xEC0]
	0x03AE9900 LDR X26, [X26 + 0xEC8]
	0x03AE9904 LDR X25, [X25 + 0xED0]
	0x03AE9908 LDR X29, [X29 + 0xD70]
	0x03AE990C LDRB W8, [X20 + 0x5B5]
	0x03AE9910 LDR X24, [X24 + 0x1E8]
	0x03AE9914 LDR X23, [X23 + 0x1E0]
	0x03AE9918 LDR X22, [X22 + 0x838]
	0x03AE991C MOV X19, X0
	0x03AE9920 TBNZ X8, 0x0, 0x3AE99C8
	0x03AE9924 ADRP X0, 0x665000
	0x03AE9928 LDR X0, [X0 + 0x830]
	0x03AE992C BL 0x1C16CF4
	0x03AE9930 ADRP X0, 0x611000
	0x03AE9934 LDR X0, [X0 + 0x688]
	0x03AE9938 BL 0x1C16CF4
	0x03AE993C ADRP X0, 0x60B000
	0x03AE9940 LDR X0, [X0 + 0xE08]
	0x03AE9944 BL 0x1C16CF4
	0x03AE9948 ADRP X0, 0x665000
	0x03AE994C LDR X0, [X0 + 0x838]
	0x03AE9950 BL 0x1C16CF4
	0x03AE9954 ADRP X0, 0x66F000
	0x03AE9958 LDR X0, [X0 + 0xED0]
	0x03AE995C BL 0x1C16CF4
	0x03AE9960 ADRP X0, 0x610000
	0x03AE9964 LDR X0, [X0 + 0x1E0]
	0x03AE9968 BL 0x1C16CF4
	0x03AE996C ADRP X0, 0x66F000
	0x03AE9970 LDR X0, [X0 + 0xEB8]
	0x03AE9974 BL 0x1C16CF4
	0x03AE9978 ADRP X0, 0x66F000
	0x03AE997C LDR X0, [X0 + 0xEC8]
	0x03AE9980 BL 0x1C16CF4
	0x03AE9984 ADRP X0, 0x66F000
	0x03AE9988 LDR X0, [X0 + 0xEB0]
	0x03AE998C BL 0x1C16CF4
	0x03AE9990 ADRP X0, 0x610000
	0x03AE9994 LDR X0, [X0 + 0x1E8]
	0x03AE9998 BL 0x1C16CF4
	0x03AE999C ADRP X0, 0x66F000
	0x03AE99A0 LDR X0, [X0 + 0xEC0]
	0x03AE99A4 BL 0x1C16CF4
	0x03AE99A8 ADRP X0, 0x66F000
	0x03AE99AC LDR X0, [X0 + 0xD70]
	0x03AE99B0 BL 0x1C16CF4
	0x03AE99B4 ADRP X0, 0x66F000
	0x03AE99B8 LDR X0, [X0 + 0xED8]
	0x03AE99BC BL 0x1C16CF4
	0x03AE99C0 MOVZ W8, 0x1
	0x03AE99C4 STRB W8, [X20 + 0x5B5]
	0x03AE99C8 LDR X0, [X28]
	0x03AE99CC BL 0x1C16F10
	0x03AE99D0 LDR X1, [X27]
	0x03AE99D4 MOV X20, X0
	0x03AE99D8 BL 0x301B7C4
	0x03AE99DC STR X20, [X19 + 0xB0]
	0x03AE99E0 LDR X0, [X21]
	0x03AE99E4 BL 0x1C16F10
	0x03AE99E8 LDR X1, [X26]
	0x03AE99EC MOV X20, X0
	0x03AE99F0 BL 0x301B7C4
	0x03AE99F4 STR X20, [X19 + 0xC0]
	0x03AE99F8 LDR X0, [X25]
	0x03AE99FC BL 0x1C16F10
	0x03AE9A00 MOV X20, X0
	0x03AE9A04 BL 0x3AE9B90
	0x03AE9A08 STR X20, [X19 + 0x120]
	0x03AE9A0C LDR X0, [X29]
	0x03AE9A10 BL 0x1C16F10
	0x03AE9A14 MOV X20, X0
	0x03AE9A18 BL 0x3AE8D58
	0x03AE9A1C STR X20, [X19 + 0x128]
	0x03AE9A20 ADRP X8, 0x66F000
	0x03AE9A24 LDR X8, [X8 + 0xED8]
	0x03AE9A28 MOVZ W1, 0xA
	0x03AE9A2C LDR X0, [X8]
	0x03AE9A30 BL 0x1C16D6C
	0x03AE9A34 ADRP X8, 0xFFFFFFFFFD004000
	0x03AE9A38 LDR V0, [X8 + 0xA68]
	0x03AE9A3C MOVZ W8, 0xA23
	0x03AE9A40 STR X0, [X19 + 0x198]
	0x03AE9A44 STRH W8, [X19 + 0x1B8]
	0x03AE9A48 STR D0, [X19 + 0x1B0]
	0x03AE9A4C ADRP X8, 0x60B000
	0x03AE9A50 LDR X8, [X8 + 0xE08]
	0x03AE9A54 LDR X0, [X8]
	0x03AE9A58 BL 0x1C16F10
	0x03AE9A5C ADRP X8, 0x611000
	0x03AE9A60 LDR X8, [X8 + 0x688]
	0x03AE9A64 MOV X20, X0
	0x03AE9A68 LDR X1, [X8]
	0x03AE9A6C BL 0x2DA9EF4
	0x03AE9A70 STR X20, [X19 + 0x1C0]
	0x03AE9A74 LDR X0, [X28]
	0x03AE9A78 BL 0x1C16F10
	0x03AE9A7C LDR X1, [X27]
	0x03AE9A80 MOV X20, X0
	0x03AE9A84 BL 0x301B7C4
	0x03AE9A88 STR X20, [X19 + 0x1C8]
	0x03AE9A8C LDR X0, [X28]
	0x03AE9A90 BL 0x1C16F10
	0x03AE9A94 LDR X1, [X27]
	0x03AE9A98 MOV X20, X0
	0x03AE9A9C BL 0x301B7C4
	0x03AE9AA0 STR X20, [X19 + 0x1D0]
	0x03AE9AA4 LDR X0, [X24]
	0x03AE9AA8 BL 0x1C16F10
	0x03AE9AAC LDR X1, [X23]
	0x03AE9AB0 MOV X20, X0
	0x03AE9AB4 BL 0x30C0EA0
	0x03AE9AB8 STR X20, [X19 + 0x1D8]
	0x03AE9ABC LDR X0, [X24]
	0x03AE9AC0 BL 0x1C16F10
	0x03AE9AC4 LDR X1, [X23]
	0x03AE9AC8 MOV X20, X0
	0x03AE9ACC BL 0x30C0EA0
	0x03AE9AD0 STR X20, [X19 + 0x1E0]
	0x03AE9AD4 LDR X0, [X24]
	0x03AE9AD8 BL 0x1C16F10
	0x03AE9ADC LDR X1, [X23]
	0x03AE9AE0 MOV X20, X0
	0x03AE9AE4 BL 0x30C0EA0
	0x03AE9AE8 STR X20, [X19 + 0x1E8]
	0x03AE9AEC LDR X0, [X22]
	0x03AE9AF0 BL 0x1C16F10
	0x03AE9AF4 ADRP X25, 0x665000
	0x03AE9AF8 LDR X25, [X25 + 0x830]
	0x03AE9AFC MOV X20, X0
	0x03AE9B00 LDR X1, [X25]
	0x03AE9B04 BL 0x2DCCB98
	0x03AE9B08 STR X20, [X19 + 0x1F0]
	0x03AE9B0C LDR X0, [X21]
	0x03AE9B10 BL 0x1C16F10
	0x03AE9B14 LDR X1, [X26]
	0x03AE9B18 MOV X20, X0
	0x03AE9B1C BL 0x301B7C4
	0x03AE9B20 STR X20, [X19 + 0x1F8]
	0x03AE9B24 LDR X0, [X22]
	0x03AE9B28 BL 0x1C16F10
	0x03AE9B2C LDR X1, [X25]
	0x03AE9B30 MOV X20, X0
	0x03AE9B34 BL 0x2DCCB98
	0x03AE9B38 STR X20, [X19 + 0x200]
	0x03AE9B3C LDR X0, [X24]
	0x03AE9B40 BL 0x1C16F10
	0x03AE9B44 LDR X1, [X23]
	0x03AE9B48 MOV X20, X0
	0x03AE9B4C BL 0x30C0EA0
	0x03AE9B50 STR X20, [X19 + 0x208]
	0x03AE9B54 LDR X0, [X22]
	0x03AE9B58 BL 0x1C16F10
	0x03AE9B5C LDR X1, [X25]
	0x03AE9B60 MOV X20, X0
	0x03AE9B64 BL 0x2DCCB98
	0x03AE9B68 STR X20, [X19 + 0x210]
	0x03AE9B6C MOV X0, X19
	0x03AE9B70 LDP X20, X19, [X31 + 0x50]
	0x03AE9B74 LDP X22, X21, [X31 + 0x40]
	0x03AE9B78 LDP X24, X23, [X31 + 0x30]
	0x03AE9B7C LDP X26, X25, [X31 + 0x20]
	0x03AE9B80 LDP X28, X27, [X31 + 0x10]
	0x03AE9B84 MOV X1, X31
	0x03AE9B88 LDP X29, X30, [X31], #0x60
	0x03AE9B8C B 0x3C36D2C
	0x03AE9B90 STR X30, [X31 - 0x30]!
	0x03AE9B94 STP X22, X21, [X31 + 0x10]
	0x03AE9B98 STP X20, X19, [X31 + 0x20]
	0x03AE9B9C ADRP X22, 0x8F9000
	0x03AE9BA0 ADRP X21, 0x66F000
	0x03AE9BA4 ADRP X20, 0x66F000
	0x03AE9BA8 LDRB W8, [X22 + 0x5BB]
	0x03AE9BAC LDR X21, [X21 + 0xEE0]
	0x03AE9BB0 LDR X20, [X20 + 0xEE8]
	0x03AE9BB4 MOV X19, X0
	0x03AE9BB8 TBNZ X8, 0x0, 0x3AE9BDC
	0x03AE9BBC ADRP X0, 0x66F000
	0x03AE9BC0 LDR X0, [X0 + 0xEE8]
	0x03AE9BC4 BL 0x1C16CF4
	0x03AE9BC8 ADRP X0, 0x66F000
	0x03AE9BCC LDR X0, [X0 + 0xEE0]
	0x03AE9BD0 BL 0x1C16CF4
	0x03AE9BD4 MOVZ W8, 0x1
	0x03AE9BD8 STRB W8, [X22 + 0x5BB]
	0x03AE9BDC MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x8FA000
	011 Move W8, [X22+1450]
	012 Move X21, X2
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {57}
	019 Move X0, 0x670000
	020 Move X0, [X0+3280]
	021 Call 0x1C17CF4
	022 Move X0, 0x670000
	023 Move X0, [X0+3224]
	024 Call 0x1C17CF4
	025 Move X0, 0x670000
	026 Move X0, [X0+3240]
	027 Call 0x1C17CF4
	028 Move X0, 0x670000
	029 Move X0, [X0+3216]
	030 Call 0x1C17CF4
	031 Move X0, 0x670000
	032 Move X0, [X0+3008]
	033 Call 0x1C17CF4
	034 Move X0, 0x666000
	035 Move X0, [X0+2088]
	036 Call 0x1C17CF4
	037 Move X0, 0x670000
	038 Move X0, [X0+3584]
	039 Call 0x1C17CF4
	040 Move X0, 0x670000
	041 Move X0, [X0+3088]
	042 Call 0x1C17CF4
	043 Move X0, 0x611000
	044 Move X0, [X0+464]
	045 Call 0x1C17CF4
	046 Move X0, 0x670000
	047 Move X0, [X0+3104]
	048 Call 0x1C17CF4
	049 Move X0, 0x670000
	050 Move X0, [X0+1456]
	051 Call 0x1C17CF4
	052 Move X0, 0x670000
	053 Move X0, [X0+1400]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+1450], W8
	057 Move [X31+8], X31
	058 Move [X21], X31
	059 Move X0, [X19+528]
	060 Compare X0, 0
	061 JumpIfEqual {396}
	062 Move X8, 0x670000
	063 Move X8, [X8+3584]
	064 Move W1, W20
	065 Move X2, [X8]
	066 Call HashSet`1<UInt32>.Contains, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {90}
	071 Move X22, [X19+64]
	072 Add X0, X19, 80
	073 Move X1, X31
	074 Call FaceInfo.get_pointSize, X0
	075 Move X24, 0x670000
	076 Move X24, [X24+3008]
	077 Move W23, W0
	078 Move X8, [X24]
	079 Move W9, [X8+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X8
	083 Call 0x1C17DFC
	084 Move X0, X22
	085 Move W1, W23
	086 Move X2, X31
	087 Call FontEngine.LoadFontFace, X0, X1
	088 Compare W0, 0
	089 JumpIfEqual {101}
	090 Move W0, W31
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X24, [X31+32]
	096 Move X23, [X31+40]
	097 Move X30, [X31+16]
	098 Move X25, [X31+24]
	099 Add X31, X31, 80
	100 Return X0
	101 Move X0, [X24]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move W0, W20
	107 Move X1, X31
	108 Call FontEngine.GetGlyphIndex, X0
	109 Move W22, W0
	110 Compare W0, 0
	111 JumpIfNotEqual {133}
	112 Move W8, 0x2011
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X24]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move W0, 32
	122 Move X0, [X24]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move W0, 45
	128 Move X1, X31
	129 Call FontEngine.GetGlyphIndex, X0
	130 Move W22, W0
	131 Compare W0, 0
	132 JumpIfEqual {238}
	133 Move X0, [X19+184]
	134 Compare X0, 0
	135 JumpIfEqual {396}
	136 Move X8, 0x670000
	137 Move X8, [X8+3240]
	138 Move W1, W22
	139 Move X2, [X8]
	140 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {184}
	145 Move X0, [X19+184]
	146 Compare X0, 0
	147 JumpIfEqual {396}
	148 Move X8, 0x670000
	149 Move X8, [X8+3216]
	150 Move W1, W22
	151 Move X2, [X8]
	152 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	153 Move X8, 0x670000
	154 Move X8, [X8+1456]
	155 Move X23, X0
	156 Move X8, [X8]
	157 Move X0, X8
	158 Call 0x1C17F10
	159 Move W1, W20
	160 Move X2, X19
	161 Move X3, X23
	162 Move X22, X0
	163 Call TMP_Character..ctor, X0, X1, X2, X3
	164 Move [X21], X22
	165 Move X0, [X19+192]
	166 Compare X0, 0
	167 JumpIfEqual {396}
	168 Move X9, 0x670000
	169 Move X9, [X9+3104]
	170 Move W10, [X0+28]
	171 Move X8, [X0+16]
	172 Move X9, [X9]
	173 Add W10, W10, 1
	174 Move [X0+28], W10
	175 Compare X8, 0
	176 JumpIfEqual {396}
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Move W11, [X8+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Add W9, W10, 1
	181 Add X8, X8, X10
	182 Move [X0+24], W9
	183 Move [X8+32], X22
	184 Move X0, [X24]
	185 Move W8, [X19+276]
	186 Move [X31+8], X31
	187 Move W10, 8
	188 Move W9, [X0+224]
	189 And W31, W8, 4
	190 Move W8, 10
	191 NotImplemented "Instruction CSEL not yet implemented."
	192 Compare W9, 0
	193 JumpIfNotEqual {195}
	194 Call 0x1C17DFC
	195 Add X2, X31, 8
	196 Move W0, W22
	197 Move W1, W23
	198 Move X3, X31
	199 Call FontEngine.TryGetGlyphWithIndexValue, X0, X1, X2
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {90}
	204 Move X0, [X19+176]
	205 Compare X0, 0
	206 JumpIfEqual {396}
	207 Move X25, 0x670000
	208 Move X1, [X31+8]
	209 Move X25, [X25+3088]
	210 Move W10, [X0+28]
	211 Move X8, [X0+16]
	212 Move X9, [X25]
	213 Add W10, W10, 1
	214 Move [X0+28], W10
	215 Compare X8, 0
	216 JumpIfEqual {396}
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Move W11, [X8+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Add W9, W10, 1
	221 Add X8, X8, X10
	222 Move [X0+24], W9
	223 Move [X8+32], X1
	224 Move X8, [X9+32]
	225 Move X1, X22
	226 Move X8, [X8+192]
	227 Move X2, [X8+112]
	228 Call List`1<Object>.AddWithResize, X0, X1
	229 Move X0, [X19+200]
	230 Compare X0, 0
	231 JumpIfEqual {396}
	232 Move X8, 0x670000
	233 Move X2, [X21]
	234 Move X8, [X8+3280]
	235 Move W1, W20
	236 Move X3, [X8]
	237 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	238 Move X0, [X19+528]
	239 Compare X0, 0
	240 JumpIfEqual {396}
	241 Move X8, 0x666000
	242 Move X8, [X8+2088]
	243 Move W1, W20
	244 Move X2, [X8]
	245 Call HashSet`1<UInt32>.Add, X0, X1
	246 Move X8, [X9+32]
	247 Move X8, [X8+192]
	248 Move X2, [X8+112]
	249 Call List`1<Object>.AddWithResize, X0, X1
	250 Move X0, [X19+184]
	251 Compare X0, 0
	252 JumpIfEqual {396}
	253 Move X8, 0x670000
	254 Move X2, [X31+8]
	255 Move X8, [X8+3224]
	256 Move W1, W22
	257 Move X3, [X8]
	258 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	259 Move X8, 0x670000
	260 Move X24, [X31+8]
	261 Move X8, [X8+1456]
	262 Move X0, [X8]
	263 Call 0x1C17F10
	264 Move W1, W20
	265 Move X2, X19
	266 Move X3, X24
	267 Move X23, X0
	268 Call TMP_Character..ctor, X0, X1, X2, X3
	269 Move [X21], X23
	270 Move X0, [X19+192]
	271 Compare X0, 0
	272 JumpIfEqual {396}
	273 Move X9, 0x670000
	274 Move X9, [X9+3104]
	275 Move W10, [X0+28]
	276 Move X8, [X0+16]
	277 Move X9, [X9]
	278 Add W10, W10, 1
	279 Move [X0+28], W10
	280 Compare X8, 0
	281 JumpIfEqual {396}
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Move W11, [X8+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add W9, W10, 1
	286 Add X8, X8, X10
	287 Move [X0+24], W9
	288 Move [X8+32], X23
	289 Move X8, [X9+32]
	290 Move X1, X23
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Call List`1<Object>.AddWithResize, X0, X1
	294 Move X0, [X19+200]
	295 Compare X0, 0
	296 JumpIfEqual {396}
	297 Move X8, 0x670000
	298 Move X2, [X21]
	299 Move X8, [X8+3280]
	300 Move W1, W20
	301 Move X3, [X8]
	302 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	303 Move X0, [X19+472]
	304 Compare X0, 0
	305 JumpIfEqual {396}
	306 Move X20, 0x611000
	307 Move X20, [X20+464]
	308 Move W10, [X0+28]
	309 Move X8, [X0+16]
	310 Move X9, [X20]
	311 Add W10, W10, 1
	312 Move [X0+28], W10
	313 Compare X8, 0
	314 JumpIfEqual {396}
	315 NotImplemented "Instruction LDRSW not yet implemented."
	316 Move W11, [X8+24]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Add W9, W10, 1
	319 Add X8, X8, X10
	320 Move [X0+24], W9
	321 Move [X8+32], W22
	322 Move X8, [X9+32]
	323 Move W1, W22
	324 Move X8, [X8+192]
	325 Move X2, [X8+112]
	326 Call List`1<UInt32>.AddWithResize, X0, X1
	327 Move X0, [X19+480]
	328 Compare X0, 0
	329 JumpIfEqual {396}
	330 Move W10, [X0+28]
	331 Move X8, [X0+16]
	332 Move X9, [X20]
	333 Add W10, W10, 1
	334 Move [X0+28], W10
	335 Compare X8, 0
	336 JumpIfEqual {396}
	337 NotImplemented "Instruction LDRSW not yet implemented."
	338 Move W11, [X8+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add W9, W10, 1
	341 Add X8, X8, X10
	342 Move [X0+24], W9
	343 Move [X8+32], W22
	344 Move X8, [X9+32]
	345 Move W1, W22
	346 Move X8, [X8+192]
	347 Move X2, [X8+112]
	348 Call List`1<UInt32>.AddWithResize, X0, X1
	349 Move X0, X31
	350 Call TMP_Settings.get_getFontFeaturesAtRuntime
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfNotEqual {364}
	355 Move X8, 0x670000
	356 Move X8, [X8+1400]
	357 Move X0, [X8]
	358 Move W8, [X0+224]
	359 Compare W8, 0
	360 JumpIfNotEqual {362}
	361 Call 0x1C17DFC
	362 Move X0, X19
	363 Call TMP_FontAsset.RegisterFontAssetForFontFeatureUpdate, X0
	364 Move X0, [X19+456]
	365 Compare X0, 0
	366 JumpIfEqual {396}
	367 Move W10, [X0+28]
	368 Move X1, [X31+8]
	369 Move X8, [X0+16]
	370 Move X9, [X25]
	371 Add W10, W10, 1
	372 Move [X0+28], W10
	373 Compare X8, 0
	374 JumpIfEqual {396}
	375 NotImplemented "Instruction LDRSW not yet implemented."
	376 Move W11, [X8+24]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Add W9, W10, 1
	379 Add X8, X8, X10
	380 Move [X0+24], W9
	381 Move [X8+32], X1
	382 Move X8, [X9+32]
	383 Move X8, [X8+192]
	384 Move X2, [X8+112]
	385 Call List`1<Object>.AddWithResize, X0, X1
	386 Move X8, 0x670000
	387 Move X8, [X8+1400]
	388 Move X0, [X8]
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X0, X19
	394 Call TMP_FontAsset.RegisterFontAssetForAtlasTextureUpdate, X0
	395 Move W0, 1
	396 Call 0x1C17F20

Method: System.Void TryAddGlyphsToAtlasTextures()

Disassembly:
	0x03AE7794 LDR X8, [X9 + 0x20]

ISIL:
	001 Return 

Method: System.Boolean TryAddGlyphsToNewAtlasTexture()

Disassembly:
	0x03AE83B0 LDR W11, [X8 + 0x18]
	0x03AE83B4 CMP W10, W11
	0x03AE83B8 B.CS 0x3AE83D0
	0x03AE83BC ADD W9, W10, 0x1
	0x03AE83C0 ADD X8, X8, X10, 0x2, LSL
	0x03AE83C4 STR W9, [X0 + 0x18]
	0x03AE83C8 STR W1, [X8 + 0x20]
	0x03AE83CC B 0x3AE83E0
	0x03AE83D0 LDR X8, [X9 + 0x20]
	0x03AE83D4 LDR X8, [X8 + 0xC0]
	0x03AE83D8 LDR X2, [X8 + 0x70]
	0x03AE83DC BL 0x30C1698
	0x03AE83E0 LDR X0, [X20 + 0x1F8]
	0x03AE83E4 ADD W21, W21, 0x1
	0x03AE83E8 CBNZ X0, 0x3AE8368
	0x03AE83EC BL 0x1C16F20
	0x03AE83F0 LDR X0, [X20 + 0x208]
	0x03AE83F4 CBZ X0, 0x3AE83EC
	0x03AE83F8 LDR W8, [X0 + 0x18]
	0x03AE83FC CMP W8, 0x1
	0x03AE8400 B.LT 0x3AE8410
	0x03AE8404 MOV X1, X31
	0x03AE8408 BL 0x3ADAA40
	0x03AE840C STR X0, [X19]
	0x03AE8410 LDR W8, [X31 + 0xC]
	0x03AE8414 EOR W8, W8, 0x1
	0x03AE8418 AND W8, W22, W8, 0x0
	0x03AE841C B 0x3AE7E70
	0x03AE8420 BL 0x1C16F28
	0x03AE8424 SUB X31, X31, 0x50
	0x03AE8428 STR X30, [X31 + 0x10]
	0x03AE842C STP X24, X23, [X31 + 0x20]
	0x03AE8430 STP X22, X21, [X31 + 0x30]
	0x03AE8434 STP X20, X19, [X31 + 0x40]
	0x03AE8438 ADRP X20, 0x8FA000
	0x03AE843C LDRB W8, [X20 + 0x5AC]
	0x03AE8440 MOV X19, X0
	0x03AE8444 TBNZ X8, 0x0, 0x3AE848C
	0x03AE8448 ADRP X0, 0x670000
	0x03AE844C LDR X0, [X0 + 0xE88]
	0x03AE8450 BL 0x1C16CF4
	0x03AE8454 ADRP X0, 0x670000
	0x03AE8458 LDR X0, [X0 + 0xBC0]
	0x03AE845C BL 0x1C16CF4
	0x03AE8460 ADRP X0, 0x670000
	0x03AE8464 LDR X0, [X0 + 0xBC8]
	0x03AE8468 BL 0x1C16CF4
	0x03AE846C ADRP X0, 0x670000
	0x03AE8470 LDR X0, [X0 + 0xE90]
	0x03AE8474 BL 0x1C16CF4
	0x03AE8478 ADRP X0, 0x635000
	0x03AE847C LDR X0, [X0 + 0x250]
	0x03AE8480 BL 0x1C16CF4
	0x03AE8484 MOVZ W8, 0x1
	0x03AE8488 STRB W8, [X20 + 0x5AC]
	0x03AE848C MOV X0, X19
	0x03AE8490 LDR X24, [X0 + 0xD8]!
	0x03AE8494 LDR W8, [X0 + 0x8]
	0x03AE8498 ADD W23, W8, 0x1
	0x03AE849C STR W23, [X0 + 0x8]
	0x03AE84A0 CBZ X24, 0x3AE862C
	0x03AE84A4 LDR W8, [X24 + 0x18]
	0x03AE84A8 ADRP X20, 0x635000
	0x03AE84AC LDR X20, [X20 + 0x250]
	0x03AE84B0 CMP W23, W8
	0x03AE84B4 B.NE 0x3AE84D4
	0x03AE84B8 ADRP X8, 0x670000
	0x03AE84BC LDR X8, [X8 + 0xE88]
	0x03AE84C0 UBFM W1, W23, 0x1F, 0x1E
	0x03AE84C4 LDR X2, [X8]
	0x03AE84C8 BL 0x2142E6C
	0x03AE84CC LDR X24, [X19 + 0xD8]
	0x03AE84D0 LDR W23, [X19 + 0xE0]
	0x03AE84D4 LDR X0, [X20]
	0x03AE84D8 LDR W21, [X19 + 0x108]
	0x03AE84DC LDR W22, [X19 + 0x10C]
	0x03AE84E0 BL 0x1C16F10
	0x03AE84E4 MOVZ W3, 0x1
	0x03AE84E8 MOV W1, W21
	0x03AE84EC MOV W2, W22
	0x03AE84F0 MOV W4, W31
	0x03AE84F4 MOV X5, X31
	0x03AE84F8 MOV X20, X0
	0x03AE84FC BL 0x3C1C1D8
	0x03AE8500 CBZ X24, 0x3AE862C
	0x03AE8504 LDR W8, [X24 + 0x18]
	0x03AE8508 CMP W23, W8
	0x03AE850C B.CS 0x3AE8630
	0x03AE8510 ADD X8, X24, W23, 0x3, SXTW
	0x03AE8514 STR X20, [X8 + 0x20]
	0x03AE8518 LDR X8, [X19 + 0xD8]
	0x03AE851C CBZ X8, 0x3AE862C
	0x03AE8520 LDRSW X9, [X19 + 0xE0]
	0x03AE8524 LDR W10, [X8 + 0x18]
	0x03AE8528 CMP W9, W10
	0x03AE852C B.CS 0x3AE8630
	0x03AE8530 ADRP X10, 0x670000
	0x03AE8534 LDR X10, [X10 + 0xBC0]
	0x03AE8538 ADD X8, X8, X9, 0x3, LSL
	0x03AE853C LDR X20, [X8 + 0x20]
	0x03AE8540 LDR X0, [X10]
	0x03AE8544 LDR W9, [X0 + 0xE0]
	0x03AE8548 CBNZ W9, 0x3AE8550
	0x03AE854C BL 0x1C16DFC
	0x03AE8550 MOV X0, X20
	0x03AE8554 MOV X1, X31
	0x03AE8558 BL 0x3C9E1E0
	0x03AE855C LDR X20, [X19 + 0xF0]
	0x03AE8560 CBZ X20, 0x3AE862C
	0x03AE8564 LDR W9, [X20 + 0x1C]
	0x03AE8568 LDR W8, [X19 + 0x114]
	0x03AE856C ADRP X21, 0x670000
	0x03AE8570 LDR X21, [X21 + 0xBC8]
	0x03AE8574 ADD W9, W9, 0x1
	0x03AE8578 MOVZ W10, 0x1
	0x03AE857C STP W31, W9, [X20 + 0x18]
	0x03AE8580 BIC W8, W10, W8, 0x4
	0x03AE8584 LDR W9, [X19 + 0x108]
	0x03AE8588 LDR W10, [X19 + 0x10C]
	0x03AE858C ADD X0, X31, 0x0
	0x03AE8590 MOV W1, W31
	0x03AE8594 SUB W3, W9, W8
	0x03AE8598 SUB W4, W10, W8
	0x03AE859C MOV W2, W31
	0x03AE85A0 MOV X5, X31
	0x03AE85A4 STP X31, X31, [X31]
	0x03AE85A8 BL 0x3C9C108
	0x03AE85AC LDR W10, [X20 + 0x1C]
	0x03AE85B0 LDP X1, X2, [X31]
	0x03AE85B4 LDR X8, [X20 + 0x10]
	0x03AE85B8 LDR X9, [X21]
	0x03AE85BC ADD W10, W10, 0x1
	0x03AE85C0 STR W10, [X20 + 0x1C]
	0x03AE85C4 CBZ X8, 0x3AE862C
	0x03AE85C8 LDRSW X10, [X20 + 0x18]
	0x03AE85CC LDR W11, [X8 + 0x18]
	0x03AE85D0 CMP W10, W11
	0x03AE85D4 B.CS 0x3AE85EC
	0x03AE85D8 ADD W9, W10, 0x1
	0x03AE85DC ADD X8, X8, X10, 0x4, LSL
	0x03AE85E0 STR W9, [X20 + 0x18]
	0x03AE85E4 STP X1, X2, [X8 + 0x20]
	0x03AE85E8 B 0x3AE8600
	0x03AE85EC LDR X8, [X9 + 0x20]
	0x03AE85F0 MOV X0, X20
	0x03AE85F4 LDR X8, [X8 + 0xC0]
	0x03AE85F8 LDR X3, [X8 + 0x70]
	0x03AE85FC BL 0x2FC569C
	0x03AE8600 LDR X8, [X19 + 0xE8]
	0x03AE8604 CBZ X8, 0x3AE862C
	0x03AE8608 LDR W9, [X8 + 0x1C]
	0x03AE860C LDP X20, X19, [X31 + 0x40]
	0x03AE8610 LDP X22, X21, [X31 + 0x30]
	0x03AE8614 LDP X24, X23, [X31 + 0x20]
	0x03AE8618 LDR X30, [X31 + 0x10]
	0x03AE861C ADD W9, W9, 0x1
	0x03AE8620 STP W31, W9, [X8 + 0x18]
	0x03AE8624 ADD X31, X31, 0x50
	0x03AE8628 RET
	0x03AE862C BL 0x1C16F20
	0x03AE8630 BL 0x1C16F28
	0x03AE8634 SUB X31, X31, 0x50
	0x03AE8638 STP X30, X25, [X31 + 0x10]
	0x03AE863C STP X24, X23, [X31 + 0x20]
	0x03AE8640 STP X22, X21, [X31 + 0x30]
	0x03AE8644 STP X20, X19, [X31 + 0x40]
	0x03AE8648 ADRP X22, 0x8FA000
	0x03AE864C LDRB W8, [X22 + 0x5AA]
	0x03AE8650 MOV X21, X2
	0x03AE8654 MOV W20, W1
	0x03AE8658 MOV X19, X0
	0x03AE865C TBNZ X8, 0x0, 0x3AE86F8
	0x03AE8660 ADRP X0, 0x670000
	0x03AE8664 LDR X0, [X0 + 0xCD0]
	0x03AE8668 BL 0x1C16CF4
	0x03AE866C ADRP X0, 0x670000
	0x03AE8670 LDR X0, [X0 + 0xC98]
	0x03AE8674 BL 0x1C16CF4
	0x03AE8678 ADRP X0, 0x670000
	0x03AE867C LDR X0, [X0 + 0xCA8]
	0x03AE8680 BL 0x1C16CF4
	0x03AE8684 ADRP X0, 0x670000
	0x03AE8688 LDR X0, [X0 + 0xC90]
	0x03AE868C BL 0x1C16CF4
	0x03AE8690 ADRP X0, 0x670000
	0x03AE8694 LDR X0, [X0 + 0xBC0]
	0x03AE8698 BL 0x1C16CF4
	0x03AE869C ADRP X0, 0x666000
	0x03AE86A0 LDR X0, [X0 + 0x828]
	0x03AE86A4 BL 0x1C16CF4
	0x03AE86A8 ADRP X0, 0x670000
	0x03AE86AC LDR X0, [X0 + 0xE00]
	0x03AE86B0 BL 0x1C16CF4
	0x03AE86B4 ADRP X0, 0x670000
	0x03AE86B8 LDR X0, [X0 + 0xC10]
	0x03AE86BC BL 0x1C16CF4
	0x03AE86C0 ADRP X0, 0x611000
	0x03AE86C4 LDR X0, [X0 + 0x1D0]
	0x03AE86C8 BL 0x1C16CF4
	0x03AE86CC ADRP X0, 0x670000
	0x03AE86D0 LDR X0, [X0 + 0xC20]
	0x03AE86D4 BL 0x1C16CF4
	0x03AE86D8 ADRP X0, 0x670000
	0x03AE86DC LDR X0, [X0 + 0x5B0]
	0x03AE86E0 BL 0x1C16CF4
	0x03AE86E4 ADRP X0, 0x670000
	0x03AE86E8 LDR X0, [X0 + 0x578]
	0x03AE86EC BL 0x1C16CF4
	0x03AE86F0 MOVZ W8, 0x1
	0x03AE86F4 STRB W8, [X22 + 0x5AA]
	0x03AE86F8 STR X31, [X31 + 0x8]
	0x03AE86FC STR X31, [X21]
	0x03AE8700 LDR X0, [X19 + 0x210]
	0x03AE8704 CBZ X0, 0x3AE8BDC
	0x03AE8708 ADRP X8, 0x670000
	0x03AE870C LDR X8, [X8 + 0xE00]
	0x03AE8710 MOV W1, W20
	0x03AE8714 LDR X2, [X8]
	0x03AE8718 BL 0x2DCD240
	0x03AE871C TBNZ X0, 0x0, 0x3AE8764
	0x03AE8720 LDR X22, [X19 + 0x40]
	0x03AE8724 ADD X0, X19, 0x50
	0x03AE8728 MOV X1, X31
	0x03AE872C BL 0x3C9BF88
	0x03AE8730 ADRP X24, 0x670000
	0x03AE8734 LDR X24, [X24 + 0xBC0]
	0x03AE8738 MOV W23, W0
	0x03AE873C LDR X8, [X24]
	0x03AE8740 LDR W9, [X8 + 0xE0]
	0x03AE8744 CBNZ W9, 0x3AE8750
	0x03AE8748 MOV X0, X8
	0x03AE874C BL 0x1C16DFC
	0x03AE8750 MOV X0, X22
	0x03AE8754 MOV W1, W23
	0x03AE8758 MOV X2, X31
	0x03AE875C BL 0x3C9C794
	0x03AE8760 CBZ W0, 0x3AE8780
	0x03AE8764 MOV W0, W31
	0x03AE8768 LDP X20, X19, [X31 + 0x40]
	0x03AE876C LDP X22, X21, [X31 + 0x30]
	0x03AE8770 LDP X24, X23, [X31 + 0x20]
	0x03AE8774 LDP X30, X25, [X31 + 0x10]
	0x03AE8778 ADD X31, X31, 0x50
	0x03AE877C RET
	0x03AE8780 LDR X0, [X24]
	0x03AE8784 LDR W8, [X0 + 0xE0]
	0x03AE8788 CBNZ W8, 0x3AE8790
	0x03AE878C BL 0x1C16DFC
	0x03AE8790 MOV W0, W20
	0x03AE8794 MOV X1, X31
	0x03AE8798 BL 0x3C9CBD8
	0x03AE879C MOV W22, W0
	0x03AE87A0 CBNZ W0, 0x3AE87FC
	0x03AE87A4 MOVZ W8, 0x2011
	0x03AE87A8 CMP W20, W8
	0x03AE87AC B.EQ 0x3AE87D8
	0x03AE87B0 CMP W20, 0xAD
	0x03AE87B4 B.EQ 0x3AE87D8
	0x03AE87B8 CMP W20, 0xA0
	0x03AE87BC B.NE 0x3AE897C
	0x03AE87C0 LDR X0, [X24]
	0x03AE87C4 LDR W8, [X0 + 0xE0]
	0x03AE87C8 CBNZ W8, 0x3AE87D0
	0x03AE87CC BL 0x1C16DFC
	0x03AE87D0 MOVZ W0, 0x20
	0x03AE87D4 B 0x3AE87EC
	0x03AE87D8 LDR X0, [X24]
	0x03AE87DC LDR W8, [X0 + 0xE0]
	0x03AE87E0 CBNZ W8, 0x3AE87E8
	0x03AE87E4 BL 0x1C16DFC
	0x03AE87E8 MOVZ W0, 0x2D
	0x03AE87EC MOV X1, X31
	0x03AE87F0 BL 0x3C9CBD8
	0x03AE87F4 MOV W22, W0
	0x03AE87F8 CBZ W0, 0x3AE897C
	0x03AE87FC LDR X0, [X19 + 0xB8]
	0x03AE8800 CBZ X0, 0x3AE8BDC
	0x03AE8804 ADRP X8, 0x670000
	0x03AE8808 LDR X8, [X8 + 0xCA8]
	0x03AE880C MOV W1, W22
	0x03AE8810 LDR X2, [X8]
	0x03AE8814 BL 0x2B0F250
	0x03AE8818 TBZ X0, 0x0, 0x3AE88B4
	0x03AE881C LDR X0, [X19 + 0xB8]
	0x03AE8820 CBZ X0, 0x3AE8BDC
	0x03AE8824 ADRP X8, 0x670000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x8FB000
	015 Move W8, [X20+1451]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x671000
	022 Move X0, [X0+3280]
	023 Call 0x1C17CF4
	024 Move X0, 0x671000
	025 Move X0, [X0+3224]
	026 Call 0x1C17CF4
	027 Move X0, 0x671000
	028 Move X0, [X0+3656]
	029 Call 0x1C17CF4
	030 Move X0, 0x671000
	031 Move X0, [X0+3008]
	032 Call 0x1C17CF4
	033 Move X0, 0x671000
	034 Move X0, [X0+3088]
	035 Call 0x1C17CF4
	036 Move X0, 0x612000
	037 Move X0, [X0+464]
	038 Call 0x1C17CF4
	039 Move X0, 0x671000
	040 Move X0, [X0+3104]
	041 Call 0x1C17CF4
	042 Move X0, 0x663000
	043 Move X0, [X0+2896]
	044 Call 0x1C17CF4
	045 Move X0, 0x671000
	046 Move X0, [X0+3680]
	047 Call 0x1C17CF4
	048 Move X0, 0x671000
	049 Move X0, [X0+3312]
	050 Call 0x1C17CF4
	051 Move X0, 0x671000
	052 Move X0, [X0+3320]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1451], W8
	056 Move X0, X19
	057 Move [X31+16], X31
	058 Move [X31+24], X31
	059 Call TMP_FontAsset.SetupNewAtlasTexture, X0
	060 Move X8, [X19+216]
	061 Compare X8, 0
	062 JumpIfEqual {298}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W10, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X10, 0x671000
	067 Move X10, [X10+3008]
	068 Add X8, X8, X9
	069 Move X20, [X19+488]
	070 Move W21, [X19+272]
	071 Move X0, [X10]
	072 Move X22, [X19+232]
	073 Move X24, [X19+240]
	074 Move W23, [X19+276]
	075 Move X25, [X8+32]
	076 Move W9, [X0+224]
	077 Compare W9, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Add X7, X31, 24
	081 Move X0, X20
	082 Move W1, W21
	083 Move W2, W31
	084 Move X3, X24
	085 Move X4, X22
	086 Move W5, W23
	087 Move X6, X25
	088 Move [X31], X31
	089 Call FontEngine.TryAddGlyphsToTexture, X0, X1, X2, X3, X4, X5, X6, X7
	090 Move X8, [X31+24]
	091 Move [X31+12], W0
	092 Compare X8, 0
	093 JumpIfEqual {298}
	094 Move X20, 0x671000
	095 Move X26, 0x671000
	096 Move X23, 0x612000
	097 Move X24, 0x671000
	098 Move X25, 0x671000
	099 Move X27, 0x671000
	100 Move X28, 0x671000
	101 Move X20, [X20+3088]
	102 Move X26, [X26+3224]
	103 Move X23, [X23+464]
	104 Move X24, [X24+3320]
	105 Move X25, [X25+3656]
	106 Move X27, [X27+3280]
	107 Move X28, [X28+3680]
	108 Move X29, X31
	109 Move W9, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add X8, X8, X29
	113 Move X22, [X8+32]
	114 Compare X22, 0
	115 JumpIfEqual {201}
	116 Move X0, X22
	117 Move X1, X31
	118 Call Glyph.get_index, X0
	119 Move W1, [X19+224]
	120 Move W21, W0
	121 Move X0, X22
	122 Move X2, X31
	123 Call Glyph.set_atlasIndex, X0, X1
	124 Move X0, [X19+176]
	125 Compare X0, 0
	126 JumpIfEqual {298}
	127 Move W10, [X0+28]
	128 Move X8, [X0+16]
	129 Move X9, [X20]
	130 Add W10, W10, 1
	131 Move [X0+28], W10
	132 Compare X8, 0
	133 JumpIfEqual {298}
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W11, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W9, W10, 1
	138 Add X8, X8, X10
	139 Move [X0+24], W9
	140 Move [X8+32], X22
	141 Move X8, [X9+32]
	142 Move X1, X22
	143 Move X8, [X8+192]
	144 Move X2, [X8+112]
	145 Call List`1<Object>.AddWithResize, X0, X1
	146 Move X0, [X19+184]
	147 Compare X0, 0
	148 JumpIfEqual {298}
	149 Move X3, [X26]
	150 Move W1, W21
	151 Move X2, X22
	152 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	153 Move X0, [X19+480]
	154 Compare X0, 0
	155 JumpIfEqual {298}
	156 Move W10, [X0+28]
	157 Move X8, [X0+16]
	158 Move X9, [X23]
	159 Add W10, W10, 1
	160 Move [X0+28], W10
	161 Compare X8, 0
	162 JumpIfEqual {298}
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Move W11, [X8+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add W9, W10, 1
	167 Add X8, X8, X10
	168 Move [X0+24], W9
	169 Move [X8+32], W21
	170 Move X8, [X9+32]
	171 Move W1, W21
	172 Move X8, [X8+192]
	173 Move X2, [X8+112]
	174 Call List`1<UInt32>.AddWithResize, X0, X1
	175 Move X0, [X19+472]
	176 Compare X0, 0
	177 JumpIfEqual {298}
	178 Move W10, [X0+28]
	179 Move X8, [X0+16]
	180 Move X9, [X23]
	181 Add W10, W10, 1
	182 Move [X0+28], W10
	183 Compare X8, 0
	184 JumpIfEqual {298}
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move W11, [X8+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add W9, W10, 1
	189 Add X8, X8, X10
	190 Move [X0+24], W9
	191 Move [X8+32], W21
	192 Move X8, [X9+32]
	193 Move W1, W21
	194 Move X8, [X8+192]
	195 Move X2, [X8+112]
	196 Call List`1<UInt32>.AddWithResize, X0, X1
	197 Move X8, [X31+24]
	198 Add X29, X29, 1
	199 Compare X8, 0
	200 JumpIfNotEqual {109}
	201 Move X8, [X19+488]
	202 Compare X8, 0
	203 JumpIfEqual {298}
	204 Move W9, [X8+28]
	205 Move X20, 0x671000
	206 Add W9, W9, 1
	207 Move [X8+24], W31
	208 Move [X8+28], W9
	209 Move X0, [X19+504]
	210 Move X20, [X20+3104]
	211 Compare X0, 0
	212 JumpIfEqual {298}
	213 Move W21, W31
	214 Move W8, [X0+24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X2, [X24]
	217 Move W1, W21
	218 Call List`1<Object>.get_Item, X0, X1
	219 Compare X0, 0
	220 JumpIfEqual {298}
	221 Move X22, X0
	222 Move X0, [X19+184]
	223 Compare X0, 0
	224 JumpIfEqual {298}
	225 Move W1, [X22+40]
	226 Move X3, [X25]
	227 Add X2, X31, 16
	228 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {253}
	233 Move X8, [X31+16]
	234 Move [X22+24], X19
	235 Move [X22+32], X8
	236 Move X0, [X19+192]
	237 Compare X0, 0
	238 JumpIfEqual {298}
	239 Move W10, [X0+28]
	240 Move X8, [X0+16]
	241 Move X9, [X20]
	242 Add W10, W10, 1
	243 Move [X0+28], W10
	244 Compare X8, 0
	245 JumpIfEqual {298}
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Move W11, [X8+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Add W9, W10, 1
	250 Add X8, X8, X10
	251 Move [X0+24], W9
	252 Move [X8+32], X22
	253 Move X0, [X19+488]
	254 Compare X0, 0
	255 JumpIfEqual {298}
	256 Move W10, [X0+28]
	257 Move W1, [X22+40]
	258 Move X8, [X0+16]
	259 Move X9, [X23]
	260 Add W10, W10, 1
	261 Move [X0+28], W10
	262 Compare X8, 0
	263 JumpIfEqual {298}
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 Move W11, [X8+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Add W9, W10, 1
	268 Add X8, X8, X10
	269 Move [X0+24], W9
	270 Move [X8+32], W1
	271 Move X8, [X9+32]
	272 Move X1, X22
	273 Move X8, [X8+192]
	274 Move X2, [X8+112]
	275 Call List`1<Object>.AddWithResize, X0, X1
	276 Move X0, [X19+200]
	277 Compare X0, 0
	278 JumpIfEqual {298}
	279 Move W1, [X22+20]
	280 Move X3, [X27]
	281 Move X2, X22
	282 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	283 Move X0, [X19+504]
	284 Compare X0, 0
	285 JumpIfEqual {298}
	286 Move X2, [X28]
	287 Move W1, W21
	288 Call List`1<Object>.RemoveAt, X0, X1
	289 Subtract W21, W21, 1
	290 Move X8, [X9+32]
	291 Move X8, [X8+192]
	292 Move X2, [X8+112]
	293 Call List`1<UInt32>.AddWithResize, X0, X1
	294 Move X0, [X19+504]
	295 Add W21, W21, 1
	296 Compare X0, 0
	297 JumpIfNotEqual {214}
	298 Call 0x1C17F20
	299 Move W8, [X31+12]
	300 Move X20, [X31+112]
	301 Move X19, [X31+120]
	302 Move X22, [X31+96]
	303 Move X21, [X31+104]
	304 Move X24, [X31+80]
	305 Move X23, [X31+88]
	306 Move X26, [X31+64]
	307 Move X25, [X31+72]
	308 Move X28, [X31+48]
	309 Move X27, [X31+56]
	310 Move X29, [X31+32]
	311 Move X30, [X31+40]
	312 And W0, W8, 1
	313 Add X31, X31, 128
	314 Return X0
	315 Call 0x1C17F28

Method: System.Void SetupNewAtlasTexture()

Disassembly:
	0x03AE9424 ADRP X0, 0x66F000
	0x03AE9428 LDR X0, [X0 + 0xE88]
	0x03AE942C BL 0x1C16CF4
	0x03AE9430 ADRP X0, 0x60A000
	0x03AE9434 LDR X0, [X0 + 0xA28]
	0x03AE9438 BL 0x1C16CF4
	0x03AE943C ADRP X0, 0x66F000
	0x03AE9440 LDR X0, [X0 + 0xBC0]
	0x03AE9444 BL 0x1C16CF4
	0x03AE9448 ADRP X0, 0x60A000
	0x03AE944C LDR X0, [X0 + 0x598]
	0x03AE9450 BL 0x1C16CF4
	0x03AE9454 ADRP X0, 0x60A000
	0x03AE9458 LDR X0, [X0 + 0xAC8]
	0x03AE945C BL 0x1C16CF4
	0x03AE9460 ADRP X0, 0x66F000
	0x03AE9464 LDR X0, [X0 + 0xE08]
	0x03AE9468 BL 0x1C16CF4
	0x03AE946C ADRP X0, 0x66F000
	0x03AE9470 LDR X0, [X0 + 0xE10]
	0x03AE9474 BL 0x1C16CF4
	0x03AE9478 ADRP X0, 0x66F000
	0x03AE947C LDR X0, [X0 + 0xEA8]
	0x03AE9480 BL 0x1C16CF4
	0x03AE9484 MOVZ W8, 0x1
	0x03AE9488 STRB W8, [X20 + 0x5B2]
	0x03AE948C MOV X20, X19
	0x03AE9490 LDR X8, [X20 + 0xD8]!
	0x03AE9494 STR W31, [X20 + 0x8]
	0x03AE9498 CBZ X8, 0x3AE9578
	0x03AE949C ADRP X24, 0x60A000
	0x03AE94A0 ADRP X23, 0x66F000
	0x03AE94A4 LDR X24, [X24 + 0x598]
	0x03AE94A8 LDR X23, [X23 + 0xE88]
	0x03AE94AC MOVZ W25, 0x5
	0x03AE94B0 LDR W9, [X8 + 0x18]
	0x03AE94B4 SUB X10, X25, 0x4
	0x03AE94B8 CMP X10, W9, SXTW
	0x03AE94BC B.GE 0x3AE9520
	0x03AE94C0 CMP X10, X9
	0x03AE94C4 B.CS 0x3AE970C
	0x03AE94C8 LDR X0, [X24]
	0x03AE94CC LDR X22, [X8, X25, LSL #3]
	0x03AE94D0 LDR W9, [X0 + 0xE0]
	0x03AE94D4 CBNZ W9, 0x3AE94DC
	0x03AE94D8 BL 0x1C16DFC
	0x03AE94DC MOV X0, X22
	0x03AE94E0 MOV X1, X31
	0x03AE94E4 MOV X2, X31
	0x03AE94E8 BL 0x3C3883C
	0x03AE94EC TBNZ X0, 0x0, 0x3AE9510
	0x03AE94F0 LDR X0, [X24]
	0x03AE94F4 LDR W8, [X0 + 0xE0]
	0x03AE94F8 CBNZ W8, 0x3AE9500
	0x03AE94FC BL 0x1C16DFC
	0x03AE9500 MOVZ W1, 0x1
	0x03AE9504 MOV X0, X22
	0x03AE9508 MOV X2, X31
	0x03AE950C BL 0x3C39520
	0x03AE9510 LDR X8, [X20]
	0x03AE9514 ADD X25, X25, 0x1
	0x03AE9518 CBNZ X8, 0x3AE94B0
	0x03AE951C BL 0x1C16F20
	0x03AE9520 LDR X2, [X23]
	0x03AE9524 MOVZ W1, 0x1
	0x03AE9528 MOV X0, X20
	0x03AE952C BL 0x2142E6C
	0x03AE9530 LDR X8, [X20]
	0x03AE9534 CBZ X8, 0x3AE951C
	0x03AE9538 LDR W9, [X8 + 0x18]
	0x03AE953C CBZ W9, 0x3AE970C
	0x03AE9540 LDR X20, [X8 + 0x20]
	0x03AE9544 STR X20, [X19 + 0xD0]
	0x03AE9548 CBZ X20, 0x3AE951C
	0x03AE954C LDR X8, [X20]
	0x03AE9550 MOV X0, X20
	0x03AE9554 LDP X9, X1, [X8 + 0x1E8]
	0x03AE9558 BLR X9
	0x03AE955C TBZ X0, 0x0, 0x3AE958C
	0x03AE9560 TBZ X21, 0x0, 0x3AE9674
	0x03AE9564 MOVZ W3, 0x1
	0x03AE9568 MOV X0, X20
	0x03AE956C MOV W1, W31
	0x03AE9570 MOV W2, W31
	0x03AE9574 B 0x3AE96C0
	0x03AE9578 LDP X20, X19, [X31 + 0x30]
	0x03AE957C LDP X22, X21, [X31 + 0x20]
	0x03AE9580 LDP X24, X23, [X31 + 0x10]
	0x03AE9584 LDP X30, X25, [X31], #0x40
	0x03AE9588 RET
	0x03AE958C ADRP X8, 0x60A000
	0x03AE9590 LDR X8, [X8 + 0xAC8]
	0x03AE9594 MOVZ W1, 0x5
	0x03AE9598 LDR X0, [X8]
	0x03AE959C BL 0x1C16D6C
	0x03AE95A0 CBZ X0, 0x3AE951C
	0x03AE95A4 LDR W8, [X0 + 0x18]
	0x03AE95A8 MOV X21, X0
	0x03AE95AC CBZ W8, 0x3AE970C
	0x03AE95B0 ADRP X8, 0x66F000
	0x03AE95B4 LDR X8, [X8 + 0xEA8]
	0x03AE95B8 MOV X0, X19
	0x03AE95BC MOV X1, X31
	0x03AE95C0 LDR X8, [X8]
	0x03AE95C4 STR X8, [X21 + 0x20]
	0x03AE95C8 BL 0x3C389D4
	0x03AE95CC LDR W8, [X21 + 0x18]
	0x03AE95D0 CMP W8, 0x1
	0x03AE95D4 B.LS 0x3AE970C
	0x03AE95D8 CMP W8, 0x2
	0x03AE95DC STR X0, [X21 + 0x28]
	0x03AE95E0 B.EQ 0x3AE970C
	0x03AE95E4 ADRP X8, 0x66F000
	0x03AE95E8 LDR X8, [X8 + 0xE10]
	0x03AE95EC MOV X0, X20
	0x03AE95F0 MOV X1, X31
	0x03AE95F4 LDR X8, [X8]
	0x03AE95F8 STR X8, [X21 + 0x30]
	0x03AE95FC BL 0x3C389D4
	0x03AE9600 LDR W8, [X21 + 0x18]
	0x03AE9604 CMP W8, 0x3
	0x03AE9608 B.LS 0x3AE970C
	0x03AE960C CMP W8, 0x4
	0x03AE9610 STR X0, [X21 + 0x38]
	0x03AE9614 B.EQ 0x3AE970C
	0x03AE9618 ADRP X8, 0x66F000
	0x03AE961C LDR X8, [X8 + 0xE08]
	0x03AE9620 MOV X0, X21
	0x03AE9624 MOV X1, X31
	0x03AE9628 LDR X8, [X8]
	0x03AE962C STR X8, [X21 + 0x40]
	0x03AE9630 BL 0x32278CC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0x8FA000
	010 Move W8, [X20+1452]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x670000
	017 Move X0, [X0+3720]
	018 Call 0x1C17CF4
	019 Move X0, 0x670000
	020 Move X0, [X0+3008]
	021 Call 0x1C17CF4
	022 Move X0, 0x670000
	023 Move X0, [X0+3016]
	024 Call 0x1C17CF4
	025 Move X0, 0x670000
	026 Move X0, [X0+3728]
	027 Call 0x1C17CF4
	028 Move X0, 0x635000
	029 Move X0, [X0+592]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1452], W8
	033 Move X0, X19
	034 Add X0, X0, 216
	035 Move X24, [X0]
	036 Move W8, [X0+8]
	037 Add W23, W8, 1
	038 Move [X0+8], W23
	039 Compare X24, 0
	040 JumpIfEqual {150}
	041 Move W8, [X24+24]
	042 Move X20, 0x635000
	043 Move X20, [X20+592]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0x670000
	046 Move X8, [X8+3720]
	047 Move W1, W23
	048 ShiftRight W1, 31
	049 And W1, W1, 0x3FFFFFFF
	050 Move X2, [X8]
	051 Call Array.Resize, X0, X1
	052 Move X24, [X19+216]
	053 Move W23, [X19+224]
	054 Move X0, [X20]
	055 Move W21, [X19+264]
	056 Move W22, [X19+268]
	057 Call 0x1C17F10
	058 Move W3, 1
	059 Move W1, W21
	060 Move W2, W22
	061 Move W4, W31
	062 Move X5, X31
	063 Move X20, X0
	064 Call Texture2D..ctor, X0, X1, X2, X3, X4
	065 Compare X24, 0
	066 JumpIfEqual {150}
	067 Move W8, [X24+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X24, W23
	070 Move [X8+32], X20
	071 Move X8, [X19+216]
	072 Compare X8, 0
	073 JumpIfEqual {150}
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Move W10, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X10, 0x670000
	078 Move X10, [X10+3008]
	079 Add X8, X8, X9
	080 Move X20, [X8+32]
	081 Move X0, [X10]
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X31
	088 Call FontEngine.ResetAtlasTexture, X0
	089 Move X20, [X19+240]
	090 Compare X20, 0
	091 JumpIfEqual {150}
	092 Move W9, [X20+28]
	093 Move W8, [X19+276]
	094 Move X21, 0x670000
	095 Move X21, [X21+3016]
	096 Add W9, W9, 1
	097 Move W10, 1
	098 Move [X20+24], W31
	099 Move [X20+28], W9
	100 NotImplemented "Instruction BIC not yet implemented."
	101 Move W9, [X19+264]
	102 Move W10, [X19+268]
	103 Add X0, X31, 0
	104 Move W1, W31
	105 Subtract W3, W9, W8
	106 Subtract W4, W10, W8
	107 Move W2, W31
	108 Move X5, X31
	109 Move [X31], X31
	110 Move [X31+8], X31
	111 Call GlyphRect..ctor, X0, X1, X2, X3, X4
	112 Move W10, [X20+28]
	113 Move X1, [X31]
	114 Move X2, [X31+8]
	115 Move X8, [X20+16]
	116 Move X9, [X21]
	117 Add W10, W10, 1
	118 Move [X20+28], W10
	119 Compare X8, 0
	120 JumpIfEqual {150}
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Move W11, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W9, W10, 1
	125 Add X8, X8, X10
	126 Move [X20+24], W9
	127 Move [X8+32], X1
	128 Move [X8+40], X2
	129 Move X8, [X9+32]
	130 Move X0, X20
	131 Move X8, [X8+192]
	132 Move X3, [X8+112]
	133 Call List`1<GlyphRect>.AddWithResize, X0, X1
	134 Move X8, [X19+232]
	135 Compare X8, 0
	136 JumpIfEqual {150}
	137 Move W9, [X8+28]
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X30, [X31+16]
	145 Add W9, W9, 1
	146 Move [X8+24], W31
	147 Move [X8+28], W9
	148 Add X31, X31, 80
	149 Return 
	150 Call 0x1C17F20
	151 Call 0x1C17F28

Method: System.Void UpdateAtlasTexture()

Disassembly:
	0x03AE9BE0 MOV X1, X31
	0x03AE9BE4 BL 0x33BDD8C
	0x03AE9BE8 LDR X0, [X21]
	0x03AE9BEC BL 0x1C16F10
	0x03AE9BF0 LDR X1, [X20]
	0x03AE9BF4 MOV X20, X0
	0x03AE9BF8 BL 0x301B7C4
	0x03AE9BFC STR X20, [X19 + 0x10]
	0x03AE9C00 LDP X20, X19, [X31 + 0x20]
	0x03AE9C04 LDP X22, X21, [X31 + 0x10]
	0x03AE9C08 LDR X30, [X31], #0x30
	0x03AE9C0C RET
	0x03AE9C10 STP X29, X30, [X31 - 0x60]!
	0x03AE9C14 STP X28, X27, [X31 + 0x10]
	0x03AE9C18 STP X26, X25, [X31 + 0x20]
	0x03AE9C1C STP X24, X23, [X31 + 0x30]
	0x03AE9C20 STP X22, X21, [X31 + 0x40]
	0x03AE9C24 STP X20, X19, [X31 + 0x50]
	0x03AE9C28 ADRP X25, 0x8F9000
	0x03AE9C2C ADRP X26, 0x66F000
	0x03AE9C30 ADRP X20, 0x66F000
	0x03AE9C34 ADRP X19, 0x66F000
	0x03AE9C38 ADRP X29, 0x66F000
	0x03AE9C3C ADRP X28, 0x66F000
	0x03AE9C40 ADRP X27, 0x66F000
	0x03AE9C44 ADRP X24, 0x66F000
	0x03AE9C48 ADRP X23, 0x66F000
	0x03AE9C4C ADRP X22, 0x60B000
	0x03AE9C50 ADRP X21, 0x611000
	0x03AE9C54 LDR X26, [X26 + 0xEF0]
	0x03AE9C58 LDR X20, [X20 + 0x578]
	0x03AE9C5C LDR X19, [X19 + 0xEF8]
	0x03AE9C60 LDR X29, [X29 + 0xF00]
	0x03AE9C64 LDR X28, [X28 + 0xF08]
	0x03AE9C68 LDR X27, [X27 + 0xF10]
	0x03AE9C6C LDRB W8, [X25 + 0x5B6]
	0x03AE9C70 LDR X24, [X24 + 0xC58]
	0x03AE9C74 LDR X23, [X23 + 0xF18]
	0x03AE9C78 LDR X22, [X22 + 0xE08]
	0x03AE9C7C LDR X21, [X21 + 0x688]
	0x03AE9C80 TBNZ X8, 0x0, 0x3AE9D28
	0x03AE9C84 ADRP X0, 0x611000
	0x03AE9C88 LDR X0, [X0 + 0x688]
	0x03AE9C8C BL 0x1C16CF4
	0x03AE9C90 ADRP X0, 0x60B000
	0x03AE9C94 LDR X0, [X0 + 0xE08]
	0x03AE9C98 BL 0x1C16CF4
	0x03AE9C9C ADRP X0, 0x66F000
	0x03AE9CA0 LDR X0, [X0 + 0xF18]
	0x03AE9CA4 BL 0x1C16CF4
	0x03AE9CA8 ADRP X0, 0x66F000
	0x03AE9CAC LDR X0, [X0 + 0xC58]
	0x03AE9CB0 BL 0x1C16CF4
	0x03AE9CB4 ADRP X0, 0x66F000
	0x03AE9CB8 LDR X0, [X0 + 0x578]
	0x03AE9CBC BL 0x1C16CF4
	0x03AE9CC0 ADRP X0, 0x66F000
	0x03AE9CC4 LDR X0, [X0 + 0xF20]
	0x03AE9CC8 BL 0x1C16CF4
	0x03AE9CCC ADRP X0, 0x66F000
	0x03AE9CD0 LDR X0, [X0 + 0xF00]
	0x03AE9CD4 BL 0x1C16CF4
	0x03AE9CD8 ADRP X0, 0x66F000
	0x03AE9CDC LDR X0, [X0 + 0xF08]
	0x03AE9CE0 BL 0x1C16CF4
	0x03AE9CE4 ADRP X0, 0x66F000
	0x03AE9CE8 LDR X0, [X0 + 0xEF8]
	0x03AE9CEC BL 0x1C16CF4
	0x03AE9CF0 ADRP X0, 0x66F000
	0x03AE9CF4 LDR X0, [X0 + 0xEF0]
	0x03AE9CF8 BL 0x1C16CF4
	0x03AE9CFC ADRP X0, 0x66F000
	0x03AE9D00 LDR X0, [X0 + 0xF10]
	0x03AE9D04 BL 0x1C16CF4
	0x03AE9D08 ADRP X0, 0x66F000
	0x03AE9D0C LDR X0, [X0 + 0xF28]
	0x03AE9D10 BL 0x1C16CF4
	0x03AE9D14 ADRP X0, 0x66F000
	0x03AE9D18 LDR X0, [X0 + 0xF30]
	0x03AE9D1C BL 0x1C16CF4
	0x03AE9D20 MOVZ W8, 0x1
	0x03AE9D24 STRB W8, [X25 + 0x5B6]
	0x03AE9D28 LDR X0, [X26]
	0x03AE9D2C MOVZ W1, 0x1
	0x03AE9D30 MOV W2, W31
	0x03AE9D34 MOV W3, W31
	0x03AE9D38 MOV X4, X31
	0x03AE9D3C BL 0x3BFE7FC
	0x03AE9D40 LDR X8, [X20]
	0x03AE9D44 MOVZ W1, 0x1
	0x03AE9D48 MOV W2, W31
	0x03AE9D4C MOV W3, W31
	0x03AE9D50 LDR X8, [X8 + 0xB8]
	0x03AE9D54 MOV X4, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8FA000
	005 Move W8, [X20+1453]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x670000
	012 Move X0, [X0+3008]
	013 Call 0x1C17CF4
	014 Move X0, 0x670000
	015 Move X0, [X0+3264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1453], W8
	019 Move X8, [X19+456]
	020 Compare X8, 0
	021 JumpIfEqual {111}
	022 Move W8, [X8+24]
	023 Compare W8, 0
	024 JumpIfEqual {107}
	025 Move X8, [X19+216]
	026 Compare X8, 0
	027 JumpIfEqual {111}
	028 NotImplemented "Instruction LDRSW not yet implemented."
	029 Move W10, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X8, X9
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {111}
	035 Move X8, [X0]
	036 Move X9, [X8+392]
	037 Move X1, [X8+400]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare W0, 0
	040 JumpIfEqual {57}
	041 Move X8, [X19+216]
	042 Compare X8, 0
	043 JumpIfEqual {111}
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move W10, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X8, X9
	048 Move X0, [X8+32]
	049 Compare X0, 0
	050 JumpIfEqual {111}
	051 Move X8, [X0]
	052 Move X9, [X8+424]
	053 Move X1, [X8+432]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare W0, 0
	056 JumpIfNotEqual {89}
	057 Move X8, [X19+216]
	058 Compare X8, 0
	059 JumpIfEqual {111}
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Move W10, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add X8, X8, X9
	064 Move X0, [X8+32]
	065 Compare X0, 0
	066 JumpIfEqual {111}
	067 Move W2, [X19+268]
	068 Move W1, [X19+264]
	069 Move X3, X31
	070 Call Texture2D.Resize, X0, X1, X2
	071 Move X8, [X19+216]
	072 Compare X8, 0
	073 JumpIfEqual {111}
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Move W10, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X10, 0x670000
	078 Move X10, [X10+3008]
	079 Add X8, X8, X9
	080 Move X20, [X8+32]
	081 Move X0, [X10]
	082 Move W9, [X0+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X31
	088 Call FontEngine.ResetAtlasTexture, X0
	089 Move X8, [X19+216]
	090 Compare X8, 0
	091 JumpIfEqual {111}
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Move W10, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X8, X8, X9
	096 Move X0, [X8+32]
	097 Compare X0, 0
	098 JumpIfEqual {111}
	099 Move X20, [X31+16]
	100 Move X19, [X31+24]
	101 Move W1, W31
	102 Move W2, W31
	103 Move X3, X31
	104 Move X30, [X31+32]
	105 Call Texture2D.Apply, X0, X1, X2
	106 Return 
	107 Move X20, [X31+16]
	108 Move X19, [X31+24]
	109 Move X30, [X31+32]
	110 Return 
	111 Call 0x1C17F20
	112 Call 0x1C17F28

Method: System.Void UpdateGlyphAdjustmentRecords()

Disassembly:
	0x03AE71F0 LDR X9, [X25]
	0x03AE71F4 ADD W10, W10, 0x1
	0x03AE71F8 STR W10, [X0 + 0x1C]
	0x03AE71FC CBZ X8, 0x3AE73A8
	0x03AE7200 LDRSW X10, [X0 + 0x18]
	0x03AE7204 LDR W11, [X8 + 0x18]
	0x03AE7208 CMP W10, W11
	0x03AE720C B.CS 0x3AE726C
	0x03AE7210 ADD W9, W10, 0x1
	0x03AE7214 ADD X8, X8, X10, 0x2, LSL
	0x03AE7218 STR W9, [X0 + 0x18]
	0x03AE721C STR W1, [X8 + 0x20]
	0x03AE7220 B 0x3AE727C
	0x03AE7224 LDR X8, [X9 + 0x20]
	0x03AE7228 MOV X1, X24
	0x03AE722C LDR X8, [X8 + 0xC0]
	0x03AE7230 LDR X2, [X8 + 0x70]
	0x03AE7234 BL 0x301BF90
	0x03AE7238 LDR X0, [X20 + 0xC8]
	0x03AE723C CBZ X0, 0x3AE73A8
	0x03AE7240 LDR W1, [X24 + 0x14]
	0x03AE7244 LDR X3, [X28]
	0x03AE7248 MOV X2, X24
	0x03AE724C BL 0x2B0F05C
	0x03AE7250 LDR X0, [X20 + 0x1F8]
	0x03AE7254 CBZ X0, 0x3AE73A8
	0x03AE7258 LDR X2, [X29]
	0x03AE725C MOV W1, W23
	0x03AE7260 BL 0x301DA48
	0x03AE7264 SUB W23, W23, 0x1
	0x03AE7268 B 0x3AE727C
	0x03AE726C LDR X8, [X9 + 0x20]
	0x03AE7270 LDR X8, [X8 + 0xC0]
	0x03AE7274 LDR X2, [X8 + 0x70]
	0x03AE7278 BL 0x30C1698
	0x03AE727C LDR X0, [X20 + 0x1F8]
	0x03AE7280 ADD W23, W23, 0x1
	0x03AE7284 CBNZ X0, 0x3AE7154
	0x03AE7288 B 0x3AE73A8
	0x03AE728C LDRB W8, [X20 + 0xE4]
	0x03AE7290 CMP W8, 0x0
	0x03AE7294 CSET W8, EQ
	0x03AE7298 ORR W9, W22, W8, 0x0
	0x03AE729C CSET W8, NE
	0x03AE72A0 TBZ X9, 0x0, 0x3AE72B8
	0x03AE72A4 LDR W21, [X31 + 0x8]
	0x03AE72A8 ORR W22, W22, W8, 0x0
	0x03AE72AC B 0x3AE72CC
	0x03AE72B0 STR X22, [X19]
	0x03AE72B4 B 0x3AE6A20
	0x03AE72B8 LDR W21, [X31 + 0x8]
	0x03AE72BC MOV X0, X20
	0x03AE72C0 BL 0x3AE73B0
	0x03AE72C4 TBZ X0, 0x0, 0x3AE72BC
	0x03AE72C8 MOVZ W22, 0x1
	0x03AE72CC TBZ X21, 0x0, 0x3AE72D8
	0x03AE72D0 MOV X0, X20
	0x03AE72D4 BL 0x3AE61F0
	0x03AE72D8 LDR X0, [X20 + 0x1F8]
	0x03AE72DC CBZ X0, 0x3AE73A8
	0x03AE72E0 MOV W21, W31
	0x03AE72E4 LDR W8, [X0 + 0x18]
	0x03AE72E8 CMP W21, W8
	0x03AE72EC B.GE 0x3AE736C
	0x03AE72F0 LDR X2, [X26]
	0x03AE72F4 MOV W1, W21
	0x03AE72F8 BL 0x301BCCC
	0x03AE72FC CBZ X0, 0x3AE73A8
	0x03AE7300 MOV X8, X0
	0x03AE7304 LDR X0, [X20 + 0x208]
	0x03AE7308 CBZ X0, 0x3AE73A8
	0x03AE730C LDR W10, [X0 + 0x1C]
	0x03AE7310 LDR W1, [X8 + 0x14]
	0x03AE7314 LDR X8, [X0 + 0x10]
	0x03AE7318 LDR X9, [X25]
	0x03AE731C ADD W10, W10, 0x1
	0x03AE7320 STR W10, [X0 + 0x1C]
	0x03AE7324 CBZ X8, 0x3AE73A8
	0x03AE7328 LDRSW X10, [X0 + 0x18]
	0x03AE732C LDR W11, [X8 + 0x18]
	0x03AE7330 CMP W10, W11
	0x03AE7334 B.CS 0x3AE734C
	0x03AE7338 ADD W9, W10, 0x1
	0x03AE733C ADD X8, X8, X10, 0x2, LSL
	0x03AE7340 STR W9, [X0 + 0x18]
	0x03AE7344 STR W1, [X8 + 0x20]
	0x03AE7348 B 0x3AE735C
	0x03AE734C LDR X8, [X9 + 0x20]
	0x03AE7350 LDR X8, [X8 + 0xC0]
	0x03AE7354 LDR X2, [X8 + 0x70]
	0x03AE7358 BL 0x30C1698
	0x03AE735C LDR X0, [X20 + 0x1F8]
	0x03AE7360 ADD W21, W21, 0x1
	0x03AE7364 CBNZ X0, 0x3AE72E4
	0x03AE7368 B 0x3AE73A8
	0x03AE736C STR X31, [X19]
	0x03AE7370 LDR X0, [X20 + 0x208]
	0x03AE7374 CBZ X0, 0x3AE73A8
	0x03AE7378 LDR W8, [X0 + 0x18]
	0x03AE737C CMP W8, 0x1
	0x03AE7380 B.LT 0x3AE7398
	0x03AE7384 ADRP X8, 0x639000
	0x03AE7388 LDR X8, [X8 + 0x558]
	0x03AE738C LDR X1, [X8]
	0x03AE7390 BL 0x30C3454
	0x03AE7394 STR X0, [X19]
	0x03AE7398 LDR W8, [X31 + 0xC]
	0x03AE739C EOR W8, W8, 0x1
	0x03AE73A0 AND W8, W22, W8, 0x0
	0x03AE73A4 B 0x3AE6A20
	0x03AE73A8 BL 0x1C16F20
	0x03AE73AC BL 0x1C16F28
	0x03AE73B0 SUB X31, X31, 0x80
	0x03AE73B4 STP X29, X30, [X31 + 0x20]
	0x03AE73B8 STP X28, X27, [X31 + 0x30]
	0x03AE73BC STP X26, X25, [X31 + 0x40]
	0x03AE73C0 STP X24, X23, [X31 + 0x50]
	0x03AE73C4 STP X22, X21, [X31 + 0x60]
	0x03AE73C8 STP X20, X19, [X31 + 0x70]
	0x03AE73CC ADRP X20, 0x8FB000
	0x03AE73D0 LDRB W8, [X20 + 0x5AB]
	0x03AE73D4 MOV X19, X0
	0x03AE73D8 TBNZ X8, 0x0, 0x3AE7468
	0x03AE73DC ADRP X0, 0x671000
	0x03AE73E0 LDR X0, [X0 + 0xCD0]
	0x03AE73E4 BL 0x1C16CF4
	0x03AE73E8 ADRP X0, 0x671000
	0x03AE73EC LDR X0, [X0 + 0xC98]
	0x03AE73F0 BL 0x1C16CF4
	0x03AE73F4 ADRP X0, 0x671000
	0x03AE73F8 LDR X0, [X0 + 0xE48]
	0x03AE73FC BL 0x1C16CF4
	0x03AE7400 ADRP X0, 0x671000
	0x03AE7404 LDR X0, [X0 + 0xBC0]
	0x03AE7408 BL 0x1C16CF4
	0x03AE740C ADRP X0, 0x671000
	0x03AE7410 LDR X0, [X0 + 0xC10]
	0x03AE7414 BL 0x1C16CF4
	0x03AE7418 ADRP X0, 0x612000
	0x03AE741C LDR X0, [X0 + 0x1D0]
	0x03AE7420 BL 0x1C16CF4
	0x03AE7424 ADRP X0, 0x671000
	0x03AE7428 LDR X0, [X0 + 0xC20]
	0x03AE742C BL 0x1C16CF4
	0x03AE7430 ADRP X0, 0x663000
	0x03AE7434 LDR X0, [X0 + 0xB50]
	0x03AE7438 BL 0x1C16CF4
	0x03AE743C ADRP X0, 0x671000
	0x03AE7440 LDR X0, [X0 + 0xE60]
	0x03AE7444 BL 0x1C16CF4
	0x03AE7448 ADRP X0, 0x671000
	0x03AE744C LDR X0, [X0 + 0xCF0]
	0x03AE7450 BL 0x1C16CF4
	0x03AE7454 ADRP X0, 0x671000
	0x03AE7458 LDR X0, [X0 + 0xCF8]
	0x03AE745C BL 0x1C16CF4
	0x03AE7460 MOVZ W8, 0x1
	0x03AE7464 STRB W8, [X20 + 0x5AB]
	0x03AE7468 MOV X0, X19
	0x03AE746C STP X31, X31, [X31 + 0x10]
	0x03AE7470 BL 0x3AE8424
	0x03AE7474 LDR X8, [X19 + 0xD8]
	0x03AE7478 CBZ X8, 0x3AE77F8
	0x03AE747C LDRSW X9, [X19 + 0xE0]
	0x03AE7480 LDR W10, [X8 + 0x18]
	0x03AE7484 CMP W9, W10
	0x03AE7488 B.CS 0x3AE7824
	0x03AE748C ADRP X10, 0x671000
	0x03AE7490 LDR X10, [X10 + 0xBC0]
	0x03AE7494 ADD X8, X8, X9, 0x3, LSL
	0x03AE7498 LDR X20, [X19 + 0x1E8]
	0x03AE749C LDR W21, [X19 + 0x110]
	0x03AE74A0 LDR X0, [X10]
	0x03AE74A4 LDP X22, X24, [X19 + 0xE8]
	0x03AE74A8 LDR W23, [X19 + 0x114]
	0x03AE74AC LDR X25, [X8 + 0x20]
	0x03AE74B0 LDR W9, [X0 + 0xE0]
	0x03AE74B4 CBNZ W9, 0x3AE74BC
	0x03AE74B8 BL 0x1C16DFC
	0x03AE74BC ADD X7, X31, 0x18
	0x03AE74C0 MOV X0, X20
	0x03AE74C4 MOV W1, W21
	0x03AE74C8 MOV W2, W31
	0x03AE74CC MOV X3, X24
	0x03AE74D0 MOV X4, X22
	0x03AE74D4 MOV W5, W23
	0x03AE74D8 MOV X6, X25
	0x03AE74DC STR X31, [X31]
	0x03AE74E0 BL 0x3C9D530
	0x03AE74E4 LDR X8, [X31 + 0x18]
	0x03AE74E8 STR W0, [X31 + 0xC]
	0x03AE74EC CBZ X8, 0x3AE77F8
	0x03AE74F0 ADRP X20, 0x671000
	0x03AE74F4 ADRP X26, 0x671000
	0x03AE74F8 ADRP X23, 0x612000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X30
	003 Move [X31+144], X28
	004 Move [X31+152], X27
	005 Move [X31+160], X26
	006 Move [X31+168], X25
	007 Move [X31+176], X24
	008 Move [X31+184], X23
	009 Move [X31+192], X22
	010 Move [X31+200], X21
	011 Move [X31+208], X20
	012 Move [X31+216], X19
	013 Move X21, 0x8FC000
	014 Move X20, 0x672000
	015 Move W8, [X21+1454]
	016 Move X20, [X20+3008]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x672000
	023 Move X0, [X0+3328]
	024 Call 0x1C17CF4
	025 Move X0, 0x672000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move X0, 0x672000
	029 Move X0, [X0+3008]
	030 Call 0x1C17CF4
	031 Move X0, 0x672000
	032 Move X0, [X0+3408]
	033 Call 0x1C17CF4
	034 Move X0, 0x664000
	035 Move X0, [X0+2896]
	036 Call 0x1C17CF4
	037 Move X0, 0x672000
	038 Move X0, [X0+3440]
	039 Call 0x1C17CF4
	040 Move X0, 0x672000
	041 Move X0, [X0+3448]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1454], W8
	045 Move X0, [X20]
	046 Move [X31+140], W31
	047 Move [X31+96], X31
	048 Move [X31+104], X31
	049 Move [X31+112], W31
	050 Move W8, [X0+224]
	051 Move X20, [X19+472]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Add X1, X31, 140
	056 Move X0, X20
	057 Move X2, X31
	058 Call FontEngine.GetGlyphPairAdjustmentRecords, X0, X1
	059 Move X8, [X19+480]
	060 Compare X8, 0
	061 JumpIfEqual {221}
	062 Move W9, [X8+28]
	063 Move X20, X0
	064 Add W9, W9, 1
	065 Move [X8+24], W31
	066 Move [X8+28], W9
	067 Compare X0, 0
	068 JumpIfEqual {208}
	069 Move X8, [X20+24]
	070 Compare X8, 0
	071 JumpIfEqual {208}
	072 Move X9, [X19+296]
	073 Compare X9, 0
	074 JumpIfNotEqual {83}
	075 Move X8, 0x672000
	076 Move X8, [X8+3440]
	077 Move X0, [X8]
	078 Call 0x1C17F10
	079 Move X21, X0
	080 Call TMP_FontFeatureTable..ctor, X0
	081 Move [X19+296], X21
	082 Move W8, [X20+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X25, 0x672000
	085 Move X26, 0x672000
	086 Move X27, 0x672000
	087 Move X28, 0x672000
	088 Move X25, [X25+3344]
	089 Move X26, [X26+3448]
	090 Move X27, [X27+3408]
	091 Move X28, [X28+3328]
	092 Move X24, X31
	093 Add X21, X20, 32
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X8, X31, 48
	096 Move X0, X21
	097 Move X1, X31
	098 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	099 Move V0, [X31+3]
	100 Move W8, [X31+64]
	101 Add X0, X31, 96
	102 Move X1, X31
	103 Move [X31+6], V0
	104 Move [X31+112], W8
	105 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	106 Compare W0, 0
	107 JumpIfEqual {208}
	108 Move W8, [X20+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X8, X31, 48
	111 Move X0, X21
	112 Move X1, X31
	113 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	114 Move V0, [X31+3]
	115 Move W8, [X31+64]
	116 Add X0, X31, 96
	117 Move X1, X31
	118 Move [X31+6], V0
	119 Move [X31+112], W8
	120 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	121 Move W8, [X20+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W22, W0
	124 Add X8, X31, 48
	125 Move X0, X21
	126 Move X1, X31
	127 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	128 Move V0, [X31+3]
	129 Move W8, [X31+64]
	130 Add X0, X31, 96
	131 Move X1, X31
	132 Move [X31+6], V0
	133 Move [X31+112], W8
	134 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	135 Move X8, [X19+296]
	136 Compare X8, 0
	137 JumpIfEqual {221}
	138 Move X8, [X8+24]
	139 Compare X8, 0
	140 JumpIfEqual {221}
	141 Move X2, [X25]
	142 Or W22, W0, W22
	143 Move X0, X8
	144 Move W1, W22
	145 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {204}
	150 Move W8, [X20+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move V2, [X21]
	154 Move V1, [X21+16]
	155 Move X0, [X26]
	156 Move [X31+76], V0
	157 Move [X31+48], V2
	158 Move [X31+56], V1
	159 Call 0x1C17F10
	160 Move V0, [X31+48]
	161 Move V1, [X31+64]
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Add X1, X31, 0
	164 Move X23, X0
	165 Move [X31], V0
	166 Move [X31+8], V1
	167 Move [X31+28], V2
	168 Call TMP_GlyphPairAdjustmentRecord..ctor, X0, X1
	169 Move X8, [X19+296]
	170 Compare X8, 0
	171 JumpIfEqual {221}
	172 Move X0, [X8+16]
	173 Compare X0, 0
	174 JumpIfEqual {221}
	175 Move W10, [X0+28]
	176 Move X8, [X0+16]
	177 Move X9, [X27]
	178 Add W10, W10, 1
	179 Move [X0+28], W10
	180 Compare X8, 0
	181 JumpIfEqual {221}
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Move W11, [X8+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add W9, W10, 1
	186 Add X8, X8, X10
	187 Move [X0+24], W9
	188 Move [X8+32], X23
	189 Move X8, [X9+32]
	190 Move X1, X23
	191 Move X8, [X8+192]
	192 Move X2, [X8+112]
	193 Call List`1<Object>.AddWithResize, X0, X1
	194 Move X8, [X19+296]
	195 Compare X8, 0
	196 JumpIfEqual {221}
	197 Move X0, [X8+24]
	198 Compare X0, 0
	199 JumpIfEqual {221}
	200 Move X3, [X28]
	201 Move W1, W22
	202 Move X2, X23
	203 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	204 Move W8, [X20+24]
	205 Add X24, X24, 1
	206 Add X21, X21, 44
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X20, [X31+208]
	209 Move X19, [X31+216]
	210 Move X22, [X31+192]
	211 Move X21, [X31+200]
	212 Move X24, [X31+176]
	213 Move X23, [X31+184]
	214 Move X26, [X31+160]
	215 Move X25, [X31+168]
	216 Move X28, [X31+144]
	217 Move X27, [X31+152]
	218 Move X30, [X31+128]
	219 Add X31, X31, 224
	220 Return 
	221 Call 0x1C17F20
	222 Call 0x1C17F28

Method: System.Void UpdateGlyphAdjustmentRecords(System.UInt32[] glyphIndexes)

Disassembly:
	0x03AE9ED4 LDP X20, X19, [X31 + 0x50]
	0x03AE9ED8 LDP X29, X30, [X31], #0x60
	0x03AE9EDC RET
	0x03AE9EE0 STR X30, [X31 - 0x20]!
	0x03AE9EE4 STP X20, X19, [X31 + 0x10]
	0x03AE9EE8 ADRP X19, 0x8F9000
	0x03AE9EEC ADRP X20, 0x66F000
	0x03AE9EF0 LDRB W8, [X19 + 0x5B7]
	0x03AE9EF4 LDR X20, [X20 + 0xDA0]
	0x03AE9EF8 TBNZ X8, 0x0, 0x3AE9F10
	0x03AE9EFC ADRP X0, 0x66F000
	0x03AE9F00 LDR X0, [X0 + 0xDA0]
	0x03AE9F04 BL 0x1C16CF4
	0x03AE9F08 MOVZ W8, 0x1
	0x03AE9F0C STRB W8, [X19 + 0x5B7]
	0x03AE9F10 LDR X0, [X20]
	0x03AE9F14 BL 0x1C16F10
	0x03AE9F18 MOV X1, X31
	0x03AE9F1C MOV X19, X0
	0x03AE9F20 BL 0x33BDD8C
	0x03AE9F24 LDR X8, [X20]
	0x03AE9F28 LDR X8, [X8 + 0xB8]
	0x03AE9F2C STR X19, [X8]
	0x03AE9F30 LDP X20, X19, [X31 + 0x10]
	0x03AE9F34 LDR X30, [X31], #0x20
	0x03AE9F38 RET
	0x03AE9F3C MOV X1, X31
	0x03AE9F40 B 0x33BDD8C
	0x03AE9F44 STR X30, [X31 - 0x10]!
	0x03AE9F48 CBZ X1, 0x3AE9F58
	0x03AE9F4C LDR W0, [X1 + 0x14]
	0x03AE9F50 LDR X30, [X31], #0x10
	0x03AE9F54 RET
	0x03AE9F58 BL 0x1C16F20
	0x03AE9F5C CBZ X1, 0x3AE9F6C
	0x03AE9F60 MOV X0, X1
	0x03AE9F64 MOV X1, X31
	0x03AE9F68 B 0x3C9C494
	0x03AE9F6C STR X30, [X31 - 0x10]!
	0x03AE9F70 BL 0x1C16F20
	0x03AE9F74 MOV X1, X31
	0x03AE9F78 B 0x33BDD8C
	0x03AE9F7C STP X30, X21, [X31 - 0x20]!
	0x03AE9F80 STP X20, X19, [X31 + 0x10]
	0x03AE9F84 ADRP X20, 0x8F9000
	0x03AE9F88 ADRP X21, 0x66F000
	0x03AE9F8C LDRB W8, [X20 + 0x5B8]
	0x03AE9F90 LDR X21, [X21 + 0xF38]
	0x03AE9F94 MOV X19, X0
	0x03AE9F98 TBNZ X8, 0x0, 0x3AE9FB0
	0x03AE9F9C ADRP X0, 0x66F000
	0x03AE9FA0 LDR X0, [X0 + 0xF38]
	0x03AE9FA4 BL 0x1C16CF4
	0x03AE9FA8 MOVZ W8, 0x1
	0x03AE9FAC STRB W8, [X20 + 0x5B8]
	0x03AE9FB0 LDR X0, [X21]
	0x03AE9FB4 BL 0x1C16F10
	0x03AE9FB8 MOV X1, X31
	0x03AE9FBC MOV X20, X0
	0x03AE9FC0 BL 0x3B15FF4
	0x03AE9FC4 CBZ X19, 0x3AE9FF4
	0x03AE9FC8 CBZ X20, 0x3AE9FF4
	0x03AE9FCC LDR W8, [X19 + 0x10]
	0x03AE9FD0 MOV X0, X20
	0x03AE9FD4 STR W8, [X20 + 0x10]
	0x03AE9FD8 LDUR V0, [X19 + 0x14]
	0x03AE9FDC STUR V0, [X20 + 0x14]
	0x03AE9FE0 LDUR V0, [X19 + 0x24]
	0x03AE9FE4 STUR V0, [X20 + 0x24]
	0x03AE9FE8 LDP X20, X19, [X31 + 0x10]
	0x03AE9FEC LDP X30, X21, [X31], #0x20
	0x03AE9FF0 RET
	0x03AE9FF4 BL 0x1C16F20
	0x03AE9FF8 MOV X1, X31
	0x03AE9FFC B 0x3B15FF4
	0x03AEA000 STP X29, X30, [X31 - 0x60]!
	0x03AEA004 STP X28, X27, [X31 + 0x10]
	0x03AEA008 STP X26, X25, [X31 + 0x20]
	0x03AEA00C STP X24, X23, [X31 + 0x30]
	0x03AEA010 STP X22, X21, [X31 + 0x40]
	0x03AEA014 STP X20, X19, [X31 + 0x50]
	0x03AEA018 ADRP X8, 0x8F8000
	0x03AEA01C ADRP X9, 0x60B000
	0x03AEA020 LDR W27, [X31 + 0x70]
	0x03AEA024 LDR X28, [X31 + 0x68]
	0x03AEA028 LDRB W8, [X8 + 0x5B9]
	0x03AEA02C LDR W29, [X31 + 0x60]
	0x03AEA030 LDR X9, [X9 + 0x278]
	0x03AEA034 MOV W20, W7
	0x03AEA038 MOV W21, W6
	0x03AEA03C MOV W23, W5
	0x03AEA040 MOV W24, W4
	0x03AEA044 MOV W25, W3
	0x03AEA048 MOV W26, W2
	0x03AEA04C MOV X22, X1
	0x03AEA050 MOV X19, X0
	0x03AEA054 TBNZ X8, 0x0, 0x3AEA078
	0x03AEA058 ADRP X0, 0x60B000
	0x03AEA05C LDR X0, [X0 + 0x278]
	0x03AEA060 BL 0x1C16CF4
	0x03AEA064 ADRP X9, 0x60B000
	0x03AEA068 LDR X9, [X9 + 0x278]
	0x03AEA06C MOVZ W8, 0x1
	0x03AEA070 ADRP X10, 0x8F8000
	0x03AEA074 STRB W8, [X10 + 0x5B9]
	0x03AEA078 LDR X8, [X9]
	0x03AEA07C LDR X8, [X8 + 0xB8]
	0x03AEA080 LDR X8, [X8]
	0x03AEA084 STP W25, W26, [X19 + 0x10]
	0x03AEA088 STP W24, W23, [X19 + 0x18]
	0x03AEA08C STP W21, W20, [X19 + 0x20]
	0x03AEA090 STR X28, [X19 + 0x30]
	0x03AEA094 STR W29, [X19 + 0x28]
	0x03AEA098 STR W27, [X19 + 0x50]
	0x03AEA09C STP X8, X22, [X19]
	0x03AEA0A0 LDR X8, [X9]
	0x03AEA0A4 LDP X22, X21, [X31 + 0x40]
	0x03AEA0A8 LDP X24, X23, [X31 + 0x30]
	0x03AEA0AC LDP X26, X25, [X31 + 0x20]
	0x03AEA0B0 LDR X8, [X8 + 0xB8]
	0x03AEA0B4 LDP X28, X27, [X31 + 0x10]
	0x03AEA0B8 LDR X8, [X8]
	0x03AEA0BC STRB W31, [X19 + 0x54]
	0x03AEA0C0 STP X8, X31, [X19 + 0x40]
	0x03AEA0C4 STR X8, [X19 + 0x38]
	0x03AEA0C8 LDP X20, X19, [X31 + 0x50]
	0x03AEA0CC LDP X29, X30, [X31], #0x60
	0x03AEA0D0 RET
	0x03AEA0D4 ADD W8, W1, W2, 0x10, LSL
	0x03AEA0D8 STP W1, W2, [X0]
	0x03AEA0DC STR W8, [X0 + 0x8]
	0x03AEA0E0 RET
	0x03AEA0E4 SUB X31, X31, 0x20
	0x03AEA0E8 STP X30, X19, [X31 + 0x10]
	0x03AEA0EC MOV X19, X0
	0x03AEA0F0 ADD X0, X31, 0x0
	0x03AEA0F4 MOV X1, X31
	0x03AEA0F8 STP S0, S1, [X31]
	0x03AEA0FC STP S2, S3, [X31 + 0x8]
	0x03AEA100 BL 0x3C9E364
	0x03AEA104 ADD X0, X31, 0x0
	0x03AEA108 MOV X1, X31
	0x03AEA10C STR S0, [X19]
	0x03AEA110 BL 0x3C9E374
	0x03AEA114 ADD X0, X31, 0x0
	0x03AEA118 MOV X1, X31
	0x03AEA11C STR S0, [X19 + 0x4]
	0x03AEA120 BL 0x3C9E384
	0x03AEA124 ADD X0, X31, 0x0
	0x03AEA128 MOV X1, X31
	0x03AEA12C STR S0, [X19 + 0x8]
	0x03AEA130 BL 0x3C9E38C
	0x03AEA134 STR S0, [X19 + 0xC]
	0x03AEA138 LDP X30, X19, [X31 + 0x10]
	0x03AEA13C ADD X31, X31, 0x20
	0x03AEA140 RET
	0x03AEA144 FADD S0, S0, S4
	0x03AEA148 FADD S1, S1, S5
	0x03AEA14C FADD S2, S2, S6
	0x03AEA150 FADD S3, S3, S7
	0x03AEA154 RET
	0x03AEA158 LDR W0, [X0 + 0x10]
	0x03AEA15C RET
	0x03AEA160 STR W1, [X0 + 0x10]
	0x03AEA164 RET
	0x03AEA168 LDP S0, S1, [X0 + 0x14]
	0x03AEA16C LDP S2, S3, [X0 + 0x1C]
	0x03AEA170 RET
	0x03AEA174 LDR W0, [X0 + 0x24]
	0x03AEA178 RET
	0x03AEA17C STR W1, [X0 + 0x24]
	0x03AEA180 RET
	0x03AEA184 LDP S0, S1, [X0 + 0x28]
	0x03AEA188 LDP S2, S3, [X0 + 0x30]
	0x03AEA18C RET
	0x03AEA190 LDRB W0, [X0 + 0x3C]
	0x03AEA194 RET
	0x03AEA198 STP X30, X19, [X31 - 0x10]!
	0x03AEA19C MOV X1, X31
	0x03AEA1A0 MOV X19, X0
	0x03AEA1A4 BL 0x33BDD8C
	0x03AEA1A8 MOVI V0.2D, 0x0
	0x03AEA1AC STR X31, [X19 + 0x30]
	0x03AEA1B0 STP V0, V0, [X19 + 0x10]
	0x03AEA1B4 LDP X30, X19, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X30
	003 Move [X31+144], X28
	004 Move [X31+152], X27
	005 Move [X31+160], X26
	006 Move [X31+168], X25
	007 Move [X31+176], X24
	008 Move [X31+184], X23
	009 Move [X31+192], X22
	010 Move [X31+200], X21
	011 Move [X31+208], X20
	012 Move [X31+216], X19
	013 Move X22, 0x8FA000
	014 Move X21, 0x670000
	015 Move W8, [X22+1455]
	016 Move X21, [X21+3008]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {43}
	023 Move X0, 0x670000
	024 Move X0, [X0+3328]
	025 Call 0x1C17CF4
	026 Move X0, 0x670000
	027 Move X0, [X0+3344]
	028 Call 0x1C17CF4
	029 Move X0, 0x670000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move X0, 0x670000
	033 Move X0, [X0+3408]
	034 Call 0x1C17CF4
	035 Move X0, 0x670000
	036 Move X0, [X0+3440]
	037 Call 0x1C17CF4
	038 Move X0, 0x670000
	039 Move X0, [X0+3448]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+1455], W8
	043 Move X0, [X21]
	044 Move [X31+96], X31
	045 Move [X31+104], X31
	046 Move [X31+112], W31
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Call FontEngine.GetGlyphPairAdjustmentTable, X0
	054 Compare X0, 0
	055 JumpIfEqual {196}
	056 Move X8, [X0+24]
	057 Move X20, X0
	058 Compare X8, 0
	059 JumpIfEqual {196}
	060 Move X9, [X19+296]
	061 Compare X9, 0
	062 JumpIfNotEqual {71}
	063 Move X8, 0x670000
	064 Move X8, [X8+3440]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X21, X0
	068 Call TMP_FontFeatureTable..ctor, X0
	069 Move [X19+296], X21
	070 Move W8, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X25, 0x670000
	073 Move X26, 0x670000
	074 Move X27, 0x670000
	075 Move X28, 0x670000
	076 Move X25, [X25+3344]
	077 Move X26, [X26+3448]
	078 Move X27, [X27+3408]
	079 Move X28, [X28+3328]
	080 Move X24, X31
	081 Add X21, X20, 32
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X31, 48
	084 Move X0, X21
	085 Move X1, X31
	086 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	087 Move V0, [X31+3]
	088 Move W8, [X31+64]
	089 Add X0, X31, 96
	090 Move X1, X31
	091 Move [X31+6], V0
	092 Move [X31+112], W8
	093 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	094 Compare W0, 0
	095 JumpIfEqual {196}
	096 Move W8, [X20+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add X8, X31, 48
	099 Move X0, X21
	100 Move X1, X31
	101 Call GlyphPairAdjustmentRecord.get_secondAdjustmentRecord, X0
	102 Move V0, [X31+3]
	103 Move W8, [X31+64]
	104 Add X0, X31, 96
	105 Move X1, X31
	106 Move [X31+6], V0
	107 Move [X31+112], W8
	108 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	109 Move W8, [X20+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W22, W0
	112 Add X8, X31, 48
	113 Move X0, X21
	114 Move X1, X31
	115 Call GlyphPairAdjustmentRecord.get_firstAdjustmentRecord, X0
	116 Move V0, [X31+3]
	117 Move W8, [X31+64]
	118 Add X0, X31, 96
	119 Move X1, X31
	120 Move [X31+6], V0
	121 Move [X31+112], W8
	122 Call GlyphAdjustmentRecord.get_glyphIndex, X0
	123 Move X8, [X19+296]
	124 Compare X8, 0
	125 JumpIfEqual {209}
	126 Move X8, [X8+24]
	127 Compare X8, 0
	128 JumpIfEqual {209}
	129 Move X2, [X25]
	130 Or W22, W0, W22
	131 Move X0, X8
	132 Move W1, W22
	133 Call Dictionary`2<UInt32, Object>.ContainsKey, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {192}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 Move V2, [X21]
	142 Move V1, [X21+16]
	143 Move X0, [X26]
	144 Move [X31+76], V0
	145 Move [X31+48], V2
	146 Move [X31+56], V1
	147 Call 0x1C17F10
	148 Move V0, [X31+48]
	149 Move V1, [X31+64]
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Add X1, X31, 0
	152 Move X23, X0
	153 Move [X31], V0
	154 Move [X31+8], V1
	155 Move [X31+28], V2
	156 Call TMP_GlyphPairAdjustmentRecord..ctor, X0, X1
	157 Move X8, [X19+296]
	158 Compare X8, 0
	159 JumpIfEqual {209}
	160 Move X0, [X8+16]
	161 Compare X0, 0
	162 JumpIfEqual {209}
	163 Move W10, [X0+28]
	164 Move X8, [X0+16]
	165 Move X9, [X27]
	166 Add W10, W10, 1
	167 Move [X0+28], W10
	168 Compare X8, 0
	169 JumpIfEqual {209}
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W11, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W9, W10, 1
	174 Add X8, X8, X10
	175 Move [X0+24], W9
	176 Move [X8+32], X23
	177 Move X8, [X9+32]
	178 Move X1, X23
	179 Move X8, [X8+192]
	180 Move X2, [X8+112]
	181 Call List`1<Object>.AddWithResize, X0, X1
	182 Move X8, [X19+296]
	183 Compare X8, 0
	184 JumpIfEqual {209}
	185 Move X0, [X8+24]
	186 Compare X0, 0
	187 JumpIfEqual {209}
	188 Move X3, [X28]
	189 Move W1, W22
	190 Move X2, X23
	191 Call Dictionary`2<UInt32, Object>.Add, X0, X1, X2
	192 Move W8, [X20+24]
	193 Add X24, X24, 1
	194 Add X21, X21, 44
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X20, [X31+208]
	197 Move X19, [X31+216]
	198 Move X22, [X31+192]
	199 Move X21, [X31+200]
	200 Move X24, [X31+176]
	201 Move X23, [X31+184]
	202 Move X26, [X31+160]
	203 Move X25, [X31+168]
	204 Move X28, [X31+144]
	205 Move X27, [X31+152]
	206 Move X30, [X31+128]
	207 Add X31, X31, 224
	208 Return 
	209 Call 0x1C17F20
	210 Call 0x1C17F28

Method: System.Void UpdateGlyphAdjustmentRecords(System.Collections.Generic.List`1<System.UInt32> glyphIndexes)

Disassembly:
	0x03AEA1B8 RET

ISIL:
	001 Return 

Method: System.Void UpdateGlyphAdjustmentRecords(System.Collections.Generic.List`1<System.UInt32> newGlyphIndexes, System.Collections.Generic.List`1<System.UInt32> allGlyphIndexes)

Disassembly:
	0x03AEA1BC STR D8, [X31 - 0x30]!

ISIL:
	001 Return 

Method: System.Void CopyListDataToArray(System.Collections.Generic.List`1<T> srcList, ref T[] dstArray)

Disassembly:
	0x02299D6C CBZ X20, 0x2299DBC
	0x02299D70 LDR X8, [X19 + 0x38]
	0x02299D74 LDR X0, [X8]
	0x02299D78 LDRB W8, [X0 + 0x135]
	0x02299D7C TBNZ X8, 0x0, 0x2299D84
	0x02299D80 BL 0x1C5C684
	0x02299D84 BL 0x1C16F10
	0x02299D88 LDR X8, [X19 + 0x38]
	0x02299D8C MOV X19, X0
	0x02299D90 LDR X1, [X8 + 0x8]
	0x02299D94 BL 0x269BE9C
	0x02299D98 CBZ X19, 0x2299DF8
	0x02299D9C MOV X0, X19
	0x02299DA0 MOV X1, X20
	0x02299DA4 MOV X2, X31
	0x02299DA8 BL 0x33EE46C
	0x02299DAC MOV X0, X19
	0x02299DB0 LDP X20, X19, [X31 + 0x10]
	0x02299DB4 LDR X30, [X31], #0x20
	0x02299DB8 RET
	0x02299DBC ADRP X0, 0x1E5F000
	0x02299DC0 LDR X0, [X0 + 0x528]
	0x02299DC4 BL 0x1C16D08
	0x02299DC8 BL 0x1C16F10
	0x02299DCC MOV X20, X0
	0x02299DD0 ADRP X0, 0x1E83000
	0x02299DD4 LDR X0, [X0 + 0x778]
	0x02299DD8 BL 0x1C16D08
	0x02299DDC MOV X1, X0
	0x02299DE0 MOV X0, X20
	0x02299DE4 MOV X2, X31
	0x02299DE8 BL 0x330E100
	0x02299DEC MOV X0, X20
	0x02299DF0 MOV X1, X19
	0x02299DF4 BL 0x1C16DEC
	0x02299DF8 BL 0x1C16F20
	0x02299DFC STR X30, [X31 - 0x20]!
	0x02299E00 STP X20, X19, [X31 + 0x10]
	0x02299E04 LDR X8, [X1 + 0x38]
	0x02299E08 MOV X19, X1
	0x02299E0C MOV X20, X0
	0x02299E10 CBNZ X8, 0x2299E1C
	0x02299E14 MOV X0, X19
	0x02299E18 BL 0x1C5C6E0
	0x02299E1C CBZ X20, 0x2299E6C
	0x02299E20 LDR X8, [X19 + 0x38]
	0x02299E24 LDR X0, [X8]
	0x02299E28 LDRB W8, [X0 + 0x135]
	0x02299E2C TBNZ X8, 0x0, 0x2299E34
	0x02299E30 BL 0x1C5C684
	0x02299E34 BL 0x1C16F10
	0x02299E38 LDR X8, [X19 + 0x38]
	0x02299E3C MOV X19, X0
	0x02299E40 LDR X1, [X8 + 0x8]
	0x02299E44 BL 0x269CA00
	0x02299E48 CBZ X19, 0x2299EA8
	0x02299E4C MOV X0, X19
	0x02299E50 MOV X1, X20
	0x02299E54 MOV X2, X31
	0x02299E58 BL 0x33EE46C
	0x02299E5C MOV X0, X19
	0x02299E60 LDP X20, X19, [X31 + 0x10]
	0x02299E64 LDR X30, [X31], #0x20
	0x02299E68 RET
	0x02299E6C ADRP X0, 0x1E5F000
	0x02299E70 LDR X0, [X0 + 0x528]
	0x02299E74 BL 0x1C16D08
	0x02299E78 BL 0x1C16F10
	0x02299E7C MOV X20, X0
	0x02299E80 ADRP X0, 0x1E83000
	0x02299E84 LDR X0, [X0 + 0x778]
	0x02299E88 BL 0x1C16D08
	0x02299E8C MOV X1, X0
	0x02299E90 MOV X0, X20
	0x02299E94 MOV X2, X31
	0x02299E98 BL 0x330E100
	0x02299E9C MOV X0, X20
	0x02299EA0 MOV X1, X19
	0x02299EA4 BL 0x1C16DEC
	0x02299EA8 BL 0x1C16F20
	0x02299EAC STR X30, [X31 - 0x20]!
	0x02299EB0 STP X20, X19, [X31 + 0x10]
	0x02299EB4 LDR X8, [X1 + 0x38]
	0x02299EB8 MOV X19, X1
	0x02299EBC MOV X20, X0
	0x02299EC0 CBNZ X8, 0x2299ECC
	0x02299EC4 MOV X0, X19
	0x02299EC8 BL 0x1C5C6E0
	0x02299ECC CBZ X20, 0x2299F1C
	0x02299ED0 LDR X8, [X19 + 0x38]
	0x02299ED4 LDR X0, [X8]
	0x02299ED8 LDRB W8, [X0 + 0x135]
	0x02299EDC TBNZ X8, 0x0, 0x2299EE4
	0x02299EE0 BL 0x1C5C684
	0x02299EE4 BL 0x1C16F10
	0x02299EE8 LDR X8, [X19 + 0x38]
	0x02299EEC MOV X19, X0
	0x02299EF0 LDR X1, [X8 + 0x8]
	0x02299EF4 BL 0x269EC2C
	0x02299EF8 CBZ X19, 0x2299F58
	0x02299EFC MOV X0, X19
	0x02299F00 MOV X1, X20
	0x02299F04 MOV X2, X31
	0x02299F08 BL 0x33EE46C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X19, X3
	018 Move X20, X2
	019 Move X21, X1
	020 Move [X29-8], X8
	021 Move X8, [X3+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X0, X19
	025 Call 0x1C5D6E0
	026 Move X8, [X19+56]
	027 Move X9, [X8+48]
	028 Move W22, [X9+252]
	029 Add X9, X31, 0
	030 Add X10, X22, 15
	031 And X10, X10, 0x1FFFFFFFF
	032 Subtract X23, X9, X10
	033 Add X31, X23, 0
	034 Compare X21, 0
	035 JumpIfEqual {120}
	036 Move X1, [X8+8]
	037 Move X0, X21
	038 Move X8, [X1]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X9, [X20]
	041 Move X8, [X19+56]
	042 Move W24, W0
	043 Move [X29-40], X25
	044 Compare X9, 0
	045 JumpIfEqual {51}
	046 Move X2, [X8+32]
	047 Move X0, X20
	048 Move W1, W24
	049 Move X8, [X2]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, [X8+24]
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move W1, W24
	059 Call 0x1C17D6C
	060 Move [X20], X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X26, X31
	063 Move W24, W24
	064 Subtract X27, X29, 12
	065 Move X8, [X19+56]
	066 Move X28, [X20]
	067 Subtract X3, X29, 32
	068 Move X2, X21
	069 Move X1, [X8+40]
	070 Move X4, X23
	071 Move X0, [X1]
	072 Move [X29-12], W26
	073 Move [X29-32], X27
	074 Move [X29-24], X23
	075 Move X8, [X1+16]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Compare X28, 0
	078 JumpIfEqual {120}
	079 Move W25, [X28+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X28]
	082 Move X1, X23
	083 Move X2, X22
	084 Move W8, [X8+260]
	085 NotImplemented "Instruction NOP not yet implemented."
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Add X0, X8, 32
	088 Call 0x3EB2AC0
	089 Move X8, [X19+56]
	090 Move X0, [X8+48]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {98}
	096 Call 0x1C5D684
	097 Move W25, [X28+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X26, X26, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X8+40]
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X31, X29, 0
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X22, [X31+64]
	109 Move X21, [X31+72]
	110 Move X24, [X31+48]
	111 Move X23, [X31+56]
	112 Move X26, [X31+32]
	113 Move X25, [X31+40]
	114 Move X28, [X31+16]
	115 Move X27, [X31+24]
	116 Move X29, [X31+96]
	117 Move X30, [X31+104]
	118 Return 
	119 Call 0x1C17F28
	120 Call 0x1C17F20
	121 Call 0x3EB2B20

Method: System.Void ClearFontAssetData(System.Boolean setAtlasSizeToZero = False)

Disassembly:
	0x03AEA1C0 STP X30, X21, [X31 + 0x10]
	0x03AEA1C4 STP X20, X19, [X31 + 0x20]
	0x03AEA1C8 MOV W20, W1
	0x03AEA1CC MOV X1, X31
	0x03AEA1D0 MOV V8.16B, V0.16B
	0x03AEA1D4 MOV W19, W2
	0x03AEA1D8 MOV X21, X0
	0x03AEA1DC BL 0x33BDD8C
	0x03AEA1E0 STR W20, [X21 + 0x10]
	0x03AEA1E4 STR W19, [X21 + 0x24]
	0x03AEA1E8 STR S8, [X21 + 0x38]
	0x03AEA1EC LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X20, X0
	006 Call TMP_FontAsset.ClearFontAssetTables, X0
	007 And W1, W19, 1
	008 Move X0, X20
	009 Call TMP_FontAsset.ClearAtlasTextures, X0, X1
	010 Move X0, X20
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X30, [X31+32]
	014 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	015 Return 

Method: System.Void ClearFontAssetDataInternal()

Disassembly:
	0x03AEA710 LDR X0, [X0 + 0xF80]
	0x03AEA714 BL 0x1C16CF4
	0x03AEA718 ADRP X0, 0x66E000
	0x03AEA71C LDR X0, [X0 + 0xF78]
	0x03AEA720 BL 0x1C16CF4
	0x03AEA724 MOVZ W8, 0x1
	0x03AEA728 STRB W8, [X22 + 0x5BE]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TMP_FontAsset.ClearFontAssetTables, X0
	005 Move W1, 1
	006 Move X0, X19
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call TMP_FontAsset.ClearAtlasTextures, X0, X1
	010 Return 

Method: System.Void UpdateFontAssetData()

Disassembly:
	0x03AEA72C LDR X0, [X23]
	0x03AEA730 BL 0x1C16F10
	0x03AEA734 MOV X1, X31
	0x03AEA738 MOV X22, X0
	0x03AEA73C BL 0x33BDD8C
	0x03AEA740 CBZ X22, 0x3AEA868
	0x03AEA744 ADRP X8, 0x66E000
	0x03AEA748 LDR X8, [X8 + 0xF68]
	0x03AEA74C STP W21, W20, [X22 + 0x10]
	0x03AEA750 ADRP X21, 0x66E000
	0x03AEA754 LDR X20, [X19 + 0x10]
	0x03AEA758 LDR X0, [X8]
	0x03AEA75C LDR X21, [X21 + 0xF80]
	0x03AEA760 BL 0x1C16F10
	0x03AEA764 LDR X2, [X21]
	0x03AEA768 MOV X1, X22
	0x03AEA76C MOV X3, X31
	0x03AEA770 MOV X21, X0
	0x03AEA774 BL 0x24AD1FC
	0x03AEA778 CBZ X20, 0x3AEA868
	0x03AEA77C ADRP X8, 0x66E000
	0x03AEA780 LDR X8, [X8 + 0xF60]
	0x03AEA784 MOV X0, X20
	0x03AEA788 MOV X1, X21
	0x03AEA78C LDR X2, [X8]
	0x03AEA790 BL 0x301C7DC
	0x03AEA794 ADDS W31, W0, 0x1
	0x03AEA798 B.EQ 0x3AEA7A4
	0x03AEA79C MOVN W0, 0x0
	0x03AEA7A0 B 0x3AEA848
	0x03AEA7A4 ADRP X8, 0x66E000
	0x03AEA7A8 LDR X19, [X19 + 0x10]
	0x03AEA7AC LDP W21, W22, [X22 + 0x10]
	0x03AEA7B0 LDR X8, [X8 + 0xF40]
	0x03AEA7B4 LDR X0, [X8]
	0x03AEA7B8 BL 0x1C16F10
	0x03AEA7BC MOV X1, X31
	0x03AEA7C0 MOV X20, X0
	0x03AEA7C4 BL 0x33BDD8C
	0x03AEA7C8 STR W21, [X20 + 0x10]
	0x03AEA7CC STP S15, S14, [X20 + 0x14]
	0x03AEA7D0 STP S13, S12, [X20 + 0x1C]
	0x03AEA7D4 STR W22, [X20 + 0x24]
	0x03AEA7D8 STP S11, S10, [X20 + 0x28]
	0x03AEA7DC STP S9, S8, [X20 + 0x30]
	0x03AEA7E0 CBZ X19, 0x3AEA868
	0x03AEA7E4 ADRP X9, 0x66E000
	0x03AEA7E8 LDR X9, [X9 + 0xF50]
	0x03AEA7EC LDR W10, [X19 + 0x1C]
	0x03AEA7F0 LDR X8, [X19 + 0x10]
	0x03AEA7F4 LDR X9, [X9]
	0x03AEA7F8 ADD W10, W10, 0x1
	0x03AEA7FC STR W10, [X19 + 0x1C]
	0x03AEA800 CBZ X8, 0x3AEA868
	0x03AEA804 LDRSW X10, [X19 + 0x18]
	0x03AEA808 LDR W11, [X8 + 0x18]
	0x03AEA80C CMP W10, W11
	0x03AEA810 B.CS 0x3AEA82C
	0x03AEA814 ADD W9, W10, 0x1
	0x03AEA818 ADD X8, X8, X10, 0x3, LSL
	0x03AEA81C MOV W0, W31
	0x03AEA820 STR W9, [X19 + 0x18]
	0x03AEA824 STR X20, [X8 + 0x20]
	0x03AEA828 B 0x3AEA848
	0x03AEA82C LDR X8, [X9 + 0x20]
	0x03AEA830 MOV X0, X19
	0x03AEA834 MOV X1, X20
	0x03AEA838 LDR X8, [X8 + 0xC0]
	0x03AEA83C LDR X2, [X8 + 0x70]
	0x03AEA840 BL 0x301BF90
	0x03AEA844 MOV W0, W31
	0x03AEA848 LDP X20, X19, [X31 + 0x60]
	0x03AEA84C LDP X22, X21, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8F9000
	009 Move W8, [X20+1456]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x66F000
	016 Move X0, [X0+3312]
	017 Call 0x1C17CF4
	018 Move X0, 0x66F000
	019 Move X0, [X0+3320]
	020 Call 0x1C17CF4
	021 Move X0, 0x633000
	022 Move X0, [X0+3336]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1456], W8
	026 Move X8, [X19+192]
	027 Compare X8, 0
	028 JumpIfEqual {60}
	029 Move X9, 0x633000
	030 Move X9, [X9+3336]
	031 Move W1, [X8+24]
	032 Move X0, [X9]
	033 Call 0x1C17D6C
	034 Move X8, [X19+192]
	035 Compare X8, 0
	036 JumpIfEqual {60}
	037 Move X22, 0x66F000
	038 Move X22, [X22+3320]
	039 Move X20, X0
	040 Move X21, X31
	041 Add X23, X0, 32
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X2, [X22]
	045 Move X0, X8
	046 Move W1, W21
	047 Call List`1<Object>.get_Item, X0, X1
	048 Compare X0, 0
	049 JumpIfEqual {60}
	050 Compare X20, 0
	051 JumpIfEqual {60}
	052 Move W8, [X20+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W8, [X0+20]
	055 Move [X23], W8
	056 Move X8, [X19+192]
	057 Add X21, X21, 1
	058 Compare X8, 0
	059 JumpIfNotEqual {42}
	060 Call 0x1C17F20
	061 Move X0, X19
	062 Call TMP_FontAsset.ClearFontAssetTables, X0
	063 Move W1, 1
	064 Move X0, X19
	065 Call TMP_FontAsset.ClearAtlasTextures, X0, X1
	066 Move X0, X19
	067 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	068 Compare X20, 0
	069 JumpIfEqual {60}
	070 Move X8, [X20+24]
	071 Compare X8, 0
	072 JumpIfEqual {79}
	073 Add X2, X31, 8
	074 Move W3, 1
	075 Move X0, X19
	076 Move X1, X20
	077 Move [X31+8], X31
	078 Call TMP_FontAsset.TryAddCharacters, X0, X1, X2, X3
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X30, [X31+16]
	084 Move X23, [X31+24]
	085 Add X31, X31, 64
	086 Return 
	087 Call 0x1C17F28

Method: System.Void ClearFontAssetTables()

Disassembly:
	0x03AEA1F0 LDP X30, X21, [X31 + 0x10]
	0x03AEA1F4 LDR V8, [X31], #0x30
	0x03AEA1F8 RET
	0x03AEA1FC STP D15, D14, [X31 - 0x60]!
	0x03AEA200 STP D13, D12, [X31 + 0x10]
	0x03AEA204 STP D11, D10, [X31 + 0x20]
	0x03AEA208 STP D9, D8, [X31 + 0x30]
	0x03AEA20C STP X30, X21, [X31 + 0x40]
	0x03AEA210 STP X20, X19, [X31 + 0x50]
	0x03AEA214 MOV W20, W1
	0x03AEA218 MOV X1, X31
	0x03AEA21C MOV V8.16B, V7.16B
	0x03AEA220 MOV V9.16B, V6.16B
	0x03AEA224 MOV V10.16B, V5.16B
	0x03AEA228 MOV V11.16B, V4.16B
	0x03AEA22C MOV W19, W2
	0x03AEA230 MOV V12.16B, V3.16B
	0x03AEA234 MOV V13.16B, V2.16B
	0x03AEA238 MOV V14.16B, V1.16B
	0x03AEA23C MOV V15.16B, V0.16B
	0x03AEA240 MOV X21, X0
	0x03AEA244 BL 0x33BDD8C
	0x03AEA248 STR W20, [X21 + 0x10]
	0x03AEA24C STP S15, S14, [X21 + 0x14]
	0x03AEA250 STP S13, S12, [X21 + 0x1C]
	0x03AEA254 STR W19, [X21 + 0x24]
	0x03AEA258 STP S11, S10, [X21 + 0x28]
	0x03AEA25C STP S9, S8, [X21 + 0x30]
	0x03AEA260 LDP X20, X19, [X31 + 0x50]
	0x03AEA264 LDP X30, X21, [X31 + 0x40]
	0x03AEA268 LDP D9, D8, [X31 + 0x30]
	0x03AEA26C LDP D11, D10, [X31 + 0x20]
	0x03AEA270 LDP D13, D12, [X31 + 0x10]
	0x03AEA274 LDP D15, D14, [X31], #0x60
	0x03AEA278 RET
	0x03AEA27C LDR V0, [X0 + 0x38]
	0x03AEA280 STR S0, [X0 + 0x1C]
	0x03AEA284 RET
	0x03AEA288 STR X30, [X31 - 0x20]!
	0x03AEA28C STP X20, X19, [X31 + 0x10]
	0x03AEA290 ADRP X19, 0x8F8000
	0x03AEA294 ADRP X20, 0x66E000
	0x03AEA298 LDRB W8, [X19 + 0x5BA]
	0x03AEA29C LDR X20, [X20 + 0xF40]
	0x03AEA2A0 TBNZ X8, 0x0, 0x3AEA2B8
	0x03AEA2A4 ADRP X0, 0x66E000
	0x03AEA2A8 LDR X0, [X0 + 0xF40]
	0x03AEA2AC BL 0x1C16CF4
	0x03AEA2B0 MOVZ W8, 0x1
	0x03AEA2B4 STRB W8, [X19 + 0x5BA]
	0x03AEA2B8 LDR X0, [X20]
	0x03AEA2BC BL 0x1C16F10
	0x03AEA2C0 MOV X1, X31
	0x03AEA2C4 MOV X19, X0
	0x03AEA2C8 BL 0x33BDD8C
	0x03AEA2CC MOVI V0.2D, 0x0
	0x03AEA2D0 STR W31, [X19 + 0x10]
	0x03AEA2D4 STR W31, [X19 + 0x24]
	0x03AEA2D8 STUR V0, [X19 + 0x14]
	0x03AEA2DC STUR V0, [X19 + 0x28]
	0x03AEA2E0 LDR X8, [X20]
	0x03AEA2E4 LDR X8, [X8 + 0xB8]
	0x03AEA2E8 STR X19, [X8]
	0x03AEA2EC LDP X20, X19, [X31 + 0x10]
	0x03AEA2F0 LDR X30, [X31], #0x20
	0x03AEA2F4 RET
	0x03AEA2F8 STR D8, [X31 - 0x50]!
	0x03AEA2FC STP X30, X25, [X31 + 0x10]
	0x03AEA300 STP X24, X23, [X31 + 0x20]
	0x03AEA304 STP X22, X21, [X31 + 0x30]
	0x03AEA308 STP X20, X19, [X31 + 0x40]
	0x03AEA30C ADRP X20, 0x8F8000
	0x03AEA310 LDRB W8, [X20 + 0x5BC]
	0x03AEA314 MOV X19, X0
	0x03AEA318 TBNZ X8, 0x0, 0x3AEA354
	0x03AEA31C ADRP X0, 0x66E000
	0x03AEA320 LDR X0, [X0 + 0xF48]
	0x03AEA324 BL 0x1C16CF4
	0x03AEA328 ADRP X0, 0x66E000
	0x03AEA32C LDR X0, [X0 + 0xF40]
	0x03AEA330 BL 0x1C16CF4
	0x03AEA334 ADRP X0, 0x66E000
	0x03AEA338 LDR X0, [X0 + 0xF50]
	0x03AEA33C BL 0x1C16CF4
	0x03AEA340 ADRP X0, 0x66E000
	0x03AEA344 LDR X0, [X0 + 0xD28]
	0x03AEA348 BL 0x1C16CF4
	0x03AEA34C MOVZ W8, 0x1
	0x03AEA350 STRB W8, [X20 + 0x5BC]
	0x03AEA354 LDR X20, [X19 + 0x10]
	0x03AEA358 CBZ X20, 0x3AEA4C8
	0x03AEA35C ADRP X22, 0x66E000
	0x03AEA360 ADRP X21, 0x66E000
	0x03AEA364 LDR W8, [X20 + 0x18]
	0x03AEA368 LDR X22, [X22 + 0xF40]
	0x03AEA36C LDR X21, [X21 + 0xF50]
	0x03AEA370 CBZ W8, 0x3AEA41C
	0x03AEA374 ADRP X25, 0x66E000
	0x03AEA378 LDR X25, [X25 + 0xF48]
	0x03AEA37C MOV X0, X20
	0x03AEA380 LDR X1, [X25]
	0x03AEA384 BL 0x21C69A4
	0x03AEA388 CBZ X0, 0x3AEA4C8
	0x03AEA38C LDR W23, [X0 + 0x10]
	0x03AEA390 LDR X0, [X19 + 0x10]
	0x03AEA394 LDR X1, [X25]
	0x03AEA398 BL 0x21C69A4
	0x03AEA39C CBZ X0, 0x3AEA4C8
	0x03AEA3A0 LDR W24, [X0 + 0x24]
	0x03AEA3A4 LDR X0, [X19 + 0x10]
	0x03AEA3A8 LDR X1, [X25]
	0x03AEA3AC BL 0x21C69A4
	0x03AEA3B0 CBZ X0, 0x3AEA4C8
	0x03AEA3B4 LDR V8, [X0 + 0x38]
	0x03AEA3B8 LDR X0, [X22]
	0x03AEA3BC LDR X19, [X19 + 0x10]
	0x03AEA3C0 BL 0x1C16F10
	0x03AEA3C4 MOV X1, X31
	0x03AEA3C8 MOV X20, X0
	0x03AEA3CC BL 0x33BDD8C
	0x03AEA3D0 STR W23, [X20 + 0x10]
	0x03AEA3D4 STR W24, [X20 + 0x24]
	0x03AEA3D8 STR S8, [X20 + 0x38]
	0x03AEA3DC CBZ X19, 0x3AEA4C8
	0x03AEA3E0 LDR W10, [X19 + 0x1C]
	0x03AEA3E4 LDR X8, [X19 + 0x10]
	0x03AEA3E8 LDR X9, [X21]
	0x03AEA3EC ADD W10, W10, 0x1
	0x03AEA3F0 STR W10, [X19 + 0x1C]
	0x03AEA3F4 CBZ X8, 0x3AEA4C8
	0x03AEA3F8 LDRSW X10, [X19 + 0x18]
	0x03AEA3FC LDR W11, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8F9000
	007 Move W8, [X20+1457]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x66F000
	014 Move X0, [X0+3016]
	015 Call 0x1C17CF4
	016 Move X0, 0x66F000
	017 Move X0, [X0+3728]
	018 Call 0x1C17CF4
	019 Move X0, 0x66F000
	020 Move X0, [X0+3112]
	021 Call 0x1C17CF4
	022 Move X0, 0x66F000
	023 Move X0, [X0+3744]
	024 Call 0x1C17CF4
	025 Move X0, 0x66F000
	026 Move X0, [X0+3120]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1457], W8
	030 Move X8, [X19+176]
	031 Compare X8, 0
	032 JumpIfEqual {43}
	033 Move W2, [X8+24]
	034 Move W9, [X8+28]
	035 Add W9, W9, 1
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X8+24], W31
	038 Move [X8+28], W9
	039 Move X0, [X8+16]
	040 Move W1, W31
	041 Move X3, X31
	042 Call Array.Clear, X0, X1, X2
	043 Move X8, [X19+192]
	044 Compare X8, 0
	045 JumpIfEqual {56}
	046 Move W2, [X8+24]
	047 Move W9, [X8+28]
	048 Add W9, W9, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X8+24], W31
	051 Move [X8+28], W9
	052 Move X0, [X8+16]
	053 Move W1, W31
	054 Move X3, X31
	055 Call Array.Clear, X0, X1, X2
	056 Move X8, [X19+232]
	057 Compare X8, 0
	058 JumpIfEqual {63}
	059 Move W9, [X8+28]
	060 Add W9, W9, 1
	061 Move [X8+24], W31
	062 Move [X8+28], W9
	063 Move X20, [X19+240]
	064 Compare X20, 0
	065 JumpIfEqual {108}
	066 Move W9, [X20+28]
	067 Move W8, [X19+276]
	068 Move X21, 0x66F000
	069 Move X21, [X21+3016]
	070 Add W9, W9, 1
	071 Move W10, 1
	072 Move [X20+24], W31
	073 Move [X20+28], W9
	074 NotImplemented "Instruction BIC not yet implemented."
	075 Move W9, [X19+264]
	076 Move W10, [X19+268]
	077 Add X0, X31, 0
	078 Move W1, W31
	079 Subtract W3, W9, W8
	080 Subtract W4, W10, W8
	081 Move W2, W31
	082 Move X5, X31
	083 Move [X31], X31
	084 Move [X31+8], X31
	085 Call GlyphRect..ctor, X0, X1, X2, X3, X4
	086 Move W10, [X20+28]
	087 Move X1, [X31]
	088 Move X2, [X31+8]
	089 Move X8, [X20+16]
	090 Move X9, [X21]
	091 Add W10, W10, 1
	092 Move [X20+28], W10
	093 Compare X8, 0
	094 JumpIfEqual {156}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W11, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W9, W10, 1
	099 Add X8, X8, X10
	100 Move [X20+24], W9
	101 Move [X8+32], X1
	102 Move [X8+40], X2
	103 Move X8, [X9+32]
	104 Move X0, X20
	105 Move X8, [X8+192]
	106 Move X3, [X8+112]
	107 Call List`1<GlyphRect>.AddWithResize, X0, X1
	108 Move X8, [X19+456]
	109 Compare X8, 0
	110 JumpIfEqual {121}
	111 Move W2, [X8+24]
	112 Move W9, [X8+28]
	113 Add W9, W9, 1
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X8+24], W31
	116 Move [X8+28], W9
	117 Move X0, [X8+16]
	118 Move W1, W31
	119 Move X3, X31
	120 Call Array.Clear, X0, X1, X2
	121 Move X8, [X19+464]
	122 Compare X8, 0
	123 JumpIfEqual {134}
	124 Move W2, [X8+24]
	125 Move W9, [X8+28]
	126 Add W9, W9, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move [X8+24], W31
	129 Move [X8+28], W9
	130 Move X0, [X8+16]
	131 Move W1, W31
	132 Move X3, X31
	133 Call Array.Clear, X0, X1, X2
	134 Move X8, [X19+296]
	135 Compare X8, 0
	136 JumpIfEqual {150}
	137 Move X8, [X8+16]
	138 Compare X8, 0
	139 JumpIfEqual {150}
	140 Move W2, [X8+24]
	141 Move W9, [X8+28]
	142 Add W9, W9, 1
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X8+24], W31
	145 Move [X8+28], W9
	146 Move X0, [X8+16]
	147 Move W1, W31
	148 Move X3, X31
	149 Call Array.Clear, X0, X1, X2
	150 Move X20, [X31+32]
	151 Move X19, [X31+40]
	152 Move X30, [X31+16]
	153 Move X21, [X31+24]
	154 Add X31, X31, 48
	155 Return 
	156 Call 0x1C17F20

Method: System.Void ClearAtlasTextures(System.Boolean setAtlasSizeToZero = False)

Disassembly:
	0x03AEA400 CMP W10, W11
	0x03AEA404 B.CS 0x3AEA48C
	0x03AEA408 ADD W9, W10, 0x1
	0x03AEA40C ADD X8, X8, X10, 0x3, LSL
	0x03AEA410 STR W9, [X19 + 0x18]
	0x03AEA414 STR X20, [X8 + 0x20]
	0x03AEA418 B 0x3AEA474
	0x03AEA41C LDR X0, [X22]
	0x03AEA420 BL 0x1C16F10
	0x03AEA424 MOV X1, X31
	0x03AEA428 MOV X19, X0
	0x03AEA42C BL 0x33BDD8C
	0x03AEA430 STR W31, [X19 + 0x10]
	0x03AEA434 STR W31, [X19 + 0x24]
	0x03AEA438 STR W31, [X19 + 0x38]
	0x03AEA43C LDR W10, [X20 + 0x1C]
	0x03AEA440 LDR X8, [X20 + 0x10]
	0x03AEA444 LDR X9, [X21]
	0x03AEA448 ADD W10, W10, 0x1
	0x03AEA44C STR W10, [X20 + 0x1C]
	0x03AEA450 CBZ X8, 0x3AEA4C8
	0x03AEA454 LDRSW X10, [X20 + 0x18]
	0x03AEA458 LDR W11, [X8 + 0x18]
	0x03AEA45C CMP W10, W11
	0x03AEA460 B.CS 0x3AEA49C
	0x03AEA464 ADD W9, W10, 0x1
	0x03AEA468 ADD X8, X8, X10, 0x3, LSL
	0x03AEA46C STR W9, [X20 + 0x18]
	0x03AEA470 STR X19, [X8 + 0x20]
	0x03AEA474 LDP X20, X19, [X31 + 0x40]
	0x03AEA478 LDP X22, X21, [X31 + 0x30]
	0x03AEA47C LDP X24, X23, [X31 + 0x20]
	0x03AEA480 LDP X30, X25, [X31 + 0x10]
	0x03AEA484 LDR V8, [X31], #0x50
	0x03AEA488 RET
	0x03AEA48C LDR X8, [X9 + 0x20]
	0x03AEA490 MOV X0, X19
	0x03AEA494 MOV X1, X20
	0x03AEA498 B 0x3AEA4A8
	0x03AEA49C LDR X8, [X9 + 0x20]
	0x03AEA4A0 MOV X0, X20
	0x03AEA4A4 MOV X1, X19
	0x03AEA4A8 LDR X8, [X8 + 0xC0]
	0x03AEA4AC LDR X2, [X8 + 0x70]
	0x03AEA4B0 LDP X20, X19, [X31 + 0x40]
	0x03AEA4B4 LDP X22, X21, [X31 + 0x30]
	0x03AEA4B8 LDP X24, X23, [X31 + 0x20]
	0x03AEA4BC LDP X30, X25, [X31 + 0x10]
	0x03AEA4C0 LDR V8, [X31], #0x50
	0x03AEA4C4 B 0x301BF90
	0x03AEA4C8 BL 0x1C16F20
	0x03AEA4CC STR D8, [X31 - 0x40]!
	0x03AEA4D0 STP X30, X23, [X31 + 0x10]
	0x03AEA4D4 STP X22, X21, [X31 + 0x20]
	0x03AEA4D8 STP X20, X19, [X31 + 0x30]
	0x03AEA4DC ADRP X22, 0x8F8000
	0x03AEA4E0 ADRP X23, 0x66E000
	0x03AEA4E4 LDRB W8, [X22 + 0x5BD]
	0x03AEA4E8 LDR X23, [X23 + 0xF58]
	0x03AEA4EC MOV V8.16B, V0.16B
	0x03AEA4F0 MOV W20, W2
	0x03AEA4F4 MOV W21, W1
	0x03AEA4F8 MOV X19, X0
	0x03AEA4FC TBNZ X8, 0x0, 0x3AEA550
	0x03AEA500 ADRP X0, 0x66E000
	0x03AEA504 LDR X0, [X0 + 0xF40]
	0x03AEA508 BL 0x1C16CF4
	0x03AEA50C ADRP X0, 0x66E000
	0x03AEA510 LDR X0, [X0 + 0xF50]
	0x03AEA514 BL 0x1C16CF4
	0x03AEA518 ADRP X0, 0x66E000
	0x03AEA51C LDR X0, [X0 + 0xF60]
	0x03AEA520 BL 0x1C16CF4
	0x03AEA524 ADRP X0, 0x66E000
	0x03AEA528 LDR X0, [X0 + 0xF68]
	0x03AEA52C BL 0x1C16CF4
	0x03AEA530 ADRP X0, 0x66E000
	0x03AEA534 LDR X0, [X0 + 0xF70]
	0x03AEA538 BL 0x1C16CF4
	0x03AEA53C ADRP X0, 0x66E000
	0x03AEA540 LDR X0, [X0 + 0xF58]
	0x03AEA544 BL 0x1C16CF4
	0x03AEA548 MOVZ W8, 0x1
	0x03AEA54C STRB W8, [X22 + 0x5BD]
	0x03AEA550 LDR X0, [X23]
	0x03AEA554 BL 0x1C16F10
	0x03AEA558 MOV X1, X31
	0x03AEA55C MOV X22, X0
	0x03AEA560 BL 0x33BDD8C
	0x03AEA564 CBZ X22, 0x3AEA674
	0x03AEA568 ADRP X8, 0x66E000
	0x03AEA56C LDR X8, [X8 + 0xF68]
	0x03AEA570 STP W21, W20, [X22 + 0x10]
	0x03AEA574 ADRP X21, 0x66E000
	0x03AEA578 LDR X20, [X19 + 0x10]
	0x03AEA57C LDR X0, [X8]
	0x03AEA580 LDR X21, [X21 + 0xF70]
	0x03AEA584 BL 0x1C16F10
	0x03AEA588 LDR X2, [X21]
	0x03AEA58C MOV X1, X22
	0x03AEA590 MOV X3, X31
	0x03AEA594 MOV X21, X0
	0x03AEA598 BL 0x24AD1FC
	0x03AEA59C CBZ X20, 0x3AEA674
	0x03AEA5A0 ADRP X8, 0x66E000
	0x03AEA5A4 LDR X8, [X8 + 0xF60]
	0x03AEA5A8 MOV X0, X20
	0x03AEA5AC MOV X1, X21
	0x03AEA5B0 LDR X2, [X8]
	0x03AEA5B4 BL 0x301C7DC
	0x03AEA5B8 ADDS W31, W0, 0x1
	0x03AEA5BC B.EQ 0x3AEA5C8
	0x03AEA5C0 MOVN W0, 0x0
	0x03AEA5C4 B 0x3AEA660
	0x03AEA5C8 ADRP X8, 0x66E000
	0x03AEA5CC LDR X19, [X19 + 0x10]
	0x03AEA5D0 LDP W21, W22, [X22 + 0x10]
	0x03AEA5D4 LDR X8, [X8 + 0xF40]
	0x03AEA5D8 LDR X0, [X8]
	0x03AEA5DC BL 0x1C16F10
	0x03AEA5E0 MOV X1, X31
	0x03AEA5E4 MOV X20, X0
	0x03AEA5E8 BL 0x33BDD8C
	0x03AEA5EC STR W21, [X20 + 0x10]
	0x03AEA5F0 STR W22, [X20 + 0x24]
	0x03AEA5F4 STR S8, [X20 + 0x38]
	0x03AEA5F8 CBZ X19, 0x3AEA674
	0x03AEA5FC ADRP X9, 0x66E000
	0x03AEA600 LDR X9, [X9 + 0xF50]
	0x03AEA604 LDR W10, [X19 + 0x1C]
	0x03AEA608 LDR X8, [X19 + 0x10]
	0x03AEA60C LDR X9, [X9]
	0x03AEA610 ADD W10, W10, 0x1
	0x03AEA614 STR W10, [X19 + 0x1C]
	0x03AEA618 CBZ X8, 0x3AEA674
	0x03AEA61C LDRSW X10, [X19 + 0x18]
	0x03AEA620 LDR W11, [X8 + 0x18]
	0x03AEA624 CMP W10, W11
	0x03AEA628 B.CS 0x3AEA644
	0x03AEA62C ADD W9, W10, 0x1
	0x03AEA630 ADD X8, X8, X10, 0x3, LSL
	0x03AEA634 MOV W0, W31
	0x03AEA638 STR W9, [X19 + 0x18]
	0x03AEA63C STR X20, [X8 + 0x20]
	0x03AEA640 B 0x3AEA660
	0x03AEA644 LDR X8, [X9 + 0x20]
	0x03AEA648 MOV X0, X19
	0x03AEA64C MOV X1, X20
	0x03AEA650 LDR X8, [X8 + 0xC0]
	0x03AEA654 LDR X2, [X8 + 0x70]
	0x03AEA658 BL 0x301BF90
	0x03AEA65C MOV W0, W31
	0x03AEA660 LDP X20, X19, [X31 + 0x30]
	0x03AEA664 LDP X22, X21, [X31 + 0x20]
	0x03AEA668 LDP X30, X23, [X31 + 0x10]
	0x03AEA66C LDR V8, [X31], #0x40
	0x03AEA670 RET
	0x03AEA674 BL 0x1C16F20
	0x03AEA678 MOV X1, X31
	0x03AEA67C B 0x33BDD8C
	0x03AEA680 STP D15, D14, [X31 - 0x70]!
	0x03AEA684 STP D13, D12, [X31 + 0x10]
	0x03AEA688 STP D11, D10, [X31 + 0x20]
	0x03AEA68C STP D9, D8, [X31 + 0x30]
	0x03AEA690 STP X30, X23, [X31 + 0x40]
	0x03AEA694 STP X22, X21, [X31 + 0x50]
	0x03AEA698 STP X20, X19, [X31 + 0x60]
	0x03AEA69C ADRP X22, 0x8F8000
	0x03AEA6A0 ADRP X23, 0x66E000
	0x03AEA6A4 LDRB W8, [X22 + 0x5BE]
	0x03AEA6A8 LDR X23, [X23 + 0xF78]
	0x03AEA6AC MOV V8.16B, V7.16B
	0x03AEA6B0 MOV V9.16B, V6.16B
	0x03AEA6B4 MOV V10.16B, V5.16B
	0x03AEA6B8 MOV V11.16B, V4.16B
	0x03AEA6BC MOV W20, W2
	0x03AEA6C0 MOV V12.16B, V3.16B
	0x03AEA6C4 MOV V13.16B, V2.16B
	0x03AEA6C8 MOV V14.16B, V1.16B
	0x03AEA6CC MOV V15.16B, V0.16B
	0x03AEA6D0 MOV W21, W1
	0x03AEA6D4 MOV X19, X0
	0x03AEA6D8 TBNZ X8, 0x0, 0x3AEA72C
	0x03AEA6DC ADRP X0, 0x66E000
	0x03AEA6E0 LDR X0, [X0 + 0xF40]
	0x03AEA6E4 BL 0x1C16CF4
	0x03AEA6E8 ADRP X0, 0x66E000
	0x03AEA6EC LDR X0, [X0 + 0xF50]
	0x03AEA6F0 BL 0x1C16CF4
	0x03AEA6F4 ADRP X0, 0x66E000
	0x03AEA6F8 LDR X0, [X0 + 0xF60]
	0x03AEA6FC BL 0x1C16CF4
	0x03AEA700 ADRP X0, 0x66E000
	0x03AEA704 LDR X0, [X0 + 0xF68]
	0x03AEA708 BL 0x1C16CF4
	0x03AEA70C ADRP X0, 0x66E000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x8F9000
	010 Move W8, [X20+1458]
	011 Move W21, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x66F000
	018 Move X0, [X0+3720]
	019 Call 0x1C17CF4
	020 Move X0, 0x60A000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x66F000
	024 Move X0, [X0+3008]
	025 Call 0x1C17CF4
	026 Move X0, 0x60A000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x60A000
	030 Move X0, [X0+2760]
	031 Call 0x1C17CF4
	032 Move X0, 0x66F000
	033 Move X0, [X0+3592]
	034 Call 0x1C17CF4
	035 Move X0, 0x66F000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move X0, 0x66F000
	039 Move X0, [X0+3752]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1458], W8
	043 Move X20, X19
	044 Add X20, X20, 216
	045 Move X8, [X20]
	046 Move [X20+8], W31
	047 Compare X8, 0
	048 JumpIfEqual {117}
	049 Move X24, 0x60A000
	050 Move X23, 0x66F000
	051 Move X24, [X24+1432]
	052 Move X23, [X23+3720]
	053 Move W25, 5
	054 Move W9, [X8+24]
	055 Subtract X10, X25, 4
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X24]
	059 Move X22, [X8]
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X22
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Equality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {81}
	072 Move X0, [X24]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move W1, 1
	078 Move X0, X22
	079 Move X2, X31
	080 Call Object.DestroyImmediate, X0, X1
	081 Move X8, [X20]
	082 Add X25, X25, 1
	083 Compare X8, 0
	084 JumpIfNotEqual {54}
	085 Call 0x1C17F20
	086 Move X2, [X23]
	087 Move W1, 1
	088 Move X0, X20
	089 Call Array.Resize, X0, X1
	090 Move X8, [X20]
	091 Compare X8, 0
	092 JumpIfEqual {85}
	093 Move W9, [X8+24]
	094 Compare W9, 0
	095 JumpIfEqual {231}
	096 Move X20, [X8+32]
	097 Move [X19+208], X20
	098 Compare X20, 0
	099 JumpIfEqual {85}
	100 Move X8, [X20]
	101 Move X0, X20
	102 Move X9, [X8+488]
	103 Move X1, [X8+496]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {126}
	109 Move TEMP, X21
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {188}
	113 Move W3, 1
	114 Move X0, X20
	115 Move W1, W31
	116 Move W2, W31
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X30, [X31+64]
	124 Move X25, [X31+72]
	125 Return 
	126 Move X8, 0x60A000
	127 Move X8, [X8+2760]
	128 Move W1, 5
	129 Move X0, [X8]
	130 Call 0x1C17D6C
	131 Compare X0, 0
	132 JumpIfEqual {85}
	133 Move W8, [X0+24]
	134 Move X21, X0
	135 Compare W8, 0
	136 JumpIfEqual {231}
	137 Move X8, 0x66F000
	138 Move X8, [X8+3752]
	139 Move X0, X19
	140 Move X1, X31
	141 Move X8, [X8]
	142 Move [X21+32], X8
	143 Call Object.get_name, X0
	144 Move W8, [X21+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X21+40], X0
	148 Move X8, 0x66F000
	149 Move X8, [X8+3600]
	150 Move X0, X20
	151 Move X1, X31
	152 Move X8, [X8]
	153 Move [X21+48], X8
	154 Call Object.get_name, X0
	155 Move W8, [X21+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X21+56], X0
	159 Move X8, 0x66F000
	160 Move X8, [X8+3592]
	161 Move X0, X21
	162 Move X1, X31
	163 Move X8, [X8]
	164 Move [X21+64], X8
	165 Call String.Concat, X0
	166 Move X8, 0x60A000
	167 Move X8, [X8+2600]
	168 Move X19, X0
	169 Move X8, [X8]
	170 Move W9, [X8+224]
	171 Compare W9, 0
	172 JumpIfNotEqual {175}
	173 Move X0, X8
	174 Call 0x1C17DFC
	175 Move X0, X19
	176 Move X1, X20
	177 Move X20, [X31+48]
	178 Move X19, [X31+56]
	179 Move X22, [X31+32]
	180 Move X21, [X31+40]
	181 Move X24, [X31+16]
	182 Move X23, [X31+24]
	183 Move X2, X31
	184 Move X30, [X31+64]
	185 Move X25, [X31+72]
	186 Call Debug.LogWarning, X0, X1
	187 Return 
	188 Move X8, [X20]
	189 Move X0, X20
	190 Move X9, [X8+392]
	191 Move X1, [X8+400]
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move W1, [X19+264]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, [X20]
	196 Move X0, X20
	197 Move X9, [X8+424]
	198 Move X1, [X8+432]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move W2, [X19+268]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W1, [X19+264]
	203 Move W2, [X19+268]
	204 Move W3, 1
	205 Move X0, X20
	206 Move W4, W31
	207 Move X5, X31
	208 Call Texture2D.Resize, X0, X1, X2, X3, X4
	209 Move X8, 0x66F000
	210 Move X8, [X8+3008]
	211 Move X0, [X8]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X20
	217 Move X1, X31
	218 Call FontEngine.ResetAtlasTexture, X0
	219 Move X0, X20
	220 Move X20, [X31+48]
	221 Move X19, [X31+56]
	222 Move X22, [X31+32]
	223 Move X21, [X31+40]
	224 Move X24, [X31+16]
	225 Move X23, [X31+24]
	226 Move X1, X31
	227 Move X30, [X31+64]
	228 Move X25, [X31+72]
	229 Call Texture2D.Apply, X0
	230 Return 
	231 Call 0x1C17F28

Method: System.Void UpgradeFontAsset()

Disassembly:
	0x03AE348C LDR X0, [X8]
	0x03AE3490 BL 0x1C16F10
	0x03AE3494 ADRP X8, 0x616000
	0x03AE3498 LDR X8, [X8 + 0x1E0]
	0x03AE349C MOV X20, X0
	0x03AE34A0 LDR X1, [X8]
	0x03AE34A4 BL 0x30C0EA0
	0x03AE34A8 STR X20, [X19 + 0x1E0]
	0x03AE34AC LDR X0, [X19 + 0xB0]
	0x03AE34B0 CBZ X0, 0x3AE35A4
	0x03AE34B4 LDR W23, [X0 + 0x18]
	0x03AE34B8 CMP W23, 0x1
	0x03AE34BC B.LT 0x3AE35A8
	0x03AE34C0 ADRP X24, 0x675000
	0x03AE34C4 ADRP X25, 0x675000
	0x03AE34C8 ADRP X26, 0x675000
	0x03AE34CC ADRP X27, 0x616000
	0x03AE34D0 LDR X24, [X24 + 0xCC8]
	0x03AE34D4 LDR X25, [X25 + 0xCA8]
	0x03AE34D8 LDR X26, [X26 + 0xC98]
	0x03AE34DC LDR X27, [X27 + 0x1D0]
	0x03AE34E0 MOV W20, W31
	0x03AE34E4 LDR X2, [X24]
	0x03AE34E8 MOV W1, W20
	0x03AE34EC BL 0x301BCCC
	0x03AE34F0 CBZ X0, 0x3AE35A4
	0x03AE34F4 MOV X1, X31
	0x03AE34F8 MOV X22, X0
	0x03AE34FC BL 0x3C9C494
	0x03AE3500 LDR X8, [X19 + 0xB8]
	0x03AE3504 CBZ X8, 0x3AE35A4
	0x03AE3508 LDR X2, [X25]
	0x03AE350C MOV W21, W0
	0x03AE3510 MOV X0, X8
	0x03AE3514 MOV W1, W21
	0x03AE3518 BL 0x2B0F250
	0x03AE351C TBNZ X0, 0x0, 0x3AE3590
	0x03AE3520 LDR X0, [X19 + 0xB8]
	0x03AE3524 CBZ X0, 0x3AE35A4
	0x03AE3528 LDR X3, [X26]
	0x03AE352C MOV W1, W21
	0x03AE3530 MOV X2, X22
	0x03AE3534 BL 0x2B0F05C
	0x03AE3538 LDR X0, [X19 + 0x1D8]
	0x03AE353C CBZ X0, 0x3AE35A4
	0x03AE3540 LDR W10, [X0 + 0x1C]
	0x03AE3544 LDR X8, [X0 + 0x10]
	0x03AE3548 LDR X9, [X27]
	0x03AE354C ADD W10, W10, 0x1
	0x03AE3550 STR W10, [X0 + 0x1C]
	0x03AE3554 CBZ X8, 0x3AE35A4
	0x03AE3558 LDRSW X10, [X0 + 0x18]
	0x03AE355C LDR W11, [X8 + 0x18]
	0x03AE3560 CMP W10, W11
	0x03AE3564 B.CS 0x3AE357C
	0x03AE3568 ADD W9, W10, 0x1
	0x03AE356C ADD X8, X8, X10, 0x2, LSL
	0x03AE3570 STR W9, [X0 + 0x18]
	0x03AE3574 STR W21, [X8 + 0x20]
	0x03AE3578 B 0x3AE3590
	0x03AE357C LDR X8, [X9 + 0x20]
	0x03AE3580 MOV W1, W21
	0x03AE3584 LDR X8, [X8 + 0xC0]
	0x03AE3588 LDR X2, [X8 + 0x70]
	0x03AE358C BL 0x30C1698
	0x03AE3590 ADD W20, W20, 0x1
	0x03AE3594 CMP W23, W20
	0x03AE3598 B.EQ 0x3AE35A8
	0x03AE359C LDR X0, [X19 + 0xB0]
	0x03AE35A0 CBNZ X0, 0x3AE34E4
	0x03AE35A4 BL 0x1C16F20
	0x03AE35A8 LDP X20, X19, [X31 + 0x40]
	0x03AE35AC LDP X22, X21, [X31 + 0x30]
	0x03AE35B0 LDP X24, X23, [X31 + 0x20]
	0x03AE35B4 LDP X26, X25, [X31 + 0x10]
	0x03AE35B8 LDP X30, X27, [X31], #0x50
	0x03AE35BC RET
	0x03AE35C0 STR X30, [X31 - 0x60]!
	0x03AE35C4 STP X28, X27, [X31 + 0x10]
	0x03AE35C8 STP X26, X25, [X31 + 0x20]
	0x03AE35CC STP X24, X23, [X31 + 0x30]
	0x03AE35D0 STP X22, X21, [X31 + 0x40]
	0x03AE35D4 STP X20, X19, [X31 + 0x50]
	0x03AE35D8 ADRP X20, 0x8FF000
	0x03AE35DC LDRB W8, [X20 + 0x593]
	0x03AE35E0 MOV X19, X0
	0x03AE35E4 TBNZ X8, 0x0, 0x3AE3674
	0x03AE35E8 ADRP X0, 0x675000
	0x03AE35EC LDR X0, [X0 + 0xCD0]
	0x03AE35F0 BL 0x1C16CF4
	0x03AE35F4 ADRP X0, 0x675000
	0x03AE35F8 LDR X0, [X0 + 0xCD8]
	0x03AE35FC BL 0x1C16CF4
	0x03AE3600 ADRP X0, 0x675000
	0x03AE3604 LDR X0, [X0 + 0xC88]
	0x03AE3608 BL 0x1C16CF4
	0x03AE360C ADRP X0, 0x675000
	0x03AE3610 LDR X0, [X0 + 0xCE0]
	0x03AE3614 BL 0x1C16CF4
	0x03AE3618 ADRP X0, 0x675000
	0x03AE361C LDR X0, [X0 + 0xC90]
	0x03AE3620 BL 0x1C16CF4
	0x03AE3624 ADRP X0, 0x675000
	0x03AE3628 LDR X0, [X0 + 0xCE8]
	0x03AE362C BL 0x1C16CF4
	0x03AE3630 ADRP X0, 0x617000
	0x03AE3634 LDR X0, [X0 + 0x678]
	0x03AE3638 BL 0x1C16CF4
	0x03AE363C ADRP X0, 0x617000
	0x03AE3640 LDR X0, [X0 + 0x688]
	0x03AE3644 BL 0x1C16CF4
	0x03AE3648 ADRP X0, 0x611000
	0x03AE364C LDR X0, [X0 + 0xE08]
	0x03AE3650 BL 0x1C16CF4
	0x03AE3654 ADRP X0, 0x675000
	0x03AE3658 LDR X0, [X0 + 0xCF0]
	0x03AE365C BL 0x1C16CF4
	0x03AE3660 ADRP X0, 0x675000
	0x03AE3664 LDR X0, [X0 + 0xCF8]
	0x03AE3668 BL 0x1C16CF4
	0x03AE366C MOVZ W8, 0x1
	0x03AE3670 STRB W8, [X20 + 0x593]
	0x03AE3674 LDR X0, [X19 + 0xC8]
	0x03AE3678 CBZ X0, 0x3AE3690
	0x03AE367C ADRP X8, 0x675000
	0x03AE3680 LDR X8, [X8 + 0xCD8]
	0x03AE3684 LDR X1, [X8]
	0x03AE3688 BL 0x2B0F1E4
	0x03AE368C B 0x3AE36B8
	0x03AE3690 ADRP X8, 0x675000
	0x03AE3694 LDR X8, [X8 + 0xCE8]
	0x03AE3698 LDR X0, [X8]
	0x03AE369C BL 0x1C16F10
	0x03AE36A0 ADRP X8, 0x675000
	0x03AE36A4 LDR X8, [X8 + 0xCE0]
	0x03AE36A8 MOV X20, X0
	0x03AE36AC LDR X1, [X8]
	0x03AE36B0 BL 0x2B0E7A4
	0x03AE36B4 STR X20, [X19 + 0xC8]
	0x03AE36B8 LDR X0, [X19 + 0xC0]
	0x03AE36BC CBZ X0, 0x3AE376C
	0x03AE36C0 ADRP X25, 0x675000
	0x03AE36C4 ADRP X26, 0x675000
	0x03AE36C8 ADRP X27, 0x675000
	0x03AE36CC ADRP X28, 0x675000
	0x03AE36D0 ADRP X24, 0x617000
	0x03AE36D4 LDR X25, [X25 + 0xCF8]
	0x03AE36D8 LDR X26, [X26 + 0xC88]
	0x03AE36DC LDR X27, [X27 + 0xCD0]
	0x03AE36E0 LDR X28, [X28 + 0xC90]
	0x03AE36E4 LDR X24, [X24 + 0x678]
	0x03AE36E8 MOV W20, W31
	0x03AE36EC LDR W8, [X0 + 0x18]
	0x03AE36F0 CMP W20, W8
	0x03AE36F4 B.GE 0x3AE3770
	0x03AE36F8 LDR X2, [X25]
	0x03AE36FC MOV W1, W20
	0x03AE3700 BL 0x301BCCC
	0x03AE3704 CBZ X0, 0x3AE376C
	0x03AE3708 MOV X21, X0
	0x03AE370C LDR X0, [X19 + 0xC8]
	0x03AE3710 CBZ X0, 0x3AE376C
	0x03AE3714 LDR W23, [X21 + 0x14]
	0x03AE3718 LDR X2, [X26]
	0x03AE371C LDR W22, [X21 + 0x28]
	0x03AE3720 MOV W1, W23
	0x03AE3724 BL 0x2B0F250
	0x03AE3728 TBNZ X0, 0x0, 0x3AE3760
	0x03AE372C LDR X0, [X19 + 0xC8]
	0x03AE3730 CBZ X0, 0x3AE376C
	0x03AE3734 LDR X3, [X27]
	0x03AE3738 MOV W1, W23
	0x03AE373C MOV X2, X21
	0x03AE3740 BL 0x2B0F05C
	0x03AE3744 STR X19, [X21 + 0x18]
	0x03AE3748 LDR X0, [X19 + 0xB8]
	0x03AE374C CBZ X0, 0x3AE376C
	0x03AE3750 LDR X2, [X28]
	0x03AE3754 MOV W1, W22
	0x03AE3758 BL 0x2B0EFBC
	0x03AE375C STR X0, [X21 + 0x20]
	0x03AE3760 LDR X0, [X19 + 0xC0]
	0x03AE3764 ADD W20, W20, 0x1
	0x03AE3768 CBNZ X0, 0x3AE36EC
	0x03AE376C BL 0x1C16F20
	0x03AE3770 LDR X0, [X19 + 0x1C0]
	0x03AE3774 CBZ X0, 0x3AE3798
	0x03AE3778 LDR X1, [X24]
	0x03AE377C LDP X20, X19, [X31 + 0x50]
	0x03AE3780 LDP X22, X21, [X31 + 0x40]
	0x03AE3784 LDP X24, X23, [X31 + 0x30]
	0x03AE3788 LDP X26, X25, [X31 + 0x20]
	0x03AE378C LDP X28, X27, [X31 + 0x10]
	0x03AE3790 LDR X30, [X31], #0x60
	0x03AE3794 B 0x2DAA53C
	0x03AE3798 ADRP X8, 0x611000
	0x03AE379C LDR X8, [X8 + 0xE08]
	0x03AE37A0 LDR X0, [X8]
	0x03AE37A4 BL 0x1C16F10
	0x03AE37A8 ADRP X8, 0x617000
	0x03AE37AC LDR X8, [X8 + 0x688]
	0x03AE37B0 MOV X20, X0
	0x03AE37B4 LDR X1, [X8]
	0x03AE37B8 BL 0x2DA9EF4
	0x03AE37BC STR X20, [X19 + 0x1C0]
	0x03AE37C0 LDP X20, X19, [X31 + 0x50]
	0x03AE37C4 LDP X22, X21, [X31 + 0x40]
	0x03AE37C8 LDP X24, X23, [X31 + 0x30]
	0x03AE37CC LDP X26, X25, [X31 + 0x20]
	0x03AE37D0 LDP X28, X27, [X31 + 0x10]
	0x03AE37D4 LDR X30, [X31], #0x60
	0x03AE37D8 RET
	0x03AE37DC STR X30, [X31 - 0x50]!
	0x03AE37E0 STP X26, X25, [X31 + 0x10]
	0x03AE37E4 STP X24, X23, [X31 + 0x20]
	0x03AE37E8 STP X22, X21, [X31 + 0x30]
	0x03AE37EC STP X20, X19, [X31 + 0x40]
	0x03AE37F0 ADRP X20, 0x8FF000
	0x03AE37F4 LDRB W8, [X20 + 0x594]
	0x03AE37F8 MOV X19, X0
	0x03AE37FC TBNZ X8, 0x0, 0x3AE3868
	0x03AE3800 ADRP X0, 0x675000
	0x03AE3804 LDR X0, [X0 + 0xD00]
	0x03AE3808 BL 0x1C16CF4
	0x03AE380C ADRP X0, 0x675000
	0x03AE3810 LDR X0, [X0 + 0xD08]
	0x03AE3814 BL 0x1C16CF4
	0x03AE3818 ADRP X0, 0x675000
	0x03AE381C LDR X0, [X0 + 0xD10]
	0x03AE3820 BL 0x1C16CF4
	0x03AE3824 ADRP X0, 0x675000
	0x03AE3828 LDR X0, [X0 + 0xD18]
	0x03AE382C BL 0x1C16CF4
	0x03AE3830 ADRP X0, 0x675000
	0x03AE3834 LDR X0, [X0 + 0xD20]
	0x03AE3838 BL 0x1C16CF4
	0x03AE383C ADRP X0, 0x675000
	0x03AE3840 LDR X0, [X0 + 0xD28]
	0x03AE3844 BL 0x1C16CF4
	0x03AE3848 ADRP X0, 0x675000
	0x03AE384C LDR X0, [X0 + 0xD30]
	0x03AE3850 BL 0x1C16CF4
	0x03AE3854 ADRP X0, 0x675000
	0x03AE3858 LDR X0, [X0 + 0xD38]
	0x03AE385C BL 0x1C16CF4
	0x03AE3860 MOVZ W8, 0x1
	0x03AE3864 STRB W8, [X20 + 0x594]
	0x03AE3868 LDR X8, [X19 + 0x120]
	0x03AE386C CBZ X8, 0x3AE388C
	0x03AE3870 LDR X8, [X8 + 0x10]
	0x03AE3874 CBZ X8, 0x3AE388C
	0x03AE3878 LDR W8, [X8 + 0x18]
	0x03AE387C CMP W8, 0x1
	0x03AE3880 B.LT 0x3AE388C
	0x03AE3884 MOV X0, X19
	0x03AE3888 BL 0x3AE39A0
	0x03AE388C LDR X21, [X19 + 0x128]
	0x03AE3890 CBZ X21, 0x3AE399C
	0x03AE3894 LDR X0, [X21 + 0x18]
	0x03AE3898 CBZ X0, 0x3AE38B0
	0x03AE389C ADRP X8, 0x675000
	0x03AE38A0 LDR X8, [X8 + 0xD08]
	0x03AE38A4 LDR X1, [X8]
	0x03AE38A8 BL 0x2B0F1E4
	0x03AE38AC B 0x3AE38D8
	0x03AE38B0 ADRP X8, 0x675000
	0x03AE38B4 LDR X8, [X8 + 0xD20]
	0x03AE38B8 LDR X0, [X8]
	0x03AE38BC BL 0x1C16F10
	0x03AE38C0 ADRP X8, 0x675000
	0x03AE38C4 LDR X8, [X8 + 0xD18]
	0x03AE38C8 MOV X20, X0
	0x03AE38CC LDR X1, [X8]
	0x03AE38D0 BL 0x2B0E7A4
	0x03AE38D4 STR X20, [X21 + 0x18]
	0x03AE38D8 LDR X8, [X19 + 0x128]
	0x03AE38DC CBZ X8, 0x3AE399C
	0x03AE38E0 LDR X20, [X8 + 0x10]
	0x03AE38E4 CBZ X20, 0x3AE3984
	0x03AE38E8 LDR W8, [X20 + 0x18]
	0x03AE38EC CMP W8, 0x1
	0x03AE38F0 B.LT 0x3AE3984
	0x03AE38F4 ADRP X24, 0x675000
	0x03AE38F8 ADRP X25, 0x675000
	0x03AE38FC ADRP X26, 0x675000
	0x03AE3900 LDR X24, [X24 + 0xD38]
	0x03AE3904 LDR X25, [X25 + 0xD10]
	0x03AE3908 LDR X26, [X26 + 0xD00]
	0x03AE390C MOV W21, W31
	0x03AE3910 LDR X2, [X24]
	0x03AE3914 MOV X0, X20
	0x03AE3918 MOV W1, W21
	0x03AE391C BL 0x301BCCC
	0x03AE3920 CBZ X0, 0x3AE399C
	0x03AE3924 LDR X8, [X19 + 0x128]
	0x03AE3928 CBZ X8, 0x3AE399C
	0x03AE392C MOV X22, X0
	0x03AE3930 LDR X0, [X8 + 0x18]
	0x03AE3934 CBZ X0, 0x3AE399C
	0x03AE3938 LDR W8, [X22 + 0x10]
	0x03AE393C LDR W9, [X22 + 0x24]
	0x03AE3940 LDR X2, [X25]
	0x03AE3944 ORR W23, W8, W9, 0x10
	0x03AE3948 MOV W1, W23
	0x03AE394C BL 0x2B0F250
	0x03AE3950 TBNZ X0, 0x0, 0x3AE3974
	0x03AE3954 LDR X8, [X19 + 0x128]
	0x03AE3958 CBZ X8, 0x3AE399C
	0x03AE395C LDR X0, [X8 + 0x18]
	0x03AE3960 CBZ X0, 0x3AE399C
	0x03AE3964 LDR X3, [X26]
	0x03AE3968 MOV W1, W23
	0x03AE396C MOV X2, X22
	0x03AE3970 BL 0x2B0F05C
	0x03AE3974 LDR W8, [X20 + 0x18]
	0x03AE3978 ADD W21, W21, 0x1
	0x03AE397C CMP W21, W8
	0x03AE3980 B.LT 0x3AE3910
	0x03AE3984 LDP X20, X19, [X31 + 0x40]
	0x03AE3988 LDP X22, X21, [X31 + 0x30]
	0x03AE398C LDP X24, X23, [X31 + 0x20]
	0x03AE3990 LDP X26, X25, [X31 + 0x10]
	0x03AE3994 LDR X30, [X31], #0x50
	0x03AE3998 RET
	0x03AE399C BL 0x1C16F20
	0x03AE39A0 SUB X31, X31, 0x90
	0x03AE39A4 STR X30, [X31 + 0x30]
	0x03AE39A8 STP X28, X27, [X31 + 0x40]
	0x03AE39AC STP X26, X25, [X31 + 0x50]
	0x03AE39B0 STP X24, X23, [X31 + 0x60]
	0x03AE39B4 STP X22, X21, [X31 + 0x70]
	0x03AE39B8 STP X20, X19, [X31 + 0x80]
	0x03AE39BC ADRP X23, 0x8FF000
	0x03AE39C0 ADRP X21, 0x675000
	0x03AE39C4 ADRP X22, 0x675000
	0x03AE39C8 ADRP X20, 0x610000
	0x03AE39CC LDRB W8, [X23 + 0x5B4]
	0x03AE39D0 LDR X21, [X21 + 0xC68]
	0x03AE39D4 LDR X22, [X22 + 0xD40]
	0x03AE39D8 LDR X20, [X20 + 0xA28]
	0x03AE39DC MOV X19, X0
	0x03AE39E0 TBNZ X8, 0x0, 0x3AE3A70
	0x03AE39E4 ADRP X0, 0x610000
	0x03AE39E8 LDR X0, [X0 + 0xA28]
	0x03AE39EC BL 0x1C16CF4
	0x03AE39F0 ADRP X0, 0x675000
	0x03AE39F4 LDR X0, [X0 + 0xD48]
	0x03AE39F8 BL 0x1C16CF4
	0x03AE39FC ADRP X0, 0x675000
	0x03AE3A00 LDR X0, [X0 + 0xD50]
	0x03AE3A04 BL 0x1C16CF4
	0x03AE3A08 ADRP X0, 0x675000
	0x03AE3A0C LDR X0, [X0 + 0xD58]
	0x03AE3A10 BL 0x1C16CF4
	0x03AE3A14 ADRP X0, 0x675000
	0x03AE3A18 LDR X0, [X0 + 0xD28]
	0x03AE3A1C BL 0x1C16CF4
	0x03AE3A20 ADRP X0, 0x675000
	0x03AE3A24 LDR X0, [X0 + 0xD60]
	0x03AE3A28 BL 0x1C16CF4
	0x03AE3A2C ADRP X0, 0x675000
	0x03AE3A30 LDR X0, [X0 + 0xD68]
	0x03AE3A34 BL 0x1C16CF4
	0x03AE3A38 ADRP X0, 0x675000
	0x03AE3A3C LDR X0, [X0 + 0xD70]
	0x03AE3A40 BL 0x1C16CF4
	0x03AE3A44 ADRP X0, 0x675000
	0x03AE3A48 LDR X0, [X0 + 0xD78]
	0x03AE3A4C BL 0x1C16CF4
	0x03AE3A50 ADRP X0, 0x675000
	0x03AE3A54 LDR X0, [X0 + 0xC68]
	0x03AE3A58 BL 0x1C16CF4
	0x03AE3A5C ADRP X0, 0x675000
	0x03AE3A60 LDR X0, [X0 + 0xD40]
	0x03AE3A64 BL 0x1C16CF4
	0x03AE3A68 MOVZ W8, 0x1
	0x03AE3A6C STRB W8, [X23 + 0x5B4]
	0x03AE3A70 MOV X0, X19
	0x03AE3A74 MOV X1, X31
	0x03AE3A78 STR X31, [X31 + 0x38]
	0x03AE3A7C STR X31, [X31 + 0x28]
	0x03AE3A80 BL 0x3C389D4
	0x03AE3A84 LDR X8, [X21]
	0x03AE3A88 LDR X2, [X22]
	0x03AE3A8C MOV X1, X0
	0x03AE3A90 MOV X3, X31
	0x03AE3A94 MOV X0, X8
	0x03AE3A98 BL 0x32274B8
	0x03AE3A9C LDR X8, [X20]
	0x03AE3AA0 MOV X20, X0
	0x03AE3AA4 LDR W9, [X8 + 0xE0]
	0x03AE3AA8 CBNZ W9, 0x3AE3AB4
	0x03AE3AAC MOV X0, X8
	0x03AE3AB0 BL 0x1C16DFC
	0x03AE3AB4 MOV X0, X20
	0x03AE3AB8 MOV X1, X19
	0x03AE3ABC MOV X2, X31
	0x03AE3AC0 BL 0x3C06150
	0x03AE3AC4 LDR X20, [X19 + 0x128]
	0x03AE3AC8 CBNZ X20, 0x3AE3AE8
	0x03AE3ACC ADRP X8, 0x675000
	0x03AE3AD0 LDR X8, [X8 + 0xD70]
	0x03AE3AD4 LDR X0, [X8]
	0x03AE3AD8 BL 0x1C16F10
	0x03AE3ADC MOV X20, X0
	0x03AE3AE0 BL 0x3AE8D58
	0x03AE3AE4 STR X20, [X19 + 0x128]
	0x03AE3AE8 LDR X8, [X19 + 0x120]
	0x03AE3AEC CBZ X8, 0x3AE3C88
	0x03AE3AF0 LDR X8, [X8 + 0x10]
	0x03AE3AF4 CBZ X8, 0x3AE3C88
	0x03AE3AF8 ADRP X9, 0x675000
	0x03AE3AFC LDR X9, [X9 + 0xD68]
	0x03AE3B00 ADRP X22, 0x675000
	0x03AE3B04 LDR W21, [X8 + 0x18]
	0x03AE3B08 LDR X0, [X9]
	0x03AE3B0C LDR X22, [X22 + 0xD58]
	0x03AE3B10 BL 0x1C16F10
	0x03AE3B14 LDR X2, [X22]
	0x03AE3B18 MOV W1, W21
	0x03AE3B1C MOV X22, X0
	0x03AE3B20 BL 0x301B830
	0x03AE3B24 CBZ X20, 0x3AE3C88
	0x03AE3B28 STR X22, [X20 + 0x10]
	0x03AE3B2C LDR X8, [X19 + 0x120]
	0x03AE3B30 CBZ X8, 0x3AE3C88
	0x03AE3B34 ADRP X22, 0x675000
	0x03AE3B38 ADRP X23, 0x675000
	0x03AE3B3C ADRP X24, 0x675000
	0x03AE3B40 ADRP X25, 0x675000
	0x03AE3B44 LDR X22, [X22 + 0xD60]
	0x03AE3B48 LDR X23, [X23 + 0xD48]
	0x03AE3B4C LDR X24, [X24 + 0xD78]
	0x03AE3B50 LDR X25, [X25 + 0xD50]
	0x03AE3B54 MOV W20, W31
	0x03AE3B58 BIC W26, W21, W21, 0x1F
	0x03AE3B5C CMP W26, W20
	0x03AE3B60 B.EQ 0x3AE3C8C
	0x03AE3B64 LDR X0, [X8 + 0x10]
	0x03AE3B68 CBZ X0, 0x3AE3C88
	0x03AE3B6C LDR X2, [X22]
	0x03AE3B70 MOV W1, W20
	0x03AE3B74 BL 0x301BCCC
	0x03AE3B78 CBZ X0, 0x3AE3C88
	0x03AE3B7C MOV X21, X0
	0x03AE3B80 LDR X0, [X19 + 0xC8]
	0x03AE3B84 CBZ X0, 0x3AE3C88
	0x03AE3B88 LDR W1, [X21 + 0x10]
	0x03AE3B8C LDR X3, [X23]
	0x03AE3B90 ADD X2, X31, 0x38
	0x03AE3B94 BL 0x2B10A7C
	0x03AE3B98 TBZ X0, 0x0, 0x3AE3BAC
	0x03AE3B9C LDR X8, [X31 + 0x38]
	0x03AE3BA0 CBZ X8, 0x3AE3C88
	0x03AE3BA4 LDR W27, [X8 + 0x28]
	0x03AE3BA8 B 0x3AE3BB0
	0x03AE3BAC MOV W27, W31
	0x03AE3BB0 LDR X0, [X19 + 0xC8]
	0x03AE3BB4 CBZ X0, 0x3AE3C88
	0x03AE3BB8 LDR W1, [X21 + 0x24]
	0x03AE3BBC LDR X3, [X23]
	0x03AE3BC0 ADD X2, X31, 0x28
	0x03AE3BC4 BL 0x2B10A7C
	0x03AE3BC8 TBZ X0, 0x0, 0x3AE3BDC
	0x03AE3BCC LDR X8, [X31 + 0x28]
	0x03AE3BD0 CBZ X8, 0x3AE3C88
	0x03AE3BD4 LDR W28, [X8 + 0x28]
	0x03AE3BD8 B 0x3AE3BE0
	0x03AE3BDC MOV W28, W31
	0x03AE3BE0 LDUR V1, [X21 + 0x14]
	0x03AE3BE4 LDUR V0, [X21 + 0x28]
	0x03AE3BE8 LDR X0, [X24]
	0x03AE3BEC STP V1, V0, [X31]
	0x03AE3BF0 BL 0x1C16F10
	0x03AE3BF4 MOV X1, X31
	0x03AE3BF8 MOV X21, X0
	0x03AE3BFC BL 0x33BDD8C
	0x03AE3C00 LDR V0, [X31]
	0x03AE3C04 STR W27, [X21 + 0x10]
	0x03AE3C08 STR W28, [X21 + 0x24]
	0x03AE3C0C STR W31, [X21 + 0x38]
	0x03AE3C10 STUR V0, [X21 + 0x14]
	0x03AE3C14 LDR V0, [X31 + 0x1]
	0x03AE3C18 STUR V0, [X21 + 0x28]
	0x03AE3C1C LDR X8, [X19 + 0x128]
	0x03AE3C20 CBZ X8, 0x3AE3C88
	0x03AE3C24 LDR X0, [X8 + 0x10]
	0x03AE3C28 CBZ X0, 0x3AE3C88
	0x03AE3C2C LDR W10, [X0 + 0x1C]
	0x03AE3C30 LDR X8, [X0 + 0x10]
	0x03AE3C34 LDR X9, [X25]
	0x03AE3C38 ADD W10, W10, 0x1
	0x03AE3C3C STR W10, [X0 + 0x1C]
	0x03AE3C40 CBZ X8, 0x3AE3C88
	0x03AE3C44 LDRSW X10, [X0 + 0x18]
	0x03AE3C48 LDR W11, [X8 + 0x18]
	0x03AE3C4C CMP W10, W11
	0x03AE3C50 B.CS 0x3AE3C68
	0x03AE3C54 ADD W9, W10, 0x1
	0x03AE3C58 ADD X8, X8, X10, 0x3, LSL
	0x03AE3C5C STR W9, [X0 + 0x18]
	0x03AE3C60 STR X21, [X8 + 0x20]
	0x03AE3C64 B 0x3AE3C7C
	0x03AE3C68 LDR X8, [X9 + 0x20]
	0x03AE3C6C MOV X1, X21
	0x03AE3C70 LDR X8, [X8 + 0xC0]
	0x03AE3C74 LDR X2, [X8 + 0x70]
	0x03AE3C78 BL 0x301BF90
	0x03AE3C7C LDR X8, [X19 + 0x120]
	0x03AE3C80 ADD W20, W20, 0x1
	0x03AE3C84 CBNZ X8, 0x3AE3B5C
	0x03AE3C88 BL 0x1C16F20
	0x03AE3C8C STR X31, [X8 + 0x10]
	0x03AE3C90 STR X31, [X19 + 0x120]
	0x03AE3C94 LDP X20, X19, [X31 + 0x80]
	0x03AE3C98 LDP X22, X21, [X31 + 0x70]
	0x03AE3C9C LDP X24, X23, [X31 + 0x60]
	0x03AE3CA0 LDP X26, X25, [X31 + 0x50]
	0x03AE3CA4 LDP X28, X27, [X31 + 0x40]
	0x03AE3CA8 LDR X30, [X31 + 0x30]
	0x03AE3CAC ADD X31, X31, 0x90
	0x03AE3CB0 RET
	0x03AE3CB4 STR X30, [X31 - 0x10]!
	0x03AE3CB8 CBZ X1, 0x3AE3CD8
	0x03AE3CBC LDR W8, [X1 + 0x10]
	0x03AE3CC0 STR W8, [X0]
	0x03AE3CC4 LDR W9, [X1 + 0x24]
	0x03AE3CC8 ORR W8, W8, W9, 0x10
	0x03AE3CCC STP W9, W8, [X0 + 0x4]
	0x03AE3CD0 LDR X30, [X31], #0x10
	0x03AE3CD4 RET
	0x03AE3CD8 BL 0x1C16F20
	0x03AE3CDC SUB X31, X31, 0x70
	0x03AE3CE0 STP X30, X23, [X31 + 0x40]
	0x03AE3CE4 STP X22, X21, [X31 + 0x50]
	0x03AE3CE8 STP X20, X19, [X31 + 0x60]
	0x03AE3CEC ADRP X23, 0x8FF000
	0x03AE3CF0 LDRB W8, [X23 + 0x596]
	0x03AE3CF4 MOV W21, W3
	0x03AE3CF8 MOV W22, W2
	0x03AE3CFC MOV W19, W1
	0x03AE3D00 MOV X20, X0
	0x03AE3D04 TBNZ X8, 0x0, 0x3AE3D58
	0x03AE3D08 ADRP X0, 0x675000
	0x03AE3D0C LDR X0, [X0 + 0xCD0]
	0x03AE3D10 BL 0x1C16CF4
	0x03AE3D14 ADRP X0, 0x675000
	0x03AE3D18 LDR X0, [X0 + 0xC88]
	0x03AE3D1C BL 0x1C16CF4
	0x03AE3D20 ADRP X0, 0x675000
	0x03AE3D24 LDR X0, [X0 + 0xBC0]
	0x03AE3D28 BL 0x1C16CF4
	0x03AE3D2C ADRP X0, 0x638000
	0x03AE3D30 LDR X0, [X0 + 0x608]
	0x03AE3D34 BL 0x1C16CF4
	0x03AE3D38 ADRP X0, 0x675000
	0x03AE3D3C LDR X0, [X0 + 0xC08]
	0x03AE3D40 BL 0x1C16CF4
	0x03AE3D44 ADRP X0, 0x675000
	0x03AE3D48 LDR X0, [X0 + 0x5B0]
	0x03AE3D4C BL 0x1C16CF4
	0x03AE3D50 MOVZ W8, 0x1
	0x03AE3D54 STRB W8, [X23 + 0x596]
	0x03AE3D58 STR X31, [X31 + 0x38]
	0x03AE3D5C LDR X0, [X20 + 0xC8]
	0x03AE3D60 CBZ X0, 0x3AE3EF0
	0x03AE3D64 ADRP X8, 0x675000
	0x03AE3D68 LDR X8, [X8 + 0xC88]
	0x03AE3D6C MOV W1, W19
	0x03AE3D70 LDR X2, [X8]
	0x03AE3D74 BL 0x2B0F250
	0x03AE3D78 TBNZ X0, 0x0, 0x3AE3EDC
	0x03AE3D7C TBZ X22, 0x0, 0x3AE3DFC
	0x03AE3D80 ADRP X22, 0x675000
	0x03AE3D84 LDR X22, [X22 + 0xBC0]
	0x03AE3D88 LDR X0, [X22]
	0x03AE3D8C LDR W8, [X0 + 0xE0]
	0x03AE3D90 CBNZ W8, 0x3AE3D98
	0x03AE3D94 BL 0x1C16DFC
	0x03AE3D98 MOV W0, W19
	0x03AE3D9C MOV X1, X31
	0x03AE3DA0 BL 0x3C9CBD8
	0x03AE3DA4 CBZ W0, 0x3AE3DFC
	0x03AE3DA8 TBZ X21, 0x0, 0x3AE3EDC
	0x03AE3DAC LDR X0, [X22]
	0x03AE3DB0 LDRB W8, [X20 + 0x114]
	0x03AE3DB4 MOVZ W10, 0x8
	0x03AE3DB8 LDR W9, [X0 + 0xE0]
	0x03AE3DBC ANDS W31, W8, 0x4
	0x03AE3DC0 MOVZ W8, 0xA
	0x03AE3DC4 CSEL W21, W10, W8, EQ
	0x03AE3DC8 CBNZ W9, 0x3AE3DD0
	0x03AE3DCC BL 0x1C16DFC
	0x03AE3DD0 ADD X2, X31, 0x38
	0x03AE3DD4 MOV W0, W19
	0x03AE3DD8 MOV W1, W21
	0x03AE3DDC MOV X3, X31
	0x03AE3DE0 BL 0x3C9CC14
	0x03AE3DE4 TBZ X0, 0x0, 0x3AE3EDC
	0x03AE3DE8 ADRP X8, 0x675000
	0x03AE3DEC LDR X21, [X20 + 0xC8]
	0x03AE3DF0 LDR X23, [X31 + 0x38]
	0x03AE3DF4 LDR X8, [X8 + 0x5B0]
	0x03AE3DF8 B 0x3AE3EA0
	0x03AE3DFC ADD X0, X31, 0x20
	0x03AE3E00 FMOV S0, W31
	0x03AE3E04 FMOV S1, W31
	0x03AE3E08 FMOV S2, W31
	0x03AE3E0C FMOV S3, W31
	0x03AE3E10 FMOV S4, W31
	0x03AE3E14 MOV X1, X31
	0x03AE3E18 STP X31, X31, [X31 + 0x20]
	0x03AE3E1C STR W31, [X31 + 0x30]
	0x03AE3E20 BL 0x3C9C2F4
	0x03AE3E24 ADRP X8, 0x638000
	0x03AE3E28 LDR X8, [X8 + 0x608]
	0x03AE3E2C LDR X0, [X8]
	0x03AE3E30 LDR W8, [X0 + 0xE0]
	0x03AE3E34 CBNZ W8, 0x3AE3E3C
	0x03AE3E38 BL 0x1C16DFC
	0x03AE3E3C MOV X0, X31
	0x03AE3E40 BL 0x3C9C0B0
	0x03AE3E44 ADRP X8, 0x675000
	0x03AE3E48 LDR X8, [X8 + 0xC08]
	0x03AE3E4C MOV X21, X0
	0x03AE3E50 MOV X22, X1
	0x03AE3E54 LDR X0, [X8]
	0x03AE3E58 BL 0x1C16F10
	0x03AE3E5C LDR V0, [X31 + 0x2]
	0x03AE3E60 LDR W8, [X31 + 0x30]
	0x03AE3E64 ADD X2, X31, 0x0
	0x03AE3E68 MOV W1, W31
	0x03AE3E6C STR V0, [X31]
	0x03AE3E70 FMOV S0, 1
	0x03AE3E74 MOV X3, X21
	0x03AE3E78 MOV X4, X22
	0x03AE3E7C MOV W5, W31
	0x03AE3E80 MOV X6, X31
	0x03AE3E84 MOV X23, X0
	0x03AE3E88 STR W8, [X31 + 0x10]
	0x03AE3E8C BL 0x3C9C5B4
	0x03AE3E90 STR X23, [X31 + 0x38]
	0x03AE3E94 ADRP X8, 0x675000
	0x03AE3E98 LDR X8, [X8 + 0x5B0]
	0x03AE3E9C LDR X21, [X20 + 0xC8]
	0x03AE3EA0 LDR X0, [X8]
	0x03AE3EA4 BL 0x1C16F10
	0x03AE3EA8 MOV W1, W19
	0x03AE3EAC MOV X2, X20
	0x03AE3EB0 MOV X3, X23
	0x03AE3EB4 MOV X22, X0
	0x03AE3EB8 BL 0x3ADB950
	0x03AE3EBC CBZ X21, 0x3AE3EF0
	0x03AE3EC0 ADRP X8, 0x675000
	0x03AE3EC4 LDR X8, [X8 + 0xCD0]
	0x03AE3EC8 MOV X0, X21
	0x03AE3ECC MOV W1, W19
	0x03AE3ED0 MOV X2, X22
	0x03AE3ED4 LDR X3, [X8]
	0x03AE3ED8 BL 0x2B0F05C
	0x03AE3EDC LDP X20, X19, [X31 + 0x60]
	0x03AE3EE0 LDP X22, X21, [X31 + 0x50]
	0x03AE3EE4 LDP X30, X23, [X31 + 0x40]
	0x03AE3EE8 ADD X31, X31, 0x70
	0x03AE3EEC RET
	0x03AE3EF0 BL 0x1C16F20
	0x03AE3EF4 STR X30, [X31 - 0x30]!
	0x03AE3EF8 STP X22, X21, [X31 + 0x10]
	0x03AE3EFC STP X20, X19, [X31 + 0x20]
	0x03AE3F00 ADRP X22, 0x8FF000
	0x03AE3F04 LDRB W8, [X22 + 0x597]
	0x03AE3F08 MOV X20, X2
	0x03AE3F0C MOV W21, W1
	0x03AE3F10 MOV X19, X0
	0x03AE3F14 TBNZ X8, 0x0, 0x3AE3F38
	0x03AE3F18 ADRP X0, 0x675000
	0x03AE3F1C LDR X0, [X0 + 0xCD0]
	0x03AE3F20 BL 0x1C16CF4
	0x03AE3F24 ADRP X0, 0x612000
	0x03AE3F28 LDR X0, [X0 + 0x9D8]
	0x03AE3F2C BL 0x1C16CF4
	0x03AE3F30 MOVZ W8, 0x1
	0x03AE3F34 STRB W8, [X22 + 0x597]
	0x03AE3F38 LDR X0, [X19 + 0xC8]
	0x03AE3F3C CBZ X0, 0x3AE3FA8
	0x03AE3F40 ADRP X8, 0x675000
	0x03AE3F44 LDR X8, [X8 + 0xCD0]
	0x03AE3F48 MOV W1, W21
	0x03AE3F4C MOV X2, X20
	0x03AE3F50 LDR X3, [X8]
	0x03AE3F54 BL 0x2B0F05C
	0x03AE3F58 CBZ X20, 0x3AE3FA8
	0x03AE3F5C LDR X20, [X20 + 0x18]
	0x03AE3F60 CBZ X20, 0x3AE3FA8
	0x03AE3F64 LDR W1, [X20 + 0x18]
	0x03AE3F68 LDR X19, [X19 + 0x1C0]
	0x03AE3F6C CBNZ W1, 0x3AE3F84
	0x03AE3F70 MOV X0, X20
	0x03AE3F74 MOV X1, X31
	0x03AE3F78 BL 0x3C385F8
	0x03AE3F7C MOV W1, W0
	0x03AE3F80 STR W0, [X20 + 0x18]
	0x03AE3F84 CBZ X19, 0x3AE3FA8
	0x03AE3F88 ADRP X8, 0x612000
	0x03AE3F8C LDR X8, [X8 + 0x9D8]
	0x03AE3F90 MOV X0, X19
	0x03AE3F94 LDP X20, X19, [X31 + 0x20]
	0x03AE3F98 LDP X22, X21, [X31 + 0x10]
	0x03AE3F9C LDR X2, [X8]
	0x03AE3FA0 LDR X30, [X31], #0x30
	0x03AE3FA4 B 0x2DAB03C
	0x03AE3FA8 BL 0x1C16F20
	0x03AE3FAC STP X30, X23, [X31 - 0x30]!
	0x03AE3FB0 STP X22, X21, [X31 + 0x10]
	0x03AE3FB4 STP X20, X19, [X31 + 0x20]
	0x03AE3FB8 ADRP X20, 0x8FF000
	0x03AE3FBC LDRB W8, [X20 + 0x598]
	0x03AE3FC0 MOV X19, X0
	0x03AE3FC4 TBNZ X8, 0x0, 0x3AE4018
	0x03AE3FC8 ADRP X0, 0x675000
	0x03AE3FCC LDR X0, [X0 + 0xD80]
	0x03AE3FD0 BL 0x1C16CF4
	0x03AE3FD4 ADRP X0, 0x675000
	0x03AE3FD8 LDR X0, [X0 + 0xD88]
	0x03AE3FDC BL 0x1C16CF4
	0x03AE3FE0 ADRP X0, 0x675000
	0x03AE3FE4 LDR X0, [X0 + 0xD90]
	0x03AE3FE8 BL 0x1C16CF4
	0x03AE3FEC ADRP X0, 0x675000
	0x03AE3FF0 LDR X0, [X0 + 0xCF0]
	0x03AE3FF4 BL 0x1C16CF4
	0x03AE3FF8 ADRP X0, 0x675000
	0x03AE3FFC LDR X0, [X0 + 0xD98]
	0x03AE4000 BL 0x1C16CF4
	0x03AE4004 ADRP X0, 0x674000
	0x03AE4008 LDR X0, [X0 + 0xDA0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D8
	003 Move [X31+112], X29
	004 Move [X31+120], X30
	005 Move [X31+128], X28
	006 Move [X31+136], X27
	007 Move [X31+144], X26
	008 Move [X31+152], X25
	009 Move [X31+160], X24
	010 Move [X31+168], X23
	011 Move [X31+176], X22
	012 Move [X31+184], X21
	013 Move [X31+192], X20
	014 Move [X31+200], X19
	015 Move X21, 0x900000
	016 Move X22, 0x676000
	017 Move X20, 0x611000
	018 Move W8, [X21+1459]
	019 Move X22, [X22+3056]
	020 Move X20, [X20+2760]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {106}
	026 Move X0, 0x611000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0x639000
	030 Move X0, [X0+1544]
	031 Call 0x1C17CF4
	032 Move X0, 0x676000
	033 Move X0, [X0+3080]
	034 Call 0x1C17CF4
	035 Move X0, 0x676000
	036 Move X0, [X0+3088]
	037 Call 0x1C17CF4
	038 Move X0, 0x676000
	039 Move X0, [X0+3096]
	040 Call 0x1C17CF4
	041 Move X0, 0x676000
	042 Move X0, [X0+3104]
	043 Call 0x1C17CF4
	044 Move X0, 0x676000
	045 Move X0, [X0+3112]
	046 Call 0x1C17CF4
	047 Move X0, 0x676000
	048 Move X0, [X0+3120]
	049 Call 0x1C17CF4
	050 Move X0, 0x676000
	051 Move X0, [X0+3128]
	052 Call 0x1C17CF4
	053 Move X0, 0x676000
	054 Move X0, [X0+1552]
	055 Call 0x1C17CF4
	056 Move X0, 0x676000
	057 Move X0, [X0+3136]
	058 Call 0x1C17CF4
	059 Move X0, 0x676000
	060 Move X0, [X0+3144]
	061 Call 0x1C17CF4
	062 Move X0, 0x676000
	063 Move X0, [X0+3152]
	064 Call 0x1C17CF4
	065 Move X0, 0x676000
	066 Move X0, [X0+3160]
	067 Call 0x1C17CF4
	068 Move X0, 0x611000
	069 Move X0, [X0+2760]
	070 Call 0x1C17CF4
	071 Move X0, 0x613000
	072 Move X0, [X0+632]
	073 Call 0x1C17CF4
	074 Move X0, 0x676000
	075 Move X0, [X0+1456]
	076 Call 0x1C17CF4
	077 Move X0, 0x676000
	078 Move X0, [X0+3048]
	079 Call 0x1C17CF4
	080 Move X0, 0x676000
	081 Move X0, [X0+3168]
	082 Call 0x1C17CF4
	083 Move X0, 0x676000
	084 Move X0, [X0+3056]
	085 Call 0x1C17CF4
	086 Move X0, 0x676000
	087 Move X0, [X0+3176]
	088 Call 0x1C17CF4
	089 Move X0, 0x676000
	090 Move X0, [X0+3184]
	091 Call 0x1C17CF4
	092 Move X0, 0x676000
	093 Move X0, [X0+3192]
	094 Call 0x1C17CF4
	095 Move X0, 0x611000
	096 Move X0, [X0+2120]
	097 Call 0x1C17CF4
	098 Move X0, 0x61A000
	099 Move X0, [X0+1936]
	100 Call 0x1C17CF4
	101 Move X0, 0x676000
	102 Move X0, [X0+3200]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X21+1459], W8
	106 Move X8, [X22]
	107 Move W1, 5
	108 Move [X19+48], X8
	109 Move X0, [X20]
	110 Call 0x1C17D6C
	111 Compare X0, 0
	112 JumpIfEqual {631}
	113 Move W8, [X0+24]
	114 Move X20, X0
	115 Compare W8, 0
	116 JumpIfEqual {801}
	117 Move X8, 0x676000
	118 Move X8, [X8+3176]
	119 Move X0, X19
	120 Move X1, X31
	121 Move X8, [X8]
	122 Move [X20+32], X8
	123 Call Object.get_name, X0
	124 Move W8, [X20+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move [X20+40], X0
	128 Move X9, 0x676000
	129 Move X9, [X9+3184]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X9, [X9]
	132 Move [X20+48], X9
	133 Move X9, [X19+48]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move [X20+56], X9
	136 Move X8, 0x61A000
	137 Move X8, [X8+1936]
	138 Move X25, 0x611000
	139 Move X0, X20
	140 Move X1, X31
	141 Move X8, [X8]
	142 Move X25, [X25+2600]
	143 Move [X20+64], X8
	144 Call String.Concat, X0
	145 Move X8, [X25]
	146 Move X20, X0
	147 Move W9, [X8+224]
	148 Compare W9, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X8
	151 Call 0x1C17DFC
	152 Move X0, X20
	153 Move X1, X19
	154 Move X2, X31
	155 Call Debug.Log, X0, X1
	156 Move X8, [X19+248]
	157 Compare X8, 0
	158 JumpIfEqual {631}
	159 Move X1, [X8+16]
	160 Move X23, 0x613000
	161 Move X23, [X23+632]
	162 Add X26, X19, 80
	163 Move X0, X26
	164 Move X2, X31
	165 Call FaceInfo.set_familyName, X0, X1
	166 Move X8, [X23]
	167 Move X0, X26
	168 Move X2, X31
	169 Move X8, [X8+184]
	170 Move X1, [X8]
	171 Call FaceInfo.set_styleName, X0, X1
	172 Move X8, [X19+248]
	173 Compare X8, 0
	174 JumpIfEqual {631}
	175 Move V0, [X8+24]
	176 Move W8, 0x7F800000
	177 Move S1, W8
	178 Move W9, 0x80000000
	179 NotImplemented "Instruction FCVTZS not yet implemented."
	180 NotImplemented "Instruction FCMP not yet implemented."
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 Move X0, X26
	183 Move X2, X31
	184 Call FaceInfo.set_pointSize, X0, X1
	185 Move X8, [X19+248]
	186 Compare X8, 0
	187 JumpIfEqual {631}
	188 Move V0, [X8+28]
	189 Move X0, X26
	190 Move X1, X31
	191 Call FaceInfo.set_scale, X0, V0
	192 Move X8, [X19+248]
	193 Compare X8, 0
	194 JumpIfEqual {631}
	195 Move V0, [X8+36]
	196 Move X0, X26
	197 Move X1, X31
	198 Call FaceInfo.set_lineHeight, X0, V0
	199 Move X8, [X19+248]
	200 Compare X8, 0
	201 JumpIfEqual {631}
	202 Move V0, [X8+44]
	203 Move X0, X26
	204 Move X1, X31
	205 Call FaceInfo.set_ascentLine, X0, V0
	206 Move X8, [X19+248]
	207 Compare X8, 0
	208 JumpIfEqual {631}
	209 Move V0, [X8+48]
	210 Move X0, X26
	211 Move X1, X31
	212 Call FaceInfo.set_capLine, X0, V0
	213 Move X8, [X19+248]
	214 Compare X8, 0
	215 JumpIfEqual {631}
	216 Move V0, [X8+56]
	217 Move X0, X26
	218 Move X1, X31
	219 Call FaceInfo.set_meanLine, X0, V0
	220 Move X8, [X19+248]
	221 Compare X8, 0
	222 JumpIfEqual {631}
	223 Move V0, [X8+40]
	224 Move X0, X26
	225 Move X1, X31
	226 Call FaceInfo.set_baseline, X0, V0
	227 Move X8, [X19+248]
	228 Compare X8, 0
	229 JumpIfEqual {631}
	230 Move V0, [X8+52]
	231 Move X0, X26
	232 Move X1, X31
	233 Call FaceInfo.set_descentLine, X0, V0
	234 Move X8, [X19+248]
	235 Compare X8, 0
	236 JumpIfEqual {631}
	237 Move V0, [X8+60]
	238 Move X0, X26
	239 Move X1, X31
	240 Call FaceInfo.set_superscriptOffset, X0, V0
	241 Move X8, [X19+248]
	242 Compare X8, 0
	243 JumpIfEqual {631}
	244 Move V0, [X8+68]
	245 Move X0, X26
	246 Move X1, X31
	247 Call FaceInfo.set_superscriptSize, X0, V0
	248 Move X8, [X19+248]
	249 Compare X8, 0
	250 JumpIfEqual {631}
	251 Move V0, [X8+64]
	252 Move X0, X26
	253 Move X1, X31
	254 Call FaceInfo.set_subscriptOffset, X0, V0
	255 Move X8, [X19+248]
	256 Compare X8, 0
	257 JumpIfEqual {631}
	258 Move V0, [X8+68]
	259 Move X0, X26
	260 Move X1, X31
	261 Call FaceInfo.set_subscriptSize, X0, V0
	262 Move X8, [X19+248]
	263 Compare X8, 0
	264 JumpIfEqual {631}
	265 Move V0, [X8+72]
	266 Move X0, X26
	267 Move X1, X31
	268 Call FaceInfo.set_underlineOffset, X0, V0
	269 Move X8, [X19+248]
	270 Compare X8, 0
	271 JumpIfEqual {631}
	272 Move V0, [X8+76]
	273 Move X0, X26
	274 Move X1, X31
	275 Call FaceInfo.set_underlineThickness, X0, V0
	276 Move X8, [X19+248]
	277 Compare X8, 0
	278 JumpIfEqual {631}
	279 Move V0, [X8+80]
	280 Move X0, X26
	281 Move X1, X31
	282 Call FaceInfo.set_strikethroughOffset, X0, V0
	283 Move X8, [X19+248]
	284 Compare X8, 0
	285 JumpIfEqual {631}
	286 Move V0, [X8+84]
	287 Move X0, X26
	288 Move X1, X31
	289 Call FaceInfo.set_strikethroughThickness, X0, V0
	290 Move X8, [X19+248]
	291 Compare X8, 0
	292 JumpIfEqual {631}
	293 Move V0, [X8+88]
	294 Move X0, X26
	295 Move X1, X31
	296 Call FaceInfo.set_tabWidth, X0, V0
	297 Move X0, [X19+216]
	298 Compare X0, 0
	299 JumpIfEqual {303}
	300 Move X8, [X0+24]
	301 Compare X8, 0
	302 JumpIfNotEqual {311}
	303 Move X8, 0x676000
	304 Move X8, [X8+3048]
	305 Move W1, 1
	306 Move X0, [X8]
	307 Call 0x1C17D6C
	308 Move [X19+216], X0
	309 Compare X0, 0
	310 JumpIfEqual {631}
	311 Move W8, [X0+24]
	312 Compare W8, 0
	313 JumpIfEqual {801}
	314 Move X8, [X19+256]
	315 Move [X0+32], X8
	316 Move X8, [X19+248]
	317 Compare X8, 0
	318 JumpIfEqual {631}
	319 Move V0, [X8+96]
	320 Move W9, 0x7F800000
	321 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	322 NotImplemented "Instruction MOVI not yet implemented."
	323 NotImplemented "Instruction FCMEQ not yet implemented."
	324 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	325 NotImplemented "Instruction INVALID not yet implemented."
	326 Move [X19+264], D0
	327 Move V0, [X8+92]
	328 NotImplemented "Instruction LDRSW not yet implemented."
	329 Move S1, W9
	330 Move W10, 0x80000000
	331 NotImplemented "Instruction FCVTZS not yet implemented."
	332 NotImplemented "Instruction FCMP not yet implemented."
	333 NotImplemented "Instruction CSEL not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move [X19+272], W9
	336 Move W9, 207
	337 NotImplemented "Instruction LSRV not yet implemented."
	338 Move TEMP, X9
	339 And TEMP, TEMP, 1
	340 Compare TEMP, 1
	341 JumpIfNotEqual {346}
	342 Move X9, -50024448
	343 Add X9, X9, 2612
	344 Move W8, [X9]
	345 Move [X19+276], W8
	346 Move X8, [X19+416]
	347 Compare X8, 0
	348 JumpIfEqual {372}
	349 Move X9, [X8+24]
	350 Compare X9, 0
	351 JumpIfEqual {372}
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move X9, [X19+408]
	354 Compare X9, 0
	355 JumpIfEqual {631}
	356 Move W10, [X9+24]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move V0, [X8+6]
	359 Move [X9+6], V0
	360 Move X8, [X19+416]
	361 Compare X8, 0
	362 JumpIfEqual {631}
	363 Move W9, [X8+24]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 Move X9, [X19+408]
	366 Compare X9, 0
	367 JumpIfEqual {631}
	368 Move W10, [X9+24]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move V0, [X8+9]
	371 Move [X9+9], V0
	372 Move X0, [X19+304]
	373 Compare X0, 0
	374 JumpIfEqual {431}
	375 Move W21, [X0+24]
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move X8, [X19+312]
	378 Compare X8, 0
	379 JumpIfNotEqual {394}
	380 Move X8, 0x676000
	381 Move X8, [X8+3160]
	382 Move X0, [X8]
	383 Call 0x1C17F10
	384 Move X8, 0x676000
	385 Move X8, [X8+3128]
	386 Move W1, W21
	387 Move X22, X0
	388 Move X2, [X8]
	389 Call List`1<Object>..ctor, X0, X1
	390 Move X0, [X19+304]
	391 Move [X19+312], X22
	392 Compare X0, 0
	393 JumpIfEqual {631}
	394 Move X20, 0x676000
	395 Move X24, 0x676000
	396 Move X20, [X20+3144]
	397 Move X24, [X24+3096]
	398 Move W21, W31
	399 Move W8, [X0+24]
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Move X2, [X20]
	402 Move X22, [X19+312]
	403 Move W1, W21
	404 Call List`1<Object>.get_Item, X0, X1
	405 Compare X22, 0
	406 JumpIfEqual {631}
	407 Move W10, [X22+28]
	408 Move X8, [X22+16]
	409 Move X9, [X24]
	410 Add W10, W10, 1
	411 Move [X22+28], W10
	412 Compare X8, 0
	413 JumpIfEqual {631}
	414 NotImplemented "Instruction LDRSW not yet implemented."
	415 Move W11, [X8+24]
	416 Move X1, X0
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Add W9, W10, 1
	419 Add X8, X8, X10
	420 Move [X22+24], W9
	421 Move [X8+32], X1
	422 Move X8, [X9+32]
	423 Move X0, X22
	424 Move X8, [X8+192]
	425 Move X2, [X8+112]
	426 Call List`1<Object>.AddWithResize, X0, X1
	427 Move X0, [X19+304]
	428 Add W21, W21, 1
	429 Compare X0, 0
	430 JumpIfNotEqual {399}
	431 Move X8, [X19+328]
	432 Compare X8, 0
	433 JumpIfNotEqual {445}
	434 Move X8, [X23]
	435 Move X0, X31
	436 Move X2, X31
	437 Move X8, [X8+184]
	438 Move X1, [X8]
	439 Call String.op_Inequality, X0, X1
	440 Move TEMP, X0
	441 And TEMP, TEMP, 1
	442 Compare TEMP, 1
	443 JumpIfNotEqual {777}
	444 Move X8, [X19+328]
	445 Move [X19+56], X8
	446 Move X8, [X19+176]
	447 Compare X8, 0
	448 JumpIfEqual {631}
	449 Move W2, [X8+24]
	450 Move W9, [X8+28]
	451 Add W9, W9, 1
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Move [X8+24], W31
	454 Move [X8+28], W9
	455 Move X0, [X8+16]
	456 Move W1, W31
	457 Move X3, X31
	458 Call Array.Clear, X0, X1, X2
	459 Move X8, [X19+192]
	460 Compare X8, 0
	461 JumpIfEqual {631}
	462 Move W2, [X8+24]
	463 Move W9, [X8+28]
	464 Move [X31+104], X26
	465 Add W9, W9, 1
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move [X8+24], W31
	468 Move [X8+28], W9
	469 Move X0, [X8+16]
	470 Move W1, W31
	471 Move X3, X31
	472 Call Array.Clear, X0, X1, X2
	473 Move X0, [X19+280]
	474 Compare X0, 0
	475 JumpIfEqual {631}
	476 Move X27, 0x676000
	477 Move X26, 0x676000
	478 Move X27, [X27+3152]
	479 Move X26, [X26+3080]
	480 Move W20, W31
	481 Move W21, W31
	482 Move W28, 0x7F800000
	483 Move W29, 0x80000000
	484 Move S8, 0.5
	485 Move W8, [X0+24]
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move X2, [X27]
	488 Move W1, W21
	489 Call List`1<Object>.get_Item, X0, X1
	490 Move X8, [X26]
	491 Move X22, X0
	492 Move X0, X8
	493 Call 0x1C17F10
	494 Move X1, X31
	495 Move X23, X0
	496 Call Glyph..ctor, X0
	497 Compare X23, 0
	498 JumpIfEqual {631}
	499 Add W21, W21, 1
	500 Move X0, X23
	501 Move W1, W21
	502 Move X2, X31
	503 Call Glyph.set_index, X0, X1
	504 Compare X22, 0
	505 JumpIfEqual {631}
	506 Move S0, [X22+20]
	507 Move S1, [X22+24]
	508 Move S3, [X22+28]
	509 Move S2, [X22+32]
	510 Move S4, W28
	511 Move W8, [X19+268]
	512 NotImplemented "Instruction FCVTZS not yet implemented."
	513 NotImplemented "Instruction FCMP not yet implemented."
	514 Add S0, S1, S2
	515 Add S0, S0, S8
	516 Add S1, S3, S8
	517 NotImplemented "Instruction CSEL not yet implemented."
	518 NotImplemented "Instruction FCVTZS not yet implemented."
	519 NotImplemented "Instruction FCMP not yet implemented."
	520 Add S2, S2, S8
	521 NotImplemented "Instruction FCVTZS not yet implemented."
	522 NotImplemented "Instruction CSEL not yet implemented."
	523 NotImplemented "Instruction FCMP not yet implemented."
	524 Subtract W2, W8, W10
	525 NotImplemented "Instruction FCVTZS not yet implemented."
	526 NotImplemented "Instruction CSEL not yet implemented."
	527 NotImplemented "Instruction FCMP not yet implemented."
	528 NotImplemented "Instruction CSEL not yet implemented."
	529 Add X0, X31, 80
	530 Move X5, X31
	531 Move [X31+80], X31
	532 Move [X31+88], X31
	533 Call GlyphRect..ctor, X0, X1, X2, X3, X4
	534 Move X1, [X31+80]
	535 Move X2, [X31+88]
	536 Move X0, X23
	537 Move X3, X31
	538 Call Glyph.set_glyphRect, X0, X1
	539 Move S0, [X22+28]
	540 Move S1, [X22+32]
	541 Move S2, [X22+36]
	542 Move S3, [X22+40]
	543 Move V4, [X22+44]
	544 Add X0, X31, 56
	545 Move X1, X31
	546 Move [X31+56], X31
	547 Move [X31+64], X31
	548 Move [X31+72], W31
	549 Call GlyphMetrics..ctor, X0, V0, V1, V2, V3, V4
	550 NotImplemented "Instruction LDUR not yet implemented."
	551 Move W8, [X31+72]
	552 Add X1, X31, 32
	553 Move X0, X23
	554 Move X2, X31
	555 Move [X31+2], V0
	556 Move [X31+48], W8
	557 Call Glyph.set_metrics, X0, X1
	558 Move V0, [X22+48]
	559 Move X0, X23
	560 Move X1, X31
	561 Call Glyph.set_scale, X0, V0
	562 Move X0, X23
	563 Move W1, W31
	564 Move X2, X31
	565 Call Glyph.set_atlasIndex, X0, X1
	566 Move X0, [X19+176]
	567 Compare X0, 0
	568 JumpIfEqual {631}
	569 Move X9, 0x676000
	570 Move W10, [X0+28]
	571 Move X8, [X0+16]
	572 Move X9, [X9+3088]
	573 Add W10, W10, 1
	574 Move X9, [X9]
	575 Move [X0+28], W10
	576 Compare X8, 0
	577 JumpIfEqual {631}
	578 NotImplemented "Instruction LDRSW not yet implemented."
	579 Move W11, [X8+24]
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Add W9, W10, 1
	582 Add X8, X8, X10
	583 Move [X0+24], W9
	584 Move [X8+32], X23
	585 Move X8, [X9+32]
	586 Move X1, X23
	587 Move X8, [X8+192]
	588 Move X2, [X8+112]
	589 Call List`1<Object>.AddWithResize, X0, X1
	590 Move X8, 0x676000
	591 Move W25, [X22+16]
	592 Move X8, [X8+1456]
	593 Move X0, [X8]
	594 Call 0x1C17F10
	595 Move W1, W25
	596 Move X2, X19
	597 Move X3, X23
	598 Move X24, X0
	599 Call TMP_Character..ctor, X0, X1, X2, X3
	600 Move W8, [X22+16]
	601 Move X0, [X19+192]
	602 NotImplemented "Instruction CMP not yet implemented."
	603 NotImplemented "Instruction CSET not yet implemented."
	604 Compare X0, 0
	605 JumpIfEqual {631}
	606 Move X9, 0x676000
	607 Move W10, [X0+28]
	608 Move X8, [X0+16]
	609 Move X9, [X9+3104]
	610 Add W10, W10, 1
	611 Move X9, [X9]
	612 Move [X0+28], W10
	613 Compare X8, 0
	614 JumpIfEqual {631}
	615 NotImplemented "Instruction LDRSW not yet implemented."
	616 Move W11, [X8+24]
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Add W9, W10, 1
	619 Add X8, X8, X10
	620 Move [X0+24], W9
	621 Move [X8+32], X24
	622 Move X8, [X9+32]
	623 Move X1, X24
	624 Move X8, [X8+192]
	625 Move X2, [X8+112]
	626 Call List`1<Object>.AddWithResize, X0, X1
	627 Move X0, [X19+280]
	628 Or W20, W20, W22
	629 Compare X0, 0
	630 JumpIfNotEqual {485}
	631 Call 0x1C17F20
	632 Move TEMP, X20
	633 And TEMP, TEMP, 1
	634 Compare TEMP, 1
	635 JumpIfEqual {760}
	636 Move X0, X19
	637 Move X1, X31
	638 Call Object.get_name, X0
	639 Move X8, 0x676000
	640 Move X8, [X8+3200]
	641 Move X9, 0x611000
	642 Move X9, [X9+2120]
	643 Move X1, X0
	644 Move X8, [X8]
	645 Move X3, X31
	646 Move X2, [X9]
	647 Move X0, X8
	648 Call String.Concat, X0, X1, X2
	649 Move X8, 0x611000
	650 Move X8, [X8+2600]
	651 Move X21, X0
	652 Move X8, [X8]
	653 Move W9, [X8+224]
	654 Compare W9, 0
	655 JumpIfNotEqual {658}
	656 Move X0, X8
	657 Call 0x1C17DFC
	658 Move X0, X21
	659 Move X1, X31
	660 Call Debug.Log, X0
	661 Move X0, [X31+104]
	662 Move X1, X31
	663 Call FaceInfo.get_ascentLine, X0
	664 Move S1, 5
	665 NotImplemented "Instruction FDIV not yet implemented."
	666 Add X0, X31, 56
	667 Move S0, W31
	668 Move S1, W31
	669 Move S2, W31
	670 Move S3, W31
	671 Move X1, X31
	672 Move [X31+56], X31
	673 Move [X31+64], X31
	674 Move [X31+72], W31
	675 Call GlyphMetrics..ctor, X0, V0, V1, V2, V3, V4
	676 Move X8, 0x639000
	677 Move X8, [X8+1544]
	678 Move X0, [X8]
	679 Move W8, [X0+224]
	680 Compare W8, 0
	681 JumpIfNotEqual {683}
	682 Call 0x1C17DFC
	683 Move X0, X31
	684 Call GlyphRect.get_zero
	685 Move X21, X0
	686 Move X0, [X26]
	687 Move X22, X1
	688 Call 0x1C17F10
	689 NotImplemented "Instruction LDUR not yet implemented."
	690 Move W8, [X31+72]
	691 Add X2, X31, 0
	692 Move W1, W31
	693 Move [X31], V0
	694 Move S0, 1
	695 Move X3, X21
	696 Move X4, X22
	697 Move W5, W31
	698 Move X6, X31
	699 Move X20, X0
	700 Move [X31+16], W8
	701 Call Glyph..ctor, X0, X1, X2, X3, V0, X4
	702 Move X0, [X19+176]
	703 Compare X0, 0
	704 JumpIfEqual {631}
	705 Move X9, 0x676000
	706 Move W10, [X0+28]
	707 Move X8, [X0+16]
	708 Move X9, [X9+3088]
	709 Add W10, W10, 1
	710 Move X9, [X9]
	711 Move [X0+28], W10
	712 Compare X8, 0
	713 JumpIfEqual {631}
	714 NotImplemented "Instruction LDRSW not yet implemented."
	715 Move W11, [X8+24]
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Add W9, W10, 1
	718 Add X8, X8, X10
	719 Move [X0+24], W9
	720 Move [X8+32], X20
	721 Move X8, [X9+32]
	722 Move X1, X20
	723 Move X8, [X8+192]
	724 Move X2, [X8+112]
	725 Call List`1<Object>.AddWithResize, X0, X1
	726 Move X8, 0x676000
	727 Move X21, [X19+192]
	728 Move X8, [X8+1456]
	729 Move X0, [X8]
	730 Call 0x1C17F10
	731 Move W1, 32
	732 Move X2, X19
	733 Move X3, X20
	734 Move X22, X0
	735 Call TMP_Character..ctor, X0, X1, X2, X3
	736 Compare X21, 0
	737 JumpIfEqual {631}
	738 Move X9, 0x676000
	739 Move W10, [X21+28]
	740 Move X8, [X21+16]
	741 Move X9, [X9+3104]
	742 Add W10, W10, 1
	743 Move X9, [X9]
	744 Move [X21+28], W10
	745 Compare X8, 0
	746 JumpIfEqual {631}
	747 NotImplemented "Instruction LDRSW not yet implemented."
	748 Move W11, [X8+24]
	749 NotImplemented "Instruction CMP not yet implemented."
	750 Add W9, W10, 1
	751 Add X8, X8, X10
	752 Move [X21+24], W9
	753 Move [X8+32], X22
	754 Move X8, [X9+32]
	755 Move X0, X21
	756 Move X1, X22
	757 Move X8, [X8+192]
	758 Move X2, [X8+112]
	759 Call List`1<Object>.AddWithResize, X0, X1
	760 Move X0, X19
	761 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	762 Move X20, [X31+192]
	763 Move X19, [X31+200]
	764 Move X22, [X31+176]
	765 Move X21, [X31+184]
	766 Move X24, [X31+160]
	767 Move X23, [X31+168]
	768 Move X26, [X31+144]
	769 Move X25, [X31+152]
	770 Move X28, [X31+128]
	771 Move X27, [X31+136]
	772 Move X29, [X31+112]
	773 Move X30, [X31+120]
	774 Move V8, [X31+96]
	775 Add X31, X31, 208
	776 Return 
	777 Move X0, X19
	778 Move X1, X31
	779 Call Object.get_name, X0
	780 Move X8, 0x676000
	781 Move X8, [X8+3168]
	782 Move X9, 0x676000
	783 Move X9, [X9+3192]
	784 Move X1, X0
	785 Move X8, [X8]
	786 Move X3, X31
	787 Move X2, [X9]
	788 Move X0, X8
	789 Call String.Concat, X0, X1, X2
	790 Move X8, [X25]
	791 Move X21, X0
	792 Move W9, [X8+224]
	793 Compare W9, 0
	794 JumpIfNotEqual {797}
	795 Move X0, X8
	796 Call 0x1C17DFC
	797 Move X0, X21
	798 Move X1, X19
	799 Move X2, X31
	800 Call Debug.LogWarning, X0, X1
	801 Call 0x1C17F28

Method: System.Void UpgradeGlyphAdjustmentTableToFontFeatureTable()

Disassembly:
	0x03AE49A0 MOV X19, X0
	0x03AE49A4 TBNZ X8, 0x0, 0x3AE4A7C
	0x03AE49A8 ADRP X0, 0x60F000
	0x03AE49AC LDR X0, [X0 + 0xA28]
	0x03AE49B0 BL 0x1C16CF4
	0x03AE49B4 ADRP X0, 0x674000
	0x03AE49B8 LDR X0, [X0 + 0xCD0]
	0x03AE49BC BL 0x1C16CF4
	0x03AE49C0 ADRP X0, 0x674000
	0x03AE49C4 LDR X0, [X0 + 0xC98]
	0x03AE49C8 BL 0x1C16CF4
	0x03AE49CC ADRP X0, 0x674000
	0x03AE49D0 LDR X0, [X0 + 0xCA8]
	0x03AE49D4 BL 0x1C16CF4
	0x03AE49D8 ADRP X0, 0x674000
	0x03AE49DC LDR X0, [X0 + 0xC90]
	0x03AE49E0 BL 0x1C16CF4
	0x03AE49E4 ADRP X0, 0x674000
	0x03AE49E8 LDR X0, [X0 + 0xBC0]
	0x03AE49EC BL 0x1C16CF4
	0x03AE49F0 ADRP X0, 0x66A000
	0x03AE49F4 LDR X0, [X0 + 0x828]
	0x03AE49F8 BL 0x1C16CF4
	0x03AE49FC ADRP X0, 0x674000
	0x03AE4A00 LDR X0, [X0 + 0xE00]
	0x03AE4A04 BL 0x1C16CF4
	0x03AE4A08 ADRP X0, 0x674000
	0x03AE4A0C LDR X0, [X0 + 0xC10]
	0x03AE4A10 BL 0x1C16CF4
	0x03AE4A14 ADRP X0, 0x615000
	0x03AE4A18 LDR X0, [X0 + 0x1D0]
	0x03AE4A1C BL 0x1C16CF4
	0x03AE4A20 ADRP X0, 0x674000
	0x03AE4A24 LDR X0, [X0 + 0xC20]
	0x03AE4A28 BL 0x1C16CF4
	0x03AE4A2C ADRP X0, 0x60F000
	0x03AE4A30 LDR X0, [X0 + 0xAC8]
	0x03AE4A34 BL 0x1C16CF4
	0x03AE4A38 ADRP X0, 0x674000
	0x03AE4A3C LDR X0, [X0 + 0x5B0]
	0x03AE4A40 BL 0x1C16CF4
	0x03AE4A44 ADRP X0, 0x674000
	0x03AE4A48 LDR X0, [X0 + 0x578]
	0x03AE4A4C BL 0x1C16CF4
	0x03AE4A50 ADRP X0, 0x674000
	0x03AE4A54 LDR X0, [X0 + 0xE08]
	0x03AE4A58 BL 0x1C16CF4
	0x03AE4A5C ADRP X0, 0x674000
	0x03AE4A60 LDR X0, [X0 + 0xE10]
	0x03AE4A64 BL 0x1C16CF4
	0x03AE4A68 ADRP X0, 0x674000
	0x03AE4A6C LDR X0, [X0 + 0xE18]
	0x03AE4A70 BL 0x1C16CF4
	0x03AE4A74 MOVZ W8, 0x1
	0x03AE4A78 STRB W8, [X22 + 0x5A9]
	0x03AE4A7C STR X31, [X31 + 0x18]
	0x03AE4A80 STR X31, [X21]
	0x03AE4A84 LDR X0, [X19 + 0x210]
	0x03AE4A88 CBZ X0, 0x3AE51D4
	0x03AE4A8C ADRP X8, 0x674000
	0x03AE4A90 LDR X8, [X8 + 0xE00]
	0x03AE4A94 MOV W1, W20
	0x03AE4A98 LDR X2, [X8]
	0x03AE4A9C BL 0x2DCD240
	0x03AE4AA0 TBNZ X0, 0x0, 0x3AE4AE8
	0x03AE4AA4 LDR X22, [X19 + 0x40]
	0x03AE4AA8 ADD X0, X19, 0x50
	0x03AE4AAC MOV X1, X31
	0x03AE4AB0 BL 0x3C9BF88
	0x03AE4AB4 ADRP X28, 0x674000
	0x03AE4AB8 LDR X28, [X28 + 0xBC0]
	0x03AE4ABC MOV W23, W0
	0x03AE4AC0 LDR X8, [X28]
	0x03AE4AC4 LDR W9, [X8 + 0xE0]
	0x03AE4AC8 CBNZ W9, 0x3AE4AD4
	0x03AE4ACC MOV X0, X8
	0x03AE4AD0 BL 0x1C16DFC
	0x03AE4AD4 MOV X0, X22
	0x03AE4AD8 MOV W1, W23
	0x03AE4ADC MOV X2, X31
	0x03AE4AE0 BL 0x3C9C794
	0x03AE4AE4 CBZ W0, 0x3AE4B0C
	0x03AE4AE8 MOV W0, W31
	0x03AE4AEC LDP X20, X19, [X31 + 0x60]
	0x03AE4AF0 LDP X22, X21, [X31 + 0x50]
	0x03AE4AF4 LDP X24, X23, [X31 + 0x40]
	0x03AE4AF8 LDP X26, X25, [X31 + 0x30]
	0x03AE4AFC LDP X28, X27, [X31 + 0x20]
	0x03AE4B00 LDR X30, [X31 + 0x10]
	0x03AE4B04 ADD X31, X31, 0x70
	0x03AE4B08 RET
	0x03AE4B0C LDR X0, [X28]
	0x03AE4B10 LDR W8, [X0 + 0xE0]
	0x03AE4B14 CBNZ W8, 0x3AE4B1C
	0x03AE4B18 BL 0x1C16DFC
	0x03AE4B1C MOV W0, W20
	0x03AE4B20 MOV X1, X31
	0x03AE4B24 BL 0x3C9CBD8
	0x03AE4B28 MOV W22, W0
	0x03AE4B2C CBNZ W0, 0x3AE4B88
	0x03AE4B30 MOVZ W8, 0x2011
	0x03AE4B34 CMP W20, W8
	0x03AE4B38 B.EQ 0x3AE4B64
	0x03AE4B3C CMP W20, 0xAD
	0x03AE4B40 B.EQ 0x3AE4B64
	0x03AE4B44 CMP W20, 0xA0
	0x03AE4B48 B.NE 0x3AE4FF0
	0x03AE4B4C LDR X0, [X28]
	0x03AE4B50 LDR W8, [X0 + 0xE0]
	0x03AE4B54 CBNZ W8, 0x3AE4B5C
	0x03AE4B58 BL 0x1C16DFC
	0x03AE4B5C MOVZ W0, 0x20
	0x03AE4B60 B 0x3AE4B78
	0x03AE4B64 LDR X0, [X28]
	0x03AE4B68 LDR W8, [X0 + 0xE0]
	0x03AE4B6C CBNZ W8, 0x3AE4B74
	0x03AE4B70 BL 0x1C16DFC
	0x03AE4B74 MOVZ W0, 0x2D
	0x03AE4B78 MOV X1, X31
	0x03AE4B7C BL 0x3C9CBD8
	0x03AE4B80 MOV W22, W0
	0x03AE4B84 CBZ W0, 0x3AE4FF0
	0x03AE4B88 LDR X0, [X19 + 0xB8]
	0x03AE4B8C CBZ X0, 0x3AE51D4
	0x03AE4B90 ADRP X8, 0x674000
	0x03AE4B94 LDR X8, [X8 + 0xCA8]
	0x03AE4B98 MOV W1, W22
	0x03AE4B9C LDR X2, [X8]
	0x03AE4BA0 BL 0x2B0F250
	0x03AE4BA4 TBZ X0, 0x0, 0x3AE4C40
	0x03AE4BA8 LDR X0, [X19 + 0xB8]
	0x03AE4BAC CBZ X0, 0x3AE51D4
	0x03AE4BB0 ADRP X8, 0x674000
	0x03AE4BB4 LDR X8, [X8 + 0xC90]
	0x03AE4BB8 MOV W1, W22
	0x03AE4BBC LDR X2, [X8]
	0x03AE4BC0 BL 0x2B0EFBC
	0x03AE4BC4 ADRP X8, 0x674000
	0x03AE4BC8 LDR X8, [X8 + 0x5B0]
	0x03AE4BCC MOV X23, X0
	0x03AE4BD0 LDR X8, [X8]
	0x03AE4BD4 MOV X0, X8
	0x03AE4BD8 BL 0x1C16F10
	0x03AE4BDC MOV W1, W20
	0x03AE4BE0 MOV X2, X19
	0x03AE4BE4 MOV X3, X23
	0x03AE4BE8 MOV X22, X0
	0x03AE4BEC BL 0x3ADB950
	0x03AE4BF0 STR X22, [X21]
	0x03AE4BF4 LDR X0, [X19 + 0xC0]
	0x03AE4BF8 CBZ X0, 0x3AE51D4
	0x03AE4BFC ADRP X9, 0x674000
	0x03AE4C00 LDR X9, [X9 + 0xC20]
	0x03AE4C04 LDR W10, [X0 + 0x1C]
	0x03AE4C08 LDR X8, [X0 + 0x10]
	0x03AE4C0C LDR X9, [X9]
	0x03AE4C10 ADD W10, W10, 0x1
	0x03AE4C14 STR W10, [X0 + 0x1C]
	0x03AE4C18 CBZ X8, 0x3AE51D4
	0x03AE4C1C LDRSW X10, [X0 + 0x18]
	0x03AE4C20 LDR W11, [X8 + 0x18]
	0x03AE4C24 CMP W10, W11
	0x03AE4C28 B.CS 0x3AE4E9C
	0x03AE4C2C ADD W9, W10, 0x1
	0x03AE4C30 ADD X8, X8, X10, 0x3, LSL
	0x03AE4C34 STR W9, [X0 + 0x18]
	0x03AE4C38 STR X22, [X8 + 0x20]
	0x03AE4C3C B 0x3AE4EB0
	0x03AE4C40 STR X31, [X31 + 0x18]
	0x03AE4C44 LDR X8, [X19 + 0xD8]
	0x03AE4C48 CBZ X8, 0x3AE51D4
	0x03AE4C4C LDRSW X9, [X19 + 0xE0]
	0x03AE4C50 LDR W10, [X8 + 0x18]
	0x03AE4C54 CMP W9, W10
	0x03AE4C58 B.CS 0x3AE51D8
	0x03AE4C5C ADD X8, X8, X9, 0x3, LSL
	0x03AE4C60 LDR X0, [X8 + 0x20]
	0x03AE4C64 CBZ X0, 0x3AE51D4
	0x03AE4C68 LDR X8, [X0]
	0x03AE4C6C LDP X9, X1, [X8 + 0x1E8]
	0x03AE4C70 BLR X9
	0x03AE4C74 TBZ X0, 0x0, 0x3AE4ED8
	0x03AE4C78 LDR X8, [X19 + 0xD8]
	0x03AE4C7C CBZ X8, 0x3AE51D4
	0x03AE4C80 LDRSW X9, [X19 + 0xE0]
	0x03AE4C84 LDR W10, [X8 + 0x18]
	0x03AE4C88 CMP W9, W10
	0x03AE4C8C B.CS 0x3AE51D8
	0x03AE4C90 ADD X8, X8, X9, 0x3, LSL
	0x03AE4C94 LDR X0, [X8 + 0x20]
	0x03AE4C98 CBZ X0, 0x3AE51D4
	0x03AE4C9C LDR X8, [X0]
	0x03AE4CA0 LDP X9, X1, [X8 + 0x188]
	0x03AE4CA4 BLR X9
	0x03AE4CA8 CBZ W0, 0x3AE4CE0
	0x03AE4CAC LDR X8, [X19 + 0xD8]
	0x03AE4CB0 CBZ X8, 0x3AE51D4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X23, 0x8FF000
	014 Move X21, 0x675000
	015 Move X22, 0x675000
	016 Move X20, 0x610000
	017 Move W8, [X23+1460]
	018 Move X21, [X21+3176]
	019 Move X22, [X22+3392]
	020 Move X20, [X20+2600]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {61}
	026 Move X0, 0x610000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0x675000
	030 Move X0, [X0+3400]
	031 Call 0x1C17CF4
	032 Move X0, 0x675000
	033 Move X0, [X0+3408]
	034 Call 0x1C17CF4
	035 Move X0, 0x675000
	036 Move X0, [X0+3416]
	037 Call 0x1C17CF4
	038 Move X0, 0x675000
	039 Move X0, [X0+3368]
	040 Call 0x1C17CF4
	041 Move X0, 0x675000
	042 Move X0, [X0+3424]
	043 Call 0x1C17CF4
	044 Move X0, 0x675000
	045 Move X0, [X0+3432]
	046 Call 0x1C17CF4
	047 Move X0, 0x675000
	048 Move X0, [X0+3440]
	049 Call 0x1C17CF4
	050 Move X0, 0x675000
	051 Move X0, [X0+3448]
	052 Call 0x1C17CF4
	053 Move X0, 0x675000
	054 Move X0, [X0+3176]
	055 Call 0x1C17CF4
	056 Move X0, 0x675000
	057 Move X0, [X0+3392]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X23+1460], W8
	061 Move X0, X19
	062 Move X1, X31
	063 Move [X31+56], X31
	064 Move [X31+40], X31
	065 Call Object.get_name, X0
	066 Move X8, [X21]
	067 Move X2, [X22]
	068 Move X1, X0
	069 Move X3, X31
	070 Move X0, X8
	071 Call String.Concat, X0, X1, X2
	072 Move X8, [X20]
	073 Move X20, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Move X1, X19
	081 Move X2, X31
	082 Call Debug.Log, X0, X1
	083 Move X20, [X19+296]
	084 Compare X20, 0
	085 JumpIfNotEqual {93}
	086 Move X8, 0x675000
	087 Move X8, [X8+3440]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X20, X0
	091 Call TMP_FontFeatureTable..ctor, X0
	092 Move [X19+296], X20
	093 Move X8, [X19+288]
	094 Compare X8, 0
	095 JumpIfEqual {213}
	096 Move X8, [X8+16]
	097 Compare X8, 0
	098 JumpIfEqual {213}
	099 Move X9, 0x675000
	100 Move X9, [X9+3432]
	101 Move X22, 0x675000
	102 Move W21, [X8+24]
	103 Move X0, [X9]
	104 Move X22, [X22+3416]
	105 Call 0x1C17F10
	106 Move X2, [X22]
	107 Move W1, W21
	108 Move X22, X0
	109 Call List`1<Object>..ctor, X0, X1
	110 Compare X20, 0
	111 JumpIfEqual {213}
	112 Move [X20+16], X22
	113 Move X8, [X19+288]
	114 Compare X8, 0
	115 JumpIfEqual {213}
	116 Move X22, 0x675000
	117 Move X23, 0x675000
	118 Move X24, 0x675000
	119 Move X25, 0x675000
	120 Move X22, [X22+3424]
	121 Move X23, [X23+3400]
	122 Move X24, [X24+3448]
	123 Move X25, [X25+3408]
	124 Move W20, W31
	125 NotImplemented "Instruction BIC not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, [X8+16]
	128 Compare X0, 0
	129 JumpIfEqual {213}
	130 Move X2, [X22]
	131 Move W1, W20
	132 Call List`1<Object>.get_Item, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {213}
	135 Move X21, X0
	136 Move X0, [X19+200]
	137 Compare X0, 0
	138 JumpIfEqual {213}
	139 Move W1, [X21+16]
	140 Move X3, [X23]
	141 Add X2, X31, 56
	142 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {151}
	147 Move X8, [X31+56]
	148 Compare X8, 0
	149 JumpIfEqual {213}
	150 Move W27, [X8+40]
	151 Move W27, W31
	152 Move X0, [X19+200]
	153 Compare X0, 0
	154 JumpIfEqual {213}
	155 Move W1, [X21+36]
	156 Move X3, [X23]
	157 Add X2, X31, 40
	158 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {167}
	163 Move X8, [X31+40]
	164 Compare X8, 0
	165 JumpIfEqual {213}
	166 Move W28, [X8+40]
	167 Move W28, W31
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 Move X0, [X24]
	171 Move [X31], V1
	172 Move [X31+8], V0
	173 Call 0x1C17F10
	174 Move X1, X31
	175 Move X21, X0
	176 Call Object..ctor, X0
	177 Move V0, [X31]
	178 Move [X21+16], W27
	179 Move [X21+36], W28
	180 Move [X21+56], W31
	181 Move [X21+20], V0
	182 Move V0, [X31+1]
	183 Move [X21+40], V0
	184 Move X8, [X19+296]
	185 Compare X8, 0
	186 JumpIfEqual {213}
	187 Move X0, [X8+16]
	188 Compare X0, 0
	189 JumpIfEqual {213}
	190 Move W10, [X0+28]
	191 Move X8, [X0+16]
	192 Move X9, [X25]
	193 Add W10, W10, 1
	194 Move [X0+28], W10
	195 Compare X8, 0
	196 JumpIfEqual {213}
	197 NotImplemented "Instruction LDRSW not yet implemented."
	198 Move W11, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add W9, W10, 1
	201 Add X8, X8, X10
	202 Move [X0+24], W9
	203 Move [X8+32], X21
	204 Move X8, [X9+32]
	205 Move X1, X21
	206 Move X8, [X8+192]
	207 Move X2, [X8+112]
	208 Call List`1<Object>.AddWithResize, X0, X1
	209 Move X8, [X19+288]
	210 Add W20, W20, 1
	211 Compare X8, 0
	212 JumpIfNotEqual {126}
	213 Call 0x1C17F20
	214 Move [X8+16], X31
	215 Move [X19+288], X31
	216 Move X20, [X31+128]
	217 Move X19, [X31+136]
	218 Move X22, [X31+112]
	219 Move X21, [X31+120]
	220 Move X24, [X31+96]
	221 Move X23, [X31+104]
	222 Move X26, [X31+80]
	223 Move X25, [X31+88]
	224 Move X28, [X31+64]
	225 Move X27, [X31+72]
	226 Move X30, [X31+48]
	227 Add X31, X31, 144
	228 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AEA8B4 BL 0x1C16CF4
	0x03AEA8B8 ADRP X0, 0x66E000
	0x03AEA8BC LDR X0, [X0 + 0xF68]
	0x03AEA8C0 BL 0x1C16CF4
	0x03AEA8C4 ADRP X0, 0x66E000
	0x03AEA8C8 LDR X0, [X0 + 0xF98]
	0x03AEA8CC BL 0x1C16CF4
	0x03AEA8D0 ADRP X0, 0x66E000
	0x03AEA8D4 LDR X0, [X0 + 0xF88]
	0x03AEA8D8 BL 0x1C16CF4
	0x03AEA8DC MOVZ W8, 0x1
	0x03AEA8E0 STRB W8, [X22 + 0x5BF]
	0x03AEA8E4 LDR X0, [X23]
	0x03AEA8E8 BL 0x1C16F10
	0x03AEA8EC MOV X1, X31
	0x03AEA8F0 MOV X22, X0
	0x03AEA8F4 BL 0x33BDD8C
	0x03AEA8F8 CBZ X22, 0x3AEA98C
	0x03AEA8FC ADRP X8, 0x66E000
	0x03AEA900 LDR X8, [X8 + 0xF68]
	0x03AEA904 STP W21, W20, [X22 + 0x10]
	0x03AEA908 ADRP X21, 0x66E000
	0x03AEA90C LDR X20, [X19 + 0x10]
	0x03AEA910 LDR X0, [X8]
	0x03AEA914 LDR X21, [X21 + 0xF98]
	0x03AEA918 BL 0x1C16F10
	0x03AEA91C LDR X2, [X21]
	0x03AEA920 MOV X1, X22
	0x03AEA924 MOV X3, X31
	0x03AEA928 MOV X21, X0
	0x03AEA92C BL 0x24AD1FC
	0x03AEA930 CBZ X20, 0x3AEA98C
	0x03AEA934 ADRP X8, 0x66E000
	0x03AEA938 LDR X8, [X8 + 0xF60]
	0x03AEA93C MOV X0, X20
	0x03AEA940 MOV X1, X21
	0x03AEA944 LDR X2, [X8]
	0x03AEA948 BL 0x301C7DC
	0x03AEA94C ADDS W31, W0, 0x1
	0x03AEA950 B.EQ 0x3AEA97C
	0x03AEA954 MOV W1, W0
	0x03AEA958 LDR X0, [X19 + 0x10]
	0x03AEA95C CBZ X0, 0x3AEA98C
	0x03AEA960 ADRP X8, 0x66E000
	0x03AEA964 LDR X8, [X8 + 0xF90]
	0x03AEA968 LDP X20, X19, [X31 + 0x20]
	0x03AEA96C LDP X22, X21, [X31 + 0x10]
	0x03AEA970 LDR X2, [X8]
	0x03AEA974 LDP X30, X23, [X31], #0x30
	0x03AEA978 B 0x301DA48
	0x03AEA97C LDP X20, X19, [X31 + 0x20]
	0x03AEA980 LDP X22, X21, [X31 + 0x10]
	0x03AEA984 LDP X30, X23, [X31], #0x30
	0x03AEA988 RET
	0x03AEA98C BL 0x1C16F20
	0x03AEA990 MOV X1, X31
	0x03AEA994 B 0x33BDD8C
	0x03AEA998 STP X30, X21, [X31 - 0x20]!
	0x03AEA99C STP X20, X19, [X31 + 0x10]
	0x03AEA9A0 ADRP X21, 0x8F8000
	0x03AEA9A4 LDRB W8, [X21 + 0x5C0]
	0x03AEA9A8 MOV W19, W1
	0x03AEA9AC MOV X20, X0
	0x03AEA9B0 TBNZ X8, 0x0, 0x3AEA9C8
	0x03AEA9B4 ADRP X0, 0x66E000
	0x03AEA9B8 LDR X0, [X0 + 0xF90]
	0x03AEA9BC BL 0x1C16CF4
	0x03AEA9C0 MOVZ W8, 0x1
	0x03AEA9C4 STRB W8, [X21 + 0x5C0]
	0x03AEA9C8 LDR X0, [X20 + 0x10]
	0x03AEA9CC CBZ X0, 0x3AEA9EC
	0x03AEA9D0 ADRP X8, 0x66E000
	0x03AEA9D4 LDR X8, [X8 + 0xF90]
	0x03AEA9D8 MOV W1, W19
	0x03AEA9DC LDP X20, X19, [X31 + 0x10]
	0x03AEA9E0 LDR X2, [X8]
	0x03AEA9E4 LDP X30, X21, [X31], #0x20
	0x03AEA9E8 B 0x301DA48
	0x03AEA9EC BL 0x1C16F20
	0x03AEA9F0 STP X30, X25, [X31 - 0x40]!
	0x03AEA9F4 STP X24, X23, [X31 + 0x10]
	0x03AEA9F8 STP X22, X21, [X31 + 0x20]
	0x03AEA9FC STP X20, X19, [X31 + 0x30]
	0x03AEAA00 ADRP X20, 0x8F8000
	0x03AEAA04 LDRB W8, [X20 + 0x5C1]
	0x03AEAA08 MOV X19, X0
	0x03AEAA0C TBNZ X8, 0x0, 0x3AEAA78
	0x03AEAA10 ADRP X0, 0x66E000
	0x03AEAA14 LDR X0, [X0 + 0xFA0]
	0x03AEAA18 BL 0x1C16CF4
	0x03AEAA1C ADRP X0, 0x66E000
	0x03AEAA20 LDR X0, [X0 + 0xFA8]
	0x03AEAA24 BL 0x1C16CF4
	0x03AEAA28 ADRP X0, 0x66E000
	0x03AEAA2C LDR X0, [X0 + 0xFB0]
	0x03AEAA30 BL 0x1C16CF4
	0x03AEAA34 ADRP X0, 0x66E000
	0x03AEAA38 LDR X0, [X0 + 0xFB8]
	0x03AEAA3C BL 0x1C16CF4
	0x03AEAA40 ADRP X0, 0x66E000
	0x03AEAA44 LDR X0, [X0 + 0xD28]
	0x03AEAA48 BL 0x1C16CF4
	0x03AEAA4C ADRP X0, 0x66E000
	0x03AEAA50 LDR X0, [X0 + 0xFC0]
	0x03AEAA54 BL 0x1C16CF4
	0x03AEAA58 ADRP X0, 0x66E000
	0x03AEAA5C LDR X0, [X0 + 0xFC8]
	0x03AEAA60 BL 0x1C16CF4
	0x03AEAA64 ADRP X0, 0x66E000
	0x03AEAA68 LDR X0, [X0 + 0xFD0]
	0x03AEAA6C BL 0x1C16CF4
	0x03AEAA70 MOVZ W8, 0x1
	0x03AEAA74 STRB W8, [X20 + 0x5C1]
	0x03AEAA78 LDR X20, [X19 + 0x10]
	0x03AEAA7C CBZ X20, 0x3AEABD8
	0x03AEAA80 LDR W8, [X20 + 0x18]
	0x03AEAA84 CMP W8, 0x1
	0x03AEAA88 B.LT 0x3AEABC4
	0x03AEAA8C ADRP X23, 0x66E000
	0x03AEAA90 LDR X23, [X23 + 0xFD0]
	0x03AEAA94 LDR X0, [X23]
	0x03AEAA98 LDR W8, [X0 + 0xE0]
	0x03AEAA9C CBNZ W8, 0x3AEAAA8
	0x03AEAAA0 BL 0x1C16DFC
	0x03AEAAA4 LDR X0, [X23]
	0x03AEAAA8 LDR X8, [X0 + 0xB8]
	0x03AEAAAC ADRP X24, 0x66E000
	0x03AEAAB0 LDR X21, [X8 + 0x8]
	0x03AEAAB4 LDR X24, [X24 + 0xFA0]
	0x03AEAAB8 CBNZ X21, 0x3AEAB0C
	0x03AEAABC LDR W8, [X0 + 0xE0]
	0x03AEAAC0 CBNZ W8, 0x3AEAACC
	0x03AEAAC4 BL 0x1C16DFC
	0x03AEAAC8 LDR X0, [X23]
	0x03AEAACC ADRP X9, 0x66E000
	0x03AEAAD0 LDR X8, [X0 + 0xB8]
	0x03AEAAD4 LDR X9, [X9 + 0xFB8]
	0x03AEAAD8 LDR X22, [X8]
	0x03AEAADC LDR X0, [X9]
	0x03AEAAE0 BL 0x1C16F10
	0x03AEAAE4 ADRP X8, 0x66E000
	0x03AEAAE8 LDR X8, [X8 + 0xFC0]
	0x03AEAAEC MOV X1, X22
	0x03AEAAF0 MOV X3, X31
	0x03AEAAF4 MOV X21, X0
	0x03AEAAF8 LDR X2, [X8]
	0x03AEAAFC BL 0x2D30E18
	0x03AEAB00 LDR X8, [X23]
	0x03AEAB04 LDR X8, [X8 + 0xB8]
	0x03AEAB08 STR X21, [X8 + 0x8]
	0x03AEAB0C LDR X2, [X24]
	0x03AEAB10 MOV X0, X20
	0x03AEAB14 MOV X1, X21
	0x03AEAB18 BL 0x21C9CA0
	0x03AEAB1C LDR X8, [X23]
	0x03AEAB20 MOV X20, X0
	0x03AEAB24 LDR W9, [X8 + 0xE0]
	0x03AEAB28 CBNZ W9, 0x3AEAB38
	0x03AEAB2C MOV X0, X8
	0x03AEAB30 BL 0x1C16DFC
	0x03AEAB34 LDR X8, [X23]
	0x03AEAB38 LDR X9, [X8 + 0xB8]
	0x03AEAB3C ADRP X25, 0x66E000
	0x03AEAB40 ADRP X24, 0x66E000
	0x03AEAB44 LDR X21, [X9 + 0x10]
	0x03AEAB48 LDR X25, [X25 + 0xFA8]
	0x03AEAB4C LDR X24, [X24 + 0xFB0]
	0x03AEAB50 CBNZ X21, 0x3AEABA8
	0x03AEAB54 LDR W9, [X8 + 0xE0]
	0x03AEAB58 CBNZ W9, 0x3AEAB68
	0x03AEAB5C MOV X0, X8
	0x03AEAB60 BL 0x1C16DFC
	0x03AEAB64 LDR X8, [X23]
	0x03AEAB68 ADRP X9, 0x66E000
	0x03AEAB6C LDR X8, [X8 + 0xB8]
	0x03AEAB70 LDR X9, [X9 + 0xFB8]
	0x03AEAB74 LDR X22, [X8]
	0x03AEAB78 LDR X0, [X9]
	0x03AEAB7C BL 0x1C16F10
	0x03AEAB80 ADRP X8, 0x66E000
	0x03AEAB84 LDR X8, [X8 + 0xFC8]
	0x03AEAB88 MOV X1, X22
	0x03AEAB8C MOV X3, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x8F9000
	014 Move X28, 0x66F000
	015 Move X27, 0x66F000
	016 Move X21, 0x66F000
	017 Move X26, 0x66F000
	018 Move X25, 0x66F000
	019 Move X29, 0x66F000
	020 Move X24, 0x610000
	021 Move X23, 0x610000
	022 Move X22, 0x665000
	023 Move X28, [X28+3760]
	024 Move X27, [X27+3768]
	025 Move X21, [X21+3776]
	026 Move X26, [X26+3784]
	027 Move X25, [X25+3792]
	028 Move X29, [X29+3440]
	029 Move W8, [X20+1461]
	030 Move X24, [X24+488]
	031 Move X23, [X23+480]
	032 Move X22, [X22+2104]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {79}
	038 Move X0, 0x665000
	039 Move X0, [X0+2096]
	040 Call 0x1C17CF4
	041 Move X0, 0x611000
	042 Move X0, [X0+1672]
	043 Call 0x1C17CF4
	044 Move X0, 0x60B000
	045 Move X0, [X0+3592]
	046 Call 0x1C17CF4
	047 Move X0, 0x665000
	048 Move X0, [X0+2104]
	049 Call 0x1C17CF4
	050 Move X0, 0x66F000
	051 Move X0, [X0+3792]
	052 Call 0x1C17CF4
	053 Move X0, 0x610000
	054 Move X0, [X0+480]
	055 Call 0x1C17CF4
	056 Move X0, 0x66F000
	057 Move X0, [X0+3768]
	058 Call 0x1C17CF4
	059 Move X0, 0x66F000
	060 Move X0, [X0+3784]
	061 Call 0x1C17CF4
	062 Move X0, 0x66F000
	063 Move X0, [X0+3760]
	064 Call 0x1C17CF4
	065 Move X0, 0x610000
	066 Move X0, [X0+488]
	067 Call 0x1C17CF4
	068 Move X0, 0x66F000
	069 Move X0, [X0+3776]
	070 Call 0x1C17CF4
	071 Move X0, 0x66F000
	072 Move X0, [X0+3440]
	073 Call 0x1C17CF4
	074 Move X0, 0x66F000
	075 Move X0, [X0+3800]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X20+1461], W8
	079 Move X0, [X28]
	080 Call 0x1C17F10
	081 Move X1, [X27]
	082 Move X20, X0
	083 Call List`1<Object>..ctor, X0
	084 Move [X19+176], X20
	085 Move X0, [X21]
	086 Call 0x1C17F10
	087 Move X1, [X26]
	088 Move X20, X0
	089 Call List`1<Object>..ctor, X0
	090 Move [X19+192], X20
	091 Move X0, [X25]
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Call KerningTable..ctor, X0
	095 Move [X19+288], X20
	096 Move X0, [X29]
	097 Call 0x1C17F10
	098 Move X20, X0
	099 Call TMP_FontFeatureTable..ctor, X0
	100 Move [X19+296], X20
	101 Move X8, 0x66F000
	102 Move X8, [X8+3800]
	103 Move W1, 10
	104 Move X0, [X8]
	105 Call 0x1C17D6C
	106 Move X8, -50315264
	107 Move V0, [X8+2664]
	108 Move W8, 2595
	109 Move [X19+408], X0
	110 NotImplemented "Instruction STRH not yet implemented."
	111 Move [X19+432], D0
	112 Move X8, 0x60B000
	113 Move X8, [X8+3592]
	114 Move X0, [X8]
	115 Call 0x1C17F10
	116 Move X8, 0x611000
	117 Move X8, [X8+1672]
	118 Move X20, X0
	119 Move X1, [X8]
	120 Call HashSet`1<Int32>..ctor, X0
	121 Move [X19+448], X20
	122 Move X0, [X28]
	123 Call 0x1C17F10
	124 Move X1, [X27]
	125 Move X20, X0
	126 Call List`1<Object>..ctor, X0
	127 Move [X19+456], X20
	128 Move X0, [X28]
	129 Call 0x1C17F10
	130 Move X1, [X27]
	131 Move X20, X0
	132 Call List`1<Object>..ctor, X0
	133 Move [X19+464], X20
	134 Move X0, [X24]
	135 Call 0x1C17F10
	136 Move X1, [X23]
	137 Move X20, X0
	138 Call List`1<UInt32>..ctor, X0
	139 Move [X19+472], X20
	140 Move X0, [X24]
	141 Call 0x1C17F10
	142 Move X1, [X23]
	143 Move X20, X0
	144 Call List`1<UInt32>..ctor, X0
	145 Move [X19+480], X20
	146 Move X0, [X24]
	147 Call 0x1C17F10
	148 Move X1, [X23]
	149 Move X20, X0
	150 Call List`1<UInt32>..ctor, X0
	151 Move [X19+488], X20
	152 Move X0, [X22]
	153 Call 0x1C17F10
	154 Move X25, 0x665000
	155 Move X25, [X25+2096]
	156 Move X20, X0
	157 Move X1, [X25]
	158 Call HashSet`1<UInt32>..ctor, X0
	159 Move [X19+496], X20
	160 Move X0, [X21]
	161 Call 0x1C17F10
	162 Move X1, [X26]
	163 Move X20, X0
	164 Call List`1<Object>..ctor, X0
	165 Move [X19+504], X20
	166 Move X0, [X22]
	167 Call 0x1C17F10
	168 Move X1, [X25]
	169 Move X20, X0
	170 Call HashSet`1<UInt32>..ctor, X0
	171 Move [X19+512], X20
	172 Move X0, [X24]
	173 Call 0x1C17F10
	174 Move X1, [X23]
	175 Move X20, X0
	176 Call List`1<UInt32>..ctor, X0
	177 Move [X19+520], X20
	178 Move X0, [X22]
	179 Call 0x1C17F10
	180 Move X1, [X25]
	181 Move X20, X0
	182 Call HashSet`1<UInt32>..ctor, X0
	183 Move [X19+528], X20
	184 Move X0, X19
	185 Move X20, [X31+80]
	186 Move X19, [X31+88]
	187 Move X22, [X31+64]
	188 Move X21, [X31+72]
	189 Move X24, [X31+48]
	190 Move X23, [X31+56]
	191 Move X26, [X31+32]
	192 Move X25, [X31+40]
	193 Move X28, [X31+16]
	194 Move X27, [X31+24]
	195 Move X1, X31
	196 Move X29, [X31+96]
	197 Move X30, [X31+104]
	198 Call ScriptableObject..ctor, X0
	199 Return 

Method: System.Void .cctor()

Disassembly:
	0x03AEAC10 BL 0x1C16F10
	0x03AEAC14 MOV X1, X31
	0x03AEAC18 MOV X19, X0
	0x03AEAC1C BL 0x33BDD8C
	0x03AEAC20 LDR X8, [X20]
	0x03AEAC24 LDR X8, [X8 + 0xB8]
	0x03AEAC28 STR X19, [X8]
	0x03AEAC2C LDP X20, X19, [X31 + 0x10]
	0x03AEAC30 LDR X30, [X31], #0x20
	0x03AEAC34 RET
	0x03AEAC38 MOV X1, X31
	0x03AEAC3C B 0x33BDD8C
	0x03AEAC40 STR X30, [X31 - 0x10]!
	0x03AEAC44 CBZ X1, 0x3AEAC54
	0x03AEAC48 LDR W0, [X1 + 0x10]
	0x03AEAC4C LDR X30, [X31], #0x10
	0x03AEAC50 RET
	0x03AEAC54 BL 0x1C16F20
	0x03AEAC58 STR X30, [X31 - 0x10]!
	0x03AEAC5C CBZ X1, 0x3AEAC6C
	0x03AEAC60 LDR W0, [X1 + 0x24]
	0x03AEAC64 LDR X30, [X31], #0x10
	0x03AEAC68 RET
	0x03AEAC6C BL 0x1C16F20
	0x03AEAC70 STR X30, [X31 - 0x10]!
	0x03AEAC74 CBZ X1, 0x3AEACA8
	0x03AEAC78 LDR W8, [X1 + 0x10]
	0x03AEAC7C LDR W9, [X0 + 0x10]
	0x03AEAC80 CMP W8, W9
	0x03AEAC84 B.NE 0x3AEAC9C
	0x03AEAC88 LDR W8, [X1 + 0x24]
	0x03AEAC8C LDR W9, [X0 + 0x14]
	0x03AEAC90 CMP W8, W9
	0x03AEAC94 CSET W0, EQ
	0x03AEAC98 B 0x3AEACA0
	0x03AEAC9C MOV W0, W31
	0x03AEACA0 LDR X30, [X31], #0x10
	0x03AEACA4 RET
	0x03AEACA8 BL 0x1C16F20
	0x03AEACAC STR X30, [X31 - 0x10]!
	0x03AEACB0 CBZ X1, 0x3AEACE4
	0x03AEACB4 LDR W8, [X1 + 0x10]
	0x03AEACB8 LDR W9, [X0 + 0x10]
	0x03AEACBC CMP W8, W9
	0x03AEACC0 B.NE 0x3AEACD8
	0x03AEACC4 LDR W8, [X1 + 0x24]
	0x03AEACC8 LDR W9, [X0 + 0x14]
	0x03AEACCC CMP W8, W9
	0x03AEACD0 CSET W0, EQ
	0x03AEACD4 B 0x3AEACDC
	0x03AEACD8 MOV W0, W31
	0x03AEACDC LDR X30, [X31], #0x10
	0x03AEACE0 RET
	0x03AEACE4 BL 0x1C16F20
	0x03AEACE8 STR X30, [X31 - 0x10]!
	0x03AEACEC CBZ X1, 0x3AEAD20
	0x03AEACF0 LDR W8, [X1 + 0x10]
	0x03AEACF4 LDRSW X9, [X0 + 0x10]
	0x03AEACF8 CMP X8, X9
	0x03AEACFC B.NE 0x3AEAD14
	0x03AEAD00 LDR W8, [X1 + 0x24]
	0x03AEAD04 LDRSW X9, [X0 + 0x14]
	0x03AEAD08 CMP X8, X9
	0x03AEAD0C CSET W0, EQ
	0x03AEAD10 B 0x3AEAD18
	0x03AEAD14 MOV W0, W31
	0x03AEAD18 LDR X30, [X31], #0x10
	0x03AEAD1C RET
	0x03AEAD20 BL 0x1C16F20
	0x03AEAD24 STP X30, X23, [X31 - 0x30]!
	0x03AEAD28 STP X22, X21, [X31 + 0x10]
	0x03AEAD2C STP X20, X19, [X31 + 0x20]
	0x03AEAD30 ADRP X22, 0x8F8000
	0x03AEAD34 ADRP X23, 0x66E000
	0x03AEAD38 LDRB W8, [X22 + 0x5C3]
	0x03AEAD3C LDR X23, [X23 + 0xFD8]
	0x03AEAD40 MOV X19, X2
	0x03AEAD44 MOV W20, W1
	0x03AEAD48 MOV X21, X0
	0x03AEAD4C TBNZ X8, 0x0, 0x3AEAD88
	0x03AEAD50 ADRP X0, 0x610000
	0x03AEAD54 LDR X0, [X0 + 0x858]
	0x03AEAD58 BL 0x1C16CF4
	0x03AEAD5C ADRP X0, 0x60D000
	0x03AEAD60 LDR X0, [X0 + 0xB70]
	0x03AEAD64 BL 0x1C16CF4
	0x03AEAD68 ADRP X0, 0x60A000
	0x03AEAD6C LDR X0, [X0 + 0xE30]
	0x03AEAD70 BL 0x1C16CF4
	0x03AEAD74 ADRP X0, 0x66E000
	0x03AEAD78 LDR X0, [X0 + 0xFD8]
	0x03AEAD7C BL 0x1C16CF4
	0x03AEAD80 MOVZ W8, 0x1
	0x03AEAD84 STRB W8, [X22 + 0x5C3]
	0x03AEAD88 LDR X8, [X23]
	0x03AEAD8C LDR X8, [X8 + 0xB8]
	0x03AEAD90 LDR X8, [X8]
	0x03AEAD94 CBNZ X8, 0x3AEADD8
	0x03AEAD98 ADRP X8, 0x60A000
	0x03AEAD9C LDR X8, [X8 + 0xE30]
	0x03AEADA0 LDR X0, [X8]
	0x03AEADA4 BL 0x1C16F10
	0x03AEADA8 ADRP X8, 0x60D000
	0x03AEADAC LDR X8, [X8 + 0xB70]
	0x03AEADB0 MOV X22, X0
	0x03AEADB4 LDR X1, [X8]
	0x03AEADB8 BL 0x2FDBF14
	0x03AEADBC LDR X8, [X23]
	0x03AEADC0 LDR X8, [X8 + 0xB8]
	0x03AEADC4 STR X22, [X8]
	0x03AEADC8 LDR X8, [X23]
	0x03AEADCC LDR X8, [X8 + 0xB8]
	0x03AEADD0 LDR X8, [X8]
	0x03AEADD4 CBZ X8, 0x3AEAE00
	0x03AEADD8 LDR W9, [X8 + 0x1C]
	0x03AEADDC MOV X0, X21
	0x03AEADE0 MOV W1, W20
	0x03AEADE4 MOV X2, X19
	0x03AEADE8 LDP X20, X19, [X31 + 0x20]
	0x03AEADEC LDP X22, X21, [X31 + 0x10]
	0x03AEADF0 ADD W9, W9, 0x1
	0x03AEADF4 STP W31, W9, [X8 + 0x18]
	0x03AEADF8 LDP X30, X23, [X31], #0x30
	0x03AEADFC B 0x3AEAE04
	0x03AEAE00 BL 0x1C16F20
	0x03AEAE04 STP X29, X30, [X31 - 0x60]!
	0x03AEAE08 STP X28, X27, [X31 + 0x10]
	0x03AEAE0C STP X26, X25, [X31 + 0x20]
	0x03AEAE10 STP X24, X23, [X31 + 0x30]
	0x03AEAE14 STP X22, X21, [X31 + 0x40]
	0x03AEAE18 STP X20, X19, [X31 + 0x50]
	0x03AEAE1C ADRP X22, 0x8F8000
	0x03AEAE20 ADRP X25, 0x609000
	0x03AEAE24 LDRB W8, [X22 + 0x5C4]
	0x03AEAE28 LDR X25, [X25 + 0x598]
	0x03AEAE2C MOV X19, X2
	0x03AEAE30 MOV W21, W1
	0x03AEAE34 MOV X20, X0
	0x03AEAE38 TBNZ X8, 0x0, 0x3AEAE98
	0x03AEAE3C ADRP X0, 0x66E000
	0x03AEAE40 LDR X0, [X0 + 0xD48]
	0x03AEAE44 BL 0x1C16CF4
	0x03AEAE48 ADRP X0, 0x60A000
	0x03AEAE4C LDR X0, [X0 + 0xE10]
	0x03AEAE50 BL 0x1C16CF4
	0x03AEAE54 ADRP X0, 0x60D000
	0x03AEAE58 LDR X0, [X0 + 0xB68]
	0x03AEAE5C BL 0x1C16CF4
	0x03AEAE60 ADRP X0, 0x66E000
	0x03AEAE64 LDR X0, [X0 + 0x610]
	0x03AEAE68 BL 0x1C16CF4
	0x03AEAE6C ADRP X0, 0x66E000
	0x03AEAE70 LDR X0, [X0 + 0xC48]
	0x03AEAE74 BL 0x1C16CF4
	0x03AEAE78 ADRP X0, 0x609000
	0x03AEAE7C LDR X0, [X0 + 0x598]
	0x03AEAE80 BL 0x1C16CF4
	0x03AEAE84 ADRP X0, 0x66E000
	0x03AEAE88 LDR X0, [X0 + 0xFD8]
	0x03AEAE8C BL 0x1C16CF4
	0x03AEAE90 MOVZ W8, 0x1
	0x03AEAE94 STRB W8, [X22 + 0x5C4]
	0x03AEAE98 STR X31, [X19]
	0x03AEAE9C LDR X0, [X25]
	0x03AEAEA0 LDR W8, [X0 + 0xE0]
	0x03AEAEA4 CBNZ W8, 0x3AEAEAC
	0x03AEAEA8 BL 0x1C16DFC
	0x03AEAEAC MOV X0, X20
	0x03AEAEB0 MOV X1, X31
	0x03AEAEB4 MOV X2, X31
	0x03AEAEB8 BL 0x3C3883C
	0x03AEAEBC MOV X23, X31
	0x03AEAEC0 TBNZ X0, 0x0, 0x3AEB06C
	0x03AEAEC4 CBZ X20, 0x3AEB08C
	0x03AEAEC8 LDR X0, [X20 + 0xC8]
	0x03AEAECC CBNZ X0, 0x3AEAEE0
	0x03AEAED0 MOV X0, X20
	0x03AEAED4 BL 0x3AE1A88
	0x03AEAED8 LDR X0, [X20 + 0xC8]
	0x03AEAEDC CBZ X0, 0x3AEB08C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0x8F9000
	014 Move X26, 0x66F000
	015 Move X20, 0x66F000
	016 Move X19, 0x66F000
	017 Move X29, 0x66F000
	018 Move X28, 0x66F000
	019 Move X27, 0x66F000
	020 Move X24, 0x66F000
	021 Move X23, 0x66F000
	022 Move X22, 0x60B000
	023 Move X21, 0x611000
	024 Move X26, [X26+3824]
	025 Move X20, [X20+1400]
	026 Move X19, [X19+3832]
	027 Move X29, [X29+3840]
	028 Move X28, [X28+3848]
	029 Move X27, [X27+3856]
	030 Move W8, [X25+1462]
	031 Move X24, [X24+3160]
	032 Move X23, [X23+3864]
	033 Move X22, [X22+3592]
	034 Move X21, [X21+1672]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {80}
	039 Move X0, 0x611000
	040 Move X0, [X0+1672]
	041 Call 0x1C17CF4
	042 Move X0, 0x60B000
	043 Move X0, [X0+3592]
	044 Call 0x1C17CF4
	045 Move X0, 0x66F000
	046 Move X0, [X0+3864]
	047 Call 0x1C17CF4
	048 Move X0, 0x66F000
	049 Move X0, [X0+3160]
	050 Call 0x1C17CF4
	051 Move X0, 0x66F000
	052 Move X0, [X0+1400]
	053 Call 0x1C17CF4
	054 Move X0, 0x66F000
	055 Move X0, [X0+3872]
	056 Call 0x1C17CF4
	057 Move X0, 0x66F000
	058 Move X0, [X0+3840]
	059 Call 0x1C17CF4
	060 Move X0, 0x66F000
	061 Move X0, [X0+3848]
	062 Call 0x1C17CF4
	063 Move X0, 0x66F000
	064 Move X0, [X0+3832]
	065 Call 0x1C17CF4
	066 Move X0, 0x66F000
	067 Move X0, [X0+3824]
	068 Call 0x1C17CF4
	069 Move X0, 0x66F000
	070 Move X0, [X0+3856]
	071 Call 0x1C17CF4
	072 Move X0, 0x66F000
	073 Move X0, [X0+3880]
	074 Call 0x1C17CF4
	075 Move X0, 0x66F000
	076 Move X0, [X0+3888]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X25+1462], W8
	080 Move X0, [X26]
	081 Move W1, 1
	082 Move W2, W31
	083 Move W3, W31
	084 Move X4, X31
	085 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	086 Move X8, [X20]
	087 Move W1, 1
	088 Move W2, W31
	089 Move W3, W31
	090 Move X8, [X8+184]
	091 Move X4, X31
	092 Move [X8], X0
	093 Move X0, [X19]
	094 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	095 Move X8, [X20]
	096 Move W1, 1
	097 Move W2, W31
	098 Move W3, W31
	099 Move X8, [X8+184]
	100 Move X4, X31
	101 Move [X8+8], X0
	102 Move X0, [X29]
	103 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	104 Move X8, [X20]
	105 Move W1, 1
	106 Move W2, W31
	107 Move W3, W31
	108 Move X8, [X8+184]
	109 Move X4, X31
	110 Move [X8+16], X0
	111 Move X0, [X28]
	112 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	113 Move X8, [X20]
	114 Move W1, 1
	115 Move W2, W31
	116 Move W3, W31
	117 Move X8, [X8+184]
	118 Move X4, X31
	119 Move [X8+24], X0
	120 Move X0, [X27]
	121 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	122 Move X8, [X20]
	123 Move W1, 1
	124 Move W2, W31
	125 Move W3, W31
	126 Move X8, [X8+184]
	127 Move X4, X31
	128 Move [X8+32], X0
	129 Move X8, 0x66F000
	130 Move X8, [X8+3880]
	131 Move X0, [X8]
	132 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	133 Move X8, [X20]
	134 Move W1, 1
	135 Move W2, W31
	136 Move W3, W31
	137 Move X8, [X8+184]
	138 Move X4, X31
	139 Move [X8+40], X0
	140 Move X8, 0x66F000
	141 Move X8, [X8+3888]
	142 Move X0, [X8]
	143 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	144 Move X8, [X20]
	145 Move X9, 0x66F000
	146 Move X8, [X8+184]
	147 Move [X8+48], X0
	148 Move X9, [X9+3872]
	149 Move X9, [X9]
	150 Move [X8+56], X9
	151 Move X0, [X24]
	152 Call 0x1C17F10
	153 Move X1, [X23]
	154 Move X19, X0
	155 Call List`1<Object>..ctor, X0
	156 Move X8, [X20]
	157 Move X8, [X8+184]
	158 Move [X8+72], X19
	159 Move X0, [X22]
	160 Call 0x1C17F10
	161 Move X1, [X21]
	162 Move X19, X0
	163 Call HashSet`1<Int32>..ctor, X0
	164 Move X8, [X20]
	165 Move X8, [X8+184]
	166 Move [X8+80], X19
	167 Move X0, [X24]
	168 Call 0x1C17F10
	169 Move X1, [X23]
	170 Move X19, X0
	171 Call List`1<Object>..ctor, X0
	172 Move X8, [X20]
	173 Move X8, [X8+184]
	174 Move [X8+88], X19
	175 Move X0, [X22]
	176 Call 0x1C17F10
	177 Move X1, [X21]
	178 Move X19, X0
	179 Call HashSet`1<Int32>..ctor, X0
	180 Move X8, [X20]
	181 Move X22, [X31+64]
	182 Move X21, [X31+72]
	183 Move X24, [X31+48]
	184 Move X23, [X31+56]
	185 Move X26, [X31+32]
	186 Move X25, [X31+40]
	187 Move X8, [X8+184]
	188 Move X28, [X31+16]
	189 Move X27, [X31+24]
	190 Move [X8+96], X19
	191 Move X20, [X31+80]
	192 Move X19, [X31+88]
	193 Move X29, [X31+96]
	194 Move X30, [X31+104]
	195 Return 

