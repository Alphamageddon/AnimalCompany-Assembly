Type: TMPro.SetPropertyUtility

Method: System.Boolean SetColor(ref UnityEngine.Color currentValue, UnityEngine.Color newValue)

Disassembly:
	0x03B0E768 ADRP X8, 0x64B000
	0x03B0E76C LDR X8, [X8 + 0x4E8]
	0x03B0E770 LDR X0, [X8]
	0x03B0E774 BL 0x3C124EC
	0x03B0E778 LDR X8, [X20]
	0x03B0E77C MOV X1, X31
	0x03B0E780 LDR X8, [X8 + 0xB8]
	0x03B0E784 STR W0, [X8 + 0x84]
	0x03B0E788 ADRP X8, 0x64B000
	0x03B0E78C LDR X8, [X8 + 0x490]
	0x03B0E790 LDR X0, [X8]
	0x03B0E794 BL 0x3C124EC
	0x03B0E798 LDR X8, [X20]
	0x03B0E79C MOV X1, X31
	0x03B0E7A0 LDR X8, [X8 + 0xB8]
	0x03B0E7A4 STR W0, [X8 + 0x98]
	0x03B0E7A8 ADRP X8, 0x64B000
	0x03B0E7AC LDR X8, [X8 + 0x510]

ISIL:
	001 Move V4, [X0]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V4, [X0+4]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V4, [X0+8]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V4, [X0+12]
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W0, W31
	010 Return X0
	011 Move [X0], S0
	012 Move [X0+8], S1
	013 Move [X0+8], S2
	014 Move [X0+16], S3
	015 Move W0, 1
	016 Return X0

Method: System.Boolean SetEquatableStruct(ref T currentValue, T newValue)

Disassembly:
	0x02254BC0 LDR X30, [X31], #0x30
	0x02254BC4 RET
	0x02254BC8 BL 0x1C16F20
	0x02254BCC STP X30, X19, [X31 - 0x10]!
	0x02254BD0 LDR X8, [X1 + 0x38]
	0x02254BD4 CBNZ X8, 0x2254BFC
	0x02254BD8 ADRP X0, 0x1E9F000
	0x02254BDC LDR X0, [X0 + 0x6C0]
	0x02254BE0 MOV X19, X1
	0x02254BE4 BL 0x1C16CF4
	0x02254BE8 LDR X8, [X19 + 0x38]
	0x02254BEC CBNZ X8, 0x2254BFC
	0x02254BF0 MOV X0, X19
	0x02254BF4 BL 0x1C5C6E0
	0x02254BF8 LDR X8, [X19 + 0x38]
	0x02254BFC ADRP X9, 0x1E9F000
	0x02254C00 LDR X9, [X9 + 0x6C0]
	0x02254C04 LDR X19, [X8]
	0x02254C08 LDR X0, [X9]
	0x02254C0C LDR W9, [X0 + 0xE0]
	0x02254C10 CBNZ W9, 0x2254C18
	0x02254C14 BL 0x1C16DFC
	0x02254C18 MOV X0, X19
	0x02254C1C MOV X1, X31
	0x02254C20 BL 0x338C698
	0x02254C24 MOV W1, W31
	0x02254C28 MOV X2, X31
	0x02254C2C LDP X30, X19, [X31], #0x10
	0x02254C30 B 0x392B80C
	0x02254C34 STP X30, X23, [X31 - 0x30]!
	0x02254C38 STP X22, X21, [X31 + 0x10]
	0x02254C3C STP X20, X19, [X31 + 0x20]
	0x02254C40 MOV W21, W2
	0x02254C44 MOV X22, X1
	0x02254C48 MOV X23, X0
	0x02254C4C MOVZ W0, 0x24
	0x02254C50 MOVZ W1, 0x4
	0x02254C54 MOV X2, X31
	0x02254C58 MOV X19, X4
	0x02254C5C MOV X20, X3
	0x02254C60 BL 0x1E35B3C
	0x02254C64 ADD W8, W0, 0x3
	0x02254C68 CMP W0, 0x0
	0x02254C6C CSEL W8, W8, W0, LT
	0x02254C70 AND X1, X22, 0x0
	0x02254C74 ADD W2, W21, W8, 0x2, ASR
	0x02254C78 AND X4, X19, 0x0
	0x02254C7C MOV X0, X23
	0x02254C80 MOV X3, X20
	0x02254C84 MOV X5, X31
	0x02254C88 BL 0x1EC9828
	0x02254C8C LDP X20, X19, [X31 + 0x20]
	0x02254C90 LDP X22, X21, [X31 + 0x10]
	0x02254C94 ADD X0, X0, 0x50
	0x02254C98 LDP X30, X23, [X31], #0x30
	0x02254C9C RET
	0x02254CA0 STR X30, [X31 - 0x40]!
	0x02254CA4 STP X24, X23, [X31 + 0x10]
	0x02254CA8 STP X22, X21, [X31 + 0x20]
	0x02254CAC STP X20, X19, [X31 + 0x30]
	0x02254CB0 LDR X8, [X5 + 0x38]
	0x02254CB4 MOV X20, X4
	0x02254CB8 MOV X19, X3
	0x02254CBC MOV W21, W2
	0x02254CC0 MOV X22, X1
	0x02254CC4 MOV X23, X0
	0x02254CC8 CBNZ X8, 0x2254CDC
	0x02254CCC MOV X0, X5
	0x02254CD0 MOV X24, X5
	0x02254CD4 BL 0x1C5C6E0
	0x02254CD8 LDR X8, [X24 + 0x38]
	0x02254CDC LDR X8, [X8]
	0x02254CE0 MOVZ W1, 0x4
	0x02254CE4 MOV X2, X31
	0x02254CE8 LDR W0, [X8 + 0xFC]
	0x02254CEC BL 0x1E35B3C
	0x02254CF0 ADD W8, W0, 0x3
	0x02254CF4 CMP W0, 0x0
	0x02254CF8 CSEL W8, W8, W0, LT
	0x02254CFC AND X1, X22, 0x0
	0x02254D00 ADD W2, W21, W8, 0x2, ASR
	0x02254D04 AND X4, X20, 0x0
	0x02254D08 MOV X0, X23
	0x02254D0C MOV X3, X19
	0x02254D10 MOV X5, X31
	0x02254D14 BL 0x1EC9828
	0x02254D18 LDP X20, X19, [X31 + 0x30]
	0x02254D1C LDP X22, X21, [X31 + 0x20]
	0x02254D20 LDP X24, X23, [X31 + 0x10]
	0x02254D24 ADD X0, X0, 0x50
	0x02254D28 LDR X30, [X31], #0x40
	0x02254D2C RET
	0x02254D30 STP X30, X23, [X31 - 0x30]!
	0x02254D34 STP X22, X21, [X31 + 0x10]
	0x02254D38 STP X20, X19, [X31 + 0x20]
	0x02254D3C MOV W21, W2
	0x02254D40 MOV X22, X1
	0x02254D44 MOV X23, X0
	0x02254D48 MOVZ W0, 0xC
	0x02254D4C MOVZ W1, 0x4
	0x02254D50 MOV X2, X31
	0x02254D54 MOV X19, X4

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 32
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move [X29-8], X8
	019 Move [X29-32], X1
	020 Move X26, [X2+56]
	021 Compare X26, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X26, [X19+56]
	026 Move X0, [X26+8]
	027 Move W22, [X0+252]
	028 Move W9, [X0+309]
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {37}
	033 Call 0x1C5D684
	034 Move X26, [X19+56]
	035 Move W8, [X0+252]
	036 Move X0, [X26+8]
	037 Move W8, W22
	038 Add W8, W8, 16
	039 Add X8, X8, 15
	040 Add X9, X31, 0
	041 And X8, X8, 0x1FFFFFFFF
	042 Subtract X24, X9, X8
	043 Add X31, X24, 0
	044 Add X9, X22, 15
	045 Add X8, X31, 0
	046 And X9, X9, 0x1FFFFFFFF
	047 Subtract X23, X8, X9
	048 Add X31, X23, 0
	049 Move W8, [X0+40]
	050 Move X0, X23
	051 Move X2, X22
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X8, X29, 32
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Call 0x3EB2AC0
	056 Move X8, [X26+8]
	057 Move W9, [X8+309]
	058 Move TEMP, X9
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {66}
	062 Move X0, X8
	063 Call 0x1C5D684
	064 Move X26, [X19+56]
	065 Move X8, [X26+8]
	066 Move X0, X8
	067 Move W9, [X8+40]
	068 Move X1, [X26+24]
	069 Move X8, X23
	070 Move TEMP, X9
	071 And TEMP, TEMP, -2147483648
	072 Compare TEMP, -2147483648
	073 JumpIfEqual {75}
	074 Move X8, [X23]
	075 Subtract X4, X29, 24
	076 Subtract X5, X29, 12
	077 Move X2, X24
	078 Move X3, X20
	079 Move [X29-24], X8
	080 Call 0x1C18728
	081 NotImplemented "Instruction LDURB not yet implemented."
	082 Compare W8, 0
	083 JumpIfEqual {85}
	084 Move W0, W31
	085 Move X8, [X19+56]
	086 Move X0, X23
	087 Move X2, X22
	088 Move X8, [X8+8]
	089 Move W8, [X8+40]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X8, X29, 32
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 Call 0x3EB2AC0
	094 Move X0, X20
	095 Move X1, X23
	096 Move X2, X22
	097 Call 0x3EB2AC0
	098 Move X8, [X19+56]
	099 Move X0, [X8+8]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move W0, 1
	107 Move X8, [X25+40]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X31, X29, 0
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X26, [X31+16]
	118 Move X25, [X31+24]
	119 Move X29, [X31+80]
	120 Move X30, [X31+88]
	121 Return X0
	122 Call 0x3EB2B20

Method: System.Boolean SetStruct(ref T currentValue, T newValue)

Disassembly:
	0x02254D58 MOV X20, X3
	0x02254D5C BL 0x1E35B3C
	0x02254D60 ADD W8, W0, 0x3
	0x02254D64 CMP W0, 0x0
	0x02254D68 CSEL W8, W8, W0, LT
	0x02254D6C AND X1, X22, 0x0
	0x02254D70 ADD W2, W21, W8, 0x2, ASR
	0x02254D74 AND X4, X19, 0x0
	0x02254D78 MOV X0, X23
	0x02254D7C MOV X3, X20
	0x02254D80 MOV X5, X31
	0x02254D84 BL 0x1EC9828
	0x02254D88 LDP X20, X19, [X31 + 0x20]
	0x02254D8C LDP X22, X21, [X31 + 0x10]
	0x02254D90 ADD X0, X0, 0x50
	0x02254D94 LDP X30, X23, [X31], #0x30
	0x02254D98 RET
	0x02254D9C STR X30, [X31 - 0x40]!
	0x02254DA0 STP X24, X23, [X31 + 0x10]
	0x02254DA4 STP X22, X21, [X31 + 0x20]
	0x02254DA8 STP X20, X19, [X31 + 0x30]
	0x02254DAC LDR X8, [X5 + 0x38]
	0x02254DB0 MOV X20, X4
	0x02254DB4 MOV X19, X3
	0x02254DB8 MOV W21, W2
	0x02254DBC MOV X22, X1
	0x02254DC0 MOV X23, X0
	0x02254DC4 CBNZ X8, 0x2254DD8
	0x02254DC8 MOV X0, X5
	0x02254DCC MOV X24, X5
	0x02254DD0 BL 0x1C5C6E0
	0x02254DD4 LDR X8, [X24 + 0x38]
	0x02254DD8 LDR X8, [X8]
	0x02254DDC MOVZ W1, 0x4
	0x02254DE0 MOV X2, X31
	0x02254DE4 LDR W0, [X8 + 0xFC]
	0x02254DE8 BL 0x1E35B3C
	0x02254DEC ADD W8, W0, 0x3
	0x02254DF0 CMP W0, 0x0
	0x02254DF4 CSEL W8, W8, W0, LT
	0x02254DF8 SBFM W8, W8, 0x2, 0x1F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X20, X2
	008 Move X19, X0
	009 And W22, W1, 1
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1EA0000
	013 Move X0, [X0+2904]
	014 Call 0x1C17CF4
	015 Move X8, [X20+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X20
	019 Call 0x1C5D6E0
	020 Move X8, [X20+56]
	021 Move [X31+12], W22
	022 Move X0, [X8+8]
	023 Add X1, X31, 12
	024 Call 0x1C17E04
	025 Move X8, 0x1EA0000
	026 Move X8, [X8+2904]
	027 Move X21, X0
	028 Move X8, [X8]
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X8, [X20+56]
	035 Move X0, X19
	036 Move X1, X21
	037 Move X2, [X8+16]
	038 Call Boolean.Equals, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Move [X19], W22
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 NotImplemented "Instruction ORN not yet implemented."
	049 And W0, W8, 1
	050 Move X30, [X31+48]
	051 Return X0

Method: System.Boolean SetClass(ref T currentValue, T newValue)

Disassembly:
	0x02254B70 CBNZ W8, 0x2254B78
	0x02254B74 BL 0x1C16DFC
	0x02254B78 LDR X8, [X21 + 0x38]
	0x02254B7C LDR X0, [X8]
	0x02254B80 BL 0x2215CF0
	0x02254B84 ADRP X8, 0x1EC8000
	0x02254B88 LDR X8, [X8 + 0x4F0]
	0x02254B8C MOV W21, W0
	0x02254B90 LDR X8, [X8]
	0x02254B94 MOV X0, X8
	0x02254B98 BL 0x1C16F10
	0x02254B9C MOV W1, W20
	0x02254BA0 MOV W2, W21
	0x02254BA4 MOV X3, X31
	0x02254BA8 MOV X22, X0
	0x02254BAC BL 0x3C3AA2C
	0x02254BB0 STR X22, [X19]
	0x02254BB4 MOV X0, X22
	0x02254BB8 LDP X20, X19, [X31 + 0x20]
	0x02254BBC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0]
	006 Or X8, X1, X0
	007 Compare X8, 0
	008 JumpIfEqual {21}
	009 Move X20, X1
	010 Compare X0, 0
	011 JumpIfEqual {22}
	012 Move X8, [X0]
	013 Move X1, X20
	014 Move X9, [X8+312]
	015 Move X2, [X8+320]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {22}
	021 Move W0, W31
	022 Move W0, 1
	023 Move [X19], X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

