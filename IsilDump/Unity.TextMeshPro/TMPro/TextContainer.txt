Type: TMPro.TextContainer

Method: System.Boolean get_hasChanged()

Disassembly:
	0x03ACC9E4 RET
	0x03ACC9E8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_hasChanged(System.Boolean value)

Disassembly:
	0x03ACC9EC STP X20, X19, [X31 + 0x10]
	0x03ACC9F0 ADRP X21, 0x916000
	0x03ACC9F4 ADRP X20, 0x627000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: UnityEngine.Vector2 get_pivot()

Disassembly:
	0x03ACC9F8 LDRB W8, [X21 + 0x4CB]
	0x03ACC9FC LDR X20, [X20 + 0x598]

ISIL:
	001 Move S0, [X0+36]
	002 Move S1, [X0+40]
	003 Return X0

Method: System.Void set_pivot(UnityEngine.Vector2 value)

Disassembly:
	0x03ACCA00 MOV X19, X0
	0x03ACCA04 TBNZ X8, 0x0, 0x3ACCA28
	0x03ACCA08 ADRP X0, 0x68C000
	0x03ACCA0C LDR X0, [X0 + 0x570]
	0x03ACCA10 BL 0x1C16CF4
	0x03ACCA14 ADRP X0, 0x627000
	0x03ACCA18 LDR X0, [X0 + 0x598]
	0x03ACCA1C BL 0x1C16CF4
	0x03ACCA20 MOVZ W8, 0x1
	0x03ACCA24 STRB W8, [X21 + 0x4CB]
	0x03ACCA28 LDR X0, [X20]
	0x03ACCA2C LDR X20, [X19 + 0x378]
	0x03ACCA30 LDR W8, [X0 + 0xE0]
	0x03ACCA34 CBNZ W8, 0x3ACCA3C
	0x03ACCA38 BL 0x1C16DFC
	0x03ACCA3C MOV X0, X20
	0x03ACCA40 MOV X1, X31
	0x03ACCA44 MOV X2, X31
	0x03ACCA48 BL 0x3C3883C
	0x03ACCA4C TBZ X0, 0x0, 0x3ACCA6C
	0x03ACCA50 ADRP X8, 0x68C000
	0x03ACCA54 LDR X8, [X8 + 0x570]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move S2, [X0+36]
	004 Move S3, [X0+40]
	005 Move X8, -50208768
	006 Move V4, [X8+3872]
	007 Subtract S2, S2, S0
	008 Subtract S3, S3, S1
	009 Multiply S2, S2, S2
	010 Multiply S3, S3, S3
	011 Add S2, S2, S3
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move X19, X0
	014 Move [X0+36], S0
	015 Move [X0+44], S1
	016 Call TextContainer.GetAnchorPosition, X0, X1
	017 Move W8, 1
	018 Move [X19+44], W0
	019 Move [X19+32], W8
	020 Move X0, X19
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call TextContainer.OnContainerChanged, X0
	024 Return 
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return 

Method: TMPro.TextContainerAnchors get_anchorPosition()

Disassembly:
	0x03ACCC60 MOVZ W8, 0x1
	0x03ACCC64 STRB W8, [X21 + 0x4DE]

ISIL:
	001 Move W0, [X0+44]
	002 Return X0

Method: System.Void set_anchorPosition(TMPro.TextContainerAnchors value)

Disassembly:
	0x03ACCC68 ADRP X21, 0x68C000
	0x03ACCC6C LDR X21, [X21 + 0x338]
	0x03ACCC70 CMP W20, 0x2
	0x03ACCC74 B.EQ 0x3ACCCB8
	0x03ACCC78 CMP W20, 0x1
	0x03ACCC7C B.EQ 0x3ACCD00
	0x03ACCC80 CBNZ W20, 0x3ACCD70
	0x03ACCC84 LDR X0, [X21]
	0x03ACCC88 LDR X20, [X19 + 0x110]
	0x03ACCC8C LDR W8, [X0 + 0xE0]
	0x03ACCC90 CBNZ W8, 0x3ACCC98
	0x03ACCC94 BL 0x1C16DFC
	0x03ACCC98 CBZ X20, 0x3ACCD7C
	0x03ACCC9C LDR X8, [X21]
	0x03ACCCA0 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+44]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X30, [X31+16]
	006 Move X19, [X31+24]
	007 Return 
	008 Move X19, X0
	009 Move [X0+44], W1
	010 Call TextContainer.GetPivot, X0, X1
	011 Move W8, 1
	012 Move [X19+36], S0
	013 Move [X19+44], S1
	014 Move [X19+32], W8
	015 Move X0, X19
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call TextContainer.OnContainerChanged, X0
	019 Return 

Method: UnityEngine.Rect get_rect()

Disassembly:
	0x03ACCD1C MOV X0, X20
	0x03ACCD20 MOV X2, X31
	0x03ACCD24 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move S0, [X0+48]
	002 Move S1, [X0+52]
	003 Move S2, [X0+56]
	004 Move S3, [X0+60]
	005 Return X0

Method: System.Void set_rect(UnityEngine.Rect value)

Disassembly:
	0x03ACCD28 LDR X1, [X8 + 0x100]
	0x03ACCD2C BL 0x3C14E3C
	0x03ACCD30 LDR X0, [X19 + 0x110]
	0x03ACCD34 CBZ X0, 0x3ACCD7C
	0x03ACCD38 LDR X8, [X21]
	0x03ACCD3C LDR X8, [X8 + 0xB8]
	0x03ACCD40 LDR X1, [X8 + 0xF8]
	0x03ACCD44 MOV X2, X31
	0x03ACCD48 BL 0x3C14E80
	0x03ACCD4C LDR X0, [X19 + 0x110]
	0x03ACCD50 CBZ X0, 0x3ACCD7C
	0x03ACCD54 LDR X8, [X21]
	0x03ACCD58 LDP X20, X19, [X31 + 0x10]
	0x03ACCD5C MOV X2, X31
	0x03ACCD60 LDR X8, [X8 + 0xB8]
	0x03ACCD64 LDR X1, [X8 + 0x108]
	0x03ACCD68 LDP X30, X21, [X31], #0x20
	0x03ACCD6C B 0x3C14E80

ISIL:
	001 Move V4, [X0+48]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V4, [X0+60]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V4, [X0+56]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V4, [X0+52]
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Return 
	010 Move W8, 1
	011 Move [X0+48], S0
	012 Move [X0+56], S1
	013 Move [X0+56], S2
	014 Move [X0+64], S3
	015 Move [X0+32], W8
	016 Call TextContainer.OnContainerChanged, X0
	017 Return 

Method: UnityEngine.Vector2 get_size()

Disassembly:
	0x03ACCD70 LDP X20, X19, [X31 + 0x10]
	0x03ACCD74 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move S0, [X0+56]
	002 Move S1, [X0+60]
	003 Return X0

Method: System.Void set_size(UnityEngine.Vector2 value)

Disassembly:
	0x03ACCD78 RET
	0x03ACCD7C BL 0x1C16F20
	0x03ACCD80 STP D11, D10, [X31 - 0x30]!
	0x03ACCD84 STP D9, D8, [X31 + 0x10]
	0x03ACCD88 STP X30, X19, [X31 + 0x20]
	0x03ACCD8C MOV V8.16B, V3.16B
	0x03ACCD90 MOV V9.16B, V2.16B
	0x03ACCD94 MOV V10.16B, V1.16B
	0x03ACCD98 MOV V11.16B, V0.16B
	0x03ACCD9C MOV X19, X0
	0x03ACCDA0 BL 0x3ACCC38
	0x03ACCDA4 MOV X0, X19
	0x03ACCDA8 MOV V2.16B, V9.16B
	0x03ACCDAC MOV V3.16B, V8.16B
	0x03ACCDB0 LDP X30, X19, [X31 + 0x20]
	0x03ACCDB4 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Move S2, [X0+56]
	002 Move S3, [X0+60]
	003 Move X8, -50208768
	004 Move V4, [X8+3872]
	005 Subtract S2, S2, S0
	006 Subtract S3, S3, S1
	007 Multiply S2, S2, S2
	008 Multiply S3, S3, S3
	009 Add S2, S2, S3
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move W8, 1
	012 Move [X0+56], S0
	013 Move [X0+64], S1
	014 Move [X0+32], W8
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Call TextContainer.OnContainerChanged, X0
	017 Return 
	018 Return 

Method: System.Single get_width()

Disassembly:
	0x03ACCDC0 LDP D11, D10, [X31], #0x30
	0x03ACCDC4 B 0x3ACCDC8

ISIL:
	001 Move V0, [X0+56]
	002 Return V0

Method: System.Void set_width(System.Single value)

Disassembly:
	0x03ACCDC8 STP D11, D10, [X31 - 0x40]!
	0x03ACCDCC STP D9, D8, [X31 + 0x10]
	0x03ACCDD0 STP X30, X21, [X31 + 0x20]
	0x03ACCDD4 STP X20, X19, [X31 + 0x30]
	0x03ACCDD8 ADRP X21, 0x916000

ISIL:
	001 Move W8, 1
	002 Move [X0+56], S0
	003 Move [X0+32], W8
	004 Move [X0+64], W31
	005 Call TextContainer.OnContainerChanged, X0
	006 Return 

Method: System.Single get_height()

Disassembly:
	0x03ACCDDC ADRP X20, 0x68C000
	0x03ACCDE0 LDRB W8, [X21 + 0x4DF]

ISIL:
	001 Move V0, [X0+60]
	002 Return V0

Method: System.Void set_height(System.Single value)

Disassembly:
	0x03ACCDE4 LDR X20, [X20 + 0x338]
	0x03ACCDE8 MOV V8.16B, V3.16B
	0x03ACCDEC MOV V9.16B, V2.16B
	0x03ACCDF0 MOV V10.16B, V1.16B
	0x03ACCDF4 MOV V11.16B, V0.16B

ISIL:
	001 Move W8, 1
	002 Move [X0+60], S0
	003 Move [X0+32], W8
	004 Move [X0+65], W31
	005 Call TextContainer.OnContainerChanged, X0
	006 Return 

Method: System.Boolean get_isDefaultWidth()

Disassembly:
	0x03ACCDF8 MOV X19, X0
	0x03ACCDFC TBNZ X8, 0x0, 0x3ACCE14

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Boolean get_isDefaultHeight()

Disassembly:
	0x03ACCE00 ADRP X0, 0x68C000
	0x03ACCE04 LDR X0, [X0 + 0x338]

ISIL:
	001 Move W0, [X0+65]
	002 Return X0

Method: System.Boolean get_isAutoFitting()

Disassembly:
	0x03ACCE08 BL 0x1C16CF4
	0x03ACCE0C MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+66]
	002 Return X0

Method: System.Void set_isAutoFitting(System.Boolean value)

Disassembly:
	0x03ACCE10 STRB W8, [X21 + 0x4DF]
	0x03ACCE14 LDR X0, [X20]
	0x03ACCE18 LDR X19, [X19 + 0x110]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+66], W8
	003 Return 

Method: UnityEngine.Vector3[] get_corners()

Disassembly:
	0x03ACCE1C LDR W8, [X0 + 0xE0]
	0x03ACCE20 CBNZ W8, 0x3ACCE28

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: UnityEngine.Vector3[] get_worldCorners()

Disassembly:
	0x03ACCE24 BL 0x1C16DFC
	0x03ACCE28 CBZ X19, 0x3ACCE64

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: UnityEngine.Vector4 get_margins()

Disassembly:
	0x03ACCE2C LDR X8, [X20]
	0x03ACCE30 MOV X0, X19
	0x03ACCE34 MOV V2.16B, V9.16B

ISIL:
	001 Move S0, [X0+88]
	002 Move S1, [X0+92]
	003 Move S2, [X0+96]
	004 Move S3, [X0+100]
	005 Return X0

Method: System.Void set_margins(UnityEngine.Vector4 value)

Disassembly:
	0x03ACCE38 MOV V3.16B, V8.16B
	0x03ACCE3C LDR X8, [X8 + 0xB8]
	0x03ACCE40 LDP X20, X19, [X31 + 0x30]
	0x03ACCE44 LDP X30, X21, [X31 + 0x20]
	0x03ACCE48 LDP D9, D8, [X31 + 0x10]
	0x03ACCE4C LDR W1, [X8 + 0x9C]
	0x03ACCE50 MOV V0.16B, V11.16B
	0x03ACCE54 MOV V1.16B, V10.16B
	0x03ACCE58 MOV X2, X31
	0x03ACCE5C LDP D11, D10, [X31], #0x40
	0x03ACCE60 B 0x3C15D80
	0x03ACCE64 BL 0x1C16F20
	0x03ACCE68 STP D13, D12, [X31 - 0x40]!
	0x03ACCE6C STP D11, D10, [X31 + 0x10]
	0x03ACCE70 STP D9, D8, [X31 + 0x20]
	0x03ACCE74 STP X30, X19, [X31 + 0x30]
	0x03ACCE78 MOV V8.16B, V5.16B
	0x03ACCE7C MOV V9.16B, V4.16B
	0x03ACCE80 MOV V10.16B, V3.16B
	0x03ACCE84 MOV V11.16B, V2.16B
	0x03ACCE88 MOV V12.16B, V1.16B
	0x03ACCE8C MOV V13.16B, V0.16B
	0x03ACCE90 MOV X19, X0

ISIL:
	001 Move S4, [X0+88]
	002 Move S5, [X0+92]
	003 Move S6, [X0+96]
	004 Move S7, [X0+100]
	005 Move X8, -50208768
	006 Subtract S4, S4, S0
	007 Subtract S5, S5, S1
	008 Multiply S4, S4, S4
	009 Multiply S5, S5, S5
	010 Add S4, S4, S5
	011 Move V5, [X8+3872]
	012 Subtract S6, S6, S2
	013 Subtract S7, S7, S3
	014 Multiply S6, S6, S6
	015 Add S4, S6, S4
	016 Multiply S6, S7, S7
	017 Add S4, S6, S4
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move W8, 1
	020 Move [X0+88], S0
	021 Move [X0+96], S1
	022 Move [X0+96], S2
	023 Move [X0+104], S3
	024 Move [X0+32], W8
	025 Call TextContainer.OnContainerChanged, X0
	026 Return 
	027 Return 

Method: UnityEngine.RectTransform get_rectTransform()

Disassembly:
	0x03ACCE94 BL 0x3ACCC38
	0x03ACCE98 MOV X0, X19
	0x03ACCE9C MOV V2.16B, V11.16B
	0x03ACCEA0 MOV V3.16B, V10.16B
	0x03ACCEA4 MOV V4.16B, V9.16B
	0x03ACCEA8 MOV V5.16B, V8.16B
	0x03ACCEAC LDP X30, X19, [X31 + 0x30]
	0x03ACCEB0 LDP D9, D8, [X31 + 0x20]
	0x03ACCEB4 LDP D11, D10, [X31 + 0x10]
	0x03ACCEB8 MOV V0.16B, V13.16B
	0x03ACCEBC MOV V1.16B, V12.16B
	0x03ACCEC0 LDP D13, D12, [X31], #0x40
	0x03ACCEC4 B 0x3ACCEC8
	0x03ACCEC8 STP D13, D12, [X31 - 0x50]!
	0x03ACCECC STP D11, D10, [X31 + 0x10]
	0x03ACCED0 STP D9, D8, [X31 + 0x20]
	0x03ACCED4 STP X30, X21, [X31 + 0x30]
	0x03ACCED8 STP X20, X19, [X31 + 0x40]
	0x03ACCEDC ADRP X20, 0x916000
	0x03ACCEE0 ADRP X21, 0x68C000
	0x03ACCEE4 LDRB W8, [X20 + 0x4E0]
	0x03ACCEE8 LDR X21, [X21 + 0x338]
	0x03ACCEEC MOV V8.16B, V5.16B
	0x03ACCEF0 MOV V9.16B, V4.16B
	0x03ACCEF4 MOV V10.16B, V3.16B
	0x03ACCEF8 MOV V11.16B, V2.16B
	0x03ACCEFC MOV V12.16B, V1.16B
	0x03ACCF00 MOV V13.16B, V0.16B
	0x03ACCF04 MOV X19, X0
	0x03ACCF08 TBNZ X8, 0x0, 0x3ACCF20
	0x03ACCF0C ADRP X0, 0x68C000
	0x03ACCF10 LDR X0, [X0 + 0x338]
	0x03ACCF14 BL 0x1C16CF4
	0x03ACCF18 MOVZ W8, 0x1
	0x03ACCF1C STRB W8, [X20 + 0x4E0]
	0x03ACCF20 LDR X0, [X21]
	0x03ACCF24 LDR X20, [X19 + 0x110]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x917000
	006 Move X20, 0x628000
	007 Move W8, [X21+1214]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x62A000
	015 Move X0, [X0+1720]
	016 Call 0x1C17CF4
	017 Move X0, 0x628000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1214], W8
	022 Move X0, [X20]
	023 Move X20, [X19+104]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x62A000
	037 Move X8, [X8+1720]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+104], X0
	042 Move X0, [X19+104]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: TMPro.TextMeshPro get_textMeshPro()

Disassembly:
	0x03ACCF28 LDR W8, [X0 + 0xE0]
	0x03ACCF2C CBNZ W8, 0x3ACCF34
	0x03ACCF30 BL 0x1C16DFC
	0x03ACCF34 CBZ X20, 0x3ACCFB4
	0x03ACCF38 LDR X8, [X21]
	0x03ACCF3C MOV X0, X20
	0x03ACCF40 MOV V0.16B, V13.16B
	0x03ACCF44 MOV V1.16B, V12.16B
	0x03ACCF48 LDR X8, [X8 + 0xB8]
	0x03ACCF4C MOV V2.16B, V11.16B
	0x03ACCF50 MOV V3.16B, V10.16B
	0x03ACCF54 MOV X2, X31
	0x03ACCF58 LDR W1, [X8 + 0x9C]
	0x03ACCF5C BL 0x3C15D80
	0x03ACCF60 LDR X0, [X19 + 0x110]
	0x03ACCF64 CBZ X0, 0x3ACCFB4
	0x03ACCF68 LDR X8, [X21]
	0x03ACCF6C MOV V0.16B, V9.16B
	0x03ACCF70 MOV X2, X31
	0x03ACCF74 LDR X8, [X8 + 0xB8]
	0x03ACCF78 LDR W1, [X8 + 0xA0]
	0x03ACCF7C BL 0x3C15CD8
	0x03ACCF80 LDR X0, [X19 + 0x110]
	0x03ACCF84 CBZ X0, 0x3ACCFB4
	0x03ACCF88 LDR X8, [X21]
	0x03ACCF8C MOV V0.16B, V8.16B
	0x03ACCF90 LDP X20, X19, [X31 + 0x40]
	0x03ACCF94 LDP X30, X21, [X31 + 0x30]
	0x03ACCF98 LDR X8, [X8 + 0xB8]
	0x03ACCF9C LDP D9, D8, [X31 + 0x20]
	0x03ACCFA0 LDP D11, D10, [X31 + 0x10]
	0x03ACCFA4 MOV X2, X31
	0x03ACCFA8 LDR W1, [X8 + 0xA4]
	0x03ACCFAC LDP D13, D12, [X31], #0x50
	0x03ACCFB0 B 0x3C15CD8
	0x03ACCFB4 BL 0x1C16F20
	0x03ACCFB8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x917000
	006 Move X20, 0x628000
	007 Move W8, [X21+1215]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x68D000
	015 Move X0, [X0+1352]
	016 Call 0x1C17CF4
	017 Move X0, 0x628000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1215], W8
	022 Move X0, [X20]
	023 Move X20, [X19+112]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x68D000
	037 Move X8, [X8+1352]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+112], X0
	042 Move X0, [X19+112]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void Awake()

Disassembly:
	0x03ACCFBC STP X20, X19, [X31 + 0x10]
	0x03ACCFC0 ADRP X20, 0x916000
	0x03ACCFC4 ADRP X21, 0x627000
	0x03ACCFC8 LDRB W8, [X20 + 0x4CF]
	0x03ACCFCC LDR X21, [X21 + 0x598]
	0x03ACCFD0 MOV X19, X0
	0x03ACCFD4 TBNZ X8, 0x0, 0x3ACCFF8
	0x03ACCFD8 ADRP X0, 0x627000
	0x03ACCFDC LDR X0, [X0 + 0x598]
	0x03ACCFE0 BL 0x1C16CF4
	0x03ACCFE4 ADRP X0, 0x68C000
	0x03ACCFE8 LDR X0, [X0 + 0x568]
	0x03ACCFEC BL 0x1C16CF4
	0x03ACCFF0 MOVZ W8, 0x1
	0x03ACCFF4 STRB W8, [X20 + 0x4CF]
	0x03ACCFF8 LDR X0, [X21]
	0x03ACCFFC LDR W8, [X0 + 0xE0]
	0x03ACD000 CBNZ W8, 0x3ACD008
	0x03ACD004 BL 0x1C16DFC
	0x03ACD008 MOV X0, X19
	0x03ACD00C MOV X1, X31
	0x03ACD010 MOV X2, X31
	0x03ACD014 BL 0x3C3883C
	0x03ACD018 TBNZ X0, 0x0, 0x3ACD05C
	0x03ACD01C LDR X8, [X19]
	0x03ACD020 MOV X0, X19
	0x03ACD024 LDP X9, X1, [X8 + 0x1C8]
	0x03ACD028 BLR X9
	0x03ACD02C TBZ X0, 0x0, 0x3ACD05C
	0x03ACD030 ADRP X8, 0x68B000
	0x03ACD034 LDR X8, [X8 + 0x568]
	0x03ACD038 LDR X0, [X8]
	0x03ACD03C LDR W8, [X0 + 0xE0]
	0x03ACD040 CBNZ W8, 0x3ACD048
	0x03ACD044 BL 0x1C16DFC
	0x03ACD048 MOV X0, X19
	0x03ACD04C LDP X20, X19, [X31 + 0x10]
	0x03ACD050 MOV X1, X31
	0x03ACD054 LDP X30, X21, [X31], #0x20
	0x03ACD058 B 0x3B20540
	0x03ACD05C LDP X20, X19, [X31 + 0x10]
	0x03ACD060 LDP X30, X21, [X31], #0x20
	0x03ACD064 RET
	0x03ACD068 STP X30, X21, [X31 - 0x20]!
	0x03ACD06C STP X20, X19, [X31 + 0x10]
	0x03ACD070 ADRP X21, 0x915000
	0x03ACD074 ADRP X20, 0x626000
	0x03ACD078 LDRB W8, [X21 + 0x4D0]
	0x03ACD07C LDR X20, [X20 + 0x598]
	0x03ACD080 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x917000
	007 Move W8, [X20+1216]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x628000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x650000
	017 Move X0, [X0+1784]
	018 Call 0x1C17CF4
	019 Move X0, 0x68D000
	020 Move X0, [X0+1360]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1216], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call Component.get_gameObject, X0
	027 Compare X0, 0
	028 JumpIfEqual {60}
	029 Move X20, 0x68C000
	030 Move X21, 0x64F000
	031 Move X22, 0x627000
	032 Move X20, [X20+1360]
	033 Move X21, [X21+1784]
	034 Move X22, [X22+2600]
	035 Move X1, X31
	036 Call Object.get_name, X0
	037 Move X8, [X20]
	038 Move X2, [X21]
	039 Move X1, X0
	040 Move X3, X31
	041 Move X0, X8
	042 Call String.Concat, X0, X1, X2
	043 Move X8, [X22]
	044 Move X20, X0
	045 Move W9, [X8+224]
	046 Compare W9, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call Debug.LogWarning, X0, X1
	059 Return 
	060 Call 0x1C17F20

Method: System.Void OnEnable()

Disassembly:
	0x03ACD084 TBNZ X8, 0x0, 0x3ACD0A8

ISIL:
	001 Call TextContainer.OnContainerChanged, X0
	002 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03ACD088 ADRP X0, 0x629000

ISIL:
	001 Return 

Method: System.Void OnContainerChanged()

Disassembly:
	0x03ACCB50 LDR X0, [X0 + 0xB38]
	0x03ACCB54 BL 0x1C16CF4
	0x03ACCB58 ADRP X0, 0x62E000
	0x03ACCB5C LDR X0, [X0 + 0x6F0]
	0x03ACCB60 BL 0x1C16CF4
	0x03ACCB64 ADRP X0, 0x627000
	0x03ACCB68 LDR X0, [X0 + 0x598]
	0x03ACCB6C BL 0x1C16CF4
	0x03ACCB70 MOVZ W8, 0x1
	0x03ACCB74 STRB W8, [X20 + 0x4CE]
	0x03ACCB78 LDR X0, [X21]
	0x03ACCB7C LDR X20, [X19 + 0x6F0]
	0x03ACCB80 LDR W8, [X0 + 0xE0]
	0x03ACCB84 CBNZ W8, 0x3ACCB8C
	0x03ACCB88 BL 0x1C16DFC
	0x03ACCB8C MOV X0, X20
	0x03ACCB90 MOV X1, X31
	0x03ACCB94 MOV X2, X31
	0x03ACCB98 BL 0x3C3883C
	0x03ACCB9C TBZ X0, 0x0, 0x3ACCC14
	0x03ACCBA0 ADRP X8, 0x62E000
	0x03ACCBA4 LDR X8, [X8 + 0xB38]
	0x03ACCBA8 MOV X0, X19
	0x03ACCBAC LDR X1, [X8]
	0x03ACCBB0 BL 0x21A3894
	0x03ACCBB4 STR X0, [X19 + 0x6F0]
	0x03ACCBB8 MOV X20, X0
	0x03ACCBBC LDR X0, [X21]
	0x03ACCBC0 LDR W8, [X0 + 0xE0]
	0x03ACCBC4 CBNZ W8, 0x3ACCBCC
	0x03ACCBC8 BL 0x1C16DFC
	0x03ACCBCC MOV X0, X20
	0x03ACCBD0 MOV X1, X31
	0x03ACCBD4 MOV X2, X31
	0x03ACCBD8 BL 0x3C3883C
	0x03ACCBDC TBZ X0, 0x0, 0x3ACCC14
	0x03ACCBE0 MOV X0, X19
	0x03ACCBE4 MOV X1, X31
	0x03ACCBE8 BL 0x3C32ECC
	0x03ACCBEC CBZ X0, 0x3ACCC24
	0x03ACCBF0 ADRP X8, 0x62E000
	0x03ACCBF4 LDR X8, [X8 + 0x6F0]
	0x03ACCBF8 LDR X1, [X8]
	0x03ACCBFC BL 0x21E51FC
	0x03ACCC00 STR X0, [X19 + 0x6F0]
	0x03ACCC04 CBZ X0, 0x3ACCC24
	0x03ACCC08 MOVZ W1, 0x3F
	0x03ACCC0C MOV X2, X31
	0x03ACCC10 BL 0x3C396EC
	0x03ACCC14 LDR X0, [X19 + 0x6F0]
	0x03ACCC18 LDP X20, X19, [X31 + 0x10]
	0x03ACCC1C LDP X30, X21, [X31], #0x20
	0x03ACCC20 RET
	0x03ACCC24 BL 0x1C16F20
	0x03ACCC28 LDR W0, [X0 + 0x710]
	0x03ACCC2C RET
	0x03ACCC30 STR W1, [X0 + 0x710]
	0x03ACCC34 B 0x3ACCC38
	0x03ACCC38 STP X30, X21, [X31 - 0x20]!
	0x03ACCC3C STP X20, X19, [X31 + 0x10]
	0x03ACCC40 ADRP X21, 0x916000
	0x03ACCC44 LDRB W8, [X21 + 0x4DE]
	0x03ACCC48 MOV W20, W1
	0x03ACCC4C MOV X19, X0
	0x03ACCC50 TBNZ X8, 0x0, 0x3ACCC68
	0x03ACCC54 ADRP X0, 0x68C000
	0x03ACCC58 LDR X0, [X0 + 0x338]
	0x03ACCC5C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x917000
	006 Move X21, 0x628000
	007 Move W8, [X20+1217]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x628000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1217], W8
	019 Move X0, X19
	020 Call TextContainer.UpdateCorners, X0
	021 Move X0, [X21]
	022 Move X20, [X19+104]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {48}
	035 Move X0, [X19+104]
	036 Compare X0, 0
	037 JumpIfEqual {92}
	038 Move S0, [X19+56]
	039 Move S1, [X19+60]
	040 Move X1, X31
	041 Call RectTransform.set_sizeDelta, X0, X1
	042 Move X0, [X19+104]
	043 Compare X0, 0
	044 JumpIfEqual {92}
	045 Move W1, 1
	046 Move X2, X31
	047 Call Transform.set_hasChanged, X0, X1
	048 Move X0, X19
	049 Call TextContainer.get_textMeshPro, X0
	050 Move X8, [X21]
	051 Move X20, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {87}
	065 Move X0, [X19+112]
	066 Compare X0, 0
	067 JumpIfEqual {92}
	068 Move X8, [X0]
	069 Move X9, [X8+760]
	070 Move X1, [X8+768]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X0, [X19+112]
	073 Compare X0, 0
	074 JumpIfEqual {92}
	075 Move X8, [X0]
	076 Move S2, [X19+96]
	077 Move S3, [X19+100]
	078 Move S0, [X19+88]
	079 Move S1, [X19+92]
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X2, [X8+1496]
	083 Move X1, [X8+1504]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 CallNoReturn X2
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 Return 
	092 Call 0x1C17F20

Method: System.Void OnRectTransformDimensionsChange()

Disassembly:
	0x03ACD1E0 MOV X2, X31
	0x03ACD1E4 BL 0x3C3883C
	0x03ACD1E8 TBNZ X0, 0x0, 0x3ACD260
	0x03ACD1EC CMP W20, 0x3
	0x03ACD1F0 B.EQ 0x3ACD238
	0x03ACD1F4 CBNZ W20, 0x3ACD260
	0x03ACD1F8 LDRB W8, [X19 + 0x399]
	0x03ACD1FC CBZ W8, 0x3ACD260
	0x03ACD200 LDR X20, [X19 + 0x380]
	0x03ACD204 MOVZ W8, 0x7F800000
	0x03ACD208 FMOV S0, W8
	0x03ACD20C MOV X0, X19
	0x03ACD210 MOV V1.16B, V0.16B
	0x03ACD214 MOV X1, X31
	0x03ACD218 BL 0x3AFD90C
	0x03ACD21C CBZ X20, 0x3ACD270
	0x03ACD220 MOV X0, X20
	0x03ACD224 LDP X20, X19, [X31 + 0x20]
	0x03ACD228 LDP X22, X21, [X31 + 0x10]
	0x03ACD22C MOV X1, X31
	0x03ACD230 LDR X30, [X31], #0x30
	0x03ACD234 B 0x3C3E99C
	0x03ACD238 MOV X0, X19
	0x03ACD23C BL 0x3ACD274
	0x03ACD240 LDRB W8, [X19 + 0x140]
	0x03ACD244 CBZ W8, 0x3ACD260
	0x03ACD248 LDR X8, [X19]
	0x03ACD24C MOV X0, X19
	0x03ACD250 LDR X9, [X8 + 0x3B8]
	0x03ACD254 LDR X1, [X8 + 0x3C0]
	0x03ACD258 BLR X9
	0x03ACD25C STRB W31, [X19 + 0x140]
	0x03ACD260 LDP X20, X19, [X31 + 0x20]
	0x03ACD264 LDP X22, X21, [X31 + 0x10]
	0x03ACD268 LDR X30, [X31], #0x30
	0x03ACD26C RET
	0x03ACD270 BL 0x1C16F20
	0x03ACD274 STR X30, [X31 - 0x20]!
	0x03ACD278 STP X20, X19, [X31 + 0x10]
	0x03ACD27C ADRP X20, 0x915000
	0x03ACD280 LDRB W8, [X20 + 0x4F2]
	0x03ACD284 MOV X19, X0
	0x03ACD288 TBNZ X8, 0x0, 0x3ACD2D0
	0x03ACD28C ADRP X0, 0x626000
	0x03ACD290 LDR X0, [X0 + 0xA28]
	0x03ACD294 BL 0x1C16CF4
	0x03ACD298 ADRP X0, 0x626000
	0x03ACD29C LDR X0, [X0 + 0x598]
	0x03ACD2A0 BL 0x1C16CF4
	0x03ACD2A4 ADRP X0, 0x68B000
	0x03ACD2A8 LDR X0, [X0 + 0x578]
	0x03ACD2AC BL 0x1C16CF4
	0x03ACD2B0 ADRP X0, 0x68B000
	0x03ACD2B4 LDR X0, [X0 + 0x580]
	0x03ACD2B8 BL 0x1C16CF4
	0x03ACD2BC ADRP X0, 0x68B000
	0x03ACD2C0 LDR X0, [X0 + 0x588]
	0x03ACD2C4 BL 0x1C16CF4
	0x03ACD2C8 MOVZ W8, 0x1
	0x03ACD2CC STRB W8, [X20 + 0x4F2]
	0x03ACD2D0 LDRB W8, [X19 + 0x3FD]
	0x03ACD2D4 CBZ W8, 0x3ACD4AC
	0x03ACD2D8 LDR X8, [X19]
	0x03ACD2DC MOV X0, X19
	0x03ACD2E0 LDP X9, X1, [X8 + 0x1C8]
	0x03ACD2E4 BLR X9
	0x03ACD2E8 TBNZ X0, 0x0, 0x3ACD2F4
	0x03ACD2EC LDRB W8, [X19 + 0x6AC]
	0x03ACD2F0 CBZ W8, 0x3ACD4AC
	0x03ACD2F4 ADRP X8, 0x626000
	0x03ACD2F8 LDR X8, [X8 + 0x598]
	0x03ACD2FC LDR X20, [X19 + 0xF8]
	0x03ACD300 LDR X0, [X8]
	0x03ACD304 LDR W8, [X0 + 0xE0]
	0x03ACD308 CBNZ W8, 0x3ACD310
	0x03ACD30C BL 0x1C16DFC
	0x03ACD310 MOV X0, X20
	0x03ACD314 MOV X1, X31
	0x03ACD318 MOV X2, X31
	0x03ACD31C BL 0x3C3883C
	0x03ACD320 TBZ X0, 0x0, 0x3ACD398
	0x03ACD324 MOV X0, X19
	0x03ACD328 BL 0x3ACC9E8
	0x03ACD32C CBZ X0, 0x3ACD4B8
	0x03ACD330 MOV X1, X31
	0x03ACD334 BL 0x3C389D4
	0x03ACD338 ADRP X8, 0x68B000

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x916000
	008 Move X20, 0x627000
	009 Move W8, [X21+1218]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x68C000
	017 Move X0, [X0+1368]
	018 Call 0x1C17CF4
	019 Move X0, 0x627000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x68C000
	023 Move X0, [X0+1376]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1218], W8
	027 Move X0, X19
	028 Call TextContainer.get_rectTransform, X0
	029 Move X8, [X20]
	030 Move X20, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X20
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {54}
	044 Move X0, X19
	045 Move X1, X31
	046 Call Component.get_gameObject, X0
	047 Compare X0, 0
	048 JumpIfEqual {105}
	049 Move X8, 0x68C000
	050 Move X8, [X8+1368]
	051 Move X1, [X8]
	052 Call 0x21E61FC, X0
	053 Move [X19+104], X0
	054 Move X0, [X19+104]
	055 Compare X0, 0
	056 JumpIfEqual {105}
	057 Move X20, 0x68C000
	058 Move X20, [X20+1376]
	059 Move X1, X31
	060 Call RectTransform.get_sizeDelta, X0
	061 Move X0, [X20]
	062 Move V8, V0
	063 Move V9, V1
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X20]
	069 Move X8, [X0+184]
	070 Move S0, [X8]
	071 Move S1, [X8+4]
	072 Move X8, -50212864
	073 Move V2, [X8+3872]
	074 Subtract S0, S8, S0
	075 Subtract S1, S9, S1
	076 Multiply S0, S0, S0
	077 Multiply S1, S1, S1
	078 Add S0, S0, S1
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move X0, [X19+104]
	081 Compare X0, 0
	082 JumpIfEqual {105}
	083 Move X1, X31
	084 Call RectTransform.get_sizeDelta, X0
	085 Move X0, X19
	086 Call TextContainer.set_size, X0, X1
	087 Move X0, [X19+104]
	088 Compare X0, 0
	089 JumpIfEqual {105}
	090 Move X1, X31
	091 Call RectTransform.get_pivot, X0
	092 Move X0, X19
	093 Call TextContainer.set_pivot, X0, X1
	094 Move W8, 1
	095 Move [X19+32], W8
	096 Move X0, X19
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X30, [X31+16]
	100 Move X21, [X31+24]
	101 Move D9, [X31+48]
	102 Move D8, [X31+56]
	103 Call TextContainer.OnContainerChanged, X0
	104 Return 
	105 Call 0x1C17F20

Method: System.Void SetRect(UnityEngine.Vector2 size)

Disassembly:
	0x03ACCDB8 MOV V0.16B, V11.16B
	0x03ACCDBC MOV V1.16B, V10.16B

ISIL:
	001 Move [X0+56], S0
	002 Move [X0+64], S1
	003 Return 

Method: System.Void UpdateCorners()

Disassembly:
	0x03ACD08C LDR X0, [X0 + 0x920]
	0x03ACD090 BL 0x1C16CF4
	0x03ACD094 ADRP X0, 0x626000
	0x03ACD098 LDR X0, [X0 + 0x598]
	0x03ACD09C BL 0x1C16CF4
	0x03ACD0A0 MOVZ W8, 0x1
	0x03ACD0A4 STRB W8, [X21 + 0x4D0]
	0x03ACD0A8 MOVZ W8, 0x1
	0x03ACD0AC STRB W8, [X19 + 0x3E8]
	0x03ACD0B0 STRB W8, [X19 + 0x3F4]
	0x03ACD0B4 LDR X0, [X20]
	0x03ACD0B8 LDR W8, [X0 + 0xE0]
	0x03ACD0BC CBNZ W8, 0x3ACD0C4
	0x03ACD0C0 BL 0x1C16DFC
	0x03ACD0C4 MOV X0, X19
	0x03ACD0C8 MOV X1, X31
	0x03ACD0CC MOV X2, X31
	0x03ACD0D0 BL 0x3C3883C
	0x03ACD0D4 TBNZ X0, 0x0, 0x3ACD12C
	0x03ACD0D8 LDR X8, [X19]
	0x03ACD0DC MOV X0, X19
	0x03ACD0E0 LDP X9, X1, [X8 + 0x1C8]
	0x03ACD0E4 BLR X9
	0x03ACD0E8 TBZ X0, 0x0, 0x3ACD12C
	0x03ACD0EC MOV X0, X19
	0x03ACD0F0 MOV X1, X31
	0x03ACD0F4 BL 0x3AF8E0C
	0x03ACD0F8 ADRP X8, 0x629000
	0x03ACD0FC LDR X8, [X8 + 0x920]
	0x03ACD100 MOV X20, X0
	0x03ACD104 LDR X8, [X8]
	0x03ACD108 LDR W9, [X8 + 0xE0]
	0x03ACD10C CBNZ W9, 0x3ACD118
	0x03ACD110 MOV X0, X8
	0x03ACD114 BL 0x1C16DFC
	0x03ACD118 MOV X0, X20
	0x03ACD11C MOV X1, X31
	0x03ACD120 BL 0x3E2F3D8
	0x03ACD124 MOVZ W8, 0x1
	0x03ACD128 STRB W8, [X19 + 0x3FC]
	0x03ACD12C LDP X20, X19, [X31 + 0x10]
	0x03ACD130 LDP X30, X21, [X31], #0x20
	0x03ACD134 RET
	0x03ACD138 LDR X8, [X0]
	0x03ACD13C LDR X2, [X8 + 0x3B8]
	0x03ACD140 LDR X1, [X8 + 0x3C0]
	0x03ACD144 BR X2
	0x03ACD148 STP X30, X19, [X31 - 0x10]!
	0x03ACD14C LDR X8, [X0]
	0x03ACD150 MOV X19, X0
	0x03ACD154 LDR X9, [X8 + 0x2E8]
	0x03ACD158 LDR X1, [X8 + 0x2F0]
	0x03ACD15C BLR X9
	0x03ACD160 LDR X8, [X19]
	0x03ACD164 MOV X0, X19
	0x03ACD168 LDR X9, [X8 + 0x2F8]
	0x03ACD16C LDR X1, [X8 + 0x300]
	0x03ACD170 BLR X9
	0x03ACD174 LDR X8, [X19]
	0x03ACD178 MOV X0, X19
	0x03ACD17C LDR X2, [X8 + 0x308]
	0x03ACD180 LDR X1, [X8 + 0x310]
	0x03ACD184 LDP X30, X19, [X31], #0x10
	0x03ACD188 BR X2
	0x03ACD18C STR X30, [X31 - 0x30]!
	0x03ACD190 STP X22, X21, [X31 + 0x10]
	0x03ACD194 STP X20, X19, [X31 + 0x20]
	0x03ACD198 ADRP X21, 0x915000
	0x03ACD19C ADRP X22, 0x626000
	0x03ACD1A0 LDRB W8, [X21 + 0x4D1]
	0x03ACD1A4 LDR X22, [X22 + 0x598]
	0x03ACD1A8 MOV W20, W1
	0x03ACD1AC MOV X19, X0
	0x03ACD1B0 TBNZ X8, 0x0, 0x3ACD1C8
	0x03ACD1B4 ADRP X0, 0x626000
	0x03ACD1B8 LDR X0, [X0 + 0x598]
	0x03ACD1BC BL 0x1C16CF4
	0x03ACD1C0 MOVZ W8, 0x1
	0x03ACD1C4 STRB W8, [X21 + 0x4D1]
	0x03ACD1C8 LDR X0, [X22]
	0x03ACD1CC LDR W8, [X0 + 0xE0]
	0x03ACD1D0 CBNZ W8, 0x3ACD1D8
	0x03ACD1D4 BL 0x1C16DFC
	0x03ACD1D8 MOV X0, X19
	0x03ACD1DC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x916000
	005 Move W8, [X20+1219]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x627000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1219], W8
	016 Move X8, [X19+72]
	017 Compare X8, 0
	018 JumpIfEqual {101}
	019 Move W9, [X8+24]
	020 Compare W9, 0
	021 JumpIfEqual {102}
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move V1, [X19+56]
	024 Move [X8+40], W31
	025 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 Move [X8+32], D0
	028 Move X8, [X19+72]
	029 Compare X8, 0
	030 JumpIfEqual {101}
	031 Move W9, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move S0, [X19+36]
	034 Move S1, [X19+40]
	035 Move V2, [X19+56]
	036 Move S3, 1
	037 Move [X8+52], W31
	038 NotImplemented "Instruction FNEG not yet implemented."
	039 Subtract S1, S3, S1
	040 Move V0.S[1], V1.S[0]
	041 NotImplemented "Instruction INVALID not yet implemented."
	042 Move [X8+44], D0
	043 Move X8, [X19+72]
	044 Compare X8, 0
	045 JumpIfEqual {101}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move V1, [X19+56]
	050 Move V2, 0
	051 Move [X8+64], W31
	052 Subtract V0, V2, V0
	053 NotImplemented "Instruction INVALID not yet implemented."
	054 Move [X8+56], D0
	055 Move X8, [X19+72]
	056 Compare X8, 0
	057 JumpIfEqual {101}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X9, 0x627000
	061 Move X9, [X9+1432]
	062 Move S0, [X19+36]
	063 Move S1, [X19+40]
	064 Move V2, [X19+56]
	065 Move S3, 1
	066 Move [X8+76], W31
	067 Subtract S0, S3, S0
	068 NotImplemented "Instruction FNEG not yet implemented."
	069 Move V0.S[1], V1.S[0]
	070 NotImplemented "Instruction INVALID not yet implemented."
	071 Move [X8+68], D0
	072 Move X0, [X9]
	073 Move X20, [X19+104]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X20
	079 Move X1, X31
	080 Move X2, X31
	081 Call Object.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {97}
	086 Move X0, [X19+104]
	087 Compare X0, 0
	088 JumpIfEqual {101}
	089 Move S0, [X19+36]
	090 Move S1, [X19+40]
	091 Move X20, [X31+16]
	092 Move X19, [X31+24]
	093 Move X1, X31
	094 Move X30, [X31+32]
	095 Call RectTransform.set_pivot, X0, X1
	096 Return 
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X30, [X31+32]
	100 Return 
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: UnityEngine.Vector2 GetPivot(TMPro.TextContainerAnchors anchor)

Disassembly:
	0x03ACCCA4 MOV X2, X31
	0x03ACCCA8 LDR X8, [X8 + 0xB8]
	0x03ACCCAC LDR X1, [X8 + 0xF8]
	0x03ACCCB0 BL 0x3C14E80
	0x03ACCCB4 B 0x3ACCCE8
	0x03ACCCB8 LDR X0, [X21]
	0x03ACCCBC LDR X20, [X19 + 0x110]
	0x03ACCCC0 LDR W8, [X0 + 0xE0]
	0x03ACCCC4 CBNZ W8, 0x3ACCCCC
	0x03ACCCC8 BL 0x1C16DFC
	0x03ACCCCC CBZ X20, 0x3ACCD7C
	0x03ACCCD0 LDR X8, [X21]
	0x03ACCCD4 MOV X0, X20
	0x03ACCCD8 MOV X2, X31
	0x03ACCCDC LDR X8, [X8 + 0xB8]
	0x03ACCCE0 LDR X1, [X8 + 0xF8]
	0x03ACCCE4 BL 0x3C14E3C
	0x03ACCCE8 LDR X0, [X19 + 0x110]
	0x03ACCCEC CBZ X0, 0x3ACCD7C
	0x03ACCCF0 LDR X8, [X21]
	0x03ACCCF4 LDR X8, [X8 + 0xB8]
	0x03ACCCF8 LDR X1, [X8 + 0x100]
	0x03ACCCFC B 0x3ACCD44
	0x03ACCD00 LDR X0, [X21]
	0x03ACCD04 LDR X20, [X19 + 0x110]
	0x03ACCD08 LDR W8, [X0 + 0xE0]
	0x03ACCD0C CBNZ W8, 0x3ACCD14
	0x03ACCD10 BL 0x1C16DFC
	0x03ACCD14 CBZ X20, 0x3ACCD7C
	0x03ACCD18 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x90E000
	005 Move W8, [X20+1935]
	006 Move W19, W1
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x630000
	010 Move X0, [X0+3848]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+1935], W8
	014 Move X8, 0x630000
	015 Move X8, [X8+3848]
	016 Move X9, -49496064
	017 Move X10, -49496064
	018 Add X9, X9, 2996
	019 Move X8, [X8]
	020 Add X10, X10, 3032
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X9, X9, W19
	023 Move X8, [X8+184]
	024 Add X10, X10, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Add X11, X8, 4
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Move V1, [X9]
	031 Move V0, [X8]
	032 Move X30, [X31+32]
	033 Return X0

Method: TMPro.TextContainerAnchors GetAnchorPosition(UnityEngine.Vector2 pivot)

Disassembly:
	0x03ACCA58 MOV X0, X19
	0x03ACCA5C LDR X1, [X8]
	0x03ACCA60 BL 0x21A3894
	0x03ACCA64 STR X0, [X19 + 0x378]
	0x03ACCA68 B 0x3ACCA70
	0x03ACCA6C LDR X0, [X19 + 0x378]
	0x03ACCA70 LDP X20, X19, [X31 + 0x10]
	0x03ACCA74 LDP X30, X21, [X31], #0x20
	0x03ACCA78 RET
	0x03ACCA7C STP X30, X21, [X31 - 0x20]!
	0x03ACCA80 STP X20, X19, [X31 + 0x10]
	0x03ACCA84 ADRP X21, 0x916000
	0x03ACCA88 ADRP X20, 0x627000
	0x03ACCA8C LDRB W8, [X21 + 0x4CD]
	0x03ACCA90 LDR X20, [X20 + 0x598]
	0x03ACCA94 MOV X19, X0
	0x03ACCA98 TBNZ X8, 0x0, 0x3ACCABC
	0x03ACCA9C ADRP X0, 0x62E000
	0x03ACCAA0 LDR X0, [X0 + 0x700]
	0x03ACCAA4 BL 0x1C16CF4
	0x03ACCAA8 ADRP X0, 0x627000
	0x03ACCAAC LDR X0, [X0 + 0x598]
	0x03ACCAB0 BL 0x1C16CF4
	0x03ACCAB4 MOVZ W8, 0x1
	0x03ACCAB8 STRB W8, [X21 + 0x4CD]
	0x03ACCABC LDR X0, [X20]
	0x03ACCAC0 LDR X20, [X19 + 0x3A0]
	0x03ACCAC4 LDR W8, [X0 + 0xE0]
	0x03ACCAC8 CBNZ W8, 0x3ACCAD0
	0x03ACCACC BL 0x1C16DFC
	0x03ACCAD0 MOV X0, X20
	0x03ACCAD4 MOV X1, X31
	0x03ACCAD8 MOV X2, X31
	0x03ACCADC BL 0x3C3883C
	0x03ACCAE0 TBZ X0, 0x0, 0x3ACCB18
	0x03ACCAE4 ADRP X8, 0x62E000
	0x03ACCAE8 LDR X8, [X8 + 0x700]
	0x03ACCAEC LDR X0, [X8]
	0x03ACCAF0 BL 0x1C16F10
	0x03ACCAF4 MOV X1, X31
	0x03ACCAF8 MOV X20, X0
	0x03ACCAFC BL 0x3C17028
	0x03ACCB00 STR X20, [X19 + 0x3A0]
	0x03ACCB04 CBZ X20, 0x3ACCB28
	0x03ACCB08 MOVZ W1, 0x3D
	0x03ACCB0C MOV X0, X20
	0x03ACCB10 MOV X2, X31
	0x03ACCB14 BL 0x3C396EC
	0x03ACCB18 LDR X0, [X19 + 0x3A0]
	0x03ACCB1C LDP X20, X19, [X31 + 0x10]
	0x03ACCB20 LDP X30, X21, [X31], #0x20
	0x03ACCB24 RET
	0x03ACCB28 BL 0x1C16F20
	0x03ACCB2C STP X30, X21, [X31 - 0x20]!
	0x03ACCB30 STP X20, X19, [X31 + 0x10]
	0x03ACCB34 ADRP X20, 0x916000
	0x03ACCB38 ADRP X21, 0x627000
	0x03ACCB3C LDRB W8, [X20 + 0x4CE]
	0x03ACCB40 LDR X21, [X21 + 0x598]
	0x03ACCB44 MOV X19, X0
	0x03ACCB48 TBNZ X8, 0x0, 0x3ACCB78
	0x03ACCB4C ADRP X0, 0x62E000

ISIL:
	001 Move S2, -1
	002 Move X8, -50208768
	003 Add S4, S1, S2
	004 Move V2, [X8+3872]
	005 Multiply S3, S0, S0
	006 Multiply S5, S4, S4
	007 Add S4, S3, S5
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W0, W31
	010 Return X0
	011 Move S4, -0.5
	012 Add S4, S0, S4
	013 Multiply S4, S4, S4
	014 Add S6, S4, S5
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move W0, 1
	017 Return X0
	018 Move S6, -1
	019 Add S0, S0, S6
	020 Multiply S0, S0, S0
	021 Add S5, S0, S5
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move W0, 2
	024 Return X0
	025 Move S5, -0.5
	026 Add S5, S1, S5
	027 Multiply S5, S5, S5
	028 Add S6, S3, S5
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move W0, 3
	031 Return X0
	032 Add S6, S4, S5
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move W0, 4
	035 Return X0
	036 Add S5, S0, S5
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move W0, 5
	039 Return X0
	040 Multiply S1, S1, S1
	041 Add S3, S3, S1
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 Move W0, 6
	044 Return X0
	045 Add S3, S1, S4
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move W0, 7
	048 Return X0
	049 Add S0, S1, S0
	050 Move W8, 9
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move W9, 8
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03ACD33C LDR X8, [X8 + 0x580]
	0x03ACD340 ADRP X9, 0x68B000
	0x03ACD344 LDR X9, [X9 + 0x588]
	0x03ACD348 MOV X1, X0
	0x03ACD34C LDR X8, [X8]
	0x03ACD350 MOV X3, X31
	0x03ACD354 LDR X2, [X9]
	0x03ACD358 MOV X0, X8
	0x03ACD35C BL 0x32274B8
	0x03ACD360 ADRP X8, 0x626000
	0x03ACD364 LDR X8, [X8 + 0xA28]
	0x03ACD368 MOV X20, X0
	0x03ACD36C LDR X8, [X8]
	0x03ACD370 LDR W9, [X8 + 0xE0]
	0x03ACD374 CBNZ W9, 0x3ACD380
	0x03ACD378 MOV X0, X8
	0x03ACD37C BL 0x1C16DFC
	0x03ACD380 MOV X0, X20
	0x03ACD384 MOV X1, X19
	0x03ACD388 LDP X20, X19, [X31 + 0x10]
	0x03ACD38C MOV X2, X31
	0x03ACD390 LDR X30, [X31], #0x20
	0x03ACD394 B 0x3C06B0C
	0x03ACD398 LDRB W8, [X19 + 0x370]
	0x03ACD39C CBNZ W8, 0x3ACD3A8
	0x03ACD3A0 LDRB W8, [X19 + 0x3FC]
	0x03ACD3A4 CBZ W8, 0x3ACD4AC
	0x03ACD3A8 LDRB W8, [X19 + 0x308]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x916000
	006 Move X20, 0x629000
	007 Move W8, [X21+1220]
	008 Move X20, [X20+2480]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x629000
	015 Move X0, [X0+2480]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1220], W8
	019 Move W8, 4
	020 Move [X19+44], W8
	021 Move X0, [X20]
	022 Move W1, 4
	023 Call 0x1C17D6C
	024 Move [X19+72], X0
	025 Move X0, [X20]
	026 Move W1, 4
	027 Call 0x1C17D6C
	028 Move [X19+80], X0
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call UIBehaviour..ctor, X0
	036 Return 

Method: System.Void .cctor()

Disassembly:
	0x03ACD3AC CBZ W8, 0x3ACD3BC
	0x03ACD3B0 MOV X0, X19
	0x03ACD3B4 BL 0x3ACEC98
	0x03ACD3B8 STRB W31, [X19 + 0x308]
	0x03ACD3BC LDRB W8, [X19 + 0x301]
	0x03ACD3C0 CBZ W8, 0x3ACD3D8
	0x03ACD3C4 LDR X8, [X19]
	0x03ACD3C8 MOV X0, X19
	0x03ACD3CC LDR X9, [X8 + 0x828]
	0x03ACD3D0 LDR X1, [X8 + 0x830]
	0x03ACD3D4 BLR X9
	0x03ACD3D8 MOV X0, X19
	0x03ACD3DC MOV X1, X31
	0x03ACD3E0 BL 0x3AFA118
	0x03ACD3E4 ADRP X8, 0x68B000
	0x03ACD3E8 LDR X8, [X8 + 0x578]
	0x03ACD3EC LDR X0, [X8]
	0x03ACD3F0 LDR W8, [X0 + 0xE0]
	0x03ACD3F4 CBNZ W8, 0x3ACD3FC
	0x03ACD3F8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x916000
	005 Move X20, 0x68C000
	006 Move W8, [X19+1221]
	007 Move X20, [X20+1376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x68C000
	013 Move X0, [X0+1376]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1221], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 0x42C80000
	021 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

