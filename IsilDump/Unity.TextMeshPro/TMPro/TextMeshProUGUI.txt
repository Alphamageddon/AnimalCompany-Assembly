Type: TMPro.TextMeshProUGUI

Method: UnityEngine.Material get_materialForRendering()

Disassembly:
	0x03AD3ADC RET
	0x03AD3AE0 LDR X8, [X19]
	0x03AD3AE4 MOV X0, X19
	0x03AD3AE8 LDR X9, [X8 + 0x888]
	0x03AD3AEC LDR X1, [X8 + 0x890]
	0x03AD3AF0 BLR X9
	0x03AD3AF4 FCMP S2, 0x0
	0x03AD3AF8 B.EQ 0x3AD3AC4
	0x03AD3AFC FCMP S3, 0x0
	0x03AD3B00 B.EQ 0x3AD3AC4
	0x03AD3B04 TBZ X20, 0x0, 0x3AD3B94
	0x03AD3B08 FADD S5, S11, S10
	0x03AD3B0C FADD S4, S9, S8
	0x03AD3B10 FSUB S6, S11, S5
	0x03AD3B14 FCMP S11, S5
	0x03AD3B18 FADD S16, S2, S0
	0x03AD3B1C FCSEL S7, S6, S10, GT
	0x03AD3B20 FCSEL S6, S5, S11, GT
	0x03AD3B24 FCMP S9, S4
	0x03AD3B28 FSUB S17, S0, S16
	0x03AD3B2C FCSEL S5, S4, S9, GT
	0x03AD3B30 FCMP S0, S16
	0x03AD3B34 FCSEL S2, S17, S2, GT
	0x03AD3B38 FADD S17, S3, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x910000
	006 Move X20, 0x686000
	007 Move W8, [X21+1277]
	008 Move X20, [X20+1568]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x686000
	015 Move X0, [X0+1568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1277], W8
	019 Move X0, [X20]
	020 Move X20, [X19+272]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X1, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call TMP_MaterialManager.GetMaterialForRendering, X0, X1
	033 Return X0

Method: System.Boolean get_autoSizeTextContainer()

Disassembly:
	0x03AD3B3C FCSEL S16, S16, S0, GT
	0x03AD3B40 FSUB S0, S1, S17

ISIL:
	001 Move W0, [X0+921]
	002 Return X0

Method: System.Void set_autoSizeTextContainer(System.Boolean value)

Disassembly:
	0x03AD3B44 FCMP S1, S17
	0x03AD3B48 FCSEL S3, S0, S3, GT
	0x03AD3B4C FCSEL S0, S17, S1, GT
	0x03AD3B50 FADD S1, S0, S3
	0x03AD3B54 FCMP S1, S5
	0x03AD3B58 MOVZ W20, 0x1
	0x03AD3B5C B.LE 0x3AD3B98
	0x03AD3B60 FADD S1, S6, S7
	0x03AD3B64 FCMP S16, S1
	0x03AD3B68 B.PL 0x3AD3B98
	0x03AD3B6C FADD S1, S16, S2
	0x03AD3B70 FCMP S1, S6
	0x03AD3B74 B.LE 0x3AD3B98
	0x03AD3B78 FSUB S1, S9, S4
	0x03AD3B7C FCMP S9, S4
	0x03AD3B80 FCSEL S1, S1, S8, GT
	0x03AD3B84 FADD S1, S5, S1
	0x03AD3B88 FCMP S0, S1
	0x03AD3B8C CSET W20, PL
	0x03AD3B90 B 0x3AD3B98
	0x03AD3B94 MOVZ W20, 0x1
	0x03AD3B98 LDR X0, [X19 + 0x720]
	0x03AD3B9C CBZ X0, 0x3AD3C8C
	0x03AD3BA0 MOV X1, X31
	0x03AD3BA4 BL 0x3E22628
	0x03AD3BA8 AND W8, W0, 0x1
	0x03AD3BAC CMP W20, W8
	0x03AD3BB0 B.EQ 0x3AD3AC4
	0x03AD3BB4 LDR X0, [X19 + 0x720]
	0x03AD3BB8 CBZ X0, 0x3AD3C8C
	0x03AD3BBC MOV W1, W20
	0x03AD3BC0 MOV X2, X31
	0x03AD3BC4 BL 0x3E22664
	0x03AD3BC8 LDR X0, [X19 + 0xC0]
	0x03AD3BCC CBZ X0, 0x3AD3C8C
	0x03AD3BD0 ADRP X8, 0x685000
	0x03AD3BD4 LDR X8, [X8 + 0x740]
	0x03AD3BD8 MOV W1, W20
	0x03AD3BDC LDR X2, [X8]
	0x03AD3BE0 BL 0x2728B08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x910000
	007 Move W8, [X22+1278]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x686000
	016 Move X0, [X0+1816]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1278], W8
	020 Move W8, [X19+921]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+921], W21
	023 Move TEMP, X20
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {47}
	027 Move X8, 0x686000
	028 Move X8, [X8+1816]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call CanvasUpdateRegistry.RegisterCanvasElementForLayoutRebuild, X0
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X2, [X8+744]
	044 Move X1, [X8+752]
	045 Move X30, [X31+48]
	046 CallNoReturn X2
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 

Method: UnityEngine.Mesh get_mesh()

Disassembly:
	0x03AD3BE4 LDR X8, [X19]
	0x03AD3BE8 MOV X0, X19

ISIL:
	001 Move X0, [X0+928]
	002 Return X0

Method: UnityEngine.CanvasRenderer get_canvasRenderer()

Disassembly:
	0x03AD3BEC LDR X9, [X8 + 0x378]
	0x03AD3BF0 LDR X1, [X8 + 0x380]
	0x03AD3BF4 BLR X9
	0x03AD3BF8 LDR X8, [X19 + 0x708]
	0x03AD3BFC CBZ X8, 0x3AD3C8C
	0x03AD3C00 ADRP X23, 0x620000
	0x03AD3C04 LDR X23, [X23 + 0x598]
	0x03AD3C08 MOVZ W22, 0x5
	0x03AD3C0C LDR W9, [X8 + 0x18]
	0x03AD3C10 SUB X24, X22, 0x4
	0x03AD3C14 CMP W24, W9
	0x03AD3C18 B.GE 0x3AD3AC4
	0x03AD3C1C CMP W24, W9
	0x03AD3C20 B.CS 0x3AD3C90
	0x03AD3C24 LDR X0, [X23]
	0x03AD3C28 LDR X21, [X8, X22, LSL #3]
	0x03AD3C2C LDR W9, [X0 + 0xE0]
	0x03AD3C30 CBNZ W9, 0x3AD3C38
	0x03AD3C34 BL 0x1C16DFC
	0x03AD3C38 MOV X0, X21
	0x03AD3C3C MOV X1, X31
	0x03AD3C40 MOV X2, X31
	0x03AD3C44 BL 0x3C354F8
	0x03AD3C48 TBZ X0, 0x0, 0x3AD3AC4
	0x03AD3C4C LDR X8, [X19 + 0x708]
	0x03AD3C50 CBZ X8, 0x3AD3C8C
	0x03AD3C54 LDR W9, [X8 + 0x18]
	0x03AD3C58 CMP W24, W9
	0x03AD3C5C B.CS 0x3AD3C90
	0x03AD3C60 LDR X0, [X8, X22, LSL #3]
	0x03AD3C64 CBZ X0, 0x3AD3C8C
	0x03AD3C68 MOV X1, X31
	0x03AD3C6C BL 0x3CDBD2C
	0x03AD3C70 CBZ X0, 0x3AD3C8C
	0x03AD3C74 MOV W1, W20
	0x03AD3C78 MOV X2, X31
	0x03AD3C7C BL 0x3E22664

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x910000
	006 Move X20, 0x621000
	007 Move W8, [X21+1279]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x686000
	015 Move X0, [X0+1824]
	016 Call 0x1C17CF4
	017 Move X0, 0x621000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1279], W8
	022 Move X0, [X20]
	023 Move X20, [X19+1824]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X8, 0x686000
	037 Move X8, [X8+1824]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call 0x21A4894, X0
	041 Move [X19+1824], X0
	042 Move X0, [X19+1824]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Void CalculateLayoutInputHorizontal()

Disassembly:
	0x03AD3C80 LDR X8, [X19 + 0x708]

ISIL:
	001 Return 

Method: System.Void CalculateLayoutInputVertical()

Disassembly:
	0x03AD3C84 ADD X22, X22, 0x1

ISIL:
	001 Return 

Method: System.Void SetVerticesDirty()

Disassembly:
	0x03AD3C88 CBNZ X8, 0x3AD3C0C
	0x03AD3C8C BL 0x1C16F20
	0x03AD3C90 BL 0x1C16F28
	0x03AD3C94 STR X30, [X31 - 0x40]!
	0x03AD3C98 STP X24, X23, [X31 + 0x10]
	0x03AD3C9C STP X22, X21, [X31 + 0x20]
	0x03AD3CA0 STP X20, X19, [X31 + 0x30]
	0x03AD3CA4 ADRP X20, 0x90F000
	0x03AD3CA8 LDRB W8, [X20 + 0x50A]
	0x03AD3CAC MOV X19, X0
	0x03AD3CB0 TBNZ X8, 0x0, 0x3AD3CD4
	0x03AD3CB4 ADRP X0, 0x620000
	0x03AD3CB8 LDR X0, [X0 + 0x598]
	0x03AD3CBC BL 0x1C16CF4
	0x03AD3CC0 ADRP X0, 0x685000
	0x03AD3CC4 LDR X0, [X0 + 0x740]
	0x03AD3CC8 BL 0x1C16CF4
	0x03AD3CCC MOVZ W8, 0x1
	0x03AD3CD0 STRB W8, [X20 + 0x50A]
	0x03AD3CD4 LDR X8, [X19]
	0x03AD3CD8 MOV X0, X19
	0x03AD3CDC LDR X9, [X8 + 0x888]
	0x03AD3CE0 LDR X1, [X8 + 0x890]
	0x03AD3CE4 BLR X9
	0x03AD3CE8 FCMP S2, 0x0
	0x03AD3CEC B.EQ 0x3AD3E98
	0x03AD3CF0 FCMP S3, 0x0
	0x03AD3CF4 B.EQ 0x3AD3E98
	0x03AD3CF8 LDRB W8, [X19 + 0x6F0]
	0x03AD3CFC CBZ W8, 0x3AD3D9C
	0x03AD3D00 LDR V6, [X19 + 0x6E0]
	0x03AD3D04 LDR V7, [X19 + 0x6E8]
	0x03AD3D08 LDR V4, [X19 + 0x6E4]
	0x03AD3D0C LDR V5, [X19 + 0x6EC]
	0x03AD3D10 FADD S19, S2, S0
	0x03AD3D14 FADD S17, S6, S7
	0x03AD3D18 FSUB S16, S6, S17
	0x03AD3D1C FCMP S6, S17
	0x03AD3D20 FCSEL S16, S16, S7, GT
	0x03AD3D24 FADD S7, S4, S5
	0x03AD3D28 FCSEL S17, S17, S6, GT
	0x03AD3D2C FCMP S4, S7
	0x03AD3D30 FSUB S18, S0, S19
	0x03AD3D34 FCSEL S6, S7, S4, GT
	0x03AD3D38 FCMP S0, S19
	0x03AD3D3C FADD S20, S3, S1
	0x03AD3D40 FCSEL S18, S18, S2, GT
	0x03AD3D44 FCSEL S2, S19, S0, GT
	0x03AD3D48 FSUB S0, S1, S20
	0x03AD3D4C FCMP S1, S20
	0x03AD3D50 FCSEL S3, S0, S3, GT
	0x03AD3D54 FCSEL S0, S20, S1, GT
	0x03AD3D58 FADD S1, S0, S3
	0x03AD3D5C FCMP S1, S6
	0x03AD3D60 MOVZ W20, 0x1
	0x03AD3D64 B.LE 0x3AD3DA0
	0x03AD3D68 FADD S1, S2, S18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x910000
	006 Move X21, 0x621000
	007 Move W8, [X20+1280]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x686000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move X0, 0x621000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1280], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {76}
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+456]
	038 Move X1, [X8+464]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {76}
	044 Move X20, 0x686000
	045 Move X20, [X20+1816]
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call CanvasUpdateRegistry.IsRebuildingGraphics
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {76}
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X19
	063 Move X1, X31
	064 Call CanvasUpdateRegistry.RegisterCanvasElementForGraphicRebuild, X0
	065 Move X8, [X19+120]
	066 Compare X8, 0
	067 JumpIfEqual {76}
	068 Move X2, [X8+24]
	069 Move X0, [X8+64]
	070 Move X1, [X8+40]
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X2
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Return 

Method: System.Void SetLayoutDirty()

Disassembly:
	0x03AD3D6C FCMP S1, S17
	0x03AD3D70 B.LE 0x3AD3DA0
	0x03AD3D74 FADD S1, S17, S16
	0x03AD3D78 FCMP S2, S1
	0x03AD3D7C B.PL 0x3AD3DA0
	0x03AD3D80 FSUB S1, S4, S7
	0x03AD3D84 FCMP S4, S7
	0x03AD3D88 FCSEL S1, S1, S5, GT
	0x03AD3D8C FADD S1, S6, S1
	0x03AD3D90 FCMP S0, S1
	0x03AD3D94 CSET W20, PL
	0x03AD3D98 B 0x3AD3DA0
	0x03AD3D9C MOVZ W20, 0x1
	0x03AD3DA0 LDR X0, [X19 + 0x720]
	0x03AD3DA4 CBZ X0, 0x3AD3E94
	0x03AD3DA8 MOV X1, X31
	0x03AD3DAC BL 0x3E22628
	0x03AD3DB0 AND W8, W0, 0x1
	0x03AD3DB4 CMP W20, W8
	0x03AD3DB8 B.EQ 0x3AD3E98
	0x03AD3DBC LDR X0, [X19 + 0x720]
	0x03AD3DC0 CBZ X0, 0x3AD3E94
	0x03AD3DC4 MOV W1, W20
	0x03AD3DC8 MOV X2, X31
	0x03AD3DCC BL 0x3E22664
	0x03AD3DD0 LDR X0, [X19 + 0xC0]
	0x03AD3DD4 CBZ X0, 0x3AD3E94
	0x03AD3DD8 ADRP X8, 0x685000
	0x03AD3DDC LDR X8, [X8 + 0x740]
	0x03AD3DE0 MOV W1, W20
	0x03AD3DE4 LDR X2, [X8]
	0x03AD3DE8 BL 0x2728B08
	0x03AD3DEC LDR X8, [X19]
	0x03AD3DF0 MOV X0, X19
	0x03AD3DF4 LDR X9, [X8 + 0x378]
	0x03AD3DF8 LDR X1, [X8 + 0x380]
	0x03AD3DFC BLR X9
	0x03AD3E00 LDR X8, [X19 + 0x708]
	0x03AD3E04 CBZ X8, 0x3AD3E94
	0x03AD3E08 ADRP X23, 0x620000
	0x03AD3E0C LDR X23, [X23 + 0x598]
	0x03AD3E10 MOVZ W22, 0x5
	0x03AD3E14 LDR W9, [X8 + 0x18]
	0x03AD3E18 SUB X24, X22, 0x4
	0x03AD3E1C CMP W24, W9
	0x03AD3E20 B.GE 0x3AD3E98
	0x03AD3E24 CMP W24, W9
	0x03AD3E28 B.CS 0x3AD3EAC
	0x03AD3E2C LDR X0, [X23]
	0x03AD3E30 LDR X21, [X8, X22, LSL #3]
	0x03AD3E34 LDR W9, [X0 + 0xE0]
	0x03AD3E38 CBNZ W9, 0x3AD3E40
	0x03AD3E3C BL 0x1C16DFC
	0x03AD3E40 MOV X0, X21
	0x03AD3E44 MOV X1, X31
	0x03AD3E48 MOV X2, X31
	0x03AD3E4C BL 0x3C354F8
	0x03AD3E50 TBZ X0, 0x0, 0x3AD3E98
	0x03AD3E54 LDR X8, [X19 + 0x708]
	0x03AD3E58 CBZ X8, 0x3AD3E94

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x910000
	006 Move X20, 0x621000
	007 Move W8, [X21+1281]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x624000
	015 Move X0, [X0+2336]
	016 Call 0x1C17CF4
	017 Move X0, 0x621000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1281], W8
	022 Move W8, 1
	023 Move [X19+1000], W8
	024 Move [X19+1012], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {75}
	038 Move X8, [X19]
	039 Move X0, X19
	040 Move X9, [X8+456]
	041 Move X1, [X8+464]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {75}
	047 Move X0, X19
	048 Move X1, X31
	049 Call TMP_Text.get_rectTransform, X0
	050 Move X8, 0x624000
	051 Move X8, [X8+2336]
	052 Move X20, X0
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move X1, X31
	061 Call LayoutRebuilder.MarkLayoutForRebuild, X0
	062 Move X8, [X19+112]
	063 Move W9, 1
	064 Move [X19+1020], W9
	065 Compare X8, 0
	066 JumpIfEqual {75}
	067 Move X2, [X8+24]
	068 Move X0, [X8+64]
	069 Move X1, [X8+40]
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 CallNoReturn X2
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return 

Method: System.Void SetMaterialDirty()

Disassembly:
	0x03AD3E5C LDR W9, [X8 + 0x18]
	0x03AD3E60 CMP W24, W9
	0x03AD3E64 B.CS 0x3AD3EAC
	0x03AD3E68 LDR X0, [X8, X22, LSL #3]
	0x03AD3E6C CBZ X0, 0x3AD3E94
	0x03AD3E70 MOV X1, X31
	0x03AD3E74 BL 0x3CDBD2C
	0x03AD3E78 CBZ X0, 0x3AD3E94
	0x03AD3E7C MOV W1, W20
	0x03AD3E80 MOV X2, X31
	0x03AD3E84 BL 0x3E22664
	0x03AD3E88 LDR X8, [X19 + 0x708]
	0x03AD3E8C ADD X22, X22, 0x1
	0x03AD3E90 CBNZ X8, 0x3AD3E14
	0x03AD3E94 BL 0x1C16F20
	0x03AD3E98 LDP X20, X19, [X31 + 0x30]
	0x03AD3E9C LDP X22, X21, [X31 + 0x20]
	0x03AD3EA0 LDP X24, X23, [X31 + 0x10]
	0x03AD3EA4 LDR X30, [X31], #0x40
	0x03AD3EA8 RET
	0x03AD3EAC BL 0x1C16F28
	0x03AD3EB0 STR X30, [X31 - 0x30]!
	0x03AD3EB4 STP X22, X21, [X31 + 0x10]
	0x03AD3EB8 STP X20, X19, [X31 + 0x20]
	0x03AD3EBC ADRP X21, 0x90F000
	0x03AD3EC0 ADRP X20, 0x685000
	0x03AD3EC4 LDRB W8, [X21 + 0x50B]
	0x03AD3EC8 LDR X20, [X20 + 0x338]
	0x03AD3ECC MOV X19, X0
	0x03AD3ED0 TBNZ X8, 0x0, 0x3AD3EE8
	0x03AD3ED4 ADRP X0, 0x685000
	0x03AD3ED8 LDR X0, [X0 + 0x338]
	0x03AD3EDC BL 0x1C16CF4
	0x03AD3EE0 MOVZ W8, 0x1
	0x03AD3EE4 STRB W8, [X21 + 0x50B]
	0x03AD3EE8 LDR X0, [X20]
	0x03AD3EEC LDR X20, [X19 + 0x110]
	0x03AD3EF0 LDRB W21, [X19 + 0x300]
	0x03AD3EF4 LDRB W22, [X19 + 0x26A]
	0x03AD3EF8 LDR W8, [X0 + 0xE0]
	0x03AD3EFC CBNZ W8, 0x3AD3F04
	0x03AD3F00 BL 0x1C16DFC
	0x03AD3F04 CMP W22, 0x0
	0x03AD3F08 CSET W2, NE
	0x03AD3F0C CMP W21, 0x0
	0x03AD3F10 CSET W1, NE
	0x03AD3F14 MOV X0, X20
	0x03AD3F18 MOV X3, X31
	0x03AD3F1C BL 0x3B15054
	0x03AD3F20 LDR X0, [X19 + 0x110]
	0x03AD3F24 MOV X1, X31
	0x03AD3F28 STR S0, [X19 + 0x618]
	0x03AD3F2C BL 0x3B14EB8
	0x03AD3F30 LDR X8, [X19 + 0x368]
	0x03AD3F34 AND W9, W0, 0x1
	0x03AD3F38 STRB W9, [X19 + 0x307]
	0x03AD3F3C MOVZ W9, 0x1
	0x03AD3F40 STRB W9, [X19 + 0x370]
	0x03AD3F44 STRB W31, [X19 + 0x301]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x910000
	006 Move X21, 0x621000
	007 Move W8, [X20+1282]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x686000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move X0, 0x621000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1282], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Equality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {78}
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+456]
	038 Move X1, [X8+464]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {78}
	044 Move X20, 0x686000
	045 Move X20, [X20+1816]
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X31
	052 Call CanvasUpdateRegistry.IsRebuildingGraphics
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {78}
	057 Move W8, 1
	058 Move [X19+320], W8
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call CanvasUpdateRegistry.RegisterCanvasElementForGraphicRebuild, X0
	067 Move X8, [X19+128]
	068 Compare X8, 0
	069 JumpIfEqual {78}
	070 Move X2, [X8+24]
	071 Move X0, [X8+64]
	072 Move X1, [X8+40]
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 CallNoReturn X2
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return 

Method: System.Void SetAllDirty()

Disassembly:
	0x03AD3F48 CBZ X8, 0x3AD3F9C
	0x03AD3F4C MOVZ W20, 0x5
	0x03AD3F50 LDR W9, [X8 + 0x34]
	0x03AD3F54 SUB X8, X20, 0x4
	0x03AD3F58 CMP W8, W9
	0x03AD3F5C B.GE 0x3AD3F9C
	0x03AD3F60 LDR X9, [X19 + 0x708]
	0x03AD3F64 CBZ X9, 0x3AD3F98
	0x03AD3F68 LDR W10, [X9 + 0x18]
	0x03AD3F6C CMP W8, W10
	0x03AD3F70 B.CS 0x3AD3FAC
	0x03AD3F74 LDR X0, [X9, X20, LSL #3]
	0x03AD3F78 CBZ X0, 0x3AD3F98
	0x03AD3F7C LDRB W2, [X19 + 0x26A]
	0x03AD3F80 LDRB W1, [X19 + 0x300]
	0x03AD3F84 MOV X3, X31
	0x03AD3F88 BL 0x3B1B58C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+744]
	006 Move X1, [X8+752]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X8, [X19]
	009 Move X0, X19
	010 Move X9, [X8+760]
	011 Move X1, [X8+768]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X2, [X8+776]
	016 Move X1, [X8+784]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 CallNoReturn X2

Method: System.Collections.IEnumerator DelayedGraphicRebuild()

Disassembly:
	0x03AD3F8C LDR X8, [X19 + 0x368]
	0x03AD3F90 ADD X20, X20, 0x1
	0x03AD3F94 CBNZ X8, 0x3AD3F50
	0x03AD3F98 BL 0x1C16F20
	0x03AD3F9C LDP X20, X19, [X31 + 0x20]
	0x03AD3FA0 LDP X22, X21, [X31 + 0x10]
	0x03AD3FA4 LDR X30, [X31], #0x30
	0x03AD3FA8 RET
	0x03AD3FAC BL 0x1C16F28
	0x03AD3FB0 STR D12, [X31 - 0x60]!
	0x03AD3FB4 STP D11, D10, [X31 + 0x10]
	0x03AD3FB8 STP D9, D8, [X31 + 0x20]
	0x03AD3FBC STP X30, X23, [X31 + 0x30]
	0x03AD3FC0 STP X22, X21, [X31 + 0x40]
	0x03AD3FC4 STP X20, X19, [X31 + 0x50]
	0x03AD3FC8 LDR X8, [X0 + 0x368]
	0x03AD3FCC CBZ X8, 0x3AD4058
	0x03AD3FD0 LDR W22, [X8 + 0x34]
	0x03AD3FD4 CMP W22, 0x2
	0x03AD3FD8 B.LT 0x3AD4058
	0x03AD3FDC MOV V8.16B, V4.16B
	0x03AD3FE0 MOV V9.16B, V3.16B
	0x03AD3FE4 MOV V10.16B, V2.16B
	0x03AD3FE8 MOV V11.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x910000
	006 Move X21, 0x686000
	007 Move W8, [X20+1283]
	008 Move X21, [X21+1832]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x686000
	015 Move X0, [X0+1832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1283], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Collections.IEnumerator DelayedMaterialRebuild()

Disassembly:
	0x03AD4014 ADD X8, X8, W23, 0x3, SXTW
	0x03AD4018 LDR X0, [X8 + 0x20]
	0x03AD401C CBZ X0, 0x3AD4074
	0x03AD4020 LDR X8, [X0]
	0x03AD4024 MOV V0.16B, V12.16B
	0x03AD4028 MOV V1.16B, V11.16B
	0x03AD402C MOV V2.16B, V10.16B
	0x03AD4030 LDR X9, [X8 + 0x428]
	0x03AD4034 LDR X3, [X8 + 0x430]
	0x03AD4038 MOV V3.16B, V9.16B
	0x03AD403C MOV V4.16B, V8.16B
	0x03AD4040 MOV W1, W20
	0x03AD4044 MOV W2, W21
	0x03AD4048 BLR X9
	0x03AD404C ADD W23, W23, 0x1
	0x03AD4050 CMP W22, W23
	0x03AD4054 B.NE 0x3AD4000
	0x03AD4058 LDP X20, X19, [X31 + 0x50]
	0x03AD405C LDP X22, X21, [X31 + 0x40]
	0x03AD4060 LDP X30, X23, [X31 + 0x30]
	0x03AD4064 LDP D9, D8, [X31 + 0x20]
	0x03AD4068 LDP D11, D10, [X31 + 0x10]
	0x03AD406C LDR V12, [X31], #0x60
	0x03AD4070 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x90F000
	006 Move X21, 0x685000
	007 Move W8, [X20+1284]
	008 Move X21, [X21+1840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x685000
	015 Move X0, [X0+1840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1284], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+32], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void Rebuild(UnityEngine.UI.CanvasUpdate update)

Disassembly:
	0x03AD409C B.LT 0x3AD40FC
	0x03AD40A0 MOV V8.16B, V1.16B
	0x03AD40A4 MOV X19, X0
	0x03AD40A8 MOV V9.16B, V0.16B
	0x03AD40AC MOVZ W22, 0x1
	0x03AD40B0 AND W20, W1, 0x1
	0x03AD40B4 LDR X8, [X19 + 0x708]
	0x03AD40B8 CBZ X8, 0x3AD4110
	0x03AD40BC LDR W9, [X8 + 0x18]
	0x03AD40C0 CMP W22, W9
	0x03AD40C4 B.CS 0x3AD4114
	0x03AD40C8 ADD X8, X8, W22, 0x3, SXTW
	0x03AD40CC LDR X0, [X8 + 0x20]
	0x03AD40D0 CBZ X0, 0x3AD4110
	0x03AD40D4 LDR X8, [X0]
	0x03AD40D8 MOV V0.16B, V9.16B
	0x03AD40DC MOV V1.16B, V8.16B
	0x03AD40E0 MOV W1, W20
	0x03AD40E4 LDR X9, [X8 + 0x448]
	0x03AD40E8 LDR X2, [X8 + 0x450]
	0x03AD40EC BLR X9
	0x03AD40F0 ADD W22, W22, 0x1
	0x03AD40F4 CMP W21, W22
	0x03AD40F8 B.NE 0x3AD40B4
	0x03AD40FC LDP X20, X19, [X31 + 0x30]
	0x03AD4100 LDP X22, X21, [X31 + 0x20]
	0x03AD4104 LDR X30, [X31 + 0x10]
	0x03AD4108 LDP D9, D8, [X31], #0x40
	0x03AD410C RET
	0x03AD4110 BL 0x1C16F20
	0x03AD4114 BL 0x1C16F28
	0x03AD4118 STR X30, [X31 - 0x30]!
	0x03AD411C STP X22, X21, [X31 + 0x10]
	0x03AD4120 STP X20, X19, [X31 + 0x20]
	0x03AD4124 ADRP X22, 0x90E000
	0x03AD4128 ADRP X20, 0x61F000
	0x03AD412C LDRB W8, [X22 + 0x50C]
	0x03AD4130 LDR X20, [X20 + 0x598]
	0x03AD4134 MOV X19, X0
	0x03AD4138 AND W21, W1, 0x1
	0x03AD413C TBNZ X8, 0x0, 0x3AD4160
	0x03AD4140 ADRP X0, 0x675000
	0x03AD4144 LDR X0, [X0 + 0x5D8]
	0x03AD4148 BL 0x1C16CF4
	0x03AD414C ADRP X0, 0x61F000
	0x03AD4150 LDR X0, [X0 + 0x598]
	0x03AD4154 BL 0x1C16CF4
	0x03AD4158 MOVZ W8, 0x1
	0x03AD415C STRB W8, [X22 + 0x50C]
	0x03AD4160 MOVZ W8, 0x1
	0x03AD4164 STRB W8, [X19 + 0x370]
	0x03AD4168 STRB W21, [X19 + 0x6AC]
	0x03AD416C LDR X0, [X20]
	0x03AD4170 LDR X20, [X19 + 0x728]
	0x03AD4174 LDR W8, [X0 + 0xE0]
	0x03AD4178 CBNZ W8, 0x3AD4180
	0x03AD417C BL 0x1C16DFC
	0x03AD4180 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x90F000
	007 Move X22, 0x620000
	008 Move W8, [X21+1285]
	009 Move X22, [X22+1432]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x620000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1285], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {69}
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W20, 0
	036 JumpIfNotEqual {69}
	037 Move W8, [X19+921]
	038 Compare W8, 0
	039 JumpIfEqual {69}
	040 Move X20, [X19+896]
	041 Move W8, 0x7F800000
	042 Move S0, W8
	043 Move X0, X19
	044 Move V1, V0
	045 Move X1, X31
	046 Call TMP_Text.GetPreferredValues, X0, V0, V1
	047 Compare X20, 0
	048 JumpIfEqual {75}
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+48]
	056 Call RectTransform.set_sizeDelta, X0, X1
	057 Return 
	058 Move X0, X19
	059 Call TextMeshProUGUI.OnPreRenderCanvas, X0
	060 Move W8, [X19+320]
	061 Compare W8, 0
	062 JumpIfEqual {69}
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X9, [X8+952]
	066 Move X1, [X8+960]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move [X19+320], W31
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void UpdateSubObjectPivot()

Disassembly:
	0x03AD43F8 MOV X22, X0
	0x03AD43FC MOV X1, X23
	0x03AD4400 BL 0x1C16E00
	0x03AD4404 MOV X1, X0
	0x03AD4408 CBNZ X0, 0x3AD4414
	0x03AD440C B 0x3AD4440
	0x03AD4410 MOV X1, X31
	0x03AD4414 MOV X0, X20
	0x03AD4418 MOV X2, X21
	0x03AD441C BL 0x1C24138
	0x03AD4420 CMP X21, X0
	0x03AD4424 MOV X21, X0
	0x03AD4428 B.NE 0x3AD43E0
	0x03AD442C LDP X20, X19, [X31 + 0x30]
	0x03AD4430 LDP X22, X21, [X31 + 0x20]
	0x03AD4434 LDP X24, X23, [X31 + 0x10]
	0x03AD4438 LDR X30, [X31], #0x40
	0x03AD443C RET
	0x03AD4440 MOV X0, X22
	0x03AD4444 MOV X1, X23
	0x03AD4448 BL 0x1C171E0
	0x03AD444C STR X30, [X31 - 0x40]!
	0x03AD4450 STP X24, X23, [X31 + 0x10]
	0x03AD4454 STP X22, X21, [X31 + 0x20]
	0x03AD4458 STP X20, X19, [X31 + 0x30]
	0x03AD445C ADRP X21, 0x90E000
	0x03AD4460 LDRB W8, [X21 + 0x510]
	0x03AD4464 MOV X19, X1
	0x03AD4468 MOV X20, X0
	0x03AD446C TBNZ X8, 0x0, 0x3AD4484
	0x03AD4470 ADRP X0, 0x684000
	0x03AD4474 LDR X0, [X0 + 0x590]
	0x03AD4478 BL 0x1C16CF4
	0x03AD447C MOVZ W8, 0x1
	0x03AD4480 STRB W8, [X21 + 0x510]
	0x03AD4484 ADRP X24, 0x684000
	0x03AD4488 LDR X21, [X20 + 0x6F8]
	0x03AD448C LDR X24, [X24 + 0x590]
	0x03AD4490 ADD X20, X20, 0x6F8
	0x03AD4494 MOV X0, X21
	0x03AD4498 MOV X1, X19
	0x03AD449C MOV X2, X31
	0x03AD44A0 BL 0x33C0FDC
	0x03AD44A4 CBZ X0, 0x3AD44C4
	0x03AD44A8 LDR X23, [X24]
	0x03AD44AC MOV X22, X0
	0x03AD44B0 MOV X1, X23
	0x03AD44B4 BL 0x1C16E00
	0x03AD44B8 MOV X1, X0
	0x03AD44BC CBNZ X0, 0x3AD44C8
	0x03AD44C0 B 0x3AD44F4
	0x03AD44C4 MOV X1, X31
	0x03AD44C8 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x90F000
	008 Move W8, [X20+1286]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x620000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1286], W8
	019 Move X8, [X19+872]
	020 Compare X8, 0
	021 JumpIfEqual {61}
	022 Move X8, [X19+1800]
	023 Compare X8, 0
	024 JumpIfEqual {60}
	025 Move X21, 0x620000
	026 Move X21, [X21+1432]
	027 Move W22, 5
	028 Move W9, [X8+24]
	029 Subtract X23, X22, 4
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X21]
	033 Move X20, [X8]
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Inequality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {61}
	046 Move X8, [X19+1800]
	047 Compare X8, 0
	048 JumpIfEqual {60}
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {60}
	054 Move X1, X31
	055 Call TMP_SubMeshUI.SetPivotDirty, X0
	056 Move X8, [X19+1800]
	057 Add X22, X22, 1
	058 Compare X8, 0
	059 JumpIfNotEqual {28}
	060 Call 0x1C17F20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return 
	068 Call 0x1C17F28

Method: UnityEngine.Material GetModifiedMaterial(UnityEngine.Material baseMaterial)

Disassembly:
	0x03AD44CC MOV X2, X21
	0x03AD44D0 BL 0x1C24138
	0x03AD44D4 CMP X21, X0
	0x03AD44D8 MOV X21, X0
	0x03AD44DC B.NE 0x3AD4494
	0x03AD44E0 LDP X20, X19, [X31 + 0x30]
	0x03AD44E4 LDP X22, X21, [X31 + 0x20]
	0x03AD44E8 LDP X24, X23, [X31 + 0x10]
	0x03AD44EC LDR X30, [X31], #0x40
	0x03AD44F0 RET
	0x03AD44F4 MOV X0, X22
	0x03AD44F8 MOV X1, X23
	0x03AD44FC BL 0x1C171E0
	0x03AD4500 STP X30, X21, [X31 - 0x20]!
	0x03AD4504 STP X20, X19, [X31 + 0x10]
	0x03AD4508 CBZ X1, 0x3AD4570
	0x03AD450C MOV X19, X1
	0x03AD4510 MOV X21, X0
	0x03AD4514 MOV X0, X1
	0x03AD4518 MOV X1, X31
	0x03AD451C MOV W20, W2
	0x03AD4520 BL 0x3C19CD4
	0x03AD4524 CBZ W20, 0x3AD4568
	0x03AD4528 LDR X8, [X21 + 0x708]
	0x03AD452C CBZ X8, 0x3AD4570
	0x03AD4530 LDR W9, [X8 + 0x18]
	0x03AD4534 CMP W9, W20
	0x03AD4538 B.LS 0x3AD4574
	0x03AD453C ADD X8, X8, W20, 0x3, SXTW
	0x03AD4540 LDR X0, [X8 + 0x20]
	0x03AD4544 CBZ X0, 0x3AD4570
	0x03AD4548 MOV X1, X31
	0x03AD454C BL 0x3CDBD2C
	0x03AD4550 CBZ X0, 0x3AD4570
	0x03AD4554 MOV X1, X19
	0x03AD4558 LDP X20, X19, [X31 + 0x10]
	0x03AD455C MOV X2, X31
	0x03AD4560 LDP X30, X21, [X31], #0x20
	0x03AD4564 B 0x3E22AB0
	0x03AD4568 LDR X0, [X21 + 0x720]
	0x03AD456C CBNZ X0, 0x3AD4554
	0x03AD4570 BL 0x1C16F20
	0x03AD4574 BL 0x1C16F28
	0x03AD4578 STP X30, X25, [X31 - 0x40]!
	0x03AD457C STP X24, X23, [X31 + 0x10]
	0x03AD4580 STP X22, X21, [X31 + 0x20]
	0x03AD4584 STP X20, X19, [X31 + 0x30]
	0x03AD4588 LDR X8, [X0 + 0x368]
	0x03AD458C CBZ X8, 0x3AD4754
	0x03AD4590 LDR W8, [X8 + 0x34]
	0x03AD4594 CMP W8, 0x1
	0x03AD4598 B.LT 0x3AD4740
	0x03AD459C ADD X8, X8, X8, 0x2, LSL
	0x03AD45A0 MOV X19, X0
	0x03AD45A4 MOV W20, W1
	0x03AD45A8 MOV X22, X31
	0x03AD45AC UBFM X23, X8, 0x3C, 0x3B
	0x03AD45B0 MOVZ W24, 0x4
	0x03AD45B4 SUB X25, X24, 0x4
	0x03AD45B8 CBZ X22, 0x3AD45FC
	0x03AD45BC LDR X8, [X19 + 0x708]
	0x03AD45C0 CBZ X8, 0x3AD4754
	0x03AD45C4 LDR W9, [X8 + 0x18]
	0x03AD45C8 CMP X25, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x90F000
	006 Move W8, [X21+1287]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x685000
	014 Move X0, [X0+1848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1287], W8
	018 Move W8, [X20+161]
	019 Compare W8, 0
	020 JumpIfEqual {37}
	021 Move X0, X20
	022 Move X1, X31
	023 Call TMP_Text.get_transform, X0
	024 Move X1, X31
	025 Call MaskUtilities.FindRootSortOverrideCanvas, X0
	026 Move W8, [X20+184]
	027 Compare W8, 0
	028 JumpIfEqual {38}
	029 Move X21, X0
	030 Move X0, X20
	031 Move X1, X31
	032 Call TMP_Text.get_transform, X0
	033 Move X1, X21
	034 Move X2, X31
	035 Call MaskUtilities.GetStencilDepth, X0, X1
	036 Move W21, W0
	037 Move W21, [X20+204]
	038 Move W21, W31
	039 Move [X20+204], W21
	040 Move [X20+161], W31
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X8, 0x685000
	043 Move X8, [X8+1848]
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W8, TEMP
	052 NotImplemented "Instruction LSLV not yet implemented."
	053 NotImplemented "Instruction ORN not yet implemented."
	054 Move W3, 3
	055 Move W4, 15
	056 Move X0, X19
	057 Move W2, W31
	058 Move W5, W1
	059 Move W6, W31
	060 Move X7, X31
	061 Call StencilMaterial.Add, X0, X1, X2, X3, X4, X5, X6
	062 Move X8, [X20+168]
	063 Move X19, X0
	064 Move X1, X31
	065 Move X0, X8
	066 Call StencilMaterial.Remove, X0
	067 Move [X20+168], X19
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0

Method: System.Void UpdateMaterial()

Disassembly:
	0x03AD45CC B.CS 0x3AD4758
	0x03AD45D0 LDR X0, [X8, X24, LSL #3]
	0x03AD45D4 CBZ X0, 0x3AD4754
	0x03AD45D8 MOV X1, X31
	0x03AD45DC BL 0x3B1AC04
	0x03AD45E0 MOV X21, X0
	0x03AD45E4 TBNZ X20, 0x0, 0x3AD4604
	0x03AD45E8 TBNZ X20, 0x1, 0x3AD463C
	0x03AD45EC TBNZ X20, 0x2, 0x3AD4674
	0x03AD45F0 TBNZ X20, 0x4, 0x3AD46AC
	0x03AD45F4 CBNZ X21, 0x3AD46E0
	0x03AD45F8 B 0x3AD4754
	0x03AD45FC LDR X21, [X19 + 0x3A0]
	0x03AD4600 TBZ X20, 0x0, 0x3AD45E8
	0x03AD4604 LDR X8, [X19 + 0x368]
	0x03AD4608 CBZ X8, 0x3AD4754
	0x03AD460C LDR X8, [X8 + 0x60]
	0x03AD4610 CBZ X8, 0x3AD4754
	0x03AD4614 LDR W9, [X8 + 0x18]
	0x03AD4618 CMP X25, X9
	0x03AD461C B.CS 0x3AD4758
	0x03AD4620 CBZ X21, 0x3AD4754
	0x03AD4624 ADD X8, X8, X22
	0x03AD4628 LDR X1, [X8 + 0x30]
	0x03AD462C MOV X0, X21
	0x03AD4630 MOV X2, X31
	0x03AD4634 BL 0x3C17F08
	0x03AD4638 TBZ X20, 0x1, 0x3AD45EC
	0x03AD463C LDR X8, [X19 + 0x368]
	0x03AD4640 CBZ X8, 0x3AD4754
	0x03AD4644 LDR X8, [X8 + 0x60]
	0x03AD4648 CBZ X8, 0x3AD4754
	0x03AD464C LDR W9, [X8 + 0x18]
	0x03AD4650 CMP X25, X9
	0x03AD4654 B.CS 0x3AD4758
	0x03AD4658 CBZ X21, 0x3AD4754
	0x03AD465C ADD X8, X8, X22
	0x03AD4660 LDR X1, [X8 + 0x48]
	0x03AD4664 MOV X0, X21
	0x03AD4668 MOV X2, X31
	0x03AD466C BL 0x3C1810C
	0x03AD4670 TBZ X20, 0x2, 0x3AD45F0
	0x03AD4674 LDR X8, [X19 + 0x368]
	0x03AD4678 CBZ X8, 0x3AD4754
	0x03AD467C LDR X8, [X8 + 0x60]
	0x03AD4680 CBZ X8, 0x3AD4754
	0x03AD4684 LDR W9, [X8 + 0x18]
	0x03AD4688 CMP X25, X9
	0x03AD468C B.CS 0x3AD4758
	0x03AD4690 CBZ X21, 0x3AD4754
	0x03AD4694 ADD X8, X8, X22
	0x03AD4698 LDR X1, [X8 + 0x50]
	0x03AD469C MOV X0, X21
	0x03AD46A0 MOV X2, X31
	0x03AD46A4 BL 0x3C181B8
	0x03AD46A8 TBZ X20, 0x4, 0x3AD45F4
	0x03AD46AC LDR X8, [X19 + 0x368]
	0x03AD46B0 CBZ X8, 0x3AD4754
	0x03AD46B4 LDR X8, [X8 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x90F000
	006 Move X21, 0x620000
	007 Move W8, [X20+1288]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x620000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1288], W8
	019 Move X0, [X21]
	020 Move X20, [X19+272]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {50}
	033 Move X0, X19
	034 Call TextMeshProUGUI.get_canvasRenderer, X0
	035 Move X8, [X21]
	036 Move X20, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, [X19+1824]
	056 Compare X0, 0
	057 JumpIfEqual {79}
	058 Move W1, 1
	059 Move X2, X31
	060 Call CanvasRenderer.set_materialCount, X0, X1
	061 Move X8, [X19]
	062 Move X20, [X19+1824]
	063 Move X0, X19
	064 Move X9, [X8+856]
	065 Move X1, [X8+864]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X20, 0
	068 JumpIfEqual {79}
	069 Move X1, X0
	070 Move X0, X20
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move W2, W31
	074 Move X3, X31
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 Call CanvasRenderer.SetMaterial, X0, X1, X2
	078 Return 
	079 Call 0x1C17F20

Method: UnityEngine.Vector4 get_maskOffset()

Disassembly:
	0x03AD46B8 CBZ X8, 0x3AD4754
	0x03AD46BC LDR W9, [X8 + 0x18]
	0x03AD46C0 CMP X25, X9
	0x03AD46C4 B.CS 0x3AD4758
	0x03AD46C8 CBZ X21, 0x3AD4754

ISIL:
	001 Move V0, [X0+1868]
	002 Move V1, [X0+1872]
	003 Move V2, [X0+1876]
	004 Move V3, [X0+1880]
	005 Return X0

Method: System.Void set_maskOffset(UnityEngine.Vector4 value)

Disassembly:
	0x03AD46CC ADD X8, X8, X22
	0x03AD46D0 LDR X1, [X8 + 0x58]
	0x03AD46D4 MOV X0, X21
	0x03AD46D8 MOV X2, X31
	0x03AD46DC BL 0x3C18318
	0x03AD46E0 MOV X0, X21
	0x03AD46E4 MOV X1, X31
	0x03AD46E8 BL 0x3C19CD4
	0x03AD46EC CBZ X22, 0x3AD471C
	0x03AD46F0 LDR X8, [X19 + 0x708]
	0x03AD46F4 CBZ X8, 0x3AD4754

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move [X0+1868], S0
	005 Move [X0+1872], S1
	006 Move [X0+1876], S2
	007 Move [X0+1880], S3
	008 Call TextMeshProUGUI.UpdateMask, X0
	009 Move W8, 1
	010 Move [X19+880], W8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void RecalculateClipping()

Disassembly:
	0x03AD4A10 ADRP X0, 0x684000
	0x03AD4A14 LDR X0, [X0 + 0x368]

ISIL:
	001 Move X1, X31
	002 Call MaskableGraphic.RecalculateClipping, X0
	003 Return 

Method: System.Void Cull(UnityEngine.Rect clipRect, System.Boolean validRect)

Disassembly:
	0x03AD4A18 BL 0x1C16CF4
	0x03AD4A1C ADRP X0, 0x684000
	0x03AD4A20 LDR X0, [X0 + 0x5B8]
	0x03AD4A24 BL 0x1C16CF4
	0x03AD4A28 MOVZ W8, 0x1
	0x03AD4A2C STRB W8, [X20 + 0x512]
	0x03AD4A30 MOV X0, X19
	0x03AD4A34 MOV X1, X31
	0x03AD4A38 BL 0x3CDADE8
	0x03AD4A3C STR X0, [X19 + 0x728]
	0x03AD4A40 MOVZ W8, 0x1
	0x03AD4A44 MOV X0, X19
	0x03AD4A48 MOV X1, X31
	0x03AD4A4C STRB W8, [X19 + 0x305]
	0x03AD4A50 BL 0x3C32ECC
	0x03AD4A54 CBZ X0, 0x3AD4CF0
	0x03AD4A58 ADRP X8, 0x67F000
	0x03AD4A5C LDR X8, [X8 + 0xB40]
	0x03AD4A60 ADRP X21, 0x61F000
	0x03AD4A64 LDR X1, [X8]
	0x03AD4A68 LDR X21, [X21 + 0x598]
	0x03AD4A6C BL 0x21E52E4
	0x03AD4A70 STR X0, [X19 + 0x380]
	0x03AD4A74 MOV X20, X0
	0x03AD4A78 LDR X0, [X21]
	0x03AD4A7C LDR W8, [X0 + 0xE0]
	0x03AD4A80 CBNZ W8, 0x3AD4A88
	0x03AD4A84 BL 0x1C16DFC
	0x03AD4A88 MOV X0, X20
	0x03AD4A8C MOV X1, X31
	0x03AD4A90 MOV X2, X31
	0x03AD4A94 BL 0x3C3883C
	0x03AD4A98 TBZ X0, 0x0, 0x3AD4AC0
	0x03AD4A9C MOV X0, X19
	0x03AD4AA0 MOV X1, X31
	0x03AD4AA4 BL 0x3C32ECC
	0x03AD4AA8 CBZ X0, 0x3AD4CF0
	0x03AD4AAC ADRP X8, 0x684000
	0x03AD4AB0 LDR X8, [X8 + 0x558]
	0x03AD4AB4 LDR X1, [X8]
	0x03AD4AB8 BL 0x21E51FC
	0x03AD4ABC STR X0, [X19 + 0x380]
	0x03AD4AC0 ADRP X8, 0x684000
	0x03AD4AC4 LDR X8, [X8 + 0x720]
	0x03AD4AC8 MOV X0, X19
	0x03AD4ACC LDR X1, [X8]
	0x03AD4AD0 BL 0x21A3894
	0x03AD4AD4 STR X0, [X19 + 0x720]
	0x03AD4AD8 MOV X20, X0
	0x03AD4ADC LDR X0, [X21]
	0x03AD4AE0 LDR W8, [X0 + 0xE0]
	0x03AD4AE4 CBNZ W8, 0x3AD4AEC
	0x03AD4AE8 BL 0x1C16DFC
	0x03AD4AEC MOV X0, X20
	0x03AD4AF0 MOV X1, X31
	0x03AD4AF4 MOV X2, X31
	0x03AD4AF8 BL 0x3C3883C
	0x03AD4AFC TBZ X0, 0x0, 0x3AD4B24
	0x03AD4B00 MOV X0, X19
	0x03AD4B04 MOV X1, X31
	0x03AD4B08 BL 0x3C32ECC
	0x03AD4B0C CBZ X0, 0x3AD4CF0
	0x03AD4B10 ADRP X8, 0x684000
	0x03AD4B14 LDR X8, [X8 + 0x758]
	0x03AD4B18 LDR X1, [X8]
	0x03AD4B1C BL 0x21E51FC
	0x03AD4B20 STR X0, [X19 + 0x720]
	0x03AD4B24 LDR X0, [X21]
	0x03AD4B28 LDR X20, [X19 + 0x3A0]
	0x03AD4B2C LDR W8, [X0 + 0xE0]
	0x03AD4B30 CBNZ W8, 0x3AD4B38
	0x03AD4B34 BL 0x1C16DFC
	0x03AD4B38 MOV X0, X20
	0x03AD4B3C MOV X1, X31
	0x03AD4B40 MOV X2, X31
	0x03AD4B44 BL 0x3C3883C
	0x03AD4B48 TBZ X0, 0x0, 0x3AD4BA4
	0x03AD4B4C ADRP X8, 0x626000
	0x03AD4B50 LDR X8, [X8 + 0x700]
	0x03AD4B54 LDR X0, [X8]
	0x03AD4B58 BL 0x1C16F10
	0x03AD4B5C MOV X1, X31
	0x03AD4B60 MOV X20, X0
	0x03AD4B64 BL 0x3C17028
	0x03AD4B68 STR X20, [X19 + 0x3A0]
	0x03AD4B6C CBZ X20, 0x3AD4CF0
	0x03AD4B70 MOVZ W1, 0x3D
	0x03AD4B74 MOV X0, X20
	0x03AD4B78 MOV X2, X31
	0x03AD4B7C BL 0x3C396EC
	0x03AD4B80 ADRP X8, 0x684000
	0x03AD4B84 LDR X8, [X8 + 0x368]
	0x03AD4B88 LDR X0, [X8]
	0x03AD4B8C BL 0x1C16F10
	0x03AD4B90 MOV X1, X19
	0x03AD4B94 MOV X2, X31
	0x03AD4B98 MOV X20, X0
	0x03AD4B9C BL 0x3B1C058
	0x03AD4BA0 STR X20, [X19 + 0x368]
	0x03AD4BA4 ADRP X20, 0x684000
	0x03AD4BA8 ADRP X21, 0x684000
	0x03AD4BAC LDR X20, [X20 + 0x5B0]
	0x03AD4BB0 LDR X21, [X21 + 0x750]
	0x03AD4BB4 MOV X0, X19
	0x03AD4BB8 MOV X1, X31
	0x03AD4BBC BL 0x3B0AA60
	0x03AD4BC0 LDR X8, [X19]
	0x03AD4BC4 MOV X0, X19
	0x03AD4BC8 LDR X9, [X8 + 0x6C8]
	0x03AD4BCC LDR X1, [X8 + 0x6D0]
	0x03AD4BD0 BLR X9
	0x03AD4BD4 LDR X8, [X19 + 0x478]
	0x03AD4BD8 CBNZ X8, 0x3AD4BF4
	0x03AD4BDC ADRP X8, 0x684000
	0x03AD4BE0 LDR W1, [X19 + 0x738]
	0x03AD4BE4 LDR X8, [X8 + 0x5B8]
	0x03AD4BE8 LDR X0, [X8]
	0x03AD4BEC BL 0x1C16D6C
	0x03AD4BF0 STR X0, [X19 + 0x478]
	0x03AD4BF4 LDR X0, [X20]
	0x03AD4BF8 BL 0x1C16F10
	0x03AD4BFC MOV X1, X31
	0x03AD4C00 MOV X20, X0
	0x03AD4C04 BL 0x3ADB8D4
	0x03AD4C08 MOVZ W8, 0x1
	0x03AD4C0C STR X20, [X19 + 0x648]
	0x03AD4C10 STRB W8, [X19 + 0x734]
	0x03AD4C14 LDR X1, [X21]
	0x03AD4C18 MOV X0, X19
	0x03AD4C1C BL 0x21A453C
	0x03AD4C20 CBZ X0, 0x3AD4CF0
	0x03AD4C24 LDR X22, [X0 + 0x18]
	0x03AD4C28 MOV X20, X0
	0x03AD4C2C CBZ X22, 0x3AD4CC8
	0x03AD4C30 LDR X8, [X19 + 0x708]
	0x03AD4C34 CBZ X8, 0x3AD4CF0
	0x03AD4C38 LDR W8, [X8 + 0x18]
	0x03AD4C3C ADD W1, W22, 0x1
	0x03AD4C40 ADD X21, X19, 0x708
	0x03AD4C44 CMP W1, W8
	0x03AD4C48 B.LE 0x3AD4C60
	0x03AD4C4C ADRP X8, 0x684000
	0x03AD4C50 LDR X8, [X8 + 0x748]
	0x03AD4C54 MOV X0, X21
	0x03AD4C58 LDR X2, [X8]
	0x03AD4C5C BL 0x2142E6C
	0x03AD4C60 CMP W22, 0x1
	0x03AD4C64 B.LT 0x3AD4CC8
	0x03AD4C68 MOV X25, X31
	0x03AD4C6C AND X23, X22, 0x0
	0x03AD4C70 ADD X24, X20, 0x20
	0x03AD4C74 LDR W8, [X20 + 0x18]
	0x03AD4C78 CMP X25, X8
	0x03AD4C7C B.CS 0x3AD4CEC
	0x03AD4C80 LDR X26, [X21]
	0x03AD4C84 CBZ X26, 0x3AD4CF0
	0x03AD4C88 LDR X22, [X24, X25, LSL #3]
	0x03AD4C8C CBZ X22, 0x3AD4CA4
	0x03AD4C90 LDR X8, [X26]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x90F000
	013 Move W8, [X21+1289]
	014 Move W20, W1
	015 Move V8, V3
	016 Move V10, V2
	017 Move V9, V1
	018 Move V11, V0
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x620000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x685000
	028 Move X0, [X0+1384]
	029 Call 0x1C17CF4
	030 Move X0, 0x685000
	031 Move X0, [X0+1856]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+1289], W8
	035 Move W8, [X19+1020]
	036 Compare W8, 0
	037 JumpIfEqual {66}
	038 Move X8, 0x685000
	039 Move X8, [X8+1384]
	040 And W20, W20, 1
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Call TMP_UpdateManager.RegisterTextElementForCullingUpdate, X0
	049 Move [X19+1760], S11
	050 Move [X19+1764], S9
	051 Move [X19+1768], S10
	052 Move [X19+1772], S8
	053 Move [X19+1776], W20
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X22, [X31+64]
	057 Move X21, [X31+72]
	058 Move X24, [X31+48]
	059 Move X23, [X31+56]
	060 Move X30, [X31+32]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 Move D11, [X31+96]
	064 Move D10, [X31+104]
	065 Return 
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+2184]
	069 Move X1, [X8+2192]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move TEMP, X20
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {108}
	077 Add S5, S11, S10
	078 Add S4, S9, S8
	079 Subtract S6, S11, S5
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Add S16, S2, S0
	082 NotImplemented "Instruction FCSEL not yet implemented."
	083 NotImplemented "Instruction FCSEL not yet implemented."
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Subtract S17, S0, S16
	086 NotImplemented "Instruction FCSEL not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 NotImplemented "Instruction FCSEL not yet implemented."
	089 Add S17, S3, S1
	090 NotImplemented "Instruction FCSEL not yet implemented."
	091 Subtract S0, S1, S17
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 NotImplemented "Instruction FCSEL not yet implemented."
	094 NotImplemented "Instruction FCSEL not yet implemented."
	095 Add S1, S0, S3
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 Move W20, 1
	098 Add S1, S6, S7
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Add S1, S16, S2
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Subtract S1, S9, S4
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 NotImplemented "Instruction FCSEL not yet implemented."
	105 Add S1, S5, S1
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move W20, 1
	109 Move X0, [X19+1824]
	110 Compare X0, 0
	111 JumpIfEqual {178}
	112 Move X1, X31
	113 Call CanvasRenderer.get_cull, X0
	114 And W8, W0, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, [X19+1824]
	117 Compare X0, 0
	118 JumpIfEqual {178}
	119 Move W1, W20
	120 Move X2, X31
	121 Call CanvasRenderer.set_cull, X0, X1
	122 Move X0, [X19+192]
	123 Compare X0, 0
	124 JumpIfEqual {178}
	125 Move X8, 0x685000
	126 Move X8, [X8+1856]
	127 Move W1, W20
	128 Move X2, [X8]
	129 Call 0x2729B08, X0, X1
	130 Move X8, [X19]
	131 Move X0, X19
	132 Move X9, [X8+888]
	133 Move X1, [X8+896]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X19+1800]
	136 Compare X8, 0
	137 JumpIfEqual {178}
	138 Move X23, 0x620000
	139 Move X23, [X23+1432]
	140 Move W22, 5
	141 Move W9, [X8+24]
	142 Subtract X24, X22, 4
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, [X23]
	146 Move X21, [X8]
	147 Move W9, [X0+224]
	148 Compare W9, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X21
	152 Move X1, X31
	153 Move X2, X31
	154 Call Object.op_Inequality, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {54}
	159 Move X8, [X19+1800]
	160 Compare X8, 0
	161 JumpIfEqual {178}
	162 Move W9, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, [X8]
	165 Compare X0, 0
	166 JumpIfEqual {178}
	167 Move X1, X31
	168 Call Graphic.get_canvasRenderer, X0
	169 Compare X0, 0
	170 JumpIfEqual {178}
	171 Move W1, W20
	172 Move X2, X31
	173 Call CanvasRenderer.set_cull, X0, X1
	174 Move X8, [X19+1800]
	175 Add X22, X22, 1
	176 Compare X8, 0
	177 JumpIfNotEqual {141}
	178 Call 0x1C17F20
	179 Call 0x1C17F28

Method: System.Void UpdateCulling()

Disassembly:
	0x03AD4C94 MOV X0, X22
	0x03AD4C98 LDR X1, [X8 + 0x40]
	0x03AD4C9C BL 0x1C16E00
	0x03AD4CA0 CBZ X0, 0x3AD4CF4
	0x03AD4CA4 LDR W9, [X26 + 0x18]
	0x03AD4CA8 ADD X8, X25, 0x1
	0x03AD4CAC CMP X8, X9
	0x03AD4CB0 B.CS 0x3AD4CEC
	0x03AD4CB4 ADD X9, X26, X25, 0x3, LSL
	0x03AD4CB8 CMP X23, X8
	0x03AD4CBC MOV X25, X8
	0x03AD4CC0 STR X22, [X9 + 0x28]
	0x03AD4CC4 B.NE 0x3AD4C74
	0x03AD4CC8 MOVZ W8, 0x1
	0x03AD4CCC STRB W8, [X19 + 0x370]
	0x03AD4CD0 STRB W8, [X19 + 0x3FD]
	0x03AD4CD4 LDP X20, X19, [X31 + 0x40]
	0x03AD4CD8 LDP X22, X21, [X31 + 0x30]
	0x03AD4CDC LDP X24, X23, [X31 + 0x20]
	0x03AD4CE0 LDP X26, X25, [X31 + 0x10]
	0x03AD4CE4 LDR X30, [X31], #0x50
	0x03AD4CE8 RET
	0x03AD4CEC BL 0x1C16F28
	0x03AD4CF0 BL 0x1C16F20
	0x03AD4CF4 BL 0x1C16F44
	0x03AD4CF8 MOV X1, X31
	0x03AD4CFC BL 0x1C16DEC
	0x03AD4D00 STR X30, [X31 - 0x20]!
	0x03AD4D04 STP X20, X19, [X31 + 0x10]
	0x03AD4D08 ADRP X20, 0x90E000
	0x03AD4D0C LDRB W8, [X20 + 0x513]
	0x03AD4D10 MOV X19, X0
	0x03AD4D14 TBNZ X8, 0x0, 0x3AD4D38
	0x03AD4D18 ADRP X0, 0x675000
	0x03AD4D1C LDR X0, [X0 + 0x580]
	0x03AD4D20 BL 0x1C16CF4
	0x03AD4D24 ADRP X0, 0x684000
	0x03AD4D28 LDR X0, [X0 + 0x568]
	0x03AD4D2C BL 0x1C16CF4
	0x03AD4D30 MOVZ W8, 0x1
	0x03AD4D34 STRB W8, [X20 + 0x513]
	0x03AD4D38 LDRB W8, [X19 + 0x3FD]
	0x03AD4D3C CBZ W8, 0x3AD4E24
	0x03AD4D40 ADRP X20, 0x675000
	0x03AD4D44 LDRB W8, [X19 + 0x79C]
	0x03AD4D48 LDR X20, [X20 + 0x580]
	0x03AD4D4C CBNZ W8, 0x3AD4D58
	0x03AD4D50 MOVZ W8, 0x1
	0x03AD4D54 STRB W8, [X19 + 0x79C]
	0x03AD4D58 MOV X0, X19
	0x03AD4D5C BL 0x3AD4E30
	0x03AD4D60 LDR X8, [X19]
	0x03AD4D64 STR X0, [X19 + 0x728]
	0x03AD4D68 MOVZ W1, 0x1
	0x03AD4D6C MOV X0, X19
	0x03AD4D70 LDR X9, [X8 + 0x928]
	0x03AD4D74 LDR X2, [X8 + 0x930]
	0x03AD4D78 BLR X9
	0x03AD4D7C LDR X0, [X20]
	0x03AD4D80 LDR X20, [X19 + 0x728]
	0x03AD4D84 LDR W8, [X0 + 0xE0]
	0x03AD4D88 CBNZ W8, 0x3AD4D90
	0x03AD4D8C BL 0x1C16DFC
	0x03AD4D90 MOV X0, X20
	0x03AD4D94 MOV X1, X19
	0x03AD4D98 MOV X2, X31
	0x03AD4D9C BL 0x3CDBB24
	0x03AD4DA0 LDRB W8, [X19 + 0x320]
	0x03AD4DA4 CBNZ W8, 0x3AD4DCC
	0x03AD4DA8 ADRP X8, 0x684000
	0x03AD4DAC LDR X8, [X8 + 0x568]
	0x03AD4DB0 LDR X0, [X8]
	0x03AD4DB4 LDR W8, [X0 + 0xE0]
	0x03AD4DB8 CBNZ W8, 0x3AD4DC0
	0x03AD4DBC BL 0x1C16DFC
	0x03AD4DC0 MOV X0, X19
	0x03AD4DC4 MOV X1, X31
	0x03AD4DC8 BL 0x3B20260
	0x03AD4DCC LDR X8, [X19]
	0x03AD4DD0 MOV X0, X19
	0x03AD4DD4 LDR X9, [X8 + 0x8A8]
	0x03AD4DD8 LDR X1, [X8 + 0x8B0]
	0x03AD4DDC BLR X9
	0x03AD4DE0 LDR X8, [X19]
	0x03AD4DE4 MOV X0, X19
	0x03AD4DE8 LDR X9, [X8 + 0x2D8]
	0x03AD4DEC LDR X1, [X8 + 0x2E0]
	0x03AD4DF0 BLR X9
	0x03AD4DF4 LDR X8, [X19]
	0x03AD4DF8 MOV X0, X19
	0x03AD4DFC LDR X9, [X8 + 0x528]
	0x03AD4E00 LDR X1, [X8 + 0x530]
	0x03AD4E04 BLR X9
	0x03AD4E08 LDR X8, [X19]
	0x03AD4E0C MOV X0, X19
	0x03AD4E10 LDP X20, X19, [X31 + 0x10]
	0x03AD4E14 LDR X2, [X8 + 0x538]
	0x03AD4E18 LDR X1, [X8 + 0x540]
	0x03AD4E1C LDR X30, [X31], #0x20
	0x03AD4E20 BR X2
	0x03AD4E24 LDP X20, X19, [X31 + 0x10]
	0x03AD4E28 LDR X30, [X31], #0x20
	0x03AD4E2C RET
	0x03AD4E30 STR X30, [X31 - 0x30]!
	0x03AD4E34 STP X22, X21, [X31 + 0x10]
	0x03AD4E38 STP X20, X19, [X31 + 0x20]
	0x03AD4E3C ADRP X19, 0x90E000
	0x03AD4E40 ADRP X21, 0x684000
	0x03AD4E44 LDRB W8, [X19 + 0x517]
	0x03AD4E48 LDR X21, [X21 + 0x760]
	0x03AD4E4C MOV X20, X0
	0x03AD4E50 TBNZ X8, 0x0, 0x3AD4EA4
	0x03AD4E54 ADRP X0, 0x684000
	0x03AD4E58 LDR X0, [X0 + 0x768]
	0x03AD4E5C BL 0x1C16CF4
	0x03AD4E60 ADRP X0, 0x684000
	0x03AD4E64 LDR X0, [X0 + 0x770]
	0x03AD4E68 BL 0x1C16CF4
	0x03AD4E6C ADRP X0, 0x684000
	0x03AD4E70 LDR X0, [X0 + 0x778]
	0x03AD4E74 BL 0x1C16CF4
	0x03AD4E78 ADRP X0, 0x684000
	0x03AD4E7C LDR X0, [X0 + 0x780]
	0x03AD4E80 BL 0x1C16CF4
	0x03AD4E84 ADRP X0, 0x684000
	0x03AD4E88 LDR X0, [X0 + 0x788]
	0x03AD4E8C BL 0x1C16CF4
	0x03AD4E90 ADRP X0, 0x684000
	0x03AD4E94 LDR X0, [X0 + 0x760]
	0x03AD4E98 BL 0x1C16CF4
	0x03AD4E9C MOVZ W8, 0x1
	0x03AD4EA0 STRB W8, [X19 + 0x517]
	0x03AD4EA4 LDR X0, [X21]
	0x03AD4EA8 ADRP X19, 0x684000
	0x03AD4EAC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x90F000
	009 Move W8, [X20+1290]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x620000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x685000
	019 Move X0, [X0+1856]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1290], W8
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X9, [X8+2184]
	026 Move X1, [X8+2192]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move W8, [X19+1776]
	031 Compare W8, 0
	032 JumpIfEqual {68}
	033 Move V6, [X19+1760]
	034 Move V7, [X19+1768]
	035 Move V4, [X19+1764]
	036 Move V5, [X19+1772]
	037 Add S19, S2, S0
	038 Add S17, S6, S7
	039 Subtract S16, S6, S17
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 NotImplemented "Instruction FCSEL not yet implemented."
	042 Add S7, S4, S5
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Subtract S18, S0, S19
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Add S20, S3, S1
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 NotImplemented "Instruction FCSEL not yet implemented."
	051 Subtract S0, S1, S20
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction FCSEL not yet implemented."
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 Add S1, S0, S3
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move W20, 1
	058 Add S1, S2, S18
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Add S1, S17, S16
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Subtract S1, S4, S7
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction FCSEL not yet implemented."
	065 Add S1, S6, S1
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Move W20, 1
	069 Move X0, [X19+1824]
	070 Compare X0, 0
	071 JumpIfEqual {138}
	072 Move X1, X31
	073 Call CanvasRenderer.get_cull, X0
	074 And W8, W0, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X0, [X19+1824]
	077 Compare X0, 0
	078 JumpIfEqual {138}
	079 Move W1, W20
	080 Move X2, X31
	081 Call CanvasRenderer.set_cull, X0, X1
	082 Move X0, [X19+192]
	083 Compare X0, 0
	084 JumpIfEqual {138}
	085 Move X8, 0x685000
	086 Move X8, [X8+1856]
	087 Move W1, W20
	088 Move X2, [X8]
	089 Call 0x2729B08, X0, X1
	090 Move X8, [X19]
	091 Move X0, X19
	092 Move X9, [X8+888]
	093 Move X1, [X8+896]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X19+1800]
	096 Compare X8, 0
	097 JumpIfEqual {138}
	098 Move X23, 0x620000
	099 Move X23, [X23+1432]
	100 Move W22, 5
	101 Move W9, [X8+24]
	102 Subtract X24, X22, 4
	103 NotImplemented "Instruction CMP not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X23]
	106 Move X21, [X8]
	107 Move W9, [X0+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X21
	112 Move X1, X31
	113 Move X2, X31
	114 Call Object.op_Inequality, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {139}
	119 Move X8, [X19+1800]
	120 Compare X8, 0
	121 JumpIfEqual {138}
	122 Move W9, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, [X8]
	125 Compare X0, 0
	126 JumpIfEqual {138}
	127 Move X1, X31
	128 Call Graphic.get_canvasRenderer, X0
	129 Compare X0, 0
	130 JumpIfEqual {138}
	131 Move W1, W20
	132 Move X2, X31
	133 Call CanvasRenderer.set_cull, X0, X1
	134 Move X8, [X19+1800]
	135 Add X22, X22, 1
	136 Compare X8, 0
	137 JumpIfNotEqual {101}
	138 Call 0x1C17F20
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Return 
	147 Call 0x1C17F28

Method: System.Void UpdateMeshPadding()

Disassembly:
	0x03AD4EB0 LDR X19, [X19 + 0x780]
	0x03AD4EB4 CBNZ W8, 0x3AD4EBC
	0x03AD4EB8 BL 0x1C16DFC
	0x03AD4EBC LDR X0, [X19]
	0x03AD4EC0 BL 0x266FF3C
	0x03AD4EC4 MOV X19, X0
	0x03AD4EC8 MOV X0, X20
	0x03AD4ECC MOV X1, X31
	0x03AD4ED0 BL 0x3C32ECC
	0x03AD4ED4 CBZ X0, 0x3AD4F90
	0x03AD4ED8 ADRP X8, 0x684000
	0x03AD4EDC LDR X8, [X8 + 0x768]
	0x03AD4EE0 MOV W1, W31
	0x03AD4EE4 MOV X2, X19
	0x03AD4EE8 LDR X3, [X8]
	0x03AD4EEC BL 0x21E64C8
	0x03AD4EF0 CBZ X19, 0x3AD4F90
	0x03AD4EF4 LDR W8, [X19 + 0x18]
	0x03AD4EF8 CMP W8, 0x1
	0x03AD4EFC B.LT 0x3AD4F3C
	0x03AD4F00 ADRP X22, 0x684000
	0x03AD4F04 LDR X22, [X22 + 0x778]
	0x03AD4F08 MOV W20, W31
	0x03AD4F0C LDR X2, [X22]
	0x03AD4F10 MOV X0, X19
	0x03AD4F14 MOV W1, W20
	0x03AD4F18 BL 0x301BCCC
	0x03AD4F1C CBZ X0, 0x3AD4F90
	0x03AD4F20 MOV X1, X31
	0x03AD4F24 BL 0x3C32454
	0x03AD4F28 TBNZ X0, 0x0, 0x3AD4F44
	0x03AD4F2C LDR W8, [X19 + 0x18]
	0x03AD4F30 ADD W20, W20, 0x1
	0x03AD4F34 CMP W20, W8
	0x03AD4F38 B.LT 0x3AD4F0C
	0x03AD4F3C MOV X20, X31
	0x03AD4F40 B 0x3AD4F58
	0x03AD4F44 LDR X2, [X22]
	0x03AD4F48 MOV X0, X19
	0x03AD4F4C MOV W1, W20
	0x03AD4F50 BL 0x301BCCC
	0x03AD4F54 MOV X20, X0
	0x03AD4F58 LDR X0, [X21]
	0x03AD4F5C ADRP X21, 0x684000
	0x03AD4F60 LDR W8, [X0 + 0xE0]
	0x03AD4F64 LDR X21, [X21 + 0x788]
	0x03AD4F68 CBNZ W8, 0x3AD4F70
	0x03AD4F6C BL 0x1C16DFC
	0x03AD4F70 LDR X1, [X21]
	0x03AD4F74 MOV X0, X19
	0x03AD4F78 BL 0x266FFD4
	0x03AD4F7C MOV X0, X20
	0x03AD4F80 LDP X20, X19, [X31 + 0x20]
	0x03AD4F84 LDP X22, X21, [X31 + 0x10]
	0x03AD4F88 LDR X30, [X31], #0x30
	0x03AD4F8C RET
	0x03AD4F90 BL 0x1C16F20
	0x03AD4F94 STR X30, [X31 - 0x30]!
	0x03AD4F98 STP X22, X21, [X31 + 0x10]
	0x03AD4F9C STP X20, X19, [X31 + 0x20]
	0x03AD4FA0 ADRP X20, 0x90E000
	0x03AD4FA4 LDRB W8, [X20 + 0x514]
	0x03AD4FA8 MOV X19, X0
	0x03AD4FAC TBNZ X8, 0x0, 0x3AD4FF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x90F000
	007 Move X20, 0x685000
	008 Move W8, [X21+1291]
	009 Move X20, [X20+824]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x685000
	016 Move X0, [X0+824]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1291], W8
	020 Move X0, [X20]
	021 Move X20, [X19+272]
	022 Move W21, [X19+768]
	023 Move W22, [X19+618]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X0, X20
	033 Move X3, X31
	034 Call ShaderUtilities.GetPadding, X0, X1, X2
	035 Move X0, [X19+272]
	036 Move X1, X31
	037 Move [X19+1560], S0
	038 Call ShaderUtilities.IsMaskingEnabled, X0
	039 Move X8, [X19+872]
	040 And W9, W0, 1
	041 Move [X19+775], W9
	042 Move W9, 1
	043 Move [X19+880], W9
	044 Move [X19+769], W31
	045 Compare X8, 0
	046 JumpIfEqual {68}
	047 Move W20, 5
	048 Move W9, [X8+52]
	049 Subtract X8, X20, 4
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X19+1800]
	052 Compare X9, 0
	053 JumpIfEqual {67}
	054 Move W10, [X9+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, [X9]
	057 Compare X0, 0
	058 JumpIfEqual {67}
	059 Move W2, [X19+618]
	060 Move W1, [X19+768]
	061 Move X3, X31
	062 Call TMP_SubMeshUI.UpdateMeshPadding, X0, X1, X2
	063 Move X8, [X19+872]
	064 Add X20, X20, 1
	065 Compare X8, 0
	066 JumpIfNotEqual {48}
	067 Call 0x1C17F20
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return 
	074 Call 0x1C17F28

Method: System.Void InternalCrossFadeColor(UnityEngine.Color targetColor, System.Single duration, System.Boolean ignoreTimeScale, System.Boolean useAlpha)

Disassembly:
	0x03AD4FB0 ADRP X0, 0x684000
	0x03AD4FB4 LDR X0, [X0 + 0x718]
	0x03AD4FB8 BL 0x1C16CF4
	0x03AD4FBC ADRP X0, 0x675000
	0x03AD4FC0 LDR X0, [X0 + 0x580]
	0x03AD4FC4 BL 0x1C16CF4
	0x03AD4FC8 ADRP X0, 0x622000
	0x03AD4FCC LDR X0, [X0 + 0x920]
	0x03AD4FD0 BL 0x1C16CF4
	0x03AD4FD4 ADRP X0, 0x61F000
	0x03AD4FD8 LDR X0, [X0 + 0x598]
	0x03AD4FDC BL 0x1C16CF4
	0x03AD4FE0 ADRP X0, 0x684000
	0x03AD4FE4 LDR X0, [X0 + 0x568]
	0x03AD4FE8 BL 0x1C16CF4
	0x03AD4FEC MOVZ W8, 0x1
	0x03AD4FF0 STRB W8, [X20 + 0x514]
	0x03AD4FF4 LDRB W8, [X19 + 0x3FD]
	0x03AD4FF8 CBZ W8, 0x3AD5124
	0x03AD4FFC ADRP X8, 0x675000
	0x03AD5000 LDR X8, [X8 + 0x580]
	0x03AD5004 ADRP X22, 0x683000
	0x03AD5008 LDR X20, [X19 + 0x728]
	0x03AD500C LDR X0, [X8]
	0x03AD5010 LDR W8, [X0 + 0xE0]
	0x03AD5014 LDR X22, [X22 + 0x718]
	0x03AD5018 CBNZ W8, 0x3AD5020
	0x03AD501C BL 0x1C16DFC
	0x03AD5020 ADRP X21, 0x683000
	0x03AD5024 LDR X21, [X21 + 0x568]
	0x03AD5028 MOV X0, X20
	0x03AD502C MOV X1, X19
	0x03AD5030 MOV X2, X31
	0x03AD5034 BL 0x3CDB75C
	0x03AD5038 LDR X0, [X22]
	0x03AD503C LDR W8, [X0 + 0xE0]
	0x03AD5040 CBNZ W8, 0x3AD5048
	0x03AD5044 BL 0x1C16DFC
	0x03AD5048 ADRP X20, 0x61E000
	0x03AD504C LDR X20, [X20 + 0x598]
	0x03AD5050 MOV X0, X19
	0x03AD5054 MOV X1, X31
	0x03AD5058 BL 0x3CD1884
	0x03AD505C LDR X0, [X21]
	0x03AD5060 LDR W8, [X0 + 0xE0]
	0x03AD5064 CBNZ W8, 0x3AD506C
	0x03AD5068 BL 0x1C16DFC
	0x03AD506C MOV X0, X19
	0x03AD5070 MOV X1, X31
	0x03AD5074 BL 0x3B20A78
	0x03AD5078 LDR X0, [X20]

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X8, [X0+872]
	013 Compare X8, 0
	014 JumpIfEqual {48}
	015 Move W22, [X8+52]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move V8, V4
	018 Move V9, V3
	019 Move V10, V2
	020 Move V11, V1
	021 Move X19, X0
	022 Move V12, V0
	023 Move W23, 1
	024 And W20, W1, 1
	025 And W21, W2, 1
	026 Move X8, [X19+1800]
	027 Compare X8, 0
	028 JumpIfEqual {60}
	029 Move W9, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X8, W23
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {60}
	035 Move X8, [X0]
	036 Move V0, V12
	037 Move V1, V11
	038 Move V2, V10
	039 Move X9, [X8+1064]
	040 Move X3, [X8+1072]
	041 Move V3, V9
	042 Move V4, V8
	043 Move W1, W20
	044 Move W2, W21
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Add W23, W23, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X22, [X31+64]
	051 Move X21, [X31+72]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Move D9, [X31+32]
	055 Move D8, [X31+40]
	056 Move D11, [X31+16]
	057 Move D10, [X31+24]
	058 Move V12, [X31+96]
	059 Return 
	060 Call 0x1C17F20
	061 Call 0x1C17F28

Method: System.Void InternalCrossFadeAlpha(System.Single alpha, System.Single duration, System.Boolean ignoreTimeScale)

Disassembly:
	0x03AD507C LDR X20, [X19 + 0x720]
	0x03AD5080 LDR W8, [X0 + 0xE0]
	0x03AD5084 CBNZ W8, 0x3AD508C
	0x03AD5088 BL 0x1C16DFC
	0x03AD508C MOV X0, X20
	0x03AD5090 MOV X1, X31
	0x03AD5094 MOV X2, X31
	0x03AD5098 BL 0x3C354F8
	0x03AD509C TBZ X0, 0x0, 0x3AD50B0
	0x03AD50A0 LDR X0, [X19 + 0x720]
	0x03AD50A4 CBZ X0, 0x3AD5134
	0x03AD50A8 MOV X1, X31
	0x03AD50AC BL 0x3E22AF4
	0x03AD50B0 LDR X8, [X19]
	0x03AD50B4 ADRP X20, 0x621000
	0x03AD50B8 MOV X0, X19
	0x03AD50BC MOV W1, W31
	0x03AD50C0 LDR X9, [X8 + 0x928]
	0x03AD50C4 LDR X2, [X8 + 0x930]
	0x03AD50C8 LDR X20, [X20 + 0x920]
	0x03AD50CC BLR X9
	0x03AD50D0 LDR X0, [X20]
	0x03AD50D4 LDR X20, [X19 + 0x380]
	0x03AD50D8 LDR W8, [X0 + 0xE0]
	0x03AD50DC CBNZ W8, 0x3AD50E4
	0x03AD50E0 BL 0x1C16DFC
	0x03AD50E4 MOV X0, X20
	0x03AD50E8 MOV X1, X31
	0x03AD50EC BL 0x3E2F3D8
	0x03AD50F0 LDR X8, [X19]
	0x03AD50F4 MOV X0, X19
	0x03AD50F8 LDR X9, [X8 + 0x528]
	0x03AD50FC LDR X1, [X8 + 0x530]
	0x03AD5100 BLR X9
	0x03AD5104 LDR X8, [X19]
	0x03AD5108 MOV X0, X19
	0x03AD510C LDP X20, X19, [X31 + 0x20]
	0x03AD5110 LDP X22, X21, [X31 + 0x10]
	0x03AD5114 LDR X2, [X8 + 0x538]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X0+872]
	009 Compare X8, 0
	010 JumpIfEqual {36}
	011 Move W21, [X8+52]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move V8, V1
	014 Move X19, X0
	015 Move V9, V0
	016 Move W22, 1
	017 And W20, W1, 1
	018 Move X8, [X19+1800]
	019 Compare X8, 0
	020 JumpIfEqual {44}
	021 Move W9, [X8+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Add X8, X8, W22
	024 Move X0, [X8+32]
	025 Compare X0, 0
	026 JumpIfEqual {44}
	027 Move X8, [X0]
	028 Move V0, V9
	029 Move V1, V8
	030 Move W1, W20
	031 Move X9, [X8+1096]
	032 Move X2, [X8+1104]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Add W22, W22, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move D9, [X31+64]
	042 Move D8, [X31+72]
	043 Return 
	044 Call 0x1C17F20
	045 Call 0x1C17F28

Method: System.Void ForceMeshUpdate(System.Boolean ignoreActiveState = False, System.Boolean forceTextReparsing = False)

Disassembly:
	0x03AD5118 LDR X1, [X8 + 0x540]
	0x03AD511C LDR X30, [X31], #0x30
	0x03AD5120 BR X2
	0x03AD5124 LDP X20, X19, [X31 + 0x20]
	0x03AD5128 LDP X22, X21, [X31 + 0x10]
	0x03AD512C LDR X30, [X31], #0x30
	0x03AD5130 RET
	0x03AD5134 BL 0x1C16F20
	0x03AD5138 STR X30, [X31 - 0x30]!
	0x03AD513C STP X22, X21, [X31 + 0x10]
	0x03AD5140 STP X20, X19, [X31 + 0x20]
	0x03AD5144 ADRP X21, 0x90D000
	0x03AD5148 ADRP X20, 0x674000
	0x03AD514C LDRB W8, [X21 + 0x515]
	0x03AD5150 LDR X20, [X20 + 0x580]
	0x03AD5154 MOV X19, X0
	0x03AD5158 TBNZ X8, 0x0, 0x3AD5194
	0x03AD515C ADRP X0, 0x674000
	0x03AD5160 LDR X0, [X0 + 0x580]
	0x03AD5164 BL 0x1C16CF4
	0x03AD5168 ADRP X0, 0x61E000
	0x03AD516C LDR X0, [X0 + 0x598]
	0x03AD5170 BL 0x1C16CF4
	0x03AD5174 ADRP X0, 0x683000
	0x03AD5178 LDR X0, [X0 + 0x620]
	0x03AD517C BL 0x1C16CF4
	0x03AD5180 ADRP X0, 0x683000
	0x03AD5184 LDR X0, [X0 + 0x568]
	0x03AD5188 BL 0x1C16CF4
	0x03AD518C MOVZ W8, 0x1
	0x03AD5190 STRB W8, [X21 + 0x515]
	0x03AD5194 LDR X0, [X20]
	0x03AD5198 ADRP X22, 0x683000
	0x03AD519C LDR X20, [X19 + 0x728]
	0x03AD51A0 LDR W8, [X0 + 0xE0]
	0x03AD51A4 LDR X22, [X22 + 0x568]
	0x03AD51A8 CBNZ W8, 0x3AD51B0
	0x03AD51AC BL 0x1C16DFC
	0x03AD51B0 ADRP X21, 0x61E000
	0x03AD51B4 LDR X21, [X21 + 0x598]
	0x03AD51B8 MOV X0, X20
	0x03AD51BC MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x90E000
	007 Move X20, 0x61F000
	008 Move W8, [X22+1292]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 And W21, W1, 1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x675000
	017 Move X0, [X0+1496]
	018 Call 0x1C17CF4
	019 Move X0, 0x61F000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1292], W8
	024 Move W8, 1
	025 Move [X19+880], W8
	026 Move [X19+1708], W21
	027 Move X0, [X20]
	028 Move X20, [X19+1832]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {47}
	041 Move X8, 0x675000
	042 Move X8, [X8+1496]
	043 Move X0, X19
	044 Move X1, [X8]
	045 Call 0x21A4F50, X0
	046 Move [X19+1832], X0
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Call TextMeshProUGUI.OnPreRenderCanvas, X0
	054 Return 

Method: TMPro.TMP_TextInfo GetTextInfo(System.String text)

Disassembly:
	0x03AD51C0 MOV X2, X31
	0x03AD51C4 BL 0x3CDB75C
	0x03AD51C8 LDR X0, [X22]
	0x03AD51CC LDR W8, [X0 + 0xE0]
	0x03AD51D0 CBNZ W8, 0x3AD51D8
	0x03AD51D4 BL 0x1C16DFC
	0x03AD51D8 MOV X0, X19
	0x03AD51DC MOV X1, X31
	0x03AD51E0 BL 0x3B20A78
	0x03AD51E4 LDR X0, [X21]
	0x03AD51E8 LDR X20, [X19 + 0x3A0]
	0x03AD51EC LDR W8, [X0 + 0xE0]
	0x03AD51F0 CBNZ W8, 0x3AD51F8
	0x03AD51F4 BL 0x1C16DFC
	0x03AD51F8 MOV X0, X20
	0x03AD51FC MOV X1, X31
	0x03AD5200 MOV X2, X31
	0x03AD5204 BL 0x3C354F8
	0x03AD5208 TBZ X0, 0x0, 0x3AD522C
	0x03AD520C LDR X0, [X21]
	0x03AD5210 LDR X20, [X19 + 0x3A0]
	0x03AD5214 LDR W8, [X0 + 0xE0]
	0x03AD5218 CBNZ W8, 0x3AD5220
	0x03AD521C BL 0x1C16DFC
	0x03AD5220 MOV X0, X20
	0x03AD5224 MOV X1, X31
	0x03AD5228 BL 0x3C39564
	0x03AD522C LDR X0, [X21]
	0x03AD5230 LDR X20, [X19 + 0xA8]
	0x03AD5234 LDR W8, [X0 + 0xE0]
	0x03AD5238 CBNZ W8, 0x3AD5240
	0x03AD523C BL 0x1C16DFC
	0x03AD5240 MOV X0, X20
	0x03AD5244 MOV X1, X31
	0x03AD5248 MOV X2, X31
	0x03AD524C BL 0x3C354F8
	0x03AD5250 TBZ X0, 0x0, 0x3AD5280
	0x03AD5254 ADRP X8, 0x683000
	0x03AD5258 LDR X8, [X8 + 0x620]
	0x03AD525C LDR X20, [X19 + 0xA8]
	0x03AD5260 LDR X0, [X8]
	0x03AD5264 LDR W8, [X0 + 0xE0]
	0x03AD5268 CBNZ W8, 0x3AD5270
	0x03AD526C BL 0x1C16DFC
	0x03AD5270 MOV X0, X20
	0x03AD5274 MOV X1, X31
	0x03AD5278 BL 0x3B0EA80
	0x03AD527C STR X31, [X19 + 0xA8]
	0x03AD5280 STRB W31, [X19 + 0x79C]
	0x03AD5284 LDP X20, X19, [X31 + 0x20]
	0x03AD5288 LDP X22, X21, [X31 + 0x10]
	0x03AD528C LDR X30, [X31], #0x30
	0x03AD5290 RET
	0x03AD5294 STP X30, X23, [X31 - 0x30]!
	0x03AD5298 STP X22, X21, [X31 + 0x10]
	0x03AD529C STP X20, X19, [X31 + 0x20]
	0x03AD52A0 ADRP X20, 0x90D000
	0x03AD52A4 ADRP X23, 0x683000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x90E000
	007 Move X21, 0x61F000
	008 Move W8, [X22+1293]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x61F000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1293], W8
	021 Move W2, 1
	022 Move X0, X19
	023 Move X1, X20
	024 Move X3, X31
	025 Call TMP_Text.SetText, X0, X1, X2
	026 Move X8, [X19]
	027 Move X1, [X19+1144]
	028 Move X0, X19
	029 Move X9, [X8+2136]
	030 Move X2, [X8+2144]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X19]
	033 Move [X19+792], W31
	034 Move X0, X19
	035 Move X9, [X8+2216]
	036 Move X1, [X8+2224]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X21]
	039 Move X20, [X19+1832]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {56}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Graphic.get_canvas, X0
	055 Move [X19+1832], X0
	056 Move X8, [X19]
	057 Move X0, X19
	058 Move X9, [X8+2584]
	059 Move X1, [X8+2592]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move W8, 255
	062 Move X0, [X19+872]
	063 Move [X19+792], W8
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0

Method: System.Void ClearMesh()

Disassembly:
	0x03AD52A8 LDRB W8, [X20 + 0x516]
	0x03AD52AC LDR X23, [X23 + 0x338]
	0x03AD52B0 MOV X19, X0
	0x03AD52B4 TBNZ X8, 0x0, 0x3AD5350
	0x03AD52B8 ADRP X0, 0x61E000
	0x03AD52BC LDR X0, [X0 + 0xA28]
	0x03AD52C0 BL 0x1C16CF4
	0x03AD52C4 ADRP X0, 0x61E000
	0x03AD52C8 LDR X0, [X0 + 0x598]
	0x03AD52CC BL 0x1C16CF4
	0x03AD52D0 ADRP X0, 0x683000
	0x03AD52D4 LDR X0, [X0 + 0x5C0]
	0x03AD52D8 BL 0x1C16CF4
	0x03AD52DC ADRP X0, 0x683000
	0x03AD52E0 LDR X0, [X0 + 0x338]
	0x03AD52E4 BL 0x1C16CF4
	0x03AD52E8 ADRP X0, 0x61E000
	0x03AD52EC LDR X0, [X0 + 0xAC8]
	0x03AD52F0 BL 0x1C16CF4
	0x03AD52F4 ADRP X0, 0x683000
	0x03AD52F8 LDR X0, [X0 + 0x5C8]
	0x03AD52FC BL 0x1C16CF4
	0x03AD5300 ADRP X0, 0x683000
	0x03AD5304 LDR X0, [X0 + 0x5D0]
	0x03AD5308 BL 0x1C16CF4
	0x03AD530C ADRP X0, 0x683000
	0x03AD5310 LDR X0, [X0 + 0x5D8]
	0x03AD5314 BL 0x1C16CF4
	0x03AD5318 ADRP X0, 0x683000
	0x03AD531C LDR X0, [X0 + 0x5E8]
	0x03AD5320 BL 0x1C16CF4
	0x03AD5324 ADRP X0, 0x683000
	0x03AD5328 LDR X0, [X0 + 0x5F0]
	0x03AD532C BL 0x1C16CF4
	0x03AD5330 ADRP X0, 0x683000
	0x03AD5334 LDR X0, [X0 + 0x5F8]
	0x03AD5338 BL 0x1C16CF4
	0x03AD533C ADRP X0, 0x627000
	0x03AD5340 LDR X0, [X0 + 0x790]
	0x03AD5344 BL 0x1C16CF4
	0x03AD5348 MOVZ W8, 0x1
	0x03AD534C STRB W8, [X20 + 0x516]
	0x03AD5350 LDR X0, [X23]
	0x03AD5354 ADRP X22, 0x61E000
	0x03AD5358 LDR W8, [X0 + 0xE0]
	0x03AD535C LDR X22, [X22 + 0x598]
	0x03AD5360 CBNZ W8, 0x3AD5368
	0x03AD5364 BL 0x1C16DFC
	0x03AD5368 MOV X0, X31
	0x03AD536C BL 0x3B0DFAC
	0x03AD5370 LDR X0, [X22]
	0x03AD5374 LDR X20, [X19 + 0xF8]
	0x03AD5378 LDR W8, [X0 + 0xE0]
	0x03AD537C CBNZ W8, 0x3AD5384
	0x03AD5380 BL 0x1C16DFC
	0x03AD5384 MOV X0, X20
	0x03AD5388 MOV X1, X31
	0x03AD538C MOV X2, X31
	0x03AD5390 BL 0x3C3883C
	0x03AD5394 TBZ X0, 0x0, 0x3AD53D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x90E000
	008 Move W8, [X20+1294]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x61F000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1294], W8
	019 Move X0, [X19+1824]
	020 Compare X0, 0
	021 JumpIfEqual {68}
	022 Move X1, X31
	023 Move X2, X31
	024 Call CanvasRenderer.SetMesh, X0, X1
	025 Move X8, [X19+1800]
	026 Compare X8, 0
	027 JumpIfEqual {68}
	028 Move X21, 0x61F000
	029 Move X21, [X21+1432]
	030 Move W22, 5
	031 Move W9, [X8+24]
	032 Subtract X23, X22, 4
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X21]
	036 Move X20, [X8]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {69}
	049 Move X8, [X19+1800]
	050 Compare X8, 0
	051 JumpIfEqual {68}
	052 Move W9, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X8]
	055 Compare X0, 0
	056 JumpIfEqual {68}
	057 Move X1, X31
	058 Call Graphic.get_canvasRenderer, X0
	059 Compare X0, 0
	060 JumpIfEqual {68}
	061 Move X1, X31
	062 Move X2, X31
	063 Call CanvasRenderer.SetMesh, X0, X1
	064 Move X8, [X19+1800]
	065 Add X22, X22, 1
	066 Compare X8, 0
	067 JumpIfNotEqual {31}
	068 Call 0x1C17F20
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Return 
	076 Call 0x1C17F28

Method: System.Void add_OnPreRenderText(System.Action`1<TMPro.TMP_TextInfo> value)

Disassembly:
	0x03AD5398 MOV X0, X31
	0x03AD539C BL 0x3B13E54
	0x03AD53A0 LDR X8, [X22]
	0x03AD53A4 MOV X20, X0
	0x03AD53A8 LDR W9, [X8 + 0xE0]
	0x03AD53AC CBNZ W9, 0x3AD53B8
	0x03AD53B0 MOV X0, X8
	0x03AD53B4 BL 0x1C16DFC
	0x03AD53B8 MOV X0, X20
	0x03AD53BC MOV X1, X31
	0x03AD53C0 MOV X2, X31
	0x03AD53C4 BL 0x3C354F8
	0x03AD53C8 TBZ X0, 0x0, 0x3AD5660
	0x03AD53CC MOV X0, X31
	0x03AD53D0 BL 0x3B13E54
	0x03AD53D4 B 0x3AD567C
	0x03AD53D8 LDR X0, [X19 + 0xF8]
	0x03AD53DC CBZ X0, 0x3AD57BC
	0x03AD53E0 MOV X1, X31
	0x03AD53E4 BL 0x3AE1CD0
	0x03AD53E8 CBNZ X0, 0x3AD53FC
	0x03AD53EC LDR X0, [X19 + 0xF8]
	0x03AD53F0 CBZ X0, 0x3AD57BC
	0x03AD53F4 MOV X1, X31
	0x03AD53F8 BL 0x3AE1A88
	0x03AD53FC LDR X0, [X22]
	0x03AD5400 LDR X20, [X19 + 0x110]
	0x03AD5404 LDR W8, [X0 + 0xE0]
	0x03AD5408 CBNZ W8, 0x3AD5410
	0x03AD540C BL 0x1C16DFC
	0x03AD5410 MOV X0, X20
	0x03AD5414 MOV X1, X31
	0x03AD5418 MOV X2, X31
	0x03AD541C BL 0x3C3883C
	0x03AD5420 TBZ X0, 0x0, 0x3AD5458
	0x03AD5424 LDR X0, [X22]
	0x03AD5428 LDR X20, [X19 + 0x740]
	0x03AD542C LDR W8, [X0 + 0xE0]
	0x03AD5430 CBNZ W8, 0x3AD5438
	0x03AD5434 BL 0x1C16DFC
	0x03AD5438 MOV X0, X20
	0x03AD543C MOV X1, X31
	0x03AD5440 MOV X2, X31
	0x03AD5444 BL 0x3C354F8
	0x03AD5448 TBZ X0, 0x0, 0x3AD5458

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x90E000
	009 Move W8, [X21+1295]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x684000
	017 Move X0, [X0+1424]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1295], W8
	021 Move X24, 0x684000
	022 Move X21, [X20+1784]
	023 Move X24, [X24+1424]
	024 Add X20, X20, 1784
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_OnPreRenderText(System.Action`1<TMPro.TMP_TextInfo> value)

Disassembly:
	0x03AD544C LDR X8, [X19 + 0x740]
	0x03AD5450 STR X31, [X19 + 0x740]
	0x03AD5454 STR X8, [X19 + 0x110]
	0x03AD5458 LDR X0, [X22]
	0x03AD545C LDR X20, [X19 + 0x110]
	0x03AD5460 LDR W8, [X0 + 0xE0]
	0x03AD5464 CBNZ W8, 0x3AD546C
	0x03AD5468 BL 0x1C16DFC
	0x03AD546C MOV X0, X20
	0x03AD5470 MOV X1, X31
	0x03AD5474 MOV X2, X31
	0x03AD5478 BL 0x3C3883C
	0x03AD547C TBNZ X0, 0x0, 0x3AD5544
	0x03AD5480 LDR X0, [X23]
	0x03AD5484 LDR X20, [X19 + 0x110]
	0x03AD5488 LDR W8, [X0 + 0xE0]
	0x03AD548C CBNZ W8, 0x3AD5494
	0x03AD5490 BL 0x1C16DFC
	0x03AD5494 CBZ X20, 0x3AD57BC
	0x03AD5498 LDR X8, [X23]
	0x03AD549C MOV X0, X20
	0x03AD54A0 MOV X2, X31
	0x03AD54A4 LDR X8, [X8 + 0xB8]
	0x03AD54A8 LDR W1, [X8]
	0x03AD54AC BL 0x3C14AB8
	0x03AD54B0 LDR X8, [X22]
	0x03AD54B4 MOV X20, X0
	0x03AD54B8 LDR W9, [X8 + 0xE0]
	0x03AD54BC CBNZ W9, 0x3AD54C8
	0x03AD54C0 MOV X0, X8
	0x03AD54C4 BL 0x1C16DFC
	0x03AD54C8 MOV X0, X20
	0x03AD54CC MOV X1, X31
	0x03AD54D0 MOV X2, X31
	0x03AD54D4 BL 0x3C3883C
	0x03AD54D8 TBNZ X0, 0x0, 0x3AD5544
	0x03AD54DC LDR X0, [X19 + 0xF8]
	0x03AD54E0 CBZ X0, 0x3AD57BC
	0x03AD54E4 MOV X1, X31
	0x03AD54E8 BL 0x3AE1CF4
	0x03AD54EC CBZ X0, 0x3AD57BC
	0x03AD54F0 MOV X1, X31
	0x03AD54F4 BL 0x3C385F8
	0x03AD54F8 LDR X8, [X23]
	0x03AD54FC LDR X21, [X19 + 0x110]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x90E000
	009 Move W8, [X21+1296]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x684000
	017 Move X0, [X0+1424]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1296], W8
	021 Move X24, 0x684000
	022 Move X21, [X20+1784]
	023 Move X24, [X24+1424]
	024 Add X20, X20, 1784
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void UpdateGeometry(UnityEngine.Mesh mesh, System.Int32 index)

Disassembly:
	0x03AD5500 MOV W20, W0
	0x03AD5504 LDR W9, [X8 + 0xE0]
	0x03AD5508 CBNZ W9, 0x3AD5514
	0x03AD550C MOV X0, X8
	0x03AD5510 BL 0x1C16DFC
	0x03AD5514 CBZ X21, 0x3AD57BC
	0x03AD5518 LDR X8, [X23]
	0x03AD551C MOV X0, X21
	0x03AD5520 MOV X2, X31
	0x03AD5524 LDR X8, [X8 + 0xB8]
	0x03AD5528 LDR W1, [X8]
	0x03AD552C BL 0x3C14AB8
	0x03AD5530 CBZ X0, 0x3AD57BC
	0x03AD5534 MOV X1, X31
	0x03AD5538 BL 0x3C385F8
	0x03AD553C CMP W20, W0
	0x03AD5540 B.EQ 0x3AD5774
	0x03AD5544 LDR X8, [X19 + 0xF8]
	0x03AD5548 CBZ X8, 0x3AD57BC
	0x03AD554C LDR X0, [X22]
	0x03AD5550 LDR X20, [X8 + 0x20]
	0x03AD5554 LDR W9, [X0 + 0xE0]
	0x03AD5558 CBNZ W9, 0x3AD5560
	0x03AD555C BL 0x1C16DFC
	0x03AD5560 MOV X0, X20
	0x03AD5564 MOV X1, X31
	0x03AD5568 MOV X2, X31
	0x03AD556C BL 0x3C3883C
	0x03AD5570 TBZ X0, 0x0, 0x3AD5764
	0x03AD5574 ADRP X8, 0x61E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {39}
	007 Move X19, X1
	008 Move X21, X0
	009 Move X0, X1
	010 Move X1, X31
	011 Move W20, W2
	012 Call Mesh.RecalculateBounds, X0
	013 Compare W20, 0
	014 JumpIfEqual {36}
	015 Move X8, [X21+1800]
	016 Compare X8, 0
	017 JumpIfEqual {39}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Add X8, X8, W20
	021 Move X0, [X8+32]
	022 Compare X0, 0
	023 JumpIfEqual {39}
	024 Move X1, X31
	025 Call Graphic.get_canvasRenderer, X0
	026 Compare X0, 0
	027 JumpIfEqual {39}
	028 Move X1, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call CanvasRenderer.SetMesh, X0, X1
	035 Return 
	036 Move X0, [X21+1824]
	037 Compare X0, 0
	038 JumpIfNotEqual {28}
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Void UpdateVertexData(TMPro.TMP_VertexDataUpdateFlags flags)

Disassembly:
	0x03AD5578 LDR X8, [X8 + 0xAC8]
	0x03AD557C MOVZ W1, 0x5
	0x03AD5580 LDR X0, [X8]
	0x03AD5584 BL 0x1C16D6C
	0x03AD5588 CBZ X0, 0x3AD57BC
	0x03AD558C LDR W8, [X0 + 0x18]
	0x03AD5590 MOV X20, X0
	0x03AD5594 CBZ W8, 0x3AD57C0
	0x03AD5598 ADRP X8, 0x683000
	0x03AD559C LDR X8, [X8 + 0x5C8]
	0x03AD55A0 LDR X8, [X8]
	0x03AD55A4 STR X8, [X20 + 0x20]
	0x03AD55A8 LDR X0, [X19 + 0xF8]
	0x03AD55AC CBZ X0, 0x3AD57BC
	0x03AD55B0 MOV X1, X31
	0x03AD55B4 BL 0x3C389D4
	0x03AD55B8 LDR W8, [X20 + 0x18]
	0x03AD55BC CMP W8, 0x1
	0x03AD55C0 B.LS 0x3AD57C0
	0x03AD55C4 CMP W8, 0x2
	0x03AD55C8 STR X0, [X20 + 0x28]
	0x03AD55CC B.EQ 0x3AD57C0
	0x03AD55D0 ADRP X8, 0x683000
	0x03AD55D4 LDR X8, [X8 + 0x5F8]
	0x03AD55D8 MOV X0, X19
	0x03AD55DC MOV X1, X31
	0x03AD55E0 LDR X8, [X8]
	0x03AD55E4 STR X8, [X20 + 0x30]
	0x03AD55E8 BL 0x3C32ECC
	0x03AD55EC CBZ X0, 0x3AD57BC
	0x03AD55F0 MOV X1, X31
	0x03AD55F4 BL 0x3C389D4
	0x03AD55F8 LDR W8, [X20 + 0x18]
	0x03AD55FC CMP W8, 0x3
	0x03AD5600 B.LS 0x3AD57C0
	0x03AD5604 CMP W8, 0x4
	0x03AD5608 STR X0, [X20 + 0x38]
	0x03AD560C B.EQ 0x3AD57C0
	0x03AD5610 ADRP X8, 0x683000
	0x03AD5614 LDR X8, [X8 + 0x5D0]
	0x03AD5618 MOV X0, X20
	0x03AD561C MOV X1, X31
	0x03AD5620 LDR X8, [X8]
	0x03AD5624 STR X8, [X20 + 0x40]
	0x03AD5628 BL 0x32278CC
	0x03AD562C ADRP X8, 0x61E000
	0x03AD5630 LDR X8, [X8 + 0xA28]
	0x03AD5634 MOV X20, X0
	0x03AD5638 LDR X8, [X8]
	0x03AD563C LDR W9, [X8 + 0xE0]
	0x03AD5640 CBNZ W9, 0x3AD564C
	0x03AD5644 MOV X0, X8
	0x03AD5648 BL 0x1C16DFC
	0x03AD564C MOV X0, X20
	0x03AD5650 MOV X1, X19
	0x03AD5654 MOV X2, X31
	0x03AD5658 BL 0x3C06B0C
	0x03AD565C B 0x3AD5774
	0x03AD5660 ADRP X8, 0x683000
	0x03AD5664 ADRP X9, 0x683000
	0x03AD5668 LDR X8, [X8 + 0x5F0]
	0x03AD566C LDR X9, [X9 + 0x5C0]
	0x03AD5670 LDR X0, [X8]
	0x03AD5674 LDR X1, [X9]
	0x03AD5678 BL 0x2241FB8
	0x03AD567C STR X0, [X19 + 0xF8]
	0x03AD5680 MOV X20, X0
	0x03AD5684 LDR X0, [X22]
	0x03AD5688 LDR W8, [X0 + 0xE0]
	0x03AD568C CBNZ W8, 0x3AD5694
	0x03AD5690 BL 0x1C16DFC
	0x03AD5694 MOV X0, X20
	0x03AD5698 MOV X1, X31
	0x03AD569C MOV X2, X31
	0x03AD56A0 BL 0x3C3883C
	0x03AD56A4 TBZ X0, 0x0, 0x3AD5724
	0x03AD56A8 MOV X0, X19
	0x03AD56AC MOV X1, X31
	0x03AD56B0 BL 0x3C32ECC
	0x03AD56B4 CBZ X0, 0x3AD57BC
	0x03AD56B8 MOV X1, X31
	0x03AD56BC BL 0x3C389D4
	0x03AD56C0 ADRP X8, 0x683000
	0x03AD56C4 LDR X8, [X8 + 0x5D8]
	0x03AD56C8 ADRP X9, 0x627000
	0x03AD56CC LDR X9, [X9 + 0x790]
	0x03AD56D0 MOV X1, X0
	0x03AD56D4 LDR X8, [X8]
	0x03AD56D8 MOV X3, X31
	0x03AD56DC LDR X2, [X9]
	0x03AD56E0 MOV X0, X8
	0x03AD56E4 BL 0x32274B8
	0x03AD56E8 ADRP X8, 0x61E000
	0x03AD56EC LDR X8, [X8 + 0xA28]
	0x03AD56F0 MOV X20, X0
	0x03AD56F4 LDR X8, [X8]
	0x03AD56F8 LDR W9, [X8 + 0xE0]
	0x03AD56FC CBNZ W9, 0x3AD5708
	0x03AD5700 MOV X0, X8
	0x03AD5704 BL 0x1C16DFC
	0x03AD5708 MOV X0, X20
	0x03AD570C MOV X1, X19
	0x03AD5710 LDP X20, X19, [X31 + 0x20]
	0x03AD5714 LDP X22, X21, [X31 + 0x10]
	0x03AD5718 MOV X2, X31
	0x03AD571C LDP X30, X23, [X31], #0x30
	0x03AD5720 B 0x3C06B0C
	0x03AD5724 LDR X0, [X19 + 0xF8]
	0x03AD5728 CBZ X0, 0x3AD57BC
	0x03AD572C MOV X1, X31
	0x03AD5730 BL 0x3AE1CD0
	0x03AD5734 CBNZ X0, 0x3AD5764
	0x03AD5738 ADRP X8, 0x61E000
	0x03AD573C LDR X8, [X8 + 0xA28]
	0x03AD5740 LDR X0, [X8]
	0x03AD5744 LDR W8, [X0 + 0xE0]
	0x03AD5748 CBNZ W8, 0x3AD5750
	0x03AD574C BL 0x1C16DFC
	0x03AD5750 ADRP X8, 0x683000
	0x03AD5754 LDR X8, [X8 + 0x5E8]
	0x03AD5758 MOV X1, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+872]
	010 Compare X8, 0
	011 JumpIfEqual {166}
	012 Move W8, [X8+52]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add X8, X8, X8
	015 Move X19, X0
	016 Move W20, W1
	017 Move X22, X31
	018 Move X23, X8
	019 ShiftRight X23, 60
	020 And X23, X23, 0x7FFFFFF
	021 Move W24, 4
	022 Subtract X25, X24, 4
	023 Compare X22, 0
	024 JumpIfEqual {54}
	025 Move X8, [X19+1800]
	026 Compare X8, 0
	027 JumpIfEqual {166}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X8]
	031 Compare X0, 0
	032 JumpIfEqual {166}
	033 Move X1, X31
	034 Call TMP_SubMeshUI.get_mesh, X0
	035 Move X21, X0
	036 Move TEMP, X20
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {59}
	040 Move TEMP, X20
	041 And TEMP, TEMP, 2
	042 Compare TEMP, 2
	043 JumpIfEqual {78}
	044 Move TEMP, X20
	045 And TEMP, TEMP, 4
	046 Compare TEMP, 4
	047 JumpIfEqual {97}
	048 Move TEMP, X20
	049 And TEMP, TEMP, 16
	050 Compare TEMP, 16
	051 JumpIfEqual {116}
	052 Compare X21, 0
	053 JumpIfNotEqual {131}
	054 Move X21, [X19+928]
	055 Move TEMP, X20
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {40}
	059 Move X8, [X19+872]
	060 Compare X8, 0
	061 JumpIfEqual {166}
	062 Move X8, [X8+96]
	063 Compare X8, 0
	064 JumpIfEqual {166}
	065 Move W9, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare X21, 0
	068 JumpIfEqual {166}
	069 Add X8, X8, X22
	070 Move X1, [X8+48]
	071 Move X0, X21
	072 Move X2, X31
	073 Call Mesh.set_vertices, X0, X1
	074 Move TEMP, X20
	075 And TEMP, TEMP, 2
	076 Compare TEMP, 2
	077 JumpIfNotEqual {44}
	078 Move X8, [X19+872]
	079 Compare X8, 0
	080 JumpIfEqual {166}
	081 Move X8, [X8+96]
	082 Compare X8, 0
	083 JumpIfEqual {166}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Compare X21, 0
	087 JumpIfEqual {166}
	088 Add X8, X8, X22
	089 Move X1, [X8+72]
	090 Move X0, X21
	091 Move X2, X31
	092 Call Mesh.set_uv, X0, X1
	093 Move TEMP, X20
	094 And TEMP, TEMP, 4
	095 Compare TEMP, 4
	096 JumpIfNotEqual {48}
	097 Move X8, [X19+872]
	098 Compare X8, 0
	099 JumpIfEqual {166}
	100 Move X8, [X8+96]
	101 Compare X8, 0
	102 JumpIfEqual {166}
	103 Move W9, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare X21, 0
	106 JumpIfEqual {166}
	107 Add X8, X8, X22
	108 Move X1, [X8+80]
	109 Move X0, X21
	110 Move X2, X31
	111 Call Mesh.set_uv2, X0, X1
	112 Move TEMP, X20
	113 And TEMP, TEMP, 16
	114 Compare TEMP, 16
	115 JumpIfNotEqual {52}
	116 Move X8, [X19+872]
	117 Compare X8, 0
	118 JumpIfEqual {166}
	119 Move X8, [X8+96]
	120 Compare X8, 0
	121 JumpIfEqual {166}
	122 Move W9, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Compare X21, 0
	125 JumpIfEqual {166}
	126 Add X8, X8, X22
	127 Move X1, [X8+88]
	128 Move X0, X21
	129 Move X2, X31
	130 Call Mesh.set_colors32, X0, X1
	131 Move X0, X21
	132 Move X1, X31
	133 Call Mesh.RecalculateBounds, X0
	134 Compare X22, 0
	135 JumpIfEqual {148}
	136 Move X8, [X19+1800]
	137 Compare X8, 0
	138 JumpIfEqual {166}
	139 Move W9, [X8+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, [X8]
	142 Compare X0, 0
	143 JumpIfEqual {166}
	144 Move X1, X31
	145 Call Graphic.get_canvasRenderer, X0
	146 Compare X0, 0
	147 JumpIfNotEqual {151}
	148 Move X0, [X19+1824]
	149 Compare X0, 0
	150 JumpIfEqual {166}
	151 Move X1, X21
	152 Move X2, X31
	153 Call CanvasRenderer.SetMesh, X0, X1
	154 Add X22, X22, 80
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X24, X24, 1
	157 Move X20, [X31+48]
	158 Move X19, [X31+56]
	159 Move X22, [X31+32]
	160 Move X21, [X31+40]
	161 Move X24, [X31+16]
	162 Move X23, [X31+24]
	163 Move X30, [X31+64]
	164 Move X25, [X31+72]
	165 Return 
	166 Call 0x1C17F20
	167 Call 0x1C17F28

Method: System.Void UpdateVertexData()

Disassembly:
	0x03AD575C LDR X0, [X8]
	0x03AD5760 BL 0x3C06048
	0x03AD5764 LDR X8, [X19 + 0xF8]
	0x03AD5768 CBZ X8, 0x3AD57BC
	0x03AD576C LDR X8, [X8 + 0x20]
	0x03AD5770 STR X8, [X19 + 0x110]
	0x03AD5774 LDR X1, [X19 + 0xF8]
	0x03AD5778 MOV X0, X19
	0x03AD577C MOV X2, X31
	0x03AD5780 BL 0x3B0ACD4
	0x03AD5784 LDR X8, [X19]
	0x03AD5788 MOV X0, X19
	0x03AD578C LDR X9, [X8 + 0x7A8]
	0x03AD5790 LDR X1, [X8 + 0x7B0]
	0x03AD5794 BLR X9
	0x03AD5798 LDR X8, [X19]
	0x03AD579C STR S0, [X19 + 0x618]
	0x03AD57A0 MOV X0, X19
	0x03AD57A4 LDP X20, X19, [X31 + 0x20]
	0x03AD57A8 LDR X2, [X8 + 0x308]
	0x03AD57AC LDR X1, [X8 + 0x310]
	0x03AD57B0 LDP X22, X21, [X31 + 0x10]
	0x03AD57B4 LDP X30, X23, [X31], #0x30
	0x03AD57B8 BR X2
	0x03AD57BC BL 0x1C16F20
	0x03AD57C0 BL 0x1C16F28
	0x03AD57C4 SUB X31, X31, 0x140
	0x03AD57C8 STR D14, [X31 + 0xD0]
	0x03AD57CC STP D13, D12, [X31 + 0xE0]
	0x03AD57D0 STP D11, D10, [X31 + 0xF0]
	0x03AD57D4 STP D9, D8, [X31 + 0x100]
	0x03AD57D8 STP X29, X30, [X31 + 0x110]
	0x03AD57DC STP X22, X21, [X31 + 0x120]
	0x03AD57E0 STP X20, X19, [X31 + 0x130]
	0x03AD57E4 ADRP X20, 0x90D000
	0x03AD57E8 ADRP X21, 0x683000
	0x03AD57EC LDRB W8, [X20 + 0x518]
	0x03AD57F0 LDR X21, [X21 + 0x338]
	0x03AD57F4 MOV X19, X0
	0x03AD57F8 TBNZ X8, 0x0, 0x3AD581C
	0x03AD57FC ADRP X0, 0x61E000
	0x03AD5800 LDR X0, [X0 + 0x598]
	0x03AD5804 BL 0x1C16CF4
	0x03AD5808 ADRP X0, 0x683000
	0x03AD580C LDR X0, [X0 + 0x338]
	0x03AD5810 BL 0x1C16CF4
	0x03AD5814 MOVZ W8, 0x1
	0x03AD5818 STRB W8, [X20 + 0x518]
	0x03AD581C LDR X0, [X21]
	0x03AD5820 LDR X20, [X19 + 0x110]
	0x03AD5824 LDR W8, [X0 + 0xE0]
	0x03AD5828 CBNZ W8, 0x3AD5830
	0x03AD582C BL 0x1C16DFC
	0x03AD5830 CBZ X20, 0x3AD5A34
	0x03AD5834 LDR X8, [X21]
	0x03AD5838 MOV X0, X20
	0x03AD583C MOV X2, X31
	0x03AD5840 LDR X8, [X8 + 0xB8]
	0x03AD5844 LDR W1, [X8 + 0x8C]
	0x03AD5848 BL 0x3C14D08
	0x03AD584C TBZ X0, 0x0, 0x3AD5A10
	0x03AD5850 LDR X0, [X21]
	0x03AD5854 LDR X20, [X19 + 0x110]
	0x03AD5858 LDR W8, [X0 + 0xE0]
	0x03AD585C CBNZ W8, 0x3AD5864
	0x03AD5860 BL 0x1C16DFC
	0x03AD5864 CBZ X20, 0x3AD5A34
	0x03AD5868 LDR X8, [X21]
	0x03AD586C MOV X0, X20
	0x03AD5870 MOV X2, X31
	0x03AD5874 LDR X8, [X8 + 0xB8]
	0x03AD5878 LDR W1, [X8 + 0x8C]
	0x03AD587C BL 0x3C14AB8
	0x03AD5880 ADRP X8, 0x61E000
	0x03AD5884 LDR X8, [X8 + 0x598]
	0x03AD5888 MOV X20, X0
	0x03AD588C LDR X8, [X8]
	0x03AD5890 LDR W9, [X8 + 0xE0]
	0x03AD5894 CBNZ W9, 0x3AD58A0
	0x03AD5898 MOV X0, X8
	0x03AD589C BL 0x1C16DFC
	0x03AD58A0 MOV X0, X20
	0x03AD58A4 MOV X1, X31
	0x03AD58A8 MOV X2, X31
	0x03AD58AC BL 0x3C3883C
	0x03AD58B0 TBNZ X0, 0x0, 0x3AD5A10
	0x03AD58B4 LDR X0, [X21]
	0x03AD58B8 LDR X20, [X19 + 0x110]
	0x03AD58BC LDR W8, [X0 + 0xE0]
	0x03AD58C0 CBNZ W8, 0x3AD58C8
	0x03AD58C4 BL 0x1C16DFC
	0x03AD58C8 CBZ X20, 0x3AD5A34
	0x03AD58CC LDR X8, [X21]
	0x03AD58D0 MOV X0, X20
	0x03AD58D4 MOV X2, X31
	0x03AD58D8 LDR X8, [X8 + 0xB8]
	0x03AD58DC LDR W1, [X8 + 0x94]
	0x03AD58E0 BL 0x3C15FDC
	0x03AD58E4 ADRP X20, 0x903000
	0x03AD58E8 LDRB W8, [X20 + 0x783]
	0x03AD58EC MOV V11.16B, V0.16B
	0x03AD58F0 MOV V12.16B, V1.16B
	0x03AD58F4 MOV V13.16B, V2.16B
	0x03AD58F8 CBNZ W8, 0x3AD5910
	0x03AD58FC ADRP X0, 0x61E000
	0x03AD5900 LDR X0, [X0 + 0x5A0]
	0x03AD5904 BL 0x1C16CF4
	0x03AD5908 MOVZ W8, 0x1
	0x03AD590C STRB W8, [X20 + 0x783]
	0x03AD5910 ADRP X20, 0x61E000
	0x03AD5914 LDR X20, [X20 + 0x5A0]
	0x03AD5918 ADRP X9, 0xFFFFFFFFFD015000
	0x03AD591C LDR V2, [X9 + 0x104]
	0x03AD5920 MOV X0, X31
	0x03AD5924 LDR X8, [X20]
	0x03AD5928 FMUL S0, S11, S2
	0x03AD592C FMUL S1, S12, S2
	0x03AD5930 LDR X8, [X8 + 0xB8]
	0x03AD5934 FMUL S2, S13, S2
	0x03AD5938 LDP S10, S9, [X8]
	0x03AD593C LDR V8, [X8 + 0x8]
	0x03AD5940 BL 0x3C2A574
	0x03AD5944 ADRP X22, 0x903000
	0x03AD5948 LDRB W8, [X22 + 0x85B]
	0x03AD594C MOV V11.16B, V0.16B
	0x03AD5950 MOV V12.16B, V1.16B
	0x03AD5954 MOV V13.16B, V2.16B
	0x03AD5958 MOV V14.16B, V3.16B
	0x03AD595C CBNZ W8, 0x3AD5974
	0x03AD5960 ADRP X0, 0x61E000
	0x03AD5964 LDR X0, [X0 + 0x5A0]
	0x03AD5968 BL 0x1C16CF4
	0x03AD596C MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x90E000
	010 Move W8, [X20+1297]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x684000
	017 Move X0, [X0+840]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1297], W8
	021 Move X8, [X19+872]
	022 Compare X8, 0
	023 JumpIfEqual {155}
	024 Move W8, [X8+52]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X22, 0x684000
	027 Move X22, [X22+840]
	028 Add X8, X8, X8
	029 Move X21, X31
	030 Move X23, X8
	031 ShiftRight X23, 60
	032 And X23, X23, 0x7FFFFFF
	033 Move W24, 4
	034 Subtract X25, X24, 4
	035 Compare X21, 0
	036 JumpIfEqual {65}
	037 Move X8, [X19+872]
	038 Compare X8, 0
	039 JumpIfEqual {155}
	040 Move X20, [X8+96]
	041 Compare X20, 0
	042 JumpIfEqual {155}
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W8, [X20+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X20, X21
	051 Add X0, X8, 32
	052 Move X1, X31
	053 Call TMP_MeshInfo.ClearUnusedVertices, X0
	054 Move X8, [X19+1800]
	055 Compare X8, 0
	056 JumpIfEqual {155}
	057 Move W9, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X8]
	060 Compare X0, 0
	061 JumpIfEqual {155}
	062 Move X1, X31
	063 Call TMP_SubMeshUI.get_mesh, X0
	064 Move X20, X0
	065 Move X20, [X19+928]
	066 Move X8, [X19+872]
	067 Compare X8, 0
	068 JumpIfEqual {155}
	069 Move X8, [X8+96]
	070 Compare X8, 0
	071 JumpIfEqual {155}
	072 Move W9, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X20, 0
	075 JumpIfEqual {155}
	076 Add X8, X8, X21
	077 Move X1, [X8+48]
	078 Move X0, X20
	079 Move X2, X31
	080 Call Mesh.set_vertices, X0, X1
	081 Move X8, [X19+872]
	082 Compare X8, 0
	083 JumpIfEqual {155}
	084 Move X8, [X8+96]
	085 Compare X8, 0
	086 JumpIfEqual {155}
	087 Move W9, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X8, X21
	090 Move X1, [X8+72]
	091 Move X0, X20
	092 Move X2, X31
	093 Call Mesh.set_uv, X0, X1
	094 Move X8, [X19+872]
	095 Compare X8, 0
	096 JumpIfEqual {155}
	097 Move X8, [X8+96]
	098 Compare X8, 0
	099 JumpIfEqual {155}
	100 Move W9, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X8, X8, X21
	103 Move X1, [X8+80]
	104 Move X0, X20
	105 Move X2, X31
	106 Call Mesh.set_uv2, X0, X1
	107 Move X8, [X19+872]
	108 Compare X8, 0
	109 JumpIfEqual {155}
	110 Move X8, [X8+96]
	111 Compare X8, 0
	112 JumpIfEqual {155}
	113 Move W9, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X8, X8, X21
	116 Move X1, [X8+88]
	117 Move X0, X20
	118 Move X2, X31
	119 Call Mesh.set_colors32, X0, X1
	120 Move X0, X20
	121 Move X1, X31
	122 Call Mesh.RecalculateBounds, X0
	123 Compare X21, 0
	124 JumpIfEqual {137}
	125 Move X8, [X19+1800]
	126 Compare X8, 0
	127 JumpIfEqual {155}
	128 Move W9, [X8+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, [X8]
	131 Compare X0, 0
	132 JumpIfEqual {155}
	133 Move X1, X31
	134 Call Graphic.get_canvasRenderer, X0
	135 Compare X0, 0
	136 JumpIfNotEqual {140}
	137 Move X0, [X19+1824]
	138 Compare X0, 0
	139 JumpIfEqual {155}
	140 Move X1, X20
	141 Move X2, X31
	142 Call CanvasRenderer.SetMesh, X0, X1
	143 Add X21, X21, 80
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add X24, X24, 1
	146 Move X20, [X31+48]
	147 Move X19, [X31+56]
	148 Move X22, [X31+32]
	149 Move X21, [X31+40]
	150 Move X24, [X31+16]
	151 Move X23, [X31+24]
	152 Move X30, [X31+64]
	153 Move X25, [X31+72]
	154 Return 
	155 Call 0x1C17F20
	156 Call 0x1C17F28

Method: System.Void UpdateFontAsset()

Disassembly:
	0x03AD5970 STRB W8, [X22 + 0x85B]
	0x03AD5974 LDR X8, [X20]
	0x03AD5978 MOV V1.16B, V9.16B
	0x03AD597C MOV V2.16B, V8.16B

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+1736]
	003 Move X1, [X8+1744]
	004 CallNoReturn X2

Method: System.Void Awake()

Disassembly:
	0x03AD5980 MOV V3.16B, V11.16B
	0x03AD5984 LDR X8, [X8 + 0xB8]
	0x03AD5988 MOV V4.16B, V12.16B
	0x03AD598C MOV V5.16B, V13.16B
	0x03AD5990 MOV V6.16B, V14.16B
	0x03AD5994 LDR V0, [X8 + 0x14]
	0x03AD5998 LDUR X9, [X8 + 0xC]
	0x03AD599C ADD X8, X31, 0x50
	0x03AD59A0 MOV X0, X31
	0x03AD59A4 STR S0, [X31 + 0x8]
	0x03AD59A8 MOV V0.16B, V10.16B
	0x03AD59AC STR X9, [X31]
	0x03AD59B0 BL 0x3C26FA8
	0x03AD59B4 LDP V1, V0, [X31 + 0x70]
	0x03AD59B8 LDP V3, V2, [X31 + 0x50]
	0x03AD59BC ADD X8, X19, 0x75C
	0x03AD59C0 STP V1, V0, [X31 + 0xB0]
	0x03AD59C4 STP V3, V2, [X31 + 0x90]
	0x03AD59C8 STP V1, V0, [X8 + 0x20]
	0x03AD59CC STP V3, V2, [X8]
	0x03AD59D0 LDR X8, [X21]
	0x03AD59D4 LDR X0, [X19 + 0x110]
	0x03AD59D8 LDP V0, V1, [X31 + 0x90]
	0x03AD59DC LDP V2, V3, [X31 + 0xB0]
	0x03AD59E0 LDR X8, [X8 + 0xB8]
	0x03AD59E4 LDR W1, [X8 + 0x90]
	0x03AD59E8 STP V0, V1, [X31 + 0x50]
	0x03AD59EC STP V2, V3, [X31 + 0x70]
	0x03AD59F0 CBZ X0, 0x3AD5A34
	0x03AD59F4 LDP V0, V1, [X31 + 0x50]
	0x03AD59F8 LDP V2, V3, [X31 + 0x70]
	0x03AD59FC ADD X2, X31, 0x10
	0x03AD5A00 MOV X3, X31
	0x03AD5A04 STP V0, V1, [X31 + 0x10]
	0x03AD5A08 STP V2, V3, [X31 + 0x30]
	0x03AD5A0C BL 0x3C15D84
	0x03AD5A10 LDP X20, X19, [X31 + 0x130]
	0x03AD5A14 LDP X22, X21, [X31 + 0x120]
	0x03AD5A18 LDP X29, X30, [X31 + 0x110]
	0x03AD5A1C LDP D9, D8, [X31 + 0x100]
	0x03AD5A20 LDP D11, D10, [X31 + 0xF0]
	0x03AD5A24 LDP D13, D12, [X31 + 0xE0]
	0x03AD5A28 LDR V14, [X31 + 0xD0]
	0x03AD5A2C ADD X31, X31, 0x140
	0x03AD5A30 RET
	0x03AD5A34 BL 0x1C16F20
	0x03AD5A38 STP X30, X23, [X31 - 0x30]!
	0x03AD5A3C STP X22, X21, [X31 + 0x10]
	0x03AD5A40 STP X20, X19, [X31 + 0x20]
	0x03AD5A44 ADRP X21, 0x90D000
	0x03AD5A48 ADRP X20, 0x61E000
	0x03AD5A4C LDRB W8, [X21 + 0x519]
	0x03AD5A50 LDR X20, [X20 + 0x598]
	0x03AD5A54 MOV X19, X0
	0x03AD5A58 TBNZ X8, 0x0, 0x3AD5A7C
	0x03AD5A5C ADRP X0, 0x61E000
	0x03AD5A60 LDR X0, [X0 + 0x598]
	0x03AD5A64 BL 0x1C16CF4
	0x03AD5A68 ADRP X0, 0x683000
	0x03AD5A6C LDR X0, [X0 + 0x338]
	0x03AD5A70 BL 0x1C16CF4
	0x03AD5A74 MOVZ W8, 0x1
	0x03AD5A78 STRB W8, [X21 + 0x519]
	0x03AD5A7C LDR X0, [X20]
	0x03AD5A80 LDR X20, [X19 + 0x130]
	0x03AD5A84 LDR W8, [X0 + 0xE0]
	0x03AD5A88 CBNZ W8, 0x3AD5A90
	0x03AD5A8C BL 0x1C16DFC
	0x03AD5A90 ADRP X23, 0x683000
	0x03AD5A94 LDR X23, [X23 + 0x338]
	0x03AD5A98 MOV X0, X20
	0x03AD5A9C MOV X1, X31
	0x03AD5AA0 MOV X2, X31
	0x03AD5AA4 BL 0x3C3883C
	0x03AD5AA8 TBZ X0, 0x0, 0x3AD5B18
	0x03AD5AAC LDR X8, [X19]
	0x03AD5AB0 LDR X1, [X19 + 0x110]
	0x03AD5AB4 MOV X0, X19
	0x03AD5AB8 LDR X9, [X8 + 0x738]
	0x03AD5ABC LDR X2, [X8 + 0x740]
	0x03AD5AC0 BLR X9
	0x03AD5AC4 STR X0, [X19 + 0x130]
	0x03AD5AC8 MOV X20, X0
	0x03AD5ACC LDR X0, [X23]
	0x03AD5AD0 LDR X21, [X19 + 0x720]
	0x03AD5AD4 LDR X22, [X19 + 0x110]
	0x03AD5AD8 LDR W8, [X0 + 0xE0]
	0x03AD5ADC CBNZ W8, 0x3AD5AE4
	0x03AD5AE0 BL 0x1C16DFC
	0x03AD5AE4 CBZ X22, 0x3AD5BD8
	0x03AD5AE8 LDR X8, [X23]
	0x03AD5AEC MOV X0, X22
	0x03AD5AF0 MOV X2, X31
	0x03AD5AF4 LDR X8, [X8 + 0xB8]
	0x03AD5AF8 LDR W1, [X8]
	0x03AD5AFC BL 0x3C14AB8
	0x03AD5B00 CBZ X21, 0x3AD5BD8
	0x03AD5B04 MOV X2, X0
	0x03AD5B08 MOV X0, X21
	0x03AD5B0C MOV X1, X20
	0x03AD5B10 MOV X3, X31
	0x03AD5B14 BL 0x3E22B58
	0x03AD5B18 LDR X20, [X19 + 0x130]
	0x03AD5B1C STR X20, [X19 + 0x110]
	0x03AD5B20 LDR X0, [X23]
	0x03AD5B24 LDR W8, [X0 + 0xE0]
	0x03AD5B28 CBNZ W8, 0x3AD5B30
	0x03AD5B2C BL 0x1C16DFC
	0x03AD5B30 CBZ X20, 0x3AD5BD8
	0x03AD5B34 LDR X8, [X23]
	0x03AD5B38 MOV X0, X20
	0x03AD5B3C MOV X2, X31
	0x03AD5B40 LDR X8, [X8 + 0xB8]
	0x03AD5B44 LDR W1, [X8 + 0x9C]
	0x03AD5B48 BL 0x3C14D08
	0x03AD5B4C TBZ X0, 0x0, 0x3AD5BC0
	0x03AD5B50 LDR X0, [X23]
	0x03AD5B54 LDR X20, [X19 + 0x110]
	0x03AD5B58 LDR W8, [X0 + 0xE0]
	0x03AD5B5C CBNZ W8, 0x3AD5B64
	0x03AD5B60 BL 0x1C16DFC
	0x03AD5B64 CBZ X20, 0x3AD5BD8
	0x03AD5B68 LDR X8, [X23]
	0x03AD5B6C MOV X0, X20
	0x03AD5B70 MOV X2, X31
	0x03AD5B74 LDR X8, [X8 + 0xB8]
	0x03AD5B78 LDR X1, [X8 + 0xF8]
	0x03AD5B7C BL 0x3C14E3C
	0x03AD5B80 LDR X0, [X19 + 0x110]
	0x03AD5B84 CBZ X0, 0x3AD5BD8
	0x03AD5B88 LDR X8, [X23]
	0x03AD5B8C MOV X2, X31
	0x03AD5B90 LDR X8, [X8 + 0xB8]
	0x03AD5B94 LDR X1, [X8 + 0x100]
	0x03AD5B98 BL 0x3C14E80
	0x03AD5B9C LDR X0, [X19 + 0x110]
	0x03AD5BA0 CBZ X0, 0x3AD5BD8
	0x03AD5BA4 LDR X8, [X23]
	0x03AD5BA8 MOV X2, X31
	0x03AD5BAC LDR X8, [X8 + 0xB8]
	0x03AD5BB0 LDR X1, [X8 + 0x108]
	0x03AD5BB4 BL 0x3C14E80
	0x03AD5BB8 MOV X0, X19
	0x03AD5BBC BL 0x3AD36F8
	0x03AD5BC0 MOVZ W8, 0x1
	0x03AD5BC4 STRB W8, [X19 + 0x307]
	0x03AD5BC8 LDP X20, X19, [X31 + 0x20]
	0x03AD5BCC LDP X22, X21, [X31 + 0x10]
	0x03AD5BD0 LDP X30, X23, [X31], #0x30
	0x03AD5BD4 RET
	0x03AD5BD8 BL 0x1C16F20
	0x03AD5BDC RET
	0x03AD5BE0 STR X30, [X31 - 0x30]!
	0x03AD5BE4 STP X22, X21, [X31 + 0x10]
	0x03AD5BE8 STP X20, X19, [X31 + 0x20]
	0x03AD5BEC ADRP X22, 0x90D000
	0x03AD5BF0 ADRP X21, 0x683000
	0x03AD5BF4 LDRB W8, [X22 + 0x51B]
	0x03AD5BF8 LDR X21, [X21 + 0x338]
	0x03AD5BFC MOV X20, X1
	0x03AD5C00 MOV X19, X0
	0x03AD5C04 TBNZ X8, 0x0, 0x3AD5C28
	0x03AD5C08 ADRP X0, 0x61E000
	0x03AD5C0C LDR X0, [X0 + 0x598]
	0x03AD5C10 BL 0x1C16CF4
	0x03AD5C14 ADRP X0, 0x683000
	0x03AD5C18 LDR X0, [X0 + 0x338]
	0x03AD5C1C BL 0x1C16CF4
	0x03AD5C20 MOVZ W8, 0x1
	0x03AD5C24 STRB W8, [X22 + 0x51B]
	0x03AD5C28 LDR X0, [X21]
	0x03AD5C2C ADRP X21, 0x61E000
	0x03AD5C30 LDR W8, [X0 + 0xE0]
	0x03AD5C34 LDR X21, [X21 + 0x598]
	0x03AD5C38 CBNZ W8, 0x3AD5C40
	0x03AD5C3C BL 0x1C16DFC
	0x03AD5C40 MOV X0, X31
	0x03AD5C44 BL 0x3B0DFAC
	0x03AD5C48 LDR X0, [X21]
	0x03AD5C4C LDR X21, [X19 + 0x130]
	0x03AD5C50 LDR W8, [X0 + 0xE0]
	0x03AD5C54 CBNZ W8, 0x3AD5C5C
	0x03AD5C58 BL 0x1C16DFC
	0x03AD5C5C MOV X0, X21
	0x03AD5C60 MOV X1, X31
	0x03AD5C64 MOV X2, X31
	0x03AD5C68 BL 0x3C3883C
	0x03AD5C6C TBNZ X0, 0x0, 0x3AD5CA4
	0x03AD5C70 LDR X0, [X19 + 0x130]
	0x03AD5C74 CBZ X0, 0x3AD5D20
	0x03AD5C78 MOV X1, X31
	0x03AD5C7C BL 0x3C385F8
	0x03AD5C80 CBZ X20, 0x3AD5D20
	0x03AD5C84 MOV W21, W0
	0x03AD5C88 MOV X0, X20
	0x03AD5C8C MOV X1, X31
	0x03AD5C90 BL 0x3C385F8
	0x03AD5C94 CMP W21, W0
	0x03AD5C98 B.NE 0x3AD5CA4
	0x03AD5C9C LDR X0, [X19 + 0x130]
	0x03AD5CA0 B 0x3AD5CC0
	0x03AD5CA4 LDR X8, [X19]
	0x03AD5CA8 MOV X0, X19
	0x03AD5CAC MOV X1, X20
	0x03AD5CB0 LDR X9, [X8 + 0x738]
	0x03AD5CB4 LDR X2, [X8 + 0x740]
	0x03AD5CB8 BLR X9
	0x03AD5CBC STR X0, [X19 + 0x130]
	0x03AD5CC0 LDR X8, [X19]
	0x03AD5CC4 STR X0, [X19 + 0x110]
	0x03AD5CC8 MOV X0, X19
	0x03AD5CCC LDR X9, [X8 + 0x7A8]
	0x03AD5CD0 LDR X1, [X8 + 0x7B0]
	0x03AD5CD4 BLR X9
	0x03AD5CD8 LDR X8, [X19]
	0x03AD5CDC MOVZ W9, 0x1
	0x03AD5CE0 STR S0, [X19 + 0x618]
	0x03AD5CE4 STRB W9, [X19 + 0xA1]
	0x03AD5CE8 LDR X9, [X8 + 0x2F8]
	0x03AD5CEC LDR X1, [X8 + 0x300]
	0x03AD5CF0 MOV X0, X19
	0x03AD5CF4 BLR X9
	0x03AD5CF8 LDR X8, [X19]
	0x03AD5CFC MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x90E000
	011 Move W8, [X20+1298]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {52}
	017 Move X0, 0x684000
	018 Move X0, [X0+1864]
	019 Call 0x1C17CF4
	020 Move X0, 0x684000
	021 Move X0, [X0+1824]
	022 Call 0x1C17CF4
	023 Move X0, 0x684000
	024 Move X0, [X0+1872]
	025 Call 0x1C17CF4
	026 Move X0, 0x684000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x684000
	030 Move X0, [X0+1368]
	031 Call 0x1C17CF4
	032 Move X0, 0x67F000
	033 Move X0, [X0+2880]
	034 Call 0x1C17CF4
	035 Move X0, 0x626000
	036 Move X0, [X0+1792]
	037 Call 0x1C17CF4
	038 Move X0, 0x61F000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0x684000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0x684000
	045 Move X0, [X0+872]
	046 Call 0x1C17CF4
	047 Move X0, 0x684000
	048 Move X0, [X0+1464]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+1298], W8
	052 Move X0, X19
	053 Move X1, X31
	054 Call Graphic.get_canvas, X0
	055 Move [X19+1832], X0
	056 Move W8, 1
	057 Move X0, X19
	058 Move X1, X31
	059 Move [X19+773], W8
	060 Call Component.get_gameObject, X0
	061 Compare X0, 0
	062 JumpIfEqual {250}
	063 Move X8, 0x67F000
	064 Move X8, [X8+2880]
	065 Move X21, 0x61F000
	066 Move X1, [X8]
	067 Move X21, [X21+1432]
	068 Call 0x21E62E4, X0
	069 Move [X19+896], X0
	070 Move X20, X0
	071 Move X0, [X21]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Equality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {94}
	084 Move X0, X19
	085 Move X1, X31
	086 Call Component.get_gameObject, X0
	087 Compare X0, 0
	088 JumpIfEqual {250}
	089 Move X8, 0x684000
	090 Move X8, [X8+1368]
	091 Move X1, [X8]
	092 Call 0x21E61FC, X0
	093 Move [X19+896], X0
	094 Move X8, 0x684000
	095 Move X8, [X8+1824]
	096 Move X0, X19
	097 Move X1, [X8]
	098 Call 0x21A4894, X0
	099 Move [X19+1824], X0
	100 Move X20, X0
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Move X1, X31
	108 Move X2, X31
	109 Call Object.op_Equality, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {124}
	114 Move X0, X19
	115 Move X1, X31
	116 Call Component.get_gameObject, X0
	117 Compare X0, 0
	118 JumpIfEqual {250}
	119 Move X8, 0x684000
	120 Move X8, [X8+1880]
	121 Move X1, [X8]
	122 Call 0x21E61FC, X0
	123 Move [X19+1824], X0
	124 Move X0, [X21]
	125 Move X20, [X19+928]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X31
	132 Move X2, X31
	133 Call Object.op_Equality, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {161}
	138 Move X8, 0x626000
	139 Move X8, [X8+1792]
	140 Move X0, [X8]
	141 Call 0x1C17F10
	142 Move X1, X31
	143 Move X20, X0
	144 Call Mesh..ctor, X0
	145 Move [X19+928], X20
	146 Compare X20, 0
	147 JumpIfEqual {250}
	148 Move W1, 61
	149 Move X0, X20
	150 Move X2, X31
	151 Call Object.set_hideFlags, X0, X1
	152 Move X8, 0x684000
	153 Move X8, [X8+872]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X1, X19
	157 Move X2, X31
	158 Move X20, X0
	159 Call TMP_TextInfo..ctor, X0, X1
	160 Move [X19+872], X20
	161 Move X20, 0x684000
	162 Move X21, 0x684000
	163 Move X20, [X20+1456]
	164 Move X21, [X21+1872]
	165 Move X0, X19
	166 Move X1, X31
	167 Call TMP_Text.LoadDefaultSettings, X0
	168 Move X8, [X19]
	169 Move X0, X19
	170 Move X9, [X8+1736]
	171 Move X1, [X8+1744]
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X8, [X19+1144]
	174 Compare X8, 0
	175 JumpIfNotEqual {182}
	176 Move X8, 0x684000
	177 Move W1, [X19+1848]
	178 Move X8, [X8+1464]
	179 Move X0, [X8]
	180 Call 0x1C17D6C
	181 Move [X19+1144], X0
	182 Move X0, [X20]
	183 Call 0x1C17F10
	184 Move X1, X31
	185 Move X20, X0
	186 Call TMP_Character..ctor, X0
	187 Move W8, 1
	188 Move [X19+1608], X20
	189 Move [X19+1844], W8
	190 Move X1, [X21]
	191 Move X0, X19
	192 Call 0x21A553C, X0
	193 Compare X0, 0
	194 JumpIfEqual {250}
	195 Move X22, [X0+24]
	196 Move X20, X0
	197 Compare X22, 0
	198 JumpIfEqual {236}
	199 Move X8, [X19+1800]
	200 Compare X8, 0
	201 JumpIfEqual {250}
	202 Move W8, [X8+24]
	203 Add W1, W22, 1
	204 Add X21, X19, 1800
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X8, 0x684000
	207 Move X8, [X8+1864]
	208 Move X0, X21
	209 Move X2, [X8]
	210 Call Array.Resize, X0, X1
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X25, X31
	213 And X23, X22, 0
	214 Add X24, X20, 32
	215 Move W8, [X20+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X26, [X21]
	218 Compare X26, 0
	219 JumpIfEqual {250}
	220 Move X22, [X24]
	221 Compare X22, 0
	222 JumpIfEqual {229}
	223 Move X8, [X26]
	224 Move X0, X22
	225 Move X1, [X8+64]
	226 Call 0x1C17E00
	227 Compare X0, 0
	228 JumpIfEqual {251}
	229 Move W9, [X26+24]
	230 Add X8, X25, 1
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add X9, X26, X25
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X25, X8
	235 Move [X9+40], X22
	236 Move W8, 1
	237 Move [X19+880], W8
	238 Move [X19+1021], W8
	239 Move X20, [X31+64]
	240 Move X19, [X31+72]
	241 Move X22, [X31+48]
	242 Move X21, [X31+56]
	243 Move X24, [X31+32]
	244 Move X23, [X31+40]
	245 Move X26, [X31+16]
	246 Move X25, [X31+24]
	247 Move X30, [X31+80]
	248 Return 
	249 Call 0x1C17F28
	250 Call 0x1C17F20
	251 Call 0x1C17F44
	252 Move X1, X31
	253 Call 0x1C17DEC

Method: System.Void OnEnable()

Disassembly:
	0x03AD5D00 LDR X9, [X8 + 0x308]
	0x03AD5D04 LDR X1, [X8 + 0x310]
	0x03AD5D08 BLR X9
	0x03AD5D0C LDR X0, [X19 + 0x110]
	0x03AD5D10 LDP X20, X19, [X31 + 0x20]
	0x03AD5D14 LDP X22, X21, [X31 + 0x10]
	0x03AD5D18 LDR X30, [X31], #0x30
	0x03AD5D1C RET
	0x03AD5D20 BL 0x1C16F20
	0x03AD5D24 STR X30, [X31 - 0x40]!
	0x03AD5D28 STP X24, X23, [X31 + 0x10]
	0x03AD5D2C STP X22, X21, [X31 + 0x20]
	0x03AD5D30 STP X20, X19, [X31 + 0x30]
	0x03AD5D34 ADRP X20, 0x90D000
	0x03AD5D38 LDRB W8, [X20 + 0x51C]
	0x03AD5D3C MOV X19, X0
	0x03AD5D40 TBNZ X8, 0x0, 0x3AD5D70
	0x03AD5D44 ADRP X0, 0x625000
	0x03AD5D48 LDR X0, [X0 + 0x7A0]
	0x03AD5D4C BL 0x1C16CF4
	0x03AD5D50 ADRP X0, 0x683000
	0x03AD5D54 LDR X0, [X0 + 0x608]
	0x03AD5D58 BL 0x1C16CF4
	0x03AD5D5C ADRP X0, 0x683000
	0x03AD5D60 LDR X0, [X0 + 0x368]
	0x03AD5D64 BL 0x1C16CF4
	0x03AD5D68 MOVZ W8, 0x1
	0x03AD5D6C STRB W8, [X20 + 0x51C]
	0x03AD5D70 LDR X8, [X19 + 0x368]
	0x03AD5D74 CBZ X8, 0x3AD5EC0
	0x03AD5D78 LDR X9, [X19 + 0x138]
	0x03AD5D7C LDR W20, [X8 + 0x34]
	0x03AD5D80 ADD X21, X19, 0x138
	0x03AD5D84 CBZ X9, 0x3AD5DCC
	0x03AD5D88 LDR W8, [X9 + 0x18]
	0x03AD5D8C CMP W20, W8
	0x03AD5D90 B.EQ 0x3AD5DE4
	0x03AD5D94 ADRP X8, 0x683000
	0x03AD5D98 LDR X8, [X8 + 0x368]
	0x03AD5D9C LDR X0, [X8]
	0x03AD5DA0 LDR W8, [X0 + 0xE0]
	0x03AD5DA4 CBNZ W8, 0x3AD5DAC
	0x03AD5DA8 BL 0x1C16DFC
	0x03AD5DAC ADRP X8, 0x683000
	0x03AD5DB0 LDR X8, [X8 + 0x608]
	0x03AD5DB4 MOV X0, X21
	0x03AD5DB8 MOV W1, W20
	0x03AD5DBC MOV W2, W31
	0x03AD5DC0 LDR X3, [X8]
	0x03AD5DC4 BL 0x22991D0
	0x03AD5DC8 B 0x3AD5DE4
	0x03AD5DCC ADRP X8, 0x625000
	0x03AD5DD0 LDR X8, [X8 + 0x7A0]
	0x03AD5DD4 MOV W1, W20
	0x03AD5DD8 LDR X0, [X8]
	0x03AD5DDC BL 0x1C16D6C
	0x03AD5DE0 STR X0, [X21]
	0x03AD5DE4 CMP W20, 0x1
	0x03AD5DE8 B.LT 0x3AD5EA4
	0x03AD5DEC MOV X23, X31
	0x03AD5DF0 LDR X24, [X21]
	0x03AD5DF4 CBZ X23, 0x3AD5E60
	0x03AD5DF8 LDR X8, [X19 + 0x708]
	0x03AD5DFC CBZ X8, 0x3AD5EC0
	0x03AD5E00 LDR W9, [X8 + 0x18]
	0x03AD5E04 CMP X23, X9
	0x03AD5E08 B.CS 0x3AD5EC4
	0x03AD5E0C ADD X8, X8, X23, 0x3, LSL
	0x03AD5E10 LDR X0, [X8 + 0x20]
	0x03AD5E14 CBZ X0, 0x3AD5EC0
	0x03AD5E18 LDR X8, [X0]
	0x03AD5E1C LDR X9, [X8 + 0x338]
	0x03AD5E20 LDR X1, [X8 + 0x340]
	0x03AD5E24 BLR X9
	0x03AD5E28 CBZ X24, 0x3AD5EC0
	0x03AD5E2C MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x90E000
	005 Move W8, [X20+1299]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x675000
	012 Move X0, [X0+1408]
	013 Call 0x1C17CF4
	014 Move X0, 0x684000
	015 Move X0, [X0+1384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1299], W8
	019 Move W8, [X19+1021]
	020 Compare W8, 0
	021 JumpIfEqual {84}
	022 Move X20, 0x675000
	023 Move W8, [X19+1948]
	024 Move X20, [X20+1408]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Move W8, 1
	028 Move [X19+1948], W8
	029 Move X0, X19
	030 Call TextMeshProUGUI.GetCanvas, X0
	031 Move X8, [X19]
	032 Move [X19+1832], X0
	033 Move W1, 1
	034 Move X0, X19
	035 Move X9, [X8+2344]
	036 Move X2, [X8+2352]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X20]
	039 Move X20, [X19+1832]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X19
	046 Move X2, X31
	047 Call GraphicRegistry.RegisterGraphicForCanvas, X0, X1
	048 Move W8, [X19+800]
	049 Compare W8, 0
	050 JumpIfNotEqual {61}
	051 Move X8, 0x684000
	052 Move X8, [X8+1384]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X19
	059 Move X1, X31
	060 Call TMP_UpdateManager.RegisterTextObjectForUpdate, X0
	061 Move X8, [X19]
	062 Move X0, X19
	063 Move X9, [X8+2216]
	064 Move X1, [X8+2224]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X19]
	067 Move X0, X19
	068 Move X9, [X8+728]
	069 Move X1, [X8+736]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+1320]
	074 Move X1, [X8+1328]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X2, [X8+1336]
	081 Move X1, [X8+1344]
	082 Move X30, [X31+32]
	083 CallNoReturn X2
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03AD5F94 ADRP X8, 0x683000
	0x03AD5F98 LDR X8, [X8 + 0x608]
	0x03AD5F9C MOV X0, X20
	0x03AD5FA0 MOV W1, W21
	0x03AD5FA4 MOV W2, W31
	0x03AD5FA8 LDR X3, [X8]
	0x03AD5FAC BL 0x22991D0
	0x03AD5FB0 B 0x3AD5FCC
	0x03AD5FB4 ADRP X8, 0x625000
	0x03AD5FB8 LDR X8, [X8 + 0x7A0]
	0x03AD5FBC MOV W1, W21
	0x03AD5FC0 LDR X0, [X8]
	0x03AD5FC4 BL 0x1C16D6C
	0x03AD5FC8 STR X0, [X20]
	0x03AD5FCC CMP W21, 0x1
	0x03AD5FD0 B.LT 0x3AD6070
	0x03AD5FD4 MOV X23, X31
	0x03AD5FD8 LDR X24, [X20]
	0x03AD5FDC CBZ X23, 0x3AD6038
	0x03AD5FE0 LDR X8, [X19 + 0x708]
	0x03AD5FE4 CBZ X8, 0x3AD6088
	0x03AD5FE8 LDR W9, [X8 + 0x18]
	0x03AD5FEC CMP X23, X9
	0x03AD5FF0 B.CS 0x3AD608C
	0x03AD5FF4 ADD X8, X8, X23, 0x3, LSL
	0x03AD5FF8 LDR X8, [X8 + 0x20]
	0x03AD5FFC CBZ X8, 0x3AD6088
	0x03AD6000 CBZ X24, 0x3AD6088
	0x03AD6004 LDR X22, [X8 + 0xF0]
	0x03AD6008 CBZ X22, 0x3AD6020
	0x03AD600C LDR X8, [X24]
	0x03AD6010 MOV X0, X22
	0x03AD6014 LDR X1, [X8 + 0x40]
	0x03AD6018 BL 0x1C16E00
	0x03AD601C CBZ X0, 0x3AD6090
	0x03AD6020 LDR W8, [X24 + 0x18]
	0x03AD6024 CMP X23, X8
	0x03AD6028 B.CS 0x3AD608C
	0x03AD602C ADD X8, X24, X23, 0x3, LSL
	0x03AD6030 STR X22, [X8 + 0x20]
	0x03AD6034 B 0x3AD6064
	0x03AD6038 CBZ X24, 0x3AD6088
	0x03AD603C LDR X22, [X19 + 0x110]
	0x03AD6040 CBZ X22, 0x3AD6058
	0x03AD6044 LDR X8, [X24]
	0x03AD6048 MOV X0, X22
	0x03AD604C LDR X1, [X8 + 0x40]
	0x03AD6050 BL 0x1C16E00
	0x03AD6054 CBZ X0, 0x3AD6090
	0x03AD6058 LDR W8, [X24 + 0x18]
	0x03AD605C CBZ W8, 0x3AD608C
	0x03AD6060 STR X22, [X24 + 0x20]
	0x03AD6064 ADD X23, X23, 0x1
	0x03AD6068 CMP X21, X23
	0x03AD606C B.NE 0x3AD5FD8
	0x03AD6070 LDR X0, [X20]
	0x03AD6074 LDP X20, X19, [X31 + 0x30]
	0x03AD6078 LDP X22, X21, [X31 + 0x20]
	0x03AD607C LDP X24, X23, [X31 + 0x10]
	0x03AD6080 LDR X30, [X31], #0x40
	0x03AD6084 RET
	0x03AD6088 BL 0x1C16F20
	0x03AD608C BL 0x1C16F28
	0x03AD6090 BL 0x1C16F44
	0x03AD6094 MOV X1, X31
	0x03AD6098 BL 0x1C16DEC
	0x03AD609C STR X30, [X31 - 0x60]!
	0x03AD60A0 STP X28, X27, [X31 + 0x10]
	0x03AD60A4 STP X26, X25, [X31 + 0x20]
	0x03AD60A8 STP X24, X23, [X31 + 0x30]
	0x03AD60AC STP X22, X21, [X31 + 0x40]
	0x03AD60B0 STP X20, X19, [X31 + 0x50]
	0x03AD60B4 ADRP X21, 0x90C000
	0x03AD60B8 LDRB W8, [X21 + 0x51E]
	0x03AD60BC MOV X19, X1
	0x03AD60C0 MOV X20, X0
	0x03AD60C4 TBNZ X8, 0x0, 0x3AD610C
	0x03AD60C8 ADRP X0, 0x624000
	0x03AD60CC LDR X0, [X0 + 0x7A0]
	0x03AD60D0 BL 0x1C16CF4
	0x03AD60D4 ADRP X0, 0x61D000
	0x03AD60D8 LDR X0, [X0 + 0x598]
	0x03AD60DC BL 0x1C16CF4
	0x03AD60E0 ADRP X0, 0x682000
	0x03AD60E4 LDR X0, [X0 + 0x338]
	0x03AD60E8 BL 0x1C16CF4
	0x03AD60EC ADRP X0, 0x682000
	0x03AD60F0 LDR X0, [X0 + 0x608]
	0x03AD60F4 BL 0x1C16CF4
	0x03AD60F8 ADRP X0, 0x682000
	0x03AD60FC LDR X0, [X0 + 0x368]
	0x03AD6100 BL 0x1C16CF4
	0x03AD6104 MOVZ W8, 0x1
	0x03AD6108 STRB W8, [X21 + 0x51E]
	0x03AD610C LDR X8, [X20 + 0x368]
	0x03AD6110 CBZ X8, 0x3AD6434
	0x03AD6114 LDR X9, [X20 + 0x128]
	0x03AD6118 LDR W21, [X8 + 0x34]
	0x03AD611C ADD X22, X20, 0x128
	0x03AD6120 CBZ X9, 0x3AD6168
	0x03AD6124 LDR W8, [X9 + 0x18]
	0x03AD6128 CMP W21, W8
	0x03AD612C B.EQ 0x3AD6180
	0x03AD6130 ADRP X8, 0x682000
	0x03AD6134 LDR X8, [X8 + 0x368]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x90E000
	007 Move W8, [X20+1300]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x684000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0x675000
	017 Move X0, [X0+1408]
	018 Call 0x1C17CF4
	019 Move X0, 0x622000
	020 Move X0, [X0+2336]
	021 Call 0x1C17CF4
	022 Move X0, 0x61F000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x684000
	026 Move X0, [X0+1384]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1300], W8
	030 Move W8, [X19+1021]
	031 Compare W8, 0
	032 JumpIfEqual {118}
	033 Move X8, 0x675000
	034 Move X8, [X8+1408]
	035 Move X22, 0x683000
	036 Move X20, [X19+1832]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Move X22, [X22+1816]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X21, 0x683000
	044 Move X21, [X21+1384]
	045 Move X0, X20
	046 Move X1, X19
	047 Move X2, X31
	048 Call GraphicRegistry.UnregisterGraphicForCanvas, X0, X1
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X20, 0x61E000
	055 Move X20, [X20+1432]
	056 Move X0, X19
	057 Move X1, X31
	058 Call CanvasUpdateRegistry.UnRegisterCanvasElementForRebuild, X0
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call TMP_UpdateManager.UnRegisterTextObjectForUpdate, X0
	067 Move X0, [X20]
	068 Move X20, [X19+1824]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Inequality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {86}
	081 Move X0, [X19+1824]
	082 Compare X0, 0
	083 JumpIfEqual {124}
	084 Move X1, X31
	085 Call CanvasRenderer.Clear, X0
	086 Move X8, [X19]
	087 Move X20, 0x621000
	088 Move X0, X19
	089 Move W1, W31
	090 Move X9, [X8+2344]
	091 Move X2, [X8+2352]
	092 Move X20, [X20+2336]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, [X20]
	095 Move X20, [X19+896]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X31
	102 Call LayoutRebuilder.MarkLayoutForRebuild, X0
	103 Move X8, [X19]
	104 Move X0, X19
	105 Move X9, [X8+1320]
	106 Move X1, [X8+1328]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X8, [X19]
	109 Move X0, X19
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X2, [X8+1336]
	115 Move X1, [X8+1344]
	116 Move X30, [X31+48]
	117 CallNoReturn X2
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Return 
	124 Call 0x1C17F20

Method: System.Void OnDestroy()

Disassembly:
	0x03AD6138 LDR X0, [X8]
	0x03AD613C LDR W8, [X0 + 0xE0]
	0x03AD6140 CBNZ W8, 0x3AD6148
	0x03AD6144 BL 0x1C16DFC
	0x03AD6148 ADRP X8, 0x682000
	0x03AD614C LDR X8, [X8 + 0x608]
	0x03AD6150 MOV X0, X22
	0x03AD6154 MOV W1, W21
	0x03AD6158 MOV W2, W31
	0x03AD615C LDR X3, [X8]
	0x03AD6160 BL 0x22991D0
	0x03AD6164 B 0x3AD6180
	0x03AD6168 ADRP X8, 0x624000
	0x03AD616C LDR X8, [X8 + 0x7A0]
	0x03AD6170 MOV W1, W21
	0x03AD6174 LDR X0, [X8]
	0x03AD6178 BL 0x1C16D6C
	0x03AD617C STR X0, [X22]
	0x03AD6180 CMP W21, 0x1
	0x03AD6184 B.LT 0x3AD6418
	0x03AD6188 CBZ X19, 0x3AD6434
	0x03AD618C ADRP X25, 0x682000
	0x03AD6190 ADRP X26, 0x61D000
	0x03AD6194 LDR X25, [X25 + 0x338]
	0x03AD6198 LDR X26, [X26 + 0x598]
	0x03AD619C MOV W8, W31
	0x03AD61A0 LDR W9, [X19 + 0x18]
	0x03AD61A4 CMP W8, W9
	0x03AD61A8 B.CS 0x3AD6438
	0x03AD61AC SXTW X27, W8
	0x03AD61B0 ADD X24, X19, X27, 0x3, LSL
	0x03AD61B4 LDR X23, [X24 + 0x20]!
	0x03AD61B8 LDR X0, [X25]
	0x03AD61BC LDR W8, [X0 + 0xE0]
	0x03AD61C0 CBNZ W8, 0x3AD61C8
	0x03AD61C4 BL 0x1C16DFC
	0x03AD61C8 CBZ X23, 0x3AD6434
	0x03AD61CC LDR X8, [X25]
	0x03AD61D0 MOV X0, X23
	0x03AD61D4 MOV X2, X31
	0x03AD61D8 LDR X8, [X8 + 0xB8]
	0x03AD61DC LDR W1, [X8]
	0x03AD61E0 BL 0x3C14AB8
	0x03AD61E4 LDR X8, [X26]
	0x03AD61E8 MOV X23, X0
	0x03AD61EC LDR W9, [X8 + 0xE0]
	0x03AD61F0 CBNZ W9, 0x3AD61FC
	0x03AD61F4 MOV X0, X8
	0x03AD61F8 BL 0x1C16DFC
	0x03AD61FC MOV X0, X23
	0x03AD6200 MOV X1, X31
	0x03AD6204 MOV X2, X31
	0x03AD6208 BL 0x3C3883C
	0x03AD620C CBZ W27, 0x3AD6330
	0x03AD6210 TBNZ X0, 0x0, 0x3AD640C
	0x03AD6214 LDR W8, [X19 + 0x18]
	0x03AD6218 CMP W27, W8
	0x03AD621C B.CS 0x3AD6438
	0x03AD6220 LDR X0, [X25]
	0x03AD6224 LDR X23, [X24]
	0x03AD6228 LDR W8, [X0 + 0xE0]
	0x03AD622C CBNZ W8, 0x3AD6234
	0x03AD6230 BL 0x1C16DFC
	0x03AD6234 CBZ X23, 0x3AD6434
	0x03AD6238 LDR X8, [X25]
	0x03AD623C MOV X0, X23
	0x03AD6240 MOV X2, X31
	0x03AD6244 LDR X8, [X8 + 0xB8]
	0x03AD6248 LDR W1, [X8]
	0x03AD624C BL 0x3C14AB8
	0x03AD6250 CBZ X0, 0x3AD6434
	0x03AD6254 MOV X1, X31
	0x03AD6258 BL 0x3C385F8
	0x03AD625C LDR X8, [X20 + 0x708]
	0x03AD6260 CBZ X8, 0x3AD6434
	0x03AD6264 LDR W9, [X8 + 0x18]
	0x03AD6268 CMP W27, W9
	0x03AD626C B.CS 0x3AD6438
	0x03AD6270 ADD X8, X8, X27, 0x3, LSL
	0x03AD6274 LDR X8, [X8 + 0x20]
	0x03AD6278 CBZ X8, 0x3AD6434
	0x03AD627C MOV W23, W0
	0x03AD6280 LDR X0, [X8 + 0xF0]
	0x03AD6284 CBZ X0, 0x3AD6434
	0x03AD6288 LDR X8, [X25]
	0x03AD628C MOV X2, X31
	0x03AD6290 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x90D000
	007 Move X20, 0x674000
	008 Move W8, [X21+1301]
	009 Move X20, [X20+1408]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x674000
	016 Move X0, [X0+1408]
	017 Call 0x1C17CF4
	018 Move X0, 0x61E000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x683000
	022 Move X0, [X0+1568]
	023 Call 0x1C17CF4
	024 Move X0, 0x683000
	025 Move X0, [X0+1384]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1301], W8
	029 Move X0, [X20]
	030 Move X22, 0x683000
	031 Move X20, [X19+1832]
	032 Move W8, [X0+224]
	033 Move X22, [X22+1384]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X21, 0x61E000
	038 Move X21, [X21+1432]
	039 Move X0, X20
	040 Move X1, X19
	041 Move X2, X31
	042 Call GraphicRegistry.UnregisterGraphicForCanvas, X0, X1
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X1, X31
	050 Call TMP_UpdateManager.UnRegisterTextObjectForUpdate, X0
	051 Move X0, [X21]
	052 Move X20, [X19+928]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Move X2, X31
	060 Call Object.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {74}
	065 Move X0, [X21]
	066 Move X20, [X19+928]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X20
	072 Move X1, X31
	073 Call Object.DestroyImmediate, X0
	074 Move X0, [X21]
	075 Move X20, [X19+168]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Move X1, X31
	082 Move X2, X31
	083 Call Object.op_Inequality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {100}
	088 Move X8, 0x683000
	089 Move X8, [X8+1568]
	090 Move X20, [X19+168]
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X20
	097 Move X1, X31
	098 Call TMP_MaterialManager.ReleaseStencilMaterial, X0
	099 Move [X19+168], X31
	100 Move [X19+1948], W31
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Return 

Method: System.Void LoadFontAsset()

Disassembly:
	0x03AD6294 LDR W1, [X8]
	0x03AD6298 BL 0x3C14AB8
	0x03AD629C CBZ X0, 0x3AD6434
	0x03AD62A0 MOV X1, X31
	0x03AD62A4 BL 0x3C385F8
	0x03AD62A8 CMP W23, W0
	0x03AD62AC B.NE 0x3AD640C
	0x03AD62B0 LDR X8, [X20 + 0x708]
	0x03AD62B4 CBZ X8, 0x3AD6434
	0x03AD62B8 LDR W9, [X8 + 0x18]
	0x03AD62BC CMP W27, W9
	0x03AD62C0 B.CS 0x3AD6438
	0x03AD62C4 ADD X8, X8, X27, 0x3, LSL
	0x03AD62C8 LDR X23, [X8 + 0x20]
	0x03AD62CC CBZ X23, 0x3AD6434
	0x03AD62D0 LDRB W8, [X23 + 0x108]
	0x03AD62D4 CBZ W8, 0x3AD640C
	0x03AD62D8 LDR W8, [X19 + 0x18]
	0x03AD62DC CMP W27, W8
	0x03AD62E0 B.CS 0x3AD6438
	0x03AD62E4 LDR X28, [X22]
	0x03AD62E8 CBZ X28, 0x3AD6434
	0x03AD62EC LDR X24, [X24]
	0x03AD62F0 CBZ X24, 0x3AD6308
	0x03AD62F4 LDR X8, [X28]
	0x03AD62F8 MOV X0, X24
	0x03AD62FC LDR X1, [X8 + 0x40]
	0x03AD6300 BL 0x1C16E00
	0x03AD6304 CBZ X0, 0x3AD643C
	0x03AD6308 LDR W8, [X28 + 0x18]
	0x03AD630C CMP W27, W8
	0x03AD6310 B.CS 0x3AD6438
	0x03AD6314 ADD X8, X28, X27, 0x3, LSL
	0x03AD6318 MOV X0, X23
	0x03AD631C MOV X1, X24
	0x03AD6320 MOV X2, X31
	0x03AD6324 STR X24, [X8 + 0x20]
	0x03AD6328 BL 0x3B1A9C4
	0x03AD632C B 0x3AD640C
	0x03AD6330 TBNZ X0, 0x0, 0x3AD640C
	0x03AD6334 LDR W8, [X19 + 0x18]
	0x03AD6338 CBZ W8, 0x3AD6438
	0x03AD633C LDR X0, [X25]
	0x03AD6340 LDR X23, [X24]
	0x03AD6344 LDR W8, [X0 + 0xE0]
	0x03AD6348 CBNZ W8, 0x3AD6350
	0x03AD634C BL 0x1C16DFC
	0x03AD6350 CBZ X23, 0x3AD6434
	0x03AD6354 LDR X8, [X25]
	0x03AD6358 MOV X0, X23
	0x03AD635C MOV X2, X31
	0x03AD6360 LDR X8, [X8 + 0xB8]
	0x03AD6364 LDR W1, [X8]
	0x03AD6368 BL 0x3C14AB8
	0x03AD636C CBZ X0, 0x3AD6434
	0x03AD6370 MOV X1, X31
	0x03AD6374 BL 0x3C385F8
	0x03AD6378 LDR X8, [X20 + 0x110]
	0x03AD637C CBZ X8, 0x3AD6434
	0x03AD6380 LDR X9, [X25]
	0x03AD6384 MOV W23, W0
	0x03AD6388 MOV X0, X8
	0x03AD638C MOV X2, X31
	0x03AD6390 LDR X9, [X9 + 0xB8]
	0x03AD6394 LDR W1, [X9]
	0x03AD6398 BL 0x3C14AB8
	0x03AD639C CBZ X0, 0x3AD6434
	0x03AD63A0 MOV X1, X31
	0x03AD63A4 BL 0x3C385F8
	0x03AD63A8 CMP W23, W0
	0x03AD63AC B.NE 0x3AD640C
	0x03AD63B0 LDR W8, [X19 + 0x18]
	0x03AD63B4 CBZ W8, 0x3AD6438
	0x03AD63B8 LDR X28, [X22]
	0x03AD63BC CBZ X28, 0x3AD6434
	0x03AD63C0 LDR X23, [X24]
	0x03AD63C4 CBZ X23, 0x3AD63DC
	0x03AD63C8 LDR X8, [X28]
	0x03AD63CC MOV X0, X23
	0x03AD63D0 LDR X1, [X8 + 0x40]
	0x03AD63D4 BL 0x1C16E00
	0x03AD63D8 CBZ X0, 0x3AD643C
	0x03AD63DC LDR W8, [X28 + 0x18]
	0x03AD63E0 CBZ W8, 0x3AD6438
	0x03AD63E4 ADD X8, X28, X27, 0x3, LSL
	0x03AD63E8 STR X23, [X8 + 0x20]
	0x03AD63EC LDR X8, [X20]
	0x03AD63F0 STR X23, [X20 + 0x110]
	0x03AD63F4 MOV X0, X20
	0x03AD63F8 MOV X1, X23
	0x03AD63FC LDR X9, [X8 + 0x7B8]
	0x03AD6400 LDR X2, [X8 + 0x7C0]
	0x03AD6404 BLR X9
	0x03AD6408 STR S0, [X20 + 0x618]
	0x03AD640C ADD W8, W27, 0x1
	0x03AD6410 CMP W21, W8
	0x03AD6414 B.NE 0x3AD61A0
	0x03AD6418 LDP X20, X19, [X31 + 0x50]
	0x03AD641C LDP X22, X21, [X31 + 0x40]
	0x03AD6420 LDP X24, X23, [X31 + 0x30]
	0x03AD6424 LDP X26, X25, [X31 + 0x20]
	0x03AD6428 LDP X28, X27, [X31 + 0x10]
	0x03AD642C LDR X30, [X31], #0x60
	0x03AD6430 RET
	0x03AD6434 BL 0x1C16F20
	0x03AD6438 BL 0x1C16F28
	0x03AD643C BL 0x1C16F44
	0x03AD6440 MOV X1, X31
	0x03AD6444 BL 0x1C16DEC
	0x03AD6448 STR D8, [X31 - 0x30]!
	0x03AD644C STR X30, [X31 + 0x8]
	0x03AD6450 STP X22, X21, [X31 + 0x10]
	0x03AD6454 STP X20, X19, [X31 + 0x20]
	0x03AD6458 ADRP X20, 0x90C000
	0x03AD645C ADRP X21, 0x61D000
	0x03AD6460 LDRB W8, [X20 + 0x51F]
	0x03AD6464 LDR X21, [X21 + 0x598]
	0x03AD6468 MOV V8.16B, V0.16B
	0x03AD646C MOV X19, X0
	0x03AD6470 TBNZ X8, 0x0, 0x3AD6494
	0x03AD6474 ADRP X0, 0x61D000
	0x03AD6478 LDR X0, [X0 + 0x598]
	0x03AD647C BL 0x1C16CF4
	0x03AD6480 ADRP X0, 0x682000
	0x03AD6484 LDR X0, [X0 + 0x338]
	0x03AD6488 BL 0x1C16CF4
	0x03AD648C MOVZ W8, 0x1
	0x03AD6490 STRB W8, [X20 + 0x51F]
	0x03AD6494 LDR X0, [X21]
	0x03AD6498 LDR X20, [X19 + 0x130]
	0x03AD649C LDR W8, [X0 + 0xE0]
	0x03AD64A0 CBNZ W8, 0x3AD64A8
	0x03AD64A4 BL 0x1C16DFC
	0x03AD64A8 ADRP X22, 0x682000
	0x03AD64AC LDR X22, [X22 + 0x338]
	0x03AD64B0 MOV X0, X20
	0x03AD64B4 MOV X1, X31
	0x03AD64B8 MOV X2, X31
	0x03AD64BC BL 0x3C354F8
	0x03AD64C0 TBZ X0, 0x0, 0x3AD64F4
	0x03AD64C4 LDR X0, [X19 + 0x110]
	0x03AD64C8 CBZ X0, 0x3AD6604
	0x03AD64CC MOV X1, X31
	0x03AD64D0 BL 0x3C385F8
	0x03AD64D4 LDR X8, [X19 + 0x130]
	0x03AD64D8 CBZ X8, 0x3AD6604
	0x03AD64DC MOV W20, W0
	0x03AD64E0 MOV X0, X8
	0x03AD64E4 MOV X1, X31
	0x03AD64E8 BL 0x3C385F8
	0x03AD64EC CMP W20, W0
	0x03AD64F0 B.NE 0x3AD6544
	0x03AD64F4 LDR X0, [X21]
	0x03AD64F8 LDR X20, [X19 + 0x130]
	0x03AD64FC LDR W8, [X0 + 0xE0]
	0x03AD6500 CBNZ W8, 0x3AD6508
	0x03AD6504 BL 0x1C16DFC
	0x03AD6508 MOV X0, X20
	0x03AD650C MOV X1, X31
	0x03AD6510 MOV X2, X31
	0x03AD6514 BL 0x3C3883C
	0x03AD6518 TBZ X0, 0x0, 0x3AD6594
	0x03AD651C LDR X8, [X19]
	0x03AD6520 LDR X1, [X19 + 0x110]
	0x03AD6524 MOV X0, X19
	0x03AD6528 LDR X9, [X8 + 0x738]
	0x03AD652C LDR X2, [X8 + 0x740]
	0x03AD6530 BLR X9
	0x03AD6534 MOV X20, X0
	0x03AD6538 STR X0, [X19 + 0x130]
	0x03AD653C STR X0, [X19 + 0x110]
	0x03AD6540 B 0x3AD654C
	0x03AD6544 LDR X20, [X19 + 0x130]
	0x03AD6548 STR X20, [X19 + 0x110]
	0x03AD654C LDR X0, [X22]
	0x03AD6550 LDR X21, [X19 + 0x720]
	0x03AD6554 LDR W8, [X0 + 0xE0]
	0x03AD6558 CBNZ W8, 0x3AD6560
	0x03AD655C BL 0x1C16DFC
	0x03AD6560 CBZ X20, 0x3AD6604
	0x03AD6564 LDR X8, [X22]
	0x03AD6568 MOV X0, X20
	0x03AD656C MOV X2, X31
	0x03AD6570 LDR X8, [X8 + 0xB8]
	0x03AD6574 LDR W1, [X8]
	0x03AD6578 BL 0x3C14AB8
	0x03AD657C CBZ X21, 0x3AD6604
	0x03AD6580 MOV X2, X0
	0x03AD6584 MOV X0, X21
	0x03AD6588 MOV X1, X20
	0x03AD658C MOV X3, X31
	0x03AD6590 BL 0x3E22B58
	0x03AD6594 LDR X0, [X22]
	0x03AD6598 LDR X20, [X19 + 0x110]
	0x03AD659C LDR W8, [X0 + 0xE0]
	0x03AD65A0 CBNZ W8, 0x3AD65A8
	0x03AD65A4 BL 0x1C16DFC
	0x03AD65A8 CBZ X20, 0x3AD6604
	0x03AD65AC LDR X8, [X22]
	0x03AD65B0 FMOV S0, 1
	0x03AD65B4 FMIN S0, S8, S0
	0x03AD65B8 FCMP S8, 0x0
	0x03AD65BC LDR X8, [X8 + 0xB8]
	0x03AD65C0 FMOV S1, W31
	0x03AD65C4 FCSEL S0, S0, S1, PL
	0x03AD65C8 MOV X0, X20
	0x03AD65CC LDR W1, [X8 + 0x3C]
	0x03AD65D0 MOV X2, X31
	0x03AD65D4 BL 0x3C15CD8
	0x03AD65D8 LDR X8, [X19]
	0x03AD65DC MOV X0, X19
	0x03AD65E0 LDR X9, [X8 + 0x7A8]
	0x03AD65E4 LDR X1, [X8 + 0x7B0]
	0x03AD65E8 BLR X9
	0x03AD65EC STR S0, [X19 + 0x618]
	0x03AD65F0 LDP X20, X19, [X31 + 0x20]
	0x03AD65F4 LDP X22, X21, [X31 + 0x10]
	0x03AD65F8 LDR X30, [X31 + 0x8]
	0x03AD65FC LDR V8, [X31], #0x30
	0x03AD6600 RET
	0x03AD6604 BL 0x1C16F20
	0x03AD6608 STR X30, [X31 - 0x30]!
	0x03AD660C STP X22, X21, [X31 + 0x10]
	0x03AD6610 STP X20, X19, [X31 + 0x20]
	0x03AD6614 ADRP X22, 0x90C000
	0x03AD6618 ADRP X21, 0x61D000
	0x03AD661C LDRB W8, [X22 + 0x520]
	0x03AD6620 LDR X21, [X21 + 0x598]
	0x03AD6624 MOV X19, X1
	0x03AD6628 MOV X20, X0
	0x03AD662C TBNZ X8, 0x0, 0x3AD6650
	0x03AD6630 ADRP X0, 0x61D000
	0x03AD6634 LDR X0, [X0 + 0x598]
	0x03AD6638 BL 0x1C16CF4
	0x03AD663C ADRP X0, 0x682000
	0x03AD6640 LDR X0, [X0 + 0x338]
	0x03AD6644 BL 0x1C16CF4
	0x03AD6648 MOVZ W8, 0x1
	0x03AD664C STRB W8, [X22 + 0x520]
	0x03AD6650 LDR X0, [X21]
	0x03AD6654 LDR X21, [X20 + 0x130]
	0x03AD6658 LDR W8, [X0 + 0xE0]
	0x03AD665C CBNZ W8, 0x3AD6664
	0x03AD6660 BL 0x1C16DFC
	0x03AD6664 ADRP X22, 0x682000
	0x03AD6668 LDR X22, [X22 + 0x338]
	0x03AD666C MOV X0, X21
	0x03AD6670 MOV X1, X31
	0x03AD6674 MOV X2, X31
	0x03AD6678 BL 0x3C3883C
	0x03AD667C TBZ X0, 0x0, 0x3AD66A0
	0x03AD6680 LDR X8, [X20]
	0x03AD6684 LDR X1, [X20 + 0x110]
	0x03AD6688 MOV X0, X20
	0x03AD668C LDR X9, [X8 + 0x738]
	0x03AD6690 LDR X2, [X8 + 0x740]
	0x03AD6694 BLR X9
	0x03AD6698 STR X0, [X20 + 0x130]
	0x03AD669C B 0x3AD66A4
	0x03AD66A0 LDR X0, [X20 + 0x130]
	0x03AD66A4 LDR X8, [X20]
	0x03AD66A8 STR X0, [X20 + 0x110]
	0x03AD66AC MOV X0, X20
	0x03AD66B0 LDR X9, [X8 + 0x7A8]
	0x03AD66B4 LDR X1, [X8 + 0x7B0]
	0x03AD66B8 BLR X9
	0x03AD66BC STR S0, [X20 + 0x618]
	0x03AD66C0 LDR X0, [X22]
	0x03AD66C4 LDR X20, [X20 + 0x110]
	0x03AD66C8 LDR W8, [X0 + 0xE0]
	0x03AD66CC CBNZ W8, 0x3AD66D4
	0x03AD66D0 BL 0x1C16DFC
	0x03AD66D4 CBZ X20, 0x3AD6734
	0x03AD66D8 MOVZ W9, 0x437F0000
	0x03AD66DC FMOV S4, W9
	0x03AD66E0 LDR X9, [X22]
	0x03AD66E4 UBFM X8, X19, 0x18, 0x1F
	0x03AD66E8 UCVTF S0, W8
	0x03AD66EC UBFM W8, W19, 0x10, 0x17
	0x03AD66F0 FDIV S3, S0, S4
	0x03AD66F4 UCVTF S0, W8
	0x03AD66F8 LDR X8, [X9 + 0xB8]
	0x03AD66FC UBFM W9, W19, 0x8, 0xF
	0x03AD6700 MOV X0, X20
	0x03AD6704 LDP X22, X21, [X31 + 0x10]
	0x03AD6708 LDR W1, [X8 + 0x8]
	0x03AD670C AND W8, W19, 0xFF
	0x03AD6710 LDP X20, X19, [X31 + 0x20]
	0x03AD6714 FDIV S2, S0, S4
	0x03AD6718 UCVTF S0, W9
	0x03AD671C FDIV S1, S0, S4
	0x03AD6720 UCVTF S0, W8
	0x03AD6724 FDIV S0, S0, S4
	0x03AD6728 MOV X2, X31
	0x03AD672C LDR X30, [X31], #0x30
	0x03AD6730 B 0x3C14988
	0x03AD6734 BL 0x1C16F20
	0x03AD6738 STR X30, [X31 - 0x30]!
	0x03AD673C STP X22, X21, [X31 + 0x10]
	0x03AD6740 STP X20, X19, [X31 + 0x20]
	0x03AD6744 ADRP X22, 0x90C000
	0x03AD6748 ADRP X21, 0x61D000
	0x03AD674C LDRB W8, [X22 + 0x521]
	0x03AD6750 LDR X21, [X21 + 0x598]
	0x03AD6754 MOV X19, X1
	0x03AD6758 MOV X20, X0
	0x03AD675C TBNZ X8, 0x0, 0x3AD6780
	0x03AD6760 ADRP X0, 0x61D000
	0x03AD6764 LDR X0, [X0 + 0x598]
	0x03AD6768 BL 0x1C16CF4
	0x03AD676C ADRP X0, 0x682000
	0x03AD6770 LDR X0, [X0 + 0x338]
	0x03AD6774 BL 0x1C16CF4
	0x03AD6778 MOVZ W8, 0x1
	0x03AD677C STRB W8, [X22 + 0x521]
	0x03AD6780 LDR X0, [X21]
	0x03AD6784 LDR X21, [X20 + 0x130]
	0x03AD6788 LDR W8, [X0 + 0xE0]
	0x03AD678C CBNZ W8, 0x3AD6794
	0x03AD6790 BL 0x1C16DFC
	0x03AD6794 ADRP X22, 0x682000
	0x03AD6798 LDR X22, [X22 + 0x338]
	0x03AD679C MOV X0, X21
	0x03AD67A0 MOV X1, X31
	0x03AD67A4 MOV X2, X31
	0x03AD67A8 BL 0x3C3883C
	0x03AD67AC TBZ X0, 0x0, 0x3AD67D0
	0x03AD67B0 LDR X8, [X20]
	0x03AD67B4 LDR X1, [X20 + 0x110]
	0x03AD67B8 MOV X0, X20
	0x03AD67BC LDR X9, [X8 + 0x738]
	0x03AD67C0 LDR X2, [X8 + 0x740]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x90D000
	008 Move X23, 0x683000
	009 Move W8, [X20+1302]
	010 Move X23, [X23+824]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {54}
	016 Move X0, 0x61E000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x61E000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x683000
	023 Move X0, [X0+1472]
	024 Call 0x1C17CF4
	025 Move X0, 0x683000
	026 Move X0, [X0+824]
	027 Call 0x1C17CF4
	028 Move X0, 0x61E000
	029 Move X0, [X0+2760]
	030 Call 0x1C17CF4
	031 Move X0, 0x683000
	032 Move X0, [X0+1480]
	033 Call 0x1C17CF4
	034 Move X0, 0x683000
	035 Move X0, [X0+1488]
	036 Call 0x1C17CF4
	037 Move X0, 0x683000
	038 Move X0, [X0+1496]
	039 Call 0x1C17CF4
	040 Move X0, 0x683000
	041 Move X0, [X0+1512]
	042 Call 0x1C17CF4
	043 Move X0, 0x683000
	044 Move X0, [X0+1520]
	045 Call 0x1C17CF4
	046 Move X0, 0x683000
	047 Move X0, [X0+1528]
	048 Call 0x1C17CF4
	049 Move X0, 0x627000
	050 Move X0, [X0+1936]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+1302], W8
	054 Move X0, [X23]
	055 Move X22, 0x61E000
	056 Move W8, [X0+224]
	057 Move X22, [X22+1432]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X31
	062 Call ShaderUtilities.GetShaderPropertyIDs
	063 Move X0, [X22]
	064 Move X20, [X19+248]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Move X1, X31
	071 Move X2, X31
	072 Call Object.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {96}
	077 Move X0, X31
	078 Call TMP_Settings.get_defaultFontAsset
	079 Move X8, [X22]
	080 Move X20, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Inequality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {288}
	094 Move X0, X31
	095 Call TMP_Settings.get_defaultFontAsset
	096 Move X0, [X19+248]
	097 Compare X0, 0
	098 JumpIfEqual {392}
	099 Move X1, X31
	100 Call TMP_FontAsset.get_characterLookupTable, X0
	101 Compare X0, 0
	102 JumpIfNotEqual {108}
	103 Move X0, [X19+248]
	104 Compare X0, 0
	105 JumpIfEqual {392}
	106 Move X1, X31
	107 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	108 Move X0, [X22]
	109 Move X20, [X19+272]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X20
	115 Move X1, X31
	116 Move X2, X31
	117 Call Object.op_Equality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {139}
	122 Move X0, [X22]
	123 Move X20, [X19+1856]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X20
	129 Move X1, X31
	130 Move X2, X31
	131 Call Object.op_Inequality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {139}
	136 Move X8, [X19+1856]
	137 Move [X19+1856], X31
	138 Move [X19+272], X8
	139 Move X0, [X22]
	140 Move X20, [X19+272]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X20
	146 Move X1, X31
	147 Move X2, X31
	148 Call Object.op_Equality, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {212}
	153 Move X0, [X23]
	154 Move X20, [X19+272]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Compare X20, 0
	160 JumpIfEqual {392}
	161 Move X8, [X23]
	162 Move X0, X20
	163 Move X2, X31
	164 Move X8, [X8+184]
	165 Move W1, [X8]
	166 Call Material.GetTexture, X0, X1
	167 Move X8, [X22]
	168 Move X20, X0
	169 Move W9, [X8+224]
	170 Compare W9, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X8
	173 Call 0x1C17DFC
	174 Move X0, X20
	175 Move X1, X31
	176 Move X2, X31
	177 Call Object.op_Equality, X0, X1
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {212}
	182 Move X0, [X19+248]
	183 Compare X0, 0
	184 JumpIfEqual {392}
	185 Move X1, X31
	186 Call TMP_FontAsset.get_atlasTexture, X0
	187 Compare X0, 0
	188 JumpIfEqual {392}
	189 Move X1, X31
	190 Call Object.GetInstanceID, X0
	191 Move X8, [X23]
	192 Move X21, [X19+272]
	193 Move W20, W0
	194 Move W9, [X8+224]
	195 Compare W9, 0
	196 JumpIfNotEqual {199}
	197 Move X0, X8
	198 Call 0x1C17DFC
	199 Compare X21, 0
	200 JumpIfEqual {392}
	201 Move X8, [X23]
	202 Move X0, X21
	203 Move X2, X31
	204 Move X8, [X8+184]
	205 Move W1, [X8]
	206 Call Material.GetTexture, X0, X1
	207 Compare X0, 0
	208 JumpIfEqual {392}
	209 Move X1, X31
	210 Call Object.GetInstanceID, X0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, [X19+248]
	213 Compare X8, 0
	214 JumpIfEqual {392}
	215 Move X0, [X22]
	216 Move X20, [X8+32]
	217 Move W9, [X0+224]
	218 Compare W9, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X20
	222 Move X1, X31
	223 Move X2, X31
	224 Call Object.op_Equality, X0, X1
	225 Move TEMP, X0
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfNotEqual {366}
	229 Move X8, 0x61E000
	230 Move X8, [X8+2760]
	231 Move W1, 5
	232 Move X0, [X8]
	233 Call 0x1C17D6C
	234 Compare X0, 0
	235 JumpIfEqual {392}
	236 Move W8, [X0+24]
	237 Move X20, X0
	238 Compare W8, 0
	239 JumpIfEqual {393}
	240 Move X8, 0x683000
	241 Move X8, [X8+1480]
	242 Move X8, [X8]
	243 Move [X20+32], X8
	244 Move X0, [X19+248]
	245 Compare X0, 0
	246 JumpIfEqual {392}
	247 Move X1, X31
	248 Call Object.get_name, X0
	249 Move W8, [X20+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move [X20+40], X0
	253 Move X8, 0x683000
	254 Move X8, [X8+1528]
	255 Move X0, X19
	256 Move X1, X31
	257 Move X8, [X8]
	258 Move [X20+48], X8
	259 Call Component.get_gameObject, X0
	260 Compare X0, 0
	261 JumpIfEqual {392}
	262 Move X1, X31
	263 Call Object.get_name, X0
	264 Move W8, [X20+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X20+56], X0
	268 Move X8, 0x683000
	269 Move X8, [X8+1488]
	270 Move X0, X20
	271 Move X1, X31
	272 Move X8, [X8]
	273 Move [X20+64], X8
	274 Call String.Concat, X0
	275 Move X8, 0x61E000
	276 Move X8, [X8+2600]
	277 Move X20, X0
	278 Move X8, [X8]
	279 Move W9, [X8+224]
	280 Compare W9, 0
	281 JumpIfNotEqual {284}
	282 Move X0, X8
	283 Call 0x1C17DFC
	284 Move X0, X20
	285 Move X1, X19
	286 Move X2, X31
	287 Call Debug.LogWarning, X0, X1
	288 Move X8, 0x683000
	289 Move X9, 0x683000
	290 Move X8, [X8+1520]
	291 Move X9, [X9+1472]
	292 Move X0, [X8]
	293 Move X1, [X9]
	294 Call 0x2242FB8, X0
	295 Move [X19+248], X0
	296 Move X20, X0
	297 Move X0, [X22]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X20
	303 Move X1, X31
	304 Move X2, X31
	305 Call Object.op_Equality, X0, X1
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {347}
	310 Move X0, X19
	311 Move X1, X31
	312 Call Component.get_gameObject, X0
	313 Compare X0, 0
	314 JumpIfEqual {392}
	315 Move X1, X31
	316 Call Object.get_name, X0
	317 Move X8, 0x683000
	318 Move X8, [X8+1496]
	319 Move X9, 0x627000
	320 Move X9, [X9+1936]
	321 Move X1, X0
	322 Move X8, [X8]
	323 Move X3, X31
	324 Move X2, [X9]
	325 Move X0, X8
	326 Call String.Concat, X0, X1, X2
	327 Move X8, 0x61E000
	328 Move X8, [X8+2600]
	329 Move X20, X0
	330 Move X8, [X8]
	331 Move W9, [X8+224]
	332 Compare W9, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X8
	335 Call 0x1C17DFC
	336 Move X0, X20
	337 Move X1, X19
	338 Move X20, [X31+32]
	339 Move X19, [X31+40]
	340 Move X22, [X31+16]
	341 Move X21, [X31+24]
	342 Move X2, X31
	343 Move X30, [X31+48]
	344 Move X23, [X31+56]
	345 Call Debug.LogWarning, X0, X1
	346 Return 
	347 Move X0, [X19+248]
	348 Compare X0, 0
	349 JumpIfEqual {392}
	350 Move X1, X31
	351 Call TMP_FontAsset.get_characterLookupTable, X0
	352 Compare X0, 0
	353 JumpIfNotEqual {366}
	354 Move X8, 0x61E000
	355 Move X8, [X8+2600]
	356 Move X0, [X8]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X8, 0x683000
	362 Move X8, [X8+1512]
	363 Move X1, X31
	364 Move X0, [X8]
	365 Call Debug.Log, X0
	366 Move X8, [X19+248]
	367 Compare X8, 0
	368 JumpIfEqual {392}
	369 Move X8, [X8+32]
	370 Move [X19+272], X8
	371 Move X1, [X19+248]
	372 Move X0, X19
	373 Move X2, X31
	374 Call TMP_Text.GetSpecialCharacters, X0, X1
	375 Move X8, [X19]
	376 Move X0, X19
	377 Move X9, [X8+1960]
	378 Move X1, [X8+1968]
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X8, [X19]
	381 Move [X19+1560], S0
	382 Move X0, X19
	383 Move X20, [X31+32]
	384 Move X19, [X31+40]
	385 Move X2, [X8+776]
	386 Move X1, [X8+784]
	387 Move X22, [X31+16]
	388 Move X21, [X31+24]
	389 Move X30, [X31+48]
	390 Move X23, [X31+56]
	391 CallNoReturn X2
	392 Call 0x1C17F20
	393 Call 0x1C17F28

Method: UnityEngine.Canvas GetCanvas()

Disassembly:
	0x03AD5E30 CBZ X0, 0x3AD5E48
	0x03AD5E34 LDR X8, [X24]
	0x03AD5E38 MOV X0, X22
	0x03AD5E3C LDR X1, [X8 + 0x40]
	0x03AD5E40 BL 0x1C16E00
	0x03AD5E44 CBZ X0, 0x3AD5EC8
	0x03AD5E48 LDR W8, [X24 + 0x18]
	0x03AD5E4C CMP X23, X8
	0x03AD5E50 B.CS 0x3AD5EC4
	0x03AD5E54 ADD X8, X24, X23, 0x3, LSL
	0x03AD5E58 STR X22, [X8 + 0x20]
	0x03AD5E5C B 0x3AD5E98
	0x03AD5E60 MOV X0, X19
	0x03AD5E64 MOV X1, X31
	0x03AD5E68 BL 0x3AF73F0
	0x03AD5E6C CBZ X24, 0x3AD5EC0
	0x03AD5E70 MOV X22, X0
	0x03AD5E74 CBZ X0, 0x3AD5E8C
	0x03AD5E78 LDR X8, [X24]
	0x03AD5E7C MOV X0, X22
	0x03AD5E80 LDR X1, [X8 + 0x40]
	0x03AD5E84 BL 0x1C16E00
	0x03AD5E88 CBZ X0, 0x3AD5EC8
	0x03AD5E8C LDR W8, [X24 + 0x18]
	0x03AD5E90 CBZ W8, 0x3AD5EC4
	0x03AD5E94 STR X22, [X24 + 0x20]
	0x03AD5E98 ADD X23, X23, 0x1
	0x03AD5E9C CMP X20, X23
	0x03AD5EA0 B.NE 0x3AD5DF0
	0x03AD5EA4 LDR X0, [X19 + 0x138]
	0x03AD5EA8 LDP X22, X21, [X31 + 0x20]
	0x03AD5EAC LDP X24, X23, [X31 + 0x10]
	0x03AD5EB0 STR X0, [X19 + 0x128]
	0x03AD5EB4 LDP X20, X19, [X31 + 0x30]
	0x03AD5EB8 LDR X30, [X31], #0x40
	0x03AD5EBC RET
	0x03AD5EC0 BL 0x1C16F20
	0x03AD5EC4 BL 0x1C16F28
	0x03AD5EC8 BL 0x1C16F44
	0x03AD5ECC MOV X1, X31
	0x03AD5ED0 BL 0x1C16DEC
	0x03AD5ED4 STP X30, X19, [X31 - 0x10]!
	0x03AD5ED8 LDR X8, [X0]
	0x03AD5EDC STR X1, [X0 + 0x110]
	0x03AD5EE0 MOV X19, X0
	0x03AD5EE4 LDR X9, [X8 + 0x7A8]
	0x03AD5EE8 LDR X1, [X8 + 0x7B0]
	0x03AD5EEC BLR X9
	0x03AD5EF0 LDR X8, [X19]
	0x03AD5EF4 STR S0, [X19 + 0x618]
	0x03AD5EF8 MOV X0, X19
	0x03AD5EFC LDR X2, [X8 + 0x308]
	0x03AD5F00 LDR X1, [X8 + 0x310]
	0x03AD5F04 LDP X30, X19, [X31], #0x10
	0x03AD5F08 BR X2
	0x03AD5F0C STR X30, [X31 - 0x40]!
	0x03AD5F10 STP X24, X23, [X31 + 0x10]
	0x03AD5F14 STP X22, X21, [X31 + 0x20]
	0x03AD5F18 STP X20, X19, [X31 + 0x30]
	0x03AD5F1C ADRP X20, 0x90D000
	0x03AD5F20 LDRB W8, [X20 + 0x51D]
	0x03AD5F24 MOV X19, X0
	0x03AD5F28 TBNZ X8, 0x0, 0x3AD5F58
	0x03AD5F2C ADRP X0, 0x625000
	0x03AD5F30 LDR X0, [X0 + 0x7A0]
	0x03AD5F34 BL 0x1C16CF4
	0x03AD5F38 ADRP X0, 0x683000
	0x03AD5F3C LDR X0, [X0 + 0x608]
	0x03AD5F40 BL 0x1C16CF4
	0x03AD5F44 ADRP X0, 0x683000
	0x03AD5F48 LDR X0, [X0 + 0x368]
	0x03AD5F4C BL 0x1C16CF4
	0x03AD5F50 MOVZ W8, 0x1
	0x03AD5F54 STRB W8, [X20 + 0x51D]
	0x03AD5F58 LDR X8, [X19 + 0x368]
	0x03AD5F5C CBZ X8, 0x3AD6088
	0x03AD5F60 LDR X9, [X19 + 0x128]
	0x03AD5F64 LDR W21, [X8 + 0x34]
	0x03AD5F68 ADD X20, X19, 0x128
	0x03AD5F6C CBZ X9, 0x3AD5FB4
	0x03AD5F70 LDR W8, [X9 + 0x18]
	0x03AD5F74 CMP W21, W8
	0x03AD5F78 B.EQ 0x3AD5FCC
	0x03AD5F7C ADRP X8, 0x683000
	0x03AD5F80 LDR X8, [X8 + 0x368]
	0x03AD5F84 LDR X0, [X8]
	0x03AD5F88 LDR W8, [X0 + 0xE0]
	0x03AD5F8C CBNZ W8, 0x3AD5F94
	0x03AD5F90 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x90E000
	007 Move X21, 0x684000
	008 Move W8, [X19+1303]
	009 Move X21, [X21+1888]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x684000
	016 Move X0, [X0+1896]
	017 Call 0x1C17CF4
	018 Move X0, 0x684000
	019 Move X0, [X0+1904]
	020 Call 0x1C17CF4
	021 Move X0, 0x684000
	022 Move X0, [X0+1912]
	023 Call 0x1C17CF4
	024 Move X0, 0x684000
	025 Move X0, [X0+1920]
	026 Call 0x1C17CF4
	027 Move X0, 0x684000
	028 Move X0, [X0+1928]
	029 Call 0x1C17CF4
	030 Move X0, 0x684000
	031 Move X0, [X0+1888]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1303], W8
	035 Move X0, [X21]
	036 Move X19, 0x684000
	037 Move W8, [X0+224]
	038 Move X19, [X19+1920]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, [X19]
	043 Call 0x2670F3C
	044 Move X19, X0
	045 Move X0, X20
	046 Move X1, X31
	047 Call Component.get_gameObject, X0
	048 Compare X0, 0
	049 JumpIfEqual {101}
	050 Move X8, 0x684000
	051 Move X8, [X8+1896]
	052 Move W1, W31
	053 Move X2, X19
	054 Move X3, [X8]
	055 Call 0x21E74C8, X0, X1, X2
	056 Compare X19, 0
	057 JumpIfEqual {101}
	058 Move W8, [X19+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X22, 0x684000
	061 Move X22, [X22+1912]
	062 Move W20, W31
	063 Move X2, [X22]
	064 Move X0, X19
	065 Move W1, W20
	066 Call List`1<Object>.get_Item, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {101}
	069 Move X1, X31
	070 Call Behaviour.get_isActiveAndEnabled, X0
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {79}
	075 Move W8, [X19+24]
	076 Add W20, W20, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X20, X31
	079 Move X2, [X22]
	080 Move X0, X19
	081 Move W1, W20
	082 Call List`1<Object>.get_Item, X0, X1
	083 Move X20, X0
	084 Move X0, [X21]
	085 Move X21, 0x684000
	086 Move W8, [X0+224]
	087 Move X21, [X21+1928]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X1, [X21]
	092 Move X0, X19
	093 Call 0x2670FD4, X0
	094 Move X0, X20
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Void UpdateEnvMapMatrix()

Disassembly:
	0x03AD67C4 BLR X9
	0x03AD67C8 STR X0, [X20 + 0x130]
	0x03AD67CC B 0x3AD67D4
	0x03AD67D0 LDR X0, [X20 + 0x130]
	0x03AD67D4 LDR X8, [X20]
	0x03AD67D8 STR X0, [X20 + 0x110]
	0x03AD67DC MOV X0, X20
	0x03AD67E0 LDR X9, [X8 + 0x7A8]
	0x03AD67E4 LDR X1, [X8 + 0x7B0]
	0x03AD67E8 BLR X9
	0x03AD67EC STR S0, [X20 + 0x618]
	0x03AD67F0 LDR X0, [X22]
	0x03AD67F4 LDR X20, [X20 + 0x110]
	0x03AD67F8 LDR W8, [X0 + 0xE0]
	0x03AD67FC CBNZ W8, 0x3AD6804
	0x03AD6800 BL 0x1C16DFC
	0x03AD6804 CBZ X20, 0x3AD6864
	0x03AD6808 MOVZ W9, 0x437F0000
	0x03AD680C FMOV S4, W9
	0x03AD6810 LDR X9, [X22]
	0x03AD6814 UBFM X8, X19, 0x18, 0x1F
	0x03AD6818 UCVTF S0, W8
	0x03AD681C UBFM W8, W19, 0x10, 0x17
	0x03AD6820 FDIV S3, S0, S4
	0x03AD6824 UCVTF S0, W8
	0x03AD6828 LDR X8, [X9 + 0xB8]
	0x03AD682C UBFM W9, W19, 0x8, 0xF
	0x03AD6830 MOV X0, X20
	0x03AD6834 LDP X22, X21, [X31 + 0x10]
	0x03AD6838 LDR W1, [X8 + 0x44]
	0x03AD683C AND W8, W19, 0xFF
	0x03AD6840 LDP X20, X19, [X31 + 0x20]
	0x03AD6844 FDIV S2, S0, S4
	0x03AD6848 UCVTF S0, W9
	0x03AD684C FDIV S1, S0, S4
	0x03AD6850 UCVTF S0, W8
	0x03AD6854 FDIV S0, S0, S4
	0x03AD6858 MOV X2, X31
	0x03AD685C LDR X30, [X31], #0x30
	0x03AD6860 B 0x3C14988
	0x03AD6864 BL 0x1C16F20
	0x03AD6868 STP X30, X21, [X31 - 0x20]!
	0x03AD686C STP X20, X19, [X31 + 0x10]
	0x03AD6870 ADRP X20, 0x90C000
	0x03AD6874 ADRP X21, 0x61D000
	0x03AD6878 LDRB W8, [X20 + 0x522]
	0x03AD687C LDR X21, [X21 + 0x598]
	0x03AD6880 MOV X19, X0
	0x03AD6884 TBNZ X8, 0x0, 0x3AD68A8
	0x03AD6888 ADRP X0, 0x61D000
	0x03AD688C LDR X0, [X0 + 0x598]
	0x03AD6890 BL 0x1C16CF4
	0x03AD6894 ADRP X0, 0x682000
	0x03AD6898 LDR X0, [X0 + 0x338]
	0x03AD689C BL 0x1C16CF4
	0x03AD68A0 MOVZ W8, 0x1
	0x03AD68A4 STRB W8, [X20 + 0x522]
	0x03AD68A8 LDR X0, [X21]
	0x03AD68AC LDR X20, [X19 + 0x728]
	0x03AD68B0 LDR W8, [X0 + 0xE0]
	0x03AD68B4 CBNZ W8, 0x3AD68BC
	0x03AD68B8 BL 0x1C16DFC
	0x03AD68BC MOV X0, X20
	0x03AD68C0 MOV X1, X31
	0x03AD68C4 MOV X2, X31
	0x03AD68C8 BL 0x3C3883C
	0x03AD68CC TBNZ X0, 0x0, 0x3AD68F8
	0x03AD68D0 LDR X0, [X21]
	0x03AD68D4 LDR X20, [X19 + 0x110]
	0x03AD68D8 LDR W8, [X0 + 0xE0]
	0x03AD68DC CBNZ W8, 0x3AD68E4
	0x03AD68E0 BL 0x1C16DFC
	0x03AD68E4 MOV X0, X20
	0x03AD68E8 MOV X1, X31
	0x03AD68EC MOV X2, X31
	0x03AD68F0 BL 0x3C3883C
	0x03AD68F4 TBZ X0, 0x0, 0x3AD6904
	0x03AD68F8 LDP X20, X19, [X31 + 0x10]
	0x03AD68FC LDP X30, X21, [X31], #0x20
	0x03AD6900 RET
	0x03AD6904 LDR X0, [X19 + 0x728]
	0x03AD6908 CBZ X0, 0x3AD6990
	0x03AD690C MOV X1, X31
	0x03AD6910 BL 0x3E244BC
	0x03AD6914 CBZ W0, 0x3AD6920
	0x03AD6918 LDRB W8, [X19 + 0x304]
	0x03AD691C CBZ W8, 0x3AD694C
	0x03AD6920 ADRP X20, 0x682000
	0x03AD6924 LDR X20, [X20 + 0x338]
	0x03AD6928 LDR X19, [X19 + 0x110]
	0x03AD692C LDR X0, [X20]
	0x03AD6930 LDR W8, [X0 + 0xE0]
	0x03AD6934 CBNZ W8, 0x3AD693C
	0x03AD6938 BL 0x1C16DFC
	0x03AD693C CBZ X19, 0x3AD6990
	0x03AD6940 LDR X8, [X20]
	0x03AD6944 FMOV S0, W31
	0x03AD6948 B 0x3AD6974
	0x03AD694C ADRP X20, 0x682000
	0x03AD6950 LDR X20, [X20 + 0x338]
	0x03AD6954 LDR X19, [X19 + 0x110]
	0x03AD6958 LDR X0, [X20]
	0x03AD695C LDR W8, [X0 + 0xE0]
	0x03AD6960 CBNZ W8, 0x3AD6968
	0x03AD6964 BL 0x1C16DFC
	0x03AD6968 CBZ X19, 0x3AD6990
	0x03AD696C LDR X8, [X20]
	0x03AD6970 FMOV S0, 4
	0x03AD6974 LDR X8, [X8 + 0xB8]
	0x03AD6978 LDR X1, [X8 + 0x118]
	0x03AD697C MOV X0, X19
	0x03AD6980 LDP X20, X19, [X31 + 0x10]
	0x03AD6984 MOV X2, X31
	0x03AD6988 LDP X30, X21, [X31], #0x20
	0x03AD698C B 0x3C15C58
	0x03AD6990 BL 0x1C16F20
	0x03AD6994 STR X30, [X31 - 0x40]!
	0x03AD6998 STP X24, X23, [X31 + 0x10]
	0x03AD699C STP X22, X21, [X31 + 0x20]
	0x03AD69A0 STP X20, X19, [X31 + 0x30]
	0x03AD69A4 ADRP X20, 0x90C000
	0x03AD69A8 ADRP X21, 0x61D000
	0x03AD69AC LDRB W8, [X20 + 0x523]
	0x03AD69B0 LDR X21, [X21 + 0x598]
	0x03AD69B4 MOV X19, X0
	0x03AD69B8 TBNZ X8, 0x0, 0x3AD69E8
	0x03AD69BC ADRP X0, 0x61D000
	0x03AD69C0 LDR X0, [X0 + 0x598]
	0x03AD69C4 BL 0x1C16CF4
	0x03AD69C8 ADRP X0, 0x682000
	0x03AD69CC LDR X0, [X0 + 0x338]
	0x03AD69D0 BL 0x1C16CF4
	0x03AD69D4 ADRP X0, 0x682000
	0x03AD69D8 LDR X0, [X0 + 0x5E0]
	0x03AD69DC BL 0x1C16CF4
	0x03AD69E0 MOVZ W8, 0x1
	0x03AD69E4 STRB W8, [X20 + 0x523]
	0x03AD69E8 LDR X8, [X19]
	0x03AD69EC LDRB W23, [X19 + 0x306]
	0x03AD69F0 MOV X0, X19
	0x03AD69F4 LDR X9, [X8 + 0x358]
	0x03AD69F8 LDR X1, [X8 + 0x360]
	0x03AD69FC BLR X9
	0x03AD6A00 LDR X8, [X21]
	0x03AD6A04 MOV X20, X0
	0x03AD6A08 LDR W9, [X8 + 0xE0]
	0x03AD6A0C CBNZ W9, 0x3AD6A18
	0x03AD6A10 MOV X0, X8
	0x03AD6A14 BL 0x1C16DFC
	0x03AD6A18 ADRP X22, 0x682000
	0x03AD6A1C LDR X22, [X22 + 0x338]
	0x03AD6A20 MOV X0, X20
	0x03AD6A24 MOV X1, X31
	0x03AD6A28 MOV X2, X31
	0x03AD6A2C BL 0x3C354F8
	0x03AD6A30 CBZ W23, 0x3AD6B3C
	0x03AD6A34 TBZ X0, 0x0, 0x3AD6A58

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+208], D14
	003 Move [X31+224], D13
	004 Move [X31+232], D12
	005 Move [X31+240], D11
	006 Move [X31+248], D10
	007 Move [X31+256], D9
	008 Move [X31+264], D8
	009 Move [X31+272], X29
	010 Move [X31+280], X30
	011 Move [X31+288], X22
	012 Move [X31+296], X21
	013 Move [X31+304], X20
	014 Move [X31+312], X19
	015 Move X20, 0x90D000
	016 Move X21, 0x683000
	017 Move W8, [X20+1304]
	018 Move X21, [X21+824]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x61E000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x683000
	028 Move X0, [X0+824]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1304], W8
	032 Move X0, [X21]
	033 Move X20, [X19+272]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Compare X20, 0
	039 JumpIfEqual {203}
	040 Move X8, [X21]
	041 Move X0, X20
	042 Move X2, X31
	043 Move X8, [X8+184]
	044 Move W1, [X8+140]
	045 Call Material.HasProperty, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {188}
	050 Move X0, [X21]
	051 Move X20, [X19+272]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Compare X20, 0
	057 JumpIfEqual {203}
	058 Move X8, [X21]
	059 Move X0, X20
	060 Move X2, X31
	061 Move X8, [X8+184]
	062 Move W1, [X8+140]
	063 Call Material.GetTexture, X0, X1
	064 Move X8, 0x61E000
	065 Move X8, [X8+1432]
	066 Move X20, X0
	067 Move X8, [X8]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {188}
	081 Move X0, [X21]
	082 Move X20, [X19+272]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Compare X20, 0
	088 JumpIfEqual {203}
	089 Move X8, [X21]
	090 Move X0, X20
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move W1, [X8+148]
	094 Call Material.GetVector, X0, X1
	095 Move X20, 0x903000
	096 Move W8, [X20+1923]
	097 Move V11, V0
	098 Move V12, V1
	099 Move V13, V2
	100 Compare W8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, 0x61E000
	103 Move X0, [X0+1440]
	104 Call 0x1C17CF4
	105 Move W8, 1
	106 Move [X20+1923], W8
	107 Move X20, 0x61E000
	108 Move X20, [X20+1440]
	109 Move X9, -50245632
	110 Move V2, [X9+260]
	111 Move X0, X31
	112 Move X8, [X20]
	113 Multiply S0, S11, S2
	114 Multiply S1, S12, S2
	115 Move X8, [X8+184]
	116 Multiply S2, S13, S2
	117 Move S10, [X8]
	118 Move S9, [X8+4]
	119 Move V8, [X8+8]
	120 Call Quaternion.Internal_FromEulerRad, X0
	121 Move X22, 0x903000
	122 Move W8, [X22+2139]
	123 Move V11, V0
	124 Move V12, V1
	125 Move V13, V2
	126 Move V14, V3
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0x61E000
	130 Move X0, [X0+1440]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X22+2139], W8
	134 Move X8, [X20]
	135 Move V1, V9
	136 Move V2, V8
	137 Move V3, V11
	138 Move X8, [X8+184]
	139 Move V4, V12
	140 Move V5, V13
	141 Move V6, V14
	142 Move V0, [X8+20]
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Add X8, X31, 80
	145 Move X0, X31
	146 Move [X31+8], S0
	147 Move V0, V10
	148 Move [X31], X9
	149 Call Matrix4x4.TRS, X0, X1, X2
	150 Move V1, [X31+112]
	151 Move V0, [X31+128]
	152 Move V3, [X31+80]
	153 Move V2, [X31+96]
	154 Add X8, X19, 1884
	155 Move [X31+176], V1
	156 Move [X31+184], V0
	157 Move [X31+144], V3
	158 Move [X31+152], V2
	159 Move [X8+32], V1
	160 Move [X8+40], V0
	161 Move [X8], V3
	162 Move [X8+8], V2
	163 Move X8, [X21]
	164 Move X0, [X19+272]
	165 Move V0, [X31+144]
	166 Move V1, [X31+160]
	167 Move V2, [X31+176]
	168 Move V3, [X31+192]
	169 Move X8, [X8+184]
	170 Move W1, [X8+144]
	171 Move [X31+80], V0
	172 Move [X31+88], V1
	173 Move [X31+112], V2
	174 Move [X31+120], V3
	175 Compare X0, 0
	176 JumpIfEqual {203}
	177 Move V0, [X31+80]
	178 Move V1, [X31+96]
	179 Move V2, [X31+112]
	180 Move V3, [X31+128]
	181 Add X2, X31, 16
	182 Move X3, X31
	183 Move [X31+16], V0
	184 Move [X31+24], V1
	185 Move [X31+48], V2
	186 Move [X31+56], V3
	187 Call Material.SetMatrix, X0, X1, X2
	188 Move X20, [X31+304]
	189 Move X19, [X31+312]
	190 Move X22, [X31+288]
	191 Move X21, [X31+296]
	192 Move X29, [X31+272]
	193 Move X30, [X31+280]
	194 Move D9, [X31+256]
	195 Move D8, [X31+264]
	196 Move D11, [X31+240]
	197 Move D10, [X31+248]
	198 Move D13, [X31+224]
	199 Move D12, [X31+232]
	200 Move V14, [X31+208]
	201 Add X31, X31, 320
	202 Return 
	203 Call 0x1C17F20

Method: System.Void EnableMasking()

Disassembly:
	0x03AD6A38 CBZ X20, 0x3AD6C40
	0x03AD6A3C ADRP X8, 0x682000
	0x03AD6A40 LDR X8, [X8 + 0x5E0]
	0x03AD6A44 FMOV S0, 2
	0x03AD6A48 MOV X0, X20
	0x03AD6A4C MOV X2, X31
	0x03AD6A50 LDR X1, [X8]
	0x03AD6A54 BL 0x3C15C58
	0x03AD6A58 LDR X8, [X19 + 0x708]
	0x03AD6A5C CBZ X8, 0x3AD6C40
	0x03AD6A60 MOVZ W23, 0x5
	0x03AD6A64 LDR W9, [X8 + 0x18]
	0x03AD6A68 SUB X24, X23, 0x4
	0x03AD6A6C CMP W24, W9
	0x03AD6A70 B.GE 0x3AD6C44
	0x03AD6A74 CMP W24, W9
	0x03AD6A78 B.CS 0x3AD6C58
	0x03AD6A7C LDR X0, [X21]
	0x03AD6A80 LDR X20, [X8, X23, LSL #3]
	0x03AD6A84 LDR W9, [X0 + 0xE0]
	0x03AD6A88 CBNZ W9, 0x3AD6A90
	0x03AD6A8C BL 0x1C16DFC
	0x03AD6A90 MOV X0, X20
	0x03AD6A94 MOV X1, X31
	0x03AD6A98 MOV X2, X31
	0x03AD6A9C BL 0x3C354F8
	0x03AD6AA0 TBZ X0, 0x0, 0x3AD6C44
	0x03AD6AA4 LDR X8, [X19 + 0x708]
	0x03AD6AA8 CBZ X8, 0x3AD6C40
	0x03AD6AAC LDR W9, [X8 + 0x18]
	0x03AD6AB0 CMP W24, W9
	0x03AD6AB4 B.CS 0x3AD6C58
	0x03AD6AB8 LDR X0, [X8, X23, LSL #3]
	0x03AD6ABC CBZ X0, 0x3AD6C40
	0x03AD6AC0 LDR X8, [X0]
	0x03AD6AC4 LDR X9, [X8 + 0x358]
	0x03AD6AC8 LDR X1, [X8 + 0x360]
	0x03AD6ACC BLR X9
	0x03AD6AD0 LDR X8, [X21]
	0x03AD6AD4 MOV X20, X0
	0x03AD6AD8 LDR W9, [X8 + 0xE0]
	0x03AD6ADC CBNZ W9, 0x3AD6AE8
	0x03AD6AE0 MOV X0, X8
	0x03AD6AE4 BL 0x1C16DFC
	0x03AD6AE8 MOV X0, X20
	0x03AD6AEC MOV X1, X31
	0x03AD6AF0 MOV X2, X31
	0x03AD6AF4 BL 0x3C354F8
	0x03AD6AF8 TBZ X0, 0x0, 0x3AD6B2C
	0x03AD6AFC LDR X0, [X22]
	0x03AD6B00 LDR W8, [X0 + 0xE0]
	0x03AD6B04 CBNZ W8, 0x3AD6B0C
	0x03AD6B08 BL 0x1C16DFC
	0x03AD6B0C CBZ X20, 0x3AD6C40
	0x03AD6B10 LDR X8, [X22]
	0x03AD6B14 FMOV S0, 2
	0x03AD6B18 MOV X0, X20
	0x03AD6B1C MOV X2, X31
	0x03AD6B20 LDR X8, [X8 + 0xB8]
	0x03AD6B24 LDR X1, [X8 + 0x120]
	0x03AD6B28 BL 0x3C15C58
	0x03AD6B2C LDR X8, [X19 + 0x708]
	0x03AD6B30 ADD X23, X23, 0x1
	0x03AD6B34 CBNZ X8, 0x3AD6A64
	0x03AD6B38 B 0x3AD6C40
	0x03AD6B3C TBZ X0, 0x0, 0x3AD6B60
	0x03AD6B40 CBZ X20, 0x3AD6C40
	0x03AD6B44 ADRP X8, 0x682000
	0x03AD6B48 LDR X8, [X8 + 0x5E0]
	0x03AD6B4C FMOV S0, W31
	0x03AD6B50 MOV X0, X20
	0x03AD6B54 MOV X2, X31
	0x03AD6B58 LDR X1, [X8]
	0x03AD6B5C BL 0x3C15C58
	0x03AD6B60 LDR X8, [X19 + 0x708]
	0x03AD6B64 CBZ X8, 0x3AD6C40
	0x03AD6B68 MOVZ W23, 0x5
	0x03AD6B6C LDR W9, [X8 + 0x18]
	0x03AD6B70 SUB X24, X23, 0x4
	0x03AD6B74 CMP W24, W9
	0x03AD6B78 B.GE 0x3AD6C44
	0x03AD6B7C CMP W24, W9
	0x03AD6B80 B.CS 0x3AD6C58
	0x03AD6B84 LDR X0, [X21]
	0x03AD6B88 LDR X20, [X8, X23, LSL #3]
	0x03AD6B8C LDR W9, [X0 + 0xE0]
	0x03AD6B90 CBNZ W9, 0x3AD6B98
	0x03AD6B94 BL 0x1C16DFC
	0x03AD6B98 MOV X0, X20
	0x03AD6B9C MOV X1, X31
	0x03AD6BA0 MOV X2, X31
	0x03AD6BA4 BL 0x3C354F8
	0x03AD6BA8 TBZ X0, 0x0, 0x3AD6C44
	0x03AD6BAC LDR X8, [X19 + 0x708]
	0x03AD6BB0 CBZ X8, 0x3AD6C40
	0x03AD6BB4 LDR W9, [X8 + 0x18]
	0x03AD6BB8 CMP W24, W9
	0x03AD6BBC B.CS 0x3AD6C58
	0x03AD6BC0 LDR X0, [X8, X23, LSL #3]
	0x03AD6BC4 CBZ X0, 0x3AD6C40
	0x03AD6BC8 LDR X8, [X0]
	0x03AD6BCC LDR X9, [X8 + 0x358]
	0x03AD6BD0 LDR X1, [X8 + 0x360]
	0x03AD6BD4 BLR X9
	0x03AD6BD8 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x90D000
	008 Move X20, 0x61E000
	009 Move W8, [X21+1305]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x61E000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x683000
	020 Move X0, [X0+824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1305], W8
	024 Move X0, [X20]
	025 Move X20, [X19+304]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X23, 0x683000
	031 Move X23, [X23+824]
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {70}
	040 Move X8, [X19]
	041 Move X1, [X19+272]
	042 Move X0, X19
	043 Move X9, [X8+1848]
	044 Move X2, [X8+1856]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move [X19+304], X0
	047 Move X20, X0
	048 Move X0, [X23]
	049 Move X21, [X19+1824]
	050 Move X22, [X19+272]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Compare X22, 0
	056 JumpIfEqual {130}
	057 Move X8, [X23]
	058 Move X0, X22
	059 Move X2, X31
	060 Move X8, [X8+184]
	061 Move W1, [X8]
	062 Call Material.GetTexture, X0, X1
	063 Compare X21, 0
	064 JumpIfEqual {130}
	065 Move X2, X0
	066 Move X0, X21
	067 Move X1, X20
	068 Move X3, X31
	069 Call CanvasRenderer.SetMaterial, X0, X1, X2
	070 Move X20, [X19+304]
	071 Move [X19+272], X20
	072 Move X0, [X23]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Compare X20, 0
	078 JumpIfEqual {130}
	079 Move X8, [X23]
	080 Move X0, X20
	081 Move X2, X31
	082 Move X8, [X8+184]
	083 Move W1, [X8+156]
	084 Call Material.HasProperty, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {121}
	089 Move X0, [X23]
	090 Move X20, [X19+272]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Compare X20, 0
	096 JumpIfEqual {130}
	097 Move X8, [X23]
	098 Move X0, X20
	099 Move X2, X31
	100 Move X8, [X8+184]
	101 Move X1, [X8+248]
	102 Call Material.EnableKeyword, X0, X1
	103 Move X0, [X19+272]
	104 Compare X0, 0
	105 JumpIfEqual {130}
	106 Move X8, [X23]
	107 Move X2, X31
	108 Move X8, [X8+184]
	109 Move X1, [X8+256]
	110 Call Material.DisableKeyword, X0, X1
	111 Move X0, [X19+272]
	112 Compare X0, 0
	113 JumpIfEqual {130}
	114 Move X8, [X23]
	115 Move X2, X31
	116 Move X8, [X8+184]
	117 Move X1, [X8+264]
	118 Call Material.DisableKeyword, X0, X1
	119 Move X0, X19
	120 Call TextMeshProUGUI.UpdateMask, X0
	121 Move W8, 1
	122 Move [X19+775], W8
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 Move X23, [X31+56]
	129 Return 
	130 Call 0x1C17F20

Method: System.Void DisableMasking()

Disassembly:
	0x03AD6BDC MOV X20, X0

ISIL:
	001 Return 

Method: System.Void UpdateMask()

Disassembly:
	0x03AD46F8 LDR W9, [X8 + 0x18]
	0x03AD46FC CMP X25, X9
	0x03AD4700 B.CS 0x3AD4758
	0x03AD4704 LDR X0, [X8, X24, LSL #3]
	0x03AD4708 CBZ X0, 0x3AD4754
	0x03AD470C MOV X1, X31
	0x03AD4710 BL 0x3CDBD2C
	0x03AD4714 CBNZ X0, 0x3AD4724
	0x03AD4718 B 0x3AD4754
	0x03AD471C LDR X0, [X19 + 0x720]
	0x03AD4720 CBZ X0, 0x3AD4754
	0x03AD4724 MOV X1, X21
	0x03AD4728 MOV X2, X31
	0x03AD472C BL 0x3E22AB0
	0x03AD4730 ADD X22, X22, 0x50
	0x03AD4734 CMP X23, X22
	0x03AD4738 ADD X24, X24, 0x1
	0x03AD473C B.NE 0x3AD45B4
	0x03AD4740 LDP X20, X19, [X31 + 0x30]
	0x03AD4744 LDP X22, X21, [X31 + 0x20]
	0x03AD4748 LDP X24, X23, [X31 + 0x10]
	0x03AD474C LDP X30, X25, [X31], #0x40
	0x03AD4750 RET
	0x03AD4754 BL 0x1C16F20
	0x03AD4758 BL 0x1C16F28
	0x03AD475C STP X30, X25, [X31 - 0x40]!
	0x03AD4760 STP X24, X23, [X31 + 0x10]
	0x03AD4764 STP X22, X21, [X31 + 0x20]
	0x03AD4768 STP X20, X19, [X31 + 0x30]
	0x03AD476C ADRP X20, 0x90E000
	0x03AD4770 LDRB W8, [X20 + 0x511]
	0x03AD4774 MOV X19, X0
	0x03AD4778 TBNZ X8, 0x0, 0x3AD4790
	0x03AD477C ADRP X0, 0x684000
	0x03AD4780 LDR X0, [X0 + 0x348]
	0x03AD4784 BL 0x1C16CF4
	0x03AD4788 MOVZ W8, 0x1
	0x03AD478C STRB W8, [X20 + 0x511]
	0x03AD4790 LDR X8, [X19 + 0x368]
	0x03AD4794 CBZ X8, 0x3AD4968
	0x03AD4798 LDR W8, [X8 + 0x34]
	0x03AD479C CMP W8, 0x1
	0x03AD47A0 B.LT 0x3AD4954
	0x03AD47A4 ADRP X22, 0x684000
	0x03AD47A8 LDR X22, [X22 + 0x348]
	0x03AD47AC ADD X8, X8, X8, 0x2, LSL
	0x03AD47B0 MOV X21, X31
	0x03AD47B4 UBFM X23, X8, 0x3C, 0x3B
	0x03AD47B8 MOVZ W24, 0x4
	0x03AD47BC SUB X25, X24, 0x4
	0x03AD47C0 CBZ X21, 0x3AD482C
	0x03AD47C4 LDR X8, [X19 + 0x368]
	0x03AD47C8 CBZ X8, 0x3AD4968
	0x03AD47CC LDR X20, [X8 + 0x60]
	0x03AD47D0 CBZ X20, 0x3AD4968
	0x03AD47D4 LDR X0, [X22]
	0x03AD47D8 LDR W8, [X0 + 0xE0]
	0x03AD47DC CBNZ W8, 0x3AD47E4
	0x03AD47E0 BL 0x1C16DFC
	0x03AD47E4 LDR W8, [X20 + 0x18]
	0x03AD47E8 CMP X25, X8
	0x03AD47EC B.CS 0x3AD496C
	0x03AD47F0 ADD X8, X20, X21
	0x03AD47F4 ADD X0, X8, 0x20
	0x03AD47F8 MOV X1, X31
	0x03AD47FC BL 0x3B12AF8
	0x03AD4800 LDR X8, [X19 + 0x708]
	0x03AD4804 CBZ X8, 0x3AD4968
	0x03AD4808 LDR W9, [X8 + 0x18]
	0x03AD480C CMP X25, X9
	0x03AD4810 B.CS 0x3AD496C
	0x03AD4814 LDR X0, [X8, X24, LSL #3]
	0x03AD4818 CBZ X0, 0x3AD4968
	0x03AD481C MOV X1, X31
	0x03AD4820 BL 0x3B1AC04
	0x03AD4824 MOV X20, X0
	0x03AD4828 B 0x3AD4830
	0x03AD482C LDR X20, [X19 + 0x3A0]
	0x03AD4830 LDR X8, [X19 + 0x368]
	0x03AD4834 CBZ X8, 0x3AD4968
	0x03AD4838 LDR X8, [X8 + 0x60]
	0x03AD483C CBZ X8, 0x3AD4968
	0x03AD4840 LDR W9, [X8 + 0x18]
	0x03AD4844 CMP X25, X9
	0x03AD4848 B.CS 0x3AD496C
	0x03AD484C CBZ X20, 0x3AD4968
	0x03AD4850 ADD X8, X8, X21
	0x03AD4854 LDR X1, [X8 + 0x30]
	0x03AD4858 MOV X0, X20
	0x03AD485C MOV X2, X31
	0x03AD4860 BL 0x3C17F08
	0x03AD4864 LDR X8, [X19 + 0x368]
	0x03AD4868 CBZ X8, 0x3AD4968
	0x03AD486C LDR X8, [X8 + 0x60]
	0x03AD4870 CBZ X8, 0x3AD4968
	0x03AD4874 LDR W9, [X8 + 0x18]
	0x03AD4878 CMP X25, X9
	0x03AD487C B.CS 0x3AD496C
	0x03AD4880 ADD X8, X8, X21
	0x03AD4884 LDR X1, [X8 + 0x48]
	0x03AD4888 MOV X0, X20
	0x03AD488C MOV X2, X31
	0x03AD4890 BL 0x3C1810C
	0x03AD4894 LDR X8, [X19 + 0x368]
	0x03AD4898 CBZ X8, 0x3AD4968
	0x03AD489C LDR X8, [X8 + 0x60]
	0x03AD48A0 CBZ X8, 0x3AD4968
	0x03AD48A4 LDR W9, [X8 + 0x18]
	0x03AD48A8 CMP X25, X9
	0x03AD48AC B.CS 0x3AD496C
	0x03AD48B0 ADD X8, X8, X21
	0x03AD48B4 LDR X1, [X8 + 0x50]
	0x03AD48B8 MOV X0, X20
	0x03AD48BC MOV X2, X31
	0x03AD48C0 BL 0x3C181B8
	0x03AD48C4 LDR X8, [X19 + 0x368]
	0x03AD48C8 CBZ X8, 0x3AD4968
	0x03AD48CC LDR X8, [X8 + 0x60]
	0x03AD48D0 CBZ X8, 0x3AD4968
	0x03AD48D4 LDR W9, [X8 + 0x18]
	0x03AD48D8 CMP X25, X9
	0x03AD48DC B.CS 0x3AD496C
	0x03AD48E0 ADD X8, X8, X21
	0x03AD48E4 LDR X1, [X8 + 0x58]
	0x03AD48E8 MOV X0, X20
	0x03AD48EC MOV X2, X31
	0x03AD48F0 BL 0x3C18318
	0x03AD48F4 MOV X0, X20
	0x03AD48F8 MOV X1, X31
	0x03AD48FC BL 0x3C19CD4
	0x03AD4900 CBZ X21, 0x3AD4930
	0x03AD4904 LDR X8, [X19 + 0x708]
	0x03AD4908 CBZ X8, 0x3AD4968
	0x03AD490C LDR W9, [X8 + 0x18]
	0x03AD4910 CMP X25, X9
	0x03AD4914 B.CS 0x3AD496C
	0x03AD4918 LDR X0, [X8, X24, LSL #3]
	0x03AD491C CBZ X0, 0x3AD4968
	0x03AD4920 MOV X1, X31
	0x03AD4924 BL 0x3CDBD2C
	0x03AD4928 CBNZ X0, 0x3AD4938
	0x03AD492C B 0x3AD4968
	0x03AD4930 LDR X0, [X19 + 0x720]
	0x03AD4934 CBZ X0, 0x3AD4968
	0x03AD4938 MOV X1, X20
	0x03AD493C MOV X2, X31
	0x03AD4940 BL 0x3E22AB0
	0x03AD4944 ADD X21, X21, 0x50
	0x03AD4948 CMP X23, X21
	0x03AD494C ADD X24, X24, 0x1
	0x03AD4950 B.NE 0x3AD47BC
	0x03AD4954 LDP X20, X19, [X31 + 0x30]
	0x03AD4958 LDP X22, X21, [X31 + 0x20]
	0x03AD495C LDP X24, X23, [X31 + 0x10]
	0x03AD4960 LDP X30, X25, [X31], #0x40
	0x03AD4964 RET
	0x03AD4968 BL 0x1C16F20
	0x03AD496C BL 0x1C16F28
	0x03AD4970 LDR X8, [X0]
	0x03AD4974 LDR X2, [X8 + 0x6C8]
	0x03AD4978 LDR X1, [X8 + 0x6D0]
	0x03AD497C BR X2
	0x03AD4980 STR X30, [X31 - 0x50]!
	0x03AD4984 STP X26, X25, [X31 + 0x10]
	0x03AD4988 STP X24, X23, [X31 + 0x20]
	0x03AD498C STP X22, X21, [X31 + 0x30]
	0x03AD4990 STP X20, X19, [X31 + 0x40]
	0x03AD4994 ADRP X20, 0x90E000
	0x03AD4998 LDRB W8, [X20 + 0x512]
	0x03AD499C MOV X19, X0
	0x03AD49A0 TBNZ X8, 0x0, 0x3AD4A30
	0x03AD49A4 ADRP X0, 0x684000
	0x03AD49A8 LDR X0, [X0 + 0x748]
	0x03AD49AC BL 0x1C16CF4
	0x03AD49B0 ADRP X0, 0x684000
	0x03AD49B4 LDR X0, [X0 + 0x720]
	0x03AD49B8 BL 0x1C16CF4
	0x03AD49BC ADRP X0, 0x684000
	0x03AD49C0 LDR X0, [X0 + 0x750]
	0x03AD49C4 BL 0x1C16CF4
	0x03AD49C8 ADRP X0, 0x684000
	0x03AD49CC LDR X0, [X0 + 0x758]
	0x03AD49D0 BL 0x1C16CF4
	0x03AD49D4 ADRP X0, 0x684000
	0x03AD49D8 LDR X0, [X0 + 0x558]
	0x03AD49DC BL 0x1C16CF4
	0x03AD49E0 ADRP X0, 0x67F000
	0x03AD49E4 LDR X0, [X0 + 0xB40]
	0x03AD49E8 BL 0x1C16CF4
	0x03AD49EC ADRP X0, 0x626000
	0x03AD49F0 LDR X0, [X0 + 0x700]
	0x03AD49F4 BL 0x1C16CF4
	0x03AD49F8 ADRP X0, 0x61F000
	0x03AD49FC LDR X0, [X0 + 0x598]
	0x03AD4A00 BL 0x1C16CF4
	0x03AD4A04 ADRP X0, 0x684000
	0x03AD4A08 LDR X0, [X0 + 0x5B0]
	0x03AD4A0C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X21, 0x90F000
	015 Move X20, 0x620000
	016 Move W8, [X21+1306]
	017 Move X20, [X20+1432]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x620000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x685000
	027 Move X0, [X0+824]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1306], W8
	031 Move X0, [X20]
	032 Move X20, [X19+896]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {232}
	045 Move X21, 0x685000
	046 Move X21, [X21+824]
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X21]
	053 Move X8, [X0+184]
	054 Move W8, [X8+300]
	055 Compare W8, 0
	056 JumpIfNotEqual {64}
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X31
	062 Call ShaderUtilities.GetShaderPropertyIDs
	063 Move X0, [X21]
	064 Move W8, 1
	065 Move V0, [X19+832]
	066 Move V1, [X19+840]
	067 Move [X19+1864], W8
	068 Move W8, [X0+224]
	069 Move X20, [X19+272]
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 NotImplemented "Instruction FCSEL not yet implemented."
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Compare X20, 0
	076 JumpIfEqual {246}
	077 Move X8, [X21]
	078 Move X0, X20
	079 Move X2, X31
	080 Move X8, [X8+184]
	081 Move W1, [X8+160]
	082 Call Material.GetFloat, X0, X1
	083 Move V1, [X19+836]
	084 Move V2, [X19+844]
	085 Move X0, [X19+272]
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction FCSEL not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 Compare X0, 0
	091 JumpIfEqual {246}
	092 Move X8, [X21]
	093 Move X2, X31
	094 Move X8, [X8+184]
	095 Move W1, [X8+164]
	096 Call Material.GetFloat, X0, X1
	097 Move X0, [X19+896]
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 NotImplemented "Instruction FCSEL not yet implemented."
	100 Compare X0, 0
	101 JumpIfEqual {246}
	102 Move X1, X31
	103 Call RectTransform.get_rect, X0
	104 Move X0, [X19+896]
	105 Compare X0, 0
	106 JumpIfEqual {246}
	107 Move V12, [X19+832]
	108 Move V10, [X19+840]
	109 Move X1, X31
	110 Move V8, V2
	111 Call RectTransform.get_rect, X0
	112 Move X0, [X19+896]
	113 Compare X0, 0
	114 JumpIfEqual {246}
	115 Move V1, [X19+836]
	116 Move V0, [X19+844]
	117 Move X1, X31
	118 Move V11, V3
	119 Move [X31+40], S0
	120 Move [X31+48], S1
	121 Call Transform.get_localPosition, X0
	122 Move X0, [X19+896]
	123 Compare X0, 0
	124 JumpIfEqual {246}
	125 Move X1, X31
	126 Move V14, V0
	127 Move V15, V1
	128 Call RectTransform.get_pivot, X0
	129 Move X0, [X19+896]
	130 Move [X31+36], S0
	131 Compare X0, 0
	132 JumpIfEqual {246}
	133 Move X1, X31
	134 Call RectTransform.get_rect, X0
	135 Move X0, [X19+896]
	136 Move [X31+32], S2
	137 Compare X0, 0
	138 JumpIfEqual {246}
	139 Move [X31+16], S11
	140 Move [X31+24], S10
	141 Move V10, [X19+832]
	142 Move V11, [X19+840]
	143 Move X1, X31
	144 Move [X31+8], S15
	145 Move [X31+16], S14
	146 Move [X31+24], S9
	147 Move [X31+32], S8
	148 Call RectTransform.get_pivot, X0
	149 Move X0, [X19+896]
	150 Compare X0, 0
	151 JumpIfEqual {246}
	152 Move X1, X31
	153 Move V14, V1
	154 Call RectTransform.get_rect, X0
	155 Move X0, [X21]
	156 Move V8, [X19+836]
	157 Move V9, [X19+844]
	158 Move X19, [X19+272]
	159 Move W8, [X0+224]
	160 Move V15, V3
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Compare X19, 0
	165 JumpIfEqual {246}
	166 Move S18, [X31+20]
	167 Move S22, [X31+24]
	168 Move S0, W31
	169 NotImplemented "Instruction FMAXNM not yet implemented."
	170 NotImplemented "Instruction FMAXNM not yet implemented."
	171 NotImplemented "Instruction FMAXNM not yet implemented."
	172 NotImplemented "Instruction FMAXNM not yet implemented."
	173 Move V22, [X31+28]
	174 Move S19, [X31+40]
	175 Move S17, [X31+44]
	176 Move S1, W31
	177 Move S2, W31
	178 Move X8, [X21]
	179 Subtract S16, S22, S16
	180 Move V22, [X31+16]
	181 NotImplemented "Instruction FMAXNM not yet implemented."
	182 NotImplemented "Instruction FMAXNM not yet implemented."
	183 NotImplemented "Instruction FMAXNM not yet implemented."
	184 NotImplemented "Instruction FMAXNM not yet implemented."
	185 Move V19, [X31+36]
	186 Subtract S2, S4, S2
	187 Move V4, [X31+32]
	188 Move S3, W31
	189 Move S5, 0.5
	190 NotImplemented "Instruction FMAXNM not yet implemented."
	191 NotImplemented "Instruction FMAXNM not yet implemented."
	192 Subtract S17, S22, S17
	193 Move X8, [X8+184]
	194 Move S7, 0.5
	195 Subtract S19, S5, S19
	196 Subtract S20, S5, S14
	197 Subtract S3, S3, S6
	198 Subtract S16, S16, S18
	199 Subtract S1, S17, S1
	200 Multiply S4, S19, S4
	201 Multiply S6, S20, S15
	202 Multiply S2, S2, S5
	203 Multiply S3, S3, S5
	204 Multiply S5, S16, S7
	205 Multiply S1, S1, S7
	206 Add S4, S4, S2
	207 Add S6, S6, S3
	208 Add S2, S0, S5
	209 Add S3, S21, S1
	210 Move S1, [X31+8]
	211 Move S0, [X31+12]
	212 Move W1, [X8+156]
	213 Move X0, X19
	214 Move X20, [X31+128]
	215 Move X19, [X31+136]
	216 Move X30, [X31+112]
	217 Move X21, [X31+120]
	218 Move D9, [X31+96]
	219 Move D8, [X31+104]
	220 Move D11, [X31+80]
	221 Move D10, [X31+88]
	222 Move D13, [X31+64]
	223 Move D12, [X31+72]
	224 Move D15, [X31+48]
	225 Move D14, [X31+56]
	226 Add S0, S0, S4
	227 Add S1, S1, S6
	228 Move X2, X31
	229 Add X31, X31, 144
	230 Call Material.SetVector, X0, X1, X2
	231 Return 
	232 Move X20, [X31+128]
	233 Move X19, [X31+136]
	234 Move X30, [X31+112]
	235 Move X21, [X31+120]
	236 Move D9, [X31+96]
	237 Move D8, [X31+104]
	238 Move D11, [X31+80]
	239 Move D10, [X31+88]
	240 Move D13, [X31+64]
	241 Move D12, [X31+72]
	242 Move D15, [X31+48]
	243 Move D14, [X31+56]
	244 Add X31, X31, 144
	245 Return 
	246 Call 0x1C17F20

Method: UnityEngine.Material GetMaterial(UnityEngine.Material mat)

Disassembly:
	0x03AD6BE0 LDR W9, [X8 + 0xE0]
	0x03AD6BE4 CBNZ W9, 0x3AD6BF0
	0x03AD6BE8 MOV X0, X8
	0x03AD6BEC BL 0x1C16DFC
	0x03AD6BF0 MOV X0, X20
	0x03AD6BF4 MOV X1, X31
	0x03AD6BF8 MOV X2, X31
	0x03AD6BFC BL 0x3C354F8
	0x03AD6C00 TBZ X0, 0x0, 0x3AD6C34
	0x03AD6C04 LDR X0, [X22]
	0x03AD6C08 LDR W8, [X0 + 0xE0]
	0x03AD6C0C CBNZ W8, 0x3AD6C14
	0x03AD6C10 BL 0x1C16DFC
	0x03AD6C14 CBZ X20, 0x3AD6C40
	0x03AD6C18 LDR X8, [X22]
	0x03AD6C1C FMOV S0, W31
	0x03AD6C20 MOV X0, X20
	0x03AD6C24 MOV X2, X31
	0x03AD6C28 LDR X8, [X8 + 0xB8]
	0x03AD6C2C LDR X1, [X8 + 0x120]
	0x03AD6C30 BL 0x3C15C58
	0x03AD6C34 LDR X8, [X19 + 0x708]
	0x03AD6C38 ADD X23, X23, 0x1
	0x03AD6C3C CBNZ X8, 0x3AD6B6C
	0x03AD6C40 BL 0x1C16F20
	0x03AD6C44 LDP X20, X19, [X31 + 0x30]
	0x03AD6C48 LDP X22, X21, [X31 + 0x20]
	0x03AD6C4C LDP X24, X23, [X31 + 0x10]
	0x03AD6C50 LDR X30, [X31], #0x40
	0x03AD6C54 RET
	0x03AD6C58 BL 0x1C16F28
	0x03AD6C5C STP X30, X21, [X31 - 0x20]!
	0x03AD6C60 STP X20, X19, [X31 + 0x10]
	0x03AD6C64 ADRP X21, 0x90C000
	0x03AD6C68 ADRP X20, 0x682000
	0x03AD6C6C LDRB W8, [X21 + 0x524]
	0x03AD6C70 LDR X20, [X20 + 0x338]
	0x03AD6C74 MOV X19, X0
	0x03AD6C78 TBNZ X8, 0x0, 0x3AD6C90
	0x03AD6C7C ADRP X0, 0x682000
	0x03AD6C80 LDR X0, [X0 + 0x338]
	0x03AD6C84 BL 0x1C16CF4
	0x03AD6C88 MOVZ W8, 0x1
	0x03AD6C8C STRB W8, [X21 + 0x524]
	0x03AD6C90 LDR X0, [X20]
	0x03AD6C94 LDRB W21, [X19 + 0x305]
	0x03AD6C98 LDR X19, [X19 + 0x110]
	0x03AD6C9C LDR W8, [X0 + 0xE0]
	0x03AD6CA0 CBNZ W8, 0x3AD6CAC
	0x03AD6CA4 BL 0x1C16DFC
	0x03AD6CA8 LDR X0, [X20]
	0x03AD6CAC CBZ X19, 0x3AD6CDC
	0x03AD6CB0 LDR X8, [X0 + 0xB8]
	0x03AD6CB4 MOV X0, X19
	0x03AD6CB8 LDP X20, X19, [X31 + 0x10]
	0x03AD6CBC CMP W21, 0x0
	0x03AD6CC0 LDR W1, [X8 + 0x60]
	0x03AD6CC4 FMOV S0, W31
	0x03AD6CC8 FMOV S1, 0.875
	0x03AD6CCC FCSEL S0, S1, S0, EQ
	0x03AD6CD0 MOV X2, X31
	0x03AD6CD4 LDP X30, X21, [X31], #0x20
	0x03AD6CD8 B 0x3C15CD8
	0x03AD6CDC BL 0x1C16F20
	0x03AD6CE0 STP X30, X21, [X31 - 0x20]!
	0x03AD6CE4 STP X20, X19, [X31 + 0x10]
	0x03AD6CE8 ADRP X21, 0x90C000
	0x03AD6CEC LDRB W8, [X21 + 0x525]
	0x03AD6CF0 MOV W20, W1
	0x03AD6CF4 MOV X19, X0
	0x03AD6CF8 TBNZ X8, 0x0, 0x3AD6D10
	0x03AD6CFC ADRP X0, 0x682000
	0x03AD6D00 LDR X0, [X0 + 0x348]
	0x03AD6D04 BL 0x1C16CF4
	0x03AD6D08 MOVZ W8, 0x1
	0x03AD6D0C STRB W8, [X21 + 0x525]
	0x03AD6D10 LDR X8, [X19 + 0x368]
	0x03AD6D14 CBZ X8, 0x3AD6D84
	0x03AD6D18 LDR X21, [X8 + 0x60]
	0x03AD6D1C CBZ X21, 0x3AD6D84
	0x03AD6D20 ADRP X8, 0x682000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x90D000
	007 Move X21, 0x683000
	008 Move W8, [X22+1307]
	009 Move X21, [X21+824]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x61E000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x683000
	020 Move X0, [X0+824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1307], W8
	024 Move X0, [X21]
	025 Move X21, 0x61E000
	026 Move W8, [X0+224]
	027 Move X21, [X21+1432]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call ShaderUtilities.GetShaderPropertyIDs
	033 Move X0, [X21]
	034 Move X21, [X19+304]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X21
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {60}
	047 Move X0, [X19+304]
	048 Compare X0, 0
	049 JumpIfEqual {93}
	050 Move X1, X31
	051 Call Object.GetInstanceID, X0
	052 Compare X20, 0
	053 JumpIfEqual {93}
	054 Move W21, W0
	055 Move X0, X20
	056 Move X1, X31
	057 Call Object.GetInstanceID, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X19+304]
	060 Move X8, [X19]
	061 Move X0, X19
	062 Move X1, X20
	063 Move X9, [X8+1848]
	064 Move X2, [X8+1856]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move [X19+304], X0
	067 Move X8, [X19]
	068 Move [X19+272], X0
	069 Move X0, X19
	070 Move X9, [X8+1960]
	071 Move X1, [X8+1968]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X19]
	074 Move W9, 1
	075 Move [X19+1560], S0
	076 Move [X19+161], W9
	077 Move X9, [X8+760]
	078 Move X1, [X8+768]
	079 Move X0, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X8, [X19]
	082 Move X0, X19
	083 Move X9, [X8+776]
	084 Move X1, [X8+784]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X0, [X19+272]
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return X0
	093 Call 0x1C17F20

Method: UnityEngine.Material[] GetMaterials(UnityEngine.Material[] mats)

Disassembly:
	0x03AD6D24 LDR X8, [X8 + 0x348]
	0x03AD6D28 LDR X0, [X8]
	0x03AD6D2C LDR W8, [X0 + 0xE0]
	0x03AD6D30 CBNZ W8, 0x3AD6D38
	0x03AD6D34 BL 0x1C16DFC
	0x03AD6D38 LDR W8, [X21 + 0x18]
	0x03AD6D3C CBZ W8, 0x3AD6D88
	0x03AD6D40 ADD X0, X21, 0x20
	0x03AD6D44 MOV W1, W20
	0x03AD6D48 MOV X2, X31
	0x03AD6D4C BL 0x3B11BD0
	0x03AD6D50 LDR X8, [X19 + 0x368]
	0x03AD6D54 CBZ X8, 0x3AD6D84
	0x03AD6D58 LDR X8, [X8 + 0x60]
	0x03AD6D5C CBZ X8, 0x3AD6D84
	0x03AD6D60 LDR W9, [X8 + 0x18]
	0x03AD6D64 CBZ W9, 0x3AD6D88
	0x03AD6D68 LDR X0, [X19 + 0x720]
	0x03AD6D6C CBZ X0, 0x3AD6D84
	0x03AD6D70 LDR X1, [X8 + 0x20]
	0x03AD6D74 LDP X20, X19, [X31 + 0x10]
	0x03AD6D78 MOV X2, X31
	0x03AD6D7C LDP X30, X21, [X31], #0x20
	0x03AD6D80 B 0x3E22AB0
	0x03AD6D84 BL 0x1C16F20
	0x03AD6D88 BL 0x1C16F28
	0x03AD6D8C STR D10, [X31 - 0x80]!
	0x03AD6D90 STP D9, D8, [X31 + 0x10]
	0x03AD6D94 STP X29, X30, [X31 + 0x20]
	0x03AD6D98 STP X28, X27, [X31 + 0x30]
	0x03AD6D9C STP X26, X25, [X31 + 0x40]
	0x03AD6DA0 STP X24, X23, [X31 + 0x50]
	0x03AD6DA4 STP X22, X21, [X31 + 0x60]
	0x03AD6DA8 STP X20, X19, [X31 + 0x70]
	0x03AD6DAC SUB X31, X31, 0x1A0
	0x03AD6DB0 ADRP X21, 0x90C000
	0x03AD6DB4 LDRB W8, [X21 + 0x526]
	0x03AD6DB8 MOV X20, X1
	0x03AD6DBC MOV X19, X0
	0x03AD6DC0 TBNZ X8, 0x0, 0x3AD6F1C
	0x03AD6DC4 ADRP X0, 0x61F000
	0x03AD6DC8 LDR X0, [X0 + 0x170]
	0x03AD6DCC BL 0x1C16CF4
	0x03AD6DD0 ADRP X0, 0x61D000
	0x03AD6DD4 LDR X0, [X0 + 0xA28]
	0x03AD6DD8 BL 0x1C16CF4
	0x03AD6DDC ADRP X0, 0x647000
	0x03AD6DE0 LDR X0, [X0 + 0x8D0]
	0x03AD6DE4 BL 0x1C16CF4
	0x03AD6DE8 ADRP X0, 0x678000
	0x03AD6DEC LDR X0, [X0 + 0xD78]
	0x03AD6DF0 BL 0x1C16CF4
	0x03AD6DF4 ADRP X0, 0x61D000
	0x03AD6DF8 LDR X0, [X0 + 0x758]
	0x03AD6DFC BL 0x1C16CF4
	0x03AD6E00 ADRP X0, 0x682000
	0x03AD6E04 LDR X0, [X0 + 0x610]
	0x03AD6E08 BL 0x1C16CF4
	0x03AD6E0C ADRP X0, 0x682000
	0x03AD6E10 LDR X0, [X0 + 0x330]
	0x03AD6E14 BL 0x1C16CF4
	0x03AD6E18 ADRP X0, 0x621000
	0x03AD6E1C LDR X0, [X0 + 0xCA0]
	0x03AD6E20 BL 0x1C16CF4
	0x03AD6E24 ADRP X0, 0x61D000
	0x03AD6E28 LDR X0, [X0 + 0x9D0]
	0x03AD6E2C BL 0x1C16CF4
	0x03AD6E30 ADRP X0, 0x61D000
	0x03AD6E34 LDR X0, [X0 + 0x598]
	0x03AD6E38 BL 0x1C16CF4
	0x03AD6E3C ADRP X0, 0x61F000
	0x03AD6E40 LDR X0, [X0 + 0x278]
	0x03AD6E44 BL 0x1C16CF4
	0x03AD6E48 ADRP X0, 0x682000
	0x03AD6E4C LDR X0, [X0 + 0x618]
	0x03AD6E50 BL 0x1C16CF4
	0x03AD6E54 ADRP X0, 0x682000
	0x03AD6E58 LDR X0, [X0 + 0x578]
	0x03AD6E5C BL 0x1C16CF4
	0x03AD6E60 ADRP X0, 0x682000
	0x03AD6E64 LDR X0, [X0 + 0x620]
	0x03AD6E68 BL 0x1C16CF4
	0x03AD6E6C ADRP X0, 0x682000
	0x03AD6E70 LDR X0, [X0 + 0x348]
	0x03AD6E74 BL 0x1C16CF4
	0x03AD6E78 ADRP X0, 0x682000
	0x03AD6E7C LDR X0, [X0 + 0x628]
	0x03AD6E80 BL 0x1C16CF4
	0x03AD6E84 ADRP X0, 0x682000
	0x03AD6E88 LDR X0, [X0 + 0x630]
	0x03AD6E8C BL 0x1C16CF4
	0x03AD6E90 ADRP X0, 0x682000
	0x03AD6E94 LDR X0, [X0 + 0x638]
	0x03AD6E98 BL 0x1C16CF4
	0x03AD6E9C ADRP X0, 0x682000
	0x03AD6EA0 LDR X0, [X0 + 0x790]
	0x03AD6EA4 BL 0x1C16CF4
	0x03AD6EA8 ADRP X0, 0x682000
	0x03AD6EAC LDR X0, [X0 + 0x368]
	0x03AD6EB0 BL 0x1C16CF4
	0x03AD6EB4 ADRP X0, 0x682000
	0x03AD6EB8 LDR X0, [X0 + 0x3B0]
	0x03AD6EBC BL 0x1C16CF4
	0x03AD6EC0 ADRP X0, 0x682000
	0x03AD6EC4 LDR X0, [X0 + 0x3C8]
	0x03AD6EC8 BL 0x1C16CF4
	0x03AD6ECC ADRP X0, 0x682000
	0x03AD6ED0 LDR X0, [X0 + 0x3E8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x90D000
	009 Move W8, [X20+1308]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x625000
	016 Move X0, [X0+1952]
	017 Call 0x1C17CF4
	018 Move X0, 0x683000
	019 Move X0, [X0+1544]
	020 Call 0x1C17CF4
	021 Move X0, 0x683000
	022 Move X0, [X0+872]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1308], W8
	026 Move X8, [X19+872]
	027 Compare X8, 0
	028 JumpIfEqual {119}
	029 Move X9, [X19+312]
	030 Move W20, [X8+52]
	031 Add X21, X19, 312
	032 Compare X9, 0
	033 JumpIfEqual {50}
	034 Move W8, [X9+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0x683000
	037 Move X8, [X8+872]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, 0x683000
	044 Move X8, [X8+1544]
	045 Move X0, X21
	046 Move W1, W20
	047 Move W2, W31
	048 Move X3, [X8]
	049 Call 0x229A1D0, X0, X1, X2
	050 Move X8, 0x625000
	051 Move X8, [X8+1952]
	052 Move W1, W20
	053 Move X0, [X8]
	054 Call 0x1C17D6C
	055 Move [X21], X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X23, X31
	058 Move X24, [X21]
	059 Compare X23, 0
	060 JumpIfEqual {89}
	061 Move X8, [X19+1800]
	062 Compare X8, 0
	063 JumpIfEqual {119}
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, X23
	067 Move X0, [X8+32]
	068 Compare X0, 0
	069 JumpIfEqual {119}
	070 Move X8, [X0]
	071 Move X9, [X8+824]
	072 Move X1, [X8+832]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X24, 0
	075 JumpIfEqual {119}
	076 Move X22, X0
	077 Compare X0, 0
	078 JumpIfEqual {85}
	079 Move X8, [X24]
	080 Move X0, X22
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {121}
	085 Move W8, [X24+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X8, X24, X23
	088 Move [X8+32], X22
	089 Move X0, X19
	090 Move X1, X31
	091 Call TMP_Text.get_fontMaterial, X0
	092 Compare X24, 0
	093 JumpIfEqual {119}
	094 Move X22, X0
	095 Compare X0, 0
	096 JumpIfEqual {103}
	097 Move X8, [X24]
	098 Move X0, X22
	099 Move X1, [X8+64]
	100 Call 0x1C17E00
	101 Compare X0, 0
	102 JumpIfEqual {121}
	103 Move W8, [X24+24]
	104 Compare W8, 0
	105 JumpIfEqual {120}
	106 Move [X24+32], X22
	107 Add X23, X23, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, [X19+312]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X24, [X31+16]
	113 Move X23, [X31+24]
	114 Move [X19+296], X0
	115 Move X20, [X31+48]
	116 Move X19, [X31+56]
	117 Move X30, [X31+64]
	118 Return X0
	119 Call 0x1C17F20
	120 Call 0x1C17F28
	121 Call 0x1C17F44
	122 Move X1, X31
	123 Call 0x1C17DEC

Method: System.Void SetSharedMaterial(UnityEngine.Material mat)

Disassembly:
	0x03AD6ED4 BL 0x1C16CF4
	0x03AD6ED8 ADRP X0, 0x625000
	0x03AD6EDC LDR X0, [X0 + 0x720]
	0x03AD6EE0 BL 0x1C16CF4
	0x03AD6EE4 ADRP X0, 0x682000
	0x03AD6EE8 LDR X0, [X0 + 0x648]
	0x03AD6EEC BL 0x1C16CF4
	0x03AD6EF0 ADRP X0, 0x682000
	0x03AD6EF4 LDR X0, [X0 + 0x650]
	0x03AD6EF8 BL 0x1C16CF4
	0x03AD6EFC ADRP X0, 0x682000
	0x03AD6F00 LDR X0, [X0 + 0x658]
	0x03AD6F04 BL 0x1C16CF4
	0x03AD6F08 ADRP X0, 0x682000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move [X0+272], X1
	005 Move X19, X0
	006 Move X9, [X8+1960]
	007 Move X1, [X8+1968]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19]
	010 Move [X19+1560], S0
	011 Move X0, X19
	012 Move X2, [X8+776]
	013 Move X1, [X8+784]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X2

Method: UnityEngine.Material[] GetSharedMaterials()

Disassembly:
	0x03AD6F0C LDR X0, [X0 + 0x660]
	0x03AD6F10 BL 0x1C16CF4
	0x03AD6F14 MOVZ W8, 0x1
	0x03AD6F18 STRB W8, [X21 + 0x526]
	0x03AD6F1C ADRP X21, 0x682000
	0x03AD6F20 ADRP X27, 0x682000
	0x03AD6F24 LDR X21, [X21 + 0x3C8]
	0x03AD6F28 LDR X27, [X27 + 0x3E8]
	0x03AD6F2C STRB W31, [X31 + 0x1AC]
	0x03AD6F30 STR W31, [X31 + 0x1A8]
	0x03AD6F34 LDR W8, [X19 + 0x258]
	0x03AD6F38 ADD X0, X19, 0x260
	0x03AD6F3C MOV X1, X31
	0x03AD6F40 STR W31, [X19 + 0x490]
	0x03AD6F44 STRB W31, [X19 + 0x26A]
	0x03AD6F48 STRH W31, [X19 + 0x430]
	0x03AD6F4C STR W8, [X19 + 0x25C]
	0x03AD6F50 BL 0x3B1CF2C
	0x03AD6F54 LDRB W8, [X19 + 0x25C]
	0x03AD6F58 TBNZ X8, 0x0, 0x3AD6F64
	0x03AD6F5C LDR W1, [X19 + 0x210]
	0x03AD6F60 B 0x3AD6F68
	0x03AD6F64 MOVZ W1, 0x2BC
	0x03AD6F68 STR W1, [X19 + 0x214]
	0x03AD6F6C LDR X2, [X21]
	0x03AD6F70 ADRP X21, 0x682000
	0x03AD6F74 LDR X21, [X21 + 0x3B0]
	0x03AD6F78 ADD X0, X19, 0x218
	0x03AD6F7C BL 0x2672150
	0x03AD6F80 LDR X2, [X19 + 0xF8]
	0x03AD6F84 LDR X4, [X19 + 0x110]
	0x03AD6F88 STR W31, [X19 + 0x120]
	0x03AD6F8C STR X2, [X19 + 0x100]
	0x03AD6F90 STR X4, [X19 + 0x118]
	0x03AD6F94 LDR X0, [X27]
	0x03AD6F98 LDR W8, [X0 + 0xE0]
	0x03AD6F9C CBZ W8, 0x3AD6FA8
	0x03AD6FA0 MOV W1, W31
	0x03AD6FA4 B 0x3AD6FB8
	0x03AD6FA8 BL 0x1C16DFC
	0x03AD6FAC LDR W1, [X19 + 0x120]
	0x03AD6FB0 LDR X2, [X19 + 0x100]
	0x03AD6FB4 LDR X4, [X19 + 0x118]
	0x03AD6FB8 LDR V0, [X19 + 0x618]
	0x03AD6FBC MOVI V1.2D, 0x0
	0x03AD6FC0 ADD X0, X31, 0x160
	0x03AD6FC4 MOV X3, X31
	0x03AD6FC8 STR X31, [X31 + 0x190]
	0x03AD6FCC STP V1, V1, [X31 + 0x170]
	0x03AD6FD0 STR V1, [X31 + 0x16]
	0x03AD6FD4 BL 0x3ACB488
	0x03AD6FD8 LDR X8, [X27]
	0x03AD6FDC LDR X2, [X21]
	0x03AD6FE0 LDP V0, V1, [X31 + 0x160]
	0x03AD6FE4 LDR V2, [X31 + 0x18]
	0x03AD6FE8 LDR X8, [X8 + 0xB8]
	0x03AD6FEC LDR X9, [X31 + 0x190]
	0x03AD6FF0 ADD X1, X31, 0xD0
	0x03AD6FF4 STP V0, V1, [X31 + 0xD0]
	0x03AD6FF8 ADD X0, X8, 0x10
	0x03AD6FFC STR V2, [X31 + 0xF]
	0x03AD7000 STR X9, [X31 + 0x100]
	0x03AD7004 BL 0x2672734
	0x03AD7008 LDR X8, [X27]
	0x03AD700C LDR X8, [X8 + 0xB8]
	0x03AD7010 LDR X0, [X8 + 0x8]
	0x03AD7014 CBZ X0, 0x3AD8938
	0x03AD7018 ADRP X8, 0x646000
	0x03AD701C LDR X8, [X8 + 0x8D0]
	0x03AD7020 ADRP X24, 0x681000
	0x03AD7024 LDR X1, [X8]
	0x03AD7028 LDR X24, [X24 + 0x368]
	0x03AD702C BL 0x2A0A4C4
	0x03AD7030 LDR X8, [X27]
	0x03AD7034 LDR X0, [X19 + 0x118]
	0x03AD7038 LDR X1, [X19 + 0x100]
	0x03AD703C LDR X2, [X8 + 0xB8]
	0x03AD7040 LDR X3, [X2 + 0x8]
	0x03AD7044 BL 0x3ACB600
	0x03AD7048 LDR X21, [X19 + 0x368]
	0x03AD704C CBZ X21, 0x3AD7098
	0x03AD7050 LDR X8, [X21 + 0x38]!
	0x03AD7054 CBZ X8, 0x3AD8938
	0x03AD7058 LDR W22, [X19 + 0x480]
	0x03AD705C LDR W8, [X8 + 0x18]
	0x03AD7060 CMP W22, W8
	0x03AD7064 B.LE 0x3AD70B8
	0x03AD7068 LDR X0, [X24]
	0x03AD706C LDR W8, [X0 + 0xE0]
	0x03AD7070 CBNZ W8, 0x3AD7078
	0x03AD7074 BL 0x1C16DFC
	0x03AD7078 ADRP X8, 0x681000
	0x03AD707C LDR X8, [X8 + 0x630]
	0x03AD7080 MOV X0, X21
	0x03AD7084 MOV W1, W22
	0x03AD7088 MOV W2, W31
	0x03AD708C LDR X3, [X8]
	0x03AD7090 BL 0x2299270
	0x03AD7094 B 0x3AD70B8
	0x03AD7098 LDR X0, [X24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x90D000
	009 Move W8, [X20+1309]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x625000
	016 Move X0, [X0+1952]
	017 Call 0x1C17CF4
	018 Move X0, 0x683000
	019 Move X0, [X0+1544]
	020 Call 0x1C17CF4
	021 Move X0, 0x683000
	022 Move X0, [X0+872]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1309], W8
	026 Move X8, [X19+872]
	027 Compare X8, 0
	028 JumpIfEqual {111}
	029 Move X9, [X19+296]
	030 Move W21, [X8+52]
	031 Add X20, X19, 296
	032 Compare X9, 0
	033 JumpIfEqual {50}
	034 Move W8, [X9+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, 0x683000
	037 Move X8, [X8+872]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X8, 0x683000
	044 Move X8, [X8+1544]
	045 Move X0, X20
	046 Move W1, W21
	047 Move W2, W31
	048 Move X3, [X8]
	049 Call 0x229A1D0, X0, X1, X2
	050 Move X8, 0x625000
	051 Move X8, [X8+1952]
	052 Move W1, W21
	053 Move X0, [X8]
	054 Call 0x1C17D6C
	055 Move [X20], X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X23, X31
	058 Move X24, [X20]
	059 Compare X23, 0
	060 JumpIfEqual {85}
	061 Move X8, [X19+1800]
	062 Compare X8, 0
	063 JumpIfEqual {111}
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, X23
	067 Move X8, [X8+32]
	068 Compare X8, 0
	069 JumpIfEqual {111}
	070 Compare X24, 0
	071 JumpIfEqual {111}
	072 Move X22, [X8+240]
	073 Compare X22, 0
	074 JumpIfEqual {81}
	075 Move X8, [X24]
	076 Move X0, X22
	077 Move X1, [X8+64]
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {113}
	081 Move W8, [X24+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X8, X24, X23
	084 Move [X8+32], X22
	085 Compare X24, 0
	086 JumpIfEqual {111}
	087 Move X22, [X19+272]
	088 Compare X22, 0
	089 JumpIfEqual {96}
	090 Move X8, [X24]
	091 Move X0, X22
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {113}
	096 Move W8, [X24+24]
	097 Compare W8, 0
	098 JumpIfEqual {112}
	099 Move [X24+32], X22
	100 Add X23, X23, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X20]
	103 Move X20, [X31+48]
	104 Move X19, [X31+56]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X30, [X31+64]
	110 Return X0
	111 Call 0x1C17F20
	112 Call 0x1C17F28
	113 Call 0x1C17F44
	114 Move X1, X31
	115 Call 0x1C17DEC

Method: System.Void SetSharedMaterials(UnityEngine.Material[] materials)

Disassembly:
	0x03AD709C LDR W21, [X19 + 0x480]
	0x03AD70A0 BL 0x1C16F10
	0x03AD70A4 MOV W1, W21
	0x03AD70A8 MOV X2, X31
	0x03AD70AC MOV X22, X0
	0x03AD70B0 BL 0x3B1BF2C
	0x03AD70B4 STR X22, [X19 + 0x368]
	0x03AD70B8 LDR W8, [X19 + 0x2E0]
	0x03AD70BC STR W31, [X19 + 0x644]
	0x03AD70C0 CMP W8, 0x1
	0x03AD70C4 B.NE 0x3AD7280
	0x03AD70C8 LDR X1, [X19 + 0x100]
	0x03AD70CC MOV X0, X19
	0x03AD70D0 MOV X2, X31
	0x03AD70D4 BL 0x3B0ACFC
	0x03AD70D8 LDR X8, [X19 + 0x650]
	0x03AD70DC CBZ X8, 0x3AD7164
	0x03AD70E0 LDR X0, [X19 + 0x658]
	0x03AD70E4 CBZ X0, 0x3AD8938
	0x03AD70E8 MOV X1, X31
	0x03AD70EC BL 0x3C385F8
	0x03AD70F0 LDR X8, [X19 + 0x100]
	0x03AD70F4 CBZ X8, 0x3AD8938
	0x03AD70F8 MOV W21, W0
	0x03AD70FC MOV X0, X8
	0x03AD7100 MOV X1, X31
	0x03AD7104 BL 0x3C385F8
	0x03AD7108 CMP W21, W0
	0x03AD710C B.EQ 0x3AD727C
	0x03AD7110 MOV X0, X31
	0x03AD7114 BL 0x3B13F90
	0x03AD7118 TBZ X0, 0x0, 0x3AD7150
	0x03AD711C LDR X0, [X19 + 0x118]
	0x03AD7120 CBZ X0, 0x3AD8938
	0x03AD7124 MOV X1, X31
	0x03AD7128 BL 0x3C385F8
	0x03AD712C LDR X8, [X19 + 0x658]
	0x03AD7130 CBZ X8, 0x3AD8938
	0x03AD7134 MOV W21, W0
	0x03AD7138 LDR X0, [X8 + 0x20]
	0x03AD713C CBZ X0, 0x3AD8938
	0x03AD7140 MOV X1, X31
	0x03AD7144 BL 0x3C385F8
	0x03AD7148 CMP W21, W0
	0x03AD714C B.NE 0x3AD71E4
	0x03AD7150 LDR X21, [X19 + 0x658]
	0x03AD7154 CBZ X21, 0x3AD8938
	0x03AD7158 LDR X22, [X21 + 0x20]
	0x03AD715C STR X22, [X19 + 0x660]
	0x03AD7160 B 0x3AD7228
	0x03AD7164 MOVZ W8, 0x3
	0x03AD7168 MOV X0, X31
	0x03AD716C STR W8, [X19 + 0x2E0]
	0x03AD7170 BL 0x3B13E38
	0x03AD7174 TBNZ X0, 0x0, 0x3AD727C
	0x03AD7178 LDR X0, [X19 + 0x100]
	0x03AD717C CBZ X0, 0x3AD8938
	0x03AD7180 MOV X1, X31
	0x03AD7184 BL 0x3C389D4
	0x03AD7188 ADRP X8, 0x681000
	0x03AD718C LDR X8, [X8 + 0x658]
	0x03AD7190 ADRP X9, 0x681000
	0x03AD7194 LDR X9, [X9 + 0x660]
	0x03AD7198 MOV X1, X0
	0x03AD719C LDR X8, [X8]
	0x03AD71A0 MOV X3, X31
	0x03AD71A4 LDR X2, [X9]
	0x03AD71A8 MOV X0, X8
	0x03AD71AC BL 0x32274B8
	0x03AD71B0 ADRP X8, 0x61C000
	0x03AD71B4 LDR X8, [X8 + 0xA28]
	0x03AD71B8 MOV X21, X0
	0x03AD71BC LDR X8, [X8]
	0x03AD71C0 LDR W9, [X8 + 0xE0]
	0x03AD71C4 CBNZ W9, 0x3AD71D0
	0x03AD71C8 MOV X0, X8
	0x03AD71CC BL 0x1C16DFC
	0x03AD71D0 MOV X0, X21
	0x03AD71D4 MOV X1, X19
	0x03AD71D8 MOV X2, X31
	0x03AD71DC BL 0x3C06B0C
	0x03AD71E0 B 0x3AD727C
	0x03AD71E4 LDR X8, [X19 + 0x658]
	0x03AD71E8 CBZ X8, 0x3AD8938
	0x03AD71EC ADRP X9, 0x681000
	0x03AD71F0 LDR X9, [X9 + 0x620]
	0x03AD71F4 LDR X21, [X19 + 0x118]
	0x03AD71F8 LDR X22, [X8 + 0x20]
	0x03AD71FC LDR X0, [X9]
	0x03AD7200 LDR W9, [X0 + 0xE0]
	0x03AD7204 CBNZ W9, 0x3AD720C
	0x03AD7208 BL 0x1C16DFC
	0x03AD720C MOV X0, X21
	0x03AD7210 MOV X1, X22
	0x03AD7214 MOV X2, X31
	0x03AD7218 BL 0x3B10470
	0x03AD721C LDR X21, [X19 + 0x658]
	0x03AD7220 MOV X22, X0
	0x03AD7224 STR X0, [X19 + 0x660]
	0x03AD7228 LDR X0, [X27]
	0x03AD722C LDR W8, [X0 + 0xE0]
	0x03AD7230 CBNZ W8, 0x3AD723C
	0x03AD7234 BL 0x1C16DFC
	0x03AD7238 LDR X0, [X27]
	0x03AD723C LDR X2, [X0 + 0xB8]
	0x03AD7240 MOV X0, X22
	0x03AD7244 MOV X1, X21
	0x03AD7248 LDR X3, [X2 + 0x8]
	0x03AD724C BL 0x3ACB600
	0x03AD7250 STR W0, [X19 + 0x668]
	0x03AD7254 LDR X8, [X27]
	0x03AD7258 LDR X8, [X8 + 0xB8]
	0x03AD725C LDR X8, [X8]
	0x03AD7260 CBZ X8, 0x3AD8938
	0x03AD7264 LDR W9, [X8 + 0x18]
	0x03AD7268 CMP W0, W9
	0x03AD726C B.CS 0x3AD89C8
	0x03AD7270 MOVZ W9, 0x38
	0x03AD7274 SMADDL X8, X0, X9, X8
	0x03AD7278 STR W31, [X8 + 0x54]
	0x03AD727C LDR W8, [X19 + 0x2E0]
	0x03AD7280 CMP W8, 0x6
	0x03AD7284 B.NE 0x3AD72C0
	0x03AD7288 ADRP X8, 0x61C000
	0x03AD728C LDR X8, [X8 + 0x598]
	0x03AD7290 LDR X21, [X19 + 0x2E8]
	0x03AD7294 LDR X0, [X8]
	0x03AD7298 LDR W8, [X0 + 0xE0]
	0x03AD729C CBNZ W8, 0x3AD72A4
	0x03AD72A0 BL 0x1C16DFC
	0x03AD72A4 MOV X0, X21
	0x03AD72A8 MOV X1, X31
	0x03AD72AC MOV X2, X31
	0x03AD72B0 BL 0x3C354F8
	0x03AD72B4 TBZ X0, 0x0, 0x3AD72C0
	0x03AD72B8 LDRB W8, [X19 + 0x3F5]
	0x03AD72BC CBZ W8, 0x3AD893C
	0x03AD72C0 CBZ X20, 0x3AD8938
	0x03AD72C4 LDR W8, [X20 + 0x18]
	0x03AD72C8 CMP W8, 0x1
	0x03AD72CC B.LT 0x3AD8098
	0x03AD72D0 MOV W28, W31
	0x03AD72D4 MOVZ W29, 0xC
	0x03AD72D8 STR W31, [X31 + 0x28]
	0x03AD72DC CMP W28, W8
	0x03AD72E0 B.CS 0x3AD89C8
	0x03AD72E4 MOV X26, X27
	0x03AD72E8 SMADDL X27, X28, X29, X20
	0x03AD72EC LDR W9, [X27 + 0x20]!
	0x03AD72F0 CBZ W9, 0x3AD80A0
	0x03AD72F4 LDR X21, [X19 + 0x368]
	0x03AD72F8 CBZ X21, 0x3AD8938
	0x03AD72FC LDR X9, [X21 + 0x38]!
	0x03AD7300 LDR W22, [X19 + 0x490]
	0x03AD7304 CBZ X9, 0x3AD7314
	0x03AD7308 LDR W9, [X9 + 0x18]
	0x03AD730C CMP W22, W9
	0x03AD7310 B.LT 0x3AD7344
	0x03AD7314 LDR X0, [X24]
	0x03AD7318 LDR W8, [X0 + 0xE0]
	0x03AD731C CBNZ W8, 0x3AD7324
	0x03AD7320 BL 0x1C16DFC
	0x03AD7324 ADRP X8, 0x681000
	0x03AD7328 LDR X8, [X8 + 0x630]
	0x03AD732C ADD W1, W22, 0x1
	0x03AD7330 MOVZ W2, 0x1
	0x03AD7334 MOV X0, X21
	0x03AD7338 LDR X3, [X8]
	0x03AD733C BL 0x2299270
	0x03AD7340 LDR W8, [X20 + 0x18]
	0x03AD7344 CMP W28, W8
	0x03AD7348 B.CS 0x3AD89C8
	0x03AD734C LDR W23, [X27]
	0x03AD7350 SXTW X29, W28
	0x03AD7354 CMP W23, 0x3C
	0x03AD7358 B.NE 0x3AD7510
	0x03AD735C LDRB W8, [X19 + 0x302]
	0x03AD7360 CBZ W8, 0x3AD7510
	0x03AD7364 LDR W21, [X19 + 0x120]
	0x03AD7368 ADD W2, W28, 0x1
	0x03AD736C ADD X3, X31, 0x1A8
	0x03AD7370 MOV X0, X19
	0x03AD7374 MOV X1, X20
	0x03AD7378 MOV X4, X31
	0x03AD737C BL 0x3AFFFE4
	0x03AD7380 TBZ X0, 0x0, 0x3AD7510
	0x03AD7384 LDR W8, [X20 + 0x18]
	0x03AD7388 CMP W28, W8
	0x03AD738C B.CS 0x3AD89C8
	0x03AD7390 MOVZ W8, 0xC
	0x03AD7394 MADD X8, X29, X8, X20
	0x03AD7398 LDRB W9, [X19 + 0x25C]
	0x03AD739C LDR W22, [X8 + 0x24]
	0x03AD73A0 MOVZ W29, 0xC
	0x03AD73A4 MOV X27, X26
	0x03AD73A8 TBZ X9, 0x0, 0x3AD73B4
	0x03AD73AC MOVZ W8, 0x1
	0x03AD73B0 STRB W8, [X19 + 0x26A]
	0x03AD73B4 LDR W8, [X19 + 0x644]
	0x03AD73B8 LDR W28, [X31 + 0x1A8]
	0x03AD73BC MOVZ W25, 0x178
	0x03AD73C0 CMP W8, 0x1
	0x03AD73C4 B.NE 0x3AD8084
	0x03AD73C8 LDR X0, [X27]
	0x03AD73CC LDR W8, [X0 + 0xE0]
	0x03AD73D0 CBNZ W8, 0x3AD73DC
	0x03AD73D4 BL 0x1C16DFC
	0x03AD73D8 LDR X0, [X27]
	0x03AD73DC LDR X8, [X0 + 0xB8]
	0x03AD73E0 LDR X8, [X8]
	0x03AD73E4 CBZ X8, 0x3AD8938
	0x03AD73E8 LDRSW X9, [X19 + 0x120]
	0x03AD73EC LDR W10, [X8 + 0x18]
	0x03AD73F0 CMP W9, W10
	0x03AD73F4 B.CS 0x3AD89C8
	0x03AD73F8 MOVZ W10, 0x38
	0x03AD73FC MADD X8, X9, X10, X8
	0x03AD7400 LDR W9, [X8 + 0x54]
	0x03AD7404 ADD W9, W9, 0x1
	0x03AD7408 STR W9, [X8 + 0x54]
	0x03AD740C LDR X8, [X19 + 0x368]
	0x03AD7410 CBZ X8, 0x3AD8938
	0x03AD7414 LDR X23, [X8 + 0x38]
	0x03AD7418 CBZ X23, 0x3AD8938
	0x03AD741C LDRSW X24, [X19 + 0x490]
	0x03AD7420 LDR W8, [X23 + 0x18]
	0x03AD7424 CMP W24, W8
	0x03AD7428 B.CS 0x3AD89C8
	0x03AD742C LDR W8, [X19 + 0x6A4]
	0x03AD7430 NOP
	0x03AD7434 MADD X9, X24, X25, X23
	0x03AD7438 SUB W10, W8, 0x2000
	0x03AD743C STRH W10, [X9 + 0x20]
	0x03AD7440 STR W8, [X9 + 0x48]
	0x03AD7444 LDR X8, [X19 + 0x100]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x90C000
	013 Move W8, [X21+1310]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x624000
	021 Move X0, [X0+1952]
	022 Call 0x1C17CF4
	023 Move X0, 0x61D000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x682000
	027 Move X0, [X0+824]
	028 Call 0x1C17CF4
	029 Move X0, 0x682000
	030 Move X0, [X0+1544]
	031 Call 0x1C17CF4
	032 Move X0, 0x682000
	033 Move X0, [X0+872]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1310], W8
	037 Move X8, [X20+872]
	038 Compare X8, 0
	039 JumpIfEqual {270}
	040 Move X9, [X20+296]
	041 Move W21, [X8+52]
	042 Add X22, X20, 296
	043 Compare X9, 0
	044 JumpIfEqual {61}
	045 Move W8, [X9+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, 0x682000
	048 Move X8, [X8+872]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X8, 0x682000
	055 Move X8, [X8+1544]
	056 Move X0, X22
	057 Move W1, W21
	058 Move W2, W31
	059 Move X3, [X8]
	060 Call 0x229A1D0, X0, X1, X2
	061 Move X8, 0x624000
	062 Move X8, [X8+1952]
	063 Move W1, W21
	064 Move X0, [X8]
	065 Call 0x1C17D6C
	066 Move [X22], X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Compare X19, 0
	069 JumpIfEqual {270}
	070 Move X25, 0x682000
	071 Move X26, 0x61D000
	072 Move X25, [X25+824]
	073 Move X26, [X26+1432]
	074 Move W8, W31
	075 Move W9, [X19+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X27, W8
	078 Add X24, X19, X27
	079 Add X24, X24, 32
	080 Move X23, [X24]
	081 Move X0, [X25]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Compare X23, 0
	087 JumpIfEqual {270}
	088 Move X8, [X25]
	089 Move X0, X23
	090 Move X2, X31
	091 Move X8, [X8+184]
	092 Move W1, [X8]
	093 Call Material.GetTexture, X0, X1
	094 Move X8, [X26]
	095 Move X23, X0
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move X0, X23
	102 Move X1, X31
	103 Move X2, X31
	104 Call Object.op_Equality, X0, X1
	105 Compare W27, 0
	106 JumpIfEqual {188}
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {256}
	111 Move W8, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X25]
	114 Move X23, [X24]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Compare X23, 0
	120 JumpIfEqual {270}
	121 Move X8, [X25]
	122 Move X0, X23
	123 Move X2, X31
	124 Move X8, [X8+184]
	125 Move W1, [X8]
	126 Call Material.GetTexture, X0, X1
	127 Compare X0, 0
	128 JumpIfEqual {270}
	129 Move X1, X31
	130 Call Object.GetInstanceID, X0
	131 Move X8, [X20+1800]
	132 Compare X8, 0
	133 JumpIfEqual {270}
	134 Move W9, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add X8, X8, X27
	137 Move X8, [X8+32]
	138 Compare X8, 0
	139 JumpIfEqual {270}
	140 Move W23, W0
	141 Move X0, [X8+240]
	142 Compare X0, 0
	143 JumpIfEqual {270}
	144 Move X8, [X25]
	145 Move X2, X31
	146 Move X8, [X8+184]
	147 Move W1, [X8]
	148 Call Material.GetTexture, X0, X1
	149 Compare X0, 0
	150 JumpIfEqual {270}
	151 Move X1, X31
	152 Call Object.GetInstanceID, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, [X20+1800]
	155 Compare X8, 0
	156 JumpIfEqual {270}
	157 Move W9, [X8+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X8, X8, X27
	160 Move X23, [X8+32]
	161 Compare X23, 0
	162 JumpIfEqual {270}
	163 Move W8, [X23+264]
	164 Compare W8, 0
	165 JumpIfEqual {256}
	166 Move W8, [X19+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X28, [X22]
	169 Compare X28, 0
	170 JumpIfEqual {270}
	171 Move X24, [X24]
	172 Compare X24, 0
	173 JumpIfEqual {180}
	174 Move X8, [X28]
	175 Move X0, X24
	176 Move X1, [X8+64]
	177 Call 0x1C17E00
	178 Compare X0, 0
	179 JumpIfEqual {272}
	180 Move W8, [X28+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Add X8, X28, X27
	183 Move X0, X23
	184 Move X1, X24
	185 Move X2, X31
	186 Move [X8+32], X24
	187 Call TMP_SubMeshUI.set_sharedMaterial, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {256}
	192 Move W8, [X19+24]
	193 Compare W8, 0
	194 JumpIfEqual {271}
	195 Move X0, [X25]
	196 Move X23, [X24]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Compare X23, 0
	202 JumpIfEqual {270}
	203 Move X8, [X25]
	204 Move X0, X23
	205 Move X2, X31
	206 Move X8, [X8+184]
	207 Move W1, [X8]
	208 Call Material.GetTexture, X0, X1
	209 Compare X0, 0
	210 JumpIfEqual {270}
	211 Move X1, X31
	212 Call Object.GetInstanceID, X0
	213 Move X8, [X20+272]
	214 Compare X8, 0
	215 JumpIfEqual {270}
	216 Move X9, [X25]
	217 Move W23, W0
	218 Move X0, X8
	219 Move X2, X31
	220 Move X9, [X9+184]
	221 Move W1, [X9]
	222 Call Material.GetTexture, X0, X1
	223 Compare X0, 0
	224 JumpIfEqual {270}
	225 Move X1, X31
	226 Call Object.GetInstanceID, X0
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W8, [X19+24]
	229 Compare W8, 0
	230 JumpIfEqual {271}
	231 Move X28, [X22]
	232 Compare X28, 0
	233 JumpIfEqual {270}
	234 Move X23, [X24]
	235 Compare X23, 0
	236 JumpIfEqual {243}
	237 Move X8, [X28]
	238 Move X0, X23
	239 Move X1, [X8+64]
	240 Call 0x1C17E00
	241 Compare X0, 0
	242 JumpIfEqual {272}
	243 Move W8, [X28+24]
	244 Compare W8, 0
	245 JumpIfEqual {271}
	246 Add X8, X28, X27
	247 Move [X8+32], X23
	248 Move X8, [X20]
	249 Move [X20+272], X23
	250 Move X0, X20
	251 Move X1, X23
	252 Move X9, [X8+1976]
	253 Move X2, [X8+1984]
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move [X20+1560], S0
	256 Add W8, W27, 1
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X20, [X31+80]
	259 Move X19, [X31+88]
	260 Move X22, [X31+64]
	261 Move X21, [X31+72]
	262 Move X24, [X31+48]
	263 Move X23, [X31+56]
	264 Move X26, [X31+32]
	265 Move X25, [X31+40]
	266 Move X28, [X31+16]
	267 Move X27, [X31+24]
	268 Move X30, [X31+96]
	269 Return 
	270 Call 0x1C17F20
	271 Call 0x1C17F28
	272 Call 0x1C17F44
	273 Move X1, X31
	274 Call 0x1C17DEC

Method: System.Void SetOutlineThickness(System.Single thickness)

Disassembly:
	0x03AD7448 STR X8, [X9 + 0x38]
	0x03AD744C LDR X0, [X19 + 0x698]
	0x03AD7450 STR X0, [X9 + 0x40]
	0x03AD7454 LDR W8, [X19 + 0x120]
	0x03AD7458 STR W8, [X9 + 0x58]
	0x03AD745C CBZ X0, 0x3AD8938
	0x03AD7460 MOV X1, X31
	0x03AD7464 BL 0x3B16BEC
	0x03AD7468 CBZ X0, 0x3AD8938
	0x03AD746C ADRP X8, 0x681000
	0x03AD7470 LDR W1, [X19 + 0x6A4]
	0x03AD7474 LDR X8, [X8 + 0x330]
	0x03AD7478 LDR X2, [X8]
	0x03AD747C BL 0x301BCCC
	0x03AD7480 LDR W8, [X23 + 0x18]
	0x03AD7484 CMP W24, W8
	0x03AD7488 B.CS 0x3AD89C8
	0x03AD748C MADD X8, X24, X25, X23
	0x03AD7490 STR X0, [X8 + 0x30]
	0x03AD7494 LDR X8, [X19 + 0x368]
	0x03AD7498 CBZ X8, 0x3AD8938
	0x03AD749C ADRP X24, 0x681000
	0x03AD74A0 LDR X9, [X8 + 0x38]
	0x03AD74A4 LDR X24, [X24 + 0x368]
	0x03AD74A8 CBZ X9, 0x3AD8938
	0x03AD74AC LDR W8, [X19 + 0x490]
	0x03AD74B0 LDR W10, [X9 + 0x18]
	0x03AD74B4 CMP W8, W10
	0x03AD74B8 B.CS 0x3AD89C8
	0x03AD74BC LDR W11, [X19 + 0x644]
	0x03AD74C0 SXTW X10, W8
	0x03AD74C4 MADD X12, X10, X25, X9
	0x03AD74C8 STR W22, [X12 + 0x24]
	0x03AD74CC STR W11, [X12 + 0x2C]
	0x03AD74D0 LDR W11, [X20 + 0x18]
	0x03AD74D4 CMP W28, W11
	0x03AD74D8 B.CS 0x3AD89C8
	0x03AD74DC MOV W11, W28
	0x03AD74E0 SXTW X11, W11
	0x03AD74E4 MADD X11, X11, X29, X20
	0x03AD74E8 LDR W11, [X11 + 0x24]
	0x03AD74EC NOP
	0x03AD74F0 MADD X9, X10, X25, X9
	0x03AD74F4 SUB W10, W11, W22
	0x03AD74F8 ADD W10, W10, 0x1
	0x03AD74FC STR W10, [X9 + 0x28]
	0x03AD7500 LDR W9, [X31 + 0x28]
	0x03AD7504 STR W31, [X19 + 0x644]
	0x03AD7508 STR W21, [X19 + 0x120]
	0x03AD750C B 0x3AD7D08
	0x03AD7510 STRB W31, [X31 + 0x1AC]
	0x03AD7514 LDR X10, [X19 + 0x100]
	0x03AD7518 LDR X11, [X19 + 0x118]
	0x03AD751C LDR W8, [X19 + 0x644]
	0x03AD7520 LDR W9, [X19 + 0x120]
	0x03AD7524 STP X11, X10, [X31 + 0x18]
	0x03AD7528 STR W9, [X31 + 0x2C]
	0x03AD752C CBNZ W8, 0x3AD75E0
	0x03AD7530 LDR W8, [X19 + 0x25C]
	0x03AD7534 TBNZ X8, 0x4, 0x3AD7540
	0x03AD7538 TBNZ X8, 0x3, 0x3AD7590
	0x03AD753C TBZ X8, 0x5, 0x3AD75E0
	0x03AD7540 ADRP X8, 0x61E000
	0x03AD7544 LDR X8, [X8 + 0x170]
	0x03AD7548 LDR X0, [X8]
	0x03AD754C LDR W8, [X0 + 0xE0]
	0x03AD7550 CBNZ W8, 0x3AD7558
	0x03AD7554 BL 0x1C16DFC
	0x03AD7558 MOV W0, W23
	0x03AD755C MOV X1, X31
	0x03AD7560 BL 0x331AA58
	0x03AD7564 TBZ X0, 0x0, 0x3AD75E0
	0x03AD7568 ADRP X8, 0x61E000
	0x03AD756C LDR X8, [X8 + 0x170]
	0x03AD7570 LDR X0, [X8]
	0x03AD7574 LDR W8, [X0 + 0xE0]
	0x03AD7578 CBNZ W8, 0x3AD7580
	0x03AD757C BL 0x1C16DFC
	0x03AD7580 MOV W0, W23
	0x03AD7584 MOV X1, X31
	0x03AD7588 BL 0x331ACB8
	0x03AD758C B 0x3AD75DC
	0x03AD7590 ADRP X8, 0x61E000
	0x03AD7594 LDR X8, [X8 + 0x170]
	0x03AD7598 LDR X0, [X8]
	0x03AD759C LDR W8, [X0 + 0xE0]
	0x03AD75A0 CBNZ W8, 0x3AD75A8
	0x03AD75A4 BL 0x1C16DFC
	0x03AD75A8 MOV W0, W23
	0x03AD75AC MOV X1, X31
	0x03AD75B0 BL 0x331A99C
	0x03AD75B4 TBZ X0, 0x0, 0x3AD75E0
	0x03AD75B8 ADRP X8, 0x61E000
	0x03AD75BC LDR X8, [X8 + 0x170]
	0x03AD75C0 LDR X0, [X8]
	0x03AD75C4 LDR W8, [X0 + 0xE0]
	0x03AD75C8 CBNZ W8, 0x3AD75D0
	0x03AD75CC BL 0x1C16DFC
	0x03AD75D0 MOV W0, W23
	0x03AD75D4 MOV X1, X31
	0x03AD75D8 BL 0x331AE30
	0x03AD75DC AND W23, W0, 0xFFFF
	0x03AD75E0 LDR X2, [X19 + 0x100]
	0x03AD75E4 LDR W3, [X19 + 0x25C]
	0x03AD75E8 LDR W4, [X19 + 0x214]
	0x03AD75EC ADD X5, X31, 0x1AC
	0x03AD75F0 MOV X0, X19
	0x03AD75F4 MOV W1, W23
	0x03AD75F8 MOV X6, X31
	0x03AD75FC BL 0x3B0B030
	0x03AD7600 CBZ X0, 0x3AD7618
	0x03AD7604 MOV X22, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x90C000
	008 Move X21, 0x61D000
	009 Move W8, [X20+1311]
	010 Move X21, [X21+1432]
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x61D000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x682000
	021 Move X0, [X0+824]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1311], W8
	025 Move X0, [X21]
	026 Move X20, [X19+304]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X22, 0x682000
	032 Move X22, [X22+824]
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {54}
	041 Move X0, [X19+272]
	042 Compare X0, 0
	043 JumpIfEqual {132}
	044 Move X1, X31
	045 Call Object.GetInstanceID, X0
	046 Move X8, [X19+304]
	047 Compare X8, 0
	048 JumpIfEqual {132}
	049 Move W20, W0
	050 Move X0, X8
	051 Move X1, X31
	052 Call Object.GetInstanceID, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X21]
	055 Move X20, [X19+304]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {100}
	068 Move X8, [X19]
	069 Move X1, [X19+272]
	070 Move X0, X19
	071 Move X9, [X8+1848]
	072 Move X2, [X8+1856]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X20, X0
	075 Move [X19+304], X0
	076 Move [X19+272], X0
	077 Move X20, [X19+304]
	078 Move [X19+272], X20
	079 Move X0, [X22]
	080 Move X21, [X19+1824]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Compare X20, 0
	086 JumpIfEqual {132}
	087 Move X8, [X22]
	088 Move X0, X20
	089 Move X2, X31
	090 Move X8, [X8+184]
	091 Move W1, [X8]
	092 Call Material.GetTexture, X0, X1
	093 Compare X21, 0
	094 JumpIfEqual {132}
	095 Move X2, X0
	096 Move X0, X21
	097 Move X1, X20
	098 Move X3, X31
	099 Call CanvasRenderer.SetMaterial, X0, X1, X2
	100 Move X0, [X22]
	101 Move X20, [X19+272]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Compare X20, 0
	107 JumpIfEqual {132}
	108 Move X8, [X22]
	109 Move S0, 1
	110 NotImplemented "Instruction FMIN not yet implemented."
	111 NotImplemented "Instruction FCMP not yet implemented."
	112 Move X8, [X8+184]
	113 Move S1, W31
	114 NotImplemented "Instruction FCSEL not yet implemented."
	115 Move X0, X20
	116 Move W1, [X8+60]
	117 Move X2, X31
	118 Call Material.SetFloat, X0, X1, V0
	119 Move X8, [X19]
	120 Move X0, X19
	121 Move X9, [X8+1960]
	122 Move X1, [X8+1968]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move [X19+1560], S0
	125 Move X20, [X31+32]
	126 Move X19, [X31+40]
	127 Move X22, [X31+16]
	128 Move X21, [X31+24]
	129 Move X30, [X31+8]
	130 Move V8, [X31+48]
	131 Return 
	132 Call 0x1C17F20

Method: System.Void SetFaceColor(UnityEngine.Color32 color)

Disassembly:
	0x03AD7608 MOV W21, W23
	0x03AD760C MOV X27, X26
	0x03AD7610 MOVZ W26, 0x178
	0x03AD7614 B 0x3AD7B0C
	0x03AD7618 BL 0x3B13DFC
	0x03AD761C LDR W8, [X20 + 0x18]
	0x03AD7620 CMP W28, W8
	0x03AD7624 B.CS 0x3AD89C8
	0x03AD7628 CBZ W0, 0x3AD763C
	0x03AD762C MOV X0, X31
	0x03AD7630 BL 0x3B13DFC
	0x03AD7634 MOV W21, W0
	0x03AD7638 B 0x3AD7640
	0x03AD763C MOVZ W21, 0x25A1
	0x03AD7640 STR W21, [X27]
	0x03AD7644 ADRP X8, 0x681000
	0x03AD7648 LDR X8, [X8 + 0x618]
	0x03AD764C LDR X24, [X19 + 0x100]
	0x03AD7650 LDR W22, [X19 + 0x25C]
	0x03AD7654 LDR W25, [X19 + 0x214]
	0x03AD7658 LDR X0, [X8]
	0x03AD765C LDR W8, [X0 + 0xE0]
	0x03AD7660 CBNZ W8, 0x3AD7668
	0x03AD7664 BL 0x1C16DFC
	0x03AD7668 ADD X5, X31, 0x1AC
	0x03AD766C MOVZ W2, 0x1
	0x03AD7670 MOV W0, W21
	0x03AD7674 MOV X1, X24
	0x03AD7678 MOV W3, W22
	0x03AD767C MOV W4, W25
	0x03AD7680 MOV X6, X31
	0x03AD7684 BL 0x3AEB240
	0x03AD7688 CBZ X0, 0x3AD77EC
	0x03AD768C MOV X22, X0
	0x03AD7690 MOV X0, X31
	0x03AD7694 BL 0x3B13E38
	0x03AD7698 TBZ X0, 0x0, 0x3AD76B4
	0x03AD769C ADRP X24, 0x681000
	0x03AD76A0 LDR X24, [X24 + 0x368]
	0x03AD76A4 MOV X27, X26
	0x03AD76A8 MOVZ W26, 0x178
	0x03AD76AC CBNZ X22, 0x3AD7B0C
	0x03AD76B0 B 0x3AD8938
	0x03AD76B4 ADRP X8, 0x61C000
	0x03AD76B8 LDR X8, [X8 + 0x9D0]
	0x03AD76BC MOVZ W1, 0x4
	0x03AD76C0 LDR X0, [X8]
	0x03AD76C4 BL 0x1C16D6C
	0x03AD76C8 ADRP X8, 0x61C000
	0x03AD76CC LDR X8, [X8 + 0x758]
	0x03AD76D0 CMP W23, 0x10000
	0x03AD76D4 MOV X24, X0
	0x03AD76D8 MOV X27, X26
	0x03AD76DC B.LT 0x3AD79C0
	0x03AD76E0 LDR X0, [X8]
	0x03AD76E4 ADD X1, X31, 0xD0
	0x03AD76E8 STR W23, [X31 + 0xD0]
	0x03AD76EC BL 0x1C16E04
	0x03AD76F0 MOVZ W26, 0x178
	0x03AD76F4 CBZ X24, 0x3AD8938
	0x03AD76F8 MOV X23, X0
	0x03AD76FC CBZ X0, 0x3AD7714
	0x03AD7700 LDR X8, [X24]
	0x03AD7704 MOV X0, X23
	0x03AD7708 LDR X1, [X8 + 0x40]
	0x03AD770C BL 0x1C16E00
	0x03AD7710 CBZ X0, 0x3AD89CC
	0x03AD7714 LDR W8, [X24 + 0x18]
	0x03AD7718 CBZ W8, 0x3AD89C8
	0x03AD771C STR X23, [X24 + 0x20]
	0x03AD7720 LDR X0, [X19 + 0xF8]
	0x03AD7724 CBZ X0, 0x3AD8938
	0x03AD7728 MOV X1, X31
	0x03AD772C BL 0x3C389D4
	0x03AD7730 MOV X23, X0
	0x03AD7734 CBZ X0, 0x3AD774C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x90C000
	007 Move X21, 0x61D000
	008 Move W8, [X22+1312]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x61D000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x682000
	020 Move X0, [X0+824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1312], W8
	024 Move X0, [X21]
	025 Move X21, [X20+304]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X22, 0x682000
	031 Move X22, [X22+824]
	032 Move X0, X21
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {47}
	040 Move X8, [X20]
	041 Move X1, [X20+272]
	042 Move X0, X20
	043 Move X9, [X8+1848]
	044 Move X2, [X8+1856]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move [X20+304], X0
	047 Move X0, [X20+304]
	048 Move X8, [X20]
	049 Move [X20+272], X0
	050 Move X0, X20
	051 Move X9, [X8+1960]
	052 Move X1, [X8+1968]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move [X20+1560], S0
	055 Move X0, [X22]
	056 Move X20, [X20+272]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Compare X20, 0
	062 JumpIfEqual {95}
	063 Move W9, 0x437F0000
	064 Move S4, W9
	065 Move X9, [X22]
	066 Move X8, X19
	067 ShiftRight X8, 24
	068 And X8, X8, 0x7FFFFFFF
	069 NotImplemented "Instruction UCVTF not yet implemented."
	070 Move W8, W19
	071 ShiftRight W8, 16
	072 And W8, W8, 0x7FFFFF
	073 NotImplemented "Instruction FDIV not yet implemented."
	074 NotImplemented "Instruction UCVTF not yet implemented."
	075 Move X8, [X9+184]
	076 Move W9, W19
	077 ShiftRight W9, 8
	078 And W9, W9, 0x7FFF
	079 Move X0, X20
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move W1, [X8+8]
	083 And W8, W19, 255
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 NotImplemented "Instruction FDIV not yet implemented."
	087 NotImplemented "Instruction UCVTF not yet implemented."
	088 NotImplemented "Instruction FDIV not yet implemented."
	089 NotImplemented "Instruction UCVTF not yet implemented."
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Move X2, X31
	092 Move X30, [X31+48]
	093 Call Material.SetColor, X0, X1, X2
	094 Return 
	095 Call 0x1C17F20

Method: System.Void SetOutlineColor(UnityEngine.Color32 color)

Disassembly:
	0x03AD7738 LDR X8, [X24]
	0x03AD773C MOV X0, X23
	0x03AD7740 LDR X1, [X8 + 0x40]
	0x03AD7744 BL 0x1C16E00
	0x03AD7748 CBZ X0, 0x3AD89CC
	0x03AD774C LDR W8, [X24 + 0x18]
	0x03AD7750 CMP W8, 0x1
	0x03AD7754 B.LS 0x3AD89C8
	0x03AD7758 STR X23, [X24 + 0x28]
	0x03AD775C CBZ X22, 0x3AD8938
	0x03AD7760 ADRP X9, 0x624000
	0x03AD7764 LDR W8, [X22 + 0x14]
	0x03AD7768 LDR X9, [X9 + 0x720]
	0x03AD776C ADD X1, X31, 0x160
	0x03AD7770 STR W8, [X31 + 0x160]
	0x03AD7774 LDR X0, [X9]
	0x03AD7778 BL 0x1C16E04
	0x03AD777C MOV X23, X0
	0x03AD7780 CBZ X0, 0x3AD7798
	0x03AD7784 LDR X8, [X24]
	0x03AD7788 MOV X0, X23
	0x03AD778C LDR X1, [X8 + 0x40]
	0x03AD7790 BL 0x1C16E00
	0x03AD7794 CBZ X0, 0x3AD89CC
	0x03AD7798 LDR W8, [X24 + 0x18]
	0x03AD779C CMP W8, 0x2
	0x03AD77A0 B.LS 0x3AD89C8
	0x03AD77A4 MOV X0, X19
	0x03AD77A8 MOV X1, X31
	0x03AD77AC STR X23, [X24 + 0x30]
	0x03AD77B0 BL 0x3C389D4
	0x03AD77B4 MOV X23, X0
	0x03AD77B8 CBZ X0, 0x3AD77D0
	0x03AD77BC LDR X8, [X24]
	0x03AD77C0 MOV X0, X23
	0x03AD77C4 LDR X1, [X8 + 0x40]
	0x03AD77C8 BL 0x1C16E00
	0x03AD77CC CBZ X0, 0x3AD89CC
	0x03AD77D0 LDR W8, [X24 + 0x18]
	0x03AD77D4 CMP W8, 0x3
	0x03AD77D8 B.LS 0x3AD89C8
	0x03AD77DC STR X23, [X24 + 0x38]
	0x03AD77E0 ADRP X8, 0x681000
	0x03AD77E4 LDR X8, [X8 + 0x648]
	0x03AD77E8 B 0x3AD7AC8
	0x03AD77EC BL 0x3B13F74
	0x03AD77F0 CBZ X0, 0x3AD786C
	0x03AD77F4 MOV X0, X31
	0x03AD77F8 BL 0x3B13F74
	0x03AD77FC CBZ X0, 0x3AD8938
	0x03AD7800 LDR W8, [X0 + 0x18]
	0x03AD7804 CMP W8, 0x1
	0x03AD7808 B.LT 0x3AD786C
	0x03AD780C LDR X8, [X19 + 0x100]
	0x03AD7810 MOV X0, X31
	0x03AD7814 STR X8, [X31 + 0x10]
	0x03AD7818 BL 0x3B13F74
	0x03AD781C ADRP X8, 0x681000
	0x03AD7820 LDR X8, [X8 + 0x618]
	0x03AD7824 LDR W24, [X19 + 0x25C]
	0x03AD7828 LDR W25, [X19 + 0x214]
	0x03AD782C MOV X22, X0
	0x03AD7830 LDR X8, [X8]
	0x03AD7834 LDR W9, [X8 + 0xE0]
	0x03AD7838 CBNZ W9, 0x3AD7844
	0x03AD783C MOV X0, X8
	0x03AD7840 BL 0x1C16DFC
	0x03AD7844 LDR X1, [X31 + 0x10]
	0x03AD7848 ADD X6, X31, 0x1AC
	0x03AD784C MOVZ W3, 0x1
	0x03AD7850 MOV W0, W21
	0x03AD7854 MOV X2, X22
	0x03AD7858 MOV W4, W24
	0x03AD785C MOV W5, W25
	0x03AD7860 MOV X7, X31
	0x03AD7864 BL 0x3AEB758

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x90C000
	007 Move X21, 0x61D000
	008 Move W8, [X22+1313]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x61D000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x682000
	020 Move X0, [X0+824]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1313], W8
	024 Move X0, [X21]
	025 Move X21, [X20+304]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X22, 0x682000
	031 Move X22, [X22+824]
	032 Move X0, X21
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {47}
	040 Move X8, [X20]
	041 Move X1, [X20+272]
	042 Move X0, X20
	043 Move X9, [X8+1848]
	044 Move X2, [X8+1856]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move [X20+304], X0
	047 Move X0, [X20+304]
	048 Move X8, [X20]
	049 Move [X20+272], X0
	050 Move X0, X20
	051 Move X9, [X8+1960]
	052 Move X1, [X8+1968]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move [X20+1560], S0
	055 Move X0, [X22]
	056 Move X20, [X20+272]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Compare X20, 0
	062 JumpIfEqual {95}
	063 Move W9, 0x437F0000
	064 Move S4, W9
	065 Move X9, [X22]
	066 Move X8, X19
	067 ShiftRight X8, 24
	068 And X8, X8, 0x7FFFFFFF
	069 NotImplemented "Instruction UCVTF not yet implemented."
	070 Move W8, W19
	071 ShiftRight W8, 16
	072 And W8, W8, 0x7FFFFF
	073 NotImplemented "Instruction FDIV not yet implemented."
	074 NotImplemented "Instruction UCVTF not yet implemented."
	075 Move X8, [X9+184]
	076 Move W9, W19
	077 ShiftRight W9, 8
	078 And W9, W9, 0x7FFF
	079 Move X0, X20
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move W1, [X8+68]
	083 And W8, W19, 255
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 NotImplemented "Instruction FDIV not yet implemented."
	087 NotImplemented "Instruction UCVTF not yet implemented."
	088 NotImplemented "Instruction FDIV not yet implemented."
	089 NotImplemented "Instruction UCVTF not yet implemented."
	090 NotImplemented "Instruction FDIV not yet implemented."
	091 Move X2, X31
	092 Move X30, [X31+48]
	093 Call Material.SetColor, X0, X1, X2
	094 Return 
	095 Call 0x1C17F20

Method: System.Void SetShaderDepth()

Disassembly:
	0x03AD7868 CBNZ X0, 0x3AD768C
	0x03AD786C MOV X0, X31
	0x03AD7870 BL 0x3B13E54
	0x03AD7874 ADRP X8, 0x61C000
	0x03AD7878 LDR X8, [X8 + 0x598]
	0x03AD787C MOV X22, X0
	0x03AD7880 LDR X8, [X8]
	0x03AD7884 LDR W9, [X8 + 0xE0]
	0x03AD7888 CBNZ W9, 0x3AD7894
	0x03AD788C MOV X0, X8
	0x03AD7890 BL 0x1C16DFC
	0x03AD7894 MOV X0, X22
	0x03AD7898 MOV X1, X31
	0x03AD789C MOV X2, X31
	0x03AD78A0 BL 0x3C354F8
	0x03AD78A4 TBZ X0, 0x0, 0x3AD7900
	0x03AD78A8 MOV X0, X31
	0x03AD78AC BL 0x3B13E54
	0x03AD78B0 ADRP X8, 0x681000
	0x03AD78B4 LDR X8, [X8 + 0x618]
	0x03AD78B8 LDR W22, [X19 + 0x25C]
	0x03AD78BC LDR W24, [X19 + 0x214]
	0x03AD78C0 MOV X25, X0
	0x03AD78C4 LDR X8, [X8]
	0x03AD78C8 LDR W9, [X8 + 0xE0]
	0x03AD78CC CBNZ W9, 0x3AD78D8
	0x03AD78D0 MOV X0, X8
	0x03AD78D4 BL 0x1C16DFC
	0x03AD78D8 ADD X5, X31, 0x1AC
	0x03AD78DC MOVZ W2, 0x1
	0x03AD78E0 MOV W0, W21
	0x03AD78E4 MOV X1, X25
	0x03AD78E8 MOV W3, W22
	0x03AD78EC MOV W4, W24
	0x03AD78F0 MOV X6, X31
	0x03AD78F4 BL 0x3AEB240
	0x03AD78F8 MOV X22, X0
	0x03AD78FC CBNZ X0, 0x3AD7690
	0x03AD7900 LDR W8, [X20 + 0x18]
	0x03AD7904 CMP W28, W8
	0x03AD7908 B.CS 0x3AD89C8
	0x03AD790C MOVZ W8, 0x20
	0x03AD7910 STR W8, [X27]
	0x03AD7914 ADRP X8, 0x681000
	0x03AD7918 LDR X8, [X8 + 0x618]
	0x03AD791C LDR X24, [X19 + 0x100]
	0x03AD7920 LDR W22, [X19 + 0x25C]
	0x03AD7924 LDR W25, [X19 + 0x214]
	0x03AD7928 LDR X0, [X8]
	0x03AD792C LDR W8, [X0 + 0xE0]
	0x03AD7930 CBNZ W8, 0x3AD7938
	0x03AD7934 BL 0x1C16DFC
	0x03AD7938 ADD X5, X31, 0x1AC
	0x03AD793C MOVZ W0, 0x20
	0x03AD7940 MOVZ W2, 0x1
	0x03AD7944 MOV X1, X24
	0x03AD7948 MOV W3, W22
	0x03AD794C MOV W4, W25
	0x03AD7950 MOV X6, X31
	0x03AD7954 MOVZ W21, 0x20
	0x03AD7958 BL 0x3AEB240
	0x03AD795C CBNZ X0, 0x3AD768C
	0x03AD7960 LDR W8, [X20 + 0x18]
	0x03AD7964 CMP W28, W8
	0x03AD7968 B.CS 0x3AD89C8
	0x03AD796C MOVZ W8, 0x3
	0x03AD7970 STR W8, [X27]
	0x03AD7974 ADRP X8, 0x681000
	0x03AD7978 LDR X8, [X8 + 0x618]
	0x03AD797C LDR X24, [X19 + 0x100]
	0x03AD7980 LDR W22, [X19 + 0x25C]
	0x03AD7984 LDR W25, [X19 + 0x214]
	0x03AD7988 LDR X0, [X8]
	0x03AD798C LDR W8, [X0 + 0xE0]
	0x03AD7990 CBNZ W8, 0x3AD7998

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x90C000
	006 Move X21, 0x61D000
	007 Move W8, [X20+1314]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x61D000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x682000
	018 Move X0, [X0+824]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1314], W8
	022 Move X0, [X21]
	023 Move X20, [X19+1832]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {50}
	036 Move X0, [X21]
	037 Move X20, [X19+272]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, [X19+1832]
	056 Compare X0, 0
	057 JumpIfEqual {99}
	058 Move X1, X31
	059 Call Canvas.get_renderMode, X0
	060 Compare W0, 0
	061 JumpIfEqual {65}
	062 Move W8, [X19+772]
	063 Compare W8, 0
	064 JumpIfEqual {77}
	065 Move X20, 0x682000
	066 Move X20, [X20+824]
	067 Move X19, [X19+272]
	068 Move X0, [X20]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Compare X19, 0
	074 JumpIfEqual {99}
	075 Move X8, [X20]
	076 Move S0, W31
	077 Move X20, 0x682000
	078 Move X20, [X20+824]
	079 Move X19, [X19+272]
	080 Move X0, [X20]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Compare X19, 0
	086 JumpIfEqual {99}
	087 Move X8, [X20]
	088 Move S0, 4
	089 Move X8, [X8+184]
	090 Move X1, [X8+280]
	091 Move X0, X19
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X2, X31
	095 Move X30, [X31+32]
	096 Move X21, [X31+40]
	097 Call Material.SetFloat, X0, X1, V0
	098 Return 
	099 Call 0x1C17F20

Method: System.Void SetCulling()

Disassembly:
	0x03AD7994 BL 0x1C16DFC
	0x03AD7998 ADD X5, X31, 0x1AC
	0x03AD799C MOVZ W0, 0x3
	0x03AD79A0 MOVZ W2, 0x1
	0x03AD79A4 MOV X1, X24
	0x03AD79A8 MOV W3, W22
	0x03AD79AC MOV W4, W25
	0x03AD79B0 MOV X6, X31
	0x03AD79B4 MOVZ W21, 0x3
	0x03AD79B8 BL 0x3AEB240
	0x03AD79BC B 0x3AD768C
	0x03AD79C0 LDR X0, [X8]
	0x03AD79C4 ADD X1, X31, 0xD0
	0x03AD79C8 STR W23, [X31 + 0xD0]
	0x03AD79CC BL 0x1C16E04
	0x03AD79D0 MOVZ W26, 0x178
	0x03AD79D4 CBZ X24, 0x3AD8938
	0x03AD79D8 MOV X23, X0
	0x03AD79DC CBZ X0, 0x3AD79F4
	0x03AD79E0 LDR X8, [X24]
	0x03AD79E4 MOV X0, X23
	0x03AD79E8 LDR X1, [X8 + 0x40]
	0x03AD79EC BL 0x1C16E00
	0x03AD79F0 CBZ X0, 0x3AD89CC
	0x03AD79F4 LDR W8, [X24 + 0x18]
	0x03AD79F8 CBZ W8, 0x3AD89C8
	0x03AD79FC STR X23, [X24 + 0x20]
	0x03AD7A00 LDR X0, [X19 + 0xF8]
	0x03AD7A04 CBZ X0, 0x3AD8938
	0x03AD7A08 MOV X1, X31
	0x03AD7A0C BL 0x3C389D4
	0x03AD7A10 MOV X23, X0
	0x03AD7A14 CBZ X0, 0x3AD7A2C
	0x03AD7A18 LDR X8, [X24]
	0x03AD7A1C MOV X0, X23
	0x03AD7A20 LDR X1, [X8 + 0x40]
	0x03AD7A24 BL 0x1C16E00
	0x03AD7A28 CBZ X0, 0x3AD89CC
	0x03AD7A2C LDR W8, [X24 + 0x18]
	0x03AD7A30 CMP W8, 0x1
	0x03AD7A34 B.LS 0x3AD89C8
	0x03AD7A38 STR X23, [X24 + 0x28]
	0x03AD7A3C CBZ X22, 0x3AD8938
	0x03AD7A40 ADRP X9, 0x624000
	0x03AD7A44 LDR W8, [X22 + 0x14]
	0x03AD7A48 LDR X9, [X9 + 0x720]
	0x03AD7A4C ADD X1, X31, 0x160
	0x03AD7A50 STR W8, [X31 + 0x160]
	0x03AD7A54 LDR X0, [X9]
	0x03AD7A58 BL 0x1C16E04
	0x03AD7A5C MOV X23, X0
	0x03AD7A60 CBZ X0, 0x3AD7A78
	0x03AD7A64 LDR X8, [X24]
	0x03AD7A68 MOV X0, X23
	0x03AD7A6C LDR X1, [X8 + 0x40]
	0x03AD7A70 BL 0x1C16E00
	0x03AD7A74 CBZ X0, 0x3AD89CC
	0x03AD7A78 LDR W8, [X24 + 0x18]
	0x03AD7A7C CMP W8, 0x2
	0x03AD7A80 B.LS 0x3AD89C8
	0x03AD7A84 MOV X0, X19
	0x03AD7A88 MOV X1, X31
	0x03AD7A8C STR X23, [X24 + 0x30]
	0x03AD7A90 BL 0x3C389D4
	0x03AD7A94 MOV X23, X0
	0x03AD7A98 CBZ X0, 0x3AD7AB0
	0x03AD7A9C LDR X8, [X24]
	0x03AD7AA0 MOV X0, X23
	0x03AD7AA4 LDR X1, [X8 + 0x40]
	0x03AD7AA8 BL 0x1C16E00
	0x03AD7AAC CBZ X0, 0x3AD89CC
	0x03AD7AB0 LDR W8, [X24 + 0x18]
	0x03AD7AB4 CMP W8, 0x3
	0x03AD7AB8 B.LS 0x3AD89C8
	0x03AD7ABC STR X23, [X24 + 0x38]
	0x03AD7AC0 ADRP X8, 0x681000
	0x03AD7AC4 LDR X8, [X8 + 0x650]
	0x03AD7AC8 LDR X0, [X8]
	0x03AD7ACC MOV X1, X24
	0x03AD7AD0 MOV X2, X31
	0x03AD7AD4 BL 0x3227C5C
	0x03AD7AD8 ADRP X8, 0x61C000
	0x03AD7ADC LDR X8, [X8 + 0xA28]
	0x03AD7AE0 MOV X23, X0
	0x03AD7AE4 ADRP X24, 0x681000
	0x03AD7AE8 LDR X0, [X8]
	0x03AD7AEC LDR W8, [X0 + 0xE0]
	0x03AD7AF0 LDR X24, [X24 + 0x368]
	0x03AD7AF4 CBNZ W8, 0x3AD7AFC
	0x03AD7AF8 BL 0x1C16DFC
	0x03AD7AFC MOV X0, X23
	0x03AD7B00 MOV X1, X19
	0x03AD7B04 MOV X2, X31
	0x03AD7B08 BL 0x3C06B0C
	0x03AD7B0C LDRB W8, [X22 + 0x10]
	0x03AD7B10 CMP W8, 0x1
	0x03AD7B14 B.NE 0x3AD7B48
	0x03AD7B18 LDR X0, [X22 + 0x18]
	0x03AD7B1C CBZ X0, 0x3AD8938
	0x03AD7B20 MOV X1, X31
	0x03AD7B24 BL 0x3ADB8A4
	0x03AD7B28 LDR X8, [X19 + 0x100]
	0x03AD7B2C CBZ X8, 0x3AD8938
	0x03AD7B30 MOV W23, W0
	0x03AD7B34 MOV X0, X8
	0x03AD7B38 MOV X1, X31
	0x03AD7B3C BL 0x3ADB8A4
	0x03AD7B40 CMP W23, W0
	0x03AD7B44 B.NE 0x3AD7B50
	0x03AD7B48 MOV W25, W31
	0x03AD7B4C B 0x3AD7BA4
	0x03AD7B50 LDR X8, [X22 + 0x18]
	0x03AD7B54 CBZ X8, 0x3AD7B80
	0x03AD7B58 ADRP X9, 0x681000
	0x03AD7B5C LDR X10, [X8]
	0x03AD7B60 LDR X9, [X9 + 0x578]
	0x03AD7B64 LDRB W12, [X10 + 0x130]
	0x03AD7B68 LDR X9, [X9]
	0x03AD7B6C LDRB W11, [X9 + 0x130]
	0x03AD7B70 CMP W12, W11
	0x03AD7B74 B.CS 0x3AD7B88
	0x03AD7B78 MOV X8, X31
	0x03AD7B7C B 0x3AD7B9C
	0x03AD7B80 STR X31, [X19 + 0x100]
	0x03AD7B84 B 0x3AD7BA0
	0x03AD7B88 LDR X10, [X10 + 0xC8]
	0x03AD7B8C ADD X10, X10, X11, 0x3, LSL
	0x03AD7B90 LDUR X10, [X10 - 0x8]
	0x03AD7B94 CMP X10, X9
	0x03AD7B98 CSEL X8, X8, X31, EQ
	0x03AD7B9C STR X8, [X19 + 0x100]
	0x03AD7BA0 MOVZ W25, 0x1
	0x03AD7BA4 LDR X8, [X19 + 0x368]
	0x03AD7BA8 CBZ X8, 0x3AD8938
	0x03AD7BAC LDR X8, [X8 + 0x38]
	0x03AD7BB0 CBZ X8, 0x3AD8938
	0x03AD7BB4 LDRSW X9, [X19 + 0x490]
	0x03AD7BB8 LDR W10, [X8 + 0x18]
	0x03AD7BBC CMP W9, W10
	0x03AD7BC0 B.CS 0x3AD89C8
	0x03AD7BC4 MADD X10, X9, X26, X8
	0x03AD7BC8 STR W31, [X10 + 0x2C]
	0x03AD7BCC STR X22, [X10 + 0x30]
	0x03AD7BD0 LDRB W11, [X31 + 0x1AC]
	0x03AD7BD4 STRH W21, [X10 + 0x20]
	0x03AD7BD8 STRB W11, [X10 + 0x5C]
	0x03AD7BDC LDR W10, [X20 + 0x18]
	0x03AD7BE0 CMP W28, W10
	0x03AD7BE4 B.CS 0x3AD89C8
	0x03AD7BE8 MOVZ W10, 0xC
	0x03AD7BEC MADD X10, X29, X10, X20
	0x03AD7BF0 LDUR V0, [X10 + 0x24]
	0x03AD7BF4 NOP
	0x03AD7BF8 MADD X8, X9, X26, X8
	0x03AD7BFC MOVZ W29, 0xC
	0x03AD7C00 STUR D0, [X8 + 0x24]
	0x03AD7C04 LDR X0, [X19 + 0x100]
	0x03AD7C08 STR X0, [X8 + 0x38]
	0x03AD7C0C LDRB W8, [X22 + 0x10]
	0x03AD7C10 CMP W8, 0x2
	0x03AD7C14 B.NE 0x3AD7D14
	0x03AD7C18 LDR X21, [X22 + 0x18]
	0x03AD7C1C CBZ X21, 0x3AD8938
	0x03AD7C20 ADRP X8, 0x681000
	0x03AD7C24 LDR X9, [X21]
	0x03AD7C28 LDR X8, [X8 + 0x628]
	0x03AD7C2C LDRB W11, [X9 + 0x130]
	0x03AD7C30 LDR X8, [X8]
	0x03AD7C34 LDRB W10, [X8 + 0x130]
	0x03AD7C38 CMP W11, W10
	0x03AD7C3C B.CC 0x3AD8938
	0x03AD7C40 LDR X9, [X9 + 0xC8]
	0x03AD7C44 ADD X9, X9, X10, 0x3, LSL
	0x03AD7C48 LDUR X9, [X9 - 0x8]
	0x03AD7C4C CMP X9, X8
	0x03AD7C50 B.NE 0x3AD8938
	0x03AD7C54 LDR X0, [X27]
	0x03AD7C58 LDR X23, [X21 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x90C000
	009 Move X21, 0x61D000
	010 Move W8, [X20+1315]
	011 Move X21, [X21+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x61D000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x682000
	021 Move X0, [X0+824]
	022 Call 0x1C17CF4
	023 Move X0, 0x682000
	024 Move X0, [X0+1504]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1315], W8
	028 Move X8, [X19]
	029 Move W23, [X19+774]
	030 Move X0, X19
	031 Move X9, [X8+856]
	032 Move X1, [X8+864]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X21]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X22, 0x682000
	042 Move X22, [X22+824]
	043 Move X0, X20
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Inequality, X0, X1
	047 Compare W23, 0
	048 JumpIfEqual {129}
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {62}
	053 Compare X20, 0
	054 JumpIfEqual {209}
	055 Move X8, 0x682000
	056 Move X8, [X8+1504]
	057 Move S0, 2
	058 Move X0, X20
	059 Move X2, X31
	060 Move X1, [X8]
	061 Call Material.SetFloat, X0, X1, V0
	062 Move X8, [X19+1800]
	063 Compare X8, 0
	064 JumpIfEqual {209}
	065 Move W23, 5
	066 Move W9, [X8+24]
	067 Subtract X24, X23, 4
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X21]
	071 Move X20, [X8]
	072 Move W9, [X0+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {210}
	084 Move X8, [X19+1800]
	085 Compare X8, 0
	086 JumpIfEqual {209}
	087 Move W9, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X8]
	090 Compare X0, 0
	091 JumpIfEqual {209}
	092 Move X8, [X0]
	093 Move X9, [X8+856]
	094 Move X1, [X8+864]
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X8, [X21]
	097 Move X20, X0
	098 Move W9, [X8+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X8
	102 Call 0x1C17DFC
	103 Move X0, X20
	104 Move X1, X31
	105 Move X2, X31
	106 Call Object.op_Inequality, X0, X1
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {125}
	111 Move X0, [X22]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Compare X20, 0
	117 JumpIfEqual {209}
	118 Move X8, [X22]
	119 Move S0, 2
	120 Move X0, X20
	121 Move X2, X31
	122 Move X8, [X8+184]
	123 Move X1, [X8+288]
	124 Call Material.SetFloat, X0, X1, V0
	125 Move X8, [X19+1800]
	126 Add X23, X23, 1
	127 Compare X8, 0
	128 JumpIfNotEqual {66}
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {142}
	133 Compare X20, 0
	134 JumpIfEqual {209}
	135 Move X8, 0x682000
	136 Move X8, [X8+1504]
	137 Move S0, W31
	138 Move X0, X20
	139 Move X2, X31
	140 Move X1, [X8]
	141 Call Material.SetFloat, X0, X1, V0
	142 Move X8, [X19+1800]
	143 Compare X8, 0
	144 JumpIfEqual {209}
	145 Move W23, 5
	146 Move W9, [X8+24]
	147 Subtract X24, X23, 4
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X0, [X21]
	151 Move X20, [X8]
	152 Move W9, [X0+224]
	153 Compare W9, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X20
	157 Move X1, X31
	158 Move X2, X31
	159 Call Object.op_Inequality, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {210}
	164 Move X8, [X19+1800]
	165 Compare X8, 0
	166 JumpIfEqual {209}
	167 Move W9, [X8+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, [X8]
	170 Compare X0, 0
	171 JumpIfEqual {209}
	172 Move X8, [X0]
	173 Move X9, [X8+856]
	174 Move X1, [X8+864]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X8, [X21]
	177 Move X20, X0
	178 Move W9, [X8+224]
	179 Compare W9, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X8
	182 Call 0x1C17DFC
	183 Move X0, X20
	184 Move X1, X31
	185 Move X2, X31
	186 Call Object.op_Inequality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {205}
	191 Move X0, [X22]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Compare X20, 0
	197 JumpIfEqual {209}
	198 Move X8, [X22]
	199 Move S0, W31
	200 Move X0, X20
	201 Move X2, X31
	202 Move X8, [X8+184]
	203 Move X1, [X8+288]
	204 Call Material.SetFloat, X0, X1, V0
	205 Move X8, [X19+1800]
	206 Add X23, X23, 1
	207 Compare X8, 0
	208 JumpIfNotEqual {146}
	209 Call 0x1C17F20
	210 Move X20, [X31+48]
	211 Move X19, [X31+56]
	212 Move X22, [X31+32]
	213 Move X21, [X31+40]
	214 Move X24, [X31+16]
	215 Move X23, [X31+24]
	216 Move X30, [X31+64]
	217 Return 
	218 Call 0x1C17F28

Method: System.Void SetPerspectiveCorrection()

Disassembly:
	0x03AD7C5C LDR W8, [X0 + 0xE0]
	0x03AD7C60 CBNZ W8, 0x3AD7C6C
	0x03AD7C64 BL 0x1C16DFC
	0x03AD7C68 LDR X0, [X27]
	0x03AD7C6C LDR X2, [X0 + 0xB8]
	0x03AD7C70 MOV X0, X23
	0x03AD7C74 MOV X1, X21
	0x03AD7C78 LDR X3, [X2 + 0x8]
	0x03AD7C7C BL 0x3ACB80C
	0x03AD7C80 STR W0, [X19 + 0x120]
	0x03AD7C84 LDR X8, [X27]
	0x03AD7C88 LDR X8, [X8 + 0xB8]
	0x03AD7C8C LDR X8, [X8]
	0x03AD7C90 CBZ X8, 0x3AD8938
	0x03AD7C94 LDR W9, [X8 + 0x18]
	0x03AD7C98 CMP W0, W9
	0x03AD7C9C B.CS 0x3AD89C8
	0x03AD7CA0 MOVZ W9, 0x38
	0x03AD7CA4 SMADDL X8, X0, X9, X8
	0x03AD7CA8 LDR W9, [X8 + 0x54]
	0x03AD7CAC ADD W9, W9, 0x1
	0x03AD7CB0 STR W9, [X8 + 0x54]
	0x03AD7CB4 LDR X8, [X19 + 0x368]
	0x03AD7CB8 CBZ X8, 0x3AD8938
	0x03AD7CBC LDR X9, [X8 + 0x38]
	0x03AD7CC0 CBZ X9, 0x3AD8938
	0x03AD7CC4 LDR W8, [X19 + 0x490]
	0x03AD7CC8 LDR W10, [X9 + 0x18]
	0x03AD7CCC CMP W8, W10
	0x03AD7CD0 B.CS 0x3AD89C8
	0x03AD7CD4 SXTW X10, W8
	0x03AD7CD8 MADD X9, X10, X26, X9
	0x03AD7CDC MOVZ W10, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x90C000
	006 Move X20, 0x682000
	007 Move W8, [X21+1316]
	008 Move X20, [X20+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x682000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1316], W8
	019 Move X0, [X20]
	020 Move W21, [X19+773]
	021 Move X19, [X19+272]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Compare X19, 0
	028 JumpIfEqual {43}
	029 Move X8, [X0+184]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W1, [X8+96]
	035 Move S0, W31
	036 Move S1, 0.875
	037 NotImplemented "Instruction FCSEL not yet implemented."
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Material.SetFloat, X0, X1, V0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void SetMeshArrays(System.Int32 size)

Disassembly:
	0x03AD7CE0 STR W10, [X9 + 0x2C]
	0x03AD7CE4 LDR W10, [X19 + 0x120]
	0x03AD7CE8 STR X21, [X9 + 0x40]
	0x03AD7CEC STR W10, [X9 + 0x58]
	0x03AD7CF0 LDR W10, [X22 + 0x28]
	0x03AD7CF4 STR W10, [X9 + 0x48]
	0x03AD7CF8 LDR W9, [X31 + 0x2C]
	0x03AD7CFC STR W31, [X19 + 0x644]
	0x03AD7D00 STR W9, [X19 + 0x120]
	0x03AD7D04 LDR W9, [X31 + 0x28]
	0x03AD7D08 ADD W9, W9, 0x1
	0x03AD7D0C STR W9, [X31 + 0x28]
	0x03AD7D10 B 0x3AD807C
	0x03AD7D14 CBZ W25, 0x3AD7DD8
	0x03AD7D18 CBZ X0, 0x3AD8938
	0x03AD7D1C MOV X1, X31
	0x03AD7D20 BL 0x3ADB8A4
	0x03AD7D24 LDR X8, [X19 + 0xF8]
	0x03AD7D28 CBZ X8, 0x3AD8938
	0x03AD7D2C MOV W23, W0
	0x03AD7D30 MOV X0, X8
	0x03AD7D34 MOV X1, X31
	0x03AD7D38 BL 0x3ADB8A4
	0x03AD7D3C CMP W23, W0
	0x03AD7D40 B.EQ 0x3AD7DD8
	0x03AD7D44 MOV X0, X31
	0x03AD7D48 BL 0x3B13F90
	0x03AD7D4C TBZ X0, 0x0, 0x3AD7D94
	0x03AD7D50 LDR X8, [X19 + 0x100]
	0x03AD7D54 CBZ X8, 0x3AD8938
	0x03AD7D58 ADRP X9, 0x681000
	0x03AD7D5C LDR X9, [X9 + 0x620]
	0x03AD7D60 LDR X23, [X19 + 0x118]
	0x03AD7D64 LDR X24, [X8 + 0x20]
	0x03AD7D68 LDR X0, [X9]
	0x03AD7D6C LDR W9, [X0 + 0xE0]
	0x03AD7D70 CBNZ W9, 0x3AD7D78
	0x03AD7D74 BL 0x1C16DFC
	0x03AD7D78 MOV X0, X23
	0x03AD7D7C MOV X1, X24
	0x03AD7D80 MOV X2, X31
	0x03AD7D84 BL 0x3B10470
	0x03AD7D88 LDR X23, [X19 + 0x100]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x90C000
	006 Move W8, [X21+1317]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x682000
	014 Move X0, [X0+840]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1317], W8
	018 Move X8, [X19+872]
	019 Compare X8, 0
	020 JumpIfEqual {58}
	021 Move X21, [X8+96]
	022 Compare X21, 0
	023 JumpIfEqual {58}
	024 Move X8, 0x682000
	025 Move X8, [X8+840]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W8, [X21+24]
	032 Compare W8, 0
	033 JumpIfEqual {59}
	034 Add X0, X21, 32
	035 Move W1, W20
	036 Move X2, X31
	037 Call TMP_MeshInfo.ResizeMeshInfo, X0, X1
	038 Move X8, [X19+872]
	039 Compare X8, 0
	040 JumpIfEqual {58}
	041 Move X8, [X8+96]
	042 Compare X8, 0
	043 JumpIfEqual {58}
	044 Move W9, [X8+24]
	045 Compare W9, 0
	046 JumpIfEqual {59}
	047 Move X0, [X19+1824]
	048 Compare X0, 0
	049 JumpIfEqual {58}
	050 Move X1, [X8+32]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X2, X31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call CanvasRenderer.SetMesh, X0, X1
	057 Return 
	058 Call 0x1C17F20
	059 Call 0x1C17F28

Method: System.Int32 SetArraySizes(TMPro.TMP_Text/UnicodeChar[] unicodeChars)

Disassembly:
	0x03AD7D8C MOV X24, X0
	0x03AD7D90 B 0x3AD7DA0
	0x03AD7D94 LDR X23, [X19 + 0x100]
	0x03AD7D98 CBZ X23, 0x3AD8938
	0x03AD7D9C LDR X24, [X23 + 0x20]
	0x03AD7DA0 STR X24, [X19 + 0x118]
	0x03AD7DA4 LDR X0, [X27]
	0x03AD7DA8 LDR W8, [X0 + 0xE0]
	0x03AD7DAC CBNZ W8, 0x3AD7DB8
	0x03AD7DB0 BL 0x1C16DFC
	0x03AD7DB4 LDR X0, [X27]
	0x03AD7DB8 LDR X2, [X0 + 0xB8]
	0x03AD7DBC MOV X0, X24
	0x03AD7DC0 MOV X1, X23
	0x03AD7DC4 LDR X3, [X2 + 0x8]
	0x03AD7DC8 BL 0x3ACB600
	0x03AD7DCC STR W0, [X19 + 0x120]
	0x03AD7DD0 ADRP X24, 0x681000
	0x03AD7DD4 LDR X24, [X24 + 0x368]
	0x03AD7DD8 LDR X0, [X22 + 0x20]
	0x03AD7DDC CBZ X0, 0x3AD8938
	0x03AD7DE0 MOV X1, X31
	0x03AD7DE4 BL 0x3C9C4F0
	0x03AD7DE8 CMP W0, 0x1
	0x03AD7DEC B.LT 0x3AD7E80
	0x03AD7DF0 LDR X0, [X22 + 0x20]
	0x03AD7DF4 CBZ X0, 0x3AD8938
	0x03AD7DF8 LDR X22, [X19 + 0x100]
	0x03AD7DFC LDR X23, [X19 + 0x118]
	0x03AD7E00 MOV X1, X31
	0x03AD7E04 BL 0x3C9C4F0
	0x03AD7E08 ADRP X8, 0x681000
	0x03AD7E0C LDR X8, [X8 + 0x620]
	0x03AD7E10 MOV W24, W0
	0x03AD7E14 LDR X8, [X8]
	0x03AD7E18 LDR W9, [X8 + 0xE0]
	0x03AD7E1C CBNZ W9, 0x3AD7E28
	0x03AD7E20 MOV X0, X8
	0x03AD7E24 BL 0x1C16DFC
	0x03AD7E28 MOV X0, X22
	0x03AD7E2C MOV X1, X23
	0x03AD7E30 MOV W2, W24
	0x03AD7E34 MOV X3, X31
	0x03AD7E38 BL 0x3B0FF2C
	0x03AD7E3C STR X0, [X19 + 0x118]
	0x03AD7E40 MOV X22, X0
	0x03AD7E44 LDR X0, [X27]
	0x03AD7E48 LDR X23, [X19 + 0x100]
	0x03AD7E4C LDR W8, [X0 + 0xE0]
	0x03AD7E50 CBNZ W8, 0x3AD7E5C
	0x03AD7E54 BL 0x1C16DFC
	0x03AD7E58 LDR X0, [X27]
	0x03AD7E5C ADRP X24, 0x681000
	0x03AD7E60 LDR X24, [X24 + 0x368]
	0x03AD7E64 LDR X2, [X0 + 0xB8]
	0x03AD7E68 MOV X0, X22
	0x03AD7E6C MOV X1, X23
	0x03AD7E70 LDR X3, [X2 + 0x8]
	0x03AD7E74 BL 0x3ACB600
	0x03AD7E78 MOVZ W25, 0x1
	0x03AD7E7C STR W0, [X19 + 0x120]
	0x03AD7E80 ADRP X8, 0x61E000
	0x03AD7E84 LDR X8, [X8 + 0x170]
	0x03AD7E88 LDR X0, [X8]
	0x03AD7E8C LDR W8, [X0 + 0xE0]
	0x03AD7E90 CBNZ W8, 0x3AD7E98
	0x03AD7E94 BL 0x1C16DFC
	0x03AD7E98 MOV W0, W21
	0x03AD7E9C MOV X1, X31
	0x03AD7EA0 BL 0x3317FCC
	0x03AD7EA4 MOVZ W8, 0x200B
	0x03AD7EA8 CMP W21, W8
	0x03AD7EAC B.EQ 0x3AD7FB0
	0x03AD7EB0 TBNZ X0, 0x0, 0x3AD7FB0
	0x03AD7EB4 LDR X8, [X27]
	0x03AD7EB8 LDR W9, [X8 + 0xE0]
	0x03AD7EBC CBNZ W9, 0x3AD7ECC
	0x03AD7EC0 MOV X0, X8
	0x03AD7EC4 BL 0x1C16DFC
	0x03AD7EC8 LDR X8, [X27]
	0x03AD7ECC LDR X9, [X8 + 0xB8]
	0x03AD7ED0 LDR X9, [X9]
	0x03AD7ED4 CBZ X9, 0x3AD8938
	0x03AD7ED8 LDR W0, [X19 + 0x120]
	0x03AD7EDC LDR W10, [X9 + 0x18]
	0x03AD7EE0 CMP W0, W10
	0x03AD7EE4 B.CS 0x3AD89C8
	0x03AD7EE8 SXTW X10, W0
	0x03AD7EEC MOVZ W11, 0x38
	0x03AD7EF0 MADD X10, X10, X11, X9
	0x03AD7EF4 LDR W10, [X10 + 0x54]
	0x03AD7EF8 MOVZ W11, 0x3FFE
	0x03AD7EFC CMP W10, W11
	0x03AD7F00 B.LE 0x3AD7F6C
	0x03AD7F04 ADRP X8, 0x620000
	0x03AD7F08 LDR X22, [X19 + 0x118]
	0x03AD7F0C LDR X8, [X8 + 0xCA0]
	0x03AD7F10 LDR X0, [X8]
	0x03AD7F14 BL 0x1C16F10
	0x03AD7F18 MOV X1, X22
	0x03AD7F1C MOV X2, X31
	0x03AD7F20 MOV X21, X0
	0x03AD7F24 BL 0x3C145DC
	0x03AD7F28 LDR X0, [X27]
	0x03AD7F2C LDR X22, [X19 + 0x100]
	0x03AD7F30 LDR W8, [X0 + 0xE0]
	0x03AD7F34 CBNZ W8, 0x3AD7F40
	0x03AD7F38 BL 0x1C16DFC
	0x03AD7F3C LDR X0, [X27]
	0x03AD7F40 LDR X2, [X0 + 0xB8]
	0x03AD7F44 MOV X0, X21
	0x03AD7F48 MOV X1, X22
	0x03AD7F4C LDR X3, [X2 + 0x8]
	0x03AD7F50 BL 0x3ACB600
	0x03AD7F54 STR W0, [X19 + 0x120]
	0x03AD7F58 LDR X8, [X27]
	0x03AD7F5C LDR X8, [X8 + 0xB8]
	0x03AD7F60 LDR X9, [X8]
	0x03AD7F64 CBNZ X9, 0x3AD7F90
	0x03AD7F68 B 0x3AD8938
	0x03AD7F6C LDR W10, [X8 + 0xE0]
	0x03AD7F70 CBNZ W10, 0x3AD7F90
	0x03AD7F74 MOV X0, X8
	0x03AD7F78 BL 0x1C16DFC
	0x03AD7F7C LDR X8, [X27]
	0x03AD7F80 LDR X8, [X8 + 0xB8]
	0x03AD7F84 LDR X9, [X8]
	0x03AD7F88 CBZ X9, 0x3AD8938
	0x03AD7F8C LDR W0, [X19 + 0x120]
	0x03AD7F90 LDR W8, [X9 + 0x18]
	0x03AD7F94 CMP W0, W8
	0x03AD7F98 B.CS 0x3AD89C8
	0x03AD7F9C MOVZ W8, 0x38
	0x03AD7FA0 SMADDL X8, X0, X8, X9
	0x03AD7FA4 LDR W9, [X8 + 0x54]
	0x03AD7FA8 ADD W9, W9, 0x1
	0x03AD7FAC STR W9, [X8 + 0x54]
	0x03AD7FB0 LDR X8, [X19 + 0x368]
	0x03AD7FB4 CBZ X8, 0x3AD8938
	0x03AD7FB8 LDR X8, [X8 + 0x38]
	0x03AD7FBC CBZ X8, 0x3AD8938
	0x03AD7FC0 LDRSW X9, [X19 + 0x490]
	0x03AD7FC4 LDR W10, [X8 + 0x18]
	0x03AD7FC8 CMP W9, W10
	0x03AD7FCC B.CS 0x3AD89C8
	0x03AD7FD0 LDR X10, [X19 + 0x118]
	0x03AD7FD4 NOP
	0x03AD7FD8 MADD X9, X9, X26, X8
	0x03AD7FDC STR X10, [X9 + 0x50]
	0x03AD7FE0 LDR W8, [X19 + 0x120]
	0x03AD7FE4 STR W8, [X9 + 0x58]
	0x03AD7FE8 LDR X0, [X27]
	0x03AD7FEC LDR W9, [X0 + 0xE0]
	0x03AD7FF0 CBNZ W9, 0x3AD8000
	0x03AD7FF4 BL 0x1C16DFC
	0x03AD7FF8 LDR X0, [X27]
	0x03AD7FFC LDR W8, [X19 + 0x120]
	0x03AD8000 LDR X9, [X0 + 0xB8]
	0x03AD8004 LDR X9, [X9]
	0x03AD8008 CBZ X9, 0x3AD8938
	0x03AD800C LDR W10, [X9 + 0x18]
	0x03AD8010 CMP W8, W10
	0x03AD8014 B.CS 0x3AD89C8
	0x03AD8018 MOVZ W10, 0x38
	0x03AD801C SMADDL X10, X8, X10, X9
	0x03AD8020 STRB W25, [X10 + 0x41]
	0x03AD8024 CBZ W25, 0x3AD8078
	0x03AD8028 LDR W10, [X0 + 0xE0]
	0x03AD802C CBNZ W10, 0x3AD8048
	0x03AD8030 BL 0x1C16DFC
	0x03AD8034 LDR X8, [X27]
	0x03AD8038 LDR X8, [X8 + 0xB8]
	0x03AD803C LDR X9, [X8]
	0x03AD8040 CBZ X9, 0x3AD8938
	0x03AD8044 LDR W8, [X19 + 0x120]
	0x03AD8048 LDR W10, [X9 + 0x18]
	0x03AD804C CMP W8, W10
	0x03AD8050 B.CS 0x3AD89C8
	0x03AD8054 MOVZ W10, 0x38
	0x03AD8058 SMADDL X8, X8, X10, X9
	0x03AD805C LDR X9, [X31 + 0x18]
	0x03AD8060 STR X9, [X8 + 0x48]
	0x03AD8064 LDR X8, [X31 + 0x20]
	0x03AD8068 STR X9, [X19 + 0x118]
	0x03AD806C STR X8, [X19 + 0x100]
	0x03AD8070 LDR W8, [X31 + 0x2C]
	0x03AD8074 STR W8, [X19 + 0x120]
	0x03AD8078 LDR W8, [X19 + 0x490]
	0x03AD807C ADD W8, W8, 0x1
	0x03AD8080 STR W8, [X19 + 0x490]
	0x03AD8084 LDR W8, [X20 + 0x18]
	0x03AD8088 ADD W28, W28, 0x1
	0x03AD808C CMP W28, W8
	0x03AD8090 B.LT 0x3AD72DC
	0x03AD8094 B 0x3AD80A4
	0x03AD8098 STR W31, [X31 + 0x28]
	0x03AD809C B 0x3AD80A4
	0x03AD80A0 MOV X27, X26
	0x03AD80A4 LDRB W8, [X19 + 0x3F5]
	0x03AD80A8 CBZ W8, 0x3AD80DC
	0x03AD80AC STRB W31, [X19 + 0x3F5]
	0x03AD80B0 LDR W0, [X19 + 0x490]
	0x03AD80B4 ADD X31, X31, 0x1A0
	0x03AD80B8 LDP X20, X19, [X31 + 0x70]
	0x03AD80BC LDP X22, X21, [X31 + 0x60]
	0x03AD80C0 LDP X24, X23, [X31 + 0x50]
	0x03AD80C4 LDP X26, X25, [X31 + 0x40]
	0x03AD80C8 LDP X28, X27, [X31 + 0x30]
	0x03AD80CC LDP X29, X30, [X31 + 0x20]
	0x03AD80D0 LDP D9, D8, [X31 + 0x10]
	0x03AD80D4 LDR V10, [X31], #0x80
	0x03AD80D8 RET
	0x03AD80DC LDR X21, [X19 + 0x368]
	0x03AD80E0 CBZ X21, 0x3AD8938
	0x03AD80E4 LDR W8, [X31 + 0x28]
	0x03AD80E8 STR W8, [X21 + 0x1C]
	0x03AD80EC LDR X0, [X27]
	0x03AD80F0 LDR W8, [X0 + 0xE0]
	0x03AD80F4 CBNZ W8, 0x3AD8100
	0x03AD80F8 BL 0x1C16DFC
	0x03AD80FC LDR X0, [X27]
	0x03AD8100 LDR X8, [X0 + 0xB8]
	0x03AD8104 LDR X0, [X8 + 0x8]
	0x03AD8108 CBZ X0, 0x3AD8938
	0x03AD810C ADRP X8, 0x676000
	0x03AD8110 LDR X8, [X8 + 0xD78]
	0x03AD8114 LDR X1, [X8]
	0x03AD8118 BL 0x2A0A118
	0x03AD811C STR W0, [X21 + 0x34]
	0x03AD8120 LDR X21, [X19 + 0x368]
	0x03AD8124 CBZ X21, 0x3AD8938
	0x03AD8128 LDR X8, [X21 + 0x60]!
	0x03AD812C CBZ X8, 0x3AD8938
	0x03AD8130 LDR W8, [X8 + 0x18]
	0x03AD8134 MOV W20, W0
	0x03AD8138 CMP W0, W8
	0x03AD813C B.LE 0x3AD816C
	0x03AD8140 LDR X0, [X24]
	0x03AD8144 LDR W8, [X0 + 0xE0]
	0x03AD8148 CBNZ W8, 0x3AD8150
	0x03AD814C BL 0x1C16DFC
	0x03AD8150 ADRP X8, 0x680000
	0x03AD8154 LDR X8, [X8 + 0x638]
	0x03AD8158 MOV X0, X21
	0x03AD815C MOV W1, W20
	0x03AD8160 MOV W2, W31
	0x03AD8164 LDR X3, [X8]
	0x03AD8168 BL 0x2299310
	0x03AD816C LDR X8, [X19 + 0x708]
	0x03AD8170 CBZ X8, 0x3AD8938
	0x03AD8174 LDR W8, [X8 + 0x18]
	0x03AD8178 ADD X21, X19, 0x708
	0x03AD817C CMP W20, W8
	0x03AD8180 B.LE 0x3AD81C0
	0x03AD8184 ADD W0, W20, 0x1
	0x03AD8188 MOV X1, X31
	0x03AD818C BL 0x3C2B340
	0x03AD8190 LDR X8, [X24]
	0x03AD8194 MOV W22, W0
	0x03AD8198 LDR W9, [X8 + 0xE0]
	0x03AD819C CBNZ W9, 0x3AD81A8
	0x03AD81A0 MOV X0, X8
	0x03AD81A4 BL 0x1C16DFC
	0x03AD81A8 ADRP X8, 0x680000
	0x03AD81AC LDR X8, [X8 + 0x790]
	0x03AD81B0 MOV X0, X21
	0x03AD81B4 MOV W1, W22
	0x03AD81B8 LDR X2, [X8]
	0x03AD81BC BL 0x229905C
	0x03AD81C0 LDRB W8, [X19 + 0x321]
	0x03AD81C4 CBZ W8, 0x3AD8228
	0x03AD81C8 LDR X22, [X19 + 0x368]
	0x03AD81CC CBZ X22, 0x3AD8938
	0x03AD81D0 LDR X9, [X22 + 0x38]!
	0x03AD81D4 CBZ X9, 0x3AD8938
	0x03AD81D8 LDR W8, [X19 + 0x490]
	0x03AD81DC LDR W9, [X9 + 0x18]
	0x03AD81E0 SUB W9, W9, W8
	0x03AD81E4 CMP W9, 0x101
	0x03AD81E8 B.LT 0x3AD8228
	0x03AD81EC LDR X0, [X24]
	0x03AD81F0 ADD W10, W8, 0x1
	0x03AD81F4 CMP W10, 0x100
	0x03AD81F8 MOVZ W10, 0x100
	0x03AD81FC LDR W9, [X0 + 0xE0]
	0x03AD8200 CSINC W23, W10, W8, LE
	0x03AD8204 CBNZ W9, 0x3AD820C
	0x03AD8208 BL 0x1C16DFC
	0x03AD820C ADRP X8, 0x680000
	0x03AD8210 LDR X8, [X8 + 0x630]
	0x03AD8214 MOVZ W2, 0x1
	0x03AD8218 MOV X0, X22
	0x03AD821C MOV W1, W23
	0x03AD8220 LDR X3, [X8]
	0x03AD8224 BL 0x2299270
	0x03AD8228 CMP W20, 0x1
	0x03AD822C B.LT 0x3AD8888
	0x03AD8230 ADRP X8, 0xFFFFFFFFFD011000
	0x03AD8234 ADRP X29, 0x680000
	0x03AD8238 LDR V10, [X8 + 0xF20]
	0x03AD823C LDR X29, [X29 + 0x348]
	0x03AD8240 MOV X24, X31
	0x03AD8244 MOV X25, X31
	0x03AD8248 MOV W26, W20
	0x03AD824C MOVZ W28, 0x54
	0x03AD8250 CBZ X25, 0x3AD8678
	0x03AD8254 LDR X8, [X21]
	0x03AD8258 CBZ X8, 0x3AD8938
	0x03AD825C LDR W9, [X8 + 0x18]
	0x03AD8260 CMP X25, X9
	0x03AD8264 B.CS 0x3AD89C8
	0x03AD8268 ADRP X9, 0x61B000
	0x03AD826C LDR X9, [X9 + 0x598]
	0x03AD8270 ADD X8, X8, X25, 0x3, LSL
	0x03AD8274 LDR X22, [X8 + 0x20]
	0x03AD8278 LDR X0, [X9]
	0x03AD827C LDR W9, [X0 + 0xE0]
	0x03AD8280 CBNZ W9, 0x3AD8288
	0x03AD8284 BL 0x1C16DFC
	0x03AD8288 MOV X0, X22
	0x03AD828C MOV X1, X31
	0x03AD8290 MOV X2, X31
	0x03AD8294 BL 0x3C3883C
	0x03AD8298 TBZ X0, 0x0, 0x3AD8354
	0x03AD829C LDR X0, [X27]
	0x03AD82A0 LDR X23, [X21]
	0x03AD82A4 LDR W8, [X0 + 0xE0]
	0x03AD82A8 CBNZ W8, 0x3AD82B4
	0x03AD82AC BL 0x1C16DFC
	0x03AD82B0 LDR X0, [X27]
	0x03AD82B4 LDR X8, [X0 + 0xB8]
	0x03AD82B8 LDR X8, [X8]
	0x03AD82BC CBZ X8, 0x3AD8938
	0x03AD82C0 LDR W9, [X8 + 0x18]
	0x03AD82C4 CMP X25, X9
	0x03AD82C8 B.CS 0x3AD89C8
	0x03AD82CC ADD X8, X8, X28
	0x03AD82D0 LDUR X9, [X8 - 0x4]
	0x03AD82D4 LDUR V0, [X8 - 0x14]
	0x03AD82D8 LDUR V1, [X8 - 0x24]
	0x03AD82DC LDUR V2, [X8 - 0x34]
	0x03AD82E0 ADD X1, X31, 0x120
	0x03AD82E4 MOV X0, X19
	0x03AD82E8 MOV X2, X31
	0x03AD82EC STR X9, [X31 + 0x150]
	0x03AD82F0 STP V1, V0, [X31 + 0x130]
	0x03AD82F4 STR V2, [X31 + 0x12]
	0x03AD82F8 BL 0x3B1AD50
	0x03AD82FC CBZ X23, 0x3AD8938
	0x03AD8300 MOV X22, X0
	0x03AD8304 CBZ X0, 0x3AD831C
	0x03AD8308 LDR X8, [X23]
	0x03AD830C MOV X0, X22
	0x03AD8310 LDR X1, [X8 + 0x40]
	0x03AD8314 BL 0x1C16E00
	0x03AD8318 CBZ X0, 0x3AD89CC
	0x03AD831C LDR W8, [X23 + 0x18]
	0x03AD8320 CMP X25, X8
	0x03AD8324 B.CS 0x3AD89C8
	0x03AD8328 ADD X8, X23, X25, 0x3, LSL
	0x03AD832C STR X22, [X8 + 0x20]
	0x03AD8330 LDR X8, [X19 + 0x368]
	0x03AD8334 CBZ X8, 0x3AD8938
	0x03AD8338 LDR X8, [X8 + 0x60]
	0x03AD833C CBZ X8, 0x3AD8938
	0x03AD8340 LDR W9, [X8 + 0x18]
	0x03AD8344 CMP X25, X9
	0x03AD8348 B.CS 0x3AD89C8
	0x03AD834C ADD X8, X8, X24
	0x03AD8350 STR X31, [X8 + 0x30]
	0x03AD8354 LDR X0, [X19 + 0x380]
	0x03AD8358 CBZ X0, 0x3AD8938
	0x03AD835C MOV X1, X31
	0x03AD8360 BL 0x3C3EA28
	0x03AD8364 LDR X8, [X21]
	0x03AD8368 CBZ X8, 0x3AD8938
	0x03AD836C LDR W9, [X8 + 0x18]
	0x03AD8370 CMP X25, X9
	0x03AD8374 B.CS 0x3AD89C8
	0x03AD8378 ADD X8, X8, X25, 0x3, LSL
	0x03AD837C LDR X0, [X8 + 0x20]
	0x03AD8380 CBZ X0, 0x3AD8938
	0x03AD8384 MOV X1, X31
	0x03AD8388 MOV V8.16B, V0.16B
	0x03AD838C MOV V9.16B, V1.16B
	0x03AD8390 BL 0x3CDB488
	0x03AD8394 CBZ X0, 0x3AD8938
	0x03AD8398 MOV X1, X31
	0x03AD839C BL 0x3C3EA28
	0x03AD83A0 FSUB S0, S8, S0
	0x03AD83A4 FSUB S1, S9, S1
	0x03AD83A8 FMUL S0, S0, S0
	0x03AD83AC FMUL S1, S1, S1
	0x03AD83B0 FADD S0, S0, S1
	0x03AD83B4 FCMP S0, S10
	0x03AD83B8 B.MI 0x3AD840C
	0x03AD83BC LDR X8, [X21]
	0x03AD83C0 CBZ X8, 0x3AD8938
	0x03AD83C4 LDR W9, [X8 + 0x18]
	0x03AD83C8 CMP X25, X9
	0x03AD83CC B.CS 0x3AD89C8
	0x03AD83D0 ADD X8, X8, X25, 0x3, LSL
	0x03AD83D4 LDR X0, [X8 + 0x20]
	0x03AD83D8 CBZ X0, 0x3AD8938
	0x03AD83DC MOV X1, X31
	0x03AD83E0 BL 0x3CDB488
	0x03AD83E4 LDR X8, [X19 + 0x380]
	0x03AD83E8 CBZ X8, 0x3AD8938
	0x03AD83EC MOV X22, X0
	0x03AD83F0 MOV X0, X8
	0x03AD83F4 MOV X1, X31
	0x03AD83F8 BL 0x3C3EA28
	0x03AD83FC CBZ X22, 0x3AD8938
	0x03AD8400 MOV X0, X22
	0x03AD8404 MOV X1, X31
	0x03AD8408 BL 0x3C3EAB8
	0x03AD840C LDR X8, [X21]
	0x03AD8410 CBZ X8, 0x3AD8938
	0x03AD8414 LDR W9, [X8 + 0x18]
	0x03AD8418 CMP X25, X9
	0x03AD841C B.CS 0x3AD89C8
	0x03AD8420 ADD X8, X8, X25, 0x3, LSL
	0x03AD8424 LDR X8, [X8 + 0x20]
	0x03AD8428 CBZ X8, 0x3AD8938
	0x03AD842C ADRP X9, 0x61B000
	0x03AD8430 LDR X9, [X9 + 0x598]
	0x03AD8434 LDR X22, [X8 + 0xF0]
	0x03AD8438 LDR X0, [X9]
	0x03AD843C LDR W9, [X0 + 0xE0]
	0x03AD8440 CBNZ W9, 0x3AD8448
	0x03AD8444 BL 0x1C16DFC
	0x03AD8448 MOV X0, X22
	0x03AD844C MOV X1, X31
	0x03AD8450 MOV X2, X31
	0x03AD8454 BL 0x3C3883C
	0x03AD8458 TBNZ X0, 0x0, 0x3AD84E4
	0x03AD845C LDR X8, [X21]
	0x03AD8460 CBZ X8, 0x3AD8938
	0x03AD8464 LDR W9, [X8 + 0x18]
	0x03AD8468 CMP X25, X9
	0x03AD846C B.CS 0x3AD89C8
	0x03AD8470 ADD X8, X8, X25, 0x3, LSL
	0x03AD8474 LDR X8, [X8 + 0x20]
	0x03AD8478 CBZ X8, 0x3AD8938
	0x03AD847C LDR X0, [X8 + 0xF0]
	0x03AD8480 CBZ X0, 0x3AD8938
	0x03AD8484 MOV X1, X31
	0x03AD8488 BL 0x3C385F8
	0x03AD848C LDR X8, [X27]
	0x03AD8490 MOV W22, W0
	0x03AD8494 LDR W9, [X8 + 0xE0]
	0x03AD8498 CBNZ W9, 0x3AD84A8
	0x03AD849C MOV X0, X8
	0x03AD84A0 BL 0x1C16DFC
	0x03AD84A4 LDR X8, [X27]
	0x03AD84A8 LDR X8, [X8 + 0xB8]
	0x03AD84AC LDR X8, [X8]
	0x03AD84B0 CBZ X8, 0x3AD8938
	0x03AD84B4 LDR W9, [X8 + 0x18]
	0x03AD84B8 CMP X25, X9
	0x03AD84BC B.CS 0x3AD89C8
	0x03AD84C0 ADD X8, X8, X28
	0x03AD84C4 LDUR X0, [X8 - 0x1C]
	0x03AD84C8 CBZ X0, 0x3AD8938
	0x03AD84CC MOV X1, X31
	0x03AD84D0 BL 0x3C385F8
	0x03AD84D4 CMP W22, W0
	0x03AD84D8 B.NE 0x3AD84E4
	0x03AD84DC LDR X0, [X27]
	0x03AD84E0 B 0x3AD859C
	0x03AD84E4 LDR X8, [X21]
	0x03AD84E8 CBZ X8, 0x3AD8938
	0x03AD84EC LDR W9, [X8 + 0x18]
	0x03AD84F0 CMP X25, X9
	0x03AD84F4 B.CS 0x3AD89C8
	0x03AD84F8 LDR X0, [X27]
	0x03AD84FC ADD X8, X8, X25, 0x3, LSL
	0x03AD8500 LDR X22, [X8 + 0x20]
	0x03AD8504 LDR W9, [X0 + 0xE0]
	0x03AD8508 CBNZ W9, 0x3AD8514
	0x03AD850C BL 0x1C16DFC
	0x03AD8510 LDR X0, [X27]
	0x03AD8514 LDR X8, [X0 + 0xB8]
	0x03AD8518 LDR X8, [X8]
	0x03AD851C CBZ X8, 0x3AD8938
	0x03AD8520 LDR W9, [X8 + 0x18]
	0x03AD8524 CMP X25, X9
	0x03AD8528 B.CS 0x3AD89C8
	0x03AD852C CBZ X22, 0x3AD8938
	0x03AD8530 ADD X8, X8, X28
	0x03AD8534 LDUR X1, [X8 - 0x1C]
	0x03AD8538 MOV X0, X22
	0x03AD853C MOV X2, X31
	0x03AD8540 BL 0x3B1A9C4
	0x03AD8544 LDR X8, [X21]
	0x03AD8548 CBZ X8, 0x3AD8938
	0x03AD854C LDR W9, [X8 + 0x18]
	0x03AD8550 CMP X25, X9
	0x03AD8554 B.CS 0x3AD89C8
	0x03AD8558 LDR X0, [X27]
	0x03AD855C LDR X9, [X0 + 0xB8]
	0x03AD8560 LDR X9, [X9]
	0x03AD8564 CBZ X9, 0x3AD8938
	0x03AD8568 LDR W10, [X9 + 0x18]
	0x03AD856C CMP X25, X10
	0x03AD8570 B.CS 0x3AD89C8
	0x03AD8574 ADD X8, X8, X25, 0x3, LSL
	0x03AD8578 LDR X10, [X8 + 0x20]
	0x03AD857C CBZ X10, 0x3AD8938
	0x03AD8580 ADD X9, X9, X28
	0x03AD8584 LDUR X11, [X9 - 0x2C]
	0x03AD8588 STR X11, [X10 + 0xD8]
	0x03AD858C LDR X8, [X8 + 0x20]
	0x03AD8590 CBZ X8, 0x3AD8938
	0x03AD8594 LDUR X9, [X9 - 0x24]
	0x03AD8598 STR X9, [X8 + 0xE0]
	0x03AD859C LDR W8, [X0 + 0xE0]
	0x03AD85A0 CBNZ W8, 0x3AD85AC
	0x03AD85A4 BL 0x1C16DFC
	0x03AD85A8 LDR X0, [X27]
	0x03AD85AC LDR X8, [X0 + 0xB8]
	0x03AD85B0 LDR X8, [X8]
	0x03AD85B4 CBZ X8, 0x3AD8938
	0x03AD85B8 LDR W9, [X8 + 0x18]
	0x03AD85BC CMP X25, X9
	0x03AD85C0 B.CS 0x3AD89C8
	0x03AD85C4 ADD X9, X8, X28
	0x03AD85C8 LDURB W9, [X9 - 0x13]
	0x03AD85CC CBZ W9, 0x3AD867C
	0x03AD85D0 LDR X9, [X21]
	0x03AD85D4 CBZ X9, 0x3AD8938
	0x03AD85D8 LDR W10, [X9 + 0x18]
	0x03AD85DC CMP X25, X10
	0x03AD85E0 B.CS 0x3AD89C8
	0x03AD85E4 ADD X9, X9, X25, 0x3, LSL
	0x03AD85E8 LDR W10, [X0 + 0xE0]
	0x03AD85EC LDR X22, [X9 + 0x20]
	0x03AD85F0 CBNZ W10, 0x3AD8608
	0x03AD85F4 BL 0x1C16DFC
	0x03AD85F8 LDR X8, [X27]
	0x03AD85FC LDR X8, [X8 + 0xB8]
	0x03AD8600 LDR X8, [X8]
	0x03AD8604 CBZ X8, 0x3AD8938
	0x03AD8608 LDR W9, [X8 + 0x18]
	0x03AD860C CMP X25, X9
	0x03AD8610 B.CS 0x3AD89C8
	0x03AD8614 CBZ X22, 0x3AD8938
	0x03AD8618 ADD X8, X8, X28
	0x03AD861C LDUR X1, [X8 - 0x1C]
	0x03AD8620 MOV X0, X22
	0x03AD8624 MOV X2, X31
	0x03AD8628 BL 0x3B1AA2C
	0x03AD862C LDR X8, [X21]
	0x03AD8630 CBZ X8, 0x3AD8938
	0x03AD8634 LDR W9, [X8 + 0x18]
	0x03AD8638 CMP X25, X9
	0x03AD863C B.CS 0x3AD89C8
	0x03AD8640 LDR X0, [X27]
	0x03AD8644 LDR X9, [X0 + 0xB8]
	0x03AD8648 LDR X9, [X9]
	0x03AD864C CBZ X9, 0x3AD8938
	0x03AD8650 LDR W10, [X9 + 0x18]
	0x03AD8654 CMP X25, X10
	0x03AD8658 B.CS 0x3AD89C8
	0x03AD865C ADD X8, X8, X25, 0x3, LSL
	0x03AD8660 LDR X8, [X8 + 0x20]
	0x03AD8664 CBZ X8, 0x3AD8938
	0x03AD8668 ADD X9, X9, X28
	0x03AD866C LDUR X9, [X9 - 0xC]
	0x03AD8670 STR X9, [X8 + 0x100]
	0x03AD8674 B 0x3AD867C
	0x03AD8678 LDR X0, [X27]
	0x03AD867C LDR W8, [X0 + 0xE0]
	0x03AD8680 CBNZ W8, 0x3AD868C
	0x03AD8684 BL 0x1C16DFC
	0x03AD8688 LDR X0, [X27]
	0x03AD868C LDR X8, [X0 + 0xB8]
	0x03AD8690 LDR X8, [X8]
	0x03AD8694 CBZ X8, 0x3AD8938
	0x03AD8698 LDR W9, [X8 + 0x18]
	0x03AD869C CMP X25, X9
	0x03AD86A0 B.CS 0x3AD89C8
	0x03AD86A4 LDR X9, [X19 + 0x368]
	0x03AD86A8 CBZ X9, 0x3AD8938
	0x03AD86AC LDR X22, [X9 + 0x60]
	0x03AD86B0 CBZ X22, 0x3AD8938
	0x03AD86B4 LDR W9, [X22 + 0x18]
	0x03AD86B8 CMP X25, X9
	0x03AD86BC B.CS 0x3AD89C8
	0x03AD86C0 ADD X9, X22, X24
	0x03AD86C4 LDR X10, [X9 + 0x30]
	0x03AD86C8 LDR W23, [X8, X28, LSL]
	0x03AD86CC CBZ X10, 0x3AD871C
	0x03AD86D0 LDR W8, [X10 + 0x18]
	0x03AD86D4 ADD X22, X9, 0x20
	0x03AD86D8 CMP W8, W23, LSL
	0x03AD86DC B.LT 0x3AD870C
	0x03AD86E0 CMP W23, 0x1
	0x03AD86E4 B.LT 0x3AD881C
	0x03AD86E8 LDRB W9, [X19 + 0x321]
	0x03AD86EC CBZ W9, 0x3AD881C
	0x03AD86F0 ADD W9, W8, 0x3
	0x03AD86F4 CMP W8, 0x0
	0x03AD86F8 CSEL W8, W9, W8, LT
	0x03AD86FC SBFM W8, W8, 0x2, 0x1F
	0x03AD8700 SUB W8, W8, W23
	0x03AD8704 CMP W8, 0x101
	0x03AD8708 B.LT 0x3AD881C
	0x03AD870C CMP W23, 0x400
	0x03AD8710 B.LE 0x3AD8798
	0x03AD8714 ADD W23, W23, 0x100
	0x03AD8718 B 0x3AD87A8
	0x03AD871C CBZ X25, 0x3AD87CC
	0x03AD8720 LDR X8, [X21]
	0x03AD8724 CBZ X8, 0x3AD8938
	0x03AD8728 LDR W9, [X8 + 0x18]
	0x03AD872C CMP X25, X9
	0x03AD8730 B.CS 0x3AD89C8
	0x03AD8734 ADD X8, X8, X25, 0x3, LSL
	0x03AD8738 LDR X0, [X8 + 0x20]
	0x03AD873C CBZ X0, 0x3AD8938
	0x03AD8740 MOV X1, X31
	0x03AD8744 BL 0x3B1AC04
	0x03AD8748 MOV X1, X0
	0x03AD874C MOVI V0.2D, 0x0
	0x03AD8750 ADD W2, W23, 0x1
	0x03AD8754 ADD X0, X31, 0xD0
	0x03AD8758 MOV X3, X31
	0x03AD875C STP V0, V0, [X31 + 0x100]
	0x03AD8760 STP V0, V0, [X31 + 0xE0]
	0x03AD8764 STR V0, [X31 + 0xD]
	0x03AD8768 BL 0x3B10F58
	0x03AD876C ADD X0, X31, 0x30
	0x03AD8770 ADD X1, X31, 0xD0
	0x03AD8774 MOVZ W2, 0x50
	0x03AD8778 BL 0x3EB1AC0
	0x03AD877C LDR W8, [X22 + 0x18]
	0x03AD8780 CMP X25, X8
	0x03AD8784 B.CS 0x3AD89C8
	0x03AD8788 ADD X8, X22, X24
	0x03AD878C ADD X0, X8, 0x20
	0x03AD8790 ADD X1, X31, 0x30
	0x03AD8794 B 0x3AD8814
	0x03AD8798 ADD W0, W23, 0x1
	0x03AD879C MOV X1, X31
	0x03AD87A0 BL 0x3C2B340
	0x03AD87A4 MOV W23, W0
	0x03AD87A8 LDR X0, [X29]
	0x03AD87AC LDR W8, [X0 + 0xE0]
	0x03AD87B0 CBNZ W8, 0x3AD87B8
	0x03AD87B4 BL 0x1C16DFC
	0x03AD87B8 MOV X0, X22
	0x03AD87BC MOV W1, W23
	0x03AD87C0 MOV X2, X31
	0x03AD87C4 BL 0x3B11BD0
	0x03AD87C8 B 0x3AD881C
	0x03AD87CC LDR X1, [X19 + 0x3A0]
	0x03AD87D0 MOVI V0.2D, 0x0
	0x03AD87D4 ADD W2, W23, 0x1
	0x03AD87D8 ADD X0, X31, 0xD0
	0x03AD87DC MOV X3, X31
	0x03AD87E0 STP V0, V0, [X31 + 0x100]
	0x03AD87E4 STP V0, V0, [X31 + 0xE0]
	0x03AD87E8 STR V0, [X31 + 0xD]
	0x03AD87EC BL 0x3B10F58
	0x03AD87F0 ADD X0, X31, 0x80
	0x03AD87F4 ADD X1, X31, 0xD0
	0x03AD87F8 MOVZ W2, 0x50
	0x03AD87FC BL 0x3EB1AC0
	0x03AD8800 LDR W8, [X22 + 0x18]
	0x03AD8804 CBZ W8, 0x3AD89C8
	0x03AD8808 ADD X8, X22, X24
	0x03AD880C ADD X0, X8, 0x20
	0x03AD8810 ADD X1, X31, 0x80
	0x03AD8814 MOVZ W2, 0x50
	0x03AD8818 BL 0x3EB1AC0
	0x03AD881C LDR X8, [X19 + 0x368]
	0x03AD8820 CBZ X8, 0x3AD8938
	0x03AD8824 LDR X22, [X8 + 0x60]
	0x03AD8828 CBZ X22, 0x3AD8938
	0x03AD882C LDR X0, [X27]
	0x03AD8830 LDR W8, [X0 + 0xE0]
	0x03AD8834 CBNZ W8, 0x3AD8840
	0x03AD8838 BL 0x1C16DFC
	0x03AD883C LDR X0, [X27]
	0x03AD8840 LDR X8, [X0 + 0xB8]
	0x03AD8844 LDR X8, [X8]
	0x03AD8848 CBZ X8, 0x3AD8938
	0x03AD884C LDR W9, [X8 + 0x18]
	0x03AD8850 CMP X25, X9
	0x03AD8854 B.CS 0x3AD89C8
	0x03AD8858 LDR W9, [X22 + 0x18]
	0x03AD885C CMP X25, X9
	0x03AD8860 B.CS 0x3AD89C8
	0x03AD8864 ADD X8, X8, X28
	0x03AD8868 LDUR X8, [X8 - 0x1C]
	0x03AD886C ADD X25, X25, 0x1
	0x03AD8870 ADD X9, X22, X24
	0x03AD8874 ADD X24, X24, 0x50
	0x03AD8878 CMP X26, X25
	0x03AD887C ADD X28, X28, 0x38
	0x03AD8880 STR X8, [X9 + 0x68]
	0x03AD8884 B.NE 0x3AD8250
	0x03AD8888 LDR X8, [X21]
	0x03AD888C CBZ X8, 0x3AD8938
	0x03AD8890 SBFM X9, X20, 0x3D, 0x1F
	0x03AD8894 ADD X23, X9, 0x20
	0x03AD8898 LDR W9, [X8 + 0x18]
	0x03AD889C CMP W20, W9
	0x03AD88A0 B.GE 0x3AD80B0
	0x03AD88A4 B.CS 0x3AD89C8
	0x03AD88A8 ADRP X9, 0x61B000
	0x03AD88AC LDR X9, [X9 + 0x598]
	0x03AD88B0 LDR X22, [X8, X23, LSL]
	0x03AD88B4 LDR X0, [X9]
	0x03AD88B8 LDR W9, [X0 + 0xE0]
	0x03AD88BC CBNZ W9, 0x3AD88C4
	0x03AD88C0 BL 0x1C16DFC
	0x03AD88C4 MOV X0, X22
	0x03AD88C8 MOV X1, X31
	0x03AD88CC MOV X2, X31
	0x03AD88D0 BL 0x3C354F8
	0x03AD88D4 TBZ X0, 0x0, 0x3AD80B0
	0x03AD88D8 LDR X8, [X19 + 0x368]
	0x03AD88DC CBZ X8, 0x3AD8938
	0x03AD88E0 LDR X8, [X8 + 0x60]
	0x03AD88E4 CBZ X8, 0x3AD8938
	0x03AD88E8 LDR W8, [X8 + 0x18]
	0x03AD88EC CMP W20, W8
	0x03AD88F0 B.GE 0x3AD8928
	0x03AD88F4 LDR X8, [X21]
	0x03AD88F8 CBZ X8, 0x3AD8938
	0x03AD88FC LDR W9, [X8 + 0x18]
	0x03AD8900 CMP W20, W9
	0x03AD8904 B.CS 0x3AD89C8
	0x03AD8908 LDR X0, [X8, X23, LSL]
	0x03AD890C CBZ X0, 0x3AD8938
	0x03AD8910 MOV X1, X31
	0x03AD8914 BL 0x3CDBD2C
	0x03AD8918 CBZ X0, 0x3AD8938
	0x03AD891C MOV X1, X31
	0x03AD8920 MOV X2, X31
	0x03AD8924 BL 0x3E22AB0
	0x03AD8928 LDR X8, [X21]
	0x03AD892C ADD W20, W20, 0x1
	0x03AD8930 ADD X23, X23, 0x8
	0x03AD8934 CBNZ X8, 0x3AD8898
	0x03AD8938 BL 0x1C16F20
	0x03AD893C ADRP X22, 0x61D000
	0x03AD8940 LDR X22, [X22 + 0x278]
	0x03AD8944 ADD X8, X19, 0x2E8
	0x03AD8948 ADRP X9, 0x61B000
	0x03AD894C LDR X9, [X9 + 0x598]
	0x03AD8950 LDR X21, [X8]
	0x03AD8954 LDR X0, [X9]
	0x03AD8958 LDR W9, [X0 + 0xE0]
	0x03AD895C CBNZ W9, 0x3AD8964
	0x03AD8960 BL 0x1C16DFC
	0x03AD8964 MOV X0, X21
	0x03AD8968 MOV X1, X31
	0x03AD896C MOV X2, X31
	0x03AD8970 BL 0x3C354F8
	0x03AD8974 TBZ X0, 0x0, 0x3AD72C0
	0x03AD8978 CBZ X21, 0x3AD8938
	0x03AD897C LDR X8, [X22]
	0x03AD8980 LDR X9, [X21]
	0x03AD8984 MOV X0, X21
	0x03AD8988 LDR X8, [X8 + 0xB8]
	0x03AD898C LDR X10, [X9 + 0x558]
	0x03AD8990 LDR X2, [X9 + 0x560]
	0x03AD8994 LDR X1, [X8]
	0x03AD8998 BLR X10
	0x03AD899C LDR X8, [X21]
	0x03AD89A0 MOV X0, X21
	0x03AD89A4 LDR X9, [X8 + 0x948]
	0x03AD89A8 LDR X1, [X8 + 0x950]
	0x03AD89AC BLR X9
	0x03AD89B0 LDR X0, [X21 + 0x368]
	0x03AD89B4 CBZ X0, 0x3AD8938
	0x03AD89B8 MOV X1, X31
	0x03AD89BC BL 0x3B1C1C4
	0x03AD89C0 ADD X8, X21, 0x2E8
	0x03AD89C4 B 0x3AD8948
	0x03AD89C8 BL 0x1C16F28
	0x03AD89CC BL 0x1C16F44
	0x03AD89D0 MOV X1, X31
	0x03AD89D4 BL 0x1C16DEC
	0x03AD89D8 STP X30, X21, [X31 - 0x20]!
	0x03AD89DC STP X20, X19, [X31 + 0x10]
	0x03AD89E0 ADRP X21, 0x90A000
	0x03AD89E4 ADRP X20, 0x61B000
	0x03AD89E8 LDRB W8, [X21 + 0x527]
	0x03AD89EC LDR X20, [X20 + 0x598]
	0x03AD89F0 MOV X19, X0
	0x03AD89F4 TBNZ X8, 0x0, 0x3AD8A0C
	0x03AD89F8 ADRP X0, 0x61B000
	0x03AD89FC LDR X0, [X0 + 0x598]
	0x03AD8A00 BL 0x1C16CF4
	0x03AD8A04 MOVZ W8, 0x1
	0x03AD8A08 STRB W8, [X21 + 0x527]
	0x03AD8A0C MOV X0, X19
	0x03AD8A10 MOV X1, X31
	0x03AD8A14 BL 0x3AF8E0C
	0x03AD8A18 LDR X8, [X20]
	0x03AD8A1C MOV X20, X0
	0x03AD8A20 LDR W9, [X8 + 0xE0]
	0x03AD8A24 CBNZ W9, 0x3AD8A30
	0x03AD8A28 MOV X0, X8
	0x03AD8A2C BL 0x1C16DFC
	0x03AD8A30 MOV X0, X20
	0x03AD8A34 MOV X1, X31
	0x03AD8A38 MOV X2, X31
	0x03AD8A3C BL 0x3C354F8
	0x03AD8A40 TBZ X0, 0x0, 0x3AD8AA4
	0x03AD8A44 LDR X0, [X19 + 0x380]
	0x03AD8A48 CBZ X0, 0x3AD8AB0
	0x03AD8A4C MOV X1, X31
	0x03AD8A50 BL 0x3C3E51C
	0x03AD8A54 LDR V0, [X19 + 0x340]
	0x03AD8A58 LDR V1, [X19 + 0x348]
	0x03AD8A5C LDR X0, [X19 + 0x380]
	0x03AD8A60 STR S2, [X19 + 0x388]
	0x03AD8A64 MOV V2.S[1], V3.S[0]
	0x03AD8A68 FSUB V0.2S, V2.2S, V0.2S
	0x03AD8A6C FSUB V0.2S, V0.2S, V1.2S
	0x03AD8A70 STR D0, [X19 + 0x358]
	0x03AD8A74 STR S3, [X19 + 0x38C]
	0x03AD8A78 CBZ X0, 0x3AD8AB0
	0x03AD8A7C MOV X1, X31
	0x03AD8A80 BL 0x3C3EA28
	0x03AD8A84 LDR X8, [X19]
	0x03AD8A88 STR S0, [X19 + 0x390]
	0x03AD8A8C STR S1, [X19 + 0x394]
	0x03AD8A90 MOV X0, X19
	0x03AD8A94 LDR X9, [X8 + 0x7C8]
	0x03AD8A98 LDR X1, [X8 + 0x7D0]
	0x03AD8A9C BLR X9
	0x03AD8AA0 STR X0, [X19 + 0x718]
	0x03AD8AA4 LDP X20, X19, [X31 + 0x10]
	0x03AD8AA8 LDP X30, X21, [X31], #0x20
	0x03AD8AAC RET
	0x03AD8AB0 BL 0x1C16F20
	0x03AD8AB4 STP X30, X19, [X31 - 0x10]!
	0x03AD8AB8 LDR X8, [X0]
	0x03AD8ABC MOVZ W9, 0x1
	0x03AD8AC0 STRB W9, [X0 + 0x370]
	0x03AD8AC4 MOV X19, X0
	0x03AD8AC8 LDR X9, [X8 + 0x2F8]
	0x03AD8ACC LDR X1, [X8 + 0x300]
	0x03AD8AD0 BLR X9
	0x03AD8AD4 LDR X8, [X19]
	0x03AD8AD8 MOV X0, X19
	0x03AD8ADC LDR X2, [X8 + 0x2E8]
	0x03AD8AE0 LDR X1, [X8 + 0x2F0]
	0x03AD8AE4 LDP X30, X19, [X31], #0x10
	0x03AD8AE8 BR X2
	0x03AD8AEC STR X30, [X31 - 0x20]!
	0x03AD8AF0 STP X20, X19, [X31 + 0x10]
	0x03AD8AF4 ADRP X20, 0x90A000
	0x03AD8AF8 LDRB W8, [X20 + 0x528]
	0x03AD8AFC MOV X19, X0
	0x03AD8B00 TBNZ X8, 0x0, 0x3AD8B24
	0x03AD8B04 ADRP X0, 0x61B000
	0x03AD8B08 LDR X0, [X0 + 0x598]
	0x03AD8B0C BL 0x1C16CF4
	0x03AD8B10 ADRP X0, 0x680000
	0x03AD8B14 LDR X0, [X0 + 0x568]
	0x03AD8B18 BL 0x1C16CF4
	0x03AD8B1C MOVZ W8, 0x1
	0x03AD8B20 STRB W8, [X20 + 0x528]
	0x03AD8B24 MOV X0, X19
	0x03AD8B28 MOV X1, X31
	0x03AD8B2C BL 0x3E37AEC
	0x03AD8B30 MOV X0, X19
	0x03AD8B34 MOV X1, X31
	0x03AD8B38 BL 0x3CDADE8
	0x03AD8B3C LDRB W8, [X19 + 0x3FD]
	0x03AD8B40 STR X0, [X19 + 0x728]
	0x03AD8B44 CBZ W8, 0x3AD8BA4
	0x03AD8B48 MOV X0, X19
	0x03AD8B4C MOV X1, X31
	0x03AD8B50 BL 0x3C32454
	0x03AD8B54 TBZ X0, 0x0, 0x3AD8BA4
	0x03AD8B58 ADRP X8, 0x61B000
	0x03AD8B5C LDR X8, [X8 + 0x598]
	0x03AD8B60 LDR X20, [X19 + 0x728]
	0x03AD8B64 LDR X0, [X8]
	0x03AD8B68 LDR W8, [X0 + 0xE0]
	0x03AD8B6C CBNZ W8, 0x3AD8B74
	0x03AD8B70 BL 0x1C16DFC
	0x03AD8B74 MOV X0, X20
	0x03AD8B78 MOV X1, X31
	0x03AD8B7C MOV X2, X31
	0x03AD8B80 BL 0x3C3883C
	0x03AD8B84 TBNZ X0, 0x0, 0x3AD8BB0
	0x03AD8B88 LDR X0, [X19 + 0x728]
	0x03AD8B8C CBZ X0, 0x3AD8C08
	0x03AD8B90 MOV X1, X31
	0x03AD8B94 BL 0x3C323D4
	0x03AD8B98 TBZ X0, 0x0, 0x3AD8BB0
	0x03AD8B9C LDRB W8, [X19 + 0x320]
	0x03AD8BA0 CBZ W8, 0x3AD8BDC
	0x03AD8BA4 LDP X20, X19, [X31 + 0x10]
	0x03AD8BA8 LDR X30, [X31], #0x20
	0x03AD8BAC RET
	0x03AD8BB0 ADRP X8, 0x680000
	0x03AD8BB4 LDR X8, [X8 + 0x568]
	0x03AD8BB8 LDR X0, [X8]
	0x03AD8BBC LDR W8, [X0 + 0xE0]
	0x03AD8BC0 CBNZ W8, 0x3AD8BC8
	0x03AD8BC4 BL 0x1C16DFC
	0x03AD8BC8 MOV X0, X19
	0x03AD8BCC LDP X20, X19, [X31 + 0x10]
	0x03AD8BD0 MOV X1, X31
	0x03AD8BD4 LDR X30, [X31], #0x20
	0x03AD8BD8 B 0x3B20A78
	0x03AD8BDC ADRP X8, 0x680000
	0x03AD8BE0 LDR X8, [X8 + 0x568]
	0x03AD8BE4 LDR X0, [X8]
	0x03AD8BE8 LDR W8, [X0 + 0xE0]
	0x03AD8BEC CBNZ W8, 0x3AD8BF4
	0x03AD8BF0 BL 0x1C16DFC
	0x03AD8BF4 MOV X0, X19
	0x03AD8BF8 LDP X20, X19, [X31 + 0x10]
	0x03AD8BFC MOV X1, X31
	0x03AD8C00 LDR X30, [X31], #0x20
	0x03AD8C04 B 0x3B20260
	0x03AD8C08 BL 0x1C16F20
	0x03AD8C0C STP X30, X19, [X31 - 0x10]!
	0x03AD8C10 MOV X1, X31
	0x03AD8C14 MOV X19, X0
	0x03AD8C18 BL 0x3E37A98
	0x03AD8C1C MOV X0, X19
	0x03AD8C20 MOV X1, X31
	0x03AD8C24 BL 0x3CDADE8
	0x03AD8C28 LDR X8, [X19]
	0x03AD8C2C STR X0, [X19 + 0x728]
	0x03AD8C30 MOV X0, X19
	0x03AD8C34 LDR X9, [X8 + 0x8A8]
	0x03AD8C38 LDR X1, [X8 + 0x8B0]
	0x03AD8C3C BLR X9
	0x03AD8C40 MOVZ W8, 0x1
	0x03AD8C44 STRB W8, [X19 + 0x370]
	0x03AD8C48 LDP X30, X19, [X31], #0x10
	0x03AD8C4C RET
	0x03AD8C50 STR D8, [X31 - 0x30]!
	0x03AD8C54 STP X30, X21, [X31 + 0x10]
	0x03AD8C58 STP X20, X19, [X31 + 0x20]
	0x03AD8C5C ADRP X20, 0x90A000
	0x03AD8C60 LDRB W8, [X20 + 0x529]
	0x03AD8C64 MOV X19, X0
	0x03AD8C68 TBNZ X8, 0x0, 0x3AD8C80
	0x03AD8C6C ADRP X0, 0x61B000
	0x03AD8C70 LDR X0, [X0 + 0x598]
	0x03AD8C74 BL 0x1C16CF4
	0x03AD8C78 MOVZ W8, 0x1
	0x03AD8C7C STRB W8, [X20 + 0x529]
	0x03AD8C80 MOV X0, X19
	0x03AD8C84 MOV X1, X31
	0x03AD8C88 BL 0x3C32ECC
	0x03AD8C8C CBZ X0, 0x3AD8E1C
	0x03AD8C90 MOV X1, X31
	0x03AD8C94 BL 0x3C35834
	0x03AD8C98 TBZ X0, 0x0, 0x3AD8DA8
	0x03AD8C9C ADRP X21, 0x61B000
	0x03AD8CA0 LDR X21, [X21 + 0x598]
	0x03AD8CA4 LDR X20, [X19 + 0x728]
	0x03AD8CA8 LDR X0, [X21]
	0x03AD8CAC LDR W8, [X0 + 0xE0]
	0x03AD8CB0 CBNZ W8, 0x3AD8CB8
	0x03AD8CB4 BL 0x1C16DFC
	0x03AD8CB8 MOV X0, X20
	0x03AD8CBC MOV X1, X31
	0x03AD8CC0 MOV X2, X31
	0x03AD8CC4 BL 0x3C354F8
	0x03AD8CC8 TBZ X0, 0x0, 0x3AD8CE8
	0x03AD8CCC LDR X0, [X19 + 0x728]
	0x03AD8CD0 CBZ X0, 0x3AD8E1C
	0x03AD8CD4 LDR V8, [X19 + 0x730]
	0x03AD8CD8 MOV X1, X31
	0x03AD8CDC BL 0x3E24614
	0x03AD8CE0 FCMP S8, S0
	0x03AD8CE4 B.NE 0x3AD8DB8
	0x03AD8CE8 MOV X0, X19
	0x03AD8CEC MOV X1, X31
	0x03AD8CF0 BL 0x3AF8E0C
	0x03AD8CF4 LDR X8, [X21]
	0x03AD8CF8 MOV X20, X0
	0x03AD8CFC LDR W9, [X8 + 0xE0]
	0x03AD8D00 CBNZ W9, 0x3AD8D0C
	0x03AD8D04 MOV X0, X8
	0x03AD8D08 BL 0x1C16DFC
	0x03AD8D0C MOV X0, X20
	0x03AD8D10 MOV X1, X31
	0x03AD8D14 MOV X2, X31
	0x03AD8D18 BL 0x3C354F8
	0x03AD8D1C TBZ X0, 0x0, 0x3AD8DCC
	0x03AD8D20 LDR X0, [X19 + 0x380]
	0x03AD8D24 CBZ X0, 0x3AD8E1C
	0x03AD8D28 MOV X1, X31
	0x03AD8D2C BL 0x3C3E51C
	0x03AD8D30 LDR V0, [X19 + 0x388]
	0x03AD8D34 ADRP X8, 0xFFFFFFFFFD011000
	0x03AD8D38 LDR V8, [X8 + 0xF28]
	0x03AD8D3C FABD S0, S2, S2
	0x03AD8D40 FCMP S0, S8
	0x03AD8D44 B.PL 0x3AD8DCC
	0x03AD8D48 LDR X0, [X19 + 0x380]
	0x03AD8D4C CBZ X0, 0x3AD8E1C
	0x03AD8D50 MOV X1, X31
	0x03AD8D54 BL 0x3C3E51C
	0x03AD8D58 LDR V0, [X19 + 0x38C]
	0x03AD8D5C FABD S0, S3, S3
	0x03AD8D60 FCMP S0, S8
	0x03AD8D64 B.PL 0x3AD8DCC
	0x03AD8D68 LDR X0, [X19 + 0x380]
	0x03AD8D6C CBZ X0, 0x3AD8E1C
	0x03AD8D70 MOV X1, X31
	0x03AD8D74 BL 0x3C3EA28
	0x03AD8D78 LDR V1, [X19 + 0x390]
	0x03AD8D7C FABD S0, S0, S0
	0x03AD8D80 FCMP S0, S8
	0x03AD8D84 B.PL 0x3AD8DCC
	0x03AD8D88 LDR X0, [X19 + 0x380]
	0x03AD8D8C CBZ X0, 0x3AD8E1C
	0x03AD8D90 MOV X1, X31
	0x03AD8D94 BL 0x3C3EA28
	0x03AD8D98 LDR V0, [X19 + 0x394]
	0x03AD8D9C FABD S0, S1, S1
	0x03AD8DA0 FCMP S0, S8
	0x03AD8DA4 B.PL 0x3AD8DCC
	0x03AD8DA8 LDP X20, X19, [X31 + 0x20]
	0x03AD8DAC LDP X30, X21, [X31 + 0x10]
	0x03AD8DB0 LDR V8, [X31], #0x30
	0x03AD8DB4 RET
	0x03AD8DB8 LDR X0, [X19 + 0x728]
	0x03AD8DBC CBZ X0, 0x3AD8E1C
	0x03AD8DC0 MOV X1, X31
	0x03AD8DC4 BL 0x3E24614
	0x03AD8DC8 STR S0, [X19 + 0x730]
	0x03AD8DCC LDR X8, [X19]
	0x03AD8DD0 MOV X0, X19
	0x03AD8DD4 LDR X9, [X8 + 0x8A8]
	0x03AD8DD8 LDR X1, [X8 + 0x8B0]
	0x03AD8DDC BLR X9
	0x03AD8DE0 MOV X0, X19
	0x03AD8DE4 BL 0x3AD33F8
	0x03AD8DE8 LDR X8, [X19]
	0x03AD8DEC MOV X0, X19
	0x03AD8DF0 LDR X9, [X8 + 0x2F8]
	0x03AD8DF4 LDR X1, [X8 + 0x300]
	0x03AD8DF8 BLR X9
	0x03AD8DFC LDR X8, [X19]
	0x03AD8E00 MOV X0, X19
	0x03AD8E04 LDP X20, X19, [X31 + 0x20]
	0x03AD8E08 LDP X30, X21, [X31 + 0x10]
	0x03AD8E0C LDR X2, [X8 + 0x2E8]
	0x03AD8E10 LDR X1, [X8 + 0x2F0]
	0x03AD8E14 LDR V8, [X31], #0x30
	0x03AD8E18 BR X2
	0x03AD8E1C BL 0x1C16F20
	0x03AD8E20 STR D8, [X31 - 0x20]!
	0x03AD8E24 STP X30, X19, [X31 + 0x10]
	0x03AD8E28 LDRB W8, [X0 + 0x370]
	0x03AD8E2C MOV X19, X0
	0x03AD8E30 CBNZ W8, 0x3AD8E88
	0x03AD8E34 LDR X0, [X19 + 0x380]
	0x03AD8E38 CBZ X0, 0x3AD8EB4
	0x03AD8E3C MOV X1, X31
	0x03AD8E40 BL 0x3C40EA8
	0x03AD8E44 LDR V0, [X19 + 0x710]
	0x03AD8E48 ADRP X8, 0xFFFFFFFFFD011000
	0x03AD8E4C LDR V2, [X8 + 0xF28]
	0x03AD8E50 MOV V8.16B, V1.16B
	0x03AD8E54 FABD S1, S1, S1
	0x03AD8E58 FCMP S1, S2
	0x03AD8E5C B.LE 0x3AD8E88
	0x03AD8E60 LDR X8, [X19 + 0x478]
	0x03AD8E64 CBZ X8, 0x3AD8EB4
	0x03AD8E68 LDR W9, [X8 + 0x18]
	0x03AD8E6C CBZ W9, 0x3AD8EB8
	0x03AD8E70 LDR W8, [X8 + 0x20]
	0x03AD8E74 CBZ W8, 0x3AD8E88
	0x03AD8E78 FDIV S0, S8, S0
	0x03AD8E7C MOV X0, X19
	0x03AD8E80 BL 0x3AD8EBC
	0x03AD8E84 STR S8, [X19 + 0x710]
	0x03AD8E88 LDRB W8, [X19 + 0x371]
	0x03AD8E8C CBZ W8, 0x3AD8EA8
	0x03AD8E90 MOVZ W8, 0x1
	0x03AD8E94 STRB W8, [X19 + 0x370]
	0x03AD8E98 MOV X0, X19
	0x03AD8E9C LDP X30, X19, [X31 + 0x10]
	0x03AD8EA0 LDR V8, [X31], #0x20
	0x03AD8EA4 B 0x3AD3184
	0x03AD8EA8 LDP X30, X19, [X31 + 0x10]
	0x03AD8EAC LDR V8, [X31], #0x20
	0x03AD8EB0 RET
	0x03AD8EB4 BL 0x1C16F20
	0x03AD8EB8 BL 0x1C16F28
	0x03AD8EBC STP X30, X23, [X31 - 0x30]!
	0x03AD8EC0 STP X22, X21, [X31 + 0x10]
	0x03AD8EC4 STP X20, X19, [X31 + 0x20]
	0x03AD8EC8 MOVZ W8, 0xFF800000
	0x03AD8ECC FMOV S1, W8
	0x03AD8ED0 FCMP S0, S1
	0x03AD8ED4 MOV X19, X0
	0x03AD8ED8 B.EQ 0x3AD90A0
	0x03AD8EDC FCMP S0, 0x0
	0x03AD8EE0 B.EQ 0x3AD90A0
	0x03AD8EE4 MOVZ W8, 0x7F800000
	0x03AD8EE8 FMOV S1, W8
	0x03AD8EEC FCMP S0, S1
	0x03AD8EF0 B.EQ 0x3AD90A0
	0x03AD8EF4 LDR X8, [X19 + 0x368]
	0x03AD8EF8 CBZ X8, 0x3AD90C0
	0x03AD8EFC LDR W9, [X8 + 0x34]
	0x03AD8F00 CMP W9, 0x1
	0x03AD8F04 B.LT 0x3AD8F74
	0x03AD8F08 LDR X11, [X8 + 0x60]
	0x03AD8F0C MOV W10, W31
	0x03AD8F10 FABS S0, S0
	0x03AD8F14 MOVZ W12, 0x50
	0x03AD8F18 CBZ X11, 0x3AD90C0
	0x03AD8F1C LDR W13, [X11 + 0x18]
	0x03AD8F20 CMP W10, W13
	0x03AD8F24 B.CS 0x3AD90BC
	0x03AD8F28 SMADDL X13, X10, X12, X11
	0x03AD8F2C LDR X15, [X13 + 0x50]
	0x03AD8F30 CBZ X15, 0x3AD90C0
	0x03AD8F34 LDR W13, [X15 + 0x18]
	0x03AD8F38 UBFM X14, X13, 0x20, 0x1F
	0x03AD8F3C CMP X14, 0x1
	0x03AD8F40 B.LT 0x3AD8F68
	0x03AD8F44 SXTW X14, W13
	0x03AD8F48 ADD X15, X15, 0x24
	0x03AD8F4C CBZ X13, 0x3AD90BC
	0x03AD8F50 LDR V1, [X15]
	0x03AD8F54 SUB X14, X14, 0x1
	0x03AD8F58 SUB X13, X13, 0x1
	0x03AD8F5C FMUL S1, S0, S1
	0x03AD8F60 STR S1, [X15], #0x8
	0x03AD8F64 CBNZ X14, 0x3AD8F4C
	0x03AD8F68 ADD W10, W10, 0x1
	0x03AD8F6C CMP W10, W9
	0x03AD8F70 B.LT 0x3AD8F18
	0x03AD8F74 CMP W9, 0x1
	0x03AD8F78 B.LT 0x3AD9090
	0x03AD8F7C MOVZ W22, 0x4
	0x03AD8F80 MOVZ W21, 0x50
	0x03AD8F84 SUBS X23, X22, 0x4
	0x03AD8F88 B.NE 0x3AD8FC0
	0x03AD8F8C LDR X8, [X8 + 0x60]
	0x03AD8F90 CBZ X8, 0x3AD90C0
	0x03AD8F94 LDR W9, [X8 + 0x18]
	0x03AD8F98 CBZ W9, 0x3AD90BC
	0x03AD8F9C LDR X0, [X19 + 0x3A0]
	0x03AD8FA0 CBZ X0, 0x3AD90C0
	0x03AD8FA4 LDR X1, [X8 + 0x50]
	0x03AD8FA8 MOV X2, X31
	0x03AD8FAC BL 0x3C181B8
	0x03AD8FB0 LDR X0, [X19 + 0x720]
	0x03AD8FB4 CBZ X0, 0x3AD90C0
	0x03AD8FB8 LDR X1, [X19 + 0x3A0]
	0x03AD8FBC B 0x3AD9068
	0x03AD8FC0 LDR X8, [X19 + 0x708]
	0x03AD8FC4 CBZ X8, 0x3AD90C0
	0x03AD8FC8 LDR W9, [X8 + 0x18]
	0x03AD8FCC CMP X23, X9
	0x03AD8FD0 B.CS 0x3AD90BC
	0x03AD8FD4 LDR X0, [X8, X22, LSL #3]
	0x03AD8FD8 CBZ X0, 0x3AD90C0
	0x03AD8FDC MOV X1, X31
	0x03AD8FE0 BL 0x3B1AC04
	0x03AD8FE4 LDR X8, [X19 + 0x368]
	0x03AD8FE8 CBZ X8, 0x3AD90C0
	0x03AD8FEC LDR X8, [X8 + 0x60]
	0x03AD8FF0 CBZ X8, 0x3AD90C0
	0x03AD8FF4 LDR W9, [X8 + 0x18]
	0x03AD8FF8 CMP X23, X9
	0x03AD8FFC B.CS 0x3AD90BC
	0x03AD9000 CBZ X0, 0x3AD90C0
	0x03AD9004 LDR X1, [X8, X21, LSL]
	0x03AD9008 MOV X2, X31
	0x03AD900C BL 0x3C181B8
	0x03AD9010 LDR X8, [X19 + 0x708]
	0x03AD9014 CBZ X8, 0x3AD90C0
	0x03AD9018 LDR W9, [X8 + 0x18]
	0x03AD901C CMP X23, X9
	0x03AD9020 B.CS 0x3AD90BC
	0x03AD9024 LDR X0, [X8, X22, LSL #3]
	0x03AD9028 CBZ X0, 0x3AD90C0
	0x03AD902C MOV X1, X31
	0x03AD9030 BL 0x3CDBD2C
	0x03AD9034 LDR X8, [X19 + 0x708]
	0x03AD9038 CBZ X8, 0x3AD90C0
	0x03AD903C LDR W9, [X8 + 0x18]
	0x03AD9040 CMP X23, X9
	0x03AD9044 B.CS 0x3AD90BC
	0x03AD9048 MOV X20, X0
	0x03AD904C LDR X0, [X8, X22, LSL #3]
	0x03AD9050 CBZ X0, 0x3AD90C0
	0x03AD9054 MOV X1, X31
	0x03AD9058 BL 0x3B1AC04
	0x03AD905C CBZ X20, 0x3AD90C0
	0x03AD9060 MOV X1, X0
	0x03AD9064 MOV X0, X20
	0x03AD9068 MOV X2, X31
	0x03AD906C BL 0x3E22AB0
	0x03AD9070 LDR X8, [X19 + 0x368]
	0x03AD9074 CBZ X8, 0x3AD90C0
	0x03AD9078 LDRSW X9, [X8 + 0x34]
	0x03AD907C SUB X10, X22, 0x3
	0x03AD9080 ADD X22, X22, 0x1
	0x03AD9084 ADD X21, X21, 0x50
	0x03AD9088 CMP X10, X9
	0x03AD908C B.LT 0x3AD8F84
	0x03AD9090 LDP X20, X19, [X31 + 0x20]
	0x03AD9094 LDP X22, X21, [X31 + 0x10]
	0x03AD9098 LDP X30, X23, [X31], #0x30
	0x03AD909C RET
	0x03AD90A0 MOVZ W8, 0x1
	0x03AD90A4 STRB W8, [X19 + 0x370]
	0x03AD90A8 MOV X0, X19
	0x03AD90AC LDP X20, X19, [X31 + 0x20]
	0x03AD90B0 LDP X22, X21, [X31 + 0x10]
	0x03AD90B4 LDP X30, X23, [X31], #0x30
	0x03AD90B8 B 0x3AD3184
	0x03AD90BC BL 0x1C16F28
	0x03AD90C0 BL 0x1C16F20
	0x03AD90C4 STP X30, X21, [X31 - 0x20]!
	0x03AD90C8 STP X20, X19, [X31 + 0x10]
	0x03AD90CC ADRP X21, 0x909000
	0x03AD90D0 ADRP X20, 0x61A000
	0x03AD90D4 LDRB W8, [X21 + 0x52B]
	0x03AD90D8 LDR X20, [X20 + 0x598]
	0x03AD90DC MOV X19, X0
	0x03AD90E0 TBNZ X8, 0x0, 0x3AD90F8
	0x03AD90E4 ADRP X0, 0x61A000
	0x03AD90E8 LDR X0, [X0 + 0x598]
	0x03AD90EC BL 0x1C16CF4
	0x03AD90F0 MOVZ W8, 0x1
	0x03AD90F4 STRB W8, [X21 + 0x52B]
	0x03AD90F8 LDR X0, [X20]
	0x03AD90FC LDR X20, [X19 + 0x380]
	0x03AD9100 LDR W8, [X0 + 0xE0]
	0x03AD9104 CBNZ W8, 0x3AD910C
	0x03AD9108 BL 0x1C16DFC
	0x03AD910C MOV X0, X20
	0x03AD9110 MOV X1, X31
	0x03AD9114 MOV X2, X31
	0x03AD9118 BL 0x3C3883C
	0x03AD911C TBZ X0, 0x0, 0x3AD9134
	0x03AD9120 MOV X0, X19
	0x03AD9124 MOV X1, X31
	0x03AD9128 BL 0x3AF8E0C
	0x03AD912C STR X0, [X19 + 0x380]
	0x03AD9130 B 0x3AD9138
	0x03AD9134 LDR X0, [X19 + 0x380]
	0x03AD9138 CBZ X0, 0x3AD9158
	0x03AD913C LDR X1, [X19 + 0x718]
	0x03AD9140 MOV X2, X31
	0x03AD9144 BL 0x3C3EF78
	0x03AD9148 LDR X0, [X19 + 0x718]
	0x03AD914C LDP X20, X19, [X31 + 0x10]
	0x03AD9150 LDP X30, X21, [X31], #0x20
	0x03AD9154 RET
	0x03AD9158 BL 0x1C16F20
	0x03AD915C STR X30, [X31 - 0x40]!
	0x03AD9160 STP X24, X23, [X31 + 0x10]
	0x03AD9164 STP X22, X21, [X31 + 0x20]
	0x03AD9168 STP X20, X19, [X31 + 0x30]
	0x03AD916C ADRP X21, 0x909000
	0x03AD9170 LDRB W8, [X21 + 0x52C]
	0x03AD9174 MOV W19, W1
	0x03AD9178 MOV X20, X0
	0x03AD917C TBNZ X8, 0x0, 0x3AD9194
	0x03AD9180 ADRP X0, 0x61A000
	0x03AD9184 LDR X0, [X0 + 0x598]
	0x03AD9188 BL 0x1C16CF4
	0x03AD918C MOVZ W8, 0x1
	0x03AD9190 STRB W8, [X21 + 0x52C]
	0x03AD9194 LDR X8, [X20 + 0x708]
	0x03AD9198 CBZ X8, 0x3AD9250
	0x03AD919C ADRP X22, 0x61A000
	0x03AD91A0 LDR X22, [X22 + 0x598]
	0x03AD91A4 MOVZ W23, 0x5
	0x03AD91A8 LDR W9, [X8 + 0x18]
	0x03AD91AC SUB X24, X23, 0x4
	0x03AD91B0 CMP W24, W9
	0x03AD91B4 B.GE 0x3AD9254
	0x03AD91B8 CMP W24, W9
	0x03AD91BC B.CS 0x3AD9268
	0x03AD91C0 LDR X0, [X22]
	0x03AD91C4 LDR X21, [X8, X23, LSL #3]
	0x03AD91C8 LDR W9, [X0 + 0xE0]
	0x03AD91CC CBNZ W9, 0x3AD91D4
	0x03AD91D0 BL 0x1C16DFC
	0x03AD91D4 MOV X0, X21
	0x03AD91D8 MOV X1, X31
	0x03AD91DC MOV X2, X31
	0x03AD91E0 BL 0x3C354F8
	0x03AD91E4 TBZ X0, 0x0, 0x3AD9254
	0x03AD91E8 LDR X8, [X20 + 0x708]
	0x03AD91EC CBZ X8, 0x3AD9250
	0x03AD91F0 LDR W9, [X8 + 0x18]
	0x03AD91F4 CMP W24, W9
	0x03AD91F8 B.CS 0x3AD9268
	0x03AD91FC LDR X0, [X8, X23, LSL #3]
	0x03AD9200 CBZ X0, 0x3AD9250
	0x03AD9204 MOV X1, X31
	0x03AD9208 BL 0x3C323D4
	0x03AD920C AND W8, W0, 0x1
	0x03AD9210 AND W9, W19, 0x1
	0x03AD9214 CMP W8, W9
	0x03AD9218 B.EQ 0x3AD9244
	0x03AD921C LDR X8, [X20 + 0x708]
	0x03AD9220 CBZ X8, 0x3AD9250
	0x03AD9224 LDR W9, [X8 + 0x18]
	0x03AD9228 CMP W24, W9
	0x03AD922C B.CS 0x3AD9268
	0x03AD9230 LDR X0, [X8, X23, LSL #3]
	0x03AD9234 CBZ X0, 0x3AD9250
	0x03AD9238 AND W1, W19, 0x1
	0x03AD923C MOV X2, X31
	0x03AD9240 BL 0x3C32410
	0x03AD9244 LDR X8, [X20 + 0x708]
	0x03AD9248 ADD X23, X23, 0x1
	0x03AD924C CBNZ X8, 0x3AD91A8
	0x03AD9250 BL 0x1C16F20
	0x03AD9254 LDP X20, X19, [X31 + 0x30]
	0x03AD9258 LDP X22, X21, [X31 + 0x20]
	0x03AD925C LDP X24, X23, [X31 + 0x10]
	0x03AD9260 LDR X30, [X31], #0x40
	0x03AD9264 RET
	0x03AD9268 BL 0x1C16F28
	0x03AD926C STP X30, X23, [X31 - 0x30]!
	0x03AD9270 STP X22, X21, [X31 + 0x10]
	0x03AD9274 STP X20, X19, [X31 + 0x20]
	0x03AD9278 ADRP X20, 0x909000
	0x03AD927C LDRB W8, [X20 + 0x52D]
	0x03AD9280 MOV X19, X0
	0x03AD9284 TBNZ X8, 0x0, 0x3AD929C
	0x03AD9288 ADRP X0, 0x61A000
	0x03AD928C LDR X0, [X0 + 0x598]
	0x03AD9290 BL 0x1C16CF4
	0x03AD9294 MOVZ W8, 0x1
	0x03AD9298 STRB W8, [X20 + 0x52D]
	0x03AD929C LDR X8, [X19 + 0x708]
	0x03AD92A0 CBZ X8, 0x3AD9330
	0x03AD92A4 ADRP X21, 0x61A000
	0x03AD92A8 LDR X21, [X21 + 0x598]
	0x03AD92AC MOVZ W22, 0x5
	0x03AD92B0 LDR W9, [X8 + 0x18]
	0x03AD92B4 SUB X23, X22, 0x4
	0x03AD92B8 CMP X23, W9, SXTW
	0x03AD92BC B.GE 0x3AD9334
	0x03AD92C0 CMP X23, X9
	0x03AD92C4 B.CS 0x3AD9344
	0x03AD92C8 LDR X0, [X21]
	0x03AD92CC LDR X20, [X8, X22, LSL #3]
	0x03AD92D0 LDR W9, [X0 + 0xE0]
	0x03AD92D4 CBNZ W9, 0x3AD92DC
	0x03AD92D8 BL 0x1C16DFC
	0x03AD92DC MOV X0, X20
	0x03AD92E0 MOV X1, X31
	0x03AD92E4 MOV X2, X31
	0x03AD92E8 BL 0x3C354F8
	0x03AD92EC TBZ X0, 0x0, 0x3AD9334
	0x03AD92F0 LDR X8, [X19 + 0x708]
	0x03AD92F4 CBZ X8, 0x3AD9330
	0x03AD92F8 LDR W9, [X8 + 0x18]
	0x03AD92FC CMP X23, X9
	0x03AD9300 B.CS 0x3AD9344
	0x03AD9304 LDR X0, [X21]
	0x03AD9308 LDR X20, [X8, X22, LSL #3]
	0x03AD930C LDR W9, [X0 + 0xE0]
	0x03AD9310 CBNZ W9, 0x3AD9318
	0x03AD9314 BL 0x1C16DFC
	0x03AD9318 MOV X0, X20
	0x03AD931C MOV X1, X31
	0x03AD9320 BL 0x3C39564
	0x03AD9324 LDR X8, [X19 + 0x708]
	0x03AD9328 ADD X22, X22, 0x1
	0x03AD932C CBNZ X8, 0x3AD92B0
	0x03AD9330 BL 0x1C16F20
	0x03AD9334 LDP X20, X19, [X31 + 0x20]
	0x03AD9338 LDP X22, X21, [X31 + 0x10]
	0x03AD933C LDP X30, X23, [X31], #0x30
	0x03AD9340 RET
	0x03AD9344 BL 0x1C16F28
	0x03AD9348 SUB X31, X31, 0xA0
	0x03AD934C STP D11, D10, [X31 + 0x40]
	0x03AD9350 STP D9, D8, [X31 + 0x50]
	0x03AD9354 STR X30, [X31 + 0x60]
	0x03AD9358 STP X24, X23, [X31 + 0x70]
	0x03AD935C STP X22, X21, [X31 + 0x80]
	0x03AD9360 STP X20, X19, [X31 + 0x90]
	0x03AD9364 ADRP X21, 0x909000
	0x03AD9368 LDRB W9, [X21 + 0x52E]
	0x03AD936C MOV X20, X0
	0x03AD9370 MOV X19, X8
	0x03AD9374 TBNZ X9, 0x0, 0x3AD938C
	0x03AD9378 ADRP X0, 0x61A000
	0x03AD937C LDR X0, [X0 + 0x598]
	0x03AD9380 BL 0x1C16CF4
	0x03AD9384 MOVZ W8, 0x1
	0x03AD9388 STRB W8, [X21 + 0x52E]
	0x03AD938C LDR X0, [X20 + 0x3A0]
	0x03AD9390 CBZ X0, 0x3AD94B0
	0x03AD9394 ADD X8, X31, 0x8
	0x03AD9398 MOV X1, X31
	0x03AD939C BL 0x3C17768
	0x03AD93A0 LDP S0, S1, [X31 + 0x8]
	0x03AD93A4 LDP S2, S3, [X31 + 0x10]
	0x03AD93A8 LDP S4, S5, [X31 + 0x18]
	0x03AD93AC FSUB S6, S0, S3
	0x03AD93B0 FSUB S7, S1, S4
	0x03AD93B4 FSUB S16, S2, S5
	0x03AD93B8 FADD S0, S0, S3
	0x03AD93BC FADD S1, S1, S4
	0x03AD93C0 FADD S2, S2, S5
	0x03AD93C4 STP S6, S7, [X31 + 0x30]
	0x03AD93C8 STR S16, [X31 + 0x38]
	0x03AD93CC STP S0, S1, [X31 + 0x20]
	0x03AD93D0 STR S2, [X31 + 0x28]
	0x03AD93D4 LDR X8, [X20 + 0x708]
	0x03AD93D8 CBZ X8, 0x3AD94B0
	0x03AD93DC ADRP X22, 0x61A000
	0x03AD93E0 LDP S11, S10, [X31 + 0x30]
	0x03AD93E4 LDP S9, S8, [X31 + 0x20]
	0x03AD93E8 LDR X22, [X22 + 0x598]
	0x03AD93EC MOVZ W23, 0x5
	0x03AD93F0 LDR W9, [X8 + 0x18]
	0x03AD93F4 SUB X24, X23, 0x4
	0x03AD93F8 CMP W24, W9
	0x03AD93FC B.GE 0x3AD94B4
	0x03AD9400 CMP W24, W9
	0x03AD9404 B.CS 0x3AD952C
	0x03AD9408 LDR X0, [X22]
	0x03AD940C LDR X21, [X8, X23, LSL #3]
	0x03AD9410 LDR W9, [X0 + 0xE0]
	0x03AD9414 CBNZ W9, 0x3AD941C
	0x03AD9418 BL 0x1C16DFC
	0x03AD941C MOV X0, X21
	0x03AD9420 MOV X1, X31
	0x03AD9424 MOV X2, X31
	0x03AD9428 BL 0x3C354F8
	0x03AD942C TBZ X0, 0x0, 0x3AD94B4
	0x03AD9430 LDR X8, [X20 + 0x708]
	0x03AD9434 CBZ X8, 0x3AD9520
	0x03AD9438 LDR W9, [X8 + 0x18]
	0x03AD943C CMP W24, W9
	0x03AD9440 B.CS 0x3AD952C
	0x03AD9444 LDR X0, [X8, X23, LSL #3]
	0x03AD9448 CBZ X0, 0x3AD9520
	0x03AD944C MOV X1, X31
	0x03AD9450 BL 0x3B1AC04
	0x03AD9454 CBZ X0, 0x3AD9520
	0x03AD9458 ADD X8, X31, 0x8
	0x03AD945C MOV X1, X31
	0x03AD9460 BL 0x3C17768
	0x03AD9464 LDP S0, S1, [X31 + 0x8]
	0x03AD9468 LDP S2, S3, [X31 + 0x14]
	0x03AD946C LDR X8, [X20 + 0x708]
	0x03AD9470 ADD X23, X23, 0x1
	0x03AD9474 FSUB S4, S0, S2
	0x03AD9478 FSUB S5, S1, S3
	0x03AD947C FCMP S11, S4
	0x03AD9480 FADD S0, S0, S2
	0x03AD9484 FCSEL S11, S11, S4, MI
	0x03AD9488 FCMP S10, S5
	0x03AD948C FADD S1, S1, S3
	0x03AD9490 FCSEL S10, S10, S5, MI
	0x03AD9494 FCMP S9, S0
	0x03AD9498 FCSEL S9, S9, S0, GT
	0x03AD949C FCMP S8, S1
	0x03AD94A0 FCSEL S8, S8, S1, GT
	0x03AD94A4 CBNZ X8, 0x3AD93F0
	0x03AD94A8 STP S11, S10, [X31 + 0x30]
	0x03AD94AC STP S9, S8, [X31 + 0x20]
	0x03AD94B0 BL 0x1C16F20
	0x03AD94B4 LDR V0, [X31 + 0x38]
	0x03AD94B8 LDR V1, [X31 + 0x28]
	0x03AD94BC FADD S2, S11, S9
	0x03AD94C0 FADD S3, S10, S8
	0x03AD94C4 FSUB S4, S9, S11
	0x03AD94C8 FMOV S5, 0.5
	0x03AD94CC FSUB S6, S8, S10
	0x03AD94D0 FADD S0, S0, S1
	0x03AD94D4 FMUL S2, S2, S5
	0x03AD94D8 FMUL S3, S3, S5
	0x03AD94DC FMUL S4, S4, S5
	0x03AD94E0 FMUL S6, S6, S5
	0x03AD94E4 FMUL S0, S0, S5
	0x03AD94E8 STP S11, S10, [X31 + 0x30]
	0x03AD94EC STP S9, S8, [X31 + 0x20]
	0x03AD94F0 STP S2, S3, [X19]
	0x03AD94F4 STP S4, S6, [X19 + 0xC]
	0x03AD94F8 STR S0, [X19 + 0x8]
	0x03AD94FC STR W31, [X19 + 0x14]
	0x03AD9500 LDP X20, X19, [X31 + 0x90]
	0x03AD9504 LDP X22, X21, [X31 + 0x80]
	0x03AD9508 LDP X24, X23, [X31 + 0x70]
	0x03AD950C LDR X30, [X31 + 0x60]
	0x03AD9510 LDP D9, D8, [X31 + 0x50]
	0x03AD9514 LDP D11, D10, [X31 + 0x40]
	0x03AD9518 ADD X31, X31, 0xA0
	0x03AD951C RET
	0x03AD9520 STP S11, S10, [X31 + 0x30]
	0x03AD9524 STP S9, S8, [X31 + 0x20]
	0x03AD9528 BL 0x1C16F20
	0x03AD952C STP S11, S10, [X31 + 0x30]
	0x03AD9530 STP S9, S8, [X31 + 0x20]
	0x03AD9534 BL 0x1C16F28
	0x03AD9538 SUB X31, X31, 0x80
	0x03AD953C STP D15, D14, [X31 + 0x20]
	0x03AD9540 STP D13, D12, [X31 + 0x30]
	0x03AD9544 STP D11, D10, [X31 + 0x40]
	0x03AD9548 STP D9, D8, [X31 + 0x50]
	0x03AD954C STP X30, X21, [X31 + 0x60]
	0x03AD9550 STP X20, X19, [X31 + 0x70]
	0x03AD9554 ADRP X20, 0x909000
	0x03AD9558 ADRP X21, 0x61A000
	0x03AD955C LDRB W8, [X20 + 0x52F]
	0x03AD9560 LDR X21, [X21 + 0x598]
	0x03AD9564 MOV X19, X0
	0x03AD9568 TBNZ X8, 0x0, 0x3AD9580
	0x03AD956C ADRP X0, 0x61A000
	0x03AD9570 LDR X0, [X0 + 0x598]
	0x03AD9574 BL 0x1C16CF4
	0x03AD9578 MOVZ W8, 0x1
	0x03AD957C STRB W8, [X20 + 0x52F]
	0x03AD9580 LDR X0, [X21]
	0x03AD9584 LDR X20, [X19 + 0x728]
	0x03AD9588 LDR W8, [X0 + 0xE0]
	0x03AD958C CBNZ W8, 0x3AD9594
	0x03AD9590 BL 0x1C16DFC
	0x03AD9594 MOV X0, X20
	0x03AD9598 MOV X1, X31
	0x03AD959C MOV X2, X31
	0x03AD95A0 BL 0x3C3883C
	0x03AD95A4 TBNZ X0, 0x0, 0x3AD960C
	0x03AD95A8 LDR X0, [X19 + 0x728]
	0x03AD95AC CBZ X0, 0x3AD96F4
	0x03AD95B0 MOV X1, X31
	0x03AD95B4 BL 0x3E24BA4
	0x03AD95B8 LDR X8, [X21]
	0x03AD95BC MOV X20, X0
	0x03AD95C0 LDR W9, [X8 + 0xE0]
	0x03AD95C4 CBNZ W9, 0x3AD95D0
	0x03AD95C8 MOV X0, X8
	0x03AD95CC BL 0x1C16DFC
	0x03AD95D0 MOV X0, X20
	0x03AD95D4 MOV X1, X31
	0x03AD95D8 MOV X2, X31
	0x03AD95DC BL 0x3C3883C
	0x03AD95E0 TBNZ X0, 0x0, 0x3AD960C
	0x03AD95E4 LDR X0, [X21]
	0x03AD95E8 LDR X20, [X19 + 0x3A0]
	0x03AD95EC LDR W8, [X0 + 0xE0]
	0x03AD95F0 CBNZ W8, 0x3AD95F8
	0x03AD95F4 BL 0x1C16DFC
	0x03AD95F8 MOV X0, X20
	0x03AD95FC MOV X1, X31
	0x03AD9600 MOV X2, X31
	0x03AD9604 BL 0x3C3883C
	0x03AD9608 TBZ X0, 0x0, 0x3AD9634
	0x03AD960C MOV X0, X31
	0x03AD9610 BL 0x3C0B398
	0x03AD9614 LDP X20, X19, [X31 + 0x70]
	0x03AD9618 LDP X30, X21, [X31 + 0x60]
	0x03AD961C LDP D9, D8, [X31 + 0x50]
	0x03AD9620 LDP D11, D10, [X31 + 0x40]
	0x03AD9624 LDP D13, D12, [X31 + 0x30]
	0x03AD9628 LDP D15, D14, [X31 + 0x20]
	0x03AD962C ADD X31, X31, 0x80
	0x03AD9630 RET
	0x03AD9634 LDR X0, [X19 + 0x728]
	0x03AD9638 CBZ X0, 0x3AD96F4
	0x03AD963C MOV X1, X31
	0x03AD9640 BL 0x3E24BA4
	0x03AD9644 CBZ X0, 0x3AD96F4
	0x03AD9648 MOV X1, X31
	0x03AD964C BL 0x3C32E90
	0x03AD9650 LDR X8, [X19]
	0x03AD9654 MOV X20, X0
	0x03AD9658 MOV X0, X19
	0x03AD965C LDR X9, [X8 + 0x878]
	0x03AD9660 LDR X1, [X8 + 0x880]
	0x03AD9664 ADD X8, X31, 0x8
	0x03AD9668 BLR X9
	0x03AD966C LDR X0, [X19 + 0x380]
	0x03AD9670 CBZ X0, 0x3AD96F4
	0x03AD9674 LDP S14, S15, [X31 + 0x8]
	0x03AD9678 LDP S12, S13, [X31 + 0x14]
	0x03AD967C MOV X1, X31
	0x03AD9680 BL 0x3C3F58C
	0x03AD9684 CBZ X20, 0x3AD96F4
	0x03AD9688 MOV X0, X20
	0x03AD968C MOV X1, X31
	0x03AD9690 BL 0x3C40B58
	0x03AD9694 MOV X0, X20
	0x03AD9698 MOV X1, X31
	0x03AD969C MOV V8.16B, V0.16B
	0x03AD96A0 MOV V9.16B, V1.16B
	0x03AD96A4 BL 0x3C40EA8
	0x03AD96A8 LDR X0, [X19 + 0x380]
	0x03AD96AC CBZ X0, 0x3AD96F4
	0x03AD96B0 MOV X1, X31
	0x03AD96B4 MOV V10.16B, V0.16B
	0x03AD96B8 MOV V11.16B, V1.16B
	0x03AD96BC BL 0x3C40EA8
	0x03AD96C0 FDIV S0, S0, S10
	0x03AD96C4 FDIV S3, S1, S11
	0x03AD96C8 FSUB S1, S14, S12
	0x03AD96CC FSUB S2, S15, S13
	0x03AD96D0 FADD S4, S12, S12
	0x03AD96D4 FADD S5, S13, S13
	0x03AD96D8 FMUL S1, S1, S0
	0x03AD96DC FMUL S6, S2, S3
	0x03AD96E0 FMUL S2, S4, S0
	0x03AD96E4 FADD S0, S8, S1
	0x03AD96E8 FADD S1, S9, S6
	0x03AD96EC FMUL S3, S5, S3
	0x03AD96F0 B 0x3AD9614
	0x03AD96F4 BL 0x1C16F20
	0x03AD96F8 STP X30, X23, [X31 - 0x30]!
	0x03AD96FC STP X22, X21, [X31 + 0x10]
	0x03AD9700 STP X20, X19, [X31 + 0x20]
	0x03AD9704 ADRP X22, 0x909000
	0x03AD9708 ADRP X23, 0x67F000
	0x03AD970C ADRP X21, 0x61C000
	0x03AD9710 ADRP X20, 0x67F000
	0x03AD9714 LDRB W8, [X22 + 0x530]
	0x03AD9718 LDR X23, [X23 + 0x798]
	0x03AD971C LDR X21, [X21 + 0x9B0]
	0x03AD9720 LDR X20, [X20 + 0x3E8]
	0x03AD9724 MOV X19, X0
	0x03AD9728 TBNZ X8, 0x0, 0x3AD9758
	0x03AD972C ADRP X0, 0x67F000
	0x03AD9730 LDR X0, [X0 + 0x798]
	0x03AD9734 BL 0x1C16CF4
	0x03AD9738 ADRP X0, 0x67F000
	0x03AD973C LDR X0, [X0 + 0x3E8]
	0x03AD9740 BL 0x1C16CF4
	0x03AD9744 ADRP X0, 0x61C000
	0x03AD9748 LDR X0, [X0 + 0x9B0]
	0x03AD974C BL 0x1C16CF4
	0x03AD9750 MOVZ W8, 0x1
	0x03AD9754 STRB W8, [X22 + 0x530]
	0x03AD9758 LDR X0, [X23]
	0x03AD975C MOVZ W1, 0x8
	0x03AD9760 MOVZ W22, 0x8
	0x03AD9764 BL 0x1C16D6C
	0x03AD9768 MOVZ W8, 0xBF800000
	0x03AD976C STR X0, [X19 + 0x708]
	0x03AD9770 STR W8, [X19 + 0x710]
	0x03AD9774 LDR X0, [X21]
	0x03AD9778 MOVZ W1, 0x4
	0x03AD977C BL 0x1C16D6C
	0x03AD9780 STR X0, [X19 + 0x718]
	0x03AD9784 STR W22, [X19 + 0x738]
	0x03AD9788 LDR X0, [X20]
	0x03AD978C LDR W8, [X0 + 0xE0]
	0x03AD9790 CBNZ W8, 0x3AD9798
	0x03AD9794 BL 0x1C16DFC
	0x03AD9798 MOV X0, X19
	0x03AD979C LDP X20, X19, [X31 + 0x20]
	0x03AD97A0 LDP X22, X21, [X31 + 0x10]
	0x03AD97A4 MOV X1, X31
	0x03AD97A8 LDP X30, X23, [X31], #0x30
	0x03AD97AC B 0x3B0C400
	0x03AD97B0 STP X29, X30, [X31 - 0x60]!
	0x03AD97B4 STP X28, X27, [X31 + 0x10]
	0x03AD97B8 STP X26, X25, [X31 + 0x20]
	0x03AD97BC STP X24, X23, [X31 + 0x30]
	0x03AD97C0 STP X22, X21, [X31 + 0x40]
	0x03AD97C4 STP X20, X19, [X31 + 0x50]
	0x03AD97C8 ADRP X29, 0x909000
	0x03AD97CC ADRP X20, 0x67F000
	0x03AD97D0 ADRP X19, 0x67F000
	0x03AD97D4 ADRP X28, 0x67F000
	0x03AD97D8 ADRP X27, 0x67F000
	0x03AD97DC ADRP X26, 0x67F000
	0x03AD97E0 ADRP X25, 0x67F000
	0x03AD97E4 ADRP X24, 0x67F000
	0x03AD97E8 ADRP X23, 0x67F000
	0x03AD97EC ADRP X22, 0x67F000
	0x03AD97F0 ADRP X21, 0x67F000
	0x03AD97F4 LDR X20, [X20 + 0x7A0]
	0x03AD97F8 LDR X19, [X19 + 0x7A8]
	0x03AD97FC LDR X28, [X28 + 0x680]
	0x03AD9800 LDR X27, [X27 + 0x688]
	0x03AD9804 LDR X26, [X26 + 0x690]
	0x03AD9808 LDR X25, [X25 + 0x698]
	0x03AD980C LDR X24, [X24 + 0x6A0]
	0x03AD9810 LDR X23, [X23 + 0x6A8]
	0x03AD9814 LDR X22, [X22 + 0x6B0]
	0x03AD9818 LDR X21, [X21 + 0x6B8]
	0x03AD981C LDRB W8, [X29 + 0x531]
	0x03AD9820 TBNZ X8, 0x0, 0x3AD9928
	0x03AD9824 ADRP X0, 0x67F000
	0x03AD9828 LDR X0, [X0 + 0x7A8]
	0x03AD982C BL 0x1C16CF4
	0x03AD9830 ADRP X0, 0x67F000
	0x03AD9834 LDR X0, [X0 + 0x6B0]
	0x03AD9838 BL 0x1C16CF4
	0x03AD983C ADRP X0, 0x67F000
	0x03AD9840 LDR X0, [X0 + 0x7A0]
	0x03AD9844 BL 0x1C16CF4
	0x03AD9848 ADRP X0, 0x67F000
	0x03AD984C LDR X0, [X0 + 0x6C0]
	0x03AD9850 BL 0x1C16CF4
	0x03AD9854 ADRP X0, 0x67F000
	0x03AD9858 LDR X0, [X0 + 0x6C8]
	0x03AD985C BL 0x1C16CF4
	0x03AD9860 ADRP X0, 0x67F000
	0x03AD9864 LDR X0, [X0 + 0x690]
	0x03AD9868 BL 0x1C16CF4
	0x03AD986C ADRP X0, 0x67F000
	0x03AD9870 LDR X0, [X0 + 0x6D0]
	0x03AD9874 BL 0x1C16CF4
	0x03AD9878 ADRP X0, 0x67F000
	0x03AD987C LDR X0, [X0 + 0x688]
	0x03AD9880 BL 0x1C16CF4
	0x03AD9884 ADRP X0, 0x67F000
	0x03AD9888 LDR X0, [X0 + 0x6B8]
	0x03AD988C BL 0x1C16CF4
	0x03AD9890 ADRP X0, 0x67F000
	0x03AD9894 LDR X0, [X0 + 0x6D8]
	0x03AD9898 BL 0x1C16CF4
	0x03AD989C ADRP X0, 0x67F000
	0x03AD98A0 LDR X0, [X0 + 0x6E0]
	0x03AD98A4 BL 0x1C16CF4
	0x03AD98A8 ADRP X0, 0x67F000
	0x03AD98AC LDR X0, [X0 + 0x6A0]
	0x03AD98B0 BL 0x1C16CF4
	0x03AD98B4 ADRP X0, 0x67F000
	0x03AD98B8 LDR X0, [X0 + 0x6E8]
	0x03AD98BC BL 0x1C16CF4
	0x03AD98C0 ADRP X0, 0x67F000
	0x03AD98C4 LDR X0, [X0 + 0x6F0]
	0x03AD98C8 BL 0x1C16CF4
	0x03AD98CC ADRP X0, 0x67F000
	0x03AD98D0 LDR X0, [X0 + 0x6A8]
	0x03AD98D4 BL 0x1C16CF4
	0x03AD98D8 ADRP X0, 0x67F000
	0x03AD98DC LDR X0, [X0 + 0x6F8]
	0x03AD98E0 BL 0x1C16CF4
	0x03AD98E4 ADRP X0, 0x67F000
	0x03AD98E8 LDR X0, [X0 + 0x680]
	0x03AD98EC BL 0x1C16CF4
	0x03AD98F0 ADRP X0, 0x67F000
	0x03AD98F4 LDR X0, [X0 + 0x700]
	0x03AD98F8 BL 0x1C16CF4
	0x03AD98FC ADRP X0, 0x67F000
	0x03AD9900 LDR X0, [X0 + 0x708]
	0x03AD9904 BL 0x1C16CF4
	0x03AD9908 ADRP X0, 0x67F000
	0x03AD990C LDR X0, [X0 + 0x710]
	0x03AD9910 BL 0x1C16CF4
	0x03AD9914 ADRP X0, 0x67F000
	0x03AD9918 LDR X0, [X0 + 0x698]
	0x03AD991C BL 0x1C16CF4
	0x03AD9920 MOVZ W8, 0x1
	0x03AD9924 STRB W8, [X29 + 0x531]
	0x03AD9928 LDR X0, [X20]
	0x03AD992C MOVZ W1, 0x1
	0x03AD9930 MOV W2, W31
	0x03AD9934 MOV W3, W31
	0x03AD9938 MOV X4, X31
	0x03AD993C BL 0x3BFE7FC
	0x03AD9940 LDR X8, [X19]
	0x03AD9944 MOVZ W1, 0x1
	0x03AD9948 MOV W2, W31
	0x03AD994C MOV W3, W31
	0x03AD9950 LDR X8, [X8 + 0xB8]
	0x03AD9954 MOV X4, X31
	0x03AD9958 STR X0, [X8]
	0x03AD995C LDR X0, [X28]
	0x03AD9960 BL 0x3BFE7FC
	0x03AD9964 LDR X8, [X19]
	0x03AD9968 MOVZ W1, 0x1
	0x03AD996C MOV W2, W31
	0x03AD9970 MOV W3, W31
	0x03AD9974 LDR X8, [X8 + 0xB8]
	0x03AD9978 MOV X4, X31
	0x03AD997C STR X0, [X8 + 0x8]
	0x03AD9980 LDR X0, [X27]
	0x03AD9984 BL 0x3BFE7FC
	0x03AD9988 LDR X8, [X19]
	0x03AD998C MOVZ W1, 0x1
	0x03AD9990 MOV W2, W31
	0x03AD9994 MOV W3, W31
	0x03AD9998 LDR X8, [X8 + 0xB8]
	0x03AD999C MOV X4, X31
	0x03AD99A0 STR X0, [X8 + 0x10]
	0x03AD99A4 LDR X0, [X26]
	0x03AD99A8 BL 0x3BFE7FC
	0x03AD99AC LDR X8, [X19]
	0x03AD99B0 MOVZ W1, 0x1
	0x03AD99B4 MOV W2, W31
	0x03AD99B8 MOV W3, W31
	0x03AD99BC LDR X8, [X8 + 0xB8]
	0x03AD99C0 MOV X4, X31
	0x03AD99C4 STR X0, [X8 + 0x18]
	0x03AD99C8 LDR X0, [X25]
	0x03AD99CC BL 0x3BFE7FC
	0x03AD99D0 LDR X8, [X19]
	0x03AD99D4 MOVZ W1, 0x1

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 416
	017 Move X21, 0x90C000
	018 Move W8, [X21+1318]
	019 Move X20, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {111}
	025 Move X0, 0x61F000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move X0, 0x61D000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x647000
	032 Move X0, [X0+2256]
	033 Call 0x1C17CF4
	034 Move X0, 0x678000
	035 Move X0, [X0+3448]
	036 Call 0x1C17CF4
	037 Move X0, 0x61D000
	038 Move X0, [X0+1880]
	039 Call 0x1C17CF4
	040 Move X0, 0x682000
	041 Move X0, [X0+1552]
	042 Call 0x1C17CF4
	043 Move X0, 0x682000
	044 Move X0, [X0+816]
	045 Call 0x1C17CF4
	046 Move X0, 0x621000
	047 Move X0, [X0+3232]
	048 Call 0x1C17CF4
	049 Move X0, 0x61D000
	050 Move X0, [X0+2512]
	051 Call 0x1C17CF4
	052 Move X0, 0x61D000
	053 Move X0, [X0+1432]
	054 Call 0x1C17CF4
	055 Move X0, 0x61F000
	056 Move X0, [X0+632]
	057 Call 0x1C17CF4
	058 Move X0, 0x682000
	059 Move X0, [X0+1560]
	060 Call 0x1C17CF4
	061 Move X0, 0x682000
	062 Move X0, [X0+1400]
	063 Call 0x1C17CF4
	064 Move X0, 0x682000
	065 Move X0, [X0+1568]
	066 Call 0x1C17CF4
	067 Move X0, 0x682000
	068 Move X0, [X0+840]
	069 Call 0x1C17CF4
	070 Move X0, 0x682000
	071 Move X0, [X0+1576]
	072 Call 0x1C17CF4
	073 Move X0, 0x682000
	074 Move X0, [X0+1584]
	075 Call 0x1C17CF4
	076 Move X0, 0x682000
	077 Move X0, [X0+1592]
	078 Call 0x1C17CF4
	079 Move X0, 0x682000
	080 Move X0, [X0+1936]
	081 Call 0x1C17CF4
	082 Move X0, 0x682000
	083 Move X0, [X0+872]
	084 Call 0x1C17CF4
	085 Move X0, 0x682000
	086 Move X0, [X0+944]
	087 Call 0x1C17CF4
	088 Move X0, 0x682000
	089 Move X0, [X0+968]
	090 Call 0x1C17CF4
	091 Move X0, 0x682000
	092 Move X0, [X0+1000]
	093 Call 0x1C17CF4
	094 Move X0, 0x625000
	095 Move X0, [X0+1824]
	096 Call 0x1C17CF4
	097 Move X0, 0x682000
	098 Move X0, [X0+1608]
	099 Call 0x1C17CF4
	100 Move X0, 0x682000
	101 Move X0, [X0+1616]
	102 Call 0x1C17CF4
	103 Move X0, 0x682000
	104 Move X0, [X0+1624]
	105 Call 0x1C17CF4
	106 Move X0, 0x682000
	107 Move X0, [X0+1632]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X21+1318], W8
	111 Move X21, 0x682000
	112 Move X27, 0x682000
	113 Move X21, [X21+968]
	114 Move X27, [X27+1000]
	115 Move [X31+428], W31
	116 Move [X31+424], W31
	117 Move W8, [X19+600]
	118 Add X0, X19, 608
	119 Move X1, X31
	120 Move [X19+1168], W31
	121 Move [X19+618], W31
	122 NotImplemented "Instruction STRH not yet implemented."
	123 Move [X19+604], W8
	124 Call TMP_FontStyleStack.Clear, X0
	125 Move W8, [X19+604]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Move W1, [X19+528]
	131 Move W1, 700
	132 Move [X19+532], W1
	133 Move X2, [X21]
	134 Move X21, 0x682000
	135 Move X21, [X21+944]
	136 Add X0, X19, 536
	137 Call TMP_TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	138 Move X2, [X19+248]
	139 Move X4, [X19+272]
	140 Move [X19+288], W31
	141 Move [X19+256], X2
	142 Move [X19+280], X4
	143 Move X0, [X27]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfEqual {148}
	147 Move W1, W31
	148 Call 0x1C17DFC
	149 Move W1, [X19+288]
	150 Move X2, [X19+256]
	151 Move X4, [X19+280]
	152 Move V0, [X19+1560]
	153 NotImplemented "Instruction MOVI not yet implemented."
	154 Add X0, X31, 352
	155 Move X3, X31
	156 Move [X31+400], X31
	157 Move [X31+368], V1
	158 Move [X31+376], V1
	159 Move [X31+22], V1
	160 Call MaterialReference..ctor, X0, X1, X2, X3, X4, V0
	161 Move X8, [X27]
	162 Move X2, [X21]
	163 Move V0, [X31+352]
	164 Move V1, [X31+368]
	165 Move V2, [X31+24]
	166 Move X8, [X8+184]
	167 Move X9, [X31+400]
	168 Add X1, X31, 208
	169 Move [X31+208], V0
	170 Move [X31+216], V1
	171 Add X0, X8, 16
	172 Move [X31+15], V2
	173 Move [X31+256], X9
	174 Call TMP_TextProcessingStack`1<MaterialReference>.SetDefault, X0, X1
	175 Move X8, [X27]
	176 Move X8, [X8+184]
	177 Move X0, [X8+8]
	178 Compare X0, 0
	179 JumpIfEqual {1939}
	180 Move X8, 0x646000
	181 Move X8, [X8+2256]
	182 Move X24, 0x681000
	183 Move X1, [X8]
	184 Move X24, [X24+872]
	185 Call Dictionary`2<Int32, Int32>.Clear, X0
	186 Move X8, [X27]
	187 Move X0, [X19+280]
	188 Move X1, [X19+256]
	189 Move X2, [X8+184]
	190 Move X3, [X2+8]
	191 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	192 Move X21, [X19+872]
	193 Compare X21, 0
	194 JumpIfEqual {214}
	195 Add X21, X21, 56
	196 Move X8, [X21]
	197 Compare X8, 0
	198 JumpIfEqual {1939}
	199 Move W22, [X19+1152]
	200 Move W8, [X8+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, [X24]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X8, 0x681000
	208 Move X8, [X8+1584]
	209 Move X0, X21
	210 Move W1, W22
	211 Move W2, W31
	212 Move X3, [X8]
	213 Call TMP_TextInfo.Resize, X0, X1, X2
	214 Move X0, [X24]
	215 Move W21, [X19+1152]
	216 Call 0x1C17F10
	217 Move W1, W21
	218 Move X2, X31
	219 Move X22, X0
	220 Call TMP_TextInfo..ctor, X0, X1
	221 Move [X19+872], X22
	222 Move W8, [X19+736]
	223 Move [X19+1604], W31
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X1, [X19+256]
	226 Move X0, X19
	227 Move X2, X31
	228 Call TMP_Text.GetEllipsisSpecialCharacter, X0, X1
	229 Move X8, [X19+1616]
	230 Compare X8, 0
	231 JumpIfEqual {271}
	232 Move X0, [X19+1624]
	233 Compare X0, 0
	234 JumpIfEqual {1939}
	235 Move X1, X31
	236 Call Object.GetInstanceID, X0
	237 Move X8, [X19+256]
	238 Compare X8, 0
	239 JumpIfEqual {1939}
	240 Move W21, W0
	241 Move X0, X8
	242 Move X1, X31
	243 Call Object.GetInstanceID, X0
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Move X0, X31
	246 Call TMP_Settings.get_matchMaterialPreset
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {266}
	251 Move X0, [X19+280]
	252 Compare X0, 0
	253 JumpIfEqual {1939}
	254 Move X1, X31
	255 Call Object.GetInstanceID, X0
	256 Move X8, [X19+1624]
	257 Compare X8, 0
	258 JumpIfEqual {1939}
	259 Move W21, W0
	260 Move X0, [X8+32]
	261 Compare X0, 0
	262 JumpIfEqual {1939}
	263 Move X1, X31
	264 Call Object.GetInstanceID, X0
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move X21, [X19+1624]
	267 Compare X21, 0
	268 JumpIfEqual {1939}
	269 Move X22, [X21+32]
	270 Move [X19+1632], X22
	271 Move W8, 3
	272 Move X0, X31
	273 Move [X19+736], W8
	274 Call TMP_Settings.get_warningsDisabled
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfEqual {348}
	279 Move X0, [X19+256]
	280 Compare X0, 0
	281 JumpIfEqual {1939}
	282 Move X1, X31
	283 Call Object.get_name, X0
	284 Move X8, 0x681000
	285 Move X8, [X8+1624]
	286 Move X9, 0x681000
	287 Move X9, [X9+1632]
	288 Move X1, X0
	289 Move X8, [X8]
	290 Move X3, X31
	291 Move X2, [X9]
	292 Move X0, X8
	293 Call String.Concat, X0, X1, X2
	294 Move X8, 0x61C000
	295 Move X8, [X8+2600]
	296 Move X21, X0
	297 Move X8, [X8]
	298 Move W9, [X8+224]
	299 Compare W9, 0
	300 JumpIfNotEqual {303}
	301 Move X0, X8
	302 Call 0x1C17DFC
	303 Move X0, X21
	304 Move X1, X19
	305 Move X2, X31
	306 Call Debug.LogWarning, X0, X1
	307 Move X8, [X19+1624]
	308 Compare X8, 0
	309 JumpIfEqual {1939}
	310 Move X9, 0x681000
	311 Move X9, [X9+1568]
	312 Move X21, [X19+280]
	313 Move X22, [X8+32]
	314 Move X0, [X9]
	315 Move W9, [X0+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {319}
	318 Call 0x1C17DFC
	319 Move X0, X21
	320 Move X1, X22
	321 Move X2, X31
	322 Call TMP_MaterialManager.GetFallbackMaterial, X0, X1
	323 Move X21, [X19+1624]
	324 Move X22, X0
	325 Move [X19+1632], X0
	326 Move X0, [X27]
	327 Move W8, [X0+224]
	328 Compare W8, 0
	329 JumpIfNotEqual {332}
	330 Call 0x1C17DFC
	331 Move X0, [X27]
	332 Move X2, [X0+184]
	333 Move X0, X22
	334 Move X1, X21
	335 Move X3, [X2+8]
	336 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	337 Move [X19+1640], W0
	338 Move X8, [X27]
	339 Move X8, [X8+184]
	340 Move X8, [X8]
	341 Compare X8, 0
	342 JumpIfEqual {1939}
	343 Move W9, [X8+24]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move W9, 56
	346 NotImplemented "Instruction SMADDL not yet implemented."
	347 Move [X8+84], W31
	348 Move W8, [X19+736]
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move X8, 0x61C000
	351 Move X8, [X8+1432]
	352 Move X21, [X19+744]
	353 Move X0, [X8]
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move X0, X21
	359 Move X1, X31
	360 Move X2, X31
	361 Call Object.op_Inequality, X0, X1
	362 Move TEMP, X0
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfNotEqual {369}
	366 Move W8, [X19+1013]
	367 Compare W8, 0
	368 JumpIfEqual {1940}
	369 Compare X20, 0
	370 JumpIfEqual {1939}
	371 Move W8, [X20+24]
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move W28, W31
	374 Move W29, 12
	375 Move [X31+40], W31
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Move X26, X27
	378 NotImplemented "Instruction SMADDL not yet implemented."
	379 Add X27, X27, 32
	380 Move W9, [X27]
	381 Compare W9, 0
	382 JumpIfEqual {1329}
	383 Move X21, [X19+872]
	384 Compare X21, 0
	385 JumpIfEqual {1939}
	386 Add X21, X21, 56
	387 Move X9, [X21]
	388 Move W22, [X19+1168]
	389 Compare X9, 0
	390 JumpIfEqual {393}
	391 Move W9, [X9+24]
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move X0, [X24]
	394 Move W8, [X0+224]
	395 Compare W8, 0
	396 JumpIfNotEqual {398}
	397 Call 0x1C17DFC
	398 Move X8, 0x681000
	399 Move X8, [X8+1584]
	400 Add W1, W22, 1
	401 Move W2, 1
	402 Move X0, X21
	403 Move X3, [X8]
	404 Call TMP_TextInfo.Resize, X0, X1, X2
	405 Move W8, [X20+24]
	406 NotImplemented "Instruction CMP not yet implemented."
	407 Move W23, [X27]
	408 Move X29, W28
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move W8, [X19+770]
	411 Compare W8, 0
	412 JumpIfEqual {526}
	413 Move W21, [X19+288]
	414 Add W2, W28, 1
	415 Add X3, X31, 424
	416 Move X0, X19
	417 Move X1, X20
	418 Move X4, X31
	419 Call TMP_Text.ValidateHtmlTag, X0, X1, X2, X3
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfNotEqual {526}
	424 Move W8, [X20+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move W8, 12
	427 NotImplemented "Instruction MADD not yet implemented."
	428 Move W9, [X19+604]
	429 Move W22, [X8+36]
	430 Move W29, 12
	431 Move X27, X26
	432 Move TEMP, X9
	433 And TEMP, TEMP, 1
	434 Compare TEMP, 1
	435 JumpIfNotEqual {438}
	436 Move W8, 1
	437 Move [X19+618], W8
	438 Move W8, [X19+1604]
	439 Move W28, [X31+424]
	440 Move W25, 376
	441 NotImplemented "Instruction CMP not yet implemented."
	442 Move X0, [X27]
	443 Move W8, [X0+224]
	444 Compare W8, 0
	445 JumpIfNotEqual {448}
	446 Call 0x1C17DFC
	447 Move X0, [X27]
	448 Move X8, [X0+184]
	449 Move X8, [X8]
	450 Compare X8, 0
	451 JumpIfEqual {1939}
	452 NotImplemented "Instruction LDRSW not yet implemented."
	453 Move W10, [X8+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move W10, 56
	456 NotImplemented "Instruction MADD not yet implemented."
	457 Move W9, [X8+84]
	458 Add W9, W9, 1
	459 Move [X8+84], W9
	460 Move X8, [X19+872]
	461 Compare X8, 0
	462 JumpIfEqual {1939}
	463 Move X23, [X8+56]
	464 Compare X23, 0
	465 JumpIfEqual {1939}
	466 NotImplemented "Instruction LDRSW not yet implemented."
	467 Move W8, [X23+24]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move W8, [X19+1700]
	470 NotImplemented "Instruction NOP not yet implemented."
	471 NotImplemented "Instruction MADD not yet implemented."
	472 Subtract W10, W8, 0x2000
	473 NotImplemented "Instruction STRH not yet implemented."
	474 Move [X9+72], W8
	475 Move X8, [X19+256]
	476 Move [X9+56], X8
	477 Move X0, [X19+1688]
	478 Move [X9+64], X0
	479 Move W8, [X19+288]
	480 Move [X9+88], W8
	481 Compare X0, 0
	482 JumpIfEqual {1939}
	483 Move X1, X31
	484 Call TMP_SpriteAsset.get_spriteCharacterTable, X0
	485 Compare X0, 0
	486 JumpIfEqual {1939}
	487 Move X8, 0x681000
	488 Move W1, [X19+1700]
	489 Move X8, [X8+816]
	490 Move X2, [X8]
	491 Call List`1<Object>.get_Item, X0, X1
	492 Move W8, [X23+24]
	493 NotImplemented "Instruction CMP not yet implemented."
	494 NotImplemented "Instruction MADD not yet implemented."
	495 Move [X8+48], X0
	496 Move X8, [X19+872]
	497 Compare X8, 0
	498 JumpIfEqual {1939}
	499 Move X24, 0x681000
	500 Move X9, [X8+56]
	501 Move X24, [X24+872]
	502 Compare X9, 0
	503 JumpIfEqual {1939}
	504 Move W8, [X19+1168]
	505 Move W10, [X9+24]
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Move W11, [X19+1604]
	508 Move X10, W8
	509 NotImplemented "Instruction MADD not yet implemented."
	510 Move [X12+36], W22
	511 Move [X12+44], W11
	512 Move W11, [X20+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move W11, W28
	515 Move X11, W11
	516 NotImplemented "Instruction MADD not yet implemented."
	517 Move W11, [X11+36]
	518 NotImplemented "Instruction NOP not yet implemented."
	519 NotImplemented "Instruction MADD not yet implemented."
	520 Subtract W10, W11, W22
	521 Add W10, W10, 1
	522 Move [X9+40], W10
	523 Move W9, [X31+40]
	524 Move [X19+1604], W31
	525 Move [X19+288], W21
	526 Move [X31+428], W31
	527 Move X10, [X19+256]
	528 Move X11, [X19+280]
	529 Move W8, [X19+1604]
	530 Move W9, [X19+288]
	531 Move [X31+24], X11
	532 Move [X31+32], X10
	533 Move [X31+44], W9
	534 Compare W8, 0
	535 JumpIfNotEqual {598}
	536 Move W8, [X19+604]
	537 Move TEMP, X8
	538 And TEMP, TEMP, 16
	539 Compare TEMP, 16
	540 JumpIfEqual {549}
	541 Move TEMP, X8
	542 And TEMP, TEMP, 8
	543 Compare TEMP, 8
	544 JumpIfEqual {573}
	545 Move TEMP, X8
	546 And TEMP, TEMP, 32
	547 Compare TEMP, 32
	548 JumpIfNotEqual {598}
	549 Move X8, 0x61E000
	550 Move X8, [X8+368]
	551 Move X0, [X8]
	552 Move W8, [X0+224]
	553 Compare W8, 0
	554 JumpIfNotEqual {556}
	555 Call 0x1C17DFC
	556 Move W0, W23
	557 Move X1, X31
	558 Call Char.IsLower, X0
	559 Move TEMP, X0
	560 And TEMP, TEMP, 1
	561 Compare TEMP, 1
	562 JumpIfNotEqual {598}
	563 Move X8, 0x61E000
	564 Move X8, [X8+368]
	565 Move X0, [X8]
	566 Move W8, [X0+224]
	567 Compare W8, 0
	568 JumpIfNotEqual {570}
	569 Call 0x1C17DFC
	570 Move W0, W23
	571 Move X1, X31
	572 Call Char.ToUpper, X0
	573 Move X8, 0x61E000
	574 Move X8, [X8+368]
	575 Move X0, [X8]
	576 Move W8, [X0+224]
	577 Compare W8, 0
	578 JumpIfNotEqual {580}
	579 Call 0x1C17DFC
	580 Move W0, W23
	581 Move X1, X31
	582 Call Char.IsUpper, X0
	583 Move TEMP, X0
	584 And TEMP, TEMP, 1
	585 Compare TEMP, 1
	586 JumpIfNotEqual {598}
	587 Move X8, 0x61E000
	588 Move X8, [X8+368]
	589 Move X0, [X8]
	590 Move W8, [X0+224]
	591 Compare W8, 0
	592 JumpIfNotEqual {594}
	593 Call 0x1C17DFC
	594 Move W0, W23
	595 Move X1, X31
	596 Call Char.ToLower, X0
	597 And W23, W0, 0xFFFF
	598 Move X2, [X19+256]
	599 Move W3, [X19+604]
	600 Move W4, [X19+532]
	601 Add X5, X31, 428
	602 Move X0, X19
	603 Move W1, W23
	604 Move X6, X31
	605 Call TMP_Text.GetTextElement, X0, X1, X2, X3, X4, X5
	606 Compare X0, 0
	607 JumpIfEqual {612}
	608 Move X22, X0
	609 Move W21, W23
	610 Move X27, X26
	611 Move W26, 376
	612 Call TMP_Settings.get_missingGlyphCharacter
	613 Move W8, [X20+24]
	614 NotImplemented "Instruction CMP not yet implemented."
	615 Compare W0, 0
	616 JumpIfEqual {620}
	617 Move X0, X31
	618 Call TMP_Settings.get_missingGlyphCharacter
	619 Move W21, W0
	620 Move W21, 0x25A1
	621 Move [X27], W21
	622 Move X8, 0x681000
	623 Move X8, [X8+1560]
	624 Move X24, [X19+256]
	625 Move W22, [X19+604]
	626 Move W25, [X19+532]
	627 Move X0, [X8]
	628 Move W8, [X0+224]
	629 Compare W8, 0
	630 JumpIfNotEqual {632}
	631 Call 0x1C17DFC
	632 Add X5, X31, 428
	633 Move W2, 1
	634 Move W0, W21
	635 Move X1, X24
	636 Move W3, W22
	637 Move W4, W25
	638 Move X6, X31
	639 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	640 Compare X0, 0
	641 JumpIfEqual {740}
	642 Move X22, X0
	643 Move X0, X31
	644 Call TMP_Settings.get_warningsDisabled
	645 Move TEMP, X0
	646 And TEMP, TEMP, 1
	647 Compare TEMP, 1
	648 JumpIfNotEqual {655}
	649 Move X24, 0x681000
	650 Move X24, [X24+872]
	651 Move X27, X26
	652 Move W26, 376
	653 Compare X22, 0
	654 JumpIfNotEqual {959}
	655 Move X8, 0x61C000
	656 Move X8, [X8+2512]
	657 Move W1, 4
	658 Move X0, [X8]
	659 Call 0x1C17D6C
	660 Move X8, 0x61C000
	661 Move X8, [X8+1880]
	662 NotImplemented "Instruction CMP not yet implemented."
	663 Move X24, X0
	664 Move X27, X26
	665 Move X0, [X8]
	666 Add X1, X31, 208
	667 Move [X31+208], W23
	668 Call 0x1C17E04
	669 Move W26, 376
	670 Compare X24, 0
	671 JumpIfEqual {1939}
	672 Move X23, X0
	673 Compare X0, 0
	674 JumpIfEqual {681}
	675 Move X8, [X24]
	676 Move X0, X23
	677 Move X1, [X8+64]
	678 Call 0x1C17E00
	679 Compare X0, 0
	680 JumpIfEqual {1981}
	681 Move W8, [X24+24]
	682 Compare W8, 0
	683 JumpIfEqual {1980}
	684 Move [X24+32], X23
	685 Move X0, [X19+248]
	686 Compare X0, 0
	687 JumpIfEqual {1939}
	688 Move X1, X31
	689 Call Object.get_name, X0
	690 Move X23, X0
	691 Compare X0, 0
	692 JumpIfEqual {699}
	693 Move X8, [X24]
	694 Move X0, X23
	695 Move X1, [X8+64]
	696 Call 0x1C17E00
	697 Compare X0, 0
	698 JumpIfEqual {1981}
	699 Move W8, [X24+24]
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Move [X24+40], X23
	702 Compare X22, 0
	703 JumpIfEqual {1939}
	704 Move X9, 0x624000
	705 Move W8, [X22+20]
	706 Move X9, [X9+1824]
	707 Add X1, X31, 352
	708 Move [X31+352], W8
	709 Move X0, [X9]
	710 Call 0x1C17E04
	711 Move X23, X0
	712 Compare X0, 0
	713 JumpIfEqual {720}
	714 Move X8, [X24]
	715 Move X0, X23
	716 Move X1, [X8+64]
	717 Call 0x1C17E00
	718 Compare X0, 0
	719 JumpIfEqual {1981}
	720 Move W8, [X24+24]
	721 NotImplemented "Instruction CMP not yet implemented."
	722 Move X0, X19
	723 Move X1, X31
	724 Move [X24+48], X23
	725 Call Object.get_name, X0
	726 Move X23, X0
	727 Compare X0, 0
	728 JumpIfEqual {735}
	729 Move X8, [X24]
	730 Move X0, X23
	731 Move X1, [X8+64]
	732 Call 0x1C17E00
	733 Compare X0, 0
	734 JumpIfEqual {1981}
	735 Move W8, [X24+24]
	736 NotImplemented "Instruction CMP not yet implemented."
	737 Move [X24+56], X23
	738 Move X8, 0x681000
	739 Move X8, [X8+1608]
	740 Call TMP_Settings.get_fallbackFontAssets
	741 Compare X0, 0
	742 JumpIfEqual {775}
	743 Move X0, X31
	744 Call TMP_Settings.get_fallbackFontAssets
	745 Compare X0, 0
	746 JumpIfEqual {1939}
	747 Move W8, [X0+24]
	748 NotImplemented "Instruction CMP not yet implemented."
	749 Move X8, [X19+256]
	750 Move X0, X31
	751 Move [X31+16], X8
	752 Call TMP_Settings.get_fallbackFontAssets
	753 Move X8, 0x681000
	754 Move X8, [X8+1560]
	755 Move W24, [X19+604]
	756 Move W25, [X19+532]
	757 Move X22, X0
	758 Move X8, [X8]
	759 Move W9, [X8+224]
	760 Compare W9, 0
	761 JumpIfNotEqual {764}
	762 Move X0, X8
	763 Call 0x1C17DFC
	764 Move X1, [X31+16]
	765 Add X6, X31, 428
	766 Move W3, 1
	767 Move W0, W21
	768 Move X2, X22
	769 Move W4, W24
	770 Move W5, W25
	771 Move X7, X31
	772 Call TMP_FontAssetUtilities.GetCharacterFromFontAssets, X0, X1, X2, X3, X4, X5, X6
	773 Compare X0, 0
	774 JumpIfNotEqual {642}
	775 Move X0, X31
	776 Call TMP_Settings.get_defaultFontAsset
	777 Move X8, 0x61C000
	778 Move X8, [X8+1432]
	779 Move X22, X0
	780 Move X8, [X8]
	781 Move W9, [X8+224]
	782 Compare W9, 0
	783 JumpIfNotEqual {786}
	784 Move X0, X8
	785 Call 0x1C17DFC
	786 Move X0, X22
	787 Move X1, X31
	788 Move X2, X31
	789 Call Object.op_Inequality, X0, X1
	790 Move TEMP, X0
	791 And TEMP, TEMP, 1
	792 Compare TEMP, 1
	793 JumpIfNotEqual {818}
	794 Move X0, X31
	795 Call TMP_Settings.get_defaultFontAsset
	796 Move X8, 0x681000
	797 Move X8, [X8+1560]
	798 Move W22, [X19+604]
	799 Move W24, [X19+532]
	800 Move X25, X0
	801 Move X8, [X8]
	802 Move W9, [X8+224]
	803 Compare W9, 0
	804 JumpIfNotEqual {807}
	805 Move X0, X8
	806 Call 0x1C17DFC
	807 Add X5, X31, 428
	808 Move W2, 1
	809 Move W0, W21
	810 Move X1, X25
	811 Move W3, W22
	812 Move W4, W24
	813 Move X6, X31
	814 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	815 Move X22, X0
	816 Compare X0, 0
	817 JumpIfNotEqual {643}
	818 Move W8, [X20+24]
	819 NotImplemented "Instruction CMP not yet implemented."
	820 Move W8, 32
	821 Move [X27], W8
	822 Move X8, 0x681000
	823 Move X8, [X8+1560]
	824 Move X24, [X19+256]
	825 Move W22, [X19+604]
	826 Move W25, [X19+532]
	827 Move X0, [X8]
	828 Move W8, [X0+224]
	829 Compare W8, 0
	830 JumpIfNotEqual {832}
	831 Call 0x1C17DFC
	832 Add X5, X31, 428
	833 Move W0, 32
	834 Move W2, 1
	835 Move X1, X24
	836 Move W3, W22
	837 Move W4, W25
	838 Move X6, X31
	839 Move W21, 32
	840 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	841 Compare X0, 0
	842 JumpIfNotEqual {642}
	843 Move W8, [X20+24]
	844 NotImplemented "Instruction CMP not yet implemented."
	845 Move W8, 3
	846 Move [X27], W8
	847 Move X8, 0x681000
	848 Move X8, [X8+1560]
	849 Move X24, [X19+256]
	850 Move W22, [X19+604]
	851 Move W25, [X19+532]
	852 Move X0, [X8]
	853 Move W8, [X0+224]
	854 Compare W8, 0
	855 JumpIfNotEqual {857}
	856 Call 0x1C17DFC
	857 Add X5, X31, 428
	858 Move W0, 3
	859 Move W2, 1
	860 Move X1, X24
	861 Move W3, W22
	862 Move W4, W25
	863 Move X6, X31
	864 Move W21, 3
	865 Call TMP_FontAssetUtilities.GetCharacterFromFontAsset, X0, X1, X2, X3, X4, X5
	866 Move X0, [X8]
	867 Add X1, X31, 208
	868 Move [X31+208], W23
	869 Call 0x1C17E04
	870 Move W26, 376
	871 Compare X24, 0
	872 JumpIfEqual {1939}
	873 Move X23, X0
	874 Compare X0, 0
	875 JumpIfEqual {882}
	876 Move X8, [X24]
	877 Move X0, X23
	878 Move X1, [X8+64]
	879 Call 0x1C17E00
	880 Compare X0, 0
	881 JumpIfEqual {1981}
	882 Move W8, [X24+24]
	883 Compare W8, 0
	884 JumpIfEqual {1980}
	885 Move [X24+32], X23
	886 Move X0, [X19+248]
	887 Compare X0, 0
	888 JumpIfEqual {1939}
	889 Move X1, X31
	890 Call Object.get_name, X0
	891 Move X23, X0
	892 Compare X0, 0
	893 JumpIfEqual {900}
	894 Move X8, [X24]
	895 Move X0, X23
	896 Move X1, [X8+64]
	897 Call 0x1C17E00
	898 Compare X0, 0
	899 JumpIfEqual {1981}
	900 Move W8, [X24+24]
	901 NotImplemented "Instruction CMP not yet implemented."
	902 Move [X24+40], X23
	903 Compare X22, 0
	904 JumpIfEqual {1939}
	905 Move X9, 0x624000
	906 Move W8, [X22+20]
	907 Move X9, [X9+1824]
	908 Add X1, X31, 352
	909 Move [X31+352], W8
	910 Move X0, [X9]
	911 Call 0x1C17E04
	912 Move X23, X0
	913 Compare X0, 0
	914 JumpIfEqual {921}
	915 Move X8, [X24]
	916 Move X0, X23
	917 Move X1, [X8+64]
	918 Call 0x1C17E00
	919 Compare X0, 0
	920 JumpIfEqual {1981}
	921 Move W8, [X24+24]
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Move X0, X19
	924 Move X1, X31
	925 Move [X24+48], X23
	926 Call Object.get_name, X0
	927 Move X23, X0
	928 Compare X0, 0
	929 JumpIfEqual {936}
	930 Move X8, [X24]
	931 Move X0, X23
	932 Move X1, [X8+64]
	933 Call 0x1C17E00
	934 Compare X0, 0
	935 JumpIfEqual {1981}
	936 Move W8, [X24+24]
	937 NotImplemented "Instruction CMP not yet implemented."
	938 Move [X24+56], X23
	939 Move X8, 0x681000
	940 Move X8, [X8+1616]
	941 Move X0, [X8]
	942 Move X1, X24
	943 Move X2, X31
	944 Call String.Format, X0, X1
	945 Move X8, 0x61C000
	946 Move X8, [X8+2600]
	947 Move X23, X0
	948 Move X24, 0x681000
	949 Move X0, [X8]
	950 Move W8, [X0+224]
	951 Move X24, [X24+872]
	952 Compare W8, 0
	953 JumpIfNotEqual {955}
	954 Call 0x1C17DFC
	955 Move X0, X23
	956 Move X1, X19
	957 Move X2, X31
	958 Call Debug.LogWarning, X0, X1
	959 Move W8, [X22+16]
	960 NotImplemented "Instruction CMP not yet implemented."
	961 Move X0, [X22+24]
	962 Compare X0, 0
	963 JumpIfEqual {1939}
	964 Move X1, X31
	965 Call TMP_Asset.get_instanceID, X0
	966 Move X8, [X19+256]
	967 Compare X8, 0
	968 JumpIfEqual {1939}
	969 Move W23, W0
	970 Move X0, X8
	971 Move X1, X31
	972 Call TMP_Asset.get_instanceID, X0
	973 NotImplemented "Instruction CMP not yet implemented."
	974 Move W25, W31
	975 Move X8, [X22+24]
	976 Compare X8, 0
	977 JumpIfEqual {986}
	978 Move X9, 0x681000
	979 Move X10, [X8]
	980 Move X9, [X9+1400]
	981 Move W12, [X10+304]
	982 Move X9, [X9]
	983 Move W11, [X9+304]
	984 NotImplemented "Instruction CMP not yet implemented."
	985 Move X8, X31
	986 Move [X19+256], X31
	987 Move X10, [X10+200]
	988 Add X10, X10, X11
	989 NotImplemented "Instruction LDUR not yet implemented."
	990 NotImplemented "Instruction CMP not yet implemented."
	991 NotImplemented "Instruction CSEL not yet implemented."
	992 Move [X19+256], X8
	993 Move W25, 1
	994 Move X8, [X19+872]
	995 Compare X8, 0
	996 JumpIfEqual {1939}
	997 Move X8, [X8+56]
	998 Compare X8, 0
	999 JumpIfEqual {1939}
	1000 NotImplemented "Instruction LDRSW not yet implemented."
	1001 Move W10, [X8+24]
	1002 NotImplemented "Instruction CMP not yet implemented."
	1003 NotImplemented "Instruction MADD not yet implemented."
	1004 Move [X10+44], W31
	1005 Move [X10+48], X22
	1006 Move W11, [X31+428]
	1007 NotImplemented "Instruction STRH not yet implemented."
	1008 Move [X10+92], W11
	1009 Move W10, [X20+24]
	1010 NotImplemented "Instruction CMP not yet implemented."
	1011 Move W10, 12
	1012 NotImplemented "Instruction MADD not yet implemented."
	1013 NotImplemented "Instruction LDUR not yet implemented."
	1014 NotImplemented "Instruction NOP not yet implemented."
	1015 NotImplemented "Instruction MADD not yet implemented."
	1016 Move W29, 12
	1017 Move [X8+36], D0
	1018 Move X0, [X19+256]
	1019 Move [X8+56], X0
	1020 Move W8, [X22+16]
	1021 NotImplemented "Instruction CMP not yet implemented."
	1022 Move X21, [X22+24]
	1023 Compare X21, 0
	1024 JumpIfEqual {1939}
	1025 Move X8, 0x681000
	1026 Move X9, [X21]
	1027 Move X8, [X8+1576]
	1028 Move W11, [X9+304]
	1029 Move X8, [X8]
	1030 Move W10, [X8+304]
	1031 NotImplemented "Instruction CMP not yet implemented."
	1032 Move X9, [X9+200]
	1033 Add X9, X9, X10
	1034 NotImplemented "Instruction LDUR not yet implemented."
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Move X0, [X27]
	1037 Move X23, [X21+32]
	1038 Move W8, [X0+224]
	1039 Compare W8, 0
	1040 JumpIfNotEqual {1043}
	1041 Call 0x1C17DFC
	1042 Move X0, [X27]
	1043 Move X2, [X0+184]
	1044 Move X0, X23
	1045 Move X1, X21
	1046 Move X3, [X2+8]
	1047 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1048 Move [X19+288], W0
	1049 Move X8, [X27]
	1050 Move X8, [X8+184]
	1051 Move X8, [X8]
	1052 Compare X8, 0
	1053 JumpIfEqual {1939}
	1054 Move W9, [X8+24]
	1055 NotImplemented "Instruction CMP not yet implemented."
	1056 Move W9, 56
	1057 NotImplemented "Instruction SMADDL not yet implemented."
	1058 Move W9, [X8+84]
	1059 Add W9, W9, 1
	1060 Move [X8+84], W9
	1061 Move X8, [X19+872]
	1062 Compare X8, 0
	1063 JumpIfEqual {1939}
	1064 Move X9, [X8+56]
	1065 Compare X9, 0
	1066 JumpIfEqual {1939}
	1067 Move W8, [X19+1168]
	1068 Move W10, [X9+24]
	1069 NotImplemented "Instruction CMP not yet implemented."
	1070 Move X10, W8
	1071 NotImplemented "Instruction MADD not yet implemented."
	1072 Move W10, 1
	1073 Move [X9+44], W10
	1074 Move W10, [X19+288]
	1075 Move [X9+64], X21
	1076 Move [X9+88], W10
	1077 Move W10, [X22+40]
	1078 Move [X9+72], W10
	1079 Move W9, [X31+44]
	1080 Move [X19+1604], W31
	1081 Move [X19+288], W9
	1082 Move W9, [X31+40]
	1083 Add W9, W9, 1
	1084 Move [X31+40], W9
	1085 Compare W25, 0
	1086 JumpIfEqual {1142}
	1087 Compare X0, 0
	1088 JumpIfEqual {1939}
	1089 Move X1, X31
	1090 Call TMP_Asset.get_instanceID, X0
	1091 Move X8, [X19+248]
	1092 Compare X8, 0
	1093 JumpIfEqual {1939}
	1094 Move W23, W0
	1095 Move X0, X8
	1096 Move X1, X31
	1097 Call TMP_Asset.get_instanceID, X0
	1098 NotImplemented "Instruction CMP not yet implemented."
	1099 Move X0, X31
	1100 Call TMP_Settings.get_matchMaterialPreset
	1101 Move TEMP, X0
	1102 And TEMP, TEMP, 1
	1103 Compare TEMP, 1
	1104 JumpIfNotEqual {1123}
	1105 Move X8, [X19+256]
	1106 Compare X8, 0
	1107 JumpIfEqual {1939}
	1108 Move X9, 0x681000
	1109 Move X9, [X9+1568]
	1110 Move X23, [X19+280]
	1111 Move X24, [X8+32]
	1112 Move X0, [X9]
	1113 Move W9, [X0+224]
	1114 Compare W9, 0
	1115 JumpIfNotEqual {1117}
	1116 Call 0x1C17DFC
	1117 Move X0, X23
	1118 Move X1, X24
	1119 Move X2, X31
	1120 Call TMP_MaterialManager.GetFallbackMaterial, X0, X1
	1121 Move X23, [X19+256]
	1122 Move X24, X0
	1123 Move X23, [X19+256]
	1124 Compare X23, 0
	1125 JumpIfEqual {1939}
	1126 Move X24, [X23+32]
	1127 Move [X19+280], X24
	1128 Move X0, [X27]
	1129 Move W8, [X0+224]
	1130 Compare W8, 0
	1131 JumpIfNotEqual {1134}
	1132 Call 0x1C17DFC
	1133 Move X0, [X27]
	1134 Move X2, [X0+184]
	1135 Move X0, X24
	1136 Move X1, X23
	1137 Move X3, [X2+8]
	1138 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1139 Move [X19+288], W0
	1140 Move X24, 0x681000
	1141 Move X24, [X24+872]
	1142 Move X0, [X22+32]
	1143 Compare X0, 0
	1144 JumpIfEqual {1939}
	1145 Move X1, X31
	1146 Call Glyph.get_atlasIndex, X0
	1147 NotImplemented "Instruction CMP not yet implemented."
	1148 Move X0, [X22+32]
	1149 Compare X0, 0
	1150 JumpIfEqual {1939}
	1151 Move X22, [X19+256]
	1152 Move X23, [X19+280]
	1153 Move X1, X31
	1154 Call Glyph.get_atlasIndex, X0
	1155 Move X8, 0x681000
	1156 Move X8, [X8+1568]
	1157 Move W24, W0
	1158 Move X8, [X8]
	1159 Move W9, [X8+224]
	1160 Compare W9, 0
	1161 JumpIfNotEqual {1164}
	1162 Move X0, X8
	1163 Call 0x1C17DFC
	1164 Move X0, X22
	1165 Move X1, X23
	1166 Move W2, W24
	1167 Move X3, X31
	1168 Call TMP_MaterialManager.GetFallbackMaterial, X0, X1, X2
	1169 Move [X19+280], X0
	1170 Move X22, X0
	1171 Move X0, [X27]
	1172 Move X23, [X19+256]
	1173 Move W8, [X0+224]
	1174 Compare W8, 0
	1175 JumpIfNotEqual {1178}
	1176 Call 0x1C17DFC
	1177 Move X0, [X27]
	1178 Move X24, 0x681000
	1179 Move X24, [X24+872]
	1180 Move X2, [X0+184]
	1181 Move X0, X22
	1182 Move X1, X23
	1183 Move X3, [X2+8]
	1184 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1185 Move W25, 1
	1186 Move [X19+288], W0
	1187 Move X8, 0x61E000
	1188 Move X8, [X8+368]
	1189 Move X0, [X8]
	1190 Move W8, [X0+224]
	1191 Compare W8, 0
	1192 JumpIfNotEqual {1194}
	1193 Call 0x1C17DFC
	1194 Move W0, W21
	1195 Move X1, X31
	1196 Call Char.IsWhiteSpace, X0
	1197 Move W8, 0x200B
	1198 NotImplemented "Instruction CMP not yet implemented."
	1199 Move TEMP, X0
	1200 And TEMP, TEMP, 1
	1201 Compare TEMP, 1
	1202 JumpIfEqual {1268}
	1203 Move X8, [X27]
	1204 Move W9, [X8+224]
	1205 Compare W9, 0
	1206 JumpIfNotEqual {1210}
	1207 Move X0, X8
	1208 Call 0x1C17DFC
	1209 Move X8, [X27]
	1210 Move X9, [X8+184]
	1211 Move X9, [X9]
	1212 Compare X9, 0
	1213 JumpIfEqual {1939}
	1214 Move W0, [X19+288]
	1215 Move W10, [X9+24]
	1216 NotImplemented "Instruction CMP not yet implemented."
	1217 Move X10, W0
	1218 Move W11, 56
	1219 NotImplemented "Instruction MADD not yet implemented."
	1220 Move W10, [X10+84]
	1221 Move W11, 0x3FFE
	1222 NotImplemented "Instruction CMP not yet implemented."
	1223 Move X8, 0x620000
	1224 Move X22, [X19+280]
	1225 Move X8, [X8+3232]
	1226 Move X0, [X8]
	1227 Call 0x1C17F10
	1228 Move X1, X22
	1229 Move X2, X31
	1230 Move X21, X0
	1231 Call Material..ctor, X0, X1
	1232 Move X0, [X27]
	1233 Move X22, [X19+256]
	1234 Move W8, [X0+224]
	1235 Compare W8, 0
	1236 JumpIfNotEqual {1239}
	1237 Call 0x1C17DFC
	1238 Move X0, [X27]
	1239 Move X2, [X0+184]
	1240 Move X0, X21
	1241 Move X1, X22
	1242 Move X3, [X2+8]
	1243 Call MaterialReference.AddMaterialReference, X0, X1, X2, X3
	1244 Move [X19+288], W0
	1245 Move X8, [X27]
	1246 Move X8, [X8+184]
	1247 Move X9, [X8]
	1248 Compare X9, 0
	1249 JumpIfNotEqual {1261}
	1250 Move W10, [X8+224]
	1251 Compare W10, 0
	1252 JumpIfNotEqual {1261}
	1253 Move X0, X8
	1254 Call 0x1C17DFC
	1255 Move X8, [X27]
	1256 Move X8, [X8+184]
	1257 Move X9, [X8]
	1258 Compare X9, 0
	1259 JumpIfEqual {1939}
	1260 Move W0, [X19+288]
	1261 Move W8, [X9+24]
	1262 NotImplemented "Instruction CMP not yet implemented."
	1263 Move W8, 56
	1264 NotImplemented "Instruction SMADDL not yet implemented."
	1265 Move W9, [X8+84]
	1266 Add W9, W9, 1
	1267 Move [X8+84], W9
	1268 Move X8, [X19+872]
	1269 Compare X8, 0
	1270 JumpIfEqual {1939}
	1271 Move X8, [X8+56]
	1272 Compare X8, 0
	1273 JumpIfEqual {1939}
	1274 NotImplemented "Instruction LDRSW not yet implemented."
	1275 Move W10, [X8+24]
	1276 NotImplemented "Instruction CMP not yet implemented."
	1277 Move X10, [X19+280]
	1278 NotImplemented "Instruction NOP not yet implemented."
	1279 NotImplemented "Instruction MADD not yet implemented."
	1280 Move [X9+80], X10
	1281 Move W8, [X19+288]
	1282 Move [X9+88], W8
	1283 Move X0, [X27]
	1284 Move W9, [X0+224]
	1285 Compare W9, 0
	1286 JumpIfNotEqual {1290}
	1287 Call 0x1C17DFC
	1288 Move X0, [X27]
	1289 Move W8, [X19+288]
	1290 Move X9, [X0+184]
	1291 Move X9, [X9]
	1292 Compare X9, 0
	1293 JumpIfEqual {1939}
	1294 Move W10, [X9+24]
	1295 NotImplemented "Instruction CMP not yet implemented."
	1296 Move W10, 56
	1297 NotImplemented "Instruction SMADDL not yet implemented."
	1298 Move [X10+65], W25
	1299 Compare W25, 0
	1300 JumpIfEqual {1322}
	1301 Move W10, [X0+224]
	1302 Compare W10, 0
	1303 JumpIfNotEqual {1311}
	1304 Call 0x1C17DFC
	1305 Move X8, [X27]
	1306 Move X8, [X8+184]
	1307 Move X9, [X8]
	1308 Compare X9, 0
	1309 JumpIfEqual {1939}
	1310 Move W8, [X19+288]
	1311 Move W10, [X9+24]
	1312 NotImplemented "Instruction CMP not yet implemented."
	1313 Move W10, 56
	1314 NotImplemented "Instruction SMADDL not yet implemented."
	1315 Move X9, [X31+24]
	1316 Move [X8+72], X9
	1317 Move X8, [X31+32]
	1318 Move [X19+280], X9
	1319 Move [X19+256], X8
	1320 Move W8, [X31+44]
	1321 Move [X19+288], W8
	1322 Move W8, [X19+1168]
	1323 Add W8, W8, 1
	1324 Move [X19+1168], W8
	1325 Move W8, [X20+24]
	1326 Add W28, W28, 1
	1327 NotImplemented "Instruction CMP not yet implemented."
	1328 Move [X31+40], W31
	1329 Move X27, X26
	1330 Move W8, [X19+1013]
	1331 Compare W8, 0
	1332 JumpIfEqual {1352}
	1333 Move [X19+1013], W31
	1334 Move W0, [X19+1168]
	1335 Add X31, X31, 416
	1336 Move X20, [X31+112]
	1337 Move X19, [X31+120]
	1338 Move X22, [X31+96]
	1339 Move X21, [X31+104]
	1340 Move X24, [X31+80]
	1341 Move X23, [X31+88]
	1342 Move X26, [X31+64]
	1343 Move X25, [X31+72]
	1344 Move X28, [X31+48]
	1345 Move X27, [X31+56]
	1346 Move X29, [X31+32]
	1347 Move X30, [X31+40]
	1348 Move D9, [X31+16]
	1349 Move D8, [X31+24]
	1350 Move V10, [X31+128]
	1351 Return X0
	1352 Move X21, [X19+872]
	1353 Compare X21, 0
	1354 JumpIfEqual {1939}
	1355 Move W8, [X31+40]
	1356 Move [X21+28], W8
	1357 Move X0, [X27]
	1358 Move W8, [X0+224]
	1359 Compare W8, 0
	1360 JumpIfNotEqual {1363}
	1361 Call 0x1C17DFC
	1362 Move X0, [X27]
	1363 Move X8, [X0+184]
	1364 Move X0, [X8+8]
	1365 Compare X0, 0
	1366 JumpIfEqual {1939}
	1367 Move X8, 0x676000
	1368 Move X8, [X8+3448]
	1369 Move X1, [X8]
	1370 Call Dictionary`2<Int32, Int32>.get_Count, X0
	1371 Move [X21+52], W0
	1372 Move X21, [X19+872]
	1373 Compare X21, 0
	1374 JumpIfEqual {1939}
	1375 Add X21, X21, 96
	1376 Move X8, [X21]
	1377 Compare X8, 0
	1378 JumpIfEqual {1939}
	1379 Move W8, [X8+24]
	1380 Move W20, W0
	1381 NotImplemented "Instruction CMP not yet implemented."
	1382 Move X0, [X24]
	1383 Move W8, [X0+224]
	1384 Compare W8, 0
	1385 JumpIfNotEqual {1387}
	1386 Call 0x1C17DFC
	1387 Move X8, 0x680000
	1388 Move X8, [X8+1592]
	1389 Move X0, X21
	1390 Move W1, W20
	1391 Move W2, W31
	1392 Move X3, [X8]
	1393 Call TMP_TextInfo.Resize, X0, X1, X2
	1394 Move X8, [X19+1800]
	1395 Compare X8, 0
	1396 JumpIfEqual {1939}
	1397 Move W8, [X8+24]
	1398 Add X21, X19, 1800
	1399 NotImplemented "Instruction CMP not yet implemented."
	1400 Add W0, W20, 1
	1401 Move X1, X31
	1402 Call Mathf.NextPowerOfTwo, X0
	1403 Move X8, [X24]
	1404 Move W22, W0
	1405 Move W9, [X8+224]
	1406 Compare W9, 0
	1407 JumpIfNotEqual {1410}
	1408 Move X0, X8
	1409 Call 0x1C17DFC
	1410 Move X8, 0x680000
	1411 Move X8, [X8+1936]
	1412 Move X0, X21
	1413 Move W1, W22
	1414 Move X2, [X8]
	1415 Call 0x229A05C, X0, X1
	1416 Move W8, [X19+801]
	1417 Compare W8, 0
	1418 JumpIfEqual {1446}
	1419 Move X22, [X19+872]
	1420 Compare X22, 0
	1421 JumpIfEqual {1939}
	1422 Add X22, X22, 56
	1423 Move X9, [X22]
	1424 Compare X9, 0
	1425 JumpIfEqual {1939}
	1426 Move W8, [X19+1168]
	1427 Move W9, [X9+24]
	1428 Subtract W9, W9, W8
	1429 NotImplemented "Instruction CMP not yet implemented."
	1430 Move X0, [X24]
	1431 Add W10, W8, 1
	1432 NotImplemented "Instruction CMP not yet implemented."
	1433 Move W10, 256
	1434 Move W9, [X0+224]
	1435 NotImplemented "Instruction CSINC not yet implemented."
	1436 Compare W9, 0
	1437 JumpIfNotEqual {1439}
	1438 Call 0x1C17DFC
	1439 Move X8, 0x680000
	1440 Move X8, [X8+1584]
	1441 Move W2, 1
	1442 Move X0, X22
	1443 Move W1, W23
	1444 Move X3, [X8]
	1445 Call TMP_TextInfo.Resize, X0, X1, X2
	1446 NotImplemented "Instruction CMP not yet implemented."
	1447 Move X8, -50262016
	1448 Move X29, 0x680000
	1449 Move V10, [X8+3872]
	1450 Move X29, [X29+840]
	1451 Move X24, X31
	1452 Move X25, X31
	1453 Move W26, W20
	1454 Move W28, 84
	1455 Compare X25, 0
	1456 JumpIfEqual {1751}
	1457 Move X8, [X21]
	1458 Compare X8, 0
	1459 JumpIfEqual {1939}
	1460 Move W9, [X8+24]
	1461 NotImplemented "Instruction CMP not yet implemented."
	1462 Move X9, 0x61B000
	1463 Move X9, [X9+1432]
	1464 Add X8, X8, X25
	1465 Move X22, [X8+32]
	1466 Move X0, [X9]
	1467 Move W9, [X0+224]
	1468 Compare W9, 0
	1469 JumpIfNotEqual {1471}
	1470 Call 0x1C17DFC
	1471 Move X0, X22
	1472 Move X1, X31
	1473 Move X2, X31
	1474 Call Object.op_Equality, X0, X1
	1475 Move TEMP, X0
	1476 And TEMP, TEMP, 1
	1477 Compare TEMP, 1
	1478 JumpIfNotEqual {1530}
	1479 Move X0, [X27]
	1480 Move X23, [X21]
	1481 Move W8, [X0+224]
	1482 Compare W8, 0
	1483 JumpIfNotEqual {1486}
	1484 Call 0x1C17DFC
	1485 Move X0, [X27]
	1486 Move X8, [X0+184]
	1487 Move X8, [X8]
	1488 Compare X8, 0
	1489 JumpIfEqual {1939}
	1490 Move W9, [X8+24]
	1491 NotImplemented "Instruction CMP not yet implemented."
	1492 Add X8, X8, X28
	1493 NotImplemented "Instruction LDUR not yet implemented."
	1494 NotImplemented "Instruction LDUR not yet implemented."
	1495 NotImplemented "Instruction LDUR not yet implemented."
	1496 NotImplemented "Instruction LDUR not yet implemented."
	1497 Add X1, X31, 288
	1498 Move X0, X19
	1499 Move X2, X31
	1500 Move [X31+336], X9
	1501 Move [X31+304], V1
	1502 Move [X31+312], V0
	1503 Move [X31+18], V2
	1504 Call TMP_SubMeshUI.AddSubTextObject, X0, X1
	1505 Compare X23, 0
	1506 JumpIfEqual {1939}
	1507 Move X22, X0
	1508 Compare X0, 0
	1509 JumpIfEqual {1516}
	1510 Move X8, [X23]
	1511 Move X0, X22
	1512 Move X1, [X8+64]
	1513 Call 0x1C17E00
	1514 Compare X0, 0
	1515 JumpIfEqual {1981}
	1516 Move W8, [X23+24]
	1517 NotImplemented "Instruction CMP not yet implemented."
	1518 Add X8, X23, X25
	1519 Move [X8+32], X22
	1520 Move X8, [X19+872]
	1521 Compare X8, 0
	1522 JumpIfEqual {1939}
	1523 Move X8, [X8+96]
	1524 Compare X8, 0
	1525 JumpIfEqual {1939}
	1526 Move W9, [X8+24]
	1527 NotImplemented "Instruction CMP not yet implemented."
	1528 Add X8, X8, X24
	1529 Move [X8+48], X31
	1530 Move X0, [X19+896]
	1531 Compare X0, 0
	1532 JumpIfEqual {1939}
	1533 Move X1, X31
	1534 Call RectTransform.get_pivot, X0
	1535 Move X8, [X21]
	1536 Compare X8, 0
	1537 JumpIfEqual {1939}
	1538 Move W9, [X8+24]
	1539 NotImplemented "Instruction CMP not yet implemented."
	1540 Add X8, X8, X25
	1541 Move X0, [X8+32]
	1542 Compare X0, 0
	1543 JumpIfEqual {1939}
	1544 Move X1, X31
	1545 Move V8, V0
	1546 Move V9, V1
	1547 Call Graphic.get_rectTransform, X0
	1548 Compare X0, 0
	1549 JumpIfEqual {1939}
	1550 Move X1, X31
	1551 Call RectTransform.get_pivot, X0
	1552 Subtract S0, S8, S0
	1553 Subtract S1, S9, S1
	1554 Multiply S0, S0, S0
	1555 Multiply S1, S1, S1
	1556 Add S0, S0, S1
	1557 NotImplemented "Instruction FCMP not yet implemented."
	1558 Move X8, [X21]
	1559 Compare X8, 0
	1560 JumpIfEqual {1939}
	1561 Move W9, [X8+24]
	1562 NotImplemented "Instruction CMP not yet implemented."
	1563 Add X8, X8, X25
	1564 Move X0, [X8+32]
	1565 Compare X0, 0
	1566 JumpIfEqual {1939}
	1567 Move X1, X31
	1568 Call Graphic.get_rectTransform, X0
	1569 Move X8, [X19+896]
	1570 Compare X8, 0
	1571 JumpIfEqual {1939}
	1572 Move X22, X0
	1573 Move X0, X8
	1574 Move X1, X31
	1575 Call RectTransform.get_pivot, X0
	1576 Compare X22, 0
	1577 JumpIfEqual {1939}
	1578 Move X0, X22
	1579 Move X1, X31
	1580 Call RectTransform.set_pivot, X0, X1
	1581 Move X8, [X21]
	1582 Compare X8, 0
	1583 JumpIfEqual {1939}
	1584 Move W9, [X8+24]
	1585 NotImplemented "Instruction CMP not yet implemented."
	1586 Add X8, X8, X25
	1587 Move X8, [X8+32]
	1588 Compare X8, 0
	1589 JumpIfEqual {1939}
	1590 Move X9, 0x61B000
	1591 Move X9, [X9+1432]
	1592 Move X22, [X8+240]
	1593 Move X0, [X9]
	1594 Move W9, [X0+224]
	1595 Compare W9, 0
	1596 JumpIfNotEqual {1598}
	1597 Call 0x1C17DFC
	1598 Move X0, X22
	1599 Move X1, X31
	1600 Move X2, X31
	1601 Call Object.op_Equality, X0, X1
	1602 Move TEMP, X0
	1603 And TEMP, TEMP, 1
	1604 Compare TEMP, 1
	1605 JumpIfEqual {1642}
	1606 Move X8, [X21]
	1607 Compare X8, 0
	1608 JumpIfEqual {1939}
	1609 Move W9, [X8+24]
	1610 NotImplemented "Instruction CMP not yet implemented."
	1611 Add X8, X8, X25
	1612 Move X8, [X8+32]
	1613 Compare X8, 0
	1614 JumpIfEqual {1939}
	1615 Move X0, [X8+240]
	1616 Compare X0, 0
	1617 JumpIfEqual {1939}
	1618 Move X1, X31
	1619 Call Object.GetInstanceID, X0
	1620 Move X8, [X27]
	1621 Move W22, W0
	1622 Move W9, [X8+224]
	1623 Compare W9, 0
	1624 JumpIfNotEqual {1628}
	1625 Move X0, X8
	1626 Call 0x1C17DFC
	1627 Move X8, [X27]
	1628 Move X8, [X8+184]
	1629 Move X8, [X8]
	1630 Compare X8, 0
	1631 JumpIfEqual {1939}
	1632 Move W9, [X8+24]
	1633 NotImplemented "Instruction CMP not yet implemented."
	1634 Add X8, X8, X28
	1635 NotImplemented "Instruction LDUR not yet implemented."
	1636 Compare X0, 0
	1637 JumpIfEqual {1939}
	1638 Move X1, X31
	1639 Call Object.GetInstanceID, X0
	1640 NotImplemented "Instruction CMP not yet implemented."
	1641 Move X0, [X27]
	1642 Move X8, [X21]
	1643 Compare X8, 0
	1644 JumpIfEqual {1939}
	1645 Move W9, [X8+24]
	1646 NotImplemented "Instruction CMP not yet implemented."
	1647 Move X0, [X27]
	1648 Add X8, X8, X25
	1649 Move X22, [X8+32]
	1650 Move W9, [X0+224]
	1651 Compare W9, 0
	1652 JumpIfNotEqual {1655}
	1653 Call 0x1C17DFC
	1654 Move X0, [X27]
	1655 Move X8, [X0+184]
	1656 Move X8, [X8]
	1657 Compare X8, 0
	1658 JumpIfEqual {1939}
	1659 Move W9, [X8+24]
	1660 NotImplemented "Instruction CMP not yet implemented."
	1661 Compare X22, 0
	1662 JumpIfEqual {1939}
	1663 Add X8, X8, X28
	1664 NotImplemented "Instruction LDUR not yet implemented."
	1665 Move X0, X22
	1666 Move X2, X31
	1667 Call TMP_SubMeshUI.set_sharedMaterial, X0, X1
	1668 Move X8, [X21]
	1669 Compare X8, 0
	1670 JumpIfEqual {1939}
	1671 Move W9, [X8+24]
	1672 NotImplemented "Instruction CMP not yet implemented."
	1673 Move X0, [X27]
	1674 Move X9, [X0+184]
	1675 Move X9, [X9]
	1676 Compare X9, 0
	1677 JumpIfEqual {1939}
	1678 Move W10, [X9+24]
	1679 NotImplemented "Instruction CMP not yet implemented."
	1680 Add X8, X8, X25
	1681 Move X10, [X8+32]
	1682 Compare X10, 0
	1683 JumpIfEqual {1939}
	1684 Add X9, X9, X28
	1685 NotImplemented "Instruction LDUR not yet implemented."
	1686 Move [X10+216], X11
	1687 Move X8, [X8+32]
	1688 Compare X8, 0
	1689 JumpIfEqual {1939}
	1690 NotImplemented "Instruction LDUR not yet implemented."
	1691 Move [X8+224], X9
	1692 Move W8, [X0+224]
	1693 Compare W8, 0
	1694 JumpIfNotEqual {1697}
	1695 Call 0x1C17DFC
	1696 Move X0, [X27]
	1697 Move X8, [X0+184]
	1698 Move X8, [X8]
	1699 Compare X8, 0
	1700 JumpIfEqual {1939}
	1701 Move W9, [X8+24]
	1702 NotImplemented "Instruction CMP not yet implemented."
	1703 Add X9, X8, X28
	1704 NotImplemented "Instruction LDURB not yet implemented."
	1705 Compare W9, 0
	1706 JumpIfEqual {1752}
	1707 Move X9, [X21]
	1708 Compare X9, 0
	1709 JumpIfEqual {1939}
	1710 Move W10, [X9+24]
	1711 NotImplemented "Instruction CMP not yet implemented."
	1712 Add X9, X9, X25
	1713 Move W10, [X0+224]
	1714 Move X22, [X9+32]
	1715 Compare W10, 0
	1716 JumpIfNotEqual {1723}
	1717 Call 0x1C17DFC
	1718 Move X8, [X27]
	1719 Move X8, [X8+184]
	1720 Move X8, [X8]
	1721 Compare X8, 0
	1722 JumpIfEqual {1939}
	1723 Move W9, [X8+24]
	1724 NotImplemented "Instruction CMP not yet implemented."
	1725 Compare X22, 0
	1726 JumpIfEqual {1939}
	1727 Add X8, X8, X28
	1728 NotImplemented "Instruction LDUR not yet implemented."
	1729 Move X0, X22
	1730 Move X2, X31
	1731 Call TMP_SubMeshUI.set_fallbackMaterial, X0, X1
	1732 Move X8, [X21]
	1733 Compare X8, 0
	1734 JumpIfEqual {1939}
	1735 Move W9, [X8+24]
	1736 NotImplemented "Instruction CMP not yet implemented."
	1737 Move X0, [X27]
	1738 Move X9, [X0+184]
	1739 Move X9, [X9]
	1740 Compare X9, 0
	1741 JumpIfEqual {1939}
	1742 Move W10, [X9+24]
	1743 NotImplemented "Instruction CMP not yet implemented."
	1744 Add X8, X8, X25
	1745 Move X8, [X8+32]
	1746 Compare X8, 0
	1747 JumpIfEqual {1939}
	1748 Add X9, X9, X28
	1749 NotImplemented "Instruction LDUR not yet implemented."
	1750 Move [X8+256], X9
	1751 Move X0, [X27]
	1752 Move W8, [X0+224]
	1753 Compare W8, 0
	1754 JumpIfNotEqual {1757}
	1755 Call 0x1C17DFC
	1756 Move X0, [X27]
	1757 Move X8, [X0+184]
	1758 Move X8, [X8]
	1759 Compare X8, 0
	1760 JumpIfEqual {1939}
	1761 Move W9, [X8+24]
	1762 NotImplemented "Instruction CMP not yet implemented."
	1763 Move X9, [X19+872]
	1764 Compare X9, 0
	1765 JumpIfEqual {1939}
	1766 Move X22, [X9+96]
	1767 Compare X22, 0
	1768 JumpIfEqual {1939}
	1769 Move W9, [X22+24]
	1770 NotImplemented "Instruction CMP not yet implemented."
	1771 Add X9, X22, X24
	1772 Move X10, [X9+48]
	1773 Move W23, [X8]
	1774 Compare X10, 0
	1775 JumpIfEqual {1791}
	1776 Move W8, [X10+24]
	1777 Add X22, X9, 32
	1778 NotImplemented "Instruction CMP not yet implemented."
	1779 NotImplemented "Instruction CMP not yet implemented."
	1780 Move W9, [X19+801]
	1781 Compare W9, 0
	1782 JumpIfEqual {1860}
	1783 Add W9, W8, 3
	1784 NotImplemented "Instruction CMP not yet implemented."
	1785 NotImplemented "Instruction CSEL not yet implemented."
	1786 NotImplemented "Instruction SBFM not yet implemented."
	1787 Subtract W8, W8, W23
	1788 NotImplemented "Instruction CMP not yet implemented."
	1789 NotImplemented "Instruction CMP not yet implemented."
	1790 Add W23, W23, 256
	1791 Compare X25, 0
	1792 JumpIfEqual {1837}
	1793 Move X8, [X21]
	1794 Compare X8, 0
	1795 JumpIfEqual {1939}
	1796 Move W9, [X8+24]
	1797 NotImplemented "Instruction CMP not yet implemented."
	1798 Add X8, X8, X25
	1799 Move X0, [X8+32]
	1800 Compare X0, 0
	1801 JumpIfEqual {1939}
	1802 Move X1, X31
	1803 Call TMP_SubMeshUI.get_mesh, X0
	1804 Move X1, X0
	1805 NotImplemented "Instruction MOVI not yet implemented."
	1806 Add W2, W23, 1
	1807 Add X0, X31, 208
	1808 Move X3, X31
	1809 Move [X31+256], V0
	1810 Move [X31+264], V0
	1811 Move [X31+224], V0
	1812 Move [X31+232], V0
	1813 Move [X31+13], V0
	1814 Call TMP_MeshInfo..ctor, X0, X1, X2
	1815 Add X0, X31, 48
	1816 Add X1, X31, 208
	1817 Move W2, 80
	1818 Call 0x3EB2AC0
	1819 Move W8, [X22+24]
	1820 NotImplemented "Instruction CMP not yet implemented."
	1821 Add X8, X22, X24
	1822 Add X0, X8, 32
	1823 Add X1, X31, 48
	1824 Add W0, W23, 1
	1825 Move X1, X31
	1826 Call Mathf.NextPowerOfTwo, X0
	1827 Move W23, W0
	1828 Move X0, [X29]
	1829 Move W8, [X0+224]
	1830 Compare W8, 0
	1831 JumpIfNotEqual {1833}
	1832 Call 0x1C17DFC
	1833 Move X0, X22
	1834 Move W1, W23
	1835 Move X2, X31
	1836 Call TMP_MeshInfo.ResizeMeshInfo, X0, X1
	1837 Move X1, [X19+928]
	1838 NotImplemented "Instruction MOVI not yet implemented."
	1839 Add W2, W23, 1
	1840 Add X0, X31, 208
	1841 Move X3, X31
	1842 Move [X31+256], V0
	1843 Move [X31+264], V0
	1844 Move [X31+224], V0
	1845 Move [X31+232], V0
	1846 Move [X31+13], V0
	1847 Call TMP_MeshInfo..ctor, X0, X1, X2
	1848 Add X0, X31, 128
	1849 Add X1, X31, 208
	1850 Move W2, 80
	1851 Call 0x3EB2AC0
	1852 Move W8, [X22+24]
	1853 Compare W8, 0
	1854 JumpIfEqual {1980}
	1855 Add X8, X22, X24
	1856 Add X0, X8, 32
	1857 Add X1, X31, 128
	1858 Move W2, 80
	1859 Call 0x3EB2AC0
	1860 Move X8, [X19+872]
	1861 Compare X8, 0
	1862 JumpIfEqual {1939}
	1863 Move X22, [X8+96]
	1864 Compare X22, 0
	1865 JumpIfEqual {1939}
	1866 Move X0, [X27]
	1867 Move W8, [X0+224]
	1868 Compare W8, 0
	1869 JumpIfNotEqual {1872}
	1870 Call 0x1C17DFC
	1871 Move X0, [X27]
	1872 Move X8, [X0+184]
	1873 Move X8, [X8]
	1874 Compare X8, 0
	1875 JumpIfEqual {1939}
	1876 Move W9, [X8+24]
	1877 NotImplemented "Instruction CMP not yet implemented."
	1878 Move W9, [X22+24]
	1879 NotImplemented "Instruction CMP not yet implemented."
	1880 Add X8, X8, X28
	1881 NotImplemented "Instruction LDUR not yet implemented."
	1882 Add X25, X25, 1
	1883 Add X9, X22, X24
	1884 Add X24, X24, 80
	1885 NotImplemented "Instruction CMP not yet implemented."
	1886 Add X28, X28, 56
	1887 Move [X9+104], X8
	1888 Move X8, [X21]
	1889 Compare X8, 0
	1890 JumpIfEqual {1939}
	1891 NotImplemented "Instruction SBFM not yet implemented."
	1892 Add X23, X9, 32
	1893 Move W9, [X8+24]
	1894 NotImplemented "Instruction CMP not yet implemented."
	1895 Move X9, 0x61B000
	1896 Move X9, [X9+1432]
	1897 Move X22, [X8]
	1898 Move X0, [X9]
	1899 Move W9, [X0+224]
	1900 Compare W9, 0
	1901 JumpIfNotEqual {1903}
	1902 Call 0x1C17DFC
	1903 Move X0, X22
	1904 Move X1, X31
	1905 Move X2, X31
	1906 Call Object.op_Inequality, X0, X1
	1907 Move TEMP, X0
	1908 And TEMP, TEMP, 1
	1909 Compare TEMP, 1
	1910 JumpIfNotEqual {1334}
	1911 Move X8, [X19+872]
	1912 Compare X8, 0
	1913 JumpIfEqual {1939}
	1914 Move X8, [X8+96]
	1915 Compare X8, 0
	1916 JumpIfEqual {1939}
	1917 Move W8, [X8+24]
	1918 NotImplemented "Instruction CMP not yet implemented."
	1919 Move X8, [X21]
	1920 Compare X8, 0
	1921 JumpIfEqual {1939}
	1922 Move W9, [X8+24]
	1923 NotImplemented "Instruction CMP not yet implemented."
	1924 Move X0, [X8]
	1925 Compare X0, 0
	1926 JumpIfEqual {1939}
	1927 Move X1, X31
	1928 Call Graphic.get_canvasRenderer, X0
	1929 Compare X0, 0
	1930 JumpIfEqual {1939}
	1931 Move X1, X31
	1932 Move X2, X31
	1933 Call CanvasRenderer.SetMesh, X0, X1
	1934 Move X8, [X21]
	1935 Add W20, W20, 1
	1936 Add X23, X23, 8
	1937 Compare X8, 0
	1938 JumpIfNotEqual {1893}
	1939 Call 0x1C17F20
	1940 Move X22, 0x61D000
	1941 Move X22, [X22+632]
	1942 Add X8, X19, 744
	1943 Move X9, 0x61B000
	1944 Move X9, [X9+1432]
	1945 Move X21, [X8]
	1946 Move X0, [X9]
	1947 Move W9, [X0+224]
	1948 Compare W9, 0
	1949 JumpIfNotEqual {1951}
	1950 Call 0x1C17DFC
	1951 Move X0, X21
	1952 Move X1, X31
	1953 Move X2, X31
	1954 Call Object.op_Inequality, X0, X1
	1955 Move TEMP, X0
	1956 And TEMP, TEMP, 1
	1957 Compare TEMP, 1
	1958 JumpIfNotEqual {369}
	1959 Compare X21, 0
	1960 JumpIfEqual {1939}
	1961 Move X8, [X22]
	1962 Move X9, [X21]
	1963 Move X0, X21
	1964 Move X8, [X8+184]
	1965 Move X10, [X9+1368]
	1966 Move X2, [X9+1376]
	1967 Move X1, [X8]
	1968 NotImplemented "Instruction BLR not yet implemented."
	1969 Move X8, [X21]
	1970 Move X0, X21
	1971 Move X9, [X8+2376]
	1972 Move X1, [X8+2384]
	1973 NotImplemented "Instruction BLR not yet implemented."
	1974 Move X0, [X21+872]
	1975 Compare X0, 0
	1976 JumpIfEqual {1939}
	1977 Move X1, X31
	1978 Call TMP_TextInfo.Clear, X0
	1979 Add X8, X21, 744
	1980 Call 0x1C17F28
	1981 Call 0x1C17F44
	1982 Move X1, X31
	1983 Call 0x1C17DEC

Method: System.Void ComputeMarginSize()

Disassembly:
	0x03AD99D8 MOV W2, W31
	0x03AD99DC MOV W3, W31
	0x03AD99E0 LDR X8, [X8 + 0xB8]
	0x03AD99E4 MOV X4, X31
	0x03AD99E8 STR X0, [X8 + 0x20]
	0x03AD99EC LDR X0, [X24]
	0x03AD99F0 BL 0x3BFE7FC
	0x03AD99F4 LDR X8, [X19]
	0x03AD99F8 MOVZ W1, 0x1
	0x03AD99FC MOV W2, W31
	0x03AD9A00 MOV W3, W31
	0x03AD9A04 LDR X8, [X8 + 0xB8]
	0x03AD9A08 MOV X4, X31
	0x03AD9A0C STR X0, [X8 + 0x28]
	0x03AD9A10 LDR X0, [X23]
	0x03AD9A14 BL 0x3BFE7FC
	0x03AD9A18 LDR X8, [X19]
	0x03AD9A1C MOVZ W1, 0x1
	0x03AD9A20 MOV W2, W31
	0x03AD9A24 MOV W3, W31
	0x03AD9A28 LDR X8, [X8 + 0xB8]
	0x03AD9A2C MOV X4, X31
	0x03AD9A30 STR X0, [X8 + 0x30]
	0x03AD9A34 LDR X0, [X22]
	0x03AD9A38 BL 0x3BFE7FC
	0x03AD9A3C LDR X8, [X19]
	0x03AD9A40 MOVZ W1, 0x1
	0x03AD9A44 MOV W2, W31
	0x03AD9A48 MOV W3, W31
	0x03AD9A4C LDR X8, [X8 + 0xB8]
	0x03AD9A50 MOV X4, X31
	0x03AD9A54 STR X0, [X8 + 0x38]
	0x03AD9A58 LDR X0, [X21]
	0x03AD9A5C BL 0x3BFE7FC
	0x03AD9A60 LDR X8, [X19]
	0x03AD9A64 MOVZ W1, 0x1
	0x03AD9A68 MOV W2, W31
	0x03AD9A6C MOV W3, W31
	0x03AD9A70 LDR X8, [X8 + 0xB8]
	0x03AD9A74 MOV X4, X31
	0x03AD9A78 STR X0, [X8 + 0x40]
	0x03AD9A7C ADRP X8, 0x67F000
	0x03AD9A80 LDR X8, [X8 + 0x708]
	0x03AD9A84 LDR X0, [X8]
	0x03AD9A88 BL 0x3BFE7FC
	0x03AD9A8C LDR X8, [X19]
	0x03AD9A90 MOVZ W1, 0x1
	0x03AD9A94 MOV W2, W31
	0x03AD9A98 MOV W3, W31
	0x03AD9A9C LDR X8, [X8 + 0xB8]
	0x03AD9AA0 MOV X4, X31
	0x03AD9AA4 STR X0, [X8 + 0x48]
	0x03AD9AA8 ADRP X8, 0x67F000
	0x03AD9AAC LDR X8, [X8 + 0x6E8]
	0x03AD9AB0 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x90A000
	006 Move X20, 0x61B000
	007 Move W8, [X21+1319]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x61B000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1319], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call TMP_Text.get_rectTransform, X0
	022 Move X8, [X20]
	023 Move X20, X0
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {63}
	037 Move X0, [X19+896]
	038 Compare X0, 0
	039 JumpIfEqual {68}
	040 Move X1, X31
	041 Call RectTransform.get_rect, X0
	042 Move V0, [X19+832]
	043 Move V1, [X19+840]
	044 Move X0, [X19+896]
	045 Move [X19+904], S2
	046 Move V2.S[1], V3.S[0]
	047 Subtract V0, V2, V0
	048 Subtract V0, V0, V1
	049 Move [X19+856], D0
	050 Move [X19+908], S3
	051 Compare X0, 0
	052 JumpIfEqual {68}
	053 Move X1, X31
	054 Call RectTransform.get_pivot, X0
	055 Move X8, [X19]
	056 Move [X19+912], S0
	057 Move [X19+916], S1
	058 Move X0, X19
	059 Move X9, [X8+1992]
	060 Move X1, [X8+2000]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move [X19+1816], X0
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20

Method: System.Void OnDidApplyAnimationProperties()

Disassembly:
	0x03AD9AB4 BL 0x3BFE7FC
	0x03AD9AB8 LDR X8, [X19]
	0x03AD9ABC MOVZ W1, 0x1
	0x03AD9AC0 MOV W2, W31
	0x03AD9AC4 MOV W3, W31
	0x03AD9AC8 LDR X8, [X8 + 0xB8]
	0x03AD9ACC MOV X4, X31
	0x03AD9AD0 STR X0, [X8 + 0x50]
	0x03AD9AD4 ADRP X8, 0x67F000
	0x03AD9AD8 LDR X8, [X8 + 0x700]
	0x03AD9ADC LDR X0, [X8]
	0x03AD9AE0 BL 0x3BFE7FC
	0x03AD9AE4 LDR X8, [X19]
	0x03AD9AE8 MOVZ W1, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W9, 1
	005 Move [X0+880], W9
	006 Move X19, X0
	007 Move X9, [X8+760]
	008 Move X1, [X8+768]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X8, [X19]
	011 Move X0, X19
	012 Move X2, [X8+744]
	013 Move X1, [X8+752]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X2

Method: System.Void OnCanvasHierarchyChanged()

Disassembly:
	0x03AD9AEC MOV W2, W31
	0x03AD9AF0 MOV W3, W31
	0x03AD9AF4 LDR X8, [X8 + 0xB8]
	0x03AD9AF8 MOV X4, X31
	0x03AD9AFC STR X0, [X8 + 0x58]
	0x03AD9B00 ADRP X8, 0x67F000
	0x03AD9B04 LDR X8, [X8 + 0x6E0]
	0x03AD9B08 LDR X0, [X8]
	0x03AD9B0C BL 0x3BFE7FC
	0x03AD9B10 LDR X8, [X19]
	0x03AD9B14 MOVZ W1, 0x1
	0x03AD9B18 MOV W2, W31
	0x03AD9B1C MOV W3, W31
	0x03AD9B20 LDR X8, [X8 + 0xB8]
	0x03AD9B24 MOV X4, X31
	0x03AD9B28 STR X0, [X8 + 0x60]
	0x03AD9B2C ADRP X8, 0x67F000
	0x03AD9B30 LDR X8, [X8 + 0x6F8]
	0x03AD9B34 LDR X0, [X8]
	0x03AD9B38 BL 0x3BFE7FC
	0x03AD9B3C LDR X8, [X19]
	0x03AD9B40 MOVZ W1, 0x1
	0x03AD9B44 MOV W2, W31
	0x03AD9B48 MOV W3, W31
	0x03AD9B4C LDR X8, [X8 + 0xB8]
	0x03AD9B50 MOV X4, X31
	0x03AD9B54 STR X0, [X8 + 0x68]
	0x03AD9B58 ADRP X8, 0x67F000
	0x03AD9B5C LDR X8, [X8 + 0x6D0]
	0x03AD9B60 LDR X0, [X8]
	0x03AD9B64 BL 0x3BFE7FC
	0x03AD9B68 LDR X8, [X19]
	0x03AD9B6C MOVZ W1, 0x1
	0x03AD9B70 MOV W2, W31
	0x03AD9B74 MOV W3, W31
	0x03AD9B78 LDR X8, [X8 + 0xB8]
	0x03AD9B7C MOV X4, X31
	0x03AD9B80 STR X0, [X8 + 0x70]
	0x03AD9B84 ADRP X8, 0x67F000
	0x03AD9B88 LDR X8, [X8 + 0x6D8]
	0x03AD9B8C LDR X0, [X8]
	0x03AD9B90 BL 0x3BFE7FC
	0x03AD9B94 LDR X8, [X19]
	0x03AD9B98 MOVZ W1, 0x1
	0x03AD9B9C MOV W2, W31
	0x03AD9BA0 MOV W3, W31
	0x03AD9BA4 LDR X8, [X8 + 0xB8]
	0x03AD9BA8 MOV X4, X31
	0x03AD9BAC STR X0, [X8 + 0x78]
	0x03AD9BB0 ADRP X8, 0x67F000
	0x03AD9BB4 LDR X8, [X8 + 0x6F0]
	0x03AD9BB8 LDR X0, [X8]
	0x03AD9BBC BL 0x3BFE7FC
	0x03AD9BC0 LDR X8, [X19]
	0x03AD9BC4 MOVZ W1, 0x1
	0x03AD9BC8 MOV W2, W31
	0x03AD9BCC MOV W3, W31
	0x03AD9BD0 LDR X8, [X8 + 0xB8]
	0x03AD9BD4 MOV X4, X31
	0x03AD9BD8 STR X0, [X8 + 0x80]
	0x03AD9BDC ADRP X8, 0x67F000
	0x03AD9BE0 LDR X8, [X8 + 0x6C8]
	0x03AD9BE4 LDR X0, [X8]
	0x03AD9BE8 BL 0x3BFE7FC
	0x03AD9BEC LDR X8, [X19]
	0x03AD9BF0 MOVZ W1, 0x1
	0x03AD9BF4 MOV W2, W31
	0x03AD9BF8 MOV W3, W31
	0x03AD9BFC LDR X8, [X8 + 0xB8]
	0x03AD9C00 MOV X4, X31
	0x03AD9C04 STR X0, [X8 + 0x88]
	0x03AD9C08 ADRP X8, 0x67F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x90A000
	005 Move W8, [X20+1320]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x61B000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move X0, 0x680000
	015 Move X0, [X0+1384]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1320], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call MaskableGraphic.OnCanvasHierarchyChanged, X0
	022 Move X0, X19
	023 Move X1, X31
	024 Call Graphic.get_canvas, X0
	025 Move W8, [X19+1021]
	026 Move [X19+1832], X0
	027 Compare W8, 0
	028 JumpIfEqual {64}
	029 Move X0, X19
	030 Move X1, X31
	031 Call Behaviour.get_isActiveAndEnabled, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {64}
	036 Move X8, 0x61B000
	037 Move X8, [X8+1432]
	038 Move X20, [X19+1832]
	039 Move X0, [X8]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {68}
	052 Move X0, [X19+1832]
	053 Compare X0, 0
	054 JumpIfEqual {96}
	055 Move X1, X31
	056 Call Behaviour.get_enabled, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {68}
	061 Move W8, [X19+800]
	062 Compare W8, 0
	063 JumpIfEqual {82}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Return 
	068 Move X8, 0x680000
	069 Move X8, [X8+1384]
	070 Move X0, [X8]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X19
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X1, X31
	079 Move X30, [X31+32]
	080 Call TMP_UpdateManager.UnRegisterTextObjectForUpdate, X0
	081 Return 
	082 Move X8, 0x680000
	083 Move X8, [X8+1384]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X19
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X1, X31
	093 Move X30, [X31+32]
	094 Call TMP_UpdateManager.RegisterTextObjectForUpdate, X0
	095 Return 
	096 Call 0x1C17F20

Method: System.Void OnTransformParentChanged()

Disassembly:
	0x03AD9C0C LDR X8, [X8 + 0x710]
	0x03AD9C10 LDR X0, [X8]
	0x03AD9C14 BL 0x3BFE7FC
	0x03AD9C18 LDR X8, [X19]
	0x03AD9C1C MOVZ W1, 0x1
	0x03AD9C20 MOV W2, W31
	0x03AD9C24 MOV W3, W31
	0x03AD9C28 LDR X8, [X8 + 0xB8]
	0x03AD9C2C MOV X4, X31
	0x03AD9C30 STR X0, [X8 + 0x90]
	0x03AD9C34 ADRP X8, 0x67F000
	0x03AD9C38 LDR X8, [X8 + 0x6C0]
	0x03AD9C3C LDR X0, [X8]
	0x03AD9C40 BL 0x3BFE7FC
	0x03AD9C44 LDR X8, [X19]
	0x03AD9C48 LDP X20, X19, [X31 + 0x50]
	0x03AD9C4C LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call MaskableGraphic.OnTransformParentChanged, X0
	006 Move X0, X19
	007 Move X1, X31
	008 Call Graphic.get_canvas, X0
	009 Move X8, [X19]
	010 Move [X19+1832], X0
	011 Move X0, X19
	012 Move X9, [X8+2216]
	013 Move X1, [X8+2224]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W8, 1
	016 Move [X19+880], W8
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void OnRectTransformDimensionsChange()

Disassembly:
	0x03AD9C50 LDP X24, X23, [X31 + 0x30]
	0x03AD9C54 LDR X8, [X8 + 0xB8]
	0x03AD9C58 LDP X26, X25, [X31 + 0x20]
	0x03AD9C5C LDP X28, X27, [X31 + 0x10]
	0x03AD9C60 STR X0, [X8 + 0x98]
	0x03AD9C64 LDP X29, X30, [X31], #0x60
	0x03AD9C68 RET
	0x03AD9C6C RET
	0x03AD9C70 STR X30, [X31 - 0x20]!
	0x03AD9C74 STP X20, X19, [X31 + 0x10]
	0x03AD9C78 ADRP X20, 0x909000
	0x03AD9C7C LDRB W8, [X20 + 0x532]
	0x03AD9C80 MOV X19, X0
	0x03AD9C84 TBNZ X8, 0x0, 0x3AD9C9C
	0x03AD9C88 ADRP X0, 0x67F000
	0x03AD9C8C LDR X0, [X0 + 0x718]
	0x03AD9C90 BL 0x1C16CF4
	0x03AD9C94 MOVZ W8, 0x1
	0x03AD9C98 STRB W8, [X20 + 0x532]
	0x03AD9C9C LDR W8, [X19 + 0x10]
	0x03AD9CA0 CMP W8, 0x1
	0x03AD9CA4 B.EQ 0x3AD9CBC
	0x03AD9CA8 CBNZ W8, 0x3AD9D14
	0x03AD9CAC MOVZ W0, 0x1
	0x03AD9CB0 STR X31, [X19 + 0x18]
	0x03AD9CB4 STR W0, [X19 + 0x10]
	0x03AD9CB8 B 0x3AD9D18
	0x03AD9CBC MOVN W8, 0x0
	0x03AD9CC0 STR W8, [X19 + 0x10]
	0x03AD9CC4 ADRP X8, 0x67F000
	0x03AD9CC8 LDR X8, [X8 + 0x718]
	0x03AD9CCC LDR X19, [X19 + 0x20]
	0x03AD9CD0 LDR X0, [X8]
	0x03AD9CD4 LDR W8, [X0 + 0xE0]
	0x03AD9CD8 CBNZ W8, 0x3AD9CE0
	0x03AD9CDC BL 0x1C16DFC
	0x03AD9CE0 MOV X0, X19
	0x03AD9CE4 MOV X1, X31
	0x03AD9CE8 BL 0x3CD16F4
	0x03AD9CEC CBZ X19, 0x3AD9D24
	0x03AD9CF0 LDR X8, [X19 + 0x78]
	0x03AD9CF4 CBZ X8, 0x3AD9D08
	0x03AD9CF8 LDR X9, [X8 + 0x18]
	0x03AD9CFC LDR X0, [X8 + 0x40]
	0x03AD9D00 LDR X1, [X8 + 0x28]
	0x03AD9D04 BLR X9
	0x03AD9D08 MOV W0, W31
	0x03AD9D0C STR X31, [X19 + 0x6D0]
	0x03AD9D10 B 0x3AD9D18
	0x03AD9D14 MOV W0, W31
	0x03AD9D18 LDP X20, X19, [X31 + 0x10]
	0x03AD9D1C LDR X30, [X31], #0x20
	0x03AD9D20 RET
	0x03AD9D24 BL 0x1C16F20
	0x03AD9D28 LDR X0, [X0 + 0x18]
	0x03AD9D2C RET
	0x03AD9D30 STP X30, X19, [X31 - 0x10]!
	0x03AD9D34 ADRP X0, 0x61A000
	0x03AD9D38 LDR X0, [X0 + 0xB40]
	0x03AD9D3C BL 0x1C16D08
	0x03AD9D40 BL 0x1C16F10
	0x03AD9D44 MOV X1, X31
	0x03AD9D48 MOV X19, X0
	0x03AD9D4C BL 0x3380310
	0x03AD9D50 ADRP X0, 0x67F000
	0x03AD9D54 LDR X0, [X0 + 0x7B0]
	0x03AD9D58 BL 0x1C16D08
	0x03AD9D5C MOV X1, X0
	0x03AD9D60 MOV X0, X19
	0x03AD9D64 BL 0x1C16DEC
	0x03AD9D68 LDR X0, [X0 + 0x18]
	0x03AD9D6C RET
	0x03AD9D70 RET
	0x03AD9D74 STR X30, [X31 - 0x20]!
	0x03AD9D78 STP X20, X19, [X31 + 0x10]
	0x03AD9D7C ADRP X19, 0x909000
	0x03AD9D80 LDRB W8, [X19 + 0x533]
	0x03AD9D84 MOV X20, X0
	0x03AD9D88 TBNZ X8, 0x0, 0x3AD9DA0
	0x03AD9D8C ADRP X0, 0x67F000
	0x03AD9D90 LDR X0, [X0 + 0x718]
	0x03AD9D94 BL 0x1C16CF4
	0x03AD9D98 MOVZ W8, 0x1
	0x03AD9D9C STRB W8, [X19 + 0x533]
	0x03AD9DA0 LDR W8, [X20 + 0x10]
	0x03AD9DA4 CMP W8, 0x1
	0x03AD9DA8 B.EQ 0x3AD9DC0
	0x03AD9DAC CBNZ W8, 0x3AD9E20
	0x03AD9DB0 MOVZ W0, 0x1
	0x03AD9DB4 STR X31, [X20 + 0x18]
	0x03AD9DB8 STR W0, [X20 + 0x10]
	0x03AD9DBC B 0x3AD9E24
	0x03AD9DC0 LDR X19, [X20 + 0x20]
	0x03AD9DC4 MOVN W8, 0x0
	0x03AD9DC8 STR W8, [X20 + 0x10]
	0x03AD9DCC CBZ X19, 0x3AD9E30
	0x03AD9DD0 MOVZ W8, 0x1
	0x03AD9DD4 STRB W8, [X19 + 0x140]
	0x03AD9DD8 ADRP X8, 0x67F000
	0x03AD9DDC LDR X8, [X8 + 0x718]
	0x03AD9DE0 LDR X0, [X8]
	0x03AD9DE4 LDR W8, [X0 + 0xE0]
	0x03AD9DE8 CBNZ W8, 0x3AD9DF0
	0x03AD9DEC BL 0x1C16DFC
	0x03AD9DF0 MOV X0, X19
	0x03AD9DF4 MOV X1, X31
	0x03AD9DF8 BL 0x3CD16F4
	0x03AD9DFC LDR X8, [X19 + 0x80]
	0x03AD9E00 CBZ X8, 0x3AD9E14
	0x03AD9E04 LDR X9, [X8 + 0x18]
	0x03AD9E08 LDR X0, [X8 + 0x40]
	0x03AD9E0C LDR X1, [X8 + 0x28]
	0x03AD9E10 BLR X9
	0x03AD9E14 MOV W0, W31
	0x03AD9E18 STR X31, [X19 + 0x6D8]
	0x03AD9E1C B 0x3AD9E24

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x90A000
	007 Move W8, [X20+1321]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x61B000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1321], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Component.get_gameObject, X0
	021 Compare X0, 0
	022 JumpIfEqual {138}
	023 Move X1, X31
	024 Call GameObject.get_activeInHierarchy, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {104}
	029 Move X21, 0x61B000
	030 Move X21, [X21+1432]
	031 Move X20, [X19+1832]
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {52}
	045 Move X0, [X19+1832]
	046 Compare X0, 0
	047 JumpIfEqual {138}
	048 Move V8, [X19+1840]
	049 Move X1, X31
	050 Call Canvas.get_scaleFactor, X0
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move X0, X19
	053 Move X1, X31
	054 Call TMP_Text.get_rectTransform, X0
	055 Move X8, [X21]
	056 Move X20, X0
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Inequality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {116}
	070 Move X0, [X19+896]
	071 Compare X0, 0
	072 JumpIfEqual {138}
	073 Move X1, X31
	074 Call RectTransform.get_rect, X0
	075 Move V0, [X19+904]
	076 Move X8, -50262016
	077 Move V8, [X8+3880]
	078 NotImplemented "Instruction FABD not yet implemented."
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move X0, [X19+896]
	081 Compare X0, 0
	082 JumpIfEqual {138}
	083 Move X1, X31
	084 Call RectTransform.get_rect, X0
	085 Move V0, [X19+908]
	086 NotImplemented "Instruction FABD not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move X0, [X19+896]
	089 Compare X0, 0
	090 JumpIfEqual {138}
	091 Move X1, X31
	092 Call RectTransform.get_pivot, X0
	093 Move V1, [X19+912]
	094 NotImplemented "Instruction FABD not yet implemented."
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 Move X0, [X19+896]
	097 Compare X0, 0
	098 JumpIfEqual {138}
	099 Move X1, X31
	100 Call RectTransform.get_pivot, X0
	101 Move V0, [X19+916]
	102 NotImplemented "Instruction FABD not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X30, [X31+16]
	107 Move X21, [X31+24]
	108 Move V8, [X31+48]
	109 Return 
	110 Move X0, [X19+1832]
	111 Compare X0, 0
	112 JumpIfEqual {138}
	113 Move X1, X31
	114 Call Canvas.get_scaleFactor, X0
	115 Move [X19+1840], S0
	116 Move X8, [X19]
	117 Move X0, X19
	118 Move X9, [X8+2216]
	119 Move X1, [X8+2224]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X0, X19
	122 Call TextMeshProUGUI.UpdateSubObjectPivot, X0
	123 Move X8, [X19]
	124 Move X0, X19
	125 Move X9, [X8+760]
	126 Move X1, [X8+768]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X8, [X19]
	129 Move X0, X19
	130 Move X20, [X31+32]
	131 Move X19, [X31+40]
	132 Move X30, [X31+16]
	133 Move X21, [X31+24]
	134 Move X2, [X8+744]
	135 Move X1, [X8+752]
	136 Move V8, [X31+48]
	137 CallNoReturn X2
	138 Call 0x1C17F20

Method: System.Void InternalUpdate()

Disassembly:
	0x03AD9E20 MOV W0, W31
	0x03AD9E24 LDP X20, X19, [X31 + 0x10]
	0x03AD9E28 LDR X30, [X31], #0x20
	0x03AD9E2C RET
	0x03AD9E30 BL 0x1C16F20
	0x03AD9E34 LDR X0, [X0 + 0x18]
	0x03AD9E38 RET
	0x03AD9E3C STP X30, X19, [X31 - 0x10]!
	0x03AD9E40 ADRP X0, 0x61A000
	0x03AD9E44 LDR X0, [X0 + 0xB40]
	0x03AD9E48 BL 0x1C16D08
	0x03AD9E4C BL 0x1C16F10
	0x03AD9E50 MOV X1, X31
	0x03AD9E54 MOV X19, X0
	0x03AD9E58 BL 0x3380310
	0x03AD9E5C ADRP X0, 0x67F000
	0x03AD9E60 LDR X0, [X0 + 0x7B8]
	0x03AD9E64 BL 0x1C16D08
	0x03AD9E68 MOV X1, X0
	0x03AD9E6C MOV X0, X19
	0x03AD9E70 BL 0x1C16DEC
	0x03AD9E74 LDR X0, [X0 + 0x18]
	0x03AD9E78 RET
	0x03AD9E7C STR X30, [X31 - 0x30]!
	0x03AD9E80 STP X22, X21, [X31 + 0x10]
	0x03AD9E84 STP X20, X19, [X31 + 0x20]
	0x03AD9E88 ADRP X22, 0x909000
	0x03AD9E8C ADRP X21, 0x67F000
	0x03AD9E90 LDRB W8, [X22 + 0x534]
	0x03AD9E94 LDR X21, [X21 + 0x3F0]
	0x03AD9E98 MOV X19, X1
	0x03AD9E9C MOV W20, W0
	0x03AD9EA0 TBNZ X8, 0x0, 0x3AD9EC4
	0x03AD9EA4 ADRP X0, 0x67F000
	0x03AD9EA8 LDR X0, [X0 + 0x7C0]
	0x03AD9EAC BL 0x1C16CF4
	0x03AD9EB0 ADRP X0, 0x67F000
	0x03AD9EB4 LDR X0, [X0 + 0x3F0]
	0x03AD9EB8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W8, [X0+880]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfNotEqual {32}
	008 Move X0, [X19+896]
	009 Compare X0, 0
	010 JumpIfEqual {47}
	011 Move X1, X31
	012 Call Transform.get_lossyScale, X0
	013 Move V0, [X19+1808]
	014 Move X8, -50262016
	015 Move V2, [X8+3880]
	016 Move V8, V1
	017 NotImplemented "Instruction FABD not yet implemented."
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move X8, [X19+1144]
	020 Compare X8, 0
	021 JumpIfEqual {47}
	022 Move W9, [X8+24]
	023 Compare W9, 0
	024 JumpIfEqual {48}
	025 Move W8, [X8+32]
	026 Compare W8, 0
	027 JumpIfEqual {32}
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 Move X0, X19
	030 Call TextMeshProUGUI.UpdateSDFScale, X0, V0
	031 Move [X19+1808], S8
	032 Move W8, [X19+881]
	033 Compare W8, 0
	034 JumpIfEqual {43}
	035 Move W8, 1
	036 Move [X19+880], W8
	037 Move X0, X19
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Move V8, [X31+32]
	041 Call TextMeshProUGUI.OnPreRenderCanvas, X0
	042 Return 
	043 Move X30, [X31+16]
	044 Move X19, [X31+24]
	045 Move V8, [X31+32]
	046 Return 
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: System.Void OnPreRenderCanvas()

Disassembly:
	0x03AD4184 MOV X1, X31
	0x03AD4188 MOV X2, X31
	0x03AD418C BL 0x3C3883C
	0x03AD4190 TBZ X0, 0x0, 0x3AD41AC
	0x03AD4194 ADRP X8, 0x675000
	0x03AD4198 LDR X8, [X8 + 0x5D8]
	0x03AD419C MOV X0, X19
	0x03AD41A0 LDR X1, [X8]
	0x03AD41A4 BL 0x21A3F50
	0x03AD41A8 STR X0, [X19 + 0x728]
	0x03AD41AC MOV X0, X19
	0x03AD41B0 LDP X20, X19, [X31 + 0x20]
	0x03AD41B4 LDP X22, X21, [X31 + 0x10]
	0x03AD41B8 LDR X30, [X31], #0x30
	0x03AD41BC B 0x3AD3184
	0x03AD41C0 STR X30, [X31 - 0x30]!
	0x03AD41C4 STP X22, X21, [X31 + 0x10]
	0x03AD41C8 STP X20, X19, [X31 + 0x20]
	0x03AD41CC ADRP X22, 0x90E000
	0x03AD41D0 ADRP X21, 0x61F000
	0x03AD41D4 LDRB W8, [X22 + 0x50D]
	0x03AD41D8 LDR X21, [X21 + 0x598]
	0x03AD41DC MOV X20, X1
	0x03AD41E0 MOV X19, X0
	0x03AD41E4 TBNZ X8, 0x0, 0x3AD41FC
	0x03AD41E8 ADRP X0, 0x61F000
	0x03AD41EC LDR X0, [X0 + 0x598]
	0x03AD41F0 BL 0x1C16CF4
	0x03AD41F4 MOVZ W8, 0x1
	0x03AD41F8 STRB W8, [X22 + 0x50D]
	0x03AD41FC MOVZ W2, 0x1
	0x03AD4200 MOV X0, X19
	0x03AD4204 MOV X1, X20
	0x03AD4208 MOV X3, X31
	0x03AD420C BL 0x3AFC2B8
	0x03AD4210 LDR X8, [X19]
	0x03AD4214 LDR X1, [X19 + 0x478]
	0x03AD4218 MOV X0, X19
	0x03AD421C LDR X9, [X8 + 0x858]
	0x03AD4220 LDR X2, [X8 + 0x860]
	0x03AD4224 BLR X9
	0x03AD4228 LDR X8, [X19]
	0x03AD422C STR W31, [X19 + 0x318]
	0x03AD4230 MOV X0, X19
	0x03AD4234 LDR X9, [X8 + 0x8A8]
	0x03AD4238 LDR X1, [X8 + 0x8B0]
	0x03AD423C BLR X9
	0x03AD4240 LDR X0, [X21]
	0x03AD4244 LDR X20, [X19 + 0x728]
	0x03AD4248 LDR W8, [X0 + 0xE0]
	0x03AD424C CBNZ W8, 0x3AD4254
	0x03AD4250 BL 0x1C16DFC
	0x03AD4254 MOV X0, X20
	0x03AD4258 MOV X1, X31
	0x03AD425C MOV X2, X31
	0x03AD4260 BL 0x3C3883C
	0x03AD4264 TBZ X0, 0x0, 0x3AD4278
	0x03AD4268 MOV X0, X19
	0x03AD426C MOV X1, X31
	0x03AD4270 BL 0x3CDADE8
	0x03AD4274 STR X0, [X19 + 0x728]
	0x03AD4278 LDR X8, [X19]
	0x03AD427C MOV X0, X19
	0x03AD4280 LDR X9, [X8 + 0xA18]
	0x03AD4284 LDR X1, [X8 + 0xA20]
	0x03AD4288 BLR X9
	0x03AD428C MOVZ W8, 0xFF
	0x03AD4290 LDR X0, [X19 + 0x368]
	0x03AD4294 STR W8, [X19 + 0x318]
	0x03AD4298 LDP X20, X19, [X31 + 0x20]
	0x03AD429C LDP X22, X21, [X31 + 0x10]
	0x03AD42A0 LDR X30, [X31], #0x30
	0x03AD42A4 RET
	0x03AD42A8 STP X30, X23, [X31 - 0x30]!
	0x03AD42AC STP X22, X21, [X31 + 0x10]
	0x03AD42B0 STP X20, X19, [X31 + 0x20]
	0x03AD42B4 ADRP X20, 0x90E000
	0x03AD42B8 LDRB W8, [X20 + 0x50E]
	0x03AD42BC MOV X19, X0
	0x03AD42C0 TBNZ X8, 0x0, 0x3AD42D8
	0x03AD42C4 ADRP X0, 0x61F000
	0x03AD42C8 LDR X0, [X0 + 0x598]
	0x03AD42CC BL 0x1C16CF4
	0x03AD42D0 MOVZ W8, 0x1
	0x03AD42D4 STRB W8, [X20 + 0x50E]
	0x03AD42D8 LDR X0, [X19 + 0x720]
	0x03AD42DC CBZ X0, 0x3AD4380
	0x03AD42E0 MOV X1, X31
	0x03AD42E4 MOV X2, X31
	0x03AD42E8 BL 0x3E22AB0
	0x03AD42EC LDR X8, [X19 + 0x708]
	0x03AD42F0 CBZ X8, 0x3AD4380
	0x03AD42F4 ADRP X21, 0x61F000
	0x03AD42F8 LDR X21, [X21 + 0x598]
	0x03AD42FC MOVZ W22, 0x5
	0x03AD4300 LDR W9, [X8 + 0x18]
	0x03AD4304 SUB X23, X22, 0x4
	0x03AD4308 CMP W23, W9
	0x03AD430C B.GE 0x3AD4384
	0x03AD4310 CMP W23, W9
	0x03AD4314 B.CS 0x3AD4394
	0x03AD4318 LDR X0, [X21]
	0x03AD431C LDR X20, [X8, X22, LSL #3]
	0x03AD4320 LDR W9, [X0 + 0xE0]
	0x03AD4324 CBNZ W9, 0x3AD432C
	0x03AD4328 BL 0x1C16DFC
	0x03AD432C MOV X0, X20
	0x03AD4330 MOV X1, X31
	0x03AD4334 MOV X2, X31
	0x03AD4338 BL 0x3C354F8
	0x03AD433C TBZ X0, 0x0, 0x3AD4384
	0x03AD4340 LDR X8, [X19 + 0x708]
	0x03AD4344 CBZ X8, 0x3AD4380
	0x03AD4348 LDR W9, [X8 + 0x18]
	0x03AD434C CMP W23, W9
	0x03AD4350 B.CS 0x3AD4394
	0x03AD4354 LDR X0, [X8, X22, LSL #3]
	0x03AD4358 CBZ X0, 0x3AD4380
	0x03AD435C MOV X1, X31
	0x03AD4360 BL 0x3CDBD2C
	0x03AD4364 CBZ X0, 0x3AD4380
	0x03AD4368 MOV X1, X31
	0x03AD436C MOV X2, X31
	0x03AD4370 BL 0x3E22AB0
	0x03AD4374 LDR X8, [X19 + 0x708]
	0x03AD4378 ADD X22, X22, 0x1
	0x03AD437C CBNZ X8, 0x3AD4300
	0x03AD4380 BL 0x1C16F20
	0x03AD4384 LDP X20, X19, [X31 + 0x20]
	0x03AD4388 LDP X22, X21, [X31 + 0x10]
	0x03AD438C LDP X30, X23, [X31], #0x30
	0x03AD4390 RET
	0x03AD4394 BL 0x1C16F28
	0x03AD4398 STR X30, [X31 - 0x40]!
	0x03AD439C STP X24, X23, [X31 + 0x10]
	0x03AD43A0 STP X22, X21, [X31 + 0x20]
	0x03AD43A4 STP X20, X19, [X31 + 0x30]
	0x03AD43A8 ADRP X21, 0x90E000
	0x03AD43AC LDRB W8, [X21 + 0x50F]
	0x03AD43B0 MOV X19, X1
	0x03AD43B4 MOV X20, X0
	0x03AD43B8 TBNZ X8, 0x0, 0x3AD43D0
	0x03AD43BC ADRP X0, 0x684000
	0x03AD43C0 LDR X0, [X0 + 0x590]
	0x03AD43C4 BL 0x1C16CF4
	0x03AD43C8 MOVZ W8, 0x1
	0x03AD43CC STRB W8, [X21 + 0x50F]
	0x03AD43D0 ADRP X24, 0x684000
	0x03AD43D4 LDR X21, [X20 + 0x6F8]
	0x03AD43D8 LDR X24, [X24 + 0x590]
	0x03AD43DC ADD X20, X20, 0x6F8
	0x03AD43E0 MOV X0, X21
	0x03AD43E4 MOV X1, X19
	0x03AD43E8 MOV X2, X31
	0x03AD43EC BL 0x33C0DE4
	0x03AD43F0 CBZ X0, 0x3AD4410
	0x03AD43F4 LDR X23, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x90F000
	006 Move W8, [X20+1322]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x620000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x620000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x685000
	019 Move X0, [X0+1400]
	020 Call 0x1C17CF4
	021 Move X0, 0x685000
	022 Move X0, [X0+1408]
	023 Call 0x1C17CF4
	024 Move X0, 0x685000
	025 Move X0, [X0+1416]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1322], W8
	029 Move W8, [X19+1021]
	030 Compare W8, 0
	031 JumpIfEqual {187}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+456]
	035 Move X1, [X8+464]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move W8, [X19+1708]
	042 Compare W8, 0
	043 JumpIfEqual {187}
	044 Move X21, 0x620000
	045 Move X21, [X21+1432]
	046 Move X20, [X19+1832]
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {78}
	060 Move X0, X19
	061 Move X1, X31
	062 Call Graphic.get_canvas, X0
	063 Move [X19+1832], X0
	064 Move X20, X0
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {187}
	078 Move X0, [X21]
	079 Move X20, [X19+248]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X20
	085 Move X1, X31
	086 Move X2, X31
	087 Call Object.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {127}
	092 Move X0, X19
	093 Move X1, X31
	094 Call TMP_Text.get_transform, X0
	095 Compare X0, 0
	096 JumpIfEqual {192}
	097 Move X1, X31
	098 Call Object.get_name, X0
	099 Move X8, 0x685000
	100 Move X8, [X8+1408]
	101 Move X9, 0x685000
	102 Move X9, [X9+1416]
	103 Move X1, X0
	104 Move X8, [X8]
	105 Move X3, X31
	106 Move X2, [X9]
	107 Move X0, X8
	108 Call String.Concat, X0, X1, X2
	109 Move X8, 0x620000
	110 Move X8, [X8+2600]
	111 Move X20, X0
	112 Move X8, [X8]
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X0, X20
	119 Move X1, X19
	120 Move X20, [X31+16]
	121 Move X19, [X31+24]
	122 Move X2, X31
	123 Move X30, [X31+32]
	124 Move X21, [X31+40]
	125 Call Debug.LogWarning, X0, X1
	126 Return 
	127 Move W8, [X19+880]
	128 Compare W8, 0
	129 JumpIfNotEqual {133}
	130 Move W8, [X19+1020]
	131 Compare W8, 0
	132 JumpIfEqual {187}
	133 Move W8, [X19+769]
	134 Compare W8, 0
	135 JumpIfEqual {141}
	136 Move X8, [X19]
	137 Move X0, X19
	138 Move X9, [X8+2088]
	139 Move X1, [X8+2096]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X0, X19
	142 Move X1, X31
	143 Call TMP_Text.ParseInputText, X0
	144 Move X8, 0x685000
	145 Move X8, [X8+1400]
	146 Move X0, [X8]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move X0, X31
	152 Call TMP_FontAsset.UpdateFontFeaturesForFontAssetsInQueue
	153 Move W8, [X19+568]
	154 Compare W8, 0
	155 JumpIfEqual {164}
	156 Move V2, [X19+492]
	157 Move V0, [X19+596]
	158 Move V1, [X19+592]
	159 NotImplemented "Instruction FCMP not yet implemented."
	160 NotImplemented "Instruction FCSEL not yet implemented."
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 NotImplemented "Instruction FCSEL not yet implemented."
	163 Move [X19+484], S2
	164 Move V0, [X19+596]
	165 Move V1, [X19+592]
	166 Move [X19+572], S0
	167 Move [X19+576], S1
	168 Move [X19+700], W31
	169 Move [X19+724], W31
	170 Move [X19+760], W31
	171 Move [X19+880], W31
	172 Move [X19+1020], W31
	173 Move [X19+1708], W31
	174 Move [X19+588], W31
	175 Move [X19+580], W31
	176 Move X8, [X19]
	177 Move X0, X19
	178 Move X9, [X8+2584]
	179 Move X1, [X8+2592]
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move W8, [X19+580]
	182 Move W9, [X19+588]
	183 Add W8, W8, 1
	184 Move [X19+580], W8
	185 Compare W9, 0
	186 JumpIfEqual {176}
	187 Move X20, [X31+16]
	188 Move X19, [X31+24]
	189 Move X30, [X31+32]
	190 Move X21, [X31+40]
	191 Return 
	192 Call 0x1C17F20

Method: System.Void GenerateTextMesh()

Disassembly:
	0x03AC4268 ADD X0, X8, 0x48
	0x03AC426C MOV X1, X31
	0x03AC4270 FMUL S15, S0, S1
	0x03AC4274 BL 0x3C9BF88
	0x03AC4278 LDR V14, [X19 + 0x1E8]
	0x03AC427C CMP W0, 0x1
	0x03AC4280 B.LT 0x3AC45DC
	0x03AC4284 LDR X8, [X19 + 0x698]
	0x03AC4288 CBZ X8, 0x3ACA6A8
	0x03AC428C ADD X0, X8, 0x48
	0x03AC4290 MOV X1, X31
	0x03AC4294 BL 0x3C9BF88
	0x03AC4298 LDR X8, [X19 + 0x698]
	0x03AC429C CBZ X8, 0x3ACA6A8
	0x03AC42A0 MOV W26, W0
	0x03AC42A4 ADD X0, X8, 0x48
	0x03AC42A8 MOV X1, X31
	0x03AC42AC BL 0x3C9BF98
	0x03AC42B0 LDR X0, [X25 + 0x20]
	0x03AC42B4 CBZ X0, 0x3ACA6A8
	0x03AC42B8 LDRB W8, [X19 + 0x305]
	0x03AC42BC MOV V8.16B, V0.16B
	0x03AC42C0 LDR V0, [X31 + 0x90]
	0x03AC42C4 LDR V12, [X25 + 0x2C]
	0x03AC42C8 CMP W8, 0x0
	0x03AC42CC FMOV S1, 1
	0x03AC42D0 MOV X1, X31
	0x03AC42D4 FCSEL S11, S0, S1, EQ
	0x03AC42D8 BL 0x3C9C4E0
	0x03AC42DC LDR X8, [X19 + 0x698]
	0x03AC42E0 CBZ X8, 0x3ACA6A8
	0x03AC42E4 ADD X0, X8, 0x48
	0x03AC42E8 MOV X1, X31
	0x03AC42EC MOV V9.16B, V0.16B
	0x03AC42F0 BL 0x3C9BFB8
	0x03AC42F4 LDR X8, [X19 + 0x698]
	0x03AC42F8 STR S0, [X31 + 0x110]
	0x03AC42FC CBZ X8, 0x3ACA6A8
	0x03AC4300 ADD X0, X8, 0x48
	0x03AC4304 MOV X1, X31
	0x03AC4308 BL 0x3C9BFE8
	0x03AC430C LDR X8, [X19 + 0x698]
	0x03AC4310 CBZ X8, 0x3ACA6A8
	0x03AC4314 LDR V13, [X19 + 0x404]
	0x03AC4318 ADD X0, X8, 0x48
	0x03AC431C MOV X1, X31
	0x03AC4320 MOV V10.16B, V0.16B
	0x03AC4324 BL 0x3C9BF98
	0x03AC4328 LDR X8, [X19 + 0x698]
	0x03AC432C CBZ X8, 0x3ACA6A8
	0x03AC4330 SCVTF S1, W26
	0x03AC4334 FMUL S3, S15, S10
	0x03AC4338 FDIV S1, S14, S1
	0x03AC433C FMUL S3, S3, S13
	0x03AC4340 FMUL S1, S1, S8
	0x03AC4344 FMUL S0, S3, S0
	0x03AC4348 FMUL S2, S12, S9
	0x03AC434C STR S0, [X31 + 0x15C]
	0x03AC4350 FMUL S0, S1, S11
	0x03AC4354 ADD X0, X8, 0x48
	0x03AC4358 MOV X1, X31
	0x03AC435C FMUL S11, S0, S2
	0x03AC4360 BL 0x3C9BFF8
	0x03AC4364 B 0x3AC473C
	0x03AC4368 ADRP X8, 0x631000
	0x03AC436C LDR X8, [X8 + 0x170]
	0x03AC4370 LDR X0, [X8]
	0x03AC4374 LDR W8, [X0 + 0xE0]
	0x03AC4378 CBNZ W8, 0x3AC4380
	0x03AC437C BL 0x1C16DFC
	0x03AC4380 MOV W0, W25
	0x03AC4384 MOV X1, X31
	0x03AC4388 BL 0x331A99C
	0x03AC438C FMOV S0, 1
	0x03AC4390 STR S0, [X31 + 0x148]
	0x03AC4394 TBZ X0, 0x0, 0x3AC43C8
	0x03AC4398 ADRP X8, 0x631000
	0x03AC439C LDR X8, [X8 + 0x170]
	0x03AC43A0 LDR W25, [X31 + 0x107C]
	0x03AC43A4 LDR X0, [X8]
	0x03AC43A8 LDR W8, [X0 + 0xE0]
	0x03AC43AC CBNZ W8, 0x3AC43B4
	0x03AC43B0 BL 0x1C16DFC
	0x03AC43B4 MOV W0, W25
	0x03AC43B8 MOV X1, X31
	0x03AC43BC BL 0x331AE30
	0x03AC43C0 AND W8, W0, 0xFFFF
	0x03AC43C4 STR W8, [X31 + 0x107C]
	0x03AC43C8 LDR W8, [X19 + 0x644]
	0x03AC43CC CBNZ W8, 0x3AC402C
	0x03AC43D0 LDR X8, [X22]
	0x03AC43D4 CBZ X8, 0x3ACA6A8
	0x03AC43D8 LDR X8, [X8 + 0x38]
	0x03AC43DC CBZ X8, 0x3ACA6A8
	0x03AC43E0 LDRSW X9, [X23]
	0x03AC43E4 LDR W11, [X8 + 0x18]
	0x03AC43E8 CMP W9, W11
	0x03AC43EC B.CS 0x3ACA7B4
	0x03AC43F0 MADD X10, X9, X21, X8
	0x03AC43F4 LDR X10, [X10 + 0x30]
	0x03AC43F8 STR X10, [X19 + 0x648]
	0x03AC43FC CBZ X10, 0x3AC3FF4
	0x03AC4400 MADD X12, X9, X21, X8
	0x03AC4404 LDR X10, [X12 + 0x38]
	0x03AC4408 LDR X22, [X31 + 0x160]
	0x03AC440C STR X10, [X19 + 0x100]
	0x03AC4410 LDR X13, [X12 + 0x50]
	0x03AC4414 STR X13, [X19 + 0x118]
	0x03AC4418 LDR W12, [X12 + 0x58]
	0x03AC441C STR W12, [X19 + 0x120]
	0x03AC4420 CBZ W20, 0x3AC445C
	0x03AC4424 LDR X12, [X19 + 0x478]
	0x03AC4428 CBZ X12, 0x3ACA6A8
	0x03AC442C LDRSW X13, [X31 + 0x1048]
	0x03AC4430 LDR W14, [X12 + 0x18]
	0x03AC4434 CMP W13, W14
	0x03AC4438 B.CS 0x3ACA7B4
	0x03AC443C MOVZ W14, 0xC
	0x03AC4440 MADD X12, X13, X14, X12
	0x03AC4444 LDR W12, [X12 + 0x20]
	0x03AC4448 CMP W12, 0xA
	0x03AC444C B.NE 0x3AC445C
	0x03AC4450 LDR W12, [X19 + 0x498]
	0x03AC4454 CMP W9, W12
	0x03AC4458 B.NE 0x3AC4EA0
	0x03AC445C CBZ X10, 0x3ACA6A8
	0x03AC4460 LDR V11, [X19 + 0x1E8]
	0x03AC4464 ADD X0, X10, 0x50
	0x03AC4468 MOV X1, X31
	0x03AC446C BL 0x3C9BF88
	0x03AC4470 LDR X8, [X19 + 0x100]
	0x03AC4474 CBZ X8, 0x3ACA6A8
	0x03AC4478 MOV W25, W0
	0x03AC447C ADD X0, X8, 0x50
	0x03AC4480 MOV X1, X31
	0x03AC4484 BL 0x3C9BF98
	0x03AC4488 LDRB W8, [X19 + 0x305]
	0x03AC448C MOV V8.16B, V0.16B
	0x03AC4490 LDR W9, [X31 + 0x107C]
	0x03AC4494 LDR V0, [X31 + 0x90]
	0x03AC4498 CMP W8, 0x0
	0x03AC449C FMOV S1, 1
	0x03AC44A0 MOVZ W8, 0x2026
	0x03AC44A4 FCSEL S12, S0, S1, EQ
	0x03AC44A8 CMP W9, W8
	0x03AC44AC CSET W8, EQ
	0x03AC44B0 AND W8, W20, W8, 0x0
	0x03AC44B4 FMOV S1, W31
	0x03AC44B8 FMOV S0, W31
	0x03AC44BC STR S0, [X31 + 0x110]
	0x03AC44C0 TBNZ X8, 0x0, 0x3AC44F4
	0x03AC44C4 LDR X8, [X22]
	0x03AC44C8 CBZ X8, 0x3ACA6A8
	0x03AC44CC ADD X0, X8, 0x50
	0x03AC44D0 MOV X1, X31
	0x03AC44D4 BL 0x3C9BFB8
	0x03AC44D8 LDR X8, [X22]
	0x03AC44DC STR S0, [X31 + 0x110]
	0x03AC44E0 CBZ X8, 0x3ACA6A8
	0x03AC44E4 ADD X0, X8, 0x50
	0x03AC44E8 MOV X1, X31
	0x03AC44EC BL 0x3C9BFF8
	0x03AC44F0 MOV V1.16B, V0.16B
	0x03AC44F4 LDR X8, [X19 + 0x648]
	0x03AC44F8 CBZ X8, 0x3ACA6A8
	0x03AC44FC LDR X0, [X8 + 0x20]
	0x03AC4500 STR S1, [X31 + 0x108]
	0x03AC4504 CBZ X0, 0x3ACA6A8
	0x03AC4508 LDR V13, [X19 + 0x404]
	0x03AC450C LDR V14, [X8 + 0x2C]
	0x03AC4510 MOV X1, X31
	0x03AC4514 BL 0x3C9C4E0
	0x03AC4518 LDR X8, [X22]
	0x03AC451C CBZ X8, 0x3ACA6A8
	0x03AC4520 ADD X0, X8, 0x50
	0x03AC4524 MOV X1, X31
	0x03AC4528 MOV V9.16B, V0.16B
	0x03AC452C BL 0x3C9BFE8
	0x03AC4530 LDR X8, [X22]
	0x03AC4534 CBZ X8, 0x3ACA6A8
	0x03AC4538 LDR V15, [X19 + 0x404]
	0x03AC453C ADD X0, X8, 0x50
	0x03AC4540 MOV X1, X31
	0x03AC4544 MOV V10.16B, V0.16B
	0x03AC4548 BL 0x3C9BF98
	0x03AC454C LDR X8, [X19 + 0x368]
	0x03AC4550 CBZ X8, 0x3ACA6A8
	0x03AC4554 LDR X9, [X8 + 0x38]
	0x03AC4558 CBZ X9, 0x3ACA6A8
	0x03AC455C LDRSW X10, [X23]
	0x03AC4560 LDR W11, [X9 + 0x18]
	0x03AC4564 CMP W10, W11
	0x03AC4568 B.CS 0x3ACA7B4
	0x03AC456C LDR V1, [X31 + 0x148]
	0x03AC4570 SCVTF S2, W25
	0x03AC4574 MADD X9, X10, X21, X9
	0x03AC4578 STR W31, [X9 + 0x2C]
	0x03AC457C FMUL S1, S1, S11
	0x03AC4580 FDIV S1, S1, S2
	0x03AC4584 FMUL S1, S1, S8
	0x03AC4588 FMUL S1, S1, S12
	0x03AC458C FMUL S2, S1, S13
	0x03AC4590 FMUL S2, S2, S14
	0x03AC4594 FMUL S11, S2, S9
	0x03AC4598 STR S11, [X9 + 0x160]
	0x03AC459C LDRSW X9, [X19 + 0x120]
	0x03AC45A0 FMUL S1, S1, S10
	0x03AC45A4 FMUL S1, S1, S15
	0x03AC45A8 FMUL S0, S1, S0
	0x03AC45AC STR S0, [X31 + 0x15C]
	0x03AC45B0 CBZ W9, 0x3AC4798
	0x03AC45B4 LDR X10, [X19 + 0x708]
	0x03AC45B8 CBZ X10, 0x3ACA6A8
	0x03AC45BC LDR W11, [X10 + 0x18]
	0x03AC45C0 CMP W9, W11
	0x03AC45C4 B.CS 0x3ACA7B4
	0x03AC45C8 ADD X9, X10, X9, 0x3, LSL
	0x03AC45CC LDR X9, [X9 + 0x20]
	0x03AC45D0 CBZ X9, 0x3ACA6A8
	0x03AC45D4 LDR V0, [X9 + 0x10C]
	0x03AC45D8 B 0x3AC479C
	0x03AC45DC LDR X8, [X22]
	0x03AC45E0 CBZ X8, 0x3ACA6A8
	0x03AC45E4 ADD X0, X8, 0x50
	0x03AC45E8 MOV X1, X31
	0x03AC45EC BL 0x3C9BF88
	0x03AC45F0 LDR X8, [X22]
	0x03AC45F4 CBZ X8, 0x3ACA6A8
	0x03AC45F8 MOV W26, W0
	0x03AC45FC ADD X0, X8, 0x50
	0x03AC4600 MOV X1, X31
	0x03AC4604 BL 0x3C9BF98
	0x03AC4608 LDRB W9, [X19 + 0x305]
	0x03AC460C MOV V8.16B, V0.16B
	0x03AC4610 LDR V0, [X31 + 0x90]
	0x03AC4614 LDR X8, [X19 + 0x100]
	0x03AC4618 CMP W9, 0x0
	0x03AC461C FMOV S1, 1
	0x03AC4620 FCSEL S9, S0, S1, EQ
	0x03AC4624 CBZ X8, 0x3ACA6A8
	0x03AC4628 ADD X0, X8, 0x50
	0x03AC462C MOV X1, X31
	0x03AC4630 STR S14, [X31 + 0x15C]
	0x03AC4634 BL 0x3C9BFB8
	0x03AC4638 LDR X0, [X25 + 0x20]
	0x03AC463C CBZ X0, 0x3ACA6A8
	0x03AC4640 ADD X8, X31, 0x1000
	0x03AC4644 ADD X8, X8, 0x80
	0x03AC4648 MOV X1, X31
	0x03AC464C MOV V12.16B, V0.16B
	0x03AC4650 STR S15, [X31 + 0x150]
	0x03AC4654 BL 0x3C9C4A4
	0x03AC4658 LDR V0, [X27 + 0xE]
	0x03AC465C LDR W8, [X31 + 0x1090]
	0x03AC4660 ADD X0, X31, 0xFA0
	0x03AC4664 MOV X1, X31
	0x03AC4668 STR V0, [X27]
	0x03AC466C STR W8, [X31 + 0xFB0]
	0x03AC4670 BL 0x3C9C2D4
	0x03AC4674 LDR X0, [X25 + 0x20]
	0x03AC4678 CBZ X0, 0x3ACA6A8
	0x03AC467C LDR V10, [X25 + 0x2C]
	0x03AC4680 MOV X1, X31
	0x03AC4684 MOV V11.16B, V0.16B
	0x03AC4688 BL 0x3C9C4E0
	0x03AC468C LDR X8, [X22]
	0x03AC4690 CBZ X8, 0x3ACA6A8
	0x03AC4694 ADD X0, X8, 0x50
	0x03AC4698 MOV X1, X31
	0x03AC469C STR S0, [X31 + 0x140]
	0x03AC46A0 BL 0x3C9BFB8
	0x03AC46A4 LDR X8, [X22]
	0x03AC46A8 CBZ X8, 0x3ACA6A8
	0x03AC46AC ADD X0, X8, 0x50
	0x03AC46B0 MOV X1, X31
	0x03AC46B4 MOV V15.16B, V0.16B
	0x03AC46B8 MOV V14.16B, V8.16B
	0x03AC46BC BL 0x3C9BFE8
	0x03AC46C0 LDR X8, [X22]
	0x03AC46C4 CBZ X8, 0x3ACA6A8
	0x03AC46C8 LDR V8, [X19 + 0x404]
	0x03AC46CC ADD X0, X8, 0x50
	0x03AC46D0 MOV X1, X31
	0x03AC46D4 MOV V13.16B, V0.16B
	0x03AC46D8 BL 0x3C9BF98
	0x03AC46DC LDR X8, [X19 + 0x100]
	0x03AC46E0 CBZ X8, 0x3ACA6A8
	0x03AC46E4 LDR V4, [X31 + 0x15C]
	0x03AC46E8 LDR V3, [X31 + 0x150]
	0x03AC46EC SCVTF S1, W26
	0x03AC46F0 FDIV S2, S12, S11
	0x03AC46F4 FDIV S1, S4, S1
	0x03AC46F8 LDR V4, [X31 + 0x140]
	0x03AC46FC FMUL S3, S3, S13
	0x03AC4700 FMUL S3, S3, S8
	0x03AC4704 FMUL S2, S2, S10
	0x03AC4708 FMUL S1, S1, S14
	0x03AC470C FMUL S0, S3, S0
	0x03AC4710 FMUL S2, S2, S4
	0x03AC4714 STR S0, [X31 + 0x15C]
	0x03AC4718 FMUL S0, S1, S9
	0x03AC471C FMUL S11, S0, S2
	0x03AC4720 FDIV S8, S0, S11
	0x03AC4724 FMUL S0, S8, S15
	0x03AC4728 ADD X0, X8, 0x50
	0x03AC472C MOV X1, X31
	0x03AC4730 STR S0, [X31 + 0x110]
	0x03AC4734 BL 0x3C9BFF8
	0x03AC4738 FMUL S0, S8, S0
	0x03AC473C LDR X8, [X19 + 0x368]
	0x03AC4740 STR X25, [X19 + 0x648]
	0x03AC4744 CBZ X8, 0x3ACA6A8
	0x03AC4748 LDR X9, [X8 + 0x38]
	0x03AC474C CBZ X9, 0x3ACA6A8
	0x03AC4750 LDRSW X10, [X23]
	0x03AC4754 LDR W11, [X9 + 0x18]
	0x03AC4758 CMP W10, W11
	0x03AC475C B.CS 0x3ACA7B4
	0x03AC4760 MADD X9, X10, X21, X9
	0x03AC4764 MOVZ W10, 0x1
	0x03AC4768 STR W10, [X9 + 0x2C]
	0x03AC476C STR S11, [X9 + 0x160]
	0x03AC4770 LDR X10, [X19 + 0x698]
	0x03AC4774 STR S0, [X31 + 0x108]
	0x03AC4778 FMOV S0, W31
	0x03AC477C STR X10, [X9 + 0x40]
	0x03AC4780 LDR X10, [X19 + 0x100]
	0x03AC4784 STR X10, [X9 + 0x38]
	0x03AC4788 LDR W10, [X19 + 0x120]
	0x03AC478C STR W10, [X9 + 0x58]
	0x03AC4790 STR W28, [X19 + 0x120]
	0x03AC4794 B 0x3AC479C
	0x03AC4798 LDR V0, [X19 + 0x618]
	0x03AC479C LDR W9, [X31 + 0x107C]
	0x03AC47A0 MOVZ W10, 0xAD
	0x03AC47A4 STR S0, [X31 + 0x150]
	0x03AC47A8 FMOV S0, W31
	0x03AC47AC CMP W9, 0x3
	0x03AC47B0 CCMP W9, W10, 0x4, NE
	0x03AC47B4 FCSEL S13, S0, S11, EQ
	0x03AC47B8 LDR X8, [X8 + 0x38]
	0x03AC47BC CBZ X8, 0x3ACA6A8
	0x03AC47C0 LDRSW X10, [X23]
	0x03AC47C4 LDR W11, [X8 + 0x18]
	0x03AC47C8 CMP W10, W11
	0x03AC47CC B.CS 0x3ACA7B4
	0x03AC47D0 MADD X8, X10, X21, X8
	0x03AC47D4 STRH W9, [X8 + 0x20]
	0x03AC47D8 LDR V0, [X19 + 0x1E8]
	0x03AC47DC STR S0, [X8 + 0x60]
	0x03AC47E0 LDR W9, [X19 + 0x4EC]
	0x03AC47E4 STR W9, [X8 + 0x164]
	0x03AC47E8 LDR X8, [X19 + 0x368]
	0x03AC47EC CBZ X8, 0x3ACA6A8
	0x03AC47F0 LDR X8, [X8 + 0x38]
	0x03AC47F4 CBZ X8, 0x3ACA6A8
	0x03AC47F8 LDRSW X9, [X23]
	0x03AC47FC LDR W10, [X8 + 0x18]
	0x03AC4800 CMP W9, W10
	0x03AC4804 B.CS 0x3ACA7B4
	0x03AC4808 LDR W10, [X19 + 0x158]
	0x03AC480C NOP
	0x03AC4810 MADD X8, X9, X21, X8
	0x03AC4814 STR W10, [X8 + 0x168]
	0x03AC4818 LDR X8, [X19 + 0x368]
	0x03AC481C CBZ X8, 0x3ACA6A8
	0x03AC4820 LDR X8, [X8 + 0x38]
	0x03AC4824 CBZ X8, 0x3ACA6A8
	0x03AC4828 LDRSW X9, [X23]
	0x03AC482C LDR W10, [X8 + 0x18]
	0x03AC4830 CMP W9, W10
	0x03AC4834 B.CS 0x3ACA7B4
	0x03AC4838 LDR W10, [X19 + 0x15C]
	0x03AC483C NOP
	0x03AC4840 MADD X8, X9, X21, X8
	0x03AC4844 STR W10, [X8 + 0x170]
	0x03AC4848 LDR X8, [X19 + 0x368]
	0x03AC484C CBZ X8, 0x3ACA6A8
	0x03AC4850 LDR X22, [X8 + 0x38]
	0x03AC4854 CBZ X22, 0x3ACA6A8
	0x03AC4858 ADRP X8, 0x694000
	0x03AC485C LDRSW X25, [X23]
	0x03AC4860 LDR X8, [X8 + 0x3E0]
	0x03AC4864 LDR X0, [X31 + 0xD0]
	0x03AC4868 LDR X1, [X8]
	0x03AC486C ADD X8, X31, 0x1B0
	0x03AC4870 BL 0x267140C
	0x03AC4874 LDR V0, [X31 + 0x1B]
	0x03AC4878 LDR W8, [X31 + 0x1C0]
	0x03AC487C STR V0, [X27 + 0xE]
	0x03AC4880 STR W8, [X31 + 0x1090]
	0x03AC4884 LDR W8, [X22 + 0x18]
	0x03AC4888 CMP W25, W8
	0x03AC488C B.CS 0x3ACA7B4
	0x03AC4890 LDR W8, [X31 + 0x1090]
	0x03AC4894 LDR V0, [X27 + 0xE]
	0x03AC4898 NOP
	0x03AC489C MADD X9, X25, X21, X22
	0x03AC48A0 LDR X22, [X31 + 0x170]
	0x03AC48A4 ADD X9, X9, 0x17C
	0x03AC48A8 STR W8, [X9 + 0x10]
	0x03AC48AC STR V0, [X9]
	0x03AC48B0 LDR X8, [X22]
	0x03AC48B4 CBZ X8, 0x3ACA6A8
	0x03AC48B8 LDR X8, [X8 + 0x38]
	0x03AC48BC CBZ X8, 0x3ACA6A8
	0x03AC48C0 LDRSW X9, [X23]
	0x03AC48C4 LDR W10, [X8 + 0x18]
	0x03AC48C8 CMP W9, W10
	0x03AC48CC B.CS 0x3ACA7B4
	0x03AC48D0 LDR W10, [X19 + 0x25C]
	0x03AC48D4 NOP
	0x03AC48D8 MADD X8, X9, X21, X8
	0x03AC48DC STR W10, [X8 + 0x190]
	0x03AC48E0 LDR X8, [X19 + 0x648]
	0x03AC48E4 CBZ X8, 0x3ACA6A8
	0x03AC48E8 LDR X0, [X8 + 0x20]
	0x03AC48EC CBZ X0, 0x3ACA6A8
	0x03AC48F0 ADD X8, X31, 0x1B0
	0x03AC48F4 MOV X1, X31
	0x03AC48F8 BL 0x3C9C4A4
	0x03AC48FC LDR W25, [X31 + 0x107C]
	0x03AC4900 LDR V0, [X31 + 0x1B]
	0x03AC4904 LDR W8, [X31 + 0x1C0]
	0x03AC4908 CMP W25, 0x10000
	0x03AC490C STR V0, [X27 + 0x9]
	0x03AC4910 STR W8, [X31 + 0x1040]
	0x03AC4914 B.LT 0x3AC4920
	0x03AC4918 MOV W29, W31
	0x03AC491C B 0x3AC4948
	0x03AC4920 ADRP X8, 0x631000
	0x03AC4924 LDR X8, [X8 + 0x170]
	0x03AC4928 LDR X0, [X8]
	0x03AC492C LDR W8, [X0 + 0xE0]
	0x03AC4930 CBNZ W8, 0x3AC4938
	0x03AC4934 BL 0x1C16DFC
	0x03AC4938 MOV W0, W25
	0x03AC493C MOV X1, X31
	0x03AC4940 BL 0x3317FCC
	0x03AC4944 AND W29, W0, 0x1
	0x03AC4948 LDRB W8, [X19 + 0x2F9]
	0x03AC494C LDR V0, [X19 + 0x2A8]
	0x03AC4950 STR W31, [X19 + 0x2FC]
	0x03AC4954 STR S0, [X31 + 0x13C]
	0x03AC4958 CBZ W8, 0x3AC4A18
	0x03AC495C LDR X9, [X19 + 0x648]
	0x03AC4960 CBZ X9, 0x3ACA6A8
	0x03AC4964 LDR W8, [X23]
	0x03AC4968 LDR W22, [X9 + 0x28]
	0x03AC496C LDR W9, [X31 + 0x88]
	0x03AC4970 CMP W8, W9
	0x03AC4974 B.GE 0x3AC4A2C
	0x03AC4978 LDR X9, [X31 + 0x170]
	0x03AC497C LDR X9, [X9]
	0x03AC4980 CBZ X9, 0x3ACA6A8
	0x03AC4984 LDR X9, [X9 + 0x38]
	0x03AC4988 CBZ X9, 0x3ACA6A8
	0x03AC498C LDR W10, [X9 + 0x18]
	0x03AC4990 ADD W8, W8, 0x1
	0x03AC4994 CMP W8, W10
	0x03AC4998 B.CS 0x3ACA7B4
	0x03AC499C SMADDL X8, X8, X21, X9
	0x03AC49A0 LDR X8, [X8 + 0x30]
	0x03AC49A4 CBZ X8, 0x3ACA6A8
	0x03AC49A8 LDR X9, [X31 + 0x160]
	0x03AC49AC LDR X9, [X9]
	0x03AC49B0 CBZ X9, 0x3ACA6A8
	0x03AC49B4 LDR X9, [X9 + 0x128]
	0x03AC49B8 CBZ X9, 0x3ACA6A8
	0x03AC49BC LDR X0, [X9 + 0x18]
	0x03AC49C0 CBZ X0, 0x3ACA6A8
	0x03AC49C4 ADRP X9, 0x694000
	0x03AC49C8 LDR W8, [X8 + 0x28]
	0x03AC49CC LDR X9, [X9 + 0x320]
	0x03AC49D0 ADD X2, X31, 0xF98
	0x03AC49D4 ORR W1, W22, W8, 0x10
	0x03AC49D8 LDR X3, [X9]
	0x03AC49DC BL 0x2B10A7C
	0x03AC49E0 FMOV S14, W31
	0x03AC49E4 TBZ X0, 0x0, 0x3AC4A44
	0x03AC49E8 LDR X8, [X31 + 0xF98]
	0x03AC49EC CBZ X8, 0x3ACA6A8
	0x03AC49F0 LDRB W9, [X8 + 0x39]
	0x03AC49F4 LDP S0, S14, [X8 + 0x1C]
	0x03AC49F8 LDR V1, [X31 + 0x13C]
	0x03AC49FC LDP S8, S9, [X8 + 0x14]
	0x03AC4A00 ANDS W31, W9, 0x1
	0x03AC4A04 STR S0, [X31 + 0x120]
	0x03AC4A08 FMOV S0, W31
	0x03AC4A0C FCSEL S1, S1, S0, EQ
	0x03AC4A10 STR S1, [X31 + 0x13C]
	0x03AC4A14 B 0x3AC4A54
	0x03AC4A18 FMOV S0, W31
	0x03AC4A1C STR S0, [X31 + 0x120]
	0x03AC4A20 FMOV S9, W31
	0x03AC4A24 FMOV S8, W31
	0x03AC4A28 B 0x3AC4B30
	0x03AC4A2C FMOV S0, W31
	0x03AC4A30 FMOV S14, W31
	0x03AC4A34 STR S0, [X31 + 0x120]
	0x03AC4A38 FMOV S9, W31
	0x03AC4A3C FMOV S8, W31
	0x03AC4A40 B 0x3AC4A58
	0x03AC4A44 FMOV S0, W31
	0x03AC4A48 STR S0, [X31 + 0x120]
	0x03AC4A4C FMOV S9, W31
	0x03AC4A50 FMOV S8, W31
	0x03AC4A54 LDR W8, [X23]
	0x03AC4A58 SUBS W8, W8, 0x1
	0x03AC4A5C B.LT 0x3AC4B24
	0x03AC4A60 LDR X9, [X31 + 0x170]
	0x03AC4A64 LDR X9, [X9]
	0x03AC4A68 CBZ X9, 0x3ACA6A8
	0x03AC4A6C LDR X9, [X9 + 0x38]
	0x03AC4A70 CBZ X9, 0x3ACA6A8
	0x03AC4A74 LDR W10, [X9 + 0x18]
	0x03AC4A78 CMP W8, W10
	0x03AC4A7C B.CS 0x3ACA7B4
	0x03AC4A80 UMADDL X8, X8, X21, X9
	0x03AC4A84 LDR X8, [X8 + 0x30]
	0x03AC4A88 CBZ X8, 0x3ACA6A8
	0x03AC4A8C LDR X9, [X31 + 0x160]
	0x03AC4A90 LDR X9, [X9]
	0x03AC4A94 CBZ X9, 0x3ACA6A8
	0x03AC4A98 LDR X9, [X9 + 0x128]
	0x03AC4A9C CBZ X9, 0x3ACA6A8
	0x03AC4AA0 LDR X0, [X9 + 0x18]
	0x03AC4AA4 CBZ X0, 0x3ACA6A8
	0x03AC4AA8 ADRP X9, 0x694000
	0x03AC4AAC LDR W8, [X8 + 0x28]
	0x03AC4AB0 LDR X9, [X9 + 0x320]
	0x03AC4AB4 ADD X2, X31, 0xF98
	0x03AC4AB8 ORR W1, W8, W22, 0x10
	0x03AC4ABC LDR X3, [X9]
	0x03AC4AC0 BL 0x2B10A7C
	0x03AC4AC4 TBZ X0, 0x0, 0x3AC4B24
	0x03AC4AC8 LDR X8, [X31 + 0xF98]
	0x03AC4ACC LDR X22, [X31 + 0x170]
	0x03AC4AD0 CBZ X8, 0x3ACA6A8
	0x03AC4AD4 LDP S4, S5, [X8 + 0x28]
	0x03AC4AD8 LDP S6, S7, [X8 + 0x30]
	0x03AC4ADC LDR V2, [X31 + 0x120]
	0x03AC4AE0 MOV V0.16B, V8.16B
	0x03AC4AE4 MOV V1.16B, V9.16B
	0x03AC4AE8 MOV V3.16B, V14.16B
	0x03AC4AEC MOV X0, X31
	0x03AC4AF0 BL 0x3AEBF44
	0x03AC4AF4 LDR X8, [X31 + 0xF98]
	0x03AC4AF8 STR S2, [X31 + 0x120]
	0x03AC4AFC CBZ X8, 0x3ACA6A8
	0x03AC4B00 LDRB W8, [X8 + 0x39]
	0x03AC4B04 MOV V9.16B, V1.16B
	0x03AC4B08 LDR V1, [X31 + 0x13C]
	0x03AC4B0C MOV V8.16B, V0.16B
	0x03AC4B10 ANDS W31, W8, 0x1
	0x03AC4B14 FMOV S0, W31
	0x03AC4B18 FCSEL S1, S1, S0, EQ
	0x03AC4B1C STR S1, [X31 + 0x13C]
	0x03AC4B20 B 0x3AC4B28
	0x03AC4B24 LDR X22, [X31 + 0x170]
	0x03AC4B28 LDR V0, [X31 + 0x120]
	0x03AC4B2C STR S0, [X19 + 0x2FC]
	0x03AC4B30 LDRB W8, [X19 + 0xF0]
	0x03AC4B34 CBZ W8, 0x3AC4B90
	0x03AC4B38 LDR V10, [X19 + 0x640]
	0x03AC4B3C ADD X0, X31, 0x1000
	0x03AC4B40 ADD X0, X0, 0x30
	0x03AC4B44 MOV X1, X31
	0x03AC4B48 BL 0x3C9C2EC
	0x03AC4B4C LDR V1, [X19 + 0x2D4]
	0x03AC4B50 FMOV S2, 1
	0x03AC4B54 MOVZ W9, 0x200B
	0x03AC4B58 FSUB S1, S2, S1
	0x03AC4B5C FMUL S0, S0, S1
	0x03AC4B60 FMUL S0, S13, S0
	0x03AC4B64 FSUB S0, S10, S0
	0x03AC4B68 STR S0, [X19 + 0x640]
	0x03AC4B6C LDR W8, [X31 + 0x107C]
	0x03AC4B70 CMP W8, W9
	0x03AC4B74 B.EQ 0x3AC4B7C
	0x03AC4B78 CBZ W29, 0x3AC4B90
	0x03AC4B7C LDR V1, [X19 + 0x2B4]
	0x03AC4B80 LDR V2, [X31 + 0xE0]
	0x03AC4B84 FMUL S1, S2, S1
	0x03AC4B88 FSUB S0, S0, S1
	0x03AC4B8C STR S0, [X19 + 0x640]
	0x03AC4B90 LDR V10, [X19 + 0x2B0]
	0x03AC4B94 FMOV S1, W31
	0x03AC4B98 FCMP S10, 0x0
	0x03AC4B9C B.EQ 0x3AC4BF8
	0x03AC4BA0 ADD X0, X31, 0x1000
	0x03AC4BA4 ADD X0, X0, 0x30
	0x03AC4BA8 MOV X1, X31
	0x03AC4BAC BL 0x3C9C2CC
	0x03AC4BB0 ADD X0, X31, 0x1000
	0x03AC4BB4 ADD X0, X0, 0x30
	0x03AC4BB8 MOV X1, X31
	0x03AC4BBC MOV V14.16B, V0.16B
	0x03AC4BC0 BL 0x3C9C2DC
	0x03AC4BC4 FMOV S3, 0.5
	0x03AC4BC8 LDR V1, [X19 + 0x2D4]
	0x03AC4BCC FMUL S2, S10, S3
	0x03AC4BD0 FMUL S3, S14, S3
	0x03AC4BD4 FADD S0, S3, S0
	0x03AC4BD8 FMUL S0, S13, S0
	0x03AC4BDC LDR V3, [X19 + 0x640]
	0x03AC4BE0 FSUB S0, S2, S0
	0x03AC4BE4 FMOV S2, 1
	0x03AC4BE8 FSUB S1, S2, S1
	0x03AC4BEC FMUL S1, S1, S0
	0x03AC4BF0 FADD S0, S3, S1
	0x03AC4BF4 STR S0, [X19 + 0x640]
	0x03AC4BF8 LDR W8, [X19 + 0x644]
	0x03AC4BFC STR S1, [X31 + 0x8C]
	0x03AC4C00 STR S11, [X31 + 0xE4]
	0x03AC4C04 CBNZ W8, 0x3AC4C14
	0x03AC4C08 CBNZ W24, 0x3AC4C14
	0x03AC4C0C LDRB W8, [X19 + 0x25C]
	0x03AC4C10 TBNZ X8, 0x0, 0x3AC4D84
	0x03AC4C14 ADRP X8, 0x62F000
	0x03AC4C18 LDR X8, [X8 + 0x598]
	0x03AC4C1C LDR X25, [X19 + 0x118]
	0x03AC4C20 LDR X0, [X8]
	0x03AC4C24 LDR W8, [X0 + 0xE0]
	0x03AC4C28 CBNZ W8, 0x3AC4C30
	0x03AC4C2C BL 0x1C16DFC
	0x03AC4C30 MOV X0, X25
	0x03AC4C34 MOV X1, X31
	0x03AC4C38 MOV X2, X31
	0x03AC4C3C BL 0x3C354F8
	0x03AC4C40 FMOV S0, W31
	0x03AC4C44 STR S0, [X31 + 0xDC]
	0x03AC4C48 TBZ X0, 0x0, 0x3AC4D78
	0x03AC4C4C ADRP X9, 0x694000
	0x03AC4C50 LDR X9, [X9 + 0x338]
	0x03AC4C54 LDR X25, [X19 + 0x118]
	0x03AC4C58 LDR X0, [X9]
	0x03AC4C5C LDR W8, [X0 + 0xE0]
	0x03AC4C60 CBNZ W8, 0x3AC4C70
	0x03AC4C64 BL 0x1C16DFC
	0x03AC4C68 ADRP X9, 0x694000
	0x03AC4C6C LDR X9, [X9 + 0x338]
	0x03AC4C70 CBZ X25, 0x3ACA6A8
	0x03AC4C74 LDR X8, [X9]
	0x03AC4C78 MOV X0, X25
	0x03AC4C7C MOV X2, X31
	0x03AC4C80 MOV X26, X9
	0x03AC4C84 LDR X8, [X8 + 0xB8]
	0x03AC4C88 LDR W1, [X8 + 0x54]
	0x03AC4C8C BL 0x3C14D08
	0x03AC4C90 TBZ X0, 0x0, 0x3AC4D78
	0x03AC4C94 LDR X0, [X26]
	0x03AC4C98 LDR X25, [X19 + 0x118]
	0x03AC4C9C MOV X9, X26
	0x03AC4CA0 LDR W8, [X0 + 0xE0]
	0x03AC4CA4 CBNZ W8, 0x3AC4CB4
	0x03AC4CA8 BL 0x1C16DFC
	0x03AC4CAC ADRP X9, 0x694000
	0x03AC4CB0 LDR X9, [X9 + 0x338]
	0x03AC4CB4 CBZ X25, 0x3ACA6A8
	0x03AC4CB8 LDR X8, [X9]
	0x03AC4CBC MOV X0, X25
	0x03AC4CC0 MOV X2, X31
	0x03AC4CC4 MOV X26, X9
	0x03AC4CC8 LDR X8, [X8 + 0xB8]
	0x03AC4CCC LDR W1, [X8 + 0xCC]
	0x03AC4CD0 BL 0x3C14D08
	0x03AC4CD4 TBZ X0, 0x0, 0x3AC4D78
	0x03AC4CD8 LDR X0, [X26]
	0x03AC4CDC LDR X25, [X19 + 0x118]
	0x03AC4CE0 LDR W8, [X0 + 0xE0]
	0x03AC4CE4 CBNZ W8, 0x3AC4CF4
	0x03AC4CE8 BL 0x1C16DFC
	0x03AC4CEC ADRP X26, 0x694000
	0x03AC4CF0 LDR X26, [X26 + 0x338]
	0x03AC4CF4 CBZ X25, 0x3ACA6A8
	0x03AC4CF8 LDR X8, [X26]
	0x03AC4CFC MOV X0, X25
	0x03AC4D00 MOV X2, X31
	0x03AC4D04 LDR X8, [X8 + 0xB8]
	0x03AC4D08 LDR W1, [X8 + 0x54]
	0x03AC4D0C BL 0x3C15F98
	0x03AC4D10 LDR X8, [X31 + 0x160]
	0x03AC4D14 LDR X8, [X8]
	0x03AC4D18 CBZ X8, 0x3ACA6A8
	0x03AC4D1C LDR X0, [X19 + 0x118]
	0x03AC4D20 CBZ X0, 0x3ACA6A8
	0x03AC4D24 ADRP X9, 0x694000
	0x03AC4D28 LDR X9, [X9 + 0x338]
	0x03AC4D2C LDR V10, [X8 + 0x1A8]
	0x03AC4D30 MOV X2, X31
	0x03AC4D34 MOV V15.16B, V0.16B
	0x03AC4D38 LDR X9, [X9]
	0x03AC4D3C MOV V14.16B, V9.16B
	0x03AC4D40 LDR X9, [X9 + 0xB8]
	0x03AC4D44 LDR W1, [X9 + 0xCC]
	0x03AC4D48 BL 0x3C15F98
	0x03AC4D4C FMOV S1, 0.25
	0x03AC4D50 FMUL S1, S10, S1
	0x03AC4D54 FMUL S1, S15, S1
	0x03AC4D58 FMUL S11, S0, S1
	0x03AC4D5C LDR V0, [X31 + 0x150]
	0x03AC4D60 FADD S0, S0, S11
	0x03AC4D64 FCMP S0, S15
	0x03AC4D68 B.LE 0x3AC4EF0
	0x03AC4D6C FSUB S0, S15, S11
	0x03AC4D70 STR S0, [X31 + 0x150]
	0x03AC4D74 B 0x3AC4EF0
	0x03AC4D78 MOV V14.16B, V9.16B
	0x03AC4D7C FMOV S11, W31
	0x03AC4D80 B 0x3AC4EF0
	0x03AC4D84 ADRP X8, 0x62F000
	0x03AC4D88 LDR X8, [X8 + 0x598]
	0x03AC4D8C LDR X25, [X19 + 0x118]
	0x03AC4D90 LDR X0, [X8]
	0x03AC4D94 LDR W8, [X0 + 0xE0]
	0x03AC4D98 CBNZ W8, 0x3AC4DA0
	0x03AC4D9C BL 0x1C16DFC
	0x03AC4DA0 MOV X0, X25
	0x03AC4DA4 MOV X1, X31
	0x03AC4DA8 MOV X2, X31
	0x03AC4DAC BL 0x3C354F8
	0x03AC4DB0 FMOV S10, W31
	0x03AC4DB4 TBZ X0, 0x0, 0x3AC4ED4
	0x03AC4DB8 ADRP X9, 0x694000
	0x03AC4DBC LDR X9, [X9 + 0x338]
	0x03AC4DC0 LDR X25, [X19 + 0x118]
	0x03AC4DC4 LDR X0, [X9]
	0x03AC4DC8 LDR W8, [X0 + 0xE0]
	0x03AC4DCC CBNZ W8, 0x3AC4DDC
	0x03AC4DD0 BL 0x1C16DFC
	0x03AC4DD4 ADRP X9, 0x694000
	0x03AC4DD8 LDR X9, [X9 + 0x338]
	0x03AC4DDC CBZ X25, 0x3ACA6A8
	0x03AC4DE0 LDR X8, [X9]
	0x03AC4DE4 MOV X0, X25
	0x03AC4DE8 MOV X2, X31
	0x03AC4DEC MOV X26, X9
	0x03AC4DF0 LDR X8, [X8 + 0xB8]
	0x03AC4DF4 LDR W1, [X8 + 0x54]
	0x03AC4DF8 BL 0x3C14D08
	0x03AC4DFC TBZ X0, 0x0, 0x3AC4ED4
	0x03AC4E00 LDR X0, [X26]
	0x03AC4E04 LDR X25, [X19 + 0x118]
	0x03AC4E08 LDR W8, [X0 + 0xE0]
	0x03AC4E0C CBNZ W8, 0x3AC4E1C
	0x03AC4E10 BL 0x1C16DFC
	0x03AC4E14 ADRP X26, 0x694000
	0x03AC4E18 LDR X26, [X26 + 0x338]
	0x03AC4E1C CBZ X25, 0x3ACA6A8
	0x03AC4E20 LDR X8, [X26]
	0x03AC4E24 MOV X0, X25
	0x03AC4E28 MOV X2, X31
	0x03AC4E2C LDR X8, [X8 + 0xB8]
	0x03AC4E30 LDR W1, [X8 + 0x54]
	0x03AC4E34 BL 0x3C15F98
	0x03AC4E38 LDR X8, [X31 + 0x160]
	0x03AC4E3C LDR X8, [X8]
	0x03AC4E40 CBZ X8, 0x3ACA6A8
	0x03AC4E44 LDR X0, [X19 + 0x118]
	0x03AC4E48 CBZ X0, 0x3ACA6A8
	0x03AC4E4C ADRP X9, 0x694000
	0x03AC4E50 LDR X9, [X9 + 0x338]
	0x03AC4E54 LDR V10, [X8 + 0x1B0]
	0x03AC4E58 MOV X2, X31
	0x03AC4E5C MOV V15.16B, V0.16B
	0x03AC4E60 LDR X9, [X9]
	0x03AC4E64 LDR X9, [X9 + 0xB8]
	0x03AC4E68 LDR W1, [X9 + 0xCC]
	0x03AC4E6C BL 0x3C15F98
	0x03AC4E70 FMOV S1, 0.25
	0x03AC4E74 FMUL S1, S10, S1
	0x03AC4E78 FMUL S1, S15, S1
	0x03AC4E7C FMUL S1, S0, S1
	0x03AC4E80 LDR V0, [X31 + 0x150]
	0x03AC4E84 FADD S0, S0, S1
	0x03AC4E88 FCMP S0, S15
	0x03AC4E8C B.LE 0x3AC4ED0
	0x03AC4E90 MOV V10.16B, V1.16B
	0x03AC4E94 FSUB S0, S15, S1
	0x03AC4E98 STR S0, [X31 + 0x150]
	0x03AC4E9C B 0x3AC4ED4
	0x03AC4EA0 SUB W9, W9, 0x1
	0x03AC4EA4 CMP W9, W11
	0x03AC4EA8 B.CS 0x3ACA7B4
	0x03AC4EAC CBZ X10, 0x3ACA6A8
	0x03AC4EB0 SMADDL X8, X9, X21, X8
	0x03AC4EB4 LDR V11, [X8 + 0x60]
	0x03AC4EB8 ADD X0, X10, 0x50
	0x03AC4EBC MOV X1, X31
	0x03AC4EC0 BL 0x3C9BF88
	0x03AC4EC4 LDR X8, [X22]
	0x03AC4EC8 CBNZ X8, 0x3AC4478
	0x03AC4ECC B 0x3ACA6A8
	0x03AC4ED0 MOV V10.16B, V1.16B
	0x03AC4ED4 LDR X8, [X31 + 0x160]
	0x03AC4ED8 LDR X8, [X8]
	0x03AC4EDC CBZ X8, 0x3ACA6A8
	0x03AC4EE0 LDR V0, [X8 + 0x1B4]
	0x03AC4EE4 MOV V14.16B, V9.16B
	0x03AC4EE8 MOV V11.16B, V10.16B
	0x03AC4EEC STR S0, [X31 + 0xDC]
	0x03AC4EF0 LDR V10, [X19 + 0x640]
	0x03AC4EF4 ADD X0, X31, 0x1000
	0x03AC4EF8 ADD X0, X0, 0x30
	0x03AC4EFC MOV X1, X31
	0x03AC4F00 BL 0x3C9C2DC
	0x03AC4F04 LDR V12, [X31 + 0x150]
	0x03AC4F08 LDR V1, [X19 + 0x2D4]
	0x03AC4F0C FMOV S9, 1
	0x03AC4F10 ADD X0, X31, 0x1000
	0x03AC4F14 FSUB S0, S0, S12
	0x03AC4F18 FSUB S0, S0, S11
	0x03AC4F1C FADD S0, S8, S0
	0x03AC4F20 FMUL S0, S13, S0
	0x03AC4F24 FSUB S1, S9, S1
	0x03AC4F28 FMUL S0, S1, S0
	0x03AC4F2C ADD X0, X0, 0x30
	0x03AC4F30 MOV X1, X31
	0x03AC4F34 FADD S15, S10, S0
	0x03AC4F38 BL 0x3C9C2E4
	0x03AC4F3C LDR V3, [X31 + 0x15C]
	0x03AC4F40 LDR V1, [X19 + 0x4D8]
	0x03AC4F44 FADD S0, S12, S0
	0x03AC4F48 LDR V2, [X19 + 0x61C]
	0x03AC4F4C FADD S0, S14, S0
	0x03AC4F50 FMUL S0, S13, S0
	0x03AC4F54 FADD S0, S3, S0
	0x03AC4F58 ADD X0, X31, 0x1000
	0x03AC4F5C FSUB S0, S0, S1
	0x03AC4F60 ADD X0, X0, 0x30
	0x03AC4F64 MOV X1, X31
	0x03AC4F68 FADD S14, S2, S0
	0x03AC4F6C BL 0x3C9C2D4
	0x03AC4F70 FADD S8, S12, S12
	0x03AC4F74 FADD S0, S8, S0
	0x03AC4F78 ADD X0, X31, 0x1000
	0x03AC4F7C FMUL S0, S13, S0
	0x03AC4F80 ADD X0, X0, 0x30
	0x03AC4F84 MOV X1, X31
	0x03AC4F88 FSUB S10, S14, S0
	0x03AC4F8C BL 0x3C9C2CC
	0x03AC4F90 LDR V1, [X19 + 0x2D4]
	0x03AC4F94 FADD S0, S8, S0
	0x03AC4F98 FADD S2, S11, S11
	0x03AC4F9C FADD S0, S2, S0
	0x03AC4FA0 LDR W8, [X19 + 0x644]
	0x03AC4FA4 FMUL S0, S13, S0
	0x03AC4FA8 FSUB S1, S9, S1
	0x03AC4FAC FMUL S0, S1, S0
	0x03AC4FB0 MOV V8.16B, V13.16B
	0x03AC4FB4 FADD S3, S15, S0
	0x03AC4FB8 STR S11, [X31 + 0xBC]
	0x03AC4FBC CBNZ W8, 0x3AC4FCC
	0x03AC4FC0 CBNZ W24, 0x3AC4FCC
	0x03AC4FC4 LDRB W8, [X19 + 0x25C]
	0x03AC4FC8 TBNZ X8, 0x1, 0x3AC5B14
	0x03AC4FCC MOV V11.16B, V3.16B
	0x03AC4FD0 MOV V12.16B, V15.16B
	0x03AC4FD4 LDRB W8, [X19 + 0x474]
	0x03AC4FD8 STR S8, [X31 + 0x140]
	0x03AC4FDC CBZ W8, 0x3AC50BC
	0x03AC4FE0 LDR X24, [X31 + 0x78]
	0x03AC4FE4 MOV X1, X31
	0x03AC4FE8 STR S3, [X31 + 0xC8]
	0x03AC4FEC MOV X0, X24
	0x03AC4FF0 BL 0x3C26F34
	0x03AC4FF4 FADD S1, S10, S14
	0x03AC4FF8 FMOV S2, 0.5
	0x03AC4FFC FADD S0, S11, S15
	0x03AC5000 FMUL S13, S1, S2
	0x03AC5004 MOV V9.16B, V10.16B
	0x03AC5008 FMUL S10, S0, S2
	0x03AC500C FSUB S8, S14, S13
	0x03AC5010 FSUB S0, S12, S10
	0x03AC5014 FMOV S2, W31
	0x03AC5018 MOV X0, X24
	0x03AC501C MOV V1.16B, V8.16B
	0x03AC5020 MOV X1, X31
	0x03AC5024 BL 0x3C28278
	0x03AC5028 FADD S0, S10, S0
	0x03AC502C FMOV S12, W31
	0x03AC5030 STR S0, [X31 + 0x104]
	0x03AC5034 FADD S3, S13, S1
	0x03AC5038 FADD S0, S2, S12
	0x03AC503C FSUB S9, S9, S13
	0x03AC5040 STP S0, S3, [X31 + 0xF4]
	0x03AC5044 FSUB S0, S15, S10
	0x03AC5048 FMOV S2, W31
	0x03AC504C MOV X0, X24
	0x03AC5050 MOV V1.16B, V9.16B
	0x03AC5054 MOV X1, X31
	0x03AC5058 BL 0x3C28278
	0x03AC505C FADD S3, S10, S0
	0x03AC5060 FADD S0, S2, S12
	0x03AC5064 FADD S15, S13, S1
	0x03AC5068 STP S0, S3, [X31 + 0xFC]
	0x03AC506C FSUB S0, S11, S10
	0x03AC5070 FMOV S2, W31
	0x03AC5074 MOV X0, X24
	0x03AC5078 MOV V1.16B, V8.16B
	0x03AC507C MOV X1, X31
	0x03AC5080 BL 0x3C28278
	0x03AC5084 FADD S11, S10, S0
	0x03AC5088 LDR V0, [X31 + 0xC8]
	0x03AC508C FADD S14, S13, S1
	0x03AC5090 FADD S8, S2, S12
	0x03AC5094 FMOV S2, W31
	0x03AC5098 FSUB S0, S0, S10
	0x03AC509C MOV X0, X24
	0x03AC50A0 MOV V1.16B, V9.16B
	0x03AC50A4 MOV X1, X31
	0x03AC50A8 BL 0x3C28278
	0x03AC50AC FADD S3, S10, S0
	0x03AC50B0 FADD S10, S13, S1
	0x03AC50B4 FADD S0, S2, S12
	0x03AC50B8 B 0x3AC50DC
	0x03AC50BC FMOV S1, W31
	0x03AC50C0 STP S1, S15, [X31 + 0xFC]
	0x03AC50C4 FMOV S1, W31
	0x03AC50C8 STR S12, [X31 + 0x104]
	0x03AC50CC FMOV S0, W31
	0x03AC50D0 FMOV S8, W31
	0x03AC50D4 MOV V15.16B, V10.16B
	0x03AC50D8 STP S1, S14, [X31 + 0xF4]
	0x03AC50DC LDR X8, [X22]
	0x03AC50E0 CBZ X8, 0x3ACA6A8
	0x03AC50E4 LDR X8, [X8 + 0x38]
	0x03AC50E8 LDR V13, [X31 + 0x140]
	0x03AC50EC LDR V6, [X31 + 0x104]
	0x03AC50F0 CBZ X8, 0x3ACA6A8
	0x03AC50F4 LDRSW X9, [X23]
	0x03AC50F8 LDR W10, [X8 + 0x18]
	0x03AC50FC LDR V2, [X31 + 0x100]
	0x03AC5100 CMP W9, W10
	0x03AC5104 B.CS 0x3ACA7B4
	0x03AC5108 LDR V1, [X31 + 0xFC]
	0x03AC510C NOP
	0x03AC5110 MADD X8, X9, X21, X8
	0x03AC5114 STR S2, [X8 + 0x11C]
	0x03AC5118 STR S15, [X8 + 0x120]
	0x03AC511C STR S1, [X8 + 0x124]
	0x03AC5120 LDR X8, [X22]
	0x03AC5124 CBZ X8, 0x3ACA6A8
	0x03AC5128 LDR X8, [X8 + 0x38]
	0x03AC512C CBZ X8, 0x3ACA6A8
	0x03AC5130 LDRSW X9, [X23]
	0x03AC5134 LDR W10, [X8 + 0x18]
	0x03AC5138 LDR V4, [X31 + 0xF8]
	0x03AC513C CMP W9, W10
	0x03AC5140 B.CS 0x3ACA7B4
	0x03AC5144 MADD X8, X9, X21, X8
	0x03AC5148 STR S6, [X8 + 0x110]
	0x03AC514C LDR V6, [X31 + 0xF4]
	0x03AC5150 STR S4, [X8 + 0x114]
	0x03AC5154 STR S6, [X8 + 0x118]
	0x03AC5158 LDR X8, [X22]
	0x03AC515C CBZ X8, 0x3ACA6A8
	0x03AC5160 LDR X8, [X8 + 0x38]
	0x03AC5164 CBZ X8, 0x3ACA6A8
	0x03AC5168 LDRSW X9, [X23]
	0x03AC516C LDR W10, [X8 + 0x18]
	0x03AC5170 CMP W9, W10
	0x03AC5174 B.CS 0x3ACA7B4
	0x03AC5178 MADD X8, X9, X21, X8
	0x03AC517C STR S11, [X8 + 0x128]
	0x03AC5180 STR S14, [X8 + 0x12C]
	0x03AC5184 STR S8, [X8 + 0x130]
	0x03AC5188 LDR X8, [X22]
	0x03AC518C CBZ X8, 0x3ACA6A8
	0x03AC5190 LDR X8, [X8 + 0x38]
	0x03AC5194 CBZ X8, 0x3ACA6A8
	0x03AC5198 LDRSW X9, [X23]
	0x03AC519C LDR W10, [X8 + 0x18]
	0x03AC51A0 CMP W9, W10
	0x03AC51A4 B.CS 0x3ACA7B4
	0x03AC51A8 MADD X8, X9, X21, X8
	0x03AC51AC STR S3, [X8 + 0x134]
	0x03AC51B0 STR S10, [X8 + 0x138]
	0x03AC51B4 STR S0, [X8 + 0x13C]
	0x03AC51B8 LDR X8, [X22]
	0x03AC51BC CBZ X8, 0x3ACA6A8
	0x03AC51C0 LDR X8, [X8 + 0x38]
	0x03AC51C4 CBZ X8, 0x3ACA6A8
	0x03AC51C8 LDRSW X28, [X23]
	0x03AC51CC LDR W9, [X8 + 0x18]
	0x03AC51D0 CMP W28, W9
	0x03AC51D4 B.CS 0x3ACA7B4
	0x03AC51D8 LDR V0, [X19 + 0x640]
	0x03AC51DC NOP
	0x03AC51E0 MADD X9, X28, X21, X8
	0x03AC51E4 FSUB S2, S11, S2
	0x03AC51E8 FSUB S3, S4, S15
	0x03AC51EC STR S0, [X9 + 0x140]
	0x03AC51F0 LDR V1, [X19 + 0x4D8]
	0x03AC51F4 FDIV S2, S2, S3
	0x03AC51F8 LDR V3, [X31 + 0x15C]
	0x03AC51FC LDR V0, [X19 + 0x61C]
	0x03AC5200 STR S2, [X9 + 0x15C]
	0x03AC5204 LDR V2, [X31 + 0x110]
	0x03AC5208 FSUB S3, S3, S1
	0x03AC520C FADD S3, S3, S0
	0x03AC5210 STR S3, [X9 + 0x14C]
	0x03AC5214 LDR W9, [X19 + 0x644]
	0x03AC5218 FMUL S3, S2, S13
	0x03AC521C CBZ W9, 0x3AC522C
	0x03AC5220 LDR V2, [X31 + 0x108]
	0x03AC5224 FMUL S2, S2, S13
	0x03AC5228 B 0x3AC5240
	0x03AC522C LDR V2, [X31 + 0x108]
	0x03AC5230 LDR V4, [X31 + 0x148]
	0x03AC5234 FMUL S2, S2, S13
	0x03AC5238 FDIV S3, S3, S4
	0x03AC523C FDIV S2, S2, S4
	0x03AC5240 LDR W24, [X19 + 0x498]
	0x03AC5244 CBZ W29, 0x3AC5284
	0x03AC5248 CMP W28, W24
	0x03AC524C B.EQ 0x3AC5284
	0x03AC5250 LDR V0, [X19 + 0x4C8]
	0x03AC5254 NOP
	0x03AC5258 MADD X8, X28, X21, X8
	0x03AC525C STR S0, [X8 + 0x154]
	0x03AC5260 LDR V2, [X19 + 0x4CC]
	0x03AC5264 FSUB S0, S0, S1
	0x03AC5268 STR S0, [X8 + 0x148]
	0x03AC526C STR S2, [X8 + 0x158]
	0x03AC5270 STR S0, [X19 + 0x4C0]
	0x03AC5274 FSUB S0, S2, S1
	0x03AC5278 STR S0, [X8 + 0x150]
	0x03AC527C STR S0, [X19 + 0x4C4]
	0x03AC5280 B 0x3AC536C
	0x03AC5284 FADD S2, S0, S2
	0x03AC5288 FADD S8, S0, S3
	0x03AC528C FCMP S0, 0x0
	0x03AC5290 MOV V3.16B, V2.16B
	0x03AC5294 MOV V4.16B, V8.16B
	0x03AC5298 B.EQ 0x3AC52C0
	0x03AC529C LDR V3, [X19 + 0x404]
	0x03AC52A0 FSUB S4, S8, S0
	0x03AC52A4 FSUB S0, S2, S0
	0x03AC52A8 FDIV S4, S4, S3
	0x03AC52AC FDIV S0, S0, S3
	0x03AC52B0 FCMP S4, S8
	0x03AC52B4 FCSEL S4, S4, S8, GT
	0x03AC52B8 FCMP S0, S2
	0x03AC52BC FCSEL S3, S0, S2, MI
	0x03AC52C0 LDR V0, [X19 + 0x4C8]
	0x03AC52C4 LDR V5, [X19 + 0x4CC]
	0x03AC52C8 NOP
	0x03AC52CC MADD X8, X28, X21, X8
	0x03AC52D0 FSUB S2, S2, S1
	0x03AC52D4 FCMP S4, S0
	0x03AC52D8 FCSEL S0, S4, S0, GT
	0x03AC52DC FCMP S3, S5
	0x03AC52E0 FCSEL S5, S3, S5, MI
	0x03AC52E4 STR S5, [X19 + 0x4CC]
	0x03AC52E8 FSUB S5, S8, S1
	0x03AC52EC STR S0, [X19 + 0x4C8]
	0x03AC52F0 STR S4, [X8 + 0x154]
	0x03AC52F4 STR S3, [X8 + 0x158]
	0x03AC52F8 STR S5, [X8 + 0x148]
	0x03AC52FC STR S5, [X19 + 0x4C0]
	0x03AC5300 STR S2, [X8 + 0x150]
	0x03AC5304 LDR W8, [X19 + 0x4A8]
	0x03AC5308 STR S2, [X19 + 0x4C4]
	0x03AC530C CBZ W8, 0x3AC5318
	0x03AC5310 LDRB W8, [X19 + 0x33C]
	0x03AC5314 CBZ W8, 0x3AC5350
	0x03AC5318 LDR X8, [X19 + 0x100]
	0x03AC531C STR S0, [X19 + 0x4B8]
	0x03AC5320 CBZ X8, 0x3ACA6A8
	0x03AC5324 LDR V9, [X19 + 0x4BC]
	0x03AC5328 ADD X0, X8, 0x50
	0x03AC532C MOV X1, X31
	0x03AC5330 BL 0x3C9BFC8
	0x03AC5334 LDR V1, [X31 + 0x148]
	0x03AC5338 FMUL S0, S13, S0
	0x03AC533C FDIV S0, S0, S1
	0x03AC5340 LDR V1, [X19 + 0x4D8]
	0x03AC5344 FCMP S9, S0
	0x03AC5348 FCSEL S0, S9, S0, GT
	0x03AC534C STR S0, [X19 + 0x4BC]
	0x03AC5350 FCMP S1, 0x0
	0x03AC5354 B.NE 0x3AC536C
	0x03AC5358 LDR X8, [X31 + 0x80]
	0x03AC535C LDR V0, [X8 + 0x208]
	0x03AC5360 FCMP S0, S8
	0x03AC5364 FCSEL S0, S0, S8, GT
	0x03AC5368 STR S0, [X8 + 0x208]
	0x03AC536C LDR X8, [X22]
	0x03AC5370 CBZ X8, 0x3ACA6A8
	0x03AC5374 LDR X9, [X8 + 0x38]
	0x03AC5378 CBZ X9, 0x3ACA6A8
	0x03AC537C LDR W22, [X23]
	0x03AC5380 LDR W10, [X9 + 0x18]
	0x03AC5384 CMP W22, W10
	0x03AC5388 B.CS 0x3ACA7B4
	0x03AC538C SXTW X10, W22
	0x03AC5390 MADD X9, X10, X21, X9
	0x03AC5394 STRB W31, [X9 + 0x194]
	0x03AC5398 LDR W25, [X31 + 0x107C]
	0x03AC539C LDR W10, [X19 + 0x278]
	0x03AC53A0 CMP W25, 0x9
	0x03AC53A4 AND W26, W10, 0x18
	0x03AC53A8 B.EQ 0x3AC5548
	0x03AC53AC CBZ W29, 0x3AC552C
	0x03AC53B0 LDR W11, [X31 + 0x74]
	0x03AC53B4 CMP W25, 0xAD
	0x03AC53B8 CSET W10, EQ
	0x03AC53BC BIC W10, W10, W11, 0x0
	0x03AC53C0 TBNZ X10, 0x0, 0x3AC5548
	0x03AC53C4 LDR W10, [X19 + 0x644]
	0x03AC53C8 CMP W10, 0x1
	0x03AC53CC B.EQ 0x3AC5548
	0x03AC53D0 AND W8, W25, 0xFFFFFFFE
	0x03AC53D4 CMP W8, 0xA
	0x03AC53D8 B.NE 0x3AC59EC
	0x03AC53DC LDR W8, [X19 + 0x2E0]
	0x03AC53E0 CMP W8, 0x6
	0x03AC53E4 B.NE 0x3AC59EC
	0x03AC53E8 FCMP S1, 0x0
	0x03AC53EC FMOV S0, W31
	0x03AC53F0 B.LE 0x3AC5408
	0x03AC53F4 LDRB W8, [X19 + 0x2C4]
	0x03AC53F8 CBNZ W8, 0x3AC5408
	0x03AC53FC LDR V0, [X19 + 0x4C8]
	0x03AC5400 LDR V2, [X19 + 0x4D0]
	0x03AC5404 FSUB S0, S0, S2
	0x03AC5408 LDR V2, [X19 + 0x4CC]
	0x03AC540C LDR V3, [X19 + 0x4B8]
	0x03AC5410 FSUB S1, S2, S1
	0x03AC5414 FSUB S1, S3, S1
	0x03AC5418 FADD S0, S1, S0
	0x03AC541C LDR V1, [X31 + 0xB8]
	0x03AC5420 FCMP S0, S1
	0x03AC5424 B.LE 0x3AC59EC
	0x03AC5428 LDR W8, [X19 + 0x2E4]
	0x03AC542C ADDS W31, W8, 0x1
	0x03AC5430 B.NE 0x3AC5438
	0x03AC5434 STR W22, [X19 + 0x2E4]
	0x03AC5438 ADRP X29, 0x693000
	0x03AC543C LDR X29, [X29 + 0x3E8]
	0x03AC5440 LDR X0, [X29]
	0x03AC5444 LDR W8, [X0 + 0xE0]
	0x03AC5448 CBNZ W8, 0x3AC5454
	0x03AC544C BL 0x1C16DFC
	0x03AC5450 LDR X0, [X29]
	0x03AC5454 LDR X8, [X0 + 0xB8]
	0x03AC5458 MOV X0, X19
	0x03AC545C MOV X2, X31
	0x03AC5460 ADD X1, X8, 0xB00
	0x03AC5464 BL 0x3B05AD0
	0x03AC5468 ADRP X8, 0x62E000
	0x03AC546C LDR X8, [X8 + 0x598]
	0x03AC5470 STR W0, [X31 + 0x1048]
	0x03AC5474 LDR X25, [X19 + 0x2E8]
	0x03AC5478 LDR X8, [X8]
	0x03AC547C LDR W9, [X8 + 0xE0]
	0x03AC5480 CBNZ W9, 0x3AC548C
	0x03AC5484 MOV X0, X8
	0x03AC5488 BL 0x1C16DFC
	0x03AC548C MOV X0, X25
	0x03AC5490 MOV X1, X31
	0x03AC5494 MOV X2, X31
	0x03AC5498 BL 0x3C354F8
	0x03AC549C TBZ X0, 0x0, 0x3AC5518
	0x03AC54A0 LDR X8, [X19]
	0x03AC54A4 LDR X25, [X19 + 0x2E8]
	0x03AC54A8 MOV X0, X19
	0x03AC54AC LDR X9, [X8 + 0x548]
	0x03AC54B0 LDR X1, [X8 + 0x550]
	0x03AC54B4 BLR X9
	0x03AC54B8 CBZ X25, 0x3ACA6A8
	0x03AC54BC LDR X8, [X25]
	0x03AC54C0 MOV X1, X0
	0x03AC54C4 MOV X0, X25
	0x03AC54C8 LDR X9, [X8 + 0x558]
	0x03AC54CC LDR X2, [X8 + 0x560]
	0x03AC54D0 BLR X9
	0x03AC54D4 LDR X0, [X19 + 0x2E8]
	0x03AC54D8 CBZ X0, 0x3ACA6A8
	0x03AC54DC LDR W8, [X19 + 0x400]
	0x03AC54E0 MOV X2, X31
	0x03AC54E4 STR W8, [X0 + 0x400]
	0x03AC54E8 LDR W1, [X19 + 0x494]
	0x03AC54EC BL 0x3AF8B48
	0x03AC54F0 LDR X0, [X19 + 0x2E8]
	0x03AC54F4 CBZ X0, 0x3ACA6A8
	0x03AC54F8 LDR X8, [X0]
	0x03AC54FC MOV W1, W31
	0x03AC5500 MOV W2, W31
	0x03AC5504 LDR X9, [X8 + 0x7D8]
	0x03AC5508 LDR X3, [X8 + 0x7E0]
	0x03AC550C BLR X9
	0x03AC5510 MOVZ W8, 0x1
	0x03AC5514 STRB W8, [X19 + 0x2F8]
	0x03AC5518 STR W22, [X31 + 0x1068]
	0x03AC551C LDR X22, [X31 + 0x170]
	0x03AC5520 MOVZ W8, 0x3
	0x03AC5524 STR W8, [X31 + 0x106C]
	0x03AC5528 B 0x3AC3FF8
	0x03AC552C CMP W25, 0x3
	0x03AC5530 B.EQ 0x3AC53B0
	0x03AC5534 MOVZ W10, 0x200B
	0x03AC5538 CMP W25, W10
	0x03AC553C B.EQ 0x3AC53B0
	0x03AC5540 CMP W25, 0xAD
	0x03AC5544 B.EQ 0x3AC53B0
	0x03AC5548 ADD X9, X9, 0x194
	0x03AC554C MOVZ W10, 0x1
	0x03AC5550 STRB W10, [X9]
	0x03AC5554 LDR X9, [X31 + 0xA0]
	0x03AC5558 LDR X10, [X31 + 0xB0]
	0x03AC555C LDR X22, [X31 + 0x170]
	0x03AC5560 CBZ W20, 0x3AC558C
	0x03AC5564 LDR X8, [X8 + 0x50]
	0x03AC5568 CBZ X8, 0x3ACA6A8
	0x03AC556C LDRSW X9, [X19 + 0x4A8]
	0x03AC5570 LDR W10, [X8 + 0x18]
	0x03AC5574 CMP W9, W10
	0x03AC5578 B.CS 0x3ACA7B4
	0x03AC557C MOVZ W10, 0x5C
	0x03AC5580 MADD X8, X9, X10, X8
	0x03AC5584 ADD X10, X8, 0x60
	0x03AC5588 ADD X9, X8, 0x64
	0x03AC558C LDR V8, [X10]
	0x03AC5590 LDR V2, [X31 + 0x98]
	0x03AC5594 LDR V9, [X9]
	0x03AC5598 LDR V0, [X19 + 0x360]
	0x03AC559C LDR V10, [X19 + 0x640]
	0x03AC55A0 FSUB S2, S2, S8
	0x03AC55A4 FSUB S2, S2, S9
	0x03AC55A8 LDRB W8, [X19 + 0xF0]
	0x03AC55AC FCMP S2, S0
	0x03AC55B0 FMOV S3, -1
	0x03AC55B4 FCCMP S0, S3, 0x4, PL
	0x03AC55B8 FCSEL S0, S2, S0, EQ
	0x03AC55BC FMOV S12, W31
	0x03AC55C0 STR S0, [X31 + 0xE8]
	0x03AC55C4 FMOV S0, W31
	0x03AC55C8 CBNZ W8, 0x3AC55E4
	0x03AC55CC ADD X0, X31, 0x1000
	0x03AC55D0 ADD X0, X0, 0x30
	0x03AC55D4 MOV X1, X31
	0x03AC55D8 BL 0x3C9C2EC
	0x03AC55DC LDR W25, [X31 + 0x107C]
	0x03AC55E0 LDR V1, [X19 + 0x4D8]
	0x03AC55E4 LDR V3, [X31 + 0xE4]
	0x03AC55E8 LDR V2, [X19 + 0x2D4]
	0x03AC55EC LDR V4, [X19 + 0x4B8]
	0x03AC55F0 LDR V11, [X19 + 0x4CC]
	0x03AC55F4 CMP W25, 0xAD
	0x03AC55F8 FCSEL S3, S3, S13, EQ
	0x03AC55FC FCMP S1, 0x0
	0x03AC5600 B.LE 0x3AC5618
	0x03AC5604 LDRB W8, [X19 + 0x2C4]
	0x03AC5608 CBNZ W8, 0x3AC5618
	0x03AC560C LDR V5, [X19 + 0x4C8]
	0x03AC5610 LDR V6, [X19 + 0x4D0]
	0x03AC5614 FSUB S12, S5, S6
	0x03AC5618 FSUB S5, S11, S1
	0x03AC561C FSUB S4, S4, S5
	0x03AC5620 LDR V5, [X31 + 0xB8]
	0x03AC5624 LDR W27, [X23]
	0x03AC5628 FADD S4, S4, S12
	0x03AC562C FCMP S4, S5
	0x03AC5630 B.LE 0x3AC5738
	0x03AC5634 LDR W8, [X19 + 0x2E4]
	0x03AC5638 ADDS W31, W8, 0x1
	0x03AC563C B.NE 0x3AC5644
	0x03AC5640 STR W27, [X19 + 0x2E4]
	0x03AC5644 LDRB W8, [X19 + 0x238]
	0x03AC5648 CBZ W8, 0x3AC5694
	0x03AC564C LDR V6, [X19 + 0x2BC]
	0x03AC5650 LDR V5, [X19 + 0x2C8]
	0x03AC5654 FCMP S6, S5
	0x03AC5658 B.LE 0x3AC5674
	0x03AC565C FCMP S1, 0x0
	0x03AC5660 B.LE 0x3AC5674
	0x03AC5664 LDR W8, [X19 + 0x244]
	0x03AC5668 LDR W9, [X19 + 0x248]
	0x03AC566C CMP W8, W9
	0x03AC5670 B.LT 0x3AC7CF4
	0x03AC5674 LDR V4, [X19 + 0x1E4]
	0x03AC5678 LDR V1, [X19 + 0x250]
	0x03AC567C FCMP S4, S1
	0x03AC5680 B.LE 0x3AC5694
	0x03AC5684 LDR W8, [X19 + 0x244]
	0x03AC5688 LDR W9, [X19 + 0x248]
	0x03AC568C CMP W8, W9
	0x03AC5690 B.LT 0x3AC7D24
	0x03AC5694 LDR W8, [X19 + 0x2E0]
	0x03AC5698 SUB W8, W8, 0x1
	0x03AC569C CMP W8, 0x5
	0x03AC56A0 B.HI 0x3AC5738
	0x03AC56A4 ADRP X11, 0xFFFFFFFFFD0D2000
	0x03AC56A8 ADD X11, X11, 0xB8C
	0x03AC56AC ADR X9, 0x10
	0x03AC56B0 LDRB W10, [X11, X8, LSL]
	0x03AC56B4 ADD X9, X9, X10, 0x2, LSL
	0x03AC56B8 BR X9
	0x03AC56BC ADRP X29, 0x693000
	0x03AC56C0 LDR X29, [X29 + 0x3E8]
	0x03AC56C4 LDR X0, [X29]
	0x03AC56C8 LDR W8, [X0 + 0xE0]
	0x03AC56CC CBNZ W8, 0x3AC56D8
	0x03AC56D0 BL 0x1C16DFC
	0x03AC56D4 LDR X0, [X29]
	0x03AC56D8 LDR X8, [X0 + 0xB8]
	0x03AC56DC ADD X27, X31, 0xFA0
	0x03AC56E0 LDR W9, [X8 + 0x1580]
	0x03AC56E4 CBZ W9, 0x3AC7764
	0x03AC56E8 LDR W9, [X0 + 0xE0]
	0x03AC56EC CBNZ W9, 0x3AC56FC
	0x03AC56F0 BL 0x1C16DFC
	0x03AC56F4 LDR X8, [X29]
	0x03AC56F8 LDR X8, [X8 + 0xB8]
	0x03AC56FC ADRP X9, 0x693000
	0x03AC5700 LDR X9, [X9 + 0x388]
	0x03AC5704 LDR X1, [X9]
	0x03AC5708 MOVZ W9, 0x11F0
	0x03AC570C ADD X0, X8, X9
	0x03AC5710 ADD X8, X31, 0x1000
	0x03AC5714 ADD X8, X8, 0x80
	0x03AC5718 BL 0x2673C94
	0x03AC571C ADD X1, X31, 0x1000
	0x03AC5720 ADD X0, X31, 0xC20
	0x03AC5724 ADD X1, X1, 0x80
	0x03AC5728 MOVZ W2, 0x378
	0x03AC572C BL 0x3EB1AC0
	0x03AC5730 ADD X1, X31, 0xC20
	0x03AC5734 B 0x3AC5C4C
	0x03AC5738 FMOV S6, 1
	0x03AC573C FSUB S1, S6, S2
	0x03AC5740 ADRP X8, 0xFFFFFFFFFD025000
	0x03AC5744 FMUL S0, S0, S1
	0x03AC5748 FABS S4, S10
	0x03AC574C LDR V5, [X8 + 0x190]
	0x03AC5750 FMUL S0, S0, S3
	0x03AC5754 FADD S11, S4, S0
	0x03AC5758 LDR V0, [X31 + 0xE8]
	0x03AC575C CMP W26, 0x0
	0x03AC5760 FCSEL S12, S6, S5, EQ
	0x03AC5764 FMUL S0, S12, S0
	0x03AC5768 FCMP S11, S0
	0x03AC576C B.LE 0x3AC61AC
	0x03AC5770 LDRB W8, [X19 + 0x2D8]
	0x03AC5774 CBZ W8, 0x3AC5784
	0x03AC5778 LDR W8, [X19 + 0x498]
	0x03AC577C CMP W27, W8
	0x03AC5780 B.NE 0x3AC5A44
	0x03AC5784 LDRB W8, [X19 + 0x238]
	0x03AC5788 CBZ W8, 0x3AC57C4
	0x03AC578C LDR W8, [X19 + 0x244]
	0x03AC5790 LDR W9, [X19 + 0x248]
	0x03AC5794 CMP W8, W9
	0x03AC5798 B.GE 0x3AC57C4
	0x03AC579C LDR V0, [X19 + 0x2D0]
	0x03AC57A0 MOVZ W8, 0x42C80000
	0x03AC57A4 FMOV S3, W8
	0x03AC57A8 FDIV S0, S0, S3
	0x03AC57AC FCMP S2, S0
	0x03AC57B0 B.MI 0x3ACA70C
	0x03AC57B4 LDR V1, [X19 + 0x1E4]
	0x03AC57B8 LDR V0, [X19 + 0x250]
	0x03AC57BC FCMP S1, S0
	0x03AC57C0 B.GT 0x3ACA6AC
	0x03AC57C4 LDR W8, [X19 + 0x2E0]
	0x03AC57C8 CMP W8, 0x1
	0x03AC57CC B.EQ 0x3AC5BD4
	0x03AC57D0 CMP W8, 0x6
	0x03AC57D4 B.EQ 0x3AC5C88
	0x03AC57D8 CMP W8, 0x3
	0x03AC57DC B.NE 0x3AC61AC
	0x03AC57E0 ADRP X29, 0x693000
	0x03AC57E4 LDR X29, [X29 + 0x3E8]
	0x03AC57E8 LDR X0, [X29]
	0x03AC57EC LDR W8, [X0 + 0xE0]
	0x03AC57F0 CBNZ W8, 0x3AC57FC
	0x03AC57F4 BL 0x1C16DFC
	0x03AC57F8 LDR X0, [X29]
	0x03AC57FC LDR X8, [X0 + 0xB8]
	0x03AC5800 ADD X1, X8, 0x98
	0x03AC5804 B 0x3AC582C
	0x03AC5808 ADRP X29, 0x693000
	0x03AC580C LDR X29, [X29 + 0x3E8]
	0x03AC5810 LDR X0, [X29]
	0x03AC5814 LDR W8, [X0 + 0xE0]
	0x03AC5818 CBNZ W8, 0x3AC5824
	0x03AC581C BL 0x1C16DFC
	0x03AC5820 LDR X0, [X29]
	0x03AC5824 LDR X8, [X0 + 0xB8]
	0x03AC5828 ADD X1, X8, 0xB00
	0x03AC582C MOV X0, X19
	0x03AC5830 MOV X2, X31
	0x03AC5834 BL 0x3B05AD0
	0x03AC5838 STR W0, [X31 + 0x1048]
	0x03AC583C B 0x3AC59DC
	0x03AC5840 CBZ W27, 0x3AC5D80
	0x03AC5844 LDR W8, [X31 + 0x1048]
	0x03AC5848 TBNZ X8, 0x1F, 0x3AC5D80
	0x03AC584C ADRP X29, 0x693000
	0x03AC5850 LDR X29, [X29 + 0x3E8]
	0x03AC5854 LDR V8, [X19 + 0x4C8]
	0x03AC5858 LDR X0, [X29]
	0x03AC585C LDR W8, [X0 + 0xE0]
	0x03AC5860 CBNZ W8, 0x3AC586C
	0x03AC5864 BL 0x1C16DFC
	0x03AC5868 LDR X0, [X29]
	0x03AC586C LDR X8, [X0 + 0xB8]
	0x03AC5870 MOV X0, X19
	0x03AC5874 MOV X2, X31
	0x03AC5878 FSUB S8, S8, S11
	0x03AC587C ADD X1, X8, 0x410
	0x03AC5880 BL 0x3B05AD0
	0x03AC5884 LDR V0, [X31 + 0xB8]
	0x03AC5888 STR W0, [X31 + 0x1048]
	0x03AC588C FCMP S8, S0
	0x03AC5890 B.GT 0x3AC59DC
	0x03AC5894 LDR W8, [X19 + 0x494]
	0x03AC5898 MOVZ W9, 0x1
	0x03AC589C STRB W9, [X19 + 0x33C]
	0x03AC58A0 LDR V0, [X19 + 0x40C]
	0x03AC58A4 STR W8, [X19 + 0x498]
	0x03AC58A8 LDR X8, [X29]
	0x03AC58AC FMOV S1, W31
	0x03AC58B0 FADD S0, S0, S1
	0x03AC58B4 ADD X27, X31, 0xFA0
	0x03AC58B8 LDR X8, [X8 + 0xB8]
	0x03AC58BC LDR V1, [X8 + 0x15A8]
	0x03AC58C0 LDR X8, [X31 + 0x80]
	0x03AC58C4 STR S0, [X19 + 0x640]
	0x03AC58C8 STR W31, [X19 + 0x4D0]
	0x03AC58CC UNIMPLEMENTED
	0x03AC58D0 STR D0, [X19 + 0x4C8]
	0x03AC58D4 MOVI D0, 0x0
	0x03AC58D8 STR W31, [X19 + 0x4D8]
	0x03AC58DC STR D0, [X8 + 0x208]
	0x03AC58E0 LDR W8, [X19 + 0x4A8]
	0x03AC58E4 LDR W9, [X19 + 0x4B0]
	0x03AC58E8 ADD W8, W8, 0x1
	0x03AC58EC STR W8, [X19 + 0x4A8]
	0x03AC58F0 ADD W8, W9, 0x1
	0x03AC58F4 STR W8, [X19 + 0x4B0]
	0x03AC58F8 B 0x3AC3FF8
	0x03AC58FC ADRP X29, 0x693000
	0x03AC5900 LDR X29, [X29 + 0x3E8]
	0x03AC5904 LDR X0, [X29]
	0x03AC5908 LDR W8, [X0 + 0xE0]
	0x03AC590C CBNZ W8, 0x3AC5918
	0x03AC5910 BL 0x1C16DFC
	0x03AC5914 LDR X0, [X29]
	0x03AC5918 LDR X8, [X0 + 0xB8]
	0x03AC591C MOV X0, X19
	0x03AC5920 MOV X2, X31
	0x03AC5924 ADD X1, X8, 0xB00
	0x03AC5928 BL 0x3B05AD0
	0x03AC592C ADRP X8, 0x62E000
	0x03AC5930 LDR X8, [X8 + 0x598]
	0x03AC5934 STR W0, [X31 + 0x1048]
	0x03AC5938 LDR X25, [X19 + 0x2E8]
	0x03AC593C LDR X8, [X8]
	0x03AC5940 LDR W9, [X8 + 0xE0]
	0x03AC5944 CBNZ W9, 0x3AC5950
	0x03AC5948 MOV X0, X8
	0x03AC594C BL 0x1C16DFC
	0x03AC5950 MOV X0, X25
	0x03AC5954 MOV X1, X31
	0x03AC5958 MOV X2, X31
	0x03AC595C BL 0x3C354F8
	0x03AC5960 TBZ X0, 0x0, 0x3AC59DC
	0x03AC5964 LDR X8, [X19]
	0x03AC5968 LDR X25, [X19 + 0x2E8]
	0x03AC596C MOV X0, X19
	0x03AC5970 LDR X9, [X8 + 0x548]
	0x03AC5974 LDR X1, [X8 + 0x550]
	0x03AC5978 BLR X9
	0x03AC597C CBZ X25, 0x3ACA6A8
	0x03AC5980 LDR X8, [X25]
	0x03AC5984 MOV X1, X0
	0x03AC5988 MOV X0, X25
	0x03AC598C LDR X9, [X8 + 0x558]
	0x03AC5990 LDR X2, [X8 + 0x560]
	0x03AC5994 BLR X9
	0x03AC5998 LDR X0, [X19 + 0x2E8]
	0x03AC599C CBZ X0, 0x3ACA6A8
	0x03AC59A0 LDR W8, [X19 + 0x400]
	0x03AC59A4 MOV X2, X31
	0x03AC59A8 STR W8, [X0 + 0x400]
	0x03AC59AC LDR W1, [X19 + 0x494]
	0x03AC59B0 BL 0x3AF8B48
	0x03AC59B4 LDR X0, [X19 + 0x2E8]
	0x03AC59B8 CBZ X0, 0x3ACA6A8
	0x03AC59BC LDR X8, [X0]
	0x03AC59C0 MOV W1, W31
	0x03AC59C4 MOV W2, W31
	0x03AC59C8 LDR X9, [X8 + 0x7D8]
	0x03AC59CC LDR X3, [X8 + 0x7E0]
	0x03AC59D0 BLR X9
	0x03AC59D4 MOVZ W8, 0x1
	0x03AC59D8 STRB W8, [X19 + 0x2F8]
	0x03AC59DC MOVZ W8, 0x3
	0x03AC59E0 STR W27, [X31 + 0x1068]
	0x03AC59E4 STR W8, [X31 + 0x106C]
	0x03AC59E8 B 0x3AC769C
	0x03AC59EC MOVN W8, 0x2006
	0x03AC59F0 ADD W8, W25, W8
	0x03AC59F4 CMP W8, 0x22
	0x03AC59F8 B.LS 0x3AC5D9C
	0x03AC59FC LDR X22, [X31 + 0x170]
	0x03AC5A00 SUB W8, W25, 0xA
	0x03AC5A04 CMP W8, 0x2
	0x03AC5A08 B.CC 0x3AC5DB8
	0x03AC5A0C CMP W25, 0xA0
	0x03AC5A10 B.EQ 0x3AC5DB8
	0x03AC5A14 ADRP X8, 0x630000
	0x03AC5A18 LDR X8, [X8 + 0x170]
	0x03AC5A1C LDR X0, [X8]
	0x03AC5A20 LDR W8, [X0 + 0xE0]
	0x03AC5A24 CBNZ W8, 0x3AC5A2C
	0x03AC5A28 BL 0x1C16DFC
	0x03AC5A2C MOV W0, W25
	0x03AC5A30 MOV X1, X31
	0x03AC5A34 BL 0x331BAF4
	0x03AC5A38 TBZ X0, 0x0, 0x3AC5E18
	0x03AC5A3C LDR W25, [X31 + 0x107C]
	0x03AC5A40 B 0x3AC5DB8
	0x03AC5A44 ADRP X25, 0x693000
	0x03AC5A48 LDR X25, [X25 + 0x3E8]
	0x03AC5A4C LDR X0, [X25]
	0x03AC5A50 LDR W8, [X0 + 0xE0]
	0x03AC5A54 CBNZ W8, 0x3AC5A60
	0x03AC5A58 BL 0x1C16DFC
	0x03AC5A5C LDR X0, [X25]
	0x03AC5A60 LDR X8, [X0 + 0xB8]
	0x03AC5A64 MOV X0, X19
	0x03AC5A68 MOV X2, X31
	0x03AC5A6C ADD X1, X8, 0x98
	0x03AC5A70 BL 0x3B05AD0
	0x03AC5A74 STR W0, [X31 + 0x1048]
	0x03AC5A78 ADRP X8, 0xFFFFFFFFFD025000
	0x03AC5A7C LDR V1, [X19 + 0x2C0]
	0x03AC5A80 LDR V0, [X8 + 0x214]
	0x03AC5A84 FCMP S1, S0
	0x03AC5A88 B.NE 0x3AC5E50
	0x03AC5A8C LDR X8, [X22]
	0x03AC5A90 CBZ X8, 0x3ACA6A8
	0x03AC5A94 LDR X9, [X8 + 0x38]
	0x03AC5A98 CBZ X9, 0x3ACA6A8
	0x03AC5A9C LDRSW X10, [X23]
	0x03AC5AA0 LDR W11, [X9 + 0x18]
	0x03AC5AA4 CMP W10, W11
	0x03AC5AA8 B.CS 0x3ACA7B4
	0x03AC5AAC LDR V0, [X19 + 0x4D8]
	0x03AC5AB0 FMOV S1, W31
	0x03AC5AB4 FCMP S0, 0x0
	0x03AC5AB8 B.LE 0x3AC5AD0
	0x03AC5ABC LDRB W11, [X19 + 0x2C4]
	0x03AC5AC0 CBNZ W11, 0x3AC5AD0
	0x03AC5AC4 LDR V1, [X19 + 0x4C8]
	0x03AC5AC8 LDR V2, [X19 + 0x4D0]
	0x03AC5ACC FSUB S1, S1, S2
	0x03AC5AD0 LDR V2, [X19 + 0x4CC]
	0x03AC5AD4 LDR V3, [X19 + 0x2BC]
	0x03AC5AD8 NOP
	0x03AC5ADC MADD X9, X10, X21, X9
	0x03AC5AE0 LDR V4, [X9 + 0x154]
	0x03AC5AE4 FSUB S1, S1, S2
	0x03AC5AE8 LDR V2, [X31 + 0x54]
	0x03AC5AEC LDR V5, [X19 + 0x2B8]
	0x03AC5AF0 FADD S1, S4, S1
	0x03AC5AF4 FADD S2, S2, S3
	0x03AC5AF8 LDR V3, [X31 + 0x58]
	0x03AC5AFC FMUL S2, S3, S2
	0x03AC5B00 FADD S1, S1, S2
	0x03AC5B04 LDR V2, [X31 + 0xE0]
	0x03AC5B08 FMUL S2, S2, S5
	0x03AC5B0C FADD S1, S2, S1
	0x03AC5B10 B 0x3AC5E74
	0x03AC5B14 LDR V0, [X19 + 0x5F0]
	0x03AC5B18 LDR V1, [X31 + 0x5C]
	0x03AC5B1C ADD X0, X31, 0x1000
	0x03AC5B20 ADD X0, X0, 0x30
	0x03AC5B24 SCVTF S0, S0
	0x03AC5B28 MOV X1, X31
	0x03AC5B2C FMUL S11, S0, S1
	0x03AC5B30 STR S3, [X31 + 0xC8]
	0x03AC5B34 BL 0x3C9C2E4
	0x03AC5B38 LDR V1, [X31 + 0x150]
	0x03AC5B3C LDR V13, [X31 + 0xBC]
	0x03AC5B40 ADD X0, X31, 0x1000
	0x03AC5B44 ADD X0, X0, 0x30
	0x03AC5B48 FADD S0, S1, S0
	0x03AC5B4C FADD S0, S13, S0
	0x03AC5B50 FMUL S0, S8, S0
	0x03AC5B54 MOV X1, X31
	0x03AC5B58 MOV V9.16B, V8.16B
	0x03AC5B5C FMUL S12, S11, S0
	0x03AC5B60 BL 0x3C9C2E4
	0x03AC5B64 ADD X0, X31, 0x1000
	0x03AC5B68 ADD X0, X0, 0x30
	0x03AC5B6C MOV X1, X31
	0x03AC5B70 MOV V8.16B, V0.16B
	0x03AC5B74 BL 0x3C9C2D4
	0x03AC5B78 FMOV S2, W31
	0x03AC5B7C FADD S14, S14, S2
	0x03AC5B80 FADD S10, S10, S2
	0x03AC5B84 LDR V2, [X31 + 0x150]
	0x03AC5B88 FSUB S0, S8, S0
	0x03AC5B8C LDR V5, [X31 + 0xC8]
	0x03AC5B90 FADD S1, S15, S12
	0x03AC5B94 FSUB S0, S0, S2
	0x03AC5B98 FSUB S0, S0, S13
	0x03AC5B9C FMUL S0, S9, S0
	0x03AC5BA0 FMUL S0, S11, S0
	0x03AC5BA4 FADD S2, S5, S12
	0x03AC5BA8 FSUB S3, S12, S0
	0x03AC5BAC FADD S4, S15, S0
	0x03AC5BB0 FADD S0, S5, S0
	0x03AC5BB4 FMOV S5, 0.5
	0x03AC5BB8 FMUL S3, S3, S5
	0x03AC5BBC MOV V8.16B, V9.16B
	0x03AC5BC0 FSUB S12, S1, S3
	0x03AC5BC4 FSUB S15, S4, S3
	0x03AC5BC8 FSUB S11, S2, S3
	0x03AC5BCC FSUB S3, S0, S3
	0x03AC5BD0 B 0x3AC4FD4
	0x03AC5BD4 ADRP X29, 0x693000
	0x03AC5BD8 LDR X29, [X29 + 0x3E8]
	0x03AC5BDC LDR X0, [X29]
	0x03AC5BE0 LDR W8, [X0 + 0xE0]
	0x03AC5BE4 CBNZ W8, 0x3AC5BF0
	0x03AC5BE8 BL 0x1C16DFC
	0x03AC5BEC LDR X0, [X29]
	0x03AC5BF0 LDR X8, [X0 + 0xB8]
	0x03AC5BF4 ADD X27, X31, 0xFA0
	0x03AC5BF8 LDR W9, [X8 + 0x1580]
	0x03AC5BFC CBZ W9, 0x3AC7764
	0x03AC5C00 LDR W9, [X0 + 0xE0]
	0x03AC5C04 CBNZ W9, 0x3AC5C14
	0x03AC5C08 BL 0x1C16DFC
	0x03AC5C0C LDR X8, [X29]
	0x03AC5C10 LDR X8, [X8 + 0xB8]
	0x03AC5C14 ADRP X9, 0x693000
	0x03AC5C18 LDR X9, [X9 + 0x388]
	0x03AC5C1C LDR X1, [X9]
	0x03AC5C20 MOVZ W9, 0x11F0
	0x03AC5C24 ADD X0, X8, X9
	0x03AC5C28 ADD X8, X31, 0x1000
	0x03AC5C2C ADD X8, X8, 0x80
	0x03AC5C30 BL 0x2673C94
	0x03AC5C34 ADD X1, X31, 0x1000
	0x03AC5C38 ADD X0, X31, 0x530
	0x03AC5C3C ADD X1, X1, 0x80
	0x03AC5C40 MOVZ W2, 0x378
	0x03AC5C44 BL 0x3EB1AC0
	0x03AC5C48 ADD X1, X31, 0x530
	0x03AC5C4C MOV X0, X19
	0x03AC5C50 MOV X2, X31
	0x03AC5C54 BL 0x3B05AD0
	0x03AC5C58 SUB W8, W0, 0x1
	0x03AC5C5C STR W8, [X31 + 0x1048]
	0x03AC5C60 LDR W8, [X19 + 0x494]
	0x03AC5C64 SUB W8, W8, 0x1
	0x03AC5C68 STR W8, [X19 + 0x494]
	0x03AC5C6C STR W8, [X31 + 0x1068]
	0x03AC5C70 MOVZ W8, 0x2026
	0x03AC5C74 STR W8, [X31 + 0x106C]
	0x03AC5C78 LDR W8, [X31 + 0x168]
	0x03AC5C7C ADD W8, W8, 0x1
	0x03AC5C80 STR W8, [X31 + 0x168]
	0x03AC5C84 B 0x3AC3FF8
	0x03AC5C88 ADRP X29, 0x693000
	0x03AC5C8C LDR X29, [X29 + 0x3E8]
	0x03AC5C90 LDR X0, [X29]
	0x03AC5C94 LDR W8, [X0 + 0xE0]
	0x03AC5C98 CBNZ W8, 0x3AC5CA4
	0x03AC5C9C BL 0x1C16DFC
	0x03AC5CA0 LDR X0, [X29]
	0x03AC5CA4 LDR X8, [X0 + 0xB8]
	0x03AC5CA8 MOV X0, X19
	0x03AC5CAC MOV X2, X31
	0x03AC5CB0 ADD X27, X31, 0xFA0
	0x03AC5CB4 ADD X1, X8, 0x98
	0x03AC5CB8 BL 0x3B05AD0
	0x03AC5CBC ADRP X8, 0x62E000
	0x03AC5CC0 LDR X8, [X8 + 0x598]
	0x03AC5CC4 STR W0, [X31 + 0x1048]
	0x03AC5CC8 LDR X25, [X19 + 0x2E8]
	0x03AC5CCC LDR X8, [X8]
	0x03AC5CD0 LDR W9, [X8 + 0xE0]
	0x03AC5CD4 CBNZ W9, 0x3AC5CE0
	0x03AC5CD8 MOV X0, X8
	0x03AC5CDC BL 0x1C16DFC
	0x03AC5CE0 MOV X0, X25
	0x03AC5CE4 MOV X1, X31
	0x03AC5CE8 MOV X2, X31
	0x03AC5CEC BL 0x3C354F8
	0x03AC5CF0 TBZ X0, 0x0, 0x3AC5D6C
	0x03AC5CF4 LDR X8, [X19]
	0x03AC5CF8 LDR X25, [X19 + 0x2E8]
	0x03AC5CFC MOV X0, X19
	0x03AC5D00 LDR X9, [X8 + 0x548]
	0x03AC5D04 LDR X1, [X8 + 0x550]
	0x03AC5D08 BLR X9
	0x03AC5D0C CBZ X25, 0x3ACA6A8
	0x03AC5D10 LDR X8, [X25]
	0x03AC5D14 MOV X1, X0
	0x03AC5D18 MOV X0, X25
	0x03AC5D1C LDR X9, [X8 + 0x558]
	0x03AC5D20 LDR X2, [X8 + 0x560]
	0x03AC5D24 BLR X9
	0x03AC5D28 LDR X0, [X19 + 0x2E8]
	0x03AC5D2C CBZ X0, 0x3ACA6A8
	0x03AC5D30 LDR W8, [X19 + 0x400]
	0x03AC5D34 MOV X2, X31
	0x03AC5D38 STR W8, [X0 + 0x400]
	0x03AC5D3C LDR W1, [X19 + 0x494]
	0x03AC5D40 BL 0x3AF8B48
	0x03AC5D44 LDR X0, [X19 + 0x2E8]
	0x03AC5D48 CBZ X0, 0x3ACA6A8
	0x03AC5D4C LDR X8, [X0]
	0x03AC5D50 MOV W1, W31
	0x03AC5D54 MOV W2, W31
	0x03AC5D58 LDR X9, [X8 + 0x7D8]
	0x03AC5D5C LDR X3, [X8 + 0x7E0]
	0x03AC5D60 BLR X9
	0x03AC5D64 MOVZ W8, 0x1
	0x03AC5D68 STRB W8, [X19 + 0x2F8]
	0x03AC5D6C LDR W8, [X23]
	0x03AC5D70 MOVZ W9, 0x3
	0x03AC5D74 STR W9, [X31 + 0x106C]
	0x03AC5D78 STR W8, [X31 + 0x1068]
	0x03AC5D7C B 0x3AC3FF8
	0x03AC5D80 ADRP X8, 0xFFFFFFFFFD028000
	0x03AC5D84 LDR V0, [X8 + 0xB60]
	0x03AC5D88 MOVN W8, 0x0
	0x03AC5D8C STR W8, [X31 + 0x1048]
	0x03AC5D90 STR W31, [X23]
	0x03AC5D94 STR D0, [X31 + 0x1068]
	0x03AC5D98 B 0x3AC7694
	0x03AC5D9C MOVZ W9, 0x1
	0x03AC5DA0 LSLV X8, X9, X8
	0x03AC5DA4 MOVZ X9, 0x1
	0x03AC5DA8 MOVK X9, 0x6
	0x03AC5DAC ANDS X31, X8, X9, 0x0
	0x03AC5DB0 B.EQ 0x3AC59FC
	0x03AC5DB4 LDR X22, [X31 + 0x170]
	0x03AC5DB8 CMP W25, 0xAD
	0x03AC5DBC B.EQ 0x3AC5E18
	0x03AC5DC0 MOVZ W8, 0x200B
	0x03AC5DC4 CMP W25, W8
	0x03AC5DC8 B.EQ 0x3AC5E18
	0x03AC5DCC MOVZ W8, 0x2060
	0x03AC5DD0 CMP W25, W8
	0x03AC5DD4 B.EQ 0x3AC5E18
	0x03AC5DD8 LDR X8, [X22]
	0x03AC5DDC CBZ X8, 0x3ACA6A8
	0x03AC5DE0 LDR X9, [X8 + 0x50]
	0x03AC5DE4 CBZ X9, 0x3ACA6A8
	0x03AC5DE8 LDRSW X10, [X19 + 0x4A8]
	0x03AC5DEC LDR W11, [X9 + 0x18]
	0x03AC5DF0 CMP W10, W11
	0x03AC5DF4 B.CS 0x3ACA7B4
	0x03AC5DF8 MOVZ W11, 0x5C
	0x03AC5DFC MADD X9, X10, X11, X9
	0x03AC5E00 LDR W10, [X9 + 0x2C]
	0x03AC5E04 ADD W10, W10, 0x1
	0x03AC5E08 STR W10, [X9 + 0x2C]
	0x03AC5E0C LDR W9, [X8 + 0x20]
	0x03AC5E10 ADD W9, W9, 0x1
	0x03AC5E14 STR W9, [X8 + 0x20]
	0x03AC5E18 LDR W8, [X31 + 0x107C]
	0x03AC5E1C CMP W8, 0xA0
	0x03AC5E20 B.NE 0x3AC6308
	0x03AC5E24 LDR X8, [X22]
	0x03AC5E28 CBZ X8, 0x3ACA6A8
	0x03AC5E2C LDR X8, [X8 + 0x50]
	0x03AC5E30 CBZ X8, 0x3ACA6A8
	0x03AC5E34 LDRSW X9, [X19 + 0x4A8]
	0x03AC5E38 LDR W10, [X8 + 0x18]
	0x03AC5E3C CMP W9, W10
	0x03AC5E40 B.CS 0x3ACA7B4
	0x03AC5E44 MOVZ W10, 0x5C
	0x03AC5E48 MADD X8, X9, X10, X8
	0x03AC5E4C B 0x3AC6220
	0x03AC5E50 LDR X8, [X19 + 0x368]
	0x03AC5E54 LDR V2, [X19 + 0x2B8]
	0x03AC5E58 MOVZ W9, 0x1
	0x03AC5E5C STRB W9, [X19 + 0x2C4]
	0x03AC5E60 CBZ X8, 0x3ACA6A8
	0x03AC5E64 LDR V3, [X31 + 0xE0]
	0x03AC5E68 LDR V0, [X19 + 0x4D8]
	0x03AC5E6C FMUL S2, S3, S2
	0x03AC5E70 FADD S1, S1, S2
	0x03AC5E74 LDR X8, [X8 + 0x38]
	0x03AC5E78 CBZ X8, 0x3ACA6A8
	0x03AC5E7C LDRSW X9, [X19 + 0x494]
	0x03AC5E80 LDR W11, [X8 + 0x18]
	0x03AC5E84 CMP W9, W11
	0x03AC5E88 B.CS 0x3ACA7B4
	0x03AC5E8C SUB W10, W9, 0x1
	0x03AC5E90 CMP W10, W11
	0x03AC5E94 B.CS 0x3ACA7B4
	0x03AC5E98 SMADDL X12, X10, X21, X8
	0x03AC5E9C LDRH W12, [X12 + 0x20]
	0x03AC5EA0 LDR V2, [X19 + 0x4B8]
	0x03AC5EA4 NOP
	0x03AC5EA8 MADD X11, X9, X21, X8
	0x03AC5EAC LDR V3, [X11 + 0x158]
	0x03AC5EB0 CMP W12, 0xAD
	0x03AC5EB4 LDR W12, [X31 + 0x74]
	0x03AC5EB8 FADD S1, S1, S2
	0x03AC5EBC FADD S0, S1, S0
	0x03AC5EC0 CSET W11, NE
	0x03AC5EC4 ORR W11, W12, W11, 0x0
	0x03AC5EC8 FSUB S10, S0, S3
	0x03AC5ECC TBNZ X11, 0x0, 0x3AC5EE4
	0x03AC5ED0 LDR V0, [X31 + 0xB8]
	0x03AC5ED4 FCMP S10, S0
	0x03AC5ED8 B.MI 0x3AC6028
	0x03AC5EDC LDR W11, [X19 + 0x2E0]
	0x03AC5EE0 CBZ W11, 0x3AC6028
	0x03AC5EE4 MADD X8, X9, X21, X8
	0x03AC5EE8 LDRH W8, [X8 + 0x20]
	0x03AC5EEC CMP W8, 0xAD
	0x03AC5EF0 B.NE 0x3AC5F00
	0x03AC5EF4 MOVZ W8, 0x1
	0x03AC5EF8 STR W8, [X31 + 0x74]
	0x03AC5EFC B 0x3AC7694
	0x03AC5F00 LDRB W8, [X19 + 0x238]
	0x03AC5F04 LDR W9, [X31 + 0x68]
	0x03AC5F08 AND W8, W9, W8, 0x0
	0x03AC5F0C TBZ X8, 0x0, 0x3AC5F5C
	0x03AC5F10 LDR V0, [X19 + 0x2D0]
	0x03AC5F14 LDR V1, [X19 + 0x2D4]
	0x03AC5F18 MOVZ W8, 0x42C80000
	0x03AC5F1C FMOV S2, W8
	0x03AC5F20 FDIV S0, S0, S2
	0x03AC5F24 FCMP S1, S0
	0x03AC5F28 B.PL 0x3AC5F3C
	0x03AC5F2C LDR W8, [X19 + 0x244]
	0x03AC5F30 LDR W9, [X19 + 0x248]
	0x03AC5F34 CMP W8, W9
	0x03AC5F38 B.LT 0x3ACA748
	0x03AC5F3C LDR V1, [X19 + 0x1E4]
	0x03AC5F40 LDR V0, [X19 + 0x250]
	0x03AC5F44 FCMP S1, S0
	0x03AC5F48 B.LE 0x3AC5F5C
	0x03AC5F4C LDR W8, [X19 + 0x244]
	0x03AC5F50 LDR W9, [X19 + 0x248]
	0x03AC5F54 CMP W8, W9
	0x03AC5F58 B.LT 0x3ACA6AC
	0x03AC5F5C ADRP X22, 0x693000
	0x03AC5F60 LDR X22, [X22 + 0x3E8]
	0x03AC5F64 LDR X0, [X22]
	0x03AC5F68 LDR W8, [X0 + 0xE0]
	0x03AC5F6C CBNZ W8, 0x3AC5F78
	0x03AC5F70 BL 0x1C16DFC
	0x03AC5F74 LDR X0, [X22]
	0x03AC5F78 LDR X8, [X0 + 0xB8]
	0x03AC5F7C LDR W9, [X31 + 0x34]
	0x03AC5F80 LDR W22, [X8 + 0xE78]
	0x03AC5F84 CMP W22, W9
	0x03AC5F88 B.EQ 0x3AC604C
	0x03AC5F8C ADDS W31, W22, 0x1
	0x03AC5F90 B.EQ 0x3AC604C
	0x03AC5F94 LDR W9, [X31 + 0x68]
	0x03AC5F98 EOR W9, W9, 0x1
	0x03AC5F9C TBNZ X9, 0x0, 0x3AC604C
	0x03AC5FA0 LDR W9, [X0 + 0xE0]
	0x03AC5FA4 CBNZ W9, 0x3AC5FBC
	0x03AC5FA8 BL 0x1C16DFC
	0x03AC5FAC ADRP X8, 0x693000
	0x03AC5FB0 LDR X8, [X8 + 0x3E8]
	0x03AC5FB4 LDR X8, [X8]
	0x03AC5FB8 LDR X8, [X8 + 0xB8]
	0x03AC5FBC ADD X1, X8, 0xE78
	0x03AC5FC0 MOV X0, X19
	0x03AC5FC4 MOV X2, X31
	0x03AC5FC8 BL 0x3B05AD0
	0x03AC5FCC STR W0, [X31 + 0x1048]
	0x03AC5FD0 LDR X8, [X19 + 0x368]
	0x03AC5FD4 CBZ X8, 0x3ACA6A8
	0x03AC5FD8 LDR X9, [X8 + 0x38]
	0x03AC5FDC CBZ X9, 0x3ACA6A8
	0x03AC5FE0 LDR W8, [X23]
	0x03AC5FE4 LDR W10, [X9 + 0x18]
	0x03AC5FE8 SUB W8, W8, 0x1
	0x03AC5FEC CMP W8, W10
	0x03AC5FF0 B.CS 0x3ACA7B4
	0x03AC5FF4 SMADDL X9, X8, X21, X9
	0x03AC5FF8 LDRH W9, [X9 + 0x20]
	0x03AC5FFC CMP W9, 0xAD
	0x03AC6000 B.NE 0x3AC6048
	0x03AC6004 MOVZ W9, 0x2D
	0x03AC6008 STR W9, [X31 + 0x106C]
	0x03AC600C SUB W9, W0, 0x1
	0x03AC6010 STR W31, [X31 + 0x74]
	0x03AC6014 STR W8, [X31 + 0x1068]
	0x03AC6018 STR W9, [X31 + 0x1048]
	0x03AC601C STR W8, [X23]
	0x03AC6020 STR W22, [X31 + 0x34]
	0x03AC6024 B 0x3AC6198
	0x03AC6028 MOVZ W8, 0x2D
	0x03AC602C STR W8, [X31 + 0x106C]
	0x03AC6030 SUB W8, W0, 0x1
	0x03AC6034 STR W31, [X31 + 0x74]
	0x03AC6038 STR W10, [X31 + 0x1068]
	0x03AC603C STR W8, [X31 + 0x1048]
	0x03AC6040 STR W10, [X23]
	0x03AC6044 B 0x3AC7694
	0x03AC6048 STR W22, [X31 + 0x34]
	0x03AC604C LDR V0, [X31 + 0xB8]
	0x03AC6050 FCMP S10, S0
	0x03AC6054 B.LE 0x3AC6150
	0x03AC6058 LDR W8, [X19 + 0x2E4]
	0x03AC605C LDR X22, [X31 + 0x170]
	0x03AC6060 ADDS W31, W8, 0x1
	0x03AC6064 B.NE 0x3AC6070
	0x03AC6068 LDR W8, [X19 + 0x494]
	0x03AC606C STR W8, [X19 + 0x2E4]
	0x03AC6070 LDRB W8, [X19 + 0x238]
	0x03AC6074 CBZ W8, 0x3AC60E4
	0x03AC6078 LDR V1, [X19 + 0x2BC]
	0x03AC607C LDR V0, [X19 + 0x2C8]
	0x03AC6080 FCMP S1, S0
	0x03AC6084 B.LE 0x3AC6098
	0x03AC6088 LDR W8, [X19 + 0x244]
	0x03AC608C LDR W9, [X19 + 0x248]
	0x03AC6090 CMP W8, W9
	0x03AC6094 B.LT 0x3ACA784
	0x03AC6098 LDR V0, [X19 + 0x2D0]
	0x03AC609C LDR V1, [X19 + 0x2D4]
	0x03AC60A0 MOVZ W8, 0x42C80000
	0x03AC60A4 FMOV S2, W8
	0x03AC60A8 FDIV S0, S0, S2
	0x03AC60AC FCMP S1, S0
	0x03AC60B0 B.PL 0x3AC60C4
	0x03AC60B4 LDR W8, [X19 + 0x244]
	0x03AC60B8 LDR W9, [X19 + 0x248]
	0x03AC60BC CMP W8, W9
	0x03AC60C0 B.LT 0x3ACA748
	0x03AC60C4 LDR V1, [X19 + 0x1E4]
	0x03AC60C8 LDR V0, [X19 + 0x250]
	0x03AC60CC FCMP S1, S0
	0x03AC60D0 B.LE 0x3AC60E4
	0x03AC60D4 LDR W8, [X19 + 0x244]
	0x03AC60D8 LDR W9, [X19 + 0x248]
	0x03AC60DC CMP W8, W9
	0x03AC60E0 B.LT 0x3ACA6AC
	0x03AC60E4 LDR W8, [X19 + 0x2E0]
	0x03AC60E8 CMP W8, 0x6
	0x03AC60EC B.HI 0x3AC61A4
	0x03AC60F0 ADRP X11, 0xFFFFFFFFFD0D1000
	0x03AC60F4 ADD X11, X11, 0xB92
	0x03AC60F8 ADR X9, 0x10
	0x03AC60FC LDRH W10, [X11, X8, LSL #1]
	0x03AC6100 ADD X9, X9, X10, 0x2, LSL
	0x03AC6104 BR X9
	0x03AC6108 LDR W1, [X31 + 0x1048]
	0x03AC610C LDR V3, [X19 + 0x2FC]
	0x03AC6110 LDP S7, S0, [X31 + 0x54]
	0x03AC6114 LDP S4, S2, [X31 + 0xDC]
	0x03AC6118 LDR V5, [X31 + 0x13C]
	0x03AC611C LDR V6, [X31 + 0xE8]
	0x03AC6120 ADD X2, X31, 0x1000
	0x03AC6124 ADD X3, X31, 0x1000
	0x03AC6128 ADD X2, X2, 0x74
	0x03AC612C ADD X3, X3, 0x78
	0x03AC6130 MOV X0, X19
	0x03AC6134 MOV V1.16B, V13.16B
	0x03AC6138 MOV X4, X31
	0x03AC613C BL 0x3B063EC
	0x03AC6140 MOVZ W8, 0x1
	0x03AC6144 STR W31, [X31 + 0x74]
	0x03AC6148 STR W8, [X31 + 0x68]
	0x03AC614C B 0x3AC768C
	0x03AC6150 LDR W1, [X31 + 0x1048]
	0x03AC6154 LDR V3, [X19 + 0x2FC]
	0x03AC6158 LDP S7, S0, [X31 + 0x54]
	0x03AC615C LDP S4, S2, [X31 + 0xDC]
	0x03AC6160 LDR V5, [X31 + 0x13C]
	0x03AC6164 LDR V6, [X31 + 0xE8]
	0x03AC6168 ADD X2, X31, 0x1000
	0x03AC616C ADD X3, X31, 0x1000
	0x03AC6170 ADD X2, X2, 0x74
	0x03AC6174 ADD X3, X3, 0x78
	0x03AC6178 MOV X0, X19
	0x03AC617C MOV V1.16B, V13.16B
	0x03AC6180 MOV X4, X31
	0x03AC6184 BL 0x3B063EC
	0x03AC6188 MOVZ W9, 0x1
	0x03AC618C MOVZ W8, 0x1
	0x03AC6190 STR W31, [X31 + 0x74]
	0x03AC6194 STP W8, W9, [X31 + 0x64]
	0x03AC6198 ADRP X29, 0x692000
	0x03AC619C LDR X22, [X31 + 0x170]
	0x03AC61A0 B 0x3AC7698
	0x03AC61A4 LDR W25, [X31 + 0x107C]
	0x03AC61A8 STR W31, [X31 + 0x74]
	0x03AC61AC LDR V1, [X31 + 0xBC]
	0x03AC61B0 CMP W25, 0xAD
	0x03AC61B4 ADD X27, X31, 0xFA0
	0x03AC61B8 B.EQ 0x3AC6230
	0x03AC61BC CMP W25, 0x9
	0x03AC61C0 B.NE 0x3AC625C
	0x03AC61C4 LDR X8, [X22]
	0x03AC61C8 CBZ X8, 0x3ACA6A8
	0x03AC61CC LDR X9, [X8 + 0x38]
	0x03AC61D0 CBZ X9, 0x3ACA6A8
	0x03AC61D4 LDR W10, [X23]
	0x03AC61D8 LDR W11, [X9 + 0x18]
	0x03AC61DC CMP W10, W11
	0x03AC61E0 B.CS 0x3ACA7B4
	0x03AC61E4 SXTW X11, W10
	0x03AC61E8 MADD X9, X11, X21, X9
	0x03AC61EC STRB W31, [X9 + 0x194]
	0x03AC61F0 STR W10, [X19 + 0x4A4]
	0x03AC61F4 LDR X9, [X8 + 0x50]
	0x03AC61F8 CBZ X9, 0x3ACA6A8
	0x03AC61FC LDRSW X10, [X19 + 0x4A8]
	0x03AC6200 LDR W11, [X9 + 0x18]
	0x03AC6204 CMP W10, W11
	0x03AC6208 B.CS 0x3ACA7B4
	0x03AC620C MOVZ W11, 0x5C
	0x03AC6210 MADD X9, X10, X11, X9
	0x03AC6214 LDR W10, [X9 + 0x2C]
	0x03AC6218 ADD W10, W10, 0x1
	0x03AC621C STR W10, [X9 + 0x2C]
	0x03AC6220 LDR W9, [X8 + 0x20]
	0x03AC6224 ADD W9, W9, 0x1
	0x03AC6228 STR W9, [X8 + 0x20]
	0x03AC622C B 0x3AC6308
	0x03AC6230 LDR X8, [X22]
	0x03AC6234 CBZ X8, 0x3ACA6A8
	0x03AC6238 LDR X8, [X8 + 0x38]
	0x03AC623C CBZ X8, 0x3ACA6A8
	0x03AC6240 LDRSW X9, [X23]
	0x03AC6244 LDR W10, [X8 + 0x18]
	0x03AC6248 CMP W9, W10
	0x03AC624C B.CS 0x3ACA7B4
	0x03AC6250 MADD X8, X9, X21, X8
	0x03AC6254 STRB W31, [X8 + 0x194]
	0x03AC6258 B 0x3AC6308
	0x03AC625C LDRB W8, [X19 + 0x1D4]
	0x03AC6260 MOVZ W9, 0x144
	0x03AC6264 MOVZ W10, 0x4EC
	0x03AC6268 CMP W8, 0x0
	0x03AC626C LDR W8, [X19 + 0x644]
	0x03AC6270 CSEL X9, X10, X9, EQ
	0x03AC6274 LDR W1, [X19, X9, LSL]
	0x03AC6278 CMP W8, 0x1
	0x03AC627C B.EQ 0x3AC62A0
	0x03AC6280 CBNZ W8, 0x3AC62B4
	0x03AC6284 LDR X8, [X19]
	0x03AC6288 LDR V0, [X31 + 0x150]
	0x03AC628C MOV X0, X19
	0x03AC6290 LDR X9, [X8 + 0x8B8]
	0x03AC6294 LDR X2, [X8 + 0x8C0]
	0x03AC6298 BLR X9
	0x03AC629C B 0x3AC62B4
	0x03AC62A0 LDR X8, [X19]
	0x03AC62A4 MOV X0, X19
	0x03AC62A8 LDR X9, [X8 + 0x8C8]
	0x03AC62AC LDR X2, [X8 + 0x8D0]
	0x03AC62B0 BLR X9
	0x03AC62B4 LDR W8, [X23]
	0x03AC62B8 LDR W9, [X31 + 0x64]
	0x03AC62BC TBZ X9, 0x0, 0x3AC62C8
	0x03AC62C0 LDR X9, [X31 + 0x80]
	0x03AC62C4 STR W8, [X9 + 0x1F0]
	0x03AC62C8 LDR W10, [X19 + 0x4AC]
	0x03AC62CC LDR X9, [X19 + 0x368]
	0x03AC62D0 STR W8, [X19 + 0x4A4]
	0x03AC62D4 ADD W10, W10, 0x1
	0x03AC62D8 STR W10, [X19 + 0x4AC]
	0x03AC62DC CBZ X9, 0x3ACA6A8
	0x03AC62E0 LDR X8, [X9 + 0x50]
	0x03AC62E4 CBZ X8, 0x3ACA6A8
	0x03AC62E8 LDRSW X9, [X19 + 0x4A8]
	0x03AC62EC LDR W10, [X8 + 0x18]
	0x03AC62F0 CMP W9, W10
	0x03AC62F4 B.CS 0x3ACA7B4
	0x03AC62F8 MOVZ W10, 0x5C
	0x03AC62FC MADD X8, X9, X10, X8
	0x03AC6300 STR W31, [X31 + 0x64]
	0x03AC6304 STP S8, S9, [X8 + 0x60]
	0x03AC6308 LDR W8, [X19 + 0x2E0]
	0x03AC630C CMP W8, 0x1
	0x03AC6310 B.NE 0x3AC6614
	0x03AC6314 LDR W8, [X31 + 0x107C]
	0x03AC6318 CMP W8, 0x2D
	0x03AC631C B.EQ 0x3AC6328
	0x03AC6320 EOR W8, W20, 0x1
	0x03AC6324 CBZ W8, 0x3AC6614
	0x03AC6328 LDR X8, [X19 + 0x658]
	0x03AC632C CBZ X8, 0x3ACA6A8
	0x03AC6330 LDR V8, [X19 + 0x1E8]
	0x03AC6334 ADD X0, X8, 0x50
	0x03AC6338 MOV X1, X31
	0x03AC633C BL 0x3C9BF88
	0x03AC6340 LDR X8, [X19 + 0x658]
	0x03AC6344 CBZ X8, 0x3ACA6A8
	0x03AC6348 MOV W25, W0
	0x03AC634C ADD X0, X8, 0x50
	0x03AC6350 MOV X1, X31
	0x03AC6354 BL 0x3C9BF98
	0x03AC6358 LDRB W9, [X19 + 0x305]
	0x03AC635C LDR V1, [X31 + 0x90]
	0x03AC6360 LDR X8, [X19 + 0x650]
	0x03AC6364 FMOV S2, 1
	0x03AC6368 CMP W9, 0x0
	0x03AC636C FCSEL S9, S1, S2, EQ
	0x03AC6370 CBZ X8, 0x3ACA6A8
	0x03AC6374 LDR X0, [X8 + 0x20]
	0x03AC6378 CBZ X0, 0x3ACA6A8
	0x03AC637C LDR V10, [X19 + 0x404]
	0x03AC6380 LDR V11, [X8 + 0x2C]
	0x03AC6384 SCVTF S1, W25
	0x03AC6388 FDIV S1, S8, S1
	0x03AC638C MOV X1, X31
	0x03AC6390 FMUL S8, S1, S0
	0x03AC6394 BL 0x3C9C4E0
	0x03AC6398 LDR X9, [X31 + 0xB0]
	0x03AC639C FMUL S1, S8, S9
	0x03AC63A0 FMUL S1, S10, S1
	0x03AC63A4 LDR W8, [X31 + 0x107C]
	0x03AC63A8 LDR V10, [X9]
	0x03AC63AC LDR X9, [X31 + 0xA0]
	0x03AC63B0 FMUL S1, S1, S11
	0x03AC63B4 CMP W8, 0xA
	0x03AC63B8 FMUL S8, S1, S0
	0x03AC63BC LDR V9, [X9]
	0x03AC63C0 B.NE 0x3AC64A8
	0x03AC63C4 LDR W8, [X19 + 0x494]
	0x03AC63C8 LDR W9, [X19 + 0x498]
	0x03AC63CC CMP W8, W9
	0x03AC63D0 B.EQ 0x3AC64A8
	0x03AC63D4 LDR X9, [X22]
	0x03AC63D8 CBZ X9, 0x3ACA6A8
	0x03AC63DC LDR X9, [X9 + 0x38]
	0x03AC63E0 CBZ X9, 0x3ACA6A8
	0x03AC63E4 LDR W10, [X9 + 0x18]
	0x03AC63E8 SUB W8, W8, 0x1
	0x03AC63EC CMP W8, W10
	0x03AC63F0 B.CS 0x3ACA7B4
	0x03AC63F4 LDR X10, [X19 + 0x658]
	0x03AC63F8 CBZ X10, 0x3ACA6A8
	0x03AC63FC SMADDL X8, X8, X21, X9
	0x03AC6400 LDR V9, [X8 + 0x60]
	0x03AC6404 ADD X0, X10, 0x50
	0x03AC6408 MOV X1, X31
	0x03AC640C BL 0x3C9BF88
	0x03AC6410 LDR X8, [X19 + 0x658]
	0x03AC6414 CBZ X8, 0x3ACA6A8
	0x03AC6418 MOV W25, W0
	0x03AC641C ADD X0, X8, 0x50
	0x03AC6420 MOV X1, X31
	0x03AC6424 BL 0x3C9BF98
	0x03AC6428 LDRB W9, [X19 + 0x305]
	0x03AC642C MOV V8.16B, V0.16B
	0x03AC6430 LDR V0, [X31 + 0x90]
	0x03AC6434 LDR X8, [X19 + 0x650]
	0x03AC6438 CMP W9, 0x0
	0x03AC643C FMOV S1, 1
	0x03AC6440 FCSEL S10, S0, S1, EQ
	0x03AC6444 CBZ X8, 0x3ACA6A8
	0x03AC6448 LDR X0, [X8 + 0x20]
	0x03AC644C CBZ X0, 0x3ACA6A8
	0x03AC6450 LDR V11, [X19 + 0x404]
	0x03AC6454 LDR V12, [X8 + 0x2C]
	0x03AC6458 MOV X1, X31
	0x03AC645C BL 0x3C9C4E0
	0x03AC6460 LDR X8, [X22]
	0x03AC6464 CBZ X8, 0x3ACA6A8
	0x03AC6468 LDR X8, [X8 + 0x50]
	0x03AC646C CBZ X8, 0x3ACA6A8
	0x03AC6470 LDRSW X9, [X19 + 0x4A8]
	0x03AC6474 LDR W10, [X8 + 0x18]
	0x03AC6478 CMP W9, W10
	0x03AC647C B.CS 0x3ACA7B4
	0x03AC6480 SCVTF S1, W25
	0x03AC6484 MOVZ W10, 0x5C
	0x03AC6488 FDIV S1, S9, S1
	0x03AC648C MADD X8, X9, X10, X8
	0x03AC6490 FMUL S1, S1, S8
	0x03AC6494 FMUL S1, S1, S10
	0x03AC6498 LDP S10, S9, [X8 + 0x60]
	0x03AC649C FMUL S1, S11, S1
	0x03AC64A0 FMUL S1, S1, S12
	0x03AC64A4 FMUL S8, S1, S0
	0x03AC64A8 LDR V12, [X19 + 0x4D8]
	0x03AC64AC FMOV S0, W31
	0x03AC64B0 FMOV S11, W31
	0x03AC64B4 FCMP S12, 0x0
	0x03AC64B8 B.LE 0x3AC64D4
	0x03AC64BC LDRB W8, [X19 + 0x2C4]
	0x03AC64C0 FMOV S11, W31
	0x03AC64C4 CBNZ W8, 0x3AC64D4
	0x03AC64C8 LDR V1, [X19 + 0x4C8]
	0x03AC64CC LDR V2, [X19 + 0x4D0]
	0x03AC64D0 FSUB S11, S1, S2
	0x03AC64D4 LDR V14, [X19 + 0x4B8]
	0x03AC64D8 LDR V15, [X19 + 0x4CC]
	0x03AC64DC LDRB W8, [X19 + 0xF0]
	0x03AC64E0 LDR V13, [X19 + 0x640]
	0x03AC64E4 CBNZ W8, 0x3AC6524
	0x03AC64E8 LDR X8, [X19 + 0x650]
	0x03AC64EC CBZ X8, 0x3ACA6A8
	0x03AC64F0 LDR X0, [X8 + 0x20]
	0x03AC64F4 CBZ X0, 0x3ACA6A8
	0x03AC64F8 ADD X8, X31, 0x1000
	0x03AC64FC ADD X8, X8, 0x80
	0x03AC6500 MOV X1, X31
	0x03AC6504 BL 0x3C9C4A4
	0x03AC6508 LDR V0, [X27 + 0xE]
	0x03AC650C LDR W8, [X31 + 0x1090]
	0x03AC6510 ADD X0, X31, 0xFA0
	0x03AC6514 MOV X1, X31
	0x03AC6518 STR V0, [X27]
	0x03AC651C STR W8, [X31 + 0xFB0]
	0x03AC6520 BL 0x3C9C2EC
	0x03AC6524 LDR V3, [X31 + 0x98]
	0x03AC6528 LDR V2, [X19 + 0x360]
	0x03AC652C FSUB S1, S15, S12
	0x03AC6530 FSUB S1, S14, S1
	0x03AC6534 FSUB S3, S3, S10
	0x03AC6538 FSUB S3, S3, S9
	0x03AC653C FADD S5, S1, S11
	0x03AC6540 FCMP S3, S2
	0x03AC6544 FMOV S1, -1
	0x03AC6548 ADRP X8, 0xFFFFFFFFFD024000
	0x03AC654C FCCMP S2, S1, 0x4, PL
	0x03AC6550 LDR V4, [X8 + 0x190]
	0x03AC6554 FCSEL S1, S3, S2, EQ
	0x03AC6558 LDR V3, [X31 + 0xB8]
	0x03AC655C CMP W26, 0x0
	0x03AC6560 FMOV S2, 1
	0x03AC6564 FCSEL S2, S2, S4, EQ
	0x03AC6568 FCMP S5, S3
	0x03AC656C B.PL 0x3AC6614
	0x03AC6570 LDR V3, [X19 + 0x2D4]
	0x03AC6574 FMOV S5, 1
	0x03AC6578 FABS S4, S13
	0x03AC657C FMUL S1, S2, S1
	0x03AC6580 FSUB S3, S5, S3
	0x03AC6584 FMUL S0, S0, S3
	0x03AC6588 FMUL S0, S8, S0
	0x03AC658C FADD S0, S4, S0
	0x03AC6590 FCMP S0, S1
	0x03AC6594 B.PL 0x3AC6614
	0x03AC6598 ADRP X25, 0x692000
	0x03AC659C LDR X25, [X25 + 0x3E8]
	0x03AC65A0 LDR X0, [X25]
	0x03AC65A4 LDR W8, [X0 + 0xE0]
	0x03AC65A8 CBNZ W8, 0x3AC65B4
	0x03AC65AC BL 0x1C16DFC
	0x03AC65B0 LDR X0, [X25]
	0x03AC65B4 LDR X8, [X0 + 0xB8]
	0x03AC65B8 LDR W2, [X31 + 0x1048]
	0x03AC65BC LDR W3, [X19 + 0x494]
	0x03AC65C0 MOV X0, X19
	0x03AC65C4 ADD X1, X8, 0x788
	0x03AC65C8 MOV X4, X31
	0x03AC65CC BL 0x3B05DB4
	0x03AC65D0 LDR X8, [X25]
	0x03AC65D4 ADRP X9, 0x692000
	0x03AC65D8 ADD X0, X31, 0x1000
	0x03AC65DC ADD X0, X0, 0x80
	0x03AC65E0 LDR X8, [X8 + 0xB8]
	0x03AC65E4 LDR X9, [X9 + 0x390]
	0x03AC65E8 MOVZ W2, 0x378
	0x03AC65EC ADD X1, X8, 0x788
	0x03AC65F0 LDR X25, [X9]
	0x03AC65F4 MOVZ W9, 0x11F0
	0x03AC65F8 ADD X26, X8, X9
	0x03AC65FC BL 0x3EB1AC0
	0x03AC6600 ADD X1, X31, 0x1000
	0x03AC6604 ADD X1, X1, 0x80
	0x03AC6608 MOV X0, X26
	0x03AC660C MOV X2, X25
	0x03AC6610 BL 0x2673B8C
	0x03AC6614 LDR X10, [X22]
	0x03AC6618 CBZ X10, 0x3ACA6A8
	0x03AC661C LDR X9, [X10 + 0x38]
	0x03AC6620 LDR V13, [X31 + 0x140]
	0x03AC6624 CBZ X9, 0x3ACA6A8
	0x03AC6628 LDRSW X11, [X23]
	0x03AC662C LDR W8, [X9 + 0x18]
	0x03AC6630 CMP W11, W8
	0x03AC6634 B.CS 0x3ACA7B4
	0x03AC6638 LDR W8, [X19 + 0x4A8]
	0x03AC663C NOP
	0x03AC6640 MADD X11, X11, X21, X9
	0x03AC6644 STR W8, [X11 + 0x64]
	0x03AC6648 LDR W12, [X19 + 0x4B0]
	0x03AC664C SXTW X9, W8
	0x03AC6650 STR W12, [X11 + 0x68]
	0x03AC6654 TBNZ X20, 0x0, 0x3AC6678
	0x03AC6658 LDR W11, [X31 + 0x107C]
	0x03AC665C CMP W11, 0xD
	0x03AC6660 B.HI 0x3AC66A4
	0x03AC6664 MOVZ W12, 0x1
	0x03AC6668 LSLV W11, W12, W11
	0x03AC666C MOVZ W12, 0x2C00
	0x03AC6670 ANDS W31, W11, W12, 0x0
	0x03AC6674 B.EQ 0x3AC66A4
	0x03AC6678 LDR X10, [X10 + 0x50]
	0x03AC667C CBZ X10, 0x3ACA6A8
	0x03AC6680 LDR W11, [X10 + 0x18]
	0x03AC6684 CMP W8, W11
	0x03AC6688 B.CS 0x3ACA7B4
	0x03AC668C MOVZ W11, 0x5C
	0x03AC6690 MADD X11, X9, X11, X10
	0x03AC6694 LDR W11, [X11 + 0x24]
	0x03AC6698 CMP W11, 0x1
	0x03AC669C B.EQ 0x3AC66AC
	0x03AC66A0 B 0x3AC66C8
	0x03AC66A4 LDR X10, [X10 + 0x50]
	0x03AC66A8 CBZ X10, 0x3ACA6A8
	0x03AC66AC LDR W11, [X10 + 0x18]
	0x03AC66B0 CMP W8, W11
	0x03AC66B4 B.CS 0x3ACA7B4
	0x03AC66B8 LDR W8, [X19 + 0x278]
	0x03AC66BC MOVZ W11, 0x5C
	0x03AC66C0 MADD X9, X9, X11, X10
	0x03AC66C4 STR W8, [X9 + 0x68]
	0x03AC66C8 LDR W8, [X31 + 0x107C]
	0x03AC66CC CMP W8, 0x9
	0x03AC66D0 B.NE 0x3AC6724
	0x03AC66D4 LDR X25, [X31 + 0x160]
	0x03AC66D8 LDR X8, [X25]
	0x03AC66DC CBZ X8, 0x3ACA6A8
	0x03AC66E0 ADD X0, X8, 0x50
	0x03AC66E4 MOV X1, X31
	0x03AC66E8 BL 0x3C9C080
	0x03AC66EC LDR X8, [X25]
	0x03AC66F0 CBZ X8, 0x3ACA6A8
	0x03AC66F4 LDR V1, [X8 + 0x1B9]
	0x03AC66F8 LDR V2, [X19 + 0x640]
	0x03AC66FC UCVTF S1, S1
	0x03AC6700 FMUL S0, S0, S1
	0x03AC6704 FMUL S0, S13, S0
	0x03AC6708 FDIV S1, S2, S0
	0x03AC670C FRINTP S1, S1
	0x03AC6710 FMUL S1, S0, S1
	0x03AC6714 FADD S0, S2, S0
	0x03AC6718 FCMP S1, S2
	0x03AC671C FCSEL S0, S1, S0, GT
	0x03AC6720 B 0x3AC68C4
	0x03AC6724 LDR V0, [X19 + 0x2B0]
	0x03AC6728 FCMP S0, 0x0
	0x03AC672C B.NE 0x3AC67B4
	0x03AC6730 LDRB W9, [X19 + 0xF0]
	0x03AC6734 CBZ W9, 0x3AC6814
	0x03AC6738 LDR X9, [X31 + 0x160]
	0x03AC673C LDR X9, [X9]
	0x03AC6740 CBZ X9, 0x3ACA6A8
	0x03AC6744 LDR V1, [X9 + 0x1AC]
	0x03AC6748 LDR V5, [X31 + 0x13C]
	0x03AC674C LDR V2, [X19 + 0x2D4]
	0x03AC6750 LDR V4, [X31 + 0x120]
	0x03AC6754 LDR V3, [X19 + 0x2AC]
	0x03AC6758 FADD S1, S5, S1
	0x03AC675C FMOV S5, 1
	0x03AC6760 FSUB S2, S5, S2
	0x03AC6764 LDR V5, [X31 + 0xDC]
	0x03AC6768 LDR V0, [X19 + 0x640]
	0x03AC676C FMUL S4, S13, S4
	0x03AC6770 MOVZ W9, 0x200B
	0x03AC6774 FADD S1, S5, S1
	0x03AC6778 LDR V5, [X31 + 0xE0]
	0x03AC677C CMP W8, W9
	0x03AC6780 FMUL S1, S5, S1
	0x03AC6784 FADD S1, S4, S1
	0x03AC6788 FADD S1, S3, S1
	0x03AC678C FMUL S1, S2, S1
	0x03AC6790 FSUB S0, S0, S1
	0x03AC6794 STR S0, [X19 + 0x640]
	0x03AC6798 B.EQ 0x3AC67A0
	0x03AC679C CBZ W29, 0x3AC68C8
	0x03AC67A0 LDR V1, [X19 + 0x2B4]
	0x03AC67A4 LDR V2, [X31 + 0xE0]
	0x03AC67A8 FMUL S1, S2, S1
	0x03AC67AC FSUB S0, S0, S1
	0x03AC67B0 B 0x3AC68C4
	0x03AC67B4 LDR X9, [X31 + 0x160]
	0x03AC67B8 LDR X9, [X9]
	0x03AC67BC CBZ X9, 0x3ACA6A8
	0x03AC67C0 LDR V5, [X31 + 0x8C]
	0x03AC67C4 LDR V2, [X9 + 0x1AC]
	0x03AC67C8 LDR V3, [X19 + 0x2D4]
	0x03AC67CC LDR V4, [X19 + 0x2AC]
	0x03AC67D0 FSUB S0, S0, S5
	0x03AC67D4 LDR V5, [X31 + 0x13C]
	0x03AC67D8 LDR V1, [X19 + 0x640]
	0x03AC67DC MOVZ W9, 0x200B
	0x03AC67E0 CMP W8, W9
	0x03AC67E4 FADD S2, S5, S2
	0x03AC67E8 FMOV S5, 1
	0x03AC67EC FSUB S3, S5, S3
	0x03AC67F0 LDR V5, [X31 + 0xE0]
	0x03AC67F4 FMUL S2, S5, S2
	0x03AC67F8 FADD S0, S0, S2
	0x03AC67FC FADD S0, S4, S0
	0x03AC6800 FMUL S0, S3, S0
	0x03AC6804 FADD S0, S1, S0
	0x03AC6808 STR S0, [X19 + 0x640]
	0x03AC680C B.NE 0x3AC68B0
	0x03AC6810 B 0x3AC68B4
	0x03AC6814 LDRB W8, [X19 + 0x474]
	0x03AC6818 CBZ W8, 0x3AC6830
	0x03AC681C LDR X0, [X31 + 0x78]
	0x03AC6820 MOV X1, X31
	0x03AC6824 BL 0x3C26F34
	0x03AC6828 MOV V8.16B, V0.16B
	0x03AC682C B 0x3AC6834
	0x03AC6830 FMOV S8, 1
	0x03AC6834 LDR V9, [X19 + 0x640]
	0x03AC6838 ADD X0, X31, 0x1000
	0x03AC683C ADD X0, X0, 0x30
	0x03AC6840 MOV X1, X31
	0x03AC6844 BL 0x3C9C2EC
	0x03AC6848 LDR X8, [X19 + 0x100]
	0x03AC684C CBZ X8, 0x3ACA6A8
	0x03AC6850 LDR V4, [X31 + 0x120]
	0x03AC6854 FMUL S0, S8, S0
	0x03AC6858 LDR V1, [X8 + 0x1AC]
	0x03AC685C LDR V2, [X19 + 0x2AC]
	0x03AC6860 FADD S0, S4, S0
	0x03AC6864 LDR V4, [X31 + 0x13C]
	0x03AC6868 LDR V3, [X19 + 0x2D4]
	0x03AC686C FMUL S0, S13, S0
	0x03AC6870 MOVZ W9, 0x200B
	0x03AC6874 FADD S1, S4, S1
	0x03AC6878 LDR V4, [X31 + 0xDC]
	0x03AC687C FADD S1, S4, S1
	0x03AC6880 LDR V4, [X31 + 0xE0]
	0x03AC6884 FMUL S1, S4, S1
	0x03AC6888 FADD S0, S0, S1
	0x03AC688C FMOV S1, 1
	0x03AC6890 FADD S0, S2, S0
	0x03AC6894 FSUB S1, S1, S3
	0x03AC6898 FMUL S0, S1, S0
	0x03AC689C FADD S0, S9, S0
	0x03AC68A0 STR S0, [X19 + 0x640]
	0x03AC68A4 LDR W8, [X31 + 0x107C]
	0x03AC68A8 CMP W8, W9
	0x03AC68AC B.EQ 0x3AC68B4
	0x03AC68B0 CBZ W29, 0x3AC68C8
	0x03AC68B4 LDR V1, [X19 + 0x2B4]
	0x03AC68B8 LDR V2, [X31 + 0xE0]
	0x03AC68BC FMUL S1, S2, S1
	0x03AC68C0 FADD S0, S0, S1
	0x03AC68C4 STR S0, [X19 + 0x640]
	0x03AC68C8 LDR X8, [X22]
	0x03AC68CC CBZ X8, 0x3ACA6A8
	0x03AC68D0 LDR X9, [X8 + 0x38]
	0x03AC68D4 CBZ X9, 0x3ACA6A8
	0x03AC68D8 LDRSW X12, [X23]
	0x03AC68DC LDR X10, [X9 + 0x18]
	0x03AC68E0 CMP W12, W10
	0x03AC68E4 B.CS 0x3ACA7B4
	0x03AC68E8 MADD X11, X12, X21, X9
	0x03AC68EC STR S0, [X11 + 0x144]
	0x03AC68F0 LDR W11, [X31 + 0x107C]
	0x03AC68F4 CMP W11, 0xC
	0x03AC68F8 B.GT 0x3AC6914
	0x03AC68FC SUB W13, W11, 0xA
	0x03AC6900 CMP W13, 0x2
	0x03AC6904 B.CC 0x3AC6968
	0x03AC6908 CMP W11, 0x3
	0x03AC690C B.EQ 0x3AC6968
	0x03AC6910 B 0x3AC694C
	0x03AC6914 MOVN W13, 0x2027
	0x03AC6918 ADD W13, W11, W13
	0x03AC691C CMP W13, 0x2
	0x03AC6920 B.CC 0x3AC6968
	0x03AC6924 CMP W11, 0xD
	0x03AC6928 B.NE 0x3AC694C
	0x03AC692C LDR V0, [X19 + 0x40C]
	0x03AC6930 LDR W13, [X31 + 0x88]
	0x03AC6934 FMOV S1, W31
	0x03AC6938 FADD S0, S0, S1
	0x03AC693C CMP W12, W13
	0x03AC6940 STR S0, [X19 + 0x640]
	0x03AC6944 B.NE 0x3AC6EE8
	0x03AC6948 B 0x3AC6968
	0x03AC694C CMP W11, 0x2D
	0x03AC6950 CSET W13, EQ
	0x03AC6954 AND W13, W20, W13, 0x0
	0x03AC6958 TBNZ X13, 0x0, 0x3AC6968
	0x03AC695C LDR W13, [X31 + 0x88]
	0x03AC6960 CMP W12, W13
	0x03AC6964 B.NE 0x3AC6EE8
	0x03AC6968 LDR V0, [X19 + 0x4D8]
	0x03AC696C FCMP S0, 0x0
	0x03AC6970 B.LE 0x3AC6ADC
	0x03AC6974 ADRP X8, 0x62D000
	0x03AC6978 LDR X8, [X8 + 0x5A8]
	0x03AC697C LDR V8, [X19 + 0x4C8]
	0x03AC6980 LDR V9, [X19 + 0x4D0]
	0x03AC6984 LDR X0, [X8]
	0x03AC6988 LDR W8, [X0 + 0xE0]
	0x03AC698C CBNZ W8, 0x3AC6994
	0x03AC6990 BL 0x1C16DFC
	0x03AC6994 LDR V1, [X31 + 0x5C]
	0x03AC6998 FSUB S8, S8, S9
	0x03AC699C FABS S0, S8
	0x03AC69A0 FCMP S0, S1
	0x03AC69A4 B.LE 0x3AC6ADC
	0x03AC69A8 LDRB W8, [X19 + 0x2C4]
	0x03AC69AC CBNZ W8, 0x3AC6ADC
	0x03AC69B0 LDRB W8, [X19 + 0x33C]
	0x03AC69B4 CBNZ W8, 0x3AC6ADC
	0x03AC69B8 LDR W1, [X19 + 0x498]
	0x03AC69BC LDR W2, [X19 + 0x494]
	0x03AC69C0 MOV X0, X19
	0x03AC69C4 MOV V0.16B, V8.16B
	0x03AC69C8 MOV X3, X31
	0x03AC69CC BL 0x3B06080
	0x03AC69D0 LDR V0, [X19 + 0x4C4]
	0x03AC69D4 LDR V1, [X19 + 0x4D8]
	0x03AC69D8 ADRP X20, 0x692000
	0x03AC69DC FSUB S0, S0, S8
	0x03AC69E0 FADD S1, S8, S1
	0x03AC69E4 STR S0, [X19 + 0x4C4]
	0x03AC69E8 STR S1, [X19 + 0x4D8]
	0x03AC69EC LDR X20, [X20 + 0x3E8]
	0x03AC69F0 LDR X0, [X20]
	0x03AC69F4 LDR W8, [X0 + 0xE0]
	0x03AC69F8 CBNZ W8, 0x3AC6A04
	0x03AC69FC BL 0x1C16DFC
	0x03AC6A00 LDR X0, [X20]
	0x03AC6A04 LDR X8, [X0 + 0xB8]
	0x03AC6A08 LDR W10, [X19 + 0x4A8]
	0x03AC6A0C LDR W9, [X8 + 0x7AC]
	0x03AC6A10 CMP W9, W10
	0x03AC6A14 B.NE 0x3AC6ADC
	0x03AC6A18 LDR W9, [X0 + 0xE0]
	0x03AC6A1C CBNZ W9, 0x3AC6A34
	0x03AC6A20 BL 0x1C16DFC
	0x03AC6A24 ADRP X8, 0x692000
	0x03AC6A28 LDR X8, [X8 + 0x3E8]
	0x03AC6A2C LDR X8, [X8]
	0x03AC6A30 LDR X8, [X8 + 0xB8]
	0x03AC6A34 ADRP X9, 0x692000
	0x03AC6A38 LDR X9, [X9 + 0x388]
	0x03AC6A3C MOVZ W26, 0x11F0
	0x03AC6A40 ADD X0, X8, X26
	0x03AC6A44 ADD X8, X31, 0x1000
	0x03AC6A48 LDR X1, [X9]
	0x03AC6A4C ADD X8, X8, 0x80
	0x03AC6A50 BL 0x2673C94
	0x03AC6A54 ADD X1, X31, 0x1000
	0x03AC6A58 ADD X0, X31, 0x1B0
	0x03AC6A5C ADD X1, X1, 0x80
	0x03AC6A60 MOVZ W2, 0x378
	0x03AC6A64 BL 0x3EB1AC0
	0x03AC6A68 ADRP X8, 0x692000
	0x03AC6A6C LDR X8, [X8 + 0x3E8]
	0x03AC6A70 ADD X1, X31, 0x1B0
	0x03AC6A74 MOVZ W2, 0x378
	0x03AC6A78 LDR X20, [X8]
	0x03AC6A7C LDR X8, [X20 + 0xB8]
	0x03AC6A80 ADD X0, X8, 0x788
	0x03AC6A84 BL 0x3EB1AC0
	0x03AC6A88 LDR X8, [X20 + 0xB8]
	0x03AC6A8C ADRP X9, 0x692000
	0x03AC6A90 ADD X0, X31, 0x1000
	0x03AC6A94 ADD X0, X0, 0x80
	0x03AC6A98 LDR V0, [X8 + 0x7BC]
	0x03AC6A9C LDR V1, [X8 + 0x800]
	0x03AC6AA0 ADD X1, X8, 0x788
	0x03AC6AA4 MOVZ W2, 0x378
	0x03AC6AA8 FADD S0, S8, S0
	0x03AC6AAC FADD S1, S8, S1
	0x03AC6AB0 STR S0, [X8 + 0x7BC]
	0x03AC6AB4 STR S1, [X8 + 0x800]
	0x03AC6AB8 LDR X9, [X9 + 0x390]
	0x03AC6ABC ADD X26, X8, X26
	0x03AC6AC0 LDR X25, [X9]
	0x03AC6AC4 BL 0x3EB1AC0
	0x03AC6AC8 ADD X1, X31, 0x1000
	0x03AC6ACC ADD X1, X1, 0x80
	0x03AC6AD0 MOV X0, X26
	0x03AC6AD4 MOV X2, X25
	0x03AC6AD8 BL 0x2673B8C
	0x03AC6ADC LDR V1, [X19 + 0x4D8]
	0x03AC6AE0 LDR V0, [X19 + 0x4CC]
	0x03AC6AE4 LDR V2, [X19 + 0x4C4]
	0x03AC6AE8 STRB W31, [X19 + 0x33C]
	0x03AC6AEC ADD X8, X31, 0x75
	0x03AC6AF0 FSUB S0, S0, S1
	0x03AC6AF4 FCMP S2, S0
	0x03AC6AF8 FCSEL S3, S2, S0, MI
	0x03AC6AFC STR S3, [X19 + 0x4C4]
	0x03AC6B00 LDRB W8, [X8 + 0xFFF]
	0x03AC6B04 LDR V2, [X19 + 0x4C8]
	0x03AC6B08 CBNZ W8, 0x3AC6B10
	0x03AC6B0C STR S3, [X31 + 0x1078]
	0x03AC6B10 LDRB W8, [X19 + 0x334]
	0x03AC6B14 CBZ W8, 0x3AC6B44
	0x03AC6B18 LDR W8, [X19 + 0x494]
	0x03AC6B1C LDR W9, [X19 + 0x328]
	0x03AC6B20 CMP W8, W9
	0x03AC6B24 B.GE 0x3AC6B38
	0x03AC6B28 LDR W8, [X19 + 0x4A8]
	0x03AC6B2C LDR W9, [X19 + 0x330]
	0x03AC6B30 CMP W8, W9
	0x03AC6B34 B.LT 0x3AC6B44
	0x03AC6B38 MOVZ W8, 0x1
	0x03AC6B3C ADD X9, X31, 0x75
	0x03AC6B40 STRB W8, [X9 + 0xFFF]
	0x03AC6B44 LDR X10, [X22]
	0x03AC6B48 CBZ X10, 0x3ACA6A8
	0x03AC6B4C LDR X8, [X10 + 0x50]
	0x03AC6B50 CBZ X8, 0x3ACA6A8
	0x03AC6B54 LDRSW X9, [X19 + 0x4A8]
	0x03AC6B58 LDR W11, [X8 + 0x18]
	0x03AC6B5C CMP W9, W11
	0x03AC6B60 B.CS 0x3ACA7B4
	0x03AC6B64 LDR W11, [X19 + 0x498]
	0x03AC6B68 MOVZ W12, 0x5C
	0x03AC6B6C MADD X12, X9, X12, X8
	0x03AC6B70 STR W11, [X12 + 0x34]
	0x03AC6B74 LDR W13, [X19 + 0x49C]
	0x03AC6B78 LDR W14, [X19 + 0x498]
	0x03AC6B7C CMP W11, W13
	0x03AC6B80 CSEL W11, W14, W13, GT
	0x03AC6B84 STR W11, [X19 + 0x49C]
	0x03AC6B88 STR W11, [X12 + 0x38]
	0x03AC6B8C LDR W13, [X19 + 0x494]
	0x03AC6B90 STR W13, [X19 + 0x4A0]
	0x03AC6B94 STR W13, [X12 + 0x3C]
	0x03AC6B98 LDR W13, [X19 + 0x4A4]
	0x03AC6B9C LDR W14, [X19 + 0x49C]
	0x03AC6BA0 CMP W13, W11
	0x03AC6BA4 CSEL W13, W14, W13, LT
	0x03AC6BA8 STR W13, [X31 + 0x104C]
	0x03AC6BAC STR W13, [X19 + 0x4A4]
	0x03AC6BB0 LDR W14, [X12 + 0x3C]
	0x03AC6BB4 LDR W15, [X12 + 0x34]
	0x03AC6BB8 STR W13, [X12 + 0x40]
	0x03AC6BBC SUB W13, W14, W15
	0x03AC6BC0 ADD W13, W13, 0x1
	0x03AC6BC4 STR W13, [X12 + 0x24]
	0x03AC6BC8 LDR W13, [X19 + 0x4AC]
	0x03AC6BCC STR W13, [X12 + 0x28]
	0x03AC6BD0 LDR X10, [X10 + 0x38]
	0x03AC6BD4 CBZ X10, 0x3ACA6A8
	0x03AC6BD8 LDR W12, [X10 + 0x18]
	0x03AC6BDC CMP W11, W12
	0x03AC6BE0 B.CS 0x3ACA7B4
	0x03AC6BE4 SMADDL X10, X11, X21, X10
	0x03AC6BE8 LDR W10, [X10 + 0x11C]
	0x03AC6BEC MOVZ W11, 0x5C
	0x03AC6BF0 MADD X8, X9, X11, X8
	0x03AC6BF4 STR S0, [X8 + 0x70]
	0x03AC6BF8 STR W10, [X8 + 0x6C]
	0x03AC6BFC LDR X10, [X22]
	0x03AC6C00 CBZ X10, 0x3ACA6A8
	0x03AC6C04 LDR X8, [X10 + 0x50]
	0x03AC6C08 CBZ X8, 0x3ACA6A8
	0x03AC6C0C LDRSW X9, [X19 + 0x4A8]
	0x03AC6C10 LDR W11, [X8 + 0x18]
	0x03AC6C14 CMP W9, W11
	0x03AC6C18 B.CS 0x3ACA7B4
	0x03AC6C1C LDR X10, [X10 + 0x38]
	0x03AC6C20 CBZ X10, 0x3ACA6A8
	0x03AC6C24 LDRSW X11, [X19 + 0x4A4]
	0x03AC6C28 LDR W12, [X10 + 0x18]
	0x03AC6C2C CMP W11, W12
	0x03AC6C30 B.CS 0x3ACA7B4
	0x03AC6C34 MADD X10, X11, X21, X10
	0x03AC6C38 LDR W10, [X10 + 0x128]
	0x03AC6C3C MOVZ W11, 0x5C
	0x03AC6C40 FSUB S1, S2, S1
	0x03AC6C44 MADD X8, X9, X11, X8
	0x03AC6C48 STR W10, [X8 + 0x74]
	0x03AC6C4C STR S1, [X8 + 0x78]
	0x03AC6C50 LDR X8, [X22]
	0x03AC6C54 CBZ X8, 0x3ACA6A8
	0x03AC6C58 LDR X11, [X8 + 0x50]
	0x03AC6C5C CBZ X11, 0x3ACA6A8
	0x03AC6C60 LDRSW X12, [X19 + 0x4A8]
	0x03AC6C64 LDR W9, [X11 + 0x18]
	0x03AC6C68 CMP W12, W9
	0x03AC6C6C B.CS 0x3ACA7B4
	0x03AC6C70 MOVZ W9, 0x5C
	0x03AC6C74 MADD X9, X12, X9, X11
	0x03AC6C78 LDR V3, [X31 + 0x150]
	0x03AC6C7C LDR V2, [X9 + 0x74]
	0x03AC6C80 LDR W10, [X9 + 0x24]
	0x03AC6C84 FMUL S3, S13, S3
	0x03AC6C88 FSUB S2, S2, S3
	0x03AC6C8C STR S2, [X9 + 0x44]
	0x03AC6C90 LDR V2, [X31 + 0xE8]
	0x03AC6C94 CMP W10, 0x1
	0x03AC6C98 STR S2, [X9 + 0x5C]
	0x03AC6C9C B.NE 0x3AC6CB0
	0x03AC6CA0 LDR W9, [X19 + 0x278]
	0x03AC6CA4 MOVZ W10, 0x5C
	0x03AC6CA8 MADD X10, X12, X10, X11
	0x03AC6CAC STR W9, [X10 + 0x68]
	0x03AC6CB0 LDR X9, [X31 + 0x160]
	0x03AC6CB4 LDR X14, [X9]
	0x03AC6CB8 CBZ X14, 0x3ACA6A8
	0x03AC6CBC LDR X9, [X8 + 0x38]
	0x03AC6CC0 CBZ X9, 0x3ACA6A8
	0x03AC6CC4 LDRSW X13, [X19 + 0x4A4]
	0x03AC6CC8 LDR X10, [X9 + 0x18]
	0x03AC6CCC CMP W13, W10
	0x03AC6CD0 B.CS 0x3ACA7B4
	0x03AC6CD4 LDR V3, [X14 + 0x1AC]
	0x03AC6CD8 NOP
	0x03AC6CDC MADD X14, X13, X21, X9
	0x03AC6CE0 LDR V2, [X19 + 0x2AC]
	0x03AC6CE4 LDRB W14, [X14 + 0x194]
	0x03AC6CE8 LDR V4, [X19 + 0x2D4]
	0x03AC6CEC CBNZ W14, 0x3AC6CFC
	0x03AC6CF0 LDRSW X13, [X19 + 0x4A0]
	0x03AC6CF4 CMP W13, W10
	0x03AC6CF8 B.CS 0x3ACA7B4
	0x03AC6CFC LDR V5, [X31 + 0x13C]
	0x03AC6D00 LDRB W14, [X19 + 0xF0]
	0x03AC6D04 NOP
	0x03AC6D08 MADD X13, X13, X21, X9
	0x03AC6D0C MOVZ W15, 0x5C
	0x03AC6D10 FADD S3, S5, S3
	0x03AC6D14 FMOV S5, 1
	0x03AC6D18 FSUB S4, S5, S4
	0x03AC6D1C LDP S5, S6, [X31 + 0xDC]
	0x03AC6D20 CMP W14, 0x0
	0x03AC6D24 MADD X11, X12, X15, X11
	0x03AC6D28 FADD S3, S5, S3
	0x03AC6D2C FMUL S3, S6, S3
	0x03AC6D30 LDR V5, [X13 + 0x144]
	0x03AC6D34 FSUB S2, S3, S2
	0x03AC6D38 FMUL S2, S4, S2
	0x03AC6D3C FNEG S3, S2
	0x03AC6D40 FCSEL S2, S3, S2, EQ
	0x03AC6D44 FADD S2, S5, S2
	0x03AC6D48 STR S2, [X11 + 0x58]
	0x03AC6D4C LDR V4, [X31 + 0x60]
	0x03AC6D50 LDR V2, [X19 + 0x4D8]
	0x03AC6D54 FSUB S3, S1, S0
	0x03AC6D58 FADD S3, S4, S3
	0x03AC6D5C FMOV S4, W31
	0x03AC6D60 FSUB S2, S4, S2
	0x03AC6D64 STP S2, S0, [X11 + 0x50]
	0x03AC6D68 STP S3, S1, [X11 + 0x48]
	0x03AC6D6C LDR W11, [X31 + 0x107C]
	0x03AC6D70 CMP W11, 0x2C
	0x03AC6D74 B.GT 0x3AC6DA4
	0x03AC6D78 SUB W12, W11, 0xA
	0x03AC6D7C CMP W12, 0x2
	0x03AC6D80 B.CC 0x3AC6DBC
	0x03AC6D84 CMP W11, 0x3
	0x03AC6D88 B.NE 0x3AC6EE8
	0x03AC6D8C LDR X11, [X19 + 0x478]
	0x03AC6D90 CBZ X11, 0x3ACA6A8
	0x03AC6D94 LDR X11, [X11 + 0x18]
	0x03AC6D98 STR W11, [X31 + 0x1048]
	0x03AC6D9C MOVZ W11, 0x3
	0x03AC6DA0 B 0x3AC6EE8
	0x03AC6DA4 MOVN W12, 0x2027
	0x03AC6DA8 ADD W12, W11, W12
	0x03AC6DAC CMP W12, 0x2
	0x03AC6DB0 B.CC 0x3AC6DBC
	0x03AC6DB4 CMP W11, 0x2D
	0x03AC6DB8 B.NE 0x3AC6EE8
	0x03AC6DBC ADRP X29, 0x692000
	0x03AC6DC0 LDR X29, [X29 + 0x3E8]
	0x03AC6DC4 LDR X0, [X29]
	0x03AC6DC8 LDR W8, [X0 + 0xE0]
	0x03AC6DCC CBNZ W8, 0x3AC6DD8
	0x03AC6DD0 BL 0x1C16DFC
	0x03AC6DD4 LDR X0, [X29]
	0x03AC6DD8 LDR X8, [X0 + 0xB8]
	0x03AC6DDC LDR W2, [X31 + 0x1048]
	0x03AC6DE0 LDR W3, [X19 + 0x494]
	0x03AC6DE4 MOV X0, X19
	0x03AC6DE8 ADD X1, X8, 0x410
	0x03AC6DEC MOV X4, X31
	0x03AC6DF0 BL 0x3B05DB4
	0x03AC6DF4 LDR W9, [X19 + 0x4A8]
	0x03AC6DF8 LDR W10, [X19 + 0x494]
	0x03AC6DFC LDR X8, [X19 + 0x368]
	0x03AC6E00 STR W31, [X19 + 0x4AC]
	0x03AC6E04 ADD W1, W9, 0x1
	0x03AC6E08 ADD W9, W10, 0x1
	0x03AC6E0C STR W1, [X19 + 0x4A8]
	0x03AC6E10 STR W9, [X19 + 0x498]
	0x03AC6E14 CBZ X8, 0x3ACA6A8
	0x03AC6E18 LDR X9, [X8 + 0x50]
	0x03AC6E1C CBZ X9, 0x3ACA6A8
	0x03AC6E20 LDR W9, [X9 + 0x18]
	0x03AC6E24 CMP W1, W9
	0x03AC6E28 B.LT 0x3AC6E40
	0x03AC6E2C MOV X0, X19
	0x03AC6E30 MOV X2, X31
	0x03AC6E34 BL 0x3B06238
	0x03AC6E38 LDR X8, [X19 + 0x368]
	0x03AC6E3C CBZ X8, 0x3ACA6A8
	0x03AC6E40 LDR X8, [X8 + 0x38]
	0x03AC6E44 CBZ X8, 0x3ACA6A8
	0x03AC6E48 LDR W3, [X23]
	0x03AC6E4C LDR W9, [X8 + 0x18]
	0x03AC6E50 CMP W3, W9
	0x03AC6E54 B.CS 0x3ACA7B4
	0x03AC6E58 SXTW X9, W3
	0x03AC6E5C ADRP X10, 0xFFFFFFFFFD024000
	0x03AC6E60 LDR V0, [X19 + 0x2C0]
	0x03AC6E64 LDR V1, [X10 + 0x214]
	0x03AC6E68 NOP
	0x03AC6E6C MADD X8, X9, X21, X8
	0x03AC6E70 LDR V8, [X8 + 0x154]
	0x03AC6E74 FCMP S0, S1
	0x03AC6E78 B.NE 0x3AC702C
	0x03AC6E7C LDR W8, [X31 + 0x107C]
	0x03AC6E80 MOVZ W9, 0x2029
	0x03AC6E84 FMOV S0, W31
	0x03AC6E88 CMP W8, W9
	0x03AC6E8C B.EQ 0x3AC6E9C
	0x03AC6E90 CMP W8, 0xA
	0x03AC6E94 FMOV S1, W31
	0x03AC6E98 B.NE 0x3AC6EA0
	0x03AC6E9C LDR V1, [X19 + 0x2CC]
	0x03AC6EA0 LDR V2, [X19 + 0x4CC]
	0x03AC6EA4 LDR V3, [X19 + 0x2BC]
	0x03AC6EA8 LDR V4, [X19 + 0x2B8]
	0x03AC6EAC LDR V5, [X19 + 0x4D8]
	0x03AC6EB0 FSUB S0, S0, S2
	0x03AC6EB4 LDR V2, [X31 + 0x54]
	0x03AC6EB8 FADD S0, S8, S0
	0x03AC6EBC FADD S1, S4, S1
	0x03AC6EC0 MOV W8, W31
	0x03AC6EC4 FADD S2, S2, S3
	0x03AC6EC8 LDR V3, [X31 + 0x58]
	0x03AC6ECC FMUL S2, S3, S2
	0x03AC6ED0 FADD S0, S0, S2
	0x03AC6ED4 LDR V2, [X31 + 0xE0]
	0x03AC6ED8 FMUL S1, S2, S1
	0x03AC6EDC FADD S0, S0, S1
	0x03AC6EE0 FADD S0, S0, S5
	0x03AC6EE4 B 0x3AC706C
	0x03AC6EE8 LDR W3, [X23]
	0x03AC6EEC CMP W3, W10
	0x03AC6EF0 B.CS 0x3ACA7B4
	0x03AC6EF4 SXTW X10, W3
	0x03AC6EF8 MADD X12, X10, X21, X9
	0x03AC6EFC LDRB W12, [X12 + 0x194]
	0x03AC6F00 CBZ W12, 0x3AC6F3C
	0x03AC6F04 LDR X12, [X31 + 0x80]
	0x03AC6F08 NOP
	0x03AC6F0C MADD X9, X10, X21, X9
	0x03AC6F10 ADD X10, X9, 0x11C
	0x03AC6F14 LDR V1, [X10]
	0x03AC6F18 LDR V0, [X12 + 0x230]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03AC6F24 STR D0, [X12 + 0x230]
	0x03AC6F28 LDR V0, [X12 + 0x238]
	0x03AC6F2C LDR V1, [X9 + 0x128]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03AC6F38 STR D0, [X12 + 0x238]
	0x03AC6F3C LDR W9, [X19 + 0x2E0]
	0x03AC6F40 CMP W9, 0x5
	0x03AC6F44 B.NE 0x3AC6F64
	0x03AC6F48 CMP W11, 0xD
	0x03AC6F4C B.HI 0x3AC7308
	0x03AC6F50 MOVZ W9, 0x1
	0x03AC6F54 LSLV W9, W9, W11
	0x03AC6F58 MOVZ W10, 0x2C00
	0x03AC6F5C ANDS W31, W9, W10, 0x0
	0x03AC6F60 B.EQ 0x3AC7308
	0x03AC6F64 LDRB W8, [X19 + 0x2D8]
	0x03AC6F68 CBNZ W8, 0x3AC6F8C
	0x03AC6F6C LDR W8, [X19 + 0x2E0]
	0x03AC6F70 CMP W8, 0x6
	0x03AC6F74 B.HI 0x3AC7514
	0x03AC6F78 MOVZ W9, 0x1
	0x03AC6F7C LSLV W8, W9, W8
	0x03AC6F80 MOVZ W9, 0x4A
	0x03AC6F84 ANDS W31, W8, W9, 0x0
	0x03AC6F88 B.EQ 0x3AC7514
	0x03AC6F8C LDR W8, [X31 + 0x107C]
	0x03AC6F90 CBZ W29, 0x3AC7108
	0x03AC6F94 LDRB W9, [X19 + 0x2DA]
	0x03AC6F98 CMP W9, 0x1
	0x03AC6F9C B.EQ 0x3AC71C0
	0x03AC6FA0 MOVN W9, 0x2006
	0x03AC6FA4 ADD W9, W8, W9
	0x03AC6FA8 CMP W9, 0x28
	0x03AC6FAC B.HI 0x3AC6FC8
	0x03AC6FB0 MOVZ W10, 0x1
	0x03AC6FB4 LSLV X9, X10, X9
	0x03AC6FB8 MOVZ X10, 0x401
	0x03AC6FBC MOVK X10, 0x100
	0x03AC6FC0 ANDS X31, X9, X10, 0x0
	0x03AC6FC4 B.NE 0x3AC7138
	0x03AC6FC8 CMP W8, 0xA0
	0x03AC6FCC B.EQ 0x3AC7138
	0x03AC6FD0 MOVZ W9, 0x2060
	0x03AC6FD4 CMP W8, W9
	0x03AC6FD8 B.EQ 0x3AC7138
	0x03AC6FDC ADRP X29, 0x692000
	0x03AC6FE0 LDR X29, [X29 + 0x3E8]
	0x03AC6FE4 LDR X0, [X29]
	0x03AC6FE8 LDR W8, [X0 + 0xE0]
	0x03AC6FEC CBNZ W8, 0x3AC6FFC
	0x03AC6FF0 BL 0x1C16DFC
	0x03AC6FF4 LDR W3, [X23]
	0x03AC6FF8 LDR X0, [X29]
	0x03AC6FFC LDR X8, [X0 + 0xB8]
	0x03AC7000 LDR W2, [X31 + 0x1048]
	0x03AC7004 MOV X0, X19
	0x03AC7008 MOV X4, X31
	0x03AC700C ADD X1, X8, 0x98
	0x03AC7010 BL 0x3B05DB4
	0x03AC7014 LDR X8, [X29]
	0x03AC7018 MOVN W9, 0x0
	0x03AC701C STR W31, [X31 + 0x68]
	0x03AC7020 LDR X8, [X8 + 0xB8]
	0x03AC7024 STR W9, [X8 + 0xE78]
	0x03AC7028 B 0x3AC751C
	0x03AC702C LDR W8, [X31 + 0x107C]
	0x03AC7030 MOVZ W9, 0x2029
	0x03AC7034 CMP W8, W9
	0x03AC7038 B.EQ 0x3AC7048
	0x03AC703C CMP W8, 0xA
	0x03AC7040 FMOV S1, W31
	0x03AC7044 B.NE 0x3AC704C
	0x03AC7048 LDR V1, [X19 + 0x2CC]
	0x03AC704C LDR V2, [X19 + 0x2B8]
	0x03AC7050 LDR V3, [X19 + 0x4D8]
	0x03AC7054 MOVZ W8, 0x1
	0x03AC7058 FADD S1, S2, S1
	0x03AC705C LDR V2, [X31 + 0xE0]
	0x03AC7060 FMUL S1, S2, S1
	0x03AC7064 FADD S0, S0, S1
	0x03AC7068 FADD S0, S3, S0
	0x03AC706C STR S0, [X19 + 0x4D8]
	0x03AC7070 STRB W8, [X19 + 0x2C4]
	0x03AC7074 LDR X0, [X29]
	0x03AC7078 LDR W8, [X0 + 0xE0]
	0x03AC707C CBNZ W8, 0x3AC708C
	0x03AC7080 BL 0x1C16DFC
	0x03AC7084 LDR X0, [X29]
	0x03AC7088 LDR W3, [X23]
	0x03AC708C LDR X8, [X0 + 0xB8]
	0x03AC7090 LDR V0, [X19 + 0x408]
	0x03AC7094 LDR V1, [X19 + 0x40C]
	0x03AC7098 FMOV S3, W31
	0x03AC709C LDR V2, [X8 + 0x15A8]
	0x03AC70A0 FADD S0, S0, S3
	0x03AC70A4 FADD S0, S0, S1
	0x03AC70A8 STR S8, [X19 + 0x4D0]
	0x03AC70AC UNIMPLEMENTED
	0x03AC70B0 STR D1, [X19 + 0x4C8]
	0x03AC70B4 STR S0, [X19 + 0x640]
	0x03AC70B8 LDR W2, [X31 + 0x1048]
	0x03AC70BC ADD X1, X8, 0x98
	0x03AC70C0 MOV X0, X19
	0x03AC70C4 MOV X4, X31
	0x03AC70C8 BL 0x3B05DB4
	0x03AC70CC LDR X8, [X29]
	0x03AC70D0 LDR W2, [X31 + 0x1048]
	0x03AC70D4 LDR W3, [X19 + 0x494]
	0x03AC70D8 MOV X0, X19
	0x03AC70DC LDR X8, [X8 + 0xB8]
	0x03AC70E0 MOV X4, X31
	0x03AC70E4 ADD X1, X8, 0xB00
	0x03AC70E8 BL 0x3B05DB4
	0x03AC70EC LDR W8, [X19 + 0x494]
	0x03AC70F0 MOVZ W9, 0x1
	0x03AC70F4 ADD W8, W8, 0x1
	0x03AC70F8 STR W8, [X19 + 0x494]
	0x03AC70FC MOVZ W8, 0x1
	0x03AC7100 STP W8, W9, [X31 + 0x64]
	0x03AC7104 B 0x3AC3FF8
	0x03AC7108 CMP W8, 0x2D
	0x03AC710C B.EQ 0x3AC6F94
	0x03AC7110 MOVZ W9, 0x200B
	0x03AC7114 CMP W8, W9
	0x03AC7118 B.EQ 0x3AC6F94
	0x03AC711C CMP W8, 0xAD
	0x03AC7120 B.EQ 0x3AC6F94
	0x03AC7124 LDRB W9, [X19 + 0x2DA]
	0x03AC7128 CBZ W9, 0x3AC7138
	0x03AC712C LDR W9, [X31 + 0x68]
	0x03AC7130 TBNZ X9, 0x0, 0x3AC71CC
	0x03AC7134 B 0x3AC7510
	0x03AC7138 MOVN W9, 0xAC00
	0x03AC713C ADD W9, W8, W9
	0x03AC7140 MOVZ W10, 0x2BFE
	0x03AC7144 CMP W9, W10
	0x03AC7148 B.CC 0x3AC716C
	0x03AC714C MOVN W9, 0x1100
	0x03AC7150 ADD W9, W8, W9
	0x03AC7154 CMP W9, 0xFE
	0x03AC7158 B.CC 0x3AC716C
	0x03AC715C MOVN W9, 0xA960
	0x03AC7160 ADD W9, W8, W9
	0x03AC7164 CMP W9, 0x1D
	0x03AC7168 B.HI 0x3AC717C
	0x03AC716C MOV X0, X31
	0x03AC7170 BL 0x3B14228
	0x03AC7174 TBZ X0, 0x0, 0x3AC71E4
	0x03AC7178 LDR W8, [X31 + 0x107C]
	0x03AC717C MOVN W9, 0xFF00
	0x03AC7180 ADD W9, W8, W9
	0x03AC7184 CMP W9, 0xEE
	0x03AC7188 B.CC 0x3AC71E4
	0x03AC718C MOVN W9, 0xFE30
	0x03AC7190 ADD W9, W8, W9
	0x03AC7194 CMP W9, 0x1E
	0x03AC7198 B.CC 0x3AC71E4
	0x03AC719C MOVN W9, 0x2E80
	0x03AC71A0 ADD W9, W8, W9
	0x03AC71A4 MOVZ W10, 0x717E
	0x03AC71A8 CMP W9, W10
	0x03AC71AC B.CC 0x3AC71E4
	0x03AC71B0 MOVN W9, 0xF900
	0x03AC71B4 ADD W9, W8, W9
	0x03AC71B8 CMP W9, 0x1FD
	0x03AC71BC B.LS 0x3AC71E4
	0x03AC71C0 LDR W9, [X31 + 0x68]
	0x03AC71C4 TBZ X9, 0x0, 0x3AC7510
	0x03AC71C8 CBNZ W29, 0x3AC741C
	0x03AC71CC LDR W9, [X31 + 0x74]
	0x03AC71D0 CMP W8, 0xAD
	0x03AC71D4 CSET W8, NE
	0x03AC71D8 ORR W8, W9, W8, 0x0
	0x03AC71DC TBZ X8, 0x0, 0x3AC741C
	0x03AC71E0 B 0x3AC7454
	0x03AC71E4 MOV X0, X31
	0x03AC71E8 BL 0x3B140EC
	0x03AC71EC CBZ X0, 0x3ACA6A8
	0x03AC71F0 LDR X0, [X0 + 0x10]
	0x03AC71F4 CBZ X0, 0x3ACA6A8
	0x03AC71F8 ADRP X8, 0x691000
	0x03AC71FC LDR W1, [X31 + 0x107C]
	0x03AC7200 LDR X8, [X8 + 0x318]
	0x03AC7204 LDR X2, [X8]
	0x03AC7208 BL 0x2A04684
	0x03AC720C LDR W8, [X23]
	0x03AC7210 LDR W9, [X31 + 0x88]
	0x03AC7214 CMP W8, W9
	0x03AC7218 LDR W8, [X31 + 0x4C]
	0x03AC721C CSEL W8, W0, W8, LT
	0x03AC7220 STR W8, [X31 + 0x4C]
	0x03AC7224 B.GE 0x3AC7400
	0x03AC7228 MOV X0, X31
	0x03AC722C BL 0x3B140EC
	0x03AC7230 CBZ X0, 0x3ACA6A8
	0x03AC7234 LDR X8, [X22]
	0x03AC7238 CBZ X8, 0x3ACA6A8
	0x03AC723C LDR X8, [X8 + 0x38]
	0x03AC7240 CBZ X8, 0x3ACA6A8
	0x03AC7244 LDR W9, [X23]
	0x03AC7248 LDR W10, [X8 + 0x18]
	0x03AC724C ADD W9, W9, 0x1
	0x03AC7250 CMP W9, W10
	0x03AC7254 B.CS 0x3ACA7B4
	0x03AC7258 LDR X0, [X0 + 0x18]
	0x03AC725C CBZ X0, 0x3ACA6A8
	0x03AC7260 SMADDL X8, X9, X21, X8
	0x03AC7264 LDRH W1, [X8 + 0x20]
	0x03AC7268 ADRP X8, 0x691000
	0x03AC726C LDR X8, [X8 + 0x318]
	0x03AC7270 LDR X2, [X8]
	0x03AC7274 BL 0x2A04684
	0x03AC7278 LDR W8, [X31 + 0x4C]
	0x03AC727C TBNZ X8, 0x0, 0x3AC7404
	0x03AC7280 TBZ X0, 0x0, 0x3AC7498
	0x03AC7284 LDR W8, [X31 + 0x68]
	0x03AC7288 TBZ X8, 0x0, 0x3AC750C
	0x03AC728C CBZ W29, 0x3AC72C8
	0x03AC7290 ADRP X20, 0x691000
	0x03AC7294 LDR X20, [X20 + 0x3E8]
	0x03AC7298 LDR X0, [X20]
	0x03AC729C LDR W8, [X0 + 0xE0]
	0x03AC72A0 CBNZ W8, 0x3AC72AC
	0x03AC72A4 BL 0x1C16DFC
	0x03AC72A8 LDR X0, [X20]
	0x03AC72AC LDR X8, [X0 + 0xB8]
	0x03AC72B0 LDR W2, [X31 + 0x1048]
	0x03AC72B4 LDR W3, [X19 + 0x494]
	0x03AC72B8 MOV X0, X19
	0x03AC72BC ADD X1, X8, 0xE78
	0x03AC72C0 MOV X4, X31
	0x03AC72C4 BL 0x3B05DB4
	0x03AC72C8 ADRP X29, 0x691000
	0x03AC72CC LDR X29, [X29 + 0x3E8]
	0x03AC72D0 LDR X0, [X29]
	0x03AC72D4 LDR W8, [X0 + 0xE0]
	0x03AC72D8 CBNZ W8, 0x3AC72E4
	0x03AC72DC BL 0x1C16DFC
	0x03AC72E0 LDR X0, [X29]
	0x03AC72E4 LDR X8, [X0 + 0xB8]
	0x03AC72E8 LDR W2, [X31 + 0x1048]
	0x03AC72EC LDR W3, [X19 + 0x494]
	0x03AC72F0 MOV X0, X19
	0x03AC72F4 ADD X1, X8, 0x98
	0x03AC72F8 MOV X4, X31
	0x03AC72FC BL 0x3B05DB4
	0x03AC7300 STR W31, [X31 + 0x4C]
	0x03AC7304 B 0x3AC748C
	0x03AC7308 MOV X25, X8
	0x03AC730C LDR X9, [X25 + 0x58]!
	0x03AC7310 CBZ X9, 0x3ACA6A8
	0x03AC7314 LDR W10, [X19 + 0x4B0]
	0x03AC7318 LDR W9, [X9 + 0x18]
	0x03AC731C ADD W26, W10, 0x1
	0x03AC7320 CMP W26, W9
	0x03AC7324 B.LE 0x3AC7364
	0x03AC7328 ADRP X8, 0x691000
	0x03AC732C LDR X8, [X8 + 0x368]
	0x03AC7330 LDR X0, [X8]
	0x03AC7334 LDR W8, [X0 + 0xE0]
	0x03AC7338 CBNZ W8, 0x3AC7340
	0x03AC733C BL 0x1C16DFC
	0x03AC7340 ADRP X8, 0x691000
	0x03AC7344 LDR X8, [X8 + 0x358]
	0x03AC7348 MOVZ W2, 0x1
	0x03AC734C MOV X0, X25
	0x03AC7350 MOV W1, W26
	0x03AC7354 LDR X3, [X8]
	0x03AC7358 BL 0x22993B0
	0x03AC735C LDR X8, [X22]
	0x03AC7360 CBZ X8, 0x3ACA6A8
	0x03AC7364 LDR X9, [X8 + 0x58]
	0x03AC7368 CBZ X9, 0x3ACA6A8
	0x03AC736C LDRSW X10, [X19 + 0x4B0]
	0x03AC7370 LDR W11, [X9 + 0x18]
	0x03AC7374 CMP W10, W11
	0x03AC7378 B.CS 0x3ACA7B4
	0x03AC737C LDR V0, [X19 + 0x4B4]
	0x03AC7380 MOVZ W14, 0x14
	0x03AC7384 MADD X12, X10, X14, X9
	0x03AC7388 LDR V1, [X12 + 0x30]
	0x03AC738C STR S0, [X12 + 0x28]
	0x03AC7390 LDR V0, [X19 + 0x4C4]
	0x03AC7394 AND X13, X10, 0x0
	0x03AC7398 FCMP S0, S1
	0x03AC739C FCSEL S0, S0, S1, MI
	0x03AC73A0 STR S0, [X12 + 0x30]
	0x03AC73A4 LDR W3, [X19 + 0x494]
	0x03AC73A8 ORR W12, W3, W13, 0x0
	0x03AC73AC CBZ W12, 0x3AC74D8
	0x03AC73B0 MOVZ W15, 0x14
	0x03AC73B4 SUBS W12, W3, 0x1
	0x03AC73B8 B.LT 0x3AC73E0
	0x03AC73BC LDR X8, [X8 + 0x38]
	0x03AC73C0 CBZ X8, 0x3ACA6A8
	0x03AC73C4 LDR W14, [X8 + 0x18]
	0x03AC73C8 CMP W12, W14
	0x03AC73CC B.CS 0x3ACA7B4
	0x03AC73D0 UMADDL X8, X12, X21, X8
	0x03AC73D4 LDR W8, [X8 + 0x68]
	0x03AC73D8 CMP W10, W8
	0x03AC73DC B.NE 0x3AC74E4
	0x03AC73E0 LDR W8, [X31 + 0x88]
	0x03AC73E4 CMP W3, W8
	0x03AC73E8 B.NE 0x3AC6F64
	0x03AC73EC MADD X8, X10, X15, X9
	0x03AC73F0 LDR W9, [X31 + 0x88]
	0x03AC73F4 MOV W3, W9
	0x03AC73F8 STR W9, [X8 + 0x24]
	0x03AC73FC B 0x3AC6F64
	0x03AC7400 TBZ X0, 0x0, 0x3AC7498
	0x03AC7404 LDR W9, [X31 + 0x68]
	0x03AC7408 CMP W28, W24
	0x03AC740C CSET W8, NE
	0x03AC7410 ORN W8, W8, W9, 0x0
	0x03AC7414 TBNZ X8, 0x0, 0x3AC7514
	0x03AC7418 CBZ W29, 0x3AC7454
	0x03AC741C ADRP X20, 0x691000
	0x03AC7420 LDR X20, [X20 + 0x3E8]
	0x03AC7424 LDR X0, [X20]
	0x03AC7428 LDR W8, [X0 + 0xE0]
	0x03AC742C CBNZ W8, 0x3AC7438
	0x03AC7430 BL 0x1C16DFC
	0x03AC7434 LDR X0, [X20]
	0x03AC7438 LDR X8, [X0 + 0xB8]
	0x03AC743C LDR W2, [X31 + 0x1048]
	0x03AC7440 LDR W3, [X19 + 0x494]
	0x03AC7444 MOV X0, X19
	0x03AC7448 ADD X1, X8, 0xE78
	0x03AC744C MOV X4, X31
	0x03AC7450 BL 0x3B05DB4
	0x03AC7454 ADRP X29, 0x691000
	0x03AC7458 LDR X29, [X29 + 0x3E8]
	0x03AC745C LDR X0, [X29]
	0x03AC7460 LDR W8, [X0 + 0xE0]
	0x03AC7464 CBNZ W8, 0x3AC7470
	0x03AC7468 BL 0x1C16DFC
	0x03AC746C LDR X0, [X29]
	0x03AC7470 LDR X8, [X0 + 0xB8]
	0x03AC7474 LDR W2, [X31 + 0x1048]
	0x03AC7478 LDR W3, [X19 + 0x494]
	0x03AC747C MOV X0, X19
	0x03AC7480 ADD X1, X8, 0x98
	0x03AC7484 MOV X4, X31
	0x03AC7488 BL 0x3B05DB4
	0x03AC748C MOVZ W8, 0x1
	0x03AC7490 STR W8, [X31 + 0x68]
	0x03AC7494 B 0x3AC751C
	0x03AC7498 ADRP X29, 0x691000
	0x03AC749C LDR X29, [X29 + 0x3E8]
	0x03AC74A0 LDR X0, [X29]
	0x03AC74A4 LDR W8, [X0 + 0xE0]
	0x03AC74A8 CBNZ W8, 0x3AC74B4
	0x03AC74AC BL 0x1C16DFC
	0x03AC74B0 LDR X0, [X29]
	0x03AC74B4 LDR X8, [X0 + 0xB8]
	0x03AC74B8 LDR W2, [X31 + 0x1048]
	0x03AC74BC LDR W3, [X19 + 0x494]
	0x03AC74C0 MOV X0, X19
	0x03AC74C4 ADD X1, X8, 0x98
	0x03AC74C8 MOV X4, X31
	0x03AC74CC BL 0x3B05DB4
	0x03AC74D0 STR W31, [X31 + 0x68]
	0x03AC74D4 B 0x3AC751C
	0x03AC74D8 MADD X8, X13, X14, X9
	0x03AC74DC STR W3, [X8 + 0x20]
	0x03AC74E0 B 0x3AC6F64
	0x03AC74E4 SUB W8, W13, 0x1
	0x03AC74E8 CMP W8, W11
	0x03AC74EC B.CS 0x3ACA7B4
	0x03AC74F0 ADD X9, X9, 0x20
	0x03AC74F4 MOVZ W11, 0x14
	0x03AC74F8 MUL X10, X10, X11
	0x03AC74FC SMADDL X8, X8, X11, X9
	0x03AC7500 STR W12, [X8 + 0x4]
	0x03AC7504 STR W3, [X9, X10, LSL]
	0x03AC7508 B 0x3AC6F64
	0x03AC750C STR W31, [X31 + 0x4C]
	0x03AC7510 STR W31, [X31 + 0x68]
	0x03AC7514 ADRP X29, 0x691000
	0x03AC7518 LDR X29, [X29 + 0x3E8]
	0x03AC751C LDR X0, [X29]
	0x03AC7520 LDR W8, [X0 + 0xE0]
	0x03AC7524 CBNZ W8, 0x3AC7530
	0x03AC7528 BL 0x1C16DFC
	0x03AC752C LDR X0, [X29]
	0x03AC7530 LDR X8, [X0 + 0xB8]
	0x03AC7534 LDR W2, [X31 + 0x1048]
	0x03AC7538 LDR W3, [X19 + 0x494]
	0x03AC753C MOV X0, X19
	0x03AC7540 ADD X1, X8, 0xB00
	0x03AC7544 MOV X4, X31
	0x03AC7548 BL 0x3B05DB4
	0x03AC754C LDR W8, [X19 + 0x494]
	0x03AC7550 ADD W8, W8, 0x1
	0x03AC7554 STR W8, [X19 + 0x494]
	0x03AC7558 B 0x3AC3FF8
	0x03AC755C ADRP X29, 0x691000
	0x03AC7560 LDR X29, [X29 + 0x3E8]
	0x03AC7564 LDR X0, [X29]
	0x03AC7568 LDR W8, [X0 + 0xE0]
	0x03AC756C CBNZ W8, 0x3AC7578
	0x03AC7570 BL 0x1C16DFC
	0x03AC7574 LDR X0, [X29]
	0x03AC7578 LDR X8, [X0 + 0xB8]
	0x03AC757C ADD X27, X31, 0xFA0
	0x03AC7580 LDR W9, [X8 + 0x1580]
	0x03AC7584 CBZ W9, 0x3AC7760
	0x03AC7588 LDR W9, [X0 + 0xE0]
	0x03AC758C CBNZ W9, 0x3AC759C
	0x03AC7590 BL 0x1C16DFC
	0x03AC7594 LDR X8, [X29]
	0x03AC7598 LDR X8, [X8 + 0xB8]
	0x03AC759C ADRP X9, 0x691000
	0x03AC75A0 LDR X9, [X9 + 0x388]
	0x03AC75A4 LDR X1, [X9]
	0x03AC75A8 MOVZ W9, 0x11F0
	0x03AC75AC ADD X0, X8, X9
	0x03AC75B0 ADD X8, X31, 0x1000
	0x03AC75B4 ADD X8, X8, 0x80
	0x03AC75B8 BL 0x2673C94
	0x03AC75BC ADD X1, X31, 0x1000
	0x03AC75C0 ADD X0, X31, 0x8A8
	0x03AC75C4 ADD X1, X1, 0x80
	0x03AC75C8 MOVZ W2, 0x378
	0x03AC75CC BL 0x3EB1AC0
	0x03AC75D0 ADD X1, X31, 0x8A8
	0x03AC75D4 MOV X0, X19
	0x03AC75D8 MOV X2, X31
	0x03AC75DC BL 0x3B05AD0
	0x03AC75E0 STR W31, [X31 + 0x74]
	0x03AC75E4 B 0x3AC5C58
	0x03AC75E8 ADRP X29, 0x691000
	0x03AC75EC LDR X29, [X29 + 0x3E8]
	0x03AC75F0 LDR X0, [X29]
	0x03AC75F4 LDR W8, [X0 + 0xE0]
	0x03AC75F8 CBNZ W8, 0x3AC7604
	0x03AC75FC BL 0x1C16DFC
	0x03AC7600 LDR X0, [X29]
	0x03AC7604 LDR X8, [X0 + 0xB8]
	0x03AC7608 MOV X0, X19
	0x03AC760C MOV X2, X31
	0x03AC7610 ADD X1, X8, 0xB00
	0x03AC7614 BL 0x3B05AD0
	0x03AC7618 STR W31, [X31 + 0x74]
	0x03AC761C B 0x3AC5838
	0x03AC7620 MOVZ W9, 0x1
	0x03AC7624 STRB W9, [X19 + 0x33C]
	0x03AC7628 LDR W1, [X31 + 0x1048]
	0x03AC762C LDR V3, [X19 + 0x2FC]
	0x03AC7630 LDP S7, S0, [X31 + 0x54]
	0x03AC7634 LDP S4, S2, [X31 + 0xDC]
	0x03AC7638 LDR V5, [X31 + 0x13C]
	0x03AC763C LDR V6, [X31 + 0xE8]
	0x03AC7640 ADD X2, X31, 0x1000
	0x03AC7644 ADD X3, X31, 0x1000
	0x03AC7648 MOVZ W8, 0x1
	0x03AC764C ADD X2, X2, 0x74
	0x03AC7650 ADD X3, X3, 0x78
	0x03AC7654 MOV X0, X19
	0x03AC7658 MOV V1.16B, V13.16B
	0x03AC765C MOV X4, X31
	0x03AC7660 STR W8, [X31 + 0x68]
	0x03AC7664 BL 0x3B063EC
	0x03AC7668 LDR X8, [X31 + 0x80]
	0x03AC766C MOVI D0, 0x0
	0x03AC7670 STR W31, [X19 + 0x4D0]
	0x03AC7674 STR W31, [X19 + 0x4D8]
	0x03AC7678 STR D0, [X8 + 0x208]
	0x03AC767C LDR W8, [X19 + 0x4B0]
	0x03AC7680 STR W31, [X31 + 0x74]
	0x03AC7684 ADD W8, W8, 0x1
	0x03AC7688 STR W8, [X19 + 0x4B0]
	0x03AC768C MOVZ W8, 0x1
	0x03AC7690 STR W8, [X31 + 0x64]
	0x03AC7694 ADRP X29, 0x691000
	0x03AC7698 LDR X29, [X29 + 0x3E8]
	0x03AC769C ADD X27, X31, 0xFA0
	0x03AC76A0 B 0x3AC3FF8
	0x03AC76A4 ADRP X8, 0x62C000
	0x03AC76A8 LDR X8, [X8 + 0x598]
	0x03AC76AC ADRP X29, 0x691000
	0x03AC76B0 LDR X25, [X19 + 0x2E8]
	0x03AC76B4 LDR X0, [X8]
	0x03AC76B8 LDR W8, [X0 + 0xE0]
	0x03AC76BC LDR X29, [X29 + 0x3E8]
	0x03AC76C0 CBNZ W8, 0x3AC76C8
	0x03AC76C4 BL 0x1C16DFC
	0x03AC76C8 MOV X0, X25
	0x03AC76CC MOV X1, X31
	0x03AC76D0 MOV X2, X31
	0x03AC76D4 BL 0x3C354F8
	0x03AC76D8 ADD X27, X31, 0xFA0
	0x03AC76DC TBZ X0, 0x0, 0x3AC7758
	0x03AC76E0 LDR X8, [X19]
	0x03AC76E4 LDR X25, [X19 + 0x2E8]
	0x03AC76E8 MOV X0, X19
	0x03AC76EC LDR X9, [X8 + 0x548]
	0x03AC76F0 LDR X1, [X8 + 0x550]
	0x03AC76F4 BLR X9
	0x03AC76F8 CBZ X25, 0x3ACA6A8
	0x03AC76FC LDR X8, [X25]
	0x03AC7700 MOV X1, X0
	0x03AC7704 MOV X0, X25
	0x03AC7708 LDR X9, [X8 + 0x558]
	0x03AC770C LDR X2, [X8 + 0x560]
	0x03AC7710 BLR X9
	0x03AC7714 LDR X0, [X19 + 0x2E8]
	0x03AC7718 CBZ X0, 0x3ACA6A8
	0x03AC771C LDR W8, [X19 + 0x400]
	0x03AC7720 MOV X2, X31
	0x03AC7724 STR W8, [X0 + 0x400]
	0x03AC7728 LDR W1, [X19 + 0x494]
	0x03AC772C BL 0x3AF8B48
	0x03AC7730 LDR X0, [X19 + 0x2E8]
	0x03AC7734 CBZ X0, 0x3ACA6A8
	0x03AC7738 LDR X8, [X0]
	0x03AC773C MOV W1, W31
	0x03AC7740 MOV W2, W31
	0x03AC7744 LDR X9, [X8 + 0x7D8]
	0x03AC7748 LDR X3, [X8 + 0x7E0]
	0x03AC774C BLR X9
	0x03AC7750 MOVZ W8, 0x1
	0x03AC7754 STRB W8, [X19 + 0x2F8]
	0x03AC7758 STR W31, [X31 + 0x74]
	0x03AC775C B 0x3AC5D6C
	0x03AC7760 STR W31, [X31 + 0x74]
	0x03AC7764 ADRP X8, 0xFFFFFFFFFD026000
	0x03AC7768 LDR V0, [X8 + 0xB60]
	0x03AC776C MOVN W8, 0x0
	0x03AC7770 STR W8, [X31 + 0x1048]
	0x03AC7774 STR D0, [X31 + 0x1068]
	0x03AC7778 STR X31, [X23]
	0x03AC777C B 0x3AC3FF8
	0x03AC7780 LDRB W8, [X19 + 0x238]
	0x03AC7784 CBZ W8, 0x3AC7844
	0x03AC7788 LDR V2, [X19 + 0x23C]
	0x03AC778C LDR V0, [X19 + 0x240]
	0x03AC7790 ADRP X8, 0xFFFFFFFFFD023000
	0x03AC7794 LDR V1, [X8 + 0xD0]
	0x03AC7798 FSUB S0, S2, S0
	0x03AC779C FCMP S0, S1
	0x03AC77A0 B.LE 0x3AC7844
	0x03AC77A4 LDR V1, [X19 + 0x1E4]
	0x03AC77A8 LDR V0, [X19 + 0x254]
	0x03AC77AC FCMP S1, S0
	0x03AC77B0 B.PL 0x3AC7844
	0x03AC77B4 LDR W8, [X19 + 0x244]
	0x03AC77B8 LDR W9, [X19 + 0x248]
	0x03AC77BC CMP W8, W9
	0x03AC77C0 B.GE 0x3AC7844
	0x03AC77C4 LDR V3, [X19 + 0x2D0]
	0x03AC77C8 LDR V4, [X19 + 0x2D4]
	0x03AC77CC MOVZ W8, 0x42C80000
	0x03AC77D0 FMOV S5, W8
	0x03AC77D4 FDIV S3, S3, S5
	0x03AC77D8 FCMP S4, S3
	0x03AC77DC B.PL 0x3AC77E4
	0x03AC77E0 STR W31, [X19 + 0x2D4]
	0x03AC77E4 ADRP X8, 0xFFFFFFFFFD023000
	0x03AC77E8 LDR V3, [X8 + 0x200]
	0x03AC77EC FSUB S2, S2, S1
	0x03AC77F0 FMOV S4, 0.5
	0x03AC77F4 FMUL S2, S2, S4
	0x03AC77F8 FMAXNM S2, S2, S3
	0x03AC77FC STR S1, [X19 + 0x240]
	0x03AC7800 FMOV S3, 20
	0x03AC7804 FADD S1, S1, S2
	0x03AC7808 FMUL S1, S1, S3
	0x03AC780C ADRP X8, 0xFFFFFFFFFD023000
	0x03AC7810 FADD S1, S1, S4
	0x03AC7814 LDR V2, [X8 + 0x420]
	0x03AC7818 FCVTZS W8, S1
	0x03AC781C SCVTF S4, W8
	0x03AC7820 MOVZ W8, 0x7F800000
	0x03AC7824 FDIV S3, S4, S3
	0x03AC7828 FMOV S4, W8
	0x03AC782C FCMP S1, S4
	0x03AC7830 FCSEL S1, S2, S3, EQ
	0x03AC7834 FCMP S1, S0
	0x03AC7838 FCSEL S0, S1, S0, MI
	0x03AC783C STR S0, [X19 + 0x1E4]
	0x03AC7840 B 0x3AC3650
	0x03AC7844 LDR W8, [X19 + 0x244]
	0x03AC7848 LDR W9, [X19 + 0x248]
	0x03AC784C LDR W24, [X31 + 0x50]
	0x03AC7850 MOVZ W10, 0x1
	0x03AC7854 STRB W10, [X19 + 0x24C]
	0x03AC7858 CMP W8, W9
	0x03AC785C B.LT 0x3AC78D4
	0x03AC7860 LDR X0, [X31 + 0x38]
	0x03AC7864 MOV X1, X31
	0x03AC7868 BL 0x337B6E0
	0x03AC786C MOV X21, X0
	0x03AC7870 LDR X0, [X31 + 0x40]
	0x03AC7874 MOV X1, X31
	0x03AC7878 BL 0x338FE24
	0x03AC787C ADRP X8, 0x691000
	0x03AC7880 LDR X8, [X8 + 0x420]
	0x03AC7884 ADRP X9, 0x691000
	0x03AC7888 LDR X9, [X9 + 0x408]
	0x03AC788C MOV X3, X0
	0x03AC7890 LDR X8, [X8]
	0x03AC7894 MOV X1, X21
	0x03AC7898 LDR X2, [X9]
	0x03AC789C MOV X4, X31
	0x03AC78A0 MOV X0, X8
	0x03AC78A4 BL 0x32277C4
	0x03AC78A8 ADRP X8, 0x62C000
	0x03AC78AC LDR X8, [X8 + 0xA28]
	0x03AC78B0 MOV X21, X0
	0x03AC78B4 LDR X8, [X8]
	0x03AC78B8 LDR W9, [X8 + 0xE0]
	0x03AC78BC CBNZ W9, 0x3AC78C8
	0x03AC78C0 MOV X0, X8
	0x03AC78C4 BL 0x1C16DFC
	0x03AC78C8 MOV X0, X21
	0x03AC78CC MOV X1, X31
	0x03AC78D0 BL 0x3C06048
	0x03AC78D4 LDR W8, [X23]
	0x03AC78D8 CBZ W8, 0x3AC78F0
	0x03AC78DC CMP W8, 0x1
	0x03AC78E0 B.NE 0x3AC792C
	0x03AC78E4 LDR W8, [X31 + 0x107C]
	0x03AC78E8 CMP W8, 0x3
	0x03AC78EC B.NE 0x3AC792C
	0x03AC78F0 LDR X8, [X19]
	0x03AC78F4 MOV X0, X19
	0x03AC78F8 LDR X9, [X8 + 0x948]
	0x03AC78FC LDR X1, [X8 + 0x950]
	0x03AC7900 BLR X9
	0x03AC7904 ADRP X8, 0x691000
	0x03AC7908 LDR X8, [X8 + 0x3F0]
	0x03AC790C LDR X0, [X8]
	0x03AC7910 LDR W8, [X0 + 0xE0]
	0x03AC7914 CBNZ W8, 0x3AC791C
	0x03AC7918 BL 0x1C16DFC
	0x03AC791C MOV X0, X19
	0x03AC7920 MOV X1, X31
	0x03AC7924 BL 0x3ADA254
	0x03AC7928 B 0x3AC3650
	0x03AC792C LDR X0, [X29]
	0x03AC7930 LDR W8, [X0 + 0xE0]
	0x03AC7934 CBNZ W8, 0x3AC7940
	0x03AC7938 BL 0x1C16DFC
	0x03AC793C LDR X0, [X29]
	0x03AC7940 LDR X8, [X0 + 0xB8]
	0x03AC7944 LDR X8, [X8]
	0x03AC7948 CBZ X8, 0x3ACA6A8
	0x03AC794C LDRSW X9, [X19 + 0x688]
	0x03AC7950 LDR W10, [X8 + 0x18]
	0x03AC7954 CMP W9, W10
	0x03AC7958 B.CS 0x3ACA7B4
	0x03AC795C MOVZ W10, 0x38
	0x03AC7960 MADD X8, X9, X10, X8
	0x03AC7964 LDR W8, [X8 + 0x54]
	0x03AC7968 UBFM W8, W8, 0x1E, 0x1D
	0x03AC796C STR W8, [X31 + 0x1064]
	0x03AC7970 LDR X8, [X22]
	0x03AC7974 CBZ X8, 0x3ACA6A8
	0x03AC7978 LDR X20, [X8 + 0x60]
	0x03AC797C CBZ X20, 0x3ACA6A8
	0x03AC7980 ADRP X26, 0x691000
	0x03AC7984 LDR X26, [X26 + 0x348]
	0x03AC7988 LDR X0, [X26]
	0x03AC798C LDR W8, [X0 + 0xE0]
	0x03AC7990 CBNZ W8, 0x3AC7998
	0x03AC7994 BL 0x1C16DFC
	0x03AC7998 LDR W8, [X20 + 0x18]
	0x03AC799C CBZ W8, 0x3ACA7B4
	0x03AC79A0 ADD X0, X20, 0x20
	0x03AC79A4 MOV W1, W31
	0x03AC79A8 MOV X2, X31
	0x03AC79AC BL 0x3B129C0
	0x03AC79B0 ADRP X8, 0x911000
	0x03AC79B4 LDRB W8, [X8 + 0x783]
	0x03AC79B8 CBNZ W8, 0x3AC79D4
	0x03AC79BC ADRP X0, 0x62C000
	0x03AC79C0 LDR X0, [X0 + 0x5A0]
	0x03AC79C4 BL 0x1C16CF4
	0x03AC79C8 MOVZ W8, 0x1
	0x03AC79CC ADRP X9, 0x911000
	0x03AC79D0 STRB W8, [X9 + 0x783]
	0x03AC79D4 ADRP X8, 0x62C000
	0x03AC79D8 LDR X8, [X8 + 0x5A0]
	0x03AC79DC LDR W9, [X19 + 0x270]
	0x03AC79E0 ADRP X20, 0x691000
	0x03AC79E4 LDR X8, [X8]
	0x03AC79E8 CMP W9, 0x400
	0x03AC79EC LDR X8, [X8 + 0xB8]
	0x03AC79F0 LDR V0, [X8]
	0x03AC79F4 STR S0, [X31 + 0xDC]
	0x03AC79F8 LDUR V0, [X8 + 0x4]
	0x03AC79FC LDR X8, [X19 + 0x718]
	0x03AC7A00 STR D0, [X31 + 0xD0]
	0x03AC7A04 LDR X20, [X20 + 0x350]
	0x03AC7A08 B.LE 0x3AC7AB0
	0x03AC7A0C CMP W9, 0x800
	0x03AC7A10 B.EQ 0x3AC7B24
	0x03AC7A14 CMP W9, 0x1000
	0x03AC7A18 B.EQ 0x3AC7B80
	0x03AC7A1C LDR V0, [X31 + 0xDC]
	0x03AC7A20 CMP W9, 0x2000
	0x03AC7A24 STR S0, [X31 + 0xA0]
	0x03AC7A28 LDR V0, [X31 + 0xD0]
	0x03AC7A2C STR D0, [X31 + 0x98]
	0x03AC7A30 B.NE 0x3AC7E20
	0x03AC7A34 CBZ X8, 0x3ACA6A8
	0x03AC7A38 LDR W9, [X8 + 0x18]
	0x03AC7A3C CMP W9, 0x1
	0x03AC7A40 B.EQ 0x3ACA7B4
	0x03AC7A44 CBZ W9, 0x3ACA7B4
	0x03AC7A48 LDUR V2, [X8 + 0x24]
	0x03AC7A4C LDR V3, [X8 + 0x30]
	0x03AC7A50 LDR V0, [X8 + 0x20]
	0x03AC7A54 LDR V1, [X8 + 0x2C]
	0x03AC7A58 LDR V4, [X19 + 0x4BC]
	0x03AC7A5C FADD V2.2S, V2.2S, V3.2S
	0x03AC7A60 MOVI V3.2S, 0x3F, 0x18
	0x03AC7A64 LDR V5, [X31 + 0x24]
	0x03AC7A68 LDR V6, [X31 + 0x30]
	0x00000000 INVALID
	0x03AC7A70 LDR V3, [X31 + 0x28]
	0x03AC7A74 FADD S0, S0, S1
	0x03AC7A78 FMOV S1, 0.5
	0x03AC7A7C FSUB S4, S4, S5
	0x03AC7A80 FMOV S5, W31
	0x03AC7A84 FADD S6, S6, S5
	0x03AC7A88 FMUL S0, S0, S1
	0x03AC7A8C FSUB S3, S4, S3
	0x03AC7A90 FMUL S1, S3, S1
	0x03AC7A94 FADD S0, S6, S0
	0x03AC7A98 STR S0, [X31 + 0xA0]
	0x03AC7A9C FSUB S0, S5, S1
	0x03AC7AA0 MOVI D1, 0x0
	0x03AC7AA4 MOV V1.S[0], V0.S[0]
	0x03AC7AA8 FADD V0.2S, V2.2S, V1.2S
	0x03AC7AAC B 0x3AC7E1C
	0x03AC7AB0 CMP W9, 0x100
	0x03AC7AB4 B.EQ 0x3AC7BF8
	0x03AC7AB8 CMP W9, 0x200
	0x03AC7ABC B.EQ 0x3AC7C48
	0x03AC7AC0 LDR V0, [X31 + 0xDC]
	0x03AC7AC4 CMP W9, 0x400
	0x03AC7AC8 STR S0, [X31 + 0xA0]
	0x03AC7ACC LDR V0, [X31 + 0xD0]
	0x03AC7AD0 STR D0, [X31 + 0x98]
	0x03AC7AD4 B.NE 0x3AC7E20
	0x03AC7AD8 CBZ X8, 0x3ACA6A8
	0x03AC7ADC LDR W9, [X8 + 0x18]
	0x03AC7AE0 CBZ W9, 0x3ACA7B4
	0x03AC7AE4 LDR W9, [X19 + 0x2E0]
	0x03AC7AE8 LDR V1, [X8 + 0x20]
	0x03AC7AEC LDUR V0, [X8 + 0x24]
	0x03AC7AF0 CMP W9, 0x5
	0x03AC7AF4 B.NE 0x3AC7D84
	0x03AC7AF8 LDR X8, [X22]
	0x03AC7AFC CBZ X8, 0x3ACA6A8
	0x03AC7B00 LDR X8, [X8 + 0x58]
	0x03AC7B04 CBZ X8, 0x3ACA6A8
	0x03AC7B08 LDR W9, [X8 + 0x18]
	0x03AC7B0C CMP W24, W9
	0x03AC7B10 B.CS 0x3ACA7B4
	0x03AC7B14 MOVZ W9, 0x14
	0x03AC7B18 SMADDL X8, X24, X9, X8
	0x03AC7B1C LDR V2, [X8 + 0x30]
	0x03AC7B20 B 0x3AC7D88
	0x03AC7B24 CBZ X8, 0x3ACA6A8
	0x03AC7B28 LDR W9, [X8 + 0x18]
	0x03AC7B2C CMP W9, 0x1
	0x03AC7B30 B.EQ 0x3ACA7B4
	0x03AC7B34 CBZ W9, 0x3ACA7B4
	0x03AC7B38 LDR V1, [X8 + 0x20]
	0x03AC7B3C LDR V2, [X8 + 0x2C]
	0x03AC7B40 LDUR V0, [X8 + 0x24]
	0x03AC7B44 LDR V3, [X8 + 0x30]
	0x03AC7B48 LDR V16, [X31 + 0x30]
	0x03AC7B4C FMOV S4, 0.5
	0x03AC7B50 FMOV S6, W31
	0x03AC7B54 FADD S1, S1, S2
	0x03AC7B58 MOVI V5.2S, 0x3F, 0x18
	0x03AC7B5C FADD S6, S16, S6
	0x03AC7B60 FADD V0.2S, V0.2S, V3.2S
	0x03AC7B64 FMUL S1, S1, S4
	0x03AC7B68 MOVI D7, 0x0
	0x00000000 INVALID
	0x03AC7B70 FADD S1, S6, S1
	0x03AC7B74 STR S1, [X31 + 0xA0]
	0x03AC7B78 FADD V0.2S, V0.2S, V7.2S
	0x03AC7B7C B 0x3AC7E1C
	0x03AC7B80 CBZ X8, 0x3ACA6A8
	0x03AC7B84 LDR W9, [X8 + 0x18]
	0x03AC7B88 CMP W9, 0x1
	0x03AC7B8C B.EQ 0x3ACA7B4
	0x03AC7B90 CBZ W9, 0x3ACA7B4
	0x03AC7B94 LDUR V0, [X8 + 0x24]
	0x03AC7B98 LDR V3, [X8 + 0x30]
	0x03AC7B9C LDR V1, [X8 + 0x20]
	0x03AC7BA0 LDR V2, [X8 + 0x2C]
	0x03AC7BA4 LDR V5, [X19 + 0x4E8]
	0x03AC7BA8 LDR V6, [X31 + 0x24]
	0x03AC7BAC FADD V0.2S, V0.2S, V3.2S
	0x03AC7BB0 LDR V3, [X19 + 0x4E0]
	0x03AC7BB4 FADD S1, S1, S2
	0x03AC7BB8 MOVI V2.2S, 0x3F, 0x18
	0x03AC7BBC FADD S5, S6, S5
	0x03AC7BC0 LDR V7, [X31 + 0x30]
	0x00000000 INVALID
	0x03AC7BC8 FADD S2, S5, S3
	0x03AC7BCC LDR V3, [X31 + 0x28]
	0x03AC7BD0 FMOV S4, 0.5
	0x03AC7BD4 FMOV S6, W31
	0x03AC7BD8 FADD S7, S7, S6
	0x03AC7BDC FMUL S1, S1, S4
	0x03AC7BE0 FSUB S2, S2, S3
	0x03AC7BE4 FADD S1, S7, S1
	0x03AC7BE8 STR S1, [X31 + 0xA0]
	0x03AC7BEC FMUL S1, S2, S4
	0x03AC7BF0 FSUB S1, S6, S1
	0x03AC7BF4 B 0x3AC7E10
	0x03AC7BF8 CBZ X8, 0x3ACA6A8
	0x03AC7BFC LDR W9, [X8 + 0x18]
	0x03AC7C00 CMP W9, 0x1
	0x03AC7C04 B.LS 0x3ACA7B4
	0x03AC7C08 LDR W9, [X19 + 0x2E0]
	0x03AC7C0C LDR V1, [X8 + 0x2C]
	0x03AC7C10 LDR V0, [X8 + 0x30]
	0x03AC7C14 CMP W9, 0x5
	0x03AC7C18 B.NE 0x3AC7DAC
	0x03AC7C1C LDR X8, [X22]
	0x03AC7C20 CBZ X8, 0x3ACA6A8
	0x03AC7C24 LDR X8, [X8 + 0x58]
	0x03AC7C28 CBZ X8, 0x3ACA6A8
	0x03AC7C2C LDR W9, [X8 + 0x18]
	0x03AC7C30 CMP W24, W9
	0x03AC7C34 B.CS 0x3ACA7B4
	0x03AC7C38 MOVZ W9, 0x14
	0x03AC7C3C SMADDL X8, X24, X9, X8
	0x03AC7C40 LDR V2, [X8 + 0x28]
	0x03AC7C44 B 0x3AC7DB0
	0x03AC7C48 CBZ X8, 0x3ACA6A8
	0x03AC7C4C LDR W9, [X8 + 0x18]
	0x03AC7C50 CMP W9, 0x1
	0x03AC7C54 B.EQ 0x3ACA7B4
	0x03AC7C58 CBZ W9, 0x3ACA7B4
	0x03AC7C5C LDUR V0, [X8 + 0x24]
	0x03AC7C60 LDR V1, [X8 + 0x20]
	0x03AC7C64 LDR V2, [X8 + 0x2C]
	0x03AC7C68 LDR V3, [X8 + 0x30]
	0x03AC7C6C LDR W9, [X19 + 0x2E0]
	0x03AC7C70 FMOV S4, 0.5
	0x03AC7C74 MOVI V5.2S, 0x3F, 0x18
	0x03AC7C78 FADD S1, S1, S2
	0x03AC7C7C FADD V0.2S, V0.2S, V3.2S
	0x03AC7C80 CMP W9, 0x5
	0x03AC7C84 FMUL S1, S1, S4
	0x00000000 INVALID
	0x03AC7C8C B.NE 0x3AC7DD4
	0x03AC7C90 LDR X8, [X22]
	0x03AC7C94 CBZ X8, 0x3ACA6A8
	0x03AC7C98 LDR X8, [X8 + 0x58]
	0x03AC7C9C CBZ X8, 0x3ACA6A8
	0x03AC7CA0 LDR W9, [X8 + 0x18]
	0x03AC7CA4 CMP W24, W9
	0x03AC7CA8 B.CS 0x3ACA7B4
	0x03AC7CAC LDR V3, [X31 + 0x30]
	0x03AC7CB0 MOVZ W9, 0x14
	0x03AC7CB4 FMOV S2, W31
	0x03AC7CB8 SMADDL X8, X24, X9, X8
	0x03AC7CBC FADD S3, S3, S2
	0x03AC7CC0 LDR V4, [X8 + 0x28]
	0x03AC7CC4 FADD S1, S3, S1
	0x03AC7CC8 LDR V3, [X31 + 0x24]
	0x03AC7CCC LDR V5, [X8 + 0x30]
	0x03AC7CD0 STR S1, [X31 + 0xA0]
	0x03AC7CD4 FMOV S1, -0.5
	0x03AC7CD8 FADD S3, S3, S4
	0x03AC7CDC LDR V4, [X31 + 0x28]
	0x03AC7CE0 FADD S3, S3, S5
	0x03AC7CE4 FSUB S3, S3, S4
	0x03AC7CE8 FMUL S1, S3, S1
	0x03AC7CEC FADD S1, S1, S2
	0x03AC7CF0 B 0x3AC7E10
	0x03AC7CF4 LDR V0, [X19 + 0x4A8]
	0x03AC7CF8 LDR V1, [X31 + 0x20]
	0x03AC7CFC SCVTF S0, S0
	0x03AC7D00 FSUB S1, S1, S4
	0x03AC7D04 FDIV S0, S1, S0
	0x03AC7D08 LDR V1, [X31 + 0x58]
	0x03AC7D0C FDIV S0, S0, S1
	0x03AC7D10 FADD S0, S6, S0
	0x03AC7D14 FCMP S0, S5
	0x03AC7D18 FCSEL S0, S0, S5, GT
	0x03AC7D1C STR S0, [X19 + 0x2BC]
	0x03AC7D20 B 0x3AC3650
	0x03AC7D24 LDR V0, [X19 + 0x240]
	0x03AC7D28 ADRP X8, 0xFFFFFFFFFD023000
	0x03AC7D2C LDR V2, [X8 + 0x200]
	0x03AC7D30 FMOV S3, 0.5
	0x03AC7D34 FSUB S0, S4, S0
	0x03AC7D38 FMUL S0, S0, S3
	0x03AC7D3C FMAXNM S0, S0, S2
	0x03AC7D40 FMOV S2, 20
	0x03AC7D44 FSUB S0, S4, S0
	0x03AC7D48 FMUL S0, S0, S2
	0x03AC7D4C ADRP X8, 0xFFFFFFFFFD023000
	0x03AC7D50 FADD S0, S0, S3
	0x03AC7D54 STR S4, [X19 + 0x23C]
	0x03AC7D58 LDR V4, [X8 + 0x420]
	0x03AC7D5C FCVTZS W8, S0
	0x03AC7D60 SCVTF S3, W8
	0x03AC7D64 MOVZ W8, 0x7F800000
	0x03AC7D68 FDIV S2, S3, S2
	0x03AC7D6C FMOV S3, W8
	0x03AC7D70 FCMP S0, S3
	0x03AC7D74 FCSEL S0, S4, S2, EQ
	0x03AC7D78 FCMP S0, S1
	0x03AC7D7C FCSEL S0, S0, S1, GT
	0x03AC7D80 B 0x3AC783C
	0x03AC7D84 LDR V2, [X31 + 0x1078]
	0x03AC7D88 LDR V4, [X31 + 0x30]
	0x03AC7D8C FMOV S3, W31
	0x03AC7D90 FADD S4, S4, S3
	0x03AC7D94 FADD S1, S4, S1
	0x03AC7D98 STR S1, [X31 + 0xA0]
	0x03AC7D9C FSUB S1, S3, S2
	0x03AC7DA0 LDR V2, [X31 + 0x28]
	0x03AC7DA4 FADD S1, S2, S1
	0x03AC7DA8 B 0x3AC7E10
	0x03AC7DAC LDR V2, [X19 + 0x4B8]
	0x03AC7DB0 LDR V4, [X31 + 0x30]
	0x03AC7DB4 FMOV S3, W31
	0x03AC7DB8 FADD S4, S4, S3
	0x03AC7DBC FADD S1, S4, S1
	0x03AC7DC0 STR S1, [X31 + 0xA0]
	0x03AC7DC4 FSUB S1, S3, S2
	0x03AC7DC8 LDR V2, [X31 + 0x24]
	0x03AC7DCC FSUB S1, S1, S2
	0x03AC7DD0 B 0x3AC7E10
	0x03AC7DD4 LDR V6, [X31 + 0x30]
	0x03AC7DD8 FMOV S4, W31
	0x03AC7DDC LDR V2, [X19 + 0x4B8]
	0x03AC7DE0 LDR V3, [X31 + 0x1078]
	0x03AC7DE4 FADD S6, S6, S4
	0x03AC7DE8 FADD S1, S6, S1
	0x03AC7DEC STR S1, [X31 + 0xA0]
	0x03AC7DF0 LDR V1, [X31 + 0x24]
	0x03AC7DF4 FMOV S5, -0.5
	0x03AC7DF8 FADD S1, S1, S2
	0x03AC7DFC LDR V2, [X31 + 0x28]
	0x03AC7E00 FADD S1, S1, S3
	0x03AC7E04 FSUB S1, S1, S2
	0x03AC7E08 FMUL S1, S1, S5
	0x03AC7E0C FADD S1, S1, S4
	0x03AC7E10 MOVI D2, 0x0
	0x03AC7E14 MOV V2.S[0], V1.S[0]
	0x03AC7E18 FADD V0.2S, V0.2S, V2.2S
	0x03AC7E1C STR D0, [X31 + 0x98]
	0x03AC7E20 LDR X0, [X19 + 0x728]
	0x03AC7E24 CBZ X0, 0x3ACA6A8
	0x03AC7E28 MOV X1, X31
	0x03AC7E2C BL 0x3E24E68
	0x03AC7E30 ADRP X8, 0x62C000
	0x03AC7E34 LDR X8, [X8 + 0x598]
	0x03AC7E38 MOV X21, X0
	0x03AC7E3C LDR X8, [X8]
	0x03AC7E40 LDR W9, [X8 + 0xE0]
	0x03AC7E44 CBNZ W9, 0x3AC7E50
	0x03AC7E48 MOV X0, X8
	0x03AC7E4C BL 0x1C16DFC
	0x03AC7E50 MOV X0, X21
	0x03AC7E54 MOV X1, X31
	0x03AC7E58 MOV X2, X31
	0x03AC7E5C BL 0x3C3883C
	0x03AC7E60 MOV W24, W0
	0x03AC7E64 MOV X0, X19
	0x03AC7E68 MOV X1, X31
	0x03AC7E6C BL 0x3AF8D78
	0x03AC7E70 CBZ X0, 0x3ACA6A8
	0x03AC7E74 MOV X1, X31
	0x03AC7E78 BL 0x3C40EA8
	0x03AC7E7C LDR X0, [X19 + 0x728]
	0x03AC7E80 STR S1, [X19 + 0x710]
	0x03AC7E84 CBZ X0, 0x3ACA6A8
	0x03AC7E88 MOV X1, X31
	0x03AC7E8C MOV V8.16B, V1.16B
	0x03AC7E90 BL 0x3E244BC
	0x03AC7E94 LDR X8, [X19 + 0x728]
	0x03AC7E98 STR W0, [X31 + 0x4C]
	0x03AC7E9C CBZ X8, 0x3ACA6A8
	0x03AC7EA0 MOV X0, X8
	0x03AC7EA4 MOV X1, X31
	0x03AC7EA8 BL 0x3E24614
	0x03AC7EAC MOV V9.16B, V0.16B
	0x03AC7EB0 FMOV S0, 1
	0x03AC7EB4 FMOV S1, 1
	0x03AC7EB8 FMOV S2, 1
	0x03AC7EBC FMOV S3, 1
	0x03AC7EC0 MOV X0, X31
	0x03AC7EC4 BL 0x1E43664
	0x03AC7EC8 STR X0, [X31 + 0x68]
	0x03AC7ECC FMOV S0, 1
	0x03AC7ED0 FMOV S1, 1
	0x03AC7ED4 FMOV S2, 1
	0x03AC7ED8 FMOV S3, 1
	0x03AC7EDC MOV X0, X31
	0x03AC7EE0 BL 0x1E43664
	0x03AC7EE4 LDR X8, [X20]
	0x03AC7EE8 STR X0, [X31 + 0x90]
	0x03AC7EEC LDR W9, [X8 + 0xE0]
	0x03AC7EF0 CBNZ W9, 0x3AC7EFC
	0x03AC7EF4 MOV X0, X8
	0x03AC7EF8 BL 0x1C16DFC
	0x03AC7EFC ADRP X21, 0x91B000
	0x03AC7F00 LDRB W8, [X21 + 0x4A6]
	0x03AC7F04 CBNZ W8, 0x3AC7F1C
	0x03AC7F08 ADRP X0, 0x691000
	0x03AC7F0C LDR X0, [X0 + 0x350]
	0x03AC7F10 BL 0x1C16CF4
	0x03AC7F14 MOVZ W8, 0x1
	0x03AC7F18 STRB W8, [X21 + 0x4A6]
	0x03AC7F1C LDR X0, [X20]
	0x03AC7F20 LDR W8, [X0 + 0xE0]
	0x03AC7F24 CBNZ W8, 0x3AC7F30
	0x03AC7F28 BL 0x1C16DFC
	0x03AC7F2C LDR X0, [X20]
	0x03AC7F30 LDR X8, [X0 + 0xB8]
	0x03AC7F34 ADD X0, X31, 0x1000
	0x03AC7F38 ADD X0, X0, 0x50
	0x03AC7F3C MOVN W1, 0xBFFF0000
	0x03AC7F40 LDP S0, S1, [X8]
	0x03AC7F44 LDP S2, S3, [X8 + 0x8]
	0x03AC7F48 MOV X2, X31
	0x03AC7F4C BL 0x3ADBDE8
	0x03AC7F50 LDR X0, [X29]
	0x03AC7F54 LDR W8, [X0 + 0xE0]
	0x03AC7F58 CBNZ W8, 0x3AC7F60
	0x03AC7F5C BL 0x1C16DFC
	0x03AC7F60 LDR X9, [X22]
	0x03AC7F64 CBZ X9, 0x3ACA6A8
	0x03AC7F68 LDR W8, [X23]
	0x03AC7F6C CMP W8, 0x1
	0x03AC7F70 B.LT 0x3ACA0E8
	0x03AC7F74 LDR X21, [X9 + 0x38]
	0x03AC7F78 FABS S0, S8
	0x03AC7F7C ANDS W31, W24, 0x1
	0x03AC7F80 FMOV S1, 1
	0x03AC7F84 FCSEL S1, S1, S0, NE
	0x03AC7F88 STR S1, [X31 + 0x28]
	0x03AC7F8C CBZ X21, 0x3ACA6A8
	0x03AC7F90 LDR X8, [X29]
	0x03AC7F94 LDP S2, S1, [X31 + 0xC0]
	0x03AC7F98 STR S0, [X31 + 0x40]
	0x03AC7F9C FDIV S0, S0, S9
	0x03AC7FA0 LDR X8, [X8 + 0xB8]
	0x03AC7FA4 STR S0, [X31 + 0x24]
	0x03AC7FA8 FMOV S0, W31
	0x03AC7FAC MOV W20, W31
	0x03AC7FB0 LDR V3, [X8 + 0x15A8]
	0x03AC7FB4 MOVZ W28, 0x2E0
	0x03AC7FB8 MOVZ W12, 0x178
	0x03AC7FBC MOVZ W26, 0x5C
	0x03AC7FC0 STP S0, S3, [X31 + 0xE0]
	0x03AC7FC4 FMOV S0, W31
	0x03AC7FC8 STP S2, S0, [X31 + 0x60]
	0x03AC7FCC FMOV S0, W31
	0x03AC7FD0 STR S0, [X31 + 0x34]
	0x03AC7FD4 FMOV S0, W31
	0x03AC7FD8 STP S2, S0, [X31 + 0x88]
	0x03AC7FDC FMOV S0, W31
	0x03AC7FE0 STR S0, [X31 + 0x30]
	0x03AC7FE4 LDR V0, [X31 + 0xAC]
	0x03AC7FE8 MOVZ W10, 0x1
	0x03AC7FEC FMOV S14, W31
	0x03AC7FF0 FMOV S15, W31
	0x03AC7FF4 STP X31, X31, [X31 + 0xF8]
	0x03AC7FF8 STR W31, [X31 + 0xF4]
	0x03AC7FFC STR W31, [X31 + 0xBC]
	0x03AC8000 STR W31, [X31 + 0x20]
	0x03AC8004 STR W31, [X31 + 0x13C]
	0x03AC8008 STR W31, [X31 + 0x54]
	0x03AC800C STR S2, [X31 + 0xB0]
	0x03AC8010 STR S1, [X31 + 0xB8]
	0x03AC8014 STP S1, S0, [X31 + 0x58]
	0x03AC8018 STP S0, S1, [X31 + 0x74]
	0x03AC801C STR X23, [X31 + 0x38]
	0x03AC8020 STR X21, [X31 + 0x140]
	0x03AC8024 LDR W8, [X21 + 0x18]
	0x03AC8028 SUB W25, W10, 0x1
	0x03AC802C CMP W25, W8
	0x03AC8030 B.CS 0x3ACA7B4
	0x03AC8034 LDR X9, [X22]
	0x03AC8038 CBZ X9, 0x3ACA6A8
	0x03AC803C LDR X9, [X9 + 0x50]
	0x03AC8040 CBZ X9, 0x3ACA6A8
	0x03AC8044 SXTW X24, W25
	0x03AC8048 STR W10, [X31 + 0x15C]
	0x03AC804C NOP
	0x03AC8050 MADD X10, X24, X12, X21
	0x03AC8054 LDR W13, [X10 + 0x64]
	0x03AC8058 LDR W11, [X9 + 0x18]
	0x03AC805C CMP W13, W11
	0x03AC8060 B.CS 0x3ACA7B4
	0x03AC8064 LDR X11, [X10 + 0x38]
	0x03AC8068 LDRH W10, [X10 + 0x20]
	0x03AC806C STR X13, [X31 + 0x168]
	0x03AC8070 STR X28, [X31 + 0x108]
	0x03AC8074 STR W10, [X31 + 0x160]
	0x03AC8078 SXTW X10, W13
	0x03AC807C MADD X9, X10, X26, X9
	0x03AC8080 STR X10, [X31 + 0xE8]
	0x03AC8084 LDRSW X10, [X9 + 0x3C]
	0x03AC8088 LDR W29, [X9 + 0x68]
	0x03AC808C LDR W22, [X9 + 0x20]
	0x03AC8090 LDP W27, W21, [X9 + 0x28]
	0x03AC8094 STR X10, [X31 + 0xC8]
	0x03AC8098 LDRSW X10, [X9 + 0x40]
	0x03AC809C LDR V4, [X9 + 0x4C]
	0x03AC80A0 LDP S3, S10, [X9 + 0x54]
	0x03AC80A4 LDP S11, S8, [X9 + 0x5C]
	0x03AC80A8 LDP S9, S13, [X9 + 0x6C]
	0x03AC80AC LDP S12, S5, [X9 + 0x74]
	0x03AC80B0 CMP W29, 0x8
	0x03AC80B4 STP X10, X11, [X31 + 0x148]
	0x03AC80B8 B.LE 0x3AC80E4
	0x03AC80BC CMP W29, 0x10
	0x03AC80C0 B.EQ 0x3AC811C
	0x03AC80C4 CMP W29, 0x20
	0x03AC80C8 B.NE 0x3AC8240
	0x03AC80CC FMOV S2, 0.5
	0x03AC80D0 FMUL S0, S11, S2
	0x03AC80D4 FADD S1, S9, S12
	0x03AC80D8 FADD S0, S8, S0
	0x03AC80DC FMUL S1, S1, S2
	0x03AC80E0 B 0x3AC81C4
	0x03AC80E4 SUB W9, W29, 0x1
	0x03AC80E8 CMP W9, 0x7
	0x03AC80EC B.HI 0x3AC8240
	0x03AC80F0 ADRP X13, 0xFFFFFFFFFD0CF000
	0x03AC80F4 ADD X13, X13, 0xBA0
	0x03AC80F8 ADR X10, 0x10
	0x03AC80FC LDRB W11, [X13, X9, LSL]
	0x03AC8100 ADD X10, X10, X11, 0x2, LSL
	0x03AC8104 BR X10
	0x03AC8108 LDRB W8, [X19 + 0xF0]
	0x03AC810C CBZ W8, 0x3AC81E4
	0x03AC8110 FMOV S0, W31
	0x03AC8114 FSUB S0, S0, S10
	0x03AC8118 B 0x3AC8234
	0x03AC811C LDR W10, [X31 + 0x160]
	0x03AC8120 CMP W10, 0xAC
	0x03AC8124 B.LE 0x3AC814C
	0x03AC8128 CMP W10, 0xAD
	0x03AC812C B.EQ 0x3AC8240
	0x03AC8130 MOVZ W9, 0x200B
	0x03AC8134 CMP W10, W9
	0x03AC8138 B.EQ 0x3AC8240
	0x03AC813C MOVZ W9, 0x2060
	0x03AC8140 CMP W10, W9
	0x03AC8144 B.EQ 0x3AC8240
	0x03AC8148 B 0x3AC815C
	0x03AC814C CMP W10, 0x3
	0x03AC8150 B.EQ 0x3AC8240
	0x03AC8154 CMP W10, 0xA
	0x03AC8158 B.EQ 0x3AC8240
	0x03AC815C LDR X9, [X31 + 0xC8]
	0x03AC8160 STR S5, [X31 + 0x2C]
	0x03AC8164 STR S4, [X31 + 0x110]
	0x03AC8168 STR S3, [X31 + 0x120]
	0x03AC816C CMP W9, W8
	0x03AC8170 B.CS 0x3ACA7B4
	0x03AC8174 ADRP X8, 0x62D000
	0x03AC8178 LDR X8, [X8 + 0x170]
	0x03AC817C LDR X0, [X8]
	0x03AC8180 LDR X8, [X31 + 0x140]
	0x03AC8184 NOP
	0x03AC8188 MADD X8, X9, X12, X8
	0x03AC818C LDR W9, [X0 + 0xE0]
	0x03AC8190 LDRH W28, [X8 + 0x20]
	0x03AC8194 CBNZ W9, 0x3AC819C
	0x03AC8198 BL 0x1C16DFC
	0x03AC819C MOV W0, W28
	0x03AC81A0 MOV X1, X31
	0x03AC81A4 BL 0x331B664
	0x03AC81A8 TBZ X0, 0x0, 0x3AC81F0
	0x03AC81AC MOV W8, W31
	0x03AC81B0 B 0x3AC8200
	0x03AC81B4 FMOV S1, 0.5
	0x03AC81B8 FMUL S0, S11, S1
	0x03AC81BC FMUL S1, S10, S1
	0x03AC81C0 FADD S0, S8, S0
	0x03AC81C4 FSUB S0, S0, S1
	0x03AC81C8 B 0x3AC8234
	0x03AC81CC LDRB W8, [X19 + 0xF0]
	0x03AC81D0 FADD S0, S11, S8
	0x03AC81D4 FSUB S1, S0, S10
	0x03AC81D8 CMP W8, 0x0
	0x03AC81DC FCSEL S0, S1, S0, EQ
	0x03AC81E0 B 0x3AC8234
	0x03AC81E4 FMOV S0, W31
	0x03AC81E8 FADD S0, S8, S0
	0x03AC81EC B 0x3AC8234
	0x03AC81F0 LDR W8, [X19 + 0x4A8]
	0x03AC81F4 LDR X9, [X31 + 0x168]
	0x03AC81F8 CMP W9, W8
	0x03AC81FC CSET W8, LT
	0x03AC8200 LDR X28, [X31 + 0x108]
	0x03AC8204 LDR V3, [X31 + 0x120]
	0x03AC8208 LDR V4, [X31 + 0x110]
	0x03AC820C LDR V5, [X31 + 0x2C]
	0x03AC8210 FCMP S10, S11
	0x03AC8214 MOVZ W12, 0x178
	0x03AC8218 B.GT 0x3AC848C
	0x03AC821C ORR W8, W8, W29, 0x4
	0x03AC8220 CBNZ W8, 0x3AC848C
	0x03AC8224 LDRB W8, [X19 + 0xF0]
	0x03AC8228 FADD S0, S11, S8
	0x03AC822C CMP W8, 0x0
	0x03AC8230 FCSEL S0, S8, S0, EQ
	0x03AC8234 STR S0, [X31 + 0xDC]
	0x03AC8238 MOVI D0, 0x0
	0x03AC823C STR D0, [X31 + 0xD0]
	0x03AC8240 LDR X21, [X31 + 0x140]
	0x03AC8244 LDR X22, [X21 + 0x18]
	0x03AC8248 CMP W25, W22
	0x03AC824C B.CS 0x3ACA7B4
	0x03AC8250 LDR V0, [X31 + 0xDC]
	0x03AC8254 LDR V1, [X31 + 0xA0]
	0x03AC8258 NOP
	0x03AC825C MADD X27, X24, X12, X21
	0x03AC8260 ADRP X29, 0x690000
	0x03AC8264 LDRB W8, [X27 + 0x194]
	0x03AC8268 FADD S2, S1, S0
	0x03AC826C LDR V0, [X31 + 0xD0]
	0x03AC8270 LDR V1, [X31 + 0x98]
	0x03AC8274 LDR X29, [X29 + 0x3E8]
	0x03AC8278 FADD V1.2S, V1.2S, V0.2S
	0x03AC827C STP V2, V1, [X31 + 0x110]
	0x03AC8280 CBZ W8, 0x3AC8300
	0x03AC8284 MADD X8, X24, X12, X21
	0x03AC8288 LDR W28, [X8 + 0x2C]
	0x03AC828C CBNZ W28, 0x3AC88E8
	0x03AC8290 LDR X8, [X31 + 0x168]
	0x03AC8294 LDR V0, [X19 + 0x314]
	0x03AC8298 MOV V14.16B, V5.16B
	0x03AC829C MOV V10.16B, V4.16B
	0x03AC82A0 SCVTF S1, W8
	0x03AC82A4 FMUL S0, S0, S1
	0x03AC82A8 FMOV S1, 1
	0x03AC82AC MOV V8.16B, V3.16B
	0x03AC82B0 BL 0x3EB1BA0
	0x03AC82B4 LDR W8, [X19 + 0x30C]
	0x03AC82B8 CMP W8, 0x3
	0x03AC82BC B.HI 0x3AC830C
	0x03AC82C0 ADRP X11, 0xFFFFFFFFFD0CF000
	0x03AC82C4 ADD X11, X11, 0xBA8
	0x03AC82C8 ADR X9, 0x1C
	0x03AC82CC LDRB W10, [X11, X8, LSL]
	0x03AC82D0 ADD X9, X9, X10, 0x2, LSL
	0x03AC82D4 MOV V11.16B, V0.16B
	0x03AC82D8 MOVZ W11, 0x178
	0x03AC82DC MOV V5.16B, V10.16B
	0x03AC82E0 BR X9
	0x03AC82E4 MADD X8, X24, X11, X21
	0x03AC82E8 MOVZ W9, 0x3F800000
	0x03AC82EC STR W31, [X8 + 0x84]
	0x03AC82F0 STR W31, [X8 + 0xAC]
	0x03AC82F4 STR W9, [X8 + 0xD4]
	0x03AC82F8 FMOV S0, 1
	0x03AC82FC B 0x3AC8628
	0x03AC8300 LDR X22, [X31 + 0x170]
	0x03AC8304 LDR X27, [X31 + 0x150]
	0x03AC8308 B 0x3AC8B48
	0x03AC830C MOVZ W11, 0x178
	0x03AC8310 MOV V5.16B, V10.16B
	0x03AC8314 B 0x3AC8630
	0x03AC8318 LDR W8, [X19 + 0x274]
	0x03AC831C NOP
	0x03AC8320 MADD X9, X24, X11, X21
	0x03AC8324 LDR V0, [X9 + 0x70]
	0x03AC8328 CMP W8, 0x208
	0x03AC832C B.NE 0x3AC8438
	0x03AC8330 LDR X9, [X31 + 0x80]
	0x03AC8334 LDR V3, [X31 + 0xDC]
	0x03AC8338 NOP
	0x03AC833C MADD X8, X24, X11, X21
	0x03AC8340 LDR V1, [X9 + 0x230]
	0x03AC8344 LDR V2, [X9 + 0x238]
	0x03AC8348 FADD S0, S3, S0
	0x03AC834C FSUB S0, S0, S1
	0x03AC8350 FSUB S1, S2, S1
	0x03AC8354 B 0x3AC8380
	0x03AC8358 LDR X9, [X31 + 0x80]
	0x03AC835C NOP
	0x03AC8360 MADD X8, X24, X11, X21
	0x03AC8364 LDR V2, [X8 + 0x70]
	0x03AC8368 LDR V3, [X31 + 0xDC]
	0x03AC836C LDR V0, [X9 + 0x230]
	0x03AC8370 LDR V1, [X9 + 0x238]
	0x03AC8374 FADD S2, S3, S2
	0x03AC8378 FSUB S1, S1, S0
	0x03AC837C FSUB S0, S2, S0
	0x03AC8380 FDIV S0, S0, S1
	0x03AC8384 FADD S0, S11, S0
	0x03AC8388 LDR V2, [X8 + 0x98]
	0x03AC838C STR S0, [X8 + 0x84]
	0x03AC8390 LDR V0, [X9 + 0x230]
	0x03AC8394 LDR V1, [X9 + 0x238]
	0x03AC8398 FADD S2, S3, S2
	0x03AC839C FSUB S2, S2, S0
	0x03AC83A0 FSUB S0, S1, S0
	0x03AC83A4 FDIV S0, S2, S0
	0x03AC83A8 FADD S0, S11, S0
	0x03AC83AC LDR V1, [X8 + 0xC0]
	0x03AC83B0 STR S0, [X8 + 0xAC]
	0x03AC83B4 LDR V0, [X9 + 0x230]
	0x03AC83B8 LDR V2, [X9 + 0x238]
	0x03AC83BC FADD S1, S3, S1
	0x03AC83C0 FSUB S1, S1, S0
	0x03AC83C4 FSUB S0, S2, S0
	0x03AC83C8 FDIV S0, S1, S0
	0x03AC83CC FADD S0, S11, S0
	0x03AC83D0 LDR V2, [X8 + 0xE8]
	0x03AC83D4 STR S0, [X8 + 0xD4]
	0x03AC83D8 LDR V0, [X9 + 0x230]
	0x03AC83DC LDR V1, [X9 + 0x238]
	0x03AC83E0 FADD S2, S3, S2
	0x03AC83E4 FSUB S2, S2, S0
	0x03AC83E8 FSUB S0, S1, S0
	0x03AC83EC FDIV S0, S2, S0
	0x03AC83F0 FADD S0, S11, S0
	0x03AC83F4 B 0x3AC8628
	0x03AC83F8 LDR W8, [X19 + 0x310]
	0x03AC83FC CMP W8, 0x3
	0x03AC8400 B.HI 0x3AC85D0
	0x03AC8404 ADRP X12, 0xFFFFFFFFFD0CF000
	0x03AC8408 ADD X12, X12, 0xBAC
	0x03AC840C ADR X9, 0x10
	0x03AC8410 LDRB W10, [X12, X8, LSL]
	0x03AC8414 ADD X9, X9, X10, 0x2, LSL
	0x03AC8418 BR X9
	0x03AC841C MADD X8, X24, X11, X21
	0x03AC8420 MOVZ W9, 0x3F800000
	0x03AC8424 STR W31, [X8 + 0x88]
	0x03AC8428 STR W9, [X8 + 0xB0]
	0x03AC842C STR W31, [X8 + 0xD8]
	0x03AC8430 STR W9, [X8 + 0x100]
	0x03AC8434 B 0x3AC85D0
	0x03AC8438 MADD X8, X24, X11, X21
	0x03AC843C LDR V2, [X8 + 0x98]
	0x03AC8440 LDR V3, [X8 + 0xC0]
	0x03AC8444 FSUB S0, S0, S9
	0x03AC8448 FSUB S1, S12, S9
	0x03AC844C LDR V4, [X8 + 0xE8]
	0x03AC8450 FDIV S0, S0, S1
	0x03AC8454 FADD S0, S11, S0
	0x03AC8458 STR S0, [X8 + 0x84]
	0x03AC845C FSUB S0, S2, S9
	0x03AC8460 FSUB S2, S3, S9
	0x03AC8464 FSUB S3, S4, S9
	0x03AC8468 FDIV S0, S0, S1
	0x03AC846C FDIV S2, S2, S1
	0x03AC8470 FDIV S1, S3, S1
	0x03AC8474 FADD S0, S11, S0
	0x03AC8478 FADD S2, S11, S2
	0x03AC847C STR S0, [X8 + 0xAC]
	0x03AC8480 STR S2, [X8 + 0xD4]
	0x03AC8484 FADD S0, S11, S1
	0x03AC8488 B 0x3AC8628
	0x03AC848C LDR W8, [X31 + 0x15C]
	0x03AC8490 CMP W8, 0x1
	0x03AC8494 B.EQ 0x3AC84B0
	0x03AC8498 LDR X8, [X31 + 0x168]
	0x03AC849C CMP W8, W20
	0x03AC84A0 B.NE 0x3AC84B0
	0x03AC84A4 LDR W8, [X19 + 0x324]
	0x03AC84A8 CMP W25, W8
	0x03AC84AC B.NE 0x3AC9FB8
	0x03AC84B0 ADRP X8, 0x62D000
	0x03AC84B4 LDR X8, [X8 + 0x170]
	0x03AC84B8 LDR W21, [X31 + 0x160]
	0x03AC84BC FADD S0, S11, S8
	0x03AC84C0 LDR X0, [X8]
	0x03AC84C4 LDRB W8, [X19 + 0xF0]
	0x03AC84C8 LDR W9, [X0 + 0xE0]
	0x03AC84CC CMP W8, 0x0
	0x03AC84D0 FCSEL S0, S8, S0, EQ
	0x03AC84D4 STR S0, [X31 + 0xDC]
	0x03AC84D8 CBNZ W9, 0x3AC84E0
	0x03AC84DC BL 0x1C16DFC
	0x03AC84E0 MOV W0, W21
	0x03AC84E4 MOV X1, X31
	0x03AC84E8 BL 0x331BAF4
	0x03AC84EC LDR V3, [X31 + 0x120]
	0x03AC84F0 LDR V4, [X31 + 0x110]
	0x03AC84F4 LDR V5, [X31 + 0x2C]
	0x03AC84F8 MOVI D0, 0x0
	0x03AC84FC STR W0, [X31 + 0x20]
	0x03AC8500 STR D0, [X31 + 0xD0]
	0x03AC8504 MOVZ W12, 0x178
	0x03AC8508 B 0x3AC8240
	0x03AC850C MADD X8, X24, X11, X21
	0x03AC8510 LDR V0, [X8 + 0x74]
	0x03AC8514 LDR V1, [X8 + 0x9C]
	0x03AC8518 FSUB S2, S14, S13
	0x03AC851C FSUB S0, S0, S13
	0x03AC8520 FSUB S1, S1, S13
	0x03AC8524 FDIV S0, S0, S2
	0x03AC8528 FDIV S1, S1, S2
	0x03AC852C FADD S0, S11, S0
	0x03AC8530 FADD S1, S11, S1
	0x03AC8534 STR S0, [X8 + 0x88]
	0x03AC8538 STR S1, [X8 + 0xB0]
	0x03AC853C STR S0, [X8 + 0xD8]
	0x03AC8540 STR S1, [X8 + 0x100]
	0x03AC8544 B 0x3AC85D0
	0x03AC8548 MADD X8, X24, X11, X21
	0x03AC854C LDR V0, [X19 + 0x4E0]
	0x03AC8550 LDR V1, [X19 + 0x4E8]
	0x03AC8554 LDR V2, [X8 + 0x74]
	0x03AC8558 LDR V3, [X8 + 0x9C]
	0x03AC855C FSUB S1, S1, S0
	0x03AC8560 FSUB S0, S2, S0
	0x03AC8564 FDIV S0, S0, S1
	0x03AC8568 FADD S0, S11, S0
	0x03AC856C STR S0, [X8 + 0x88]
	0x03AC8570 LDR V1, [X19 + 0x4E0]
	0x03AC8574 LDR V2, [X19 + 0x4E8]
	0x03AC8578 STR S0, [X8 + 0xD8]
	0x03AC857C FSUB S0, S3, S1
	0x03AC8580 FSUB S1, S2, S1
	0x03AC8584 FDIV S0, S0, S1
	0x03AC8588 FADD S0, S11, S0
	0x03AC858C STR S0, [X8 + 0xB0]
	0x03AC8590 STR S0, [X8 + 0x100]
	0x03AC8594 B 0x3AC85D0
	0x03AC8598 ADRP X8, 0x62B000
	0x03AC859C LDR X8, [X8 + 0xA28]
	0x03AC85A0 LDR X0, [X8]
	0x03AC85A4 LDR W8, [X0 + 0xE0]
	0x03AC85A8 CBNZ W8, 0x3AC85B0
	0x03AC85AC BL 0x1C16DFC
	0x03AC85B0 ADRP X8, 0x690000
	0x03AC85B4 LDR X8, [X8 + 0x418]
	0x03AC85B8 MOV X1, X31
	0x03AC85BC LDR X0, [X8]
	0x03AC85C0 BL 0x3C06048
	0x03AC85C4 LDR X22, [X21 + 0x18]
	0x03AC85C8 MOVZ W11, 0x178
	0x03AC85CC MOV V5.16B, V10.16B
	0x03AC85D0 CMP W25, W22
	0x03AC85D4 B.CS 0x3ACA7B4
	0x03AC85D8 MADD X8, X24, X11, X21
	0x03AC85DC LDR V0, [X8 + 0x88]
	0x03AC85E0 LDR V1, [X8 + 0xB0]
	0x03AC85E4 LDR V2, [X8 + 0x15C]
	0x03AC85E8 FADD S3, S0, S1
	0x03AC85EC FMUL S0, S0, S2
	0x03AC85F0 FMUL S1, S1, S2
	0x03AC85F4 FMUL S2, S3, S2
	0x03AC85F8 FMOV S3, 1
	0x03AC85FC FSUB S2, S3, S2
	0x03AC8600 FMOV S3, 0.5
	0x03AC8604 FMUL S2, S2, S3
	0x03AC8608 FADD S0, S0, S2
	0x03AC860C FADD S1, S2, S1
	0x03AC8610 FADD S2, S11, S0
	0x03AC8614 FADD S0, S11, S1
	0x03AC8618 STR S2, [X8 + 0x84]
	0x03AC861C STR S2, [X8 + 0xAC]
	0x03AC8620 STR S0, [X8 + 0xD4]
	0x03AC8624 NOP
	0x03AC8628 MADD X8, X24, X11, X21
	0x03AC862C STR S0, [X8 + 0xFC]
	0x03AC8630 LDR W8, [X19 + 0x310]
	0x03AC8634 CMP W8, 0x3
	0x03AC8638 B.HI 0x3AC8748
	0x03AC863C ADRP X12, 0xFFFFFFFFFD0CF000
	0x03AC8640 ADD X12, X12, 0xBB0
	0x03AC8644 ADR X9, 0x10
	0x03AC8648 LDRB W10, [X12, X8, LSL]
	0x03AC864C ADD X9, X9, X10, 0x2, LSL
	0x03AC8650 BR X9
	0x03AC8654 CMP W25, W22
	0x03AC8658 B.CS 0x3ACA7B4
	0x03AC865C MADD X8, X24, X11, X21
	0x03AC8660 MOVZ W9, 0x3F800000
	0x03AC8664 STR W31, [X8 + 0x88]
	0x03AC8668 STR W9, [X8 + 0xB0]
	0x03AC866C STR W9, [X8 + 0xD8]
	0x03AC8670 STR W31, [X8 + 0x100]
	0x03AC8674 B 0x3AC8748
	0x03AC8678 CMP W25, W22
	0x03AC867C B.CS 0x3ACA7B4
	0x03AC8680 MADD X8, X24, X11, X21
	0x03AC8684 LDR V0, [X8 + 0x74]
	0x03AC8688 LDR V1, [X8 + 0x9C]
	0x03AC868C FSUB S2, S5, S8
	0x03AC8690 FSUB S0, S0, S8
	0x03AC8694 FSUB S1, S1, S8
	0x03AC8698 FDIV S0, S0, S2
	0x03AC869C FDIV S1, S1, S2
	0x03AC86A0 STR S0, [X8 + 0x88]
	0x03AC86A4 B 0x3AC86E8
	0x03AC86A8 CMP W25, W22
	0x03AC86AC B.CS 0x3ACA7B4
	0x03AC86B0 MADD X8, X24, X11, X21
	0x03AC86B4 LDR V0, [X19 + 0x4E0]
	0x03AC86B8 LDR V1, [X19 + 0x4E8]
	0x03AC86BC LDR V2, [X8 + 0x74]
	0x03AC86C0 LDR V3, [X8 + 0x9C]
	0x03AC86C4 FSUB S1, S1, S0
	0x03AC86C8 FSUB S0, S2, S0
	0x03AC86CC FDIV S0, S0, S1
	0x03AC86D0 STR S0, [X8 + 0x88]
	0x03AC86D4 LDR V1, [X19 + 0x4E0]
	0x03AC86D8 LDR V2, [X19 + 0x4E8]
	0x03AC86DC FSUB S3, S3, S1
	0x03AC86E0 FSUB S1, S2, S1
	0x03AC86E4 FDIV S1, S3, S1
	0x03AC86E8 STR S1, [X8 + 0xB0]
	0x03AC86EC STR S1, [X8 + 0xD8]
	0x03AC86F0 STR S0, [X8 + 0x100]
	0x03AC86F4 B 0x3AC8748
	0x03AC86F8 CMP W25, W22
	0x03AC86FC B.CS 0x3ACA7B4
	0x03AC8700 MADD X8, X24, X11, X21
	0x03AC8704 LDR V0, [X8 + 0x84]
	0x03AC8708 LDR V1, [X8 + 0xD4]
	0x03AC870C LDR V2, [X8 + 0x15C]
	0x03AC8710 FADD S3, S0, S1
	0x03AC8714 FDIV S0, S0, S2
	0x03AC8718 FDIV S1, S1, S2
	0x03AC871C FDIV S2, S3, S2
	0x03AC8720 FMOV S3, 1
	0x03AC8724 FSUB S2, S3, S2
	0x03AC8728 FMOV S3, 0.5
	0x03AC872C FMUL S2, S2, S3
	0x03AC8730 FADD S0, S0, S2
	0x03AC8734 FADD S1, S2, S1
	0x03AC8738 STR S0, [X8 + 0x88]
	0x03AC873C STR S1, [X8 + 0xB0]
	0x03AC8740 STR S0, [X8 + 0x100]
	0x03AC8744 STR S1, [X8 + 0xD8]
	0x03AC8748 CMP W25, W22
	0x03AC874C B.CS 0x3ACA7B4
	0x03AC8750 MADD X8, X24, X11, X21
	0x03AC8754 LDR V0, [X19 + 0x2D4]
	0x03AC8758 LDR V1, [X8 + 0x160]
	0x03AC875C LDRB W8, [X8 + 0x5C]
	0x03AC8760 FMOV S2, 1
	0x03AC8764 FSUB S0, S2, S0
	0x03AC8768 FMUL S14, S1, S0
	0x03AC876C CBNZ W8, 0x3AC8784
	0x03AC8770 MADD X8, X24, X11, X21
	0x03AC8774 LDRB W8, [X8 + 0x190]
	0x03AC8778 FNEG S0, S14
	0x03AC877C ANDS W31, W8, 0x1
	0x03AC8780 FCSEL S14, S14, S0, EQ
	0x03AC8784 LDR W8, [X31 + 0x4C]
	0x03AC8788 LDR V0, [X31 + 0x40]
	0x03AC878C CMP W8, 0x2
	0x03AC8790 B.EQ 0x3AC87AC
	0x03AC8794 CMP W8, 0x1
	0x03AC8798 B.EQ 0x3AC87A8
	0x03AC879C CBNZ W8, 0x3AC87B0
	0x03AC87A0 LDR V0, [X31 + 0x24]
	0x03AC87A4 B 0x3AC87AC
	0x03AC87A8 LDR V0, [X31 + 0x28]
	0x03AC87AC FMUL S14, S0, S14
	0x03AC87B0 MADD X29, X24, X11, X21
	0x03AC87B4 LDR V0, [X29 + 0x88]!
	0x03AC87B8 MOVZ W8, 0x7F800000
	0x03AC87BC FMOV S1, W8
	0x03AC87C0 MOVZ W8, 0xCF000000
	0x03AC87C4 LDUR V3, [X29 - 0x4]
	0x03AC87C8 FMOV S2, W8
	0x03AC87CC FCVTZS W8, S0
	0x03AC87D0 SCVTF S4, W8
	0x03AC87D4 FCVTZS W8, S3
	0x03AC87D8 FCMP S3, S1
	0x03AC87DC SCVTF S5, W8
	0x03AC87E0 MOV X22, X29
	0x03AC87E4 MOV X23, X21
	0x03AC87E8 MOV X21, X29
	0x03AC87EC FCSEL S9, S2, S5, EQ
	0x03AC87F0 FCMP S0, S1
	0x03AC87F4 LDR V8, [X22 + 0x4C]!
	0x03AC87F8 LDR V10, [X21 + 0x50]!
	0x03AC87FC FCSEL S12, S2, S4, EQ
	0x03AC8800 FSUB S13, S3, S9
	0x03AC8804 FSUB S11, S0, S12
	0x03AC8808 MOV X0, X19
	0x03AC880C MOV V0.16B, V13.16B
	0x03AC8810 MOV V1.16B, V11.16B
	0x03AC8814 MOV X1, X31
	0x03AC8818 MOVZ W26, 0x178
	0x03AC881C BL 0x3B0B51C
	0x03AC8820 STUR S0, [X29 - 0x4]
	0x03AC8824 LDR W8, [X23 + 0x18]
	0x03AC8828 CMP W25, W8
	0x03AC882C B.CS 0x3ACA7B4
	0x03AC8830 FSUB S10, S10, S12
	0x03AC8834 MOV X0, X19
	0x03AC8838 MOV V0.16B, V13.16B
	0x03AC883C MOV V1.16B, V10.16B
	0x03AC8840 MOV X1, X31
	0x03AC8844 STR S14, [X29]
	0x03AC8848 BL 0x3B0B51C
	0x03AC884C MADD X8, X24, X26, X23
	0x03AC8850 STR S0, [X8 + 0xAC]
	0x03AC8854 LDR W8, [X23 + 0x18]
	0x03AC8858 CMP W25, W8
	0x03AC885C MOVZ W8, 0x178
	0x03AC8860 B.CS 0x3ACA7B4
	0x03AC8864 FSUB S13, S8, S9
	0x03AC8868 MADD X8, X24, X8, X23
	0x03AC886C MOV X0, X19
	0x03AC8870 MOV V0.16B, V13.16B
	0x03AC8874 MOV V1.16B, V10.16B
	0x03AC8878 MOV X1, X31
	0x03AC887C STR S14, [X8 + 0xB0]
	0x03AC8880 MOVZ W26, 0x178
	0x03AC8884 BL 0x3B0B51C
	0x03AC8888 STR S0, [X22]
	0x03AC888C LDR W8, [X23 + 0x18]
	0x03AC8890 ADRP X29, 0x690000
	0x03AC8894 LDR X29, [X29 + 0x3E8]
	0x03AC8898 CMP W25, W8
	0x03AC889C B.CS 0x3ACA7B4
	0x03AC88A0 MOV X0, X19
	0x03AC88A4 MOV V0.16B, V13.16B
	0x03AC88A8 MOV V1.16B, V11.16B
	0x03AC88AC MOV X1, X31
	0x03AC88B0 STR S14, [X21]
	0x03AC88B4 BL 0x3B0B51C
	0x03AC88B8 MADD X8, X24, X26, X23
	0x03AC88BC STR S0, [X8 + 0xFC]
	0x03AC88C0 LDR X22, [X23 + 0x18]
	0x03AC88C4 MOVZ W12, 0x178
	0x03AC88C8 CMP W25, W22
	0x03AC88CC B.CS 0x3ACA7B4
	0x03AC88D0 MOV X21, X23
	0x03AC88D4 MADD X8, X24, X12, X23
	0x03AC88D8 LDR X23, [X31 + 0x38]
	0x03AC88DC LDP V2, V1, [X31 + 0x110]
	0x03AC88E0 MOVZ W26, 0x5C
	0x03AC88E4 STR S14, [X8 + 0x100]
	0x03AC88E8 LDR W8, [X19 + 0x328]
	0x03AC88EC CMP W25, W8
	0x03AC88F0 B.GE 0x3AC89C8
	0x03AC88F4 LDR W8, [X19 + 0x32C]
	0x03AC88F8 LDR W9, [X31 + 0xBC]
	0x03AC88FC CMP W9, W8
	0x03AC8900 B.GE 0x3AC89C8
	0x03AC8904 LDR W8, [X19 + 0x330]
	0x03AC8908 LDR X9, [X31 + 0x168]
	0x03AC890C CMP W9, W8
	0x03AC8910 B.GE 0x3AC8920
	0x03AC8914 LDR W8, [X19 + 0x2E0]
	0x03AC8918 CMP W8, 0x5
	0x03AC891C B.NE 0x3AC8AA8
	0x03AC8920 LDR W8, [X19 + 0x330]
	0x03AC8924 LDR X9, [X31 + 0x168]
	0x03AC8928 CMP W9, W8
	0x03AC892C B.GE 0x3AC89C8
	0x03AC8930 LDR W8, [X19 + 0x2E0]
	0x03AC8934 CMP W8, 0x5
	0x03AC8938 B.NE 0x3AC89C8
	0x03AC893C CMP W25, W22
	0x03AC8940 B.CS 0x3ACA7B4
	0x03AC8944 MADD X8, X24, X12, X21
	0x03AC8948 LDR W8, [X8 + 0x68]
	0x03AC894C LDR W9, [X31 + 0x50]
	0x03AC8950 CMP W8, W9
	0x03AC8954 B.NE 0x3AC89C8
	0x03AC8958 MADD X8, X24, X12, X21
	0x03AC895C UNIMPLEMENTED
	0x03AC8960 LDR V2, [X8 + 0x70]
	0x03AC8964 LDR V4, [X8 + 0x98]
	0x03AC8968 LDR V6, [X8 + 0xC0]
	0x03AC896C LDR V16, [X8 + 0xE8]
	0x03AC8970 LDR V3, [X8 + 0x78]
	0x03AC8974 LDR V5, [X8 + 0xA0]
	0x03AC8978 LDR V7, [X8 + 0xC8]
	0x03AC897C FADD V2.2S, V0.2S, V2.2S
	0x03AC8980 FADD V4.2S, V0.2S, V4.2S
	0x03AC8984 FADD V6.2S, V0.2S, V6.2S
	0x03AC8988 FADD V0.2S, V0.2S, V16.2S
	0x03AC898C LDR V16, [X8 + 0xF0]
	0x03AC8990 MOV S1, V1.S[1]
	0x03AC8994 FADD S3, S1, S3
	0x03AC8998 FADD S5, S1, S5
	0x03AC899C FADD S7, S1, S7
	0x03AC89A0 FADD S1, S1, S16
	0x03AC89A4 STR D2, [X8 + 0x70]
	0x03AC89A8 STR S3, [X8 + 0x78]
	0x03AC89AC STR D4, [X8 + 0x98]
	0x03AC89B0 STR S5, [X8 + 0xA0]
	0x03AC89B4 STR D6, [X8 + 0xC0]
	0x03AC89B8 STR S7, [X8 + 0xC8]
	0x03AC89BC STR D0, [X8 + 0xE8]
	0x03AC89C0 STR S1, [X8 + 0xF0]
	0x03AC89C4 B 0x3AC8A84
	0x03AC89C8 CMP W25, W22
	0x03AC89CC B.CS 0x3ACA7B4
	0x03AC89D0 ADRP X8, 0x910000
	0x03AC89D4 LDRB W8, [X8 + 0x783]
	0x03AC89D8 CBNZ W8, 0x3AC89FC
	0x03AC89DC ADRP X0, 0x62B000
	0x03AC89E0 LDR X0, [X0 + 0x5A0]
	0x03AC89E4 BL 0x1C16CF4
	0x03AC89E8 ADRP X8, 0x910000
	0x03AC89EC MOVZ W9, 0x1
	0x03AC89F0 STRB W9, [X8 + 0x783]
	0x03AC89F4 LDR W22, [X21 + 0x18]
	0x03AC89F8 MOVZ W12, 0x178
	0x03AC89FC ADRP X10, 0x62B000
	0x03AC8A00 LDR X10, [X10 + 0x5A0]
	0x03AC8A04 CMP W25, W22
	0x03AC8A08 LDR X8, [X10]
	0x03AC8A0C LDR X8, [X8 + 0xB8]
	0x03AC8A10 LDR V0, [X8]
	0x03AC8A14 LDR V1, [X8 + 0x8]
	0x03AC8A18 NOP
	0x03AC8A1C MADD X8, X24, X12, X21
	0x03AC8A20 STR D0, [X8 + 0x70]
	0x03AC8A24 STR S1, [X8 + 0x78]
	0x03AC8A28 B.CS 0x3ACA7B4
	0x03AC8A2C LDR X8, [X10]
	0x03AC8A30 LDR X8, [X8 + 0xB8]
	0x03AC8A34 LDR V0, [X8]
	0x03AC8A38 LDR V1, [X8 + 0x8]
	0x03AC8A3C NOP
	0x03AC8A40 MADD X8, X24, X12, X21
	0x03AC8A44 STR D0, [X8 + 0x98]
	0x03AC8A48 STR S1, [X8 + 0xA0]
	0x03AC8A4C LDR X9, [X10]
	0x03AC8A50 LDR X9, [X9 + 0xB8]
	0x03AC8A54 LDR V0, [X9]
	0x03AC8A58 LDR V1, [X9 + 0x8]
	0x03AC8A5C STR D0, [X8 + 0xC0]
	0x03AC8A60 STR S1, [X8 + 0xC8]
	0x03AC8A64 LDR X9, [X10]
	0x03AC8A68 LDR X9, [X9 + 0xB8]
	0x03AC8A6C LDR V0, [X9]
	0x03AC8A70 LDR V1, [X9 + 0x8]
	0x03AC8A74 ADD X9, X27, 0x194
	0x03AC8A78 STR D0, [X8 + 0xE8]
	0x03AC8A7C STR S1, [X8 + 0xF0]
	0x03AC8A80 STRB W31, [X9]
	0x03AC8A84 LDR X22, [X31 + 0x170]
	0x03AC8A88 LDR X27, [X31 + 0x150]
	0x03AC8A8C CBZ W28, 0x3AC8B28
	0x03AC8A90 CMP W28, 0x1
	0x03AC8A94 B.NE 0x3AC8B44
	0x03AC8A98 LDR X8, [X19]
	0x03AC8A9C LDR X9, [X8 + 0x8F8]
	0x03AC8AA0 LDR X3, [X8 + 0x900]
	0x03AC8AA4 B 0x3AC8B34
	0x03AC8AA8 LDR X27, [X31 + 0x150]
	0x03AC8AAC CMP W25, W22
	0x03AC8AB0 B.CS 0x3ACA7B4
	0x03AC8AB4 MADD X8, X24, X12, X21
	0x03AC8AB8 UNIMPLEMENTED
	0x03AC8ABC LDR V2, [X8 + 0x70]
	0x03AC8AC0 LDR V4, [X8 + 0x98]
	0x03AC8AC4 LDR V6, [X8 + 0xC0]
	0x03AC8AC8 LDR V16, [X8 + 0xE8]
	0x03AC8ACC LDR V3, [X8 + 0x78]
	0x03AC8AD0 LDR V5, [X8 + 0xA0]
	0x03AC8AD4 LDR V7, [X8 + 0xC8]
	0x03AC8AD8 FADD V2.2S, V0.2S, V2.2S
	0x03AC8ADC FADD V4.2S, V0.2S, V4.2S
	0x03AC8AE0 FADD V6.2S, V0.2S, V6.2S
	0x03AC8AE4 FADD V0.2S, V0.2S, V16.2S
	0x03AC8AE8 LDR V16, [X8 + 0xF0]
	0x03AC8AEC LDR X22, [X31 + 0x170]
	0x03AC8AF0 MOV S1, V1.S[1]
	0x03AC8AF4 FADD S3, S1, S3
	0x03AC8AF8 FADD S5, S1, S5
	0x03AC8AFC FADD S7, S1, S7
	0x03AC8B00 FADD S1, S1, S16
	0x03AC8B04 STR D2, [X8 + 0x70]
	0x03AC8B08 STR S3, [X8 + 0x78]
	0x03AC8B0C STR D4, [X8 + 0x98]
	0x03AC8B10 STR S5, [X8 + 0xA0]
	0x03AC8B14 STR D6, [X8 + 0xC0]
	0x03AC8B18 STR S7, [X8 + 0xC8]
	0x03AC8B1C STR D0, [X8 + 0xE8]
	0x03AC8B20 STR S1, [X8 + 0xF0]
	0x03AC8B24 CBNZ W28, 0x3AC8A90
	0x03AC8B28 LDR X8, [X19]
	0x03AC8B2C LDR X9, [X8 + 0x8D8]
	0x03AC8B30 LDR X3, [X8 + 0x8E0]
	0x03AC8B34 MOV X0, X19
	0x03AC8B38 MOV W1, W25
	0x03AC8B3C MOV W2, W31
	0x03AC8B40 BLR X9
	0x03AC8B44 LDR X28, [X31 + 0x108]
	0x03AC8B48 LDR X8, [X22]
	0x03AC8B4C CBZ X8, 0x3ACA6A8
	0x03AC8B50 LDR X8, [X8 + 0x38]
	0x03AC8B54 LDP V6, V5, [X31 + 0x110]
	0x03AC8B58 MOVZ W14, 0x178
	0x03AC8B5C CBZ X8, 0x3ACA6A8
	0x03AC8B60 LDR W9, [X8 + 0x18]
	0x03AC8B64 CMP W25, W9
	0x03AC8B68 B.CS 0x3ACA7B4
	0x03AC8B6C MADD X8, X24, X14, X8
	0x03AC8B70 ADD X8, X8, 0x11C
	0x03AC8B74 LDR V2, [X8]
	0x03AC8B78 LDR V3, [X8 + 0x8]
	0x03AC8B7C UNIMPLEMENTED
	0x03AC8B80 MOV S1, V5.S[1]
	0x03AC8B84 FADD V2.2S, V0.2S, V2.2S
	0x03AC8B88 FADD S3, S1, S3
	0x03AC8B8C STR D2, [X8]
	0x03AC8B90 STR S3, [X8 + 0x8]
	0x03AC8B94 LDR X8, [X22]
	0x03AC8B98 CBZ X8, 0x3ACA6A8
	0x03AC8B9C LDR X8, [X8 + 0x38]
	0x03AC8BA0 CBZ X8, 0x3ACA6A8
	0x03AC8BA4 LDR W9, [X8 + 0x18]
	0x03AC8BA8 CMP W25, W9
	0x03AC8BAC B.CS 0x3ACA7B4
	0x03AC8BB0 MADD X8, X24, X14, X8
	0x03AC8BB4 LDR V2, [X8 + 0x110]
	0x03AC8BB8 LDR V3, [X8 + 0x118]
	0x03AC8BBC FADD V2.2S, V0.2S, V2.2S
	0x03AC8BC0 FADD S3, S1, S3
	0x03AC8BC4 STR D2, [X8 + 0x110]
	0x03AC8BC8 STR S3, [X8 + 0x118]
	0x03AC8BCC LDR X8, [X22]
	0x03AC8BD0 CBZ X8, 0x3ACA6A8
	0x03AC8BD4 LDR X8, [X8 + 0x38]
	0x03AC8BD8 CBZ X8, 0x3ACA6A8
	0x03AC8BDC LDR W9, [X8 + 0x18]
	0x03AC8BE0 CMP W25, W9
	0x03AC8BE4 B.CS 0x3ACA7B4
	0x03AC8BE8 MADD X8, X24, X14, X8
	0x03AC8BEC LDR V2, [X8 + 0x128]
	0x03AC8BF0 LDR V3, [X8 + 0x130]
	0x03AC8BF4 FADD V0.2S, V0.2S, V2.2S
	0x03AC8BF8 FADD S1, S1, S3
	0x03AC8BFC STR D0, [X8 + 0x128]
	0x03AC8C00 STR S1, [X8 + 0x130]
	0x03AC8C04 LDR X8, [X22]
	0x03AC8C08 CBZ X8, 0x3ACA6A8
	0x03AC8C0C LDR X8, [X8 + 0x38]
	0x03AC8C10 CBZ X8, 0x3ACA6A8
	0x03AC8C14 LDR W9, [X8 + 0x18]
	0x03AC8C18 CMP W25, W9
	0x03AC8C1C B.CS 0x3ACA7B4
	0x03AC8C20 MADD X8, X24, X14, X8
	0x03AC8C24 LDR V0, [X8 + 0x134]
	0x03AC8C28 LDR V1, [X8 + 0x138]
	0x03AC8C2C FADD S0, S6, S0
	0x03AC8C30 FADD V1.2S, V5.2S, V1.2S
	0x03AC8C34 STR S0, [X8 + 0x134]
	0x03AC8C38 STR D1, [X8 + 0x138]
	0x03AC8C3C LDR X9, [X22]
	0x03AC8C40 CBZ X9, 0x3ACA6A8
	0x03AC8C44 LDR X8, [X9 + 0x38]
	0x03AC8C48 CBZ X8, 0x3ACA6A8
	0x03AC8C4C LDR W10, [X8 + 0x18]
	0x03AC8C50 CMP W25, W10
	0x03AC8C54 B.CS 0x3ACA7B4
	0x03AC8C58 MADD X11, X24, X14, X8
	0x03AC8C5C LDP D2, D4, [X11 + 0x140]
	0x03AC8C60 LDR V3, [X11 + 0x150]
	0x03AC8C64 LDR X12, [X31 + 0x168]
	0x03AC8C68 UNIMPLEMENTED
	0x03AC8C6C UNIMPLEMENTED
	0x03AC8C70 FADD V1.2S, V1.2S, V2.2S
	0x03AC8C74 CMP W12, W20
	0x03AC8C78 FADD S2, S5, S3
	0x03AC8C7C FADD V3.2S, V0.2S, V4.2S
	0x03AC8C80 STR S2, [X11 + 0x150]
	0x03AC8C84 STP D1, D3, [X11 + 0x140]
	0x03AC8C88 B.NE 0x3AC8CA0
	0x03AC8C8C LDR W8, [X23]
	0x03AC8C90 SUB W8, W8, 0x1
	0x03AC8C94 CMP W25, W8
	0x03AC8C98 B.EQ 0x3AC8D50
	0x03AC8C9C B 0x3AC8E1C
	0x03AC8CA0 LDR X11, [X9 + 0x50]
	0x03AC8CA4 CBZ X11, 0x3ACA6A8
	0x03AC8CA8 LDR W9, [X11 + 0x18]
	0x03AC8CAC CMP W20, W9
	0x03AC8CB0 B.CS 0x3ACA7B4
	0x03AC8CB4 SXTW X9, W20
	0x03AC8CB8 MADD X13, X9, X26, X11
	0x03AC8CBC LDUR V1, [X13 + 0x4C]
	0x03AC8CC0 LDP S2, S3, [X13 + 0x54]
	0x03AC8CC4 LDRSW X12, [X13 + 0x34]
	0x03AC8CC8 FADD V4.2S, V0.2S, V1.2S
	0x03AC8CCC FADD S1, S5, S2
	0x03AC8CD0 FADD S2, S6, S3
	0x03AC8CD4 CMP W12, W10
	0x03AC8CD8 STUR D4, [X13 + 0x4C]
	0x03AC8CDC STP S1, S2, [X13 + 0x54]
	0x03AC8CE0 B.CS 0x3ACA7B4
	0x03AC8CE4 MADD X8, X12, X14, X8
	0x03AC8CE8 LDR W8, [X8 + 0x11C]
	0x03AC8CEC NOP
	0x03AC8CF0 MADD X10, X9, X26, X11
	0x03AC8CF4 STR S1, [X10 + 0x70]
	0x03AC8CF8 STR W8, [X10 + 0x6C]
	0x03AC8CFC LDR X10, [X22]
	0x03AC8D00 CBZ X10, 0x3ACA6A8
	0x03AC8D04 LDR X8, [X10 + 0x50]
	0x03AC8D08 CBZ X8, 0x3ACA6A8
	0x03AC8D0C LDR W11, [X8 + 0x18]
	0x03AC8D10 CMP W20, W11
	0x03AC8D14 B.CS 0x3ACA7B4
	0x03AC8D18 LDR X10, [X10 + 0x38]
	0x03AC8D1C CBZ X10, 0x3ACA6A8
	0x03AC8D20 MADD X11, X9, X26, X8
	0x03AC8D24 LDRSW X11, [X11 + 0x40]
	0x03AC8D28 LDR W12, [X10 + 0x18]
	0x03AC8D2C CMP W11, W12
	0x03AC8D30 B.CS 0x3ACA7B4
	0x03AC8D34 MADD X10, X11, X14, X10
	0x03AC8D38 MADD X8, X9, X26, X8
	0x03AC8D3C LDR W9, [X10 + 0x128]
	0x03AC8D40 LDR W10, [X8 + 0x4C]
	0x03AC8D44 STP W9, W10, [X8 + 0x74]
	0x03AC8D48 LDR W8, [X23]
	0x03AC8D4C SUB W8, W8, 0x1
	0x03AC8D50 CMP W25, W8
	0x03AC8D54 B.NE 0x3AC8E1C
	0x03AC8D58 LDR X9, [X22]
	0x03AC8D5C CBZ X9, 0x3ACA6A8
	0x03AC8D60 LDR X8, [X9 + 0x50]
	0x03AC8D64 LDR X12, [X31 + 0xE8]
	0x03AC8D68 CBZ X8, 0x3ACA6A8
	0x03AC8D6C LDR W10, [X8 + 0x18]
	0x03AC8D70 LDR X11, [X31 + 0x168]
	0x03AC8D74 CMP W11, W10
	0x03AC8D78 B.CS 0x3ACA7B4
	0x03AC8D7C MADD X10, X12, X26, X8
	0x03AC8D80 LDUR V1, [X10 + 0x4C]
	0x03AC8D84 LDP S2, S3, [X10 + 0x54]
	0x03AC8D88 FADD V1.2S, V0.2S, V1.2S
	0x03AC8D8C FADD S0, S5, S2
	0x03AC8D90 FADD S2, S6, S3
	0x03AC8D94 STUR D1, [X10 + 0x4C]
	0x03AC8D98 STP S0, S2, [X10 + 0x54]
	0x03AC8D9C LDR X9, [X9 + 0x38]
	0x03AC8DA0 CBZ X9, 0x3ACA6A8
	0x03AC8DA4 LDRSW X10, [X10 + 0x34]
	0x03AC8DA8 LDR W11, [X9 + 0x18]
	0x03AC8DAC CMP W10, W11
	0x03AC8DB0 B.CS 0x3ACA7B4
	0x03AC8DB4 MADD X9, X10, X14, X9
	0x03AC8DB8 LDR W9, [X9 + 0x11C]
	0x03AC8DBC NOP
	0x03AC8DC0 MADD X8, X12, X26, X8
	0x03AC8DC4 STR S0, [X8 + 0x70]
	0x03AC8DC8 STR W9, [X8 + 0x6C]
	0x03AC8DCC LDR X9, [X22]
	0x03AC8DD0 CBZ X9, 0x3ACA6A8
	0x03AC8DD4 LDR X8, [X9 + 0x50]
	0x03AC8DD8 CBZ X8, 0x3ACA6A8
	0x03AC8DDC LDR W10, [X8 + 0x18]
	0x03AC8DE0 LDR X11, [X31 + 0x168]
	0x03AC8DE4 CMP W11, W10
	0x03AC8DE8 B.CS 0x3ACA7B4
	0x03AC8DEC LDR X9, [X9 + 0x38]
	0x03AC8DF0 CBZ X9, 0x3ACA6A8
	0x03AC8DF4 MADD X10, X12, X26, X8
	0x03AC8DF8 LDRSW X10, [X10 + 0x40]
	0x03AC8DFC LDR W11, [X9 + 0x18]
	0x03AC8E00 CMP W10, W11
	0x03AC8E04 B.CS 0x3ACA7B4
	0x03AC8E08 MADD X9, X10, X14, X9
	0x03AC8E0C MADD X8, X12, X26, X8
	0x03AC8E10 LDR W9, [X9 + 0x128]
	0x03AC8E14 LDR W10, [X8 + 0x4C]
	0x03AC8E18 STP W9, W10, [X8 + 0x74]
	0x03AC8E1C ADRP X8, 0x62D000
	0x03AC8E20 LDR X8, [X8 + 0x170]
	0x03AC8E24 LDR X0, [X8]
	0x03AC8E28 LDR W8, [X0 + 0xE0]
	0x03AC8E2C CBNZ W8, 0x3AC8E34
	0x03AC8E30 BL 0x1C16DFC
	0x03AC8E34 LDR W20, [X31 + 0x160]
	0x03AC8E38 MOV X1, X31
	0x03AC8E3C MOV W0, W20
	0x03AC8E40 BL 0x331ABF0
	0x03AC8E44 TBNZ X0, 0x0, 0x3AC8E68
	0x03AC8E48 MOVN W8, 0x200F
	0x03AC8E4C ADD W8, W20, W8
	0x03AC8E50 CMP W8, 0x2
	0x03AC8E54 B.CC 0x3AC8E68
	0x03AC8E58 CMP W20, 0xAD
	0x03AC8E5C B.EQ 0x3AC8E68
	0x03AC8E60 CMP W20, 0x2D
	0x03AC8E64 B.NE 0x3AC90EC
	0x03AC8E68 LDR W9, [X31 + 0xF8]
	0x03AC8E6C LDR W8, [X23]
	0x03AC8E70 ANDS W31, W9, 0x1
	0x03AC8E74 LDR W9, [X31 + 0x13C]
	0x03AC8E78 SUB W8, W8, 0x1
	0x03AC8E7C CSEL W9, W9, W25, NE
	0x03AC8E80 CMP W25, W8
	0x03AC8E84 STR W9, [X31 + 0x13C]
	0x03AC8E88 B.NE 0x3AC8F84
	0x03AC8E8C LDR X8, [X22]
	0x03AC8E90 MOVZ W12, 0x178
	0x03AC8E94 CBZ X8, 0x3ACA6A8
	0x03AC8E98 MOV X28, X8
	0x03AC8E9C LDR X9, [X28 + 0x40]!
	0x03AC8EA0 CBZ X9, 0x3ACA6A8
	0x03AC8EA4 LDRSW X20, [X8 + 0x24]
	0x03AC8EA8 LDR W21, [X9 + 0x18]
	0x03AC8EAC ADD W9, W20, 0x1
	0x03AC8EB0 CMP W9, W21
	0x03AC8EB4 B.LE 0x3AC8EF4
	0x03AC8EB8 ADRP X8, 0x690000
	0x03AC8EBC LDR X8, [X8 + 0x368]
	0x03AC8EC0 LDR X0, [X8]
	0x03AC8EC4 LDR W8, [X0 + 0xE0]
	0x03AC8EC8 CBNZ W8, 0x3AC8ED0
	0x03AC8ECC BL 0x1C16DFC
	0x03AC8ED0 ADRP X8, 0x690000
	0x03AC8ED4 LDR X8, [X8 + 0x360]
	0x03AC8ED8 ADD W1, W21, 0x1
	0x03AC8EDC MOV X0, X28
	0x03AC8EE0 LDR X2, [X8]
	0x03AC8EE4 BL 0x2299114
	0x03AC8EE8 LDR X8, [X22]
	0x03AC8EEC MOVZ W12, 0x178
	0x03AC8EF0 CBZ X8, 0x3ACA6A8
	0x03AC8EF4 LDR X9, [X8 + 0x40]
	0x03AC8EF8 CBZ X9, 0x3ACA6A8
	0x03AC8EFC LDR W10, [X9 + 0x18]
	0x03AC8F00 LDR X21, [X31 + 0x140]
	0x03AC8F04 LDR X28, [X31 + 0x108]
	0x03AC8F08 CMP W20, W10
	0x03AC8F0C B.CS 0x3ACA7B4
	0x03AC8F10 MOVZ W10, 0x18
	0x03AC8F14 MADD X9, X20, X10, X9
	0x03AC8F18 LDR W11, [X31 + 0x13C]
	0x03AC8F1C LDR W10, [X31 + 0x15C]
	0x03AC8F20 STR X19, [X9 + 0x20]
	0x03AC8F24 STP W11, W25, [X9 + 0x28]
	0x03AC8F28 SUB W10, W10, W11
	0x03AC8F2C STR W10, [X9 + 0x30]
	0x03AC8F30 LDR W10, [X8 + 0x24]
	0x03AC8F34 LDR X9, [X8 + 0x50]
	0x03AC8F38 ADD W10, W10, 0x1
	0x03AC8F3C STR W10, [X8 + 0x24]
	0x03AC8F40 CBZ X9, 0x3ACA6A8
	0x03AC8F44 LDR W8, [X9 + 0x18]
	0x03AC8F48 LDR X10, [X31 + 0x168]
	0x03AC8F4C CMP W10, W8
	0x03AC8F50 B.CS 0x3ACA7B4
	0x03AC8F54 LDR X8, [X31 + 0xE8]
	0x03AC8F58 LDR W10, [X31 + 0xBC]
	0x03AC8F5C NOP
	0x03AC8F60 MADD X8, X8, X26, X9
	0x03AC8F64 LDR W9, [X8 + 0x30]
	0x03AC8F68 ADD W10, W10, 0x1
	0x03AC8F6C STR W10, [X31 + 0xBC]
	0x03AC8F70 ADD W9, W9, 0x1
	0x03AC8F74 STR W9, [X8 + 0x30]
	0x03AC8F78 MOVZ W8, 0x1
	0x03AC8F7C STR W8, [X31 + 0xF8]
	0x03AC8F80 B 0x3AC8F90
	0x03AC8F84 MOVZ W8, 0x1
	0x03AC8F88 STR W8, [X31 + 0xF8]
	0x03AC8F8C MOVZ W12, 0x178
	0x03AC8F90 LDR X8, [X22]
	0x03AC8F94 CBZ X8, 0x3ACA6A8
	0x03AC8F98 LDR X8, [X8 + 0x38]
	0x03AC8F9C CBZ X8, 0x3ACA6A8
	0x03AC8FA0 LDR W9, [X8 + 0x18]
	0x03AC8FA4 CMP W25, W9
	0x03AC8FA8 B.CS 0x3ACA7B4
	0x03AC8FAC MADD X10, X24, X12, X8
	0x03AC8FB0 LDRB W10, [X10 + 0x190]
	0x03AC8FB4 TBNZ X10, 0x2, 0x3AC8FEC
	0x03AC8FB8 LDR W10, [X31 + 0x104]
	0x03AC8FBC TBZ X10, 0x0, 0x3AC9484
	0x03AC8FC0 LDR W10, [X31 + 0x15C]
	0x03AC8FC4 SUB W10, W10, 0x2
	0x03AC8FC8 CMP W10, W9
	0x03AC8FCC B.CS 0x3ACA7B4
	0x03AC8FD0 ADD X8, X8, X28
	0x03AC8FD4 SUB X10, X8, 0x330
	0x03AC8FD8 SUB X8, X8, 0x2F8
	0x03AC8FDC LDR X9, [X19]
	0x03AC8FE0 LDR V3, [X10]
	0x03AC8FE4 LDR V7, [X8]
	0x03AC8FE8 B 0x3AC951C
	0x03AC8FEC LDR W9, [X31 + 0x1064]
	0x03AC8FF0 NOP
	0x03AC8FF4 MADD X8, X24, X12, X8
	0x03AC8FF8 LDR W21, [X8 + 0x68]
	0x03AC8FFC STR W9, [X8 + 0x16C]
	0x03AC9000 LDR W9, [X19 + 0x328]
	0x03AC9004 CMP W25, W9
	0x03AC9008 B.GT 0x3AC901C
	0x03AC900C LDR W8, [X19 + 0x330]
	0x03AC9010 LDR X9, [X31 + 0x168]
	0x03AC9014 CMP W9, W8
	0x03AC9018 B.LE 0x3AC90C0
	0x03AC901C MOV W20, W31
	0x03AC9020 ADRP X8, 0x62C000
	0x03AC9024 LDR X8, [X8 + 0x170]
	0x03AC9028 LDR X0, [X8]
	0x03AC902C LDR W8, [X0 + 0xE0]
	0x03AC9030 CBNZ W8, 0x3AC9038
	0x03AC9034 BL 0x1C16DFC
	0x03AC9038 LDR W27, [X31 + 0x160]
	0x03AC903C MOV X1, X31
	0x03AC9040 MOV W0, W27
	0x03AC9044 BL 0x3317FCC
	0x03AC9048 MOVZ W8, 0x200B
	0x03AC904C CMP W27, W8
	0x03AC9050 B.EQ 0x3AC90E4
	0x03AC9054 LDR X27, [X31 + 0x150]
	0x03AC9058 TBNZ X0, 0x0, 0x3AC9404
	0x03AC905C LDR X8, [X22]
	0x03AC9060 CBZ X8, 0x3ACA6A8
	0x03AC9064 LDR X9, [X8 + 0x38]
	0x03AC9068 MOVZ W11, 0x178
	0x03AC906C CBZ X9, 0x3ACA6A8
	0x03AC9070 LDR W10, [X9 + 0x18]
	0x03AC9074 CMP W25, W10
	0x03AC9078 B.CS 0x3ACA7B4
	0x03AC907C MADD X9, X24, X11, X9
	0x03AC9080 LDR V0, [X9 + 0x160]
	0x03AC9084 LDR W9, [X31 + 0x54]
	0x03AC9088 FABS S1, S14
	0x03AC908C FCMP S15, S0
	0x03AC9090 FCSEL S15, S15, S0, GT
	0x03AC9094 LDR V0, [X31 + 0xE0]
	0x03AC9098 FCMP S0, S1
	0x03AC909C FCSEL S0, S0, S1, GT
	0x03AC90A0 CMP W21, W9
	0x03AC90A4 STR S0, [X31 + 0xE0]
	0x03AC90A8 B.EQ 0x3AC93B8
	0x03AC90AC LDR X0, [X29]
	0x03AC90B0 LDR W9, [X0 + 0xE0]
	0x03AC90B4 CBZ W9, 0x3AC9398
	0x03AC90B8 LDR X9, [X0 + 0xB8]
	0x03AC90BC B 0x3AC93B0
	0x03AC90C0 LDR W8, [X19 + 0x2E0]
	0x03AC90C4 CMP W8, 0x5
	0x03AC90C8 B.NE 0x3AC90DC
	0x03AC90CC LDR W8, [X19 + 0x338]
	0x03AC90D0 ADD W9, W21, 0x1
	0x03AC90D4 CMP W9, W8
	0x03AC90D8 B.NE 0x3AC901C
	0x03AC90DC MOVZ W20, 0x1
	0x03AC90E0 B 0x3AC9020
	0x03AC90E4 LDR X27, [X31 + 0x150]
	0x03AC90E8 B 0x3AC9404
	0x03AC90EC LDR W8, [X31 + 0xF8]
	0x03AC90F0 TBZ X8, 0x0, 0x3AC91D8
	0x03AC90F4 LDR W8, [X31 + 0x15C]
	0x03AC90F8 MOVZ W12, 0x178
	0x03AC90FC CMP W8, 0x1
	0x03AC9100 B.EQ 0x3AC925C
	0x03AC9104 LDR W8, [X21 + 0x18]
	0x03AC9108 SUB W9, W8, 0x1
	0x03AC910C CMP W25, W9
	0x03AC9110 B.GE 0x3AC925C
	0x03AC9114 LDR W9, [X23]
	0x03AC9118 CMP W25, W9
	0x03AC911C B.GE 0x3AC925C
	0x03AC9120 LDR W10, [X31 + 0x160]
	0x03AC9124 MOVZ W9, 0x2019
	0x03AC9128 CMP W10, W9
	0x03AC912C B.EQ 0x3AC913C
	0x03AC9130 LDR W9, [X31 + 0x160]
	0x03AC9134 CMP W9, 0x27
	0x03AC9138 B.NE 0x3AC925C
	0x03AC913C LDR W9, [X31 + 0x15C]
	0x03AC9140 SUB W9, W9, 0x2
	0x03AC9144 CMP W9, W8
	0x03AC9148 B.CS 0x3ACA7B4
	0x03AC914C ADRP X8, 0x62C000
	0x03AC9150 LDR X8, [X8 + 0x170]
	0x03AC9154 LDR X0, [X8]
	0x03AC9158 ADD X8, X21, X28
	0x03AC915C SUB X8, X8, 0x438
	0x03AC9160 LDRH W28, [X8]
	0x03AC9164 LDR W9, [X0 + 0xE0]
	0x03AC9168 CBNZ W9, 0x3AC9170
	0x03AC916C BL 0x1C16DFC
	0x03AC9170 MOV W0, W28
	0x03AC9174 MOV X1, X31
	0x03AC9178 BL 0x331ABF0
	0x03AC917C LDR X9, [X31 + 0x108]
	0x03AC9180 MOVZ W12, 0x178
	0x03AC9184 TBZ X0, 0x0, 0x3AC925C
	0x03AC9188 LDR W8, [X21 + 0x18]
	0x03AC918C LDR W10, [X31 + 0x15C]
	0x03AC9190 CMP W10, W8
	0x03AC9194 B.CS 0x3ACA7B4
	0x03AC9198 ADRP X8, 0x62C000
	0x03AC919C LDR X8, [X8 + 0x170]
	0x03AC91A0 LDR X0, [X8]
	0x03AC91A4 ADD X8, X21, X9
	0x03AC91A8 SUB X8, X8, 0x148
	0x03AC91AC LDRH W28, [X8]
	0x03AC91B0 LDR W9, [X0 + 0xE0]
	0x03AC91B4 CBNZ W9, 0x3AC91BC
	0x03AC91B8 BL 0x1C16DFC
	0x03AC91BC MOV W0, W28
	0x03AC91C0 MOV X1, X31
	0x03AC91C4 BL 0x331ABF0
	0x03AC91C8 LDR X28, [X31 + 0x108]
	0x03AC91CC MOVZ W12, 0x178
	0x03AC91D0 TBNZ X0, 0x0, 0x3AC8F78
	0x03AC91D4 B 0x3AC925C
	0x03AC91D8 LDR W8, [X31 + 0x15C]
	0x03AC91DC MOVZ W12, 0x178
	0x03AC91E0 CMP W8, 0x1
	0x03AC91E4 B.NE 0x3AC9A24
	0x03AC91E8 ADRP X8, 0x62C000
	0x03AC91EC LDR X8, [X8 + 0x170]
	0x03AC91F0 LDR X0, [X8]
	0x03AC91F4 LDR W8, [X0 + 0xE0]
	0x03AC91F8 CBNZ W8, 0x3AC9200
	0x03AC91FC BL 0x1C16DFC
	0x03AC9200 LDR W0, [X31 + 0x160]
	0x03AC9204 MOV X1, X31
	0x03AC9208 BL 0x331AB24
	0x03AC920C MOVZ W12, 0x178
	0x03AC9210 TBZ X0, 0x0, 0x3AC925C
	0x03AC9214 ADRP X8, 0x62C000
	0x03AC9218 LDR X8, [X8 + 0x170]
	0x03AC921C LDR X0, [X8]
	0x03AC9220 LDR W8, [X0 + 0xE0]
	0x03AC9224 CBNZ W8, 0x3AC922C
	0x03AC9228 BL 0x1C16DFC
	0x03AC922C LDR W20, [X31 + 0x160]
	0x03AC9230 MOV X1, X31
	0x03AC9234 MOV W0, W20
	0x03AC9238 BL 0x3317FCC
	0x03AC923C MOVZ W8, 0x200B
	0x03AC9240 CMP W20, W8
	0x03AC9244 MOVZ W12, 0x178
	0x03AC9248 B.EQ 0x3AC925C
	0x03AC924C TBNZ X0, 0x0, 0x3AC925C
	0x03AC9250 LDR W8, [X23]
	0x03AC9254 CMP W8, 0x1
	0x03AC9258 B.NE 0x3AC9A24
	0x03AC925C LDR W8, [X23]
	0x03AC9260 SUB W8, W8, 0x1
	0x03AC9264 CMP W25, W8
	0x03AC9268 B.NE 0x3AC929C
	0x03AC926C ADRP X8, 0x62C000
	0x03AC9270 LDR X8, [X8 + 0x170]
	0x03AC9274 LDR X0, [X8]
	0x03AC9278 LDR W8, [X0 + 0xE0]
	0x03AC927C CBNZ W8, 0x3AC9284
	0x03AC9280 BL 0x1C16DFC
	0x03AC9284 LDR W0, [X31 + 0x160]
	0x03AC9288 MOV X1, X31
	0x03AC928C BL 0x331ABF0
	0x03AC9290 LDR W20, [X31 + 0xFC]
	0x03AC9294 MOVZ W12, 0x178
	0x03AC9298 TBNZ X0, 0x0, 0x3AC92A4
	0x03AC929C LDR W8, [X31 + 0x15C]
	0x03AC92A0 SUB W20, W8, 0x2
	0x03AC92A4 LDR X8, [X22]
	0x03AC92A8 CBZ X8, 0x3ACA6A8
	0x03AC92AC MOV X28, X8
	0x03AC92B0 LDR X9, [X28 + 0x40]!
	0x03AC92B4 CBZ X9, 0x3ACA6A8
	0x03AC92B8 LDRSW X21, [X8 + 0x24]
	0x03AC92BC LDR W22, [X9 + 0x18]
	0x03AC92C0 ADD W9, W21, 0x1
	0x03AC92C4 CMP W9, W22
	0x03AC92C8 B.LE 0x3AC930C
	0x03AC92CC ADRP X8, 0x68F000
	0x03AC92D0 LDR X8, [X8 + 0x368]
	0x03AC92D4 LDR X0, [X8]
	0x03AC92D8 LDR W8, [X0 + 0xE0]
	0x03AC92DC CBNZ W8, 0x3AC92E4
	0x03AC92E0 BL 0x1C16DFC
	0x03AC92E4 ADRP X8, 0x68F000
	0x03AC92E8 LDR X8, [X8 + 0x360]
	0x03AC92EC ADD W1, W22, 0x1
	0x03AC92F0 MOV X0, X28
	0x03AC92F4 LDR X2, [X8]
	0x03AC92F8 BL 0x2299114
	0x03AC92FC LDR X8, [X31 + 0x170]
	0x03AC9300 MOVZ W12, 0x178
	0x03AC9304 LDR X8, [X8]
	0x03AC9308 CBZ X8, 0x3ACA6A8
	0x03AC930C LDR X9, [X8 + 0x40]
	0x03AC9310 CBZ X9, 0x3ACA6A8
	0x03AC9314 LDR W10, [X9 + 0x18]
	0x03AC9318 LDR X28, [X31 + 0x108]
	0x03AC931C CMP W21, W10
	0x03AC9320 B.CS 0x3ACA7B4
	0x03AC9324 LDR W11, [X31 + 0x13C]
	0x03AC9328 MOVZ W10, 0x18
	0x03AC932C MADD X9, X21, X10, X9
	0x03AC9330 STR X19, [X9 + 0x20]
	0x03AC9334 SUB W10, W20, W11
	0x03AC9338 ADD W10, W10, 0x1
	0x03AC933C STP W11, W20, [X9 + 0x28]
	0x03AC9340 STR W10, [X9 + 0x30]
	0x03AC9344 LDR W10, [X8 + 0x24]
	0x03AC9348 LDR X9, [X8 + 0x50]
	0x03AC934C ADD W10, W10, 0x1
	0x03AC9350 STR W10, [X8 + 0x24]
	0x03AC9354 CBZ X9, 0x3ACA6A8
	0x03AC9358 LDR W8, [X9 + 0x18]
	0x03AC935C LDP X10, X22, [X31 + 0x168]
	0x03AC9360 LDR X21, [X31 + 0x140]
	0x03AC9364 CMP W10, W8
	0x03AC9368 B.CS 0x3ACA7B4
	0x03AC936C LDR X8, [X31 + 0xE8]
	0x03AC9370 LDR W10, [X31 + 0xBC]
	0x03AC9374 STR W31, [X31 + 0xF8]
	0x03AC9378 NOP
	0x03AC937C MADD X8, X8, X26, X9
	0x03AC9380 LDR W9, [X8 + 0x30]
	0x03AC9384 ADD W10, W10, 0x1
	0x03AC9388 STR W10, [X31 + 0xBC]
	0x03AC938C ADD W9, W9, 0x1
	0x03AC9390 STR W9, [X8 + 0x30]
	0x03AC9394 B 0x3AC8F90
	0x03AC9398 BL 0x1C16DFC
	0x03AC939C LDR X8, [X22]
	0x03AC93A0 CBZ X8, 0x3ACA6A8
	0x03AC93A4 LDR X9, [X29]
	0x03AC93A8 MOVZ W11, 0x178
	0x03AC93AC LDR X9, [X9 + 0xB8]
	0x03AC93B0 LDR V0, [X9 + 0x15A8]
	0x03AC93B4 STR S0, [X31 + 0xE4]
	0x03AC93B8 LDR X8, [X8 + 0x38]
	0x03AC93BC CBZ X8, 0x3ACA6A8
	0x03AC93C0 LDR W9, [X8 + 0x18]
	0x03AC93C4 CMP W25, W9
	0x03AC93C8 B.CS 0x3ACA7B4
	0x03AC93CC LDR X9, [X19 + 0xF8]
	0x03AC93D0 CBZ X9, 0x3ACA6A8
	0x03AC93D4 MADD X8, X24, X11, X8
	0x03AC93D8 LDR V8, [X8 + 0x14C]
	0x03AC93DC ADD X0, X9, 0x50
	0x03AC93E0 MOV X1, X31
	0x03AC93E4 BL 0x3C9C048
	0x03AC93E8 LDR V1, [X31 + 0xE4]
	0x03AC93EC FMUL S0, S15, S0
	0x03AC93F0 FADD S0, S8, S0
	0x03AC93F4 STR W21, [X31 + 0x54]
	0x03AC93F8 FCMP S1, S0
	0x03AC93FC FCSEL S1, S1, S0, MI
	0x03AC9400 STR S1, [X31 + 0xE4]
	0x03AC9404 LDR X21, [X31 + 0x140]
	0x03AC9408 LDR W8, [X31 + 0x104]
	0x03AC940C TBZ X8, 0x0, 0x3AC9418
	0x03AC9410 MOVZ W12, 0x178
	0x03AC9414 B 0x3AC94E4
	0x03AC9418 LDR W8, [X31 + 0x160]
	0x03AC941C MOVZ W12, 0x178
	0x03AC9420 STR W31, [X31 + 0x104]
	0x03AC9424 CMP W8, 0xD
	0x03AC9428 B.EQ 0x3AC9588
	0x03AC942C AND W8, W8, 0xFFFE
	0x03AC9430 CMP W8, 0xA
	0x03AC9434 B.EQ 0x3AC9588
	0x03AC9438 LDR X8, [X31 + 0x148]
	0x03AC943C CMP W25, W8
	0x03AC9440 B.GT 0x3AC9588
	0x03AC9444 EOR W8, W20, 0x1
	0x03AC9448 TBNZ X8, 0x0, 0x3AC9588
	0x03AC944C LDR X8, [X31 + 0x148]
	0x03AC9450 CMP W25, W8
	0x03AC9454 B.NE 0x3AC948C
	0x03AC9458 ADRP X8, 0x62C000
	0x03AC945C LDR X8, [X8 + 0x170]
	0x03AC9460 LDR X0, [X8]
	0x03AC9464 LDR W8, [X0 + 0xE0]
	0x03AC9468 CBNZ W8, 0x3AC9470
	0x03AC946C BL 0x1C16DFC
	0x03AC9470 LDR W0, [X31 + 0x160]
	0x03AC9474 MOV X1, X31
	0x03AC9478 BL 0x331BAF4
	0x03AC947C MOVZ W12, 0x178
	0x03AC9480 TBZ X0, 0x0, 0x3AC948C
	0x03AC9484 STR W31, [X31 + 0x104]
	0x03AC9488 B 0x3AC9588
	0x03AC948C LDR X8, [X22]
	0x03AC9490 CBZ X8, 0x3ACA6A8
	0x03AC9494 LDR X8, [X8 + 0x38]
	0x03AC9498 CBZ X8, 0x3ACA6A8
	0x03AC949C LDR W9, [X8 + 0x18]
	0x03AC94A0 CMP W25, W9
	0x03AC94A4 B.CS 0x3ACA7B4
	0x03AC94A8 MADD X8, X24, X12, X8
	0x03AC94AC LDR V0, [X8 + 0x160]
	0x03AC94B0 LDR V1, [X8 + 0x11C]
	0x03AC94B4 FCMP S15, 0x0
	0x03AC94B8 LDR W8, [X8 + 0x168]
	0x03AC94BC FCSEL S15, S0, S15, EQ
	0x03AC94C0 STP S1, S0, [X31 + 0x60]
	0x03AC94C4 LDR V1, [X31 + 0xE0]
	0x03AC94C8 FMOV S0, W31
	0x03AC94CC STR S0, [X31 + 0x5C]
	0x03AC94D0 LDR V0, [X31 + 0xE4]
	0x03AC94D4 FCSEL S1, S14, S1, EQ
	0x03AC94D8 STR X8, [X31 + 0x68]
	0x03AC94DC STR S1, [X31 + 0xE0]
	0x03AC94E0 STR S0, [X31 + 0x58]
	0x03AC94E4 LDR W8, [X23]
	0x03AC94E8 SUBS W8, W8, 0x1
	0x03AC94EC B.NE 0x3AC96E8
	0x03AC94F0 LDR X8, [X22]
	0x03AC94F4 CBZ X8, 0x3ACA6A8
	0x03AC94F8 LDR X8, [X8 + 0x38]
	0x03AC94FC CBZ X8, 0x3ACA6A8
	0x03AC9500 LDR W9, [X8 + 0x18]
	0x03AC9504 CMP W25, W9
	0x03AC9508 B.CS 0x3ACA7B4
	0x03AC950C MADD X8, X24, X12, X8
	0x03AC9510 LDR X9, [X19]
	0x03AC9514 LDR V3, [X8 + 0x128]
	0x03AC9518 LDR V7, [X8 + 0x160]
	0x03AC951C LDR X8, [X9 + 0x908]
	0x03AC9520 LDR X3, [X9 + 0x910]
	0x03AC9524 LDP S0, S4, [X31 + 0xE0]
	0x03AC9528 LDR X9, [X31 + 0x68]
	0x03AC952C LDR V1, [X31 + 0x58]
	0x03AC9530 LDR V6, [X31 + 0x64]
	0x03AC9534 STR S0, [X31 + 0x8]
	0x03AC9538 LDP S2, S0, [X31 + 0x5C]
	0x03AC953C ADD X1, X31, 0x1000
	0x03AC9540 MOV W2, W9
	0x03AC9544 FMOV S5, W31
	0x03AC9548 ADD X1, X1, 0x64
	0x03AC954C MOV X0, X19
	0x03AC9550 STR S15, [X31]
	0x03AC9554 BLR X8
	0x03AC9558 LDR X0, [X29]
	0x03AC955C LDR W8, [X0 + 0xE0]
	0x03AC9560 CBNZ W8, 0x3AC956C
	0x03AC9564 BL 0x1C16DFC
	0x03AC9568 LDR X0, [X29]
	0x03AC956C LDR X8, [X0 + 0xB8]
	0x03AC9570 FMOV S15, W31
	0x03AC9574 FMOV S0, W31
	0x03AC9578 STR W31, [X31 + 0x104]
	0x03AC957C LDR V1, [X8 + 0x15A8]
	0x03AC9580 STP S0, S1, [X31 + 0xE0]
	0x03AC9584 MOVZ W12, 0x178
	0x03AC9588 LDR X8, [X22]
	0x03AC958C CBZ X8, 0x3ACA6A8
	0x03AC9590 LDR X8, [X8 + 0x38]
	0x03AC9594 CBZ X8, 0x3ACA6A8
	0x03AC9598 LDR W9, [X8 + 0x18]
	0x03AC959C CMP W25, W9
	0x03AC95A0 B.CS 0x3ACA7B4
	0x03AC95A4 CBZ X27, 0x3ACA6A8
	0x03AC95A8 MADD X8, X24, X12, X8
	0x03AC95AC LDR W20, [X8 + 0x190]
	0x03AC95B0 ADD X0, X27, 0x50
	0x03AC95B4 MOV X1, X31
	0x03AC95B8 BL 0x3C9C068
	0x03AC95BC MOV V11.16B, V0.16B
	0x03AC95C0 TBNZ X20, 0x6, 0x3AC961C
	0x03AC95C4 LDR W8, [X31 + 0x100]
	0x03AC95C8 TBZ X8, 0x0, 0x3AC9B3C
	0x03AC95CC LDR X8, [X22]
	0x03AC95D0 CBZ X8, 0x3ACA6A8
	0x03AC95D4 LDR X8, [X8 + 0x38]
	0x03AC95D8 CBZ X8, 0x3ACA6A8
	0x03AC95DC LDR W10, [X31 + 0x15C]
	0x03AC95E0 LDR W9, [X8 + 0x18]
	0x03AC95E4 SUB W10, W10, 0x2
	0x03AC95E8 CMP W10, W9
	0x03AC95EC B.CS 0x3ACA7B4
	0x03AC95F0 LDR X9, [X19]
	0x03AC95F4 ADD X8, X8, X28
	0x03AC95F8 SUB X10, X8, 0x330
	0x03AC95FC SUB X8, X8, 0x30C
	0x03AC9600 LDR V6, [X31 + 0x8C]
	0x03AC9604 LDR V3, [X10]
	0x03AC9608 LDR V0, [X8]
	0x03AC960C LDR X8, [X9 + 0x908]
	0x03AC9610 LDR X3, [X9 + 0x910]
	0x03AC9614 FMUL S1, S6, S11
	0x03AC9618 B 0x3AC9B08
	0x03AC961C LDR X8, [X22]
	0x03AC9620 CBZ X8, 0x3ACA6A8
	0x03AC9624 LDR X9, [X8 + 0x38]
	0x03AC9628 MOVZ W12, 0x178
	0x03AC962C CBZ X9, 0x3ACA6A8
	0x03AC9630 LDR W10, [X9 + 0x18]
	0x03AC9634 CMP W25, W10
	0x03AC9638 B.CS 0x3ACA7B4
	0x03AC963C LDR W10, [X31 + 0x1064]
	0x03AC9640 NOP
	0x03AC9644 MADD X11, X24, X12, X9
	0x03AC9648 STR W10, [X11 + 0x174]
	0x03AC964C LDR W10, [X19 + 0x328]
	0x03AC9650 CMP W25, W10
	0x03AC9654 B.GT 0x3AC9668
	0x03AC9658 LDR W10, [X19 + 0x330]
	0x03AC965C LDR X11, [X31 + 0x168]
	0x03AC9660 CMP W11, W10
	0x03AC9664 B.LE 0x3AC9758
	0x03AC9668 MOV W20, W31
	0x03AC966C LDR W9, [X31 + 0x160]
	0x03AC9670 CMP W9, 0xD
	0x03AC9674 B.EQ 0x3AC96DC
	0x03AC9678 LDR W9, [X31 + 0x160]
	0x03AC967C AND W9, W9, 0xFFFE
	0x03AC9680 CMP W9, 0xA
	0x03AC9684 B.EQ 0x3AC96DC
	0x03AC9688 LDR X9, [X31 + 0x148]
	0x03AC968C CMP W25, W9
	0x03AC9690 B.GT 0x3AC96DC
	0x03AC9694 LDR W10, [X31 + 0x100]
	0x03AC9698 EOR W9, W20, 0x1
	0x03AC969C ORR W9, W10, W9, 0x0
	0x03AC96A0 TBNZ X9, 0x0, 0x3AC96DC
	0x03AC96A4 LDR X9, [X31 + 0x148]
	0x03AC96A8 CMP W25, W9
	0x03AC96AC B.NE 0x3AC97F0
	0x03AC96B0 ADRP X8, 0x62C000
	0x03AC96B4 LDR X8, [X8 + 0x170]
	0x03AC96B8 LDR X0, [X8]
	0x03AC96BC LDR W8, [X0 + 0xE0]
	0x03AC96C0 CBNZ W8, 0x3AC96C8
	0x03AC96C4 BL 0x1C16DFC
	0x03AC96C8 LDR W0, [X31 + 0x160]
	0x03AC96CC MOV X1, X31
	0x03AC96D0 BL 0x331BAF4
	0x03AC96D4 MOVZ W12, 0x178
	0x03AC96D8 TBZ X0, 0x0, 0x3AC97E8
	0x03AC96DC LDR W8, [X31 + 0x100]
	0x03AC96E0 TBNZ X8, 0x0, 0x3AC9838
	0x03AC96E4 B 0x3AC9B3C
	0x03AC96E8 LDR X9, [X31 + 0xC8]
	0x03AC96EC CMP W25, W9
	0x03AC96F0 B.EQ 0x3AC9784
	0x03AC96F4 LDR X9, [X31 + 0x148]
	0x03AC96F8 CMP W25, W9
	0x03AC96FC B.GE 0x3AC9784
	0x03AC9700 TBZ X20, 0x0, 0x3AC99C4
	0x03AC9704 CMP W25, W8
	0x03AC9708 B.GE 0x3AC9A2C
	0x03AC970C LDR X8, [X22]
	0x03AC9710 CBZ X8, 0x3ACA6A8
	0x03AC9714 LDR X8, [X8 + 0x38]
	0x03AC9718 CBZ X8, 0x3ACA6A8
	0x03AC971C LDR W9, [X8 + 0x18]
	0x03AC9720 LDR W10, [X31 + 0x15C]
	0x03AC9724 CMP W10, W9
	0x03AC9728 B.CS 0x3ACA7B4
	0x03AC972C LDR W1, [X8, X28, LSL]
	0x03AC9730 LDR X8, [X31 + 0x68]
	0x03AC9734 MOV X2, X31
	0x03AC9738 MOV W28, W8
	0x03AC973C MOV X0, X28
	0x03AC9740 BL 0x3ADAC28
	0x03AC9744 TBZ X0, 0x0, 0x3AC9F30
	0x03AC9748 LDR X28, [X31 + 0x108]
	0x03AC974C MOVZ W8, 0x1
	0x03AC9750 STR W8, [X31 + 0x104]
	0x03AC9754 B 0x3AC9584
	0x03AC9758 LDR W10, [X19 + 0x2E0]
	0x03AC975C CMP W10, 0x5
	0x03AC9760 B.NE 0x3AC977C
	0x03AC9764 MADD X9, X24, X12, X9
	0x03AC9768 LDR W9, [X9 + 0x68]
	0x03AC976C LDR W10, [X19 + 0x338]
	0x03AC9770 ADD W9, W9, 0x1
	0x03AC9774 CMP W9, W10
	0x03AC9778 B.NE 0x3AC9668
	0x03AC977C MOVZ W20, 0x1
	0x03AC9780 B 0x3AC966C
	0x03AC9784 ADRP X8, 0x62C000
	0x03AC9788 LDR X8, [X8 + 0x170]
	0x03AC978C LDR X0, [X8]
	0x03AC9790 LDR W8, [X0 + 0xE0]
	0x03AC9794 CBNZ W8, 0x3AC979C
	0x03AC9798 BL 0x1C16DFC
	0x03AC979C LDR W0, [X31 + 0x160]
	0x03AC97A0 MOVZ W8, 0x200B
	0x03AC97A4 MOV X1, X31
	0x03AC97A8 CMP W0, W8
	0x03AC97AC CSET W20, EQ
	0x03AC97B0 BL 0x3317FCC
	0x03AC97B4 LDR X8, [X22]
	0x03AC97B8 CBZ X8, 0x3ACA6A8
	0x03AC97BC LDR X8, [X8 + 0x38]
	0x03AC97C0 MOVZ W11, 0x178
	0x03AC97C4 CBZ X8, 0x3ACA6A8
	0x03AC97C8 LDR W9, [X8 + 0x18]
	0x03AC97CC ORR W10, W20, W0, 0x0
	0x03AC97D0 TBZ X10, 0x0, 0x3AC99DC
	0x03AC97D4 LDR X10, [X31 + 0x148]
	0x03AC97D8 CMP W10, W9
	0x03AC97DC MOV X9, X10
	0x03AC97E0 B.CC 0x3AC99E8
	0x03AC97E4 B 0x3ACA7B4
	0x03AC97E8 LDR X8, [X22]
	0x03AC97EC CBZ X8, 0x3ACA6A8
	0x03AC97F0 LDR X8, [X8 + 0x38]
	0x03AC97F4 CBZ X8, 0x3ACA6A8
	0x03AC97F8 LDR W9, [X8 + 0x18]
	0x03AC97FC CMP W25, W9
	0x03AC9800 B.CS 0x3ACA7B4
	0x03AC9804 MADD X8, X24, X12, X8
	0x03AC9808 LDR V0, [X8 + 0x160]
	0x03AC980C LDR V2, [X8 + 0x11C]
	0x03AC9810 LDR V3, [X8 + 0x60]
	0x03AC9814 LDR V1, [X8 + 0x14C]
	0x03AC9818 LDR W8, [X8 + 0x170]
	0x03AC981C STP S2, S0, [X31 + 0x88]
	0x03AC9820 FMUL S0, S11, S0
	0x03AC9824 STP S1, S3, [X31 + 0x30]
	0x03AC9828 FADD S3, S0, S1
	0x03AC982C FMOV S0, W31
	0x03AC9830 STR X8, [X31 + 0x90]
	0x03AC9834 STP S0, S3, [X31 + 0x74]
	0x03AC9838 LDR W8, [X23]
	0x03AC983C CMP W8, 0x1
	0x03AC9840 B.NE 0x3AC9880
	0x03AC9844 LDR X8, [X22]
	0x03AC9848 CBZ X8, 0x3ACA6A8
	0x03AC984C LDR X8, [X8 + 0x38]
	0x03AC9850 CBZ X8, 0x3ACA6A8
	0x03AC9854 LDR W9, [X8 + 0x18]
	0x03AC9858 CMP W25, W9
	0x03AC985C B.CS 0x3ACA7B4
	0x03AC9860 LDR X9, [X19]
	0x03AC9864 NOP
	0x03AC9868 MADD X8, X24, X12, X8
	0x03AC986C LDR V3, [X8 + 0x128]
	0x03AC9870 LDR V0, [X8 + 0x14C]
	0x03AC9874 LDR X8, [X9 + 0x908]
	0x03AC9878 LDR X3, [X9 + 0x910]
	0x03AC987C B 0x3AC9B00
	0x03AC9880 LDR X9, [X31 + 0xC8]
	0x03AC9884 CMP W25, W9
	0x03AC9888 B.NE 0x3AC98F0
	0x03AC988C ADRP X8, 0x62C000
	0x03AC9890 LDR X8, [X8 + 0x170]
	0x03AC9894 LDR X0, [X8]
	0x03AC9898 LDR W8, [X0 + 0xE0]
	0x03AC989C CBNZ W8, 0x3AC98A4
	0x03AC98A0 BL 0x1C16DFC
	0x03AC98A4 LDR W20, [X31 + 0x160]
	0x03AC98A8 MOV X1, X31
	0x03AC98AC MOV W0, W20
	0x03AC98B0 BL 0x3317FCC
	0x03AC98B4 LDR X8, [X22]
	0x03AC98B8 MOVZ W9, 0x200B
	0x03AC98BC CMP W20, W9
	0x03AC98C0 CSET W9, EQ
	0x03AC98C4 CBZ X8, 0x3ACA6A8
	0x03AC98C8 LDR X8, [X8 + 0x38]
	0x03AC98CC MOVZ W11, 0x178
	0x03AC98D0 CBZ X8, 0x3ACA6A8
	0x03AC98D4 LDR W10, [X8 + 0x18]
	0x03AC98D8 ORR W9, W9, W0, 0x0
	0x03AC98DC TBZ X9, 0x0, 0x3AC9A08
	0x03AC98E0 LDR X9, [X31 + 0x148]
	0x03AC98E4 CMP W9, W10
	0x03AC98E8 B.CC 0x3AC9A14
	0x03AC98EC B 0x3ACA7B4
	0x03AC98F0 CMP W25, W8
	0x03AC98F4 B.GE 0x3AC9968
	0x03AC98F8 LDR X8, [X22]
	0x03AC98FC CBZ X8, 0x3ACA6A8
	0x03AC9900 LDR X9, [X8 + 0x38]
	0x03AC9904 CBZ X9, 0x3ACA6A8
	0x03AC9908 LDR W10, [X9 + 0x18]
	0x03AC990C LDR W11, [X31 + 0x15C]
	0x03AC9910 CMP W11, W10
	0x03AC9914 B.CS 0x3ACA7B4
	0x03AC9918 ADD X9, X9, X28
	0x03AC991C SUB X10, X9, 0x108
	0x03AC9920 LDR V0, [X10]
	0x03AC9924 LDR V1, [X31 + 0x34]
	0x03AC9928 FCMP S0, S1
	0x03AC992C B.NE 0x3AC9AB0
	0x03AC9930 ADRP X8, 0x68F000
	0x03AC9934 LDR X8, [X8 + 0x340]
	0x03AC9938 LDUR V8, [X9 - 0x1C]
	0x03AC993C LDR X0, [X8]
	0x03AC9940 LDR W8, [X0 + 0xE0]
	0x03AC9944 CBNZ W8, 0x3AC994C
	0x03AC9948 BL 0x1C16DFC
	0x03AC994C LDR V0, [X31 + 0x12]
	0x03AC9950 LDR V1, [X31 + 0x30]
	0x03AC9954 MOV X0, X31
	0x03AC9958 FADD S0, S0, S8
	0x03AC995C BL 0x3ADB03C
	0x03AC9960 TBZ X0, 0x0, 0x3AC9AA4
	0x03AC9964 LDR W8, [X23]
	0x03AC9968 CMP W25, W8
	0x03AC996C B.GE 0x3AC99B4
	0x03AC9970 MOV X0, X27
	0x03AC9974 MOV X1, X31
	0x03AC9978 BL 0x3C385F8
	0x03AC997C LDR W8, [X21 + 0x18]
	0x03AC9980 LDR W9, [X31 + 0x15C]
	0x03AC9984 CMP W9, W8
	0x03AC9988 B.CS 0x3ACA7B4
	0x03AC998C ADD X8, X21, X28
	0x03AC9990 SUB X8, X8, 0x130
	0x03AC9994 MOV W27, W0
	0x03AC9998 LDR X0, [X8]
	0x03AC999C CBZ X0, 0x3ACA6A8
	0x03AC99A0 MOV X1, X31
	0x03AC99A4 BL 0x3C385F8
	0x03AC99A8 CMP W27, W0
	0x03AC99AC MOVZ W10, 0x178
	0x03AC99B0 B.NE 0x3AC9A78
	0x03AC99B4 TBZ X20, 0x0, 0x3AC9A38
	0x03AC99B8 MOVZ W8, 0x1
	0x03AC99BC STR W8, [X31 + 0x100]
	0x03AC99C0 B 0x3AC9B40
	0x03AC99C4 LDR X8, [X22]
	0x03AC99C8 CBZ X8, 0x3ACA6A8
	0x03AC99CC LDR X8, [X8 + 0x38]
	0x03AC99D0 CBZ X8, 0x3ACA6A8
	0x03AC99D4 LDR W9, [X8 + 0x18]
	0x03AC99D8 B 0x3AC8FC0
	0x03AC99DC CMP W25, W9
	0x03AC99E0 MOV X9, X24
	0x03AC99E4 B.CS 0x3ACA7B4
	0x03AC99E8 LDR X10, [X19]
	0x03AC99EC NOP
	0x03AC99F0 MADD X8, X9, X11, X8
	0x03AC99F4 LDR V3, [X8 + 0x128]
	0x03AC99F8 LDR V7, [X8 + 0x160]
	0x03AC99FC LDR X8, [X10 + 0x908]
	0x03AC9A00 LDR X3, [X10 + 0x910]
	0x03AC9A04 B 0x3AC9524
	0x03AC9A08 CMP W25, W10
	0x03AC9A0C MOV X9, X24
	0x03AC9A10 B.CS 0x3ACA7B4
	0x03AC9A14 LDR X10, [X19]
	0x03AC9A18 NOP
	0x03AC9A1C MADD X8, X9, X11, X8
	0x03AC9A20 B 0x3AC9AF0
	0x03AC9A24 STR W31, [X31 + 0xF8]
	0x03AC9A28 B 0x3AC8F90
	0x03AC9A2C MOVZ W8, 0x1
	0x03AC9A30 STR W8, [X31 + 0x104]
	0x03AC9A34 B 0x3AC9588
	0x03AC9A38 LDR X8, [X22]
	0x03AC9A3C CBZ X8, 0x3ACA6A8
	0x03AC9A40 LDR X8, [X8 + 0x38]
	0x03AC9A44 CBZ X8, 0x3ACA6A8
	0x03AC9A48 LDR W10, [X31 + 0x15C]
	0x03AC9A4C LDR W9, [X8 + 0x18]
	0x03AC9A50 SUB W10, W10, 0x2
	0x03AC9A54 CMP W10, W9
	0x03AC9A58 B.CS 0x3ACA7B4
	0x03AC9A5C ADD X8, X8, X28
	0x03AC9A60 SUB X10, X8, 0x330
	0x03AC9A64 SUB X8, X8, 0x30C
	0x03AC9A68 LDR X9, [X19]
	0x03AC9A6C LDR V3, [X10]
	0x03AC9A70 LDR V0, [X8]
	0x03AC9A74 B 0x3AC9874
	0x03AC9A78 LDR X8, [X22]
	0x03AC9A7C CBZ X8, 0x3ACA6A8
	0x03AC9A80 LDR X8, [X8 + 0x38]
	0x03AC9A84 CBZ X8, 0x3ACA6A8
	0x03AC9A88 LDR W9, [X8 + 0x18]
	0x03AC9A8C CMP W25, W9
	0x03AC9A90 B.CS 0x3ACA7B4
	0x03AC9A94 LDR X9, [X19]
	0x03AC9A98 NOP
	0x03AC9A9C MADD X8, X24, X10, X8
	0x03AC9AA0 B 0x3AC986C
	0x03AC9AA4 LDR X8, [X22]
	0x03AC9AA8 MOVZ W12, 0x178
	0x03AC9AAC CBZ X8, 0x3ACA6A8
	0x03AC9AB0 LDR X8, [X8 + 0x38]
	0x03AC9AB4 CBZ X8, 0x3ACA6A8
	0x03AC9AB8 LDR X10, [X31 + 0x148]
	0x03AC9ABC LDR W9, [X8 + 0x18]
	0x03AC9AC0 CMP W25, W10
	0x03AC9AC4 B.LE 0x3AC9AD8
	0x03AC9AC8 CMP W10, W9
	0x03AC9ACC MOV X9, X10
	0x03AC9AD0 B.CC 0x3AC9AE4
	0x03AC9AD4 B 0x3ACA7B4
	0x03AC9AD8 CMP W25, W9
	0x03AC9ADC MOV X9, X24
	0x03AC9AE0 B.CS 0x3ACA7B4
	0x03AC9AE4 LDR X10, [X19]
	0x03AC9AE8 NOP
	0x03AC9AEC MADD X8, X9, X12, X8
	0x03AC9AF0 LDR V0, [X8 + 0x14C]
	0x03AC9AF4 LDR V3, [X8 + 0x128]
	0x03AC9AF8 LDR X8, [X10 + 0x908]
	0x03AC9AFC LDR X3, [X10 + 0x910]
	0x03AC9B00 LDR V6, [X31 + 0x8C]
	0x03AC9B04 FMUL S1, S11, S6
	0x03AC9B08 LDR X9, [X31 + 0x90]
	0x03AC9B0C FADD S4, S1, S0
	0x03AC9B10 LDR V0, [X31 + 0x88]
	0x03AC9B14 LDP S2, S1, [X31 + 0x74]
	0x03AC9B18 ADD X1, X31, 0x1000
	0x03AC9B1C MOV W2, W9
	0x03AC9B20 FMOV S5, W31
	0x03AC9B24 ADD X1, X1, 0x64
	0x03AC9B28 MOV X0, X19
	0x03AC9B2C MOV V7.16B, V6.16B
	0x03AC9B30 STR S14, [X31 + 0x8]
	0x03AC9B34 STR S6, [X31]
	0x03AC9B38 BLR X8
	0x03AC9B3C STR W31, [X31 + 0x100]
	0x03AC9B40 LDR X8, [X22]
	0x03AC9B44 CBZ X8, 0x3ACA6A8
	0x03AC9B48 LDR X8, [X8 + 0x38]
	0x03AC9B4C MOVZ W12, 0x178
	0x03AC9B50 CBZ X8, 0x3ACA6A8
	0x03AC9B54 LDR X9, [X8 + 0x18]
	0x03AC9B58 CMP W25, W9
	0x03AC9B5C B.CS 0x3ACA7B4
	0x03AC9B60 MADD X10, X24, X12, X8
	0x03AC9B64 LDRB W10, [X10 + 0x191]
	0x03AC9B68 TBNZ X10, 0x1, 0x3AC9BB8
	0x03AC9B6C LDR W8, [X31 + 0xF4]
	0x03AC9B70 TBZ X8, 0x0, 0x3AC9BA8
	0x03AC9B74 LDR X8, [X19]
	0x03AC9B78 LDP S2, S3, [X31 + 0xAC]
	0x03AC9B7C LDR W2, [X31 + 0x1050]
	0x03AC9B80 LDP S0, S1, [X31 + 0xC0]
	0x03AC9B84 LDR X9, [X8 + 0x918]
	0x03AC9B88 LDR X3, [X8 + 0x920]
	0x03AC9B8C LDR V4, [X31 + 0xB8]
	0x03AC9B90 ADD X1, X31, 0x1000
	0x03AC9B94 ADD X1, X1, 0x64
	0x03AC9B98 MOV X0, X19
	0x03AC9B9C MOV V5.16B, V2.16B
	0x03AC9BA0 BLR X9
	0x03AC9BA4 MOVZ W12, 0x178
	0x03AC9BA8 STR W31, [X31 + 0xF4]
	0x03AC9BAC LDR W24, [X31 + 0x15C]
	0x03AC9BB0 LDR X27, [X31 + 0x168]
	0x03AC9BB4 B 0x3AC9ED4
	0x03AC9BB8 LDR W10, [X19 + 0x328]
	0x03AC9BBC CMP W25, W10
	0x03AC9BC0 B.GT 0x3AC9BD4
	0x03AC9BC4 LDR W10, [X19 + 0x330]
	0x03AC9BC8 LDR X11, [X31 + 0x168]
	0x03AC9BCC CMP W11, W10
	0x03AC9BD0 B.LE 0x3AC9EFC
	0x03AC9BD4 MOV W20, W31
	0x03AC9BD8 LDR W10, [X31 + 0xF4]
	0x03AC9BDC TBZ X10, 0x0, 0x3AC9BE8
	0x03AC9BE0 ADD X13, X31, 0xFA0
	0x03AC9BE4 B 0x3AC9CC8
	0x03AC9BE8 LDR W8, [X31 + 0x160]
	0x03AC9BEC MOV W9, W31
	0x03AC9BF0 CMP W8, 0xD
	0x03AC9BF4 B.EQ 0x3AC9F28
	0x03AC9BF8 AND W8, W8, 0xFFFE
	0x03AC9BFC CMP W8, 0xA
	0x03AC9C00 B.EQ 0x3AC9F28
	0x03AC9C04 LDR X8, [X31 + 0x148]
	0x03AC9C08 CMP W25, W8
	0x03AC9C0C B.GT 0x3AC9F28
	0x03AC9C10 EOR W8, W20, 0x1
	0x03AC9C14 TBNZ X8, 0x0, 0x3AC9F28
	0x03AC9C18 LDR X8, [X31 + 0x148]
	0x03AC9C1C CMP W25, W8
	0x03AC9C20 B.NE 0x3AC9C50
	0x03AC9C24 ADRP X8, 0x62C000
	0x03AC9C28 LDR X8, [X8 + 0x170]
	0x03AC9C2C LDR X0, [X8]
	0x03AC9C30 LDR W8, [X0 + 0xE0]
	0x03AC9C34 CBNZ W8, 0x3AC9C3C
	0x03AC9C38 BL 0x1C16DFC
	0x03AC9C3C LDR W0, [X31 + 0x160]
	0x03AC9C40 MOV X1, X31
	0x03AC9C44 BL 0x331BAF4
	0x03AC9C48 MOVZ W12, 0x178
	0x03AC9C4C TBNZ X0, 0x0, 0x3AC9BA8
	0x03AC9C50 LDR X0, [X29]
	0x03AC9C54 LDR W8, [X0 + 0xE0]
	0x03AC9C58 CBNZ W8, 0x3AC9C68
	0x03AC9C5C BL 0x1C16DFC
	0x03AC9C60 LDR X0, [X29]
	0x03AC9C64 MOVZ W12, 0x178
	0x03AC9C68 LDR X8, [X22]
	0x03AC9C6C ADD X13, X31, 0xFA0
	0x03AC9C70 CBZ X8, 0x3ACA6A8
	0x03AC9C74 LDR X8, [X8 + 0x38]
	0x03AC9C78 CBZ X8, 0x3ACA6A8
	0x03AC9C7C LDR X9, [X8 + 0x18]
	0x03AC9C80 CMP W25, W9
	0x03AC9C84 B.CS 0x3ACA7B4
	0x03AC9C88 LDR X10, [X0 + 0xB8]
	0x03AC9C8C NOP
	0x03AC9C90 MADD X11, X24, X12, X8
	0x03AC9C94 ADD X11, X11, 0x17C
	0x03AC9C98 LDR V0, [X11]
	0x03AC9C9C LDR V2, [X10 + 0x1598]
	0x03AC9CA0 LDR V1, [X10 + 0x159C]
	0x03AC9CA4 LDR W11, [X11 + 0x10]
	0x03AC9CA8 STP S2, S1, [X31 + 0xC0]
	0x03AC9CAC LDR V2, [X10 + 0x15A0]
	0x03AC9CB0 LDR V1, [X10 + 0x15A4]
	0x03AC9CB4 STR V0, [X13 + 0xB]
	0x03AC9CB8 FMOV S0, W31
	0x03AC9CBC STR W11, [X31 + 0x1060]
	0x03AC9CC0 STR S1, [X31 + 0xB8]
	0x03AC9CC4 STP S0, S2, [X31 + 0xAC]
	0x03AC9CC8 CMP W25, W9
	0x03AC9CCC B.CS 0x3ACA7B4
	0x03AC9CD0 MADD X8, X24, X12, X8
	0x03AC9CD4 ADD X10, X8, 0x17C
	0x03AC9CD8 MOV V9.16B, V14.16B
	0x03AC9CDC LDR V0, [X13 + 0xB]
	0x03AC9CE0 LDR W9, [X31 + 0x1060]
	0x03AC9CE4 LDR V1, [X8 + 0x128]
	0x03AC9CE8 LDR V12, [X8 + 0x188]
	0x03AC9CEC LDR X21, [X10]
	0x03AC9CF0 LDR V14, [X10 + 0x8]
	0x03AC9CF4 LDR V13, [X10 + 0x10]
	0x03AC9CF8 LDR V10, [X8 + 0x11C]
	0x03AC9CFC LDR V8, [X8 + 0x148]
	0x03AC9D00 LDR V11, [X8 + 0x150]
	0x03AC9D04 ADD X0, X31, 0x190
	0x03AC9D08 ADD X1, X31, 0x178
	0x03AC9D0C MOV X2, X31
	0x03AC9D10 STR S1, [X31 + 0x160]
	0x03AC9D14 STR V0, [X31 + 0x19]
	0x03AC9D18 STR W9, [X31 + 0x1A0]
	0x03AC9D1C STR X21, [X31 + 0x178]
	0x03AC9D20 STR S14, [X31 + 0x180]
	0x03AC9D24 STR S12, [X31 + 0x184]
	0x03AC9D28 STR S13, [X31 + 0x188]
	0x03AC9D2C BL 0x3ADBEC4
	0x03AC9D30 ADRP X8, 0x68F000
	0x03AC9D34 LDR X8, [X8 + 0x350]
	0x03AC9D38 LDR X8, [X8]
	0x03AC9D3C LDR W9, [X8 + 0xE0]
	0x03AC9D40 TBZ X0, 0x0, 0x3AC9DEC
	0x03AC9D44 LDR W24, [X31 + 0x15C]
	0x03AC9D48 LDR X27, [X31 + 0x168]
	0x03AC9D4C CBNZ W9, 0x3AC9D58
	0x03AC9D50 MOV X0, X8
	0x03AC9D54 BL 0x1C16DFC
	0x03AC9D58 LDR V0, [X31 + 0x1058]
	0x03AC9D5C LDR V2, [X31 + 0xB0]
	0x03AC9D60 LDR V1, [X31 + 0xC4]
	0x03AC9D64 LDR X8, [X19]
	0x03AC9D68 LDR W2, [X31 + 0x1050]
	0x03AC9D6C FSUB S0, S2, S0
	0x03AC9D70 FADD S0, S10, S0
	0x03AC9D74 FMOV S2, 0.5
	0x03AC9D78 FMUL S10, S0, S2
	0x03AC9D7C LDR V0, [X31 + 0xB8]
	0x03AC9D80 FCMP S1, S11
	0x03AC9D84 FCSEL S1, S1, S11, MI
	0x03AC9D88 LDR V2, [X31 + 0xAC]
	0x03AC9D8C FCMP S0, S8
	0x03AC9D90 LDR X9, [X8 + 0x918]
	0x03AC9D94 LDR X3, [X8 + 0x920]
	0x03AC9D98 FCSEL S4, S0, S8, GT
	0x03AC9D9C LDR V0, [X31 + 0xC0]
	0x03AC9DA0 ADD X1, X31, 0x1000
	0x03AC9DA4 ADD X1, X1, 0x64
	0x03AC9DA8 MOV X0, X19
	0x03AC9DAC MOV V3.16B, V10.16B
	0x03AC9DB0 MOV V5.16B, V2.16B
	0x03AC9DB4 BLR X9
	0x03AC9DB8 FSUB S0, S11, S13
	0x03AC9DBC STP S10, S0, [X31 + 0xC0]
	0x03AC9DC0 LDR V0, [X31 + 0x160]
	0x03AC9DC4 STR X21, [X31 + 0x1050]
	0x03AC9DC8 STR S14, [X31 + 0x1058]
	0x03AC9DCC STR S12, [X31 + 0x105C]
	0x03AC9DD0 FADD S6, S0, S14
	0x03AC9DD4 FADD S0, S8, S12
	0x03AC9DD8 STR S0, [X31 + 0xB8]
	0x03AC9DDC FMOV S0, W31
	0x03AC9DE0 STR S13, [X31 + 0x1060]
	0x03AC9DE4 STP S0, S6, [X31 + 0xAC]
	0x03AC9DE8 B 0x3AC9E60
	0x03AC9DEC LDR W24, [X31 + 0x15C]
	0x03AC9DF0 LDR X27, [X31 + 0x168]
	0x03AC9DF4 CBNZ W9, 0x3AC9E00
	0x03AC9DF8 MOV X0, X8
	0x03AC9DFC BL 0x1C16DFC
	0x03AC9E00 LDR V2, [X31 + 0x1058]
	0x03AC9E04 LDR V4, [X31 + 0x160]
	0x03AC9E08 LDR V0, [X31 + 0x1054]
	0x03AC9E0C LDR V1, [X31 + 0x1060]
	0x03AC9E10 LDR V3, [X31 + 0x105C]
	0x03AC9E14 FADD S2, S4, S2
	0x03AC9E18 LDR V4, [X31 + 0xC0]
	0x03AC9E1C FSUB S0, S10, S0
	0x03AC9E20 FSUB S1, S11, S1
	0x03AC9E24 FADD S3, S8, S3
	0x03AC9E28 FCMP S4, S0
	0x03AC9E2C FCSEL S4, S4, S0, MI
	0x03AC9E30 LDR V0, [X31 + 0xC4]
	0x03AC9E34 FCMP S0, S1
	0x03AC9E38 FCSEL S0, S0, S1, MI
	0x03AC9E3C STP S4, S0, [X31 + 0xC0]
	0x03AC9E40 LDR V0, [X31 + 0xB0]
	0x03AC9E44 FCMP S0, S2
	0x03AC9E48 FCSEL S0, S0, S2, GT
	0x03AC9E4C STR S0, [X31 + 0xB0]
	0x03AC9E50 LDR V0, [X31 + 0xB8]
	0x03AC9E54 FCMP S0, S3
	0x03AC9E58 FCSEL S0, S0, S3, GT
	0x03AC9E5C STR S0, [X31 + 0xB8]
	0x03AC9E60 LDR W8, [X23]
	0x03AC9E64 LDR X21, [X31 + 0x140]
	0x03AC9E68 MOV V14.16B, V9.16B
	0x03AC9E6C CMP W8, 0x1
	0x03AC9E70 B.EQ 0x3AC9E9C
	0x03AC9E74 LDR X8, [X31 + 0xC8]
	0x03AC9E78 CMP W25, W8
	0x03AC9E7C B.EQ 0x3AC9E9C
	0x03AC9E80 LDR X8, [X31 + 0x148]
	0x03AC9E84 CMP W25, W8
	0x03AC9E88 B.GE 0x3AC9E9C
	0x03AC9E8C TBZ X20, 0x0, 0x3AC9E9C
	0x03AC9E90 MOVZ W8, 0x1
	0x03AC9E94 STR W8, [X31 + 0xF4]
	0x03AC9E98 B 0x3AC9ED0
	0x03AC9E9C LDR X8, [X19]
	0x03AC9EA0 LDP S2, S3, [X31 + 0xAC]
	0x03AC9EA4 LDR W2, [X31 + 0x1050]
	0x03AC9EA8 LDP S0, S1, [X31 + 0xC0]
	0x03AC9EAC LDR X9, [X8 + 0x918]
	0x03AC9EB0 LDR X3, [X8 + 0x920]
	0x03AC9EB4 LDR V4, [X31 + 0xB8]
	0x03AC9EB8 ADD X1, X31, 0x1000
	0x03AC9EBC ADD X1, X1, 0x64
	0x03AC9EC0 MOV X0, X19
	0x03AC9EC4 MOV V5.16B, V2.16B
	0x03AC9EC8 BLR X9
	0x03AC9ECC STR W31, [X31 + 0xF4]
	0x03AC9ED0 MOVZ W12, 0x178
	0x03AC9ED4 LDR W8, [X23]
	0x03AC9ED8 LDR W9, [X31 + 0xFC]
	0x03AC9EDC ADD W10, W24, 0x1
	0x03AC9EE0 ADD X28, X28, 0x178
	0x03AC9EE4 CMP W24, W8
	0x03AC9EE8 ADD W9, W9, 0x1
	0x03AC9EEC MOV W20, W27
	0x03AC9EF0 STR W9, [X31 + 0xFC]
	0x03AC9EF4 B.LT 0x3AC8024
	0x03AC9EF8 B 0x3ACA0CC
	0x03AC9EFC LDR W10, [X19 + 0x2E0]
	0x03AC9F00 CMP W10, 0x5
	0x03AC9F04 B.NE 0x3AC9F20
	0x03AC9F08 MADD X10, X24, X12, X8
	0x03AC9F0C LDR W10, [X10 + 0x68]
	0x03AC9F10 LDR W11, [X19 + 0x338]
	0x03AC9F14 ADD W10, W10, 0x1
	0x03AC9F18 CMP W10, W11
	0x03AC9F1C B.NE 0x3AC9BD4
	0x03AC9F20 MOVZ W20, 0x1
	0x03AC9F24 B 0x3AC9BD8
	0x03AC9F28 STR W9, [X31 + 0xF4]
	0x03AC9F2C B 0x3AC9BAC
	0x03AC9F30 LDR X8, [X22]
	0x03AC9F34 MOVZ W10, 0x178
	0x03AC9F38 CBZ X8, 0x3ACA6A8
	0x03AC9F3C LDR X8, [X8 + 0x38]
	0x03AC9F40 CBZ X8, 0x3ACA6A8
	0x03AC9F44 LDR W9, [X8 + 0x18]
	0x03AC9F48 CMP W25, W9
	0x03AC9F4C B.CS 0x3ACA7B4
	0x03AC9F50 LDR X9, [X19]
	0x03AC9F54 LDP S0, S4, [X31 + 0xE0]
	0x03AC9F58 NOP
	0x03AC9F5C MADD X8, X24, X10, X8
	0x03AC9F60 LDR V3, [X8 + 0x128]
	0x03AC9F64 LDR V7, [X8 + 0x160]
	0x03AC9F68 LDR X8, [X9 + 0x908]
	0x03AC9F6C LDR X3, [X9 + 0x910]
	0x03AC9F70 STR S0, [X31 + 0x8]
	0x03AC9F74 LDP S2, S0, [X31 + 0x5C]
	0x03AC9F78 LDR V1, [X31 + 0x58]
	0x03AC9F7C LDR V6, [X31 + 0x64]
	0x03AC9F80 ADD X1, X31, 0x1000
	0x03AC9F84 FMOV S5, W31
	0x03AC9F88 ADD X1, X1, 0x64
	0x03AC9F8C MOV X0, X19
	0x03AC9F90 MOV X2, X28
	0x03AC9F94 STR S15, [X31]
	0x03AC9F98 BLR X8
	0x03AC9F9C LDR X0, [X29]
	0x03AC9FA0 LDR W8, [X0 + 0xE0]
	0x03AC9FA4 CBNZ W8, 0x3AC9FB0
	0x03AC9FA8 BL 0x1C16DFC
	0x03AC9FAC LDR X0, [X29]
	0x03AC9FB0 LDR X28, [X31 + 0x108]
	0x03AC9FB4 B 0x3AC956C
	0x03AC9FB8 LDR X10, [X31 + 0x140]
	0x03AC9FBC LDRB W8, [X19 + 0xF0]
	0x03AC9FC0 LDR X11, [X31 + 0xC8]
	0x03AC9FC4 LDR W29, [X31 + 0x160]
	0x03AC9FC8 LDR W9, [X10 + 0x18]
	0x03AC9FCC FNEG S0, S10
	0x03AC9FD0 CMP W8, 0x0
	0x03AC9FD4 FCSEL S0, S0, S10, EQ
	0x03AC9FD8 CMP W11, W9
	0x03AC9FDC B.CS 0x3ACA7B4
	0x03AC9FE0 MADD X9, X11, X12, X10
	0x03AC9FE4 LDR W10, [X31 + 0x20]
	0x00000000 INVALID
	0x03AC9FEC SBFM W10, W10, 0x0, 0x0
	0x03AC9FF0 SUB W10, W10, W22
	0x03AC9FF4 ADD W10, W10, W21
	0x03AC9FF8 ADD W9, W9, W10
	0x03AC9FFC SUB W21, W9, 0x1
	0x03ACA000 CMP W21, 0x1
	0x03ACA004 B.LT 0x3ACA010
	0x03ACA008 LDR V10, [X19 + 0x2DC]
	0x03ACA00C B 0x3ACA018
	0x03ACA010 FMOV S10, 1
	0x03ACA014 MOVZ W21, 0x1
	0x03ACA018 CMP W29, 0x9
	0x03ACA01C FADD S11, S11, S0
	0x03ACA020 B.EQ 0x3ACA068
	0x03ACA024 CMP W29, 0xA0
	0x03ACA028 B.EQ 0x3ACA07C
	0x03ACA02C ADRP X8, 0x62B000
	0x03ACA030 LDR X8, [X8 + 0x170]
	0x03ACA034 LDR X0, [X8]
	0x03ACA038 LDR W8, [X0 + 0xE0]
	0x03ACA03C CBNZ W8, 0x3ACA044
	0x03ACA040 BL 0x1C16DFC
	0x03ACA044 MOV W0, W29
	0x03ACA048 MOV X1, X31
	0x03ACA04C BL 0x331BAF4
	0x03ACA050 LDRB W8, [X19 + 0xF0]
	0x03ACA054 LDR V3, [X31 + 0x120]
	0x03ACA058 LDR V4, [X31 + 0x110]
	0x03ACA05C LDR V5, [X31 + 0x2C]
	0x03ACA060 MOVZ W12, 0x178
	0x03ACA064 TBZ X0, 0x0, 0x3ACA07C
	0x03ACA068 FMOV S0, 1
	0x03ACA06C FSUB S0, S0, S10
	0x03ACA070 FMUL S0, S11, S0
	0x03ACA074 SCVTF S1, W21
	0x03ACA078 B 0x3ACA098
	0x03ACA07C LDR W9, [X31 + 0x20]
	0x03ACA080 FMUL S0, S11, S10
	0x03ACA084 ORN W9, W31, W9, 0x0
	0x03ACA088 AND W9, W9, 0x1
	0x03ACA08C SUB W9, W22, W9
	0x03ACA090 ADD W9, W9, W27
	0x03ACA094 SCVTF S1, W9
	0x03ACA098 FDIV S0, S0, S1
	0x03ACA09C CBZ W8, 0x3ACA0B0
	0x03ACA0A0 LDR V1, [X31 + 0xDC]
	0x03ACA0A4 FSUB S1, S1, S0
	0x03ACA0A8 STR S1, [X31 + 0xDC]
	0x03ACA0AC B 0x3AC8240
	0x03ACA0B0 LDR V1, [X31 + 0xDC]
	0x03ACA0B4 FADD S1, S1, S0
	0x03ACA0B8 LDR V0, [X31 + 0xD0]
	0x03ACA0BC STR S1, [X31 + 0xDC]
	0x03ACA0C0 MOVI D1, 0x0
	0x03ACA0C4 FADD V0.2S, V0.2S, V1.2S
	0x03ACA0C8 B 0x3AC823C
	0x03ACA0CC LDR X9, [X22]
	0x03ACA0D0 CBZ X9, 0x3ACA6A8
	0x03ACA0D4 ADRP X26, 0x68E000
	0x03ACA0D8 LDR X26, [X26 + 0x348]
	0x03ACA0DC LDR W11, [X31 + 0xBC]
	0x03ACA0E0 ADD W10, W27, 0x1
	0x03ACA0E4 B 0x3ACA0F0
	0x03ACA0E8 MOV W11, W31
	0x03ACA0EC MOV W10, W31
	0x03ACA0F0 STR W8, [X9 + 0x18]
	0x03ACA0F4 CMP W8, 0x1
	0x03ACA0F8 LDR W8, [X19 + 0x6A0]
	0x03ACA0FC CCMP W11, 0x0, 0x4, GE
	0x03ACA100 STR W10, [X9 + 0x2C]
	0x03ACA104 CSINC W10, W11, W31, NE
	0x03ACA108 STR W8, [X9 + 0x1C]
	0x03ACA10C STR W10, [X9 + 0x24]
	0x03ACA110 LDR W8, [X19 + 0x4B0]
	0x03ACA114 ADD W8, W8, 0x1
	0x03ACA118 STR W8, [X9 + 0x30]
	0x03ACA11C LDR W8, [X19 + 0x318]
	0x03ACA120 CMP W8, 0xFF
	0x03ACA124 B.NE 0x3AC7904
	0x03ACA128 LDR X8, [X19]
	0x03ACA12C MOV X0, X19
	0x03ACA130 LDP X9, X1, [X8 + 0x1C8]
	0x03ACA134 BLR X9
	0x03ACA138 TBZ X0, 0x0, 0x3AC7904
	0x03ACA13C LDR X8, [X19 + 0x6F8]
	0x03ACA140 CBZ X8, 0x3ACA158
	0x03ACA144 LDR X1, [X22]
	0x03ACA148 LDR X9, [X8 + 0x18]
	0x03ACA14C LDR X0, [X8 + 0x40]
	0x03ACA150 LDR X2, [X8 + 0x28]
	0x03ACA154 BLR X9
	0x03ACA158 LDR X0, [X19 + 0x728]
	0x03ACA15C CBZ X0, 0x3ACA6A8
	0x03ACA160 MOV X1, X31
	0x03ACA164 BL 0x3E24AA4
	0x03ACA168 CMP W0, 0x19
	0x03ACA16C B.EQ 0x3ACA198
	0x03ACA170 LDR X20, [X19 + 0x728]
	0x03ACA174 CBZ X20, 0x3ACA6A8
	0x03ACA178 MOV X0, X20
	0x03ACA17C MOV X1, X31
	0x03ACA180 BL 0x3E24AA4
	0x03ACA184 MOVZ W8, 0x19
	0x03ACA188 ORR W1, W0, W8, 0x0
	0x03ACA18C MOV X0, X20
	0x03ACA190 MOV X2, X31
	0x03ACA194 BL 0x3E24AE0
	0x03ACA198 LDR W8, [X19 + 0x31C]
	0x03ACA19C CBZ W8, 0x3ACA1D8
	0x03ACA1A0 LDR X8, [X22]
	0x03ACA1A4 CBZ X8, 0x3ACA6A8
	0x03ACA1A8 LDR X20, [X8 + 0x60]
	0x03ACA1AC CBZ X20, 0x3ACA6A8
	0x03ACA1B0 LDR X0, [X26]
	0x03ACA1B4 LDR W8, [X0 + 0xE0]
	0x03ACA1B8 CBNZ W8, 0x3ACA1C0
	0x03ACA1BC BL 0x1C16DFC
	0x03ACA1C0 LDR W8, [X20 + 0x18]
	0x03ACA1C4 CBZ W8, 0x3ACA7B4
	0x03ACA1C8 ADD X0, X20, 0x20
	0x03ACA1CC MOVZ W1, 0x1
	0x03ACA1D0 MOV X2, X31
	0x03ACA1D4 BL 0x3B12C2C
	0x03ACA1D8 LDR X0, [X19 + 0x3A0]
	0x03ACA1DC CBZ X0, 0x3ACA6A8
	0x03ACA1E0 MOV X1, X31
	0x03ACA1E4 BL 0x3C19FC8
	0x03ACA1E8 LDR X8, [X19 + 0x368]
	0x03ACA1EC CBZ X8, 0x3ACA6A8
	0x03ACA1F0 LDR X8, [X8 + 0x60]
	0x03ACA1F4 CBZ X8, 0x3ACA6A8
	0x03ACA1F8 LDR W9, [X8 + 0x18]
	0x03ACA1FC CBZ W9, 0x3ACA7B4
	0x03ACA200 LDR X0, [X19 + 0x3A0]
	0x03ACA204 CBZ X0, 0x3ACA6A8
	0x03ACA208 LDR X1, [X8 + 0x30]
	0x03ACA20C MOV X2, X31
	0x03ACA210 BL 0x3C17F08
	0x03ACA214 LDR X8, [X19 + 0x368]
	0x03ACA218 CBZ X8, 0x3ACA6A8
	0x03ACA21C LDR X8, [X8 + 0x60]
	0x03ACA220 CBZ X8, 0x3ACA6A8
	0x03ACA224 LDR W9, [X8 + 0x18]
	0x03ACA228 CBZ W9, 0x3ACA7B4
	0x03ACA22C LDR X0, [X19 + 0x3A0]
	0x03ACA230 CBZ X0, 0x3ACA6A8
	0x03ACA234 LDR X1, [X8 + 0x48]
	0x03ACA238 MOV X2, X31
	0x03ACA23C BL 0x3C1810C
	0x03ACA240 LDR X8, [X19 + 0x368]
	0x03ACA244 CBZ X8, 0x3ACA6A8
	0x03ACA248 LDR X8, [X8 + 0x60]
	0x03ACA24C CBZ X8, 0x3ACA6A8
	0x03ACA250 LDR W9, [X8 + 0x18]
	0x03ACA254 CBZ W9, 0x3ACA7B4
	0x03ACA258 LDR X0, [X19 + 0x3A0]
	0x03ACA25C CBZ X0, 0x3ACA6A8
	0x03ACA260 LDR X1, [X8 + 0x50]
	0x03ACA264 MOV X2, X31
	0x03ACA268 BL 0x3C181B8
	0x03ACA26C LDR X8, [X19 + 0x368]
	0x03ACA270 CBZ X8, 0x3ACA6A8
	0x03ACA274 LDR X8, [X8 + 0x60]
	0x03ACA278 CBZ X8, 0x3ACA6A8
	0x03ACA27C LDR W9, [X8 + 0x18]
	0x03ACA280 CBZ W9, 0x3ACA7B4
	0x03ACA284 LDR X0, [X19 + 0x3A0]
	0x03ACA288 CBZ X0, 0x3ACA6A8
	0x03ACA28C LDR X1, [X8 + 0x58]
	0x03ACA290 MOV X2, X31
	0x03ACA294 BL 0x3C18318
	0x03ACA298 LDR X0, [X19 + 0x3A0]
	0x03ACA29C CBZ X0, 0x3ACA6A8
	0x03ACA2A0 MOV X1, X31
	0x03ACA2A4 BL 0x3C19CD4
	0x03ACA2A8 LDR X0, [X19 + 0x720]
	0x03ACA2AC CBZ X0, 0x3ACA6A8
	0x03ACA2B0 LDR X1, [X19 + 0x3A0]
	0x03ACA2B4 MOV X2, X31
	0x03ACA2B8 BL 0x3E22AB0
	0x03ACA2BC LDR X0, [X19 + 0x720]
	0x03ACA2C0 CBZ X0, 0x3ACA6A8
	0x03ACA2C4 MOV X1, X31
	0x03ACA2C8 BL 0x3E22740
	0x03ACA2CC LDR X0, [X19 + 0x720]
	0x03ACA2D0 CBZ X0, 0x3ACA6A8
	0x03ACA2D4 MOV X1, X31
	0x03ACA2D8 MOV V8.16B, V0.16B
	0x03ACA2DC MOV V9.16B, V1.16B
	0x03ACA2E0 MOV V10.16B, V2.16B
	0x03ACA2E4 MOV V11.16B, V3.16B
	0x03ACA2E8 BL 0x3E225A8
	0x03ACA2EC LDR X8, [X22]
	0x03ACA2F0 CBZ X8, 0x3ACA6A8
	0x03ACA2F4 MOV X23, X31
	0x03ACA2F8 MOV X24, X31
	0x03ACA2FC AND W20, W0, 0x1
	0x03ACA300 LDRSW X9, [X8 + 0x34]
	0x03ACA304 ADD X25, X24, 0x1
	0x03ACA308 CMP X25, X9
	0x03ACA30C B.GE 0x3AC7904
	0x03ACA310 LDR X21, [X8 + 0x60]
	0x03ACA314 CBZ X21, 0x3ACA6A8
	0x03ACA318 LDR X0, [X26]
	0x03ACA31C LDR W8, [X0 + 0xE0]
	0x03ACA320 CBNZ W8, 0x3ACA328
	0x03ACA324 BL 0x1C16DFC
	0x03ACA328 LDR W8, [X21 + 0x18]
	0x03ACA32C CMP X25, X8
	0x03ACA330 B.CS 0x3ACA7B4
	0x03ACA334 ADD X8, X21, X23
	0x03ACA338 ADD X0, X8, 0x70
	0x03ACA33C MOV X1, X31
	0x03ACA340 BL 0x3B12AF8
	0x03ACA344 LDR X8, [X19 + 0x708]
	0x03ACA348 CBZ X8, 0x3ACA6A8
	0x03ACA34C LDR W9, [X8 + 0x18]
	0x03ACA350 CMP X25, X9
	0x03ACA354 B.CS 0x3ACA7B4
	0x03ACA358 ADRP X9, 0x629000
	0x03ACA35C LDR X9, [X9 + 0x598]
	0x03ACA360 ADD X8, X8, X24, 0x3, LSL
	0x03ACA364 LDR X21, [X8 + 0x28]
	0x03ACA368 LDR X0, [X9]
	0x03ACA36C LDR W9, [X0 + 0xE0]
	0x03ACA370 CBNZ W9, 0x3ACA378
	0x03ACA374 BL 0x1C16DFC
	0x03ACA378 MOV X0, X21
	0x03ACA37C MOV X1, X31
	0x03ACA380 MOV X2, X31
	0x03ACA384 BL 0x3C3883C
	0x03ACA388 TBNZ X0, 0x0, 0x3ACA698
	0x03ACA38C LDR W8, [X19 + 0x31C]
	0x03ACA390 CBZ W8, 0x3ACA3D4
	0x03ACA394 LDR X8, [X22]
	0x03ACA398 CBZ X8, 0x3ACA6A8
	0x03ACA39C LDR X21, [X8 + 0x60]
	0x03ACA3A0 CBZ X21, 0x3ACA6A8
	0x03ACA3A4 LDR X0, [X26]
	0x03ACA3A8 LDR W8, [X0 + 0xE0]
	0x03ACA3AC CBNZ W8, 0x3ACA3B4
	0x03ACA3B0 BL 0x1C16DFC
	0x03ACA3B4 LDR W8, [X21 + 0x18]
	0x03ACA3B8 CMP X25, X8
	0x03ACA3BC B.CS 0x3ACA7B4
	0x03ACA3C0 ADD X8, X21, X23
	0x03ACA3C4 ADD X0, X8, 0x70
	0x03ACA3C8 MOVZ W1, 0x1
	0x03ACA3CC MOV X2, X31
	0x03ACA3D0 BL 0x3B12C2C
	0x03ACA3D4 LDR X8, [X19 + 0x708]
	0x03ACA3D8 CBZ X8, 0x3ACA6A8
	0x03ACA3DC LDR W9, [X8 + 0x18]
	0x03ACA3E0 CMP X25, X9
	0x03ACA3E4 B.CS 0x3ACA7B4
	0x03ACA3E8 ADD X8, X8, X24, 0x3, LSL
	0x03ACA3EC LDR X0, [X8 + 0x28]
	0x03ACA3F0 CBZ X0, 0x3ACA6A8
	0x03ACA3F4 MOV X1, X31
	0x03ACA3F8 BL 0x3B1AC04
	0x03ACA3FC LDR X8, [X22]
	0x03ACA400 CBZ X8, 0x3ACA6A8
	0x03ACA404 LDR X8, [X8 + 0x60]
	0x03ACA408 CBZ X8, 0x3ACA6A8
	0x03ACA40C LDR W9, [X8 + 0x18]
	0x03ACA410 CMP X25, X9
	0x03ACA414 B.CS 0x3ACA7B4
	0x03ACA418 CBZ X0, 0x3ACA6A8
	0x03ACA41C ADD X8, X8, X23
	0x03ACA420 LDR X1, [X8 + 0x80]
	0x03ACA424 MOV X2, X31
	0x03ACA428 BL 0x3C17F08
	0x03ACA42C LDR X8, [X19 + 0x708]
	0x03ACA430 CBZ X8, 0x3ACA6A8
	0x03ACA434 LDR W9, [X8 + 0x18]
	0x03ACA438 CMP X25, X9
	0x03ACA43C B.CS 0x3ACA7B4
	0x03ACA440 ADD X8, X8, X24, 0x3, LSL
	0x03ACA444 LDR X0, [X8 + 0x28]
	0x03ACA448 CBZ X0, 0x3ACA6A8
	0x03ACA44C MOV X1, X31
	0x03ACA450 BL 0x3B1AC04
	0x03ACA454 LDR X8, [X22]
	0x03ACA458 CBZ X8, 0x3ACA6A8
	0x03ACA45C LDR X8, [X8 + 0x60]
	0x03ACA460 CBZ X8, 0x3ACA6A8
	0x03ACA464 LDR W9, [X8 + 0x18]
	0x03ACA468 CMP X25, X9
	0x03ACA46C B.CS 0x3ACA7B4
	0x03ACA470 CBZ X0, 0x3ACA6A8
	0x03ACA474 ADD X8, X8, X23
	0x03ACA478 LDR X1, [X8 + 0x98]
	0x03ACA47C MOV X2, X31
	0x03ACA480 BL 0x3C1810C
	0x03ACA484 LDR X8, [X19 + 0x708]
	0x03ACA488 CBZ X8, 0x3ACA6A8
	0x03ACA48C LDR W9, [X8 + 0x18]
	0x03ACA490 CMP X25, X9
	0x03ACA494 B.CS 0x3ACA7B4
	0x03ACA498 ADD X8, X8, X24, 0x3, LSL
	0x03ACA49C LDR X0, [X8 + 0x28]
	0x03ACA4A0 CBZ X0, 0x3ACA6A8
	0x03ACA4A4 MOV X1, X31
	0x03ACA4A8 BL 0x3B1AC04
	0x03ACA4AC LDR X8, [X22]
	0x03ACA4B0 CBZ X8, 0x3ACA6A8
	0x03ACA4B4 LDR X8, [X8 + 0x60]
	0x03ACA4B8 CBZ X8, 0x3ACA6A8
	0x03ACA4BC LDR W9, [X8 + 0x18]
	0x03ACA4C0 CMP X25, X9
	0x03ACA4C4 B.CS 0x3ACA7B4
	0x03ACA4C8 CBZ X0, 0x3ACA6A8
	0x03ACA4CC ADD X8, X8, X23
	0x03ACA4D0 LDR X1, [X8 + 0xA0]
	0x03ACA4D4 MOV X2, X31
	0x03ACA4D8 BL 0x3C181B8
	0x03ACA4DC LDR X8, [X19 + 0x708]
	0x03ACA4E0 CBZ X8, 0x3ACA6A8
	0x03ACA4E4 LDR W9, [X8 + 0x18]
	0x03ACA4E8 CMP X25, X9
	0x03ACA4EC B.CS 0x3ACA7B4
	0x03ACA4F0 ADD X8, X8, X24, 0x3, LSL
	0x03ACA4F4 LDR X0, [X8 + 0x28]
	0x03ACA4F8 CBZ X0, 0x3ACA6A8
	0x03ACA4FC MOV X1, X31
	0x03ACA500 BL 0x3B1AC04
	0x03ACA504 LDR X8, [X22]
	0x03ACA508 CBZ X8, 0x3ACA6A8
	0x03ACA50C LDR X8, [X8 + 0x60]
	0x03ACA510 CBZ X8, 0x3ACA6A8
	0x03ACA514 LDR W9, [X8 + 0x18]
	0x03ACA518 CMP X25, X9
	0x03ACA51C B.CS 0x3ACA7B4
	0x03ACA520 CBZ X0, 0x3ACA6A8
	0x03ACA524 ADD X8, X8, X23
	0x03ACA528 LDR X1, [X8 + 0xA8]
	0x03ACA52C MOV X2, X31
	0x03ACA530 BL 0x3C18318
	0x03ACA534 LDR X8, [X19 + 0x708]
	0x03ACA538 CBZ X8, 0x3ACA6A8
	0x03ACA53C LDR W9, [X8 + 0x18]
	0x03ACA540 CMP X25, X9
	0x03ACA544 B.CS 0x3ACA7B4
	0x03ACA548 ADD X8, X8, X24, 0x3, LSL
	0x03ACA54C LDR X0, [X8 + 0x28]
	0x03ACA550 CBZ X0, 0x3ACA6A8
	0x03ACA554 MOV X1, X31
	0x03ACA558 BL 0x3B1AC04
	0x03ACA55C CBZ X0, 0x3ACA6A8
	0x03ACA560 MOV X1, X31
	0x03ACA564 BL 0x3C19CD4
	0x03ACA568 LDR X8, [X19 + 0x708]
	0x03ACA56C CBZ X8, 0x3ACA6A8
	0x03ACA570 LDR W9, [X8 + 0x18]
	0x03ACA574 CMP X25, X9
	0x03ACA578 B.CS 0x3ACA7B4
	0x03ACA57C ADD X8, X8, X24, 0x3, LSL
	0x03ACA580 LDR X0, [X8 + 0x28]
	0x03ACA584 CBZ X0, 0x3ACA6A8
	0x03ACA588 MOV X1, X31
	0x03ACA58C BL 0x3CDBD2C
	0x03ACA590 LDR X8, [X19 + 0x708]
	0x03ACA594 CBZ X8, 0x3ACA6A8
	0x03ACA598 LDR W9, [X8 + 0x18]
	0x03ACA59C CMP X25, X9
	0x03ACA5A0 B.CS 0x3ACA7B4
	0x03ACA5A4 ADD X8, X8, X24, 0x3, LSL
	0x03ACA5A8 MOV X21, X0
	0x03ACA5AC LDR X0, [X8 + 0x28]
	0x03ACA5B0 CBZ X0, 0x3ACA6A8
	0x03ACA5B4 MOV X1, X31
	0x03ACA5B8 BL 0x3B1AC04
	0x03ACA5BC CBZ X21, 0x3ACA6A8
	0x03ACA5C0 MOV X1, X0
	0x03ACA5C4 MOV X0, X21
	0x03ACA5C8 MOV X2, X31
	0x03ACA5CC BL 0x3E22AB0
	0x03ACA5D0 LDR X8, [X19 + 0x708]
	0x03ACA5D4 CBZ X8, 0x3ACA6A8
	0x03ACA5D8 LDR W9, [X8 + 0x18]
	0x03ACA5DC CMP X25, X9
	0x03ACA5E0 B.CS 0x3ACA7B4
	0x03ACA5E4 ADD X8, X8, X24, 0x3, LSL
	0x03ACA5E8 LDR X0, [X8 + 0x28]
	0x03ACA5EC CBZ X0, 0x3ACA6A8
	0x03ACA5F0 MOV X1, X31
	0x03ACA5F4 BL 0x3CDBD2C
	0x03ACA5F8 CBZ X0, 0x3ACA6A8
	0x03ACA5FC MOV V0.16B, V8.16B
	0x03ACA600 MOV V1.16B, V9.16B
	0x03ACA604 MOV V2.16B, V10.16B
	0x03ACA608 MOV V3.16B, V11.16B
	0x03ACA60C MOV X1, X31
	0x03ACA610 BL 0x3E226A8
	0x03ACA614 LDR X8, [X19 + 0x708]
	0x03ACA618 CBZ X8, 0x3ACA6A8
	0x03ACA61C LDR W9, [X8 + 0x18]
	0x03ACA620 CMP X25, X9
	0x03ACA624 B.CS 0x3ACA7B4
	0x03ACA628 ADD X8, X8, X24, 0x3, LSL
	0x03ACA62C LDR X0, [X8 + 0x28]
	0x03ACA630 CBZ X0, 0x3ACA6A8
	0x03ACA634 MOV X1, X31
	0x03ACA638 BL 0x3CDBD2C
	0x03ACA63C CBZ X0, 0x3ACA6A8
	0x03ACA640 MOV W1, W20
	0x03ACA644 MOV X2, X31
	0x03ACA648 BL 0x3E225E4
	0x03ACA64C LDR X8, [X19 + 0x708]
	0x03ACA650 CBZ X8, 0x3ACA6A8
	0x03ACA654 LDR W9, [X8 + 0x18]
	0x03ACA658 CMP X25, X9
	0x03ACA65C B.CS 0x3ACA7B4
	0x03ACA660 LDR X9, [X19]
	0x03ACA664 ADD X8, X8, X24, 0x3, LSL
	0x03ACA668 LDR X21, [X8 + 0x28]
	0x03ACA66C MOV X0, X19
	0x03ACA670 LDR X8, [X9 + 0x2B8]
	0x03ACA674 LDR X1, [X9 + 0x2C0]
	0x03ACA678 BLR X8
	0x03ACA67C CBZ X21, 0x3ACA6A8
	0x03ACA680 LDR X8, [X21]
	0x03ACA684 AND W1, W0, 0x1
	0x03ACA688 MOV X0, X21
	0x03ACA68C LDR X9, [X8 + 0x2C8]
	0x03ACA690 LDR X2, [X8 + 0x2D0]
	0x03ACA694 BLR X9
	0x03ACA698 LDR X8, [X22]
	0x03ACA69C ADD X24, X24, 0x1
	0x03ACA6A0 ADD X23, X23, 0x50
	0x03ACA6A4 CBNZ X8, 0x3ACA300
	0x03ACA6A8 BL 0x1C16F20
	0x03ACA6AC LDR V2, [X19 + 0x240]
	0x03ACA6B0 ADRP X8, 0xFFFFFFFFFD020000
	0x03ACA6B4 LDR V3, [X8 + 0x200]
	0x03ACA6B8 FMOV S4, 0.5
	0x03ACA6BC FSUB S2, S1, S2
	0x03ACA6C0 FMUL S2, S2, S4
	0x03ACA6C4 FMAXNM S2, S2, S3
	0x03ACA6C8 STR S1, [X19 + 0x23C]
	0x03ACA6CC FMOV S3, 20
	0x03ACA6D0 FSUB S1, S1, S2
	0x03ACA6D4 FMUL S1, S1, S3
	0x03ACA6D8 ADRP X8, 0xFFFFFFFFFD020000
	0x03ACA6DC FADD S1, S1, S4
	0x03ACA6E0 LDR V2, [X8 + 0x420]
	0x03ACA6E4 FCVTZS W8, S1
	0x03ACA6E8 SCVTF S4, W8
	0x03ACA6EC MOVZ W8, 0x7F800000
	0x03ACA6F0 FDIV S3, S4, S3
	0x03ACA6F4 FMOV S4, W8
	0x03ACA6F8 FCMP S1, S4
	0x03ACA6FC FCSEL S1, S2, S3, EQ
	0x03ACA700 FCMP S1, S0
	0x03ACA704 FCSEL S0, S1, S0, GT
	0x03ACA708 B 0x3AC783C
	0x03ACA70C ADRP X8, 0xFFFFFFFFFD020000
	0x03ACA710 LDR V3, [X8 + 0x2F0]
	0x03ACA714 LDR V4, [X31 + 0xE8]
	0x03ACA718 FDIV S1, S11, S1
	0x03ACA71C FCMP S2, 0x0
	0x03ACA720 FCSEL S1, S1, S11, GT
	0x03ACA724 FADD S3, S4, S3
	0x03ACA728 FMUL S3, S12, S3
	0x03ACA72C FSUB S3, S11, S3
	0x03ACA730 FDIV S1, S3, S1
	0x03ACA734 FADD S1, S2, S1
	0x03ACA738 FCMP S1, S0
	0x03ACA73C FCSEL S0, S1, S0, MI
	0x03ACA740 STR S0, [X19 + 0x2D4]
	0x03ACA744 B 0x3AC3650
	0x03ACA748 FCMP S1, 0x0
	0x03ACA74C MOV V2.16B, V11.16B
	0x03ACA750 B.LE 0x3ACA760
	0x03ACA754 FMOV S2, 1
	0x03ACA758 FSUB S2, S2, S1
	0x03ACA75C FDIV S2, S11, S2
	0x03ACA760 ADRP X8, 0xFFFFFFFFFD020000
	0x03ACA764 LDR V3, [X8 + 0x2F0]
	0x03ACA768 LDR V4, [X31 + 0xE8]
	0x03ACA76C FADD S3, S4, S3
	0x03ACA770 FMUL S3, S12, S3
	0x03ACA774 FSUB S3, S11, S3
	0x03ACA778 FDIV S2, S3, S2
	0x03ACA77C FADD S1, S1, S2
	0x03ACA780 B 0x3ACA738
	0x03ACA784 LDR W8, [X19 + 0x4A8]
	0x03ACA788 LDR V2, [X31 + 0x20]
	0x03ACA78C ADD W8, W8, 0x1
	0x03ACA790 FSUB S2, S2, S10
	0x03ACA794 SCVTF S3, W8
	0x03ACA798 FDIV S2, S2, S3
	0x03ACA79C LDR V3, [X31 + 0x58]
	0x03ACA7A0 FDIV S2, S2, S3
	0x03ACA7A4 FADD S1, S1, S2
	0x03ACA7A8 FCMP S1, S0
	0x03ACA7AC FCSEL S0, S1, S0, GT
	0x03ACA7B0 B 0x3AC7D1C
	0x03ACA7B4 BL 0x1C16F28
	0x03ACA7B8 STP X30, X23, [X31 - 0x30]!
	0x03ACA7BC STP X22, X21, [X31 + 0x10]
	0x03ACA7C0 STP X20, X19, [X31 + 0x20]
	0x03ACA7C4 ADRP X23, 0x918000
	0x03ACA7C8 ADRP X22, 0x629000
	0x03ACA7CC ADRP X20, 0x68E000
	0x03ACA7D0 ADRP X21, 0x68E000
	0x03ACA7D4 MOV X19, X8
	0x03ACA7D8 LDRB W8, [X23 + 0x4A8]
	0x03ACA7DC LDR X22, [X22 + 0x618]
	0x03ACA7E0 LDR X20, [X20 + 0x428]
	0x03ACA7E4 LDR X21, [X21 + 0x430]
	0x03ACA7E8 TBNZ X8, 0x0, 0x3ACA818
	0x03ACA7EC ADRP X0, 0x629000
	0x03ACA7F0 LDR X0, [X0 + 0x618]
	0x03ACA7F4 BL 0x1C16CF4
	0x03ACA7F8 ADRP X0, 0x68E000
	0x03ACA7FC LDR X0, [X0 + 0x430]
	0x03ACA800 BL 0x1C16CF4
	0x03ACA804 ADRP X0, 0x68E000
	0x03ACA808 LDR X0, [X0 + 0x428]
	0x03ACA80C BL 0x1C16CF4
	0x03ACA810 MOVZ W8, 0x1
	0x03ACA814 STRB W8, [X23 + 0x4A8]
	0x03ACA818 LDR X0, [X22]
	0x03ACA81C MOVZ W1, 0x1474
	0x03ACA820 BL 0x1C16D6C
	0x03ACA824 LDR X1, [X20]
	0x03ACA828 MOV X2, X31
	0x03ACA82C MOV X20, X0
	0x03ACA830 BL 0x32C5BD8
	0x03ACA834 LDR X0, [X22]
	0x03ACA838 MOVZ W1, 0xDDF
	0x03ACA83C BL 0x1C16D6C
	0x03ACA840 LDR X1, [X21]
	0x03ACA844 MOV X2, X31
	0x03ACA848 MOV X21, X0
	0x03ACA84C BL 0x32C5BD8
	0x03ACA850 ADRP X8, 0xFFFFFFFFFD023000
	0x03ACA854 LDR V0, [X8 + 0xFD0]
	0x03ACA858 STP X20, X21, [X19]
	0x03ACA85C STRB W31, [X19 + 0x18]
	0x03ACA860 STUR W31, [X19 + 0x19]
	0x03ACA864 STR D0, [X19 + 0x10]
	0x03ACA868 STR W31, [X19 + 0x1C]
	0x03ACA86C LDP X20, X19, [X31 + 0x20]
	0x03ACA870 LDP X22, X21, [X31 + 0x10]
	0x03ACA874 LDP X30, X23, [X31], #0x30
	0x03ACA878 RET
	0x03ACA87C MOV X1, X31
	0x03ACA880 B 0x33BDD8C
	0x03ACA884 STP X30, X21, [X31 - 0x20]!
	0x03ACA888 STP X20, X19, [X31 + 0x10]
	0x03ACA88C ADRP X21, 0x918000
	0x03ACA890 LDRB W8, [X21 + 0x4AA]
	0x03ACA894 MOV X19, X1
	0x03ACA898 MOV X20, X0
	0x03ACA89C TBNZ X8, 0x0, 0x3ACA8CC
	0x03ACA8A0 ADRP X0, 0x68E000
	0x03ACA8A4 LDR X0, [X0 + 0x438]
	0x03ACA8A8 BL 0x1C16CF4
	0x03ACA8AC ADRP X0, 0x68E000
	0x03ACA8B0 LDR X0, [X0 + 0x440]
	0x03ACA8B4 BL 0x1C16CF4
	0x03ACA8B8 ADRP X0, 0x68E000
	0x03ACA8BC LDR X0, [X0 + 0x448]
	0x03ACA8C0 BL 0x1C16CF4
	0x03ACA8C4 MOVZ W8, 0x1
	0x03ACA8C8 STRB W8, [X21 + 0x4AA]
	0x03ACA8CC LDR X0, [X20 + 0x18]
	0x03ACA8D0 CBZ X0, 0x3ACA940
	0x03ACA8D4 ADRP X8, 0x68E000
	0x03ACA8D8 LDR X8, [X8 + 0x438]
	0x03ACA8DC MOV X1, X19
	0x03ACA8E0 LDR X2, [X8]
	0x03ACA8E4 BL 0x2AA528C
	0x03ACA8E8 TBZ X0, 0x0, 0x3ACA8F8
	0x03ACA8EC LDP X20, X19, [X31 + 0x10]
	0x03ACA8F0 LDP X30, X21, [X31], #0x20
	0x03ACA8F4 RET
	0x03ACA8F8 LDR X0, [X20 + 0x10]
	0x03ACA8FC CBZ X0, 0x3ACA940
	0x03ACA900 ADRP X8, 0x68E000
	0x03ACA904 LDR X20, [X20 + 0x18]
	0x03ACA908 LDR X8, [X8 + 0x448]
	0x03ACA90C MOV X1, X19
	0x03ACA910 LDR X2, [X8]
	0x03ACA914 BL 0x2EECFD4
	0x03ACA918 CBZ X20, 0x3ACA940
	0x03ACA91C ADRP X8, 0x68E000
	0x03ACA920 LDR X8, [X8 + 0x440]
	0x03ACA924 MOV X2, X0
	0x03ACA928 MOV X0, X20
	0x03ACA92C MOV X1, X19
	0x03ACA930 LDR X3, [X8]
	0x03ACA934 LDP X20, X19, [X31 + 0x10]
	0x03ACA938 LDP X30, X21, [X31], #0x20
	0x03ACA93C B 0x2AA5084
	0x03ACA940 BL 0x1C16F20
	0x03ACA944 SUB X31, X31, 0x30
	0x03ACA948 STP X30, X21, [X31 + 0x10]
	0x03ACA94C STP X20, X19, [X31 + 0x20]
	0x03ACA950 ADRP X21, 0x918000
	0x03ACA954 LDRB W8, [X21 + 0x4AB]
	0x03ACA958 MOV X20, X1
	0x03ACA95C MOV X19, X0
	0x03ACA960 TBNZ X8, 0x0, 0x3ACA990
	0x03ACA964 ADRP X0, 0x68E000
	0x03ACA968 LDR X0, [X0 + 0x450]
	0x03ACA96C BL 0x1C16CF4
	0x03ACA970 ADRP X0, 0x68E000
	0x03ACA974 LDR X0, [X0 + 0x458]
	0x03ACA978 BL 0x1C16CF4
	0x03ACA97C ADRP X0, 0x68E000
	0x03ACA980 LDR X0, [X0 + 0x460]
	0x03ACA984 BL 0x1C16CF4
	0x03ACA988 MOVZ W8, 0x1
	0x03ACA98C STRB W8, [X21 + 0x4AB]
	0x03ACA990 STR X31, [X31 + 0x8]
	0x03ACA994 LDR X0, [X19 + 0x18]
	0x03ACA998 CBZ X0, 0x3ACAA00
	0x03ACA99C ADRP X8, 0x68E000
	0x03ACA9A0 LDR X8, [X8 + 0x458]
	0x03ACA9A4 ADD X2, X31, 0x8
	0x03ACA9A8 MOV X1, X20
	0x03ACA9AC LDR X3, [X8]
	0x03ACA9B0 BL 0x2AA6B2C
	0x03ACA9B4 TBZ X0, 0x0, 0x3ACA9F0
	0x03ACA9B8 LDR X0, [X19 + 0x18]
	0x03ACA9BC CBZ X0, 0x3ACAA00
	0x03ACA9C0 ADRP X8, 0x68E000
	0x03ACA9C4 LDR X8, [X8 + 0x450]
	0x03ACA9C8 MOV X1, X20
	0x03ACA9CC LDR X2, [X8]
	0x03ACA9D0 BL 0x2AA64F8
	0x03ACA9D4 LDR X0, [X19 + 0x10]
	0x03ACA9D8 CBZ X0, 0x3ACAA00
	0x03ACA9DC ADRP X8, 0x68E000
	0x03ACA9E0 LDR X1, [X31 + 0x8]
	0x03ACA9E4 LDR X8, [X8 + 0x460]
	0x03ACA9E8 LDR X2, [X8]
	0x03ACA9EC BL 0x2EED4A4
	0x03ACA9F0 LDP X20, X19, [X31 + 0x20]
	0x03ACA9F4 LDP X30, X21, [X31 + 0x10]
	0x03ACA9F8 ADD X31, X31, 0x30
	0x03ACA9FC RET
	0x03ACAA00 BL 0x1C16F20
	0x03ACAA04 STR X30, [X31 - 0x20]!
	0x03ACAA08 STP X20, X19, [X31 + 0x10]
	0x03ACAA0C ADRP X20, 0x918000
	0x03ACAA10 LDRB W8, [X20 + 0x4AC]
	0x03ACAA14 MOV X19, X0
	0x03ACAA18 TBNZ X8, 0x0, 0x3ACAA48
	0x03ACAA1C ADRP X0, 0x68E000
	0x03ACAA20 LDR X0, [X0 + 0x468]
	0x03ACAA24 BL 0x1C16CF4
	0x03ACAA28 ADRP X0, 0x68E000
	0x03ACAA2C LDR X0, [X0 + 0x470]
	0x03ACAA30 BL 0x1C16CF4
	0x03ACAA34 ADRP X0, 0x68E000
	0x03ACAA38 LDR X0, [X0 + 0x478]
	0x03ACAA3C BL 0x1C16CF4
	0x03ACAA40 MOVZ W8, 0x1
	0x03ACAA44 STRB W8, [X20 + 0x4AC]
	0x03ACAA48 LDR X8, [X19 + 0x10]
	0x03ACAA4C CBZ X8, 0x3ACAA98
	0x03ACAA50 LDR X19, [X8 + 0x10]
	0x03ACAA54 CBZ X19, 0x3ACAA8C
	0x03ACAA58 ADRP X20, 0x68E000
	0x03ACAA5C LDR X20, [X20 + 0x468]
	0x03ACAA60 LDR X8, [X19 + 0x28]
	0x03ACAA64 CBZ X8, 0x3ACAA98
	0x03ACAA68 LDR X9, [X8 + 0x18]
	0x03ACAA6C LDR X0, [X8 + 0x40]
	0x03ACAA70 LDR X1, [X8 + 0x28]
	0x03ACAA74 BLR X9
	0x03ACAA78 LDR X1, [X20]
	0x03ACAA7C MOV X0, X19
	0x03ACAA80 BL 0x2EEA710
	0x03ACAA84 MOV X19, X0
	0x03ACAA88 CBNZ X0, 0x3ACAA60
	0x03ACAA8C LDP X20, X19, [X31 + 0x10]
	0x03ACAA90 LDR X30, [X31], #0x20
	0x03ACAA94 RET
	0x03ACAA98 BL 0x1C16F20
	0x03ACAA9C STR X30, [X31 - 0x40]!
	0x03ACAAA0 STP X24, X23, [X31 + 0x10]
	0x03ACAAA4 STP X22, X21, [X31 + 0x20]
	0x03ACAAA8 STP X20, X19, [X31 + 0x30]
	0x03ACAAAC ADRP X23, 0x918000
	0x03ACAAB0 ADRP X24, 0x68E000
	0x03ACAAB4 ADRP X20, 0x68E000
	0x03ACAAB8 ADRP X22, 0x68E000
	0x03ACAABC ADRP X21, 0x68E000
	0x03ACAAC0 LDRB W8, [X23 + 0x4AD]
	0x03ACAAC4 LDR X24, [X24 + 0x480]
	0x03ACAAC8 LDR X20, [X20 + 0x488]
	0x03ACAACC LDR X22, [X22 + 0x490]
	0x03ACAAD0 LDR X21, [X21 + 0x498]
	0x03ACAAD4 MOV X19, X0
	0x03ACAAD8 TBNZ X8, 0x0, 0x3ACAB14
	0x03ACAADC ADRP X0, 0x68E000
	0x03ACAAE0 LDR X0, [X0 + 0x498]
	0x03ACAAE4 BL 0x1C16CF4
	0x03ACAAE8 ADRP X0, 0x68E000
	0x03ACAAEC LDR X0, [X0 + 0x490]
	0x03ACAAF0 BL 0x1C16CF4
	0x03ACAAF4 ADRP X0, 0x68E000
	0x03ACAAF8 LDR X0, [X0 + 0x488]
	0x03ACAAFC BL 0x1C16CF4
	0x03ACAB00 ADRP X0, 0x68E000
	0x03ACAB04 LDR X0, [X0 + 0x480]
	0x03ACAB08 BL 0x1C16CF4
	0x03ACAB0C MOVZ W8, 0x1
	0x03ACAB10 STRB W8, [X23 + 0x4AD]
	0x03ACAB14 LDR X0, [X24]
	0x03ACAB18 BL 0x1C16F10
	0x03ACAB1C LDR X1, [X20]
	0x03ACAB20 MOV X20, X0
	0x03ACAB24 BL 0x2EECE50
	0x03ACAB28 STR X20, [X19 + 0x10]
	0x03ACAB2C LDR X0, [X22]
	0x03ACAB30 BL 0x1C16F10
	0x03ACAB34 LDR X1, [X21]
	0x03ACAB38 MOV X20, X0
	0x03ACAB3C BL 0x2AA4804
	0x03ACAB40 STR X20, [X19 + 0x18]
	0x03ACAB44 MOV X0, X19
	0x03ACAB48 LDP X20, X19, [X31 + 0x30]
	0x03ACAB4C LDP X22, X21, [X31 + 0x20]
	0x03ACAB50 LDP X24, X23, [X31 + 0x10]
	0x03ACAB54 MOV X1, X31
	0x03ACAB58 LDR X30, [X31], #0x40
	0x03ACAB5C B 0x33BDD8C
	0x03ACAB60 STR X30, [X31 - 0x20]!
	0x03ACAB64 STP X20, X19, [X31 + 0x10]
	0x03ACAB68 ADRP X19, 0x918000
	0x03ACAB6C ADRP X20, 0x68E000
	0x03ACAB70 LDRB W8, [X19 + 0x4AE]
	0x03ACAB74 LDR X20, [X20 + 0x4A0]
	0x03ACAB78 TBNZ X8, 0x0, 0x3ACAB90
	0x03ACAB7C ADRP X0, 0x68E000
	0x03ACAB80 LDR X0, [X0 + 0x4A0]
	0x03ACAB84 BL 0x1C16CF4
	0x03ACAB88 MOVZ W8, 0x1
	0x03ACAB8C STRB W8, [X19 + 0x4AE]
	0x03ACAB90 LDR X0, [X20]
	0x03ACAB94 LDR X8, [X0 + 0xB8]
	0x03ACAB98 LDR X8, [X8]
	0x03ACAB9C CBNZ X8, 0x3ACABC4
	0x03ACABA0 BL 0x1C16F10
	0x03ACABA4 MOV X19, X0
	0x03ACABA8 BL 0x3ACABD4
	0x03ACABAC LDR X8, [X20]
	0x03ACABB0 LDR X8, [X8 + 0xB8]
	0x03ACABB4 STR X19, [X8]
	0x03ACABB8 LDR X8, [X20]
	0x03ACABBC LDR X8, [X8 + 0xB8]
	0x03ACABC0 LDR X8, [X8]
	0x03ACABC4 LDP X20, X19, [X31 + 0x10]
	0x03ACABC8 MOV X0, X8
	0x03ACABCC LDR X30, [X31], #0x20
	0x03ACABD0 RET
	0x03ACABD4 STR X30, [X31 - 0x60]!
	0x03ACABD8 STP X28, X27, [X31 + 0x10]
	0x03ACABDC STP X26, X25, [X31 + 0x20]
	0x03ACABE0 STP X24, X23, [X31 + 0x30]
	0x03ACABE4 STP X22, X21, [X31 + 0x40]
	0x03ACABE8 STP X20, X19, [X31 + 0x50]
	0x03ACABEC ADRP X27, 0x918000
	0x03ACABF0 ADRP X28, 0x68E000
	0x03ACABF4 ADRP X20, 0x68E000
	0x03ACABF8 ADRP X26, 0x68E000
	0x03ACABFC ADRP X25, 0x68E000
	0x03ACAC00 ADRP X24, 0x68E000
	0x03ACAC04 ADRP X23, 0x68E000
	0x03ACAC08 ADRP X22, 0x68E000
	0x03ACAC0C ADRP X21, 0x68E000
	0x03ACAC10 LDR X28, [X28 + 0x4A8]
	0x03ACAC14 LDR X20, [X20 + 0x4B0]
	0x03ACAC18 LDR X26, [X26 + 0x4B8]
	0x03ACAC1C LDRB W8, [X27 + 0x4BA]
	0x03ACAC20 LDR X25, [X25 + 0x4C0]
	0x03ACAC24 LDR X24, [X24 + 0x4C8]
	0x03ACAC28 LDR X23, [X23 + 0x4D0]
	0x03ACAC2C LDR X22, [X22 + 0x4D8]
	0x03ACAC30 LDR X21, [X21 + 0x4E0]
	0x03ACAC34 MOV X19, X0
	0x03ACAC38 TBNZ X8, 0x0, 0x3ACACA4
	0x03ACAC3C ADRP X0, 0x68E000
	0x03ACAC40 LDR X0, [X0 + 0x4E0]
	0x03ACAC44 BL 0x1C16CF4
	0x03ACAC48 ADRP X0, 0x68E000
	0x03ACAC4C LDR X0, [X0 + 0x4B0]
	0x03ACAC50 BL 0x1C16CF4
	0x03ACAC54 ADRP X0, 0x68E000
	0x03ACAC58 LDR X0, [X0 + 0x4D0]
	0x03ACAC5C BL 0x1C16CF4
	0x03ACAC60 ADRP X0, 0x68E000
	0x03ACAC64 LDR X0, [X0 + 0x4C0]
	0x03ACAC68 BL 0x1C16CF4
	0x03ACAC6C ADRP X0, 0x68E000
	0x03ACAC70 LDR X0, [X0 + 0x4B8]
	0x03ACAC74 BL 0x1C16CF4
	0x03ACAC78 ADRP X0, 0x68E000
	0x03ACAC7C LDR X0, [X0 + 0x4C8]
	0x03ACAC80 BL 0x1C16CF4
	0x03ACAC84 ADRP X0, 0x68E000
	0x03ACAC88 LDR X0, [X0 + 0x4D8]
	0x03ACAC8C BL 0x1C16CF4
	0x03ACAC90 ADRP X0, 0x68E000
	0x03ACAC94 LDR X0, [X0 + 0x4A8]
	0x03ACAC98 BL 0x1C16CF4
	0x03ACAC9C MOVZ W8, 0x1
	0x03ACACA0 STRB W8, [X27 + 0x4BA]
	0x03ACACA4 LDR X0, [X28]
	0x03ACACA8 BL 0x1C16F10
	0x03ACACAC LDR X1, [X20]
	0x03ACACB0 MOV X20, X0
	0x03ACACB4 BL 0x2A12DD4
	0x03ACACB8 STR X20, [X19 + 0x10]
	0x03ACACBC LDR X0, [X26]
	0x03ACACC0 BL 0x1C16F10
	0x03ACACC4 LDR X1, [X25]
	0x03ACACC8 MOV X20, X0
	0x03ACACCC BL 0x2A12DD4
	0x03ACACD0 STR X20, [X19 + 0x18]
	0x03ACACD4 LDR X0, [X24]
	0x03ACACD8 BL 0x1C16F10
	0x03ACACDC LDR X1, [X23]
	0x03ACACE0 MOV X20, X0
	0x03ACACE4 BL 0x2A12DD4
	0x03ACACE8 STR X20, [X19 + 0x20]
	0x03ACACEC LDR X0, [X22]
	0x03ACACF0 BL 0x1C16F10
	0x03ACACF4 LDR X1, [X21]
	0x03ACACF8 MOV X20, X0
	0x03ACACFC BL 0x2A12DD4
	0x03ACAD00 STR X20, [X19 + 0x28]
	0x03ACAD04 MOV X0, X19
	0x03ACAD08 LDP X20, X19, [X31 + 0x50]
	0x03ACAD0C LDP X22, X21, [X31 + 0x40]
	0x03ACAD10 LDP X24, X23, [X31 + 0x30]
	0x03ACAD14 LDP X26, X25, [X31 + 0x20]
	0x03ACAD18 LDP X28, X27, [X31 + 0x10]
	0x03ACAD1C MOV X1, X31
	0x03ACAD20 LDR X30, [X31], #0x60
	0x03ACAD24 B 0x33BDD8C
	0x03ACAD28 STP X30, X19, [X31 - 0x10]!
	0x03ACAD2C MOV X19, X0
	0x03ACAD30 BL 0x3ACAB60
	0x03ACAD34 CBZ X0, 0x3ACAD44
	0x03ACAD38 MOV X1, X19
	0x03ACAD3C LDP X30, X19, [X31], #0x10
	0x03ACAD40 B 0x3ACAD48
	0x03ACAD44 BL 0x1C16F20
	0x03ACAD48 STP X30, X21, [X31 - 0x20]!
	0x03ACAD4C STP X20, X19, [X31 + 0x10]
	0x03ACAD50 ADRP X21, 0x918000
	0x03ACAD54 LDRB W8, [X21 + 0x4AF]
	0x03ACAD58 MOV X19, X1
	0x03ACAD5C MOV X20, X0
	0x03ACAD60 TBNZ X8, 0x0, 0x3ACAD90
	0x03ACAD64 ADRP X0, 0x68E000
	0x03ACAD68 LDR X0, [X0 + 0x4E8]
	0x03ACAD6C BL 0x1C16CF4
	0x03ACAD70 ADRP X0, 0x68E000
	0x03ACAD74 LDR X0, [X0 + 0x4F0]
	0x03ACAD78 BL 0x1C16CF4
	0x03ACAD7C ADRP X0, 0x68E000
	0x03ACAD80 LDR X0, [X0 + 0x4F8]
	0x03ACAD84 BL 0x1C16CF4
	0x03ACAD88 MOVZ W8, 0x1
	0x03ACAD8C STRB W8, [X21 + 0x4AF]
	0x03ACAD90 CBZ X19, 0x3ACAE08
	0x03ACAD94 LDR X0, [X20 + 0x18]
	0x03ACAD98 CBZ X0, 0x3ACAE08
	0x03ACAD9C ADRP X8, 0x68E000
	0x03ACADA0 LDR X8, [X8 + 0x4F8]
	0x03ACADA4 LDR W1, [X19 + 0x1C]
	0x03ACADA8 LDR X2, [X8]
	0x03ACADAC BL 0x2A13880
	0x03ACADB0 TBZ X0, 0x0, 0x3ACADC0
	0x03ACADB4 LDP X20, X19, [X31 + 0x10]
	0x03ACADB8 LDP X30, X21, [X31], #0x20
	0x03ACADBC RET
	0x03ACADC0 LDR X0, [X20 + 0x18]
	0x03ACADC4 CBZ X0, 0x3ACAE08
	0x03ACADC8 ADRP X8, 0x68E000
	0x03ACADCC LDR W1, [X19 + 0x1C]
	0x03ACADD0 LDR X8, [X8 + 0x4E8]
	0x03ACADD4 MOV X2, X19
	0x03ACADD8 LDR X3, [X8]
	0x03ACADDC BL 0x2A1368C
	0x03ACADE0 LDR X0, [X20 + 0x10]
	0x03ACADE4 CBZ X0, 0x3ACAE08
	0x03ACADE8 ADRP X8, 0x68E000
	0x03ACADEC LDR X2, [X19 + 0x20]
	0x03ACADF0 LDR W1, [X19 + 0x28]
	0x03ACADF4 LDR X8, [X8 + 0x4F0]
	0x03ACADF8 LDP X20, X19, [X31 + 0x10]
	0x03ACADFC LDR X3, [X8]
	0x03ACAE00 LDP X30, X21, [X31], #0x20
	0x03ACAE04 B 0x2A1368C
	0x03ACAE08 BL 0x1C16F20
	0x03ACAE0C STP X30, X19, [X31 - 0x10]!
	0x03ACAE10 MOV X19, X0
	0x03ACAE14 BL 0x3ACAB60
	0x03ACAE18 CBZ X0, 0x3ACAE28
	0x03ACAE1C MOV X1, X19
	0x03ACAE20 LDP X30, X19, [X31], #0x10
	0x03ACAE24 B 0x3ACAE2C
	0x03ACAE28 BL 0x1C16F20
	0x03ACAE2C STP X30, X21, [X31 - 0x20]!
	0x03ACAE30 STP X20, X19, [X31 + 0x10]
	0x03ACAE34 ADRP X21, 0x918000
	0x03ACAE38 LDRB W8, [X21 + 0x4B0]
	0x03ACAE3C MOV X19, X1
	0x03ACAE40 MOV X20, X0
	0x03ACAE44 TBNZ X8, 0x0, 0x3ACAE74
	0x03ACAE48 ADRP X0, 0x68E000
	0x03ACAE4C LDR X0, [X0 + 0x500]
	0x03ACAE50 BL 0x1C16CF4
	0x03ACAE54 ADRP X0, 0x68E000
	0x03ACAE58 LDR X0, [X0 + 0x4F0]
	0x03ACAE5C BL 0x1C16CF4
	0x03ACAE60 ADRP X0, 0x68E000
	0x03ACAE64 LDR X0, [X0 + 0x508]
	0x03ACAE68 BL 0x1C16CF4
	0x03ACAE6C MOVZ W8, 0x1
	0x03ACAE70 STRB W8, [X21 + 0x4B0]
	0x03ACAE74 CBZ X19, 0x3ACAEEC
	0x03ACAE78 LDR X0, [X20 + 0x20]
	0x03ACAE7C CBZ X0, 0x3ACAEEC
	0x03ACAE80 ADRP X8, 0x68E000
	0x03ACAE84 LDR X8, [X8 + 0x508]
	0x03ACAE88 LDR W1, [X19 + 0x1C]
	0x03ACAE8C LDR X2, [X8]
	0x03ACAE90 BL 0x2A13880
	0x03ACAE94 TBZ X0, 0x0, 0x3ACAEA4
	0x03ACAE98 LDP X20, X19, [X31 + 0x10]
	0x03ACAE9C LDP X30, X21, [X31], #0x20
	0x03ACAEA0 RET
	0x03ACAEA4 LDR X0, [X20 + 0x20]
	0x03ACAEA8 CBZ X0, 0x3ACAEEC
	0x03ACAEAC ADRP X8, 0x68E000
	0x03ACAEB0 LDR W1, [X19 + 0x1C]
	0x03ACAEB4 LDR X8, [X8 + 0x500]
	0x03ACAEB8 MOV X2, X19
	0x03ACAEBC LDR X3, [X8]
	0x03ACAEC0 BL 0x2A1368C
	0x03ACAEC4 LDR X0, [X20 + 0x10]
	0x03ACAEC8 CBZ X0, 0x3ACAEEC
	0x03ACAECC ADRP X8, 0x68E000
	0x03ACAED0 LDR X2, [X19 + 0x20]
	0x03ACAED4 LDR W1, [X19 + 0x1C]
	0x03ACAED8 LDR X8, [X8 + 0x4F0]
	0x03ACAEDC LDP X20, X19, [X31 + 0x10]
	0x03ACAEE0 LDR X3, [X8]
	0x03ACAEE4 LDP X30, X21, [X31], #0x20
	0x03ACAEE8 B 0x2A1368C
	0x03ACAEEC BL 0x1C16F20
	0x03ACAEF0 STR X30, [X31 - 0x20]!
	0x03ACAEF4 STP X20, X19, [X31 + 0x10]
	0x03ACAEF8 MOV X19, X1
	0x03ACAEFC MOV W20, W0
	0x03ACAF00 BL 0x3ACAB60
	0x03ACAF04 CBZ X0, 0x3ACAF1C
	0x03ACAF08 MOV W1, W20
	0x03ACAF0C MOV X2, X19
	0x03ACAF10 LDP X20, X19, [X31 + 0x10]
	0x03ACAF14 LDR X30, [X31], #0x20
	0x03ACAF18 B 0x3ACAF20
	0x03ACAF1C BL 0x1C16F20
	0x03ACAF20 STR X30, [X31 - 0x30]!
	0x03ACAF24 STP X22, X21, [X31 + 0x10]
	0x03ACAF28 STP X20, X19, [X31 + 0x20]
	0x03ACAF2C ADRP X22, 0x918000
	0x03ACAF30 LDRB W8, [X22 + 0x4B1]
	0x03ACAF34 MOV X19, X2
	0x03ACAF38 MOV W20, W1
	0x03ACAF3C MOV X21, X0
	0x03ACAF40 TBNZ X8, 0x0, 0x3ACAF70
	0x03ACAF44 ADRP X0, 0x68E000
	0x03ACAF48 LDR X0, [X0 + 0x500]
	0x03ACAF4C BL 0x1C16CF4
	0x03ACAF50 ADRP X0, 0x68E000
	0x03ACAF54 LDR X0, [X0 + 0x4F0]
	0x03ACAF58 BL 0x1C16CF4
	0x03ACAF5C ADRP X0, 0x68E000
	0x03ACAF60 LDR X0, [X0 + 0x508]
	0x03ACAF64 BL 0x1C16CF4
	0x03ACAF68 MOVZ W8, 0x1
	0x03ACAF6C STRB W8, [X22 + 0x4B1]
	0x03ACAF70 LDR X0, [X21 + 0x20]
	0x03ACAF74 CBZ X0, 0x3ACAFF0
	0x03ACAF78 ADRP X8, 0x68E000
	0x03ACAF7C LDR X8, [X8 + 0x508]
	0x03ACAF80 MOV W1, W20
	0x03ACAF84 LDR X2, [X8]
	0x03ACAF88 BL 0x2A13880
	0x03ACAF8C TBNZ X0, 0x0, 0x3ACAFE0
	0x03ACAF90 LDR X0, [X21 + 0x20]
	0x03ACAF94 CBZ X0, 0x3ACAFF0
	0x03ACAF98 ADRP X8, 0x68E000
	0x03ACAF9C LDR X8, [X8 + 0x500]
	0x03ACAFA0 MOV W1, W20
	0x03ACAFA4 MOV X2, X19
	0x03ACAFA8 LDR X3, [X8]
	0x03ACAFAC BL 0x2A1368C
	0x03ACAFB0 CBZ X19, 0x3ACAFF0
	0x03ACAFB4 LDR X0, [X21 + 0x10]
	0x03ACAFB8 CBZ X0, 0x3ACAFF0
	0x03ACAFBC ADRP X8, 0x68E000
	0x03ACAFC0 LDR X2, [X19 + 0x20]
	0x03ACAFC4 LDR X8, [X8 + 0x4F0]
	0x03ACAFC8 MOV W1, W20
	0x03ACAFCC LDR X3, [X8]
	0x03ACAFD0 BL 0x2A1368C
	0x03ACAFD4 LDR W8, [X19 + 0x1C]
	0x03ACAFD8 CBNZ W8, 0x3ACAFE0
	0x03ACAFDC STR W20, [X19 + 0x1C]
	0x03ACAFE0 LDP X20, X19, [X31 + 0x20]
	0x03ACAFE4 LDP X22, X21, [X31 + 0x10]
	0x03ACAFE8 LDR X30, [X31], #0x30
	0x03ACAFEC RET
	0x03ACAFF0 BL 0x1C16F20
	0x03ACAFF4 STR X30, [X31 - 0x20]!
	0x03ACAFF8 STP X20, X19, [X31 + 0x10]
	0x03ACAFFC MOV X19, X1
	0x03ACB000 MOV W20, W0
	0x03ACB004 BL 0x3ACAB60
	0x03ACB008 CBZ X0, 0x3ACB020
	0x03ACB00C MOV W1, W20
	0x03ACB010 MOV X2, X19
	0x03ACB014 LDP X20, X19, [X31 + 0x10]
	0x03ACB018 LDR X30, [X31], #0x20
	0x03ACB01C B 0x3ACB024
	0x03ACB020 BL 0x1C16F20
	0x03ACB024 STR X30, [X31 - 0x30]!
	0x03ACB028 STP X22, X21, [X31 + 0x10]
	0x03ACB02C STP X20, X19, [X31 + 0x20]
	0x03ACB030 ADRP X22, 0x917000
	0x03ACB034 LDRB W8, [X22 + 0x4B2]
	0x03ACB038 MOV X19, X2
	0x03ACB03C MOV W20, W1
	0x03ACB040 MOV X21, X0
	0x03ACB044 TBNZ X8, 0x0, 0x3ACB05C
	0x03ACB048 ADRP X0, 0x68D000
	0x03ACB04C LDR X0, [X0 + 0x4F0]
	0x03ACB050 BL 0x1C16CF4
	0x03ACB054 MOVZ W8, 0x1
	0x03ACB058 STRB W8, [X22 + 0x4B2]
	0x03ACB05C LDR X0, [X21 + 0x10]
	0x03ACB060 CBZ X0, 0x3ACB088
	0x03ACB064 ADRP X8, 0x68D000
	0x03ACB068 LDR X8, [X8 + 0x4F0]
	0x03ACB06C MOV W1, W20
	0x03ACB070 MOV X2, X19
	0x03ACB074 LDP X20, X19, [X31 + 0x20]
	0x03ACB078 LDR X3, [X8]
	0x03ACB07C LDP X22, X21, [X31 + 0x10]
	0x03ACB080 LDR X30, [X31], #0x30
	0x03ACB084 B 0x2A1368C
	0x03ACB088 BL 0x1C16F20
	0x03ACB08C STR X30, [X31 - 0x20]!
	0x03ACB090 STP X20, X19, [X31 + 0x10]
	0x03ACB094 MOV X19, X1
	0x03ACB098 MOV W20, W0
	0x03ACB09C BL 0x3ACAB60
	0x03ACB0A0 CBZ X0, 0x3ACB0B8
	0x03ACB0A4 MOV W1, W20
	0x03ACB0A8 MOV X2, X19
	0x03ACB0AC LDP X20, X19, [X31 + 0x10]
	0x03ACB0B0 LDR X30, [X31], #0x20
	0x03ACB0B4 B 0x3ACB0BC
	0x03ACB0B8 BL 0x1C16F20
	0x03ACB0BC STR X30, [X31 - 0x30]!
	0x03ACB0C0 STP X22, X21, [X31 + 0x10]
	0x03ACB0C4 STP X20, X19, [X31 + 0x20]
	0x03ACB0C8 ADRP X22, 0x917000
	0x03ACB0CC LDRB W8, [X22 + 0x4B3]
	0x03ACB0D0 MOV X19, X2
	0x03ACB0D4 MOV W20, W1
	0x03ACB0D8 MOV X21, X0
	0x03ACB0DC TBNZ X8, 0x0, 0x3ACB100
	0x03ACB0E0 ADRP X0, 0x68D000
	0x03ACB0E4 LDR X0, [X0 + 0x510]
	0x03ACB0E8 BL 0x1C16CF4
	0x03ACB0EC ADRP X0, 0x68D000
	0x03ACB0F0 LDR X0, [X0 + 0x518]
	0x03ACB0F4 BL 0x1C16CF4
	0x03ACB0F8 MOVZ W8, 0x1
	0x03ACB0FC STRB W8, [X22 + 0x4B3]
	0x03ACB100 LDR X0, [X21 + 0x28]
	0x03ACB104 CBZ X0, 0x3ACB15C
	0x03ACB108 ADRP X8, 0x68D000
	0x03ACB10C LDR X8, [X8 + 0x518]
	0x03ACB110 MOV W1, W20
	0x03ACB114 LDR X2, [X8]
	0x03ACB118 BL 0x2A13880
	0x03ACB11C TBZ X0, 0x0, 0x3ACB130
	0x03ACB120 LDP X20, X19, [X31 + 0x20]
	0x03ACB124 LDP X22, X21, [X31 + 0x10]
	0x03ACB128 LDR X30, [X31], #0x30
	0x03ACB12C RET
	0x03ACB130 LDR X0, [X21 + 0x28]
	0x03ACB134 CBZ X0, 0x3ACB15C
	0x03ACB138 ADRP X8, 0x68D000
	0x03ACB13C LDR X8, [X8 + 0x510]
	0x03ACB140 MOV W1, W20
	0x03ACB144 MOV X2, X19
	0x03ACB148 LDP X20, X19, [X31 + 0x20]
	0x03ACB14C LDR X3, [X8]
	0x03ACB150 LDP X22, X21, [X31 + 0x10]
	0x03ACB154 LDR X30, [X31], #0x30
	0x03ACB158 B 0x2A1368C
	0x03ACB15C BL 0x1C16F20
	0x03ACB160 STP X30, X21, [X31 - 0x20]!
	0x03ACB164 STP X20, X19, [X31 + 0x10]
	0x03ACB168 ADRP X21, 0x917000
	0x03ACB16C LDRB W8, [X21 + 0x4B4]
	0x03ACB170 MOV X19, X1
	0x03ACB174 MOV X20, X0
	0x03ACB178 TBNZ X8, 0x0, 0x3ACB190
	0x03ACB17C ADRP X0, 0x68D000
	0x03ACB180 LDR X0, [X0 + 0x4F8]
	0x03ACB184 BL 0x1C16CF4
	0x03ACB188 MOVZ W8, 0x1
	0x03ACB18C STRB W8, [X21 + 0x4B4]
	0x03ACB190 CBZ X19, 0x3ACB1B8
	0x03ACB194 LDR X0, [X20 + 0x18]
	0x03ACB198 CBZ X0, 0x3ACB1B8
	0x03ACB19C ADRP X8, 0x68D000
	0x03ACB1A0 LDR X8, [X8 + 0x4F8]
	0x03ACB1A4 LDR W1, [X19 + 0x1C]
	0x03ACB1A8 LDP X20, X19, [X31 + 0x10]
	0x03ACB1AC LDR X2, [X8]
	0x03ACB1B0 LDP X30, X21, [X31], #0x20
	0x03ACB1B4 B 0x2A13880
	0x03ACB1B8 BL 0x1C16F20
	0x03ACB1BC STP X30, X21, [X31 - 0x20]!
	0x03ACB1C0 STP X20, X19, [X31 + 0x10]
	0x03ACB1C4 ADRP X21, 0x917000
	0x03ACB1C8 LDRB W8, [X21 + 0x4B5]
	0x03ACB1CC MOV X19, X1
	0x03ACB1D0 MOV X20, X0
	0x03ACB1D4 TBNZ X8, 0x0, 0x3ACB1EC
	0x03ACB1D8 ADRP X0, 0x68D000
	0x03ACB1DC LDR X0, [X0 + 0x4F8]
	0x03ACB1E0 BL 0x1C16CF4
	0x03ACB1E4 MOVZ W8, 0x1
	0x03ACB1E8 STRB W8, [X21 + 0x4B5]
	0x03ACB1EC CBZ X19, 0x3ACB214
	0x03ACB1F0 LDR X0, [X20 + 0x18]
	0x03ACB1F4 CBZ X0, 0x3ACB214
	0x03ACB1F8 ADRP X8, 0x68D000
	0x03ACB1FC LDR X8, [X8 + 0x4F8]
	0x03ACB200 LDR W1, [X19 + 0x1C]
	0x03ACB204 LDP X20, X19, [X31 + 0x10]
	0x03ACB208 LDR X2, [X8]
	0x03ACB20C LDP X30, X21, [X31], #0x20
	0x03ACB210 B 0x2A13880
	0x03ACB214 BL 0x1C16F20
	0x03ACB218 STR X30, [X31 - 0x20]!
	0x03ACB21C STP X20, X19, [X31 + 0x10]
	0x03ACB220 MOV X19, X1
	0x03ACB224 MOV W20, W0
	0x03ACB228 BL 0x3ACAB60
	0x03ACB22C CBZ X0, 0x3ACB244
	0x03ACB230 MOV W1, W20
	0x03ACB234 MOV X2, X19
	0x03ACB238 LDP X20, X19, [X31 + 0x10]
	0x03ACB23C LDR X30, [X31], #0x20
	0x03ACB240 B 0x3ACB248
	0x03ACB244 BL 0x1C16F20
	0x03ACB248 STR X30, [X31 - 0x30]!
	0x03ACB24C STP X22, X21, [X31 + 0x10]
	0x03ACB250 STP X20, X19, [X31 + 0x20]
	0x03ACB254 ADRP X22, 0x917000
	0x03ACB258 LDRB W8, [X22 + 0x4B6]
	0x03ACB25C MOV X19, X2
	0x03ACB260 MOV W20, W1
	0x03ACB264 MOV X21, X0
	0x03ACB268 TBNZ X8, 0x0, 0x3ACB280
	0x03ACB26C ADRP X0, 0x68D000
	0x03ACB270 LDR X0, [X0 + 0x520]
	0x03ACB274 BL 0x1C16CF4
	0x03ACB278 MOVZ W8, 0x1
	0x03ACB27C STRB W8, [X22 + 0x4B6]
	0x03ACB280 STR X31, [X19]
	0x03ACB284 LDR X0, [X21 + 0x18]
	0x03ACB288 CBZ X0, 0x3ACB2B0
	0x03ACB28C ADRP X8, 0x68D000
	0x03ACB290 LDR X8, [X8 + 0x520]
	0x03ACB294 MOV W1, W20
	0x03ACB298 MOV X2, X19
	0x03ACB29C LDP X20, X19, [X31 + 0x20]
	0x03ACB2A0 LDR X3, [X8]
	0x03ACB2A4 LDP X22, X21, [X31 + 0x10]
	0x03ACB2A8 LDR X30, [X31], #0x30
	0x03ACB2AC B 0x2A150AC
	0x03ACB2B0 BL 0x1C16F20
	0x03ACB2B4 STR X30, [X31 - 0x20]!
	0x03ACB2B8 STP X20, X19, [X31 + 0x10]
	0x03ACB2BC MOV X19, X1
	0x03ACB2C0 MOV W20, W0
	0x03ACB2C4 BL 0x3ACAB60
	0x03ACB2C8 CBZ X0, 0x3ACB2E0
	0x03ACB2CC MOV W1, W20
	0x03ACB2D0 MOV X2, X19
	0x03ACB2D4 LDP X20, X19, [X31 + 0x10]
	0x03ACB2D8 LDR X30, [X31], #0x20
	0x03ACB2DC B 0x3ACB2E4
	0x03ACB2E0 BL 0x1C16F20
	0x03ACB2E4 STR X30, [X31 - 0x30]!
	0x03ACB2E8 STP X22, X21, [X31 + 0x10]
	0x03ACB2EC STP X20, X19, [X31 + 0x20]
	0x03ACB2F0 ADRP X22, 0x917000
	0x03ACB2F4 LDRB W8, [X22 + 0x4B7]
	0x03ACB2F8 MOV X19, X2
	0x03ACB2FC MOV W20, W1
	0x03ACB300 MOV X21, X0
	0x03ACB304 TBNZ X8, 0x0, 0x3ACB31C
	0x03ACB308 ADRP X0, 0x68D000
	0x03ACB30C LDR X0, [X0 + 0x528]
	0x03ACB310 BL 0x1C16CF4
	0x03ACB314 MOVZ W8, 0x1
	0x03ACB318 STRB W8, [X22 + 0x4B7]
	0x03ACB31C STR X31, [X19]
	0x03ACB320 LDR X0, [X21 + 0x20]
	0x03ACB324 CBZ X0, 0x3ACB34C
	0x03ACB328 ADRP X8, 0x68D000
	0x03ACB32C LDR X8, [X8 + 0x528]
	0x03ACB330 MOV W1, W20
	0x03ACB334 MOV X2, X19
	0x03ACB338 LDP X20, X19, [X31 + 0x20]
	0x03ACB33C LDR X3, [X8]
	0x03ACB340 LDP X22, X21, [X31 + 0x10]
	0x03ACB344 LDR X30, [X31], #0x30
	0x03ACB348 B 0x2A150AC
	0x03ACB34C BL 0x1C16F20
	0x03ACB350 STR X30, [X31 - 0x20]!
	0x03ACB354 STP X20, X19, [X31 + 0x10]
	0x03ACB358 MOV X19, X1
	0x03ACB35C MOV W20, W0
	0x03ACB360 BL 0x3ACAB60
	0x03ACB364 CBZ X0, 0x3ACB37C
	0x03ACB368 MOV W1, W20
	0x03ACB36C MOV X2, X19
	0x03ACB370 LDP X20, X19, [X31 + 0x10]
	0x03ACB374 LDR X30, [X31], #0x20
	0x03ACB378 B 0x3ACB380
	0x03ACB37C BL 0x1C16F20
	0x03ACB380 STR X30, [X31 - 0x30]!
	0x03ACB384 STP X22, X21, [X31 + 0x10]
	0x03ACB388 STP X20, X19, [X31 + 0x20]
	0x03ACB38C ADRP X22, 0x917000
	0x03ACB390 LDRB W8, [X22 + 0x4B8]
	0x03ACB394 MOV X19, X2
	0x03ACB398 MOV W20, W1
	0x03ACB39C MOV X21, X0
	0x03ACB3A0 TBNZ X8, 0x0, 0x3ACB3B8
	0x03ACB3A4 ADRP X0, 0x68D000
	0x03ACB3A8 LDR X0, [X0 + 0x530]
	0x03ACB3AC BL 0x1C16CF4
	0x03ACB3B0 MOVZ W8, 0x1
	0x03ACB3B4 STRB W8, [X22 + 0x4B8]
	0x03ACB3B8 STR X31, [X19]
	0x03ACB3BC LDR X0, [X21 + 0x28]
	0x03ACB3C0 CBZ X0, 0x3ACB3E8
	0x03ACB3C4 ADRP X8, 0x68D000
	0x03ACB3C8 LDR X8, [X8 + 0x530]
	0x03ACB3CC MOV W1, W20
	0x03ACB3D0 MOV X2, X19
	0x03ACB3D4 LDP X20, X19, [X31 + 0x20]
	0x03ACB3D8 LDR X3, [X8]
	0x03ACB3DC LDP X22, X21, [X31 + 0x10]
	0x03ACB3E0 LDR X30, [X31], #0x30
	0x03ACB3E4 B 0x2A150AC
	0x03ACB3E8 BL 0x1C16F20
	0x03ACB3EC STR X30, [X31 - 0x20]!
	0x03ACB3F0 STP X20, X19, [X31 + 0x10]
	0x03ACB3F4 MOV X19, X1
	0x03ACB3F8 MOV W20, W0
	0x03ACB3FC BL 0x3ACAB60
	0x03ACB400 CBZ X0, 0x3ACB418
	0x03ACB404 MOV W1, W20
	0x03ACB408 MOV X2, X19
	0x03ACB40C LDP X20, X19, [X31 + 0x10]
	0x03ACB410 LDR X30, [X31], #0x20
	0x03ACB414 B 0x3ACB41C
	0x03ACB418 BL 0x1C16F20
	0x03ACB41C STR X30, [X31 - 0x30]!
	0x03ACB420 STP X22, X21, [X31 + 0x10]
	0x03ACB424 STP X20, X19, [X31 + 0x20]
	0x03ACB428 ADRP X22, 0x917000
	0x03ACB42C LDRB W8, [X22 + 0x4B9]
	0x03ACB430 MOV X19, X2
	0x03ACB434 MOV W20, W1
	0x03ACB438 MOV X21, X0
	0x03ACB43C TBNZ X8, 0x0, 0x3ACB454
	0x03ACB440 ADRP X0, 0x68D000
	0x03ACB444 LDR X0, [X0 + 0x538]
	0x03ACB448 BL 0x1C16CF4
	0x03ACB44C MOVZ W8, 0x1
	0x03ACB450 STRB W8, [X22 + 0x4B9]
	0x03ACB454 STR X31, [X19]
	0x03ACB458 LDR X0, [X21 + 0x10]
	0x03ACB45C CBZ X0, 0x3ACB484
	0x03ACB460 ADRP X8, 0x68D000
	0x03ACB464 LDR X8, [X8 + 0x538]
	0x03ACB468 MOV W1, W20
	0x03ACB46C MOV X2, X19
	0x03ACB470 LDP X20, X19, [X31 + 0x20]
	0x03ACB474 LDR X3, [X8]
	0x03ACB478 LDP X22, X21, [X31 + 0x10]
	0x03ACB47C LDR X30, [X31], #0x30
	0x03ACB480 B 0x2A150AC
	0x03ACB484 BL 0x1C16F20
	0x03ACB488 STR D8, [X31 - 0x30]!
	0x03ACB48C STP X30, X21, [X31 + 0x10]
	0x03ACB490 STP X20, X19, [X31 + 0x20]
	0x03ACB494 STR W1, [X0]
	0x03ACB498 STP X2, X3, [X0 + 0x8]
	0x03ACB49C STR X4, [X0 + 0x18]
	0x03ACB4A0 CBZ X4, 0x3ACB500
	0x03ACB4A4 MOV X19, X0
	0x03ACB4A8 MOV X0, X4
	0x03ACB4AC MOV X1, X31
	0x03ACB4B0 MOV V8.16B, V0.16B
	0x03ACB4B4 MOV X20, X2
	0x03ACB4B8 BL 0x3C385F8
	0x03ACB4BC CBZ X20, 0x3ACB500
	0x03ACB4C0 MOV W21, W0
	0x03ACB4C4 LDR X0, [X20 + 0x20]
	0x03ACB4C8 CBZ X0, 0x3ACB500
	0x03ACB4CC MOV X1, X31
	0x03ACB4D0 BL 0x3C385F8
	0x03ACB4D4 CMP W21, W0
	0x03ACB4D8 CSET W8, EQ
	0x03ACB4DC STRB W31, [X19 + 0x21]
	0x03ACB4E0 STR X31, [X19 + 0x28]
	0x03ACB4E4 STR S8, [X19 + 0x30]
	0x03ACB4E8 STRB W8, [X19 + 0x20]
	0x03ACB4EC STR W31, [X19 + 0x34]
	0x03ACB4F0 LDP X20, X19, [X31 + 0x20]
	0x03ACB4F4 LDP X30, X21, [X31 + 0x10]
	0x03ACB4F8 LDR V8, [X31], #0x30
	0x03ACB4FC RET
	0x03ACB500 BL 0x1C16F20
	0x03ACB504 STP X30, X25, [X31 - 0x40]!
	0x03ACB508 STP X24, X23, [X31 + 0x10]
	0x03ACB50C STP X22, X21, [X31 + 0x20]
	0x03ACB510 STP X20, X19, [X31 + 0x30]
	0x03ACB514 ADRP X21, 0x917000
	0x03ACB518 LDRB W8, [X21 + 0x4BB]
	0x03ACB51C MOV X20, X1
	0x03ACB520 MOV X19, X0
	0x03ACB524 TBNZ X8, 0x0, 0x3ACB53C
	0x03ACB528 ADRP X0, 0x628000
	0x03ACB52C LDR X0, [X0 + 0x598]
	0x03ACB530 BL 0x1C16CF4
	0x03ACB534 MOVZ W8, 0x1
	0x03ACB538 STRB W8, [X21 + 0x4BB]
	0x03ACB53C CBZ X20, 0x3ACB5FC
	0x03ACB540 MOV X0, X20
	0x03ACB544 MOV X1, X31
	0x03ACB548 BL 0x3C385F8
	0x03ACB54C CBZ X19, 0x3ACB5FC
	0x03ACB550 LDR W8, [X19 + 0x18]
	0x03ACB554 CMP W8, 0x1
	0x03ACB558 B.LT 0x3ACB5D8
	0x03ACB55C ADRP X23, 0x628000
	0x03ACB560 LDR X23, [X23 + 0x598]
	0x03ACB564 MOV W20, W0
	0x03ACB568 MOV W22, W31
	0x03ACB56C MOVZ W24, 0x38
	0x03ACB570 CMP W22, W8
	0x03ACB574 B.CS 0x3ACB5F8
	0x03ACB578 SMADDL X25, X22, X24, X19
	0x03ACB57C LDR X21, [X25 + 0x28]!
	0x03ACB580 LDR X0, [X23]
	0x03ACB584 LDR W8, [X0 + 0xE0]
	0x03ACB588 CBNZ W8, 0x3ACB590
	0x03ACB58C BL 0x1C16DFC
	0x03ACB590 MOV X0, X21
	0x03ACB594 MOV X1, X31
	0x03ACB598 MOV X2, X31
	0x03ACB59C BL 0x3C354F8
	0x03ACB5A0 TBZ X0, 0x0, 0x3ACB5D8
	0x03ACB5A4 LDR W8, [X19 + 0x18]
	0x03ACB5A8 CMP W22, W8
	0x03ACB5AC B.CS 0x3ACB5F8
	0x03ACB5B0 LDR X0, [X25]
	0x03ACB5B4 CBZ X0, 0x3ACB5FC
	0x03ACB5B8 MOV X1, X31
	0x03ACB5BC BL 0x3C385F8
	0x03ACB5C0 CMP W0, W20
	0x03ACB5C4 B.EQ 0x3ACB5E0
	0x03ACB5C8 LDR W8, [X19 + 0x18]
	0x03ACB5CC ADD W22, W22, 0x1
	0x03ACB5D0 CMP W22, W8
	0x03ACB5D4 B.LT 0x3ACB570
	0x03ACB5D8 MOV W0, W31
	0x03ACB5DC B 0x3ACB5E4
	0x03ACB5E0 MOVZ W0, 0x1
	0x03ACB5E4 LDP X20, X19, [X31 + 0x30]
	0x03ACB5E8 LDP X22, X21, [X31 + 0x20]
	0x03ACB5EC LDP X24, X23, [X31 + 0x10]
	0x03ACB5F0 LDP X30, X25, [X31], #0x40
	0x03ACB5F4 RET
	0x03ACB5F8 BL 0x1C16F28
	0x03ACB5FC BL 0x1C16F20
	0x03ACB600 SUB X31, X31, 0x40
	0x03ACB604 STP X30, X23, [X31 + 0x10]
	0x03ACB608 STP X22, X21, [X31 + 0x20]
	0x03ACB60C STP X20, X19, [X31 + 0x30]
	0x03ACB610 ADRP X22, 0x917000
	0x03ACB614 LDRB W8, [X22 + 0x4BC]
	0x03ACB618 MOV X23, X3
	0x03ACB61C MOV X19, X2
	0x03ACB620 MOV X20, X1
	0x03ACB624 MOV X21, X0
	0x03ACB628 TBNZ X8, 0x0, 0x3ACB664
	0x03ACB62C ADRP X0, 0x68D000
	0x03ACB630 LDR X0, [X0 + 0x540]
	0x03ACB634 BL 0x1C16CF4
	0x03ACB638 ADRP X0, 0x632000
	0x03ACB63C LDR X0, [X0 + 0x870]
	0x03ACB640 BL 0x1C16CF4
	0x03ACB644 ADRP X0, 0x683000
	0x03ACB648 LDR X0, [X0 + 0xD78]
	0x03ACB64C BL 0x1C16CF4
	0x03ACB650 ADRP X0, 0x652000
	0x03ACB654 LDR X0, [X0 + 0x8B0]
	0x03ACB658 BL 0x1C16CF4
	0x03ACB65C MOVZ W8, 0x1
	0x03ACB660 STRB W8, [X22 + 0x4BC]
	0x03ACB664 STR W31, [X31 + 0xC]
	0x03ACB668 CBZ X21, 0x3ACB804
	0x03ACB66C MOV X0, X21
	0x03ACB670 MOV X1, X31
	0x03ACB674 BL 0x3C385F8
	0x03ACB678 CBZ X23, 0x3ACB804
	0x03ACB67C ADRP X8, 0x632000
	0x03ACB680 LDR X8, [X8 + 0x870]
	0x03ACB684 MOV W22, W0
	0x03ACB688 ADD X2, X31, 0xC
	0x03ACB68C MOV X0, X23
	0x03ACB690 LDR X3, [X8]
	0x03ACB694 MOV W1, W22
	0x03ACB698 BL 0x2A0BC68
	0x03ACB69C TBNZ X0, 0x0, 0x3ACB7EC
	0x03ACB6A0 ADRP X8, 0x683000
	0x03ACB6A4 LDR X8, [X8 + 0xD78]
	0x03ACB6A8 MOV X0, X23
	0x03ACB6AC LDR X1, [X8]
	0x03ACB6B0 BL 0x2A0A118
	0x03ACB6B4 ADRP X8, 0x652000
	0x03ACB6B8 LDR X8, [X8 + 0x8B0]
	0x03ACB6BC MOV W2, W0
	0x03ACB6C0 STR W0, [X31 + 0xC]
	0x03ACB6C4 MOV X0, X23
	0x03ACB6C8 LDR X3, [X8]
	0x03ACB6CC MOV W1, W22
	0x03ACB6D0 BL 0x2A0A330
	0x03ACB6D4 LDR X8, [X19]
	0x03ACB6D8 CBZ X8, 0x3ACB804
	0x03ACB6DC LDR W9, [X31 + 0xC]
	0x03ACB6E0 LDR W10, [X8 + 0x18]
	0x03ACB6E4 CMP W9, W10
	0x03ACB6E8 B.LT 0x3ACB71C
	0x03ACB6EC ADD W0, W9, 0x1
	0x03ACB6F0 MOV X1, X31
	0x03ACB6F4 BL 0x3C2B340
	0x03ACB6F8 ADRP X8, 0x68D000
	0x03ACB6FC LDR X8, [X8 + 0x540]
	0x03ACB700 MOV W1, W0
	0x03ACB704 MOV X0, X19
	0x03ACB708 LDR X2, [X8]
	0x03ACB70C BL 0x21167D0
	0x03ACB710 LDR X8, [X19]
	0x03ACB714 CBZ X8, 0x3ACB804
	0x03ACB718 LDR W9, [X31 + 0xC]
	0x03ACB71C LDR W10, [X8 + 0x18]
	0x03ACB720 CMP W9, W10
	0x03ACB724 B.CS 0x3ACB808
	0x03ACB728 MOVZ W11, 0x38
	0x03ACB72C SMADDL X11, X9, X11, X8
	0x03ACB730 STR W9, [X11 + 0x20]
	0x03ACB734 LDRSW X23, [X31 + 0xC]
	0x03ACB738 CMP W23, W10
	0x03ACB73C B.CS 0x3ACB808
	0x03ACB740 MOVZ W9, 0x38
	0x03ACB744 MADD X8, X23, X9, X8
	0x03ACB748 STR X20, [X8 + 0x28]
	0x03ACB74C LDR X8, [X19]
	0x03ACB750 CBZ X8, 0x3ACB804
	0x03ACB754 LDR W9, [X8 + 0x18]
	0x03ACB758 CMP W23, W9
	0x03ACB75C B.CS 0x3ACB808
	0x03ACB760 MOVZ W9, 0x38
	0x03ACB764 MADD X8, X23, X9, X8
	0x03ACB768 STR X31, [X8 + 0x30]
	0x03ACB76C LDR X8, [X19]
	0x03ACB770 CBZ X8, 0x3ACB804
	0x03ACB774 LDR W9, [X8 + 0x18]
	0x03ACB778 CMP W23, W9
	0x03ACB77C B.CS 0x3ACB808
	0x03ACB780 MOVZ W9, 0x38
	0x03ACB784 MADD X8, X23, X9, X8
	0x03ACB788 STR X21, [X8 + 0x38]
	0x03ACB78C LDR X21, [X19]
	0x03ACB790 CBZ X21, 0x3ACB804
	0x03ACB794 CBZ X20, 0x3ACB804
	0x03ACB798 LDR X0, [X20 + 0x20]
	0x03ACB79C CBZ X0, 0x3ACB804
	0x03ACB7A0 MOV X1, X31
	0x03ACB7A4 BL 0x3C385F8
	0x03ACB7A8 LDR W8, [X21 + 0x18]
	0x03ACB7AC CMP W23, W8
	0x03ACB7B0 B.CS 0x3ACB808
	0x03ACB7B4 CMP W22, W0

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 4096
	022 Subtract X31, X31, 1024
	023 Move X20, 0x91F000
	024 Move X21, 0x630000
	025 Move W8, [X20+1191]
	026 Move X21, [X21+1432]
	027 Move X19, X0
	028 Add X27, X31, 4000
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {149}
	033 Move X0, 0x632000
	034 Move X0, [X0+368]
	035 Call 0x1C17CF4
	036 Move X0, 0x630000
	037 Move X0, [X0+2600]
	038 Call 0x1C17CF4
	039 Move X0, 0x695000
	040 Move X0, [X0+792]
	041 Call 0x1C17CF4
	042 Move X0, 0x695000
	043 Move X0, [X0+800]
	044 Call 0x1C17CF4
	045 Move X0, 0x695000
	046 Move X0, [X0+808]
	047 Call 0x1C17CF4
	048 Move X0, 0x695000
	049 Move X0, [X0+816]
	050 Call 0x1C17CF4
	051 Move X0, 0x630000
	052 Move X0, [X0+1448]
	053 Call 0x1C17CF4
	054 Move X0, 0x630000
	055 Move X0, [X0+1432]
	056 Call 0x1C17CF4
	057 Move X0, 0x695000
	058 Move X0, [X0+824]
	059 Call 0x1C17CF4
	060 Move X0, 0x695000
	061 Move X0, [X0+832]
	062 Call 0x1C17CF4
	063 Move X0, 0x695000
	064 Move X0, [X0+840]
	065 Call 0x1C17CF4
	066 Move X0, 0x695000
	067 Move X0, [X0+848]
	068 Call 0x1C17CF4
	069 Move X0, 0x695000
	070 Move X0, [X0+856]
	071 Call 0x1C17CF4
	072 Move X0, 0x695000
	073 Move X0, [X0+864]
	074 Call 0x1C17CF4
	075 Move X0, 0x695000
	076 Move X0, [X0+872]
	077 Call 0x1C17CF4
	078 Move X0, 0x695000
	079 Move X0, [X0+880]
	080 Call 0x1C17CF4
	081 Move X0, 0x695000
	082 Move X0, [X0+888]
	083 Call 0x1C17CF4
	084 Move X0, 0x695000
	085 Move X0, [X0+896]
	086 Call 0x1C17CF4
	087 Move X0, 0x695000
	088 Move X0, [X0+904]
	089 Call 0x1C17CF4
	090 Move X0, 0x695000
	091 Move X0, [X0+912]
	092 Call 0x1C17CF4
	093 Move X0, 0x695000
	094 Move X0, [X0+920]
	095 Call 0x1C17CF4
	096 Move X0, 0x695000
	097 Move X0, [X0+928]
	098 Call 0x1C17CF4
	099 Move X0, 0x695000
	100 Move X0, [X0+936]
	101 Call 0x1C17CF4
	102 Move X0, 0x695000
	103 Move X0, [X0+944]
	104 Call 0x1C17CF4
	105 Move X0, 0x695000
	106 Move X0, [X0+952]
	107 Call 0x1C17CF4
	108 Move X0, 0x695000
	109 Move X0, [X0+960]
	110 Call 0x1C17CF4
	111 Move X0, 0x695000
	112 Move X0, [X0+968]
	113 Call 0x1C17CF4
	114 Move X0, 0x695000
	115 Move X0, [X0+976]
	116 Call 0x1C17CF4
	117 Move X0, 0x695000
	118 Move X0, [X0+984]
	119 Call 0x1C17CF4
	120 Move X0, 0x695000
	121 Move X0, [X0+992]
	122 Call 0x1C17CF4
	123 Move X0, 0x695000
	124 Move X0, [X0+1000]
	125 Call 0x1C17CF4
	126 Move X0, 0x695000
	127 Move X0, [X0+1008]
	128 Call 0x1C17CF4
	129 Move X0, 0x695000
	130 Move X0, [X0+1016]
	131 Call 0x1C17CF4
	132 Move X0, 0x695000
	133 Move X0, [X0+1024]
	134 Call 0x1C17CF4
	135 Move X0, 0x695000
	136 Move X0, [X0+1032]
	137 Call 0x1C17CF4
	138 Move X0, 0x695000
	139 Move X0, [X0+1040]
	140 Call 0x1C17CF4
	141 Move X0, 0x695000
	142 Move X0, [X0+1048]
	143 Call 0x1C17CF4
	144 Move X0, 0x695000
	145 Move X0, [X0+1056]
	146 Call 0x1C17CF4
	147 Move W8, 1
	148 Move [X20+1191], W8
	149 Add X8, X31, 117
	150 NotImplemented "Instruction MOVI not yet implemented."
	151 Add X0, X31, 3104
	152 Move W2, 888
	153 Move W1, W31
	154 Move [X31+4216], X31
	155 Move [X8+4095], W31
	156 Move [X31+4200], X31
	157 Move [X31+4192], X31
	158 Move [X31+4184], X31
	159 Move [X31+4176], X31
	160 Move [X31+4168], X31
	161 Move [X31+4152], X31
	162 Move [X31+4144], X31
	163 Move [X31+4160], W31
	164 Move [X31+4140], W31
	165 Move [X31+4008], X31
	166 Move [X31+4000], X31
	167 Move [X31+4016], W31
	168 Move [X27+96], V0
	169 Move [X27+104], V0
	170 Move [X27+64], V0
	171 Move [X27+72], V0
	172 Move [X27+32], V0
	173 Move [X27+40], V0
	174 Move [X31+3992], X31
	175 Call 0x3EB2B10
	176 Add X0, X31, 2216
	177 Move W2, 888
	178 Move W1, W31
	179 Call 0x3EB2B10
	180 Add X0, X31, 1328
	181 Move W2, 888
	182 Move W1, W31
	183 Call 0x3EB2B10
	184 Move X0, [X21]
	185 Move X20, [X19+248]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X22, 0x630000
	191 Move X22, [X22+2600]
	192 Move X0, X20
	193 Move X1, X31
	194 Move X2, X31
	195 Call Object.op_Equality, X0, X1
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {235}
	200 Move X0, [X19+248]
	201 Compare X0, 0
	202 JumpIfEqual {7843}
	203 Move X1, X31
	204 Call TMP_FontAsset.get_characterLookupTable, X0
	205 Compare X0, 0
	206 JumpIfEqual {235}
	207 Move X0, [X19+872]
	208 Compare X0, 0
	209 JumpIfEqual {212}
	210 Move X1, X31
	211 Call TMP_TextInfo.Clear, X0
	212 Move X8, [X19+1144]
	213 Compare X8, 0
	214 JumpIfEqual {260}
	215 Move X9, [X8+24]
	216 Compare X9, 0
	217 JumpIfEqual {260}
	218 Compare W9, 0
	219 JumpIfEqual {7905}
	220 Move W8, [X8+32]
	221 Compare W8, 0
	222 JumpIfEqual {260}
	223 Move X2, [X19+248]
	224 Move X4, [X19+272]
	225 Move [X19+288], W31
	226 Move X29, 0x695000
	227 Move [X19+256], X2
	228 Move [X19+280], X4
	229 Move X29, [X29+1000]
	230 Move X0, [X29]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfEqual {302}
	234 Move W1, W31
	235 Move X20, 0x695000
	236 Move X20, [X20+1016]
	237 Move X0, X19
	238 Move X1, X31
	239 Call Object.GetInstanceID, X0
	240 Move [X31+4172], W0
	241 Add X0, X31, 4096
	242 Add X0, X0, 76
	243 Move X1, X31
	244 Call Int32.ToString, X0
	245 Move X8, [X20]
	246 Move X1, X0
	247 Move X2, X31
	248 Move X0, X8
	249 Call String.Concat, X0, X1
	250 Move X8, [X22]
	251 Move X20, X0
	252 Move W9, [X8+224]
	253 Compare W9, 0
	254 JumpIfNotEqual {257}
	255 Move X0, X8
	256 Call 0x1C17DFC
	257 Move X0, X20
	258 Move X1, X31
	259 Call Debug.LogWarning, X0
	260 Move X8, [X19]
	261 Move X0, X19
	262 Move X9, [X8+2376]
	263 Move X1, [X8+2384]
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move [X19+992], W31
	266 Move [X19+1004], W31
	267 Move X8, 0x695000
	268 Move X8, [X8+1008]
	269 Move X0, [X8]
	270 Move W8, [X0+224]
	271 Compare W8, 0
	272 JumpIfNotEqual {274}
	273 Call 0x1C17DFC
	274 Move X0, X19
	275 Move X1, X31
	276 Call TMPro_EventManager.ON_TEXT_CHANGED, X0
	277 Move W8, 1
	278 Move [X19+588], W8
	279 Add X31, X31, 4096
	280 Add X31, X31, 1024
	281 Move X20, [X31+144]
	282 Move X19, [X31+152]
	283 Move X22, [X31+128]
	284 Move X21, [X31+136]
	285 Move X24, [X31+112]
	286 Move X23, [X31+120]
	287 Move X26, [X31+96]
	288 Move X25, [X31+104]
	289 Move X28, [X31+80]
	290 Move X27, [X31+88]
	291 Move X29, [X31+64]
	292 Move X30, [X31+72]
	293 Move D9, [X31+48]
	294 Move D8, [X31+56]
	295 Move D11, [X31+32]
	296 Move D10, [X31+40]
	297 Move D13, [X31+16]
	298 Move D12, [X31+24]
	299 Move D15, [X31+160]
	300 Move D14, [X31+168]
	301 Return 
	302 Call 0x1C17DFC
	303 Move W1, [X19+288]
	304 Move X2, [X19+256]
	305 Move X4, [X19+280]
	306 Move V0, [X19+1560]
	307 NotImplemented "Instruction MOVI not yet implemented."
	308 Add X0, X31, 432
	309 Move X3, X31
	310 Move X5, X31
	311 Move [X31+480], X31
	312 Move [X31+448], V1
	313 Move [X31+456], V1
	314 Move [X31+27], V1
	315 Call MaterialReference..ctor, X0, X1, X2, X3, X4, V0
	316 Move X8, [X29]
	317 Move X9, 0x695000
	318 Move X9, [X9+944]
	319 Move V0, [X31+432]
	320 Move V1, [X31+448]
	321 Move X8, [X8+184]
	322 Move V2, [X31+29]
	323 Move X10, [X31+480]
	324 Move X2, [X9]
	325 Add X1, X31, 4096
	326 Add X0, X8, 16
	327 Add X1, X1, 128
	328 Move [X27+224], V0
	329 Move [X27+232], V1
	330 Move [X27+16], V2
	331 Move [X31+4272], X10
	332 Call TMP_TextProcessingStack`1<MaterialReference>.SetDefault, X0, X1
	333 Move X8, [X19+432]
	334 Move X20, [X19+952]
	335 Move [X19+1688], X8
	336 Move X0, [X21]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Move X0, X20
	342 Move X1, X31
	343 Move X2, X31
	344 Call Object.op_Inequality, X0, X1
	345 Move TEMP, X0
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfNotEqual {354}
	349 Move X0, [X19+952]
	350 Compare X0, 0
	351 JumpIfEqual {7843}
	352 Move X1, X31
	353 Call TMP_SpriteAnimator.StopAllAnimations, X0
	354 Move X8, [X19+248]
	355 Compare X8, 0
	356 JumpIfEqual {7843}
	357 Move W20, [X19+1168]
	358 Move V14, [X19+484]
	359 Add X0, X8, 80
	360 Move X1, X31
	361 Call FaceInfo.get_pointSize, X0
	362 Move X8, [X19+248]
	363 Compare X8, 0
	364 JumpIfEqual {7843}
	365 Move W22, W0
	366 Add X0, X8, 80
	367 Move X1, X31
	368 Call FaceInfo.get_scale, X0
	369 Move V9, [X19+484]
	370 Move W10, 0x3F800000
	371 Move [X19+1028], W10
	372 Move X21, 0x695000
	373 Move [X19+488], S9
	374 Move W8, [X19+773]
	375 Move X21, [X21+976]
	376 Move X9, -50171904
	377 Move V1, [X9+188]
	378 Move V15, V0
	379 Move X1, [X21]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move S0, 1
	382 NotImplemented "Instruction FCSEL not yet implemented."
	383 Add X0, X19, 496
	384 Move V0, V9
	385 Move [X31+144], S1
	386 Call TMP_TextProcessingStack`1<Single>.SetDefault, X0, V0
	387 Move [X31+4220], W31
	388 Move W8, [X19+600]
	389 Move [X19+604], W8
	390 Move TEMP, X8
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfEqual {395}
	394 Move W1, [X19+528]
	395 Move W1, 700
	396 Move [X19+532], W1
	397 Move X8, 0x695000
	398 Move X8, [X8+968]
	399 Add X0, X19, 536
	400 Move X2, [X8]
	401 Call TMP_TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	402 Add X0, X19, 608
	403 Move X1, X31
	404 Call TMP_FontStyleStack.Clear, X0
	405 Move W1, [X19+620]
	406 Move X8, 0x695000
	407 Add X0, X19, 640
	408 Move [X19+632], W1
	409 Move X8, [X8+928]
	410 Move X2, [X8]
	411 Call TMP_TextProcessingStack`1<Int32Enum>.SetDefault, X0, X1
	412 Move [X19+1564], W31
	413 Move X8, 0x695000
	414 Move X8, [X8+880]
	415 Add X0, X19, 1568
	416 Move X1, [X8]
	417 Call TMP_TextProcessingStack`1<Single>.Clear, X0
	418 Move X8, 0x915000
	419 Move W8, [X8+1923]
	420 Compare W8, 0
	421 JumpIfNotEqual {428}
	422 Move X0, 0x630000
	423 Move X0, [X0+1440]
	424 Call 0x1C17CF4
	425 Move W8, 1
	426 Move X9, 0x915000
	427 Move [X9+1923], W8
	428 Move X8, 0x630000
	429 Move X8, [X8+1440]
	430 Move V0, [X19+328]
	431 Move V1, [X19+332]
	432 Move V2, [X19+336]
	433 Move X8, [X8]
	434 Move X0, X31
	435 Move X8, [X8+184]
	436 Move V4, [X8]
	437 Move V3, [X8+4]
	438 Move [X31+192], S4
	439 Move [X31+200], S3
	440 Move V3, [X8+8]
	441 Move [X31+172], S3
	442 Move V3, [X19+340]
	443 Call 0x1E44664
	444 Move [X19+324], W0
	445 Move [X19+1260], W0
	446 Move [X19+344], W0
	447 Move [X19+348], W0
	448 Move X23, 0x695000
	449 Move X23, [X23+936]
	450 Add X8, X19, 1264
	451 And X1, X0, 0
	452 Move X0, X8
	453 Move X2, [X23]
	454 Call 0x2671FAC, X0, X1
	455 Move W1, [X19+1260]
	456 Move X2, [X23]
	457 Add X0, X19, 1296
	458 Call 0x2671FAC, X0, X1
	459 Move W1, [X19+1260]
	460 Move X2, [X23]
	461 Add X0, X19, 1328
	462 Call 0x2671FAC, X0, X1
	463 Move X8, 0x695000
	464 Move X8, [X8+848]
	465 Move W23, [X19+1260]
	466 Move X0, [X8]
	467 Move W8, [X0+224]
	468 Compare W8, 0
	469 JumpIfNotEqual {471}
	470 Call 0x1C17DFC
	471 Move X24, 0x91F000
	472 Move W8, [X24+1190]
	473 Add X9, X19, 1360
	474 Move [X31+208], X9
	475 Compare W8, 0
	476 JumpIfNotEqual {482}
	477 Move X0, 0x695000
	478 Move X0, [X0+848]
	479 Call 0x1C17CF4
	480 Move W8, 1
	481 Move [X24+1190], W8
	482 Move X24, 0x695000
	483 Move X24, [X24+848]
	484 Move X0, [X24]
	485 Move W8, [X0+224]
	486 Compare W8, 0
	487 JumpIfNotEqual {490}
	488 Call 0x1C17DFC
	489 Move X0, [X24]
	490 Move X8, [X0+184]
	491 Add X0, X31, 432
	492 Move X1, X23
	493 Move X2, X31
	494 Move S0, [X8]
	495 Move S1, [X8+4]
	496 Move S2, [X8+8]
	497 Move S3, [X8+12]
	498 Move [X31+432], X31
	499 Move [X31+440], X31
	500 Move [X31+448], W31
	501 Call HighlightState..ctor, X0, X1, X2
	502 Move X8, 0x695000
	503 Move X8, [X8+920]
	504 Move V0, [X31+27]
	505 Move W9, [X31+448]
	506 Move X0, [X31+208]
	507 Move X2, [X8]
	508 Add X1, X31, 4096
	509 Add X1, X1, 128
	510 Move [X27+14], V0
	511 Move [X31+4240], W9
	512 Call TMP_TextProcessingStack`1<HighlightState>.SetDefault, X0, X1
	513 Move [X19+1408], X31
	514 Move X8, 0x695000
	515 Move X8, [X8+960]
	516 Add X0, X19, 1416
	517 Move X1, X31
	518 Move X2, [X8]
	519 Call TMP_TextProcessingStack`1<Object>.SetDefault, X0, X1
	520 Move X8, [X19+256]
	521 Compare X8, 0
	522 JumpIfEqual {7843}
	523 Move W1, [X8+440]
	524 Move X8, 0x695000
	525 Add X0, X19, 1488
	526 Move [X19+1520], W1
	527 Move X8, [X8+952]
	528 Move X2, [X8]
	529 Call TMP_TextProcessingStack`1<Int32>.SetDefault, X0, X1
	530 Move X8, 0x695000
	531 Move X8, [X8+896]
	532 Add X0, X19, 1528
	533 Move X1, [X8]
	534 Call TMP_TextProcessingStack`1<Int32>.Clear, X0
	535 Move X8, [X19+256]
	536 Move W9, 0xFE00
	537 NotImplemented "Instruction MOVK not yet implemented."
	538 Move [X19+1140], W31
	539 Move [X19+1240], W31
	540 Move [X19+704], W9
	541 Compare X8, 0
	542 JumpIfEqual {7843}
	543 Add X0, X8, 80
	544 Move X1, X31
	545 Add X23, X19, 256
	546 Call FaceInfo.get_lineHeight, X0
	547 Move X8, [X23]
	548 Compare X8, 0
	549 JumpIfEqual {7843}
	550 Add X0, X8, 80
	551 Move X1, X31
	552 Move V10, V0
	553 Call FaceInfo.get_ascentLine, X0
	554 Move X8, [X23]
	555 Move [X31+352], X23
	556 Compare X8, 0
	557 JumpIfEqual {7843}
	558 Add X0, X8, 80
	559 Move X1, X31
	560 Move V11, V0
	561 Add X23, X19, 684
	562 Call FaceInfo.get_descentLine, X0
	563 NotImplemented "Instruction MOVI not yet implemented."
	564 Move [X23], D8
	565 Move [X19+1600], W31
	566 Move [X19+1032], D8
	567 Move X1, [X21]
	568 Move V12, V0
	569 Add X0, X19, 1040
	570 Move S0, W31
	571 Call TMP_TextProcessingStack`1<Single>.SetDefault, X0, V0
	572 Move W8, [X19+804]
	573 Move [X19+1072], W31
	574 Move [X19+1172], W31
	575 Move [X31+368], S9
	576 Move [X19+1176], W8
	577 Move [X23+496], X31
	578 Move [X19+1188], W31
	579 Move X0, [X29]
	580 Move W8, [X0+224]
	581 Compare W8, 0
	582 JumpIfNotEqual {585}
	583 Call 0x1C17DFC
	584 Move X0, [X29]
	585 Move X8, [X0+184]
	586 Move X0, [X19+872]
	587 NotImplemented "Instruction MOVI not yet implemented."
	588 Move TEMP, 0
	589 Not TEMP
	590 Move W9, TEMP
	591 Move V1, [X8+5544]
	592 Move [X19+1192], D0
	593 Move [X19+1232], D8
	594 Move [X19+708], W31
	595 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	596 Move [X19+740], W9
	597 Move [X19+1224], D0
	598 Move [X19+1200], W31
	599 Compare X0, 0
	600 JumpIfEqual {7843}
	601 Move X8, [X0+88]
	602 Compare X8, 0
	603 JumpIfEqual {7843}
	604 Move W9, [X19+824]
	605 Move W8, [X8+24]
	606 Move X1, X31
	607 Move V9, V13
	608 Subtract W9, W9, 1
	609 Subtract W8, W8, 1
	610 NotImplemented "Instruction CMP not yet implemented."
	611 NotImplemented "Instruction CSEL not yet implemented."
	612 NotImplemented "Instruction CMP not yet implemented."
	613 NotImplemented "Instruction CSEL not yet implemented."
	614 Move V13, V15
	615 Move [X31+80], W8
	616 Call TMP_TextInfo.ClearPageInfo, X0
	617 Move V0, [X19+832]
	618 Move W8, 0xBF800000
	619 Move [X19+864], W8
	620 Move V1, [X19+836]
	621 Move [X31+48], S0
	622 NotImplemented "Instruction MOVI not yet implemented."
	623 Move [X19+848], D0
	624 Move X0, [X29]
	625 Move V0, [X19+844]
	626 Move V15, [X19+856]
	627 Move V8, [X19+860]
	628 Move W8, [X0+224]
	629 Move [X31+36], S1
	630 Move [X31+44], S0
	631 Compare W8, 0
	632 JumpIfNotEqual {635}
	633 Call 0x1C17DFC
	634 Move X0, [X29]
	635 Move X8, [X0+184]
	636 Move X8, [X8+5528]
	637 Move [X23+560], X8
	638 Move X8, [X0+184]
	639 Move X8, [X8+5536]
	640 Move [X23+568], X8
	641 Move X0, [X19+872]
	642 Compare X0, 0
	643 JumpIfEqual {7843}
	644 Move X1, X31
	645 Call TMP_TextInfo.ClearLineInfo, X0
	646 Add X0, X31, 4096
	647 NotImplemented "Instruction MOVI not yet implemented."
	648 Add X8, X31, 117
	649 Add X0, X0, 104
	650 Move TEMP, 0
	651 Not TEMP
	652 Move W1, TEMP
	653 Move W2, W31
	654 Move X3, X31
	655 Move [X19+1212], W31
	656 Move [X19+1220], W31
	657 Move [X31+128], X23
	658 Move [X23+520], D0
	659 Move [X31+4216], W31
	660 Move [X8+4095], W31
	661 Move [X19+828], W31
	662 Move [X19+730], W31
	663 Call CharacterSubstitution..ctor, X0, X1, X2
	664 Move X8, [X29]
	665 Move TEMP, 0
	666 Not TEMP
	667 Move W2, TEMP
	668 Move TEMP, 0
	669 Not TEMP
	670 Move W3, TEMP
	671 Move X0, X19
	672 Move X8, [X8+184]
	673 Move X4, X31
	674 Add X1, X8, 152
	675 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	676 Move X8, [X29]
	677 Move TEMP, 0
	678 Not TEMP
	679 Move W2, TEMP
	680 Move TEMP, 0
	681 Not TEMP
	682 Move W3, TEMP
	683 Move X0, X19
	684 Move X8, [X8+184]
	685 Move X4, X31
	686 Add X1, X8, 1040
	687 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	688 Move X8, [X29]
	689 Move TEMP, 0
	690 Not TEMP
	691 Move W2, TEMP
	692 Move TEMP, 0
	693 Not TEMP
	694 Move W3, TEMP
	695 Move X0, X19
	696 Move X8, [X8+184]
	697 Move X4, X31
	698 Add X1, X8, 1928
	699 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	700 Move X8, [X29]
	701 Move TEMP, 0
	702 Not TEMP
	703 Move W2, TEMP
	704 Move TEMP, 0
	705 Not TEMP
	706 Move W3, TEMP
	707 Move X0, X19
	708 Move X8, [X8+184]
	709 Move X4, X31
	710 Add X1, X8, 2816
	711 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	712 Move X8, [X29]
	713 Move TEMP, 0
	714 Not TEMP
	715 Move W2, TEMP
	716 Move TEMP, 0
	717 Not TEMP
	718 Move W3, TEMP
	719 Move X0, X19
	720 Move X8, [X8+184]
	721 Move X4, X31
	722 Add X1, X8, 3704
	723 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	724 Move X8, [X29]
	725 Move X9, 0x695000
	726 Move X8, [X8+184]
	727 Move X9, [X9+888]
	728 Move X1, [X9]
	729 Move W9, 0x11F0
	730 Add X0, X8, X9
	731 Call TMP_TextProcessingStack`1<WordWrapState>.Clear, X0
	732 Move [X31+4168], W31
	733 Move X8, [X19+1144]
	734 Compare X8, 0
	735 JumpIfEqual {7843}
	736 Move X12, [X31+128]
	737 Add X13, X19, 484
	738 NotImplemented "Instruction SCVTF not yet implemented."
	739 Subtract S2, S11, S12
	740 Add X23, X12, 488
	741 Add X12, X19, 848
	742 Move [X31+176], X12
	743 Add X12, X19, 852
	744 Move [X31+160], X12
	745 Subtract W12, W20, 1
	746 Move [X31+136], W12
	747 Add X12, X19, 1076
	748 Move [X31+120], X12
	749 Add X12, X19, 580
	750 Move [X31+56], X12
	751 Move [X31+64], X13
	752 Move X12, -50171904
	753 Move V5, [X12+92]
	754 Move S0, W31
	755 NotImplemented "Instruction FDIV not yet implemented."
	756 NotImplemented "Instruction FMAXNM not yet implemented."
	757 Move [X31+44], S5
	758 Subtract S5, S10, S2
	759 Move S2, W31
	760 Move [X31+336], S2
	761 NotImplemented "Instruction FMAXNM not yet implemented."
	762 Multiply S0, S1, S13
	763 Move X10, -50171904
	764 Multiply S0, S0, S9
	765 Move X11, -50176000
	766 Move V4, [X10+816]
	767 Move [X31+84], S5
	768 Move [X31+92], S0
	769 Multiply S1, S0, S5
	770 Move V11, V0
	771 Move V0, [X31+368]
	772 Move V3, [X11+3880]
	773 Add X22, X19, 872
	774 Move [X31+92], S4
	775 Move [X31+100], S1
	776 Multiply S0, S0, S4
	777 Add S1, S2, S3
	778 Add S2, S6, S3
	779 Multiply S0, S0, S9
	780 Move W11, 1
	781 Move W10, 1
	782 Move [X31+52], W31
	783 Move [X31+116], W31
	784 Move [X31+360], W31
	785 Move [X31+76], W31
	786 Move W9, W31
	787 Move W21, 376
	788 Move [X31+32], S6
	789 Move [X31+184], S2
	790 Move [X31+224], S0
	791 Move [X31+152], S1
	792 Move [X31+232], S1
	793 Move [X31+100], W11
	794 Move [X31+104], W10
	795 Move [X31+368], X22
	796 Move W10, [X8+24]
	797 NotImplemented "Instruction CMP not yet implemented."
	798 Move W10, 12
	799 NotImplemented "Instruction SMADDL not yet implemented."
	800 Move W8, [X8+32]
	801 Compare W8, 0
	802 JumpIfEqual {4708}
	803 Move W9, [X31+360]
	804 Move [X31+4220], W8
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Add X0, X31, 4096
	807 Add X0, X0, 124
	808 Move X1, X31
	809 Call Int32.ToString, X0
	810 Move X25, X0
	811 Add X0, X31, 4096
	812 Add X0, X0, 72
	813 Move X1, X31
	814 Call Int32.ToString, X0
	815 Move X8, 0x695000
	816 Move X8, [X8+1024]
	817 Move X9, 0x695000
	818 Move X3, X0
	819 Move X1, X25
	820 Move X8, [X8]
	821 Move X9, [X9+1040]
	822 Move X4, X31
	823 Move X0, X8
	824 Move X2, [X9]
	825 Call String.Concat, X0, X1, X2, X3
	826 Move X8, 0x630000
	827 Move X8, [X8+2600]
	828 Move X25, X0
	829 Move X8, [X8]
	830 Move W9, [X8+224]
	831 Compare W9, 0
	832 JumpIfNotEqual {835}
	833 Move X0, X8
	834 Call 0x1C17DFC
	835 Move X0, X25
	836 Move X1, X31
	837 Call Debug.LogError, X0
	838 Move W9, [X23]
	839 Move W8, [X31+4220]
	840 Move [X31+4200], W9
	841 Move W9, 3
	842 Move [X31+4204], W9
	843 Move W9, [X19+770]
	844 Compare W9, 0
	845 JumpIfEqual {867}
	846 NotImplemented "Instruction CMP not yet implemented."
	847 Move W8, 1
	848 Move [X19+1073], W8
	849 Move [X19+1604], W31
	850 Move W8, [X31+4168]
	851 Move X1, [X19+1144]
	852 Add X3, X31, 4096
	853 Add X3, X3, 44
	854 Add W2, W8, 1
	855 Move X0, X19
	856 Move X4, X31
	857 Call TMP_Text.ValidateHtmlTag, X0, X1, X2, X3
	858 Move TEMP, X0
	859 And TEMP, TEMP, 1
	860 Compare TEMP, 1
	861 JumpIfNotEqual {883}
	862 Move W8, [X31+4140]
	863 Move [X31+4168], W8
	864 Move W8, [X19+1604]
	865 Compare W8, 0
	866 JumpIfNotEqual {883}
	867 Move X8, [X22]
	868 Compare X8, 0
	869 JumpIfEqual {7843}
	870 Move X8, [X8+56]
	871 Compare X8, 0
	872 JumpIfEqual {7843}
	873 NotImplemented "Instruction LDRSW not yet implemented."
	874 Move W10, [X8+24]
	875 NotImplemented "Instruction CMP not yet implemented."
	876 NotImplemented "Instruction MADD not yet implemented."
	877 Move W9, [X8+44]
	878 Move [X19+1604], W9
	879 Move W9, [X8+88]
	880 Move [X19+288], W9
	881 Move X8, [X8+56]
	882 Move [X19+256], X8
	883 Move X8, [X19+872]
	884 Compare X8, 0
	885 JumpIfEqual {7843}
	886 Move X25, [X8+56]
	887 Compare X25, 0
	888 JumpIfEqual {7843}
	889 Move W22, [X23]
	890 Move W8, [X25+24]
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Move X26, W22
	893 NotImplemented "Instruction MADD not yet implemented."
	894 Move W24, [X8+92]
	895 Move [X19+1073], W31
	896 Move W8, [X31+4200]
	897 Move W28, [X19+288]
	898 NotImplemented "Instruction CMP not yet implemented."
	899 Move W8, [X31+4204]
	900 Move W9, 0x2026
	901 Move W20, 1
	902 NotImplemented "Instruction CMP not yet implemented."
	903 Move [X31+4220], W8
	904 Move [X19+1604], W31
	905 NotImplemented "Instruction CMP not yet implemented."
	906 Move X8, [X31+352]
	907 Move X0, [X8]
	908 Compare X0, 0
	909 JumpIfEqual {7843}
	910 Move X1, X31
	911 Call TMP_FontAsset.get_characterLookupTable, X0
	912 Compare X0, 0
	913 JumpIfEqual {7843}
	914 Move X8, 0x695000
	915 Move X8, [X8+808]
	916 Move W1, 3
	917 Move X2, [X8]
	918 Call Dictionary`2<UInt32, Object>.get_Item, X0, X1
	919 Move W8, [X25+24]
	920 NotImplemented "Instruction CMP not yet implemented."
	921 NotImplemented "Instruction MADD not yet implemented."
	922 Move [X8+48], X0
	923 Move W22, [X19+1172]
	924 Move W20, 1
	925 Move [X19+760], W20
	926 Move W20, W31
	927 Move X8, [X19+1616]
	928 NotImplemented "Instruction NOP not yet implemented."
	929 NotImplemented "Instruction MADD not yet implemented."
	930 Move [X9+44], W31
	931 Add W10, W22, 1
	932 Move [X9+48], X8
	933 Move X8, [X19+1624]
	934 Move [X9+56], X8
	935 Move X8, [X19+1632]
	936 Move [X9+80], X8
	937 Move W8, [X19+1640]
	938 Move [X9+88], W8
	939 Move W8, 3
	940 Move [X19+760], W20
	941 Move [X31+4200], W10
	942 Move [X31+4204], W8
	943 Move W8, [X19+804]
	944 Move W25, [X31+4220]
	945 NotImplemented "Instruction CMP not yet implemented."
	946 NotImplemented "Instruction CMP not yet implemented."
	947 Move X8, [X31+368]
	948 Move X8, [X8]
	949 Compare X8, 0
	950 JumpIfEqual {7843}
	951 Move X8, [X8+56]
	952 Compare X8, 0
	953 JumpIfEqual {7843}
	954 Move W9, [X8+24]
	955 NotImplemented "Instruction CMP not yet implemented."
	956 NotImplemented "Instruction SMADDL not yet implemented."
	957 Add W9, W22, 1
	958 Move X22, [X31+368]
	959 Move W10, 0x200B
	960 Move [X8+404], W31
	961 NotImplemented "Instruction STRH not yet implemented."
	962 Move [X8+100], W31
	963 Move [X23], W9
	964 Move V13, V11
	965 Move W8, [X31+4168]
	966 Move V11, V13
	967 Add W9, W8, 1
	968 Move [X31+4168], W9
	969 Move X8, [X19+1144]
	970 Compare X8, 0
	971 JumpIfNotEqual {796}
	972 Move W8, [X19+1604]
	973 Compare W8, 0
	974 JumpIfEqual {1015}
	975 Move X22, [X31+368]
	976 Move S0, 1
	977 Move [X31+328], S0
	978 Compare W8, 0
	979 JumpIfEqual {1246}
	980 NotImplemented "Instruction CMP not yet implemented."
	981 Move X8, [X22]
	982 Compare X8, 0
	983 JumpIfEqual {7843}
	984 Move X8, [X8+56]
	985 Compare X8, 0
	986 JumpIfEqual {7843}
	987 NotImplemented "Instruction LDRSW not yet implemented."
	988 Move W10, [X8+24]
	989 NotImplemented "Instruction CMP not yet implemented."
	990 NotImplemented "Instruction MADD not yet implemented."
	991 Move X0, [X8+64]
	992 Move [X19+1688], X0
	993 Move W8, [X8+72]
	994 Move [X19+1700], W8
	995 Compare X0, 0
	996 JumpIfEqual {7843}
	997 Move X1, X31
	998 Call TMP_SpriteAsset.get_spriteCharacterTable, X0
	999 Compare X0, 0
	1000 JumpIfEqual {7843}
	1001 Move X8, 0x694000
	1002 Move W1, [X19+1700]
	1003 Move X8, [X8+816]
	1004 Move X2, [X8]
	1005 Call List`1<Object>.get_Item, X0, X1
	1006 Compare X0, 0
	1007 JumpIfEqual {964}
	1008 Move W8, [X31+4220]
	1009 Move X25, X0
	1010 NotImplemented "Instruction CMP not yet implemented."
	1011 Move W8, [X19+1700]
	1012 Move X22, [X31+352]
	1013 Add W8, W8, 0xE000
	1014 Move [X31+4220], W8
	1015 Move W8, [X19+604]
	1016 Move X22, [X31+368]
	1017 Move TEMP, X8
	1018 And TEMP, TEMP, 16
	1019 Compare TEMP, 16
	1020 JumpIfEqual {1075}
	1021 Move TEMP, X8
	1022 And TEMP, TEMP, 8
	1023 Compare TEMP, 8
	1024 JumpIfEqual {1214}
	1025 Move S0, 1
	1026 Move [X31+328], S0
	1027 Move TEMP, X8
	1028 And TEMP, TEMP, 32
	1029 Compare TEMP, 32
	1030 JumpIfNotEqual {1243}
	1031 Move X8, 0x631000
	1032 Move X8, [X8+368]
	1033 Move X0, [X8]
	1034 Move W8, [X0+224]
	1035 Compare W8, 0
	1036 JumpIfNotEqual {1038}
	1037 Call 0x1C17DFC
	1038 Move W0, W25
	1039 Move X1, X31
	1040 Call Char.IsLower, X0
	1041 Move TEMP, X0
	1042 And TEMP, TEMP, 1
	1043 Compare TEMP, 1
	1044 JumpIfNotEqual {1243}
	1045 Move X8, 0x631000
	1046 Move X8, [X8+368]
	1047 Move W25, [X31+4220]
	1048 Move X0, [X8]
	1049 Move W8, [X0+224]
	1050 Compare W8, 0
	1051 JumpIfNotEqual {1053}
	1052 Call 0x1C17DFC
	1053 Move W0, W25
	1054 Move X1, X31
	1055 Call Char.ToUpper, X0
	1056 Move V0, [X31+44]
	1057 And W8, W0, 0xFFFF
	1058 Move [X31+4220], W8
	1059 Move [X31+328], S0
	1060 Move W9, [X31+4220]
	1061 Move X8, [X22]
	1062 Move W10, 173
	1063 Move S1, W31
	1064 NotImplemented "Instruction CMP not yet implemented."
	1065 NotImplemented "Instruction CCMP not yet implemented."
	1066 Move S0, W31
	1067 NotImplemented "Instruction FCSEL not yet implemented."
	1068 Move [X31+348], S0
	1069 Compare X8, 0
	1070 JumpIfEqual {7843}
	1071 Move S0, W31
	1072 Move [X31+272], S0
	1073 Move S0, W31
	1074 Move [X31+264], S0
	1075 Move X8, 0x631000
	1076 Move X8, [X8+368]
	1077 Move X0, [X8]
	1078 Move W8, [X0+224]
	1079 Compare W8, 0
	1080 JumpIfNotEqual {1082}
	1081 Call 0x1C17DFC
	1082 Move W0, W25
	1083 Move X1, X31
	1084 Call Char.IsLower, X0
	1085 Move S0, 1
	1086 Move [X31+328], S0
	1087 Move TEMP, X0
	1088 And TEMP, TEMP, 1
	1089 Compare TEMP, 1
	1090 JumpIfNotEqual {1243}
	1091 Move X8, 0x631000
	1092 Move X8, [X8+368]
	1093 Move W25, [X31+4220]
	1094 Move X0, [X8]
	1095 Move W8, [X0+224]
	1096 Compare W8, 0
	1097 JumpIfNotEqual {1099}
	1098 Call 0x1C17DFC
	1099 Move W0, W25
	1100 Move X1, X31
	1101 Call Char.ToUpper, X0
	1102 Move X0, [X29]
	1103 Move W8, [X0+224]
	1104 Compare W8, 0
	1105 JumpIfNotEqual {1108}
	1106 Call 0x1C17DFC
	1107 Move X0, [X29]
	1108 Move X8, [X0+184]
	1109 Move X22, [X31+352]
	1110 Move W8, [X8+104]
	1111 Move [X19+444], W8
	1112 Move X8, [X19+256]
	1113 Compare X8, 0
	1114 JumpIfEqual {7843}
	1115 Move V8, [X19+488]
	1116 Add X1, X8, 80
	1117 Add X0, X31, 4032
	1118 Move W2, 96
	1119 Call 0x3EB2B30
	1120 Add X0, X31, 4032
	1121 Move X1, X31
	1122 Call FaceInfo.get_pointSize, X0
	1123 Move X8, [X22]
	1124 Compare X8, 0
	1125 JumpIfEqual {7843}
	1126 Move W26, W0
	1127 Add X1, X8, 80
	1128 Add X0, X31, 4032
	1129 Move W2, 96
	1130 Call 0x3EB2B30
	1131 Add X0, X31, 4032
	1132 Move X1, X31
	1133 Call FaceInfo.get_scale, X0
	1134 Move W9, [X19+773]
	1135 Move V1, [X31+144]
	1136 Move X8, [X19+1688]
	1137 Move S2, 1
	1138 NotImplemented "Instruction CMP not yet implemented."
	1139 NotImplemented "Instruction FCSEL not yet implemented."
	1140 Compare X8, 0
	1141 JumpIfEqual {7843}
	1142 NotImplemented "Instruction SCVTF not yet implemented."
	1143 NotImplemented "Instruction FDIV not yet implemented."
	1144 Multiply S0, S2, S0
	1145 Add X0, X8, 72
	1146 Move X1, X31
	1147 Multiply S15, S0, S1
	1148 Call FaceInfo.get_pointSize, X0
	1149 Move V14, [X19+488]
	1150 NotImplemented "Instruction CMP not yet implemented."
	1151 Move X8, [X19+1688]
	1152 Compare X8, 0
	1153 JumpIfEqual {7843}
	1154 Add X0, X8, 72
	1155 Move X1, X31
	1156 Call FaceInfo.get_pointSize, X0
	1157 Move X8, [X19+1688]
	1158 Compare X8, 0
	1159 JumpIfEqual {7843}
	1160 Move W26, W0
	1161 Add X0, X8, 72
	1162 Move X1, X31
	1163 Call FaceInfo.get_scale, X0
	1164 Move X0, [X25+32]
	1165 Compare X0, 0
	1166 JumpIfEqual {7843}
	1167 Move W8, [X19+773]
	1168 Move V8, V0
	1169 Move V0, [X31+144]
	1170 Move V12, [X25+44]
	1171 NotImplemented "Instruction CMP not yet implemented."
	1172 Move S1, 1
	1173 Move X1, X31
	1174 NotImplemented "Instruction FCSEL not yet implemented."
	1175 Call Glyph.get_scale, X0
	1176 Move X8, [X19+1688]
	1177 Compare X8, 0
	1178 JumpIfEqual {7843}
	1179 Add X0, X8, 72
	1180 Move X1, X31
	1181 Move V9, V0
	1182 Call FaceInfo.get_ascentLine, X0
	1183 Move X8, [X19+1688]
	1184 Move [X31+272], S0
	1185 Compare X8, 0
	1186 JumpIfEqual {7843}
	1187 Add X0, X8, 72
	1188 Move X1, X31
	1189 Call FaceInfo.get_baseline, X0
	1190 Move X8, [X19+1688]
	1191 Compare X8, 0
	1192 JumpIfEqual {7843}
	1193 Move V13, [X19+1028]
	1194 Add X0, X8, 72
	1195 Move X1, X31
	1196 Move V10, V0
	1197 Call FaceInfo.get_scale, X0
	1198 Move X8, [X19+1688]
	1199 Compare X8, 0
	1200 JumpIfEqual {7843}
	1201 NotImplemented "Instruction SCVTF not yet implemented."
	1202 Multiply S3, S15, S10
	1203 NotImplemented "Instruction FDIV not yet implemented."
	1204 Multiply S3, S3, S13
	1205 Multiply S1, S1, S8
	1206 Multiply S0, S3, S0
	1207 Multiply S2, S12, S9
	1208 Move [X31+348], S0
	1209 Multiply S0, S1, S11
	1210 Add X0, X8, 72
	1211 Move X1, X31
	1212 Multiply S11, S0, S2
	1213 Call FaceInfo.get_descentLine, X0
	1214 Move X8, 0x631000
	1215 Move X8, [X8+368]
	1216 Move X0, [X8]
	1217 Move W8, [X0+224]
	1218 Compare W8, 0
	1219 JumpIfNotEqual {1221}
	1220 Call 0x1C17DFC
	1221 Move W0, W25
	1222 Move X1, X31
	1223 Call Char.IsUpper, X0
	1224 Move S0, 1
	1225 Move [X31+328], S0
	1226 Move TEMP, X0
	1227 And TEMP, TEMP, 1
	1228 Compare TEMP, 1
	1229 JumpIfNotEqual {1243}
	1230 Move X8, 0x631000
	1231 Move X8, [X8+368]
	1232 Move W25, [X31+4220]
	1233 Move X0, [X8]
	1234 Move W8, [X0+224]
	1235 Compare W8, 0
	1236 JumpIfNotEqual {1238}
	1237 Call 0x1C17DFC
	1238 Move W0, W25
	1239 Move X1, X31
	1240 Call Char.ToLower, X0
	1241 And W8, W0, 0xFFFF
	1242 Move [X31+4220], W8
	1243 Move W8, [X19+1604]
	1244 Compare W8, 0
	1245 JumpIfNotEqual {980}
	1246 Move X8, [X22]
	1247 Compare X8, 0
	1248 JumpIfEqual {7843}
	1249 Move X8, [X8+56]
	1250 Compare X8, 0
	1251 JumpIfEqual {7843}
	1252 NotImplemented "Instruction LDRSW not yet implemented."
	1253 Move W11, [X8+24]
	1254 NotImplemented "Instruction CMP not yet implemented."
	1255 NotImplemented "Instruction MADD not yet implemented."
	1256 Move X10, [X10+48]
	1257 Move [X19+1608], X10
	1258 Compare X10, 0
	1259 JumpIfEqual {964}
	1260 NotImplemented "Instruction MADD not yet implemented."
	1261 Move X10, [X12+56]
	1262 Move X22, [X31+352]
	1263 Move [X19+256], X10
	1264 Move X13, [X12+80]
	1265 Move [X19+280], X13
	1266 Move W12, [X12+88]
	1267 Move [X19+288], W12
	1268 Compare W20, 0
	1269 JumpIfEqual {1282}
	1270 Move X12, [X19+1144]
	1271 Compare X12, 0
	1272 JumpIfEqual {7843}
	1273 NotImplemented "Instruction LDRSW not yet implemented."
	1274 Move W14, [X12+24]
	1275 NotImplemented "Instruction CMP not yet implemented."
	1276 Move W14, 12
	1277 NotImplemented "Instruction MADD not yet implemented."
	1278 Move W12, [X12+32]
	1279 NotImplemented "Instruction CMP not yet implemented."
	1280 Move W12, [X19+1176]
	1281 NotImplemented "Instruction CMP not yet implemented."
	1282 Compare X10, 0
	1283 JumpIfEqual {7843}
	1284 Move V11, [X19+488]
	1285 Add X0, X10, 80
	1286 Move X1, X31
	1287 Call FaceInfo.get_pointSize, X0
	1288 Move X8, [X19+256]
	1289 Compare X8, 0
	1290 JumpIfEqual {7843}
	1291 Move W25, W0
	1292 Add X0, X8, 80
	1293 Move X1, X31
	1294 Call FaceInfo.get_scale, X0
	1295 Move W8, [X19+773]
	1296 Move V8, V0
	1297 Move W9, [X31+4220]
	1298 Move V0, [X31+144]
	1299 NotImplemented "Instruction CMP not yet implemented."
	1300 Move S1, 1
	1301 Move W8, 0x2026
	1302 NotImplemented "Instruction FCSEL not yet implemented."
	1303 NotImplemented "Instruction CMP not yet implemented."
	1304 NotImplemented "Instruction CSET not yet implemented."
	1305 And W8, W20, W8
	1306 Move S1, W31
	1307 Move S0, W31
	1308 Move [X31+272], S0
	1309 Move TEMP, X8
	1310 And TEMP, TEMP, 1
	1311 Compare TEMP, 1
	1312 JumpIfEqual {1327}
	1313 Move X8, [X22]
	1314 Compare X8, 0
	1315 JumpIfEqual {7843}
	1316 Add X0, X8, 80
	1317 Move X1, X31
	1318 Call FaceInfo.get_ascentLine, X0
	1319 Move X8, [X22]
	1320 Move [X31+272], S0
	1321 Compare X8, 0
	1322 JumpIfEqual {7843}
	1323 Add X0, X8, 80
	1324 Move X1, X31
	1325 Call FaceInfo.get_descentLine, X0
	1326 Move V1, V0
	1327 Move X8, [X19+1608]
	1328 Compare X8, 0
	1329 JumpIfEqual {7843}
	1330 Move X0, [X8+32]
	1331 Move [X31+264], S1
	1332 Compare X0, 0
	1333 JumpIfEqual {7843}
	1334 Move V13, [X19+1028]
	1335 Move V14, [X8+44]
	1336 Move X1, X31
	1337 Call Glyph.get_scale, X0
	1338 Move X8, [X22]
	1339 Compare X8, 0
	1340 JumpIfEqual {7843}
	1341 Add X0, X8, 80
	1342 Move X1, X31
	1343 Move V9, V0
	1344 Call FaceInfo.get_baseline, X0
	1345 Move X8, [X22]
	1346 Compare X8, 0
	1347 JumpIfEqual {7843}
	1348 Move V15, [X19+1028]
	1349 Add X0, X8, 80
	1350 Move X1, X31
	1351 Move V10, V0
	1352 Call FaceInfo.get_scale, X0
	1353 Move X8, [X19+872]
	1354 Compare X8, 0
	1355 JumpIfEqual {7843}
	1356 Move X9, [X8+56]
	1357 Compare X9, 0
	1358 JumpIfEqual {7843}
	1359 NotImplemented "Instruction LDRSW not yet implemented."
	1360 Move W11, [X9+24]
	1361 NotImplemented "Instruction CMP not yet implemented."
	1362 Move V1, [X31+328]
	1363 NotImplemented "Instruction SCVTF not yet implemented."
	1364 NotImplemented "Instruction MADD not yet implemented."
	1365 Move [X9+44], W31
	1366 Multiply S1, S1, S11
	1367 NotImplemented "Instruction FDIV not yet implemented."
	1368 Multiply S1, S1, S8
	1369 Multiply S1, S1, S12
	1370 Multiply S2, S1, S13
	1371 Multiply S2, S2, S14
	1372 Multiply S11, S2, S9
	1373 Move [X9+352], S11
	1374 NotImplemented "Instruction LDRSW not yet implemented."
	1375 Multiply S1, S1, S10
	1376 Multiply S1, S1, S15
	1377 Multiply S0, S1, S0
	1378 Move [X31+348], S0
	1379 Compare W9, 0
	1380 JumpIfEqual {1511}
	1381 Move X10, [X19+1800]
	1382 Compare X10, 0
	1383 JumpIfEqual {7843}
	1384 Move W11, [X10+24]
	1385 NotImplemented "Instruction CMP not yet implemented."
	1386 Add X9, X10, X9
	1387 Move X9, [X9+32]
	1388 Compare X9, 0
	1389 JumpIfEqual {7843}
	1390 Move V0, [X9+268]
	1391 Move X8, [X22]
	1392 Compare X8, 0
	1393 JumpIfEqual {7843}
	1394 Add X0, X8, 80
	1395 Move X1, X31
	1396 Call FaceInfo.get_pointSize, X0
	1397 Move X8, [X22]
	1398 Compare X8, 0
	1399 JumpIfEqual {7843}
	1400 Move W26, W0
	1401 Add X0, X8, 80
	1402 Move X1, X31
	1403 Call FaceInfo.get_scale, X0
	1404 Move W9, [X19+773]
	1405 Move V8, V0
	1406 Move V0, [X31+144]
	1407 Move X8, [X19+256]
	1408 NotImplemented "Instruction CMP not yet implemented."
	1409 Move S1, 1
	1410 NotImplemented "Instruction FCSEL not yet implemented."
	1411 Compare X8, 0
	1412 JumpIfEqual {7843}
	1413 Add X0, X8, 80
	1414 Move X1, X31
	1415 Move [X31+348], S14
	1416 Call FaceInfo.get_ascentLine, X0
	1417 Move X0, [X25+32]
	1418 Compare X0, 0
	1419 JumpIfEqual {7843}
	1420 Add X8, X31, 4096
	1421 Add X8, X8, 128
	1422 Move X1, X31
	1423 Move V12, V0
	1424 Move [X31+336], S15
	1425 Call Glyph.get_metrics, X0
	1426 Move V0, [X27+14]
	1427 Move W8, [X31+4240]
	1428 Add X0, X31, 4000
	1429 Move X1, X31
	1430 Move [X27], V0
	1431 Move [X31+4016], W8
	1432 Call GlyphMetrics.get_height, X0
	1433 Move X0, [X25+32]
	1434 Compare X0, 0
	1435 JumpIfEqual {7843}
	1436 Move V10, [X25+44]
	1437 Move X1, X31
	1438 Move V11, V0
	1439 Call Glyph.get_scale, X0
	1440 Move X8, [X22]
	1441 Compare X8, 0
	1442 JumpIfEqual {7843}
	1443 Add X0, X8, 80
	1444 Move X1, X31
	1445 Move [X31+320], S0
	1446 Call FaceInfo.get_ascentLine, X0
	1447 Move X8, [X22]
	1448 Compare X8, 0
	1449 JumpIfEqual {7843}
	1450 Add X0, X8, 80
	1451 Move X1, X31
	1452 Move V15, V0
	1453 Move V14, V8
	1454 Call FaceInfo.get_baseline, X0
	1455 Move X8, [X22]
	1456 Compare X8, 0
	1457 JumpIfEqual {7843}
	1458 Move V8, [X19+1028]
	1459 Add X0, X8, 80
	1460 Move X1, X31
	1461 Move V13, V0
	1462 Call FaceInfo.get_scale, X0
	1463 Move X8, [X19+256]
	1464 Compare X8, 0
	1465 JumpIfEqual {7843}
	1466 Move V4, [X31+348]
	1467 Move V3, [X31+336]
	1468 NotImplemented "Instruction SCVTF not yet implemented."
	1469 NotImplemented "Instruction FDIV not yet implemented."
	1470 NotImplemented "Instruction FDIV not yet implemented."
	1471 Move V4, [X31+320]
	1472 Multiply S3, S3, S13
	1473 Multiply S3, S3, S8
	1474 Multiply S2, S2, S10
	1475 Multiply S1, S1, S14
	1476 Multiply S0, S3, S0
	1477 Multiply S2, S2, S4
	1478 Move [X31+348], S0
	1479 Multiply S0, S1, S9
	1480 Multiply S11, S0, S2
	1481 NotImplemented "Instruction FDIV not yet implemented."
	1482 Multiply S0, S8, S15
	1483 Add X0, X8, 80
	1484 Move X1, X31
	1485 Move [X31+272], S0
	1486 Call FaceInfo.get_descentLine, X0
	1487 Multiply S0, S8, S0
	1488 Move X8, [X19+872]
	1489 Move [X19+1608], X25
	1490 Compare X8, 0
	1491 JumpIfEqual {7843}
	1492 Move X9, [X8+56]
	1493 Compare X9, 0
	1494 JumpIfEqual {7843}
	1495 NotImplemented "Instruction LDRSW not yet implemented."
	1496 Move W11, [X9+24]
	1497 NotImplemented "Instruction CMP not yet implemented."
	1498 NotImplemented "Instruction MADD not yet implemented."
	1499 Move W10, 1
	1500 Move [X9+44], W10
	1501 Move [X9+352], S11
	1502 Move X10, [X19+1688]
	1503 Move [X31+264], S0
	1504 Move S0, W31
	1505 Move [X9+64], X10
	1506 Move X10, [X19+256]
	1507 Move [X9+56], X10
	1508 Move W10, [X19+288]
	1509 Move [X9+88], W10
	1510 Move [X19+288], W28
	1511 Move V0, [X19+1560]
	1512 Move W9, [X31+4220]
	1513 Move W10, 173
	1514 Move [X31+336], S0
	1515 Move S0, W31
	1516 NotImplemented "Instruction CMP not yet implemented."
	1517 NotImplemented "Instruction CCMP not yet implemented."
	1518 NotImplemented "Instruction FCSEL not yet implemented."
	1519 Move X8, [X8+56]
	1520 Compare X8, 0
	1521 JumpIfEqual {7843}
	1522 NotImplemented "Instruction LDRSW not yet implemented."
	1523 Move W11, [X8+24]
	1524 NotImplemented "Instruction CMP not yet implemented."
	1525 NotImplemented "Instruction MADD not yet implemented."
	1526 NotImplemented "Instruction STRH not yet implemented."
	1527 Move V0, [X19+488]
	1528 Move [X8+96], S0
	1529 Move W9, [X19+1260]
	1530 Move [X8+356], W9
	1531 Move X8, [X19+872]
	1532 Compare X8, 0
	1533 JumpIfEqual {7843}
	1534 Move X8, [X8+56]
	1535 Compare X8, 0
	1536 JumpIfEqual {7843}
	1537 NotImplemented "Instruction LDRSW not yet implemented."
	1538 Move W10, [X8+24]
	1539 NotImplemented "Instruction CMP not yet implemented."
	1540 Move W10, [X19+344]
	1541 NotImplemented "Instruction NOP not yet implemented."
	1542 NotImplemented "Instruction MADD not yet implemented."
	1543 Move [X8+360], W10
	1544 Move X8, [X19+872]
	1545 Compare X8, 0
	1546 JumpIfEqual {7843}
	1547 Move X8, [X8+56]
	1548 Compare X8, 0
	1549 JumpIfEqual {7843}
	1550 NotImplemented "Instruction LDRSW not yet implemented."
	1551 Move W10, [X8+24]
	1552 NotImplemented "Instruction CMP not yet implemented."
	1553 Move W10, [X19+348]
	1554 NotImplemented "Instruction NOP not yet implemented."
	1555 NotImplemented "Instruction MADD not yet implemented."
	1556 Move [X8+368], W10
	1557 Move X8, [X19+872]
	1558 Compare X8, 0
	1559 JumpIfEqual {7843}
	1560 Move X22, [X8+56]
	1561 Compare X22, 0
	1562 JumpIfEqual {7843}
	1563 Move X8, 0x694000
	1564 NotImplemented "Instruction LDRSW not yet implemented."
	1565 Move X8, [X8+992]
	1566 Move X0, [X31+208]
	1567 Move X1, [X8]
	1568 Add X8, X31, 432
	1569 Call TMP_TextProcessingStack`1<HighlightState>.get_current, X0
	1570 Move V0, [X31+27]
	1571 Move W8, [X31+448]
	1572 Move [X27+14], V0
	1573 Move [X31+4240], W8
	1574 Move W8, [X22+24]
	1575 NotImplemented "Instruction CMP not yet implemented."
	1576 Move W8, [X31+4240]
	1577 Move V0, [X27+14]
	1578 NotImplemented "Instruction NOP not yet implemented."
	1579 NotImplemented "Instruction MADD not yet implemented."
	1580 Move X22, [X31+368]
	1581 Add X9, X9, 380
	1582 Move [X9+16], W8
	1583 Move [X9], V0
	1584 Move X8, [X22]
	1585 Compare X8, 0
	1586 JumpIfEqual {7843}
	1587 Move X8, [X8+56]
	1588 Compare X8, 0
	1589 JumpIfEqual {7843}
	1590 NotImplemented "Instruction LDRSW not yet implemented."
	1591 Move W10, [X8+24]
	1592 NotImplemented "Instruction CMP not yet implemented."
	1593 Move W10, [X19+604]
	1594 NotImplemented "Instruction NOP not yet implemented."
	1595 NotImplemented "Instruction MADD not yet implemented."
	1596 Move [X8+400], W10
	1597 Move X8, [X19+1608]
	1598 Compare X8, 0
	1599 JumpIfEqual {7843}
	1600 Move X0, [X8+32]
	1601 Compare X0, 0
	1602 JumpIfEqual {7843}
	1603 Add X8, X31, 432
	1604 Move X1, X31
	1605 Call Glyph.get_metrics, X0
	1606 Move W25, [X31+4220]
	1607 Move V0, [X31+27]
	1608 Move W8, [X31+448]
	1609 NotImplemented "Instruction CMP not yet implemented."
	1610 Move [X27+9], V0
	1611 Move [X31+4160], W8
	1612 Move W29, W31
	1613 Move X8, 0x631000
	1614 Move X8, [X8+368]
	1615 Move X0, [X8]
	1616 Move W8, [X0+224]
	1617 Compare W8, 0
	1618 JumpIfNotEqual {1620}
	1619 Call 0x1C17DFC
	1620 Move W0, W25
	1621 Move X1, X31
	1622 Call Char.IsWhiteSpace, X0
	1623 And W29, W0, 1
	1624 Move W8, [X19+761]
	1625 Move V0, [X19+680]
	1626 Move [X19+764], W31
	1627 Move [X31+316], S0
	1628 Compare W8, 0
	1629 JumpIfEqual {1687}
	1630 Move X9, [X19+1608]
	1631 Compare X9, 0
	1632 JumpIfEqual {7843}
	1633 Move W8, [X23]
	1634 Move W22, [X9+40]
	1635 Move W9, [X31+136]
	1636 NotImplemented "Instruction CMP not yet implemented."
	1637 Move X9, [X31+368]
	1638 Move X9, [X9]
	1639 Compare X9, 0
	1640 JumpIfEqual {7843}
	1641 Move X9, [X9+56]
	1642 Compare X9, 0
	1643 JumpIfEqual {7843}
	1644 Move W10, [X9+24]
	1645 Add W8, W8, 1
	1646 NotImplemented "Instruction CMP not yet implemented."
	1647 NotImplemented "Instruction SMADDL not yet implemented."
	1648 Move X8, [X8+48]
	1649 Compare X8, 0
	1650 JumpIfEqual {7843}
	1651 Move X9, [X31+352]
	1652 Move X9, [X9]
	1653 Compare X9, 0
	1654 JumpIfEqual {7843}
	1655 Move X9, [X9+296]
	1656 Compare X9, 0
	1657 JumpIfEqual {7843}
	1658 Move X0, [X9+24]
	1659 Compare X0, 0
	1660 JumpIfEqual {7843}
	1661 Move X9, 0x694000
	1662 Move W8, [X8+40]
	1663 Move X9, [X9+800]
	1664 Add X2, X31, 3992
	1665 Or W1, W22, W8
	1666 Move X3, [X9]
	1667 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	1668 Move S14, W31
	1669 Move TEMP, X0
	1670 And TEMP, TEMP, 1
	1671 Compare TEMP, 1
	1672 JumpIfNotEqual {1696}
	1673 Move X8, [X31+3992]
	1674 Compare X8, 0
	1675 JumpIfEqual {7843}
	1676 Move W9, [X8+57]
	1677 Move S0, [X8+28]
	1678 Move S14, [X8+32]
	1679 Move V1, [X31+316]
	1680 Move S8, [X8+20]
	1681 Move S9, [X8+24]
	1682 And W31, W9, 1
	1683 Move [X31+288], S0
	1684 Move S0, W31
	1685 NotImplemented "Instruction FCSEL not yet implemented."
	1686 Move [X31+316], S1
	1687 Move S0, W31
	1688 Move [X31+288], S0
	1689 Move S9, W31
	1690 Move S8, W31
	1691 Move S0, W31
	1692 Move S14, W31
	1693 Move [X31+288], S0
	1694 Move S9, W31
	1695 Move S8, W31
	1696 Move S0, W31
	1697 Move [X31+288], S0
	1698 Move S9, W31
	1699 Move S8, W31
	1700 Move W8, [X23]
	1701 Subtract W8, W8, 1
	1702 Move X9, [X31+368]
	1703 Move X9, [X9]
	1704 Compare X9, 0
	1705 JumpIfEqual {7843}
	1706 Move X9, [X9+56]
	1707 Compare X9, 0
	1708 JumpIfEqual {7843}
	1709 Move W10, [X9+24]
	1710 NotImplemented "Instruction CMP not yet implemented."
	1711 NotImplemented "Instruction UMADDL not yet implemented."
	1712 Move X8, [X8+48]
	1713 Compare X8, 0
	1714 JumpIfEqual {7843}
	1715 Move X9, [X31+352]
	1716 Move X9, [X9]
	1717 Compare X9, 0
	1718 JumpIfEqual {7843}
	1719 Move X9, [X9+296]
	1720 Compare X9, 0
	1721 JumpIfEqual {7843}
	1722 Move X0, [X9+24]
	1723 Compare X0, 0
	1724 JumpIfEqual {7843}
	1725 Move X9, 0x694000
	1726 Move W8, [X8+40]
	1727 Move X9, [X9+800]
	1728 Add X2, X31, 3992
	1729 Or W1, W8, W22
	1730 Move X3, [X9]
	1731 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	1732 Move TEMP, X0
	1733 And TEMP, TEMP, 1
	1734 Compare TEMP, 1
	1735 JumpIfNotEqual {1762}
	1736 Move X8, [X31+3992]
	1737 Move X22, [X31+368]
	1738 Compare X8, 0
	1739 JumpIfEqual {7843}
	1740 Move S4, [X8+40]
	1741 Move S5, [X8+44]
	1742 Move S6, [X8+48]
	1743 Move S7, [X8+52]
	1744 Move V2, [X31+288]
	1745 Move V0, V8
	1746 Move V1, V9
	1747 Move V3, V14
	1748 Move X0, X31
	1749 Call TMP_GlyphValueRecord.op_Addition, X0, X1
	1750 Move X8, [X31+3992]
	1751 Move [X31+288], S2
	1752 Compare X8, 0
	1753 JumpIfEqual {7843}
	1754 Move W8, [X8+57]
	1755 Move V9, V1
	1756 Move V1, [X31+316]
	1757 Move V8, V0
	1758 And W31, W8, 1
	1759 Move S0, W31
	1760 NotImplemented "Instruction FCSEL not yet implemented."
	1761 Move [X31+316], S1
	1762 Move X22, [X31+368]
	1763 Move V0, [X31+288]
	1764 Move [X19+764], S0
	1765 Move W8, [X19+240]
	1766 Compare W8, 0
	1767 JumpIfEqual {1790}
	1768 Move V10, [X19+1600]
	1769 Add X0, X31, 4096
	1770 Add X0, X0, 48
	1771 Move X1, X31
	1772 Call GlyphMetrics.get_horizontalAdvance, X0
	1773 Move V1, [X19+724]
	1774 Move S2, 1
	1775 Move W9, 0x200B
	1776 Subtract S1, S2, S1
	1777 Multiply S0, S0, S1
	1778 Multiply S0, S13, S0
	1779 Subtract S0, S10, S0
	1780 Move [X19+1600], S0
	1781 Move W8, [X31+4220]
	1782 NotImplemented "Instruction CMP not yet implemented."
	1783 Compare W29, 0
	1784 JumpIfEqual {1790}
	1785 Move V1, [X19+692]
	1786 Move V2, [X31+224]
	1787 Multiply S1, S2, S1
	1788 Subtract S0, S0, S1
	1789 Move [X19+1600], S0
	1790 Move V10, [X19+688]
	1791 Move S1, W31
	1792 NotImplemented "Instruction FCMP not yet implemented."
	1793 Add X0, X31, 4096
	1794 Add X0, X0, 48
	1795 Move X1, X31
	1796 Call GlyphMetrics.get_width, X0
	1797 Add X0, X31, 4096
	1798 Add X0, X0, 48
	1799 Move X1, X31
	1800 Move V14, V0
	1801 Call GlyphMetrics.get_horizontalBearingX, X0
	1802 Move S3, 0.5
	1803 Move V1, [X19+724]
	1804 Multiply S2, S10, S3
	1805 Multiply S3, S14, S3
	1806 Add S0, S3, S0
	1807 Multiply S0, S13, S0
	1808 Move V3, [X19+1600]
	1809 Subtract S0, S2, S0
	1810 Move S2, 1
	1811 Subtract S1, S2, S1
	1812 Multiply S1, S1, S0
	1813 Add S0, S3, S1
	1814 Move [X19+1600], S0
	1815 Move W8, [X19+1604]
	1816 Move [X31+140], S1
	1817 Move [X31+228], S11
	1818 Compare W8, 0
	1819 JumpIfNotEqual {1827}
	1820 Compare W24, 0
	1821 JumpIfNotEqual {1827}
	1822 Move W8, [X19+604]
	1823 Move TEMP, X8
	1824 And TEMP, TEMP, 1
	1825 Compare TEMP, 1
	1826 JumpIfEqual {1934}
	1827 Move X8, 0x62F000
	1828 Move X8, [X8+1432]
	1829 Move X25, [X19+280]
	1830 Move X0, [X8]
	1831 Move W8, [X0+224]
	1832 Compare W8, 0
	1833 JumpIfNotEqual {1835}
	1834 Call 0x1C17DFC
	1835 Move X0, X25
	1836 Move X1, X31
	1837 Move X2, X31
	1838 Call Object.op_Inequality, X0, X1
	1839 Move S0, W31
	1840 Move [X31+220], S0
	1841 Move TEMP, X0
	1842 And TEMP, TEMP, 1
	1843 Compare TEMP, 1
	1844 JumpIfNotEqual {1932}
	1845 Move X9, 0x694000
	1846 Move X9, [X9+824]
	1847 Move X25, [X19+280]
	1848 Move X0, [X9]
	1849 Move W8, [X0+224]
	1850 Compare W8, 0
	1851 JumpIfNotEqual {1855}
	1852 Call 0x1C17DFC
	1853 Move X9, 0x694000
	1854 Move X9, [X9+824]
	1855 Compare X25, 0
	1856 JumpIfEqual {7843}
	1857 Move X8, [X9]
	1858 Move X0, X25
	1859 Move X2, X31
	1860 Move X26, X9
	1861 Move X8, [X8+184]
	1862 Move W1, [X8+84]
	1863 Call Material.HasProperty, X0, X1
	1864 Move TEMP, X0
	1865 And TEMP, TEMP, 1
	1866 Compare TEMP, 1
	1867 JumpIfNotEqual {1932}
	1868 Move X0, [X26]
	1869 Move X25, [X19+280]
	1870 Move X9, X26
	1871 Move W8, [X0+224]
	1872 Compare W8, 0
	1873 JumpIfNotEqual {1877}
	1874 Call 0x1C17DFC
	1875 Move X9, 0x694000
	1876 Move X9, [X9+824]
	1877 Compare X25, 0
	1878 JumpIfEqual {7843}
	1879 Move X8, [X9]
	1880 Move X0, X25
	1881 Move X2, X31
	1882 Move X26, X9
	1883 Move X8, [X8+184]
	1884 Move W1, [X8+204]
	1885 Call Material.HasProperty, X0, X1
	1886 Move TEMP, X0
	1887 And TEMP, TEMP, 1
	1888 Compare TEMP, 1
	1889 JumpIfNotEqual {1932}
	1890 Move X0, [X26]
	1891 Move X25, [X19+280]
	1892 Move W8, [X0+224]
	1893 Compare W8, 0
	1894 JumpIfNotEqual {1898}
	1895 Call 0x1C17DFC
	1896 Move X26, 0x694000
	1897 Move X26, [X26+824]
	1898 Compare X25, 0
	1899 JumpIfEqual {7843}
	1900 Move X8, [X26]
	1901 Move X0, X25
	1902 Move X2, X31
	1903 Move X8, [X8+184]
	1904 Move W1, [X8+84]
	1905 Call Material.GetFloat, X0, X1
	1906 Move X8, [X31+352]
	1907 Move X8, [X8]
	1908 Compare X8, 0
	1909 JumpIfEqual {7843}
	1910 Move X0, [X19+280]
	1911 Compare X0, 0
	1912 JumpIfEqual {7843}
	1913 Move X9, 0x694000
	1914 Move X9, [X9+824]
	1915 Move V10, [X8+424]
	1916 Move X2, X31
	1917 Move V15, V0
	1918 Move X9, [X9]
	1919 Move V14, V9
	1920 Move X9, [X9+184]
	1921 Move W1, [X9+204]
	1922 Call Material.GetFloat, X0, X1
	1923 Move S1, 0.25
	1924 Multiply S1, S10, S1
	1925 Multiply S1, S15, S1
	1926 Multiply S11, S0, S1
	1927 Move V0, [X31+336]
	1928 Add S0, S0, S11
	1929 NotImplemented "Instruction FCMP not yet implemented."
	1930 Subtract S0, S15, S11
	1931 Move [X31+336], S0
	1932 Move V14, V9
	1933 Move S11, W31
	1934 Move X8, 0x62F000
	1935 Move X8, [X8+1432]
	1936 Move X25, [X19+280]
	1937 Move X0, [X8]
	1938 Move W8, [X0+224]
	1939 Compare W8, 0
	1940 JumpIfNotEqual {1942}
	1941 Call 0x1C17DFC
	1942 Move X0, X25
	1943 Move X1, X31
	1944 Move X2, X31
	1945 Call Object.op_Inequality, X0, X1
	1946 Move S10, W31
	1947 Move TEMP, X0
	1948 And TEMP, TEMP, 1
	1949 Compare TEMP, 1
	1950 JumpIfNotEqual {2029}
	1951 Move X9, 0x694000
	1952 Move X9, [X9+824]
	1953 Move X25, [X19+280]
	1954 Move X0, [X9]
	1955 Move W8, [X0+224]
	1956 Compare W8, 0
	1957 JumpIfNotEqual {1961}
	1958 Call 0x1C17DFC
	1959 Move X9, 0x694000
	1960 Move X9, [X9+824]
	1961 Compare X25, 0
	1962 JumpIfEqual {7843}
	1963 Move X8, [X9]
	1964 Move X0, X25
	1965 Move X2, X31
	1966 Move X26, X9
	1967 Move X8, [X8+184]
	1968 Move W1, [X8+84]
	1969 Call Material.HasProperty, X0, X1
	1970 Move TEMP, X0
	1971 And TEMP, TEMP, 1
	1972 Compare TEMP, 1
	1973 JumpIfNotEqual {2029}
	1974 Move X0, [X26]
	1975 Move X25, [X19+280]
	1976 Move W8, [X0+224]
	1977 Compare W8, 0
	1978 JumpIfNotEqual {1982}
	1979 Call 0x1C17DFC
	1980 Move X26, 0x694000
	1981 Move X26, [X26+824]
	1982 Compare X25, 0
	1983 JumpIfEqual {7843}
	1984 Move X8, [X26]
	1985 Move X0, X25
	1986 Move X2, X31
	1987 Move X8, [X8+184]
	1988 Move W1, [X8+84]
	1989 Call Material.GetFloat, X0, X1
	1990 Move X8, [X31+352]
	1991 Move X8, [X8]
	1992 Compare X8, 0
	1993 JumpIfEqual {7843}
	1994 Move X0, [X19+280]
	1995 Compare X0, 0
	1996 JumpIfEqual {7843}
	1997 Move X9, 0x694000
	1998 Move X9, [X9+824]
	1999 Move V10, [X8+432]
	2000 Move X2, X31
	2001 Move V15, V0
	2002 Move X9, [X9]
	2003 Move X9, [X9+184]
	2004 Move W1, [X9+204]
	2005 Call Material.GetFloat, X0, X1
	2006 Move S1, 0.25
	2007 Multiply S1, S10, S1
	2008 Multiply S1, S15, S1
	2009 Multiply S1, S0, S1
	2010 Move V0, [X31+336]
	2011 Add S0, S0, S1
	2012 NotImplemented "Instruction FCMP not yet implemented."
	2013 Move V10, V1
	2014 Subtract S0, S15, S1
	2015 Move [X31+336], S0
	2016 Subtract W9, W9, 1
	2017 NotImplemented "Instruction CMP not yet implemented."
	2018 Compare X10, 0
	2019 JumpIfEqual {7843}
	2020 NotImplemented "Instruction SMADDL not yet implemented."
	2021 Move V11, [X8+96]
	2022 Add X0, X10, 80
	2023 Move X1, X31
	2024 Call FaceInfo.get_pointSize, X0
	2025 Move X8, [X22]
	2026 Compare X8, 0
	2027 JumpIfNotEqual {1291}
	2028 Move V10, V1
	2029 Move X8, [X31+352]
	2030 Move X8, [X8]
	2031 Compare X8, 0
	2032 JumpIfEqual {7843}
	2033 Move V0, [X8+436]
	2034 Move V14, V9
	2035 Move V11, V10
	2036 Move [X31+220], S0
	2037 Move V10, [X19+1600]
	2038 Add X0, X31, 4096
	2039 Add X0, X0, 48
	2040 Move X1, X31
	2041 Call GlyphMetrics.get_horizontalBearingX, X0
	2042 Move V12, [X31+336]
	2043 Move V1, [X19+724]
	2044 Move S9, 1
	2045 Add X0, X31, 4096
	2046 Subtract S0, S0, S12
	2047 Subtract S0, S0, S11
	2048 Add S0, S8, S0
	2049 Multiply S0, S13, S0
	2050 Subtract S1, S9, S1
	2051 Multiply S0, S1, S0
	2052 Add X0, X0, 48
	2053 Move X1, X31
	2054 Add S15, S10, S0
	2055 Call GlyphMetrics.get_horizontalBearingY, X0
	2056 Move V3, [X31+348]
	2057 Move V1, [X19+1240]
	2058 Add S0, S12, S0
	2059 Move V2, [X19+1564]
	2060 Add S0, S14, S0
	2061 Multiply S0, S13, S0
	2062 Add S0, S3, S0
	2063 Add X0, X31, 4096
	2064 Subtract S0, S0, S1
	2065 Add X0, X0, 48
	2066 Move X1, X31
	2067 Add S14, S2, S0
	2068 Call GlyphMetrics.get_height, X0
	2069 Add S8, S12, S12
	2070 Add S0, S8, S0
	2071 Add X0, X31, 4096
	2072 Multiply S0, S13, S0
	2073 Add X0, X0, 48
	2074 Move X1, X31
	2075 Subtract S10, S14, S0
	2076 Call GlyphMetrics.get_width, X0
	2077 Move V1, [X19+724]
	2078 Add S0, S8, S0
	2079 Add S2, S11, S11
	2080 Add S0, S2, S0
	2081 Move W8, [X19+1604]
	2082 Multiply S0, S13, S0
	2083 Subtract S1, S9, S1
	2084 Multiply S0, S1, S0
	2085 Move V8, V13
	2086 Add S3, S15, S0
	2087 Move [X31+188], S11
	2088 Compare W8, 0
	2089 JumpIfNotEqual {2097}
	2090 Compare W24, 0
	2091 JumpIfNotEqual {2097}
	2092 Move W8, [X19+604]
	2093 Move TEMP, X8
	2094 And TEMP, TEMP, 2
	2095 Compare TEMP, 2
	2096 JumpIfEqual {2834}
	2097 Move V11, V3
	2098 Move V12, V15
	2099 Move W8, [X19+1140]
	2100 Move [X31+320], S8
	2101 Compare W8, 0
	2102 JumpIfEqual {2159}
	2103 Move X24, [X31+120]
	2104 Move X1, X31
	2105 Move [X31+200], S3
	2106 Move X0, X24
	2107 Call Matrix4x4.get_lossyScale, X0
	2108 Add S1, S10, S14
	2109 Move S2, 0.5
	2110 Add S0, S11, S15
	2111 Multiply S13, S1, S2
	2112 Move V9, V10
	2113 Multiply S10, S0, S2
	2114 Subtract S8, S14, S13
	2115 Subtract S0, S12, S10
	2116 Move S2, W31
	2117 Move X0, X24
	2118 Move V1, V8
	2119 Move X1, X31
	2120 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2121 Add S0, S10, S0
	2122 Move S12, W31
	2123 Move [X31+260], S0
	2124 Add S3, S13, S1
	2125 Add S0, S2, S12
	2126 Subtract S9, S9, S13
	2127 Move [X31+244], S0
	2128 Move [X31+252], S3
	2129 Subtract S0, S15, S10
	2130 Move S2, W31
	2131 Move X0, X24
	2132 Move V1, V9
	2133 Move X1, X31
	2134 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2135 Add S3, S10, S0
	2136 Add S0, S2, S12
	2137 Add S15, S13, S1
	2138 Move [X31+252], S0
	2139 Move [X31+260], S3
	2140 Subtract S0, S11, S10
	2141 Move S2, W31
	2142 Move X0, X24
	2143 Move V1, V8
	2144 Move X1, X31
	2145 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2146 Add S11, S10, S0
	2147 Move V0, [X31+200]
	2148 Add S14, S13, S1
	2149 Add S8, S2, S12
	2150 Move S2, W31
	2151 Subtract S0, S0, S10
	2152 Move X0, X24
	2153 Move V1, V9
	2154 Move X1, X31
	2155 Call Matrix4x4.MultiplyPoint3x4, X0, X1
	2156 Add S3, S10, S0
	2157 Add S10, S13, S1
	2158 Add S0, S2, S12
	2159 Move S1, W31
	2160 Move [X31+252], S1
	2161 Move [X31+260], S15
	2162 Move S1, W31
	2163 Move [X31+260], S12
	2164 Move S0, W31
	2165 Move S8, W31
	2166 Move V15, V10
	2167 Move [X31+244], S1
	2168 Move [X31+252], S14
	2169 Move X8, [X22]
	2170 Compare X8, 0
	2171 JumpIfEqual {7843}
	2172 Move X8, [X8+56]
	2173 Move V13, [X31+320]
	2174 Move V6, [X31+260]
	2175 Compare X8, 0
	2176 JumpIfEqual {7843}
	2177 NotImplemented "Instruction LDRSW not yet implemented."
	2178 Move W10, [X8+24]
	2179 Move V2, [X31+256]
	2180 NotImplemented "Instruction CMP not yet implemented."
	2181 Move V1, [X31+252]
	2182 NotImplemented "Instruction NOP not yet implemented."
	2183 NotImplemented "Instruction MADD not yet implemented."
	2184 Move [X8+284], S2
	2185 Move [X8+288], S15
	2186 Move [X8+292], S1
	2187 Move X8, [X22]
	2188 Compare X8, 0
	2189 JumpIfEqual {7843}
	2190 Move X8, [X8+56]
	2191 Compare X8, 0
	2192 JumpIfEqual {7843}
	2193 NotImplemented "Instruction LDRSW not yet implemented."
	2194 Move W10, [X8+24]
	2195 Move V4, [X31+248]
	2196 NotImplemented "Instruction CMP not yet implemented."
	2197 NotImplemented "Instruction MADD not yet implemented."
	2198 Move [X8+272], S6
	2199 Move V6, [X31+244]
	2200 Move [X8+276], S4
	2201 Move [X8+280], S6
	2202 Move X8, [X22]
	2203 Compare X8, 0
	2204 JumpIfEqual {7843}
	2205 Move X8, [X8+56]
	2206 Compare X8, 0
	2207 JumpIfEqual {7843}
	2208 NotImplemented "Instruction LDRSW not yet implemented."
	2209 Move W10, [X8+24]
	2210 NotImplemented "Instruction CMP not yet implemented."
	2211 NotImplemented "Instruction MADD not yet implemented."
	2212 Move [X8+296], S11
	2213 Move [X8+300], S14
	2214 Move [X8+304], S8
	2215 Move X8, [X22]
	2216 Compare X8, 0
	2217 JumpIfEqual {7843}
	2218 Move X8, [X8+56]
	2219 Compare X8, 0
	2220 JumpIfEqual {7843}
	2221 NotImplemented "Instruction LDRSW not yet implemented."
	2222 Move W10, [X8+24]
	2223 NotImplemented "Instruction CMP not yet implemented."
	2224 NotImplemented "Instruction MADD not yet implemented."
	2225 Move [X8+308], S3
	2226 Move [X8+312], S10
	2227 Move [X8+316], S0
	2228 Move X8, [X22]
	2229 Compare X8, 0
	2230 JumpIfEqual {7843}
	2231 Move X8, [X8+56]
	2232 Compare X8, 0
	2233 JumpIfEqual {7843}
	2234 NotImplemented "Instruction LDRSW not yet implemented."
	2235 Move W9, [X8+24]
	2236 NotImplemented "Instruction CMP not yet implemented."
	2237 Move V0, [X19+1600]
	2238 NotImplemented "Instruction NOP not yet implemented."
	2239 NotImplemented "Instruction MADD not yet implemented."
	2240 Subtract S2, S11, S2
	2241 Subtract S3, S4, S15
	2242 Move [X9+320], S0
	2243 Move V1, [X19+1240]
	2244 NotImplemented "Instruction FDIV not yet implemented."
	2245 Move V3, [X31+348]
	2246 Move V0, [X19+1564]
	2247 Move [X9+348], S2
	2248 Move V2, [X31+272]
	2249 Subtract S3, S3, S1
	2250 Add S3, S3, S0
	2251 Move [X9+332], S3
	2252 Move W9, [X19+1604]
	2253 Multiply S3, S2, S13
	2254 Compare W9, 0
	2255 JumpIfEqual {2258}
	2256 Move V2, [X31+264]
	2257 Multiply S2, S2, S13
	2258 Move V2, [X31+264]
	2259 Move V4, [X31+328]
	2260 Multiply S2, S2, S13
	2261 NotImplemented "Instruction FDIV not yet implemented."
	2262 NotImplemented "Instruction FDIV not yet implemented."
	2263 Move W24, [X19+1176]
	2264 Compare W29, 0
	2265 JumpIfEqual {2279}
	2266 NotImplemented "Instruction CMP not yet implemented."
	2267 Move V0, [X19+1224]
	2268 NotImplemented "Instruction NOP not yet implemented."
	2269 NotImplemented "Instruction MADD not yet implemented."
	2270 Move [X8+340], S0
	2271 Move V2, [X19+1228]
	2272 Subtract S0, S0, S1
	2273 Move [X8+328], S0
	2274 Move [X8+344], S2
	2275 Move [X19+1216], S0
	2276 Subtract S0, S2, S1
	2277 Move [X8+336], S0
	2278 Move [X19+1220], S0
	2279 Add S2, S0, S2
	2280 Add S8, S0, S3
	2281 NotImplemented "Instruction FCMP not yet implemented."
	2282 Move V3, V2
	2283 Move V4, V8
	2284 Move V3, [X19+1028]
	2285 Subtract S4, S8, S0
	2286 Subtract S0, S2, S0
	2287 NotImplemented "Instruction FDIV not yet implemented."
	2288 NotImplemented "Instruction FDIV not yet implemented."
	2289 NotImplemented "Instruction FCMP not yet implemented."
	2290 NotImplemented "Instruction FCSEL not yet implemented."
	2291 NotImplemented "Instruction FCMP not yet implemented."
	2292 NotImplemented "Instruction FCSEL not yet implemented."
	2293 Move V0, [X19+1224]
	2294 Move V5, [X19+1228]
	2295 NotImplemented "Instruction NOP not yet implemented."
	2296 NotImplemented "Instruction MADD not yet implemented."
	2297 Subtract S2, S2, S1
	2298 NotImplemented "Instruction FCMP not yet implemented."
	2299 NotImplemented "Instruction FCSEL not yet implemented."
	2300 NotImplemented "Instruction FCMP not yet implemented."
	2301 NotImplemented "Instruction FCSEL not yet implemented."
	2302 Move [X19+1228], S5
	2303 Subtract S5, S8, S1
	2304 Move [X19+1224], S0
	2305 Move [X8+340], S4
	2306 Move [X8+344], S3
	2307 Move [X8+328], S5
	2308 Move [X19+1216], S5
	2309 Move [X8+336], S2
	2310 Move W8, [X19+1192]
	2311 Move [X19+1220], S2
	2312 Compare W8, 0
	2313 JumpIfEqual {2317}
	2314 Move W8, [X19+828]
	2315 Compare W8, 0
	2316 JumpIfEqual {2332}
	2317 Move X8, [X19+256]
	2318 Move [X19+1208], S0
	2319 Compare X8, 0
	2320 JumpIfEqual {7843}
	2321 Move V9, [X19+1212]
	2322 Add X0, X8, 80
	2323 Move X1, X31
	2324 Call FaceInfo.get_capLine, X0
	2325 Move V1, [X31+328]
	2326 Multiply S0, S13, S0
	2327 NotImplemented "Instruction FDIV not yet implemented."
	2328 Move V1, [X19+1240]
	2329 NotImplemented "Instruction FCMP not yet implemented."
	2330 NotImplemented "Instruction FCSEL not yet implemented."
	2331 Move [X19+1212], S0
	2332 NotImplemented "Instruction FCMP not yet implemented."
	2333 Move X8, [X31+128]
	2334 Move V0, [X8+520]
	2335 NotImplemented "Instruction FCMP not yet implemented."
	2336 NotImplemented "Instruction FCSEL not yet implemented."
	2337 Move [X8+520], S0
	2338 Move X8, [X22]
	2339 Compare X8, 0
	2340 JumpIfEqual {7843}
	2341 Move X9, [X8+56]
	2342 Compare X9, 0
	2343 JumpIfEqual {7843}
	2344 Move W22, [X23]
	2345 Move W10, [X9+24]
	2346 NotImplemented "Instruction CMP not yet implemented."
	2347 Move X10, W22
	2348 NotImplemented "Instruction MADD not yet implemented."
	2349 Move [X9+404], W31
	2350 Move W25, [X31+4220]
	2351 Move W10, [X19+632]
	2352 NotImplemented "Instruction CMP not yet implemented."
	2353 And W26, W10, 24
	2354 Compare W29, 0
	2355 JumpIfEqual {2456}
	2356 Move W11, [X31+116]
	2357 NotImplemented "Instruction CMP not yet implemented."
	2358 NotImplemented "Instruction CSET not yet implemented."
	2359 NotImplemented "Instruction BIC not yet implemented."
	2360 Move TEMP, X10
	2361 And TEMP, TEMP, 1
	2362 Compare TEMP, 1
	2363 JumpIfEqual {2460}
	2364 Move W10, [X19+1604]
	2365 NotImplemented "Instruction CMP not yet implemented."
	2366 And W8, W25, 0xFFFFFFFE
	2367 NotImplemented "Instruction CMP not yet implemented."
	2368 Move W8, [X19+736]
	2369 NotImplemented "Instruction CMP not yet implemented."
	2370 NotImplemented "Instruction FCMP not yet implemented."
	2371 Move S0, W31
	2372 Move W8, [X19+708]
	2373 Compare W8, 0
	2374 JumpIfNotEqual {2378}
	2375 Move V0, [X19+1224]
	2376 Move V2, [X19+1232]
	2377 Subtract S0, S0, S2
	2378 Move V2, [X19+1228]
	2379 Move V3, [X19+1208]
	2380 Subtract S1, S2, S1
	2381 Subtract S1, S3, S1
	2382 Add S0, S1, S0
	2383 Move V1, [X31+184]
	2384 NotImplemented "Instruction FCMP not yet implemented."
	2385 Move W8, [X19+740]
	2386 Add W31, W8, 1
	2387 Move [X19+740], W22
	2388 Move X29, 0x693000
	2389 Move X29, [X29+1000]
	2390 Move X0, [X29]
	2391 Move W8, [X0+224]
	2392 Compare W8, 0
	2393 JumpIfNotEqual {2396}
	2394 Call 0x1C17DFC
	2395 Move X0, [X29]
	2396 Move X8, [X0+184]
	2397 Move X0, X19
	2398 Move X2, X31
	2399 Add X1, X8, 2816
	2400 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2401 Move X8, 0x62E000
	2402 Move X8, [X8+1432]
	2403 Move [X31+4168], W0
	2404 Move X25, [X19+744]
	2405 Move X8, [X8]
	2406 Move W9, [X8+224]
	2407 Compare W9, 0
	2408 JumpIfNotEqual {2411}
	2409 Move X0, X8
	2410 Call 0x1C17DFC
	2411 Move X0, X25
	2412 Move X1, X31
	2413 Move X2, X31
	2414 Call Object.op_Inequality, X0, X1
	2415 Move TEMP, X0
	2416 And TEMP, TEMP, 1
	2417 Compare TEMP, 1
	2418 JumpIfNotEqual {2452}
	2419 Move X8, [X19]
	2420 Move X25, [X19+744]
	2421 Move X0, X19
	2422 Move X9, [X8+1352]
	2423 Move X1, [X8+1360]
	2424 NotImplemented "Instruction BLR not yet implemented."
	2425 Compare X25, 0
	2426 JumpIfEqual {7843}
	2427 Move X8, [X25]
	2428 Move X1, X0
	2429 Move X0, X25
	2430 Move X9, [X8+1368]
	2431 Move X2, [X8+1376]
	2432 NotImplemented "Instruction BLR not yet implemented."
	2433 Move X0, [X19+744]
	2434 Compare X0, 0
	2435 JumpIfEqual {7843}
	2436 Move W8, [X19+1024]
	2437 Move X2, X31
	2438 Move [X0+1024], W8
	2439 Move W1, [X19+1172]
	2440 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	2441 Move X0, [X19+744]
	2442 Compare X0, 0
	2443 JumpIfEqual {7843}
	2444 Move X8, [X0]
	2445 Move W1, W31
	2446 Move W2, W31
	2447 Move X9, [X8+2008]
	2448 Move X3, [X8+2016]
	2449 NotImplemented "Instruction BLR not yet implemented."
	2450 Move W8, 1
	2451 Move [X19+760], W8
	2452 Move [X31+4200], W22
	2453 Move X22, [X31+368]
	2454 Move W8, 3
	2455 Move [X31+4204], W8
	2456 NotImplemented "Instruction CMP not yet implemented."
	2457 Move W10, 0x200B
	2458 NotImplemented "Instruction CMP not yet implemented."
	2459 NotImplemented "Instruction CMP not yet implemented."
	2460 Add X9, X9, 404
	2461 Move W10, 1
	2462 Move [X9], W10
	2463 Move X9, [X31+160]
	2464 Move X10, [X31+176]
	2465 Move X22, [X31+368]
	2466 Compare W20, 0
	2467 JumpIfEqual {2478}
	2468 Move X8, [X8+80]
	2469 Compare X8, 0
	2470 JumpIfEqual {7843}
	2471 NotImplemented "Instruction LDRSW not yet implemented."
	2472 Move W10, [X8+24]
	2473 NotImplemented "Instruction CMP not yet implemented."
	2474 Move W10, 92
	2475 NotImplemented "Instruction MADD not yet implemented."
	2476 Add X10, X8, 96
	2477 Add X9, X8, 100
	2478 Move V8, [X10]
	2479 Move V2, [X31+152]
	2480 Move V9, [X9]
	2481 Move V0, [X19+864]
	2482 Move V10, [X19+1600]
	2483 Subtract S2, S2, S8
	2484 Subtract S2, S2, S9
	2485 Move W8, [X19+240]
	2486 NotImplemented "Instruction FCMP not yet implemented."
	2487 Move S3, -1
	2488 NotImplemented "Instruction FCCMP not yet implemented."
	2489 NotImplemented "Instruction FCSEL not yet implemented."
	2490 Move S12, W31
	2491 Move [X31+232], S0
	2492 Move S0, W31
	2493 Compare W8, 0
	2494 JumpIfNotEqual {2501}
	2495 Add X0, X31, 4096
	2496 Add X0, X0, 48
	2497 Move X1, X31
	2498 Call GlyphMetrics.get_horizontalAdvance, X0
	2499 Move W25, [X31+4220]
	2500 Move V1, [X19+1240]
	2501 Move V3, [X31+228]
	2502 Move V2, [X19+724]
	2503 Move V4, [X19+1208]
	2504 Move V11, [X19+1228]
	2505 NotImplemented "Instruction CMP not yet implemented."
	2506 NotImplemented "Instruction FCSEL not yet implemented."
	2507 NotImplemented "Instruction FCMP not yet implemented."
	2508 Move W8, [X19+708]
	2509 Compare W8, 0
	2510 JumpIfNotEqual {2514}
	2511 Move V5, [X19+1224]
	2512 Move V6, [X19+1232]
	2513 Subtract S12, S5, S6
	2514 Subtract S5, S11, S1
	2515 Subtract S4, S4, S5
	2516 Move V5, [X31+184]
	2517 Move W27, [X23]
	2518 Add S4, S4, S12
	2519 NotImplemented "Instruction FCMP not yet implemented."
	2520 Move W8, [X19+740]
	2521 Add W31, W8, 1
	2522 Move [X19+740], W27
	2523 Move W8, [X19+568]
	2524 Compare W8, 0
	2525 JumpIfEqual {2539}
	2526 Move V6, [X19+700]
	2527 Move V5, [X19+712]
	2528 NotImplemented "Instruction FCMP not yet implemented."
	2529 NotImplemented "Instruction FCMP not yet implemented."
	2530 Move W8, [X19+580]
	2531 Move W9, [X19+584]
	2532 NotImplemented "Instruction CMP not yet implemented."
	2533 Move V4, [X19+484]
	2534 Move V1, [X19+592]
	2535 NotImplemented "Instruction FCMP not yet implemented."
	2536 Move W8, [X19+580]
	2537 Move W9, [X19+584]
	2538 NotImplemented "Instruction CMP not yet implemented."
	2539 Move W8, [X19+736]
	2540 Subtract W8, W8, 1
	2541 NotImplemented "Instruction CMP not yet implemented."
	2542 Move X11, -49471488
	2543 Add X11, X11, 2956
	2544 NotImplemented "Instruction ADR not yet implemented."
	2545 Move W10, [X11]
	2546 Add X9, X9, X10
	2547 CallNoReturn X9
	2548 Move X29, 0x693000
	2549 Move X29, [X29+1000]
	2550 Move X0, [X29]
	2551 Move W8, [X0+224]
	2552 Compare W8, 0
	2553 JumpIfNotEqual {2556}
	2554 Call 0x1C17DFC
	2555 Move X0, [X29]
	2556 Move X8, [X0+184]
	2557 Add X27, X31, 4000
	2558 Move W9, [X8+5504]
	2559 Compare W9, 0
	2560 JumpIfEqual {4700}
	2561 Move W9, [X0+224]
	2562 Compare W9, 0
	2563 JumpIfNotEqual {2567}
	2564 Call 0x1C17DFC
	2565 Move X8, [X29]
	2566 Move X8, [X8+184]
	2567 Move X9, 0x693000
	2568 Move X9, [X9+904]
	2569 Move X1, [X9]
	2570 Move W9, 0x11F0
	2571 Add X0, X8, X9
	2572 Add X8, X31, 4096
	2573 Add X8, X8, 128
	2574 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	2575 Add X1, X31, 4096
	2576 Add X0, X31, 3104
	2577 Add X1, X1, 128
	2578 Move W2, 888
	2579 Call 0x3EB2AC0
	2580 Add X1, X31, 3104
	2581 Move S6, 1
	2582 Subtract S1, S6, S2
	2583 Move X8, -50180096
	2584 Multiply S0, S0, S1
	2585 NotImplemented "Instruction FABS not yet implemented."
	2586 Move V5, [X8+400]
	2587 Multiply S0, S0, S3
	2588 Add S11, S4, S0
	2589 Move V0, [X31+232]
	2590 NotImplemented "Instruction CMP not yet implemented."
	2591 NotImplemented "Instruction FCSEL not yet implemented."
	2592 Multiply S0, S12, S0
	2593 NotImplemented "Instruction FCMP not yet implemented."
	2594 Move W8, [X19+728]
	2595 Compare W8, 0
	2596 JumpIfEqual {2599}
	2597 Move W8, [X19+1176]
	2598 NotImplemented "Instruction CMP not yet implemented."
	2599 Move W8, [X19+568]
	2600 Compare W8, 0
	2601 JumpIfEqual {2613}
	2602 Move W8, [X19+580]
	2603 Move W9, [X19+584]
	2604 NotImplemented "Instruction CMP not yet implemented."
	2605 Move V0, [X19+720]
	2606 Move W8, 0x42C80000
	2607 Move S3, W8
	2608 NotImplemented "Instruction FDIV not yet implemented."
	2609 NotImplemented "Instruction FCMP not yet implemented."
	2610 Move V1, [X19+484]
	2611 Move V0, [X19+592]
	2612 NotImplemented "Instruction FCMP not yet implemented."
	2613 Move W8, [X19+736]
	2614 NotImplemented "Instruction CMP not yet implemented."
	2615 NotImplemented "Instruction CMP not yet implemented."
	2616 NotImplemented "Instruction CMP not yet implemented."
	2617 Move X29, 0x693000
	2618 Move X29, [X29+1000]
	2619 Move X0, [X29]
	2620 Move W8, [X0+224]
	2621 Compare W8, 0
	2622 JumpIfNotEqual {2625}
	2623 Call 0x1C17DFC
	2624 Move X0, [X29]
	2625 Move X8, [X0+184]
	2626 Add X1, X8, 152
	2627 Move X29, 0x693000
	2628 Move X29, [X29+1000]
	2629 Move X0, [X29]
	2630 Move W8, [X0+224]
	2631 Compare W8, 0
	2632 JumpIfNotEqual {2635}
	2633 Call 0x1C17DFC
	2634 Move X0, [X29]
	2635 Move X8, [X0+184]
	2636 Add X1, X8, 2816
	2637 Move X0, X19
	2638 Move X2, X31
	2639 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2640 Move [X31+4168], W0
	2641 Compare W27, 0
	2642 JumpIfEqual {2997}
	2643 Move W8, [X31+4168]
	2644 Move TEMP, X8
	2645 And TEMP, TEMP, -2147483648
	2646 Compare TEMP, -2147483648
	2647 JumpIfEqual {2997}
	2648 Move X29, 0x693000
	2649 Move X29, [X29+1000]
	2650 Move V8, [X19+1224]
	2651 Move X0, [X29]
	2652 Move W8, [X0+224]
	2653 Compare W8, 0
	2654 JumpIfNotEqual {2657}
	2655 Call 0x1C17DFC
	2656 Move X0, [X29]
	2657 Move X8, [X0+184]
	2658 Move X0, X19
	2659 Move X2, X31
	2660 Subtract S8, S8, S11
	2661 Add X1, X8, 1040
	2662 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2663 Move V0, [X31+184]
	2664 Move [X31+4168], W0
	2665 NotImplemented "Instruction FCMP not yet implemented."
	2666 Move W8, [X19+1172]
	2667 Move W9, 1
	2668 Move [X19+828], W9
	2669 Move V0, [X19+1036]
	2670 Move [X19+1176], W8
	2671 Move X8, [X29]
	2672 Move S1, W31
	2673 Add S0, S0, S1
	2674 Add X27, X31, 4000
	2675 Move X8, [X8+184]
	2676 Move V1, [X8+5544]
	2677 Move X8, [X31+128]
	2678 Move [X19+1600], S0
	2679 Move [X19+1232], W31
	2680 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	2681 Move [X19+1224], D0
	2682 NotImplemented "Instruction MOVI not yet implemented."
	2683 Move [X19+1240], W31
	2684 Move [X8+520], D0
	2685 Move W8, [X19+1192]
	2686 Move W9, [X19+1200]
	2687 Add W8, W8, 1
	2688 Move [X19+1192], W8
	2689 Add W8, W9, 1
	2690 Move [X19+1200], W8
	2691 Move X29, 0x693000
	2692 Move X29, [X29+1000]
	2693 Move X0, [X29]
	2694 Move W8, [X0+224]
	2695 Compare W8, 0
	2696 JumpIfNotEqual {2699}
	2697 Call 0x1C17DFC
	2698 Move X0, [X29]
	2699 Move X8, [X0+184]
	2700 Move X0, X19
	2701 Move X2, X31
	2702 Add X1, X8, 2816
	2703 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2704 Move X8, 0x62E000
	2705 Move X8, [X8+1432]
	2706 Move [X31+4168], W0
	2707 Move X25, [X19+744]
	2708 Move X8, [X8]
	2709 Move W9, [X8+224]
	2710 Compare W9, 0
	2711 JumpIfNotEqual {2714}
	2712 Move X0, X8
	2713 Call 0x1C17DFC
	2714 Move X0, X25
	2715 Move X1, X31
	2716 Move X2, X31
	2717 Call Object.op_Inequality, X0, X1
	2718 Move TEMP, X0
	2719 And TEMP, TEMP, 1
	2720 Compare TEMP, 1
	2721 JumpIfNotEqual {2755}
	2722 Move X8, [X19]
	2723 Move X25, [X19+744]
	2724 Move X0, X19
	2725 Move X9, [X8+1352]
	2726 Move X1, [X8+1360]
	2727 NotImplemented "Instruction BLR not yet implemented."
	2728 Compare X25, 0
	2729 JumpIfEqual {7843}
	2730 Move X8, [X25]
	2731 Move X1, X0
	2732 Move X0, X25
	2733 Move X9, [X8+1368]
	2734 Move X2, [X8+1376]
	2735 NotImplemented "Instruction BLR not yet implemented."
	2736 Move X0, [X19+744]
	2737 Compare X0, 0
	2738 JumpIfEqual {7843}
	2739 Move W8, [X19+1024]
	2740 Move X2, X31
	2741 Move [X0+1024], W8
	2742 Move W1, [X19+1172]
	2743 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	2744 Move X0, [X19+744]
	2745 Compare X0, 0
	2746 JumpIfEqual {7843}
	2747 Move X8, [X0]
	2748 Move W1, W31
	2749 Move W2, W31
	2750 Move X9, [X8+2008]
	2751 Move X3, [X8+2016]
	2752 NotImplemented "Instruction BLR not yet implemented."
	2753 Move W8, 1
	2754 Move [X19+760], W8
	2755 Move W8, 3
	2756 Move [X31+4200], W27
	2757 Move [X31+4204], W8
	2758 Move TEMP, 0x2006
	2759 Not TEMP
	2760 Move W8, TEMP
	2761 Add W8, W25, W8
	2762 NotImplemented "Instruction CMP not yet implemented."
	2763 Move X22, [X31+368]
	2764 Subtract W8, W25, 10
	2765 NotImplemented "Instruction CMP not yet implemented."
	2766 NotImplemented "Instruction CMP not yet implemented."
	2767 Move X8, 0x630000
	2768 Move X8, [X8+368]
	2769 Move X0, [X8]
	2770 Move W8, [X0+224]
	2771 Compare W8, 0
	2772 JumpIfNotEqual {2774}
	2773 Call 0x1C17DFC
	2774 Move W0, W25
	2775 Move X1, X31
	2776 Call Char.IsSeparator, X0
	2777 Move TEMP, X0
	2778 And TEMP, TEMP, 1
	2779 Compare TEMP, 1
	2780 JumpIfNotEqual {3033}
	2781 Move W25, [X31+4220]
	2782 Move X25, 0x693000
	2783 Move X25, [X25+1000]
	2784 Move X0, [X25]
	2785 Move W8, [X0+224]
	2786 Compare W8, 0
	2787 JumpIfNotEqual {2790}
	2788 Call 0x1C17DFC
	2789 Move X0, [X25]
	2790 Move X8, [X0+184]
	2791 Move X0, X19
	2792 Move X2, X31
	2793 Add X1, X8, 152
	2794 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2795 Move [X31+4168], W0
	2796 Move X8, -50180096
	2797 Move V1, [X19+704]
	2798 Move V0, [X8+532]
	2799 NotImplemented "Instruction FCMP not yet implemented."
	2800 Move X8, [X22]
	2801 Compare X8, 0
	2802 JumpIfEqual {7843}
	2803 Move X9, [X8+56]
	2804 Compare X9, 0
	2805 JumpIfEqual {7843}
	2806 NotImplemented "Instruction LDRSW not yet implemented."
	2807 Move W11, [X9+24]
	2808 NotImplemented "Instruction CMP not yet implemented."
	2809 Move V0, [X19+1240]
	2810 Move S1, W31
	2811 NotImplemented "Instruction FCMP not yet implemented."
	2812 Move W11, [X19+708]
	2813 Compare W11, 0
	2814 JumpIfNotEqual {2818}
	2815 Move V1, [X19+1224]
	2816 Move V2, [X19+1232]
	2817 Subtract S1, S1, S2
	2818 Move V2, [X19+1228]
	2819 Move V3, [X19+700]
	2820 NotImplemented "Instruction NOP not yet implemented."
	2821 NotImplemented "Instruction MADD not yet implemented."
	2822 Move V4, [X9+340]
	2823 Subtract S1, S1, S2
	2824 Move V2, [X31+84]
	2825 Move V5, [X19+696]
	2826 Add S1, S4, S1
	2827 Add S2, S2, S3
	2828 Move V3, [X31+88]
	2829 Multiply S2, S3, S2
	2830 Add S1, S1, S2
	2831 Move V2, [X31+224]
	2832 Multiply S2, S2, S5
	2833 Add S1, S2, S1
	2834 Move V0, [X19+1520]
	2835 Move V1, [X31+92]
	2836 Add X0, X31, 4096
	2837 Add X0, X0, 48
	2838 NotImplemented "Instruction SCVTF not yet implemented."
	2839 Move X1, X31
	2840 Multiply S11, S0, S1
	2841 Move [X31+200], S3
	2842 Call GlyphMetrics.get_horizontalBearingY, X0
	2843 Move V1, [X31+336]
	2844 Move V13, [X31+188]
	2845 Add X0, X31, 4096
	2846 Add X0, X0, 48
	2847 Add S0, S1, S0
	2848 Add S0, S13, S0
	2849 Multiply S0, S8, S0
	2850 Move X1, X31
	2851 Move V9, V8
	2852 Multiply S12, S11, S0
	2853 Call GlyphMetrics.get_horizontalBearingY, X0
	2854 Add X0, X31, 4096
	2855 Add X0, X0, 48
	2856 Move X1, X31
	2857 Move V8, V0
	2858 Call GlyphMetrics.get_height, X0
	2859 Move S2, W31
	2860 Add S14, S14, S2
	2861 Add S10, S10, S2
	2862 Move V2, [X31+336]
	2863 Subtract S0, S8, S0
	2864 Move V5, [X31+200]
	2865 Add S1, S15, S12
	2866 Subtract S0, S0, S2
	2867 Subtract S0, S0, S13
	2868 Multiply S0, S9, S0
	2869 Multiply S0, S11, S0
	2870 Add S2, S5, S12
	2871 Subtract S3, S12, S0
	2872 Add S4, S15, S0
	2873 Add S0, S5, S0
	2874 Move S5, 0.5
	2875 Multiply S3, S3, S5
	2876 Move V8, V9
	2877 Subtract S12, S1, S3
	2878 Subtract S15, S4, S3
	2879 Subtract S11, S2, S3
	2880 Subtract S3, S0, S3
	2881 Move X29, 0x693000
	2882 Move X29, [X29+1000]
	2883 Move X0, [X29]
	2884 Move W8, [X0+224]
	2885 Compare W8, 0
	2886 JumpIfNotEqual {2889}
	2887 Call 0x1C17DFC
	2888 Move X0, [X29]
	2889 Move X8, [X0+184]
	2890 Add X27, X31, 4000
	2891 Move W9, [X8+5504]
	2892 Compare W9, 0
	2893 JumpIfEqual {4700}
	2894 Move W9, [X0+224]
	2895 Compare W9, 0
	2896 JumpIfNotEqual {2900}
	2897 Call 0x1C17DFC
	2898 Move X8, [X29]
	2899 Move X8, [X8+184]
	2900 Move X9, 0x693000
	2901 Move X9, [X9+904]
	2902 Move X1, [X9]
	2903 Move W9, 0x11F0
	2904 Add X0, X8, X9
	2905 Add X8, X31, 4096
	2906 Add X8, X8, 128
	2907 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	2908 Add X1, X31, 4096
	2909 Add X0, X31, 1328
	2910 Add X1, X1, 128
	2911 Move W2, 888
	2912 Call 0x3EB2AC0
	2913 Add X1, X31, 1328
	2914 Move X0, X19
	2915 Move X2, X31
	2916 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2917 Subtract W8, W0, 1
	2918 Move [X31+4168], W8
	2919 Move W8, [X19+1172]
	2920 Subtract W8, W8, 1
	2921 Move [X19+1172], W8
	2922 Move [X31+4200], W8
	2923 Move W8, 0x2026
	2924 Move [X31+4204], W8
	2925 Move W8, [X31+360]
	2926 Add W8, W8, 1
	2927 Move [X31+360], W8
	2928 Move X29, 0x693000
	2929 Move X29, [X29+1000]
	2930 Move X0, [X29]
	2931 Move W8, [X0+224]
	2932 Compare W8, 0
	2933 JumpIfNotEqual {2936}
	2934 Call 0x1C17DFC
	2935 Move X0, [X29]
	2936 Move X8, [X0+184]
	2937 Move X0, X19
	2938 Move X2, X31
	2939 Add X27, X31, 4000
	2940 Add X1, X8, 152
	2941 Call TMP_Text.RestoreWordWrappingState, X0, X1
	2942 Move X8, 0x62E000
	2943 Move X8, [X8+1432]
	2944 Move [X31+4168], W0
	2945 Move X25, [X19+744]
	2946 Move X8, [X8]
	2947 Move W9, [X8+224]
	2948 Compare W9, 0
	2949 JumpIfNotEqual {2952}
	2950 Move X0, X8
	2951 Call 0x1C17DFC
	2952 Move X0, X25
	2953 Move X1, X31
	2954 Move X2, X31
	2955 Call Object.op_Inequality, X0, X1
	2956 Move TEMP, X0
	2957 And TEMP, TEMP, 1
	2958 Compare TEMP, 1
	2959 JumpIfNotEqual {2993}
	2960 Move X8, [X19]
	2961 Move X25, [X19+744]
	2962 Move X0, X19
	2963 Move X9, [X8+1352]
	2964 Move X1, [X8+1360]
	2965 NotImplemented "Instruction BLR not yet implemented."
	2966 Compare X25, 0
	2967 JumpIfEqual {7843}
	2968 Move X8, [X25]
	2969 Move X1, X0
	2970 Move X0, X25
	2971 Move X9, [X8+1368]
	2972 Move X2, [X8+1376]
	2973 NotImplemented "Instruction BLR not yet implemented."
	2974 Move X0, [X19+744]
	2975 Compare X0, 0
	2976 JumpIfEqual {7843}
	2977 Move W8, [X19+1024]
	2978 Move X2, X31
	2979 Move [X0+1024], W8
	2980 Move W1, [X19+1172]
	2981 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	2982 Move X0, [X19+744]
	2983 Compare X0, 0
	2984 JumpIfEqual {7843}
	2985 Move X8, [X0]
	2986 Move W1, W31
	2987 Move W2, W31
	2988 Move X9, [X8+2008]
	2989 Move X3, [X8+2016]
	2990 NotImplemented "Instruction BLR not yet implemented."
	2991 Move W8, 1
	2992 Move [X19+760], W8
	2993 Move W8, [X23]
	2994 Move W9, 3
	2995 Move [X31+4204], W9
	2996 Move [X31+4200], W8
	2997 Move X8, -50167808
	2998 Move V0, [X8+2912]
	2999 Move TEMP, 0
	3000 Not TEMP
	3001 Move W8, TEMP
	3002 Move [X31+4168], W8
	3003 Move [X23], W31
	3004 Move [X31+4200], D0
	3005 Move W9, 1
	3006 NotImplemented "Instruction LSLV not yet implemented."
	3007 Move X9, 1
	3008 NotImplemented "Instruction MOVK not yet implemented."
	3009 And X31, X8, X9
	3010 Move X22, [X31+368]
	3011 NotImplemented "Instruction CMP not yet implemented."
	3012 Move W8, 0x200B
	3013 NotImplemented "Instruction CMP not yet implemented."
	3014 Move W8, 0x2060
	3015 NotImplemented "Instruction CMP not yet implemented."
	3016 Move X8, [X22]
	3017 Compare X8, 0
	3018 JumpIfEqual {7843}
	3019 Move X9, [X8+80]
	3020 Compare X9, 0
	3021 JumpIfEqual {7843}
	3022 NotImplemented "Instruction LDRSW not yet implemented."
	3023 Move W11, [X9+24]
	3024 NotImplemented "Instruction CMP not yet implemented."
	3025 Move W11, 92
	3026 NotImplemented "Instruction MADD not yet implemented."
	3027 Move W10, [X9+44]
	3028 Add W10, W10, 1
	3029 Move [X9+44], W10
	3030 Move W9, [X8+32]
	3031 Add W9, W9, 1
	3032 Move [X8+32], W9
	3033 Move W8, [X31+4220]
	3034 NotImplemented "Instruction CMP not yet implemented."
	3035 Move X8, [X22]
	3036 Compare X8, 0
	3037 JumpIfEqual {7843}
	3038 Move X8, [X8+80]
	3039 Compare X8, 0
	3040 JumpIfEqual {7843}
	3041 NotImplemented "Instruction LDRSW not yet implemented."
	3042 Move W10, [X8+24]
	3043 NotImplemented "Instruction CMP not yet implemented."
	3044 Move W10, 92
	3045 NotImplemented "Instruction MADD not yet implemented."
	3046 Move X8, [X19+872]
	3047 Move V2, [X19+696]
	3048 Move W9, 1
	3049 Move [X19+708], W9
	3050 Compare X8, 0
	3051 JumpIfEqual {7843}
	3052 Move V3, [X31+224]
	3053 Move V0, [X19+1240]
	3054 Multiply S2, S3, S2
	3055 Add S1, S1, S2
	3056 Move X8, [X8+56]
	3057 Compare X8, 0
	3058 JumpIfEqual {7843}
	3059 NotImplemented "Instruction LDRSW not yet implemented."
	3060 Move W11, [X8+24]
	3061 NotImplemented "Instruction CMP not yet implemented."
	3062 Subtract W10, W9, 1
	3063 NotImplemented "Instruction CMP not yet implemented."
	3064 NotImplemented "Instruction SMADDL not yet implemented."
	3065 NotImplemented "Instruction LDRH not yet implemented."
	3066 Move V2, [X19+1208]
	3067 NotImplemented "Instruction NOP not yet implemented."
	3068 NotImplemented "Instruction MADD not yet implemented."
	3069 Move V3, [X11+344]
	3070 NotImplemented "Instruction CMP not yet implemented."
	3071 Move W12, [X31+116]
	3072 Add S1, S1, S2
	3073 Add S0, S1, S0
	3074 NotImplemented "Instruction CSET not yet implemented."
	3075 Or W11, W12, W11
	3076 Subtract S10, S0, S3
	3077 Move TEMP, X11
	3078 And TEMP, TEMP, 1
	3079 Compare TEMP, 1
	3080 JumpIfEqual {3086}
	3081 Move V0, [X31+184]
	3082 NotImplemented "Instruction FCMP not yet implemented."
	3083 Move W11, [X19+736]
	3084 Compare W11, 0
	3085 JumpIfEqual {3166}
	3086 NotImplemented "Instruction MADD not yet implemented."
	3087 NotImplemented "Instruction LDRH not yet implemented."
	3088 NotImplemented "Instruction CMP not yet implemented."
	3089 Move W8, 1
	3090 Move [X31+116], W8
	3091 Move W8, [X19+568]
	3092 Move W9, [X31+104]
	3093 And W8, W9, W8
	3094 Move TEMP, X8
	3095 And TEMP, TEMP, 1
	3096 Compare TEMP, 1
	3097 JumpIfNotEqual {3113}
	3098 Move V0, [X19+720]
	3099 Move V1, [X19+724]
	3100 Move W8, 0x42C80000
	3101 Move S2, W8
	3102 NotImplemented "Instruction FDIV not yet implemented."
	3103 NotImplemented "Instruction FCMP not yet implemented."
	3104 Move W8, [X19+580]
	3105 Move W9, [X19+584]
	3106 NotImplemented "Instruction CMP not yet implemented."
	3107 Move V1, [X19+484]
	3108 Move V0, [X19+592]
	3109 NotImplemented "Instruction FCMP not yet implemented."
	3110 Move W8, [X19+580]
	3111 Move W9, [X19+584]
	3112 NotImplemented "Instruction CMP not yet implemented."
	3113 Move X22, 0x693000
	3114 Move X22, [X22+1000]
	3115 Move X0, [X22]
	3116 Move W8, [X0+224]
	3117 Compare W8, 0
	3118 JumpIfNotEqual {3121}
	3119 Call 0x1C17DFC
	3120 Move X0, [X22]
	3121 Move X8, [X0+184]
	3122 Move W9, [X31+52]
	3123 Move W22, [X8+3704]
	3124 NotImplemented "Instruction CMP not yet implemented."
	3125 Add W31, W22, 1
	3126 Move W9, [X31+104]
	3127 Xor W9, W9, 1
	3128 Move TEMP, X9
	3129 And TEMP, TEMP, 1
	3130 Compare TEMP, 1
	3131 JumpIfEqual {3174}
	3132 Move W9, [X0+224]
	3133 Compare W9, 0
	3134 JumpIfNotEqual {3140}
	3135 Call 0x1C17DFC
	3136 Move X8, 0x693000
	3137 Move X8, [X8+1000]
	3138 Move X8, [X8]
	3139 Move X8, [X8+184]
	3140 Add X1, X8, 3704
	3141 Move X0, X19
	3142 Move X2, X31
	3143 Call TMP_Text.RestoreWordWrappingState, X0, X1
	3144 Move [X31+4168], W0
	3145 Move X8, [X19+872]
	3146 Compare X8, 0
	3147 JumpIfEqual {7843}
	3148 Move X9, [X8+56]
	3149 Compare X9, 0
	3150 JumpIfEqual {7843}
	3151 Move W8, [X23]
	3152 Move W10, [X9+24]
	3153 Subtract W8, W8, 1
	3154 NotImplemented "Instruction CMP not yet implemented."
	3155 NotImplemented "Instruction SMADDL not yet implemented."
	3156 NotImplemented "Instruction LDRH not yet implemented."
	3157 NotImplemented "Instruction CMP not yet implemented."
	3158 Move W9, 45
	3159 Move [X31+4204], W9
	3160 Subtract W9, W0, 1
	3161 Move [X31+116], W31
	3162 Move [X31+4200], W8
	3163 Move [X31+4168], W9
	3164 Move [X23], W8
	3165 Move [X31+52], W22
	3166 Move W8, 45
	3167 Move [X31+4204], W8
	3168 Subtract W8, W0, 1
	3169 Move [X31+116], W31
	3170 Move [X31+4200], W10
	3171 Move [X31+4168], W8
	3172 Move [X23], W10
	3173 Move [X31+52], W22
	3174 Move V0, [X31+184]
	3175 NotImplemented "Instruction FCMP not yet implemented."
	3176 Move W8, [X19+740]
	3177 Move X22, [X31+368]
	3178 Add W31, W8, 1
	3179 Move W8, [X19+1172]
	3180 Move [X19+740], W8
	3181 Move W8, [X19+568]
	3182 Compare W8, 0
	3183 JumpIfEqual {3205}
	3184 Move V1, [X19+700]
	3185 Move V0, [X19+712]
	3186 NotImplemented "Instruction FCMP not yet implemented."
	3187 Move W8, [X19+580]
	3188 Move W9, [X19+584]
	3189 NotImplemented "Instruction CMP not yet implemented."
	3190 Move V0, [X19+720]
	3191 Move V1, [X19+724]
	3192 Move W8, 0x42C80000
	3193 Move S2, W8
	3194 NotImplemented "Instruction FDIV not yet implemented."
	3195 NotImplemented "Instruction FCMP not yet implemented."
	3196 Move W8, [X19+580]
	3197 Move W9, [X19+584]
	3198 NotImplemented "Instruction CMP not yet implemented."
	3199 Move V1, [X19+484]
	3200 Move V0, [X19+592]
	3201 NotImplemented "Instruction FCMP not yet implemented."
	3202 Move W8, [X19+580]
	3203 Move W9, [X19+584]
	3204 NotImplemented "Instruction CMP not yet implemented."
	3205 Move W8, [X19+736]
	3206 NotImplemented "Instruction CMP not yet implemented."
	3207 Move X11, -49475584
	3208 Add X11, X11, 2962
	3209 NotImplemented "Instruction ADR not yet implemented."
	3210 NotImplemented "Instruction LDRH not yet implemented."
	3211 Add X9, X9, X10
	3212 CallNoReturn X9
	3213 Move W1, [X31+4168]
	3214 Move V3, [X19+764]
	3215 Move S7, [X31+84]
	3216 Move S0, [X31+88]
	3217 Move S4, [X31+220]
	3218 Move S2, [X31+224]
	3219 Move V5, [X31+316]
	3220 Move V6, [X31+232]
	3221 Add X2, X31, 4096
	3222 Add X3, X31, 4096
	3223 Add X2, X2, 116
	3224 Add X3, X3, 120
	3225 Move X0, X19
	3226 Move V1, V13
	3227 Move X4, X31
	3228 Call TMP_Text.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, V7, X2, X3
	3229 Move W8, 1
	3230 Move [X31+116], W31
	3231 Move [X31+104], W8
	3232 Move W1, [X31+4168]
	3233 Move V3, [X19+764]
	3234 Move S7, [X31+84]
	3235 Move S0, [X31+88]
	3236 Move S4, [X31+220]
	3237 Move S2, [X31+224]
	3238 Move V5, [X31+316]
	3239 Move V6, [X31+232]
	3240 Add X2, X31, 4096
	3241 Add X3, X31, 4096
	3242 Add X2, X2, 116
	3243 Add X3, X3, 120
	3244 Move X0, X19
	3245 Move V1, V13
	3246 Move X4, X31
	3247 Call TMP_Text.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, V7, X2, X3
	3248 Move W9, 1
	3249 Move W8, 1
	3250 Move [X31+116], W31
	3251 Move [X31+100], W8
	3252 Move [X31+104], W9
	3253 Move X29, 0x692000
	3254 Move X22, [X31+368]
	3255 Move W25, [X31+4220]
	3256 Move [X31+116], W31
	3257 Move V1, [X31+188]
	3258 NotImplemented "Instruction CMP not yet implemented."
	3259 Add X27, X31, 4000
	3260 NotImplemented "Instruction CMP not yet implemented."
	3261 Move X8, [X22]
	3262 Compare X8, 0
	3263 JumpIfEqual {7843}
	3264 Move X9, [X8+56]
	3265 Compare X9, 0
	3266 JumpIfEqual {7843}
	3267 Move W10, [X23]
	3268 Move W11, [X9+24]
	3269 NotImplemented "Instruction CMP not yet implemented."
	3270 Move X11, W10
	3271 NotImplemented "Instruction MADD not yet implemented."
	3272 Move [X9+404], W31
	3273 Move [X19+1188], W10
	3274 Move X9, [X8+80]
	3275 Compare X9, 0
	3276 JumpIfEqual {7843}
	3277 NotImplemented "Instruction LDRSW not yet implemented."
	3278 Move W11, [X9+24]
	3279 NotImplemented "Instruction CMP not yet implemented."
	3280 Move W11, 92
	3281 NotImplemented "Instruction MADD not yet implemented."
	3282 Move W10, [X9+44]
	3283 Add W10, W10, 1
	3284 Move [X9+44], W10
	3285 Move W9, [X8+32]
	3286 Add W9, W9, 1
	3287 Move [X8+32], W9
	3288 Move X8, [X22]
	3289 Compare X8, 0
	3290 JumpIfEqual {7843}
	3291 Move X8, [X8+56]
	3292 Compare X8, 0
	3293 JumpIfEqual {7843}
	3294 NotImplemented "Instruction LDRSW not yet implemented."
	3295 Move W10, [X8+24]
	3296 NotImplemented "Instruction CMP not yet implemented."
	3297 NotImplemented "Instruction MADD not yet implemented."
	3298 Move [X8+404], W31
	3299 Move W8, [X19+468]
	3300 Move W9, 324
	3301 Move W10, 1260
	3302 NotImplemented "Instruction CMP not yet implemented."
	3303 Move W8, [X19+1604]
	3304 NotImplemented "Instruction CSEL not yet implemented."
	3305 Move W1, [X19]
	3306 NotImplemented "Instruction CMP not yet implemented."
	3307 Compare W8, 0
	3308 JumpIfNotEqual {3320}
	3309 Move X8, [X19]
	3310 Move V0, [X31+336]
	3311 Move X0, X19
	3312 Move X9, [X8+2232]
	3313 Move X2, [X8+2240]
	3314 NotImplemented "Instruction BLR not yet implemented."
	3315 Move X8, [X19]
	3316 Move X0, X19
	3317 Move X9, [X8+2248]
	3318 Move X2, [X8+2256]
	3319 NotImplemented "Instruction BLR not yet implemented."
	3320 Move W8, [X23]
	3321 Move W9, [X31+100]
	3322 Move TEMP, X9
	3323 And TEMP, TEMP, 1
	3324 Compare TEMP, 1
	3325 JumpIfNotEqual {3328}
	3326 Move X9, [X31+128]
	3327 Move [X9+496], W8
	3328 Move W10, [X19+1196]
	3329 Move X9, [X19+872]
	3330 Move [X19+1188], W8
	3331 Add W10, W10, 1
	3332 Move [X19+1196], W10
	3333 Compare X9, 0
	3334 JumpIfEqual {7843}
	3335 Move X8, [X9+80]
	3336 Compare X8, 0
	3337 JumpIfEqual {7843}
	3338 NotImplemented "Instruction LDRSW not yet implemented."
	3339 Move W10, [X8+24]
	3340 NotImplemented "Instruction CMP not yet implemented."
	3341 Move W10, 92
	3342 NotImplemented "Instruction MADD not yet implemented."
	3343 Move [X31+100], W31
	3344 Move [X8+96], S8
	3345 Move [X8+104], S9
	3346 Move W8, [X19+736]
	3347 NotImplemented "Instruction CMP not yet implemented."
	3348 Move W8, [X31+4220]
	3349 NotImplemented "Instruction CMP not yet implemented."
	3350 Xor W8, W20, 1
	3351 Compare W8, 0
	3352 JumpIfEqual {3551}
	3353 Move X8, [X19+1624]
	3354 Compare X8, 0
	3355 JumpIfEqual {7843}
	3356 Move V8, [X19+488]
	3357 Add X0, X8, 80
	3358 Move X1, X31
	3359 Call FaceInfo.get_pointSize, X0
	3360 Move X8, [X19+1624]
	3361 Compare X8, 0
	3362 JumpIfEqual {7843}
	3363 Move W25, W0
	3364 Add X0, X8, 80
	3365 Move X1, X31
	3366 Call FaceInfo.get_scale, X0
	3367 Move W9, [X19+773]
	3368 Move V1, [X31+144]
	3369 Move X8, [X19+1616]
	3370 Move S2, 1
	3371 NotImplemented "Instruction CMP not yet implemented."
	3372 NotImplemented "Instruction FCSEL not yet implemented."
	3373 Compare X8, 0
	3374 JumpIfEqual {7843}
	3375 Move X0, [X8+32]
	3376 Compare X0, 0
	3377 JumpIfEqual {7843}
	3378 Move V10, [X19+1028]
	3379 Move V11, [X8+44]
	3380 NotImplemented "Instruction SCVTF not yet implemented."
	3381 NotImplemented "Instruction FDIV not yet implemented."
	3382 Move X1, X31
	3383 Multiply S8, S1, S0
	3384 Call Glyph.get_scale, X0
	3385 Move X9, [X31+176]
	3386 Multiply S1, S8, S9
	3387 Multiply S1, S10, S1
	3388 Move W8, [X31+4220]
	3389 Move V10, [X9]
	3390 Move X9, [X31+160]
	3391 Multiply S1, S1, S11
	3392 NotImplemented "Instruction CMP not yet implemented."
	3393 Multiply S8, S1, S0
	3394 Move V9, [X9]
	3395 Move W8, [X19+1172]
	3396 Move W9, [X19+1176]
	3397 NotImplemented "Instruction CMP not yet implemented."
	3398 Move X9, [X22]
	3399 Compare X9, 0
	3400 JumpIfEqual {7843}
	3401 Move X9, [X9+56]
	3402 Compare X9, 0
	3403 JumpIfEqual {7843}
	3404 Move W10, [X9+24]
	3405 Subtract W8, W8, 1
	3406 NotImplemented "Instruction CMP not yet implemented."
	3407 Move X10, [X19+1624]
	3408 Compare X10, 0
	3409 JumpIfEqual {7843}
	3410 NotImplemented "Instruction SMADDL not yet implemented."
	3411 Move V9, [X8+96]
	3412 Add X0, X10, 80
	3413 Move X1, X31
	3414 Call FaceInfo.get_pointSize, X0
	3415 Move X8, [X19+1624]
	3416 Compare X8, 0
	3417 JumpIfEqual {7843}
	3418 Move W25, W0
	3419 Add X0, X8, 80
	3420 Move X1, X31
	3421 Call FaceInfo.get_scale, X0
	3422 Move W9, [X19+773]
	3423 Move V8, V0
	3424 Move V0, [X31+144]
	3425 Move X8, [X19+1616]
	3426 NotImplemented "Instruction CMP not yet implemented."
	3427 Move S1, 1
	3428 NotImplemented "Instruction FCSEL not yet implemented."
	3429 Compare X8, 0
	3430 JumpIfEqual {7843}
	3431 Move X0, [X8+32]
	3432 Compare X0, 0
	3433 JumpIfEqual {7843}
	3434 Move V11, [X19+1028]
	3435 Move V12, [X8+44]
	3436 Move X1, X31
	3437 Call Glyph.get_scale, X0
	3438 Move X8, [X22]
	3439 Compare X8, 0
	3440 JumpIfEqual {7843}
	3441 Move X8, [X8+80]
	3442 Compare X8, 0
	3443 JumpIfEqual {7843}
	3444 NotImplemented "Instruction LDRSW not yet implemented."
	3445 Move W10, [X8+24]
	3446 NotImplemented "Instruction CMP not yet implemented."
	3447 NotImplemented "Instruction SCVTF not yet implemented."
	3448 Move W10, 92
	3449 NotImplemented "Instruction FDIV not yet implemented."
	3450 NotImplemented "Instruction MADD not yet implemented."
	3451 Multiply S1, S1, S8
	3452 Multiply S1, S1, S10
	3453 Move S10, [X8+96]
	3454 Move S9, [X8+100]
	3455 Multiply S1, S11, S1
	3456 Multiply S1, S1, S12
	3457 Multiply S8, S1, S0
	3458 Move V12, [X19+1240]
	3459 Move S0, W31
	3460 Move S11, W31
	3461 NotImplemented "Instruction FCMP not yet implemented."
	3462 Move W8, [X19+708]
	3463 Move S11, W31
	3464 Compare W8, 0
	3465 JumpIfNotEqual {3469}
	3466 Move V1, [X19+1224]
	3467 Move V2, [X19+1232]
	3468 Subtract S11, S1, S2
	3469 Move V14, [X19+1208]
	3470 Move V15, [X19+1228]
	3471 Move W8, [X19+240]
	3472 Move V13, [X19+1600]
	3473 Compare W8, 0
	3474 JumpIfNotEqual {3492}
	3475 Move X8, [X19+1616]
	3476 Compare X8, 0
	3477 JumpIfEqual {7843}
	3478 Move X0, [X8+32]
	3479 Compare X0, 0
	3480 JumpIfEqual {7843}
	3481 Add X8, X31, 4096
	3482 Add X8, X8, 128
	3483 Move X1, X31
	3484 Call Glyph.get_metrics, X0
	3485 Move V0, [X27+14]
	3486 Move W8, [X31+4240]
	3487 Add X0, X31, 4000
	3488 Move X1, X31
	3489 Move [X27], V0
	3490 Move [X31+4016], W8
	3491 Call GlyphMetrics.get_horizontalAdvance, X0
	3492 Move V3, [X31+152]
	3493 Move V2, [X19+864]
	3494 Subtract S1, S15, S12
	3495 Subtract S1, S14, S1
	3496 Subtract S3, S3, S10
	3497 Subtract S3, S3, S9
	3498 Add S5, S1, S11
	3499 NotImplemented "Instruction FCMP not yet implemented."
	3500 Move S1, -1
	3501 Move X8, -50184192
	3502 NotImplemented "Instruction FCCMP not yet implemented."
	3503 Move V4, [X8+400]
	3504 NotImplemented "Instruction FCSEL not yet implemented."
	3505 Move V3, [X31+184]
	3506 NotImplemented "Instruction CMP not yet implemented."
	3507 Move S2, 1
	3508 NotImplemented "Instruction FCSEL not yet implemented."
	3509 NotImplemented "Instruction FCMP not yet implemented."
	3510 Move V3, [X19+724]
	3511 Move S5, 1
	3512 NotImplemented "Instruction FABS not yet implemented."
	3513 Multiply S1, S2, S1
	3514 Subtract S3, S5, S3
	3515 Multiply S0, S0, S3
	3516 Multiply S0, S8, S0
	3517 Add S0, S4, S0
	3518 NotImplemented "Instruction FCMP not yet implemented."
	3519 Move X25, 0x692000
	3520 Move X25, [X25+1000]
	3521 Move X0, [X25]
	3522 Move W8, [X0+224]
	3523 Compare W8, 0
	3524 JumpIfNotEqual {3527}
	3525 Call 0x1C17DFC
	3526 Move X0, [X25]
	3527 Move X8, [X0+184]
	3528 Move W2, [X31+4168]
	3529 Move W3, [X19+1172]
	3530 Move X0, X19
	3531 Add X1, X8, 1928
	3532 Move X4, X31
	3533 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	3534 Move X8, [X25]
	3535 Move X9, 0x692000
	3536 Add X0, X31, 4096
	3537 Add X0, X0, 128
	3538 Move X8, [X8+184]
	3539 Move X9, [X9+912]
	3540 Move W2, 888
	3541 Add X1, X8, 1928
	3542 Move X25, [X9]
	3543 Move W9, 0x11F0
	3544 Add X26, X8, X9
	3545 Call 0x3EB2AC0
	3546 Add X1, X31, 4096
	3547 Add X1, X1, 128
	3548 Move X0, X26
	3549 Move X2, X25
	3550 Call TMP_TextProcessingStack`1<WordWrapState>.Push, X0, X1
	3551 Move X10, [X22]
	3552 Compare X10, 0
	3553 JumpIfEqual {7843}
	3554 Move X9, [X10+56]
	3555 Move V13, [X31+320]
	3556 Compare X9, 0
	3557 JumpIfEqual {7843}
	3558 NotImplemented "Instruction LDRSW not yet implemented."
	3559 Move W8, [X9+24]
	3560 NotImplemented "Instruction CMP not yet implemented."
	3561 Move W8, [X19+1192]
	3562 NotImplemented "Instruction NOP not yet implemented."
	3563 NotImplemented "Instruction MADD not yet implemented."
	3564 Move [X11+100], W8
	3565 Move W12, [X19+1200]
	3566 Move X9, W8
	3567 Move [X11+104], W12
	3568 Move TEMP, X20
	3569 And TEMP, TEMP, 1
	3570 Compare TEMP, 1
	3571 JumpIfEqual {3578}
	3572 Move W11, [X31+4220]
	3573 NotImplemented "Instruction CMP not yet implemented."
	3574 Move W12, 1
	3575 NotImplemented "Instruction LSLV not yet implemented."
	3576 Move W12, 0x2C00
	3577 And W31, W11, W12
	3578 Move X10, [X10+80]
	3579 Compare X10, 0
	3580 JumpIfEqual {7843}
	3581 Move W11, [X10+24]
	3582 NotImplemented "Instruction CMP not yet implemented."
	3583 Move W11, 92
	3584 NotImplemented "Instruction MADD not yet implemented."
	3585 Move W11, [X11+36]
	3586 NotImplemented "Instruction CMP not yet implemented."
	3587 Move X10, [X10+80]
	3588 Compare X10, 0
	3589 JumpIfEqual {7843}
	3590 Move W11, [X10+24]
	3591 NotImplemented "Instruction CMP not yet implemented."
	3592 Move W8, [X19+632]
	3593 Move W11, 92
	3594 NotImplemented "Instruction MADD not yet implemented."
	3595 Move [X9+104], W8
	3596 Move W8, [X31+4220]
	3597 NotImplemented "Instruction CMP not yet implemented."
	3598 Move X25, [X31+352]
	3599 Move X8, [X25]
	3600 Compare X8, 0
	3601 JumpIfEqual {7843}
	3602 Add X0, X8, 80
	3603 Move X1, X31
	3604 Call FaceInfo.get_tabWidth, X0
	3605 Move X8, [X25]
	3606 Compare X8, 0
	3607 JumpIfEqual {7843}
	3608 Move V1, [X8+441]
	3609 Move V2, [X19+1600]
	3610 NotImplemented "Instruction UCVTF not yet implemented."
	3611 Multiply S0, S0, S1
	3612 Multiply S0, S13, S0
	3613 NotImplemented "Instruction FDIV not yet implemented."
	3614 NotImplemented "Instruction FRINTP not yet implemented."
	3615 Multiply S1, S0, S1
	3616 Add S0, S2, S0
	3617 NotImplemented "Instruction FCMP not yet implemented."
	3618 NotImplemented "Instruction FCSEL not yet implemented."
	3619 Move V0, [X19+688]
	3620 NotImplemented "Instruction FCMP not yet implemented."
	3621 Move W9, [X19+240]
	3622 Compare W9, 0
	3623 JumpIfEqual {3678}
	3624 Move X9, [X31+352]
	3625 Move X9, [X9]
	3626 Compare X9, 0
	3627 JumpIfEqual {7843}
	3628 Move V1, [X9+428]
	3629 Move V5, [X31+316]
	3630 Move V2, [X19+724]
	3631 Move V4, [X31+288]
	3632 Move V3, [X19+684]
	3633 Add S1, S5, S1
	3634 Move S5, 1
	3635 Subtract S2, S5, S2
	3636 Move V5, [X31+220]
	3637 Move V0, [X19+1600]
	3638 Multiply S4, S13, S4
	3639 Move W9, 0x200B
	3640 Add S1, S5, S1
	3641 Move V5, [X31+224]
	3642 NotImplemented "Instruction CMP not yet implemented."
	3643 Multiply S1, S5, S1
	3644 Add S1, S4, S1
	3645 Add S1, S3, S1
	3646 Multiply S1, S2, S1
	3647 Subtract S0, S0, S1
	3648 Move [X19+1600], S0
	3649 Compare W29, 0
	3650 JumpIfEqual {3724}
	3651 Move V1, [X19+692]
	3652 Move V2, [X31+224]
	3653 Multiply S1, S2, S1
	3654 Subtract S0, S0, S1
	3655 Move X9, [X31+352]
	3656 Move X9, [X9]
	3657 Compare X9, 0
	3658 JumpIfEqual {7843}
	3659 Move V5, [X31+140]
	3660 Move V2, [X9+428]
	3661 Move V3, [X19+724]
	3662 Move V4, [X19+684]
	3663 Subtract S0, S0, S5
	3664 Move V5, [X31+316]
	3665 Move V1, [X19+1600]
	3666 Move W9, 0x200B
	3667 NotImplemented "Instruction CMP not yet implemented."
	3668 Add S2, S5, S2
	3669 Move S5, 1
	3670 Subtract S3, S5, S3
	3671 Move V5, [X31+224]
	3672 Multiply S2, S5, S2
	3673 Add S0, S0, S2
	3674 Add S0, S4, S0
	3675 Multiply S0, S3, S0
	3676 Add S0, S1, S0
	3677 Move [X19+1600], S0
	3678 Move W8, [X19+1140]
	3679 Compare W8, 0
	3680 JumpIfEqual {3685}
	3681 Move X0, [X31+120]
	3682 Move X1, X31
	3683 Call Matrix4x4.get_lossyScale, X0
	3684 Move V8, V0
	3685 Move S8, 1
	3686 Move V9, [X19+1600]
	3687 Add X0, X31, 4096
	3688 Add X0, X0, 48
	3689 Move X1, X31
	3690 Call GlyphMetrics.get_horizontalAdvance, X0
	3691 Move X8, [X19+256]
	3692 Compare X8, 0
	3693 JumpIfEqual {7843}
	3694 Move V4, [X31+288]
	3695 Multiply S0, S8, S0
	3696 Move V1, [X8+428]
	3697 Move V2, [X19+684]
	3698 Add S0, S4, S0
	3699 Move V4, [X31+316]
	3700 Move V3, [X19+724]
	3701 Multiply S0, S13, S0
	3702 Move W9, 0x200B
	3703 Add S1, S4, S1
	3704 Move V4, [X31+220]
	3705 Add S1, S4, S1
	3706 Move V4, [X31+224]
	3707 Multiply S1, S4, S1
	3708 Add S0, S0, S1
	3709 Move S1, 1
	3710 Add S0, S2, S0
	3711 Subtract S1, S1, S3
	3712 Multiply S0, S1, S0
	3713 Add S0, S9, S0
	3714 Move [X19+1600], S0
	3715 Move W8, [X31+4220]
	3716 NotImplemented "Instruction CMP not yet implemented."
	3717 Compare W29, 0
	3718 JumpIfEqual {3724}
	3719 Move V1, [X19+692]
	3720 Move V2, [X31+224]
	3721 Multiply S1, S2, S1
	3722 Add S0, S0, S1
	3723 Move [X19+1600], S0
	3724 Move X8, [X22]
	3725 Compare X8, 0
	3726 JumpIfEqual {7843}
	3727 Move X9, [X8+56]
	3728 Compare X9, 0
	3729 JumpIfEqual {7843}
	3730 NotImplemented "Instruction LDRSW not yet implemented."
	3731 Move X10, [X9+24]
	3732 NotImplemented "Instruction CMP not yet implemented."
	3733 NotImplemented "Instruction MADD not yet implemented."
	3734 Move [X11+324], S0
	3735 Move W11, [X31+4220]
	3736 NotImplemented "Instruction CMP not yet implemented."
	3737 Subtract W13, W11, 10
	3738 NotImplemented "Instruction CMP not yet implemented."
	3739 NotImplemented "Instruction CMP not yet implemented."
	3740 Move TEMP, 0x2027
	3741 Not TEMP
	3742 Move W13, TEMP
	3743 Add W13, W11, W13
	3744 NotImplemented "Instruction CMP not yet implemented."
	3745 NotImplemented "Instruction CMP not yet implemented."
	3746 Move V0, [X19+1036]
	3747 Move W13, [X31+136]
	3748 Move S1, W31
	3749 Add S0, S0, S1
	3750 NotImplemented "Instruction CMP not yet implemented."
	3751 Move [X19+1600], S0
	3752 NotImplemented "Instruction CMP not yet implemented."
	3753 NotImplemented "Instruction CSET not yet implemented."
	3754 And W13, W20, W13
	3755 Move TEMP, X13
	3756 And TEMP, TEMP, 1
	3757 Compare TEMP, 1
	3758 JumpIfEqual {3761}
	3759 Move W13, [X31+136]
	3760 NotImplemented "Instruction CMP not yet implemented."
	3761 Move V0, [X19+1240]
	3762 NotImplemented "Instruction FCMP not yet implemented."
	3763 Move X8, 0x62D000
	3764 Move X8, [X8+1448]
	3765 Move V8, [X19+1224]
	3766 Move V9, [X19+1232]
	3767 Move X0, [X8]
	3768 Move W8, [X0+224]
	3769 Compare W8, 0
	3770 JumpIfNotEqual {3772}
	3771 Call 0x1C17DFC
	3772 Move V1, [X31+92]
	3773 Subtract S8, S8, S9
	3774 NotImplemented "Instruction FABS not yet implemented."
	3775 NotImplemented "Instruction FCMP not yet implemented."
	3776 Move W8, [X19+708]
	3777 Compare W8, 0
	3778 JumpIfNotEqual {3856}
	3779 Move W8, [X19+828]
	3780 Compare W8, 0
	3781 JumpIfNotEqual {3856}
	3782 Move W1, [X19+1176]
	3783 Move W2, [X19+1172]
	3784 Move X0, X19
	3785 Move V0, V8
	3786 Move X3, X31
	3787 Call TMP_Text.AdjustLineOffset, X0, X1, X2, V0
	3788 Move V0, [X19+1220]
	3789 Move V1, [X19+1240]
	3790 Move X20, 0x692000
	3791 Subtract S0, S0, S8
	3792 Add S1, S8, S1
	3793 Move [X19+1220], S0
	3794 Move [X19+1240], S1
	3795 Move X20, [X20+1000]
	3796 Move X0, [X20]
	3797 Move W8, [X0+224]
	3798 Compare W8, 0
	3799 JumpIfNotEqual {3802}
	3800 Call 0x1C17DFC
	3801 Move X0, [X20]
	3802 Move X8, [X0+184]
	3803 Move W10, [X19+1192]
	3804 Move W9, [X8+1964]
	3805 NotImplemented "Instruction CMP not yet implemented."
	3806 Move W9, [X0+224]
	3807 Compare W9, 0
	3808 JumpIfNotEqual {3814}
	3809 Call 0x1C17DFC
	3810 Move X8, 0x692000
	3811 Move X8, [X8+1000]
	3812 Move X8, [X8]
	3813 Move X8, [X8+184]
	3814 Move X9, 0x692000
	3815 Move X9, [X9+904]
	3816 Move W26, 0x11F0
	3817 Add X0, X8, X26
	3818 Add X8, X31, 4096
	3819 Move X1, [X9]
	3820 Add X8, X8, 128
	3821 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	3822 Add X1, X31, 4096
	3823 Add X0, X31, 432
	3824 Add X1, X1, 128
	3825 Move W2, 888
	3826 Call 0x3EB2AC0
	3827 Move X8, 0x692000
	3828 Move X8, [X8+1000]
	3829 Add X1, X31, 432
	3830 Move W2, 888
	3831 Move X20, [X8]
	3832 Move X8, [X20+184]
	3833 Add X0, X8, 1928
	3834 Call 0x3EB2AC0
	3835 Move X8, [X20+184]
	3836 Move X9, 0x692000
	3837 Add X0, X31, 4096
	3838 Add X0, X0, 128
	3839 Move V0, [X8+1980]
	3840 Move V1, [X8+2048]
	3841 Add X1, X8, 1928
	3842 Move W2, 888
	3843 Add S0, S8, S0
	3844 Add S1, S8, S1
	3845 Move [X8+1980], S0
	3846 Move [X8+2048], S1
	3847 Move X9, [X9+912]
	3848 Add X26, X8, X26
	3849 Move X25, [X9]
	3850 Call 0x3EB2AC0
	3851 Add X1, X31, 4096
	3852 Add X1, X1, 128
	3853 Move X0, X26
	3854 Move X2, X25
	3855 Call TMP_TextProcessingStack`1<WordWrapState>.Push, X0, X1
	3856 Move V1, [X19+1240]
	3857 Move V0, [X19+1228]
	3858 Move V2, [X19+1220]
	3859 Move [X19+828], W31
	3860 Add X8, X31, 117
	3861 Subtract S0, S0, S1
	3862 NotImplemented "Instruction FCMP not yet implemented."
	3863 NotImplemented "Instruction FCSEL not yet implemented."
	3864 Move [X19+1220], S3
	3865 Move W8, [X8+4095]
	3866 Move V2, [X19+1224]
	3867 Compare W8, 0
	3868 JumpIfNotEqual {3870}
	3869 Move [X31+4216], S3
	3870 Move W8, [X19+820]
	3871 Compare W8, 0
	3872 JumpIfEqual {3882}
	3873 Move W8, [X19+1172]
	3874 Move W9, [X19+808]
	3875 NotImplemented "Instruction CMP not yet implemented."
	3876 Move W8, [X19+1192]
	3877 Move W9, [X19+816]
	3878 NotImplemented "Instruction CMP not yet implemented."
	3879 Move W8, 1
	3880 Add X9, X31, 117
	3881 Move [X9+4095], W8
	3882 Move X10, [X22]
	3883 Compare X10, 0
	3884 JumpIfEqual {7843}
	3885 Move X8, [X10+80]
	3886 Compare X8, 0
	3887 JumpIfEqual {7843}
	3888 NotImplemented "Instruction LDRSW not yet implemented."
	3889 Move W11, [X8+24]
	3890 NotImplemented "Instruction CMP not yet implemented."
	3891 Move W11, [X19+1176]
	3892 Move W12, 92
	3893 NotImplemented "Instruction MADD not yet implemented."
	3894 Move [X12+52], W11
	3895 Move W13, [X19+1180]
	3896 Move W14, [X19+1176]
	3897 NotImplemented "Instruction CMP not yet implemented."
	3898 NotImplemented "Instruction CSEL not yet implemented."
	3899 Move [X19+1180], W11
	3900 Move [X12+56], W11
	3901 Move W13, [X19+1172]
	3902 Move [X19+1184], W13
	3903 Move [X12+60], W13
	3904 Move W13, [X19+1188]
	3905 Move W14, [X19+1180]
	3906 NotImplemented "Instruction CMP not yet implemented."
	3907 NotImplemented "Instruction CSEL not yet implemented."
	3908 Move [X31+4172], W13
	3909 Move [X19+1188], W13
	3910 Move W14, [X12+60]
	3911 Move W15, [X12+52]
	3912 Move [X12+64], W13
	3913 Subtract W13, W14, W15
	3914 Add W13, W13, 1
	3915 Move [X12+36], W13
	3916 Move W13, [X19+1196]
	3917 Move [X12+40], W13
	3918 Move X10, [X10+56]
	3919 Compare X10, 0
	3920 JumpIfEqual {7843}
	3921 Move W12, [X10+24]
	3922 NotImplemented "Instruction CMP not yet implemented."
	3923 NotImplemented "Instruction SMADDL not yet implemented."
	3924 Move W10, [X10+284]
	3925 Move W11, 92
	3926 NotImplemented "Instruction MADD not yet implemented."
	3927 Move [X8+112], S0
	3928 Move [X8+108], W10
	3929 Move X10, [X22]
	3930 Compare X10, 0
	3931 JumpIfEqual {7843}
	3932 Move X8, [X10+80]
	3933 Compare X8, 0
	3934 JumpIfEqual {7843}
	3935 NotImplemented "Instruction LDRSW not yet implemented."
	3936 Move W11, [X8+24]
	3937 NotImplemented "Instruction CMP not yet implemented."
	3938 Move X10, [X10+56]
	3939 Compare X10, 0
	3940 JumpIfEqual {7843}
	3941 NotImplemented "Instruction LDRSW not yet implemented."
	3942 Move W12, [X10+24]
	3943 NotImplemented "Instruction CMP not yet implemented."
	3944 NotImplemented "Instruction MADD not yet implemented."
	3945 Move W10, [X10+296]
	3946 Move W11, 92
	3947 Subtract S1, S2, S1
	3948 NotImplemented "Instruction MADD not yet implemented."
	3949 Move [X8+116], W10
	3950 Move [X8+120], S1
	3951 Move X8, [X22]
	3952 Compare X8, 0
	3953 JumpIfEqual {7843}
	3954 Move X11, [X8+80]
	3955 Compare X11, 0
	3956 JumpIfEqual {7843}
	3957 NotImplemented "Instruction LDRSW not yet implemented."
	3958 Move W9, [X11+24]
	3959 NotImplemented "Instruction CMP not yet implemented."
	3960 Move W9, 92
	3961 NotImplemented "Instruction MADD not yet implemented."
	3962 Move V3, [X31+336]
	3963 Move V2, [X9+116]
	3964 Move W10, [X9+36]
	3965 Multiply S3, S13, S3
	3966 Subtract S2, S2, S3
	3967 Move [X9+68], S2
	3968 Move V2, [X31+232]
	3969 NotImplemented "Instruction CMP not yet implemented."
	3970 Move [X9+92], S2
	3971 Move W9, [X19+632]
	3972 Move W10, 92
	3973 NotImplemented "Instruction MADD not yet implemented."
	3974 Move [X10+104], W9
	3975 Move X9, [X31+352]
	3976 Move X14, [X9]
	3977 Compare X14, 0
	3978 JumpIfEqual {7843}
	3979 Move X9, [X8+56]
	3980 Compare X9, 0
	3981 JumpIfEqual {7843}
	3982 NotImplemented "Instruction LDRSW not yet implemented."
	3983 Move X10, [X9+24]
	3984 NotImplemented "Instruction CMP not yet implemented."
	3985 Move V3, [X14+428]
	3986 NotImplemented "Instruction NOP not yet implemented."
	3987 NotImplemented "Instruction MADD not yet implemented."
	3988 Move V2, [X19+684]
	3989 Move W14, [X14+404]
	3990 Move V4, [X19+724]
	3991 Compare W14, 0
	3992 JumpIfNotEqual {3995}
	3993 NotImplemented "Instruction LDRSW not yet implemented."
	3994 NotImplemented "Instruction CMP not yet implemented."
	3995 Move V5, [X31+316]
	3996 Move W14, [X19+240]
	3997 NotImplemented "Instruction NOP not yet implemented."
	3998 NotImplemented "Instruction MADD not yet implemented."
	3999 Move W15, 92
	4000 Add S3, S5, S3
	4001 Move S5, 1
	4002 Subtract S4, S5, S4
	4003 Move S5, [X31+220]
	4004 Move S6, [X31+224]
	4005 NotImplemented "Instruction CMP not yet implemented."
	4006 NotImplemented "Instruction MADD not yet implemented."
	4007 Add S3, S5, S3
	4008 Multiply S3, S6, S3
	4009 Move V5, [X13+324]
	4010 Subtract S2, S3, S2
	4011 Multiply S2, S4, S2
	4012 NotImplemented "Instruction FNEG not yet implemented."
	4013 NotImplemented "Instruction FCSEL not yet implemented."
	4014 Add S2, S5, S2
	4015 Move [X11+88], S2
	4016 Move V4, [X31+96]
	4017 Move V2, [X19+1240]
	4018 Subtract S3, S1, S0
	4019 Add S3, S4, S3
	4020 Move S4, W31
	4021 Subtract S2, S4, S2
	4022 Move [X11+80], S2
	4023 Move [X11+88], S0
	4024 Move [X11+72], S3
	4025 Move [X11+80], S1
	4026 Move W11, [X31+4220]
	4027 NotImplemented "Instruction CMP not yet implemented."
	4028 Subtract W12, W11, 10
	4029 NotImplemented "Instruction CMP not yet implemented."
	4030 NotImplemented "Instruction CMP not yet implemented."
	4031 Move X11, [X19+1144]
	4032 Compare X11, 0
	4033 JumpIfEqual {7843}
	4034 Move X11, [X11+24]
	4035 Move [X31+4168], W11
	4036 Move W11, 3
	4037 Move TEMP, 0x2027
	4038 Not TEMP
	4039 Move W12, TEMP
	4040 Add W12, W11, W12
	4041 NotImplemented "Instruction CMP not yet implemented."
	4042 NotImplemented "Instruction CMP not yet implemented."
	4043 Move X29, 0x692000
	4044 Move X29, [X29+1000]
	4045 Move X0, [X29]
	4046 Move W8, [X0+224]
	4047 Compare W8, 0
	4048 JumpIfNotEqual {4051}
	4049 Call 0x1C17DFC
	4050 Move X0, [X29]
	4051 Move X8, [X0+184]
	4052 Move W2, [X31+4168]
	4053 Move W3, [X19+1172]
	4054 Move X0, X19
	4055 Add X1, X8, 1040
	4056 Move X4, X31
	4057 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4058 Move W9, [X19+1192]
	4059 Move W10, [X19+1172]
	4060 Move X8, [X19+872]
	4061 Move [X19+1196], W31
	4062 Add W1, W9, 1
	4063 Add W9, W10, 1
	4064 Move [X19+1192], W1
	4065 Move [X19+1176], W9
	4066 Compare X8, 0
	4067 JumpIfEqual {7843}
	4068 Move X9, [X8+80]
	4069 Compare X9, 0
	4070 JumpIfEqual {7843}
	4071 Move W9, [X9+24]
	4072 NotImplemented "Instruction CMP not yet implemented."
	4073 Move X0, X19
	4074 Move X2, X31
	4075 Call TMP_Text.ResizeLineExtents, X0, X1
	4076 Move X8, [X19+872]
	4077 Compare X8, 0
	4078 JumpIfEqual {7843}
	4079 Move X8, [X8+56]
	4080 Compare X8, 0
	4081 JumpIfEqual {7843}
	4082 Move W3, [X23]
	4083 Move W9, [X8+24]
	4084 NotImplemented "Instruction CMP not yet implemented."
	4085 Move X9, W3
	4086 Move X10, -50184192
	4087 Move V0, [X19+704]
	4088 Move V1, [X10+532]
	4089 NotImplemented "Instruction NOP not yet implemented."
	4090 NotImplemented "Instruction MADD not yet implemented."
	4091 Move V8, [X8+340]
	4092 NotImplemented "Instruction FCMP not yet implemented."
	4093 Move W8, [X31+4220]
	4094 Move W9, 0x2029
	4095 Move S0, W31
	4096 NotImplemented "Instruction CMP not yet implemented."
	4097 NotImplemented "Instruction CMP not yet implemented."
	4098 Move S1, W31
	4099 Move V1, [X19+716]
	4100 Move V2, [X19+1228]
	4101 Move V3, [X19+700]
	4102 Move V4, [X19+696]
	4103 Move V5, [X19+1240]
	4104 Subtract S0, S0, S2
	4105 Move V2, [X31+84]
	4106 Add S0, S8, S0
	4107 Add S1, S4, S1
	4108 Move W8, W31
	4109 Add S2, S2, S3
	4110 Move V3, [X31+88]
	4111 Multiply S2, S3, S2
	4112 Add S0, S0, S2
	4113 Move V2, [X31+224]
	4114 Multiply S1, S2, S1
	4115 Add S0, S0, S1
	4116 Add S0, S0, S5
	4117 Move W3, [X23]
	4118 NotImplemented "Instruction CMP not yet implemented."
	4119 Move X10, W3
	4120 NotImplemented "Instruction MADD not yet implemented."
	4121 Move W12, [X12+404]
	4122 Compare W12, 0
	4123 JumpIfEqual {4138}
	4124 Move X12, [X31+128]
	4125 NotImplemented "Instruction NOP not yet implemented."
	4126 NotImplemented "Instruction MADD not yet implemented."
	4127 Add X10, X9, 284
	4128 Move V1, [X10]
	4129 Move V0, [X12+560]
	4130 NotImplemented "Instruction INVALID not yet implemented."
	4131 NotImplemented "Instruction INVALID not yet implemented."
	4132 Move [X12+560], D0
	4133 Move V0, [X12+568]
	4134 Move V1, [X9+296]
	4135 NotImplemented "Instruction INVALID not yet implemented."
	4136 NotImplemented "Instruction INVALID not yet implemented."
	4137 Move [X12+568], D0
	4138 Move W9, [X19+736]
	4139 NotImplemented "Instruction CMP not yet implemented."
	4140 NotImplemented "Instruction CMP not yet implemented."
	4141 Move W9, 1
	4142 NotImplemented "Instruction LSLV not yet implemented."
	4143 Move W10, 0x2C00
	4144 And W31, W9, W10
	4145 Move W8, [X19+728]
	4146 Compare W8, 0
	4147 JumpIfNotEqual {4154}
	4148 Move W8, [X19+736]
	4149 NotImplemented "Instruction CMP not yet implemented."
	4150 Move W9, 1
	4151 NotImplemented "Instruction LSLV not yet implemented."
	4152 Move W9, 74
	4153 And W31, W8, W9
	4154 Move W8, [X31+4220]
	4155 Compare W29, 0
	4156 JumpIfEqual {4248}
	4157 Move W9, [X19+730]
	4158 NotImplemented "Instruction CMP not yet implemented."
	4159 Move TEMP, 0x2006
	4160 Not TEMP
	4161 Move W9, TEMP
	4162 Add W9, W8, W9
	4163 NotImplemented "Instruction CMP not yet implemented."
	4164 Move W10, 1
	4165 NotImplemented "Instruction LSLV not yet implemented."
	4166 Move X10, 1025
	4167 NotImplemented "Instruction MOVK not yet implemented."
	4168 And X31, X9, X10
	4169 NotImplemented "Instruction CMP not yet implemented."
	4170 Move W9, 0x2060
	4171 NotImplemented "Instruction CMP not yet implemented."
	4172 Move X29, 0x692000
	4173 Move X29, [X29+1000]
	4174 Move X0, [X29]
	4175 Move W8, [X0+224]
	4176 Compare W8, 0
	4177 JumpIfNotEqual {4181}
	4178 Call 0x1C17DFC
	4179 Move W3, [X23]
	4180 Move X0, [X29]
	4181 Move X8, [X0+184]
	4182 Move W2, [X31+4168]
	4183 Move X0, X19
	4184 Move X4, X31
	4185 Add X1, X8, 152
	4186 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4187 Move X8, [X29]
	4188 Move TEMP, 0
	4189 Not TEMP
	4190 Move W9, TEMP
	4191 Move [X31+104], W31
	4192 Move X8, [X8+184]
	4193 Move [X8+3704], W9
	4194 Move W8, [X31+4220]
	4195 Move W9, 0x2029
	4196 NotImplemented "Instruction CMP not yet implemented."
	4197 NotImplemented "Instruction CMP not yet implemented."
	4198 Move S1, W31
	4199 Move V1, [X19+716]
	4200 Move V2, [X19+696]
	4201 Move V3, [X19+1240]
	4202 Move W8, 1
	4203 Add S1, S2, S1
	4204 Move V2, [X31+224]
	4205 Multiply S1, S2, S1
	4206 Add S0, S0, S1
	4207 Add S0, S3, S0
	4208 Move [X19+1240], S0
	4209 Move [X19+708], W8
	4210 Move X0, [X29]
	4211 Move W8, [X0+224]
	4212 Compare W8, 0
	4213 JumpIfNotEqual {4217}
	4214 Call 0x1C17DFC
	4215 Move X0, [X29]
	4216 Move W3, [X23]
	4217 Move X8, [X0+184]
	4218 Move V0, [X19+1032]
	4219 Move V1, [X19+1036]
	4220 Move S3, W31
	4221 Move V2, [X8+5544]
	4222 Add S0, S0, S3
	4223 Add S0, S0, S1
	4224 Move [X19+1232], S8
	4225 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	4226 Move [X19+1224], D1
	4227 Move [X19+1600], S0
	4228 Move W2, [X31+4168]
	4229 Add X1, X8, 152
	4230 Move X0, X19
	4231 Move X4, X31
	4232 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4233 Move X8, [X29]
	4234 Move W2, [X31+4168]
	4235 Move W3, [X19+1172]
	4236 Move X0, X19
	4237 Move X8, [X8+184]
	4238 Move X4, X31
	4239 Add X1, X8, 2816
	4240 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4241 Move W8, [X19+1172]
	4242 Move W9, 1
	4243 Add W8, W8, 1
	4244 Move [X19+1172], W8
	4245 Move W8, 1
	4246 Move [X31+100], W8
	4247 Move [X31+104], W9
	4248 NotImplemented "Instruction CMP not yet implemented."
	4249 Move W9, 0x200B
	4250 NotImplemented "Instruction CMP not yet implemented."
	4251 NotImplemented "Instruction CMP not yet implemented."
	4252 Move W9, [X19+730]
	4253 Compare W9, 0
	4254 JumpIfEqual {4260}
	4255 Move W9, [X31+104]
	4256 Move TEMP, X9
	4257 And TEMP, TEMP, 1
	4258 Compare TEMP, 1
	4259 JumpIfEqual {4311}
	4260 Move TEMP, 0xAC00
	4261 Not TEMP
	4262 Move W9, TEMP
	4263 Add W9, W8, W9
	4264 Move W10, 0x2BFE
	4265 NotImplemented "Instruction CMP not yet implemented."
	4266 Move TEMP, 0x1100
	4267 Not TEMP
	4268 Move W9, TEMP
	4269 Add W9, W8, W9
	4270 NotImplemented "Instruction CMP not yet implemented."
	4271 Move TEMP, 0xA960
	4272 Not TEMP
	4273 Move W9, TEMP
	4274 Add W9, W8, W9
	4275 NotImplemented "Instruction CMP not yet implemented."
	4276 Move X0, X31
	4277 Call TMP_Settings.get_useModernHangulLineBreakingRules
	4278 Move TEMP, X0
	4279 And TEMP, TEMP, 1
	4280 Compare TEMP, 1
	4281 JumpIfNotEqual {4319}
	4282 Move W8, [X31+4220]
	4283 Move TEMP, 0xFF00
	4284 Not TEMP
	4285 Move W9, TEMP
	4286 Add W9, W8, W9
	4287 NotImplemented "Instruction CMP not yet implemented."
	4288 Move TEMP, 0xFE30
	4289 Not TEMP
	4290 Move W9, TEMP
	4291 Add W9, W8, W9
	4292 NotImplemented "Instruction CMP not yet implemented."
	4293 Move TEMP, 0x2E80
	4294 Not TEMP
	4295 Move W9, TEMP
	4296 Add W9, W8, W9
	4297 Move W10, 0x717E
	4298 NotImplemented "Instruction CMP not yet implemented."
	4299 Move TEMP, 0xF900
	4300 Not TEMP
	4301 Move W9, TEMP
	4302 Add W9, W8, W9
	4303 NotImplemented "Instruction CMP not yet implemented."
	4304 Move W9, [X31+104]
	4305 Move TEMP, X9
	4306 And TEMP, TEMP, 1
	4307 Compare TEMP, 1
	4308 JumpIfNotEqual {4542}
	4309 Compare W29, 0
	4310 JumpIfNotEqual {4483}
	4311 Move W9, [X31+116]
	4312 NotImplemented "Instruction CMP not yet implemented."
	4313 NotImplemented "Instruction CSET not yet implemented."
	4314 Or W8, W9, W8
	4315 Move TEMP, X8
	4316 And TEMP, TEMP, 1
	4317 Compare TEMP, 1
	4318 JumpIfNotEqual {4483}
	4319 Move X0, X31
	4320 Call TMP_Settings.get_linebreakingRules
	4321 Compare X0, 0
	4322 JumpIfEqual {7843}
	4323 Move X0, [X0+16]
	4324 Compare X0, 0
	4325 JumpIfEqual {7843}
	4326 Move X8, 0x691000
	4327 Move W1, [X31+4220]
	4328 Move X8, [X8+792]
	4329 Move X2, [X8]
	4330 Call Dictionary`2<Int32, Char>.ContainsKey, X0, X1
	4331 Move W8, [X23]
	4332 Move W9, [X31+136]
	4333 NotImplemented "Instruction CMP not yet implemented."
	4334 Move W8, [X31+76]
	4335 NotImplemented "Instruction CSEL not yet implemented."
	4336 Move [X31+76], W8
	4337 Move X0, X31
	4338 Call TMP_Settings.get_linebreakingRules
	4339 Compare X0, 0
	4340 JumpIfEqual {7843}
	4341 Move X8, [X22]
	4342 Compare X8, 0
	4343 JumpIfEqual {7843}
	4344 Move X8, [X8+56]
	4345 Compare X8, 0
	4346 JumpIfEqual {7843}
	4347 Move W9, [X23]
	4348 Move W10, [X8+24]
	4349 Add W9, W9, 1
	4350 NotImplemented "Instruction CMP not yet implemented."
	4351 Move X0, [X0+24]
	4352 Compare X0, 0
	4353 JumpIfEqual {7843}
	4354 NotImplemented "Instruction SMADDL not yet implemented."
	4355 NotImplemented "Instruction LDRH not yet implemented."
	4356 Move X8, 0x691000
	4357 Move X8, [X8+792]
	4358 Move X2, [X8]
	4359 Call Dictionary`2<Int32, Char>.ContainsKey, X0, X1
	4360 Move W8, [X31+76]
	4361 Move TEMP, X8
	4362 And TEMP, TEMP, 1
	4363 Compare TEMP, 1
	4364 JumpIfEqual {4473}
	4365 Move TEMP, X0
	4366 And TEMP, TEMP, 1
	4367 Compare TEMP, 1
	4368 JumpIfNotEqual {4515}
	4369 Move W8, [X31+104]
	4370 Move TEMP, X8
	4371 And TEMP, TEMP, 1
	4372 Compare TEMP, 1
	4373 JumpIfNotEqual {4541}
	4374 Compare W29, 0
	4375 JumpIfEqual {4391}
	4376 Move X20, 0x691000
	4377 Move X20, [X20+1000]
	4378 Move X0, [X20]
	4379 Move W8, [X0+224]
	4380 Compare W8, 0
	4381 JumpIfNotEqual {4384}
	4382 Call 0x1C17DFC
	4383 Move X0, [X20]
	4384 Move X8, [X0+184]
	4385 Move W2, [X31+4168]
	4386 Move W3, [X19+1172]
	4387 Move X0, X19
	4388 Add X1, X8, 3704
	4389 Move X4, X31
	4390 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4391 Move X29, 0x691000
	4392 Move X29, [X29+1000]
	4393 Move X0, [X29]
	4394 Move W8, [X0+224]
	4395 Compare W8, 0
	4396 JumpIfNotEqual {4399}
	4397 Call 0x1C17DFC
	4398 Move X0, [X29]
	4399 Move X8, [X0+184]
	4400 Move W2, [X31+4168]
	4401 Move W3, [X19+1172]
	4402 Move X0, X19
	4403 Add X1, X8, 152
	4404 Move X4, X31
	4405 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4406 Move [X31+76], W31
	4407 Move X25, X8
	4408 Add X25, X25, 88
	4409 Move X9, [X25]
	4410 Compare X9, 0
	4411 JumpIfEqual {7843}
	4412 Move W10, [X19+1200]
	4413 Move W9, [X9+24]
	4414 Add W26, W10, 1
	4415 NotImplemented "Instruction CMP not yet implemented."
	4416 Move X8, 0x691000
	4417 Move X8, [X8+872]
	4418 Move X0, [X8]
	4419 Move W8, [X0+224]
	4420 Compare W8, 0
	4421 JumpIfNotEqual {4423}
	4422 Call 0x1C17DFC
	4423 Move X8, 0x691000
	4424 Move X8, [X8+856]
	4425 Move W2, 1
	4426 Move X0, X25
	4427 Move W1, W26
	4428 Move X3, [X8]
	4429 Call TMP_TextInfo.Resize, X0, X1, X2
	4430 Move X8, [X22]
	4431 Compare X8, 0
	4432 JumpIfEqual {7843}
	4433 Move X9, [X8+88]
	4434 Compare X9, 0
	4435 JumpIfEqual {7843}
	4436 NotImplemented "Instruction LDRSW not yet implemented."
	4437 Move W11, [X9+24]
	4438 NotImplemented "Instruction CMP not yet implemented."
	4439 Move V0, [X19+1204]
	4440 Move W14, 20
	4441 NotImplemented "Instruction MADD not yet implemented."
	4442 Move V1, [X12+48]
	4443 Move [X12+40], S0
	4444 Move V0, [X19+1220]
	4445 And X13, X10, 0
	4446 NotImplemented "Instruction FCMP not yet implemented."
	4447 NotImplemented "Instruction FCSEL not yet implemented."
	4448 Move [X12+48], S0
	4449 Move W3, [X19+1172]
	4450 Or W12, W3, W13
	4451 Compare W12, 0
	4452 JumpIfEqual {4531}
	4453 Move W15, 20
	4454 Subtract W12, W3, 1
	4455 Move X8, [X8+56]
	4456 Compare X8, 0
	4457 JumpIfEqual {7843}
	4458 Move W14, [X8+24]
	4459 NotImplemented "Instruction CMP not yet implemented."
	4460 NotImplemented "Instruction UMADDL not yet implemented."
	4461 Move W8, [X8+104]
	4462 NotImplemented "Instruction CMP not yet implemented."
	4463 Move W8, [X31+136]
	4464 NotImplemented "Instruction CMP not yet implemented."
	4465 NotImplemented "Instruction MADD not yet implemented."
	4466 Move W9, [X31+136]
	4467 Move W3, W9
	4468 Move [X8+36], W9
	4469 Move TEMP, X0
	4470 And TEMP, TEMP, 1
	4471 Compare TEMP, 1
	4472 JumpIfNotEqual {4515}
	4473 Move W9, [X31+104]
	4474 NotImplemented "Instruction CMP not yet implemented."
	4475 NotImplemented "Instruction CSET not yet implemented."
	4476 NotImplemented "Instruction ORN not yet implemented."
	4477 Move TEMP, X8
	4478 And TEMP, TEMP, 1
	4479 Compare TEMP, 1
	4480 JumpIfEqual {4543}
	4481 Compare W29, 0
	4482 JumpIfEqual {4498}
	4483 Move X20, 0x691000
	4484 Move X20, [X20+1000]
	4485 Move X0, [X20]
	4486 Move W8, [X0+224]
	4487 Compare W8, 0
	4488 JumpIfNotEqual {4491}
	4489 Call 0x1C17DFC
	4490 Move X0, [X20]
	4491 Move X8, [X0+184]
	4492 Move W2, [X31+4168]
	4493 Move W3, [X19+1172]
	4494 Move X0, X19
	4495 Add X1, X8, 3704
	4496 Move X4, X31
	4497 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4498 Move X29, 0x691000
	4499 Move X29, [X29+1000]
	4500 Move X0, [X29]
	4501 Move W8, [X0+224]
	4502 Compare W8, 0
	4503 JumpIfNotEqual {4506}
	4504 Call 0x1C17DFC
	4505 Move X0, [X29]
	4506 Move X8, [X0+184]
	4507 Move W2, [X31+4168]
	4508 Move W3, [X19+1172]
	4509 Move X0, X19
	4510 Add X1, X8, 152
	4511 Move X4, X31
	4512 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4513 Move W8, 1
	4514 Move [X31+104], W8
	4515 Move X29, 0x691000
	4516 Move X29, [X29+1000]
	4517 Move X0, [X29]
	4518 Move W8, [X0+224]
	4519 Compare W8, 0
	4520 JumpIfNotEqual {4523}
	4521 Call 0x1C17DFC
	4522 Move X0, [X29]
	4523 Move X8, [X0+184]
	4524 Move W2, [X31+4168]
	4525 Move W3, [X19+1172]
	4526 Move X0, X19
	4527 Add X1, X8, 152
	4528 Move X4, X31
	4529 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4530 Move [X31+104], W31
	4531 NotImplemented "Instruction MADD not yet implemented."
	4532 Move [X8+32], W3
	4533 Subtract W8, W13, 1
	4534 NotImplemented "Instruction CMP not yet implemented."
	4535 Add X9, X9, 32
	4536 Move W11, 20
	4537 Multiply X10, X10, X11
	4538 NotImplemented "Instruction SMADDL not yet implemented."
	4539 Move [X8+4], W12
	4540 Move [X9], W3
	4541 Move [X31+76], W31
	4542 Move [X31+104], W31
	4543 Move X29, 0x691000
	4544 Move X29, [X29+1000]
	4545 Move X0, [X29]
	4546 Move W8, [X0+224]
	4547 Compare W8, 0
	4548 JumpIfNotEqual {4551}
	4549 Call 0x1C17DFC
	4550 Move X0, [X29]
	4551 Move X8, [X0+184]
	4552 Move W2, [X31+4168]
	4553 Move W3, [X19+1172]
	4554 Move X0, X19
	4555 Add X1, X8, 2816
	4556 Move X4, X31
	4557 Call TMP_Text.SaveWordWrappingState, X0, X1, X2, X3
	4558 Move W8, [X19+1172]
	4559 Add W8, W8, 1
	4560 Move [X19+1172], W8
	4561 Move X29, 0x691000
	4562 Move X29, [X29+1000]
	4563 Move X0, [X29]
	4564 Move W8, [X0+224]
	4565 Compare W8, 0
	4566 JumpIfNotEqual {4569}
	4567 Call 0x1C17DFC
	4568 Move X0, [X29]
	4569 Move X8, [X0+184]
	4570 Add X27, X31, 4000
	4571 Move W9, [X8+5504]
	4572 Compare W9, 0
	4573 JumpIfEqual {4699}
	4574 Move W9, [X0+224]
	4575 Compare W9, 0
	4576 JumpIfNotEqual {4580}
	4577 Call 0x1C17DFC
	4578 Move X8, [X29]
	4579 Move X8, [X8+184]
	4580 Move X9, 0x691000
	4581 Move X9, [X9+904]
	4582 Move X1, [X9]
	4583 Move W9, 0x11F0
	4584 Add X0, X8, X9
	4585 Add X8, X31, 4096
	4586 Add X8, X8, 128
	4587 Call TMP_TextProcessingStack`1<WordWrapState>.Pop, X0
	4588 Add X1, X31, 4096
	4589 Add X0, X31, 2216
	4590 Add X1, X1, 128
	4591 Move W2, 888
	4592 Call 0x3EB2AC0
	4593 Add X1, X31, 2216
	4594 Move X0, X19
	4595 Move X2, X31
	4596 Call TMP_Text.RestoreWordWrappingState, X0, X1
	4597 Move [X31+116], W31
	4598 Move X29, 0x691000
	4599 Move X29, [X29+1000]
	4600 Move X0, [X29]
	4601 Move W8, [X0+224]
	4602 Compare W8, 0
	4603 JumpIfNotEqual {4606}
	4604 Call 0x1C17DFC
	4605 Move X0, [X29]
	4606 Move X8, [X0+184]
	4607 Move X0, X19
	4608 Move X2, X31
	4609 Add X1, X8, 2816
	4610 Call TMP_Text.RestoreWordWrappingState, X0, X1
	4611 Move [X31+116], W31
	4612 Move W9, 1
	4613 Move [X19+828], W9
	4614 Move W1, [X31+4168]
	4615 Move V3, [X19+764]
	4616 Move S7, [X31+84]
	4617 Move S0, [X31+88]
	4618 Move S4, [X31+220]
	4619 Move S2, [X31+224]
	4620 Move V5, [X31+316]
	4621 Move V6, [X31+232]
	4622 Add X2, X31, 4096
	4623 Add X3, X31, 4096
	4624 Move W8, 1
	4625 Add X2, X2, 116
	4626 Add X3, X3, 120
	4627 Move X0, X19
	4628 Move V1, V13
	4629 Move X4, X31
	4630 Move [X31+104], W8
	4631 Call TMP_Text.InsertNewLine, X0, X1, V0, V1, V2, V3, V4, V5, V6, V7, X2, X3
	4632 Move X8, [X31+128]
	4633 NotImplemented "Instruction MOVI not yet implemented."
	4634 Move [X19+1232], W31
	4635 Move [X19+1240], W31
	4636 Move [X8+520], D0
	4637 Move W8, [X19+1200]
	4638 Move [X31+116], W31
	4639 Add W8, W8, 1
	4640 Move [X19+1200], W8
	4641 Move W8, 1
	4642 Move [X31+100], W8
	4643 Move X29, 0x691000
	4644 Move X29, [X29+1000]
	4645 Add X27, X31, 4000
	4646 Move X8, 0x62C000
	4647 Move X8, [X8+1432]
	4648 Move X29, 0x691000
	4649 Move X25, [X19+744]
	4650 Move X0, [X8]
	4651 Move W8, [X0+224]
	4652 Move X29, [X29+1000]
	4653 Compare W8, 0
	4654 JumpIfNotEqual {4656}
	4655 Call 0x1C17DFC
	4656 Move X0, X25
	4657 Move X1, X31
	4658 Move X2, X31
	4659 Call Object.op_Inequality, X0, X1
	4660 Add X27, X31, 4000
	4661 Move TEMP, X0
	4662 And TEMP, TEMP, 1
	4663 Compare TEMP, 1
	4664 JumpIfNotEqual {4698}
	4665 Move X8, [X19]
	4666 Move X25, [X19+744]
	4667 Move X0, X19
	4668 Move X9, [X8+1352]
	4669 Move X1, [X8+1360]
	4670 NotImplemented "Instruction BLR not yet implemented."
	4671 Compare X25, 0
	4672 JumpIfEqual {7843}
	4673 Move X8, [X25]
	4674 Move X1, X0
	4675 Move X0, X25
	4676 Move X9, [X8+1368]
	4677 Move X2, [X8+1376]
	4678 NotImplemented "Instruction BLR not yet implemented."
	4679 Move X0, [X19+744]
	4680 Compare X0, 0
	4681 JumpIfEqual {7843}
	4682 Move W8, [X19+1024]
	4683 Move X2, X31
	4684 Move [X0+1024], W8
	4685 Move W1, [X19+1172]
	4686 Call TMP_Text.set_firstVisibleCharacter, X0, X1
	4687 Move X0, [X19+744]
	4688 Compare X0, 0
	4689 JumpIfEqual {7843}
	4690 Move X8, [X0]
	4691 Move W1, W31
	4692 Move W2, W31
	4693 Move X9, [X8+2008]
	4694 Move X3, [X8+2016]
	4695 NotImplemented "Instruction BLR not yet implemented."
	4696 Move W8, 1
	4697 Move [X19+760], W8
	4698 Move [X31+116], W31
	4699 Move [X31+116], W31
	4700 Move X8, -50176000
	4701 Move V0, [X8+2912]
	4702 Move TEMP, 0
	4703 Not TEMP
	4704 Move W8, TEMP
	4705 Move [X31+4168], W8
	4706 Move [X31+4200], D0
	4707 Move [X23], X31
	4708 Move W8, [X19+568]
	4709 Compare W8, 0
	4710 JumpIfEqual {4753}
	4711 Move V2, [X19+572]
	4712 Move V0, [X19+576]
	4713 Move X8, -50188288
	4714 Move V1, [X8+208]
	4715 Subtract S0, S2, S0
	4716 NotImplemented "Instruction FCMP not yet implemented."
	4717 Move V1, [X19+484]
	4718 Move V0, [X19+596]
	4719 NotImplemented "Instruction FCMP not yet implemented."
	4720 Move W8, [X19+580]
	4721 Move W9, [X19+584]
	4722 NotImplemented "Instruction CMP not yet implemented."
	4723 Move V3, [X19+720]
	4724 Move V4, [X19+724]
	4725 Move W8, 0x42C80000
	4726 Move S5, W8
	4727 NotImplemented "Instruction FDIV not yet implemented."
	4728 NotImplemented "Instruction FCMP not yet implemented."
	4729 Move [X19+724], W31
	4730 Move X8, -50188288
	4731 Move V3, [X8+512]
	4732 Subtract S2, S2, S1
	4733 Move S4, 0.5
	4734 Multiply S2, S2, S4
	4735 NotImplemented "Instruction FMAXNM not yet implemented."
	4736 Move [X19+576], S1
	4737 Move S3, 20
	4738 Add S1, S1, S2
	4739 Multiply S1, S1, S3
	4740 Move X8, -50188288
	4741 Add S1, S1, S4
	4742 Move V2, [X8+1056]
	4743 NotImplemented "Instruction FCVTZS not yet implemented."
	4744 NotImplemented "Instruction SCVTF not yet implemented."
	4745 Move W8, 0x7F800000
	4746 NotImplemented "Instruction FDIV not yet implemented."
	4747 Move S4, W8
	4748 NotImplemented "Instruction FCMP not yet implemented."
	4749 NotImplemented "Instruction FCSEL not yet implemented."
	4750 NotImplemented "Instruction FCMP not yet implemented."
	4751 NotImplemented "Instruction FCSEL not yet implemented."
	4752 Move [X19+484], S0
	4753 Move W8, [X19+580]
	4754 Move W9, [X19+584]
	4755 Move W24, [X31+80]
	4756 Move W10, 1
	4757 Move [X19+588], W10
	4758 NotImplemented "Instruction CMP not yet implemented."
	4759 Move X0, [X31+56]
	4760 Move X1, X31
	4761 Call Int32.ToString, X0
	4762 Move X21, X0
	4763 Move X0, [X31+64]
	4764 Move X1, X31
	4765 Call Single.ToString, X0
	4766 Move X8, 0x691000
	4767 Move X8, [X8+1056]
	4768 Move X9, 0x691000
	4769 Move X9, [X9+1032]
	4770 Move X3, X0
	4771 Move X8, [X8]
	4772 Move X1, X21
	4773 Move X2, [X9]
	4774 Move X4, X31
	4775 Move X0, X8
	4776 Call String.Concat, X0, X1, X2, X3
	4777 Move X8, 0x62C000
	4778 Move X8, [X8+2600]
	4779 Move X21, X0
	4780 Move X8, [X8]
	4781 Move W9, [X8+224]
	4782 Compare W9, 0
	4783 JumpIfNotEqual {4786}
	4784 Move X0, X8
	4785 Call 0x1C17DFC
	4786 Move X0, X21
	4787 Move X1, X31
	4788 Call Debug.Log, X0
	4789 Move W8, [X23]
	4790 Compare W8, 0
	4791 JumpIfEqual {4795}
	4792 NotImplemented "Instruction CMP not yet implemented."
	4793 Move W8, [X31+4220]
	4794 NotImplemented "Instruction CMP not yet implemented."
	4795 Move X8, [X19]
	4796 Move X0, X19
	4797 Move X9, [X8+2376]
	4798 Move X1, [X8+2384]
	4799 NotImplemented "Instruction BLR not yet implemented."
	4800 Move X8, 0x691000
	4801 Move X8, [X8+1008]
	4802 Move X0, [X8]
	4803 Move W8, [X0+224]
	4804 Compare W8, 0
	4805 JumpIfNotEqual {4807}
	4806 Call 0x1C17DFC
	4807 Move X0, X19
	4808 Move X1, X31
	4809 Call TMPro_EventManager.ON_TEXT_CHANGED, X0
	4810 Move X0, [X29]
	4811 Move W8, [X0+224]
	4812 Compare W8, 0
	4813 JumpIfNotEqual {4816}
	4814 Call 0x1C17DFC
	4815 Move X0, [X29]
	4816 Move X8, [X0+184]
	4817 Move X8, [X8]
	4818 Compare X8, 0
	4819 JumpIfEqual {7843}
	4820 NotImplemented "Instruction LDRSW not yet implemented."
	4821 Move W10, [X8+24]
	4822 NotImplemented "Instruction CMP not yet implemented."
	4823 Move W10, 56
	4824 NotImplemented "Instruction MADD not yet implemented."
	4825 Move W8, [X8+84]
	4826 Move W8, W8
	4827 ShiftRight W8, 30
	4828 And W8, W8, 0x1FFFFFFF
	4829 Move [X31+4196], W8
	4830 Move X8, [X22]
	4831 Compare X8, 0
	4832 JumpIfEqual {7843}
	4833 Move X20, [X8+96]
	4834 Compare X20, 0
	4835 JumpIfEqual {7843}
	4836 Move X26, 0x691000
	4837 Move X26, [X26+840]
	4838 Move X0, [X26]
	4839 Move W8, [X0+224]
	4840 Compare W8, 0
	4841 JumpIfNotEqual {4843}
	4842 Call 0x1C17DFC
	4843 Move W8, [X20+24]
	4844 Compare W8, 0
	4845 JumpIfEqual {7905}
	4846 Add X0, X20, 32
	4847 Move W1, W31
	4848 Move X2, X31
	4849 Call TMP_MeshInfo.Clear, X0, X1
	4850 Move X8, 0x911000
	4851 Move W8, [X8+1923]
	4852 Compare W8, 0
	4853 JumpIfNotEqual {4860}
	4854 Move X0, 0x62C000
	4855 Move X0, [X0+1440]
	4856 Call 0x1C17CF4
	4857 Move W8, 1
	4858 Move X9, 0x911000
	4859 Move [X9+1923], W8
	4860 Move X8, 0x62C000
	4861 Move X8, [X8+1440]
	4862 Move W9, [X19+624]
	4863 Move X20, 0x691000
	4864 Move X8, [X8]
	4865 NotImplemented "Instruction CMP not yet implemented."
	4866 Move X8, [X8+184]
	4867 Move V0, [X8]
	4868 Move [X31+220], S0
	4869 NotImplemented "Instruction LDUR not yet implemented."
	4870 Move X8, [X19+1816]
	4871 Move [X31+208], D0
	4872 Move X20, [X20+848]
	4873 NotImplemented "Instruction CMP not yet implemented."
	4874 NotImplemented "Instruction CMP not yet implemented."
	4875 Move V0, [X31+220]
	4876 NotImplemented "Instruction CMP not yet implemented."
	4877 Move [X31+160], S0
	4878 Move V0, [X31+208]
	4879 Move [X31+152], D0
	4880 Compare X8, 0
	4881 JumpIfEqual {7843}
	4882 Move W9, [X8+24]
	4883 NotImplemented "Instruction CMP not yet implemented."
	4884 Compare W9, 0
	4885 JumpIfEqual {7905}
	4886 NotImplemented "Instruction LDUR not yet implemented."
	4887 Move V3, [X8+48]
	4888 Move V0, [X8+32]
	4889 Move V1, [X8+44]
	4890 Move V4, [X19+1212]
	4891 Add V2, V2, V3
	4892 NotImplemented "Instruction MOVI not yet implemented."
	4893 Move V5, [X31+36]
	4894 Move V6, [X31+48]
	4895 NotImplemented "Instruction INVALID not yet implemented."
	4896 Move V3, [X31+40]
	4897 Add S0, S0, S1
	4898 Move S1, 0.5
	4899 Subtract S4, S4, S5
	4900 Move S5, W31
	4901 Add S6, S6, S5
	4902 Multiply S0, S0, S1
	4903 Subtract S3, S4, S3
	4904 Multiply S1, S3, S1
	4905 Add S0, S6, S0
	4906 Move [X31+160], S0
	4907 Subtract S0, S5, S1
	4908 NotImplemented "Instruction MOVI not yet implemented."
	4909 Move V1.S[0], V0.S[0]
	4910 Add V0, V2, V1
	4911 NotImplemented "Instruction CMP not yet implemented."
	4912 NotImplemented "Instruction CMP not yet implemented."
	4913 Move V0, [X31+220]
	4914 NotImplemented "Instruction CMP not yet implemented."
	4915 Move [X31+160], S0
	4916 Move V0, [X31+208]
	4917 Move [X31+152], D0
	4918 Compare X8, 0
	4919 JumpIfEqual {7843}
	4920 Move W9, [X8+24]
	4921 Compare W9, 0
	4922 JumpIfEqual {7905}
	4923 Move W9, [X19+736]
	4924 Move V1, [X8+32]
	4925 NotImplemented "Instruction LDUR not yet implemented."
	4926 NotImplemented "Instruction CMP not yet implemented."
	4927 Move X8, [X22]
	4928 Compare X8, 0
	4929 JumpIfEqual {7843}
	4930 Move X8, [X8+88]
	4931 Compare X8, 0
	4932 JumpIfEqual {7843}
	4933 Move W9, [X8+24]
	4934 NotImplemented "Instruction CMP not yet implemented."
	4935 Move W9, 20
	4936 NotImplemented "Instruction SMADDL not yet implemented."
	4937 Move V2, [X8+48]
	4938 Compare X8, 0
	4939 JumpIfEqual {7843}
	4940 Move W9, [X8+24]
	4941 NotImplemented "Instruction CMP not yet implemented."
	4942 Compare W9, 0
	4943 JumpIfEqual {7905}
	4944 Move V1, [X8+32]
	4945 Move V2, [X8+44]
	4946 NotImplemented "Instruction LDUR not yet implemented."
	4947 Move V3, [X8+48]
	4948 Move V16, [X31+48]
	4949 Move S4, 0.5
	4950 Move S6, W31
	4951 Add S1, S1, S2
	4952 NotImplemented "Instruction MOVI not yet implemented."
	4953 Add S6, S16, S6
	4954 Add V0, V0, V3
	4955 Multiply S1, S1, S4
	4956 NotImplemented "Instruction MOVI not yet implemented."
	4957 NotImplemented "Instruction INVALID not yet implemented."
	4958 Add S1, S6, S1
	4959 Move [X31+160], S1
	4960 Add V0, V0, V7
	4961 Compare X8, 0
	4962 JumpIfEqual {7843}
	4963 Move W9, [X8+24]
	4964 NotImplemented "Instruction CMP not yet implemented."
	4965 Compare W9, 0
	4966 JumpIfEqual {7905}
	4967 NotImplemented "Instruction LDUR not yet implemented."
	4968 Move V3, [X8+48]
	4969 Move V1, [X8+32]
	4970 Move V2, [X8+44]
	4971 Move V5, [X19+1256]
	4972 Move V6, [X31+36]
	4973 Add V0, V0, V3
	4974 Move V3, [X19+1248]
	4975 Add S1, S1, S2
	4976 NotImplemented "Instruction MOVI not yet implemented."
	4977 Add S5, S6, S5
	4978 Move V7, [X31+48]
	4979 NotImplemented "Instruction INVALID not yet implemented."
	4980 Add S2, S5, S3
	4981 Move V3, [X31+40]
	4982 Move S4, 0.5
	4983 Move S6, W31
	4984 Add S7, S7, S6
	4985 Multiply S1, S1, S4
	4986 Subtract S2, S2, S3
	4987 Add S1, S7, S1
	4988 Move [X31+160], S1
	4989 Multiply S1, S2, S4
	4990 Subtract S1, S6, S1
	4991 Compare X8, 0
	4992 JumpIfEqual {7843}
	4993 Move W9, [X8+24]
	4994 NotImplemented "Instruction CMP not yet implemented."
	4995 Move W9, [X19+736]
	4996 Move V1, [X8+44]
	4997 Move V0, [X8+48]
	4998 NotImplemented "Instruction CMP not yet implemented."
	4999 Move X8, [X22]
	5000 Compare X8, 0
	5001 JumpIfEqual {7843}
	5002 Move X8, [X8+88]
	5003 Compare X8, 0
	5004 JumpIfEqual {7843}
	5005 Move W9, [X8+24]
	5006 NotImplemented "Instruction CMP not yet implemented."
	5007 Move W9, 20
	5008 NotImplemented "Instruction SMADDL not yet implemented."
	5009 Move V2, [X8+40]
	5010 Compare X8, 0
	5011 JumpIfEqual {7843}
	5012 Move W9, [X8+24]
	5013 NotImplemented "Instruction CMP not yet implemented."
	5014 Compare W9, 0
	5015 JumpIfEqual {7905}
	5016 NotImplemented "Instruction LDUR not yet implemented."
	5017 Move V1, [X8+32]
	5018 Move V2, [X8+44]
	5019 Move V3, [X8+48]
	5020 Move W9, [X19+736]
	5021 Move S4, 0.5
	5022 NotImplemented "Instruction MOVI not yet implemented."
	5023 Add S1, S1, S2
	5024 Add V0, V0, V3
	5025 NotImplemented "Instruction CMP not yet implemented."
	5026 Multiply S1, S1, S4
	5027 NotImplemented "Instruction INVALID not yet implemented."
	5028 Move X8, [X22]
	5029 Compare X8, 0
	5030 JumpIfEqual {7843}
	5031 Move X8, [X8+88]
	5032 Compare X8, 0
	5033 JumpIfEqual {7843}
	5034 Move W9, [X8+24]
	5035 NotImplemented "Instruction CMP not yet implemented."
	5036 Move V3, [X31+48]
	5037 Move W9, 20
	5038 Move S2, W31
	5039 NotImplemented "Instruction SMADDL not yet implemented."
	5040 Add S3, S3, S2
	5041 Move V4, [X8+40]
	5042 Add S1, S3, S1
	5043 Move V3, [X31+36]
	5044 Move V5, [X8+48]
	5045 Move [X31+160], S1
	5046 Move S1, -0.5
	5047 Add S3, S3, S4
	5048 Move V4, [X31+40]
	5049 Add S3, S3, S5
	5050 Subtract S3, S3, S4
	5051 Multiply S1, S3, S1
	5052 Add S1, S1, S2
	5053 Move V0, [X19+1192]
	5054 Move V1, [X31+32]
	5055 NotImplemented "Instruction SCVTF not yet implemented."
	5056 Subtract S1, S1, S4
	5057 NotImplemented "Instruction FDIV not yet implemented."
	5058 Move V1, [X31+88]
	5059 NotImplemented "Instruction FDIV not yet implemented."
	5060 Add S0, S6, S0
	5061 NotImplemented "Instruction FCMP not yet implemented."
	5062 NotImplemented "Instruction FCSEL not yet implemented."
	5063 Move [X19+700], S0
	5064 Move V0, [X19+576]
	5065 Move X8, -50188288
	5066 Move V2, [X8+512]
	5067 Move S3, 0.5
	5068 Subtract S0, S4, S0
	5069 Multiply S0, S0, S3
	5070 NotImplemented "Instruction FMAXNM not yet implemented."
	5071 Move S2, 20
	5072 Subtract S0, S4, S0
	5073 Multiply S0, S0, S2
	5074 Move X8, -50188288
	5075 Add S0, S0, S3
	5076 Move [X19+572], S4
	5077 Move V4, [X8+1056]
	5078 NotImplemented "Instruction FCVTZS not yet implemented."
	5079 NotImplemented "Instruction SCVTF not yet implemented."
	5080 Move W8, 0x7F800000
	5081 NotImplemented "Instruction FDIV not yet implemented."
	5082 Move S3, W8
	5083 NotImplemented "Instruction FCMP not yet implemented."
	5084 NotImplemented "Instruction FCSEL not yet implemented."
	5085 NotImplemented "Instruction FCMP not yet implemented."
	5086 NotImplemented "Instruction FCSEL not yet implemented."
	5087 Move V2, [X31+4216]
	5088 Move V4, [X31+48]
	5089 Move S3, W31
	5090 Add S4, S4, S3
	5091 Add S1, S4, S1
	5092 Move [X31+160], S1
	5093 Subtract S1, S3, S2
	5094 Move V2, [X31+40]
	5095 Add S1, S2, S1
	5096 Move V2, [X19+1208]
	5097 Move V4, [X31+48]
	5098 Move S3, W31
	5099 Add S4, S4, S3
	5100 Add S1, S4, S1
	5101 Move [X31+160], S1
	5102 Subtract S1, S3, S2
	5103 Move V2, [X31+36]
	5104 Subtract S1, S1, S2
	5105 Move V6, [X31+48]
	5106 Move S4, W31
	5107 Move V2, [X19+1208]
	5108 Move V3, [X31+4216]
	5109 Add S6, S6, S4
	5110 Add S1, S6, S1
	5111 Move [X31+160], S1
	5112 Move V1, [X31+36]
	5113 Move S5, -0.5
	5114 Add S1, S1, S2
	5115 Move V2, [X31+40]
	5116 Add S1, S1, S3
	5117 Subtract S1, S1, S2
	5118 Multiply S1, S1, S5
	5119 Add S1, S1, S4
	5120 NotImplemented "Instruction MOVI not yet implemented."
	5121 Move V2.S[0], V1.S[0]
	5122 Add V0, V0, V2
	5123 Move [X31+152], D0
	5124 Move X0, [X19+1832]
	5125 Compare X0, 0
	5126 JumpIfEqual {7843}
	5127 Move X1, X31
	5128 Call Canvas.get_worldCamera, X0
	5129 Move X8, 0x62C000
	5130 Move X8, [X8+1432]
	5131 Move X21, X0
	5132 Move X8, [X8]
	5133 Move W9, [X8+224]
	5134 Compare W9, 0
	5135 JumpIfNotEqual {5138}
	5136 Move X0, X8
	5137 Call 0x1C17DFC
	5138 Move X0, X21
	5139 Move X1, X31
	5140 Move X2, X31
	5141 Call Object.op_Equality, X0, X1
	5142 Move W24, W0
	5143 Move X0, X19
	5144 Move X1, X31
	5145 Call TMP_Text.get_transform, X0
	5146 Compare X0, 0
	5147 JumpIfEqual {7843}
	5148 Move X1, X31
	5149 Call Transform.get_lossyScale, X0
	5150 Move X0, [X19+1832]
	5151 Move [X19+1808], S1
	5152 Compare X0, 0
	5153 JumpIfEqual {7843}
	5154 Move X1, X31
	5155 Move V8, V1
	5156 Call Canvas.get_renderMode, X0
	5157 Move X8, [X19+1832]
	5158 Move [X31+76], W0
	5159 Compare X8, 0
	5160 JumpIfEqual {7843}
	5161 Move X0, X8
	5162 Move X1, X31
	5163 Call Canvas.get_scaleFactor, X0
	5164 Move V9, V0
	5165 Move S0, 1
	5166 Move S1, 1
	5167 Move S2, 1
	5168 Move S3, 1
	5169 Move X0, X31
	5170 Call 0x1E44664
	5171 Move [X31+104], X0
	5172 Move S0, 1
	5173 Move S1, 1
	5174 Move S2, 1
	5175 Move S3, 1
	5176 Move X0, X31
	5177 Call 0x1E44664
	5178 Move X8, [X20]
	5179 Move [X31+144], X0
	5180 Move W9, [X8+224]
	5181 Compare W9, 0
	5182 JumpIfNotEqual {5185}
	5183 Move X0, X8
	5184 Call 0x1C17DFC
	5185 Move X21, 0x91B000
	5186 Move W8, [X21+1190]
	5187 Compare W8, 0
	5188 JumpIfNotEqual {5194}
	5189 Move X0, 0x691000
	5190 Move X0, [X0+848]
	5191 Call 0x1C17CF4
	5192 Move W8, 1
	5193 Move [X21+1190], W8
	5194 Move X0, [X20]
	5195 Move W8, [X0+224]
	5196 Compare W8, 0
	5197 JumpIfNotEqual {5200}
	5198 Call 0x1C17DFC
	5199 Move X0, [X20]
	5200 Move X8, [X0+184]
	5201 Add X0, X31, 4096
	5202 Add X0, X0, 80
	5203 Move TEMP, 0xBFFF0000
	5204 Not TEMP
	5205 Move W1, TEMP
	5206 Move S0, [X8]
	5207 Move S1, [X8+4]
	5208 Move S2, [X8+8]
	5209 Move S3, [X8+12]
	5210 Move X2, X31
	5211 Call HighlightState..ctor, X0, X1, X2
	5212 Move X0, [X29]
	5213 Move W8, [X0+224]
	5214 Compare W8, 0
	5215 JumpIfNotEqual {5217}
	5216 Call 0x1C17DFC
	5217 Move X9, [X22]
	5218 Compare X9, 0
	5219 JumpIfEqual {7843}
	5220 Move W8, [X23]
	5221 NotImplemented "Instruction CMP not yet implemented."
	5222 Move X21, [X9+56]
	5223 NotImplemented "Instruction FABS not yet implemented."
	5224 And W31, W24, 1
	5225 Move S1, 1
	5226 NotImplemented "Instruction FCSEL not yet implemented."
	5227 Move [X31+40], S1
	5228 Compare X21, 0
	5229 JumpIfEqual {7843}
	5230 Move X8, [X29]
	5231 Move S2, [X31+192]
	5232 Move S1, [X31+196]
	5233 Move [X31+64], S0
	5234 NotImplemented "Instruction FDIV not yet implemented."
	5235 Move X8, [X8+184]
	5236 Move [X31+36], S0
	5237 Move S0, W31
	5238 Move W20, W31
	5239 Move V3, [X8+5544]
	5240 Move W28, 736
	5241 Move W12, 376
	5242 Move W26, 92
	5243 Move [X31+224], S0
	5244 Move [X31+232], S3
	5245 Move S0, W31
	5246 Move [X31+96], S2
	5247 Move [X31+104], S0
	5248 Move S0, W31
	5249 Move [X31+52], S0
	5250 Move S0, W31
	5251 Move [X31+136], S2
	5252 Move [X31+144], S0
	5253 Move S0, W31
	5254 Move [X31+48], S0
	5255 Move V0, [X31+172]
	5256 Move W10, 1
	5257 Move S14, W31
	5258 Move S15, W31
	5259 Move [X31+248], X31
	5260 Move [X31+256], X31
	5261 Move [X31+244], W31
	5262 Move [X31+188], W31
	5263 Move [X31+32], W31
	5264 Move [X31+316], W31
	5265 Move [X31+84], W31
	5266 Move [X31+176], S2
	5267 Move [X31+184], S1
	5268 Move [X31+88], S1
	5269 Move [X31+96], S0
	5270 Move [X31+116], S0
	5271 Move [X31+124], S1
	5272 Move [X31+56], X23
	5273 Move [X31+320], X21
	5274 Move W8, [X21+24]
	5275 Subtract W25, W10, 1
	5276 NotImplemented "Instruction CMP not yet implemented."
	5277 Move X9, [X22]
	5278 Compare X9, 0
	5279 JumpIfEqual {7843}
	5280 Move X9, [X9+80]
	5281 Compare X9, 0
	5282 JumpIfEqual {7843}
	5283 Move X24, W25
	5284 Move [X31+348], W10
	5285 NotImplemented "Instruction NOP not yet implemented."
	5286 NotImplemented "Instruction MADD not yet implemented."
	5287 Move W13, [X10+100]
	5288 Move W11, [X9+24]
	5289 NotImplemented "Instruction CMP not yet implemented."
	5290 Move X11, [X10+56]
	5291 NotImplemented "Instruction LDRH not yet implemented."
	5292 Move [X31+360], X13
	5293 Move [X31+264], X28
	5294 Move [X31+352], W10
	5295 Move X10, W13
	5296 NotImplemented "Instruction MADD not yet implemented."
	5297 Move [X31+232], X10
	5298 NotImplemented "Instruction LDRSW not yet implemented."
	5299 Move W29, [X9+104]
	5300 Move W22, [X9+32]
	5301 Move W27, [X9+40]
	5302 Move W21, [X9+44]
	5303 Move [X31+200], X10
	5304 NotImplemented "Instruction LDRSW not yet implemented."
	5305 Move V4, [X9+76]
	5306 Move S3, [X9+84]
	5307 Move S10, [X9+88]
	5308 Move S11, [X9+92]
	5309 Move S8, [X9+96]
	5310 Move S9, [X9+108]
	5311 Move S13, [X9+112]
	5312 Move S12, [X9+116]
	5313 Move S5, [X9+120]
	5314 NotImplemented "Instruction CMP not yet implemented."
	5315 Move [X31+328], X10
	5316 Move [X31+336], X11
	5317 NotImplemented "Instruction CMP not yet implemented."
	5318 NotImplemented "Instruction CMP not yet implemented."
	5319 Move S2, 0.5
	5320 Multiply S0, S11, S2
	5321 Add S1, S9, S12
	5322 Add S0, S8, S0
	5323 Multiply S1, S1, S2
	5324 Subtract W9, W29, 1
	5325 NotImplemented "Instruction CMP not yet implemented."
	5326 Move X13, -49483776
	5327 Add X13, X13, 2976
	5328 NotImplemented "Instruction ADR not yet implemented."
	5329 Move W11, [X13]
	5330 Add X10, X10, X11
	5331 CallNoReturn X10
	5332 Move W8, [X19+240]
	5333 Compare W8, 0
	5334 JumpIfEqual {5380}
	5335 Move S0, W31
	5336 Subtract S0, S0, S10
	5337 Move W10, [X31+352]
	5338 NotImplemented "Instruction CMP not yet implemented."
	5339 NotImplemented "Instruction CMP not yet implemented."
	5340 Move W9, 0x200B
	5341 NotImplemented "Instruction CMP not yet implemented."
	5342 Move W9, 0x2060
	5343 NotImplemented "Instruction CMP not yet implemented."
	5344 NotImplemented "Instruction CMP not yet implemented."
	5345 NotImplemented "Instruction CMP not yet implemented."
	5346 Move X9, [X31+200]
	5347 Move [X31+44], S5
	5348 Move [X31+272], S4
	5349 Move [X31+288], S3
	5350 NotImplemented "Instruction CMP not yet implemented."
	5351 Move X8, 0x62D000
	5352 Move X8, [X8+368]
	5353 Move X0, [X8]
	5354 Move X8, [X31+320]
	5355 NotImplemented "Instruction NOP not yet implemented."
	5356 NotImplemented "Instruction MADD not yet implemented."
	5357 Move W9, [X0+224]
	5358 NotImplemented "Instruction LDRH not yet implemented."
	5359 Compare W9, 0
	5360 JumpIfNotEqual {5362}
	5361 Call 0x1C17DFC
	5362 Move W0, W28
	5363 Move X1, X31
	5364 Call Char.IsControl, X0
	5365 Move TEMP, X0
	5366 And TEMP, TEMP, 1
	5367 Compare TEMP, 1
	5368 JumpIfNotEqual {5382}
	5369 Move W8, W31
	5370 Move S1, 0.5
	5371 Multiply S0, S11, S1
	5372 Multiply S1, S10, S1
	5373 Add S0, S8, S0
	5374 Subtract S0, S0, S1
	5375 Move W8, [X19+240]
	5376 Add S0, S11, S8
	5377 Subtract S1, S0, S10
	5378 NotImplemented "Instruction CMP not yet implemented."
	5379 NotImplemented "Instruction FCSEL not yet implemented."
	5380 Move S0, W31
	5381 Add S0, S8, S0
	5382 Move W8, [X19+1192]
	5383 Move X9, [X31+360]
	5384 NotImplemented "Instruction CMP not yet implemented."
	5385 NotImplemented "Instruction CSET not yet implemented."
	5386 Move X28, [X31+264]
	5387 Move V3, [X31+288]
	5388 Move V4, [X31+272]
	5389 Move V5, [X31+44]
	5390 NotImplemented "Instruction FCMP not yet implemented."
	5391 Move W12, 376
	5392 Or W8, W8, W29
	5393 Compare W8, 0
	5394 JumpIfNotEqual {5541}
	5395 Move W8, [X19+240]
	5396 Add S0, S11, S8
	5397 NotImplemented "Instruction CMP not yet implemented."
	5398 NotImplemented "Instruction FCSEL not yet implemented."
	5399 Move [X31+220], S0
	5400 NotImplemented "Instruction MOVI not yet implemented."
	5401 Move [X31+208], D0
	5402 Move X21, [X31+320]
	5403 Move X22, [X21+24]
	5404 NotImplemented "Instruction CMP not yet implemented."
	5405 Move V0, [X31+220]
	5406 Move V1, [X31+160]
	5407 NotImplemented "Instruction NOP not yet implemented."
	5408 NotImplemented "Instruction MADD not yet implemented."
	5409 Move X29, 0x690000
	5410 Move W8, [X27+404]
	5411 Add S2, S1, S0
	5412 Move V0, [X31+208]
	5413 Move V1, [X31+152]
	5414 Move X29, [X29+1000]
	5415 Add V1, V1, V0
	5416 Move [X31+272], V2
	5417 Move [X31+280], V1
	5418 Compare W8, 0
	5419 JumpIfEqual {5450}
	5420 NotImplemented "Instruction MADD not yet implemented."
	5421 Move W28, [X8+44]
	5422 Compare W28, 0
	5423 JumpIfNotEqual {5805}
	5424 Move X8, [X31+360]
	5425 Move V0, [X19+788]
	5426 Move V14, V5
	5427 Move V10, V4
	5428 NotImplemented "Instruction SCVTF not yet implemented."
	5429 Multiply S0, S0, S1
	5430 Move S1, 1
	5431 Move V8, V3
	5432 Call 0x3EB2BA0
	5433 Move W8, [X19+780]
	5434 NotImplemented "Instruction CMP not yet implemented."
	5435 Move X11, -49483776
	5436 Add X11, X11, 2984
	5437 NotImplemented "Instruction ADR not yet implemented."
	5438 Move W10, [X11]
	5439 Add X9, X9, X10
	5440 Move V11, V0
	5441 Move W11, 376
	5442 Move V5, V10
	5443 CallNoReturn X9
	5444 NotImplemented "Instruction MADD not yet implemented."
	5445 Move W9, 0x3F800000
	5446 Move [X8+132], W31
	5447 Move [X8+172], W31
	5448 Move [X8+212], W9
	5449 Move S0, 1
	5450 Move X22, [X31+368]
	5451 Move X27, [X31+336]
	5452 Move W11, 376
	5453 Move V5, V10
	5454 Move W8, [X19+628]
	5455 NotImplemented "Instruction NOP not yet implemented."
	5456 NotImplemented "Instruction MADD not yet implemented."
	5457 Move V0, [X9+112]
	5458 NotImplemented "Instruction CMP not yet implemented."
	5459 Move X9, [X31+128]
	5460 Move V3, [X31+220]
	5461 NotImplemented "Instruction NOP not yet implemented."
	5462 NotImplemented "Instruction MADD not yet implemented."
	5463 Move V1, [X9+560]
	5464 Move V2, [X9+568]
	5465 Add S0, S3, S0
	5466 Subtract S0, S0, S1
	5467 Subtract S1, S2, S1
	5468 Move X9, [X31+128]
	5469 NotImplemented "Instruction NOP not yet implemented."
	5470 NotImplemented "Instruction MADD not yet implemented."
	5471 Move V2, [X8+112]
	5472 Move V3, [X31+220]
	5473 Move V0, [X9+560]
	5474 Move V1, [X9+568]
	5475 Add S2, S3, S2
	5476 Subtract S1, S1, S0
	5477 Subtract S0, S2, S0
	5478 NotImplemented "Instruction FDIV not yet implemented."
	5479 Add S0, S11, S0
	5480 Move V2, [X8+152]
	5481 Move [X8+132], S0
	5482 Move V0, [X9+560]
	5483 Move V1, [X9+568]
	5484 Add S2, S3, S2
	5485 Subtract S2, S2, S0
	5486 Subtract S0, S1, S0
	5487 NotImplemented "Instruction FDIV not yet implemented."
	5488 Add S0, S11, S0
	5489 Move V1, [X8+192]
	5490 Move [X8+172], S0
	5491 Move V0, [X9+560]
	5492 Move V2, [X9+568]
	5493 Add S1, S3, S1
	5494 Subtract S1, S1, S0
	5495 Subtract S0, S2, S0
	5496 NotImplemented "Instruction FDIV not yet implemented."
	5497 Add S0, S11, S0
	5498 Move V2, [X8+232]
	5499 Move [X8+212], S0
	5500 Move V0, [X9+560]
	5501 Move V1, [X9+568]
	5502 Add S2, S3, S2
	5503 Subtract S2, S2, S0
	5504 Subtract S0, S1, S0
	5505 NotImplemented "Instruction FDIV not yet implemented."
	5506 Add S0, S11, S0
	5507 Move W8, [X19+784]
	5508 NotImplemented "Instruction CMP not yet implemented."
	5509 Move X12, -49483776
	5510 Add X12, X12, 2988
	5511 NotImplemented "Instruction ADR not yet implemented."
	5512 Move W10, [X12]
	5513 Add X9, X9, X10
	5514 CallNoReturn X9
	5515 NotImplemented "Instruction MADD not yet implemented."
	5516 Move W9, 0x3F800000
	5517 Move [X8+136], W31
	5518 Move [X8+176], W9
	5519 Move [X8+216], W31
	5520 Move [X8+256], W9
	5521 NotImplemented "Instruction MADD not yet implemented."
	5522 Move V2, [X8+152]
	5523 Move V3, [X8+192]
	5524 Subtract S0, S0, S9
	5525 Subtract S1, S12, S9
	5526 Move V4, [X8+232]
	5527 NotImplemented "Instruction FDIV not yet implemented."
	5528 Add S0, S11, S0
	5529 Move [X8+132], S0
	5530 Subtract S0, S2, S9
	5531 Subtract S2, S3, S9
	5532 Subtract S3, S4, S9
	5533 NotImplemented "Instruction FDIV not yet implemented."
	5534 NotImplemented "Instruction FDIV not yet implemented."
	5535 NotImplemented "Instruction FDIV not yet implemented."
	5536 Add S0, S11, S0
	5537 Add S2, S11, S2
	5538 Move [X8+172], S0
	5539 Move [X8+212], S2
	5540 Add S0, S11, S1
	5541 Move W8, [X31+348]
	5542 NotImplemented "Instruction CMP not yet implemented."
	5543 Move X8, [X31+360]
	5544 NotImplemented "Instruction CMP not yet implemented."
	5545 Move W8, [X19+804]
	5546 NotImplemented "Instruction CMP not yet implemented."
	5547 Move X8, 0x62D000
	5548 Move X8, [X8+368]
	5549 Move W21, [X31+352]
	5550 Add S0, S11, S8
	5551 Move X0, [X8]
	5552 Move W8, [X19+240]
	5553 Move W9, [X0+224]
	5554 NotImplemented "Instruction CMP not yet implemented."
	5555 NotImplemented "Instruction FCSEL not yet implemented."
	5556 Move [X31+220], S0
	5557 Compare W9, 0
	5558 JumpIfNotEqual {5560}
	5559 Call 0x1C17DFC
	5560 Move W0, W21
	5561 Move X1, X31
	5562 Call Char.IsSeparator, X0
	5563 Move V3, [X31+288]
	5564 Move V4, [X31+272]
	5565 Move V5, [X31+44]
	5566 NotImplemented "Instruction MOVI not yet implemented."
	5567 Move [X31+32], W0
	5568 Move [X31+208], D0
	5569 Move W12, 376
	5570 NotImplemented "Instruction MADD not yet implemented."
	5571 Move V0, [X8+116]
	5572 Move V1, [X8+156]
	5573 Subtract S2, S14, S13
	5574 Subtract S0, S0, S13
	5575 Subtract S1, S1, S13
	5576 NotImplemented "Instruction FDIV not yet implemented."
	5577 NotImplemented "Instruction FDIV not yet implemented."
	5578 Add S0, S11, S0
	5579 Add S1, S11, S1
	5580 Move [X8+136], S0
	5581 Move [X8+176], S1
	5582 Move [X8+216], S0
	5583 Move [X8+256], S1
	5584 NotImplemented "Instruction MADD not yet implemented."
	5585 Move V0, [X19+1248]
	5586 Move V1, [X19+1256]
	5587 Move V2, [X8+116]
	5588 Move V3, [X8+156]
	5589 Subtract S1, S1, S0
	5590 Subtract S0, S2, S0
	5591 NotImplemented "Instruction FDIV not yet implemented."
	5592 Add S0, S11, S0
	5593 Move [X8+136], S0
	5594 Move V1, [X19+1248]
	5595 Move V2, [X19+1256]
	5596 Move [X8+216], S0
	5597 Subtract S0, S3, S1
	5598 Subtract S1, S2, S1
	5599 NotImplemented "Instruction FDIV not yet implemented."
	5600 Add S0, S11, S0
	5601 Move [X8+176], S0
	5602 Move [X8+256], S0
	5603 Move X8, 0x62B000
	5604 Move X8, [X8+2600]
	5605 Move X0, [X8]
	5606 Move W8, [X0+224]
	5607 Compare W8, 0
	5608 JumpIfNotEqual {5610}
	5609 Call 0x1C17DFC
	5610 Move X8, 0x690000
	5611 Move X8, [X8+1048]
	5612 Move X1, X31
	5613 Move X0, [X8]
	5614 Call Debug.Log, X0
	5615 Move X22, [X21+24]
	5616 Move W11, 376
	5617 Move V5, V10
	5618 NotImplemented "Instruction CMP not yet implemented."
	5619 NotImplemented "Instruction MADD not yet implemented."
	5620 Move V0, [X8+136]
	5621 Move V1, [X8+176]
	5622 Move V2, [X8+348]
	5623 Add S3, S0, S1
	5624 Multiply S0, S0, S2
	5625 Multiply S1, S1, S2
	5626 Multiply S2, S3, S2
	5627 Move S3, 1
	5628 Subtract S2, S3, S2
	5629 Move S3, 0.5
	5630 Multiply S2, S2, S3
	5631 Add S0, S0, S2
	5632 Add S1, S2, S1
	5633 Add S2, S11, S0
	5634 Add S0, S11, S1
	5635 Move [X8+132], S2
	5636 Move [X8+172], S2
	5637 Move [X8+212], S0
	5638 NotImplemented "Instruction NOP not yet implemented."
	5639 NotImplemented "Instruction MADD not yet implemented."
	5640 Move [X8+252], S0
	5641 Move W8, [X19+784]
	5642 NotImplemented "Instruction CMP not yet implemented."
	5643 Move X12, -49483776
	5644 Add X12, X12, 2992
	5645 NotImplemented "Instruction ADR not yet implemented."
	5646 Move W10, [X12]
	5647 Add X9, X9, X10
	5648 CallNoReturn X9
	5649 NotImplemented "Instruction CMP not yet implemented."
	5650 NotImplemented "Instruction MADD not yet implemented."
	5651 Move W9, 0x3F800000
	5652 Move [X8+136], W31
	5653 Move [X8+176], W9
	5654 Move [X8+216], W9
	5655 Move [X8+256], W31
	5656 NotImplemented "Instruction CMP not yet implemented."
	5657 NotImplemented "Instruction MADD not yet implemented."
	5658 Move V0, [X8+116]
	5659 Move V1, [X8+156]
	5660 Subtract S2, S5, S8
	5661 Subtract S0, S0, S8
	5662 Subtract S1, S1, S8
	5663 NotImplemented "Instruction FDIV not yet implemented."
	5664 NotImplemented "Instruction FDIV not yet implemented."
	5665 Move [X8+136], S0
	5666 NotImplemented "Instruction CMP not yet implemented."
	5667 NotImplemented "Instruction MADD not yet implemented."
	5668 Move V0, [X19+1248]
	5669 Move V1, [X19+1256]
	5670 Move V2, [X8+116]
	5671 Move V3, [X8+156]
	5672 Subtract S1, S1, S0
	5673 Subtract S0, S2, S0
	5674 NotImplemented "Instruction FDIV not yet implemented."
	5675 Move [X8+136], S0
	5676 Move V1, [X19+1248]
	5677 Move V2, [X19+1256]
	5678 Subtract S3, S3, S1
	5679 Subtract S1, S2, S1
	5680 NotImplemented "Instruction FDIV not yet implemented."
	5681 Move [X8+176], S1
	5682 Move [X8+216], S1
	5683 Move [X8+256], S0
	5684 NotImplemented "Instruction CMP not yet implemented."
	5685 NotImplemented "Instruction MADD not yet implemented."
	5686 Move V0, [X8+132]
	5687 Move V1, [X8+212]
	5688 Move V2, [X8+348]
	5689 Add S3, S0, S1
	5690 NotImplemented "Instruction FDIV not yet implemented."
	5691 NotImplemented "Instruction FDIV not yet implemented."
	5692 NotImplemented "Instruction FDIV not yet implemented."
	5693 Move S3, 1
	5694 Subtract S2, S3, S2
	5695 Move S3, 0.5
	5696 Multiply S2, S2, S3
	5697 Add S0, S0, S2
	5698 Add S1, S2, S1
	5699 Move [X8+136], S0
	5700 Move [X8+176], S1
	5701 Move [X8+256], S0
	5702 Move [X8+216], S1
	5703 NotImplemented "Instruction CMP not yet implemented."
	5704 NotImplemented "Instruction MADD not yet implemented."
	5705 Move V0, [X19+724]
	5706 Move V1, [X8+352]
	5707 Move W8, [X8+92]
	5708 Move S2, 1
	5709 Subtract S0, S2, S0
	5710 Multiply S14, S1, S0
	5711 Compare W8, 0
	5712 JumpIfNotEqual {5718}
	5713 NotImplemented "Instruction MADD not yet implemented."
	5714 Move W8, [X8+400]
	5715 NotImplemented "Instruction FNEG not yet implemented."
	5716 And W31, W8, 1
	5717 NotImplemented "Instruction FCSEL not yet implemented."
	5718 Move W8, [X31+76]
	5719 Move V0, [X31+64]
	5720 NotImplemented "Instruction CMP not yet implemented."
	5721 NotImplemented "Instruction CMP not yet implemented."
	5722 Compare W8, 0
	5723 JumpIfNotEqual {5727}
	5724 Move V0, [X31+36]
	5725 Move V0, [X31+40]
	5726 Multiply S14, S0, S14
	5727 NotImplemented "Instruction MADD not yet implemented."
	5728 Add X29, X29, 136
	5729 Move V0, [X29]
	5730 Move W8, 0x7F800000
	5731 Move S1, W8
	5732 Move W8, 0xCF000000
	5733 NotImplemented "Instruction LDUR not yet implemented."
	5734 Move S2, W8
	5735 NotImplemented "Instruction FCVTZS not yet implemented."
	5736 NotImplemented "Instruction SCVTF not yet implemented."
	5737 NotImplemented "Instruction FCVTZS not yet implemented."
	5738 NotImplemented "Instruction FCMP not yet implemented."
	5739 NotImplemented "Instruction SCVTF not yet implemented."
	5740 Move X22, X29
	5741 Move X23, X21
	5742 Move X21, X29
	5743 NotImplemented "Instruction FCSEL not yet implemented."
	5744 NotImplemented "Instruction FCMP not yet implemented."
	5745 Add X22, X22, 76
	5746 Move V8, [X22]
	5747 Add X21, X21, 80
	5748 Move V10, [X21]
	5749 NotImplemented "Instruction FCSEL not yet implemented."
	5750 Subtract S13, S3, S9
	5751 Subtract S11, S0, S12
	5752 Move X0, X19
	5753 Move V0, V13
	5754 Move V1, V11
	5755 Move X1, X31
	5756 Move W26, 376
	5757 Call TMP_Text.PackUV, X0, V0, V1
	5758 Move [X29-4], S0
	5759 Move W8, [X23+24]
	5760 NotImplemented "Instruction CMP not yet implemented."
	5761 Subtract S10, S10, S12
	5762 Move X0, X19
	5763 Move V0, V13
	5764 Move V1, V10
	5765 Move X1, X31
	5766 Move [X29], S14
	5767 Call TMP_Text.PackUV, X0, V0, V1
	5768 NotImplemented "Instruction MADD not yet implemented."
	5769 Move [X8+172], S0
	5770 Move W8, [X23+24]
	5771 NotImplemented "Instruction CMP not yet implemented."
	5772 Move W8, 376
	5773 Subtract S13, S8, S9
	5774 NotImplemented "Instruction MADD not yet implemented."
	5775 Move X0, X19
	5776 Move V0, V13
	5777 Move V1, V10
	5778 Move X1, X31
	5779 Move [X8+176], S14
	5780 Move W26, 376
	5781 Call TMP_Text.PackUV, X0, V0, V1
	5782 Move [X22], S0
	5783 Move W8, [X23+24]
	5784 Move X29, 0x690000
	5785 Move X29, [X29+1000]
	5786 NotImplemented "Instruction CMP not yet implemented."
	5787 Move X0, X19
	5788 Move V0, V13
	5789 Move V1, V11
	5790 Move X1, X31
	5791 Move [X21], S14
	5792 Call TMP_Text.PackUV, X0, V0, V1
	5793 NotImplemented "Instruction MADD not yet implemented."
	5794 Move [X8+252], S0
	5795 Move X22, [X23+24]
	5796 Move W12, 376
	5797 NotImplemented "Instruction CMP not yet implemented."
	5798 Move X21, X23
	5799 NotImplemented "Instruction MADD not yet implemented."
	5800 Move X23, [X31+56]
	5801 Move V2, [X31+272]
	5802 Move V1, [X31+288]
	5803 Move W26, 92
	5804 Move [X8+256], S14
	5805 Move W8, [X19+808]
	5806 NotImplemented "Instruction CMP not yet implemented."
	5807 Move W8, [X19+812]
	5808 Move W9, [X31+188]
	5809 NotImplemented "Instruction CMP not yet implemented."
	5810 Move W8, [X19+816]
	5811 Move X9, [X31+360]
	5812 NotImplemented "Instruction CMP not yet implemented."
	5813 Move W8, [X19+736]
	5814 NotImplemented "Instruction CMP not yet implemented."
	5815 Move W8, [X19+816]
	5816 Move X9, [X31+360]
	5817 NotImplemented "Instruction CMP not yet implemented."
	5818 Move W8, [X19+736]
	5819 NotImplemented "Instruction CMP not yet implemented."
	5820 NotImplemented "Instruction CMP not yet implemented."
	5821 NotImplemented "Instruction MADD not yet implemented."
	5822 Move W8, [X8+104]
	5823 Move W9, [X31+80]
	5824 NotImplemented "Instruction CMP not yet implemented."
	5825 NotImplemented "Instruction MADD not yet implemented."
	5826 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5827 Move V2, [X8+112]
	5828 Move V4, [X8+152]
	5829 Move V6, [X8+192]
	5830 Move V16, [X8+232]
	5831 Move V3, [X8+120]
	5832 Move V5, [X8+160]
	5833 Move V7, [X8+200]
	5834 Add V2, V0, V2
	5835 Add V4, V0, V4
	5836 Add V6, V0, V6
	5837 Add V0, V0, V16
	5838 Move V16, [X8+240]
	5839 Move S1, V1.S[1]
	5840 Add S3, S1, S3
	5841 Add S5, S1, S5
	5842 Add S7, S1, S7
	5843 Add S1, S1, S16
	5844 Move [X8+112], D2
	5845 Move [X8+120], S3
	5846 Move [X8+152], D4
	5847 Move [X8+160], S5
	5848 Move [X8+192], D6
	5849 Move [X8+200], S7
	5850 Move [X8+232], D0
	5851 Move [X8+240], S1
	5852 NotImplemented "Instruction CMP not yet implemented."
	5853 Move X8, 0x910000
	5854 Move W8, [X8+1923]
	5855 Compare W8, 0
	5856 JumpIfNotEqual {5865}
	5857 Move X0, 0x62B000
	5858 Move X0, [X0+1440]
	5859 Call 0x1C17CF4
	5860 Move X8, 0x910000
	5861 Move W9, 1
	5862 Move [X8+1923], W9
	5863 Move W22, [X21+24]
	5864 Move W12, 376
	5865 Move X10, 0x62B000
	5866 Move X10, [X10+1440]
	5867 NotImplemented "Instruction CMP not yet implemented."
	5868 Move X8, [X10]
	5869 Move X8, [X8+184]
	5870 Move V0, [X8]
	5871 Move V1, [X8+8]
	5872 NotImplemented "Instruction NOP not yet implemented."
	5873 NotImplemented "Instruction MADD not yet implemented."
	5874 Move [X8+112], D0
	5875 Move [X8+120], S1
	5876 Move X8, [X10]
	5877 Move X8, [X8+184]
	5878 Move V0, [X8]
	5879 Move V1, [X8+8]
	5880 NotImplemented "Instruction NOP not yet implemented."
	5881 NotImplemented "Instruction MADD not yet implemented."
	5882 Move [X8+152], D0
	5883 Move [X8+160], S1
	5884 Move X9, [X10]
	5885 Move X9, [X9+184]
	5886 Move V0, [X9]
	5887 Move V1, [X9+8]
	5888 Move [X8+192], D0
	5889 Move [X8+200], S1
	5890 Move X9, [X10]
	5891 Move X9, [X9+184]
	5892 Move V0, [X9]
	5893 Move V1, [X9+8]
	5894 Add X9, X27, 404
	5895 Move [X8+232], D0
	5896 Move [X8+240], S1
	5897 Move [X9], W31
	5898 Move X22, [X31+368]
	5899 Move X27, [X31+336]
	5900 Compare W28, 0
	5901 JumpIfEqual {5938}
	5902 NotImplemented "Instruction CMP not yet implemented."
	5903 Move X8, [X19]
	5904 Move X9, [X8+2296]
	5905 Move X3, [X8+2304]
	5906 Move X27, [X31+336]
	5907 NotImplemented "Instruction CMP not yet implemented."
	5908 NotImplemented "Instruction MADD not yet implemented."
	5909 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5910 Move V2, [X8+112]
	5911 Move V4, [X8+152]
	5912 Move V6, [X8+192]
	5913 Move V16, [X8+232]
	5914 Move V3, [X8+120]
	5915 Move V5, [X8+160]
	5916 Move V7, [X8+200]
	5917 Add V2, V0, V2
	5918 Add V4, V0, V4
	5919 Add V6, V0, V6
	5920 Add V0, V0, V16
	5921 Move V16, [X8+240]
	5922 Move X22, [X31+368]
	5923 Move S1, V1.S[1]
	5924 Add S3, S1, S3
	5925 Add S5, S1, S5
	5926 Add S7, S1, S7
	5927 Add S1, S1, S16
	5928 Move [X8+112], D2
	5929 Move [X8+120], S3
	5930 Move [X8+152], D4
	5931 Move [X8+160], S5
	5932 Move [X8+192], D6
	5933 Move [X8+200], S7
	5934 Move [X8+232], D0
	5935 Move [X8+240], S1
	5936 Compare W28, 0
	5937 JumpIfNotEqual {5902}
	5938 Move X8, [X19]
	5939 Move X9, [X8+2264]
	5940 Move X3, [X8+2272]
	5941 Move X0, X19
	5942 Move W1, W25
	5943 Move W2, W31
	5944 NotImplemented "Instruction BLR not yet implemented."
	5945 Move X28, [X31+264]
	5946 Move X8, [X22]
	5947 Compare X8, 0
	5948 JumpIfEqual {7843}
	5949 Move X8, [X8+56]
	5950 Move V6, [X31+272]
	5951 Move V5, [X31+288]
	5952 Move W14, 376
	5953 Compare X8, 0
	5954 JumpIfEqual {7843}
	5955 Move W9, [X8+24]
	5956 NotImplemented "Instruction CMP not yet implemented."
	5957 NotImplemented "Instruction MADD not yet implemented."
	5958 Add X8, X8, 284
	5959 Move V2, [X8]
	5960 Move V3, [X8+8]
	5961 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	5962 Move S1, V5.S[1]
	5963 Add V2, V0, V2
	5964 Add S3, S1, S3
	5965 Move [X8], D2
	5966 Move [X8+8], S3
	5967 Move X8, [X22]
	5968 Compare X8, 0
	5969 JumpIfEqual {7843}
	5970 Move X8, [X8+56]
	5971 Compare X8, 0
	5972 JumpIfEqual {7843}
	5973 Move W9, [X8+24]
	5974 NotImplemented "Instruction CMP not yet implemented."
	5975 NotImplemented "Instruction MADD not yet implemented."
	5976 Move V2, [X8+272]
	5977 Move V3, [X8+280]
	5978 Add V2, V0, V2
	5979 Add S3, S1, S3
	5980 Move [X8+272], D2
	5981 Move [X8+280], S3
	5982 Move X8, [X22]
	5983 Compare X8, 0
	5984 JumpIfEqual {7843}
	5985 Move X8, [X8+56]
	5986 Compare X8, 0
	5987 JumpIfEqual {7843}
	5988 Move W9, [X8+24]
	5989 NotImplemented "Instruction CMP not yet implemented."
	5990 NotImplemented "Instruction MADD not yet implemented."
	5991 Move V2, [X8+296]
	5992 Move V3, [X8+304]
	5993 Add V0, V0, V2
	5994 Add S1, S1, S3
	5995 Move [X8+296], D0
	5996 Move [X8+304], S1
	5997 Move X8, [X22]
	5998 Compare X8, 0
	5999 JumpIfEqual {7843}
	6000 Move X8, [X8+56]
	6001 Compare X8, 0
	6002 JumpIfEqual {7843}
	6003 Move W9, [X8+24]
	6004 NotImplemented "Instruction CMP not yet implemented."
	6005 NotImplemented "Instruction MADD not yet implemented."
	6006 Move V0, [X8+308]
	6007 Move V1, [X8+312]
	6008 Add S0, S6, S0
	6009 Add V1, V5, V1
	6010 Move [X8+308], S0
	6011 Move [X8+312], D1
	6012 Move X9, [X22]
	6013 Compare X9, 0
	6014 JumpIfEqual {7843}
	6015 Move X8, [X9+56]
	6016 Compare X8, 0
	6017 JumpIfEqual {7843}
	6018 Move W10, [X8+24]
	6019 NotImplemented "Instruction CMP not yet implemented."
	6020 NotImplemented "Instruction MADD not yet implemented."
	6021 Move D2, [X11+320]
	6022 Move D4, [X11+328]
	6023 Move V3, [X11+336]
	6024 Move X12, [X31+360]
	6025 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	6026 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	6027 Add V1, V1, V2
	6028 NotImplemented "Instruction CMP not yet implemented."
	6029 Add S2, S5, S3
	6030 Add V3, V0, V4
	6031 Move [X11+336], S2
	6032 Move [X11+320], D1
	6033 Move [X11+328], D3
	6034 Move W8, [X23]
	6035 Subtract W8, W8, 1
	6036 NotImplemented "Instruction CMP not yet implemented."
	6037 Move X11, [X9+80]
	6038 Compare X11, 0
	6039 JumpIfEqual {7843}
	6040 Move W9, [X11+24]
	6041 NotImplemented "Instruction CMP not yet implemented."
	6042 Move X9, W20
	6043 NotImplemented "Instruction MADD not yet implemented."
	6044 NotImplemented "Instruction LDUR not yet implemented."
	6045 Move S2, [X13+84]
	6046 Move S3, [X13+88]
	6047 NotImplemented "Instruction LDRSW not yet implemented."
	6048 Add V4, V0, V1
	6049 Add S1, S5, S2
	6050 Add S2, S6, S3
	6051 NotImplemented "Instruction CMP not yet implemented."
	6052 Move [X13+76], D4
	6053 Move [X13+84], S1
	6054 Move [X13+92], S2
	6055 NotImplemented "Instruction MADD not yet implemented."
	6056 Move W8, [X8+284]
	6057 NotImplemented "Instruction NOP not yet implemented."
	6058 NotImplemented "Instruction MADD not yet implemented."
	6059 Move [X10+112], S1
	6060 Move [X10+108], W8
	6061 Move X10, [X22]
	6062 Compare X10, 0
	6063 JumpIfEqual {7843}
	6064 Move X8, [X10+80]
	6065 Compare X8, 0
	6066 JumpIfEqual {7843}
	6067 Move W11, [X8+24]
	6068 NotImplemented "Instruction CMP not yet implemented."
	6069 Move X10, [X10+56]
	6070 Compare X10, 0
	6071 JumpIfEqual {7843}
	6072 NotImplemented "Instruction MADD not yet implemented."
	6073 NotImplemented "Instruction LDRSW not yet implemented."
	6074 Move W12, [X10+24]
	6075 NotImplemented "Instruction CMP not yet implemented."
	6076 NotImplemented "Instruction MADD not yet implemented."
	6077 NotImplemented "Instruction MADD not yet implemented."
	6078 Move W9, [X10+296]
	6079 Move W10, [X8+76]
	6080 Move [X8+116], W9
	6081 Move [X8+120], W10
	6082 Move W8, [X23]
	6083 Subtract W8, W8, 1
	6084 NotImplemented "Instruction CMP not yet implemented."
	6085 Move X9, [X22]
	6086 Compare X9, 0
	6087 JumpIfEqual {7843}
	6088 Move X8, [X9+80]
	6089 Move X12, [X31+232]
	6090 Compare X8, 0
	6091 JumpIfEqual {7843}
	6092 Move W10, [X8+24]
	6093 Move X11, [X31+360]
	6094 NotImplemented "Instruction CMP not yet implemented."
	6095 NotImplemented "Instruction MADD not yet implemented."
	6096 NotImplemented "Instruction LDUR not yet implemented."
	6097 Move S2, [X10+84]
	6098 Move S3, [X10+88]
	6099 Add V1, V0, V1
	6100 Add S0, S5, S2
	6101 Add S2, S6, S3
	6102 Move [X10+76], D1
	6103 Move [X10+84], S0
	6104 Move [X10+92], S2
	6105 Move X9, [X9+56]
	6106 Compare X9, 0
	6107 JumpIfEqual {7843}
	6108 NotImplemented "Instruction LDRSW not yet implemented."
	6109 Move W11, [X9+24]
	6110 NotImplemented "Instruction CMP not yet implemented."
	6111 NotImplemented "Instruction MADD not yet implemented."
	6112 Move W9, [X9+284]
	6113 NotImplemented "Instruction NOP not yet implemented."
	6114 NotImplemented "Instruction MADD not yet implemented."
	6115 Move [X8+112], S0
	6116 Move [X8+108], W9
	6117 Move X9, [X22]
	6118 Compare X9, 0
	6119 JumpIfEqual {7843}
	6120 Move X8, [X9+80]
	6121 Compare X8, 0
	6122 JumpIfEqual {7843}
	6123 Move W10, [X8+24]
	6124 Move X11, [X31+360]
	6125 NotImplemented "Instruction CMP not yet implemented."
	6126 Move X9, [X9+56]
	6127 Compare X9, 0
	6128 JumpIfEqual {7843}
	6129 NotImplemented "Instruction MADD not yet implemented."
	6130 NotImplemented "Instruction LDRSW not yet implemented."
	6131 Move W11, [X9+24]
	6132 NotImplemented "Instruction CMP not yet implemented."
	6133 NotImplemented "Instruction MADD not yet implemented."
	6134 NotImplemented "Instruction MADD not yet implemented."
	6135 Move W9, [X9+296]
	6136 Move W10, [X8+76]
	6137 Move [X8+116], W9
	6138 Move [X8+120], W10
	6139 Move X8, 0x62D000
	6140 Move X8, [X8+368]
	6141 Move X0, [X8]
	6142 Move W8, [X0+224]
	6143 Compare W8, 0
	6144 JumpIfNotEqual {6146}
	6145 Call 0x1C17DFC
	6146 Move W20, [X31+352]
	6147 Move X1, X31
	6148 Move W0, W20
	6149 Call Char.IsLetterOrDigit, X0
	6150 Move TEMP, X0
	6151 And TEMP, TEMP, 1
	6152 Compare TEMP, 1
	6153 JumpIfEqual {6161}
	6154 Move TEMP, 0x200F
	6155 Not TEMP
	6156 Move W8, TEMP
	6157 Add W8, W20, W8
	6158 NotImplemented "Instruction CMP not yet implemented."
	6159 NotImplemented "Instruction CMP not yet implemented."
	6160 NotImplemented "Instruction CMP not yet implemented."
	6161 Move W9, [X31+248]
	6162 Move W8, [X23]
	6163 And W31, W9, 1
	6164 Move W9, [X31+316]
	6165 Subtract W8, W8, 1
	6166 NotImplemented "Instruction CSEL not yet implemented."
	6167 NotImplemented "Instruction CMP not yet implemented."
	6168 Move [X31+316], W9
	6169 Move X8, [X22]
	6170 Move W12, 376
	6171 Compare X8, 0
	6172 JumpIfEqual {7843}
	6173 Move X28, X8
	6174 Add X28, X28, 64
	6175 Move X9, [X28]
	6176 Compare X9, 0
	6177 JumpIfEqual {7843}
	6178 NotImplemented "Instruction LDRSW not yet implemented."
	6179 Move W21, [X9+24]
	6180 Add W9, W20, 1
	6181 NotImplemented "Instruction CMP not yet implemented."
	6182 Move X8, 0x690000
	6183 Move X8, [X8+872]
	6184 Move X0, [X8]
	6185 Move W8, [X0+224]
	6186 Compare W8, 0
	6187 JumpIfNotEqual {6189}
	6188 Call 0x1C17DFC
	6189 Move X8, 0x690000
	6190 Move X8, [X8+864]
	6191 Add W1, W21, 1
	6192 Move X0, X28
	6193 Move X2, [X8]
	6194 Call TMP_TextInfo.Resize, X0, X1
	6195 Move X8, [X22]
	6196 Move W12, 376
	6197 Compare X8, 0
	6198 JumpIfEqual {7843}
	6199 Move X9, [X8+64]
	6200 Compare X9, 0
	6201 JumpIfEqual {7843}
	6202 Move W10, [X9+24]
	6203 Move X21, [X31+320]
	6204 Move X28, [X31+264]
	6205 NotImplemented "Instruction CMP not yet implemented."
	6206 Move W10, 24
	6207 NotImplemented "Instruction MADD not yet implemented."
	6208 Move W11, [X31+316]
	6209 Move W10, [X31+348]
	6210 Move [X9+32], X19
	6211 Move [X9+40], W11
	6212 Move [X9+44], W25
	6213 Subtract W10, W10, W11
	6214 Move [X9+48], W10
	6215 Move W10, [X8+36]
	6216 Move X9, [X8+80]
	6217 Add W10, W10, 1
	6218 Move [X8+36], W10
	6219 Compare X9, 0
	6220 JumpIfEqual {7843}
	6221 Move W8, [X9+24]
	6222 Move X10, [X31+360]
	6223 NotImplemented "Instruction CMP not yet implemented."
	6224 Move X8, [X31+232]
	6225 Move W10, [X31+188]
	6226 NotImplemented "Instruction NOP not yet implemented."
	6227 NotImplemented "Instruction MADD not yet implemented."
	6228 Move W9, [X8+48]
	6229 Add W10, W10, 1
	6230 Move [X31+188], W10
	6231 Add W9, W9, 1
	6232 Move [X8+48], W9
	6233 Move W8, 1
	6234 Move [X31+248], W8
	6235 Move W8, 1
	6236 Move [X31+248], W8
	6237 Move W12, 376
	6238 Move X8, [X22]
	6239 Compare X8, 0
	6240 JumpIfEqual {7843}
	6241 Move X8, [X8+56]
	6242 Compare X8, 0
	6243 JumpIfEqual {7843}
	6244 Move W9, [X8+24]
	6245 NotImplemented "Instruction CMP not yet implemented."
	6246 NotImplemented "Instruction MADD not yet implemented."
	6247 Move W10, [X10+400]
	6248 Move TEMP, X10
	6249 And TEMP, TEMP, 4
	6250 Compare TEMP, 4
	6251 JumpIfEqual {6266}
	6252 Move W10, [X31+260]
	6253 Move TEMP, X10
	6254 And TEMP, TEMP, 1
	6255 Compare TEMP, 1
	6256 JumpIfNotEqual {6580}
	6257 Move W10, [X31+348]
	6258 Subtract W10, W10, 2
	6259 NotImplemented "Instruction CMP not yet implemented."
	6260 Add X8, X8, X28
	6261 Subtract X10, X8, 816
	6262 Subtract X8, X8, 760
	6263 Move X9, [X19]
	6264 Move V3, [X10]
	6265 Move V7, [X8]
	6266 Move W9, [X31+4196]
	6267 NotImplemented "Instruction NOP not yet implemented."
	6268 NotImplemented "Instruction MADD not yet implemented."
	6269 Move W21, [X8+104]
	6270 Move [X8+364], W9
	6271 Move W9, [X19+808]
	6272 NotImplemented "Instruction CMP not yet implemented."
	6273 Move W8, [X19+816]
	6274 Move X9, [X31+360]
	6275 NotImplemented "Instruction CMP not yet implemented."
	6276 Move W20, W31
	6277 Move X8, 0x62C000
	6278 Move X8, [X8+368]
	6279 Move X0, [X8]
	6280 Move W8, [X0+224]
	6281 Compare W8, 0
	6282 JumpIfNotEqual {6284}
	6283 Call 0x1C17DFC
	6284 Move W27, [X31+352]
	6285 Move X1, X31
	6286 Move W0, W27
	6287 Call Char.IsWhiteSpace, X0
	6288 Move W8, 0x200B
	6289 NotImplemented "Instruction CMP not yet implemented."
	6290 Move X27, [X31+336]
	6291 Move TEMP, X0
	6292 And TEMP, TEMP, 1
	6293 Compare TEMP, 1
	6294 JumpIfEqual {6543}
	6295 Move X8, [X22]
	6296 Compare X8, 0
	6297 JumpIfEqual {7843}
	6298 Move X9, [X8+56]
	6299 Move W11, 376
	6300 Compare X9, 0
	6301 JumpIfEqual {7843}
	6302 Move W10, [X9+24]
	6303 NotImplemented "Instruction CMP not yet implemented."
	6304 NotImplemented "Instruction MADD not yet implemented."
	6305 Move V0, [X9+352]
	6306 Move W9, [X31+84]
	6307 NotImplemented "Instruction FABS not yet implemented."
	6308 NotImplemented "Instruction FCMP not yet implemented."
	6309 NotImplemented "Instruction FCSEL not yet implemented."
	6310 Move V0, [X31+224]
	6311 NotImplemented "Instruction FCMP not yet implemented."
	6312 NotImplemented "Instruction FCSEL not yet implemented."
	6313 NotImplemented "Instruction CMP not yet implemented."
	6314 Move [X31+224], S0
	6315 Move X0, [X29]
	6316 Move W9, [X0+224]
	6317 Compare W9, 0
	6318 JumpIfEqual {6514}
	6319 Move X9, [X0+184]
	6320 Move W8, [X19+736]
	6321 NotImplemented "Instruction CMP not yet implemented."
	6322 Move W8, [X19+824]
	6323 Add W9, W21, 1
	6324 NotImplemented "Instruction CMP not yet implemented."
	6325 Move W20, 1
	6326 Move X27, [X31+336]
	6327 Move W8, [X31+248]
	6328 Move TEMP, X8
	6329 And TEMP, TEMP, 1
	6330 Compare TEMP, 1
	6331 JumpIfNotEqual {6389}
	6332 Move W8, [X31+348]
	6333 Move W12, 376
	6334 NotImplemented "Instruction CMP not yet implemented."
	6335 Move W8, [X21+24]
	6336 Subtract W9, W8, 1
	6337 NotImplemented "Instruction CMP not yet implemented."
	6338 Move W9, [X23]
	6339 NotImplemented "Instruction CMP not yet implemented."
	6340 Move W10, [X31+352]
	6341 Move W9, 0x2019
	6342 NotImplemented "Instruction CMP not yet implemented."
	6343 Move W9, [X31+352]
	6344 NotImplemented "Instruction CMP not yet implemented."
	6345 Move W9, [X31+348]
	6346 Subtract W9, W9, 2
	6347 NotImplemented "Instruction CMP not yet implemented."
	6348 Move X8, 0x62C000
	6349 Move X8, [X8+368]
	6350 Move X0, [X8]
	6351 Add X8, X21, X28
	6352 Subtract X8, X8, 1080
	6353 NotImplemented "Instruction LDRH not yet implemented."
	6354 Move W9, [X0+224]
	6355 Compare W9, 0
	6356 JumpIfNotEqual {6358}
	6357 Call 0x1C17DFC
	6358 Move W0, W28
	6359 Move X1, X31
	6360 Call Char.IsLetterOrDigit, X0
	6361 Move X9, [X31+264]
	6362 Move W12, 376
	6363 Move TEMP, X0
	6364 And TEMP, TEMP, 1
	6365 Compare TEMP, 1
	6366 JumpIfNotEqual {6427}
	6367 Move W8, [X21+24]
	6368 Move W10, [X31+348]
	6369 NotImplemented "Instruction CMP not yet implemented."
	6370 Move X8, 0x62C000
	6371 Move X8, [X8+368]
	6372 Move X0, [X8]
	6373 Add X8, X21, X9
	6374 Subtract X8, X8, 328
	6375 NotImplemented "Instruction LDRH not yet implemented."
	6376 Move W9, [X0+224]
	6377 Compare W9, 0
	6378 JumpIfNotEqual {6380}
	6379 Call 0x1C17DFC
	6380 Move W0, W28
	6381 Move X1, X31
	6382 Call Char.IsLetterOrDigit, X0
	6383 Move X28, [X31+264]
	6384 Move W12, 376
	6385 Move TEMP, X0
	6386 And TEMP, TEMP, 1
	6387 Compare TEMP, 1
	6388 JumpIfEqual {6233}
	6389 Move W8, [X31+348]
	6390 Move W12, 376
	6391 NotImplemented "Instruction CMP not yet implemented."
	6392 Move X8, 0x62C000
	6393 Move X8, [X8+368]
	6394 Move X0, [X8]
	6395 Move W8, [X0+224]
	6396 Compare W8, 0
	6397 JumpIfNotEqual {6399}
	6398 Call 0x1C17DFC
	6399 Move W0, [X31+352]
	6400 Move X1, X31
	6401 Call Char.IsPunctuation, X0
	6402 Move W12, 376
	6403 Move TEMP, X0
	6404 And TEMP, TEMP, 1
	6405 Compare TEMP, 1
	6406 JumpIfNotEqual {6427}
	6407 Move X8, 0x62C000
	6408 Move X8, [X8+368]
	6409 Move X0, [X8]
	6410 Move W8, [X0+224]
	6411 Compare W8, 0
	6412 JumpIfNotEqual {6414}
	6413 Call 0x1C17DFC
	6414 Move W20, [X31+352]
	6415 Move X1, X31
	6416 Move W0, W20
	6417 Call Char.IsWhiteSpace, X0
	6418 Move W8, 0x200B
	6419 NotImplemented "Instruction CMP not yet implemented."
	6420 Move W12, 376
	6421 Move TEMP, X0
	6422 And TEMP, TEMP, 1
	6423 Compare TEMP, 1
	6424 JumpIfEqual {6427}
	6425 Move W8, [X23]
	6426 NotImplemented "Instruction CMP not yet implemented."
	6427 Move W8, [X23]
	6428 Subtract W8, W8, 1
	6429 NotImplemented "Instruction CMP not yet implemented."
	6430 Move X8, 0x62C000
	6431 Move X8, [X8+368]
	6432 Move X0, [X8]
	6433 Move W8, [X0+224]
	6434 Compare W8, 0
	6435 JumpIfNotEqual {6437}
	6436 Call 0x1C17DFC
	6437 Move W0, [X31+352]
	6438 Move X1, X31
	6439 Call Char.IsLetterOrDigit, X0
	6440 Move W20, [X31+252]
	6441 Move W12, 376
	6442 Move TEMP, X0
	6443 And TEMP, TEMP, 1
	6444 Compare TEMP, 1
	6445 JumpIfEqual {6448}
	6446 Move W8, [X31+348]
	6447 Subtract W20, W8, 2
	6448 Move X8, [X22]
	6449 Compare X8, 0
	6450 JumpIfEqual {7843}
	6451 Move X28, X8
	6452 Add X28, X28, 64
	6453 Move X9, [X28]
	6454 Compare X9, 0
	6455 JumpIfEqual {7843}
	6456 NotImplemented "Instruction LDRSW not yet implemented."
	6457 Move W22, [X9+24]
	6458 Add W9, W21, 1
	6459 NotImplemented "Instruction CMP not yet implemented."
	6460 Move X8, 0x68F000
	6461 Move X8, [X8+872]
	6462 Move X0, [X8]
	6463 Move W8, [X0+224]
	6464 Compare W8, 0
	6465 JumpIfNotEqual {6467}
	6466 Call 0x1C17DFC
	6467 Move X8, 0x68F000
	6468 Move X8, [X8+864]
	6469 Add W1, W22, 1
	6470 Move X0, X28
	6471 Move X2, [X8]
	6472 Call TMP_TextInfo.Resize, X0, X1
	6473 Move X8, [X31+368]
	6474 Move W12, 376
	6475 Move X8, [X8]
	6476 Compare X8, 0
	6477 JumpIfEqual {7843}
	6478 Move X9, [X8+64]
	6479 Compare X9, 0
	6480 JumpIfEqual {7843}
	6481 Move W10, [X9+24]
	6482 Move X28, [X31+264]
	6483 NotImplemented "Instruction CMP not yet implemented."
	6484 Move W11, [X31+316]
	6485 Move W10, 24
	6486 NotImplemented "Instruction MADD not yet implemented."
	6487 Move [X9+32], X19
	6488 Subtract W10, W20, W11
	6489 Add W10, W10, 1
	6490 Move [X9+40], W11
	6491 Move [X9+44], W20
	6492 Move [X9+48], W10
	6493 Move W10, [X8+36]
	6494 Move X9, [X8+80]
	6495 Add W10, W10, 1
	6496 Move [X8+36], W10
	6497 Compare X9, 0
	6498 JumpIfEqual {7843}
	6499 Move W8, [X9+24]
	6500 Move X10, [X31+360]
	6501 Move X22, [X31+368]
	6502 Move X21, [X31+320]
	6503 NotImplemented "Instruction CMP not yet implemented."
	6504 Move X8, [X31+232]
	6505 Move W10, [X31+188]
	6506 Move [X31+248], W31
	6507 NotImplemented "Instruction NOP not yet implemented."
	6508 NotImplemented "Instruction MADD not yet implemented."
	6509 Move W9, [X8+48]
	6510 Add W10, W10, 1
	6511 Move [X31+188], W10
	6512 Add W9, W9, 1
	6513 Move [X8+48], W9
	6514 Call 0x1C17DFC
	6515 Move X8, [X22]
	6516 Compare X8, 0
	6517 JumpIfEqual {7843}
	6518 Move X9, [X29]
	6519 Move W11, 376
	6520 Move X9, [X9+184]
	6521 Move V0, [X9+5544]
	6522 Move [X31+228], S0
	6523 Move X8, [X8+56]
	6524 Compare X8, 0
	6525 JumpIfEqual {7843}
	6526 Move W9, [X8+24]
	6527 NotImplemented "Instruction CMP not yet implemented."
	6528 Move X9, [X19+248]
	6529 Compare X9, 0
	6530 JumpIfEqual {7843}
	6531 NotImplemented "Instruction MADD not yet implemented."
	6532 Move V8, [X8+332]
	6533 Add X0, X9, 80
	6534 Move X1, X31
	6535 Call FaceInfo.get_underlineOffset, X0
	6536 Move V1, [X31+228]
	6537 Multiply S0, S15, S0
	6538 Add S0, S8, S0
	6539 Move [X31+84], W21
	6540 NotImplemented "Instruction FCMP not yet implemented."
	6541 NotImplemented "Instruction FCSEL not yet implemented."
	6542 Move [X31+228], S1
	6543 Move X21, [X31+320]
	6544 Move W8, [X31+260]
	6545 Move TEMP, X8
	6546 And TEMP, TEMP, 1
	6547 Compare TEMP, 1
	6548 JumpIfNotEqual {6550}
	6549 Move W12, 376
	6550 Move W8, [X31+352]
	6551 Move W12, 376
	6552 Move [X31+260], W31
	6553 NotImplemented "Instruction CMP not yet implemented."
	6554 And W8, W8, 0xFFFE
	6555 NotImplemented "Instruction CMP not yet implemented."
	6556 Move X8, [X31+328]
	6557 NotImplemented "Instruction CMP not yet implemented."
	6558 Xor W8, W20, 1
	6559 Move TEMP, X8
	6560 And TEMP, TEMP, 1
	6561 Compare TEMP, 1
	6562 JumpIfEqual {6650}
	6563 Move X8, [X31+328]
	6564 NotImplemented "Instruction CMP not yet implemented."
	6565 Move X8, 0x62C000
	6566 Move X8, [X8+368]
	6567 Move X0, [X8]
	6568 Move W8, [X0+224]
	6569 Compare W8, 0
	6570 JumpIfNotEqual {6572}
	6571 Call 0x1C17DFC
	6572 Move W0, [X31+352]
	6573 Move X1, X31
	6574 Call Char.IsSeparator, X0
	6575 Move W12, 376
	6576 Move TEMP, X0
	6577 And TEMP, TEMP, 1
	6578 Compare TEMP, 1
	6579 JumpIfNotEqual {6581}
	6580 Move [X31+260], W31
	6581 Move X8, [X22]
	6582 Compare X8, 0
	6583 JumpIfEqual {7843}
	6584 Move X8, [X8+56]
	6585 Compare X8, 0
	6586 JumpIfEqual {7843}
	6587 Move W9, [X8+24]
	6588 NotImplemented "Instruction CMP not yet implemented."
	6589 NotImplemented "Instruction MADD not yet implemented."
	6590 Move V0, [X8+352]
	6591 Move V1, [X8+284]
	6592 NotImplemented "Instruction FCMP not yet implemented."
	6593 Move W8, [X8+360]
	6594 NotImplemented "Instruction FCSEL not yet implemented."
	6595 Move [X31+96], S1
	6596 Move [X31+104], S0
	6597 Move V1, [X31+224]
	6598 Move S0, W31
	6599 Move [X31+92], S0
	6600 Move V0, [X31+228]
	6601 NotImplemented "Instruction FCSEL not yet implemented."
	6602 Move [X31+104], X8
	6603 Move [X31+224], S1
	6604 Move [X31+88], S0
	6605 Move W8, [X23]
	6606 Subtract W8, W8, 1
	6607 Move X8, [X22]
	6608 Compare X8, 0
	6609 JumpIfEqual {7843}
	6610 Move X8, [X8+56]
	6611 Compare X8, 0
	6612 JumpIfEqual {7843}
	6613 Move W9, [X8+24]
	6614 NotImplemented "Instruction CMP not yet implemented."
	6615 NotImplemented "Instruction MADD not yet implemented."
	6616 Move X9, [X19]
	6617 Move V3, [X8+296]
	6618 Move V7, [X8+352]
	6619 Move X8, [X9+2312]
	6620 Move X3, [X9+2320]
	6621 Move S0, [X31+224]
	6622 Move S4, [X31+228]
	6623 Move X9, [X31+104]
	6624 Move V1, [X31+88]
	6625 Move V6, [X31+100]
	6626 Move [X31+8], S0
	6627 Move S2, [X31+92]
	6628 Move S0, [X31+96]
	6629 Add X1, X31, 4096
	6630 Move W2, W9
	6631 Move S5, W31
	6632 Add X1, X1, 100
	6633 Move X0, X19
	6634 Move [X31], S15
	6635 NotImplemented "Instruction BLR not yet implemented."
	6636 Move X0, [X29]
	6637 Move W8, [X0+224]
	6638 Compare W8, 0
	6639 JumpIfNotEqual {6642}
	6640 Call 0x1C17DFC
	6641 Move X0, [X29]
	6642 Move X8, [X0+184]
	6643 Move S15, W31
	6644 Move S0, W31
	6645 Move [X31+260], W31
	6646 Move V1, [X8+5544]
	6647 Move [X31+224], S0
	6648 Move [X31+232], S1
	6649 Move W12, 376
	6650 Move X8, [X22]
	6651 Compare X8, 0
	6652 JumpIfEqual {7843}
	6653 Move X8, [X8+56]
	6654 Compare X8, 0
	6655 JumpIfEqual {7843}
	6656 Move W9, [X8+24]
	6657 NotImplemented "Instruction CMP not yet implemented."
	6658 Compare X27, 0
	6659 JumpIfEqual {7843}
	6660 NotImplemented "Instruction MADD not yet implemented."
	6661 Move W20, [X8+400]
	6662 Add X0, X27, 80
	6663 Move X1, X31
	6664 Call FaceInfo.get_strikethroughOffset, X0
	6665 Move V11, V0
	6666 Move TEMP, X20
	6667 And TEMP, TEMP, 64
	6668 Compare TEMP, 64
	6669 JumpIfEqual {6695}
	6670 Move W8, [X31+256]
	6671 Move TEMP, X8
	6672 And TEMP, TEMP, 1
	6673 Compare TEMP, 1
	6674 JumpIfNotEqual {7034}
	6675 Move X8, [X22]
	6676 Compare X8, 0
	6677 JumpIfEqual {7843}
	6678 Move X8, [X8+56]
	6679 Compare X8, 0
	6680 JumpIfEqual {7843}
	6681 Move W10, [X31+348]
	6682 Move W9, [X8+24]
	6683 Subtract W10, W10, 2
	6684 NotImplemented "Instruction CMP not yet implemented."
	6685 Move X9, [X19]
	6686 Add X8, X8, X28
	6687 Subtract X10, X8, 816
	6688 Subtract X8, X8, 780
	6689 Move V6, [X31+140]
	6690 Move V3, [X10]
	6691 Move V0, [X8]
	6692 Move X8, [X9+2312]
	6693 Move X3, [X9+2320]
	6694 Multiply S1, S6, S11
	6695 Move X8, [X22]
	6696 Compare X8, 0
	6697 JumpIfEqual {7843}
	6698 Move X9, [X8+56]
	6699 Move W12, 376
	6700 Compare X9, 0
	6701 JumpIfEqual {7843}
	6702 Move W10, [X9+24]
	6703 NotImplemented "Instruction CMP not yet implemented."
	6704 Move W10, [X31+4196]
	6705 NotImplemented "Instruction NOP not yet implemented."
	6706 NotImplemented "Instruction MADD not yet implemented."
	6707 Move [X11+372], W10
	6708 Move W10, [X19+808]
	6709 NotImplemented "Instruction CMP not yet implemented."
	6710 Move W10, [X19+816]
	6711 Move X11, [X31+360]
	6712 NotImplemented "Instruction CMP not yet implemented."
	6713 Move W20, W31
	6714 Move W9, [X31+352]
	6715 NotImplemented "Instruction CMP not yet implemented."
	6716 Move W9, [X31+352]
	6717 And W9, W9, 0xFFFE
	6718 NotImplemented "Instruction CMP not yet implemented."
	6719 Move X9, [X31+328]
	6720 NotImplemented "Instruction CMP not yet implemented."
	6721 Move W10, [X31+256]
	6722 Xor W9, W20, 1
	6723 Or W9, W10, W9
	6724 Move TEMP, X9
	6725 And TEMP, TEMP, 1
	6726 Compare TEMP, 1
	6727 JumpIfEqual {6745}
	6728 Move X9, [X31+328]
	6729 NotImplemented "Instruction CMP not yet implemented."
	6730 Move X8, 0x62C000
	6731 Move X8, [X8+368]
	6732 Move X0, [X8]
	6733 Move W8, [X0+224]
	6734 Compare W8, 0
	6735 JumpIfNotEqual {6737}
	6736 Call 0x1C17DFC
	6737 Move W0, [X31+352]
	6738 Move X1, X31
	6739 Call Char.IsSeparator, X0
	6740 Move W12, 376
	6741 Move TEMP, X0
	6742 And TEMP, TEMP, 1
	6743 Compare TEMP, 1
	6744 JumpIfNotEqual {6818}
	6745 Move W8, [X31+256]
	6746 Move TEMP, X8
	6747 And TEMP, TEMP, 1
	6748 Compare TEMP, 1
	6749 JumpIfEqual {6842}
	6750 Move X9, [X31+200]
	6751 NotImplemented "Instruction CMP not yet implemented."
	6752 Move X9, [X31+328]
	6753 NotImplemented "Instruction CMP not yet implemented."
	6754 Move TEMP, X20
	6755 And TEMP, TEMP, 1
	6756 Compare TEMP, 1
	6757 JumpIfNotEqual {6946}
	6758 NotImplemented "Instruction CMP not yet implemented."
	6759 Move X8, [X22]
	6760 Compare X8, 0
	6761 JumpIfEqual {7843}
	6762 Move X8, [X8+56]
	6763 Compare X8, 0
	6764 JumpIfEqual {7843}
	6765 Move W9, [X8+24]
	6766 Move W10, [X31+348]
	6767 NotImplemented "Instruction CMP not yet implemented."
	6768 Move W1, [X8]
	6769 Move X8, [X31+104]
	6770 Move X2, X31
	6771 Move W28, W8
	6772 Move X0, X28
	6773 Call TMPro_ExtensionMethods.Compare, X0, X1
	6774 Move TEMP, X0
	6775 And TEMP, TEMP, 1
	6776 Compare TEMP, 1
	6777 JumpIfNotEqual {7303}
	6778 Move X28, [X31+264]
	6779 Move W8, 1
	6780 Move [X31+260], W8
	6781 Move W10, [X19+736]
	6782 NotImplemented "Instruction CMP not yet implemented."
	6783 NotImplemented "Instruction MADD not yet implemented."
	6784 Move W9, [X9+104]
	6785 Move W10, [X19+824]
	6786 Add W9, W9, 1
	6787 NotImplemented "Instruction CMP not yet implemented."
	6788 Move W20, 1
	6789 Move X8, 0x62C000
	6790 Move X8, [X8+368]
	6791 Move X0, [X8]
	6792 Move W8, [X0+224]
	6793 Compare W8, 0
	6794 JumpIfNotEqual {6796}
	6795 Call 0x1C17DFC
	6796 Move W0, [X31+352]
	6797 Move W8, 0x200B
	6798 Move X1, X31
	6799 NotImplemented "Instruction CMP not yet implemented."
	6800 NotImplemented "Instruction CSET not yet implemented."
	6801 Call Char.IsWhiteSpace, X0
	6802 Move X8, [X22]
	6803 Compare X8, 0
	6804 JumpIfEqual {7843}
	6805 Move X8, [X8+56]
	6806 Move W11, 376
	6807 Compare X8, 0
	6808 JumpIfEqual {7843}
	6809 Move W9, [X8+24]
	6810 Or W10, W20, W0
	6811 Move TEMP, X10
	6812 And TEMP, TEMP, 1
	6813 Compare TEMP, 1
	6814 JumpIfNotEqual {6953}
	6815 Move X10, [X31+328]
	6816 NotImplemented "Instruction CMP not yet implemented."
	6817 Move X9, X10
	6818 Move X8, [X22]
	6819 Compare X8, 0
	6820 JumpIfEqual {7843}
	6821 Move X8, [X8+56]
	6822 Compare X8, 0
	6823 JumpIfEqual {7843}
	6824 Move W9, [X8+24]
	6825 NotImplemented "Instruction CMP not yet implemented."
	6826 NotImplemented "Instruction MADD not yet implemented."
	6827 Move V0, [X8+352]
	6828 Move V2, [X8+284]
	6829 Move V3, [X8+96]
	6830 Move V1, [X8+332]
	6831 Move W8, [X8+368]
	6832 Move [X31+136], S2
	6833 Move [X31+144], S0
	6834 Multiply S0, S11, S0
	6835 Move [X31+48], S1
	6836 Move [X31+56], S3
	6837 Add S3, S0, S1
	6838 Move S0, W31
	6839 Move [X31+144], X8
	6840 Move [X31+116], S0
	6841 Move [X31+124], S3
	6842 Move W8, [X23]
	6843 NotImplemented "Instruction CMP not yet implemented."
	6844 Move X8, [X22]
	6845 Compare X8, 0
	6846 JumpIfEqual {7843}
	6847 Move X8, [X8+56]
	6848 Compare X8, 0
	6849 JumpIfEqual {7843}
	6850 Move W9, [X8+24]
	6851 NotImplemented "Instruction CMP not yet implemented."
	6852 Move X9, [X19]
	6853 NotImplemented "Instruction NOP not yet implemented."
	6854 NotImplemented "Instruction MADD not yet implemented."
	6855 Move V3, [X8+296]
	6856 Move V0, [X8+332]
	6857 Move X8, [X9+2312]
	6858 Move X3, [X9+2320]
	6859 Move X9, [X31+200]
	6860 NotImplemented "Instruction CMP not yet implemented."
	6861 Move X8, 0x62C000
	6862 Move X8, [X8+368]
	6863 Move X0, [X8]
	6864 Move W8, [X0+224]
	6865 Compare W8, 0
	6866 JumpIfNotEqual {6868}
	6867 Call 0x1C17DFC
	6868 Move W20, [X31+352]
	6869 Move X1, X31
	6870 Move W0, W20
	6871 Call Char.IsWhiteSpace, X0
	6872 Move X8, [X22]
	6873 Move W9, 0x200B
	6874 NotImplemented "Instruction CMP not yet implemented."
	6875 NotImplemented "Instruction CSET not yet implemented."
	6876 Compare X8, 0
	6877 JumpIfEqual {7843}
	6878 Move X8, [X8+56]
	6879 Move W11, 376
	6880 Compare X8, 0
	6881 JumpIfEqual {7843}
	6882 Move W10, [X8+24]
	6883 Or W9, W9, W0
	6884 Move TEMP, X9
	6885 And TEMP, TEMP, 1
	6886 Compare TEMP, 1
	6887 JumpIfNotEqual {6962}
	6888 Move X9, [X31+328]
	6889 NotImplemented "Instruction CMP not yet implemented."
	6890 NotImplemented "Instruction CMP not yet implemented."
	6891 Move X8, [X22]
	6892 Compare X8, 0
	6893 JumpIfEqual {7843}
	6894 Move X9, [X8+56]
	6895 Compare X9, 0
	6896 JumpIfEqual {7843}
	6897 Move W10, [X9+24]
	6898 Move W11, [X31+348]
	6899 NotImplemented "Instruction CMP not yet implemented."
	6900 Add X9, X9, X28
	6901 Subtract X10, X9, 264
	6902 Move V0, [X10]
	6903 Move V1, [X31+52]
	6904 NotImplemented "Instruction FCMP not yet implemented."
	6905 Move X8, 0x68F000
	6906 Move X8, [X8+832]
	6907 NotImplemented "Instruction LDUR not yet implemented."
	6908 Move X0, [X8]
	6909 Move W8, [X0+224]
	6910 Compare W8, 0
	6911 JumpIfNotEqual {6913}
	6912 Call 0x1C17DFC
	6913 Move V0, [X31+18]
	6914 Move V1, [X31+48]
	6915 Move X0, X31
	6916 Add S0, S0, S8
	6917 Call TMP_Math.Approximately, V0, V1
	6918 Move TEMP, X0
	6919 And TEMP, TEMP, 1
	6920 Compare TEMP, 1
	6921 JumpIfNotEqual {6997}
	6922 Move W8, [X23]
	6923 NotImplemented "Instruction CMP not yet implemented."
	6924 Move X0, X27
	6925 Move X1, X31
	6926 Call Object.GetInstanceID, X0
	6927 Move W8, [X21+24]
	6928 Move W9, [X31+348]
	6929 NotImplemented "Instruction CMP not yet implemented."
	6930 Add X8, X21, X28
	6931 Subtract X8, X8, 304
	6932 Move W27, W0
	6933 Move X0, [X8]
	6934 Compare X0, 0
	6935 JumpIfEqual {7843}
	6936 Move X1, X31
	6937 Call Object.GetInstanceID, X0
	6938 NotImplemented "Instruction CMP not yet implemented."
	6939 Move W10, 376
	6940 Move TEMP, X20
	6941 And TEMP, TEMP, 1
	6942 Compare TEMP, 1
	6943 JumpIfNotEqual {6970}
	6944 Move W8, 1
	6945 Move [X31+256], W8
	6946 Move X8, [X22]
	6947 Compare X8, 0
	6948 JumpIfEqual {7843}
	6949 Move X8, [X8+56]
	6950 Compare X8, 0
	6951 JumpIfEqual {7843}
	6952 Move W9, [X8+24]
	6953 NotImplemented "Instruction CMP not yet implemented."
	6954 Move X9, X24
	6955 Move X10, [X19]
	6956 NotImplemented "Instruction NOP not yet implemented."
	6957 NotImplemented "Instruction MADD not yet implemented."
	6958 Move V3, [X8+296]
	6959 Move V7, [X8+352]
	6960 Move X8, [X10+2312]
	6961 Move X3, [X10+2320]
	6962 NotImplemented "Instruction CMP not yet implemented."
	6963 Move X9, X24
	6964 Move X10, [X19]
	6965 NotImplemented "Instruction NOP not yet implemented."
	6966 NotImplemented "Instruction MADD not yet implemented."
	6967 Move [X31+248], W31
	6968 Move W8, 1
	6969 Move [X31+260], W8
	6970 Move X8, [X22]
	6971 Compare X8, 0
	6972 JumpIfEqual {7843}
	6973 Move X8, [X8+56]
	6974 Compare X8, 0
	6975 JumpIfEqual {7843}
	6976 Move W10, [X31+348]
	6977 Move W9, [X8+24]
	6978 Subtract W10, W10, 2
	6979 NotImplemented "Instruction CMP not yet implemented."
	6980 Add X8, X8, X28
	6981 Subtract X10, X8, 816
	6982 Subtract X8, X8, 780
	6983 Move X9, [X19]
	6984 Move V3, [X10]
	6985 Move V0, [X8]
	6986 Move X8, [X22]
	6987 Compare X8, 0
	6988 JumpIfEqual {7843}
	6989 Move X8, [X8+56]
	6990 Compare X8, 0
	6991 JumpIfEqual {7843}
	6992 Move W9, [X8+24]
	6993 NotImplemented "Instruction CMP not yet implemented."
	6994 Move X9, [X19]
	6995 NotImplemented "Instruction NOP not yet implemented."
	6996 NotImplemented "Instruction MADD not yet implemented."
	6997 Move X8, [X22]
	6998 Move W12, 376
	6999 Compare X8, 0
	7000 JumpIfEqual {7843}
	7001 Move X8, [X8+56]
	7002 Compare X8, 0
	7003 JumpIfEqual {7843}
	7004 Move X10, [X31+328]
	7005 Move W9, [X8+24]
	7006 NotImplemented "Instruction CMP not yet implemented."
	7007 NotImplemented "Instruction CMP not yet implemented."
	7008 Move X9, X10
	7009 NotImplemented "Instruction CMP not yet implemented."
	7010 Move X9, X24
	7011 Move X10, [X19]
	7012 NotImplemented "Instruction NOP not yet implemented."
	7013 NotImplemented "Instruction MADD not yet implemented."
	7014 Move V0, [X8+332]
	7015 Move V3, [X8+296]
	7016 Move X8, [X10+2312]
	7017 Move X3, [X10+2320]
	7018 Move V6, [X31+140]
	7019 Multiply S1, S11, S6
	7020 Move X9, [X31+144]
	7021 Add S4, S1, S0
	7022 Move V0, [X31+136]
	7023 Move S2, [X31+116]
	7024 Move S1, [X31+120]
	7025 Add X1, X31, 4096
	7026 Move W2, W9
	7027 Move S5, W31
	7028 Add X1, X1, 100
	7029 Move X0, X19
	7030 Move V7, V6
	7031 Move [X31+8], S14
	7032 Move [X31], S6
	7033 NotImplemented "Instruction BLR not yet implemented."
	7034 Move [X31+256], W31
	7035 Move X8, [X22]
	7036 Compare X8, 0
	7037 JumpIfEqual {7843}
	7038 Move X8, [X8+56]
	7039 Move W12, 376
	7040 Compare X8, 0
	7041 JumpIfEqual {7843}
	7042 Move X9, [X8+24]
	7043 NotImplemented "Instruction CMP not yet implemented."
	7044 NotImplemented "Instruction MADD not yet implemented."
	7045 Move W10, [X10+401]
	7046 Move TEMP, X10
	7047 And TEMP, TEMP, 2
	7048 Compare TEMP, 2
	7049 JumpIfEqual {7073}
	7050 Move W8, [X31+244]
	7051 Move TEMP, X8
	7052 And TEMP, TEMP, 1
	7053 Compare TEMP, 1
	7054 JumpIfNotEqual {7070}
	7055 Move X8, [X19]
	7056 Move S2, [X31+172]
	7057 Move S3, [X31+176]
	7058 Move W2, [X31+4176]
	7059 Move S0, [X31+192]
	7060 Move S1, [X31+196]
	7061 Move X9, [X8+2328]
	7062 Move X3, [X8+2336]
	7063 Move V4, [X31+184]
	7064 Add X1, X31, 4096
	7065 Add X1, X1, 100
	7066 Move X0, X19
	7067 Move V5, V2
	7068 NotImplemented "Instruction BLR not yet implemented."
	7069 Move W12, 376
	7070 Move [X31+244], W31
	7071 Move W24, [X31+348]
	7072 Move X27, [X31+360]
	7073 Move W10, [X19+808]
	7074 NotImplemented "Instruction CMP not yet implemented."
	7075 Move W10, [X19+816]
	7076 Move X11, [X31+360]
	7077 NotImplemented "Instruction CMP not yet implemented."
	7078 Move W20, W31
	7079 Move W10, [X31+244]
	7080 Move TEMP, X10
	7081 And TEMP, TEMP, 1
	7082 Compare TEMP, 1
	7083 JumpIfNotEqual {7085}
	7084 Add X13, X31, 4000
	7085 Move W8, [X31+352]
	7086 Move W9, W31
	7087 NotImplemented "Instruction CMP not yet implemented."
	7088 And W8, W8, 0xFFFE
	7089 NotImplemented "Instruction CMP not yet implemented."
	7090 Move X8, [X31+328]
	7091 NotImplemented "Instruction CMP not yet implemented."
	7092 Xor W8, W20, 1
	7093 Move TEMP, X8
	7094 And TEMP, TEMP, 1
	7095 Compare TEMP, 1
	7096 JumpIfEqual {7302}
	7097 Move X8, [X31+328]
	7098 NotImplemented "Instruction CMP not yet implemented."
	7099 Move X8, 0x62C000
	7100 Move X8, [X8+368]
	7101 Move X0, [X8]
	7102 Move W8, [X0+224]
	7103 Compare W8, 0
	7104 JumpIfNotEqual {7106}
	7105 Call 0x1C17DFC
	7106 Move W0, [X31+352]
	7107 Move X1, X31
	7108 Call Char.IsSeparator, X0
	7109 Move W12, 376
	7110 Move TEMP, X0
	7111 And TEMP, TEMP, 1
	7112 Compare TEMP, 1
	7113 JumpIfEqual {7070}
	7114 Move X0, [X29]
	7115 Move W8, [X0+224]
	7116 Compare W8, 0
	7117 JumpIfNotEqual {7121}
	7118 Call 0x1C17DFC
	7119 Move X0, [X29]
	7120 Move W12, 376
	7121 Move X8, [X22]
	7122 Add X13, X31, 4000
	7123 Compare X8, 0
	7124 JumpIfEqual {7843}
	7125 Move X8, [X8+56]
	7126 Compare X8, 0
	7127 JumpIfEqual {7843}
	7128 Move X9, [X8+24]
	7129 NotImplemented "Instruction CMP not yet implemented."
	7130 Move X10, [X0+184]
	7131 NotImplemented "Instruction NOP not yet implemented."
	7132 NotImplemented "Instruction MADD not yet implemented."
	7133 Add X11, X11, 380
	7134 Move V0, [X11]
	7135 Move V2, [X10+5528]
	7136 Move V1, [X10+5532]
	7137 Move W11, [X11+16]
	7138 Move [X31+192], S2
	7139 Move [X31+200], S1
	7140 Move V2, [X10+5536]
	7141 Move V1, [X10+5540]
	7142 Move [X13+11], V0
	7143 Move S0, W31
	7144 Move [X31+4192], W11
	7145 Move [X31+184], S1
	7146 Move [X31+172], S0
	7147 Move [X31+180], S2
	7148 NotImplemented "Instruction CMP not yet implemented."
	7149 NotImplemented "Instruction MADD not yet implemented."
	7150 Add X10, X8, 380
	7151 Move V9, V14
	7152 Move V0, [X13+11]
	7153 Move W9, [X31+4192]
	7154 Move V1, [X8+296]
	7155 Move V12, [X8+392]
	7156 Move X21, [X10]
	7157 Move V14, [X10+8]
	7158 Move V13, [X10+16]
	7159 Move V10, [X8+284]
	7160 Move V8, [X8+328]
	7161 Move V11, [X8+336]
	7162 Add X0, X31, 400
	7163 Add X1, X31, 376
	7164 Move X2, X31
	7165 Move [X31+352], S1
	7166 Move [X31+25], V0
	7167 Move [X31+416], W9
	7168 Move [X31+376], X21
	7169 Move [X31+384], S14
	7170 Move [X31+388], S12
	7171 Move [X31+392], S13
	7172 Call HighlightState.op_Inequality, X0, X1
	7173 Move X8, 0x68F000
	7174 Move X8, [X8+848]
	7175 Move X8, [X8]
	7176 Move W9, [X8+224]
	7177 Move TEMP, X0
	7178 And TEMP, TEMP, 1
	7179 Compare TEMP, 1
	7180 JumpIfNotEqual {7225}
	7181 Move W24, [X31+348]
	7182 Move X27, [X31+360]
	7183 Compare W9, 0
	7184 JumpIfNotEqual {7187}
	7185 Move X0, X8
	7186 Call 0x1C17DFC
	7187 Move V0, [X31+4184]
	7188 Move V2, [X31+176]
	7189 Move V1, [X31+196]
	7190 Move X8, [X19]
	7191 Move W2, [X31+4176]
	7192 Subtract S0, S2, S0
	7193 Add S0, S10, S0
	7194 Move S2, 0.5
	7195 Multiply S10, S0, S2
	7196 Move V0, [X31+184]
	7197 NotImplemented "Instruction FCMP not yet implemented."
	7198 NotImplemented "Instruction FCSEL not yet implemented."
	7199 Move V2, [X31+172]
	7200 NotImplemented "Instruction FCMP not yet implemented."
	7201 Move X9, [X8+2328]
	7202 Move X3, [X8+2336]
	7203 NotImplemented "Instruction FCSEL not yet implemented."
	7204 Move V0, [X31+192]
	7205 Add X1, X31, 4096
	7206 Add X1, X1, 100
	7207 Move X0, X19
	7208 Move V3, V10
	7209 Move V5, V2
	7210 NotImplemented "Instruction BLR not yet implemented."
	7211 Subtract S0, S11, S13
	7212 Move [X31+192], S10
	7213 Move [X31+200], S0
	7214 Move V0, [X31+352]
	7215 Move [X31+4176], X21
	7216 Move [X31+4184], S14
	7217 Move [X31+4188], S12
	7218 Add S6, S0, S14
	7219 Add S0, S8, S12
	7220 Move [X31+184], S0
	7221 Move S0, W31
	7222 Move [X31+4192], S13
	7223 Move [X31+172], S0
	7224 Move [X31+180], S6
	7225 Move W24, [X31+348]
	7226 Move X27, [X31+360]
	7227 Compare W9, 0
	7228 JumpIfNotEqual {7231}
	7229 Move X0, X8
	7230 Call 0x1C17DFC
	7231 Move V2, [X31+4184]
	7232 Move V4, [X31+352]
	7233 Move V0, [X31+4180]
	7234 Move V1, [X31+4192]
	7235 Move V3, [X31+4188]
	7236 Add S2, S4, S2
	7237 Move V4, [X31+192]
	7238 Subtract S0, S10, S0
	7239 Subtract S1, S11, S1
	7240 Add S3, S8, S3
	7241 NotImplemented "Instruction FCMP not yet implemented."
	7242 NotImplemented "Instruction FCSEL not yet implemented."
	7243 Move V0, [X31+196]
	7244 NotImplemented "Instruction FCMP not yet implemented."
	7245 NotImplemented "Instruction FCSEL not yet implemented."
	7246 Move [X31+192], S4
	7247 Move [X31+200], S0
	7248 Move V0, [X31+176]
	7249 NotImplemented "Instruction FCMP not yet implemented."
	7250 NotImplemented "Instruction FCSEL not yet implemented."
	7251 Move [X31+176], S0
	7252 Move V0, [X31+184]
	7253 NotImplemented "Instruction FCMP not yet implemented."
	7254 NotImplemented "Instruction FCSEL not yet implemented."
	7255 Move [X31+184], S0
	7256 Move W8, [X23]
	7257 Move X21, [X31+320]
	7258 Move V14, V9
	7259 NotImplemented "Instruction CMP not yet implemented."
	7260 Move X8, [X31+200]
	7261 NotImplemented "Instruction CMP not yet implemented."
	7262 Move X8, [X31+328]
	7263 NotImplemented "Instruction CMP not yet implemented."
	7264 Move TEMP, X20
	7265 And TEMP, TEMP, 1
	7266 Compare TEMP, 1
	7267 JumpIfNotEqual {7270}
	7268 Move W8, 1
	7269 Move [X31+244], W8
	7270 Move X8, [X19]
	7271 Move S2, [X31+172]
	7272 Move S3, [X31+176]
	7273 Move W2, [X31+4176]
	7274 Move S0, [X31+192]
	7275 Move S1, [X31+196]
	7276 Move X9, [X8+2328]
	7277 Move X3, [X8+2336]
	7278 Move V4, [X31+184]
	7279 Add X1, X31, 4096
	7280 Add X1, X1, 100
	7281 Move X0, X19
	7282 Move V5, V2
	7283 NotImplemented "Instruction BLR not yet implemented."
	7284 Move [X31+244], W31
	7285 Move W12, 376
	7286 Move W8, [X23]
	7287 Move W9, [X31+252]
	7288 Add W10, W24, 1
	7289 Add X28, X28, 376
	7290 NotImplemented "Instruction CMP not yet implemented."
	7291 Add W9, W9, 1
	7292 Move W20, W27
	7293 Move [X31+252], W9
	7294 Move W10, [X19+736]
	7295 NotImplemented "Instruction CMP not yet implemented."
	7296 NotImplemented "Instruction MADD not yet implemented."
	7297 Move W10, [X10+104]
	7298 Move W11, [X19+824]
	7299 Add W10, W10, 1
	7300 NotImplemented "Instruction CMP not yet implemented."
	7301 Move W20, 1
	7302 Move [X31+244], W9
	7303 Move X8, [X22]
	7304 Move W10, 376
	7305 Compare X8, 0
	7306 JumpIfEqual {7843}
	7307 Move X8, [X8+56]
	7308 Compare X8, 0
	7309 JumpIfEqual {7843}
	7310 Move W9, [X8+24]
	7311 NotImplemented "Instruction CMP not yet implemented."
	7312 Move X9, [X19]
	7313 Move S0, [X31+224]
	7314 Move S4, [X31+228]
	7315 NotImplemented "Instruction NOP not yet implemented."
	7316 NotImplemented "Instruction MADD not yet implemented."
	7317 Move V3, [X8+296]
	7318 Move V7, [X8+352]
	7319 Move X8, [X9+2312]
	7320 Move X3, [X9+2320]
	7321 Move [X31+8], S0
	7322 Move S2, [X31+92]
	7323 Move S0, [X31+96]
	7324 Move V1, [X31+88]
	7325 Move V6, [X31+100]
	7326 Add X1, X31, 4096
	7327 Move S5, W31
	7328 Add X1, X1, 100
	7329 Move X0, X19
	7330 Move X2, X28
	7331 Move [X31], S15
	7332 NotImplemented "Instruction BLR not yet implemented."
	7333 Move X0, [X29]
	7334 Move W8, [X0+224]
	7335 Compare W8, 0
	7336 JumpIfNotEqual {7339}
	7337 Call 0x1C17DFC
	7338 Move X0, [X29]
	7339 Move X28, [X31+264]
	7340 Move X10, [X31+320]
	7341 Move W8, [X19+240]
	7342 Move X11, [X31+200]
	7343 Move W29, [X31+352]
	7344 Move W9, [X10+24]
	7345 NotImplemented "Instruction FNEG not yet implemented."
	7346 NotImplemented "Instruction CMP not yet implemented."
	7347 NotImplemented "Instruction FCSEL not yet implemented."
	7348 NotImplemented "Instruction CMP not yet implemented."
	7349 NotImplemented "Instruction MADD not yet implemented."
	7350 Move W10, [X31+32]
	7351 NotImplemented "Instruction INVALID not yet implemented."
	7352 NotImplemented "Instruction SBFM not yet implemented."
	7353 Subtract W10, W10, W22
	7354 Add W10, W10, W21
	7355 Add W9, W9, W10
	7356 Subtract W21, W9, 1
	7357 NotImplemented "Instruction CMP not yet implemented."
	7358 Move V10, [X19+732]
	7359 Move S10, 1
	7360 Move W21, 1
	7361 NotImplemented "Instruction CMP not yet implemented."
	7362 Add S11, S11, S0
	7363 NotImplemented "Instruction CMP not yet implemented."
	7364 Move X8, 0x62B000
	7365 Move X8, [X8+368]
	7366 Move X0, [X8]
	7367 Move W8, [X0+224]
	7368 Compare W8, 0
	7369 JumpIfNotEqual {7371}
	7370 Call 0x1C17DFC
	7371 Move W0, W29
	7372 Move X1, X31
	7373 Call Char.IsSeparator, X0
	7374 Move W8, [X19+240]
	7375 Move V3, [X31+288]
	7376 Move V4, [X31+272]
	7377 Move V5, [X31+44]
	7378 Move W12, 376
	7379 Move TEMP, X0
	7380 And TEMP, TEMP, 1
	7381 Compare TEMP, 1
	7382 JumpIfNotEqual {7387}
	7383 Move S0, 1
	7384 Subtract S0, S0, S10
	7385 Multiply S0, S11, S0
	7386 NotImplemented "Instruction SCVTF not yet implemented."
	7387 Move W9, [X31+32]
	7388 Multiply S0, S11, S10
	7389 NotImplemented "Instruction ORN not yet implemented."
	7390 And W9, W9, 1
	7391 Subtract W9, W22, W9
	7392 Add W9, W9, W27
	7393 NotImplemented "Instruction SCVTF not yet implemented."
	7394 NotImplemented "Instruction FDIV not yet implemented."
	7395 Compare W8, 0
	7396 JumpIfEqual {7400}
	7397 Move V1, [X31+220]
	7398 Subtract S1, S1, S0
	7399 Move [X31+220], S1
	7400 Move V1, [X31+220]
	7401 Add S1, S1, S0
	7402 Move V0, [X31+208]
	7403 Move [X31+220], S1
	7404 NotImplemented "Instruction MOVI not yet implemented."
	7405 Add V0, V0, V1
	7406 Move X9, [X22]
	7407 Compare X9, 0
	7408 JumpIfEqual {7843}
	7409 Move X26, 0x68E000
	7410 Move X26, [X26+840]
	7411 Move W11, [X31+188]
	7412 Add W10, W27, 1
	7413 Move W11, W31
	7414 Move W10, W31
	7415 Move [X9+24], W8
	7416 NotImplemented "Instruction CMP not yet implemented."
	7417 Move W8, [X19+1696]
	7418 NotImplemented "Instruction CCMP not yet implemented."
	7419 Move [X9+44], W10
	7420 NotImplemented "Instruction CSINC not yet implemented."
	7421 Move [X9+28], W8
	7422 Move [X9+36], W10
	7423 Move W8, [X19+1200]
	7424 Add W8, W8, 1
	7425 Move [X9+48], W8
	7426 Move W8, [X19+792]
	7427 NotImplemented "Instruction CMP not yet implemented."
	7428 Move X8, [X19]
	7429 Move X0, X19
	7430 Move X9, [X8+456]
	7431 Move X1, [X8+464]
	7432 NotImplemented "Instruction BLR not yet implemented."
	7433 Move TEMP, X0
	7434 And TEMP, TEMP, 1
	7435 Compare TEMP, 1
	7436 JumpIfNotEqual {4800}
	7437 Move X8, [X19+1784]
	7438 Compare X8, 0
	7439 JumpIfEqual {7445}
	7440 Move X1, [X22]
	7441 Move X9, [X8+24]
	7442 Move X0, [X8+64]
	7443 Move X2, [X8+40]
	7444 NotImplemented "Instruction BLR not yet implemented."
	7445 Move X0, [X19+1832]
	7446 Compare X0, 0
	7447 JumpIfEqual {7843}
	7448 Move X1, X31
	7449 Call Canvas.get_additionalShaderChannels, X0
	7450 NotImplemented "Instruction CMP not yet implemented."
	7451 Move X20, [X19+1832]
	7452 Compare X20, 0
	7453 JumpIfEqual {7843}
	7454 Move X0, X20
	7455 Move X1, X31
	7456 Call Canvas.get_additionalShaderChannels, X0
	7457 Move W8, 25
	7458 Or W1, W0, W8
	7459 Move X0, X20
	7460 Move X2, X31
	7461 Call Canvas.set_additionalShaderChannels, X0, X1
	7462 Move W8, [X19+796]
	7463 Compare W8, 0
	7464 JumpIfEqual {7483}
	7465 Move X8, [X22]
	7466 Compare X8, 0
	7467 JumpIfEqual {7843}
	7468 Move X20, [X8+96]
	7469 Compare X20, 0
	7470 JumpIfEqual {7843}
	7471 Move X0, [X26]
	7472 Move W8, [X0+224]
	7473 Compare W8, 0
	7474 JumpIfNotEqual {7476}
	7475 Call 0x1C17DFC
	7476 Move W8, [X20+24]
	7477 Compare W8, 0
	7478 JumpIfEqual {7905}
	7479 Add X0, X20, 32
	7480 Move W1, 1
	7481 Move X2, X31
	7482 Call TMP_MeshInfo.SortGeometry, X0, X1
	7483 Move X0, [X19+928]
	7484 Compare X0, 0
	7485 JumpIfEqual {7843}
	7486 Move X1, X31
	7487 Call Mesh.MarkDynamic, X0
	7488 Move X8, [X19+872]
	7489 Compare X8, 0
	7490 JumpIfEqual {7843}
	7491 Move X8, [X8+96]
	7492 Compare X8, 0
	7493 JumpIfEqual {7843}
	7494 Move W9, [X8+24]
	7495 Compare W9, 0
	7496 JumpIfEqual {7905}
	7497 Move X0, [X19+928]
	7498 Compare X0, 0
	7499 JumpIfEqual {7843}
	7500 Move X1, [X8+48]
	7501 Move X2, X31
	7502 Call Mesh.set_vertices, X0, X1
	7503 Move X8, [X19+872]
	7504 Compare X8, 0
	7505 JumpIfEqual {7843}
	7506 Move X8, [X8+96]
	7507 Compare X8, 0
	7508 JumpIfEqual {7843}
	7509 Move W9, [X8+24]
	7510 Compare W9, 0
	7511 JumpIfEqual {7905}
	7512 Move X0, [X19+928]
	7513 Compare X0, 0
	7514 JumpIfEqual {7843}
	7515 Move X1, [X8+72]
	7516 Move X2, X31
	7517 Call Mesh.set_uv, X0, X1
	7518 Move X8, [X19+872]
	7519 Compare X8, 0
	7520 JumpIfEqual {7843}
	7521 Move X8, [X8+96]
	7522 Compare X8, 0
	7523 JumpIfEqual {7843}
	7524 Move W9, [X8+24]
	7525 Compare W9, 0
	7526 JumpIfEqual {7905}
	7527 Move X0, [X19+928]
	7528 Compare X0, 0
	7529 JumpIfEqual {7843}
	7530 Move X1, [X8+80]
	7531 Move X2, X31
	7532 Call Mesh.set_uv2, X0, X1
	7533 Move X8, [X19+872]
	7534 Compare X8, 0
	7535 JumpIfEqual {7843}
	7536 Move X8, [X8+96]
	7537 Compare X8, 0
	7538 JumpIfEqual {7843}
	7539 Move W9, [X8+24]
	7540 Compare W9, 0
	7541 JumpIfEqual {7905}
	7542 Move X0, [X19+928]
	7543 Compare X0, 0
	7544 JumpIfEqual {7843}
	7545 Move X1, [X8+88]
	7546 Move X2, X31
	7547 Call Mesh.set_colors32, X0, X1
	7548 Move X0, [X19+928]
	7549 Compare X0, 0
	7550 JumpIfEqual {7843}
	7551 Move X1, X31
	7552 Call Mesh.RecalculateBounds, X0
	7553 Move X0, [X19+1824]
	7554 Compare X0, 0
	7555 JumpIfEqual {7843}
	7556 Move X1, [X19+928]
	7557 Move X2, X31
	7558 Call CanvasRenderer.SetMesh, X0, X1
	7559 Move X0, [X19+1824]
	7560 Compare X0, 0
	7561 JumpIfEqual {7843}
	7562 Move X1, X31
	7563 Call CanvasRenderer.GetColor, X0
	7564 Move X0, [X19+1824]
	7565 Compare X0, 0
	7566 JumpIfEqual {7843}
	7567 Move X1, X31
	7568 Move V8, V0
	7569 Move V9, V1
	7570 Move V10, V2
	7571 Move V11, V3
	7572 Call CanvasRenderer.get_cullTransparentMesh, X0
	7573 Move X8, [X22]
	7574 Compare X8, 0
	7575 JumpIfEqual {7843}
	7576 Move X23, X31
	7577 Move X24, X31
	7578 And W20, W0, 1
	7579 NotImplemented "Instruction LDRSW not yet implemented."
	7580 Add X25, X24, 1
	7581 NotImplemented "Instruction CMP not yet implemented."
	7582 Move X21, [X8+96]
	7583 Compare X21, 0
	7584 JumpIfEqual {7843}
	7585 Move X0, [X26]
	7586 Move W8, [X0+224]
	7587 Compare W8, 0
	7588 JumpIfNotEqual {7590}
	7589 Call 0x1C17DFC
	7590 Move W8, [X21+24]
	7591 NotImplemented "Instruction CMP not yet implemented."
	7592 Add X8, X21, X23
	7593 Add X0, X8, 112
	7594 Move X1, X31
	7595 Call TMP_MeshInfo.ClearUnusedVertices, X0
	7596 Move X8, [X19+1800]
	7597 Compare X8, 0
	7598 JumpIfEqual {7843}
	7599 Move W9, [X8+24]
	7600 NotImplemented "Instruction CMP not yet implemented."
	7601 Move X9, 0x629000
	7602 Move X9, [X9+1432]
	7603 Add X8, X8, X24
	7604 Move X21, [X8+40]
	7605 Move X0, [X9]
	7606 Move W9, [X0+224]
	7607 Compare W9, 0
	7608 JumpIfNotEqual {7610}
	7609 Call 0x1C17DFC
	7610 Move X0, X21
	7611 Move X1, X31
	7612 Move X2, X31
	7613 Call Object.op_Equality, X0, X1
	7614 Move TEMP, X0
	7615 And TEMP, TEMP, 1
	7616 Compare TEMP, 1
	7617 JumpIfEqual {7838}
	7618 Move W8, [X19+796]
	7619 Compare W8, 0
	7620 JumpIfEqual {7639}
	7621 Move X8, [X22]
	7622 Compare X8, 0
	7623 JumpIfEqual {7843}
	7624 Move X21, [X8+96]
	7625 Compare X21, 0
	7626 JumpIfEqual {7843}
	7627 Move X0, [X26]
	7628 Move W8, [X0+224]
	7629 Compare W8, 0
	7630 JumpIfNotEqual {7632}
	7631 Call 0x1C17DFC
	7632 Move W8, [X21+24]
	7633 NotImplemented "Instruction CMP not yet implemented."
	7634 Add X8, X21, X23
	7635 Add X0, X8, 112
	7636 Move W1, 1
	7637 Move X2, X31
	7638 Call TMP_MeshInfo.SortGeometry, X0, X1
	7639 Move X8, [X19+1800]
	7640 Compare X8, 0
	7641 JumpIfEqual {7843}
	7642 Move W9, [X8+24]
	7643 NotImplemented "Instruction CMP not yet implemented."
	7644 Add X8, X8, X24
	7645 Move X0, [X8+40]
	7646 Compare X0, 0
	7647 JumpIfEqual {7843}
	7648 Move X1, X31
	7649 Call TMP_SubMeshUI.get_mesh, X0
	7650 Move X8, [X22]
	7651 Compare X8, 0
	7652 JumpIfEqual {7843}
	7653 Move X8, [X8+96]
	7654 Compare X8, 0
	7655 JumpIfEqual {7843}
	7656 Move W9, [X8+24]
	7657 NotImplemented "Instruction CMP not yet implemented."
	7658 Compare X0, 0
	7659 JumpIfEqual {7843}
	7660 Add X8, X8, X23
	7661 Move X1, [X8+128]
	7662 Move X2, X31
	7663 Call Mesh.set_vertices, X0, X1
	7664 Move X8, [X19+1800]
	7665 Compare X8, 0
	7666 JumpIfEqual {7843}
	7667 Move W9, [X8+24]
	7668 NotImplemented "Instruction CMP not yet implemented."
	7669 Add X8, X8, X24
	7670 Move X0, [X8+40]
	7671 Compare X0, 0
	7672 JumpIfEqual {7843}
	7673 Move X1, X31
	7674 Call TMP_SubMeshUI.get_mesh, X0
	7675 Move X8, [X22]
	7676 Compare X8, 0
	7677 JumpIfEqual {7843}
	7678 Move X8, [X8+96]
	7679 Compare X8, 0
	7680 JumpIfEqual {7843}
	7681 Move W9, [X8+24]
	7682 NotImplemented "Instruction CMP not yet implemented."
	7683 Compare X0, 0
	7684 JumpIfEqual {7843}
	7685 Add X8, X8, X23
	7686 Move X1, [X8+152]
	7687 Move X2, X31
	7688 Call Mesh.set_uv, X0, X1
	7689 Move X8, [X19+1800]
	7690 Compare X8, 0
	7691 JumpIfEqual {7843}
	7692 Move W9, [X8+24]
	7693 NotImplemented "Instruction CMP not yet implemented."
	7694 Add X8, X8, X24
	7695 Move X0, [X8+40]
	7696 Compare X0, 0
	7697 JumpIfEqual {7843}
	7698 Move X1, X31
	7699 Call TMP_SubMeshUI.get_mesh, X0
	7700 Move X8, [X22]
	7701 Compare X8, 0
	7702 JumpIfEqual {7843}
	7703 Move X8, [X8+96]
	7704 Compare X8, 0
	7705 JumpIfEqual {7843}
	7706 Move W9, [X8+24]
	7707 NotImplemented "Instruction CMP not yet implemented."
	7708 Compare X0, 0
	7709 JumpIfEqual {7843}
	7710 Add X8, X8, X23
	7711 Move X1, [X8+160]
	7712 Move X2, X31
	7713 Call Mesh.set_uv2, X0, X1
	7714 Move X8, [X19+1800]
	7715 Compare X8, 0
	7716 JumpIfEqual {7843}
	7717 Move W9, [X8+24]
	7718 NotImplemented "Instruction CMP not yet implemented."
	7719 Add X8, X8, X24
	7720 Move X0, [X8+40]
	7721 Compare X0, 0
	7722 JumpIfEqual {7843}
	7723 Move X1, X31
	7724 Call TMP_SubMeshUI.get_mesh, X0
	7725 Move X8, [X22]
	7726 Compare X8, 0
	7727 JumpIfEqual {7843}
	7728 Move X8, [X8+96]
	7729 Compare X8, 0
	7730 JumpIfEqual {7843}
	7731 Move W9, [X8+24]
	7732 NotImplemented "Instruction CMP not yet implemented."
	7733 Compare X0, 0
	7734 JumpIfEqual {7843}
	7735 Add X8, X8, X23
	7736 Move X1, [X8+168]
	7737 Move X2, X31
	7738 Call Mesh.set_colors32, X0, X1
	7739 Move X8, [X19+1800]
	7740 Compare X8, 0
	7741 JumpIfEqual {7843}
	7742 Move W9, [X8+24]
	7743 NotImplemented "Instruction CMP not yet implemented."
	7744 Add X8, X8, X24
	7745 Move X0, [X8+40]
	7746 Compare X0, 0
	7747 JumpIfEqual {7843}
	7748 Move X1, X31
	7749 Call TMP_SubMeshUI.get_mesh, X0
	7750 Compare X0, 0
	7751 JumpIfEqual {7843}
	7752 Move X1, X31
	7753 Call Mesh.RecalculateBounds, X0
	7754 Move X8, [X19+1800]
	7755 Compare X8, 0
	7756 JumpIfEqual {7843}
	7757 Move W9, [X8+24]
	7758 NotImplemented "Instruction CMP not yet implemented."
	7759 Add X8, X8, X24
	7760 Move X0, [X8+40]
	7761 Compare X0, 0
	7762 JumpIfEqual {7843}
	7763 Move X1, X31
	7764 Call Graphic.get_canvasRenderer, X0
	7765 Move X8, [X19+1800]
	7766 Compare X8, 0
	7767 JumpIfEqual {7843}
	7768 Move W9, [X8+24]
	7769 NotImplemented "Instruction CMP not yet implemented."
	7770 Add X8, X8, X24
	7771 Move X21, X0
	7772 Move X0, [X8+40]
	7773 Compare X0, 0
	7774 JumpIfEqual {7843}
	7775 Move X1, X31
	7776 Call TMP_SubMeshUI.get_mesh, X0
	7777 Compare X21, 0
	7778 JumpIfEqual {7843}
	7779 Move X1, X0
	7780 Move X0, X21
	7781 Move X2, X31
	7782 Call CanvasRenderer.SetMesh, X0, X1
	7783 Move X8, [X19+1800]
	7784 Compare X8, 0
	7785 JumpIfEqual {7843}
	7786 Move W9, [X8+24]
	7787 NotImplemented "Instruction CMP not yet implemented."
	7788 Add X8, X8, X24
	7789 Move X0, [X8+40]
	7790 Compare X0, 0
	7791 JumpIfEqual {7843}
	7792 Move X1, X31
	7793 Call Graphic.get_canvasRenderer, X0
	7794 Compare X0, 0
	7795 JumpIfEqual {7843}
	7796 Move V0, V8
	7797 Move V1, V9
	7798 Move V2, V10
	7799 Move V3, V11
	7800 Move X1, X31
	7801 Call CanvasRenderer.SetColor, X0, X1
	7802 Move X8, [X19+1800]
	7803 Compare X8, 0
	7804 JumpIfEqual {7843}
	7805 Move W9, [X8+24]
	7806 NotImplemented "Instruction CMP not yet implemented."
	7807 Add X8, X8, X24
	7808 Move X0, [X8+40]
	7809 Compare X0, 0
	7810 JumpIfEqual {7843}
	7811 Move X1, X31
	7812 Call Graphic.get_canvasRenderer, X0
	7813 Compare X0, 0
	7814 JumpIfEqual {7843}
	7815 Move W1, W20
	7816 Move X2, X31
	7817 Call CanvasRenderer.set_cullTransparentMesh, X0, X1
	7818 Move X8, [X19+1800]
	7819 Compare X8, 0
	7820 JumpIfEqual {7843}
	7821 Move W9, [X8+24]
	7822 NotImplemented "Instruction CMP not yet implemented."
	7823 Move X9, [X19]
	7824 Add X8, X8, X24
	7825 Move X21, [X8+40]
	7826 Move X0, X19
	7827 Move X8, [X9+696]
	7828 Move X1, [X9+704]
	7829 NotImplemented "Instruction BLR not yet implemented."
	7830 Compare X21, 0
	7831 JumpIfEqual {7843}
	7832 Move X8, [X21]
	7833 And W1, W0, 1
	7834 Move X0, X21
	7835 Move X9, [X8+712]
	7836 Move X2, [X8+720]
	7837 NotImplemented "Instruction BLR not yet implemented."
	7838 Move X8, [X22]
	7839 Add X24, X24, 1
	7840 Add X23, X23, 80
	7841 Compare X8, 0
	7842 JumpIfNotEqual {7579}
	7843 Call 0x1C17F20
	7844 Move V2, [X19+576]
	7845 Move X8, -50200576
	7846 Move V3, [X8+512]
	7847 Move S4, 0.5
	7848 Subtract S2, S1, S2
	7849 Multiply S2, S2, S4
	7850 NotImplemented "Instruction FMAXNM not yet implemented."
	7851 Move [X19+572], S1
	7852 Move S3, 20
	7853 Subtract S1, S1, S2
	7854 Multiply S1, S1, S3
	7855 Move X8, -50200576
	7856 Add S1, S1, S4
	7857 Move V2, [X8+1056]
	7858 NotImplemented "Instruction FCVTZS not yet implemented."
	7859 NotImplemented "Instruction SCVTF not yet implemented."
	7860 Move W8, 0x7F800000
	7861 NotImplemented "Instruction FDIV not yet implemented."
	7862 Move S4, W8
	7863 NotImplemented "Instruction FCMP not yet implemented."
	7864 NotImplemented "Instruction FCSEL not yet implemented."
	7865 NotImplemented "Instruction FCMP not yet implemented."
	7866 NotImplemented "Instruction FCSEL not yet implemented."
	7867 Move X8, -50200576
	7868 Move V3, [X8+752]
	7869 Move V4, [X31+232]
	7870 NotImplemented "Instruction FDIV not yet implemented."
	7871 NotImplemented "Instruction FCMP not yet implemented."
	7872 NotImplemented "Instruction FCSEL not yet implemented."
	7873 Add S3, S4, S3
	7874 Multiply S3, S12, S3
	7875 Subtract S3, S11, S3
	7876 NotImplemented "Instruction FDIV not yet implemented."
	7877 Add S1, S2, S1
	7878 NotImplemented "Instruction FCMP not yet implemented."
	7879 NotImplemented "Instruction FCSEL not yet implemented."
	7880 Move [X19+724], S0
	7881 NotImplemented "Instruction FCMP not yet implemented."
	7882 Move V2, V11
	7883 Move S2, 1
	7884 Subtract S2, S2, S1
	7885 NotImplemented "Instruction FDIV not yet implemented."
	7886 Move X8, -50200576
	7887 Move V3, [X8+752]
	7888 Move V4, [X31+232]
	7889 Add S3, S4, S3
	7890 Multiply S3, S12, S3
	7891 Subtract S3, S11, S3
	7892 NotImplemented "Instruction FDIV not yet implemented."
	7893 Add S1, S1, S2
	7894 Move W8, [X19+1192]
	7895 Move V2, [X31+32]
	7896 Add W8, W8, 1
	7897 Subtract S2, S2, S10
	7898 NotImplemented "Instruction SCVTF not yet implemented."
	7899 NotImplemented "Instruction FDIV not yet implemented."
	7900 Move V3, [X31+88]
	7901 NotImplemented "Instruction FDIV not yet implemented."
	7902 Add S1, S1, S2
	7903 NotImplemented "Instruction FCMP not yet implemented."
	7904 NotImplemented "Instruction FCSEL not yet implemented."
	7905 Call 0x1C17F28

Method: UnityEngine.Vector3[] GetTextContainerLocalCorners()

Disassembly:
	0x03ADA0C4 STP X20, X19, [X31 + 0x20]
	0x03ADA0C8 ADRP X23, 0x908000
	0x03ADA0CC ADRP X22, 0x67E000
	0x03ADA0D0 LDRB W8, [X23 + 0x538]
	0x03ADA0D4 LDR X22, [X22 + 0x3F0]
	0x03ADA0D8 MOV X19, X2
	0x03ADA0DC MOV X20, X1
	0x03ADA0E0 MOV X21, X0
	0x03ADA0E4 TBNZ X8, 0x0, 0x3ADA108
	0x03ADA0E8 ADRP X0, 0x67E000
	0x03ADA0EC LDR X0, [X0 + 0x7D0]
	0x03ADA0F0 BL 0x1C16CF4
	0x03ADA0F4 ADRP X0, 0x67E000
	0x03ADA0F8 LDR X0, [X0 + 0x3F0]
	0x03ADA0FC BL 0x1C16CF4
	0x03ADA100 MOVZ W8, 0x1
	0x03ADA104 STRB W8, [X23 + 0x538]
	0x03ADA108 LDR X0, [X22]
	0x03ADA10C LDR W8, [X0 + 0xE0]
	0x03ADA110 CBNZ W8, 0x3ADA11C
	0x03ADA114 BL 0x1C16DFC
	0x03ADA118 LDR X0, [X22]
	0x03ADA11C LDR X8, [X0 + 0xB8]
	0x03ADA120 LDR X0, [X8 + 0x28]
	0x03ADA124 CBZ X0, 0x3ADA150
	0x03ADA128 ADRP X8, 0x67E000
	0x03ADA12C LDR X8, [X8 + 0x7D0]
	0x03ADA130 MOV X1, X21
	0x03ADA134 MOV X2, X20
	0x03ADA138 MOV X3, X19
	0x03ADA13C LDR X4, [X8]
	0x03ADA140 LDP X20, X19, [X31 + 0x20]
	0x03ADA144 LDP X22, X21, [X31 + 0x10]
	0x03ADA148 LDP X30, X23, [X31], #0x30
	0x03ADA14C B 0x2D124F0
	0x03ADA150 BL 0x1C16F20
	0x03ADA154 STP X30, X21, [X31 - 0x20]!
	0x03ADA158 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x909000
	006 Move X20, 0x61A000
	007 Move W8, [X21+1323]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x61A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1323], W8
	019 Move X0, [X20]
	020 Move X20, [X19+896]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {37}
	033 Move X0, X19
	034 Move X1, X31
	035 Call TMP_Text.get_rectTransform, X0
	036 Move [X19+896], X0
	037 Move X0, [X19+896]
	038 Compare X0, 0
	039 JumpIfEqual {49}
	040 Move X1, [X19+1816]
	041 Move X2, X31
	042 Call RectTransform.GetLocalCorners, X0, X1
	043 Move X0, [X19+1816]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void SetActiveSubMeshes(System.Boolean state)

Disassembly:
	0x03ADA15C ADRP X21, 0x908000
	0x03ADA160 ADRP X20, 0x67E000
	0x03ADA164 LDRB W8, [X21 + 0x539]
	0x03ADA168 LDR X20, [X20 + 0x3F0]
	0x03ADA16C MOV W19, W0
	0x03ADA170 TBNZ X8, 0x0, 0x3ADA194
	0x03ADA174 ADRP X0, 0x67E000
	0x03ADA178 LDR X0, [X0 + 0x7D8]
	0x03ADA17C BL 0x1C16CF4
	0x03ADA180 ADRP X0, 0x67E000
	0x03ADA184 LDR X0, [X0 + 0x3F0]
	0x03ADA188 BL 0x1C16CF4
	0x03ADA18C MOVZ W8, 0x1
	0x03ADA190 STRB W8, [X21 + 0x539]
	0x03ADA194 LDR X0, [X20]
	0x03ADA198 LDR W8, [X0 + 0xE0]
	0x03ADA19C CBNZ W8, 0x3ADA1A8
	0x03ADA1A0 BL 0x1C16DFC
	0x03ADA1A4 LDR X0, [X20]
	0x03ADA1A8 LDR X8, [X0 + 0xB8]
	0x03ADA1AC LDR X0, [X8 + 0x30]
	0x03ADA1B0 CBZ X0, 0x3ADA1D0
	0x03ADA1B4 ADRP X8, 0x67E000
	0x03ADA1B8 LDR X8, [X8 + 0x7D8]
	0x03ADA1BC AND W1, W19, 0x1
	0x03ADA1C0 LDP X20, X19, [X31 + 0x10]
	0x03ADA1C4 LDR X2, [X8]
	0x03ADA1C8 LDP X30, X21, [X31], #0x20
	0x03ADA1CC B 0x2D11564
	0x03ADA1D0 BL 0x1C16F20
	0x03ADA1D4 STP X30, X21, [X31 - 0x20]!
	0x03ADA1D8 STP X20, X19, [X31 + 0x10]
	0x03ADA1DC ADRP X21, 0x908000
	0x03ADA1E0 ADRP X20, 0x67E000
	0x03ADA1E4 LDRB W8, [X21 + 0x53A]
	0x03ADA1E8 LDR X20, [X20 + 0x3F0]
	0x03ADA1EC MOV X19, X0
	0x03ADA1F0 TBNZ X8, 0x0, 0x3ADA214
	0x03ADA1F4 ADRP X0, 0x67E000
	0x03ADA1F8 LDR X0, [X0 + 0x7E0]
	0x03ADA1FC BL 0x1C16CF4
	0x03ADA200 ADRP X0, 0x67E000
	0x03ADA204 LDR X0, [X0 + 0x3F0]
	0x03ADA208 BL 0x1C16CF4
	0x03ADA20C MOVZ W8, 0x1
	0x03ADA210 STRB W8, [X21 + 0x53A]
	0x03ADA214 LDR X0, [X20]
	0x03ADA218 LDR W8, [X0 + 0xE0]
	0x03ADA21C CBNZ W8, 0x3ADA228
	0x03ADA220 BL 0x1C16DFC
	0x03ADA224 LDR X0, [X20]
	0x03ADA228 LDR X8, [X0 + 0xB8]
	0x03ADA22C LDR X0, [X8 + 0x38]
	0x03ADA230 CBZ X0, 0x3ADA250
	0x03ADA234 ADRP X8, 0x67E000
	0x03ADA238 LDR X8, [X8 + 0x7E0]
	0x03ADA23C MOV X1, X19
	0x03ADA240 LDP X20, X19, [X31 + 0x10]
	0x03ADA244 LDR X2, [X8]
	0x03ADA248 LDP X30, X21, [X31], #0x20
	0x03ADA24C B 0x2D11774
	0x03ADA250 BL 0x1C16F20
	0x03ADA254 STP X30, X21, [X31 - 0x20]!
	0x03ADA258 STP X20, X19, [X31 + 0x10]
	0x03ADA25C ADRP X21, 0x908000
	0x03ADA260 ADRP X20, 0x67E000
	0x03ADA264 LDRB W8, [X21 + 0x53B]
	0x03ADA268 LDR X20, [X20 + 0x3F0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x909000
	009 Move W8, [X21+1324]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x61A000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1324], W8
	021 Move X8, [X20+1800]
	022 Compare X8, 0
	023 JumpIfEqual {73}
	024 Move X22, 0x61A000
	025 Move X22, [X22+1432]
	026 Move W23, 5
	027 Move W9, [X8+24]
	028 Subtract X24, X23, 4
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X0, [X22]
	032 Move X21, [X8]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X21
	038 Move X1, X31
	039 Move X2, X31
	040 Call Object.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {74}
	045 Move X8, [X20+1800]
	046 Compare X8, 0
	047 JumpIfEqual {73}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X8]
	051 Compare X0, 0
	052 JumpIfEqual {73}
	053 Move X1, X31
	054 Call Behaviour.get_enabled, X0
	055 And W8, W0, 1
	056 And W9, W19, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X20+1800]
	059 Compare X8, 0
	060 JumpIfEqual {73}
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X8]
	064 Compare X0, 0
	065 JumpIfEqual {73}
	066 And W1, W19, 1
	067 Move X2, X31
	068 Call Behaviour.set_enabled, X0, X1
	069 Move X8, [X20+1800]
	070 Add X23, X23, 1
	071 Compare X8, 0
	072 JumpIfNotEqual {27}
	073 Call 0x1C17F20
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 Return 
	082 Call 0x1C17F28

Method: System.Void DestroySubMeshObjects()

Disassembly:
	0x03ADA26C MOV X19, X0
	0x03ADA270 TBNZ X8, 0x0, 0x3ADA294
	0x03ADA274 ADRP X0, 0x67E000
	0x03ADA278 LDR X0, [X0 + 0x7E0]
	0x03ADA27C BL 0x1C16CF4
	0x03ADA280 ADRP X0, 0x67E000
	0x03ADA284 LDR X0, [X0 + 0x3F0]
	0x03ADA288 BL 0x1C16CF4
	0x03ADA28C MOVZ W8, 0x1
	0x03ADA290 STRB W8, [X21 + 0x53B]
	0x03ADA294 LDR X0, [X20]
	0x03ADA298 LDR W8, [X0 + 0xE0]
	0x03ADA29C CBNZ W8, 0x3ADA2A8
	0x03ADA2A0 BL 0x1C16DFC
	0x03ADA2A4 LDR X0, [X20]
	0x03ADA2A8 LDR X8, [X0 + 0xB8]
	0x03ADA2AC LDR X0, [X8 + 0x58]
	0x03ADA2B0 CBZ X0, 0x3ADA2D0
	0x03ADA2B4 ADRP X8, 0x67E000
	0x03ADA2B8 LDR X8, [X8 + 0x7E0]
	0x03ADA2BC MOV X1, X19
	0x03ADA2C0 LDP X20, X19, [X31 + 0x10]
	0x03ADA2C4 LDR X2, [X8]
	0x03ADA2C8 LDP X30, X21, [X31], #0x20
	0x03ADA2CC B 0x2D11774
	0x03ADA2D0 BL 0x1C16F20
	0x03ADA2D4 STR X30, [X31 - 0x20]!
	0x03ADA2D8 STP X20, X19, [X31 + 0x10]
	0x03ADA2DC ADRP X20, 0x908000
	0x03ADA2E0 ADRP X19, 0x67E000
	0x03ADA2E4 LDRB W8, [X20 + 0x53C]
	0x03ADA2E8 LDR X19, [X19 + 0x3F0]
	0x03ADA2EC TBNZ X8, 0x0, 0x3ADA304
	0x03ADA2F0 ADRP X0, 0x67E000
	0x03ADA2F4 LDR X0, [X0 + 0x3F0]
	0x03ADA2F8 BL 0x1C16CF4
	0x03ADA2FC MOVZ W8, 0x1
	0x03ADA300 STRB W8, [X20 + 0x53C]
	0x03ADA304 LDR X0, [X19]
	0x03ADA308 LDR W8, [X0 + 0xE0]
	0x03ADA30C CBNZ W8, 0x3ADA318
	0x03ADA310 BL 0x1C16DFC
	0x03ADA314 LDR X0, [X19]
	0x03ADA318 LDR X8, [X0 + 0xB8]
	0x03ADA31C LDR X0, [X8 + 0x40]
	0x03ADA320 CBZ X0, 0x3ADA330
	0x03ADA324 LDP X20, X19, [X31 + 0x10]
	0x03ADA328 LDR X30, [X31], #0x20
	0x03ADA32C B 0x3ACAA04
	0x03ADA330 BL 0x1C16F20
	0x03ADA334 STR X30, [X31 - 0x20]!
	0x03ADA338 STP X20, X19, [X31 + 0x10]
	0x03ADA33C ADRP X20, 0x908000
	0x03ADA340 ADRP X19, 0x67E000
	0x03ADA344 LDRB W8, [X20 + 0x53D]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x909000
	008 Move W8, [X20+1325]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x61A000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1325], W8
	019 Move X8, [X19+1800]
	020 Compare X8, 0
	021 JumpIfEqual {61}
	022 Move X21, 0x61A000
	023 Move X21, [X21+1432]
	024 Move W22, 5
	025 Move W9, [X8+24]
	026 Subtract X23, X22, 4
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X21]
	030 Move X20, [X8]
	031 Move W9, [X0+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Inequality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {62}
	043 Move X8, [X19+1800]
	044 Compare X8, 0
	045 JumpIfEqual {61}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, [X21]
	049 Move X20, [X8]
	050 Move W9, [X0+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X31
	056 Call Object.DestroyImmediate, X0
	057 Move X8, [X19+1800]
	058 Add X22, X22, 1
	059 Compare X8, 0
	060 JumpIfNotEqual {25}
	061 Call 0x1C17F20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 
	069 Call 0x1C17F28

Method: UnityEngine.Bounds GetCompoundBounds()

Disassembly:
	0x03ADA348 LDR X19, [X19 + 0x3F0]
	0x03ADA34C TBNZ X8, 0x0, 0x3ADA364
	0x03ADA350 ADRP X0, 0x67E000
	0x03ADA354 LDR X0, [X0 + 0x3F0]
	0x03ADA358 BL 0x1C16CF4
	0x03ADA35C MOVZ W8, 0x1
	0x03ADA360 STRB W8, [X20 + 0x53D]
	0x03ADA364 LDR X0, [X19]
	0x03ADA368 LDR W8, [X0 + 0xE0]
	0x03ADA36C CBNZ W8, 0x3ADA378
	0x03ADA370 BL 0x1C16DFC
	0x03ADA374 LDR X0, [X19]
	0x03ADA378 LDR X8, [X0 + 0xB8]
	0x03ADA37C LDR X0, [X8 + 0x48]
	0x03ADA380 CBZ X0, 0x3ADA390
	0x03ADA384 LDP X20, X19, [X31 + 0x10]
	0x03ADA388 LDR X30, [X31], #0x20
	0x03ADA38C B 0x3ACAA04
	0x03ADA390 BL 0x1C16F20
	0x03ADA394 STR X30, [X31 - 0x30]!
	0x03ADA398 STP X22, X21, [X31 + 0x10]
	0x03ADA39C STP X20, X19, [X31 + 0x20]
	0x03ADA3A0 ADRP X22, 0x908000
	0x03ADA3A4 ADRP X21, 0x67E000
	0x03ADA3A8 LDRB W8, [X22 + 0x53E]
	0x03ADA3AC LDR X21, [X21 + 0x3F0]
	0x03ADA3B0 MOV X19, X1
	0x03ADA3B4 MOV W20, W0
	0x03ADA3B8 TBNZ X8, 0x0, 0x3ADA3DC
	0x03ADA3BC ADRP X0, 0x67E000
	0x03ADA3C0 LDR X0, [X0 + 0x7C8]
	0x03ADA3C4 BL 0x1C16CF4
	0x03ADA3C8 ADRP X0, 0x67E000
	0x03ADA3CC LDR X0, [X0 + 0x3F0]
	0x03ADA3D0 BL 0x1C16CF4
	0x03ADA3D4 MOVZ W8, 0x1
	0x03ADA3D8 STRB W8, [X22 + 0x53E]
	0x03ADA3DC LDR X0, [X21]
	0x03ADA3E0 LDR W8, [X0 + 0xE0]
	0x03ADA3E4 CBNZ W8, 0x3ADA3F0
	0x03ADA3E8 BL 0x1C16DFC
	0x03ADA3EC LDR X0, [X21]
	0x03ADA3F0 LDR X8, [X0 + 0xB8]
	0x03ADA3F4 LDR X0, [X8 + 0x50]
	0x03ADA3F8 CBZ X0, 0x3ADA420
	0x03ADA3FC ADRP X8, 0x67E000
	0x03ADA400 LDR X8, [X8 + 0x7C8]
	0x03ADA404 AND W1, W20, 0x1
	0x03ADA408 MOV X2, X19
	0x03ADA40C LDP X20, X19, [X31 + 0x20]
	0x03ADA410 LDR X3, [X8]
	0x03ADA414 LDP X22, X21, [X31 + 0x10]
	0x03ADA418 LDR X30, [X31], #0x30
	0x03ADA41C B 0x2D11CEC
	0x03ADA420 BL 0x1C16F20
	0x03ADA424 STR X30, [X31 - 0x30]!
	0x03ADA428 STP X22, X21, [X31 + 0x10]
	0x03ADA42C STP X20, X19, [X31 + 0x20]
	0x03ADA430 ADRP X22, 0x908000
	0x03ADA434 ADRP X21, 0x67E000
	0x03ADA438 LDRB W8, [X22 + 0x53F]
	0x03ADA43C LDR X21, [X21 + 0x3F0]
	0x03ADA440 MOV X19, X1
	0x03ADA444 MOV X20, X0
	0x03ADA448 TBNZ X8, 0x0, 0x3ADA46C
	0x03ADA44C ADRP X0, 0x67E000
	0x03ADA450 LDR X0, [X0 + 0x7E8]
	0x03ADA454 BL 0x1C16CF4
	0x03ADA458 ADRP X0, 0x67E000
	0x03ADA45C LDR X0, [X0 + 0x3F0]
	0x03ADA460 BL 0x1C16CF4
	0x03ADA464 MOVZ W8, 0x1
	0x03ADA468 STRB W8, [X22 + 0x53F]
	0x03ADA46C LDR X0, [X21]
	0x03ADA470 LDR W8, [X0 + 0xE0]
	0x03ADA474 CBNZ W8, 0x3ADA480
	0x03ADA478 BL 0x1C16DFC
	0x03ADA47C LDR X0, [X21]
	0x03ADA480 LDR X8, [X0 + 0xB8]
	0x03ADA484 LDR X0, [X8]
	0x03ADA488 CBZ X0, 0x3ADA4B0
	0x03ADA48C ADRP X8, 0x67E000
	0x03ADA490 LDR X8, [X8 + 0x7E8]
	0x03ADA494 MOV X1, X20
	0x03ADA498 MOV X2, X19
	0x03ADA49C LDP X20, X19, [X31 + 0x20]
	0x03ADA4A0 LDR X3, [X8]
	0x03ADA4A4 LDP X22, X21, [X31 + 0x10]
	0x03ADA4A8 LDR X30, [X31], #0x30
	0x03ADA4AC B 0x2D11F0C
	0x03ADA4B0 BL 0x1C16F20
	0x03ADA4B4 STP X29, X30, [X31 - 0x60]!
	0x03ADA4B8 STP X28, X27, [X31 + 0x10]
	0x03ADA4BC STP X26, X25, [X31 + 0x20]
	0x03ADA4C0 STP X24, X23, [X31 + 0x30]
	0x03ADA4C4 STP X22, X21, [X31 + 0x40]
	0x03ADA4C8 STP X20, X19, [X31 + 0x50]
	0x03ADA4CC ADRP X28, 0x908000
	0x03ADA4D0 ADRP X29, 0x67E000
	0x03ADA4D4 ADRP X19, 0x67E000
	0x03ADA4D8 ADRP X20, 0x67E000
	0x03ADA4DC ADRP X27, 0x67E000
	0x03ADA4E0 ADRP X26, 0x67E000
	0x03ADA4E4 ADRP X24, 0x67E000
	0x03ADA4E8 ADRP X23, 0x67E000
	0x03ADA4EC ADRP X22, 0x67E000
	0x03ADA4F0 ADRP X21, 0x67E000
	0x03ADA4F4 ADRP X25, 0x67E000
	0x03ADA4F8 LDR X29, [X29 + 0x7F0]
	0x03ADA4FC LDR X19, [X19 + 0x7F8]
	0x03ADA500 LDR X20, [X20 + 0x3F0]
	0x03ADA504 LDR X27, [X27 + 0x800]
	0x03ADA508 LDR X26, [X26 + 0x808]
	0x03ADA50C LDR X24, [X24 + 0x810]
	0x03ADA510 LDR X23, [X23 + 0x818]
	0x03ADA514 LDRB W8, [X28 + 0x540]
	0x03ADA518 LDR X22, [X22 + 0x820]
	0x03ADA51C LDR X21, [X21 + 0x828]
	0x03ADA520 LDR X25, [X25 + 0x830]
	0x03ADA524 TBNZ X8, 0x0, 0x3ADA5D8
	0x03ADA528 ADRP X0, 0x67E000
	0x03ADA52C LDR X0, [X0 + 0x828]
	0x03ADA530 BL 0x1C16CF4
	0x03ADA534 ADRP X0, 0x67E000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X30
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X21, 0x909000
	014 Move W9, [X21+1326]
	015 Move X20, X0
	016 Move X19, X8
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x61A000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1326], W8
	026 Move X0, [X20+928]
	027 Compare X0, 0
	028 JumpIfEqual {117}
	029 Add X8, X31, 8
	030 Move X1, X31
	031 Call Mesh.get_bounds, X0
	032 Move S0, [X31+8]
	033 Move S1, [X31+12]
	034 Move S2, [X31+16]
	035 Move S3, [X31+20]
	036 Move S4, [X31+24]
	037 Move S5, [X31+28]
	038 Subtract S6, S0, S3
	039 Subtract S7, S1, S4
	040 Subtract S16, S2, S5
	041 Add S0, S0, S3
	042 Add S1, S1, S4
	043 Add S2, S2, S5
	044 Move [X31+48], S6
	045 Move [X31+56], S7
	046 Move [X31+56], S16
	047 Move [X31+32], S0
	048 Move [X31+40], S1
	049 Move [X31+40], S2
	050 Move X8, [X20+1800]
	051 Compare X8, 0
	052 JumpIfEqual {117}
	053 Move X22, 0x61A000
	054 Move S11, [X31+48]
	055 Move S10, [X31+52]
	056 Move S9, [X31+32]
	057 Move S8, [X31+36]
	058 Move X22, [X22+1432]
	059 Move W23, 5
	060 Move W9, [X8+24]
	061 Subtract X24, X23, 4
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X22]
	065 Move X21, [X8]
	066 Move W9, [X0+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {118}
	078 Move X8, [X20+1800]
	079 Compare X8, 0
	080 JumpIfEqual {154}
	081 Move W9, [X8+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, [X8]
	084 Compare X0, 0
	085 JumpIfEqual {154}
	086 Move X1, X31
	087 Call TMP_SubMeshUI.get_mesh, X0
	088 Compare X0, 0
	089 JumpIfEqual {154}
	090 Add X8, X31, 8
	091 Move X1, X31
	092 Call Mesh.get_bounds, X0
	093 Move S0, [X31+8]
	094 Move S1, [X31+12]
	095 Move S2, [X31+20]
	096 Move S3, [X31+24]
	097 Move X8, [X20+1800]
	098 Add X23, X23, 1
	099 Subtract S4, S0, S2
	100 Subtract S5, S1, S3
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Add S0, S0, S2
	103 NotImplemented "Instruction FCSEL not yet implemented."
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Add S1, S1, S3
	106 NotImplemented "Instruction FCSEL not yet implemented."
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 NotImplemented "Instruction FCSEL not yet implemented."
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 NotImplemented "Instruction FCSEL not yet implemented."
	111 Compare X8, 0
	112 JumpIfNotEqual {60}
	113 Move [X31+48], S11
	114 Move [X31+56], S10
	115 Move [X31+32], S9
	116 Move [X31+40], S8
	117 Call 0x1C17F20
	118 Move V0, [X31+56]
	119 Move V1, [X31+40]
	120 Add S2, S11, S9
	121 Add S3, S10, S8
	122 Subtract S4, S9, S11
	123 Move S5, 0.5
	124 Subtract S6, S8, S10
	125 Add S0, S0, S1
	126 Multiply S2, S2, S5
	127 Multiply S3, S3, S5
	128 Multiply S4, S4, S5
	129 Multiply S6, S6, S5
	130 Multiply S0, S0, S5
	131 Move [X31+48], S11
	132 Move [X31+56], S10
	133 Move [X31+32], S9
	134 Move [X31+40], S8
	135 Move [X19], S2
	136 Move [X19+8], S3
	137 Move [X19+12], S4
	138 Move [X19+20], S6
	139 Move [X19+8], S0
	140 Move [X19+20], W31
	141 Move X20, [X31+144]
	142 Move X19, [X31+152]
	143 Move X22, [X31+128]
	144 Move X21, [X31+136]
	145 Move X24, [X31+112]
	146 Move X23, [X31+120]
	147 Move X30, [X31+96]
	148 Move D9, [X31+80]
	149 Move D8, [X31+88]
	150 Move D11, [X31+64]
	151 Move D10, [X31+72]
	152 Add X31, X31, 160
	153 Return X0
	154 Move [X31+48], S11
	155 Move [X31+56], S10
	156 Move [X31+32], S9
	157 Move [X31+40], S8
	158 Call 0x1C17F20
	159 Move [X31+48], S11
	160 Move [X31+56], S10
	161 Move [X31+32], S9
	162 Move [X31+40], S8
	163 Call 0x1C17F28

Method: UnityEngine.Rect GetCanvasSpaceClippingRect()

Disassembly:
	0x03ADA538 LDR X0, [X0 + 0x838]
	0x03ADA53C BL 0x1C16CF4
	0x03ADA540 ADRP X0, 0x67E000
	0x03ADA544 LDR X0, [X0 + 0x820]
	0x03ADA548 BL 0x1C16CF4
	0x03ADA54C ADRP X0, 0x67E000
	0x03ADA550 LDR X0, [X0 + 0x840]
	0x03ADA554 BL 0x1C16CF4
	0x03ADA558 ADRP X0, 0x67E000
	0x03ADA55C LDR X0, [X0 + 0x7F8]
	0x03ADA560 BL 0x1C16CF4
	0x03ADA564 ADRP X0, 0x67E000
	0x03ADA568 LDR X0, [X0 + 0x808]
	0x03ADA56C BL 0x1C16CF4
	0x03ADA570 ADRP X0, 0x67E000
	0x03ADA574 LDR X0, [X0 + 0x818]
	0x03ADA578 BL 0x1C16CF4
	0x03ADA57C ADRP X0, 0x67E000
	0x03ADA580 LDR X0, [X0 + 0x810]
	0x03ADA584 BL 0x1C16CF4
	0x03ADA588 ADRP X0, 0x67E000
	0x03ADA58C LDR X0, [X0 + 0x7F0]
	0x03ADA590 BL 0x1C16CF4
	0x03ADA594 ADRP X0, 0x67E000
	0x03ADA598 LDR X0, [X0 + 0x800]
	0x03ADA59C BL 0x1C16CF4
	0x03ADA5A0 ADRP X0, 0x67E000
	0x03ADA5A4 LDR X0, [X0 + 0x848]
	0x03ADA5A8 BL 0x1C16CF4
	0x03ADA5AC ADRP X0, 0x67E000
	0x03ADA5B0 LDR X0, [X0 + 0x850]
	0x03ADA5B4 BL 0x1C16CF4
	0x03ADA5B8 ADRP X0, 0x67E000
	0x03ADA5BC LDR X0, [X0 + 0x830]
	0x03ADA5C0 BL 0x1C16CF4
	0x03ADA5C4 ADRP X0, 0x67E000
	0x03ADA5C8 LDR X0, [X0 + 0x3F0]
	0x03ADA5CC BL 0x1C16CF4
	0x03ADA5D0 MOVZ W8, 0x1
	0x03ADA5D4 STRB W8, [X28 + 0x540]
	0x03ADA5D8 LDR X0, [X29]
	0x03ADA5DC BL 0x1C16F10
	0x03ADA5E0 LDR X1, [X19]
	0x03ADA5E4 MOV X19, X0
	0x03ADA5E8 BL 0x2D11F84
	0x03ADA5EC LDR X8, [X20]
	0x03ADA5F0 LDR X8, [X8 + 0xB8]
	0x03ADA5F4 STR X19, [X8]
	0x03ADA5F8 LDR X0, [X27]
	0x03ADA5FC BL 0x1C16F10
	0x03ADA600 LDR X1, [X26]
	0x03ADA604 MOV X19, X0
	0x03ADA608 BL 0x2D11D64
	0x03ADA60C LDR X8, [X20]
	0x03ADA610 LDR X8, [X8 + 0xB8]
	0x03ADA614 STR X19, [X8 + 0x8]
	0x03ADA618 LDR X0, [X24]
	0x03ADA61C BL 0x1C16F10
	0x03ADA620 LDR X1, [X23]
	0x03ADA624 MOV X19, X0
	0x03ADA628 BL 0x2D11D64
	0x03ADA62C LDR X8, [X20]
	0x03ADA630 LDR X8, [X8 + 0xB8]
	0x03ADA634 STR X19, [X8 + 0x10]
	0x03ADA638 LDR X0, [X24]
	0x03ADA63C BL 0x1C16F10
	0x03ADA640 LDR X1, [X23]
	0x03ADA644 MOV X19, X0
	0x03ADA648 BL 0x2D11D64
	0x03ADA64C LDR X8, [X20]
	0x03ADA650 LDR X8, [X8 + 0xB8]
	0x03ADA654 STR X19, [X8 + 0x18]
	0x03ADA658 LDR X0, [X24]
	0x03ADA65C BL 0x1C16F10
	0x03ADA660 LDR X1, [X23]
	0x03ADA664 MOV X19, X0
	0x03ADA668 BL 0x2D11D64
	0x03ADA66C LDR X8, [X20]
	0x03ADA670 LDR X8, [X8 + 0xB8]
	0x03ADA674 STR X19, [X8 + 0x20]
	0x03ADA678 ADRP X8, 0x67E000
	0x03ADA67C LDR X8, [X8 + 0x850]
	0x03ADA680 LDR X0, [X8]
	0x03ADA684 BL 0x1C16F10
	0x03ADA688 ADRP X8, 0x67E000
	0x03ADA68C LDR X8, [X8 + 0x848]
	0x03ADA690 MOV X19, X0
	0x03ADA694 LDR X1, [X8]
	0x03ADA698 BL 0x2D12570
	0x03ADA69C LDR X8, [X20]
	0x03ADA6A0 LDR X8, [X8 + 0xB8]
	0x03ADA6A4 STR X19, [X8 + 0x28]
	0x03ADA6A8 ADRP X8, 0x67E000
	0x03ADA6AC LDR X8, [X8 + 0x840]
	0x03ADA6B0 LDR X0, [X8]
	0x03ADA6B4 BL 0x1C16F10
	0x03ADA6B8 ADRP X8, 0x67E000
	0x03ADA6BC LDR X8, [X8 + 0x838]
	0x03ADA6C0 MOV X19, X0
	0x03ADA6C4 LDR X1, [X8]
	0x03ADA6C8 BL 0x2D115CC
	0x03ADA6CC LDR X8, [X20]
	0x03ADA6D0 LDR X8, [X8 + 0xB8]
	0x03ADA6D4 STR X19, [X8 + 0x30]
	0x03ADA6D8 LDR X0, [X22]
	0x03ADA6DC BL 0x1C16F10
	0x03ADA6E0 LDR X1, [X21]
	0x03ADA6E4 MOV X19, X0
	0x03ADA6E8 BL 0x2D117DC
	0x03ADA6EC LDR X8, [X20]
	0x03ADA6F0 LDR X8, [X8 + 0xB8]
	0x03ADA6F4 STR X19, [X8 + 0x38]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x909000
	015 Move X21, 0x61A000
	016 Move W8, [X20+1327]
	017 Move X21, [X21+1432]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x61A000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1327], W8
	028 Move X0, [X21]
	029 Move X20, [X19+1832]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {76}
	042 Move X0, [X19+1832]
	043 Compare X0, 0
	044 JumpIfEqual {146}
	045 Move X1, X31
	046 Call Canvas.get_rootCanvas, X0
	047 Move X8, [X21]
	048 Move X20, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {76}
	062 Move X0, [X21]
	063 Move X20, [X19+928]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X20
	069 Move X1, X31
	070 Move X2, X31
	071 Call Object.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {92}
	076 Move X0, X31
	077 Call Rect.get_zero
	078 Move X20, [X31+112]
	079 Move X19, [X31+120]
	080 Move X30, [X31+96]
	081 Move X21, [X31+104]
	082 Move D9, [X31+80]
	083 Move D8, [X31+88]
	084 Move D11, [X31+64]
	085 Move D10, [X31+72]
	086 Move D13, [X31+48]
	087 Move D12, [X31+56]
	088 Move D15, [X31+32]
	089 Move D14, [X31+40]
	090 Add X31, X31, 128
	091 Return X0
	092 Move X0, [X19+1832]
	093 Compare X0, 0
	094 JumpIfEqual {146}
	095 Move X1, X31
	096 Call Canvas.get_rootCanvas, X0
	097 Compare X0, 0
	098 JumpIfEqual {146}
	099 Move X1, X31
	100 Call Component.get_transform, X0
	101 Move X8, [X19]
	102 Move X20, X0
	103 Move X0, X19
	104 Move X9, [X8+2168]
	105 Move X1, [X8+2176]
	106 Add X8, X31, 8
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X0, [X19+896]
	109 Compare X0, 0
	110 JumpIfEqual {146}
	111 Move S14, [X31+8]
	112 Move S15, [X31+12]
	113 Move S12, [X31+20]
	114 Move S13, [X31+24]
	115 Move X1, X31
	116 Call Transform.get_position, X0
	117 Compare X20, 0
	118 JumpIfEqual {146}
	119 Move X0, X20
	120 Move X1, X31
	121 Call Transform.InverseTransformPoint, X0, X1
	122 Move X0, X20
	123 Move X1, X31
	124 Move V8, V0
	125 Move V9, V1
	126 Call Transform.get_lossyScale, X0
	127 Move X0, [X19+896]
	128 Compare X0, 0
	129 JumpIfEqual {146}
	130 Move X1, X31
	131 Move V10, V0
	132 Move V11, V1
	133 Call Transform.get_lossyScale, X0
	134 NotImplemented "Instruction FDIV not yet implemented."
	135 NotImplemented "Instruction FDIV not yet implemented."
	136 Subtract S1, S14, S12
	137 Subtract S2, S15, S13
	138 Add S4, S12, S12
	139 Add S5, S13, S13
	140 Multiply S1, S1, S0
	141 Multiply S6, S2, S3
	142 Multiply S2, S4, S0
	143 Add S0, S8, S1
	144 Add S1, S9, S6
	145 Multiply S3, S5, S3
	146 Call 0x1C17F20

Method: System.Void UpdateSDFScale(System.Single scaleDelta)

Disassembly:
	0x03AD9EBC MOVZ W8, 0x1
	0x03AD9EC0 STRB W8, [X22 + 0x534]
	0x03AD9EC4 LDR X0, [X21]
	0x03AD9EC8 LDR W8, [X0 + 0xE0]
	0x03AD9ECC CBNZ W8, 0x3AD9ED8
	0x03AD9ED0 BL 0x1C16DFC
	0x03AD9ED4 LDR X0, [X21]
	0x03AD9ED8 LDR X8, [X0 + 0xB8]
	0x03AD9EDC LDR X0, [X8 + 0x8]
	0x03AD9EE0 CBZ X0, 0x3AD9F08
	0x03AD9EE4 ADRP X8, 0x67F000
	0x03AD9EE8 LDR X8, [X8 + 0x7C0]
	0x03AD9EEC AND W1, W20, 0x1
	0x03AD9EF0 MOV X2, X19
	0x03AD9EF4 LDP X20, X19, [X31 + 0x20]
	0x03AD9EF8 LDR X3, [X8]
	0x03AD9EFC LDP X22, X21, [X31 + 0x10]
	0x03AD9F00 LDR X30, [X31], #0x30
	0x03AD9F04 B 0x2D11CEC
	0x03AD9F08 BL 0x1C16F20
	0x03AD9F0C STR X30, [X31 - 0x30]!
	0x03AD9F10 STP X22, X21, [X31 + 0x10]
	0x03AD9F14 STP X20, X19, [X31 + 0x20]
	0x03AD9F18 ADRP X22, 0x909000
	0x03AD9F1C ADRP X21, 0x67F000
	0x03AD9F20 LDRB W8, [X22 + 0x535]
	0x03AD9F24 LDR X21, [X21 + 0x3F0]
	0x03AD9F28 MOV X19, X1
	0x03AD9F2C MOV W20, W0
	0x03AD9F30 TBNZ X8, 0x0, 0x3AD9F54
	0x03AD9F34 ADRP X0, 0x67F000
	0x03AD9F38 LDR X0, [X0 + 0x7C8]
	0x03AD9F3C BL 0x1C16CF4
	0x03AD9F40 ADRP X0, 0x67F000
	0x03AD9F44 LDR X0, [X0 + 0x3F0]
	0x03AD9F48 BL 0x1C16CF4
	0x03AD9F4C MOVZ W8, 0x1
	0x03AD9F50 STRB W8, [X22 + 0x535]
	0x03AD9F54 LDR X0, [X21]
	0x03AD9F58 LDR W8, [X0 + 0xE0]
	0x03AD9F5C CBNZ W8, 0x3AD9F68
	0x03AD9F60 BL 0x1C16DFC
	0x03AD9F64 LDR X0, [X21]
	0x03AD9F68 LDR X8, [X0 + 0xB8]
	0x03AD9F6C LDR X0, [X8 + 0x10]
	0x03AD9F70 CBZ X0, 0x3AD9F98
	0x03AD9F74 ADRP X8, 0x67F000
	0x03AD9F78 LDR X8, [X8 + 0x7C8]
	0x03AD9F7C AND W1, W20, 0x1
	0x03AD9F80 MOV X2, X19
	0x03AD9F84 LDP X20, X19, [X31 + 0x20]
	0x03AD9F88 LDR X3, [X8]
	0x03AD9F8C LDP X22, X21, [X31 + 0x10]
	0x03AD9F90 LDR X30, [X31], #0x30
	0x03AD9F94 B 0x2D11CEC
	0x03AD9F98 BL 0x1C16F20
	0x03AD9F9C STR X30, [X31 - 0x30]!
	0x03AD9FA0 STP X22, X21, [X31 + 0x10]
	0x03AD9FA4 STP X20, X19, [X31 + 0x20]
	0x03AD9FA8 ADRP X22, 0x909000
	0x03AD9FAC ADRP X21, 0x67F000
	0x03AD9FB0 LDRB W8, [X22 + 0x536]
	0x03AD9FB4 LDR X21, [X21 + 0x3F0]
	0x03AD9FB8 MOV X19, X1
	0x03AD9FBC MOV W20, W0
	0x03AD9FC0 TBNZ X8, 0x0, 0x3AD9FE4
	0x03AD9FC4 ADRP X0, 0x67F000
	0x03AD9FC8 LDR X0, [X0 + 0x7C8]
	0x03AD9FCC BL 0x1C16CF4
	0x03AD9FD0 ADRP X0, 0x67F000
	0x03AD9FD4 LDR X0, [X0 + 0x3F0]
	0x03AD9FD8 BL 0x1C16CF4
	0x03AD9FDC MOVZ W8, 0x1
	0x03AD9FE0 STRB W8, [X22 + 0x536]
	0x03AD9FE4 LDR X0, [X21]
	0x03AD9FE8 LDR W8, [X0 + 0xE0]
	0x03AD9FEC CBNZ W8, 0x3AD9FF8
	0x03AD9FF0 BL 0x1C16DFC
	0x03AD9FF4 LDR X0, [X21]
	0x03AD9FF8 LDR X8, [X0 + 0xB8]
	0x03AD9FFC LDR X0, [X8 + 0x18]
	0x03ADA000 CBZ X0, 0x3ADA028
	0x03ADA004 ADRP X8, 0x67E000
	0x03ADA008 LDR X8, [X8 + 0x7C8]
	0x03ADA00C AND W1, W20, 0x1
	0x03ADA010 MOV X2, X19
	0x03ADA014 LDP X20, X19, [X31 + 0x20]
	0x03ADA018 LDR X3, [X8]
	0x03ADA01C LDP X22, X21, [X31 + 0x10]
	0x03ADA020 LDR X30, [X31], #0x30
	0x03ADA024 B 0x2D11CEC
	0x03ADA028 BL 0x1C16F20
	0x03ADA02C STR X30, [X31 - 0x30]!
	0x03ADA030 STP X22, X21, [X31 + 0x10]
	0x03ADA034 STP X20, X19, [X31 + 0x20]
	0x03ADA038 ADRP X22, 0x908000
	0x03ADA03C ADRP X21, 0x67E000
	0x03ADA040 LDRB W8, [X22 + 0x537]
	0x03ADA044 LDR X21, [X21 + 0x3F0]
	0x03ADA048 MOV X19, X1
	0x03ADA04C MOV W20, W0
	0x03ADA050 TBNZ X8, 0x0, 0x3ADA074
	0x03ADA054 ADRP X0, 0x67E000
	0x03ADA058 LDR X0, [X0 + 0x7C8]
	0x03ADA05C BL 0x1C16CF4
	0x03ADA060 ADRP X0, 0x67E000
	0x03ADA064 LDR X0, [X0 + 0x3F0]
	0x03ADA068 BL 0x1C16CF4
	0x03ADA06C MOVZ W8, 0x1
	0x03ADA070 STRB W8, [X22 + 0x537]
	0x03ADA074 LDR X0, [X21]
	0x03ADA078 LDR W8, [X0 + 0xE0]
	0x03ADA07C CBNZ W8, 0x3ADA088
	0x03ADA080 BL 0x1C16DFC
	0x03ADA084 LDR X0, [X21]
	0x03ADA088 LDR X8, [X0 + 0xB8]
	0x03ADA08C LDR X0, [X8 + 0x20]
	0x03ADA090 CBZ X0, 0x3ADA0B8
	0x03ADA094 ADRP X8, 0x67E000
	0x03ADA098 LDR X8, [X8 + 0x7C8]
	0x03ADA09C AND W1, W20, 0x1
	0x03ADA0A0 MOV X2, X19
	0x03ADA0A4 LDP X20, X19, [X31 + 0x20]
	0x03ADA0A8 LDR X3, [X8]
	0x03ADA0AC LDP X22, X21, [X31 + 0x10]
	0x03ADA0B0 LDR X30, [X31], #0x30
	0x03ADA0B4 B 0x2D11CEC
	0x03ADA0B8 BL 0x1C16F20
	0x03ADA0BC STP X30, X23, [X31 - 0x30]!
	0x03ADA0C0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, 0xFF800000
	008 Move S1, W8
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move X19, X0
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move W8, 0x7F800000
	013 Move S1, W8
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 Move X8, [X19+872]
	016 Compare X8, 0
	017 JumpIfEqual {147}
	018 Move W9, [X8+52]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X11, [X8+96]
	021 Move W10, W31
	022 NotImplemented "Instruction FABS not yet implemented."
	023 Move W12, 80
	024 Compare X11, 0
	025 JumpIfEqual {147}
	026 Move W13, [X11+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction SMADDL not yet implemented."
	029 Move X15, [X13+80]
	030 Compare X15, 0
	031 JumpIfEqual {147}
	032 Move W13, [X15+24]
	033 Move X14, X13
	034 ShiftRight X14, 32
	035 And X14, X14, 0x7FFFFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X14, W13
	038 Add X15, X15, 36
	039 Compare X13, 0
	040 JumpIfEqual {146}
	041 Move V1, [X15]
	042 Subtract X14, X14, 1
	043 Subtract X13, X13, 1
	044 Multiply S1, S0, S1
	045 Move [X15+8], S1
	046 Compare X14, 0
	047 JumpIfNotEqual {39}
	048 Add W10, W10, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W22, 4
	052 Move W21, 80
	053 Subtract X23, X22, 4
	054 Move X8, [X8+96]
	055 Compare X8, 0
	056 JumpIfEqual {147}
	057 Move W9, [X8+24]
	058 Compare W9, 0
	059 JumpIfEqual {146}
	060 Move X0, [X19+928]
	061 Compare X0, 0
	062 JumpIfEqual {147}
	063 Move X1, [X8+80]
	064 Move X2, X31
	065 Call Mesh.set_uv2, X0, X1
	066 Move X0, [X19+1824]
	067 Compare X0, 0
	068 JumpIfEqual {147}
	069 Move X1, [X19+928]
	070 Move X8, [X19+1800]
	071 Compare X8, 0
	072 JumpIfEqual {147}
	073 Move W9, [X8+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X8]
	076 Compare X0, 0
	077 JumpIfEqual {147}
	078 Move X1, X31
	079 Call TMP_SubMeshUI.get_mesh, X0
	080 Move X8, [X19+872]
	081 Compare X8, 0
	082 JumpIfEqual {147}
	083 Move X8, [X8+96]
	084 Compare X8, 0
	085 JumpIfEqual {147}
	086 Move W9, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Compare X0, 0
	089 JumpIfEqual {147}
	090 Move X1, [X8]
	091 Move X2, X31
	092 Call Mesh.set_uv2, X0, X1
	093 Move X8, [X19+1800]
	094 Compare X8, 0
	095 JumpIfEqual {147}
	096 Move W9, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, [X8]
	099 Compare X0, 0
	100 JumpIfEqual {147}
	101 Move X1, X31
	102 Call Graphic.get_canvasRenderer, X0
	103 Move X8, [X19+1800]
	104 Compare X8, 0
	105 JumpIfEqual {147}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X20, X0
	109 Move X0, [X8]
	110 Compare X0, 0
	111 JumpIfEqual {147}
	112 Move X1, X31
	113 Call TMP_SubMeshUI.get_mesh, X0
	114 Compare X20, 0
	115 JumpIfEqual {147}
	116 Move X1, X0
	117 Move X0, X20
	118 Move X2, X31
	119 Call CanvasRenderer.SetMesh, X0, X1
	120 Move X8, [X19+872]
	121 Compare X8, 0
	122 JumpIfEqual {147}
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Subtract X10, X22, 3
	125 Add X22, X22, 1
	126 Add X21, X21, 80
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Return 
	135 Move W8, 1
	136 Move [X19+880], W8
	137 Move X0, X19
	138 Move X20, [X31+32]
	139 Move X19, [X31+40]
	140 Move X22, [X31+16]
	141 Move X21, [X31+24]
	142 Move X30, [X31+48]
	143 Move X23, [X31+56]
	144 Call TextMeshProUGUI.OnPreRenderCanvas, X0
	145 Return 
	146 Call 0x1C17F28
	147 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03ADA6F8 LDR X0, [X25]
	0x03ADA6FC BL 0x1C16F10
	0x03ADA700 MOV X19, X0
	0x03ADA704 BL 0x3ACAA9C
	0x03ADA708 LDR X8, [X20]
	0x03ADA70C LDR X8, [X8 + 0xB8]
	0x03ADA710 STR X19, [X8 + 0x40]
	0x03ADA714 LDR X0, [X25]
	0x03ADA718 BL 0x1C16F10
	0x03ADA71C MOV X19, X0
	0x03ADA720 BL 0x3ACAA9C
	0x03ADA724 LDR X8, [X20]
	0x03ADA728 LDR X8, [X8 + 0xB8]
	0x03ADA72C STR X19, [X8 + 0x48]
	0x03ADA730 LDR X0, [X24]
	0x03ADA734 BL 0x1C16F10
	0x03ADA738 LDR X1, [X23]
	0x03ADA73C MOV X19, X0
	0x03ADA740 BL 0x2D11D64
	0x03ADA744 LDR X8, [X20]
	0x03ADA748 LDR X8, [X8 + 0xB8]
	0x03ADA74C STR X19, [X8 + 0x50]
	0x03ADA750 LDR X0, [X22]
	0x03ADA754 BL 0x1C16F10
	0x03ADA758 LDR X1, [X21]
	0x03ADA75C MOV X19, X0
	0x03ADA760 BL 0x2D117DC
	0x03ADA764 LDR X8, [X20]
	0x03ADA768 LDP X22, X21, [X31 + 0x40]
	0x03ADA76C LDP X24, X23, [X31 + 0x30]
	0x03ADA770 LDP X26, X25, [X31 + 0x20]
	0x03ADA774 LDR X8, [X8 + 0xB8]
	0x03ADA778 LDP X28, X27, [X31 + 0x10]
	0x03ADA77C STR X19, [X8 + 0x58]
	0x03ADA780 LDP X20, X19, [X31 + 0x50]
	0x03ADA784 LDP X29, X30, [X31], #0x60
	0x03ADA788 RET
	0x03ADA78C STR D8, [X31 - 0x20]!
	0x03ADA790 STR X30, [X31 + 0x8]
	0x03ADA794 STP X20, X19, [X31 + 0x10]
	0x03ADA798 MOV W19, W1
	0x03ADA79C MOV X1, X31
	0x03ADA7A0 MOV V8.16B, V0.16B
	0x03ADA7A4 MOV X20, X0
	0x03ADA7A8 BL 0x33BDD8C
	0x03ADA7AC STR W19, [X20 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x909000
	008 Move X23, 0x67F000
	009 Move X21, 0x61C000
	010 Move X20, 0x67F000
	011 Move W8, [X22+1328]
	012 Move X23, [X23+1944]
	013 Move X21, [X21+2480]
	014 Move X20, [X20+1000]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x67F000
	021 Move X0, [X0+1944]
	022 Call 0x1C17CF4
	023 Move X0, 0x67F000
	024 Move X0, [X0+1000]
	025 Call 0x1C17CF4
	026 Move X0, 0x61C000
	027 Move X0, [X0+2480]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1328], W8
	031 Move X0, [X23]
	032 Move W1, 8
	033 Move W22, 8
	034 Call 0x1C17D6C
	035 Move W8, 0xBF800000
	036 Move [X19+1800], X0
	037 Move [X19+1808], W8
	038 Move X0, [X21]
	039 Move W1, 4
	040 Call 0x1C17D6C
	041 Move [X19+1816], X0
	042 Move [X19+1848], W22
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X1, X31
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Call TMP_Text..ctor, X0
	057 Return 

Method: System.Void .cctor()

Disassembly:
	0x03ADA7B0 STR S8, [X20 + 0x14]
	0x03ADA7B4 LDP X20, X19, [X31 + 0x10]
	0x03ADA7B8 LDR X30, [X31 + 0x8]
	0x03ADA7BC LDR V8, [X31], #0x20
	0x03ADA7C0 RET
	0x03ADA7C4 STP X30, X21, [X31 - 0x20]!
	0x03ADA7C8 STP X20, X19, [X31 + 0x10]
	0x03ADA7CC MOV W20, W1
	0x03ADA7D0 MOV X1, X31
	0x03ADA7D4 MOV X19, X2
	0x03ADA7D8 MOV X21, X0
	0x03ADA7DC BL 0x33BDD8C
	0x03ADA7E0 STR W20, [X21 + 0x10]
	0x03ADA7E4 STR X19, [X21 + 0x18]
	0x03ADA7E8 LDP X20, X19, [X31 + 0x10]
	0x03ADA7EC LDP X30, X21, [X31], #0x20
	0x03ADA7F0 RET
	0x03ADA7F4 STR X30, [X31 - 0x30]!
	0x03ADA7F8 STP X22, X21, [X31 + 0x10]
	0x03ADA7FC STP X20, X19, [X31 + 0x20]
	0x03ADA800 ADRP X20, 0x908000
	0x03ADA804 LDRB W8, [X20 + 0x541]
	0x03ADA808 MOV X19, X0
	0x03ADA80C TBNZ X8, 0x0, 0x3ADA824
	0x03ADA810 ADRP X0, 0x61A000
	0x03ADA814 LDR X0, [X0 + 0xE58]
	0x03ADA818 BL 0x1C16CF4
	0x03ADA81C MOVZ W8, 0x1
	0x03ADA820 STRB W8, [X20 + 0x541]
	0x03ADA824 CBZ X19, 0x3ADA8A0
	0x03ADA828 ADRP X8, 0x61A000
	0x03ADA82C LDR X8, [X8 + 0xE58]
	0x03ADA830 LDR W1, [X19 + 0x10]
	0x03ADA834 LDR X0, [X8]
	0x03ADA838 BL 0x1C16D6C
	0x03ADA83C LDR W8, [X19 + 0x10]
	0x03ADA840 MOV X20, X0
	0x03ADA844 CMP W8, 0x1
	0x03ADA848 B.LT 0x3ADA88C
	0x03ADA84C MOV X21, X31
	0x03ADA850 ADD X22, X20, 0x20
	0x03ADA854 MOV X0, X19
	0x03ADA858 MOV W1, W21
	0x03ADA85C MOV X2, X31
	0x03ADA860 BL 0x3222A1C
	0x03ADA864 CBZ X20, 0x3ADA8A0
	0x03ADA868 LDR W8, [X20 + 0x18]
	0x03ADA86C CMP X21, X8
	0x03ADA870 B.CS 0x3ADA8A4
	0x03ADA874 AND W8, W0, 0xFFFF
	0x03ADA878 STR W8, [X22, X21, LSL #2]
	0x03ADA87C LDRSW X8, [X19 + 0x10]
	0x03ADA880 ADD X21, X21, 0x1
	0x03ADA884 CMP X21, X8
	0x03ADA888 B.LT 0x3ADA854
	0x03ADA88C MOV X0, X20
	0x03ADA890 LDP X20, X19, [X31 + 0x20]
	0x03ADA894 LDP X22, X21, [X31 + 0x10]
	0x03ADA898 LDR X30, [X31], #0x30
	0x03ADA89C RET
	0x03ADA8A0 BL 0x1C16F20
	0x03ADA8A4 BL 0x1C16F28
	0x03ADA8A8 STP X30, X23, [X31 - 0x30]!
	0x03ADA8AC STP X22, X21, [X31 + 0x10]
	0x03ADA8B0 STP X20, X19, [X31 + 0x20]
	0x03ADA8B4 ADRP X20, 0x908000
	0x03ADA8B8 LDRB W8, [X20 + 0x542]
	0x03ADA8BC MOV X19, X0
	0x03ADA8C0 TBNZ X8, 0x0, 0x3ADA8E4
	0x03ADA8C4 ADRP X0, 0x61B000
	0x03ADA8C8 LDR X0, [X0 + 0x170]
	0x03ADA8CC BL 0x1C16CF4
	0x03ADA8D0 ADRP X0, 0x61B000
	0x03ADA8D4 LDR X0, [X0 + 0x278]
	0x03ADA8D8 BL 0x1C16CF4
	0x03ADA8DC MOVZ W8, 0x1
	0x03ADA8E0 STRB W8, [X20 + 0x542]
	0x03ADA8E4 CBZ X19, 0x3ADA98C
	0x03ADA8E8 ADRP X8, 0x61B000
	0x03ADA8EC LDR X8, [X8 + 0x278]
	0x03ADA8F0 LDR X8, [X8]
	0x03ADA8F4 LDR X9, [X8 + 0xB8]
	0x03ADA8F8 LDR W8, [X19 + 0x18]
	0x03ADA8FC LDR X20, [X9]
	0x03ADA900 CMP W8, 0x1
	0x03ADA904 B.LT 0x3ADA974
	0x03ADA908 ADRP X23, 0x61B000
	0x03ADA90C LDR X23, [X23 + 0x170]
	0x03ADA910 MOV W22, W31
	0x03ADA914 CMP W22, W8
	0x03ADA918 B.CS 0x3ADA988
	0x03ADA91C ADD X21, X19, W22, 0x1, SXTW
	0x03ADA920 LDRH W9, [X21 + 0x20]!
	0x03ADA924 CBZ W9, 0x3ADA974
	0x03ADA928 LDR X0, [X23]
	0x03ADA92C LDR W9, [X0 + 0xE0]
	0x03ADA930 CBNZ W9, 0x3ADA93C
	0x03ADA934 BL 0x1C16DFC
	0x03ADA938 LDR W8, [X19 + 0x18]
	0x03ADA93C CMP W22, W8
	0x03ADA940 B.CS 0x3ADA988
	0x03ADA944 MOV X0, X21
	0x03ADA948 MOV X1, X31
	0x03ADA94C BL 0x330A76C
	0x03ADA950 MOV X1, X0
	0x03ADA954 MOV X0, X20
	0x03ADA958 MOV X2, X31
	0x03ADA95C BL 0x321B938
	0x03ADA960 LDR W8, [X19 + 0x18]
	0x03ADA964 ADD W22, W22, 0x1
	0x03ADA968 MOV X20, X0
	0x03ADA96C CMP W22, W8
	0x03ADA970 B.LT 0x3ADA914
	0x03ADA974 MOV X0, X20
	0x03ADA978 LDP X20, X19, [X31 + 0x20]
	0x03ADA97C LDP X22, X21, [X31 + 0x10]
	0x03ADA980 LDP X30, X23, [X31], #0x30
	0x03ADA984 RET
	0x03ADA988 BL 0x1C16F28
	0x03ADA98C BL 0x1C16F20
	0x03ADA990 STR X30, [X31 - 0x20]!
	0x03ADA994 STP X20, X19, [X31 + 0x10]
	0x03ADA998 ADRP X20, 0x908000
	0x03ADA99C LDRB W8, [X20 + 0x543]
	0x03ADA9A0 MOV X19, X0
	0x03ADA9A4 TBNZ X8, 0x0, 0x3ADA9BC
	0x03ADA9A8 ADRP X0, 0x622000
	0x03ADA9AC LDR X0, [X0 + 0x8D8]
	0x03ADA9B0 BL 0x1C16CF4
	0x03ADA9B4 MOVZ W8, 0x1
	0x03ADA9B8 STRB W8, [X20 + 0x543]
	0x03ADA9BC CBZ X19, 0x3ADAA3C
	0x03ADA9C0 ADRP X8, 0x622000
	0x03ADA9C4 LDR X8, [X8 + 0x8D8]
	0x03ADA9C8 LDR W1, [X19 + 0x18]
	0x03ADA9CC LDR X0, [X8]
	0x03ADA9D0 BL 0x1C16D6C
	0x03ADA9D4 LDR X9, [X19 + 0x18]
	0x03ADA9D8 MOV X1, X0
	0x03ADA9DC CMP W9, 0x1
	0x03ADA9E0 B.LT 0x3ADAA24
	0x03ADA9E4 AND X9, X9, 0x0
	0x03ADA9E8 MOV X8, X31
	0x03ADA9EC ADD X10, X19, 0x20
	0x03ADA9F0 SXTW X11, W9
	0x03ADA9F4 ADD X12, X1, 0x20
	0x03ADA9F8 CMP X8, X9
	0x03ADA9FC B.CS 0x3ADAA38
	0x03ADAA00 CBZ X1, 0x3ADAA3C
	0x03ADAA04 LDR W13, [X1 + 0x18]
	0x03ADAA08 CMP X8, X13
	0x03ADAA0C B.CS 0x3ADAA38
	0x03ADAA10 LDR W13, [X10, X8, LSL #2]
	0x03ADAA14 STRH W13, [X12, X8, LSL #1]
	0x03ADAA18 ADD X8, X8, 0x1
	0x03ADAA1C CMP X8, X11
	0x03ADAA20 B.LT 0x3ADA9F8
	0x03ADAA24 LDP X20, X19, [X31 + 0x10]
	0x03ADAA28 MOV X0, X31
	0x03ADAA2C MOV X2, X31
	0x03ADAA30 LDR X30, [X31], #0x20
	0x03ADAA34 B 0x32256D4
	0x03ADAA38 BL 0x1C16F28
	0x03ADAA3C BL 0x1C16F20
	0x03ADAA40 STP X30, X23, [X31 - 0x30]!
	0x03ADAA44 STP X22, X21, [X31 + 0x10]
	0x03ADAA48 STP X20, X19, [X31 + 0x20]
	0x03ADAA4C ADRP X20, 0x908000
	0x03ADAA50 LDRB W8, [X20 + 0x544]
	0x03ADAA54 MOV X19, X0
	0x03ADAA58 TBNZ X8, 0x0, 0x3ADAA88
	0x03ADAA5C ADRP X0, 0x622000
	0x03ADAA60 LDR X0, [X0 + 0x8D8]
	0x03ADAA64 BL 0x1C16CF4
	0x03ADAA68 ADRP X0, 0x67E000
	0x03ADAA6C LDR X0, [X0 + 0x858]
	0x03ADAA70 BL 0x1C16CF4
	0x03ADAA74 ADRP X0, 0x67E000
	0x03ADAA78 LDR X0, [X0 + 0x860]
	0x03ADAA7C BL 0x1C16CF4
	0x03ADAA80 MOVZ W8, 0x1
	0x03ADAA84 STRB W8, [X20 + 0x544]
	0x03ADAA88 CBZ X19, 0x3ADAB10
	0x03ADAA8C ADRP X8, 0x622000
	0x03ADAA90 LDR X8, [X8 + 0x8D8]
	0x03ADAA94 LDR W1, [X19 + 0x18]
	0x03ADAA98 LDR X0, [X8]
	0x03ADAA9C BL 0x1C16D6C
	0x03ADAAA0 LDR W8, [X19 + 0x18]
	0x03ADAAA4 MOV X20, X0
	0x03ADAAA8 CMP W8, 0x1
	0x03ADAAAC B.LT 0x3ADAAF4
	0x03ADAAB0 ADRP X22, 0x67E000
	0x03ADAAB4 LDR X22, [X22 + 0x860]
	0x03ADAAB8 MOV X21, X31
	0x03ADAABC ADD X23, X20, 0x20
	0x03ADAAC0 LDR X2, [X22]
	0x03ADAAC4 MOV X0, X19
	0x03ADAAC8 MOV W1, W21
	0x03ADAACC BL 0x30C13A8
	0x03ADAAD0 CBZ X20, 0x3ADAB10
	0x03ADAAD4 LDR W8, [X20 + 0x18]
	0x03ADAAD8 CMP X21, X8
	0x03ADAADC B.CS 0x3ADAB14
	0x03ADAAE0 STRH W0, [X23, X21, LSL #1]
	0x03ADAAE4 LDRSW X8, [X19 + 0x18]
	0x03ADAAE8 ADD X21, X21, 0x1
	0x03ADAAEC CMP X21, X8
	0x03ADAAF0 B.LT 0x3ADAAC0
	0x03ADAAF4 MOV X1, X20
	0x03ADAAF8 LDP X20, X19, [X31 + 0x20]
	0x03ADAAFC LDP X22, X21, [X31 + 0x10]
	0x03ADAB00 MOV X0, X31
	0x03ADAB04 MOV X2, X31
	0x03ADAB08 LDP X30, X23, [X31], #0x30
	0x03ADAB0C B 0x32256D4
	0x03ADAB10 BL 0x1C16F20
	0x03ADAB14 BL 0x1C16F28
	0x03ADAB18 STR X30, [X31 - 0x30]!
	0x03ADAB1C STP X22, X21, [X31 + 0x10]
	0x03ADAB20 STP X20, X19, [X31 + 0x20]
	0x03ADAB24 ADRP X22, 0x908000
	0x03ADAB28 LDRB W8, [X22 + 0x545]
	0x03ADAB2C MOV W21, W2
	0x03ADAB30 MOV W19, W1
	0x03ADAB34 MOV X20, X0
	0x03ADAB38 TBNZ X8, 0x0, 0x3ADAB5C
	0x03ADAB3C ADRP X0, 0x622000
	0x03ADAB40 LDR X0, [X0 + 0x8D8]
	0x03ADAB44 BL 0x1C16CF4
	0x03ADAB48 ADRP X0, 0x61B000
	0x03ADAB4C LDR X0, [X0 + 0x278]
	0x03ADAB50 BL 0x1C16CF4
	0x03ADAB54 MOVZ W8, 0x1
	0x03ADAB58 STRB W8, [X22 + 0x545]
	0x03ADAB5C CBZ X20, 0x3ADAC24
	0x03ADAB60 LDR W8, [X20 + 0x18]
	0x03ADAB64 CMP W8, W19
	0x03ADAB68 B.GE 0x3ADAB90
	0x03ADAB6C ADRP X8, 0x61B000
	0x03ADAB70 LDR X8, [X8 + 0x278]
	0x03ADAB74 LDP X20, X19, [X31 + 0x20]
	0x03ADAB78 LDP X22, X21, [X31 + 0x10]
	0x03ADAB7C LDR X8, [X8]
	0x03ADAB80 LDR X8, [X8 + 0xB8]
	0x03ADAB84 LDR X0, [X8]
	0x03ADAB88 LDR X30, [X31], #0x30
	0x03ADAB8C RET
	0x03ADAB90 ADRP X10, 0x622000
	0x03ADAB94 LDR X10, [X10 + 0x8D8]
	0x03ADAB98 ADD W9, W21, W19
	0x03ADAB9C CMP W9, W8
	0x03ADABA0 CSEL W21, W9, W8, LT
	0x03ADABA4 LDR X0, [X10]
	0x03ADABA8 SUBS W1, W21, W19
	0x03ADABAC BL 0x1C16D6C
	0x03ADABB0 SUBS W11, W21, W19
	0x03ADABB4 MOV X1, X0
	0x03ADABB8 B.LE 0x3ADAC08
	0x03ADABBC LDR W10, [X20 + 0x18]
	0x03ADABC0 ADD X9, X20, W19, 0x2, SXTW
	0x03ADABC4 MOV X8, X31
	0x03ADABC8 ADD X9, X9, 0x20
	0x03ADABCC SUBS W10, W10, W19
	0x03ADABD0 CSEL W10, W31, W10, CC
	0x03ADABD4 MOV W11, W11
	0x03ADABD8 CMP W10, W8
	0x03ADABDC B.EQ 0x3ADAC20
	0x03ADABE0 CBZ X1, 0x3ADAC24
	0x03ADABE4 LDR W12, [X1 + 0x18]
	0x03ADABE8 CMP W8, W12
	0x03ADABEC B.CS 0x3ADAC20
	0x03ADABF0 LDR W12, [X9, X8, LSL #2]
	0x03ADABF4 ADD X13, X1, W8, 0x1, SXTW
	0x03ADABF8 ADD X8, X8, 0x1
	0x03ADABFC CMP W11, W8
	0x03ADAC00 STRH W12, [X13 + 0x20]
	0x03ADAC04 B.NE 0x3ADABD8
	0x03ADAC08 LDP X20, X19, [X31 + 0x20]
	0x03ADAC0C LDP X22, X21, [X31 + 0x10]
	0x03ADAC10 MOV X0, X31
	0x03ADAC14 MOV X2, X31
	0x03ADAC18 LDR X30, [X31], #0x30
	0x03ADAC1C B 0x32256D4
	0x03ADAC20 BL 0x1C16F28
	0x03ADAC24 BL 0x1C16F20
	0x03ADAC28 EOR W8, W1, W0, 0x0
	0x03ADAC2C CMP W8, 0x0
	0x03ADAC30 CSET W0, EQ
	0x03ADAC34 RET
	0x03ADAC38 EOR W8, W1, W0, 0x0
	0x03ADAC3C ANDS X31, X8, 0xFFFFFF
	0x03ADAC40 CSET W0, EQ
	0x03ADAC44 RET
	0x03ADAC48 FCMP S2, S6
	0x03ADAC4C MOV W0, W31
	0x03ADAC50 B.NE 0x3ADAC6C
	0x03ADAC54 FCMP S0, S4
	0x03ADAC58 B.NE 0x3ADAC6C
	0x03ADAC5C FCMP S1, S5
	0x03ADAC60 B.NE 0x3ADAC6C
	0x03ADAC64 FCMP S3, S7
	0x03ADAC68 CSET W0, EQ

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x909000
	014 Move X20, 0x67F000
	015 Move X19, 0x67F000
	016 Move X28, 0x67F000
	017 Move X27, 0x67F000
	018 Move X26, 0x67F000
	019 Move X25, 0x67F000
	020 Move X24, 0x67F000
	021 Move X23, 0x67F000
	022 Move X22, 0x67F000
	023 Move X21, 0x67F000
	024 Move X20, [X20+1952]
	025 Move X19, [X19+1960]
	026 Move X28, [X28+1664]
	027 Move X27, [X27+1672]
	028 Move X26, [X26+1680]
	029 Move X25, [X25+1688]
	030 Move X24, [X24+1696]
	031 Move X23, [X23+1704]
	032 Move X22, [X22+1712]
	033 Move X21, [X21+1720]
	034 Move W8, [X29+1329]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {104}
	039 Move X0, 0x67F000
	040 Move X0, [X0+1960]
	041 Call 0x1C17CF4
	042 Move X0, 0x67F000
	043 Move X0, [X0+1712]
	044 Call 0x1C17CF4
	045 Move X0, 0x67F000
	046 Move X0, [X0+1952]
	047 Call 0x1C17CF4
	048 Move X0, 0x67F000
	049 Move X0, [X0+1728]
	050 Call 0x1C17CF4
	051 Move X0, 0x67F000
	052 Move X0, [X0+1736]
	053 Call 0x1C17CF4
	054 Move X0, 0x67F000
	055 Move X0, [X0+1680]
	056 Call 0x1C17CF4
	057 Move X0, 0x67F000
	058 Move X0, [X0+1744]
	059 Call 0x1C17CF4
	060 Move X0, 0x67F000
	061 Move X0, [X0+1672]
	062 Call 0x1C17CF4
	063 Move X0, 0x67F000
	064 Move X0, [X0+1720]
	065 Call 0x1C17CF4
	066 Move X0, 0x67F000
	067 Move X0, [X0+1752]
	068 Call 0x1C17CF4
	069 Move X0, 0x67F000
	070 Move X0, [X0+1760]
	071 Call 0x1C17CF4
	072 Move X0, 0x67F000
	073 Move X0, [X0+1696]
	074 Call 0x1C17CF4
	075 Move X0, 0x67F000
	076 Move X0, [X0+1768]
	077 Call 0x1C17CF4
	078 Move X0, 0x67F000
	079 Move X0, [X0+1776]
	080 Call 0x1C17CF4
	081 Move X0, 0x67F000
	082 Move X0, [X0+1704]
	083 Call 0x1C17CF4
	084 Move X0, 0x67F000
	085 Move X0, [X0+1784]
	086 Call 0x1C17CF4
	087 Move X0, 0x67F000
	088 Move X0, [X0+1664]
	089 Call 0x1C17CF4
	090 Move X0, 0x67F000
	091 Move X0, [X0+1792]
	092 Call 0x1C17CF4
	093 Move X0, 0x67F000
	094 Move X0, [X0+1800]
	095 Call 0x1C17CF4
	096 Move X0, 0x67F000
	097 Move X0, [X0+1808]
	098 Call 0x1C17CF4
	099 Move X0, 0x67F000
	100 Move X0, [X0+1688]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X29+1329], W8
	104 Move X0, [X20]
	105 Move W1, 1
	106 Move W2, W31
	107 Move W3, W31
	108 Move X4, X31
	109 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	110 Move X8, [X19]
	111 Move W1, 1
	112 Move W2, W31
	113 Move W3, W31
	114 Move X8, [X8+184]
	115 Move X4, X31
	116 Move [X8], X0
	117 Move X0, [X28]
	118 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	119 Move X8, [X19]
	120 Move W1, 1
	121 Move W2, W31
	122 Move W3, W31
	123 Move X8, [X8+184]
	124 Move X4, X31
	125 Move [X8+8], X0
	126 Move X0, [X27]
	127 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	128 Move X8, [X19]
	129 Move W1, 1
	130 Move W2, W31
	131 Move W3, W31
	132 Move X8, [X8+184]
	133 Move X4, X31
	134 Move [X8+16], X0
	135 Move X0, [X26]
	136 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	137 Move X8, [X19]
	138 Move W1, 1
	139 Move W2, W31
	140 Move W3, W31
	141 Move X8, [X8+184]
	142 Move X4, X31
	143 Move [X8+24], X0
	144 Move X0, [X25]
	145 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	146 Move X8, [X19]
	147 Move W1, 1
	148 Move W2, W31
	149 Move W3, W31
	150 Move X8, [X8+184]
	151 Move X4, X31
	152 Move [X8+32], X0
	153 Move X0, [X24]
	154 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	155 Move X8, [X19]
	156 Move W1, 1
	157 Move W2, W31
	158 Move W3, W31
	159 Move X8, [X8+184]
	160 Move X4, X31
	161 Move [X8+40], X0
	162 Move X0, [X23]
	163 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	164 Move X8, [X19]
	165 Move W1, 1
	166 Move W2, W31
	167 Move W3, W31
	168 Move X8, [X8+184]
	169 Move X4, X31
	170 Move [X8+48], X0
	171 Move X0, [X22]
	172 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	173 Move X8, [X19]
	174 Move W1, 1
	175 Move W2, W31
	176 Move W3, W31
	177 Move X8, [X8+184]
	178 Move X4, X31
	179 Move [X8+56], X0
	180 Move X0, [X21]
	181 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	182 Move X8, [X19]
	183 Move W1, 1
	184 Move W2, W31
	185 Move W3, W31
	186 Move X8, [X8+184]
	187 Move X4, X31
	188 Move [X8+64], X0
	189 Move X8, 0x67F000
	190 Move X8, [X8+1800]
	191 Move X0, [X8]
	192 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	193 Move X8, [X19]
	194 Move W1, 1
	195 Move W2, W31
	196 Move W3, W31
	197 Move X8, [X8+184]
	198 Move X4, X31
	199 Move [X8+72], X0
	200 Move X8, 0x67F000
	201 Move X8, [X8+1768]
	202 Move X0, [X8]
	203 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	204 Move X8, [X19]
	205 Move W1, 1
	206 Move W2, W31
	207 Move W3, W31
	208 Move X8, [X8+184]
	209 Move X4, X31
	210 Move [X8+80], X0
	211 Move X8, 0x67F000
	212 Move X8, [X8+1792]
	213 Move X0, [X8]
	214 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	215 Move X8, [X19]
	216 Move W1, 1
	217 Move W2, W31
	218 Move W3, W31
	219 Move X8, [X8+184]
	220 Move X4, X31
	221 Move [X8+88], X0
	222 Move X8, 0x67F000
	223 Move X8, [X8+1760]
	224 Move X0, [X8]
	225 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	226 Move X8, [X19]
	227 Move W1, 1
	228 Move W2, W31
	229 Move W3, W31
	230 Move X8, [X8+184]
	231 Move X4, X31
	232 Move [X8+96], X0
	233 Move X8, 0x67F000
	234 Move X8, [X8+1784]
	235 Move X0, [X8]
	236 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	237 Move X8, [X19]
	238 Move W1, 1
	239 Move W2, W31
	240 Move W3, W31
	241 Move X8, [X8+184]
	242 Move X4, X31
	243 Move [X8+104], X0
	244 Move X8, 0x67F000
	245 Move X8, [X8+1744]
	246 Move X0, [X8]
	247 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	248 Move X8, [X19]
	249 Move W1, 1
	250 Move W2, W31
	251 Move W3, W31
	252 Move X8, [X8+184]
	253 Move X4, X31
	254 Move [X8+112], X0
	255 Move X8, 0x67F000
	256 Move X8, [X8+1752]
	257 Move X0, [X8]
	258 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	259 Move X8, [X19]
	260 Move W1, 1
	261 Move W2, W31
	262 Move W3, W31
	263 Move X8, [X8+184]
	264 Move X4, X31
	265 Move [X8+120], X0
	266 Move X8, 0x67F000
	267 Move X8, [X8+1776]
	268 Move X0, [X8]
	269 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	270 Move X8, [X19]
	271 Move W1, 1
	272 Move W2, W31
	273 Move W3, W31
	274 Move X8, [X8+184]
	275 Move X4, X31
	276 Move [X8+128], X0
	277 Move X8, 0x67F000
	278 Move X8, [X8+1736]
	279 Move X0, [X8]
	280 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	281 Move X8, [X19]
	282 Move W1, 1
	283 Move W2, W31
	284 Move W3, W31
	285 Move X8, [X8+184]
	286 Move X4, X31
	287 Move [X8+136], X0
	288 Move X8, 0x67F000
	289 Move X8, [X8+1808]
	290 Move X0, [X8]
	291 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	292 Move X8, [X19]
	293 Move W1, 1
	294 Move W2, W31
	295 Move W3, W31
	296 Move X8, [X8+184]
	297 Move X4, X31
	298 Move [X8+144], X0
	299 Move X8, 0x67F000
	300 Move X8, [X8+1728]
	301 Move X0, [X8]
	302 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	303 Move X8, [X19]
	304 Move X20, [X31+80]
	305 Move X19, [X31+88]
	306 Move X22, [X31+64]
	307 Move X21, [X31+72]
	308 Move X24, [X31+48]
	309 Move X23, [X31+56]
	310 Move X8, [X8+184]
	311 Move X26, [X31+32]
	312 Move X25, [X31+40]
	313 Move X28, [X31+16]
	314 Move X27, [X31+24]
	315 Move [X8+152], X0
	316 Move X29, [X31+96]
	317 Move X30, [X31+104]
	318 Return 

