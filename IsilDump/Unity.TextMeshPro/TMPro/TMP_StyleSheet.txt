Type: TMPro.TMP_StyleSheet

Method: System.Collections.Generic.List`1<TMPro.TMP_Style> get_styles()

Disassembly:
	0x03B19F8C RET
	0x03B19F90 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void Reset()

Disassembly:
	0x03B19F94 BL 0x1C16F28

ISIL:
No ISIL was generated
Method: TMPro.TMP_Style GetStyle(System.Int32 hashCode)

Disassembly:
	0x03B1A298 BL 0x3AF8D3C
	0x03B1A29C LDR X0, [X19 + 0x70]
	0x03B1A2A0 CBZ X0, 0x3B1A2C8
	0x03B1A2A4 LDR X8, [X0]
	0x03B1A2A8 LDP X20, X19, [X31 + 0x10]
	0x03B1A2AC LDR X2, [X8 + 0x2D8]
	0x03B1A2B0 LDR X1, [X8 + 0x2E0]
	0x03B1A2B4 LDP X30, X21, [X31], #0x20
	0x03B1A2B8 BR X2
	0x03B1A2BC LDP X20, X19, [X31 + 0x10]
	0x03B1A2C0 LDP X30, X21, [X31], #0x20
	0x03B1A2C4 RET
	0x03B1A2C8 BL 0x1C16F20
	0x03B1A2CC STP X30, X21, [X31 - 0x20]!
	0x03B1A2D0 STP X20, X19, [X31 + 0x10]
	0x03B1A2D4 ADRP X21, 0x8C8000
	0x03B1A2D8 ADRP X20, 0x5D9000
	0x03B1A2DC LDRB W8, [X21 + 0x6D8]
	0x03B1A2E0 LDR X20, [X20 + 0x598]
	0x03B1A2E4 MOV X19, X0
	0x03B1A2E8 TBNZ X8, 0x0, 0x3B1A300
	0x03B1A2EC ADRP X0, 0x5D9000
	0x03B1A2F0 LDR X0, [X0 + 0x598]
	0x03B1A2F4 BL 0x1C16CF4
	0x03B1A2F8 MOVZ W8, 0x1
	0x03B1A2FC STRB W8, [X21 + 0x6D8]
	0x03B1A300 MOV X0, X19
	0x03B1A304 MOV X1, X31
	0x03B1A308 BL 0x3C32ECC
	0x03B1A30C LDR X8, [X20]
	0x03B1A310 MOV X19, X0
	0x03B1A314 LDR W9, [X8 + 0xE0]
	0x03B1A318 CBNZ W9, 0x3B1A324
	0x03B1A31C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8C9000
	007 Move W8, [X21+1739]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x640000
	015 Move X0, [X0+2560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1739], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+32]
	021 Compare X0, 0
	022 JumpIfNotEqual {28}
	023 Move X0, X20
	024 Call TMP_StyleSheet.LoadStyleDictionaryInternal, X0
	025 Move X0, [X20+32]
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, 0x640000
	029 Move X8, [X8+2560]
	030 Add X2, X31, 8
	031 Move W1, W19
	032 Move X3, [X8]
	033 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	034 Move X8, [X31+8]
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 And W31, W0, 1
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Add X31, X31, 48
	042 Return X0
	043 Call 0x1C17F20

Method: TMPro.TMP_Style GetStyle(System.String name)

Disassembly:
	0x03B1A320 BL 0x1C16DFC
	0x03B1A324 MOV X0, X19
	0x03B1A328 LDP X20, X19, [X31 + 0x10]
	0x03B1A32C FMOV S0, 1
	0x03B1A330 MOV X1, X31
	0x03B1A334 LDP X30, X21, [X31], #0x20
	0x03B1A338 B 0x3C3945C
	0x03B1A33C STP X30, X21, [X31 - 0x20]!
	0x03B1A340 STP X20, X19, [X31 + 0x10]
	0x03B1A344 ADRP X19, 0x8C8000
	0x03B1A348 ADRP X21, 0x5DD000
	0x03B1A34C LDRB W8, [X19 + 0x6DA]
	0x03B1A350 LDR X21, [X21 + 0xCA0]
	0x03B1A354 MOV X20, X1
	0x03B1A358 TBNZ X8, 0x0, 0x3B1A37C
	0x03B1A35C ADRP X0, 0x5DD000
	0x03B1A360 LDR X0, [X0 + 0xCA0]
	0x03B1A364 BL 0x1C16CF4
	0x03B1A368 ADRP X0, 0x63F000
	0x03B1A36C LDR X0, [X0 + 0x1E0]
	0x03B1A370 BL 0x1C16CF4
	0x03B1A374 MOVZ W8, 0x1
	0x03B1A378 STRB W8, [X19 + 0x6DA]
	0x03B1A37C LDR X0, [X21]
	0x03B1A380 BL 0x1C16F10
	0x03B1A384 MOV X1, X20
	0x03B1A388 MOV X2, X31
	0x03B1A38C MOV X19, X0
	0x03B1A390 BL 0x3C145DC
	0x03B1A394 CBZ X20, 0x3B1A3F8
	0x03B1A398 MOV X0, X20
	0x03B1A39C MOV X1, X31
	0x03B1A3A0 BL 0x3C15294
	0x03B1A3A4 CBZ X19, 0x3B1A3F8
	0x03B1A3A8 ADRP X20, 0x63F000
	0x03B1A3AC LDR X20, [X20 + 0x1E0]
	0x03B1A3B0 MOV X1, X0
	0x03B1A3B4 MOV X0, X19
	0x03B1A3B8 MOV X2, X31
	0x03B1A3BC BL 0x3C152D0
	0x03B1A3C0 MOV X0, X19
	0x03B1A3C4 MOV X1, X31
	0x03B1A3C8 BL 0x3C389D4
	0x03B1A3CC LDR X1, [X20]
	0x03B1A3D0 MOV X2, X31
	0x03B1A3D4 BL 0x321B938

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8C9000
	007 Move W8, [X21+1740]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x640000
	015 Move X0, [X0+2560]
	016 Call 0x1C17CF4
	017 Move X0, 0x640000
	018 Move X0, [X0+496]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1740], W8
	022 Move [X31+8], X31
	023 Move X21, 0x640000
	024 Move X8, [X19+32]
	025 Move X21, [X21+496]
	026 Compare X8, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X19
	029 Call TMP_StyleSheet.LoadStyleDictionaryInternal, X0
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Call TMP_TextParsingUtilities.GetHashCode, X0
	037 Move X8, [X19+32]
	038 Compare X8, 0
	039 JumpIfEqual {56}
	040 Move X9, 0x640000
	041 Move X9, [X9+2560]
	042 Move W1, W0
	043 Add X2, X31, 8
	044 Move X0, X8
	045 Move X3, [X9]
	046 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	047 Move X8, [X31+8]
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 And W31, W0, 1
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Add X31, X31, 48
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void RefreshStyles()

Disassembly:
	0x03B1A3D8 MOV X1, X0

ISIL:
	001 Call TMP_StyleSheet.LoadStyleDictionaryInternal, X0
	002 Return 

Method: System.Void LoadStyleDictionaryInternal()

Disassembly:
	0x03B19F98 BL 0x1C16F44
	0x03B19F9C MOV X1, X31
	0x03B19FA0 BL 0x1C16DEC
	0x03B19FA4 STP X30, X21, [X31 - 0x20]!
	0x03B19FA8 STP X20, X19, [X31 + 0x10]
	0x03B19FAC ADRP X20, 0x8C9000
	0x03B19FB0 LDRB W8, [X20 + 0x6D5]
	0x03B19FB4 MOV X19, X0
	0x03B19FB8 TBNZ X8, 0x0, 0x3B19FDC
	0x03B19FBC ADRP X0, 0x5DA000
	0x03B19FC0 LDR X0, [X0 + 0x598]
	0x03B19FC4 BL 0x1C16CF4
	0x03B19FC8 ADRP X0, 0x63F000
	0x03B19FCC LDR X0, [X0 + 0x338]
	0x03B19FD0 BL 0x1C16CF4
	0x03B19FD4 MOVZ W8, 0x1
	0x03B19FD8 STRB W8, [X20 + 0x6D5]
	0x03B19FDC LDRB W8, [X19 + 0x78]
	0x03B19FE0 CBNZ W8, 0x3B19FEC
	0x03B19FE4 MOVZ W8, 0x1
	0x03B19FE8 STRB W8, [X19 + 0x78]
	0x03B19FEC MOV X0, X19
	0x03B19FF0 MOV X1, X31
	0x03B19FF4 BL 0x3C396B0
	0x03B19FF8 CMP W0, 0x34
	0x03B19FFC B.EQ 0x3B1A010
	0x03B1A000 MOVZ W1, 0x34
	0x03B1A004 MOV X0, X19
	0x03B1A008 MOV X2, X31
	0x03B1A00C BL 0x3C396EC
	0x03B1A010 MOV X0, X19
	0x03B1A014 BL 0x3B19998
	0x03B1A018 MOV X20, X0
	0x03B1A01C MOV X0, X19
	0x03B1A020 BL 0x3B19A94
	0x03B1A024 CBZ X20, 0x3B1A0CC
	0x03B1A028 ADRP X21, 0x5D9000
	0x03B1A02C LDR X21, [X21 + 0x598]
	0x03B1A030 MOV X1, X0
	0x03B1A034 MOV X0, X20
	0x03B1A038 MOV X2, X31
	0x03B1A03C BL 0x3C16D40
	0x03B1A040 LDR X0, [X21]
	0x03B1A044 LDR X20, [X19 + 0x38]
	0x03B1A048 LDR W8, [X0 + 0xE0]
	0x03B1A04C CBNZ W8, 0x3B1A054
	0x03B1A050 BL 0x1C16DFC
	0x03B1A054 MOV X0, X20
	0x03B1A058 MOV X1, X31
	0x03B1A05C MOV X2, X31
	0x03B1A060 BL 0x3C354F8
	0x03B1A064 TBZ X0, 0x0, 0x3B1A0C0
	0x03B1A068 ADRP X20, 0x63E000
	0x03B1A06C LDR X20, [X20 + 0x338]
	0x03B1A070 LDR X19, [X19 + 0x38]
	0x03B1A074 LDR X0, [X20]
	0x03B1A078 LDR W8, [X0 + 0xE0]
	0x03B1A07C CBNZ W8, 0x3B1A084
	0x03B1A080 BL 0x1C16DFC
	0x03B1A084 CBZ X19, 0x3B1A0CC
	0x03B1A088 LDR X8, [X20]
	0x03B1A08C ADRP X9, 0xFFFFFFFFFCFD0000
	0x03B1A090 ADRP X10, 0xFFFFFFFFFCFD0000
	0x03B1A094 LDR V0, [X9 + 0x214]
	0x03B1A098 LDR X8, [X8 + 0xB8]
	0x03B1A09C LDR V2, [X10 + 0x374]
	0x03B1A0A0 MOV X0, X19
	0x03B1A0A4 LDP X20, X19, [X31 + 0x10]
	0x03B1A0A8 LDR W1, [X8 + 0x9C]
	0x03B1A0AC MOV V1.16B, V0.16B
	0x03B1A0B0 MOV V3.16B, V2.16B
	0x03B1A0B4 MOV X2, X31
	0x03B1A0B8 LDP X30, X21, [X31], #0x20
	0x03B1A0BC B 0x3C15D80
	0x03B1A0C0 LDP X20, X19, [X31 + 0x10]
	0x03B1A0C4 LDP X30, X21, [X31], #0x20
	0x03B1A0C8 RET
	0x03B1A0CC BL 0x1C16F20
	0x03B1A0D0 STR X30, [X31 - 0x20]!
	0x03B1A0D4 STP X20, X19, [X31 + 0x10]
	0x03B1A0D8 ADRP X20, 0x8C8000
	0x03B1A0DC LDRB W8, [X20 + 0x6D6]
	0x03B1A0E0 MOV X19, X0
	0x03B1A0E4 TBNZ X8, 0x0, 0x3B1A108
	0x03B1A0E8 ADRP X0, 0x5D9000
	0x03B1A0EC LDR X0, [X0 + 0x598]
	0x03B1A0F0 BL 0x1C16CF4
	0x03B1A0F4 ADRP X0, 0x63E000
	0x03B1A0F8 LDR X0, [X0 + 0x620]
	0x03B1A0FC BL 0x1C16CF4
	0x03B1A100 MOVZ W8, 0x1
	0x03B1A104 STRB W8, [X20 + 0x6D6]
	0x03B1A108 LDR X0, [X19 + 0x60]
	0x03B1A10C CBZ X0, 0x3B1A180
	0x03B1A110 ADRP X20, 0x5D9000
	0x03B1A114 LDR X20, [X20 + 0x598]
	0x03B1A118 MOV X1, X31
	0x03B1A11C MOV X2, X31
	0x03B1A120 BL 0x3C16D40
	0x03B1A124 LDR X0, [X20]
	0x03B1A128 LDR X20, [X19 + 0x40]
	0x03B1A12C LDR W8, [X0 + 0xE0]
	0x03B1A130 CBNZ W8, 0x3B1A138
	0x03B1A134 BL 0x1C16DFC
	0x03B1A138 MOV X0, X20
	0x03B1A13C MOV X1, X31
	0x03B1A140 MOV X2, X31
	0x03B1A144 BL 0x3C354F8
	0x03B1A148 TBZ X0, 0x0, 0x3B1A174
	0x03B1A14C ADRP X8, 0x63E000
	0x03B1A150 LDR X8, [X8 + 0x620]
	0x03B1A154 LDR X20, [X19 + 0x40]
	0x03B1A158 LDR X0, [X8]
	0x03B1A15C LDR W8, [X0 + 0xE0]
	0x03B1A160 CBNZ W8, 0x3B1A168
	0x03B1A164 BL 0x1C16DFC
	0x03B1A168 MOV X0, X20
	0x03B1A16C BL 0x3B10BA8
	0x03B1A170 STR X31, [X19 + 0x40]
	0x03B1A174 LDP X20, X19, [X31 + 0x10]
	0x03B1A178 LDR X30, [X31], #0x20
	0x03B1A17C RET
	0x03B1A180 BL 0x1C16F20
	0x03B1A184 STP X30, X21, [X31 - 0x20]!
	0x03B1A188 STP X20, X19, [X31 + 0x10]
	0x03B1A18C ADRP X20, 0x8C8000
	0x03B1A190 ADRP X21, 0x5D9000
	0x03B1A194 LDRB W8, [X20 + 0x6D7]
	0x03B1A198 LDR X21, [X21 + 0x598]
	0x03B1A19C MOV X19, X0
	0x03B1A1A0 TBNZ X8, 0x0, 0x3B1A1C4
	0x03B1A1A4 ADRP X0, 0x5D9000
	0x03B1A1A8 LDR X0, [X0 + 0x598]
	0x03B1A1AC BL 0x1C16CF4
	0x03B1A1B0 ADRP X0, 0x63E000
	0x03B1A1B4 LDR X0, [X0 + 0x620]
	0x03B1A1B8 BL 0x1C16CF4
	0x03B1A1BC MOVZ W8, 0x1
	0x03B1A1C0 STRB W8, [X20 + 0x6D7]
	0x03B1A1C4 LDR X0, [X21]
	0x03B1A1C8 LDR X20, [X19 + 0x68]
	0x03B1A1CC LDR W8, [X0 + 0xE0]
	0x03B1A1D0 CBNZ W8, 0x3B1A1D8
	0x03B1A1D4 BL 0x1C16DFC
	0x03B1A1D8 MOV X0, X20
	0x03B1A1DC MOV X1, X31
	0x03B1A1E0 MOV X2, X31
	0x03B1A1E4 BL 0x3C354F8
	0x03B1A1E8 TBZ X0, 0x0, 0x3B1A20C
	0x03B1A1EC LDR X0, [X21]
	0x03B1A1F0 LDR X20, [X19 + 0x68]
	0x03B1A1F4 LDR W8, [X0 + 0xE0]
	0x03B1A1F8 CBNZ W8, 0x3B1A200
	0x03B1A1FC BL 0x1C16DFC
	0x03B1A200 MOV X0, X20
	0x03B1A204 MOV X1, X31
	0x03B1A208 BL 0x3C39564
	0x03B1A20C LDR X0, [X21]
	0x03B1A210 LDR X20, [X19 + 0x40]
	0x03B1A214 LDR W8, [X0 + 0xE0]
	0x03B1A218 CBNZ W8, 0x3B1A220
	0x03B1A21C BL 0x1C16DFC
	0x03B1A220 MOV X0, X20
	0x03B1A224 MOV X1, X31
	0x03B1A228 MOV X2, X31
	0x03B1A22C BL 0x3C354F8
	0x03B1A230 TBZ X0, 0x0, 0x3B1A25C
	0x03B1A234 ADRP X8, 0x63E000
	0x03B1A238 LDR X8, [X8 + 0x620]
	0x03B1A23C LDR X20, [X19 + 0x40]
	0x03B1A240 LDR X0, [X8]
	0x03B1A244 LDR W8, [X0 + 0xE0]
	0x03B1A248 CBNZ W8, 0x3B1A250
	0x03B1A24C BL 0x1C16DFC
	0x03B1A250 MOV X0, X20
	0x03B1A254 BL 0x3B10BA8
	0x03B1A258 STR X31, [X19 + 0x40]
	0x03B1A25C STRB W31, [X19 + 0x78]
	0x03B1A260 LDR X0, [X21]
	0x03B1A264 LDR X20, [X19 + 0x70]
	0x03B1A268 LDR W8, [X0 + 0xE0]
	0x03B1A26C CBNZ W8, 0x3B1A274
	0x03B1A270 BL 0x1C16DFC
	0x03B1A274 MOV X0, X20
	0x03B1A278 MOV X1, X31
	0x03B1A27C MOV X2, X31
	0x03B1A280 BL 0x3C354F8
	0x03B1A284 TBZ X0, 0x0, 0x3B1A2BC
	0x03B1A288 LDR X0, [X19 + 0x70]
	0x03B1A28C CBZ X0, 0x3B1A2C8
	0x03B1A290 MOVZ W1, 0x1
	0x03B1A294 MOV X2, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x8CA000
	012 Move W8, [X20+1741]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0x641000
	019 Move X0, [X0+2496]
	020 Call 0x1C17CF4
	021 Move X0, 0x641000
	022 Move X0, [X0+2504]
	023 Call 0x1C17CF4
	024 Move X0, 0x641000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0x641000
	028 Move X0, [X0+2520]
	029 Call 0x1C17CF4
	030 Move X0, 0x641000
	031 Move X0, [X0+2528]
	032 Call 0x1C17CF4
	033 Move X0, 0x641000
	034 Move X0, [X0+2536]
	035 Call 0x1C17CF4
	036 Move X0, 0x640000
	037 Move X0, [X0+2544]
	038 Call 0x1C17CF4
	039 Move X0, 0x640000
	040 Move X0, [X0+2552]
	041 Call 0x1C17CF4
	042 Move X0, 0x5DC000
	043 Move X0, [X0+632]
	044 Call 0x1C17CF4
	045 Move X0, 0x640000
	046 Move X0, [X0+2480]
	047 Call 0x1C17CF4
	048 Move X0, 0x640000
	049 Move X0, [X0+496]
	050 Call 0x1C17CF4
	051 Move X0, 0x640000
	052 Move X0, [X0+2488]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1741], W8
	056 Move X0, [X19+32]
	057 Compare X0, 0
	058 JumpIfEqual {63}
	059 Move X8, 0x640000
	060 Move X8, [X8+2504]
	061 Move X1, [X8]
	062 Call Dictionary`2<Int32, Object>.Clear, X0
	063 Move X8, 0x640000
	064 Move X8, [X8+2528]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X8, 0x640000
	068 Move X8, [X8+2520]
	069 Move X20, X0
	070 Move X1, [X8]
	071 Call Dictionary`2<Int32, Object>..ctor, X0
	072 Move [X19+32], X20
	073 Move X0, [X19+24]
	074 Compare X0, 0
	075 JumpIfEqual {228}
	076 Move X26, 0x640000
	077 Move X25, 0x640000
	078 Move X23, 0x640000
	079 Move X27, 0x640000
	080 Move X24, 0x640000
	081 Move X26, [X26+2552]
	082 Move X25, [X25+2512]
	083 Move X23, [X23+2496]
	084 Move X27, [X27+496]
	085 Move X24, [X24+2488]
	086 Move W20, W31
	087 Move W8, [X0+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X2, [X26]
	090 Move W1, W20
	091 Call List`1<Object>.get_Item, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {228}
	094 Call TMP_Style.RefreshStyle, X0
	095 Move X0, [X19+24]
	096 Compare X0, 0
	097 JumpIfEqual {228}
	098 Move X2, [X26]
	099 Move X21, [X19+32]
	100 Move W1, W20
	101 Call List`1<Object>.get_Item, X0, X1
	102 Compare X0, 0
	103 JumpIfEqual {228}
	104 Compare X21, 0
	105 JumpIfEqual {228}
	106 Move W1, [X0+24]
	107 Move X2, [X25]
	108 Move X0, X21
	109 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {138}
	114 Move X0, [X19+24]
	115 Compare X0, 0
	116 JumpIfEqual {228}
	117 Move X2, [X26]
	118 Move X21, [X19+32]
	119 Move W1, W20
	120 Call List`1<Object>.get_Item, X0, X1
	121 Compare X0, 0
	122 JumpIfEqual {228}
	123 Move X8, [X19+24]
	124 Compare X8, 0
	125 JumpIfEqual {228}
	126 Move X2, [X26]
	127 Move W22, [X0+24]
	128 Move X0, X8
	129 Move W1, W20
	130 Call List`1<Object>.get_Item, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {228}
	133 Move X3, [X23]
	134 Move X2, X0
	135 Move X0, X21
	136 Move W1, W22
	137 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	138 Move X0, [X19+24]
	139 Add W20, W20, 1
	140 Compare X0, 0
	141 JumpIfNotEqual {87}
	142 Move X0, [X27]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, [X24]
	148 Call TMP_TextParsingUtilities.GetHashCode, X0
	149 Move X8, [X19+32]
	150 Compare X8, 0
	151 JumpIfEqual {228}
	152 Move X2, [X25]
	153 Move W20, W0
	154 Move X0, X8
	155 Move W1, W20
	156 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {172}
	161 Move X20, [X31+64]
	162 Move X19, [X31+72]
	163 Move X22, [X31+48]
	164 Move X21, [X31+56]
	165 Move X24, [X31+32]
	166 Move X23, [X31+40]
	167 Move X26, [X31+16]
	168 Move X25, [X31+24]
	169 Move X30, [X31+80]
	170 Move X27, [X31+88]
	171 Return 
	172 Move X8, 0x5DC000
	173 Move X8, [X8+632]
	174 Move X9, 0x640000
	175 Move X8, [X8]
	176 Move X8, [X8+184]
	177 Move X9, [X9+2480]
	178 Move X22, [X8]
	179 Move X0, [X9]
	180 Call 0x1C17F10
	181 Move X1, [X24]
	182 Move X2, X22
	183 Move X3, X22
	184 Move X21, X0
	185 Call TMP_Style..ctor, X0, X1, X2, X3
	186 Move X0, [X19+24]
	187 Compare X0, 0
	188 JumpIfEqual {228}
	189 Move X9, 0x640000
	190 Move X9, [X9+2536]
	191 Move W10, [X0+28]
	192 Move X8, [X0+16]
	193 Move X9, [X9]
	194 Add W10, W10, 1
	195 Move [X0+28], W10
	196 Compare X8, 0
	197 JumpIfEqual {228}
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Move W11, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add W9, W10, 1
	202 Add X8, X8, X10
	203 Move [X0+24], W9
	204 Move [X8+32], X21
	205 Move X8, [X9+32]
	206 Move X1, X21
	207 Move X8, [X8+192]
	208 Move X2, [X8+112]
	209 Call List`1<Object>.AddWithResize, X0, X1
	210 Move X0, [X19+32]
	211 Compare X0, 0
	212 JumpIfEqual {228}
	213 Move X3, [X23]
	214 Move W1, W20
	215 Move X2, X21
	216 Move X20, [X31+64]
	217 Move X19, [X31+72]
	218 Move X22, [X31+48]
	219 Move X21, [X31+56]
	220 Move X24, [X31+32]
	221 Move X23, [X31+40]
	222 Move X26, [X31+16]
	223 Move X25, [X31+24]
	224 Move X30, [X31+80]
	225 Move X27, [X31+88]
	226 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	227 Return 
	228 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B1A3DC MOV X0, X19
	0x03B1A3E0 MOV X2, X31
	0x03B1A3E4 BL 0x3C38A84
	0x03B1A3E8 MOV X0, X19
	0x03B1A3EC LDP X20, X19, [X31 + 0x10]
	0x03B1A3F0 LDP X30, X21, [X31], #0x20
	0x03B1A3F4 RET
	0x03B1A3F8 BL 0x1C16F20
	0x03B1A3FC STP X30, X21, [X31 - 0x20]!
	0x03B1A400 STP X20, X19, [X31 + 0x10]
	0x03B1A404 ADRP X21, 0x8C8000
	0x03B1A408 ADRP X20, 0x5D9000
	0x03B1A40C LDRB W8, [X21 + 0x6DB]
	0x03B1A410 LDR X20, [X20 + 0x598]
	0x03B1A414 MOV X19, X0
	0x03B1A418 TBNZ X8, 0x0, 0x3B1A43C
	0x03B1A41C ADRP X0, 0x605000
	0x03B1A420 LDR X0, [X0 + 0x5A0]
	0x03B1A424 BL 0x1C16CF4
	0x03B1A428 ADRP X0, 0x5D9000
	0x03B1A42C LDR X0, [X0 + 0x598]
	0x03B1A430 BL 0x1C16CF4
	0x03B1A434 MOVZ W8, 0x1
	0x03B1A438 STRB W8, [X21 + 0x6DB]
	0x03B1A43C LDR X0, [X20]
	0x03B1A440 LDR X20, [X19 + 0x58]
	0x03B1A444 LDR W8, [X0 + 0xE0]
	0x03B1A448 CBNZ W8, 0x3B1A450
	0x03B1A44C BL 0x1C16DFC
	0x03B1A450 MOV X0, X20
	0x03B1A454 MOV X1, X31
	0x03B1A458 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8C9000
	007 Move X22, 0x640000
	008 Move X20, 0x640000
	009 Move W8, [X21+1742]
	010 Move X22, [X22+2568]
	011 Move X20, [X20+2576]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x640000
	018 Move X0, [X0+2576]
	019 Call 0x1C17CF4
	020 Move X0, 0x640000
	021 Move X0, [X0+2568]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1742], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move W1, 1
	029 Move X20, X0
	030 Call List`1<Object>..ctor, X0, X1
	031 Move [X19+24], X20
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+48]
	039 Call ScriptableObject..ctor, X0
	040 Return 

