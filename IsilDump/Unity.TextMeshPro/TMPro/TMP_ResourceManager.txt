Type: TMPro.TMP_ResourceManager

Method: System.Void .cctor()

Disassembly:
	0x03B144E4 STR X30, [X31 - 0x20]!
	0x03B144E8 STP X20, X19, [X31 + 0x10]
	0x03B144EC ADRP X20, 0x8CE000
	0x03B144F0 ADRP X19, 0x5DF000
	0x03B144F4 LDRB W8, [X20 + 0x6A5]
	0x03B144F8 LDR X19, [X19 + 0x598]
	0x03B144FC TBNZ X8, 0x0, 0x3B14514
	0x03B14500 ADRP X0, 0x5DF000
	0x03B14504 LDR X0, [X0 + 0x598]
	0x03B14508 BL 0x1C16CF4
	0x03B1450C MOVZ W8, 0x1
	0x03B14510 STRB W8, [X20 + 0x6A5]
	0x03B14514 BL 0x3B13C88
	0x03B14518 LDR X8, [X19]
	0x03B1451C MOV X19, X0
	0x03B14520 LDR W9, [X8 + 0xE0]
	0x03B14524 CBNZ W9, 0x3B14530
	0x03B14528 MOV X0, X8
	0x03B1452C BL 0x1C16DFC
	0x03B14530 MOV X0, X19
	0x03B14534 MOV X1, X31
	0x03B14538 MOV X2, X31
	0x03B1453C BL 0x3C3883C
	0x03B14540 MOV W8, W0
	0x03B14544 MOV X0, X31
	0x03B14548 TBNZ X8, 0x0, 0x3B14558
	0x03B1454C BL 0x3B13C88
	0x03B14550 CBZ X0, 0x3B14564
	0x03B14554 LDR X0, [X0 + 0x88]
	0x03B14558 LDP X20, X19, [X31 + 0x10]
	0x03B1455C LDR X30, [X31], #0x20
	0x03B14560 RET
	0x03B14564 BL 0x1C16F20
	0x03B14568 MOV X1, X31
	0x03B1456C B 0x33BDD8C
	0x03B14570 STP X30, X25, [X31 - 0x40]!
	0x03B14574 STP X24, X23, [X31 + 0x10]
	0x03B14578 STP X22, X21, [X31 + 0x20]
	0x03B1457C STP X20, X19, [X31 + 0x30]
	0x03B14580 ADRP X21, 0x8CE000
	0x03B14584 ADRP X22, 0x645000
	0x03B14588 ADRP X19, 0x645000
	0x03B1458C LDRB W8, [X21 + 0x6A7]
	0x03B14590 LDR X22, [X22 + 0x7D8]
	0x03B14594 LDR X19, [X19 + 0x7E0]
	0x03B14598 MOV X20, X0
	0x03B1459C TBNZ X8, 0x0, 0x3B145D8
	0x03B145A0 ADRP X0, 0x645000
	0x03B145A4 LDR X0, [X0 + 0x7E8]
	0x03B145A8 BL 0x1C16CF4
	0x03B145AC ADRP X0, 0x644000
	0x03B145B0 LDR X0, [X0 + 0x318]
	0x03B145B4 BL 0x1C16CF4
	0x03B145B8 ADRP X0, 0x645000
	0x03B145BC LDR X0, [X0 + 0x7E0]
	0x03B145C0 BL 0x1C16CF4
	0x03B145C4 ADRP X0, 0x645000
	0x03B145C8 LDR X0, [X0 + 0x7D8]
	0x03B145CC BL 0x1C16CF4
	0x03B145D0 MOVZ W8, 0x1
	0x03B145D4 STRB W8, [X21 + 0x6A7]
	0x03B145D8 LDR X0, [X22]
	0x03B145DC BL 0x1C16F10

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x8CF000
	009 Move X20, 0x646000
	010 Move X24, 0x645000
	011 Move X23, 0x645000
	012 Move X22, 0x645000
	013 Move X21, 0x645000
	014 Move W8, [X19+1686]
	015 Move X20, [X20+1928]
	016 Move X24, [X24+3160]
	017 Move X23, [X23+3864]
	018 Move X22, [X22+1208]
	019 Move X21, [X21+1216]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x645000
	025 Move X0, [X0+1216]
	026 Call 0x1C17CF4
	027 Move X0, 0x645000
	028 Move X0, [X0+1208]
	029 Call 0x1C17CF4
	030 Move X0, 0x645000
	031 Move X0, [X0+3864]
	032 Call 0x1C17CF4
	033 Move X0, 0x645000
	034 Move X0, [X0+3160]
	035 Call 0x1C17CF4
	036 Move X0, 0x646000
	037 Move X0, [X0+1928]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+1686], W8
	041 Move X0, [X20]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X19, X0
	045 Call Object..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X24]
	050 Call 0x1C17F10
	051 Move X1, [X23]
	052 Move X19, X0
	053 Call List`1<Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X8, [X8+184]
	056 Move [X8+16], X19
	057 Move X0, [X22]
	058 Call 0x1C17F10
	059 Move X1, [X21]
	060 Move X19, X0
	061 Call Dictionary`2<Int32, Object>..ctor, X0
	062 Move X8, [X20]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X8, [X8+184]
	068 Move [X8+24], X19
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X30, [X31+64]
	072 Return 

Method: TMPro.TMP_Settings GetTextSettings()

Disassembly:
	0x03B145E8 BL 0x2A03BEC
	0x03B145EC CBZ X20, 0x3B14690
	0x03B145F0 MOV X0, X20
	0x03B145F4 MOV X1, X31
	0x03B145F8 BL 0x3C37D58
	0x03B145FC CBZ X0, 0x3B14690
	0x03B14600 LDR W8, [X0 + 0x10]
	0x03B14604 MOV X20, X0
	0x03B14608 CMP W8, 0x1
	0x03B1460C B.LT 0x3B14678
	0x03B14610 ADRP X24, 0x644000
	0x03B14614 ADRP X25, 0x645000
	0x03B14618 LDR X24, [X24 + 0x318]
	0x03B1461C LDR X25, [X25 + 0x7E8]
	0x03B14620 MOV W21, W31
	0x03B14624 MOV X0, X20
	0x03B14628 MOV W1, W21
	0x03B1462C MOV X2, X31
	0x03B14630 BL 0x3222A1C
	0x03B14634 CBZ X19, 0x3B14690
	0x03B14638 LDR X2, [X24]
	0x03B1463C AND W23, W0, 0xFFFF
	0x03B14640 MOV W22, W0
	0x03B14644 MOV X0, X19
	0x03B14648 MOV W1, W23
	0x03B1464C BL 0x2A04684
	0x03B14650 TBNZ X0, 0x0, 0x3B14668
	0x03B14654 LDR X3, [X25]
	0x03B14658 MOV X0, X19
	0x03B1465C MOV W1, W23
	0x03B14660 MOV W2, W22
	0x03B14664 BL 0x2A04498
	0x03B14668 LDR W8, [X20 + 0x10]
	0x03B1466C ADD W21, W21, 0x1
	0x03B14670 CMP W21, W8
	0x03B14674 B.LT 0x3B14624
	0x03B14678 MOV X0, X19
	0x03B1467C LDP X20, X19, [X31 + 0x30]
	0x03B14680 LDP X22, X21, [X31 + 0x20]
	0x03B14684 LDP X24, X23, [X31 + 0x10]
	0x03B14688 LDP X30, X25, [X31], #0x40
	0x03B1468C RET
	0x03B14690 BL 0x1C16F20
	0x03B14694 MOVZ W8, 0x101
	0x03B14698 MOV X1, X31
	0x03B1469C STURH W8, [X0 + 0x1D]
	0x03B146A0 B 0x3C36D2C
	0x03B146A4 STR X30, [X31 - 0x20]!
	0x03B146A8 STP X20, X19, [X31 + 0x10]
	0x03B146AC ADRP X19, 0x8CE000
	0x03B146B0 ADRP X20, 0x644000
	0x03B146B4 LDRB W8, [X19 + 0x6A8]
	0x03B146B8 LDR X20, [X20 + 0x338]
	0x03B146BC TBNZ X8, 0x0, 0x3B146EC
	0x03B146C0 ADRP X0, 0x5DF000
	0x03B146C4 LDR X0, [X0 + 0x598]
	0x03B146C8 BL 0x1C16CF4
	0x03B146CC ADRP X0, 0x644000
	0x03B146D0 LDR X0, [X0 + 0x338]
	0x03B146D4 BL 0x1C16CF4
	0x03B146D8 ADRP X0, 0x645000
	0x03B146DC LDR X0, [X0 + 0x590]
	0x03B146E0 BL 0x1C16CF4
	0x03B146E4 MOVZ W8, 0x1
	0x03B146E8 STRB W8, [X19 + 0x6A8]
	0x03B146EC LDR X0, [X20]
	0x03B146F0 ADRP X19, 0x5DF000
	0x03B146F4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x8CF000
	005 Move X20, 0x646000
	006 Move W8, [X19+1687]
	007 Move X20, [X20+1928]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x5E0000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x646000
	016 Move X0, [X0+1936]
	017 Call 0x1C17CF4
	018 Move X0, 0x646000
	019 Move X0, [X0+1928]
	020 Call 0x1C17CF4
	021 Move X0, 0x646000
	022 Move X0, [X0+1944]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+1687], W8
	026 Move X0, [X20]
	027 Move X19, 0x5E0000
	028 Move W8, [X0+224]
	029 Move X19, [X19+1432]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X19]
	035 Move X9, [X0+184]
	036 Move W10, [X8+224]
	037 Move X19, [X9+8]
	038 Compare W10, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X19
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {67}
	050 Move X8, 0x646000
	051 Move X9, 0x646000
	052 Move X8, [X8+1944]
	053 Move X9, [X9+1936]
	054 Move X0, [X8]
	055 Move X1, [X9]
	056 Call 0x2242FB8, X0
	057 Move X8, [X20]
	058 Move X19, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {65}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X8, [X20]
	065 Move X9, [X8+184]
	066 Move [X9+8], X19
	067 Move X8, [X20]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X8, [X20]
	074 Move X8, [X8+184]
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X0, [X8+8]
	078 Move X30, [X31+32]
	079 Return X0

Method: System.Void AddFontAsset(TMPro.TMP_FontAsset fontAsset)

Disassembly:
	0x03B146F8 LDR X19, [X19 + 0x598]
	0x03B146FC CBNZ W8, 0x3B14708
	0x03B14700 BL 0x1C16DFC
	0x03B14704 LDR X0, [X20]
	0x03B14708 LDR X8, [X19]
	0x03B1470C LDR X9, [X0 + 0xB8]
	0x03B14710 LDR W10, [X8 + 0xE0]
	0x03B14714 LDR X19, [X9 + 0x130]
	0x03B14718 CBNZ W10, 0x3B14724
	0x03B1471C MOV X0, X8
	0x03B14720 BL 0x1C16DFC
	0x03B14724 MOV X0, X19
	0x03B14728 MOV X1, X31
	0x03B1472C MOV X2, X31
	0x03B14730 BL 0x3C3883C
	0x03B14734 TBZ X0, 0x0, 0x3B14774
	0x03B14738 ADRP X8, 0x645000
	0x03B1473C LDR X8, [X8 + 0x590]
	0x03B14740 MOV X1, X31
	0x03B14744 LDR X0, [X8]
	0x03B14748 BL 0x3C13E40
	0x03B1474C LDR X8, [X20]
	0x03B14750 MOV X19, X0
	0x03B14754 LDR W9, [X8 + 0xE0]
	0x03B14758 CBNZ W9, 0x3B14768
	0x03B1475C MOV X0, X8
	0x03B14760 BL 0x1C16DFC
	0x03B14764 LDR X8, [X20]
	0x03B14768 LDR X9, [X8 + 0xB8]
	0x03B1476C STR X19, [X9 + 0x130]
	0x03B14770 B 0x3B14778
	0x03B14774 LDR X8, [X20]
	0x03B14778 LDR W9, [X8 + 0xE0]
	0x03B1477C CBNZ W9, 0x3B1478C
	0x03B14780 MOV X0, X8
	0x03B14784 BL 0x1C16DFC
	0x03B14788 LDR X8, [X20]
	0x03B1478C LDR X8, [X8 + 0xB8]
	0x03B14790 LDP X20, X19, [X31 + 0x10]
	0x03B14794 LDR X0, [X8 + 0x130]
	0x03B14798 LDR X30, [X31], #0x20
	0x03B1479C RET
	0x03B147A0 STR X30, [X31 - 0x20]!
	0x03B147A4 STP X20, X19, [X31 + 0x10]
	0x03B147A8 ADRP X19, 0x8CE000
	0x03B147AC ADRP X20, 0x644000
	0x03B147B0 LDRB W8, [X19 + 0x6A9]
	0x03B147B4 LDR X20, [X20 + 0x338]
	0x03B147B8 TBNZ X8, 0x0, 0x3B147E8
	0x03B147BC ADRP X0, 0x5DF000
	0x03B147C0 LDR X0, [X0 + 0x598]
	0x03B147C4 BL 0x1C16CF4
	0x03B147C8 ADRP X0, 0x644000
	0x03B147CC LDR X0, [X0 + 0x338]
	0x03B147D0 BL 0x1C16CF4
	0x03B147D4 ADRP X0, 0x645000
	0x03B147D8 LDR X0, [X0 + 0x5E0]
	0x03B147DC BL 0x1C16CF4
	0x03B147E0 MOVZ W8, 0x1
	0x03B147E4 STRB W8, [X19 + 0x6A9]
	0x03B147E8 LDR X0, [X20]
	0x03B147EC ADRP X19, 0x5DF000
	0x03B147F0 LDR W8, [X0 + 0xE0]
	0x03B147F4 LDR X19, [X19 + 0x598]
	0x03B147F8 CBNZ W8, 0x3B14804
	0x03B147FC BL 0x1C16DFC
	0x03B14800 LDR X0, [X20]
	0x03B14804 LDR X8, [X19]
	0x03B14808 LDR X9, [X0 + 0xB8]
	0x03B1480C LDR W10, [X8 + 0xE0]
	0x03B14810 LDR X19, [X9 + 0x138]
	0x03B14814 CBNZ W10, 0x3B14820
	0x03B14818 MOV X0, X8
	0x03B1481C BL 0x1C16DFC
	0x03B14820 MOV X0, X19
	0x03B14824 MOV X1, X31
	0x03B14828 MOV X2, X31
	0x03B1482C BL 0x3C3883C
	0x03B14830 TBZ X0, 0x0, 0x3B14870
	0x03B14834 ADRP X8, 0x645000
	0x03B14838 LDR X8, [X8 + 0x5E0]
	0x03B1483C MOV X1, X31
	0x03B14840 LDR X0, [X8]
	0x03B14844 BL 0x3C13E40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8CF000
	006 Move W8, [X20+1688]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x645000
	013 Move X0, [X0+1256]
	014 Call 0x1C17CF4
	015 Move X0, 0x645000
	016 Move X0, [X0+1272]
	017 Call 0x1C17CF4
	018 Move X0, 0x645000
	019 Move X0, [X0+3096]
	020 Call 0x1C17CF4
	021 Move X0, 0x646000
	022 Move X0, [X0+1928]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1688], W8
	026 Compare X19, 0
	027 JumpIfEqual {102}
	028 Move X21, 0x646000
	029 Move X21, [X21+1928]
	030 Move W20, [X19+28]
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X0, [X8+24]
	039 Compare X0, 0
	040 JumpIfEqual {102}
	041 Move X8, 0x645000
	042 Move X8, [X8+1272]
	043 Move W1, W20
	044 Move X2, [X8]
	045 Call Dictionary`2<Int32, Object>.ContainsKey, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {55}
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Move X8, [X0+184]
	062 Move X0, [X8+16]
	063 Compare X0, 0
	064 JumpIfEqual {102}
	065 Move X9, 0x645000
	066 Move X9, [X9+3096]
	067 Move W10, [X0+28]
	068 Move X8, [X0+16]
	069 Move X9, [X9]
	070 Add W10, W10, 1
	071 Move [X0+28], W10
	072 Compare X8, 0
	073 JumpIfEqual {102}
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Move W11, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add W9, W10, 1
	078 Add X8, X8, X10
	079 Move [X0+24], W9
	080 Move [X8+32], X19
	081 Move X8, [X9+32]
	082 Move X1, X19
	083 Move X8, [X8+192]
	084 Move X2, [X8+112]
	085 Call List`1<Object>.AddWithResize, X0, X1
	086 Move X8, [X21]
	087 Move X8, [X8+184]
	088 Move X0, [X8+24]
	089 Compare X0, 0
	090 JumpIfEqual {102}
	091 Move X8, 0x645000
	092 Move X8, [X8+1256]
	093 Move W1, W20
	094 Move X2, X19
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X3, [X8]
	098 Move X30, [X31+32]
	099 Move X21, [X31+40]
	100 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	101 Return 
	102 Call 0x1C17F20

Method: System.Boolean TryGetFontAsset(System.Int32 hashcode, out TMPro.TMP_FontAsset fontAsset)

Disassembly:
	0x03B14848 LDR X8, [X20]
	0x03B1484C MOV X19, X0
	0x03B14850 LDR W9, [X8 + 0xE0]
	0x03B14854 CBNZ W9, 0x3B14864
	0x03B14858 MOV X0, X8
	0x03B1485C BL 0x1C16DFC
	0x03B14860 LDR X8, [X20]
	0x03B14864 LDR X9, [X8 + 0xB8]
	0x03B14868 STR X19, [X9 + 0x138]
	0x03B1486C B 0x3B14874
	0x03B14870 LDR X8, [X20]
	0x03B14874 LDR W9, [X8 + 0xE0]
	0x03B14878 CBNZ W9, 0x3B14888
	0x03B1487C MOV X0, X8
	0x03B14880 BL 0x1C16DFC
	0x03B14884 LDR X8, [X20]
	0x03B14888 LDR X8, [X8 + 0xB8]
	0x03B1488C LDP X20, X19, [X31 + 0x10]
	0x03B14890 LDR X0, [X8 + 0x138]
	0x03B14894 LDR X30, [X31], #0x20
	0x03B14898 RET
	0x03B1489C STP X29, X30, [X31 - 0x60]!
	0x03B148A0 STP X28, X27, [X31 + 0x10]
	0x03B148A4 STP X26, X25, [X31 + 0x20]
	0x03B148A8 STP X24, X23, [X31 + 0x30]
	0x03B148AC STP X22, X21, [X31 + 0x40]
	0x03B148B0 STP X20, X19, [X31 + 0x50]
	0x03B148B4 ADRP X29, 0x8CE000
	0x03B148B8 ADRP X28, 0x645000
	0x03B148BC ADRP X19, 0x644000
	0x03B148C0 ADRP X27, 0x645000
	0x03B148C4 ADRP X26, 0x645000
	0x03B148C8 ADRP X25, 0x645000
	0x03B148CC ADRP X24, 0x645000
	0x03B148D0 ADRP X23, 0x645000
	0x03B148D4 ADRP X22, 0x645000
	0x03B148D8 ADRP X21, 0x645000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8CF000
	007 Move X21, 0x646000
	008 Move W8, [X22+1689]
	009 Move X21, [X21+1928]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x645000
	017 Move X0, [X0+1312]
	018 Call 0x1C17CF4
	019 Move X0, 0x646000
	020 Move X0, [X0+1928]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1689], W8
	024 Move [X19], X31
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X0, [X8+24]
	033 Compare X0, 0
	034 JumpIfEqual {47}
	035 Move X8, 0x645000
	036 Move X8, [X8+1312]
	037 Move W1, W20
	038 Move X2, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X3, [X8]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	046 Return X0
	047 Call 0x1C17F20

Method: System.Void RebuildFontAssetCache(System.Int32 instanceID)

Disassembly:
	0x03B148DC ADRP X20, 0x5E4000
	0x03B148E0 ADRP X10, 0x644000
	0x03B148E4 LDR X28, [X28 + 0x7F0]
	0x03B148E8 LDR X19, [X19 + 0x338]
	0x03B148EC LDR X27, [X27 + 0x7F8]
	0x03B148F0 LDR X26, [X26 + 0x800]
	0x03B148F4 LDR X25, [X25 + 0x808]
	0x03B148F8 LDR X24, [X24 + 0x810]
	0x03B148FC LDRB W8, [X29 + 0x6AA]
	0x03B14900 LDR X23, [X23 + 0x818]
	0x03B14904 LDR X22, [X22 + 0x820]
	0x03B14908 LDR X21, [X21 + 0x828]
	0x03B1490C LDR X20, [X20 + 0x4E0]
	0x03B14910 LDR X10, [X10 + 0x5E0]
	0x03B14914 TBNZ X8, 0x0, 0x3B149AC
	0x03B14918 ADRP X0, 0x644000
	0x03B1491C LDR X0, [X0 + 0x338]
	0x03B14920 BL 0x1C16CF4
	0x03B14924 ADRP X0, 0x645000
	0x03B14928 LDR X0, [X0 + 0x7F0]
	0x03B1492C BL 0x1C16CF4
	0x03B14930 ADRP X0, 0x5E4000
	0x03B14934 LDR X0, [X0 + 0x4E0]
	0x03B14938 BL 0x1C16CF4
	0x03B1493C ADRP X0, 0x644000
	0x03B14940 LDR X0, [X0 + 0x5E0]
	0x03B14944 BL 0x1C16CF4
	0x03B14948 ADRP X0, 0x645000
	0x03B1494C LDR X0, [X0 + 0x810]
	0x03B14950 BL 0x1C16CF4
	0x03B14954 ADRP X0, 0x645000
	0x03B14958 LDR X0, [X0 + 0x820]
	0x03B1495C BL 0x1C16CF4
	0x03B14960 ADRP X0, 0x645000
	0x03B14964 LDR X0, [X0 + 0x828]
	0x03B14968 BL 0x1C16CF4
	0x03B1496C ADRP X0, 0x645000
	0x03B14970 LDR X0, [X0 + 0x818]
	0x03B14974 BL 0x1C16CF4
	0x03B14978 ADRP X0, 0x645000
	0x03B1497C LDR X0, [X0 + 0x7F8]
	0x03B14980 BL 0x1C16CF4
	0x03B14984 ADRP X0, 0x645000
	0x03B14988 LDR X0, [X0 + 0x808]
	0x03B1498C BL 0x1C16CF4
	0x03B14990 ADRP X0, 0x645000
	0x03B14994 LDR X0, [X0 + 0x800]
	0x03B14998 BL 0x1C16CF4
	0x03B1499C ADRP X10, 0x644000
	0x03B149A0 LDR X10, [X10 + 0x5E0]
	0x03B149A4 MOVZ W8, 0x1
	0x03B149A8 STRB W8, [X29 + 0x6AA]
	0x03B149AC LDR X8, [X19]
	0x03B149B0 LDR X11, [X28]
	0x03B149B4 LDR X9, [X27]
	0x03B149B8 LDP X28, X27, [X31 + 0x10]
	0x03B149BC LDR X8, [X8 + 0xB8]
	0x03B149C0 STP X11, X9, [X8 + 0xD8]
	0x03B149C4 LDR X11, [X26]
	0x03B149C8 LDR X9, [X25]
	0x03B149CC LDP X26, X25, [X31 + 0x20]
	0x03B149D0 STP X11, X9, [X8 + 0xE8]
	0x03B149D4 LDR X11, [X24]
	0x03B149D8 LDR X9, [X23]
	0x03B149DC LDP X24, X23, [X31 + 0x30]
	0x03B149E0 STP X11, X9, [X8 + 0xF8]
	0x03B149E4 LDR X11, [X22]
	0x03B149E8 LDR X9, [X21]
	0x03B149EC LDP X22, X21, [X31 + 0x40]
	0x03B149F0 STP X11, X9, [X8 + 0x108]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8CF000
	009 Move W8, [X20+1690]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x5E1000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move X0, 0x645000
	019 Move X0, [X0+1552]
	020 Call 0x1C17CF4
	021 Move X0, 0x645000
	022 Move X0, [X0+3144]
	023 Call 0x1C17CF4
	024 Move X0, 0x646000
	025 Move X0, [X0+1928]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1690], W8
	029 Move X22, 0x646000
	030 Move X23, 0x645000
	031 Move X24, 0x5E1000
	032 Move X22, [X22+1928]
	033 Move X23, [X23+3144]
	034 Move X24, [X24+3576]
	035 Move W20, W31
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move X8, [X8+16]
	044 Compare X8, 0
	045 JumpIfEqual {86}
	046 Move W9, [X8+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {57}
	051 Call 0x1C17DFC
	052 Move X8, [X22]
	053 Move X8, [X8+184]
	054 Move X8, [X8+16]
	055 Compare X8, 0
	056 JumpIfEqual {86}
	057 Move X2, [X23]
	058 Move X0, X8
	059 Move W1, W20
	060 Call List`1<Object>.get_Item, X0, X1
	061 Compare X0, 0
	062 JumpIfEqual {86}
	063 Move X21, X0
	064 Move X0, [X0+448]
	065 Compare X0, 0
	066 JumpIfEqual {86}
	067 Move X2, [X24]
	068 Move W1, W19
	069 Call HashSet`1<Int32>.Contains, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {77}
	074 Move X0, X21
	075 Move X1, X31
	076 Call TMP_FontAsset.ReadFontAssetDefinition, X0
	077 Add W20, W20, 1
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return 
	086 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03B145E0 LDR X1, [X19]
	0x03B145E4 MOV X19, X0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

