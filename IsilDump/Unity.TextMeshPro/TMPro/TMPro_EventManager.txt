Type: TMPro.TMPro_EventManager

Method: System.Void ON_MATERIAL_PROPERTY_CHANGED(System.Boolean isChanged, UnityEngine.Material mat)

Disassembly:
	0x03ADAE7C CSEL W8, W8, W8, MI
	0x03ADAE80 FCMP S4, 0x0
	0x03ADAE84 FCSEL S3, S3, S5, PL
	0x03ADAE88 FMUL S0, S0, S2
	0x03ADAE8C FCVTZS W10, S3
	0x03ADAE90 FCMP S3, 0x0
	0x03ADAE94 FMIN S2, S0, S2
	0x03ADAE98 CSEL W10, W10, W10, MI
	0x03ADAE9C FCMP S0, 0x0
	0x03ADAEA0 FCSEL S0, S2, S5, PL
	0x03ADAEA4 FCVTZS W11, S0
	0x03ADAEA8 FCMP S0, 0x0
	0x03ADAEAC FCVTZS W9, S1
	0x03ADAEB0 CSEL W11, W11, W11, MI
	0x03ADAEB4 FCMP S1, 0x0
	0x03ADAEB8 CSEL W9, W9, W9, MI
	0x03ADAEBC AND X10, X10, 0xFF
	0x03ADAEC0 AND X0, X9, 0xFF
	0x03ADAEC4 AND X11, X11, 0xFF
	0x03ADAEC8 BFM X0, X10, 0x30, 0x7
	0x03ADAECC AND X8, X8, 0xFF
	0x03ADAED0 BFM X0, X11, 0x28, 0x7
	0x03ADAED4 BFM X0, X8, 0x38, 0x7
	0x03ADAED8 RET
	0x03ADAEDC FCMP S3, S7
	0x03ADAEE0 FCSEL S3, S3, S7, MI
	0x03ADAEE4 RET
	0x03ADAEE8 SCVTF S6, W0
	0x03ADAEEC MOVZ W8, 0x7F800000
	0x03ADAEF0 FMUL S1, S1, S6
	0x03ADAEF4 FMOV S7, W8
	0x03ADAEF8 MOVZ W9, 0x80000000
	0x03ADAEFC FMUL S4, S4, S6
	0x03ADAF00 FCVTZS W8, S1
	0x03ADAF04 FCMP S1, S7
	0x03ADAF08 FCVTZS W10, S4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x909000
	007 Move X21, 0x67F000
	008 Move W8, [X22+1332]
	009 Move X21, [X21+1008]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x67F000
	017 Move X0, [X0+1984]
	018 Call 0x1C17CF4
	019 Move X0, 0x67F000
	020 Move X0, [X0+1008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1332], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x67F000
	035 Move X8, [X8+1984]
	036 And W1, W20, 1
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call 0x2D12CEC, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void ON_FONT_PROPERTY_CHANGED(System.Boolean isChanged, UnityEngine.Object obj)

Disassembly:
	0x03ADAF0C CSEL W8, W9, W8, EQ
	0x03ADAF10 FCMP S4, S7
	0x03ADAF14 CSEL W10, W9, W10, EQ
	0x03ADAF18 FMUL S2, S2, S6
	0x03ADAF1C CMP W8, W10
	0x03ADAF20 FMUL S5, S5, S6
	0x03ADAF24 FCVTZS W11, S2
	0x03ADAF28 CSET W10, EQ
	0x03ADAF2C FCMP S2, S7
	0x03ADAF30 FCVTZS W12, S5
	0x03ADAF34 CSEL W11, W9, W11, EQ
	0x03ADAF38 FCMP S5, S7
	0x03ADAF3C CSEL W12, W9, W12, EQ
	0x03ADAF40 FMUL S0, S0, S6
	0x03ADAF44 CMP W11, W12
	0x03ADAF48 FMUL S3, S3, S6
	0x03ADAF4C FCVTZS W8, S0
	0x03ADAF50 CSET W12, EQ
	0x03ADAF54 FCMP S0, S7
	0x03ADAF58 FCVTZS W11, S3
	0x03ADAF5C CSEL W8, W9, W8, EQ
	0x03ADAF60 FCMP S3, S7
	0x03ADAF64 CSEL W9, W9, W11, EQ
	0x03ADAF68 CMP W8, W9
	0x03ADAF6C CSET W8, EQ
	0x03ADAF70 AND W8, W8, W10, 0x0
	0x03ADAF74 AND W0, W12, W8, 0x0
	0x03ADAF78 RET
	0x03ADAF7C SCVTF S16, W0
	0x03ADAF80 MOVZ W8, 0x7F800000
	0x03ADAF84 FMUL S1, S1, S16
	0x03ADAF88 FMOV S17, W8
	0x03ADAF8C MOVZ W9, 0x80000000
	0x03ADAF90 FMUL S5, S5, S16
	0x03ADAF94 FCVTZS W8, S1
	0x03ADAF98 FCMP S1, S17

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x909000
	007 Move X21, 0x67F000
	008 Move W8, [X22+1333]
	009 Move X21, [X21+1008]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x67F000
	017 Move X0, [X0+1992]
	018 Call 0x1C17CF4
	019 Move X0, 0x67F000
	020 Move X0, [X0+1008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1333], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+16]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x67F000
	035 Move X8, [X8+1992]
	036 And W1, W20, 1
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call 0x2D12CEC, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void ON_SPRITE_ASSET_PROPERTY_CHANGED(System.Boolean isChanged, UnityEngine.Object obj)

Disassembly:
	0x03ADAF9C FCVTZS W10, S5
	0x03ADAFA0 CSEL W8, W9, W8, EQ
	0x03ADAFA4 FCMP S5, S17
	0x03ADAFA8 CSEL W10, W9, W10, EQ
	0x03ADAFAC FMUL S2, S2, S16
	0x03ADAFB0 CMP W8, W10
	0x03ADAFB4 FMUL S6, S6, S16
	0x03ADAFB8 FCVTZS W11, S2
	0x03ADAFBC CSET W10, EQ
	0x03ADAFC0 FCMP S2, S17
	0x03ADAFC4 FCVTZS W12, S6
	0x03ADAFC8 CSEL W11, W9, W11, EQ
	0x03ADAFCC FCMP S6, S17
	0x03ADAFD0 CSEL W12, W9, W12, EQ
	0x03ADAFD4 FMUL S3, S3, S16
	0x03ADAFD8 CMP W11, W12
	0x03ADAFDC FMUL S7, S7, S16
	0x03ADAFE0 FCVTZS W13, S3
	0x03ADAFE4 CSET W12, EQ
	0x03ADAFE8 FCMP S3, S17
	0x03ADAFEC FCVTZS W8, S7
	0x03ADAFF0 CSEL W13, W9, W13, EQ
	0x03ADAFF4 FCMP S7, S17
	0x03ADAFF8 CSEL W8, W9, W8, EQ
	0x03ADAFFC FMUL S0, S0, S16
	0x03ADB000 CMP W13, W8
	0x03ADB004 FMUL S4, S4, S16
	0x03ADB008 FCVTZS W11, S0
	0x03ADB00C CSET W13, EQ
	0x03ADB010 FCMP S0, S17
	0x03ADB014 FCVTZS W8, S4
	0x03ADB018 CSEL W11, W9, W11, EQ
	0x03ADB01C FCMP S4, S17
	0x03ADB020 CSEL W8, W9, W8, EQ
	0x03ADB024 CMP W11, W8
	0x03ADB028 CSET W8, EQ

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x909000
	007 Move X21, 0x67F000
	008 Move W8, [X22+1334]
	009 Move X21, [X21+1008]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x67F000
	017 Move X0, [X0+1992]
	018 Call 0x1C17CF4
	019 Move X0, 0x67F000
	020 Move X0, [X0+1008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1334], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+24]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x67E000
	035 Move X8, [X8+1992]
	036 And W1, W20, 1
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call 0x2D12CEC, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void ON_TEXTMESHPRO_PROPERTY_CHANGED(System.Boolean isChanged, UnityEngine.Object obj)

Disassembly:
	0x03ADB02C AND W8, W8, W10, 0x0
	0x03ADB030 AND W8, W12, W8, 0x0
	0x03ADB034 AND W0, W13, W8, 0x0
	0x03ADB038 RET
	0x03ADB03C ADRP X8, 0xFFFFFFFFFD00F000
	0x03ADB040 ADRP X9, 0xFFFFFFFFFD00E000
	0x03ADB044 LDR V2, [X8 + 0x2F0]
	0x03ADB048 LDR V3, [X9 + 0xF28]
	0x03ADB04C FADD S2, S1, S2
	0x03ADB050 FADD S1, S1, S3
	0x03ADB054 FCMP S2, S0
	0x03ADB058 CSET W8, MI
	0x03ADB05C FCMP S1, S0
	0x03ADB060 CSET W9, GT
	0x03ADB064 AND W0, W8, W9, 0x0
	0x03ADB068 RET
	0x03ADB06C SDIV W8, W0, W1
	0x03ADB070 MSUB W8, W8, W1, W0
	0x03ADB074 AND W9, W1, W8, 0x1F
	0x03ADB078 ADD W0, W9, W8
	0x03ADB07C RET
	0x03ADB080 STR X30, [X31 - 0x20]!
	0x03ADB084 STP X20, X19, [X31 + 0x10]
	0x03ADB088 ADRP X20, 0x907000
	0x03ADB08C ADRP X19, 0x67D000
	0x03ADB090 LDRB W8, [X20 + 0x546]
	0x03ADB094 LDR X19, [X19 + 0x340]
	0x03ADB098 TBNZ X8, 0x0, 0x3ADB0B0
	0x03ADB09C ADRP X0, 0x67D000
	0x03ADB0A0 LDR X0, [X0 + 0x340]
	0x03ADB0A4 BL 0x1C16CF4
	0x03ADB0A8 MOVZ W8, 0x1
	0x03ADB0AC STRB W8, [X20 + 0x546]
	0x03ADB0B0 LDR X8, [X19]
	0x03ADB0B4 MOVZ W9, 0xFE00
	0x03ADB0B8 MOVK W9, 0x46FF0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x908000
	007 Move X21, 0x67E000
	008 Move W8, [X22+1335]
	009 Move X21, [X21+1008]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x67E000
	017 Move X0, [X0+1992]
	018 Call 0x1C17CF4
	019 Move X0, 0x67E000
	020 Move X0, [X0+1008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1335], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+32]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x67E000
	035 Move X8, [X8+1992]
	036 And W1, W20, 1
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call 0x2D12CEC, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void ON_DRAG_AND_DROP_MATERIAL_CHANGED(UnityEngine.GameObject sender, UnityEngine.Material currentMaterial, UnityEngine.Material newMaterial)

Disassembly:
	0x03ADB0BC UNIMPLEMENTED
	0x03ADB0C0 LDR X8, [X8 + 0xB8]
	0x03ADB0C4 MOVZ W9, 0xFE00
	0x03ADB0C8 MOVK W9, 0xC6FF0000
	0x03ADB0CC STR D0, [X8]
	0x03ADB0D0 LDR X8, [X19]
	0x03ADB0D4 LDP X20, X19, [X31 + 0x10]
	0x03ADB0D8 UNIMPLEMENTED
	0x03ADB0DC LDR X8, [X8 + 0xB8]
	0x03ADB0E0 STR D0, [X8 + 0x8]
	0x03ADB0E4 LDR X30, [X31], #0x20
	0x03ADB0E8 RET
	0x03ADB0EC STP S0, S1, [X0]
	0x03ADB0F0 STP S2, S3, [X0 + 0x8]
	0x03ADB0F4 STP S0, S1, [X0 + 0x10]
	0x03ADB0F8 STP S2, S3, [X0 + 0x18]
	0x03ADB0FC STP S0, S1, [X0 + 0x20]
	0x03ADB100 STP S2, S3, [X0 + 0x28]
	0x03ADB104 STP S0, S1, [X0 + 0x30]
	0x03ADB108 STP S2, S3, [X0 + 0x38]
	0x03ADB10C RET
	0x03ADB110 LDP V17, V16, [X31]
	0x03ADB114 STP S0, S1, [X0]
	0x03ADB118 STP S2, S3, [X0 + 0x8]
	0x03ADB11C STP S4, S5, [X0 + 0x10]
	0x03ADB120 STP S6, S7, [X0 + 0x18]
	0x03ADB124 STP V17, V16, [X0 + 0x20]
	0x03ADB128 RET
	0x03ADB12C STP X30, X23, [X31 - 0x30]!
	0x03ADB130 STP X22, X21, [X31 + 0x10]
	0x03ADB134 STP X20, X19, [X31 + 0x20]
	0x03ADB138 ADRP X23, 0x907000
	0x03ADB13C LDRB W8, [X23 + 0x547]
	0x03ADB140 MOV W21, W3
	0x03ADB144 MOV W20, W2
	0x03ADB148 MOV X19, X1
	0x03ADB14C MOV X22, X0
	0x03ADB150 TBNZ X8, 0x0, 0x3ADB168

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x908000
	008 Move X22, 0x67E000
	009 Move W8, [X23+1336]
	010 Move X22, [X22+1008]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x67E000
	019 Move X0, [X0+2000]
	020 Call 0x1C17CF4
	021 Move X0, 0x67E000
	022 Move X0, [X0+1008]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1336], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X0, [X8+40]
	034 Compare X0, 0
	035 JumpIfEqual {50}
	036 Move X8, 0x67E000
	037 Move X8, [X8+2000]
	038 Move X1, X21
	039 Move X2, X20
	040 Move X3, X19
	041 Move X4, [X8]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call 0x2D134F0, X0, X1, X2, X3
	049 Return 
	050 Call 0x1C17F20

Method: System.Void ON_TEXT_STYLE_PROPERTY_CHANGED(System.Boolean isChanged)

Disassembly:
	0x03ADB154 ADRP X0, 0x621000
	0x03ADB158 LDR X0, [X0 + 0x8D8]
	0x03ADB15C BL 0x1C16CF4
	0x03ADB160 MOVZ W8, 0x1
	0x03ADB164 STRB W8, [X23 + 0x547]
	0x03ADB168 LDR X0, [X22 + 0x20]
	0x03ADB16C CBZ X0, 0x3ADB17C
	0x03ADB170 LDR W8, [X0 + 0x18]
	0x03ADB174 CMP W8, W21
	0x03ADB178 B.GE 0x3ADB194
	0x03ADB17C ADRP X8, 0x621000
	0x03ADB180 LDR X8, [X8 + 0x8D8]
	0x03ADB184 MOV W1, W21
	0x03ADB188 LDR X0, [X8]
	0x03ADB18C BL 0x1C16D6C
	0x03ADB190 STR X0, [X22 + 0x20]
	0x03ADB194 CMP W21, 0x1
	0x03ADB198 B.LT 0x3ADB1E8
	0x03ADB19C CBZ X19, 0x3ADB1FC
	0x03ADB1A0 LDR W9, [X19 + 0x18]
	0x03ADB1A4 MOV X8, X31
	0x03ADB1A8 MOV W10, W21
	0x03ADB1AC ADD X11, X0, 0x20
	0x03ADB1B0 MOV W12, W20
	0x03ADB1B4 ADD X13, X12, X8
	0x03ADB1B8 CMP W13, W9
	0x03ADB1BC B.CS 0x3ADB1F8
	0x03ADB1C0 CBZ X0, 0x3ADB1FC
	0x03ADB1C4 LDR W14, [X0 + 0x18]
	0x03ADB1C8 CMP X8, X14
	0x03ADB1CC B.CS 0x3ADB1F8
	0x03ADB1D0 ADD X13, X19, W13, 0x1, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x908000
	006 Move X20, 0x67E000
	007 Move W8, [X21+1337]
	008 Move X20, [X20+1008]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x67E000
	015 Move X0, [X0+2008]
	016 Call 0x1C17CF4
	017 Move X0, 0x67E000
	018 Move X0, [X0+1008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1337], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+48]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x67E000
	033 Move X8, [X8+2008]
	034 And W1, W19, 1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call 0x2D12564, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void ON_COLOR_GRADIENT_PROPERTY_CHANGED(UnityEngine.Object obj)

Disassembly:
	0x03ADB1D4 LDRH W13, [X13 + 0x20]
	0x03ADB1D8 STRH W13, [X11, X8, LSL #1]
	0x03ADB1DC ADD X8, X8, 0x1
	0x03ADB1E0 CMP X10, X8
	0x03ADB1E4 B.NE 0x3ADB1B4
	0x03ADB1E8 LDP X20, X19, [X31 + 0x20]
	0x03ADB1EC LDP X22, X21, [X31 + 0x10]
	0x03ADB1F0 LDP X30, X23, [X31], #0x30
	0x03ADB1F4 RET
	0x03ADB1F8 BL 0x1C16F28
	0x03ADB1FC BL 0x1C16F20
	0x03ADB200 STP X30, X25, [X31 - 0x40]!
	0x03ADB204 STP X24, X23, [X31 + 0x10]
	0x03ADB208 STP X22, X21, [X31 + 0x20]
	0x03ADB20C STP X20, X19, [X31 + 0x30]
	0x03ADB210 ADRP X20, 0x907000
	0x03ADB214 LDRB W8, [X20 + 0x548]
	0x03ADB218 MOV X19, X0
	0x03ADB21C TBNZ X8, 0x0, 0x3ADB240
	0x03ADB220 ADRP X0, 0x61A000
	0x03ADB224 LDR X0, [X0 + 0x170]
	0x03ADB228 BL 0x1C16CF4
	0x03ADB22C ADRP X0, 0x61A000
	0x03ADB230 LDR X0, [X0 + 0x278]
	0x03ADB234 BL 0x1C16CF4
	0x03ADB238 MOVZ W8, 0x1
	0x03ADB23C STRB W8, [X20 + 0x548]
	0x03ADB240 LDR X8, [X19]
	0x03ADB244 CBZ X8, 0x3ADB300
	0x03ADB248 ADRP X9, 0x61A000
	0x03ADB24C LDR X9, [X9 + 0x278]
	0x03ADB250 LDP W21, W10, [X19 + 0x14]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x908000
	006 Move X20, 0x67E000
	007 Move W8, [X21+1338]
	008 Move X20, [X20+1008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x67E000
	015 Move X0, [X0+2016]
	016 Call 0x1C17CF4
	017 Move X0, 0x67E000
	018 Move X0, [X0+1008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1338], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+56]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x67E000
	033 Move X8, [X8+2016]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call FastAction`1<Object>.Call, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void ON_TEXT_CHANGED(UnityEngine.Object obj)

Disassembly:
	0x03ADB254 SXTW X21, W21
	0x03ADB258 LDR X9, [X9]
	0x03ADB25C LDR X9, [X9 + 0xB8]
	0x03ADB260 LDR X20, [X9]
	0x03ADB264 ADD W9, W10, W21
	0x03ADB268 CMP W21, W9
	0x03ADB26C B.GE 0x3ADB2E8
	0x03ADB270 LDR X22, [X8 + 0x368]
	0x03ADB274 CBZ X22, 0x3ADB300
	0x03ADB278 ADRP X24, 0x61A000
	0x03ADB27C LDR X24, [X24 + 0x170]
	0x03ADB280 MOVZ W8, 0x178
	0x03ADB284 ORR X9, X31, 0x3F
	0x03ADB288 MADD X23, X21, X8, X9
	0x03ADB28C LDR X25, [X22 + 0x38]
	0x03ADB290 CBZ X25, 0x3ADB300
	0x03ADB294 LDR W8, [X25 + 0x18]
	0x03ADB298 CMP W21, W8
	0x03ADB29C B.CS 0x3ADB304
	0x03ADB2A0 LDR X0, [X24]
	0x03ADB2A4 LDR W8, [X0 + 0xE0]
	0x03ADB2A8 CBNZ W8, 0x3ADB2B0
	0x03ADB2AC BL 0x1C16DFC
	0x03ADB2B0 ADD X0, X25, X23
	0x03ADB2B4 MOV X1, X31
	0x03ADB2B8 BL 0x330A76C
	0x03ADB2BC MOV X1, X0
	0x03ADB2C0 MOV X0, X20
	0x03ADB2C4 MOV X2, X31
	0x03ADB2C8 BL 0x321B938
	0x03ADB2CC LDP W8, W9, [X19 + 0x14]
	0x03ADB2D0 ADD X21, X21, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x908000
	006 Move X20, 0x67E000
	007 Move W8, [X21+1339]
	008 Move X20, [X20+1008]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x67E000
	015 Move X0, [X0+2016]
	016 Call 0x1C17CF4
	017 Move X0, 0x67E000
	018 Move X0, [X0+1008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1339], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+88]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x67E000
	033 Move X8, [X8+2016]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call FastAction`1<Object>.Call, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void ON_TMP_SETTINGS_CHANGED()

Disassembly:
	0x03ADB2D4 MOV X20, X0
	0x03ADB2D8 ADD X23, X23, 0x178
	0x03ADB2DC ADD W8, W9, W8
	0x03ADB2E0 CMP X21, W8, SXTW
	0x03ADB2E4 B.LT 0x3ADB28C
	0x03ADB2E8 MOV X0, X20
	0x03ADB2EC LDP X20, X19, [X31 + 0x30]
	0x03ADB2F0 LDP X22, X21, [X31 + 0x20]
	0x03ADB2F4 LDP X24, X23, [X31 + 0x10]
	0x03ADB2F8 LDP X30, X25, [X31], #0x40
	0x03ADB2FC RET
	0x03ADB300 BL 0x1C16F20
	0x03ADB304 BL 0x1C16F28
	0x03ADB308 STP X30, X21, [X31 - 0x20]!
	0x03ADB30C STP X20, X19, [X31 + 0x10]
	0x03ADB310 ADRP X21, 0x907000
	0x03ADB314 ADRP X20, 0x618000
	0x03ADB318 LDRB W8, [X21 + 0x549]
	0x03ADB31C LDR X20, [X20 + 0x598]
	0x03ADB320 MOV X19, X0
	0x03ADB324 TBNZ X8, 0x0, 0x3ADB348
	0x03ADB328 ADRP X0, 0x618000
	0x03ADB32C LDR X0, [X0 + 0x598]
	0x03ADB330 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x908000
	005 Move X19, 0x67E000
	006 Move W8, [X20+1340]
	007 Move X19, [X19+1008]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x67E000
	013 Move X0, [X0+1008]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1340], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8+64]
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call FastAction.Call, X0
	031 Return 
	032 Call 0x1C17F20

Method: System.Void ON_RESOURCES_LOADED()

Disassembly:
	0x03ADB334 ADRP X0, 0x61A000
	0x03ADB338 LDR X0, [X0 + 0x278]
	0x03ADB33C BL 0x1C16CF4
	0x03ADB340 MOVZ W8, 0x1
	0x03ADB344 STRB W8, [X21 + 0x549]
	0x03ADB348 LDR X0, [X20]
	0x03ADB34C LDR X20, [X19]
	0x03ADB350 LDR W8, [X0 + 0xE0]
	0x03ADB354 CBNZ W8, 0x3ADB35C
	0x03ADB358 BL 0x1C16DFC
	0x03ADB35C MOV X0, X20
	0x03ADB360 MOV X1, X31
	0x03ADB364 MOV X2, X31
	0x03ADB368 BL 0x3C3883C
	0x03ADB36C TBZ X0, 0x0, 0x3ADB390
	0x03ADB370 ADRP X8, 0x61A000
	0x03ADB374 LDR X8, [X8 + 0x278]
	0x03ADB378 LDP X20, X19, [X31 + 0x10]
	0x03ADB37C LDR X8, [X8]
	0x03ADB380 LDR X8, [X8 + 0xB8]
	0x03ADB384 LDR X0, [X8]
	0x03ADB388 LDP X30, X21, [X31], #0x20
	0x03ADB38C RET
	0x03ADB390 LDR X1, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x908000
	005 Move X19, 0x67E000
	006 Move W8, [X20+1341]
	007 Move X19, [X19+1008]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x67E000
	013 Move X0, [X0+1008]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1341], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8+72]
	025 Compare X0, 0
	026 JumpIfEqual {32}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Call FastAction.Call, X0
	031 Return 
	032 Call 0x1C17F20

Method: System.Void ON_TEXTMESHPRO_UGUI_PROPERTY_CHANGED(System.Boolean isChanged, UnityEngine.Object obj)

Disassembly:
	0x03ADB394 LDR W3, [X19 + 0x10]
	0x03ADB398 LDP X20, X19, [X31 + 0x10]
	0x03ADB39C MOV X0, X31
	0x03ADB3A0 MOV W2, W31
	0x03ADB3A4 MOV X4, X31
	0x03ADB3A8 LDP X30, X21, [X31], #0x20
	0x03ADB3AC B 0x322EAE4
	0x03ADB3B0 STR X30, [X31 - 0x40]!
	0x03ADB3B4 STP X24, X23, [X31 + 0x10]
	0x03ADB3B8 STP X22, X21, [X31 + 0x20]
	0x03ADB3BC STP X20, X19, [X31 + 0x30]
	0x03ADB3C0 ADRP X20, 0x907000
	0x03ADB3C4 LDRB W8, [X20 + 0x54A]
	0x03ADB3C8 MOV X19, X0
	0x03ADB3CC TBNZ X8, 0x0, 0x3ADB3F0
	0x03ADB3D0 ADRP X0, 0x61A000
	0x03ADB3D4 LDR X0, [X0 + 0x170]
	0x03ADB3D8 BL 0x1C16CF4
	0x03ADB3DC ADRP X0, 0x61A000
	0x03ADB3E0 LDR X0, [X0 + 0x278]
	0x03ADB3E4 BL 0x1C16CF4
	0x03ADB3E8 MOVZ W8, 0x1
	0x03ADB3EC STRB W8, [X20 + 0x54A]
	0x03ADB3F0 LDR X8, [X19]
	0x03ADB3F4 CBZ X8, 0x3ADB4B4
	0x03ADB3F8 LDR X8, [X8 + 0x368]
	0x03ADB3FC CBZ X8, 0x3ADB4B4
	0x03ADB400 ADRP X9, 0x61A000
	0x03ADB404 LDR X9, [X9 + 0x278]
	0x03ADB408 LDP W22, W10, [X19 + 0x8]
	0x03ADB40C SXTW X22, W22
	0x03ADB410 LDR X9, [X9]
	0x03ADB414 LDR X9, [X9 + 0xB8]
	0x03ADB418 LDR X20, [X9]
	0x03ADB41C ADD W9, W10, 0x1
	0x03ADB420 CMP W22, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x908000
	007 Move X21, 0x67E000
	008 Move W8, [X22+1342]
	009 Move X21, [X21+1008]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x67E000
	017 Move X0, [X0+1992]
	018 Call 0x1C17CF4
	019 Move X0, 0x67E000
	020 Move X0, [X0+1008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1342], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+80]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x67E000
	035 Move X8, [X8+1992]
	036 And W1, W20, 1
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call 0x2D12CEC, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void ON_COMPUTE_DT_EVENT(System.Object Sender, TMPro.Compute_DT_EventArgs e)

Disassembly:
	0x03ADB424 B.GE 0x3ADB498
	0x03ADB428 LDR X23, [X8 + 0x38]
	0x03ADB42C CBZ X23, 0x3ADB4B4
	0x03ADB430 ADRP X24, 0x61A000
	0x03ADB434 LDR X24, [X24 + 0x170]
	0x03ADB438 MOVZ W8, 0x178
	0x03ADB43C MADD X8, X22, X8, X23
	0x03ADB440 ADD X21, X8, 0x20
	0x03ADB444 LDR W8, [X23 + 0x18]
	0x03ADB448 CMP W22, W8
	0x03ADB44C B.CS 0x3ADB4B0
	0x03ADB450 LDR X0, [X24]
	0x03ADB454 LDR W8, [X0 + 0xE0]
	0x03ADB458 CBNZ W8, 0x3ADB460
	0x03ADB45C BL 0x1C16DFC
	0x03ADB460 MOV X0, X21
	0x03ADB464 MOV X1, X31
	0x03ADB468 BL 0x330A76C
	0x03ADB46C MOV X1, X0
	0x03ADB470 MOV X0, X20
	0x03ADB474 MOV X2, X31
	0x03ADB478 BL 0x321B938
	0x03ADB47C LDR W8, [X19 + 0xC]
	0x03ADB480 ADD X22, X22, 0x1
	0x03ADB484 MOV X20, X0
	0x03ADB488 ADD X21, X21, 0x178
	0x03ADB48C ADD W8, W8, 0x1
	0x03ADB490 CMP X22, W8, SXTW
	0x03ADB494 B.LT 0x3ADB444
	0x03ADB498 MOV X0, X20
	0x03ADB49C LDP X20, X19, [X31 + 0x30]
	0x03ADB4A0 LDP X22, X21, [X31 + 0x20]
	0x03ADB4A4 LDP X24, X23, [X31 + 0x10]
	0x03ADB4A8 LDR X30, [X31], #0x40
	0x03ADB4AC RET
	0x03ADB4B0 BL 0x1C16F28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x908000
	007 Move X21, 0x67E000
	008 Move W8, [X22+1343]
	009 Move X21, [X21+1008]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x67E000
	017 Move X0, [X0+2024]
	018 Call 0x1C17CF4
	019 Move X0, 0x67E000
	020 Move X0, [X0+1008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1343], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x67E000
	035 Move X8, [X8+2024]
	036 Move X1, X20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call FastAction`2<Object, Object>.Call, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03ADB4B4 BL 0x1C16F20
	0x03ADB4B8 STP S0, S1, [X0]
	0x03ADB4BC STP S2, S3, [X0 + 0x8]
	0x03ADB4C0 RET
	0x03ADB4C4 STR X30, [X31 - 0x30]!
	0x03ADB4C8 STP X22, X21, [X31 + 0x10]
	0x03ADB4CC STP X20, X19, [X31 + 0x20]
	0x03ADB4D0 ADRP X20, 0x907000
	0x03ADB4D4 ADRP X21, 0x618000
	0x03ADB4D8 LDRB W8, [X20 + 0x54B]
	0x03ADB4DC LDR X21, [X21 + 0xAC8]
	0x03ADB4E0 MOV X19, X0
	0x03ADB4E4 TBNZ X8, 0x0, 0x3ADB538
	0x03ADB4E8 ADRP X0, 0x618000
	0x03ADB4EC LDR X0, [X0 + 0xAC8]
	0x03ADB4F0 BL 0x1C16CF4
	0x03ADB4F4 ADRP X0, 0x66C000
	0x03ADB4F8 LDR X0, [X0 + 0x180]
	0x03ADB4FC BL 0x1C16CF4
	0x03ADB500 ADRP X0, 0x67D000
	0x03ADB504 LDR X0, [X0 + 0x868]
	0x03ADB508 BL 0x1C16CF4
	0x03ADB50C ADRP X0, 0x618000
	0x03ADB510 LDR X0, [X0 + 0x838]
	0x03ADB514 BL 0x1C16CF4
	0x03ADB518 ADRP X0, 0x619000
	0x03ADB51C LDR X0, [X0 + 0x608]
	0x03ADB520 BL 0x1C16CF4
	0x03ADB524 ADRP X0, 0x67D000
	0x03ADB528 LDR X0, [X0 + 0x870]
	0x03ADB52C BL 0x1C16CF4
	0x03ADB530 MOVZ W8, 0x1
	0x03ADB534 STRB W8, [X20 + 0x54B]
	0x03ADB538 LDR X0, [X21]
	0x03ADB53C MOVZ W1, 0x9
	0x03ADB540 BL 0x1C16D6C
	0x03ADB544 CBZ X0, 0x3ADB660
	0x03ADB548 LDR W8, [X0 + 0x18]
	0x03ADB54C MOV X20, X0
	0x03ADB550 CBZ W8, 0x3ADB65C
	0x03ADB554 ADRP X8, 0x67D000
	0x03ADB558 LDR X8, [X8 + 0x868]
	0x03ADB55C ADRP X21, 0x66C000
	0x03ADB560 MOV X0, X19
	0x03ADB564 MOV X2, X31
	0x03ADB568 LDR X8, [X8]
	0x03ADB56C LDR X21, [X21 + 0x180]
	0x03ADB570 STR X8, [X20 + 0x20]
	0x03ADB574 LDR X1, [X21]
	0x03ADB578 BL 0x338FF2C
	0x03ADB57C LDR W8, [X20 + 0x18]
	0x03ADB580 CMP W8, 0x1
	0x03ADB584 B.LS 0x3ADB65C
	0x03ADB588 CMP W8, 0x2
	0x03ADB58C STR X0, [X20 + 0x28]
	0x03ADB590 B.EQ 0x3ADB65C
	0x03ADB594 ADRP X22, 0x618000
	0x03ADB598 LDR X22, [X22 + 0x838]
	0x03ADB59C ADD X0, X19, 0x4
	0x03ADB5A0 MOV X2, X31
	0x03ADB5A4 LDR X8, [X22]
	0x03ADB5A8 STR X8, [X20 + 0x30]
	0x03ADB5AC LDR X1, [X21]
	0x03ADB5B0 BL 0x338FF2C
	0x03ADB5B4 LDR W8, [X20 + 0x18]
	0x03ADB5B8 CMP W8, 0x3
	0x03ADB5BC B.LS 0x3ADB65C
	0x03ADB5C0 CMP W8, 0x4
	0x03ADB5C4 STR X0, [X20 + 0x38]
	0x03ADB5C8 B.EQ 0x3ADB65C
	0x03ADB5CC ADRP X8, 0x67D000
	0x03ADB5D0 LDR X8, [X8 + 0x870]
	0x03ADB5D4 ADD X0, X19, 0x8
	0x03ADB5D8 MOV X2, X31
	0x03ADB5DC LDR X8, [X8]
	0x03ADB5E0 STR X8, [X20 + 0x40]
	0x03ADB5E4 LDR X1, [X21]
	0x03ADB5E8 BL 0x338FF2C
	0x03ADB5EC LDR W8, [X20 + 0x18]
	0x03ADB5F0 CMP W8, 0x5
	0x03ADB5F4 B.LS 0x3ADB65C
	0x03ADB5F8 CMP W8, 0x6
	0x03ADB5FC STR X0, [X20 + 0x48]
	0x03ADB600 B.EQ 0x3ADB65C
	0x03ADB604 LDR X8, [X22]
	0x03ADB608 ADD X0, X19, 0xC
	0x03ADB60C MOV X2, X31
	0x03ADB610 STR X8, [X20 + 0x50]
	0x03ADB614 LDR X1, [X21]
	0x03ADB618 BL 0x338FF2C
	0x03ADB61C LDR W8, [X20 + 0x18]
	0x03ADB620 CMP W8, 0x7
	0x03ADB624 B.LS 0x3ADB65C
	0x03ADB628 CMP W8, 0x8
	0x03ADB62C STR X0, [X20 + 0x58]
	0x03ADB630 B.EQ 0x3ADB65C
	0x03ADB634 ADRP X8, 0x619000
	0x03ADB638 LDR X8, [X8 + 0x608]
	0x03ADB63C MOV X0, X20
	0x03ADB640 LDP X22, X21, [X31 + 0x10]
	0x03ADB644 MOV X1, X31
	0x03ADB648 LDR X8, [X8]
	0x03ADB64C STR X8, [X20 + 0x60]
	0x03ADB650 LDP X20, X19, [X31 + 0x20]
	0x03ADB654 LDR X30, [X31], #0x30
	0x03ADB658 B 0x32278CC
	0x03ADB65C BL 0x1C16F28
	0x03ADB660 BL 0x1C16F20
	0x03ADB664 STR X30, [X31 - 0x20]!
	0x03ADB668 STP X20, X19, [X31 + 0x10]
	0x03ADB66C ADRP X19, 0x907000
	0x03ADB670 LDRB W8, [X19 + 0x54C]
	0x03ADB674 TBNZ X8, 0x0, 0x3ADB68C
	0x03ADB678 ADRP X0, 0x67D000
	0x03ADB67C LDR X0, [X0 + 0x878]
	0x03ADB680 BL 0x1C16CF4
	0x03ADB684 MOVZ W8, 0x1
	0x03ADB688 STRB W8, [X19 + 0x54C]
	0x03ADB68C ADRP X20, 0x8FE000
	0x03ADB690 ADRP X19, 0x67D000
	0x03ADB694 LDRB W8, [X20 + 0x78F]
	0x03ADB698 LDR X19, [X19 + 0x878]
	0x03ADB69C CBNZ W8, 0x3ADB6B4
	0x03ADB6A0 ADRP X0, 0x620000
	0x03ADB6A4 LDR X0, [X0 + 0xF08]
	0x03ADB6A8 BL 0x1C16CF4
	0x03ADB6AC MOVZ W8, 0x1
	0x03ADB6B0 STRB W8, [X20 + 0x78F]
	0x03ADB6B4 ADRP X8, 0x620000
	0x03ADB6B8 LDR X8, [X8 + 0xF08]
	0x03ADB6BC LDR X9, [X19]
	0x03ADB6C0 LDR X8, [X8]
	0x03ADB6C4 LDR X8, [X8 + 0xB8]
	0x03ADB6C8 LDR V0, [X8]
	0x03ADB6CC LDR X8, [X9 + 0xB8]
	0x03ADB6D0 ADRP X9, 0xFFFFFFFFFD010000
	0x03ADB6D4 MOV V0.D[1], V0.D[0]
	0x03ADB6D8 STR V0, [X8]
	0x03ADB6DC LDR X8, [X19]
	0x03ADB6E0 LDR V0, [X9 + 0xFB]
	0x03ADB6E4 LDP X20, X19, [X31 + 0x10]
	0x03ADB6E8 LDR X8, [X8 + 0xB8]
	0x03ADB6EC STR V0, [X8 + 0x1]
	0x03ADB6F0 LDR X30, [X31], #0x20
	0x03ADB6F4 RET
	0x03ADB6F8 STP S0, S1, [X0]
	0x03ADB6FC STP S2, S3, [X0 + 0x8]
	0x03ADB700 RET
	0x03ADB704 STR X30, [X31 - 0x30]!
	0x03ADB708 STP X22, X21, [X31 + 0x10]
	0x03ADB70C STP X20, X19, [X31 + 0x20]
	0x03ADB710 ADRP X20, 0x907000
	0x03ADB714 ADRP X21, 0x618000
	0x03ADB718 LDRB W8, [X20 + 0x54D]
	0x03ADB71C LDR X21, [X21 + 0xAC8]
	0x03ADB720 MOV X19, X0
	0x03ADB724 TBNZ X8, 0x0, 0x3ADB778
	0x03ADB728 ADRP X0, 0x618000
	0x03ADB72C LDR X0, [X0 + 0xAC8]
	0x03ADB730 BL 0x1C16CF4
	0x03ADB734 ADRP X0, 0x66C000
	0x03ADB738 LDR X0, [X0 + 0x180]
	0x03ADB73C BL 0x1C16CF4
	0x03ADB740 ADRP X0, 0x67D000
	0x03ADB744 LDR X0, [X0 + 0x868]
	0x03ADB748 BL 0x1C16CF4
	0x03ADB74C ADRP X0, 0x618000
	0x03ADB750 LDR X0, [X0 + 0x838]
	0x03ADB754 BL 0x1C16CF4
	0x03ADB758 ADRP X0, 0x619000
	0x03ADB75C LDR X0, [X0 + 0x608]
	0x03ADB760 BL 0x1C16CF4
	0x03ADB764 ADRP X0, 0x67D000
	0x03ADB768 LDR X0, [X0 + 0x870]
	0x03ADB76C BL 0x1C16CF4
	0x03ADB770 MOVZ W8, 0x1
	0x03ADB774 STRB W8, [X20 + 0x54D]
	0x03ADB778 LDR X0, [X21]
	0x03ADB77C MOVZ W1, 0x9
	0x03ADB780 BL 0x1C16D6C
	0x03ADB784 CBZ X0, 0x3ADB8A0
	0x03ADB788 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x908000
	014 Move X29, 0x67E000
	015 Move X19, 0x67E000
	016 Move X20, 0x67E000
	017 Move X27, 0x67E000
	018 Move X26, 0x67E000
	019 Move X24, 0x67E000
	020 Move X23, 0x67E000
	021 Move X22, 0x67E000
	022 Move X21, 0x67E000
	023 Move X25, 0x67E000
	024 Move X29, [X29+2032]
	025 Move X19, [X19+2040]
	026 Move X20, [X20+1008]
	027 Move X27, [X27+2048]
	028 Move X26, [X26+2056]
	029 Move X24, [X24+2064]
	030 Move X23, [X23+2072]
	031 Move W8, [X28+1344]
	032 Move X22, [X22+2080]
	033 Move X21, [X21+2088]
	034 Move X25, [X25+2096]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {83}
	039 Move X0, 0x67E000
	040 Move X0, [X0+2088]
	041 Call 0x1C17CF4
	042 Move X0, 0x67E000
	043 Move X0, [X0+2104]
	044 Call 0x1C17CF4
	045 Move X0, 0x67E000
	046 Move X0, [X0+2080]
	047 Call 0x1C17CF4
	048 Move X0, 0x67E000
	049 Move X0, [X0+2112]
	050 Call 0x1C17CF4
	051 Move X0, 0x67E000
	052 Move X0, [X0+2040]
	053 Call 0x1C17CF4
	054 Move X0, 0x67E000
	055 Move X0, [X0+2056]
	056 Call 0x1C17CF4
	057 Move X0, 0x67E000
	058 Move X0, [X0+2072]
	059 Call 0x1C17CF4
	060 Move X0, 0x67E000
	061 Move X0, [X0+2064]
	062 Call 0x1C17CF4
	063 Move X0, 0x67E000
	064 Move X0, [X0+2032]
	065 Call 0x1C17CF4
	066 Move X0, 0x67E000
	067 Move X0, [X0+2048]
	068 Call 0x1C17CF4
	069 Move X0, 0x67E000
	070 Move X0, [X0+2120]
	071 Call 0x1C17CF4
	072 Move X0, 0x67E000
	073 Move X0, [X0+2128]
	074 Call 0x1C17CF4
	075 Move X0, 0x67E000
	076 Move X0, [X0+2096]
	077 Call 0x1C17CF4
	078 Move X0, 0x67E000
	079 Move X0, [X0+1008]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X28+1344], W8
	083 Move X0, [X29]
	084 Call 0x1C17F10
	085 Move X1, [X19]
	086 Move X19, X0
	087 Call FastAction`2<Object, Object>..ctor, X0
	088 Move X8, [X20]
	089 Move X8, [X8+184]
	090 Move [X8], X19
	091 Move X0, [X27]
	092 Call 0x1C17F10
	093 Move X1, [X26]
	094 Move X19, X0
	095 Call 0x2D12D64, X0
	096 Move X8, [X20]
	097 Move X8, [X8+184]
	098 Move [X8+8], X19
	099 Move X0, [X24]
	100 Call 0x1C17F10
	101 Move X1, [X23]
	102 Move X19, X0
	103 Call 0x2D12D64, X0
	104 Move X8, [X20]
	105 Move X8, [X8+184]
	106 Move [X8+16], X19
	107 Move X0, [X24]
	108 Call 0x1C17F10
	109 Move X1, [X23]
	110 Move X19, X0
	111 Call 0x2D12D64, X0
	112 Move X8, [X20]
	113 Move X8, [X8+184]
	114 Move [X8+24], X19
	115 Move X0, [X24]
	116 Call 0x1C17F10
	117 Move X1, [X23]
	118 Move X19, X0
	119 Call 0x2D12D64, X0
	120 Move X8, [X20]
	121 Move X8, [X8+184]
	122 Move [X8+32], X19
	123 Move X8, 0x67E000
	124 Move X8, [X8+2128]
	125 Move X0, [X8]
	126 Call 0x1C17F10
	127 Move X8, 0x67E000
	128 Move X8, [X8+2120]
	129 Move X19, X0
	130 Move X1, [X8]
	131 Call 0x2D13570, X0
	132 Move X8, [X20]
	133 Move X8, [X8+184]
	134 Move [X8+40], X19
	135 Move X8, 0x67E000
	136 Move X8, [X8+2112]
	137 Move X0, [X8]
	138 Call 0x1C17F10
	139 Move X8, 0x67E000
	140 Move X8, [X8+2104]
	141 Move X19, X0
	142 Move X1, [X8]
	143 Call 0x2D125CC, X0
	144 Move X8, [X20]
	145 Move X8, [X8+184]
	146 Move [X8+48], X19
	147 Move X0, [X22]
	148 Call 0x1C17F10
	149 Move X1, [X21]
	150 Move X19, X0
	151 Call FastAction`1<Object>..ctor, X0
	152 Move X8, [X20]
	153 Move X8, [X8+184]
	154 Move [X8+56], X19
	155 Move X0, [X25]
	156 Call 0x1C17F10
	157 Move X19, X0
	158 Call FastAction..ctor, X0
	159 Move X8, [X20]
	160 Move X8, [X8+184]
	161 Move [X8+64], X19
	162 Move X0, [X25]
	163 Call 0x1C17F10
	164 Move X19, X0
	165 Call FastAction..ctor, X0
	166 Move X8, [X20]
	167 Move X8, [X8+184]
	168 Move [X8+72], X19
	169 Move X0, [X24]
	170 Call 0x1C17F10
	171 Move X1, [X23]
	172 Move X19, X0
	173 Call 0x2D12D64, X0
	174 Move X8, [X20]
	175 Move X8, [X8+184]
	176 Move [X8+80], X19
	177 Move X0, [X22]
	178 Call 0x1C17F10
	179 Move X1, [X21]
	180 Move X19, X0
	181 Call FastAction`1<Object>..ctor, X0
	182 Move X8, [X20]
	183 Move X22, [X31+64]
	184 Move X21, [X31+72]
	185 Move X24, [X31+48]
	186 Move X23, [X31+56]
	187 Move X26, [X31+32]
	188 Move X25, [X31+40]
	189 Move X8, [X8+184]
	190 Move X28, [X31+16]
	191 Move X27, [X31+24]
	192 Move [X8+88], X19
	193 Move X20, [X31+80]
	194 Move X19, [X31+88]
	195 Move X29, [X31+96]
	196 Move X30, [X31+104]
	197 Return 

