Type: TMPro.TMP_MaterialManager

Method: System.Void .cctor()

Disassembly:
	0x03B0E7B8 LDR X8, [X20]
	0x03B0E7BC MOV X1, X31
	0x03B0E7C0 LDR X8, [X8 + 0xB8]
	0x03B0E7C4 STR W0, [X8 + 0x9C]
	0x03B0E7C8 ADRP X8, 0x64B000
	0x03B0E7CC LDR X8, [X8 + 0x4B8]
	0x03B0E7D0 LDR X0, [X8]
	0x03B0E7D4 BL 0x3C124EC
	0x03B0E7D8 LDR X8, [X20]
	0x03B0E7DC MOV X1, X31
	0x03B0E7E0 LDR X8, [X8 + 0xB8]
	0x03B0E7E4 STR W0, [X8 + 0xB0]
	0x03B0E7E8 ADRP X8, 0x64B000
	0x03B0E7EC LDR X8, [X8 + 0x610]
	0x03B0E7F0 LDR X0, [X8]
	0x03B0E7F4 BL 0x3C124EC
	0x03B0E7F8 LDR X8, [X20]
	0x03B0E7FC MOV X1, X31
	0x03B0E800 LDR X8, [X8 + 0xB8]
	0x03B0E804 STR W0, [X8 + 0xA0]
	0x03B0E808 ADRP X8, 0x64B000
	0x03B0E80C LDR X8, [X8 + 0x598]
	0x03B0E810 LDR X0, [X8]
	0x03B0E814 BL 0x3C124EC
	0x03B0E818 LDR X8, [X20]
	0x03B0E81C MOV X1, X31
	0x03B0E820 LDR X8, [X8 + 0xB8]
	0x03B0E824 STR W0, [X8 + 0xA4]
	0x03B0E828 ADRP X8, 0x64B000
	0x03B0E82C LDR X8, [X8 + 0x630]
	0x03B0E830 LDR X0, [X8]
	0x03B0E834 BL 0x3C124EC
	0x03B0E838 LDR X8, [X20]
	0x03B0E83C MOV X1, X31
	0x03B0E840 LDR X8, [X8 + 0xB8]
	0x03B0E844 STR W0, [X8 + 0xA8]
	0x03B0E848 ADRP X8, 0x64B000
	0x03B0E84C LDR X8, [X8 + 0x5B8]
	0x03B0E850 LDR X0, [X8]
	0x03B0E854 BL 0x3C124EC
	0x03B0E858 LDR X8, [X20]
	0x03B0E85C MOV X1, X31
	0x03B0E860 LDR X8, [X8 + 0xB8]
	0x03B0E864 STR W0, [X8 + 0xAC]
	0x03B0E868 ADRP X8, 0x64B000
	0x03B0E86C LDR X8, [X8 + 0x4C8]
	0x03B0E870 LDR X0, [X8]
	0x03B0E874 BL 0x3C124EC
	0x03B0E878 LDR X8, [X20]
	0x03B0E87C MOV X1, X31
	0x03B0E880 LDR X8, [X8 + 0xB8]
	0x03B0E884 STR W0, [X8 + 0xB4]
	0x03B0E888 ADRP X8, 0x64B000
	0x03B0E88C LDR X8, [X8 + 0x540]
	0x03B0E890 LDR X0, [X8]
	0x03B0E894 BL 0x3C124EC
	0x03B0E898 LDR X8, [X20]
	0x03B0E89C MOV X1, X31
	0x03B0E8A0 LDR X8, [X8 + 0xB8]
	0x03B0E8A4 STR W0, [X8 + 0xB8]
	0x03B0E8A8 ADRP X8, 0x64B000
	0x03B0E8AC LDR X8, [X8 + 0x4B0]
	0x03B0E8B0 LDR X0, [X8]
	0x03B0E8B4 BL 0x3C124EC
	0x03B0E8B8 LDR X8, [X20]
	0x03B0E8BC MOV X1, X31
	0x03B0E8C0 LDR X8, [X8 + 0xB8]
	0x03B0E8C4 STR W0, [X8 + 0xBC]
	0x03B0E8C8 ADRP X8, 0x649000
	0x03B0E8CC LDR X8, [X8 + 0x888]
	0x03B0E8D0 LDR X0, [X8]
	0x03B0E8D4 BL 0x3C124EC
	0x03B0E8D8 LDR X8, [X20]
	0x03B0E8DC MOV X1, X31
	0x03B0E8E0 LDR X8, [X8 + 0xB8]
	0x03B0E8E4 STR W0, [X8 + 0xC0]
	0x03B0E8E8 ADRP X8, 0x649000
	0x03B0E8EC LDR X8, [X8 + 0x890]
	0x03B0E8F0 LDR X0, [X8]
	0x03B0E8F4 BL 0x3C124EC
	0x03B0E8F8 LDR X8, [X20]
	0x03B0E8FC MOV X1, X31
	0x03B0E900 LDR X8, [X8 + 0xB8]
	0x03B0E904 STR W0, [X8 + 0xC4]
	0x03B0E908 ADRP X8, 0x64B000
	0x03B0E90C LDR X8, [X8 + 0x550]
	0x03B0E910 LDR X0, [X8]
	0x03B0E914 BL 0x3C124EC
	0x03B0E918 LDR X8, [X20]
	0x03B0E91C MOV X1, X31
	0x03B0E920 LDR X8, [X8 + 0xB8]
	0x03B0E924 STR W0, [X8 + 0xC8]
	0x03B0E928 ADRP X8, 0x64B000
	0x03B0E92C LDR X8, [X8 + 0x620]
	0x03B0E930 LDR X0, [X8]
	0x03B0E934 BL 0x3C124EC
	0x03B0E938 LDR X8, [X20]
	0x03B0E93C MOV X1, X31
	0x03B0E940 LDR X8, [X8 + 0xB8]
	0x03B0E944 STR W0, [X8 + 0xCC]
	0x03B0E948 ADRP X8, 0x64B000
	0x03B0E94C LDR X8, [X8 + 0x5D8]
	0x03B0E950 LDR X0, [X8]
	0x03B0E954 BL 0x3C124EC
	0x03B0E958 LDR X8, [X20]
	0x03B0E95C MOV X1, X31
	0x03B0E960 LDR X8, [X8 + 0xB8]
	0x03B0E964 STR W0, [X8 + 0xD0]
	0x03B0E968 ADRP X8, 0x64B000
	0x03B0E96C LDR X8, [X8 + 0x508]
	0x03B0E970 LDR X0, [X8]
	0x03B0E974 BL 0x3C124EC
	0x03B0E978 LDR X8, [X20]
	0x03B0E97C ADRP X21, 0x5E5000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x8D5000
	014 Move X20, 0x64C000
	015 Move X19, 0x64C000
	016 Move X21, 0x64B000
	017 Move X28, 0x64C000
	018 Move X27, 0x64C000
	019 Move X26, 0x64C000
	020 Move X25, 0x64C000
	021 Move X24, 0x64C000
	022 Move X23, 0x64C000
	023 Move X22, 0x64C000
	024 Move X20, [X20+1008]
	025 Move X19, [X19+1016]
	026 Move X21, [X21+1568]
	027 Move X28, [X28+1024]
	028 Move X27, [X27+1032]
	029 Move X26, [X26+1040]
	030 Move W8, [X29+1652]
	031 Move X25, [X25+1048]
	032 Move X24, [X24+1056]
	033 Move X23, [X23+1064]
	034 Move X22, [X22+1072]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {74}
	039 Move X0, 0x64C000
	040 Move X0, [X0+1048]
	041 Call 0x1C17CF4
	042 Move X0, 0x64C000
	043 Move X0, [X0+1032]
	044 Call 0x1C17CF4
	045 Move X0, 0x64C000
	046 Move X0, [X0+1040]
	047 Call 0x1C17CF4
	048 Move X0, 0x64C000
	049 Move X0, [X0+1024]
	050 Call 0x1C17CF4
	051 Move X0, 0x64C000
	052 Move X0, [X0+1016]
	053 Call 0x1C17CF4
	054 Move X0, 0x64C000
	055 Move X0, [X0+1064]
	056 Call 0x1C17CF4
	057 Move X0, 0x64C000
	058 Move X0, [X0+1008]
	059 Call 0x1C17CF4
	060 Move X0, 0x64C000
	061 Move X0, [X0+1056]
	062 Call 0x1C17CF4
	063 Move X0, 0x64C000
	064 Move X0, [X0+1080]
	065 Call 0x1C17CF4
	066 Move X0, 0x64B000
	067 Move X0, [X0+1568]
	068 Call 0x1C17CF4
	069 Move X0, 0x64C000
	070 Move X0, [X0+1072]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X29+1652], W8
	074 Move X0, [X20]
	075 Call 0x1C17F10
	076 Move X1, [X19]
	077 Move X19, X0
	078 Call List`1<Object>..ctor, X0
	079 Move X8, [X21]
	080 Move X8, [X8+184]
	081 Move [X8], X19
	082 Move X0, [X28]
	083 Call 0x1C17F10
	084 Move X1, [X27]
	085 Move X19, X0
	086 Call Dictionary`2<Int64, Object>..ctor, X0
	087 Move X8, [X21]
	088 Move X8, [X8+184]
	089 Move [X8+8], X19
	090 Move X0, [X26]
	091 Call 0x1C17F10
	092 Move X1, [X25]
	093 Move X19, X0
	094 Call Dictionary`2<Int32, Int64>..ctor, X0
	095 Move X8, [X21]
	096 Move X8, [X8+184]
	097 Move [X8+16], X19
	098 Move X0, [X24]
	099 Call 0x1C17F10
	100 Move X1, [X23]
	101 Move X19, X0
	102 Call List`1<Object>..ctor, X0
	103 Move X8, [X21]
	104 Move X8, [X8+184]
	105 Move [X8+24], X19
	106 Move X0, [X22]
	107 Call 0x1C17F10
	108 Move X8, 0x64C000
	109 Move X8, [X8+1080]
	110 Move X1, X31
	111 Move X3, X31
	112 Move X19, X0
	113 Move X2, [X8]
	114 Call WillRenderCanvases..ctor, X0, X1, X2
	115 Move X0, X19
	116 Move X20, [X31+80]
	117 Move X19, [X31+88]
	118 Move X22, [X31+64]
	119 Move X21, [X31+72]
	120 Move X24, [X31+48]
	121 Move X23, [X31+56]
	122 Move X26, [X31+32]
	123 Move X25, [X31+40]
	124 Move X28, [X31+16]
	125 Move X27, [X31+24]
	126 Move X1, X31
	127 Move X29, [X31+96]
	128 Move X30, [X31+104]
	129 Call Canvas.add_willRenderCanvases, X0
	130 Return 

Method: System.Void OnPreRender()

Disassembly:
	0x03B0E980 LDR X8, [X8 + 0xB8]
	0x03B0E984 STR W0, [X8 + 0xD4]
	0x03B0E988 LDR X21, [X21 + 0x598]
	0x03B0E98C LDR X19, [X8 + 0x130]
	0x03B0E990 LDR X0, [X21]
	0x03B0E994 LDR W9, [X0 + 0xE0]
	0x03B0E998 CBNZ W9, 0x3B0E9A0
	0x03B0E99C BL 0x1C16DFC
	0x03B0E9A0 MOV X0, X19
	0x03B0E9A4 MOV X1, X31
	0x03B0E9A8 MOV X2, X31
	0x03B0E9AC BL 0x3C3883C
	0x03B0E9B0 TBZ X0, 0x0, 0x3B0E9F0
	0x03B0E9B4 ADRP X8, 0x64B000
	0x03B0E9B8 LDR X8, [X8 + 0x590]
	0x03B0E9BC MOV X1, X31
	0x03B0E9C0 LDR X0, [X8]
	0x03B0E9C4 BL 0x3C13E40
	0x03B0E9C8 LDR X8, [X20]
	0x03B0E9CC MOV X19, X0
	0x03B0E9D0 LDR W9, [X8 + 0xE0]
	0x03B0E9D4 CBNZ W9, 0x3B0E9E4
	0x03B0E9D8 MOV X0, X8
	0x03B0E9DC BL 0x1C16DFC
	0x03B0E9E0 LDR X8, [X20]
	0x03B0E9E4 LDR X9, [X8 + 0xB8]
	0x03B0E9E8 STR X19, [X9 + 0x130]
	0x03B0E9EC B 0x3B0E9F4
	0x03B0E9F0 LDR X8, [X20]
	0x03B0E9F4 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8D5000
	005 Move X19, 0x64B000
	006 Move W8, [X20+1653]
	007 Move X19, [X19+1568]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x64B000
	013 Move X0, [X0+1568]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1653], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move W8, [X8+32]
	025 Compare W8, 0
	026 JumpIfEqual {35}
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Call TMP_MaterialManager.CleanupFallbackMaterials
	032 Move X8, [X19]
	033 Move X8, [X8+184]
	034 Move [X8+32], W31
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 

Method: UnityEngine.Material GetStencilMaterial(UnityEngine.Material baseMaterial, System.Int32 stencilID)

Disassembly:
	0x03B0EC0C MOV X0, X8
	0x03B0EC10 BL 0x1C16DFC
	0x03B0EC14 MOV X0, X20
	0x03B0EC18 MOV X1, X31
	0x03B0EC1C BL 0x3C39564
	0x03B0EC20 LDR X8, [X21]
	0x03B0EC24 LDR X8, [X8 + 0xB8]
	0x03B0EC28 LDR X0, [X8]
	0x03B0EC2C CBZ X0, 0x3B0EC6C
	0x03B0EC30 ADRP X8, 0x64B000
	0x03B0EC34 LDR X8, [X8 + 0x638]
	0x03B0EC38 MOV W1, W19
	0x03B0EC3C LDP X20, X19, [X31 + 0x20]
	0x03B0EC40 LDP X22, X21, [X31 + 0x10]
	0x03B0EC44 LDR X2, [X8]
	0x03B0EC48 LDR X30, [X31], #0x30
	0x03B0EC4C B 0x301DA48
	0x03B0EC50 LDR W8, [X0 + 0x20]
	0x03B0EC54 SUB W8, W8, 0x1
	0x03B0EC58 STR W8, [X0 + 0x20]
	0x03B0EC5C LDP X20, X19, [X31 + 0x20]
	0x03B0EC60 LDP X22, X21, [X31 + 0x10]
	0x03B0EC64 LDR X30, [X31], #0x30
	0x03B0EC68 RET
	0x03B0EC6C BL 0x1C16F20
	0x03B0EC70 STP X30, X23, [X31 - 0x30]!
	0x03B0EC74 STP X22, X21, [X31 + 0x10]
	0x03B0EC78 STP X20, X19, [X31 + 0x20]
	0x03B0EC7C ADRP X20, 0x8D4000
	0x03B0EC80 ADRP X21, 0x64B000
	0x03B0EC84 LDRB W8, [X20 + 0x678]
	0x03B0EC88 LDR X21, [X21 + 0x640]
	0x03B0EC8C MOV X19, X0
	0x03B0EC90 TBNZ X8, 0x0, 0x3B0ECE4
	0x03B0EC94 ADRP X0, 0x64B000
	0x03B0EC98 LDR X0, [X0 + 0x648]
	0x03B0EC9C BL 0x1C16CF4
	0x03B0ECA0 ADRP X0, 0x64B000
	0x03B0ECA4 LDR X0, [X0 + 0x478]
	0x03B0ECA8 BL 0x1C16CF4
	0x03B0ECAC ADRP X0, 0x64B000
	0x03B0ECB0 LDR X0, [X0 + 0x650]
	0x03B0ECB4 BL 0x1C16CF4
	0x03B0ECB8 ADRP X0, 0x64A000
	0x03B0ECBC LDR X0, [X0 + 0x620]
	0x03B0ECC0 BL 0x1C16CF4
	0x03B0ECC4 ADRP X0, 0x64B000
	0x03B0ECC8 LDR X0, [X0 + 0x658]
	0x03B0ECCC BL 0x1C16CF4
	0x03B0ECD0 ADRP X0, 0x64B000
	0x03B0ECD4 LDR X0, [X0 + 0x640]
	0x03B0ECD8 BL 0x1C16CF4
	0x03B0ECDC MOVZ W8, 0x1
	0x03B0ECE0 STRB W8, [X20 + 0x678]
	0x03B0ECE4 LDR X0, [X21]
	0x03B0ECE8 BL 0x1C16F10
	0x03B0ECEC MOV X1, X31
	0x03B0ECF0 MOV X20, X0
	0x03B0ECF4 BL 0x33BDD8C
	0x03B0ECF8 CBZ X20, 0x3B0EDCC
	0x03B0ECFC ADRP X22, 0x64A000
	0x03B0ED00 LDR X22, [X22 + 0x620]
	0x03B0ED04 STR X19, [X20 + 0x10]
	0x03B0ED08 ADRP X23, 0x64B000
	0x03B0ED0C ADRP X21, 0x64B000
	0x03B0ED10 LDR X0, [X22]
	0x03B0ED14 LDR W8, [X0 + 0xE0]
	0x03B0ED18 LDR X23, [X23 + 0x650]
	0x03B0ED1C LDR X21, [X21 + 0x658]
	0x03B0ED20 CBNZ W8, 0x3B0ED2C
	0x03B0ED24 BL 0x1C16DFC
	0x03B0ED28 LDR X0, [X22]
	0x03B0ED2C LDR X8, [X0 + 0xB8]
	0x03B0ED30 LDR X0, [X23]
	0x03B0ED34 LDR X19, [X8]
	0x03B0ED38 BL 0x1C16F10
	0x03B0ED3C LDR X2, [X21]
	0x03B0ED40 MOV X1, X20
	0x03B0ED44 MOV X3, X31
	0x03B0ED48 MOV X21, X0
	0x03B0ED4C BL 0x24AD1FC
	0x03B0ED50 CBZ X19, 0x3B0EDCC
	0x03B0ED54 ADRP X8, 0x64B000
	0x03B0ED58 LDR X8, [X8 + 0x648]
	0x03B0ED5C MOV X0, X19
	0x03B0ED60 MOV X1, X21
	0x03B0ED64 LDR X2, [X8]
	0x03B0ED68 BL 0x301C7DC
	0x03B0ED6C ADDS W31, W0, 0x1
	0x03B0ED70 B.EQ 0x3B0EDB8
	0x03B0ED74 MOV W19, W0
	0x03B0ED78 LDR X0, [X22]
	0x03B0ED7C LDR W8, [X0 + 0xE0]
	0x03B0ED80 CBNZ W8, 0x3B0ED8C
	0x03B0ED84 BL 0x1C16DFC
	0x03B0ED88 LDR X0, [X22]
	0x03B0ED8C LDR X8, [X0 + 0xB8]
	0x03B0ED90 LDR X0, [X8]
	0x03B0ED94 CBZ X0, 0x3B0EDCC
	0x03B0ED98 ADRP X8, 0x64B000
	0x03B0ED9C LDR X8, [X8 + 0x478]
	0x03B0EDA0 MOV W1, W19
	0x03B0EDA4 LDR X2, [X8]
	0x03B0EDA8 BL 0x301BCCC
	0x03B0EDAC CBZ X0, 0x3B0EDCC
	0x03B0EDB0 LDR X0, [X0 + 0x10]
	0x03B0EDB4 B 0x3B0EDBC
	0x03B0EDB8 MOV X0, X31
	0x03B0EDBC LDP X20, X19, [X31 + 0x20]
	0x03B0EDC0 LDP X22, X21, [X31 + 0x10]
	0x03B0EDC4 LDP X30, X23, [X31], #0x30
	0x03B0EDC8 RET
	0x03B0EDCC BL 0x1C16F20
	0x03B0EDD0 MOV X1, X31
	0x03B0EDD4 B 0x33BDD8C
	0x03B0EDD8 STR X30, [X31 - 0x30]!
	0x03B0EDDC STP X22, X21, [X31 + 0x10]
	0x03B0EDE0 STP X20, X19, [X31 + 0x20]
	0x03B0EDE4 ADRP X22, 0x8D4000
	0x03B0EDE8 ADRP X21, 0x64A000
	0x03B0EDEC LDRB W8, [X22 + 0x679]
	0x03B0EDF0 LDR X21, [X21 + 0x338]
	0x03B0EDF4 MOV W20, W1
	0x03B0EDF8 MOV X19, X0
	0x03B0EDFC TBNZ X8, 0x0, 0x3B0EE14
	0x03B0EE00 ADRP X0, 0x64A000
	0x03B0EE04 LDR X0, [X0 + 0x338]
	0x03B0EE08 BL 0x1C16CF4
	0x03B0EE0C MOVZ W8, 0x1
	0x03B0EE10 STRB W8, [X22 + 0x679]
	0x03B0EE14 LDR X0, [X21]
	0x03B0EE18 LDR W8, [X0 + 0xE0]
	0x03B0EE1C CBNZ W8, 0x3B0EE24
	0x03B0EE20 BL 0x1C16DFC
	0x03B0EE24 CBZ X19, 0x3B0EE90
	0x03B0EE28 LDR X8, [X21]
	0x03B0EE2C SCVTF S0, W20
	0x03B0EE30 MOV X0, X19
	0x03B0EE34 MOV X2, X31
	0x03B0EE38 LDR X8, [X8 + 0xB8]
	0x03B0EE3C LDR W1, [X8 + 0xB4]
	0x03B0EE40 BL 0x3C15CD8
	0x03B0EE44 LDR X0, [X21]
	0x03B0EE48 LDR W8, [X0 + 0xE0]
	0x03B0EE4C CBNZ W8, 0x3B0EE58
	0x03B0EE50 BL 0x1C16DFC
	0x03B0EE54 LDR X0, [X21]
	0x03B0EE58 LDR X8, [X0 + 0xB8]
	0x03B0EE5C CMP W20, 0x0
	0x03B0EE60 FMOV S0, 4
	0x03B0EE64 FMOV S1, 8
	0x03B0EE68 LDR W1, [X8 + 0xBC]
	0x03B0EE6C FCSEL S0, S1, S0, EQ
	0x03B0EE70 MOV X0, X19
	0x03B0EE74 MOV X2, X31
	0x03B0EE78 BL 0x3C15CD8
	0x03B0EE7C MOV X0, X19
	0x03B0EE80 LDP X20, X19, [X31 + 0x20]
	0x03B0EE84 LDP X22, X21, [X31 + 0x10]
	0x03B0EE88 LDR X30, [X31], #0x30
	0x03B0EE8C RET
	0x03B0EE90 BL 0x1C16F20
	0x03B0EE94 STP X30, X25, [X31 - 0x40]!
	0x03B0EE98 STP X24, X23, [X31 + 0x10]
	0x03B0EE9C STP X22, X21, [X31 + 0x20]
	0x03B0EEA0 STP X20, X19, [X31 + 0x30]
	0x03B0EEA4 ADRP X21, 0x8D4000
	0x03B0EEA8 ADRP X23, 0x64B000
	0x03B0EEAC LDRB W8, [X21 + 0x67A]
	0x03B0EEB0 LDR X23, [X23 + 0x660]
	0x03B0EEB4 MOV W19, W2
	0x03B0EEB8 MOV X22, X1
	0x03B0EEBC MOV X20, X0
	0x03B0EEC0 TBNZ X8, 0x0, 0x3B0EF2C
	0x03B0EEC4 ADRP X0, 0x64B000
	0x03B0EEC8 LDR X0, [X0 + 0x468]
	0x03B0EECC BL 0x1C16CF4
	0x03B0EED0 ADRP X0, 0x64B000
	0x03B0EED4 LDR X0, [X0 + 0x648]
	0x03B0EED8 BL 0x1C16CF4
	0x03B0EEDC ADRP X0, 0x64B000
	0x03B0EEE0 LDR X0, [X0 + 0x478]
	0x03B0EEE4 BL 0x1C16CF4
	0x03B0EEE8 ADRP X0, 0x64B000
	0x03B0EEEC LDR X0, [X0 + 0x480]
	0x03B0EEF0 BL 0x1C16CF4
	0x03B0EEF4 ADRP X0, 0x64B000
	0x03B0EEF8 LDR X0, [X0 + 0x650]
	0x03B0EEFC BL 0x1C16CF4
	0x03B0EF00 ADRP X0, 0x64A000
	0x03B0EF04 LDR X0, [X0 + 0x620]
	0x03B0EF08 BL 0x1C16CF4
	0x03B0EF0C ADRP X0, 0x64B000
	0x03B0EF10 LDR X0, [X0 + 0x668]
	0x03B0EF14 BL 0x1C16CF4
	0x03B0EF18 ADRP X0, 0x64B000
	0x03B0EF1C LDR X0, [X0 + 0x660]
	0x03B0EF20 BL 0x1C16CF4
	0x03B0EF24 MOVZ W8, 0x1
	0x03B0EF28 STRB W8, [X21 + 0x67A]
	0x03B0EF2C LDR X0, [X23]
	0x03B0EF30 BL 0x1C16F10
	0x03B0EF34 MOV X1, X31
	0x03B0EF38 MOV X21, X0
	0x03B0EF3C BL 0x33BDD8C
	0x03B0EF40 CBZ X21, 0x3B0F0FC
	0x03B0EF44 ADRP X24, 0x64A000
	0x03B0EF48 LDR X24, [X24 + 0x620]
	0x03B0EF4C STR X22, [X21 + 0x10]
	0x03B0EF50 ADRP X25, 0x64B000
	0x03B0EF54 ADRP X23, 0x64B000
	0x03B0EF58 LDR X0, [X24]
	0x03B0EF5C LDR W8, [X0 + 0xE0]
	0x03B0EF60 LDR X25, [X25 + 0x650]
	0x03B0EF64 LDR X23, [X23 + 0x668]
	0x03B0EF68 CBNZ W8, 0x3B0EF74
	0x03B0EF6C BL 0x1C16DFC
	0x03B0EF70 LDR X0, [X24]
	0x03B0EF74 LDR X8, [X0 + 0xB8]
	0x03B0EF78 LDR X0, [X25]
	0x03B0EF7C LDR X22, [X8]
	0x03B0EF80 BL 0x1C16F10
	0x03B0EF84 LDR X2, [X23]
	0x03B0EF88 MOV X1, X21
	0x03B0EF8C MOV X3, X31
	0x03B0EF90 MOV X23, X0
	0x03B0EF94 BL 0x24AD1FC
	0x03B0EF98 CBZ X22, 0x3B0F0FC
	0x03B0EF9C ADRP X8, 0x64B000
	0x03B0EFA0 LDR X8, [X8 + 0x648]
	0x03B0EFA4 MOV X0, X22
	0x03B0EFA8 MOV X1, X23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x8D5000
	010 Move X23, 0x64B000
	011 Move W8, [X21+1654]
	012 Move X23, [X23+824]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x5E6000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x64C000
	023 Move X0, [X0+1128]
	024 Call 0x1C17CF4
	025 Move X0, 0x64C000
	026 Move X0, [X0+1136]
	027 Call 0x1C17CF4
	028 Move X0, 0x64C000
	029 Move X0, [X0+1144]
	030 Call 0x1C17CF4
	031 Move X0, 0x64C000
	032 Move X0, [X0+1152]
	033 Call 0x1C17CF4
	034 Move X0, 0x5EA000
	035 Move X0, [X0+3232]
	036 Call 0x1C17CF4
	037 Move X0, 0x64B000
	038 Move X0, [X0+824]
	039 Call 0x1C17CF4
	040 Move X0, 0x64B000
	041 Move X0, [X0+1568]
	042 Call 0x1C17CF4
	043 Move X0, 0x64C000
	044 Move X0, [X0+1160]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1654], W8
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Compare X19, 0
	054 JumpIfEqual {263}
	055 Move X8, [X23]
	056 Move X0, X19
	057 Move X2, X31
	058 Move X8, [X8+184]
	059 Move W1, [X8+180]
	060 Call Material.HasProperty, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {125}
	065 Move X0, X19
	066 Move X1, X31
	067 Call Object.GetInstanceID, X0
	068 Move X24, 0x64B000
	069 Move X25, 0x64C000
	070 Move X24, [X24+1568]
	071 Move X25, [X25+1144]
	072 Move W22, W0
	073 Move W21, W31
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X24]
	080 Move X8, [X0+184]
	081 Move X8, [X8]
	082 Compare X8, 0
	083 JumpIfEqual {263}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, [X0+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {95}
	089 Call 0x1C17DFC
	090 Move X8, [X24]
	091 Move X8, [X8+184]
	092 Move X8, [X8]
	093 Compare X8, 0
	094 JumpIfEqual {263}
	095 Move X2, [X25]
	096 Move X0, X8
	097 Move W1, W21
	098 Call List`1<Object>.get_Item, X0, X1
	099 Compare X0, 0
	100 JumpIfEqual {263}
	101 Move X0, [X0+16]
	102 Compare X0, 0
	103 JumpIfEqual {263}
	104 Move X1, X31
	105 Call Object.GetInstanceID, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, [X24]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X24]
	113 Move X8, [X0+184]
	114 Move X0, [X8]
	115 Compare X0, 0
	116 JumpIfEqual {263}
	117 Move X2, [X25]
	118 Move W1, W21
	119 Call List`1<Object>.get_Item, X0, X1
	120 Compare X0, 0
	121 JumpIfEqual {263}
	122 Move W8, [X0+36]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W21, W21, 1
	125 Move X8, 0x5E6000
	126 Move X8, [X8+2600]
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move X8, 0x64C000
	133 Move X8, [X8+1160]
	134 Move X1, X31
	135 Move X0, [X8]
	136 Call Debug.LogWarning, X0
	137 Move X8, 0x5EA000
	138 Move X8, [X8+3232]
	139 Move X0, [X8]
	140 Call 0x1C17F10
	141 Move X1, X19
	142 Move X2, X31
	143 Move X21, X0
	144 Call Material..ctor, X0, X1
	145 Compare X21, 0
	146 JumpIfEqual {263}
	147 Move W1, 61
	148 Move X0, X21
	149 Move X2, X31
	150 Call Object.set_hideFlags, X0, X1
	151 Move X0, X19
	152 Move X1, X31
	153 Call Material.get_shaderKeywords, X0
	154 Move X1, X0
	155 Move X0, X21
	156 Move X2, X31
	157 Call Material.set_shaderKeywords, X0, X1
	158 Move X0, [X23]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Call ShaderUtilities.GetShaderPropertyIDs
	164 Move X8, [X23]
	165 NotImplemented "Instruction SCVTF not yet implemented."
	166 Move X0, X21
	167 Move X2, X31
	168 Move X8, [X8+184]
	169 Move W1, [X8+180]
	170 Call Material.SetFloat, X0, X1, V0
	171 Move X8, [X23]
	172 Move S0, 4
	173 Move X0, X21
	174 Move X2, X31
	175 Move X8, [X8+184]
	176 Move W1, [X8+188]
	177 Call Material.SetFloat, X0, X1, V0
	178 Move X8, 0x64C000
	179 Move X8, [X8+1152]
	180 Move X0, [X8]
	181 Call 0x1C17F10
	182 Move X1, X31
	183 Move X22, X0
	184 Call Object..ctor, X0
	185 Compare X22, 0
	186 JumpIfEqual {263}
	187 Move W8, 1
	188 Move [X22+16], X19
	189 Move [X22+24], X21
	190 Move [X22+32], W8
	191 Move [X22+36], W20
	192 Move X0, [X24]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {198}
	196 Call 0x1C17DFC
	197 Move X0, [X24]
	198 Move X8, [X0+184]
	199 Move X0, [X8]
	200 Compare X0, 0
	201 JumpIfEqual {263}
	202 Move X9, 0x64C000
	203 Move X9, [X9+1128]
	204 Move W10, [X0+28]
	205 Move X8, [X0+16]
	206 Move X9, [X9]
	207 Add W10, W10, 1
	208 Move [X0+28], W10
	209 Compare X8, 0
	210 JumpIfEqual {263}
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Move W11, [X8+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Add W9, W10, 1
	215 Add X8, X8, X10
	216 Move [X0+24], W9
	217 Move [X8+32], X22
	218 Move X8, [X9+32]
	219 Move X1, X22
	220 Move X8, [X8+192]
	221 Move X2, [X8+112]
	222 Call List`1<Object>.AddWithResize, X0, X1
	223 Move X19, X21
	224 Move X0, [X24]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {230}
	228 Call 0x1C17DFC
	229 Move X0, [X24]
	230 Move X8, [X0+184]
	231 Move X0, [X8]
	232 Compare X0, 0
	233 JumpIfEqual {263}
	234 Move X2, [X25]
	235 Move W1, W21
	236 Call List`1<Object>.get_Item, X0, X1
	237 Compare X0, 0
	238 JumpIfEqual {263}
	239 Move W8, [X0+32]
	240 Add W8, W8, 1
	241 Move [X0+32], W8
	242 Move X8, [X24]
	243 Move X8, [X8+184]
	244 Move X0, [X8]
	245 Compare X0, 0
	246 JumpIfEqual {263}
	247 Move X2, [X25]
	248 Move W1, W21
	249 Call List`1<Object>.get_Item, X0, X1
	250 Compare X0, 0
	251 JumpIfEqual {263}
	252 Move X19, [X0+24]
	253 Move X0, X19
	254 Move X20, [X31+48]
	255 Move X19, [X31+56]
	256 Move X22, [X31+32]
	257 Move X21, [X31+40]
	258 Move X24, [X31+16]
	259 Move X23, [X31+24]
	260 Move X30, [X31+64]
	261 Move X25, [X31+72]
	262 Return X0
	263 Call 0x1C17F20

Method: System.Void ReleaseStencilMaterial(UnityEngine.Material stencilMaterial)

Disassembly:
	0x03B0FA80 MOV X23, X0
	0x03B0FA84 LDR W9, [X8 + 0xE0]
	0x03B0FA88 CBNZ W9, 0x3B0FA94
	0x03B0FA8C MOV X0, X8
	0x03B0FA90 BL 0x1C16DFC
	0x03B0FA94 MOV X0, X23
	0x03B0FA98 MOV X1, X31
	0x03B0FA9C MOV X2, X31
	0x03B0FAA0 BL 0x3C354F8
	0x03B0FAA4 TBZ X0, 0x0, 0x3B0FAE4
	0x03B0FAA8 CBZ X23, 0x3B0FB8C
	0x03B0FAAC LDR X8, [X23]
	0x03B0FAB0 MOV X0, X23
	0x03B0FAB4 LDR X9, [X8 + 0x268]
	0x03B0FAB8 LDR X1, [X8 + 0x270]
	0x03B0FABC BLR X9
	0x03B0FAC0 TBZ X0, 0x0, 0x3B0FAE4
	0x03B0FAC4 MOV X0, X23
	0x03B0FAC8 MOV X1, X31
	0x03B0FACC BL 0x3E364F0
	0x03B0FAD0 CBZ X0, 0x3B0FB8C
	0x03B0FAD4 LDR X8, [X0]
	0x03B0FAD8 LDP X9, X1, [X8 + 0x1C8]
	0x03B0FADC BLR X9
	0x03B0FAE0 TBNZ X0, 0x0, 0x3B0FAF8
	0x03B0FAE4 LDR W8, [X20 + 0x18]
	0x03B0FAE8 ADD W22, W22, 0x1
	0x03B0FAEC CMP W22, W8
	0x03B0FAF0 B.LT 0x3B0FA6C
	0x03B0FAF4 B 0x3B0FAFC
	0x03B0FAF8 ADD W26, W26, 0x1
	0x03B0FAFC LDR X0, [X24]
	0x03B0FB00 LDR W8, [X0 + 0xE0]
	0x03B0FB04 CBNZ W8, 0x3B0FB0C
	0x03B0FB08 BL 0x1C16DFC
	0x03B0FB0C MOV X0, X21
	0x03B0FB10 MOV X1, X19
	0x03B0FB14 MOV X2, X31
	0x03B0FB18 BL 0x3C3883C
	0x03B0FB1C TBNZ X0, 0x0, 0x3B0FB34
	0x03B0FB20 MOV X0, X21
	0x03B0FB24 MOV X1, X31
	0x03B0FB28 BL 0x3C3F49C
	0x03B0FB2C MOV X21, X0
	0x03B0FB30 B 0x3B0FA20
	0x03B0FB34 LDR X0, [X25]
	0x03B0FB38 LDR W8, [X0 + 0xE0]
	0x03B0FB3C CBNZ W8, 0x3B0FB44
	0x03B0FB40 BL 0x1C16DFC
	0x03B0FB44 ADRP X8, 0x64A000
	0x03B0FB48 LDR X8, [X8 + 0x6F0]
	0x03B0FB4C MOV X0, X20
	0x03B0FB50 LDR X1, [X8]
	0x03B0FB54 BL 0x266FFD4
	0x03B0FB58 MOVN W8, 0x0
	0x03B0FB5C LSLV W8, W8, W26
	0x03B0FB60 ADDS W31, W8, 0x100
	0x03B0FB64 MOVN W9, 0xFF
	0x03B0FB68 CSEL W8, W8, W9, GT
	0x03B0FB6C ORN W0, W31, W8, 0x0
	0x03B0FB70 LDP X20, X19, [X31 + 0x50]
	0x03B0FB74 LDP X22, X21, [X31 + 0x40]
	0x03B0FB78 LDP X24, X23, [X31 + 0x30]
	0x03B0FB7C LDP X26, X25, [X31 + 0x20]
	0x03B0FB80 LDP X28, X27, [X31 + 0x10]
	0x03B0FB84 LDR X30, [X31], #0x60
	0x03B0FB88 RET
	0x03B0FB8C BL 0x1C16F20
	0x03B0FB90 STP X30, X23, [X31 - 0x30]!
	0x03B0FB94 STP X22, X21, [X31 + 0x10]
	0x03B0FB98 STP X20, X19, [X31 + 0x20]
	0x03B0FB9C ADRP X19, 0x8D3000
	0x03B0FBA0 ADRP X22, 0x649000
	0x03B0FBA4 LDRB W8, [X19 + 0x680]
	0x03B0FBA8 LDR X22, [X22 + 0x760]
	0x03B0FBAC MOV X20, X0
	0x03B0FBB0 TBNZ X8, 0x0, 0x3B0FC10
	0x03B0FBB4 ADRP X0, 0x64A000
	0x03B0FBB8 LDR X0, [X0 + 0x700]
	0x03B0FBBC BL 0x1C16CF4
	0x03B0FBC0 ADRP X0, 0x649000
	0x03B0FBC4 LDR X0, [X0 + 0x770]
	0x03B0FBC8 BL 0x1C16CF4
	0x03B0FBCC ADRP X0, 0x649000
	0x03B0FBD0 LDR X0, [X0 + 0x778]
	0x03B0FBD4 BL 0x1C16CF4
	0x03B0FBD8 ADRP X0, 0x5E4000
	0x03B0FBDC LDR X0, [X0 + 0x598]
	0x03B0FBE0 BL 0x1C16CF4
	0x03B0FBE4 ADRP X0, 0x649000
	0x03B0FBE8 LDR X0, [X0 + 0x780]
	0x03B0FBEC BL 0x1C16CF4
	0x03B0FBF0 ADRP X0, 0x649000
	0x03B0FBF4 LDR X0, [X0 + 0x788]
	0x03B0FBF8 BL 0x1C16CF4
	0x03B0FBFC ADRP X0, 0x649000
	0x03B0FC00 LDR X0, [X0 + 0x760]
	0x03B0FC04 BL 0x1C16CF4
	0x03B0FC08 MOVZ W8, 0x1
	0x03B0FC0C STRB W8, [X19 + 0x680]
	0x03B0FC10 LDR X0, [X22]
	0x03B0FC14 ADRP X19, 0x649000
	0x03B0FC18 LDR W8, [X0 + 0xE0]
	0x03B0FC1C LDR X19, [X19 + 0x780]
	0x03B0FC20 CBNZ W8, 0x3B0FC28
	0x03B0FC24 BL 0x1C16DFC
	0x03B0FC28 LDR X0, [X19]
	0x03B0FC2C BL 0x266FF3C
	0x03B0FC30 CBZ X20, 0x3B0FD2C
	0x03B0FC34 ADRP X8, 0x64A000
	0x03B0FC38 LDR X8, [X8 + 0x700]
	0x03B0FC3C MOV X19, X0
	0x03B0FC40 MOV X0, X20
	0x03B0FC44 MOV W1, W31
	0x03B0FC48 LDR X3, [X8]
	0x03B0FC4C MOV X2, X19
	0x03B0FC50 BL 0x21A48CC
	0x03B0FC54 CBZ X19, 0x3B0FD2C
	0x03B0FC58 LDR W8, [X19 + 0x18]
	0x03B0FC5C CMP W8, 0x1
	0x03B0FC60 B.LT 0x3B0FCA8
	0x03B0FC64 ADRP X23, 0x649000
	0x03B0FC68 LDR X23, [X23 + 0x778]
	0x03B0FC6C MOV W21, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8D4000
	007 Move W8, [X20+1655]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x64B000
	014 Move X0, [X0+1592]
	015 Call 0x1C17CF4
	016 Move X0, 0x64B000
	017 Move X0, [X0+1136]
	018 Call 0x1C17CF4
	019 Move X0, 0x64B000
	020 Move X0, [X0+1144]
	021 Call 0x1C17CF4
	022 Move X0, 0x5E5000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x64A000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1655], W8
	030 Compare X19, 0
	031 JumpIfEqual {145}
	032 Move X21, 0x64A000
	033 Move X22, 0x64B000
	034 Move X21, [X21+1568]
	035 Move X22, [X22+1144]
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object.GetInstanceID, X0
	039 Move W20, W0
	040 Move W19, W31
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {145}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, [X0+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {62}
	056 Call 0x1C17DFC
	057 Move X8, [X21]
	058 Move X8, [X8+184]
	059 Move X8, [X8]
	060 Compare X8, 0
	061 JumpIfEqual {145}
	062 Move X2, [X22]
	063 Move X0, X8
	064 Move W1, W19
	065 Call List`1<Object>.get_Item, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {145}
	068 Move X0, [X0+24]
	069 Compare X0, 0
	070 JumpIfEqual {145}
	071 Move X1, X31
	072 Call Object.GetInstanceID, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add W19, W19, 1
	075 Move X0, [X21]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X21]
	081 Move X8, [X0+184]
	082 Move X0, [X8]
	083 Compare X0, 0
	084 JumpIfEqual {145}
	085 Move X2, [X22]
	086 Move W1, W19
	087 Call List`1<Object>.get_Item, X0, X1
	088 Compare X0, 0
	089 JumpIfEqual {145}
	090 Move X8, X0
	091 Move X0, [X21]
	092 Move W20, [X8+32]
	093 Move W9, [X0+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move X0, [X8]
	100 Compare X0, 0
	101 JumpIfEqual {145}
	102 Move X2, [X22]
	103 Move W1, W19
	104 Call List`1<Object>.get_Item, X0, X1
	105 Compare X0, 0
	106 JumpIfEqual {145}
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, 0x5E5000
	109 Move X8, [X8+1432]
	110 Move X20, [X0+24]
	111 Move X8, [X8]
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X0, X20
	118 Move X1, X31
	119 Call Object.DestroyImmediate, X0
	120 Move X8, [X21]
	121 Move X8, [X8+184]
	122 Move X0, [X8]
	123 Compare X0, 0
	124 JumpIfEqual {145}
	125 Move X8, 0x64B000
	126 Move X8, [X8+1592]
	127 Move W1, W19
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X2, [X8]
	133 Move X30, [X31+48]
	134 Call List`1<Object>.RemoveAt, X0, X1
	135 Return 
	136 Move W8, [X0+32]
	137 Subtract W8, W8, 1
	138 Move [X0+32], W8
	139 Move X20, [X31+32]
	140 Move X19, [X31+40]
	141 Move X22, [X31+16]
	142 Move X21, [X31+24]
	143 Move X30, [X31+48]
	144 Return 
	145 Call 0x1C17F20

Method: UnityEngine.Material GetBaseMaterial(UnityEngine.Material stencilMaterial)

Disassembly:
	0x03B0FC70 LDR X2, [X23]
	0x03B0FC74 MOV X0, X19
	0x03B0FC78 MOV W1, W21
	0x03B0FC7C BL 0x301BCCC
	0x03B0FC80 CBZ X0, 0x3B0FD2C
	0x03B0FC84 MOV X1, X31
	0x03B0FC88 MOV X20, X0
	0x03B0FC8C BL 0x3E248A4
	0x03B0FC90 TBNZ X0, 0x0, 0x3B0FCAC
	0x03B0FC94 LDR W8, [X19 + 0x18]
	0x03B0FC98 ADD W21, W21, 0x1
	0x03B0FC9C CMP W21, W8
	0x03B0FCA0 B.LT 0x3B0FC70
	0x03B0FCA4 B 0x3B0FCAC
	0x03B0FCA8 MOV X20, X31
	0x03B0FCAC LDR X0, [X22]
	0x03B0FCB0 ADRP X22, 0x649000
	0x03B0FCB4 ADRP X21, 0x5E4000
	0x03B0FCB8 LDR W8, [X0 + 0xE0]
	0x03B0FCBC LDR X22, [X22 + 0x788]
	0x03B0FCC0 LDR X21, [X21 + 0x598]
	0x03B0FCC4 CBNZ W8, 0x3B0FCCC
	0x03B0FCC8 BL 0x1C16DFC
	0x03B0FCCC LDR X1, [X22]
	0x03B0FCD0 MOV X0, X19
	0x03B0FCD4 BL 0x266FFD4
	0x03B0FCD8 LDR X0, [X21]
	0x03B0FCDC LDR W8, [X0 + 0xE0]
	0x03B0FCE0 CBNZ W8, 0x3B0FCE8
	0x03B0FCE4 BL 0x1C16DFC
	0x03B0FCE8 MOV X0, X20
	0x03B0FCEC MOV X1, X31
	0x03B0FCF0 MOV X2, X31
	0x03B0FCF4 BL 0x3C354F8
	0x03B0FCF8 TBZ X0, 0x0, 0x3B0FD18
	0x03B0FCFC CBZ X20, 0x3B0FD2C
	0x03B0FD00 MOV X0, X20
	0x03B0FD04 LDP X20, X19, [X31 + 0x20]
	0x03B0FD08 LDP X22, X21, [X31 + 0x10]
	0x03B0FD0C MOV X1, X31
	0x03B0FD10 LDP X30, X23, [X31], #0x30
	0x03B0FD14 B 0x3C32E90
	0x03B0FD18 LDP X20, X19, [X31 + 0x20]
	0x03B0FD1C LDP X22, X21, [X31 + 0x10]
	0x03B0FD20 MOV X0, X31
	0x03B0FD24 LDP X30, X23, [X31], #0x30
	0x03B0FD28 RET
	0x03B0FD2C BL 0x1C16F20
	0x03B0FD30 STP X30, X25, [X31 - 0x40]!
	0x03B0FD34 STP X24, X23, [X31 + 0x10]
	0x03B0FD38 STP X22, X21, [X31 + 0x20]
	0x03B0FD3C STP X20, X19, [X31 + 0x30]
	0x03B0FD40 ADRP X19, 0x8D3000
	0x03B0FD44 ADRP X21, 0x5E4000
	0x03B0FD48 LDRB W8, [X19 + 0x67F]
	0x03B0FD4C LDR X21, [X21 + 0x598]
	0x03B0FD50 MOV X20, X1
	0x03B0FD54 MOV X22, X0
	0x03B0FD58 TBNZ X8, 0x0, 0x3B0FDC4
	0x03B0FD5C ADRP X0, 0x64A000
	0x03B0FD60 LDR X0, [X0 + 0x708]
	0x03B0FD64 BL 0x1C16CF4
	0x03B0FD68 ADRP X0, 0x64A000
	0x03B0FD6C LDR X0, [X0 + 0x710]
	0x03B0FD70 BL 0x1C16CF4
	0x03B0FD74 ADRP X0, 0x64A000
	0x03B0FD78 LDR X0, [X0 + 0x718]
	0x03B0FD7C BL 0x1C16CF4
	0x03B0FD80 ADRP X0, 0x64A000
	0x03B0FD84 LDR X0, [X0 + 0x720]
	0x03B0FD88 BL 0x1C16CF4
	0x03B0FD8C ADRP X0, 0x5E4000
	0x03B0FD90 LDR X0, [X0 + 0x598]
	0x03B0FD94 BL 0x1C16CF4
	0x03B0FD98 ADRP X0, 0x64A000
	0x03B0FD9C LDR X0, [X0 + 0x728]
	0x03B0FDA0 BL 0x1C16CF4
	0x03B0FDA4 ADRP X0, 0x64A000
	0x03B0FDA8 LDR X0, [X0 + 0x730]
	0x03B0FDAC BL 0x1C16CF4
	0x03B0FDB0 ADRP X0, 0x64A000
	0x03B0FDB4 LDR X0, [X0 + 0x738]
	0x03B0FDB8 BL 0x1C16CF4
	0x03B0FDBC MOVZ W8, 0x1
	0x03B0FDC0 STRB W8, [X19 + 0x67F]
	0x03B0FDC4 LDR X0, [X21]
	0x03B0FDC8 LDR W8, [X0 + 0xE0]
	0x03B0FDCC CBNZ W8, 0x3B0FDD4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8D4000
	008 Move X21, 0x64B000
	009 Move W8, [X20+1656]
	010 Move X21, [X21+1600]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x64B000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x64B000
	020 Move X0, [X0+1144]
	021 Call 0x1C17CF4
	022 Move X0, 0x64B000
	023 Move X0, [X0+1616]
	024 Call 0x1C17CF4
	025 Move X0, 0x64A000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move X0, 0x64B000
	029 Move X0, [X0+1624]
	030 Call 0x1C17CF4
	031 Move X0, 0x64B000
	032 Move X0, [X0+1600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1656], W8
	036 Move X0, [X21]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call Object..ctor, X0
	041 Compare X20, 0
	042 JumpIfEqual {101}
	043 Move X22, 0x64A000
	044 Move X22, [X22+1568]
	045 Move [X20+16], X19
	046 Move X23, 0x64B000
	047 Move X21, 0x64B000
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Move X23, [X23+1616]
	051 Move X21, [X21+1624]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X22]
	056 Move X8, [X0+184]
	057 Move X0, [X23]
	058 Move X19, [X8]
	059 Call 0x1C17F10
	060 Move X2, [X21]
	061 Move X1, X20
	062 Move X3, X31
	063 Move X21, X0
	064 Call Predicate`1<Object>..ctor, X0, X1, X2
	065 Compare X19, 0
	066 JumpIfEqual {101}
	067 Move X8, 0x64B000
	068 Move X8, [X8+1608]
	069 Move X0, X19
	070 Move X1, X21
	071 Move X2, [X8]
	072 Call List`1<Object>.FindIndex, X0, X1
	073 Add W31, W0, 1
	074 Move W19, W0
	075 Move X0, [X22]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X22]
	081 Move X8, [X0+184]
	082 Move X0, [X8]
	083 Compare X0, 0
	084 JumpIfEqual {101}
	085 Move X8, 0x64B000
	086 Move X8, [X8+1144]
	087 Move W1, W19
	088 Move X2, [X8]
	089 Call List`1<Object>.get_Item, X0, X1
	090 Compare X0, 0
	091 JumpIfEqual {101}
	092 Move X0, [X0+16]
	093 Move X0, X31
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X30, [X31+48]
	099 Move X23, [X31+56]
	100 Return X0
	101 Call 0x1C17F20

Method: UnityEngine.Material SetStencil(UnityEngine.Material material, System.Int32 stencilID)

Disassembly:
	0x03B0FDD8 MOV X1, X31
	0x03B0FDDC MOV X2, X31
	0x03B0FDE0 BL 0x3C3883C
	0x03B0FDE4 MOV X21, X31
	0x03B0FDE8 TBNZ X0, 0x0, 0x3B0FF10
	0x03B0FDEC ADRP X23, 0x64A000
	0x03B0FDF0 LDR X23, [X23 + 0x738]
	0x03B0FDF4 ADRP X19, 0x64A000
	0x03B0FDF8 LDR X0, [X23]
	0x03B0FDFC LDR W8, [X0 + 0xE0]
	0x03B0FE00 LDR X19, [X19 + 0x728]
	0x03B0FE04 CBNZ W8, 0x3B0FE0C
	0x03B0FE08 BL 0x1C16DFC
	0x03B0FE0C LDR X0, [X19]
	0x03B0FE10 BL 0x266FF3C
	0x03B0FE14 CBZ X22, 0x3B0FF28
	0x03B0FE18 ADRP X8, 0x64A000
	0x03B0FE1C LDR X8, [X8 + 0x708]
	0x03B0FE20 MOV X19, X0
	0x03B0FE24 MOV X0, X22
	0x03B0FE28 MOV X1, X19
	0x03B0FE2C LDR X2, [X8]
	0x03B0FE30 BL 0x21A443C
	0x03B0FE34 CBZ X19, 0x3B0FF28
	0x03B0FE38 LDR W8, [X19 + 0x18]
	0x03B0FE3C CMP W8, 0x1
	0x03B0FE40 B.LT 0x3B0FEE8
	0x03B0FE44 ADRP X24, 0x64A000
	0x03B0FE48 ADRP X25, 0x64A000
	0x03B0FE4C LDR X24, [X24 + 0x720]
	0x03B0FE50 LDR X25, [X25 + 0x710]
	0x03B0FE54 MOV W22, W31
	0x03B0FE58 MOV X21, X20
	0x03B0FE5C LDR X2, [X24]
	0x03B0FE60 MOV X0, X19
	0x03B0FE64 MOV W1, W22
	0x03B0FE68 BL 0x301BCCC
	0x03B0FE6C CBZ X0, 0x3B0FF28
	0x03B0FE70 LDR X8, [X0]
	0x03B0FE74 LDR X1, [X25]
	0x03B0FE78 MOV X20, X0
	0x03B0FE7C LDRH W9, [X8 + 0x12E]
	0x03B0FE80 CBZ X9, 0x3B0FEA4
	0x03B0FE84 LDR X10, [X8 + 0xB0]
	0x03B0FE88 ADD X10, X10, 0x8
	0x03B0FE8C LDUR X11, [X10 - 0x8]
	0x03B0FE90 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8D4000
	007 Move X21, 0x64A000
	008 Move W8, [X22+1657]
	009 Move X21, [X21+824]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x64A000
	017 Move X0, [X0+824]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1657], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Compare X19, 0
	027 JumpIfEqual {57}
	028 Move X8, [X21]
	029 NotImplemented "Instruction SCVTF not yet implemented."
	030 Move X0, X19
	031 Move X2, X31
	032 Move X8, [X8+184]
	033 Move W1, [X8+180]
	034 Call Material.SetFloat, X0, X1, V0
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move S0, 4
	044 Move S1, 8
	045 Move W1, [X8+188]
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 Move X0, X19
	048 Move X2, X31
	049 Call Material.SetFloat, X0, X1, V0
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Void AddMaskingMaterial(UnityEngine.Material baseMaterial, UnityEngine.Material stencilMaterial, System.Int32 stencilID)

Disassembly:
	0x03B0FE94 B.EQ 0x3B0FEB4
	0x03B0FE98 SUBS X9, X9, 0x1
	0x03B0FE9C ADD X10, X10, 0x10
	0x03B0FEA0 B.NE 0x3B0FE8C
	0x03B0FEA4 MOV X0, X20
	0x03B0FEA8 MOV W2, W31
	0x03B0FEAC BL 0x1C5C788
	0x03B0FEB0 B 0x3B0FEC0
	0x03B0FEB4 LDRSW X9, [X10]
	0x03B0FEB8 ADD X8, X8, X9, 0x4, LSL
	0x03B0FEBC ADD X0, X8, 0x138
	0x03B0FEC0 LDP X8, X2, [X0]
	0x03B0FEC4 MOV X0, X20
	0x03B0FEC8 MOV X1, X21
	0x03B0FECC BLR X8
	0x03B0FED0 LDR W8, [X19 + 0x18]
	0x03B0FED4 ADD W22, W22, 0x1
	0x03B0FED8 MOV X21, X0
	0x03B0FEDC CMP W22, W8
	0x03B0FEE0 B.LT 0x3B0FE5C
	0x03B0FEE4 B 0x3B0FEEC
	0x03B0FEE8 MOV X21, X20
	0x03B0FEEC LDR X0, [X23]
	0x03B0FEF0 LDR W8, [X0 + 0xE0]
	0x03B0FEF4 CBNZ W8, 0x3B0FEFC
	0x03B0FEF8 BL 0x1C16DFC
	0x03B0FEFC ADRP X8, 0x64A000
	0x03B0FF00 LDR X8, [X8 + 0x730]
	0x03B0FF04 MOV X0, X19
	0x03B0FF08 LDR X1, [X8]
	0x03B0FF0C BL 0x266FFD4
	0x03B0FF10 MOV X0, X21
	0x03B0FF14 LDP X20, X19, [X31 + 0x30]
	0x03B0FF18 LDP X22, X21, [X31 + 0x20]
	0x03B0FF1C LDP X24, X23, [X31 + 0x10]
	0x03B0FF20 LDP X30, X25, [X31], #0x40
	0x03B0FF24 RET
	0x03B0FF28 BL 0x1C16F20
	0x03B0FF2C SUB X31, X31, 0x50
	0x03B0FF30 STP X30, X25, [X31 + 0x10]
	0x03B0FF34 STP X24, X23, [X31 + 0x20]
	0x03B0FF38 STP X22, X21, [X31 + 0x30]
	0x03B0FF3C STP X20, X19, [X31 + 0x40]
	0x03B0FF40 ADRP X22, 0x8D3000
	0x03B0FF44 LDRB W8, [X22 + 0x681]
	0x03B0FF48 MOV W21, W2
	0x03B0FF4C MOV X19, X1
	0x03B0FF50 MOV X20, X0
	0x03B0FF54 TBNZ X8, 0x0, 0x3B0FFB4
	0x03B0FF58 ADRP X0, 0x64A000
	0x03B0FF5C LDR X0, [X0 + 0x740]
	0x03B0FF60 BL 0x1C16CF4
	0x03B0FF64 ADRP X0, 0x64A000
	0x03B0FF68 LDR X0, [X0 + 0x748]
	0x03B0FF6C BL 0x1C16CF4
	0x03B0FF70 ADRP X0, 0x64A000
	0x03B0FF74 LDR X0, [X0 + 0x750]
	0x03B0FF78 BL 0x1C16CF4
	0x03B0FF7C ADRP X0, 0x64A000
	0x03B0FF80 LDR X0, [X0 + 0x758]
	0x03B0FF84 BL 0x1C16CF4
	0x03B0FF88 ADRP X0, 0x5E8000
	0x03B0FF8C LDR X0, [X0 + 0xCA0]
	0x03B0FF90 BL 0x1C16CF4
	0x03B0FF94 ADRP X0, 0x649000
	0x03B0FF98 LDR X0, [X0 + 0x338]
	0x03B0FF9C BL 0x1C16CF4
	0x03B0FFA0 ADRP X0, 0x649000
	0x03B0FFA4 LDR X0, [X0 + 0x620]
	0x03B0FFA8 BL 0x1C16CF4
	0x03B0FFAC MOVZ W8, 0x1
	0x03B0FFB0 STRB W8, [X22 + 0x681]
	0x03B0FFB4 STR X31, [X31 + 0x8]
	0x03B0FFB8 CBZ X19, 0x3B101F4
	0x03B0FFBC MOV X0, X19
	0x03B0FFC0 MOV X1, X31
	0x03B0FFC4 BL 0x3C385F8
	0x03B0FFC8 CBZ X20, 0x3B101F4
	0x03B0FFCC MOV W24, W0
	0x03B0FFD0 MOV X0, X20
	0x03B0FFD4 MOV X1, X31
	0x03B0FFD8 BL 0x3AE1D84
	0x03B0FFDC CBZ X0, 0x3B101F4
	0x03B0FFE0 LDR W8, [X0 + 0x18]
	0x03B0FFE4 CMP W8, W21
	0x03B0FFE8 B.LS 0x3B101F8
	0x03B0FFEC ADD X8, X0, W21, 0x3, SXTW
	0x03B0FFF0 LDR X23, [X8 + 0x20]
	0x03B0FFF4 CBZ X23, 0x3B101F4
	0x03B0FFF8 ADRP X25, 0x649000
	0x03B0FFFC LDR X25, [X25 + 0x620]
	0x03B10000 MOV X0, X23
	0x03B10004 MOV X1, X31
	0x03B10008 BL 0x3C385F8
	0x03B1000C LDR X8, [X25]
	0x03B10010 MOV W21, W0
	0x03B10014 LDR W9, [X8 + 0xE0]
	0x03B10018 CBNZ W9, 0x3B10028
	0x03B1001C MOV X0, X8
	0x03B10020 BL 0x1C16DFC
	0x03B10024 LDR X8, [X25]
	0x03B10028 LDR X8, [X8 + 0xB8]
	0x03B1002C LDR X0, [X8 + 0x8]
	0x03B10030 CBZ X0, 0x3B101F4
	0x03B10034 ADRP X8, 0x649000
	0x03B10038 LDR X8, [X8 + 0x750]
	0x03B1003C MOV W22, W21
	0x03B10040 BFM X22, X24, 0x20, 0x1F
	0x03B10044 ADD X2, X31, 0x8
	0x03B10048 LDR X3, [X8]
	0x03B1004C MOV X1, X22
	0x03B10050 BL 0x2A4FD38
	0x03B10054 TBZ X0, 0x0, 0x3B100B0
	0x03B10058 MOV X0, X19
	0x03B1005C MOV X1, X31
	0x03B10060 BL 0x3C15314
	0x03B10064 LDR X8, [X31 + 0x8]
	0x03B10068 CBZ X8, 0x3B101F4
	0x03B1006C LDR W9, [X8 + 0x20]
	0x03B10070 LDR X21, [X8 + 0x28]
	0x03B10074 MOV W20, W0
	0x03B10078 CMP W0, W9
	0x03B1007C B.EQ 0x3B101D8
	0x03B10080 LDR X0, [X25]
	0x03B10084 LDR W8, [X0 + 0xE0]
	0x03B10088 CBNZ W8, 0x3B10090
	0x03B1008C BL 0x1C16DFC
	0x03B10090 MOV X0, X19
	0x03B10094 MOV X1, X21
	0x03B10098 BL 0x3B101FC
	0x03B1009C LDR X8, [X31 + 0x8]
	0x03B100A0 CBZ X8, 0x3B101F4
	0x03B100A4 LDR X21, [X8 + 0x28]
	0x03B100A8 STR W20, [X8 + 0x20]
	0x03B100AC B 0x3B101D8
	0x03B100B0 ADRP X8, 0x5E7000
	0x03B100B4 LDR X8, [X8 + 0xCA0]
	0x03B100B8 LDR X0, [X8]
	0x03B100BC BL 0x1C16F10
	0x03B100C0 MOV X1, X19
	0x03B100C4 MOV X2, X31
	0x03B100C8 MOV X21, X0
	0x03B100CC BL 0x3C145DC
	0x03B100D0 ADRP X24, 0x648000
	0x03B100D4 LDR X24, [X24 + 0x338]
	0x03B100D8 LDR X0, [X24]
	0x03B100DC LDR W8, [X0 + 0xE0]
	0x03B100E0 CBNZ W8, 0x3B100E8
	0x03B100E4 BL 0x1C16DFC
	0x03B100E8 CBZ X21, 0x3B101F4
	0x03B100EC LDR X8, [X24]
	0x03B100F0 MOV X0, X21
	0x03B100F4 MOV X2, X23
	0x03B100F8 MOV X3, X31
	0x03B100FC LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x8D4000
	010 Move X23, 0x64B000
	011 Move W8, [X21+1658]
	012 Move X23, [X23+1632]
	013 Move W19, W2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x64B000
	021 Move X0, [X0+1128]
	022 Call 0x1C17CF4
	023 Move X0, 0x64B000
	024 Move X0, [X0+1608]
	025 Call 0x1C17CF4
	026 Move X0, 0x64B000
	027 Move X0, [X0+1144]
	028 Call 0x1C17CF4
	029 Move X0, 0x64B000
	030 Move X0, [X0+1152]
	031 Call 0x1C17CF4
	032 Move X0, 0x64B000
	033 Move X0, [X0+1616]
	034 Call 0x1C17CF4
	035 Move X0, 0x64A000
	036 Move X0, [X0+1568]
	037 Call 0x1C17CF4
	038 Move X0, 0x64B000
	039 Move X0, [X0+1640]
	040 Call 0x1C17CF4
	041 Move X0, 0x64B000
	042 Move X0, [X0+1632]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+1658], W8
	046 Move X0, [X23]
	047 Call 0x1C17F10
	048 Move X1, X31
	049 Move X21, X0
	050 Call Object..ctor, X0
	051 Compare X21, 0
	052 JumpIfEqual {181}
	053 Move X24, 0x64A000
	054 Move X24, [X24+1568]
	055 Move [X21+16], X22
	056 Move X25, 0x64B000
	057 Move X23, 0x64B000
	058 Move X0, [X24]
	059 Move W8, [X0+224]
	060 Move X25, [X25+1616]
	061 Move X23, [X23+1640]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X24]
	066 Move X8, [X0+184]
	067 Move X0, [X25]
	068 Move X22, [X8]
	069 Call 0x1C17F10
	070 Move X2, [X23]
	071 Move X1, X21
	072 Move X3, X31
	073 Move X23, X0
	074 Call Predicate`1<Object>..ctor, X0, X1, X2
	075 Compare X22, 0
	076 JumpIfEqual {181}
	077 Move X8, 0x64B000
	078 Move X8, [X8+1608]
	079 Move X0, X22
	080 Move X1, X23
	081 Move X2, [X8]
	082 Call List`1<Object>.FindIndex, X0, X1
	083 Add W31, W0, 1
	084 Move W22, W0
	085 Move X0, [X24]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X24]
	091 Move X8, [X0+184]
	092 Move X0, [X8]
	093 Compare X0, 0
	094 JumpIfEqual {181}
	095 Move X19, 0x64B000
	096 Move X19, [X19+1144]
	097 Move W1, W22
	098 Move X2, [X19]
	099 Call List`1<Object>.get_Item, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {181}
	102 Move X8, [X0+24]
	103 Move [X21+16], X8
	104 Move X8, [X24]
	105 Move X8, [X8+184]
	106 Move X0, [X8]
	107 Compare X0, 0
	108 JumpIfEqual {181}
	109 Move X2, [X19]
	110 Move W1, W22
	111 Call List`1<Object>.get_Item, X0, X1
	112 Compare X0, 0
	113 JumpIfEqual {181}
	114 Move W8, [X0+32]
	115 Add W8, W8, 1
	116 Move [X0+32], W8
	117 Move X8, 0x64A000
	118 Move X8, [X8+1152]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X1, X31
	122 Move X22, X0
	123 Call Object..ctor, X0
	124 Compare X22, 0
	125 JumpIfEqual {181}
	126 Move [X22+16], X20
	127 Move X8, [X21+16]
	128 Move W9, 1
	129 Move [X22+32], W9
	130 Move [X22+36], W19
	131 Move [X22+24], X8
	132 Move X0, [X24]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X24]
	138 Move X8, [X0+184]
	139 Move X0, [X8]
	140 Compare X0, 0
	141 JumpIfEqual {181}
	142 Move X9, 0x64A000
	143 Move X9, [X9+1128]
	144 Move W10, [X0+28]
	145 Move X8, [X0+16]
	146 Move X9, [X9]
	147 Add W10, W10, 1
	148 Move [X0+28], W10
	149 Compare X8, 0
	150 JumpIfEqual {181}
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Move W11, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W9, W10, 1
	155 Add X8, X8, X10
	156 Move [X0+24], W9
	157 Move [X8+32], X22
	158 Move X20, [X31+48]
	159 Move X19, [X31+56]
	160 Move X22, [X31+32]
	161 Move X21, [X31+40]
	162 Move X24, [X31+16]
	163 Move X23, [X31+24]
	164 Move X30, [X31+64]
	165 Move X25, [X31+72]
	166 Return 
	167 Move X8, [X9+32]
	168 Move X1, X22
	169 Move X20, [X31+48]
	170 Move X19, [X31+56]
	171 Move X22, [X31+32]
	172 Move X21, [X31+40]
	173 Move X8, [X8+192]
	174 Move X24, [X31+16]
	175 Move X23, [X31+24]
	176 Move X2, [X8+112]
	177 Move X30, [X31+64]
	178 Move X25, [X31+72]
	179 Call List`1<Object>.AddWithResize, X0, X1
	180 Return 
	181 Call 0x1C17F20

Method: System.Void RemoveStencilMaterial(UnityEngine.Material stencilMaterial)

Disassembly:
	0x03B10108 MOVZ W1, 0x3D
	0x03B1010C MOV X0, X21
	0x03B10110 MOV X2, X31
	0x03B10114 BL 0x3C396EC
	0x03B10118 ADRP X8, 0x649000
	0x03B1011C LDR X8, [X8 + 0x758]
	0x03B10120 LDR X0, [X8]
	0x03B10124 BL 0x1C16F10
	0x03B10128 MOV X1, X31
	0x03B1012C MOV X23, X0
	0x03B10130 BL 0x33BDD8C
	0x03B10134 STR X23, [X31 + 0x8]
	0x03B10138 CBZ X23, 0x3B101F4
	0x03B1013C STR X22, [X23 + 0x10]
	0x03B10140 LDR X8, [X20 + 0x20]
	0x03B10144 MOV X0, X19
	0x03B10148 MOV X1, X31
	0x03B1014C STR X8, [X23 + 0x18]
	0x03B10150 BL 0x3C15314
	0x03B10154 STR W0, [X23 + 0x20]
	0x03B10158 LDR X8, [X31 + 0x8]
	0x03B1015C CBZ X8, 0x3B101F4
	0x03B10160 STR X21, [X8 + 0x28]
	0x03B10164 STR W31, [X8 + 0x30]
	0x03B10168 LDR X0, [X25]
	0x03B1016C LDR W8, [X0 + 0xE0]
	0x03B10170 CBNZ W8, 0x3B1017C
	0x03B10174 BL 0x1C16DFC
	0x03B10178 LDR X0, [X25]
	0x03B1017C LDR X8, [X0 + 0xB8]
	0x03B10180 LDR X0, [X8 + 0x8]
	0x03B10184 CBZ X0, 0x3B101F4
	0x03B10188 ADRP X8, 0x649000
	0x03B1018C LDR X2, [X31 + 0x8]
	0x03B10190 LDR X8, [X8 + 0x740]
	0x03B10194 MOV X1, X22
	0x03B10198 LDR X3, [X8]
	0x03B1019C BL 0x2A4E330
	0x03B101A0 LDR X8, [X25]
	0x03B101A4 MOV X0, X21
	0x03B101A8 MOV X1, X31
	0x03B101AC LDR X8, [X8 + 0xB8]
	0x03B101B0 LDR X19, [X8 + 0x10]
	0x03B101B4 BL 0x3C385F8
	0x03B101B8 CBZ X19, 0x3B101F4
	0x03B101BC ADRP X8, 0x649000
	0x03B101C0 LDR X8, [X8 + 0x748]
	0x03B101C4 MOV W1, W0
	0x03B101C8 MOV X0, X19
	0x03B101CC MOV X2, X22
	0x03B101D0 LDR X3, [X8]
	0x03B101D4 BL 0x2A0D29C
	0x03B101D8 MOV X0, X21
	0x03B101DC LDP X20, X19, [X31 + 0x40]
	0x03B101E0 LDP X22, X21, [X31 + 0x30]
	0x03B101E4 LDP X24, X23, [X31 + 0x20]
	0x03B101E8 LDP X30, X25, [X31 + 0x10]
	0x03B101EC ADD X31, X31, 0x50
	0x03B101F0 RET
	0x03B101F4 BL 0x1C16F20
	0x03B101F8 BL 0x1C16F28
	0x03B101FC STR D12, [X31 - 0x50]!
	0x03B10200 STP D11, D10, [X31 + 0x8]
	0x03B10204 STP D9, D8, [X31 + 0x18]
	0x03B10208 STR X30, [X31 + 0x28]
	0x03B1020C STP X22, X21, [X31 + 0x30]
	0x03B10210 STP X20, X19, [X31 + 0x40]
	0x03B10214 ADRP X21, 0x8D2000
	0x03B10218 ADRP X22, 0x648000
	0x03B1021C LDRB W8, [X21 + 0x687]
	0x03B10220 LDR X22, [X22 + 0x338]
	0x03B10224 MOV X19, X1
	0x03B10228 MOV X20, X0
	0x03B1022C TBNZ X8, 0x0, 0x3B10244
	0x03B10230 ADRP X0, 0x648000
	0x03B10234 LDR X0, [X0 + 0x338]
	0x03B10238 BL 0x1C16CF4
	0x03B1023C MOVZ W8, 0x1
	0x03B10240 STRB W8, [X21 + 0x687]
	0x03B10244 LDR X0, [X22]
	0x03B10248 LDR W8, [X0 + 0xE0]
	0x03B1024C CBNZ W8, 0x3B10254
	0x03B10250 BL 0x1C16DFC
	0x03B10254 CBZ X20, 0x3B10464
	0x03B10258 LDR X8, [X22]
	0x03B1025C MOV X0, X20
	0x03B10260 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8D3000
	008 Move X21, 0x64A000
	009 Move W8, [X20+1659]
	010 Move X21, [X21+1648]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x64A000
	017 Move X0, [X0+1608]
	018 Call 0x1C17CF4
	019 Move X0, 0x64A000
	020 Move X0, [X0+1592]
	021 Call 0x1C17CF4
	022 Move X0, 0x64A000
	023 Move X0, [X0+1616]
	024 Call 0x1C17CF4
	025 Move X0, 0x649000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move X0, 0x64A000
	029 Move X0, [X0+1656]
	030 Call 0x1C17CF4
	031 Move X0, 0x64A000
	032 Move X0, [X0+1648]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+1659], W8
	036 Move X0, [X21]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X20, X0
	040 Call Object..ctor, X0
	041 Compare X20, 0
	042 JumpIfEqual {104}
	043 Move X22, 0x649000
	044 Move X22, [X22+1568]
	045 Move [X20+16], X19
	046 Move X23, 0x64A000
	047 Move X21, 0x64A000
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Move X23, [X23+1616]
	051 Move X21, [X21+1656]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X22]
	056 Move X8, [X0+184]
	057 Move X0, [X23]
	058 Move X19, [X8]
	059 Call 0x1C17F10
	060 Move X2, [X21]
	061 Move X1, X20
	062 Move X3, X31
	063 Move X21, X0
	064 Call Predicate`1<Object>..ctor, X0, X1, X2
	065 Compare X19, 0
	066 JumpIfEqual {104}
	067 Move X8, 0x64A000
	068 Move X8, [X8+1608]
	069 Move X0, X19
	070 Move X1, X21
	071 Move X2, [X8]
	072 Call List`1<Object>.FindIndex, X0, X1
	073 Add W31, W0, 1
	074 Move W19, W0
	075 Move X0, [X22]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X22]
	081 Move X8, [X0+184]
	082 Move X0, [X8]
	083 Compare X0, 0
	084 JumpIfEqual {104}
	085 Move X8, 0x64A000
	086 Move X8, [X8+1592]
	087 Move W1, W19
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X2, [X8]
	093 Move X30, [X31+48]
	094 Move X23, [X31+56]
	095 Call List`1<Object>.RemoveAt, X0, X1
	096 Return 
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Move X23, [X31+56]
	103 Return 
	104 Call 0x1C17F20

Method: System.Void ReleaseBaseMaterial(UnityEngine.Material baseMaterial)

Disassembly:
	0x03B1026C BL 0x3C14D08
	0x03B10270 TBZ X0, 0x0, 0x3B10448
	0x03B10274 LDR X0, [X22]
	0x03B10278 LDR W8, [X0 + 0xE0]
	0x03B1027C CBNZ W8, 0x3B10284
	0x03B10280 BL 0x1C16DFC
	0x03B10284 CBZ X19, 0x3B10464
	0x03B10288 LDR X8, [X22]
	0x03B1028C MOV X0, X19
	0x03B10290 MOV X2, X31
	0x03B10294 LDR X8, [X8 + 0xB8]
	0x03B10298 LDR W1, [X8 + 0x54]
	0x03B1029C BL 0x3C14D08
	0x03B102A0 TBZ X0, 0x0, 0x3B10448
	0x03B102A4 LDR X0, [X22]
	0x03B102A8 LDR W8, [X0 + 0xE0]
	0x03B102AC CBNZ W8, 0x3B102B8
	0x03B102B0 BL 0x1C16DFC
	0x03B102B4 LDR X0, [X22]
	0x03B102B8 LDR X8, [X0 + 0xB8]
	0x03B102BC MOV X0, X19
	0x03B102C0 MOV X2, X31
	0x03B102C4 LDR W1, [X8]
	0x03B102C8 BL 0x3C14AB8
	0x03B102CC LDR X8, [X22]
	0x03B102D0 MOV X21, X0
	0x03B102D4 MOV X0, X19
	0x03B102D8 MOV X2, X31
	0x03B102DC LDR X8, [X8 + 0xB8]
	0x03B102E0 LDR W1, [X8 + 0x54]
	0x03B102E4 BL 0x3C15F98
	0x03B102E8 LDR X8, [X22]
	0x03B102EC MOV X0, X19
	0x03B102F0 MOV X2, X31
	0x03B102F4 MOV V9.16B, V0.16B
	0x03B102F8 LDR X8, [X8 + 0xB8]
	0x03B102FC LDR W1, [X8 + 0x68]
	0x03B10300 BL 0x3C15F98
	0x03B10304 LDR X8, [X22]
	0x03B10308 MOV X0, X19
	0x03B1030C MOV X2, X31
	0x03B10310 MOV V10.16B, V0.16B
	0x03B10314 LDR X8, [X8 + 0xB8]
	0x03B10318 LDR W1, [X8 + 0x6C]
	0x03B1031C BL 0x3C15F98
	0x03B10320 LDR X8, [X22]
	0x03B10324 MOV X0, X19
	0x03B10328 MOV X2, X31
	0x03B1032C MOV V11.16B, V0.16B
	0x03B10330 LDR X8, [X8 + 0xB8]
	0x03B10334 LDR W1, [X8 + 0x30]
	0x03B10338 BL 0x3C15F98
	0x03B1033C LDR X8, [X22]
	0x03B10340 MOV X0, X19
	0x03B10344 MOV X2, X31
	0x03B10348 MOV V12.16B, V0.16B
	0x03B1034C LDR X8, [X8 + 0xB8]
	0x03B10350 LDR W1, [X8 + 0x34]
	0x03B10354 BL 0x3C15F98
	0x03B10358 MOV X0, X19
	0x03B1035C MOV X1, X20
	0x03B10360 MOV X2, X31
	0x03B10364 MOV V8.16B, V0.16B
	0x03B10368 BL 0x3C151D0
	0x03B1036C MOV X0, X20
	0x03B10370 MOV X1, X31
	0x03B10374 BL 0x3C15294
	0x03B10378 MOV X1, X0
	0x03B1037C MOV X0, X19
	0x03B10380 MOV X2, X31
	0x03B10384 BL 0x3C152D0
	0x03B10388 LDR X8, [X22]
	0x03B1038C MOV X0, X19
	0x03B10390 MOV X2, X21
	0x03B10394 MOV X3, X31
	0x03B10398 LDR X8, [X8 + 0xB8]
	0x03B1039C LDR W1, [X8]
	0x03B103A0 BL 0x3C14C34
	0x03B103A4 LDR X8, [X22]
	0x03B103A8 MOV X0, X19
	0x03B103AC MOV V0.16B, V9.16B
	0x03B103B0 MOV X2, X31
	0x03B103B4 LDR X8, [X8 + 0xB8]
	0x03B103B8 LDR W1, [X8 + 0x54]
	0x03B103BC BL 0x3C15CD8
	0x03B103C0 LDR X8, [X22]
	0x03B103C4 MOV X0, X19
	0x03B103C8 MOV V0.16B, V10.16B
	0x03B103CC MOV X2, X31
	0x03B103D0 LDR X8, [X8 + 0xB8]
	0x03B103D4 LDR W1, [X8 + 0x68]
	0x03B103D8 BL 0x3C15CD8
	0x03B103DC LDR X8, [X22]
	0x03B103E0 MOV X0, X19
	0x03B103E4 MOV V0.16B, V11.16B
	0x03B103E8 MOV X2, X31
	0x03B103EC LDR X8, [X8 + 0xB8]
	0x03B103F0 LDR W1, [X8 + 0x6C]
	0x03B103F4 BL 0x3C15CD8
	0x03B103F8 LDR X8, [X22]
	0x03B103FC MOV X0, X19
	0x03B10400 MOV V0.16B, V12.16B
	0x03B10404 MOV X2, X31
	0x03B10408 LDR X8, [X8 + 0xB8]
	0x03B1040C LDR W1, [X8 + 0x30]
	0x03B10410 BL 0x3C15CD8
	0x03B10414 LDR X8, [X22]
	0x03B10418 MOV X0, X19
	0x03B1041C MOV V0.16B, V8.16B
	0x03B10420 LDP X20, X19, [X31 + 0x40]
	0x03B10424 LDR X8, [X8 + 0xB8]
	0x03B10428 LDP X22, X21, [X31 + 0x30]
	0x03B1042C LDR X30, [X31 + 0x28]
	0x03B10430 LDP D9, D8, [X31 + 0x18]
	0x03B10434 LDR W1, [X8 + 0x34]
	0x03B10438 LDP D11, D10, [X31 + 0x8]
	0x03B1043C MOV X2, X31
	0x03B10440 LDR V12, [X31], #0x50
	0x03B10444 B 0x3C15CD8
	0x03B10448 LDP X20, X19, [X31 + 0x40]
	0x03B1044C LDP X22, X21, [X31 + 0x30]
	0x03B10450 LDR X30, [X31 + 0x28]
	0x03B10454 LDP D9, D8, [X31 + 0x18]
	0x03B10458 LDP D11, D10, [X31 + 0x8]
	0x03B1045C LDR V12, [X31], #0x50
	0x03B10460 RET
	0x03B10464 BL 0x1C16F20
	0x03B10468 MOV X1, X31
	0x03B1046C B 0x33BDD8C
	0x03B10470 SUB X31, X31, 0x50
	0x03B10474 STP X30, X25, [X31 + 0x10]
	0x03B10478 STP X24, X23, [X31 + 0x20]
	0x03B1047C STP X22, X21, [X31 + 0x30]
	0x03B10480 STP X20, X19, [X31 + 0x40]
	0x03B10484 ADRP X21, 0x8D2000
	0x03B10488 LDRB W8, [X21 + 0x682]
	0x03B1048C MOV X20, X1
	0x03B10490 MOV X19, X0
	0x03B10494 TBNZ X8, 0x0, 0x3B104F4
	0x03B10498 ADRP X0, 0x649000
	0x03B1049C LDR X0, [X0 + 0x740]
	0x03B104A0 BL 0x1C16CF4
	0x03B104A4 ADRP X0, 0x649000
	0x03B104A8 LDR X0, [X0 + 0x748]
	0x03B104AC BL 0x1C16CF4
	0x03B104B0 ADRP X0, 0x649000
	0x03B104B4 LDR X0, [X0 + 0x750]
	0x03B104B8 BL 0x1C16CF4
	0x03B104BC ADRP X0, 0x649000
	0x03B104C0 LDR X0, [X0 + 0x758]
	0x03B104C4 BL 0x1C16CF4
	0x03B104C8 ADRP X0, 0x5E7000
	0x03B104CC LDR X0, [X0 + 0xCA0]
	0x03B104D0 BL 0x1C16CF4
	0x03B104D4 ADRP X0, 0x648000
	0x03B104D8 LDR X0, [X0 + 0x338]
	0x03B104DC BL 0x1C16CF4
	0x03B104E0 ADRP X0, 0x648000
	0x03B104E4 LDR X0, [X0 + 0x620]
	0x03B104E8 BL 0x1C16CF4
	0x03B104EC MOVZ W8, 0x1
	0x03B104F0 STRB W8, [X21 + 0x682]
	0x03B104F4 STR X31, [X31 + 0x8]
	0x03B104F8 CBZ X19, 0x3B10890
	0x03B104FC ADRP X25, 0x648000
	0x03B10500 LDR X25, [X25 + 0x338]
	0x03B10504 MOV X0, X19
	0x03B10508 MOV X1, X31
	0x03B1050C BL 0x3C385F8
	0x03B10510 LDR X8, [X25]
	0x03B10514 MOV W22, W0
	0x03B10518 LDR W9, [X8 + 0xE0]
	0x03B1051C CBNZ W9, 0x3B10528
	0x03B10520 MOV X0, X8
	0x03B10524 BL 0x1C16DFC
	0x03B10528 CBZ X20, 0x3B10890
	0x03B1052C LDR X8, [X25]
	0x03B10530 MOV X0, X20
	0x03B10534 MOV X2, X31
	0x03B10538 LDR X8, [X8 + 0xB8]
	0x03B1053C LDR W1, [X8]
	0x03B10540 BL 0x3C14AB8
	0x03B10544 CBZ X0, 0x3B10890
	0x03B10548 ADRP X24, 0x648000
	0x03B1054C LDR X24, [X24 + 0x620]
	0x03B10550 MOV X1, X31
	0x03B10554 MOV X23, X0
	0x03B10558 BL 0x3C385F8
	0x03B1055C LDR X8, [X24]
	0x03B10560 MOV W21, W0
	0x03B10564 LDR W9, [X8 + 0xE0]
	0x03B10568 CBNZ W9, 0x3B10578
	0x03B1056C MOV X0, X8
	0x03B10570 BL 0x1C16DFC
	0x03B10574 LDR X8, [X24]
	0x03B10578 LDR X8, [X8 + 0xB8]
	0x03B1057C LDR X0, [X8 + 0x8]
	0x03B10580 CBZ X0, 0x3B10890
	0x03B10584 ADRP X8, 0x649000
	0x03B10588 LDR X8, [X8 + 0x750]
	0x03B1058C MOV W21, W21
	0x03B10590 BFM X21, X22, 0x20, 0x1F
	0x03B10594 ADD X2, X31, 0x8
	0x03B10598 LDR X3, [X8]
	0x03B1059C MOV X1, X21
	0x03B105A0 BL 0x2A4FD38
	0x03B105A4 TBZ X0, 0x0, 0x3B10600
	0x03B105A8 MOV X0, X19
	0x03B105AC MOV X1, X31
	0x03B105B0 BL 0x3C15314
	0x03B105B4 LDR X8, [X31 + 0x8]
	0x03B105B8 CBZ X8, 0x3B10890
	0x03B105BC LDR W9, [X8 + 0x20]
	0x03B105C0 LDR X22, [X8 + 0x28]
	0x03B105C4 MOV W20, W0
	0x03B105C8 CMP W0, W9
	0x03B105CC B.EQ 0x3B10874
	0x03B105D0 LDR X0, [X24]
	0x03B105D4 LDR W8, [X0 + 0xE0]
	0x03B105D8 CBNZ W8, 0x3B105E0
	0x03B105DC BL 0x1C16DFC
	0x03B105E0 MOV X0, X19
	0x03B105E4 MOV X1, X22
	0x03B105E8 BL 0x3B101FC
	0x03B105EC LDR X8, [X31 + 0x8]
	0x03B105F0 CBZ X8, 0x3B10890
	0x03B105F4 LDR X22, [X8 + 0x28]
	0x03B105F8 STR W20, [X8 + 0x20]
	0x03B105FC B 0x3B10874
	0x03B10600 LDR X0, [X25]
	0x03B10604 LDR W8, [X0 + 0xE0]
	0x03B10608 CBNZ W8, 0x3B10614
	0x03B1060C BL 0x1C16DFC
	0x03B10610 LDR X0, [X25]
	0x03B10614 LDR X8, [X0 + 0xB8]
	0x03B10618 MOV X0, X19
	0x03B1061C MOV X2, X31
	0x03B10620 LDR W1, [X8 + 0x54]
	0x03B10624 BL 0x3C14D08
	0x03B10628 TBZ X0, 0x0, 0x3B10798
	0x03B1062C LDR X0, [X25]
	0x03B10630 LDR W8, [X0 + 0xE0]
	0x03B10634 CBNZ W8, 0x3B10640
	0x03B10638 BL 0x1C16DFC
	0x03B1063C LDR X0, [X25]
	0x03B10640 LDR X8, [X0 + 0xB8]
	0x03B10644 MOV X0, X20
	0x03B10648 MOV X2, X31
	0x03B1064C LDR W1, [X8 + 0x54]
	0x03B10650 BL 0x3C14D08
	0x03B10654 TBZ X0, 0x0, 0x3B10798
	0x03B10658 ADRP X8, 0x5E7000
	0x03B1065C LDR X8, [X8 + 0xCA0]
	0x03B10660 LDR X0, [X8]
	0x03B10664 BL 0x1C16F10
	0x03B10668 MOV X1, X19
	0x03B1066C MOV X2, X31
	0x03B10670 MOV X22, X0
	0x03B10674 BL 0x3C145DC
	0x03B10678 CBZ X22, 0x3B10890
	0x03B1067C MOVZ W1, 0x3D
	0x03B10680 MOV X0, X22
	0x03B10684 MOV X2, X31
	0x03B10688 BL 0x3C396EC
	0x03B1068C LDR X0, [X25]
	0x03B10690 LDR W8, [X0 + 0xE0]
	0x03B10694 CBNZ W8, 0x3B106A0
	0x03B10698 BL 0x1C16DFC
	0x03B1069C LDR X0, [X25]
	0x03B106A0 LDR X8, [X0 + 0xB8]
	0x03B106A4 MOV X0, X22
	0x03B106A8 MOV X2, X23
	0x03B106AC MOV X3, X31
	0x03B106B0 LDR W1, [X8]
	0x03B106B4 BL 0x3C14C34
	0x03B106B8 LDR X8, [X25]
	0x03B106BC MOV X0, X20
	0x03B106C0 MOV X2, X31
	0x03B106C4 LDR X8, [X8 + 0xB8]
	0x03B106C8 LDR W23, [X8 + 0x54]
	0x03B106CC MOV W1, W23
	0x03B106D0 BL 0x3C15F98
	0x03B106D4 MOV X0, X22
	0x03B106D8 MOV W1, W23
	0x03B106DC MOV X2, X31
	0x03B106E0 BL 0x3C15CD8
	0x03B106E4 LDR X8, [X25]
	0x03B106E8 MOV X0, X20
	0x03B106EC MOV X2, X31
	0x03B106F0 LDR X8, [X8 + 0xB8]
	0x03B106F4 LDR W23, [X8 + 0x68]
	0x03B106F8 MOV W1, W23
	0x03B106FC BL 0x3C15F98

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8D3000
	009 Move X20, 0x64A000
	010 Move W8, [X21+1660]
	011 Move X20, [X20+1664]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {67}
	017 Move X0, 0x5E4000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x64A000
	021 Move X0, [X0+1608]
	022 Call 0x1C17CF4
	023 Move X0, 0x64A000
	024 Move X0, [X0+1592]
	025 Call 0x1C17CF4
	026 Move X0, 0x64A000
	027 Move X0, [X0+1144]
	028 Call 0x1C17CF4
	029 Move X0, 0x5E4000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x64A000
	033 Move X0, [X0+1616]
	034 Call 0x1C17CF4
	035 Move X0, 0x5E4000
	036 Move X0, [X0+2760]
	037 Call 0x1C17CF4
	038 Move X0, 0x649000
	039 Move X0, [X0+1568]
	040 Call 0x1C17CF4
	041 Move X0, 0x64A000
	042 Move X0, [X0+1672]
	043 Call 0x1C17CF4
	044 Move X0, 0x64A000
	045 Move X0, [X0+1664]
	046 Call 0x1C17CF4
	047 Move X0, 0x64A000
	048 Move X0, [X0+1680]
	049 Call 0x1C17CF4
	050 Move X0, 0x64A000
	051 Move X0, [X0+1688]
	052 Call 0x1C17CF4
	053 Move X0, 0x64A000
	054 Move X0, [X0+1696]
	055 Call 0x1C17CF4
	056 Move X0, 0x64A000
	057 Move X0, [X0+1704]
	058 Call 0x1C17CF4
	059 Move X0, 0x64A000
	060 Move X0, [X0+1712]
	061 Call 0x1C17CF4
	062 Move X0, 0x64A000
	063 Move X0, [X0+1720]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+1660], W8
	067 Move X0, [X20]
	068 Move [X31+12], W31
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X20, X0
	072 Call Object..ctor, X0
	073 Compare X20, 0
	074 JumpIfEqual {320}
	075 Move X22, 0x649000
	076 Move X22, [X22+1568]
	077 Move [X20+16], X19
	078 Move X23, 0x64A000
	079 Move X21, 0x64A000
	080 Move X0, [X22]
	081 Move W8, [X0+224]
	082 Move X23, [X23+1616]
	083 Move X21, [X21+1672]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X22]
	088 Move X8, [X0+184]
	089 Move X0, [X23]
	090 Move X19, [X8]
	091 Call 0x1C17F10
	092 Move X2, [X21]
	093 Move X1, X20
	094 Move X3, X31
	095 Move X21, X0
	096 Call Predicate`1<Object>..ctor, X0, X1, X2
	097 Compare X19, 0
	098 JumpIfEqual {320}
	099 Move X8, 0x64A000
	100 Move X8, [X8+1608]
	101 Move X0, X19
	102 Move X1, X21
	103 Move X2, [X8]
	104 Call List`1<Object>.FindIndex, X0, X1
	105 Add W31, W0, 1
	106 Move W19, W0
	107 Move X0, [X22]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X22]
	113 Move X8, [X0+184]
	114 Move X0, [X8]
	115 Compare X0, 0
	116 JumpIfEqual {320}
	117 Move X21, 0x64A000
	118 Move X21, [X21+1144]
	119 Move W1, W19
	120 Move X2, [X21]
	121 Call List`1<Object>.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {320}
	124 Move X8, X0
	125 Move X0, [X22]
	126 Move W20, [X8+32]
	127 Move W9, [X0+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X22]
	132 Move X8, [X0+184]
	133 Move X0, [X8]
	134 Compare X0, 0
	135 JumpIfEqual {320}
	136 Move X2, [X21]
	137 Move W1, W19
	138 Call List`1<Object>.get_Item, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {320}
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, [X0+24]
	143 Compare X0, 0
	144 JumpIfEqual {320}
	145 Move X1, X31
	146 Call Object.get_name, X0
	147 Move X8, [X22]
	148 Move X8, [X8+184]
	149 Move X8, [X8]
	150 Compare X8, 0
	151 JumpIfEqual {320}
	152 Move X2, [X21]
	153 Move X20, X0
	154 Move X0, X8
	155 Move W1, W19
	156 Call List`1<Object>.get_Item, X0, X1
	157 Compare X0, 0
	158 JumpIfEqual {320}
	159 Move X0, [X0+24]
	160 Compare X0, 0
	161 JumpIfEqual {320}
	162 Move X1, X31
	163 Call Object.GetInstanceID, X0
	164 Move [X31+12], W0
	165 Add X0, X31, 12
	166 Move X1, X31
	167 Call Int32.ToString, X0
	168 Move X8, 0x64A000
	169 Move X8, [X8+1688]
	170 Move X9, 0x64A000
	171 Move X9, [X9+1680]
	172 Move X3, X0
	173 Move X8, [X8]
	174 Move X1, X20
	175 Move X2, [X9]
	176 Move X4, X31
	177 Move X0, X8
	178 Call String.Concat, X0, X1, X2, X3
	179 Move X8, 0x5E4000
	180 Move X8, [X8+2600]
	181 Move X20, X0
	182 Move X8, [X8]
	183 Move W9, [X8+224]
	184 Compare W9, 0
	185 JumpIfNotEqual {188}
	186 Move X0, X8
	187 Call 0x1C17DFC
	188 Move X0, X20
	189 Move X1, X31
	190 Call Debug.Log, X0
	191 Move X8, [X22]
	192 Move X8, [X8+184]
	193 Move X0, [X8]
	194 Compare X0, 0
	195 JumpIfEqual {320}
	196 Move X2, [X21]
	197 Move W1, W19
	198 Call List`1<Object>.get_Item, X0, X1
	199 Compare X0, 0
	200 JumpIfEqual {320}
	201 Move X8, 0x5E4000
	202 Move X8, [X8+1432]
	203 Move X20, [X0+24]
	204 Move X8, [X8]
	205 Move W9, [X8+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {210}
	208 Move X0, X8
	209 Call 0x1C17DFC
	210 Move X0, X20
	211 Move X1, X31
	212 Call Object.DestroyImmediate, X0
	213 Move X8, [X22]
	214 Move X8, [X8+184]
	215 Move X0, [X8]
	216 Compare X0, 0
	217 JumpIfEqual {320}
	218 Move X8, 0x64A000
	219 Move X8, [X8+1592]
	220 Move W1, W19
	221 Move X2, [X8]
	222 Call List`1<Object>.RemoveAt, X0, X1
	223 Move X0, [X20+16]
	224 Compare X0, 0
	225 JumpIfEqual {320}
	226 Move X1, X31
	227 Call Object.get_name, X0
	228 Move X8, 0x64A000
	229 Move X8, [X8+1712]
	230 Move X1, X0
	231 Move X2, X31
	232 Move X8, [X8]
	233 Move X0, X8
	234 Call String.Concat, X0, X1
	235 Move W8, [X0+32]
	236 Move W1, 5
	237 Subtract W8, W8, 1
	238 Move [X0+32], W8
	239 Move X8, 0x5E4000
	240 Move X8, [X8+2760]
	241 Move X0, [X8]
	242 Call 0x1C17D6C
	243 Compare X0, 0
	244 JumpIfEqual {320}
	245 Move W8, [X0+24]
	246 Move X20, X0
	247 Compare W8, 0
	248 JumpIfEqual {321}
	249 Move X8, 0x64A000
	250 Move X8, [X8+1696]
	251 Move X8, [X8]
	252 Move [X20+32], X8
	253 Move X8, [X22]
	254 Move X8, [X8+184]
	255 Move X0, [X8]
	256 Compare X0, 0
	257 JumpIfEqual {320}
	258 Move X2, [X21]
	259 Move W1, W19
	260 Call List`1<Object>.get_Item, X0, X1
	261 Compare X0, 0
	262 JumpIfEqual {320}
	263 Move X0, [X0+24]
	264 Compare X0, 0
	265 JumpIfEqual {320}
	266 Move X1, X31
	267 Call Object.get_name, X0
	268 Move W8, [X20+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move [X20+40], X0
	272 Move X8, 0x64A000
	273 Move X8, [X8+1720]
	274 Move X8, [X8]
	275 Move [X20+48], X8
	276 Move X8, [X22]
	277 Move X8, [X8+184]
	278 Move X0, [X8]
	279 Compare X0, 0
	280 JumpIfEqual {320}
	281 Move X2, [X21]
	282 Move W1, W19
	283 Call List`1<Object>.get_Item, X0, X1
	284 Compare X0, 0
	285 JumpIfEqual {320}
	286 Add X0, X0, 32
	287 Move X1, X31
	288 Call Int32.ToString, X0
	289 Move W8, [X20+24]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move [X20+56], X0
	293 Move X8, 0x64A000
	294 Move X8, [X8+1704]
	295 Move X0, X20
	296 Move X1, X31
	297 Move X8, [X8]
	298 Move [X20+64], X8
	299 Call String.Concat, X0
	300 Move X8, 0x5E4000
	301 Move X8, [X8+2600]
	302 Move X19, X0
	303 Move X8, [X8]
	304 Move W9, [X8+224]
	305 Compare W9, 0
	306 JumpIfNotEqual {309}
	307 Move X0, X8
	308 Call 0x1C17DFC
	309 Move X0, X19
	310 Move X1, X31
	311 Call Debug.Log, X0
	312 Move X20, [X31+48]
	313 Move X19, [X31+56]
	314 Move X22, [X31+32]
	315 Move X21, [X31+40]
	316 Move X30, [X31+16]
	317 Move X23, [X31+24]
	318 Add X31, X31, 64
	319 Return 
	320 Call 0x1C17F20
	321 Call 0x1C17F28

Method: System.Void ClearMaterials()

Disassembly:
	0x03B10708 MOV X2, X31
	0x03B1070C BL 0x3C15CD8
	0x03B10710 LDR X8, [X25]
	0x03B10714 MOV X0, X20
	0x03B10718 MOV X2, X31
	0x03B1071C LDR X8, [X8 + 0xB8]
	0x03B10720 LDR W23, [X8 + 0x6C]
	0x03B10724 MOV W1, W23
	0x03B10728 BL 0x3C15F98
	0x03B1072C MOV X0, X22
	0x03B10730 MOV W1, W23
	0x03B10734 MOV X2, X31
	0x03B10738 BL 0x3C15CD8
	0x03B1073C LDR X8, [X25]
	0x03B10740 MOV X0, X20
	0x03B10744 MOV X2, X31
	0x03B10748 LDR X8, [X8 + 0xB8]
	0x03B1074C LDR W23, [X8 + 0x30]
	0x03B10750 MOV W1, W23
	0x03B10754 BL 0x3C15F98
	0x03B10758 MOV X0, X22
	0x03B1075C MOV W1, W23
	0x03B10760 MOV X2, X31
	0x03B10764 BL 0x3C15CD8
	0x03B10768 LDR X8, [X25]
	0x03B1076C MOV X0, X20
	0x03B10770 MOV X2, X31
	0x03B10774 LDR X8, [X8 + 0xB8]
	0x03B10778 LDR W23, [X8 + 0x34]
	0x03B1077C MOV W1, W23
	0x03B10780 BL 0x3C15F98
	0x03B10784 MOV X0, X22
	0x03B10788 MOV W1, W23
	0x03B1078C MOV X2, X31
	0x03B10790 BL 0x3C15CD8
	0x03B10794 B 0x3B107B8
	0x03B10798 ADRP X8, 0x5E7000
	0x03B1079C LDR X8, [X8 + 0xCA0]
	0x03B107A0 LDR X0, [X8]
	0x03B107A4 BL 0x1C16F10
	0x03B107A8 MOV X1, X20
	0x03B107AC MOV X2, X31
	0x03B107B0 MOV X22, X0
	0x03B107B4 BL 0x3C145DC
	0x03B107B8 ADRP X8, 0x649000
	0x03B107BC LDR X8, [X8 + 0x758]
	0x03B107C0 LDR X0, [X8]
	0x03B107C4 BL 0x1C16F10
	0x03B107C8 MOV X1, X31
	0x03B107CC MOV X20, X0
	0x03B107D0 BL 0x33BDD8C
	0x03B107D4 STR X20, [X31 + 0x8]
	0x03B107D8 CBZ X20, 0x3B10890
	0x03B107DC MOV X0, X19
	0x03B107E0 MOV X1, X31
	0x03B107E4 STP X21, X19, [X20 + 0x10]
	0x03B107E8 BL 0x3C15314
	0x03B107EC STR W0, [X20 + 0x20]
	0x03B107F0 LDR X8, [X31 + 0x8]
	0x03B107F4 CBZ X8, 0x3B10890
	0x03B107F8 STR X22, [X8 + 0x28]
	0x03B107FC STR W31, [X8 + 0x30]
	0x03B10800 LDR X0, [X24]
	0x03B10804 LDR W8, [X0 + 0xE0]
	0x03B10808 CBNZ W8, 0x3B10814
	0x03B1080C BL 0x1C16DFC
	0x03B10810 LDR X0, [X24]
	0x03B10814 LDR X8, [X0 + 0xB8]
	0x03B10818 LDR X0, [X8 + 0x8]
	0x03B1081C CBZ X0, 0x3B10890
	0x03B10820 ADRP X8, 0x649000
	0x03B10824 LDR X2, [X31 + 0x8]
	0x03B10828 LDR X8, [X8 + 0x740]
	0x03B1082C MOV X1, X21
	0x03B10830 LDR X3, [X8]
	0x03B10834 BL 0x2A4E330
	0x03B10838 CBZ X22, 0x3B10890
	0x03B1083C LDR X8, [X24]
	0x03B10840 MOV X0, X22
	0x03B10844 MOV X1, X31
	0x03B10848 LDR X8, [X8 + 0xB8]
	0x03B1084C LDR X19, [X8 + 0x10]
	0x03B10850 BL 0x3C385F8
	0x03B10854 CBZ X19, 0x3B10890
	0x03B10858 ADRP X8, 0x649000
	0x03B1085C LDR X8, [X8 + 0x748]
	0x03B10860 MOV W1, W0
	0x03B10864 MOV X0, X19
	0x03B10868 MOV X2, X21
	0x03B1086C LDR X3, [X8]
	0x03B10870 BL 0x2A0D29C
	0x03B10874 MOV X0, X22
	0x03B10878 LDP X20, X19, [X31 + 0x40]
	0x03B1087C LDP X22, X21, [X31 + 0x30]
	0x03B10880 LDP X24, X23, [X31 + 0x20]
	0x03B10884 LDP X30, X25, [X31 + 0x10]
	0x03B10888 ADD X31, X31, 0x50
	0x03B1088C RET
	0x03B10890 BL 0x1C16F20
	0x03B10894 SUB X31, X31, 0x30
	0x03B10898 STP X30, X21, [X31 + 0x10]
	0x03B1089C STP X20, X19, [X31 + 0x20]
	0x03B108A0 ADRP X21, 0x8D2000
	0x03B108A4 ADRP X20, 0x5E3000
	0x03B108A8 LDRB W8, [X21 + 0x683]
	0x03B108AC LDR X20, [X20 + 0x598]
	0x03B108B0 MOV X19, X0
	0x03B108B4 TBNZ X8, 0x0, 0x3B108F0
	0x03B108B8 ADRP X0, 0x649000
	0x03B108BC LDR X0, [X0 + 0x750]
	0x03B108C0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x8D3000
	008 Move X21, 0x649000
	009 Move W8, [X19+1661]
	010 Move X21, [X21+1568]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x5E4000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x64A000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move X0, 0x64A000
	022 Move X0, [X0+1136]
	023 Call 0x1C17CF4
	024 Move X0, 0x64A000
	025 Move X0, [X0+1144]
	026 Call 0x1C17CF4
	027 Move X0, 0x5E4000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x649000
	031 Move X0, [X0+1568]
	032 Call 0x1C17CF4
	033 Move X0, 0x64A000
	034 Move X0, [X0+1736]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1661], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {137}
	048 Move W8, [X8+24]
	049 Compare W8, 0
	050 JumpIfEqual {111}
	051 Move X22, 0x64A000
	052 Move X23, 0x5E4000
	053 Move X22, [X22+1144]
	054 Move X23, [X23+1432]
	055 Move W19, W31
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Move X8, [X0+184]
	062 Move X8, [X8]
	063 Compare X8, 0
	064 JumpIfEqual {137}
	065 Move W9, [X0+224]
	066 Move W20, [X8+24]
	067 Compare W9, 0
	068 JumpIfNotEqual {75}
	069 Call 0x1C17DFC
	070 Move X8, [X21]
	071 Move X8, [X8+184]
	072 Move X8, [X8]
	073 Compare X8, 0
	074 JumpIfEqual {137}
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X2, [X22]
	077 Move X0, X8
	078 Move W1, W19
	079 Call List`1<Object>.get_Item, X0, X1
	080 Compare X0, 0
	081 JumpIfEqual {137}
	082 Move X8, [X23]
	083 Move X20, [X0+24]
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move X1, X31
	091 Call Object.DestroyImmediate, X0
	092 Move X0, [X21]
	093 Add W19, W19, 1
	094 Move W2, [X8+24]
	095 Move W9, [X8+28]
	096 Add W9, W9, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X8+24], W31
	099 Move [X8+28], W9
	100 Move X0, [X8+16]
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move W1, W31
	106 Move X3, X31
	107 Move X30, [X31+48]
	108 Move X23, [X31+56]
	109 Call Array.Clear, X0, X1, X2
	110 Return 
	111 Move X8, 0x5E4000
	112 Move X8, [X8+2600]
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Move X8, 0x64A000
	119 Move X8, [X8+1736]
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X22, [X31+16]
	123 Move X21, [X31+24]
	124 Move X1, X31
	125 Move X0, [X8]
	126 Move X30, [X31+48]
	127 Move X23, [X31+56]
	128 Call Debug.Log, X0
	129 Return 
	130 Move X20, [X31+32]
	131 Move X19, [X31+40]
	132 Move X22, [X31+16]
	133 Move X21, [X31+24]
	134 Move X30, [X31+48]
	135 Move X23, [X31+56]
	136 Return 
	137 Call 0x1C17F20

Method: System.Int32 GetStencilID(UnityEngine.GameObject obj)

Disassembly:
	0x03B108C4 ADRP X0, 0x649000
	0x03B108C8 LDR X0, [X0 + 0x760]
	0x03B108CC BL 0x1C16CF4
	0x03B108D0 ADRP X0, 0x5E3000
	0x03B108D4 LDR X0, [X0 + 0x598]
	0x03B108D8 BL 0x1C16CF4
	0x03B108DC ADRP X0, 0x648000
	0x03B108E0 LDR X0, [X0 + 0x620]
	0x03B108E4 BL 0x1C16CF4
	0x03B108E8 MOVZ W8, 0x1
	0x03B108EC STRB W8, [X21 + 0x683]
	0x03B108F0 LDR X0, [X20]
	0x03B108F4 STP X31, X31, [X31]
	0x03B108F8 LDR W8, [X0 + 0xE0]
	0x03B108FC CBNZ W8, 0x3B10904
	0x03B10900 BL 0x1C16DFC
	0x03B10904 MOV X0, X19
	0x03B10908 MOV X1, X31
	0x03B1090C MOV X2, X31
	0x03B10910 BL 0x3C3883C
	0x03B10914 TBNZ X0, 0x0, 0x3B109C4
	0x03B10918 CBZ X19, 0x3B109D4
	0x03B1091C MOV X0, X19
	0x03B10920 MOV X1, X31
	0x03B10924 BL 0x3C385F8
	0x03B10928 ADRP X20, 0x648000
	0x03B1092C LDR X20, [X20 + 0x620]
	0x03B10930 MOV W19, W0
	0x03B10934 LDR X8, [X20]
	0x03B10938 LDR W9, [X8 + 0xE0]
	0x03B1093C CBNZ W9, 0x3B1094C
	0x03B10940 MOV X0, X8
	0x03B10944 BL 0x1C16DFC
	0x03B10948 LDR X8, [X20]
	0x03B1094C LDR X8, [X8 + 0xB8]
	0x03B10950 LDR X0, [X8 + 0x10]
	0x03B10954 CBZ X0, 0x3B109D4
	0x03B10958 ADRP X8, 0x649000
	0x03B1095C LDR X8, [X8 + 0x760]
	0x03B10960 ADD X2, X31, 0x8
	0x03B10964 MOV W1, W19
	0x03B10968 LDR X3, [X8]
	0x03B1096C BL 0x2A0EC70
	0x03B10970 TBZ X0, 0x0, 0x3B109C4
	0x03B10974 LDR X0, [X20]
	0x03B10978 LDR W8, [X0 + 0xE0]
	0x03B1097C CBNZ W8, 0x3B10988
	0x03B10980 BL 0x1C16DFC
	0x03B10984 LDR X0, [X20]
	0x03B10988 LDR X8, [X0 + 0xB8]
	0x03B1098C LDR X0, [X8 + 0x8]
	0x03B10990 CBZ X0, 0x3B109D4
	0x03B10994 ADRP X8, 0x649000
	0x03B10998 LDR X1, [X31 + 0x8]
	0x03B1099C LDR X8, [X8 + 0x750]
	0x03B109A0 ADD X2, X31, 0x0
	0x03B109A4 LDR X3, [X8]
	0x03B109A8 BL 0x2A4FD38
	0x03B109AC TBZ X0, 0x0, 0x3B109C4
	0x03B109B0 LDR X8, [X31]
	0x03B109B4 CBZ X8, 0x3B109D4
	0x03B109B8 LDR W9, [X8 + 0x30]
	0x03B109BC ADD W9, W9, 0x1
	0x03B109C0 STR W9, [X8 + 0x30]
	0x03B109C4 LDP X20, X19, [X31 + 0x20]
	0x03B109C8 LDP X30, X21, [X31 + 0x10]
	0x03B109CC ADD X31, X31, 0x30
	0x03B109D0 RET
	0x03B109D4 BL 0x1C16F20
	0x03B109D8 SUB X31, X31, 0x30
	0x03B109DC STP X30, X21, [X31 + 0x10]
	0x03B109E0 STP X20, X19, [X31 + 0x20]
	0x03B109E4 ADRP X21, 0x8D2000
	0x03B109E8 ADRP X20, 0x5E3000
	0x03B109EC LDRB W8, [X21 + 0x684]
	0x03B109F0 LDR X20, [X20 + 0x598]
	0x03B109F4 MOV X19, X0
	0x03B109F8 TBNZ X8, 0x0, 0x3B10A40
	0x03B109FC ADRP X0, 0x649000
	0x03B10A00 LDR X0, [X0 + 0x750]
	0x03B10A04 BL 0x1C16CF4
	0x03B10A08 ADRP X0, 0x649000
	0x03B10A0C LDR X0, [X0 + 0x760]
	0x03B10A10 BL 0x1C16CF4
	0x03B10A14 ADRP X0, 0x649000
	0x03B10A18 LDR X0, [X0 + 0x768]
	0x03B10A1C BL 0x1C16CF4
	0x03B10A20 ADRP X0, 0x5E3000
	0x03B10A24 LDR X0, [X0 + 0x598]
	0x03B10A28 BL 0x1C16CF4
	0x03B10A2C ADRP X0, 0x648000
	0x03B10A30 LDR X0, [X0 + 0x620]
	0x03B10A34 BL 0x1C16CF4
	0x03B10A38 MOVZ W8, 0x1
	0x03B10A3C STRB W8, [X21 + 0x684]
	0x03B10A40 LDR X0, [X20]
	0x03B10A44 STP X31, X31, [X31]
	0x03B10A48 LDR W8, [X0 + 0xE0]
	0x03B10A4C CBNZ W8, 0x3B10A54
	0x03B10A50 BL 0x1C16DFC
	0x03B10A54 MOV X0, X19
	0x03B10A58 MOV X1, X31
	0x03B10A5C MOV X2, X31
	0x03B10A60 BL 0x3C3883C
	0x03B10A64 TBNZ X0, 0x0, 0x3B10B94
	0x03B10A68 CBZ X19, 0x3B10BA4
	0x03B10A6C MOV X0, X19
	0x03B10A70 MOV X1, X31
	0x03B10A74 BL 0x3C385F8
	0x03B10A78 ADRP X20, 0x648000
	0x03B10A7C LDR X20, [X20 + 0x620]
	0x03B10A80 MOV W19, W0
	0x03B10A84 LDR X8, [X20]
	0x03B10A88 LDR W9, [X8 + 0xE0]
	0x03B10A8C CBNZ W9, 0x3B10A9C
	0x03B10A90 MOV X0, X8
	0x03B10A94 BL 0x1C16DFC
	0x03B10A98 LDR X8, [X20]
	0x03B10A9C LDR X8, [X8 + 0xB8]
	0x03B10AA0 LDR X0, [X8 + 0x10]
	0x03B10AA4 CBZ X0, 0x3B10BA4
	0x03B10AA8 ADRP X8, 0x649000
	0x03B10AAC LDR X8, [X8 + 0x760]
	0x03B10AB0 ADD X2, X31, 0x8
	0x03B10AB4 MOV W1, W19
	0x03B10AB8 LDR X3, [X8]
	0x03B10ABC BL 0x2A0EC70
	0x03B10AC0 TBZ X0, 0x0, 0x3B10B94
	0x03B10AC4 LDR X0, [X20]
	0x03B10AC8 LDR W8, [X0 + 0xE0]
	0x03B10ACC CBNZ W8, 0x3B10AD8
	0x03B10AD0 BL 0x1C16DFC
	0x03B10AD4 LDR X0, [X20]
	0x03B10AD8 LDR X8, [X0 + 0xB8]
	0x03B10ADC LDR X0, [X8 + 0x8]
	0x03B10AE0 CBZ X0, 0x3B10BA4
	0x03B10AE4 ADRP X8, 0x649000
	0x03B10AE8 LDR X1, [X31 + 0x8]
	0x03B10AEC LDR X8, [X8 + 0x750]
	0x03B10AF0 ADD X2, X31, 0x0
	0x03B10AF4 LDR X3, [X8]
	0x03B10AF8 BL 0x2A4FD38
	0x03B10AFC TBZ X0, 0x0, 0x3B10B94
	0x03B10B00 LDR X8, [X31]
	0x03B10B04 CBZ X8, 0x3B10BA4
	0x03B10B08 LDR W9, [X8 + 0x30]
	0x03B10B0C SUB W9, W9, 0x1
	0x03B10B10 CMP W9, 0x0
	0x03B10B14 STR W9, [X8 + 0x30]
	0x03B10B18 B.GT 0x3B10B94
	0x03B10B1C LDR X0, [X20]
	0x03B10B20 LDR W8, [X0 + 0xE0]
	0x03B10B24 CBNZ W8, 0x3B10B30
	0x03B10B28 BL 0x1C16DFC
	0x03B10B2C LDR X0, [X20]
	0x03B10B30 LDR X8, [X0 + 0xB8]
	0x03B10B34 LDR X0, [X8 + 0x18]
	0x03B10B38 CBZ X0, 0x3B10BA4
	0x03B10B3C ADRP X9, 0x649000
	0x03B10B40 LDR X1, [X31]
	0x03B10B44 LDR X9, [X9 + 0x768]
	0x03B10B48 LDR W10, [X0 + 0x1C]
	0x03B10B4C LDR X8, [X0 + 0x10]
	0x03B10B50 LDR X9, [X9]
	0x03B10B54 ADD W10, W10, 0x1
	0x03B10B58 STR W10, [X0 + 0x1C]
	0x03B10B5C CBZ X8, 0x3B10BA4
	0x03B10B60 LDRSW X10, [X0 + 0x18]
	0x03B10B64 LDR W11, [X8 + 0x18]
	0x03B10B68 CMP W10, W11
	0x03B10B6C B.CS 0x3B10B84
	0x03B10B70 ADD W9, W10, 0x1
	0x03B10B74 ADD X8, X8, X10, 0x3, LSL
	0x03B10B78 STR W9, [X0 + 0x18]
	0x03B10B7C STR X1, [X8 + 0x20]
	0x03B10B80 B 0x3B10B94
	0x03B10B84 LDR X8, [X9 + 0x20]
	0x03B10B88 LDR X8, [X8 + 0xC0]
	0x03B10B8C LDR X2, [X8 + 0x70]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x8D3000
	013 Move W8, [X20+1662]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x64A000
	020 Move X0, [X0+1744]
	021 Call 0x1C17CF4
	022 Move X0, 0x64A000
	023 Move X0, [X0+1752]
	024 Call 0x1C17CF4
	025 Move X0, 0x64A000
	026 Move X0, [X0+1760]
	027 Call 0x1C17CF4
	028 Move X0, 0x5E4000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x64A000
	032 Move X0, [X0+1768]
	033 Call 0x1C17CF4
	034 Move X0, 0x64A000
	035 Move X0, [X0+1776]
	036 Call 0x1C17CF4
	037 Move X0, 0x64A000
	038 Move X0, [X0+1784]
	039 Call 0x1C17CF4
	040 Move X0, 0x649000
	041 Move X0, [X0+1568]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+1662], W8
	045 Compare X19, 0
	046 JumpIfEqual {223}
	047 Move X20, 0x649000
	048 Move X24, 0x5E4000
	049 Move X20, [X20+1568]
	050 Move X24, [X24+1432]
	051 Move X0, X19
	052 Move X1, X31
	053 Call GameObject.get_transform, X0
	054 Move X8, [X20]
	055 Move X20, X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Call TMP_MaterialManager.FindRootSortOverrideCanvas, X0
	063 Move X8, [X24]
	064 Move X19, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X19
	072 Move X2, X31
	073 Call Object.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {79}
	078 Move W0, W31
	079 Compare X20, 0
	080 JumpIfEqual {223}
	081 Move X0, X20
	082 Move X1, X31
	083 Call Transform.get_parent, X0
	084 Move X25, 0x64A000
	085 Move X25, [X25+1784]
	086 Move X21, X0
	087 Move X8, [X25]
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X8, 0x64A000
	094 Move X8, [X8+1768]
	095 Move X0, [X8]
	096 Call 0x2670F3C
	097 Move X27, 0x64A000
	098 Move X28, 0x64A000
	099 Move X27, [X27+1744]
	100 Move X28, [X28+1760]
	101 Move X20, X0
	102 Move W26, W31
	103 Move X0, [X24]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X31
	110 Move X2, X31
	111 Call Object.op_Inequality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {191}
	116 Compare X21, 0
	117 JumpIfEqual {223}
	118 Move X2, [X27]
	119 Move X0, X21
	120 Move X1, X20
	121 Call 0x21A543C, X0, X1
	122 Compare X20, 0
	123 JumpIfEqual {223}
	124 Move W8, [X20+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W22, W31
	127 Move X2, [X28]
	128 Move X0, X20
	129 Move W1, W22
	130 Call List`1<Object>.get_Item, X0, X1
	131 Move X8, [X24]
	132 Move X23, X0
	133 Move W9, [X8+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X8
	137 Call 0x1C17DFC
	138 Move X0, X23
	139 Move X1, X31
	140 Move X2, X31
	141 Call Object.op_Inequality, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {170}
	146 Compare X23, 0
	147 JumpIfEqual {223}
	148 Move X8, [X23]
	149 Move X0, X23
	150 Move X9, [X8+616]
	151 Move X1, [X8+624]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {170}
	157 Move X0, X23
	158 Move X1, X31
	159 Call Mask.get_graphic, X0
	160 Compare X0, 0
	161 JumpIfEqual {223}
	162 Move X8, [X0]
	163 Move X9, [X8+456]
	164 Move X1, [X8+464]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {173}
	170 Move W8, [X20+24]
	171 Add W22, W22, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W26, W26, 1
	174 Move X0, [X24]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X21
	180 Move X1, X19
	181 Move X2, X31
	182 Call Object.op_Equality, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {191}
	187 Move X0, X21
	188 Move X1, X31
	189 Call Transform.get_parent, X0
	190 Move X21, X0
	191 Move X0, [X25]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X8, 0x64A000
	197 Move X8, [X8+1776]
	198 Move X0, X20
	199 Move X1, [X8]
	200 Call 0x2670FD4, X0
	201 Move TEMP, 0
	202 Not TEMP
	203 Move W8, TEMP
	204 NotImplemented "Instruction LSLV not yet implemented."
	205 Add W31, W8, 256
	206 Move TEMP, 255
	207 Not TEMP
	208 Move W9, TEMP
	209 NotImplemented "Instruction CSEL not yet implemented."
	210 NotImplemented "Instruction ORN not yet implemented."
	211 Move X20, [X31+80]
	212 Move X19, [X31+88]
	213 Move X22, [X31+64]
	214 Move X21, [X31+72]
	215 Move X24, [X31+48]
	216 Move X23, [X31+56]
	217 Move X26, [X31+32]
	218 Move X25, [X31+40]
	219 Move X28, [X31+16]
	220 Move X27, [X31+24]
	221 Move X30, [X31+96]
	222 Return X0
	223 Call 0x1C17F20

Method: UnityEngine.Material GetMaterialForRendering(UnityEngine.UI.MaskableGraphic graphic, UnityEngine.Material baseMaterial)

Disassembly:
	0x03B10D30 LDRSW X10, [X0 + 0x18]
	0x03B10D34 LDR W11, [X8 + 0x18]
	0x03B10D38 CMP W10, W11
	0x03B10D3C B.CS 0x3B10D54
	0x03B10D40 ADD W9, W10, 0x1
	0x03B10D44 ADD X8, X8, X10, 0x3, LSL
	0x03B10D48 STR W9, [X0 + 0x18]
	0x03B10D4C STR X1, [X8 + 0x20]
	0x03B10D50 B 0x3B10D64
	0x03B10D54 LDR X8, [X9 + 0x20]
	0x03B10D58 LDR X8, [X8 + 0xC0]
	0x03B10D5C LDR X2, [X8 + 0x70]
	0x03B10D60 BL 0x301BF90
	0x03B10D64 LDR X0, [X20]
	0x03B10D68 LDR W8, [X0 + 0xE0]
	0x03B10D6C CBNZ W8, 0x3B10D78
	0x03B10D70 BL 0x1C16DFC
	0x03B10D74 LDR X0, [X20]
	0x03B10D78 LDR X8, [X0 + 0xB8]
	0x03B10D7C MOVZ W9, 0x1
	0x03B10D80 STRB W9, [X8 + 0x20]
	0x03B10D84 LDP X20, X19, [X31 + 0x20]
	0x03B10D88 LDP X30, X21, [X31 + 0x10]
	0x03B10D8C ADD X31, X31, 0x30
	0x03B10D90 RET
	0x03B10D94 BL 0x1C16F20
	0x03B10D98 STP X30, X21, [X31 - 0x20]!
	0x03B10D9C STP X20, X19, [X31 + 0x10]
	0x03B10DA0 ADRP X21, 0x8D2000
	0x03B10DA4 LDRB W8, [X21 + 0x688]
	0x03B10DA8 MOV X19, X1
	0x03B10DAC MOV X20, X0
	0x03B10DB0 TBNZ X8, 0x0, 0x3B10DC8
	0x03B10DB4 ADRP X0, 0x5E3000
	0x03B10DB8 LDR X0, [X0 + 0x598]
	0x03B10DBC BL 0x1C16CF4
	0x03B10DC0 MOVZ W8, 0x1
	0x03B10DC4 STRB W8, [X21 + 0x688]
	0x03B10DC8 CBZ X19, 0x3B10E04
	0x03B10DCC ADRP X8, 0x5E3000
	0x03B10DD0 LDR X8, [X8 + 0x598]
	0x03B10DD4 LDR X19, [X19 + 0x18]
	0x03B10DD8 LDR X20, [X20 + 0x10]
	0x03B10DDC LDR X0, [X8]
	0x03B10DE0 LDR W8, [X0 + 0xE0]
	0x03B10DE4 CBNZ W8, 0x3B10DEC
	0x03B10DE8 BL 0x1C16DFC
	0x03B10DEC MOV X0, X19
	0x03B10DF0 MOV X1, X20
	0x03B10DF4 LDP X20, X19, [X31 + 0x10]
	0x03B10DF8 MOV X2, X31
	0x03B10DFC LDP X30, X21, [X31], #0x20
	0x03B10E00 B 0x3C3883C
	0x03B10E04 BL 0x1C16F20
	0x03B10E08 STP X30, X21, [X31 - 0x20]!
	0x03B10E0C STP X20, X19, [X31 + 0x10]
	0x03B10E10 ADRP X21, 0x8D2000
	0x03B10E14 LDRB W8, [X21 + 0x689]
	0x03B10E18 MOV X19, X1
	0x03B10E1C MOV X20, X0
	0x03B10E20 TBNZ X8, 0x0, 0x3B10E38
	0x03B10E24 ADRP X0, 0x5E3000
	0x03B10E28 LDR X0, [X0 + 0x598]
	0x03B10E2C BL 0x1C16CF4
	0x03B10E30 MOVZ W8, 0x1
	0x03B10E34 STRB W8, [X21 + 0x689]
	0x03B10E38 CBZ X19, 0x3B10E74
	0x03B10E3C ADRP X8, 0x5E3000
	0x03B10E40 LDR X8, [X8 + 0x598]
	0x03B10E44 LDR X19, [X19 + 0x18]
	0x03B10E48 LDR X20, [X20 + 0x10]
	0x03B10E4C LDR X0, [X8]
	0x03B10E50 LDR W8, [X0 + 0xE0]
	0x03B10E54 CBNZ W8, 0x3B10E5C
	0x03B10E58 BL 0x1C16DFC
	0x03B10E5C MOV X0, X19
	0x03B10E60 MOV X1, X20
	0x03B10E64 LDP X20, X19, [X31 + 0x10]
	0x03B10E68 MOV X2, X31
	0x03B10E6C LDP X30, X21, [X31], #0x20
	0x03B10E70 B 0x3C3883C
	0x03B10E74 BL 0x1C16F20
	0x03B10E78 STP X30, X21, [X31 - 0x20]!
	0x03B10E7C STP X20, X19, [X31 + 0x10]
	0x03B10E80 ADRP X21, 0x8D2000
	0x03B10E84 LDRB W8, [X21 + 0x68A]
	0x03B10E88 MOV X19, X1
	0x03B10E8C MOV X20, X0
	0x03B10E90 TBNZ X8, 0x0, 0x3B10EA8
	0x03B10E94 ADRP X0, 0x5E3000
	0x03B10E98 LDR X0, [X0 + 0x598]
	0x03B10E9C BL 0x1C16CF4
	0x03B10EA0 MOVZ W8, 0x1
	0x03B10EA4 STRB W8, [X21 + 0x68A]
	0x03B10EA8 CBZ X19, 0x3B10EE4
	0x03B10EAC ADRP X8, 0x5E3000
	0x03B10EB0 LDR X8, [X8 + 0x598]
	0x03B10EB4 LDR X19, [X19 + 0x10]
	0x03B10EB8 LDR X20, [X20 + 0x10]
	0x03B10EBC LDR X0, [X8]
	0x03B10EC0 LDR W8, [X0 + 0xE0]
	0x03B10EC4 CBNZ W8, 0x3B10ECC
	0x03B10EC8 BL 0x1C16DFC
	0x03B10ECC MOV X0, X19
	0x03B10ED0 MOV X1, X20
	0x03B10ED4 LDP X20, X19, [X31 + 0x10]
	0x03B10ED8 MOV X2, X31
	0x03B10EDC LDP X30, X21, [X31], #0x20
	0x03B10EE0 B 0x3C3883C
	0x03B10EE4 BL 0x1C16F20
	0x03B10EE8 STP X30, X21, [X31 - 0x20]!
	0x03B10EEC STP X20, X19, [X31 + 0x10]
	0x03B10EF0 ADRP X21, 0x8D2000
	0x03B10EF4 LDRB W8, [X21 + 0x68B]
	0x03B10EF8 MOV X19, X1
	0x03B10EFC MOV X20, X0
	0x03B10F00 TBNZ X8, 0x0, 0x3B10F18
	0x03B10F04 ADRP X0, 0x5E3000
	0x03B10F08 LDR X0, [X0 + 0x598]
	0x03B10F0C BL 0x1C16CF4
	0x03B10F10 MOVZ W8, 0x1
	0x03B10F14 STRB W8, [X21 + 0x68B]
	0x03B10F18 CBZ X19, 0x3B10F54
	0x03B10F1C ADRP X8, 0x5E3000
	0x03B10F20 LDR X8, [X8 + 0x598]
	0x03B10F24 LDR X19, [X19 + 0x18]
	0x03B10F28 LDR X20, [X20 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x8D3000
	010 Move X21, 0x5E4000
	011 Move W8, [X19+1663]
	012 Move X21, [X21+1432]
	013 Move X20, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x64A000
	020 Move X0, [X0+1800]
	021 Call 0x1C17CF4
	022 Move X0, 0x64A000
	023 Move X0, [X0+1808]
	024 Call 0x1C17CF4
	025 Move X0, 0x64A000
	026 Move X0, [X0+1816]
	027 Call 0x1C17CF4
	028 Move X0, 0x64A000
	029 Move X0, [X0+1824]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E4000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x64A000
	035 Move X0, [X0+1832]
	036 Call 0x1C17CF4
	037 Move X0, 0x64A000
	038 Move X0, [X0+1840]
	039 Call 0x1C17CF4
	040 Move X0, 0x64A000
	041 Move X0, [X0+1848]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+1663], W8
	045 Move X0, [X21]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Equality, X0, X1
	054 Move X21, X31
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {133}
	059 Move X23, 0x64A000
	060 Move X23, [X23+1848]
	061 Move X19, 0x64A000
	062 Move X0, [X23]
	063 Move W8, [X0+224]
	064 Move X19, [X19+1832]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, [X19]
	069 Call 0x2670F3C
	070 Compare X22, 0
	071 JumpIfEqual {143}
	072 Move X8, 0x64A000
	073 Move X8, [X8+1800]
	074 Move X19, X0
	075 Move X0, X22
	076 Move X1, X19
	077 Move X2, [X8]
	078 Call 0x21A543C, X0, X1
	079 Compare X19, 0
	080 JumpIfEqual {143}
	081 Move W8, [X19+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X24, 0x64A000
	084 Move X25, 0x64A000
	085 Move X24, [X24+1824]
	086 Move X25, [X25+1808]
	087 Move W22, W31
	088 Move X21, X20
	089 Move X2, [X24]
	090 Move X0, X19
	091 Move W1, W22
	092 Call List`1<Object>.get_Item, X0, X1
	093 Compare X0, 0
	094 JumpIfEqual {143}
	095 Move X8, [X0]
	096 Move X1, [X25]
	097 Move X20, X0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X20
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X2, [X0+8]
	115 Move X0, X20
	116 Move X1, X21
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move W8, [X19+24]
	119 Add W22, W22, 1
	120 Move X21, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X21, X20
	123 Move X0, [X23]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X8, 0x64A000
	129 Move X8, [X8+1840]
	130 Move X0, X19
	131 Move X1, [X8]
	132 Call 0x2670FD4, X0
	133 Move X0, X21
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X30, [X31+64]
	141 Move X25, [X31+72]
	142 Return X0
	143 Call 0x1C17F20

Method: UnityEngine.Transform FindRootSortOverrideCanvas(UnityEngine.Transform start)

Disassembly:
	0x03B10B90 BL 0x301BF90
	0x03B10B94 LDP X20, X19, [X31 + 0x20]
	0x03B10B98 LDP X30, X21, [X31 + 0x10]
	0x03B10B9C ADD X31, X31, 0x30
	0x03B10BA0 RET
	0x03B10BA4 BL 0x1C16F20
	0x03B10BA8 SUB X31, X31, 0x30
	0x03B10BAC STP X30, X21, [X31 + 0x10]
	0x03B10BB0 STP X20, X19, [X31 + 0x20]
	0x03B10BB4 ADRP X21, 0x8D2000
	0x03B10BB8 ADRP X20, 0x5E3000
	0x03B10BBC LDRB W8, [X21 + 0x686]
	0x03B10BC0 LDR X20, [X20 + 0x598]
	0x03B10BC4 MOV X19, X0
	0x03B10BC8 TBNZ X8, 0x0, 0x3B10C10
	0x03B10BCC ADRP X0, 0x649000
	0x03B10BD0 LDR X0, [X0 + 0x750]
	0x03B10BD4 BL 0x1C16CF4
	0x03B10BD8 ADRP X0, 0x649000
	0x03B10BDC LDR X0, [X0 + 0x760]
	0x03B10BE0 BL 0x1C16CF4
	0x03B10BE4 ADRP X0, 0x649000
	0x03B10BE8 LDR X0, [X0 + 0x768]
	0x03B10BEC BL 0x1C16CF4
	0x03B10BF0 ADRP X0, 0x5E3000
	0x03B10BF4 LDR X0, [X0 + 0x598]
	0x03B10BF8 BL 0x1C16CF4
	0x03B10BFC ADRP X0, 0x648000
	0x03B10C00 LDR X0, [X0 + 0x620]
	0x03B10C04 BL 0x1C16CF4
	0x03B10C08 MOVZ W8, 0x1
	0x03B10C0C STRB W8, [X21 + 0x686]
	0x03B10C10 LDR X0, [X20]
	0x03B10C14 STP X31, X31, [X31]
	0x03B10C18 LDR W8, [X0 + 0xE0]
	0x03B10C1C CBNZ W8, 0x3B10C24
	0x03B10C20 BL 0x1C16DFC
	0x03B10C24 MOV X0, X19
	0x03B10C28 MOV X1, X31
	0x03B10C2C MOV X2, X31
	0x03B10C30 BL 0x3C3883C
	0x03B10C34 TBNZ X0, 0x0, 0x3B10D84
	0x03B10C38 CBZ X19, 0x3B10D94
	0x03B10C3C MOV X0, X19
	0x03B10C40 MOV X1, X31
	0x03B10C44 BL 0x3C385F8
	0x03B10C48 ADRP X20, 0x648000
	0x03B10C4C LDR X20, [X20 + 0x620]
	0x03B10C50 MOV W19, W0
	0x03B10C54 LDR X8, [X20]
	0x03B10C58 LDR W9, [X8 + 0xE0]
	0x03B10C5C CBNZ W9, 0x3B10C6C
	0x03B10C60 MOV X0, X8
	0x03B10C64 BL 0x1C16DFC
	0x03B10C68 LDR X8, [X20]
	0x03B10C6C LDR X8, [X8 + 0xB8]
	0x03B10C70 LDR X0, [X8 + 0x10]
	0x03B10C74 CBZ X0, 0x3B10D94
	0x03B10C78 ADRP X8, 0x649000
	0x03B10C7C LDR X8, [X8 + 0x760]
	0x03B10C80 ADD X2, X31, 0x8
	0x03B10C84 MOV W1, W19
	0x03B10C88 LDR X3, [X8]
	0x03B10C8C BL 0x2A0EC70
	0x03B10C90 TBZ X0, 0x0, 0x3B10D64
	0x03B10C94 LDR X0, [X20]
	0x03B10C98 LDR W8, [X0 + 0xE0]
	0x03B10C9C CBNZ W8, 0x3B10CA8
	0x03B10CA0 BL 0x1C16DFC
	0x03B10CA4 LDR X0, [X20]
	0x03B10CA8 LDR X8, [X0 + 0xB8]
	0x03B10CAC LDR X0, [X8 + 0x8]
	0x03B10CB0 CBZ X0, 0x3B10D94
	0x03B10CB4 ADRP X8, 0x649000
	0x03B10CB8 LDR X1, [X31 + 0x8]
	0x03B10CBC LDR X8, [X8 + 0x750]
	0x03B10CC0 ADD X2, X31, 0x0
	0x03B10CC4 LDR X3, [X8]
	0x03B10CC8 BL 0x2A4FD38
	0x03B10CCC TBZ X0, 0x0, 0x3B10D64
	0x03B10CD0 LDR X8, [X31]
	0x03B10CD4 CBZ X8, 0x3B10D94
	0x03B10CD8 LDR W9, [X8 + 0x30]
	0x03B10CDC SUB W9, W9, 0x1
	0x03B10CE0 CMP W9, 0x0
	0x03B10CE4 STR W9, [X8 + 0x30]
	0x03B10CE8 B.GT 0x3B10D64
	0x03B10CEC LDR X0, [X20]
	0x03B10CF0 LDR W8, [X0 + 0xE0]
	0x03B10CF4 CBNZ W8, 0x3B10D00
	0x03B10CF8 BL 0x1C16DFC
	0x03B10CFC LDR X0, [X20]
	0x03B10D00 LDR X8, [X0 + 0xB8]
	0x03B10D04 LDR X0, [X8 + 0x18]
	0x03B10D08 CBZ X0, 0x3B10D94
	0x03B10D0C ADRP X9, 0x649000
	0x03B10D10 LDR X1, [X31]
	0x03B10D14 LDR X9, [X9 + 0x768]
	0x03B10D18 LDR W10, [X0 + 0x1C]
	0x03B10D1C LDR X8, [X0 + 0x10]
	0x03B10D20 LDR X9, [X9]
	0x03B10D24 ADD W10, W10, 0x1
	0x03B10D28 STR W10, [X0 + 0x1C]
	0x03B10D2C CBZ X8, 0x3B10D94

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x8D3000
	008 Move X22, 0x649000
	009 Move W8, [X19+1664]
	010 Move X22, [X22+1888]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x64A000
	017 Move X0, [X0+1792]
	018 Call 0x1C17CF4
	019 Move X0, 0x649000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x649000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move X0, 0x5E4000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x649000
	029 Move X0, [X0+1920]
	030 Call 0x1C17CF4
	031 Move X0, 0x649000
	032 Move X0, [X0+1928]
	033 Call 0x1C17CF4
	034 Move X0, 0x649000
	035 Move X0, [X0+1888]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+1664], W8
	039 Move X0, [X22]
	040 Move X19, 0x649000
	041 Move W8, [X0+224]
	042 Move X19, [X19+1920]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X19]
	047 Call 0x2670F3C
	048 Compare X20, 0
	049 JumpIfEqual {127}
	050 Move X8, 0x64A000
	051 Move X8, [X8+1792]
	052 Move X19, X0
	053 Move X0, X20
	054 Move W1, W31
	055 Move X3, [X8]
	056 Move X2, X19
	057 Call 0x21A58CC, X0, X1, X2
	058 Compare X19, 0
	059 JumpIfEqual {127}
	060 Move W8, [X19+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X23, 0x649000
	063 Move X23, [X23+1912]
	064 Move W21, W31
	065 Move X2, [X23]
	066 Move X0, X19
	067 Move W1, W21
	068 Call List`1<Object>.get_Item, X0, X1
	069 Compare X0, 0
	070 JumpIfEqual {127}
	071 Move X1, X31
	072 Move X20, X0
	073 Call Canvas.get_overrideSorting, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {82}
	078 Move W8, [X19+24]
	079 Add W21, W21, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, X31
	082 Move X0, [X22]
	083 Move X22, 0x649000
	084 Move X21, 0x5E4000
	085 Move W8, [X0+224]
	086 Move X22, [X22+1928]
	087 Move X21, [X21+1432]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move X1, [X22]
	092 Move X0, X19
	093 Call 0x2670FD4, X0
	094 Move X0, [X21]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X20
	100 Move X1, X31
	101 Move X2, X31
	102 Call Object.op_Inequality, X0, X1
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {119}
	107 Compare X20, 0
	108 JumpIfEqual {127}
	109 Move X0, X20
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X1, X31
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Call Component.get_transform, X0
	118 Return X0
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X0, X31
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Return X0
	127 Call 0x1C17F20

Method: UnityEngine.Material GetFallbackMaterial(TMPro.TMP_FontAsset fontAsset, UnityEngine.Material sourceMaterial, System.Int32 atlasIndex)

Disassembly:
	0x03B10F2C LDR X0, [X8]
	0x03B10F30 LDR W8, [X0 + 0xE0]
	0x03B10F34 CBNZ W8, 0x3B10F3C
	0x03B10F38 BL 0x1C16DFC
	0x03B10F3C MOV X0, X19
	0x03B10F40 MOV X1, X20
	0x03B10F44 LDP X20, X19, [X31 + 0x10]
	0x03B10F48 MOV X2, X31
	0x03B10F4C LDP X30, X21, [X31], #0x20
	0x03B10F50 B 0x3C3883C
	0x03B10F54 BL 0x1C16F20
	0x03B10F58 SUB X31, X31, 0xB0
	0x03B10F5C STP X29, X30, [X31 + 0x50]
	0x03B10F60 STP X28, X27, [X31 + 0x60]
	0x03B10F64 STP X26, X25, [X31 + 0x70]
	0x03B10F68 STP X24, X23, [X31 + 0x80]
	0x03B10F6C STP X22, X21, [X31 + 0x90]
	0x03B10F70 STP X20, X19, [X31 + 0xA0]
	0x03B10F74 ADRP X22, 0x8D2000
	0x03B10F78 ADRP X23, 0x5E3000
	0x03B10F7C LDRB W8, [X22 + 0x68C]
	0x03B10F80 LDR X23, [X23 + 0x598]
	0x03B10F84 MOV W20, W2
	0x03B10F88 MOV X21, X1
	0x03B10F8C MOV X19, X0
	0x03B10F90 TBNZ X8, 0x0, 0x3B10FFC
	0x03B10F94 ADRP X0, 0x60F000
	0x03B10F98 LDR X0, [X0 + 0xAF8]
	0x03B10F9C BL 0x1C16CF4
	0x03B10FA0 ADRP X0, 0x5E4000
	0x03B10FA4 LDR X0, [X0 + 0xE58]
	0x03B10FA8 BL 0x1C16CF4
	0x03B10FAC ADRP X0, 0x5EA000
	0x03B10FB0 LDR X0, [X0 + 0x700]
	0x03B10FB4 BL 0x1C16CF4
	0x03B10FB8 ADRP X0, 0x5E3000
	0x03B10FBC LDR X0, [X0 + 0x598]
	0x03B10FC0 BL 0x1C16CF4
	0x03B10FC4 ADRP X0, 0x648000
	0x03B10FC8 LDR X0, [X0 + 0x348]
	0x03B10FCC BL 0x1C16CF4
	0x03B10FD0 ADRP X0, 0x63D000
	0x03B10FD4 LDR X0, [X0 + 0xA88]
	0x03B10FD8 BL 0x1C16CF4
	0x03B10FDC ADRP X0, 0x5E5000
	0x03B10FE0 LDR X0, [X0 + 0x9B0]
	0x03B10FE4 BL 0x1C16CF4
	0x03B10FE8 ADRP X0, 0x63E000
	0x03B10FEC LDR X0, [X0 + 0x48]
	0x03B10FF0 BL 0x1C16CF4
	0x03B10FF4 MOVZ W8, 0x1
	0x03B10FF8 STRB W8, [X22 + 0x68C]
	0x03B10FFC LDR X0, [X23]
	0x03B11000 LDR W8, [X0 + 0xE0]
	0x03B11004 CBNZ W8, 0x3B1100C
	0x03B11008 BL 0x1C16DFC
	0x03B1100C MOV X0, X21
	0x03B11010 MOV X1, X31
	0x03B11014 MOV X2, X31
	0x03B11018 BL 0x3C3883C
	0x03B1101C TBZ X0, 0x0, 0x3B11040
	0x03B11020 ADRP X8, 0x5E9000
	0x03B11024 LDR X8, [X8 + 0x700]
	0x03B11028 LDR X0, [X8]
	0x03B1102C BL 0x1C16F10
	0x03B11030 MOV X1, X31
	0x03B11034 MOV X21, X0
	0x03B11038 BL 0x3C17028
	0x03B1103C B 0x3B11050
	0x03B11040 CBZ X21, 0x3B11448
	0x03B11044 MOV X0, X21
	0x03B11048 MOV X1, X31
	0x03B1104C BL 0x3C19C94
	0x03B11050 ADRP X24, 0x5E4000
	0x03B11054 LDR X24, [X24 + 0x9B0]
	0x03B11058 ADRP X25, 0x63C000
	0x03B1105C ADRP X26, 0x60E000
	0x03B11060 ADRP X27, 0x63D000
	0x03B11064 ADRP X28, 0x5E3000
	0x03B11068 ADRP X23, 0x647000
	0x03B1106C LDR X25, [X25 + 0xA88]
	0x03B11070 LDR X26, [X26 + 0xAF8]
	0x03B11074 LDR X27, [X27 + 0x48]
	0x03B11078 LDR X28, [X28 + 0xE58]
	0x03B1107C LDR X23, [X23 + 0x348]
	0x03B11080 STR X21, [X19]
	0x03B11084 MOVZ W8, 0x3FFF
	0x03B11088 STR W31, [X19 + 0x8]
	0x03B1108C CMP W20, W8
	0x03B11090 LDR X0, [X24]
	0x03B11094 CSEL W8, W20, W8, LT
	0x03B11098 UBFM W21, W8, 0x1E, 0x1D
	0x03B1109C STR W8, [X31 + 0x4]
	0x03B110A0 ADD W8, W8, W8, 0x1, LSL
	0x03B110A4 MOV W1, W21
	0x03B110A8 UBFM W22, W8, 0x1F, 0x1E
	0x03B110AC BL 0x1C16D6C
	0x03B110B0 STR X0, [X19 + 0x10]
	0x03B110B4 LDR X0, [X25]
	0x03B110B8 MOV W1, W21
	0x03B110BC BL 0x1C16D6C
	0x03B110C0 STR X0, [X19 + 0x28]
	0x03B110C4 LDR X0, [X25]
	0x03B110C8 MOV W1, W21
	0x03B110CC BL 0x1C16D6C
	0x03B110D0 STR X0, [X19 + 0x30]
	0x03B110D4 LDR X0, [X26]
	0x03B110D8 MOV W1, W21
	0x03B110DC BL 0x1C16D6C
	0x03B110E0 STR X0, [X19 + 0x38]
	0x03B110E4 LDR X0, [X24]
	0x03B110E8 MOV W1, W21
	0x03B110EC BL 0x1C16D6C
	0x03B110F0 STR X0, [X19 + 0x18]
	0x03B110F4 LDR X0, [X27]
	0x03B110F8 MOV W1, W21
	0x03B110FC BL 0x1C16D6C
	0x03B11100 STR X0, [X19 + 0x20]
	0x03B11104 LDR X0, [X28]
	0x03B11108 MOV W1, W22
	0x03B1110C BL 0x1C16D6C
	0x03B11110 CMP W20, 0x1
	0x03B11114 STR X0, [X19 + 0x40]
	0x03B11118 B.LT 0x3B11380
	0x03B1111C ADRP X21, 0x5EA000
	0x03B11120 LDR X21, [X21 + 0xF08]
	0x03B11124 MOV X22, X31
	0x03B11128 MOV W13, W31
	0x03B1112C SXTW X8, W22
	0x03B11130 UBFM X9, X8, 0x3F, 0x3E
	0x03B11134 UBFM X10, X8, 0x3D, 0x3C
	0x03B11138 UBFM X11, X8, 0x3E, 0x3D
	0x03B1113C UBFM X8, X8, 0x3C, 0x3B
	0x03B11140 ADD X9, X9, W22, SXTW
	0x03B11144 STR X13, [X31 + 0x8]
	0x03B11148 MOV X29, X31
	0x03B1114C ADD X24, X10, 0x20
	0x03B11150 ADD X27, X11, 0x20
	0x03B11154 UBFM X25, X9, 0x3E, 0x3D
	0x03B11158 ADD X26, X8, 0x20
	0x03B1115C ADRP X8, 0x8C7000
	0x03B11160 LDRB W8, [X8 + 0x783]
	0x03B11164 LDR X20, [X19 + 0x10]
	0x03B11168 CBNZ W8, 0x3B11184
	0x03B1116C ADRP X0, 0x5E2000
	0x03B11170 LDR X0, [X0 + 0x5A0]
	0x03B11174 BL 0x1C16CF4
	0x03B11178 ADRP X8, 0x8C7000
	0x03B1117C MOVZ W9, 0x1
	0x03B11180 STRB W9, [X8 + 0x783]
	0x03B11184 CBZ X20, 0x3B11448
	0x03B11188 LDR W8, [X20 + 0x18]
	0x03B1118C ADD X28, X22, X29
	0x03B11190 CMP W28, W8
	0x03B11194 B.CS 0x3B11444
	0x03B11198 ADRP X8, 0x5E2000
	0x03B1119C LDR X8, [X8 + 0x5A0]
	0x03B111A0 LDR X8, [X8]
	0x03B111A4 LDR X8, [X8 + 0xB8]
	0x03B111A8 LDR V0, [X8]
	0x03B111AC LDR V1, [X8 + 0x8]
	0x03B111B0 ADD X8, X20, X25
	0x03B111B4 STR D0, [X8 + 0x20]
	0x03B111B8 STR S1, [X8 + 0x28]
	0x03B111BC ADRP X8, 0x8C8000
	0x03B111C0 LDRB W8, [X8 + 0x78F]
	0x03B111C4 LDR X20, [X19 + 0x28]
	0x03B111C8 CBNZ W8, 0x3B111E0
	0x03B111CC MOV X0, X21
	0x03B111D0 BL 0x1C16CF4
	0x03B111D4 MOVZ W8, 0x1
	0x03B111D8 ADRP X9, 0x8C8000
	0x03B111DC STRB W8, [X9 + 0x78F]
	0x03B111E0 CBZ X20, 0x3B11448
	0x03B111E4 LDR W8, [X20 + 0x18]
	0x03B111E8 CMP W28, W8
	0x03B111EC B.CS 0x3B11444
	0x03B111F0 LDR X8, [X21]
	0x03B111F4 LDR X8, [X8 + 0xB8]
	0x03B111F8 LDR V0, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x8D3000
	011 Move W8, [X22+1665]
	012 Move W21, W2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x64A000
	020 Move X0, [X0+1856]
	021 Call 0x1C17CF4
	022 Move X0, 0x64A000
	023 Move X0, [X0+1864]
	024 Call 0x1C17CF4
	025 Move X0, 0x64A000
	026 Move X0, [X0+1872]
	027 Call 0x1C17CF4
	028 Move X0, 0x64A000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0x5E8000
	032 Move X0, [X0+3232]
	033 Call 0x1C17CF4
	034 Move X0, 0x649000
	035 Move X0, [X0+824]
	036 Call 0x1C17CF4
	037 Move X0, 0x649000
	038 Move X0, [X0+1568]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+1665], W8
	042 Move [X31+8], X31
	043 Compare X19, 0
	044 JumpIfEqual {206}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Object.GetInstanceID, X0
	048 Compare X20, 0
	049 JumpIfEqual {206}
	050 Move W24, W0
	051 Move X0, X20
	052 Move X1, X31
	053 Call TMP_FontAsset.get_atlasTextures, X0
	054 Compare X0, 0
	055 JumpIfEqual {206}
	056 Move W8, [X0+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X0, W21
	059 Move X23, [X8+32]
	060 Compare X23, 0
	061 JumpIfEqual {206}
	062 Move X25, 0x649000
	063 Move X25, [X25+1568]
	064 Move X0, X23
	065 Move X1, X31
	066 Call Object.GetInstanceID, X0
	067 Move X8, [X25]
	068 Move W21, W0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {75}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X8, [X25]
	075 Move X8, [X8+184]
	076 Move X0, [X8+8]
	077 Compare X0, 0
	078 JumpIfEqual {206}
	079 Move X8, 0x649000
	080 Move X8, [X8+1872]
	081 Move W22, W21
	082 NotImplemented "Instruction BFM not yet implemented."
	083 Add X2, X31, 8
	084 Move X3, [X8]
	085 Move X1, X22
	086 Call Dictionary`2<Int64, Object>.TryGetValue, X0, X1, X2
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {114}
	091 Move X0, X19
	092 Move X1, X31
	093 Call Material.ComputeCRC, X0
	094 Move X8, [X31+8]
	095 Compare X8, 0
	096 JumpIfEqual {206}
	097 Move W9, [X8+32]
	098 Move X21, [X8+40]
	099 Move W20, W0
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, [X25]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X1, X21
	108 Call TMP_MaterialManager.CopyMaterialPresetProperties, X0, X1
	109 Move X8, [X31+8]
	110 Compare X8, 0
	111 JumpIfEqual {206}
	112 Move X21, [X8+40]
	113 Move [X8+32], W20
	114 Move X8, 0x5E7000
	115 Move X8, [X8+3232]
	116 Move X0, [X8]
	117 Call 0x1C17F10
	118 Move X1, X19
	119 Move X2, X31
	120 Move X21, X0
	121 Call Material..ctor, X0, X1
	122 Move X24, 0x648000
	123 Move X24, [X24+824]
	124 Move X0, [X24]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Compare X21, 0
	130 JumpIfEqual {206}
	131 Move X8, [X24]
	132 Move X0, X21
	133 Move X2, X23
	134 Move X3, X31
	135 Move X8, [X8+184]
	136 Move W1, [X8]
	137 Call Material.SetTexture, X0, X1, X2
	138 Move W1, 61
	139 Move X0, X21
	140 Move X2, X31
	141 Call Object.set_hideFlags, X0, X1
	142 Move X8, 0x649000
	143 Move X8, [X8+1880]
	144 Move X0, [X8]
	145 Call 0x1C17F10
	146 Move X1, X31
	147 Move X23, X0
	148 Call Object..ctor, X0
	149 Move [X31+8], X23
	150 Compare X23, 0
	151 JumpIfEqual {206}
	152 Move [X23+16], X22
	153 Move X8, [X20+32]
	154 Move X0, X19
	155 Move X1, X31
	156 Move [X23+24], X8
	157 Call Material.ComputeCRC, X0
	158 Move [X23+32], W0
	159 Move X8, [X31+8]
	160 Compare X8, 0
	161 JumpIfEqual {206}
	162 Move [X8+40], X21
	163 Move [X8+48], W31
	164 Move X0, [X25]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {170}
	168 Call 0x1C17DFC
	169 Move X0, [X25]
	170 Move X8, [X0+184]
	171 Move X0, [X8+8]
	172 Compare X0, 0
	173 JumpIfEqual {206}
	174 Move X8, 0x649000
	175 Move X2, [X31+8]
	176 Move X8, [X8+1856]
	177 Move X1, X22
	178 Move X3, [X8]
	179 Call Dictionary`2<Int64, Object>.Add, X0, X1, X2
	180 Move X8, [X25]
	181 Move X0, X21
	182 Move X1, X31
	183 Move X8, [X8+184]
	184 Move X19, [X8+16]
	185 Call Object.GetInstanceID, X0
	186 Compare X19, 0
	187 JumpIfEqual {206}
	188 Move X8, 0x649000
	189 Move X8, [X8+1864]
	190 Move W1, W0
	191 Move X0, X19
	192 Move X2, X22
	193 Move X3, [X8]
	194 Call Dictionary`2<Int32, Int64>.Add, X0, X1, X2
	195 Move X0, X21
	196 Move X20, [X31+64]
	197 Move X19, [X31+72]
	198 Move X22, [X31+48]
	199 Move X21, [X31+56]
	200 Move X24, [X31+32]
	201 Move X23, [X31+40]
	202 Move X30, [X31+16]
	203 Move X25, [X31+24]
	204 Add X31, X31, 80
	205 Return X0
	206 Call 0x1C17F20
	207 Call 0x1C17F28

Method: UnityEngine.Material GetFallbackMaterial(UnityEngine.Material sourceMaterial, UnityEngine.Material targetMaterial)

Disassembly:
	0x03B11470 ADRP X23, 0x5E2000
	0x03B11474 LDRB W8, [X20 + 0x68D]
	0x03B11478 LDR X23, [X23 + 0x598]
	0x03B1147C MOV W21, W2
	0x03B11480 MOV X22, X1
	0x03B11484 MOV X19, X0
	0x03B11488 TBNZ X8, 0x0, 0x3B114F4
	0x03B1148C ADRP X0, 0x60E000
	0x03B11490 LDR X0, [X0 + 0xAF8]
	0x03B11494 BL 0x1C16CF4
	0x03B11498 ADRP X0, 0x5E3000
	0x03B1149C LDR X0, [X0 + 0xE58]
	0x03B114A0 BL 0x1C16CF4
	0x03B114A4 ADRP X0, 0x5E9000
	0x03B114A8 LDR X0, [X0 + 0x700]
	0x03B114AC BL 0x1C16CF4
	0x03B114B0 ADRP X0, 0x5E2000
	0x03B114B4 LDR X0, [X0 + 0x598]
	0x03B114B8 BL 0x1C16CF4
	0x03B114BC ADRP X0, 0x647000
	0x03B114C0 LDR X0, [X0 + 0x348]
	0x03B114C4 BL 0x1C16CF4
	0x03B114C8 ADRP X0, 0x63C000
	0x03B114CC LDR X0, [X0 + 0xA88]
	0x03B114D0 BL 0x1C16CF4
	0x03B114D4 ADRP X0, 0x5E4000
	0x03B114D8 LDR X0, [X0 + 0x9B0]
	0x03B114DC BL 0x1C16CF4
	0x03B114E0 ADRP X0, 0x63D000
	0x03B114E4 LDR X0, [X0 + 0x48]
	0x03B114E8 BL 0x1C16CF4
	0x03B114EC MOVZ W8, 0x1
	0x03B114F0 STRB W8, [X20 + 0x68D]
	0x03B114F4 LDR X0, [X23]
	0x03B114F8 LDR W8, [X0 + 0xE0]
	0x03B114FC CBNZ W8, 0x3B11504
	0x03B11500 BL 0x1C16DFC
	0x03B11504 MOV X0, X22
	0x03B11508 MOV X1, X31
	0x03B1150C MOV X2, X31
	0x03B11510 BL 0x3C3883C
	0x03B11514 TBZ X0, 0x0, 0x3B11538
	0x03B11518 ADRP X8, 0x5E9000
	0x03B1151C LDR X8, [X8 + 0x700]
	0x03B11520 LDR X0, [X8]
	0x03B11524 BL 0x1C16F10
	0x03B11528 MOV X1, X31
	0x03B1152C MOV X22, X0
	0x03B11530 BL 0x3C17028
	0x03B11534 B 0x3B11548
	0x03B11538 CBZ X22, 0x3B11BCC
	0x03B1153C MOV X0, X22
	0x03B11540 MOV X1, X31
	0x03B11544 BL 0x3C19C94
	0x03B11548 ADRP X24, 0x5E4000
	0x03B1154C ADRP X25, 0x63C000
	0x03B11550 ADRP X26, 0x60E000
	0x03B11554 ADRP X27, 0x63D000
	0x03B11558 ADRP X20, 0x5E3000
	0x03B1155C ADRP X23, 0x647000
	0x03B11560 LDR X24, [X24 + 0x9B0]
	0x03B11564 LDR X25, [X25 + 0xA88]
	0x03B11568 LDR X26, [X26 + 0xAF8]
	0x03B1156C LDR X27, [X27 + 0x48]
	0x03B11570 LDR X20, [X20 + 0xE58]
	0x03B11574 LDR X23, [X23 + 0x348]
	0x03B11578 LDR W8, [X31 + 0x18]
	0x03B1157C MOVZ W9, 0x8
	0x03B11580 MOVZ W12, 0xFFFC
	0x03B11584 STR X22, [X19]
	0x03B11588 ANDS W31, W8, 0x1
	0x03B1158C MOVZ W8, 0x4
	0x03B11590 CSEL W9, W9, W8, NE
	0x03B11594 MOVZ W10, 0x6
	0x03B11598 MOVZ W11, 0x24
	0x03B1159C STR W31, [X19 + 0x8]
	0x03B115A0 UDIV W8, W12, W9
	0x03B115A4 CSEL W10, W11, W10, NE
	0x03B115A8 LDR X0, [X24]
	0x03B115AC CMP W8, W21
	0x03B115B0 CSEL W28, W21, W8, GT
	0x03B115B4 MUL W21, W28, W9
	0x03B115B8 MOV W1, W21
	0x03B115BC STP W10, W9, [X31 + 0x10]
	0x03B115C0 MUL W22, W28, W10
	0x03B115C4 BL 0x1C16D6C
	0x03B115C8 STR X0, [X19 + 0x10]
	0x03B115CC LDR X0, [X25]
	0x03B115D0 MOV W1, W21
	0x03B115D4 BL 0x1C16D6C
	0x03B115D8 STR X0, [X19 + 0x28]
	0x03B115DC LDR X0, [X25]
	0x03B115E0 MOV W1, W21
	0x03B115E4 BL 0x1C16D6C
	0x03B115E8 STR X0, [X19 + 0x30]
	0x03B115EC LDR X0, [X26]
	0x03B115F0 MOV W1, W21
	0x03B115F4 BL 0x1C16D6C
	0x03B115F8 STR X0, [X19 + 0x38]
	0x03B115FC LDR X0, [X24]
	0x03B11600 MOV W1, W21
	0x03B11604 BL 0x1C16D6C
	0x03B11608 STR X0, [X19 + 0x18]
	0x03B1160C LDR X0, [X27]
	0x03B11610 MOV W1, W21
	0x03B11614 BL 0x1C16D6C
	0x03B11618 STR X0, [X19 + 0x20]
	0x03B1161C LDR X0, [X20]
	0x03B11620 MOV W1, W22
	0x03B11624 BL 0x1C16D6C
	0x03B11628 CMP W28, 0x1
	0x03B1162C STR W28, [X31 + 0xC]
	0x03B11630 STR X0, [X19 + 0x40]
	0x03B11634 B.LT 0x3B11B04
	0x03B11638 LDR W8, [X31 + 0x14]
	0x03B1163C ADRP X21, 0x5E2000
	0x03B11640 ADRP X22, 0x5EA000
	0x03B11644 MOV W1, W31
	0x03B11648 MOV W8, W8
	0x03B1164C STR X8, [X31]
	0x03B11650 LDR X21, [X21 + 0x5A0]
	0x03B11654 LDR X22, [X22 + 0xF08]
	0x03B11658 MOV W28, W31
	0x03B1165C MOVZ W29, 0xC
	0x03B11660 LDR X24, [X31]
	0x03B11664 MOV W25, W1
	0x03B11668 STR W1, [X31 + 0x1C]
	0x03B1166C UBFM X27, X25, 0x20, 0x1F
	0x03B11670 ADRP X8, 0x8C7000
	0x03B11674 LDRB W8, [X8 + 0x783]
	0x03B11678 LDR X26, [X19 + 0x10]
	0x03B1167C CBNZ W8, 0x3B11694
	0x03B11680 MOV X0, X21
	0x03B11684 BL 0x1C16CF4
	0x03B11688 ADRP X8, 0x8C7000
	0x03B1168C MOVZ W9, 0x1
	0x03B11690 STRB W9, [X8 + 0x783]
	0x03B11694 CBZ X26, 0x3B11BCC
	0x03B11698 LDR W8, [X26 + 0x18]
	0x03B1169C CMP X25, X8
	0x03B116A0 B.CS 0x3B11BC8
	0x03B116A4 LDR X8, [X21]
	0x03B116A8 SBFM X20, X27, 0x20, 0x3F
	0x03B116AC LDR X8, [X8 + 0xB8]
	0x03B116B0 LDR V0, [X8]
	0x03B116B4 LDR V1, [X8 + 0x8]
	0x03B116B8 NOP
	0x03B116BC MADD X8, X20, X29, X26
	0x03B116C0 STR D0, [X8 + 0x20]
	0x03B116C4 STR S1, [X8 + 0x28]
	0x03B116C8 ADRP X8, 0x8C8000
	0x03B116CC LDRB W8, [X8 + 0x78F]
	0x03B116D0 LDR X26, [X19 + 0x28]
	0x03B116D4 CBNZ W8, 0x3B116EC
	0x03B116D8 MOV X0, X22
	0x03B116DC BL 0x1C16CF4
	0x03B116E0 MOVZ W8, 0x1
	0x03B116E4 ADRP X9, 0x8C8000
	0x03B116E8 STRB W8, [X9 + 0x78F]
	0x03B116EC CBZ X26, 0x3B11BCC
	0x03B116F0 LDR W8, [X26 + 0x18]
	0x03B116F4 CMP X25, X8
	0x03B116F8 B.CS 0x3B11BC8
	0x03B116FC LDR X8, [X22]
	0x03B11700 LDR X8, [X8 + 0xB8]
	0x03B11704 LDR V0, [X8]
	0x03B11708 ADD X8, X26, X20, 0x3, LSL
	0x03B1170C STR D0, [X8 + 0x20]
	0x03B11710 LDR X8, [X19 + 0x30]
	0x03B11714 CBZ X8, 0x3B11BCC
	0x03B11718 LDR W9, [X8 + 0x18]
	0x03B1171C CMP X25, X9
	0x03B11720 B.CS 0x3B11BC8
	0x03B11724 LDR X9, [X22]
	0x03B11728 ADD X8, X8, X20, 0x3, LSL
	0x03B1172C LDR X9, [X9 + 0xB8]
	0x03B11730 LDR V0, [X9]
	0x03B11734 STR D0, [X8 + 0x20]
	0x03B11738 LDR X0, [X23]
	0x03B1173C LDR X26, [X19 + 0x38]
	0x03B11740 LDR W8, [X0 + 0xE0]
	0x03B11744 CBNZ W8, 0x3B11750
	0x03B11748 BL 0x1C16DFC
	0x03B1174C LDR X0, [X23]
	0x03B11750 CBZ X26, 0x3B11BCC
	0x03B11754 LDR W8, [X26 + 0x18]
	0x03B11758 CMP X25, X8
	0x03B1175C B.CS 0x3B11BC8
	0x03B11760 LDR X8, [X0 + 0xB8]
	0x03B11764 ADD X9, X26, X20, 0x2, LSL
	0x03B11768 LDR W8, [X8]
	0x03B1176C STR W8, [X9 + 0x20]
	0x03B11770 LDR X8, [X19 + 0x18]
	0x03B11774 CBZ X8, 0x3B11BCC
	0x03B11778 LDR W9, [X8 + 0x18]
	0x03B1177C CMP X25, X9
	0x03B11780 B.CS 0x3B11BC8
	0x03B11784 LDR X9, [X23]
	0x03B11788 NOP
	0x03B1178C MADD X8, X20, X29, X8
	0x03B11790 LDR X9, [X9 + 0xB8]
	0x03B11794 LDUR V0, [X9 + 0x4]
	0x03B11798 LDR V1, [X9 + 0xC]
	0x03B1179C STR D0, [X8 + 0x20]
	0x03B117A0 STR S1, [X8 + 0x28]
	0x03B117A4 LDR X8, [X19 + 0x20]
	0x03B117A8 CBZ X8, 0x3B11BCC
	0x03B117AC LDR W9, [X8 + 0x18]
	0x03B117B0 CMP X25, X9
	0x03B117B4 B.CS 0x3B11BC8
	0x03B117B8 LDR X9, [X23]
	0x03B117BC ADD X8, X8, X20, 0x4, LSL
	0x03B117C0 SUBS X24, X24, 0x1
	0x03B117C4 ADD X25, X25, 0x1
	0x03B117C8 LDR X9, [X9 + 0xB8]
	0x03B117CC LDR V0, [X9 + 0x1]
	0x03B117D0 MOVZ X9, 0x1
	0x03B117D4 ADD X27, X27, X9
	0x03B117D8 STR V0, [X8 + 0x2]
	0x03B117DC B.NE 0x3B11670
	0x03B117E0 LDR X8, [X19 + 0x40]
	0x03B117E4 CBZ X8, 0x3B11BCC
	0x03B117E8 LDR W9, [X8 + 0x18]
	0x03B117EC LDR W1, [X31 + 0x1C]
	0x03B117F0 CMP W28, W9
	0x03B117F4 B.CS 0x3B11BC8
	0x03B117F8 SXTW X10, W28
	0x03B117FC ORR X10, X10, 0x1
	0x03B11800 ADD X11, X8, W28, 0x2, SXTW
	0x03B11804 CMP W10, W9
	0x03B11808 STR W1, [X11 + 0x20]
	0x03B1180C B.CS 0x3B11BC8
	0x03B11810 ADD X11, X8, X10, 0x2, LSL
	0x03B11814 ADD W10, W28, 0x2
	0x03B11818 ORR W13, W1, 0x1
	0x03B1181C CMP W10, W9
	0x03B11820 STR W13, [X11 + 0x20]
	0x03B11824 B.CS 0x3B11BC8
	0x03B11828 ADD X11, X8, W10, 0x2, SXTW
	0x03B1182C ADD W10, W28, 0x3
	0x03B11830 ORR W14, W1, 0x2
	0x03B11834 CMP W10, W9
	0x03B11838 STR W14, [X11 + 0x20]
	0x03B1183C B.CS 0x3B11BC8
	0x03B11840 ADD X11, X8, W10, 0x2, SXTW
	0x03B11844 ADD W10, W28, 0x4
	0x03B11848 CMP W10, W9
	0x03B1184C STR W14, [X11 + 0x20]
	0x03B11850 B.CS 0x3B11BC8
	0x03B11854 ADD X11, X8, W10, 0x2, SXTW
	0x03B11858 ADD W10, W28, 0x5
	0x03B1185C ORR W12, W1, 0x3
	0x03B11860 CMP W10, W9
	0x03B11864 STR W12, [X11 + 0x20]
	0x03B11868 B.CS 0x3B11BC8
	0x03B1186C ADD X10, X8, W10, 0x2, SXTW
	0x03B11870 STR W1, [X10 + 0x20]
	0x03B11874 LDR W10, [X31 + 0x18]
	0x03B11878 TBZ X10, 0x0, 0x3B11AE4
	0x03B1187C ADD W11, W28, 0x6
	0x03B11880 CMP W11, W9
	0x03B11884 B.CS 0x3B11BC8
	0x03B11888 ADD W15, W28, 0x7
	0x03B1188C ADD W10, W1, 0x4
	0x03B11890 ADD X11, X8, W11, 0x2, SXTW

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x8D2000
	011 Move W8, [X21+1666]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x649000
	019 Move X0, [X0+1856]
	020 Call 0x1C17CF4
	021 Move X0, 0x649000
	022 Move X0, [X0+1864]
	023 Call 0x1C17CF4
	024 Move X0, 0x649000
	025 Move X0, [X0+1872]
	026 Call 0x1C17CF4
	027 Move X0, 0x649000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0x5E7000
	031 Move X0, [X0+3232]
	032 Call 0x1C17CF4
	033 Move X0, 0x648000
	034 Move X0, [X0+824]
	035 Call 0x1C17CF4
	036 Move X0, 0x648000
	037 Move X0, [X0+1568]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1666], W8
	041 Move [X31+8], X31
	042 Compare X19, 0
	043 JumpIfEqual {302}
	044 Move X25, 0x648000
	045 Move X25, [X25+824]
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object.GetInstanceID, X0
	049 Move X8, [X25]
	050 Move W22, W0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Compare X20, 0
	057 JumpIfEqual {302}
	058 Move X8, [X25]
	059 Move X0, X20
	060 Move X2, X31
	061 Move X8, [X8+184]
	062 Move W1, [X8]
	063 Call Material.GetTexture, X0, X1
	064 Compare X0, 0
	065 JumpIfEqual {302}
	066 Move X24, 0x648000
	067 Move X24, [X24+1568]
	068 Move X1, X31
	069 Move X23, X0
	070 Call Object.GetInstanceID, X0
	071 Move X8, [X24]
	072 Move W21, W0
	073 Move W9, [X8+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {79}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X8, [X24]
	079 Move X8, [X8+184]
	080 Move X0, [X8+8]
	081 Compare X0, 0
	082 JumpIfEqual {302}
	083 Move X8, 0x649000
	084 Move X8, [X8+1872]
	085 Move W21, W21
	086 NotImplemented "Instruction BFM not yet implemented."
	087 Add X2, X31, 8
	088 Move X3, [X8]
	089 Move X1, X21
	090 Call Dictionary`2<Int64, Object>.TryGetValue, X0, X1, X2
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {118}
	095 Move X0, X19
	096 Move X1, X31
	097 Call Material.ComputeCRC, X0
	098 Move X8, [X31+8]
	099 Compare X8, 0
	100 JumpIfEqual {302}
	101 Move W9, [X8+32]
	102 Move X22, [X8+40]
	103 Move W20, W0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X19
	111 Move X1, X22
	112 Call TMP_MaterialManager.CopyMaterialPresetProperties, X0, X1
	113 Move X8, [X31+8]
	114 Compare X8, 0
	115 JumpIfEqual {302}
	116 Move X22, [X8+40]
	117 Move [X8+32], W20
	118 Move X0, [X25]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X25]
	124 Move X8, [X0+184]
	125 Move X0, X19
	126 Move X2, X31
	127 Move W1, [X8+84]
	128 Call Material.HasProperty, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {229}
	133 Move X0, [X25]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {139}
	137 Call 0x1C17DFC
	138 Move X0, [X25]
	139 Move X8, [X0+184]
	140 Move X0, X20
	141 Move X2, X31
	142 Move W1, [X8+84]
	143 Call Material.HasProperty, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {229}
	148 Move X8, 0x5E7000
	149 Move X8, [X8+3232]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X1, X19
	153 Move X2, X31
	154 Move X22, X0
	155 Call Material..ctor, X0, X1
	156 Compare X22, 0
	157 JumpIfEqual {302}
	158 Move W1, 61
	159 Move X0, X22
	160 Move X2, X31
	161 Call Object.set_hideFlags, X0, X1
	162 Move X0, [X25]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move X0, [X25]
	168 Move X8, [X0+184]
	169 Move X0, X22
	170 Move X2, X23
	171 Move X3, X31
	172 Move W1, [X8]
	173 Call Material.SetTexture, X0, X1, X2
	174 Move X8, [X25]
	175 Move X0, X20
	176 Move X2, X31
	177 Move X8, [X8+184]
	178 Move W23, [X8+84]
	179 Move W1, W23
	180 Call Material.GetFloat, X0, X1
	181 Move X0, X22
	182 Move W1, W23
	183 Move X2, X31
	184 Call Material.SetFloat, X0, X1, V0
	185 Move X8, [X25]
	186 Move X0, X20
	187 Move X2, X31
	188 Move X8, [X8+184]
	189 Move W23, [X8+104]
	190 Move W1, W23
	191 Call Material.GetFloat, X0, X1
	192 Move X0, X22
	193 Move W1, W23
	194 Move X2, X31
	195 Call Material.SetFloat, X0, X1, V0
	196 Move X8, [X25]
	197 Move X0, X20
	198 Move X2, X31
	199 Move X8, [X8+184]
	200 Move W23, [X8+108]
	201 Move W1, W23
	202 Call Material.GetFloat, X0, X1
	203 Move X0, X22
	204 Move W1, W23
	205 Move X2, X31
	206 Call Material.SetFloat, X0, X1, V0
	207 Move X8, [X25]
	208 Move X0, X20
	209 Move X2, X31
	210 Move X8, [X8+184]
	211 Move W23, [X8+48]
	212 Move W1, W23
	213 Call Material.GetFloat, X0, X1
	214 Move X0, X22
	215 Move W1, W23
	216 Move X2, X31
	217 Call Material.SetFloat, X0, X1, V0
	218 Move X8, [X25]
	219 Move X0, X20
	220 Move X2, X31
	221 Move X8, [X8+184]
	222 Move W23, [X8+52]
	223 Move W1, W23
	224 Call Material.GetFloat, X0, X1
	225 Move X0, X22
	226 Move W1, W23
	227 Move X2, X31
	228 Call Material.SetFloat, X0, X1, V0
	229 Move X8, 0x5E7000
	230 Move X8, [X8+3232]
	231 Move X0, [X8]
	232 Call 0x1C17F10
	233 Move X1, X20
	234 Move X2, X31
	235 Move X22, X0
	236 Call Material..ctor, X0, X1
	237 Move X8, 0x649000
	238 Move X8, [X8+1880]
	239 Move X0, [X8]
	240 Call 0x1C17F10
	241 Move X1, X31
	242 Move X20, X0
	243 Call Object..ctor, X0
	244 Move [X31+8], X20
	245 Compare X20, 0
	246 JumpIfEqual {302}
	247 Move X0, X19
	248 Move X1, X31
	249 Move [X20+16], X21
	250 Move [X20+24], X19
	251 Call Material.ComputeCRC, X0
	252 Move [X20+32], W0
	253 Move X8, [X31+8]
	254 Compare X8, 0
	255 JumpIfEqual {302}
	256 Move [X8+40], X22
	257 Move [X8+48], W31
	258 Move X0, [X24]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {264}
	262 Call 0x1C17DFC
	263 Move X0, [X24]
	264 Move X8, [X0+184]
	265 Move X0, [X8+8]
	266 Compare X0, 0
	267 JumpIfEqual {302}
	268 Move X8, 0x649000
	269 Move X2, [X31+8]
	270 Move X8, [X8+1856]
	271 Move X1, X21
	272 Move X3, [X8]
	273 Call Dictionary`2<Int64, Object>.Add, X0, X1, X2
	274 Compare X22, 0
	275 JumpIfEqual {302}
	276 Move X8, [X24]
	277 Move X0, X22
	278 Move X1, X31
	279 Move X8, [X8+184]
	280 Move X19, [X8+16]
	281 Call Object.GetInstanceID, X0
	282 Compare X19, 0
	283 JumpIfEqual {302}
	284 Move X8, 0x649000
	285 Move X8, [X8+1864]
	286 Move W1, W0
	287 Move X0, X19
	288 Move X2, X21
	289 Move X3, [X8]
	290 Call Dictionary`2<Int32, Int64>.Add, X0, X1, X2
	291 Move X0, X22
	292 Move X20, [X31+64]
	293 Move X19, [X31+72]
	294 Move X22, [X31+48]
	295 Move X21, [X31+56]
	296 Move X24, [X31+32]
	297 Move X23, [X31+40]
	298 Move X30, [X31+16]
	299 Move X25, [X31+24]
	300 Add X31, X31, 80
	301 Return X0
	302 Call 0x1C17F20

Method: System.Void AddFallbackMaterialReference(UnityEngine.Material targetMaterial)

Disassembly:
	0x03B11894 CMP W15, W9
	0x03B11898 STR W10, [X11 + 0x20]
	0x03B1189C B.CS 0x3B11BC8
	0x03B118A0 ADD X16, X8, W15, 0x2, SXTW
	0x03B118A4 ADD W15, W28, 0x8
	0x03B118A8 ADD W11, W1, 0x5
	0x03B118AC CMP W15, W9
	0x03B118B0 STR W11, [X16 + 0x20]
	0x03B118B4 B.CS 0x3B11BC8
	0x03B118B8 ADD X16, X8, W15, 0x2, SXTW
	0x03B118BC ADD W15, W28, 0x9
	0x03B118C0 CMP W15, W9
	0x03B118C4 STR W13, [X16 + 0x20]
	0x03B118C8 B.CS 0x3B11BC8
	0x03B118CC ADD X16, X8, W15, 0x2, SXTW
	0x03B118D0 ADD W15, W28, 0xA
	0x03B118D4 CMP W15, W9
	0x03B118D8 STR W13, [X16 + 0x20]
	0x03B118DC B.CS 0x3B11BC8
	0x03B118E0 ADD X16, X8, W15, 0x2, SXTW
	0x03B118E4 ADD W15, W28, 0xB
	0x03B118E8 CMP W15, W9
	0x03B118EC STR W1, [X16 + 0x20]
	0x03B118F0 B.CS 0x3B11BC8
	0x03B118F4 ADD X16, X8, W15, 0x2, SXTW
	0x03B118F8 ADD W15, W28, 0xC
	0x03B118FC CMP W15, W9
	0x03B11900 STR W10, [X16 + 0x20]
	0x03B11904 B.CS 0x3B11BC8
	0x03B11908 ADD X16, X8, W15, 0x2, SXTW
	0x03B1190C ADD W15, W28, 0xD
	0x03B11910 CMP W15, W9
	0x03B11914 STR W12, [X16 + 0x20]
	0x03B11918 B.CS 0x3B11BC8
	0x03B1191C ADD X16, X8, W15, 0x2, SXTW
	0x03B11920 ADD W15, W28, 0xE
	0x03B11924 CMP W15, W9
	0x03B11928 STR W14, [X16 + 0x20]
	0x03B1192C B.CS 0x3B11BC8
	0x03B11930 ADD X17, X8, W15, 0x2, SXTW
	0x03B11934 ADD W15, W28, 0xF
	0x03B11938 ADD W16, W1, 0x6
	0x03B1193C CMP W15, W9
	0x03B11940 STR W16, [X17 + 0x20]
	0x03B11944 B.CS 0x3B11BC8
	0x03B11948 ADD W17, W28, 0x10
	0x03B1194C ADD X15, X8, W15, 0x2, SXTW
	0x03B11950 CMP W17, W9
	0x03B11954 STR W16, [X15 + 0x20]
	0x03B11958 B.CS 0x3B11BC8
	0x03B1195C ADD X0, X8, W17, 0x2, SXTW
	0x03B11960 ADD W17, W28, 0x11
	0x03B11964 ADD W15, W1, 0x7
	0x03B11968 CMP W17, W9
	0x03B1196C STR W15, [X0 + 0x20]
	0x03B11970 B.CS 0x3B11BC8
	0x03B11974 ADD X0, X8, W17, 0x2, SXTW
	0x03B11978 ADD W17, W28, 0x12
	0x03B1197C CMP W17, W9
	0x03B11980 STR W12, [X0 + 0x20]
	0x03B11984 B.CS 0x3B11BC8
	0x03B11988 ADD X0, X8, W17, 0x2, SXTW
	0x03B1198C ADD W17, W28, 0x13
	0x03B11990 CMP W17, W9
	0x03B11994 STR W13, [X0 + 0x20]
	0x03B11998 B.CS 0x3B11BC8
	0x03B1199C ADD X0, X8, W17, 0x2, SXTW
	0x03B119A0 ADD W17, W28, 0x14
	0x03B119A4 CMP W17, W9
	0x03B119A8 STR W11, [X0 + 0x20]
	0x03B119AC B.CS 0x3B11BC8
	0x03B119B0 ADD X0, X8, W17, 0x2, SXTW
	0x03B119B4 ADD W17, W28, 0x15
	0x03B119B8 CMP W17, W9
	0x03B119BC STR W16, [X0 + 0x20]
	0x03B119C0 B.CS 0x3B11BC8
	0x03B119C4 ADD X0, X8, W17, 0x2, SXTW
	0x03B119C8 ADD W17, W28, 0x16
	0x03B119CC CMP W17, W9
	0x03B119D0 STR W16, [X0 + 0x20]
	0x03B119D4 B.CS 0x3B11BC8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8D2000
	007 Move X20, 0x5E3000
	008 Move W8, [X21+1667]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x649000
	016 Move X0, [X0+1872]
	017 Call 0x1C17CF4
	018 Move X0, 0x649000
	019 Move X0, [X0+1888]
	020 Call 0x1C17CF4
	021 Move X0, 0x5E3000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x648000
	025 Move X0, [X0+1568]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1667], W8
	029 Move X0, [X20]
	030 Move [X31], X31
	031 Move [X31+8], X31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {99}
	044 Compare X19, 0
	045 JumpIfEqual {105}
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object.GetInstanceID, X0
	049 Move X20, 0x648000
	050 Move X20, [X20+1568]
	051 Move W19, W0
	052 Move X8, [X20]
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {59}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X8, [X20]
	059 Move X8, [X8+184]
	060 Move X0, [X8+16]
	061 Compare X0, 0
	062 JumpIfEqual {105}
	063 Move X8, 0x649000
	064 Move X8, [X8+1888]
	065 Add X2, X31, 8
	066 Move W1, W19
	067 Move X3, [X8]
	068 Call Dictionary`2<Int32, Int64>.TryGetValue, X0, X1, X2
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {99}
	073 Move X0, [X20]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X20]
	079 Move X8, [X0+184]
	080 Move X0, [X8+8]
	081 Compare X0, 0
	082 JumpIfEqual {105}
	083 Move X8, 0x649000
	084 Move X1, [X31+8]
	085 Move X8, [X8+1872]
	086 Add X2, X31, 0
	087 Move X3, [X8]
	088 Call Dictionary`2<Int64, Object>.TryGetValue, X0, X1, X2
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {99}
	093 Move X8, [X31]
	094 Compare X8, 0
	095 JumpIfEqual {105}
	096 Move W9, [X8+48]
	097 Add W9, W9, 1
	098 Move [X8+48], W9
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X30, [X31+16]
	102 Move X21, [X31+24]
	103 Add X31, X31, 48
	104 Return 
	105 Call 0x1C17F20

Method: System.Void RemoveFallbackMaterialReference(UnityEngine.Material targetMaterial)

Disassembly:
	0x03B119D8 ADD X0, X8, W17, 0x2, SXTW
	0x03B119DC ADD W17, W28, 0x17
	0x03B119E0 CMP W17, W9
	0x03B119E4 STR W14, [X0 + 0x20]
	0x03B119E8 B.CS 0x3B11BC8
	0x03B119EC ADD W14, W28, 0x18
	0x03B119F0 ADD X17, X8, W17, 0x2, SXTW
	0x03B119F4 CMP W14, W9
	0x03B119F8 STR W13, [X17 + 0x20]
	0x03B119FC B.CS 0x3B11BC8
	0x03B11A00 ADD W13, W28, 0x19
	0x03B11A04 ADD X14, X8, W14, 0x2, SXTW
	0x03B11A08 CMP W13, W9
	0x03B11A0C STR W10, [X14 + 0x20]
	0x03B11A10 B.CS 0x3B11BC8
	0x03B11A14 ADD X14, X8, W13, 0x2, SXTW
	0x03B11A18 ADD W13, W28, 0x1A
	0x03B11A1C CMP W13, W9
	0x03B11A20 STR W1, [X14 + 0x20]
	0x03B11A24 B.CS 0x3B11BC8
	0x03B11A28 ADD X14, X8, W13, 0x2, SXTW
	0x03B11A2C ADD W13, W28, 0x1B
	0x03B11A30 CMP W13, W9
	0x03B11A34 STR W12, [X14 + 0x20]
	0x03B11A38 B.CS 0x3B11BC8
	0x03B11A3C ADD X14, X8, W13, 0x2, SXTW
	0x03B11A40 ADD W13, W28, 0x1C
	0x03B11A44 CMP W13, W9
	0x03B11A48 STR W12, [X14 + 0x20]
	0x03B11A4C B.CS 0x3B11BC8
	0x03B11A50 ADD W12, W28, 0x1D
	0x03B11A54 ADD X13, X8, W13, 0x2, SXTW
	0x03B11A58 CMP W12, W9
	0x03B11A5C STR W15, [X13 + 0x20]
	0x03B11A60 B.CS 0x3B11BC8
	0x03B11A64 ADD X13, X8, W12, 0x2, SXTW
	0x03B11A68 ADD W12, W28, 0x1E
	0x03B11A6C CMP W12, W9
	0x03B11A70 STR W10, [X13 + 0x20]
	0x03B11A74 B.CS 0x3B11BC8
	0x03B11A78 ADD X13, X8, W12, 0x2, SXTW
	0x03B11A7C ADD W12, W28, 0x1F
	0x03B11A80 CMP W12, W9
	0x03B11A84 STR W15, [X13 + 0x20]
	0x03B11A88 B.CS 0x3B11BC8
	0x03B11A8C ADD X13, X8, W12, 0x2, SXTW
	0x03B11A90 ADD W12, W28, 0x20
	0x03B11A94 CMP W12, W9
	0x03B11A98 STR W16, [X13 + 0x20]
	0x03B11A9C B.CS 0x3B11BC8
	0x03B11AA0 ADD X13, X8, W12, 0x2, SXTW
	0x03B11AA4 ADD W12, W28, 0x21
	0x03B11AA8 CMP W12, W9
	0x03B11AAC STR W11, [X13 + 0x20]
	0x03B11AB0 B.CS 0x3B11BC8
	0x03B11AB4 ADD X13, X8, W12, 0x2, SXTW
	0x03B11AB8 ADD W12, W28, 0x22
	0x03B11ABC CMP W12, W9
	0x03B11AC0 STR W11, [X13 + 0x20]
	0x03B11AC4 B.CS 0x3B11BC8
	0x03B11AC8 ADD W11, W28, 0x23
	0x03B11ACC ADD X12, X8, W12, 0x2, SXTW
	0x03B11AD0 CMP W11, W9
	0x03B11AD4 STR W10, [X12 + 0x20]
	0x03B11AD8 B.CS 0x3B11BC8
	0x03B11ADC ADD X8, X8, W11, 0x2, SXTW
	0x03B11AE0 STR W15, [X8 + 0x20]
	0x03B11AE4 LDR W8, [X31 + 0x14]
	0x03B11AE8 LDR W9, [X31 + 0xC]
	0x03B11AEC ADD W1, W1, W8
	0x03B11AF0 SDIV W8, W1, W8
	0x03B11AF4 CMP W8, W9
	0x03B11AF8 LDR W8, [X31 + 0x10]
	0x03B11AFC ADD W28, W28, W8
	0x03B11B00 B.LT 0x3B11660
	0x03B11B04 LDR X0, [X19]
	0x03B11B08 CBZ X0, 0x3B11BCC
	0x03B11B0C LDR X1, [X19 + 0x10]
	0x03B11B10 MOV X2, X31
	0x03B11B14 BL 0x3C17F08
	0x03B11B18 LDR X0, [X19]
	0x03B11B1C CBZ X0, 0x3B11BCC
	0x03B11B20 LDR X1, [X19 + 0x18]
	0x03B11B24 MOV X2, X31
	0x03B11B28 BL 0x3C17FB4
	0x03B11B2C LDR X0, [X19]
	0x03B11B30 CBZ X0, 0x3B11BCC
	0x03B11B34 LDR X1, [X19 + 0x20]
	0x03B11B38 MOV X2, X31
	0x03B11B3C BL 0x3C18060
	0x03B11B40 LDR X0, [X19]
	0x03B11B44 CBZ X0, 0x3B11BCC
	0x03B11B48 LDR X1, [X19 + 0x40]
	0x03B11B4C MOV X2, X31
	0x03B11B50 BL 0x3C18FF0
	0x03B11B54 LDR X0, [X23]
	0x03B11B58 LDR X20, [X19]
	0x03B11B5C LDR W8, [X0 + 0xE0]
	0x03B11B60 CBNZ W8, 0x3B11B6C
	0x03B11B64 BL 0x1C16DFC
	0x03B11B68 LDR X0, [X23]
	0x03B11B6C LDR X8, [X0 + 0xB8]
	0x03B11B70 LDR X9, [X8 + 0x30]
	0x03B11B74 LDR V0, [X8 + 0x2]
	0x03B11B78 STR X9, [X31 + 0x50]
	0x03B11B7C STR V0, [X31 + 0x4]
	0x03B11B80 CBZ X20, 0x3B11BCC
	0x03B11B84 LDR V0, [X31 + 0x4]
	0x03B11B88 LDR X8, [X31 + 0x50]
	0x03B11B8C ADD X1, X31, 0x20
	0x03B11B90 MOV X0, X20
	0x03B11B94 MOV X2, X31
	0x03B11B98 STR V0, [X31 + 0x2]
	0x03B11B9C STR X8, [X31 + 0x30]
	0x03B11BA0 BL 0x3C17814
	0x03B11BA4 STR X31, [X19 + 0x48]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8D2000
	007 Move X20, 0x5E3000
	008 Move W8, [X21+1668]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x649000
	016 Move X0, [X0+1872]
	017 Call 0x1C17CF4
	018 Move X0, 0x649000
	019 Move X0, [X0+1888]
	020 Call 0x1C17CF4
	021 Move X0, 0x649000
	022 Move X0, [X0+1896]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E3000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x648000
	028 Move X0, [X0+1568]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1668], W8
	032 Move X0, [X20]
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {134}
	047 Compare X19, 0
	048 JumpIfEqual {140}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Object.GetInstanceID, X0
	052 Move X20, 0x648000
	053 Move X20, [X20+1568]
	054 Move W19, W0
	055 Move X8, [X20]
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X20]
	062 Move X8, [X8+184]
	063 Move X0, [X8+16]
	064 Compare X0, 0
	065 JumpIfEqual {140}
	066 Move X8, 0x649000
	067 Move X8, [X8+1888]
	068 Add X2, X31, 8
	069 Move W1, W19
	070 Move X3, [X8]
	071 Call Dictionary`2<Int32, Int64>.TryGetValue, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {134}
	076 Move X0, [X20]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X20]
	082 Move X8, [X0+184]
	083 Move X0, [X8+8]
	084 Compare X0, 0
	085 JumpIfEqual {140}
	086 Move X8, 0x649000
	087 Move X1, [X31+8]
	088 Move X8, [X8+1872]
	089 Add X2, X31, 0
	090 Move X3, [X8]
	091 Call Dictionary`2<Int64, Object>.TryGetValue, X0, X1, X2
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {134}
	096 Move X8, [X31]
	097 Compare X8, 0
	098 JumpIfEqual {140}
	099 Move W9, [X8+48]
	100 Subtract W9, W9, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X8+48], W9
	103 Move X0, [X20]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X20]
	109 Move X8, [X0+184]
	110 Move X0, [X8+24]
	111 Compare X0, 0
	112 JumpIfEqual {140}
	113 Move X9, 0x649000
	114 Move X1, [X31]
	115 Move X9, [X9+1896]
	116 Move W10, [X0+28]
	117 Move X8, [X0+16]
	118 Move X9, [X9]
	119 Add W10, W10, 1
	120 Move [X0+28], W10
	121 Compare X8, 0
	122 JumpIfEqual {140}
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Move W11, [X8+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W9, W10, 1
	127 Add X8, X8, X10
	128 Move [X0+24], W9
	129 Move [X8+32], X1
	130 Move X8, [X9+32]
	131 Move X8, [X8+192]
	132 Move X2, [X8+112]
	133 Call List`1<Object>.AddWithResize, X0, X1
	134 Move X20, [X31+32]
	135 Move X19, [X31+40]
	136 Move X30, [X31+16]
	137 Move X21, [X31+24]
	138 Add X31, X31, 48
	139 Return 
	140 Call 0x1C17F20

Method: System.Void CleanupFallbackMaterials()

Disassembly:
	0x03B0E9F8 CBNZ W9, 0x3B0EA08
	0x03B0E9FC MOV X0, X8
	0x03B0EA00 BL 0x1C16DFC
	0x03B0EA04 LDR X8, [X20]
	0x03B0EA08 LDR X0, [X21]
	0x03B0EA0C LDR X8, [X8 + 0xB8]
	0x03B0EA10 LDR W9, [X0 + 0xE0]
	0x03B0EA14 LDR X19, [X8 + 0x138]
	0x03B0EA18 CBNZ W9, 0x3B0EA20
	0x03B0EA1C BL 0x1C16DFC
	0x03B0EA20 MOV X0, X19
	0x03B0EA24 MOV X1, X31
	0x03B0EA28 MOV X2, X31
	0x03B0EA2C BL 0x3C3883C
	0x03B0EA30 TBZ X0, 0x0, 0x3B0EA6C
	0x03B0EA34 ADRP X8, 0x64B000
	0x03B0EA38 LDR X8, [X8 + 0x5E0]
	0x03B0EA3C MOV X1, X31
	0x03B0EA40 LDR X0, [X8]
	0x03B0EA44 BL 0x3C13E40
	0x03B0EA48 LDR X8, [X20]
	0x03B0EA4C MOV X19, X0
	0x03B0EA50 LDR W9, [X8 + 0xE0]
	0x03B0EA54 CBNZ W9, 0x3B0EA64
	0x03B0EA58 MOV X0, X8
	0x03B0EA5C BL 0x1C16DFC
	0x03B0EA60 LDR X8, [X20]
	0x03B0EA64 LDR X8, [X8 + 0xB8]
	0x03B0EA68 STR X19, [X8 + 0x138]
	0x03B0EA6C LDP X20, X19, [X31 + 0x10]
	0x03B0EA70 LDP X30, X21, [X31], #0x20
	0x03B0EA74 RET
	0x03B0EA78 MOV X1, X31
	0x03B0EA7C B 0x33BDD8C
	0x03B0EA80 STR X30, [X31 - 0x30]!
	0x03B0EA84 STP X22, X21, [X31 + 0x10]
	0x03B0EA88 STP X20, X19, [X31 + 0x20]
	0x03B0EA8C ADRP X20, 0x8D4000
	0x03B0EA90 LDRB W8, [X20 + 0x677]
	0x03B0EA94 MOV X19, X0
	0x03B0EA98 TBNZ X8, 0x0, 0x3B0EAE0
	0x03B0EA9C ADRP X0, 0x64B000
	0x03B0EAA0 LDR X0, [X0 + 0x638]
	0x03B0EAA4 BL 0x1C16CF4
	0x03B0EAA8 ADRP X0, 0x64B000
	0x03B0EAAC LDR X0, [X0 + 0x470]
	0x03B0EAB0 BL 0x1C16CF4
	0x03B0EAB4 ADRP X0, 0x64B000
	0x03B0EAB8 LDR X0, [X0 + 0x478]
	0x03B0EABC BL 0x1C16CF4
	0x03B0EAC0 ADRP X0, 0x5E5000
	0x03B0EAC4 LDR X0, [X0 + 0x598]
	0x03B0EAC8 BL 0x1C16CF4
	0x03B0EACC ADRP X0, 0x64A000
	0x03B0EAD0 LDR X0, [X0 + 0x620]
	0x03B0EAD4 BL 0x1C16CF4
	0x03B0EAD8 MOVZ W8, 0x1
	0x03B0EADC STRB W8, [X20 + 0x677]
	0x03B0EAE0 CBZ X19, 0x3B0EC6C
	0x03B0EAE4 ADRP X21, 0x64A000
	0x03B0EAE8 ADRP X22, 0x64B000
	0x03B0EAEC LDR X21, [X21 + 0x620]
	0x03B0EAF0 LDR X22, [X22 + 0x478]
	0x03B0EAF4 MOV X0, X19
	0x03B0EAF8 MOV X1, X31
	0x03B0EAFC BL 0x3C385F8
	0x03B0EB00 MOV W20, W0
	0x03B0EB04 MOV W19, W31
	0x03B0EB08 LDR X0, [X21]
	0x03B0EB0C LDR W8, [X0 + 0xE0]
	0x03B0EB10 CBNZ W8, 0x3B0EB1C
	0x03B0EB14 BL 0x1C16DFC
	0x03B0EB18 LDR X0, [X21]
	0x03B0EB1C LDR X8, [X0 + 0xB8]
	0x03B0EB20 LDR X8, [X8]
	0x03B0EB24 CBZ X8, 0x3B0EC6C
	0x03B0EB28 LDR W9, [X8 + 0x18]
	0x03B0EB2C CMP W19, W9
	0x03B0EB30 B.GE 0x3B0EC5C
	0x03B0EB34 LDR W9, [X0 + 0xE0]
	0x03B0EB38 CBNZ W9, 0x3B0EB50
	0x03B0EB3C BL 0x1C16DFC
	0x03B0EB40 LDR X8, [X21]
	0x03B0EB44 LDR X8, [X8 + 0xB8]
	0x03B0EB48 LDR X8, [X8]
	0x03B0EB4C CBZ X8, 0x3B0EC6C
	0x03B0EB50 LDR X2, [X22]
	0x03B0EB54 MOV X0, X8
	0x03B0EB58 MOV W1, W19
	0x03B0EB5C BL 0x301BCCC
	0x03B0EB60 CBZ X0, 0x3B0EC6C
	0x03B0EB64 LDR X0, [X0 + 0x18]
	0x03B0EB68 CBZ X0, 0x3B0EC6C
	0x03B0EB6C MOV X1, X31
	0x03B0EB70 BL 0x3C385F8
	0x03B0EB74 CMP W0, W20
	0x03B0EB78 B.EQ 0x3B0EB84
	0x03B0EB7C ADD W19, W19, 0x1
	0x03B0EB80 B 0x3B0EB08
	0x03B0EB84 LDR X0, [X21]
	0x03B0EB88 LDR W8, [X0 + 0xE0]
	0x03B0EB8C CBNZ W8, 0x3B0EB98
	0x03B0EB90 BL 0x1C16DFC
	0x03B0EB94 LDR X0, [X21]
	0x03B0EB98 LDR X8, [X0 + 0xB8]
	0x03B0EB9C LDR X0, [X8]
	0x03B0EBA0 CBZ X0, 0x3B0EC6C
	0x03B0EBA4 LDR X2, [X22]
	0x03B0EBA8 MOV W1, W19
	0x03B0EBAC BL 0x301BCCC
	0x03B0EBB0 CBZ X0, 0x3B0EC6C
	0x03B0EBB4 MOV X8, X0
	0x03B0EBB8 LDR X0, [X21]
	0x03B0EBBC LDR W20, [X8 + 0x20]
	0x03B0EBC0 LDR W9, [X0 + 0xE0]
	0x03B0EBC4 CBNZ W9, 0x3B0EBD0
	0x03B0EBC8 BL 0x1C16DFC
	0x03B0EBCC LDR X0, [X21]
	0x03B0EBD0 LDR X8, [X0 + 0xB8]
	0x03B0EBD4 LDR X0, [X8]
	0x03B0EBD8 CBZ X0, 0x3B0EC6C
	0x03B0EBDC LDR X2, [X22]
	0x03B0EBE0 MOV W1, W19
	0x03B0EBE4 BL 0x301BCCC
	0x03B0EBE8 CBZ X0, 0x3B0EC6C
	0x03B0EBEC CMP W20, 0x2
	0x03B0EBF0 B.GE 0x3B0EC50
	0x03B0EBF4 ADRP X8, 0x5E5000
	0x03B0EBF8 LDR X8, [X8 + 0x598]
	0x03B0EBFC LDR X20, [X0 + 0x18]
	0x03B0EC00 LDR X8, [X8]
	0x03B0EC04 LDR W9, [X8 + 0xE0]
	0x03B0EC08 CBNZ W9, 0x3B0EC14

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x8D5000
	011 Move X22, 0x64B000
	012 Move W8, [X19+1669]
	013 Move X22, [X22+1568]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x64C000
	019 Move X0, [X0+1088]
	020 Call 0x1C17CF4
	021 Move X0, 0x64C000
	022 Move X0, [X0+1096]
	023 Call 0x1C17CF4
	024 Move X0, 0x64C000
	025 Move X0, [X0+1104]
	026 Call 0x1C17CF4
	027 Move X0, 0x64C000
	028 Move X0, [X0+1112]
	029 Call 0x1C17CF4
	030 Move X0, 0x64C000
	031 Move X0, [X0+1120]
	032 Call 0x1C17CF4
	033 Move X0, 0x5E6000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x64B000
	037 Move X0, [X0+1568]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+1669], W8
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move X8, [X8+24]
	049 Compare X8, 0
	050 JumpIfEqual {160}
	051 Move W8, [X8+24]
	052 Compare W8, 0
	053 JumpIfEqual {150}
	054 Move X23, 0x64C000
	055 Move X24, 0x64C000
	056 Move X25, 0x64C000
	057 Move X26, 0x5E6000
	058 Move X23, [X23+1120]
	059 Move X24, [X24+1088]
	060 Move X25, [X25+1096]
	061 Move X26, [X26+1432]
	062 Move W19, W31
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Move X8, [X0+184]
	069 Move X8, [X8+24]
	070 Compare X8, 0
	071 JumpIfEqual {160}
	072 Move W9, [X0+224]
	073 Move W20, [X8+24]
	074 Compare W9, 0
	075 JumpIfNotEqual {82}
	076 Call 0x1C17DFC
	077 Move X8, [X22]
	078 Move X8, [X8+184]
	079 Move X8, [X8+24]
	080 Compare X8, 0
	081 JumpIfEqual {160}
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X2, [X23]
	084 Move X0, X8
	085 Move W1, W19
	086 Call List`1<Object>.get_Item, X0, X1
	087 Compare X0, 0
	088 JumpIfEqual {160}
	089 Move W8, [X0+48]
	090 Move X21, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, [X22]
	093 Move X20, [X21+40]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X22]
	099 Move X8, [X0+184]
	100 Move X0, [X8+8]
	101 Compare X0, 0
	102 JumpIfEqual {160}
	103 Move X1, [X21+16]
	104 Move X2, [X24]
	105 Call Dictionary`2<Int64, Object>.Remove, X0, X1
	106 Compare X20, 0
	107 JumpIfEqual {160}
	108 Move X8, [X22]
	109 Move X0, X20
	110 Move X1, X31
	111 Move X8, [X8+184]
	112 Move X21, [X8+16]
	113 Call Object.GetInstanceID, X0
	114 Compare X21, 0
	115 JumpIfEqual {160}
	116 Move X2, [X25]
	117 Move W1, W0
	118 Move X0, X21
	119 Call Dictionary`2<Int32, Int64>.Remove, X0, X1
	120 Move X0, [X26]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X20
	126 Move X1, X31
	127 Call Object.DestroyImmediate, X0
	128 Move X0, [X22]
	129 Add W19, W19, 1
	130 Move W2, [X8+24]
	131 Move W9, [X8+28]
	132 Add W9, W9, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move [X8+24], W31
	135 Move [X8+28], W9
	136 Move X0, [X8+16]
	137 Move X20, [X31+64]
	138 Move X19, [X31+72]
	139 Move X22, [X31+48]
	140 Move X21, [X31+56]
	141 Move X24, [X31+32]
	142 Move X23, [X31+40]
	143 Move X26, [X31+16]
	144 Move X25, [X31+24]
	145 Move W1, W31
	146 Move X3, X31
	147 Move X30, [X31+80]
	148 Call Array.Clear, X0, X1, X2
	149 Return 
	150 Move X20, [X31+64]
	151 Move X19, [X31+72]
	152 Move X22, [X31+48]
	153 Move X21, [X31+56]
	154 Move X24, [X31+32]
	155 Move X23, [X31+40]
	156 Move X26, [X31+16]
	157 Move X25, [X31+24]
	158 Move X30, [X31+80]
	159 Return 
	160 Call 0x1C17F20

Method: System.Void ReleaseFallbackMaterial(UnityEngine.Material fallbackMaterial)

Disassembly:
	0x03B11BA8 LDP X20, X19, [X31 + 0xB0]
	0x03B11BAC LDP X22, X21, [X31 + 0xA0]
	0x03B11BB0 LDP X24, X23, [X31 + 0x90]
	0x03B11BB4 LDP X26, X25, [X31 + 0x80]
	0x03B11BB8 LDP X28, X27, [X31 + 0x70]
	0x03B11BBC LDP X29, X30, [X31 + 0x60]
	0x03B11BC0 ADD X31, X31, 0xC0
	0x03B11BC4 RET
	0x03B11BC8 BL 0x1C16F28
	0x03B11BCC BL 0x1C16F20
	0x03B11BD0 STP X29, X30, [X31 - 0x60]!
	0x03B11BD4 STP X28, X27, [X31 + 0x10]
	0x03B11BD8 STP X26, X25, [X31 + 0x20]
	0x03B11BDC STP X24, X23, [X31 + 0x30]
	0x03B11BE0 STP X22, X21, [X31 + 0x40]
	0x03B11BE4 STP X20, X19, [X31 + 0x50]
	0x03B11BE8 ADRP X21, 0x8D1000
	0x03B11BEC LDRB W8, [X21 + 0x68E]
	0x03B11BF0 MOV W20, W1
	0x03B11BF4 MOV X19, X0
	0x03B11BF8 TBNZ X8, 0x0, 0x3B11C4C
	0x03B11BFC ADRP X0, 0x648000
	0x03B11C00 LDR X0, [X0 + 0x770]
	0x03B11C04 BL 0x1C16CF4
	0x03B11C08 ADRP X0, 0x60B000
	0x03B11C0C LDR X0, [X0 + 0xED0]
	0x03B11C10 BL 0x1C16CF4
	0x03B11C14 ADRP X0, 0x648000
	0x03B11C18 LDR X0, [X0 + 0x778]
	0x03B11C1C BL 0x1C16CF4
	0x03B11C20 ADRP X0, 0x63D000
	0x03B11C24 LDR X0, [X0 + 0x228]
	0x03B11C28 BL 0x1C16CF4
	0x03B11C2C ADRP X0, 0x648000
	0x03B11C30 LDR X0, [X0 + 0x780]
	0x03B11C34 BL 0x1C16CF4
	0x03B11C38 ADRP X0, 0x647000
	0x03B11C3C LDR X0, [X0 + 0x348]
	0x03B11C40 BL 0x1C16CF4
	0x03B11C44 MOVZ W8, 0x1
	0x03B11C48 STRB W8, [X21 + 0x68E]
	0x03B11C4C MOV X0, X19
	0x03B11C50 LDR X8, [X0 + 0x10]!
	0x03B11C54 MOVZ W9, 0x3FFF
	0x03B11C58 CMP W20, W9
	0x03B11C5C CSEL W24, W20, W9, LT
	0x03B11C60 CBZ X8, 0x3B12040
	0x03B11C64 ADRP X20, 0x63D000
	0x03B11C68 LDR X20, [X20 + 0x228]
	0x03B11C6C ADRP X26, 0x648000
	0x03B11C70 ADRP X27, 0x648000
	0x03B11C74 ADRP X28, 0x648000
	0x03B11C78 ADRP X29, 0x60B000
	0x03B11C7C LDR X26, [X26 + 0x780]
	0x03B11C80 LDR X27, [X27 + 0x778]
	0x03B11C84 LDR X28, [X28 + 0x770]
	0x03B11C88 LDR X29, [X29 + 0xED0]
	0x03B11C8C LDR W8, [X8 + 0x18]
	0x03B11C90 LDR X2, [X20]
	0x03B11C94 UBFM W21, W24, 0x1E, 0x1D
	0x03B11C98 ADD W9, W24, W24, 0x1, LSL
	0x03B11C9C UBFM W23, W9, 0x1F, 0x1E
	0x03B11CA0 ADD W9, W8, 0x3
	0x03B11CA4 CMP W8, 0x0
	0x03B11CA8 MOV W1, W21
	0x03B11CAC CSEL W25, W9, W8, LT
	0x03B11CB0 BL 0x2144898
	0x03B11CB4 LDR X2, [X20]
	0x03B11CB8 ADD X22, X19, 0x18
	0x03B11CBC MOV X0, X22
	0x03B11CC0 MOV W1, W21
	0x03B11CC4 BL 0x2144898
	0x03B11CC8 LDR X2, [X26]
	0x03B11CCC ADD X20, X19, 0x20
	0x03B11CD0 MOV X0, X20
	0x03B11CD4 MOV W1, W21
	0x03B11CD8 BL 0x21449A4
	0x03B11CDC LDR X2, [X27]
	0x03B11CE0 ADD X0, X19, 0x28
	0x03B11CE4 MOV W1, W21
	0x03B11CE8 BL 0x214478C
	0x03B11CEC LDR X2, [X27]
	0x03B11CF0 ADD X0, X19, 0x30
	0x03B11CF4 MOV W1, W21
	0x03B11CF8 BL 0x214478C
	0x03B11CFC LDR X2, [X28]
	0x03B11D00 ADD X0, X19, 0x38
	0x03B11D04 MOV W1, W21
	0x03B11D08 BL 0x211581C
	0x03B11D0C LDR X2, [X29]
	0x03B11D10 ADD X21, X19, 0x40
	0x03B11D14 MOV X0, X21
	0x03B11D18 MOV W1, W23
	0x03B11D1C BL 0x2116294
	0x03B11D20 CMP W24, W25, ASR
	0x03B11D24 B.LE 0x3B11FD4
	0x03B11D28 ADRP X23, 0x647000
	0x03B11D2C LDR X23, [X23 + 0x348]
	0x03B11D30 SBFM W8, W25, 0x2, 0x1F
	0x03B11D34 SXTW X9, W24
	0x03B11D38 ADD W10, W8, W8, 0x1, LSL
	0x03B11D3C UBFM W24, W8, 0x1E, 0x1D
	0x03B11D40 SUB X25, X9, W8, SXTW
	0x03B11D44 UBFM W26, W10, 0x1F, 0x1E
	0x03B11D48 MOVZ W27, 0xC
	0x03B11D4C LDR X0, [X23]
	0x03B11D50 LDR X28, [X22]
	0x03B11D54 LDR W8, [X0 + 0xE0]
	0x03B11D58 CBNZ W8, 0x3B11D64
	0x03B11D5C BL 0x1C16DFC
	0x03B11D60 LDR X0, [X23]
	0x03B11D64 CBZ X28, 0x3B12040
	0x03B11D68 LDR W8, [X28 + 0x18]
	0x03B11D6C CMP W24, W8
	0x03B11D70 B.CS 0x3B1203C
	0x03B11D74 LDR X8, [X0 + 0xB8]
	0x03B11D78 SXTW X11, W24
	0x03B11D7C LDUR V0, [X8 + 0x4]
	0x03B11D80 LDR V1, [X8 + 0xC]
	0x03B11D84 NOP
	0x03B11D88 MADD X8, X11, X27, X28
	0x03B11D8C STR D0, [X8 + 0x20]
	0x03B11D90 STR S1, [X8 + 0x28]
	0x03B11D94 LDR X9, [X22]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8D2000
	007 Move X20, 0x5E3000
	008 Move W8, [X21+1670]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x649000
	016 Move X0, [X0+1872]
	017 Call 0x1C17CF4
	018 Move X0, 0x649000
	019 Move X0, [X0+1888]
	020 Call 0x1C17CF4
	021 Move X0, 0x649000
	022 Move X0, [X0+1896]
	023 Call 0x1C17CF4
	024 Move X0, 0x5E3000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x648000
	028 Move X0, [X0+1568]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1670], W8
	032 Move X0, [X20]
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {143}
	047 Compare X19, 0
	048 JumpIfEqual {149}
	049 Move X0, X19
	050 Move X1, X31
	051 Call Object.GetInstanceID, X0
	052 Move X20, 0x648000
	053 Move X20, [X20+1568]
	054 Move W19, W0
	055 Move X8, [X20]
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X20]
	062 Move X8, [X8+184]
	063 Move X0, [X8+16]
	064 Compare X0, 0
	065 JumpIfEqual {149}
	066 Move X8, 0x649000
	067 Move X8, [X8+1888]
	068 Add X2, X31, 8
	069 Move W1, W19
	070 Move X3, [X8]
	071 Call Dictionary`2<Int32, Int64>.TryGetValue, X0, X1, X2
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {134}
	076 Move X0, [X20]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X20]
	082 Move X8, [X0+184]
	083 Move X0, [X8+8]
	084 Compare X0, 0
	085 JumpIfEqual {149}
	086 Move X8, 0x649000
	087 Move X1, [X31+8]
	088 Move X8, [X8+1872]
	089 Add X2, X31, 0
	090 Move X3, [X8]
	091 Call Dictionary`2<Int64, Object>.TryGetValue, X0, X1, X2
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {134}
	096 Move X8, [X31]
	097 Compare X8, 0
	098 JumpIfEqual {149}
	099 Move W9, [X8+48]
	100 Subtract W9, W9, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X8+48], W9
	103 Move X0, [X20]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X20]
	109 Move X8, [X0+184]
	110 Move X0, [X8+24]
	111 Compare X0, 0
	112 JumpIfEqual {149}
	113 Move X9, 0x649000
	114 Move X1, [X31]
	115 Move X9, [X9+1896]
	116 Move W10, [X0+28]
	117 Move X8, [X0+16]
	118 Move X9, [X9]
	119 Add W10, W10, 1
	120 Move [X0+28], W10
	121 Compare X8, 0
	122 JumpIfEqual {149}
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Move W11, [X8+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W9, W10, 1
	127 Add X8, X8, X10
	128 Move [X0+24], W9
	129 Move [X8+32], X1
	130 Move X8, [X9+32]
	131 Move X8, [X8+192]
	132 Move X2, [X8+112]
	133 Call List`1<Object>.AddWithResize, X0, X1
	134 Move X0, [X20]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {140}
	138 Call 0x1C17DFC
	139 Move X0, [X20]
	140 Move X8, [X0+184]
	141 Move W9, 1
	142 Move [X8+32], W9
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X30, [X31+16]
	146 Move X21, [X31+24]
	147 Add X31, X31, 48
	148 Return 
	149 Call 0x1C17F20

Method: System.Void CopyMaterialPresetProperties(UnityEngine.Material source, UnityEngine.Material destination)

Disassembly:
	0x03B111FC ADD X8, X20, X24
	0x03B11200 STR D0, [X8, X29, LSL #3]
	0x03B11204 LDR X8, [X19 + 0x30]
	0x03B11208 CBZ X8, 0x3B11448
	0x03B1120C LDR W9, [X8 + 0x18]
	0x03B11210 CMP W28, W9
	0x03B11214 B.CS 0x3B11444
	0x03B11218 LDR X9, [X21]
	0x03B1121C ADD X8, X8, X24
	0x03B11220 LDR X9, [X9 + 0xB8]
	0x03B11224 LDR V0, [X9]
	0x03B11228 STR D0, [X8, X29, LSL #3]
	0x03B1122C LDR X0, [X23]
	0x03B11230 LDR X20, [X19 + 0x38]
	0x03B11234 LDR W8, [X0 + 0xE0]
	0x03B11238 CBNZ W8, 0x3B11244
	0x03B1123C BL 0x1C16DFC
	0x03B11240 LDR X0, [X23]
	0x03B11244 CBZ X20, 0x3B11448
	0x03B11248 LDR W8, [X20 + 0x18]
	0x03B1124C CMP W28, W8
	0x03B11250 B.CS 0x3B11444
	0x03B11254 LDR X8, [X0 + 0xB8]
	0x03B11258 ADD X9, X20, X27
	0x03B1125C LDR W8, [X8]
	0x03B11260 STR W8, [X9, X29, LSL #2]
	0x03B11264 LDR X8, [X19 + 0x18]
	0x03B11268 CBZ X8, 0x3B11448
	0x03B1126C LDR W9, [X8 + 0x18]
	0x03B11270 CMP W28, W9
	0x03B11274 B.CS 0x3B11444
	0x03B11278 LDR X9, [X23]
	0x03B1127C ADD X8, X8, X25
	0x03B11280 LDR X9, [X9 + 0xB8]
	0x03B11284 LDUR V0, [X9 + 0x4]
	0x03B11288 LDR V1, [X9 + 0xC]
	0x03B1128C STR D0, [X8 + 0x20]
	0x03B11290 STR S1, [X8 + 0x28]
	0x03B11294 LDR X8, [X19 + 0x20]
	0x03B11298 CBZ X8, 0x3B11448
	0x03B1129C LDR W9, [X8 + 0x18]
	0x03B112A0 CMP W28, W9
	0x03B112A4 B.CS 0x3B11444
	0x03B112A8 LDR X9, [X23]
	0x03B112AC ADD X8, X8, X26
	0x03B112B0 ADD X25, X25, 0xC
	0x03B112B4 LDR X9, [X9 + 0xB8]
	0x03B112B8 LDR V0, [X9 + 0x1]
	0x03B112BC STR V0, [X8, X29, LSL]
	0x03B112C0 ADD X29, X29, 0x1
	0x03B112C4 CMP X29, 0x4
	0x03B112C8 B.NE 0x3B1115C
	0x03B112CC LDR X8, [X19 + 0x40]
	0x03B112D0 CBZ X8, 0x3B11448
	0x03B112D4 LDR W9, [X8 + 0x18]
	0x03B112D8 LDR X13, [X31 + 0x8]
	0x03B112DC CMP W13, W9
	0x03B112E0 B.CS 0x3B11444
	0x03B112E4 SXTW X10, W13
	0x03B112E8 ORR X10, X10, 0x1
	0x03B112EC ADD X11, X8, W13, 0x2, SXTW
	0x03B112F0 CMP W10, W9
	0x03B112F4 STR W22, [X11 + 0x20]
	0x03B112F8 B.CS 0x3B11444
	0x03B112FC ADD W11, W13, 0x2
	0x03B11300 ORR W12, W22, 0x1
	0x03B11304 ADD X10, X8, X10, 0x2, LSL
	0x03B11308 CMP W11, W9
	0x03B1130C STR W12, [X10 + 0x20]
	0x03B11310 B.CS 0x3B11444
	0x03B11314 ADD X12, X8, W11, 0x2, SXTW
	0x03B11318 ADD W11, W13, 0x3
	0x03B1131C ORR W10, W22, 0x2
	0x03B11320 CMP W11, W9
	0x03B11324 STR W10, [X12 + 0x20]
	0x03B11328 B.CS 0x3B11444
	0x03B1132C ADD X12, X8, W11, 0x2, SXTW
	0x03B11330 ADD W11, W13, 0x4
	0x03B11334 CMP W11, W9
	0x03B11338 STR W10, [X12 + 0x20]
	0x03B1133C B.CS 0x3B11444
	0x03B11340 ADD W10, W13, 0x5
	0x03B11344 ORR W12, W22, 0x3
	0x03B11348 ADD X11, X8, W11, 0x2, SXTW
	0x03B1134C CMP W10, W9
	0x03B11350 STR W12, [X11 + 0x20]
	0x03B11354 B.CS 0x3B11444
	0x03B11358 ADD X8, X8, W10, 0x2, SXTW
	0x03B1135C LDR W9, [X31 + 0x4]
	0x03B11360 STR W22, [X8 + 0x20]
	0x03B11364 ADD X22, X22, 0x4
	0x03B11368 ADD W8, W22, 0x3
	0x03B1136C CMP W22, 0x0
	0x03B11370 CSEL W8, W8, W22, LT
	0x03B11374 CMP W9, W8, ASR
	0x03B11378 ADD W13, W13, 0x6
	0x03B1137C B.GT 0x3B1112C
	0x03B11380 LDR X0, [X19]
	0x03B11384 CBZ X0, 0x3B11448
	0x03B11388 LDR X1, [X19 + 0x10]
	0x03B1138C MOV X2, X31
	0x03B11390 BL 0x3C17F08
	0x03B11394 LDR X0, [X19]
	0x03B11398 CBZ X0, 0x3B11448
	0x03B1139C LDR X1, [X19 + 0x18]
	0x03B113A0 MOV X2, X31
	0x03B113A4 BL 0x3C17FB4
	0x03B113A8 LDR X0, [X19]
	0x03B113AC CBZ X0, 0x3B11448
	0x03B113B0 LDR X1, [X19 + 0x20]
	0x03B113B4 MOV X2, X31
	0x03B113B8 BL 0x3C18060
	0x03B113BC LDR X0, [X19]
	0x03B113C0 CBZ X0, 0x3B11448
	0x03B113C4 LDR X1, [X19 + 0x40]
	0x03B113C8 MOV X2, X31
	0x03B113CC BL 0x3C18FF0
	0x03B113D0 LDR X0, [X23]
	0x03B113D4 LDR X20, [X19]
	0x03B113D8 LDR W8, [X0 + 0xE0]
	0x03B113DC CBNZ W8, 0x3B113E8
	0x03B113E0 BL 0x1C16DFC
	0x03B113E4 LDR X0, [X23]
	0x03B113E8 LDR X8, [X0 + 0xB8]
	0x03B113EC LDR X9, [X8 + 0x30]
	0x03B113F0 LDR V0, [X8 + 0x2]
	0x03B113F4 STR X9, [X31 + 0x40]
	0x03B113F8 STR V0, [X31 + 0x3]
	0x03B113FC CBZ X20, 0x3B11448
	0x03B11400 LDR V0, [X31 + 0x3]
	0x03B11404 LDR X8, [X31 + 0x40]
	0x03B11408 ADD X1, X31, 0x10
	0x03B1140C MOV X0, X20
	0x03B11410 MOV X2, X31
	0x03B11414 STR V0, [X31 + 0x1]
	0x03B11418 STR X8, [X31 + 0x20]
	0x03B1141C BL 0x3C17814
	0x03B11420 STR X31, [X19 + 0x48]
	0x03B11424 LDP X20, X19, [X31 + 0xA0]
	0x03B11428 LDP X22, X21, [X31 + 0x90]
	0x03B1142C LDP X24, X23, [X31 + 0x80]
	0x03B11430 LDP X26, X25, [X31 + 0x70]
	0x03B11434 LDP X28, X27, [X31 + 0x60]
	0x03B11438 LDP X29, X30, [X31 + 0x50]
	0x03B1143C ADD X31, X31, 0xB0
	0x03B11440 RET
	0x03B11444 BL 0x1C16F28
	0x03B11448 BL 0x1C16F20
	0x03B1144C SUB X31, X31, 0xC0
	0x03B11450 STP X29, X30, [X31 + 0x60]
	0x03B11454 STP X28, X27, [X31 + 0x70]
	0x03B11458 STP X26, X25, [X31 + 0x80]
	0x03B1145C STP X24, X23, [X31 + 0x90]
	0x03B11460 STP X22, X21, [X31 + 0xA0]
	0x03B11464 STP X20, X19, [X31 + 0xB0]

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x8D2000
	012 Move X22, 0x648000
	013 Move W8, [X21+1671]
	014 Move X22, [X22+824]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x648000
	022 Move X0, [X0+824]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1671], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Compare X20, 0
	032 JumpIfEqual {182}
	033 Move X8, [X22]
	034 Move X0, X20
	035 Move X2, X31
	036 Move X8, [X8+184]
	037 Move W1, [X8+84]
	038 Call Material.HasProperty, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {171}
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Compare X19, 0
	049 JumpIfEqual {182}
	050 Move X8, [X22]
	051 Move X0, X19
	052 Move X2, X31
	053 Move X8, [X8+184]
	054 Move W1, [X8+84]
	055 Call Material.HasProperty, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {171}
	060 Move X0, [X22]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X22]
	066 Move X8, [X0+184]
	067 Move X0, X19
	068 Move X2, X31
	069 Move W1, [X8]
	070 Call Material.GetTexture, X0, X1
	071 Move X8, [X22]
	072 Move X21, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Move X8, [X8+184]
	076 Move W1, [X8+84]
	077 Call Material.GetFloat, X0, X1
	078 Move X8, [X22]
	079 Move X0, X19
	080 Move X2, X31
	081 Move V9, V0
	082 Move X8, [X8+184]
	083 Move W1, [X8+104]
	084 Call Material.GetFloat, X0, X1
	085 Move X8, [X22]
	086 Move X0, X19
	087 Move X2, X31
	088 Move V10, V0
	089 Move X8, [X8+184]
	090 Move W1, [X8+108]
	091 Call Material.GetFloat, X0, X1
	092 Move X8, [X22]
	093 Move X0, X19
	094 Move X2, X31
	095 Move V11, V0
	096 Move X8, [X8+184]
	097 Move W1, [X8+48]
	098 Call Material.GetFloat, X0, X1
	099 Move X8, [X22]
	100 Move X0, X19
	101 Move X2, X31
	102 Move V12, V0
	103 Move X8, [X8+184]
	104 Move W1, [X8+52]
	105 Call Material.GetFloat, X0, X1
	106 Move X0, X19
	107 Move X1, X20
	108 Move X2, X31
	109 Move V8, V0
	110 Call Material.CopyPropertiesFromMaterial, X0, X1
	111 Move X0, X20
	112 Move X1, X31
	113 Call Material.get_shaderKeywords, X0
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call Material.set_shaderKeywords, X0, X1
	118 Move X8, [X22]
	119 Move X0, X19
	120 Move X2, X21
	121 Move X3, X31
	122 Move X8, [X8+184]
	123 Move W1, [X8]
	124 Call Material.SetTexture, X0, X1, X2
	125 Move X8, [X22]
	126 Move X0, X19
	127 Move V0, V9
	128 Move X2, X31
	129 Move X8, [X8+184]
	130 Move W1, [X8+84]
	131 Call Material.SetFloat, X0, X1, V0
	132 Move X8, [X22]
	133 Move X0, X19
	134 Move V0, V10
	135 Move X2, X31
	136 Move X8, [X8+184]
	137 Move W1, [X8+104]
	138 Call Material.SetFloat, X0, X1, V0
	139 Move X8, [X22]
	140 Move X0, X19
	141 Move V0, V11
	142 Move X2, X31
	143 Move X8, [X8+184]
	144 Move W1, [X8+108]
	145 Call Material.SetFloat, X0, X1, V0
	146 Move X8, [X22]
	147 Move X0, X19
	148 Move V0, V12
	149 Move X2, X31
	150 Move X8, [X8+184]
	151 Move W1, [X8+48]
	152 Call Material.SetFloat, X0, X1, V0
	153 Move X8, [X22]
	154 Move X0, X19
	155 Move V0, V8
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X8, [X8+184]
	159 Move X22, [X31+48]
	160 Move X21, [X31+56]
	161 Move X30, [X31+40]
	162 Move D9, [X31+24]
	163 Move D8, [X31+32]
	164 Move W1, [X8+52]
	165 Move D11, [X31+8]
	166 Move D10, [X31+16]
	167 Move X2, X31
	168 Move V12, [X31+80]
	169 Call Material.SetFloat, X0, X1, V0
	170 Return 
	171 Move X20, [X31+64]
	172 Move X19, [X31+72]
	173 Move X22, [X31+48]
	174 Move X21, [X31+56]
	175 Move X30, [X31+40]
	176 Move D9, [X31+24]
	177 Move D8, [X31+32]
	178 Move D11, [X31+8]
	179 Move D10, [X31+16]
	180 Move V12, [X31+80]
	181 Return 
	182 Call 0x1C17F20

