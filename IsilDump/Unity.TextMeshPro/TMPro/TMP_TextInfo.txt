Type: TMPro.TMP_TextInfo

Method: System.Void .ctor()

Disassembly:
	0x03B1CE04 BL 0x1C16F20
	0x03B1CE08 STP X30, X21, [X31 - 0x20]!
	0x03B1CE0C STP X20, X19, [X31 + 0x10]
	0x03B1CE10 ADRP X20, 0x8C6000
	0x03B1CE14 ADRP X21, 0x63D000
	0x03B1CE18 LDRB W8, [X20 + 0x708]
	0x03B1CE1C LDR X21, [X21 + 0xA80]
	0x03B1CE20 MOV W19, W0
	0x03B1CE24 TBNZ X8, 0x0, 0x3B1CE3C
	0x03B1CE28 ADRP X0, 0x63D000
	0x03B1CE2C LDR X0, [X0 + 0xA80]
	0x03B1CE30 BL 0x1C16CF4
	0x03B1CE34 MOVZ W8, 0x1
	0x03B1CE38 STRB W8, [X20 + 0x708]
	0x03B1CE3C LDR X0, [X21]
	0x03B1CE40 CBZ X0, 0x3B1CE78
	0x03B1CE44 LDR W8, [X0 + 0x10]
	0x03B1CE48 MOV W9, W19
	0x03B1CE4C SUB W8, W8, 0x1
	0x03B1CE50 CMP X9, W8, SXTW
	0x03B1CE54 B.GT 0x3B1CE68
	0x03B1CE58 MOV W1, W19
	0x03B1CE5C MOV X2, X31
	0x03B1CE60 BL 0x3222A1C
	0x03B1CE64 AND W19, W0, 0xFFFF
	0x03B1CE68 MOV W0, W19
	0x03B1CE6C LDP X20, X19, [X31 + 0x10]
	0x03B1CE70 LDP X30, X21, [X31], #0x20
	0x03B1CE74 RET
	0x03B1CE78 BL 0x1C16F20
	0x03B1CE7C STP X30, X21, [X31 - 0x20]!
	0x03B1CE80 STP X20, X19, [X31 + 0x10]
	0x03B1CE84 ADRP X20, 0x8C6000
	0x03B1CE88 ADRP X21, 0x63D000
	0x03B1CE8C LDRB W8, [X20 + 0x709]
	0x03B1CE90 LDR X21, [X21 + 0xA88]
	0x03B1CE94 MOV W19, W0
	0x03B1CE98 TBNZ X8, 0x0, 0x3B1CEB0
	0x03B1CE9C ADRP X0, 0x63D000
	0x03B1CEA0 LDR X0, [X0 + 0xA88]
	0x03B1CEA4 BL 0x1C16CF4
	0x03B1CEA8 MOVZ W8, 0x1
	0x03B1CEAC STRB W8, [X20 + 0x709]
	0x03B1CEB0 LDR X0, [X21]
	0x03B1CEB4 CBZ X0, 0x3B1CEEC
	0x03B1CEB8 LDR W8, [X0 + 0x10]
	0x03B1CEBC MOV W9, W19
	0x03B1CEC0 SUB W8, W8, 0x1
	0x03B1CEC4 CMP X9, W8, SXTW
	0x03B1CEC8 B.GT 0x3B1CEDC
	0x03B1CECC MOV W1, W19
	0x03B1CED0 MOV X2, X31
	0x03B1CED4 BL 0x3222A1C
	0x03B1CED8 AND W19, W0, 0xFFFF
	0x03B1CEDC MOV W0, W19
	0x03B1CEE0 LDP X20, X19, [X31 + 0x10]
	0x03B1CEE4 LDP X30, X21, [X31], #0x20
	0x03B1CEE8 RET
	0x03B1CEEC BL 0x1C16F20
	0x03B1CEF0 MOVN W8, 0xD800
	0x03B1CEF4 ADD W8, W0, W8
	0x03B1CEF8 CMP W8, 0x3FE
	0x03B1CEFC CSET W0, CC
	0x03B1CF00 RET
	0x03B1CF04 MOVN W8, 0xDC00
	0x03B1CF08 ADD W8, W0, W8
	0x03B1CF0C CMP W8, 0x3FE
	0x03B1CF10 CSET W0, CC
	0x03B1CF14 RET
	0x03B1CF18 MOVZ W9, 0x2400
	0x03B1CF1C ADD W8, W1, W0, 0xA, LSL
	0x03B1CF20 MOVK W9, 0xFCA00000
	0x03B1CF24 ADD W0, W8, W9
	0x03B1CF28 RET

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x8C7000
	011 Move X25, 0x63E000
	012 Move X24, 0x63E000
	013 Move X23, 0x63E000
	014 Move X22, 0x63E000
	015 Move X21, 0x63E000
	016 Move X20, 0x63E000
	017 Move X25, [X25+544]
	018 Move W8, [X26+1783]
	019 Move X24, [X24+2656]
	020 Move X23, [X23+2664]
	021 Move X22, [X22+776]
	022 Move X21, [X21+2672]
	023 Move X20, [X20+2680]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x63E000
	030 Move X0, [X0+544]
	031 Call 0x1C17CF4
	032 Move X0, 0x63E000
	033 Move X0, [X0+776]
	034 Call 0x1C17CF4
	035 Move X0, 0x63E000
	036 Move X0, [X0+2664]
	037 Call 0x1C17CF4
	038 Move X0, 0x63E000
	039 Move X0, [X0+2680]
	040 Call 0x1C17CF4
	041 Move X0, 0x63E000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0x63E000
	045 Move X0, [X0+2656]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+1783], W8
	049 Move X0, X19
	050 Move X1, X31
	051 Call Object..ctor, X0
	052 Move X0, [X25]
	053 Move W1, 8
	054 Call 0x1C17D6C
	055 Move [X19+56], X0
	056 Move X0, [X24]
	057 Move W1, 16
	058 Call 0x1C17D6C
	059 Move [X19+64], X0
	060 Move X0, [X23]
	061 Move W1, W31
	062 Call 0x1C17D6C
	063 Move [X19+72], X0
	064 Move X0, [X22]
	065 Move W1, 2
	066 Call 0x1C17D6C
	067 Move [X19+80], X0
	068 Move X0, [X21]
	069 Move W1, 4
	070 Call 0x1C17D6C
	071 Move [X19+88], X0
	072 Move X0, [X20]
	073 Move W1, 1
	074 Call 0x1C17D6C
	075 Move [X19+96], X0
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X22, [X31+48]
	079 Move X21, [X31+56]
	080 Move X24, [X31+32]
	081 Move X23, [X31+40]
	082 Move X26, [X31+16]
	083 Move X25, [X31+24]
	084 Move X30, [X31+80]
	085 Return 

Method: System.Void .ctor(System.Int32 characterCount)

Disassembly:
	0x03B1CF2C STRH W31, [X0 + 0x8]
	0x03B1CF30 STR X31, [X0]
	0x03B1CF34 RET
	0x03B1CF38 CMP W1, 0x10
	0x03B1CF3C B.LE 0x3B1CF68
	0x03B1CF40 CMP W1, 0x80
	0x03B1CF44 B.LE 0x3B1CFA0
	0x03B1CF48 CMP W1, 0x100
	0x03B1CF4C B.EQ 0x3B1CFE0
	0x03B1CF50 CMP W1, 0x200
	0x03B1CF54 B.NE 0x3B1CFC0
	0x03B1CF58 LDRB W8, [X0 + 0x4]
	0x03B1CF5C ADD W8, W8, 0x1
	0x03B1CF60 STRB W8, [X0 + 0x4]
	0x03B1CF64 B 0x3B1D02C
	0x03B1CF68 SUB W9, W1, 0x1
	0x03B1CF6C CMP W9, 0x7
	0x03B1CF70 MOV W8, W31
	0x03B1CF74 B.HI 0x3B1CFC8
	0x03B1CF78 ADRP X10, 0xFFFFFFFFFD07B000
	0x03B1CF7C ADD X10, X10, 0xD7C
	0x03B1CF80 ADR X11, 0x10
	0x03B1CF84 LDRB W12, [X10, X9, LSL]
	0x03B1CF88 ADD X11, X11, X12, 0x2, LSL
	0x03B1CF8C BR X11
	0x03B1CF90 LDRB W8, [X0]
	0x03B1CF94 ADD W8, W8, 0x1
	0x03B1CF98 STRB W8, [X0]
	0x03B1CF9C B 0x3B1D02C
	0x03B1CFA0 CMP W1, 0x40
	0x03B1CFA4 B.EQ 0x3B1D020
	0x03B1CFA8 CMP W1, 0x80
	0x03B1CFAC B.NE 0x3B1CFC0
	0x03B1CFB0 LDRB W8, [X0 + 0x5]
	0x03B1CFB4 ADD W8, W8, 0x1
	0x03B1CFB8 STRB W8, [X0 + 0x5]
	0x03B1CFBC B 0x3B1D02C
	0x03B1CFC0 MOV W8, W31
	0x03B1CFC4 B 0x3B1D02C
	0x03B1CFC8 CMP W1, 0x10
	0x03B1CFCC B.NE 0x3B1D02C
	0x03B1CFD0 LDRB W8, [X0 + 0x7]
	0x03B1CFD4 ADD W8, W8, 0x1
	0x03B1CFD8 STRB W8, [X0 + 0x7]
	0x03B1CFDC B 0x3B1D02C
	0x03B1CFE0 LDRB W8, [X0 + 0x6]
	0x03B1CFE4 ADD W8, W8, 0x1
	0x03B1CFE8 STRB W8, [X0 + 0x6]
	0x03B1CFEC B 0x3B1D02C
	0x03B1CFF0 LDRB W8, [X0 + 0x1]
	0x03B1CFF4 ADD W8, W8, 0x1
	0x03B1CFF8 STRB W8, [X0 + 0x1]
	0x03B1CFFC B 0x3B1D02C
	0x03B1D000 LDRB W8, [X0 + 0x2]
	0x03B1D004 ADD W8, W8, 0x1
	0x03B1D008 STRB W8, [X0 + 0x2]
	0x03B1D00C B 0x3B1D02C
	0x03B1D010 LDRB W8, [X0 + 0x8]
	0x03B1D014 ADD W8, W8, 0x1
	0x03B1D018 STRB W8, [X0 + 0x8]
	0x03B1D01C B 0x3B1D02C
	0x03B1D020 LDRB W8, [X0 + 0x3]
	0x03B1D024 ADD W8, W8, 0x1
	0x03B1D028 STRB W8, [X0 + 0x3]
	0x03B1D02C MOV W0, W8
	0x03B1D030 RET
	0x03B1D034 CMP W1, 0x10
	0x03B1D038 B.LE 0x3B1D06C
	0x03B1D03C CMP W1, 0x80
	0x03B1D040 B.LE 0x3B1D0AC
	0x03B1D044 CMP W1, 0x100
	0x03B1D048 B.EQ 0x3B1D0FC
	0x03B1D04C CMP W1, 0x200
	0x03B1D050 B.NE 0x3B1D0D4
	0x03B1D054 LDRB W8, [X0 + 0x4]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x8C7000
	012 Move X26, 0x63E000
	013 Move X25, 0x63E000
	014 Move X24, 0x63E000
	015 Move X23, 0x63E000
	016 Move X22, 0x63E000
	017 Move X21, 0x63E000
	018 Move X26, [X26+544]
	019 Move W8, [X27+1784]
	020 Move X25, [X25+2656]
	021 Move X24, [X24+2664]
	022 Move X23, [X23+776]
	023 Move X22, [X22+2672]
	024 Move X21, [X21+2680]
	025 Move W20, W1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x63E000
	032 Move X0, [X0+544]
	033 Call 0x1C17CF4
	034 Move X0, 0x63E000
	035 Move X0, [X0+776]
	036 Call 0x1C17CF4
	037 Move X0, 0x63E000
	038 Move X0, [X0+2664]
	039 Call 0x1C17CF4
	040 Move X0, 0x63E000
	041 Move X0, [X0+2680]
	042 Call 0x1C17CF4
	043 Move X0, 0x63E000
	044 Move X0, [X0+2672]
	045 Call 0x1C17CF4
	046 Move X0, 0x63E000
	047 Move X0, [X0+2656]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X27+1784], W8
	051 Move X0, X19
	052 Move X1, X31
	053 Call Object..ctor, X0
	054 Move X0, [X26]
	055 Move W1, W20
	056 Call 0x1C17D6C
	057 Move [X19+56], X0
	058 Move X0, [X25]
	059 Move W1, 16
	060 Call 0x1C17D6C
	061 Move [X19+64], X0
	062 Move X0, [X24]
	063 Move W1, W31
	064 Call 0x1C17D6C
	065 Move [X19+72], X0
	066 Move X0, [X23]
	067 Move W1, 2
	068 Call 0x1C17D6C
	069 Move [X19+80], X0
	070 Move X0, [X22]
	071 Move W1, 4
	072 Call 0x1C17D6C
	073 Move [X19+88], X0
	074 Move X0, [X21]
	075 Move W1, 1
	076 Call 0x1C17D6C
	077 Move [X19+96], X0
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Move X27, [X31+88]
	088 Return 

Method: System.Void .ctor(TMPro.TMP_Text textComponent)

Disassembly:
	0x03B1D058 SUB W9, W8, 0x1
	0x03B1D05C CMP W8, 0x2
	0x03B1D060 CSEL W8, W31, W9, CC
	0x03B1D064 STRB W8, [X0 + 0x4]
	0x03B1D068 B 0x3B1D170
	0x03B1D06C SUB W9, W1, 0x1
	0x03B1D070 CMP W9, 0x7
	0x03B1D074 MOV W8, W31
	0x03B1D078 B.HI 0x3B1D0DC
	0x03B1D07C ADRP X10, 0xFFFFFFFFFD07A000
	0x03B1D080 ADD X10, X10, 0xD84
	0x03B1D084 ADR X11, 0x10
	0x03B1D088 LDRB W12, [X10, X9, LSL]
	0x03B1D08C ADD X11, X11, X12, 0x2, LSL
	0x03B1D090 BR X11
	0x03B1D094 LDRB W8, [X0]
	0x03B1D098 SUB W9, W8, 0x1
	0x03B1D09C CMP W8, 0x2
	0x03B1D0A0 CSEL W8, W31, W9, CC
	0x03B1D0A4 STRB W8, [X0]
	0x03B1D0A8 B 0x3B1D170
	0x03B1D0AC CMP W1, 0x40
	0x03B1D0B0 B.EQ 0x3B1D15C
	0x03B1D0B4 CMP W1, 0x80
	0x03B1D0B8 B.NE 0x3B1D0D4
	0x03B1D0BC LDRB W8, [X0 + 0x5]
	0x03B1D0C0 SUB W9, W8, 0x1
	0x03B1D0C4 CMP W8, 0x2
	0x03B1D0C8 CSEL W8, W31, W9, CC
	0x03B1D0CC STRB W8, [X0 + 0x5]
	0x03B1D0D0 B 0x3B1D170
	0x03B1D0D4 MOV W8, W31
	0x03B1D0D8 B 0x3B1D170
	0x03B1D0DC CMP W1, 0x10
	0x03B1D0E0 B.NE 0x3B1D170
	0x03B1D0E4 LDRB W8, [X0 + 0x7]
	0x03B1D0E8 SUB W9, W8, 0x1
	0x03B1D0EC CMP W8, 0x2
	0x03B1D0F0 CSEL W8, W31, W9, CC
	0x03B1D0F4 STRB W8, [X0 + 0x7]
	0x03B1D0F8 B 0x3B1D170
	0x03B1D0FC LDRB W8, [X0 + 0x6]
	0x03B1D100 SUB W9, W8, 0x1
	0x03B1D104 CMP W8, 0x2
	0x03B1D108 CSEL W8, W31, W9, CC
	0x03B1D10C STRB W8, [X0 + 0x6]
	0x03B1D110 B 0x3B1D170
	0x03B1D114 LDRB W8, [X0 + 0x1]
	0x03B1D118 SUB W9, W8, 0x1
	0x03B1D11C CMP W8, 0x2
	0x03B1D120 CSEL W8, W31, W9, CC
	0x03B1D124 STRB W8, [X0 + 0x1]
	0x03B1D128 B 0x3B1D170
	0x03B1D12C LDRB W8, [X0 + 0x2]
	0x03B1D130 SUB W9, W8, 0x1
	0x03B1D134 CMP W8, 0x2
	0x03B1D138 CSEL W8, W31, W9, CC
	0x03B1D13C STRB W8, [X0 + 0x2]
	0x03B1D140 B 0x3B1D170
	0x03B1D144 LDRB W8, [X0 + 0x8]
	0x03B1D148 SUB W9, W8, 0x1
	0x03B1D14C CMP W8, 0x2
	0x03B1D150 CSEL W8, W31, W9, CC
	0x03B1D154 STRB W8, [X0 + 0x8]
	0x03B1D158 B 0x3B1D170
	0x03B1D15C LDRB W8, [X0 + 0x3]
	0x03B1D160 SUB W9, W8, 0x1
	0x03B1D164 CMP W8, 0x2
	0x03B1D168 CSEL W8, W31, W9, CC
	0x03B1D16C STRB W8, [X0 + 0x3]
	0x03B1D170 MOV W0, W8
	0x03B1D174 RET
	0x03B1D178 STP W1, W2, [X0]
	0x03B1D17C RET
	0x03B1D180 SUB X31, X31, 0x60
	0x03B1D184 STP D11, D10, [X31 + 0x10]
	0x03B1D188 STP D9, D8, [X31 + 0x20]
	0x03B1D18C STR X30, [X31 + 0x30]
	0x03B1D190 STP X22, X21, [X31 + 0x40]
	0x03B1D194 STP X20, X19, [X31 + 0x50]
	0x03B1D198 ADRP X22, 0x8C5000
	0x03B1D19C STP S0, S1, [X31]
	0x03B1D1A0 STR S2, [X31 + 0x8]
	0x03B1D1A4 ADRP X19, 0x63B000
	0x03B1D1A8 LDRB W8, [X22 + 0x70A]
	0x03B1D1AC LDR X19, [X19 + 0xBB8]
	0x03B1D1B0 MOV X20, X1
	0x03B1D1B4 MOV V10.16B, V2.16B
	0x03B1D1B8 MOV V8.16B, V1.16B
	0x03B1D1BC MOV V9.16B, V0.16B
	0x03B1D1C0 MOV X21, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x8C6000
	012 Move X26, 0x63D000
	013 Move X25, 0x63D000
	014 Move X24, 0x63D000
	015 Move X23, 0x63D000
	016 Move X22, 0x63D000
	017 Move X21, 0x63D000
	018 Move X26, [X26+544]
	019 Move W8, [X27+1785]
	020 Move X25, [X25+2656]
	021 Move X24, [X24+2664]
	022 Move X23, [X23+776]
	023 Move X22, [X22+2672]
	024 Move X21, [X21+2680]
	025 Move X20, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x63D000
	032 Move X0, [X0+544]
	033 Call 0x1C17CF4
	034 Move X0, 0x63D000
	035 Move X0, [X0+776]
	036 Call 0x1C17CF4
	037 Move X0, 0x63D000
	038 Move X0, [X0+2664]
	039 Call 0x1C17CF4
	040 Move X0, 0x63D000
	041 Move X0, [X0+2680]
	042 Call 0x1C17CF4
	043 Move X0, 0x63D000
	044 Move X0, [X0+2672]
	045 Call 0x1C17CF4
	046 Move X0, 0x63D000
	047 Move X0, [X0+2656]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X27+1785], W8
	051 Move X0, X19
	052 Move X1, X31
	053 Call Object..ctor, X0
	054 Move [X19+16], X20
	055 Move X0, [X26]
	056 Move W1, 8
	057 Call 0x1C17D6C
	058 Move [X19+56], X0
	059 Move X0, [X25]
	060 Move W1, 4
	061 Call 0x1C17D6C
	062 Move [X19+64], X0
	063 Move X0, [X24]
	064 Move W1, W31
	065 Call 0x1C17D6C
	066 Move [X19+72], X0
	067 Move X0, [X23]
	068 Move W1, 2
	069 Call 0x1C17D6C
	070 Move [X19+80], X0
	071 Move X0, [X22]
	072 Move W1, 4
	073 Call 0x1C17D6C
	074 Move [X19+88], X0
	075 Move X0, [X21]
	076 Move W1, 1
	077 Call 0x1C17D6C
	078 Move [X19+96], X0
	079 Compare X0, 0
	080 JumpIfEqual {106}
	081 Compare X20, 0
	082 JumpIfEqual {106}
	083 Move X8, [X20]
	084 Move X21, X0
	085 Move X0, X20
	086 Move X9, [X8+1544]
	087 Move X1, [X8+1552]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move W8, [X21+24]
	090 Compare W8, 0
	091 JumpIfEqual {107}
	092 Move W8, 1
	093 Move [X21+32], X0
	094 Move [X19+52], W8
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Move X22, [X31+48]
	098 Move X21, [X31+56]
	099 Move X24, [X31+32]
	100 Move X23, [X31+40]
	101 Move X26, [X31+16]
	102 Move X25, [X31+24]
	103 Move X30, [X31+80]
	104 Move X27, [X31+88]
	105 Return 
	106 Call 0x1C17F20
	107 Call 0x1C17F28

Method: System.Void Clear()

Disassembly:
	0x03B1D1C4 TBNZ X8, 0x0, 0x3B1D1DC
	0x03B1D1C8 ADRP X0, 0x63B000
	0x03B1D1CC LDR X0, [X0 + 0xBB8]
	0x03B1D1D0 BL 0x1C16CF4
	0x03B1D1D4 MOVZ W8, 0x1
	0x03B1D1D8 STRB W8, [X22 + 0x70A]
	0x03B1D1DC LDR X0, [X19]
	0x03B1D1E0 LDR W8, [X0 + 0xE0]
	0x03B1D1E4 CBNZ W8, 0x3B1D1EC
	0x03B1D1E8 BL 0x1C16DFC
	0x03B1D1EC MOV X0, X21
	0x03B1D1F0 MOV V0.16B, V9.16B
	0x03B1D1F4 MOV V1.16B, V8.16B
	0x03B1D1F8 MOV V2.16B, V10.16B
	0x03B1D1FC MOV X1, X20
	0x03B1D200 MOV W2, W31
	0x03B1D204 BL 0x3B1D2E4
	0x03B1D208 CBZ X21, 0x3B1D2DC
	0x03B1D20C MOV W19, W0
	0x03B1D210 MOV X0, X21
	0x03B1D214 MOV X1, X31
	0x03B1D218 BL 0x3AF8E0C
	0x03B1D21C ADD X2, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X11, [X0+96]
	003 Move [X0+24], X31
	004 Move [X0+32], X31
	005 Move [X0+48], W31
	006 Move [X0+40], X31
	007 Compare X11, 0
	008 JumpIfEqual {24}
	009 Move W8, [X11+24]
	010 Move X9, X8
	011 ShiftRight X9, 32
	012 And X9, X9, 0x7FFFFFFF
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X9, X31
	015 Move X10, W8
	016 Add X11, X11, 40
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X9, X9, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move [X11+80], W31
	021 Move X30, [X31+16]
	022 Return 
	023 Call 0x1C17F28
	024 Call 0x1C17F20

Method: System.Void ClearAllData()

Disassembly:
	0x03B1D220 MOV V0.16B, V9.16B
	0x03B1D224 MOV V1.16B, V8.16B
	0x03B1D228 MOV X1, X20
	0x03B1D22C MOV X22, X0
	0x03B1D230 BL 0x3B1D60C
	0x03B1D234 LDR X8, [X21 + 0x368]
	0x03B1D238 CBZ X8, 0x3B1D2DC
	0x03B1D23C LDR X8, [X8 + 0x38]
	0x03B1D240 CBZ X8, 0x3B1D2DC
	0x03B1D244 LDR W9, [X8 + 0x18]
	0x03B1D248 CMP W19, W9
	0x03B1D24C B.CS 0x3B1D2E0
	0x03B1D250 CBZ X22, 0x3B1D2DC
	0x03B1D254 SXTW X9, W19
	0x03B1D258 MOVZ W10, 0x178
	0x03B1D25C MADD X8, X9, X10, X8
	0x03B1D260 LDR V2, [X8 + 0x124]
	0x03B1D264 LDR V1, [X8 + 0x120]
	0x03B1D268 LDR V0, [X8 + 0x11C]
	0x03B1D26C LDR V8, [X8 + 0x130]
	0x03B1D270 LDR V9, [X8 + 0x12C]
	0x03B1D274 LDR V10, [X8 + 0x128]
	0x03B1D278 MOV X0, X22
	0x03B1D27C MOV X1, X31
	0x03B1D280 BL 0x3C3DE4C
	0x03B1D284 MOV V11.16B, V0.16B
	0x03B1D288 MOV X0, X22
	0x03B1D28C MOV V0.16B, V10.16B
	0x03B1D290 MOV V1.16B, V9.16B
	0x03B1D294 MOV V2.16B, V8.16B
	0x03B1D298 MOV X1, X31
	0x03B1D29C BL 0x3C3DE4C
	0x03B1D2A0 LDR V1, [X31]
	0x03B1D2A4 FSUB S0, S0, S11
	0x03B1D2A8 LDP X22, X21, [X31 + 0x40]
	0x03B1D2AC LDR X30, [X31 + 0x30]
	0x03B1D2B0 FSUB S1, S1, S11
	0x03B1D2B4 FDIV S0, S1, S0
	0x03B1D2B8 FMOV S1, 0.5
	0x03B1D2BC FCMP S0, S1
	0x03B1D2C0 CSET W8, PL
	0x03B1D2C4 ADD W0, W19, W8
	0x03B1D2C8 LDP X20, X19, [X31 + 0x50]
	0x03B1D2CC LDP D9, D8, [X31 + 0x20]
	0x03B1D2D0 LDP D11, D10, [X31 + 0x10]
	0x03B1D2D4 ADD X31, X31, 0x60
	0x03B1D2D8 RET
	0x03B1D2DC BL 0x1C16F20
	0x03B1D2E0 BL 0x1C16F28
	0x03B1D2E4 SUB X31, X31, 0xF0
	0x03B1D2E8 STP D15, D14, [X31 + 0x70]
	0x03B1D2EC STP D13, D12, [X31 + 0x80]
	0x03B1D2F0 STP D11, D10, [X31 + 0x90]
	0x03B1D2F4 STP D9, D8, [X31 + 0xA0]
	0x03B1D2F8 STP X30, X25, [X31 + 0xB0]
	0x03B1D2FC STP X24, X23, [X31 + 0xC0]
	0x03B1D300 STP X22, X21, [X31 + 0xD0]
	0x03B1D304 STP X20, X19, [X31 + 0xE0]
	0x03B1D308 ADRP X21, 0x8C5000
	0x03B1D30C LDRB W8, [X21 + 0x710]
	0x03B1D310 MOV W19, W2
	0x03B1D314 MOV X22, X1
	0x03B1D318 MOV V8.16B, V1.16B
	0x03B1D31C MOV V9.16B, V0.16B
	0x03B1D320 MOV X20, X0
	0x03B1D324 STP S0, S1, [X31 + 0x60]
	0x03B1D328 STR S2, [X31 + 0x68]
	0x03B1D32C TBNZ X8, 0x0, 0x3B1D344
	0x03B1D330 ADRP X0, 0x63B000
	0x03B1D334 LDR X0, [X0 + 0xBB8]
	0x03B1D338 BL 0x1C16CF4
	0x03B1D33C MOVZ W8, 0x1
	0x03B1D340 STRB W8, [X21 + 0x710]
	0x03B1D344 CBZ X20, 0x3B1D5D4
	0x03B1D348 ADRP X23, 0x63B000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x8C6000
	011 Move X25, 0x63D000
	012 Move X24, 0x63D000
	013 Move X23, 0x63D000
	014 Move X22, 0x63D000
	015 Move X21, 0x63D000
	016 Move X20, 0x63D000
	017 Move X25, [X25+544]
	018 Move W8, [X26+1786]
	019 Move X24, [X24+2656]
	020 Move X23, [X23+776]
	021 Move X22, [X22+2672]
	022 Move X21, [X21+2664]
	023 Move X20, [X20+2680]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x63D000
	030 Move X0, [X0+544]
	031 Call 0x1C17CF4
	032 Move X0, 0x63D000
	033 Move X0, [X0+776]
	034 Call 0x1C17CF4
	035 Move X0, 0x63D000
	036 Move X0, [X0+2664]
	037 Call 0x1C17CF4
	038 Move X0, 0x63D000
	039 Move X0, [X0+2680]
	040 Call 0x1C17CF4
	041 Move X0, 0x63D000
	042 Move X0, [X0+2672]
	043 Call 0x1C17CF4
	044 Move X0, 0x63D000
	045 Move X0, [X0+2656]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+1786], W8
	049 Move [X19+24], X31
	050 Move [X19+32], X31
	051 Move [X19+48], W31
	052 Move [X19+40], X31
	053 Move X0, [X25]
	054 Move W1, 4
	055 Call 0x1C17D6C
	056 Move [X19+56], X0
	057 Move X0, [X24]
	058 Move W1, 1
	059 Call 0x1C17D6C
	060 Move [X19+64], X0
	061 Move X0, [X23]
	062 Move W1, 1
	063 Call 0x1C17D6C
	064 Move [X19+80], X0
	065 Move X0, [X22]
	066 Move W1, 1
	067 Call 0x1C17D6C
	068 Move [X19+88], X0
	069 Move X0, [X21]
	070 Move W1, W31
	071 Call 0x1C17D6C
	072 Move [X19+72], X0
	073 Move [X19+52], W31
	074 Move X0, [X20]
	075 Move W1, 1
	076 Call 0x1C17D6C
	077 Move [X19+96], X0
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Return 

Method: System.Void ClearMeshInfo(System.Boolean updateMesh)

Disassembly:
	0x03B1D34C LDR X23, [X23 + 0xBB8]
	0x03B1D350 MOV X0, X20
	0x03B1D354 MOV X1, X31
	0x03B1D358 BL 0x3AF8E0C
	0x03B1D35C LDR X8, [X23]
	0x03B1D360 MOV X21, X0
	0x03B1D364 LDR W9, [X8 + 0xE0]
	0x03B1D368 CBNZ W9, 0x3B1D374
	0x03B1D36C MOV X0, X8
	0x03B1D370 BL 0x1C16DFC
	0x03B1D374 ADD X2, X31, 0x60
	0x03B1D378 MOV X0, X21
	0x03B1D37C MOV V0.16B, V9.16B
	0x03B1D380 MOV V1.16B, V8.16B
	0x03B1D384 MOV X1, X22
	0x03B1D388 BL 0x3B1D60C
	0x03B1D38C LDR X8, [X20 + 0x368]
	0x03B1D390 CBZ X8, 0x3B1D5D4
	0x03B1D394 LDR V1, [X31 + 0x60]
	0x03B1D398 LDR V0, [X31 + 0x64]
	0x03B1D39C MOVZ W9, 0x7F800000
	0x03B1D3A0 MOV X24, X31
	0x03B1D3A4 MOV W22, W31
	0x03B1D3A8 STP S0, S1, [X31 + 0x4C]
	0x03B1D3AC LDR V0, [X31 + 0x68]
	0x03B1D3B0 STR W9, [X31 + 0x30]
	0x03B1D3B4 MOVZ W25, 0x11C
	0x03B1D3B8 STR S0, [X31 + 0x48]
	0x03B1D3BC LDRSW X9, [X8 + 0x18]
	0x03B1D3C0 CMP X24, X9
	0x03B1D3C4 B.GE 0x3B1D5DC
	0x03B1D3C8 LDR X8, [X8 + 0x38]
	0x03B1D3CC CBZ X8, 0x3B1D5D4
	0x03B1D3D0 LDR W9, [X8 + 0x18]
	0x03B1D3D4 CMP X24, X9
	0x03B1D3D8 B.CS 0x3B1D608
	0x03B1D3DC ADD X8, X8, X25
	0x03B1D3E0 LDP S8, S12, [X8]
	0x03B1D3E4 LDP S2, S13, [X8 + 0x8]
	0x03B1D3E8 LDRB W9, [X8 + 0x78]
	0x03B1D3EC LDP S10, S9, [X8 + 0x10]
	0x03B1D3F0 TBNZ X9, 0x0, 0x3B1D3F8
	0x03B1D3F4 TBNZ X19, 0x0, 0x3B1D5C4
	0x03B1D3F8 CBZ X21, 0x3B1D5D4
	0x03B1D3FC MOV X0, X21
	0x03B1D400 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x8C6000
	010 Move W8, [X21+1787]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x63C000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1787], W8
	022 Move X23, [X19+96]
	023 Compare X23, 0
	024 JumpIfEqual {48}
	025 Move X22, 0x63C000
	026 Move X22, [X22+840]
	027 Move X21, X31
	028 Move W24, 32
	029 And W20, W20, 1
	030 Move W8, [X23+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X22]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move W8, [X23+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X0, X23, X24
	040 Move W1, W20
	041 Add X21, X21, 1
	042 Add X25, X24, 80
	043 Call TMP_MeshInfo.Clear, X0, X1
	044 Move X23, [X19+96]
	045 Move X24, X25
	046 Compare X23, 0
	047 JumpIfNotEqual {30}
	048 Call 0x1C17F20
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Move X25, [X31+72]
	057 Return 
	058 Call 0x1C17F28

Method: System.Void ClearAllMeshInfo()

Disassembly:
	0x03B1D404 MOV V1.16B, V12.16B
	0x03B1D408 MOV X1, X31
	0x03B1D40C BL 0x3C3DE4C
	0x03B1D410 STP S0, S1, [X31 + 0x54]
	0x03B1D414 STR S2, [X31 + 0x5C]
	0x03B1D418 FMOV S2, W31
	0x03B1D41C MOV X0, X21
	0x03B1D420 MOV V0.16B, V8.16B
	0x03B1D424 MOV V1.16B, V10.16B
	0x03B1D428 MOV X1, X31
	0x03B1D42C BL 0x3C3DE4C
	0x03B1D430 MOV V14.16B, V0.16B
	0x03B1D434 MOV V11.16B, V1.16B
	0x03B1D438 MOV V15.16B, V2.16B
	0x03B1D43C MOV X0, X21
	0x03B1D440 MOV V0.16B, V13.16B
	0x03B1D444 MOV V1.16B, V10.16B
	0x03B1D448 MOV V2.16B, V9.16B
	0x03B1D44C MOV X1, X31
	0x03B1D450 BL 0x3C3DE4C
	0x03B1D454 MOV V10.16B, V0.16B
	0x03B1D458 MOV V9.16B, V1.16B
	0x03B1D45C MOV V8.16B, V2.16B
	0x03B1D460 FMOV S2, W31
	0x03B1D464 MOV X0, X21
	0x03B1D468 MOV V0.16B, V13.16B
	0x03B1D46C MOV V1.16B, V12.16B
	0x03B1D470 MOV X1, X31
	0x03B1D474 BL 0x3C3DE4C
	0x03B1D478 LDR X0, [X23]
	0x03B1D47C MOV V13.16B, V2.16B
	0x03B1D480 STP S1, S0, [X31 + 0x40]
	0x03B1D484 LDR W8, [X0 + 0xE0]
	0x03B1D488 CBNZ W8, 0x3B1D490
	0x03B1D48C BL 0x1C16DFC
	0x03B1D490 LDP S1, S0, [X31 + 0x4C]
	0x03B1D494 LDR V2, [X31 + 0x48]
	0x03B1D498 LDP S3, S4, [X31 + 0x54]
	0x03B1D49C LDR V5, [X31 + 0x5C]
	0x03B1D4A0 STR S8, [X31 + 0x3C]
	0x03B1D4A4 STP S9, S8, [X31 + 0x14]
	0x03B1D4A8 MOV V8.16B, V9.16B
	0x03B1D4AC STR S10, [X31 + 0x10]
	0x03B1D4B0 MOV V12.16B, V15.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8C6000
	009 Move W8, [X20+1788]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x63C000
	016 Move X0, [X0+840]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1788], W8
	020 Move X22, [X19+96]
	021 Compare X22, 0
	022 JumpIfEqual {45}
	023 Move X21, 0x63C000
	024 Move X21, [X21+840]
	025 Move X20, X31
	026 Move W23, 32
	027 Move W8, [X22+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X21]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move W8, [X22+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X0, X22, X23
	037 Move W1, 1
	038 Add X20, X20, 1
	039 Add X24, X23, 80
	040 Call TMP_MeshInfo.Clear, X0, X1
	041 Move X22, [X19+96]
	042 Move X23, X24
	043 Compare X22, 0
	044 JumpIfNotEqual {27}
	045 Call 0x1C17F20
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return 
	054 Call 0x1C17F28

Method: System.Void ResetVertexLayout(System.Boolean isVolumetric)

Disassembly:
	0x03B1D4B4 STP S11, S15, [X31 + 0x4]
	0x03B1D4B8 MOV V15.16B, V11.16B
	0x03B1D4BC MOV V11.16B, V14.16B
	0x03B1D4C0 STR S14, [X31]
	0x03B1D4C4 BL 0x3B1DFFC
	0x03B1D4C8 TBNZ X0, 0x0, 0x3B1D5D8
	0x03B1D4CC LDR X0, [X23]
	0x03B1D4D0 MOV V9.16B, V10.16B
	0x03B1D4D4 STR S13, [X31 + 0x38]
	0x03B1D4D8 LDR W8, [X0 + 0xE0]
	0x03B1D4DC CBNZ W8, 0x3B1D4E4
	0x03B1D4E0 BL 0x1C16DFC
	0x03B1D4E4 LDP S10, S13, [X31 + 0x4C]
	0x03B1D4E8 LDR V14, [X31 + 0x48]
	0x03B1D4EC LDP S0, S1, [X31 + 0x54]
	0x03B1D4F0 LDR V2, [X31 + 0x5C]
	0x03B1D4F4 MOV V3.16B, V11.16B
	0x03B1D4F8 MOV V4.16B, V15.16B
	0x03B1D4FC MOV V5.16B, V12.16B
	0x03B1D500 STP S13, S10, [X31]
	0x03B1D504 STR S14, [X31 + 0x8]
	0x03B1D508 BL 0x3B1E0BC
	0x03B1D50C MOV V2.16B, V12.16B
	0x03B1D510 LDR V12, [X31 + 0x3C]
	0x03B1D514 STR S0, [X31 + 0x34]
	0x03B1D518 MOV V0.16B, V11.16B
	0x03B1D51C MOV V1.16B, V15.16B
	0x03B1D520 MOV V3.16B, V9.16B
	0x03B1D524 MOV V4.16B, V8.16B
	0x03B1D528 MOV V5.16B, V12.16B
	0x03B1D52C STP S10, S14, [X31 + 0x4]
	0x03B1D530 STR S13, [X31]
	0x03B1D534 MOV V11.16B, V9.16B
	0x03B1D538 MOV V9.16B, V8.16B
	0x03B1D53C BL 0x3B1E0BC
	0x03B1D540 MOV V8.16B, V0.16B
	0x03B1D544 MOV V0.16B, V11.16B
	0x03B1D548 MOV V2.16B, V12.16B
	0x03B1D54C LDP S15, S11, [X31 + 0x40]
	0x03B1D550 LDR V12, [X31 + 0x38]
	0x03B1D554 MOV V1.16B, V9.16B
	0x03B1D558 STP S10, S14, [X31 + 0x4]
	0x03B1D55C MOV V3.16B, V11.16B
	0x03B1D560 MOV V4.16B, V15.16B
	0x03B1D564 MOV V5.16B, V12.16B
	0x03B1D568 STR S13, [X31]
	0x03B1D56C BL 0x3B1E0BC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x8C6000
	010 Move W8, [X21+1789]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x63C000
	018 Move X0, [X0+840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1789], W8
	022 Move X23, [X19+96]
	023 Compare X23, 0
	024 JumpIfEqual {49}
	025 Move X22, 0x63C000
	026 Move X22, [X22+840]
	027 Move X21, X31
	028 Move W24, 32
	029 And W20, W20, 1
	030 Move W8, [X23+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X22]
	033 Move W9, [X0+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move W8, [X23+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X0, X23, X24
	040 Move W1, W31
	041 Move W2, W20
	042 Add X21, X21, 1
	043 Add X25, X24, 80
	044 Call TMP_MeshInfo.ResizeMeshInfo, X0, X1, X2
	045 Move X23, [X19+96]
	046 Move X24, X25
	047 Compare X23, 0
	048 JumpIfNotEqual {30}
	049 Call 0x1C17F20
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Move X25, [X31+72]
	058 Return 
	059 Call 0x1C17F28

Method: System.Void ClearUnusedVertices(TMPro.MaterialReference[] materials)

Disassembly:
	0x03B1D570 LDP S3, S4, [X31 + 0x54]
	0x03B1D574 LDR V5, [X31 + 0x5C]
	0x03B1D578 MOV V9.16B, V0.16B
	0x03B1D57C MOV V0.16B, V11.16B
	0x03B1D580 MOV V1.16B, V15.16B
	0x03B1D584 MOV V2.16B, V12.16B
	0x03B1D588 STP S10, S14, [X31 + 0x4]
	0x03B1D58C STR S13, [X31]
	0x03B1D590 BL 0x3B1E0BC
	0x03B1D594 LDR V1, [X31 + 0x34]
	0x03B1D598 FCMP S1, S8
	0x03B1D59C FCSEL S1, S1, S8, MI
	0x03B1D5A0 FCMP S1, S9
	0x03B1D5A4 FCSEL S1, S1, S9, MI
	0x03B1D5A8 FCMP S1, S0
	0x03B1D5AC FCSEL S0, S1, S0, MI
	0x03B1D5B0 LDR V1, [X31 + 0x30]
	0x03B1D5B4 FCMP S1, S0
	0x03B1D5B8 B.LE 0x3B1D5C4
	0x03B1D5BC MOV W22, W24
	0x03B1D5C0 STR S0, [X31 + 0x30]
	0x03B1D5C4 LDR X8, [X20 + 0x368]
	0x03B1D5C8 ADD X24, X24, 0x1
	0x03B1D5CC ADD X25, X25, 0x178
	0x03B1D5D0 CBNZ X8, 0x3B1D3BC
	0x03B1D5D4 BL 0x1C16F20
	0x03B1D5D8 MOV W22, W24
	0x03B1D5DC MOV W0, W22
	0x03B1D5E0 LDP X20, X19, [X31 + 0xE0]
	0x03B1D5E4 LDP X22, X21, [X31 + 0xD0]
	0x03B1D5E8 LDP X24, X23, [X31 + 0xC0]
	0x03B1D5EC LDP X30, X25, [X31 + 0xB0]
	0x03B1D5F0 LDP D9, D8, [X31 + 0xA0]
	0x03B1D5F4 LDP D11, D10, [X31 + 0x90]
	0x03B1D5F8 LDP D13, D12, [X31 + 0x80]
	0x03B1D5FC LDP D15, D14, [X31 + 0x70]
	0x03B1D600 ADD X31, X31, 0xF0
	0x03B1D604 RET
	0x03B1D608 BL 0x1C16F28
	0x03B1D60C SUB X31, X31, 0xB0
	0x03B1D610 STP D15, D14, [X31 + 0x40]
	0x03B1D614 STP D13, D12, [X31 + 0x50]
	0x03B1D618 STP D11, D10, [X31 + 0x60]
	0x03B1D61C STP D9, D8, [X31 + 0x70]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8C6000
	009 Move W8, [X20+1790]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x63C000
	016 Move X0, [X0+840]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1790], W8
	020 Move X22, [X19+96]
	021 Compare X22, 0
	022 JumpIfEqual {45}
	023 Move X21, 0x63C000
	024 Move X21, [X21+840]
	025 Move X20, X31
	026 Move W23, 32
	027 Move W8, [X22+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X0, [X21]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move W8, [X22+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X0, X22, X23
	037 Move W1, W31
	038 Add X20, X20, 1
	039 Add X24, X23, 80
	040 Call TMP_MeshInfo.ClearUnusedVertices, X0, X1
	041 Move X22, [X19+96]
	042 Move X23, X24
	043 Compare X22, 0
	044 JumpIfNotEqual {27}
	045 Call 0x1C17F20
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X24, [X31+16]
	051 Move X23, [X31+24]
	052 Move X30, [X31+64]
	053 Return 
	054 Call 0x1C17F28

Method: System.Void ClearLineInfo()

Disassembly:
	0x03B1D620 STP X30, X23, [X31 + 0x80]
	0x03B1D624 STP X22, X21, [X31 + 0x90]
	0x03B1D628 STP X20, X19, [X31 + 0xA0]
	0x03B1D62C ADRP X22, 0x8C5000
	0x03B1D630 LDRB W8, [X22 + 0x716]
	0x03B1D634 MOV X19, X2
	0x03B1D638 MOV X21, X1
	0x03B1D63C MOV V8.16B, V1.16B
	0x03B1D640 MOV V9.16B, V0.16B
	0x03B1D644 MOV X20, X0
	0x03B1D648 TBNZ X8, 0x0, 0x3B1D660
	0x03B1D64C ADRP X0, 0x62C000
	0x03B1D650 LDR X0, [X0 + 0x6B8]
	0x03B1D654 BL 0x1C16CF4
	0x03B1D658 MOVZ W8, 0x1
	0x03B1D65C STRB W8, [X22 + 0x716]
	0x03B1D660 ADRP X23, 0x8BC000
	0x03B1D664 ADRP X22, 0x62C000
	0x03B1D668 LDRB W8, [X23 + 0x78F]
	0x03B1D66C LDR X22, [X22 + 0x6B8]
	0x03B1D670 STP X31, X31, [X31 + 0x20]
	0x03B1D674 STR X31, [X31 + 0x30]
	0x03B1D678 CBNZ W8, 0x3B1D690
	0x03B1D67C ADRP X0, 0x5DE000
	0x03B1D680 LDR X0, [X0 + 0xF08]
	0x03B1D684 BL 0x1C16CF4
	0x03B1D688 MOVZ W8, 0x1
	0x03B1D68C STRB W8, [X23 + 0x78F]
	0x03B1D690 ADRP X8, 0x5DE000
	0x03B1D694 LDR X8, [X8 + 0xF08]
	0x03B1D698 LDR X8, [X8]
	0x03B1D69C LDR X8, [X8 + 0xB8]
	0x03B1D6A0 LDR V0, [X8]
	0x03B1D6A4 STR W31, [X19 + 0x8]
	0x03B1D6A8 STR D0, [X19]
	0x03B1D6AC LDR X0, [X22]
	0x03B1D6B0 LDR W8, [X0 + 0xE0]
	0x03B1D6B4 CBNZ W8, 0x3B1D6BC
	0x03B1D6B8 BL 0x1C16DFC
	0x03B1D6BC ADD X8, X31, 0x8
	0x03B1D6C0 MOV X0, X21
	0x03B1D6C4 MOV V0.16B, V9.16B
	0x03B1D6C8 MOV V1.16B, V8.16B
	0x03B1D6CC MOV X1, X31
	0x03B1D6D0 BL 0x3E238E0
	0x03B1D6D4 LDUR V0, [X31 + 0x8]
	0x03B1D6D8 LDR X8, [X31 + 0x18]
	0x03B1D6DC STR V0, [X31 + 0x2]
	0x03B1D6E0 STR X8, [X31 + 0x30]
	0x03B1D6E4 CBZ X20, 0x3B1D92C
	0x03B1D6E8 MOV X0, X20
	0x03B1D6EC MOV X1, X31
	0x03B1D6F0 BL 0x3C3DEB4
	0x03B1D6F4 ADRP X21, 0x8BB000
	0x03B1D6F8 LDRB W8, [X21 + 0xDDE]
	0x03B1D6FC MOV V8.16B, V0.16B
	0x03B1D700 MOV V9.16B, V1.16B
	0x03B1D704 MOV V10.16B, V2.16B
	0x03B1D708 MOV V11.16B, V3.16B
	0x03B1D70C CBNZ W8, 0x3B1D724
	0x03B1D710 ADRP X0, 0x5D6000
	0x03B1D714 LDR X0, [X0 + 0x5A0]
	0x03B1D718 BL 0x1C16CF4
	0x03B1D71C MOVZ W8, 0x1
	0x03B1D720 STRB W8, [X21 + 0xDDE]
	0x03B1D724 ADRP X21, 0x5D6000
	0x03B1D728 LDR X21, [X21 + 0x5A0]
	0x03B1D72C MOV V0.16B, V8.16B
	0x03B1D730 MOV V1.16B, V9.16B
	0x03B1D734 MOV V2.16B, V10.16B
	0x03B1D738 LDR X8, [X21]
	0x03B1D73C MOV V3.16B, V11.16B
	0x03B1D740 MOV X0, X31
	0x03B1D744 LDR X8, [X8 + 0xB8]
	0x03B1D748 LDP S4, S5, [X8 + 0x54]
	0x03B1D74C LDR V6, [X8 + 0x5C]
	0x03B1D750 BL 0x3C2A9FC
	0x03B1D754 MOV X0, X20
	0x03B1D758 MOV X1, X31
	0x03B1D75C MOV V11.16B, V0.16B
	0x03B1D760 MOV V12.16B, V1.16B
	0x03B1D764 MOV V13.16B, V2.16B
	0x03B1D768 BL 0x3C3F58C
	0x03B1D76C ADRP X20, 0x8BB000
	0x03B1D770 LDRB W8, [X20 + 0x785]
	0x03B1D774 MOV V9.16B, V0.16B
	0x03B1D778 MOV V10.16B, V1.16B
	0x03B1D77C MOV V8.16B, V2.16B
	0x03B1D780 CBNZ W8, 0x3B1D798
	0x03B1D784 ADRP X0, 0x5D6000
	0x03B1D788 LDR X0, [X0 + 0x5A8]
	0x03B1D78C BL 0x1C16CF4
	0x03B1D790 MOVZ W8, 0x1
	0x03B1D794 STRB W8, [X20 + 0x785]
	0x03B1D798 ADRP X8, 0x5D6000
	0x03B1D79C LDR X8, [X8 + 0x5A8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8C6000
	009 Move W8, [X20+1791]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x63D000
	016 Move X0, [X0+776]
	017 Call 0x1C17CF4
	018 Move X0, 0x63C000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1791], W8
	023 Move X20, [X19+80]
	024 Compare X20, 0
	025 JumpIfNotEqual {35}
	026 Move X8, 0x63D000
	027 Move X8, [X8+776]
	028 Move W1, 2
	029 Move X0, [X8]
	030 Call 0x1C17D6C
	031 Move X20, X0
	032 Move [X19+80], X0
	033 Compare X0, 0
	034 JumpIfEqual {104}
	035 Move X8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X23, 0x63C000
	038 Move X23, [X23+872]
	039 And X8, X8, 0
	040 Move W9, 92
	041 Move X21, X31
	042 Move X22, X31
	043 Multiply X24, X8, X9
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move W8, [X20+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X9, X20, X21
	048 Move [X9+44], D1
	049 Move [X9+32], D1
	050 Move [X9+92], W31
	051 Move X0, [X23]
	052 Move W9, [X0+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {59}
	055 Call 0x1C17DFC
	056 Move X0, [X23]
	057 Move W8, [X20+24]
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X8, [X0+184]
	061 Add X9, X20, X21
	062 Move V0, [X8+8]
	063 Move [X9+76], S0
	064 Move X9, [X19+80]
	065 Compare X9, 0
	066 JumpIfEqual {104}
	067 Move W10, [X9+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move V0, [X8]
	070 Add X9, X9, X21
	071 Move [X9+96], X31
	072 Move [X9+84], S0
	073 Move X8, [X8]
	074 Move [X9+108], X8
	075 Move X8, [X19+80]
	076 Compare X8, 0
	077 JumpIfEqual {104}
	078 Move W9, [X8+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X9, [X23]
	081 Add X8, X8, X21
	082 Move X9, [X9+184]
	083 Move X9, [X9+8]
	084 Move [X8+116], X9
	085 Move X20, [X19+80]
	086 Compare X20, 0
	087 JumpIfEqual {104}
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X20, X21
	091 Add X21, X21, 92
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X22, X22, 1
	094 Move [X8+88], W31
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X24, [X31+16]
	100 Move X23, [X31+24]
	101 Move X30, [X31+64]
	102 Return 
	103 Call 0x1C17F28
	104 Call 0x1C17F20

Method: System.Void ClearPageInfo()

Disassembly:
	0x03B1D7A0 LDR X0, [X8]
	0x03B1D7A4 LDR W8, [X0 + 0xE0]
	0x03B1D7A8 CBNZ W8, 0x3B1D7B0
	0x03B1D7AC BL 0x1C16DFC
	0x03B1D7B0 FMUL S0, S11, S11
	0x03B1D7B4 FMUL S1, S12, S12
	0x03B1D7B8 ADRP X8, 0xFFFFFFFFFCFCD000
	0x03B1D7BC FADD S0, S0, S1
	0x03B1D7C0 LDR V1, [X8 + 0x17C]
	0x03B1D7C4 FMUL S2, S13, S13
	0x03B1D7C8 FADD S0, S2, S0
	0x03B1D7CC FSQRT S0, S0
	0x03B1D7D0 FCMP S0, S1
	0x03B1D7D4 STP S10, S8, [X31]
	0x03B1D7D8 B.LE 0x3B1D7F0
	0x03B1D7DC MOV V10.16B, V9.16B
	0x03B1D7E0 FDIV S14, S11, S0
	0x03B1D7E4 FDIV S12, S12, S0
	0x03B1D7E8 FDIV S11, S13, S0
	0x03B1D7EC B 0x3B1D824
	0x03B1D7F0 ADRP X20, 0x8BB000
	0x03B1D7F4 LDRB W8, [X20 + 0x783]
	0x03B1D7F8 CBNZ W8, 0x3B1D810
	0x03B1D7FC ADRP X0, 0x5D6000
	0x03B1D800 LDR X0, [X0 + 0x5A0]
	0x03B1D804 BL 0x1C16CF4
	0x03B1D808 MOVZ W8, 0x1
	0x03B1D80C STRB W8, [X20 + 0x783]
	0x03B1D810 LDR X8, [X21]
	0x03B1D814 MOV V10.16B, V9.16B
	0x03B1D818 LDR X8, [X8 + 0xB8]
	0x03B1D81C LDP S14, S12, [X8]
	0x03B1D820 LDR V11, [X8 + 0x8]
	0x03B1D824 LDP S13, S0, [X31 + 0x28]
	0x03B1D828 LDP S1, S2, [X31 + 0x30]
	0x03B1D82C ADRP X20, 0x8BC000
	0x03B1D830 LDP S15, S8, [X31 + 0x20]
	0x03B1D834 LDRB W8, [X20 + 0x5AA]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8C6000
	005 Move W8, [X20+1792]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x63D000
	012 Move X0, [X0+2672]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1792], W8
	016 Move X0, [X19+88]
	017 Compare X0, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0x63D000
	020 Move X8, [X8+2672]
	021 Move W1, 2
	022 Move X0, [X8]
	023 Call 0x1C17D6C
	024 Move [X19+88], X0
	025 Compare X0, 0
	026 JumpIfEqual {43}
	027 Move X8, [X0+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, -50520064
	030 Move V0, [X9+840]
	031 Move W10, 0xFE00
	032 And X8, X8, 0
	033 Add X9, X0, 48
	034 NotImplemented "Instruction MOVK not yet implemented."
	035 Move [X9-16], X31
	036 Move [X9-8], D0
	037 Move [X9+20], W10
	038 Subtract X8, X8, 1
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Call 0x1C17F20

Method: TMPro.TMP_MeshInfo[] CopyMeshInfoVertexData()

Disassembly:
	0x03B1D838 FMUL S0, S14, S0
	0x03B1D83C FMUL S1, S12, S1
	0x03B1D840 FADD S0, S0, S1
	0x03B1D844 FMUL S1, S11, S2
	0x03B1D848 FADD S9, S1, S0
	0x03B1D84C CBNZ W8, 0x3B1D864
	0x03B1D850 ADRP X0, 0x5DD000
	0x03B1D854 LDR X0, [X0 + 0x4B8]
	0x03B1D858 BL 0x1C16CF4
	0x03B1D85C MOVZ W8, 0x1
	0x03B1D860 STRB W8, [X20 + 0x5AA]
	0x03B1D864 ADRP X8, 0x5DD000
	0x03B1D868 LDR X8, [X8 + 0x4B8]
	0x03B1D86C ADRP X9, 0xFFFFFFFFFCFCD000
	0x03B1D870 LDR V0, [X9 + 0x240]
	0x03B1D874 FABS S1, S9
	0x03B1D878 LDR X8, [X8]
	0x03B1D87C FMOV S2, W31
	0x03B1D880 FMAXNM S1, S1, S2
	0x03B1D884 FMUL S0, S1, S0
	0x03B1D888 LDR X8, [X8 + 0xB8]
	0x03B1D88C FMOV S1, 8
	0x03B1D890 LDR V3, [X8]
	0x03B1D894 FMUL S1, S3, S1
	0x03B1D898 FCMP S0, S1
	0x03B1D89C FCSEL S0, S0, S1, GT
	0x03B1D8A0 FABD S1, S2, S2
	0x03B1D8A4 FCMP S1, S0
	0x03B1D8A8 B.MI 0x3B1D904
	0x03B1D8AC LDP S1, S4, [X31]
	0x03B1D8B0 FMUL S0, S10, S14
	0x03B1D8B4 FMUL S2, S14, S15
	0x03B1D8B8 FMUL S3, S12, S8
	0x03B1D8BC FMUL S1, S1, S12
	0x03B1D8C0 FMUL S4, S4, S11
	0x03B1D8C4 FMUL S5, S11, S13
	0x03B1D8C8 FADD S0, S0, S1
	0x03B1D8CC FADD S1, S2, S3
	0x03B1D8D0 FADD S0, S4, S0
	0x03B1D8D4 FADD S1, S5, S1
	0x03B1D8D8 FSUB S0, S0, S1
	0x03B1D8DC FDIV S0, S0, S9
	0x03B1D8E0 FCMP S0, 0x0
	0x03B1D8E4 B.LE 0x3B1D904
	0x03B1D8E8 ADD X0, X31, 0x20
	0x03B1D8EC MOV X1, X31
	0x03B1D8F0 BL 0x3C0B1B4
	0x03B1D8F4 MOVZ W0, 0x1
	0x03B1D8F8 STP S0, S1, [X19]
	0x03B1D8FC STR S2, [X19 + 0x8]
	0x03B1D900 B 0x3B1D908
	0x03B1D904 MOV W0, W31
	0x03B1D908 LDP X20, X19, [X31 + 0xA0]
	0x03B1D90C LDP X22, X21, [X31 + 0x90]
	0x03B1D910 LDP X30, X23, [X31 + 0x80]
	0x03B1D914 LDP D9, D8, [X31 + 0x70]
	0x03B1D918 LDP D11, D10, [X31 + 0x60]
	0x03B1D91C LDP D13, D12, [X31 + 0x50]
	0x03B1D920 LDP D15, D14, [X31 + 0x40]
	0x03B1D924 ADD X31, X31, 0xB0
	0x03B1D928 RET
	0x03B1D92C BL 0x1C16F20
	0x03B1D930 SUB X31, X31, 0x70
	0x03B1D934 STP D11, D10, [X31 + 0x10]
	0x03B1D938 STP D9, D8, [X31 + 0x20]
	0x03B1D93C STR X30, [X31 + 0x30]
	0x03B1D940 STP X24, X23, [X31 + 0x40]
	0x03B1D944 STP X22, X21, [X31 + 0x50]
	0x03B1D948 STP X20, X19, [X31 + 0x60]
	0x03B1D94C ADRP X20, 0x8C5000
	0x03B1D950 STP S0, S1, [X31]
	0x03B1D954 STR S2, [X31 + 0x8]
	0x03B1D958 ADRP X24, 0x63B000
	0x03B1D95C LDRB W8, [X20 + 0x70B]
	0x03B1D960 LDR X24, [X24 + 0xBB8]
	0x03B1D964 MOV X19, X2
	0x03B1D968 MOV X21, X1
	0x03B1D96C MOV V10.16B, V2.16B
	0x03B1D970 MOV V8.16B, V1.16B
	0x03B1D974 MOV V9.16B, V0.16B
	0x03B1D978 MOV X22, X0
	0x03B1D97C TBNZ X8, 0x0, 0x3B1D994
	0x03B1D980 ADRP X0, 0x63B000
	0x03B1D984 LDR X0, [X0 + 0xBB8]
	0x03B1D988 BL 0x1C16CF4
	0x03B1D98C MOVZ W8, 0x1
	0x03B1D990 STRB W8, [X20 + 0x70B]
	0x03B1D994 LDR X0, [X24]
	0x03B1D998 LDR W8, [X0 + 0xE0]
	0x03B1D99C CBNZ W8, 0x3B1D9A4
	0x03B1D9A0 BL 0x1C16DFC
	0x03B1D9A4 MOV X0, X22
	0x03B1D9A8 MOV V0.16B, V9.16B
	0x03B1D9AC MOV V1.16B, V8.16B
	0x03B1D9B0 MOV V2.16B, V10.16B
	0x03B1D9B4 MOV X1, X21
	0x03B1D9B8 BL 0x3B1DB10
	0x03B1D9BC MOV W23, W0
	0x03B1D9C0 MOV X0, X22
	0x03B1D9C4 MOV V0.16B, V9.16B
	0x03B1D9C8 MOV V1.16B, V8.16B
	0x03B1D9CC MOV V2.16B, V10.16B
	0x03B1D9D0 MOV W1, W23
	0x03B1D9D4 MOV X2, X21
	0x03B1D9D8 MOV W3, W31
	0x03B1D9DC BL 0x3B1DC90
	0x03B1D9E0 CBZ X22, 0x3B1DB08
	0x03B1D9E4 LDR X8, [X22 + 0x368]
	0x03B1D9E8 CBZ X8, 0x3B1DB08
	0x03B1D9EC LDR X8, [X8 + 0x50]
	0x03B1D9F0 CBZ X8, 0x3B1DB08
	0x03B1D9F4 LDR W9, [X8 + 0x18]
	0x03B1D9F8 CMP W23, W9
	0x03B1D9FC B.CS 0x3B1DB0C
	0x03B1DA00 MOVZ W9, 0x5C
	0x03B1DA04 SMADDL X8, X23, X9, X8
	0x03B1DA08 LDR W8, [X8 + 0x24]
	0x03B1DA0C MOV W20, W0
	0x03B1DA10 CMP W8, 0x1
	0x03B1DA14 B.EQ 0x3B1DAE0
	0x03B1DA18 MOV X0, X22
	0x03B1DA1C MOV X1, X31
	0x03B1DA20 BL 0x3AF8E0C
	0x03B1DA24 LDR X8, [X24]
	0x03B1DA28 MOV X23, X0
	0x03B1DA2C LDR W9, [X8 + 0xE0]
	0x03B1DA30 CBNZ W9, 0x3B1DA3C
	0x03B1DA34 MOV X0, X8
	0x03B1DA38 BL 0x1C16DFC
	0x03B1DA3C ADD X2, X31, 0x0
	0x03B1DA40 MOV X0, X23
	0x03B1DA44 MOV V0.16B, V9.16B
	0x03B1DA48 MOV V1.16B, V8.16B
	0x03B1DA4C MOV X1, X21
	0x03B1DA50 BL 0x3B1D60C
	0x03B1DA54 LDR X8, [X22 + 0x368]
	0x03B1DA58 CBZ X8, 0x3B1DB08
	0x03B1DA5C LDR X8, [X8 + 0x38]
	0x03B1DA60 CBZ X8, 0x3B1DB08
	0x03B1DA64 LDR W9, [X8 + 0x18]
	0x03B1DA68 CMP W20, W9
	0x03B1DA6C B.CS 0x3B1DB0C
	0x03B1DA70 CBZ X23, 0x3B1DB08
	0x03B1DA74 SXTW X9, W20
	0x03B1DA78 MOVZ W10, 0x178
	0x03B1DA7C MADD X8, X9, X10, X8
	0x03B1DA80 LDR V2, [X8 + 0x124]
	0x03B1DA84 LDR V1, [X8 + 0x120]
	0x03B1DA88 LDR V0, [X8 + 0x11C]
	0x03B1DA8C LDR V8, [X8 + 0x130]
	0x03B1DA90 LDR V9, [X8 + 0x12C]
	0x03B1DA94 LDR V10, [X8 + 0x128]
	0x03B1DA98 MOV X0, X23
	0x03B1DA9C MOV X1, X31
	0x03B1DAA0 BL 0x3C3DE4C
	0x03B1DAA4 MOV V11.16B, V0.16B
	0x03B1DAA8 MOV X0, X23
	0x03B1DAAC MOV V0.16B, V10.16B
	0x03B1DAB0 MOV V1.16B, V9.16B
	0x03B1DAB4 MOV V2.16B, V8.16B
	0x03B1DAB8 MOV X1, X31
	0x03B1DABC BL 0x3C3DE4C
	0x03B1DAC0 LDR V1, [X31]
	0x03B1DAC4 FSUB S0, S0, S11
	0x03B1DAC8 FMOV S2, 0.5
	0x03B1DACC MOVZ W8, 0x2
	0x03B1DAD0 FSUB S1, S1, S11
	0x03B1DAD4 FDIV S0, S1, S0
	0x03B1DAD8 FCMP S0, S2
	0x03B1DADC CSINC W8, W8, W31, PL
	0x03B1DAE0 STR W8, [X19]
	0x03B1DAE4 MOV W0, W20
	0x03B1DAE8 LDP X20, X19, [X31 + 0x60]
	0x03B1DAEC LDP X22, X21, [X31 + 0x50]
	0x03B1DAF0 LDP X24, X23, [X31 + 0x40]
	0x03B1DAF4 LDR X30, [X31 + 0x30]
	0x03B1DAF8 LDP D9, D8, [X31 + 0x20]
	0x03B1DAFC LDP D11, D10, [X31 + 0x10]
	0x03B1DB00 ADD X31, X31, 0x70
	0x03B1DB04 RET
	0x03B1DB08 BL 0x1C16F20
	0x03B1DB0C BL 0x1C16F28
	0x03B1DB10 SUB X31, X31, 0x60
	0x03B1DB14 STP D11, D10, [X31 + 0x10]
	0x03B1DB18 STP D9, D8, [X31 + 0x20]
	0x03B1DB1C STP X30, X23, [X31 + 0x30]
	0x03B1DB20 STP X22, X21, [X31 + 0x40]
	0x03B1DB24 STP X20, X19, [X31 + 0x50]
	0x03B1DB28 ADRP X20, 0x8C5000
	0x03B1DB2C LDRB W8, [X20 + 0x70C]
	0x03B1DB30 MOV X21, X1
	0x03B1DB34 MOV V8.16B, V1.16B
	0x03B1DB38 MOV V9.16B, V0.16B
	0x03B1DB3C MOV X19, X0
	0x03B1DB40 STP S0, S1, [X31]
	0x03B1DB44 STR S2, [X31 + 0x8]
	0x03B1DB48 TBNZ X8, 0x0, 0x3B1DB60
	0x03B1DB4C ADRP X0, 0x63B000
	0x03B1DB50 LDR X0, [X0 + 0xBB8]
	0x03B1DB54 BL 0x1C16CF4
	0x03B1DB58 MOVZ W8, 0x1
	0x03B1DB5C STRB W8, [X20 + 0x70C]
	0x03B1DB60 CBZ X19, 0x3B1DC64
	0x03B1DB64 ADRP X20, 0x63B000
	0x03B1DB68 LDR X20, [X20 + 0xBB8]
	0x03B1DB6C MOV X0, X19
	0x03B1DB70 MOV X1, X31
	0x03B1DB74 BL 0x3AF8E0C
	0x03B1DB78 LDR X8, [X20]
	0x03B1DB7C MOV X20, X0
	0x03B1DB80 LDR W9, [X8 + 0xE0]
	0x03B1DB84 CBNZ W9, 0x3B1DB90
	0x03B1DB88 MOV X0, X8
	0x03B1DB8C BL 0x1C16DFC
	0x03B1DB90 ADD X2, X31, 0x0
	0x03B1DB94 MOV X0, X20
	0x03B1DB98 MOV V0.16B, V9.16B
	0x03B1DB9C MOV V1.16B, V8.16B
	0x03B1DBA0 MOV X1, X21
	0x03B1DBA4 BL 0x3B1D60C
	0x03B1DBA8 LDR X8, [X19 + 0x368]
	0x03B1DBAC CBZ X8, 0x3B1DC64
	0x03B1DBB0 LDR V10, [X31 + 0x4]
	0x03B1DBB4 MOVZ W9, 0x7F800000
	0x03B1DBB8 MOV X23, X31
	0x03B1DBBC MOV X22, X31
	0x03B1DBC0 MOVN W21, 0x0
	0x03B1DBC4 FMOV S11, W9
	0x03B1DBC8 LDRSW X9, [X8 + 0x2C]
	0x03B1DBCC CMP X22, X9
	0x03B1DBD0 B.GE 0x3B1DC6C
	0x03B1DBD4 LDR X8, [X8 + 0x50]
	0x03B1DBD8 CBZ X8, 0x3B1DC64
	0x03B1DBDC LDR W9, [X8 + 0x18]
	0x03B1DBE0 CMP X22, X9
	0x03B1DBE4 B.CS 0x3B1DC8C
	0x03B1DBE8 CBZ X20, 0x3B1DC64
	0x03B1DBEC ADD X8, X8, X23
	0x03B1DBF0 LDR V1, [X8 + 0x4C]
	0x03B1DBF4 LDR V9, [X8 + 0x54]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x8C6000
	011 Move W8, [X20+1793]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x603000
	018 Move X0, [X0+2808]
	019 Call 0x1C17CF4
	020 Move X0, 0x63D000
	021 Move X0, [X0+2680]
	022 Call 0x1C17CF4
	023 Move X0, 0x631000
	024 Move X0, [X0+2696]
	025 Call 0x1C17CF4
	026 Move X0, 0x5D9000
	027 Move X0, [X0+2480]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1793], W8
	031 Move X22, 0x5D9000
	032 Move X23, 0x631000
	033 Move X24, 0x603000
	034 Move X8, [X19+96]
	035 Move X21, [X19+104]
	036 Move X22, [X22+2480]
	037 Move X23, [X23+2696]
	038 Move X24, [X24+2808]
	039 Compare X21, 0
	040 JumpIfEqual {185}
	041 Compare X8, 0
	042 JumpIfEqual {252}
	043 Move W9, [X21+24]
	044 Move W10, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W25, W31
	047 Move W26, 88
	048 Move W9, [X21+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+96]
	051 Compare X8, 0
	052 JumpIfEqual {252}
	053 Move W10, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X10, X8, X26
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Compare X10, 0
	058 JumpIfEqual {252}
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X9, X21, X26
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Compare X9, 0
	063 JumpIfEqual {252}
	064 Move W20, [X10+24]
	065 Move W9, [X9+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X22]
	068 Move W1, W20
	069 Call 0x1C17D6C
	070 Move W8, [X21+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X21, X26
	073 Move [X8-40], X0
	074 Move X21, [X19+104]
	075 Compare X21, 0
	076 JumpIfEqual {252}
	077 Move X0, [X23]
	078 Move W1, W20
	079 Call 0x1C17D6C
	080 Move W8, [X21+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X8, X21, X26
	083 Move [X8-16], X0
	084 Move X21, [X19+104]
	085 Compare X21, 0
	086 JumpIfEqual {252}
	087 Move X0, [X23]
	088 Move W1, W20
	089 Call 0x1C17D6C
	090 Move W8, [X21+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X21, X26
	093 Move [X8-8], X0
	094 Move X21, [X19+104]
	095 Compare X21, 0
	096 JumpIfEqual {252}
	097 Move X0, [X24]
	098 Move W1, W20
	099 Call 0x1C17D6C
	100 Move W8, [X21+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X21], X0
	103 Move X8, [X19+96]
	104 Compare X8, 0
	105 JumpIfEqual {252}
	106 Move W9, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, [X19+104]
	109 Compare X9, 0
	110 JumpIfEqual {252}
	111 Move W10, [X9+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Add X8, X8, X26
	114 Add X9, X9, X26
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 Move W2, W20
	118 Move X3, X31
	119 Call Array.Copy, X0, X1, X2
	120 Move X8, [X19+96]
	121 Compare X8, 0
	122 JumpIfEqual {252}
	123 Move W9, [X8+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X9, [X19+104]
	126 Compare X9, 0
	127 JumpIfEqual {252}
	128 Move W10, [X9+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X8, X8, X26
	131 Add X9, X9, X26
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 Move W2, W20
	135 Move X3, X31
	136 Call Array.Copy, X0, X1, X2
	137 Move X8, [X19+96]
	138 Compare X8, 0
	139 JumpIfEqual {252}
	140 Move W9, [X8+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X9, [X19+104]
	143 Compare X9, 0
	144 JumpIfEqual {252}
	145 Move W10, [X9+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add X8, X8, X26
	148 Add X9, X9, X26
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Move W2, W20
	152 Move X3, X31
	153 Call Array.Copy, X0, X1, X2
	154 Move X8, [X19+96]
	155 Compare X8, 0
	156 JumpIfEqual {252}
	157 Move W9, [X8+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X9, [X19+104]
	160 Compare X9, 0
	161 JumpIfEqual {252}
	162 Move W10, [X9+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, [X8]
	165 Move X1, [X9]
	166 Move W2, W20
	167 Move X3, X31
	168 Call Array.Copy, X0, X1, X2
	169 Move X21, [X19+104]
	170 Add W25, W25, 1
	171 Add X26, X26, 80
	172 Compare X21, 0
	173 JumpIfNotEqual {48}
	174 Move X0, X21
	175 Move X20, [X31+64]
	176 Move X19, [X31+72]
	177 Move X22, [X31+48]
	178 Move X21, [X31+56]
	179 Move X24, [X31+32]
	180 Move X23, [X31+40]
	181 Move X26, [X31+16]
	182 Move X25, [X31+24]
	183 Move X30, [X31+80]
	184 Return X0
	185 Compare X8, 0
	186 JumpIfEqual {252}
	187 Move X9, 0x63D000
	188 Move X9, [X9+2680]
	189 Move W1, [X8+24]
	190 Move X0, [X9]
	191 Call 0x1C17D6C
	192 Move [X19+104], X0
	193 Compare X0, 0
	194 JumpIfEqual {252}
	195 Move X21, X0
	196 Move X25, X31
	197 Move W26, W31
	198 Move W8, [X21+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, [X19+96]
	201 Compare X8, 0
	202 JumpIfEqual {252}
	203 Move W9, [X8+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Add X8, X8, X25
	206 Move X8, [X8+48]
	207 Compare X8, 0
	208 JumpIfEqual {252}
	209 Move W20, [X8+24]
	210 Move X0, [X22]
	211 Move W1, W20
	212 Call 0x1C17D6C
	213 Move W8, [X21+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Add X8, X21, X25
	216 Move [X8+48], X0
	217 Move X21, [X19+104]
	218 Compare X21, 0
	219 JumpIfEqual {252}
	220 Move X0, [X23]
	221 Move W1, W20
	222 Call 0x1C17D6C
	223 Move W8, [X21+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Add X8, X21, X25
	226 Move [X8+72], X0
	227 Move X21, [X19+104]
	228 Compare X21, 0
	229 JumpIfEqual {252}
	230 Move X0, [X23]
	231 Move W1, W20
	232 Call 0x1C17D6C
	233 Move W8, [X21+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add X8, X21, X25
	236 Move [X8+80], X0
	237 Move X21, [X19+104]
	238 Compare X21, 0
	239 JumpIfEqual {252}
	240 Move X0, [X24]
	241 Move W1, W20
	242 Call 0x1C17D6C
	243 Move W8, [X21+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add X8, X21, X25
	246 Move [X8+88], X0
	247 Move X21, [X19+104]
	248 Add X25, X25, 80
	249 Add W26, W26, 1
	250 Compare X21, 0
	251 JumpIfNotEqual {198}
	252 Call 0x1C17F20
	253 Call 0x1C17F28

Method: System.Void Resize(ref T[] array, System.Int32 size)

Disassembly:
	0x0229A05C CBZ X19, 0x229A0BC
	0x0229A060 MOV X0, X19
	0x0229A064 MOV X1, X20
	0x0229A068 MOV X2, X31
	0x0229A06C BL 0x33EE46C
	0x0229A070 MOV X0, X19
	0x0229A074 LDP X20, X19, [X31 + 0x10]
	0x0229A078 LDR X30, [X31], #0x20
	0x0229A07C RET
	0x0229A080 ADRP X0, 0x1E5E000
	0x0229A084 LDR X0, [X0 + 0x528]
	0x0229A088 BL 0x1C16D08
	0x0229A08C BL 0x1C16F10
	0x0229A090 MOV X20, X0
	0x0229A094 ADRP X0, 0x1E82000
	0x0229A098 LDR X0, [X0 + 0x778]
	0x0229A09C BL 0x1C16D08
	0x0229A0A0 MOV X1, X0
	0x0229A0A4 MOV X0, X20
	0x0229A0A8 MOV X2, X31
	0x0229A0AC BL 0x330E100
	0x0229A0B0 MOV X0, X20
	0x0229A0B4 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move W21, W1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Add W1, W21, 256
	015 Move W0, W21
	016 Move X1, X31
	017 Call Mathf.NextPowerOfTwo, X0
	018 Move W1, W0
	019 Move X8, [X19+56]
	020 Move X0, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, [X8+8]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call Array.Resize, X0, X1
	027 Return 

Method: System.Void Resize(ref T[] array, System.Int32 size, System.Boolean isBlockAllocated)

Disassembly:
	0x0229A1D0 LDR X1, [X8 + 0x10]
	0x0229A1D4 MOV V3.16B, V8.16B
	0x0229A1D8 MOV X19, X0
	0x0229A1DC BL 0x269B39C
	0x0229A1E0 MOV X0, X19
	0x0229A1E4 LDP X30, X19, [X31 + 0x20]
	0x0229A1E8 LDP D9, D8, [X31 + 0x10]
	0x0229A1EC LDP D11, D10, [X31], #0x30
	0x0229A1F0 RET
	0x0229A1F4 STR X30, [X31 - 0x20]!
	0x0229A1F8 STP X20, X19, [X31 + 0x10]
	0x0229A1FC LDR X8, [X1 + 0x38]
	0x0229A200 MOV X20, X1
	0x0229A204 MOV W19, W0
	0x0229A208 CBNZ X8, 0x229A218
	0x0229A20C MOV X0, X20
	0x0229A210 BL 0x1C5C6E0
	0x0229A214 LDR X8, [X20 + 0x38]
	0x0229A218 LDR X0, [X8 + 0x8]
	0x0229A21C LDRB W8, [X0 + 0x135]
	0x0229A220 TBNZ X8, 0x0, 0x229A228
	0x0229A224 BL 0x1C5C684
	0x0229A228 BL 0x1C16F10
	0x0229A22C LDR X8, [X20 + 0x38]
	0x0229A230 MOV W1, W19
	0x0229A234 MOV X20, X0
	0x0229A238 LDR X2, [X8 + 0x10]
	0x0229A23C BL 0x269BF68
	0x0229A240 MOV X0, X20
	0x0229A244 LDP X20, X19, [X31 + 0x10]
	0x0229A248 LDR X30, [X31], #0x20
	0x0229A24C RET
	0x0229A250 STR X30, [X31 - 0x20]!
	0x0229A254 STP X20, X19, [X31 + 0x10]
	0x0229A258 LDR X8, [X1 + 0x38]
	0x0229A25C MOV X20, X1
	0x0229A260 MOV W19, W0
	0x0229A264 CBNZ X8, 0x229A274
	0x0229A268 MOV X0, X20
	0x0229A26C BL 0x1C5C6E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move W22, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfEqual {17}
	013 Move TEMP, X22
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {23}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move TEMP, X22
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {29}
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add W20, W20, 256
	025 Move W0, W20
	026 Move X1, X31
	027 Call Mathf.NextPowerOfTwo, X0
	028 Move W20, W0
	029 Move X8, [X21]
	030 Compare X8, 0
	031 JumpIfEqual {51}
	032 Move W8, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 
	040 Move X8, [X19+56]
	041 Move X0, X21
	042 Move W1, W20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X2, [X8+8]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call Array.Resize, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B1DBF8 FMOV S0, W31
	0x03B1DBFC FMOV S2, W31
	0x03B1DC00 MOV X0, X20
	0x03B1DC04 MOV X1, X31
	0x03B1DC08 BL 0x3C3DE4C
	0x03B1DC0C MOV V8.16B, V1.16B
	0x03B1DC10 FMOV S0, W31
	0x03B1DC14 FMOV S2, W31
	0x03B1DC18 MOV X0, X20
	0x03B1DC1C MOV V1.16B, V9.16B
	0x03B1DC20 MOV X1, X31
	0x03B1DC24 BL 0x3C3DE4C
	0x03B1DC28 FCMP S8, S10
	0x03B1DC2C B.LE 0x3B1DC38
	0x03B1DC30 FCMP S1, S10
	0x03B1DC34 B.MI 0x3B1DC68
	0x03B1DC38 FABD S0, S8, S8
	0x03B1DC3C FABD S1, S1, S1
	0x03B1DC40 LDR X8, [X19 + 0x368]
	0x03B1DC44 FCMP S0, S1
	0x03B1DC48 FCSEL S0, S0, S1, MI
	0x03B1DC4C FCMP S0, S11
	0x03B1DC50 CSEL W21, W22, W21, MI
	0x03B1DC54 FCSEL S11, S0, S11, MI
	0x03B1DC58 ADD X22, X22, 0x1
	0x03B1DC5C ADD X23, X23, 0x5C
	0x03B1DC60 CBNZ X8, 0x3B1DBC8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8C6000
	005 Move X19, 0x63C000
	006 Move W8, [X20+1794]
	007 Move X19, [X19+872]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x63C000
	013 Move X0, [X0+872]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1794], W8
	017 Move X8, [X19]
	018 Move W9, 0xFE00
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	021 Move X8, [X8+184]
	022 Move W9, 0xFE00
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 Move [X8], D0
	025 Move X8, [X19]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	029 Move X8, [X8+184]
	030 Move [X8+8], D0
	031 Move X30, [X31+32]
	032 Return 

