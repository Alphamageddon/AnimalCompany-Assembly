Type: TMPro.TMP_DefaultControls

Method: UnityEngine.GameObject CreateUIElementRoot(System.String name, UnityEngine.Vector2 size)

Disassembly:
	0x03ADD6A8 LDR X8, [X8 + 0xB8]
	0x03ADD6AC LDP S0, S1, [X8 + 0x8]
	0x03ADD6B0 BL 0x3C3E764
	0x03ADD6B4 LDRB W8, [X26 + 0x78F]
	0x03ADD6B8 CBNZ W8, 0x3ADD6D0
	0x03ADD6BC ADRP X0, 0x61E000
	0x03ADD6C0 LDR X0, [X0 + 0xF08]
	0x03ADD6C4 BL 0x1C16CF4
	0x03ADD6C8 MOVZ W8, 0x1
	0x03ADD6CC STRB W8, [X26 + 0x78F]
	0x03ADD6D0 LDR X8, [X27]
	0x03ADD6D4 MOV X0, X21
	0x03ADD6D8 MOV X1, X31
	0x03ADD6DC LDR X8, [X8 + 0xB8]
	0x03ADD6E0 LDP S0, S1, [X8]
	0x03ADD6E4 BL 0x3C3E99C
	0x03ADD6E8 FMOV S0, W31
	0x03ADD6EC FMOV S1, W31
	0x03ADD6F0 MOV X0, X21
	0x03ADD6F4 MOV X1, X31
	0x03ADD6F8 BL 0x3C3ECAC
	0x03ADD6FC FMOV S0, W31
	0x03ADD700 FMOV S1, W31
	0x03ADD704 MOV X0, X21
	0x03ADD708 MOV X1, X31
	0x03ADD70C BL 0x3C3EE40
	0x03ADD710 CBZ X20, 0x3ADD764
	0x03ADD714 MOV X0, X20
	0x03ADD718 MOV X1, X22
	0x03ADD71C BL 0x3ADD768
	0x03ADD720 MOV X0, X20
	0x03ADD724 MOV X1, X23
	0x03ADD728 BL 0x3ADD7C0
	0x03ADD72C MOV X0, X20
	0x03ADD730 MOV X1, X25
	0x03ADD734 BL 0x3ADD834
	0x03ADD738 LDR X1, [X23 + 0xF8]
	0x03ADD73C MOV X0, X20
	0x03ADD740 BL 0x3ADD88C
	0x03ADD744 MOV X0, X19
	0x03ADD748 LDP X20, X19, [X31 + 0x50]
	0x03ADD74C LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x906000
	008 Move X21, 0x617000
	009 Move W8, [X19+1377]
	010 Move X21, [X21+2648]
	011 Move V8, V1
	012 Move V9, V0
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x67C000
	019 Move X0, [X0+1368]
	020 Call 0x1C17CF4
	021 Move X0, 0x617000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+1377], W8
	026 Move X0, [X21]
	027 Call 0x1C17F10
	028 Move X1, X20
	029 Move X2, X31
	030 Move X19, X0
	031 Call GameObject..ctor, X0, X1
	032 Compare X19, 0
	033 JumpIfEqual {53}
	034 Move X8, 0x67C000
	035 Move X8, [X8+1368]
	036 Move X0, X19
	037 Move X1, [X8]
	038 Call 0x21E61FC, X0
	039 Compare X0, 0
	040 JumpIfEqual {53}
	041 Move V0, V9
	042 Move V1, V8
	043 Move X1, X31
	044 Call RectTransform.set_sizeDelta, X0, X1
	045 Move X0, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Move D9, [X31+48]
	051 Move D8, [X31+56]
	052 Return X0
	053 Call 0x1C17F20

Method: UnityEngine.GameObject CreateUIObject(System.String name, UnityEngine.GameObject parent)

Disassembly:
	0x03ADD750 LDP X24, X23, [X31 + 0x30]
	0x03ADD754 LDP X26, X25, [X31 + 0x20]
	0x03ADD758 LDP X28, X27, [X31 + 0x10]
	0x03ADD75C LDP X29, X30, [X31], #0x60
	0x03ADD760 RET
	0x03ADD764 BL 0x1C16F20
	0x03ADD768 STR X30, [X31 - 0x30]!
	0x03ADD76C STP X22, X21, [X31 + 0x10]
	0x03ADD770 STP X20, X19, [X31 + 0x20]
	0x03ADD774 ADRP X22, 0x905000
	0x03ADD778 ADRP X21, 0x67B000
	0x03ADD77C LDRB W8, [X22 + 0x5DC]
	0x03ADD780 LDR X21, [X21 + 0x950]
	0x03ADD784 MOV X19, X1
	0x03ADD788 MOV X20, X0
	0x03ADD78C TBNZ X8, 0x0, 0x3ADD7A4
	0x03ADD790 ADRP X0, 0x67B000
	0x03ADD794 LDR X0, [X0 + 0x950]
	0x03ADD798 BL 0x1C16CF4
	0x03ADD79C MOVZ W8, 0x1
	0x03ADD7A0 STRB W8, [X22 + 0x5DC]
	0x03ADD7A4 LDR X2, [X21]
	0x03ADD7A8 ADD X0, X20, 0x110
	0x03ADD7AC MOV X1, X19
	0x03ADD7B0 LDP X20, X19, [X31 + 0x20]
	0x03ADD7B4 LDP X22, X21, [X31 + 0x10]
	0x03ADD7B8 LDR X30, [X31], #0x30
	0x03ADD7BC B 0x2253B70
	0x03ADD7C0 STR X30, [X31 - 0x30]!
	0x03ADD7C4 STP X22, X21, [X31 + 0x10]
	0x03ADD7C8 STP X20, X19, [X31 + 0x20]
	0x03ADD7CC ADRP X22, 0x905000
	0x03ADD7D0 ADRP X21, 0x67B000
	0x03ADD7D4 LDRB W8, [X22 + 0x5DD]
	0x03ADD7D8 LDR X21, [X21 + 0x958]
	0x03ADD7DC MOV X20, X1
	0x03ADD7E0 MOV X19, X0
	0x03ADD7E4 TBNZ X8, 0x0, 0x3ADD7FC
	0x03ADD7E8 ADRP X0, 0x67B000
	0x03ADD7EC LDR X0, [X0 + 0x958]
	0x03ADD7F0 BL 0x1C16CF4
	0x03ADD7F4 MOVZ W8, 0x1
	0x03ADD7F8 STRB W8, [X22 + 0x5DD]
	0x03ADD7FC LDR X2, [X21]
	0x03ADD800 ADD X0, X19, 0x138
	0x03ADD804 MOV X1, X20
	0x03ADD808 BL 0x2253B70
	0x03ADD80C TBZ X0, 0x0, 0x3ADD824

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x906000
	007 Move X22, 0x617000
	008 Move W8, [X20+1378]
	009 Move X22, [X22+2648]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x67C000
	017 Move X0, [X0+1368]
	018 Call 0x1C17CF4
	019 Move X0, 0x617000
	020 Move X0, [X0+2648]
	021 Call 0x1C17CF4
	022 Move X0, 0x67C000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1378], W8
	027 Move X0, [X22]
	028 Call 0x1C17F10
	029 Move X1, X21
	030 Move X2, X31
	031 Move X20, X0
	032 Call GameObject..ctor, X0, X1
	033 Compare X20, 0
	034 JumpIfEqual {57}
	035 Move X8, 0x67C000
	036 Move X8, [X8+1368]
	037 Move X21, 0x67C000
	038 Move X0, X20
	039 Move X1, [X8]
	040 Move X21, [X21+2264]
	041 Call 0x21E61FC, X0
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X19
	049 Call TMP_DefaultControls.SetParentAndAlign, X0, X1
	050 Move X0, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Void SetDefaultTextValues(TMPro.TMP_Text lbl)

Disassembly:
	0x03ADD910 STP X29, X30, [X31 + 0x70]
	0x03ADD914 STP X28, X27, [X31 + 0x80]
	0x03ADD918 STP X26, X25, [X31 + 0x90]
	0x03ADD91C STP X24, X23, [X31 + 0xA0]
	0x03ADD920 STP X22, X21, [X31 + 0xB0]
	0x03ADD924 STP X20, X19, [X31 + 0xC0]
	0x03ADD928 ADRP X19, 0x905000
	0x03ADD92C ADRP X20, 0x67B000
	0x03ADD930 LDRB W8, [X19 + 0x56B]
	0x03ADD934 LDR X20, [X20 + 0x8D8]
	0x03ADD938 MOV X29, X0
	0x03ADD93C TBNZ X8, 0x0, 0x3ADDA80
	0x03ADD940 ADRP X0, 0x67B000
	0x03ADD944 LDR X0, [X0 + 0x8E0]
	0x03ADD948 BL 0x1C16CF4
	0x03ADD94C ADRP X0, 0x67B000
	0x03ADD950 LDR X0, [X0 + 0x970]
	0x03ADD954 BL 0x1C16CF4
	0x03ADD958 ADRP X0, 0x67B000
	0x03ADD95C LDR X0, [X0 + 0x978]
	0x03ADD960 BL 0x1C16CF4
	0x03ADD964 ADRP X0, 0x67B000
	0x03ADD968 LDR X0, [X0 + 0x980]
	0x03ADD96C BL 0x1C16CF4
	0x03ADD970 ADRP X0, 0x67B000
	0x03ADD974 LDR X0, [X0 + 0x910]
	0x03ADD978 BL 0x1C16CF4
	0x03ADD97C ADRP X0, 0x67B000
	0x03ADD980 LDR X0, [X0 + 0x988]
	0x03ADD984 BL 0x1C16CF4
	0x03ADD988 ADRP X0, 0x676000
	0x03ADD98C LDR X0, [X0 + 0xB40]
	0x03ADD990 BL 0x1C16CF4
	0x03ADD994 ADRP X0, 0x67B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x906000
	006 Move X20, 0x67C000
	007 Move W8, [X21+1379]
	008 Move X20, [X20+2264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x67C000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1379], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Compare X19, 0
	026 JumpIfEqual {46}
	027 Move X8, [X0+184]
	028 Move X9, [X19]
	029 Move X0, X19
	030 Move S2, [X8+48]
	031 Move S3, [X8+52]
	032 Move S0, [X8+40]
	033 Move S1, [X8+44]
	034 Move X8, [X9+680]
	035 Move X1, [X9+688]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X0, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move S0, 14
	041 Move X1, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call TMP_Text.set_fontSize, X0, V0
	045 Return 
	046 Call 0x1C17F20

Method: System.Void SetDefaultColorTransitionValues(UnityEngine.UI.Selectable slider)

Disassembly:
	0x03ADD998 LDR X0, [X0 + 0x990]
	0x03ADD99C BL 0x1C16CF4
	0x03ADD9A0 ADRP X0, 0x67B000
	0x03ADD9A4 LDR X0, [X0 + 0x998]
	0x03ADD9A8 BL 0x1C16CF4
	0x03ADD9AC ADRP X0, 0x67B000
	0x03ADD9B0 LDR X0, [X0 + 0x9A0]
	0x03ADD9B4 BL 0x1C16CF4
	0x03ADD9B8 ADRP X0, 0x63D000
	0x03ADD9BC LDR X0, [X0 + 0xC70]
	0x03ADD9C0 BL 0x1C16CF4
	0x03ADD9C4 ADRP X0, 0x67B000
	0x03ADD9C8 LDR X0, [X0 + 0x8D8]
	0x03ADD9CC BL 0x1C16CF4
	0x03ADD9D0 ADRP X0, 0x67B000
	0x03ADD9D4 LDR X0, [X0 + 0x9A8]
	0x03ADD9D8 BL 0x1C16CF4
	0x03ADD9DC ADRP X0, 0x67B000
	0x03ADD9E0 LDR X0, [X0 + 0x9B0]
	0x03ADD9E4 BL 0x1C16CF4
	0x03ADD9E8 ADRP X0, 0x67B000
	0x03ADD9EC LDR X0, [X0 + 0x9B8]
	0x03ADD9F0 BL 0x1C16CF4
	0x03ADD9F4 ADRP X0, 0x67B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x906000
	005 Move W8, [X20+1380]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x63F000
	012 Move X0, [X0+1512]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1380], W8
	016 Compare X19, 0
	017 JumpIfEqual {33}
	018 Move X8, 0x63F000
	019 Move X8, [X8+1512]
	020 Move X0, [X8]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfEqual {28}
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Call 0x1C17DFC
	032 Return 
	033 Call 0x1C17F20

Method: System.Void SetParentAndAlign(UnityEngine.GameObject child, UnityEngine.GameObject parent)

Disassembly:
	0x03ADD810 MOV X0, X19
	0x03ADD814 LDP X20, X19, [X31 + 0x20]
	0x03ADD818 LDP X22, X21, [X31 + 0x10]
	0x03ADD81C LDR X30, [X31], #0x30
	0x03ADD820 B 0x3AEC538
	0x03ADD824 LDP X20, X19, [X31 + 0x20]
	0x03ADD828 LDP X22, X21, [X31 + 0x10]
	0x03ADD82C LDR X30, [X31], #0x30
	0x03ADD830 RET
	0x03ADD834 STR X30, [X31 - 0x30]!
	0x03ADD838 STP X22, X21, [X31 + 0x10]
	0x03ADD83C STP X20, X19, [X31 + 0x20]
	0x03ADD840 ADRP X22, 0x905000
	0x03ADD844 ADRP X21, 0x67B000
	0x03ADD848 LDRB W8, [X22 + 0x5DE]
	0x03ADD84C LDR X21, [X21 + 0x960]
	0x03ADD850 MOV X19, X1
	0x03ADD854 MOV X20, X0
	0x03ADD858 TBNZ X8, 0x0, 0x3ADD870
	0x03ADD85C ADRP X0, 0x67B000
	0x03ADD860 LDR X0, [X0 + 0x960]
	0x03ADD864 BL 0x1C16CF4
	0x03ADD868 MOVZ W8, 0x1
	0x03ADD86C STRB W8, [X22 + 0x5DE]
	0x03ADD870 LDR X2, [X21]
	0x03ADD874 ADD X0, X20, 0x148
	0x03ADD878 MOV X1, X19
	0x03ADD87C LDP X20, X19, [X31 + 0x20]
	0x03ADD880 LDP X22, X21, [X31 + 0x10]
	0x03ADD884 LDR X30, [X31], #0x30
	0x03ADD888 B 0x2253B70
	0x03ADD88C STR X30, [X31 - 0x30]!
	0x03ADD890 STP X22, X21, [X31 + 0x10]
	0x03ADD894 STP X20, X19, [X31 + 0x20]
	0x03ADD898 ADRP X22, 0x905000
	0x03ADD89C ADRP X21, 0x67B000
	0x03ADD8A0 LDRB W8, [X22 + 0x5EC]
	0x03ADD8A4 LDR X21, [X21 + 0x968]
	0x03ADD8A8 MOV X20, X1
	0x03ADD8AC MOV X19, X0
	0x03ADD8B0 TBNZ X8, 0x0, 0x3ADD8C8
	0x03ADD8B4 ADRP X0, 0x67B000
	0x03ADD8B8 LDR X0, [X0 + 0x968]
	0x03ADD8BC BL 0x1C16CF4
	0x03ADD8C0 MOVZ W8, 0x1
	0x03ADD8C4 STRB W8, [X22 + 0x5EC]
	0x03ADD8C8 LDR X2, [X21]
	0x03ADD8CC ADD X0, X19, 0x2C0
	0x03ADD8D0 MOV X1, X20
	0x03ADD8D4 BL 0x2253B70
	0x03ADD8D8 TBZ X0, 0x0, 0x3ADD8FC
	0x03ADD8DC LDR X1, [X19 + 0x2C0]
	0x03ADD8E0 MOV X0, X19
	0x03ADD8E4 BL 0x3AEDB30
	0x03ADD8E8 MOV X0, X19
	0x03ADD8EC LDP X20, X19, [X31 + 0x20]
	0x03ADD8F0 LDP X22, X21, [X31 + 0x10]
	0x03ADD8F4 LDR X30, [X31], #0x30
	0x03ADD8F8 B 0x3AECBA4
	0x03ADD8FC LDP X20, X19, [X31 + 0x20]
	0x03ADD900 LDP X22, X21, [X31 + 0x10]
	0x03ADD904 LDR X30, [X31], #0x30
	0x03ADD908 RET
	0x03ADD90C SUB X31, X31, 0xD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x906000
	007 Move X22, 0x617000
	008 Move W8, [X21+1381]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x617000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x67C000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1381], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 
	043 Compare X19, 0
	044 JumpIfEqual {82}
	045 Move X0, X19
	046 Move X1, X31
	047 Call GameObject.get_transform, X0
	048 Compare X20, 0
	049 JumpIfEqual {82}
	050 Move X21, X0
	051 Move X0, X20
	052 Move X1, X31
	053 Call GameObject.get_transform, X0
	054 Compare X21, 0
	055 JumpIfEqual {82}
	056 Move X1, X0
	057 Move X0, X21
	058 Move W2, W31
	059 Move X3, X31
	060 Call Transform.SetParent, X0, X1, X2
	061 Move X0, X20
	062 Move X1, X31
	063 Call GameObject.get_layer, X0
	064 Move X8, 0x67C000
	065 Move X8, [X8+2264]
	066 Move W20, W0
	067 Move X8, [X8]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {73}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, X19
	074 Move W1, W20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Call TMP_DefaultControls.SetLayerRecursively, X0, X1
	081 Return 
	082 Call 0x1C17F20

Method: System.Void SetLayerRecursively(UnityEngine.GameObject go, System.Int32 layer)

Disassembly:
	0x03ADD9F8 LDR X0, [X0 + 0x9C0]
	0x03ADD9FC BL 0x1C16CF4
	0x03ADDA00 ADRP X0, 0x67B000
	0x03ADDA04 LDR X0, [X0 + 0x9C8]
	0x03ADDA08 BL 0x1C16CF4
	0x03ADDA0C ADRP X0, 0x67B000
	0x03ADDA10 LDR X0, [X0 + 0x9D0]
	0x03ADDA14 BL 0x1C16CF4
	0x03ADDA18 ADRP X0, 0x67B000
	0x03ADDA1C LDR X0, [X0 + 0x9D8]
	0x03ADDA20 BL 0x1C16CF4
	0x03ADDA24 ADRP X0, 0x67B000
	0x03ADDA28 LDR X0, [X0 + 0x9E0]
	0x03ADDA2C BL 0x1C16CF4
	0x03ADDA30 ADRP X0, 0x67B000
	0x03ADDA34 LDR X0, [X0 + 0x9E8]
	0x03ADDA38 BL 0x1C16CF4
	0x03ADDA3C ADRP X0, 0x67B000
	0x03ADDA40 LDR X0, [X0 + 0x9F0]
	0x03ADDA44 BL 0x1C16CF4
	0x03ADDA48 ADRP X0, 0x67B000
	0x03ADDA4C LDR X0, [X0 + 0x9F8]
	0x03ADDA50 BL 0x1C16CF4
	0x03ADDA54 ADRP X0, 0x67B000
	0x03ADDA58 LDR X0, [X0 + 0xA00]
	0x03ADDA5C BL 0x1C16CF4
	0x03ADDA60 ADRP X0, 0x67B000
	0x03ADDA64 LDR X0, [X0 + 0xA08]
	0x03ADDA68 BL 0x1C16CF4
	0x03ADDA6C ADRP X0, 0x67B000
	0x03ADDA70 LDR X0, [X0 + 0x8F8]
	0x03ADDA74 BL 0x1C16CF4
	0x03ADDA78 MOVZ W8, 0x1
	0x03ADDA7C STRB W8, [X19 + 0x56B]
	0x03ADDA80 ADRP X28, 0x67B000
	0x03ADDA84 ADRP X19, 0x67B000
	0x03ADDA88 ADRP X26, 0x67B000
	0x03ADDA8C LDR X28, [X28 + 0xA08]
	0x03ADDA90 LDR X19, [X19 + 0x9C0]
	0x03ADDA94 LDR X26, [X26 + 0x9C8]
	0x03ADDA98 LDR X0, [X20]
	0x03ADDA9C ADRP X27, 0x67B000
	0x03ADDAA0 ADRP X21, 0x67B000
	0x03ADDAA4 ADRP X25, 0x67B000
	0x03ADDAA8 ADRP X24, 0x67B000
	0x03ADDAAC ADRP X23, 0x67B000
	0x03ADDAB0 ADRP X22, 0x67B000
	0x03ADDAB4 LDR X27, [X27 + 0x9F8]
	0x03ADDAB8 LDR X21, [X21 + 0x9D0]
	0x03ADDABC LDR X25, [X25 + 0x9F0]
	0x03ADDAC0 LDR W8, [X0 + 0xE0]
	0x03ADDAC4 LDR X24, [X24 + 0x9E8]
	0x03ADDAC8 LDR X23, [X23 + 0xA00]
	0x03ADDACC LDR X22, [X22 + 0x9A8]
	0x03ADDAD0 CBNZ W8, 0x3ADDADC
	0x03ADDAD4 BL 0x1C16DFC
	0x03ADDAD8 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x906000
	008 Move W8, [X21+1382]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x67C000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1382], W8
	020 Compare X20, 0
	021 JumpIfEqual {68}
	022 Move X0, X20
	023 Move W1, W19
	024 Move X2, X31
	025 Call GameObject.set_layer, X0, X1
	026 Move X0, X20
	027 Move X1, X31
	028 Call GameObject.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {68}
	031 Move X1, X31
	032 Move X20, X0
	033 Call Transform.get_childCount, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X23, 0x67C000
	036 Move X23, [X23+2264]
	037 Move W21, W31
	038 Move X0, X20
	039 Move W1, W21
	040 Move X2, X31
	041 Call Transform.GetChild, X0, X1
	042 Compare X0, 0
	043 JumpIfEqual {68}
	044 Move X1, X31
	045 Call Component.get_gameObject, X0
	046 Move X8, [X23]
	047 Move X22, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X22
	054 Move W1, W19
	055 Call TMP_DefaultControls.SetLayerRecursively, X0, X1
	056 Move X0, X20
	057 Move X1, X31
	058 Add W21, W21, 1
	059 Call Transform.get_childCount, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 Return 
	068 Call 0x1C17F20

Method: UnityEngine.GameObject CreateScrollbar(TMPro.TMP_DefaultControls/Resources resources)

Disassembly:
	0x03ADDADC LDR X8, [X0 + 0xB8]
	0x03ADDAE0 LDR X0, [X28]
	0x03ADDAE4 LDP S0, S1, [X8 + 0x8]
	0x03ADDAE8 BL 0x3ADC6A8
	0x03ADDAEC LDR X8, [X19]
	0x03ADDAF0 MOV X19, X0
	0x03ADDAF4 MOV X1, X19
	0x03ADDAF8 MOV X0, X8
	0x03ADDAFC BL 0x3ADC750
	0x03ADDB00 LDR X8, [X26]
	0x03ADDB04 STR X0, [X31 + 0x10]
	0x03ADDB08 MOV X1, X19
	0x03ADDB0C MOV X0, X8
	0x03ADDB10 BL 0x3ADC750
	0x03ADDB14 LDR X8, [X27]
	0x03ADDB18 STR X0, [X31 + 0x8]
	0x03ADDB1C MOV X1, X19
	0x03ADDB20 MOV X0, X8
	0x03ADDB24 BL 0x3ADC750
	0x03ADDB28 LDR X8, [X21]
	0x03ADDB2C MOV X20, X0
	0x03ADDB30 MOV X1, X20
	0x03ADDB34 MOV X0, X8
	0x03ADDB38 BL 0x3ADC750
	0x03ADDB3C LDR X8, [X25]
	0x03ADDB40 MOV X26, X0
	0x03ADDB44 MOV X1, X26
	0x03ADDB48 MOV X0, X8
	0x03ADDB4C BL 0x3ADC750
	0x03ADDB50 LDR X8, [X24]
	0x03ADDB54 MOV X24, X0
	0x03ADDB58 MOV X1, X24
	0x03ADDB5C MOV X0, X8
	0x03ADDB60 BL 0x3ADC750
	0x03ADDB64 LDR X8, [X23]
	0x03ADDB68 MOV X23, X0
	0x03ADDB6C MOV X1, X23
	0x03ADDB70 MOV X0, X8
	0x03ADDB74 BL 0x3ADC750
	0x03ADDB78 LDR X8, [X22]
	0x03ADDB7C MOV X22, X0
	0x03ADDB80 MOV X1, X23
	0x03ADDB84 MOV X0, X8
	0x03ADDB88 BL 0x3ADC750
	0x03ADDB8C ADRP X8, 0x67B000
	0x03ADDB90 LDR X8, [X8 + 0x9E0]
	0x03ADDB94 MOV X28, X0
	0x03ADDB98 MOV X1, X23
	0x03ADDB9C STR X23, [X31 + 0x20]
	0x03ADDBA0 LDR X8, [X8]
	0x03ADDBA4 MOV X0, X8
	0x03ADDBA8 BL 0x3ADC750
	0x03ADDBAC LDR X8, [X29 + 0x30]
	0x03ADDBB0 LDP V2, V0, [X29 + 0x10]
	0x03ADDBB4 LDR V1, [X29]
	0x03ADDBB8 MOV X27, X0
	0x03ADDBBC ADD X0, X31, 0x30
	0x03ADDBC0 STR X8, [X31 + 0x60]
	0x03ADDBC4 STP V2, V0, [X31 + 0x40]
	0x03ADDBC8 STR V1, [X31 + 0x3]
	0x03ADDBCC BL 0x3ADCADC
	0x03ADDBD0 CBZ X0, 0x3ADE6DC
	0x03ADDBD4 STR X24, [X31 + 0x18]
	0x03ADDBD8 STR X22, [X31 + 0x28]
	0x03ADDBDC ADRP X8, 0x67B000
	0x03ADDBE0 LDR X8, [X8 + 0x8F8]
	0x03ADDBE4 ADRP X22, 0x67B000
	0x03ADDBE8 MOV X2, X31
	0x03ADDBEC MOV X21, X0
	0x03ADDBF0 LDR X1, [X8]
	0x03ADDBF4 LDR X22, [X22 + 0x990]
	0x03ADDBF8 BL 0x3C38A84
	0x03ADDBFC MOV X0, X21
	0x03ADDC00 MOV X1, X20
	0x03ADDC04 BL 0x3ADC810
	0x03ADDC08 LDR X1, [X22]
	0x03ADDC0C MOV X0, X21
	0x03ADDC10 BL 0x21E52E4
	0x03ADDC14 CBZ X0, 0x3ADE6DC
	0x03ADDC18 ADRP X24, 0x676000
	0x03ADDC1C LDR X24, [X24 + 0xB40]
	0x03ADDC20 MOVZ W1, 0x2
	0x03ADDC24 MOVZ W2, 0x1
	0x03ADDC28 MOV X3, X31
	0x03ADDC2C MOV X22, X0
	0x03ADDC30 MOVZ W23, 0x1
	0x03ADDC34 BL 0x3E3CDF0
	0x03ADDC38 LDR X1, [X24]
	0x03ADDC3C MOV X0, X21
	0x03ADDC40 BL 0x21E52E4
	0x03ADDC44 ADRP X25, 0x8FC000
	0x03ADDC48 LDRB W8, [X25 + 0x78E]
	0x03ADDC4C MOV X21, X0
	0x03ADDC50 CBNZ W8, 0x3ADDC64
	0x03ADDC54 ADRP X0, 0x61E000
	0x03ADDC58 LDR X0, [X0 + 0xF08]
	0x03ADDC5C BL 0x1C16CF4
	0x03ADDC60 STRB W23, [X25 + 0x78E]
	0x03ADDC64 CBZ X21, 0x3ADE6DC
	0x03ADDC68 ADRP X23, 0x61E000
	0x03ADDC6C LDR X23, [X23 + 0xF08]
	0x03ADDC70 MOV X0, X21
	0x03ADDC74 MOV X1, X31
	0x03ADDC78 LDR X8, [X23]
	0x03ADDC7C LDR X8, [X8 + 0xB8]
	0x03ADDC80 LDP S0, S1, [X8 + 0x28]
	0x03ADDC84 BL 0x3C3E648
	0x03ADDC88 ADRP X24, 0x904000
	0x03ADDC8C LDRB W8, [X24 + 0xA48]
	0x03ADDC90 CBNZ W8, 0x3ADDCA8
	0x03ADDC94 ADRP X0, 0x61E000
	0x03ADDC98 LDR X0, [X0 + 0xF08]
	0x03ADDC9C BL 0x1C16CF4
	0x03ADDCA0 MOVZ W8, 0x1
	0x03ADDCA4 STRB W8, [X24 + 0xA48]
	0x03ADDCA8 LDR X8, [X23]
	0x03ADDCAC MOV X0, X21
	0x03ADDCB0 MOV X1, X31
	0x03ADDCB4 LDR X8, [X8 + 0xB8]
	0x03ADDCB8 LDP S0, S1, [X8 + 0x8]
	0x03ADDCBC BL 0x3C3E764
	0x03ADDCC0 LDRB W8, [X24 + 0xA48]
	0x03ADDCC4 CBNZ W8, 0x3ADDCDC
	0x03ADDCC8 ADRP X0, 0x61E000
	0x03ADDCCC LDR X0, [X0 + 0xF08]
	0x03ADDCD0 BL 0x1C16CF4
	0x03ADDCD4 MOVZ W8, 0x1
	0x03ADDCD8 STRB W8, [X24 + 0xA48]
	0x03ADDCDC LDR X8, [X23]
	0x03ADDCE0 MOV X0, X21
	0x03ADDCE4 MOV X1, X31
	0x03ADDCE8 LDR X8, [X8 + 0xB8]
	0x03ADDCEC LDP S0, S1, [X8 + 0x8]
	0x03ADDCF0 BL 0x3C3EAB8
	0x03ADDCF4 MOV X0, X21
	0x03ADDCF8 MOV X1, X31
	0x03ADDCFC BL 0x3C3E90C
	0x03ADDD00 FMOV S1, W31
	0x03ADDD04 MOV X0, X21
	0x03ADDD08 MOV X1, X31
	0x03ADDD0C BL 0x3C3E99C
	0x03ADDD10 CBZ X27, 0x3ADE6DC
	0x03ADDD14 ADRP X8, 0x67B000
	0x03ADDD18 LDR X8, [X8 + 0x910]
	0x03ADDD1C MOV X0, X27
	0x03ADDD20 LDR X1, [X8]
	0x03ADDD24 BL 0x21E51FC
	0x03ADDD28 MOV X21, X0
	0x03ADDD2C BL 0x3ADC910
	0x03ADDD30 LDR X23, [X31 + 0x28]
	0x03ADDD34 CBZ X21, 0x3ADE6DC
	0x03ADDD38 MOVZ W1, 0x201
	0x03ADDD3C MOV X0, X21
	0x03ADDD40 MOV X2, X31
	0x03ADDD44 BL 0x3AF80D0
	0x03ADDD48 CBZ X23, 0x3ADE6DC
	0x03ADDD4C ADRP X25, 0x67B000
	0x03ADDD50 LDR X25, [X25 + 0x8E0]
	0x03ADDD54 MOV X0, X23
	0x03ADDD58 LDR X1, [X25]
	0x03ADDD5C BL 0x21E51FC
	0x03ADDD60 CBZ X0, 0x3ADE6DC
	0x03ADDD64 LDR X8, [X0]
	0x03ADDD68 FMOV S3, 1
	0x03ADDD6C MOV X23, X0
	0x03ADDD70 STR X27, [X31]
	0x03ADDD74 LDR X9, [X8 + 0x2A8]
	0x03ADDD78 LDR X1, [X8 + 0x2B0]
	0x03ADDD7C ADRP X8, 0xFFFFFFFFFD00D000
	0x03ADDD80 LDR V0, [X8 + 0x1DC]
	0x03ADDD84 MOV V1.16B, V0.16B
	0x03ADDD88 MOV V2.16B, V0.16B
	0x03ADDD8C BLR X9
	0x03ADDD90 CBZ X28, 0x3ADE6DC
	0x03ADDD94 LDR X1, [X25]
	0x03ADDD98 MOV X0, X28
	0x03ADDD9C MOV X24, X19
	0x03ADDDA0 BL 0x21E51FC
	0x03ADDDA4 CBZ X0, 0x3ADE6DC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x906000
	010 Move X24, 0x67C000
	011 Move W8, [X19+1383]
	012 Move X24, [X24+2264]
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x67C000
	019 Move X0, [X0+2272]
	020 Call 0x1C17CF4
	021 Move X0, 0x67C000
	022 Move X0, [X0+2280]
	023 Call 0x1C17CF4
	024 Move X0, 0x677000
	025 Move X0, [X0+2880]
	026 Call 0x1C17CF4
	027 Move X0, 0x67C000
	028 Move X0, [X0+2264]
	029 Call 0x1C17CF4
	030 Move X0, 0x67C000
	031 Move X0, [X0+2288]
	032 Call 0x1C17CF4
	033 Move X0, 0x67C000
	034 Move X0, [X0+2296]
	035 Call 0x1C17CF4
	036 Move X0, 0x67C000
	037 Move X0, [X0+2304]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+1383], W8
	041 Move X0, [X24]
	042 Move X21, 0x67C000
	043 Move X19, 0x67C000
	044 Move X20, 0x67C000
	045 Move W8, [X0+224]
	046 Move X21, [X21+2296]
	047 Move X19, [X19+2304]
	048 Move X20, [X20+2288]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X24]
	053 Move X8, [X0+184]
	054 Move X0, [X21]
	055 Move S0, [X8+16]
	056 Move S1, [X8+20]
	057 Call TMP_DefaultControls.CreateUIElementRoot, X0, X1
	058 Move X8, [X19]
	059 Move X19, X0
	060 Move X1, X19
	061 Move X0, X8
	062 Call TMP_DefaultControls.CreateUIObject, X0, X1
	063 Move X8, [X20]
	064 Move X23, X0
	065 Move X1, X23
	066 Move X0, X8
	067 Call TMP_DefaultControls.CreateUIObject, X0, X1
	068 Compare X19, 0
	069 JumpIfEqual {208}
	070 Move X25, 0x67C000
	071 Move X25, [X25+2272]
	072 Move X20, X0
	073 Move X0, X19
	074 Move X1, [X25]
	075 Call 0x21E61FC, X0
	076 Compare X0, 0
	077 JumpIfEqual {208}
	078 Move X1, [X22+8]
	079 Move X2, X31
	080 Move X21, X0
	081 Call Image.set_sprite, X0, X1
	082 Move W1, 1
	083 Move X0, X21
	084 Move X2, X31
	085 Call Image.set_type, X0, X1
	086 Move X8, [X24]
	087 Move X9, [X21]
	088 Move X0, X21
	089 Move X8, [X8+184]
	090 Move X10, [X9+680]
	091 Move X1, [X9+688]
	092 Move S0, [X8+24]
	093 Move S1, [X8+28]
	094 Move S2, [X8+32]
	095 Move S3, [X8+36]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare X20, 0
	098 JumpIfEqual {208}
	099 Move X1, [X25]
	100 Move X0, X20
	101 Call 0x21E61FC, X0
	102 Compare X0, 0
	103 JumpIfEqual {208}
	104 Move X1, [X22]
	105 Move X2, X31
	106 Move X21, X0
	107 Call Image.set_sprite, X0, X1
	108 Move W1, 1
	109 Move X0, X21
	110 Move X2, X31
	111 Call Image.set_type, X0, X1
	112 Move X8, [X24]
	113 Move X9, [X21]
	114 Move X0, X21
	115 Move X8, [X8+184]
	116 Move X10, [X9+680]
	117 Move X1, [X9+688]
	118 Move S0, [X8+24]
	119 Move S1, [X8+28]
	120 Move S2, [X8+32]
	121 Move S3, [X8+36]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X23, 0
	124 JumpIfEqual {208}
	125 Move X24, 0x677000
	126 Move X24, [X24+2880]
	127 Move X0, X23
	128 Move X1, [X24]
	129 Call 0x21E62E4, X0
	130 Compare X0, 0
	131 JumpIfEqual {208}
	132 Move S0, -20
	133 Move S1, -20
	134 Move X1, X31
	135 Move X22, X0
	136 Call RectTransform.set_sizeDelta, X0, X1
	137 Move X23, 0x8FD000
	138 Move W8, [X23+1935]
	139 Compare W8, 0
	140 JumpIfNotEqual {146}
	141 Move X0, 0x61F000
	142 Move X0, [X0+3848]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X23+1935], W8
	146 Move X23, 0x61F000
	147 Move X23, [X23+3848]
	148 Move X0, X22
	149 Move X1, X31
	150 Move X8, [X23]
	151 Move X8, [X8+184]
	152 Move S0, [X8]
	153 Move S1, [X8+4]
	154 Call RectTransform.set_anchorMin, X0, X1
	155 Move X25, 0x905000
	156 Move W8, [X25+2632]
	157 Compare W8, 0
	158 JumpIfNotEqual {164}
	159 Move X0, 0x61F000
	160 Move X0, [X0+3848]
	161 Call 0x1C17CF4
	162 Move W8, 1
	163 Move [X25+2632], W8
	164 Move X8, [X23]
	165 Move X0, X22
	166 Move X1, X31
	167 Move X8, [X8+184]
	168 Move S0, [X8+8]
	169 Move S1, [X8+12]
	170 Call RectTransform.set_anchorMax, X0, X1
	171 Move X1, [X24]
	172 Move X0, X20
	173 Call 0x21E62E4, X0
	174 Compare X0, 0
	175 JumpIfEqual {208}
	176 Move X22, 0x67C000
	177 Move X22, [X22+2280]
	178 Move S0, 20
	179 Move S1, 20
	180 Move X1, X31
	181 Move X20, X0
	182 Call RectTransform.set_sizeDelta, X0, X1
	183 Move X1, [X22]
	184 Move X0, X19
	185 Call 0x21E61FC, X0
	186 Compare X0, 0
	187 JumpIfEqual {208}
	188 Move X1, X20
	189 Move X2, X31
	190 Move X22, X0
	191 Call Scrollbar.set_handleRect, X0, X1
	192 Move X0, X22
	193 Move X1, X21
	194 Move X2, X31
	195 Call Selectable.set_targetGraphic, X0, X1
	196 Move X0, X22
	197 Call TMP_DefaultControls.SetDefaultColorTransitionValues, X0
	198 Move X0, X19
	199 Move X20, [X31+48]
	200 Move X19, [X31+56]
	201 Move X22, [X31+32]
	202 Move X21, [X31+40]
	203 Move X24, [X31+16]
	204 Move X23, [X31+24]
	205 Move X30, [X31+64]
	206 Move X25, [X31+72]
	207 Return X0
	208 Call 0x1C17F20

Method: UnityEngine.GameObject CreateButton(TMPro.TMP_DefaultControls/Resources resources)

Disassembly:
	0x03ADDDA8 LDR X1, [X29 + 0x20]
	0x03ADDDAC MOV X2, X31
	0x03ADDDB0 MOV X27, X0
	0x03ADDDB4 MOV X19, X28
	0x03ADDDB8 BL 0x3CD3398
	0x03ADDDBC LDR X0, [X31 + 0x20]
	0x03ADDDC0 CBZ X0, 0x3ADE6DC
	0x03ADDDC4 ADRP X8, 0x67B000
	0x03ADDDC8 LDR X8, [X8 + 0x988]
	0x03ADDDCC LDR X1, [X8]
	0x03ADDDD0 BL 0x21E51FC
	0x03ADDDD4 CBZ X0, 0x3ADE6DC
	0x03ADDDD8 MOV X1, X23
	0x03ADDDDC MOV X2, X31
	0x03ADDDE0 MOV X28, X0
	0x03ADDDE4 BL 0x3E40EB4
	0x03ADDDE8 MOVZ W1, 0x1
	0x03ADDDEC MOV X0, X28
	0x03ADDDF0 MOV X2, X31
	0x03ADDDF4 STR X27, [X28 + 0x108]
	0x03ADDDF8 BL 0x3E47488
	0x03ADDDFC CBZ X20, 0x3ADE6DC
	0x03ADDE00 LDR X1, [X25]
	0x03ADDE04 MOV X0, X20
	0x03ADDE08 BL 0x21E51FC
	0x03ADDE0C CBZ X0, 0x3ADE6DC
	0x03ADDE10 LDR X1, [X29]
	0x03ADDE14 ADRP X27, 0x67B000
	0x03ADDE18 LDR X27, [X27 + 0x978]
	0x03ADDE1C MOV X2, X31
	0x03ADDE20 MOV X23, X0
	0x03ADDE24 MOV X28, X19
	0x03ADDE28 BL 0x3CD3398
	0x03ADDE2C MOVZ W1, 0x1
	0x03ADDE30 MOV X0, X23
	0x03ADDE34 MOV X2, X31
	0x03ADDE38 BL 0x3CD364C
	0x03ADDE3C LDR X1, [X27]
	0x03ADDE40 MOV X0, X20
	0x03ADDE44 BL 0x21E51FC
	0x03ADDE48 MOV X23, X0
	0x03ADDE4C LDR X0, [X31 + 0x18]
	0x03ADDE50 CBZ X0, 0x3ADE6DC
	0x03ADDE54 MOV X1, X31
	0x03ADDE58 MOV X19, X24
	0x03ADDE5C BL 0x3C356F8
	0x03ADDE60 CBZ X23, 0x3ADE6DC
	0x03ADDE64 ADRP X27, 0x63D000
	0x03ADDE68 LDR X27, [X27 + 0xC70]
	0x03ADDE6C CBZ X0, 0x3ADDE80
	0x03ADDE70 LDR X1, [X27]
	0x03ADDE74 LDR X8, [X0]
	0x03ADDE78 CMP X8, X1
	0x03ADDE7C B.NE 0x3ADE6E0
	0x03ADDE80 STR X0, [X23 + 0x20]
	0x03ADDE84 CBZ X26, 0x3ADE6DC
	0x03ADDE88 MOV X0, X26
	0x03ADDE8C MOV X1, X31
	0x03ADDE90 BL 0x3C356F8
	0x03ADDE94 MOV X8, X0
	0x03ADDE98 CBZ X0, 0x3ADDEAC
	0x03ADDE9C LDR X1, [X27]
	0x03ADDEA0 LDR X9, [X8]
	0x03ADDEA4 CMP X9, X1
	0x03ADDEA8 B.NE 0x3ADE6E4
	0x03ADDEAC ADRP X27, 0x67B000
	0x03ADDEB0 LDR X27, [X27 + 0x970]
	0x03ADDEB4 MOV X0, X23
	0x03ADDEB8 MOV X1, X8
	0x03ADDEBC MOV X2, X31
	0x03ADDEC0 BL 0x3E3D2B8
	0x03ADDEC4 MOVZ W8, 0x2
	0x03ADDEC8 MOV X0, X23
	0x03ADDECC MOV X1, X22
	0x03ADDED0 MOV X2, X31
	0x03ADDED4 STRB W31, [X23 + 0x28]
	0x03ADDED8 STR W8, [X23 + 0x2C]
	0x03ADDEDC BL 0x3E3D500
	0x03ADDEE0 MOVZ W1, 0x2
	0x03ADDEE4 MOV X0, X23
	0x03ADDEE8 MOV X2, X31
	0x03ADDEEC BL 0x3E3D694
	0x03ADDEF0 FMOV S0, -3
	0x03ADDEF4 MOV X0, X23
	0x03ADDEF8 MOV X1, X31
	0x03ADDEFC BL 0x3E3D73C
	0x03ADDF00 LDR X1, [X27]
	0x03ADDF04 MOV X0, X26
	0x03ADDF08 BL 0x21E51FC
	0x03ADDF0C CBZ X0, 0x3ADE6DC
	0x03ADDF10 MOV W1, W31
	0x03ADDF14 MOV X2, X31
	0x03ADDF18 BL 0x3E36440
	0x03ADDF1C LDR X1, [X25]
	0x03ADDF20 MOV X0, X26
	0x03ADDF24 BL 0x21E51FC
	0x03ADDF28 LDR X23, [X31 + 0x10]
	0x03ADDF2C CBZ X0, 0x3ADE6DC
	0x03ADDF30 LDR X1, [X29 + 0x30]
	0x03ADDF34 MOV X2, X31
	0x03ADDF38 MOV X22, X0
	0x03ADDF3C BL 0x3CD3398
	0x03ADDF40 MOVZ W1, 0x1
	0x03ADDF44 MOV X0, X22
	0x03ADDF48 MOV X2, X31
	0x03ADDF4C BL 0x3CD364C
	0x03ADDF50 CBZ X23, 0x3ADE6DC
	0x03ADDF54 ADRP X8, 0x67B000
	0x03ADDF58 LDR X8, [X8 + 0x910]
	0x03ADDF5C MOV X0, X23
	0x03ADDF60 LDR X1, [X8]
	0x03ADDF64 BL 0x21E51FC
	0x03ADDF68 MOV X23, X0
	0x03ADDF6C BL 0x3ADC910
	0x03ADDF70 LDR X22, [X31 + 0x8]
	0x03ADDF74 CBZ X23, 0x3ADE6DC
	0x03ADDF78 MOVZ W1, 0x201
	0x03ADDF7C MOV X0, X23
	0x03ADDF80 MOV X2, X31
	0x03ADDF84 BL 0x3AF80D0
	0x03ADDF88 CBZ X22, 0x3ADE6DC
	0x03ADDF8C LDR X1, [X25]
	0x03ADDF90 MOV X0, X22
	0x03ADDF94 BL 0x21E51FC
	0x03ADDF98 CBZ X0, 0x3ADE6DC
	0x03ADDF9C LDR X1, [X29 + 0x28]
	0x03ADDFA0 MOV X2, X31
	0x03ADDFA4 BL 0x3CD3398
	0x03ADDFA8 CBZ X19, 0x3ADE6DC
	0x03ADDFAC LDR X1, [X25]
	0x03ADDFB0 MOV X0, X19
	0x03ADDFB4 BL 0x21E51FC
	0x03ADDFB8 CBZ X0, 0x3ADE6DC
	0x03ADDFBC LDR X1, [X29]
	0x03ADDFC0 ADRP X22, 0x67B000
	0x03ADDFC4 LDR X22, [X22 + 0x980]
	0x03ADDFC8 MOV X2, X31
	0x03ADDFCC MOV X27, X0
	0x03ADDFD0 BL 0x3CD3398
	0x03ADDFD4 ADRP X8, 0x67B000
	0x03ADDFD8 LDR X8, [X8 + 0x8D8]
	0x03ADDFDC LDR X9, [X27]
	0x03ADDFE0 MOV X0, X27
	0x03ADDFE4 LDR X8, [X8]
	0x03ADDFE8 LDR X10, [X9 + 0x2A8]
	0x03ADDFEC LDR X1, [X9 + 0x2B0]
	0x03ADDFF0 LDR X8, [X8 + 0xB8]
	0x03ADDFF4 LDP S0, S1, [X8 + 0x18]
	0x03ADDFF8 LDP S2, S3, [X8 + 0x20]
	0x03ADDFFC BLR X10
	0x03ADE000 MOVZ W1, 0x1
	0x03ADE004 MOV X0, X27
	0x03ADE008 MOV X2, X31
	0x03ADE00C BL 0x3CD364C
	0x03ADE010 LDR X1, [X22]
	0x03ADE014 MOV X0, X19
	0x03ADE018 BL 0x21E51FC
	0x03ADE01C CBZ X0, 0x3ADE6DC
	0x03ADE020 ADRP X25, 0x67A000
	0x03ADE024 LDR X25, [X25 + 0x9B0]
	0x03ADE028 MOV X1, X27
	0x03ADE02C MOV X2, X31
	0x03ADE030 MOV X22, X0
	0x03ADE034 BL 0x3E40EB4
	0x03ADE038 MOV X0, X22
	0x03ADE03C BL 0x3ADC998
	0x03ADE040 ADRP X24, 0x675000
	0x03ADE044 LDR X24, [X24 + 0xB40]
	0x03ADE048 MOV X0, X20
	0x03ADE04C LDR X1, [X24]
	0x03ADE050 BL 0x21E52E4
	0x03ADE054 STR X0, [X22 + 0x100]
	0x03ADE058 MOV X0, X22
	0x03ADE05C BL 0x3ADE728
	0x03ADE060 MOV X0, X22
	0x03ADE064 STR X23, [X22 + 0x108]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x906000
	010 Move X23, 0x67C000
	011 Move W8, [X19+1384]
	012 Move X23, [X23+2264]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0x67C000
	019 Move X0, [X0+2312]
	020 Call 0x1C17CF4
	021 Move X0, 0x67C000
	022 Move X0, [X0+2272]
	023 Call 0x1C17CF4
	024 Move X0, 0x67C000
	025 Move X0, [X0+1368]
	026 Call 0x1C17CF4
	027 Move X0, 0x67C000
	028 Move X0, [X0+2320]
	029 Call 0x1C17CF4
	030 Move X0, 0x677000
	031 Move X0, [X0+2880]
	032 Call 0x1C17CF4
	033 Move X0, 0x617000
	034 Move X0, [X0+2648]
	035 Call 0x1C17CF4
	036 Move X0, 0x67C000
	037 Move X0, [X0+2264]
	038 Call 0x1C17CF4
	039 Move X0, 0x67C000
	040 Move X0, [X0+2328]
	041 Call 0x1C17CF4
	042 Move X0, 0x669000
	043 Move X0, [X0+848]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+1384], W8
	047 Move X0, [X23]
	048 Move X24, 0x669000
	049 Move X19, 0x617000
	050 Move X21, 0x67C000
	051 Move W8, [X0+224]
	052 Move X24, [X24+848]
	053 Move X19, [X19+2648]
	054 Move X21, [X21+2328]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X23]
	059 Move X8, [X0+184]
	060 Move X0, [X24]
	061 Move S0, [X8+8]
	062 Move S1, [X8+12]
	063 Call TMP_DefaultControls.CreateUIElementRoot, X0, X1
	064 Move X8, [X19]
	065 Move X19, X0
	066 Move X0, X8
	067 Call 0x1C17F10
	068 Move X1, [X21]
	069 Move X2, X31
	070 Move X21, X0
	071 Call GameObject..ctor, X0, X1
	072 Compare X21, 0
	073 JumpIfEqual {202}
	074 Move X8, 0x67C000
	075 Move X8, [X8+1368]
	076 Move X0, X21
	077 Move X1, [X8]
	078 Call 0x21E61FC, X0
	079 Move X0, X21
	080 Move X1, X19
	081 Call TMP_DefaultControls.SetParentAndAlign, X0, X1
	082 Compare X19, 0
	083 JumpIfEqual {202}
	084 Move X8, 0x67C000
	085 Move X8, [X8+2272]
	086 Move X0, X19
	087 Move X1, [X8]
	088 Call 0x21E61FC, X0
	089 Compare X0, 0
	090 JumpIfEqual {202}
	091 Move X1, [X20]
	092 Move X20, 0x67C000
	093 Move X25, 0x67C000
	094 Move X20, [X20+2312]
	095 Move X25, [X25+2320]
	096 Move X2, X31
	097 Move X22, X0
	098 Call Image.set_sprite, X0, X1
	099 Move W1, 1
	100 Move X0, X22
	101 Move X2, X31
	102 Call Image.set_type, X0, X1
	103 Move X8, [X23]
	104 Move X9, [X22]
	105 Move X0, X22
	106 Move X8, [X8+184]
	107 Move X10, [X9+680]
	108 Move X1, [X9+688]
	109 Move S0, [X8+24]
	110 Move S1, [X8+28]
	111 Move S2, [X8+32]
	112 Move S3, [X8+36]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X1, [X20]
	115 Move X0, X19
	116 Call 0x21E61FC, X0
	117 Call TMP_DefaultControls.SetDefaultColorTransitionValues, X0
	118 Move X1, [X25]
	119 Move X0, X21
	120 Call 0x21E61FC, X0
	121 Compare X0, 0
	122 JumpIfEqual {202}
	123 Move X8, [X0]
	124 Move X1, [X24]
	125 Move X22, 0x677000
	126 Move X20, X0
	127 Move X9, [X8+1368]
	128 Move X2, [X8+1376]
	129 Move X22, [X22+2880]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W1, 514
	132 Move X0, X20
	133 Move X2, X31
	134 Call TMP_Text.set_alignment, X0, X1
	135 Move X0, X20
	136 Call TMP_DefaultControls.SetDefaultTextValues, X0
	137 Move X1, [X22]
	138 Move X0, X21
	139 Call 0x21E62E4, X0
	140 Move X21, 0x8FD000
	141 Move W8, [X21+1935]
	142 Move X20, X0
	143 Compare W8, 0
	144 JumpIfNotEqual {150}
	145 Move X0, 0x61F000
	146 Move X0, [X0+3848]
	147 Call 0x1C17CF4
	148 Move W8, 1
	149 Move [X21+1935], W8
	150 Compare X20, 0
	151 JumpIfEqual {202}
	152 Move X22, 0x61F000
	153 Move X22, [X22+3848]
	154 Move X0, X20
	155 Move X1, X31
	156 Move X8, [X22]
	157 Move X8, [X8+184]
	158 Move S0, [X8]
	159 Move S1, [X8+4]
	160 Call RectTransform.set_anchorMin, X0, X1
	161 Move X23, 0x905000
	162 Move W8, [X23+2632]
	163 Compare W8, 0
	164 JumpIfNotEqual {170}
	165 Move X0, 0x61F000
	166 Move X0, [X0+3848]
	167 Call 0x1C17CF4
	168 Move W8, 1
	169 Move [X23+2632], W8
	170 Move X8, [X22]
	171 Move X0, X20
	172 Move X1, X31
	173 Move X8, [X8+184]
	174 Move S0, [X8+8]
	175 Move S1, [X8+12]
	176 Call RectTransform.set_anchorMax, X0, X1
	177 Move W8, [X21+1935]
	178 Compare W8, 0
	179 JumpIfNotEqual {185}
	180 Move X0, 0x61E000
	181 Move X0, [X0+3848]
	182 Call 0x1C17CF4
	183 Move W8, 1
	184 Move [X21+1935], W8
	185 Move X8, [X22]
	186 Move X0, X20
	187 Move X1, X31
	188 Move X8, [X8+184]
	189 Move S0, [X8]
	190 Move S1, [X8+4]
	191 Call RectTransform.set_sizeDelta, X0, X1
	192 Move X0, X19
	193 Move X20, [X31+48]
	194 Move X19, [X31+56]
	195 Move X22, [X31+32]
	196 Move X21, [X31+40]
	197 Move X24, [X31+16]
	198 Move X23, [X31+24]
	199 Move X30, [X31+64]
	200 Move X25, [X31+72]
	201 Return X0
	202 Call 0x1C17F20

Method: UnityEngine.GameObject CreateText(TMPro.TMP_DefaultControls/Resources resources)

Disassembly:
	0x03ADE068 BL 0x3ADE728
	0x03ADE06C MOV X0, X22
	0x03ADE070 STR X21, [X22 + 0x120]
	0x03ADE074 BL 0x3ADE728
	0x03ADE078 LDR X8, [X21]
	0x03ADE07C LDR X1, [X25]
	0x03ADE080 MOV X0, X21
	0x03ADE084 LDR X9, [X8 + 0x558]
	0x03ADE088 LDR X2, [X8 + 0x560]
	0x03ADE08C BLR X9
	0x03ADE090 LDR X8, [X22 + 0x138]
	0x03ADE094 CBZ X8, 0x3ADE6DC
	0x03ADE098 ADRP X27, 0x67A000
	0x03ADE09C LDR X27, [X27 + 0x9A0]
	0x03ADE0A0 LDR X21, [X8 + 0x10]
	0x03ADE0A4 LDR X0, [X27]
	0x03ADE0A8 BL 0x1C16F10
	0x03ADE0AC MOV X1, X31
	0x03ADE0B0 MOV X23, X0
	0x03ADE0B4 BL 0x33BDD8C
	0x03ADE0B8 CBZ X23, 0x3ADE6DC
	0x03ADE0BC LDR X8, [X25]
	0x03ADE0C0 STR X8, [X23 + 0x10]
	0x03ADE0C4 CBZ X21, 0x3ADE6DC
	0x03ADE0C8 ADRP X25, 0x67A000
	0x03ADE0CC LDR X25, [X25 + 0x998]
	0x03ADE0D0 LDR W10, [X21 + 0x1C]
	0x03ADE0D4 LDR X8, [X21 + 0x10]
	0x03ADE0D8 LDR X9, [X25]
	0x03ADE0DC ADD W10, W10, 0x1
	0x03ADE0E0 STR W10, [X21 + 0x1C]
	0x03ADE0E4 CBZ X8, 0x3ADE6DC
	0x03ADE0E8 LDRSW X10, [X21 + 0x18]
	0x03ADE0EC LDR W11, [X8 + 0x18]
	0x03ADE0F0 CMP W10, W11
	0x03ADE0F4 B.CS 0x3ADE10C
	0x03ADE0F8 ADD W9, W10, 0x1
	0x03ADE0FC ADD X8, X8, X10, 0x3, LSL
	0x03ADE100 STR W9, [X21 + 0x18]
	0x03ADE104 STR X23, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x905000
	005 Move X19, 0x67B000
	006 Move W8, [X20+1385]
	007 Move X19, [X19+2264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x67B000
	013 Move X0, [X0+2320]
	014 Call 0x1C17CF4
	015 Move X0, 0x67B000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0x67B000
	019 Move X0, [X0+2328]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1385], W8
	023 Move X0, [X19]
	024 Move X20, 0x67B000
	025 Move W8, [X0+224]
	026 Move X20, [X20+2328]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move X0, [X20]
	033 Move S0, [X8]
	034 Move S1, [X8+4]
	035 Call TMP_DefaultControls.CreateUIElementRoot, X0, X1
	036 Compare X0, 0
	037 JumpIfEqual {48}
	038 Move X8, 0x67B000
	039 Move X8, [X8+2320]
	040 Move X19, X0
	041 Move X1, [X8]
	042 Call 0x21E61FC, X0
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0
	048 Call 0x1C17F20

Method: UnityEngine.GameObject CreateInputField(TMPro.TMP_DefaultControls/Resources resources)

Disassembly:
	0x03ADE108 B 0x3ADE124
	0x03ADE10C LDR X8, [X9 + 0x20]
	0x03ADE110 MOV X0, X21
	0x03ADE114 MOV X1, X23
	0x03ADE118 LDR X8, [X8 + 0xC0]
	0x03ADE11C LDR X2, [X8 + 0x70]
	0x03ADE120 BL 0x301BF90
	0x03ADE124 LDR X8, [X22 + 0x138]
	0x03ADE128 CBZ X8, 0x3ADE6DC
	0x03ADE12C LDR X0, [X27]
	0x03ADE130 LDR X21, [X8 + 0x10]
	0x03ADE134 BL 0x1C16F10
	0x03ADE138 MOV X1, X31
	0x03ADE13C MOV X23, X0
	0x03ADE140 BL 0x33BDD8C
	0x03ADE144 CBZ X23, 0x3ADE6DC
	0x03ADE148 ADRP X8, 0x67A000
	0x03ADE14C LDR X8, [X8 + 0x9D8]
	0x03ADE150 LDR X8, [X8]
	0x03ADE154 STR X8, [X23 + 0x10]
	0x03ADE158 CBZ X21, 0x3ADE6DC
	0x03ADE15C LDR W10, [X21 + 0x1C]
	0x03ADE160 LDR X8, [X21 + 0x10]
	0x03ADE164 LDR X9, [X25]
	0x03ADE168 ADD W10, W10, 0x1
	0x03ADE16C STR W10, [X21 + 0x1C]
	0x03ADE170 CBZ X8, 0x3ADE6DC
	0x03ADE174 LDRSW X10, [X21 + 0x18]
	0x03ADE178 LDR W11, [X8 + 0x18]
	0x03ADE17C CMP W10, W11
	0x03ADE180 B.CS 0x3ADE198
	0x03ADE184 ADD W9, W10, 0x1
	0x03ADE188 ADD X8, X8, X10, 0x3, LSL
	0x03ADE18C STR W9, [X21 + 0x18]
	0x03ADE190 STR X23, [X8 + 0x20]
	0x03ADE194 B 0x3ADE1B0
	0x03ADE198 LDR X8, [X9 + 0x20]
	0x03ADE19C MOV X0, X21
	0x03ADE1A0 MOV X1, X23
	0x03ADE1A4 LDR X8, [X8 + 0xC0]
	0x03ADE1A8 LDR X2, [X8 + 0x70]
	0x03ADE1AC BL 0x301BF90
	0x03ADE1B0 LDR X8, [X22 + 0x138]
	0x03ADE1B4 CBZ X8, 0x3ADE6DC
	0x03ADE1B8 LDR X0, [X27]
	0x03ADE1BC LDR X21, [X8 + 0x10]
	0x03ADE1C0 BL 0x1C16F10
	0x03ADE1C4 MOV X1, X31
	0x03ADE1C8 MOV X23, X0
	0x03ADE1CC BL 0x33BDD8C
	0x03ADE1D0 CBZ X23, 0x3ADE6DC
	0x03ADE1D4 ADRP X8, 0x67A000
	0x03ADE1D8 LDR X8, [X8 + 0x9B8]
	0x03ADE1DC LDR X27, [X31]
	0x03ADE1E0 LDR X8, [X8]
	0x03ADE1E4 STR X8, [X23 + 0x10]
	0x03ADE1E8 CBZ X21, 0x3ADE6DC
	0x03ADE1EC LDR W10, [X21 + 0x1C]
	0x03ADE1F0 LDR X8, [X21 + 0x10]
	0x03ADE1F4 LDR X9, [X25]
	0x03ADE1F8 ADD W10, W10, 0x1
	0x03ADE1FC STR W10, [X21 + 0x1C]
	0x03ADE200 CBZ X8, 0x3ADE6DC
	0x03ADE204 LDRSW X10, [X21 + 0x18]
	0x03ADE208 LDR W11, [X8 + 0x18]
	0x03ADE20C ADRP X25, 0x903000
	0x03ADE210 CMP W10, W11
	0x03ADE214 B.CS 0x3ADE22C
	0x03ADE218 ADD W9, W10, 0x1
	0x03ADE21C ADD X8, X8, X10, 0x3, LSL
	0x03ADE220 STR W9, [X21 + 0x18]
	0x03ADE224 STR X23, [X8 + 0x20]
	0x03ADE228 B 0x3ADE244
	0x03ADE22C LDR X8, [X9 + 0x20]
	0x03ADE230 MOV X0, X21
	0x03ADE234 MOV X1, X23
	0x03ADE238 LDR X8, [X8 + 0xC0]
	0x03ADE23C LDR X2, [X8 + 0x70]
	0x03ADE240 BL 0x301BF90
	0x03ADE244 MOV X0, X22
	0x03ADE248 BL 0x3ADE728
	0x03ADE24C LDR X1, [X24]
	0x03ADE250 LDR X0, [X31 + 0x10]
	0x03ADE254 BL 0x21E52E4
	0x03ADE258 ADRP X22, 0x8FB000
	0x03ADE25C ADRP X23, 0x61D000
	0x03ADE260 LDRB W8, [X22 + 0x78F]
	0x03ADE264 LDR X23, [X23 + 0xF08]
	0x03ADE268 MOV X21, X0
	0x03ADE26C CBNZ W8, 0x3ADE284
	0x03ADE270 ADRP X0, 0x61D000
	0x03ADE274 LDR X0, [X0 + 0xF08]
	0x03ADE278 BL 0x1C16CF4
	0x03ADE27C MOVZ W8, 0x1
	0x03ADE280 STRB W8, [X22 + 0x78F]
	0x03ADE284 CBZ X21, 0x3ADE6DC
	0x03ADE288 LDR X8, [X23]
	0x03ADE28C MOV X0, X21
	0x03ADE290 MOV X1, X31
	0x03ADE294 LDR X8, [X8 + 0xB8]
	0x03ADE298 LDP S0, S1, [X8]
	0x03ADE29C BL 0x3C3E648
	0x03ADE2A0 LDRB W8, [X25 + 0xA48]
	0x03ADE2A4 CBNZ W8, 0x3ADE2BC
	0x03ADE2A8 ADRP X0, 0x61D000
	0x03ADE2AC LDR X0, [X0 + 0xF08]
	0x03ADE2B0 BL 0x1C16CF4
	0x03ADE2B4 MOVZ W8, 0x1
	0x03ADE2B8 STRB W8, [X25 + 0xA48]
	0x03ADE2BC LDR X8, [X23]
	0x03ADE2C0 MOV X0, X21
	0x03ADE2C4 MOV X1, X31
	0x03ADE2C8 LDR X8, [X8 + 0xB8]
	0x03ADE2CC LDP S0, S1, [X8 + 0x8]
	0x03ADE2D0 BL 0x3C3E764
	0x03ADE2D4 FMOV S0, 10
	0x03ADE2D8 FMOV S1, 6
	0x03ADE2DC MOV X0, X21
	0x03ADE2E0 MOV X1, X31
	0x03ADE2E4 BL 0x3C3ECAC
	0x03ADE2E8 FMOV S0, -25
	0x03ADE2EC FMOV S1, -7
	0x03ADE2F0 MOV X0, X21
	0x03ADE2F4 MOV X1, X31
	0x03ADE2F8 BL 0x3C3EE40
	0x03ADE2FC LDR X1, [X24]
	0x03ADE300 LDR X0, [X31 + 0x8]
	0x03ADE304 BL 0x21E52E4
	0x03ADE308 CBZ X0, 0x3ADE6DC
	0x03ADE30C FMOV S0, 1
	0x03ADE310 FMOV S1, 0.5
	0x03ADE314 MOV X1, X31
	0x03ADE318 MOV X21, X0
	0x03ADE31C BL 0x3C3E648
	0x03ADE320 FMOV S0, 1
	0x03ADE324 FMOV S1, 0.5
	0x03ADE328 MOV X0, X21
	0x03ADE32C MOV X1, X31
	0x03ADE330 BL 0x3C3E764
	0x03ADE334 FMOV S0, 20
	0x03ADE338 FMOV S1, 20
	0x03ADE33C MOV X0, X21
	0x03ADE340 MOV X1, X31
	0x03ADE344 BL 0x3C3E99C
	0x03ADE348 FMOV S0, -15
	0x03ADE34C FMOV S1, W31
	0x03ADE350 MOV X0, X21
	0x03ADE354 MOV X1, X31
	0x03ADE358 BL 0x3C3E880
	0x03ADE35C LDR X1, [X24]
	0x03ADE360 MOV X0, X20
	0x03ADE364 BL 0x21E52E4
	0x03ADE368 CBZ X0, 0x3ADE6DC
	0x03ADE36C FMOV S0, W31
	0x03ADE370 FMOV S1, W31
	0x03ADE374 MOV X1, X31
	0x03ADE378 MOV X21, X0
	0x03ADE37C BL 0x3C3E648
	0x03ADE380 FMOV S0, 1
	0x03ADE384 FMOV S1, W31
	0x03ADE388 MOV X0, X21
	0x03ADE38C MOV X1, X31
	0x03ADE390 BL 0x3C3E764
	0x03ADE394 FMOV S0, 0.5
	0x03ADE398 FMOV S1, 1
	0x03ADE39C MOV X0, X21
	0x03ADE3A0 MOV X1, X31
	0x03ADE3A4 BL 0x3C3EAB8
	0x03ADE3A8 FMOV S0, W31
	0x03ADE3AC FMOV S1, 2
	0x03ADE3B0 MOV X0, X21
	0x03ADE3B4 MOV X1, X31
	0x03ADE3B8 BL 0x3C3E880
	0x03ADE3BC MOVZ W8, 0x43160000
	0x03ADE3C0 FMOV S0, W31
	0x03ADE3C4 FMOV S1, W8
	0x03ADE3C8 MOV X0, X21
	0x03ADE3CC MOV X1, X31
	0x03ADE3D0 BL 0x3C3E99C
	0x03ADE3D4 LDR X1, [X24]
	0x03ADE3D8 MOV X0, X26
	0x03ADE3DC BL 0x21E52E4
	0x03ADE3E0 CBZ X0, 0x3ADE6DC
	0x03ADE3E4 FMOV S0, W31
	0x03ADE3E8 FMOV S1, W31
	0x03ADE3EC MOV X1, X31
	0x03ADE3F0 MOV X21, X0
	0x03ADE3F4 BL 0x3C3E648
	0x03ADE3F8 FMOV S0, 1
	0x03ADE3FC FMOV S1, 1
	0x03ADE400 MOV X0, X21
	0x03ADE404 MOV X1, X31
	0x03ADE408 BL 0x3C3E764
	0x03ADE40C FMOV S0, -18
	0x03ADE410 FMOV S1, W31
	0x03ADE414 MOV X0, X21
	0x03ADE418 MOV X1, X31
	0x03ADE41C BL 0x3C3E99C
	0x03ADE420 FMOV S0, W31
	0x03ADE424 FMOV S1, 1
	0x03ADE428 MOV X0, X21
	0x03ADE42C MOV X1, X31
	0x03ADE430 BL 0x3C3EAB8
	0x03ADE434 LDR X1, [X24]
	0x03ADE438 LDR X0, [X31 + 0x18]
	0x03ADE43C BL 0x21E52E4
	0x03ADE440 CBZ X0, 0x3ADE6DC
	0x03ADE444 FMOV S0, W31
	0x03ADE448 FMOV S1, 1
	0x03ADE44C MOV X1, X31
	0x03ADE450 MOV X21, X0
	0x03ADE454 BL 0x3C3E648
	0x03ADE458 FMOV S0, 1
	0x03ADE45C FMOV S1, 1
	0x03ADE460 MOV X0, X21
	0x03ADE464 MOV X1, X31
	0x03ADE468 BL 0x3C3E764
	0x03ADE46C FMOV S0, 0.5
	0x03ADE470 FMOV S1, 1
	0x03ADE474 MOV X0, X21
	0x03ADE478 MOV X1, X31
	0x03ADE47C BL 0x3C3EAB8
	0x03ADE480 FMOV S0, W31
	0x03ADE484 FMOV S1, W31
	0x03ADE488 MOV X0, X21
	0x03ADE48C MOV X1, X31
	0x03ADE490 BL 0x3C3E880
	0x03ADE494 FMOV S0, W31
	0x03ADE498 FMOV S1, 28
	0x03ADE49C MOV X0, X21
	0x03ADE4A0 MOV X1, X31
	0x03ADE4A4 BL 0x3C3E99C
	0x03ADE4A8 LDR X1, [X24]
	0x03ADE4AC LDR X0, [X31 + 0x20]
	0x03ADE4B0 BL 0x21E52E4
	0x03ADE4B4 CBZ X0, 0x3ADE6DC
	0x03ADE4B8 FMOV S0, W31
	0x03ADE4BC FMOV S1, 0.5
	0x03ADE4C0 MOV X1, X31
	0x03ADE4C4 MOV X21, X0
	0x03ADE4C8 BL 0x3C3E648
	0x03ADE4CC FMOV S0, 1
	0x03ADE4D0 FMOV S1, 0.5
	0x03ADE4D4 MOV X0, X21
	0x03ADE4D8 MOV X1, X31
	0x03ADE4DC BL 0x3C3E764
	0x03ADE4E0 FMOV S0, W31
	0x03ADE4E4 FMOV S1, 20
	0x03ADE4E8 MOV X0, X21
	0x03ADE4EC MOV X1, X31
	0x03ADE4F0 BL 0x3C3E99C
	0x03ADE4F4 LDR X1, [X24]
	0x03ADE4F8 LDR X0, [X31 + 0x28]
	0x03ADE4FC BL 0x21E52E4
	0x03ADE500 LDRB W8, [X22 + 0x78F]
	0x03ADE504 MOV X21, X0
	0x03ADE508 CBNZ W8, 0x3ADE520
	0x03ADE50C ADRP X0, 0x61D000
	0x03ADE510 LDR X0, [X0 + 0xF08]
	0x03ADE514 BL 0x1C16CF4
	0x03ADE518 MOVZ W8, 0x1
	0x03ADE51C STRB W8, [X22 + 0x78F]
	0x03ADE520 CBZ X21, 0x3ADE6DC
	0x03ADE524 LDR X8, [X23]
	0x03ADE528 MOV X0, X21
	0x03ADE52C MOV X1, X31
	0x03ADE530 LDR X8, [X8 + 0xB8]
	0x03ADE534 LDP S0, S1, [X8]
	0x03ADE538 BL 0x3C3E648
	0x03ADE53C LDRB W8, [X25 + 0xA48]
	0x03ADE540 CBNZ W8, 0x3ADE558
	0x03ADE544 ADRP X0, 0x61D000
	0x03ADE548 LDR X0, [X0 + 0xF08]
	0x03ADE54C BL 0x1C16CF4
	0x03ADE550 MOVZ W8, 0x1
	0x03ADE554 STRB W8, [X25 + 0xA48]
	0x03ADE558 LDR X8, [X23]
	0x03ADE55C MOV X0, X21
	0x03ADE560 MOV X1, X31
	0x03ADE564 LDR X8, [X8 + 0xB8]
	0x03ADE568 LDP S0, S1, [X8 + 0x8]
	0x03ADE56C BL 0x3C3E764
	0x03ADE570 LDRB W8, [X22 + 0x78F]
	0x03ADE574 CBNZ W8, 0x3ADE58C
	0x03ADE578 ADRP X0, 0x61D000
	0x03ADE57C LDR X0, [X0 + 0xF08]
	0x03ADE580 BL 0x1C16CF4
	0x03ADE584 MOVZ W8, 0x1
	0x03ADE588 STRB W8, [X22 + 0x78F]
	0x03ADE58C LDR X8, [X23]
	0x03ADE590 MOV X0, X21
	0x03ADE594 MOV X1, X31
	0x03ADE598 LDR X8, [X8 + 0xB8]
	0x03ADE59C LDP S0, S1, [X8]
	0x03ADE5A0 BL 0x3C3E99C
	0x03ADE5A4 LDR X1, [X24]
	0x03ADE5A8 MOV X0, X28
	0x03ADE5AC BL 0x21E52E4
	0x03ADE5B0 CBZ X0, 0x3ADE6DC
	0x03ADE5B4 FMOV S0, W31
	0x03ADE5B8 FMOV S1, 0.5
	0x03ADE5BC MOV X1, X31
	0x03ADE5C0 MOV X21, X0
	0x03ADE5C4 BL 0x3C3E648
	0x03ADE5C8 FMOV S0, W31
	0x03ADE5CC FMOV S1, 0.5
	0x03ADE5D0 MOV X0, X21
	0x03ADE5D4 MOV X1, X31
	0x03ADE5D8 BL 0x3C3E764
	0x03ADE5DC FMOV S0, 20
	0x03ADE5E0 FMOV S1, 20
	0x03ADE5E4 MOV X0, X21
	0x03ADE5E8 MOV X1, X31
	0x03ADE5EC BL 0x3C3E99C
	0x03ADE5F0 FMOV S0, 10
	0x03ADE5F4 FMOV S1, W31
	0x03ADE5F8 MOV X0, X21
	0x03ADE5FC MOV X1, X31
	0x03ADE600 BL 0x3C3E880
	0x03ADE604 LDR X1, [X24]
	0x03ADE608 MOV X0, X27
	0x03ADE60C BL 0x21E52E4
	0x03ADE610 LDRB W8, [X22 + 0x78F]
	0x03ADE614 MOV X21, X0
	0x03ADE618 CBNZ W8, 0x3ADE630
	0x03ADE61C ADRP X0, 0x61D000
	0x03ADE620 LDR X0, [X0 + 0xF08]
	0x03ADE624 BL 0x1C16CF4
	0x03ADE628 MOVZ W8, 0x1
	0x03ADE62C STRB W8, [X22 + 0x78F]
	0x03ADE630 CBZ X21, 0x3ADE6DC
	0x03ADE634 LDR X8, [X23]
	0x03ADE638 MOV X0, X21
	0x03ADE63C MOV X1, X31
	0x03ADE640 LDR X8, [X8 + 0xB8]
	0x03ADE644 LDP S0, S1, [X8]
	0x03ADE648 BL 0x3C3E648
	0x03ADE64C LDRB W8, [X25 + 0xA48]
	0x03ADE650 CBNZ W8, 0x3ADE668
	0x03ADE654 ADRP X0, 0x61D000
	0x03ADE658 LDR X0, [X0 + 0xF08]
	0x03ADE65C BL 0x1C16CF4
	0x03ADE660 MOVZ W8, 0x1
	0x03ADE664 STRB W8, [X25 + 0xA48]
	0x03ADE668 LDR X8, [X23]
	0x03ADE66C MOV X0, X21
	0x03ADE670 MOV X1, X31
	0x03ADE674 LDR X8, [X8 + 0xB8]
	0x03ADE678 LDP S0, S1, [X8 + 0x8]
	0x03ADE67C BL 0x3C3E764
	0x03ADE680 FMOV S0, 20
	0x03ADE684 FMOV S1, 1
	0x03ADE688 MOV X0, X21
	0x03ADE68C MOV X1, X31
	0x03ADE690 BL 0x3C3ECAC
	0x03ADE694 FMOV S0, -10
	0x03ADE698 FMOV S1, -2
	0x03ADE69C MOV X0, X21
	0x03ADE6A0 MOV X1, X31
	0x03ADE6A4 BL 0x3C3EE40
	0x03ADE6A8 MOV X0, X20
	0x03ADE6AC MOV W1, W31
	0x03ADE6B0 MOV X2, X31
	0x03ADE6B4 BL 0x3C357B4
	0x03ADE6B8 MOV X0, X19
	0x03ADE6BC LDP X20, X19, [X31 + 0xC0]
	0x03ADE6C0 LDP X22, X21, [X31 + 0xB0]
	0x03ADE6C4 LDP X24, X23, [X31 + 0xA0]
	0x03ADE6C8 LDP X26, X25, [X31 + 0x90]
	0x03ADE6CC LDP X28, X27, [X31 + 0x80]
	0x03ADE6D0 LDP X29, X30, [X31 + 0x70]
	0x03ADE6D4 ADD X31, X31, 0xD0
	0x03ADE6D8 RET
	0x03ADE6DC BL 0x1C16F20
	0x03ADE6E0 BL 0x1C171E0
	0x03ADE6E4 MOV X0, X8
	0x03ADE6E8 BL 0x1C171E0
	0x03ADE6EC STR X1, [X0 + 0x100]
	0x03ADE6F0 B 0x3ADE728
	0x03ADE6F4 STR X1, [X0 + 0x108]
	0x03ADE6F8 B 0x3ADE728
	0x03ADE6FC STR X1, [X0 + 0x120]
	0x03ADE700 B 0x3ADE728
	0x03ADE704 STR X30, [X31 - 0x10]!
	0x03ADE708 LDR X8, [X0 + 0x138]
	0x03ADE70C CBZ X8, 0x3ADE71C
	0x03ADE710 LDR X0, [X8 + 0x10]
	0x03ADE714 LDR X30, [X31], #0x10
	0x03ADE718 RET
	0x03ADE71C BL 0x1C16F20
	0x03ADE720 MOV X1, X31
	0x03ADE724 B 0x33BDD8C
	0x03ADE728 STR X30, [X31 - 0x30]!
	0x03ADE72C STP X22, X21, [X31 + 0x10]
	0x03ADE730 STP X20, X19, [X31 + 0x20]
	0x03ADE734 ADRP X21, 0x904000
	0x03ADE738 ADRP X20, 0x67A000
	0x03ADE73C LDRB W8, [X21 + 0x573]
	0x03ADE740 LDR X20, [X20 + 0xA10]
	0x03ADE744 MOV X19, X0
	0x03ADE748 TBNZ X8, 0x0, 0x3ADE790
	0x03ADE74C ADRP X0, 0x67A000
	0x03ADE750 LDR X0, [X0 + 0xA18]
	0x03ADE754 BL 0x1C16CF4
	0x03ADE758 ADRP X0, 0x67A000
	0x03ADE75C LDR X0, [X0 + 0xA20]
	0x03ADE760 BL 0x1C16CF4
	0x03ADE764 ADRP X0, 0x615000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x905000
	014 Move X25, 0x67B000
	015 Move W8, [X19+1386]
	016 Move X25, [X25+2264]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {63}
	022 Move X0, 0x67B000
	023 Move X0, [X0+2272]
	024 Call 0x1C17CF4
	025 Move X0, 0x676000
	026 Move X0, [X0+3264]
	027 Call 0x1C17CF4
	028 Move X0, 0x67B000
	029 Move X0, [X0+2336]
	030 Call 0x1C17CF4
	031 Move X0, 0x67B000
	032 Move X0, [X0+2344]
	033 Call 0x1C17CF4
	034 Move X0, 0x67B000
	035 Move X0, [X0+2320]
	036 Call 0x1C17CF4
	037 Move X0, 0x676000
	038 Move X0, [X0+2880]
	039 Call 0x1C17CF4
	040 Move X0, 0x67B000
	041 Move X0, [X0+2264]
	042 Call 0x1C17CF4
	043 Move X0, 0x65F000
	044 Move X0, [X0+3712]
	045 Call 0x1C17CF4
	046 Move X0, 0x67B000
	047 Move X0, [X0+2352]
	048 Call 0x1C17CF4
	049 Move X0, 0x67B000
	050 Move X0, [X0+2360]
	051 Call 0x1C17CF4
	052 Move X0, 0x67B000
	053 Move X0, [X0+2368]
	054 Call 0x1C17CF4
	055 Move X0, 0x67B000
	056 Move X0, [X0+2376]
	057 Call 0x1C17CF4
	058 Move X0, 0x616000
	059 Move X0, [X0+2440]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X19+1386], W8
	063 Move X0, [X25]
	064 Move X23, 0x67B000
	065 Move X19, 0x67B000
	066 Move X22, 0x67B000
	067 Move X21, 0x65F000
	068 Move W8, [X0+224]
	069 Move X23, [X23+2360]
	070 Move X19, [X19+2376]
	071 Move X22, [X22+2352]
	072 Move X21, [X21+3712]
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Call 0x1C17DFC
	076 Move X0, [X25]
	077 Move X8, [X0+184]
	078 Move X0, [X23]
	079 Move S0, [X8+8]
	080 Move S1, [X8+12]
	081 Call TMP_DefaultControls.CreateUIElementRoot, X0, X1
	082 Move X8, [X19]
	083 Move X19, X0
	084 Move X1, X19
	085 Move X0, X8
	086 Call TMP_DefaultControls.CreateUIObject, X0, X1
	087 Move X8, [X22]
	088 Move X22, X0
	089 Move X1, X22
	090 Move X0, X8
	091 Call TMP_DefaultControls.CreateUIObject, X0, X1
	092 Move X8, [X21]
	093 Move X21, X0
	094 Move X1, X22
	095 Move X0, X8
	096 Call TMP_DefaultControls.CreateUIObject, X0, X1
	097 Compare X19, 0
	098 JumpIfEqual {459}
	099 Move X8, 0x67B000
	100 Move X8, [X8+2272]
	101 Move X24, X0
	102 Move X0, X19
	103 Move X1, [X8]
	104 Call 0x21E61FC, X0
	105 Compare X0, 0
	106 JumpIfEqual {459}
	107 Move X1, [X20+16]
	108 Move X20, 0x67B000
	109 Move X20, [X20+2344]
	110 Move X2, X31
	111 Move X23, X0
	112 Call Image.set_sprite, X0, X1
	113 Move W1, 1
	114 Move X0, X23
	115 Move X2, X31
	116 Call Image.set_type, X0, X1
	117 Move X8, [X25]
	118 Move X9, [X23]
	119 Move X0, X23
	120 Move X8, [X8+184]
	121 Move X10, [X9+680]
	122 Move X1, [X9+688]
	123 Move S0, [X8+24]
	124 Move S1, [X8+28]
	125 Move S2, [X8+32]
	126 Move S3, [X8+36]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Move X1, [X20]
	129 Move X0, X19
	130 Call 0x21E61FC, X0
	131 Move X20, X0
	132 Call TMP_DefaultControls.SetDefaultColorTransitionValues, X0
	133 Compare X22, 0
	134 JumpIfEqual {459}
	135 Move X8, 0x67B000
	136 Move X8, [X8+2336]
	137 Move X0, X22
	138 Move X1, [X8]
	139 Call 0x21E61FC, X0
	140 Compare X0, 0
	141 JumpIfEqual {459}
	142 Move X23, 0x676000
	143 Move X23, [X23+2880]
	144 Move S0, -8
	145 Move S1, -5
	146 Move S2, -8
	147 Move S3, -5
	148 Move X1, X31
	149 Call RectMask2D.set_padding, X0, X1
	150 Move X1, [X23]
	151 Move X0, X22
	152 Call 0x21E62E4, X0
	153 Move X26, 0x8FC000
	154 Move W8, [X26+1935]
	155 Move X22, X0
	156 Compare W8, 0
	157 JumpIfNotEqual {163}
	158 Move X0, 0x61E000
	159 Move X0, [X0+3848]
	160 Call 0x1C17CF4
	161 Move W8, 1
	162 Move [X26+1935], W8
	163 Compare X22, 0
	164 JumpIfEqual {459}
	165 Move X27, 0x61E000
	166 Move X27, [X27+3848]
	167 Move X0, X22
	168 Move X1, X31
	169 Move X8, [X27]
	170 Move X8, [X8+184]
	171 Move S0, [X8]
	172 Move S1, [X8+4]
	173 Call RectTransform.set_anchorMin, X0, X1
	174 Move X29, 0x904000
	175 Move W8, [X29+2632]
	176 Compare W8, 0
	177 JumpIfNotEqual {183}
	178 Move X0, 0x61E000
	179 Move X0, [X0+3848]
	180 Call 0x1C17CF4
	181 Move W8, 1
	182 Move [X29+2632], W8
	183 Move X8, [X27]
	184 Move X0, X22
	185 Move X1, X31
	186 Move X8, [X8+184]
	187 Move S0, [X8+8]
	188 Move S1, [X8+12]
	189 Call RectTransform.set_anchorMax, X0, X1
	190 Move W8, [X26+1935]
	191 Compare W8, 0
	192 JumpIfNotEqual {198}
	193 Move X0, 0x61E000
	194 Move X0, [X0+3848]
	195 Call 0x1C17CF4
	196 Move W8, 1
	197 Move [X26+1935], W8
	198 Move X8, [X27]
	199 Move X0, X22
	200 Move X1, X31
	201 Move X8, [X8+184]
	202 Move S0, [X8]
	203 Move S1, [X8+4]
	204 Call RectTransform.set_sizeDelta, X0, X1
	205 Move S0, 10
	206 Move S1, 6
	207 Move X0, X22
	208 Move X1, X31
	209 Call RectTransform.set_offsetMin, X0, X1
	210 Move S0, -10
	211 Move S1, -7
	212 Move X0, X22
	213 Move X1, X31
	214 Call RectTransform.set_offsetMax, X0, X1
	215 Compare X24, 0
	216 JumpIfEqual {459}
	217 Move X25, 0x67B000
	218 Move X25, [X25+2320]
	219 Move X0, X24
	220 Move X1, [X25]
	221 Call 0x21E61FC, X0
	222 Compare X0, 0
	223 JumpIfEqual {459}
	224 Move X9, 0x616000
	225 Move X8, [X0]
	226 Move X9, [X9+2440]
	227 Move X23, X0
	228 Move X2, [X8+1376]
	229 Move X1, [X9]
	230 Move X9, [X8+1368]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move X0, X23
	233 Move W1, W31
	234 Move X2, X31
	235 Call TMP_Text.set_enableWordWrapping, X0, X1
	236 Move W1, 1
	237 Move X0, X23
	238 Move X2, X31
	239 Call TMP_Text.set_extraPadding, X0, X1
	240 Move W1, 1
	241 Move X0, X23
	242 Move X2, X31
	243 Call TMP_Text.set_richText, X0, X1
	244 Move X0, X23
	245 Call TMP_DefaultControls.SetDefaultTextValues, X0
	246 Compare X21, 0
	247 JumpIfEqual {459}
	248 Move X1, [X25]
	249 Move X0, X21
	250 Call 0x21E61FC, X0
	251 Compare X0, 0
	252 JumpIfEqual {459}
	253 Move X9, 0x67B000
	254 Move X8, [X0]
	255 Move X9, [X9+2368]
	256 Move X25, X0
	257 Move X2, [X8+1376]
	258 Move X1, [X9]
	259 Move X9, [X8+1368]
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move S0, 14
	262 Move X0, X25
	263 Move X1, X31
	264 Call TMP_Text.set_fontSize, X0, V0
	265 Move W1, 2
	266 Move X0, X25
	267 Move X2, X31
	268 Call TMP_Text.set_fontStyle, X0, X1
	269 Move X0, X25
	270 Move W1, W31
	271 Move X2, X31
	272 Call TMP_Text.set_enableWordWrapping, X0, X1
	273 Move W1, 1
	274 Move X0, X25
	275 Move X2, X31
	276 Call TMP_Text.set_extraPadding, X0, X1
	277 Move X8, [X23]
	278 Move X0, X23
	279 Move X9, [X8+664]
	280 Move X1, [X8+672]
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move X8, [X25]
	283 Move S4, 0.5
	284 Multiply S3, S3, S4
	285 Move X0, X25
	286 Move X9, [X8+680]
	287 Move X1, [X8+688]
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move X0, X25
	290 Move X1, X31
	291 Call Component.get_gameObject, X0
	292 Compare X0, 0
	293 JumpIfEqual {459}
	294 Move X8, 0x676000
	295 Move X8, [X8+3264]
	296 Move X1, [X8]
	297 Call 0x21E61FC, X0
	298 Compare X0, 0
	299 JumpIfEqual {459}
	300 Move X8, [X0]
	301 Move W1, 1
	302 Move W28, 1
	303 Move X9, [X8+760]
	304 Move X2, [X8+768]
	305 NotImplemented "Instruction BLR not yet implemented."
	306 Move X8, 0x676000
	307 Move X8, [X8+2880]
	308 Move X0, X24
	309 Move X1, [X8]
	310 Call 0x21E62E4, X0
	311 Move W8, [X26+1935]
	312 Move X24, X0
	313 Compare W8, 0
	314 JumpIfNotEqual {319}
	315 Move X0, 0x61E000
	316 Move X0, [X0+3848]
	317 Call 0x1C17CF4
	318 Move [X26+1935], W28
	319 Compare X24, 0
	320 JumpIfEqual {459}
	321 Move X8, [X27]
	322 Move X0, X24
	323 Move X1, X31
	324 Move X8, [X8+184]
	325 Move S0, [X8]
	326 Move S1, [X8+4]
	327 Call RectTransform.set_anchorMin, X0, X1
	328 Move W8, [X29+2632]
	329 Compare W8, 0
	330 JumpIfNotEqual {336}
	331 Move X0, 0x61E000
	332 Move X0, [X0+3848]
	333 Call 0x1C17CF4
	334 Move W8, 1
	335 Move [X29+2632], W8
	336 Move X8, [X27]
	337 Move X0, X24
	338 Move X1, X31
	339 Move X8, [X8+184]
	340 Move S0, [X8+8]
	341 Move S1, [X8+12]
	342 Call RectTransform.set_anchorMax, X0, X1
	343 Move W8, [X26+1935]
	344 Compare W8, 0
	345 JumpIfNotEqual {351}
	346 Move X0, 0x61E000
	347 Move X0, [X0+3848]
	348 Call 0x1C17CF4
	349 Move W8, 1
	350 Move [X26+1935], W8
	351 Move X8, [X27]
	352 Move X0, X24
	353 Move X1, X31
	354 Move X8, [X8+184]
	355 Move S0, [X8]
	356 Move S1, [X8+4]
	357 Call RectTransform.set_sizeDelta, X0, X1
	358 Move S0, W31
	359 Move S1, W31
	360 Move X0, X24
	361 Move X1, X31
	362 Call RectTransform.set_offsetMin, X0, X1
	363 Move S0, W31
	364 Move S1, W31
	365 Move X0, X24
	366 Move X1, X31
	367 Call RectTransform.set_offsetMax, X0, X1
	368 Move X8, 0x676000
	369 Move X8, [X8+2880]
	370 Move X0, X21
	371 Move X1, [X8]
	372 Call 0x21E62E4, X0
	373 Move W8, [X26+1935]
	374 Move X21, X0
	375 Compare W8, 0
	376 JumpIfNotEqual {382}
	377 Move X0, 0x61E000
	378 Move X0, [X0+3848]
	379 Call 0x1C17CF4
	380 Move W8, 1
	381 Move [X26+1935], W8
	382 Compare X21, 0
	383 JumpIfEqual {459}
	384 Move X8, [X27]
	385 Move X0, X21
	386 Move X1, X31
	387 Move X8, [X8+184]
	388 Move S0, [X8]
	389 Move S1, [X8+4]
	390 Call RectTransform.set_anchorMin, X0, X1
	391 Move W8, [X29+2632]
	392 Compare W8, 0
	393 JumpIfNotEqual {399}
	394 Move X0, 0x61E000
	395 Move X0, [X0+3848]
	396 Call 0x1C17CF4
	397 Move W8, 1
	398 Move [X29+2632], W8
	399 Move X8, [X27]
	400 Move X0, X21
	401 Move X1, X31
	402 Move X8, [X8+184]
	403 Move S0, [X8+8]
	404 Move S1, [X8+12]
	405 Call RectTransform.set_anchorMax, X0, X1
	406 Move W8, [X26+1935]
	407 Compare W8, 0
	408 JumpIfNotEqual {414}
	409 Move X0, 0x61E000
	410 Move X0, [X0+3848]
	411 Call 0x1C17CF4
	412 Move W8, 1
	413 Move [X26+1935], W8
	414 Move X8, [X27]
	415 Move X0, X21
	416 Move X1, X31
	417 Move X8, [X8+184]
	418 Move S0, [X8]
	419 Move S1, [X8+4]
	420 Call RectTransform.set_sizeDelta, X0, X1
	421 Move S0, W31
	422 Move S1, W31
	423 Move X0, X21
	424 Move X1, X31
	425 Call RectTransform.set_offsetMin, X0, X1
	426 Move S0, W31
	427 Move S1, W31
	428 Move X0, X21
	429 Move X1, X31
	430 Call RectTransform.set_offsetMax, X0, X1
	431 Compare X20, 0
	432 JumpIfEqual {459}
	433 Move X0, X20
	434 Move X1, X22
	435 Call TMP_InputField.set_textViewport, X0, X1
	436 Move X0, X20
	437 Move X1, X23
	438 Call TMP_InputField.set_textComponent, X0, X1
	439 Move X0, X20
	440 Move X1, X25
	441 Call TMP_InputField.set_placeholder, X0, X1
	442 Move X1, [X23+248]
	443 Move X0, X20
	444 Call TMP_InputField.set_fontAsset, X0, X1
	445 Move X0, X19
	446 Move X20, [X31+80]
	447 Move X19, [X31+88]
	448 Move X22, [X31+64]
	449 Move X21, [X31+72]
	450 Move X24, [X31+48]
	451 Move X23, [X31+56]
	452 Move X26, [X31+32]
	453 Move X25, [X31+40]
	454 Move X28, [X31+16]
	455 Move X27, [X31+24]
	456 Move X29, [X31+96]
	457 Move X30, [X31+104]
	458 Return X0
	459 Call 0x1C17F20

Method: UnityEngine.GameObject CreateDropdown(TMPro.TMP_DefaultControls/Resources resources)

Disassembly:
	0x03ADE90C LDR X8, [X8 + 0x10]
	0x03ADE910 CBZ X8, 0x3ADE95C
	0x03ADE914 LDR W8, [X8 + 0x18]
	0x03ADE918 LDR X0, [X19 + 0x118]
	0x03ADE91C CBZ W8, 0x3ADE954
	0x03ADE920 LDR W8, [X19 + 0x130]
	0x03ADE924 ADDS W31, W8, 0x1
	0x03ADE928 CSET W1, EQ
	0x03ADE92C CBZ X0, 0x3ADE95C
	0x03ADE930 LDP X20, X19, [X31 + 0x20]
	0x03ADE934 LDP X22, X21, [X31 + 0x10]
	0x03ADE938 MOV X2, X31
	0x03ADE93C LDR X30, [X31], #0x30
	0x03ADE940 B 0x3C32410
	0x03ADE944 LDP X20, X19, [X31 + 0x20]
	0x03ADE948 LDP X22, X21, [X31 + 0x10]
	0x03ADE94C LDR X30, [X31], #0x30
	0x03ADE950 RET
	0x03ADE954 MOVZ W1, 0x1
	0x03ADE958 CBNZ X0, 0x3ADE930
	0x03ADE95C BL 0x1C16F20
	0x03ADE960 STR X30, [X31 - 0x20]!
	0x03ADE964 STP X20, X19, [X31 + 0x10]
	0x03ADE968 ADRP X20, 0x904000
	0x03ADE96C ADRP X19, 0x67A000
	0x03ADE970 LDRB W8, [X20 + 0x56C]
	0x03ADE974 LDR X19, [X19 + 0x8D8]
	0x03ADE978 TBNZ X8, 0x0, 0x3ADE990
	0x03ADE97C ADRP X0, 0x67A000
	0x03ADE980 LDR X0, [X0 + 0x8D8]
	0x03ADE984 BL 0x1C16CF4
	0x03ADE988 MOVZ W8, 0x1
	0x03ADE98C STRB W8, [X20 + 0x56C]
	0x03ADE990 LDR X8, [X19]
	0x03ADE994 MOVZ W9, 0x42C80000
	0x03ADE998 UNIMPLEMENTED
	0x03ADE99C ADRP X9, 0xFFFFFFFFFD00F000
	0x03ADE9A0 LDR X8, [X8 + 0xB8]
	0x03ADE9A4 ADRP X10, 0xFFFFFFFFFD00F000
	0x03ADE9A8 STR D0, [X8]
	0x03ADE9AC LDR X8, [X19]
	0x03ADE9B0 LDR V0, [X9 + 0x548]
	0x03ADE9B4 LDP X20, X19, [X31 + 0x10]
	0x03ADE9B8 LDR X9, [X8 + 0xB8]
	0x03ADE9BC STR D0, [X9 + 0x8]
	0x03ADE9C0 LDR V0, [X10 + 0x498]
	0x03ADE9C4 LDR X9, [X8 + 0xB8]
	0x03ADE9C8 ADRP X10, 0xFFFFFFFFFD00E000
	0x03ADE9CC STR D0, [X9 + 0x10]
	0x03ADE9D0 LDR X9, [X8 + 0xB8]
	0x03ADE9D4 FMOV V0.4S, 0x0
	0x03ADE9D8 STUR V0, [X9 + 0x18]
	0x03ADE9DC LDR X8, [X8 + 0xB8]
	0x03ADE9E0 LDR V0, [X10 + 0x91]
	0x03ADE9E4 STUR V0, [X8 + 0x28]
	0x03ADE9E8 LDR X30, [X31], #0x20
	0x03ADE9EC RET
	0x03ADE9F0 LDR X0, [X0 + 0x100]
	0x03ADE9F4 RET
	0x03ADE9F8 LDR X0, [X0 + 0x108]
	0x03ADE9FC RET
	0x03ADEA00 LDR X0, [X0 + 0x110]
	0x03ADEA04 RET
	0x03ADEA08 STR X1, [X0 + 0x110]
	0x03ADEA0C B 0x3ADE728
	0x03ADEA10 LDR X0, [X0 + 0x118]
	0x03ADEA14 RET
	0x03ADEA18 STR X1, [X0 + 0x118]
	0x03ADEA1C B 0x3ADE728
	0x03ADEA20 LDR X0, [X0 + 0x120]
	0x03ADEA24 RET
	0x03ADEA28 LDR X0, [X0 + 0x128]
	0x03ADEA2C RET
	0x03ADEA30 STR X1, [X0 + 0x128]
	0x03ADEA34 B 0x3ADE728
	0x03ADEA38 STR X30, [X31 - 0x10]!
	0x03ADEA3C LDR X8, [X0 + 0x138]
	0x03ADEA40 CBZ X8, 0x3ADEA50
	0x03ADEA44 STR X1, [X8 + 0x10]
	0x03ADEA48 LDR X30, [X31], #0x10
	0x03ADEA4C B 0x3ADE728
	0x03ADEA50 BL 0x1C16F20
	0x03ADEA54 LDR X0, [X0 + 0x140]
	0x03ADEA58 RET
	0x03ADEA5C STR X1, [X0 + 0x140]
	0x03ADEA60 RET
	0x03ADEA64 LDR V0, [X0 + 0x148]
	0x03ADEA68 RET
	0x03ADEA6C STR S0, [X0 + 0x148]
	0x03ADEA70 RET
	0x03ADEA74 LDR W0, [X0 + 0x130]
	0x03ADEA78 RET
	0x03ADEA7C MOVZ W2, 0x1
	0x03ADEA80 B 0x3ADEA84
	0x03ADEA84 STP X30, X23, [X31 - 0x30]!
	0x03ADEA88 STP X22, X21, [X31 + 0x10]
	0x03ADEA8C STP X20, X19, [X31 + 0x20]
	0x03ADEA90 ADRP X22, 0x904000
	0x03ADEA94 ADRP X23, 0x615000
	0x03ADEA98 LDRB W8, [X22 + 0x56D]
	0x03ADEA9C LDR X23, [X23 + 0x970]
	0x03ADEAA0 MOV W20, W2
	0x03ADEAA4 MOV W21, W1
	0x03ADEAA8 MOV X19, X0
	0x03ADEAAC TBNZ X8, 0x0, 0x3ADEAF4
	0x03ADEAB0 ADRP X0, 0x615000
	0x03ADEAB4 LDR X0, [X0 + 0x970]
	0x03ADEAB8 BL 0x1C16CF4
	0x03ADEABC ADRP X0, 0x67A000
	0x03ADEAC0 LDR X0, [X0 + 0xA18]
	0x03ADEAC4 BL 0x1C16CF4
	0x03ADEAC8 ADRP X0, 0x615000
	0x03ADEACC LDR X0, [X0 + 0x598]
	0x03ADEAD0 BL 0x1C16CF4
	0x03ADEAD4 ADRP X0, 0x67A000
	0x03ADEAD8 LDR X0, [X0 + 0xA28]
	0x03ADEADC BL 0x1C16CF4
	0x03ADEAE0 ADRP X0, 0x67A000
	0x03ADEAE4 LDR X0, [X0 + 0xA30]
	0x03ADEAE8 BL 0x1C16CF4
	0x03ADEAEC MOVZ W8, 0x1
	0x03ADEAF0 STRB W8, [X22 + 0x56D]
	0x03ADEAF4 LDR X0, [X23]
	0x03ADEAF8 LDR W8, [X0 + 0xE0]
	0x03ADEAFC CBNZ W8, 0x3ADEB04
	0x03ADEB00 BL 0x1C16DFC
	0x03ADEB04 MOV X0, X31
	0x03ADEB08 BL 0x3C018E4
	0x03ADEB0C TBZ X0, 0x0, 0x3ADEB34
	0x03ADEB10 LDR W8, [X19 + 0x130]
	0x03ADEB14 CMP W8, W21
	0x03ADEB18 B.EQ 0x3ADEBD8
	0x03ADEB1C LDR X8, [X19 + 0x138]
	0x03ADEB20 CBZ X8, 0x3ADEBE8
	0x03ADEB24 LDR X8, [X8 + 0x10]
	0x03ADEB28 CBZ X8, 0x3ADEBE8
	0x03ADEB2C LDR W8, [X8 + 0x18]
	0x03ADEB30 CBZ W8, 0x3ADEBD8
	0x03ADEB34 ADRP X8, 0x615000
	0x03ADEB38 LDR X8, [X8 + 0x598]
	0x03ADEB3C LDR X22, [X19 + 0x118]
	0x03ADEB40 LDR X0, [X8]
	0x03ADEB44 LDR W8, [X0 + 0xE0]
	0x03ADEB48 CBNZ W8, 0x3ADEB50
	0x03ADEB4C BL 0x1C16DFC
	0x03ADEB50 MOV X0, X22
	0x03ADEB54 MOV X1, X31
	0x03ADEB58 BL 0x3C38948
	0x03ADEB5C LDR X8, [X19 + 0x138]
	0x03ADEB60 CBZ X8, 0x3ADEBE8
	0x03ADEB64 LDR X8, [X8 + 0x10]
	0x03ADEB68 CBZ X8, 0x3ADEBE8
	0x03ADEB6C LDR W8, [X8 + 0x18]
	0x03ADEB70 SBFM W9, W0, 0x0, 0x0
	0x03ADEB74 MOV X0, X19
	0x03ADEB78 SUB W8, W8, 0x1
	0x03ADEB7C CMP W8, W21
	0x03ADEB80 CSEL W8, W8, W21, LT
	0x03ADEB84 CMP W9, W21
	0x03ADEB88 CSEL W8, W9, W8, GT
	0x03ADEB8C STR W8, [X19 + 0x130]
	0x03ADEB90 BL 0x3ADE728
	0x03ADEB94 TBZ X20, 0x0, 0x3ADEBD8
	0x03ADEB98 ADRP X8, 0x67A000
	0x03ADEB9C LDR X8, [X8 + 0xA30]
	0x03ADEBA0 MOV X1, X19
	0x03ADEBA4 MOV X2, X31
	0x03ADEBA8 LDR X0, [X8]
	0x03ADEBAC BL 0x3E252BC
	0x03ADEBB0 LDR X0, [X19 + 0x140]
	0x03ADEBB4 CBZ X0, 0x3ADEBE8
	0x03ADEBB8 ADRP X8, 0x67A000
	0x03ADEBBC LDR W1, [X19 + 0x130]
	0x03ADEBC0 LDR X8, [X8 + 0xA28]
	0x03ADEBC4 LDP X20, X19, [X31 + 0x20]
	0x03ADEBC8 LDP X22, X21, [X31 + 0x10]
	0x03ADEBCC LDR X2, [X8]
	0x03ADEBD0 LDP X30, X23, [X31], #0x30
	0x03ADEBD4 B 0x272947C
	0x03ADEBD8 LDP X20, X19, [X31 + 0x20]
	0x03ADEBDC LDP X22, X21, [X31 + 0x10]
	0x03ADEBE0 LDP X30, X23, [X31], #0x30
	0x03ADEBE4 RET
	0x03ADEBE8 BL 0x1C16F20
	0x03ADEBEC MOV W2, W31
	0x03ADEBF0 B 0x3ADEA84
	0x03ADEBF4 STP X30, X21, [X31 - 0x20]!
	0x03ADEBF8 STP X20, X19, [X31 + 0x10]
	0x03ADEBFC ADRP X21, 0x904000
	0x03ADEC00 ADRP X20, 0x615000
	0x03ADEC04 LDRB W8, [X21 + 0x56E]
	0x03ADEC08 LDR X20, [X20 + 0x598]
	0x03ADEC0C MOV X19, X0
	0x03ADEC10 TBNZ X8, 0x0, 0x3ADEC28
	0x03ADEC14 ADRP X0, 0x615000
	0x03ADEC18 LDR X0, [X0 + 0x598]
	0x03ADEC1C BL 0x1C16CF4
	0x03ADEC20 MOVZ W8, 0x1
	0x03ADEC24 STRB W8, [X21 + 0x56E]
	0x03ADEC28 LDR X0, [X20]
	0x03ADEC2C LDR X19, [X19 + 0x150]
	0x03ADEC30 LDR W8, [X0 + 0xE0]
	0x03ADEC34 CBNZ W8, 0x3ADEC3C
	0x03ADEC38 BL 0x1C16DFC
	0x03ADEC3C MOV X0, X19
	0x03ADEC40 LDP X20, X19, [X31 + 0x10]
	0x03ADEC44 MOV X1, X31
	0x03ADEC48 MOV X2, X31
	0x03ADEC4C LDP X30, X21, [X31], #0x20
	0x03ADEC50 B 0x3C354F8
	0x03ADEC54 STP X30, X25, [X31 - 0x40]!
	0x03ADEC58 STP X24, X23, [X31 + 0x10]
	0x03ADEC5C STP X22, X21, [X31 + 0x20]
	0x03ADEC60 STP X20, X19, [X31 + 0x30]
	0x03ADEC64 ADRP X20, 0x904000
	0x03ADEC68 ADRP X25, 0x67A000
	0x03ADEC6C ADRP X24, 0x67A000
	0x03ADEC70 ADRP X23, 0x67A000
	0x03ADEC74 ADRP X22, 0x67A000
	0x03ADEC78 ADRP X21, 0x67A000
	0x03ADEC7C LDRB W8, [X20 + 0x56F]
	0x03ADEC80 LDR X25, [X25 + 0xA38]
	0x03ADEC84 LDR X24, [X24 + 0xA40]
	0x03ADEC88 LDR X23, [X23 + 0xA48]
	0x03ADEC8C LDR X22, [X22 + 0xA50]
	0x03ADEC90 LDR X21, [X21 + 0xA58]
	0x03ADEC94 MOV X19, X0
	0x03ADEC98 TBNZ X8, 0x0, 0x3ADECE0
	0x03ADEC9C ADRP X0, 0x67A000
	0x03ADECA0 LDR X0, [X0 + 0xA40]
	0x03ADECA4 BL 0x1C16CF4
	0x03ADECA8 ADRP X0, 0x67A000
	0x03ADECAC LDR X0, [X0 + 0xA50]
	0x03ADECB0 BL 0x1C16CF4
	0x03ADECB4 ADRP X0, 0x67A000
	0x03ADECB8 LDR X0, [X0 + 0xA48]
	0x03ADECBC BL 0x1C16CF4
	0x03ADECC0 ADRP X0, 0x67A000
	0x03ADECC4 LDR X0, [X0 + 0xA38]
	0x03ADECC8 BL 0x1C16CF4
	0x03ADECCC ADRP X0, 0x67A000
	0x03ADECD0 LDR X0, [X0 + 0xA58]
	0x03ADECD4 BL 0x1C16CF4
	0x03ADECD8 MOVZ W8, 0x1
	0x03ADECDC STRB W8, [X20 + 0x56F]
	0x03ADECE0 LDR X0, [X25]
	0x03ADECE4 BL 0x1C16F10
	0x03ADECE8 MOV X20, X0
	0x03ADECEC BL 0x3ADED58
	0x03ADECF0 STR X20, [X19 + 0x138]
	0x03ADECF4 LDR X0, [X24]
	0x03ADECF8 BL 0x1C16F10
	0x03ADECFC MOV X20, X0
	0x03ADED00 BL 0x3ADEDD8
	0x03ADED04 MOVZ W8, 0x999A
	0x03ADED08 MOVK W8, 0x3E190000
	0x03ADED0C STR X20, [X19 + 0x140]
	0x03ADED10 STR W8, [X19 + 0x148]
	0x03ADED14 LDR X0, [X23]
	0x03ADED18 BL 0x1C16F10
	0x03ADED1C LDR X1, [X22]
	0x03ADED20 MOV X20, X0
	0x03ADED24 BL 0x301B7C4
	0x03ADED28 STR X20, [X19 + 0x160]
	0x03ADED2C LDR X0, [X21]
	0x03ADED30 LDR W8, [X0 + 0xE0]
	0x03ADED34 CBNZ W8, 0x3ADED3C
	0x03ADED38 BL 0x1C16DFC
	0x03ADED3C MOV X0, X19
	0x03ADED40 LDP X20, X19, [X31 + 0x30]
	0x03ADED44 LDP X22, X21, [X31 + 0x20]
	0x03ADED48 LDP X24, X23, [X31 + 0x10]
	0x03ADED4C MOV X1, X31
	0x03ADED50 LDP X30, X25, [X31], #0x40
	0x03ADED54 B 0x3E3B678
	0x03ADED58 STR X30, [X31 - 0x30]!
	0x03ADED5C STP X22, X21, [X31 + 0x10]
	0x03ADED60 STP X20, X19, [X31 + 0x20]
	0x03ADED64 ADRP X22, 0x904000
	0x03ADED68 ADRP X21, 0x67A000
	0x03ADED6C ADRP X20, 0x67A000
	0x03ADED70 LDRB W8, [X22 + 0x58A]
	0x03ADED74 LDR X21, [X21 + 0xA60]
	0x03ADED78 LDR X20, [X20 + 0xA68]
	0x03ADED7C MOV X19, X0
	0x03ADED80 TBNZ X8, 0x0, 0x3ADEDA4
	0x03ADED84 ADRP X0, 0x67A000
	0x03ADED88 LDR X0, [X0 + 0xA68]
	0x03ADED8C BL 0x1C16CF4
	0x03ADED90 ADRP X0, 0x67A000
	0x03ADED94 LDR X0, [X0 + 0xA60]
	0x03ADED98 BL 0x1C16CF4
	0x03ADED9C MOVZ W8, 0x1
	0x03ADEDA0 STRB W8, [X22 + 0x58A]
	0x03ADEDA4 MOV X0, X19
	0x03ADEDA8 MOV X1, X31
	0x03ADEDAC BL 0x33BDD8C
	0x03ADEDB0 LDR X0, [X21]
	0x03ADEDB4 BL 0x1C16F10
	0x03ADEDB8 LDR X1, [X20]
	0x03ADEDBC MOV X20, X0
	0x03ADEDC0 BL 0x301B7C4
	0x03ADEDC4 STR X20, [X19 + 0x10]
	0x03ADEDC8 LDP X20, X19, [X31 + 0x20]
	0x03ADEDCC LDP X22, X21, [X31 + 0x10]
	0x03ADEDD0 LDR X30, [X31], #0x30
	0x03ADEDD4 RET
	0x03ADEDD8 STP X30, X21, [X31 - 0x20]!
	0x03ADEDDC STP X20, X19, [X31 + 0x10]
	0x03ADEDE0 ADRP X20, 0x904000
	0x03ADEDE4 ADRP X21, 0x67A000
	0x03ADEDE8 LDRB W8, [X20 + 0x58B]
	0x03ADEDEC LDR X21, [X21 + 0xA70]
	0x03ADEDF0 MOV X19, X0
	0x03ADEDF4 TBNZ X8, 0x0, 0x3ADEE0C
	0x03ADEDF8 ADRP X0, 0x67A000
	0x03ADEDFC LDR X0, [X0 + 0xA70]
	0x03ADEE00 BL 0x1C16CF4
	0x03ADEE04 MOVZ W8, 0x1
	0x03ADEE08 STRB W8, [X20 + 0x58B]
	0x03ADEE0C LDR X1, [X21]
	0x03ADEE10 MOV X0, X19
	0x03ADEE14 LDP X20, X19, [X31 + 0x10]
	0x03ADEE18 LDP X30, X21, [X31], #0x20
	0x03ADEE1C B 0x272921C
	0x03ADEE20 STR X30, [X31 - 0x30]!
	0x03ADEE24 STP X22, X21, [X31 + 0x10]
	0x03ADEE28 STP X20, X19, [X31 + 0x20]
	0x03ADEE2C ADRP X20, 0x904000
	0x03ADEE30 ADRP X22, 0x615000
	0x03ADEE34 LDRB W8, [X20 + 0x570]
	0x03ADEE38 LDR X22, [X22 + 0x598]
	0x03ADEE3C MOV X19, X0
	0x03ADEE40 TBNZ X8, 0x0, 0x3ADEE58
	0x03ADEE44 ADRP X0, 0x615000
	0x03ADEE48 LDR X0, [X0 + 0x598]
	0x03ADEE4C BL 0x1C16CF4
	0x03ADEE50 MOVZ W8, 0x1
	0x03ADEE54 STRB W8, [X20 + 0x570]
	0x03ADEE58 LDR X0, [X22]
	0x03ADEE5C LDR X20, [X19 + 0x110]
	0x03ADEE60 LDR W8, [X0 + 0xE0]
	0x03ADEE64 CBNZ W8, 0x3ADEE6C
	0x03ADEE68 BL 0x1C16DFC
	0x03ADEE6C MOV X0, X20
	0x03ADEE70 MOV X1, X31
	0x03ADEE74 BL 0x3C38948
	0x03ADEE78 TBZ X0, 0x0, 0x3ADEEB8
	0x03ADEE7C LDR X20, [X19 + 0x110]
	0x03ADEE80 CBZ X20, 0x3ADEF18
	0x03ADEE84 LDR X0, [X22]
	0x03ADEE88 LDR X21, [X20 + 0xD8]
	0x03ADEE8C LDR W8, [X0 + 0xE0]
	0x03ADEE90 CBNZ W8, 0x3ADEE98
	0x03ADEE94 BL 0x1C16DFC
	0x03ADEE98 MOV X0, X21
	0x03ADEE9C MOV X1, X31
	0x03ADEEA0 MOV X2, X31
	0x03ADEEA4 BL 0x3C354F8
	0x03ADEEA8 AND W1, W0, 0x1
	0x03ADEEAC MOV X0, X20
	0x03ADEEB0 MOV X2, X31
	0x03ADEEB4 BL 0x3C32410
	0x03ADEEB8 LDR X0, [X22]
	0x03ADEEBC LDR X20, [X19 + 0x100]
	0x03ADEEC0 LDR W8, [X0 + 0xE0]
	0x03ADEEC4 CBNZ W8, 0x3ADEECC
	0x03ADEEC8 BL 0x1C16DFC
	0x03ADEECC MOV X0, X20
	0x03ADEED0 MOV X1, X31
	0x03ADEED4 BL 0x3C38948
	0x03ADEED8 TBZ X0, 0x0, 0x3ADEF08
	0x03ADEEDC LDR X0, [X19 + 0x100]
	0x03ADEEE0 CBZ X0, 0x3ADEF18
	0x03ADEEE4 MOV X1, X31
	0x03ADEEE8 BL 0x3C32ECC
	0x03ADEEEC CBZ X0, 0x3ADEF18
	0x03ADEEF0 LDP X20, X19, [X31 + 0x20]
	0x03ADEEF4 LDP X22, X21, [X31 + 0x10]
	0x03ADEEF8 MOV W1, W31
	0x03ADEEFC MOV X2, X31
	0x03ADEF00 LDR X30, [X31], #0x30
	0x03ADEF04 B 0x3C357B4
	0x03ADEF08 LDP X20, X19, [X31 + 0x20]
	0x03ADEF0C LDP X22, X21, [X31 + 0x10]
	0x03ADEF10 LDR X30, [X31], #0x30
	0x03ADEF14 RET
	0x03ADEF18 BL 0x1C16F20
	0x03ADEF1C STR X30, [X31 - 0x30]!
	0x03ADEF20 STP X22, X21, [X31 + 0x10]
	0x03ADEF24 STP X20, X19, [X31 + 0x20]
	0x03ADEF28 ADRP X21, 0x904000
	0x03ADEF2C ADRP X22, 0x67A000
	0x03ADEF30 ADRP X20, 0x67A000
	0x03ADEF34 LDRB W8, [X21 + 0x571]
	0x03ADEF38 LDR X22, [X22 + 0xA78]
	0x03ADEF3C LDR X20, [X20 + 0xA80]
	0x03ADEF40 MOV X19, X0
	0x03ADEF44 TBNZ X8, 0x0, 0x3ADEF74
	0x03ADEF48 ADRP X0, 0x67A000
	0x03ADEF4C LDR X0, [X0 + 0xA88]
	0x03ADEF50 BL 0x1C16CF4
	0x03ADEF54 ADRP X0, 0x67A000
	0x03ADEF58 LDR X0, [X0 + 0xA80]
	0x03ADEF5C BL 0x1C16CF4
	0x03ADEF60 ADRP X0, 0x67A000
	0x03ADEF64 LDR X0, [X0 + 0xA78]
	0x03ADEF68 BL 0x1C16CF4
	0x03ADEF6C MOVZ W8, 0x1
	0x03ADEF70 STRB W8, [X21 + 0x571]
	0x03ADEF74 LDR X0, [X22]
	0x03ADEF78 BL 0x1C16F10
	0x03ADEF7C LDR X1, [X20]
	0x03ADEF80 MOV X20, X0
	0x03ADEF84 BL 0x2708BE4
	0x03ADEF88 STR X20, [X19 + 0x168]
	0x03ADEF8C CBZ X20, 0x3ADEFB4
	0x03ADEF90 MOV X0, X19
	0x03ADEF94 MOV X1, X31
	0x03ADEF98 STR X19, [X20 + 0x10]
	0x03ADEF9C BL 0x3E5148C
	0x03ADEFA0 MOV X0, X19
	0x03ADEFA4 LDP X20, X19, [X31 + 0x20]
	0x03ADEFA8 LDP X22, X21, [X31 + 0x10]
	0x03ADEFAC LDR X30, [X31], #0x30
	0x03ADEFB0 B 0x3ADE728
	0x03ADEFB4 BL 0x1C16F20
	0x03ADEFB8 STP X30, X21, [X31 - 0x20]!
	0x03ADEFBC STP X20, X19, [X31 + 0x10]
	0x03ADEFC0 ADRP X21, 0x904000
	0x03ADEFC4 ADRP X20, 0x615000
	0x03ADEFC8 LDRB W8, [X21 + 0x572]
	0x03ADEFCC LDR X20, [X20 + 0x598]
	0x03ADEFD0 MOV X19, X0
	0x03ADEFD4 TBNZ X8, 0x0, 0x3ADEFEC
	0x03ADEFD8 ADRP X0, 0x615000
	0x03ADEFDC LDR X0, [X0 + 0x598]
	0x03ADEFE0 BL 0x1C16CF4
	0x03ADEFE4 MOVZ W8, 0x1
	0x03ADEFE8 STRB W8, [X21 + 0x572]
	0x03ADEFEC MOV X0, X19
	0x03ADEFF0 BL 0x3ADF04C
	0x03ADEFF4 LDR X0, [X20]
	0x03ADEFF8 LDR X20, [X19 + 0x158]
	0x03ADEFFC LDR W8, [X0 + 0xE0]
	0x03ADF000 CBNZ W8, 0x3ADF008
	0x03ADF004 BL 0x1C16DFC
	0x03ADF008 MOV X0, X20
	0x03ADF00C MOV X1, X31
	0x03ADF010 MOV X2, X31
	0x03ADF014 BL 0x3C354F8
	0x03ADF018 TBZ X0, 0x0, 0x3ADF034
	0x03ADF01C LDR X8, [X19]
	0x03ADF020 LDR X1, [X19 + 0x158]
	0x03ADF024 MOV X0, X19
	0x03ADF028 LDR X9, [X8 + 0x418]
	0x03ADF02C LDR X2, [X8 + 0x420]
	0x03ADF030 BLR X9
	0x03ADF034 STR X31, [X19 + 0x158]
	0x03ADF038 MOV X0, X19
	0x03ADF03C LDP X20, X19, [X31 + 0x10]
	0x03ADF040 MOV X1, X31
	0x03ADF044 LDP X30, X21, [X31], #0x20
	0x03ADF048 B 0x3E3BD80
	0x03ADF04C STR X30, [X31 - 0x40]!
	0x03ADF050 STP X24, X23, [X31 + 0x10]
	0x03ADF054 STP X22, X21, [X31 + 0x20]
	0x03ADF058 STP X20, X19, [X31 + 0x30]
	0x03ADF05C ADRP X20, 0x903000
	0x03ADF060 LDRB W8, [X20 + 0x585]
	0x03ADF064 MOV X19, X0
	0x03ADF068 TBNZ X8, 0x0, 0x3ADF0B0
	0x03ADF06C ADRP X0, 0x679000
	0x03ADF070 LDR X0, [X0 + 0xA90]
	0x03ADF074 BL 0x1C16CF4
	0x03ADF078 ADRP X0, 0x679000
	0x03ADF07C LDR X0, [X0 + 0xA98]
	0x03ADF080 BL 0x1C16CF4
	0x03ADF084 ADRP X0, 0x679000
	0x03ADF088 LDR X0, [X0 + 0xAA0]
	0x03ADF08C BL 0x1C16CF4
	0x03ADF090 ADRP X0, 0x614000
	0x03ADF094 LDR X0, [X0 + 0x598]
	0x03ADF098 BL 0x1C16CF4
	0x03ADF09C ADRP X0, 0x679000
	0x03ADF0A0 LDR X0, [X0 + 0xAA8]
	0x03ADF0A4 BL 0x1C16CF4
	0x03ADF0A8 MOVZ W8, 0x1
	0x03ADF0AC STRB W8, [X20 + 0x585]
	0x03ADF0B0 LDR X0, [X19 + 0x160]
	0x03ADF0B4 CBZ X0, 0x3ADF150
	0x03ADF0B8 ADRP X24, 0x679000
	0x03ADF0BC ADRP X23, 0x614000
	0x03ADF0C0 ADRP X22, 0x679000
	0x03ADF0C4 LDR X24, [X24 + 0xAA0]
	0x03ADF0C8 LDR X23, [X23 + 0x598]
	0x03ADF0CC LDR X22, [X22 + 0xAA8]
	0x03ADF0D0 MOV W20, W31
	0x03ADF0D4 LDR W2, [X0 + 0x18]
	0x03ADF0D8 CMP W20, W2
	0x03ADF0DC B.GE 0x3ADF154
	0x03ADF0E0 LDR X2, [X24]
	0x03ADF0E4 MOV W1, W20
	0x03ADF0E8 BL 0x301BCCC
	0x03ADF0EC LDR X8, [X23]
	0x03ADF0F0 MOV X21, X0
	0x03ADF0F4 LDR W9, [X8 + 0xE0]
	0x03ADF0F8 CBNZ W9, 0x3ADF104
	0x03ADF0FC MOV X0, X8
	0x03ADF100 BL 0x1C16DFC
	0x03ADF104 MOV X0, X21
	0x03ADF108 MOV X1, X31
	0x03ADF10C MOV X2, X31
	0x03ADF110 BL 0x3C354F8
	0x03ADF114 TBZ X0, 0x0, 0x3ADF144
	0x03ADF118 LDR X0, [X19 + 0x160]
	0x03ADF11C CBZ X0, 0x3ADF150
	0x03ADF120 LDR X2, [X24]
	0x03ADF124 MOV W1, W20
	0x03ADF128 BL 0x301BCCC
	0x03ADF12C LDR X8, [X19]
	0x03ADF130 MOV X1, X0
	0x03ADF134 MOV X0, X19
	0x03ADF138 LDR X9, [X8 + 0x458]
	0x03ADF13C LDR X2, [X8 + 0x460]
	0x03ADF140 BLR X9
	0x03ADF144 LDR X0, [X19 + 0x160]
	0x03ADF148 ADD W20, W20, 0x1
	0x03ADF14C CBNZ X0, 0x3ADF0D4
	0x03ADF150 BL 0x1C16F20
	0x03ADF154 LDR W8, [X0 + 0x1C]
	0x03ADF158 CMP W2, 0x1
	0x03ADF15C ADD W8, W8, 0x1
	0x03ADF160 STP W31, W8, [X0 + 0x18]
	0x03ADF164 B.LT 0x3ADF178
	0x03ADF168 LDR X0, [X0 + 0x10]
	0x03ADF16C MOV W1, W31
	0x03ADF170 MOV X3, X31
	0x03ADF174 BL 0x339FA34
	0x03ADF178 LDR X0, [X23]
	0x03ADF17C LDR X20, [X19 + 0x150]
	0x03ADF180 LDR W8, [X0 + 0xE0]
	0x03ADF184 CBNZ W8, 0x3ADF18C
	0x03ADF188 BL 0x1C16DFC
	0x03ADF18C MOV X0, X20
	0x03ADF190 MOV X1, X31
	0x03ADF194 MOV X2, X31
	0x03ADF198 BL 0x3C354F8
	0x03ADF19C TBZ X0, 0x0, 0x3ADF1B8
	0x03ADF1A0 LDR X8, [X19]
	0x03ADF1A4 LDR X1, [X19 + 0x150]
	0x03ADF1A8 MOV X0, X19
	0x03ADF1AC LDR X9, [X8 + 0x438]
	0x03ADF1B0 LDR X2, [X8 + 0x440]
	0x03ADF1B4 BLR X9
	0x03ADF1B8 LDR X0, [X19 + 0x168]
	0x03ADF1BC CBZ X0, 0x3ADF1C8
	0x03ADF1C0 LDR X1, [X22]
	0x03ADF1C4 BL 0x2708BB4
	0x03ADF1C8 STR X31, [X19 + 0x150]
	0x03ADF1CC STR X31, [X19 + 0x178]
	0x03ADF1D0 LDP X20, X19, [X31 + 0x30]
	0x03ADF1D4 LDP X22, X21, [X31 + 0x20]
	0x03ADF1D8 LDP X24, X23, [X31 + 0x10]
	0x03ADF1DC LDR X30, [X31], #0x40
	0x03ADF1E0 RET
	0x03ADF1E4 STP X30, X21, [X31 - 0x20]!
	0x03ADF1E8 STP X20, X19, [X31 + 0x10]
	0x03ADF1EC ADRP X21, 0x903000
	0x03ADF1F0 LDRB W8, [X21 + 0x574]
	0x03ADF1F4 MOV X20, X1
	0x03ADF1F8 MOV X19, X0
	0x03ADF1FC TBNZ X8, 0x0, 0x3ADF214
	0x03ADF200 ADRP X0, 0x679000
	0x03ADF204 LDR X0, [X0 + 0xAB0]
	0x03ADF208 BL 0x1C16CF4
	0x03ADF20C MOVZ W8, 0x1
	0x03ADF210 STRB W8, [X21 + 0x574]
	0x03ADF214 LDR X8, [X19 + 0x138]
	0x03ADF218 CBZ X8, 0x3ADF248
	0x03ADF21C LDR X0, [X8 + 0x10]
	0x03ADF220 CBZ X0, 0x3ADF248
	0x03ADF224 ADRP X8, 0x679000
	0x03ADF228 LDR X8, [X8 + 0xAB0]
	0x03ADF22C MOV X1, X20
	0x03ADF230 LDR X2, [X8]
	0x03ADF234 BL 0x301C194
	0x03ADF238 MOV X0, X19
	0x03ADF23C LDP X20, X19, [X31 + 0x10]
	0x03ADF240 LDP X30, X21, [X31], #0x20
	0x03ADF244 B 0x3ADE728
	0x03ADF248 BL 0x1C16F20
	0x03ADF24C STP X30, X27, [X31 - 0x50]!
	0x03ADF250 STP X26, X25, [X31 + 0x10]
	0x03ADF254 STP X24, X23, [X31 + 0x20]
	0x03ADF258 STP X22, X21, [X31 + 0x30]
	0x03ADF25C STP X20, X19, [X31 + 0x40]
	0x03ADF260 ADRP X21, 0x903000
	0x03ADF264 LDRB W8, [X21 + 0x575]
	0x03ADF268 MOV X19, X1
	0x03ADF26C MOV X20, X0
	0x03ADF270 TBNZ X8, 0x0, 0x3ADF2AC
	0x03ADF274 ADRP X0, 0x679000
	0x03ADF278 LDR X0, [X0 + 0x998]
	0x03ADF27C BL 0x1C16CF4
	0x03ADF280 ADRP X0, 0x615000
	0x03ADF284 LDR X0, [X0 + 0x1C8]
	0x03ADF288 BL 0x1C16CF4
	0x03ADF28C ADRP X0, 0x63C000
	0x03ADF290 LDR X0, [X0 + 0xB58]
	0x03ADF294 BL 0x1C16CF4
	0x03ADF298 ADRP X0, 0x679000
	0x03ADF29C LDR X0, [X0 + 0x9A0]
	0x03ADF2A0 BL 0x1C16CF4
	0x03ADF2A4 MOVZ W8, 0x1
	0x03ADF2A8 STRB W8, [X21 + 0x575]
	0x03ADF2AC CBZ X19, 0x3ADF398
	0x03ADF2B0 LDR W8, [X19 + 0x18]
	0x03ADF2B4 CMP W8, 0x1
	0x03ADF2B8 B.LT 0x3ADF37C
	0x03ADF2BC ADRP X25, 0x63C000
	0x03ADF2C0 ADRP X26, 0x679000
	0x03ADF2C4 ADRP X27, 0x679000
	0x03ADF2C8 LDR X25, [X25 + 0xB58]
	0x03ADF2CC LDR X26, [X26 + 0x9A0]
	0x03ADF2D0 LDR X27, [X27 + 0x998]
	0x03ADF2D4 MOV W21, W31
	0x03ADF2D8 LDR X8, [X20 + 0x138]
	0x03ADF2DC CBZ X8, 0x3ADF398
	0x03ADF2E0 LDR X2, [X25]
	0x03ADF2E4 LDR X22, [X8 + 0x10]
	0x03ADF2E8 MOV X0, X19
	0x03ADF2EC MOV W1, W21
	0x03ADF2F0 BL 0x301BCCC
	0x03ADF2F4 LDR X8, [X26]
	0x03ADF2F8 MOV X24, X0
	0x03ADF2FC MOV X0, X8
	0x03ADF300 BL 0x1C16F10
	0x03ADF304 MOV X1, X31
	0x03ADF308 MOV X23, X0
	0x03ADF30C BL 0x33BDD8C
	0x03ADF310 STR X24, [X23 + 0x10]
	0x03ADF314 CBZ X22, 0x3ADF398
	0x03ADF318 LDR W10, [X22 + 0x1C]
	0x03ADF31C LDR X8, [X22 + 0x10]
	0x03ADF320 LDR X9, [X27]
	0x03ADF324 ADD W10, W10, 0x1
	0x03ADF328 STR W10, [X22 + 0x1C]
	0x03ADF32C CBZ X8, 0x3ADF398
	0x03ADF330 LDRSW X10, [X22 + 0x18]
	0x03ADF334 LDR W11, [X8 + 0x18]
	0x03ADF338 CMP W10, W11
	0x03ADF33C B.CS 0x3ADF354
	0x03ADF340 ADD W9, W10, 0x1
	0x03ADF344 ADD X8, X8, X10, 0x3, LSL
	0x03ADF348 STR W9, [X22 + 0x18]
	0x03ADF34C STR X23, [X8 + 0x20]
	0x03ADF350 B 0x3ADF36C
	0x03ADF354 LDR X8, [X9 + 0x20]
	0x03ADF358 MOV X0, X22
	0x03ADF35C MOV X1, X23
	0x03ADF360 LDR X8, [X8 + 0xC0]
	0x03ADF364 LDR X2, [X8 + 0x70]
	0x03ADF368 BL 0x301BF90
	0x03ADF36C LDR W8, [X19 + 0x18]
	0x03ADF370 ADD W21, W21, 0x1
	0x03ADF374 CMP W21, W8
	0x03ADF378 B.LT 0x3ADF2D8
	0x03ADF37C MOV X0, X20
	0x03ADF380 LDP X20, X19, [X31 + 0x40]
	0x03ADF384 LDP X22, X21, [X31 + 0x30]
	0x03ADF388 LDP X24, X23, [X31 + 0x20]
	0x03ADF38C LDP X26, X25, [X31 + 0x10]
	0x03ADF390 LDP X30, X27, [X31], #0x50
	0x03ADF394 B 0x3ADE728
	0x03ADF398 BL 0x1C16F20
	0x03ADF39C STR X30, [X31 - 0x20]!
	0x03ADF3A0 STP X20, X19, [X31 + 0x10]
	0x03ADF3A4 MOV X19, X1
	0x03ADF3A8 MOV X1, X31
	0x03ADF3AC MOV X20, X0
	0x03ADF3B0 BL 0x33BDD8C
	0x03ADF3B4 STR X19, [X20 + 0x10]
	0x03ADF3B8 LDP X20, X19, [X31 + 0x10]
	0x03ADF3BC LDR X30, [X31], #0x20
	0x03ADF3C0 RET
	0x03ADF3C4 STP X30, X27, [X31 - 0x50]!
	0x03ADF3C8 STP X26, X25, [X31 + 0x10]
	0x03ADF3CC STP X24, X23, [X31 + 0x20]
	0x03ADF3D0 STP X22, X21, [X31 + 0x30]
	0x03ADF3D4 STP X20, X19, [X31 + 0x40]
	0x03ADF3D8 ADRP X21, 0x903000
	0x03ADF3DC LDRB W8, [X21 + 0x576]
	0x03ADF3E0 MOV X19, X1
	0x03ADF3E4 MOV X20, X0
	0x03ADF3E8 TBNZ X8, 0x0, 0x3ADF424
	0x03ADF3EC ADRP X0, 0x679000
	0x03ADF3F0 LDR X0, [X0 + 0x998]
	0x03ADF3F4 BL 0x1C16CF4
	0x03ADF3F8 ADRP X0, 0x679000
	0x03ADF3FC LDR X0, [X0 + 0xAB8]
	0x03ADF400 BL 0x1C16CF4
	0x03ADF404 ADRP X0, 0x679000
	0x03ADF408 LDR X0, [X0 + 0xAC0]
	0x03ADF40C BL 0x1C16CF4
	0x03ADF410 ADRP X0, 0x679000
	0x03ADF414 LDR X0, [X0 + 0x9A0]
	0x03ADF418 BL 0x1C16CF4
	0x03ADF41C MOVZ W8, 0x1
	0x03ADF420 STRB W8, [X21 + 0x576]
	0x03ADF424 CBZ X19, 0x3ADF510
	0x03ADF428 LDR W8, [X19 + 0x18]
	0x03ADF42C CMP W8, 0x1
	0x03ADF430 B.LT 0x3ADF4F4
	0x03ADF434 ADRP X25, 0x679000
	0x03ADF438 ADRP X26, 0x679000
	0x03ADF43C ADRP X27, 0x679000
	0x03ADF440 LDR X25, [X25 + 0xAC0]
	0x03ADF444 LDR X26, [X26 + 0x9A0]
	0x03ADF448 LDR X27, [X27 + 0x998]
	0x03ADF44C MOV W21, W31
	0x03ADF450 LDR X8, [X20 + 0x138]
	0x03ADF454 CBZ X8, 0x3ADF510
	0x03ADF458 LDR X2, [X25]
	0x03ADF45C LDR X22, [X8 + 0x10]
	0x03ADF460 MOV X0, X19
	0x03ADF464 MOV W1, W21
	0x03ADF468 BL 0x301BCCC
	0x03ADF46C LDR X8, [X26]
	0x03ADF470 MOV X24, X0
	0x03ADF474 MOV X0, X8
	0x03ADF478 BL 0x1C16F10
	0x03ADF47C MOV X1, X31
	0x03ADF480 MOV X23, X0
	0x03ADF484 BL 0x33BDD8C
	0x03ADF488 STR X24, [X23 + 0x18]
	0x03ADF48C CBZ X22, 0x3ADF510
	0x03ADF490 LDR W10, [X22 + 0x1C]
	0x03ADF494 LDR X8, [X22 + 0x10]
	0x03ADF498 LDR X9, [X27]
	0x03ADF49C ADD W10, W10, 0x1
	0x03ADF4A0 STR W10, [X22 + 0x1C]
	0x03ADF4A4 CBZ X8, 0x3ADF510
	0x03ADF4A8 LDRSW X10, [X22 + 0x18]
	0x03ADF4AC LDR W11, [X8 + 0x18]
	0x03ADF4B0 CMP W10, W11
	0x03ADF4B4 B.CS 0x3ADF4CC
	0x03ADF4B8 ADD W9, W10, 0x1
	0x03ADF4BC ADD X8, X8, X10, 0x3, LSL
	0x03ADF4C0 STR W9, [X22 + 0x18]
	0x03ADF4C4 STR X23, [X8 + 0x20]
	0x03ADF4C8 B 0x3ADF4E4
	0x03ADF4CC LDR X8, [X9 + 0x20]
	0x03ADF4D0 MOV X0, X22
	0x03ADF4D4 MOV X1, X23
	0x03ADF4D8 LDR X8, [X8 + 0xC0]
	0x03ADF4DC LDR X2, [X8 + 0x70]
	0x03ADF4E0 BL 0x301BF90
	0x03ADF4E4 LDR W8, [X19 + 0x18]
	0x03ADF4E8 ADD W21, W21, 0x1
	0x03ADF4EC CMP W21, W8
	0x03ADF4F0 B.LT 0x3ADF450
	0x03ADF4F4 MOV X0, X20
	0x03ADF4F8 LDP X20, X19, [X31 + 0x40]
	0x03ADF4FC LDP X22, X21, [X31 + 0x30]
	0x03ADF500 LDP X24, X23, [X31 + 0x20]
	0x03ADF504 LDP X26, X25, [X31 + 0x10]
	0x03ADF508 LDP X30, X27, [X31], #0x50
	0x03ADF50C B 0x3ADE728
	0x03ADF510 BL 0x1C16F20
	0x03ADF514 STR X30, [X31 - 0x20]!
	0x03ADF518 STP X20, X19, [X31 + 0x10]
	0x03ADF51C MOV X19, X1
	0x03ADF520 MOV X1, X31
	0x03ADF524 MOV X20, X0
	0x03ADF528 BL 0x33BDD8C
	0x03ADF52C STR X19, [X20 + 0x18]
	0x03ADF530 LDP X20, X19, [X31 + 0x10]
	0x03ADF534 LDR X30, [X31], #0x20
	0x03ADF538 RET
	0x03ADF53C STR X30, [X31 - 0x20]!
	0x03ADF540 STP X20, X19, [X31 + 0x10]
	0x03ADF544 ADRP X20, 0x903000
	0x03ADF548 LDRB W8, [X20 + 0x577]
	0x03ADF54C MOV X19, X0
	0x03ADF550 TBNZ X8, 0x0, 0x3ADF574
	0x03ADF554 ADRP X0, 0x679000
	0x03ADF558 LDR X0, [X0 + 0xAC8]
	0x03ADF55C BL 0x1C16CF4
	0x03ADF560 ADRP X0, 0x614000
	0x03ADF564 LDR X0, [X0 + 0x598]
	0x03ADF568 BL 0x1C16CF4
	0x03ADF56C MOVZ W8, 0x1
	0x03ADF570 STRB W8, [X20 + 0x577]
	0x03ADF574 LDR X8, [X19 + 0x138]
	0x03ADF578 CBZ X8, 0x3ADF5E8
	0x03ADF57C LDR X8, [X8 + 0x10]
	0x03ADF580 CBZ X8, 0x3ADF5E8
	0x03ADF584 LDP W2, W9, [X8 + 0x18]
	0x03ADF588 ADRP X20, 0x614000
	0x03ADF58C LDR X20, [X20 + 0x598]
	0x03ADF590 ADD W9, W9, 0x1
	0x03ADF594 CMP W2, 0x1
	0x03ADF598 STP W31, W9, [X8 + 0x18]
	0x03ADF59C B.LT 0x3ADF5B0
	0x03ADF5A0 LDR X0, [X8 + 0x10]
	0x03ADF5A4 MOV W1, W31
	0x03ADF5A8 MOV X3, X31
	0x03ADF5AC BL 0x339FA34
	0x03ADF5B0 LDR X0, [X20]
	0x03ADF5B4 LDR X20, [X19 + 0x118]
	0x03ADF5B8 LDR W8, [X0 + 0xE0]
	0x03ADF5BC CBNZ W8, 0x3ADF5C4
	0x03ADF5C0 BL 0x1C16DFC
	0x03ADF5C4 MOV X0, X20
	0x03ADF5C8 MOV X1, X31
	0x03ADF5CC BL 0x3C38948
	0x03ADF5D0 SBFM W8, W0, 0x0, 0x0
	0x03ADF5D4 STR W8, [X19 + 0x130]
	0x03ADF5D8 MOV X0, X19
	0x03ADF5DC LDP X20, X19, [X31 + 0x10]
	0x03ADF5E0 LDR X30, [X31], #0x20
	0x03ADF5E4 B 0x3ADE728
	0x03ADF5E8 BL 0x1C16F20
	0x03ADF5EC STR X30, [X31 - 0x50]!
	0x03ADF5F0 STP X26, X25, [X31 + 0x10]
	0x03ADF5F4 STP X24, X23, [X31 + 0x20]
	0x03ADF5F8 STP X22, X21, [X31 + 0x30]
	0x03ADF5FC STP X20, X19, [X31 + 0x40]
	0x03ADF600 ADRP X20, 0x903000
	0x03ADF604 ADRP X24, 0x614000
	0x03ADF608 LDRB W8, [X20 + 0x578]
	0x03ADF60C LDR X24, [X24 + 0x598]
	0x03ADF610 MOV X19, X0
	0x03ADF614 TBNZ X8, 0x0, 0x3ADF6E0
	0x03ADF618 ADRP X0, 0x679000
	0x03ADF61C LDR X0, [X0 + 0xAD0]
	0x03ADF620 BL 0x1C16CF4
	0x03ADF624 ADRP X0, 0x66A000
	0x03ADF628 LDR X0, [X0 + 0x560]
	0x03ADF62C BL 0x1C16CF4
	0x03ADF630 ADRP X0, 0x679000
	0x03ADF634 LDR X0, [X0 + 0xAD8]
	0x03ADF638 BL 0x1C16CF4
	0x03ADF63C ADRP X0, 0x614000
	0x03ADF640 LDR X0, [X0 + 0xA28]
	0x03ADF644 BL 0x1C16CF4
	0x03ADF648 ADRP X0, 0x679000
	0x03ADF64C LDR X0, [X0 + 0xAE0]
	0x03ADF650 BL 0x1C16CF4
	0x03ADF654 ADRP X0, 0x614000
	0x03ADF658 LDR X0, [X0 + 0x598]
	0x03ADF65C BL 0x1C16CF4
	0x03ADF660 ADRP X0, 0x63B000
	0x03ADF664 LDR X0, [X0 + 0xC70]
	0x03ADF668 BL 0x1C16CF4
	0x03ADF66C ADRP X0, 0x679000
	0x03ADF670 LDR X0, [X0 + 0xAE8]
	0x03ADF674 BL 0x1C16CF4
	0x03ADF678 ADRP X0, 0x679000
	0x03ADF67C LDR X0, [X0 + 0xAF0]
	0x03ADF680 BL 0x1C16CF4
	0x03ADF684 ADRP X0, 0x679000
	0x03ADF688 LDR X0, [X0 + 0xAF8]
	0x03ADF68C BL 0x1C16CF4
	0x03ADF690 ADRP X0, 0x679000
	0x03ADF694 LDR X0, [X0 + 0xA10]
	0x03ADF698 BL 0x1C16CF4
	0x03ADF69C ADRP X0, 0x679000
	0x03ADF6A0 LDR X0, [X0 + 0xB00]
	0x03ADF6A4 BL 0x1C16CF4
	0x03ADF6A8 ADRP X0, 0x679000
	0x03ADF6AC LDR X0, [X0 + 0xB08]
	0x03ADF6B0 BL 0x1C16CF4
	0x03ADF6B4 ADRP X0, 0x679000
	0x03ADF6B8 LDR X0, [X0 + 0xB10]
	0x03ADF6BC BL 0x1C16CF4
	0x03ADF6C0 ADRP X0, 0x679000
	0x03ADF6C4 LDR X0, [X0 + 0xB18]
	0x03ADF6C8 BL 0x1C16CF4
	0x03ADF6CC ADRP X0, 0x679000
	0x03ADF6D0 LDR X0, [X0 + 0xB20]
	0x03ADF6D4 BL 0x1C16CF4
	0x03ADF6D8 MOVZ W8, 0x1
	0x03ADF6DC STRB W8, [X20 + 0x578]
	0x03ADF6E0 STRB W31, [X19 + 0x170]
	0x03ADF6E4 LDR X0, [X24]
	0x03ADF6E8 LDR X20, [X19 + 0x100]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+112], X29
	003 Move [X31+120], X30
	004 Move [X31+128], X28
	005 Move [X31+136], X27
	006 Move [X31+144], X26
	007 Move [X31+152], X25
	008 Move [X31+160], X24
	009 Move [X31+168], X23
	010 Move [X31+176], X22
	011 Move [X31+184], X21
	012 Move [X31+192], X20
	013 Move [X31+200], X19
	014 Move X19, 0x905000
	015 Move X20, 0x67B000
	016 Move W8, [X19+1387]
	017 Move X20, [X20+2264]
	018 Move X29, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {103}
	023 Move X0, 0x67B000
	024 Move X0, [X0+2272]
	025 Call 0x1C17CF4
	026 Move X0, 0x67B000
	027 Move X0, [X0+2416]
	028 Call 0x1C17CF4
	029 Move X0, 0x67B000
	030 Move X0, [X0+2424]
	031 Call 0x1C17CF4
	032 Move X0, 0x67B000
	033 Move X0, [X0+2432]
	034 Call 0x1C17CF4
	035 Move X0, 0x67B000
	036 Move X0, [X0+2320]
	037 Call 0x1C17CF4
	038 Move X0, 0x67B000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move X0, 0x676000
	042 Move X0, [X0+2880]
	043 Call 0x1C17CF4
	044 Move X0, 0x67B000
	045 Move X0, [X0+2448]
	046 Call 0x1C17CF4
	047 Move X0, 0x67B000
	048 Move X0, [X0+2456]
	049 Call 0x1C17CF4
	050 Move X0, 0x67B000
	051 Move X0, [X0+2464]
	052 Call 0x1C17CF4
	053 Move X0, 0x63D000
	054 Move X0, [X0+3184]
	055 Call 0x1C17CF4
	056 Move X0, 0x67B000
	057 Move X0, [X0+2264]
	058 Call 0x1C17CF4
	059 Move X0, 0x67B000
	060 Move X0, [X0+2472]
	061 Call 0x1C17CF4
	062 Move X0, 0x67B000
	063 Move X0, [X0+2480]
	064 Call 0x1C17CF4
	065 Move X0, 0x67B000
	066 Move X0, [X0+2488]
	067 Call 0x1C17CF4
	068 Move X0, 0x67B000
	069 Move X0, [X0+2496]
	070 Call 0x1C17CF4
	071 Move X0, 0x67B000
	072 Move X0, [X0+2504]
	073 Call 0x1C17CF4
	074 Move X0, 0x67B000
	075 Move X0, [X0+2512]
	076 Call 0x1C17CF4
	077 Move X0, 0x67B000
	078 Move X0, [X0+2520]
	079 Call 0x1C17CF4
	080 Move X0, 0x67B000
	081 Move X0, [X0+2528]
	082 Call 0x1C17CF4
	083 Move X0, 0x67B000
	084 Move X0, [X0+2536]
	085 Call 0x1C17CF4
	086 Move X0, 0x67B000
	087 Move X0, [X0+2544]
	088 Call 0x1C17CF4
	089 Move X0, 0x67B000
	090 Move X0, [X0+2552]
	091 Call 0x1C17CF4
	092 Move X0, 0x67B000
	093 Move X0, [X0+2560]
	094 Call 0x1C17CF4
	095 Move X0, 0x67B000
	096 Move X0, [X0+2568]
	097 Call 0x1C17CF4
	098 Move X0, 0x67B000
	099 Move X0, [X0+2296]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X19+1387], W8
	103 Move X28, 0x67B000
	104 Move X19, 0x67B000
	105 Move X26, 0x67B000
	106 Move X28, [X28+2568]
	107 Move X19, [X19+2496]
	108 Move X26, [X26+2504]
	109 Move X0, [X20]
	110 Move X27, 0x67B000
	111 Move X21, 0x67B000
	112 Move X25, 0x67B000
	113 Move X24, 0x67B000
	114 Move X23, 0x67B000
	115 Move X22, 0x67B000
	116 Move X27, [X27+2552]
	117 Move X21, [X21+2512]
	118 Move X25, [X25+2544]
	119 Move W8, [X0+224]
	120 Move X24, [X24+2536]
	121 Move X23, [X23+2560]
	122 Move X22, [X22+2472]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X20]
	127 Move X8, [X0+184]
	128 Move X0, [X28]
	129 Move S0, [X8+8]
	130 Move S1, [X8+12]
	131 Call TMP_DefaultControls.CreateUIElementRoot, X0, X1
	132 Move X8, [X19]
	133 Move X19, X0
	134 Move X1, X19
	135 Move X0, X8
	136 Call TMP_DefaultControls.CreateUIObject, X0, X1
	137 Move X8, [X26]
	138 Move [X31+16], X0
	139 Move X1, X19
	140 Move X0, X8
	141 Call TMP_DefaultControls.CreateUIObject, X0, X1
	142 Move X8, [X27]
	143 Move [X31+8], X0
	144 Move X1, X19
	145 Move X0, X8
	146 Call TMP_DefaultControls.CreateUIObject, X0, X1
	147 Move X8, [X21]
	148 Move X20, X0
	149 Move X1, X20
	150 Move X0, X8
	151 Call TMP_DefaultControls.CreateUIObject, X0, X1
	152 Move X8, [X25]
	153 Move X26, X0
	154 Move X1, X26
	155 Move X0, X8
	156 Call TMP_DefaultControls.CreateUIObject, X0, X1
	157 Move X8, [X24]
	158 Move X24, X0
	159 Move X1, X24
	160 Move X0, X8
	161 Call TMP_DefaultControls.CreateUIObject, X0, X1
	162 Move X8, [X23]
	163 Move X23, X0
	164 Move X1, X23
	165 Move X0, X8
	166 Call TMP_DefaultControls.CreateUIObject, X0, X1
	167 Move X8, [X22]
	168 Move X22, X0
	169 Move X1, X23
	170 Move X0, X8
	171 Call TMP_DefaultControls.CreateUIObject, X0, X1
	172 Move X8, 0x67B000
	173 Move X8, [X8+2528]
	174 Move X28, X0
	175 Move X1, X23
	176 Move [X31+32], X23
	177 Move X8, [X8]
	178 Move X0, X8
	179 Call TMP_DefaultControls.CreateUIObject, X0, X1
	180 Move X8, [X29+48]
	181 Move V2, [X29+16]
	182 Move V0, [X29+32]
	183 Move V1, [X29]
	184 Move X27, X0
	185 Add X0, X31, 48
	186 Move [X31+96], X8
	187 Move [X31+64], V2
	188 Move [X31+72], V0
	189 Move [X31+3], V1
	190 Call TMP_DefaultControls.CreateScrollbar, X0
	191 Compare X0, 0
	192 JumpIfEqual {966}
	193 Move [X31+24], X24
	194 Move [X31+40], X22
	195 Move X8, 0x67B000
	196 Move X8, [X8+2296]
	197 Move X22, 0x67B000
	198 Move X2, X31
	199 Move X21, X0
	200 Move X1, [X8]
	201 Move X22, [X22+2448]
	202 Call Object.set_name, X0, X1
	203 Move X0, X21
	204 Move X1, X20
	205 Call TMP_DefaultControls.SetParentAndAlign, X0, X1
	206 Move X1, [X22]
	207 Move X0, X21
	208 Call 0x21E62E4, X0
	209 Compare X0, 0
	210 JumpIfEqual {966}
	211 Move X24, 0x676000
	212 Move X24, [X24+2880]
	213 Move W1, 2
	214 Move W2, 1
	215 Move X3, X31
	216 Move X22, X0
	217 Move W23, 1
	218 Call Scrollbar.SetDirection, X0, X1, X2
	219 Move X1, [X24]
	220 Move X0, X21
	221 Call 0x21E62E4, X0
	222 Move X25, 0x8FC000
	223 Move W8, [X25+1934]
	224 Move X21, X0
	225 Compare W8, 0
	226 JumpIfNotEqual {231}
	227 Move X0, 0x61E000
	228 Move X0, [X0+3848]
	229 Call 0x1C17CF4
	230 Move [X25+1934], W23
	231 Compare X21, 0
	232 JumpIfEqual {966}
	233 Move X23, 0x61E000
	234 Move X23, [X23+3848]
	235 Move X0, X21
	236 Move X1, X31
	237 Move X8, [X23]
	238 Move X8, [X8+184]
	239 Move S0, [X8+40]
	240 Move S1, [X8+44]
	241 Call RectTransform.set_anchorMin, X0, X1
	242 Move X24, 0x904000
	243 Move W8, [X24+2632]
	244 Compare W8, 0
	245 JumpIfNotEqual {251}
	246 Move X0, 0x61E000
	247 Move X0, [X0+3848]
	248 Call 0x1C17CF4
	249 Move W8, 1
	250 Move [X24+2632], W8
	251 Move X8, [X23]
	252 Move X0, X21
	253 Move X1, X31
	254 Move X8, [X8+184]
	255 Move S0, [X8+8]
	256 Move S1, [X8+12]
	257 Call RectTransform.set_anchorMax, X0, X1
	258 Move W8, [X24+2632]
	259 Compare W8, 0
	260 JumpIfNotEqual {266}
	261 Move X0, 0x61E000
	262 Move X0, [X0+3848]
	263 Call 0x1C17CF4
	264 Move W8, 1
	265 Move [X24+2632], W8
	266 Move X8, [X23]
	267 Move X0, X21
	268 Move X1, X31
	269 Move X8, [X8+184]
	270 Move S0, [X8+8]
	271 Move S1, [X8+12]
	272 Call RectTransform.set_pivot, X0, X1
	273 Move X0, X21
	274 Move X1, X31
	275 Call RectTransform.get_sizeDelta, X0
	276 Move S1, W31
	277 Move X0, X21
	278 Move X1, X31
	279 Call RectTransform.set_sizeDelta, X0, X1
	280 Compare X27, 0
	281 JumpIfEqual {966}
	282 Move X8, 0x67B000
	283 Move X8, [X8+2320]
	284 Move X0, X27
	285 Move X1, [X8]
	286 Call 0x21E61FC, X0
	287 Move X21, X0
	288 Call TMP_DefaultControls.SetDefaultTextValues, X0
	289 Move X23, [X31+40]
	290 Compare X21, 0
	291 JumpIfEqual {966}
	292 Move W1, 513
	293 Move X0, X21
	294 Move X2, X31
	295 Call TMP_Text.set_alignment, X0, X1
	296 Compare X23, 0
	297 JumpIfEqual {966}
	298 Move X25, 0x67B000
	299 Move X25, [X25+2272]
	300 Move X0, X23
	301 Move X1, [X25]
	302 Call 0x21E61FC, X0
	303 Compare X0, 0
	304 JumpIfEqual {966}
	305 Move X8, [X0]
	306 Move S3, 1
	307 Move X23, X0
	308 Move [X31], X27
	309 Move X9, [X8+680]
	310 Move X1, [X8+688]
	311 Move X8, -50278400
	312 Move V0, [X8+476]
	313 Move V1, V0
	314 Move V2, V0
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X28, 0
	317 JumpIfEqual {966}
	318 Move X1, [X25]
	319 Move X0, X28
	320 Move X24, X19
	321 Call 0x21E61FC, X0
	322 Compare X0, 0
	323 JumpIfEqual {966}
	324 Move X1, [X29+32]
	325 Move X2, X31
	326 Move X27, X0
	327 Move X19, X28
	328 Call Image.set_sprite, X0, X1
	329 Move X0, [X31+32]
	330 Compare X0, 0
	331 JumpIfEqual {966}
	332 Move X8, 0x67B000
	333 Move X8, [X8+2440]
	334 Move X1, [X8]
	335 Call 0x21E61FC, X0
	336 Compare X0, 0
	337 JumpIfEqual {966}
	338 Move X1, X23
	339 Move X2, X31
	340 Move X28, X0
	341 Call Selectable.set_targetGraphic, X0, X1
	342 Move W1, 1
	343 Move X0, X28
	344 Move X2, X31
	345 Move [X28+264], X27
	346 Call Toggle.set_isOn, X0, X1
	347 Compare X20, 0
	348 JumpIfEqual {966}
	349 Move X1, [X25]
	350 Move X0, X20
	351 Call 0x21E61FC, X0
	352 Compare X0, 0
	353 JumpIfEqual {966}
	354 Move X1, [X29]
	355 Move X27, 0x67B000
	356 Move X27, [X27+2424]
	357 Move X2, X31
	358 Move X23, X0
	359 Move X28, X19
	360 Call Image.set_sprite, X0, X1
	361 Move W1, 1
	362 Move X0, X23
	363 Move X2, X31
	364 Call Image.set_type, X0, X1
	365 Move X1, [X27]
	366 Move X0, X20
	367 Call 0x21E61FC, X0
	368 Move X23, X0
	369 Move X0, [X31+24]
	370 Compare X0, 0
	371 JumpIfEqual {966}
	372 Move X1, X31
	373 Move X19, X24
	374 Call GameObject.get_transform, X0
	375 Compare X23, 0
	376 JumpIfEqual {966}
	377 Move X27, 0x63D000
	378 Move X27, [X27+3184]
	379 Compare X0, 0
	380 JumpIfEqual {384}
	381 Move X1, [X27]
	382 Move X8, [X0]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move [X23+32], X0
	385 Compare X26, 0
	386 JumpIfEqual {966}
	387 Move X0, X26
	388 Move X1, X31
	389 Call GameObject.get_transform, X0
	390 Move X8, X0
	391 Compare X0, 0
	392 JumpIfEqual {396}
	393 Move X1, [X27]
	394 Move X9, [X8]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X27, 0x67B000
	397 Move X27, [X27+2416]
	398 Move X0, X23
	399 Move X1, X8
	400 Move X2, X31
	401 Call ScrollRect.set_viewport, X0, X1
	402 Move W8, 2
	403 Move X0, X23
	404 Move X1, X22
	405 Move X2, X31
	406 Move [X23+40], W31
	407 Move [X23+44], W8
	408 Call ScrollRect.set_verticalScrollbar, X0, X1
	409 Move W1, 2
	410 Move X0, X23
	411 Move X2, X31
	412 Call ScrollRect.set_verticalScrollbarVisibility, X0, X1
	413 Move S0, -3
	414 Move X0, X23
	415 Move X1, X31
	416 Call ScrollRect.set_verticalScrollbarSpacing, X0, V0
	417 Move X1, [X27]
	418 Move X0, X26
	419 Call 0x21E61FC, X0
	420 Compare X0, 0
	421 JumpIfEqual {966}
	422 Move W1, W31
	423 Move X2, X31
	424 Call Mask.set_showMaskGraphic, X0, X1
	425 Move X1, [X25]
	426 Move X0, X26
	427 Call 0x21E61FC, X0
	428 Move X23, [X31+16]
	429 Compare X0, 0
	430 JumpIfEqual {966}
	431 Move X1, [X29+48]
	432 Move X2, X31
	433 Move X22, X0
	434 Call Image.set_sprite, X0, X1
	435 Move W1, 1
	436 Move X0, X22
	437 Move X2, X31
	438 Call Image.set_type, X0, X1
	439 Compare X23, 0
	440 JumpIfEqual {966}
	441 Move X8, 0x67B000
	442 Move X8, [X8+2320]
	443 Move X0, X23
	444 Move X1, [X8]
	445 Call 0x21E61FC, X0
	446 Move X23, X0
	447 Call TMP_DefaultControls.SetDefaultTextValues, X0
	448 Move X22, [X31+8]
	449 Compare X23, 0
	450 JumpIfEqual {966}
	451 Move W1, 513
	452 Move X0, X23
	453 Move X2, X31
	454 Call TMP_Text.set_alignment, X0, X1
	455 Compare X22, 0
	456 JumpIfEqual {966}
	457 Move X1, [X25]
	458 Move X0, X22
	459 Call 0x21E61FC, X0
	460 Compare X0, 0
	461 JumpIfEqual {966}
	462 Move X1, [X29+40]
	463 Move X2, X31
	464 Call Image.set_sprite, X0, X1
	465 Compare X19, 0
	466 JumpIfEqual {966}
	467 Move X1, [X25]
	468 Move X0, X19
	469 Call 0x21E61FC, X0
	470 Compare X0, 0
	471 JumpIfEqual {966}
	472 Move X1, [X29]
	473 Move X22, 0x67B000
	474 Move X22, [X22+2432]
	475 Move X2, X31
	476 Move X27, X0
	477 Call Image.set_sprite, X0, X1
	478 Move X8, 0x67B000
	479 Move X8, [X8+2264]
	480 Move X9, [X27]
	481 Move X0, X27
	482 Move X8, [X8]
	483 Move X10, [X9+680]
	484 Move X1, [X9+688]
	485 Move X8, [X8+184]
	486 Move S0, [X8+24]
	487 Move S1, [X8+28]
	488 Move S2, [X8+32]
	489 Move S3, [X8+36]
	490 NotImplemented "Instruction BLR not yet implemented."
	491 Move W1, 1
	492 Move X0, X27
	493 Move X2, X31
	494 Call Image.set_type, X0, X1
	495 Move X1, [X22]
	496 Move X0, X19
	497 Call 0x21E61FC, X0
	498 Compare X0, 0
	499 JumpIfEqual {966}
	500 Move X25, 0x67A000
	501 Move X25, [X25+2480]
	502 Move X1, X27
	503 Move X2, X31
	504 Move X22, X0
	505 Call Selectable.set_targetGraphic, X0, X1
	506 Move X0, X22
	507 Call TMP_DefaultControls.SetDefaultColorTransitionValues, X0
	508 Move X24, 0x675000
	509 Move X24, [X24+2880]
	510 Move X0, X20
	511 Move X1, [X24]
	512 Call 0x21E62E4, X0
	513 Move [X22+256], X0
	514 Move X0, X22
	515 Call TMP_Dropdown.RefreshShownValue, X0
	516 Move X0, X22
	517 Move [X22+264], X23
	518 Call TMP_Dropdown.RefreshShownValue, X0
	519 Move X0, X22
	520 Move [X22+288], X21
	521 Call TMP_Dropdown.RefreshShownValue, X0
	522 Move X8, [X21]
	523 Move X1, [X25]
	524 Move X0, X21
	525 Move X9, [X8+1368]
	526 Move X2, [X8+1376]
	527 NotImplemented "Instruction BLR not yet implemented."
	528 Move X8, [X22+312]
	529 Compare X8, 0
	530 JumpIfEqual {966}
	531 Move X27, 0x67A000
	532 Move X27, [X27+2464]
	533 Move X21, [X8+16]
	534 Move X0, [X27]
	535 Call 0x1C17F10
	536 Move X1, X31
	537 Move X23, X0
	538 Call Object..ctor, X0
	539 Compare X23, 0
	540 JumpIfEqual {966}
	541 Move X8, [X25]
	542 Move [X23+16], X8
	543 Compare X21, 0
	544 JumpIfEqual {966}
	545 Move X25, 0x67A000
	546 Move X25, [X25+2456]
	547 Move W10, [X21+28]
	548 Move X8, [X21+16]
	549 Move X9, [X25]
	550 Add W10, W10, 1
	551 Move [X21+28], W10
	552 Compare X8, 0
	553 JumpIfEqual {966}
	554 NotImplemented "Instruction LDRSW not yet implemented."
	555 Move W11, [X8+24]
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Add W9, W10, 1
	558 Add X8, X8, X10
	559 Move [X21+24], W9
	560 Move [X8+32], X23
	561 Move X8, [X9+32]
	562 Move X0, X21
	563 Move X1, X23
	564 Move X8, [X8+192]
	565 Move X2, [X8+112]
	566 Call List`1<Object>.AddWithResize, X0, X1
	567 Move X8, [X22+312]
	568 Compare X8, 0
	569 JumpIfEqual {966}
	570 Move X0, [X27]
	571 Move X21, [X8+16]
	572 Call 0x1C17F10
	573 Move X1, X31
	574 Move X23, X0
	575 Call Object..ctor, X0
	576 Compare X23, 0
	577 JumpIfEqual {966}
	578 Move X8, 0x67A000
	579 Move X8, [X8+2520]
	580 Move X8, [X8]
	581 Move [X23+16], X8
	582 Compare X21, 0
	583 JumpIfEqual {966}
	584 Move W10, [X21+28]
	585 Move X8, [X21+16]
	586 Move X9, [X25]
	587 Add W10, W10, 1
	588 Move [X21+28], W10
	589 Compare X8, 0
	590 JumpIfEqual {966}
	591 NotImplemented "Instruction LDRSW not yet implemented."
	592 Move W11, [X8+24]
	593 NotImplemented "Instruction CMP not yet implemented."
	594 Add W9, W10, 1
	595 Add X8, X8, X10
	596 Move [X21+24], W9
	597 Move [X8+32], X23
	598 Move X8, [X9+32]
	599 Move X0, X21
	600 Move X1, X23
	601 Move X8, [X8+192]
	602 Move X2, [X8+112]
	603 Call List`1<Object>.AddWithResize, X0, X1
	604 Move X8, [X22+312]
	605 Compare X8, 0
	606 JumpIfEqual {966}
	607 Move X0, [X27]
	608 Move X21, [X8+16]
	609 Call 0x1C17F10
	610 Move X1, X31
	611 Move X23, X0
	612 Call Object..ctor, X0
	613 Compare X23, 0
	614 JumpIfEqual {966}
	615 Move X8, 0x67A000
	616 Move X8, [X8+2488]
	617 Move X27, [X31]
	618 Move X8, [X8]
	619 Move [X23+16], X8
	620 Compare X21, 0
	621 JumpIfEqual {966}
	622 Move W10, [X21+28]
	623 Move X8, [X21+16]
	624 Move X9, [X25]
	625 Add W10, W10, 1
	626 Move [X21+28], W10
	627 Compare X8, 0
	628 JumpIfEqual {966}
	629 NotImplemented "Instruction LDRSW not yet implemented."
	630 Move W11, [X8+24]
	631 Move X25, 0x903000
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Add W9, W10, 1
	634 Add X8, X8, X10
	635 Move [X21+24], W9
	636 Move [X8+32], X23
	637 Move X8, [X9+32]
	638 Move X0, X21
	639 Move X1, X23
	640 Move X8, [X8+192]
	641 Move X2, [X8+112]
	642 Call List`1<Object>.AddWithResize, X0, X1
	643 Move X0, X22
	644 Call TMP_Dropdown.RefreshShownValue, X0
	645 Move X1, [X24]
	646 Move X0, [X31+16]
	647 Call 0x21E62E4, X0
	648 Move X22, 0x8FB000
	649 Move X23, 0x61D000
	650 Move W8, [X22+1935]
	651 Move X23, [X23+3848]
	652 Move X21, X0
	653 Compare W8, 0
	654 JumpIfNotEqual {660}
	655 Move X0, 0x61D000
	656 Move X0, [X0+3848]
	657 Call 0x1C17CF4
	658 Move W8, 1
	659 Move [X22+1935], W8
	660 Compare X21, 0
	661 JumpIfEqual {966}
	662 Move X8, [X23]
	663 Move X0, X21
	664 Move X1, X31
	665 Move X8, [X8+184]
	666 Move S0, [X8]
	667 Move S1, [X8+4]
	668 Call RectTransform.set_anchorMin, X0, X1
	669 Move W8, [X25+2632]
	670 Compare W8, 0
	671 JumpIfNotEqual {677}
	672 Move X0, 0x61D000
	673 Move X0, [X0+3848]
	674 Call 0x1C17CF4
	675 Move W8, 1
	676 Move [X25+2632], W8
	677 Move X8, [X23]
	678 Move X0, X21
	679 Move X1, X31
	680 Move X8, [X8+184]
	681 Move S0, [X8+8]
	682 Move S1, [X8+12]
	683 Call RectTransform.set_anchorMax, X0, X1
	684 Move S0, 10
	685 Move S1, 6
	686 Move X0, X21
	687 Move X1, X31
	688 Call RectTransform.set_offsetMin, X0, X1
	689 Move S0, -25
	690 Move S1, -7
	691 Move X0, X21
	692 Move X1, X31
	693 Call RectTransform.set_offsetMax, X0, X1
	694 Move X1, [X24]
	695 Move X0, [X31+8]
	696 Call 0x21E62E4, X0
	697 Compare X0, 0
	698 JumpIfEqual {966}
	699 Move S0, 1
	700 Move S1, 0.5
	701 Move X1, X31
	702 Move X21, X0
	703 Call RectTransform.set_anchorMin, X0, X1
	704 Move S0, 1
	705 Move S1, 0.5
	706 Move X0, X21
	707 Move X1, X31
	708 Call RectTransform.set_anchorMax, X0, X1
	709 Move S0, 20
	710 Move S1, 20
	711 Move X0, X21
	712 Move X1, X31
	713 Call RectTransform.set_sizeDelta, X0, X1
	714 Move S0, -15
	715 Move S1, W31
	716 Move X0, X21
	717 Move X1, X31
	718 Call RectTransform.set_anchoredPosition, X0, X1
	719 Move X1, [X24]
	720 Move X0, X20
	721 Call 0x21E62E4, X0
	722 Compare X0, 0
	723 JumpIfEqual {966}
	724 Move S0, W31
	725 Move S1, W31
	726 Move X1, X31
	727 Move X21, X0
	728 Call RectTransform.set_anchorMin, X0, X1
	729 Move S0, 1
	730 Move S1, W31
	731 Move X0, X21
	732 Move X1, X31
	733 Call RectTransform.set_anchorMax, X0, X1
	734 Move S0, 0.5
	735 Move S1, 1
	736 Move X0, X21
	737 Move X1, X31
	738 Call RectTransform.set_pivot, X0, X1
	739 Move S0, W31
	740 Move S1, 2
	741 Move X0, X21
	742 Move X1, X31
	743 Call RectTransform.set_anchoredPosition, X0, X1
	744 Move W8, 0x43160000
	745 Move S0, W31
	746 Move S1, W8
	747 Move X0, X21
	748 Move X1, X31
	749 Call RectTransform.set_sizeDelta, X0, X1
	750 Move X1, [X24]
	751 Move X0, X26
	752 Call 0x21E62E4, X0
	753 Compare X0, 0
	754 JumpIfEqual {966}
	755 Move S0, W31
	756 Move S1, W31
	757 Move X1, X31
	758 Move X21, X0
	759 Call RectTransform.set_anchorMin, X0, X1
	760 Move S0, 1
	761 Move S1, 1
	762 Move X0, X21
	763 Move X1, X31
	764 Call RectTransform.set_anchorMax, X0, X1
	765 Move S0, -18
	766 Move S1, W31
	767 Move X0, X21
	768 Move X1, X31
	769 Call RectTransform.set_sizeDelta, X0, X1
	770 Move S0, W31
	771 Move S1, 1
	772 Move X0, X21
	773 Move X1, X31
	774 Call RectTransform.set_pivot, X0, X1
	775 Move X1, [X24]
	776 Move X0, [X31+24]
	777 Call 0x21E62E4, X0
	778 Compare X0, 0
	779 JumpIfEqual {966}
	780 Move S0, W31
	781 Move S1, 1
	782 Move X1, X31
	783 Move X21, X0
	784 Call RectTransform.set_anchorMin, X0, X1
	785 Move S0, 1
	786 Move S1, 1
	787 Move X0, X21
	788 Move X1, X31
	789 Call RectTransform.set_anchorMax, X0, X1
	790 Move S0, 0.5
	791 Move S1, 1
	792 Move X0, X21
	793 Move X1, X31
	794 Call RectTransform.set_pivot, X0, X1
	795 Move S0, W31
	796 Move S1, W31
	797 Move X0, X21
	798 Move X1, X31
	799 Call RectTransform.set_anchoredPosition, X0, X1
	800 Move S0, W31
	801 Move S1, 28
	802 Move X0, X21
	803 Move X1, X31
	804 Call RectTransform.set_sizeDelta, X0, X1
	805 Move X1, [X24]
	806 Move X0, [X31+32]
	807 Call 0x21E62E4, X0
	808 Compare X0, 0
	809 JumpIfEqual {966}
	810 Move S0, W31
	811 Move S1, 0.5
	812 Move X1, X31
	813 Move X21, X0
	814 Call RectTransform.set_anchorMin, X0, X1
	815 Move S0, 1
	816 Move S1, 0.5
	817 Move X0, X21
	818 Move X1, X31
	819 Call RectTransform.set_anchorMax, X0, X1
	820 Move S0, W31
	821 Move S1, 20
	822 Move X0, X21
	823 Move X1, X31
	824 Call RectTransform.set_sizeDelta, X0, X1
	825 Move X1, [X24]
	826 Move X0, [X31+40]
	827 Call 0x21E62E4, X0
	828 Move W8, [X22+1935]
	829 Move X21, X0
	830 Compare W8, 0
	831 JumpIfNotEqual {837}
	832 Move X0, 0x61D000
	833 Move X0, [X0+3848]
	834 Call 0x1C17CF4
	835 Move W8, 1
	836 Move [X22+1935], W8
	837 Compare X21, 0
	838 JumpIfEqual {966}
	839 Move X8, [X23]
	840 Move X0, X21
	841 Move X1, X31
	842 Move X8, [X8+184]
	843 Move S0, [X8]
	844 Move S1, [X8+4]
	845 Call RectTransform.set_anchorMin, X0, X1
	846 Move W8, [X25+2632]
	847 Compare W8, 0
	848 JumpIfNotEqual {854}
	849 Move X0, 0x61D000
	850 Move X0, [X0+3848]
	851 Call 0x1C17CF4
	852 Move W8, 1
	853 Move [X25+2632], W8
	854 Move X8, [X23]
	855 Move X0, X21
	856 Move X1, X31
	857 Move X8, [X8+184]
	858 Move S0, [X8+8]
	859 Move S1, [X8+12]
	860 Call RectTransform.set_anchorMax, X0, X1
	861 Move W8, [X22+1935]
	862 Compare W8, 0
	863 JumpIfNotEqual {869}
	864 Move X0, 0x61D000
	865 Move X0, [X0+3848]
	866 Call 0x1C17CF4
	867 Move W8, 1
	868 Move [X22+1935], W8
	869 Move X8, [X23]
	870 Move X0, X21
	871 Move X1, X31
	872 Move X8, [X8+184]
	873 Move S0, [X8]
	874 Move S1, [X8+4]
	875 Call RectTransform.set_sizeDelta, X0, X1
	876 Move X1, [X24]
	877 Move X0, X28
	878 Call 0x21E62E4, X0
	879 Compare X0, 0
	880 JumpIfEqual {966}
	881 Move S0, W31
	882 Move S1, 0.5
	883 Move X1, X31
	884 Move X21, X0
	885 Call RectTransform.set_anchorMin, X0, X1
	886 Move S0, W31
	887 Move S1, 0.5
	888 Move X0, X21
	889 Move X1, X31
	890 Call RectTransform.set_anchorMax, X0, X1
	891 Move S0, 20
	892 Move S1, 20
	893 Move X0, X21
	894 Move X1, X31
	895 Call RectTransform.set_sizeDelta, X0, X1
	896 Move S0, 10
	897 Move S1, W31
	898 Move X0, X21
	899 Move X1, X31
	900 Call RectTransform.set_anchoredPosition, X0, X1
	901 Move X1, [X24]
	902 Move X0, X27
	903 Call 0x21E62E4, X0
	904 Move W8, [X22+1935]
	905 Move X21, X0
	906 Compare W8, 0
	907 JumpIfNotEqual {913}
	908 Move X0, 0x61D000
	909 Move X0, [X0+3848]
	910 Call 0x1C17CF4
	911 Move W8, 1
	912 Move [X22+1935], W8
	913 Compare X21, 0
	914 JumpIfEqual {966}
	915 Move X8, [X23]
	916 Move X0, X21
	917 Move X1, X31
	918 Move X8, [X8+184]
	919 Move S0, [X8]
	920 Move S1, [X8+4]
	921 Call RectTransform.set_anchorMin, X0, X1
	922 Move W8, [X25+2632]
	923 Compare W8, 0
	924 JumpIfNotEqual {930}
	925 Move X0, 0x61D000
	926 Move X0, [X0+3848]
	927 Call 0x1C17CF4
	928 Move W8, 1
	929 Move [X25+2632], W8
	930 Move X8, [X23]
	931 Move X0, X21
	932 Move X1, X31
	933 Move X8, [X8+184]
	934 Move S0, [X8+8]
	935 Move S1, [X8+12]
	936 Call RectTransform.set_anchorMax, X0, X1
	937 Move S0, 20
	938 Move S1, 1
	939 Move X0, X21
	940 Move X1, X31
	941 Call RectTransform.set_offsetMin, X0, X1
	942 Move S0, -10
	943 Move S1, -2
	944 Move X0, X21
	945 Move X1, X31
	946 Call RectTransform.set_offsetMax, X0, X1
	947 Move X0, X20
	948 Move W1, W31
	949 Move X2, X31
	950 Call GameObject.SetActive, X0, X1
	951 Move X0, X19
	952 Move X20, [X31+192]
	953 Move X19, [X31+200]
	954 Move X22, [X31+176]
	955 Move X21, [X31+184]
	956 Move X24, [X31+160]
	957 Move X23, [X31+168]
	958 Move X26, [X31+144]
	959 Move X25, [X31+152]
	960 Move X28, [X31+128]
	961 Move X27, [X31+136]
	962 Move X29, [X31+112]
	963 Move X30, [X31+120]
	964 Add X31, X31, 208
	965 Return X0
	966 Call 0x1C17F20
	967 Call 0x1C181E0
	968 Move X0, X8
	969 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x03ADF960 MOV X0, X21
	0x03ADF964 MOV X1, X31
	0x03ADF968 MOV X2, X31
	0x03ADF96C BL 0x3C354F8
	0x03ADF970 TBNZ X0, 0x0, 0x3ADF988
	0x03ADF974 MOV X0, X22
	0x03ADF978 MOV X1, X31
	0x03ADF97C BL 0x3C3F49C
	0x03ADF980 MOV X22, X0
	0x03ADF984 B 0x3ADF914
	0x03ADF988 ADRP X25, 0x679000
	0x03ADF98C LDR X25, [X25 + 0xA10]
	0x03ADF990 LDR X0, [X25]
	0x03ADF994 LDR W8, [X0 + 0xE0]
	0x03ADF998 CBNZ W8, 0x3ADF9A0
	0x03ADF99C BL 0x1C16DFC
	0x03ADF9A0 ADRP X8, 0x679000
	0x03ADF9A4 LDR X8, [X8 + 0xAF0]
	0x03ADF9A8 MOV X0, X20
	0x03ADF9AC LDR X1, [X8]
	0x03ADF9B0 BL 0x2298CC8
	0x03ADF9B4 CBZ X0, 0x3ADFC50
	0x03ADF9B8 MOVZ W1, 0x1
	0x03ADF9BC MOV X2, X31
	0x03ADF9C0 MOV X22, X0
	0x03ADF9C4 BL 0x3E248E0
	0x03ADF9C8 MOVZ W1, 0x7530
	0x03ADF9CC MOV X0, X22
	0x03ADF9D0 MOV X2, X31
	0x03ADF9D4 BL 0x3E24960
	0x03ADF9D8 LDR X0, [X24]
	0x03ADF9DC LDR W8, [X0 + 0xE0]
	0x03ADF9E0 CBNZ W8, 0x3ADF9E8
	0x03ADF9E4 BL 0x1C16DFC
	0x03ADF9E8 MOV X0, X21
	0x03ADF9EC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x904000
	005 Move X19, 0x67A000
	006 Move W8, [X20+1388]
	007 Move X19, [X19+2264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x67A000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1388], W8
	017 Move X8, [X19]
	018 Move W9, 0x42C80000
	019 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	020 Move X9, -50270208
	021 Move X8, [X8+184]
	022 Move X10, -50270208
	023 Move [X8], D0
	024 Move X8, [X19]
	025 Move V0, [X9+1352]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X9, [X8+184]
	029 Move [X9+8], D0
	030 Move V0, [X10+1176]
	031 Move X9, [X8+184]
	032 Move X10, -50274304
	033 Move [X9+16], D0
	034 Move X9, [X8+184]
	035 Move V0, 0
	036 Move [X9+24], V0
	037 Move X8, [X8+184]
	038 Move V0, [X10+145]
	039 Move [X8+40], V0
	040 Move X30, [X31+32]
	041 Return 

