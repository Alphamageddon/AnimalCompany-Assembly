Type: Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs

Method: Unity.XR.CoreUtils.XROrigin get_Origin()

Disassembly:
	0x03B22AF0 BL 0x1C16F20
	0x03B22AF4 BL 0x1C16F20

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: UnityEngine.Transform get_TrackablesParent()

Disassembly:
	0x03B22AF8 B 0x3B22B08
	0x03B22AFC B 0x3B22B08

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void .ctor(Unity.XR.CoreUtils.XROrigin origin, UnityEngine.Transform trackablesParent)

Disassembly:
	0x03B22B00 B 0x3B22B08
	0x03B22B04 B 0x3B22B08
	0x03B22B08 MOV X20, X0
	0x03B22B0C CMP W1, 0x1
	0x03B22B10 B.NE 0x3B22B3C
	0x03B22B14 MOV X0, X20
	0x03B22B18 BL 0x3EB1AD0
	0x03B22B1C LDR X21, [X0]
	0x03B22B20 BL 0x3EB1AE0
	0x03B22B24 LDR X1, [X22]
	0x03B22B28 ADD X0, X31, 0x20
	0x03B22B2C BL 0x2BC434C
	0x03B22B30 CBZ X21, 0x3B22AA8
	0x03B22B34 MOV X0, X21
	0x03B22B38 BL 0x1C16F18
	0x03B22B3C MOV X21, X31
	0x03B22B40 B 0x3B22B48
	0x03B22B44 MOV X20, X0
	0x03B22B48 LDR X1, [X22]
	0x03B22B4C ADD X0, X31, 0x20
	0x03B22B50 BL 0x2BC434C
	0x03B22B54 CBNZ X21, 0x3B22B60
	0x03B22B58 MOV X0, X20
	0x03B22B5C BL 0x1D2C690
	0x03B22B60 MOV X0, X21
	0x03B22B64 BL 0x1C16F18
	0x03B22B68 BL 0x1990590
	0x03B22B6C STP D13, D12, [X31 - 0x60]!
	0x03B22B70 STP D11, D10, [X31 + 0x10]
	0x03B22B74 STP D9, D8, [X31 + 0x20]
	0x03B22B78 STR X30, [X31 + 0x30]
	0x03B22B7C STP X22, X21, [X31 + 0x40]
	0x03B22B80 STP X20, X19, [X31 + 0x50]
	0x03B22B84 ADRP X21, 0x8C0000
	0x03B22B88 LDRB W9, [X21 + 0x743]
	0x03B22B8C MOV X20, X0
	0x03B22B90 MOV X19, X8
	0x03B22B94 TBNZ X9, 0x0, 0x3B22BB8
	0x03B22B98 ADRP X0, 0x5D5000
	0x03B22B9C LDR X0, [X0 + 0x978]
	0x03B22BA0 BL 0x1C16CF4
	0x03B22BA4 ADRP X0, 0x5D5000
	0x03B22BA8 LDR X0, [X0 + 0x980]
	0x03B22BAC BL 0x1C16CF4
	0x03B22BB0 MOVZ W8, 0x1
	0x03B22BB4 STRB W8, [X21 + 0x743]
	0x03B22BB8 CBZ X20, 0x3B22CC4
	0x03B22BBC LDR W8, [X20 + 0x18]
	0x03B22BC0 CMP W8, 0x1
	0x03B22BC4 B.LT 0x3B22C5C
	0x03B22BC8 ADRP X22, 0x5D5000
	0x03B22BCC LDR X22, [X22 + 0x980]
	0x03B22BD0 MOV X0, X20
	0x03B22BD4 MOV W1, W31
	0x03B22BD8 LDR X2, [X22]
	0x03B22BDC BL 0x30CBE84
	0x03B22BE0 LDR W8, [X20 + 0x18]
	0x03B22BE4 MOV V9.16B, V0.16B
	0x03B22BE8 MOV V8.16B, V1.16B
	0x03B22BEC MOV V10.16B, V2.16B
	0x03B22BF0 CMP W8, 0x1
	0x03B22BF4 B.LE 0x3B22C68
	0x03B22BF8 MOVZ W21, 0x1
	0x03B22BFC MOV V13.16B, V9.16B
	0x03B22C00 MOV V12.16B, V8.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x8C1000
	008 Move X22, 0x5D2000
	009 Move W8, [X23+1852]
	010 Move X22, [X22+1432]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x5D2000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+1852], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {58}
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {65}
	049 Move [X20], X21
	050 Move [X20+8], X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Return 
	058 Move X0, 0x5D7000
	059 Move X0, [X0+1320]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0x606000
	064 Move X0, [X0+1664]
	065 Move X0, 0x5D7000
	066 Move X0, [X0+1320]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0x638000
	071 Move X0, [X0+2952]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Move X2, X31
	076 Call ArgumentNullException..ctor, X0, X1
	077 Move X0, 0x638000
	078 Move X0, [X0+2960]
	079 Call 0x1C17D08
	080 Move X1, X0
	081 Move X0, X19
	082 Call 0x1C17DEC

Method: System.Boolean Equals(Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs other)

Disassembly:
	0x03B22C04 MOV V11.16B, V10.16B
	0x03B22C08 LDR X2, [X22]
	0x03B22C0C MOV X0, X20
	0x03B22C10 MOV W1, W21
	0x03B22C14 BL 0x30CBE84
	0x03B22C18 FCMP S0, S9
	0x03B22C1C FCSEL S9, S0, S9, MI
	0x03B22C20 FCMP S1, S8
	0x03B22C24 LDR W8, [X20 + 0x18]
	0x03B22C28 FCSEL S8, S1, S8, MI
	0x03B22C2C FCMP S2, S10
	0x03B22C30 FCSEL S10, S2, S10, MI
	0x03B22C34 FCMP S0, S13
	0x03B22C38 FCSEL S13, S0, S13, GT
	0x03B22C3C FCMP S1, S12
	0x03B22C40 ADD W21, W21, 0x1
	0x03B22C44 FCSEL S12, S1, S12, GT
	0x03B22C48 FCMP S2, S11
	0x03B22C4C FCSEL S11, S2, S11, GT
	0x03B22C50 CMP W21, W8
	0x03B22C54 B.LT 0x3B22C08
	0x03B22C58 B 0x3B22C74
	0x03B22C5C STP X31, X31, [X19]
	0x03B22C60 STR X31, [X19 + 0x10]
	0x03B22C64 B 0x3B22CA8
	0x03B22C68 MOV V11.16B, V10.16B
	0x03B22C6C MOV V12.16B, V8.16B
	0x03B22C70 MOV V13.16B, V9.16B
	0x03B22C74 FSUB S0, S13, S9
	0x03B22C78 FSUB S1, S12, S8
	0x03B22C7C FSUB S2, S11, S10
	0x03B22C80 FMOV S3, 0.5
	0x03B22C84 FMUL S0, S0, S3
	0x03B22C88 FMUL S1, S1, S3
	0x03B22C8C FMUL S2, S2, S3
	0x03B22C90 FADD S3, S9, S0
	0x03B22C94 FADD S4, S8, S1
	0x03B22C98 FADD S5, S10, S2
	0x03B22C9C STP S3, S4, [X19]
	0x03B22CA0 STP S5, S0, [X19 + 0x8]
	0x03B22CA4 STP S1, S2, [X19 + 0x10]
	0x03B22CA8 LDP X20, X19, [X31 + 0x50]
	0x03B22CAC LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x8C1000
	008 Move X23, 0x5D2000
	009 Move W8, [X22+1853]
	010 Move X23, [X23+1432]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x5D2000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1853], W8
	023 Move X0, [X23]
	024 Move X22, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X21
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {54}
	037 Move X0, [X23]
	038 Move X20, [X20+8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X2, X31
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call Object.op_Equality, X0, X1
	053 Return X0
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move W0, W31
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03B22CB0 LDR X30, [X31 + 0x30]
	0x03B22CB4 LDP D9, D8, [X31 + 0x20]
	0x03B22CB8 LDP D11, D10, [X31 + 0x10]
	0x03B22CBC LDP D13, D12, [X31], #0x60
	0x03B22CC0 RET
	0x03B22CC4 BL 0x1C16F20
	0x03B22CC8 STR X30, [X31 - 0x40]!
	0x03B22CCC STP X24, X23, [X31 + 0x10]
	0x03B22CD0 STP X22, X21, [X31 + 0x20]
	0x03B22CD4 STP X20, X19, [X31 + 0x30]
	0x03B22CD8 ADRP X23, 0x8C0000
	0x03B22CDC ADRP X24, 0x637000
	0x03B22CE0 ADRP X19, 0x637000
	0x03B22CE4 ADRP X20, 0x637000
	0x03B22CE8 ADRP X22, 0x5D8000
	0x03B22CEC ADRP X21, 0x5D8000
	0x03B22CF0 LDRB W8, [X23 + 0x744]
	0x03B22CF4 LDR X24, [X24 + 0xBD8]
	0x03B22CF8 LDR X19, [X19 + 0xBE0]
	0x03B22CFC LDR X20, [X20 + 0xB98]
	0x03B22D00 LDR X22, [X22 + 0x930]
	0x03B22D04 LDR X21, [X21 + 0x938]
	0x03B22D08 TBNZ X8, 0x0, 0x3B22D50
	0x03B22D0C ADRP X0, 0x637000
	0x03B22D10 LDR X0, [X0 + 0xB98]
	0x03B22D14 BL 0x1C16CF4
	0x03B22D18 ADRP X0, 0x637000
	0x03B22D1C LDR X0, [X0 + 0xBE0]
	0x03B22D20 BL 0x1C16CF4
	0x03B22D24 ADRP X0, 0x5D8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8C1000
	006 Move W8, [X21+1854]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x5FD000
	014 Move X0, [X0+1112]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1854], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x5FD000
	021 Move X8, [X8+1112]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X1, [X0]
	034 Move X2, [X0+8]
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call ARTrackablesParentTransformChangedEventArgs.Equals, X0, X1
	041 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03B22D28 LDR X0, [X0 + 0x938]
	0x03B22D2C BL 0x1C16CF4
	0x03B22D30 ADRP X0, 0x5D8000
	0x03B22D34 LDR X0, [X0 + 0x930]
	0x03B22D38 BL 0x1C16CF4
	0x03B22D3C ADRP X0, 0x637000
	0x03B22D40 LDR X0, [X0 + 0xBD8]
	0x03B22D44 BL 0x1C16CF4
	0x03B22D48 MOVZ W8, 0x1
	0x03B22D4C STRB W8, [X23 + 0x744]
	0x03B22D50 LDR X0, [X24]
	0x03B22D54 BL 0x1C16F10
	0x03B22D58 LDR X1, [X19]
	0x03B22D5C MOV X19, X0
	0x03B22D60 BL 0x301B7C4
	0x03B22D64 LDR X8, [X20]
	0x03B22D68 LDR X8, [X8 + 0xB8]
	0x03B22D6C STR X19, [X8]
	0x03B22D70 LDR X0, [X22]
	0x03B22D74 BL 0x1C16F10
	0x03B22D78 LDR X1, [X21]
	0x03B22D7C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0]
	006 Compare X0, 0
	007 JumpIfEqual {15}
	008 Move X8, [X0]
	009 Move X9, [X8+344]
	010 Move X1, [X8+352]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move W8, 0xA2DB
	013 NotImplemented "Instruction MOVK not yet implemented."
	014 Multiply W20, W0, W8
	015 Move W20, W31
	016 Move X0, [X19+8]
	017 Compare X0, 0
	018 JumpIfEqual {23}
	019 Move X8, [X0]
	020 Move X9, [X8+344]
	021 Move X1, [X8+352]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Add W0, W0, W20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Boolean op_Equality(Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs lhs, Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs rhs)

Disassembly:
	0x03B22DA4 LDR V0, [X0]
	0x03B22DA8 LDR V1, [X0 + 0xC]
	0x03B22DAC LDR V2, [X1]
	0x03B22DB0 LDR V3, [X1 + 0xC]
	0x03B22DB4 FADD S4, S0, S1
	0x03B22DB8 FADD S5, S2, S3
	0x03B22DBC FCMP S4, S5
	0x03B22DC0 B.GE 0x3B22DCC
	0x03B22DC4 MOV W0, W31
	0x03B22DC8 RET
	0x03B22DCC FSUB S2, S2, S3

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call ARTrackablesParentTransformChangedEventArgs.Equals, X0, X1
	009 Move X30, [X31+16]
	010 And W0, W0, 1
	011 Add X31, X31, 32
	012 Return X0

Method: System.Boolean op_Inequality(Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs lhs, Unity.XR.CoreUtils.ARTrackablesParentTransformChangedEventArgs rhs)

Disassembly:
	0x03B22DD0 FSUB S0, S0, S1
	0x03B22DD4 FCMP S0, S2
	0x03B22DD8 B.HI 0x3B22DC4
	0x03B22DDC LDR V0, [X0 + 0x4]
	0x03B22DE0 LDR V2, [X1 + 0x4]
	0x03B22DE4 LDR V3, [X1 + 0x10]
	0x03B22DE8 LDR V1, [X0 + 0x10]
	0x03B22DEC FADD S4, S2, S3
	0x03B22DF0 FADD S5, S0, S1
	0x03B22DF4 FCMP S5, S4
	0x03B22DF8 B.LT 0x3B22DC4
	0x03B22DFC LDR V4, [X0 + 0x8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call ARTrackablesParentTransformChangedEventArgs.Equals, X0, X1
	009 Move X30, [X31+16]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 32
	013 Return X0

