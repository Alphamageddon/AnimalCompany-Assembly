Type: Unity.XR.CoreUtils.CollectionPool`2

Method: TCollection GetCollection()

Disassembly:
	0x028F91C4 BL 0x1C5C684
	0x028F91C8 LDR X8, [X0 + 0xC0]
	0x028F91CC LDR X0, [X8 + 0x50]
	0x028F91D0 LDRB W8, [X0 + 0x135]
	0x028F91D4 TBNZ X8, 0x0, 0x28F91DC
	0x028F91D8 BL 0x1C5C684
	0x028F91DC LDR W8, [X0 + 0xE0]
	0x028F91E0 CBNZ W8, 0x28F91E8
	0x028F91E4 BL 0x1C16DFC
	0x028F91E8 LDR X0, [X19 + 0x20]
	0x028F91EC LDRB W8, [X0 + 0x135]
	0x028F91F0 TBNZ X8, 0x0, 0x28F91F8
	0x028F91F4 BL 0x1C5C684
	0x028F91F8 LDR X8, [X0 + 0xC0]
	0x028F91FC LDR X0, [X8 + 0x50]
	0x028F9200 LDRB W8, [X0 + 0x135]
	0x028F9204 TBNZ X8, 0x0, 0x28F920C
	0x028F9208 BL 0x1C5C684
	0x028F920C LDR X8, [X19 + 0x20]
	0x028F9210 LDR X9, [X0 + 0xB8]
	0x028F9214 LDRB W10, [X8 + 0x135]
	0x028F9218 LDR X21, [X9]
	0x028F921C TBNZ X10, 0x0, 0x28F922C
	0x028F9220 MOV X0, X8
	0x028F9224 BL 0x1C5C684
	0x028F9228 MOV X8, X0
	0x028F922C LDR X8, [X8 + 0xC0]
	0x028F9230 LDR X0, [X8 + 0x60]
	0x028F9234 LDRB W8, [X0 + 0x135]
	0x028F9238 TBNZ X8, 0x0, 0x28F9240
	0x028F923C BL 0x1C5C684
	0x028F9240 BL 0x1C16F10
	0x028F9244 LDR X8, [X19 + 0x20]
	0x028F9248 MOV X20, X0
	0x028F924C ADD X9, X8, 0x135
	0x028F9250 LDRH W9, [X9]
	0x028F9254 TBNZ X9, 0x0, 0x28F9270
	0x028F9258 MOV X0, X8
	0x028F925C BL 0x1C5C684
	0x028F9260 LDR X8, [X19 + 0x20]
	0x028F9264 ADD X9, X8, 0x135
	0x028F9268 LDRH W9, [X9]
	0x028F926C B 0x28F9274
	0x028F9270 MOV X0, X8
	0x028F9274 LDR X10, [X0 + 0xC0]
	0x028F9278 LDR X22, [X10 + 0x58]
	0x028F927C TBNZ X9, 0x0, 0x28F928C
	0x028F9280 MOV X0, X8
	0x028F9284 BL 0x1C5C684
	0x028F9288 MOV X8, X0
	0x028F928C LDR X8, [X8 + 0xC0]
	0x028F9290 MOV X0, X20
	0x028F9294 MOV X1, X21
	0x028F9298 MOV X2, X22
	0x028F929C LDR X3, [X8 + 0x68]
	0x028F92A0 BL 0x2D27AA8
	0x028F92A4 LDR X0, [X19 + 0x20]
	0x028F92A8 LDRB W8, [X0 + 0x135]
	0x028F92AC TBNZ X8, 0x0, 0x28F92B4
	0x028F92B0 BL 0x1C5C684
	0x028F92B4 LDR X8, [X0 + 0xC0]
	0x028F92B8 LDR X0, [X8 + 0x50]
	0x028F92BC LDRB W8, [X0 + 0x135]
	0x028F92C0 TBNZ X8, 0x0, 0x28F92C8
	0x028F92C4 BL 0x1C5C684
	0x028F92C8 LDR X8, [X19 + 0x20]
	0x028F92CC LDR X9, [X0 + 0xB8]
	0x028F92D0 LDRB W10, [X8 + 0x135]
	0x028F92D4 LDR X22, [X9]
	0x028F92D8 TBNZ X10, 0x0, 0x28F92E8
	0x028F92DC MOV X0, X8
	0x028F92E0 BL 0x1C5C684
	0x028F92E4 MOV X8, X0
	0x028F92E8 LDR X8, [X8 + 0xC0]
	0x028F92EC LDR X0, [X8 + 0x78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {113}
	043 Move X0, [X19+32]
	044 Add X8, X0, 309
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {54}
	050 Call 0x1C5D684
	051 Move X0, [X19+32]
	052 Add X8, X0, 309
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move W20, [X20+32]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move X8, [X0+192]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X8+16]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, [X19+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, [X8+16]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X0+184]
	089 Move X20, [X8]
	090 Compare X20, 0
	091 JumpIfEqual {113}
	092 Move X0, [X19+32]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X8, [X0+192]
	100 Move X0, X20
	101 Move X20, [X31+16]
	102 Move X19, [X31+24]
	103 Move X1, [X8+48]
	104 Move X30, [X31+32]
	105 Call Queue`1<Object>.Dequeue, X0
	106 Return X0
	107 Move X0, [X8+32]
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X30, [X31+32]
	111 Call Activator.CreateInstance
	112 Return X0
	113 Call 0x1C17F20

Method: System.Void RecycleCollection(TCollection collection)

Disassembly:
	0x028F92F0 LDRB W8, [X0 + 0x135]
	0x028F92F4 TBNZ X8, 0x0, 0x28F92FC
	0x028F92F8 BL 0x1C5C684
	0x028F92FC BL 0x1C16F10
	0x028F9300 LDR X8, [X19 + 0x20]
	0x028F9304 MOV X21, X0
	0x028F9308 ADD X9, X8, 0x135
	0x028F930C LDRH W9, [X9]
	0x028F9310 TBNZ X9, 0x0, 0x28F932C
	0x028F9314 MOV X0, X8
	0x028F9318 BL 0x1C5C684
	0x028F931C LDR X8, [X19 + 0x20]
	0x028F9320 ADD X9, X8, 0x135
	0x028F9324 LDRH W9, [X9]
	0x028F9328 B 0x28F9330
	0x028F932C MOV X0, X8
	0x028F9330 LDR X10, [X0 + 0xC0]
	0x028F9334 LDR X23, [X10 + 0x70]
	0x028F9338 TBNZ X9, 0x0, 0x28F9348
	0x028F933C MOV X0, X8
	0x028F9340 BL 0x1C5C684
	0x028F9344 MOV X8, X0
	0x028F9348 LDR X8, [X8 + 0xC0]
	0x028F934C MOV X0, X21
	0x028F9350 MOV X1, X22
	0x028F9354 MOV X2, X23
	0x028F9358 LDR X3, [X8 + 0x80]
	0x028F935C BL 0x2A6B948
	0x028F9360 LDR X0, [X19 + 0x20]
	0x028F9364 LDRB W8, [X0 + 0x135]
	0x028F9368 TBNZ X8, 0x0, 0x28F9370
	0x028F936C BL 0x1C5C684
	0x028F9370 LDR X8, [X0 + 0xC0]
	0x028F9374 LDR X0, [X8 + 0x8]
	0x028F9378 LDRB W8, [X0 + 0x135]
	0x028F937C TBNZ X8, 0x0, 0x28F9384
	0x028F9380 BL 0x1C5C684
	0x028F9384 BL 0x1C16F10
	0x028F9388 LDR X8, [X19 + 0x20]
	0x028F938C MOV X22, X0
	0x028F9390 LDRB W9, [X8 + 0x135]
	0x028F9394 TBNZ X9, 0x0, 0x28F93A4
	0x028F9398 MOV X0, X8
	0x028F939C BL 0x1C5C684
	0x028F93A0 MOV X8, X0
	0x028F93A4 LDR X8, [X8 + 0xC0]
	0x028F93A8 MOVZ W5, 0x1
	0x028F93AC MOVZ W6, 0xA
	0x028F93B0 MOVZ W7, 0x2710
	0x028F93B4 LDR X8, [X8 + 0x88]
	0x028F93B8 MOV X0, X22
	0x028F93BC MOV X1, X20
	0x028F93C0 MOV X2, X31
	0x028F93C4 MOV X3, X21
	0x028F93C8 MOV X4, X31
	0x028F93CC STR X8, [X31]
	0x028F93D0 BL 0x249318C
	0x028F93D4 LDR X0, [X19 + 0x20]
	0x028F93D8 LDRB W8, [X0 + 0x135]
	0x028F93DC TBNZ X8, 0x0, 0x28F93E4
	0x028F93E0 BL 0x1C5C684
	0x028F93E4 LDR X8, [X0 + 0xC0]
	0x028F93E8 LDR X0, [X8 + 0x10]
	0x028F93EC LDRB W8, [X0 + 0x135]
	0x028F93F0 TBNZ X8, 0x0, 0x28F93F8
	0x028F93F4 BL 0x1C5C684
	0x028F93F8 LDR X8, [X0 + 0xB8]
	0x028F93FC STR X22, [X8]
	0x028F9400 LDR X0, [X19 + 0x20]
	0x028F9404 LDRB W8, [X0 + 0x135]
	0x028F9408 TBNZ X8, 0x0, 0x28F9410
	0x028F940C BL 0x1C5C684
	0x028F9410 LDR X8, [X0 + 0xC0]
	0x028F9414 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {102}
	007 Move X19, X0
	008 Move X0, [X1+32]
	009 Move X20, X1
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X1, [X8+56]
	018 Move W8, [X1+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X1
	024 Call 0x1C5D684
	025 Move X1, X0
	026 Move X8, [X19]
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 3
	037 Move X0, X19
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 3
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X8, [X0]
	044 Move X1, [X0+8]
	045 Move X0, X19
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X0, [X8+16]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, [X20+32]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+192]
	074 Move X0, [X8+16]
	075 Move W8, [X0+309]
	076 Move TEMP, X8
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {81}
	080 Call 0x1C5D684
	081 Move X8, [X0+184]
	082 Move X21, [X8]
	083 Compare X21, 0
	084 JumpIfEqual {102}
	085 Move X0, [X20+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move X8, [X0+192]
	093 Move X1, X19
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X0, X21
	097 Move X2, [X8+72]
	098 Move X30, [X31+32]
	099 Move X21, [X31+40]
	100 Call Queue`1<Object>.Enqueue, X0, X1
	101 Return 
	102 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x028F9418 LDRB W8, [X0 + 0x135]
	0x028F941C TBNZ X8, 0x0, 0x28F9434
	0x028F9420 LDP X20, X19, [X31 + 0x30]
	0x028F9424 LDP X22, X21, [X31 + 0x20]
	0x028F9428 LDP X30, X23, [X31 + 0x10]
	0x028F942C ADD X31, X31, 0x40
	0x028F9430 B 0x1C5C684
	0x028F9434 LDP X20, X19, [X31 + 0x30]
	0x028F9438 LDP X22, X21, [X31 + 0x20]
	0x028F943C LDP X30, X23, [X31 + 0x10]
	0x028F9440 ADD X31, X31, 0x40
	0x028F9444 RET
	0x028F9448 STR X30, [X31 - 0x20]!
	0x028F944C STP X20, X19, [X31 + 0x10]
	0x028F9450 MOV X19, X0
	0x028F9454 LDR X0, [X0 + 0x20]
	0x028F9458 LDRB W8, [X0 + 0x135]
	0x028F945C TBNZ X8, 0x0, 0x28F9464
	0x028F9460 BL 0x1C5C684
	0x028F9464 LDR X8, [X0 + 0xC0]
	0x028F9468 LDR X0, [X8 + 0x10]
	0x028F946C LDRB W8, [X0 + 0x135]
	0x028F9470 TBNZ X8, 0x0, 0x28F9478
	0x028F9474 BL 0x1C5C684
	0x028F9478 LDR W8, [X0 + 0xE0]
	0x028F947C CBNZ W8, 0x28F9484
	0x028F9480 BL 0x1C16DFC
	0x028F9484 LDR X0, [X19 + 0x20]
	0x028F9488 LDRB W8, [X0 + 0x135]
	0x028F948C TBNZ X8, 0x0, 0x28F9494
	0x028F9490 BL 0x1C5C684
	0x028F9494 LDR X8, [X0 + 0xC0]
	0x028F9498 LDR X0, [X8 + 0x10]
	0x028F949C LDRB W8, [X0 + 0x135]
	0x028F94A0 TBNZ X8, 0x0, 0x28F94A8
	0x028F94A4 BL 0x1C5C684
	0x028F94A8 LDR X8, [X0 + 0xB8]
	0x028F94AC LDR X20, [X8]
	0x028F94B0 CBZ X20, 0x28F94DC
	0x028F94B4 LDR X0, [X19 + 0x20]
	0x028F94B8 LDRB W8, [X0 + 0x135]
	0x028F94BC TBNZ X8, 0x0, 0x28F94C4
	0x028F94C0 BL 0x1C5C684
	0x028F94C4 LDR X8, [X0 + 0xC0]
	0x028F94C8 MOV X0, X20
	0x028F94CC LDP X20, X19, [X31 + 0x10]
	0x028F94D0 LDR X1, [X8 + 0x18]
	0x028F94D4 LDR X30, [X31], #0x20
	0x028F94D8 B 0x24932C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, [X8+80]
	034 Call Queue`1<Object>..ctor, X0
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+16]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move [X8], X20
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {71}
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Call 0x1C5D684
	070 Return 
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Return 

