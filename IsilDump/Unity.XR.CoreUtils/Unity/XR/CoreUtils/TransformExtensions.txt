Type: Unity.XR.CoreUtils.TransformExtensions

Method: UnityEngine.Pose GetLocalPose(UnityEngine.Transform transform)

Disassembly:
	0x03B256C0 STRB W8, [X23 + 0x759]
	0x03B256C4 STP X31, X31, [X31 + 0x40]
	0x03B256C8 STR X31, [X31 + 0x50]
	0x03B256CC STP X31, X31, [X31 + 0x20]
	0x03B256D0 STR X31, [X31 + 0x30]
	0x03B256D4 CBZ X21, 0x3B25C44
	0x03B256D8 ADRP X8, 0x5D8000
	0x03B256DC LDR X8, [X8 + 0x9D8]
	0x03B256E0 ADRP X24, 0x5D8000
	0x03B256E4 LDR X24, [X24 + 0x9A0]
	0x03B256E8 ADRP X25, 0x5D8000
	0x03B256EC LDR X1, [X8]
	0x03B256F0 ADRP X26, 0x5D8000
	0x03B256F4 LDR X25, [X25 + 0x9B8]
	0x03B256F8 LDR X26, [X26 + 0x998]
	0x03B256FC ADD X8, X31, 0x8
	0x03B25700 MOV X0, X21
	0x03B25704 BL 0x301CB58
	0x03B25708 LDUR V0, [X31 + 0x8]
	0x03B2570C LDR X8, [X31 + 0x18]
	0x03B25710 STR V0, [X31 + 0x4]
	0x03B25714 STR X8, [X31 + 0x50]
	0x03B25718 LDR X1, [X24]
	0x03B2571C ADD X0, X31, 0x40
	0x03B25720 BL 0x2BC4350

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+24], W31
	005 Move [X31+8], X31
	006 Move [X31+16], X31
	007 Move [X31], X31
	008 Compare X0, 0
	009 JumpIfEqual {33}
	010 Add X1, X31, 16
	011 Add X2, X31, 0
	012 Move X3, X31
	013 Move X19, X8
	014 Call Transform.GetLocalPositionAndRotation, X0, X1, X2
	015 Move S0, [X31+16]
	016 Move S1, [X31+20]
	017 Move V2, [X31+24]
	018 Move S3, [X31]
	019 Move S4, [X31+4]
	020 Move S5, [X31+8]
	021 Move S6, [X31+12]
	022 Move X0, X19
	023 Move X1, X31
	024 Move [X19], X31
	025 Move [X19+8], X31
	026 Move [X19+24], W31
	027 Move [X19+16], X31
	028 Call Pose..ctor, X0, X1, X2
	029 Move X30, [X31+32]
	030 Move X19, [X31+40]
	031 Add X31, X31, 48
	032 Return X0
	033 Call 0x1C17F20

Method: UnityEngine.Pose GetWorldPose(UnityEngine.Transform transform)

Disassembly:
	0x03B25724 TBZ X0, 0x0, 0x3B25794
	0x03B25728 LDR X23, [X31 + 0x50]
	0x03B2572C CBZ X23, 0x3B25BD8
	0x03B25730 MOV X0, X23
	0x03B25734 MOV X1, X31
	0x03B25738 BL 0x33962E8
	0x03B2573C TBNZ X0, 0x0, 0x3B25718
	0x03B25740 ADRP X0, 0x634000
	0x03B25744 LDR X0, [X0 + 0xC70]
	0x03B25748 BL 0x1C16D08
	0x03B2574C MOV X1, X23
	0x03B25750 MOV X2, X31
	0x03B25754 BL 0x321EFD0
	0x03B25758 MOV X23, X0
	0x03B2575C ADRP X0, 0x5D6000
	0x03B25760 LDR X0, [X0 + 0x578]
	0x03B25764 BL 0x1C16D08
	0x03B25768 BL 0x1C16F10
	0x03B2576C MOV X24, X0
	0x03B25770 MOV X1, X23
	0x03B25774 MOV X2, X31
	0x03B25778 BL 0x3314A68
	0x03B2577C ADRP X0, 0x634000
	0x03B25780 LDR X0, [X0 + 0xC78]
	0x03B25784 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+24], W31
	005 Move [X31+8], X31
	006 Move [X31+16], X31
	007 Move [X31], X31
	008 Compare X0, 0
	009 JumpIfEqual {33}
	010 Add X1, X31, 16
	011 Add X2, X31, 0
	012 Move X3, X31
	013 Move X19, X8
	014 Call Transform.GetPositionAndRotation, X0, X1, X2
	015 Move S0, [X31+16]
	016 Move S1, [X31+20]
	017 Move V2, [X31+24]
	018 Move S3, [X31]
	019 Move S4, [X31+4]
	020 Move S5, [X31+8]
	021 Move S6, [X31+12]
	022 Move X0, X19
	023 Move X1, X31
	024 Move [X19], X31
	025 Move [X19+8], X31
	026 Move [X19+24], W31
	027 Move [X19+16], X31
	028 Call Pose..ctor, X0, X1, X2
	029 Move X30, [X31+32]
	030 Move X19, [X31+40]
	031 Add X31, X31, 48
	032 Return X0
	033 Call 0x1C17F20

Method: System.Void SetLocalPose(UnityEngine.Transform transform, UnityEngine.Pose pose)

Disassembly:
	0x03B25788 MOV X1, X0
	0x03B2578C MOV X0, X24
	0x03B25790 BL 0x1C16DEC
	0x03B25794 LDR X1, [X26]
	0x03B25798 ADD X0, X31, 0x40
	0x03B2579C BL 0x2BC434C
	0x03B257A0 CBZ X19, 0x3B25C44
	0x03B257A4 LDR X8, [X19]
	0x03B257A8 LDR X1, [X25]
	0x03B257AC LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {15}
	004 Move S5, [X1+20]
	005 Move S6, [X1+24]
	006 Move S3, [X1+12]
	007 Move S4, [X1+16]
	008 Move S1, [X1+4]
	009 Move S2, [X1+8]
	010 Move V0, [X1]
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Call Transform.SetLocalPositionAndRotation, X0, X1, X2
	014 Return 
	015 Call 0x1C17F20

Method: System.Void SetWorldPose(UnityEngine.Transform transform, UnityEngine.Pose pose)

Disassembly:
	0x03B257B0 CBZ X9, 0x3B257D4
	0x03B257B4 LDR X10, [X8 + 0xB0]
	0x03B257B8 ADD X10, X10, 0x8
	0x03B257BC LDUR X11, [X10 - 0x8]
	0x03B257C0 CMP X11, X1
	0x03B257C4 B.EQ 0x3B257E4
	0x03B257C8 SUBS X9, X9, 0x1
	0x03B257CC ADD X10, X10, 0x10
	0x03B257D0 B.NE 0x3B257BC
	0x03B257D4 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {15}
	004 Move S5, [X1+20]
	005 Move S6, [X1+24]
	006 Move S3, [X1+12]
	007 Move S4, [X1+16]
	008 Move S1, [X1+4]
	009 Move S2, [X1+8]
	010 Move V0, [X1]
	011 Move X1, X31
	012 Move X30, [X31+16]
	013 Call Transform.SetPositionAndRotation, X0, X1, X2
	014 Return 
	015 Call 0x1C17F20

Method: UnityEngine.Pose TransformPose(UnityEngine.Transform transform, UnityEngine.Pose pose)

Disassembly:
	0x03B257D8 MOV W2, W31
	0x03B257DC BL 0x1C5C788
	0x03B257E0 B 0x3B257F0
	0x03B257E4 LDRSW X9, [X10]
	0x03B257E8 ADD X8, X8, X9, 0x4, LSL
	0x03B257EC ADD X0, X8, 0x138
	0x03B257F0 LDP X8, X1, [X0]
	0x03B257F4 MOV X0, X19
	0x03B257F8 BLR X8
	0x03B257FC MOV X19, X0
	0x03B25800 CBZ X0, 0x3B25C48
	0x03B25804 ADRP X26, 0x634000
	0x03B25808 ADRP X29, 0x634000
	0x03B2580C ADRP X27, 0x5D8000
	0x03B25810 ADRP X28, 0x61B000
	0x03B25814 LDR X26, [X26 + 0xC38]
	0x03B25818 LDR X29, [X29 + 0xC50]
	0x03B2581C LDR X27, [X27 + 0x940]
	0x03B25820 LDR X28, [X28 + 0xB58]
	0x03B25824 LDR X8, [X19]
	0x03B25828 ADRP X10, 0x5CE000
	0x03B2582C LDRH W9, [X8 + 0x12E]
	0x03B25830 LDR X10, [X10 + 0xE18]
	0x03B25834 LDR X1, [X10]
	0x03B25838 CBZ X9, 0x3B2585C
	0x03B2583C LDR X10, [X8 + 0xB0]
	0x03B25840 ADD X10, X10, 0x8
	0x03B25844 LDUR X11, [X10 - 0x8]
	0x03B25848 CMP X11, X1
	0x03B2584C B.EQ 0x3B2586C
	0x03B25850 SUBS X9, X9, 0x1
	0x03B25854 ADD X10, X10, 0x10
	0x03B25858 B.NE 0x3B25844
	0x03B2585C MOV X0, X19
	0x03B25860 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x8BE000
	009 Move X23, 0x5F7000
	010 Move X19, X8
	011 Move W8, [X22+1870]
	012 Move X23, [X23+1552]
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x5F7000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1870], W8
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Add X8, X31, 0
	030 Move X0, X21
	031 Move X1, X20
	032 Move X2, X31
	033 Call Pose.GetTransformedBy, X0, X1
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Move V1, [X31]
	036 Move X22, [X31+48]
	037 Move X21, [X31+56]
	038 Move X30, [X31+32]
	039 Move X23, [X31+40]
	040 Move [X19+12], V0
	041 Move [X19], V1
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Add X31, X31, 80
	045 Return X0

Method: UnityEngine.Pose InverseTransformPose(UnityEngine.Transform transform, UnityEngine.Pose pose)

Disassembly:
	0x03B25864 BL 0x1C5C788
	0x03B25868 B 0x3B25878
	0x03B2586C LDRSW X9, [X10]
	0x03B25870 ADD X8, X8, X9, 0x4, LSL
	0x03B25874 ADD X0, X8, 0x138
	0x03B25878 LDP X8, X1, [X0]
	0x03B2587C MOV X0, X19
	0x03B25880 BLR X8
	0x03B25884 TBZ X0, 0x0, 0x3B25B28
	0x03B25888 LDR X8, [X19]
	0x03B2588C ADRP X10, 0x5D8000
	0x03B25890 LDRH W9, [X8 + 0x12E]
	0x03B25894 LDR X10, [X10 + 0x9C0]
	0x03B25898 LDR X1, [X10]
	0x03B2589C CBZ X9, 0x3B258C0
	0x03B258A0 LDR X10, [X8 + 0xB0]
	0x03B258A4 ADD X10, X10, 0x8
	0x03B258A8 LDUR X11, [X10 - 0x8]
	0x03B258AC CMP X11, X1
	0x03B258B0 B.EQ 0x3B258D0
	0x03B258B4 SUBS X9, X9, 0x1
	0x03B258B8 ADD X10, X10, 0x10
	0x03B258BC B.NE 0x3B258A8
	0x03B258C0 MOV X0, X19
	0x03B258C4 MOV W2, W31
	0x03B258C8 BL 0x1C5C788
	0x03B258CC B 0x3B258DC
	0x03B258D0 LDRSW X9, [X10]
	0x03B258D4 ADD X8, X8, X9, 0x4, LSL
	0x03B258D8 ADD X0, X8, 0x138
	0x03B258DC LDP X8, X1, [X0]
	0x03B258E0 MOV X0, X19
	0x03B258E4 BLR X8
	0x03B258E8 MOV X23, X0
	0x03B258EC CBZ X0, 0x3B25BE0
	0x03B258F0 MOV X0, X23
	0x03B258F4 MOV X1, X31
	0x03B258F8 BL 0x339707C
	0x03B258FC TBZ X0, 0x0, 0x3B25BE8
	0x03B25900 LDR X0, [X26]
	0x03B25904 LDR W8, [X0 + 0xE0]
	0x03B25908 CBNZ W8, 0x3B25914
	0x03B2590C BL 0x1C16DFC
	0x03B25910 LDR X0, [X26]
	0x03B25914 LDR X8, [X0 + 0xB8]
	0x03B25918 LDR X1, [X8]
	0x03B2591C CBZ X1, 0x3B25BE4
	0x03B25920 LDP W2, W8, [X1 + 0x18]
	0x03B25924 ADD W8, W8, 0x1
	0x03B25928 CMP W2, 0x1
	0x03B2592C STP W31, W8, [X1 + 0x18]
	0x03B25930 B.LT 0x3B25950
	0x03B25934 LDR X0, [X1 + 0x10]
	0x03B25938 MOV W1, W31
	0x03B2593C MOV X3, X31
	0x03B25940 BL 0x339FA34
	0x03B25944 LDR X8, [X26]
	0x03B25948 LDR X8, [X8 + 0xB8]
	0x03B2594C LDR X1, [X8]
	0x03B25950 LDR W2, [X31 + 0x4]
	0x03B25954 MOV X0, X23
	0x03B25958 BL 0x3B252F4
	0x03B2595C LDR X8, [X26]
	0x03B25960 LDR X8, [X8 + 0xB8]
	0x03B25964 LDR X0, [X8]
	0x03B25968 CBZ X0, 0x3B25BDC
	0x03B2596C ADRP X8, 0x634000
	0x03B25970 LDR X8, [X8 + 0xC68]
	0x03B25974 LDR X1, [X8]
	0x03B25978 ADD X8, X31, 0x8
	0x03B2597C BL 0x301CB58
	0x03B25980 LDUR V0, [X31 + 0x8]
	0x03B25984 LDR X8, [X31 + 0x18]
	0x03B25988 STR V0, [X31 + 0x2]
	0x03B2598C STR X8, [X31 + 0x30]
	0x03B25990 LDR X1, [X29]
	0x03B25994 ADD X0, X31, 0x20
	0x03B25998 BL 0x2BC4350
	0x03B2599C TBZ X0, 0x0, 0x3B25A7C
	0x03B259A0 LDR X23, [X31 + 0x30]
	0x03B259A4 CBZ X23, 0x3B25ABC
	0x03B259A8 LDR X8, [X23]
	0x03B259AC LDR X1, [X8 + 0x260]
	0x03B259B0 LDR X9, [X8 + 0x258]
	0x03B259B4 MOV X0, X23
	0x03B259B8 BLR X9
	0x03B259BC CBZ X0, 0x3B25AC4
	0x03B259C0 LDR X8, [X0]
	0x03B259C4 LDR X1, [X8 + 0x860]
	0x03B259C8 LDR X9, [X8 + 0x858]
	0x03B259CC BLR X9
	0x03B259D0 MOV X24, X0
	0x03B259D4 CBZ X0, 0x3B25AB4
	0x03B259D8 LDR X8, [X24 + 0x18]
	0x03B259DC CMP W8, 0x1
	0x03B259E0 B.LT 0x3B25990
	0x03B259E4 MOV X25, X31
	0x03B259E8 AND X8, X8, 0x0
	0x03B259EC ADD X20, X24, 0x20
	0x03B259F0 CMP X25, W8, UXTW

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x8BE000
	011 Move X23, 0x5CF000
	012 Move X19, X8
	013 Move W8, [X22+1871]
	014 Move X23, [X23+1432]
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x5CF000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1871], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {104}
	039 Compare X21, 0
	040 JumpIfEqual {122}
	041 Move S1, [X20+4]
	042 Move S2, [X20+8]
	043 Move V0, [X20]
	044 Move X0, X21
	045 Move X1, X31
	046 Call Transform.InverseTransformPoint, X0, X1
	047 Move X0, X21
	048 Move X1, X31
	049 Move V9, V0
	050 Move V10, V1
	051 Move V8, V2
	052 Call Transform.get_rotation, X0
	053 Move X0, X31
	054 Call Quaternion.Inverse, X0
	055 Move S4, [X20+12]
	056 Move S5, [X20+16]
	057 Move S6, [X20+20]
	058 Move S7, [X20+24]
	059 Move [X19], S9
	060 Move [X19+8], S10
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Multiply S16, S3, S4
	064 Multiply S17, S0, S7
	065 Multiply S18, S1, S6
	066 Multiply S19, S2, S5
	067 Multiply S20, S3, S5
	068 Multiply S21, S1, S7
	069 Multiply S22, S2, S4
	070 Multiply S23, S0, S6
	071 Multiply S24, S0, S5
	072 Multiply S0, S0, S4
	073 Multiply S4, S1, S4
	074 Multiply S1, S1, S5
	075 Multiply S5, S3, S6
	076 Multiply S3, S3, S7
	077 Multiply S7, S2, S7
	078 Multiply S2, S2, S6
	079 Add S6, S16, S17
	080 Add S16, S20, S21
	081 Add S5, S5, S7
	082 Subtract S0, S3, S0
	083 Add S3, S18, S6
	084 Add S6, S22, S16
	085 Add S5, S24, S5
	086 Subtract S0, S0, S1
	087 Subtract S1, S3, S19
	088 Subtract S3, S6, S23
	089 Subtract S4, S5, S4
	090 Subtract S0, S0, S2
	091 Move [X19+8], S8
	092 Move [X19+16], S1
	093 Move [X19+16], S3
	094 Move [X19+24], S4
	095 Move [X19+24], S0
	096 Move X20, [X31+64]
	097 Move X19, [X31+72]
	098 Move X30, [X31+32]
	099 Move X23, [X31+40]
	100 Move D9, [X31+16]
	101 Move D8, [X31+24]
	102 Move V10, [X31+80]
	103 Return X0
	104 Move X0, 0x5D4000
	105 Move X0, [X0+1320]
	106 Call 0x1C17D08
	107 Call 0x1C17F10
	108 Move X19, X0
	109 Move X0, 0x5FA000
	110 Move X0, [X0+3400]
	111 Call 0x1C17D08
	112 Move X1, X0
	113 Move X0, X19
	114 Move X2, X31
	115 Call ArgumentNullException..ctor, X0, X1
	116 Move X0, 0x635000
	117 Move X0, [X0+3056]
	118 Call 0x1C17D08
	119 Move X1, X0
	120 Move X0, X19
	121 Call 0x1C17DEC
	122 Call 0x1C17F20

Method: UnityEngine.Ray InverseTransformRay(UnityEngine.Transform transform, UnityEngine.Ray ray)

Disassembly:
	0x03B259F4 B.CS 0x3B25AAC
	0x03B259F8 LDR X1, [X20, X25, LSL #3]
	0x03B259FC LDR X2, [X27]
	0x03B25A00 MOV X0, X21
	0x03B25A04 BL 0x301C318
	0x03B25A08 TBNZ X0, 0x0, 0x3B25A20
	0x03B25A0C LDR W8, [X24 + 0x18]
	0x03B25A10 ADD X25, X25, 0x1
	0x03B25A14 CMP X25, W8, SXTW
	0x03B25A18 B.LT 0x3B259F0
	0x03B25A1C B 0x3B25990
	0x03B25A20 CBZ X22, 0x3B25ACC
	0x03B25A24 LDR W10, [X22 + 0x1C]
	0x03B25A28 LDR X8, [X22 + 0x10]
	0x03B25A2C LDR X9, [X28]
	0x03B25A30 ADD W10, W10, 0x1
	0x03B25A34 STR W10, [X22 + 0x1C]
	0x03B25A38 CBZ X8, 0x3B25AD4
	0x03B25A3C LDRSW X10, [X22 + 0x18]
	0x03B25A40 LDR W11, [X8 + 0x18]
	0x03B25A44 CMP W10, W11
	0x03B25A48 B.CS 0x3B25A60
	0x03B25A4C ADD W9, W10, 0x1
	0x03B25A50 ADD X8, X8, X10, 0x3, LSL
	0x03B25A54 STR W9, [X22 + 0x18]
	0x03B25A58 STR X23, [X8 + 0x20]
	0x03B25A5C B 0x3B25990
	0x03B25A60 LDR X8, [X9 + 0x20]
	0x03B25A64 LDR X8, [X8 + 0xC0]
	0x03B25A68 LDR X2, [X8 + 0x70]
	0x03B25A6C MOV X0, X22
	0x03B25A70 MOV X1, X23
	0x03B25A74 BL 0x301BF90
	0x03B25A78 B 0x3B25990
	0x03B25A7C MOV X25, X31
	0x03B25A80 MOVZ W20, 0x7
	0x03B25A84 ADRP X8, 0x634000
	0x03B25A88 LDR X8, [X8 + 0xC48]
	0x03B25A8C LDR X1, [X8]
	0x03B25A90 ADD X0, X31, 0x20
	0x03B25A94 BL 0x2BC434C
	0x03B25A98 CBNZ X25, 0x3B25C3C
	0x03B25A9C CBZ W20, 0x3B25824
	0x03B25AA0 CMP W20, 0x7
	0x03B25AA4 B.EQ 0x3B25824
	0x03B25AA8 B 0x3B25B28
	0x03B25AAC BL 0x1C16F28
	0x03B25AB0 B 0x3B25C54
	0x03B25AB4 BL 0x1C16F20
	0x03B25AB8 B 0x3B25C54
	0x03B25ABC BL 0x1C16F20
	0x03B25AC0 B 0x3B25C54
	0x03B25AC4 BL 0x1C16F20
	0x03B25AC8 B 0x3B25C54
	0x03B25ACC BL 0x1C16F20
	0x03B25AD0 B 0x3B25C54
	0x03B25AD4 BL 0x1C16F20
	0x03B25AD8 B 0x3B25C54
	0x03B25ADC B 0x3B25B00
	0x03B25AE0 B 0x3B25B00
	0x03B25AE4 B 0x3B25B00
	0x03B25AE8 B 0x3B25B00
	0x03B25AEC B 0x3B25B00
	0x03B25AF0 B 0x3B25B00
	0x03B25AF4 B 0x3B25B00
	0x03B25AF8 B 0x3B25B00
	0x03B25AFC B 0x3B25B00
	0x03B25B00 MOV X24, X1
	0x03B25B04 MOV X23, X0
	0x03B25B08 CMP W24, 0x1
	0x03B25B0C B.NE 0x3B25BB4
	0x03B25B10 MOV X0, X23
	0x03B25B14 BL 0x3EB1AD0
	0x03B25B18 LDR X25, [X0]
	0x03B25B1C BL 0x3EB1AE0
	0x03B25B20 MOV W20, W31
	0x03B25B24 B 0x3B25A84
	0x03B25B28 MOV X20, X31
	0x03B25B2C CBZ X19, 0x3B25B90
	0x03B25B30 LDR X8, [X19]
	0x03B25B34 ADRP X10, 0x5CE000
	0x03B25B38 LDRH W9, [X8 + 0x12E]
	0x03B25B3C LDR X10, [X10 + 0xE00]
	0x03B25B40 LDR X1, [X10]
	0x03B25B44 CBZ X9, 0x3B25B68
	0x03B25B48 LDR X10, [X8 + 0xB0]
	0x03B25B4C ADD X10, X10, 0x8
	0x03B25B50 LDUR X11, [X10 - 0x8]
	0x03B25B54 CMP X11, X1
	0x03B25B58 B.EQ 0x3B25B78
	0x03B25B5C SUBS X9, X9, 0x1
	0x03B25B60 ADD X10, X10, 0x10
	0x03B25B64 B.NE 0x3B25B50
	0x03B25B68 MOV X0, X19
	0x03B25B6C MOV W2, W31
	0x03B25B70 BL 0x1C5C788
	0x03B25B74 B 0x3B25B84
	0x03B25B78 LDRSW X9, [X10]
	0x03B25B7C ADD X8, X8, X9, 0x4, LSL
	0x03B25B80 ADD X0, X8, 0x138
	0x03B25B84 LDP X8, X1, [X0]
	0x03B25B88 MOV X0, X19
	0x03B25B8C BLR X8
	0x03B25B90 CBNZ X20, 0x3B25C4C
	0x03B25B94 LDP X20, X19, [X31 + 0xB0]
	0x03B25B98 LDP X22, X21, [X31 + 0xA0]
	0x03B25B9C LDP X24, X23, [X31 + 0x90]
	0x03B25BA0 LDP X26, X25, [X31 + 0x80]
	0x03B25BA4 LDP X28, X27, [X31 + 0x70]
	0x03B25BA8 LDP X29, X30, [X31 + 0x60]
	0x03B25BAC ADD X31, X31, 0xC0
	0x03B25BB0 RET
	0x03B25BB4 MOV X25, X31
	0x03B25BB8 ADRP X8, 0x634000
	0x03B25BBC LDR X8, [X8 + 0xC48]
	0x03B25BC0 LDR X1, [X8]
	0x03B25BC4 ADD X0, X31, 0x20
	0x03B25BC8 BL 0x2BC434C
	0x03B25BCC CBZ X25, 0x3B25D08
	0x03B25BD0 MOV X0, X25

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x8BE000
	014 Move X23, 0x5CF000
	015 Move X19, X8
	016 Move W8, [X22+1872]
	017 Move X23, [X23+1432]
	018 Move X21, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x5CF000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1872], W8
	029 Move X0, [X23]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {128}
	042 Compare X20, 0
	043 JumpIfEqual {146}
	044 Move S1, [X21+4]
	045 Move S2, [X21+8]
	046 Move V0, [X21]
	047 Move X0, X20
	048 Move X1, X31
	049 Call Transform.InverseTransformPoint, X0, X1
	050 Move V3, [X21+20]
	051 Move V11, V0
	052 Move V12, V1
	053 Move S0, [X21+12]
	054 Move S1, [X21+16]
	055 Move V13, V2
	056 Move X0, X20
	057 Move V2, V3
	058 Move X1, X31
	059 Call Transform.InverseTransformDirection, X0, X1
	060 Move X20, 0x8B4000
	061 Move W8, [X20+1925]
	062 Move V8, V0
	063 Move V9, V1
	064 Move V10, V2
	065 Move [X19+20], W31
	066 Move [X19+12], X31
	067 Move [X19], S11
	068 Move [X19+8], S12
	069 Move [X19+8], S13
	070 Compare W8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, 0x5CF000
	073 Move X0, [X0+1448]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X20+1925], W8
	077 Move X8, 0x5CF000
	078 Move X8, [X8+1448]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Multiply S0, S8, S8
	085 Multiply S1, S9, S9
	086 Move X8, -50569216
	087 Add S0, S0, S1
	088 Move V1, [X8+380]
	089 Multiply S2, S10, S10
	090 Add S0, S2, S0
	091 NotImplemented "Instruction FSQRT not yet implemented."
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 NotImplemented "Instruction FDIV not yet implemented."
	094 NotImplemented "Instruction FDIV not yet implemented."
	095 NotImplemented "Instruction FDIV not yet implemented."
	096 Move X20, 0x8B4000
	097 Move W8, [X20+1923]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0x5CF000
	101 Move X0, [X0+1440]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X20+1923], W8
	105 Move X8, 0x5CF000
	106 Move X8, [X8+1440]
	107 Move X8, [X8]
	108 Move X8, [X8+184]
	109 Move S0, [X8]
	110 Move S1, [X8+4]
	111 Move V2, [X8+8]
	112 Move [X19+12], S0
	113 Move [X19+20], S1
	114 Move [X19+20], S2
	115 Move X20, [X31+80]
	116 Move X19, [X31+88]
	117 Move X22, [X31+64]
	118 Move X21, [X31+72]
	119 Move X30, [X31+48]
	120 Move X23, [X31+56]
	121 Move D9, [X31+32]
	122 Move D8, [X31+40]
	123 Move D11, [X31+16]
	124 Move D10, [X31+24]
	125 Move D13, [X31+96]
	126 Move D12, [X31+104]
	127 Return X0
	128 Move X0, 0x5D4000
	129 Move X0, [X0+1320]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X19, X0
	133 Move X0, 0x5FA000
	134 Move X0, [X0+3400]
	135 Call 0x1C17D08
	136 Move X1, X0
	137 Move X0, X19
	138 Move X2, X31
	139 Call ArgumentNullException..ctor, X0, X1
	140 Move X0, 0x635000
	141 Move X0, [X0+3064]
	142 Call 0x1C17D08
	143 Move X1, X0
	144 Move X0, X19
	145 Call 0x1C17DEC
	146 Call 0x1C17F20

