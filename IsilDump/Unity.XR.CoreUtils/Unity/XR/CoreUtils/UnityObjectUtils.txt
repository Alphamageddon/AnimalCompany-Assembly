Type: Unity.XR.CoreUtils.UnityObjectUtils

Method: System.Void Destroy(UnityEngine.Object obj, System.Boolean withUndo = False)

Disassembly:
	0x03B2FCBC MOV V9.16B, V0.16B
	0x03B2FCC0 MOV V10.16B, V1.16B
	0x03B2FCC4 MOV V8.16B, V2.16B
	0x03B2FCC8 MOV V11.16B, V3.16B
	0x03B2FCCC BL 0x3C356F8
	0x03B2FCD0 MOV X20, X0
	0x03B2FCD4 MOV X0, X19
	0x03B2FCD8 MOV X1, X31
	0x03B2FCDC BL 0x3C32E90
	0x03B2FCE0 CBZ X0, 0x3B2FD84
	0x03B2FCE4 MOV X1, X31
	0x03B2FCE8 BL 0x3C3DEB4
	0x03B2FCEC CBZ X20, 0x3B2FD84
	0x03B2FCF0 FMUL S4, S11, S3
	0x03B2FCF4 FMUL S5, S9, S0
	0x03B2FCF8 FMUL S7, S8, S2
	0x03B2FCFC FMUL S17, S11, S2
	0x03B2FD00 FMUL S18, S8, S3
	0x03B2FD04 FMUL S19, S10, S0
	0x03B2FD08 FMUL S20, S10, S3
	0x03B2FD0C FMUL S21, S10, S2
	0x03B2FD10 FMUL S22, S9, S2
	0x03B2FD14 FMUL S2, S9, S3
	0x03B2FD18 FMUL S3, S8, S0
	0x03B2FD1C FMUL S0, S11, S0
	0x03B2FD20 FMUL S23, S11, S1
	0x03B2FD24 FMUL S6, S10, S1
	0x03B2FD28 FMUL S16, S9, S1
	0x03B2FD2C FMUL S24, S8, S1
	0x03B2FD30 FSUB S1, S4, S5
	0x03B2FD34 FADD S4, S17, S18
	0x03B2FD38 FADD S5, S23, S20
	0x03B2FD3C FADD S0, S0, S2
	0x03B2FD40 FSUB S1, S1, S6
	0x03B2FD44 FADD S2, S16, S4
	0x03B2FD48 FADD S4, S3, S5
	0x03B2FD4C FADD S0, S21, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8B4000
	006 Move X21, 0x5C5000
	007 Move W8, [X20+1965]
	008 Move X21, [X21+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x5C5000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x5C5000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1965], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call Application.get_isPlaying
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {48}
	033 Move X8, 0x5C5000
	034 Move X8, [X8+1432]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Object.Destroy, X0
	047 Return 
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 

Method: T ConvertUnityObjectToType(UnityEngine.Object objectIn)

Disassembly:
	0x022A302C BL 0x301DDC4
	0x022A3030 CBZ X26, 0x22A33B4
	0x022A3034 LDR X8, [X26]
	0x022A3038 MOV X2, X0
	0x022A303C LDP X9, X3, [X8 + 0x178]
	0x022A3040 MOV X0, X26
	0x022A3044 MOV X1, X25
	0x022A3048 BLR X9
	0x022A304C ADRP X8, 0x1E79000
	0x022A3050 LDR X8, [X8 + 0x8A0]
	0x022A3054 ADD X0, X31, 0xA8
	0x022A3058 LDR X1, [X8]
	0x022A305C BL 0x24A69BC
	0x022A3060 LDR X0, [X29]
	0x022A3064 LDR W8, [X0 + 0xE0]
	0x022A3068 CBNZ W8, 0x22A3070
	0x022A306C BL 0x1C16DFC
	0x022A3070 MOV X0, X24
	0x022A3074 MOV X1, X31
	0x022A3078 BL 0x3C38948
	0x022A307C ADRP X25, 0x1E54000
	0x022A3080 LDR X25, [X25 + 0x2C8]
	0x022A3084 TBZ X0, 0x0, 0x22A3348
	0x022A3088 LDR X8, [X22]
	0x022A308C MOV X0, X22
	0x022A3090 LDP X9, X1, [X8 + 0x1C8]
	0x022A3094 BLR X9
	0x022A3098 CMP W0, 0x6
	0x022A309C B.HI 0x22A3348
	0x022A30A0 MOVZ W8, 0x1
	0x022A30A4 LSLV W8, W8, W0
	0x022A30A8 MOVZ W9, 0x2C
	0x022A30AC ANDS W31, W8, W9, 0x0
	0x022A30B0 B.EQ 0x22A3304
	0x022A30B4 LDR X0, [X25]
	0x022A30B8 LDR W8, [X0 + 0xE0]
	0x022A30BC CBNZ W8, 0x22A30C4
	0x022A30C0 BL 0x1C16DFC
	0x022A30C4 MOV X0, X24
	0x022A30C8 MOV W1, W31
	0x022A30CC MOV W2, W31
	0x022A30D0 MOV X3, X22
	0x022A30D4 MOV W4, W23
	0x022A30D8 B 0x22A333C
	0x022A30DC ADRP X27, 0x1E79000
	0x022A30E0 LDR X27, [X27 + 0x898]
	0x022A30E4 LDR X0, [X27]
	0x022A30E8 LDR W8, [X0 + 0xE0]
	0x022A30EC CBNZ W8, 0x22A30F8
	0x022A30F0 BL 0x1C16DFC
	0x022A30F4 LDR X0, [X27]
	0x022A30F8 LDR X8, [X0 + 0xB8]
	0x022A30FC LDR X2, [X8]
	0x022A3100 STRB W31, [X31 + 0x60]
	0x022A3104 ADD X0, X31, 0x60
	0x022A3108 MOV X1, X31
	0x022A310C MOV X3, X31
	0x022A3110 BL 0x39B1DB0
	0x022A3114 LDRB W8, [X31 + 0x60]
	0x022A3118 LDR X1, [X31 + 0xB8]
	0x022A311C STRB W8, [X31 + 0x98]
	0x022A3120 MOV X0, X25
	0x022A3124 MOV X2, X31
	0x022A3128 BL 0x3C5459C
	0x022A312C MOV X26, X31
	0x022A3130 MOVZ W28, 0x13
	0x022A3134 ADD X0, X31, 0x98
	0x022A3138 MOV X1, X31
	0x022A313C BL 0x39B1DB4
	0x022A3140 CBNZ X26, 0x22A33B8
	0x022A3144 CMP W28, 0x13
	0x022A3148 B.EQ 0x22A3150
	0x022A314C CBNZ W28, 0x22A32E0
	0x022A3150 LDR X0, [X27]
	0x022A3154 LDR W8, [X0 + 0xE0]
	0x022A3158 CBNZ W8, 0x22A3164
	0x022A315C BL 0x1C16DFC
	0x022A3160 LDR X0, [X27]
	0x022A3164 LDR X8, [X0 + 0xB8]
	0x022A3168 LDR X2, [X8 + 0x10]
	0x022A316C STRB W31, [X31 + 0x60]
	0x022A3170 ADD X0, X31, 0x60
	0x022A3174 MOV X1, X31
	0x022A3178 MOV X3, X31
	0x022A317C BL 0x39B1DB0
	0x022A3180 LDRB W8, [X31 + 0x60]
	0x022A3184 STRB W8, [X31 + 0x98]
	0x022A3188 MOV X0, X25
	0x022A318C MOV X1, X19
	0x022A3190 MOV X2, X31
	0x022A3194 BL 0x3C546F4
	0x022A3198 MOV X26, X31
	0x022A319C MOVZ W28, 0x14
	0x022A31A0 ADD X0, X31, 0x98
	0x022A31A4 MOV X1, X31
	0x022A31A8 BL 0x39B1DB4
	0x022A31AC CBNZ X26, 0x22A33C0
	0x022A31B0 CMP W28, 0x14
	0x022A31B4 B.EQ 0x22A31BC
	0x022A31B8 CBNZ W28, 0x22A32E0
	0x022A31BC MOV X0, X19
	0x022A31C0 MOV X1, X31
	0x022A31C4 BL 0x3C32ECC
	0x022A31C8 CBZ X0, 0x22A33C8
	0x022A31CC ADRP X8, 0x1E79000
	0x022A31D0 LDR X8, [X8 + 0x870]
	0x022A31D4 LDR X2, [X8]
	0x022A31D8 ADD X1, X31, 0xA0
	0x022A31DC BL 0x21E6600
	0x022A31E0 ADRP X8, 0x1E79000
	0x022A31E4 LDR X8, [X8 + 0x8A8]
	0x022A31E8 LDR X0, [X8]
	0x022A31EC LDR W8, [X0 + 0xE0]
	0x022A31F0 CBNZ W8, 0x22A31F8
	0x022A31F4 BL 0x1C16DFC
	0x022A31F8 ADD X2, X31, 0xA0
	0x022A31FC MOV X0, X25
	0x022A3200 MOV X1, X19
	0x022A3204 MOV X3, X31
	0x022A3208 BL 0x3A8C6CC
	0x022A320C LDR X0, [X27]
	0x022A3210 LDR W8, [X0 + 0xE0]
	0x022A3214 CBNZ W8, 0x22A3220
	0x022A3218 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {26}
	011 Move X0, 0x1E7A000
	012 Move X0, [X0+2136]
	013 Call 0x1C17CF4
	014 Move X0, 0x1E51000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move X0, 0x1E51000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X8, [X19+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {26}
	023 Move X0, X19
	024 Call 0x1C5D6E0
	025 Move X8, [X19+56]
	026 Move X1, [X8]
	027 Move W8, [X1+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X1
	033 Call 0x1C5D684
	034 Move X1, X0
	035 Move X0, X20
	036 Call 0x1C17E00
	037 Move X8, [X19+56]
	038 Move X22, X0
	039 Move X21, [X8]
	040 Move W8, [X21+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X21
	046 Call 0x1C5D684
	047 Move X21, X0
	048 Compare X22, 0
	049 JumpIfEqual {58}
	050 Move X0, X22
	051 Move X1, X21
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfNotEqual {151}
	055 Move X0, X22
	056 Move X1, X21
	057 Call 0x1C181E0
	058 Move X22, 0x1E51000
	059 Move X22, [X22+1432]
	060 Move X0, [X22]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Move X2, X31
	068 Call Object.op_Inequality, X0, X1
	069 Move W8, W0
	070 Move X0, X31
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {151}
	075 Compare X20, 0
	076 JumpIfEqual {83}
	077 Move X8, 0x1E51000
	078 Move X8, [X8+2648]
	079 Move X9, [X20]
	080 Move X8, [X8]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X21, X31
	084 Move X0, [X22]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X21
	090 Move X1, X31
	091 Move X2, X31
	092 Call Object.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {109}
	097 Compare X21, 0
	098 JumpIfEqual {157}
	099 Move X8, [X19+56]
	100 Move X0, X21
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X1, [X8+8]
	106 Move X30, [X31+48]
	107 Call 0x21E62E4, X0
	108 Return X0
	109 Compare X20, 0
	110 JumpIfEqual {124}
	111 Move X8, 0x1E7A000
	112 Move X8, [X8+2136]
	113 Move X9, [X20]
	114 Move X8, [X8]
	115 Move W11, [X9+304]
	116 Move W10, [X8+304]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X20, X31
	119 Move X9, [X9+200]
	120 Add X9, X9, X10
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Move X0, [X22]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X20
	130 Move X1, X31
	131 Move X2, X31
	132 Call Object.op_Inequality, X0, X1
	133 Move W8, W0
	134 Move X0, X31
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {151}
	139 Compare X20, 0
	140 JumpIfEqual {157}
	141 Move X8, [X19+56]
	142 Move X0, X20
	143 Move X20, [X31+32]
	144 Move X19, [X31+40]
	145 Move X22, [X31+16]
	146 Move X21, [X31+24]
	147 Move X1, [X8+16]
	148 Move X30, [X31+48]
	149 Call 0x21A4894, X0
	150 Return X0
	151 Move X20, [X31+32]
	152 Move X19, [X31+40]
	153 Move X22, [X31+16]
	154 Move X21, [X31+24]
	155 Move X30, [X31+48]
	156 Return X0
	157 Call 0x1C17F20

Method: System.Void RemoveDestroyedObjects(System.Collections.Generic.List`1<T> list)

Disassembly:
	0x022A36AC ADRP X0, 0x1E50000
	0x022A36B0 LDR X0, [X0 + 0x598]
	0x022A36B4 BL 0x1C16CF4
	0x022A36B8 ADRP X0, 0x1E79000
	0x022A36BC LDR X0, [X0 + 0x898]
	0x022A36C0 BL 0x1C16CF4
	0x022A36C4 ADRP X0, 0x1E79000
	0x022A36C8 LDR X0, [X0 + 0x8A0]
	0x022A36CC BL 0x1C16CF4
	0x022A36D0 ADRP X0, 0x1E79000
	0x022A36D4 LDR X0, [X0 + 0x860]
	0x022A36D8 BL 0x1C16CF4
	0x022A36DC ADRP X0, 0x1E79000
	0x022A36E0 LDR X0, [X0 + 0x868]
	0x022A36E4 BL 0x1C16CF4
	0x022A36E8 ADRP X0, 0x1E50000
	0x022A36EC LDR X0, [X0 + 0x6C0]
	0x022A36F0 BL 0x1C16CF4
	0x022A36F4 ADRP X0, 0x1E79000
	0x022A36F8 LDR X0, [X0 + 0x8A8]
	0x022A36FC BL 0x1C16CF4
	0x022A3700 ADRP X0, 0x1E79000
	0x022A3704 LDR X0, [X0 + 0x8B0]
	0x022A3708 BL 0x1C16CF4
	0x022A370C ADRP X0, 0x1E79000
	0x022A3710 LDR X0, [X0 + 0x8B8]
	0x022A3714 BL 0x1C16CF4
	0x022A3718 LDR X27, [X20 + 0x38]
	0x022A371C CBNZ X27, 0x22A372C
	0x022A3720 MOV X0, X20
	0x022A3724 BL 0x1C5C6E0
	0x022A3728 LDR X27, [X20 + 0x38]
	0x022A372C LDR X8, [X27]
	0x022A3730 LDR W22, [X8 + 0xFC]
	0x022A3734 ADD X8, X31, 0x0
	0x022A3738 ADD X9, X22, 0xF
	0x022A373C AND X9, X9, 0x1FFFFFFFF
	0x022A3740 SUB X24, X8, X9
	0x022A3744 ADD X31, X24, 0x0
	0x022A3748 ADD X8, X31, 0x0
	0x022A374C SUB X23, X8, X9
	0x022A3750 ADD X31, X23, 0x0
	0x022A3754 MOVI V0.2D, 0x0
	0x022A3758 STUR W31, [X29 - 0x30]
	0x022A375C STP X31, X31, [X29 - 0x70]
	0x022A3760 STP X31, X31, [X29 - 0x80]
	0x022A3764 STURB W31, [X29 - 0x88]
	0x022A3768 STP V0, V0, [X29 - 0x50]
	0x022A376C STUR V0, [X29 - 0x60]
	0x022A3770 LDR X8, [X27]
	0x022A3774 SUB X28, X29, 0x28
	0x022A3778 MOV X0, X24
	0x022A377C MOV X2, X22
	0x022A3780 LDR W8, [X8 + 0x28]
	0x022A3784 CMP W8, 0x0
	0x022A3788 CSEL X1, X21, X28, LT
	0x022A378C BL 0x3EB1AC0
	0x022A3790 LDR X0, [X27]
	0x022A3794 MOV X1, X24
	0x022A3798 BL 0x1C16E04
	0x022A379C CBZ X0, 0x22A37C0
	0x022A37A0 ADRP X8, 0x1E79000
	0x022A37A4 LDR X8, [X8 + 0x868]
	0x022A37A8 LDR X9, [X0]
	0x022A37AC LDR X8, [X8]
	0x022A37B0 LDRB W11, [X9 + 0x130]
	0x022A37B4 LDRB W10, [X8 + 0x130]
	0x022A37B8 CMP W11, W10
	0x022A37BC B.CS 0x22A37C8
	0x022A37C0 MOV X27, X31
	0x022A37C4 B 0x22A37DC
	0x022A37C8 LDR X9, [X9 + 0xC8]
	0x022A37CC ADD X9, X9, X10, 0x3, LSL
	0x022A37D0 LDUR X9, [X9 - 0x8]
	0x022A37D4 CMP X9, X8
	0x022A37D8 CSEL X27, X0, X31, EQ
	0x022A37DC LDR X24, [X20 + 0x38]
	0x022A37E0 MOV X0, X23
	0x022A37E4 MOV X2, X22
	0x022A37E8 LDR X8, [X24]
	0x022A37EC LDR W8, [X8 + 0x28]
	0x022A37F0 CMP W8, 0x0
	0x022A37F4 CSEL X1, X21, X28, LT
	0x022A37F8 BL 0x3EB1AC0
	0x022A37FC LDR X0, [X24]
	0x022A3800 MOV X1, X23
	0x022A3804 BL 0x1C16E04
	0x022A3808 CBZ X0, 0x22A382C
	0x022A380C ADRP X8, 0x1E79000
	0x022A3810 LDR X8, [X8 + 0x860]
	0x022A3814 LDR X9, [X0]
	0x022A3818 LDR X8, [X8]
	0x022A381C LDRB W11, [X9 + 0x130]
	0x022A3820 LDRB W10, [X8 + 0x130]
	0x022A3824 CMP W11, W10
	0x022A3828 B.CS 0x22A3834
	0x022A382C MOV X8, X31
	0x022A3830 B 0x22A3848
	0x022A3834 LDR X9, [X9 + 0xC8]
	0x022A3838 ADD X9, X9, X10, 0x3, LSL
	0x022A383C LDUR X9, [X9 - 0x8]
	0x022A3840 CMP X9, X8
	0x022A3844 CSEL X8, X0, X31, EQ
	0x022A3848 ORR X9, X27, X8, 0x0
	0x022A384C CBNZ X9, 0x22A38E8
	0x022A3850 ADRP X8, 0x1E50000
	0x022A3854 LDR X8, [X8 + 0x6C0]
	0x022A3858 LDR X0, [X8]
	0x022A385C LDR X8, [X20 + 0x38]
	0x022A3860 LDR W9, [X0 + 0xE0]
	0x022A3864 LDR X19, [X8 + 0x8]
	0x022A3868 CBNZ W9, 0x22A3870
	0x022A386C BL 0x1C16DFC
	0x022A3870 MOV X0, X19
	0x022A3874 MOV X1, X31
	0x022A3878 BL 0x338C698
	0x022A387C CBZ X0, 0x22A3F2C
	0x022A3880 LDR X8, [X0]
	0x022A3884 LDR X9, [X8 + 0x2E8]
	0x022A3888 LDR X1, [X8 + 0x2F0]
	0x022A388C BLR X9
	0x022A3890 ADRP X8, 0x1E79000
	0x022A3894 LDR X8, [X8 + 0x8B0]
	0x022A3898 ADRP X9, 0x1E79000
	0x022A389C LDR X9, [X9 + 0x8B8]
	0x022A38A0 MOV X1, X0
	0x022A38A4 LDR X8, [X8]
	0x022A38A8 MOV X3, X31
	0x022A38AC LDR X2, [X9]
	0x022A38B0 MOV X0, X8
	0x022A38B4 BL 0x32274B8
	0x022A38B8 ADRP X8, 0x1E50000
	0x022A38BC LDR X8, [X8 + 0xA28]
	0x022A38C0 MOV X19, X0
	0x022A38C4 LDR X8, [X8]
	0x022A38C8 LDR W9, [X8 + 0xE0]
	0x022A38CC CBNZ W9, 0x22A38D8
	0x022A38D0 MOV X0, X8
	0x022A38D4 BL 0x1C16DFC
	0x022A38D8 MOV X0, X19
	0x022A38DC MOV X1, X31
	0x022A38E0 BL 0x3C06A04
	0x022A38E4 B 0x22A3EF0
	0x022A38E8 CBZ X27, 0x22A38F4
	0x022A38EC MOV X8, X27
	0x022A38F0 B 0x22A38F8
	0x022A38F4 CBZ X8, 0x22A3F2C
	0x022A38F8 CBZ X19, 0x22A3F2C
	0x022A38FC LDR X22, [X8 + 0x10]
	0x022A3900 LDP W23, W28, [X8 + 0x1C]
	0x022A3904 LDR W21, [X8 + 0x18]
	0x022A3908 MOV X0, X19
	0x022A390C MOV X1, X31
	0x022A3910 BL 0x3C040B4
	0x022A3914 CBZ X22, 0x22A3F2C
	0x022A3918 MOV X20, X0
	0x022A391C SUB X8, X29, 0xC0
	0x022A3920 MOV X0, X22
	0x022A3924 MOV X1, X31
	0x022A3928 BL 0x3C21334
	0x022A392C LDP V0, V1, [X29 - 0xC0]
	0x022A3930 LDUR V2, [X29 - 0xA0]
	0x022A3934 LDUR W8, [X29 - 0x90]
	0x022A3938 MOV X0, X22
	0x022A393C STP V0, V1, [X29 - 0x60]
	0x022A3940 STUR V2, [X29 - 0x40]
	0x022A3944 STUR W8, [X29 - 0x30]
	0x022A3948 LDR X8, [X22]
	0x022A394C LDP X9, X1, [X8 + 0x1C8]
	0x022A3950 BLR X9
	0x022A3954 CMP W0, 0x4
	0x022A3958 B.NE 0x22A396C
	0x022A395C MOVI V0.2D, 0x0
	0x022A3960 STUR W31, [X29 - 0x30]
	0x022A3964 STP V0, V0, [X29 - 0x50]
	0x022A3968 STUR V0, [X29 - 0x60]
	0x022A396C SUB X8, X29, 0xC
	0x022A3970 MOV X0, X22
	0x022A3974 MOV X1, X31
	0x022A3978 STUR W23, [X8 - 0x100]
	0x022A397C BL 0x3C20368
	0x022A3980 MOV W1, W0
	0x022A3984 SUB X0, X29, 0x60
	0x022A3988 MOV X2, X31
	0x022A398C BL 0x3C225D8
	0x022A3990 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X1+56]
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {22}
	013 Move X0, 0x1E51000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, [X19+56]
	022 Move [X31+32], X31
	023 Move [X31+40], X31
	024 Move [X31+48], X31
	025 Move X0, [X8+8]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, [X19+56]
	037 Move X0, [X8]
	038 Call 0x28F91C4
	039 Compare X21, 0
	040 JumpIfEqual {166}
	041 Move X8, [X19+56]
	042 Move X20, X0
	043 Move X0, X21
	044 Move X1, [X8+24]
	045 Add X8, X31, 8
	046 Call List`1<Object>.GetEnumerator, X0
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X8, [X31+24]
	049 Move X23, 0x1E51000
	050 Move [X31+2], V0
	051 Move [X31+48], X8
	052 Move X23, [X23+1432]
	053 Move X8, [X19+56]
	054 Move X1, [X8+72]
	055 Add X0, X31, 32
	056 Call Enumerator<Object>.MoveNext, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {98}
	061 Move X0, [X23]
	062 Move X22, [X31+48]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X22
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {53}
	075 Compare X20, 0
	076 JumpIfEqual {164}
	077 Move X9, [X19+56]
	078 Move W10, [X20+28]
	079 Move X8, [X20+16]
	080 Move X9, [X9+64]
	081 Add W10, W10, 1
	082 Move [X20+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {165}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W9, W10, 1
	089 Add X8, X8, X10
	090 Move [X20+24], W9
	091 Move [X8+32], X22
	092 Move X8, [X9+32]
	093 Move X8, [X8+192]
	094 Move X2, [X8+112]
	095 Move X0, X20
	096 Move X1, X22
	097 Call List`1<Object>.AddWithResize, X0, X1
	098 Move X23, X31
	099 Move X8, [X19+56]
	100 Add X0, X31, 32
	101 Move X1, [X8+80]
	102 Call Enumerator<Object>.Dispose, X0
	103 Compare X23, 0
	104 JumpIfNotEqual {167}
	105 Compare X20, 0
	106 JumpIfEqual {166}
	107 Move X8, [X19+56]
	108 Move X0, X20
	109 Move X1, [X8+24]
	110 Add X8, X31, 8
	111 Call List`1<Object>.GetEnumerator, X0
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 Move X8, [X31+24]
	114 Move [X31+2], V0
	115 Move [X31+48], X8
	116 Move X8, [X19+56]
	117 Move X1, [X8+72]
	118 Add X0, X31, 32
	119 Call Enumerator<Object>.MoveNext, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {129}
	124 Move X8, [X19+56]
	125 Move X1, [X31+48]
	126 Move X2, [X8+88]
	127 Move X0, X21
	128 Call List`1<Object>.Remove, X0, X1
	129 Move X21, X31
	130 Move W22, 7
	131 Move X8, [X19+56]
	132 Add X0, X31, 32
	133 Move X1, [X8+80]
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X21, 0
	136 JumpIfNotEqual {169}
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare W22, 0
	139 JumpIfNotEqual {156}
	140 Move X8, [X19+56]
	141 Move X0, [X8+8]
	142 Move W8, [X0+309]
	143 Move TEMP, X8
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {148}
	147 Call 0x1C5D684
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move X8, [X19+56]
	153 Move X0, X20
	154 Move X1, [X8+96]
	155 Call 0x28F92F0, X0
	156 Move X20, [X31+96]
	157 Move X19, [X31+104]
	158 Move X22, [X31+80]
	159 Move X21, [X31+88]
	160 Move X30, [X31+64]
	161 Move X23, [X31+72]
	162 Add X31, X31, 112
	163 Return 
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Move X0, X23
	168 Call 0x1C17F18
	169 Move X0, X21
	170 Call 0x1C17F18
	171 Move X22, X0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, X22
	174 Call 0x3EB2AD0
	175 Move X23, [X0]
	176 Call 0x3EB2AE0
	177 Move X23, X31
	178 Move X22, X0
	179 Move X8, [X19+56]
	180 Move X1, [X8+80]
	181 Add X0, X31, 32
	182 Call Enumerator<Object>.Dispose, X0
	183 Compare X23, 0
	184 JumpIfEqual {202}
	185 Move X0, X23
	186 Call 0x1C17F18
	187 Move X22, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X22
	190 Call 0x3EB2AD0
	191 Move X21, [X0]
	192 Call 0x3EB2AE0
	193 Move W22, W31
	194 Move X21, X31
	195 Move X22, X0
	196 Move X8, [X19+56]
	197 Move X1, [X8+80]
	198 Add X0, X31, 32
	199 Call Enumerator<Object>.Dispose, X0
	200 Compare X21, 0
	201 JumpIfNotEqual {204}
	202 Move X0, X22
	203 Call 0x1D2D690
	204 Move X0, X21
	205 Call 0x1C17F18
	206 Call 0x1991590

Method: System.Void RemoveDestroyedKeys(System.Collections.Generic.Dictionary`2<TKey, TValue> dictionary)

Disassembly:
	0x022A321C LDR X0, [X27]
	0x022A3220 LDR X8, [X0 + 0xB8]
	0x022A3224 LDR X2, [X8 + 0x18]
	0x022A3228 STRB W31, [X31 + 0x60]
	0x022A322C ADD X0, X31, 0x60
	0x022A3230 MOV X1, X31
	0x022A3234 MOV X3, X31
	0x022A3238 BL 0x39B1DB0
	0x022A323C LDRB W8, [X31 + 0x60]
	0x022A3240 STRB W8, [X31 + 0x98]
	0x022A3244 MOV X0, X25
	0x022A3248 MOV X1, X19
	0x022A324C MOV X2, X31
	0x022A3250 BL 0x3C54940
	0x022A3254 MOV X26, X31
	0x022A3258 MOVZ W28, 0x15
	0x022A325C ADD X0, X31, 0x98
	0x022A3260 MOV X1, X31
	0x022A3264 BL 0x39B1DB4
	0x022A3268 CBNZ X26, 0x22A33CC
	0x022A326C CMP W28, 0x15
	0x022A3270 B.EQ 0x22A3278
	0x022A3274 CBNZ W28, 0x22A32E0
	0x022A3278 LDR X0, [X27]
	0x022A327C LDR W8, [X0 + 0xE0]
	0x022A3280 CBNZ W8, 0x22A328C
	0x022A3284 BL 0x1C16DFC
	0x022A3288 LDR X0, [X27]
	0x022A328C LDR X8, [X0 + 0xB8]
	0x022A3290 LDR X2, [X8 + 0x8]
	0x022A3294 STRB W31, [X31 + 0x60]
	0x022A3298 ADD X0, X31, 0x60
	0x022A329C MOV X1, X31
	0x022A32A0 MOV X3, X31
	0x022A32A4 BL 0x39B1DB0
	0x022A32A8 LDRB W8, [X31 + 0x60]
	0x022A32AC LDR X1, [X31 + 0xB8]
	0x022A32B0 STRB W8, [X31 + 0x98]
	0x022A32B4 MOV X0, X25
	0x022A32B8 MOV X2, X31
	0x022A32BC BL 0x3C547E8
	0x022A32C0 MOV X25, X31
	0x022A32C4 MOV W26, W31
	0x022A32C8 MOVZ W28, 0x12
	0x022A32CC ADD X0, X31, 0x98
	0x022A32D0 MOV X1, X31
	0x022A32D4 BL 0x39B1DB4
	0x022A32D8 CBNZ X25, 0x22A33D4
	0x022A32DC CBNZ W26, 0x22A304C
	0x022A32E0 ADRP X8, 0x1E79000
	0x022A32E4 LDR X8, [X8 + 0x8A0]
	0x022A32E8 ADD X0, X31, 0xA8
	0x022A32EC LDR X1, [X8]
	0x022A32F0 BL 0x24A69BC
	0x022A32F4 CMP W28, 0x12
	0x022A32F8 B.EQ 0x22A3060
	0x022A32FC CBZ W28, 0x22A3060
	0x022A3300 B 0x22A3380
	0x022A3304 MOVZ W9, 0x50
	0x022A3308 ANDS W31, W8, W9, 0x0
	0x022A330C B.EQ 0x22A3348
	0x022A3310 LDR X0, [X25]
	0x022A3314 LDR W8, [X0 + 0xE0]
	0x022A3318 CBNZ W8, 0x22A3320
	0x022A331C BL 0x1C16DFC
	0x022A3320 LDR W9, [X31 + 0x1C]
	0x022A3324 MOVZ W8, 0x6
	0x022A3328 MOV X0, X24
	0x022A332C MOV W1, W31
	0x022A3330 MADD W4, W23, W8, W9
	0x022A3334 MOV W2, W31
	0x022A3338 MOV X3, X22
	0x022A333C MOV W5, W21
	0x022A3340 MOV X6, X31
	0x022A3344 BL 0x3C0ED80
	0x022A3348 MOV X0, X19
	0x022A334C MOV X1, X20
	0x022A3350 MOV X2, X31
	0x022A3354 BL 0x3C040F0
	0x022A3358 LDR X0, [X25]
	0x022A335C LDR W8, [X0 + 0xE0]
	0x022A3360 CBNZ W8, 0x22A3368
	0x022A3364 BL 0x1C16DFC
	0x022A3368 MOV X0, X20
	0x022A336C MOV X1, X31
	0x022A3370 BL 0x3C0FBB0
	0x022A3374 MOV X0, X24
	0x022A3378 MOV X1, X31
	0x022A337C BL 0x3C20C50
	0x022A3380 LDP X20, X19, [X31 + 0x160]
	0x022A3384 LDP X22, X21, [X31 + 0x150]
	0x022A3388 LDP X24, X23, [X31 + 0x140]
	0x022A338C LDP X26, X25, [X31 + 0x130]
	0x022A3390 LDP X28, X27, [X31 + 0x120]
	0x022A3394 LDP X29, X30, [X31 + 0x110]
	0x022A3398 LDP D9, D8, [X31 + 0x100]
	0x022A339C ADD X31, X31, 0x170
	0x022A33A0 RET
	0x022A33A4 BL 0x1C16F20
	0x022A33A8 BL 0x1C16F20
	0x022A33AC BL 0x1C16F20
	0x022A33B0 BL 0x1C16F20
	0x022A33B4 BL 0x1C16F20
	0x022A33B8 MOV X0, X26
	0x022A33BC BL 0x1C16F18
	0x022A33C0 MOV X0, X26
	0x022A33C4 BL 0x1C16F18
	0x022A33C8 BL 0x1C16F20
	0x022A33CC MOV X0, X26
	0x022A33D0 BL 0x1C16F18
	0x022A33D4 MOV X0, X25
	0x022A33D8 BL 0x1C16F18
	0x022A33DC MOV X26, X1
	0x022A33E0 CMP W26, 0x1
	0x022A33E4 MOV X28, X0
	0x022A33E8 B.NE 0x22A3408
	0x022A33EC MOV X0, X28
	0x022A33F0 BL 0x3EB1AD0
	0x022A33F4 LDR X25, [X0]
	0x022A33F8 BL 0x3EB1AE0
	0x022A33FC MOV W28, W31
	0x022A3400 MOVZ W26, 0x1
	0x022A3404 B 0x22A32CC
	0x022A3408 MOV X25, X31
	0x022A340C ADD X0, X31, 0x98
	0x022A3410 MOV X1, X31
	0x022A3414 BL 0x39B1DB4
	0x022A3418 CBZ X25, 0x22A3584
	0x022A341C MOV X0, X25
	0x022A3420 BL 0x1C16F18
	0x022A3424 MOV X26, X1
	0x022A3428 MOV X28, X0
	0x022A342C B 0x22A340C
	0x022A3430 B 0x22A357C
	0x022A3434 MOV X26, X1
	0x022A3438 CMP W26, 0x1
	0x022A343C MOV X28, X0
	0x022A3440 B.NE 0x22A3464
	0x022A3444 MOV X0, X28
	0x022A3448 BL 0x3EB1AD0
	0x022A344C LDR X8, [X0]
	0x022A3450 STR X8, [X31 + 0x10]
	0x022A3454 BL 0x3EB1AE0
	0x022A3458 LDR X26, [X31 + 0x10]
	0x022A345C MOV W28, W31
	0x022A3460 B 0x22A325C
	0x022A3464 STR X31, [X31 + 0x10]
	0x022A3468 ADD X0, X31, 0x98
	0x022A346C MOV X1, X31
	0x022A3470 BL 0x39B1DB4
	0x022A3474 LDR X8, [X31 + 0x10]
	0x022A3478 CBZ X8, 0x22A3584
	0x022A347C LDR X0, [X31 + 0x10]
	0x022A3480 BL 0x1C16F18
	0x022A3484 MOV X26, X1
	0x022A3488 MOV X28, X0
	0x022A348C B 0x22A3468
	0x022A3490 B 0x22A357C
	0x022A3494 B 0x22A357C
	0x022A3498 B 0x22A357C
	0x022A349C MOV X26, X1
	0x022A34A0 CMP W26, 0x1
	0x022A34A4 MOV X28, X0
	0x022A34A8 B.NE 0x22A34CC
	0x022A34AC MOV X0, X28
	0x022A34B0 BL 0x3EB1AD0
	0x022A34B4 LDR X8, [X0]
	0x022A34B8 STR X8, [X31 + 0x10]
	0x022A34BC BL 0x3EB1AE0
	0x022A34C0 LDR X26, [X31 + 0x10]
	0x022A34C4 MOV W28, W31
	0x022A34C8 B 0x22A31A0
	0x022A34CC STR X31, [X31 + 0x10]
	0x022A34D0 ADD X0, X31, 0x98
	0x022A34D4 MOV X1, X31
	0x022A34D8 BL 0x39B1DB4
	0x022A34DC LDR X8, [X31 + 0x10]
	0x022A34E0 CBZ X8, 0x22A3584
	0x022A34E4 LDR X0, [X31 + 0x10]
	0x022A34E8 BL 0x1C16F18
	0x022A34EC MOV X26, X1
	0x022A34F0 MOV X28, X0
	0x022A34F4 B 0x22A34D0
	0x022A34F8 B 0x22A357C
	0x022A34FC B 0x22A357C
	0x022A3500 B 0x22A357C
	0x022A3504 B 0x22A357C
	0x022A3508 B 0x22A357C
	0x022A350C MOV X26, X1
	0x022A3510 CMP W26, 0x1
	0x022A3514 MOV X28, X0
	0x022A3518 B.NE 0x22A353C
	0x022A351C MOV X0, X28
	0x022A3520 BL 0x3EB1AD0
	0x022A3524 LDR X8, [X0]
	0x022A3528 STR X8, [X31 + 0x10]
	0x022A352C BL 0x3EB1AE0
	0x022A3530 LDR X26, [X31 + 0x10]
	0x022A3534 MOV W28, W31
	0x022A3538 B 0x22A3134
	0x022A353C STR X31, [X31 + 0x10]
	0x022A3540 ADD X0, X31, 0x98
	0x022A3544 MOV X1, X31
	0x022A3548 BL 0x39B1DB4
	0x022A354C LDR X8, [X31 + 0x10]
	0x022A3550 CBZ X8, 0x22A3584
	0x022A3554 LDR X0, [X31 + 0x10]
	0x022A3558 BL 0x1C16F18
	0x022A355C MOV X26, X1
	0x022A3560 MOV X28, X0
	0x022A3564 B 0x22A3540
	0x022A3568 B 0x22A357C
	0x022A356C B 0x22A357C
	0x022A3570 B 0x22A357C
	0x022A3574 B 0x22A357C
	0x022A3578 B 0x22A357C
	0x022A357C MOV X26, X1
	0x022A3580 MOV X28, X0
	0x022A3584 CMP W26, 0x1
	0x022A3588 B.NE 0x22A35BC
	0x022A358C MOV X0, X28
	0x022A3590 BL 0x3EB1AD0
	0x022A3594 LDR X25, [X0]
	0x022A3598 BL 0x3EB1AE0
	0x022A359C ADRP X8, 0x1E79000
	0x022A35A0 LDR X8, [X8 + 0x8A0]
	0x022A35A4 ADD X0, X31, 0xA8
	0x022A35A8 LDR X1, [X8]
	0x022A35AC BL 0x24A69BC
	0x022A35B0 CBZ X25, 0x22A3060
	0x022A35B4 MOV X0, X25
	0x022A35B8 BL 0x1C16F18
	0x022A35BC MOV X25, X31
	0x022A35C0 B 0x22A35C8
	0x022A35C4 MOV X28, X0
	0x022A35C8 ADRP X8, 0x1E79000
	0x022A35CC LDR X8, [X8 + 0x8A0]
	0x022A35D0 LDR X1, [X8]
	0x022A35D4 ADD X0, X31, 0xA8
	0x022A35D8 BL 0x24A69BC
	0x022A35DC CBNZ X25, 0x22A35E8
	0x022A35E0 MOV X0, X28
	0x022A35E4 BL 0x1D2C690
	0x022A35E8 MOV X0, X25
	0x022A35EC BL 0x1C16F18
	0x022A35F0 BL 0x1990590
	0x022A35F4 STP D9, D8, [X31 - 0x70]!
	0x022A35F8 STP X29, X30, [X31 + 0x10]
	0x022A35FC STP X28, X27, [X31 + 0x20]
	0x022A3600 STP X26, X25, [X31 + 0x30]
	0x022A3604 STP X24, X23, [X31 + 0x40]
	0x022A3608 STP X22, X21, [X31 + 0x50]
	0x022A360C STP X20, X19, [X31 + 0x60]
	0x022A3610 ADD X29, X31, 0x10
	0x022A3614 SUB X31, X31, 0x110
	0x022A3618 MRS X8, 0xC000
	0x022A361C SUB X9, X29, 0x8
	0x022A3620 STUR X8, [X9 - 0x100]
	0x022A3624 LDR X8, [X8 + 0x28]
	0x022A3628 MOV X20, X4
	0x022A362C MOV X21, X3
	0x022A3630 MOV X19, X2
	0x022A3634 STUR X8, [X29 - 0x20]
	0x022A3638 STUR X3, [X29 - 0x28]
	0x022A363C LDR X27, [X4 + 0x38]
	0x022A3640 MOV X25, X1
	0x022A3644 MOV X26, X0
	0x022A3648 CBNZ X27, 0x22A372C
	0x022A364C ADRP X0, 0x1E50000
	0x022A3650 LDR X0, [X0 + 0xA28]
	0x022A3654 BL 0x1C16CF4
	0x022A3658 ADRP X0, 0x1E79000
	0x022A365C LDR X0, [X0 + 0x870]
	0x022A3660 BL 0x1C16CF4
	0x022A3664 ADRP X0, 0x1E54000
	0x022A3668 LDR X0, [X0 + 0x2C8]
	0x022A366C BL 0x1C16CF4
	0x022A3670 ADRP X0, 0x1E79000
	0x022A3674 LDR X0, [X0 + 0x878]
	0x022A3678 BL 0x1C16CF4
	0x022A367C ADRP X0, 0x1E79000
	0x022A3680 LDR X0, [X0 + 0x880]
	0x022A3684 BL 0x1C16CF4
	0x022A3688 ADRP X0, 0x1E79000
	0x022A368C LDR X0, [X0 + 0x888]
	0x022A3690 BL 0x1C16CF4
	0x022A3694 ADRP X0, 0x1E79000
	0x022A3698 LDR X0, [X0 + 0x890]
	0x022A369C BL 0x1C16CF4
	0x022A36A0 ADRP X0, 0x1E50000
	0x022A36A4 LDR X0, [X0 + 0x5A8]
	0x022A36A8 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-80], X8
	017 Move X8, [X8+40]
	018 Move X19, X1
	019 Move X20, X0
	020 Move [X29-8], X8
	021 Move X21, [X1+56]
	022 Compare X21, 0
	023 JumpIfNotEqual {33}
	024 Move X0, 0x1E51000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X21, [X19+56]
	028 Compare X21, 0
	029 JumpIfNotEqual {33}
	030 Move X0, X19
	031 Call 0x1C5D6E0
	032 Move X21, [X19+56]
	033 Move X0, [X21+40]
	034 Move X8, [X21+64]
	035 Move W27, [X0+252]
	036 Move W9, [X0+309]
	037 Move W24, [X8+252]
	038 Move W8, W27
	039 Move TEMP, X9
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Call 0x1C5D684
	044 Move W8, [X0+252]
	045 Move X21, [X19+56]
	046 Add W8, W8, 16
	047 Add X8, X8, 15
	048 Add X9, X31, 0
	049 And X8, X8, 0x1FFFFFFFF
	050 Subtract X22, X9, X8
	051 Add X31, X22, 0
	052 Add X9, X27, 15
	053 Add X8, X31, 0
	054 And X9, X9, 0x1FFFFFFFF
	055 Subtract X28, X8, X9
	056 Add X31, X28, 0
	057 Add X10, X24, 15
	058 Add X8, X31, 0
	059 And X26, X10, 0x1FFFFFFFF
	060 Subtract X25, X8, X26
	061 Add X31, X25, 0
	062 Add X8, X31, 0
	063 Subtract X23, X8, X9
	064 Add X31, X23, 0
	065 Move X0, X23
	066 Move W1, W31
	067 Move X2, X27
	068 Call 0x3EB2B10
	069 Add X8, X31, 0
	070 Subtract X26, X8, X26
	071 Add X31, X26, 0
	072 Move X0, X26
	073 Move W1, W31
	074 Move X2, X24
	075 Call 0x3EB2B10
	076 Move [X29-48], X31
	077 Move [X29-40], X31
	078 Move [X29-32], X31
	079 Move X0, [X21+8]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X8, [X19+56]
	091 Move X0, [X8]
	092 Call 0x28F91C4
	093 Compare X20, 0
	094 JumpIfEqual {272}
	095 Move X8, [X19+56]
	096 Move X21, X0
	097 Subtract X3, X29, 24
	098 Move X2, X20
	099 Move X1, [X8+32]
	100 Move X4, X28
	101 Move X0, [X1]
	102 Move [X29-24], X28
	103 Move X8, [X1+16]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X0, X23
	106 Move X1, X28
	107 Move X2, X27
	108 Call 0x3EB2AC0
	109 Move X28, 0x1E51000
	110 Move X28, [X28+1432]
	111 Move X8, [X19+56]
	112 Move X1, [X8+104]
	113 Move X8, [X1]
	114 Move X0, X23
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {178}
	120 Move X8, [X19+56]
	121 Move X1, [X8+48]
	122 Move X0, [X1]
	123 Move [X29-24], X25
	124 Move X8, [X1+16]
	125 Subtract X3, X29, 24
	126 Move X2, X23
	127 Move X4, X25
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X0, X26
	130 Move X1, X25
	131 Move X2, X24
	132 Call 0x3EB2AC0
	133 Move X8, [X19+56]
	134 Move X1, [X8+72]
	135 Move X0, [X1]
	136 Move X8, [X1+16]
	137 Subtract X4, X29, 16
	138 Move X2, X26
	139 Move X3, X31
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X0, [X28]
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X27
	148 Move X1, X31
	149 Move X2, X31
	150 Call Object.op_Equality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {111}
	155 Compare X21, 0
	156 JumpIfEqual {270}
	157 Move X9, [X19+56]
	158 Move W10, [X21+28]
	159 Move X8, [X21+16]
	160 Move X9, [X9+96]
	161 Add W10, W10, 1
	162 Move [X21+28], W10
	163 Compare X8, 0
	164 JumpIfEqual {271}
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Move W11, [X8+24]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Add W9, W10, 1
	169 Add X8, X8, X10
	170 Move [X21+24], W9
	171 Move [X8+32], X27
	172 Move X8, [X9+32]
	173 Move X8, [X8+192]
	174 Move X2, [X8+112]
	175 Move X0, X21
	176 Move X1, X27
	177 Call List`1<Object>.AddWithResize, X0, X1
	178 Move X25, X31
	179 Move X8, [X19+56]
	180 Move X0, [X8+40]
	181 Move W9, [X0+309]
	182 Move TEMP, X9
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {188}
	186 Call 0x1C5D684
	187 Move X8, [X19+56]
	188 Move X1, [X8+112]
	189 Move X2, X22
	190 Move X3, X23
	191 Move X4, X31
	192 Move X5, X31
	193 Call 0x1C18728
	194 Compare X25, 0
	195 JumpIfNotEqual {273}
	196 Compare X21, 0
	197 JumpIfEqual {272}
	198 Move X8, [X19+56]
	199 Move X0, X21
	200 Move X1, [X8+120]
	201 Subtract X8, X29, 72
	202 Call List`1<Object>.GetEnumerator, X0
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 Move [X29-48], V0
	206 Move [X29-32], X8
	207 Move X8, [X19+56]
	208 Move X1, [X8+160]
	209 Subtract X0, X29, 48
	210 Call Enumerator<Object>.MoveNext, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {225}
	215 Move X8, [X19+56]
	216 Move X1, [X8+152]
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 Move X0, [X1]
	219 Move [X29-24], X8
	220 Move X8, [X1+16]
	221 Subtract X3, X29, 24
	222 Subtract X4, X29, 72
	223 Move X2, X20
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Move X20, X31
	226 Move W22, 7
	227 Move X8, [X19+56]
	228 Subtract X0, X29, 48
	229 Move X1, [X8+168]
	230 Call Enumerator<Object>.Dispose, X0
	231 Compare X20, 0
	232 JumpIfNotEqual {275}
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Compare W22, 0
	235 JumpIfNotEqual {252}
	236 Move X8, [X19+56]
	237 Move X0, [X8+8]
	238 Move W8, [X0+309]
	239 Move TEMP, X8
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {244}
	243 Call 0x1C5D684
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X8, [X19+56]
	249 Move X0, X21
	250 Move X1, [X8+176]
	251 Call 0x28F92F0, X0
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 Move X8, [X8+40]
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Add X31, X29, 0
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X22, [X31+64]
	260 Move X21, [X31+72]
	261 Move X24, [X31+48]
	262 Move X23, [X31+56]
	263 Move X26, [X31+32]
	264 Move X25, [X31+40]
	265 Move X28, [X31+16]
	266 Move X27, [X31+24]
	267 Move X29, [X31+96]
	268 Move X30, [X31+104]
	269 Return 
	270 Call 0x1C17F20
	271 Call 0x1C17F20
	272 Call 0x1C17F20
	273 Move X0, X25
	274 Call 0x1C17F18
	275 Move X0, X20
	276 Call 0x1C17F18
	277 Call 0x3EB2B20
	278 Move X24, X0
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X0, X24
	281 Call 0x3EB2AD0
	282 Move X25, [X0]
	283 Call 0x3EB2AE0
	284 Move X25, X31
	285 Move X24, X0
	286 Move X8, [X19+56]
	287 Move X0, [X8+40]
	288 Move W9, [X0+309]
	289 Move TEMP, X9
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfEqual {295}
	293 Call 0x1C5D684
	294 Move X8, [X19+56]
	295 Move X1, [X8+112]
	296 Move X2, X22
	297 Move X3, X23
	298 Move X4, X31
	299 Move X5, X31
	300 Call 0x1C18728
	301 Compare X25, 0
	302 JumpIfEqual {320}
	303 Move X0, X25
	304 Call 0x1C17F18
	305 Move X24, X0
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X0, X24
	308 Call 0x3EB2AD0
	309 Move X20, [X0]
	310 Call 0x3EB2AE0
	311 Move W22, W31
	312 Move X20, X31
	313 Move X24, X0
	314 Move X8, [X19+56]
	315 Move X1, [X8+168]
	316 Subtract X0, X29, 48
	317 Call Enumerator<Object>.Dispose, X0
	318 Compare X20, 0
	319 JumpIfNotEqual {322}
	320 Move X0, X24
	321 Call 0x1D2D690
	322 Move X0, X20
	323 Call 0x1C17F18
	324 Call 0x1991590

