Type: Unity.XR.CoreUtils.Datums.IntDatum

Method: System.Void SetValueRounded(System.Single value)

Disassembly:
	0x03B32194 LDR W8, [X0 + 0xE0]
	0x03B32198 CBNZ W8, 0x3B321A0
	0x03B3219C BL 0x1C16DFC
	0x03B321A0 MOV X0, X31
	0x03B321A4 BL 0x3C018E4
	0x03B321A8 TBZ X0, 0x0, 0x3B321D8
	0x03B321AC MOV X0, X20
	0x03B321B0 MOV X1, X31
	0x03B321B4 BL 0x3C32454
	0x03B321B8 TBZ X0, 0x0, 0x3B321D8
	0x03B321BC LDR X8, [X19 + 0x10]
	0x03B321C0 LDR V0, [X19]
	0x03B321C4 ADD X0, X31, 0x0
	0x03B321C8 MOV X1, X31
	0x03B321CC STR X8, [X31 + 0x10]
	0x03B321D0 STR V0, [X31]
	0x03B321D4 BL 0x3BB9958
	0x03B321D8 LDP X20, X19, [X31 + 0x60]
	0x03B321DC LDP X22, X21, [X31 + 0x50]
	0x03B321E0 LDP X30, X23, [X31 + 0x40]
	0x03B321E4 ADD X31, X31, 0x70
	0x03B321E8 RET
	0x03B321EC LDR X9, [X0 + 0xD0]
	0x03B321F0 LDR V0, [X0 + 0xC]
	0x03B321F4 STR X9, [X8 + 0x10]
	0x03B321F8 STR V0, [X8]
	0x03B321FC RET
	0x03B32200 SUB X31, X31, 0x30
	0x03B32204 STR X30, [X31 + 0x20]
	0x03B32208 LDR X8, [X1 + 0x10]
	0x03B3220C LDR V0, [X1]
	0x03B32210 ADD X1, X0, 0xC0
	0x03B32214 ADD X2, X31, 0x0
	0x03B32218 STR X8, [X31 + 0x10]
	0x03B3221C STR V0, [X31]
	0x03B32220 BL 0x3B32104
	0x03B32224 LDR X30, [X31 + 0x20]
	0x03B32228 ADD X31, X31, 0x30
	0x03B3222C RET
	0x03B32230 LDR X9, [X0 + 0xE8]
	0x03B32234 LDUR V0, [X0 + 0xD8]
	0x03B32238 STR X9, [X8 + 0x10]
	0x03B3223C STR V0, [X8]
	0x03B32240 RET
	0x03B32244 SUB X31, X31, 0x30
	0x03B32248 STR X30, [X31 + 0x20]
	0x03B3224C LDR X8, [X1 + 0x10]
	0x03B32250 LDR V0, [X1]
	0x03B32254 ADD X1, X0, 0xD8
	0x03B32258 ADD X2, X31, 0x0
	0x03B3225C STR X8, [X31 + 0x10]
	0x03B32260 STR V0, [X31]
	0x03B32264 BL 0x3B32104
	0x03B32268 LDR X30, [X31 + 0x20]
	0x03B3226C ADD X31, X31, 0x30
	0x03B32270 RET
	0x03B32274 LDR X9, [X0 + 0x100]
	0x03B32278 LDR V0, [X0 + 0xF]
	0x03B3227C STR X9, [X8 + 0x10]
	0x03B32280 STR V0, [X8]
	0x03B32284 RET
	0x03B32288 SUB X31, X31, 0x30
	0x03B3228C STR X30, [X31 + 0x20]
	0x03B32290 LDR X8, [X1 + 0x10]
	0x03B32294 LDR V0, [X1]
	0x03B32298 ADD X1, X0, 0xF0
	0x03B3229C ADD X2, X31, 0x0
	0x03B322A0 STR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8B1000
	007 Move W8, [X20+1999]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x628000
	015 Move X0, [X0+3872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1999], W8
	019 Move X20, 0x8A8000
	020 Move W8, [X20+1495]
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0x5C2000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1495], W8
	028 Move X8, 0x5C2000
	029 Move X8, [X8+1448]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X20, 0x628000
	036 Move X20, [X20+3872]
	037 NotImplemented "Instruction FCVT not yet implemented."
	038 Add X0, X31, 24
	039 Move V0, V9
	040 Call 0x3EB2C00
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move D1, -0.5
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move V0, [X31+24]
	045 Move D1, -1
	046 Move D1, 0.5
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move V0, [X31+24]
	049 Move D1, 1
	050 NotImplemented "Instruction FCVTZS not yet implemented."
	051 Add D1, D0, D1
	052 And X31, X8, 1
	053 NotImplemented "Instruction FCSEL not yet implemented."
	054 Add D0, D9, D1
	055 NotImplemented "Instruction FRINTP not yet implemented."
	056 Add D0, D9, D1
	057 NotImplemented "Instruction FRINTM not yet implemented."
	058 Move X9, 0x7FF00000
	059 Move X2, [X20]
	060 Move X0, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+16]
	064 Move D1, X9
	065 NotImplemented "Instruction FCVTZS not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move W9, 0x80000000
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move D9, [X31+48]
	070 Move D8, [X31+56]
	071 Call 0x29AF370, X0, X1
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B322A4 STR V0, [X31]
	0x03B322A8 BL 0x3B32104
	0x03B322AC LDR X30, [X31 + 0x20]
	0x03B322B0 ADD X31, X31, 0x30
	0x03B322B4 RET
	0x03B322B8 ADD X9, X0, 0x108
	0x03B322BC LDR X10, [X9 + 0x10]
	0x03B322C0 LDR V0, [X9]
	0x03B322C4 STR X10, [X8 + 0x10]
	0x03B322C8 STR V0, [X8]
	0x03B322CC RET
	0x03B322D0 SUB X31, X31, 0x30
	0x03B322D4 STR X30, [X31 + 0x20]
	0x03B322D8 LDR X8, [X1 + 0x10]
	0x03B322DC LDR V0, [X1]
	0x03B322E0 ADD X1, X0, 0x108
	0x03B322E4 ADD X2, X31, 0x0
	0x03B322E8 STR X8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8B1000
	006 Move X21, 0x628000
	007 Move W8, [X20+2000]
	008 Move X21, [X21+3880]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x628000
	015 Move X0, [X0+3880]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2000], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x29AF46C, X0
	026 Return 

