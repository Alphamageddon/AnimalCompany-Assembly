Type: Unity.XR.CoreUtils.TypeExtensions

Method: System.Void GetAssignableTypes(System.Type type, System.Collections.Generic.List`1<System.Type> list, System.Func`2<System.Type, System.Boolean> predicate = null)

Disassembly:
	0x03B25BD4 BL 0x1C16F18
	0x03B25BD8 BL 0x1C16F20
	0x03B25BDC BL 0x1C16F20
	0x03B25BE0 BL 0x1C16F20
	0x03B25BE4 BL 0x1C16F20
	0x03B25BE8 ADRP X0, 0x634000
	0x03B25BEC LDR X0, [X0 + 0xC80]
	0x03B25BF0 BL 0x1C16D08
	0x03B25BF4 MOV X1, X23
	0x03B25BF8 MOV X2, X31
	0x03B25BFC BL 0x321EFD0
	0x03B25C00 MOV X20, X0
	0x03B25C04 ADRP X0, 0x5D6000
	0x03B25C08 LDR X0, [X0 + 0x578]
	0x03B25C0C BL 0x1C16D08
	0x03B25C10 BL 0x1C16F10
	0x03B25C14 MOV X21, X0
	0x03B25C18 MOV X1, X20
	0x03B25C1C MOV X2, X31
	0x03B25C20 BL 0x3314A68
	0x03B25C24 ADRP X0, 0x634000
	0x03B25C28 LDR X0, [X0 + 0xC78]
	0x03B25C2C BL 0x1C16D08
	0x03B25C30 MOV X1, X0
	0x03B25C34 MOV X0, X21
	0x03B25C38 BL 0x1C16DEC
	0x03B25C3C MOV X0, X25
	0x03B25C40 BL 0x1C16F18
	0x03B25C44 BL 0x1C16F20
	0x03B25C48 BL 0x1C16F20
	0x03B25C4C MOV X0, X20
	0x03B25C50 BL 0x1C16F18
	0x03B25C54 MOV X24, X1
	0x03B25C58 MOV X23, X0
	0x03B25C5C B 0x3B25BB8
	0x03B25C60 B 0x3B25D00
	0x03B25C64 B 0x3B25D00
	0x03B25C68 B 0x3B25CA4
	0x03B25C6C B 0x3B25D00
	0x03B25C70 B 0x3B25D00
	0x03B25C74 B 0x3B25D00
	0x03B25C78 B 0x3B25D00
	0x03B25C7C B 0x3B25D00
	0x03B25C80 B 0x3B25D00
	0x03B25C84 B 0x3B25D00
	0x03B25C88 B 0x3B25D00
	0x03B25C8C B 0x3B25D00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x8BE000
	008 Move X23, 0x635000
	009 Move W8, [X22+1873]
	010 Move X23, [X23+3072]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x635000
	019 Move X0, [X0+3080]
	020 Call 0x1C17CF4
	021 Move X0, 0x635000
	022 Move X0, [X0+3088]
	023 Call 0x1C17CF4
	024 Move X0, 0x635000
	025 Move X0, [X0+3072]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1873], W8
	029 Move X0, [X23]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X22, X0
	033 Call Object..ctor, X0
	034 Compare X22, 0
	035 JumpIfEqual {59}
	036 Move X8, 0x635000
	037 Move X8, [X8+3080]
	038 Move [X22+16], X21
	039 Move [X22+24], X20
	040 Move [X22+32], X19
	041 Move X19, 0x635000
	042 Move X0, [X8]
	043 Move X19, [X19+3088]
	044 Call 0x1C17F10
	045 Move X2, [X19]
	046 Move X1, X22
	047 Move X3, X31
	048 Move X19, X0
	049 Call Action`1<Object>..ctor, X0, X1, X2
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Call ReflectionUtils.ForEachType, X0
	058 Return 
	059 Call 0x1C17F20

Method: System.Void GetImplementationsOfInterface(System.Type type, System.Collections.Generic.List`1<System.Type> list)

Disassembly:
	0x03B25E44 MOV X0, X20
	0x03B25E48 LDR X9, [X8 + 0x818]
	0x03B25E4C LDR X1, [X8 + 0x820]
	0x03B25E50 BLR X9
	0x03B25E54 MOV X20, X0
	0x03B25E58 B 0x3B25DE8
	0x03B25E5C MOV X21, X31
	0x03B25E60 MOV X0, X21
	0x03B25E64 LDP X20, X19, [X31 + 0x20]
	0x03B25E68 LDP X22, X21, [X31 + 0x10]
	0x03B25E6C LDR X30, [X31], #0x30
	0x03B25E70 RET
	0x03B25E74 BL 0x1C16F20
	0x03B25E78 STP X30, X27, [X31 - 0x50]!
	0x03B25E7C STP X26, X25, [X31 + 0x10]
	0x03B25E80 STP X24, X23, [X31 + 0x20]
	0x03B25E84 STP X22, X21, [X31 + 0x30]
	0x03B25E88 STP X20, X19, [X31 + 0x40]
	0x03B25E8C ADRP X20, 0x8BD000
	0x03B25E90 LDRB W8, [X20 + 0x75B]
	0x03B25E94 MOV X19, X0
	0x03B25E98 TBNZ X8, 0x0, 0x3B25EE0
	0x03B25E9C ADRP X0, 0x5CE000
	0x03B25EA0 LDR X0, [X0 + 0xAC8]
	0x03B25EA4 BL 0x1C16CF4
	0x03B25EA8 ADRP X0, 0x634000
	0x03B25EAC LDR X0, [X0 + 0xC38]
	0x03B25EB0 BL 0x1C16CF4
	0x03B25EB4 ADRP X0, 0x5F7000
	0x03B25EB8 LDR X0, [X0 + 0xA40]
	0x03B25EBC BL 0x1C16CF4
	0x03B25EC0 ADRP X0, 0x5CE000
	0x03B25EC4 LDR X0, [X0 + 0x838]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8BE000
	006 Move W8, [X21+1874]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x635000
	014 Move X0, [X0+3128]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1874], W8
	018 Compare X20, 0
	019 JumpIfEqual {48}
	020 Move X0, X20
	021 Move X1, X31
	022 Call Type.get_IsInterface, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {43}
	027 Move X8, 0x635000
	028 Move X8, [X8+3128]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call TypeExtensions.GetAssignableTypes, X0, X1, X2
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void GetExtensionsOfClass(System.Type type, System.Collections.Generic.List`1<System.Type> list)

Disassembly:
	0x03B25EC8 BL 0x1C16CF4
	0x03B25ECC ADRP X0, 0x5D0000
	0x03B25ED0 LDR X0, [X0 + 0x260]
	0x03B25ED4 BL 0x1C16CF4
	0x03B25ED8 MOVZ W8, 0x1
	0x03B25EDC STRB W8, [X20 + 0x75B]
	0x03B25EE0 CBZ X19, 0x3B26060
	0x03B25EE4 LDR X8, [X19]
	0x03B25EE8 MOV X0, X19
	0x03B25EEC LDP X9, X1, [X8 + 0x1A8]
	0x03B25EF0 BLR X9
	0x03B25EF4 CBZ X0, 0x3B26060
	0x03B25EF8 MOVZ W1, 0x2B
	0x03B25EFC MOVZ W2, 0x2E
	0x03B25F00 MOV X3, X31
	0x03B25F04 BL 0x32296D0
	0x03B25F08 LDR X8, [X19]
	0x03B25F0C MOV X20, X0
	0x03B25F10 MOV X0, X19
	0x03B25F14 LDR X9, [X8 + 0x3C8]
	0x03B25F18 LDR X1, [X8 + 0x3D0]
	0x03B25F1C BLR X9
	0x03B25F20 TBZ X0, 0x0, 0x3B26040
	0x03B25F24 CBZ X20, 0x3B26060
	0x03B25F28 MOVZ W1, 0x60
	0x03B25F2C MOV X0, X20
	0x03B25F30 MOV W2, W31
	0x03B25F34 MOV X3, X31
	0x03B25F38 BL 0x3229AE8
	0x03B25F3C CBZ X0, 0x3B26060
	0x03B25F40 LDR W8, [X0 + 0x18]
	0x03B25F44 CBZ W8, 0x3B2605C
	0x03B25F48 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8BE000
	006 Move W8, [X21+1875]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x635000
	014 Move X0, [X0+3128]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1875], W8
	018 Compare X20, 0
	019 JumpIfEqual {48}
	020 Move X0, X20
	021 Move X1, X31
	022 Call Type.get_IsClass, X0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {43}
	027 Move X8, 0x635000
	028 Move X8, [X8+3128]
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call TypeExtensions.GetAssignableTypes, X0, X1, X2
	042 Return 
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void GetGenericInterfaces(System.Type type, System.Type genericInterface, System.Collections.Generic.List`1<System.Type> interfaces)

Disassembly:
	0x03B25F4C LDR X20, [X0 + 0x20]
	0x03B25F50 MOV X0, X19
	0x03B25F54 LDR X9, [X8 + 0x468]
	0x03B25F58 LDR X1, [X8 + 0x470]
	0x03B25F5C BLR X9
	0x03B25F60 CBZ X0, 0x3B26060
	0x03B25F64 ADRP X8, 0x5CE000
	0x03B25F68 LDR X22, [X0 + 0x18]
	0x03B25F6C LDR X8, [X8 + 0xAC8]
	0x03B25F70 MOV X19, X0
	0x03B25F74 MOV W1, W22
	0x03B25F78 LDR X0, [X8]
	0x03B25F7C BL 0x1C16D6C
	0x03B25F80 CMP W22, 0x1
	0x03B25F84 MOV X21, X0
	0x03B25F88 B.LT 0x3B25FEC
	0x03B25F8C ADRP X27, 0x634000
	0x03B25F90 LDR X27, [X27 + 0xC38]
	0x03B25F94 MOV X23, X31
	0x03B25F98 AND X24, X22, 0x0
	0x03B25F9C ADD X25, X19, 0x20
	0x03B25FA0 ADD X26, X21, 0x20
	0x03B25FA4 LDR W8, [X19 + 0x18]
	0x03B25FA8 CMP X23, X8
	0x03B25FAC B.CS 0x3B2605C
	0x03B25FB0 LDR X0, [X27]
	0x03B25FB4 LDR X22, [X25, X23, LSL #3]
	0x03B25FB8 LDR W8, [X0 + 0xE0]
	0x03B25FBC CBNZ W8, 0x3B25FC4
	0x03B25FC0 BL 0x1C16DFC
	0x03B25FC4 MOV X0, X22
	0x03B25FC8 BL 0x3B25E78
	0x03B25FCC CBZ X21, 0x3B26060
	0x03B25FD0 LDR W8, [X21 + 0x18]
	0x03B25FD4 CMP X23, X8
	0x03B25FD8 B.CS 0x3B2605C
	0x03B25FDC STR X0, [X26, X23, LSL #3]
	0x03B25FE0 ADD X23, X23, 0x1
	0x03B25FE4 CMP X24, X23
	0x03B25FE8 B.NE 0x3B25FA4
	0x03B25FEC ADRP X8, 0x5CE000
	0x03B25FF0 LDR X8, [X8 + 0x838]
	0x03B25FF4 MOV X1, X21
	0x03B25FF8 MOV X2, X31
	0x03B25FFC LDR X0, [X8]
	0x03B26000 BL 0x3227FF8
	0x03B26004 ADRP X8, 0x5F6000
	0x03B26008 ADRP X9, 0x5CF000
	0x03B2600C LDR X8, [X8 + 0xA40]
	0x03B26010 LDR X9, [X9 + 0x260]
	0x03B26014 MOV X2, X0
	0x03B26018 MOV X0, X20
	0x03B2601C LDR X1, [X8]
	0x03B26020 LDR X3, [X9]
	0x03B26024 LDP X20, X19, [X31 + 0x40]
	0x03B26028 LDP X22, X21, [X31 + 0x30]
	0x03B2602C LDP X24, X23, [X31 + 0x20]
	0x03B26030 LDP X26, X25, [X31 + 0x10]
	0x03B26034 MOV X4, X31
	0x03B26038 LDP X30, X27, [X31], #0x50
	0x03B2603C B 0x32277C4
	0x03B26040 MOV X0, X20
	0x03B26044 LDP X20, X19, [X31 + 0x40]
	0x03B26048 LDP X22, X21, [X31 + 0x30]
	0x03B2604C LDP X24, X23, [X31 + 0x20]
	0x03B26050 LDP X26, X25, [X31 + 0x10]
	0x03B26054 LDP X30, X27, [X31], #0x50
	0x03B26058 RET
	0x03B2605C BL 0x1C16F28
	0x03B26060 BL 0x1C16F20
	0x03B26064 STP X30, X27, [X31 - 0x50]!
	0x03B26068 STP X26, X25, [X31 + 0x10]
	0x03B2606C STP X24, X23, [X31 + 0x20]
	0x03B26070 STP X22, X21, [X31 + 0x30]
	0x03B26074 STP X20, X19, [X31 + 0x40]
	0x03B26078 ADRP X20, 0x8BC000
	0x03B2607C LDRB W8, [X20 + 0x75C]
	0x03B26080 MOV X19, X0
	0x03B26084 TBNZ X8, 0x0, 0x3B260CC
	0x03B26088 ADRP X0, 0x5CD000
	0x03B2608C LDR X0, [X0 + 0xAC8]
	0x03B26090 BL 0x1C16CF4
	0x03B26094 ADRP X0, 0x633000
	0x03B26098 LDR X0, [X0 + 0xC38]
	0x03B2609C BL 0x1C16CF4
	0x03B260A0 ADRP X0, 0x5F6000
	0x03B260A4 LDR X0, [X0 + 0xA40]
	0x03B260A8 BL 0x1C16CF4
	0x03B260AC ADRP X0, 0x5CD000
	0x03B260B0 LDR X0, [X0 + 0x838]
	0x03B260B4 BL 0x1C16CF4
	0x03B260B8 ADRP X0, 0x5CF000
	0x03B260BC LDR X0, [X0 + 0x260]
	0x03B260C0 BL 0x1C16CF4
	0x03B260C4 MOVZ W8, 0x1
	0x03B260C8 STRB W8, [X20 + 0x75C]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x8BE000
	011 Move W8, [X22+1876]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x5D9000
	020 Move X0, [X0+2360]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CF000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1876], W8
	027 Compare X21, 0
	028 JumpIfEqual {113}
	029 Move X8, [X21]
	030 Move X0, X21
	031 Move X9, [X8+2136]
	032 Move X1, [X8+2144]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X0, 0
	035 JumpIfEqual {113}
	036 Move W8, [X0+24]
	037 Move X21, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X25, 0x5CF000
	040 Move X26, 0x5D9000
	041 Move X25, [X25+1728]
	042 Move X26, [X26+2360]
	043 Move W24, W31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X21, W24
	046 Move X22, [X8+32]
	047 Compare X22, 0
	048 JumpIfEqual {113}
	049 Move X8, [X22]
	050 Move X0, X22
	051 Move X9, [X8+968]
	052 Move X1, [X8+976]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {100}
	058 Move X8, [X22]
	059 Move X0, X22
	060 Move X9, [X8+1096]
	061 Move X1, [X8+1104]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X25]
	064 Move X23, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X23
	071 Move X1, X20
	072 Move X2, X31
	073 Call Type.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {100}
	078 Compare X19, 0
	079 JumpIfEqual {113}
	080 Move W10, [X19+28]
	081 Move X8, [X19+16]
	082 Move X9, [X26]
	083 Add W10, W10, 1
	084 Move [X19+28], W10
	085 Compare X8, 0
	086 JumpIfEqual {113}
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Move W11, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W9, W10, 1
	091 Add X8, X8, X10
	092 Move [X19+24], W9
	093 Move [X8+32], X22
	094 Move X8, [X9+32]
	095 Move X0, X19
	096 Move X1, X22
	097 Move X8, [X8+192]
	098 Move X2, [X8+112]
	099 Call List`1<Object>.AddWithResize, X0, X1
	100 Move W8, [X21+24]
	101 Add W24, W24, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move X30, [X31+80]
	112 Return 
	113 Call 0x1C17F20
	114 Call 0x1C17F28

Method: System.Reflection.PropertyInfo GetPropertyRecursively(System.Type type, System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x03B260CC CBZ X19, 0x3B2624C
	0x03B260D0 LDR X8, [X19]
	0x03B260D4 MOV X0, X19
	0x03B260D8 LDP X9, X1, [X8 + 0x1A8]
	0x03B260DC BLR X9
	0x03B260E0 CBZ X0, 0x3B2624C
	0x03B260E4 MOVZ W1, 0x2B
	0x03B260E8 MOVZ W2, 0x2E
	0x03B260EC MOV X3, X31
	0x03B260F0 BL 0x32296D0
	0x03B260F4 LDR X8, [X19]
	0x03B260F8 MOV X20, X0
	0x03B260FC MOV X0, X19
	0x03B26100 LDR X9, [X8 + 0x3C8]
	0x03B26104 LDR X1, [X8 + 0x3D0]
	0x03B26108 BLR X9
	0x03B2610C TBZ X0, 0x0, 0x3B2622C
	0x03B26110 CBZ X20, 0x3B2624C
	0x03B26114 MOVZ W1, 0x60
	0x03B26118 MOV X0, X20
	0x03B2611C MOV W2, W31
	0x03B26120 MOV X3, X31
	0x03B26124 BL 0x3229AE8
	0x03B26128 CBZ X0, 0x3B2624C
	0x03B2612C LDR W8, [X0 + 0x18]
	0x03B26130 CBZ W8, 0x3B26248
	0x03B26134 LDR X8, [X19]
	0x03B26138 LDR X20, [X0 + 0x20]
	0x03B2613C MOV X0, X19
	0x03B26140 LDR X9, [X8 + 0x468]
	0x03B26144 LDR X1, [X8 + 0x470]
	0x03B26148 BLR X9
	0x03B2614C CBZ X0, 0x3B2624C
	0x03B26150 ADRP X8, 0x5CD000
	0x03B26154 LDR X22, [X0 + 0x18]
	0x03B26158 LDR X8, [X8 + 0xAC8]
	0x03B2615C MOV X19, X0
	0x03B26160 MOV W1, W22
	0x03B26164 LDR X0, [X8]
	0x03B26168 BL 0x1C16D6C
	0x03B2616C CMP W22, 0x1
	0x03B26170 MOV X21, X0
	0x03B26174 B.LT 0x3B261D8
	0x03B26178 ADRP X27, 0x633000
	0x03B2617C LDR X27, [X27 + 0xC38]
	0x03B26180 MOV X23, X31
	0x03B26184 AND X24, X22, 0x0
	0x03B26188 ADD X25, X21, 0x20
	0x03B2618C ADD X26, X19, 0x20
	0x03B26190 LDR W8, [X19 + 0x18]
	0x03B26194 CMP X23, X8
	0x03B26198 B.CS 0x3B26248
	0x03B2619C LDR X0, [X27]
	0x03B261A0 LDR X22, [X26, X23, LSL #3]
	0x03B261A4 LDR W8, [X0 + 0xE0]
	0x03B261A8 CBNZ W8, 0x3B261B0
	0x03B261AC BL 0x1C16DFC
	0x03B261B0 MOV X0, X22
	0x03B261B4 BL 0x3B26250
	0x03B261B8 CBZ X21, 0x3B2624C
	0x03B261BC LDR W8, [X21 + 0x18]
	0x03B261C0 CMP X23, X8
	0x03B261C4 B.CS 0x3B26248
	0x03B261C8 STR X0, [X25, X23, LSL #3]
	0x03B261CC ADD X23, X23, 0x1
	0x03B261D0 CMP X24, X23
	0x03B261D4 B.NE 0x3B26190
	0x03B261D8 ADRP X8, 0x5CD000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x5CE000
	012 Move X22, 0x634000
	013 Move X21, [X21+1728]
	014 Move X22, [X22+3128]
	015 Move W19, W2
	016 Move X20, X1
	017 Move X23, X0
	018 Move X26, 0x8BD000
	019 Move W27, 1
	020 Move W8, [X26+1877]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, X22
	026 Call 0x1C17CF4
	027 Move X0, X21
	028 Call 0x1C17CF4
	029 Move [X26+1877], W27
	030 Compare X23, 0
	031 JumpIfEqual {89}
	032 Move X0, X23
	033 Move X1, X20
	034 Move W2, W19
	035 Move X3, X31
	036 Call Type.GetProperty, X0, X1, X2
	037 Move X1, X31
	038 Move X2, X31
	039 Move X24, X0
	040 Call PropertyInfo.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {77}
	045 Move X8, [X23]
	046 Move X0, X23
	047 Move X9, [X8+2072]
	048 Move X1, [X8+2080]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X21]
	051 Move X25, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X25
	058 Move X1, X31
	059 Move X2, X31
	060 Call Type.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {77}
	065 Move X8, [X23]
	066 Move X0, X23
	067 Move X9, [X8+2072]
	068 Move X1, [X8+2080]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X22]
	071 Move X23, X0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {20}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X0, X24
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Move X27, [X31+88]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Reflection.FieldInfo GetFieldRecursively(System.Type type, System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x03B261DC LDR X8, [X8 + 0x838]
	0x03B261E0 MOV X1, X21
	0x03B261E4 MOV X2, X31
	0x03B261E8 LDR X0, [X8]
	0x03B261EC BL 0x3227FF8
	0x03B261F0 ADRP X8, 0x5F6000
	0x03B261F4 ADRP X9, 0x5CF000
	0x03B261F8 LDR X8, [X8 + 0xA40]
	0x03B261FC LDR X9, [X9 + 0x260]
	0x03B26200 MOV X2, X0
	0x03B26204 MOV X0, X20
	0x03B26208 LDR X1, [X8]
	0x03B2620C LDR X3, [X9]
	0x03B26210 LDP X20, X19, [X31 + 0x40]
	0x03B26214 LDP X22, X21, [X31 + 0x30]
	0x03B26218 LDP X24, X23, [X31 + 0x20]
	0x03B2621C LDP X26, X25, [X31 + 0x10]
	0x03B26220 MOV X4, X31
	0x03B26224 LDP X30, X27, [X31], #0x50
	0x03B26228 B 0x32277C4
	0x03B2622C MOV X0, X20
	0x03B26230 LDP X20, X19, [X31 + 0x40]
	0x03B26234 LDP X22, X21, [X31 + 0x30]
	0x03B26238 LDP X24, X23, [X31 + 0x20]
	0x03B2623C LDP X26, X25, [X31 + 0x10]
	0x03B26240 LDP X30, X27, [X31], #0x50
	0x03B26244 RET
	0x03B26248 BL 0x1C16F28
	0x03B2624C BL 0x1C16F20
	0x03B26250 STP X30, X27, [X31 - 0x50]!
	0x03B26254 STP X26, X25, [X31 + 0x10]
	0x03B26258 STP X24, X23, [X31 + 0x20]
	0x03B2625C STP X22, X21, [X31 + 0x30]
	0x03B26260 STP X20, X19, [X31 + 0x40]
	0x03B26264 ADRP X19, 0x8BC000
	0x03B26268 LDRB W8, [X19 + 0x75E]
	0x03B2626C MOV X20, X0
	0x03B26270 TBNZ X8, 0x0, 0x3B262B8
	0x03B26274 ADRP X0, 0x5CD000
	0x03B26278 LDR X0, [X0 + 0xAC8]
	0x03B2627C BL 0x1C16CF4
	0x03B26280 ADRP X0, 0x633000
	0x03B26284 LDR X0, [X0 + 0xC38]
	0x03B26288 BL 0x1C16CF4
	0x03B2628C ADRP X0, 0x5F6000
	0x03B26290 LDR X0, [X0 + 0xA40]
	0x03B26294 BL 0x1C16CF4
	0x03B26298 ADRP X0, 0x5CD000
	0x03B2629C LDR X0, [X0 + 0x838]
	0x03B262A0 BL 0x1C16CF4
	0x03B262A4 ADRP X0, 0x5CF000
	0x03B262A8 LDR X0, [X0 + 0x260]
	0x03B262AC BL 0x1C16CF4
	0x03B262B0 MOVZ W8, 0x1
	0x03B262B4 STRB W8, [X19 + 0x75E]
	0x03B262B8 CBZ X20, 0x3B26428
	0x03B262BC LDR X8, [X20]
	0x03B262C0 MOV X0, X20
	0x03B262C4 LDR X9, [X8 + 0x2E8]
	0x03B262C8 LDR X1, [X8 + 0x2F0]
	0x03B262CC BLR X9
	0x03B262D0 LDR X8, [X20]
	0x03B262D4 MOV X19, X0
	0x03B262D8 MOV X0, X20
	0x03B262DC LDR X9, [X8 + 0x3C8]
	0x03B262E0 LDR X1, [X8 + 0x3D0]
	0x03B262E4 BLR X9
	0x03B262E8 TBZ X0, 0x0, 0x3B26408
	0x03B262EC CBZ X19, 0x3B26428
	0x03B262F0 MOVZ W1, 0x60

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x5CE000
	012 Move X22, 0x634000
	013 Move X21, [X21+1728]
	014 Move X22, [X22+3128]
	015 Move W19, W2
	016 Move X20, X1
	017 Move X23, X0
	018 Move X26, 0x8BD000
	019 Move W27, 1
	020 Move W8, [X26+1878]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, X22
	026 Call 0x1C17CF4
	027 Move X0, X21
	028 Call 0x1C17CF4
	029 Move [X26+1878], W27
	030 Compare X23, 0
	031 JumpIfEqual {91}
	032 Move X8, [X23]
	033 Move X0, X23
	034 Move X1, X20
	035 Move W2, W19
	036 Move X9, [X8+1656]
	037 Move X3, [X8+1664]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X1, X31
	040 Move X2, X31
	041 Move X24, X0
	042 Call FieldInfo.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {79}
	047 Move X8, [X23]
	048 Move X0, X23
	049 Move X9, [X8+2072]
	050 Move X1, [X8+2080]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X21]
	053 Move X25, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X25
	060 Move X1, X31
	061 Move X2, X31
	062 Call Type.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {79}
	067 Move X8, [X23]
	068 Move X0, X23
	069 Move X9, [X8+2072]
	070 Move X1, [X8+2080]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X8, [X22]
	073 Move X23, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {20}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X0, X24
	080 Move X20, [X31+64]
	081 Move X19, [X31+72]
	082 Move X22, [X31+48]
	083 Move X21, [X31+56]
	084 Move X24, [X31+32]
	085 Move X23, [X31+40]
	086 Move X26, [X31+16]
	087 Move X25, [X31+24]
	088 Move X30, [X31+80]
	089 Move X27, [X31+88]
	090 Return X0
	091 Call 0x1C17F20

Method: System.Void GetFieldsRecursively(System.Type type, System.Collections.Generic.List`1<System.Reflection.FieldInfo> fields, System.Reflection.BindingFlags bindingAttr = 54)

Disassembly:
	0x03B262F4 MOV X0, X19
	0x03B262F8 MOV W2, W31
	0x03B262FC MOV X3, X31
	0x03B26300 BL 0x3229AE8
	0x03B26304 CBZ X0, 0x3B26428
	0x03B26308 LDR W8, [X0 + 0x18]
	0x03B2630C CBZ W8, 0x3B26424
	0x03B26310 LDR X8, [X20]
	0x03B26314 LDR X19, [X0 + 0x20]
	0x03B26318 MOV X0, X20
	0x03B2631C LDR X9, [X8 + 0x468]
	0x03B26320 LDR X1, [X8 + 0x470]
	0x03B26324 BLR X9
	0x03B26328 CBZ X0, 0x3B26428
	0x03B2632C ADRP X8, 0x5CD000
	0x03B26330 LDR X22, [X0 + 0x18]
	0x03B26334 LDR X8, [X8 + 0xAC8]
	0x03B26338 MOV X20, X0
	0x03B2633C MOV W1, W22
	0x03B26340 LDR X0, [X8]
	0x03B26344 BL 0x1C16D6C
	0x03B26348 CMP W22, 0x1
	0x03B2634C MOV X21, X0
	0x03B26350 B.LT 0x3B263B4
	0x03B26354 ADRP X27, 0x633000
	0x03B26358 LDR X27, [X27 + 0xC38]
	0x03B2635C MOV X23, X31
	0x03B26360 AND X24, X22, 0x0
	0x03B26364 ADD X25, X20, 0x20
	0x03B26368 ADD X26, X21, 0x20
	0x03B2636C LDR W8, [X20 + 0x18]
	0x03B26370 CMP X23, X8
	0x03B26374 B.CS 0x3B26424
	0x03B26378 LDR X0, [X27]
	0x03B2637C LDR X22, [X25, X23, LSL #3]
	0x03B26380 LDR W8, [X0 + 0xE0]
	0x03B26384 CBNZ W8, 0x3B2638C
	0x03B26388 BL 0x1C16DFC
	0x03B2638C MOV X0, X22
	0x03B26390 BL 0x3B2642C
	0x03B26394 CBZ X21, 0x3B26428
	0x03B26398 LDR W8, [X21 + 0x18]
	0x03B2639C CMP X23, X8
	0x03B263A0 B.CS 0x3B26424
	0x03B263A4 STR X0, [X26, X23, LSL #3]
	0x03B263A8 ADD X23, X23, 0x1
	0x03B263AC CMP X24, X23
	0x03B263B0 B.NE 0x3B2636C
	0x03B263B4 ADRP X8, 0x5CD000
	0x03B263B8 LDR X8, [X8 + 0x838]
	0x03B263BC MOV X1, X21
	0x03B263C0 MOV X2, X31
	0x03B263C4 LDR X0, [X8]
	0x03B263C8 BL 0x3227FF8
	0x03B263CC ADRP X8, 0x5F6000
	0x03B263D0 ADRP X9, 0x5CF000
	0x03B263D4 LDR X8, [X8 + 0xA40]
	0x03B263D8 LDR X9, [X9 + 0x260]
	0x03B263DC MOV X2, X0
	0x03B263E0 MOV X0, X19
	0x03B263E4 LDR X1, [X8]
	0x03B263E8 LDR X3, [X9]
	0x03B263EC LDP X20, X19, [X31 + 0x40]
	0x03B263F0 LDP X22, X21, [X31 + 0x30]
	0x03B263F4 LDP X24, X23, [X31 + 0x20]
	0x03B263F8 LDP X26, X25, [X31 + 0x10]
	0x03B263FC MOV X4, X31
	0x03B26400 LDP X30, X27, [X31], #0x50
	0x03B26404 B 0x32277C4
	0x03B26408 MOV X0, X19
	0x03B2640C LDP X20, X19, [X31 + 0x40]
	0x03B26410 LDP X22, X21, [X31 + 0x30]
	0x03B26414 LDP X24, X23, [X31 + 0x20]
	0x03B26418 LDP X26, X25, [X31 + 0x10]
	0x03B2641C LDP X30, X27, [X31], #0x50
	0x03B26420 RET
	0x03B26424 BL 0x1C16F28
	0x03B26428 BL 0x1C16F20
	0x03B2642C STR X30, [X31 - 0x40]!
	0x03B26430 STP X24, X23, [X31 + 0x10]
	0x03B26434 STP X22, X21, [X31 + 0x20]
	0x03B26438 STP X20, X19, [X31 + 0x30]
	0x03B2643C ADRP X19, 0x8BC000
	0x03B26440 LDRB W8, [X19 + 0x75D]
	0x03B26444 MOV X20, X0
	0x03B26448 TBNZ X8, 0x0, 0x3B264A8
	0x03B2644C ADRP X0, 0x5CE000
	0x03B26450 LDR X0, [X0 + 0x1B8]
	0x03B26454 BL 0x1C16CF4
	0x03B26458 ADRP X0, 0x5F5000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x8BD000
	011 Move W8, [X22+1879]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x61B000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CE000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1879], W8
	027 Move X23, 0x61B000
	028 Move X24, 0x5CE000
	029 Move X23, [X23+2904]
	030 Move X24, [X24+1728]
	031 Compare X21, 0
	032 JumpIfEqual {103}
	033 Move X8, [X21]
	034 Move X0, X21
	035 Move W1, W19
	036 Move X9, [X8+1672]
	037 Move X2, [X8+1680]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {103}
	041 Move X8, [X0+24]
	042 Move X22, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X25, X31
	045 And X8, X8, 0
	046 Add X26, X22, 32
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X20, 0
	049 JumpIfEqual {103}
	050 Move W10, [X20+28]
	051 Move X1, [X26]
	052 Move X8, [X20+16]
	053 Move X9, [X23]
	054 Add W10, W10, 1
	055 Move [X20+28], W10
	056 Compare X8, 0
	057 JumpIfEqual {103}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W11, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W9, W10, 1
	062 Add X8, X8, X10
	063 Move [X20+24], W9
	064 Move [X8+32], X1
	065 Move X8, [X9+32]
	066 Move X0, X20
	067 Move X8, [X8+192]
	068 Move X2, [X8+112]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Move W8, [X22+24]
	071 Add X25, X25, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X21]
	074 Move X0, X21
	075 Move X9, [X8+2072]
	076 Move X1, [X8+2080]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X24]
	079 Move X21, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X31
	087 Move X2, X31
	088 Call Type.op_Inequality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {31}
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X24, [X31+32]
	098 Move X23, [X31+40]
	099 Move X26, [X31+16]
	100 Move X25, [X31+24]
	101 Move X30, [X31+80]
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F28

Method: System.Void GetPropertiesRecursively(System.Type type, System.Collections.Generic.List`1<System.Reflection.PropertyInfo> fields, System.Reflection.BindingFlags bindingAttr = 54)

Disassembly:
	0x03B2645C LDR X0, [X0 + 0xB78]
	0x03B26460 BL 0x1C16CF4
	0x03B26464 ADRP X0, 0x633000
	0x03B26468 LDR X0, [X0 + 0xC88]
	0x03B2646C BL 0x1C16CF4
	0x03B26470 ADRP X0, 0x5CF000
	0x03B26474 LDR X0, [X0 + 0xE78]
	0x03B26478 BL 0x1C16CF4
	0x03B2647C ADRP X0, 0x633000
	0x03B26480 LDR X0, [X0 + 0xC38]
	0x03B26484 BL 0x1C16CF4
	0x03B26488 ADRP X0, 0x5CD000
	0x03B2648C LDR X0, [X0 + 0x6C0]
	0x03B26490 BL 0x1C16CF4
	0x03B26494 ADRP X0, 0x5D6000
	0x03B26498 LDR X0, [X0 + 0x790]
	0x03B2649C BL 0x1C16CF4
	0x03B264A0 MOVZ W8, 0x1
	0x03B264A4 STRB W8, [X19 + 0x75D]
	0x03B264A8 CBZ X20, 0x3B2670C
	0x03B264AC LDR X8, [X20]
	0x03B264B0 ADRP X23, 0x5CD000
	0x03B264B4 MOV X0, X20
	0x03B264B8 LDP X9, X1, [X8 + 0x1B8]
	0x03B264BC LDR X23, [X23 + 0x6C0]
	0x03B264C0 BLR X9
	0x03B264C4 LDR X8, [X23]
	0x03B264C8 MOV X19, X0
	0x03B264CC LDR W9, [X8 + 0xE0]
	0x03B264D0 CBNZ W9, 0x3B264DC
	0x03B264D4 MOV X0, X8
	0x03B264D8 BL 0x1C16DFC
	0x03B264DC ADRP X22, 0x633000
	0x03B264E0 LDR X22, [X22 + 0xC38]
	0x03B264E4 MOV X0, X19
	0x03B264E8 MOV X1, X31
	0x03B264EC MOV X2, X31
	0x03B264F0 BL 0x3395F0C
	0x03B264F4 TBZ X0, 0x0, 0x3B26510
	0x03B264F8 LDR X8, [X20]
	0x03B264FC MOV X0, X20
	0x03B26500 LDR X9, [X8 + 0x3A8]
	0x03B26504 LDR X1, [X8 + 0x3B0]
	0x03B26508 BLR X9
	0x03B2650C TBZ X0, 0x0, 0x3B26538
	0x03B26510 LDR X0, [X22]
	0x03B26514 LDR W8, [X0 + 0xE0]
	0x03B26518 CBNZ W8, 0x3B26520
	0x03B2651C BL 0x1C16DFC
	0x03B26520 MOV X0, X20
	0x03B26524 LDP X20, X19, [X31 + 0x30]
	0x03B26528 LDP X22, X21, [X31 + 0x20]
	0x03B2652C LDP X24, X23, [X31 + 0x10]
	0x03B26530 LDR X30, [X31], #0x40
	0x03B26534 B 0x3B26250
	0x03B26538 LDR X0, [X22]
	0x03B2653C LDR W8, [X0 + 0xE0]
	0x03B26540 CBNZ W8, 0x3B2654C
	0x03B26544 BL 0x1C16DFC
	0x03B26548 LDR X0, [X22]
	0x03B2654C LDR X8, [X0 + 0xB8]
	0x03B26550 LDR X8, [X8 + 0x8]
	0x03B26554 CBZ X8, 0x3B2670C
	0x03B26558 LDP W2, W9, [X8 + 0x18]
	0x03B2655C ADD W9, W9, 0x1
	0x03B26560 CMP W2, 0x1
	0x03B26564 STP W31, W9, [X8 + 0x18]
	0x03B26568 B.LT 0x3B2657C
	0x03B2656C LDR X0, [X8 + 0x10]
	0x03B26570 MOV W1, W31
	0x03B26574 MOV X3, X31
	0x03B26578 BL 0x339FA34
	0x03B2657C MOV X0, X20
	0x03B26580 BL 0x3B26064
	0x03B26584 LDR X8, [X22]
	0x03B26588 LDR X8, [X8 + 0xB8]
	0x03B2658C LDR X8, [X8 + 0x8]
	0x03B26590 CBZ X8, 0x3B2670C
	0x03B26594 ADRP X10, 0x5CE000
	0x03B26598 LDR X10, [X10 + 0x1B8]
	0x03B2659C LDR W11, [X8 + 0x1C]
	0x03B265A0 LDR X9, [X8 + 0x10]
	0x03B265A4 LDR X10, [X10]
	0x03B265A8 ADD W11, W11, 0x1
	0x03B265AC STR W11, [X8 + 0x1C]
	0x03B265B0 CBZ X9, 0x3B2670C
	0x03B265B4 LDRSW X11, [X8 + 0x18]
	0x03B265B8 LDR W12, [X9 + 0x18]
	0x03B265BC MOV X1, X0
	0x03B265C0 CMP W11, W12

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x8BD000
	011 Move W8, [X22+1880]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x634000
	020 Move X0, [X0+3136]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CE000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1880], W8
	027 Move X23, 0x634000
	028 Move X24, 0x5CE000
	029 Move X23, [X23+3136]
	030 Move X24, [X24+1728]
	031 Compare X21, 0
	032 JumpIfEqual {103}
	033 Move X8, [X21]
	034 Move X0, X21
	035 Move W1, W19
	036 Move X9, [X8+2024]
	037 Move X2, [X8+2032]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {103}
	041 Move X8, [X0+24]
	042 Move X22, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X25, X31
	045 And X8, X8, 0
	046 Add X26, X22, 32
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X20, 0
	049 JumpIfEqual {103}
	050 Move W10, [X20+28]
	051 Move X1, [X26]
	052 Move X8, [X20+16]
	053 Move X9, [X23]
	054 Add W10, W10, 1
	055 Move [X20+28], W10
	056 Compare X8, 0
	057 JumpIfEqual {103}
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Move W11, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W9, W10, 1
	062 Add X8, X8, X10
	063 Move [X20+24], W9
	064 Move [X8+32], X1
	065 Move X8, [X9+32]
	066 Move X0, X20
	067 Move X8, [X8+192]
	068 Move X2, [X8+112]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Move W8, [X22+24]
	071 Add X25, X25, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X21]
	074 Move X0, X21
	075 Move X9, [X8+2072]
	076 Move X1, [X8+2080]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X24]
	079 Move X21, X0
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X31
	087 Move X2, X31
	088 Call Type.op_Inequality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {31}
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X24, [X31+32]
	098 Move X23, [X31+40]
	099 Move X26, [X31+16]
	100 Move X25, [X31+24]
	101 Move X30, [X31+80]
	102 Return 
	103 Call 0x1C17F20
	104 Call 0x1C17F28

Method: System.Void GetInterfaceFieldsFromClasses(System.Collections.Generic.IEnumerable`1<System.Type> classes, System.Collections.Generic.List`1<System.Reflection.FieldInfo> fields, System.Collections.Generic.List`1<System.Type> interfaceTypes, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x03B265C4 B.CS 0x3B265DC
	0x03B265C8 ADD W10, W11, 0x1
	0x03B265CC ADD X9, X9, X11, 0x3, LSL
	0x03B265D0 STR W10, [X8 + 0x18]
	0x03B265D4 STR X1, [X9 + 0x20]
	0x03B265D8 B 0x3B265F0
	0x03B265DC LDR X9, [X10 + 0x20]
	0x03B265E0 MOV X0, X8
	0x03B265E4 LDR X9, [X9 + 0xC0]
	0x03B265E8 LDR X2, [X9 + 0x70]
	0x03B265EC BL 0x301BF90
	0x03B265F0 CBZ X19, 0x3B2670C
	0x03B265F4 ADRP X24, 0x633000
	0x03B265F8 LDR X24, [X24 + 0xC88]
	0x03B265FC LDR X8, [X19]
	0x03B26600 MOV X0, X19
	0x03B26604 LDP X9, X1, [X8 + 0x1B8]
	0x03B26608 BLR X9
	0x03B2660C LDR X8, [X23]
	0x03B26610 MOV X20, X0
	0x03B26614 LDR W9, [X8 + 0xE0]
	0x03B26618 CBNZ W9, 0x3B26624
	0x03B2661C MOV X0, X8
	0x03B26620 BL 0x1C16DFC
	0x03B26624 MOV X0, X20
	0x03B26628 MOV X1, X31
	0x03B2662C MOV X2, X31
	0x03B26630 BL 0x3395194
	0x03B26634 LDR X8, [X22]
	0x03B26638 MOV W21, W0
	0x03B2663C LDR W9, [X8 + 0xE0]
	0x03B26640 CBNZ W9, 0x3B2664C
	0x03B26644 MOV X0, X8
	0x03B26648 BL 0x1C16DFC
	0x03B2664C MOV X0, X19
	0x03B26650 TBNZ X21, 0x0, 0x3B26688
	0x03B26654 BL 0x3B26064
	0x03B26658 LDR X8, [X22]
	0x03B2665C LDR X8, [X8 + 0xB8]
	0x03B26660 LDR X8, [X8 + 0x8]
	0x03B26664 CBZ X8, 0x3B2670C
	0x03B26668 LDR X3, [X24]
	0x03B2666C MOV X2, X0
	0x03B26670 MOV X0, X8
	0x03B26674 MOV W1, W31
	0x03B26678 BL 0x301CEEC
	0x03B2667C MOV X19, X20
	0x03B26680 CBNZ X20, 0x3B265FC
	0x03B26684 B 0x3B2670C
	0x03B26688 BL 0x3B2642C
	0x03B2668C LDR X8, [X22]
	0x03B26690 LDR X8, [X8 + 0xB8]
	0x03B26694 LDR X8, [X8 + 0x8]
	0x03B26698 CBZ X8, 0x3B2670C
	0x03B2669C LDR X3, [X24]
	0x03B266A0 MOV X2, X0
	0x03B266A4 MOV X0, X8
	0x03B266A8 MOV W1, W31
	0x03B266AC BL 0x301CEEC
	0x03B266B0 LDR X0, [X22]
	0x03B266B4 LDR W8, [X0 + 0xE0]
	0x03B266B8 CBNZ W8, 0x3B266C4
	0x03B266BC BL 0x1C16DFC
	0x03B266C0 LDR X0, [X22]
	0x03B266C4 LDR X8, [X0 + 0xB8]
	0x03B266C8 LDR X0, [X8 + 0x8]
	0x03B266CC CBZ X0, 0x3B2670C
	0x03B266D0 ADRP X8, 0x5CF000
	0x03B266D4 LDR X8, [X8 + 0xE78]
	0x03B266D8 LDR X1, [X8]
	0x03B266DC BL 0x301DDC4
	0x03B266E0 ADRP X8, 0x5D6000
	0x03B266E4 LDR X8, [X8 + 0x790]
	0x03B266E8 LDP X20, X19, [X31 + 0x30]
	0x03B266EC LDP X22, X21, [X31 + 0x20]
	0x03B266F0 LDP X24, X23, [X31 + 0x10]
	0x03B266F4 LDR X8, [X8]
	0x03B266F8 MOV X1, X0
	0x03B266FC MOV X2, X31
	0x03B26700 MOV X0, X8
	0x03B26704 LDR X30, [X31], #0x40
	0x03B26708 B 0x3227FF8
	0x03B2670C BL 0x1C16F20
	0x03B26710 STR X30, [X31 - 0x20]!
	0x03B26714 STP X20, X19, [X31 + 0x10]
	0x03B26718 CBZ X0, 0x3B26768
	0x03B2671C LDR X8, [X0]
	0x03B26720 MOV X19, X1
	0x03B26724 MOV X20, X0
	0x03B26728 LDR X9, [X8 + 0x2A8]
	0x03B2672C LDR X2, [X8 + 0x2B0]
	0x03B26730 BLR X9
	0x03B26734 TBZ X0, 0x0, 0x3B26748
	0x03B26738 LDP X20, X19, [X31 + 0x10]
	0x03B2673C MOVZ W0, 0x1
	0x03B26740 LDR X30, [X31], #0x20
	0x03B26744 RET
	0x03B26748 LDR X8, [X20]
	0x03B2674C MOV X0, X20
	0x03B26750 MOV X1, X19
	0x03B26754 LDP X20, X19, [X31 + 0x10]
	0x03B26758 LDR X3, [X8 + 0x298]
	0x03B2675C LDR X2, [X8 + 0x2A0]
	0x03B26760 LDR X30, [X31], #0x20
	0x03B26764 BR X3
	0x03B26768 BL 0x1C16F20
	0x03B2676C STP X30, X27, [X31 - 0x50]!
	0x03B26770 STP X26, X25, [X31 + 0x10]
	0x03B26774 STP X24, X23, [X31 + 0x20]
	0x03B26778 STP X22, X21, [X31 + 0x30]
	0x03B2677C STP X20, X19, [X31 + 0x40]
	0x03B26780 ADRP X21, 0x5CD000
	0x03B26784 ADRP X22, 0x633000
	0x03B26788 LDR X21, [X21 + 0x6C0]
	0x03B2678C LDR X22, [X22 + 0xC38]
	0x03B26790 MOV W19, W2
	0x03B26794 MOV X20, X1
	0x03B26798 MOV X23, X0
	0x03B2679C ADRP X26, 0x8BC000
	0x03B267A0 MOVZ W27, 0x1
	0x03B267A4 LDRB W8, [X26 + 0x75F]
	0x03B267A8 TBNZ X8, 0x0, 0x3B267C0
	0x03B267AC MOV X0, X22
	0x03B267B0 BL 0x1C16CF4
	0x03B267B4 MOV X0, X21
	0x03B267B8 BL 0x1C16CF4
	0x03B267BC STRB W27, [X26 + 0x75F]
	0x03B267C0 CBZ X23, 0x3B26878
	0x03B267C4 MOV X0, X23
	0x03B267C8 MOV X1, X20
	0x03B267CC MOV W2, W19
	0x03B267D0 MOV X3, X31
	0x03B267D4 BL 0x3397600
	0x03B267D8 MOV X1, X31
	0x03B267DC MOV X2, X31
	0x03B267E0 MOV X24, X0
	0x03B267E4 BL 0x32CE528
	0x03B267E8 TBNZ X0, 0x0, 0x3B2685C
	0x03B267EC LDR X8, [X23]
	0x03B267F0 MOV X0, X23
	0x03B267F4 LDR X9, [X8 + 0x818]
	0x03B267F8 LDR X1, [X8 + 0x820]
	0x03B267FC BLR X9
	0x03B26800 LDR X8, [X21]
	0x03B26804 MOV X25, X0
	0x03B26808 LDR W9, [X8 + 0xE0]
	0x03B2680C CBNZ W9, 0x3B26818
	0x03B26810 MOV X0, X8
	0x03B26814 BL 0x1C16DFC
	0x03B26818 MOV X0, X25
	0x03B2681C MOV X1, X31
	0x03B26820 MOV X2, X31
	0x03B26824 BL 0x3395F0C
	0x03B26828 TBZ X0, 0x0, 0x3B2685C
	0x03B2682C LDR X8, [X23]
	0x03B26830 MOV X0, X23
	0x03B26834 LDR X9, [X8 + 0x818]
	0x03B26838 LDR X1, [X8 + 0x820]
	0x03B2683C BLR X9
	0x03B26840 LDR X8, [X22]
	0x03B26844 MOV X23, X0
	0x03B26848 LDR W9, [X8 + 0xE0]
	0x03B2684C CBNZ W9, 0x3B267A4
	0x03B26850 MOV X0, X8
	0x03B26854 BL 0x1C16DFC
	0x03B26858 B 0x3B267A4
	0x03B2685C MOV X0, X24
	0x03B26860 LDP X20, X19, [X31 + 0x40]
	0x03B26864 LDP X22, X21, [X31 + 0x30]
	0x03B26868 LDP X24, X23, [X31 + 0x20]
	0x03B2686C LDP X26, X25, [X31 + 0x10]
	0x03B26870 LDP X30, X27, [X31], #0x50
	0x03B26874 RET
	0x03B26878 BL 0x1C16F20
	0x03B2687C STR X30, [X31 - 0x40]!
	0x03B26880 STP X24, X23, [X31 + 0x10]
	0x03B26884 STP X22, X21, [X31 + 0x20]
	0x03B26888 STP X20, X19, [X31 + 0x30]
	0x03B2688C ADRP X23, 0x8BC000
	0x03B26890 ADRP X24, 0x61A000
	0x03B26894 ADRP X19, 0x633000
	0x03B26898 ADRP X20, 0x633000
	0x03B2689C ADRP X22, 0x5CE000
	0x03B268A0 ADRP X21, 0x5CE000
	0x03B268A4 LDRB W8, [X23 + 0x760]
	0x03B268A8 LDR X24, [X24 + 0xBB8]
	0x03B268AC LDR X19, [X19 + 0xC90]
	0x03B268B0 LDR X20, [X20 + 0xC38]
	0x03B268B4 LDR X22, [X22 + 0x1D0]
	0x03B268B8 LDR X21, [X21 + 0x1C0]
	0x03B268BC TBNZ X8, 0x0, 0x3B26904
	0x03B268C0 ADRP X0, 0x633000
	0x03B268C4 LDR X0, [X0 + 0xC90]
	0x03B268C8 BL 0x1C16CF4
	0x03B268CC ADRP X0, 0x5CE000
	0x03B268D0 LDR X0, [X0 + 0x1C0]
	0x03B268D4 BL 0x1C16CF4
	0x03B268D8 ADRP X0, 0x61A000
	0x03B268DC LDR X0, [X0 + 0xBB8]
	0x03B268E0 BL 0x1C16CF4
	0x03B268E4 ADRP X0, 0x5CE000
	0x03B268E8 LDR X0, [X0 + 0x1D0]
	0x03B268EC BL 0x1C16CF4
	0x03B268F0 ADRP X0, 0x633000
	0x03B268F4 LDR X0, [X0 + 0xC38]
	0x03B268F8 BL 0x1C16CF4
	0x03B268FC MOVZ W8, 0x1
	0x03B26900 STRB W8, [X23 + 0x760]
	0x03B26904 LDR X0, [X24]
	0x03B26908 BL 0x1C16F10
	0x03B2690C LDR X1, [X19]
	0x03B26910 MOV X19, X0
	0x03B26914 BL 0x301B7C4
	0x03B26918 LDR X8, [X20]
	0x03B2691C LDR X8, [X8 + 0xB8]
	0x03B26920 STR X19, [X8]
	0x03B26924 LDR X0, [X22]
	0x03B26928 BL 0x1C16F10
	0x03B2692C LDR X1, [X21]
	0x03B26930 MOV X19, X0
	0x03B26934 BL 0x301B7C4
	0x03B26938 LDR X8, [X20]
	0x03B2693C LDP X22, X21, [X31 + 0x20]
	0x03B26940 LDP X24, X23, [X31 + 0x10]
	0x03B26944 LDR X8, [X8 + 0xB8]
	0x03B26948 STR X19, [X8 + 0x8]
	0x03B2694C LDP X20, X19, [X31 + 0x30]
	0x03B26950 LDR X30, [X31], #0x40
	0x03B26954 RET
	0x03B26958 STP X30, X21, [X31 - 0x20]!
	0x03B2695C STP X20, X19, [X31 + 0x10]
	0x03B26960 ADRP X21, 0x8BC000
	0x03B26964 LDRB W8, [X21 + 0x761]
	0x03B26968 MOV X19, X1
	0x03B2696C MOV X20, X0
	0x03B26970 TBNZ X8, 0x0, 0x3B26988
	0x03B26974 ADRP X0, 0x5D7000
	0x03B26978 LDR X0, [X0 + 0x938]
	0x03B2697C BL 0x1C16CF4
	0x03B26980 MOVZ W8, 0x1
	0x03B26984 STRB W8, [X21 + 0x761]
	0x03B26988 LDR X0, [X20 + 0x10]
	0x03B2698C CBZ X0, 0x3B26A5C
	0x03B26990 LDR X8, [X0]
	0x03B26994 MOV X1, X19
	0x03B26998 LDR X9, [X8 + 0x2A8]
	0x03B2699C LDR X2, [X8 + 0x2B0]
	0x03B269A0 BLR X9
	0x03B269A4 TBZ X0, 0x0, 0x3B26A34
	0x03B269A8 CBZ X19, 0x3B26A5C
	0x03B269AC MOV X0, X19
	0x03B269B0 MOV X1, X31
	0x03B269B4 BL 0x33962E8
	0x03B269B8 TBNZ X0, 0x0, 0x3B26A34
	0x03B269BC MOV X0, X19
	0x03B269C0 MOV X1, X31
	0x03B269C4 BL 0x339703C
	0x03B269C8 TBNZ X0, 0x0, 0x3B26A34
	0x03B269CC LDR X8, [X20 + 0x18]
	0x03B269D0 CBZ X8, 0x3B269EC
	0x03B269D4 LDR X9, [X8 + 0x18]
	0x03B269D8 LDR X0, [X8 + 0x40]
	0x03B269DC LDR X2, [X8 + 0x28]
	0x03B269E0 MOV X1, X19
	0x03B269E4 BLR X9
	0x03B269E8 TBZ X0, 0x0, 0x3B26A34
	0x03B269EC LDR X0, [X20 + 0x20]
	0x03B269F0 CBZ X0, 0x3B26A5C
	0x03B269F4 ADRP X9, 0x5D7000
	0x03B269F8 LDR X9, [X9 + 0x938]
	0x03B269FC LDR W10, [X0 + 0x1C]
	0x03B26A00 LDR X8, [X0 + 0x10]
	0x03B26A04 LDR X9, [X9]
	0x03B26A08 ADD W10, W10, 0x1
	0x03B26A0C STR W10, [X0 + 0x1C]
	0x03B26A10 CBZ X8, 0x3B26A5C
	0x03B26A14 LDRSW X10, [X0 + 0x18]
	0x03B26A18 LDR W11, [X8 + 0x18]
	0x03B26A1C CMP W10, W11
	0x03B26A20 B.CS 0x3B26A40
	0x03B26A24 ADD W9, W10, 0x1
	0x03B26A28 ADD X8, X8, X10, 0x3, LSL
	0x03B26A2C STR W9, [X0 + 0x18]
	0x03B26A30 STR X19, [X8 + 0x20]
	0x03B26A34 LDP X20, X19, [X31 + 0x10]
	0x03B26A38 LDP X30, X21, [X31], #0x20
	0x03B26A3C RET
	0x03B26A40 LDR X8, [X9 + 0x20]
	0x03B26A44 MOV X1, X19
	0x03B26A48 LDP X20, X19, [X31 + 0x10]
	0x03B26A4C LDR X8, [X8 + 0xC0]
	0x03B26A50 LDR X2, [X8 + 0x70]
	0x03B26A54 LDP X30, X21, [X31], #0x20
	0x03B26A58 B 0x301BF90
	0x03B26A5C BL 0x1C16F20
	0x03B26A60 STP X30, X21, [X31 - 0x20]!
	0x03B26A64 STP X20, X19, [X31 + 0x10]
	0x03B26A68 ADRP X20, 0x8BC000
	0x03B26A6C ADRP X21, 0x633000
	0x03B26A70 LDRB W8, [X20 + 0x762]
	0x03B26A74 LDR X21, [X21 + 0xC98]
	0x03B26A78 MOV X19, X0
	0x03B26A7C TBNZ X8, 0x0, 0x3B26A94
	0x03B26A80 ADRP X0, 0x633000
	0x03B26A84 LDR X0, [X0 + 0xC98]
	0x03B26A88 BL 0x1C16CF4
	0x03B26A8C MOVZ W8, 0x1
	0x03B26A90 STRB W8, [X20 + 0x762]
	0x03B26A94 LDR X1, [X21]
	0x03B26A98 MOV X0, X19
	0x03B26A9C LDP X20, X19, [X31 + 0x10]
	0x03B26AA0 LDP X30, X21, [X31], #0x20
	0x03B26AA4 B 0x27288A8
	0x03B26AA8 STP X30, X21, [X31 - 0x20]!
	0x03B26AAC STP X20, X19, [X31 + 0x10]
	0x03B26AB0 ADRP X20, 0x8BC000
	0x03B26AB4 ADRP X21, 0x632000
	0x03B26AB8 LDRB W8, [X20 + 0x763]
	0x03B26ABC LDR X21, [X21 + 0x8D0]
	0x03B26AC0 MOV X19, X0
	0x03B26AC4 TBNZ X8, 0x0, 0x3B26ADC
	0x03B26AC8 ADRP X0, 0x632000
	0x03B26ACC LDR X0, [X0 + 0x8D0]
	0x03B26AD0 BL 0x1C16CF4
	0x03B26AD4 MOVZ W8, 0x1
	0x03B26AD8 STRB W8, [X20 + 0x763]
	0x03B26ADC LDR X1, [X21]
	0x03B26AE0 MOV X0, X19
	0x03B26AE4 LDP X20, X19, [X31 + 0x10]
	0x03B26AE8 LDP X30, X21, [X31], #0x20
	0x03B26AEC B 0x272A4A4
	0x03B26AF0 STP X30, X21, [X31 - 0x20]!
	0x03B26AF4 STP X20, X19, [X31 + 0x10]
	0x03B26AF8 ADRP X20, 0x8BC000
	0x03B26AFC ADRP X21, 0x633000
	0x03B26B00 LDRB W8, [X20 + 0x764]
	0x03B26B04 LDR X21, [X21 + 0xCA0]
	0x03B26B08 MOV X19, X0
	0x03B26B0C TBNZ X8, 0x0, 0x3B26B24
	0x03B26B10 ADRP X0, 0x633000
	0x03B26B14 LDR X0, [X0 + 0xCA0]
	0x03B26B18 BL 0x1C16CF4
	0x03B26B1C MOVZ W8, 0x1
	0x03B26B20 STRB W8, [X20 + 0x764]
	0x03B26B24 LDR X1, [X21]
	0x03B26B28 MOV X0, X19
	0x03B26B2C LDP X20, X19, [X31 + 0x10]
	0x03B26B30 LDP X30, X21, [X31], #0x20
	0x03B26B34 B 0x272A94C
	0x03B26B38 STP X30, X21, [X31 - 0x20]!
	0x03B26B3C STP X20, X19, [X31 + 0x10]
	0x03B26B40 ADRP X20, 0x8BC000
	0x03B26B44 ADRP X21, 0x633000
	0x03B26B48 LDRB W8, [X20 + 0x765]
	0x03B26B4C LDR X21, [X21 + 0xCA8]
	0x03B26B50 MOV X19, X0
	0x03B26B54 TBNZ X8, 0x0, 0x3B26B6C
	0x03B26B58 ADRP X0, 0x633000
	0x03B26B5C LDR X0, [X0 + 0xCA8]
	0x03B26B60 BL 0x1C16CF4
	0x03B26B64 MOVZ W8, 0x1
	0x03B26B68 STRB W8, [X20 + 0x765]
	0x03B26B6C LDR X1, [X21]
	0x03B26B70 MOV X0, X19
	0x03B26B74 LDP X20, X19, [X31 + 0x10]
	0x03B26B78 LDP X30, X21, [X31], #0x20
	0x03B26B7C B 0x272ADF4
	0x03B26B80 STP X30, X21, [X31 - 0x20]!
	0x03B26B84 STP X20, X19, [X31 + 0x10]
	0x03B26B88 ADRP X20, 0x8BC000
	0x03B26B8C ADRP X21, 0x633000
	0x03B26B90 LDRB W8, [X20 + 0x766]
	0x03B26B94 LDR X21, [X21 + 0xCB0]
	0x03B26B98 MOV X19, X0
	0x03B26B9C TBNZ X8, 0x0, 0x3B26BB4
	0x03B26BA0 ADRP X0, 0x633000
	0x03B26BA4 LDR X0, [X0 + 0xCB0]
	0x03B26BA8 BL 0x1C16CF4
	0x03B26BAC MOVZ W8, 0x1
	0x03B26BB0 STRB W8, [X20 + 0x766]
	0x03B26BB4 LDR X1, [X21]
	0x03B26BB8 MOV X0, X19
	0x03B26BBC LDP X20, X19, [X31 + 0x10]
	0x03B26BC0 LDP X30, X21, [X31], #0x20
	0x03B26BC4 B 0x272B2B8
	0x03B26BC8 STP X30, X21, [X31 - 0x20]!
	0x03B26BCC STP X20, X19, [X31 + 0x10]
	0x03B26BD0 ADRP X20, 0x8BC000
	0x03B26BD4 ADRP X21, 0x633000
	0x03B26BD8 LDRB W8, [X20 + 0x767]
	0x03B26BDC LDR X21, [X21 + 0xCB8]
	0x03B26BE0 MOV X19, X0
	0x03B26BE4 TBNZ X8, 0x0, 0x3B26BFC
	0x03B26BE8 ADRP X0, 0x633000
	0x03B26BEC LDR X0, [X0 + 0xCB8]
	0x03B26BF0 BL 0x1C16CF4
	0x03B26BF4 MOVZ W8, 0x1
	0x03B26BF8 STRB W8, [X20 + 0x767]
	0x03B26BFC LDR X1, [X21]
	0x03B26C00 MOV X0, X19
	0x03B26C04 LDP X20, X19, [X31 + 0x10]
	0x03B26C08 LDP X30, X21, [X31], #0x20
	0x03B26C0C B 0x2729FD8
	0x03B26C10 STP X30, X21, [X31 - 0x20]!
	0x03B26C14 STP X20, X19, [X31 + 0x10]
	0x03B26C18 ADRP X20, 0x8BC000
	0x03B26C1C ADRP X21, 0x632000
	0x03B26C20 LDRB W8, [X20 + 0x768]
	0x03B26C24 LDR X21, [X21 + 0xA70]
	0x03B26C28 MOV X19, X0
	0x03B26C2C TBNZ X8, 0x0, 0x3B26C44
	0x03B26C30 ADRP X0, 0x632000
	0x03B26C34 LDR X0, [X0 + 0xA70]
	0x03B26C38 BL 0x1C16CF4
	0x03B26C3C MOVZ W8, 0x1
	0x03B26C40 STRB W8, [X20 + 0x768]
	0x03B26C44 LDR X1, [X21]
	0x03B26C48 MOV X0, X19
	0x03B26C4C LDP X20, X19, [X31 + 0x10]
	0x03B26C50 LDP X30, X21, [X31], #0x20
	0x03B26C54 B 0x272921C
	0x03B26C58 STP X30, X21, [X31 - 0x20]!
	0x03B26C5C STP X20, X19, [X31 + 0x10]
	0x03B26C60 ADRP X20, 0x8BC000
	0x03B26C64 ADRP X21, 0x632000
	0x03B26C68 LDRB W8, [X20 + 0x769]
	0x03B26C6C LDR X21, [X21 + 0x8B0]
	0x03B26C70 MOV X19, X0
	0x03B26C74 TBNZ X8, 0x0, 0x3B26C8C
	0x03B26C78 ADRP X0, 0x632000
	0x03B26C7C LDR X0, [X0 + 0x8B0]
	0x03B26C80 BL 0x1C16CF4
	0x03B26C84 MOVZ W8, 0x1
	0x03B26C88 STRB W8, [X20 + 0x769]
	0x03B26C8C LDR X1, [X21]
	0x03B26C90 MOV X0, X19
	0x03B26C94 LDP X20, X19, [X31 + 0x10]
	0x03B26C98 LDP X30, X21, [X31], #0x20
	0x03B26C9C B 0x2728D50
	0x03B26CA0 STP X30, X21, [X31 - 0x20]!
	0x03B26CA4 STP X20, X19, [X31 + 0x10]
	0x03B26CA8 ADRP X20, 0x8BC000
	0x03B26CAC ADRP X21, 0x5F9000
	0x03B26CB0 LDRB W8, [X20 + 0x76A]
	0x03B26CB4 LDR X21, [X21 + 0xCA0]
	0x03B26CB8 MOV X19, X0
	0x03B26CBC TBNZ X8, 0x0, 0x3B26CD4
	0x03B26CC0 ADRP X0, 0x5F9000
	0x03B26CC4 LDR X0, [X0 + 0xCA0]
	0x03B26CC8 BL 0x1C16CF4
	0x03B26CCC MOVZ W8, 0x1
	0x03B26CD0 STRB W8, [X20 + 0x76A]
	0x03B26CD4 LDR X1, [X21]
	0x03B26CD8 MOV X0, X19
	0x03B26CDC LDP X20, X19, [X31 + 0x10]
	0x03B26CE0 LDP X30, X21, [X31], #0x20
	0x03B26CE4 B 0x2729B5C
	0x03B26CE8 FMOV S2, 1
	0x03B26CEC FDIV S0, S2, S0
	0x03B26CF0 FDIV S1, S2, S1
	0x03B26CF4 RET
	0x03B26CF8 FCMP S0, S1
	0x03B26CFC FCSEL S0, S0, S1, MI
	0x03B26D00 RET
	0x03B26D04 FCMP S0, S1
	0x03B26D08 FCSEL S0, S0, S1, GT
	0x03B26D0C RET
	0x03B26D10 FABS S0, S0
	0x03B26D14 FABS S1, S1
	0x03B26D18 RET
	0x03B26D1C FMOV S3, 1
	0x03B26D20 FDIV S0, S3, S0
	0x03B26D24 FDIV S1, S3, S1
	0x03B26D28 FDIV S2, S3, S2
	0x03B26D2C RET
	0x03B26D30 FCMP S0, S1
	0x03B26D34 FCSEL S0, S0, S1, MI
	0x03B26D38 FCMP S0, S2
	0x03B26D3C FCSEL S0, S0, S2, MI
	0x03B26D40 RET
	0x03B26D44 FCMP S0, S1
	0x03B26D48 FCSEL S0, S0, S1, GT
	0x03B26D4C FCMP S0, S2
	0x03B26D50 FCSEL S0, S0, S2, GT
	0x03B26D54 RET
	0x03B26D58 FABS S0, S0
	0x03B26D5C FABS S1, S1
	0x03B26D60 FABS S2, S2
	0x03B26D64 RET
	0x03B26D68 FMUL S0, S0, S3
	0x03B26D6C FMUL S1, S1, S4
	0x03B26D70 FMUL S2, S2, S5
	0x03B26D74 RET
	0x03B26D78 FDIV S0, S0, S3
	0x03B26D7C FDIV S1, S1, S4
	0x03B26D80 FDIV S2, S2, S5
	0x03B26D84 RET
	0x03B26D88 STP D13, D12, [X31 - 0x40]!
	0x03B26D8C STP D11, D10, [X31 + 0x10]
	0x03B26D90 STP D9, D8, [X31 + 0x20]
	0x03B26D94 STP X30, X19, [X31 + 0x30]
	0x03B26D98 ADRP X19, 0x8B3000
	0x03B26D9C LDRB W8, [X19 + 0x5AA]
	0x03B26DA0 MOV V8.16B, V5.16B
	0x03B26DA4 MOV V9.16B, V4.16B
	0x03B26DA8 MOV V11.16B, V3.16B

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X23, 0x8BD000
	015 Move W8, [X23+1881]
	016 Move X21, X2
	017 Move X22, X1
	018 Move X19, X0
	019 Move [X31+4], W3
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {74}
	024 Move X0, 0x5D8000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move X0, 0x634000
	028 Move X0, [X0+3144]
	029 Call 0x1C17CF4
	030 Move X0, 0x634000
	031 Move X0, [X0+3152]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D8000
	034 Move X0, [X0+2464]
	035 Call 0x1C17CF4
	036 Move X0, 0x634000
	037 Move X0, [X0+3160]
	038 Call 0x1C17CF4
	039 Move X0, 0x5D8000
	040 Move X0, [X0+2472]
	041 Call 0x1C17CF4
	042 Move X0, 0x5CE000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0x5D8000
	046 Move X0, [X0+2488]
	047 Call 0x1C17CF4
	048 Move X0, 0x5D8000
	049 Move X0, [X0+2496]
	050 Call 0x1C17CF4
	051 Move X0, 0x5CE000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0x61B000
	055 Move X0, [X0+2904]
	056 Call 0x1C17CF4
	057 Move X0, 0x634000
	058 Move X0, [X0+3168]
	059 Call 0x1C17CF4
	060 Move X0, 0x5D8000
	061 Move X0, [X0+2368]
	062 Call 0x1C17CF4
	063 Move X0, 0x634000
	064 Move X0, [X0+3176]
	065 Call 0x1C17CF4
	066 Move X0, 0x5D8000
	067 Move X0, [X0+2520]
	068 Call 0x1C17CF4
	069 Move X0, 0x634000
	070 Move X0, [X0+3128]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+1881], W8
	074 Move [X31+64], X31
	075 Move [X31+72], X31
	076 Move [X31+80], X31
	077 Move [X31+32], X31
	078 Move [X31+40], X31
	079 Move [X31+48], X31
	080 Compare X21, 0
	081 JumpIfEqual {441}
	082 Move X8, 0x5D8000
	083 Move X8, [X8+2520]
	084 Move X24, 0x5D8000
	085 Move X24, [X24+2464]
	086 Move X25, 0x5D8000
	087 Move X1, [X8]
	088 Move X26, 0x5D8000
	089 Move X25, [X25+2488]
	090 Move X26, [X26+2456]
	091 Add X8, X31, 8
	092 Move X0, X21
	093 Call List`1<Object>.GetEnumerator, X0
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 Move X8, [X31+24]
	096 Move [X31+4], V0
	097 Move [X31+80], X8
	098 Move X1, [X24]
	099 Add X0, X31, 64
	100 Call Enumerator<Object>.MoveNext, X0
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {136}
	105 Move X23, [X31+80]
	106 Compare X23, 0
	107 JumpIfEqual {414}
	108 Move X0, X23
	109 Move X1, X31
	110 Call Type.get_IsInterface, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {98}
	115 Move X0, 0x634000
	116 Move X0, [X0+3184]
	117 Call 0x1C17D08
	118 Move X1, X23
	119 Move X2, X31
	120 Call String.Format, X0, X1
	121 Move X23, X0
	122 Move X0, 0x5D6000
	123 Move X0, [X0+1400]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X24, X0
	127 Move X1, X23
	128 Move X2, X31
	129 Call ArgumentException..ctor, X0, X1
	130 Move X0, 0x634000
	131 Move X0, [X0+3192]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X24
	135 Call 0x1C17DEC
	136 Move X1, [X26]
	137 Add X0, X31, 64
	138 Call Enumerator<Object>.Dispose, X0
	139 Compare X19, 0
	140 JumpIfEqual {441}
	141 Move X8, [X19]
	142 Move X1, [X25]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X19
	153 Move W2, W31
	154 Call 0x1C5D788
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X19
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X19, X0
	163 Compare X0, 0
	164 JumpIfEqual {442}
	165 Move X26, 0x634000
	166 Move X29, 0x634000
	167 Move X27, 0x5D8000
	168 Move X28, 0x61B000
	169 Move X26, [X26+3128]
	170 Move X29, [X29+3152]
	171 Move X27, [X27+2368]
	172 Move X28, [X28+2904]
	173 Move X8, [X19]
	174 Move X10, 0x5CE000
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X10, [X10+3608]
	177 Move X1, [X10]
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X19
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X19
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {362}
	200 Move X8, [X19]
	201 Move X10, 0x5D8000
	202 NotImplemented "Instruction LDRH not yet implemented."
	203 Move X10, [X10+2496]
	204 Move X1, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X19
	214 Move W2, W31
	215 Call 0x1C5D788
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Add X8, X8, X9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X1, [X0+8]
	221 Move X0, X19
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X23, X0
	224 Compare X0, 0
	225 JumpIfEqual {416}
	226 Move X0, X23
	227 Move X1, X31
	228 Call Type.get_IsClass, X0
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {418}
	233 Move X0, [X26]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {239}
	237 Call 0x1C17DFC
	238 Move X0, [X26]
	239 Move X8, [X0+184]
	240 Move X1, [X8]
	241 Compare X1, 0
	242 JumpIfEqual {417}
	243 Move W2, [X1+24]
	244 Move W8, [X1+28]
	245 Add W8, W8, 1
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move [X1+24], W31
	248 Move [X1+28], W8
	249 Move X0, [X1+16]
	250 Move W1, W31
	251 Move X3, X31
	252 Call Array.Clear, X0, X1, X2
	253 Move X8, [X26]
	254 Move X8, [X8+184]
	255 Move X1, [X8]
	256 Move W2, [X31+4]
	257 Move X0, X23
	258 Call TypeExtensions.GetFieldsRecursively, X0, X1, X2
	259 Move X8, [X26]
	260 Move X8, [X8+184]
	261 Move X0, [X8]
	262 Compare X0, 0
	263 JumpIfEqual {415}
	264 Move X8, 0x634000
	265 Move X8, [X8+3176]
	266 Move X1, [X8]
	267 Add X8, X31, 8
	268 Call List`1<Object>.GetEnumerator, X0
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 Move X8, [X31+24]
	271 Move [X31+2], V0
	272 Move [X31+48], X8
	273 Move X1, [X29]
	274 Add X0, X31, 32
	275 Call Enumerator<Object>.MoveNext, X0
	276 Move TEMP, X0
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfNotEqual {336}
	280 Move X23, [X31+48]
	281 Compare X23, 0
	282 JumpIfEqual {350}
	283 Move X8, [X23]
	284 Move X1, [X8+608]
	285 Move X9, [X8+600]
	286 Move X0, X23
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Compare X0, 0
	289 JumpIfEqual {351}
	290 Move X8, [X0]
	291 Move X1, [X8+2144]
	292 Move X9, [X8+2136]
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X24, X0
	295 Compare X0, 0
	296 JumpIfEqual {349}
	297 Move X8, [X24+24]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X25, X31
	300 And X8, X8, 0
	301 Add X20, X24, 32
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X1, [X20]
	304 Move X2, [X27]
	305 Move X0, X21
	306 Call List`1<Object>.Contains, X0, X1
	307 Move TEMP, X0
	308 And TEMP, TEMP, 1
	309 Compare TEMP, 1
	310 JumpIfEqual {314}
	311 Move W8, [X24+24]
	312 Add X25, X25, 1
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Compare X22, 0
	315 JumpIfEqual {352}
	316 Move W10, [X22+28]
	317 Move X8, [X22+16]
	318 Move X9, [X28]
	319 Add W10, W10, 1
	320 Move [X22+28], W10
	321 Compare X8, 0
	322 JumpIfEqual {353}
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Move W11, [X8+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Add W9, W10, 1
	327 Add X8, X8, X10
	328 Move [X22+24], W9
	329 Move [X8+32], X23
	330 Move X8, [X9+32]
	331 Move X8, [X8+192]
	332 Move X2, [X8+112]
	333 Move X0, X22
	334 Move X1, X23
	335 Call List`1<Object>.AddWithResize, X0, X1
	336 Move X25, X31
	337 Move W20, 7
	338 Move X8, 0x634000
	339 Move X8, [X8+3144]
	340 Move X1, [X8]
	341 Add X0, X31, 32
	342 Call Enumerator<Object>.Dispose, X0
	343 Compare X25, 0
	344 JumpIfNotEqual {439}
	345 Compare W20, 0
	346 JumpIfEqual {173}
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Call 0x1C17F28
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Move X24, X1
	355 Move X23, X0
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move X0, X23
	358 Call 0x3EB2AD0
	359 Move X25, [X0]
	360 Call 0x3EB2AE0
	361 Move W20, W31
	362 Move X20, X31
	363 Compare X19, 0
	364 JumpIfEqual {388}
	365 Move X8, [X19]
	366 Move X10, 0x5CE000
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Move X10, [X10+3584]
	369 Move X1, [X10]
	370 Compare X9, 0
	371 JumpIfEqual {378}
	372 Move X10, [X8+176]
	373 Add X10, X10, 8
	374 NotImplemented "Instruction LDUR not yet implemented."
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Subtract X9, X9, 1
	377 Add X10, X10, 16
	378 Move X0, X19
	379 Move W2, W31
	380 Call 0x1C5D788
	381 NotImplemented "Instruction LDRSW not yet implemented."
	382 Add X8, X8, X9
	383 Add X0, X8, 312
	384 Move X8, [X0]
	385 Move X1, [X0+8]
	386 Move X0, X19
	387 NotImplemented "Instruction BLR not yet implemented."
	388 Compare X20, 0
	389 JumpIfNotEqual {443}
	390 Move X20, [X31+176]
	391 Move X19, [X31+184]
	392 Move X22, [X31+160]
	393 Move X21, [X31+168]
	394 Move X24, [X31+144]
	395 Move X23, [X31+152]
	396 Move X26, [X31+128]
	397 Move X25, [X31+136]
	398 Move X28, [X31+112]
	399 Move X27, [X31+120]
	400 Move X29, [X31+96]
	401 Move X30, [X31+104]
	402 Add X31, X31, 192
	403 Return 
	404 Move X25, X31
	405 Move X8, 0x634000
	406 Move X8, [X8+3144]
	407 Move X1, [X8]
	408 Add X0, X31, 32
	409 Call Enumerator<Object>.Dispose, X0
	410 Compare X25, 0
	411 JumpIfEqual {471}
	412 Move X0, X25
	413 Call 0x1C17F18
	414 Call 0x1C17F20
	415 Call 0x1C17F20
	416 Call 0x1C17F20
	417 Call 0x1C17F20
	418 Move X0, 0x634000
	419 Move X0, [X0+3200]
	420 Call 0x1C17D08
	421 Move X1, X23
	422 Move X2, X31
	423 Call String.Format, X0, X1
	424 Move X20, X0
	425 Move X0, 0x5D6000
	426 Move X0, [X0+1400]
	427 Call 0x1C17D08
	428 Call 0x1C17F10
	429 Move X21, X0
	430 Move X1, X20
	431 Move X2, X31
	432 Call ArgumentException..ctor, X0, X1
	433 Move X0, 0x634000
	434 Move X0, [X0+3192]
	435 Call 0x1C17D08
	436 Move X1, X0
	437 Move X0, X21
	438 Call 0x1C17DEC
	439 Move X0, X25
	440 Call 0x1C17F18
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Move X0, X20
	444 Call 0x1C17F18
	445 Move X24, X1
	446 Move X23, X0
	447 Move X23, X0
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move X0, X23
	450 Call 0x3EB2AD0
	451 Move X24, [X0]
	452 Call 0x3EB2AE0
	453 Move X1, [X26]
	454 Add X0, X31, 64
	455 Call Enumerator<Object>.Dispose, X0
	456 Compare X24, 0
	457 JumpIfEqual {139}
	458 Move X0, X24
	459 Call 0x1C17F18
	460 Move X24, X31
	461 Move X23, X0
	462 Move X1, [X26]
	463 Add X0, X31, 64
	464 Call Enumerator<Object>.Dispose, X0
	465 Compare X24, 0
	466 JumpIfEqual {505}
	467 Move X0, X24
	468 Call 0x1C17F18
	469 Move X24, X1
	470 Move X23, X0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X0, X23
	473 Call 0x3EB2AD0
	474 Move X20, [X0]
	475 Call 0x3EB2AE0
	476 Move X20, X31
	477 Move X23, X0
	478 Compare X19, 0
	479 JumpIfEqual {503}
	480 Move X8, [X19]
	481 Move X10, 0x5CE000
	482 NotImplemented "Instruction LDRH not yet implemented."
	483 Move X10, [X10+3584]
	484 Move X1, [X10]
	485 Compare X9, 0
	486 JumpIfEqual {493}
	487 Move X10, [X8+176]
	488 Add X10, X10, 8
	489 NotImplemented "Instruction LDUR not yet implemented."
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Subtract X9, X9, 1
	492 Add X10, X10, 16
	493 Move X0, X19
	494 Move W2, W31
	495 Call 0x1C5D788
	496 NotImplemented "Instruction LDRSW not yet implemented."
	497 Add X8, X8, X9
	498 Add X0, X8, 312
	499 Move X8, [X0]
	500 Move X1, [X0+8]
	501 Move X0, X19
	502 NotImplemented "Instruction BLR not yet implemented."
	503 Compare X20, 0
	504 JumpIfNotEqual {507}
	505 Move X0, X23
	506 Call 0x1D2D690
	507 Move X0, X20
	508 Call 0x1C17F18
	509 Call 0x1991590

Method: TAttribute GetAttribute(System.Type type, System.Boolean inherit = False)

Disassembly:
	0x0229FA48 TBNZ X8, 0x0, 0x229FA50
	0x0229FA4C BL 0x1C5C684
	0x0229FA50 BL 0x1C16F10
	0x0229FA54 LDR X8, [X19 + 0x38]
	0x0229FA58 MOV X20, X0
	0x0229FA5C LDR X1, [X8 + 0x8]
	0x0229FA60 BL 0x27152D8
	0x0229FA64 LDR X8, [X19 + 0x38]
	0x0229FA68 LDR X0, [X8 + 0x20]
	0x0229FA6C LDRB W8, [X0 + 0x135]
	0x0229FA70 TBNZ X8, 0x0, 0x229FA78
	0x0229FA74 BL 0x1C5C684
	0x0229FA78 LDR X8, [X0 + 0xB8]
	0x0229FA7C STR X20, [X8]
	0x0229FA80 LDR X8, [X19 + 0x38]
	0x0229FA84 LDR X0, [X8 + 0x20]
	0x0229FA88 LDRB W8, [X0 + 0x135]
	0x0229FA8C TBNZ X8, 0x0, 0x229FA94
	0x0229FA90 BL 0x1C5C684
	0x0229FA94 ADRP X21, 0x1E7C000
	0x0229FA98 LDR X21, [X21 + 0x6E8]
	0x0229FA9C LDR X0, [X21]
	0x0229FAA0 LDR W8, [X0 + 0xE0]
	0x0229FAA4 CBNZ W8, 0x229FAB0
	0x0229FAA8 BL 0x1C16DFC
	0x0229FAAC LDR X0, [X21]
	0x0229FAB0 ADRP X9, 0x1E54000
	0x0229FAB4 LDR X8, [X0 + 0xB8]
	0x0229FAB8 LDR X9, [X9 + 0x6C0]
	0x0229FABC LDR X0, [X9]
	0x0229FAC0 LDR X9, [X19 + 0x38]
	0x0229FAC4 LDR X19, [X8]
	0x0229FAC8 LDR W8, [X0 + 0xE0]
	0x0229FACC LDR X21, [X9 + 0x28]
	0x0229FAD0 CBNZ W8, 0x229FAD8
	0x0229FAD4 BL 0x1C16DFC
	0x0229FAD8 MOV X0, X21
	0x0229FADC MOV X1, X31
	0x0229FAE0 BL 0x338C698
	0x0229FAE4 CBZ X19, 0x229FB14
	0x0229FAE8 ADRP X8, 0x1E7D000
	0x0229FAEC LDR X8, [X8 + 0x7D0]
	0x0229FAF0 MOV X1, X0
	0x0229FAF4 MOV X0, X19
	0x0229FAF8 MOV X2, X20
	0x0229FAFC LDR X3, [X8]
	0x0229FB00 BL 0x2986C5C
	0x0229FB04 MOV X0, X20
	0x0229FB08 LDP X20, X19, [X31 + 0x10]
	0x0229FB0C LDP X30, X21, [X31], #0x20
	0x0229FB10 RET
	0x0229FB14 BL 0x1C16F20
	0x0229FB18 STP X30, X21, [X31 - 0x20]!
	0x0229FB1C STP X20, X19, [X31 + 0x10]
	0x0229FB20 LDR X8, [X0 + 0x38]
	0x0229FB24 MOV X19, X0
	0x0229FB28 CBNZ X8, 0x229FB64
	0x0229FB2C ADRP X0, 0x1E7D000
	0x0229FB30 LDR X0, [X0 + 0x7D0]
	0x0229FB34 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W20, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1E55000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1E55000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Compare X21, 0
	033 JumpIfEqual {74}
	034 Move X8, [X21]
	035 Move X1, X0
	036 And W2, W20, 1
	037 Move X0, X21
	038 Move X9, [X8+520]
	039 Move X3, [X8+528]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {74}
	043 Move W8, [X0+24]
	044 Compare W8, 0
	045 JumpIfEqual {75}
	046 Move X8, [X19+56]
	047 Move X20, [X0+32]
	048 Move X19, [X8+8]
	049 Move W8, [X19+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X19
	055 Call 0x1C5D684
	056 Move X19, X0
	057 Compare X20, 0
	058 JumpIfEqual {67}
	059 Move X0, X20
	060 Move X1, X19
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfNotEqual {68}
	064 Move X0, X20
	065 Move X1, X19
	066 Call 0x1C181E0
	067 Move X0, X31
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Return X0
	074 Call 0x1C17F20
	075 Call 0x1C17F28

Method: System.Void IsDefinedGetInheritedTypes(System.Type type, System.Collections.Generic.List`1<System.Type> types)

Disassembly:
	0x0229FB38 ADRP X0, 0x1E7C000
	0x0229FB3C LDR X0, [X0 + 0x6E8]
	0x0229FB40 BL 0x1C16CF4
	0x0229FB44 ADRP X0, 0x1E54000
	0x0229FB48 LDR X0, [X0 + 0x6C0]
	0x0229FB4C BL 0x1C16CF4
	0x0229FB50 LDR X8, [X19 + 0x38]
	0x0229FB54 CBNZ X8, 0x229FB64
	0x0229FB58 MOV X0, X19
	0x0229FB5C BL 0x1C5C6E0
	0x0229FB60 LDR X8, [X19 + 0x38]
	0x0229FB64 LDR X0, [X8]
	0x0229FB68 LDRB W8, [X0 + 0x135]
	0x0229FB6C TBNZ X8, 0x0, 0x229FB74
	0x0229FB70 BL 0x1C5C684
	0x0229FB74 BL 0x1C16F10
	0x0229FB78 LDR X8, [X19 + 0x38]
	0x0229FB7C MOV X20, X0
	0x0229FB80 LDR X1, [X8 + 0x8]
	0x0229FB84 BL 0x2715B74
	0x0229FB88 LDR X8, [X19 + 0x38]
	0x0229FB8C LDR X0, [X8 + 0x20]
	0x0229FB90 LDRB W8, [X0 + 0x135]
	0x0229FB94 TBNZ X8, 0x0, 0x229FB9C
	0x0229FB98 BL 0x1C5C684
	0x0229FB9C LDR X8, [X0 + 0xB8]
	0x0229FBA0 STR X20, [X8]
	0x0229FBA4 LDR X8, [X19 + 0x38]
	0x0229FBA8 LDR X0, [X8 + 0x20]
	0x0229FBAC LDRB W8, [X0 + 0x135]
	0x0229FBB0 TBNZ X8, 0x0, 0x229FBB8
	0x0229FBB4 BL 0x1C5C684
	0x0229FBB8 ADRP X21, 0x1E7C000
	0x0229FBBC LDR X21, [X21 + 0x6E8]
	0x0229FBC0 LDR X0, [X21]
	0x0229FBC4 LDR W8, [X0 + 0xE0]
	0x0229FBC8 CBNZ W8, 0x229FBD4
	0x0229FBCC BL 0x1C16DFC
	0x0229FBD0 LDR X0, [X21]
	0x0229FBD4 ADRP X9, 0x1E54000
	0x0229FBD8 LDR X8, [X0 + 0xB8]
	0x0229FBDC LDR X9, [X9 + 0x6C0]
	0x0229FBE0 LDR X0, [X9]
	0x0229FBE4 LDR X9, [X19 + 0x38]
	0x0229FBE8 LDR X19, [X8]
	0x0229FBEC LDR W8, [X0 + 0xE0]
	0x0229FBF0 LDR X21, [X9 + 0x28]
	0x0229FBF4 CBNZ W8, 0x229FBFC
	0x0229FBF8 BL 0x1C16DFC
	0x0229FBFC MOV X0, X21
	0x0229FC00 MOV X1, X31
	0x0229FC04 BL 0x338C698
	0x0229FC08 CBZ X19, 0x229FC38
	0x0229FC0C ADRP X8, 0x1E7D000
	0x0229FC10 LDR X8, [X8 + 0x7D0]
	0x0229FC14 MOV X1, X0
	0x0229FC18 MOV X0, X19
	0x0229FC1C MOV X2, X20
	0x0229FC20 LDR X3, [X8]
	0x0229FC24 BL 0x2986C5C
	0x0229FC28 MOV X0, X20
	0x0229FC2C LDP X20, X19, [X31 + 0x10]
	0x0229FC30 LDP X30, X21, [X31], #0x20
	0x0229FC34 RET
	0x0229FC38 BL 0x1C16F20
	0x0229FC3C STP X30, X21, [X31 - 0x20]!
	0x0229FC40 STP X20, X19, [X31 + 0x10]
	0x0229FC44 LDR X8, [X0 + 0x38]
	0x0229FC48 MOV X19, X0
	0x0229FC4C CBNZ X8, 0x229FC88
	0x0229FC50 ADRP X0, 0x1E7D000
	0x0229FC54 LDR X0, [X0 + 0x7D0]
	0x0229FC58 BL 0x1C16CF4
	0x0229FC5C ADRP X0, 0x1E7C000
	0x0229FC60 LDR X0, [X0 + 0x6E8]
	0x0229FC64 BL 0x1C16CF4
	0x0229FC68 ADRP X0, 0x1E54000
	0x0229FC6C LDR X0, [X0 + 0x6C0]
	0x0229FC70 BL 0x1C16CF4
	0x0229FC74 LDR X8, [X19 + 0x38]
	0x0229FC78 CBNZ X8, 0x229FC88
	0x0229FC7C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {76}
	012 Move X0, 0x1E5F000
	013 Move X0, [X0+2360]
	014 Call 0x1C17CF4
	015 Move X0, 0x1E55000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {76}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Move X0, [X22]
	024 Move X8, [X19+56]
	025 Move W9, [X0+224]
	026 Move X22, [X8]
	027 Compare W9, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X31
	032 Call Type.GetTypeFromHandle, X0
	033 Compare X21, 0
	034 JumpIfEqual {97}
	035 Move X8, [X21]
	036 Move X1, X0
	037 Move W2, 1
	038 Move X0, X21
	039 Move X9, [X8+488]
	040 Move X3, [X8+496]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {70}
	046 Compare X20, 0
	047 JumpIfEqual {97}
	048 Move X9, 0x1E5F000
	049 Move X9, [X9+2360]
	050 Move W10, [X20+28]
	051 Move X8, [X20+16]
	052 Move X9, [X9]
	053 Add W10, W10, 1
	054 Move [X20+28], W10
	055 Compare X8, 0
	056 JumpIfEqual {97}
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move W11, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W9, W10, 1
	061 Add X8, X8, X10
	062 Move [X20+24], W9
	063 Move [X8+32], X21
	064 Move X8, [X9+32]
	065 Move X0, X20
	066 Move X1, X21
	067 Move X8, [X8+192]
	068 Move X2, [X8+112]
	069 Call List`1<Object>.AddWithResize, X0, X1
	070 Move X8, [X21]
	071 Move X0, X21
	072 Move X9, [X8+2072]
	073 Move X1, [X8+2080]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X21, X0
	076 Move X22, 0x1E55000
	077 Move X22, [X22+1728]
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move X1, X31
	085 Move X2, X31
	086 Call Type.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {23}
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return 
	097 Call 0x1C17F20

Method: System.Reflection.FieldInfo GetFieldInTypeOrBaseType(System.Type type, System.String fieldName)

Disassembly:
	0x03B26DAC MOV V10.16B, V2.16B
	0x03B26DB0 MOV V12.16B, V1.16B
	0x03B26DB4 MOV V13.16B, V0.16B
	0x03B26DB8 CBNZ W8, 0x3B26DD0
	0x03B26DBC ADRP X0, 0x5D4000
	0x03B26DC0 LDR X0, [X0 + 0x4B8]
	0x03B26DC4 BL 0x1C16CF4
	0x03B26DC8 MOVZ W8, 0x1
	0x03B26DCC STRB W8, [X19 + 0x5AA]
	0x03B26DD0 ADRP X8, 0x5D4000
	0x03B26DD4 LDR X8, [X8 + 0x4B8]
	0x03B26DD8 ADRP X9, 0xFFFFFFFFFCFC4000
	0x03B26DDC FMOV S1, 8
	0x03B26DE0 FABS S0, S11
	0x03B26DE4 LDR X8, [X8]
	0x03B26DE8 FMOV S2, W31
	0x03B26DEC FMAXNM S0, S0, S2
	0x03B26DF0 FABS S5, S9
	0x03B26DF4 LDR X8, [X8 + 0xB8]
	0x03B26DF8 FABD S7, S2, S2
	0x03B26DFC FMAXNM S5, S5, S2
	0x03B26E00 FDIV S4, S13, S11
	0x03B26E04 LDR V3, [X8]
	0x03B26E08 FABD S16, S2, S2
	0x03B26E0C FDIV S6, S12, S9
	0x03B26E10 MOVZ W8, 0x7F800000
	0x03B26E14 FMUL S3, S3, S1
	0x03B26E18 LDR V1, [X9 + 0x240]
	0x03B26E1C FABD S17, S2, S2
	0x03B26E20 LDP X30, X19, [X31 + 0x30]
	0x03B26E24 FMUL S0, S0, S1
	0x03B26E28 FCMP S0, S3
	0x03B26E2C FCSEL S0, S0, S3, GT
	0x03B26E30 FCMP S7, S0
	0x03B26E34 FMUL S5, S5, S1
	0x03B26E38 FCSEL S4, S2, S4, MI
	0x03B26E3C FCMP S5, S3
	0x03B26E40 FCSEL S5, S5, S3, GT
	0x03B26E44 FCMP S16, S5
	0x03B26E48 FCSEL S5, S2, S6, MI
	0x03B26E4C FMOV W9, S5
	0x03B26E50 AND W9, W9, 0x7FFFFFFF
	0x03B26E54 FABS S0, S8
	0x03B26E58 CMP W9, W8
	0x03B26E5C FMOV W9, S4
	0x03B26E60 FMAXNM S0, S0, S2
	0x03B26E64 AND W9, W9, 0x7FFFFFFF
	0x03B26E68 FMUL S6, S0, S1
	0x03B26E6C FCSEL S1, S2, S5, HI
	0x03B26E70 CMP W9, W8
	0x03B26E74 FCSEL S0, S2, S4, HI

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8BD000
	007 Move W8, [X21+1882]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x5CE000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1882], W8
	019 Move X22, 0x5CE000
	020 Move X22, [X22+1728]
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Type.op_Equality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {57}
	034 Compare X20, 0
	035 JumpIfEqual {65}
	036 Move X8, [X20]
	037 Move W2, 116
	038 Move X0, X20
	039 Move X1, X19
	040 Move X9, [X8+1656]
	041 Move X3, [X8+1664]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X1, X31
	044 Move X2, X31
	045 Move X21, X0
	046 Call FieldInfo.op_Inequality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {58}
	051 Move X8, [X20]
	052 Move X0, X20
	053 Move X9, [X8+2072]
	054 Move X1, [X8+2080]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X20, X0
	057 Move X21, X31
	058 Move X0, X21
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0
	065 Call 0x1C17F20

Method: System.String GetNameWithGenericArguments(System.Type type)

Disassembly:
	0x03B26E78 FCMP S6, S3
	0x03B26E7C FCSEL S3, S6, S3, GT
	0x03B26E80 FDIV S7, S10, S8
	0x03B26E84 FCMP S17, S3
	0x03B26E88 FCSEL S3, S2, S7, MI
	0x03B26E8C FMOV W9, S3
	0x03B26E90 LDP D9, D8, [X31 + 0x20]
	0x03B26E94 LDP D11, D10, [X31 + 0x10]
	0x03B26E98 AND W9, W9, 0x7FFFFFFF
	0x03B26E9C CMP W9, W8
	0x03B26EA0 FCSEL S2, S2, S3, HI
	0x03B26EA4 LDP D13, D12, [X31], #0x40
	0x03B26EA8 RET
	0x03B26EAC STP X30, X25, [X31 - 0x40]!
	0x03B26EB0 STP X24, X23, [X31 + 0x10]
	0x03B26EB4 STP X22, X21, [X31 + 0x20]
	0x03B26EB8 STP X20, X19, [X31 + 0x30]
	0x03B26EBC ADRP X20, 0x8BC000
	0x03B26EC0 ADRP X24, 0x5F5000
	0x03B26EC4 LDRB W8, [X20 + 0x76B]
	0x03B26EC8 LDR X24, [X24 + 0xAA0]
	0x03B26ECC MOV X19, X0
	0x03B26ED0 TBNZ X8, 0x0, 0x3B26EF4
	0x03B26ED4 ADRP X0, 0x633000
	0x03B26ED8 LDR X0, [X0 + 0xCC0]
	0x03B26EDC BL 0x1C16CF4
	0x03B26EE0 ADRP X0, 0x5F5000
	0x03B26EE4 LDR X0, [X0 + 0xAA0]
	0x03B26EE8 BL 0x1C16CF4
	0x03B26EEC MOVZ W8, 0x1
	0x03B26EF0 STRB W8, [X20 + 0x76B]
	0x03B26EF4 LDR X0, [X24]
	0x03B26EF8 LDR W8, [X0 + 0xE0]
	0x03B26EFC CBNZ W8, 0x3B26F08
	0x03B26F00 BL 0x1C16DFC
	0x03B26F04 LDR X0, [X24]
	0x03B26F08 LDR X8, [X0 + 0xB8]
	0x03B26F0C ADRP X25, 0x633000
	0x03B26F10 LDR X20, [X8 + 0x10]
	0x03B26F14 LDR X25, [X25 + 0xCC0]
	0x03B26F18 MOV X0, X20
	0x03B26F1C MOV X1, X19
	0x03B26F20 MOV X2, X31
	0x03B26F24 BL 0x33C0DE4
	0x03B26F28 CBZ X0, 0x3B26F48
	0x03B26F2C LDR X23, [X25]
	0x03B26F30 MOV X22, X0
	0x03B26F34 MOV X1, X23
	0x03B26F38 BL 0x1C16E00
	0x03B26F3C MOV X21, X0
	0x03B26F40 CBNZ X0, 0x3B26F4C
	0x03B26F44 B 0x3B26F94
	0x03B26F48 MOV X21, X31
	0x03B26F4C LDR X0, [X24]
	0x03B26F50 LDR W8, [X0 + 0xE0]
	0x03B26F54 CBNZ W8, 0x3B26F60
	0x03B26F58 BL 0x1C16DFC
	0x03B26F5C LDR X0, [X24]
	0x03B26F60 LDR X8, [X0 + 0xB8]
	0x03B26F64 MOV X1, X21
	0x03B26F68 MOV X2, X20
	0x03B26F6C ADD X0, X8, 0x10
	0x03B26F70 BL 0x1C24138
	0x03B26F74 CMP X20, X0
	0x03B26F78 MOV X20, X0
	0x03B26F7C B.NE 0x3B26F18
	0x03B26F80 LDP X20, X19, [X31 + 0x30]
	0x03B26F84 LDP X22, X21, [X31 + 0x20]
	0x03B26F88 LDP X24, X23, [X31 + 0x10]
	0x03B26F8C LDP X30, X25, [X31], #0x40
	0x03B26F90 RET
	0x03B26F94 MOV X0, X22
	0x03B26F98 MOV X1, X23
	0x03B26F9C BL 0x1C171E0
	0x03B26FA0 STP X30, X25, [X31 - 0x40]!
	0x03B26FA4 STP X24, X23, [X31 + 0x10]
	0x03B26FA8 STP X22, X21, [X31 + 0x20]
	0x03B26FAC STP X20, X19, [X31 + 0x30]
	0x03B26FB0 ADRP X20, 0x8BC000
	0x03B26FB4 ADRP X24, 0x5F5000
	0x03B26FB8 LDRB W8, [X20 + 0x76C]
	0x03B26FBC LDR X24, [X24 + 0xAA0]
	0x03B26FC0 MOV X19, X0
	0x03B26FC4 TBNZ X8, 0x0, 0x3B26FE8
	0x03B26FC8 ADRP X0, 0x633000
	0x03B26FCC LDR X0, [X0 + 0xCC0]
	0x03B26FD0 BL 0x1C16CF4
	0x03B26FD4 ADRP X0, 0x5F5000
	0x03B26FD8 LDR X0, [X0 + 0xAA0]
	0x03B26FDC BL 0x1C16CF4
	0x03B26FE0 MOVZ W8, 0x1
	0x03B26FE4 STRB W8, [X20 + 0x76C]
	0x03B26FE8 LDR X0, [X24]
	0x03B26FEC LDR W8, [X0 + 0xE0]
	0x03B26FF0 CBNZ W8, 0x3B26FFC
	0x03B26FF4 BL 0x1C16DFC
	0x03B26FF8 LDR X0, [X24]
	0x03B26FFC LDR X8, [X0 + 0xB8]
	0x03B27000 ADRP X25, 0x632000
	0x03B27004 LDR X20, [X8 + 0x10]
	0x03B27008 B 0x3EB1724
	0x03B2700C MOV X0, X20
	0x03B27010 MOV X1, X19
	0x03B27014 MOV X2, X31
	0x03B27018 BL 0x33C0FDC
	0x03B2701C CBZ X0, 0x3B2703C
	0x03B27020 LDR X23, [X25]
	0x03B27024 MOV X22, X0
	0x03B27028 MOV X1, X23
	0x03B2702C BL 0x1C16E00
	0x03B27030 MOV X21, X0
	0x03B27034 CBNZ X0, 0x3B27040
	0x03B27038 B 0x3B27088
	0x03B2703C MOV X21, X31
	0x03B27040 LDR X0, [X24]
	0x03B27044 LDR W8, [X0 + 0xE0]
	0x03B27048 CBNZ W8, 0x3B27054
	0x03B2704C BL 0x1C16DFC
	0x03B27050 LDR X0, [X24]
	0x03B27054 LDR X8, [X0 + 0xB8]
	0x03B27058 MOV X1, X21
	0x03B2705C MOV X2, X20
	0x03B27060 ADD X0, X8, 0x10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x8BD000
	012 Move W8, [X20+1883]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x5CE000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move X0, 0x634000
	022 Move X0, [X0+3128]
	023 Call 0x1C17CF4
	024 Move X0, 0x5F7000
	025 Move X0, [X0+2624]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CE000
	028 Move X0, [X0+2104]
	029 Call 0x1C17CF4
	030 Move X0, 0x5D0000
	031 Move X0, [X0+608]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1883], W8
	035 Compare X19, 0
	036 JumpIfEqual {150}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+424]
	040 Move X1, [X8+432]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {150}
	044 Move W1, 43
	045 Move W2, 46
	046 Move X3, X31
	047 Call String.Replace, X0, X1, X2
	048 Move X8, [X19]
	049 Move X20, X0
	050 Move X0, X19
	051 Move X9, [X8+968]
	052 Move X1, [X8+976]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {137}
	058 Compare X20, 0
	059 JumpIfEqual {150}
	060 Move W1, 96
	061 Move X0, X20
	062 Move W2, W31
	063 Move X3, X31
	064 Call String.Split, X0, X1, X2
	065 Compare X0, 0
	066 JumpIfEqual {150}
	067 Move W8, [X0+24]
	068 Compare W8, 0
	069 JumpIfEqual {149}
	070 Move X8, [X19]
	071 Move X20, [X0+32]
	072 Move X0, X19
	073 Move X9, [X8+1128]
	074 Move X1, [X8+1136]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {150}
	078 Move X8, 0x5CE000
	079 Move X22, [X0+24]
	080 Move X8, [X8+2760]
	081 Move X19, X0
	082 Move W1, W22
	083 Move X0, [X8]
	084 Call 0x1C17D6C
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X21, X0
	087 Move X27, 0x634000
	088 Move X27, [X27+3128]
	089 Move X23, X31
	090 And X24, X22, 0
	091 Add X25, X19, 32
	092 Add X26, X21, 32
	093 Move W8, [X19+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X27]
	096 Move X22, [X25]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X22
	102 Call TypeExtensions.GetNameWithGenericArguments, X0
	103 Compare X21, 0
	104 JumpIfEqual {150}
	105 Move W8, [X21+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X26], X0
	108 Add X23, X23, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, 0x5CE000
	111 Move X8, [X8+2104]
	112 Move X1, X21
	113 Move X2, X31
	114 Move X0, [X8]
	115 Call String.Join, X0, X1
	116 Move X8, 0x5F6000
	117 Move X9, 0x5CF000
	118 Move X8, [X8+2624]
	119 Move X9, [X9+608]
	120 Move X2, X0
	121 Move X0, X20
	122 Move X1, [X8]
	123 Move X3, [X9]
	124 Move X20, [X31+64]
	125 Move X19, [X31+72]
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X26, [X31+16]
	131 Move X25, [X31+24]
	132 Move X4, X31
	133 Move X30, [X31+80]
	134 Move X27, [X31+88]
	135 Call String.Concat, X0, X1, X2, X3
	136 Return X0
	137 Move X0, X20
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X26, [X31+16]
	145 Move X25, [X31+24]
	146 Move X30, [X31+80]
	147 Move X27, [X31+88]
	148 Return X0
	149 Call 0x1C17F28
	150 Call 0x1C17F20

Method: System.String GetNameWithFullGenericArguments(System.Type type)

Disassembly:
	0x03B27064 BL 0x1C24138
	0x03B27068 CMP X20, X0
	0x03B2706C MOV X20, X0
	0x03B27070 B.NE 0x3B2700C
	0x03B27074 LDP X20, X19, [X31 + 0x30]
	0x03B27078 LDP X22, X21, [X31 + 0x20]
	0x03B2707C LDP X24, X23, [X31 + 0x10]
	0x03B27080 LDP X30, X25, [X31], #0x40
	0x03B27084 RET
	0x03B27088 MOV X0, X22
	0x03B2708C MOV X1, X23
	0x03B27090 BL 0x1C171E0
	0x03B27094 STP X30, X21, [X31 - 0x20]!
	0x03B27098 STP X20, X19, [X31 + 0x10]
	0x03B2709C ADRP X19, 0x8BB000
	0x03B270A0 ADRP X21, 0x5CC000
	0x03B270A4 ADRP X20, 0x5F4000
	0x03B270A8 LDRB W8, [X19 + 0x76D]
	0x03B270AC LDR X21, [X21 + 0xA58]
	0x03B270B0 LDR X20, [X20 + 0xAA0]
	0x03B270B4 TBNZ X8, 0x0, 0x3B270D8
	0x03B270B8 ADRP X0, 0x5F4000
	0x03B270BC LDR X0, [X0 + 0xAA0]
	0x03B270C0 BL 0x1C16CF4
	0x03B270C4 ADRP X0, 0x5CC000
	0x03B270C8 LDR X0, [X0 + 0xA58]
	0x03B270CC BL 0x1C16CF4
	0x03B270D0 MOVZ W8, 0x1
	0x03B270D4 STRB W8, [X19 + 0x76D]
	0x03B270D8 LDR X0, [X21]
	0x03B270DC BL 0x1C16F10
	0x03B270E0 MOV X1, X31
	0x03B270E4 MOV X19, X0
	0x03B270E8 BL 0x3C35A08
	0x03B270EC LDR X0, [X20]
	0x03B270F0 LDR W8, [X0 + 0xE0]
	0x03B270F4 CBNZ W8, 0x3B27100
	0x03B270F8 BL 0x1C16DFC
	0x03B270FC LDR X0, [X20]
	0x03B27100 LDR X8, [X0 + 0xB8]
	0x03B27104 LDR X8, [X8 + 0x10]
	0x03B27108 CBZ X8, 0x3B27120
	0x03B2710C LDR X9, [X8 + 0x18]
	0x03B27110 LDR X0, [X8 + 0x40]
	0x03B27114 LDR X2, [X8 + 0x28]
	0x03B27118 MOV X1, X19
	0x03B2711C BLR X9
	0x03B27120 MOV X0, X19
	0x03B27124 LDP X20, X19, [X31 + 0x10]
	0x03B27128 LDP X30, X21, [X31], #0x20
	0x03B2712C RET
	0x03B27130 STR X30, [X31 - 0x30]!
	0x03B27134 STP X22, X21, [X31 + 0x10]
	0x03B27138 STP X20, X19, [X31 + 0x20]
	0x03B2713C ADRP X19, 0x8BB000
	0x03B27140 ADRP X22, 0x5CC000
	0x03B27144 ADRP X21, 0x5F4000
	0x03B27148 LDRB W8, [X19 + 0x76E]
	0x03B2714C LDR X22, [X22 + 0xA58]
	0x03B27150 LDR X21, [X21 + 0xAA0]
	0x03B27154 MOV X20, X0
	0x03B27158 TBNZ X8, 0x0, 0x3B2717C
	0x03B2715C ADRP X0, 0x5F4000
	0x03B27160 LDR X0, [X0 + 0xAA0]
	0x03B27164 BL 0x1C16CF4
	0x03B27168 ADRP X0, 0x5CC000
	0x03B2716C LDR X0, [X0 + 0xA58]
	0x03B27170 BL 0x1C16CF4
	0x03B27174 MOVZ W8, 0x1
	0x03B27178 STRB W8, [X19 + 0x76E]
	0x03B2717C LDR X0, [X22]
	0x03B27180 BL 0x1C16F10
	0x03B27184 MOV X1, X20
	0x03B27188 MOV X2, X31
	0x03B2718C MOV X19, X0
	0x03B27190 BL 0x3C35934
	0x03B27194 LDR X0, [X21]
	0x03B27198 LDR W8, [X0 + 0xE0]
	0x03B2719C CBNZ W8, 0x3B271A8
	0x03B271A0 BL 0x1C16DFC
	0x03B271A4 LDR X0, [X21]
	0x03B271A8 LDR X8, [X0 + 0xB8]
	0x03B271AC LDR X8, [X8 + 0x10]
	0x03B271B0 CBZ X8, 0x3B271C8
	0x03B271B4 LDR X9, [X8 + 0x18]
	0x03B271B8 LDR X0, [X8 + 0x40]
	0x03B271BC LDR X2, [X8 + 0x28]
	0x03B271C0 MOV X1, X19
	0x03B271C4 BLR X9
	0x03B271C8 MOV X0, X19
	0x03B271CC LDP X20, X19, [X31 + 0x20]
	0x03B271D0 LDP X22, X21, [X31 + 0x10]
	0x03B271D4 LDR X30, [X31], #0x30
	0x03B271D8 RET
	0x03B271DC STP X30, X23, [X31 - 0x30]!
	0x03B271E0 STP X22, X21, [X31 + 0x10]
	0x03B271E4 STP X20, X19, [X31 + 0x20]
	0x03B271E8 ADRP X23, 0x8BB000
	0x03B271EC ADRP X22, 0x5CC000
	0x03B271F0 LDRB W8, [X23 + 0x76F]
	0x03B271F4 LDR X22, [X22 + 0x598]
	0x03B271F8 MOV W20, W2
	0x03B271FC MOV X19, X1
	0x03B27200 MOV X21, X0
	0x03B27204 TBNZ X8, 0x0, 0x3B27234
	0x03B27208 ADRP X0, 0x5F4000
	0x03B2720C LDR X0, [X0 + 0xAA0]
	0x03B27210 BL 0x1C16CF4
	0x03B27214 ADRP X0, 0x632000
	0x03B27218 LDR X0, [X0 + 0xCC8]
	0x03B2721C BL 0x1C16CF4
	0x03B27220 ADRP X0, 0x5CC000
	0x03B27224 LDR X0, [X0 + 0x598]
	0x03B27228 BL 0x1C16CF4
	0x03B2722C MOVZ W8, 0x1
	0x03B27230 STRB W8, [X23 + 0x76F]
	0x03B27234 LDR X0, [X22]
	0x03B27238 ADRP X22, 0x632000
	0x03B2723C LDR W8, [X0 + 0xE0]
	0x03B27240 LDR X22, [X22 + 0xCC8]
	0x03B27244 CBNZ W8, 0x3B2724C
	0x03B27248 BL 0x1C16DFC
	0x03B2724C LDR X3, [X22]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x8BC000
	012 Move W8, [X20+1884]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x5CD000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move X0, 0x633000
	022 Move X0, [X0+3128]
	023 Call 0x1C17CF4
	024 Move X0, 0x5F6000
	025 Move X0, [X0+2624]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CD000
	028 Move X0, [X0+2104]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CF000
	031 Move X0, [X0+608]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1884], W8
	035 Compare X19, 0
	036 JumpIfEqual {150}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+424]
	040 Move X1, [X8+432]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {150}
	044 Move W1, 43
	045 Move W2, 46
	046 Move X3, X31
	047 Call String.Replace, X0, X1, X2
	048 Move X8, [X19]
	049 Move X20, X0
	050 Move X0, X19
	051 Move X9, [X8+968]
	052 Move X1, [X8+976]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {137}
	058 Compare X20, 0
	059 JumpIfEqual {150}
	060 Move W1, 96
	061 Move X0, X20
	062 Move W2, W31
	063 Move X3, X31
	064 Call String.Split, X0, X1, X2
	065 Compare X0, 0
	066 JumpIfEqual {150}
	067 Move W8, [X0+24]
	068 Compare W8, 0
	069 JumpIfEqual {149}
	070 Move X8, [X19]
	071 Move X20, [X0+32]
	072 Move X0, X19
	073 Move X9, [X8+1128]
	074 Move X1, [X8+1136]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {150}
	078 Move X8, 0x5CD000
	079 Move X22, [X0+24]
	080 Move X8, [X8+2760]
	081 Move X19, X0
	082 Move W1, W22
	083 Move X0, [X8]
	084 Call 0x1C17D6C
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X21, X0
	087 Move X27, 0x633000
	088 Move X27, [X27+3128]
	089 Move X23, X31
	090 And X24, X22, 0
	091 Add X25, X21, 32
	092 Add X26, X19, 32
	093 Move W8, [X19+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X27]
	096 Move X22, [X26]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X22
	102 Call TypeExtensions.GetFullNameWithGenericArgumentsInternal, X0
	103 Compare X21, 0
	104 JumpIfEqual {150}
	105 Move W8, [X21+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X25], X0
	108 Add X23, X23, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X8, 0x5CD000
	111 Move X8, [X8+2104]
	112 Move X1, X21
	113 Move X2, X31
	114 Move X0, [X8]
	115 Call String.Join, X0, X1
	116 Move X8, 0x5F6000
	117 Move X9, 0x5CF000
	118 Move X8, [X8+2624]
	119 Move X9, [X9+608]
	120 Move X2, X0
	121 Move X0, X20
	122 Move X1, [X8]
	123 Move X3, [X9]
	124 Move X20, [X31+64]
	125 Move X19, [X31+72]
	126 Move X22, [X31+48]
	127 Move X21, [X31+56]
	128 Move X24, [X31+32]
	129 Move X23, [X31+40]
	130 Move X26, [X31+16]
	131 Move X25, [X31+24]
	132 Move X4, X31
	133 Move X30, [X31+80]
	134 Move X27, [X31+88]
	135 Call String.Concat, X0, X1, X2, X3
	136 Return X0
	137 Move X0, X20
	138 Move X20, [X31+64]
	139 Move X19, [X31+72]
	140 Move X22, [X31+48]
	141 Move X21, [X31+56]
	142 Move X24, [X31+32]
	143 Move X23, [X31+40]
	144 Move X26, [X31+16]
	145 Move X25, [X31+24]
	146 Move X30, [X31+80]
	147 Move X27, [X31+88]
	148 Return X0
	149 Call 0x1C17F28
	150 Call 0x1C17F20

Method: System.String GetFullNameWithGenericArguments(System.Type type)

Disassembly:
	0x03B2742C LDR X2, [X21]
	0x03B27430 MOV X0, X20
	0x03B27434 MOV V0.16B, V14.16B
	0x03B27438 MOV V1.16B, V13.16B
	0x03B2743C MOV V2.16B, V12.16B
	0x03B27440 MOV V3.16B, V11.16B
	0x03B27444 MOV V4.16B, V10.16B
	0x03B27448 MOV V5.16B, V9.16B
	0x03B2744C MOV V6.16B, V8.16B
	0x03B27450 MOV X1, X19
	0x03B27454 BL 0x222D6B8
	0x03B27458 MOV X1, X31
	0x03B2745C MOV X2, X31
	0x03B27460 MOV X19, X0
	0x03B27464 BL 0x3C354F8
	0x03B27468 TBZ X0, 0x0, 0x3B274C4
	0x03B2746C ADRP X20, 0x5F4000
	0x03B27470 LDR X20, [X20 + 0xAA0]
	0x03B27474 LDR X0, [X20]
	0x03B27478 LDR W8, [X0 + 0xE0]
	0x03B2747C CBNZ W8, 0x3B27488
	0x03B27480 BL 0x1C16DFC
	0x03B27484 LDR X0, [X20]
	0x03B27488 LDR X8, [X0 + 0xB8]
	0x03B2748C LDR X8, [X8 + 0x10]
	0x03B27490 CBZ X8, 0x3B274C4
	0x03B27494 LDR W9, [X0 + 0xE0]
	0x03B27498 CBNZ W9, 0x3B274B0
	0x03B2749C BL 0x1C16DFC
	0x03B274A0 LDR X8, [X20]
	0x03B274A4 LDR X8, [X8 + 0xB8]
	0x03B274A8 LDR X8, [X8 + 0x10]
	0x03B274AC CBZ X8, 0x3B274E8
	0x03B274B0 LDR X9, [X8 + 0x18]
	0x03B274B4 LDR X0, [X8 + 0x40]
	0x03B274B8 LDR X2, [X8 + 0x28]
	0x03B274BC MOV X1, X19
	0x03B274C0 BLR X9
	0x03B274C4 MOV X0, X19
	0x03B274C8 LDP X20, X19, [X31 + 0x50]
	0x03B274CC LDP X22, X21, [X31 + 0x40]
	0x03B274D0 LDR X30, [X31 + 0x38]
	0x03B274D4 LDP D9, D8, [X31 + 0x28]
	0x03B274D8 LDP D11, D10, [X31 + 0x18]
	0x03B274DC LDP D13, D12, [X31 + 0x8]
	0x03B274E0 LDR V14, [X31], #0x60
	0x03B274E4 RET
	0x03B274E8 BL 0x1C16F20
	0x03B274EC STR X30, [X31 - 0x30]!
	0x03B274F0 STP X22, X21, [X31 + 0x10]
	0x03B274F4 STP X20, X19, [X31 + 0x20]
	0x03B274F8 ADRP X22, 0x8BB000
	0x03B274FC ADRP X21, 0x5CC000
	0x03B27500 LDRB W8, [X22 + 0x772]
	0x03B27504 LDR X21, [X21 + 0x598]
	0x03B27508 MOV X20, X1
	0x03B2750C MOV X19, X0
	0x03B27510 TBNZ X8, 0x0, 0x3B27540
	0x03B27514 ADRP X0, 0x5F4000
	0x03B27518 LDR X0, [X0 + 0xAA0]
	0x03B2751C BL 0x1C16CF4
	0x03B27520 ADRP X0, 0x5D0000
	0x03B27524 LDR X0, [X0 + 0x1D0]
	0x03B27528 BL 0x1C16CF4
	0x03B2752C ADRP X0, 0x5CC000
	0x03B27530 LDR X0, [X0 + 0x598]
	0x03B27534 BL 0x1C16CF4
	0x03B27538 MOVZ W8, 0x1
	0x03B2753C STRB W8, [X22 + 0x772]
	0x03B27540 LDR X0, [X21]
	0x03B27544 ADRP X22, 0x5D0000
	0x03B27548 ADRP X21, 0x5F4000
	0x03B2754C LDR W8, [X0 + 0xE0]
	0x03B27550 LDR X22, [X22 + 0x1D0]
	0x03B27554 LDR X21, [X21 + 0xAA0]
	0x03B27558 CBNZ W8, 0x3B27560
	0x03B2755C BL 0x1C16DFC
	0x03B27560 LDR X2, [X22]
	0x03B27564 MOV X0, X19
	0x03B27568 MOV X1, X20
	0x03B2756C BL 0x222D488
	0x03B27570 LDR X8, [X21]
	0x03B27574 MOV X20, X0
	0x03B27578 LDR W9, [X8 + 0xE0]
	0x03B2757C CBNZ W9, 0x3B27588
	0x03B27580 MOV X0, X8
	0x03B27584 BL 0x1C16DFC
	0x03B27588 MOV X0, X19
	0x03B2758C MOV X1, X20
	0x03B27590 BL 0x3B275A8
	0x03B27594 MOV X0, X20
	0x03B27598 LDP X20, X19, [X31 + 0x20]
	0x03B2759C LDP X22, X21, [X31 + 0x10]
	0x03B275A0 LDR X30, [X31], #0x30
	0x03B275A4 RET
	0x03B275A8 STR X30, [X31 - 0x40]!
	0x03B275AC STP X24, X23, [X31 + 0x10]
	0x03B275B0 STP X22, X21, [X31 + 0x20]
	0x03B275B4 STP X20, X19, [X31 + 0x30]
	0x03B275B8 ADRP X21, 0x8BB000
	0x03B275BC LDRB W8, [X21 + 0x773]
	0x03B275C0 MOV X20, X1
	0x03B275C4 MOV X19, X0
	0x03B275C8 TBNZ X8, 0x0, 0x3B275E0
	0x03B275CC ADRP X0, 0x5F4000
	0x03B275D0 LDR X0, [X0 + 0xAA0]
	0x03B275D4 BL 0x1C16CF4
	0x03B275D8 MOVZ W8, 0x1
	0x03B275DC STRB W8, [X21 + 0x773]
	0x03B275E0 CBZ X19, 0x3B276D8
	0x03B275E4 MOV X0, X19
	0x03B275E8 MOV X1, X31
	0x03B275EC BL 0x3C396B0
	0x03B275F0 CBZ X20, 0x3B276D8
	0x03B275F4 MOV W1, W0
	0x03B275F8 MOV X0, X20
	0x03B275FC MOV X2, X31
	0x03B27600 BL 0x3C396EC
	0x03B27604 MOV X0, X19
	0x03B27608 MOV X1, X31
	0x03B2760C BL 0x3C356F8
	0x03B27610 MOV X19, X0
	0x03B27614 MOV X0, X20
	0x03B27618 MOV X1, X31
	0x03B2761C BL 0x3C356F8
	0x03B27620 CBZ X19, 0x3B276D8
	0x03B27624 MOV X20, X0
	0x03B27628 MOV X0, X19
	0x03B2762C MOV X1, X31
	0x03B27630 BL 0x3C40C8C
	0x03B27634 CMP W0, 0x1
	0x03B27638 B.LT 0x3B276C4
	0x03B2763C ADRP X24, 0x5F4000
	0x03B27640 LDR X24, [X24 + 0xAA0]
	0x03B27644 MOV W21, W31
	0x03B27648 MOV X0, X19
	0x03B2764C MOV W1, W21
	0x03B27650 MOV X2, X31
	0x03B27654 BL 0x3C410A0
	0x03B27658 CBZ X0, 0x3B276D8
	0x03B2765C MOV X1, X31
	0x03B27660 BL 0x3C32ECC
	0x03B27664 CBZ X20, 0x3B276D8
	0x03B27668 MOV X22, X0
	0x03B2766C MOV X0, X20
	0x03B27670 MOV W1, W21
	0x03B27674 MOV X2, X31
	0x03B27678 BL 0x3C410A0
	0x03B2767C CBZ X0, 0x3B276D8
	0x03B27680 MOV X1, X31
	0x03B27684 BL 0x3C32ECC
	0x03B27688 LDR X8, [X24]
	0x03B2768C MOV X23, X0
	0x03B27690 LDR W9, [X8 + 0xE0]
	0x03B27694 CBNZ W9, 0x3B276A0
	0x03B27698 MOV X0, X8
	0x03B2769C BL 0x1C16DFC
	0x03B276A0 MOV X0, X22
	0x03B276A4 MOV X1, X23
	0x03B276A8 BL 0x3B275A8
	0x03B276AC MOV X0, X19
	0x03B276B0 MOV X1, X31
	0x03B276B4 ADD W21, W21, 0x1
	0x03B276B8 BL 0x3C40C8C
	0x03B276BC CMP W21, W0
	0x03B276C0 B.LT 0x3B27648
	0x03B276C4 LDP X20, X19, [X31 + 0x30]
	0x03B276C8 LDP X22, X21, [X31 + 0x20]
	0x03B276CC LDP X24, X23, [X31 + 0x10]
	0x03B276D0 LDR X30, [X31], #0x40
	0x03B276D4 RET
	0x03B276D8 BL 0x1C16F20
	0x03B276DC STP X30, X23, [X31 - 0x30]!
	0x03B276E0 STP X22, X21, [X31 + 0x10]
	0x03B276E4 STP X20, X19, [X31 + 0x20]
	0x03B276E8 ADRP X21, 0x8BB000
	0x03B276EC LDRB W8, [X21 + 0x774]
	0x03B276F0 MOV X19, X1
	0x03B276F4 MOV X20, X0
	0x03B276F8 TBNZ X8, 0x0, 0x3B2771C
	0x03B276FC ADRP X0, 0x632000
	0x03B27700 LDR X0, [X0 + 0xCD8]
	0x03B27704 BL 0x1C16CF4
	0x03B27708 ADRP X0, 0x5D2000
	0x03B2770C LDR X0, [X0 + 0x570]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x8BC000
	009 Move W8, [X19+1885]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x5CE000
	016 Move X0, [X0+440]
	017 Call 0x1C17CF4
	018 Move X0, 0x5F5000
	019 Move X0, [X0+2936]
	020 Call 0x1C17CF4
	021 Move X0, 0x633000
	022 Move X0, [X0+3208]
	023 Call 0x1C17CF4
	024 Move X0, 0x5CF000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0x633000
	028 Move X0, [X0+3128]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CD000
	031 Move X0, [X0+1728]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D6000
	034 Move X0, [X0+1936]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1885], W8
	038 Compare X20, 0
	039 JumpIfEqual {223}
	040 Move X8, [X20]
	041 Move X23, 0x5CD000
	042 Move X0, X20
	043 Move X9, [X8+440]
	044 Move X1, [X8+448]
	045 Move X23, [X23+1728]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X23]
	048 Move X19, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X22, 0x633000
	055 Move X22, [X22+3128]
	056 Move X0, X19
	057 Move X1, X31
	058 Move X2, X31
	059 Call Type.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {73}
	064 Move X8, [X20]
	065 Move X0, X20
	066 Move X9, [X8+936]
	067 Move X1, [X8+944]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {88}
	073 Move X0, [X22]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X20
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Call TypeExtensions.GetFullNameWithGenericArgumentsInternal, X0
	087 Return X0
	088 Move X0, [X22]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X22]
	094 Move X8, [X0+184]
	095 Move X8, [X8+8]
	096 Compare X8, 0
	097 JumpIfEqual {223}
	098 Move W2, [X8+24]
	099 Move W9, [X8+28]
	100 Add W9, W9, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move [X8+24], W31
	103 Move [X8+28], W9
	104 Move X0, [X8+16]
	105 Move W1, W31
	106 Move X3, X31
	107 Call Array.Clear, X0, X1, X2
	108 Move X0, X20
	109 Call TypeExtensions.GetNameWithFullGenericArguments, X0
	110 Move X8, [X22]
	111 Move X8, [X8+184]
	112 Move X8, [X8+8]
	113 Compare X8, 0
	114 JumpIfEqual {223}
	115 Move X10, 0x5CE000
	116 Move X10, [X10+440]
	117 Move W11, [X8+28]
	118 Move X9, [X8+16]
	119 Move X10, [X10]
	120 Add W11, W11, 1
	121 Move [X8+28], W11
	122 Compare X9, 0
	123 JumpIfEqual {223}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W12, [X9+24]
	126 Move X1, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W10, W11, 1
	129 Add X9, X9, X11
	130 Move [X8+24], W10
	131 Move [X9+32], X1
	132 Move X9, [X10+32]
	133 Move X0, X8
	134 Move X9, [X9+192]
	135 Move X2, [X9+112]
	136 Call List`1<Object>.AddWithResize, X0, X1
	137 Compare X19, 0
	138 JumpIfEqual {223}
	139 Move X24, 0x633000
	140 Move X24, [X24+3208]
	141 Move X8, [X19]
	142 Move X0, X19
	143 Move X9, [X8+440]
	144 Move X1, [X8+448]
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Move X8, [X23]
	147 Move X20, X0
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, X20
	154 Move X1, X31
	155 Move X2, X31
	156 Call Type.op_Equality, X0, X1
	157 Move X8, [X22]
	158 Move W21, W0
	159 Move W9, [X8+224]
	160 Compare W9, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X8
	163 Call 0x1C17DFC
	164 Move X0, X19
	165 Move TEMP, X21
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {183}
	169 Call TypeExtensions.GetNameWithFullGenericArguments, X0
	170 Move X8, [X22]
	171 Move X8, [X8+184]
	172 Move X8, [X8+8]
	173 Compare X8, 0
	174 JumpIfEqual {223}
	175 Move X3, [X24]
	176 Move X2, X0
	177 Move X0, X8
	178 Move W1, W31
	179 Call List`1<Object>.Insert, X0, X1, X2
	180 Move X19, X20
	181 Compare X20, 0
	182 JumpIfNotEqual {141}
	183 Call TypeExtensions.GetFullNameWithGenericArguments, X0
	184 Move X8, [X22]
	185 Move X8, [X8+184]
	186 Move X8, [X8+8]
	187 Compare X8, 0
	188 JumpIfEqual {223}
	189 Move X3, [X24]
	190 Move X2, X0
	191 Move X0, X8
	192 Move W1, W31
	193 Call List`1<Object>.Insert, X0, X1, X2
	194 Move X0, [X22]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {200}
	198 Call 0x1C17DFC
	199 Move X0, [X22]
	200 Move X8, [X0+184]
	201 Move X0, [X8+8]
	202 Compare X0, 0
	203 JumpIfEqual {223}
	204 Move X8, 0x5CF000
	205 Move X8, [X8+3704]
	206 Move X1, [X8]
	207 Call List`1<Object>.ToArray, X0
	208 Move X8, 0x5D6000
	209 Move X8, [X8+1936]
	210 Move X20, [X31+48]
	211 Move X19, [X31+56]
	212 Move X22, [X31+32]
	213 Move X21, [X31+40]
	214 Move X24, [X31+16]
	215 Move X23, [X31+24]
	216 Move X8, [X8]
	217 Move X1, X0
	218 Move X2, X31
	219 Move X0, X8
	220 Move X30, [X31+64]
	221 Call String.Join, X0, X1
	222 Return X0
	223 Call 0x1C17F20

Method: System.String GetFullNameWithGenericArgumentsInternal(System.Type type)

Disassembly:
	0x03B27250 AND W2, W20, 0x1
	0x03B27254 MOV X0, X21
	0x03B27258 MOV X1, X19
	0x03B2725C BL 0x222D4F8
	0x03B27260 MOV X1, X31
	0x03B27264 MOV X2, X31
	0x03B27268 MOV X19, X0
	0x03B2726C BL 0x3C354F8
	0x03B27270 TBZ X0, 0x0, 0x3B272CC
	0x03B27274 ADRP X20, 0x5F4000
	0x03B27278 LDR X20, [X20 + 0xAA0]
	0x03B2727C LDR X0, [X20]
	0x03B27280 LDR W8, [X0 + 0xE0]
	0x03B27284 CBNZ W8, 0x3B27290
	0x03B27288 BL 0x1C16DFC
	0x03B2728C LDR X0, [X20]
	0x03B27290 LDR X8, [X0 + 0xB8]
	0x03B27294 LDR X8, [X8 + 0x10]
	0x03B27298 CBZ X8, 0x3B272CC
	0x03B2729C LDR W9, [X0 + 0xE0]
	0x03B272A0 CBNZ W9, 0x3B272B8
	0x03B272A4 BL 0x1C16DFC
	0x03B272A8 LDR X8, [X20]
	0x03B272AC LDR X8, [X8 + 0xB8]
	0x03B272B0 LDR X8, [X8 + 0x10]
	0x03B272B4 CBZ X8, 0x3B272E0
	0x03B272B8 LDR X9, [X8 + 0x18]
	0x03B272BC LDR X0, [X8 + 0x40]
	0x03B272C0 LDR X2, [X8 + 0x28]
	0x03B272C4 MOV X1, X19
	0x03B272C8 BLR X9
	0x03B272CC MOV X0, X19
	0x03B272D0 LDP X20, X19, [X31 + 0x20]
	0x03B272D4 LDP X22, X21, [X31 + 0x10]
	0x03B272D8 LDP X30, X23, [X31], #0x30
	0x03B272DC RET
	0x03B272E0 BL 0x1C16F20
	0x03B272E4 STR D14, [X31 - 0x60]!
	0x03B272E8 STP D13, D12, [X31 + 0x10]
	0x03B272EC STP D11, D10, [X31 + 0x20]
	0x03B272F0 STP D9, D8, [X31 + 0x30]
	0x03B272F4 STP X30, X21, [X31 + 0x40]
	0x03B272F8 STP X20, X19, [X31 + 0x50]
	0x03B272FC ADRP X21, 0x8BB000
	0x03B27300 ADRP X20, 0x5F4000
	0x03B27304 LDRB W8, [X21 + 0x770]
	0x03B27308 LDR X20, [X20 + 0xAA0]
	0x03B2730C MOV V8.16B, V6.16B
	0x03B27310 MOV V9.16B, V5.16B
	0x03B27314 MOV V10.16B, V4.16B
	0x03B27318 MOV V11.16B, V3.16B
	0x03B2731C MOV V12.16B, V2.16B
	0x03B27320 MOV V13.16B, V1.16B
	0x03B27324 MOV V14.16B, V0.16B
	0x03B27328 MOV X19, X0
	0x03B2732C TBNZ X8, 0x0, 0x3B27344
	0x03B27330 ADRP X0, 0x5F4000
	0x03B27334 LDR X0, [X0 + 0xAA0]
	0x03B27338 BL 0x1C16CF4
	0x03B2733C MOVZ W8, 0x1
	0x03B27340 STRB W8, [X21 + 0x770]
	0x03B27344 LDR X0, [X20]
	0x03B27348 LDR W8, [X0 + 0xE0]
	0x03B2734C CBNZ W8, 0x3B27354
	0x03B27350 BL 0x1C16DFC
	0x03B27354 MOV X0, X19
	0x03B27358 MOV V1.16B, V13.16B
	0x03B2735C MOV V2.16B, V12.16B
	0x03B27360 MOV V3.16B, V11.16B
	0x03B27364 MOV V4.16B, V10.16B
	0x03B27368 MOV V5.16B, V9.16B
	0x03B2736C MOV V6.16B, V8.16B
	0x03B27370 LDP X20, X19, [X31 + 0x50]
	0x03B27374 LDP X30, X21, [X31 + 0x40]
	0x03B27378 LDP D9, D8, [X31 + 0x30]
	0x03B2737C LDP D11, D10, [X31 + 0x20]
	0x03B27380 LDP D13, D12, [X31 + 0x10]
	0x03B27384 MOV X1, X31
	0x03B27388 MOV V0.16B, V14.16B
	0x03B2738C LDR V14, [X31], #0x60
	0x03B27390 B 0x3B27394
	0x03B27394 STR D14, [X31 - 0x60]!
	0x03B27398 STP D13, D12, [X31 + 0x8]
	0x03B2739C STP D11, D10, [X31 + 0x18]
	0x03B273A0 STP D9, D8, [X31 + 0x28]
	0x03B273A4 STR X30, [X31 + 0x38]
	0x03B273A8 STP X22, X21, [X31 + 0x40]
	0x03B273AC STP X20, X19, [X31 + 0x50]
	0x03B273B0 ADRP X22, 0x8BB000
	0x03B273B4 ADRP X21, 0x5CC000
	0x03B273B8 LDRB W8, [X22 + 0x771]
	0x03B273BC LDR X21, [X21 + 0x598]
	0x03B273C0 MOV V8.16B, V6.16B
	0x03B273C4 MOV V9.16B, V5.16B
	0x03B273C8 MOV V10.16B, V4.16B
	0x03B273CC MOV V11.16B, V3.16B
	0x03B273D0 MOV V12.16B, V2.16B
	0x03B273D4 MOV V13.16B, V1.16B
	0x03B273D8 MOV V14.16B, V0.16B
	0x03B273DC MOV X19, X1
	0x03B273E0 MOV X20, X0
	0x03B273E4 TBNZ X8, 0x0, 0x3B27414
	0x03B273E8 ADRP X0, 0x5F4000
	0x03B273EC LDR X0, [X0 + 0xAA0]
	0x03B273F0 BL 0x1C16CF4
	0x03B273F4 ADRP X0, 0x632000
	0x03B273F8 LDR X0, [X0 + 0xCD0]
	0x03B273FC BL 0x1C16CF4
	0x03B27400 ADRP X0, 0x5CC000
	0x03B27404 LDR X0, [X0 + 0x598]
	0x03B27408 BL 0x1C16CF4
	0x03B2740C MOVZ W8, 0x1
	0x03B27410 STRB W8, [X22 + 0x771]
	0x03B27414 LDR X0, [X21]
	0x03B27418 ADRP X21, 0x632000
	0x03B2741C LDR W8, [X0 + 0xE0]
	0x03B27420 LDR X21, [X21 + 0xCD0]
	0x03B27424 CBNZ W8, 0x3B2742C
	0x03B27428 BL 0x1C16DFC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x8BC000
	012 Move W8, [X19+1886]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x5CD000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move X0, 0x633000
	022 Move X0, [X0+3128]
	023 Call 0x1C17CF4
	024 Move X0, 0x5F6000
	025 Move X0, [X0+2624]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CD000
	028 Move X0, [X0+2104]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CF000
	031 Move X0, [X0+608]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+1886], W8
	035 Compare X20, 0
	036 JumpIfEqual {144}
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+744]
	040 Move X1, [X8+752]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X20]
	043 Move X19, X0
	044 Move X0, X20
	045 Move X9, [X8+968]
	046 Move X1, [X8+976]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {131}
	052 Compare X19, 0
	053 JumpIfEqual {144}
	054 Move W1, 96
	055 Move X0, X19
	056 Move W2, W31
	057 Move X3, X31
	058 Call String.Split, X0, X1, X2
	059 Compare X0, 0
	060 JumpIfEqual {144}
	061 Move W8, [X0+24]
	062 Compare W8, 0
	063 JumpIfEqual {143}
	064 Move X8, [X20]
	065 Move X19, [X0+32]
	066 Move X0, X20
	067 Move X9, [X8+1128]
	068 Move X1, [X8+1136]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {144}
	072 Move X8, 0x5CD000
	073 Move X22, [X0+24]
	074 Move X8, [X8+2760]
	075 Move X20, X0
	076 Move W1, W22
	077 Move X0, [X8]
	078 Call 0x1C17D6C
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X21, X0
	081 Move X27, 0x633000
	082 Move X27, [X27+3128]
	083 Move X23, X31
	084 And X24, X22, 0
	085 Add X25, X20, 32
	086 Add X26, X21, 32
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, [X27]
	090 Move X22, [X25]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X22
	096 Call TypeExtensions.GetFullNameWithGenericArguments, X0
	097 Compare X21, 0
	098 JumpIfEqual {144}
	099 Move W8, [X21+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X26], X0
	102 Add X23, X23, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X8, 0x5CD000
	105 Move X8, [X8+2104]
	106 Move X1, X21
	107 Move X2, X31
	108 Move X0, [X8]
	109 Call String.Join, X0, X1
	110 Move X8, 0x5F6000
	111 Move X9, 0x5CF000
	112 Move X8, [X8+2624]
	113 Move X9, [X9+608]
	114 Move X2, X0
	115 Move X0, X19
	116 Move X1, [X8]
	117 Move X3, [X9]
	118 Move X20, [X31+64]
	119 Move X19, [X31+72]
	120 Move X22, [X31+48]
	121 Move X21, [X31+56]
	122 Move X24, [X31+32]
	123 Move X23, [X31+40]
	124 Move X26, [X31+16]
	125 Move X25, [X31+24]
	126 Move X4, X31
	127 Move X30, [X31+80]
	128 Move X27, [X31+88]
	129 Call String.Concat, X0, X1, X2, X3
	130 Return X0
	131 Move X0, X19
	132 Move X20, [X31+64]
	133 Move X19, [X31+72]
	134 Move X22, [X31+48]
	135 Move X21, [X31+56]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X26, [X31+16]
	139 Move X25, [X31+24]
	140 Move X30, [X31+80]
	141 Move X27, [X31+88]
	142 Return X0
	143 Call 0x1C17F28
	144 Call 0x1C17F20

Method: System.Boolean IsAssignableFromOrSubclassOf(System.Type checkType, System.Type baseType)

Disassembly:
	0x03B27710 BL 0x1C16CF4
	0x03B27714 MOVZ W8, 0x1
	0x03B27718 STRB W8, [X21 + 0x774]
	0x03B2771C CBZ X20, 0x3B27800
	0x03B27720 MOV X0, X20
	0x03B27724 MOV X1, X31
	0x03B27728 BL 0x3C356F8
	0x03B2772C CBZ X0, 0x3B27800
	0x03B27730 MOV X1, X31
	0x03B27734 MOV X20, X0
	0x03B27738 BL 0x3C40C8C
	0x03B2773C CBZ W0, 0x3B277F0
	0x03B27740 ADRP X8, 0x632000
	0x03B27744 LDR X8, [X8 + 0xCD8]
	0x03B27748 MOV W21, W0
	0x03B2774C MOV X0, X19
	0x03B27750 MOV W1, W21
	0x03B27754 LDR X2, [X8]
	0x03B27758 BL 0x2212F14
	0x03B2775C CMP W21, 0x1
	0x03B27760 B.LT 0x3B277F0
	0x03B27764 ADRP X23, 0x5D2000
	0x03B27768 LDR X23, [X23 + 0x570]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {30}
	006 Move X8, [X0]
	007 Move X19, X1
	008 Move X20, X0
	009 Move X9, [X8+680]
	010 Move X2, [X8+688]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {21}
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move W0, 1
	019 Move X30, [X31+32]
	020 Return X0
	021 Move X8, [X20]
	022 Move X0, X20
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X3, [X8+664]
	027 Move X2, [X8+672]
	028 Move X30, [X31+32]
	029 CallNoReturn X3
	030 Call 0x1C17F20

Method: System.Reflection.MethodInfo GetMethodRecursively(System.Type type, System.String name, System.Reflection.BindingFlags bindingAttr)

Disassembly:
	0x03B2776C MOV W22, W31
	0x03B27770 MOV X0, X20
	0x03B27774 MOV W1, W22
	0x03B27778 MOV X2, X31
	0x03B2777C BL 0x3C410A0
	0x03B27780 CBZ X0, 0x3B27800
	0x03B27784 MOV X1, X31
	0x03B27788 BL 0x3C32ECC
	0x03B2778C CBZ X19, 0x3B27800
	0x03B27790 LDR W10, [X19 + 0x1C]
	0x03B27794 LDR X8, [X19 + 0x10]
	0x03B27798 LDR X9, [X23]
	0x03B2779C ADD W10, W10, 0x1
	0x03B277A0 STR W10, [X19 + 0x1C]
	0x03B277A4 CBZ X8, 0x3B27800
	0x03B277A8 LDRSW X10, [X19 + 0x18]
	0x03B277AC LDR W11, [X8 + 0x18]
	0x03B277B0 MOV X1, X0
	0x03B277B4 CMP W10, W11
	0x03B277B8 B.CS 0x3B277D0
	0x03B277BC ADD W9, W10, 0x1
	0x03B277C0 ADD X8, X8, X10, 0x3, LSL
	0x03B277C4 STR W9, [X19 + 0x18]
	0x03B277C8 STR X1, [X8 + 0x20]
	0x03B277CC B 0x3B277E4
	0x03B277D0 LDR X8, [X9 + 0x20]
	0x03B277D4 MOV X0, X19
	0x03B277D8 LDR X8, [X8 + 0xC0]
	0x03B277DC LDR X2, [X8 + 0x70]
	0x03B277E0 BL 0x301BF90
	0x03B277E4 ADD W22, W22, 0x1
	0x03B277E8 CMP W21, W22
	0x03B277EC B.NE 0x3B27770
	0x03B277F0 LDP X20, X19, [X31 + 0x20]
	0x03B277F4 LDP X22, X21, [X31 + 0x10]
	0x03B277F8 LDP X30, X23, [X31], #0x30
	0x03B277FC RET
	0x03B27800 BL 0x1C16F20
	0x03B27804 STP X30, X23, [X31 - 0x30]!
	0x03B27808 STP X22, X21, [X31 + 0x10]
	0x03B2780C STP X20, X19, [X31 + 0x20]
	0x03B27810 ADRP X20, 0x8BB000
	0x03B27814 ADRP X22, 0x632000
	0x03B27818 LDRB W8, [X20 + 0x775]
	0x03B2781C LDR X22, [X22 + 0xCE0]
	0x03B27820 MOV X21, X1
	0x03B27824 MOV X19, X0
	0x03B27828 TBNZ X8, 0x0, 0x3B27894
	0x03B2782C ADRP X0, 0x5F4000
	0x03B27830 LDR X0, [X0 + 0xAA0]
	0x03B27834 BL 0x1C16CF4
	0x03B27838 ADRP X0, 0x632000
	0x03B2783C LDR X0, [X0 + 0xCE8]
	0x03B27840 BL 0x1C16CF4
	0x03B27844 ADRP X0, 0x632000
	0x03B27848 LDR X0, [X0 + 0xCF0]
	0x03B2784C BL 0x1C16CF4
	0x03B27850 ADRP X0, 0x632000
	0x03B27854 LDR X0, [X0 + 0xCF8]
	0x03B27858 BL 0x1C16CF4
	0x03B2785C ADRP X0, 0x5CC000
	0x03B27860 LDR X0, [X0 + 0x598]
	0x03B27864 BL 0x1C16CF4
	0x03B27868 ADRP X0, 0x632000
	0x03B2786C LDR X0, [X0 + 0xD00]
	0x03B27870 BL 0x1C16CF4
	0x03B27874 ADRP X0, 0x632000
	0x03B27878 LDR X0, [X0 + 0xD08]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x5CD000
	012 Move X22, 0x633000
	013 Move X21, [X21+1728]
	014 Move X22, [X22+3128]
	015 Move W19, W2
	016 Move X20, X1
	017 Move X23, X0
	018 Move X26, 0x8BC000
	019 Move W27, 1
	020 Move W8, [X26+1887]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, X22
	026 Call 0x1C17CF4
	027 Move X0, X21
	028 Call 0x1C17CF4
	029 Move [X26+1887], W27
	030 Compare X23, 0
	031 JumpIfEqual {89}
	032 Move X0, X23
	033 Move X1, X20
	034 Move W2, W19
	035 Move X3, X31
	036 Call Type.GetMethod, X0, X1, X2
	037 Move X1, X31
	038 Move X2, X31
	039 Move X24, X0
	040 Call MethodInfo.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {77}
	045 Move X8, [X23]
	046 Move X0, X23
	047 Move X9, [X8+2072]
	048 Move X1, [X8+2080]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X21]
	051 Move X25, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X25
	058 Move X1, X31
	059 Move X2, X31
	060 Call Type.op_Inequality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {77}
	065 Move X8, [X23]
	066 Move X0, X23
	067 Move X9, [X8+2072]
	068 Move X1, [X8+2080]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X22]
	071 Move X23, X0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {20}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X0, X24
	078 Move X20, [X31+64]
	079 Move X19, [X31+72]
	080 Move X22, [X31+48]
	081 Move X21, [X31+56]
	082 Move X24, [X31+32]
	083 Move X23, [X31+40]
	084 Move X26, [X31+16]
	085 Move X25, [X31+24]
	086 Move X30, [X31+80]
	087 Move X27, [X31+88]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B2787C BL 0x1C16CF4
	0x03B27880 ADRP X0, 0x632000
	0x03B27884 LDR X0, [X0 + 0xCE0]
	0x03B27888 BL 0x1C16CF4
	0x03B2788C MOVZ W8, 0x1
	0x03B27890 STRB W8, [X20 + 0x775]
	0x03B27894 LDR X0, [X22]
	0x03B27898 BL 0x1C16F10
	0x03B2789C MOV X1, X31
	0x03B278A0 MOV X20, X0
	0x03B278A4 BL 0x33BDD8C
	0x03B278A8 CBZ X20, 0x3B27A08
	0x03B278AC ADRP X22, 0x5F4000
	0x03B278B0 LDR X22, [X22 + 0xAA0]
	0x03B278B4 STR X21, [X20 + 0x10]
	0x03B278B8 LDR X0, [X22]
	0x03B278BC LDR W8, [X0 + 0xE0]
	0x03B278C0 CBNZ W8, 0x3B278CC
	0x03B278C4 BL 0x1C16DFC
	0x03B278C8 LDR X0, [X22]
	0x03B278CC LDR X8, [X0 + 0xB8]
	0x03B278D0 LDR X8, [X8 + 0x8]
	0x03B278D4 CBZ X8, 0x3B27A08
	0x03B278D8 LDP W2, W9, [X8 + 0x18]
	0x03B278DC ADD W9, W9, 0x1
	0x03B278E0 CMP W2, 0x1
	0x03B278E4 STP W31, W9, [X8 + 0x18]
	0x03B278E8 B.LT 0x3B278FC
	0x03B278EC LDR X0, [X8 + 0x10]
	0x03B278F0 MOV W1, W31
	0x03B278F4 MOV X3, X31
	0x03B278F8 BL 0x339FA34
	0x03B278FC CBZ X19, 0x3B27A08
	0x03B27900 LDR X8, [X22]
	0x03B27904 ADRP X9, 0x632000
	0x03B27908 ADRP X21, 0x632000
	0x03B2790C ADRP X23, 0x632000
	0x03B27910 LDR X8, [X8 + 0xB8]
	0x03B27914 LDR X9, [X9 + 0xCE8]
	0x03B27918 MOV X0, X19
	0x03B2791C LDR X1, [X8 + 0x8]
	0x03B27920 LDR X2, [X9]
	0x03B27924 LDR X21, [X21 + 0xD00]
	0x03B27928 LDR X23, [X23 + 0xD08]
	0x03B2792C BL 0x21E6064
	0x03B27930 LDR X8, [X22]
	0x03B27934 LDR X0, [X21]
	0x03B27938 LDR X8, [X8 + 0xB8]
	0x03B2793C LDR X19, [X8 + 0x8]
	0x03B27940 BL 0x1C16F10
	0x03B27944 LDR X2, [X23]
	0x03B27948 MOV X1, X20
	0x03B2794C MOV X3, X31
	0x03B27950 MOV X21, X0
	0x03B27954 BL 0x24AD1FC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x8BC000
	009 Move X24, 0x61A000
	010 Move X19, 0x633000
	011 Move X20, 0x633000
	012 Move X22, 0x5CE000
	013 Move X21, 0x5CE000
	014 Move W8, [X23+1888]
	015 Move X24, [X24+3000]
	016 Move X19, [X19+3216]
	017 Move X20, [X20+3128]
	018 Move X22, [X22+464]
	019 Move X21, [X21+448]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x633000
	025 Move X0, [X0+3216]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CE000
	028 Move X0, [X0+448]
	029 Call 0x1C17CF4
	030 Move X0, 0x61A000
	031 Move X0, [X0+3000]
	032 Call 0x1C17CF4
	033 Move X0, 0x5CE000
	034 Move X0, [X0+464]
	035 Call 0x1C17CF4
	036 Move X0, 0x633000
	037 Move X0, [X0+3128]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+1888], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call List`1<Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call List`1<Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

