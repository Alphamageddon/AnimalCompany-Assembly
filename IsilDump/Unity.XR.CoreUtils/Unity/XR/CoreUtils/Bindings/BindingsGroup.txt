Type: Unity.XR.CoreUtils.Bindings.BindingsGroup

Method: System.Void AddBinding(Unity.XR.CoreUtils.Bindings.IEventBinding binding)

Disassembly:
	0x03B3275C LDR V0, [X19 + 0xF]
	0x03B32760 ADD X0, X31, 0x1A0
	0x03B32764 MOV X1, X31
	0x03B32768 STR X8, [X31 + 0x1B0]
	0x03B3276C STR V0, [X31 + 0x1A]
	0x03B32770 BL 0x3BB9958
	0x03B32774 ADD X8, X19, 0x108
	0x03B32778 LDR X9, [X8 + 0x10]
	0x03B3277C LDR V0, [X8]
	0x03B32780 ADD X0, X31, 0x180
	0x03B32784 MOV X1, X31
	0x03B32788 STR X9, [X31 + 0x190]
	0x03B3278C STR V0, [X31 + 0x18]
	0x03B32790 BL 0x3BB9958
	0x03B32794 LDR X8, [X19 + 0x130]
	0x03B32798 LDR V0, [X19 + 0x12]
	0x03B3279C ADD X0, X31, 0x160
	0x03B327A0 MOV X1, X31
	0x03B327A4 STR X8, [X31 + 0x170]
	0x03B327A8 STR V0, [X31 + 0x16]
	0x03B327AC BL 0x3BB9958
	0x03B327B0 ADD X8, X19, 0x138
	0x03B327B4 LDR X9, [X8 + 0x10]
	0x03B327B8 LDR V0, [X8]
	0x03B327BC ADD X0, X31, 0x140
	0x03B327C0 MOV X1, X31
	0x03B327C4 STR X9, [X31 + 0x150]
	0x03B327C8 STR V0, [X31 + 0x14]
	0x03B327CC BL 0x3BB9958
	0x03B327D0 LDR X8, [X19 + 0x160]
	0x03B327D4 LDR V0, [X19 + 0x15]
	0x03B327D8 ADD X0, X31, 0x120
	0x03B327DC MOV X1, X31
	0x03B327E0 STR X8, [X31 + 0x130]
	0x03B327E4 STR V0, [X31 + 0x12]
	0x03B327E8 BL 0x3BB9958
	0x03B327EC ADD X8, X19, 0x168
	0x03B327F0 LDR X9, [X8 + 0x10]
	0x03B327F4 LDR V0, [X8]
	0x03B327F8 ADD X0, X31, 0x100
	0x03B327FC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8B1000
	006 Move W8, [X21+2011]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x628000
	014 Move X0, [X0+3960]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2011], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0x628000
	022 Move X9, [X9+3960]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void ClearBinding(Unity.XR.CoreUtils.Bindings.IEventBinding binding)

Disassembly:
	0x03B32800 STR X9, [X31 + 0x110]
	0x03B32804 STR V0, [X31 + 0x10]
	0x03B32808 BL 0x3BB9958
	0x03B3280C LDR X8, [X19 + 0x190]
	0x03B32810 LDR V0, [X19 + 0x18]
	0x03B32814 ADD X0, X31, 0xE0
	0x03B32818 MOV X1, X31
	0x03B3281C STR X8, [X31 + 0xF0]
	0x03B32820 STR V0, [X31 + 0xE]
	0x03B32824 BL 0x3BB9958
	0x03B32828 ADD X8, X19, 0x198
	0x03B3282C LDR X9, [X8 + 0x10]
	0x03B32830 LDR V0, [X8]
	0x03B32834 ADD X0, X31, 0xC0
	0x03B32838 MOV X1, X31
	0x03B3283C STR X9, [X31 + 0xD0]
	0x03B32840 STR V0, [X31 + 0xC]
	0x03B32844 BL 0x3BB9958
	0x03B32848 LDR X8, [X19 + 0x1C0]
	0x03B3284C LDR V0, [X19 + 0x1B]
	0x03B32850 ADD X0, X31, 0xA0
	0x03B32854 MOV X1, X31
	0x03B32858 STR X8, [X31 + 0xB0]
	0x03B3285C STR V0, [X31 + 0xA]
	0x03B32860 BL 0x3BB9958
	0x03B32864 ADD X8, X19, 0x1C8
	0x03B32868 LDR X9, [X8 + 0x10]
	0x03B3286C LDR V0, [X8]
	0x03B32870 ADD X0, X31, 0x80
	0x03B32874 MOV X1, X31
	0x03B32878 STR X9, [X31 + 0x90]
	0x03B3287C STR V0, [X31 + 0x8]
	0x03B32880 BL 0x3BB9958
	0x03B32884 LDR X8, [X19 + 0x1F0]
	0x03B32888 LDR V0, [X19 + 0x1E]
	0x03B3288C ADD X0, X31, 0x60
	0x03B32890 MOV X1, X31
	0x03B32894 STR X8, [X31 + 0x70]
	0x03B32898 STR V0, [X31 + 0x6]
	0x03B3289C BL 0x3BB9958
	0x03B328A0 ADD X8, X19, 0x1F8
	0x03B328A4 LDR X9, [X8 + 0x10]
	0x03B328A8 LDR V0, [X8]
	0x03B328AC ADD X0, X31, 0x40
	0x03B328B0 MOV X1, X31
	0x03B328B4 STR X9, [X31 + 0x50]
	0x03B328B8 STR V0, [X31 + 0x4]
	0x03B328BC BL 0x3BB9958
	0x03B328C0 LDR X8, [X19 + 0x220]
	0x03B328C4 LDR V0, [X19 + 0x21]
	0x03B328C8 ADD X0, X31, 0x20
	0x03B328CC MOV X1, X31
	0x03B328D0 STR X8, [X31 + 0x30]
	0x03B328D4 STR V0, [X31 + 0x2]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x8B1000
	006 Move W8, [X21+2012]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x628000
	014 Move X0, [X0+3968]
	015 Call 0x1C17CF4
	016 Move X0, 0x628000
	017 Move X0, [X0+3976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2012], W8
	021 Move X0, [X20+16]
	022 Compare X0, 0
	023 JumpIfEqual {64}
	024 Move X8, 0x628000
	025 Move X8, [X8+3976]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call List`1<Object>.Remove, X0, X1
	029 Compare X19, 0
	030 JumpIfEqual {47}
	031 Move X10, 0x628000
	032 Move X8, [X19]
	033 Move X10, [X10+3968]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 3
	045 Move X0, X19
	046 Call 0x1C5D788
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Move W9, [X10]
	053 Add W9, W9, 3
	054 Add X8, X8, W9
	055 Add X0, X8, 312
	056 Move X2, [X0]
	057 Move X1, [X0+8]
	058 Move X0, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 CallNoReturn X2
	064 Call 0x1C17F20

Method: System.Void Bind()

Disassembly:
	0x03B328D8 BL 0x3BB9958
	0x03B328DC ADD X8, X19, 0x228
	0x03B328E0 LDR X9, [X8 + 0x10]
	0x03B328E4 LDR V0, [X8]
	0x03B328E8 ADD X0, X31, 0x0
	0x03B328EC MOV X1, X31
	0x03B328F0 STR X9, [X31 + 0x10]
	0x03B328F4 STR V0, [X31]
	0x03B328F8 BL 0x3BB9958
	0x03B328FC ADD X31, X31, 0x220
	0x03B32900 LDP X30, X19, [X31 + 0x10]
	0x03B32904 LDR X29, [X31], #0x20
	0x03B32908 RET
	0x03B3290C STP X30, X19, [X31 - 0x10]!
	0x03B32910 MOV X19, X0
	0x03B32914 BL 0x3B32924
	0x03B32918 MOV X0, X19
	0x03B3291C LDP X30, X19, [X31], #0x10
	0x03B32920 B 0x3B329B8
	0x03B32924 STP X30, X21, [X31 - 0x20]!
	0x03B32928 STP X20, X19, [X31 + 0x10]
	0x03B3292C ADRP X20, 0x8B0000
	0x03B32930 ADRP X21, 0x5E8000
	0x03B32934 LDRB W8, [X20 + 0x7F2]
	0x03B32938 LDR X21, [X21 + 0xE30]
	0x03B3293C MOV X19, X0
	0x03B32940 TBNZ X8, 0x0, 0x3B32964
	0x03B32944 ADRP X0, 0x5C1000
	0x03B32948 LDR X0, [X0 + 0x970]
	0x03B3294C BL 0x1C16CF4
	0x03B32950 ADRP X0, 0x5E8000
	0x03B32954 LDR X0, [X0 + 0xE30]
	0x03B32958 BL 0x1C16CF4
	0x03B3295C MOVZ W8, 0x1
	0x03B32960 STRB W8, [X20 + 0x7F2]
	0x03B32964 LDR X0, [X21]
	0x03B32968 BL 0x1C16F10
	0x03B3296C CBZ X19, 0x3B329B4
	0x03B32970 LDR X8, [X19]
	0x03B32974 ADRP X21, 0x5C1000
	0x03B32978 MOV X1, X19
	0x03B3297C MOV X3, X31
	0x03B32980 LDR X2, [X8 + 0x1D0]
	0x03B32984 LDR X21, [X21 + 0x970]
	0x03B32988 MOV X20, X0
	0x03B3298C BL 0x3C45BE8
	0x03B32990 LDR X0, [X21]
	0x03B32994 LDR W8, [X0 + 0xE0]
	0x03B32998 CBNZ W8, 0x3B329A0
	0x03B3299C BL 0x1C16DFC
	0x03B329A0 MOV X0, X20
	0x03B329A4 LDP X20, X19, [X31 + 0x10]
	0x03B329A8 MOV X1, X31
	0x03B329AC LDP X30, X21, [X31], #0x20
	0x03B329B0 B 0x3C02390
	0x03B329B4 BL 0x1C16F20
	0x03B329B8 STR X29, [X31 - 0x20]!
	0x03B329BC STP X30, X19, [X31 + 0x10]
	0x03B329C0 SUB X31, X31, 0x220
	0x03B329C4 LDR X8, [X0 + 0xB8]
	0x03B329C8 LDUR V0, [X0 + 0xA8]
	0x03B329CC MOV X19, X0
	0x03B329D0 ADD X0, X31, 0x200
	0x03B329D4 MOV X1, X31
	0x03B329D8 STR X8, [X31 + 0x210]
	0x03B329DC STR V0, [X31 + 0x20]
	0x03B329E0 BL 0x3BB99F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8B1000
	008 Move W8, [X20+2013]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x628000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move X0, 0x628000
	018 Move X0, [X0+3984]
	019 Call 0x1C17CF4
	020 Move X0, 0x628000
	021 Move X0, [X0+3992]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2013], W8
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {71}
	028 Move X22, 0x628000
	029 Move X23, 0x628000
	030 Move X22, [X22+3992]
	031 Move X23, [X23+3968]
	032 Move W20, W31
	033 Move X21, X31
	034 Move W8, [X0+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X2, [X22]
	037 Move W1, W20
	038 Call List`1<Object>.get_Item, X0, X1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {67}
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X21]
	046 Move X1, [X23]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 1
	057 Move X0, X21
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 1
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X21
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X19+16]
	068 Add W20, W20, 1
	069 Compare X0, 0
	070 JumpIfNotEqual {34}
	071 Call 0x1C17F20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Return 

Method: System.Void Unbind()

Disassembly:
	0x03B329E4 LDR X8, [X19 + 0xD0]
	0x03B329E8 LDR V0, [X19 + 0xC]
	0x03B329EC ADD X0, X31, 0x1E0
	0x03B329F0 MOV X1, X31
	0x03B329F4 STR X8, [X31 + 0x1F0]
	0x03B329F8 STR V0, [X31 + 0x1E]
	0x03B329FC BL 0x3BB99F0
	0x03B32A00 LDR X8, [X19 + 0xE8]
	0x03B32A04 LDUR V0, [X19 + 0xD8]
	0x03B32A08 ADD X0, X31, 0x1C0
	0x03B32A0C MOV X1, X31
	0x03B32A10 STR X8, [X31 + 0x1D0]
	0x03B32A14 STR V0, [X31 + 0x1C]
	0x03B32A18 BL 0x3BB99F0
	0x03B32A1C LDR X8, [X19 + 0x100]
	0x03B32A20 LDR V0, [X19 + 0xF]
	0x03B32A24 ADD X0, X31, 0x1A0
	0x03B32A28 MOV X1, X31
	0x03B32A2C STR X8, [X31 + 0x1B0]
	0x03B32A30 STR V0, [X31 + 0x1A]
	0x03B32A34 BL 0x3BB99F0
	0x03B32A38 ADD X8, X19, 0x108
	0x03B32A3C LDR X9, [X8 + 0x10]
	0x03B32A40 LDR V0, [X8]
	0x03B32A44 ADD X0, X31, 0x180
	0x03B32A48 MOV X1, X31
	0x03B32A4C STR X9, [X31 + 0x190]
	0x03B32A50 STR V0, [X31 + 0x18]
	0x03B32A54 BL 0x3BB99F0
	0x03B32A58 LDR X8, [X19 + 0x130]
	0x03B32A5C LDR V0, [X19 + 0x12]
	0x03B32A60 ADD X0, X31, 0x160
	0x03B32A64 MOV X1, X31
	0x03B32A68 STR X8, [X31 + 0x170]
	0x03B32A6C STR V0, [X31 + 0x16]
	0x03B32A70 BL 0x3BB99F0
	0x03B32A74 ADD X8, X19, 0x138
	0x03B32A78 LDR X9, [X8 + 0x10]
	0x03B32A7C LDR V0, [X8]
	0x03B32A80 ADD X0, X31, 0x140
	0x03B32A84 MOV X1, X31
	0x03B32A88 STR X9, [X31 + 0x150]
	0x03B32A8C STR V0, [X31 + 0x14]
	0x03B32A90 BL 0x3BB99F0
	0x03B32A94 LDR X8, [X19 + 0x160]
	0x03B32A98 LDR V0, [X19 + 0x15]
	0x03B32A9C ADD X0, X31, 0x120
	0x03B32AA0 MOV X1, X31
	0x03B32AA4 STR X8, [X31 + 0x130]
	0x03B32AA8 STR V0, [X31 + 0x12]
	0x03B32AAC BL 0x3BB99F0
	0x03B32AB0 ADD X8, X19, 0x168
	0x03B32AB4 LDR X9, [X8 + 0x10]
	0x03B32AB8 LDR V0, [X8]
	0x03B32ABC ADD X0, X31, 0x100
	0x03B32AC0 MOV X1, X31
	0x03B32AC4 STR X9, [X31 + 0x110]
	0x03B32AC8 STR V0, [X31 + 0x10]
	0x03B32ACC BL 0x3BB99F0
	0x03B32AD0 LDR X8, [X19 + 0x190]
	0x03B32AD4 LDR V0, [X19 + 0x18]
	0x03B32AD8 ADD X0, X31, 0xE0
	0x03B32ADC MOV X1, X31
	0x03B32AE0 STR X8, [X31 + 0xF0]
	0x03B32AE4 STR V0, [X31 + 0xE]
	0x03B32AE8 BL 0x3BB99F0
	0x03B32AEC ADD X8, X19, 0x198

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8B1000
	008 Move W8, [X20+2014]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x628000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move X0, 0x628000
	018 Move X0, [X0+3984]
	019 Call 0x1C17CF4
	020 Move X0, 0x628000
	021 Move X0, [X0+3992]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2014], W8
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {71}
	028 Move X22, 0x628000
	029 Move X23, 0x628000
	030 Move X22, [X22+3992]
	031 Move X23, [X23+3968]
	032 Move W20, W31
	033 Move X21, X31
	034 Move W8, [X0+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X2, [X22]
	037 Move W1, W20
	038 Call List`1<Object>.get_Item, X0, X1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSEL not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {67}
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X21]
	046 Move X1, [X23]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 2
	057 Move X0, X21
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 2
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X21
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X19+16]
	068 Add W20, W20, 1
	069 Compare X0, 0
	070 JumpIfNotEqual {34}
	071 Call 0x1C17F20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Move X23, [X31+56]
	078 Return 

Method: System.Void Clear()

Disassembly:
	0x03B32AF0 LDR X9, [X8 + 0x10]
	0x03B32AF4 LDR V0, [X8]
	0x03B32AF8 ADD X0, X31, 0xC0
	0x03B32AFC MOV X1, X31
	0x03B32B00 STR X9, [X31 + 0xD0]
	0x03B32B04 STR V0, [X31 + 0xC]
	0x03B32B08 BL 0x3BB99F0
	0x03B32B0C LDR X8, [X19 + 0x1C0]
	0x03B32B10 LDR V0, [X19 + 0x1B]
	0x03B32B14 ADD X0, X31, 0xA0
	0x03B32B18 MOV X1, X31
	0x03B32B1C STR X8, [X31 + 0xB0]
	0x03B32B20 STR V0, [X31 + 0xA]
	0x03B32B24 BL 0x3BB99F0
	0x03B32B28 ADD X8, X19, 0x1C8
	0x03B32B2C LDR X9, [X8 + 0x10]
	0x03B32B30 LDR V0, [X8]
	0x03B32B34 ADD X0, X31, 0x80
	0x03B32B38 MOV X1, X31
	0x03B32B3C STR X9, [X31 + 0x90]
	0x03B32B40 STR V0, [X31 + 0x8]
	0x03B32B44 BL 0x3BB99F0
	0x03B32B48 LDR X8, [X19 + 0x1F0]
	0x03B32B4C LDR V0, [X19 + 0x1E]
	0x03B32B50 ADD X0, X31, 0x60
	0x03B32B54 MOV X1, X31
	0x03B32B58 STR X8, [X31 + 0x70]
	0x03B32B5C STR V0, [X31 + 0x6]
	0x03B32B60 BL 0x3BB99F0
	0x03B32B64 ADD X8, X19, 0x1F8
	0x03B32B68 LDR X9, [X8 + 0x10]
	0x03B32B6C LDR V0, [X8]
	0x03B32B70 ADD X0, X31, 0x40
	0x03B32B74 MOV X1, X31
	0x03B32B78 STR X9, [X31 + 0x50]
	0x03B32B7C STR V0, [X31 + 0x4]
	0x03B32B80 BL 0x3BB99F0
	0x03B32B84 LDR X8, [X19 + 0x220]
	0x03B32B88 LDR V0, [X19 + 0x21]
	0x03B32B8C ADD X0, X31, 0x20
	0x03B32B90 MOV X1, X31
	0x03B32B94 STR X8, [X31 + 0x30]
	0x03B32B98 STR V0, [X31 + 0x2]
	0x03B32B9C BL 0x3BB99F0
	0x03B32BA0 ADD X8, X19, 0x228
	0x03B32BA4 LDR X9, [X8 + 0x10]
	0x03B32BA8 LDR V0, [X8]
	0x03B32BAC ADD X0, X31, 0x0
	0x03B32BB0 MOV X1, X31
	0x03B32BB4 STR X9, [X31 + 0x10]
	0x03B32BB8 STR V0, [X31]
	0x03B32BBC BL 0x3BB99F0
	0x03B32BC0 ADD X31, X31, 0x220
	0x03B32BC4 LDP X30, X19, [X31 + 0x10]
	0x03B32BC8 LDR X29, [X31], #0x20
	0x03B32BCC RET
	0x03B32BD0 SUB X31, X31, 0x90
	0x03B32BD4 STR X30, [X31 + 0x40]
	0x03B32BD8 STP X26, X25, [X31 + 0x50]
	0x03B32BDC STP X24, X23, [X31 + 0x60]
	0x03B32BE0 STP X22, X21, [X31 + 0x70]
	0x03B32BE4 STP X20, X19, [X31 + 0x80]
	0x03B32BE8 ADRP X20, 0x8B0000
	0x03B32BEC LDRB W8, [X20 + 0x7E7]
	0x03B32BF0 MOV X19, X1
	0x03B32BF4 MOV X24, X0
	0x03B32BF8 TBNZ X8, 0x0, 0x3B32C64
	0x03B32BFC ADRP X0, 0x5C1000
	0x03B32C00 LDR X0, [X0 + 0xA28]
	0x03B32C04 BL 0x1C16CF4
	0x03B32C08 ADRP X0, 0x5E9000
	0x03B32C0C LDR X0, [X0 + 0x70]
	0x03B32C10 BL 0x1C16CF4
	0x03B32C14 ADRP X0, 0x616000
	0x03B32C18 LDR X0, [X0 + 0xDF0]
	0x03B32C1C BL 0x1C16CF4
	0x03B32C20 ADRP X0, 0x616000
	0x03B32C24 LDR X0, [X0 + 0xDF8]
	0x03B32C28 BL 0x1C16CF4
	0x03B32C2C ADRP X0, 0x617000
	0x03B32C30 LDR X0, [X0 + 0x2F0]
	0x03B32C34 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8B1000
	008 Move W8, [X20+2015]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x628000
	015 Move X0, [X0+3968]
	016 Call 0x1C17CF4
	017 Move X0, 0x628000
	018 Move X0, [X0+4000]
	019 Call 0x1C17CF4
	020 Move X0, 0x628000
	021 Move X0, [X0+3984]
	022 Call 0x1C17CF4
	023 Move X0, 0x628000
	024 Move X0, [X0+3992]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2015], W8
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {74}
	031 Move X22, 0x628000
	032 Move X23, 0x628000
	033 Move X22, [X22+3992]
	034 Move X23, [X23+3968]
	035 Move W20, W31
	036 Move X21, X31
	037 Move W2, [X0+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X2, [X22]
	040 Move W1, W20
	041 Call List`1<Object>.get_Item, X0, X1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Compare X0, 0
	045 JumpIfEqual {70}
	046 Compare X21, 0
	047 JumpIfEqual {74}
	048 Move X8, [X21]
	049 Move X1, [X23]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 3
	060 Move X0, X21
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 3
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X21
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, [X19+16]
	071 Add W20, W20, 1
	072 Compare X0, 0
	073 JumpIfNotEqual {37}
	074 Call 0x1C17F20
	075 Move W8, [X0+28]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add W8, W8, 1
	078 Move [X0+24], W31
	079 Move [X0+28], W8
	080 Move X0, [X0+16]
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move W1, W31
	086 Move X3, X31
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Call Array.Clear, X0, X1, X2
	090 Return 
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Move X23, [X31+56]
	097 Return 

Method: System.Void .ctor()

Disassembly:
	0x03B32C38 ADRP X0, 0x5E8000
	0x03B32C3C LDR X0, [X0 + 0xFE8]
	0x03B32C40 BL 0x1C16CF4
	0x03B32C44 ADRP X0, 0x627000
	0x03B32C48 LDR X0, [X0 + 0xFD0]
	0x03B32C4C BL 0x1C16CF4
	0x03B32C50 ADRP X0, 0x627000
	0x03B32C54 LDR X0, [X0 + 0xFD8]
	0x03B32C58 BL 0x1C16CF4
	0x03B32C5C MOVZ W8, 0x1
	0x03B32C60 STRB W8, [X20 + 0x7E7]
	0x03B32C64 CBZ X19, 0x3B330C0
	0x03B32C68 ADD X26, X24, 0xA8
	0x03B32C6C MOV X0, X26
	0x03B32C70 MOV X1, X31
	0x03B32C74 BL 0x3745120
	0x03B32C78 ADD X25, X24, 0xC0
	0x03B32C7C MOV X21, X0
	0x03B32C80 MOV X0, X25
	0x03B32C84 MOV X1, X31
	0x03B32C88 BL 0x3745120
	0x03B32C8C MOV X20, X0
	0x03B32C90 ADD X0, X24, 0xD8
	0x03B32C94 MOV X1, X31
	0x03B32C98 BL 0x3745120
	0x03B32C9C MOV X22, X0
	0x03B32CA0 ADD X0, X24, 0xF0
	0x03B32CA4 MOV X1, X31
	0x03B32CA8 BL 0x3745120
	0x03B32CAC LDRB W8, [X24 + 0x240]
	0x03B32CB0 MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x8B1000
	007 Move X22, 0x628000
	008 Move X20, 0x628000
	009 Move W8, [X21+2016]
	010 Move X22, [X22+4008]
	011 Move X20, [X20+4016]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x628000
	018 Move X0, [X0+4016]
	019 Call 0x1C17CF4
	020 Move X0, 0x628000
	021 Move X0, [X0+4008]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2016], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

