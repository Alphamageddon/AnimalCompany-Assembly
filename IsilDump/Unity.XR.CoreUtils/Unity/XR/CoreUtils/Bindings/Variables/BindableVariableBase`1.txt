Type: Unity.XR.CoreUtils.Bindings.Variables.BindableVariableBase`1

Method: System.Void add_valueUpdated(System.Action`1<T> value)

Disassembly:
	0x028CC2EC BLR X9
	0x028CC2F0 TBNZ X0, 0x0, 0x28CC2C8
	0x028CC2F4 MOVZ W0, 0x1
	0x028CC2F8 STP S11, S10, [X19 + 0x18]
	0x028CC2FC STRB W0, [X19 + 0x29]
	0x028CC300 STP S9, S8, [X19 + 0x20]
	0x028CC304 LDP X30, X19, [X31 + 0x20]
	0x028CC308 LDP D9, D8, [X31 + 0x10]
	0x028CC30C LDP D11, D10, [X31], #0x30
	0x028CC310 RET
	0x028CC314 SUB X31, X31, 0x60
	0x028CC318 STP X30, X23, [X31 + 0x30]
	0x028CC31C STP X22, X21, [X31 + 0x40]
	0x028CC320 STP X20, X19, [X31 + 0x50]
	0x028CC324 ADRP X22, 0x1B0E000
	0x028CC328 LDRB W8, [X22 + 0xCF7]
	0x028CC32C MOV X19, X2
	0x028CC330 MOV X20, X1
	0x028CC334 MOV X21, X0
	0x028CC338 TBNZ X8, 0x0, 0x28CC35C
	0x028CC33C ADRP X0, 0x1828000
	0x028CC340 LDR X0, [X0 + 0xE70]
	0x028CC344 BL 0x1C16CF4
	0x028CC348 ADRP X0, 0x1852000
	0x028CC34C LDR X0, [X0 + 0x1E8]
	0x028CC350 BL 0x1C16CF4
	0x028CC354 MOVZ W8, 0x1
	0x028CC358 STRB W8, [X22 + 0xCF7]
	0x028CC35C STP X31, X31, [X31 + 0x18]
	0x028CC360 STR X31, [X31 + 0x28]
	0x028CC364 LDR X8, [X19 + 0x20]
	0x028CC368 LDR X8, [X8 + 0xC0]
	0x028CC36C LDR X0, [X8 + 0x48]
	0x028CC370 LDRB W8, [X0 + 0x135]
	0x028CC374 TBNZ X8, 0x0, 0x28CC37C
	0x028CC378 BL 0x1C5C684
	0x028CC37C BL 0x1C16F10
	0x028CC380 LDR X8, [X19 + 0x20]
	0x028CC384 MOV X22, X0
	0x028CC388 LDR X8, [X8 + 0xC0]
	0x028CC38C LDR X1, [X8 + 0x50]
	0x028CC390 BL 0x2372444
	0x028CC394 CBZ X22, 0x28CC448

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Add X20, X20, 16
	010 Move X22, [X20]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X31
	016 Call Delegate.Combine, X0, X1
	017 Move X8, [X19+32]
	018 Move X24, X0
	019 Move X8, [X8+192]
	020 Move X23, [X8+8]
	021 Move W8, [X23+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X23
	027 Call 0x1C5D684
	028 Move X23, X0
	029 Compare X24, 0
	030 JumpIfEqual {37}
	031 Move X0, X24
	032 Move X1, X23
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {38}
	037 Move X1, X31
	038 Move X0, X20
	039 Move X2, X22
	040 Call 0x1C25138
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, X0
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return 
	051 Move X0, X24
	052 Move X1, X23
	053 Call 0x1C181E0

Method: System.Void remove_valueUpdated(System.Action`1<T> value)

Disassembly:
	0x028CC398 ADRP X23, 0x1852000
	0x028CC39C LDR X23, [X23 + 0x1E8]
	0x028CC3A0 STR X21, [X22 + 0x10]
	0x028CC3A4 STP X31, X31, [X31 + 0x18]
	0x028CC3A8 STR X31, [X31 + 0x28]
	0x028CC3AC CBZ X20, 0x28CC418
	0x028CC3B0 ADRP X21, 0x1828000
	0x028CC3B4 LDR X21, [X21 + 0xE70]
	0x028CC3B8 STR X20, [X22 + 0x18]
	0x028CC3BC LDR X0, [X21]
	0x028CC3C0 BL 0x1C16F10
	0x028CC3C4 LDR X8, [X19 + 0x20]
	0x028CC3C8 MOV X1, X22
	0x028CC3CC MOV X3, X31
	0x028CC3D0 MOV X20, X0
	0x028CC3D4 LDR X8, [X8 + 0xC0]
	0x028CC3D8 LDR X2, [X8 + 0x58]
	0x028CC3DC BL 0x3314368
	0x028CC3E0 LDR X0, [X21]
	0x028CC3E4 STR X20, [X31 + 0x18]
	0x028CC3E8 BL 0x1C16F10
	0x028CC3EC LDR X8, [X19 + 0x20]
	0x028CC3F0 MOV X1, X22
	0x028CC3F4 MOV X3, X31
	0x028CC3F8 MOV X19, X0
	0x028CC3FC LDR X8, [X8 + 0xC0]
	0x028CC400 LDR X2, [X8 + 0x60]
	0x028CC404 BL 0x3314368
	0x028CC408 ADD X0, X31, 0x18
	0x028CC40C MOV X1, X31
	0x028CC410 STR X19, [X31 + 0x20]
	0x028CC414 BL 0x3B31CE8
	0x028CC418 LDUR V0, [X31 + 0x18]
	0x028CC41C LDR X8, [X31 + 0x28]
	0x028CC420 LDR X0, [X23]
	0x028CC424 ADD X1, X31, 0x0
	0x028CC428 STR V0, [X31]
	0x028CC42C STR X8, [X31 + 0x10]
	0x028CC430 BL 0x1C16E04
	0x028CC434 LDP X20, X19, [X31 + 0x50]
	0x028CC438 LDP X22, X21, [X31 + 0x40]
	0x028CC43C LDP X30, X23, [X31 + 0x30]
	0x028CC440 ADD X31, X31, 0x60

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Add X20, X20, 16
	010 Move X22, [X20]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X0, X22
	014 Move X1, X21
	015 Move X2, X31
	016 Call Delegate.Remove, X0, X1
	017 Move X8, [X19+32]
	018 Move X24, X0
	019 Move X8, [X8+192]
	020 Move X23, [X8+8]
	021 Move W8, [X23+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {29}
	026 Move X0, X23
	027 Call 0x1C5D684
	028 Move X23, X0
	029 Compare X24, 0
	030 JumpIfEqual {37}
	031 Move X0, X24
	032 Move X1, X23
	033 Call 0x1C17E00
	034 Move X1, X0
	035 Compare X0, 0
	036 JumpIfNotEqual {38}
	037 Move X1, X31
	038 Move X0, X20
	039 Move X2, X22
	040 Call 0x1C25138
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, X0
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Return 
	051 Move X0, X24
	052 Move X1, X23
	053 Call 0x1C181E0

Method: T get_Value()

Disassembly:
	0x028CC444 RET
	0x028CC448 BL 0x1C16F20

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Return X0

Method: System.Void set_Value(T value)

Disassembly:
	0x028CC44C STP X30, X21, [X31 - 0x20]!
	0x028CC450 STP X20, X19, [X31 + 0x10]
	0x028CC454 MOV X21, X2
	0x028CC458 MOV X19, X1
	0x028CC45C MOV X20, X0
	0x028CC460 CBZ X1, 0x28CC47C
	0x028CC464 LDP S0, S1, [X20 + 0x18]
	0x028CC468 LDP S2, S3, [X20 + 0x20]
	0x028CC46C LDR X8, [X19 + 0x18]
	0x028CC470 LDR X0, [X19 + 0x40]
	0x028CC474 LDR X1, [X19 + 0x28]
	0x028CC478 BLR X8
	0x028CC47C LDR X8, [X21 + 0x20]
	0x028CC480 MOV X0, X20
	0x028CC484 MOV X1, X19
	0x028CC488 LDP X20, X19, [X31 + 0x10]
	0x028CC48C LDR X8, [X8 + 0xC0]
	0x028CC490 LDR X2, [X8 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 And X1, X1, 0xFFFF
	005 Move X19, X0
	006 Move X8, [X8+192]
	007 Move X2, [X8+32]
	008 Call 0x28CC49C, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {23}
	013 Move X8, [X19+16]
	014 Compare X8, 0
	015 JumpIfEqual {23}
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move X3, [X8+24]
	018 Move X0, [X8+64]
	019 Move X2, [X8+40]
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 CallNoReturn X3
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 

Method: System.Int32 get_BindingCount()

Disassembly:
	0x028CC494 LDP X30, X21, [X31], #0x20
	0x028CC498 B 0x28CC314

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Boolean SetValueWithoutNotify(T value)

Disassembly:
	0x028CC49C CBZ X1, 0x28CC4CC
	0x028CC4A0 STP X30, X19, [X31 - 0x10]!
	0x028CC4A4 LDR X8, [X2 + 0x20]
	0x028CC4A8 MOV X19, X0
	0x028CC4AC LDR X8, [X8 + 0xC0]
	0x028CC4B0 LDR X2, [X8 + 0x78]
	0x028CC4B4 BL 0x28CC158
	0x028CC4B8 LDR W8, [X19 + 0x38]
	0x028CC4BC SUB W8, W8, 0x1
	0x028CC4C0 BIC W8, W8, W8, 0x1F
	0x028CC4C4 STR W8, [X19 + 0x38]
	0x028CC4C8 LDP X30, X19, [X31], #0x10
	0x028CC4CC RET
	0x028CC4D0 LDR W8, [X0 + 0x38]
	0x028CC4D4 ADD W8, W8, 0x1
	0x028CC4D8 STR W8, [X0 + 0x38]
	0x028CC4DC RET
	0x028CC4E0 LDR W8, [X0 + 0x38]
	0x028CC4E4 SUB W8, W8, 0x1
	0x028CC4E8 BIC W8, W8, W8, 0x1F
	0x028CC4EC STR W8, [X0 + 0x38]
	0x028CC4F0 RET
	0x028CC4F4 STP D11, D10, [X31 - 0x50]!
	0x028CC4F8 STP D9, D8, [X31 + 0x10]
	0x028CC4FC STR X30, [X31 + 0x20]
	0x028CC500 STP X22, X21, [X31 + 0x30]
	0x028CC504 STP X20, X19, [X31 + 0x40]
	0x028CC508 AND W21, W1, 0x1
	0x028CC50C MOV X1, X31
	0x028CC510 MOV X19, X2
	0x028CC514 MOV V8.16B, V3.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+27]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {36}
	009 Move W8, [X19+26]
	010 Compare W8, 0
	011 JumpIfEqual {36}
	012 Move X8, [X19+32]
	013 Compare X8, 0
	014 JumpIfEqual {26}
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 Move X9, [X8+24]
	017 Move X0, [X8+64]
	018 Move X3, [X8+40]
	019 And X2, X20, 0xFFFF
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {36}
	025 Move W0, W31
	026 Move X8, [X19]
	027 And X1, X20, 0xFFFF
	028 Move X0, X19
	029 Move X9, [X8+504]
	030 Move X2, [X8+512]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {25}
	036 Move W0, 1
	037 Move [X19+27], W0
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: Unity.XR.CoreUtils.Bindings.IEventBinding Subscribe(System.Action`1<T> callback)

Disassembly:
	0x028CC518 MOV V9.16B, V2.16B
	0x028CC51C MOV V10.16B, V1.16B
	0x028CC520 MOV V11.16B, V0.16B
	0x028CC524 MOV X20, X0
	0x028CC528 AND W22, W3, 0x1
	0x028CC52C BL 0x33BDD8C
	0x028CC530 STRB W22, [X20 + 0x29]
	0x028CC534 STP S11, S10, [X20 + 0x18]
	0x028CC538 STP S9, S8, [X20 + 0x20]
	0x028CC53C STRB W21, [X20 + 0x28]
	0x028CC540 STR X19, [X20 + 0x30]
	0x028CC544 STR W31, [X20 + 0x38]
	0x028CC548 LDP X20, X19, [X31 + 0x40]
	0x028CC54C LDP X22, X21, [X31 + 0x30]
	0x028CC550 LDR X30, [X31 + 0x20]
	0x028CC554 LDP D9, D8, [X31 + 0x10]
	0x028CC558 LDP D11, D10, [X31], #0x50
	0x028CC55C RET
	0x028CC560 LDR X8, [X0 + 0x10]
	0x028CC564 CBZ X8, 0x28CC580
	0x028CC568 LDP S2, S3, [X0 + 0x20]
	0x028CC56C LDP S0, S1, [X0 + 0x18]
	0x028CC570 LDR X2, [X8 + 0x18]
	0x028CC574 LDR X0, [X8 + 0x40]
	0x028CC578 LDR X1, [X8 + 0x28]
	0x028CC57C BR X2
	0x028CC580 RET
	0x028CC584 SUB X31, X31, 0x90
	0x028CC588 STP D11, D10, [X31 + 0x40]
	0x028CC58C STP D9, D8, [X31 + 0x50]
	0x028CC590 STP X30, X23, [X31 + 0x60]
	0x028CC594 STP X22, X21, [X31 + 0x70]
	0x028CC598 STP X20, X19, [X31 + 0x80]
	0x028CC59C ADRP X23, 0x1B0E000
	0x028CC5A0 LDRB W8, [X23 + 0xCF8]
	0x028CC5A4 MOV X19, X3
	0x028CC5A8 MOV X21, X2
	0x028CC5AC MOV X22, X1
	0x028CC5B0 MOV X20, X0
	0x028CC5B4 TBNZ X8, 0x0, 0x28CC5CC
	0x028CC5B8 ADRP X0, 0x1828000
	0x028CC5BC LDR X0, [X0 + 0x7B8]
	0x028CC5C0 BL 0x1C16CF4
	0x028CC5C4 MOVZ W8, 0x1
	0x028CC5C8 STRB W8, [X23 + 0xCF8]
	0x028CC5CC CBZ X22, 0x28CC630
	0x028CC5D0 LDP S0, S1, [X20 + 0x18]
	0x028CC5D4 LDP S2, S3, [X20 + 0x20]
	0x028CC5D8 LDR X8, [X22 + 0x18]
	0x028CC5DC LDR X0, [X22 + 0x40]
	0x028CC5E0 LDR X1, [X22 + 0x28]
	0x028CC5E4 BLR X8
	0x028CC5E8 TBZ X0, 0x0, 0x28CC630
	0x028CC5EC ADRP X8, 0x1828000
	0x028CC5F0 LDR X8, [X8 + 0x7B8]
	0x028CC5F4 LDP S11, S10, [X20 + 0x18]
	0x028CC5F8 LDP S9, S8, [X20 + 0x20]
	0x028CC5FC LDR X0, [X8]
	0x028CC600 LDR W8, [X0 + 0xE0]
	0x028CC604 CBNZ W8, 0x28CC60C
	0x028CC608 BL 0x1C16DFC
	0x028CC60C LDR X8, [X19 + 0x20]
	0x028CC610 MOV V0.16B, V11.16B
	0x028CC614 MOV V1.16B, V10.16B
	0x028CC618 MOV V2.16B, V9.16B
	0x028CC61C LDR X8, [X8 + 0xC0]
	0x028CC620 MOV V3.16B, V8.16B
	0x028CC624 LDR X0, [X8 + 0x98]
	0x028CC628 BL 0x229A178
	0x028CC62C B 0x28CC67C
	0x028CC630 STP X31, X31, [X31 + 0x8]
	0x028CC634 STR X31, [X31 + 0x18]
	0x028CC638 LDR X8, [X19 + 0x20]
	0x028CC63C ADD X0, X31, 0x8
	0x028CC640 MOV X1, X20
	0x028CC644 MOV X2, X22
	0x028CC648 LDR X8, [X8 + 0xC0]
	0x028CC64C MOV X3, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x1B0F000
	009 Move W8, [X22+3312]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1829000
	018 Move X0, [X0+3696]
	019 Call 0x1C17CF4
	020 Move X0, 0x1853000
	021 Move X0, [X0+488]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3312], W8
	025 Move [X31+24], X31
	026 Move [X31+32], X31
	027 Move [X31+40], X31
	028 Move X8, [X19+32]
	029 Move X8, [X8+192]
	030 Move X0, [X8+72]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Call 0x1C17F10
	038 Move X8, [X19+32]
	039 Move X22, X0
	040 Move X8, [X8+192]
	041 Move X1, [X8+80]
	042 Call 0x23732F4, X0
	043 Compare X22, 0
	044 JumpIfEqual {94}
	045 Move X23, 0x1853000
	046 Move X23, [X23+488]
	047 Move [X22+16], X21
	048 Move [X31+24], X31
	049 Move [X31+32], X31
	050 Move [X31+40], X31
	051 Compare X20, 0
	052 JumpIfEqual {79}
	053 Move X21, 0x1829000
	054 Move X21, [X21+3696]
	055 Move [X22+24], X20
	056 Move X0, [X21]
	057 Call 0x1C17F10
	058 Move X8, [X19+32]
	059 Move X1, X22
	060 Move X3, X31
	061 Move X20, X0
	062 Move X8, [X8+192]
	063 Move X2, [X8+88]
	064 Call Action..ctor, X0, X1, X2
	065 Move X0, [X21]
	066 Move [X31+24], X20
	067 Call 0x1C17F10
	068 Move X8, [X19+32]
	069 Move X1, X22
	070 Move X3, X31
	071 Move X19, X0
	072 Move X8, [X8+192]
	073 Move X2, [X8+96]
	074 Call Action..ctor, X0, X1, X2
	075 Add X0, X31, 24
	076 Move X1, X31
	077 Move [X31+32], X19
	078 Call EventBinding.Bind, X0
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X8, [X31+40]
	081 Move X0, [X23]
	082 Add X1, X31, 0
	083 Move [X31], V0
	084 Move [X31+16], X8
	085 Call 0x1C17E04
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X22, [X31+64]
	089 Move X21, [X31+72]
	090 Move X30, [X31+48]
	091 Move X23, [X31+56]
	092 Add X31, X31, 96
	093 Return X0
	094 Call 0x1C17F20

Method: Unity.XR.CoreUtils.Bindings.IEventBinding SubscribeAndUpdate(System.Action`1<T> callback)

Disassembly:
	0x028CC650 LDR X4, [X8 + 0xB0]
	0x028CC654 BL 0x28D30DC
	0x028CC658 LDUR V0, [X31 + 0x8]
	0x028CC65C LDR X8, [X31 + 0x18]
	0x028CC660 ADD X0, X31, 0x20
	0x028CC664 STR V0, [X31 + 0x2]
	0x028CC668 STR X8, [X31 + 0x30]
	0x028CC66C LDR X8, [X19 + 0x20]
	0x028CC670 LDR X8, [X8 + 0xC0]
	0x028CC674 LDR X1, [X8 + 0xC0]
	0x028CC678 BL 0x28D30B0
	0x028CC67C LDP X20, X19, [X31 + 0x80]
	0x028CC680 LDP X22, X21, [X31 + 0x70]
	0x028CC684 LDP X30, X23, [X31 + 0x60]
	0x028CC688 LDP D9, D8, [X31 + 0x50]
	0x028CC68C LDP D11, D10, [X31 + 0x40]
	0x028CC690 ADD X31, X31, 0x90
	0x028CC694 RET
	0x028CC698 SUB X31, X31, 0x90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X2
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X1, 0
	009 JumpIfEqual {15}
	010 NotImplemented "Instruction LDRH not yet implemented."
	011 Move X8, [X19+24]
	012 Move X0, [X19+64]
	013 Move X2, [X19+40]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X8, [X21+32]
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+192]
	021 Move X2, [X8+112]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call 0x28CC518, X0, X1
	025 Return X0

Method: System.Void Unsubscribe(System.Action`1<T> callback)

Disassembly:
	0x028CC69C STP D11, D10, [X31 + 0x40]
	0x028CC6A0 STP D9, D8, [X31 + 0x50]
	0x028CC6A4 STR X30, [X31 + 0x60]
	0x028CC6A8 STP X22, X21, [X31 + 0x70]
	0x028CC6AC STP X20, X19, [X31 + 0x80]
	0x028CC6B0 ADRP X22, 0x1B0E000
	0x028CC6B4 LDRB W8, [X22 + 0xCF9]
	0x028CC6B8 MOV X19, X2
	0x028CC6BC MOV X20, X1
	0x028CC6C0 MOV V8.16B, V3.16B
	0x028CC6C4 MOV V9.16B, V2.16B
	0x028CC6C8 MOV V10.16B, V1.16B
	0x028CC6CC MOV V11.16B, V0.16B

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {16}
	003 Move [X31-16], X30
	004 Move [X31-8], X19
	005 Move X8, [X2+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X2, [X8+120]
	009 Call 0x28CC398, X0, X1
	010 Move W8, [X19+40]
	011 Subtract W8, W8, 1
	012 NotImplemented "Instruction BIC not yet implemented."
	013 Move [X19+40], W8
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Void IncrementReferenceCount()

Disassembly:
	0x028CC6D0 MOV X21, X0
	0x028CC6D4 TBNZ X8, 0x0, 0x28CC6EC
	0x028CC6D8 ADRP X0, 0x1828000
	0x028CC6DC LDR X0, [X0 + 0x7B8]

ISIL:
	001 Move W8, [X0+40]
	002 Add W8, W8, 1
	003 Move [X0+40], W8
	004 Return 

Method: System.Void DecrementReferenceCount()

Disassembly:
	0x028CC6E0 BL 0x1C16CF4
	0x028CC6E4 MOVZ W8, 0x1
	0x028CC6E8 STRB W8, [X22 + 0xCF9]
	0x028CC6EC MOVI V0.2D, 0x0
	0x028CC6F0 STP V0, V0, [X31 + 0x20]

ISIL:
	001 Move W8, [X0+40]
	002 Subtract W8, W8, 1
	003 NotImplemented "Instruction BIC not yet implemented."
	004 Move [X0+40], W8
	005 Return 

Method: System.Void .ctor(T initialValue = null, System.Boolean checkEquality = True, System.Func`3<T, T, System.Boolean> equalityMethod = null, System.Boolean startInitialized = False)

Disassembly:
	0x028CC6F4 LDR X8, [X21]
	0x028CC6F8 MOV X0, X21
	0x028CC6FC MOV V0.16B, V11.16B
	0x028CC700 MOV V1.16B, V10.16B
	0x028CC704 LDP X9, X1, [X8 + 0x1F8]
	0x028CC708 MOV V2.16B, V9.16B
	0x028CC70C MOV V3.16B, V8.16B
	0x028CC710 BLR X9
	0x028CC714 TBZ X0, 0x0, 0x28CC75C
	0x028CC718 ADRP X8, 0x1828000
	0x028CC71C LDR X8, [X8 + 0x7B8]
	0x028CC720 LDP S11, S10, [X21 + 0x18]
	0x028CC724 LDP S9, S8, [X21 + 0x20]
	0x028CC728 LDR X0, [X8]
	0x028CC72C LDR W8, [X0 + 0xE0]
	0x028CC730 CBNZ W8, 0x28CC738
	0x028CC734 BL 0x1C16DFC
	0x028CC738 LDR X8, [X19 + 0x20]
	0x028CC73C MOV V0.16B, V11.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X1
	008 Move X1, X31
	009 Move X19, X3
	010 Move X21, X0
	011 And W22, W2, 1
	012 And W23, W4, 1
	013 Call Object..ctor, X0
	014 Move [X21+27], W23
	015 NotImplemented "Instruction STRH not yet implemented."
	016 Move [X21+26], W22
	017 Move [X21+32], X19
	018 Move [X21+40], W31
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move X30, [X31+48]
	024 Move X23, [X31+56]
	025 Return 

Method: System.Void BroadcastValue()

Disassembly:
	0x028CC740 MOV V1.16B, V10.16B
	0x028CC744 MOV V2.16B, V9.16B
	0x028CC748 LDR X8, [X8 + 0xC0]
	0x028CC74C MOV V3.16B, V8.16B
	0x028CC750 LDR X0, [X8 + 0x98]
	0x028CC754 BL 0x229A178
	0x028CC758 B 0x28CC7AC
	0x028CC75C MOVI V0.2D, 0x0

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 NotImplemented "Instruction LDRH not yet implemented."
	005 Move X3, [X8+24]
	006 Move X0, [X8+64]
	007 Move X2, [X8+40]
	008 CallNoReturn X3
	009 Return 

Method: System.Threading.Tasks.Task`1<T> Task(System.Func`2<T, System.Boolean> awaitPredicate, System.Threading.CancellationToken token = null)

Disassembly:
	0x028CC760 STP V0, V0, [X31]
	0x028CC764 LDR X8, [X19 + 0x20]
	0x028CC768 ADD X0, X31, 0x0
	0x028CC76C MOV X1, X21
	0x028CC770 MOV V0.16B, V11.16B
	0x028CC774 LDR X8, [X8 + 0xC0]
	0x028CC778 MOV V1.16B, V10.16B
	0x028CC77C MOV V2.16B, V9.16B
	0x028CC780 MOV V3.16B, V8.16B
	0x028CC784 LDR X3, [X8 + 0xD8]
	0x028CC788 MOV X2, X20
	0x028CC78C BL 0x28DB8C4
	0x028CC790 LDP V0, V1, [X31]
	0x028CC794 ADD X0, X31, 0x20
	0x028CC798 STP V0, V1, [X31 + 0x20]
	0x028CC79C LDR X8, [X19 + 0x20]
	0x028CC7A0 LDR X8, [X8 + 0xC0]
	0x028CC7A4 LDR X1, [X8 + 0xE0]
	0x028CC7A8 BL 0x28DB898
	0x028CC7AC LDP X20, X19, [X31 + 0x80]
	0x028CC7B0 LDP X22, X21, [X31 + 0x70]
	0x028CC7B4 LDR X30, [X31 + 0x60]
	0x028CC7B8 LDP D9, D8, [X31 + 0x50]
	0x028CC7BC LDP D11, D10, [X31 + 0x40]
	0x028CC7C0 ADD X31, X31, 0x90
	0x028CC7C4 RET
	0x028CC7C8 SUB X31, X31, 0x50
	0x028CC7CC STR D10, [X31 + 0x10]
	0x028CC7D0 STP D9, D8, [X31 + 0x20]
	0x028CC7D4 STP X30, X21, [X31 + 0x30]
	0x028CC7D8 STP X20, X19, [X31 + 0x40]
	0x028CC7DC STP S0, S1, [X31]
	0x028CC7E0 STP S2, S3, [X31 + 0x8]
	0x028CC7E4 LDR X8, [X1 + 0x20]
	0x028CC7E8 MOV X19, X0
	0x028CC7EC ADD X1, X31, 0x0
	0x028CC7F0 LDR X8, [X8 + 0xC0]
	0x028CC7F4 LDR X8, [X8 + 0x18]
	0x028CC7F8 MOV X0, X8
	0x028CC7FC BL 0x1C16E04
	0x028CC800 ADRP X21, 0x1B0D000
	0x028CC804 LDRB W8, [X21 + 0x81C]
	0x028CC808 MOV X20, X0
	0x028CC80C CBZ W8, 0x28CC818
	0x028CC810 CBNZ X20, 0x28CC830
	0x028CC814 B 0x28CC8A4
	0x028CC818 ADRP X0, 0x184F000
	0x028CC81C LDR X0, [X0 + 0x5E0]
	0x028CC820 BL 0x1C16CF4
	0x028CC824 MOVZ W8, 0x1
	0x028CC828 STRB W8, [X21 + 0x81C]
	0x028CC82C CBZ X20, 0x28CC8A4
	0x028CC830 ADRP X8, 0x184F000
	0x028CC834 LDR X8, [X8 + 0x5E0]
	0x028CC838 LDR X9, [X20]
	0x028CC83C LDR X8, [X8]
	0x028CC840 CMP X9, X8
	0x028CC844 B.NE 0x28CC8A4
	0x028CC848 MOV X0, X20
	0x028CC84C BL 0x1C16E08

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x1B0F000
	009 Move W8, [X23+3313]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1829000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3313], W8
	023 Compare X22, 0
	024 JumpIfEqual {47}
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X8, [X22+24]
	027 Move X0, [X22+64]
	028 Move X2, [X22+40]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {47}
	034 Move X8, 0x1829000
	035 Move X8, [X8+1976]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X8, [X19+32]
	043 Move X0, X20
	044 Move X8, [X8+192]
	045 Move X1, [X8+152]
	046 Call 0x229B0C0, X0
	047 Move [X31+8], X31
	048 Move [X31+16], X31
	049 Move [X31+24], X31
	050 Move X8, [X19+32]
	051 Add X0, X31, 8
	052 Move X1, X21
	053 Move X2, X22
	054 Move X8, [X8+192]
	055 Move X3, X20
	056 Move X4, [X8+176]
	057 Call 0x28D2CE8, X0, X1, X2, X3
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 Move X8, [X31+24]
	060 Add X0, X31, 32
	061 Move [X31+2], V0
	062 Move [X31+48], X8
	063 Move X8, [X19+32]
	064 Move X8, [X8+192]
	065 Move X1, [X8+192]
	066 Call 0x28D2CBC, X0
	067 Move X20, [X31+96]
	068 Move X19, [X31+104]
	069 Move X22, [X31+80]
	070 Move X21, [X31+88]
	071 Move X30, [X31+64]
	072 Move X23, [X31+72]
	073 Add X31, X31, 112
	074 Return X0

Method: System.Threading.Tasks.Task`1<T> Task(T awaitState, System.Threading.CancellationToken token = null)

Disassembly:
	0x028CC850 LDP S0, S10, [X0]
	0x028CC854 LDP S9, S8, [X0 + 0x8]
	0x028CC858 ADD X0, X19, 0x18
	0x028CC85C MOV X1, X31
	0x028CC860 BL 0x338FDC0
	0x028CC864 TBZ X0, 0x0, 0x28CC8A4
	0x028CC868 ADD X0, X19, 0x1C
	0x028CC86C MOV V0.16B, V10.16B
	0x028CC870 MOV X1, X31
	0x028CC874 BL 0x338FDC0
	0x028CC878 TBZ X0, 0x0, 0x28CC8A4
	0x028CC87C ADD X0, X19, 0x20
	0x028CC880 MOV V0.16B, V9.16B
	0x028CC884 MOV X1, X31
	0x028CC888 BL 0x338FDC0
	0x028CC88C TBZ X0, 0x0, 0x28CC8A4
	0x028CC890 ADD X0, X19, 0x24
	0x028CC894 MOV V0.16B, V8.16B
	0x028CC898 MOV X1, X31
	0x028CC89C BL 0x338FDC0
	0x028CC8A0 B 0x28CC8A8
	0x028CC8A4 MOV W0, W31
	0x028CC8A8 LDP X20, X19, [X31 + 0x40]
	0x028CC8AC LDP X30, X21, [X31 + 0x30]
	0x028CC8B0 LDP D9, D8, [X31 + 0x20]
	0x028CC8B4 LDR V10, [X31 + 0x10]
	0x028CC8B8 AND W0, W0, 0x1
	0x028CC8BC ADD X31, X31, 0x50
	0x028CC8C0 RET
	0x028CC8C4 STR X30, [X31 - 0x40]!
	0x028CC8C8 STP X24, X23, [X31 + 0x10]
	0x028CC8CC STP X22, X21, [X31 + 0x20]
	0x028CC8D0 STP X20, X19, [X31 + 0x30]
	0x028CC8D4 MOV X20, X0
	0x028CC8D8 LDR X22, [X20 + 0x10]!
	0x028CC8DC MOV X19, X2
	0x028CC8E0 MOV X21, X1
	0x028CC8E4 MOV X0, X22
	0x028CC8E8 MOV X1, X21
	0x028CC8EC MOV X2, X31
	0x028CC8F0 BL 0x33C0DE4
	0x028CC8F4 LDR X8, [X19 + 0x20]
	0x028CC8F8 MOV X24, X0
	0x028CC8FC LDR X8, [X8 + 0xC0]
	0x028CC900 LDR X23, [X8 + 0x8]
	0x028CC904 LDRB W8, [X23 + 0x135]
	0x028CC908 TBNZ X8, 0x0, 0x28CC918
	0x028CC90C MOV X0, X23
	0x028CC910 BL 0x1C5C684
	0x028CC914 MOV X23, X0
	0x028CC918 CBZ X24, 0x28CC934
	0x028CC91C MOV X0, X24
	0x028CC920 MOV X1, X23
	0x028CC924 BL 0x1C16E00
	0x028CC928 MOV X1, X0
	0x028CC92C CBNZ X0, 0x28CC938
	0x028CC930 B 0x28CC964
	0x028CC934 MOV X1, X31
	0x028CC938 MOV X0, X20
	0x028CC93C MOV X2, X22
	0x028CC940 BL 0x1C24138
	0x028CC944 CMP X22, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x1B0F000
	009 Move W8, [X23+3314]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1829000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3314], W8
	023 Move [X31+32], X31
	024 Move [X31+40], X31
	025 Move [X31+48], X31
	026 Move X8, [X21]
	027 And X22, X22, 0xFFFF
	028 Move X0, X21
	029 Move X1, X22
	030 Move X9, [X8+504]
	031 Move X2, [X8+512]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {50}
	037 Move X8, 0x1829000
	038 Move X8, [X8+1976]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, [X19+32]
	046 Move X0, X20
	047 Move X8, [X8+192]
	048 Move X1, [X8+152]
	049 Call 0x229B0C0, X0
	050 Move [X31+8], X31
	051 Move [X31+16], X31
	052 Move [X31+24], X31
	053 Move X8, [X19+32]
	054 Add X0, X31, 8
	055 Move X1, X21
	056 Move X2, X22
	057 Move X8, [X8+192]
	058 Move X3, X20
	059 Move X4, [X8+216]
	060 Call 0x28DB6E4, X0, X1, X2, X3
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move X8, [X31+24]
	063 Add X0, X31, 32
	064 Move [X31+2], V0
	065 Move [X31+48], X8
	066 Move X8, [X19+32]
	067 Move X8, [X8+192]
	068 Move X1, [X8+224]
	069 Call 0x28DB6B8, X0
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X22, [X31+80]
	073 Move X21, [X31+88]
	074 Move X30, [X31+64]
	075 Move X23, [X31+72]
	076 Add X31, X31, 112
	077 Return X0

Method: System.Boolean ValueEquals(T other)

Disassembly:
	0x028CC948 MOV X22, X0
	0x028CC94C B.NE 0x28CC8E4
	0x028CC950 LDP X20, X19, [X31 + 0x30]
	0x028CC954 LDP X22, X21, [X31 + 0x20]
	0x028CC958 LDP X24, X23, [X31 + 0x10]
	0x028CC95C LDR X30, [X31], #0x40
	0x028CC960 RET
	0x028CC964 MOV X0, X24
	0x028CC968 MOV X1, X23
	0x028CC96C BL 0x1C171E0
	0x028CC970 STR X30, [X31 - 0x40]!
	0x028CC974 STP X24, X23, [X31 + 0x10]
	0x028CC978 STP X22, X21, [X31 + 0x20]
	0x028CC97C STP X20, X19, [X31 + 0x30]
	0x028CC980 MOV X20, X0
	0x028CC984 LDR X22, [X20 + 0x10]!
	0x028CC988 MOV X19, X2
	0x028CC98C MOV X21, X1
	0x028CC990 MOV X0, X22
	0x028CC994 MOV X1, X21
	0x028CC998 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 NotImplemented "Instruction STRH not yet implemented."
	005 Move X8, [X2+32]
	006 Add X20, X0, 24
	007 Add X1, X31, 12
	008 Move X19, X2
	009 Move X8, [X8+192]
	010 Move X8, [X8+24]
	011 Move X0, X8
	012 Call 0x1C17E04
	013 Move X8, [X19+32]
	014 Move X1, X0
	015 Move X0, X20
	016 Move X8, [X8+192]
	017 Move X2, [X8+240]
	018 Call AffordanceStateData.Equals, X0, X1
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 And W0, W0, 1
	022 Move X30, [X31+32]
	023 Return X0

