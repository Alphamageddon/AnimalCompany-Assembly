Type: Unity.XR.CoreUtils.Bindings.Variables.BindableVariableTaskState`1

Method: System.Threading.Tasks.Task`1<T> get_task()

Disassembly:
	0x028DB6B8 SUBS X9, X9, 0x1
	0x028DB6BC ADD X10, X10, 0x10
	0x028DB6C0 B.NE 0x28DB6AC
	0x028DB6C4 MOVZ W2, 0x5
	0x028DB6C8 MOV X0, X22
	0x028DB6CC BL 0x1C5C788
	0x028DB6D0 B 0x28DB6E4
	0x028DB6D4 LDR W9, [X10]
	0x028DB6D8 ADD W9, W9, 0x5
	0x028DB6DC ADD X8, X8, W9, 0x4, SXTW
	0x028DB6E0 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0]
	004 Compare X19, 0
	005 JumpIfEqual {17}
	006 Move X0, [X1+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X0, [X19+16]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Void .ctor(Unity.XR.CoreUtils.Bindings.Variables.IReadOnlyBindableVariable`1<T> bindableVariable, T awaitState, System.Threading.CancellationToken cancellationToken = null)

Disassembly:
	0x028DB6E4 LDP X8, X2, [X0]
	0x028DB6E8 CMP W23, 0x0
	0x028DB6EC CSET W1, NE
	0x028DB6F0 MOV X0, X22
	0x028DB6F4 BLR X8
	0x028DB6F8 TBZ X0, 0x0, 0x28DB87C
	0x028DB6FC LDR X8, [X21 + 0x10]
	0x028DB700 LDR V0, [X21]
	0x028DB704 LDR X22, [X21 + 0x10]
	0x028DB708 STR X8, [X31 + 0x10]
	0x028DB70C STR V0, [X31]
	0x028DB710 LDR X0, [X20 + 0x20]
	0x028DB714 LDRB W8, [X0 + 0x135]
	0x028DB718 TBNZ X8, 0x0, 0x28DB720
	0x028DB71C BL 0x1C5C684
	0x028DB720 LDR X8, [X0 + 0xC0]
	0x028DB724 ADD X1, X31, 0x0
	0x028DB728 LDR X0, [X8]
	0x028DB72C BL 0x1C16E04
	0x028DB730 LDR X8, [X20 + 0x20]
	0x028DB734 MOV X24, X0
	0x028DB738 LDRB W9, [X8 + 0x135]
	0x028DB73C TBNZ X9, 0x0, 0x28DB74C
	0x028DB740 MOV X0, X8
	0x028DB744 BL 0x1C5C684
	0x028DB748 MOV X8, X0
	0x028DB74C LDR X8, [X8 + 0xC0]
	0x028DB750 LDR X0, [X8 + 0x60]
	0x028DB754 LDRB W8, [X0 + 0x135]
	0x028DB758 TBNZ X8, 0x0, 0x28DB760
	0x028DB75C BL 0x1C5C684
	0x028DB760 BL 0x1C16F10
	0x028DB764 LDR X8, [X20 + 0x20]
	0x028DB768 MOV X23, X0
	0x028DB76C ADD X9, X8, 0x135
	0x028DB770 LDRH W9, [X9]
	0x028DB774 TBNZ X9, 0x0, 0x28DB790
	0x028DB778 MOV X0, X8
	0x028DB77C BL 0x1C5C684
	0x028DB780 LDR X8, [X20 + 0x20]
	0x028DB784 ADD X9, X8, 0x135
	0x028DB788 LDRH W9, [X9]
	0x028DB78C B 0x28DB794
	0x028DB790 MOV X0, X8
	0x028DB794 LDR X10, [X0 + 0xC0]
	0x028DB798 LDR X25, [X10 + 0x58]
	0x028DB79C TBNZ X9, 0x0, 0x28DB7AC
	0x028DB7A0 MOV X0, X8
	0x028DB7A4 BL 0x1C5C684
	0x028DB7A8 MOV X8, X0
	0x028DB7AC LDR X8, [X8 + 0xC0]
	0x028DB7B0 MOV X0, X23
	0x028DB7B4 MOV X1, X24
	0x028DB7B8 MOV X2, X25
	0x028DB7BC LDR X3, [X8 + 0x68]
	0x028DB7C0 BL 0x29818C8
	0x028DB7C4 CBZ X22, 0x28DB894
	0x028DB7C8 LDR X0, [X20 + 0x20]
	0x028DB7CC LDRB W8, [X0 + 0x135]
	0x028DB7D0 TBNZ X8, 0x0, 0x28DB7D8
	0x028DB7D4 BL 0x1C5C684
	0x028DB7D8 LDR X8, [X0 + 0xC0]
	0x028DB7DC LDR X1, [X8 + 0x30]
	0x028DB7E0 LDRB W8, [X1 + 0x135]
	0x028DB7E4 TBNZ X8, 0x0, 0x28DB7F4
	0x028DB7E8 MOV X0, X1
	0x028DB7EC BL 0x1C5C684
	0x028DB7F0 MOV X1, X0
	0x028DB7F4 LDR X8, [X22]
	0x028DB7F8 LDRH W9, [X8 + 0x12E]
	0x028DB7FC CBZ X9, 0x28DB820
	0x028DB800 LDR X10, [X8 + 0xB0]
	0x028DB804 ADD X10, X10, 0x8
	0x028DB808 LDUR X11, [X10 - 0x8]
	0x028DB80C CMP X11, X1
	0x028DB810 B.EQ 0x28DB830
	0x028DB814 SUBS X9, X9, 0x1
	0x028DB818 ADD X10, X10, 0x10
	0x028DB81C B.NE 0x28DB808
	0x028DB820 MOVZ W2, 0x2
	0x028DB824 MOV X0, X22
	0x028DB828 BL 0x1C5C788
	0x028DB82C B 0x28DB840
	0x028DB830 LDR W9, [X10]
	0x028DB834 ADD W9, W9, 0x2
	0x028DB838 ADD X8, X8, W9, 0x4, SXTW
	0x028DB83C ADD X0, X8, 0x138
	0x028DB840 LDP X8, X2, [X0]
	0x028DB844 MOV X0, X22
	0x028DB848 MOV X1, X23
	0x028DB84C BLR X8
	0x028DB850 LDR X21, [X21]
	0x028DB854 CBZ X21, 0x28DB894
	0x028DB858 LDR X0, [X20 + 0x20]
	0x028DB85C LDRB W8, [X0 + 0x135]
	0x028DB860 TBNZ X8, 0x0, 0x28DB868
	0x028DB864 BL 0x1C5C684
	0x028DB868 LDR X8, [X0 + 0xC0]
	0x028DB86C AND W1, W19, 0x1
	0x028DB870 MOV X0, X21
	0x028DB874 LDR X2, [X8 + 0x48]
	0x028DB878 BL 0x267A14C
	0x028DB87C LDP X20, X19, [X31 + 0x50]
	0x028DB880 LDP X22, X21, [X31 + 0x40]
	0x028DB884 LDP X24, X23, [X31 + 0x30]
	0x028DB888 LDP X30, X25, [X31 + 0x20]
	0x028DB88C ADD X31, X31, 0x60
	0x028DB890 RET
	0x028DB894 BL 0x1C16F20
	0x028DB898 STP X30, X19, [X31 - 0x10]!
	0x028DB89C LDR X19, [X0]
	0x028DB8A0 CBZ X19, 0x28DB8C0
	0x028DB8A4 LDR X0, [X1 + 0x20]
	0x028DB8A8 LDRB W8, [X0 + 0x135]
	0x028DB8AC TBNZ X8, 0x0, 0x28DB8B4
	0x028DB8B0 BL 0x1C5C684
	0x028DB8B4 LDR X0, [X19 + 0x10]
	0x028DB8B8 LDP X30, X19, [X31], #0x10
	0x028DB8BC RET
	0x028DB8C0 BL 0x1C16F20
	0x028DB8C4 SUB X31, X31, 0xA0
	0x028DB8C8 STP D11, D10, [X31 + 0x50]
	0x028DB8CC STP D9, D8, [X31 + 0x60]
	0x028DB8D0 STP X30, X23, [X31 + 0x70]
	0x028DB8D4 STP X22, X21, [X31 + 0x80]
	0x028DB8D8 STP X20, X19, [X31 + 0x90]
	0x028DB8DC ADRP X22, 0x1AFF000
	0x028DB8E0 LDRB W8, [X22 + 0xD27]
	0x028DB8E4 MOV X19, X3
	0x028DB8E8 MOV V8.16B, V3.16B
	0x028DB8EC MOV V9.16B, V2.16B
	0x028DB8F0 MOV V10.16B, V1.16B
	0x028DB8F4 MOV V11.16B, V0.16B
	0x028DB8F8 MOV X21, X1
	0x028DB8FC MOV X20, X0
	0x028DB900 STR X2, [X31 + 0x48]
	0x028DB904 TBNZ X8, 0x0, 0x28DB928
	0x028DB908 ADRP X0, 0x1819000
	0x028DB90C LDR X0, [X0 + 0xE70]
	0x028DB910 BL 0x1C16CF4
	0x028DB914 ADRP X0, 0x1820000
	0x028DB918 LDR X0, [X0 + 0x7D8]
	0x028DB91C BL 0x1C16CF4
	0x028DB920 MOVZ W8, 0x1
	0x028DB924 STRB W8, [X22 + 0xD27]
	0x028DB928 LDR X0, [X19 + 0x20]
	0x028DB92C LDRB W8, [X0 + 0x135]
	0x028DB930 TBNZ X8, 0x0, 0x28DB938
	0x028DB934 BL 0x1C5C684
	0x028DB938 LDR X8, [X0 + 0xC0]
	0x028DB93C LDR X0, [X8 + 0x8]
	0x028DB940 LDRB W8, [X0 + 0x135]
	0x028DB944 TBNZ X8, 0x0, 0x28DB94C
	0x028DB948 BL 0x1C5C684
	0x028DB94C BL 0x1C16F10
	0x028DB950 LDR X8, [X19 + 0x20]
	0x028DB954 MOV X22, X0
	0x028DB958 LDRB W9, [X8 + 0x135]
	0x028DB95C TBNZ X9, 0x0, 0x28DB96C
	0x028DB960 MOV X0, X8
	0x028DB964 BL 0x1C5C684
	0x028DB968 MOV X8, X0
	0x028DB96C LDR X8, [X8 + 0xC0]
	0x028DB970 MOV X0, X22
	0x028DB974 LDR X1, [X8 + 0x20]
	0x028DB978 BL 0x267A224
	0x028DB97C STR X22, [X20]
	0x028DB980 STP S11, S10, [X20 + 0x8]
	0x028DB984 STP S9, S8, [X20 + 0x10]
	0x028DB988 STR X21, [X20 + 0x18]
	0x028DB98C CBZ X21, 0x28DBD18
	0x028DB990 LDR X0, [X19 + 0x20]
	0x028DB994 LDRB W8, [X0 + 0x135]
	0x028DB998 TBNZ X8, 0x0, 0x28DB9A0
	0x028DB99C BL 0x1C5C684
	0x028DB9A0 LDR X8, [X0 + 0xC0]
	0x028DB9A4 LDR X1, [X8 + 0x30]
	0x028DB9A8 LDRB W8, [X1 + 0x135]
	0x028DB9AC TBNZ X8, 0x0, 0x28DB9BC
	0x028DB9B0 MOV X0, X1
	0x028DB9B4 BL 0x1C5C684
	0x028DB9B8 MOV X1, X0
	0x028DB9BC LDR X8, [X21]
	0x028DB9C0 LDRH W9, [X8 + 0x12E]
	0x028DB9C4 CBZ X9, 0x28DB9E8
	0x028DB9C8 LDR X10, [X8 + 0xB0]
	0x028DB9CC ADD X10, X10, 0x8
	0x028DB9D0 LDUR X11, [X10 - 0x8]
	0x028DB9D4 CMP X11, X1
	0x028DB9D8 B.EQ 0x28DB9F8
	0x028DB9DC SUBS X9, X9, 0x1
	0x028DB9E0 ADD X10, X10, 0x10
	0x028DB9E4 B.NE 0x28DB9D0
	0x028DB9E8 MOVZ W2, 0x5
	0x028DB9EC MOV X0, X21
	0x028DB9F0 BL 0x1C5C788
	0x028DB9F4 B 0x28DBA08
	0x028DB9F8 LDR W9, [X10]
	0x028DB9FC ADD W9, W9, 0x5
	0x028DBA00 ADD X8, X8, W9, 0x4, SXTW
	0x028DBA04 ADD X0, X8, 0x138
	0x028DBA08 LDP X8, X1, [X0]
	0x028DBA0C MOV X0, X21
	0x028DBA10 MOV V0.16B, V11.16B
	0x028DBA14 MOV V1.16B, V10.16B
	0x028DBA18 MOV V2.16B, V9.16B
	0x028DBA1C MOV V3.16B, V8.16B
	0x028DBA20 BLR X8
	0x028DBA24 TBZ X0, 0x0, 0x28DBA9C
	0x028DBA28 LDR X21, [X20 + 0x18]
	0x028DBA2C CBZ X21, 0x28DBD18
	0x028DBA30 LDR X0, [X19 + 0x20]
	0x028DBA34 LDR X20, [X20]
	0x028DBA38 LDRB W8, [X0 + 0x135]
	0x028DBA3C TBNZ X8, 0x0, 0x28DBA44
	0x028DBA40 BL 0x1C5C684
	0x028DBA44 LDR X8, [X0 + 0xC0]
	0x028DBA48 LDR X1, [X8 + 0x30]
	0x028DBA4C LDRB W8, [X1 + 0x135]
	0x028DBA50 TBNZ X8, 0x0, 0x28DBA60
	0x028DBA54 MOV X0, X1
	0x028DBA58 BL 0x1C5C684
	0x028DBA5C MOV X1, X0
	0x028DBA60 LDR X8, [X21]
	0x028DBA64 LDRH W9, [X8 + 0x12E]
	0x028DBA68 CBZ X9, 0x28DBA8C
	0x028DBA6C LDR X10, [X8 + 0xB0]
	0x028DBA70 ADD X10, X10, 0x8
	0x028DBA74 LDUR X11, [X10 - 0x8]
	0x028DBA78 CMP X11, X1
	0x028DBA7C B.EQ 0x28DBC68
	0x028DBA80 SUBS X9, X9, 0x1
	0x028DBA84 ADD X10, X10, 0x10
	0x028DBA88 B.NE 0x28DBA74
	0x028DBA8C MOVZ W2, 0x3
	0x028DBA90 MOV X0, X21
	0x028DBA94 BL 0x1C5C788
	0x028DBA98 B 0x28DBC78
	0x028DBA9C LDP V1, V0, [X20]
	0x028DBAA0 STP V1, V0, [X31 + 0x20]
	0x028DBAA4 LDR X0, [X19 + 0x20]
	0x028DBAA8 LDRB W8, [X0 + 0x135]
	0x028DBAAC TBNZ X8, 0x0, 0x28DBAB4
	0x028DBAB0 BL 0x1C5C684
	0x028DBAB4 LDR X8, [X0 + 0xC0]
	0x028DBAB8 ADD X1, X31, 0x20
	0x028DBABC LDR X0, [X8]
	0x028DBAC0 BL 0x1C16E04
	0x028DBAC4 ADRP X8, 0x1819000
	0x028DBAC8 LDR X8, [X8 + 0xE70]
	0x028DBACC MOV X22, X0
	0x028DBAD0 LDR X8, [X8]
	0x028DBAD4 MOV X0, X8
	0x028DBAD8 BL 0x1C16F10
	0x028DBADC LDR X8, [X19 + 0x20]
	0x028DBAE0 MOV X21, X0
	0x028DBAE4 LDRB W9, [X8 + 0x135]
	0x028DBAE8 TBNZ X9, 0x0, 0x28DBAF8
	0x028DBAEC MOV X0, X8
	0x028DBAF0 BL 0x1C5C684
	0x028DBAF4 MOV X8, X0
	0x028DBAF8 LDR X8, [X8 + 0xC0]
	0x028DBAFC MOV X0, X21
	0x028DBB00 MOV X1, X22
	0x028DBB04 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x1B00000
	009 Move W8, [X23+3365]
	010 Move X19, X4
	011 Move X22, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move [X31+56], X3
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x181A000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x1821000
	023 Move X0, [X0+2008]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3365], W8
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+8]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Call 0x1C17F10
	043 Move X8, [X19+32]
	044 Move X23, X0
	045 Move W9, [X8+309]
	046 Move TEMP, X9
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {53}
	050 Move X0, X8
	051 Call 0x1C5D684
	052 Move X8, X0
	053 Move X8, [X8+192]
	054 Move X0, X23
	055 Move X1, [X8+32]
	056 Call 0x267AB4C, X0
	057 Move [X20], X23
	058 NotImplemented "Instruction STRH not yet implemented."
	059 Move [X20+16], X21
	060 Compare X21, 0
	061 JumpIfEqual {333}
	062 Move X0, [X19+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+192]
	070 Move X1, [X8+48]
	071 Move W8, [X1+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {79}
	076 Move X0, X1
	077 Call 0x1C5D684
	078 Move X1, X0
	079 Move X8, [X21]
	080 And X22, X22, 0xFFFF
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 5
	091 Move X0, X21
	092 Call 0x1C5D788
	093 Move W9, [X10]
	094 Add W9, W9, 5
	095 Add X8, X8, W9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X2, [X0+8]
	099 Move X0, X21
	100 Move X1, X22
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {140}
	106 Move X21, [X20+16]
	107 Compare X21, 0
	108 JumpIfEqual {333}
	109 Move X0, [X19+32]
	110 Move X20, [X20]
	111 Move W8, [X0+309]
	112 Move TEMP, X8
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {117}
	116 Call 0x1C5D684
	117 Move X8, [X0+192]
	118 Move X1, [X8+48]
	119 Move W8, [X1+309]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {127}
	124 Move X0, X1
	125 Call 0x1C5D684
	126 Move X1, X0
	127 Move X8, [X21]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 3
	138 Move X0, X21
	139 Call 0x1C5D788
	140 Move X8, [X20+16]
	141 Move V0, [X20]
	142 Move [X31+48], X8
	143 Move [X31+2], V0
	144 Move X0, [X19+32]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move X8, [X0+192]
	152 Add X1, X31, 32
	153 Move X0, [X8]
	154 Call 0x1C17E04
	155 Move X8, 0x181A000
	156 Move X8, [X8+3696]
	157 Move X22, X0
	158 Move X8, [X8]
	159 Move X0, X8
	160 Call 0x1C17F10
	161 Move X8, [X19+32]
	162 Move X21, X0
	163 Move W9, [X8+309]
	164 Move TEMP, X9
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {171}
	168 Move X0, X8
	169 Call 0x1C5D684
	170 Move X8, X0
	171 Move X8, [X8+192]
	172 Move X0, X21
	173 Move X1, X22
	174 Move X3, X31
	175 Move X2, [X8+80]
	176 Call Action..ctor, X0, X1, X2
	177 Move X8, 0x1821000
	178 Move X8, [X8+2008]
	179 Move X0, [X8]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Add X8, X31, 0
	185 Add X0, X31, 56
	186 Move X1, X21
	187 Move X2, X31
	188 Call CancellationToken.Register, X0, X1
	189 Move X8, [X20+16]
	190 Move V0, [X20]
	191 Move X20, [X20+16]
	192 Move [X31+16], X8
	193 Move [X31], V0
	194 Move X0, [X19+32]
	195 Move W8, [X0+309]
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {201}
	200 Call 0x1C5D684
	201 Move X8, [X0+192]
	202 Add X1, X31, 0
	203 Move X0, [X8]
	204 Call 0x1C17E04
	205 Move X8, [X19+32]
	206 Move X22, X0
	207 Move W9, [X8+309]
	208 Move TEMP, X9
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfEqual {215}
	212 Move X0, X8
	213 Call 0x1C5D684
	214 Move X8, X0
	215 Move X8, [X8+192]
	216 Move X0, [X8+96]
	217 Move W8, [X0+309]
	218 Move TEMP, X8
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {223}
	222 Call 0x1C5D684
	223 Call 0x1C17F10
	224 Move X8, [X19+32]
	225 Move X21, X0
	226 Add X9, X8, 309
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Move TEMP, X9
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfEqual {237}
	232 Move X0, X8
	233 Call 0x1C5D684
	234 Move X8, [X19+32]
	235 Add X9, X8, 309
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Move X0, X8
	238 Move X10, [X0+192]
	239 Move X23, [X10+88]
	240 Move TEMP, X9
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {247}
	244 Move X0, X8
	245 Call 0x1C5D684
	246 Move X8, X0
	247 Move X8, [X8+192]
	248 Move X0, X21
	249 Move X1, X22
	250 Move X2, X23
	251 Move X3, [X8+104]
	252 Call Action`1<AffordanceStateData>..ctor, X0, X1, X2
	253 Compare X20, 0
	254 JumpIfEqual {333}
	255 Move X0, [X19+32]
	256 Move W8, [X0+309]
	257 Move TEMP, X8
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {262}
	261 Call 0x1C5D684
	262 Move X8, [X0+192]
	263 Move X1, [X8+48]
	264 Move W8, [X1+309]
	265 Move TEMP, X8
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfEqual {272}
	269 Move X0, X1
	270 Call 0x1C5D684
	271 Move X1, X0
	272 Move X8, [X20]
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X20
	283 Move W2, W31
	284 Call 0x1C5D788
	285 Move W9, [X10]
	286 Add W9, W9, 3
	287 Add X8, X8, W9
	288 Add X0, X8, 312
	289 Move X8, [X0]
	290 Move X1, [X0+8]
	291 Move X0, X21
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Compare X20, 0
	294 JumpIfEqual {333}
	295 Move X8, X0
	296 Move X0, [X19+32]
	297 And X19, X8, 0xFFFF
	298 Move W9, [X0+309]
	299 Move TEMP, X9
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfEqual {304}
	303 Call 0x1C5D684
	304 Move X8, [X0+192]
	305 Move X0, X20
	306 Move X1, X19
	307 Move X20, [X31+96]
	308 Move X19, [X31+104]
	309 Move X2, [X8+72]
	310 Move X22, [X31+80]
	311 Move X21, [X31+88]
	312 Move X30, [X31+64]
	313 Move X23, [X31+72]
	314 Add X31, X31, 112
	315 Call 0x267ADE0, X0, X1
	316 Return 
	317 NotImplemented "Instruction LDRSW not yet implemented."
	318 Add X8, X8, X9
	319 Add X0, X8, 312
	320 Move X8, [X0]
	321 Move X2, [X0+8]
	322 Move X0, X20
	323 Move X1, X21
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move X20, [X31+96]
	326 Move X19, [X31+104]
	327 Move X22, [X31+80]
	328 Move X21, [X31+88]
	329 Move X30, [X31+64]
	330 Move X23, [X31+72]
	331 Add X31, X31, 112
	332 Return 
	333 Call 0x1C17F20

Method: System.Void Cancelled()

Disassembly:
	0x028DBB08 LDR X2, [X8 + 0x50]
	0x028DBB0C BL 0x3314368
	0x028DBB10 ADRP X8, 0x1820000
	0x028DBB14 LDR X8, [X8 + 0x7D8]
	0x028DBB18 LDR X0, [X8]
	0x028DBB1C LDR W8, [X0 + 0xE0]
	0x028DBB20 CBNZ W8, 0x28DBB28
	0x028DBB24 BL 0x1C16DFC
	0x028DBB28 ADD X8, X31, 0x0
	0x028DBB2C ADD X0, X31, 0x48
	0x028DBB30 MOV X1, X21
	0x028DBB34 MOV X2, X31
	0x028DBB38 BL 0x33DD3A4
	0x028DBB3C LDP V1, V0, [X20]
	0x028DBB40 LDR X20, [X20 + 0x18]
	0x028DBB44 STP V1, V0, [X31]
	0x028DBB48 LDR X0, [X19 + 0x20]
	0x028DBB4C LDRB W8, [X0 + 0x135]
	0x028DBB50 TBNZ X8, 0x0, 0x28DBB58
	0x028DBB54 BL 0x1C5C684
	0x028DBB58 LDR X8, [X0 + 0xC0]
	0x028DBB5C ADD X1, X31, 0x0
	0x028DBB60 LDR X0, [X8]
	0x028DBB64 BL 0x1C16E04
	0x028DBB68 LDR X8, [X19 + 0x20]
	0x028DBB6C MOV X22, X0
	0x028DBB70 LDRB W9, [X8 + 0x135]
	0x028DBB74 TBNZ X9, 0x0, 0x28DBB84
	0x028DBB78 MOV X0, X8
	0x028DBB7C BL 0x1C5C684
	0x028DBB80 MOV X8, X0
	0x028DBB84 LDR X8, [X8 + 0xC0]
	0x028DBB88 LDR X0, [X8 + 0x60]
	0x028DBB8C LDRB W8, [X0 + 0x135]
	0x028DBB90 TBNZ X8, 0x0, 0x28DBB98
	0x028DBB94 BL 0x1C5C684
	0x028DBB98 BL 0x1C16F10
	0x028DBB9C LDR X8, [X19 + 0x20]
	0x028DBBA0 MOV X21, X0
	0x028DBBA4 ADD X9, X8, 0x135
	0x028DBBA8 LDRH W9, [X9]
	0x028DBBAC TBNZ X9, 0x0, 0x28DBBC8
	0x028DBBB0 MOV X0, X8
	0x028DBBB4 BL 0x1C5C684
	0x028DBBB8 LDR X8, [X19 + 0x20]
	0x028DBBBC ADD X9, X8, 0x135
	0x028DBBC0 LDRH W9, [X9]
	0x028DBBC4 B 0x28DBBCC
	0x028DBBC8 MOV X0, X8
	0x028DBBCC LDR X10, [X0 + 0xC0]
	0x028DBBD0 LDR X23, [X10 + 0x58]
	0x028DBBD4 TBNZ X9, 0x0, 0x28DBBE4
	0x028DBBD8 MOV X0, X8
	0x028DBBDC BL 0x1C5C684
	0x028DBBE0 MOV X8, X0
	0x028DBBE4 LDR X8, [X8 + 0xC0]
	0x028DBBE8 MOV X0, X21
	0x028DBBEC MOV X1, X22
	0x028DBBF0 MOV X2, X23
	0x028DBBF4 LDR X3, [X8 + 0x68]
	0x028DBBF8 BL 0x2981DC0
	0x028DBBFC CBZ X20, 0x28DBD18
	0x028DBC00 LDR X0, [X19 + 0x20]
	0x028DBC04 LDRB W8, [X0 + 0x135]
	0x028DBC08 TBNZ X8, 0x0, 0x28DBC10
	0x028DBC0C BL 0x1C5C684
	0x028DBC10 LDR X8, [X0 + 0xC0]
	0x028DBC14 LDR X1, [X8 + 0x30]
	0x028DBC18 LDRB W8, [X1 + 0x135]
	0x028DBC1C TBNZ X8, 0x0, 0x28DBC2C
	0x028DBC20 MOV X0, X1
	0x028DBC24 BL 0x1C5C684
	0x028DBC28 MOV X1, X0
	0x028DBC2C LDR X8, [X20]
	0x028DBC30 LDRH W9, [X8 + 0x12E]
	0x028DBC34 CBZ X9, 0x28DBC58
	0x028DBC38 LDR X10, [X8 + 0xB0]
	0x028DBC3C ADD X10, X10, 0x8
	0x028DBC40 LDUR X11, [X10 - 0x8]
	0x028DBC44 CMP X11, X1
	0x028DBC48 B.EQ 0x28DBCE0
	0x028DBC4C SUBS X9, X9, 0x1
	0x028DBC50 ADD X10, X10, 0x10
	0x028DBC54 B.NE 0x28DBC40
	0x028DBC58 MOV X0, X20
	0x028DBC5C MOV W2, W31
	0x028DBC60 BL 0x1C5C788
	0x028DBC64 B 0x28DBCEC
	0x028DBC68 LDR W9, [X10]
	0x028DBC6C ADD W9, W9, 0x3
	0x028DBC70 ADD X8, X8, W9, 0x4, SXTW
	0x028DBC74 ADD X0, X8, 0x138
	0x028DBC78 LDP X8, X1, [X0]
	0x028DBC7C MOV X0, X21
	0x028DBC80 BLR X8
	0x028DBC84 CBZ X20, 0x28DBD18
	0x028DBC88 LDR X0, [X19 + 0x20]
	0x028DBC8C MOV V8.16B, V0.16B
	0x028DBC90 MOV V9.16B, V1.16B
	0x028DBC94 MOV V10.16B, V2.16B
	0x028DBC98 LDRB W8, [X0 + 0x135]
	0x028DBC9C MOV V11.16B, V3.16B
	0x028DBCA0 TBNZ X8, 0x0, 0x28DBCA8
	0x028DBCA4 BL 0x1C5C684
	0x028DBCA8 LDR X8, [X0 + 0xC0]
	0x028DBCAC MOV X0, X20
	0x028DBCB0 MOV V0.16B, V8.16B
	0x028DBCB4 MOV V1.16B, V9.16B
	0x028DBCB8 LDR X1, [X8 + 0x48]
	0x028DBCBC MOV V2.16B, V10.16B
	0x028DBCC0 MOV V3.16B, V11.16B
	0x028DBCC4 LDP X20, X19, [X31 + 0x90]
	0x028DBCC8 LDP X22, X21, [X31 + 0x80]
	0x028DBCCC LDP X30, X23, [X31 + 0x70]
	0x028DBCD0 LDP D9, D8, [X31 + 0x60]
	0x028DBCD4 LDP D11, D10, [X31 + 0x50]
	0x028DBCD8 ADD X31, X31, 0xA0
	0x028DBCDC B 0x267A4B4
	0x028DBCE0 LDRSW X9, [X10]
	0x028DBCE4 ADD X8, X8, X9, 0x4, LSL
	0x028DBCE8 ADD X0, X8, 0x138
	0x028DBCEC LDP X8, X2, [X0]
	0x028DBCF0 MOV X0, X20
	0x028DBCF4 MOV X1, X21
	0x028DBCF8 BLR X8
	0x028DBCFC LDP X20, X19, [X31 + 0x90]
	0x028DBD00 LDP X22, X21, [X31 + 0x80]
	0x028DBD04 LDP X30, X23, [X31 + 0x70]
	0x028DBD08 LDP D9, D8, [X31 + 0x60]
	0x028DBD0C LDP D11, D10, [X31 + 0x50]
	0x028DBD10 ADD X31, X31, 0xA0
	0x028DBD14 RET
	0x028DBD18 BL 0x1C16F20
	0x028DBD1C SUB X31, X31, 0x80
	0x028DBD20 STP D11, D10, [X31 + 0x20]
	0x028DBD24 STP D9, D8, [X31 + 0x30]
	0x028DBD28 STR X30, [X31 + 0x40]
	0x028DBD2C STP X24, X23, [X31 + 0x50]
	0x028DBD30 STP X22, X21, [X31 + 0x60]
	0x028DBD34 STP X20, X19, [X31 + 0x70]
	0x028DBD38 LDP V1, V0, [X0]
	0x028DBD3C LDR X21, [X0 + 0x18]
	0x028DBD40 MOV X20, X0
	0x028DBD44 MOV X19, X1
	0x028DBD48 STP V1, V0, [X31]
	0x028DBD4C LDR X0, [X1 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X8, [X0+16]
	010 Move V0, [X0]
	011 Move X21, [X0+16]
	012 Move X20, X0
	013 Move [X31+16], X8
	014 Move [X31], V0
	015 Move X0, [X1+32]
	016 Move X19, X1
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+192]
	024 Add X1, X31, 0
	025 Move X0, [X8]
	026 Call 0x1C17E04
	027 Move X8, [X19+32]
	028 Move X23, X0
	029 Move W9, [X8+309]
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {37}
	034 Move X0, X8
	035 Call 0x1C5D684
	036 Move X8, X0
	037 Move X8, [X8+192]
	038 Move X0, [X8+96]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Call 0x1C17F10
	046 Move X8, [X19+32]
	047 Move X22, X0
	048 Add X9, X8, 309
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move TEMP, X9
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {59}
	054 Move X0, X8
	055 Call 0x1C5D684
	056 Move X8, [X19+32]
	057 Add X9, X8, 309
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X0, X8
	060 Move X10, [X0+192]
	061 Move X24, [X10+88]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X8
	067 Call 0x1C5D684
	068 Move X8, X0
	069 Move X8, [X8+192]
	070 Move X0, X22
	071 Move X1, X23
	072 Move X2, X24
	073 Move X3, [X8+104]
	074 Call Action`1<AffordanceStateData>..ctor, X0, X1, X2
	075 Compare X21, 0
	076 JumpIfEqual {182}
	077 Move X0, [X19+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move X8, [X0+192]
	085 Move X1, [X8+48]
	086 Move W8, [X1+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {94}
	091 Move X0, X1
	092 Call 0x1C5D684
	093 Move X1, X0
	094 Move X8, [X21]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 2
	105 Move X0, X21
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 2
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X2, [X0+8]
	113 Move X0, X21
	114 Move X1, X22
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X21, [X20+16]
	117 Compare X21, 0
	118 JumpIfEqual {182}
	119 Move X0, [X19+32]
	120 Move X20, [X20]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move X8, [X0+192]
	128 Move X1, [X8+48]
	129 Move W8, [X1+309]
	130 Move TEMP, X8
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {137}
	134 Move X0, X1
	135 Call 0x1C5D684
	136 Move X1, X0
	137 Move X8, [X21]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move W2, 3
	148 Move X0, X21
	149 Call 0x1C5D788
	150 Move W9, [X10]
	151 Add W9, W9, 3
	152 Add X8, X8, W9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Compare X20, 0
	159 JumpIfEqual {182}
	160 Move X21, X0
	161 Move X0, [X19+32]
	162 Move W8, [X0+309]
	163 Move TEMP, X8
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfEqual {168}
	167 Call 0x1C5D684
	168 Move X8, [X0+192]
	169 And X1, X21, 0xFFFF
	170 Move X0, X20
	171 Move X2, [X8+72]
	172 Call 0x267ADE0, X0, X1
	173 Move X20, [X31+80]
	174 Move X19, [X31+88]
	175 Move X22, [X31+64]
	176 Move X21, [X31+72]
	177 Move X24, [X31+48]
	178 Move X23, [X31+56]
	179 Move X30, [X31+32]
	180 Add X31, X31, 96
	181 Return 
	182 Call 0x1C17F20

Method: System.Void Await(T state)

Disassembly:
	0x028DBD50 LDRB W8, [X0 + 0x135]
	0x028DBD54 TBNZ X8, 0x0, 0x28DBD5C
	0x028DBD58 BL 0x1C5C684
	0x028DBD5C LDR X8, [X0 + 0xC0]
	0x028DBD60 ADD X1, X31, 0x0
	0x028DBD64 LDR X0, [X8]
	0x028DBD68 BL 0x1C16E04
	0x028DBD6C LDR X8, [X19 + 0x20]
	0x028DBD70 MOV X23, X0
	0x028DBD74 LDRB W9, [X8 + 0x135]
	0x028DBD78 TBNZ X9, 0x0, 0x28DBD88
	0x028DBD7C MOV X0, X8
	0x028DBD80 BL 0x1C5C684
	0x028DBD84 MOV X8, X0
	0x028DBD88 LDR X8, [X8 + 0xC0]
	0x028DBD8C LDR X0, [X8 + 0x60]
	0x028DBD90 LDRB W8, [X0 + 0x135]
	0x028DBD94 TBNZ X8, 0x0, 0x28DBD9C
	0x028DBD98 BL 0x1C5C684
	0x028DBD9C BL 0x1C16F10
	0x028DBDA0 LDR X8, [X19 + 0x20]
	0x028DBDA4 MOV X22, X0
	0x028DBDA8 ADD X9, X8, 0x135
	0x028DBDAC LDRH W9, [X9]
	0x028DBDB0 TBNZ X9, 0x0, 0x28DBDCC
	0x028DBDB4 MOV X0, X8
	0x028DBDB8 BL 0x1C5C684
	0x028DBDBC LDR X8, [X19 + 0x20]
	0x028DBDC0 ADD X9, X8, 0x135
	0x028DBDC4 LDRH W9, [X9]
	0x028DBDC8 B 0x28DBDD0
	0x028DBDCC MOV X0, X8
	0x028DBDD0 LDR X10, [X0 + 0xC0]
	0x028DBDD4 LDR X24, [X10 + 0x58]
	0x028DBDD8 TBNZ X9, 0x0, 0x28DBDE8
	0x028DBDDC MOV X0, X8
	0x028DBDE0 BL 0x1C5C684
	0x028DBDE4 MOV X8, X0
	0x028DBDE8 LDR X8, [X8 + 0xC0]
	0x028DBDEC MOV X0, X22
	0x028DBDF0 MOV X1, X23
	0x028DBDF4 MOV X2, X24
	0x028DBDF8 LDR X3, [X8 + 0x68]
	0x028DBDFC BL 0x2981DC0
	0x028DBE00 CBZ X21, 0x28DBF80
	0x028DBE04 LDR X0, [X19 + 0x20]
	0x028DBE08 LDRB W8, [X0 + 0x135]
	0x028DBE0C TBNZ X8, 0x0, 0x28DBE14
	0x028DBE10 BL 0x1C5C684
	0x028DBE14 LDR X8, [X0 + 0xC0]
	0x028DBE18 LDR X1, [X8 + 0x30]
	0x028DBE1C LDRB W8, [X1 + 0x135]
	0x028DBE20 TBNZ X8, 0x0, 0x28DBE30
	0x028DBE24 MOV X0, X1
	0x028DBE28 BL 0x1C5C684
	0x028DBE2C MOV X1, X0
	0x028DBE30 LDR X8, [X21]
	0x028DBE34 LDRH W9, [X8 + 0x12E]
	0x028DBE38 CBZ X9, 0x28DBE5C
	0x028DBE3C LDR X10, [X8 + 0xB0]
	0x028DBE40 ADD X10, X10, 0x8
	0x028DBE44 LDUR X11, [X10 - 0x8]
	0x028DBE48 CMP X11, X1
	0x028DBE4C B.EQ 0x28DBE6C
	0x028DBE50 SUBS X9, X9, 0x1
	0x028DBE54 ADD X10, X10, 0x10
	0x028DBE58 B.NE 0x28DBE44
	0x028DBE5C MOVZ W2, 0x2
	0x028DBE60 MOV X0, X21
	0x028DBE64 BL 0x1C5C788
	0x028DBE68 B 0x28DBE7C
	0x028DBE6C LDR W9, [X10]
	0x028DBE70 ADD W9, W9, 0x2
	0x028DBE74 ADD X8, X8, W9, 0x4, SXTW
	0x028DBE78 ADD X0, X8, 0x138
	0x028DBE7C LDP X8, X2, [X0]
	0x028DBE80 MOV X0, X21
	0x028DBE84 MOV X1, X22
	0x028DBE88 BLR X8
	0x028DBE8C LDR X21, [X20 + 0x18]
	0x028DBE90 CBZ X21, 0x28DBF80
	0x028DBE94 LDR X0, [X19 + 0x20]
	0x028DBE98 LDR X20, [X20]
	0x028DBE9C LDRB W8, [X0 + 0x135]
	0x028DBEA0 TBNZ X8, 0x0, 0x28DBEA8
	0x028DBEA4 BL 0x1C5C684
	0x028DBEA8 LDR X8, [X0 + 0xC0]
	0x028DBEAC LDR X1, [X8 + 0x30]
	0x028DBEB0 LDRB W8, [X1 + 0x135]
	0x028DBEB4 TBNZ X8, 0x0, 0x28DBEC4
	0x028DBEB8 MOV X0, X1
	0x028DBEBC BL 0x1C5C684
	0x028DBEC0 MOV X1, X0
	0x028DBEC4 LDR X8, [X21]
	0x028DBEC8 LDRH W9, [X8 + 0x12E]
	0x028DBECC CBZ X9, 0x28DBEF0
	0x028DBED0 LDR X10, [X8 + 0xB0]
	0x028DBED4 ADD X10, X10, 0x8
	0x028DBED8 LDUR X11, [X10 - 0x8]
	0x028DBEDC CMP X11, X1
	0x028DBEE0 B.EQ 0x28DBF00
	0x028DBEE4 SUBS X9, X9, 0x1
	0x028DBEE8 ADD X10, X10, 0x10
	0x028DBEEC B.NE 0x28DBED8
	0x028DBEF0 MOVZ W2, 0x3
	0x028DBEF4 MOV X0, X21
	0x028DBEF8 BL 0x1C5C788
	0x028DBEFC B 0x28DBF10
	0x028DBF00 LDR W9, [X10]
	0x028DBF04 ADD W9, W9, 0x3
	0x028DBF08 ADD X8, X8, W9, 0x4, SXTW
	0x028DBF0C ADD X0, X8, 0x138
	0x028DBF10 LDP X8, X1, [X0]
	0x028DBF14 MOV X0, X21
	0x028DBF18 BLR X8
	0x028DBF1C CBZ X20, 0x28DBF80
	0x028DBF20 LDR X0, [X19 + 0x20]
	0x028DBF24 MOV V8.16B, V0.16B
	0x028DBF28 MOV V9.16B, V1.16B
	0x028DBF2C MOV V10.16B, V2.16B
	0x028DBF30 LDRB W8, [X0 + 0x135]
	0x028DBF34 MOV V11.16B, V3.16B
	0x028DBF38 TBNZ X8, 0x0, 0x28DBF40
	0x028DBF3C BL 0x1C5C684
	0x028DBF40 LDR X8, [X0 + 0xC0]
	0x028DBF44 MOV X0, X20
	0x028DBF48 MOV V0.16B, V8.16B
	0x028DBF4C MOV V1.16B, V9.16B
	0x028DBF50 LDR X1, [X8 + 0x48]
	0x028DBF54 MOV V2.16B, V10.16B
	0x028DBF58 MOV V3.16B, V11.16B
	0x028DBF5C BL 0x267A4B4
	0x028DBF60 LDP X20, X19, [X31 + 0x70]
	0x028DBF64 LDP X22, X21, [X31 + 0x60]
	0x028DBF68 LDP X24, X23, [X31 + 0x50]
	0x028DBF6C LDR X30, [X31 + 0x40]
	0x028DBF70 LDP D9, D8, [X31 + 0x30]
	0x028DBF74 LDP D11, D10, [X31 + 0x20]
	0x028DBF78 ADD X31, X31, 0x80
	0x028DBF7C RET
	0x028DBF80 BL 0x1C16F20
	0x028DBF84 SUB X31, X31, 0xA0
	0x028DBF88 STP D15, D14, [X31 + 0x20]
	0x028DBF8C STP D13, D12, [X31 + 0x30]
	0x028DBF90 STP D11, D10, [X31 + 0x40]
	0x028DBF94 STP D9, D8, [X31 + 0x50]
	0x028DBF98 STR X30, [X31 + 0x60]
	0x028DBF9C STP X24, X23, [X31 + 0x70]
	0x028DBFA0 STP X22, X21, [X31 + 0x80]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X22, [X0+16]
	011 Compare X22, 0
	012 JumpIfEqual {190}
	013 Move X21, X0
	014 Move X0, [X2+32]
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 Move X20, X2
	017 Move X19, X1
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move X8, [X0+192]
	025 Move X1, [X8+48]
	026 Move W8, [X1+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X1
	032 Call 0x1C5D684
	033 Move X1, X0
	034 Move X8, [X22]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 5
	045 Move X0, X22
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 5
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X2, [X0+8]
	053 Move X0, X22
	054 Move X1, X23
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {180}
	060 Move X8, [X21+16]
	061 Move V0, [X21]
	062 Move X22, [X21+16]
	063 Move [X31+16], X8
	064 Move [X31], V0
	065 Move X0, [X20+32]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, [X0+192]
	073 Add X1, X31, 0
	074 Move X0, [X8]
	075 Call 0x1C17E04
	076 Move X8, [X20+32]
	077 Move X24, X0
	078 Move W9, [X8+309]
	079 Move TEMP, X9
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {86}
	083 Move X0, X8
	084 Call 0x1C5D684
	085 Move X8, X0
	086 Move X8, [X8+192]
	087 Move X0, [X8+96]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Call 0x1C17F10
	095 Move X8, [X20+32]
	096 Move X23, X0
	097 Add X9, X8, 309
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move TEMP, X9
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {108}
	103 Move X0, X8
	104 Call 0x1C5D684
	105 Move X8, [X20+32]
	106 Add X9, X8, 309
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X0, X8
	109 Move X10, [X0+192]
	110 Move X25, [X10+88]
	111 Move TEMP, X9
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {118}
	115 Move X0, X8
	116 Call 0x1C5D684
	117 Move X8, X0
	118 Move X8, [X8+192]
	119 Move X0, X23
	120 Move X1, X24
	121 Move X2, X25
	122 Move X3, [X8+104]
	123 Call Action`1<AffordanceStateData>..ctor, X0, X1, X2
	124 Compare X22, 0
	125 JumpIfEqual {190}
	126 Move X0, [X20+32]
	127 Move W8, [X0+309]
	128 Move TEMP, X8
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfEqual {133}
	132 Call 0x1C5D684
	133 Move X8, [X0+192]
	134 Move X1, [X8+48]
	135 Move W8, [X1+309]
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {143}
	140 Move X0, X1
	141 Call 0x1C5D684
	142 Move X1, X0
	143 Move X8, [X22]
	144 NotImplemented "Instruction LDRH not yet implemented."
	145 Compare X9, 0
	146 JumpIfEqual {153}
	147 Move X10, [X8+176]
	148 Add X10, X10, 8
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Subtract X9, X9, 1
	152 Add X10, X10, 16
	153 Move W2, 2
	154 Move X0, X22
	155 Call 0x1C5D788
	156 Move W9, [X10]
	157 Add W9, W9, 2
	158 Add X8, X8, W9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X2, [X0+8]
	162 Move X0, X22
	163 Move X1, X23
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X21, [X21]
	166 Compare X21, 0
	167 JumpIfEqual {190}
	168 Move X0, [X20+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+192]
	176 And X1, X19, 0xFFFF
	177 Move X0, X21
	178 Move X2, [X8+72]
	179 Call 0x267ADE0, X0, X1
	180 Move X20, [X31+80]
	181 Move X19, [X31+88]
	182 Move X22, [X31+64]
	183 Move X21, [X31+72]
	184 Move X24, [X31+48]
	185 Move X23, [X31+56]
	186 Move X30, [X31+32]
	187 Move X25, [X31+40]
	188 Add X31, X31, 96
	189 Return 
	190 Call 0x1C17F20

