Type: Unity.XR.CoreUtils.UndoBlock

Method: System.Void .ctor(System.String undoLabel, System.Boolean testMode = False)

Disassembly:
	0x03B2FC50 ADRP X8, 0xFFFFFFFFFCFBA000
	0x03B2FC54 FSUB S0, S0, S10
	0x03B2FC58 FSUB S1, S1, S9
	0x03B2FC5C LDR V3, [X8 + 0xF20]
	0x03B2FC60 FSUB S2, S2, S8
	0x03B2FC64 FMUL S0, S0, S0
	0x03B2FC68 FMUL S1, S1, S1
	0x03B2FC6C FADD S0, S0, S1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W8, TEMP
	009 Move [X19+16], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void RegisterCreatedObject(UnityEngine.Object objectToUndo)

Disassembly:
	0x03B2FC70 FMUL S1, S2, S2

ISIL:
	001 Return 

Method: System.Void RecordObject(UnityEngine.Object objectToUndo)

Disassembly:
	0x03B2FC74 FADD S0, S1, S0

ISIL:
	001 Return 

Method: System.Void SetTransformParent(UnityEngine.Transform transform, UnityEngine.Transform newParent)

Disassembly:
	0x03B2FC78 FCMP S0, S3
	0x03B2FC7C B.MI 0x3B2FD6C
	0x03B2FC80 LDR X0, [X19 + 0x38]
	0x03B2FC84 CBZ X0, 0x3B2FD84
	0x03B2FC88 MOV X1, X31
	0x03B2FC8C BL 0x3C356F8
	0x03B2FC90 CBZ X0, 0x3B2FD84

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {8}
	003 Move X0, X1
	004 Move X1, X2
	005 Move X2, X31
	006 Call Transform.set_parent, X0, X1
	007 Return 
	008 Move [X31-16], X30
	009 Call 0x1C17F20

Method: T AddComponent(UnityEngine.GameObject gameObject)

Disassembly:
	0x022A2FEC ADD W9, W10, 0x1
	0x022A2FF0 ADD X8, X8, X10, 0x3, LSL
	0x022A2FF4 STR W9, [X0 + 0x18]
	0x022A2FF8 STR X19, [X8 + 0x20]
	0x022A2FFC B 0x22A3014
	0x022A3000 LDR X8, [X9 + 0x20]
	0x022A3004 LDR X8, [X8 + 0xC0]
	0x022A3008 LDR X2, [X8 + 0x70]
	0x022A300C MOV X1, X19
	0x022A3010 BL 0x301BF90
	0x022A3014 CBZ X27, 0x22A30DC
	0x022A3018 LDR X0, [X31 + 0xB8]
	0x022A301C CBZ X0, 0x22A33B0
	0x022A3020 ADRP X8, 0x1E79000
	0x022A3024 LDR X8, [X8 + 0x890]
	0x022A3028 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+56]
	005 Move X19, X2
	006 Move X20, X1
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Compare X20, 0
	012 JumpIfEqual {21}
	013 Move X8, [X19+56]
	014 Move X0, X20
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X1, [X8]
	018 Move X30, [X31+32]
	019 Call 0x21E61FC, X0
	020 Return X0
	021 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03B2FC94 MOV X1, X31
	0x03B2FC98 BL 0x3C3F988
	0x03B2FC9C MOV V3.16B, V10.16B
	0x03B2FCA0 MOV V4.16B, V9.16B
	0x03B2FCA4 MOV V5.16B, V8.16B
	0x03B2FCA8 MOV X0, X31

ISIL:
	001 Move W8, [X0+20]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move W8, 1
	006 Move [X0+20], W8
	007 Return 

Method: System.Void Dispose()

Disassembly:
	0x03B2FCAC BL 0x3C2A1AC
	0x03B2FCB0 LDR X0, [X19 + 0x38]
	0x03B2FCB4 CBZ X0, 0x3B2FD84
	0x03B2FCB8 MOV X1, X31

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+392]
	004 Move X2, [X8+400]
	005 CallNoReturn X3

