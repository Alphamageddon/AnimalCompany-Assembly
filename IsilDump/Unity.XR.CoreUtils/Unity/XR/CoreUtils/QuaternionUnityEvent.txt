Type: Unity.XR.CoreUtils.QuaternionUnityEvent

Method: System.Void .ctor()

Disassembly:
	0x03B27BC8 ADRP X25, 0x632000
	0x03B27BCC MOV W22, W31
	0x03B27BD0 LDR X8, [X8]
	0x03B27BD4 LDR X8, [X8 + 0xB8]
	0x03B27BD8 LDP S2, S1, [X8]
	0x03B27BDC LDR V0, [X8 + 0x8]
	0x03B27BE0 LDR X24, [X24 + 0x980]
	0x03B27BE4 LDR X25, [X25 + 0xD10]
	0x03B27BE8 LDP S11, S9, [X31 + 0x2C]
	0x03B27BEC LDR V10, [X31 + 0x34]
	0x03B27BF0 MOVN W8, 0x80800000
	0x03B27BF4 STR W8, [X31 + 0x38]
	0x03B27BF8 STP S2, S1, [X31 + 0x14]
	0x03B27BFC STP S2, S1, [X31 + 0x20]
	0x03B27C00 STR S0, [X31 + 0x1C]
	0x03B27C04 STR S0, [X31 + 0x28]
	0x03B27C08 LDR X2, [X24]
	0x03B27C0C MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x8BC000
	006 Move X21, 0x633000
	007 Move W8, [X20+1895]
	008 Move X21, [X21+3256]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x633000
	015 Move X0, [X0+3256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1895], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call UnityEvent`1<Quaternion>..ctor, X0
	026 Return 

