Type: Unity.XR.CoreUtils.GeometryUtils

Method: System.Boolean FindClosestEdge(System.Collections.Generic.List`1<UnityEngine.Vector3> vertices, UnityEngine.Vector3 point, out UnityEngine.Vector3 vertexA, out UnityEngine.Vector3 vertexB)

Disassembly:
	0x03B28B1C BL 0x1C16DFC
	0x03B28B20 LDP S0, S1, [X31 + 0x88]
	0x03B28B24 STR D8, [X31 + 0x20]
	0x03B28B28 LDR V8, [X31 + 0x7C]
	0x03B28B2C LDP S3, S2, [X31 + 0x80]
	0x03B28B30 ADD X0, X31, 0xDC
	0x03B28B34 ADD X1, X31, 0xD8
	0x03B28B38 MOV V4.16B, V8.16B
	0x03B28B3C MOV V5.16B, V13.16B
	0x03B28B40 STP S11, S10, [X31 + 0x10]
	0x03B28B44 STP S15, S14, [X31]
	0x03B28B48 STR S12, [X31 + 0x18]
	0x03B28B4C STR S9, [X31 + 0x8]
	0x03B28B50 BL 0x3B2848C
	0x03B28B54 LDR V0, [X31 + 0xD8]
	0x03B28B58 FMOV S1, 1
	0x03B28B5C MOV W21, W0
	0x03B28B60 FCMP S0, S1
	0x03B28B64 B.HI 0x3B28BDC
	0x03B28B68 LDR V1, [X31 + 0xDC]
	0x03B28B6C FCMP S1, 0x0
	0x03B28B70 B.LE 0x3B28BDC
	0x03B28B74 FMOV S2, 1
	0x03B28B78 FCMP S1, S2
	0x03B28B7C B.HI 0x3B28BDC
	0x03B28B80 FCMP S0, 0x0
	0x03B28B84 B.LE 0x3B28BDC
	0x03B28B88 LDR V2, [X31 + 0x80]
	0x03B28B8C LDR V6, [X31 + 0x88]
	0x03B28B90 FMUL S3, S8, S1
	0x03B28B94 FMUL S4, S11, S0
	0x03B28B98 FMUL S2, S2, S1
	0x03B28B9C FADD S2, S6, S2
	0x03B28BA0 LDR V6, [X31 + 0x8C]
	0x03B28BA4 FMUL S1, S13, S1
	0x03B28BA8 FMUL S5, S10, S0
	0x03B28BAC FMUL S0, S12, S0
	0x03B28BB0 FADD S3, S6, S3
	0x03B28BB4 LDR V6, [X31 + 0x84]
	0x03B28BB8 FADD S4, S15, S4
	0x03B28BBC FADD S5, S14, S5
	0x03B28BC0 FADD S0, S9, S0
	0x03B28BC4 FADD S1, S6, S1
	0x03B28BC8 STP S2, S3, [X20]
	0x03B28BCC STR S1, [X20 + 0x8]
	0x03B28BD0 STP S4, S5, [X19]
	0x03B28BD4 STR S0, [X19 + 0x8]
	0x03B28BD8 B 0x3B28F50
	0x03B28BDC LDP S1, S2, [X31 + 0x80]
	0x03B28BE0 LDR V0, [X31 + 0x88]
	0x03B28BE4 LDR X0, [X23]
	0x03B28BE8 MOV V3.16B, V8.16B
	0x03B28BEC STP S11, S10, [X31 + 0x38]
	0x03B28BF0 FADD S4, S0, S1
	0x03B28BF4 LDR V1, [X31 + 0x8C]
	0x03B28BF8 LDR W8, [X0 + 0xE0]
	0x03B28BFC FADD S8, S15, S11
	0x03B28C00 FADD S11, S14, S10
	0x03B28C04 FADD S3, S1, S3
	0x03B28C08 FADD S10, S9, S12
	0x03B28C0C STP S4, S3, [X31 + 0x74]
	0x03B28C10 FADD S3, S2, S13
	0x03B28C14 STR S13, [X31 + 0x48]
	0x03B28C18 STR S3, [X31 + 0x6C]
	0x03B28C1C CBNZ W8, 0x3B28C30
	0x03B28C20 MOV V13.16B, V2.16B
	0x03B28C24 BL 0x1C16DFC
	0x03B28C28 LDP S0, S1, [X31 + 0x88]
	0x03B28C2C MOV V2.16B, V13.16B
	0x03B28C30 MOV V3.16B, V15.16B
	0x03B28C34 MOV V4.16B, V14.16B
	0x03B28C38 MOV V5.16B, V9.16B
	0x03B28C3C STR S12, [X31 + 0x34]
	0x03B28C40 STP S11, S10, [X31 + 0x4]
	0x03B28C44 STR S8, [X31]
	0x03B28C48 MOV V12.16B, V1.16B
	0x03B28C4C MOV V13.16B, V0.16B
	0x03B28C50 BL 0x3B27D68
	0x03B28C54 MOV V3.16B, V8.16B
	0x03B28C58 STP S1, S0, [X31 + 0x40]
	0x03B28C5C MOV V8.16B, V12.16B
	0x03B28C60 MOV V12.16B, V13.16B
	0x03B28C64 MOV V13.16B, V2.16B
	0x03B28C68 LDP S0, S1, [X31 + 0x74]
	0x03B28C6C LDR V2, [X31 + 0x6C]
	0x03B28C70 STR S3, [X31 + 0x68]
	0x03B28C74 STR S3, [X31]
	0x03B28C78 MOV V3.16B, V15.16B
	0x03B28C7C MOV V4.16B, V14.16B
	0x03B28C80 MOV V5.16B, V9.16B
	0x03B28C84 STP S11, S10, [X31 + 0x60]
	0x03B28C88 STP S11, S10, [X31 + 0x4]
	0x03B28C8C BL 0x3B27D68
	0x03B28C90 ADRP X24, 0x8B0000
	0x03B28C94 LDRB W8, [X24 + 0x85C]
	0x03B28C98 STR S0, [X31 + 0x70]
	0x03B28C9C STP S2, S1, [X31 + 0x4C]
	0x03B28CA0 CBNZ W8, 0x3B28CB8
	0x03B28CA4 ADRP X0, 0x5CB000
	0x03B28CA8 LDR X0, [X0 + 0x5A8]
	0x03B28CAC BL 0x1C16CF4
	0x03B28CB0 MOVZ W8, 0x1
	0x03B28CB4 STRB W8, [X24 + 0x85C]
	0x03B28CB8 STP S15, S14, [X31 + 0x54]
	0x03B28CBC STR S9, [X31 + 0x5C]
	0x03B28CC0 ADRP X22, 0x5CB000
	0x03B28CC4 LDR X22, [X22 + 0x5A8]
	0x03B28CC8 LDP S9, S1, [X31 + 0x40]
	0x03B28CCC LDR V0, [X31 + 0x84]
	0x03B28CD0 LDR X0, [X22]
	0x03B28CD4 FSUB S10, S12, S1
	0x03B28CD8 FSUB S11, S8, S9
	0x03B28CDC FSUB S15, S0, S13
	0x03B28CE0 LDR W8, [X0 + 0xE0]
	0x03B28CE4 MOV V8.16B, V1.16B
	0x03B28CE8 MOV V12.16B, V13.16B
	0x03B28CEC CBZ W8, 0x3B28CF8
	0x03B28CF0 MOVZ W8, 0x1
	0x03B28CF4 B 0x3B28D00
	0x03B28CF8 BL 0x1C16DFC
	0x03B28CFC LDRB W8, [X24 + 0x85C]
	0x03B28D00 LDR V13, [X31 + 0x74]
	0x03B28D04 FMUL S2, S15, S15
	0x03B28D08 LDP S15, S4, [X31 + 0x84]
	0x03B28D0C LDR V3, [X31 + 0x8C]
	0x03B28D10 FMUL S0, S10, S10
	0x03B28D14 FMUL S1, S11, S11
	0x03B28D18 FADD S0, S0, S1
	0x03B28D1C FADD S11, S2, S0
	0x03B28D20 STP S4, S3, [X20]
	0x03B28D24 STR S15, [X20 + 0x8]
	0x03B28D28 STP S8, S9, [X19]
	0x03B28D2C STR S12, [X19 + 0x8]
	0x03B28D30 CBNZ W8, 0x3B28D48
	0x03B28D34 ADRP X0, 0x5CB000
	0x03B28D38 LDR X0, [X0 + 0x5A8]
	0x03B28D3C BL 0x1C16CF4
	0x03B28D40 MOVZ W8, 0x1
	0x03B28D44 STRB W8, [X24 + 0x85C]
	0x03B28D48 LDP S14, S0, [X31 + 0x6C]
	0x03B28D4C FSQRT S9, S11
	0x03B28D50 LDR V12, [X31 + 0x78]
	0x03B28D54 LDR X0, [X22]
	0x03B28D58 FSUB S11, S13, S0
	0x03B28D5C LDR V0, [X31 + 0x50]
	0x03B28D60 LDR W8, [X0 + 0xE0]
	0x03B28D64 FSUB S10, S12, S0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X25
	012 Move [X31+144], X24
	013 Move [X31+152], X23
	014 Move [X31+160], X22
	015 Move [X31+168], X21
	016 Move [X31+176], X20
	017 Move [X31+184], X19
	018 Move X22, 0x8BB000
	019 Move W8, [X22+1911]
	020 Move X19, X2
	021 Move X20, X1
	022 Move X21, X0
	023 Move [X31+48], S1
	024 Move [X31+56], S2
	025 Move [X31+44], S0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0x632000
	031 Move X0, [X0+3344]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D0000
	034 Move X0, [X0+2424]
	035 Call 0x1C17CF4
	036 Move X0, 0x5D0000
	037 Move X0, [X0+2432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+1911], W8
	041 Compare X21, 0
	042 JumpIfEqual {182}
	043 Move W23, [X21+24]
	044 Move X22, 0x8B1000
	045 Move W8, [X22+1923]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x5CC000
	050 Move X0, [X0+1440]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+1923], W8
	054 Move X8, 0x5CC000
	055 Move X8, [X8+1440]
	056 Move X24, 0x5D0000
	057 Move X25, 0x632000
	058 Move W22, W31
	059 Move X8, [X8]
	060 Move X8, [X8+184]
	061 Move S2, [X8]
	062 Move S1, [X8+4]
	063 Move V0, [X8+8]
	064 Move X24, [X24+2432]
	065 Move X25, [X25+3344]
	066 Move S11, [X31+44]
	067 Move S9, [X31+48]
	068 Move V10, [X31+52]
	069 Move TEMP, 0x80800000
	070 Not TEMP
	071 Move W8, TEMP
	072 Move [X31+56], W8
	073 Move [X31+20], S2
	074 Move [X31+28], S1
	075 Move [X31+32], S2
	076 Move [X31+40], S1
	077 Move [X31+28], S0
	078 Move [X31+40], S0
	079 Move X2, [X24]
	080 Move X0, X21
	081 Move W1, W22
	082 Call List`1<Vector3>.get_Item, X0, X1
	083 Move W8, [X21+24]
	084 Move X2, [X24]
	085 Add W22, W22, 1
	086 Move X0, X21
	087 NotImplemented "Instruction SDIV not yet implemented."
	088 NotImplemented "Instruction MSUB not yet implemented."
	089 Move [X31+60], S0
	090 Move V12, V1
	091 Move V13, V2
	092 Call List`1<Vector3>.get_Item, X0, X1
	093 Move X0, [X25]
	094 Move V14, V0
	095 Move V15, V1
	096 Move V8, V2
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move V3, [X31+60]
	102 Move V0, V11
	103 Move V1, V9
	104 Move V2, V10
	105 Move V4, V12
	106 Move V5, V13
	107 Move [X31+4], S15
	108 Move [X31+12], S8
	109 Move [X31], S14
	110 Call GeometryUtils.ClosestPointOnLineSegment, X0, X1, X2
	111 Subtract S0, S11, S0
	112 Subtract S1, S9, S1
	113 Subtract S2, S10, S2
	114 Multiply S0, S0, S0
	115 Multiply S1, S1, S1
	116 Add S0, S0, S1
	117 Multiply S1, S2, S2
	118 Add S0, S1, S0
	119 Move V1, [X31+56]
	120 NotImplemented "Instruction FCMP not yet implemented."
	121 Move V1, [X31+60]
	122 Move [X31+36], S15
	123 Move [X31+44], S8
	124 Move [X31+28], S13
	125 Move [X31+36], S14
	126 Move [X31+56], S0
	127 Move [X31+20], S1
	128 Move [X31+28], S12
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move V1, [X31+20]
	131 Move V0, [X31+24]
	132 Move [X20], S1
	133 Move [X20+8], S0
	134 Move S0, [X31+28]
	135 Move S2, [X31+32]
	136 Move [X20+8], S0
	137 Move S1, [X31+36]
	138 Move S0, [X31+40]
	139 Compare W8, 0
	140 JumpIfNotEqual {146}
	141 Move X0, 0x5CC000
	142 Move X0, [X0+1440]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X22+1923], W8
	146 Move X8, 0x5CC000
	147 Move X8, [X8+1440]
	148 Move X9, [X8]
	149 Move X9, [X9+184]
	150 Move V0, [X9]
	151 Move V1, [X9+8]
	152 Move [X20], D0
	153 Move [X20+8], S1
	154 Move X8, [X8]
	155 Move X8, [X8+184]
	156 Move S2, [X8]
	157 Move S1, [X8+4]
	158 Move V0, [X8+8]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X19], S2
	161 Move [X19+8], S1
	162 Move [X19+8], S0
	163 Move X20, [X31+176]
	164 Move X19, [X31+184]
	165 Move X22, [X31+160]
	166 Move X21, [X31+168]
	167 Move X24, [X31+144]
	168 Move X23, [X31+152]
	169 Move X30, [X31+128]
	170 Move X25, [X31+136]
	171 Move D9, [X31+112]
	172 Move D8, [X31+120]
	173 Move D11, [X31+96]
	174 Move D10, [X31+104]
	175 Move D13, [X31+80]
	176 Move D12, [X31+88]
	177 Move D15, [X31+64]
	178 Move D14, [X31+72]
	179 NotImplemented "Instruction CSET not yet implemented."
	180 Add X31, X31, 192
	181 Return X0
	182 Call 0x1C17F20

Method: UnityEngine.Vector3 PointOnOppositeSideOfPolygon(System.Collections.Generic.List`1<UnityEngine.Vector3> vertices, UnityEngine.Vector3 point)

Disassembly:
	0x03B28F40 STP S0, S15, [X19]
	0x03B28F44 LDR V13, [X31 + 0x48]
	0x03B28F48 LDR V14, [X31 + 0x80]
	0x03B28F4C TBZ X21, 0x0, 0x3B28F84
	0x03B28F50 ORN W8, W31, W21, 0x0
	0x03B28F54 LDP X20, X19, [X31 + 0x110]
	0x03B28F58 LDP X22, X21, [X31 + 0x100]
	0x03B28F5C LDP X24, X23, [X31 + 0xF0]
	0x03B28F60 LDP X30, X25, [X31 + 0xE0]
	0x03B28F64 LDR X29, [X31 + 0xD0]
	0x03B28F68 LDP D9, D8, [X31 + 0xC0]
	0x03B28F6C LDP D11, D10, [X31 + 0xB0]
	0x03B28F70 LDP D13, D12, [X31 + 0xA0]
	0x03B28F74 LDP D15, D14, [X31 + 0x90]
	0x03B28F78 AND W0, W8, 0x1
	0x03B28F7C ADD X31, X31, 0x120
	0x03B28F80 RET
	0x03B28F84 LDP S0, S1, [X31 + 0x38]
	0x03B28F88 LDR V2, [X31 + 0x7C]
	0x03B28F8C LDR V15, [X31 + 0x34]
	0x03B28F90 ADRP X23, 0x8B0000
	0x03B28F94 FMUL S0, S14, S0
	0x03B28F98 FMUL S1, S2, S1
	0x03B28F9C FADD S0, S0, S1
	0x03B28FA0 FMUL S1, S13, S15
	0x03B28FA4 FADD S0, S1, S0
	0x03B28FA8 FCMP S0, 0x0
	0x03B28FAC B.LE 0x3B29034
	0x03B28FB0 LDRB W8, [X23 + 0x785]
	0x03B28FB4 CBNZ W8, 0x3B28FCC
	0x03B28FB8 ADRP X0, 0x5CB000
	0x03B28FBC LDR X0, [X0 + 0x5A8]
	0x03B28FC0 BL 0x1C16CF4
	0x03B28FC4 MOVZ W8, 0x1
	0x03B28FC8 STRB W8, [X23 + 0x785]
	0x03B28FCC LDR X0, [X22]
	0x03B28FD0 LDP S8, S12, [X31 + 0x60]
	0x03B28FD4 LDP S9, S10, [X31 + 0x88]
	0x03B28FD8 LDR W8, [X0 + 0xE0]
	0x03B28FDC CBNZ W8, 0x3B28FE4
	0x03B28FE0 BL 0x1C16DFC
	0x03B28FE4 LDR V0, [X31 + 0x68]
	0x03B28FE8 LDR V2, [X31 + 0x7C]
	0x03B28FEC ADRP X8, 0xFFFFFFFFFCFC2000
	0x03B28FF0 FSUB S11, S8, S10
	0x03B28FF4 FSUB S9, S0, S9
	0x03B28FF8 FMUL S0, S14, S14
	0x03B28FFC FMUL S1, S2, S2
	0x03B29000 FADD S0, S0, S1
	0x03B29004 FMUL S1, S13, S13
	0x03B29008 FADD S0, S1, S0
	0x03B2900C LDR V10, [X8 + 0x17C]
	0x03B29010 FSQRT S8, S0
	0x03B29014 LDR V0, [X31 + 0x84]
	0x03B29018 FCMP S8, S10
	0x03B2901C FSUB S12, S12, S0
	0x03B29020 B.LE 0x3B290C8
	0x03B29024 FDIV S0, S14, S8
	0x03B29028 FDIV S1, S2, S8
	0x03B2902C FDIV S2, S13, S8
	0x03B29030 B 0x3B29100
	0x03B29034 LDRB W8, [X23 + 0x785]
	0x03B29038 CBNZ W8, 0x3B29050
	0x03B2903C ADRP X0, 0x5CA000
	0x03B29040 LDR X0, [X0 + 0x5A8]
	0x03B29044 BL 0x1C16CF4
	0x03B29048 MOVZ W8, 0x1
	0x03B2904C STRB W8, [X23 + 0x785]
	0x03B29050 LDR X0, [X22]
	0x03B29054 LDP S9, S8, [X31 + 0x60]
	0x03B29058 LDR V10, [X31 + 0x68]
	0x03B2905C LDR V12, [X31 + 0x78]
	0x03B29060 LDR W8, [X0 + 0xE0]
	0x03B29064 CBNZ W8, 0x3B2906C
	0x03B29068 BL 0x1C16DFC
	0x03B2906C LDR V0, [X31 + 0x74]
	0x03B29070 LDR V3, [X31 + 0x7C]
	0x03B29074 ADRP X8, 0xFFFFFFFFFCFC1000
	0x03B29078 FSUB S12, S12, S9
	0x03B2907C FSUB S11, S0, S10
	0x03B29080 LDR V0, [X31 + 0x6C]
	0x03B29084 FMUL S1, S3, S3
	0x03B29088 LDR V10, [X8 + 0x17C]
	0x03B2908C ADRP X24, 0x5CA000
	0x03B29090 FSUB S9, S0, S8
	0x03B29094 FMUL S0, S14, S14
	0x03B29098 FMUL S2, S13, S13
	0x03B2909C FADD S0, S0, S1
	0x03B290A0 LDR X24, [X24 + 0x5A0]
	0x03B290A4 FADD S0, S2, S0
	0x03B290A8 FSQRT S8, S0
	0x03B290AC FCMP S8, S10
	0x03B290B0 ADRP X25, 0x8AF000
	0x03B290B4 B.LE 0x3B29168
	0x03B290B8 FDIV S0, S14, S8
	0x03B290BC FDIV S1, S3, S8
	0x03B290C0 FDIV S2, S13, S8
	0x03B290C4 B 0x3B29194
	0x03B290C8 ADRP X24, 0x8AF000
	0x03B290CC LDRB W8, [X24 + 0x783]
	0x03B290D0 CBNZ W8, 0x3B290E8
	0x03B290D4 ADRP X0, 0x5CA000
	0x03B290D8 LDR X0, [X0 + 0x5A0]
	0x03B290DC BL 0x1C16CF4
	0x03B290E0 MOVZ W8, 0x1
	0x03B290E4 STRB W8, [X24 + 0x783]
	0x03B290E8 ADRP X8, 0x5CA000
	0x03B290EC LDR X8, [X8 + 0x5A0]
	0x03B290F0 LDR X8, [X8]
	0x03B290F4 LDR X8, [X8 + 0xB8]
	0x03B290F8 LDP S0, S1, [X8]
	0x03B290FC LDR V2, [X8 + 0x8]
	0x03B29100 FMUL S0, S9, S0
	0x03B29104 FMUL S1, S11, S1
	0x03B29108 LDRB W8, [X23 + 0x785]
	0x03B2910C FMUL S2, S12, S2
	0x03B29110 FADD S0, S0, S1
	0x03B29114 FADD S0, S2, S0
	0x03B29118 FMOV S1, 0.5
	0x03B2911C FMUL S9, S0, S1
	0x03B29120 STR S9, [X31 + 0xD8]
	0x03B29124 CBNZ W8, 0x3B2913C
	0x03B29128 ADRP X0, 0x5CA000
	0x03B2912C LDR X0, [X0 + 0x5A8]
	0x03B29130 BL 0x1C16CF4
	0x03B29134 MOVZ W8, 0x1
	0x03B29138 STRB W8, [X23 + 0x785]
	0x03B2913C LDR X0, [X22]
	0x03B29140 LDR W8, [X0 + 0xE0]
	0x03B29144 CBNZ W8, 0x3B2914C
	0x03B29148 BL 0x1C16DFC
	0x03B2914C FCMP S8, S10
	0x03B29150 B.LE 0x3B291FC
	0x03B29154 LDR V0, [X31 + 0x7C]
	0x03B29158 FDIV S11, S14, S8
	0x03B2915C FDIV S13, S13, S8
	0x03B29160 FDIV S12, S0, S8
	0x03B29164 B 0x3B29234
	0x03B29168 LDRB W8, [X25 + 0x783]
	0x03B2916C CBNZ W8, 0x3B29184
	0x03B29170 ADRP X0, 0x5CA000
	0x03B29174 LDR X0, [X0 + 0x5A0]
	0x03B29178 BL 0x1C16CF4
	0x03B2917C MOVZ W8, 0x1
	0x03B29180 STRB W8, [X25 + 0x783]
	0x03B29184 LDR X8, [X24]
	0x03B29188 LDR X8, [X8 + 0xB8]
	0x03B2918C LDP S0, S1, [X8]
	0x03B29190 LDR V2, [X8 + 0x8]
	0x03B29194 FMUL S0, S11, S0
	0x03B29198 FMUL S1, S12, S1
	0x03B2919C LDRB W8, [X23 + 0x785]
	0x03B291A0 FMUL S2, S9, S2
	0x03B291A4 FADD S0, S0, S1
	0x03B291A8 FADD S0, S2, S0
	0x03B291AC FMOV S1, 0.5
	0x03B291B0 FMUL S9, S0, S1
	0x03B291B4 STR S9, [X31 + 0xD8]
	0x03B291B8 CBNZ W8, 0x3B291D0
	0x03B291BC ADRP X0, 0x5CA000
	0x03B291C0 LDR X0, [X0 + 0x5A8]
	0x03B291C4 BL 0x1C16CF4
	0x03B291C8 MOVZ W8, 0x1
	0x03B291CC STRB W8, [X23 + 0x785]
	0x03B291D0 LDR X0, [X22]
	0x03B291D4 LDR W8, [X0 + 0xE0]
	0x03B291D8 CBNZ W8, 0x3B291E0
	0x03B291DC BL 0x1C16DFC
	0x03B291E0 FCMP S8, S10
	0x03B291E4 B.LE 0x3B29294
	0x03B291E8 LDR V0, [X31 + 0x7C]
	0x03B291EC FDIV S11, S14, S8
	0x03B291F0 FDIV S13, S13, S8
	0x03B291F4 FDIV S12, S0, S8
	0x03B291F8 B 0x3B292C0
	0x03B291FC ADRP X24, 0x8AF000
	0x03B29200 LDRB W8, [X24 + 0x783]
	0x03B29204 CBNZ W8, 0x3B2921C
	0x03B29208 ADRP X0, 0x5CA000
	0x03B2920C LDR X0, [X0 + 0x5A0]
	0x03B29210 BL 0x1C16CF4
	0x03B29214 MOVZ W8, 0x1
	0x03B29218 STRB W8, [X24 + 0x783]
	0x03B2921C ADRP X8, 0x5CA000
	0x03B29220 LDR X8, [X8 + 0x5A0]
	0x03B29224 LDR X8, [X8]
	0x03B29228 LDR X8, [X8 + 0xB8]
	0x03B2922C LDP S11, S12, [X8]
	0x03B29230 LDR V13, [X8 + 0x8]
	0x03B29234 LDRB W8, [X23 + 0x785]
	0x03B29238 CBNZ W8, 0x3B29250
	0x03B2923C ADRP X0, 0x5CA000
	0x03B29240 LDR X0, [X0 + 0x5A8]
	0x03B29244 BL 0x1C16CF4
	0x03B29248 MOVZ W8, 0x1
	0x03B2924C STRB W8, [X23 + 0x785]
	0x03B29250 LDR X0, [X22]
	0x03B29254 LDR W8, [X0 + 0xE0]
	0x03B29258 CBNZ W8, 0x3B29260
	0x03B2925C BL 0x1C16DFC
	0x03B29260 LDP S3, S2, [X31 + 0x38]
	0x03B29264 FMUL S0, S3, S3
	0x03B29268 FMUL S1, S2, S2
	0x03B2926C FADD S0, S0, S1
	0x03B29270 FMUL S1, S15, S15
	0x03B29274 FADD S0, S1, S0
	0x03B29278 FSQRT S0, S0
	0x03B2927C FCMP S0, S10
	0x03B29280 B.LE 0x3B29320
	0x03B29284 FDIV S10, S3, S0
	0x03B29288 FDIV S14, S2, S0
	0x03B2928C FDIV S15, S15, S0
	0x03B29290 B 0x3B29358
	0x03B29294 LDRB W8, [X25 + 0x783]
	0x03B29298 CBNZ W8, 0x3B292B0
	0x03B2929C ADRP X0, 0x5CA000
	0x03B292A0 LDR X0, [X0 + 0x5A0]
	0x03B292A4 BL 0x1C16CF4
	0x03B292A8 MOVZ W8, 0x1
	0x03B292AC STRB W8, [X25 + 0x783]
	0x03B292B0 LDR X8, [X24]
	0x03B292B4 LDR X8, [X8 + 0xB8]
	0x03B292B8 LDP S11, S12, [X8]
	0x03B292BC LDR V13, [X8 + 0x8]
	0x03B292C0 LDRB W8, [X23 + 0x785]
	0x03B292C4 CBNZ W8, 0x3B292DC
	0x03B292C8 ADRP X0, 0x5CA000
	0x03B292CC LDR X0, [X0 + 0x5A8]
	0x03B292D0 BL 0x1C16CF4
	0x03B292D4 MOVZ W8, 0x1
	0x03B292D8 STRB W8, [X23 + 0x785]
	0x03B292DC LDR X0, [X22]
	0x03B292E0 LDR W8, [X0 + 0xE0]
	0x03B292E4 CBNZ W8, 0x3B292EC
	0x03B292E8 BL 0x1C16DFC
	0x03B292EC LDP S3, S2, [X31 + 0x38]
	0x03B292F0 FMUL S0, S3, S3
	0x03B292F4 FMUL S1, S2, S2
	0x03B292F8 FADD S0, S0, S1
	0x03B292FC FMUL S1, S15, S15
	0x03B29300 FADD S0, S1, S0
	0x03B29304 FSQRT S0, S0
	0x03B29308 FCMP S0, S10
	0x03B2930C B.LE 0x3B293CC
	0x03B29310 FDIV S10, S3, S0
	0x03B29314 FDIV S14, S2, S0
	0x03B29318 FDIV S15, S15, S0
	0x03B2931C B 0x3B293F8
	0x03B29320 ADRP X23, 0x8AF000
	0x03B29324 LDRB W8, [X23 + 0x783]
	0x03B29328 CBNZ W8, 0x3B29340
	0x03B2932C ADRP X0, 0x5CA000
	0x03B29330 LDR X0, [X0 + 0x5A0]
	0x03B29334 BL 0x1C16CF4
	0x03B29338 MOVZ W8, 0x1
	0x03B2933C STRB W8, [X23 + 0x783]
	0x03B29340 ADRP X8, 0x5CA000
	0x03B29344 LDR X8, [X8 + 0x5A0]
	0x03B29348 LDR X8, [X8]
	0x03B2934C LDR X8, [X8 + 0xB8]
	0x03B29350 LDP S10, S14, [X8]
	0x03B29354 LDR V15, [X8 + 0x8]
	0x03B29358 FCMP S9, 0x0
	0x03B2935C B.LE 0x3B28F50
	0x03B29360 ADRP X23, 0x8AF000
	0x03B29364 LDRB W8, [X23 + 0x784]
	0x03B29368 CBNZ W8, 0x3B29380
	0x03B2936C ADRP X0, 0x5CA000
	0x03B29370 LDR X0, [X0 + 0x5A8]
	0x03B29374 BL 0x1C16CF4
	0x03B29378 MOVZ W8, 0x1
	0x03B2937C STRB W8, [X23 + 0x784]
	0x03B29380 LDR X0, [X22]
	0x03B29384 LDR W8, [X0 + 0xE0]
	0x03B29388 CBNZ W8, 0x3B29390
	0x03B2938C BL 0x1C16DFC
	0x03B29390 FCMP S9, S8
	0x03B29394 B.PL 0x3B28F50
	0x03B29398 LDR V6, [X31 + 0x88]
	0x03B2939C FMUL S0, S9, S11
	0x03B293A0 FMUL S1, S9, S12
	0x03B293A4 FMUL S2, S9, S13
	0x03B293A8 FADD S0, S6, S0
	0x03B293AC LDR V6, [X31 + 0x8C]
	0x03B293B0 FMUL S3, S9, S10
	0x03B293B4 FMUL S4, S9, S14
	0x03B293B8 FMUL S5, S9, S15
	0x03B293BC FADD S1, S6, S1
	0x03B293C0 LDR V6, [X31 + 0x84]
	0x03B293C4 FADD S2, S6, S2
	0x03B293C8 B 0x3B29468
	0x03B293CC LDRB W8, [X25 + 0x783]
	0x03B293D0 CBNZ W8, 0x3B293E8
	0x03B293D4 ADRP X0, 0x5CA000
	0x03B293D8 LDR X0, [X0 + 0x5A0]
	0x03B293DC BL 0x1C16CF4
	0x03B293E0 MOVZ W8, 0x1
	0x03B293E4 STRB W8, [X25 + 0x783]
	0x03B293E8 LDR X8, [X24]
	0x03B293EC LDR X8, [X8 + 0xB8]
	0x03B293F0 LDP S10, S14, [X8]
	0x03B293F4 LDR V15, [X8 + 0x8]
	0x03B293F8 FCMP S9, 0x0
	0x03B293FC B.LE 0x3B28F50
	0x03B29400 ADRP X23, 0x8AF000
	0x03B29404 LDRB W8, [X23 + 0x784]
	0x03B29408 CBNZ W8, 0x3B29420
	0x03B2940C ADRP X0, 0x5CA000
	0x03B29410 LDR X0, [X0 + 0x5A8]
	0x03B29414 BL 0x1C16CF4
	0x03B29418 MOVZ W8, 0x1
	0x03B2941C STRB W8, [X23 + 0x784]
	0x03B29420 LDR X0, [X22]
	0x03B29424 LDR W8, [X0 + 0xE0]
	0x03B29428 CBNZ W8, 0x3B29430
	0x03B2942C BL 0x1C16DFC
	0x03B29430 FCMP S9, S8
	0x03B29434 B.PL 0x3B28F50
	0x03B29438 LDR V6, [X31 + 0x74]
	0x03B2943C FMUL S0, S9, S11
	0x03B29440 FMUL S1, S9, S12
	0x03B29444 FMUL S2, S9, S13
	0x03B29448 FSUB S0, S6, S0
	0x03B2944C LDR V6, [X31 + 0x78]
	0x03B29450 FMUL S3, S9, S10
	0x03B29454 FMUL S4, S9, S14
	0x03B29458 FMUL S5, S9, S15
	0x03B2945C FSUB S1, S6, S1
	0x03B29460 LDR V6, [X31 + 0x6C]
	0x03B29464 FSUB S2, S6, S2
	0x03B29468 LDR V6, [X31 + 0x68]
	0x03B2946C STP S0, S1, [X20]
	0x03B29470 STR S2, [X20 + 0x8]
	0x03B29474 FSUB S3, S6, S3
	0x03B29478 LDR V6, [X31 + 0x60]
	0x03B2947C FSUB S4, S6, S4
	0x03B29480 LDR V6, [X31 + 0x64]
	0x03B29484 STP S3, S4, [X19]
	0x03B29488 FSUB S5, S6, S5

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+160], D15
	003 Move [X31+168], D14
	004 Move [X31+176], D13
	005 Move [X31+184], D12
	006 Move [X31+192], D11
	007 Move [X31+200], D10
	008 Move [X31+208], D9
	009 Move [X31+216], D8
	010 Move [X31+224], X29
	011 Move [X31+232], X30
	012 Move [X31+240], X26
	013 Move [X31+248], X25
	014 Move [X31+256], X24
	015 Move [X31+264], X23
	016 Move [X31+272], X22
	017 Move [X31+280], X21
	018 Move [X31+288], X20
	019 Move [X31+296], X19
	020 Move X20, 0x8BB000
	021 Move W8, [X20+1912]
	022 Move V8, V2
	023 Move V12, V1
	024 Move V13, V0
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x632000
	031 Move X0, [X0+3352]
	032 Call 0x1C17CF4
	033 Move X0, 0x632000
	034 Move X0, [X0+3360]
	035 Call 0x1C17CF4
	036 Move X0, 0x632000
	037 Move X0, [X0+3368]
	038 Call 0x1C17CF4
	039 Move X0, 0x632000
	040 Move X0, [X0+3344]
	041 Call 0x1C17CF4
	042 Move X0, 0x632000
	043 Move X0, [X0+3376]
	044 Call 0x1C17CF4
	045 Move X0, 0x5D0000
	046 Move X0, [X0+2424]
	047 Call 0x1C17CF4
	048 Move X0, 0x5D0000
	049 Move X0, [X0+2432]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1912], W8
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Move [X31+120], X31
	055 Move [X31+128], V0
	056 Move [X31+136], V0
	057 Compare X19, 0
	058 JumpIfEqual {341}
	059 Move W24, [X19+24]
	060 Move X22, 0x5CC000
	061 Move X22, [X22+1440]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X31+40], S8
	064 Move X23, 0x5CF000
	065 Move X23, [X23+2432]
	066 Move X0, X19
	067 Move W1, W31
	068 Move X2, [X23]
	069 Call List`1<Vector3>.get_Item, X0, X1
	070 Move X2, [X23]
	071 Move W1, 1
	072 Move X0, X19
	073 Move V9, V0
	074 Move V10, V1
	075 Move V11, V2
	076 Move W20, 1
	077 Call List`1<Vector3>.get_Item, X0, X1
	078 Move X2, [X23]
	079 Move W1, 2
	080 Move X0, X19
	081 Move V8, V0
	082 Move V14, V1
	083 Move V15, V2
	084 Call List`1<Vector3>.get_Item, X0, X1
	085 Move X21, 0x8B0000
	086 Move W8, [X21+1925]
	087 Subtract S3, S8, S9
	088 Subtract S4, S14, S10
	089 Subtract S5, S15, S11
	090 Subtract S0, S0, S9
	091 Subtract S1, S1, S10
	092 Subtract S2, S2, S11
	093 Move [X31+56], S10
	094 Move [X31+64], S9
	095 Move [X31+52], S11
	096 Multiply S8, S4, S2
	097 Multiply S9, S5, S1
	098 Multiply S10, S5, S0
	099 Multiply S14, S3, S2
	100 Multiply S15, S3, S1
	101 Multiply S11, S4, S0
	102 Compare W8, 0
	103 JumpIfNotEqual {108}
	104 Move X0, 0x5CB000
	105 Move X0, [X0+1448]
	106 Call 0x1C17CF4
	107 Move [X21+1925], W20
	108 Move X8, 0x5CB000
	109 Move X8, [X8+1448]
	110 Subtract S8, S8, S9
	111 Subtract S9, S10, S14
	112 Subtract S10, S15, S11
	113 Move X0, [X8]
	114 Move W8, [X0+224]
	115 Compare W8, 0
	116 JumpIfNotEqual {118}
	117 Call 0x1C17DFC
	118 Multiply S0, S8, S8
	119 Multiply S1, S9, S9
	120 Move X8, -50585600
	121 Add S0, S0, S1
	122 Move V1, [X8+380]
	123 Multiply S2, S10, S10
	124 Add S0, S2, S0
	125 NotImplemented "Instruction FSQRT not yet implemented."
	126 Move X20, 0x8B0000
	127 NotImplemented "Instruction FCMP not yet implemented."
	128 Move W8, [X20+1923]
	129 NotImplemented "Instruction FDIV not yet implemented."
	130 NotImplemented "Instruction FDIV not yet implemented."
	131 NotImplemented "Instruction FDIV not yet implemented."
	132 Compare W8, 0
	133 JumpIfNotEqual {152}
	134 Move X0, 0x5CB000
	135 Move X0, [X0+1440]
	136 Call 0x1C17CF4
	137 Move W8, 1
	138 Move [X20+1923], W8
	139 Move W8, [X20+1923]
	140 Compare W8, 0
	141 JumpIfNotEqual {147}
	142 Move X0, 0x5CB000
	143 Move X0, [X0+1440]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X20+1923], W8
	147 Move X8, [X22]
	148 Move X8, [X8+184]
	149 Move S15, [X8]
	150 Move S14, [X8+4]
	151 Move V8, [X8+8]
	152 Move X8, [X22]
	153 Move X9, 0x631000
	154 Move X0, X19
	155 Move X8, [X8+184]
	156 Move X9, [X9+3376]
	157 Move V10, [X8]
	158 Move X1, [X9]
	159 Move V9, [X8+8]
	160 Add X8, X31, 88
	161 Call List`1<Vector3>.GetEnumerator, X0
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 Move X20, 0x631000
	165 Move [X31+128], V0
	166 Move [X31+136], V1
	167 Move X20, [X20+3360]
	168 Move X1, [X20]
	169 Add X0, X31, 128
	170 Call Enumerator<Vector3>.MoveNext, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {179}
	175 Move V0, [X31+144]
	176 Move V1, [X31+152]
	177 Add V10, V10, V0
	178 Add S9, S9, S1
	179 Move X8, 0x631000
	180 Move X8, [X8+3352]
	181 Add X0, X31, 128
	182 Move X1, [X8]
	183 Call Enumerator<Vector3>.Dispose, X0
	184 Move X20, 0x8B0000
	185 NotImplemented "Instruction SCVTF not yet implemented."
	186 Move S1, 1
	187 Move W8, [X20+3641]
	188 NotImplemented "Instruction FDIV not yet implemented."
	189 NotImplemented "Instruction INVALID not yet implemented."
	190 Multiply S9, S0, S9
	191 Move S10, V1.S[1]
	192 Move [X31+4], V1
	193 Compare W8, 0
	194 JumpIfNotEqual {201}
	195 Move X0, 0x5D2000
	196 Move X0, [X0+1208]
	197 Call 0x1C17CF4
	198 Move V1, [X31+4]
	199 Move W8, 1
	200 Move [X20+3641], W8
	201 Move X8, 0x5D2000
	202 Move X8, [X8+1208]
	203 Multiply S2, S15, S15
	204 Multiply S3, S14, S14
	205 Add S2, S2, S3
	206 Move X8, [X8]
	207 Multiply S3, S8, S8
	208 Add S3, S3, S2
	209 Move V2, [X31+40]
	210 Move X8, [X8+184]
	211 Subtract S0, S13, S1
	212 Subtract S1, S12, S10
	213 Subtract S2, S2, S9
	214 Move V4, [X8]
	215 Move [X31+44], S10
	216 Move [X31+52], S9
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 Multiply S4, S15, S0
	219 Multiply S5, S14, S1
	220 Multiply S6, S8, S2
	221 Add S4, S4, S5
	222 Add S4, S6, S4
	223 Multiply S5, S15, S4
	224 Multiply S6, S14, S4
	225 Multiply S4, S8, S4
	226 NotImplemented "Instruction FDIV not yet implemented."
	227 NotImplemented "Instruction FDIV not yet implemented."
	228 NotImplemented "Instruction FDIV not yet implemented."
	229 Subtract S0, S0, S5
	230 Subtract S1, S1, S6
	231 Subtract S2, S2, S3
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X25, 0x631000
	234 Move X25, [X25+3344]
	235 Move W8, 0xC2C80000
	236 Move S3, W8
	237 Subtract W21, W31, W24
	238 Move W24, 1
	239 Multiply S0, S0, S3
	240 Multiply S10, S1, S3
	241 Multiply S9, S2, S3
	242 Move W20, 1
	243 Move [X31+40], S0
	244 Move X2, [X23]
	245 Subtract W1, W20, 1
	246 Move X0, X19
	247 Add W26, W21, W20
	248 Call List`1<Vector3>.get_Item, X0, X1
	249 Move S8, [X31+52]
	250 Move S15, [X31+56]
	251 Move V14, [X31+60]
	252 Move V11, V0
	253 Move V12, V1
	254 Move V13, V2
	255 Compare W26, 0
	256 JumpIfEqual {264}
	257 Move X2, [X23]
	258 Move X0, X19
	259 Move W1, W20
	260 Call List`1<Vector3>.get_Item, X0, X1
	261 Move V14, V0
	262 Move V15, V1
	263 Move V8, V2
	264 Move X0, [X25]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move V0, [X31+40]
	270 Move V1, [X31+44]
	271 Subtract S14, S14, S11
	272 Subtract S15, S15, S12
	273 Move [X31+16], S0
	274 Move [X31+24], S10
	275 Move V0, [X31+4]
	276 Subtract S8, S8, S13
	277 Add X0, X31, 124
	278 Add X1, X31, 120
	279 Move [X31], S0
	280 Move [X31+8], S1
	281 Move V0, [X31+48]
	282 Move V1, V12
	283 Move V2, V13
	284 Move V3, V14
	285 Move [X31+8], S0
	286 Move V0, V11
	287 Move V4, V15
	288 Move V5, V8
	289 Move [X31+32], X24
	290 Move [X31+24], S9
	291 Call GeometryUtils.ClosestTimesOnTwoLines, X0, X1, X2, X3, X4, X5, V0
	292 Move V0, [X31+124]
	293 Move S1, 1
	294 NotImplemented "Instruction FCMP not yet implemented."
	295 Move V1, [X31+120]
	296 NotImplemented "Instruction FCMP not yet implemented."
	297 NotImplemented "Instruction FCMP not yet implemented."
	298 Add W20, W20, 1
	299 Add W8, W21, W20
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X19, 0x8B0000
	302 Move W8, [X19+1923]
	303 Compare W8, 0
	304 JumpIfNotEqual {310}
	305 Move X0, 0x5CB000
	306 Move X0, [X0+1440]
	307 Call 0x1C17CF4
	308 Move W8, 1
	309 Move [X19+1923], W8
	310 Move X8, [X22]
	311 Move X8, [X8+184]
	312 Move S0, [X8]
	313 Move S1, [X8+4]
	314 Move V2, [X8+8]
	315 Move X20, [X31+288]
	316 Move X19, [X31+296]
	317 Move X22, [X31+272]
	318 Move X21, [X31+280]
	319 Move X24, [X31+256]
	320 Move X23, [X31+264]
	321 Move X26, [X31+240]
	322 Move X25, [X31+248]
	323 Move X29, [X31+224]
	324 Move X30, [X31+232]
	325 Move D9, [X31+208]
	326 Move D8, [X31+216]
	327 Move D11, [X31+192]
	328 Move D10, [X31+200]
	329 Move D13, [X31+176]
	330 Move D12, [X31+184]
	331 Move D15, [X31+160]
	332 Move D14, [X31+168]
	333 Add X31, X31, 304
	334 Return X0
	335 Multiply S1, S14, S0
	336 Multiply S2, S15, S0
	337 Multiply S3, S8, S0
	338 Add S0, S11, S1
	339 Add S1, S12, S2
	340 Add S2, S13, S3
	341 Call 0x1C17F20
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move X21, X0
	344 Move X0, X21
	345 Call 0x3EB2AD0
	346 Move X20, [X0]
	347 Call 0x3EB2AE0
	348 Move X8, 0x631000
	349 Move X8, [X8+3352]
	350 Add X0, X31, 128
	351 Move X1, [X8]
	352 Call Enumerator<Vector3>.Dispose, X0
	353 Compare X20, 0
	354 JumpIfEqual {184}
	355 Move X0, X20
	356 Call 0x1C17F18
	357 Move X20, X31
	358 Move X21, X0
	359 Move X8, 0x631000
	360 Move X8, [X8+3352]
	361 Move X1, [X8]
	362 Add X0, X31, 128
	363 Call Enumerator<Vector3>.Dispose, X0
	364 Compare X20, 0
	365 JumpIfNotEqual {368}
	366 Move X0, X21
	367 Call 0x1D2D690
	368 Move X0, X20
	369 Call 0x1C17F18
	370 Call 0x1991590

Method: System.Void TriangulatePolygon(System.Collections.Generic.List`1<System.Int32> indices, System.Int32 vertCount, System.Boolean reverse = False)

Disassembly:
	0x03B29634 ADD W26, W29, W25
	0x03B29638 BL 0x30CBE84
	0x03B2963C LDP S10, S9, [X31 + 0x64]
	0x03B29640 LDR V11, [X31 + 0x60]
	0x03B29644 MOV V14.16B, V0.16B
	0x03B29648 MOV V15.16B, V1.16B
	0x03B2964C MOV V13.16B, V2.16B
	0x03B29650 CBZ W26, 0x3B29670
	0x03B29654 LDR X2, [X27]
	0x03B29658 MOV X0, X21
	0x03B2965C MOV W1, W25
	0x03B29660 BL 0x30CBE84
	0x03B29664 MOV V9.16B, V0.16B
	0x03B29668 MOV V10.16B, V1.16B
	0x03B2966C MOV V11.16B, V2.16B
	0x03B29670 LDR X0, [X28]
	0x03B29674 LDR W8, [X0 + 0xE0]
	0x03B29678 CBNZ W8, 0x3B29680
	0x03B2967C BL 0x1C16DFC
	0x03B29680 FSUB S0, S9, S14
	0x03B29684 FSUB S1, S10, S15
	0x03B29688 FSUB S2, S11, S13
	0x03B2968C LDR V3, [X31 + 0x58]
	0x03B29690 STP S1, S2, [X31 + 0x14]
	0x03B29694 STR S0, [X31 + 0x10]
	0x03B29698 LDP S1, S0, [X31 + 0x78]
	0x03B2969C LDP S5, S2, [X31 + 0x70]
	0x03B296A0 LDR V4, [X31 + 0x6C]
	0x03B296A4 STR D3, [X31 + 0x20]
	0x03B296A8 ADD X0, X31, 0x90
	0x03B296AC ADD X1, X31, 0x80
	0x03B296B0 MOV V3.16B, V12.16B
	0x03B296B4 STP S14, S15, [X31]
	0x03B296B8 STR S13, [X31 + 0x8]
	0x03B296BC BL 0x3B28A84
	0x03B296C0 LDP S11, S10, [X31 + 0x90]
	0x03B296C4 LDR V9, [X31 + 0x98]
	0x03B296C8 LDP S13, S14, [X31 + 0x80]
	0x03B296CC LDRB W8, [X22 + 0x85C]
	0x03B296D0 LDR V15, [X31 + 0x88]
	0x03B296D4 MOV W26, W0
	0x03B296D8 CBNZ W8, 0x3B296EC
	0x03B296DC MOV X0, X24
	0x03B296E0 BL 0x1C16CF4
	0x03B296E4 MOVZ W8, 0x1
	0x03B296E8 STRB W8, [X22 + 0x85C]
	0x03B296EC LDR X0, [X24]
	0x03B296F0 LDR W8, [X0 + 0xE0]
	0x03B296F4 CBNZ W8, 0x3B296FC
	0x03B296F8 BL 0x1C16DFC
	0x03B296FC FSUB S0, S11, S13
	0x03B29700 FSUB S1, S10, S14
	0x03B29704 FSUB S2, S9, S15
	0x03B29708 FMUL S0, S0, S0
	0x03B2970C FMUL S1, S1, S1
	0x03B29710 FADD S0, S0, S1
	0x03B29714 FMUL S1, S2, S2
	0x03B29718 FADD S0, S1, S0
	0x03B2971C FSQRT S0, S0
	0x03B29720 TBZ X26, 0x0, 0x3B29758
	0x03B29724 LDR V2, [X31 + 0x54]
	0x03B29728 FSUB S1, S0, S8
	0x03B2972C FCMP S1, S2
	0x03B29730 B.PL 0x3B29784
	0x03B29734 LDR W8, [X31 + 0x98]
	0x03B29738 LDR X9, [X31 + 0x90]
	0x03B2973C LDR V1, [X31 + 0x54]
	0x03B29740 STR W8, [X20 + 0x8]
	0x03B29744 STR X9, [X20]
	0x03B29748 LDR W8, [X31 + 0x88]
	0x03B2974C LDR X9, [X31 + 0x80]
	0x03B29750 FSUB S8, S0, S1
	0x03B29754 B 0x3B2977C
	0x03B29758 FCMP S0, S8
	0x03B2975C B.PL 0x3B29784
	0x03B29760 LDR W8, [X31 + 0x98]
	0x03B29764 LDR X9, [X31 + 0x90]
	0x03B29768 MOV V8.16B, V0.16B
	0x03B2976C STR W8, [X20 + 0x8]
	0x03B29770 STR X9, [X20]
	0x03B29774 LDR W8, [X31 + 0x88]
	0x03B29778 LDR X9, [X31 + 0x80]
	0x03B2977C STR W8, [X19 + 0x8]
	0x03B29780 STR X9, [X19]
	0x03B29784 ADD W25, W25, 0x1
	0x03B29788 ADD W8, W29, W25
	0x03B2978C CMP W8, 0x1
	0x03B29790 B.NE 0x3B29628
	0x03B29794 LDR W8, [X31 + 0x40]
	0x03B29798 ADD W23, W23, 0x1
	0x03B2979C CMP W23, W8
	0x03B297A0 B.NE 0x3B295C0
	0x03B297A4 LDP X20, X19, [X31 + 0x130]
	0x03B297A8 LDP X22, X21, [X31 + 0x120]
	0x03B297AC LDP X24, X23, [X31 + 0x110]
	0x03B297B0 LDP X26, X25, [X31 + 0x100]
	0x03B297B4 LDP X28, X27, [X31 + 0xF0]
	0x03B297B8 LDP X29, X30, [X31 + 0xE0]
	0x03B297BC LDP D9, D8, [X31 + 0xD0]
	0x03B297C0 LDP D11, D10, [X31 + 0xC0]
	0x03B297C4 LDP D13, D12, [X31 + 0xB0]
	0x03B297C8 LDP D15, D14, [X31 + 0xA0]
	0x03B297CC ADD X31, X31, 0x140
	0x03B297D0 RET
	0x03B297D4 BL 0x1C16F20
	0x03B297D8 STP D15, D14, [X31 - 0x90]!
	0x03B297DC STP D13, D12, [X31 + 0x10]
	0x03B297E0 STP D11, D10, [X31 + 0x20]
	0x03B297E4 STP D9, D8, [X31 + 0x30]
	0x03B297E8 STR X30, [X31 + 0x40]
	0x03B297EC STP X26, X25, [X31 + 0x50]
	0x03B297F0 STP X24, X23, [X31 + 0x60]
	0x03B297F4 STP X22, X21, [X31 + 0x70]
	0x03B297F8 STP X20, X19, [X31 + 0x80]
	0x03B297FC ADRP X20, 0x8B9000
	0x03B29800 LDRB W8, [X20 + 0x77E]
	0x03B29804 MOV X19, X0
	0x03B29808 MOV V8.16B, V2.16B
	0x03B2980C MOV V9.16B, V0.16B
	0x03B29810 TBNZ X8, 0x0, 0x3B29840
	0x03B29814 ADRP X0, 0x5CE000
	0x03B29818 LDR X0, [X0 + 0x978]
	0x03B2981C BL 0x1C16CF4
	0x03B29820 ADRP X0, 0x5CE000
	0x03B29824 LDR X0, [X0 + 0x980]
	0x03B29828 BL 0x1C16CF4
	0x03B2982C ADRP X0, 0x630000
	0x03B29830 LDR X0, [X0 + 0xD40]
	0x03B29834 BL 0x1C16CF4
	0x03B29838 MOVZ W8, 0x1
	0x03B2983C STRB W8, [X20 + 0x77E]
	0x03B29840 CBZ X19, 0x3B29B80
	0x03B29844 LDR W8, [X19 + 0x18]
	0x03B29848 CMP W8, 0x3
	0x03B2984C B.LT 0x3B29974
	0x03B29850 ADRP X22, 0x5CE000
	0x03B29854 LDR X22, [X22 + 0x980]
	0x03B29858 SUB W1, W8, 0x1
	0x03B2985C MOV X0, X19
	0x03B29860 LDR X2, [X22]
	0x03B29864 BL 0x30CBE84
	0x03B29868 ADRP X20, 0x630000
	0x03B2986C LDR X20, [X20 + 0xD40]
	0x03B29870 MOV V11.16B, V0.16B
	0x03B29874 MOV V10.16B, V1.16B
	0x03B29878 MOV V12.16B, V2.16B
	0x03B2987C LDR X0, [X20]
	0x03B29880 LDR W8, [X0 + 0xE0]
	0x03B29884 CBNZ W8, 0x3B2988C
	0x03B29888 BL 0x1C16DFC
	0x03B2988C ADRP X23, 0x8B9000
	0x03B29890 LDRB W8, [X23 + 0x7E3]
	0x03B29894 CBNZ W8, 0x3B298AC
	0x03B29898 ADRP X0, 0x630000
	0x03B2989C LDR X0, [X0 + 0xD40]
	0x03B298A0 BL 0x1C16CF4
	0x03B298A4 MOVZ W8, 0x1
	0x03B298A8 STRB W8, [X23 + 0x7E3]
	0x03B298AC LDR X0, [X20]
	0x03B298B0 FSUB S13, S12, S8
	0x03B298B4 LDR W8, [X0 + 0xE0]
	0x03B298B8 CBNZ W8, 0x3B298C4
	0x03B298BC BL 0x1C16DFC
	0x03B298C0 LDR X0, [X20]
	0x03B298C4 LDR X8, [X0 + 0xB8]
	0x03B298C8 FNEG S1, S13
	0x03B298CC FCMP S13, 0x0
	0x03B298D0 FCSEL S1, S1, S13, LT
	0x03B298D4 LDR V0, [X8]
	0x03B298D8 FCMP S1, S0
	0x03B298DC B.PL 0x3B2997C
	0x03B298E0 LDR W8, [X19 + 0x18]
	0x03B298E4 CMP W8, 0x2
	0x03B298E8 B.MI 0x3B29984
	0x03B298EC SUB W21, W8, 0x1
	0x03B298F0 MOVZ W24, 0x1
	0x03B298F4 LDR X2, [X22]
	0x03B298F8 SUB W21, W21, 0x1
	0x03B298FC MOV X0, X19
	0x03B29900 MOV W1, W21
	0x03B29904 BL 0x30CBE84
	0x03B29908 LDR X0, [X20]
	0x03B2990C MOV V12.16B, V2.16B
	0x03B29910 LDR W8, [X0 + 0xE0]
	0x03B29914 CBNZ W8, 0x3B2991C
	0x03B29918 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x8BA000
	008 Move X22, 0x631000
	009 Move W8, [X23+1913]
	010 Move X22, [X22+3384]
	011 Move W21, W2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x631000
	019 Move X0, [X0+3384]
	020 Call 0x1C17CF4
	021 Move X0, 0x5CC000
	022 Move X0, [X0+3600]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1913], W8
	026 Move X2, [X22]
	027 Subtract W22, W19, 2
	028 Add W1, W22, W22
	029 Move X0, X20
	030 Call 0x2213EA8, X0, X1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move TEMP, X21
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 Invalid "Jump target not found in method."
	036 Compare X20, 0
	037 JumpIfEqual {189}
	038 Move X22, 0x5CC000
	039 Move X22, [X22+3600]
	040 Move W21, 2
	041 Move W10, [X20+28]
	042 Move X8, [X20+16]
	043 Move X9, [X22]
	044 Add W10, W10, 1
	045 Move [X20+28], W10
	046 Compare X8, 0
	047 JumpIfEqual {189}
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Move W11, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add W11, W10, 1
	052 Add X10, X8, X10
	053 Move [X20+24], W11
	054 Move [X10+32], W31
	055 Move W10, [X20+28]
	056 Add W10, W10, 1
	057 Move [X20+28], W10
	058 Move X8, [X9+32]
	059 Move X0, X20
	060 Move W1, W31
	061 Move X8, [X8+192]
	062 Move X2, [X8+112]
	063 Call List`1<Int32>.AddWithResize, X0, X1
	064 Move W10, [X20+28]
	065 Move X8, [X20+16]
	066 Move X9, [X22]
	067 Add W10, W10, 1
	068 Move [X20+28], W10
	069 Compare X8, 0
	070 JumpIfEqual {189}
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Move W11, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add W11, W10, 1
	075 Add X10, X8, X10
	076 Move [X20+24], W11
	077 Move [X10+32], W21
	078 Move W10, [X20+28]
	079 Add W10, W10, 1
	080 Move [X20+28], W10
	081 Move X8, [X9+32]
	082 Move X0, X20
	083 Move W1, W21
	084 Move X8, [X8+192]
	085 Move X2, [X8+112]
	086 Call List`1<Int32>.AddWithResize, X0, X1
	087 Move W10, [X20+28]
	088 Move X8, [X20+16]
	089 Move X9, [X22]
	090 Add W10, W10, 1
	091 Move [X20+28], W10
	092 Compare X8, 0
	093 JumpIfEqual {189}
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Move W11, [X8+24]
	096 Subtract W1, W21, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W9, W10, 1
	099 Add X8, X8, X10
	100 Move [X20+24], W9
	101 Move [X8+32], W1
	102 Move X8, [X9+32]
	103 Move X0, X20
	104 Move X8, [X8+192]
	105 Move X2, [X8+112]
	106 Call List`1<Int32>.AddWithResize, X0, X1
	107 Add W21, W21, 1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Compare X20, 0
	110 JumpIfEqual {189}
	111 Move X22, 0x5CC000
	112 Move X22, [X22+3600]
	113 Move W21, 2
	114 Move W10, [X20+28]
	115 Move X8, [X20+16]
	116 Move X9, [X22]
	117 Add W10, W10, 1
	118 Move [X20+28], W10
	119 Compare X8, 0
	120 JumpIfEqual {189}
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Move W11, [X8+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W11, W10, 1
	125 Add X10, X8, X10
	126 Move [X20+24], W11
	127 Move [X10+32], W31
	128 Move W10, [X20+28]
	129 Add W10, W10, 1
	130 Move [X20+28], W10
	131 Move X8, [X9+32]
	132 Move X0, X20
	133 Move W1, W31
	134 Move X8, [X8+192]
	135 Move X2, [X8+112]
	136 Call List`1<Int32>.AddWithResize, X0, X1
	137 Move W10, [X20+28]
	138 Move X8, [X20+16]
	139 Move X9, [X22]
	140 Add W10, W10, 1
	141 Move [X20+28], W10
	142 Compare X8, 0
	143 JumpIfEqual {189}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Move W11, [X8+24]
	146 Subtract W1, W21, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Add W11, W10, 1
	149 Add X10, X8, X10
	150 Move [X20+24], W11
	151 Move [X10+32], W1
	152 Move W10, [X20+28]
	153 Add W10, W10, 1
	154 Move [X20+28], W10
	155 Move X8, [X9+32]
	156 Move X0, X20
	157 Move X8, [X8+192]
	158 Move X2, [X8+112]
	159 Call List`1<Int32>.AddWithResize, X0, X1
	160 Move W10, [X20+28]
	161 Move X8, [X20+16]
	162 Move X9, [X22]
	163 Add W10, W10, 1
	164 Move [X20+28], W10
	165 Compare X8, 0
	166 JumpIfEqual {189}
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Move W11, [X8+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Add W9, W10, 1
	171 Add X8, X8, X10
	172 Move [X20+24], W9
	173 Move [X8+32], W21
	174 Move X8, [X9+32]
	175 Move X0, X20
	176 Move W1, W21
	177 Move X8, [X8+192]
	178 Move X2, [X8+112]
	179 Call List`1<Int32>.AddWithResize, X0, X1
	180 Add W21, W21, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X20, [X31+32]
	183 Move X19, [X31+40]
	184 Move X22, [X31+16]
	185 Move X21, [X31+24]
	186 Move X30, [X31+48]
	187 Move X23, [X31+56]
	188 Return 
	189 Call 0x1C17F20

Method: System.Boolean ClosestTimesOnTwoLines(UnityEngine.Vector3 positionA, UnityEngine.Vector3 velocityA, UnityEngine.Vector3 positionB, UnityEngine.Vector3 velocityB, out System.Single s, out System.Single t, System.Double parallelTest = 5E-324)

Disassembly:
	0x03B2948C STR S5, [X19 + 0x8]
	0x03B29490 B 0x3B28F50
	0x03B29494 SUB X31, X31, 0x140
	0x03B29498 STP D15, D14, [X31 + 0xA0]
	0x03B2949C STP D13, D12, [X31 + 0xB0]
	0x03B294A0 STP D11, D10, [X31 + 0xC0]
	0x03B294A4 STP D9, D8, [X31 + 0xD0]
	0x03B294A8 STP X29, X30, [X31 + 0xE0]
	0x03B294AC STP X28, X27, [X31 + 0xF0]
	0x03B294B0 STP X26, X25, [X31 + 0x100]
	0x03B294B4 STP X24, X23, [X31 + 0x110]
	0x03B294B8 STP X22, X21, [X31 + 0x120]
	0x03B294BC STP X20, X19, [X31 + 0x130]
	0x03B294C0 ADRP X22, 0x8B9000
	0x03B294C4 LDRB W8, [X22 + 0x77D]
	0x03B294C8 MOV X19, X3
	0x03B294CC MOV X20, X2
	0x03B294D0 MOV X21, X1
	0x03B294D4 STR S0, [X31 + 0x54]
	0x03B294D8 STR X0, [X31 + 0x48]
	0x03B294DC TBNZ X8, 0x0, 0x3B2950C
	0x03B294E0 ADRP X0, 0x630000
	0x03B294E4 LDR X0, [X0 + 0xD10]
	0x03B294E8 BL 0x1C16CF4
	0x03B294EC ADRP X0, 0x5CE000
	0x03B294F0 LDR X0, [X0 + 0x978]
	0x03B294F4 BL 0x1C16CF4
	0x03B294F8 ADRP X0, 0x5CE000
	0x03B294FC LDR X0, [X0 + 0x980]
	0x03B29500 BL 0x1C16CF4
	0x03B29504 MOVZ W8, 0x1
	0x03B29508 STRB W8, [X22 + 0x77D]
	0x03B2950C LDR X8, [X31 + 0x48]
	0x03B29510 STR W31, [X31 + 0x98]
	0x03B29514 STR X31, [X31 + 0x90]
	0x03B29518 STR W31, [X31 + 0x88]
	0x03B2951C STR X31, [X31 + 0x80]
	0x03B29520 STR W31, [X20 + 0x8]
	0x03B29524 STR X31, [X20]
	0x03B29528 STR W31, [X19 + 0x8]
	0x03B2952C STR X31, [X19]
	0x03B29530 CBZ X8, 0x3B297D4
	0x03B29534 CBZ X21, 0x3B297D4
	0x03B29538 ADRP X27, 0x5CE000
	0x03B2953C LDR X27, [X27 + 0x980]
	0x03B29540 LDR X0, [X31 + 0x48]
	0x03B29544 LDR W8, [X21 + 0x18]
	0x03B29548 MOV W1, W31
	0x03B2954C LDR X2, [X27]
	0x03B29550 LDR W22, [X0 + 0x18]
	0x03B29554 STR W8, [X31 + 0x44]
	0x03B29558 BL 0x30CBE84
	0x03B2955C LDR X2, [X27]
	0x03B29560 MOV X0, X21
	0x03B29564 MOV W1, W31
	0x03B29568 STP S1, S0, [X31 + 0x38]
	0x03B2956C STR S2, [X31 + 0x34]
	0x03B29570 BL 0x30CBE84
	0x03B29574 SUBS W8, W22, 0x1
	0x03B29578 STP S1, S0, [X31 + 0x64]
	0x03B2957C STR W22, [X31 + 0x40]
	0x03B29580 STR W8, [X31 + 0x30]
	0x03B29584 STR S2, [X31 + 0x60]
	0x03B29588 B.LT 0x3B297A4
	0x03B2958C ADRP X28, 0x630000
	0x03B29590 LDR X28, [X28 + 0xD10]
	0x03B29594 LDR V0, [X31 + 0x54]
	0x03B29598 LDR W8, [X31 + 0x44]
	0x03B2959C ADRP X24, 0x5CA000
	0x03B295A0 MOV W23, W31
	0x03B295A4 FCVT S0, S0
	0x03B295A8 STR D0, [X31 + 0x58]
	0x03B295AC LDR X24, [X24 + 0x5A8]
	0x03B295B0 SUB W29, W31, W8
	0x03B295B4 MOVN W8, 0x80800000
	0x03B295B8 ADRP X22, 0x8AF000
	0x03B295BC FMOV S8, W8
	0x03B295C0 LDR X2, [X27]
	0x03B295C4 LDR X0, [X31 + 0x48]
	0x03B295C8 MOV W1, W23
	0x03B295CC BL 0x30CBE84
	0x03B295D0 LDR W8, [X31 + 0x30]
	0x03B295D4 STP S1, S0, [X31 + 0x78]
	0x03B295D8 STR S2, [X31 + 0x74]
	0x03B295DC LDP S1, S0, [X31 + 0x38]
	0x03B295E0 LDR V2, [X31 + 0x34]
	0x03B295E4 CMP W23, W8
	0x03B295E8 B.EQ 0x3B295FC
	0x03B295EC LDR X2, [X27]
	0x03B295F0 LDR X0, [X31 + 0x48]
	0x03B295F4 ADD W1, W23, 0x1
	0x03B295F8 BL 0x30CBE84
	0x03B295FC LDR W8, [X31 + 0x44]
	0x03B29600 CMP W8, 0x1
	0x03B29604 B.LT 0x3B29794
	0x03B29608 LDR V3, [X31 + 0x74]
	0x03B2960C MOVZ W25, 0x1
	0x03B29610 FSUB S4, S2, S3
	0x03B29614 LDR V2, [X31 + 0x78]
	0x03B29618 FSUB S1, S1, S2
	0x03B2961C STP S1, S4, [X31 + 0x6C]
	0x03B29620 LDR V1, [X31 + 0x7C]
	0x03B29624 FSUB S12, S0, S1
	0x03B29628 LDR X2, [X27]
	0x03B2962C SUB W1, W25, 0x1
	0x03B29630 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X22
	012 Move [X31+120], X21
	013 Move [X31+128], X20
	014 Move [X31+136], X19
	015 Move [X31+24], S1
	016 Move [X31+32], S2
	017 Move [X31+20], S0
	018 Move X22, 0x8BA000
	019 Move X21, 0x5CB000
	020 Move S11, [X31+164]
	021 Move S13, [X31+168]
	022 Move W8, [X22+1914]
	023 Move V12, [X31+160]
	024 Move X21, [X21+1448]
	025 Move X19, X1
	026 Move X20, X0
	027 Move V8, V5
	028 Move V9, V4
	029 Move V10, V3
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x5CB000
	035 Move X0, [X0+1448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+1914], W8
	039 Move X0, [X21]
	040 Multiply S0, S10, S10
	041 Multiply S1, S9, S9
	042 Multiply S3, S10, S12
	043 Multiply S4, S9, S11
	044 Multiply S2, S8, S8
	045 Add S0, S0, S1
	046 Multiply S1, S12, S12
	047 Add S3, S3, S4
	048 Multiply S4, S11, S11
	049 Add S1, S1, S4
	050 Multiply S4, S8, S13
	051 Add S0, S2, S0
	052 Multiply S2, S13, S13
	053 Move V7, [X31+176]
	054 Add S3, S4, S3
	055 NotImplemented "Instruction FCVT not yet implemented."
	056 Add S0, S2, S1
	057 Move W8, [X0+224]
	058 Move [X31+104], S13
	059 Move [X31+112], S8
	060 NotImplemented "Instruction FCVT not yet implemented."
	061 NotImplemented "Instruction FCVT not yet implemented."
	062 Multiply D0, D14, D15
	063 Multiply D1, D13, D13
	064 Subtract D8, D0, D1
	065 Compare W8, 0
	066 JumpIfNotEqual {70}
	067 Move [X31+8], D7
	068 Call 0x1C17DFC
	069 Move V7, [X31+8]
	070 NotImplemented "Instruction FABS not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move [X20], W31
	073 Move S1, W31
	074 Move S1, [X31+144]
	075 Move S2, [X31+148]
	076 Move V4, [X31+20]
	077 Move V3, [X31+152]
	078 Move S16, [X31+104]
	079 Move S6, [X31+108]
	080 Subtract S1, S4, S1
	081 Move V4, [X31+24]
	082 Subtract S2, S4, S2
	083 Move V4, [X31+28]
	084 Multiply S5, S9, S2
	085 Multiply S2, S11, S2
	086 Subtract S3, S4, S3
	087 Multiply S4, S10, S1
	088 Multiply S1, S12, S1
	089 Multiply S6, S6, S3
	090 Multiply S3, S16, S3
	091 Add S4, S4, S5
	092 Add S1, S1, S2
	093 Add S2, S6, S4
	094 Add S1, S3, S1
	095 NotImplemented "Instruction FCVT not yet implemented."
	096 NotImplemented "Instruction FCVT not yet implemented."
	097 Multiply D3, D13, D1
	098 Multiply D4, D2, D15
	099 Multiply D1, D14, D1
	100 Multiply D2, D2, D13
	101 Subtract D3, D3, D4
	102 Subtract D1, D1, D2
	103 NotImplemented "Instruction FDIV not yet implemented."
	104 NotImplemented "Instruction FDIV not yet implemented."
	105 NotImplemented "Instruction INVALID not yet implemented."
	106 NotImplemented "Instruction INVALID not yet implemented."
	107 Move [X20], S2
	108 Move [X19], S1
	109 Move X20, [X31+128]
	110 Move X19, [X31+136]
	111 Move X22, [X31+112]
	112 Move X21, [X31+120]
	113 Move X30, [X31+96]
	114 Move D9, [X31+80]
	115 Move D8, [X31+88]
	116 Move D11, [X31+64]
	117 Move D10, [X31+72]
	118 Move D13, [X31+48]
	119 Move D12, [X31+56]
	120 Move D15, [X31+32]
	121 Move D14, [X31+40]
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 Add X31, X31, 144
	125 Return X0

Method: System.Boolean ClosestTimesOnTwoLinesXZ(UnityEngine.Vector3 positionA, UnityEngine.Vector3 velocityA, UnityEngine.Vector3 positionB, UnityEngine.Vector3 velocityB, out System.Single s, out System.Single t, System.Double parallelTest = 5E-324)

Disassembly:
	0x03B2991C LDRB W8, [X23 + 0x7E3]
	0x03B29920 CBNZ W8, 0x3B29930
	0x03B29924 MOV X0, X20
	0x03B29928 BL 0x1C16CF4
	0x03B2992C STRB W24, [X23 + 0x7E3]
	0x03B29930 LDR X0, [X20]
	0x03B29934 LDR W8, [X0 + 0xE0]
	0x03B29938 CBNZ W8, 0x3B29944
	0x03B2993C BL 0x1C16DFC
	0x03B29940 LDR X0, [X20]
	0x03B29944 LDR X8, [X0 + 0xB8]
	0x03B29948 FSUB S0, S12, S8
	0x03B2994C FNEG S2, S0
	0x03B29950 FCMP S0, 0x0
	0x03B29954 LDR V1, [X8]
	0x03B29958 FCSEL S2, S2, S0, LT
	0x03B2995C FCMP S2, S1
	0x03B29960 B.PL 0x3B2998C
	0x03B29964 CMP W21, 0x0
	0x03B29968 B.GT 0x3B298F4
	0x03B2996C MOV W26, W31
	0x03B29970 B 0x3B29994
	0x03B29974 MOV W0, W31
	0x03B29978 B 0x3B29B50
	0x03B2997C FCMP S13, 0x0
	0x03B29980 B 0x3B29990
	0x03B29984 MOV W26, W31
	0x03B29988 B 0x3B29998
	0x03B2998C FCMP S0, 0x0
	0x03B29990 CSET W26, MI
	0x03B29994 LDR W8, [X19 + 0x18]
	0x03B29998 CMP W8, 0x1
	0x03B2999C B.LT 0x3B29B40
	0x03B299A0 MOV W24, W31
	0x03B299A4 MOV W21, W31
	0x03B299A8 FSUB S12, S11, S9
	0x03B299AC MOVZ W25, 0x1
	0x03B299B0 LDR X2, [X22]
	0x03B299B4 MOV X0, X19
	0x03B299B8 MOV W1, W21
	0x03B299BC MOV V14.16B, V13.16B
	0x03B299C0 MOV V15.16B, V12.16B
	0x03B299C4 BL 0x30CBE84
	0x03B299C8 LDR X0, [X20]
	0x03B299CC MOV V12.16B, V0.16B
	0x03B299D0 MOV V11.16B, V1.16B
	0x03B299D4 MOV V13.16B, V2.16B
	0x03B299D8 LDR W8, [X0 + 0xE0]
	0x03B299DC CBNZ W8, 0x3B299E4
	0x03B299E0 BL 0x1C16DFC
	0x03B299E4 LDRB W8, [X23 + 0x7E3]
	0x03B299E8 CBNZ W8, 0x3B299F8
	0x03B299EC MOV X0, X20
	0x03B299F0 BL 0x1C16CF4
	0x03B299F4 STRB W25, [X23 + 0x7E3]
	0x03B299F8 LDR X0, [X20]
	0x03B299FC LDR W8, [X0 + 0xE0]
	0x03B29A00 CBNZ W8, 0x3B29A0C
	0x03B29A04 BL 0x1C16DFC
	0x03B29A08 LDR X0, [X20]
	0x03B29A0C LDR X8, [X0 + 0xB8]
	0x03B29A10 FSUB S12, S12, S9
	0x03B29A14 FSUB S13, S13, S8
	0x03B29A18 FSUB S1, S12, S15
	0x03B29A1C FSUB S0, S13, S14
	0x03B29A20 FMUL S2, S13, S1
	0x03B29A24 FMUL S3, S12, S0
	0x03B29A28 FSUB S2, S2, S3
	0x03B29A2C LDR V3, [X8]
	0x03B29A30 FNEG S4, S2
	0x03B29A34 FCMP S2, 0x0
	0x03B29A38 FCSEL S2, S4, S2, LT
	0x03B29A3C FCMP S2, S3
	0x03B29A40 B.PL 0x3B29A94
	0x03B29A44 FSUB S2, S11, S10
	0x03B29A48 FMUL S1, S1, S1
	0x03B29A4C FMUL S3, S15, S15
	0x03B29A50 FMUL S4, S10, S10
	0x03B29A54 FMUL S2, S2, S2
	0x03B29A58 FMUL S0, S0, S0
	0x03B29A5C FMUL S5, S14, S14
	0x03B29A60 FADD S3, S4, S3
	0x03B29A64 FADD S1, S2, S1
	0x03B29A68 FADD S0, S0, S1
	0x03B29A6C FADD S1, S5, S3
	0x03B29A70 FCMP S1, S0
	0x03B29A74 B.HI 0x3B29A94
	0x03B29A78 FMUL S1, S12, S12
	0x03B29A7C FMUL S2, S11, S11
	0x03B29A80 FADD S1, S2, S1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move [X31+88], S0
	016 Move [X31+96], S2
	017 Move X22, 0x8BA000
	018 Move X21, 0x5CB000
	019 Move V13, [X31+144]
	020 Move W8, [X22+1915]
	021 Move V14, [X31+152]
	022 Move X21, [X21+1448]
	023 Move X19, X1
	024 Move X20, X0
	025 Move V8, V5
	026 Move V9, V3
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x5CB000
	032 Move X0, [X0+1448]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1915], W8
	036 Move X0, [X21]
	037 Multiply S0, S9, S9
	038 Multiply S1, S8, S8
	039 Add S0, S0, S1
	040 Multiply S2, S9, S13
	041 Multiply S3, S8, S14
	042 Multiply S4, S13, S13
	043 NotImplemented "Instruction FCVT not yet implemented."
	044 Multiply S0, S14, S14
	045 Move V5, [X31+160]
	046 Add S1, S2, S3
	047 Add S0, S4, S0
	048 Move W8, [X0+224]
	049 NotImplemented "Instruction FCVT not yet implemented."
	050 NotImplemented "Instruction FCVT not yet implemented."
	051 Multiply D0, D10, D12
	052 Multiply D1, D15, D15
	053 Subtract D11, D0, D1
	054 Compare W8, 0
	055 JumpIfNotEqual {59}
	056 Move [X31+8], D5
	057 Call 0x1C17DFC
	058 Move V5, [X31+8]
	059 NotImplemented "Instruction FABS not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move [X20], W31
	062 Move S1, W31
	063 Move V1, [X31+128]
	064 Move V3, [X31+88]
	065 Move V2, [X31+136]
	066 Subtract S1, S3, S1
	067 Move V3, [X31+92]
	068 Subtract S2, S3, S2
	069 Multiply S3, S9, S1
	070 Multiply S4, S8, S2
	071 Multiply S1, S13, S1
	072 Multiply S2, S14, S2
	073 Add S3, S3, S4
	074 Add S1, S1, S2
	075 NotImplemented "Instruction FCVT not yet implemented."
	076 NotImplemented "Instruction FCVT not yet implemented."
	077 Multiply D3, D15, D1
	078 Multiply D4, D2, D12
	079 Multiply D1, D10, D1
	080 Multiply D2, D2, D15
	081 Subtract D3, D3, D4
	082 Subtract D1, D1, D2
	083 NotImplemented "Instruction FDIV not yet implemented."
	084 NotImplemented "Instruction FDIV not yet implemented."
	085 NotImplemented "Instruction INVALID not yet implemented."
	086 NotImplemented "Instruction INVALID not yet implemented."
	087 Move [X20], S2
	088 Move [X19], S1
	089 Move X20, [X31+112]
	090 Move X19, [X31+120]
	091 Move X22, [X31+96]
	092 Move X21, [X31+104]
	093 Move X30, [X31+80]
	094 Move D9, [X31+64]
	095 Move D8, [X31+72]
	096 Move D11, [X31+48]
	097 Move D10, [X31+56]
	098 Move D13, [X31+32]
	099 Move D12, [X31+40]
	100 Move D15, [X31+16]
	101 Move D14, [X31+24]
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Add X31, X31, 128
	105 Return X0

Method: System.Boolean ClosestPointsOnTwoLineSegments(UnityEngine.Vector3 a, UnityEngine.Vector3 aLineVector, UnityEngine.Vector3 b, UnityEngine.Vector3 bLineVector, out UnityEngine.Vector3 resultA, out UnityEngine.Vector3 resultB, System.Double parallelTest = 5E-324)

Disassembly:
	0x03B29A84 FMUL S2, S13, S13
	0x03B29A88 FADD S1, S2, S1
	0x03B29A8C FCMP S1, S0
	0x03B29A90 B.LS 0x3B29B78
	0x03B29A94 LDR W8, [X0 + 0xE0]
	0x03B29A98 CBNZ W8, 0x3B29AA0
	0x03B29A9C BL 0x1C16DFC
	0x03B29AA0 LDRB W8, [X23 + 0x7E3]
	0x03B29AA4 CBNZ W8, 0x3B29AB4
	0x03B29AA8 MOV X0, X20
	0x03B29AAC BL 0x1C16CF4
	0x03B29AB0 STRB W25, [X23 + 0x7E3]
	0x03B29AB4 LDR X0, [X20]
	0x03B29AB8 LDR W8, [X0 + 0xE0]
	0x03B29ABC CBNZ W8, 0x3B29AC8
	0x03B29AC0 BL 0x1C16DFC
	0x03B29AC4 LDR X0, [X20]
	0x03B29AC8 LDR X8, [X0 + 0xB8]
	0x03B29ACC FNEG S1, S13
	0x03B29AD0 FCMP S13, 0x0
	0x03B29AD4 FCSEL S1, S1, S13, LT
	0x03B29AD8 LDR V0, [X8]
	0x03B29ADC FCMP S1, S0
	0x03B29AE0 B.MI 0x3B29B20
	0x03B29AE4 FCMP S13, 0x0
	0x03B29AE8 CSET W8, MI
	0x03B29AEC AND W9, W26, 0x1
	0x03B29AF0 CMP W9, W8
	0x03B29AF4 B.EQ 0x3B29B20
	0x03B29AF8 FMUL S0, S15, S13
	0x03B29AFC FMUL S1, S14, S12
	0x03B29B00 FSUB S2, S14, S13
	0x03B29B04 FSUB S0, S0, S1
	0x03B29B08 FNEG S1, S2
	0x03B29B0C FDIV S0, S0, S1
	0x03B29B10 FCMP S0, 0x0
	0x03B29B14 B.LE 0x3B29B24
	0x03B29B18 ADD W24, W24, 0x1
	0x03B29B1C B 0x3B29B24
	0x03B29B20 MOV W8, W26
	0x03B29B24 LDR W9, [X19 + 0x18]
	0x03B29B28 ADD W21, W21, 0x1
	0x03B29B2C MOV W26, W8
	0x03B29B30 MOV V10.16B, V11.16B
	0x03B29B34 CMP W21, W9
	0x03B29B38 B.LT 0x3B299B0
	0x03B29B3C B 0x3B29B44
	0x03B29B40 MOV W24, W31
	0x03B29B44 AND W8, W24, 0x80000001
	0x03B29B48 CMP W8, 0x1
	0x03B29B4C CSET W0, EQ
	0x03B29B50 LDP X20, X19, [X31 + 0x80]
	0x03B29B54 LDP X22, X21, [X31 + 0x70]
	0x03B29B58 LDP X24, X23, [X31 + 0x60]
	0x03B29B5C LDP X26, X25, [X31 + 0x50]
	0x03B29B60 LDR X30, [X31 + 0x40]
	0x03B29B64 LDP D9, D8, [X31 + 0x30]
	0x03B29B68 LDP D11, D10, [X31 + 0x20]
	0x03B29B6C LDP D13, D12, [X31 + 0x10]
	0x03B29B70 LDP D15, D14, [X31], #0x90
	0x03B29B74 RET
	0x03B29B78 MOVZ W0, 0x1
	0x03B29B7C B 0x3B29B50
	0x03B29B80 BL 0x1C16F20
	0x03B29B84 SUB X31, X31, 0x80
	0x03B29B88 STP D15, D14, [X31 + 0x10]
	0x03B29B8C STP D13, D12, [X31 + 0x20]
	0x03B29B90 STP D11, D10, [X31 + 0x30]
	0x03B29B94 STP D9, D8, [X31 + 0x40]
	0x03B29B98 STP X30, X23, [X31 + 0x50]
	0x03B29B9C STP X22, X21, [X31 + 0x60]
	0x03B29BA0 STP X20, X19, [X31 + 0x70]
	0x03B29BA4 ADRP X20, 0x8B9000
	0x03B29BA8 LDRB W8, [X20 + 0x77F]
	0x03B29BAC MOV X19, X0
	0x03B29BB0 STP S1, S2, [X31 + 0x8]
	0x03B29BB4 STR S0, [X31 + 0x4]
	0x03B29BB8 TBNZ X8, 0x0, 0x3B29BF4
	0x03B29BBC ADRP X0, 0x5CE000
	0x03B29BC0 LDR X0, [X0 + 0x978]
	0x03B29BC4 BL 0x1C16CF4
	0x03B29BC8 ADRP X0, 0x5CE000
	0x03B29BCC LDR X0, [X0 + 0x980]
	0x03B29BD0 BL 0x1C16CF4
	0x03B29BD4 ADRP X0, 0x630000
	0x03B29BD8 LDR X0, [X0 + 0xD40]
	0x03B29BDC BL 0x1C16CF4
	0x03B29BE0 ADRP X0, 0x5CA000
	0x03B29BE4 LDR X0, [X0 + 0x5A8]
	0x03B29BE8 BL 0x1C16CF4
	0x03B29BEC MOVZ W8, 0x1
	0x03B29BF0 STRB W8, [X20 + 0x77F]
	0x03B29BF4 CBZ X19, 0x3B29D74
	0x03B29BF8 LDR W8, [X19 + 0x18]
	0x03B29BFC CMP W8, 0x3
	0x03B29C00 B.LT 0x3B29D44
	0x03B29C04 ADRP X21, 0x5CE000
	0x03B29C08 ADRP X22, 0x630000
	0x03B29C0C ADRP X23, 0x5CA000
	0x03B29C10 LDR X21, [X21 + 0x980]
	0x03B29C14 LDR X22, [X22 + 0xD40]
	0x03B29C18 LDR X23, [X23 + 0x5A8]
	0x03B29C1C MOV W20, W31
	0x03B29C20 FMOV D9, X31
	0x03B29C24 LDR X2, [X21]
	0x03B29C28 MOV X0, X19
	0x03B29C2C MOV W1, W20
	0x03B29C30 BL 0x30CBE84
	0x03B29C34 LDR W8, [X19 + 0x18]
	0x03B29C38 LDR X2, [X21]
	0x03B29C3C ADD W20, W20, 0x1
	0x03B29C40 MOV X0, X19
	0x03B29C44 SDIV W9, W20, W8
	0x03B29C48 MSUB W1, W9, W8, W20
	0x03B29C4C MOV V11.16B, V0.16B
	0x03B29C50 MOV V12.16B, V1.16B
	0x03B29C54 MOV V13.16B, V2.16B
	0x03B29C58 BL 0x30CBE84
	0x03B29C5C LDR X0, [X22]
	0x03B29C60 MOV V14.16B, V0.16B
	0x03B29C64 MOV V15.16B, V1.16B
	0x03B29C68 MOV V8.16B, V2.16B
	0x03B29C6C LDR W8, [X0 + 0xE0]
	0x03B29C70 CBNZ W8, 0x3B29C7C
	0x03B29C74 BL 0x1C16DFC
	0x03B29C78 LDR X0, [X22]
	0x03B29C7C LDP S2, S1, [X31 + 0x4]
	0x03B29C80 LDR V0, [X31 + 0xC]
	0x03B29C84 LDR X8, [X0 + 0xB8]
	0x03B29C88 FSUB S10, S11, S2
	0x03B29C8C FSUB S12, S12, S1
	0x03B29C90 FSUB S11, S13, S0
	0x03B29C94 FSUB S13, S14, S2
	0x03B29C98 FSUB S14, S15, S1
	0x03B29C9C FSUB S8, S8, S0
	0x03B29CA0 FMUL S0, S10, S10
	0x03B29CA4 FMUL S1, S12, S12
	0x03B29CA8 FMUL S2, S11, S11
	0x03B29CAC FADD S0, S0, S1
	0x03B29CB0 FMUL S3, S13, S13
	0x03B29CB4 FMUL S1, S14, S14
	0x03B29CB8 FADD S0, S2, S0
	0x03B29CBC LDR V2, [X8]
	0x03B29CC0 FADD S1, S3, S1
	0x03B29CC4 FMUL S3, S8, S8
	0x03B29CC8 FADD S1, S3, S1
	0x03B29CCC FMUL S15, S0, S1
	0x03B29CD0 FCMP S15, S2
	0x03B29CD4 B.LS 0x3B29D4C
	0x03B29CD8 LDR X0, [X23]
	0x03B29CDC LDR W8, [X0 + 0xE0]
	0x03B29CE0 CBNZ W8, 0x3B29CE8
	0x03B29CE4 BL 0x1C16DFC
	0x03B29CE8 FMUL S0, S10, S13
	0x03B29CEC FMUL S1, S12, S14
	0x03B29CF0 FMUL S2, S11, S8
	0x03B29CF4 FADD S0, S0, S1
	0x03B29CF8 FADD S0, S2, S0
	0x03B29CFC FSQRT S1, S15
	0x03B29D00 FDIV S0, S0, S1
	0x03B29D04 FCVT S0, S0
	0x03B29D08 BL 0x3EB1B80
	0x03B29D0C LDR W8, [X19 + 0x18]
	0x03B29D10 FADD D9, D9, D0
	0x03B29D14 CMP W20, W8
	0x03B29D18 B.LT 0x3B29C24
	0x03B29D1C ADRP X8, 0xFFFFFFFFFCFC1000
	0x03B29D20 LDR V0, [X8 + 0x3A4]
	0x03B29D24 ADRP X8, 0xFFFFFFFFFCFC1000
	0x03B29D28 LDR V1, [X8 + 0x330]
	0x00000000 INVALID
	0x03B29D30 FADD S0, S2, S0
	0x03B29D34 FABS S0, S0
	0x03B29D38 FCMP S0, S1
	0x03B29D3C CSET W0, MI
	0x03B29D40 B 0x3B29D50
	0x03B29D44 MOV W0, W31
	0x03B29D48 B 0x3B29D50
	0x03B29D4C MOVZ W0, 0x1
	0x03B29D50 LDP X20, X19, [X31 + 0x70]
	0x03B29D54 LDP X22, X21, [X31 + 0x60]
	0x03B29D58 LDP X30, X23, [X31 + 0x50]
	0x03B29D5C LDP D9, D8, [X31 + 0x40]
	0x03B29D60 LDP D11, D10, [X31 + 0x30]
	0x03B29D64 LDP D13, D12, [X31 + 0x20]
	0x03B29D68 LDP D15, D14, [X31 + 0x10]
	0x03B29D6C ADD X31, X31, 0x80
	0x03B29D70 RET
	0x03B29D74 BL 0x1C16F20
	0x03B29D78 SUB X31, X31, 0x80
	0x03B29D7C STP D15, D14, [X31 + 0x10]
	0x03B29D80 STP D13, D12, [X31 + 0x20]
	0x03B29D84 STP D11, D10, [X31 + 0x30]
	0x03B29D88 STP D9, D8, [X31 + 0x40]
	0x03B29D8C STR X30, [X31 + 0x50]
	0x03B29D90 STP X22, X21, [X31 + 0x60]
	0x03B29D94 STP X20, X19, [X31 + 0x70]
	0x03B29D98 ADRP X19, 0x8AF000
	0x03B29D9C LDRB W8, [X19 + 0x785]
	0x03B29DA0 MOV V10.16B, V2.16B
	0x03B29DA4 MOV V14.16B, V1.16B
	0x03B29DA8 MOV V15.16B, V0.16B
	0x03B29DAC CBNZ W8, 0x3B29DDC
	0x03B29DB0 ADRP X0, 0x5CA000
	0x03B29DB4 LDR X0, [X0 + 0x5A8]
	0x03B29DB8 MOV V8.16B, V5.16B
	0x03B29DBC MOV V9.16B, V4.16B
	0x03B29DC0 MOV V11.16B, V3.16B
	0x03B29DC4 BL 0x1C16CF4
	0x03B29DC8 MOV V3.16B, V11.16B
	0x03B29DCC MOV V4.16B, V9.16B
	0x03B29DD0 MOV V5.16B, V8.16B
	0x03B29DD4 MOVZ W8, 0x1
	0x03B29DD8 STRB W8, [X19 + 0x785]
	0x03B29DDC ADRP X22, 0x5CA000
	0x03B29DE0 LDR X22, [X22 + 0x5A8]
	0x03B29DE4 LDR X0, [X22]
	0x03B29DE8 LDR W8, [X0 + 0xE0]
	0x03B29DEC CBNZ W8, 0x3B29E0C
	0x03B29DF0 MOV V8.16B, V5.16B
	0x03B29DF4 MOV V9.16B, V4.16B
	0x03B29DF8 MOV V11.16B, V3.16B
	0x03B29DFC BL 0x1C16DFC
	0x03B29E00 MOV V3.16B, V11.16B
	0x03B29E04 MOV V4.16B, V9.16B
	0x03B29E08 MOV V5.16B, V8.16B
	0x03B29E0C ADRP X8, 0xFFFFFFFFFCFC1000
	0x03B29E10 FMUL S0, S15, S15
	0x03B29E14 FMUL S1, S14, S14
	0x03B29E18 LDR V13, [X8 + 0x17C]
	0x03B29E1C ADRP X20, 0x5CA000
	0x03B29E20 LDP S9, S8, [X31 + 0x84]
	0x03B29E24 LDR V11, [X31 + 0x80]
	0x03B29E28 FMUL S2, S10, S10
	0x03B29E2C FADD S0, S0, S1
	0x03B29E30 LDR X20, [X20 + 0x5A0]
	0x03B29E34 FADD S0, S2, S0
	0x03B29E38 FSQRT S12, S0
	0x03B29E3C FCMP S12, S13
	0x03B29E40 ADRP X21, 0x8AF000
	0x03B29E44 STP S10, S15, [X31 + 0x8]
	0x03B29E48 STR S14, [X31 + 0x58]
	0x03B29E4C B.LE 0x3B29E60
	0x03B29E50 FDIV S0, S15, S12
	0x03B29E54 FDIV S1, S14, S12
	0x03B29E58 FDIV S14, S10, S12
	0x03B29E5C B 0x3B29EA4
	0x03B29E60 LDRB W8, [X21 + 0x783]
	0x03B29E64 CBNZ W8, 0x3B29E94
	0x03B29E68 ADRP X0, 0x5CA000
	0x03B29E6C LDR X0, [X0 + 0x5A0]
	0x03B29E70 STR S5, [X31 + 0x5C]
	0x03B29E74 MOV V14.16B, V4.16B
	0x03B29E78 STR S3, [X31 + 0x4]
	0x03B29E7C BL 0x1C16CF4
	0x03B29E80 LDR V3, [X31 + 0x4]
	0x03B29E84 LDR V5, [X31 + 0x5C]
	0x03B29E88 MOV V4.16B, V14.16B
	0x03B29E8C MOVZ W8, 0x1
	0x03B29E90 STRB W8, [X21 + 0x783]
	0x03B29E94 LDR X8, [X20]
	0x03B29E98 LDR X8, [X8 + 0xB8]
	0x03B29E9C LDP S0, S1, [X8]
	0x03B29EA0 LDR V14, [X8 + 0x8]
	0x03B29EA4 LDRB W8, [X19 + 0x785]
	0x03B29EA8 FSUB S2, S11, S3
	0x03B29EAC FSUB S3, S9, S4
	0x03B29EB0 MOV V10.16B, V11.16B
	0x03B29EB4 STR S9, [X31 + 0x5C]
	0x03B29EB8 MOV V9.16B, V8.16B
	0x03B29EBC FSUB S15, S8, S5
	0x03B29EC0 FMUL S11, S2, S0
	0x03B29EC4 FMUL S8, S3, S1
	0x03B29EC8 CBNZ W8, 0x3B29EE0
	0x03B29ECC ADRP X0, 0x5CA000
	0x03B29ED0 LDR X0, [X0 + 0x5A8]
	0x03B29ED4 BL 0x1C16CF4
	0x03B29ED8 MOVZ W8, 0x1
	0x03B29EDC STRB W8, [X19 + 0x785]
	0x03B29EE0 LDR X0, [X22]
	0x03B29EE4 FADD S8, S11, S8
	0x03B29EE8 FMUL S11, S15, S14
	0x03B29EEC LDR W8, [X0 + 0xE0]
	0x03B29EF0 CBNZ W8, 0x3B29EF8
	0x03B29EF4 BL 0x1C16DFC
	0x03B29EF8 LDR V1, [X31 + 0x58]
	0x03B29EFC LDR V0, [X31 + 0xC]
	0x03B29F00 FCMP S12, S13
	0x03B29F04 FADD S13, S11, S8
	0x03B29F08 B.LE 0x3B29F20
	0x03B29F0C LDR V2, [X31 + 0x8]
	0x03B29F10 FDIV S0, S0, S12
	0x03B29F14 FDIV S1, S1, S12
	0x03B29F18 FDIV S2, S2, S12
	0x03B29F1C B 0x3B29F4C
	0x03B29F20 LDRB W8, [X21 + 0x783]
	0x03B29F24 CBNZ W8, 0x3B29F3C
	0x03B29F28 ADRP X0, 0x5CA000
	0x03B29F2C LDR X0, [X0 + 0x5A0]
	0x03B29F30 BL 0x1C16CF4
	0x03B29F34 MOVZ W8, 0x1
	0x03B29F38 STRB W8, [X21 + 0x783]
	0x03B29F3C LDR X8, [X20]
	0x03B29F40 LDR X8, [X8 + 0xB8]
	0x03B29F44 LDP S0, S1, [X8]
	0x03B29F48 LDR V2, [X8 + 0x8]
	0x03B29F4C FMUL S0, S13, S0
	0x03B29F50 FMUL S2, S13, S2
	0x03B29F54 LDR V3, [X31 + 0x5C]
	0x03B29F58 FMUL S1, S13, S1
	0x03B29F5C FSUB S0, S10, S0
	0x03B29F60 FSUB S2, S9, S2
	0x03B29F64 LDP X20, X19, [X31 + 0x70]
	0x03B29F68 LDP X22, X21, [X31 + 0x60]
	0x03B29F6C LDR X30, [X31 + 0x50]
	0x03B29F70 LDP D9, D8, [X31 + 0x40]
	0x03B29F74 LDP D11, D10, [X31 + 0x30]
	0x03B29F78 LDP D13, D12, [X31 + 0x20]
	0x03B29F7C LDP D15, D14, [X31 + 0x10]
	0x03B29F80 FSUB S1, S3, S1
	0x03B29F84 ADD X31, X31, 0x80
	0x03B29F88 RET
	0x03B29F8C SUB X31, X31, 0xB0
	0x03B29F90 STP D15, D14, [X31 + 0x10]
	0x03B29F94 STP D13, D12, [X31 + 0x20]
	0x03B29F98 STP D11, D10, [X31 + 0x30]
	0x03B29F9C STP D9, D8, [X31 + 0x40]
	0x03B29FA0 STP X29, X30, [X31 + 0x50]
	0x03B29FA4 STP X28, X27, [X31 + 0x60]
	0x03B29FA8 STP X26, X25, [X31 + 0x70]
	0x03B29FAC STP X24, X23, [X31 + 0x80]
	0x03B29FB0 STP X22, X21, [X31 + 0x90]
	0x03B29FB4 STP X20, X19, [X31 + 0xA0]
	0x03B29FB8 ADRP X21, 0x8B9000
	0x03B29FBC LDRB W8, [X21 + 0x780]
	0x03B29FC0 MOV X19, X1
	0x03B29FC4 MOV X20, X0
	0x03B29FC8 TBNZ X8, 0x0, 0x3B2A034
	0x03B29FCC ADRP X0, 0x630000
	0x03B29FD0 LDR X0, [X0 + 0xD10]
	0x03B29FD4 BL 0x1C16CF4
	0x03B29FD8 ADRP X0, 0x5CC000
	0x03B29FDC LDR X0, [X0 + 0x9D8]
	0x03B29FE0 BL 0x1C16CF4
	0x03B29FE4 ADRP X0, 0x5D1000
	0x03B29FE8 LDR X0, [X0 + 0x678]
	0x03B29FEC BL 0x1C16CF4
	0x03B29FF0 ADRP X0, 0x5CB000
	0x03B29FF4 LDR X0, [X0 + 0xDF8]
	0x03B29FF8 BL 0x1C16CF4
	0x03B29FFC ADRP X0, 0x5CE000
	0x03B2A000 LDR X0, [X0 + 0x3B8]
	0x03B2A004 BL 0x1C16CF4
	0x03B2A008 ADRP X0, 0x5CD000
	0x03B2A00C LDR X0, [X0 + 0x978]
	0x03B2A010 BL 0x1C16CF4
	0x03B2A014 ADRP X0, 0x5CD000
	0x03B2A018 LDR X0, [X0 + 0x980]
	0x03B2A01C BL 0x1C16CF4
	0x03B2A020 ADRP X0, 0x62F000
	0x03B2A024 LDR X0, [X0 + 0xD40]
	0x03B2A028 BL 0x1C16CF4
	0x03B2A02C MOVZ W8, 0x1
	0x03B2A030 STRB W8, [X21 + 0x780]
	0x03B2A034 CBZ X20, 0x3B2A404
	0x03B2A038 LDR W8, [X20 + 0x18]
	0x03B2A03C CMP W8, 0x3
	0x03B2A040 STR W8, [X31]
	0x03B2A044 B.LT 0x3B2A3C8
	0x03B2A048 ADRP X25, 0x62F000
	0x03B2A04C LDR X25, [X25 + 0xD10]
	0x03B2A050 LDR X0, [X25]
	0x03B2A054 LDR W8, [X0 + 0xE0]
	0x03B2A058 CBNZ W8, 0x3B2A064
	0x03B2A05C BL 0x1C16DFC
	0x03B2A060 LDR X0, [X25]
	0x03B2A064 LDR X8, [X0 + 0xB8]
	0x03B2A068 LDR X0, [X8 + 0x40]
	0x03B2A06C CBZ X0, 0x3B2A404
	0x03B2A070 ADRP X8, 0x5D0000
	0x03B2A074 LDR X8, [X8 + 0x678]
	0x03B2A078 LDR X1, [X8]
	0x03B2A07C BL 0x2DAA53C
	0x03B2A080 LDR W26, [X20 + 0x18]
	0x03B2A084 CMP W26, 0x2
	0x03B2A088 B.LT 0x3B2A158
	0x03B2A08C ADRP X27, 0x5CD000
	0x03B2A090 ADRP X22, 0x62F000
	0x03B2A094 LDR X27, [X27 + 0x980]
	0x03B2A098 LDR X22, [X22 + 0xD40]
	0x03B2A09C MOV W21, W31
	0x03B2A0A0 MOVZ W24, 0x1
	0x03B2A0A4 ADRP X28, 0x8B8000
	0x03B2A0A8 MOVZ W23, 0x1
	0x03B2A0AC LDR X2, [X27]
	0x03B2A0B0 MOV X0, X20
	0x03B2A0B4 MOV W1, W23
	0x03B2A0B8 BL 0x30CBE84
	0x03B2A0BC LDR X2, [X27]
	0x03B2A0C0 MOV X0, X20
	0x03B2A0C4 MOV W1, W21
	0x03B2A0C8 MOV V9.16B, V0.16B
	0x03B2A0CC MOV V8.16B, V2.16B
	0x03B2A0D0 BL 0x30CBE84
	0x03B2A0D4 FCMP S9, S0
	0x03B2A0D8 B.MI 0x3B2A144
	0x03B2A0DC LDR X0, [X22]
	0x03B2A0E0 MOV V11.16B, V0.16B
	0x03B2A0E4 MOV V10.16B, V2.16B
	0x03B2A0E8 LDR W8, [X0 + 0xE0]
	0x03B2A0EC CBNZ W8, 0x3B2A0F4
	0x03B2A0F0 BL 0x1C16DFC
	0x03B2A0F4 LDRB W8, [X28 + 0x7E4]
	0x03B2A0F8 CBNZ W8, 0x3B2A108
	0x03B2A0FC MOV X0, X22
	0x03B2A100 BL 0x1C16CF4
	0x03B2A104 STRB W24, [X28 + 0x7E4]
	0x03B2A108 LDR X0, [X22]
	0x03B2A10C LDR W8, [X0 + 0xE0]
	0x03B2A110 CBNZ W8, 0x3B2A11C
	0x03B2A114 BL 0x1C16DFC
	0x03B2A118 LDR X0, [X22]
	0x03B2A11C FSUB S0, S11, S9
	0x03B2A120 FNEG S1, S0
	0x03B2A124 FCMP S0, 0x0
	0x03B2A128 FCSEL S0, S1, S0, LT
	0x03B2A12C FCMP S8, S10
	0x03B2A130 B.PL 0x3B2A148
	0x03B2A134 LDR X8, [X0 + 0xB8]
	0x03B2A138 LDR V1, [X8]
	0x03B2A13C FCMP S0, S1
	0x03B2A140 B.PL 0x3B2A148
	0x03B2A144 MOV W21, W23
	0x03B2A148 ADD W23, W23, 0x1
	0x03B2A14C CMP W26, W23
	0x03B2A150 B.NE 0x3B2A0AC
	0x03B2A154 B 0x3B2A15C
	0x03B2A158 MOV W21, W31
	0x03B2A15C ADRP X27, 0x5CD000
	0x03B2A160 ADRP X29, 0x5CA000
	0x03B2A164 ADRP X28, 0x62F000
	0x03B2A168 LDR X27, [X27 + 0x980]
	0x03B2A16C LDR X29, [X29 + 0xDF8]
	0x03B2A170 LDR X28, [X28 + 0xD40]
	0x03B2A174 MOV W22, W21
	0x03B2A178 LDR X2, [X27]
	0x03B2A17C MOV X0, X20
	0x03B2A180 MOV W1, W22
	0x03B2A184 BL 0x30CBE84
	0x03B2A188 STR S0, [X31 + 0xC]
	0x03B2A18C STR S1, [X31 + 0x4]
	0x03B2A190 CBZ X19, 0x3B2A404
	0x03B2A194 ADRP X8, 0x5CD000
	0x03B2A198 LDR W10, [X19 + 0x1C]
	0x03B2A19C LDR X9, [X19 + 0x10]
	0x03B2A1A0 LDR X8, [X8 + 0x3B8]
	0x03B2A1A4 ADD W10, W10, 0x1
	0x03B2A1A8 LDR X8, [X8]
	0x03B2A1AC STR W10, [X19 + 0x1C]
	0x03B2A1B0 CBZ X9, 0x3B2A404
	0x03B2A1B4 LDRSW X10, [X19 + 0x18]
	0x03B2A1B8 LDR W11, [X9 + 0x18]
	0x03B2A1BC MOV V10.16B, V2.16B
	0x03B2A1C0 CMP W10, W11
	0x03B2A1C4 B.CS 0x3B2A1EC
	0x03B2A1C8 LDR V1, [X31 + 0xC]
	0x03B2A1CC LDR V0, [X31 + 0x4]
	0x03B2A1D0 MOVZ W11, 0xC
	0x03B2A1D4 ADD W8, W10, 0x1
	0x03B2A1D8 MADD X9, X10, X11, X9
	0x03B2A1DC STR W8, [X19 + 0x18]
	0x03B2A1E0 STP S1, S0, [X9 + 0x20]
	0x03B2A1E4 STR S10, [X9 + 0x28]
	0x03B2A1E8 B 0x3B2A20C
	0x03B2A1EC LDR X8, [X8 + 0x20]
	0x03B2A1F0 LDR V0, [X31 + 0xC]
	0x03B2A1F4 LDR V1, [X31 + 0x4]
	0x03B2A1F8 MOV X0, X19
	0x03B2A1FC LDR X8, [X8 + 0xC0]
	0x03B2A200 MOV V2.16B, V10.16B
	0x03B2A204 LDR X1, [X8 + 0x70]
	0x03B2A208 BL 0x30CC1B4
	0x03B2A20C LDR X0, [X25]
	0x03B2A210 LDR W8, [X0 + 0xE0]
	0x03B2A214 CBNZ W8, 0x3B2A220
	0x03B2A218 BL 0x1C16DFC
	0x03B2A21C LDR X0, [X25]
	0x03B2A220 LDR X8, [X0 + 0xB8]
	0x03B2A224 LDR X0, [X8 + 0x40]
	0x03B2A228 CBZ X0, 0x3B2A404
	0x03B2A22C ADRP X8, 0x5CB000
	0x03B2A230 LDR X8, [X8 + 0x9D8]
	0x03B2A234 MOV W1, W22
	0x03B2A238 LDR X2, [X8]
	0x03B2A23C BL 0x2DAB03C
	0x03B2A240 LDR X2, [X27]
	0x03B2A244 MOV X0, X20
	0x03B2A248 MOV W1, W31
	0x03B2A24C BL 0x30CBE84
	0x03B2A250 CMP W26, 0x2
	0x03B2A254 MOV W24, W31
	0x03B2A258 STR S1, [X31 + 0x8]
	0x03B2A25C B.LT 0x3B2A3BC
	0x03B2A260 MOV V9.16B, V0.16B
	0x03B2A264 MOV V11.16B, V2.16B
	0x03B2A268 MOV W24, W31
	0x03B2A26C MOVZ W23, 0x1
	0x03B2A270 CMP W22, W23
	0x03B2A274 B.EQ 0x3B2A3B0
	0x03B2A278 LDR X0, [X25]
	0x03B2A27C LDR W8, [X0 + 0xE0]
	0x03B2A280 CBNZ W8, 0x3B2A28C
	0x03B2A284 BL 0x1C16DFC
	0x03B2A288 LDR X0, [X25]
	0x03B2A28C LDR X8, [X0 + 0xB8]
	0x03B2A290 LDR X0, [X8 + 0x40]
	0x03B2A294 CBZ X0, 0x3B2A404
	0x03B2A298 LDR X2, [X29]
	0x03B2A29C MOV W1, W23
	0x03B2A2A0 BL 0x2DAA59C
	0x03B2A2A4 CMP W21, W23
	0x03B2A2A8 B.EQ 0x3B2A2B0
	0x03B2A2AC TBNZ X0, 0x0, 0x3B2A3B0
	0x03B2A2B0 LDR X2, [X27]
	0x03B2A2B4 MOV X0, X20
	0x03B2A2B8 MOV W1, W23
	0x03B2A2BC BL 0x30CBE84
	0x03B2A2C0 MOV V12.16B, V2.16B
	0x03B2A2C4 LDR V2, [X31 + 0xC]
	0x03B2A2C8 LDR X0, [X28]
	0x03B2A2CC MOV V14.16B, V0.16B
	0x03B2A2D0 MOV V15.16B, V1.16B
	0x03B2A2D4 FSUB S0, S9, S2
	0x03B2A2D8 FSUB S1, S11, S10
	0x03B2A2DC FSUB S2, S14, S2
	0x03B2A2E0 FSUB S3, S12, S10
	0x03B2A2E4 FMUL S1, S1, S2
	0x03B2A2E8 FMUL S0, S0, S3
	0x03B2A2EC LDR W8, [X0 + 0xE0]
	0x03B2A2F0 MOV V13.16B, V9.16B
	0x03B2A2F4 FSUB S9, S1, S0
	0x03B2A2F8 FNEG S0, S9
	0x03B2A2FC FCMP S9, 0x0
	0x03B2A300 MOV V8.16B, V11.16B
	0x03B2A304 FCSEL S11, S0, S9, MI
	0x03B2A308 CBNZ W8, 0x3B2A314
	0x03B2A30C BL 0x1C16DFC
	0x03B2A310 LDR X0, [X28]
	0x03B2A314 LDR X8, [X0 + 0xB8]
	0x03B2A318 LDR V0, [X8]
	0x03B2A31C FCMP S11, S0
	0x03B2A320 B.PL 0x3B2A380
	0x03B2A324 LDP S1, S3, [X31 + 0x8]
	0x03B2A328 LDR V4, [X31 + 0x4]
	0x03B2A32C FSUB S2, S10, S8
	0x03B2A330 FSUB S5, S10, S12
	0x03B2A334 FSUB S0, S3, S13
	0x03B2A338 FSUB S1, S4, S1
	0x03B2A33C FSUB S3, S3, S14
	0x03B2A340 FSUB S4, S4, S15
	0x03B2A344 FMUL S0, S0, S0
	0x03B2A348 FMUL S1, S1, S1
	0x03B2A34C FMUL S3, S3, S3
	0x03B2A350 FMUL S4, S4, S4
	0x03B2A354 FMUL S2, S2, S2
	0x03B2A358 FMUL S5, S5, S5
	0x03B2A35C FADD S0, S1, S0
	0x03B2A360 FADD S1, S3, S4
	0x03B2A364 FADD S0, S2, S0
	0x03B2A368 FADD S1, S5, S1
	0x03B2A36C MOV V9.16B, V13.16B
	0x03B2A370 MOV V11.16B, V8.16B
	0x03B2A374 FCMP S0, S1
	0x03B2A378 B.MI 0x3B2A390
	0x03B2A37C B 0x3B2A3B0
	0x03B2A380 FCMP S9, 0x0
	0x03B2A384 MOV V9.16B, V13.16B
	0x03B2A388 MOV V11.16B, V8.16B
	0x03B2A38C B.PL 0x3B2A3B0
	0x03B2A390 LDR X2, [X27]
	0x03B2A394 MOV X0, X20
	0x03B2A398 MOV W1, W23
	0x03B2A39C BL 0x30CBE84
	0x03B2A3A0 MOV V9.16B, V0.16B
	0x03B2A3A4 MOV V11.16B, V2.16B
	0x03B2A3A8 MOV W24, W23
	0x03B2A3AC STR S1, [X31 + 0x8]
	0x03B2A3B0 ADD W23, W23, 0x1
	0x03B2A3B4 CMP W26, W23
	0x03B2A3B8 B.NE 0x3B2A270
	0x03B2A3BC CMP W24, W21
	0x03B2A3C0 MOV W22, W24
	0x03B2A3C4 B.NE 0x3B2A178
	0x03B2A3C8 LDR W8, [X31]
	0x03B2A3CC LDP X20, X19, [X31 + 0xA0]
	0x03B2A3D0 LDP X22, X21, [X31 + 0x90]
	0x03B2A3D4 LDP X24, X23, [X31 + 0x80]
	0x03B2A3D8 LDP X26, X25, [X31 + 0x70]
	0x03B2A3DC LDP X28, X27, [X31 + 0x60]
	0x03B2A3E0 LDP X29, X30, [X31 + 0x50]
	0x03B2A3E4 LDP D9, D8, [X31 + 0x40]
	0x03B2A3E8 LDP D11, D10, [X31 + 0x30]
	0x03B2A3EC LDP D13, D12, [X31 + 0x20]
	0x03B2A3F0 LDP D15, D14, [X31 + 0x10]
	0x03B2A3F4 CMP W8, 0x2
	0x03B2A3F8 CSET W0, GT
	0x03B2A3FC ADD X31, X31, 0xB0
	0x03B2A400 RET
	0x03B2A404 BL 0x1C16F20
	0x03B2A408 STR D12, [X31 - 0x50]!
	0x03B2A40C STP D11, D10, [X31 + 0x8]
	0x03B2A410 STP D9, D8, [X31 + 0x18]
	0x03B2A414 STR X30, [X31 + 0x28]
	0x03B2A418 STP X22, X21, [X31 + 0x30]
	0x03B2A41C STP X20, X19, [X31 + 0x40]
	0x03B2A420 ADRP X20, 0x8B8000
	0x03B2A424 LDRB W8, [X20 + 0x781]
	0x03B2A428 MOV X19, X0
	0x03B2A42C TBNZ X8, 0x0, 0x3B2A450
	0x03B2A430 ADRP X0, 0x5CD000
	0x03B2A434 LDR X0, [X0 + 0x978]
	0x03B2A438 BL 0x1C16CF4
	0x03B2A43C ADRP X0, 0x5CD000
	0x03B2A440 LDR X0, [X0 + 0x980]
	0x03B2A444 BL 0x1C16CF4
	0x03B2A448 MOVZ W8, 0x1
	0x03B2A44C STRB W8, [X20 + 0x781]
	0x03B2A450 CBZ X19, 0x3B2A588
	0x03B2A454 ADRP X21, 0x5CD000
	0x03B2A458 LDR X21, [X21 + 0x980]
	0x03B2A45C LDR W22, [X19 + 0x18]
	0x03B2A460 MOV X0, X19
	0x03B2A464 MOV W1, W31
	0x03B2A468 LDR X2, [X21]
	0x03B2A46C SUB W20, W22, 0x1
	0x03B2A470 BL 0x30CBE84
	0x03B2A474 FCVT S9, S0
	0x03B2A478 CMP W20, 0x1
	0x03B2A47C FCVT S12, S2
	0x03B2A480 B.LT 0x3B2A4FC
	0x03B2A484 FMOV D8, X31
	0x03B2A488 MOVZ W20, 0x1
	0x03B2A48C FMOV D11, X31
	0x03B2A490 FMOV D10, X31

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+224], X30
	012 Move [X31+232], X25
	013 Move [X31+240], X24
	014 Move [X31+248], X23
	015 Move [X31+256], X22
	016 Move [X31+264], X21
	017 Move [X31+272], X20
	018 Move [X31+280], X19
	019 Move [X31+124], S4
	020 Move [X31+132], S3
	021 Move [X31+132], S2
	022 Move X21, 0x8BA000
	023 Move X23, 0x631000
	024 Move W8, [X21+1916]
	025 Move X23, [X23+3344]
	026 Move X19, X1
	027 Move X20, X0
	028 Move V13, V5
	029 Move [X31+136], S0
	030 Move [X31+144], S1
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {42}
	035 Move X0, 0x631000
	036 Move X0, [X0+3344]
	037 Call 0x1C17CF4
	038 Move S0, [X31+136]
	039 Move S1, [X31+140]
	040 Move W8, 1
	041 Move [X21+1916], W8
	042 Move X0, [X23]
	043 Move [X31+216], X31
	044 Move V9, [X31+296]
	045 Move V14, [X31+292]
	046 Move V15, [X31+288]
	047 Move V12, [X31+312]
	048 Move V10, [X31+308]
	049 Move V11, [X31+304]
	050 Move W8, [X0+224]
	051 Move V8, [X31+320]
	052 Compare W8, 0
	053 JumpIfNotEqual {57}
	054 Call 0x1C17DFC
	055 Move S0, [X31+136]
	056 Move S1, [X31+140]
	057 Move [X31+32], D8
	058 Move V8, [X31+124]
	059 Move S3, [X31+128]
	060 Move S2, [X31+132]
	061 Add X0, X31, 220
	062 Add X1, X31, 216
	063 Move V4, V8
	064 Move V5, V13
	065 Move [X31+16], S11
	066 Move [X31+24], S10
	067 Move [X31], S15
	068 Move [X31+8], S14
	069 Move [X31+24], S12
	070 Move [X31+8], S9
	071 Call GeometryUtils.ClosestTimesOnTwoLines, X0, X1, X2, X3, X4, X5, V0
	072 Move V0, [X31+216]
	073 Move S1, 1
	074 Move W21, W0
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move V1, [X31+220]
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 Move S2, 1
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move V2, [X31+128]
	082 Move V6, [X31+136]
	083 Multiply S3, S8, S1
	084 Multiply S4, S11, S0
	085 Multiply S2, S2, S1
	086 Add S2, S6, S2
	087 Move V6, [X31+140]
	088 Multiply S1, S13, S1
	089 Multiply S5, S10, S0
	090 Multiply S0, S12, S0
	091 Add S3, S6, S3
	092 Move V6, [X31+132]
	093 Add S4, S15, S4
	094 Add S5, S14, S5
	095 Add S0, S9, S0
	096 Add S1, S6, S1
	097 Move [X20], S2
	098 Move [X20+8], S3
	099 Move [X20+8], S1
	100 Move [X19], S4
	101 Move [X19+8], S5
	102 Move [X19+8], S0
	103 Move S1, [X31+128]
	104 Move S2, [X31+132]
	105 Move V0, [X31+136]
	106 Move X0, [X23]
	107 Move V3, V8
	108 Move [X31+56], S11
	109 Move [X31+64], S10
	110 Add S4, S0, S1
	111 Move V1, [X31+140]
	112 Move W8, [X0+224]
	113 Add S8, S15, S11
	114 Add S11, S14, S10
	115 Add S3, S1, S3
	116 Add S10, S9, S12
	117 Move [X31+116], S4
	118 Move [X31+124], S3
	119 Add S3, S2, S13
	120 Move [X31+72], S13
	121 Move [X31+108], S3
	122 Compare W8, 0
	123 JumpIfNotEqual {129}
	124 Move V13, V2
	125 Call 0x1C17DFC
	126 Move S0, [X31+136]
	127 Move S1, [X31+140]
	128 Move V2, V13
	129 Move V3, V15
	130 Move V4, V14
	131 Move V5, V9
	132 Move [X31+52], S12
	133 Move [X31+4], S11
	134 Move [X31+12], S10
	135 Move [X31], S8
	136 Move V12, V1
	137 Move V13, V0
	138 Call GeometryUtils.ClosestPointOnLineSegment, X0, X1, X2
	139 Move V3, V8
	140 Move [X31+64], S1
	141 Move [X31+72], S0
	142 Move V8, V12
	143 Move V12, V13
	144 Move V13, V2
	145 Move S0, [X31+116]
	146 Move S1, [X31+120]
	147 Move V2, [X31+108]
	148 Move [X31+104], S3
	149 Move [X31], S3
	150 Move V3, V15
	151 Move V4, V14
	152 Move V5, V9
	153 Move [X31+96], S11
	154 Move [X31+104], S10
	155 Move [X31+4], S11
	156 Move [X31+12], S10
	157 Call GeometryUtils.ClosestPointOnLineSegment, X0, X1, X2
	158 Move X24, 0x8B0000
	159 Move W8, [X24+2140]
	160 Move [X31+112], S0
	161 Move [X31+76], S2
	162 Move [X31+84], S1
	163 Compare W8, 0
	164 JumpIfNotEqual {170}
	165 Move X0, 0x5CB000
	166 Move X0, [X0+1448]
	167 Call 0x1C17CF4
	168 Move W8, 1
	169 Move [X24+2140], W8
	170 Move [X31+84], S15
	171 Move [X31+92], S14
	172 Move [X31+92], S9
	173 Move X22, 0x5CB000
	174 Move X22, [X22+1448]
	175 Move S9, [X31+64]
	176 Move S1, [X31+68]
	177 Move V0, [X31+132]
	178 Move X0, [X22]
	179 Subtract S10, S12, S1
	180 Subtract S11, S8, S9
	181 Subtract S15, S0, S13
	182 Move W8, [X0+224]
	183 Move V8, V1
	184 Move V12, V13
	185 Compare W8, 0
	186 JumpIfEqual {188}
	187 Move W8, 1
	188 Call 0x1C17DFC
	189 Move W8, [X24+2140]
	190 Move V13, [X31+116]
	191 Multiply S2, S15, S15
	192 Move S15, [X31+132]
	193 Move S4, [X31+136]
	194 Move V3, [X31+140]
	195 Multiply S0, S10, S10
	196 Multiply S1, S11, S11
	197 Add S0, S0, S1
	198 Add S11, S2, S0
	199 Move [X20], S4
	200 Move [X20+8], S3
	201 Move [X20+8], S15
	202 Move [X19], S8
	203 Move [X19+8], S9
	204 Move [X19+8], S12
	205 Compare W8, 0
	206 JumpIfNotEqual {212}
	207 Move X0, 0x5CB000
	208 Move X0, [X0+1448]
	209 Call 0x1C17CF4
	210 Move W8, 1
	211 Move [X24+2140], W8
	212 Move S14, [X31+108]
	213 Move S0, [X31+112]
	214 NotImplemented "Instruction FSQRT not yet implemented."
	215 Move V12, [X31+120]
	216 Move X0, [X22]
	217 Subtract S11, S13, S0
	218 Move V0, [X31+80]
	219 Move W8, [X0+224]
	220 Subtract S10, S12, S0
	221 Move V0, [X31+76]
	222 Subtract S8, S14, S0
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Multiply S0, S11, S11
	227 Multiply S1, S10, S10
	228 Add S0, S0, S1
	229 Multiply S1, S8, S8
	230 Move S11, [X31+136]
	231 Move S8, [X31+140]
	232 Add S0, S1, S0
	233 NotImplemented "Instruction FSQRT not yet implemented."
	234 NotImplemented "Instruction FCMP not yet implemented."
	235 Move V2, [X31+112]
	236 Move V1, [X31+80]
	237 Move [X20], S13
	238 Move [X20+8], S12
	239 Move [X20+8], S14
	240 Move V9, V0
	241 Move [X19], S2
	242 Move [X19+8], S1
	243 Move V1, [X31+76]
	244 Move [X19+8], S1
	245 Move X0, [X23]
	246 Move [X31+112], S9
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move [X31], S13
	252 Move [X31+8], S12
	253 Move S13, [X31+84]
	254 Move S9, [X31+88]
	255 Move V10, [X31+92]
	256 Move V3, V11
	257 Move V4, V8
	258 Move V0, V13
	259 Move V1, V9
	260 Move V2, V10
	261 Move V5, V15
	262 Move [X31+8], S14
	263 Call GeometryUtils.ClosestPointOnLineSegment, X0, X1, X2
	264 Move W8, [X24+2140]
	265 Move V8, V0
	266 Move V11, V1
	267 Move V12, V2
	268 Compare W8, 0
	269 JumpIfNotEqual {275}
	270 Move X0, 0x5CB000
	271 Move X0, [X0+1448]
	272 Call 0x1C17CF4
	273 Move W8, 1
	274 Move [X24+2140], W8
	275 Move X0, [X22]
	276 Subtract S13, S13, S8
	277 Subtract S15, S9, S11
	278 Subtract S10, S10, S12
	279 Move W8, [X0+224]
	280 Compare W8, 0
	281 JumpIfNotEqual {283}
	282 Call 0x1C17DFC
	283 Multiply S0, S13, S13
	284 Multiply S1, S15, S15
	285 Add S0, S0, S1
	286 Multiply S1, S10, S10
	287 Add S0, S1, S0
	288 Move V1, [X31+112]
	289 NotImplemented "Instruction FSQRT not yet implemented."
	290 NotImplemented "Instruction FCMP not yet implemented."
	291 Move V2, [X31+84]
	292 Move V1, [X31+88]
	293 Move [X20], S8
	294 Move [X20+8], S11
	295 Move [X20+8], S12
	296 Move [X19], S2
	297 Move [X19+8], S1
	298 Move V1, [X31+92]
	299 Move [X19+8], S1
	300 Move V1, V0
	301 Move X0, [X23]
	302 Move S15, [X31+96]
	303 Move S13, [X31+100]
	304 Move [X31+112], S1
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Move V1, [X31+120]
	310 Move V0, [X31+116]
	311 Move V11, [X31+104]
	312 Move S3, [X31+136]
	313 Move S4, [X31+140]
	314 Move V5, [X31+132]
	315 Move [X31], S0
	316 Move [X31+8], S1
	317 Move V0, V11
	318 Move V1, V15
	319 Move V2, V13
	320 Move [X31+8], S14
	321 Call GeometryUtils.ClosestPointOnLineSegment, X0, X1, X2
	322 Move W8, [X24+2140]
	323 Move V8, V0
	324 Move V9, V1
	325 Move V10, V2
	326 Compare W8, 0
	327 JumpIfNotEqual {333}
	328 Move X0, 0x5CB000
	329 Move X0, [X0+1448]
	330 Call 0x1C17CF4
	331 Move W8, 1
	332 Move [X24+2140], W8
	333 Move X0, [X22]
	334 Subtract S14, S11, S8
	335 Subtract S12, S15, S9
	336 Subtract S11, S13, S10
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {341}
	340 Call 0x1C17DFC
	341 Multiply S0, S14, S14
	342 Multiply S1, S12, S12
	343 Add S0, S0, S1
	344 Multiply S1, S11, S11
	345 Add S0, S1, S0
	346 Move V1, [X31+112]
	347 NotImplemented "Instruction FSQRT not yet implemented."
	348 NotImplemented "Instruction FCMP not yet implemented."
	349 Move V0, [X31+104]
	350 Move [X20], S8
	351 Move [X20+8], S9
	352 Move [X20+8], S10
	353 Move [X19+8], S13
	354 Move [X19], S0
	355 Move [X19+8], S15
	356 Move V13, [X31+72]
	357 Move V14, [X31+128]
	358 Move TEMP, X21
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {383}
	362 NotImplemented "Instruction ORN not yet implemented."
	363 Move X20, [X31+272]
	364 Move X19, [X31+280]
	365 Move X22, [X31+256]
	366 Move X21, [X31+264]
	367 Move X24, [X31+240]
	368 Move X23, [X31+248]
	369 Move X30, [X31+224]
	370 Move X25, [X31+232]
	371 Move X29, [X31+208]
	372 Move D9, [X31+192]
	373 Move D8, [X31+200]
	374 Move D11, [X31+176]
	375 Move D10, [X31+184]
	376 Move D13, [X31+160]
	377 Move D12, [X31+168]
	378 Move D15, [X31+144]
	379 Move D14, [X31+152]
	380 And W0, W8, 1
	381 Add X31, X31, 288
	382 Return X0
	383 Move S0, [X31+56]
	384 Move S1, [X31+60]
	385 Move V2, [X31+124]
	386 Move V15, [X31+52]
	387 Move X23, 0x8B0000
	388 Multiply S0, S14, S0
	389 Multiply S1, S2, S1
	390 Add S0, S0, S1
	391 Multiply S1, S13, S15
	392 Add S0, S1, S0
	393 NotImplemented "Instruction FCMP not yet implemented."
	394 Move W8, [X23+1925]
	395 Compare W8, 0
	396 JumpIfNotEqual {402}
	397 Move X0, 0x5CB000
	398 Move X0, [X0+1448]
	399 Call 0x1C17CF4
	400 Move W8, 1
	401 Move [X23+1925], W8
	402 Move X0, [X22]
	403 Move S8, [X31+96]
	404 Move S12, [X31+100]
	405 Move S9, [X31+136]
	406 Move S10, [X31+140]
	407 Move W8, [X0+224]
	408 Compare W8, 0
	409 JumpIfNotEqual {411}
	410 Call 0x1C17DFC
	411 Move V0, [X31+104]
	412 Move V2, [X31+124]
	413 Move X8, -50585600
	414 Subtract S11, S8, S10
	415 Subtract S9, S0, S9
	416 Multiply S0, S14, S14
	417 Multiply S1, S2, S2
	418 Add S0, S0, S1
	419 Multiply S1, S13, S13
	420 Add S0, S1, S0
	421 Move V10, [X8+380]
	422 NotImplemented "Instruction FSQRT not yet implemented."
	423 Move V0, [X31+132]
	424 NotImplemented "Instruction FCMP not yet implemented."
	425 Subtract S12, S12, S0
	426 NotImplemented "Instruction FDIV not yet implemented."
	427 NotImplemented "Instruction FDIV not yet implemented."
	428 NotImplemented "Instruction FDIV not yet implemented."
	429 Move W8, [X23+1925]
	430 Compare W8, 0
	431 JumpIfNotEqual {437}
	432 Move X0, 0x5CA000
	433 Move X0, [X0+1448]
	434 Call 0x1C17CF4
	435 Move W8, 1
	436 Move [X23+1925], W8
	437 Move X0, [X22]
	438 Move S9, [X31+96]
	439 Move S8, [X31+100]
	440 Move V10, [X31+104]
	441 Move V12, [X31+120]
	442 Move W8, [X0+224]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 Move V0, [X31+116]
	447 Move V3, [X31+124]
	448 Move X8, -50589696
	449 Subtract S12, S12, S9
	450 Subtract S11, S0, S10
	451 Move V0, [X31+108]
	452 Multiply S1, S3, S3
	453 Move V10, [X8+380]
	454 Move X24, 0x5CA000
	455 Subtract S9, S0, S8
	456 Multiply S0, S14, S14
	457 Multiply S2, S13, S13
	458 Add S0, S0, S1
	459 Move X24, [X24+1440]
	460 Add S0, S2, S0
	461 NotImplemented "Instruction FSQRT not yet implemented."
	462 NotImplemented "Instruction FCMP not yet implemented."
	463 Move X25, 0x8AF000
	464 NotImplemented "Instruction FDIV not yet implemented."
	465 NotImplemented "Instruction FDIV not yet implemented."
	466 NotImplemented "Instruction FDIV not yet implemented."
	467 Move X24, 0x8AF000
	468 Move W8, [X24+1923]
	469 Compare W8, 0
	470 JumpIfNotEqual {476}
	471 Move X0, 0x5CA000
	472 Move X0, [X0+1440]
	473 Call 0x1C17CF4
	474 Move W8, 1
	475 Move [X24+1923], W8
	476 Move X8, 0x5CA000
	477 Move X8, [X8+1440]
	478 Move X8, [X8]
	479 Move X8, [X8+184]
	480 Move S0, [X8]
	481 Move S1, [X8+4]
	482 Move V2, [X8+8]
	483 Multiply S0, S9, S0
	484 Multiply S1, S11, S1
	485 Move W8, [X23+1925]
	486 Multiply S2, S12, S2
	487 Add S0, S0, S1
	488 Add S0, S2, S0
	489 Move S1, 0.5
	490 Multiply S9, S0, S1
	491 Move [X31+216], S9
	492 Compare W8, 0
	493 JumpIfNotEqual {499}
	494 Move X0, 0x5CA000
	495 Move X0, [X0+1448]
	496 Call 0x1C17CF4
	497 Move W8, 1
	498 Move [X23+1925], W8
	499 Move X0, [X22]
	500 Move W8, [X0+224]
	501 Compare W8, 0
	502 JumpIfNotEqual {504}
	503 Call 0x1C17DFC
	504 NotImplemented "Instruction FCMP not yet implemented."
	505 Move V0, [X31+124]
	506 NotImplemented "Instruction FDIV not yet implemented."
	507 NotImplemented "Instruction FDIV not yet implemented."
	508 NotImplemented "Instruction FDIV not yet implemented."
	509 Move W8, [X25+1923]
	510 Compare W8, 0
	511 JumpIfNotEqual {517}
	512 Move X0, 0x5CA000
	513 Move X0, [X0+1440]
	514 Call 0x1C17CF4
	515 Move W8, 1
	516 Move [X25+1923], W8
	517 Move X8, [X24]
	518 Move X8, [X8+184]
	519 Move S0, [X8]
	520 Move S1, [X8+4]
	521 Move V2, [X8+8]
	522 Multiply S0, S11, S0
	523 Multiply S1, S12, S1
	524 Move W8, [X23+1925]
	525 Multiply S2, S9, S2
	526 Add S0, S0, S1
	527 Add S0, S2, S0
	528 Move S1, 0.5
	529 Multiply S9, S0, S1
	530 Move [X31+216], S9
	531 Compare W8, 0
	532 JumpIfNotEqual {538}
	533 Move X0, 0x5CA000
	534 Move X0, [X0+1448]
	535 Call 0x1C17CF4
	536 Move W8, 1
	537 Move [X23+1925], W8
	538 Move X0, [X22]
	539 Move W8, [X0+224]
	540 Compare W8, 0
	541 JumpIfNotEqual {543}
	542 Call 0x1C17DFC
	543 NotImplemented "Instruction FCMP not yet implemented."
	544 Move V0, [X31+124]
	545 NotImplemented "Instruction FDIV not yet implemented."
	546 NotImplemented "Instruction FDIV not yet implemented."
	547 NotImplemented "Instruction FDIV not yet implemented."
	548 Move X24, 0x8AF000
	549 Move W8, [X24+1923]
	550 Compare W8, 0
	551 JumpIfNotEqual {557}
	552 Move X0, 0x5CA000
	553 Move X0, [X0+1440]
	554 Call 0x1C17CF4
	555 Move W8, 1
	556 Move [X24+1923], W8
	557 Move X8, 0x5CA000
	558 Move X8, [X8+1440]
	559 Move X8, [X8]
	560 Move X8, [X8+184]
	561 Move S11, [X8]
	562 Move S12, [X8+4]
	563 Move V13, [X8+8]
	564 Move W8, [X23+1925]
	565 Compare W8, 0
	566 JumpIfNotEqual {572}
	567 Move X0, 0x5CA000
	568 Move X0, [X0+1448]
	569 Call 0x1C17CF4
	570 Move W8, 1
	571 Move [X23+1925], W8
	572 Move X0, [X22]
	573 Move W8, [X0+224]
	574 Compare W8, 0
	575 JumpIfNotEqual {577}
	576 Call 0x1C17DFC
	577 Move S3, [X31+56]
	578 Move S2, [X31+60]
	579 Multiply S0, S3, S3
	580 Multiply S1, S2, S2
	581 Add S0, S0, S1
	582 Multiply S1, S15, S15
	583 Add S0, S1, S0
	584 NotImplemented "Instruction FSQRT not yet implemented."
	585 NotImplemented "Instruction FCMP not yet implemented."
	586 NotImplemented "Instruction FDIV not yet implemented."
	587 NotImplemented "Instruction FDIV not yet implemented."
	588 NotImplemented "Instruction FDIV not yet implemented."
	589 Move W8, [X25+1923]
	590 Compare W8, 0
	591 JumpIfNotEqual {597}
	592 Move X0, 0x5CA000
	593 Move X0, [X0+1440]
	594 Call 0x1C17CF4
	595 Move W8, 1
	596 Move [X25+1923], W8
	597 Move X8, [X24]
	598 Move X8, [X8+184]
	599 Move S11, [X8]
	600 Move S12, [X8+4]
	601 Move V13, [X8+8]
	602 Move W8, [X23+1925]
	603 Compare W8, 0
	604 JumpIfNotEqual {610}
	605 Move X0, 0x5CA000
	606 Move X0, [X0+1448]
	607 Call 0x1C17CF4
	608 Move W8, 1
	609 Move [X23+1925], W8
	610 Move X0, [X22]
	611 Move W8, [X0+224]
	612 Compare W8, 0
	613 JumpIfNotEqual {615}
	614 Call 0x1C17DFC
	615 Move S3, [X31+56]
	616 Move S2, [X31+60]
	617 Multiply S0, S3, S3
	618 Multiply S1, S2, S2
	619 Add S0, S0, S1
	620 Multiply S1, S15, S15
	621 Add S0, S1, S0
	622 NotImplemented "Instruction FSQRT not yet implemented."
	623 NotImplemented "Instruction FCMP not yet implemented."
	624 NotImplemented "Instruction FDIV not yet implemented."
	625 NotImplemented "Instruction FDIV not yet implemented."
	626 NotImplemented "Instruction FDIV not yet implemented."
	627 Move X23, 0x8AF000
	628 Move W8, [X23+1923]
	629 Compare W8, 0
	630 JumpIfNotEqual {636}
	631 Move X0, 0x5CA000
	632 Move X0, [X0+1440]
	633 Call 0x1C17CF4
	634 Move W8, 1
	635 Move [X23+1923], W8
	636 Move X8, 0x5CA000
	637 Move X8, [X8+1440]
	638 Move X8, [X8]
	639 Move X8, [X8+184]
	640 Move S10, [X8]
	641 Move S14, [X8+4]
	642 Move V15, [X8+8]
	643 NotImplemented "Instruction FCMP not yet implemented."
	644 Move X23, 0x8AF000
	645 Move W8, [X23+1924]
	646 Compare W8, 0
	647 JumpIfNotEqual {653}
	648 Move X0, 0x5CA000
	649 Move X0, [X0+1448]
	650 Call 0x1C17CF4
	651 Move W8, 1
	652 Move [X23+1924], W8
	653 Move X0, [X22]
	654 Move W8, [X0+224]
	655 Compare W8, 0
	656 JumpIfNotEqual {658}
	657 Call 0x1C17DFC
	658 NotImplemented "Instruction FCMP not yet implemented."
	659 Move V6, [X31+136]
	660 Multiply S0, S9, S11
	661 Multiply S1, S9, S12
	662 Multiply S2, S9, S13
	663 Add S0, S6, S0
	664 Move V6, [X31+140]
	665 Multiply S3, S9, S10
	666 Multiply S4, S9, S14
	667 Multiply S5, S9, S15
	668 Add S1, S6, S1
	669 Move V6, [X31+132]
	670 Add S2, S6, S2
	671 Move W8, [X25+1923]
	672 Compare W8, 0
	673 JumpIfNotEqual {679}
	674 Move X0, 0x5CA000
	675 Move X0, [X0+1440]
	676 Call 0x1C17CF4
	677 Move W8, 1
	678 Move [X25+1923], W8
	679 Move X8, [X24]
	680 Move X8, [X8+184]
	681 Move S10, [X8]
	682 Move S14, [X8+4]
	683 Move V15, [X8+8]
	684 NotImplemented "Instruction FCMP not yet implemented."
	685 Move X23, 0x8AF000
	686 Move W8, [X23+1924]
	687 Compare W8, 0
	688 JumpIfNotEqual {694}
	689 Move X0, 0x5CA000
	690 Move X0, [X0+1448]
	691 Call 0x1C17CF4
	692 Move W8, 1
	693 Move [X23+1924], W8
	694 Move X0, [X22]
	695 Move W8, [X0+224]
	696 Compare W8, 0
	697 JumpIfNotEqual {699}
	698 Call 0x1C17DFC
	699 NotImplemented "Instruction FCMP not yet implemented."
	700 Move V6, [X31+116]
	701 Multiply S0, S9, S11
	702 Multiply S1, S9, S12
	703 Multiply S2, S9, S13
	704 Subtract S0, S6, S0
	705 Move V6, [X31+120]
	706 Multiply S3, S9, S10
	707 Multiply S4, S9, S14
	708 Multiply S5, S9, S15
	709 Subtract S1, S6, S1
	710 Move V6, [X31+108]
	711 Subtract S2, S6, S2
	712 Move V6, [X31+104]
	713 Move [X20], S0
	714 Move [X20+8], S1
	715 Move [X20+8], S2
	716 Subtract S3, S6, S3
	717 Move V6, [X31+96]
	718 Subtract S4, S6, S4
	719 Move V6, [X31+100]
	720 Move [X19], S3
	721 Move [X19+8], S4
	722 Subtract S5, S6, S5
	723 Move [X19+8], S5

Method: UnityEngine.Vector3 ClosestPointOnLineSegment(UnityEngine.Vector3 point, UnityEngine.Vector3 a, UnityEngine.Vector3 b)

Disassembly:
	0x03B28D68 LDR V0, [X31 + 0x4C]
	0x03B28D6C FSUB S8, S14, S0
	0x03B28D70 CBNZ W8, 0x3B28D78
	0x03B28D74 BL 0x1C16DFC
	0x03B28D78 FMUL S0, S11, S11
	0x03B28D7C FMUL S1, S10, S10
	0x03B28D80 FADD S0, S0, S1
	0x03B28D84 FMUL S1, S8, S8
	0x03B28D88 LDP S11, S8, [X31 + 0x88]
	0x03B28D8C FADD S0, S1, S0
	0x03B28D90 FSQRT S0, S0
	0x03B28D94 FCMP S0, S9
	0x03B28D98 B.PL 0x3B28DBC
	0x03B28D9C LDR V2, [X31 + 0x70]
	0x03B28DA0 LDR V1, [X31 + 0x50]
	0x03B28DA4 STP S13, S12, [X20]
	0x03B28DA8 STR S14, [X20 + 0x8]
	0x03B28DAC MOV V9.16B, V0.16B
	0x03B28DB0 STP S2, S1, [X19]
	0x03B28DB4 LDR V1, [X31 + 0x4C]
	0x03B28DB8 STR S1, [X19 + 0x8]
	0x03B28DBC LDR X0, [X23]
	0x03B28DC0 STR S9, [X31 + 0x70]
	0x03B28DC4 LDR W8, [X0 + 0xE0]
	0x03B28DC8 CBNZ W8, 0x3B28DD0
	0x03B28DCC BL 0x1C16DFC
	0x03B28DD0 STP S13, S12, [X31]
	0x03B28DD4 LDP S13, S9, [X31 + 0x54]
	0x03B28DD8 LDR V10, [X31 + 0x5C]
	0x03B28DDC MOV V3.16B, V11.16B
	0x03B28DE0 MOV V4.16B, V8.16B
	0x03B28DE4 MOV V0.16B, V13.16B
	0x03B28DE8 MOV V1.16B, V9.16B
	0x03B28DEC MOV V2.16B, V10.16B
	0x03B28DF0 MOV V5.16B, V15.16B
	0x03B28DF4 STR S14, [X31 + 0x8]
	0x03B28DF8 BL 0x3B27D68
	0x03B28DFC LDRB W8, [X24 + 0x85C]
	0x03B28E00 MOV V8.16B, V0.16B
	0x03B28E04 MOV V11.16B, V1.16B
	0x03B28E08 MOV V12.16B, V2.16B
	0x03B28E0C CBNZ W8, 0x3B28E24
	0x03B28E10 ADRP X0, 0x5CB000
	0x03B28E14 LDR X0, [X0 + 0x5A8]
	0x03B28E18 BL 0x1C16CF4
	0x03B28E1C MOVZ W8, 0x1
	0x03B28E20 STRB W8, [X24 + 0x85C]
	0x03B28E24 LDR X0, [X22]
	0x03B28E28 FSUB S13, S13, S8
	0x03B28E2C FSUB S15, S9, S11
	0x03B28E30 FSUB S10, S10, S12
	0x03B28E34 LDR W8, [X0 + 0xE0]
	0x03B28E38 CBNZ W8, 0x3B28E40
	0x03B28E3C BL 0x1C16DFC
	0x03B28E40 FMUL S0, S13, S13
	0x03B28E44 FMUL S1, S15, S15
	0x03B28E48 FADD S0, S0, S1
	0x03B28E4C FMUL S1, S10, S10
	0x03B28E50 FADD S0, S1, S0
	0x03B28E54 LDR V1, [X31 + 0x70]
	0x03B28E58 FSQRT S0, S0
	0x03B28E5C FCMP S0, S1
	0x03B28E60 B.PL 0x3B28E84
	0x03B28E64 LDR V2, [X31 + 0x54]
	0x03B28E68 LDR V1, [X31 + 0x58]
	0x03B28E6C STP S8, S11, [X20]
	0x03B28E70 STR S12, [X20 + 0x8]
	0x03B28E74 STP S2, S1, [X19]
	0x03B28E78 LDR V1, [X31 + 0x5C]
	0x03B28E7C STR S1, [X19 + 0x8]
	0x03B28E80 MOV V1.16B, V0.16B
	0x03B28E84 LDR X0, [X23]
	0x03B28E88 LDP S15, S13, [X31 + 0x60]
	0x03B28E8C STR S1, [X31 + 0x70]
	0x03B28E90 LDR W8, [X0 + 0xE0]
	0x03B28E94 CBNZ W8, 0x3B28E9C
	0x03B28E98 BL 0x1C16DFC
	0x03B28E9C LDR V1, [X31 + 0x78]
	0x03B28EA0 LDR V0, [X31 + 0x74]
	0x03B28EA4 LDR V11, [X31 + 0x68]
	0x03B28EA8 LDP S3, S4, [X31 + 0x88]
	0x03B28EAC LDR V5, [X31 + 0x84]
	0x03B28EB0 STP S0, S1, [X31]
	0x03B28EB4 MOV V0.16B, V11.16B
	0x03B28EB8 MOV V1.16B, V15.16B
	0x03B28EBC MOV V2.16B, V13.16B
	0x03B28EC0 STR S14, [X31 + 0x8]
	0x03B28EC4 BL 0x3B27D68
	0x03B28EC8 LDRB W8, [X24 + 0x85C]
	0x03B28ECC MOV V8.16B, V0.16B
	0x03B28ED0 MOV V9.16B, V1.16B
	0x03B28ED4 MOV V10.16B, V2.16B
	0x03B28ED8 CBNZ W8, 0x3B28EF0
	0x03B28EDC ADRP X0, 0x5CB000
	0x03B28EE0 LDR X0, [X0 + 0x5A8]
	0x03B28EE4 BL 0x1C16CF4
	0x03B28EE8 MOVZ W8, 0x1
	0x03B28EEC STRB W8, [X24 + 0x85C]
	0x03B28EF0 LDR X0, [X22]
	0x03B28EF4 FSUB S14, S11, S8
	0x03B28EF8 FSUB S12, S15, S9
	0x03B28EFC FSUB S11, S13, S10
	0x03B28F00 LDR W8, [X0 + 0xE0]
	0x03B28F04 CBNZ W8, 0x3B28F0C
	0x03B28F08 BL 0x1C16DFC
	0x03B28F0C FMUL S0, S14, S14
	0x03B28F10 FMUL S1, S12, S12
	0x03B28F14 FADD S0, S0, S1
	0x03B28F18 FMUL S1, S11, S11
	0x03B28F1C FADD S0, S1, S0
	0x03B28F20 LDR V1, [X31 + 0x70]
	0x03B28F24 FSQRT S0, S0
	0x03B28F28 FCMP S0, S1
	0x03B28F2C B.PL 0x3B28F44
	0x03B28F30 LDR V0, [X31 + 0x68]
	0x03B28F34 STP S8, S9, [X20]
	0x03B28F38 STR S10, [X20 + 0x8]
	0x03B28F3C STR S13, [X19 + 0x8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X19
	012 Move X19, 0x8B1000
	013 Move S13, [X31+100]
	014 Move S11, [X31+104]
	015 Move W8, [X19+1925]
	016 Move V15, [X31+96]
	017 Move V10, V3
	018 Move V12, V0
	019 Compare W8, 0
	020 JumpIfNotEqual {36}
	021 Move X0, 0x5CC000
	022 Move X0, [X0+1448]
	023 Move V8, V5
	024 Move V9, V4
	025 Move V14, V2
	026 Move [X31+12], S12
	027 Move V12, V1
	028 Call 0x1C17CF4
	029 Move V1, V12
	030 Move V12, [X31+12]
	031 Move V2, V14
	032 Move V4, V9
	033 Move V5, V8
	034 Move W8, 1
	035 Move [X19+1925], W8
	036 Move X8, 0x5CC000
	037 Move X8, [X8+1448]
	038 Subtract S9, S15, S10
	039 Subtract S8, S13, S4
	040 Subtract S14, S11, S5
	041 Move X0, [X8]
	042 Move [X31+4], S15
	043 Move [X31+12], S11
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {60}
	047 Move V15, V5
	048 Move [X31], S10
	049 Move V10, V4
	050 Move V11, V2
	051 Move [X31+12], S12
	052 Move V12, V1
	053 Call 0x1C17DFC
	054 Move V1, V12
	055 Move V12, [X31+12]
	056 Move V4, V10
	057 Move V10, [X31]
	058 Move V2, V11
	059 Move V5, V15
	060 Move X8, -50581504
	061 Multiply S0, S9, S9
	062 Multiply S3, S8, S8
	063 Move V6, [X8+380]
	064 Add S0, S0, S3
	065 Multiply S3, S14, S14
	066 Add S15, S3, S0
	067 NotImplemented "Instruction FSQRT not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction FDIV not yet implemented."
	070 NotImplemented "Instruction FDIV not yet implemented."
	071 NotImplemented "Instruction FDIV not yet implemented."
	072 Move X19, 0x8B1000
	073 Move W8, [X19+1923]
	074 Compare W8, 0
	075 JumpIfNotEqual {89}
	076 Move X0, 0x5CC000
	077 Move X0, [X0+1440]
	078 Move V8, V5
	079 Move V9, V4
	080 Move V14, V2
	081 Move V11, V1
	082 Call 0x1C17CF4
	083 Move V1, V11
	084 Move V2, V14
	085 Move V4, V9
	086 Move V5, V8
	087 Move W8, 1
	088 Move [X19+1923], W8
	089 Move X8, 0x5CC000
	090 Move X8, [X8+1440]
	091 Move X8, [X8]
	092 Move X8, [X8+184]
	093 Move S18, [X8]
	094 Move S17, [X8+4]
	095 Move V16, [X8+8]
	096 Subtract S3, S12, S10
	097 Subtract S7, S1, S4
	098 Subtract S6, S2, S5
	099 Multiply S3, S3, S18
	100 Multiply S7, S7, S17
	101 Add S3, S3, S7
	102 Multiply S6, S6, S16
	103 Add S3, S6, S3
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move S0, [X31+4]
	106 Move S2, [X31+8]
	107 Multiply S6, S3, S3
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 Multiply S0, S18, S3
	110 Multiply S1, S17, S3
	111 Multiply S2, S16, S3
	112 Add S0, S10, S0
	113 Add S13, S4, S1
	114 Add S2, S5, S2
	115 Move V0, V10
	116 Move V13, V4
	117 Move V2, V5
	118 Move V1, V13
	119 Move X30, [X31+80]
	120 Move X19, [X31+88]
	121 Move D9, [X31+64]
	122 Move D8, [X31+72]
	123 Move D11, [X31+48]
	124 Move D10, [X31+56]
	125 Move D13, [X31+32]
	126 Move D12, [X31+40]
	127 Move D15, [X31+16]
	128 Move D14, [X31+24]
	129 Add X31, X31, 96
	130 Return X0

Method: System.Void ClosestPolygonApproach(System.Collections.Generic.List`1<UnityEngine.Vector3> verticesA, System.Collections.Generic.List`1<UnityEngine.Vector3> verticesB, out UnityEngine.Vector3 pointA, out UnityEngine.Vector3 pointB, System.Single parallelTest = 0)

Disassembly:
	0x03B2A494 LDR X2, [X21]
	0x03B2A498 MOV X0, X19
	0x03B2A49C MOV W1, W20
	0x03B2A4A0 BL 0x30CBE84
	0x03B2A4A4 FCVT S0, S0
	0x03B2A4A8 FCVT S1, S2
	0x03B2A4AC LDR X2, [X21]
	0x03B2A4B0 FMUL D2, D9, D1
	0x03B2A4B4 FMUL D3, D12, D0
	0x03B2A4B8 FADD D0, D9, D0
	0x03B2A4BC FADD D1, D12, D1
	0x03B2A4C0 FSUB D2, D2, D3
	0x03B2A4C4 FMUL D0, D0, D2
	0x03B2A4C8 FMUL D1, D1, D2
	0x03B2A4CC MOV X0, X19
	0x03B2A4D0 MOV W1, W20
	0x03B2A4D4 FADD D8, D8, D2
	0x03B2A4D8 FADD D11, D11, D0
	0x03B2A4DC FADD D10, D10, D1
	0x03B2A4E0 BL 0x30CBE84
	0x03B2A4E4 ADD W20, W20, 0x1
	0x03B2A4E8 FCVT S9, S0
	0x03B2A4EC CMP W22, W20
	0x03B2A4F0 FCVT S12, S2
	0x03B2A4F4 B.NE 0x3B2A494
	0x03B2A4F8 B 0x3B2A508
	0x03B2A4FC FMOV D10, X31
	0x03B2A500 FMOV D11, X31
	0x03B2A504 FMOV D8, X31
	0x03B2A508 LDR X2, [X21]
	0x03B2A50C MOV X0, X19
	0x03B2A510 MOV W1, W31
	0x03B2A514 BL 0x30CBE84
	0x03B2A518 FCVT S0, S0
	0x03B2A51C FCVT S1, S2
	0x03B2A520 FMUL D3, D9, D1
	0x03B2A524 FADD D4, D9, D0
	0x03B2A528 FMUL D0, D12, D0
	0x03B2A52C FADD D1, D12, D1
	0x03B2A530 FSUB D0, D3, D0
	0x03B2A534 FMOV D2, 0.5
	0x03B2A538 FADD D3, D8, D0
	0x03B2A53C FMUL D4, D4, D0
	0x03B2A540 FMUL D0, D1, D0
	0x03B2A544 FMOV D5, 4.000000000465661
	0x03B2A548 FADD D1, D11, D4
	0x03B2A54C FADD D0, D10, D0
	0x03B2A550 FMUL D2, D3, D2
	0x03B2A554 LDP X20, X19, [X31 + 0x40]
	0x03B2A558 LDP X22, X21, [X31 + 0x30]
	0x03B2A55C LDR X30, [X31 + 0x28]
	0x03B2A560 LDP D9, D8, [X31 + 0x18]
	0x03B2A564 LDP D11, D10, [X31 + 0x8]
	0x03B2A568 FMUL D2, D2, D5
	0x03B2A56C FDIV D1, D1, D2
	0x03B2A570 FDIV D2, D0, D2
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B2A57C FMOV S1, W31
	0x03B2A580 LDR V12, [X31], #0x50
	0x03B2A584 RET
	0x03B2A588 BL 0x1C16F20
	0x03B2A58C SUB X31, X31, 0x190
	0x03B2A590 STP D15, D14, [X31 + 0xF0]
	0x03B2A594 STP D13, D12, [X31 + 0x100]
	0x03B2A598 STP D11, D10, [X31 + 0x110]
	0x03B2A59C STP D9, D8, [X31 + 0x120]
	0x03B2A5A0 STP X29, X30, [X31 + 0x130]
	0x03B2A5A4 STP X28, X27, [X31 + 0x140]
	0x03B2A5A8 STP X26, X25, [X31 + 0x150]
	0x03B2A5AC STP X24, X23, [X31 + 0x160]
	0x03B2A5B0 STP X22, X21, [X31 + 0x170]
	0x03B2A5B4 STP X20, X19, [X31 + 0x180]
	0x03B2A5B8 ADRP X21, 0x8B8000
	0x03B2A5BC LDRB W8, [X21 + 0x782]
	0x03B2A5C0 MOV X19, X1
	0x03B2A5C4 MOV X20, X0
	0x03B2A5C8 TBNZ X8, 0x0, 0x3B2A61C
	0x03B2A5CC ADRP X0, 0x62F000
	0x03B2A5D0 LDR X0, [X0 + 0xD10]
	0x03B2A5D4 BL 0x1C16CF4
	0x03B2A5D8 ADRP X0, 0x5CD000
	0x03B2A5DC LDR X0, [X0 + 0x3B8]
	0x03B2A5E0 BL 0x1C16CF4
	0x03B2A5E4 ADRP X0, 0x5CD000
	0x03B2A5E8 LDR X0, [X0 + 0x380]
	0x03B2A5EC BL 0x1C16CF4
	0x03B2A5F0 ADRP X0, 0x5CD000
	0x03B2A5F4 LDR X0, [X0 + 0x978]
	0x03B2A5F8 BL 0x1C16CF4
	0x03B2A5FC ADRP X0, 0x5CD000
	0x03B2A600 LDR X0, [X0 + 0x980]
	0x03B2A604 BL 0x1C16CF4
	0x03B2A608 ADRP X0, 0x5C9000
	0x03B2A60C LDR X0, [X0 + 0x5A8]
	0x03B2A610 BL 0x1C16CF4
	0x03B2A614 MOVZ W8, 0x1
	0x03B2A618 STRB W8, [X21 + 0x782]
	0x03B2A61C MOVI D0, 0x0
	0x03B2A620 ADRP X8, 0xFFFFFFFFFCFC3000
	0x03B2A624 STR D0, [X31 + 0xE0]
	0x03B2A628 STR D0, [X31 + 0xD0]
	0x03B2A62C LDR V0, [X8 + 0x648]
	0x03B2A630 MOVZ W8, 0x3F800000
	0x03B2A634 STR W8, [X31 + 0xE8]
	0x03B2A638 ADRP X8, 0xFFFFFFFFFCFC4000
	0x03B2A63C STR D0, [X31 + 0xC0]
	0x03B2A640 LDR V0, [X8 + 0x378]
	0x03B2A644 MOVZ W8, 0xBF800000
	0x03B2A648 STR W31, [X31 + 0x98]
	0x03B2A64C STR X31, [X31 + 0x90]
	0x03B2A650 STR W31, [X31 + 0x88]
	0x03B2A654 STR X31, [X31 + 0x80]
	0x03B2A658 STR W31, [X31 + 0x78]
	0x03B2A65C STR X31, [X31 + 0x70]
	0x03B2A660 STR W31, [X31 + 0x68]
	0x03B2A664 STR X31, [X31 + 0x60]
	0x03B2A668 STR W31, [X31 + 0xC8]
	0x03B2A66C STR W31, [X31 + 0xB8]
	0x03B2A670 STP X31, X31, [X31 + 0xA0]
	0x03B2A674 STR W8, [X31 + 0xD8]
	0x03B2A678 STR D0, [X31 + 0xB0]
	0x03B2A67C CBZ X20, 0x3B2AF0C
	0x03B2A680 LDR W26, [X20 + 0x18]
	0x03B2A684 ADRP X27, 0x62F000
	0x03B2A688 LDR X27, [X27 + 0xD10]
	0x03B2A68C ADRP X28, 0x5CD000
	0x03B2A690 SUBS W8, W26, 0x1
	0x03B2A694 STR W8, [X31 + 0x5C]
	0x03B2A698 LDR X28, [X28 + 0x980]
	0x03B2A69C B.LT 0x3B2A720
	0x03B2A6A0 MOVN W8, 0x800000
	0x03B2A6A4 MOVN W9, 0x80800000
	0x03B2A6A8 FMOV S8, W8
	0x03B2A6AC FMOV S9, W9
	0x03B2A6B0 MOV W22, W31
	0x03B2A6B4 MOV W23, W31
	0x03B2A6B8 MOV W24, W31
	0x03B2A6BC MOV W25, W31
	0x03B2A6C0 MOV W21, W31
	0x03B2A6C4 MOV V10.16B, V9.16B
	0x03B2A6C8 MOV V11.16B, V8.16B
	0x03B2A6CC LDR X2, [X28]
	0x03B2A6D0 MOV X0, X20
	0x03B2A6D4 MOV W1, W21
	0x03B2A6D8 BL 0x30CBE84
	0x03B2A6DC FCMP S0, S9
	0x03B2A6E0 CSEL W25, W21, W25, MI
	0x03B2A6E4 FCSEL S9, S0, S9, MI
	0x03B2A6E8 FCMP S0, S8
	0x03B2A6EC CSEL W24, W21, W24, GT
	0x03B2A6F0 FCSEL S8, S0, S8, GT
	0x03B2A6F4 FCMP S2, S10
	0x03B2A6F8 CSEL W23, W21, W23, MI
	0x03B2A6FC FCSEL S10, S2, S10, MI
	0x03B2A700 FCMP S2, S11
	0x03B2A704 CSEL W22, W21, W22, GT
	0x03B2A708 ADD W21, W21, 0x1
	0x03B2A70C FCSEL S11, S2, S11, GT
	0x03B2A710 CMP W26, W21
	0x03B2A714 B.NE 0x3B2A6CC
	0x03B2A718 STP W24, W25, [X31 + 0xA8]
	0x03B2A71C STP W23, W22, [X31 + 0xA0]
	0x03B2A720 LDR X0, [X27]
	0x03B2A724 LDR W8, [X0 + 0xE0]
	0x03B2A728 CBNZ W8, 0x3B2A734
	0x03B2A72C BL 0x1C16DFC
	0x03B2A730 LDR X0, [X27]
	0x03B2A734 LDR X8, [X0 + 0xB8]
	0x03B2A738 LDR X8, [X8 + 0x38]
	0x03B2A73C CBZ X8, 0x3B2AF0C
	0x03B2A740 ADRP X29, 0x5CD000
	0x03B2A744 LDR X29, [X29 + 0x3B8]
	0x03B2A748 LDR W9, [X8 + 0x1C]
	0x03B2A74C LDR W10, [X31 + 0x5C]
	0x03B2A750 ADRP X23, 0x8AE000
	0x03B2A754 ADRP X21, 0x8AE000
	0x03B2A758 ADD W9, W9, 0x1
	0x03B2A75C CMP W10, 0x1
	0x03B2A760 STP W31, W9, [X8 + 0x18]
	0x03B2A764 B.LT 0x3B2A8DC
	0x03B2A768 ADRP X8, 0xFFFFFFFFFCFC0000
	0x03B2A76C LDR V14, [X8 + 0x17C]
	0x03B2A770 MOVZ W22, 0x1
	0x03B2A774 MOVZ W24, 0x1
	0x03B2A778 LDR X2, [X28]
	0x03B2A77C MOV X0, X20
	0x03B2A780 MOV W1, W24
	0x03B2A784 SUB W25, W24, 0x1
	0x03B2A788 BL 0x30CBE84
	0x03B2A78C LDR X2, [X28]
	0x03B2A790 MOV X0, X20
	0x03B2A794 MOV W1, W25
	0x03B2A798 MOV V8.16B, V0.16B
	0x03B2A79C MOV V9.16B, V1.16B
	0x03B2A7A0 MOV V10.16B, V2.16B
	0x03B2A7A4 BL 0x30CBE84
	0x03B2A7A8 LDRB W8, [X23 + 0x785]
	0x03B2A7AC MOV V11.16B, V0.16B
	0x03B2A7B0 MOV V12.16B, V1.16B
	0x03B2A7B4 MOV V13.16B, V2.16B
	0x03B2A7B8 CBNZ W8, 0x3B2A7CC
	0x03B2A7BC ADRP X0, 0x5C9000
	0x03B2A7C0 LDR X0, [X0 + 0x5A8]
	0x03B2A7C4 BL 0x1C16CF4
	0x03B2A7C8 STRB W22, [X23 + 0x785]
	0x03B2A7CC ADRP X8, 0x5C9000
	0x03B2A7D0 LDR X8, [X8 + 0x5A8]
	0x03B2A7D4 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+160], D15
	003 Move [X31+168], D14
	004 Move [X31+176], D13
	005 Move [X31+184], D12
	006 Move [X31+192], D11
	007 Move [X31+200], D10
	008 Move [X31+208], D9
	009 Move [X31+216], D8
	010 Move [X31+224], X29
	011 Move [X31+232], X30
	012 Move [X31+240], X28
	013 Move [X31+248], X27
	014 Move [X31+256], X26
	015 Move [X31+264], X25
	016 Move [X31+272], X24
	017 Move [X31+280], X23
	018 Move [X31+288], X22
	019 Move [X31+296], X21
	020 Move [X31+304], X20
	021 Move [X31+312], X19
	022 Move X22, 0x8B9000
	023 Move W8, [X22+1917]
	024 Move X19, X3
	025 Move X20, X2
	026 Move X21, X1
	027 Move [X31+84], S0
	028 Move [X31+72], X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {44}
	033 Move X0, 0x630000
	034 Move X0, [X0+3344]
	035 Call 0x1C17CF4
	036 Move X0, 0x5CE000
	037 Move X0, [X0+2424]
	038 Call 0x1C17CF4
	039 Move X0, 0x5CE000
	040 Move X0, [X0+2432]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+1917], W8
	044 Move X8, [X31+72]
	045 Move [X31+152], W31
	046 Move [X31+144], X31
	047 Move [X31+136], W31
	048 Move [X31+128], X31
	049 Move [X20+8], W31
	050 Move [X20], X31
	051 Move [X19+8], W31
	052 Move [X19], X31
	053 Compare X8, 0
	054 JumpIfEqual {247}
	055 Compare X21, 0
	056 JumpIfEqual {247}
	057 Move X27, 0x5CE000
	058 Move X27, [X27+2432]
	059 Move X0, [X31+72]
	060 Move W8, [X21+24]
	061 Move W1, W31
	062 Move X2, [X27]
	063 Move W22, [X0+24]
	064 Move [X31+68], W8
	065 Call List`1<Vector3>.get_Item, X0, X1
	066 Move X2, [X27]
	067 Move X0, X21
	068 Move W1, W31
	069 Move [X31+56], S1
	070 Move [X31+64], S0
	071 Move [X31+52], S2
	072 Call List`1<Vector3>.get_Item, X0, X1
	073 Subtract W8, W22, 1
	074 Move [X31+100], S1
	075 Move [X31+108], S0
	076 Move [X31+64], W22
	077 Move [X31+48], W8
	078 Move [X31+96], S2
	079 Move X28, 0x630000
	080 Move X28, [X28+3344]
	081 Move V0, [X31+84]
	082 Move W8, [X31+68]
	083 Move X24, 0x5CA000
	084 Move W23, W31
	085 NotImplemented "Instruction FCVT not yet implemented."
	086 Move [X31+88], D0
	087 Move X24, [X24+1448]
	088 Subtract W29, W31, W8
	089 Move TEMP, 0x80800000
	090 Not TEMP
	091 Move W8, TEMP
	092 Move X22, 0x8AF000
	093 Move S8, W8
	094 Move X2, [X27]
	095 Move X0, [X31+72]
	096 Move W1, W23
	097 Call List`1<Vector3>.get_Item, X0, X1
	098 Move W8, [X31+48]
	099 Move [X31+120], S1
	100 Move [X31+128], S0
	101 Move [X31+116], S2
	102 Move S1, [X31+56]
	103 Move S0, [X31+60]
	104 Move V2, [X31+52]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X2, [X27]
	107 Move X0, [X31+72]
	108 Add W1, W23, 1
	109 Call List`1<Vector3>.get_Item, X0, X1
	110 Move W8, [X31+68]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move V3, [X31+116]
	113 Move W25, 1
	114 Subtract S4, S2, S3
	115 Move V2, [X31+120]
	116 Subtract S1, S1, S2
	117 Move [X31+108], S1
	118 Move [X31+116], S4
	119 Move V1, [X31+124]
	120 Subtract S12, S0, S1
	121 Move X2, [X27]
	122 Subtract W1, W25, 1
	123 Move X0, X21
	124 Add W26, W29, W25
	125 Call List`1<Vector3>.get_Item, X0, X1
	126 Move S10, [X31+100]
	127 Move S9, [X31+104]
	128 Move V11, [X31+96]
	129 Move V14, V0
	130 Move V15, V1
	131 Move V13, V2
	132 Compare W26, 0
	133 JumpIfEqual {141}
	134 Move X2, [X27]
	135 Move X0, X21
	136 Move W1, W25
	137 Call List`1<Vector3>.get_Item, X0, X1
	138 Move V9, V0
	139 Move V10, V1
	140 Move V11, V2
	141 Move X0, [X28]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Subtract S0, S9, S14
	147 Subtract S1, S10, S15
	148 Subtract S2, S11, S13
	149 Move V3, [X31+88]
	150 Move [X31+20], S1
	151 Move [X31+28], S2
	152 Move [X31+16], S0
	153 Move S1, [X31+120]
	154 Move S0, [X31+124]
	155 Move S5, [X31+112]
	156 Move S2, [X31+116]
	157 Move V4, [X31+108]
	158 Move [X31+32], D3
	159 Add X0, X31, 144
	160 Add X1, X31, 128
	161 Move V3, V12
	162 Move [X31], S14
	163 Move [X31+8], S15
	164 Move [X31+8], S13
	165 Call GeometryUtils.ClosestPointsOnTwoLineSegments, X0, X1, X2, X3, X4, X5, V0
	166 Move S11, [X31+144]
	167 Move S10, [X31+148]
	168 Move V9, [X31+152]
	169 Move S13, [X31+128]
	170 Move S14, [X31+132]
	171 Move W8, [X22+2140]
	172 Move V15, [X31+136]
	173 Move W26, W0
	174 Compare W8, 0
	175 JumpIfNotEqual {180}
	176 Move X0, X24
	177 Call 0x1C17CF4
	178 Move W8, 1
	179 Move [X22+2140], W8
	180 Move X0, [X24]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Subtract S0, S11, S13
	186 Subtract S1, S10, S14
	187 Subtract S2, S9, S15
	188 Multiply S0, S0, S0
	189 Multiply S1, S1, S1
	190 Add S0, S0, S1
	191 Multiply S1, S2, S2
	192 Add S0, S1, S0
	193 NotImplemented "Instruction FSQRT not yet implemented."
	194 Move TEMP, X26
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {209}
	198 Move V2, [X31+84]
	199 Subtract S1, S0, S8
	200 NotImplemented "Instruction FCMP not yet implemented."
	201 Move W8, [X31+152]
	202 Move X9, [X31+144]
	203 Move V1, [X31+84]
	204 Move [X20+8], W8
	205 Move [X20], X9
	206 Move W8, [X31+136]
	207 Move X9, [X31+128]
	208 Subtract S8, S0, S1
	209 NotImplemented "Instruction FCMP not yet implemented."
	210 Move W8, [X31+152]
	211 Move X9, [X31+144]
	212 Move V8, V0
	213 Move [X20+8], W8
	214 Move [X20], X9
	215 Move W8, [X31+136]
	216 Move X9, [X31+128]
	217 Move [X19+8], W8
	218 Move [X19], X9
	219 Add W25, W25, 1
	220 Add W8, W29, W25
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move W8, [X31+64]
	223 Add W23, W23, 1
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X20, [X31+304]
	226 Move X19, [X31+312]
	227 Move X22, [X31+288]
	228 Move X21, [X31+296]
	229 Move X24, [X31+272]
	230 Move X23, [X31+280]
	231 Move X26, [X31+256]
	232 Move X25, [X31+264]
	233 Move X28, [X31+240]
	234 Move X27, [X31+248]
	235 Move X29, [X31+224]
	236 Move X30, [X31+232]
	237 Move D9, [X31+208]
	238 Move D8, [X31+216]
	239 Move D11, [X31+192]
	240 Move D10, [X31+200]
	241 Move D13, [X31+176]
	242 Move D12, [X31+184]
	243 Move D15, [X31+160]
	244 Move D14, [X31+168]
	245 Add X31, X31, 320
	246 Return 
	247 Call 0x1C17F20

Method: System.Boolean PointInPolygon(UnityEngine.Vector3 testPoint, System.Collections.Generic.List`1<UnityEngine.Vector3> vertices)

Disassembly:
	0x03B2A7D8 LDR W8, [X0 + 0xE0]
	0x03B2A7DC CBNZ W8, 0x3B2A7E4
	0x03B2A7E0 BL 0x1C16DFC
	0x03B2A7E4 FSUB S0, S8, S11
	0x03B2A7E8 FSUB S1, S9, S12
	0x03B2A7EC FSUB S2, S10, S13
	0x03B2A7F0 FMUL S3, S0, S0
	0x03B2A7F4 FMUL S4, S1, S1
	0x03B2A7F8 FADD S3, S3, S4
	0x03B2A7FC FMUL S4, S2, S2
	0x03B2A800 FADD S3, S4, S3
	0x03B2A804 FSQRT S3, S3
	0x03B2A808 FCMP S3, S14
	0x03B2A80C B.LE 0x3B2A820
	0x03B2A810 FDIV S8, S0, S3
	0x03B2A814 FDIV S9, S1, S3
	0x03B2A818 FDIV S10, S2, S3
	0x03B2A81C B 0x3B2A850
	0x03B2A820 LDRB W8, [X21 + 0x783]
	0x03B2A824 CBNZ W8, 0x3B2A838
	0x03B2A828 ADRP X0, 0x5C9000
	0x03B2A82C LDR X0, [X0 + 0x5A0]
	0x03B2A830 BL 0x1C16CF4
	0x03B2A834 STRB W22, [X21 + 0x783]
	0x03B2A838 ADRP X8, 0x5C9000
	0x03B2A83C LDR X8, [X8 + 0x5A0]
	0x03B2A840 LDR X8, [X8]
	0x03B2A844 LDR X8, [X8 + 0xB8]
	0x03B2A848 LDP S8, S9, [X8]
	0x03B2A84C LDR V10, [X8 + 0x8]
	0x03B2A850 LDR X0, [X27]
	0x03B2A854 LDR W8, [X0 + 0xE0]
	0x03B2A858 CBNZ W8, 0x3B2A864
	0x03B2A85C BL 0x1C16DFC
	0x03B2A860 LDR X0, [X27]
	0x03B2A864 LDR X8, [X0 + 0xB8]
	0x03B2A868 LDR X0, [X8 + 0x38]
	0x03B2A86C CBZ X0, 0x3B2AF0C
	0x03B2A870 LDR W10, [X0 + 0x1C]
	0x03B2A874 LDR X9, [X0 + 0x10]
	0x03B2A878 LDR X8, [X29]
	0x03B2A87C ADD W10, W10, 0x1
	0x03B2A880 STR W10, [X0 + 0x1C]
	0x03B2A884 CBZ X9, 0x3B2AF0C
	0x03B2A888 LDRSW X10, [X0 + 0x18]
	0x03B2A88C LDR W11, [X9 + 0x18]
	0x03B2A890 CMP W10, W11
	0x03B2A894 B.CS 0x3B2A8B4
	0x03B2A898 MOVZ W11, 0xC
	0x03B2A89C ADD W8, W10, 0x1
	0x03B2A8A0 MADD X9, X10, X11, X9
	0x03B2A8A4 STR W8, [X0 + 0x18]
	0x03B2A8A8 STP S8, S9, [X9 + 0x20]
	0x03B2A8AC STR S10, [X9 + 0x28]
	0x03B2A8B0 B 0x3B2A8D0
	0x03B2A8B4 LDR X8, [X8 + 0x20]
	0x03B2A8B8 MOV V0.16B, V8.16B
	0x03B2A8BC MOV V1.16B, V9.16B
	0x03B2A8C0 MOV V2.16B, V10.16B
	0x03B2A8C4 LDR X8, [X8 + 0xC0]
	0x03B2A8C8 LDR X1, [X8 + 0x70]
	0x03B2A8CC BL 0x30CC1B4
	0x03B2A8D0 ADD W24, W24, 0x1
	0x03B2A8D4 CMP W26, W24
	0x03B2A8D8 B.NE 0x3B2A778
	0x03B2A8DC LDR X2, [X28]
	0x03B2A8E0 MOV X0, X20
	0x03B2A8E4 MOV W1, W31
	0x03B2A8E8 BL 0x30CBE84
	0x03B2A8EC LDR X2, [X28]
	0x03B2A8F0 LDR W1, [X31 + 0x5C]
	0x03B2A8F4 MOV X0, X20
	0x03B2A8F8 MOV V8.16B, V0.16B
	0x03B2A8FC MOV V9.16B, V1.16B
	0x03B2A900 MOV V10.16B, V2.16B
	0x03B2A904 BL 0x30CBE84
	0x03B2A908 LDRB W8, [X23 + 0x785]
	0x03B2A90C MOV V11.16B, V0.16B
	0x03B2A910 MOV V12.16B, V1.16B
	0x03B2A914 MOV V13.16B, V2.16B
	0x03B2A918 CBNZ W8, 0x3B2A930
	0x03B2A91C ADRP X0, 0x5C9000
	0x03B2A920 LDR X0, [X0 + 0x5A8]
	0x03B2A924 BL 0x1C16CF4
	0x03B2A928 MOVZ W8, 0x1
	0x03B2A92C STRB W8, [X23 + 0x785]
	0x03B2A930 ADRP X8, 0x5C9000
	0x03B2A934 LDR X8, [X8 + 0x5A8]
	0x03B2A938 FSUB S8, S8, S11
	0x03B2A93C FSUB S9, S9, S12
	0x03B2A940 FSUB S10, S10, S13
	0x03B2A944 LDR X0, [X8]
	0x03B2A948 LDR W8, [X0 + 0xE0]
	0x03B2A94C CBNZ W8, 0x3B2A954
	0x03B2A950 BL 0x1C16DFC
	0x03B2A954 ADRP X8, 0xFFFFFFFFFCFC0000
	0x03B2A958 FMUL S0, S8, S8
	0x03B2A95C FMUL S1, S9, S9
	0x03B2A960 LDR V2, [X8 + 0x17C]
	0x03B2A964 FADD S0, S0, S1
	0x03B2A968 FMUL S1, S10, S10
	0x03B2A96C FADD S0, S1, S0
	0x03B2A970 FSQRT S0, S0
	0x03B2A974 FCMP S0, S2
	0x03B2A978 B.LE 0x3B2A98C
	0x03B2A97C FDIV S8, S8, S0
	0x03B2A980 FDIV S9, S9, S0
	0x03B2A984 FDIV S10, S10, S0
	0x03B2A988 B 0x3B2A9C0
	0x03B2A98C LDRB W8, [X21 + 0x783]
	0x03B2A990 CBNZ W8, 0x3B2A9A8
	0x03B2A994 ADRP X0, 0x5C9000
	0x03B2A998 LDR X0, [X0 + 0x5A0]
	0x03B2A99C BL 0x1C16CF4
	0x03B2A9A0 MOVZ W8, 0x1
	0x03B2A9A4 STRB W8, [X21 + 0x783]
	0x03B2A9A8 ADRP X8, 0x5C9000
	0x03B2A9AC LDR X8, [X8 + 0x5A0]
	0x03B2A9B0 LDR X8, [X8]
	0x03B2A9B4 LDR X8, [X8 + 0xB8]
	0x03B2A9B8 LDP S8, S9, [X8]
	0x03B2A9BC LDR V10, [X8 + 0x8]
	0x03B2A9C0 LDR X0, [X27]
	0x03B2A9C4 LDR W8, [X0 + 0xE0]
	0x03B2A9C8 CBNZ W8, 0x3B2A9D4
	0x03B2A9CC BL 0x1C16DFC
	0x03B2A9D0 LDR X0, [X27]
	0x03B2A9D4 LDR X8, [X0 + 0xB8]
	0x03B2A9D8 LDR X0, [X8 + 0x38]
	0x03B2A9DC CBZ X0, 0x3B2AF0C
	0x03B2A9E0 LDR W10, [X0 + 0x1C]
	0x03B2A9E4 LDR X8, [X0 + 0x10]
	0x03B2A9E8 LDR X9, [X29]
	0x03B2A9EC ADD W10, W10, 0x1
	0x03B2A9F0 STR W10, [X0 + 0x1C]
	0x03B2A9F4 CBZ X8, 0x3B2AF0C
	0x03B2A9F8 LDRSW X10, [X0 + 0x18]
	0x03B2A9FC LDR W11, [X8 + 0x18]
	0x03B2AA00 CMP W10, W11
	0x03B2AA04 B.CS 0x3B2AA24
	0x03B2AA08 MOVZ W11, 0xC
	0x03B2AA0C ADD W9, W10, 0x1
	0x03B2AA10 MADD X8, X10, X11, X8
	0x03B2AA14 STR W9, [X0 + 0x18]
	0x03B2AA18 STP S8, S9, [X8 + 0x20]
	0x03B2AA1C STR S10, [X8 + 0x28]
	0x03B2AA20 B 0x3B2AA40
	0x03B2AA24 LDR X8, [X9 + 0x20]
	0x03B2AA28 MOV V0.16B, V8.16B
	0x03B2AA2C MOV V1.16B, V9.16B
	0x03B2AA30 MOV V2.16B, V10.16B
	0x03B2AA34 LDR X8, [X8 + 0xC0]
	0x03B2AA38 LDR X1, [X8 + 0x70]
	0x03B2AA3C BL 0x30CC1B4
	0x03B2AA40 CMP W26, 0x1
	0x03B2AA44 B.LT 0x3B2ADE4
	0x03B2AA48 MOVN X8, 0x80100000
	0x03B2AA4C MOVZ W23, 0x3
	0x03B2AA50 ADD X24, X31, 0x90
	0x03B2AA54 ADD X25, X31, 0x70
	0x03B2AA58 ADD X29, X31, 0x60
	0x03B2AA5C ADD X22, X31, 0x80
	0x03B2AA60 STR X8, [X31 + 0x50]
	0x03B2AA64 LDR X0, [X27]
	0x03B2AA68 LDR W8, [X0 + 0xE0]
	0x03B2AA6C CBNZ W8, 0x3B2AA78
	0x03B2AA70 BL 0x1C16DFC
	0x03B2AA74 LDR X0, [X27]
	0x03B2AA78 LDR X8, [X0 + 0xB8]
	0x03B2AA7C LDR X0, [X8 + 0x38]
	0x03B2AA80 CBZ X0, 0x3B2AF0C
	0x03B2AA84 LDR W1, [X31 + 0xAC]
	0x03B2AA88 LDR X2, [X28]
	0x03B2AA8C BL 0x30CBE84
	0x03B2AA90 LDR X8, [X27]
	0x03B2AA94 STR S2, [X31 + 0x5C]
	0x03B2AA98 LDR X8, [X8 + 0xB8]
	0x03B2AA9C LDR X0, [X8 + 0x38]
	0x03B2AAA0 CBZ X0, 0x3B2AF0C
	0x03B2AAA4 LDR W1, [X31 + 0xA8]
	0x03B2AAA8 LDR X2, [X28]
	0x03B2AAAC MOV V15.16B, V0.16B
	0x03B2AAB0 MOV V8.16B, V1.16B
	0x03B2AAB4 BL 0x30CBE84
	0x03B2AAB8 LDR X8, [X27]
	0x03B2AABC STR S0, [X31 + 0x58]
	0x03B2AAC0 LDR X8, [X8 + 0xB8]
	0x03B2AAC4 LDR X0, [X8 + 0x38]
	0x03B2AAC8 CBZ X0, 0x3B2AF0C
	0x03B2AACC LDR W1, [X31 + 0xA4]
	0x03B2AAD0 LDR X2, [X28]
	0x03B2AAD4 MOV V13.16B, V2.16B
	0x03B2AAD8 STP S1, S8, [X31 + 0x48]
	0x03B2AADC BL 0x30CBE84
	0x03B2AAE0 LDR X8, [X27]
	0x03B2AAE4 STR S1, [X31 + 0x44]
	0x03B2AAE8 LDR X8, [X8 + 0xB8]
	0x03B2AAEC LDR X0, [X8 + 0x38]
	0x03B2AAF0 CBZ X0, 0x3B2AF0C
	0x03B2AAF4 LDR W1, [X31 + 0xA0]
	0x03B2AAF8 LDR X2, [X28]
	0x03B2AAFC MOV V14.16B, V0.16B
	0x03B2AB00 MOV V9.16B, V2.16B
	0x03B2AB04 BL 0x30CBE84
	0x03B2AB08 STR S1, [X31 + 0x38]
	0x03B2AB0C ADRP X8, 0x5C9000
	0x03B2AB10 LDR X8, [X8 + 0x5A8]
	0x03B2AB14 LDR V12, [X31 + 0xE0]
	0x03B2AB18 LDR V8, [X31 + 0xE8]
	0x03B2AB1C MOV V10.16B, V0.16B
	0x03B2AB20 LDR X0, [X8]
	0x03B2AB24 MOV V11.16B, V2.16B
	0x03B2AB28 LDR W8, [X0 + 0xE0]
	0x03B2AB2C CBNZ W8, 0x3B2AB34
	0x03B2AB30 BL 0x1C16DFC
	0x03B2AB34 LDR V1, [X31 + 0x5C]
	0x03B2AB38 FMUL S0, S15, S12
	0x03B2AB3C STR S15, [X31 + 0x40]
	0x03B2AB40 FMUL S1, S1, S8
	0x03B2AB44 FADD S0, S0, S1
	0x03B2AB48 FCVT S0, S0
	0x03B2AB4C BL 0x3EB1B80
	0x03B2AB50 MOV V12.16B, V0.16B
	0x03B2AB54 LDR V0, [X31 + 0xD0]
	0x03B2AB58 LDR V1, [X31 + 0xD8]
	0x03B2AB5C LDR V2, [X31 + 0x58]
	0x03B2AB60 FMUL S1, S13, S1
	0x03B2AB64 FMUL S0, S2, S0
	0x03B2AB68 FADD S0, S0, S1
	0x03B2AB6C FCVT S0, S0
	0x03B2AB70 BL 0x3EB1B80
	0x03B2AB74 MOV V8.16B, V0.16B
	0x03B2AB78 LDR V0, [X31 + 0xC0]
	0x03B2AB7C LDR V1, [X31 + 0xC8]
	0x03B2AB80 FMUL S0, S14, S0

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Move X20, 0x8B9000
	019 Move W8, [X20+1918]
	020 Move X19, X0
	021 Move V8, V2
	022 Move V9, V0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x5CE000
	028 Move X0, [X0+2424]
	029 Call 0x1C17CF4
	030 Move X0, 0x5CE000
	031 Move X0, [X0+2432]
	032 Call 0x1C17CF4
	033 Move X0, 0x630000
	034 Move X0, [X0+3392]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+1918], W8
	038 Compare X19, 0
	039 JumpIfEqual {247}
	040 Move W8, [X19+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X22, 0x5CE000
	043 Move X22, [X22+2432]
	044 Subtract W1, W8, 1
	045 Move X0, X19
	046 Move X2, [X22]
	047 Call List`1<Vector3>.get_Item, X0, X1
	048 Move X20, 0x630000
	049 Move X20, [X20+3392]
	050 Move V11, V0
	051 Move V10, V1
	052 Move V12, V2
	053 Move X0, [X20]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X23, 0x8B9000
	059 Move W8, [X23+2019]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x630000
	063 Move X0, [X0+3392]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X23+2019], W8
	067 Move X0, [X20]
	068 Subtract S13, S12, S8
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X20]
	074 Move X8, [X0+184]
	075 NotImplemented "Instruction FNEG not yet implemented."
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 NotImplemented "Instruction FCSEL not yet implemented."
	078 Move V0, [X8]
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move W8, [X19+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract W21, W8, 1
	083 Move W24, 1
	084 Move X2, [X22]
	085 Subtract W21, W21, 1
	086 Move X0, X19
	087 Move W1, W21
	088 Call List`1<Vector3>.get_Item, X0, X1
	089 Move X0, [X20]
	090 Move V12, V2
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move W8, [X23+2019]
	096 Compare W8, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X20
	099 Call 0x1C17CF4
	100 Move [X23+2019], W24
	101 Move X0, [X20]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X20]
	107 Move X8, [X0+184]
	108 Subtract S0, S12, S8
	109 NotImplemented "Instruction FNEG not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move V1, [X8]
	112 NotImplemented "Instruction FCSEL not yet implemented."
	113 NotImplemented "Instruction FCMP not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move W26, W31
	116 Move W0, W31
	117 NotImplemented "Instruction FCMP not yet implemented."
	118 Move W26, W31
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move W8, [X19+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W24, W31
	124 Move W21, W31
	125 Subtract S12, S11, S9
	126 Move W25, 1
	127 Move X2, [X22]
	128 Move X0, X19
	129 Move W1, W21
	130 Move V14, V13
	131 Move V15, V12
	132 Call List`1<Vector3>.get_Item, X0, X1
	133 Move X0, [X20]
	134 Move V12, V0
	135 Move V11, V1
	136 Move V13, V2
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move W8, [X23+2019]
	142 Compare W8, 0
	143 JumpIfNotEqual {147}
	144 Move X0, X20
	145 Call 0x1C17CF4
	146 Move [X23+2019], W25
	147 Move X0, [X20]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X20]
	153 Move X8, [X0+184]
	154 Subtract S12, S12, S9
	155 Subtract S13, S13, S8
	156 Subtract S1, S12, S15
	157 Subtract S0, S13, S14
	158 Multiply S2, S13, S1
	159 Multiply S3, S12, S0
	160 Subtract S2, S2, S3
	161 Move V3, [X8]
	162 NotImplemented "Instruction FNEG not yet implemented."
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 NotImplemented "Instruction FCSEL not yet implemented."
	165 NotImplemented "Instruction FCMP not yet implemented."
	166 Subtract S2, S11, S10
	167 Multiply S1, S1, S1
	168 Multiply S3, S15, S15
	169 Multiply S4, S10, S10
	170 Multiply S2, S2, S2
	171 Multiply S0, S0, S0
	172 Multiply S5, S14, S14
	173 Add S3, S4, S3
	174 Add S1, S2, S1
	175 Add S0, S0, S1
	176 Add S1, S5, S3
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 Multiply S1, S12, S12
	179 Multiply S2, S11, S11
	180 Add S1, S2, S1
	181 Multiply S2, S13, S13
	182 Add S1, S2, S1
	183 NotImplemented "Instruction FCMP not yet implemented."
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move W8, [X23+2019]
	189 Compare W8, 0
	190 JumpIfNotEqual {194}
	191 Move X0, X20
	192 Call 0x1C17CF4
	193 Move [X23+2019], W25
	194 Move X0, [X20]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {200}
	198 Call 0x1C17DFC
	199 Move X0, [X20]
	200 Move X8, [X0+184]
	201 NotImplemented "Instruction FNEG not yet implemented."
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 NotImplemented "Instruction FCSEL not yet implemented."
	204 Move V0, [X8]
	205 NotImplemented "Instruction FCMP not yet implemented."
	206 NotImplemented "Instruction FCMP not yet implemented."
	207 NotImplemented "Instruction CSET not yet implemented."
	208 And W9, W26, 1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Multiply S0, S15, S13
	211 Multiply S1, S14, S12
	212 Subtract S2, S14, S13
	213 Subtract S0, S0, S1
	214 NotImplemented "Instruction FNEG not yet implemented."
	215 NotImplemented "Instruction FDIV not yet implemented."
	216 NotImplemented "Instruction FCMP not yet implemented."
	217 Add W24, W24, 1
	218 Move W8, W26
	219 Move W9, [X19+24]
	220 Add W21, W21, 1
	221 Move W26, W8
	222 Move V10, V11
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move W24, W31
	225 And W8, W24, 0x80000001
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CSET not yet implemented."
	228 Move X20, [X31+128]
	229 Move X19, [X31+136]
	230 Move X22, [X31+112]
	231 Move X21, [X31+120]
	232 Move X24, [X31+96]
	233 Move X23, [X31+104]
	234 Move X26, [X31+80]
	235 Move X25, [X31+88]
	236 Move X30, [X31+64]
	237 Move D9, [X31+48]
	238 Move D8, [X31+56]
	239 Move D11, [X31+32]
	240 Move D10, [X31+40]
	241 Move D13, [X31+16]
	242 Move D12, [X31+24]
	243 Move D15, [X31+144]
	244 Move D14, [X31+152]
	245 Return X0
	246 Move W0, 1
	247 Call 0x1C17F20

Method: System.Boolean PointInPolygon3D(UnityEngine.Vector3 testPoint, System.Collections.Generic.List`1<UnityEngine.Vector3> vertices)

Disassembly:
	0x03B2AB84 FMUL S1, S9, S1
	0x03B2AB88 FADD S0, S0, S1
	0x03B2AB8C FCVT S0, S0
	0x03B2AB90 BL 0x3EB1B80
	0x03B2AB94 MOV V15.16B, V0.16B
	0x03B2AB98 LDR V0, [X31 + 0xB0]
	0x03B2AB9C LDR V1, [X31 + 0xB8]
	0x03B2ABA0 STR S10, [X31 + 0x3C]
	0x03B2ABA4 FMUL S0, S10, S0
	0x03B2ABA8 FMUL S1, S11, S1
	0x03B2ABAC FADD S0, S0, S1
	0x03B2ABB0 FCVT S0, S0
	0x03B2ABB4 BL 0x3EB1B80
	0x03B2ABB8 FCMP D8, D12
	0x03B2ABBC FCSEL D1, D8, D12, MI
	0x03B2ABC0 CSET W8, MI
	0x03B2ABC4 FCMP D15, D1
	0x03B2ABC8 FCSEL D1, D15, D1, MI
	0x03B2ABCC MOVZ W9, 0x2
	0x03B2ABD0 CSEL W8, W9, W8, MI
	0x03B2ABD4 FCMP D0, D1
	0x03B2ABD8 CSEL W8, W23, W8, MI
	0x03B2ABDC CMP W8, 0x2
	0x03B2ABE0 B.EQ 0x3B2AC38
	0x03B2ABE4 CMP W8, 0x1
	0x03B2ABE8 B.EQ 0x3B2AC84
	0x03B2ABEC CBNZ W8, 0x3B2ACD0
	0x03B2ABF0 LDR X0, [X27]
	0x03B2ABF4 LDR W8, [X0 + 0xE0]
	0x03B2ABF8 CBNZ W8, 0x3B2AC00
	0x03B2ABFC BL 0x1C16DFC
	0x03B2AC00 LDR V0, [X31 + 0x40]
	0x03B2AC04 LDR V1, [X31 + 0x4C]
	0x03B2AC08 LDR V2, [X31 + 0x5C]
	0x03B2AC0C ADD X8, X31, 0xB0
	0x03B2AC10 STP X29, X25, [X31 + 0x18]
	0x03B2AC14 STP X24, X22, [X31 + 0x8]
	0x03B2AC18 ADD X1, X31, 0xAC
	0x03B2AC1C ADD X2, X31, 0xA4
	0x03B2AC20 ADD X3, X31, 0xA8
	0x03B2AC24 ADD X4, X31, 0xA0
	0x03B2AC28 ADD X5, X31, 0xE0
	0x03B2AC2C ADD X6, X31, 0xC0
	0x03B2AC30 ADD X7, X31, 0xD0
	0x03B2AC34 B 0x3B2AD10
	0x03B2AC38 LDR X0, [X27]
	0x03B2AC3C LDR W8, [X0 + 0xE0]
	0x03B2AC40 CBNZ W8, 0x3B2AC48
	0x03B2AC44 BL 0x1C16DFC
	0x03B2AC48 LDR V1, [X31 + 0x44]
	0x03B2AC4C ADD X8, X31, 0xE0
	0x03B2AC50 STP X25, X24, [X31 + 0x18]
	0x03B2AC54 STP X22, X29, [X31 + 0x8]
	0x03B2AC58 ADD X1, X31, 0xA4
	0x03B2AC5C ADD X2, X31, 0xA8
	0x03B2AC60 ADD X3, X31, 0xA0
	0x03B2AC64 ADD X4, X31, 0xAC
	0x03B2AC68 ADD X5, X31, 0xC0
	0x03B2AC6C ADD X6, X31, 0xD0
	0x03B2AC70 ADD X7, X31, 0xB0
	0x03B2AC74 STR X8, [X31]
	0x03B2AC78 MOV V0.16B, V14.16B
	0x03B2AC7C MOV V2.16B, V9.16B
	0x03B2AC80 B 0x3B2AD14
	0x03B2AC84 LDR X0, [X27]
	0x03B2AC88 LDR W8, [X0 + 0xE0]
	0x03B2AC8C CBNZ W8, 0x3B2AC94
	0x03B2AC90 BL 0x1C16DFC
	0x03B2AC94 LDR V0, [X31 + 0x58]
	0x03B2AC98 LDR V1, [X31 + 0x48]
	0x03B2AC9C ADD X8, X31, 0xC0
	0x03B2ACA0 STP X24, X22, [X31 + 0x18]
	0x03B2ACA4 STP X29, X25, [X31 + 0x8]
	0x03B2ACA8 ADD X1, X31, 0xA8
	0x03B2ACAC ADD X2, X31, 0xA0
	0x03B2ACB0 ADD X3, X31, 0xAC
	0x03B2ACB4 ADD X4, X31, 0xA4
	0x03B2ACB8 ADD X5, X31, 0xD0
	0x03B2ACBC ADD X6, X31, 0xB0
	0x03B2ACC0 ADD X7, X31, 0xE0
	0x03B2ACC4 STR X8, [X31]
	0x03B2ACC8 MOV V2.16B, V13.16B
	0x03B2ACCC B 0x3B2AD14
	0x03B2ACD0 LDR X0, [X27]
	0x03B2ACD4 LDR W8, [X0 + 0xE0]
	0x03B2ACD8 CBNZ W8, 0x3B2ACE0
	0x03B2ACDC BL 0x1C16DFC
	0x03B2ACE0 LDP S1, S0, [X31 + 0x38]
	0x03B2ACE4 ADD X1, X31, 0xA0
	0x03B2ACE8 ADD X2, X31, 0xAC
	0x03B2ACEC ADD X3, X31, 0xA4
	0x03B2ACF0 ADD X4, X31, 0xA8
	0x03B2ACF4 ADD X5, X31, 0xB0
	0x03B2ACF8 ADD X6, X31, 0xE0
	0x03B2ACFC ADD X7, X31, 0xC0
	0x03B2AD00 ADD X8, X31, 0xD0
	0x03B2AD04 MOV V2.16B, V11.16B
	0x03B2AD08 STP X22, X29, [X31 + 0x18]
	0x03B2AD0C STP X25, X24, [X31 + 0x8]
	0x03B2AD10 STR X8, [X31]
	0x03B2AD14 MOV X0, X20
	0x03B2AD18 BL 0x3B2AF14
	0x03B2AD1C LDP S4, S5, [X31 + 0x80]
	0x03B2AD20 LDP S2, S0, [X31 + 0x90]
	0x03B2AD24 LDP S7, S16, [X31 + 0x70]
	0x03B2AD28 LDR V3, [X31 + 0x88]
	0x03B2AD2C LDR V1, [X31 + 0x98]
	0x03B2AD30 LDR V6, [X31 + 0x78]
	0x03B2AD34 MOV V20.16B, V5.16B
	0x03B2AD38 MOV V18.16B, V4.16B
	0x03B2AD3C UNIMPLEMENTED
	0x03B2AD40 MOV V20.S[1], V16.S[0]
	0x03B2AD44 UNIMPLEMENTED
	0x03B2AD48 MOV V18.S[1], V7.S[0]
	0x03B2AD4C FSUB V19.2S, V19.2S, V20.2S
	0x03B2AD50 MOV V20.16B, V3.16B
	0x03B2AD54 FSUB V17.2S, V17.2S, V18.2S
	0x03B2AD58 UNIMPLEMENTED
	0x03B2AD5C MOV V20.S[1], V6.S[0]
	0x03B2AD60 FSUB V18.2S, V18.2S, V20.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B2AD6C FADD V17.2S, V17.2S, V19.2S
	0x00000000 INVALID
	0x03B2AD74 FADD V17.2S, V17.2S, V18.2S

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X20, 0x8B9000
	017 Move W8, [X20+1919]
	018 Move X19, X0
	019 Move [X31+8], S1
	020 Move [X31+16], S2
	021 Move [X31+4], S0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x5CE000
	027 Move X0, [X0+2424]
	028 Call 0x1C17CF4
	029 Move X0, 0x5CE000
	030 Move X0, [X0+2432]
	031 Call 0x1C17CF4
	032 Move X0, 0x630000
	033 Move X0, [X0+3392]
	034 Call 0x1C17CF4
	035 Move X0, 0x5CA000
	036 Move X0, [X0+1448]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1919], W8
	040 Compare X19, 0
	041 JumpIfEqual {142}
	042 Move W8, [X19+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X21, 0x5CE000
	045 Move X22, 0x630000
	046 Move X23, 0x5CA000
	047 Move X21, [X21+2432]
	048 Move X22, [X22+3392]
	049 Move X23, [X23+1448]
	050 Move W20, W31
	051 Move D9, X31
	052 Move X2, [X21]
	053 Move X0, X19
	054 Move W1, W20
	055 Call List`1<Vector3>.get_Item, X0, X1
	056 Move W8, [X19+24]
	057 Move X2, [X21]
	058 Add W20, W20, 1
	059 Move X0, X19
	060 NotImplemented "Instruction SDIV not yet implemented."
	061 NotImplemented "Instruction MSUB not yet implemented."
	062 Move V11, V0
	063 Move V12, V1
	064 Move V13, V2
	065 Call List`1<Vector3>.get_Item, X0, X1
	066 Move X0, [X22]
	067 Move V14, V0
	068 Move V15, V1
	069 Move V8, V2
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Move S2, [X31+4]
	076 Move S1, [X31+8]
	077 Move V0, [X31+12]
	078 Move X8, [X0+184]
	079 Subtract S10, S11, S2
	080 Subtract S12, S12, S1
	081 Subtract S11, S13, S0
	082 Subtract S13, S14, S2
	083 Subtract S14, S15, S1
	084 Subtract S8, S8, S0
	085 Multiply S0, S10, S10
	086 Multiply S1, S12, S12
	087 Multiply S2, S11, S11
	088 Add S0, S0, S1
	089 Multiply S3, S13, S13
	090 Multiply S1, S14, S14
	091 Add S0, S2, S0
	092 Move V2, [X8]
	093 Add S1, S3, S1
	094 Multiply S3, S8, S8
	095 Add S1, S3, S1
	096 Multiply S15, S0, S1
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 Move X0, [X23]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Multiply S0, S10, S13
	104 Multiply S1, S12, S14
	105 Multiply S2, S11, S8
	106 Add S0, S0, S1
	107 Add S0, S2, S0
	108 NotImplemented "Instruction FSQRT not yet implemented."
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 NotImplemented "Instruction FCVT not yet implemented."
	111 Call 0x3EB2B80
	112 Move W8, [X19+24]
	113 Add D9, D9, D0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, -50589696
	116 Move V0, [X8+932]
	117 Move X8, -50589696
	118 Move V1, [X8+816]
	119 NotImplemented "Instruction INVALID not yet implemented."
	120 Add S0, S2, S0
	121 NotImplemented "Instruction FABS not yet implemented."
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 Move W0, W31
	125 Move W0, 1
	126 Move X20, [X31+112]
	127 Move X19, [X31+120]
	128 Move X22, [X31+96]
	129 Move X21, [X31+104]
	130 Move X30, [X31+80]
	131 Move X23, [X31+88]
	132 Move D9, [X31+64]
	133 Move D8, [X31+72]
	134 Move D11, [X31+48]
	135 Move D10, [X31+56]
	136 Move D13, [X31+32]
	137 Move D12, [X31+40]
	138 Move D15, [X31+16]
	139 Move D14, [X31+24]
	140 Add X31, X31, 128
	141 Return X0
	142 Call 0x1C17F20

Method: UnityEngine.Vector3 ProjectPointOnPlane(UnityEngine.Vector3 planeNormal, UnityEngine.Vector3 planePoint, UnityEngine.Vector3 point)

Disassembly:
	0x03B2AD78 LDR V18, [X31 + 0x50]
	0x00000000 INVALID
	0x03B2AD80 FCVT S17, S17
	0x03B2AD84 FCMP D18, D17
	0x03B2AD88 B.LE 0x3B2ADDC
	0x03B2AD8C CBZ X19, 0x3B2AF0C
	0x03B2AD90 LDR W8, [X19 + 0x18]
	0x03B2AD94 CBZ W8, 0x3B2AF10
	0x03B2AD98 CMP W8, 0x1
	0x03B2AD9C STP S7, S16, [X19 + 0x20]
	0x03B2ADA0 STR S6, [X19 + 0x28]
	0x03B2ADA4 B.EQ 0x3B2AF10
	0x03B2ADA8 LDR V6, [X31 + 0x60]
	0x03B2ADAC LDR V7, [X31 + 0x68]
	0x03B2ADB0 CMP W8, 0x2
	0x03B2ADB4 STUR D6, [X19 + 0x2C]
	0x03B2ADB8 STR S7, [X19 + 0x34]
	0x03B2ADBC B.LS 0x3B2AF10
	0x03B2ADC0 CMP W8, 0x3
	0x03B2ADC4 STP S4, S5, [X19 + 0x38]
	0x03B2ADC8 STR S3, [X19 + 0x40]
	0x03B2ADCC B.EQ 0x3B2AF10
	0x03B2ADD0 STP S2, S0, [X19 + 0x44]
	0x03B2ADD4 STR S1, [X19 + 0x4C]
	0x03B2ADD8 STR D17, [X31 + 0x50]
	0x03B2ADDC SUBS W26, W26, 0x1
	0x03B2ADE0 B.NE 0x3B2AA64
	0x03B2ADE4 CBZ X19, 0x3B2AF0C
	0x03B2ADE8 LDR W8, [X19 + 0x18]
	0x03B2ADEC CBZ W8, 0x3B2AF10
	0x03B2ADF0 CMP W8, 0x3
	0x03B2ADF4 B.LS 0x3B2AF10
	0x03B2ADF8 ADRP X20, 0x8AE000
	0x03B2ADFC LDP S10, S9, [X19 + 0x20]
	0x03B2AE00 LDR V8, [X19 + 0x28]
	0x03B2AE04 LDP S14, S13, [X19 + 0x44]
	0x03B2AE08 LDRB W8, [X20 + 0x85C]
	0x03B2AE0C LDR V0, [X19 + 0x4C]
	0x03B2AE10 STR S0, [X31 + 0x5C]
	0x03B2AE14 CBNZ W8, 0x3B2AE2C
	0x03B2AE18 ADRP X0, 0x5C9000
	0x03B2AE1C LDR X0, [X0 + 0x5A8]
	0x03B2AE20 BL 0x1C16CF4
	0x03B2AE24 MOVZ W8, 0x1
	0x03B2AE28 STRB W8, [X20 + 0x85C]
	0x03B2AE2C ADRP X8, 0x5C9000
	0x03B2AE30 LDR X8, [X8 + 0x5A8]
	0x03B2AE34 LDR X0, [X8]
	0x03B2AE38 LDR W8, [X0 + 0xE0]
	0x03B2AE3C CBNZ W8, 0x3B2AE44
	0x03B2AE40 BL 0x1C16DFC
	0x03B2AE44 LDR W8, [X19 + 0x18]
	0x03B2AE48 CMP W8, 0x1
	0x03B2AE4C B.LS 0x3B2AF10
	0x03B2AE50 LDP S12, S15, [X19 + 0x2C]
	0x03B2AE54 LDRB W8, [X20 + 0x85C]
	0x03B2AE58 LDR V11, [X19 + 0x34]
	0x03B2AE5C CBNZ W8, 0x3B2AE74
	0x03B2AE60 ADRP X0, 0x5C9000
	0x03B2AE64 LDR X0, [X0 + 0x5A8]
	0x03B2AE68 BL 0x1C16CF4
	0x03B2AE6C MOVZ W8, 0x1
	0x03B2AE70 STRB W8, [X20 + 0x85C]
	0x03B2AE74 ADRP X8, 0x5C9000
	0x03B2AE78 LDR X8, [X8 + 0x5A8]
	0x03B2AE7C LDR V1, [X31 + 0x5C]
	0x03B2AE80 MOV V0.16B, V10.16B
	0x03B2AE84 FSUB S10, S10, S14
	0x03B2AE88 LDR X0, [X8]
	0x03B2AE8C FSUB S13, S9, S13
	0x03B2AE90 FSUB S14, S8, S1
	0x03B2AE94 FSUB S12, S0, S12
	0x03B2AE98 LDR W8, [X0 + 0xE0]
	0x03B2AE9C FSUB S9, S9, S15
	0x03B2AEA0 FSUB S8, S8, S11
	0x03B2AEA4 CBNZ W8, 0x3B2AEAC
	0x03B2AEA8 BL 0x1C16DFC
	0x03B2AEAC FMUL S0, S14, S14
	0x03B2AEB0 FMUL S1, S10, S10
	0x03B2AEB4 FMUL S2, S13, S13
	0x03B2AEB8 FMUL S3, S12, S12
	0x03B2AEBC FMUL S4, S9, S9
	0x03B2AEC0 FMUL S5, S8, S8
	0x03B2AEC4 LDP X20, X19, [X31 + 0x180]
	0x03B2AEC8 LDP X22, X21, [X31 + 0x170]
	0x03B2AECC LDP X24, X23, [X31 + 0x160]
	0x03B2AED0 LDP X26, X25, [X31 + 0x150]
	0x03B2AED4 LDP X28, X27, [X31 + 0x140]
	0x03B2AED8 LDP X29, X30, [X31 + 0x130]
	0x03B2AEDC LDP D9, D8, [X31 + 0x120]
	0x03B2AEE0 LDP D11, D10, [X31 + 0x110]
	0x03B2AEE4 LDP D13, D12, [X31 + 0x100]
	0x03B2AEE8 LDP D15, D14, [X31 + 0xF0]
	0x03B2AEEC FADD S1, S1, S2
	0x03B2AEF0 FADD S2, S3, S4
	0x03B2AEF4 FADD S0, S0, S1
	0x03B2AEF8 FADD S1, S5, S2
	0x03B2AEFC FSQRT S0, S0
	0x03B2AF00 FSQRT S1, S1
	0x03B2AF04 ADD X31, X31, 0x190
	0x03B2AF08 RET
	0x03B2AF0C BL 0x1C16F20
	0x03B2AF10 BL 0x1C16F28
	0x03B2AF14 SUB X31, X31, 0x160
	0x03B2AF18 STP D15, D14, [X31 + 0xC0]
	0x03B2AF1C STP D13, D12, [X31 + 0xD0]
	0x03B2AF20 STP D11, D10, [X31 + 0xE0]
	0x03B2AF24 STP D9, D8, [X31 + 0xF0]
	0x03B2AF28 STP X29, X30, [X31 + 0x100]
	0x03B2AF2C STP X28, X27, [X31 + 0x110]
	0x03B2AF30 STP X26, X25, [X31 + 0x120]
	0x03B2AF34 STP X24, X23, [X31 + 0x130]
	0x03B2AF38 STP X22, X21, [X31 + 0x140]
	0x03B2AF3C STP X20, X19, [X31 + 0x150]
	0x03B2AF40 ADRP X21, 0x8B8000
	0x03B2AF44 LDRB W8, [X21 + 0x783]
	0x03B2AF48 MOV X19, X7
	0x03B2AF4C MOV X20, X6
	0x03B2AF50 MOV X24, X5
	0x03B2AF54 MOV X23, X3
	0x03B2AF58 MOV X25, X2
	0x03B2AF5C MOV X26, X1
	0x03B2AF60 MOV X22, X0
	0x03B2AF64 MOV V8.16B, V2.16B
	0x03B2AF68 MOV V9.16B, V1.16B
	0x03B2AF6C MOV V10.16B, V0.16B
	0x03B2AF70 STR X4, [X31 + 0x58]
	0x03B2AF74 TBNZ X8, 0x0, 0x3B2AFA4
	0x03B2AF78 ADRP X0, 0x62F000
	0x03B2AF7C LDR X0, [X0 + 0xD10]
	0x03B2AF80 BL 0x1C16CF4
	0x03B2AF84 ADRP X0, 0x5CD000
	0x03B2AF88 LDR X0, [X0 + 0x978]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X19, 0x8AF000
	016 Move W8, [X19+1925]
	017 Move V10, V2
	018 Move V14, V1
	019 Move V15, V0
	020 Compare W8, 0
	021 JumpIfNotEqual {33}
	022 Move X0, 0x5CA000
	023 Move X0, [X0+1448]
	024 Move V8, V5
	025 Move V9, V4
	026 Move V11, V3
	027 Call 0x1C17CF4
	028 Move V3, V11
	029 Move V4, V9
	030 Move V5, V8
	031 Move W8, 1
	032 Move [X19+1925], W8
	033 Move X22, 0x5CA000
	034 Move X22, [X22+1448]
	035 Move X0, [X22]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {46}
	039 Move V8, V5
	040 Move V9, V4
	041 Move V11, V3
	042 Call 0x1C17DFC
	043 Move V3, V11
	044 Move V4, V9
	045 Move V5, V8
	046 Move X8, -50589696
	047 Multiply S0, S15, S15
	048 Multiply S1, S14, S14
	049 Move V13, [X8+380]
	050 Move X20, 0x5CA000
	051 Move S9, [X31+132]
	052 Move S8, [X31+136]
	053 Move V11, [X31+128]
	054 Multiply S2, S10, S10
	055 Add S0, S0, S1
	056 Move X20, [X20+1440]
	057 Add S0, S2, S0
	058 NotImplemented "Instruction FSQRT not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move X21, 0x8AF000
	061 Move [X31+8], S10
	062 Move [X31+16], S15
	063 Move [X31+88], S14
	064 NotImplemented "Instruction FDIV not yet implemented."
	065 NotImplemented "Instruction FDIV not yet implemented."
	066 NotImplemented "Instruction FDIV not yet implemented."
	067 Move W8, [X21+1923]
	068 Compare W8, 0
	069 JumpIfNotEqual {81}
	070 Move X0, 0x5CA000
	071 Move X0, [X0+1440]
	072 Move [X31+92], S5
	073 Move V14, V4
	074 Move [X31+4], S3
	075 Call 0x1C17CF4
	076 Move V3, [X31+4]
	077 Move V5, [X31+92]
	078 Move V4, V14
	079 Move W8, 1
	080 Move [X21+1923], W8
	081 Move X8, [X20]
	082 Move X8, [X8+184]
	083 Move S0, [X8]
	084 Move S1, [X8+4]
	085 Move V14, [X8+8]
	086 Move W8, [X19+1925]
	087 Subtract S2, S11, S3
	088 Subtract S3, S9, S4
	089 Move V10, V11
	090 Move [X31+92], S9
	091 Move V9, V8
	092 Subtract S15, S8, S5
	093 Multiply S11, S2, S0
	094 Multiply S8, S3, S1
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x5CA000
	098 Move X0, [X0+1448]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X19+1925], W8
	102 Move X0, [X22]
	103 Add S8, S11, S8
	104 Multiply S11, S15, S14
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move V1, [X31+88]
	110 Move V0, [X31+12]
	111 NotImplemented "Instruction FCMP not yet implemented."
	112 Add S13, S11, S8
	113 Move V2, [X31+8]
	114 NotImplemented "Instruction FDIV not yet implemented."
	115 NotImplemented "Instruction FDIV not yet implemented."
	116 NotImplemented "Instruction FDIV not yet implemented."
	117 Move W8, [X21+1923]
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0x5CA000
	121 Move X0, [X0+1440]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X21+1923], W8
	125 Move X8, [X20]
	126 Move X8, [X8+184]
	127 Move S0, [X8]
	128 Move S1, [X8+4]
	129 Move V2, [X8+8]
	130 Multiply S0, S13, S0
	131 Multiply S2, S13, S2
	132 Move V3, [X31+92]
	133 Multiply S1, S13, S1
	134 Subtract S0, S10, S0
	135 Subtract S2, S9, S2
	136 Move X20, [X31+112]
	137 Move X19, [X31+120]
	138 Move X22, [X31+96]
	139 Move X21, [X31+104]
	140 Move X30, [X31+80]
	141 Move D9, [X31+64]
	142 Move D8, [X31+72]
	143 Move D11, [X31+48]
	144 Move D10, [X31+56]
	145 Move D13, [X31+32]
	146 Move D12, [X31+40]
	147 Move D15, [X31+16]
	148 Move D14, [X31+24]
	149 Subtract S1, S3, S1
	150 Add X31, X31, 128
	151 Return X0

Method: System.Boolean ConvexHull2D(System.Collections.Generic.List`1<UnityEngine.Vector3> points, System.Collections.Generic.List`1<UnityEngine.Vector3> hull)

Disassembly:
	0x03B2AF8C BL 0x1C16CF4
	0x03B2AF90 ADRP X0, 0x5CD000
	0x03B2AF94 LDR X0, [X0 + 0x980]
	0x03B2AF98 BL 0x1C16CF4
	0x03B2AF9C MOVZ W8, 0x1
	0x03B2AFA0 STRB W8, [X21 + 0x783]
	0x03B2AFA4 STR X23, [X31 + 0x50]
	0x03B2AFA8 STP X31, X31, [X31 + 0xB0]
	0x03B2AFAC CBZ X22, 0x3B2B380
	0x03B2AFB0 FNEG S0, S10
	0x03B2AFB4 LDR W29, [X22 + 0x18]
	0x03B2AFB8 STP S10, S9, [X24]
	0x03B2AFBC STR S8, [X24 + 0x8]
	0x03B2AFC0 STR S8, [X20]
	0x03B2AFC4 STR W31, [X20 + 0x4]
	0x03B2AFC8 STR S0, [X20 + 0x8]
	0x03B2AFCC LDR V0, [X24]
	0x03B2AFD0 LDR V1, [X24 + 0x8]
	0x03B2AFD4 LDP X21, X9, [X31 + 0x160]
	0x03B2AFD8 LDR X8, [X31 + 0x180]
	0x03B2AFDC UNIMPLEMENTED
	0x03B2AFE0 FNEG S1, S1
	0x03B2AFE4 STR D0, [X19]
	0x03B2AFE8 STR S1, [X19 + 0x8]
	0x03B2AFEC LDR V0, [X20]
	0x03B2AFF0 LDR V1, [X20 + 0x8]
	0x03B2AFF4 STP X9, X8, [X31 + 0x40]
	0x03B2AFF8 LDR X10, [X31 + 0x178]
	0x03B2AFFC UNIMPLEMENTED
	0x03B2B000 FNEG S1, S1
	0x03B2B004 STR D0, [X21]
	0x03B2B008 STR S1, [X21 + 0x8]
	0x03B2B00C LDR X9, [X31 + 0x170]
	0x03B2B010 LDR W8, [X26]
	0x03B2B014 ADRP X28, 0x5CC000
	0x03B2B018 ADRP X27, 0x62E000
	0x03B2B01C STP X10, X9, [X31 + 0x30]
	0x03B2B020 LDR X28, [X28 + 0x980]
	0x03B2B024 ADD W8, W8, 0x1
	0x03B2B028 SDIV W9, W8, W29
	0x03B2B02C MSUB W1, W9, W29, W8
	0x03B2B030 STR W1, [X26]
	0x03B2B034 LDR X2, [X28]
	0x03B2B038 LDR X27, [X27 + 0xD10]
	0x03B2B03C MOV X0, X22
	0x03B2B040 BL 0x30CBE84
	0x03B2B044 LDR W26, [X26]
	0x03B2B048 STR D0, [X31 + 0x80]
	0x03B2B04C FMOV S0, W31
	0x03B2B050 MOVZ W23, 0x1
	0x03B2B054 STR D1, [X31 + 0x60]
	0x03B2B058 STR S2, [X31 + 0x7C]
	0x03B2B05C STR W26, [X25]
	0x03B2B060 STR V0, [X31 + 0xA]
	0x03B2B064 LDP S0, S10, [X24]
	0x03B2B068 LDR X2, [X28]
	0x03B2B06C ADD W8, W26, 0x1
	0x03B2B070 LDR V11, [X24 + 0x8]
	0x03B2B074 SDIV W9, W8, W29
	0x03B2B078 MSUB W26, W9, W29, W8
	0x03B2B07C MOV X0, X22
	0x03B2B080 MOV W1, W26
	0x03B2B084 STR S0, [X31 + 0x9C]
	0x03B2B088 BL 0x30CBE84
	0x03B2B08C LDR X0, [X27]
	0x03B2B090 LDP S15, S8, [X21]
	0x03B2B094 LDR V9, [X21 + 0x8]
	0x03B2B098 MOV V12.16B, V0.16B
	0x03B2B09C LDR W8, [X0 + 0xE0]
	0x03B2B0A0 MOV V13.16B, V1.16B
	0x03B2B0A4 MOV V14.16B, V2.16B
	0x03B2B0A8 CBNZ W8, 0x3B2B0B0
	0x03B2B0AC BL 0x1C16DFC
	0x03B2B0B0 LDR V2, [X31 + 0x7C]
	0x03B2B0B4 LDR V3, [X31 + 0x9C]
	0x03B2B0B8 ADD X0, X31, 0xBC
	0x03B2B0BC ADD X1, X31, 0xB8
	0x03B2B0C0 LDR V0, [X31 + 0x8]
	0x03B2B0C4 LDR V1, [X31 + 0x6]
	0x03B2B0C8 MOV V4.16B, V10.16B
	0x03B2B0CC MOV V5.16B, V11.16B
	0x03B2B0D0 STR X23, [X31 + 0x20]
	0x03B2B0D4 STP S8, S9, [X31 + 0x14]
	0x03B2B0D8 STR S15, [X31 + 0x10]
	0x03B2B0DC STP S13, S14, [X31 + 0x4]
	0x03B2B0E0 STR S12, [X31]
	0x03B2B0E4 BL 0x3B2891C
	0x03B2B0E8 LDR V0, [X31 + 0xBC]
	0x03B2B0EC LDR V4, [X31 + 0xA]
	0x03B2B0F0 FCMP S0, S4
	0x03B2B0F4 B.HI 0x3B2B05C
	0x03B2B0F8 LDR V0, [X24]
	0x03B2B0FC LDR V2, [X31 + 0x8]
	0x03B2B100 LDR V3, [X31 + 0x6]
	0x03B2B104 LDR V1, [X24 + 0x8]
	0x00000000 INVALID
	0x03B2B10C LDR X26, [X31 + 0x40]
	0x03B2B110 MOV V2.S[1], V3.S[0]
	0x03B2B114 FADD V0.2S, V2.2S, V0.2S
	0x03B2B118 LDR V2, [X31 + 0x7C]
	0x03B2B11C FMUL S1, S4, S1
	0x03B2B120 STR D0, [X26]
	0x03B2B124 MOV X0, X22
	0x03B2B128 FADD S1, S2, S1
	0x03B2B12C STR S1, [X26 + 0x8]
	0x03B2B130 LDR W1, [X25]
	0x03B2B134 LDR X2, [X28]
	0x03B2B138 BL 0x30CBE84
	0x03B2B13C LDR W25, [X25]
	0x03B2B140 LDR X23, [X31 + 0x50]
	0x03B2B144 STR D0, [X31 + 0x80]
	0x03B2B148 FMOV S0, W31
	0x03B2B14C MOVZ W21, 0x1
	0x03B2B150 STR D1, [X31 + 0x60]
	0x03B2B154 STR S2, [X31 + 0x7C]
	0x03B2B158 STR W25, [X23]
	0x03B2B15C STR V0, [X31 + 0xA]
	0x03B2B160 LDP S0, S10, [X20]
	0x03B2B164 LDR X2, [X28]
	0x03B2B168 ADD W8, W25, 0x1
	0x03B2B16C LDR V11, [X20 + 0x8]
	0x03B2B170 SDIV W9, W8, W29
	0x03B2B174 MSUB W25, W9, W29, W8
	0x03B2B178 MOV X0, X22
	0x03B2B17C MOV W1, W25
	0x03B2B180 STR S0, [X31 + 0x9C]
	0x03B2B184 BL 0x30CBE84
	0x03B2B188 LDR X0, [X27]
	0x03B2B18C LDP S15, S8, [X24]
	0x03B2B190 LDR V9, [X24 + 0x8]
	0x03B2B194 MOV V12.16B, V0.16B
	0x03B2B198 LDR W8, [X0 + 0xE0]
	0x03B2B19C MOV V13.16B, V1.16B
	0x03B2B1A0 MOV V14.16B, V2.16B
	0x03B2B1A4 CBNZ W8, 0x3B2B1AC
	0x03B2B1A8 BL 0x1C16DFC
	0x03B2B1AC LDR V2, [X31 + 0x7C]
	0x03B2B1B0 LDR V3, [X31 + 0x9C]
	0x03B2B1B4 ADD X0, X31, 0xB4
	0x03B2B1B8 ADD X1, X31, 0xB8
	0x03B2B1BC LDR V0, [X31 + 0x8]
	0x03B2B1C0 LDR V1, [X31 + 0x6]
	0x03B2B1C4 MOV V4.16B, V10.16B
	0x03B2B1C8 MOV V5.16B, V11.16B
	0x03B2B1CC STR X21, [X31 + 0x20]
	0x03B2B1D0 STP S8, S9, [X31 + 0x14]
	0x03B2B1D4 STR S15, [X31 + 0x10]
	0x03B2B1D8 STP S13, S14, [X31 + 0x4]
	0x03B2B1DC STR S12, [X31]
	0x03B2B1E0 BL 0x3B2891C
	0x03B2B1E4 LDR V0, [X31 + 0xB4]
	0x03B2B1E8 LDR V4, [X31 + 0xA]
	0x03B2B1EC FCMP S0, S4
	0x03B2B1F0 B.HI 0x3B2B158
	0x03B2B1F4 LDR V0, [X20]
	0x03B2B1F8 LDR V2, [X31 + 0x8]
	0x03B2B1FC LDR V3, [X31 + 0x6]
	0x03B2B200 LDR V1, [X20 + 0x8]
	0x00000000 INVALID
	0x03B2B208 LDR X25, [X31 + 0x38]
	0x03B2B20C MOV V2.S[1], V3.S[0]
	0x03B2B210 FADD V0.2S, V2.2S, V0.2S
	0x03B2B214 LDR V2, [X31 + 0x7C]
	0x03B2B218 FMUL S1, S4, S1
	0x03B2B21C STR D0, [X25]
	0x03B2B220 MOV X0, X22
	0x03B2B224 FADD S1, S2, S1
	0x03B2B228 STR S1, [X25 + 0x8]
	0x03B2B22C LDR W1, [X23]
	0x03B2B230 LDR X2, [X28]
	0x03B2B234 BL 0x30CBE84
	0x03B2B238 LDR W23, [X23]
	0x03B2B23C LDR X24, [X31 + 0x58]
	0x03B2B240 STR D0, [X31 + 0x80]
	0x03B2B244 FMOV S0, W31
	0x03B2B248 MOVZ W21, 0x1
	0x03B2B24C STR D1, [X31 + 0x60]
	0x03B2B250 STR S2, [X31 + 0x7C]
	0x03B2B254 STR W23, [X24]
	0x03B2B258 STR V0, [X31 + 0xA]
	0x03B2B25C LDP S0, S10, [X19]
	0x03B2B260 LDR X2, [X28]
	0x03B2B264 ADD W8, W23, 0x1
	0x03B2B268 LDR V11, [X19 + 0x8]
	0x03B2B26C SDIV W9, W8, W29
	0x03B2B270 MSUB W23, W9, W29, W8
	0x03B2B274 MOV X0, X22
	0x03B2B278 MOV W1, W23
	0x03B2B27C STR S0, [X31 + 0x9C]
	0x03B2B280 BL 0x30CBE84
	0x03B2B284 LDR X0, [X27]
	0x03B2B288 LDP S15, S8, [X20]
	0x03B2B28C LDR V9, [X20 + 0x8]
	0x03B2B290 MOV V12.16B, V0.16B
	0x03B2B294 LDR W8, [X0 + 0xE0]
	0x03B2B298 MOV V13.16B, V1.16B
	0x03B2B29C MOV V14.16B, V2.16B
	0x03B2B2A0 CBNZ W8, 0x3B2B2A8
	0x03B2B2A4 BL 0x1C16DFC
	0x03B2B2A8 LDR V2, [X31 + 0x7C]
	0x03B2B2AC LDR V3, [X31 + 0x9C]
	0x03B2B2B0 ADD X0, X31, 0xB0
	0x03B2B2B4 ADD X1, X31, 0xB8
	0x03B2B2B8 LDR V0, [X31 + 0x8]
	0x03B2B2BC LDR V1, [X31 + 0x6]
	0x03B2B2C0 MOV V4.16B, V10.16B
	0x03B2B2C4 MOV V5.16B, V11.16B
	0x03B2B2C8 STR X21, [X31 + 0x20]
	0x03B2B2CC STP S8, S9, [X31 + 0x14]
	0x03B2B2D0 STR S15, [X31 + 0x10]
	0x03B2B2D4 STP S13, S14, [X31 + 0x4]
	0x03B2B2D8 STR S12, [X31]
	0x03B2B2DC BL 0x3B2891C
	0x03B2B2E0 LDR V0, [X31 + 0xB0]
	0x03B2B2E4 LDR V4, [X31 + 0xA]
	0x03B2B2E8 FCMP S0, S4
	0x03B2B2EC B.HI 0x3B2B254
	0x03B2B2F0 LDR V0, [X19]
	0x03B2B2F4 LDR V2, [X31 + 0x8]
	0x03B2B2F8 LDR V3, [X31 + 0x6]
	0x03B2B2FC LDR V1, [X19 + 0x8]
	0x00000000 INVALID
	0x03B2B304 LDR X8, [X31 + 0x30]
	0x03B2B308 MOV V2.S[1], V3.S[0]
	0x03B2B30C FADD V0.2S, V2.2S, V0.2S
	0x03B2B310 LDR V2, [X31 + 0x7C]
	0x03B2B314 FMUL S1, S4, S1
	0x03B2B318 STR D0, [X8]
	0x03B2B31C LDP X20, X19, [X31 + 0x150]
	0x03B2B320 FADD S1, S2, S1
	0x03B2B324 STR S1, [X8 + 0x8]
	0x03B2B328 LDR V2, [X26]
	0x03B2B32C LDR V3, [X26 + 0x8]
	0x03B2B330 LDR V4, [X25]
	0x03B2B334 LDR V5, [X25 + 0x8]
	0x03B2B338 LDR X8, [X31 + 0x48]
	0x03B2B33C LDP X22, X21, [X31 + 0x140]
	0x03B2B340 LDP X24, X23, [X31 + 0x130]
	0x03B2B344 LDP X26, X25, [X31 + 0x120]
	0x03B2B348 LDP X28, X27, [X31 + 0x110]
	0x03B2B34C LDP X29, X30, [X31 + 0x100]
	0x03B2B350 LDP D9, D8, [X31 + 0xF0]
	0x03B2B354 LDP D11, D10, [X31 + 0xE0]
	0x03B2B358 LDP D13, D12, [X31 + 0xD0]
	0x03B2B35C LDP D15, D14, [X31 + 0xC0]
	0x03B2B360 FADD V0.2S, V0.2S, V2.2S
	0x03B2B364 FADD S1, S1, S3
	0x03B2B368 FSUB V0.2S, V0.2S, V4.2S
	0x03B2B36C FSUB S1, S1, S5
	0x03B2B370 STR D0, [X8]
	0x03B2B374 STR S1, [X8 + 0x8]
	0x03B2B378 ADD X31, X31, 0x160
	0x03B2B37C RET
	0x03B2B380 BL 0x1C16F20
	0x03B2B384 STP D11, D10, [X31 - 0x30]!
	0x03B2B388 STP D9, D8, [X31 + 0x10]
	0x03B2B38C STP X30, X19, [X31 + 0x20]
	0x03B2B390 CBZ X0, 0x3B2B410
	0x03B2B394 LDR W8, [X0 + 0x18]
	0x03B2B398 CBZ W8, 0x3B2B40C
	0x03B2B39C CMP W8, 0x3
	0x03B2B3A0 B.LS 0x3B2B40C
	0x03B2B3A4 ADRP X19, 0x8AD000
	0x03B2B3A8 LDR V8, [X0 + 0x28]
	0x03B2B3AC LDR V9, [X0 + 0x20]
	0x03B2B3B0 LDUR V10, [X0 + 0x44]
	0x03B2B3B4 LDRB W8, [X19 + 0xB70]
	0x03B2B3B8 LDR V11, [X0 + 0x4C]
	0x03B2B3BC CBNZ W8, 0x3B2B3D4
	0x03B2B3C0 ADRP X0, 0x5C8000
	0x03B2B3C4 LDR X0, [X0 + 0x5A0]
	0x03B2B3C8 BL 0x1C16CF4
	0x03B2B3CC MOVZ W8, 0x1
	0x03B2B3D0 STRB W8, [X19 + 0xB70]
	0x03B2B3D4 ADRP X8, 0x5C8000
	0x03B2B3D8 LDR X8, [X8 + 0x5A0]
	0x03B2B3DC FSUB S5, S11, S8
	0x03B2B3E0 FSUB V3.2S, V10.2S, V9.2S
	0x03B2B3E4 LDP X30, X19, [X31 + 0x20]
	0x03B2B3E8 LDR X8, [X8]
	0x03B2B3EC LDP D9, D8, [X31 + 0x10]
	0x03B2B3F0 MOV S4, V3.S[1]
	0x03B2B3F4 MOV X0, X31
	0x03B2B3F8 LDR X8, [X8 + 0xB8]
	0x03B2B3FC LDP S0, S1, [X8 + 0x3C]
	0x03B2B400 LDR V2, [X8 + 0x44]
	0x03B2B404 LDP D11, D10, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X29
	011 Move [X31+88], X30
	012 Move [X31+96], X28
	013 Move [X31+104], X27
	014 Move [X31+112], X26
	015 Move [X31+120], X25
	016 Move [X31+128], X24
	017 Move [X31+136], X23
	018 Move [X31+144], X22
	019 Move [X31+152], X21
	020 Move [X31+160], X20
	021 Move [X31+168], X19
	022 Move X21, 0x8B9000
	023 Move W8, [X21+1920]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {56}
	030 Move X0, 0x630000
	031 Move X0, [X0+3344]
	032 Call 0x1C17CF4
	033 Move X0, 0x5CC000
	034 Move X0, [X0+2520]
	035 Call 0x1C17CF4
	036 Move X0, 0x5D1000
	037 Move X0, [X0+1656]
	038 Call 0x1C17CF4
	039 Move X0, 0x5CB000
	040 Move X0, [X0+3576]
	041 Call 0x1C17CF4
	042 Move X0, 0x5CE000
	043 Move X0, [X0+952]
	044 Call 0x1C17CF4
	045 Move X0, 0x5CD000
	046 Move X0, [X0+2424]
	047 Call 0x1C17CF4
	048 Move X0, 0x5CD000
	049 Move X0, [X0+2432]
	050 Call 0x1C17CF4
	051 Move X0, 0x62F000
	052 Move X0, [X0+3392]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+1920], W8
	056 Compare X20, 0
	057 JumpIfEqual {310}
	058 Move W8, [X20+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X31], W8
	061 Move X25, 0x62F000
	062 Move X25, [X25+3344]
	063 Move X0, [X25]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X25]
	069 Move X8, [X0+184]
	070 Move X0, [X8+64]
	071 Compare X0, 0
	072 JumpIfEqual {310}
	073 Move X8, 0x5D0000
	074 Move X8, [X8+1656]
	075 Move X1, [X8]
	076 Call HashSet`1<Int32>.Clear, X0
	077 Move W26, [X20+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X27, 0x5CD000
	080 Move X22, 0x62F000
	081 Move X27, [X27+2432]
	082 Move X22, [X22+3392]
	083 Move W21, W31
	084 Move W24, 1
	085 Move X28, 0x8B8000
	086 Move W23, 1
	087 Move X2, [X27]
	088 Move X0, X20
	089 Move W1, W23
	090 Call List`1<Vector3>.get_Item, X0, X1
	091 Move X2, [X27]
	092 Move X0, X20
	093 Move W1, W21
	094 Move V9, V0
	095 Move V8, V2
	096 Call List`1<Vector3>.get_Item, X0, X1
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 Move X0, [X22]
	099 Move V11, V0
	100 Move V10, V2
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move W8, [X28+2020]
	106 Compare W8, 0
	107 JumpIfNotEqual {111}
	108 Move X0, X22
	109 Call 0x1C17CF4
	110 Move [X28+2020], W24
	111 Move X0, [X22]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X22]
	117 Subtract S0, S11, S9
	118 NotImplemented "Instruction FNEG not yet implemented."
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction FCSEL not yet implemented."
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 Move X8, [X0+184]
	123 Move V1, [X8]
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move W21, W23
	126 Add W23, W23, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move W21, W31
	129 Move X27, 0x5CD000
	130 Move X29, 0x5CA000
	131 Move X28, 0x62F000
	132 Move X27, [X27+2432]
	133 Move X29, [X29+3576]
	134 Move X28, [X28+3392]
	135 Move W22, W21
	136 Move X2, [X27]
	137 Move X0, X20
	138 Move W1, W22
	139 Call List`1<Vector3>.get_Item, X0, X1
	140 Move [X31+12], S0
	141 Move [X31+4], S1
	142 Compare X19, 0
	143 JumpIfEqual {310}
	144 Move X8, 0x5CD000
	145 Move W10, [X19+28]
	146 Move X9, [X19+16]
	147 Move X8, [X8+952]
	148 Add W10, W10, 1
	149 Move X8, [X8]
	150 Move [X19+28], W10
	151 Compare X9, 0
	152 JumpIfEqual {310}
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Move W11, [X9+24]
	155 Move V10, V2
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move V1, [X31+12]
	158 Move V0, [X31+4]
	159 Move W11, 12
	160 Add W8, W10, 1
	161 NotImplemented "Instruction MADD not yet implemented."
	162 Move [X19+24], W8
	163 Move [X9+32], S1
	164 Move [X9+40], S0
	165 Move [X9+40], S10
	166 Move X8, [X8+32]
	167 Move V0, [X31+12]
	168 Move V1, [X31+4]
	169 Move X0, X19
	170 Move X8, [X8+192]
	171 Move V2, V10
	172 Move X1, [X8+112]
	173 Call List`1<Vector3>.AddWithResize, X0, X1
	174 Move X0, [X25]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X25]
	180 Move X8, [X0+184]
	181 Move X0, [X8+64]
	182 Compare X0, 0
	183 JumpIfEqual {310}
	184 Move X8, 0x5CB000
	185 Move X8, [X8+2520]
	186 Move W1, W22
	187 Move X2, [X8]
	188 Call HashSet`1<Int32>.Add, X0, X1
	189 Move X2, [X27]
	190 Move X0, X20
	191 Move W1, W31
	192 Call List`1<Vector3>.get_Item, X0, X1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move W24, W31
	195 Move [X31+8], S1
	196 Move V9, V0
	197 Move V11, V2
	198 Move W24, W31
	199 Move W23, 1
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, [X25]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {207}
	205 Call 0x1C17DFC
	206 Move X0, [X25]
	207 Move X8, [X0+184]
	208 Move X0, [X8+64]
	209 Compare X0, 0
	210 JumpIfEqual {310}
	211 Move X2, [X29]
	212 Move W1, W23
	213 Call HashSet`1<Int32>.Contains, X0, X1
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {281}
	219 Move X2, [X27]
	220 Move X0, X20
	221 Move W1, W23
	222 Call List`1<Vector3>.get_Item, X0, X1
	223 Move V12, V2
	224 Move V2, [X31+12]
	225 Move X0, [X28]
	226 Move V14, V0
	227 Move V15, V1
	228 Subtract S0, S9, S2
	229 Subtract S1, S11, S10
	230 Subtract S2, S14, S2
	231 Subtract S3, S12, S10
	232 Multiply S1, S1, S2
	233 Multiply S0, S0, S3
	234 Move W8, [X0+224]
	235 Move V13, V9
	236 Subtract S9, S1, S0
	237 NotImplemented "Instruction FNEG not yet implemented."
	238 NotImplemented "Instruction FCMP not yet implemented."
	239 Move V8, V11
	240 NotImplemented "Instruction FCSEL not yet implemented."
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X28]
	245 Move X8, [X0+184]
	246 Move V0, [X8]
	247 NotImplemented "Instruction FCMP not yet implemented."
	248 Move S1, [X31+8]
	249 Move S3, [X31+12]
	250 Move V4, [X31+4]
	251 Subtract S2, S10, S8
	252 Subtract S5, S10, S12
	253 Subtract S0, S3, S13
	254 Subtract S1, S4, S1
	255 Subtract S3, S3, S14
	256 Subtract S4, S4, S15
	257 Multiply S0, S0, S0
	258 Multiply S1, S1, S1
	259 Multiply S3, S3, S3
	260 Multiply S4, S4, S4
	261 Multiply S2, S2, S2
	262 Multiply S5, S5, S5
	263 Add S0, S1, S0
	264 Add S1, S3, S4
	265 Add S0, S2, S0
	266 Add S1, S5, S1
	267 Move V9, V13
	268 Move V11, V8
	269 NotImplemented "Instruction FCMP not yet implemented."
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 Move V9, V13
	272 Move V11, V8
	273 Move X2, [X27]
	274 Move X0, X20
	275 Move W1, W23
	276 Call List`1<Vector3>.get_Item, X0, X1
	277 Move V9, V0
	278 Move V11, V2
	279 Move W24, W23
	280 Move [X31+8], S1
	281 Add W23, W23, 1
	282 NotImplemented "Instruction CMP not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move W22, W24
	285 Move W8, [X31]
	286 Move X20, [X31+160]
	287 Move X19, [X31+168]
	288 Move X22, [X31+144]
	289 Move X21, [X31+152]
	290 Move X24, [X31+128]
	291 Move X23, [X31+136]
	292 Move X26, [X31+112]
	293 Move X25, [X31+120]
	294 Move X28, [X31+96]
	295 Move X27, [X31+104]
	296 Move X29, [X31+80]
	297 Move X30, [X31+88]
	298 Move D9, [X31+64]
	299 Move D8, [X31+72]
	300 Move D11, [X31+48]
	301 Move D10, [X31+56]
	302 Move D13, [X31+32]
	303 Move D12, [X31+40]
	304 Move D15, [X31+16]
	305 Move D14, [X31+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 NotImplemented "Instruction CSET not yet implemented."
	308 Add X31, X31, 176
	309 Return X0
	310 Call 0x1C17F20

Method: UnityEngine.Vector3 PolygonCentroid2D(System.Collections.Generic.List`1<UnityEngine.Vector3> vertices)

Disassembly:
	0x03B2B408 B 0x3C2A1AC
	0x03B2B40C BL 0x1C16F28
	0x03B2B410 BL 0x1C16F20
	0x03B2B414 STR D10, [X31 - 0x40]!
	0x03B2B418 STP D9, D8, [X31 + 0x8]
	0x03B2B41C STR X30, [X31 + 0x18]
	0x03B2B420 STP X22, X21, [X31 + 0x20]
	0x03B2B424 STP X20, X19, [X31 + 0x30]
	0x03B2B428 ADRP X20, 0x8B7000
	0x03B2B42C LDRB W8, [X20 + 0x784]
	0x03B2B430 MOV X19, X0
	0x03B2B434 TBNZ X8, 0x0, 0x3B2B464
	0x03B2B438 ADRP X0, 0x5CC000
	0x03B2B43C LDR X0, [X0 + 0x978]
	0x03B2B440 BL 0x1C16CF4
	0x03B2B444 ADRP X0, 0x5CC000
	0x03B2B448 LDR X0, [X0 + 0x980]
	0x03B2B44C BL 0x1C16CF4
	0x03B2B450 ADRP X0, 0x5C8000
	0x03B2B454 LDR X0, [X0 + 0x5A8]
	0x03B2B458 BL 0x1C16CF4
	0x03B2B45C MOVZ W8, 0x1
	0x03B2B460 STRB W8, [X20 + 0x784]
	0x03B2B464 CBZ X19, 0x3B2B53C
	0x03B2B468 LDR W21, [X19 + 0x18]
	0x03B2B46C CMP W21, 0x3
	0x03B2B470 B.LT 0x3B2B520
	0x03B2B474 ADRP X22, 0x5CC000
	0x03B2B478 LDR X22, [X22 + 0x980]
	0x03B2B47C MOV X0, X19
	0x03B2B480 MOV W1, W31
	0x03B2B484 LDR X2, [X22]
	0x03B2B488 BL 0x30CBE84
	0x03B2B48C LDR X2, [X22]
	0x03B2B490 SUB W1, W21, 0x1
	0x03B2B494 MOV X0, X19
	0x03B2B498 MOV V8.16B, V0.16B
	0x03B2B49C MOV V9.16B, V2.16B
	0x03B2B4A0 BL 0x30CBE84
	0x03B2B4A4 FMUL S0, S9, S0
	0x03B2B4A8 FMUL S1, S8, S2
	0x03B2B4AC FSUB S10, S0, S1
	0x03B2B4B0 MOVZ W20, 0x1
	0x03B2B4B4 LDR X2, [X22]
	0x03B2B4B8 SUB W1, W20, 0x1
	0x03B2B4BC MOV X0, X19
	0x03B2B4C0 BL 0x30CBE84
	0x03B2B4C4 LDR X2, [X22]
	0x03B2B4C8 MOV X0, X19
	0x03B2B4CC MOV W1, W20
	0x03B2B4D0 MOV V8.16B, V0.16B
	0x03B2B4D4 MOV V9.16B, V2.16B
	0x03B2B4D8 BL 0x30CBE84
	0x03B2B4DC FMUL S1, S8, S2
	0x03B2B4E0 FMUL S0, S9, S0
	0x03B2B4E4 ADD W20, W20, 0x1
	0x03B2B4E8 FSUB S0, S1, S0
	0x03B2B4EC CMP W21, W20
	0x03B2B4F0 FADD S10, S10, S0
	0x03B2B4F4 B.NE 0x3B2B4B4
	0x03B2B4F8 ADRP X8, 0x5C8000
	0x03B2B4FC LDR X8, [X8 + 0x5A8]
	0x03B2B500 FMOV S0, 0.5
	0x03B2B504 FMUL S8, S10, S0
	0x03B2B508 LDR X0, [X8]
	0x03B2B50C LDR W8, [X0 + 0xE0]
	0x03B2B510 CBNZ W8, 0x3B2B518
	0x03B2B514 BL 0x1C16DFC
	0x03B2B518 FABS S0, S8
	0x03B2B51C B 0x3B2B524
	0x03B2B520 FMOV S0, W31
	0x03B2B524 LDP X20, X19, [X31 + 0x30]
	0x03B2B528 LDP X22, X21, [X31 + 0x20]
	0x03B2B52C LDR X30, [X31 + 0x18]
	0x03B2B530 LDP D9, D8, [X31 + 0x8]
	0x03B2B534 LDR V10, [X31], #0x40
	0x03B2B538 RET
	0x03B2B53C BL 0x1C16F20
	0x03B2B540 SUB X31, X31, 0x90
	0x03B2B544 STR D10, [X31 + 0x40]
	0x03B2B548 STP D9, D8, [X31 + 0x50]
	0x03B2B54C STP X30, X23, [X31 + 0x60]
	0x03B2B550 STP X22, X21, [X31 + 0x70]
	0x03B2B554 STP X20, X19, [X31 + 0x80]
	0x03B2B558 ADRP X21, 0x8B7000
	0x03B2B55C LDRB W8, [X21 + 0x785]
	0x03B2B560 MOV X19, X1
	0x03B2B564 MOV X20, X0
	0x03B2B568 TBNZ X8, 0x0, 0x3B2B5BC
	0x03B2B56C ADRP X0, 0x62E000
	0x03B2B570 LDR X0, [X0 + 0xD18]
	0x03B2B574 BL 0x1C16CF4
	0x03B2B578 ADRP X0, 0x62E000
	0x03B2B57C LDR X0, [X0 + 0xD20]
	0x03B2B580 BL 0x1C16CF4
	0x03B2B584 ADRP X0, 0x62E000
	0x03B2B588 LDR X0, [X0 + 0xD28]

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x8B8000
	012 Move W8, [X20+1921]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x5CD000
	019 Move X0, [X0+2424]
	020 Call 0x1C17CF4
	021 Move X0, 0x5CD000
	022 Move X0, [X0+2432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1921], W8
	026 Compare X19, 0
	027 JumpIfEqual {106}
	028 Move X21, 0x5CD000
	029 Move X21, [X21+2432]
	030 Move W22, [X19+24]
	031 Move X0, X19
	032 Move W1, W31
	033 Move X2, [X21]
	034 Subtract W20, W22, 1
	035 Call List`1<Vector3>.get_Item, X0, X1
	036 NotImplemented "Instruction FCVT not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction FCVT not yet implemented."
	039 Move D8, X31
	040 Move W20, 1
	041 Move D11, X31
	042 Move D10, X31
	043 Move X2, [X21]
	044 Move X0, X19
	045 Move W1, W20
	046 Call List`1<Vector3>.get_Item, X0, X1
	047 NotImplemented "Instruction FCVT not yet implemented."
	048 NotImplemented "Instruction FCVT not yet implemented."
	049 Move X2, [X21]
	050 Multiply D2, D9, D1
	051 Multiply D3, D12, D0
	052 Add D0, D9, D0
	053 Add D1, D12, D1
	054 Subtract D2, D2, D3
	055 Multiply D0, D0, D2
	056 Multiply D1, D1, D2
	057 Move X0, X19
	058 Move W1, W20
	059 Add D8, D8, D2
	060 Add D11, D11, D0
	061 Add D10, D10, D1
	062 Call List`1<Vector3>.get_Item, X0, X1
	063 Add W20, W20, 1
	064 NotImplemented "Instruction FCVT not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction FCVT not yet implemented."
	067 Move D10, X31
	068 Move D11, X31
	069 Move D8, X31
	070 Move X2, [X21]
	071 Move X0, X19
	072 Move W1, W31
	073 Call List`1<Vector3>.get_Item, X0, X1
	074 NotImplemented "Instruction FCVT not yet implemented."
	075 NotImplemented "Instruction FCVT not yet implemented."
	076 Multiply D3, D9, D1
	077 Add D4, D9, D0
	078 Multiply D0, D12, D0
	079 Add D1, D12, D1
	080 Subtract D0, D3, D0
	081 Move D2, 0.5
	082 Add D3, D8, D0
	083 Multiply D4, D4, D0
	084 Multiply D0, D1, D0
	085 Move D5, 4.000000000465661
	086 Add D1, D11, D4
	087 Add D0, D10, D0
	088 Multiply D2, D3, D2
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X30, [X31+40]
	094 Move D9, [X31+24]
	095 Move D8, [X31+32]
	096 Move D11, [X31+8]
	097 Move D10, [X31+16]
	098 Multiply D2, D2, D5
	099 NotImplemented "Instruction FDIV not yet implemented."
	100 NotImplemented "Instruction FDIV not yet implemented."
	101 NotImplemented "Instruction INVALID not yet implemented."
	102 NotImplemented "Instruction INVALID not yet implemented."
	103 Move S1, W31
	104 Move V12, [X31+80]
	105 Return X0
	106 Call 0x1C17F20

Method: UnityEngine.Vector2 OrientedMinimumBoundingBox2D(System.Collections.Generic.List`1<UnityEngine.Vector3> convexHull, UnityEngine.Vector3[] boundingBox)

Disassembly:
	0x03B2B58C BL 0x1C16CF4
	0x03B2B590 ADRP X0, 0x62E000
	0x03B2B594 LDR X0, [X0 + 0xD10]
	0x03B2B598 BL 0x1C16CF4
	0x03B2B59C ADRP X0, 0x62E000
	0x03B2B5A0 LDR X0, [X0 + 0xD30]
	0x03B2B5A4 BL 0x1C16CF4
	0x03B2B5A8 ADRP X0, 0x5CC000
	0x03B2B5AC LDR X0, [X0 + 0x978]
	0x03B2B5B0 BL 0x1C16CF4
	0x03B2B5B4 MOVZ W8, 0x1
	0x03B2B5B8 STRB W8, [X21 + 0x785]
	0x03B2B5BC MOVI V0.2D, 0x0
	0x03B2B5C0 STP V0, V0, [X31 + 0x20]
	0x03B2B5C4 CBZ X20, 0x3B2B690
	0x03B2B5C8 LDR W8, [X20 + 0x18]
	0x03B2B5CC CMP W8, 0x1
	0x03B2B5D0 B.LT 0x3B2B654
	0x03B2B5D4 ADRP X8, 0x62E000
	0x03B2B5D8 LDR X8, [X8 + 0xD30]
	0x03B2B5DC ADRP X22, 0x62E000
	0x03B2B5E0 ADRP X23, 0x62E000
	0x03B2B5E4 ADRP X21, 0x62E000
	0x03B2B5E8 LDR X1, [X8]
	0x03B2B5EC LDR X22, [X22 + 0xD20]
	0x03B2B5F0 LDR X23, [X23 + 0xD10]
	0x03B2B5F4 LDR X21, [X21 + 0xD18]
	0x03B2B5F8 ADD X8, X31, 0x0
	0x03B2B5FC MOV X0, X20
	0x03B2B600 BL 0x30CCE2C
	0x03B2B604 LDP V0, V1, [X31]
	0x03B2B608 STP V0, V1, [X31 + 0x20]
	0x03B2B60C LDR X1, [X22]
	0x03B2B610 ADD X0, X31, 0x20
	0x03B2B614 BL 0x2BD04FC
	0x03B2B618 TBZ X0, 0x0, 0x3B2B65C
	0x03B2B61C LDR X0, [X23]
	0x03B2B620 LDP S10, S8, [X31 + 0x30]
	0x03B2B624 LDR V9, [X31 + 0x38]
	0x03B2B628 LDR W8, [X0 + 0xE0]
	0x03B2B62C CBNZ W8, 0x3B2B634
	0x03B2B630 BL 0x1C16DFC
	0x03B2B634 MOV V0.16B, V10.16B
	0x03B2B638 MOV V1.16B, V8.16B
	0x03B2B63C MOV V2.16B, V9.16B
	0x03B2B640 MOV X0, X19
	0x03B2B644 BL 0x3B29B84
	0x03B2B648 TBNZ X0, 0x0, 0x3B2B60C
	0x03B2B64C MOVZ W19, 0x5
	0x03B2B650 B 0x3B2B660
	0x03B2B654 MOV W0, W31
	0x03B2B658 B 0x3B2B674
	0x03B2B65C MOVZ W19, 0x6
	0x03B2B660 LDR X1, [X21]
	0x03B2B664 ADD X0, X31, 0x20
	0x03B2B668 BL 0x2BD04F8
	0x03B2B66C CMP W19, 0x5
	0x03B2B670 CSET W0, NE
	0x03B2B674 LDP X20, X19, [X31 + 0x80]
	0x03B2B678 LDP X22, X21, [X31 + 0x70]
	0x03B2B67C LDP X30, X23, [X31 + 0x60]
	0x03B2B680 LDP D9, D8, [X31 + 0x50]
	0x03B2B684 LDR V10, [X31 + 0x40]
	0x03B2B688 ADD X31, X31, 0x90
	0x03B2B68C RET
	0x03B2B690 BL 0x1C16F20
	0x03B2B694 B 0x3B2B69C
	0x03B2B698 B 0x3B2B69C
	0x03B2B69C MOV X19, X0
	0x03B2B6A0 CMP W1, 0x1
	0x03B2B6A4 B.NE 0x3B2B6D0
	0x03B2B6A8 MOV X0, X19
	0x03B2B6AC BL 0x3EB1AD0
	0x03B2B6B0 LDR X20, [X0]
	0x03B2B6B4 BL 0x3EB1AE0
	0x03B2B6B8 LDR X1, [X21]
	0x03B2B6BC ADD X0, X31, 0x20
	0x03B2B6C0 BL 0x2BD04F8
	0x03B2B6C4 CBNZ X20, 0x3B2B6D8
	0x03B2B6C8 MOV W19, W31
	0x03B2B6CC B 0x3B2B66C
	0x03B2B6D0 MOV X20, X31
	0x03B2B6D4 B 0x3B2B6E4
	0x03B2B6D8 MOV X0, X20
	0x03B2B6DC BL 0x1C16F18
	0x03B2B6E0 MOV X19, X0
	0x03B2B6E4 LDR X1, [X21]
	0x03B2B6E8 ADD X0, X31, 0x20
	0x03B2B6EC BL 0x2BD04F8
	0x03B2B6F0 CBNZ X20, 0x3B2B6FC
	0x03B2B6F4 MOV X0, X19
	0x03B2B6F8 BL 0x1D2C690
	0x03B2B6FC MOV X0, X20
	0x03B2B700 BL 0x1C16F18
	0x03B2B704 BL 0x1990590
	0x03B2B708 STR D8, [X31 - 0x30]!
	0x03B2B70C STR X30, [X31 + 0x8]
	0x03B2B710 STP X22, X21, [X31 + 0x10]
	0x03B2B714 STP X20, X19, [X31 + 0x20]
	0x03B2B718 ADRP X21, 0x8B7000
	0x03B2B71C ADRP X22, 0x62E000
	0x03B2B720 LDRB W8, [X21 + 0x786]
	0x03B2B724 LDR X22, [X22 + 0xD10]
	0x03B2B728 MOV V8.16B, V0.16B
	0x03B2B72C MOV X19, X1
	0x03B2B730 MOV X20, X0
	0x03B2B734 TBNZ X8, 0x0, 0x3B2B74C
	0x03B2B738 ADRP X0, 0x62E000
	0x03B2B73C LDR X0, [X0 + 0xD10]
	0x03B2B740 BL 0x1C16CF4
	0x03B2B744 MOVZ W8, 0x1
	0x03B2B748 STRB W8, [X21 + 0x786]
	0x03B2B74C LDR X0, [X22]
	0x03B2B750 LDR W8, [X0 + 0xE0]
	0x03B2B754 CBNZ W8, 0x3B2B75C
	0x03B2B758 BL 0x1C16DFC
	0x03B2B75C MOV X0, X20
	0x03B2B760 MOV X1, X19
	0x03B2B764 LDP X20, X19, [X31 + 0x20]
	0x03B2B768 LDP X22, X21, [X31 + 0x10]
	0x03B2B76C LDR X30, [X31 + 0x8]
	0x03B2B770 FMUL S0, S8, S8
	0x03B2B774 LDR V8, [X31], #0x30
	0x03B2B778 B 0x3B2B77C
	0x03B2B77C SUB X31, X31, 0x50
	0x03B2B780 STR D8, [X31 + 0x20]
	0x03B2B784 STR X30, [X31 + 0x28]
	0x03B2B788 STP X22, X21, [X31 + 0x30]
	0x03B2B78C STP X20, X19, [X31 + 0x40]
	0x03B2B790 ADRP X22, 0x8B7000
	0x03B2B794 ADRP X21, 0x62E000
	0x03B2B798 LDRB W8, [X22 + 0x787]
	0x03B2B79C LDR X21, [X21 + 0xD10]
	0x03B2B7A0 MOV V8.16B, V0.16B
	0x03B2B7A4 MOV X20, X1
	0x03B2B7A8 MOV X19, X0
	0x03B2B7AC TBNZ X8, 0x0, 0x3B2B7C4
	0x03B2B7B0 ADRP X0, 0x62E000
	0x03B2B7B4 LDR X0, [X0 + 0xD10]
	0x03B2B7B8 BL 0x1C16CF4
	0x03B2B7BC MOVZ W8, 0x1
	0x03B2B7C0 STRB W8, [X22 + 0x787]
	0x03B2B7C4 LDR X0, [X21]
	0x03B2B7C8 STR W31, [X31 + 0x18]
	0x03B2B7CC STR X31, [X31 + 0x10]
	0x03B2B7D0 STR W31, [X31 + 0x8]
	0x03B2B7D4 STR X31, [X31]
	0x03B2B7D8 LDR W8, [X0 + 0xE0]
	0x03B2B7DC CBNZ W8, 0x3B2B7E4
	0x03B2B7E0 BL 0x1C16DFC
	0x03B2B7E4 ADD X2, X31, 0x10
	0x03B2B7E8 ADD X3, X31, 0x0
	0x03B2B7EC FMOV S0, W31
	0x03B2B7F0 MOV X0, X19
	0x03B2B7F4 MOV X1, X20
	0x03B2B7F8 BL 0x3B29494
	0x03B2B7FC LDR V0, [X31]
	0x03B2B800 LDUR V1, [X31 + 0x4]
	0x03B2B804 LDR V2, [X31 + 0x10]
	0x03B2B808 LDUR V3, [X31 + 0x14]
	0x03B2B80C FSUB S0, S0, S2
	0x03B2B810 FSUB V1.2S, V1.2S, V3.2S
	0x03B2B814 FMUL S0, S0, S0
	0x00000000 INVALID
	0x03B2B81C FADD S0, S0, S1
	0x03B2B820 MOV S1, V1.S[1]
	0x03B2B824 FADD S0, S1, S0
	0x03B2B828 FCMP S0, S8
	0x03B2B82C B.LS 0x3B2B850
	0x03B2B830 LDR X0, [X21]
	0x03B2B834 LDR W8, [X0 + 0xE0]
	0x03B2B838 CBNZ W8, 0x3B2B840
	0x03B2B83C BL 0x1C16DFC
	0x03B2B840 MOV X0, X19
	0x03B2B844 MOV X1, X20
	0x03B2B848 BL 0x3B2B540
	0x03B2B84C TBZ X0, 0x0, 0x3B2B858
	0x03B2B850 MOVZ W0, 0x1
	0x03B2B854 B 0x3B2B874
	0x03B2B858 LDR X0, [X21]
	0x03B2B85C LDR W8, [X0 + 0xE0]
	0x03B2B860 CBNZ W8, 0x3B2B868
	0x03B2B864 BL 0x1C16DFC
	0x03B2B868 MOV X0, X20
	0x03B2B86C MOV X1, X19
	0x03B2B870 BL 0x3B2B540
	0x03B2B874 LDP X20, X19, [X31 + 0x40]
	0x03B2B878 LDP X22, X21, [X31 + 0x30]
	0x03B2B87C LDR X30, [X31 + 0x28]
	0x03B2B880 LDR V8, [X31 + 0x20]
	0x03B2B884 AND W0, W0, 0x1
	0x03B2B888 ADD X31, X31, 0x50
	0x03B2B88C RET
	0x03B2B890 SUB X31, X31, 0xC0
	0x03B2B894 STP D15, D14, [X31 + 0x60]
	0x03B2B898 STP D13, D12, [X31 + 0x70]
	0x03B2B89C STP D11, D10, [X31 + 0x80]
	0x03B2B8A0 STP D9, D8, [X31 + 0x90]
	0x03B2B8A4 STP X30, X21, [X31 + 0xA0]
	0x03B2B8A8 STP X20, X19, [X31 + 0xB0]
	0x03B2B8AC ADRP X20, 0x8B7000
	0x03B2B8B0 LDRB W8, [X20 + 0x788]
	0x03B2B8B4 MOV X19, X0
	0x03B2B8B8 MOV V10.16B, V1.16B
	0x03B2B8BC MOV V11.16B, V0.16B
	0x03B2B8C0 STP S2, S3, [X31 + 0x18]
	0x03B2B8C4 TBNZ X8, 0x0, 0x3B2B924
	0x03B2B8C8 ADRP X0, 0x62E000
	0x03B2B8CC LDR X0, [X0 + 0xD18]
	0x03B2B8D0 BL 0x1C16CF4
	0x03B2B8D4 ADRP X0, 0x62E000
	0x03B2B8D8 LDR X0, [X0 + 0xD20]
	0x03B2B8DC BL 0x1C16CF4
	0x03B2B8E0 ADRP X0, 0x62E000
	0x03B2B8E4 LDR X0, [X0 + 0xD28]
	0x03B2B8E8 BL 0x1C16CF4
	0x03B2B8EC ADRP X0, 0x62E000
	0x03B2B8F0 LDR X0, [X0 + 0xD10]
	0x03B2B8F4 BL 0x1C16CF4
	0x03B2B8F8 ADRP X0, 0x62E000
	0x03B2B8FC LDR X0, [X0 + 0xD30]
	0x03B2B900 BL 0x1C16CF4
	0x03B2B904 ADRP X0, 0x5CC000
	0x03B2B908 LDR X0, [X0 + 0x978]
	0x03B2B90C BL 0x1C16CF4
	0x03B2B910 ADRP X0, 0x5CC000
	0x03B2B914 LDR X0, [X0 + 0x980]
	0x03B2B918 BL 0x1C16CF4
	0x03B2B91C MOVZ W8, 0x1
	0x03B2B920 STRB W8, [X20 + 0x788]
	0x03B2B924 MOVI V0.2D, 0x0
	0x03B2B928 STP V0, V0, [X31 + 0x40]
	0x03B2B92C CBZ X19, 0x3B2BA48
	0x03B2B930 LDR W8, [X19 + 0x18]
	0x03B2B934 CMP W8, 0x2
	0x03B2B938 B.LT 0x3B2B9FC
	0x03B2B93C ADRP X9, 0x5CC000
	0x03B2B940 LDR X9, [X9 + 0x980]
	0x03B2B944 SUB W1, W8, 0x1
	0x03B2B948 MOV X0, X19
	0x03B2B94C LDR X2, [X9]
	0x03B2B950 BL 0x30CBE84
	0x03B2B954 ADRP X8, 0x62E000
	0x03B2B958 LDR X8, [X8 + 0xD30]
	0x03B2B95C MOV X0, X19
	0x03B2B960 MOV V9.16B, V0.16B
	0x03B2B964 MOV V8.16B, V1.16B
	0x03B2B968 LDR X1, [X8]
	0x03B2B96C ADD X8, X31, 0x20
	0x03B2B970 MOV V14.16B, V2.16B
	0x03B2B974 BL 0x30CCE2C
	0x03B2B978 LDP V0, V1, [X31 + 0x20]
	0x03B2B97C ADRP X20, 0x62E000
	0x03B2B980 LDR X20, [X20 + 0xD20]
	0x03B2B984 ADRP X21, 0x62E000
	0x03B2B988 STP V0, V1, [X31 + 0x40]
	0x03B2B98C LDR X21, [X21 + 0xD10]
	0x03B2B990 LDR X1, [X20]
	0x03B2B994 MOV V12.16B, V9.16B
	0x03B2B998 MOV V13.16B, V8.16B
	0x03B2B99C MOV V15.16B, V14.16B
	0x03B2B9A0 ADD X0, X31, 0x40
	0x03B2B9A4 BL 0x2BD04FC
	0x03B2B9A8 MOV W19, W0
	0x03B2B9AC TBZ X0, 0x0, 0x3B2BA04
	0x03B2B9B0 LDR X0, [X21]
	0x03B2B9B4 LDP S9, S8, [X31 + 0x50]
	0x03B2B9B8 LDR V14, [X31 + 0x58]
	0x03B2B9BC LDR W8, [X0 + 0xE0]
	0x03B2B9C0 CBNZ W8, 0x3B2B9C8
	0x03B2B9C4 BL 0x1C16DFC
	0x03B2B9C8 LDP S2, S0, [X31 + 0x18]
	0x03B2B9CC MOV V1.16B, V10.16B
	0x03B2B9D0 MOV V3.16B, V12.16B
	0x03B2B9D4 MOV V4.16B, V13.16B
	0x03B2B9D8 STR S0, [X31 + 0x10]
	0x03B2B9DC MOV V0.16B, V11.16B
	0x03B2B9E0 MOV V5.16B, V15.16B
	0x03B2B9E4 STP S8, S14, [X31 + 0x4]
	0x03B2B9E8 STR S9, [X31]
	0x03B2B9EC BL 0x3B2BACC
	0x03B2B9F0 TBZ X0, 0x0, 0x3B2B990
	0x03B2B9F4 MOVZ W20, 0x6
	0x03B2B9F8 B 0x3B2BA08
	0x03B2B9FC MOV W0, W31
	0x03B2BA00 B 0x3B2BA28
	0x03B2BA04 MOVZ W20, 0x7
	0x03B2BA08 ADRP X8, 0x62E000
	0x03B2BA0C LDR X8, [X8 + 0xD18]
	0x03B2BA10 ADD X0, X31, 0x40
	0x03B2BA14 LDR X1, [X8]
	0x03B2BA18 BL 0x2BD04F8
	0x03B2BA1C CMP W20, 0x6
	0x03B2BA20 CSET W8, EQ
	0x03B2BA24 AND W0, W19, W8, 0x0
	0x03B2BA28 LDP X20, X19, [X31 + 0xB0]
	0x03B2BA2C LDP X30, X21, [X31 + 0xA0]
	0x03B2BA30 LDP D9, D8, [X31 + 0x90]
	0x03B2BA34 LDP D11, D10, [X31 + 0x80]
	0x03B2BA38 LDP D13, D12, [X31 + 0x70]
	0x03B2BA3C LDP D15, D14, [X31 + 0x60]
	0x03B2BA40 ADD X31, X31, 0xC0
	0x03B2BA44 RET
	0x03B2BA48 BL 0x1C16F20
	0x03B2BA4C B 0x3B2BA50
	0x03B2BA50 MOV X20, X0
	0x03B2BA54 CMP W1, 0x1
	0x03B2BA58 B.NE 0x3B2BA8C
	0x03B2BA5C MOV X0, X20
	0x03B2BA60 BL 0x3EB1AD0
	0x03B2BA64 LDR X19, [X0]
	0x03B2BA68 BL 0x3EB1AE0
	0x03B2BA6C ADRP X8, 0x62E000
	0x03B2BA70 LDR X8, [X8 + 0xD18]
	0x03B2BA74 ADD X0, X31, 0x40
	0x03B2BA78 LDR X1, [X8]
	0x03B2BA7C BL 0x2BD04F8
	0x03B2BA80 CBNZ X19, 0x3B2BA94
	0x03B2BA84 MOV W20, W31
	0x03B2BA88 B 0x3B2BA1C
	0x03B2BA8C MOV X19, X31
	0x03B2BA90 B 0x3B2BAA0
	0x03B2BA94 MOV X0, X19
	0x03B2BA98 BL 0x1C16F18
	0x03B2BA9C MOV X20, X0
	0x03B2BAA0 ADRP X8, 0x62E000
	0x03B2BAA4 LDR X8, [X8 + 0xD18]
	0x03B2BAA8 LDR X1, [X8]
	0x03B2BAAC ADD X0, X31, 0x40
	0x03B2BAB0 BL 0x2BD04F8
	0x03B2BAB4 CBNZ X19, 0x3B2BAC0
	0x03B2BAB8 MOV X0, X20
	0x03B2BABC BL 0x1D2C690
	0x03B2BAC0 MOV X0, X19
	0x03B2BAC4 BL 0x1C16F18
	0x03B2BAC8 BL 0x1990590
	0x03B2BACC LDR V7, [X31]
	0x03B2BAD0 LDR V16, [X31 + 0x8]
	0x03B2BAD4 FSUB S4, S0, S3
	0x03B2BAD8 FSUB S6, S2, S5
	0x03B2BADC FSUB S2, S7, S3
	0x03B2BAE0 FSUB S0, S16, S5
	0x03B2BAE4 LDR V1, [X31 + 0x10]
	0x03B2BAE8 FMUL S3, S4, S0
	0x03B2BAEC FMUL S5, S6, S2
	0x03B2BAF0 FSUB S3, S3, S5
	0x03B2BAF4 FNEG S5, S3
	0x03B2BAF8 FCMP S3, 0x0
	0x03B2BAFC FCSEL S3, S5, S3, LT
	0x03B2BB00 FCMP S3, S1
	0x03B2BB04 B.GE 0x3B2BB20
	0x03B2BB08 FMUL S3, S4, S2
	0x03B2BB0C FMUL S4, S6, S0
	0x03B2BB10 FADD S3, S3, S4
	0x03B2BB14 FNEG S4, S1
	0x03B2BB18 FCMP S3, S4
	0x03B2BB1C B.GE 0x3B2BB28
	0x03B2BB20 MOV W0, W31
	0x03B2BB24 RET
	0x03B2BB28 FMUL S2, S2, S2
	0x03B2BB2C FMUL S0, S0, S0
	0x03B2BB30 FADD S0, S2, S0
	0x03B2BB34 FADD S0, S0, S1
	0x03B2BB38 FCMP S3, S0
	0x03B2BB3C CSET W0, LS
	0x03B2BB40 RET
	0x03B2BB44 STP D11, D10, [X31 - 0x40]!
	0x03B2BB48 STP D9, D8, [X31 + 0x10]
	0x03B2BB4C STR X30, [X31 + 0x20]
	0x03B2BB50 STP X20, X19, [X31 + 0x30]
	0x03B2BB54 ADRP X20, 0x8B7000
	0x03B2BB58 ADRP X19, 0x62E000
	0x03B2BB5C LDRB W8, [X20 + 0x789]
	0x03B2BB60 LDR X19, [X19 + 0xD10]
	0x03B2BB64 MOV V8.16B, V3.16B
	0x03B2BB68 MOV V9.16B, V2.16B
	0x03B2BB6C MOV V10.16B, V1.16B
	0x03B2BB70 MOV V11.16B, V0.16B
	0x03B2BB74 TBNZ X8, 0x0, 0x3B2BB8C
	0x03B2BB78 ADRP X0, 0x62E000
	0x03B2BB7C LDR X0, [X0 + 0xD10]
	0x03B2BB80 BL 0x1C16CF4
	0x03B2BB84 MOVZ W8, 0x1
	0x03B2BB88 STRB W8, [X20 + 0x789]
	0x03B2BB8C LDR X0, [X19]
	0x03B2BB90 LDR W8, [X0 + 0xE0]
	0x03B2BB94 CBNZ W8, 0x3B2BBA0
	0x03B2BB98 BL 0x1C16DFC
	0x03B2BB9C LDR X0, [X19]
	0x03B2BBA0 LDR X8, [X0 + 0xB8]
	0x03B2BBA4 MOV V0.16B, V11.16B
	0x03B2BBA8 MOV V1.16B, V10.16B
	0x03B2BBAC MOV V2.16B, V9.16B
	0x03B2BBB0 LDP S4, S5, [X8]
	0x03B2BBB4 LDR V6, [X8 + 0x8]
	0x03B2BBB8 MOV V3.16B, V8.16B
	0x03B2BBBC MOV X0, X31
	0x03B2BBC0 BL 0x3C2A9FC
	0x03B2BBC4 ADRP X20, 0x8AD000
	0x03B2BBC8 LDRB W8, [X20 + 0x785]
	0x03B2BBCC MOV V8.16B, V0.16B
	0x03B2BBD0 MOV V9.16B, V1.16B
	0x03B2BBD4 MOV V10.16B, V2.16B
	0x03B2BBD8 CBNZ W8, 0x3B2BBF0
	0x03B2BBDC ADRP X0, 0x5C8000
	0x03B2BBE0 LDR X0, [X0 + 0x5A8]
	0x03B2BBE4 BL 0x1C16CF4
	0x03B2BBE8 MOVZ W8, 0x1
	0x03B2BBEC STRB W8, [X20 + 0x785]
	0x03B2BBF0 ADRP X8, 0x5C8000
	0x03B2BBF4 LDR X8, [X8 + 0x5A8]
	0x03B2BBF8 LDR X0, [X8]
	0x03B2BBFC LDR W8, [X0 + 0xE0]
	0x03B2BC00 CBNZ W8, 0x3B2BC08
	0x03B2BC04 BL 0x1C16DFC
	0x03B2BC08 FMUL S0, S8, S8
	0x03B2BC0C FMUL S1, S9, S9
	0x03B2BC10 ADRP X8, 0xFFFFFFFFFCFBF000
	0x03B2BC14 FADD S0, S0, S1
	0x03B2BC18 LDR V1, [X8 + 0x17C]
	0x03B2BC1C FMUL S2, S10, S10
	0x03B2BC20 FADD S0, S2, S0
	0x03B2BC24 FSQRT S0, S0
	0x03B2BC28 FCMP S0, S1
	0x03B2BC2C B.LE 0x3B2BC40
	0x03B2BC30 FDIV S8, S8, S0
	0x03B2BC34 FDIV S9, S9, S0
	0x03B2BC38 FDIV S10, S10, S0
	0x03B2BC3C B 0x3B2BC78
	0x03B2BC40 ADRP X20, 0x8AD000
	0x03B2BC44 LDRB W8, [X20 + 0x783]
	0x03B2BC48 CBNZ W8, 0x3B2BC60
	0x03B2BC4C ADRP X0, 0x5C8000
	0x03B2BC50 LDR X0, [X0 + 0x5A0]
	0x03B2BC54 BL 0x1C16CF4
	0x03B2BC58 MOVZ W8, 0x1
	0x03B2BC5C STRB W8, [X20 + 0x783]
	0x03B2BC60 ADRP X8, 0x5C8000
	0x03B2BC64 LDR X8, [X8 + 0x5A0]
	0x03B2BC68 LDR X8, [X8]
	0x03B2BC6C LDR X8, [X8 + 0xB8]
	0x03B2BC70 LDP S8, S9, [X8]
	0x03B2BC74 LDR V10, [X8 + 0x8]
	0x03B2BC78 LDR X0, [X19]
	0x03B2BC7C FABS S11, S9
	0x03B2BC80 LDR W8, [X0 + 0xE0]
	0x03B2BC84 CBNZ W8, 0x3B2BC90
	0x03B2BC88 BL 0x1C16DFC
	0x03B2BC8C LDR X0, [X19]
	0x03B2BC90 ADRP X8, 0xFFFFFFFFFCFBF000
	0x03B2BC94 LDR V0, [X8 + 0x130]
	0x03B2BC98 LDR X8, [X0 + 0xB8]
	0x03B2BC9C FCMP S11, S0
	0x03B2BCA0 B.LE 0x3B2BCD0
	0x03B2BCA4 LDP S3, S0, [X8 + 0x10]
	0x03B2BCA8 LDR V1, [X8 + 0xC]
	0x03B2BCAC FMUL S4, S10, S3
	0x03B2BCB0 FMUL S5, S9, S0
	0x03B2BCB4 FMUL S6, S8, S0
	0x03B2BCB8 FMUL S7, S10, S1
	0x03B2BCBC FMUL S2, S9, S1
	0x03B2BCC0 FSUB S0, S4, S5
	0x03B2BCC4 FSUB S1, S6, S7
	0x03B2BCC8 FMUL S3, S8, S3
	0x03B2BCCC B 0x3B2BD1C
	0x03B2BCD0 LDP S1, S0, [X8 + 0x4]
	0x03B2BCD4 LDR V2, [X8]
	0x03B2BCD8 FMUL S3, S9, S0
	0x03B2BCDC FMUL S4, S10, S1
	0x03B2BCE0 FSUB S3, S3, S4
	0x03B2BCE4 FMUL S4, S10, S2
	0x03B2BCE8 FMUL S0, S8, S0
	0x03B2BCEC FMUL S1, S8, S1
	0x03B2BCF0 FMUL S2, S9, S2
	0x03B2BCF4 FSUB S4, S4, S0
	0x03B2BCF8 FSUB S1, S1, S2
	0x03B2BCFC FMUL S0, S9, S1
	0x03B2BD00 FMUL S2, S10, S4
	0x03B2BD04 FMUL S5, S10, S3
	0x03B2BD08 FMUL S1, S8, S1
	0x03B2BD0C FSUB S0, S0, S2
	0x03B2BD10 FMUL S2, S8, S4
	0x03B2BD14 FSUB S1, S5, S1
	0x03B2BD18 FMUL S3, S9, S3
	0x03B2BD1C FSUB S2, S2, S3
	0x03B2BD20 MOV V3.16B, V8.16B
	0x03B2BD24 MOV V4.16B, V9.16B
	0x03B2BD28 LDP X20, X19, [X31 + 0x30]
	0x03B2BD2C LDR X30, [X31 + 0x20]
	0x03B2BD30 LDP D9, D8, [X31 + 0x10]
	0x03B2BD34 MOV V5.16B, V10.16B
	0x03B2BD38 MOV X0, X31
	0x03B2BD3C LDP D11, D10, [X31], #0x40
	0x03B2BD40 B 0x3C2A810
	0x03B2BD44 STR D10, [X31 - 0x40]!
	0x03B2BD48 STP D9, D8, [X31 + 0x8]
	0x03B2BD4C STR X30, [X31 + 0x18]
	0x03B2BD50 STP X22, X21, [X31 + 0x20]
	0x03B2BD54 STP X20, X19, [X31 + 0x30]
	0x03B2BD58 ADRP X22, 0x8B7000
	0x03B2BD5C ADRP X21, 0x62E000
	0x03B2BD60 MOV X19, X8
	0x03B2BD64 LDRB W8, [X22 + 0x78A]
	0x03B2BD68 LDR X21, [X21 + 0xD10]
	0x03B2BD6C MOV X20, X0
	0x03B2BD70 TBNZ X8, 0x0, 0x3B2BD88
	0x03B2BD74 ADRP X0, 0x62E000
	0x03B2BD78 LDR X0, [X0 + 0xD10]
	0x03B2BD7C BL 0x1C16CF4
	0x03B2BD80 MOVZ W8, 0x1
	0x03B2BD84 STRB W8, [X22 + 0x78A]
	0x03B2BD88 LDR X0, [X21]
	0x03B2BD8C LDR W8, [X0 + 0xE0]
	0x03B2BD90 CBNZ W8, 0x3B2BD9C
	0x03B2BD94 BL 0x1C16DFC
	0x03B2BD98 LDR X0, [X21]
	0x03B2BD9C LDR X8, [X0 + 0xB8]
	0x03B2BDA0 LDP S0, S1, [X20 + 0xC]
	0x03B2BDA4 LDP S2, S3, [X20 + 0x14]
	0x03B2BDA8 LDP S8, S9, [X8 + 0x18]
	0x03B2BDAC LDR V10, [X8 + 0x20]
	0x03B2BDB0 BL 0x3B2BB44
	0x03B2BDB4 MOV V4.16B, V0.16B
	0x03B2BDB8 MOV V5.16B, V1.16B
	0x03B2BDBC STP X31, X31, [X19 + 0x8]
	0x03B2BDC0 STR X31, [X19]
	0x03B2BDC4 STR W31, [X19 + 0x18]
	0x03B2BDC8 MOV V0.16B, V8.16B
	0x03B2BDCC MOV V1.16B, V9.16B
	0x03B2BDD0 MOV X0, X19
	0x03B2BDD4 LDP X20, X19, [X31 + 0x30]
	0x03B2BDD8 LDP X22, X21, [X31 + 0x20]
	0x03B2BDDC LDR X30, [X31 + 0x18]
	0x03B2BDE0 LDP D9, D8, [X31 + 0x8]
	0x03B2BDE4 MOV V6.16B, V2.16B
	0x03B2BDE8 MOV V7.16B, V3.16B
	0x03B2BDEC MOV V2.16B, V10.16B
	0x03B2BDF0 MOV V3.16B, V4.16B
	0x03B2BDF4 MOV V4.16B, V5.16B
	0x03B2BDF8 MOV V5.16B, V6.16B
	0x03B2BDFC MOV V6.16B, V7.16B
	0x03B2BE00 MOV X1, X31
	0x03B2BE04 LDR V10, [X31], #0x40
	0x03B2BE08 B 0x3C3DB6C
	0x03B2BE0C STP D13, D12, [X31 - 0x60]!
	0x03B2BE10 STP D11, D10, [X31 + 0x10]
	0x03B2BE14 STP D9, D8, [X31 + 0x20]
	0x03B2BE18 STR X30, [X31 + 0x30]
	0x03B2BE1C STP X22, X21, [X31 + 0x40]
	0x03B2BE20 STP X20, X19, [X31 + 0x50]
	0x03B2BE24 ADRP X22, 0x8B7000
	0x03B2BE28 ADRP X21, 0x62E000
	0x03B2BE2C LDRB W8, [X22 + 0x78B]
	0x03B2BE30 LDR X21, [X21 + 0xD10]
	0x03B2BE34 MOV X19, X1
	0x03B2BE38 MOV X20, X0
	0x03B2BE3C MOV V8.16B, V2.16B
	0x03B2BE40 MOV V9.16B, V1.16B
	0x03B2BE44 MOV V10.16B, V0.16B
	0x03B2BE48 TBNZ X8, 0x0, 0x3B2BE60
	0x03B2BE4C ADRP X0, 0x62E000
	0x03B2BE50 LDR X0, [X0 + 0xD10]
	0x03B2BE54 BL 0x1C16CF4
	0x03B2BE58 MOVZ W8, 0x1
	0x03B2BE5C STRB W8, [X22 + 0x78B]
	0x03B2BE60 LDP S13, S0, [X20 + 0x8]
	0x03B2BE64 LDP S1, S2, [X20 + 0x10]
	0x03B2BE68 LDR V3, [X20 + 0x18]
	0x03B2BE6C LDP S11, S12, [X20]
	0x03B2BE70 MOV V4.16B, V10.16B
	0x03B2BE74 MOV V5.16B, V9.16B
	0x03B2BE78 MOV V6.16B, V8.16B
	0x03B2BE7C MOV X0, X31
	0x03B2BE80 BL 0x3C2A9FC
	0x03B2BE84 LDP S6, S4, [X19 + 0xC]
	0x03B2BE88 LDP S5, S3, [X19 + 0x14]
	0x03B2BE8C FADD S8, S11, S0
	0x03B2BE90 FADD S9, S12, S1
	0x03B2BE94 FADD S10, S13, S2
	0x03B2BE98 MOV V0.16B, V6.16B
	0x03B2BE9C MOV V1.16B, V4.16B
	0x03B2BEA0 MOV V2.16B, V5.16B
	0x03B2BEA4 MOV X0, X31
	0x03B2BEA8 BL 0x3C2A260
	0x03B2BEAC LDP S4, S5, [X19]
	0x03B2BEB0 LDR V6, [X19 + 0x8]
	0x03B2BEB4 MOV X0, X31
	0x03B2BEB8 FSUB S4, S8, S4
	0x03B2BEBC FSUB S5, S9, S5
	0x03B2BEC0 FSUB S6, S10, S6
	0x03B2BEC4 BL 0x3C2A9FC
	0x03B2BEC8 LDR X0, [X21]
	0x03B2BECC MOV V8.16B, V0.16B
	0x03B2BED0 MOV V9.16B, V1.16B
	0x03B2BED4 MOV V10.16B, V2.16B
	0x03B2BED8 LDR W8, [X0 + 0xE0]
	0x03B2BEDC CBNZ W8, 0x3B2BEE8
	0x03B2BEE0 BL 0x1C16DFC
	0x03B2BEE4 LDR X0, [X21]
	0x03B2BEE8 LDR X8, [X0 + 0xB8]
	0x03B2BEEC MOV V4.16B, V8.16B
	0x03B2BEF0 MOV V5.16B, V9.16B
	0x03B2BEF4 MOV V6.16B, V10.16B
	0x03B2BEF8 LDP S0, S1, [X8 + 0x24]
	0x03B2BEFC LDP S2, S3, [X8 + 0x2C]
	0x03B2BF00 MOV X0, X31
	0x03B2BF04 BL 0x3C2A9FC
	0x03B2BF08 LDP X20, X19, [X31 + 0x50]
	0x03B2BF0C LDP X22, X21, [X31 + 0x40]
	0x03B2BF10 LDR X30, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+240], D15
	003 Move [X31+248], D14
	004 Move [X31+256], D13
	005 Move [X31+264], D12
	006 Move [X31+272], D11
	007 Move [X31+280], D10
	008 Move [X31+288], D9
	009 Move [X31+296], D8
	010 Move [X31+304], X29
	011 Move [X31+312], X30
	012 Move [X31+320], X28
	013 Move [X31+328], X27
	014 Move [X31+336], X26
	015 Move [X31+344], X25
	016 Move [X31+352], X24
	017 Move [X31+360], X23
	018 Move [X31+368], X22
	019 Move [X31+376], X21
	020 Move [X31+384], X20
	021 Move [X31+392], X19
	022 Move X21, 0x8B8000
	023 Move W8, [X21+1922]
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {50}
	030 Move X0, 0x62F000
	031 Move X0, [X0+3344]
	032 Call 0x1C17CF4
	033 Move X0, 0x5CD000
	034 Move X0, [X0+952]
	035 Call 0x1C17CF4
	036 Move X0, 0x5CD000
	037 Move X0, [X0+896]
	038 Call 0x1C17CF4
	039 Move X0, 0x5CD000
	040 Move X0, [X0+2424]
	041 Call 0x1C17CF4
	042 Move X0, 0x5CD000
	043 Move X0, [X0+2432]
	044 Call 0x1C17CF4
	045 Move X0, 0x5C9000
	046 Move X0, [X0+1448]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1922], W8
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move X8, -50581504
	052 Move [X31+224], D0
	053 Move [X31+208], D0
	054 Move V0, [X8+1608]
	055 Move W8, 0x3F800000
	056 Move [X31+232], W8
	057 Move X8, -50577408
	058 Move [X31+192], D0
	059 Move V0, [X8+888]
	060 Move W8, 0xBF800000
	061 Move [X31+152], W31
	062 Move [X31+144], X31
	063 Move [X31+136], W31
	064 Move [X31+128], X31
	065 Move [X31+120], W31
	066 Move [X31+112], X31
	067 Move [X31+104], W31
	068 Move [X31+96], X31
	069 Move [X31+200], W31
	070 Move [X31+184], W31
	071 Move [X31+160], X31
	072 Move [X31+168], X31
	073 Move [X31+216], W8
	074 Move [X31+176], D0
	075 Compare X20, 0
	076 JumpIfEqual {674}
	077 Move W26, [X20+24]
	078 Move X27, 0x62F000
	079 Move X27, [X27+3344]
	080 Move X28, 0x5CD000
	081 Subtract W8, W26, 1
	082 Move [X31+92], W8
	083 Move X28, [X28+2432]
	084 Move TEMP, 0x800000
	085 Not TEMP
	086 Move W8, TEMP
	087 Move TEMP, 0x80800000
	088 Not TEMP
	089 Move W9, TEMP
	090 Move S8, W8
	091 Move S9, W9
	092 Move W22, W31
	093 Move W23, W31
	094 Move W24, W31
	095 Move W25, W31
	096 Move W21, W31
	097 Move V10, V9
	098 Move V11, V8
	099 Move X2, [X28]
	100 Move X0, X20
	101 Move W1, W21
	102 Call List`1<Vector3>.get_Item, X0, X1
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 NotImplemented "Instruction CSEL not yet implemented."
	105 NotImplemented "Instruction FCSEL not yet implemented."
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 NotImplemented "Instruction FCSEL not yet implemented."
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 NotImplemented "Instruction CSEL not yet implemented."
	111 NotImplemented "Instruction FCSEL not yet implemented."
	112 NotImplemented "Instruction FCMP not yet implemented."
	113 NotImplemented "Instruction CSEL not yet implemented."
	114 Add W21, W21, 1
	115 NotImplemented "Instruction FCSEL not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X31+168], W24
	118 Move [X31+172], W25
	119 Move [X31+160], W23
	120 Move [X31+164], W22
	121 Move X0, [X27]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X27]
	127 Move X8, [X0+184]
	128 Move X8, [X8+56]
	129 Compare X8, 0
	130 JumpIfEqual {674}
	131 Move X29, 0x5CD000
	132 Move X29, [X29+952]
	133 Move W9, [X8+28]
	134 Move W10, [X31+92]
	135 Move X23, 0x8AE000
	136 Move X21, 0x8AE000
	137 Add W9, W9, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X8+24], W31
	140 Move [X8+28], W9
	141 Move X8, -50593792
	142 Move V14, [X8+380]
	143 Move W22, 1
	144 Move W24, 1
	145 Move X2, [X28]
	146 Move X0, X20
	147 Move W1, W24
	148 Subtract W25, W24, 1
	149 Call List`1<Vector3>.get_Item, X0, X1
	150 Move X2, [X28]
	151 Move X0, X20
	152 Move W1, W25
	153 Move V8, V0
	154 Move V9, V1
	155 Move V10, V2
	156 Call List`1<Vector3>.get_Item, X0, X1
	157 Move W8, [X23+1925]
	158 Move V11, V0
	159 Move V12, V1
	160 Move V13, V2
	161 Compare W8, 0
	162 JumpIfNotEqual {167}
	163 Move X0, 0x5C9000
	164 Move X0, [X0+1448]
	165 Call 0x1C17CF4
	166 Move [X23+1925], W22
	167 Move X8, 0x5C9000
	168 Move X8, [X8+1448]
	169 Move X0, [X8]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Subtract S0, S8, S11
	175 Subtract S1, S9, S12
	176 Subtract S2, S10, S13
	177 Multiply S3, S0, S0
	178 Multiply S4, S1, S1
	179 Add S3, S3, S4
	180 Multiply S4, S2, S2
	181 Add S3, S4, S3
	182 NotImplemented "Instruction FSQRT not yet implemented."
	183 NotImplemented "Instruction FCMP not yet implemented."
	184 NotImplemented "Instruction FDIV not yet implemented."
	185 NotImplemented "Instruction FDIV not yet implemented."
	186 NotImplemented "Instruction FDIV not yet implemented."
	187 Move W8, [X21+1923]
	188 Compare W8, 0
	189 JumpIfNotEqual {194}
	190 Move X0, 0x5C9000
	191 Move X0, [X0+1440]
	192 Call 0x1C17CF4
	193 Move [X21+1923], W22
	194 Move X8, 0x5C9000
	195 Move X8, [X8+1440]
	196 Move X8, [X8]
	197 Move X8, [X8+184]
	198 Move S8, [X8]
	199 Move S9, [X8+4]
	200 Move V10, [X8+8]
	201 Move X0, [X27]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {207}
	205 Call 0x1C17DFC
	206 Move X0, [X27]
	207 Move X8, [X0+184]
	208 Move X0, [X8+56]
	209 Compare X0, 0
	210 JumpIfEqual {674}
	211 Move W10, [X0+28]
	212 Move X9, [X0+16]
	213 Move X8, [X29]
	214 Add W10, W10, 1
	215 Move [X0+28], W10
	216 Compare X9, 0
	217 JumpIfEqual {674}
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Move W11, [X9+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move W11, 12
	222 Add W8, W10, 1
	223 NotImplemented "Instruction MADD not yet implemented."
	224 Move [X0+24], W8
	225 Move [X9+32], S8
	226 Move [X9+40], S9
	227 Move [X9+40], S10
	228 Move X8, [X8+32]
	229 Move V0, V8
	230 Move V1, V9
	231 Move V2, V10
	232 Move X8, [X8+192]
	233 Move X1, [X8+112]
	234 Call List`1<Vector3>.AddWithResize, X0, X1
	235 Add W24, W24, 1
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X2, [X28]
	238 Move X0, X20
	239 Move W1, W31
	240 Call List`1<Vector3>.get_Item, X0, X1
	241 Move X2, [X28]
	242 Move W1, [X31+92]
	243 Move X0, X20
	244 Move V8, V0
	245 Move V9, V1
	246 Move V10, V2
	247 Call List`1<Vector3>.get_Item, X0, X1
	248 Move W8, [X23+1925]
	249 Move V11, V0
	250 Move V12, V1
	251 Move V13, V2
	252 Compare W8, 0
	253 JumpIfNotEqual {259}
	254 Move X0, 0x5C9000
	255 Move X0, [X0+1448]
	256 Call 0x1C17CF4
	257 Move W8, 1
	258 Move [X23+1925], W8
	259 Move X8, 0x5C9000
	260 Move X8, [X8+1448]
	261 Subtract S8, S8, S11
	262 Subtract S9, S9, S12
	263 Subtract S10, S10, S13
	264 Move X0, [X8]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X8, -50593792
	270 Multiply S0, S8, S8
	271 Multiply S1, S9, S9
	272 Move V2, [X8+380]
	273 Add S0, S0, S1
	274 Multiply S1, S10, S10
	275 Add S0, S1, S0
	276 NotImplemented "Instruction FSQRT not yet implemented."
	277 NotImplemented "Instruction FCMP not yet implemented."
	278 NotImplemented "Instruction FDIV not yet implemented."
	279 NotImplemented "Instruction FDIV not yet implemented."
	280 NotImplemented "Instruction FDIV not yet implemented."
	281 Move W8, [X21+1923]
	282 Compare W8, 0
	283 JumpIfNotEqual {289}
	284 Move X0, 0x5C9000
	285 Move X0, [X0+1440]
	286 Call 0x1C17CF4
	287 Move W8, 1
	288 Move [X21+1923], W8
	289 Move X8, 0x5C9000
	290 Move X8, [X8+1440]
	291 Move X8, [X8]
	292 Move X8, [X8+184]
	293 Move S8, [X8]
	294 Move S9, [X8+4]
	295 Move V10, [X8+8]
	296 Move X0, [X27]
	297 Move W8, [X0+224]
	298 Compare W8, 0
	299 JumpIfNotEqual {302}
	300 Call 0x1C17DFC
	301 Move X0, [X27]
	302 Move X8, [X0+184]
	303 Move X0, [X8+56]
	304 Compare X0, 0
	305 JumpIfEqual {674}
	306 Move W10, [X0+28]
	307 Move X8, [X0+16]
	308 Move X9, [X29]
	309 Add W10, W10, 1
	310 Move [X0+28], W10
	311 Compare X8, 0
	312 JumpIfEqual {674}
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Move W11, [X8+24]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move W11, 12
	317 Add W9, W10, 1
	318 NotImplemented "Instruction MADD not yet implemented."
	319 Move [X0+24], W9
	320 Move [X8+32], S8
	321 Move [X8+40], S9
	322 Move [X8+40], S10
	323 Move X8, [X9+32]
	324 Move V0, V8
	325 Move V1, V9
	326 Move V2, V10
	327 Move X8, [X8+192]
	328 Move X1, [X8+112]
	329 Call List`1<Vector3>.AddWithResize, X0, X1
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move TEMP, 0x80100000
	332 Not TEMP
	333 Move X8, TEMP
	334 Move W23, 3
	335 Add X24, X31, 144
	336 Add X25, X31, 112
	337 Add X29, X31, 96
	338 Add X22, X31, 128
	339 Move [X31+80], X8
	340 Move X0, [X27]
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {346}
	344 Call 0x1C17DFC
	345 Move X0, [X27]
	346 Move X8, [X0+184]
	347 Move X0, [X8+56]
	348 Compare X0, 0
	349 JumpIfEqual {674}
	350 Move W1, [X31+172]
	351 Move X2, [X28]
	352 Call List`1<Vector3>.get_Item, X0, X1
	353 Move X8, [X27]
	354 Move [X31+92], S2
	355 Move X8, [X8+184]
	356 Move X0, [X8+56]
	357 Compare X0, 0
	358 JumpIfEqual {674}
	359 Move W1, [X31+168]
	360 Move X2, [X28]
	361 Move V15, V0
	362 Move V8, V1
	363 Call List`1<Vector3>.get_Item, X0, X1
	364 Move X8, [X27]
	365 Move [X31+88], S0
	366 Move X8, [X8+184]
	367 Move X0, [X8+56]
	368 Compare X0, 0
	369 JumpIfEqual {674}
	370 Move W1, [X31+164]
	371 Move X2, [X28]
	372 Move V13, V2
	373 Move [X31+72], S1
	374 Move [X31+80], S8
	375 Call List`1<Vector3>.get_Item, X0, X1
	376 Move X8, [X27]
	377 Move [X31+68], S1
	378 Move X8, [X8+184]
	379 Move X0, [X8+56]
	380 Compare X0, 0
	381 JumpIfEqual {674}
	382 Move W1, [X31+160]
	383 Move X2, [X28]
	384 Move V14, V0
	385 Move V9, V2
	386 Call List`1<Vector3>.get_Item, X0, X1
	387 Move [X31+56], S1
	388 Move X8, 0x5C9000
	389 Move X8, [X8+1448]
	390 Move V12, [X31+224]
	391 Move V8, [X31+232]
	392 Move V10, V0
	393 Move X0, [X8]
	394 Move V11, V2
	395 Move W8, [X0+224]
	396 Compare W8, 0
	397 JumpIfNotEqual {399}
	398 Call 0x1C17DFC
	399 Move V1, [X31+92]
	400 Multiply S0, S15, S12
	401 Move [X31+64], S15
	402 Multiply S1, S1, S8
	403 Add S0, S0, S1
	404 NotImplemented "Instruction FCVT not yet implemented."
	405 Call 0x3EB2B80
	406 Move V12, V0
	407 Move V0, [X31+208]
	408 Move V1, [X31+216]
	409 Move V2, [X31+88]
	410 Multiply S1, S13, S1
	411 Multiply S0, S2, S0
	412 Add S0, S0, S1
	413 NotImplemented "Instruction FCVT not yet implemented."
	414 Call 0x3EB2B80
	415 Move V8, V0
	416 Move V0, [X31+192]
	417 Move V1, [X31+200]
	418 Multiply S0, S14, S0
	419 Multiply S1, S9, S1
	420 Add S0, S0, S1
	421 NotImplemented "Instruction FCVT not yet implemented."
	422 Call 0x3EB2B80
	423 Move V15, V0
	424 Move V0, [X31+176]
	425 Move V1, [X31+184]
	426 Move [X31+60], S10
	427 Multiply S0, S10, S0
	428 Multiply S1, S11, S1
	429 Add S0, S0, S1
	430 NotImplemented "Instruction FCVT not yet implemented."
	431 Call 0x3EB2B80
	432 NotImplemented "Instruction FCMP not yet implemented."
	433 NotImplemented "Instruction FCSEL not yet implemented."
	434 NotImplemented "Instruction CSET not yet implemented."
	435 NotImplemented "Instruction FCMP not yet implemented."
	436 NotImplemented "Instruction FCSEL not yet implemented."
	437 Move W9, 2
	438 NotImplemented "Instruction CSEL not yet implemented."
	439 NotImplemented "Instruction FCMP not yet implemented."
	440 NotImplemented "Instruction CSEL not yet implemented."
	441 NotImplemented "Instruction CMP not yet implemented."
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Compare W8, 0
	444 JumpIfNotEqual {507}
	445 Move X0, [X27]
	446 Move W8, [X0+224]
	447 Compare W8, 0
	448 JumpIfNotEqual {450}
	449 Call 0x1C17DFC
	450 Move V0, [X31+64]
	451 Move V1, [X31+76]
	452 Move V2, [X31+92]
	453 Add X8, X31, 176
	454 Move [X31+24], X29
	455 Move [X31+32], X25
	456 Move [X31+8], X24
	457 Move [X31+16], X22
	458 Add X1, X31, 172
	459 Add X2, X31, 164
	460 Add X3, X31, 168
	461 Add X4, X31, 160
	462 Add X5, X31, 224
	463 Add X6, X31, 192
	464 Add X7, X31, 208
	465 Move X0, [X27]
	466 Move W8, [X0+224]
	467 Compare W8, 0
	468 JumpIfNotEqual {470}
	469 Call 0x1C17DFC
	470 Move V1, [X31+68]
	471 Add X8, X31, 224
	472 Move [X31+24], X25
	473 Move [X31+32], X24
	474 Move [X31+8], X22
	475 Move [X31+16], X29
	476 Add X1, X31, 164
	477 Add X2, X31, 168
	478 Add X3, X31, 160
	479 Add X4, X31, 172
	480 Add X5, X31, 192
	481 Add X6, X31, 208
	482 Add X7, X31, 176
	483 Move [X31], X8
	484 Move V0, V14
	485 Move V2, V9
	486 Move X0, [X27]
	487 Move W8, [X0+224]
	488 Compare W8, 0
	489 JumpIfNotEqual {491}
	490 Call 0x1C17DFC
	491 Move V0, [X31+88]
	492 Move V1, [X31+72]
	493 Add X8, X31, 192
	494 Move [X31+24], X24
	495 Move [X31+32], X22
	496 Move [X31+8], X29
	497 Move [X31+16], X25
	498 Add X1, X31, 168
	499 Add X2, X31, 160
	500 Add X3, X31, 172
	501 Add X4, X31, 164
	502 Add X5, X31, 208
	503 Add X6, X31, 176
	504 Add X7, X31, 224
	505 Move [X31], X8
	506 Move V2, V13
	507 Move X0, [X27]
	508 Move W8, [X0+224]
	509 Compare W8, 0
	510 JumpIfNotEqual {512}
	511 Call 0x1C17DFC
	512 Move S1, [X31+56]
	513 Move S0, [X31+60]
	514 Add X1, X31, 160
	515 Add X2, X31, 172
	516 Add X3, X31, 164
	517 Add X4, X31, 168
	518 Add X5, X31, 176
	519 Add X6, X31, 224
	520 Add X7, X31, 192
	521 Add X8, X31, 208
	522 Move V2, V11
	523 Move [X31+24], X22
	524 Move [X31+32], X29
	525 Move [X31+8], X25
	526 Move [X31+16], X24
	527 Move [X31], X8
	528 Move X0, X20
	529 Call GeometryUtils.RotateCalipers, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13
	530 Move S4, [X31+128]
	531 Move S5, [X31+132]
	532 Move S2, [X31+144]
	533 Move S0, [X31+148]
	534 Move S7, [X31+112]
	535 Move S16, [X31+116]
	536 Move V3, [X31+136]
	537 Move V1, [X31+152]
	538 Move V6, [X31+120]
	539 Move V20, V5
	540 Move V18, V4
	541 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	542 Move V20.S[1], V16.S[0]
	543 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	544 Move V18.S[1], V7.S[0]
	545 Subtract V19, V19, V20
	546 Move V20, V3
	547 Subtract V17, V17, V18
	548 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	549 Move V20.S[1], V6.S[0]
	550 Subtract V18, V18, V20
	551 NotImplemented "Instruction INVALID not yet implemented."
	552 NotImplemented "Instruction INVALID not yet implemented."
	553 Add V17, V17, V19
	554 NotImplemented "Instruction INVALID not yet implemented."
	555 Add V17, V17, V18
	556 Move V18, [X31+80]
	557 NotImplemented "Instruction INVALID not yet implemented."
	558 NotImplemented "Instruction FCVT not yet implemented."
	559 NotImplemented "Instruction FCMP not yet implemented."
	560 Compare X19, 0
	561 JumpIfEqual {674}
	562 Move W8, [X19+24]
	563 Compare W8, 0
	564 JumpIfEqual {675}
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Move [X19+32], S7
	567 Move [X19+40], S16
	568 Move [X19+40], S6
	569 Move V6, [X31+96]
	570 Move V7, [X31+104]
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Move [X19+44], D6
	573 Move [X19+52], S7
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move [X19+56], S4
	576 Move [X19+64], S5
	577 Move [X19+64], S3
	578 Move [X19+68], S2
	579 Move [X19+76], S0
	580 Move [X19+76], S1
	581 Move [X31+80], D17
	582 Subtract W26, W26, 1
	583 Compare X19, 0
	584 JumpIfEqual {674}
	585 Move W8, [X19+24]
	586 Compare W8, 0
	587 JumpIfEqual {675}
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move X20, 0x8AE000
	590 Move S10, [X19+32]
	591 Move S9, [X19+36]
	592 Move V8, [X19+40]
	593 Move S14, [X19+68]
	594 Move S13, [X19+72]
	595 Move W8, [X20+2140]
	596 Move V0, [X19+76]
	597 Move [X31+92], S0
	598 Compare W8, 0
	599 JumpIfNotEqual {605}
	600 Move X0, 0x5C9000
	601 Move X0, [X0+1448]
	602 Call 0x1C17CF4
	603 Move W8, 1
	604 Move [X20+2140], W8
	605 Move X8, 0x5C9000
	606 Move X8, [X8+1448]
	607 Move X0, [X8]
	608 Move W8, [X0+224]
	609 Compare W8, 0
	610 JumpIfNotEqual {612}
	611 Call 0x1C17DFC
	612 Move W8, [X19+24]
	613 NotImplemented "Instruction CMP not yet implemented."
	614 Move S12, [X19+44]
	615 Move S15, [X19+48]
	616 Move W8, [X20+2140]
	617 Move V11, [X19+52]
	618 Compare W8, 0
	619 JumpIfNotEqual {625}
	620 Move X0, 0x5C9000
	621 Move X0, [X0+1448]
	622 Call 0x1C17CF4
	623 Move W8, 1
	624 Move [X20+2140], W8
	625 Move X8, 0x5C9000
	626 Move X8, [X8+1448]
	627 Move V1, [X31+92]
	628 Move V0, V10
	629 Subtract S10, S10, S14
	630 Move X0, [X8]
	631 Subtract S13, S9, S13
	632 Subtract S14, S8, S1
	633 Subtract S12, S0, S12
	634 Move W8, [X0+224]
	635 Subtract S9, S9, S15
	636 Subtract S8, S8, S11
	637 Compare W8, 0
	638 JumpIfNotEqual {640}
	639 Call 0x1C17DFC
	640 Multiply S0, S14, S14
	641 Multiply S1, S10, S10
	642 Multiply S2, S13, S13
	643 Multiply S3, S12, S12
	644 Multiply S4, S9, S9
	645 Multiply S5, S8, S8
	646 Move X20, [X31+384]
	647 Move X19, [X31+392]
	648 Move X22, [X31+368]
	649 Move X21, [X31+376]
	650 Move X24, [X31+352]
	651 Move X23, [X31+360]
	652 Move X26, [X31+336]
	653 Move X25, [X31+344]
	654 Move X28, [X31+320]
	655 Move X27, [X31+328]
	656 Move X29, [X31+304]
	657 Move X30, [X31+312]
	658 Move D9, [X31+288]
	659 Move D8, [X31+296]
	660 Move D11, [X31+272]
	661 Move D10, [X31+280]
	662 Move D13, [X31+256]
	663 Move D12, [X31+264]
	664 Move D15, [X31+240]
	665 Move D14, [X31+248]
	666 Add S1, S1, S2
	667 Add S2, S3, S4
	668 Add S0, S0, S1
	669 Add S1, S5, S2
	670 NotImplemented "Instruction FSQRT not yet implemented."
	671 NotImplemented "Instruction FSQRT not yet implemented."
	672 Add X31, X31, 400
	673 Return X0
	674 Call 0x1C17F20
	675 Call 0x1C17F28

Method: System.Void RotateCalipers(UnityEngine.Vector3 alignEdge, System.Collections.Generic.List`1<UnityEngine.Vector3> vertices, ref System.Int32 indexA, out System.Int32 indexB, out System.Int32 indexC, out System.Int32 indexD, out UnityEngine.Vector3 caliperA, out UnityEngine.Vector3 caliperB, out UnityEngine.Vector3 caliperC, out UnityEngine.Vector3 caliperD, out UnityEngine.Vector3 caliperAEndCorner, out UnityEngine.Vector3 caliperBEndCorner, out UnityEngine.Vector3 caliperCEndCorner, out UnityEngine.Vector3 caliperDEndCorner)

Disassembly:
	0x03B2BF14 LDP D9, D8, [X31 + 0x20]
	0x03B2BF18 LDP D11, D10, [X31 + 0x10]
	0x03B2BF1C MOV V1.16B, V2.16B
	0x03B2BF20 LDP D13, D12, [X31], #0x60
	0x03B2BF24 RET
	0x03B2BF28 STP X30, X25, [X31 - 0x40]!
	0x03B2BF2C STP X24, X23, [X31 + 0x10]
	0x03B2BF30 STP X22, X21, [X31 + 0x20]
	0x03B2BF34 STP X20, X19, [X31 + 0x30]
	0x03B2BF38 ADRP X19, 0x8B7000
	0x03B2BF3C LDRB W8, [X19 + 0x78C]
	0x03B2BF40 TBNZ X8, 0x0, 0x3B2BF88
	0x03B2BF44 ADRP X0, 0x62E000
	0x03B2BF48 LDR X0, [X0 + 0xD10]
	0x03B2BF4C BL 0x1C16CF4
	0x03B2BF50 ADRP X0, 0x5CF000
	0x03B2BF54 LDR X0, [X0 + 0x688]
	0x03B2BF58 BL 0x1C16CF4
	0x03B2BF5C ADRP X0, 0x5C9000
	0x03B2BF60 LDR X0, [X0 + 0xE08]
	0x03B2BF64 BL 0x1C16CF4
	0x03B2BF68 ADRP X0, 0x5F4000
	0x03B2BF6C LDR X0, [X0 + 0x5B8]
	0x03B2BF70 BL 0x1C16CF4
	0x03B2BF74 ADRP X0, 0x5CC000
	0x03B2BF78 LDR X0, [X0 + 0x3C0]
	0x03B2BF7C BL 0x1C16CF4
	0x03B2BF80 MOVZ W8, 0x1
	0x03B2BF84 STRB W8, [X19 + 0x78C]
	0x03B2BF88 ADRP X19, 0x8AD000
	0x03B2BF8C ADRP X20, 0x62E000
	0x03B2BF90 LDRB W8, [X19 + 0x786]
	0x03B2BF94 LDR X20, [X20 + 0xD10]
	0x03B2BF98 CBNZ W8, 0x3B2BFB0
	0x03B2BF9C ADRP X0, 0x5C8000
	0x03B2BFA0 LDR X0, [X0 + 0x5A0]
	0x03B2BFA4 BL 0x1C16CF4
	0x03B2BFA8 MOVZ W8, 0x1
	0x03B2BFAC STRB W8, [X19 + 0x786]
	0x03B2BFB0 ADRP X19, 0x5C8000
	0x03B2BFB4 LDR X19, [X19 + 0x5A0]
	0x03B2BFB8 LDR X9, [X20]
	0x03B2BFBC ADRP X21, 0x8AD000
	0x03B2BFC0 LDR X8, [X19]
	0x03B2BFC4 LDR X9, [X9 + 0xB8]
	0x03B2BFC8 LDR X8, [X8 + 0xB8]
	0x03B2BFCC LDR V0, [X8 + 0x18]
	0x03B2BFD0 LDR V1, [X8 + 0x20]
	0x03B2BFD4 STR D0, [X9]
	0x03B2BFD8 STR S1, [X9 + 0x8]
	0x03B2BFDC LDRB W8, [X21 + 0xA1F]
	0x03B2BFE0 CBNZ W8, 0x3B2BFF8
	0x03B2BFE4 ADRP X0, 0x5C8000
	0x03B2BFE8 LDR X0, [X0 + 0x5A0]
	0x03B2BFEC BL 0x1C16CF4
	0x03B2BFF0 MOVZ W8, 0x1
	0x03B2BFF4 STRB W8, [X21 + 0xA1F]
	0x03B2BFF8 LDR X9, [X19]
	0x03B2BFFC LDR X8, [X20]
	0x03B2C000 ADRP X25, 0x8AC000
	0x03B2C004 ADRP X24, 0x5CB000
	0x03B2C008 LDR X10, [X9 + 0xB8]
	0x03B2C00C LDR X11, [X8 + 0xB8]
	0x03B2C010 ADRP X23, 0x5F3000
	0x03B2C014 ADRP X22, 0x5C8000
	0x03B2C018 LDR V0, [X10 + 0x48]
	0x03B2C01C LDR V1, [X10 + 0x50]
	0x03B2C020 ADRP X21, 0x5CE000
	0x03B2C024 STUR D0, [X11 + 0xC]
	0x03B2C028 STR S1, [X11 + 0x14]
	0x03B2C02C LDRB W10, [X25 + 0x783]
	0x03B2C030 LDR X24, [X24 + 0x3C0]
	0x03B2C034 LDR X23, [X23 + 0x5B8]
	0x03B2C038 LDR X22, [X22 + 0xE08]
	0x03B2C03C LDR X21, [X21 + 0x688]
	0x03B2C040 CBNZ W10, 0x3B2C05C
	0x03B2C044 MOV X0, X19
	0x03B2C048 BL 0x1C16CF4
	0x03B2C04C LDR X9, [X19]
	0x03B2C050 LDR X8, [X20]
	0x03B2C054 MOVZ W10, 0x1
	0x03B2C058 STRB W10, [X25 + 0x783]
	0x03B2C05C LDR X9, [X9 + 0xB8]
	0x03B2C060 LDR X10, [X8 + 0xB8]
	0x03B2C064 MOV X0, X31
	0x03B2C068 LDR V0, [X9]
	0x03B2C06C LDR V1, [X9 + 0x8]
	0x03B2C070 STR D0, [X10 + 0x18]
	0x03B2C074 STR S1, [X10 + 0x20]
	0x03B2C078 LDR X8, [X8 + 0xB8]
	0x03B2C07C LDP S1, S2, [X8]
	0x03B2C080 LDR V3, [X8 + 0x8]
	0x03B2C084 MOVZ W8, 0x43340000
	0x03B2C088 FMOV S0, W8
	0x03B2C08C BL 0x3C2A758
	0x03B2C090 LDR X8, [X20]
	0x03B2C094 LDR X8, [X8 + 0xB8]
	0x03B2C098 STP S0, S1, [X8 + 0x24]
	0x03B2C09C STP S2, S3, [X8 + 0x2C]
	0x03B2C0A0 LDR X0, [X24]
	0x03B2C0A4 BL 0x1C16F10
	0x03B2C0A8 LDR X1, [X23]
	0x03B2C0AC MOV X19, X0
	0x03B2C0B0 BL 0x30CB97C
	0x03B2C0B4 LDR X8, [X20]
	0x03B2C0B8 LDR X8, [X8 + 0xB8]
	0x03B2C0BC STR X19, [X8 + 0x38]
	0x03B2C0C0 LDR X0, [X22]
	0x03B2C0C4 BL 0x1C16F10
	0x03B2C0C8 LDR X1, [X21]
	0x03B2C0CC MOV X19, X0
	0x03B2C0D0 BL 0x2DA9EF4
	0x03B2C0D4 LDR X8, [X20]
	0x03B2C0D8 LDP X22, X21, [X31 + 0x20]
	0x03B2C0DC LDP X24, X23, [X31 + 0x10]
	0x03B2C0E0 LDR X8, [X8 + 0xB8]
	0x03B2C0E4 STR X19, [X8 + 0x40]
	0x03B2C0E8 LDP X20, X19, [X31 + 0x30]
	0x03B2C0EC LDP X30, X25, [X31], #0x40
	0x03B2C0F0 RET
	0x03B2C0F4 SUB X31, X31, 0x50
	0x03B2C0F8 STP X31, X30, [X31 + 0x38]
	0x03B2C0FC MOV X4, X1
	0x03B2C100 MOV X1, X0
	0x03B2C104 UBFM X2, X0, 0x20, 0x3F
	0x03B2C108 UBFM X3, X0, 0x30, 0x3F
	0x03B2C10C UBFM X5, X4, 0x8, 0x3F
	0x03B2C110 UBFM X6, X4, 0x10, 0x3F
	0x03B2C114 UBFM X7, X4, 0x18, 0x3F
	0x03B2C118 UBFM X8, X4, 0x20, 0x3F
	0x03B2C11C UBFM X9, X4, 0x28, 0x3F
	0x03B2C120 UBFM X10, X4, 0x30, 0x3F
	0x03B2C124 UBFM X11, X4, 0x38, 0x3F
	0x03B2C128 ADD X0, X31, 0x30
	0x03B2C12C STR X31, [X31 + 0x30]
	0x03B2C130 STR X31, [X31 + 0x20]
	0x03B2C134 STRB W11, [X31 + 0x18]
	0x03B2C138 STRB W10, [X31 + 0x10]
	0x03B2C13C STRB W9, [X31 + 0x8]
	0x03B2C140 STRB W8, [X31]
	0x03B2C144 BL 0x3376A50
	0x03B2C148 LDP X0, X1, [X31 + 0x30]
	0x03B2C14C LDR X30, [X31 + 0x40]
	0x03B2C150 ADD X31, X31, 0x50
	0x03B2C154 RET
	0x03B2C158 MOVZ W8, 0xA2DB
	0x03B2C15C MOVK W8, 0x1CFA0000
	0x03B2C160 MADD W9, W0, W8, W1
	0x03B2C164 MADD W0, W9, W8, W2
	0x03B2C168 RET
	0x03B2C16C MOVZ W8, 0xA2DB
	0x03B2C170 MOVK W8, 0x1CFA0000
	0x03B2C174 MADD W9, W0, W8, W1
	0x03B2C178 MADD W9, W9, W8, W2
	0x03B2C17C MADD W0, W9, W8, W3
	0x03B2C180 RET
	0x03B2C184 MOVZ W8, 0xA2DB
	0x03B2C188 MOVK W8, 0x1CFA0000
	0x03B2C18C MADD W9, W0, W8, W1
	0x03B2C190 MADD W9, W9, W8, W2
	0x03B2C194 MADD W9, W9, W8, W3
	0x03B2C198 MADD W0, W9, W8, W4
	0x03B2C19C RET
	0x03B2C1A0 MOVZ W8, 0xA2DB
	0x03B2C1A4 MOVK W8, 0x1CFA0000
	0x03B2C1A8 MADD W9, W0, W8, W1
	0x03B2C1AC MADD W9, W9, W8, W2
	0x03B2C1B0 MADD W9, W9, W8, W3
	0x03B2C1B4 MADD W9, W9, W8, W4
	0x03B2C1B8 MADD W0, W9, W8, W5
	0x03B2C1BC RET
	0x03B2C1C0 MOVZ W8, 0xA2DB
	0x03B2C1C4 MOVK W8, 0x1CFA0000
	0x03B2C1C8 MADD W9, W0, W8, W1
	0x03B2C1CC MADD W9, W9, W8, W2
	0x03B2C1D0 MADD W9, W9, W8, W3
	0x03B2C1D4 MADD W9, W9, W8, W4
	0x03B2C1D8 MADD W9, W9, W8, W5
	0x03B2C1DC MADD W0, W9, W8, W6
	0x03B2C1E0 RET
	0x03B2C1E4 MOVZ W8, 0xA2DB
	0x03B2C1E8 MOVK W8, 0x1CFA0000
	0x03B2C1EC MADD W9, W0, W8, W1
	0x03B2C1F0 MADD W9, W9, W8, W2
	0x03B2C1F4 MADD W9, W9, W8, W3
	0x03B2C1F8 MADD W9, W9, W8, W4
	0x03B2C1FC MADD W9, W9, W8, W5
	0x03B2C200 MADD W9, W9, W8, W6
	0x03B2C204 MADD W0, W9, W8, W7
	0x03B2C208 RET
	0x03B2C20C STP X30, X21, [X31 - 0x20]!
	0x03B2C210 STP X20, X19, [X31 + 0x10]
	0x03B2C214 ADRP X20, 0x8B6000
	0x03B2C218 LDRB W8, [X20 + 0x78D]
	0x03B2C21C MOV X19, X0
	0x03B2C220 TBNZ X8, 0x0, 0x3B2C244
	0x03B2C224 ADRP X0, 0x5CE000
	0x03B2C228 LDR X0, [X0 + 0x7A8]
	0x03B2C22C BL 0x1C16CF4
	0x03B2C230 ADRP X0, 0x5C7000
	0x03B2C234 LDR X0, [X0 + 0x598]
	0x03B2C238 BL 0x1C16CF4
	0x03B2C23C MOVZ W8, 0x1
	0x03B2C240 STRB W8, [X20 + 0x78D]
	0x03B2C244 CBZ X19, 0x3B2C2AC
	0x03B2C248 ADRP X20, 0x5C7000
	0x03B2C24C ADRP X21, 0x5CE000
	0x03B2C250 LDR X20, [X20 + 0x598]
	0x03B2C254 LDR X21, [X21 + 0x7A8]
	0x03B2C258 MOV X0, X19
	0x03B2C25C MOV X1, X31
	0x03B2C260 BL 0x3C1349C
	0x03B2C264 LDR X8, [X20]
	0x03B2C268 MOV X20, X0
	0x03B2C26C LDR W9, [X8 + 0xE0]
	0x03B2C270 CBNZ W9, 0x3B2C27C
	0x03B2C274 MOV X0, X8
	0x03B2C278 BL 0x1C16DFC
	0x03B2C27C LDR X1, [X21]
	0x03B2C280 MOV X0, X20
	0x03B2C284 BL 0x222D35C
	0x03B2C288 MOV X20, X0
	0x03B2C28C MOV X0, X19
	0x03B2C290 MOV X1, X20
	0x03B2C294 MOV X2, X31
	0x03B2C298 BL 0x3C13458
	0x03B2C29C MOV X0, X20
	0x03B2C2A0 LDP X20, X19, [X31 + 0x10]
	0x03B2C2A4 LDP X30, X21, [X31], #0x20
	0x03B2C2A8 RET
	0x03B2C2AC BL 0x1C16F20
	0x03B2C2B0 STP X30, X21, [X31 - 0x20]!
	0x03B2C2B4 STP X20, X19, [X31 + 0x10]
	0x03B2C2B8 ADRP X20, 0x8B6000
	0x03B2C2BC LDRB W8, [X20 + 0x78E]
	0x03B2C2C0 MOV X19, X0
	0x03B2C2C4 TBNZ X8, 0x0, 0x3B2C2E8
	0x03B2C2C8 ADRP X0, 0x5CE000
	0x03B2C2CC LDR X0, [X0 + 0x7A8]
	0x03B2C2D0 BL 0x1C16CF4
	0x03B2C2D4 ADRP X0, 0x5C7000
	0x03B2C2D8 LDR X0, [X0 + 0x598]
	0x03B2C2DC BL 0x1C16CF4
	0x03B2C2E0 MOVZ W8, 0x1
	0x03B2C2E4 STRB W8, [X20 + 0x78E]
	0x03B2C2E8 CBZ X19, 0x3B2C360
	0x03B2C2EC LDR X8, [X19]
	0x03B2C2F0 ADRP X20, 0x5C7000
	0x03B2C2F4 ADRP X21, 0x5CE000
	0x03B2C2F8 MOV X0, X19
	0x03B2C2FC LDR X9, [X8 + 0x338]
	0x03B2C300 LDR X1, [X8 + 0x340]
	0x03B2C304 LDR X20, [X20 + 0x598]
	0x03B2C308 LDR X21, [X21 + 0x7A8]
	0x03B2C30C BLR X9
	0x03B2C310 LDR X8, [X20]
	0x03B2C314 MOV X20, X0
	0x03B2C318 LDR W9, [X8 + 0xE0]
	0x03B2C31C CBNZ W9, 0x3B2C328
	0x03B2C320 MOV X0, X8
	0x03B2C324 BL 0x1C16DFC
	0x03B2C328 LDR X1, [X21]
	0x03B2C32C MOV X0, X20
	0x03B2C330 BL 0x222D35C
	0x03B2C334 LDR X8, [X19]
	0x03B2C338 MOV X20, X0
	0x03B2C33C MOV X0, X19
	0x03B2C340 MOV X1, X20
	0x03B2C344 LDR X9, [X8 + 0x348]
	0x03B2C348 LDR X2, [X8 + 0x350]
	0x03B2C34C BLR X9
	0x03B2C350 MOV X0, X20
	0x03B2C354 LDP X20, X19, [X31 + 0x10]
	0x03B2C358 LDP X30, X21, [X31], #0x20
	0x03B2C35C RET
	0x03B2C360 BL 0x1C16F20
	0x03B2C364 STP X30, X25, [X31 - 0x40]!
	0x03B2C368 STP X24, X23, [X31 + 0x10]
	0x03B2C36C STP X22, X21, [X31 + 0x20]
	0x03B2C370 STP X20, X19, [X31 + 0x30]
	0x03B2C374 ADRP X20, 0x8B6000
	0x03B2C378 LDRB W8, [X20 + 0x78F]
	0x03B2C37C MOV X19, X0
	0x03B2C380 TBNZ X8, 0x0, 0x3B2C3A4

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+192], D15
	003 Move [X31+200], D14
	004 Move [X31+208], D13
	005 Move [X31+216], D12
	006 Move [X31+224], D11
	007 Move [X31+232], D10
	008 Move [X31+240], D9
	009 Move [X31+248], D8
	010 Move [X31+256], X29
	011 Move [X31+264], X30
	012 Move [X31+272], X28
	013 Move [X31+280], X27
	014 Move [X31+288], X26
	015 Move [X31+296], X25
	016 Move [X31+304], X24
	017 Move [X31+312], X23
	018 Move [X31+320], X22
	019 Move [X31+328], X21
	020 Move [X31+336], X20
	021 Move [X31+344], X19
	022 Move X21, 0x8B8000
	023 Move W8, [X21+1923]
	024 Move X19, X7
	025 Move X20, X6
	026 Move X24, X5
	027 Move X23, X3
	028 Move X25, X2
	029 Move X26, X1
	030 Move X22, X0
	031 Move V8, V2
	032 Move V9, V1
	033 Move V10, V0
	034 Move [X31+88], X4
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {50}
	039 Move X0, 0x62F000
	040 Move X0, [X0+3344]
	041 Call 0x1C17CF4
	042 Move X0, 0x5CD000
	043 Move X0, [X0+2424]
	044 Call 0x1C17CF4
	045 Move X0, 0x5CD000
	046 Move X0, [X0+2432]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1923], W8
	050 Move [X31+80], X23
	051 Move [X31+176], X31
	052 Move [X31+184], X31
	053 Compare X22, 0
	054 JumpIfEqual {325}
	055 NotImplemented "Instruction FNEG not yet implemented."
	056 Move W29, [X22+24]
	057 Move [X24], S10
	058 Move [X24+8], S9
	059 Move [X24+8], S8
	060 Move [X20], S8
	061 Move [X20+4], W31
	062 Move [X20+8], S0
	063 Move V0, [X24]
	064 Move V1, [X24+8]
	065 Move X21, [X31+352]
	066 Move X9, [X31+360]
	067 Move X8, [X31+384]
	068 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	069 NotImplemented "Instruction FNEG not yet implemented."
	070 Move [X19], D0
	071 Move [X19+8], S1
	072 Move V0, [X20]
	073 Move V1, [X20+8]
	074 Move [X31+64], X9
	075 Move [X31+72], X8
	076 Move X10, [X31+376]
	077 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	078 NotImplemented "Instruction FNEG not yet implemented."
	079 Move [X21], D0
	080 Move [X21+8], S1
	081 Move X9, [X31+368]
	082 Move W8, [X26]
	083 Move X28, 0x5CC000
	084 Move X27, 0x62E000
	085 Move [X31+48], X10
	086 Move [X31+56], X9
	087 Move X28, [X28+2432]
	088 Add W8, W8, 1
	089 NotImplemented "Instruction SDIV not yet implemented."
	090 NotImplemented "Instruction MSUB not yet implemented."
	091 Move [X26], W1
	092 Move X2, [X28]
	093 Move X27, [X27+3344]
	094 Move X0, X22
	095 Call List`1<Vector3>.get_Item, X0, X1
	096 Move W26, [X26]
	097 Move [X31+128], D0
	098 Move S0, W31
	099 Move W23, 1
	100 Move [X31+96], D1
	101 Move [X31+124], S2
	102 Move [X25], W26
	103 Move [X31+10], V0
	104 Move S0, [X24]
	105 Move S10, [X24+4]
	106 Move X2, [X28]
	107 Add W8, W26, 1
	108 Move V11, [X24+8]
	109 NotImplemented "Instruction SDIV not yet implemented."
	110 NotImplemented "Instruction MSUB not yet implemented."
	111 Move X0, X22
	112 Move W1, W26
	113 Move [X31+156], S0
	114 Call List`1<Vector3>.get_Item, X0, X1
	115 Move X0, [X27]
	116 Move S15, [X21]
	117 Move S8, [X21+4]
	118 Move V9, [X21+8]
	119 Move V12, V0
	120 Move W8, [X0+224]
	121 Move V13, V1
	122 Move V14, V2
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move V2, [X31+124]
	127 Move V3, [X31+156]
	128 Add X0, X31, 188
	129 Add X1, X31, 184
	130 Move V0, [X31+8]
	131 Move V1, [X31+6]
	132 Move V4, V10
	133 Move V5, V11
	134 Move [X31+32], X23
	135 Move [X31+20], S8
	136 Move [X31+28], S9
	137 Move [X31+16], S15
	138 Move [X31+4], S13
	139 Move [X31+12], S14
	140 Move [X31], S12
	141 Call GeometryUtils.ClosestTimesOnTwoLinesXZ, X0, X1, X2, X3, X4, X5, V0
	142 Move V0, [X31+188]
	143 Move V4, [X31+10]
	144 NotImplemented "Instruction FCMP not yet implemented."
	145 Move V0, [X24]
	146 Move V2, [X31+8]
	147 Move V3, [X31+6]
	148 Move V1, [X24+8]
	149 NotImplemented "Instruction INVALID not yet implemented."
	150 Move X26, [X31+64]
	151 Move V2.S[1], V3.S[0]
	152 Add V0, V2, V0
	153 Move V2, [X31+124]
	154 Multiply S1, S4, S1
	155 Move [X26], D0
	156 Move X0, X22
	157 Add S1, S2, S1
	158 Move [X26+8], S1
	159 Move W1, [X25]
	160 Move X2, [X28]
	161 Call List`1<Vector3>.get_Item, X0, X1
	162 Move W25, [X25]
	163 Move X23, [X31+80]
	164 Move [X31+128], D0
	165 Move S0, W31
	166 Move W21, 1
	167 Move [X31+96], D1
	168 Move [X31+124], S2
	169 Move [X23], W25
	170 Move [X31+10], V0
	171 Move S0, [X20]
	172 Move S10, [X20+4]
	173 Move X2, [X28]
	174 Add W8, W25, 1
	175 Move V11, [X20+8]
	176 NotImplemented "Instruction SDIV not yet implemented."
	177 NotImplemented "Instruction MSUB not yet implemented."
	178 Move X0, X22
	179 Move W1, W25
	180 Move [X31+156], S0
	181 Call List`1<Vector3>.get_Item, X0, X1
	182 Move X0, [X27]
	183 Move S15, [X24]
	184 Move S8, [X24+4]
	185 Move V9, [X24+8]
	186 Move V12, V0
	187 Move W8, [X0+224]
	188 Move V13, V1
	189 Move V14, V2
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move V2, [X31+124]
	194 Move V3, [X31+156]
	195 Add X0, X31, 180
	196 Add X1, X31, 184
	197 Move V0, [X31+8]
	198 Move V1, [X31+6]
	199 Move V4, V10
	200 Move V5, V11
	201 Move [X31+32], X21
	202 Move [X31+20], S8
	203 Move [X31+28], S9
	204 Move [X31+16], S15
	205 Move [X31+4], S13
	206 Move [X31+12], S14
	207 Move [X31], S12
	208 Call GeometryUtils.ClosestTimesOnTwoLinesXZ, X0, X1, X2, X3, X4, X5, V0
	209 Move V0, [X31+180]
	210 Move V4, [X31+10]
	211 NotImplemented "Instruction FCMP not yet implemented."
	212 Move V0, [X20]
	213 Move V2, [X31+8]
	214 Move V3, [X31+6]
	215 Move V1, [X20+8]
	216 NotImplemented "Instruction INVALID not yet implemented."
	217 Move X25, [X31+56]
	218 Move V2.S[1], V3.S[0]
	219 Add V0, V2, V0
	220 Move V2, [X31+124]
	221 Multiply S1, S4, S1
	222 Move [X25], D0
	223 Move X0, X22
	224 Add S1, S2, S1
	225 Move [X25+8], S1
	226 Move W1, [X23]
	227 Move X2, [X28]
	228 Call List`1<Vector3>.get_Item, X0, X1
	229 Move W23, [X23]
	230 Move X24, [X31+88]
	231 Move [X31+128], D0
	232 Move S0, W31
	233 Move W21, 1
	234 Move [X31+96], D1
	235 Move [X31+124], S2
	236 Move [X24], W23
	237 Move [X31+10], V0
	238 Move S0, [X19]
	239 Move S10, [X19+4]
	240 Move X2, [X28]
	241 Add W8, W23, 1
	242 Move V11, [X19+8]
	243 NotImplemented "Instruction SDIV not yet implemented."
	244 NotImplemented "Instruction MSUB not yet implemented."
	245 Move X0, X22
	246 Move W1, W23
	247 Move [X31+156], S0
	248 Call List`1<Vector3>.get_Item, X0, X1
	249 Move X0, [X27]
	250 Move S15, [X20]
	251 Move S8, [X20+4]
	252 Move V9, [X20+8]
	253 Move V12, V0
	254 Move W8, [X0+224]
	255 Move V13, V1
	256 Move V14, V2
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move V2, [X31+124]
	261 Move V3, [X31+156]
	262 Add X0, X31, 176
	263 Add X1, X31, 184
	264 Move V0, [X31+8]
	265 Move V1, [X31+6]
	266 Move V4, V10
	267 Move V5, V11
	268 Move [X31+32], X21
	269 Move [X31+20], S8
	270 Move [X31+28], S9
	271 Move [X31+16], S15
	272 Move [X31+4], S13
	273 Move [X31+12], S14
	274 Move [X31], S12
	275 Call GeometryUtils.ClosestTimesOnTwoLinesXZ, X0, X1, X2, X3, X4, X5, V0
	276 Move V0, [X31+176]
	277 Move V4, [X31+10]
	278 NotImplemented "Instruction FCMP not yet implemented."
	279 Move V0, [X19]
	280 Move V2, [X31+8]
	281 Move V3, [X31+6]
	282 Move V1, [X19+8]
	283 NotImplemented "Instruction INVALID not yet implemented."
	284 Move X8, [X31+48]
	285 Move V2.S[1], V3.S[0]
	286 Add V0, V2, V0
	287 Move V2, [X31+124]
	288 Multiply S1, S4, S1
	289 Move [X8], D0
	290 Move X20, [X31+336]
	291 Move X19, [X31+344]
	292 Add S1, S2, S1
	293 Move [X8+8], S1
	294 Move V2, [X26]
	295 Move V3, [X26+8]
	296 Move V4, [X25]
	297 Move V5, [X25+8]
	298 Move X8, [X31+72]
	299 Move X22, [X31+320]
	300 Move X21, [X31+328]
	301 Move X24, [X31+304]
	302 Move X23, [X31+312]
	303 Move X26, [X31+288]
	304 Move X25, [X31+296]
	305 Move X28, [X31+272]
	306 Move X27, [X31+280]
	307 Move X29, [X31+256]
	308 Move X30, [X31+264]
	309 Move D9, [X31+240]
	310 Move D8, [X31+248]
	311 Move D11, [X31+224]
	312 Move D10, [X31+232]
	313 Move D13, [X31+208]
	314 Move D12, [X31+216]
	315 Move D15, [X31+192]
	316 Move D14, [X31+200]
	317 Add V0, V0, V2
	318 Add S1, S1, S3
	319 Subtract V0, V0, V4
	320 Subtract S1, S1, S5
	321 Move [X8], D0
	322 Move [X8+8], S1
	323 Add X31, X31, 352
	324 Return 
	325 Call 0x1C17F20

Method: UnityEngine.Quaternion RotationForBox(UnityEngine.Vector3[] vertices)

Disassembly:
	0x03B2C384 ADRP X0, 0x5CE000
	0x03B2C388 LDR X0, [X0 + 0x7A8]
	0x03B2C38C BL 0x1C16CF4
	0x03B2C390 ADRP X0, 0x5C7000
	0x03B2C394 LDR X0, [X0 + 0x598]
	0x03B2C398 BL 0x1C16CF4
	0x03B2C39C MOVZ W8, 0x1
	0x03B2C3A0 STRB W8, [X20 + 0x78F]
	0x03B2C3A4 CBZ X19, 0x3B2C47C
	0x03B2C3A8 MOV X0, X19
	0x03B2C3AC MOV X1, X31
	0x03B2C3B0 BL 0x3C1351C
	0x03B2C3B4 CBZ X0, 0x3B2C47C
	0x03B2C3B8 LDR X8, [X0 + 0x18]
	0x03B2C3BC MOV X20, X0
	0x03B2C3C0 CMP W8, 0x1
	0x03B2C3C4 B.LT 0x3B2C444
	0x03B2C3C8 ADRP X23, 0x5C7000
	0x03B2C3CC ADRP X24, 0x5CE000
	0x03B2C3D0 LDR X23, [X23 + 0x598]
	0x03B2C3D4 LDR X24, [X24 + 0x7A8]
	0x03B2C3D8 MOV X22, X31
	0x03B2C3DC AND X8, X8, 0x0
	0x03B2C3E0 ADD X25, X20, 0x20
	0x03B2C3E4 CMP X22, W8, UXTW
	0x03B2C3E8 B.CS 0x3B2C46C
	0x03B2C3EC LDR X0, [X23]
	0x03B2C3F0 LDR X21, [X25, X22, LSL #3]
	0x03B2C3F4 LDR W8, [X0 + 0xE0]
	0x03B2C3F8 CBNZ W8, 0x3B2C400
	0x03B2C3FC BL 0x1C16DFC
	0x03B2C400 LDR X1, [X24]
	0x03B2C404 MOV X0, X21
	0x03B2C408 BL 0x222D35C
	0x03B2C40C MOV X21, X0
	0x03B2C410 CBZ X0, 0x3B2C428

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {46}
	009 Move W8, [X0+24]
	010 Compare W8, 0
	011 JumpIfEqual {45}
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X19, 0x8AD000
	014 Move V8, [X0+40]
	015 Move V9, [X0+32]
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 Move W8, [X19+2928]
	018 Move V11, [X0+76]
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x5C8000
	022 Move X0, [X0+1440]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+2928], W8
	026 Move X8, 0x5C8000
	027 Move X8, [X8+1440]
	028 Subtract S5, S11, S8
	029 Subtract V3, V10, V9
	030 Move X30, [X31+32]
	031 Move X19, [X31+40]
	032 Move X8, [X8]
	033 Move D9, [X31+16]
	034 Move D8, [X31+24]
	035 Move S4, V3.S[1]
	036 Move X0, X31
	037 Move X8, [X8+184]
	038 Move S0, [X8+60]
	039 Move S1, [X8+64]
	040 Move V2, [X8+68]
	041 Move D11, [X31+48]
	042 Move D10, [X31+56]
	043 Call Quaternion.FromToRotation, X0, X1
	044 Return X0
	045 Call 0x1C17F28
	046 Call 0x1C17F20

Method: System.Single ConvexPolygonArea(System.Collections.Generic.List`1<UnityEngine.Vector3> vertices)

Disassembly:
	0x03B2C414 LDR X8, [X20]
	0x03B2C418 MOV X0, X21
	0x03B2C41C LDR X1, [X8 + 0x40]
	0x03B2C420 BL 0x1C16E00
	0x03B2C424 CBZ X0, 0x3B2C470
	0x03B2C428 LDR W8, [X20 + 0x18]
	0x03B2C42C CMP X22, X8
	0x03B2C430 B.CS 0x3B2C46C
	0x03B2C434 STR X21, [X25, X22, LSL #3]
	0x03B2C438 ADD X22, X22, 0x1
	0x03B2C43C CMP X22, W8, SXTW
	0x03B2C440 B.LT 0x3B2C3E4
	0x03B2C444 MOV X0, X19
	0x03B2C448 MOV X1, X20
	0x03B2C44C MOV X2, X31
	0x03B2C450 BL 0x3C13558
	0x03B2C454 MOV X0, X20
	0x03B2C458 LDP X20, X19, [X31 + 0x30]
	0x03B2C45C LDP X22, X21, [X31 + 0x20]
	0x03B2C460 LDP X24, X23, [X31 + 0x10]
	0x03B2C464 LDP X30, X25, [X31], #0x40
	0x03B2C468 RET
	0x03B2C46C BL 0x1C16F28
	0x03B2C470 BL 0x1C16F44
	0x03B2C474 MOV X1, X31
	0x03B2C478 BL 0x1C16DEC
	0x03B2C47C BL 0x1C16F20
	0x03B2C480 STR X30, [X31 - 0x30]!
	0x03B2C484 STP X22, X21, [X31 + 0x10]
	0x03B2C488 STP X20, X19, [X31 + 0x20]
	0x03B2C48C ADRP X20, 0x8B6000
	0x03B2C490 LDRB W8, [X20 + 0x790]
	0x03B2C494 MOV X19, X0
	0x03B2C498 TBNZ X8, 0x0, 0x3B2C4C8
	0x03B2C49C ADRP X0, 0x5C8000
	0x03B2C4A0 LDR X0, [X0 + 0xA08]
	0x03B2C4A4 BL 0x1C16CF4
	0x03B2C4A8 ADRP X0, 0x61A000
	0x03B2C4AC LDR X0, [X0 + 0x440]
	0x03B2C4B0 BL 0x1C16CF4
	0x03B2C4B4 ADRP X0, 0x5C7000
	0x03B2C4B8 LDR X0, [X0 + 0x988]
	0x03B2C4BC BL 0x1C16CF4
	0x03B2C4C0 MOVZ W8, 0x1
	0x03B2C4C4 STRB W8, [X20 + 0x790]
	0x03B2C4C8 CBZ X19, 0x3B2C5FC
	0x03B2C4CC ADRP X8, 0x61A000
	0x03B2C4D0 ADRP X20, 0x5C7000
	0x03B2C4D4 LDR X8, [X8 + 0x440]
	0x03B2C4D8 LDR X20, [X20 + 0x988]
	0x03B2C4DC MOV X0, X19
	0x03B2C4E0 MOV X3, X31
	0x03B2C4E4 LDR X1, [X8]
	0x03B2C4E8 LDR X2, [X20]
	0x03B2C4EC BL 0x32293BC
	0x03B2C4F0 CBZ X0, 0x3B2C5FC
	0x03B2C4F4 ADRP X8, 0x5C8000
	0x03B2C4F8 LDR X8, [X8 + 0xA08]
	0x03B2C4FC LDR X2, [X20]
	0x03B2C500 MOV X3, X31
	0x03B2C504 LDR X1, [X8]
	0x03B2C508 BL 0x32293BC
	0x03B2C50C CBZ X0, 0x3B2C5FC
	0x03B2C510 MOVZ W2, 0x2
	0x03B2C514 MOV W1, W31
	0x03B2C518 MOV X3, X31
	0x03B2C51C MOV X20, X0
	0x03B2C520 BL 0x3228DE4
	0x03B2C524 MOVZ W1, 0x203
	0x03B2C528 MOV X2, X31
	0x03B2C52C BL 0x3319720
	0x03B2C530 MOV W19, W0
	0x03B2C534 MOVZ W1, 0x2
	0x03B2C538 MOVZ W2, 0x2
	0x03B2C53C MOV X0, X20

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x8B7000
	010 Move W8, [X20+1924]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x5CC000
	017 Move X0, [X0+2424]
	018 Call 0x1C17CF4
	019 Move X0, 0x5CC000
	020 Move X0, [X0+2432]
	021 Call 0x1C17CF4
	022 Move X0, 0x5C8000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1924], W8
	027 Compare X19, 0
	028 JumpIfEqual {83}
	029 Move W21, [X19+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X22, 0x5CC000
	032 Move X22, [X22+2432]
	033 Move X0, X19
	034 Move W1, W31
	035 Move X2, [X22]
	036 Call List`1<Vector3>.get_Item, X0, X1
	037 Move X2, [X22]
	038 Subtract W1, W21, 1
	039 Move X0, X19
	040 Move V8, V0
	041 Move V9, V2
	042 Call List`1<Vector3>.get_Item, X0, X1
	043 Multiply S0, S9, S0
	044 Multiply S1, S8, S2
	045 Subtract S10, S0, S1
	046 Move W20, 1
	047 Move X2, [X22]
	048 Subtract W1, W20, 1
	049 Move X0, X19
	050 Call List`1<Vector3>.get_Item, X0, X1
	051 Move X2, [X22]
	052 Move X0, X19
	053 Move W1, W20
	054 Move V8, V0
	055 Move V9, V2
	056 Call List`1<Vector3>.get_Item, X0, X1
	057 Multiply S1, S8, S2
	058 Multiply S0, S9, S0
	059 Add W20, W20, 1
	060 Subtract S0, S1, S0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add S10, S10, S0
	063 Move X8, 0x5C8000
	064 Move X8, [X8+1448]
	065 Move S0, 0.5
	066 Multiply S8, S10, S0
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 NotImplemented "Instruction FABS not yet implemented."
	073 Move S0, W31
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X30, [X31+24]
	079 Move D9, [X31+8]
	080 Move D8, [X31+16]
	081 Move V10, [X31+64]
	082 Return V0
	083 Call 0x1C17F20

Method: System.Boolean PolygonInPolygon(System.Collections.Generic.List`1<UnityEngine.Vector3> polygonA, System.Collections.Generic.List`1<UnityEngine.Vector3> polygonB)

Disassembly:
	0x03B2C540 MOV X3, X31
	0x03B2C544 BL 0x3228DE4
	0x03B2C548 MOVZ W1, 0x203
	0x03B2C54C MOV X2, X31
	0x03B2C550 BL 0x3319720
	0x03B2C554 MOV W21, W0
	0x03B2C558 MOVZ W1, 0x4
	0x03B2C55C MOVZ W2, 0x2
	0x03B2C560 MOV X0, X20
	0x03B2C564 MOV X3, X31
	0x03B2C568 BL 0x3228DE4
	0x03B2C56C MOVZ W1, 0x203
	0x03B2C570 MOV X2, X31
	0x03B2C574 BL 0x3319720
	0x03B2C578 LDR W8, [X20 + 0x10]
	0x03B2C57C MOV W22, W0
	0x03B2C580 CMP W8, 0x8
	0x03B2C584 B.NE 0x3B2C5B4
	0x03B2C588 MOVZ W1, 0x4
	0x03B2C58C MOVZ W2, 0x2
	0x03B2C590 MOV X0, X20
	0x03B2C594 MOV X3, X31
	0x03B2C598 BL 0x3228DE4
	0x03B2C59C MOVZ W1, 0x203
	0x03B2C5A0 MOV X2, X31
	0x03B2C5A4 BL 0x3319720
	0x03B2C5A8 AND W8, W0, 0xFF
	0x03B2C5AC UCVTF S3, W8
	0x03B2C5B0 B 0x3B2C5BC
	0x03B2C5B4 MOVZ W8, 0x437F0000
	0x03B2C5B8 FMOV S3, W8
	0x03B2C5BC AND W8, W19, 0xFF
	0x03B2C5C0 AND W9, W21, 0xFF
	0x03B2C5C4 AND W10, W22, 0xFF
	0x03B2C5C8 LDP X20, X19, [X31 + 0x20]
	0x03B2C5CC LDP X22, X21, [X31 + 0x10]
	0x03B2C5D0 UCVTF S0, W8
	0x03B2C5D4 MOVZ W8, 0x437F0000
	0x03B2C5D8 FMOV S4, W8
	0x03B2C5DC UCVTF S1, W9
	0x03B2C5E0 UCVTF S2, W10
	0x03B2C5E4 FDIV S0, S0, S4
	0x03B2C5E8 FDIV S1, S1, S4
	0x03B2C5EC FDIV S2, S2, S4
	0x03B2C5F0 FDIV S3, S3, S4
	0x03B2C5F4 LDR X30, [X31], #0x30
	0x03B2C5F8 RET
	0x03B2C5FC BL 0x1C16F20
	0x03B2C600 SUB X31, X31, 0x20
	0x03B2C604 STR D8, [X31 + 0x10]
	0x03B2C608 STR X30, [X31 + 0x18]
	0x03B2C60C ADD X8, X31, 0x0
	0x03B2C610 ADD X2, X8, 0x8
	0x03B2C614 ORR X1, X8, 0x7
	0x03B2C618 ADD X0, X31, 0x0
	0x03B2C61C MOV X3, X31
	0x03B2C620 MOV V8.16B, V4.16B
	0x03B2C624 STR W31, [X31 + 0x8]
	0x03B2C628 STR X31, [X31]
	0x03B2C62C BL 0x3C25B54
	0x03B2C630 LDP S0, S1, [X31]
	0x03B2C634 LDR V2, [X31 + 0x8]
	0x03B2C638 FMOV S3, 1
	0x03B2C63C MOVZ W0, 0x1
	0x03B2C640 FADD S0, S0, S8
	0x03B2C644 FRINTM S4, S0
	0x03B2C648 FSUB S0, S0, S4
	0x03B2C64C FMIN S3, S0, S3
	0x03B2C650 FCMP S0, 0x0
	0x03B2C654 FMOV S0, W31
	0x03B2C658 FCSEL S0, S3, S0, PL
	0x03B2C65C MOV X1, X31
	0x03B2C660 STR S0, [X31]
	0x03B2C664 BL 0x3C25CE0
	0x03B2C668 LDR X30, [X31 + 0x18]
	0x03B2C66C LDR V8, [X31 + 0x10]
	0x03B2C670 ADD X31, X31, 0x20
	0x03B2C674 RET
	0x03B2C678 STP X30, X23, [X31 - 0x30]!
	0x03B2C67C STP X22, X21, [X31 + 0x10]
	0x03B2C680 STP X20, X19, [X31 + 0x20]
	0x03B2C684 ADRP X21, 0x8B6000
	0x03B2C688 LDRB W8, [X21 + 0x791]
	0x03B2C68C MOV X19, X1
	0x03B2C690 MOV X20, X0
	0x03B2C694 TBNZ X8, 0x0, 0x3B2C6AC
	0x03B2C698 ADRP X0, 0x5CE000
	0x03B2C69C LDR X0, [X0 + 0x7A0]
	0x03B2C6A0 BL 0x1C16CF4
	0x03B2C6A4 MOVZ W8, 0x1
	0x03B2C6A8 STRB W8, [X21 + 0x791]
	0x03B2C6AC CBZ X20, 0x3B2C744
	0x03B2C6B0 MOV X0, X20
	0x03B2C6B4 MOV X1, X31
	0x03B2C6B8 BL 0x3C1351C
	0x03B2C6BC CBZ X0, 0x3B2C744
	0x03B2C6C0 ADRP X8, 0x5CE000
	0x03B2C6C4 LDR X8, [X8 + 0x7A0]
	0x03B2C6C8 LDR X21, [X0 + 0x18]
	0x03B2C6CC MOV X23, X0
	0x03B2C6D0 LDR X0, [X8]
	0x03B2C6D4 ADD W1, W21, 0x1
	0x03B2C6D8 BL 0x1C16D6C
	0x03B2C6DC MOV X22, X0
	0x03B2C6E0 MOV X0, X23
	0x03B2C6E4 MOV X1, X22
	0x03B2C6E8 MOV W2, W21
	0x03B2C6EC MOV X3, X31
	0x03B2C6F0 BL 0x33A0C7C
	0x03B2C6F4 CBZ X22, 0x3B2C744
	0x03B2C6F8 CBZ X19, 0x3B2C710
	0x03B2C6FC LDR X8, [X22]
	0x03B2C700 MOV X0, X19
	0x03B2C704 LDR X1, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D10
	003 Move [X31+80], D9
	004 Move [X31+88], D8
	005 Move [X31+96], X30
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0x8B7000
	012 Move W8, [X21+1925]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x62E000
	020 Move X0, [X0+3352]
	021 Call 0x1C17CF4
	022 Move X0, 0x62E000
	023 Move X0, [X0+3360]
	024 Call 0x1C17CF4
	025 Move X0, 0x62E000
	026 Move X0, [X0+3368]
	027 Call 0x1C17CF4
	028 Move X0, 0x62E000
	029 Move X0, [X0+3344]
	030 Call 0x1C17CF4
	031 Move X0, 0x62E000
	032 Move X0, [X0+3376]
	033 Call 0x1C17CF4
	034 Move X0, 0x5CC000
	035 Move X0, [X0+2424]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1925], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+32], V0
	041 Move [X31+40], V0
	042 Compare X20, 0
	043 JumpIfEqual {105}
	044 Move W8, [X20+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, 0x62E000
	047 Move X8, [X8+3376]
	048 Move X22, 0x62E000
	049 Move X23, 0x62E000
	050 Move X21, 0x62E000
	051 Move X1, [X8]
	052 Move X22, [X22+3360]
	053 Move X23, [X23+3344]
	054 Move X21, [X21+3352]
	055 Add X8, X31, 0
	056 Move X0, X20
	057 Call List`1<Vector3>.GetEnumerator, X0
	058 Move V0, [X31]
	059 Move V1, [X31+16]
	060 Move [X31+32], V0
	061 Move [X31+40], V1
	062 Move X1, [X22]
	063 Add X0, X31, 32
	064 Call Enumerator<Vector3>.MoveNext, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {88}
	069 Move X0, [X23]
	070 Move S10, [X31+48]
	071 Move S8, [X31+52]
	072 Move V9, [X31+56]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move V0, V10
	078 Move V1, V8
	079 Move V2, V9
	080 Move X0, X19
	081 Call GeometryUtils.PointInPolygon3D, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {62}
	086 Move W19, 5
	087 Move W0, W31
	088 Move W19, 6
	089 Move X1, [X21]
	090 Add X0, X31, 32
	091 Call Enumerator<Vector3>.Dispose, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Move X20, [X31+128]
	095 Move X19, [X31+136]
	096 Move X22, [X31+112]
	097 Move X21, [X31+120]
	098 Move X30, [X31+96]
	099 Move X23, [X31+104]
	100 Move D9, [X31+80]
	101 Move D8, [X31+88]
	102 Move V10, [X31+64]
	103 Add X31, X31, 144
	104 Return X0
	105 Call 0x1C17F20
	106 Move X19, X0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X19
	109 Call 0x3EB2AD0
	110 Move X20, [X0]
	111 Call 0x3EB2AE0
	112 Move X1, [X21]
	113 Add X0, X31, 32
	114 Call Enumerator<Vector3>.Dispose, X0
	115 Compare X20, 0
	116 JumpIfNotEqual {119}
	117 Move W19, W31
	118 Move X20, X31
	119 Move X0, X20
	120 Call 0x1C17F18
	121 Move X19, X0
	122 Move X1, [X21]
	123 Add X0, X31, 32
	124 Call Enumerator<Vector3>.Dispose, X0
	125 Compare X20, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X19
	128 Call 0x1D2D690
	129 Move X0, X20
	130 Call 0x1C17F18
	131 Call 0x1991590

Method: System.Boolean PolygonsWithinRange(System.Collections.Generic.List`1<UnityEngine.Vector3> polygonA, System.Collections.Generic.List`1<UnityEngine.Vector3> polygonB, System.Single maxDistance)

Disassembly:
	0x03B2C708 BL 0x1C16E00
	0x03B2C70C CBZ X0, 0x3B2C74C
	0x03B2C710 LDR W8, [X22 + 0x18]
	0x03B2C714 CMP W21, W8
	0x03B2C718 B.CS 0x3B2C748
	0x03B2C71C UBFM X8, X21, 0x20, 0x1F
	0x03B2C720 ADD X8, X22, X8, 0x1D, ASR
	0x03B2C724 STR X19, [X8 + 0x20]
	0x03B2C728 MOV X0, X20
	0x03B2C72C MOV X1, X22
	0x03B2C730 LDP X20, X19, [X31 + 0x20]
	0x03B2C734 LDP X22, X21, [X31 + 0x10]
	0x03B2C738 MOV X2, X31
	0x03B2C73C LDP X30, X23, [X31], #0x30
	0x03B2C740 B 0x3C13558
	0x03B2C744 BL 0x1C16F20
	0x03B2C748 BL 0x1C16F28
	0x03B2C74C BL 0x1C16F44
	0x03B2C750 MOV X1, X31
	0x03B2C754 BL 0x1C16DEC
	0x03B2C758 STP D9, D8, [X31 - 0x30]!
	0x03B2C75C STR X30, [X31 + 0x10]
	0x03B2C760 STP X20, X19, [X31 + 0x20]
	0x03B2C764 ADRP X20, 0x8B6000
	0x03B2C768 ADRP X19, 0x62D000
	0x03B2C76C LDRB W8, [X20 + 0x792]
	0x03B2C770 LDR X19, [X19 + 0xD40]
	0x03B2C774 MOV V8.16B, V1.16B
	0x03B2C778 MOV V9.16B, V0.16B

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x8B7000
	008 Move X22, 0x62E000
	009 Move W8, [X21+1926]
	010 Move X22, [X22+3344]
	011 Move V8, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x62E000
	019 Move X0, [X0+3344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1926], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+8]
	035 Multiply S0, S8, S8
	036 Move V8, [X31+48]

Method: System.Boolean PolygonsWithinSqRange(System.Collections.Generic.List`1<UnityEngine.Vector3> polygonA, System.Collections.Generic.List`1<UnityEngine.Vector3> polygonB, System.Single maxSqDistance)

Disassembly:
	0x03B2C77C TBNZ X8, 0x0, 0x3B2C794
	0x03B2C780 ADRP X0, 0x62D000
	0x03B2C784 LDR X0, [X0 + 0xD40]
	0x03B2C788 BL 0x1C16CF4
	0x03B2C78C MOVZ W8, 0x1
	0x03B2C790 STRB W8, [X20 + 0x792]
	0x03B2C794 LDR X0, [X19]
	0x03B2C798 FSUB S8, S8, S9
	0x03B2C79C LDR W8, [X0 + 0xE0]
	0x03B2C7A0 CBNZ W8, 0x3B2C7AC
	0x03B2C7A4 BL 0x1C16DFC
	0x03B2C7A8 LDR X0, [X19]
	0x03B2C7AC LDR X8, [X0 + 0xB8]
	0x03B2C7B0 FNEG S1, S8
	0x03B2C7B4 FCMP S8, 0x0
	0x03B2C7B8 LDP X20, X19, [X31 + 0x20]
	0x03B2C7BC LDR V0, [X8]
	0x03B2C7C0 LDR X30, [X31 + 0x10]
	0x03B2C7C4 FCSEL S1, S1, S8, LT
	0x03B2C7C8 FCMP S1, S0
	0x03B2C7CC CSET W0, MI
	0x03B2C7D0 LDP D9, D8, [X31], #0x30
	0x03B2C7D4 RET
	0x03B2C7D8 STR D8, [X31 - 0x20]!
	0x03B2C7DC STR X30, [X31 + 0x8]
	0x03B2C7E0 STP X20, X19, [X31 + 0x10]
	0x03B2C7E4 ADRP X20, 0x8B6000
	0x03B2C7E8 ADRP X19, 0x62D000
	0x03B2C7EC LDRB W8, [X20 + 0x793]
	0x03B2C7F0 LDR X19, [X19 + 0xD40]
	0x03B2C7F4 MOV V8.16B, V0.16B
	0x03B2C7F8 TBNZ X8, 0x0, 0x3B2C810
	0x03B2C7FC ADRP X0, 0x62D000
	0x03B2C800 LDR X0, [X0 + 0xD40]
	0x03B2C804 BL 0x1C16CF4
	0x03B2C808 MOVZ W8, 0x1
	0x03B2C80C STRB W8, [X20 + 0x793]
	0x03B2C810 LDR X0, [X19]
	0x03B2C814 LDR W8, [X0 + 0xE0]
	0x03B2C818 CBNZ W8, 0x3B2C824
	0x03B2C81C BL 0x1C16DFC
	0x03B2C820 LDR X0, [X19]
	0x03B2C824 LDR X8, [X0 + 0xB8]
	0x03B2C828 FNEG S1, S8
	0x03B2C82C FCMP S8, 0x0
	0x03B2C830 LDP X20, X19, [X31 + 0x10]
	0x03B2C834 LDR V0, [X8]
	0x03B2C838 LDR X30, [X31 + 0x8]
	0x03B2C83C FCSEL S1, S1, S8, LT
	0x03B2C840 FCMP S1, S0
	0x03B2C844 CSET W0, MI
	0x03B2C848 LDR V8, [X31], #0x20
	0x03B2C84C RET
	0x03B2C850 FCMP D0, D2
	0x03B2C854 B.GT 0x3B2C868
	0x03B2C858 FCMP D0, D1
	0x03B2C85C MOV V2.16B, V0.16B
	0x03B2C860 B.PL 0x3B2C868
	0x03B2C864 MOV V2.16B, V1.16B
	0x03B2C868 MOV V0.16B, V2.16B
	0x03B2C86C RET
	0x03B2C870 STP D11, D10, [X31 - 0x40]!
	0x03B2C874 STP D9, D8, [X31 + 0x10]
	0x03B2C878 STR X30, [X31 + 0x20]
	0x03B2C87C STP X20, X19, [X31 + 0x30]
	0x03B2C880 ADRP X20, 0x8B6000
	0x03B2C884 ADRP X19, 0x5C7000
	0x03B2C888 LDRB W8, [X20 + 0x794]
	0x03B2C88C LDR X19, [X19 + 0x5A8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x8B7000
	009 Move X21, 0x62E000
	010 Move W8, [X22+1927]
	011 Move X21, [X21+3344]
	012 Move V8, V0
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x62E000
	020 Move X0, [X0+3344]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1927], W8
	024 Move X0, [X21]
	025 Move [X31+24], W31
	026 Move [X31+16], X31
	027 Move [X31+8], W31
	028 Move [X31], X31
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X2, X31, 16
	034 Add X3, X31, 0
	035 Move S0, W31
	036 Move X0, X19
	037 Move X1, X20
	038 Call GeometryUtils.ClosestPolygonApproach, X0, X1, X2, X3, V0
	039 Move V0, [X31]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move V2, [X31+16]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Subtract S0, S0, S2
	044 Subtract V1, V1, V3
	045 Multiply S0, S0, S0
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 Add S0, S0, S1
	048 Move S1, V1.S[1]
	049 Add S0, S1, S0
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X20
	058 Call GeometryUtils.PolygonInPolygon, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {64}
	063 Move W0, 1
	064 Move X0, [X21]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Move X1, X19
	071 Call GeometryUtils.PolygonInPolygon, X0, X1
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X22, [X31+48]
	075 Move X21, [X31+56]
	076 Move X30, [X31+40]
	077 Move V8, [X31+32]
	078 And W0, W0, 1
	079 Add X31, X31, 80
	080 Return X0

Method: System.Boolean PointOnPolygonBoundsXZ(UnityEngine.Vector3 testPoint, System.Collections.Generic.List`1<UnityEngine.Vector3> vertices, System.Single epsilon = 1E-45)

Disassembly:
	0x03B2C890 MOV V9.16B, V3.16B
	0x03B2C894 MOV V8.16B, V2.16B
	0x03B2C898 MOV V10.16B, V1.16B
	0x03B2C89C MOV V11.16B, V0.16B
	0x03B2C8A0 TBNZ X8, 0x0, 0x3B2C8B8
	0x03B2C8A4 ADRP X0, 0x5C7000
	0x03B2C8A8 LDR X0, [X0 + 0x5A8]
	0x03B2C8AC BL 0x1C16CF4
	0x03B2C8B0 MOVZ W8, 0x1
	0x03B2C8B4 STRB W8, [X20 + 0x794]
	0x03B2C8B8 LDR X0, [X19]
	0x03B2C8BC FSUB D10, D10, D11
	0x03B2C8C0 LDR W8, [X0 + 0xE0]
	0x03B2C8C4 CBNZ W8, 0x3B2C8CC
	0x03B2C8C8 BL 0x1C16DFC
	0x03B2C8CC MOV V0.16B, V10.16B
	0x03B2C8D0 MOV X0, X31
	0x03B2C8D4 BL 0x337F2FC
	0x03B2C8D8 FABS D0, D10
	0x03B2C8DC MOV V1.16B, V9.16B
	0x03B2C8E0 MOV W19, W0
	0x03B2C8E4 BL 0x3EB1C10
	0x03B2C8E8 FSUB D1, D9, D0
	0x03B2C8EC FCMP D0, D8
	0x03B2C8F0 FNEG D1, D1
	0x03B2C8F4 FCSEL D0, D1, D0, GT
	0x03B2C8F8 SCVTF D1, W19
	0x03B2C8FC LDP X20, X19, [X31 + 0x30]
	0x03B2C900 LDR X30, [X31 + 0x20]
	0x03B2C904 LDP D9, D8, [X31 + 0x10]
	0x03B2C908 FMUL D0, D0, D1
	0x03B2C90C LDP D11, D10, [X31], #0x40
	0x03B2C910 RET
	0x03B2C914 STP D11, D10, [X31 - 0x40]!
	0x03B2C918 STP D9, D8, [X31 + 0x10]
	0x03B2C91C STR X30, [X31 + 0x20]
	0x03B2C920 STP X20, X19, [X31 + 0x30]
	0x03B2C924 ADRP X20, 0x8B6000
	0x03B2C928 ADRP X19, 0x5C7000
	0x03B2C92C LDRB W8, [X20 + 0x795]
	0x03B2C930 LDR X19, [X19 + 0x5A8]
	0x03B2C934 MOV V9.16B, V3.16B
	0x03B2C938 MOV V8.16B, V2.16B
	0x03B2C93C MOV V10.16B, V1.16B
	0x03B2C940 MOV V11.16B, V0.16B
	0x03B2C944 TBNZ X8, 0x0, 0x3B2C95C
	0x03B2C948 ADRP X0, 0x5C7000
	0x03B2C94C LDR X0, [X0 + 0x5A8]
	0x03B2C950 BL 0x1C16CF4
	0x03B2C954 MOVZ W8, 0x1
	0x03B2C958 STRB W8, [X20 + 0x795]
	0x03B2C95C LDR X0, [X19]
	0x03B2C960 FSUB S10, S10, S11
	0x03B2C964 LDR W8, [X0 + 0xE0]
	0x03B2C968 CBNZ W8, 0x3B2C970
	0x03B2C96C BL 0x1C16DFC
	0x03B2C970 FABS S0, S10
	0x03B2C974 MOV V1.16B, V9.16B
	0x03B2C978 BL 0x3EB1BA0
	0x03B2C97C FSUB S1, S9, S0
	0x03B2C980 FCMP S0, S8
	0x03B2C984 FNEG S1, S1
	0x03B2C988 LDP X20, X19, [X31 + 0x30]
	0x03B2C98C LDR X30, [X31 + 0x20]
	0x03B2C990 LDP D9, D8, [X31 + 0x10]
	0x03B2C994 FCSEL S0, S1, S0, GT
	0x03B2C998 FNEG S1, S0
	0x03B2C99C FCMP S10, 0x0
	0x03B2C9A0 FCSEL S0, S0, S1, GE
	0x03B2C9A4 LDP D11, D10, [X31], #0x40
	0x03B2C9A8 RET
	0x03B2C9AC FMOV W8, S0
	0x03B2C9B0 MOVZ W9, 0x7F800000
	0x03B2C9B4 BICS W31, W9, W8, 0x0
	0x03B2C9B8 CSET W0, EQ
	0x03B2C9BC RET
	0x03B2C9C0 STP D11, D10, [X31 - 0x40]!
	0x03B2C9C4 STP D9, D8, [X31 + 0x10]
	0x03B2C9C8 STR X30, [X31 + 0x20]
	0x03B2C9CC STP X20, X19, [X31 + 0x30]
	0x03B2C9D0 ADRP X20, 0x8B6000
	0x03B2C9D4 ADRP X19, 0x62D000
	0x03B2C9D8 LDRB W8, [X20 + 0x796]
	0x03B2C9DC LDR X19, [X19 + 0xD40]
	0x03B2C9E0 MOV V8.16B, V2.16B
	0x03B2C9E4 MOV V10.16B, V1.16B
	0x03B2C9E8 MOV V9.16B, V0.16B
	0x03B2C9EC TBNZ X8, 0x0, 0x3B2CA04
	0x03B2C9F0 ADRP X0, 0x62D000
	0x03B2C9F4 LDR X0, [X0 + 0xD40]
	0x03B2C9F8 BL 0x1C16CF4
	0x03B2C9FC MOVZ W8, 0x1
	0x03B2CA00 STRB W8, [X20 + 0x796]
	0x03B2CA04 LDR X0, [X19]
	0x03B2CA08 LDR W8, [X0 + 0xE0]
	0x03B2CA0C CBNZ W8, 0x3B2CA14
	0x03B2CA10 BL 0x1C16DFC
	0x03B2CA14 ADRP X20, 0x8B6000
	0x03B2CA18 LDRB W8, [X20 + 0x7E3]
	0x03B2CA1C CBNZ W8, 0x3B2CA34
	0x03B2CA20 ADRP X0, 0x62D000
	0x03B2CA24 LDR X0, [X0 + 0xD40]
	0x03B2CA28 BL 0x1C16CF4
	0x03B2CA2C MOVZ W8, 0x1
	0x03B2CA30 STRB W8, [X20 + 0x7E3]
	0x03B2CA34 LDR X0, [X19]
	0x03B2CA38 FMUL S11, S9, S10
	0x03B2CA3C LDR W8, [X0 + 0xE0]
	0x03B2CA40 CBNZ W8, 0x3B2CA4C
	0x03B2CA44 BL 0x1C16DFC
	0x03B2CA48 LDR X0, [X19]
	0x03B2CA4C LDR X8, [X0 + 0xB8]
	0x03B2CA50 FNEG S1, S11
	0x03B2CA54 FCMP S11, 0x0
	0x03B2CA58 FCSEL S1, S1, S11, LT
	0x03B2CA5C LDR V0, [X8]
	0x03B2CA60 FCMP S1, S0
	0x03B2CA64 B.PL 0x3B2CB24
	0x03B2CA68 LDR W8, [X0 + 0xE0]
	0x03B2CA6C CBNZ W8, 0x3B2CA74
	0x03B2CA70 BL 0x1C16DFC
	0x03B2CA74 LDRB W8, [X20 + 0x7E3]
	0x03B2CA78 CBNZ W8, 0x3B2CA90
	0x03B2CA7C ADRP X0, 0x62D000
	0x03B2CA80 LDR X0, [X0 + 0xD40]
	0x03B2CA84 BL 0x1C16CF4
	0x03B2CA88 MOVZ W8, 0x1
	0x03B2CA8C STRB W8, [X20 + 0x7E3]
	0x03B2CA90 LDR X0, [X19]
	0x03B2CA94 FMUL S10, S10, S8
	0x03B2CA98 LDR W8, [X0 + 0xE0]
	0x03B2CA9C CBNZ W8, 0x3B2CAA8
	0x03B2CAA0 BL 0x1C16DFC
	0x03B2CAA4 LDR X0, [X19]
	0x03B2CAA8 LDR X8, [X0 + 0xB8]
	0x03B2CAAC FNEG S1, S10
	0x03B2CAB0 FCMP S10, 0x0
	0x03B2CAB4 FCSEL S1, S1, S10, LT
	0x03B2CAB8 LDR V0, [X8]
	0x03B2CABC FCMP S1, S0
	0x03B2CAC0 B.PL 0x3B2CB24
	0x03B2CAC4 LDR W8, [X0 + 0xE0]
	0x03B2CAC8 CBNZ W8, 0x3B2CAD0

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D15
	003 Move [X31+104], D14
	004 Move [X31+112], D13
	005 Move [X31+120], D12
	006 Move [X31+128], D11
	007 Move [X31+136], D10
	008 Move [X31+144], D9
	009 Move [X31+152], D8
	010 Move [X31+160], X30
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x8B7000
	015 Move W8, [X20+1928]
	016 Move X19, X0
	017 Move V10, V1
	018 Move V11, V0
	019 Move [X31+24], S2
	020 Move [X31+32], S3
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x62E000
	026 Move X0, [X0+3352]
	027 Call 0x1C17CF4
	028 Move X0, 0x62E000
	029 Move X0, [X0+3360]
	030 Call 0x1C17CF4
	031 Move X0, 0x62E000
	032 Move X0, [X0+3368]
	033 Call 0x1C17CF4
	034 Move X0, 0x62E000
	035 Move X0, [X0+3344]
	036 Call 0x1C17CF4
	037 Move X0, 0x62E000
	038 Move X0, [X0+3376]
	039 Call 0x1C17CF4
	040 Move X0, 0x5CC000
	041 Move X0, [X0+2424]
	042 Call 0x1C17CF4
	043 Move X0, 0x5CC000
	044 Move X0, [X0+2432]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+1928], W8
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X31+64], V0
	050 Move [X31+72], V0
	051 Compare X19, 0
	052 JumpIfEqual {138}
	053 Move W8, [X19+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, 0x5CC000
	056 Move X9, [X9+2432]
	057 Subtract W1, W8, 1
	058 Move X0, X19
	059 Move X2, [X9]
	060 Call List`1<Vector3>.get_Item, X0, X1
	061 Move X8, 0x62E000
	062 Move X8, [X8+3376]
	063 Move X0, X19
	064 Move V9, V0
	065 Move V8, V1
	066 Move X1, [X8]
	067 Add X8, X31, 32
	068 Move V14, V2
	069 Call List`1<Vector3>.GetEnumerator, X0
	070 Move V0, [X31+32]
	071 Move V1, [X31+48]
	072 Move X20, 0x62E000
	073 Move X20, [X20+3360]
	074 Move X21, 0x62E000
	075 Move [X31+64], V0
	076 Move [X31+72], V1
	077 Move X21, [X21+3344]
	078 Move X1, [X20]
	079 Move V12, V9
	080 Move V13, V8
	081 Move V15, V14
	082 Add X0, X31, 64
	083 Call Enumerator<Vector3>.MoveNext, X0
	084 Move W19, W0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {115}
	089 Move X0, [X21]
	090 Move S9, [X31+80]
	091 Move S8, [X31+84]
	092 Move V14, [X31+88]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move S2, [X31+24]
	098 Move S0, [X31+28]
	099 Move V1, V10
	100 Move V3, V12
	101 Move V4, V13
	102 Move [X31+16], S0
	103 Move V0, V11
	104 Move V5, V15
	105 Move [X31+4], S8
	106 Move [X31+12], S14
	107 Move [X31], S9
	108 Call GeometryUtils.PointOnLineSegmentXZ, X0, X1, X2, V0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {78}
	113 Move W20, 6
	114 Move W0, W31
	115 Move W20, 7
	116 Move X8, 0x62E000
	117 Move X8, [X8+3352]
	118 Add X0, X31, 64
	119 Move X1, [X8]
	120 Call Enumerator<Vector3>.Dispose, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CSET not yet implemented."
	123 And W0, W19, W8
	124 Move X20, [X31+176]
	125 Move X19, [X31+184]
	126 Move X30, [X31+160]
	127 Move X21, [X31+168]
	128 Move D9, [X31+144]
	129 Move D8, [X31+152]
	130 Move D11, [X31+128]
	131 Move D10, [X31+136]
	132 Move D13, [X31+112]
	133 Move D12, [X31+120]
	134 Move D15, [X31+96]
	135 Move D14, [X31+104]
	136 Add X31, X31, 192
	137 Return X0
	138 Call 0x1C17F20
	139 Move X20, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X0, X20
	142 Call 0x3EB2AD0
	143 Move X19, [X0]
	144 Call 0x3EB2AE0
	145 Move X8, 0x62E000
	146 Move X8, [X8+3352]
	147 Add X0, X31, 64
	148 Move X1, [X8]
	149 Call Enumerator<Vector3>.Dispose, X0
	150 Compare X19, 0
	151 JumpIfNotEqual {154}
	152 Move W20, W31
	153 Move X19, X31
	154 Move X0, X19
	155 Call 0x1C17F18
	156 Move X20, X0
	157 Move X8, 0x62E000
	158 Move X8, [X8+3352]
	159 Move X1, [X8]
	160 Add X0, X31, 64
	161 Call Enumerator<Vector3>.Dispose, X0
	162 Compare X19, 0
	163 JumpIfNotEqual {166}
	164 Move X0, X20
	165 Call 0x1D2D690
	166 Move X0, X19
	167 Call 0x1C17F18
	168 Call 0x1991590

Method: System.Boolean PointOnLineSegmentXZ(UnityEngine.Vector3 testPoint, UnityEngine.Vector3 lineStart, UnityEngine.Vector3 lineEnd, System.Single epsilon = 1E-45)

Disassembly:
	0x03B2CACC BL 0x1C16DFC
	0x03B2CAD0 LDRB W8, [X20 + 0x7E3]
	0x03B2CAD4 CBNZ W8, 0x3B2CAEC
	0x03B2CAD8 ADRP X0, 0x62D000
	0x03B2CADC LDR X0, [X0 + 0xD40]
	0x03B2CAE0 BL 0x1C16CF4
	0x03B2CAE4 MOVZ W8, 0x1
	0x03B2CAE8 STRB W8, [X20 + 0x7E3]
	0x03B2CAEC LDR X0, [X19]
	0x03B2CAF0 FMUL S8, S8, S9
	0x03B2CAF4 LDR W8, [X0 + 0xE0]
	0x03B2CAF8 CBNZ W8, 0x3B2CB04
	0x03B2CAFC BL 0x1C16DFC
	0x03B2CB00 LDR X0, [X19]
	0x03B2CB04 LDR X8, [X0 + 0xB8]
	0x03B2CB08 FNEG S1, S8
	0x03B2CB0C FCMP S8, 0x0
	0x03B2CB10 FCSEL S1, S1, S8, LT
	0x03B2CB14 LDR V0, [X8]
	0x03B2CB18 FCMP S1, S0
	0x03B2CB1C CSET W0, MI
	0x03B2CB20 B 0x3B2CB28
	0x03B2CB24 MOV W0, W31
	0x03B2CB28 LDP X20, X19, [X31 + 0x30]
	0x03B2CB2C LDR X30, [X31 + 0x20]
	0x03B2CB30 LDP D9, D8, [X31 + 0x10]
	0x03B2CB34 LDP D11, D10, [X31], #0x40
	0x03B2CB38 RET
	0x03B2CB3C CMP W0, 0x0
	0x03B2CB40 SUB W8, W0, 0x1

ISIL:
	001 Move V7, [X31]
	002 Move V16, [X31+8]
	003 Subtract S4, S0, S3
	004 Subtract S6, S2, S5
	005 Subtract S2, S7, S3
	006 Subtract S0, S16, S5
	007 Move V1, [X31+16]
	008 Multiply S3, S4, S0
	009 Multiply S5, S6, S2
	010 Subtract S3, S3, S5
	011 NotImplemented "Instruction FNEG not yet implemented."
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 NotImplemented "Instruction FCSEL not yet implemented."
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 Multiply S3, S4, S2
	016 Multiply S4, S6, S0
	017 Add S3, S3, S4
	018 NotImplemented "Instruction FNEG not yet implemented."
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move W0, W31
	021 Return X0
	022 Multiply S2, S2, S2
	023 Multiply S0, S0, S0
	024 Add S0, S2, S0
	025 Add S0, S0, S1
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Return X0

Method: UnityEngine.Quaternion NormalizeRotationKeepingUp(UnityEngine.Quaternion rot)

Disassembly:
	0x03B2CB44 CSET W9, GT
	0x03B2CB48 ANDS W31, W0, W8, 0x0
	0x03B2CB4C CSET W8, EQ
	0x03B2CB50 AND W0, W9, W8, 0x0
	0x03B2CB54 RET
	0x03B2CB58 CBZ W0, 0x3B2CB7C
	0x03B2CB5C MOV W8, W0
	0x03B2CB60 MOV W0, W31
	0x03B2CB64 LSRV W9, W8, W0
	0x03B2CB68 TBNZ X9, 0x0, 0x3B2CB7C
	0x03B2CB6C ADD W0, W0, 0x1
	0x03B2CB70 CMP W0, 0x20
	0x03B2CB74 B.NE 0x3B2CB64
	0x03B2CB78 MOV W0, W31
	0x03B2CB7C RET
	0x03B2CB80 STP X30, X21, [X31 - 0x20]!
	0x03B2CB84 STP X20, X19, [X31 + 0x10]
	0x03B2CB88 ADRP X20, 0x8B6000
	0x03B2CB8C ADRP X21, 0x5CE000
	0x03B2CB90 ADRP X19, 0x62D000
	0x03B2CB94 LDRB W8, [X20 + 0x797]
	0x03B2CB98 LDR X21, [X21 + 0x4B8]
	0x03B2CB9C LDR X19, [X19 + 0xD40]
	0x03B2CBA0 TBNZ X8, 0x0, 0x3B2CBC4
	0x03B2CBA4 ADRP X0, 0x62D000
	0x03B2CBA8 LDR X0, [X0 + 0xD40]
	0x03B2CBAC BL 0x1C16CF4
	0x03B2CBB0 ADRP X0, 0x5CE000
	0x03B2CBB4 LDR X0, [X0 + 0x4B8]
	0x03B2CBB8 BL 0x1C16CF4
	0x03B2CBBC MOVZ W8, 0x1
	0x03B2CBC0 STRB W8, [X20 + 0x797]
	0x03B2CBC4 LDR X8, [X21]
	0x03B2CBC8 LDR X9, [X19]
	0x03B2CBCC LDP X20, X19, [X31 + 0x10]
	0x03B2CBD0 FMOV S1, 8
	0x03B2CBD4 LDR X8, [X8 + 0xB8]
	0x03B2CBD8 LDR V0, [X8]
	0x03B2CBDC LDR X8, [X9 + 0xB8]
	0x03B2CBE0 FMUL S0, S0, S1
	0x03B2CBE4 STR S0, [X8]
	0x03B2CBE8 LDP X30, X21, [X31], #0x20
	0x03B2CBEC RET
	0x03B2CBF0 LDR X0, [X0 + 0x20]
	0x03B2CBF4 RET
	0x03B2CBF8 STR X1, [X0 + 0x20]
	0x03B2CBFC RET
	0x03B2CC00 LDR X8, [X0 + 0x20]
	0x03B2CC04 CBZ X8, 0x3B2CC1C
	0x03B2CC08 MOV X1, X0
	0x03B2CC0C LDR X3, [X8 + 0x18]
	0x03B2CC10 LDR X0, [X8 + 0x40]
	0x03B2CC14 LDR X2, [X8 + 0x28]
	0x03B2CC18 BR X3
	0x03B2CC1C RET
	0x03B2CC20 MOV X1, X31
	0x03B2CC24 B 0x3C36C30
	0x03B2CC28 STR X30, [X31 - 0x20]!
	0x03B2CC2C STP X20, X19, [X31 + 0x10]
	0x03B2CC30 ADRP X20, 0x8B6000
	0x03B2CC34 ADRP X19, 0x62D000
	0x03B2CC38 LDRB W8, [X20 + 0x798]
	0x03B2CC3C LDR X19, [X19 + 0xD48]
	0x03B2CC40 TBNZ X8, 0x0, 0x3B2CC58
	0x03B2CC44 ADRP X0, 0x62D000
	0x03B2CC48 LDR X0, [X0 + 0xD48]
	0x03B2CC4C BL 0x1C16CF4
	0x03B2CC50 MOVZ W8, 0x1
	0x03B2CC54 STRB W8, [X20 + 0x798]
	0x03B2CC58 LDR X8, [X19]
	0x03B2CC5C LDR X8, [X8 + 0xB8]
	0x03B2CC60 LDR X0, [X8]
	0x03B2CC64 CBNZ X0, 0x3B2CC84
	0x03B2CC68 BL 0x33C0128
	0x03B2CC6C CBZ X0, 0x3B2CC90
	0x03B2CC70 MOV X1, X31
	0x03B2CC74 BL 0x33C0134
	0x03B2CC78 LDR X8, [X19]
	0x03B2CC7C LDR X8, [X8 + 0xB8]
	0x03B2CC80 STR X0, [X8]
	0x03B2CC84 LDP X20, X19, [X31 + 0x10]
	0x03B2CC88 LDR X30, [X31], #0x20
	0x03B2CC8C RET
	0x03B2CC90 BL 0x1C16F20
	0x03B2CC94 STP X30, X25, [X31 - 0x40]!
	0x03B2CC98 STP X24, X23, [X31 + 0x10]
	0x03B2CC9C STP X22, X21, [X31 + 0x20]
	0x03B2CCA0 STP X20, X19, [X31 + 0x30]
	0x03B2CCA4 ADRP X19, 0x8B6000
	0x03B2CCA8 ADRP X22, 0x62D000
	0x03B2CCAC LDRB W8, [X19 + 0x799]
	0x03B2CCB0 LDR X22, [X22 + 0xD48]
	0x03B2CCB4 TBNZ X8, 0x0, 0x3B2CCF0
	0x03B2CCB8 ADRP X0, 0x62D000
	0x03B2CCBC LDR X0, [X0 + 0xD50]
	0x03B2CCC0 BL 0x1C16CF4
	0x03B2CCC4 ADRP X0, 0x62D000
	0x03B2CCC8 LDR X0, [X0 + 0xD58]
	0x03B2CCCC BL 0x1C16CF4
	0x03B2CCD0 ADRP X0, 0x62D000
	0x03B2CCD4 LDR X0, [X0 + 0xD60]
	0x03B2CCD8 BL 0x1C16CF4
	0x03B2CCDC ADRP X0, 0x62D000
	0x03B2CCE0 LDR X0, [X0 + 0xD48]
	0x03B2CCE4 BL 0x1C16CF4
	0x03B2CCE8 MOVZ W8, 0x1
	0x03B2CCEC STRB W8, [X19 + 0x799]
	0x03B2CCF0 LDR X8, [X22]
	0x03B2CCF4 LDR X8, [X8 + 0xB8]
	0x03B2CCF8 LDR X9, [X8 + 0x8]
	0x03B2CCFC CBNZ X9, 0x3B2CE6C
	0x03B2CD00 MOV X0, X31
	0x03B2CD04 BL 0x33C0128
	0x03B2CD08 CBZ X0, 0x3B2CE88
	0x03B2CD0C MOV X1, X31
	0x03B2CD10 BL 0x33C0134
	0x03B2CD14 CBZ X0, 0x3B2CE88
	0x03B2CD18 ADRP X8, 0x62D000
	0x03B2CD1C LDR X8, [X8 + 0xD60]
	0x03B2CD20 MOV X19, X0
	0x03B2CD24 LDR X0, [X8]
	0x03B2CD28 BL 0x1C16F10
	0x03B2CD2C ADRP X8, 0x62D000
	0x03B2CD30 LDR W1, [X19 + 0x18]
	0x03B2CD34 LDR X8, [X8 + 0xD58]
	0x03B2CD38 MOV X20, X0
	0x03B2CD3C LDR X2, [X8]
	0x03B2CD40 BL 0x301B830

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x8B7000
	009 Move X19, 0x62E000
	010 Move W8, [X20+1929]
	011 Move X19, [X19+3344]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x62E000
	021 Move X0, [X0+3344]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1929], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X19]
	031 Move X8, [X0+184]
	032 Move V0, V11
	033 Move V1, V10
	034 Move V2, V9
	035 Move S4, [X8]
	036 Move S5, [X8+4]
	037 Move V6, [X8+8]
	038 Move V3, V8
	039 Move X0, X31
	040 Call Quaternion.op_Multiply, X0, X1
	041 Move X20, 0x8AD000
	042 Move W8, [X20+1925]
	043 Move V8, V0
	044 Move V9, V1
	045 Move V10, V2
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x5C8000
	049 Move X0, [X0+1448]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1925], W8
	053 Move X8, 0x5C8000
	054 Move X8, [X8+1448]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Multiply S0, S8, S8
	061 Multiply S1, S9, S9
	062 Move X8, -50597888
	063 Add S0, S0, S1
	064 Move V1, [X8+380]
	065 Multiply S2, S10, S10
	066 Add S0, S2, S0
	067 NotImplemented "Instruction FSQRT not yet implemented."
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction FDIV not yet implemented."
	070 NotImplemented "Instruction FDIV not yet implemented."
	071 NotImplemented "Instruction FDIV not yet implemented."
	072 Move X20, 0x8AD000
	073 Move W8, [X20+1923]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x5C8000
	077 Move X0, [X0+1440]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X20+1923], W8
	081 Move X8, 0x5C8000
	082 Move X8, [X8+1440]
	083 Move X8, [X8]
	084 Move X8, [X8+184]
	085 Move S8, [X8]
	086 Move S9, [X8+4]
	087 Move V10, [X8+8]
	088 Move X0, [X19]
	089 NotImplemented "Instruction FABS not yet implemented."
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X19]
	095 Move X8, -50597888
	096 Move V0, [X8+304]
	097 Move X8, [X0+184]
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 Move S3, [X8+16]
	100 Move S0, [X8+20]
	101 Move V1, [X8+12]
	102 Multiply S4, S10, S3
	103 Multiply S5, S9, S0
	104 Multiply S6, S8, S0
	105 Multiply S7, S10, S1
	106 Multiply S2, S9, S1
	107 Subtract S0, S4, S5
	108 Subtract S1, S6, S7
	109 Multiply S3, S8, S3
	110 Move S1, [X8+4]
	111 Move S0, [X8+8]
	112 Move V2, [X8]
	113 Multiply S3, S9, S0
	114 Multiply S4, S10, S1
	115 Subtract S3, S3, S4
	116 Multiply S4, S10, S2
	117 Multiply S0, S8, S0
	118 Multiply S1, S8, S1
	119 Multiply S2, S9, S2
	120 Subtract S4, S4, S0
	121 Subtract S1, S1, S2
	122 Multiply S0, S9, S1
	123 Multiply S2, S10, S4
	124 Multiply S5, S10, S3
	125 Multiply S1, S8, S1
	126 Subtract S0, S0, S2
	127 Multiply S2, S8, S4
	128 Subtract S1, S5, S1
	129 Multiply S3, S9, S3
	130 Subtract S2, S2, S3
	131 Move V3, V8
	132 Move V4, V9
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X30, [X31+32]
	136 Move D9, [X31+16]
	137 Move D8, [X31+24]
	138 Move V5, V10
	139 Move X0, X31
	140 Move D11, [X31+64]
	141 Move D10, [X31+72]
	142 Call Quaternion.LookRotation, X0, X1
	143 Return X0

Method: UnityEngine.Pose PolygonUVPoseFromPlanePose(UnityEngine.Pose pose)

Disassembly:
	0x03B2CD44 LDR X8, [X22]
	0x03B2CD48 LDR X8, [X8 + 0xB8]
	0x03B2CD4C STR X20, [X8 + 0x8]
	0x03B2CD50 LDR X9, [X19 + 0x18]
	0x03B2CD54 CMP W9, 0x1
	0x03B2CD58 B.LT 0x3B2CE6C
	0x03B2CD5C ADRP X20, 0x62D000
	0x03B2CD60 ADRP X25, 0x62D000
	0x03B2CD64 LDR X20, [X20 + 0xD68]
	0x03B2CD68 LDR X25, [X25 + 0xD50]
	0x03B2CD6C MOV X23, X31
	0x03B2CD70 AND X8, X9, 0x0
	0x03B2CD74 ADD X24, X19, 0x20
	0x03B2CD78 CMP X23, W8, UXTW
	0x03B2CD7C B.CS 0x3B2CE84
	0x03B2CD80 LDR X0, [X24, X23, LSL #3]
	0x03B2CD84 CBZ X0, 0x3B2CE10
	0x03B2CD88 LDR X8, [X22]
	0x03B2CD8C LDR X9, [X0]
	0x03B2CD90 LDR X8, [X8 + 0xB8]
	0x03B2CD94 LDR X1, [X9 + 0x230]
	0x03B2CD98 LDR X10, [X9 + 0x228]
	0x03B2CD9C LDR X21, [X8 + 0x8]
	0x03B2CDA0 BLR X10
	0x03B2CDA4 MOV X1, X0
	0x03B2CDA8 CBZ X21, 0x3B2CE18
	0x03B2CDAC LDR W10, [X21 + 0x1C]
	0x03B2CDB0 LDR X8, [X21 + 0x10]
	0x03B2CDB4 LDR X9, [X25]
	0x03B2CDB8 ADD W10, W10, 0x1
	0x03B2CDBC STR W10, [X21 + 0x1C]
	0x03B2CDC0 CBZ X8, 0x3B2CE20
	0x03B2CDC4 LDRSW X10, [X21 + 0x18]
	0x03B2CDC8 LDR W11, [X8 + 0x18]
	0x03B2CDCC CMP W10, W11
	0x03B2CDD0 B.CS 0x3B2CDE8
	0x03B2CDD4 ADD W9, W10, 0x1
	0x03B2CDD8 ADD X8, X8, X10, 0x3, LSL
	0x03B2CDDC STR W9, [X21 + 0x18]
	0x03B2CDE0 STR X1, [X8 + 0x20]
	0x03B2CDE4 B 0x3B2CDFC
	0x03B2CDE8 LDR X8, [X9 + 0x20]
	0x03B2CDEC LDR X8, [X8 + 0xC0]
	0x03B2CDF0 LDR X2, [X8 + 0x70]
	0x03B2CDF4 MOV X0, X21
	0x03B2CDF8 BL 0x301BF90
	0x03B2CDFC LDR W8, [X19 + 0x18]
	0x03B2CE00 ADD X23, X23, 0x1
	0x03B2CE04 CMP X23, W8, SXTW
	0x03B2CE08 B.LT 0x3B2CD78

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x8B7000
	010 Move X21, 0x62E000
	011 Move X19, X8
	012 Move W8, [X22+1930]
	013 Move X21, [X21+3344]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x62E000
	020 Move X0, [X0+3344]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1930], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move S0, [X20+12]
	032 Move S1, [X20+16]
	033 Move S2, [X20+20]
	034 Move S3, [X20+24]
	035 Move S8, [X8+24]
	036 Move S9, [X8+28]
	037 Move V10, [X8+32]
	038 Call GeometryUtils.NormalizeRotationKeepingUp, X0
	039 Move V4, V0
	040 Move V5, V1
	041 Move [X19+8], X31
	042 Move [X19+16], X31
	043 Move [X19], X31
	044 Move [X19+24], W31
	045 Move V0, V8
	046 Move V1, V9
	047 Move X0, X19
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X30, [X31+24]
	053 Move D9, [X31+8]
	054 Move D8, [X31+16]
	055 Move V6, V2
	056 Move V7, V3
	057 Move V2, V10
	058 Move V3, V4
	059 Move V4, V5
	060 Move V5, V6
	061 Move V6, V7
	062 Move X1, X31
	063 Move V10, [X31+64]
	064 Call Pose..ctor, X0, X1, X2
	065 Return X0

Method: UnityEngine.Vector2 PolygonVertexToUV(UnityEngine.Vector3 vertexPos, UnityEngine.Pose planePose, UnityEngine.Pose uvPose)

Disassembly:
	0x03B2CE0C B 0x3B2CE64
	0x03B2CE10 BL 0x1C16F20
	0x03B2CE14 B 0x3B2CE8C
	0x03B2CE18 BL 0x1C16F20
	0x03B2CE1C B 0x3B2CE8C
	0x03B2CE20 BL 0x1C16F20
	0x03B2CE24 B 0x3B2CE8C
	0x03B2CE28 B 0x3B2CE2C
	0x03B2CE2C MOV X21, X0
	0x03B2CE30 CMP W1, 0x1
	0x03B2CE34 B.NE 0x3B2CEB8
	0x03B2CE38 MOV X0, X21
	0x03B2CE3C BL 0x3EB1AD0
	0x03B2CE40 MOV X21, X0
	0x03B2CE44 MOV X0, X20
	0x03B2CE48 BL 0x1C16D08
	0x03B2CE4C LDR X8, [X21]
	0x03B2CE50 LDR X1, [X8]
	0x03B2CE54 BL 0x1C17270
	0x03B2CE58 TBZ X0, 0x0, 0x3B2CE8C
	0x03B2CE5C BL 0x3EB1AE0
	0x03B2CE60 B 0x3B2CDFC
	0x03B2CE64 LDR X8, [X22]
	0x03B2CE68 LDR X8, [X8 + 0xB8]
	0x03B2CE6C LDR X0, [X8 + 0x8]
	0x03B2CE70 LDP X20, X19, [X31 + 0x30]
	0x03B2CE74 LDP X22, X21, [X31 + 0x20]
	0x03B2CE78 LDP X24, X23, [X31 + 0x10]
	0x03B2CE7C LDP X30, X25, [X31], #0x40
	0x03B2CE80 RET
	0x03B2CE84 BL 0x1C16F28
	0x03B2CE88 BL 0x1C16F20
	0x03B2CE8C MOVZ W0, 0x8
	0x03B2CE90 BL 0x3EB1AF0
	0x03B2CE94 LDR X8, [X21]
	0x03B2CE98 STR X8, [X0]
	0x03B2CE9C ADRP X1, 0x388000
	0x03B2CEA0 ADD X1, X1, 0xE58
	0x03B2CEA4 MOV X2, X31
	0x03B2CEA8 BL 0x3EB1B00
	0x03B2CEAC B 0x3B2CEB0
	0x03B2CEB0 MOV X21, X0
	0x03B2CEB4 BL 0x3EB1AE0
	0x03B2CEB8 MOV X0, X21
	0x03B2CEBC BL 0x1D2C690
	0x03B2CEC0 BL 0x1990590
	0x03B2CEC4 SUB X31, X31, 0xA0
	0x03B2CEC8 STP X29, X30, [X31 + 0x40]
	0x03B2CECC STP X28, X27, [X31 + 0x50]
	0x03B2CED0 STP X26, X25, [X31 + 0x60]
	0x03B2CED4 STP X24, X23, [X31 + 0x70]
	0x03B2CED8 STP X22, X21, [X31 + 0x80]
	0x03B2CEDC STP X20, X19, [X31 + 0x90]
	0x03B2CEE0 ADRP X19, 0x8B6000
	0x03B2CEE4 ADRP X22, 0x62D000
	0x03B2CEE8 LDRB W8, [X19 + 0x79A]
	0x03B2CEEC LDR X22, [X22 + 0xD48]
	0x03B2CEF0 TBNZ X8, 0x0, 0x3B2CF8C
	0x03B2CEF4 ADRP X0, 0x62D000
	0x03B2CEF8 LDR X0, [X0 + 0xD70]
	0x03B2CEFC BL 0x1C16CF4
	0x03B2CF00 ADRP X0, 0x62D000
	0x03B2CF04 LDR X0, [X0 + 0xD78]
	0x03B2CF08 BL 0x1C16CF4
	0x03B2CF0C ADRP X0, 0x62D000
	0x03B2CF10 LDR X0, [X0 + 0xD80]
	0x03B2CF14 BL 0x1C16CF4
	0x03B2CF18 ADRP X0, 0x62D000
	0x03B2CF1C LDR X0, [X0 + 0xC18]
	0x03B2CF20 BL 0x1C16CF4
	0x03B2CF24 ADRP X0, 0x62D000

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x8B7000
	013 Move X21, 0x62E000
	014 Move W8, [X22+1931]
	015 Move X21, [X21+3344]
	016 Move X19, X1
	017 Move X20, X0
	018 Move V8, V2
	019 Move V9, V1
	020 Move V10, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x62E000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1931], W8
	030 Move S13, [X20+8]
	031 Move S0, [X20+12]
	032 Move S1, [X20+16]
	033 Move S2, [X20+20]
	034 Move V3, [X20+24]
	035 Move S11, [X20]
	036 Move S12, [X20+4]
	037 Move V4, V10
	038 Move V5, V9
	039 Move V6, V8
	040 Move X0, X31
	041 Call Quaternion.op_Multiply, X0, X1
	042 Move S6, [X19+12]
	043 Move S4, [X19+16]
	044 Move S5, [X19+20]
	045 Move S3, [X19+24]
	046 Add S8, S11, S0
	047 Add S9, S12, S1
	048 Add S10, S13, S2
	049 Move V0, V6
	050 Move V1, V4
	051 Move V2, V5
	052 Move X0, X31
	053 Call Quaternion.Inverse, X0
	054 Move S4, [X19]
	055 Move S5, [X19+4]
	056 Move V6, [X19+8]
	057 Move X0, X31
	058 Subtract S4, S8, S4
	059 Subtract S5, S9, S5
	060 Subtract S6, S10, S6
	061 Call Quaternion.op_Multiply, X0, X1
	062 Move X0, [X21]
	063 Move V8, V0
	064 Move V9, V1
	065 Move V10, V2
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X21]
	071 Move X8, [X0+184]
	072 Move V4, V8
	073 Move V5, V9
	074 Move V6, V10
	075 Move S0, [X8+36]
	076 Move S1, [X8+40]
	077 Move S2, [X8+44]
	078 Move S3, [X8+48]
	079 Move X0, X31
	080 Call Quaternion.op_Multiply, X0, X1
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X30, [X31+48]
	086 Move D9, [X31+32]
	087 Move D8, [X31+40]
	088 Move D11, [X31+16]
	089 Move D10, [X31+24]
	090 Move V1, V2
	091 Move D13, [X31+96]
	092 Move D12, [X31+104]
	093 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03B2CF28 LDR X0, [X0 + 0xC20]
	0x03B2CF2C BL 0x1C16CF4
	0x03B2CF30 ADRP X0, 0x62D000
	0x03B2CF34 LDR X0, [X0 + 0xC28]
	0x03B2CF38 BL 0x1C16CF4
	0x03B2CF3C ADRP X0, 0x62D000
	0x03B2CF40 LDR X0, [X0 + 0xD88]
	0x03B2CF44 BL 0x1C16CF4
	0x03B2CF48 ADRP X0, 0x62D000
	0x03B2CF4C LDR X0, [X0 + 0xC30]
	0x03B2CF50 BL 0x1C16CF4
	0x03B2CF54 ADRP X0, 0x62D000
	0x03B2CF58 LDR X0, [X0 + 0xD90]
	0x03B2CF5C BL 0x1C16CF4
	0x03B2CF60 ADRP X0, 0x62D000
	0x03B2CF64 LDR X0, [X0 + 0xD98]
	0x03B2CF68 BL 0x1C16CF4
	0x03B2CF6C ADRP X0, 0x62D000
	0x03B2CF70 LDR X0, [X0 + 0xDA0]
	0x03B2CF74 BL 0x1C16CF4
	0x03B2CF78 ADRP X0, 0x62D000
	0x03B2CF7C LDR X0, [X0 + 0xD48]
	0x03B2CF80 BL 0x1C16CF4
	0x03B2CF84 MOVZ W8, 0x1
	0x03B2CF88 STRB W8, [X19 + 0x79A]
	0x03B2CF8C LDR X8, [X22]
	0x03B2CF90 STP X31, X31, [X31 + 0x20]
	0x03B2CF94 STR X31, [X31 + 0x30]
	0x03B2CF98 LDR X8, [X8 + 0xB8]
	0x03B2CF9C LDR X8, [X8 + 0x10]
	0x03B2CFA0 CBNZ X8, 0x3B2D1C8
	0x03B2CFA4 BL 0x3B2CC94
	0x03B2CFA8 CBZ X0, 0x3B2D1FC
	0x03B2CFAC ADRP X8, 0x62D000
	0x03B2CFB0 LDR W20, [X0 + 0x18]
	0x03B2CFB4 LDR X8, [X8 + 0xDA0]
	0x03B2CFB8 MOV X19, X0
	0x03B2CFBC LDR X0, [X8]
	0x03B2CFC0 BL 0x1C16F10
	0x03B2CFC4 ADRP X8, 0x62D000
	0x03B2CFC8 LDR X8, [X8 + 0xD90]
	0x03B2CFCC MOV W1, W20
	0x03B2CFD0 MOV X21, X0
	0x03B2CFD4 LDR X2, [X8]
	0x03B2CFD8 BL 0x301B830
	0x03B2CFDC LDR X8, [X22]
	0x03B2CFE0 MOV X0, X19
	0x03B2CFE4 LDR X8, [X8 + 0xB8]
	0x03B2CFE8 STR X21, [X8 + 0x10]
	0x03B2CFEC ADRP X8, 0x62D000
	0x03B2CFF0 LDR X8, [X8 + 0xC30]
	0x03B2CFF4 LDR X1, [X8]
	0x03B2CFF8 ADD X8, X31, 0x8
	0x03B2CFFC BL 0x301CB58
	0x03B2D000 LDUR V0, [X31 + 0x8]
	0x03B2D004 LDR X8, [X31 + 0x18]
	0x03B2D008 ADRP X23, 0x62C000
	0x03B2D00C ADRP X24, 0x62C000
	0x03B2D010 ADRP X25, 0x62C000
	0x03B2D014 ADRP X26, 0x62C000
	0x03B2D018 ADRP X27, 0x62C000
	0x03B2D01C LDR X23, [X23 + 0xC20]
	0x03B2D020 LDR X24, [X24 + 0xD80]
	0x03B2D024 LDR X25, [X25 + 0xD70]
	0x03B2D028 LDR X26, [X26 + 0xD78]
	0x03B2D02C LDR X27, [X27 + 0xD88]
	0x03B2D030 STR V0, [X31 + 0x2]
	0x03B2D034 STR X8, [X31 + 0x30]
	0x03B2D038 ADRP X19, 0x62C000
	0x03B2D03C LDR X19, [X19 + 0xD68]
	0x03B2D040 LDR X1, [X23]
	0x03B2D044 ADD X0, X31, 0x20
	0x03B2D048 BL 0x2BC4350
	0x03B2D04C TBZ X0, 0x0, 0x3B2D1B4
	0x03B2D050 LDR X28, [X31 + 0x30]
	0x03B2D054 LDR X0, [X24]
	0x03B2D058 BL 0x1C16F10
	0x03B2D05C LDR X1, [X25]
	0x03B2D060 MOV X20, X0
	0x03B2D064 BL 0x2AA4804
	0x03B2D068 CBZ X28, 0x3B2D148
	0x03B2D06C LDR W8, [X28 + 0x18]
	0x03B2D070 CMP W8, 0x1
	0x03B2D074 B.LT 0x3B2D0CC
	0x03B2D078 MOV W29, W31
	0x03B2D07C CMP W29, W8
	0x03B2D080 B.CS 0x3B2D140
	0x03B2D084 ADD X8, X28, W29, 0x3, SXTW
	0x03B2D088 LDR X21, [X8 + 0x20]
	0x03B2D08C CBZ X21, 0x3B2D130
	0x03B2D090 LDR X8, [X21]
	0x03B2D094 LDR X1, [X8 + 0x2F0]
	0x03B2D098 LDR X9, [X8 + 0x2E8]
	0x03B2D09C MOV X0, X21
	0x03B2D0A0 BLR X9
	0x03B2D0A4 MOV X1, X0
	0x03B2D0A8 CBZ X20, 0x3B2D138
	0x03B2D0AC LDR X3, [X26]
	0x03B2D0B0 MOV X0, X20
	0x03B2D0B4 MOV X2, X21
	0x03B2D0B8 BL 0x2AA5084
	0x03B2D0BC LDR W8, [X28 + 0x18]
	0x03B2D0C0 ADD W29, W29, 0x1
	0x03B2D0C4 CMP W29, W8
	0x03B2D0C8 B.LT 0x3B2D07C
	0x03B2D0CC LDR X8, [X22]
	0x03B2D0D0 LDR X8, [X8 + 0xB8]
	0x03B2D0D4 LDR X0, [X8 + 0x10]
	0x03B2D0D8 CBZ X0, 0x3B2D150
	0x03B2D0DC LDR W10, [X0 + 0x1C]
	0x03B2D0E0 LDR X8, [X0 + 0x10]
	0x03B2D0E4 LDR X9, [X27]
	0x03B2D0E8 ADD W10, W10, 0x1
	0x03B2D0EC STR W10, [X0 + 0x1C]
	0x03B2D0F0 CBZ X8, 0x3B2D158

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x8B7000
	010 Move W8, [X19+1932]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x62E000
	016 Move X0, [X0+3344]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CF000
	019 Move X0, [X0+1672]
	020 Call 0x1C17CF4
	021 Move X0, 0x5C9000
	022 Move X0, [X0+3592]
	023 Call 0x1C17CF4
	024 Move X0, 0x5F4000
	025 Move X0, [X0+1464]
	026 Call 0x1C17CF4
	027 Move X0, 0x5CC000
	028 Move X0, [X0+960]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+1932], W8
	032 Move X19, 0x8AD000
	033 Move X20, 0x62E000
	034 Move W8, [X19+1926]
	035 Move X20, [X20+3344]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x5C8000
	039 Move X0, [X0+1440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X19+1926], W8
	043 Move X19, 0x5C8000
	044 Move X19, [X19+1440]
	045 Move X9, [X20]
	046 Move X21, 0x8AD000
	047 Move X8, [X19]
	048 Move X9, [X9+184]
	049 Move X8, [X8+184]
	050 Move V0, [X8+24]
	051 Move V1, [X8+32]
	052 Move [X9], D0
	053 Move [X9+8], S1
	054 Move W8, [X21+2591]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x5C8000
	058 Move X0, [X0+1440]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X21+2591], W8
	062 Move X9, [X19]
	063 Move X8, [X20]
	064 Move X25, 0x8AC000
	065 Move X24, 0x5CB000
	066 Move X10, [X9+184]
	067 Move X11, [X8+184]
	068 Move X23, 0x5F3000
	069 Move X22, 0x5C8000
	070 Move V0, [X10+72]
	071 Move V1, [X10+80]
	072 Move X21, 0x5CE000
	073 Move [X11+12], D0
	074 Move [X11+20], S1
	075 Move W10, [X25+1923]
	076 Move X24, [X24+960]
	077 Move X23, [X23+1464]
	078 Move X22, [X22+3592]
	079 Move X21, [X21+1672]
	080 Compare W10, 0
	081 JumpIfNotEqual {88}
	082 Move X0, X19
	083 Call 0x1C17CF4
	084 Move X9, [X19]
	085 Move X8, [X20]
	086 Move W10, 1
	087 Move [X25+1923], W10
	088 Move X9, [X9+184]
	089 Move X10, [X8+184]
	090 Move X0, X31
	091 Move V0, [X9]
	092 Move V1, [X9+8]
	093 Move [X10+24], D0
	094 Move [X10+32], S1
	095 Move X8, [X8+184]
	096 Move S1, [X8]
	097 Move S2, [X8+4]
	098 Move V3, [X8+8]
	099 Move W8, 0x43340000
	100 Move S0, W8
	101 Call Quaternion.AngleAxis, V0, X0
	102 Move X8, [X20]
	103 Move X8, [X8+184]
	104 Move [X8+36], S0
	105 Move [X8+44], S1
	106 Move [X8+44], S2
	107 Move [X8+52], S3
	108 Move X0, [X24]
	109 Call 0x1C17F10
	110 Move X1, [X23]
	111 Move X19, X0
	112 Call List`1<Vector3>..ctor, X0
	113 Move X8, [X20]
	114 Move X8, [X8+184]
	115 Move [X8+56], X19
	116 Move X0, [X22]
	117 Call 0x1C17F10
	118 Move X1, [X21]
	119 Move X19, X0
	120 Call HashSet`1<Int32>..ctor, X0
	121 Move X8, [X20]
	122 Move X22, [X31+32]
	123 Move X21, [X31+40]
	124 Move X24, [X31+16]
	125 Move X23, [X31+24]
	126 Move X8, [X8+184]
	127 Move [X8+64], X19
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X30, [X31+64]
	131 Move X25, [X31+72]
	132 Return 

