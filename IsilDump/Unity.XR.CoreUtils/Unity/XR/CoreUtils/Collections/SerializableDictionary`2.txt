Type: Unity.XR.CoreUtils.Collections.SerializableDictionary`2

Method: System.Collections.Generic.List`1<Unity.XR.CoreUtils.Collections.SerializableDictionary`2/Item<TKey, TValue>> get_SerializedItems()

Disassembly:
	0x025DED24 ADD X0, X31, 0x8
	0x025DED28 MOV X1, X31

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x025DED2C BL 0x1E33AB8
	0x025DED30 LDR X8, [X19 + 0x20]
	0x025DED34 MOV X20, X0
	0x025DED38 LDRB W9, [X8 + 0x135]
	0x025DED3C TBNZ X9, 0x0, 0x25DED4C
	0x025DED40 MOV X0, X8
	0x025DED44 BL 0x1C5C684
	0x025DED48 MOV X8, X0
	0x025DED4C LDR X0, [X21]
	0x025DED50 LDR X8, [X8 + 0xC0]
	0x025DED54 LDR W9, [X0 + 0xE0]
	0x025DED58 LDR X21, [X8 + 0x8]
	0x025DED5C CBNZ W9, 0x25DED64
	0x025DED60 BL 0x1C16DFC
	0x025DED64 MOV X0, X21
	0x025DED68 MOV X1, X31
	0x025DED6C BL 0x338C698
	0x025DED70 CBZ X20, 0x25DEDA4
	0x025DED74 LDR X8, [X20]
	0x025DED78 MOV X1, X0
	0x025DED7C MOV X0, X20
	0x025DED80 LDR X9, [X8 + 0x298]
	0x025DED84 LDR X2, [X8 + 0x2A0]
	0x025DED88 BLR X9
	0x025DED8C TBZ X0, 0x0, 0x25DEDA8
	0x025DED90 MOV X0, X20
	0x025DED94 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8+8]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X19+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+16]
	024 Call List`1<Item<Object, Boolean>>..ctor, X0
	025 Move [X20+80], X21
	026 Move X8, [X19+32]
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X8, [X8+192]
	031 Move X1, [X8+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call Dictionary`2<Object, Boolean>..ctor, X0
	035 Return 

Method: System.Void .ctor(System.Collections.Generic.IDictionary`2<TKey, TValue> input)

Disassembly:
	0x025DED98 LDP X22, X21, [X31 + 0x10]
	0x025DED9C LDR X30, [X31], #0x30
	0x025DEDA0 RET
	0x025DEDA4 BL 0x1C16F20
	0x025DEDA8 LDR X0, [X19 + 0x20]
	0x025DEDAC BL 0x199B99C
	0x025DEDB0 LDR X8, [X0 + 0xC0]
	0x025DEDB4 ADRP X0, 0x1B15000
	0x025DEDB8 LDR X21, [X8 + 0x8]
	0x025DEDBC LDR X0, [X0 + 0x6C0]
	0x025DEDC0 BL 0x1C16D08
	0x025DEDC4 BL 0x19903D0
	0x025DEDC8 MOV X0, X21
	0x025DEDCC MOV X1, X31
	0x025DEDD0 BL 0x338C698
	0x025DEDD4 MOV X21, X0
	0x025DEDD8 ADRP X0, 0x1B3F000
	0x025DEDDC LDR X0, [X0 + 0x230]
	0x025DEDE0 BL 0x1C16D08
	0x025DEDE4 MOV X1, X20
	0x025DEDE8 MOV X2, X21
	0x025DEDEC MOV X3, X31
	0x025DEDF0 BL 0x3227BD4
	0x025DEDF4 MOV X20, X0
	0x025DEDF8 ADRP X0, 0x1B15000
	0x025DEDFC LDR X0, [X0 + 0x7D0]
	0x025DEE00 BL 0x1C16D08
	0x025DEE04 BL 0x1C16F10
	0x025DEE08 MOV X1, X20
	0x025DEE0C MOV X2, X31
	0x025DEE10 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X8, [X8+8]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X0, X8
	021 Call 0x1C17F10
	022 Move X8, [X20+32]
	023 Move X22, X0
	024 Move X8, [X8+192]
	025 Move X1, [X8+16]
	026 Call List`1<Item<Object, Boolean>>..ctor, X0
	027 Move [X21+80], X22
	028 Move X8, [X20+32]
	029 Move X0, X21
	030 Move X1, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X8, [X8+192]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X2, [X8+48]
	037 Move X30, [X31+48]
	038 Call Dictionary`2<Object, Boolean>..ctor, X0, X1
	039 Return 

Method: System.Void OnBeforeSerialize()

Disassembly:
	0x025DEE14 BL 0x33B2C70
	0x025DEE18 MOV X0, X21
	0x025DEE1C MOV X1, X19
	0x025DEE20 BL 0x1C16DEC
	0x025DEE24 STP X30, X19, [X31 - 0x10]!
	0x025DEE28 LDR X8, [X1 + 0x20]
	0x025DEE2C MOV X19, X0
	0x025DEE30 LDRB W9, [X8 + 0x135]
	0x025DEE34 TBNZ X9, 0x0, 0x25DEE40
	0x025DEE38 MOV X0, X8
	0x025DEE3C BL 0x1C5C684
	0x025DEE40 CBZ X19, 0x25DEE5C
	0x025DEE44 LDR X8, [X19]
	0x025DEE48 MOV X0, X19
	0x025DEE4C LDR X2, [X8 + 0x2D8]
	0x025DEE50 LDR X1, [X8 + 0x2E0]
	0x025DEE54 LDP X30, X19, [X31], #0x10
	0x025DEE58 BR X2
	0x025DEE5C BL 0x1C16F20
	0x025DEE60 STR X30, [X31 - 0x10]!
	0x025DEE64 STR X0, [X31 + 0x8]
	0x025DEE68 LDR X0, [X1 + 0x20]
	0x025DEE6C LDRB W8, [X0 + 0x135]
	0x025DEE70 TBNZ X8, 0x0, 0x25DEE78
	0x025DEE74 BL 0x1C5C684
	0x025DEE78 LDR X8, [X0 + 0xC0]
	0x025DEE7C ADD X0, X31, 0x8
	0x025DEE80 LDR X1, [X8 + 0x18]
	0x025DEE84 BL 0x25DECBC
	0x025DEE88 LDR X30, [X31], #0x10
	0x025DEE8C RET
	0x025DEE90 LDR X0, [X0]
	0x025DEE94 MOV X2, X31
	0x025DEE98 B 0x321BA08
	0x025DEE9C STP X30, X21, [X31 - 0x20]!
	0x025DEEA0 STP X20, X19, [X31 + 0x10]
	0x025DEEA4 LDR X8, [X2 + 0x20]
	0x025DEEA8 MOV X20, X2
	0x025DEEAC MOV X21, X1
	0x025DEEB0 MOV X19, X0
	0x025DEEB4 LDRB W9, [X8 + 0x135]
	0x025DEEB8 TBNZ X9, 0x0, 0x25DEEC8
	0x025DEEBC MOV X0, X8
	0x025DEEC0 BL 0x1C5C684
	0x025DEEC4 MOV X8, X0
	0x025DEEC8 LDR X8, [X8 + 0xC0]
	0x025DEECC LDR X0, [X8]
	0x025DEED0 LDRB W8, [X0 + 0x135]
	0x025DEED4 TBNZ X8, 0x0, 0x25DEEDC
	0x025DEED8 BL 0x1C5C684
	0x025DEEDC CBZ X21, 0x25DEEEC
	0x025DEEE0 LDR X8, [X21]
	0x025DEEE4 CMP X8, X0
	0x025DEEE8 B.EQ 0x25DEEFC
	0x025DEEEC LDP X20, X19, [X31 + 0x10]
	0x025DEEF0 MOV W0, W31
	0x025DEEF4 LDP X30, X21, [X31], #0x20
	0x025DEEF8 RET
	0x025DEEFC LDR X0, [X20 + 0x20]
	0x025DEF00 LDRB W8, [X0 + 0x135]
	0x025DEF04 TBNZ X8, 0x0, 0x25DEF0C
	0x025DEF08 BL 0x1C5C684
	0x025DEF0C LDR X8, [X0 + 0xC0]
	0x025DEF10 LDR X1, [X8]
	0x025DEF14 LDRB W8, [X1 + 0x135]
	0x025DEF18 TBNZ X8, 0x0, 0x25DEF28
	0x025DEF1C MOV X0, X1
	0x025DEF20 BL 0x1C5C684
	0x025DEF24 MOV X1, X0
	0x025DEF28 LDR X8, [X21]
	0x025DEF2C LDR X9, [X1 + 0x40]
	0x025DEF30 MOV X0, X21
	0x025DEF34 LDR X8, [X8 + 0x40]
	0x025DEF38 CMP X8, X9
	0x025DEF3C B.NE 0x25DEF74
	0x025DEF40 BL 0x1C16E08
	0x025DEF44 MOV X8, X0
	0x025DEF48 LDR X0, [X20 + 0x20]
	0x025DEF4C LDR X20, [X8]
	0x025DEF50 LDRB W9, [X0 + 0x135]
	0x025DEF54 TBNZ X9, 0x0, 0x25DEF5C
	0x025DEF58 BL 0x1C5C684
	0x025DEF5C LDR X0, [X19]
	0x025DEF60 MOV X1, X20
	0x025DEF64 LDP X20, X19, [X31 + 0x10]
	0x025DEF68 MOV X2, X31
	0x025DEF6C LDP X30, X21, [X31], #0x20
	0x025DEF70 B 0x321BA08
	0x025DEF74 BL 0x1C171E0
	0x025DEF78 LDR X0, [X0]
	0x025DEF7C CBZ X0, 0x25DEF8C
	0x025DEF80 LDR X8, [X0]
	0x025DEF84 LDP X2, X1, [X8 + 0x158]
	0x025DEF88 BR X2
	0x025DEF8C RET
	0x025DEF90 STR X30, [X31 - 0x10]!
	0x025DEF94 LDR X0, [X0]
	0x025DEF98 MOV X1, X31
	0x025DEF9C BL 0x32277A8
	0x025DEFA0 ORN W8, W31, W0, 0x0
	0x025DEFA4 AND W0, W8, 0x1
	0x025DEFA8 LDR X30, [X31], #0x10
	0x025DEFAC RET
	0x025DEFB0 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move [X31+80], X31
	008 Move [X31+48], V0
	009 Move [X31+56], V0
	010 Move X8, [X0+80]
	011 Compare X8, 0
	012 JumpIfEqual {90}
	013 Move W2, [X8+24]
	014 Move W9, [X8+28]
	015 Move X20, X0
	016 Move X19, X1
	017 Add W9, W9, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move [X8+24], W31
	020 Move [X8+28], W9
	021 Move X0, [X8+16]
	022 Move W1, W31
	023 Move X3, X31
	024 Call Array.Clear, X0, X1, X2
	025 Move X8, [X19+32]
	026 Move X0, X20
	027 Move X8, [X8+192]
	028 Move X1, [X8+64]
	029 Add X8, X31, 8
	030 Call Dictionary`2<Object, Boolean>.GetEnumerator, X0
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X8, [X31+40]
	034 Move [X31+48], V0
	035 Move [X31+56], V1
	036 Move [X31+80], X8
	037 Move X8, [X19+32]
	038 Move X8, [X8+192]
	039 Move X1, [X8+160]
	040 Add X0, X31, 48
	041 Call Enumerator<Object, Boolean>.MoveNext, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {74}
	046 Move W8, [X31+72]
	047 Move X0, [X20+80]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {88}
	052 Move X8, [X19+32]
	053 Move W10, [X0+28]
	054 Move X1, [X31+64]
	055 Move X9, [X8+192]
	056 Move X8, [X0+16]
	057 Add W10, W10, 1
	058 Move X9, [X9+152]
	059 Move [X0+28], W10
	060 Compare X8, 0
	061 JumpIfEqual {89}
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Move W11, [X8+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W9, W10, 1
	066 Add X8, X8, X10
	067 Move [X0+24], W9
	068 Move [X8+32], X1
	069 Move [X8+40], X2
	070 Move X8, [X9+32]
	071 Move X8, [X8+192]
	072 Move X3, [X8+112]
	073 Call List`1<Item<Object, Boolean>>.AddWithResize, X0, X1
	074 Move X20, X31
	075 Move X8, [X19+32]
	076 Add X0, X31, 48
	077 Move X8, [X8+192]
	078 Move X1, [X8+168]
	079 Call Enumerator<Object, Boolean>.Dispose, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {91}
	082 Move X20, [X31+112]
	083 Move X19, [X31+120]
	084 Move X30, [X31+96]
	085 Move X21, [X31+104]
	086 Add X31, X31, 128
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Move X0, X20
	092 Call 0x1C17F18
	093 Move X21, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X21
	096 Call 0x3EB2AD0
	097 Move X20, [X0]
	098 Call 0x3EB2AE0
	099 Move X20, X31
	100 Move X21, X0
	101 Move X8, [X19+32]
	102 Move X8, [X8+192]
	103 Move X1, [X8+168]
	104 Add X0, X31, 48
	105 Call Enumerator<Object, Boolean>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X21
	109 Call 0x1D2D690
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void OnAfterDeserialize()

Disassembly:
	0x025DEFB4 CBZ X1, 0x25DEFE0
	0x025DEFB8 LDR X8, [X1]
	0x025DEFBC MOV X19, X0
	0x025DEFC0 MOV X0, X1
	0x025DEFC4 LDR X9, [X8 + 0x2D8]
	0x025DEFC8 LDR X8, [X8 + 0x2E0]
	0x025DEFCC MOV X1, X8
	0x025DEFD0 BLR X9
	0x025DEFD4 STR X0, [X19]
	0x025DEFD8 LDP X30, X19, [X31], #0x10
	0x025DEFDC RET
	0x025DEFE0 BL 0x1C16F20
	0x025DEFE4 STP X30, X21, [X31 - 0x20]!
	0x025DEFE8 STP X20, X19, [X31 + 0x10]
	0x025DEFEC ADRP X21, 0x1DFB000
	0x025DEFF0 ADRP X20, 0x1B1D000
	0x025DEFF4 LDRB W8, [X21 + 0xF90]
	0x025DEFF8 LDR X20, [X20 + 0x5E0]
	0x025DEFFC MOV X19, X0
	0x025DF000 TBNZ X8, 0x0, 0x25DF018
	0x025DF004 ADRP X0, 0x1B1C000
	0x025DF008 LDR X0, [X0 + 0x5E0]
	0x025DF00C BL 0x1C16CF4
	0x025DF010 MOVZ W8, 0x1
	0x025DF014 STRB W8, [X21 + 0xF90]
	0x025DF018 LDR X0, [X20]
	0x025DF01C LDR X19, [X19]
	0x025DF020 LDR W8, [X0 + 0xE0]
	0x025DF024 CBNZ W8, 0x25DF02C
	0x025DF028 BL 0x1C16DFC
	0x025DF02C MOV X0, X19
	0x025DF030 LDP X20, X19, [X31 + 0x10]
	0x025DF034 MOV X1, X31
	0x025DF038 LDP X30, X21, [X31], #0x20
	0x025DF03C B 0x1E33F10
	0x025DF040 STR X30, [X31 - 0x30]!
	0x025DF044 STP X22, X21, [X31 + 0x10]
	0x025DF048 STP X20, X19, [X31 + 0x20]
	0x025DF04C ADRP X22, 0x1DFA000
	0x025DF050 ADRP X21, 0x1B1C000
	0x025DF054 LDRB W8, [X22 + 0xF91]
	0x025DF058 LDR X21, [X21 + 0x5E0]
	0x025DF05C MOV X19, X1
	0x025DF060 MOV X20, X0
	0x025DF064 TBNZ X8, 0x0, 0x25DF088
	0x025DF068 ADRP X0, 0x1B1C000
	0x025DF06C LDR X0, [X0 + 0x5E0]
	0x025DF070 BL 0x1C16CF4
	0x025DF074 ADRP X0, 0x1B14000
	0x025DF078 LDR X0, [X0 + 0x6C0]
	0x025DF07C BL 0x1C16CF4
	0x025DF080 MOVZ W8, 0x1
	0x025DF084 STRB W8, [X22 + 0xF91]
	0x025DF088 LDR X8, [X20]
	0x025DF08C LDR X0, [X21]
	0x025DF090 STR X8, [X31 + 0x8]
	0x025DF094 LDR W8, [X0 + 0xE0]
	0x025DF098 CBNZ W8, 0x25DF0A0
	0x025DF09C BL 0x1C16DFC
	0x025DF0A0 ADRP X21, 0x1B14000
	0x025DF0A4 LDR X21, [X21 + 0x6C0]
	0x025DF0A8 ADD X0, X31, 0x8
	0x025DF0AC MOV X1, X31
	0x025DF0B0 BL 0x1E33AB8
	0x025DF0B4 LDR X8, [X19 + 0x20]
	0x025DF0B8 MOV X20, X0
	0x025DF0BC LDRB W9, [X8 + 0x135]
	0x025DF0C0 TBNZ X9, 0x0, 0x25DF0D0
	0x025DF0C4 MOV X0, X8
	0x025DF0C8 BL 0x1C5C684
	0x025DF0CC MOV X8, X0
	0x025DF0D0 LDR X0, [X21]
	0x025DF0D4 LDR X8, [X8 + 0xC0]
	0x025DF0D8 LDR W9, [X0 + 0xE0]
	0x025DF0DC LDR X21, [X8 + 0x8]
	0x025DF0E0 CBNZ W9, 0x25DF0E8
	0x025DF0E4 BL 0x1C16DFC
	0x025DF0E8 MOV X0, X21
	0x025DF0EC MOV X1, X31
	0x025DF0F0 BL 0x338C698
	0x025DF0F4 CBZ X20, 0x25DF128
	0x025DF0F8 LDR X8, [X20]
	0x025DF0FC MOV X1, X0
	0x025DF100 MOV X0, X20
	0x025DF104 LDR X9, [X8 + 0x298]
	0x025DF108 LDR X2, [X8 + 0x2A0]
	0x025DF10C BLR X9
	0x025DF110 TBZ X0, 0x0, 0x25DF12C
	0x025DF114 MOV X0, X20
	0x025DF118 LDP X20, X19, [X31 + 0x20]
	0x025DF11C LDP X22, X21, [X31 + 0x10]
	0x025DF120 LDR X30, [X31], #0x30
	0x025DF124 RET
	0x025DF128 BL 0x1C16F20
	0x025DF12C LDR X0, [X19 + 0x20]
	0x025DF130 BL 0x199B99C
	0x025DF134 LDR X8, [X0 + 0xC0]
	0x025DF138 ADRP X0, 0x1B14000
	0x025DF13C LDR X21, [X8 + 0x8]
	0x025DF140 LDR X0, [X0 + 0x6C0]
	0x025DF144 BL 0x1C16D08
	0x025DF148 BL 0x19903D0
	0x025DF14C MOV X0, X21
	0x025DF150 MOV X1, X31
	0x025DF154 BL 0x338C698
	0x025DF158 MOV X21, X0
	0x025DF15C ADRP X0, 0x1B3E000
	0x025DF160 LDR X0, [X0 + 0x230]
	0x025DF164 BL 0x1C16D08
	0x025DF168 MOV X1, X20
	0x025DF16C MOV X2, X21
	0x025DF170 MOV X3, X31
	0x025DF174 BL 0x3227BD4
	0x025DF178 MOV X20, X0
	0x025DF17C ADRP X0, 0x1B14000
	0x025DF180 LDR X0, [X0 + 0x7D0]
	0x025DF184 BL 0x1C16D08
	0x025DF188 BL 0x1C16F10
	0x025DF18C MOV X1, X20
	0x025DF190 MOV X2, X31
	0x025DF194 MOV X21, X0
	0x025DF198 BL 0x33B2C70
	0x025DF19C MOV X0, X21
	0x025DF1A0 MOV X1, X19
	0x025DF1A4 BL 0x1C16DEC
	0x025DF1A8 STP X30, X19, [X31 - 0x10]!
	0x025DF1AC LDR X8, [X1 + 0x20]
	0x025DF1B0 MOV X19, X0
	0x025DF1B4 LDRB W9, [X8 + 0x135]
	0x025DF1B8 TBNZ X9, 0x0, 0x25DF1C4
	0x025DF1BC MOV X0, X8
	0x025DF1C0 BL 0x1C5C684
	0x025DF1C4 CBZ X19, 0x25DF1E0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x1DFC000
	011 Move W8, [X21+3980]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x1B16000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x1B40000
	022 Move X0, [X0+544]
	023 Call 0x1C17CF4
	024 Move X0, 0x1B40000
	025 Move X0, [X0+552]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3980], W8
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+32], V0
	031 Move [X31+40], V0
	032 Compare X20, 0
	033 JumpIfEqual {128}
	034 Move X8, [X19+32]
	035 Move X0, X20
	036 Move X8, [X8+192]
	037 Move X1, [X8+176]
	038 Call Dictionary`2<Object, Boolean>.Clear, X0
	039 Move X0, [X20+80]
	040 Compare X0, 0
	041 JumpIfEqual {128}
	042 Move X8, [X19+32]
	043 Move X22, 0x1B3F000
	044 Move X23, 0x1B3F000
	045 Move X24, 0x1B15000
	046 Move X8, [X8+192]
	047 Move X1, [X8+184]
	048 Move X22, [X22+544]
	049 Move X23, [X23+552]
	050 Move X24, [X24+2600]
	051 Add X8, X31, 0
	052 Call List`1<Item<Object, Boolean>>.GetEnumerator, X0
	053 Move V0, [X31]
	054 Move V1, [X31+16]
	055 Move [X31+32], V0
	056 Move [X31+40], V1
	057 Move X8, [X19+32]
	058 Move X8, [X8+192]
	059 Move X1, [X8+232]
	060 Add X0, X31, 32
	061 Call Enumerator<Item<Object, Boolean>>.MoveNext, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {109}
	066 Move X8, [X19+32]
	067 Move X21, [X31+48]
	068 Move X25, [X31+56]
	069 Move X8, [X8+192]
	070 Move X2, [X8+216]
	071 Move X0, X20
	072 Move X1, X21
	073 Call Dictionary`2<Object, Boolean>.ContainsKey, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {102}
	078 Move X0, X20
	079 Move X1, X31
	080 Call "il2cpp_vm_object_is_inst", X0
	081 Compare X0, 0
	082 JumpIfEqual {127}
	083 Move X8, [X0]
	084 Move X9, [X8+424]
	085 Move X1, [X8+432]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X2, X0
	088 Move X0, [X22]
	089 Move X3, [X23]
	090 Move X1, X21
	091 Move X4, X31
	092 Call String.Format, X0, X1, X2, X3
	093 Move X21, X0
	094 Move X0, [X24]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X31
	101 Call Debug.LogWarning, X0
	102 Move X8, [X19+32]
	103 And W2, W25, 1
	104 Move X8, [X8+192]
	105 Move X3, [X8+224]
	106 Move X0, X20
	107 Move X1, X21
	108 Call Dictionary`2<Object, Boolean>.Add, X0, X1, X2
	109 Move X21, X31
	110 Move X8, [X19+32]
	111 Add X0, X31, 32
	112 Move X8, [X8+192]
	113 Move X1, [X8+240]
	114 Call Enumerator<Item<Object, Boolean>>.Dispose, X0
	115 Compare X21, 0
	116 JumpIfNotEqual {129}
	117 Move X20, [X31+112]
	118 Move X19, [X31+120]
	119 Move X22, [X31+96]
	120 Move X21, [X31+104]
	121 Move X24, [X31+80]
	122 Move X23, [X31+88]
	123 Move X30, [X31+64]
	124 Move X25, [X31+72]
	125 Add X31, X31, 128
	126 Return 
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Move X0, X21
	130 Call 0x1C17F18
	131 Move X20, X0
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X0, X20
	134 Call 0x3EB2AD0
	135 Move X21, [X0]
	136 Call 0x3EB2AE0
	137 Move X21, X31
	138 Move X20, X0
	139 Move X8, [X19+32]
	140 Move X8, [X8+192]
	141 Move X1, [X8+240]
	142 Add X0, X31, 32
	143 Call Enumerator<Item<Object, Boolean>>.Dispose, X0
	144 Compare X21, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X20
	147 Call 0x1D2D690
	148 Move X0, X21
	149 Call 0x1C17F18
	150 Call 0x1991590

