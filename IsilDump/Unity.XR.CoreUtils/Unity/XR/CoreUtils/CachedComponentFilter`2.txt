Type: Unity.XR.CoreUtils.CachedComponentFilter`2

Method: System.Void .ctor(TRootType componentRoot, Unity.XR.CoreUtils.CachedSearchType cachedSearchType = 3, System.Boolean includeDisabled = True)

Disassembly:
	0x028F01D4 MOV X1, X20
	0x028F01D8 MOV X2, X31
	0x028F01DC BL 0x3C3883C
	0x028F01E0 TBNZ X0, 0x0, 0x28F0164
	0x028F01E4 LDR X8, [X19 + 0x20]
	0x028F01E8 LDR X8, [X8 + 0xC0]
	0x028F01EC LDR X1, [X8 + 0x118]
	0x028F01F0 MOV X0, X22
	0x028F01F4 BL 0x21A3F50
	0x028F01F8 MOV X23, X0
	0x028F01FC LDR X0, [X24]
	0x028F0200 LDR W8, [X0 + 0xE0]
	0x028F0204 CBNZ W8, 0x28F020C
	0x028F0208 BL 0x1C16DFC
	0x028F020C MOV X0, X23
	0x028F0210 MOV X1, X20
	0x028F0214 MOV X2, X31
	0x028F0218 BL 0x3C354F8
	0x028F021C TBNZ X0, 0x0, 0x28F0164
	0x028F0220 LDR X0, [X21 + 0x10]
	0x028F0224 CBZ X0, 0x28F0878
	0x028F0228 LDR X8, [X19 + 0x20]
	0x028F022C LDR W10, [X0 + 0x1C]
	0x028F0230 LDR X9, [X8 + 0xC0]
	0x028F0234 LDR X8, [X0 + 0x10]
	0x028F0238 ADD W10, W10, 0x1
	0x028F023C LDR X9, [X9 + 0x110]
	0x028F0240 STR W10, [X0 + 0x1C]
	0x028F0244 CBZ X8, 0x28F087C
	0x028F0248 LDRSW X10, [X0 + 0x18]
	0x028F024C LDR W11, [X8 + 0x18]
	0x028F0250 CMP W10, W11
	0x028F0254 B.CS 0x28F026C
	0x028F0258 ADD W9, W10, 0x1
	0x028F025C ADD X8, X8, X10, 0x3, LSL
	0x028F0260 STR W9, [X0 + 0x18]
	0x028F0264 STR X22, [X8 + 0x20]
	0x028F0268 B 0x28F0164
	0x028F026C LDR X8, [X9 + 0x20]
	0x028F0270 LDR X8, [X8 + 0xC0]
	0x028F0274 LDR X2, [X8 + 0x70]
	0x028F0278 MOV X1, X22
	0x028F027C BL 0x301BF90
	0x028F0280 B 0x28F0164
	0x028F0284 MOV X23, X31
	0x028F0288 MOVZ W22, 0x5
	0x028F028C LDR X8, [X19 + 0x20]
	0x028F0290 ADD X0, X31, 0x40
	0x028F0294 LDR X8, [X8 + 0xC0]
	0x028F0298 LDR X1, [X8 + 0xC8]
	0x028F029C BL 0x2BC434C
	0x028F02A0 CBNZ X23, 0x28F0894
	0x028F02A4 CMP W22, 0x5
	0x028F02A8 B.EQ 0x28F02B0
	0x028F02AC CBNZ W22, 0x28F0850
	0x028F02B0 LDR X8, [X19 + 0x20]
	0x028F02B4 LDR X8, [X8 + 0xC0]
	0x028F02B8 LDR X0, [X8 + 0x20]
	0x028F02BC LDRB W8, [X0 + 0x135]
	0x028F02C0 TBNZ X8, 0x0, 0x28F02C8
	0x028F02C4 BL 0x1C5C684
	0x028F02C8 LDR W8, [X0 + 0xE0]
	0x028F02CC CBNZ W8, 0x28F02D4
	0x028F02D0 BL 0x1C16DFC
	0x028F02D4 LDR X8, [X19 + 0x20]
	0x028F02D8 LDR X8, [X8 + 0xC0]
	0x028F02DC LDR X0, [X8 + 0x20]
	0x028F02E0 LDRB W8, [X0 + 0x135]
	0x028F02E4 TBNZ X8, 0x0, 0x28F02EC
	0x028F02E8 BL 0x1C5C684
	0x028F02EC LDR X8, [X0 + 0xB8]
	0x028F02F0 LDR X0, [X8 + 0x8]
	0x028F02F4 CBZ X0, 0x28F088C
	0x028F02F8 LDR X8, [X19 + 0x20]
	0x028F02FC LDR X8, [X8 + 0xC0]
	0x028F0300 LDR X1, [X8 + 0xD0]
	0x028F0304 ADD X8, X31, 0x8
	0x028F0308 BL 0x301CB58
	0x028F030C LDUR V0, [X31 + 0x8]
	0x028F0310 LDR X8, [X31 + 0x18]
	0x028F0314 STR V0, [X31 + 0x2]
	0x028F0318 STR X8, [X31 + 0x30]
	0x028F031C LDR X8, [X19 + 0x20]
	0x028F0320 LDR X8, [X8 + 0xC0]
	0x028F0324 LDR X1, [X8 + 0x100]
	0x028F0328 ADD X0, X31, 0x20
	0x028F032C BL 0x2BC4350
	0x028F0330 TBZ X0, 0x0, 0x28F0470
	0x028F0334 LDR X22, [X31 + 0x30]
	0x028F0338 CBZ X22, 0x28F0874
	0x028F033C LDR X9, [X22]
	0x028F0340 LDR X8, [X25]
	0x028F0344 LDRB W11, [X9 + 0x130]
	0x028F0348 LDRB W10, [X8 + 0x130]
	0x028F034C CMP W11, W10
	0x028F0350 B.CC 0x28F0874
	0x028F0354 LDR X9, [X9 + 0xC8]
	0x028F0358 ADD X9, X9, X10, 0x3, LSL
	0x028F035C LDUR X9, [X9 - 0x8]
	0x028F0360 CMP X9, X8
	0x028F0364 B.NE 0x28F0874
	0x028F0368 MOV X0, X22
	0x028F036C MOV X1, X31
	0x028F0370 BL 0x3C32E90
	0x028F0374 MOV X23, X0
	0x028F0378 LDR X0, [X24]
	0x028F037C LDR W8, [X0 + 0xE0]
	0x028F0380 CBNZ W8, 0x28F0388
	0x028F0384 BL 0x1C16DFC
	0x028F0388 MOV X0, X23
	0x028F038C MOV X1, X20
	0x028F0390 MOV X2, X31
	0x028F0394 BL 0x3C3883C
	0x028F0398 TBNZ X0, 0x0, 0x28F031C
	0x028F039C LDR X8, [X19 + 0x20]
	0x028F03A0 LDR X8, [X8 + 0xC0]
	0x028F03A4 LDR X1, [X8 + 0x118]
	0x028F03A8 MOV X0, X22
	0x028F03AC BL 0x21A3F50
	0x028F03B0 MOV X23, X0
	0x028F03B4 LDR X0, [X24]
	0x028F03B8 LDR W8, [X0 + 0xE0]
	0x028F03BC CBNZ W8, 0x28F03C4
	0x028F03C0 BL 0x1C16DFC
	0x028F03C4 MOV X0, X23
	0x028F03C8 MOV X1, X20
	0x028F03CC MOV X2, X31
	0x028F03D0 BL 0x3C354F8
	0x028F03D4 TBNZ X0, 0x0, 0x28F031C
	0x028F03D8 LDR X8, [X19 + 0x20]
	0x028F03DC LDR X23, [X21 + 0x10]
	0x028F03E0 LDR X8, [X8 + 0xC0]
	0x028F03E4 LDR X1, [X8 + 0xF0]
	0x028F03E8 LDRB W8, [X1 + 0x135]
	0x028F03EC TBNZ X8, 0x0, 0x28F03FC
	0x028F03F0 MOV X0, X1
	0x028F03F4 BL 0x1C5C684
	0x028F03F8 MOV X1, X0
	0x028F03FC LDR X8, [X22]
	0x028F0400 LDRH W9, [X8 + 0x12E]
	0x028F0404 CBZ X9, 0x28F0428
	0x028F0408 LDR X10, [X8 + 0xB0]
	0x028F040C ADD X10, X10, 0x8
	0x028F0410 LDUR X11, [X10 - 0x8]
	0x028F0414 CMP X11, X1
	0x028F0418 B.EQ 0x28F0438
	0x028F041C SUBS X9, X9, 0x1
	0x028F0420 ADD X10, X10, 0x10
	0x028F0424 B.NE 0x28F0410
	0x028F0428 MOV X0, X22
	0x028F042C MOV W2, W31
	0x028F0430 BL 0x1C5C788
	0x028F0434 B 0x28F0444
	0x028F0438 LDRSW X9, [X10]
	0x028F043C ADD X8, X8, X9, 0x4, LSL
	0x028F0440 ADD X0, X8, 0x138
	0x028F0444 LDP X8, X1, [X0]
	0x028F0448 MOV X0, X22
	0x028F044C BLR X8
	0x028F0450 MOV X1, X0
	0x028F0454 CBZ X23, 0x28F0888
	0x028F0458 LDR X8, [X19 + 0x20]
	0x028F045C LDR X8, [X8 + 0xC0]
	0x028F0460 LDR X2, [X8 + 0x88]
	0x028F0464 MOV X0, X23
	0x028F0468 BL 0x301C194
	0x028F046C B 0x28F031C
	0x028F0470 MOV X23, X31
	0x028F0474 MOV W22, W31
	0x028F0478 LDR X8, [X19 + 0x20]
	0x028F047C ADD X0, X31, 0x20
	0x028F0480 LDR X8, [X8 + 0xC0]
	0x028F0484 LDR X1, [X8 + 0x108]
	0x028F0488 BL 0x2BC434C
	0x028F048C CBNZ X23, 0x28F0894
	0x028F0490 CBZ W22, 0x28F0850
	0x028F0494 LDR X8, [X19 + 0x20]
	0x028F0498 LDR X8, [X8 + 0xC0]
	0x028F049C LDR X0, [X8 + 0x20]
	0x028F04A0 LDRB W8, [X0 + 0x135]
	0x028F04A4 TBNZ X8, 0x0, 0x28F04AC
	0x028F04A8 BL 0x1C5C684
	0x028F04AC LDR W8, [X0 + 0xE0]
	0x028F04B0 CBNZ W8, 0x28F04B8
	0x028F04B4 BL 0x1C16DFC
	0x028F04B8 LDR X8, [X19 + 0x20]
	0x028F04BC LDR X8, [X8 + 0xC0]
	0x028F04C0 LDR X0, [X8 + 0x20]
	0x028F04C4 LDRB W8, [X0 + 0x135]
	0x028F04C8 TBNZ X8, 0x0, 0x28F04D0
	0x028F04CC BL 0x1C5C684
	0x028F04D0 LDR X8, [X0 + 0xB8]
	0x028F04D4 LDR X0, [X8]
	0x028F04D8 CBZ X0, 0x28F088C
	0x028F04DC LDR X8, [X19 + 0x20]
	0x028F04E0 ADRP X25, 0x182A000
	0x028F04E4 LDR X8, [X8 + 0xC0]
	0x028F04E8 LDR X1, [X8 + 0x98]
	0x028F04EC LDR X25, [X25 + 0x6E0]
	0x028F04F0 ADD X8, X31, 0x8
	0x028F04F4 BL 0x301CB58
	0x028F04F8 LDUR V0, [X31 + 0x8]
	0x028F04FC LDR X8, [X31 + 0x18]
	0x028F0500 STR V0, [X31 + 0x4]
	0x028F0504 STR X8, [X31 + 0x50]
	0x028F0508 LDR X8, [X19 + 0x20]
	0x028F050C LDR X8, [X8 + 0xC0]
	0x028F0510 LDR X1, [X8 + 0xC0]
	0x028F0514 ADD X0, X31, 0x40
	0x028F0518 BL 0x2BC4350
	0x028F051C TBZ X0, 0x0, 0x28F0638
	0x028F0520 LDR X22, [X31 + 0x50]
	0x028F0524 CBZ X22, 0x28F0868
	0x028F0528 LDR X9, [X22]
	0x028F052C LDR X8, [X25]
	0x028F0530 LDRB W11, [X9 + 0x130]
	0x028F0534 LDRB W10, [X8 + 0x130]
	0x028F0538 CMP W11, W10
	0x028F053C B.CC 0x28F0868
	0x028F0540 LDR X9, [X9 + 0xC8]
	0x028F0544 ADD X9, X9, X10, 0x3, LSL
	0x028F0548 LDUR X9, [X9 - 0x8]
	0x028F054C CMP X9, X8
	0x028F0550 B.NE 0x28F0868
	0x028F0554 MOV X0, X22
	0x028F0558 MOV X1, X31
	0x028F055C BL 0x3C323D4
	0x028F0560 TBZ X0, 0x0, 0x28F0508
	0x028F0564 MOV X0, X22
	0x028F0568 MOV X1, X31
	0x028F056C BL 0x3C32E90
	0x028F0570 MOV X23, X0
	0x028F0574 LDR X0, [X24]
	0x028F0578 LDR W8, [X0 + 0xE0]
	0x028F057C CBNZ W8, 0x28F0584
	0x028F0580 BL 0x1C16DFC
	0x028F0584 MOV X0, X23
	0x028F0588 MOV X1, X20
	0x028F058C MOV X2, X31
	0x028F0590 BL 0x3C3883C
	0x028F0594 TBNZ X0, 0x0, 0x28F0508
	0x028F0598 LDR X8, [X19 + 0x20]
	0x028F059C LDR X8, [X8 + 0xC0]
	0x028F05A0 LDR X1, [X8 + 0x118]
	0x028F05A4 MOV X0, X22
	0x028F05A8 BL 0x21A3F50
	0x028F05AC MOV X23, X0
	0x028F05B0 LDR X0, [X24]
	0x028F05B4 LDR W8, [X0 + 0xE0]
	0x028F05B8 CBNZ W8, 0x28F05C0
	0x028F05BC BL 0x1C16DFC
	0x028F05C0 MOV X0, X23
	0x028F05C4 MOV X1, X20
	0x028F05C8 MOV X2, X31
	0x028F05CC BL 0x3C354F8
	0x028F05D0 TBNZ X0, 0x0, 0x28F0508
	0x028F05D4 LDR X0, [X21 + 0x10]
	0x028F05D8 CBZ X0, 0x28F0884
	0x028F05DC LDR X8, [X19 + 0x20]
	0x028F05E0 LDR W10, [X0 + 0x1C]
	0x028F05E4 LDR X9, [X8 + 0xC0]
	0x028F05E8 LDR X8, [X0 + 0x10]
	0x028F05EC ADD W10, W10, 0x1
	0x028F05F0 LDR X9, [X9 + 0x110]
	0x028F05F4 STR W10, [X0 + 0x1C]
	0x028F05F8 CBZ X8, 0x28F0880
	0x028F05FC LDRSW X10, [X0 + 0x18]
	0x028F0600 LDR W11, [X8 + 0x18]
	0x028F0604 CMP W10, W11
	0x028F0608 B.CS 0x28F0620
	0x028F060C ADD W9, W10, 0x1
	0x028F0610 ADD X8, X8, X10, 0x3, LSL
	0x028F0614 STR W9, [X0 + 0x18]
	0x028F0618 STR X22, [X8 + 0x20]
	0x028F061C B 0x28F0508
	0x028F0620 LDR X8, [X9 + 0x20]
	0x028F0624 LDR X8, [X8 + 0xC0]
	0x028F0628 LDR X2, [X8 + 0x70]
	0x028F062C MOV X1, X22
	0x028F0630 BL 0x301BF90
	0x028F0634 B 0x28F0508
	0x028F0638 MOV X23, X31
	0x028F063C MOVZ W22, 0xB
	0x028F0640 LDR X8, [X19 + 0x20]
	0x028F0644 ADD X0, X31, 0x40
	0x028F0648 LDR X8, [X8 + 0xC0]
	0x028F064C LDR X1, [X8 + 0xC8]
	0x028F0650 BL 0x2BC434C
	0x028F0654 CBNZ X23, 0x28F0894
	0x028F0658 CMP W22, 0xB
	0x028F065C B.EQ 0x28F0664
	0x028F0660 CBNZ W22, 0x28F0850
	0x028F0664 LDR X8, [X19 + 0x20]
	0x028F0668 LDR X8, [X8 + 0xC0]
	0x028F066C LDR X0, [X8 + 0x20]
	0x028F0670 LDRB W8, [X0 + 0x135]
	0x028F0674 TBNZ X8, 0x0, 0x28F067C
	0x028F0678 BL 0x1C5C684
	0x028F067C LDR W8, [X0 + 0xE0]
	0x028F0680 CBNZ W8, 0x28F0688
	0x028F0684 BL 0x1C16DFC
	0x028F0688 LDR X8, [X19 + 0x20]
	0x028F068C LDR X8, [X8 + 0xC0]
	0x028F0690 LDR X0, [X8 + 0x20]
	0x028F0694 LDRB W8, [X0 + 0x135]
	0x028F0698 TBNZ X8, 0x0, 0x28F06A0
	0x028F069C BL 0x1C5C684
	0x028F06A0 LDR X8, [X0 + 0xB8]
	0x028F06A4 LDR X0, [X8 + 0x8]
	0x028F06A8 CBZ X0, 0x28F088C
	0x028F06AC LDR X8, [X19 + 0x20]
	0x028F06B0 LDR X8, [X8 + 0xC0]
	0x028F06B4 LDR X1, [X8 + 0xD0]
	0x028F06B8 ADD X8, X31, 0x8
	0x028F06BC BL 0x301CB58
	0x028F06C0 LDUR V0, [X31 + 0x8]
	0x028F06C4 LDR X8, [X31 + 0x18]
	0x028F06C8 STR V0, [X31 + 0x2]
	0x028F06CC STR X8, [X31 + 0x30]
	0x028F06D0 LDR X8, [X19 + 0x20]
	0x028F06D4 LDR X8, [X8 + 0xC0]
	0x028F06D8 LDR X1, [X8 + 0x100]
	0x028F06DC ADD X0, X31, 0x20
	0x028F06E0 BL 0x2BC4350
	0x028F06E4 TBZ X0, 0x0, 0x28F0834
	0x028F06E8 LDR X22, [X31 + 0x30]
	0x028F06EC CBZ X22, 0x28F0870
	0x028F06F0 LDR X9, [X22]
	0x028F06F4 LDR X8, [X25]
	0x028F06F8 LDRB W11, [X9 + 0x130]
	0x028F06FC LDRB W10, [X8 + 0x130]
	0x028F0700 CMP W11, W10
	0x028F0704 B.CC 0x28F0870
	0x028F0708 LDR X9, [X9 + 0xC8]
	0x028F070C ADD X9, X9, X10, 0x3, LSL
	0x028F0710 LDUR X9, [X9 - 0x8]
	0x028F0714 CMP X9, X8
	0x028F0718 B.NE 0x28F0870
	0x028F071C MOV X0, X22
	0x028F0720 MOV X1, X31
	0x028F0724 BL 0x3C323D4
	0x028F0728 TBZ X0, 0x0, 0x28F06D0
	0x028F072C MOV X0, X22
	0x028F0730 MOV X1, X31
	0x028F0734 BL 0x3C32E90
	0x028F0738 MOV X23, X0
	0x028F073C LDR X0, [X24]
	0x028F0740 LDR W8, [X0 + 0xE0]
	0x028F0744 CBNZ W8, 0x28F074C
	0x028F0748 BL 0x1C16DFC
	0x028F074C MOV X0, X23
	0x028F0750 MOV X1, X20
	0x028F0754 MOV X2, X31
	0x028F0758 BL 0x3C3883C
	0x028F075C TBNZ X0, 0x0, 0x28F06D0
	0x028F0760 LDR X8, [X19 + 0x20]
	0x028F0764 LDR X8, [X8 + 0xC0]
	0x028F0768 LDR X1, [X8 + 0x118]
	0x028F076C MOV X0, X22
	0x028F0770 BL 0x21A3F50
	0x028F0774 MOV X23, X0
	0x028F0778 LDR X0, [X24]
	0x028F077C LDR W8, [X0 + 0xE0]
	0x028F0780 CBNZ W8, 0x28F0788
	0x028F0784 BL 0x1C16DFC
	0x028F0788 MOV X0, X23
	0x028F078C MOV X1, X20
	0x028F0790 MOV X2, X31
	0x028F0794 BL 0x3C354F8
	0x028F0798 TBNZ X0, 0x0, 0x28F06D0
	0x028F079C LDR X8, [X19 + 0x20]
	0x028F07A0 LDR X23, [X21 + 0x10]
	0x028F07A4 LDR X8, [X8 + 0xC0]
	0x028F07A8 LDR X1, [X8 + 0xF0]
	0x028F07AC LDRB W8, [X1 + 0x135]
	0x028F07B0 TBNZ X8, 0x0, 0x28F07C0
	0x028F07B4 MOV X0, X1
	0x028F07B8 BL 0x1C5C684
	0x028F07BC MOV X1, X0
	0x028F07C0 LDR X8, [X22]
	0x028F07C4 LDRH W9, [X8 + 0x12E]
	0x028F07C8 CBZ X9, 0x28F07EC
	0x028F07CC LDR X10, [X8 + 0xB0]
	0x028F07D0 ADD X10, X10, 0x8
	0x028F07D4 LDUR X11, [X10 - 0x8]
	0x028F07D8 CMP X11, X1
	0x028F07DC B.EQ 0x28F07FC
	0x028F07E0 SUBS X9, X9, 0x1
	0x028F07E4 ADD X10, X10, 0x10
	0x028F07E8 B.NE 0x28F07D4
	0x028F07EC MOV X0, X22
	0x028F07F0 MOV W2, W31
	0x028F07F4 BL 0x1C5C788
	0x028F07F8 B 0x28F0808
	0x028F07FC LDRSW X9, [X10]
	0x028F0800 ADD X8, X8, X9, 0x4, LSL
	0x028F0804 ADD X0, X8, 0x138
	0x028F0808 LDP X8, X1, [X0]
	0x028F080C MOV X0, X22
	0x028F0810 BLR X8
	0x028F0814 MOV X1, X0
	0x028F0818 CBZ X23, 0x28F0890
	0x028F081C LDR X8, [X19 + 0x20]
	0x028F0820 LDR X8, [X8 + 0xC0]
	0x028F0824 LDR X2, [X8 + 0x88]
	0x028F0828 MOV X0, X23
	0x028F082C BL 0x301C194
	0x028F0830 B 0x28F06D0
	0x028F0834 MOV X20, X31
	0x028F0838 LDR X8, [X19 + 0x20]
	0x028F083C ADD X0, X31, 0x20
	0x028F0840 LDR X8, [X8 + 0xC0]
	0x028F0844 LDR X1, [X8 + 0x108]
	0x028F0848 BL 0x2BC434C
	0x028F084C CBNZ X20, 0x28F089C
	0x028F0850 LDP X20, X19, [X31 + 0x90]
	0x028F0854 LDP X22, X21, [X31 + 0x80]
	0x028F0858 LDP X24, X23, [X31 + 0x70]
	0x028F085C LDP X30, X25, [X31 + 0x60]
	0x028F0860 ADD X31, X31, 0xA0
	0x028F0864 RET
	0x028F0868 BL 0x1C16F20
	0x028F086C BL 0x1C16F20
	0x028F0870 BL 0x1C16F20
	0x028F0874 BL 0x1C16F20
	0x028F0878 BL 0x1C16F20
	0x028F087C BL 0x1C16F20
	0x028F0880 BL 0x1C16F20
	0x028F0884 BL 0x1C16F20
	0x028F0888 BL 0x1C16F20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x1AEB000
	011 Move W8, [X24+3409]
	012 Move X19, X4
	013 Move W20, W3
	014 Move W23, W2
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x1804000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x1804000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0x1804000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x1806000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X24+3409], W8
	035 Move X0, X22
	036 Move X1, X31
	037 Call Object..ctor, X0
	038 Add X19, X19, 32
	039 Move X8, [X19]
	040 Move X8, [X8+192]
	041 Move X0, [X8+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X8, [X19]
	053 Move X8, [X8+192]
	054 Move X0, [X8]
	055 Call 0x28F91C4
	056 Move [X22+16], X0
	057 Move X8, [X19]
	058 Move X8, [X8+192]
	059 Move X0, [X8+32]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X8, [X19]
	071 Move X8, [X8+192]
	072 Move X0, [X8+32]
	073 Move W8, [X0+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X8, [X0+184]
	080 Move X8, [X8]
	081 Compare X8, 0
	082 JumpIfEqual {414}
	083 Move W2, [X8+24]
	084 Move W9, [X8+28]
	085 Add W9, W9, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X8+24], W31
	088 Move [X8+28], W9
	089 Move X0, [X8+16]
	090 Move W1, W31
	091 Move X3, X31
	092 Call Array.Clear, X0, X1, X2
	093 Move X8, [X19]
	094 Move X8, [X8+192]
	095 Move X0, [X8+32]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X8, [X0+184]
	103 Move X8, [X8+8]
	104 Compare X8, 0
	105 JumpIfEqual {414}
	106 Move W2, [X8+24]
	107 Move W9, [X8+28]
	108 Add W9, W9, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X8+24], W31
	111 Move [X8+28], W9
	112 Move X0, [X8+16]
	113 Move W1, W31
	114 Move X3, X31
	115 Call Array.Clear, X0, X1, X2
	116 Move TEMP, X23
	117 And TEMP, TEMP, 2
	118 Compare TEMP, 2
	119 JumpIfNotEqual {173}
	120 Move X8, [X19]
	121 Move X8, [X8+192]
	122 Move X0, [X8+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, [X19]
	134 Move X8, [X8+192]
	135 Move X0, [X8+32]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Compare X21, 0
	143 JumpIfEqual {414}
	144 Move X8, [X19]
	145 Move X9, [X0+184]
	146 Move X0, X21
	147 Move X8, [X8+192]
	148 Move X1, [X9]
	149 Move X2, [X8+72]
	150 Call 0x21A543C, X0, X1
	151 Move X8, [X19]
	152 Move X8, [X8+192]
	153 Move X0, [X8+32]
	154 Move W9, [X0+309]
	155 Move TEMP, X9
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {162}
	159 Call 0x1C5D684
	160 Move X8, [X19]
	161 Move X8, [X8+192]
	162 Move X9, [X0+184]
	163 Move X2, [X8+80]
	164 Move X0, X21
	165 Move X1, [X9+8]
	166 Call 0x21A543C, X0, X1
	167 Move X8, [X19]
	168 And W1, W20, 1
	169 Move X0, X22
	170 Move X8, [X8+192]
	171 Move X2, [X8+88]
	172 Call 0x28F09C8, X0, X1
	173 Move TEMP, X23
	174 And TEMP, TEMP, 4
	175 Compare TEMP, 4
	176 JumpIfEqual {310}
	177 Move TEMP, X23
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {447}
	181 Compare X21, 0
	182 JumpIfEqual {414}
	183 Move X0, X21
	184 Move X1, X31
	185 Call Component.get_transform, X0
	186 Compare X0, 0
	187 JumpIfEqual {414}
	188 Move X1, X31
	189 Call Transform.GetEnumerator, X0
	190 Move X23, X0
	191 Compare X0, 0
	192 JumpIfEqual {460}
	193 Move X25, 0x1804000
	194 Move X26, 0x1806000
	195 Move X25, [X25+3608]
	196 Move X26, [X26+1592]
	197 Move X8, [X23]
	198 Move X1, [X25]
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Compare X9, 0
	201 JumpIfEqual {208}
	202 Move X10, [X8+176]
	203 Add X10, X10, 8
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Subtract X9, X9, 1
	207 Add X10, X10, 16
	208 Move X0, X23
	209 Move W2, W31
	210 Call 0x1C5D788
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Add X8, X8, X9
	213 Add X0, X8, 312
	214 Move X8, [X0]
	215 Move X1, [X0+8]
	216 Move X0, X23
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {415}
	222 Move X8, [X23]
	223 Move X1, [X25]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move W2, 1
	234 Move X0, X23
	235 Call 0x1C5D788
	236 Move W9, [X10]
	237 Add W9, W9, 1
	238 Add X8, X8, W9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X23
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X24, X0
	245 Compare X0, 0
	246 JumpIfEqual {256}
	247 Move X8, [X24]
	248 Move X1, [X26]
	249 Move W10, [X8+304]
	250 Move W9, [X1+304]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X8, [X8+200]
	253 Add X8, X8, X9
	254 NotImplemented "Instruction LDUR not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X8, [X19]
	257 Move X8, [X8+192]
	258 Move X0, [X8+32]
	259 Move W8, [X0+309]
	260 Move TEMP, X8
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfEqual {265}
	264 Call 0x1C5D684
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X8, [X19]
	270 Move X8, [X8+192]
	271 Move X0, [X8+32]
	272 Move W8, [X0+309]
	273 Move TEMP, X8
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfEqual {278}
	277 Call 0x1C5D684
	278 Compare X24, 0
	279 JumpIfEqual {459}
	280 Move X8, [X19]
	281 Move X9, [X0+184]
	282 Move X8, [X8+192]
	283 Move X1, [X9]
	284 Move X2, [X8+104]
	285 Move X0, X24
	286 Call 0x21A5608, X0, X1
	287 Move X8, [X19]
	288 Move X8, [X8+192]
	289 Move X0, [X8+32]
	290 Move W9, [X0+309]
	291 Move TEMP, X9
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfEqual {298}
	295 Call 0x1C5D684
	296 Move X8, [X19]
	297 Move X8, [X8+192]
	298 Move X9, [X0+184]
	299 Move X2, [X8+112]
	300 Move X1, [X9+8]
	301 Move X0, X24
	302 Call 0x21A5608, X0, X1
	303 Move X8, [X19]
	304 Move X8, [X8+192]
	305 Move X3, [X8+120]
	306 And W1, W20, 1
	307 Move X0, X22
	308 Move X2, X21
	309 Call 0x28F1078, X0, X1, X2
	310 Compare X21, 0
	311 JumpIfEqual {414}
	312 Move X0, X21
	313 Move X1, X31
	314 Call Component.get_transform, X0
	315 Compare X0, 0
	316 JumpIfEqual {414}
	317 Move X26, 0x1804000
	318 Move X26, [X26+1432]
	319 Move X1, X31
	320 Call Transform.get_parent, X0
	321 Move X8, [X26]
	322 Move X24, X0
	323 Move W9, [X8+224]
	324 Compare W9, 0
	325 JumpIfNotEqual {328}
	326 Move X0, X8
	327 Call 0x1C17DFC
	328 Move X0, X24
	329 Move X1, X31
	330 Move X2, X31
	331 Call Object.op_Inequality, X0, X1
	332 Move TEMP, X0
	333 And TEMP, TEMP, 1
	334 Compare TEMP, 1
	335 JumpIfNotEqual {177}
	336 Compare X24, 0
	337 JumpIfEqual {414}
	338 Move X8, [X19]
	339 Move X0, X24
	340 Move X8, [X8+192]
	341 Move X1, [X8+96]
	342 Call 0x21A4894, X0
	343 Move X8, [X26]
	344 Move X25, X0
	345 Move W9, [X8+224]
	346 Compare W9, 0
	347 JumpIfNotEqual {350}
	348 Move X0, X8
	349 Call 0x1C17DFC
	350 Move X0, X25
	351 Move X1, X31
	352 Move X2, X31
	353 Call Object.op_Inequality, X0, X1
	354 Move TEMP, X0
	355 And TEMP, TEMP, 1
	356 Compare TEMP, 1
	357 JumpIfEqual {177}
	358 Move X8, [X19]
	359 Move X8, [X8+192]
	360 Move X0, [X8+32]
	361 Move W8, [X0+309]
	362 Move TEMP, X8
	363 And TEMP, TEMP, 1
	364 Compare TEMP, 1
	365 JumpIfEqual {367}
	366 Call 0x1C5D684
	367 Move W8, [X0+224]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X8, [X19]
	372 Move X8, [X8+192]
	373 Move X0, [X8+32]
	374 Move W9, [X0+309]
	375 Move TEMP, X9
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfEqual {382}
	379 Call 0x1C5D684
	380 Move X8, [X19]
	381 Move X8, [X8+192]
	382 Move X9, [X0+184]
	383 Move X2, [X8+72]
	384 Move X0, X24
	385 Move X1, [X9]
	386 Call 0x21A543C, X0, X1
	387 Move X8, [X19]
	388 Move X8, [X8+192]
	389 Move X0, [X8+32]
	390 Move W9, [X0+309]
	391 Move TEMP, X9
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfEqual {398}
	395 Call 0x1C5D684
	396 Move X8, [X19]
	397 Move X8, [X8+192]
	398 Move X9, [X0+184]
	399 Move X2, [X8+80]
	400 Move X0, X24
	401 Move X1, [X9+8]
	402 Call 0x21A543C, X0, X1
	403 Move X8, [X19]
	404 And W1, W20, 1
	405 Move X0, X22
	406 Move X8, [X8+192]
	407 Move X2, [X8+88]
	408 Call 0x28F09C8, X0, X1
	409 Move X0, X24
	410 Move X1, X31
	411 Call Component.get_transform, X0
	412 Compare X0, 0
	413 JumpIfNotEqual {319}
	414 Call 0x1C17F20
	415 Move X19, X31
	416 Move X21, 0x1804000
	417 Move X21, [X21+3584]
	418 Move X0, X23
	419 Move X1, [X21]
	420 Call 0x1C17E00
	421 Compare X0, 0
	422 JumpIfEqual {445}
	423 Move X8, [X0]
	424 Move X1, [X21]
	425 Move X20, X0
	426 NotImplemented "Instruction LDRH not yet implemented."
	427 Compare X9, 0
	428 JumpIfEqual {435}
	429 Move X10, [X8+176]
	430 Add X10, X10, 8
	431 NotImplemented "Instruction LDUR not yet implemented."
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Subtract X9, X9, 1
	434 Add X10, X10, 16
	435 Move X0, X20
	436 Move W2, W31
	437 Call 0x1C5D788
	438 NotImplemented "Instruction LDRSW not yet implemented."
	439 Add X8, X8, X9
	440 Add X0, X8, 312
	441 Move X8, [X0]
	442 Move X1, [X0+8]
	443 Move X0, X20
	444 NotImplemented "Instruction BLR not yet implemented."
	445 Compare X19, 0
	446 JumpIfNotEqual {461}
	447 Move X20, [X31+64]
	448 Move X19, [X31+72]
	449 Move X22, [X31+48]
	450 Move X21, [X31+56]
	451 Move X24, [X31+32]
	452 Move X23, [X31+40]
	453 Move X26, [X31+16]
	454 Move X25, [X31+24]
	455 Move X30, [X31+80]
	456 Return 
	457 Move X0, X24
	458 Call 0x1C181E0
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Move X0, X19
	462 Call 0x1C17F18
	463 Move X20, X0
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Move X0, X20
	466 Call 0x3EB2AD0
	467 Move X19, [X0]
	468 Call 0x3EB2AE0
	469 Move X19, X31
	470 Move X20, X0
	471 Move X22, 0x1804000
	472 Move X22, [X22+3584]
	473 Move X1, [X22]
	474 Move X0, X23
	475 Call 0x1C17E00
	476 Move X21, X0
	477 Compare X0, 0
	478 JumpIfEqual {500}
	479 Move X8, [X21]
	480 Move X1, [X22]
	481 NotImplemented "Instruction LDRH not yet implemented."
	482 Compare X9, 0
	483 JumpIfEqual {490}
	484 Move X10, [X8+176]
	485 Add X10, X10, 8
	486 NotImplemented "Instruction LDUR not yet implemented."
	487 NotImplemented "Instruction CMP not yet implemented."
	488 Subtract X9, X9, 1
	489 Add X10, X10, 16
	490 Move X0, X21
	491 Move W2, W31
	492 Call 0x1C5D788
	493 NotImplemented "Instruction LDRSW not yet implemented."
	494 Add X8, X8, X9
	495 Add X0, X8, 312
	496 Move X8, [X0]
	497 Move X1, [X0+8]
	498 Move X0, X21
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Compare X19, 0
	501 JumpIfNotEqual {504}
	502 Move X0, X20
	503 Call 0x1D2D690
	504 Move X0, X19
	505 Call 0x1C17F18
	506 Call 0x1991590

Method: System.Void .ctor(TFilterType[] componentList, System.Boolean includeDisabled = True)

Disassembly:
	0x028F088C BL 0x1C16F20
	0x028F0890 BL 0x1C16F20
	0x028F0894 MOV X0, X23
	0x028F0898 BL 0x1C16F18
	0x028F089C MOV X0, X20
	0x028F08A0 BL 0x1C16F18
	0x028F08A4 B 0x28F098C
	0x028F08A8 B 0x28F0A28
	0x028F08AC B 0x28F098C
	0x028F08B0 B 0x28F093C
	0x028F08B4 B 0x28F09D8
	0x028F08B8 B 0x28F0A28
	0x028F08BC B 0x28F093C
	0x028F08C0 B 0x28F098C
	0x028F08C4 B 0x28F09D8
	0x028F08C8 B 0x28F098C
	0x028F08CC B 0x28F098C
	0x028F08D0 B 0x28F093C
	0x028F08D4 B 0x28F0A28
	0x028F08D8 B 0x28F093C
	0x028F08DC B 0x28F093C
	0x028F08E0 B 0x28F0A28
	0x028F08E4 B 0x28F0A28
	0x028F08E8 B 0x28F0A28
	0x028F08EC B 0x28F098C
	0x028F08F0 B 0x28F09D8
	0x028F08F4 B 0x28F098C
	0x028F08F8 B 0x28F098C
	0x028F08FC B 0x28F09D8
	0x028F0900 B 0x28F09D8
	0x028F0904 B 0x28F09D8
	0x028F0908 B 0x28F093C
	0x028F090C B 0x28F093C
	0x028F0910 B 0x28F093C
	0x028F0914 B 0x28F0A28
	0x028F0918 B 0x28F0A28
	0x028F091C B 0x28F093C
	0x028F0920 B 0x28F098C
	0x028F0924 B 0x28F098C
	0x028F0928 B 0x28F09D8
	0x028F092C B 0x28F09D8
	0x028F0930 B 0x28F09D8
	0x028F0934 B 0x28F0A28
	0x028F0938 B 0x28F0A28
	0x028F093C MOV X22, X0
	0x028F0940 CMP W1, 0x1
	0x028F0944 B.NE 0x28F0960
	0x028F0948 MOV X0, X22
	0x028F094C BL 0x3EB1AD0
	0x028F0950 LDR X23, [X0]
	0x028F0954 BL 0x3EB1AE0
	0x028F0958 MOVZ W22, 0x1
	0x028F095C B 0x28F0478
	0x028F0960 MOV X23, X31
	0x028F0964 B 0x28F096C
	0x028F0968 MOV X22, X0
	0x028F096C LDR X8, [X19 + 0x20]
	0x028F0970 LDR X8, [X8 + 0xC0]
	0x028F0974 LDR X1, [X8 + 0x108]
	0x028F0978 ADD X0, X31, 0x20
	0x028F097C BL 0x2BC434C
	0x028F0980 CBZ X23, 0x28F0A70
	0x028F0984 MOV X0, X23
	0x028F0988 BL 0x1C16F18
	0x028F098C MOV X22, X0
	0x028F0990 CMP W1, 0x1
	0x028F0994 B.NE 0x28F09AC
	0x028F0998 MOV X0, X22
	0x028F099C BL 0x3EB1AD0
	0x028F09A0 LDR X20, [X0]
	0x028F09A4 BL 0x3EB1AE0
	0x028F09A8 B 0x28F0838
	0x028F09AC MOV X20, X31
	0x028F09B0 B 0x28F09B8
	0x028F09B4 MOV X22, X0
	0x028F09B8 LDR X8, [X19 + 0x20]
	0x028F09BC LDR X8, [X8 + 0xC0]
	0x028F09C0 LDR X1, [X8 + 0x108]
	0x028F09C4 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X1
	007 Move X1, X31
	008 Move X21, X3
	009 Move W19, W2
	010 Move X20, X0
	011 Call Object..ctor, X0
	012 Compare X22, 0
	013 JumpIfEqual {96}
	014 Move X8, [X21+32]
	015 Move X8, [X8+192]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X8, [X21+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8]
	030 Call 0x28F91C4
	031 Move [X20+16], X0
	032 Move X8, [X21+32]
	033 Move X8, [X8+192]
	034 Move X0, [X8+32]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X8, [X21+32]
	046 Move X8, [X8+192]
	047 Move X0, [X8+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+184]
	055 Move X8, [X8]
	056 Compare X8, 0
	057 JumpIfEqual {102}
	058 Move W2, [X8+24]
	059 Move W9, [X8+28]
	060 Add W9, W9, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X8+24], W31
	063 Move [X8+28], W9
	064 Move X0, [X8+16]
	065 Move W1, W31
	066 Move X3, X31
	067 Call Array.Clear, X0, X1, X2
	068 Move X8, [X21+32]
	069 Move X8, [X8+192]
	070 Move X0, [X8+32]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+184]
	078 Move X0, [X8]
	079 Compare X0, 0
	080 JumpIfEqual {102}
	081 Move X8, [X21+32]
	082 Move X1, X22
	083 Move X8, [X8+192]
	084 Move X2, [X8+136]
	085 Call List`1<Object>.AddRange, X0, X1
	086 Move X8, [X21+32]
	087 And W1, W19, 1
	088 Move X0, X20
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X8, [X8+192]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X2, [X8+88]
	095 Move X30, [X31+48]
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Return 
	102 Call 0x1C17F20

Method: System.Void StoreMatchingComponents(System.Collections.Generic.List`1<TChildType> outputList)

Disassembly:
	0x0212F314 MOV X0, X24
	0x0212F318 BL 0x1C16E00
	0x0212F31C CBZ X0, 0x212F45C
	0x0212F320 LDR W8, [X23 + 0x18]
	0x0212F324 CMP W8, 0x1
	0x0212F328 B.LS 0x212F448
	0x0212F32C STR X24, [X23 + 0x28]
	0x0212F330 CBZ X22, 0x212F34C
	0x0212F334 LDR X8, [X23]
	0x0212F338 LDR X1, [X8 + 0x40]
	0x0212F33C MOV X0, X22
	0x0212F340 BL 0x1C16E00
	0x0212F344 CBZ X0, 0x212F468
	0x0212F348 LDR W8, [X23 + 0x18]
	0x0212F34C CMP W8, 0x2
	0x0212F350 B.LS 0x212F414
	0x0212F354 STR X22, [X23 + 0x30]
	0x0212F358 LDR X8, [X19 + 0x20]
	0x0212F35C LDR X8, [X8 + 0xC0]
	0x0212F360 LDR X0, [X8 + 0x60]
	0x0212F364 MOV X1, X31
	0x0212F368 BL 0x338C698
	0x0212F36C CBZ X0, 0x212F41C
	0x0212F370 LDR X8, [X0]
	0x0212F374 LDP X9, X1, [X8 + 0x1A8]
	0x0212F378 BLR X9
	0x0212F37C MOV X22, X0
	0x0212F380 CBZ X0, 0x212F398
	0x0212F384 LDR X8, [X23]
	0x0212F388 LDR X1, [X8 + 0x40]
	0x0212F38C MOV X0, X22
	0x0212F390 BL 0x1C16E00
	0x0212F394 CBZ X0, 0x212F4B0
	0x0212F398 LDR W8, [X23 + 0x18]
	0x0212F39C CMP W8, 0x3
	0x0212F3A0 B.LS 0x212F44C
	0x0212F3A4 STR X22, [X23 + 0x38]
	0x0212F3A8 LDR X0, [X28]
	0x0212F3AC MOV X1, X23
	0x0212F3B0 MOV X2, X31
	0x0212F3B4 BL 0x3227C5C
	0x0212F3B8 MOV X22, X0
	0x0212F3BC LDR X0, [X29]
	0x0212F3C0 LDR W8, [X0 + 0xE0]
	0x0212F3C4 CBNZ W8, 0x212F3CC
	0x0212F3C8 BL 0x1C16DFC
	0x0212F3CC MOV X0, X22
	0x0212F3D0 MOV X1, X31
	0x0212F3D4 BL 0x3C0649C
	0x0212F3D8 B 0x212F03C
	0x0212F3DC MOV X21, X31
	0x0212F3E0 LDR X8, [X19 + 0x38]
	0x0212F3E4 ADD X0, X31, 0x20
	0x0212F3E8 LDR X1, [X8 + 0x38]
	0x0212F3EC BL 0x2BC434C
	0x0212F3F0 CBNZ X21, 0x212F4CC
	0x0212F3F4 LDP X20, X19, [X31 + 0x90]
	0x0212F3F8 LDP X22, X21, [X31 + 0x80]
	0x0212F3FC LDP X24, X23, [X31 + 0x70]
	0x0212F400 LDP X26, X25, [X31 + 0x60]
	0x0212F404 LDP X28, X27, [X31 + 0x50]
	0x0212F408 LDP X29, X30, [X31 + 0x40]
	0x0212F40C ADD X31, X31, 0xA0
	0x0212F410 RET
	0x0212F414 BL 0x1C16F28
	0x0212F418 BL 0x1C16F20
	0x0212F41C BL 0x1C16F20
	0x0212F420 BL 0x1C16F20
	0x0212F424 BL 0x1C16F20
	0x0212F428 BL 0x1C16F20
	0x0212F42C BL 0x1C16F28
	0x0212F430 BL 0x1C16F28
	0x0212F434 BL 0x1C16F28
	0x0212F438 BL 0x1C16F28
	0x0212F43C BL 0x1C16F20
	0x0212F440 BL 0x1C16F28
	0x0212F444 BL 0x1C16F28
	0x0212F448 BL 0x1C16F28
	0x0212F44C BL 0x1C16F28
	0x0212F450 MOV X0, X23
	0x0212F454 MOV X1, X24
	0x0212F458 BL 0x1C171E0
	0x0212F45C BL 0x1C16F44
	0x0212F460 MOV X1, X31
	0x0212F464 BL 0x1C16DEC
	0x0212F468 BL 0x1C16F44
	0x0212F46C MOV X1, X31
	0x0212F470 BL 0x1C16DEC
	0x0212F474 BL 0x1C16F44
	0x0212F478 MOV X1, X31
	0x0212F47C BL 0x1C16DEC
	0x0212F480 BL 0x1C16F44
	0x0212F484 MOV X1, X31
	0x0212F488 BL 0x1C16DEC
	0x0212F48C BL 0x1C16F44
	0x0212F490 MOV X1, X31
	0x0212F494 BL 0x1C16DEC
	0x0212F498 BL 0x1C16F44
	0x0212F49C MOV X1, X31
	0x0212F4A0 BL 0x1C16DEC
	0x0212F4A4 BL 0x1C16F44
	0x0212F4A8 MOV X1, X31
	0x0212F4AC BL 0x1C16DEC
	0x0212F4B0 BL 0x1C16F44
	0x0212F4B4 MOV X1, X31
	0x0212F4B8 BL 0x1C16DEC
	0x0212F4BC BL 0x1C16F44
	0x0212F4C0 MOV X1, X31
	0x0212F4C4 BL 0x1C16DEC
	0x0212F4C8 BL 0x1C16F20
	0x0212F4CC MOV X0, X21
	0x0212F4D0 BL 0x1C16F18
	0x0212F4D4 B 0x212F574
	0x0212F4D8 B 0x212F574
	0x0212F4DC B 0x212F574
	0x0212F4E0 B 0x212F574
	0x0212F4E4 B 0x212F574
	0x0212F4E8 B 0x212F574
	0x0212F4EC B 0x212F574
	0x0212F4F0 B 0x212F574
	0x0212F4F4 B 0x212F574
	0x0212F4F8 B 0x212F574
	0x0212F4FC B 0x212F574

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X8, [X2+56]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Move [X31+48], X31
	018 Move X0, [X21+16]
	019 Compare X0, 0
	020 JumpIfEqual {113}
	021 Move X8, [X19+32]
	022 Move X8, [X8+192]
	023 Move X1, [X8+152]
	024 Add X8, X31, 8
	025 Call List`1<Object>.GetEnumerator, X0
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move X8, [X31+24]
	028 Move [X31+2], V0
	029 Move [X31+48], X8
	030 Move X8, [X19+32]
	031 Move X8, [X8+192]
	032 Move X1, [X8+192]
	033 Add X0, X31, 32
	034 Call Enumerator<Object>.MoveNext, X0
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {93}
	039 Move X8, [X19+56]
	040 Move X21, [X31+48]
	041 Move X1, [X8]
	042 Move W8, [X1+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X1
	048 Call 0x1C5D684
	049 Move X1, X0
	050 Move X0, X21
	051 Call 0x1C17E00
	052 Move X8, [X19+56]
	053 Move X21, X0
	054 Move X22, [X8]
	055 Move W8, [X22+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X22
	061 Call 0x1C5D684
	062 Move X22, X0
	063 Compare X21, 0
	064 JumpIfEqual {30}
	065 Move X0, X21
	066 Move X1, X22
	067 Call 0x1C17E00
	068 Move X1, X0
	069 Compare X1, 0
	070 JumpIfEqual {109}
	071 Compare X20, 0
	072 JumpIfEqual {112}
	073 Move X9, [X19+56]
	074 Move W10, [X20+28]
	075 Move X8, [X20+16]
	076 Move X9, [X9+16]
	077 Add W10, W10, 1
	078 Move [X20+28], W10
	079 Compare X8, 0
	080 JumpIfEqual {108}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W11, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add W9, W10, 1
	085 Add X8, X8, X10
	086 Move [X20+24], W9
	087 Move [X8+32], X1
	088 Move X8, [X9+32]
	089 Move X8, [X8+192]
	090 Move X2, [X8+112]
	091 Move X0, X20
	092 Call List`1<Object>.AddWithResize, X0, X1
	093 Move X21, X31
	094 Move X8, [X19+32]
	095 Add X0, X31, 32
	096 Move X8, [X8+192]
	097 Move X1, [X8+200]
	098 Call Enumerator<Object>.Dispose, X0
	099 Compare X21, 0
	100 JumpIfNotEqual {114}
	101 Move X20, [X31+96]
	102 Move X19, [X31+104]
	103 Move X22, [X31+80]
	104 Move X21, [X31+88]
	105 Move X30, [X31+64]
	106 Add X31, X31, 112
	107 Return 
	108 Call 0x1C17F20
	109 Move X0, X21
	110 Move X1, X22
	111 Call 0x1C181E0
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 Move X0, X21
	115 Call 0x1C17F18
	116 Move X20, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X20
	119 Call 0x3EB2AD0
	120 Move X21, [X0]
	121 Call 0x3EB2AE0
	122 Move X21, X31
	123 Move X20, X0
	124 Move X8, [X19+32]
	125 Move X8, [X8+192]
	126 Move X1, [X8+200]
	127 Add X0, X31, 32
	128 Call Enumerator<Object>.Dispose, X0
	129 Compare X21, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X20
	132 Call 0x1D2D690
	133 Move X0, X21
	134 Call 0x1C17F18
	135 Call 0x1991590

Method: TChildType[] GetMatchingComponents()

Disassembly:
	0x0212F050 LDR X0, [X25]
	0x0212F054 LDR X22, [X31 + 0x30]
	0x0212F058 LDR W8, [X0 + 0xE0]
	0x0212F05C CBNZ W8, 0x212F064
	0x0212F060 BL 0x1C16DFC
	0x0212F064 MOV X0, X22
	0x0212F068 MOV X1, X31
	0x0212F06C MOV X2, X31
	0x0212F070 BL 0x3C354F8
	0x0212F074 TBZ X0, 0x0, 0x212F0F4
	0x0212F078 LDR X8, [X19 + 0x20]
	0x0212F07C LDR X8, [X8 + 0xC0]
	0x0212F080 LDR X1, [X8 + 0x8]
	0x0212F084 LDRB W8, [X1 + 0x135]
	0x0212F088 TBNZ X8, 0x0, 0x212F098
	0x0212F08C MOV X0, X1
	0x0212F090 BL 0x1C5C684
	0x0212F094 MOV X1, X0
	0x0212F098 MOV X0, X22
	0x0212F09C BL 0x1C16E00
	0x0212F0A0 LDR X8, [X19 + 0x20]
	0x0212F0A4 MOV X23, X0
	0x0212F0A8 LDR X8, [X8 + 0xC0]
	0x0212F0AC LDR X24, [X8 + 0x8]
	0x0212F0B0 LDRB W8, [X24 + 0x135]
	0x0212F0B4 TBNZ X8, 0x0, 0x212F0C4
	0x0212F0B8 MOV X0, X24
	0x0212F0BC BL 0x1C5C684
	0x0212F0C0 MOV X24, X0
	0x0212F0C4 CBZ X23, 0x212F0F4
	0x0212F0C8 MOV X0, X23
	0x0212F0CC MOV X1, X24
	0x0212F0D0 BL 0x1C16E00
	0x0212F0D4 MOV X1, X0
	0x0212F0D8 CBZ X1, 0x212F450
	0x0212F0DC LDR X8, [X19 + 0x20]
	0x0212F0E0 LDR X8, [X8 + 0xC0]
	0x0212F0E4 LDR X2, [X8 + 0x50]
	0x0212F0E8 MOV X0, X21
	0x0212F0EC BL 0x2D10844
	0x0212F0F0 B 0x212F03C
	0x0212F0F4 LDR X0, [X25]
	0x0212F0F8 LDR W8, [X0 + 0xE0]
	0x0212F0FC CBNZ W8, 0x212F104
	0x0212F100 BL 0x1C16DFC
	0x0212F104 MOV X0, X20
	0x0212F108 MOV X1, X31
	0x0212F10C MOV X2, X31
	0x0212F110 BL 0x3C354F8
	0x0212F114 MOV W8, W0
	0x0212F118 LDR X0, [X26]
	0x0212F11C TBZ X8, 0x0, 0x212F298
	0x0212F120 MOVZ W1, 0x5
	0x0212F124 BL 0x1C16D6C
	0x0212F128 MOV X23, X0
	0x0212F12C CBZ X0, 0x212F428
	0x0212F130 CBZ X22, 0x212F148
	0x0212F134 LDR X8, [X23]
	0x0212F138 LDR X1, [X8 + 0x40]
	0x0212F13C MOV X0, X22
	0x0212F140 BL 0x1C16E00
	0x0212F144 CBZ X0, 0x212F474
	0x0212F148 LDR W8, [X23 + 0x18]
	0x0212F14C CBZ W8, 0x212F42C
	0x0212F150 STR X22, [X23 + 0x20]
	0x0212F154 LDR X8, [X19 + 0x20]
	0x0212F158 LDR X0, [X27]
	0x0212F15C LDR X8, [X8 + 0xC0]
	0x0212F160 LDR W9, [X0 + 0xE0]
	0x0212F164 LDR X24, [X8 + 0x58]
	0x0212F168 CBNZ W9, 0x212F170
	0x0212F16C BL 0x1C16DFC
	0x0212F170 MOV X0, X24
	0x0212F174 MOV X1, X31
	0x0212F178 BL 0x338C698
	0x0212F17C CBZ X0, 0x212F418
	0x0212F180 LDR X8, [X0]
	0x0212F184 LDP X9, X1, [X8 + 0x1A8]
	0x0212F188 BLR X9
	0x0212F18C MOV X24, X0
	0x0212F190 CBZ X0, 0x212F1A8
	0x0212F194 LDR X8, [X23]
	0x0212F198 LDR X1, [X8 + 0x40]
	0x0212F19C MOV X0, X24
	0x0212F1A0 BL 0x1C16E00
	0x0212F1A4 CBZ X0, 0x212F480
	0x0212F1A8 LDR W8, [X23 + 0x18]
	0x0212F1AC CMP W8, 0x1
	0x0212F1B0 B.LS 0x212F444
	0x0212F1B4 STR X24, [X23 + 0x28]
	0x0212F1B8 CBZ X20, 0x212F1D4
	0x0212F1BC LDR X8, [X23]
	0x0212F1C0 LDR X1, [X8 + 0x40]
	0x0212F1C4 MOV X0, X20
	0x0212F1C8 BL 0x1C16E00
	0x0212F1CC CBZ X0, 0x212F4A4
	0x0212F1D0 LDR W8, [X23 + 0x18]
	0x0212F1D4 CMP W8, 0x2
	0x0212F1D8 B.LS 0x212F438
	0x0212F1DC STR X20, [X23 + 0x30]
	0x0212F1E0 CBZ X22, 0x212F1FC
	0x0212F1E4 LDR X8, [X23]
	0x0212F1E8 LDR X1, [X8 + 0x40]
	0x0212F1EC MOV X0, X22
	0x0212F1F0 BL 0x1C16E00
	0x0212F1F4 CBZ X0, 0x212F498
	0x0212F1F8 LDR W8, [X23 + 0x18]
	0x0212F1FC CMP W8, 0x3
	0x0212F200 B.LS 0x212F430
	0x0212F204 STR X22, [X23 + 0x38]
	0x0212F208 LDR X8, [X19 + 0x20]
	0x0212F20C LDR X8, [X8 + 0xC0]
	0x0212F210 LDR X0, [X8 + 0x60]
	0x0212F214 MOV X1, X31
	0x0212F218 BL 0x338C698
	0x0212F21C CBZ X0, 0x212F424
	0x0212F220 LDR X8, [X0]
	0x0212F224 LDP X9, X1, [X8 + 0x1A8]
	0x0212F228 BLR X9
	0x0212F22C MOV X22, X0
	0x0212F230 CBZ X0, 0x212F248
	0x0212F234 LDR X8, [X23]
	0x0212F238 LDR X1, [X8 + 0x40]
	0x0212F23C MOV X0, X22
	0x0212F240 BL 0x1C16E00
	0x0212F244 CBZ X0, 0x212F48C
	0x0212F248 LDR W8, [X23 + 0x18]
	0x0212F24C CMP W8, 0x4
	0x0212F250 B.LS 0x212F434
	0x0212F254 STR X22, [X23 + 0x40]
	0x0212F258 ADRP X8, 0x1FEC000
	0x0212F25C LDR X8, [X8 + 0x698]
	0x0212F260 LDR X0, [X8]
	0x0212F264 MOV X1, X23
	0x0212F268 MOV X2, X31
	0x0212F26C BL 0x3227C5C
	0x0212F270 MOV X22, X0
	0x0212F274 LDR X0, [X29]
	0x0212F278 LDR W8, [X0 + 0xE0]
	0x0212F27C CBNZ W8, 0x212F284
	0x0212F280 BL 0x1C16DFC
	0x0212F284 MOV X0, X22
	0x0212F288 MOV X1, X20
	0x0212F28C MOV X2, X31
	0x0212F290 BL 0x3C065A4
	0x0212F294 B 0x212F03C
	0x0212F298 MOVZ W1, 0x4
	0x0212F29C BL 0x1C16D6C
	0x0212F2A0 MOV X23, X0
	0x0212F2A4 CBZ X0, 0x212F43C
	0x0212F2A8 CBZ X22, 0x212F2C0
	0x0212F2AC LDR X8, [X23]
	0x0212F2B0 LDR X1, [X8 + 0x40]
	0x0212F2B4 MOV X0, X22
	0x0212F2B8 BL 0x1C16E00
	0x0212F2BC CBZ X0, 0x212F4BC
	0x0212F2C0 LDR W8, [X23 + 0x18]
	0x0212F2C4 CBZ W8, 0x212F440
	0x0212F2C8 STR X22, [X23 + 0x20]
	0x0212F2CC LDR X8, [X19 + 0x20]
	0x0212F2D0 LDR X0, [X27]
	0x0212F2D4 LDR X8, [X8 + 0xC0]
	0x0212F2D8 LDR W9, [X0 + 0xE0]
	0x0212F2DC LDR X24, [X8 + 0x58]
	0x0212F2E0 CBNZ W9, 0x212F2E8
	0x0212F2E4 BL 0x1C16DFC
	0x0212F2E8 MOV X0, X24
	0x0212F2EC MOV X1, X31
	0x0212F2F0 BL 0x338C698
	0x0212F2F4 CBZ X0, 0x212F420
	0x0212F2F8 LDR X8, [X0]
	0x0212F2FC LDP X9, X1, [X8 + 0x1A8]
	0x0212F300 BLR X9
	0x0212F304 MOV X24, X0
	0x0212F308 CBZ X0, 0x212F320
	0x0212F30C LDR X8, [X23]
	0x0212F310 LDR X1, [X8 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X8, [X1+56]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Move [X31+48], X31
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {152}
	021 Move X8, [X19+32]
	022 Move X8, [X8+192]
	023 Move X1, [X8+152]
	024 Add X8, X31, 8
	025 Call List`1<Object>.GetEnumerator, X0
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move X8, [X31+24]
	028 Move W21, W31
	029 Move [X31+2], V0
	030 Move [X31+48], X8
	031 Move X8, [X19+32]
	032 Move X8, [X8+192]
	033 Move X1, [X8+192]
	034 Add X0, X31, 32
	035 Call Enumerator<Object>.MoveNext, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {55}
	040 Move X8, [X19+56]
	041 Move X22, [X31+48]
	042 Move X1, [X8]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Move X0, X22
	052 Call 0x1C17E00
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CINC not yet implemented."
	055 Move X23, X31
	056 Move X8, [X19+32]
	057 Add X0, X31, 32
	058 Move X8, [X8+192]
	059 Move X1, [X8+200]
	060 Call Enumerator<Object>.Dispose, X0
	061 Compare X23, 0
	062 JumpIfNotEqual {153}
	063 Move X8, [X19+56]
	064 Move X0, [X8+8]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move W1, W21
	072 Call 0x1C17D6C
	073 Move X9, [X20+16]
	074 Compare X9, 0
	075 JumpIfEqual {152}
	076 Move X8, [X19+32]
	077 Move X20, X0
	078 Move X0, X9
	079 Move X8, [X8+192]
	080 Move X1, [X8+152]
	081 Add X8, X31, 8
	082 Call List`1<Object>.GetEnumerator, X0
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X8, [X31+24]
	085 Move W23, W31
	086 Move [X31+2], V0
	087 Move [X31+48], X8
	088 Move X8, [X19+32]
	089 Move X8, [X8+192]
	090 Move X1, [X8+192]
	091 Add X0, X31, 32
	092 Call Enumerator<Object>.MoveNext, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {135}
	097 Move X8, [X19+56]
	098 Move X21, [X31+48]
	099 Move X1, [X8]
	100 Move W8, [X1+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {108}
	105 Move X0, X1
	106 Call 0x1C5D684
	107 Move X1, X0
	108 Move X0, X21
	109 Call 0x1C17E00
	110 Move X8, [X19+56]
	111 Move X21, X0
	112 Move X22, [X8]
	113 Move W8, [X22+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {121}
	118 Move X0, X22
	119 Call 0x1C5D684
	120 Move X22, X0
	121 Compare X21, 0
	122 JumpIfEqual {88}
	123 Move X0, X21
	124 Move X1, X22
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {158}
	128 Compare X20, 0
	129 JumpIfEqual {161}
	130 Move W8, [X20+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X8, X20, W23
	133 Add W23, W23, 1
	134 Move [X8+32], X0
	135 Move X21, X31
	136 Move X8, [X19+32]
	137 Add X0, X31, 32
	138 Move X8, [X8+192]
	139 Move X1, [X8+200]
	140 Call Enumerator<Object>.Dispose, X0
	141 Compare X21, 0
	142 JumpIfNotEqual {155}
	143 Move X0, X20
	144 Move X20, [X31+96]
	145 Move X19, [X31+104]
	146 Move X22, [X31+80]
	147 Move X21, [X31+88]
	148 Move X30, [X31+64]
	149 Move X23, [X31+72]
	150 Add X31, X31, 112
	151 Return X0
	152 Call 0x1C17F20
	153 Move X0, X23
	154 Call 0x1C17F18
	155 Move X0, X21
	156 Call 0x1C17F18
	157 Call 0x1C17F28
	158 Move X0, X21
	159 Move X1, X22
	160 Call 0x1C181E0
	161 Call 0x1C17F20
	162 Move X22, X0
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X0, X22
	165 Call 0x3EB2AD0
	166 Move X23, [X0]
	167 Call 0x3EB2AE0
	168 Move X23, X31
	169 Move X22, X0
	170 Move X8, [X19+32]
	171 Move X8, [X8+192]
	172 Move X1, [X8+200]
	173 Add X0, X31, 32
	174 Call Enumerator<Object>.Dispose, X0
	175 Compare X23, 0
	176 JumpIfEqual {194}
	177 Move X0, X23
	178 Call 0x1C17F18
	179 Move X22, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X22
	182 Call 0x3EB2AD0
	183 Move X21, [X0]
	184 Call 0x3EB2AE0
	185 Move X21, X31
	186 Move X22, X0
	187 Move X8, [X19+32]
	188 Move X8, [X8+192]
	189 Move X1, [X8+200]
	190 Add X0, X31, 32
	191 Call Enumerator<Object>.Dispose, X0
	192 Compare X21, 0
	193 JumpIfNotEqual {196}
	194 Move X0, X22
	195 Call 0x1D2D690
	196 Move X0, X21
	197 Call 0x1C17F18
	198 Call 0x1991590

Method: System.Void FilteredCopyToMaster(System.Boolean includeDisabled)

Disassembly:
	0x028F09C8 BL 0x2BC434C
	0x028F09CC CBZ X20, 0x28F0A70
	0x028F09D0 MOV X0, X20
	0x028F09D4 BL 0x1C16F18
	0x028F09D8 MOV X22, X0
	0x028F09DC CMP W1, 0x1
	0x028F09E0 B.NE 0x28F09FC
	0x028F09E4 MOV X0, X22
	0x028F09E8 BL 0x3EB1AD0
	0x028F09EC LDR X23, [X0]
	0x028F09F0 BL 0x3EB1AE0
	0x028F09F4 MOV W22, W31
	0x028F09F8 B 0x28F028C
	0x028F09FC MOV X23, X31
	0x028F0A00 B 0x28F0A08
	0x028F0A04 MOV X22, X0
	0x028F0A08 LDR X8, [X19 + 0x20]
	0x028F0A0C LDR X8, [X8 + 0xC0]
	0x028F0A10 LDR X1, [X8 + 0xC8]
	0x028F0A14 ADD X0, X31, 0x40
	0x028F0A18 BL 0x2BC434C
	0x028F0A1C CBZ X23, 0x28F0A70
	0x028F0A20 MOV X0, X23
	0x028F0A24 BL 0x1C16F18
	0x028F0A28 MOV X22, X0
	0x028F0A2C CMP W1, 0x1
	0x028F0A30 B.NE 0x28F0A4C
	0x028F0A34 MOV X0, X22
	0x028F0A38 BL 0x3EB1AD0
	0x028F0A3C LDR X23, [X0]
	0x028F0A40 BL 0x3EB1AE0
	0x028F0A44 MOV W22, W31
	0x028F0A48 B 0x28F0640
	0x028F0A4C MOV X23, X31
	0x028F0A50 B 0x28F0A58
	0x028F0A54 MOV X22, X0
	0x028F0A58 LDR X8, [X19 + 0x20]
	0x028F0A5C LDR X8, [X8 + 0xC0]
	0x028F0A60 LDR X1, [X8 + 0xC8]
	0x028F0A64 ADD X0, X31, 0x40
	0x028F0A68 BL 0x2BC434C
	0x028F0A6C CBNZ X23, 0x28F0A78
	0x028F0A70 MOV X0, X22
	0x028F0A74 BL 0x1D2C690
	0x028F0A78 MOV X0, X23
	0x028F0A7C BL 0x1C16F18
	0x028F0A80 BL 0x1990590
	0x028F0A84 STP X30, X21, [X31 - 0x20]!
	0x028F0A88 STP X20, X19, [X31 + 0x10]
	0x028F0A8C LDRB W8, [X0 + 0x18]
	0x028F0A90 CBNZ W8, 0x28F0AE8
	0x028F0A94 MOV X19, X0
	0x028F0A98 TBZ X1, 0x0, 0x28F0AE0
	0x028F0A9C LDR X21, [X19 + 0x10]
	0x028F0AA0 CBZ X21, 0x28F0AE0
	0x028F0AA4 LDR X8, [X2 + 0x20]
	0x028F0AA8 MOV X20, X2
	0x028F0AAC LDR X8, [X8 + 0xC0]
	0x028F0AB0 LDR X0, [X8 + 0x8]
	0x028F0AB4 LDRB W8, [X0 + 0x135]
	0x028F0AB8 TBNZ X8, 0x0, 0x28F0AC0
	0x028F0ABC BL 0x1C5C684
	0x028F0AC0 LDR W8, [X0 + 0xE0]
	0x028F0AC4 CBNZ W8, 0x28F0ACC
	0x028F0AC8 BL 0x1C16DFC
	0x028F0ACC LDR X8, [X20 + 0x20]
	0x028F0AD0 MOV X0, X21
	0x028F0AD4 LDR X8, [X8 + 0xC0]
	0x028F0AD8 LDR X1, [X8 + 0x120]
	0x028F0ADC BL 0x28F82F0
	0x028F0AE0 MOVZ W8, 0x1
	0x028F0AE4 STRB W8, [X19 + 0x18]
	0x028F0AE8 LDP X20, X19, [X31 + 0x10]
	0x028F0AEC LDP X30, X21, [X31], #0x20
	0x028F0AF0 RET
	0x028F0AF4 LDR X8, [X0]
	0x028F0AF8 MOVZ W1, 0x1
	0x028F0AFC LDP X3, X2, [X8 + 0x188]
	0x028F0B00 BR X3
	0x028F0B04 STR X30, [X31 - 0x20]!
	0x028F0B08 STP X20, X19, [X31 + 0x10]
	0x028F0B0C MOV X19, X0
	0x028F0B10 LDR X0, [X0 + 0x20]
	0x028F0B14 LDRB W8, [X0 + 0x135]
	0x028F0B18 TBNZ X8, 0x0, 0x28F0B20
	0x028F0B1C BL 0x1C5C684
	0x028F0B20 LDR X8, [X0 + 0xC0]
	0x028F0B24 LDR X0, [X8 + 0x10]
	0x028F0B28 LDRB W8, [X0 + 0x135]
	0x028F0B2C TBNZ X8, 0x0, 0x28F0B34
	0x028F0B30 BL 0x1C5C684
	0x028F0B34 BL 0x1C16F10
	0x028F0B38 LDR X8, [X19 + 0x20]
	0x028F0B3C MOV X20, X0
	0x028F0B40 LDRB W9, [X8 + 0x135]
	0x028F0B44 TBNZ X9, 0x0, 0x28F0B54
	0x028F0B48 MOV X0, X8
	0x028F0B4C BL 0x1C5C684
	0x028F0B50 MOV X8, X0
	0x028F0B54 LDR X8, [X8 + 0xC0]
	0x028F0B58 MOV X0, X20
	0x028F0B5C LDR X1, [X8 + 0x130]
	0x028F0B60 BL 0x301B7C4
	0x028F0B64 LDR X0, [X19 + 0x20]
	0x028F0B68 LDRB W8, [X0 + 0x135]
	0x028F0B6C TBNZ X8, 0x0, 0x28F0B74
	0x028F0B70 BL 0x1C5C684
	0x028F0B74 LDR X8, [X0 + 0xC0]
	0x028F0B78 LDR X0, [X8 + 0x20]
	0x028F0B7C LDRB W8, [X0 + 0x135]
	0x028F0B80 TBNZ X8, 0x0, 0x28F0B88
	0x028F0B84 BL 0x1C5C684
	0x028F0B88 LDR X8, [X0 + 0xB8]
	0x028F0B8C STR X20, [X8]
	0x028F0B90 LDR X0, [X19 + 0x20]
	0x028F0B94 LDRB W8, [X0 + 0x135]
	0x028F0B98 TBNZ X8, 0x0, 0x28F0BA0
	0x028F0B9C BL 0x1C5C684
	0x028F0BA0 LDR X8, [X0 + 0xC0]
	0x028F0BA4 LDR X0, [X8 + 0x20]
	0x028F0BA8 LDRB W8, [X0 + 0x135]
	0x028F0BAC TBNZ X8, 0x0, 0x28F0BB4
	0x028F0BB0 BL 0x1C5C684
	0x028F0BB4 LDR X0, [X19 + 0x20]
	0x028F0BB8 LDRB W8, [X0 + 0x135]
	0x028F0BBC TBNZ X8, 0x0, 0x28F0BC4
	0x028F0BC0 BL 0x1C5C684
	0x028F0BC4 LDR X8, [X0 + 0xC0]
	0x028F0BC8 LDR X0, [X8 + 0x30]
	0x028F0BCC LDRB W8, [X0 + 0x135]
	0x028F0BD0 TBNZ X8, 0x0, 0x28F0BD8
	0x028F0BD4 BL 0x1C5C684
	0x028F0BD8 BL 0x1C16F10
	0x028F0BDC LDR X8, [X19 + 0x20]
	0x028F0BE0 MOV X20, X0
	0x028F0BE4 LDRB W9, [X8 + 0x135]
	0x028F0BE8 TBNZ X9, 0x0, 0x28F0BF8
	0x028F0BEC MOV X0, X8
	0x028F0BF0 BL 0x1C5C684
	0x028F0BF4 MOV X8, X0
	0x028F0BF8 LDR X8, [X8 + 0xC0]
	0x028F0BFC MOV X0, X20
	0x028F0C00 LDR X1, [X8 + 0x138]
	0x028F0C04 BL 0x301B7C4
	0x028F0C08 LDR X0, [X19 + 0x20]
	0x028F0C0C LDRB W8, [X0 + 0x135]
	0x028F0C10 TBNZ X8, 0x0, 0x28F0C18
	0x028F0C14 BL 0x1C5C684
	0x028F0C18 LDR X8, [X0 + 0xC0]
	0x028F0C1C LDR X0, [X8 + 0x20]
	0x028F0C20 LDRB W8, [X0 + 0x135]
	0x028F0C24 TBNZ X8, 0x0, 0x28F0C2C
	0x028F0C28 BL 0x1C5C684
	0x028F0C2C LDR X8, [X0 + 0xB8]
	0x028F0C30 STR X20, [X8 + 0x8]
	0x028F0C34 LDR X0, [X19 + 0x20]
	0x028F0C38 LDRB W8, [X0 + 0x135]
	0x028F0C3C TBNZ X8, 0x0, 0x28F0C44
	0x028F0C40 BL 0x1C5C684
	0x028F0C44 LDR X8, [X0 + 0xC0]
	0x028F0C48 LDR X0, [X8 + 0x20]
	0x028F0C4C LDRB W8, [X0 + 0x135]
	0x028F0C50 TBNZ X8, 0x0, 0x28F0C60
	0x028F0C54 LDP X20, X19, [X31 + 0x10]
	0x028F0C58 LDR X30, [X31], #0x20
	0x028F0C5C B 0x1C5C684
	0x028F0C60 LDP X20, X19, [X31 + 0x10]
	0x028F0C64 LDR X30, [X31], #0x20
	0x028F0C68 RET
	0x028F0C6C STR X30, [X31 - 0x20]!
	0x028F0C70 STP X20, X19, [X31 + 0x10]
	0x028F0C74 LDR X8, [X4 + 0x20]
	0x028F0C78 AND W20, W3, 0x1
	0x028F0C7C MOV X19, X0
	0x028F0C80 LDR X8, [X8 + 0xC0]
	0x028F0C84 LDR X8, [X8]
	0x028F0C88 MOV X3, X8
	0x028F0C8C BL 0x2E711F0
	0x028F0C90 STRB W20, [X19 + 0x18]
	0x028F0C94 LDP X20, X19, [X31 + 0x10]
	0x028F0C98 LDR X30, [X31], #0x20
	0x028F0C9C RET
	0x028F0CA0 LDR X8, [X2 + 0x20]
	0x028F0CA4 LDRB W1, [X0 + 0x18]
	0x028F0CA8 LDR X8, [X8 + 0xC0]
	0x028F0CAC LDR X2, [X8 + 0x20]
	0x028F0CB0 B 0x2E7143C
	0x028F0CB4 LDR X8, [X2 + 0x20]
	0x028F0CB8 LDRB W1, [X0 + 0x18]
	0x028F0CBC LDR X8, [X8 + 0xC0]
	0x028F0CC0 LDR X2, [X8 + 0x20]
	0x028F0CC4 B 0x2E7143C
	0x028F0CC8 STR X30, [X31 - 0x20]!
	0x028F0CCC STP X20, X19, [X31 + 0x10]
	0x028F0CD0 LDR X8, [X4 + 0x20]
	0x028F0CD4 MOV W19, W3
	0x028F0CD8 MOV X20, X0
	0x028F0CDC LDR X8, [X8 + 0xC0]
	0x028F0CE0 LDR X3, [X8]
	0x028F0CE4 BL 0x2E71AA0
	0x028F0CE8 STR W19, [X20 + 0x18]
	0x028F0CEC LDP X20, X19, [X31 + 0x10]
	0x028F0CF0 LDR X30, [X31], #0x20
	0x028F0CF4 RET
	0x028F0CF8 LDR X8, [X2 + 0x20]
	0x028F0CFC LDR W1, [X0 + 0x18]
	0x028F0D00 LDR X8, [X8 + 0xC0]
	0x028F0D04 LDR X2, [X8 + 0x20]
	0x028F0D08 B 0x2E71CEC
	0x028F0D0C LDR X8, [X2 + 0x20]
	0x028F0D10 LDR W1, [X0 + 0x18]
	0x028F0D14 LDR X8, [X8 + 0xC0]
	0x028F0D18 LDR X2, [X8 + 0x20]
	0x028F0D1C B 0x2E71CEC
	0x028F0D20 STR X30, [X31 - 0x20]!
	0x028F0D24 STP X20, X19, [X31 + 0x10]
	0x028F0D28 LDR X8, [X4 + 0x20]
	0x028F0D2C MOV X19, X3
	0x028F0D30 MOV X20, X0
	0x028F0D34 LDR X8, [X8 + 0xC0]
	0x028F0D38 LDR X3, [X8]
	0x028F0D3C BL 0x2E72328
	0x028F0D40 STR X19, [X20 + 0x18]
	0x028F0D44 LDP X20, X19, [X31 + 0x10]
	0x028F0D48 LDR X30, [X31], #0x20
	0x028F0D4C RET
	0x028F0D50 LDR X8, [X2 + 0x20]
	0x028F0D54 LDR X1, [X0 + 0x18]
	0x028F0D58 LDR X8, [X8 + 0xC0]
	0x028F0D5C LDR X2, [X8 + 0x20]
	0x028F0D60 B 0x2E72574
	0x028F0D64 LDR X8, [X2 + 0x20]
	0x028F0D68 LDR X1, [X0 + 0x18]
	0x028F0D6C LDR X8, [X8 + 0xC0]
	0x028F0D70 LDR X2, [X8 + 0x20]
	0x028F0D74 B 0x2E72574
	0x028F0D78 STR D8, [X31 - 0x20]!
	0x028F0D7C STP X30, X19, [X31 + 0x10]
	0x028F0D80 LDR X8, [X3 + 0x20]
	0x028F0D84 MOV V8.16B, V0.16B
	0x028F0D88 MOV X19, X0
	0x028F0D8C LDR X8, [X8 + 0xC0]
	0x028F0D90 LDR X3, [X8]
	0x028F0D94 BL 0x2E72BD8
	0x028F0D98 STR S8, [X19 + 0x18]
	0x028F0D9C LDP X30, X19, [X31 + 0x10]
	0x028F0DA0 LDR V8, [X31], #0x20
	0x028F0DA4 RET
	0x028F0DA8 LDR X8, [X2 + 0x20]
	0x028F0DAC LDR V0, [X0 + 0x18]
	0x028F0DB0 LDR X8, [X8 + 0xC0]
	0x028F0DB4 LDR X1, [X8 + 0x20]
	0x028F0DB8 B 0x2E72E24
	0x028F0DBC LDR X8, [X1 + 0x20]
	0x028F0DC0 LDR V0, [X0 + 0x18]
	0x028F0DC4 LDR X8, [X8 + 0xC0]
	0x028F0DC8 LDR X1, [X8 + 0x20]
	0x028F0DCC B 0x2E72E24
	0x028F0DD0 STP X29, X30, [X31 - 0x40]!
	0x028F0DD4 STP X24, X23, [X31 + 0x10]
	0x028F0DD8 STP X22, X21, [X31 + 0x20]
	0x028F0DDC STP X20, X19, [X31 + 0x30]
	0x028F0DE0 ADD X29, X31, 0x0
	0x028F0DE4 SUB X31, X31, 0x10
	0x028F0DE8 MRS X24, 0xC000
	0x028F0DEC LDR X8, [X24 + 0x28]
	0x028F0DF0 MOV X19, X4
	0x028F0DF4 MOV X20, X3
	0x028F0DF8 MOV X22, X0
	0x028F0DFC STUR X8, [X29 - 0x8]
	0x028F0E00 STUR X3, [X29 - 0x10]
	0x028F0E04 LDR X8, [X4 + 0x20]
	0x028F0E08 LDR X8, [X8 + 0xC0]
	0x028F0E0C LDR X9, [X8 + 0x10]
	0x028F0E10 LDR W21, [X9 + 0xFC]
	0x028F0E14 ADD X9, X31, 0x0
	0x028F0E18 ADD X10, X21, 0xF
	0x028F0E1C AND X10, X10, 0x1FFFFFFFF
	0x028F0E20 SUB X23, X9, X10
	0x028F0E24 ADD X31, X23, 0x0
	0x028F0E28 LDR X3, [X8]
	0x028F0E2C LDR X8, [X3]
	0x028F0E30 BLR X8
	0x028F0E34 LDR X19, [X19 + 0x20]
	0x028F0E38 MOV X0, X23
	0x028F0E3C MOV X2, X21
	0x028F0E40 LDR X8, [X19 + 0xC0]
	0x028F0E44 LDR X8, [X8 + 0x10]
	0x028F0E48 LDR W8, [X8 + 0x28]
	0x028F0E4C CMP W8, 0x0
	0x028F0E50 SUB X8, X29, 0x10
	0x028F0E54 CSEL X1, X20, X8, LT
	0x028F0E58 BL 0x3EB1AC0
	0x028F0E5C LDR X8, [X19 + 0xC0]
	0x028F0E60 MOV X0, X22
	0x028F0E64 MOV X2, X23
	0x028F0E68 MOV W3, W21
	0x028F0E6C LDR X8, [X8 + 0x18]
	0x028F0E70 LDR X1, [X8 + 0x80]
	0x028F0E74 BL 0x1C16D1C
	0x028F0E78 LDR X8, [X24 + 0x28]
	0x028F0E7C LDUR X9, [X29 - 0x8]
	0x028F0E80 CMP X8, X9
	0x028F0E84 B.NE 0x28F0EA0
	0x028F0E88 ADD X31, X29, 0x0
	0x028F0E8C LDP X20, X19, [X31 + 0x30]
	0x028F0E90 LDP X22, X21, [X31 + 0x20]
	0x028F0E94 LDP X24, X23, [X31 + 0x10]
	0x028F0E98 LDP X29, X30, [X31], #0x40
	0x028F0E9C RET
	0x028F0EA0 BL 0x3EB1B20
	0x028F0EA4 STP X29, X30, [X31 - 0x40]!
	0x028F0EA8 STR X23, [X31 + 0x10]
	0x028F0EAC STP X22, X21, [X31 + 0x20]
	0x028F0EB0 STP X20, X19, [X31 + 0x30]
	0x028F0EB4 ADD X29, X31, 0x0
	0x028F0EB8 SUB X31, X31, 0x10
	0x028F0EBC MRS X23, 0xC000
	0x028F0EC0 LDR X8, [X23 + 0x28]
	0x028F0EC4 MOV X21, X2
	0x028F0EC8 MOV X19, X0
	0x028F0ECC STUR X8, [X29 - 0x8]
	0x028F0ED0 LDR X8, [X2 + 0x20]
	0x028F0ED4 LDR X8, [X8 + 0xC0]
	0x028F0ED8 LDP X9, X8, [X8 + 0x10]
	0x028F0EDC LDR W22, [X9 + 0xFC]
	0x028F0EE0 ADD X9, X31, 0x0
	0x028F0EE4 ADD X10, X22, 0xF
	0x028F0EE8 AND X10, X10, 0x1FFFFFFFF
	0x028F0EEC SUB X20, X9, X10
	0x028F0EF0 ADD X31, X20, 0x0
	0x028F0EF4 LDR X1, [X8 + 0x80]
	0x028F0EF8 BL 0x1C16D18
	0x028F0EFC MOV X1, X0
	0x028F0F00 MOV X0, X20
	0x028F0F04 MOV X2, X22
	0x028F0F08 BL 0x3EB1AC0
	0x028F0F0C CBZ X19, 0x28F0F70
	0x028F0F10 LDR X8, [X21 + 0x20]
	0x028F0F14 LDR X8, [X8 + 0xC0]
	0x028F0F18 LDR X9, [X8 + 0x10]
	0x028F0F1C LDR X1, [X8 + 0x20]
	0x028F0F20 LDR W8, [X9 + 0x28]
	0x028F0F24 LDR X0, [X1]
	0x028F0F28 TBNZ X8, 0x1F, 0x28F0F30
	0x028F0F2C LDR X20, [X20]
	0x028F0F30 STUR X20, [X29 - 0x10]
	0x028F0F34 LDR X8, [X1 + 0x10]
	0x028F0F38 SUB X3, X29, 0x10
	0x028F0F3C MOV X2, X19
	0x028F0F40 MOV X4, X20
	0x028F0F44 BLR X8
	0x028F0F48 LDR X8, [X23 + 0x28]
	0x028F0F4C LDUR X9, [X29 - 0x8]
	0x028F0F50 CMP X8, X9
	0x028F0F54 B.NE 0x28F0F74
	0x028F0F58 ADD X31, X29, 0x0
	0x028F0F5C LDP X20, X19, [X31 + 0x30]
	0x028F0F60 LDP X22, X21, [X31 + 0x20]
	0x028F0F64 LDR X23, [X31 + 0x10]
	0x028F0F68 LDP X29, X30, [X31], #0x40
	0x028F0F6C RET
	0x028F0F70 BL 0x1C16F20
	0x028F0F74 BL 0x3EB1B20
	0x028F0F78 STP X29, X30, [X31 - 0x40]!
	0x028F0F7C STR X23, [X31 + 0x10]
	0x028F0F80 STP X22, X21, [X31 + 0x20]
	0x028F0F84 STP X20, X19, [X31 + 0x30]
	0x028F0F88 ADD X29, X31, 0x0
	0x028F0F8C SUB X31, X31, 0x10
	0x028F0F90 MRS X23, 0xC000
	0x028F0F94 LDR X8, [X23 + 0x28]
	0x028F0F98 MOV X21, X2
	0x028F0F9C MOV X19, X0
	0x028F0FA0 STUR X8, [X29 - 0x8]
	0x028F0FA4 LDR X8, [X2 + 0x20]
	0x028F0FA8 LDR X8, [X8 + 0xC0]
	0x028F0FAC LDP X9, X8, [X8 + 0x10]
	0x028F0FB0 LDR W22, [X9 + 0xFC]
	0x028F0FB4 ADD X9, X31, 0x0
	0x028F0FB8 ADD X10, X22, 0xF
	0x028F0FBC AND X10, X10, 0x1FFFFFFFF
	0x028F0FC0 SUB X20, X9, X10
	0x028F0FC4 ADD X31, X20, 0x0
	0x028F0FC8 LDR X1, [X8 + 0x80]
	0x028F0FCC BL 0x1C16D18
	0x028F0FD0 MOV X1, X0
	0x028F0FD4 MOV X0, X20
	0x028F0FD8 MOV X2, X22
	0x028F0FDC BL 0x3EB1AC0
	0x028F0FE0 CBZ X19, 0x28F1044
	0x028F0FE4 LDR X8, [X21 + 0x20]
	0x028F0FE8 LDR X8, [X8 + 0xC0]
	0x028F0FEC LDR X9, [X8 + 0x10]
	0x028F0FF0 LDR X1, [X8 + 0x20]
	0x028F0FF4 LDR W8, [X9 + 0x28]
	0x028F0FF8 LDR X0, [X1]
	0x028F0FFC TBNZ X8, 0x1F, 0x28F1004
	0x028F1000 LDR X20, [X20]
	0x028F1004 STUR X20, [X29 - 0x10]
	0x028F1008 LDR X8, [X1 + 0x10]
	0x028F100C SUB X3, X29, 0x10
	0x028F1010 MOV X2, X19
	0x028F1014 MOV X4, X20
	0x028F1018 BLR X8
	0x028F101C LDR X8, [X23 + 0x28]
	0x028F1020 LDUR X9, [X29 - 0x8]
	0x028F1024 CMP X8, X9
	0x028F1028 B.NE 0x28F1048
	0x028F102C ADD X31, X29, 0x0
	0x028F1030 LDP X20, X19, [X31 + 0x30]
	0x028F1034 LDP X22, X21, [X31 + 0x20]
	0x028F1038 LDR X23, [X31 + 0x10]
	0x028F103C LDP X29, X30, [X31], #0x40
	0x028F1040 RET
	0x028F1044 BL 0x1C16F20
	0x028F1048 BL 0x3EB1B20
	0x028F104C STR X30, [X31 - 0x30]!
	0x028F1050 STP X22, X21, [X31 + 0x10]
	0x028F1054 STP X20, X19, [X31 + 0x20]
	0x028F1058 LDR X8, [X2 + 0x8]
	0x028F105C STP X1, X2, [X0 + 0x20]
	0x028F1060 MOV X19, X0
	0x028F1064 MOV X20, X2
	0x028F1068 STR X8, [X0 + 0x10]
	0x028F106C LDRB W22, [X2 + 0x52]
	0x028F1070 STR X0, [X0 + 0x40]
	0x028F1074 MOV X0, X2

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X22, 0x1AEB000
	010 Move W8, [X22+3410]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x182B000
	019 Move X0, [X0+1760]
	020 Call 0x1C17CF4
	021 Move X0, 0x1804000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3410], W8
	026 Move [X31+64], X31
	027 Move [X31+72], X31
	028 Move [X31+80], X31
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Move TEMP, X21
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {153}
	036 Move X8, [X19+32]
	037 Move X21, [X20+16]
	038 Move X8, [X8+192]
	039 Move X0, [X8+32]
	040 Move W8, [X0+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X8, [X19+32]
	051 Move X8, [X8+192]
	052 Move X0, [X8+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Compare X21, 0
	060 JumpIfEqual {420}
	061 Move X8, [X19+32]
	062 Move X9, [X0+184]
	063 Move X0, X21
	064 Move X8, [X8+192]
	065 Move X1, [X9]
	066 Move X2, [X8+136]
	067 Call List`1<Object>.AddRange, X0, X1
	068 Move X8, [X19+32]
	069 Move X8, [X8+192]
	070 Move X0, [X8+32]
	071 Move W8, [X0+309]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {77}
	076 Call 0x1C5D684
	077 Move X8, [X0+184]
	078 Move X0, [X8+8]
	079 Compare X0, 0
	080 JumpIfEqual {420}
	081 Move X8, [X19+32]
	082 Move X8, [X8+192]
	083 Move X1, [X8+208]
	084 Add X8, X31, 8
	085 Call List`1<Object>.GetEnumerator, X0
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move X8, [X31+24]
	088 Move [X31+4], V0
	089 Move [X31+80], X8
	090 Move X8, [X19+32]
	091 Move X8, [X8+192]
	092 Move X1, [X8+256]
	093 Add X0, X31, 64
	094 Call Enumerator<Object>.MoveNext, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {142}
	099 Move X22, [X31+80]
	100 Compare X22, 0
	101 JumpIfEqual {414}
	102 Move X8, [X19+32]
	103 Move X21, [X20+16]
	104 Move X8, [X8+192]
	105 Move X1, [X8+240]
	106 Move W8, [X1+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {114}
	111 Move X0, X1
	112 Call 0x1C5D684
	113 Move X1, X0
	114 Move X8, [X22]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X22
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X22
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X1, X0
	135 Compare X21, 0
	136 JumpIfEqual {415}
	137 Move X8, [X19+32]
	138 Move X8, [X8+192]
	139 Move X2, [X8+136]
	140 Move X0, X21
	141 Call List`1<Object>.AddRange, X0, X1
	142 Move X22, X31
	143 Move W21, W31
	144 Move X8, [X19+32]
	145 Add X0, X31, 64
	146 Move X8, [X8+192]
	147 Move X1, [X8+264]
	148 Call Enumerator<Object>.Dispose, X0
	149 Compare X22, 0
	150 JumpIfNotEqual {421}
	151 Compare W21, 0
	152 JumpIfEqual {403}
	153 Move X8, [X19+32]
	154 Move X8, [X8+192]
	155 Move X0, [X8+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move W8, [X0+224]
	163 Compare W8, 0
	164 JumpIfNotEqual {166}
	165 Call 0x1C17DFC
	166 Move X8, [X19+32]
	167 Move X8, [X8+192]
	168 Move X0, [X8+32]
	169 Move W8, [X0+309]
	170 Move TEMP, X8
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfEqual {175}
	174 Call 0x1C5D684
	175 Move X8, [X0+184]
	176 Move X0, [X8]
	177 Compare X0, 0
	178 JumpIfEqual {420}
	179 Move X8, [X19+32]
	180 Move X23, 0x182B000
	181 Move X24, 0x1804000
	182 Move X8, [X8+192]
	183 Move X1, [X8+152]
	184 Move X23, [X23+1760]
	185 Move X24, [X24+1432]
	186 Add X8, X31, 8
	187 Call List`1<Object>.GetEnumerator, X0
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 Move X8, [X31+24]
	190 Move [X31+2], V0
	191 Move [X31+48], X8
	192 Move X8, [X19+32]
	193 Move X8, [X8+192]
	194 Move X1, [X8+192]
	195 Add X0, X31, 32
	196 Call Enumerator<Object>.MoveNext, X0
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {261}
	201 Move X21, [X31+48]
	202 Compare X21, 0
	203 JumpIfEqual {209}
	204 Move X9, [X21]
	205 Move X8, [X23]
	206 Move W11, [X9+304]
	207 Move W10, [X8+304]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X22, X31
	210 Move X9, [X9+200]
	211 Add X9, X9, X10
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 Move X0, [X24]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X22
	221 Move X1, X31
	222 Move X2, X31
	223 Call Object.op_Inequality, X0, X1
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {237}
	228 Compare X22, 0
	229 JumpIfEqual {416}
	230 Move X0, X22
	231 Move X1, X31
	232 Call Behaviour.get_enabled, X0
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {192}
	237 Move X0, [X20+16]
	238 Compare X0, 0
	239 JumpIfEqual {412}
	240 Move X8, [X19+32]
	241 Move W10, [X0+28]
	242 Move X9, [X8+192]
	243 Move X8, [X0+16]
	244 Add W10, W10, 1
	245 Move X9, [X9+272]
	246 Move [X0+28], W10
	247 Compare X8, 0
	248 JumpIfEqual {413}
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Move W11, [X8+24]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Add W9, W10, 1
	253 Add X8, X8, X10
	254 Move [X0+24], W9
	255 Move [X8+32], X21
	256 Move X8, [X9+32]
	257 Move X8, [X8+192]
	258 Move X2, [X8+112]
	259 Move X1, X21
	260 Call List`1<Object>.AddWithResize, X0, X1
	261 Move X22, X31
	262 Move W21, 9
	263 Move X8, [X19+32]
	264 Add X0, X31, 32
	265 Move X8, [X8+192]
	266 Move X1, [X8+200]
	267 Call Enumerator<Object>.Dispose, X0
	268 Compare X22, 0
	269 JumpIfNotEqual {421}
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Compare W21, 0
	272 JumpIfNotEqual {403}
	273 Move X8, [X19+32]
	274 Move X8, [X8+192]
	275 Move X0, [X8+32]
	276 Move W8, [X0+309]
	277 Move TEMP, X8
	278 And TEMP, TEMP, 1
	279 Compare TEMP, 1
	280 JumpIfEqual {282}
	281 Call 0x1C5D684
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X8, [X19+32]
	287 Move X8, [X8+192]
	288 Move X0, [X8+32]
	289 Move W8, [X0+309]
	290 Move TEMP, X8
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfEqual {295}
	294 Call 0x1C5D684
	295 Move X8, [X0+184]
	296 Move X0, [X8+8]
	297 Compare X0, 0
	298 JumpIfEqual {420}
	299 Move X8, [X19+32]
	300 Move X8, [X8+192]
	301 Move X1, [X8+208]
	302 Add X8, X31, 8
	303 Call List`1<Object>.GetEnumerator, X0
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 Move X8, [X31+24]
	306 Move [X31+4], V0
	307 Move [X31+80], X8
	308 Move X8, [X19+32]
	309 Move X8, [X8+192]
	310 Move X1, [X8+256]
	311 Add X0, X31, 64
	312 Call Enumerator<Object>.MoveNext, X0
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {395}
	317 Move X21, [X31+80]
	318 Compare X21, 0
	319 JumpIfEqual {325}
	320 Move X9, [X21]
	321 Move X8, [X23]
	322 Move W11, [X9+304]
	323 Move W10, [X8+304]
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X22, X31
	326 Move X9, [X9+200]
	327 Add X9, X9, X10
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 NotImplemented "Instruction CMP not yet implemented."
	330 NotImplemented "Instruction CSEL not yet implemented."
	331 Move X0, [X24]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Move X0, X22
	337 Move X1, X31
	338 Move X2, X31
	339 Call Object.op_Inequality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {353}
	344 Compare X22, 0
	345 JumpIfEqual {419}
	346 Move X0, X22
	347 Move X1, X31
	348 Call Behaviour.get_enabled, X0
	349 Move TEMP, X0
	350 And TEMP, TEMP, 1
	351 Compare TEMP, 1
	352 JumpIfNotEqual {308}
	353 Compare X21, 0
	354 JumpIfEqual {417}
	355 Move X8, [X19+32]
	356 Move X22, [X20+16]
	357 Move X8, [X8+192]
	358 Move X1, [X8+240]
	359 Move W8, [X1+309]
	360 Move TEMP, X8
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {367}
	364 Move X0, X1
	365 Call 0x1C5D684
	366 Move X1, X0
	367 Move X8, [X21]
	368 NotImplemented "Instruction LDRH not yet implemented."
	369 Compare X9, 0
	370 JumpIfEqual {377}
	371 Move X10, [X8+176]
	372 Add X10, X10, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X9, X9, 1
	376 Add X10, X10, 16
	377 Move X0, X21
	378 Move W2, W31
	379 Call 0x1C5D788
	380 NotImplemented "Instruction LDRSW not yet implemented."
	381 Add X8, X8, X9
	382 Add X0, X8, 312
	383 Move X8, [X0]
	384 Move X1, [X0+8]
	385 Move X0, X21
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move X1, X0
	388 Compare X22, 0
	389 JumpIfEqual {418}
	390 Move X8, [X19+32]
	391 Move X8, [X8+192]
	392 Move X2, [X8+136]
	393 Move X0, X22
	394 Call List`1<Object>.AddRange, X0, X1
	395 Move X20, X31
	396 Move X8, [X19+32]
	397 Add X0, X31, 64
	398 Move X8, [X8+192]
	399 Move X1, [X8+264]
	400 Call Enumerator<Object>.Dispose, X0
	401 Compare X20, 0
	402 JumpIfNotEqual {423}
	403 Move X20, [X31+144]
	404 Move X19, [X31+152]
	405 Move X22, [X31+128]
	406 Move X21, [X31+136]
	407 Move X24, [X31+112]
	408 Move X23, [X31+120]
	409 Move X30, [X31+96]
	410 Add X31, X31, 160
	411 Return 
	412 Call 0x1C17F20
	413 Call 0x1C17F20
	414 Call 0x1C17F20
	415 Call 0x1C17F20
	416 Call 0x1C17F20
	417 Call 0x1C17F20
	418 Call 0x1C17F20
	419 Call 0x1C17F20
	420 Call 0x1C17F20
	421 Move X0, X22
	422 Call 0x1C17F18
	423 Move X0, X20
	424 Call 0x1C17F18
	425 Move X21, X0
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Move X0, X21
	428 Call 0x3EB2AD0
	429 Move X22, [X0]
	430 Call 0x3EB2AE0
	431 Move W21, W31
	432 Move X22, X31
	433 Move X21, X0
	434 Move X8, [X19+32]
	435 Move X8, [X8+192]
	436 Move X1, [X8+200]
	437 Add X0, X31, 32
	438 Call Enumerator<Object>.Dispose, X0
	439 Compare X22, 0
	440 JumpIfEqual {476}
	441 Move X0, X22
	442 Call 0x1C17F18
	443 Move X21, X0
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Move X0, X21
	446 Call 0x3EB2AD0
	447 Move X20, [X0]
	448 Call 0x3EB2AE0
	449 Move X20, X31
	450 Move X21, X0
	451 Move X8, [X19+32]
	452 Move X8, [X8+192]
	453 Move X1, [X8+264]
	454 Add X0, X31, 64
	455 Call Enumerator<Object>.Dispose, X0
	456 Compare X20, 0
	457 JumpIfEqual {476}
	458 Move X0, X20
	459 Call 0x1C17F18
	460 Move X21, X0
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move X0, X21
	463 Call 0x3EB2AD0
	464 Move X22, [X0]
	465 Call 0x3EB2AE0
	466 Move W21, 1
	467 Move X22, X31
	468 Move X21, X0
	469 Move X8, [X19+32]
	470 Move X8, [X8+192]
	471 Move X1, [X8+264]
	472 Add X0, X31, 64
	473 Call Enumerator<Object>.Dispose, X0
	474 Compare X22, 0
	475 JumpIfNotEqual {478}
	476 Move X0, X21
	477 Call 0x1D2D690
	478 Move X0, X22
	479 Call 0x1C17F18
	480 Call 0x1991590

Method: System.Void FilteredCopyToMaster(System.Boolean includeDisabled, TRootType requiredRoot)

Disassembly:
	0x028F1078 MOV X21, X1
	0x028F107C BL 0x1C16D84
	0x028F1080 TBZ X0, 0x0, 0x28F1098
	0x028F1084 CMP W22, 0x1
	0x028F1088 B.NE 0x28F10A0
	0x028F108C ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F1090 ADD X8, X8, 0xCE0
	0x028F1094 B 0x28F1114
	0x028F1098 CBZ W22, 0x28F10B4
	0x028F109C CBZ X21, 0x28F1134
	0x028F10A0 LDR X8, [X19 + 0x10]
	0x028F10A4 LDR X9, [X19 + 0x20]
	0x028F10A8 STR X8, [X19 + 0x18]
	0x028F10AC STR X9, [X19 + 0x40]
	0x028F10B0 B 0x28F1118
	0x028F10B4 LDRB W8, [X19 + 0x70]
	0x028F10B8 CBZ W8, 0x28F10E4
	0x028F10BC MOV X0, X20
	0x028F10C0 BL 0x1C16D7C
	0x028F10C4 MOV W21, W0
	0x028F10C8 MOV X0, X20
	0x028F10CC BL 0x1C17238
	0x028F10D0 TBZ X21, 0x0, 0x28F10F0
	0x028F10D4 TBZ X0, 0x0, 0x28F1100
	0x028F10D8 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F10DC ADD X8, X8, 0xDDC
	0x028F10E0 B 0x28F1114
	0x028F10E4 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F10E8 ADD X8, X8, 0xCC0
	0x028F10EC B 0x28F1114
	0x028F10F0 TBZ X0, 0x0, 0x28F110C
	0x028F10F4 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F10F8 ADD X8, X8, 0xD1C
	0x028F10FC B 0x28F1114
	0x028F1100 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F1104 ADD X8, X8, 0xDA0
	0x028F1108 B 0x28F1114
	0x028F110C ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F1110 ADD X8, X8, 0xCF0
	0x028F1114 STR X8, [X19 + 0x18]
	0x028F1118 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F111C ADD X8, X8, 0xC78
	0x028F1120 STR X8, [X19 + 0x38]
	0x028F1124 LDP X20, X19, [X31 + 0x20]
	0x028F1128 LDP X22, X21, [X31 + 0x10]
	0x028F112C LDR X30, [X31], #0x30
	0x028F1130 RET
	0x028F1134 ADRP X1, 0xFFFFFFFFFE22A000
	0x028F1138 ADD X1, X1, 0xEE3
	0x028F113C MOV X0, X31
	0x028F1140 BL 0x1C16F3C
	0x028F1144 MOV X1, X31
	0x028F1148 BL 0x1C16DEC
	0x028F114C LDR X8, [X0 + 0x40]
	0x028F1150 LDR X3, [X0 + 0x18]
	0x028F1154 LDR X2, [X0 + 0x28]
	0x028F1158 MOV X0, X8
	0x028F115C BR X3
	0x028F1160 SUB X31, X31, 0x20
	0x028F1164 STP X31, X30, [X31 + 0x8]
	0x028F1168 STR X1, [X31]
	0x028F116C ADD X1, X31, 0x0
	0x028F1170 BL 0x1C16CB0
	0x028F1174 LDR X30, [X31 + 0x10]
	0x028F1178 ADD X31, X31, 0x20
	0x028F117C RET
	0x028F1180 MOV X0, X1
	0x028F1184 MOV X1, X31
	0x028F1188 B 0x1C16CB4
	0x028F118C STR X30, [X31 - 0x30]!
	0x028F1190 STP X22, X21, [X31 + 0x10]
	0x028F1194 STP X20, X19, [X31 + 0x20]
	0x028F1198 LDR X8, [X2 + 0x8]
	0x028F119C STP X1, X2, [X0 + 0x20]
	0x028F11A0 MOV X19, X0
	0x028F11A4 MOV X20, X2
	0x028F11A8 STR X8, [X0 + 0x10]
	0x028F11AC LDRB W22, [X2 + 0x52]
	0x028F11B0 STR X0, [X0 + 0x40]
	0x028F11B4 MOV X0, X2
	0x028F11B8 MOV X21, X1
	0x028F11BC BL 0x1C16D84
	0x028F11C0 TBZ X0, 0x0, 0x28F11D8
	0x028F11C4 CMP W22, 0x1
	0x028F11C8 B.NE 0x28F11E0
	0x028F11CC ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F11D0 ADD X8, X8, 0xED0
	0x028F11D4 B 0x28F1254
	0x028F11D8 CBZ W22, 0x28F11F4
	0x028F11DC CBZ X21, 0x28F1274
	0x028F11E0 LDR X8, [X19 + 0x10]
	0x028F11E4 LDR X9, [X19 + 0x20]
	0x028F11E8 STR X8, [X19 + 0x18]
	0x028F11EC STR X9, [X19 + 0x40]
	0x028F11F0 B 0x28F1258
	0x028F11F4 LDRB W8, [X19 + 0x70]
	0x028F11F8 CBZ W8, 0x28F1224
	0x028F11FC MOV X0, X20
	0x028F1200 BL 0x1C16D7C
	0x028F1204 MOV W21, W0
	0x028F1208 MOV X0, X20
	0x028F120C BL 0x1C17238
	0x028F1210 TBZ X21, 0x0, 0x28F1230
	0x028F1214 TBZ X0, 0x0, 0x28F1240
	0x028F1218 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F121C ADD X8, X8, 0xFCC
	0x028F1220 B 0x28F1254
	0x028F1224 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F1228 ADD X8, X8, 0xEB0
	0x028F122C B 0x28F1254
	0x028F1230 TBZ X0, 0x0, 0x28F124C
	0x028F1234 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F1238 ADD X8, X8, 0xF0C
	0x028F123C B 0x28F1254
	0x028F1240 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F1244 ADD X8, X8, 0xF90
	0x028F1248 B 0x28F1254
	0x028F124C ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F1250 ADD X8, X8, 0xEE0
	0x028F1254 STR X8, [X19 + 0x18]
	0x028F1258 ADRP X8, 0xFFFFFFFFFF0D2000
	0x028F125C ADD X8, X8, 0xE68
	0x028F1260 STR X8, [X19 + 0x38]
	0x028F1264 LDP X20, X19, [X31 + 0x20]
	0x028F1268 LDP X22, X21, [X31 + 0x10]
	0x028F126C LDR X30, [X31], #0x30
	0x028F1270 RET
	0x028F1274 ADRP X1, 0xFFFFFFFFFE22A000
	0x028F1278 ADD X1, X1, 0xEE3
	0x028F127C MOV X0, X31
	0x028F1280 BL 0x1C16F3C
	0x028F1284 MOV X1, X31
	0x028F1288 BL 0x1C16DEC
	0x028F128C LDR X8, [X0 + 0x40]
	0x028F1290 LDR X3, [X0 + 0x18]
	0x028F1294 LDR X2, [X0 + 0x28]
	0x028F1298 MOV X0, X8
	0x028F129C BR X3
	0x028F12A0 SUB X31, X31, 0x20
	0x028F12A4 STP X31, X30, [X31 + 0x8]
	0x028F12A8 STR X1, [X31]
	0x028F12AC ADD X1, X31, 0x0
	0x028F12B0 BL 0x1C16CB0
	0x028F12B4 LDR X30, [X31 + 0x10]
	0x028F12B8 ADD X31, X31, 0x20
	0x028F12BC RET
	0x028F12C0 MOV X0, X1
	0x028F12C4 MOV X1, X31
	0x028F12C8 B 0x1C16CB4
	0x028F12CC STR X30, [X31 - 0x30]!
	0x028F12D0 STP X22, X21, [X31 + 0x10]
	0x028F12D4 STP X20, X19, [X31 + 0x20]
	0x028F12D8 LDR X8, [X2 + 0x8]
	0x028F12DC STP X1, X2, [X0 + 0x20]
	0x028F12E0 MOV X19, X0
	0x028F12E4 MOV X20, X2
	0x028F12E8 STR X8, [X0 + 0x10]
	0x028F12EC LDRB W22, [X2 + 0x52]
	0x028F12F0 STR X0, [X0 + 0x40]
	0x028F12F4 MOV X0, X2
	0x028F12F8 MOV X21, X1
	0x028F12FC BL 0x1C16D84
	0x028F1300 TBZ X0, 0x0, 0x28F1318
	0x028F1304 CMP W22, 0x1
	0x028F1308 B.NE 0x28F1320
	0x028F130C ADRP X8, 0xFFFFFFFFFF0D3000
	0x028F1310 ADD X8, X8, 0xC0
	0x028F1314 B 0x28F1394
	0x028F1318 CBZ W22, 0x28F1334
	0x028F131C CBZ X21, 0x28F13B4
	0x028F1320 LDR X8, [X19 + 0x10]
	0x028F1324 LDR X9, [X19 + 0x20]
	0x028F1328 STR X8, [X19 + 0x18]
	0x028F132C STR X9, [X19 + 0x40]
	0x028F1330 B 0x28F1398
	0x028F1334 LDRB W8, [X19 + 0x70]
	0x028F1338 CBZ W8, 0x28F1364
	0x028F133C MOV X0, X20
	0x028F1340 BL 0x1C16D7C
	0x028F1344 MOV W21, W0
	0x028F1348 MOV X0, X20
	0x028F134C BL 0x1C17238
	0x028F1350 TBZ X21, 0x0, 0x28F1370
	0x028F1354 TBZ X0, 0x0, 0x28F1380
	0x028F1358 ADRP X8, 0xFFFFFFFFFF0D3000
	0x028F135C ADD X8, X8, 0x1BC
	0x028F1360 B 0x28F1394
	0x028F1364 ADRP X8, 0xFFFFFFFFFF0D3000
	0x028F1368 ADD X8, X8, 0xA0
	0x028F136C B 0x28F1394
	0x028F1370 TBZ X0, 0x0, 0x28F138C
	0x028F1374 ADRP X8, 0xFFFFFFFFFF0D3000
	0x028F1378 ADD X8, X8, 0xFC
	0x028F137C B 0x28F1394
	0x028F1380 ADRP X8, 0xFFFFFFFFFF0D3000
	0x028F1384 ADD X8, X8, 0x180
	0x028F1388 B 0x28F1394
	0x028F138C ADRP X8, 0xFFFFFFFFFF0D3000
	0x028F1390 ADD X8, X8, 0xD0
	0x028F1394 STR X8, [X19 + 0x18]
	0x028F1398 ADRP X8, 0xFFFFFFFFFF0D3000
	0x028F139C ADD X8, X8, 0x58
	0x028F13A0 STR X8, [X19 + 0x38]
	0x028F13A4 LDP X20, X19, [X31 + 0x20]
	0x028F13A8 LDP X22, X21, [X31 + 0x10]
	0x028F13AC LDR X30, [X31], #0x30
	0x028F13B0 RET
	0x028F13B4 ADRP X1, 0xFFFFFFFFFE22A000
	0x028F13B8 ADD X1, X1, 0xEE3
	0x028F13BC MOV X0, X31
	0x028F13C0 BL 0x1C16F3C
	0x028F13C4 MOV X1, X31
	0x028F13C8 BL 0x1C16DEC
	0x028F13CC LDR X8, [X0 + 0x40]
	0x028F13D0 LDR X3, [X0 + 0x18]
	0x028F13D4 LDR X2, [X0 + 0x28]
	0x028F13D8 MOV X0, X8
	0x028F13DC BR X3
	0x028F13E0 SUB X31, X31, 0x20
	0x028F13E4 STP X31, X30, [X31 + 0x8]
	0x028F13E8 STR X1, [X31]
	0x028F13EC ADD X1, X31, 0x0
	0x028F13F0 BL 0x1C16CB0
	0x028F13F4 LDR X30, [X31 + 0x10]
	0x028F13F8 ADD X31, X31, 0x20
	0x028F13FC RET
	0x028F1400 MOV X0, X1
	0x028F1404 MOV X1, X31
	0x028F1408 B 0x1C16CB4
	0x028F140C LDR W0, [X0 + 0x8]
	0x028F1410 RET
	0x028F1414 STR X30, [X31 - 0x20]!
	0x028F1418 STP X20, X19, [X31 + 0x10]
	0x028F141C LDR X8, [X2 + 0x20]
	0x028F1420 MOV W19, W1
	0x028F1424 MOV X20, X0
	0x028F1428 LDRB W9, [X8 + 0x135]
	0x028F142C TBNZ X9, 0x0, 0x28F143C
	0x028F1430 MOV X0, X8
	0x028F1434 BL 0x1C5C684
	0x028F1438 MOV X8, X0
	0x028F143C LDR X8, [X8 + 0xC0]
	0x028F1440 ADD X0, X20, 0x8
	0x028F1444 MOV W1, W19
	0x028F1448 LDP X20, X19, [X31 + 0x10]
	0x028F144C LDR X2, [X8 + 0x10]
	0x028F1450 LDR X30, [X31], #0x20
	0x028F1454 B 0x2DEA3EC
	0x028F1458 STP X30, X21, [X31 - 0x20]!
	0x028F145C STP X20, X19, [X31 + 0x10]
	0x028F1460 LDR X8, [X1 + 0x20]
	0x028F1464 MOV X20, X1
	0x028F1468 MOV X19, X0
	0x028F146C ADD X21, X0, 0x8
	0x028F1470 LDRB W9, [X8 + 0x135]
	0x028F1474 TBNZ X9, 0x0, 0x28F1484
	0x028F1478 MOV X0, X8
	0x028F147C BL 0x1C5C684
	0x028F1480 MOV X8, X0
	0x028F1484 LDR X8, [X8 + 0xC0]
	0x028F1488 MOV X0, X21
	0x028F148C LDR X1, [X8 + 0x28]
	0x028F1490 BL 0x2DEA524
	0x028F1494 LDR X0, [X20 + 0x20]
	0x028F1498 ADD X21, X19, 0x20
	0x028F149C LDRB W8, [X0 + 0x135]
	0x028F14A0 TBNZ X8, 0x0, 0x28F14A8
	0x028F14A4 BL 0x1C5C684
	0x028F14A8 LDR X8, [X0 + 0xC0]
	0x028F14AC MOV X0, X21
	0x028F14B0 LDR X1, [X8 + 0x28]
	0x028F14B4 BL 0x2DEA524
	0x028F14B8 LDR X0, [X20 + 0x20]
	0x028F14BC LDRB W8, [X0 + 0x135]
	0x028F14C0 TBNZ X8, 0x0, 0x28F14C8
	0x028F14C4 BL 0x1C5C684
	0x028F14C8 LDR X8, [X0 + 0xC0]
	0x028F14CC ADD X0, X19, 0x38
	0x028F14D0 LDP X20, X19, [X31 + 0x10]
	0x028F14D4 LDR X1, [X8 + 0x28]
	0x028F14D8 LDP X30, X21, [X31], #0x20
	0x028F14DC B 0x2DEA524
	0x028F14E0 SUB X31, X31, 0x90
	0x028F14E4 STP X30, X23, [X31 + 0x60]
	0x028F14E8 STP X22, X21, [X31 + 0x70]
	0x028F14EC STP X20, X19, [X31 + 0x80]
	0x028F14F0 LDRB W8, [X0]
	0x028F14F4 MOV X20, X2
	0x028F14F8 MOV X21, X0
	0x028F14FC MOV X19, X1
	0x028F1500 CBZ W8, 0x28F15C8
	0x028F1504 LDR X8, [X21 + 0x30]
	0x028F1508 LDR V0, [X21 + 0x2]
	0x028F150C STR X8, [X31 + 0x30]
	0x028F1510 STR V0, [X31 + 0x2]
	0x028F1514 LDR X0, [X20 + 0x20]
	0x028F1518 LDRB W8, [X0 + 0x135]
	0x028F151C TBNZ X8, 0x0, 0x28F1524
	0x028F1520 BL 0x1C5C684
	0x028F1524 LDR X8, [X0 + 0xC0]
	0x028F1528 LDR V0, [X31 + 0x2]
	0x028F152C LDR X9, [X31 + 0x30]
	0x028F1530 ADD X0, X31, 0x40
	0x028F1534 LDR X2, [X8 + 0x30]
	0x028F1538 MOV X1, X19
	0x028F153C STR V0, [X31 + 0x4]
	0x028F1540 STR X9, [X31 + 0x50]
	0x028F1544 BL 0x21FACBC
	0x028F1548 TBNZ X0, 0x0, 0x28F163C
	0x028F154C LDR X0, [X20 + 0x20]
	0x028F1550 ADD X22, X21, 0x38
	0x028F1554 LDRB W8, [X0 + 0x135]
	0x028F1558 TBNZ X8, 0x0, 0x28F1560
	0x028F155C BL 0x1C5C684
	0x028F1560 LDR X8, [X0 + 0xC0]
	0x028F1564 MOV X0, X22
	0x028F1568 MOV X1, X19
	0x028F156C ADD X21, X21, 0x20
	0x028F1570 LDR X2, [X8 + 0x38]
	0x028F1574 BL 0x2DEA700
	0x028F1578 ADDS W31, W0, 0x1
	0x028F157C B.EQ 0x28F15A8
	0x028F1580 MOV W23, W0
	0x028F1584 LDR X0, [X20 + 0x20]
	0x028F1588 LDRB W8, [X0 + 0x135]
	0x028F158C TBNZ X8, 0x0, 0x28F1594
	0x028F1590 BL 0x1C5C684
	0x028F1594 LDR X8, [X0 + 0xC0]
	0x028F1598 MOV X0, X22
	0x028F159C MOV W1, W23
	0x028F15A0 LDR X2, [X8 + 0x40]
	0x028F15A4 BL 0x2DEB168
	0x028F15A8 LDR X0, [X20 + 0x20]
	0x028F15AC LDRB W8, [X0 + 0x135]
	0x028F15B0 TBNZ X8, 0x0, 0x28F15B8
	0x028F15B4 BL 0x1C5C684
	0x028F15B8 LDR X8, [X0 + 0xC0]
	0x028F15BC MOVZ W2, 0xA
	0x028F15C0 MOV X0, X21
	0x028F15C4 B 0x28F1630
	0x028F15C8 LDR X8, [X21 + 0x18]
	0x028F15CC LDUR V0, [X21 + 0x8]
	0x028F15D0 STR X8, [X31 + 0x10]
	0x028F15D4 STR V0, [X31]
	0x028F15D8 LDR X0, [X20 + 0x20]
	0x028F15DC LDRB W8, [X0 + 0x135]
	0x028F15E0 TBNZ X8, 0x0, 0x28F15E8
	0x028F15E4 BL 0x1C5C684
	0x028F15E8 LDR X8, [X0 + 0xC0]
	0x028F15EC LDR V0, [X31]
	0x028F15F0 LDR X9, [X31 + 0x10]
	0x028F15F4 ADD X0, X31, 0x40
	0x028F15F8 LDR X2, [X8 + 0x30]
	0x028F15FC MOV X1, X19
	0x028F1600 STR V0, [X31 + 0x4]
	0x028F1604 STR X9, [X31 + 0x50]
	0x028F1608 BL 0x21FACBC
	0x028F160C TBNZ X0, 0x0, 0x28F163C
	0x028F1610 LDR X0, [X20 + 0x20]
	0x028F1614 ADD X20, X21, 0x8
	0x028F1618 LDRB W8, [X0 + 0x135]
	0x028F161C TBNZ X8, 0x0, 0x28F1624
	0x028F1620 BL 0x1C5C684
	0x028F1624 LDR X8, [X0 + 0xC0]
	0x028F1628 MOVZ W2, 0x4
	0x028F162C MOV X0, X20
	0x028F1630 LDR X3, [X8 + 0x48]
	0x028F1634 MOV X1, X19
	0x028F1638 BL 0x2DEA8C8
	0x028F163C LDP X20, X19, [X31 + 0x80]
	0x028F1640 LDP X22, X21, [X31 + 0x70]
	0x028F1644 LDP X30, X23, [X31 + 0x60]
	0x028F1648 ADD X31, X31, 0x90
	0x028F164C RET
	0x028F1650 SUB X31, X31, 0x70
	0x028F1654 STP X30, X23, [X31 + 0x40]
	0x028F1658 STP X22, X21, [X31 + 0x50]
	0x028F165C STP X20, X19, [X31 + 0x60]
	0x028F1660 LDRB W8, [X0]
	0x028F1664 MOV X20, X2
	0x028F1668 MOV X21, X0
	0x028F166C MOV X19, X1
	0x028F1670 CBZ W8, 0x28F1744
	0x028F1674 LDR X8, [X21 + 0x48]
	0x028F1678 LDUR V0, [X21 + 0x38]
	0x028F167C STR X8, [X31 + 0x10]
	0x028F1680 STR V0, [X31]
	0x028F1684 LDR X0, [X20 + 0x20]
	0x028F1688 LDRB W8, [X0 + 0x135]
	0x028F168C TBNZ X8, 0x0, 0x28F1694
	0x028F1690 BL 0x1C5C684
	0x028F1694 LDR X8, [X0 + 0xC0]
	0x028F1698 LDR V0, [X31]
	0x028F169C LDR X9, [X31 + 0x10]
	0x028F16A0 ADD X0, X31, 0x20
	0x028F16A4 LDR X2, [X8 + 0x30]
	0x028F16A8 MOV X1, X19
	0x028F16AC STR V0, [X31 + 0x2]
	0x028F16B0 STR X9, [X31 + 0x30]
	0x028F16B4 BL 0x21FACBC
	0x028F16B8 TBNZ X0, 0x0, 0x28F17A8
	0x028F16BC LDR X0, [X20 + 0x20]
	0x028F16C0 ADD X22, X21, 0x20
	0x028F16C4 LDRB W8, [X0 + 0x135]
	0x028F16C8 TBNZ X8, 0x0, 0x28F16D0
	0x028F16CC BL 0x1C5C684
	0x028F16D0 LDR X8, [X0 + 0xC0]
	0x028F16D4 MOV X0, X22
	0x028F16D8 MOV X1, X19
	0x028F16DC ADD X21, X21, 0x38
	0x028F16E0 LDR X2, [X8 + 0x38]
	0x028F16E4 BL 0x2DEA700
	0x028F16E8 ADDS W31, W0, 0x1
	0x028F16EC B.EQ 0x28F1718
	0x028F16F0 MOV W23, W0
	0x028F16F4 LDR X0, [X20 + 0x20]
	0x028F16F8 LDRB W8, [X0 + 0x135]
	0x028F16FC TBNZ X8, 0x0, 0x28F1704
	0x028F1700 BL 0x1C5C684
	0x028F1704 LDR X8, [X0 + 0xC0]
	0x028F1708 MOV X0, X22
	0x028F170C MOV W1, W23
	0x028F1710 LDR X2, [X8 + 0x40]
	0x028F1714 BL 0x2DEB168
	0x028F1718 LDR X0, [X20 + 0x20]
	0x028F171C LDRB W8, [X0 + 0x135]
	0x028F1720 TBNZ X8, 0x0, 0x28F1728
	0x028F1724 BL 0x1C5C684
	0x028F1728 LDR X8, [X0 + 0xC0]
	0x028F172C MOVZ W2, 0xA
	0x028F1730 MOV X0, X21
	0x028F1734 MOV X1, X19
	0x028F1738 LDR X3, [X8 + 0x48]
	0x028F173C BL 0x2DEA8C8
	0x028F1740 B 0x28F17A8
	0x028F1744 LDR X0, [X20 + 0x20]
	0x028F1748 ADD X21, X21, 0x8
	0x028F174C LDRB W8, [X0 + 0x135]
	0x028F1750 TBNZ X8, 0x0, 0x28F1758
	0x028F1754 BL 0x1C5C684
	0x028F1758 LDR X8, [X0 + 0xC0]
	0x028F175C MOV X0, X21
	0x028F1760 MOV X1, X19
	0x028F1764 LDR X2, [X8 + 0x38]
	0x028F1768 BL 0x2DEA700
	0x028F176C TBNZ X0, 0x1F, 0x28F17A8
	0x028F1770 MOV W19, W0
	0x028F1774 LDR X0, [X20 + 0x20]
	0x028F1778 LDRB W8, [X0 + 0x135]
	0x028F177C TBNZ X8, 0x0, 0x28F1784
	0x028F1780 BL 0x1C5C684
	0x028F1784 LDR X8, [X0 + 0xC0]
	0x028F1788 MOV X0, X21
	0x028F178C MOV W1, W19
	0x028F1790 LDP X20, X19, [X31 + 0x60]
	0x028F1794 LDR X2, [X8 + 0x50]
	0x028F1798 LDP X22, X21, [X31 + 0x50]
	0x028F179C LDP X30, X23, [X31 + 0x40]
	0x028F17A0 ADD X31, X31, 0x70
	0x028F17A4 B 0x2DEAE6C
	0x028F17A8 LDP X20, X19, [X31 + 0x60]
	0x028F17AC LDP X22, X21, [X31 + 0x50]
	0x028F17B0 LDP X30, X23, [X31 + 0x40]
	0x028F17B4 ADD X31, X31, 0x70
	0x028F17B8 RET
	0x028F17BC MOVZ W8, 0x1
	0x028F17C0 STRB W8, [X0]
	0x028F17C4 RET
	0x028F17C8 STR X30, [X31 - 0x40]!
	0x028F17CC STP X24, X23, [X31 + 0x10]
	0x028F17D0 STP X22, X21, [X31 + 0x20]
	0x028F17D4 STP X20, X19, [X31 + 0x30]
	0x028F17D8 STRB W31, [X0]
	0x028F17DC MOV X19, X0
	0x028F17E0 LDR W8, [X19 + 0x38]!
	0x028F17E4 MOV X21, X0
	0x028F17E8 MOV X20, X1
	0x028F17EC CMP W8, 0x1
	0x028F17F0 B.LT 0x28F185C
	0x028F17F4 MOV W22, W31
	0x028F17F8 LDR X0, [X20 + 0x20]
	0x028F17FC LDRB W8, [X0 + 0x135]
	0x028F1800 TBNZ X8, 0x0, 0x28F1808
	0x028F1804 BL 0x1C5C684
	0x028F1808 LDR X8, [X0 + 0xC0]
	0x028F180C MOV X0, X19
	0x028F1810 MOV W1, W22
	0x028F1814 LDR X2, [X8 + 0x10]
	0x028F1818 BL 0x2DEA3EC
	0x028F181C LDR X8, [X20 + 0x20]
	0x028F1820 MOV X23, X0
	0x028F1824 LDRB W9, [X8 + 0x135]
	0x028F1828 TBNZ X9, 0x0, 0x28F1838
	0x028F182C MOV X0, X8
	0x028F1830 BL 0x1C5C684
	0x028F1834 MOV X8, X0
	0x028F1838 LDR X8, [X8 + 0xC0]
	0x028F183C MOV X0, X21
	0x028F1840 MOV X1, X23
	0x028F1844 LDR X2, [X8 + 0x58]
	0x028F1848 BL 0x28F1650
	0x028F184C LDR W8, [X21 + 0x38]
	0x028F1850 ADD W22, W22, 0x1
	0x028F1854 CMP W22, W8
	0x028F1858 B.LT 0x28F17F8
	0x028F185C MOV W23, W31
	0x028F1860 ADD X22, X21, 0x20
	0x028F1864 LDR X0, [X20 + 0x20]
	0x028F1868 LDR W24, [X22]
	0x028F186C LDRB W8, [X0 + 0x135]
	0x028F1870 TBNZ X8, 0x0, 0x28F1878
	0x028F1874 BL 0x1C5C684
	0x028F1878 LDR X8, [X0 + 0xC0]
	0x028F187C CMP W23, W24
	0x028F1880 B.GE 0x28F18CC
	0x028F1884 LDR X2, [X8 + 0x10]
	0x028F1888 MOV X0, X22
	0x028F188C MOV W1, W23
	0x028F1890 BL 0x2DEA3EC
	0x028F1894 LDR X8, [X20 + 0x20]
	0x028F1898 MOV X24, X0
	0x028F189C LDRB W9, [X8 + 0x135]
	0x028F18A0 TBNZ X9, 0x0, 0x28F18B0
	0x028F18A4 MOV X0, X8
	0x028F18A8 BL 0x1C5C684
	0x028F18AC MOV X8, X0
	0x028F18B0 LDR X8, [X8 + 0xC0]
	0x028F18B4 MOV X0, X21
	0x028F18B8 MOV X1, X24
	0x028F18BC LDR X2, [X8 + 0x68]
	0x028F18C0 BL 0x28F14E0
	0x028F18C4 ADD W23, W23, 0x1
	0x028F18C8 B 0x28F1864
	0x028F18CC LDR X1, [X8 + 0x28]
	0x028F18D0 MOV X0, X22
	0x028F18D4 BL 0x2DEA524
	0x028F18D8 LDR X0, [X20 + 0x20]
	0x028F18DC LDRB W8, [X0 + 0x135]
	0x028F18E0 TBNZ X8, 0x0, 0x28F18E8
	0x028F18E4 BL 0x1C5C684
	0x028F18E8 LDR X8, [X0 + 0xC0]
	0x028F18EC MOV X0, X19
	0x028F18F0 LDP X20, X19, [X31 + 0x30]
	0x028F18F4 LDP X22, X21, [X31 + 0x20]
	0x028F18F8 LDR X1, [X8 + 0x28]
	0x028F18FC LDP X24, X23, [X31 + 0x10]
	0x028F1900 LDR X30, [X31], #0x40
	0x028F1904 B 0x2DEA524
	0x028F1908 SUB X31, X31, 0x170
	0x028F190C STP D15, D14, [X31 + 0xD0]
	0x028F1910 STP D13, D12, [X31 + 0xE0]
	0x028F1914 STP D11, D10, [X31 + 0xF0]
	0x028F1918 STP D9, D8, [X31 + 0x100]
	0x028F191C STP X29, X30, [X31 + 0x110]
	0x028F1920 STP X28, X27, [X31 + 0x120]
	0x028F1924 STP X26, X25, [X31 + 0x130]
	0x028F1928 STP X24, X23, [X31 + 0x140]
	0x028F192C STP X22, X21, [X31 + 0x150]
	0x028F1930 STP X20, X19, [X31 + 0x160]
	0x028F1934 MRS X21, 0xC000
	0x028F1938 LDR X9, [X21 + 0x28]
	0x028F193C ADRP X20, 0x1AE9000
	0x028F1940 MOV X26, X4
	0x028F1944 MOV X25, X3
	0x028F1948 STR X9, [X31 + 0xC8]
	0x028F194C LDRB W9, [X20 + 0xD54]
	0x028F1950 MOV X23, X2
	0x028F1954 MOV X22, X1
	0x028F1958 MOV X19, X8
	0x028F195C TBNZ X9, 0x0, 0x28F19A4
	0x028F1960 ADRP X0, 0x182B000
	0x028F1964 LDR X0, [X0 + 0xE40]
	0x028F1968 BL 0x1C16CF4
	0x028F196C ADRP X0, 0x182B000
	0x028F1970 LDR X0, [X0 + 0xE38]
	0x028F1974 BL 0x1C16CF4
	0x028F1978 ADRP X0, 0x182C000
	0x028F197C LDR X0, [X0 + 0x128]
	0x028F1980 BL 0x1C16CF4
	0x028F1984 ADRP X0, 0x182D000
	0x028F1988 LDR X0, [X0 + 0x1F0]
	0x028F198C BL 0x1C16CF4
	0x028F1990 ADRP X0, 0x182C000
	0x028F1994 LDR X0, [X0 + 0x948]
	0x028F1998 BL 0x1C16CF4
	0x028F199C MOVZ W8, 0x1
	0x028F19A0 STRB W8, [X20 + 0xD54]
	0x028F19A4 STP X31, X31, [X31 + 0x88]
	0x028F19A8 STR X31, [X31 + 0x80]
	0x028F19AC LDP X0, X1, [X23]
	0x028F19B0 MOV X2, X31
	0x028F19B4 BL 0x36F9984
	0x028F19B8 STP X31, X31, [X31 + 0x98]
	0x028F19BC STR W31, [X31 + 0xA8]
	0x028F19C0 CBZ X0, 0x28F1E74
	0x028F19C4 STP X26, X25, [X31 + 0x30]
	0x028F19C8 STR X23, [X31 + 0x40]
	0x028F19CC STR X21, [X31 + 0x28]
	0x028F19D0 ADRP X8, 0x182C000
	0x028F19D4 LDR X8, [X8 + 0x948]
	0x028F19D8 STP X31, X31, [X31 + 0x48]
	0x028F19DC LDR W1, [X0 + 0x18]
	0x028F19E0 ADRP X20, 0x182C000
	0x028F19E4 LDR X4, [X8]
	0x028F19E8 ADRP X21, 0x182D000
	0x028F19EC LDR X20, [X20 + 0x128]
	0x028F19F0 LDR X21, [X21 + 0x1F0]
	0x028F19F4 MOV X24, X0
	0x028F19F8 ADD X0, X31, 0x48
	0x028F19FC MOVZ W2, 0x4
	0x028F1A00 MOV W3, W31
	0x028F1A04 BL 0x23E17A0
	0x028F1A08 STP X31, X31, [X31 + 0x70]
	0x028F1A0C LDP X29, X8, [X31 + 0x48]
	0x028F1A10 LDR W1, [X24 + 0x18]
	0x028F1A14 LDR X4, [X20]
	0x028F1A18 ADD X0, X31, 0x70
	0x028F1A1C MOVZ W2, 0x4
	0x028F1A20 MOV W3, W31
	0x028F1A24 STR X8, [X31 + 0x20]
	0x028F1A28 BL 0x23E51BC
	0x028F1A2C STP X31, X31, [X31 + 0x60]
	0x028F1A30 LDP X28, X8, [X31 + 0x70]
	0x028F1A34 LDR W1, [X24 + 0x18]
	0x028F1A38 LDR X4, [X21]
	0x028F1A3C ADD X0, X31, 0x60
	0x028F1A40 MOVZ W2, 0x4
	0x028F1A44 MOV W3, W31
	0x028F1A48 STR X8, [X31 + 0x18]
	0x028F1A4C BL 0x23F0FB0
	0x028F1A50 LDR V0, [X31 + 0x6]
	0x028F1A54 STR V0, [X31 + 0xB]
	0x028F1A58 LDR X8, [X24 + 0x18]
	0x028F1A5C CMP W8, 0x1
	0x028F1A60 B.LT 0x28F1B7C
	0x028F1A64 ADRP X25, 0x1802000
	0x028F1A68 LDR X25, [X25 + 0x5A8]
	0x028F1A6C MOV X27, X31
	0x028F1A70 SUB W26, W8, 0x1
	0x028F1A74 FMOV S14, W31
	0x028F1A78 MOVZ W21, 0xC
	0x028F1A7C ADRP X23, 0x1AE7000
	0x028F1A80 CMP X27, W8, UXTW

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X23, 0x1AEA000
	011 Move W8, [X23+3411]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W22, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x182A000
	021 Move X0, [X0+1760]
	022 Call 0x1C17CF4
	023 Move X0, 0x182C000
	024 Move X0, [X0+2136]
	025 Call 0x1C17CF4
	026 Move X0, 0x1803000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3411], W8
	031 Move X24, 0x1803000
	032 Move X24, [X24+1432]
	033 Move [X31+64], X31
	034 Move [X31+72], X31
	035 Move [X31+80], X31
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Move TEMP, X22
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {316}
	043 Move X8, [X19+32]
	044 Move X8, [X8+192]
	045 Move X0, [X8+32]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X8, [X19+32]
	057 Move X8, [X8+192]
	058 Move X0, [X8+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {619}
	069 Move X8, [X19+32]
	070 Move X8, [X8+192]
	071 Move X1, [X8+152]
	072 Add X8, X31, 8
	073 Call List`1<Object>.GetEnumerator, X0
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move X8, [X31+24]
	076 Move X25, 0x182C000
	077 Move [X31+4], V0
	078 Move [X31+80], X8
	079 Move X25, [X25+2136]
	080 Move X8, [X19+32]
	081 Move X8, [X8+192]
	082 Move X1, [X8+192]
	083 Add X0, X31, 64
	084 Call Enumerator<Object>.MoveNext, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {161}
	089 Move X22, [X31+80]
	090 Compare X22, 0
	091 JumpIfEqual {611}
	092 Move X9, [X22]
	093 Move X8, [X25]
	094 Move W11, [X9+304]
	095 Move W10, [X8+304]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X9, [X9+200]
	098 Add X9, X9, X10
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X0, X22
	102 Move X1, X31
	103 Call Component.get_transform, X0
	104 Move X23, X0
	105 Move X0, [X24]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X23
	111 Move X1, X20
	112 Move X2, X31
	113 Call Object.op_Equality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {80}
	118 Move X8, [X19+32]
	119 Move X8, [X8+192]
	120 Move X1, [X8+280]
	121 Move X0, X22
	122 Call 0x21A4F50, X0
	123 Move X23, X0
	124 Move X0, [X24]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X23
	130 Move X1, X20
	131 Move X2, X31
	132 Call Object.op_Inequality, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {80}
	137 Move X0, [X21+16]
	138 Compare X0, 0
	139 JumpIfEqual {614}
	140 Move X8, [X19+32]
	141 Move W10, [X0+28]
	142 Move X9, [X8+192]
	143 Move X8, [X0+16]
	144 Add W10, W10, 1
	145 Move X9, [X9+272]
	146 Move [X0+28], W10
	147 Compare X8, 0
	148 JumpIfEqual {615}
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Move W11, [X8+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Add W9, W10, 1
	153 Add X8, X8, X10
	154 Move [X0+24], W9
	155 Move [X8+32], X22
	156 Move X8, [X9+32]
	157 Move X8, [X8+192]
	158 Move X2, [X8+112]
	159 Move X1, X22
	160 Call List`1<Object>.AddWithResize, X0, X1
	161 Move X23, X31
	162 Move W22, 5
	163 Move X8, [X19+32]
	164 Add X0, X31, 64
	165 Move X8, [X8+192]
	166 Move X1, [X8+200]
	167 Call Enumerator<Object>.Dispose, X0
	168 Compare X23, 0
	169 JumpIfNotEqual {621}
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Compare W22, 0
	172 JumpIfNotEqual {600}
	173 Move X8, [X19+32]
	174 Move X8, [X8+192]
	175 Move X0, [X8+32]
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X8, [X19+32]
	187 Move X8, [X8+192]
	188 Move X0, [X8+32]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move X8, [X0+184]
	196 Move X0, [X8+8]
	197 Compare X0, 0
	198 JumpIfEqual {619}
	199 Move X8, [X19+32]
	200 Move X8, [X8+192]
	201 Move X1, [X8+208]
	202 Add X8, X31, 8
	203 Call List`1<Object>.GetEnumerator, X0
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 Move X8, [X31+24]
	206 Move [X31+2], V0
	207 Move [X31+48], X8
	208 Move X8, [X19+32]
	209 Move X8, [X8+192]
	210 Move X1, [X8+256]
	211 Add X0, X31, 32
	212 Call Enumerator<Object>.MoveNext, X0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {305}
	217 Move X22, [X31+48]
	218 Compare X22, 0
	219 JumpIfEqual {613}
	220 Move X9, [X22]
	221 Move X8, [X25]
	222 Move W11, [X9+304]
	223 Move W10, [X8+304]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X9, [X9+200]
	226 Add X9, X9, X10
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, X22
	230 Move X1, X31
	231 Call Component.get_transform, X0
	232 Move X23, X0
	233 Move X0, [X24]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X0, X23
	239 Move X1, X20
	240 Move X2, X31
	241 Call Object.op_Equality, X0, X1
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {208}
	246 Move X8, [X19+32]
	247 Move X8, [X8+192]
	248 Move X1, [X8+280]
	249 Move X0, X22
	250 Call 0x21A4F50, X0
	251 Move X23, X0
	252 Move X0, [X24]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Move X0, X23
	258 Move X1, X20
	259 Move X2, X31
	260 Call Object.op_Inequality, X0, X1
	261 Move TEMP, X0
	262 And TEMP, TEMP, 1
	263 Compare TEMP, 1
	264 JumpIfEqual {208}
	265 Move X8, [X19+32]
	266 Move X23, [X21+16]
	267 Move X8, [X8+192]
	268 Move X1, [X8+240]
	269 Move W8, [X1+309]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {277}
	274 Move X0, X1
	275 Call 0x1C5D684
	276 Move X1, X0
	277 Move X8, [X22]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Compare X9, 0
	280 JumpIfEqual {287}
	281 Move X10, [X8+176]
	282 Add X10, X10, 8
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Subtract X9, X9, 1
	286 Add X10, X10, 16
	287 Move X0, X22
	288 Move W2, W31
	289 Call 0x1C5D788
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Add X8, X8, X9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X22
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X1, X0
	298 Compare X23, 0
	299 JumpIfEqual {618}
	300 Move X8, [X19+32]
	301 Move X8, [X8+192]
	302 Move X2, [X8+136]
	303 Move X0, X23
	304 Call List`1<Object>.AddRange, X0, X1
	305 Move X23, X31
	306 Move W22, W31
	307 Move X8, [X19+32]
	308 Add X0, X31, 32
	309 Move X8, [X8+192]
	310 Move X1, [X8+264]
	311 Call Enumerator<Object>.Dispose, X0
	312 Compare X23, 0
	313 JumpIfNotEqual {621}
	314 Compare W22, 0
	315 JumpIfEqual {600}
	316 Move X8, [X19+32]
	317 Move X8, [X8+192]
	318 Move X0, [X8+32]
	319 Move W8, [X0+309]
	320 Move TEMP, X8
	321 And TEMP, TEMP, 1
	322 Compare TEMP, 1
	323 JumpIfEqual {325}
	324 Call 0x1C5D684
	325 Move W8, [X0+224]
	326 Compare W8, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Move X8, [X19+32]
	330 Move X8, [X8+192]
	331 Move X0, [X8+32]
	332 Move W8, [X0+309]
	333 Move TEMP, X8
	334 And TEMP, TEMP, 1
	335 Compare TEMP, 1
	336 JumpIfEqual {338}
	337 Call 0x1C5D684
	338 Move X8, [X0+184]
	339 Move X0, [X8]
	340 Compare X0, 0
	341 JumpIfEqual {619}
	342 Move X8, [X19+32]
	343 Move X25, 0x182A000
	344 Move X8, [X8+192]
	345 Move X1, [X8+152]
	346 Move X25, [X25+1760]
	347 Add X8, X31, 8
	348 Call List`1<Object>.GetEnumerator, X0
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 Move X8, [X31+24]
	351 Move [X31+4], V0
	352 Move [X31+80], X8
	353 Move X8, [X19+32]
	354 Move X8, [X8+192]
	355 Move X1, [X8+192]
	356 Add X0, X31, 64
	357 Call Enumerator<Object>.MoveNext, X0
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {441}
	362 Move X22, [X31+80]
	363 Compare X22, 0
	364 JumpIfEqual {610}
	365 Move X9, [X22]
	366 Move X8, [X25]
	367 Move W11, [X9+304]
	368 Move W10, [X8+304]
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X9, [X9+200]
	371 Add X9, X9, X10
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X0, X22
	375 Move X1, X31
	376 Call Behaviour.get_enabled, X0
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfNotEqual {353}
	381 Move X0, X22
	382 Move X1, X31
	383 Call Component.get_transform, X0
	384 Move X23, X0
	385 Move X0, [X24]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {390}
	389 Call 0x1C17DFC
	390 Move X0, X23
	391 Move X1, X20
	392 Move X2, X31
	393 Call Object.op_Equality, X0, X1
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfEqual {353}
	398 Move X8, [X19+32]
	399 Move X8, [X8+192]
	400 Move X1, [X8+280]
	401 Move X0, X22
	402 Call 0x21A4F50, X0
	403 Move X23, X0
	404 Move X0, [X24]
	405 Move W8, [X0+224]
	406 Compare W8, 0
	407 JumpIfNotEqual {409}
	408 Call 0x1C17DFC
	409 Move X0, X23
	410 Move X1, X20
	411 Move X2, X31
	412 Call Object.op_Inequality, X0, X1
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfEqual {353}
	417 Move X0, [X21+16]
	418 Compare X0, 0
	419 JumpIfEqual {617}
	420 Move X8, [X19+32]
	421 Move W10, [X0+28]
	422 Move X9, [X8+192]
	423 Move X8, [X0+16]
	424 Add W10, W10, 1
	425 Move X9, [X9+272]
	426 Move [X0+28], W10
	427 Compare X8, 0
	428 JumpIfEqual {616}
	429 NotImplemented "Instruction LDRSW not yet implemented."
	430 Move W11, [X8+24]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Add W9, W10, 1
	433 Add X8, X8, X10
	434 Move [X0+24], W9
	435 Move [X8+32], X22
	436 Move X8, [X9+32]
	437 Move X8, [X8+192]
	438 Move X2, [X8+112]
	439 Move X1, X22
	440 Call List`1<Object>.AddWithResize, X0, X1
	441 Move X23, X31
	442 Move W22, 11
	443 Move X8, [X19+32]
	444 Add X0, X31, 64
	445 Move X8, [X8+192]
	446 Move X1, [X8+200]
	447 Call Enumerator<Object>.Dispose, X0
	448 Compare X23, 0
	449 JumpIfNotEqual {621}
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Compare W22, 0
	452 JumpIfNotEqual {600}
	453 Move X8, [X19+32]
	454 Move X8, [X8+192]
	455 Move X0, [X8+32]
	456 Move W8, [X0+309]
	457 Move TEMP, X8
	458 And TEMP, TEMP, 1
	459 Compare TEMP, 1
	460 JumpIfEqual {462}
	461 Call 0x1C5D684
	462 Move W8, [X0+224]
	463 Compare W8, 0
	464 JumpIfNotEqual {466}
	465 Call 0x1C17DFC
	466 Move X8, [X19+32]
	467 Move X8, [X8+192]
	468 Move X0, [X8+32]
	469 Move W8, [X0+309]
	470 Move TEMP, X8
	471 And TEMP, TEMP, 1
	472 Compare TEMP, 1
	473 JumpIfEqual {475}
	474 Call 0x1C5D684
	475 Move X8, [X0+184]
	476 Move X0, [X8+8]
	477 Compare X0, 0
	478 JumpIfEqual {619}
	479 Move X8, [X19+32]
	480 Move X8, [X8+192]
	481 Move X1, [X8+208]
	482 Add X8, X31, 8
	483 Call List`1<Object>.GetEnumerator, X0
	484 NotImplemented "Instruction LDUR not yet implemented."
	485 Move X8, [X31+24]
	486 Move [X31+2], V0
	487 Move [X31+48], X8
	488 Move X8, [X19+32]
	489 Move X8, [X8+192]
	490 Move X1, [X8+256]
	491 Add X0, X31, 32
	492 Call Enumerator<Object>.MoveNext, X0
	493 Move TEMP, X0
	494 And TEMP, TEMP, 1
	495 Compare TEMP, 1
	496 JumpIfNotEqual {592}
	497 Move X22, [X31+48]
	498 Compare X22, 0
	499 JumpIfEqual {612}
	500 Move X9, [X22]
	501 Move X8, [X25]
	502 Move W11, [X9+304]
	503 Move W10, [X8+304]
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X9, [X9+200]
	506 Add X9, X9, X10
	507 NotImplemented "Instruction LDUR not yet implemented."
	508 NotImplemented "Instruction CMP not yet implemented."
	509 Move X0, X22
	510 Move X1, X31
	511 Call Behaviour.get_enabled, X0
	512 Move TEMP, X0
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {488}
	516 Move X0, X22
	517 Move X1, X31
	518 Call Component.get_transform, X0
	519 Move X23, X0
	520 Move X0, [X24]
	521 Move W8, [X0+224]
	522 Compare W8, 0
	523 JumpIfNotEqual {525}
	524 Call 0x1C17DFC
	525 Move X0, X23
	526 Move X1, X20
	527 Move X2, X31
	528 Call Object.op_Equality, X0, X1
	529 Move TEMP, X0
	530 And TEMP, TEMP, 1
	531 Compare TEMP, 1
	532 JumpIfEqual {488}
	533 Move X8, [X19+32]
	534 Move X8, [X8+192]
	535 Move X1, [X8+280]
	536 Move X0, X22
	537 Call 0x21A4F50, X0
	538 Move X23, X0
	539 Move X0, [X24]
	540 Move W8, [X0+224]
	541 Compare W8, 0
	542 JumpIfNotEqual {544}
	543 Call 0x1C17DFC
	544 Move X0, X23
	545 Move X1, X20
	546 Move X2, X31
	547 Call Object.op_Inequality, X0, X1
	548 Move TEMP, X0
	549 And TEMP, TEMP, 1
	550 Compare TEMP, 1
	551 JumpIfEqual {488}
	552 Move X8, [X19+32]
	553 Move X23, [X21+16]
	554 Move X8, [X8+192]
	555 Move X1, [X8+240]
	556 Move W8, [X1+309]
	557 Move TEMP, X8
	558 And TEMP, TEMP, 1
	559 Compare TEMP, 1
	560 JumpIfEqual {564}
	561 Move X0, X1
	562 Call 0x1C5D684
	563 Move X1, X0
	564 Move X8, [X22]
	565 NotImplemented "Instruction LDRH not yet implemented."
	566 Compare X9, 0
	567 JumpIfEqual {574}
	568 Move X10, [X8+176]
	569 Add X10, X10, 8
	570 NotImplemented "Instruction LDUR not yet implemented."
	571 NotImplemented "Instruction CMP not yet implemented."
	572 Subtract X9, X9, 1
	573 Add X10, X10, 16
	574 Move X0, X22
	575 Move W2, W31
	576 Call 0x1C5D788
	577 NotImplemented "Instruction LDRSW not yet implemented."
	578 Add X8, X8, X9
	579 Add X0, X8, 312
	580 Move X8, [X0]
	581 Move X1, [X0+8]
	582 Move X0, X22
	583 NotImplemented "Instruction BLR not yet implemented."
	584 Move X1, X0
	585 Compare X23, 0
	586 JumpIfEqual {620}
	587 Move X8, [X19+32]
	588 Move X8, [X8+192]
	589 Move X2, [X8+136]
	590 Move X0, X23
	591 Call List`1<Object>.AddRange, X0, X1
	592 Move X20, X31
	593 Move X8, [X19+32]
	594 Add X0, X31, 32
	595 Move X8, [X8+192]
	596 Move X1, [X8+264]
	597 Call Enumerator<Object>.Dispose, X0
	598 Compare X20, 0
	599 JumpIfNotEqual {623}
	600 Move X20, [X31+144]
	601 Move X19, [X31+152]
	602 Move X22, [X31+128]
	603 Move X21, [X31+136]
	604 Move X24, [X31+112]
	605 Move X23, [X31+120]
	606 Move X30, [X31+96]
	607 Move X25, [X31+104]
	608 Add X31, X31, 160
	609 Return 
	610 Call 0x1C17F20
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Call 0x1C17F20
	614 Call 0x1C17F20
	615 Call 0x1C17F20
	616 Call 0x1C17F20
	617 Call 0x1C17F20
	618 Call 0x1C17F20
	619 Call 0x1C17F20
	620 Call 0x1C17F20
	621 Move X0, X23
	622 Call 0x1C17F18
	623 Move X0, X20
	624 Call 0x1C17F18
	625 Move X22, X0
	626 NotImplemented "Instruction CMP not yet implemented."
	627 Move X0, X22
	628 Call 0x3EB2AD0
	629 Move X23, [X0]
	630 Call 0x3EB2AE0
	631 Move W22, 1
	632 Move X23, X31
	633 Move X22, X0
	634 Move X8, [X19+32]
	635 Move X8, [X8+192]
	636 Move X1, [X8+264]
	637 Add X0, X31, 32
	638 Call Enumerator<Object>.Dispose, X0
	639 Compare X23, 0
	640 JumpIfEqual {694}
	641 Move X0, X23
	642 Call 0x1C17F18
	643 Move X22, X0
	644 NotImplemented "Instruction CMP not yet implemented."
	645 Move X0, X22
	646 Call 0x3EB2AD0
	647 Move X20, [X0]
	648 Call 0x3EB2AE0
	649 Move X20, X31
	650 Move X22, X0
	651 Move X8, [X19+32]
	652 Move X8, [X8+192]
	653 Move X1, [X8+264]
	654 Add X0, X31, 32
	655 Call Enumerator<Object>.Dispose, X0
	656 Compare X20, 0
	657 JumpIfEqual {694}
	658 Move X0, X20
	659 Call 0x1C17F18
	660 Move X22, X0
	661 NotImplemented "Instruction CMP not yet implemented."
	662 Move X0, X22
	663 Call 0x3EB2AD0
	664 Move X23, [X0]
	665 Call 0x3EB2AE0
	666 Move W22, W31
	667 Move X23, X31
	668 Move X22, X0
	669 Move X8, [X19+32]
	670 Move X8, [X8+192]
	671 Move X1, [X8+200]
	672 Add X0, X31, 64
	673 Call Enumerator<Object>.Dispose, X0
	674 Compare X23, 0
	675 JumpIfEqual {694}
	676 Move X0, X23
	677 Call 0x1C17F18
	678 Move X22, X0
	679 NotImplemented "Instruction CMP not yet implemented."
	680 Move X0, X22
	681 Call 0x3EB2AD0
	682 Move X23, [X0]
	683 Call 0x3EB2AE0
	684 Move W22, W31
	685 Move X23, X31
	686 Move X22, X0
	687 Move X8, [X19+32]
	688 Move X8, [X8+192]
	689 Move X1, [X8+200]
	690 Add X0, X31, 64
	691 Call Enumerator<Object>.Dispose, X0
	692 Compare X23, 0
	693 JumpIfNotEqual {696}
	694 Move X0, X22
	695 Call 0x1D2D690
	696 Move X0, X23
	697 Call 0x1C17F18
	698 Call 0x1991590

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x028F1A84 B.CS 0x28F1E70
	0x028F1A88 ADD X20, X24, X27, 0x3, LSL
	0x028F1A8C LDR X1, [X20 + 0x20]!
	0x028F1A90 MOV X0, X22
	0x028F1A94 MOV X2, X31
	0x028F1A98 BL 0x36EADF0
	0x028F1A9C MADD X8, X27, X21, X29
	0x028F1AA0 CMP X27, X26
	0x028F1AA4 STR X0, [X8]
	0x028F1AA8 STR W1, [X8 + 0x8]
	0x028F1AAC B.NE 0x28F1ABC
	0x028F1AB0 ADD X20, X27, 0x1
	0x028F1AB4 FMOV S0, W31
	0x028F1AB8 B 0x28F1B60
	0x028F1ABC LDR W8, [X24 + 0x18]
	0x028F1AC0 CMP X27, X8
	0x028F1AC4 B.CS 0x28F1E70
	0x028F1AC8 LDR X0, [X20]
	0x028F1ACC CBZ X0, 0x28F1E74
	0x028F1AD0 MOV X1, X31
	0x028F1AD4 BL 0x3C3F58C
	0x028F1AD8 LDR W8, [X24 + 0x18]
	0x028F1ADC ADD X20, X27, 0x1
	0x028F1AE0 CMP X20, X8
	0x028F1AE4 B.CS 0x28F1E70
	0x028F1AE8 ADD X8, X24, X20, 0x3, LSL
	0x028F1AEC LDR X0, [X8 + 0x20]
	0x028F1AF0 CBZ X0, 0x28F1E74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+24]
	006 Compare W8, 0
	007 JumpIfNotEqual {37}
	008 Move X19, X0
	009 Move TEMP, X1
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {35}
	013 Move X21, [X19+16]
	014 Compare X21, 0
	015 JumpIfEqual {35}
	016 Move X8, [X2+32]
	017 Move X20, X2
	018 Move X8, [X8+192]
	019 Move X0, [X8+8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, [X20+32]
	031 Move X0, X21
	032 Move X8, [X8+192]
	033 Move X1, [X8+288]
	034 Call 0x28F92F0, X0
	035 Move W8, 1
	036 Move [X19+24], W8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: System.Void Dispose()

Disassembly:
	0x028F1AF4 MOV X1, X31
	0x028F1AF8 MOV V8.16B, V0.16B
	0x028F1AFC MOV V9.16B, V1.16B
	0x028F1B00 MOV V10.16B, V2.16B

ISIL:
	001 Move X8, [X0]
	002 Move W1, 1
	003 Move X3, [X8+392]
	004 Move X2, [X8+400]
	005 CallNoReturn X3

Method: System.Void .cctor()

Disassembly:
	0x028F1B04 BL 0x3C3F58C
	0x028F1B08 LDRB W8, [X23 + 0x85C]
	0x028F1B0C MOV V11.16B, V0.16B
	0x028F1B10 MOV V12.16B, V1.16B
	0x028F1B14 MOV V13.16B, V2.16B
	0x028F1B18 CBNZ W8, 0x28F1B2C
	0x028F1B1C MOV X0, X25
	0x028F1B20 BL 0x1C16CF4
	0x028F1B24 MOVZ W8, 0x1
	0x028F1B28 STRB W8, [X23 + 0x85C]
	0x028F1B2C LDR X0, [X25]
	0x028F1B30 LDR W8, [X0 + 0xE0]
	0x028F1B34 CBNZ W8, 0x28F1B3C
	0x028F1B38 BL 0x1C16DFC
	0x028F1B3C FSUB S0, S8, S11
	0x028F1B40 FSUB S1, S9, S12
	0x028F1B44 FSUB S2, S10, S13
	0x028F1B48 FMUL S0, S0, S0
	0x028F1B4C FMUL S1, S1, S1
	0x028F1B50 FADD S0, S0, S1
	0x028F1B54 FMUL S1, S2, S2
	0x028F1B58 FADD S0, S1, S0
	0x028F1B5C FSQRT S0, S0
	0x028F1B60 STR S0, [X28, X27, LSL #2]
	0x028F1B64 LDR W8, [X24 + 0x18]
	0x028F1B68 FADD S14, S14, S0
	0x028F1B6C MOV X27, X20
	0x028F1B70 CMP X20, W8, SXTW
	0x028F1B74 B.LT 0x28F1A80
	0x028F1B78 B 0x28F1B80
	0x028F1B7C FMOV S14, W31
	0x028F1B80 LDR X26, [X31 + 0x40]
	0x028F1B84 ADRP X20, 0x182B000
	0x028F1B88 ADD X8, X31, 0x48
	0x028F1B8C MOV X0, X22
	0x028F1B90 LDR X1, [X26 + 0x10]
	0x028F1B94 LDR X20, [X20 + 0xE40]
	0x028F1B98 MOV X2, X31
	0x028F1B9C BL 0x36EB150
	0x028F1BA0 LDUR V0, [X31 + 0x48]
	0x028F1BA4 LDR X8, [X31 + 0x58]
	0x028F1BA8 LDR X0, [X20]
	0x028F1BAC STR V0, [X31 + 0x8]
	0x028F1BB0 STR X8, [X31 + 0x90]
	0x028F1BB4 LDR W8, [X0 + 0xE0]
	0x028F1BB8 CBNZ W8, 0x28F1BC0
	0x028F1BBC BL 0x1C16DFC
	0x028F1BC0 ADRP X21, 0x1AE9000
	0x028F1BC4 LDRB W8, [X21 + 0x628]
	0x028F1BC8 CBNZ W8, 0x28F1BE0
	0x028F1BCC ADRP X0, 0x182B000
	0x028F1BD0 LDR X0, [X0 + 0xE40]
	0x028F1BD4 BL 0x1C16CF4
	0x028F1BD8 MOVZ W8, 0x1
	0x028F1BDC STRB W8, [X21 + 0x628]
	0x028F1BE0 LDR X0, [X20]
	0x028F1BE4 LDR W8, [X0 + 0xE0]
	0x028F1BE8 CBNZ W8, 0x28F1BF4
	0x028F1BEC BL 0x1C16DFC
	0x028F1BF0 LDR X0, [X20]
	0x028F1BF4 LDR X8, [X0 + 0xB8]
	0x028F1BF8 LDRB W9, [X26 + 0x28]
	0x028F1BFC LDP S15, S11, [X8 + 0xC]
	0x028F1C00 LDP S12, S13, [X8 + 0x14]
	0x028F1C04 CBZ W9, 0x28F1C44
	0x028F1C08 LDR X0, [X26 + 0x8]
	0x028F1C0C CBZ X0, 0x28F1E74
	0x028F1C10 MOV X1, X31
	0x028F1C14 BL 0x3C3F58C
	0x028F1C18 LDR X0, [X26 + 0x10]
	0x028F1C1C CBZ X0, 0x28F1E74
	0x028F1C20 MOV X1, X31
	0x028F1C24 MOV V8.16B, V0.16B
	0x028F1C28 MOV V9.16B, V1.16B
	0x028F1C2C MOV V10.16B, V2.16B
	0x028F1C30 BL 0x3C3F58C
	0x028F1C34 FSUB S8, S8, S0
	0x028F1C38 FSUB S9, S9, S1
	0x028F1C3C FSUB S10, S10, S2
	0x028F1C40 B 0x28F1C4C
	0x028F1C44 LDP S8, S9, [X8]
	0x028F1C48 LDR V10, [X8 + 0x8]
	0x028F1C4C LDRB W8, [X26 + 0x29]
	0x028F1C50 CBZ W8, 0x28F1D0C
	0x028F1C54 LDR X0, [X26 + 0x10]
	0x028F1C58 STP S10, S9, [X31 + 0xC]
	0x028F1C5C STR S8, [X31 + 0x14]
	0x028F1C60 CBZ X0, 0x28F1E74
	0x028F1C64 MOV X1, X31
	0x028F1C68 BL 0x3C3DEB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, X20
	033 Move X1, [X8+304]
	034 Call List`1<Object>..ctor, X0
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move [X8], X20
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+192]
	075 Move X0, [X8+48]
	076 Move W8, [X0+309]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {82}
	081 Call 0x1C5D684
	082 Call 0x1C17F10
	083 Move X8, [X19+32]
	084 Move X20, X0
	085 Move W9, [X8+309]
	086 Move TEMP, X9
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {93}
	090 Move X0, X8
	091 Call 0x1C5D684
	092 Move X8, X0
	093 Move X8, [X8+192]
	094 Move X0, X20
	095 Move X1, [X8+312]
	096 Call List`1<Object>..ctor, X0
	097 Move X0, [X19+32]
	098 Move W8, [X0+309]
	099 Move TEMP, X8
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {104}
	103 Call 0x1C5D684
	104 Move X8, [X0+192]
	105 Move X0, [X8+32]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move X8, [X0+184]
	113 Move [X8+8], X20
	114 Move X0, [X19+32]
	115 Move W8, [X0+309]
	116 Move TEMP, X8
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {121}
	120 Call 0x1C5D684
	121 Move X8, [X0+192]
	122 Move X0, [X8+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {133}
	128 Move X20, [X31+16]
	129 Move X19, [X31+24]
	130 Move X30, [X31+32]
	131 Call 0x1C5D684
	132 Return 
	133 Move X20, [X31+16]
	134 Move X19, [X31+24]
	135 Move X30, [X31+32]
	136 Return 

