Type: Unity.XR.CoreUtils.GameObjectUtils

Method: System.Void add_GameObjectInstantiated(System.Action`1<UnityEngine.GameObject> value)

Disassembly:
	0x03B27EAC LDR X8, [X8 + 0x5A0]
	0x03B27EB0 LDR X8, [X8]
	0x03B27EB4 LDR X8, [X8 + 0xB8]
	0x03B27EB8 LDP S18, S17, [X8]
	0x03B27EBC LDR V16, [X8 + 0x8]
	0x03B27EC0 FSUB S3, S12, S10
	0x03B27EC4 FSUB S7, S1, S4
	0x03B27EC8 FSUB S6, S2, S5
	0x03B27ECC FMUL S3, S3, S18
	0x03B27ED0 FMUL S7, S7, S17
	0x03B27ED4 FADD S3, S3, S7
	0x03B27ED8 FMUL S6, S6, S16
	0x03B27EDC FADD S3, S6, S3
	0x03B27EE0 FCMP S3, 0x0
	0x03B27EE4 B.MI 0x3B27F14
	0x03B27EE8 LDP S0, S2, [X31 + 0x4]
	0x03B27EEC FMUL S6, S3, S3
	0x03B27EF0 FCMP S6, S15
	0x03B27EF4 B.GT 0x3B27F20
	0x03B27EF8 FMUL S0, S18, S3
	0x03B27EFC FMUL S1, S17, S3
	0x03B27F00 FMUL S2, S16, S3
	0x03B27F04 FADD S0, S10, S0
	0x03B27F08 FADD S13, S4, S1
	0x03B27F0C FADD S2, S5, S2
	0x03B27F10 B 0x3B27F20
	0x03B27F14 MOV V0.16B, V10.16B
	0x03B27F18 MOV V13.16B, V4.16B
	0x03B27F1C MOV V2.16B, V5.16B
	0x03B27F20 MOV V1.16B, V13.16B
	0x03B27F24 LDP X30, X19, [X31 + 0x50]
	0x03B27F28 LDP D9, D8, [X31 + 0x40]
	0x03B27F2C LDP D11, D10, [X31 + 0x30]
	0x03B27F30 LDP D13, D12, [X31 + 0x20]
	0x03B27F34 LDP D15, D14, [X31 + 0x10]
	0x03B27F38 ADD X31, X31, 0x60
	0x03B27F3C RET
	0x03B27F40 SUB X31, X31, 0x130
	0x03B27F44 STP D15, D14, [X31 + 0xA0]
	0x03B27F48 STP D13, D12, [X31 + 0xB0]
	0x03B27F4C STP D11, D10, [X31 + 0xC0]
	0x03B27F50 STP D9, D8, [X31 + 0xD0]
	0x03B27F54 STP X29, X30, [X31 + 0xE0]
	0x03B27F58 STP X26, X25, [X31 + 0xF0]
	0x03B27F5C STP X24, X23, [X31 + 0x100]
	0x03B27F60 STP X22, X21, [X31 + 0x110]
	0x03B27F64 STP X20, X19, [X31 + 0x120]
	0x03B27F68 ADRP X20, 0x8BB000
	0x03B27F6C LDRB W8, [X20 + 0x778]
	0x03B27F70 MOV V8.16B, V2.16B
	0x03B27F74 MOV V12.16B, V1.16B
	0x03B27F78 MOV V13.16B, V0.16B
	0x03B27F7C MOV X19, X0
	0x03B27F80 TBNZ X8, 0x0, 0x3B27FE0
	0x03B27F84 ADRP X0, 0x632000
	0x03B27F88 LDR X0, [X0 + 0xD18]
	0x03B27F8C BL 0x1C16CF4
	0x03B27F90 ADRP X0, 0x632000
	0x03B27F94 LDR X0, [X0 + 0xD20]
	0x03B27F98 BL 0x1C16CF4
	0x03B27F9C ADRP X0, 0x632000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x8BC000
	010 Move X24, 0x5F5000
	011 Move W8, [X20+1899]
	012 Move X24, [X24+2720]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x633000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move X0, 0x5F5000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1899], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x633000
	034 Move X20, [X8+16]
	035 Move X25, [X25+3264]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Combine, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 16
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void remove_GameObjectInstantiated(System.Action`1<UnityEngine.GameObject> value)

Disassembly:
	0x03B27FA0 LDR X0, [X0 + 0xD28]
	0x03B27FA4 BL 0x1C16CF4
	0x03B27FA8 ADRP X0, 0x632000
	0x03B27FAC LDR X0, [X0 + 0xD10]
	0x03B27FB0 BL 0x1C16CF4
	0x03B27FB4 ADRP X0, 0x632000
	0x03B27FB8 LDR X0, [X0 + 0xD30]
	0x03B27FBC BL 0x1C16CF4
	0x03B27FC0 ADRP X0, 0x5D0000
	0x03B27FC4 LDR X0, [X0 + 0x978]
	0x03B27FC8 BL 0x1C16CF4
	0x03B27FCC ADRP X0, 0x5D0000
	0x03B27FD0 LDR X0, [X0 + 0x980]
	0x03B27FD4 BL 0x1C16CF4
	0x03B27FD8 MOVZ W8, 0x1
	0x03B27FDC STRB W8, [X20 + 0x778]
	0x03B27FE0 MOVI V0.2D, 0x0
	0x03B27FE4 STR X31, [X31 + 0x78]
	0x03B27FE8 STP V0, V0, [X31 + 0x80]
	0x03B27FEC CBZ X19, 0x3B28414
	0x03B27FF0 LDR W24, [X19 + 0x18]
	0x03B27FF4 ADRP X22, 0x5CC000
	0x03B27FF8 LDR X22, [X22 + 0x5A0]
	0x03B27FFC CMP W24, 0x2
	0x03B28000 B.LE 0x3B2839C
	0x03B28004 STR S8, [X31 + 0x28]
	0x03B28008 ADRP X23, 0x5CF000
	0x03B2800C LDR X23, [X23 + 0x980]
	0x03B28010 MOV X0, X19
	0x03B28014 MOV W1, W31
	0x03B28018 LDR X2, [X23]
	0x03B2801C BL 0x30CBE84
	0x03B28020 LDR X2, [X23]
	0x03B28024 MOVZ W1, 0x1
	0x03B28028 MOV X0, X19
	0x03B2802C MOV V9.16B, V0.16B
	0x03B28030 MOV V10.16B, V1.16B
	0x03B28034 MOV V11.16B, V2.16B
	0x03B28038 MOVZ W20, 0x1
	0x03B2803C BL 0x30CBE84
	0x03B28040 LDR X2, [X23]
	0x03B28044 MOVZ W1, 0x2
	0x03B28048 MOV X0, X19
	0x03B2804C MOV V8.16B, V0.16B
	0x03B28050 MOV V14.16B, V1.16B
	0x03B28054 MOV V15.16B, V2.16B
	0x03B28058 BL 0x30CBE84
	0x03B2805C ADRP X21, 0x8B0000
	0x03B28060 LDRB W8, [X21 + 0x785]
	0x03B28064 FSUB S3, S8, S9
	0x03B28068 FSUB S4, S14, S10
	0x03B2806C FSUB S5, S15, S11
	0x03B28070 FSUB S0, S0, S9
	0x03B28074 FSUB S1, S1, S10
	0x03B28078 FSUB S2, S2, S11
	0x03B2807C STP S10, S9, [X31 + 0x38]
	0x03B28080 STR S11, [X31 + 0x34]
	0x03B28084 FMUL S8, S4, S2
	0x03B28088 FMUL S9, S5, S1
	0x03B2808C FMUL S10, S5, S0
	0x03B28090 FMUL S14, S3, S2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x8BC000
	010 Move X24, 0x5F5000
	011 Move W8, [X20+1900]
	012 Move X24, [X24+2720]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x633000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move X0, 0x5F5000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1900], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x632000
	034 Move X20, [X8+16]
	035 Call 0x3EB2724
	036 Return 
	037 Move X0, X20
	038 Move X1, X19
	039 Move X2, X31
	040 Call Delegate.Remove, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {50}
	043 Move X23, [X25]
	044 Move X22, X0
	045 Move X1, X23
	046 Call 0x1C17E00
	047 Move X21, X0
	048 Compare X0, 0
	049 JumpIfNotEqual {51}
	050 Move X21, X31
	051 Move X0, [X24]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X24]
	057 Move X8, [X0+184]
	058 Move X1, X21
	059 Move X2, X20
	060 Add X0, X8, 16
	061 Call 0x1C25138
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, X0
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X30, [X31+64]
	071 Move X25, [X31+72]
	072 Return 
	073 Move X0, X22
	074 Move X1, X23
	075 Call 0x1C181E0

Method: UnityEngine.GameObject Create()

Disassembly:
	0x03B28094 FMUL S15, S3, S1
	0x03B28098 FMUL S11, S4, S0
	0x03B2809C CBNZ W8, 0x3B280B0
	0x03B280A0 ADRP X0, 0x5CB000
	0x03B280A4 LDR X0, [X0 + 0x5A8]
	0x03B280A8 BL 0x1C16CF4
	0x03B280AC STRB W20, [X21 + 0x785]
	0x03B280B0 ADRP X8, 0x5CB000
	0x03B280B4 LDR X8, [X8 + 0x5A8]
	0x03B280B8 FSUB S8, S8, S9
	0x03B280BC FSUB S9, S10, S14
	0x03B280C0 FSUB S10, S15, S11
	0x03B280C4 LDR X0, [X8]
	0x03B280C8 LDR W8, [X0 + 0xE0]
	0x03B280CC CBNZ W8, 0x3B280D4
	0x03B280D0 BL 0x1C16DFC
	0x03B280D4 FMUL S0, S8, S8
	0x03B280D8 FMUL S1, S9, S9
	0x03B280DC ADRP X8, 0xFFFFFFFFFCFC2000
	0x03B280E0 FADD S0, S0, S1
	0x03B280E4 LDR V1, [X8 + 0x17C]
	0x03B280E8 FMUL S2, S10, S10
	0x03B280EC FADD S0, S2, S0
	0x03B280F0 FSQRT S0, S0
	0x03B280F4 ADRP X20, 0x8B0000
	0x03B280F8 FCMP S0, S1
	0x03B280FC B.LE 0x3B2812C
	0x03B28100 LDRB W8, [X20 + 0x783]
	0x03B28104 FDIV S15, S8, S0
	0x03B28108 FDIV S14, S9, S0
	0x03B2810C FDIV S8, S10, S0
	0x03B28110 CBNZ W8, 0x3B28158
	0x03B28114 ADRP X0, 0x5CB000
	0x03B28118 LDR X0, [X0 + 0x5A0]
	0x03B2811C BL 0x1C16CF4
	0x03B28120 MOVZ W8, 0x1
	0x03B28124 STRB W8, [X20 + 0x783]
	0x03B28128 B 0x3B28158
	0x03B2812C LDRB W8, [X20 + 0x783]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x8BB000
	006 Move X21, 0x5CC000
	007 Move X20, 0x5F4000
	008 Move W8, [X19+1901]
	009 Move X21, [X21+2648]
	010 Move X20, [X20+2720]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5F4000
	016 Move X0, [X0+2720]
	017 Call 0x1C17CF4
	018 Move X0, 0x5CC000
	019 Move X0, [X0+2648]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1901], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call GameObject..ctor, X0
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X8, [X8+16]
	036 Compare X8, 0
	037 JumpIfEqual {43}
	038 Move X9, [X8+24]
	039 Move X0, [X8+64]
	040 Move X2, [X8+40]
	041 Move X1, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0

Method: UnityEngine.GameObject Create(System.String name)

Disassembly:
	0x03B28130 CBNZ W8, 0x3B28148
	0x03B28134 ADRP X0, 0x5CB000
	0x03B28138 LDR X0, [X0 + 0x5A0]
	0x03B2813C BL 0x1C16CF4
	0x03B28140 MOVZ W8, 0x1
	0x03B28144 STRB W8, [X20 + 0x783]
	0x03B28148 LDR X8, [X22]
	0x03B2814C LDR X8, [X8 + 0xB8]
	0x03B28150 LDP S15, S14, [X8]
	0x03B28154 LDR V8, [X8 + 0x8]
	0x03B28158 LDR X8, [X22]
	0x03B2815C ADRP X9, 0x631000
	0x03B28160 MOV X0, X19
	0x03B28164 LDR X8, [X8 + 0xB8]
	0x03B28168 LDR X9, [X9 + 0xD30]
	0x03B2816C LDR V10, [X8]
	0x03B28170 LDR X1, [X9]
	0x03B28174 LDR V9, [X8 + 0x8]
	0x03B28178 ADD X8, X31, 0x58
	0x03B2817C BL 0x30CCE2C
	0x03B28180 LDUR V0, [X31 + 0x58]
	0x03B28184 LDUR V1, [X31 + 0x68]
	0x03B28188 ADRP X20, 0x631000
	0x03B2818C STP V0, V1, [X31 + 0x80]
	0x03B28190 LDR X20, [X20 + 0xD20]
	0x03B28194 LDR X1, [X20]
	0x03B28198 ADD X0, X31, 0x80
	0x03B2819C BL 0x2BD04FC
	0x03B281A0 TBZ X0, 0x0, 0x3B281B8
	0x03B281A4 LDR V0, [X31 + 0x90]
	0x03B281A8 LDR V1, [X31 + 0x98]
	0x03B281AC FADD V10.2S, V10.2S, V0.2S
	0x03B281B0 FADD S9, S9, S1
	0x03B281B4 B 0x3B28194
	0x03B281B8 ADRP X8, 0x631000
	0x03B281BC LDR X8, [X8 + 0xD18]
	0x03B281C0 ADD X0, X31, 0x80
	0x03B281C4 LDR X1, [X8]
	0x03B281C8 BL 0x2BD04F8
	0x03B281CC ADRP X20, 0x8B0000
	0x03B281D0 SCVTF S0, W24
	0x03B281D4 FMOV S1, 1
	0x03B281D8 LDRB W8, [X20 + 0xE39]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x8BB000
	007 Move X22, 0x5CC000
	008 Move X21, 0x5F4000
	009 Move W8, [X19+1902]
	010 Move X22, [X22+2648]
	011 Move X21, [X21+2720]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x5F4000
	018 Move X0, [X0+2720]
	019 Call 0x1C17CF4
	020 Move X0, 0x5CC000
	021 Move X0, [X0+2648]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+1902], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X20
	028 Move X2, X31
	029 Move X19, X0
	030 Call GameObject..ctor, X0, X1
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X21]
	037 Move X8, [X0+184]
	038 Move X8, [X8+16]
	039 Compare X8, 0
	040 JumpIfEqual {46}
	041 Move X9, [X8+24]
	042 Move X0, [X8+64]
	043 Move X2, [X8+40]
	044 Move X1, X19
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return X0

Method: UnityEngine.GameObject Instantiate(UnityEngine.GameObject original, UnityEngine.Transform parent = null, System.Boolean worldPositionStays = True)

Disassembly:
	0x03B281DC FDIV S0, S1, S0
	0x00000000 INVALID
	0x03B281E4 FMUL S9, S0, S9
	0x03B281E8 MOV S10, V1.S[1]
	0x03B281EC STR V1, [X31 + 0x4]
	0x03B281F0 CBNZ W8, 0x3B2820C
	0x03B281F4 ADRP X0, 0x5D2000
	0x03B281F8 LDR X0, [X0 + 0x4B8]
	0x03B281FC BL 0x1C16CF4
	0x03B28200 LDR V1, [X31 + 0x4]
	0x03B28204 MOVZ W8, 0x1
	0x03B28208 STRB W8, [X20 + 0xE39]
	0x03B2820C ADRP X8, 0x5D2000
	0x03B28210 LDR X8, [X8 + 0x4B8]
	0x03B28214 FMUL S2, S15, S15
	0x03B28218 FMUL S3, S14, S14
	0x03B2821C FADD S2, S2, S3
	0x03B28220 LDR X8, [X8]
	0x03B28224 FMUL S3, S8, S8
	0x03B28228 FADD S3, S3, S2
	0x03B2822C LDR V2, [X31 + 0x28]
	0x03B28230 LDR X8, [X8 + 0xB8]
	0x03B28234 FSUB S0, S13, S1
	0x03B28238 FSUB S1, S12, S10
	0x03B2823C FSUB S2, S2, S9
	0x03B28240 LDR V4, [X8]
	0x03B28244 STP S10, S9, [X31 + 0x2C]
	0x03B28248 FCMP S3, S4
	0x03B2824C B.MI 0x3B28288
	0x03B28250 FMUL S4, S15, S0
	0x03B28254 FMUL S5, S14, S1
	0x03B28258 FMUL S6, S8, S2
	0x03B2825C FADD S4, S4, S5
	0x03B28260 FADD S4, S6, S4
	0x03B28264 FMUL S5, S15, S4
	0x03B28268 FMUL S6, S14, S4
	0x03B2826C FMUL S4, S8, S4
	0x03B28270 FDIV S5, S5, S3
	0x03B28274 FDIV S6, S6, S3
	0x03B28278 FDIV S3, S4, S3
	0x03B2827C FSUB S0, S0, S5
	0x03B28280 FSUB S1, S1, S6
	0x03B28284 FSUB S2, S2, S3
	0x03B28288 CMP W24, 0x1
	0x03B2828C B.LT 0x3B2839C
	0x03B28290 ADRP X25, 0x631000
	0x03B28294 LDR X25, [X25 + 0xD10]
	0x03B28298 MOVZ W8, 0xC2C80000
	0x03B2829C FMOV S3, W8
	0x03B282A0 SUB W21, W31, W24
	0x03B282A4 MOVZ W24, 0x1
	0x03B282A8 FMUL S0, S0, S3
	0x03B282AC FMUL S10, S1, S3
	0x03B282B0 FMUL S9, S2, S3
	0x03B282B4 MOVZ W20, 0x1
	0x03B282B8 STR S0, [X31 + 0x28]
	0x03B282BC LDR X2, [X23]
	0x03B282C0 SUB W1, W20, 0x1
	0x03B282C4 MOV X0, X19
	0x03B282C8 ADD W26, W21, W20
	0x03B282CC BL 0x30CBE84
	0x03B282D0 LDP S8, S15, [X31 + 0x34]
	0x03B282D4 LDR V14, [X31 + 0x3C]
	0x03B282D8 MOV V11.16B, V0.16B
	0x03B282DC MOV V12.16B, V1.16B
	0x03B282E0 MOV V13.16B, V2.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x8BB000
	008 Move X22, 0x5CC000
	009 Move W8, [X23+1903]
	010 Move X22, [X22+1432]
	011 Move W20, W2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x5F4000
	019 Move X0, [X0+2720]
	020 Call 0x1C17CF4
	021 Move X0, 0x632000
	022 Move X0, [X0+3272]
	023 Call 0x1C17CF4
	024 Move X0, 0x5CC000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1903], W8
	029 Move X0, [X22]
	030 Move X22, 0x632000
	031 Move W8, [X0+224]
	032 Move X22, [X22+3272]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X3, [X22]
	037 And W2, W20, 1
	038 Move X0, X21
	039 Move X1, X19
	040 Call 0x222E4F8, X0, X1, X2
	041 Move X1, X31
	042 Move X2, X31
	043 Move X19, X0
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {75}
	049 Move X20, 0x5F4000
	050 Move X20, [X20+2720]
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X8, [X0+184]
	058 Move X8, [X8+16]
	059 Compare X8, 0
	060 JumpIfEqual {75}
	061 Move W9, [X0+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {70}
	064 Call 0x1C17DFC
	065 Move X8, [X20]
	066 Move X8, [X8+184]
	067 Move X8, [X8+16]
	068 Compare X8, 0
	069 JumpIfEqual {83}
	070 Move X9, [X8+24]
	071 Move X0, [X8+64]
	072 Move X2, [X8+40]
	073 Move X1, X19
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X0, X19
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 Return X0
	083 Call 0x1C17F20

Method: UnityEngine.GameObject Instantiate(UnityEngine.GameObject original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x03B282E4 CBZ W26, 0x3B28304
	0x03B282E8 LDR X2, [X23]
	0x03B282EC MOV X0, X19
	0x03B282F0 MOV W1, W20
	0x03B282F4 BL 0x30CBE84
	0x03B282F8 MOV V14.16B, V0.16B
	0x03B282FC MOV V15.16B, V1.16B
	0x03B28300 MOV V8.16B, V2.16B
	0x03B28304 LDR X0, [X25]
	0x03B28308 LDR W8, [X0 + 0xE0]
	0x03B2830C CBNZ W8, 0x3B28314
	0x03B28310 BL 0x1C16DFC
	0x03B28314 LDR V0, [X31 + 0x28]
	0x03B28318 LDR V1, [X31 + 0x2C]
	0x03B2831C FSUB S14, S14, S11
	0x03B28320 FSUB S15, S15, S12
	0x03B28324 STP S0, S10, [X31 + 0x10]
	0x03B28328 LDR V0, [X31 + 0x4]
	0x03B2832C FSUB S8, S8, S13
	0x03B28330 ADD X0, X31, 0x7C
	0x03B28334 ADD X1, X31, 0x78
	0x03B28338 STP S0, S1, [X31]
	0x03B2833C LDR V0, [X31 + 0x30]
	0x03B28340 MOV V1.16B, V12.16B
	0x03B28344 MOV V2.16B, V13.16B
	0x03B28348 MOV V3.16B, V14.16B
	0x03B2834C STR S0, [X31 + 0x8]
	0x03B28350 MOV V0.16B, V11.16B
	0x03B28354 MOV V4.16B, V15.16B
	0x03B28358 MOV V5.16B, V8.16B
	0x03B2835C STR X24, [X31 + 0x20]
	0x03B28360 STR S9, [X31 + 0x18]
	0x03B28364 BL 0x3B2848C
	0x03B28368 LDR V0, [X31 + 0x7C]
	0x03B2836C FMOV S1, 1
	0x03B28370 FCMP S0, S1
	0x03B28374 B.HI 0x3B2838C
	0x03B28378 LDR V1, [X31 + 0x78]
	0x03B2837C FCMP S1, 0x0
	0x03B28380 B.LT 0x3B2838C
	0x03B28384 FCMP S0, 0x0
	0x03B28388 B.GE 0x3B283F8
	0x03B2838C ADD W20, W20, 0x1
	0x03B28390 ADD W8, W21, W20

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x8BB000
	013 Move X20, 0x5F4000
	014 Move W8, [X21+1904]
	015 Move X20, [X20+2720]
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V12, V2
	021 Move V13, V1
	022 Move V14, V0
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x5F4000
	029 Move X0, [X0+2720]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1904], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move V1, V13
	040 Move V2, V12
	041 Move V3, V11
	042 Move V4, V10
	043 Move V5, V9
	044 Move V6, V8
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X30, [X31+64]
	048 Move X21, [X31+72]
	049 Move D9, [X31+48]
	050 Move D8, [X31+56]
	051 Move D11, [X31+32]
	052 Move D10, [X31+40]
	053 Move D13, [X31+16]
	054 Move D12, [X31+24]
	055 Move X1, X31
	056 Move V0, V14
	057 Move V14, [X31+96]

Method: UnityEngine.GameObject Instantiate(UnityEngine.GameObject original, UnityEngine.Transform parent, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x03B28394 CMP W8, 0x1
	0x03B28398 B.NE 0x3B282BC
	0x03B2839C ADRP X19, 0x8B0000
	0x03B283A0 LDRB W8, [X19 + 0x783]
	0x03B283A4 CBNZ W8, 0x3B283BC
	0x03B283A8 ADRP X0, 0x5CB000
	0x03B283AC LDR X0, [X0 + 0x5A0]
	0x03B283B0 BL 0x1C16CF4
	0x03B283B4 MOVZ W8, 0x1
	0x03B283B8 STRB W8, [X19 + 0x783]
	0x03B283BC LDR X8, [X22]
	0x03B283C0 LDR X8, [X8 + 0xB8]
	0x03B283C4 LDP S0, S1, [X8]
	0x03B283C8 LDR V2, [X8 + 0x8]
	0x03B283CC LDP X20, X19, [X31 + 0x120]
	0x03B283D0 LDP X22, X21, [X31 + 0x110]
	0x03B283D4 LDP X24, X23, [X31 + 0x100]
	0x03B283D8 LDP X26, X25, [X31 + 0xF0]
	0x03B283DC LDP X29, X30, [X31 + 0xE0]
	0x03B283E0 LDP D9, D8, [X31 + 0xD0]
	0x03B283E4 LDP D11, D10, [X31 + 0xC0]
	0x03B283E8 LDP D13, D12, [X31 + 0xB0]
	0x03B283EC LDP D15, D14, [X31 + 0xA0]
	0x03B283F0 ADD X31, X31, 0x130
	0x03B283F4 RET
	0x03B283F8 FMUL S1, S14, S0
	0x03B283FC FMUL S2, S15, S0
	0x03B28400 FMUL S3, S8, S0
	0x03B28404 FADD S0, S11, S1
	0x03B28408 FADD S1, S12, S2
	0x03B2840C FADD S2, S13, S3
	0x03B28410 B 0x3B283CC
	0x03B28414 BL 0x1C16F20
	0x03B28418 CMP W1, 0x1
	0x03B2841C MOV X21, X0
	0x03B28420 B.NE 0x3B28454
	0x03B28424 MOV X0, X21
	0x03B28428 BL 0x3EB1AD0
	0x03B2842C LDR X20, [X0]
	0x03B28430 BL 0x3EB1AE0
	0x03B28434 ADRP X8, 0x631000
	0x03B28438 LDR X8, [X8 + 0xD18]
	0x03B2843C ADD X0, X31, 0x80
	0x03B28440 LDR X1, [X8]
	0x03B28444 BL 0x2BD04F8
	0x03B28448 CBZ X20, 0x3B281CC
	0x03B2844C MOV X0, X20
	0x03B28450 BL 0x1C16F18
	0x03B28454 MOV X20, X31
	0x03B28458 B 0x3B28460
	0x03B2845C MOV X21, X0
	0x03B28460 ADRP X8, 0x631000
	0x03B28464 LDR X8, [X8 + 0xD18]
	0x03B28468 LDR X1, [X8]
	0x03B2846C ADD X0, X31, 0x80
	0x03B28470 BL 0x2BD04F8
	0x03B28474 CBNZ X20, 0x3B28480
	0x03B28478 MOV X0, X21
	0x03B2847C BL 0x1D2C690
	0x03B28480 MOV X0, X20
	0x03B28484 BL 0x1C16F18
	0x03B28488 BL 0x1990590
	0x03B2848C SUB X31, X31, 0x90
	0x03B28490 STP D15, D14, [X31 + 0x20]
	0x03B28494 STP D13, D12, [X31 + 0x30]
	0x03B28498 STP D11, D10, [X31 + 0x40]
	0x03B2849C STP D9, D8, [X31 + 0x50]
	0x03B284A0 STR X30, [X31 + 0x60]
	0x03B284A4 STP X22, X21, [X31 + 0x70]
	0x03B284A8 STP X20, X19, [X31 + 0x80]
	0x03B284AC STP S1, S2, [X31 + 0x18]
	0x03B284B0 STR S0, [X31 + 0x14]
	0x03B284B4 ADRP X22, 0x8BA000
	0x03B284B8 ADRP X21, 0x5CB000
	0x03B284BC LDP S11, S13, [X31 + 0xA4]
	0x03B284C0 LDRB W8, [X22 + 0x77A]
	0x03B284C4 LDR V12, [X31 + 0xA0]
	0x03B284C8 LDR X21, [X21 + 0x5A8]
	0x03B284CC MOV X19, X1
	0x03B284D0 MOV X20, X0
	0x03B284D4 MOV V8.16B, V5.16B
	0x03B284D8 MOV V9.16B, V4.16B
	0x03B284DC MOV V10.16B, V3.16B
	0x03B284E0 TBNZ X8, 0x0, 0x3B284F8
	0x03B284E4 ADRP X0, 0x5CB000
	0x03B284E8 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x8BB000
	014 Move X21, 0x5CC000
	015 Move W8, [X22+1905]
	016 Move X21, [X21+1432]
	017 Move V8, V6
	018 Move V9, V5
	019 Move V10, V4
	020 Move V11, V3
	021 Move V12, V2
	022 Move V13, V1
	023 Move V14, V0
	024 Move X19, X1
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0x5F4000
	031 Move X0, [X0+2720]
	032 Call 0x1C17CF4
	033 Move X0, 0x632000
	034 Move X0, [X0+3280]
	035 Call 0x1C17CF4
	036 Move X0, 0x5CC000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+1905], W8
	041 Move X0, [X21]
	042 Move X21, 0x632000
	043 Move W8, [X0+224]
	044 Move X21, [X21+3280]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X2, [X21]
	049 Move X0, X20
	050 Move V0, V14
	051 Move V1, V13
	052 Move V2, V12
	053 Move V3, V11
	054 Move V4, V10
	055 Move V5, V9
	056 Move V6, V8
	057 Move X1, X19
	058 Call 0x222E6B8, X0, X1, X2, X3
	059 Move X1, X31
	060 Move X2, X31
	061 Move X19, X0
	062 Call Object.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {93}
	067 Move X20, 0x5F4000
	068 Move X20, [X20+2720]
	069 Move X0, [X20]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X20]
	075 Move X8, [X0+184]
	076 Move X8, [X8+16]
	077 Compare X8, 0
	078 JumpIfEqual {93}
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {88}
	082 Call 0x1C17DFC
	083 Move X8, [X20]
	084 Move X8, [X8+184]
	085 Move X8, [X8+16]
	086 Compare X8, 0
	087 JumpIfEqual {107}
	088 Move X9, [X8+24]
	089 Move X0, [X8+64]
	090 Move X2, [X8+40]
	091 Move X1, X19
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X0, X19
	094 Move X20, [X31+80]
	095 Move X19, [X31+88]
	096 Move X22, [X31+64]
	097 Move X21, [X31+72]
	098 Move X30, [X31+56]
	099 Move D9, [X31+40]
	100 Move D8, [X31+48]
	101 Move D11, [X31+24]
	102 Move D10, [X31+32]
	103 Move D13, [X31+8]
	104 Move D12, [X31+16]
	105 Move V14, [X31+96]
	106 Return X0
	107 Call 0x1C17F20

Method: UnityEngine.GameObject CloneWithHideFlags(UnityEngine.GameObject original, UnityEngine.Transform parent = null)

Disassembly:
	0x03B284EC BL 0x1C16CF4
	0x03B284F0 MOVZ W8, 0x1
	0x03B284F4 STRB W8, [X22 + 0x77A]
	0x03B284F8 LDR X0, [X21]
	0x03B284FC FMUL S0, S10, S10
	0x03B28500 FMUL S1, S9, S9
	0x03B28504 FMUL S3, S10, S12
	0x03B28508 FMUL S4, S9, S11
	0x03B2850C FMUL S2, S8, S8
	0x03B28510 FADD S0, S0, S1
	0x03B28514 FMUL S1, S12, S12
	0x03B28518 FADD S3, S3, S4
	0x03B2851C FMUL S4, S11, S11
	0x03B28520 FADD S1, S1, S4
	0x03B28524 FMUL S4, S8, S13
	0x03B28528 FADD S0, S2, S0
	0x03B2852C FMUL S2, S13, S13
	0x03B28530 LDR V7, [X31 + 0xB0]
	0x03B28534 FADD S3, S4, S3
	0x03B28538 FCVT S14, S0
	0x03B2853C FADD S0, S2, S1
	0x03B28540 LDR W8, [X0 + 0xE0]
	0x03B28544 STP S13, S8, [X31 + 0x68]
	0x03B28548 FCVT S13, S3
	0x03B2854C FCVT S15, S0
	0x03B28550 FMUL D0, D14, D15
	0x03B28554 FMUL D1, D13, D13
	0x03B28558 FSUB D8, D0, D1
	0x03B2855C CBNZ W8, 0x3B2856C
	0x03B28560 STR D7, [X31 + 0x8]
	0x03B28564 BL 0x1C16DFC
	0x03B28568 LDR V7, [X31 + 0x8]
	0x03B2856C FABS D0, D8
	0x03B28570 FCMP D0, D7
	0x03B28574 B.PL 0x3B28584
	0x03B28578 STR W31, [X20]
	0x03B2857C FMOV S1, W31
	0x03B28580 B 0x3B28604
	0x03B28584 LDP S1, S2, [X31 + 0x90]
	0x03B28588 LDR V4, [X31 + 0x14]
	0x03B2858C LDR V3, [X31 + 0x98]
	0x03B28590 LDP S16, S6, [X31 + 0x68]
	0x03B28594 FSUB S1, S4, S1
	0x03B28598 LDR V4, [X31 + 0x18]
	0x03B2859C FSUB S2, S4, S2
	0x03B285A0 LDR V4, [X31 + 0x1C]
	0x03B285A4 FMUL S5, S9, S2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x8BB000
	007 Move X21, 0x5CC000
	008 Move W8, [X22+1906]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x5F4000
	017 Move X0, [X0+2720]
	018 Call 0x1C17CF4
	019 Move X0, 0x5D0000
	020 Move X0, [X0+464]
	021 Call 0x1C17CF4
	022 Move X0, 0x5CC000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+1906], W8
	027 Move X0, [X21]
	028 Move X22, 0x5D0000
	029 Move X21, 0x5F4000
	030 Move W8, [X0+224]
	031 Move X22, [X22+464]
	032 Move X21, [X21+2720]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X2, [X22]
	037 Move X0, X19
	038 Move X1, X20
	039 Call 0x222E488, X0, X1
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X1, X20
	049 Call GameObjectUtils.CopyHideFlagsRecursively, X0, X1
	050 Move X0, X20
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0

Method: System.Void CopyHideFlagsRecursively(UnityEngine.GameObject copyFrom, UnityEngine.GameObject copyTo)

Disassembly:
	0x03B285A8 FMUL S2, S11, S2
	0x03B285AC FSUB S3, S4, S3
	0x03B285B0 FMUL S4, S10, S1
	0x03B285B4 FMUL S1, S12, S1
	0x03B285B8 FMUL S6, S6, S3
	0x03B285BC FMUL S3, S16, S3
	0x03B285C0 FADD S4, S4, S5
	0x03B285C4 FADD S1, S1, S2
	0x03B285C8 FADD S2, S6, S4
	0x03B285CC FADD S1, S3, S1
	0x03B285D0 FCVT S1, S1
	0x03B285D4 FCVT S2, S2
	0x03B285D8 FMUL D3, D13, D1
	0x03B285DC FMUL D4, D2, D15
	0x03B285E0 FMUL D1, D14, D1
	0x03B285E4 FMUL D2, D2, D13
	0x03B285E8 FSUB D3, D3, D4
	0x03B285EC FSUB D1, D1, D2
	0x03B285F0 FDIV D2, D3, D8
	0x03B285F4 FDIV D1, D1, D8
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B28600 STR S2, [X20]
	0x03B28604 STR S1, [X19]
	0x03B28608 LDP X20, X19, [X31 + 0x80]
	0x03B2860C LDP X22, X21, [X31 + 0x70]
	0x03B28610 LDR X30, [X31 + 0x60]
	0x03B28614 LDP D9, D8, [X31 + 0x50]
	0x03B28618 LDP D11, D10, [X31 + 0x40]
	0x03B2861C LDP D13, D12, [X31 + 0x30]
	0x03B28620 LDP D15, D14, [X31 + 0x20]
	0x03B28624 FCMP D0, D7
	0x03B28628 CSET W0, PL
	0x03B2862C ADD X31, X31, 0x90
	0x03B28630 RET
	0x03B28634 STP X30, X23, [X31 - 0x30]!
	0x03B28638 STP X22, X21, [X31 + 0x10]
	0x03B2863C STP X20, X19, [X31 + 0x20]
	0x03B28640 ADRP X23, 0x8BA000
	0x03B28644 ADRP X22, 0x631000
	0x03B28648 LDRB W8, [X23 + 0x779]
	0x03B2864C LDR X22, [X22 + 0xD38]
	0x03B28650 MOV W21, W2
	0x03B28654 MOV W19, W1
	0x03B28658 MOV X20, X0
	0x03B2865C TBNZ X8, 0x0, 0x3B28680
	0x03B28660 ADRP X0, 0x631000
	0x03B28664 LDR X0, [X0 + 0xD38]
	0x03B28668 BL 0x1C16CF4
	0x03B2866C ADRP X0, 0x5CC000
	0x03B28670 LDR X0, [X0 + 0xE10]
	0x03B28674 BL 0x1C16CF4
	0x03B28678 MOVZ W8, 0x1
	0x03B2867C STRB W8, [X23 + 0x779]
	0x03B28680 LDR X2, [X22]
	0x03B28684 SUB W22, W19, 0x2
	0x03B28688 ADD W1, W22, W22, 0x1, LSL
	0x03B2868C MOV X0, X20
	0x03B28690 BL 0x2212EA8
	0x03B28694 CMP W22, 0x1
	0x03B28698 TBZ X21, 0x0, 0x3B287D4
	0x03B2869C B.LT 0x3B28908
	0x03B286A0 CBZ X20, 0x3B28918
	0x03B286A4 ADRP X22, 0x5CC000
	0x03B286A8 LDR X22, [X22 + 0xE10]
	0x03B286AC MOVZ W21, 0x2
	0x03B286B0 LDR W10, [X20 + 0x1C]
	0x03B286B4 LDR X8, [X20 + 0x10]
	0x03B286B8 LDR X9, [X22]
	0x03B286BC ADD W10, W10, 0x1
	0x03B286C0 STR W10, [X20 + 0x1C]
	0x03B286C4 CBZ X8, 0x3B28918
	0x03B286C8 LDRSW X10, [X20 + 0x18]
	0x03B286CC LDR W11, [X8 + 0x18]
	0x03B286D0 CMP W10, W11
	0x03B286D4 B.CS 0x3B286F8
	0x03B286D8 ADD W11, W10, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8BB000
	009 Move W8, [X21+1907]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x5F4000
	017 Move X0, [X0+2720]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1907], W8
	021 Compare X19, 0
	022 JumpIfEqual {91}
	023 Move X0, X19
	024 Move X1, X31
	025 Call Object.get_hideFlags, X0
	026 Compare X20, 0
	027 JumpIfEqual {91}
	028 Move W1, W0
	029 Move X0, X20
	030 Move X2, X31
	031 Call Object.set_hideFlags, X0, X1
	032 Move X0, X19
	033 Move X1, X31
	034 Call GameObject.get_transform, X0
	035 Move X19, X0
	036 Move X0, X20
	037 Move X1, X31
	038 Call GameObject.get_transform, X0
	039 Compare X19, 0
	040 JumpIfEqual {91}
	041 Move X20, X0
	042 Move X0, X19
	043 Move X1, X31
	044 Call Transform.get_childCount, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X24, 0x5F4000
	047 Move X24, [X24+2720]
	048 Move W21, W31
	049 Move X0, X19
	050 Move W1, W21
	051 Move X2, X31
	052 Call Transform.GetChild, X0, X1
	053 Compare X0, 0
	054 JumpIfEqual {91}
	055 Move X1, X31
	056 Call Component.get_gameObject, X0
	057 Compare X20, 0
	058 JumpIfEqual {91}
	059 Move X22, X0
	060 Move X0, X20
	061 Move W1, W21
	062 Move X2, X31
	063 Call Transform.GetChild, X0, X1
	064 Compare X0, 0
	065 JumpIfEqual {91}
	066 Move X1, X31
	067 Call Component.get_gameObject, X0
	068 Move X8, [X24]
	069 Move X23, X0
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X0, X22
	076 Move X1, X23
	077 Call GameObjectUtils.CopyHideFlagsRecursively, X0, X1
	078 Move X0, X19
	079 Move X1, X31
	080 Add W21, W21, 1
	081 Call Transform.get_childCount, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 Move X30, [X31+64]
	090 Return 
	091 Call 0x1C17F20

Method: T ExhaustiveComponentSearch(UnityEngine.GameObject desiredSource)

Disassembly:
	0x021E78B0 CBZ X8, 0x21E7A14
	0x021E78B4 LDRSW X10, [X19 + 0x18]
	0x021E78B8 LDR W11, [X8 + 0x18]
	0x021E78BC CMP W10, W11
	0x021E78C0 B.CS 0x21E78D8
	0x021E78C4 ADD W9, W10, 0x1
	0x021E78C8 ADD X8, X8, X10, 0x3, LSL
	0x021E78CC STR W9, [X19 + 0x18]
	0x021E78D0 STR X1, [X8 + 0x20]
	0x021E78D4 B 0x21E77F4
	0x021E78D8 LDR X8, [X9 + 0x20]
	0x021E78DC LDR X8, [X8 + 0xC0]
	0x021E78E0 LDR X2, [X8 + 0x70]
	0x021E78E4 MOV X0, X19
	0x021E78E8 BL 0x301BF90
	0x021E78EC B 0x21E77F4
	0x021E78F0 ADRP X8, 0x1F34000
	0x021E78F4 LDR X8, [X8 + 0xAA8]
	0x021E78F8 ADD X0, X31, 0x20
	0x021E78FC LDR X1, [X8]
	0x021E7900 BL 0x2BC434C
	0x021E7904 TBZ X22, 0x0, 0x21E79F0
	0x021E7908 LDR X0, [X21 + 0x18]
	0x021E790C CBZ X0, 0x21E7A24
	0x021E7910 LDR X1, [X26]
	0x021E7914 ADD X8, X31, 0x8
	0x021E7918 BL 0x301CB58
	0x021E791C LDUR V0, [X31 + 0x8]
	0x021E7920 LDR X8, [X31 + 0x18]
	0x021E7924 ADRP X22, 0x1F12000
	0x021E7928 LDR X22, [X22 + 0xC38]
	0x021E792C STR V0, [X31 + 0x2]
	0x021E7930 STR X8, [X31 + 0x30]
	0x021E7934 ADRP X23, 0x1F0C000
	0x021E7938 LDR X23, [X23 + 0x598]
	0x021E793C LDR X1, [X25]
	0x021E7940 ADD X0, X31, 0x20
	0x021E7944 BL 0x2BC4350
	0x021E7948 TBZ X0, 0x0, 0x21E79DC
	0x021E794C LDR X24, [X31 + 0x30]
	0x021E7950 CBZ X24, 0x21E793C
	0x021E7954 LDR X9, [X24]
	0x021E7958 LDR X8, [X22]
	0x021E795C LDRB W11, [X9 + 0x130]
	0x021E7960 LDRB W10, [X8 + 0x130]
	0x021E7964 CMP W11, W10
	0x021E7968 B.CC 0x21E793C
	0x021E796C LDR X9, [X9 + 0xC8]
	0x021E7970 ADD X9, X9, X10, 0x3, LSL
	0x021E7974 LDUR X9, [X9 - 0x8]
	0x021E7978 CMP X9, X8
	0x021E797C B.NE 0x21E793C
	0x021E7980 LDR X0, [X23]
	0x021E7984 LDR X21, [X24 + 0x38]
	0x021E7988 LDR W8, [X0 + 0xE0]
	0x021E798C CBNZ W8, 0x21E7994
	0x021E7990 BL 0x1C16DFC
	0x021E7994 MOV X0, X21
	0x021E7998 MOV X1, X31
	0x021E799C MOV X2, X31
	0x021E79A0 BL 0x3C354F8
	0x021E79A4 TBZ X0, 0x0, 0x21E793C
	0x021E79A8 LDR X0, [X24 + 0x38]
	0x021E79AC CBZ X0, 0x21E7A28

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1F0D000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X22, 0x1F0D000
	020 Move X22, [X22+1432]
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X21
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move X20, X31
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {43}
	035 Compare X21, 0
	036 JumpIfEqual {81}
	037 Move X8, [X19+56]
	038 Move W1, 1
	039 Move X0, X21
	040 Move X2, [X8+8]
	041 Call 0x21E668C, X0, X1
	042 Move X20, X0
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {65}
	056 Move X0, [X22]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X8, [X19+56]
	062 Move X0, [X8+16]
	063 Call 0x222E02C
	064 Move X20, X0
	065 Move X0, [X22]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move X0, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20

Method: T ExhaustiveTaggedComponentSearch(UnityEngine.GameObject desiredSource, System.String tag)

Disassembly:
	0x021E79B0 LDR X8, [X20 + 0x38]
	0x021E79B4 LDR X2, [X8 + 0x20]
	0x021E79B8 MOVZ W1, 0x1
	0x021E79BC BL 0x21E770C
	0x021E79C0 MOV X1, X0
	0x021E79C4 CBZ X19, 0x21E7A2C
	0x021E79C8 LDR X8, [X20 + 0x38]
	0x021E79CC LDR X2, [X8 + 0x28]
	0x021E79D0 MOV X0, X19
	0x021E79D4 BL 0x301C194
	0x021E79D8 B 0x21E793C
	0x021E79DC ADRP X8, 0x1F34000
	0x021E79E0 LDR X8, [X8 + 0xAA8]
	0x021E79E4 ADD X0, X31, 0x20
	0x021E79E8 LDR X1, [X8]
	0x021E79EC BL 0x2BC434C
	0x021E79F0 MOV X0, X19
	0x021E79F4 LDP X20, X19, [X31 + 0x80]
	0x021E79F8 LDP X22, X21, [X31 + 0x70]
	0x021E79FC LDP X24, X23, [X31 + 0x60]
	0x021E7A00 LDP X26, X25, [X31 + 0x50]
	0x021E7A04 LDR X30, [X31 + 0x40]
	0x021E7A08 ADD X31, X31, 0x90
	0x021E7A0C RET
	0x021E7A10 BL 0x1C16F20
	0x021E7A14 BL 0x1C16F20
	0x021E7A18 MOV X0, X23
	0x021E7A1C MOV X1, X24
	0x021E7A20 BL 0x1C171E0
	0x021E7A24 BL 0x1C16F20
	0x021E7A28 BL 0x1C16F20
	0x021E7A2C BL 0x1C16F20
	0x021E7A30 B 0x21E7A44
	0x021E7A34 B 0x21E7A44
	0x021E7A38 B 0x21E7A44
	0x021E7A3C B 0x21E7A44
	0x021E7A40 B 0x21E7A44
	0x021E7A44 MOV X20, X0
	0x021E7A48 CMP W1, 0x1
	0x021E7A4C B.NE 0x21E7A80
	0x021E7A50 MOV X0, X20
	0x021E7A54 BL 0x3EB1AD0
	0x021E7A58 LDR X21, [X0]
	0x021E7A5C BL 0x3EB1AE0
	0x021E7A60 ADRP X8, 0x1F34000
	0x021E7A64 LDR X8, [X8 + 0xAA8]
	0x021E7A68 ADD X0, X31, 0x20
	0x021E7A6C LDR X1, [X8]
	0x021E7A70 BL 0x2BC434C
	0x021E7A74 CBZ X21, 0x21E79F0
	0x021E7A78 MOV X0, X21
	0x021E7A7C BL 0x1C16F18
	0x021E7A80 MOV X21, X31
	0x021E7A84 B 0x21E7A8C
	0x021E7A88 MOV X20, X0
	0x021E7A8C ADRP X8, 0x1F34000
	0x021E7A90 LDR X8, [X8 + 0xAA8]
	0x021E7A94 LDR X1, [X8]
	0x021E7A98 ADD X0, X31, 0x20
	0x021E7A9C BL 0x2BC434C
	0x021E7AA0 CBZ X21, 0x21E7B14
	0x021E7AA4 MOV X0, X21
	0x021E7AA8 BL 0x1C16F18
	0x021E7AAC B 0x21E7AB8
	0x021E7AB0 B 0x21E7AB8
	0x021E7AB4 B 0x21E7AB8
	0x021E7AB8 CMP W1, 0x1
	0x021E7ABC B.NE 0x21E7AEC
	0x021E7AC0 BL 0x3EB1AD0
	0x021E7AC4 LDR X23, [X0]
	0x021E7AC8 BL 0x3EB1AE0
	0x021E7ACC ADRP X8, 0x1F34000
	0x021E7AD0 LDR X8, [X8 + 0xAA8]
	0x021E7AD4 ADD X0, X31, 0x20
	0x021E7AD8 LDR X1, [X8]
	0x021E7ADC BL 0x2BC434C
	0x021E7AE0 CBZ X23, 0x21E7904
	0x021E7AE4 MOV X0, X23
	0x021E7AE8 BL 0x1C16F18
	0x021E7AEC MOV X20, X0
	0x021E7AF0 MOV X23, X31
	0x021E7AF4 B 0x21E7AFC
	0x021E7AF8 MOV X20, X0
	0x021E7AFC ADRP X8, 0x1F34000
	0x021E7B00 LDR X8, [X8 + 0xAA8]
	0x021E7B04 LDR X1, [X8]
	0x021E7B08 ADD X0, X31, 0x20
	0x021E7B0C BL 0x2BC434C
	0x021E7B10 CBNZ X23, 0x21E7B1C
	0x021E7B14 MOV X0, X20
	0x021E7B18 BL 0x1D2C690
	0x021E7B1C MOV X0, X23
	0x021E7B20 BL 0x1C16F18
	0x021E7B24 BL 0x1990590
	0x021E7B28 SUB X31, X31, 0x40
	0x021E7B2C STP X2, X30, [X31 + 0x8]
	0x021E7B30 STP X22, X21, [X31 + 0x20]
	0x021E7B34 STP X20, X19, [X31 + 0x30]
	0x021E7B38 STR X1, [X31]
	0x021E7B3C LDR X8, [X3 + 0x38]
	0x021E7B40 MOV X20, X3
	0x021E7B44 MOV X21, X2
	0x021E7B48 MOV X22, X1
	0x021E7B4C MOV X19, X0
	0x021E7B50 CBNZ X8, 0x21E7B60
	0x021E7B54 MOV X0, X20
	0x021E7B58 BL 0x1C5C6E0
	0x021E7B5C LDR X8, [X20 + 0x38]
	0x021E7B60 LDR X2, [X8 + 0x8]
	0x021E7B64 MOV X0, X22
	0x021E7B68 MOV X1, X21
	0x021E7B6C LDR X8, [X2]
	0x021E7B70 BLR X8
	0x021E7B74 MOV X1, X31
	0x021E7B78 BL 0x33C693C
	0x021E7B7C LDR X8, [X20 + 0x38]
	0x021E7B80 MOV X21, X0
	0x021E7B84 ADD X0, X31, 0x0
	0x021E7B88 LDR X1, [X8 + 0x10]
	0x021E7B8C LDR X8, [X1]
	0x021E7B90 BLR X8
	0x021E7B94 LDR X8, [X20 + 0x38]
	0x021E7B98 MOV W20, W0
	0x021E7B9C LDR X8, [X8 + 0x20]
	0x021E7BA0 LDR X9, [X8]
	0x021E7BA4 MOV X0, X8
	0x021E7BA8 BLR X9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X2+56]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {22}
	014 Move X0, 0x1F0D000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X23, 0x1F0D000
	023 Move X23, [X23+1432]
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move X21, X31
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {72}
	038 Compare X22, 0
	039 JumpIfEqual {158}
	040 Move X8, [X19+56]
	041 Move W1, 1
	042 Move X0, X22
	043 Move X2, [X8+8]
	044 Call 0x21E6F84, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {158}
	047 Move W8, [X0+24]
	048 Move X22, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W24, W31
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X8, X22, W24
	053 Move X21, [X8+32]
	054 Compare X21, 0
	055 JumpIfEqual {158}
	056 Move X0, X21
	057 Move X1, X31
	058 Call Component.get_gameObject, X0
	059 Compare X0, 0
	060 JumpIfEqual {158}
	061 Move X1, X20
	062 Move X2, X31
	063 Call GameObject.CompareTag, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {72}
	068 Move W8, [X22+24]
	069 Add W24, W24, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X21, X31
	072 Move X0, [X23]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X21
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {120}
	085 Move X0, X20
	086 Move X1, X31
	087 Call GameObject.FindGameObjectsWithTag, X0
	088 Compare X0, 0
	089 JumpIfEqual {158}
	090 Move W8, [X0+24]
	091 Move X20, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W22, W31
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X8, X20, W22
	096 Move X0, [X8+32]
	097 Compare X0, 0
	098 JumpIfEqual {158}
	099 Move X8, [X19+56]
	100 Move X1, [X8+24]
	101 Call 0x21E62E4, X0
	102 Move X8, [X23]
	103 Move X21, X0
	104 Move W9, [X8+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X31
	111 Move X2, X31
	112 Call Object.op_Inequality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {120}
	117 Move W8, [X20+24]
	118 Add W22, W22, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, [X23]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Move X2, X31
	128 Call Object.op_Equality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {149}
	133 Move X0, [X23]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X8, [X19+56]
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X0, [X8+32]
	146 Move X30, [X31+64]
	147 Call 0x222E02C
	148 Return X0
	149 Move X0, X21
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Return X0
	158 Call 0x1C17F20
	159 Call 0x1C17F28

Method: T GetComponentInScene(UnityEngine.SceneManagement.Scene scene)

Disassembly:
	0x021E7C40 MOV W2, W31
	0x021E7C44 MOV W3, W31
	0x021E7C48 MOV X6, X31
	0x021E7C4C LDR X30, [X31], #0x30
	0x021E7C50 B 0x3C16590
	0x021E7C54 SUB X31, X31, 0x50
	0x021E7C58 STP X30, X25, [X31 + 0x10]
	0x021E7C5C STP X24, X23, [X31 + 0x20]
	0x021E7C60 STP X22, X21, [X31 + 0x30]
	0x021E7C64 STP X20, X19, [X31 + 0x40]
	0x021E7C68 LDR X8, [X6 + 0x38]
	0x021E7C6C MOV X19, X6
	0x021E7C70 MOV W20, W5
	0x021E7C74 MOV W21, W4
	0x021E7C78 MOV W22, W3
	0x021E7C7C MOV X24, X2
	0x021E7C80 MOV X25, X1
	0x021E7C84 MOV X23, X0
	0x021E7C88 CBNZ X8, 0x21E7C94
	0x021E7C8C MOV X0, X19
	0x021E7C90 BL 0x1C5C6E0
	0x021E7C94 ORR W8, W21, W22, 0x0
	0x021E7C98 ORR W8, W8, W20, 0x0
	0x021E7C9C TBNZ X8, 0x1F, 0x21E7CFC
	0x021E7CA0 ADD W8, W20, W22
	0x021E7CA4 CMP W8, W24
	0x021E7CA8 B.GT 0x21E7CFC
	0x021E7CAC LDR X8, [X19 + 0x38]
	0x021E7CB0 MOV X0, X25
	0x021E7CB4 MOV X1, X24
	0x021E7CB8 LDR X2, [X8 + 0x18]
	0x021E7CBC BL 0x22226D4
	0x021E7CC0 MOV X1, X31
	0x021E7CC4 BL 0x33C693C
	0x021E7CC8 MOV X1, X0
	0x021E7CCC MOV X0, X23
	0x021E7CD0 MOV W2, W22
	0x021E7CD4 MOV W3, W21
	0x021E7CD8 MOV W4, W20
	0x021E7CDC LDP X20, X19, [X31 + 0x40]
	0x021E7CE0 LDP X22, X21, [X31 + 0x30]
	0x021E7CE4 LDP X24, X23, [X31 + 0x20]
	0x021E7CE8 LDP X30, X25, [X31 + 0x10]
	0x021E7CEC MOVZ W5, 0x4
	0x021E7CF0 MOV X6, X31
	0x021E7CF4 ADD X31, X31, 0x50
	0x021E7CF8 B 0x3C16590
	0x021E7CFC STR W22, [X31 + 0xC]
	0x021E7D00 ADRP X22, 0x1F0C000
	0x021E7D04 LDR X22, [X22 + 0x758]
	0x021E7D08 MOV X0, X22
	0x021E7D0C BL 0x1C16D08
	0x021E7D10 ADD X1, X31, 0xC
	0x021E7D14 BL 0x1C16E04
	0x021E7D18 MOV X23, X0
	0x021E7D1C MOV X0, X22
	0x021E7D20 STR W21, [X31 + 0x8]
	0x021E7D24 BL 0x1C16D08
	0x021E7D28 ADD X1, X31, 0x8
	0x021E7D2C BL 0x1C16E04
	0x021E7D30 MOV X21, X0
	0x021E7D34 MOV X0, X22
	0x021E7D38 STR W20, [X31 + 0x4]
	0x021E7D3C BL 0x1C16D08
	0x021E7D40 ADD X1, X31, 0x4
	0x021E7D44 BL 0x1C16E04
	0x021E7D48 MOV X20, X0
	0x021E7D4C ADRP X0, 0x1F34000
	0x021E7D50 LDR X0, [X0 + 0xAC8]
	0x021E7D54 BL 0x1C16D08
	0x021E7D58 MOV X1, X23
	0x021E7D5C MOV X2, X21
	0x021E7D60 MOV X3, X20
	0x021E7D64 MOV X4, X31
	0x021E7D68 BL 0x3227C18
	0x021E7D6C MOV X20, X0
	0x021E7D70 ADRP X0, 0x1F14000
	0x021E7D74 LDR X0, [X0 + 0x760]
	0x021E7D78 BL 0x1C16D08
	0x021E7D7C BL 0x1C16F10
	0x021E7D80 MOV X1, X20
	0x021E7D84 MOV X2, X31
	0x021E7D88 MOV X21, X0
	0x021E7D8C BL 0x3316014
	0x021E7D90 MOV X0, X21
	0x021E7D94 MOV X1, X19
	0x021E7D98 BL 0x1C16DEC
	0x021E7D9C SUB X31, X31, 0x50
	0x021E7DA0 STP X30, X23, [X31 + 0x20]
	0x021E7DA4 STP X22, X21, [X31 + 0x30]
	0x021E7DA8 STP X20, X19, [X31 + 0x40]
	0x021E7DAC STP X1, X2, [X31 + 0x10]
	0x021E7DB0 LDR X8, [X6 + 0x38]
	0x021E7DB4 MOV X19, X6
	0x021E7DB8 MOV W20, W5
	0x021E7DBC MOV W21, W4
	0x021E7DC0 MOV W22, W3
	0x021E7DC4 MOV X23, X0
	0x021E7DC8 CBNZ X8, 0x21E7DD4
	0x021E7DCC MOV X0, X19
	0x021E7DD0 BL 0x1C5C6E0
	0x021E7DD4 ORR W8, W21, W22, 0x0
	0x021E7DD8 ORR W8, W8, W20, 0x0
	0x021E7DDC TBNZ X8, 0x1F, 0x21E7E68
	0x021E7DE0 LDR X8, [X19 + 0x38]
	0x021E7DE4 ADD X0, X31, 0x10
	0x021E7DE8 LDR X1, [X8 + 0x8]
	0x021E7DEC LDR X8, [X1]
	0x021E7DF0 BLR X8
	0x021E7DF4 ADD W8, W20, W22
	0x021E7DF8 CMP W8, W0
	0x021E7DFC B.GT 0x21E7E68
	0x021E7E00 LDR X8, [X19 + 0x38]
	0x021E7E04 LDP X0, X1, [X31 + 0x10]
	0x021E7E08 LDR X2, [X8 + 0x18]
	0x021E7E0C LDR X8, [X2]
	0x021E7E10 BLR X8
	0x021E7E14 MOV X1, X31
	0x021E7E18 BL 0x33C693C
	0x021E7E1C LDR X8, [X19 + 0x38]
	0x021E7E20 MOV X19, X0
	0x021E7E24 LDR X8, [X8 + 0x20]
	0x021E7E28 LDR X9, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move [X31+40], W0
	008 Move X8, [X1+56]
	009 Move X19, X1
	010 Compare X8, 0
	011 JumpIfNotEqual {35}
	012 Move X0, 0x1F13000
	013 Move X0, [X0+3536]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F13000
	016 Move X0, [X0+3544]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F13000
	019 Move X0, [X0+3552]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F35000
	022 Move X0, [X0+2720]
	023 Call 0x1C17CF4
	024 Move X0, 0x1F13000
	025 Move X0, [X0+3560]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F0D000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X19
	034 Call 0x1C5D6E0
	035 Move X20, 0x1F35000
	036 Move X20, [X20+2720]
	037 Move [X31+8], X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move X0, [X20]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Add X0, X31, 40
	048 Move X2, X31
	049 Move X1, [X8]
	050 Call Scene.GetRootGameObjects, X0, X1
	051 Move X8, [X20]
	052 Move X8, [X8+184]
	053 Move X0, [X8]
	054 Compare X0, 0
	055 JumpIfEqual {106}
	056 Move X8, 0x1F13000
	057 Move X8, [X8+3560]
	058 Move X1, [X8]
	059 Add X8, X31, 8
	060 Call List`1<Object>.GetEnumerator, X0
	061 Move X21, 0x1F13000
	062 Move X22, 0x1F0D000
	063 Move X21, [X21+3544]
	064 Move X22, [X22+1432]
	065 Move X1, [X21]
	066 Add X0, X31, 8
	067 Call Enumerator<Object>.MoveNext, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {91}
	072 Move X0, [X31+24]
	073 Compare X0, 0
	074 JumpIfEqual {105}
	075 Move X8, [X19+56]
	076 Move X1, [X8]
	077 Call 0x21E6548, X0
	078 Move X20, X0
	079 Move X0, [X22]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X20
	085 Move X1, X31
	086 Call Object.op_Implicit, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {65}
	091 Move X20, X31
	092 Move X8, 0x1F13000
	093 Move X8, [X8+3536]
	094 Add X0, X31, 8
	095 Move X1, [X8]
	096 Call Enumerator<Object>.Dispose, X0
	097 Move X0, X20
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X30, [X31+32]
	103 Add X31, X31, 80
	104 Return X0
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Move X19, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, X19
	110 Call 0x3EB2AD0
	111 Move X20, [X0]
	112 Call 0x3EB2AE0
	113 Move X8, 0x1F13000
	114 Move X8, [X8+3536]
	115 Add X0, X31, 8
	116 Move X1, [X8]
	117 Call Enumerator<Object>.Dispose, X0
	118 Compare X20, 0
	119 JumpIfEqual {97}
	120 Move X0, X20
	121 Call 0x1C17F18
	122 Move X20, X31
	123 Move X19, X0
	124 Move X8, 0x1F13000
	125 Move X8, [X8+3536]
	126 Move X1, [X8]
	127 Add X0, X31, 8
	128 Call Enumerator<Object>.Dispose, X0
	129 Compare X20, 0
	130 JumpIfNotEqual {133}
	131 Move X0, X19
	132 Call 0x1D2D690
	133 Move X0, X20
	134 Call 0x1C17F18
	135 Call 0x1991590

Method: System.Void GetComponentsInScene(UnityEngine.SceneManagement.Scene scene, System.Collections.Generic.List`1<T> components, System.Boolean includeInactive = False)

Disassembly:
	0x021E7FE8 ADRP X0, 0x1F0C000
	0x021E7FEC LDR X0, [X0 + 0x6C0]
	0x021E7FF0 MOV X20, X1
	0x021E7FF4 BL 0x1C16CF4
	0x021E7FF8 LDR X8, [X20 + 0x38]
	0x021E7FFC CBNZ X8, 0x21E800C
	0x021E8000 MOV X0, X20
	0x021E8004 BL 0x1C5C6E0
	0x021E8008 LDR X8, [X20 + 0x38]
	0x021E800C ADRP X9, 0x1F0B000
	0x021E8010 LDR X9, [X9 + 0x6C0]
	0x021E8014 LDR X20, [X8]
	0x021E8018 LDR X0, [X9]
	0x021E801C LDR W9, [X0 + 0xE0]
	0x021E8020 CBNZ W9, 0x21E8028
	0x021E8024 BL 0x1C16DFC
	0x021E8028 MOV X0, X20
	0x021E802C MOV X1, X31
	0x021E8030 BL 0x338C698
	0x021E8034 CBZ X0, 0x21E805C
	0x021E8038 LDR X8, [X0]
	0x021E803C LDR X9, [X8 + 0x2E8]
	0x021E8040 LDR X1, [X8 + 0x2F0]
	0x021E8044 BLR X9
	0x021E8048 MOV X1, X19
	0x021E804C LDP X20, X19, [X31 + 0x10]
	0x021E8050 MOV X2, X31
	0x021E8054 LDR X30, [X31], #0x20
	0x021E8058 B 0x3C4BD34
	0x021E805C BL 0x1C16F20
	0x021E8060 STP X30, X19, [X31 - 0x10]!
	0x021E8064 LDR X8, [X0 + 0x38]
	0x021E8068 CBNZ X8, 0x21E8090
	0x021E806C MOV X19, X0
	0x021E8070 ADRP X0, 0x1F0B000
	0x021E8074 LDR X0, [X0 + 0x6C0]
	0x021E8078 BL 0x1C16CF4
	0x021E807C LDR X8, [X19 + 0x38]
	0x021E8080 CBNZ X8, 0x21E8090
	0x021E8084 MOV X0, X19
	0x021E8088 BL 0x1C5C6E0
	0x021E808C LDR X8, [X19 + 0x38]
	0x021E8090 ADRP X9, 0x1F0B000
	0x021E8094 LDR X9, [X9 + 0x6C0]
	0x021E8098 LDR X19, [X8]
	0x021E809C LDR X0, [X9]
	0x021E80A0 LDR W9, [X0 + 0xE0]
	0x021E80A4 CBNZ W9, 0x21E80AC
	0x021E80A8 BL 0x1C16DFC
	0x021E80AC MOV X0, X19
	0x021E80B0 MOV X1, X31
	0x021E80B4 BL 0x338C698
	0x021E80B8 CBZ X0, 0x21E80D8
	0x021E80BC LDR X8, [X0]
	0x021E80C0 LDR X9, [X8 + 0x2E8]
	0x021E80C4 LDR X1, [X8 + 0x2F0]
	0x021E80C8 BLR X9
	0x021E80CC MOV X1, X31
	0x021E80D0 LDP X30, X19, [X31], #0x10
	0x021E80D4 B 0x3C4BD78
	0x021E80D8 BL 0x1C16F20
	0x021E80DC STP X30, X21, [X31 - 0x20]!
	0x021E80E0 STP X20, X19, [X31 + 0x10]
	0x021E80E4 ADRP X21, 0x21F1000
	0x021E80E8 ADRP X20, 0x1F33000
	0x021E80EC LDRB W8, [X21 + 0x830]
	0x021E80F0 LDR X20, [X20 + 0xAD8]
	0x021E80F4 MOV X19, X0
	0x021E80F8 TBNZ X8, 0x0, 0x21E8134
	0x021E80FC ADRP X0, 0x1F33000
	0x021E8100 LDR X0, [X0 + 0xAE0]
	0x021E8104 BL 0x1C16CF4
	0x021E8108 ADRP X0, 0x1F33000
	0x021E810C LDR X0, [X0 + 0xAE8]
	0x021E8110 BL 0x1C16CF4
	0x021E8114 ADRP X0, 0x1F33000
	0x021E8118 LDR X0, [X0 + 0xAD8]
	0x021E811C BL 0x1C16CF4
	0x021E8120 ADRP X0, 0x1F33000
	0x021E8124 LDR X0, [X0 + 0xAF0]
	0x021E8128 BL 0x1C16CF4
	0x021E812C MOVZ W8, 0x1
	0x021E8130 STRB W8, [X21 + 0x830]
	0x021E8134 LDR X0, [X20]
	0x021E8138 LDR W8, [X0 + 0xE0]
	0x021E813C CBNZ W8, 0x21E8148
	0x021E8140 BL 0x1C16DFC
	0x021E8144 LDR X0, [X20]
	0x021E8148 LDR X8, [X0 + 0xB8]
	0x021E814C LDR X0, [X8 + 0x8]
	0x021E8150 CBZ X0, 0x21E8224
	0x021E8154 ADRP X8, 0x1F33000
	0x021E8158 LDR X8, [X8 + 0xAE0]
	0x021E815C MOV X1, X19
	0x021E8160 LDR X2, [X8]
	0x021E8164 BL 0x2AA528C
	0x021E8168 TBZ X0, 0x0, 0x21E81F0
	0x021E816C LDR X0, [X20]
	0x021E8170 LDR W8, [X0 + 0xE0]
	0x021E8174 CBNZ W8, 0x21E8180
	0x021E8178 BL 0x1C16DFC
	0x021E817C LDR X0, [X20]
	0x021E8180 LDR X8, [X0 + 0xB8]
	0x021E8184 LDR X0, [X8 + 0x8]
	0x021E8188 CBZ X0, 0x21E8224
	0x021E818C ADRP X8, 0x1F33000
	0x021E8190 LDR X8, [X8 + 0xAE8]
	0x021E8194 MOV X1, X19
	0x021E8198 LDR X2, [X8]
	0x021E819C BL 0x2AA5018
	0x021E81A0 CBZ X0, 0x21E8224
	0x021E81A4 ADRP X10, 0x1F33000
	0x021E81A8 LDR X8, [X0]
	0x021E81AC LDR X10, [X10 + 0xAF0]
	0x021E81B0 MOV X20, X0
	0x021E81B4 LDRH W9, [X8 + 0x12E]
	0x021E81B8 LDR X1, [X10]
	0x021E81BC CBZ X9, 0x21E81E0
	0x021E81C0 LDR X10, [X8 + 0xB0]
	0x021E81C4 ADD X10, X10, 0x8
	0x021E81C8 LDUR X11, [X10 - 0x8]
	0x021E81CC CMP X11, X1
	0x021E81D0 B.EQ 0x21E81FC
	0x021E81D4 SUBS X9, X9, 0x1
	0x021E81D8 ADD X10, X10, 0x10
	0x021E81DC B.NE 0x21E81C8
	0x021E81E0 MOVZ W2, 0x1
	0x021E81E4 MOV X0, X20
	0x021E81E8 BL 0x1C5C788
	0x021E81EC B 0x21E820C
	0x021E81F0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move [X31+56], W0
	009 Move X8, [X3+56]
	010 Move X19, X3
	011 Move W20, W2
	012 Move X21, X1
	013 Compare X8, 0
	014 JumpIfNotEqual {35}
	015 Move X0, 0x1F12000
	016 Move X0, [X0+3536]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F12000
	019 Move X0, [X0+3544]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F12000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0x1F34000
	025 Move X0, [X0+2720]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F12000
	028 Move X0, [X0+3560]
	029 Call 0x1C17CF4
	030 Move X8, [X19+56]
	031 Compare X8, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X19
	034 Call 0x1C5D6E0
	035 Move X22, 0x1F34000
	036 Move X22, [X22+2720]
	037 Move [X31+32], X31
	038 Move [X31+40], X31
	039 Move [X31+48], X31
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Add X0, X31, 56
	048 Move X2, X31
	049 Move X1, [X8]
	050 Call Scene.GetRootGameObjects, X0, X1
	051 Move X8, [X22]
	052 Move X8, [X8+184]
	053 Move X0, [X8]
	054 Compare X0, 0
	055 JumpIfEqual {118}
	056 Move X8, 0x1F12000
	057 Move X8, [X8+3560]
	058 Move X1, [X8]
	059 Add X8, X31, 8
	060 Call List`1<Object>.GetEnumerator, X0
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move X8, [X31+24]
	063 Move X23, 0x1F12000
	064 Move [X31+2], V0
	065 Move [X31+48], X8
	066 Move X23, [X23+3544]
	067 Move X1, [X23]
	068 Add X0, X31, 32
	069 Call Enumerator<Object>.MoveNext, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {102}
	074 Move X22, [X31+48]
	075 Move TEMP, X20
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {81}
	079 Compare X22, 0
	080 JumpIfNotEqual {90}
	081 Compare X22, 0
	082 JumpIfEqual {116}
	083 Move X0, X22
	084 Move X1, X31
	085 Call GameObject.get_activeInHierarchy, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {67}
	090 Move X8, [X19+56]
	091 Move X2, [X8+8]
	092 And W1, W20, 1
	093 Move X0, X22
	094 Call 0x21E6F84, X0, X1
	095 Move X1, X0
	096 Compare X21, 0
	097 JumpIfEqual {115}
	098 Move X8, [X19+56]
	099 Move X2, [X8+24]
	100 Move X0, X21
	101 Call List`1<Object>.AddRange, X0, X1
	102 Move X8, 0x1F12000
	103 Move X8, [X8+3536]
	104 Add X0, X31, 32
	105 Move X1, [X8]
	106 Call Enumerator<Object>.Dispose, X0
	107 Move X20, [X31+96]
	108 Move X19, [X31+104]
	109 Move X22, [X31+80]
	110 Move X21, [X31+88]
	111 Move X30, [X31+64]
	112 Move X23, [X31+72]
	113 Add X31, X31, 112
	114 Return 
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 Move X19, X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X0, X19
	122 Call 0x3EB2AD0
	123 Move X20, [X0]
	124 Call 0x3EB2AE0
	125 Move X8, 0x1F12000
	126 Move X8, [X8+3536]
	127 Add X0, X31, 32
	128 Move X1, [X8]
	129 Call Enumerator<Object>.Dispose, X0
	130 Compare X20, 0
	131 JumpIfEqual {107}
	132 Move X0, X20
	133 Call 0x1C17F18
	134 Move X20, X31
	135 Move X19, X0
	136 Move X8, 0x1F12000
	137 Move X8, [X8+3536]
	138 Move X1, [X8]
	139 Add X0, X31, 32
	140 Call Enumerator<Object>.Dispose, X0
	141 Compare X20, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X19
	144 Call 0x1D2D690
	145 Move X0, X20
	146 Call 0x1C17F18
	147 Call 0x1991590

Method: T GetComponentInActiveScene()

Disassembly:
	0x021E7BAC MOV W5, W0
	0x021E7BB0 MOV X0, X19
	0x021E7BB4 MOV X1, X21
	0x021E7BB8 MOV W2, W31
	0x021E7BBC MOV W3, W31
	0x021E7BC0 MOV W4, W20
	0x021E7BC4 MOV X6, X31
	0x021E7BC8 BL 0x3C16590
	0x021E7BCC LDP X20, X19, [X31 + 0x30]
	0x021E7BD0 LDP X22, X21, [X31 + 0x20]
	0x021E7BD4 LDR X30, [X31 + 0x10]
	0x021E7BD8 ADD X31, X31, 0x40
	0x021E7BDC RET
	0x021E7BE0 STR X30, [X31 - 0x30]!
	0x021E7BE4 STP X22, X21, [X31 + 0x10]
	0x021E7BE8 STP X20, X19, [X31 + 0x20]
	0x021E7BEC LDR X8, [X3 + 0x38]
	0x021E7BF0 MOV X19, X2
	0x021E7BF4 MOV X21, X1
	0x021E7BF8 MOV X20, X0
	0x021E7BFC CBNZ X8, 0x21E7C10
	0x021E7C00 MOV X0, X3
	0x021E7C04 MOV X22, X3
	0x021E7C08 BL 0x1C5C6E0
	0x021E7C0C LDR X8, [X22 + 0x38]
	0x021E7C10 LDR X2, [X8 + 0x8]
	0x021E7C14 MOV X0, X21
	0x021E7C18 MOV X1, X19
	0x021E7C1C BL 0x22226EC
	0x021E7C20 MOV X1, X31
	0x021E7C24 BL 0x33C693C
	0x021E7C28 MOV X1, X0
	0x021E7C2C MOV X0, X20
	0x021E7C30 MOV W4, W19
	0x021E7C34 LDP X20, X19, [X31 + 0x20]
	0x021E7C38 LDP X22, X21, [X31 + 0x10]
	0x021E7C3C MOVZ W5, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {19}
	008 Move X0, 0x1F35000
	009 Move X0, [X0+2720]
	010 Call 0x1C17CF4
	011 Move X0, 0x1F0D000
	012 Move X0, [X0+3216]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X8, 0x1F0D000
	020 Move X8, [X8+3216]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call SceneManager.GetActiveScene
	028 Move X8, 0x1F35000
	029 Move X8, [X8+2720]
	030 Move X20, X0
	031 Move X8, [X8]
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move X8, [X19+56]
	038 And X0, X20, 0
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X1, [X8]
	042 Move X30, [X31+32]

Method: System.Void GetComponentsInActiveScene(System.Collections.Generic.List`1<T> components, System.Boolean includeInactive = False)

Disassembly:
	0x021E7E2C MOV X0, X8
	0x021E7E30 BLR X9
	0x021E7E34 MOV W5, W0
	0x021E7E38 MOV X0, X23
	0x021E7E3C MOV X1, X19
	0x021E7E40 MOV W2, W22
	0x021E7E44 MOV W3, W21
	0x021E7E48 MOV W4, W20
	0x021E7E4C MOV X6, X31
	0x021E7E50 BL 0x3C16590
	0x021E7E54 LDP X20, X19, [X31 + 0x40]
	0x021E7E58 LDP X22, X21, [X31 + 0x30]
	0x021E7E5C LDP X30, X23, [X31 + 0x20]
	0x021E7E60 ADD X31, X31, 0x50
	0x021E7E64 RET
	0x021E7E68 STR W22, [X31 + 0xC]
	0x021E7E6C ADRP X22, 0x1F0C000
	0x021E7E70 LDR X22, [X22 + 0x758]
	0x021E7E74 MOV X0, X22
	0x021E7E78 BL 0x1C16D08
	0x021E7E7C ADD X1, X31, 0xC
	0x021E7E80 BL 0x1C16E04
	0x021E7E84 MOV X23, X0
	0x021E7E88 MOV X0, X22
	0x021E7E8C STR W21, [X31 + 0x8]
	0x021E7E90 BL 0x1C16D08
	0x021E7E94 ADD X1, X31, 0x8
	0x021E7E98 BL 0x1C16E04
	0x021E7E9C MOV X21, X0
	0x021E7EA0 MOV X0, X22
	0x021E7EA4 STR W20, [X31 + 0x4]
	0x021E7EA8 BL 0x1C16D08
	0x021E7EAC ADD X1, X31, 0x4
	0x021E7EB0 BL 0x1C16E04
	0x021E7EB4 MOV X20, X0
	0x021E7EB8 ADRP X0, 0x1F34000
	0x021E7EBC LDR X0, [X0 + 0xAC8]
	0x021E7EC0 BL 0x1C16D08
	0x021E7EC4 MOV X1, X23
	0x021E7EC8 MOV X2, X21
	0x021E7ECC MOV X3, X20
	0x021E7ED0 MOV X4, X31
	0x021E7ED4 BL 0x3227C18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move W19, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X0, 0x1F35000
	013 Move X0, [X0+2720]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F0D000
	016 Move X0, [X0+3216]
	017 Call 0x1C17CF4
	018 Move X8, [X21+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X21
	022 Call 0x1C5D6E0
	023 Move X8, 0x1F0D000
	024 Move X8, [X8+3216]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X31
	031 Call SceneManager.GetActiveScene
	032 Move X8, 0x1F35000
	033 Move X8, [X8+2720]
	034 Move X22, X0
	035 Move X8, [X8]
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X8, [X21+56]
	042 And X0, X22, 0
	043 And W2, W19, 1
	044 Move X1, X20
	045 Move X3, [X8+8]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Call 0x21E7FE8, X0, X1, X2
	052 Return 

Method: System.Void GetComponentsInAllScenes(System.Collections.Generic.List`1<T> components, System.Boolean includeInactive = False)

Disassembly:
	0x021E7ED8 MOV X20, X0
	0x021E7EDC ADRP X0, 0x1F14000
	0x021E7EE0 LDR X0, [X0 + 0x760]
	0x021E7EE4 BL 0x1C16D08
	0x021E7EE8 BL 0x1C16F10
	0x021E7EEC MOV X1, X20
	0x021E7EF0 MOV X2, X31
	0x021E7EF4 MOV X21, X0
	0x021E7EF8 BL 0x3316014
	0x021E7EFC MOV X0, X21
	0x021E7F00 MOV X1, X19
	0x021E7F04 BL 0x1C16DEC
	0x021E7F08 STP X30, X19, [X31 - 0x10]!
	0x021E7F0C LDR X8, [X0 + 0x38]
	0x021E7F10 CBNZ X8, 0x21E7F44
	0x021E7F14 MOV X19, X0
	0x021E7F18 ADRP X0, 0x1F34000
	0x021E7F1C LDR X0, [X0 + 0xAD0]
	0x021E7F20 BL 0x1C16CF4
	0x021E7F24 ADRP X0, 0x1F0C000
	0x021E7F28 LDR X0, [X0 + 0x6C0]
	0x021E7F2C BL 0x1C16CF4
	0x021E7F30 LDR X8, [X19 + 0x38]
	0x021E7F34 CBNZ X8, 0x21E7F44
	0x021E7F38 MOV X0, X19
	0x021E7F3C BL 0x1C5C6E0
	0x021E7F40 LDR X8, [X19 + 0x38]
	0x021E7F44 ADRP X9, 0x1F0C000
	0x021E7F48 LDR X9, [X9 + 0x6C0]
	0x021E7F4C LDR X19, [X8]
	0x021E7F50 LDR X0, [X9]
	0x021E7F54 LDR W9, [X0 + 0xE0]
	0x021E7F58 CBNZ W9, 0x21E7F60
	0x021E7F5C BL 0x1C16DFC
	0x021E7F60 MOV X0, X19
	0x021E7F64 MOV X1, X31
	0x021E7F68 BL 0x338C698
	0x021E7F6C CBZ X0, 0x21E7FD0
	0x021E7F70 LDR X8, [X0]
	0x021E7F74 LDR X9, [X8 + 0x2E8]
	0x021E7F78 LDR X1, [X8 + 0x2F0]
	0x021E7F7C BLR X9
	0x021E7F80 MOV X1, X31
	0x021E7F84 BL 0x3C4BDB4
	0x021E7F88 CBZ X0, 0x21E7FC8
	0x021E7F8C ADRP X8, 0x1F34000
	0x021E7F90 LDR X8, [X8 + 0xAD0]
	0x021E7F94 LDR X9, [X0]
	0x021E7F98 LDR X8, [X8]
	0x021E7F9C LDRB W11, [X9 + 0x130]
	0x021E7FA0 LDRB W10, [X8 + 0x130]
	0x021E7FA4 CMP W11, W10
	0x021E7FA8 B.CS 0x21E7FB4
	0x021E7FAC MOV X0, X31
	0x021E7FB0 B 0x21E7FC8
	0x021E7FB4 LDR X9, [X9 + 0xC8]
	0x021E7FB8 ADD X9, X9, X10, 0x3, LSL
	0x021E7FBC LDUR X9, [X9 - 0x8]
	0x021E7FC0 CMP X9, X8
	0x021E7FC4 CSEL X0, X0, X31, EQ
	0x021E7FC8 LDP X30, X19, [X31], #0x10
	0x021E7FCC RET
	0x021E7FD0 BL 0x1C16F20
	0x021E7FD4 STR X30, [X31 - 0x20]!
	0x021E7FD8 STP X20, X19, [X31 + 0x10]
	0x021E7FDC LDR X8, [X1 + 0x38]
	0x021E7FE0 MOV X19, X0
	0x021E7FE4 CBNZ X8, 0x21E800C

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X2+56]
	011 Move X19, X2
	012 Move W23, W1
	013 Move X20, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {27}
	016 Move X0, 0x1F35000
	017 Move X0, [X0+2720]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F0D000
	020 Move X0, [X0+3216]
	021 Call 0x1C17CF4
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X19
	026 Call 0x1C5D6E0
	027 Move X25, 0x1F0D000
	028 Move X25, [X25+3216]
	029 Move [X31+8], W31
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call SceneManager.get_sceneCount
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X26, 0x1F35000
	039 Move X26, [X26+2720]
	040 Move W21, W0
	041 Move W22, W31
	042 And W23, W23, 1
	043 Move X0, [X25]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W22
	049 Move X1, X31
	050 Call SceneManager.GetSceneAt, X0
	051 Move [X31+8], W0
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Call Scene.get_isLoaded, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {71}
	059 Move X0, [X26]
	060 Move W24, [X31+8]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, [X19+56]
	066 Move X0, X24
	067 Move X1, X20
	068 Move W2, W23
	069 Move X3, [X8+8]
	070 Call 0x21E7FE8, X0, X1, X2
	071 Add W22, W22, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X26, [X31+16]
	080 Move X25, [X31+24]
	081 Move X30, [X31+80]
	082 Return 

Method: System.Void GetChildGameObjects(UnityEngine.GameObject go, System.Collections.Generic.List`1<UnityEngine.GameObject> childGameObjects)

Disassembly:
	0x03B286DC ADD X10, X8, X10, 0x2, LSL
	0x03B286E0 STR W11, [X20 + 0x18]
	0x03B286E4 STR W31, [X10 + 0x20]
	0x03B286E8 LDR W10, [X20 + 0x1C]
	0x03B286EC ADD W10, W10, 0x1
	0x03B286F0 STR W10, [X20 + 0x1C]
	0x03B286F4 B 0x3B28728
	0x03B286F8 LDR X8, [X9 + 0x20]
	0x03B286FC MOV X0, X20
	0x03B28700 MOV W1, W31
	0x03B28704 LDR X8, [X8 + 0xC0]
	0x03B28708 LDR X2, [X8 + 0x70]
	0x03B2870C BL 0x2FDC70C
	0x03B28710 LDR W10, [X20 + 0x1C]
	0x03B28714 LDR X8, [X20 + 0x10]
	0x03B28718 LDR X9, [X22]
	0x03B2871C ADD W10, W10, 0x1
	0x03B28720 STR W10, [X20 + 0x1C]
	0x03B28724 CBZ X8, 0x3B28918
	0x03B28728 LDRSW X10, [X20 + 0x18]
	0x03B2872C LDR W11, [X8 + 0x18]
	0x03B28730 CMP W10, W11
	0x03B28734 B.CS 0x3B28758
	0x03B28738 ADD W11, W10, 0x1
	0x03B2873C ADD X10, X8, X10, 0x2, LSL
	0x03B28740 STR W11, [X20 + 0x18]
	0x03B28744 STR W21, [X10 + 0x20]
	0x03B28748 LDR W10, [X20 + 0x1C]
	0x03B2874C ADD W10, W10, 0x1
	0x03B28750 STR W10, [X20 + 0x1C]
	0x03B28754 B 0x3B28788
	0x03B28758 LDR X8, [X9 + 0x20]
	0x03B2875C MOV X0, X20
	0x03B28760 MOV W1, W21
	0x03B28764 LDR X8, [X8 + 0xC0]
	0x03B28768 LDR X2, [X8 + 0x70]
	0x03B2876C BL 0x2FDC70C
	0x03B28770 LDR W10, [X20 + 0x1C]
	0x03B28774 LDR X8, [X20 + 0x10]
	0x03B28778 LDR X9, [X22]
	0x03B2877C ADD W10, W10, 0x1
	0x03B28780 STR W10, [X20 + 0x1C]
	0x03B28784 CBZ X8, 0x3B28918
	0x03B28788 LDRSW X10, [X20 + 0x18]
	0x03B2878C LDR W11, [X8 + 0x18]
	0x03B28790 SUB W1, W21, 0x1
	0x03B28794 CMP W10, W11
	0x03B28798 B.CS 0x3B287B0
	0x03B2879C ADD W9, W10, 0x1
	0x03B287A0 ADD X8, X8, X10, 0x2, LSL
	0x03B287A4 STR W9, [X20 + 0x18]
	0x03B287A8 STR W1, [X8 + 0x20]
	0x03B287AC B 0x3B287C4
	0x03B287B0 LDR X8, [X9 + 0x20]
	0x03B287B4 MOV X0, X20
	0x03B287B8 LDR X8, [X8 + 0xC0]
	0x03B287BC LDR X2, [X8 + 0x70]
	0x03B287C0 BL 0x2FDC70C
	0x03B287C4 ADD W21, W21, 0x1
	0x03B287C8 CMP W19, W21
	0x03B287CC B.NE 0x3B286B0
	0x03B287D0 B 0x3B28908
	0x03B287D4 B.LT 0x3B28908
	0x03B287D8 CBZ X20, 0x3B28918
	0x03B287DC ADRP X22, 0x5CC000
	0x03B287E0 LDR X22, [X22 + 0xE10]
	0x03B287E4 MOVZ W21, 0x2
	0x03B287E8 LDR W10, [X20 + 0x1C]
	0x03B287EC LDR X8, [X20 + 0x10]
	0x03B287F0 LDR X9, [X22]
	0x03B287F4 ADD W10, W10, 0x1
	0x03B287F8 STR W10, [X20 + 0x1C]
	0x03B287FC CBZ X8, 0x3B28918
	0x03B28800 LDRSW X10, [X20 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x8BB000
	008 Move W8, [X21+1908]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x632000
	016 Move X0, [X0+3288]
	017 Call 0x1C17CF4
	018 Move X0, 0x5D2000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1908], W8
	023 Compare X20, 0
	024 JumpIfEqual {85}
	025 Move X0, X20
	026 Move X1, X31
	027 Call GameObject.get_transform, X0
	028 Compare X0, 0
	029 JumpIfEqual {85}
	030 Move X1, X31
	031 Move X20, X0
	032 Call Transform.get_childCount, X0
	033 Compare W0, 0
	034 JumpIfEqual {78}
	035 Move X8, 0x632000
	036 Move X8, [X8+3288]
	037 Move W21, W0
	038 Move X0, X19
	039 Move W1, W21
	040 Move X2, [X8]
	041 Call ListExtensions.EnsureCapacity, X0, X1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X23, 0x5D2000
	044 Move X23, [X23+1392]
	045 Move W22, W31
	046 Move X0, X20
	047 Move W1, W22
	048 Move X2, X31
	049 Call Transform.GetChild, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {85}
	052 Move X1, X31
	053 Call Component.get_gameObject, X0
	054 Compare X19, 0
	055 JumpIfEqual {85}
	056 Move W10, [X19+28]
	057 Move X8, [X19+16]
	058 Move X9, [X23]
	059 Add W10, W10, 1
	060 Move [X19+28], W10
	061 Compare X8, 0
	062 JumpIfEqual {85}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Move W11, [X8+24]
	065 Move X1, X0
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add W9, W10, 1
	068 Add X8, X8, X10
	069 Move [X19+24], W9
	070 Move [X8+32], X1
	071 Move X8, [X9+32]
	072 Move X0, X19
	073 Move X8, [X8+192]
	074 Move X2, [X8+112]
	075 Call List`1<Object>.AddWithResize, X0, X1
	076 Add W22, W22, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return 
	085 Call 0x1C17F20

Method: UnityEngine.GameObject GetNamedChild(UnityEngine.GameObject go, System.String name)

Disassembly:
	0x03B28804 LDR W11, [X8 + 0x18]
	0x03B28808 CMP W10, W11
	0x03B2880C B.CS 0x3B28830
	0x03B28810 ADD W11, W10, 0x1
	0x03B28814 ADD X10, X8, X10, 0x2, LSL
	0x03B28818 STR W11, [X20 + 0x18]
	0x03B2881C STR W31, [X10 + 0x20]
	0x03B28820 LDR W10, [X20 + 0x1C]
	0x03B28824 ADD W10, W10, 0x1
	0x03B28828 STR W10, [X20 + 0x1C]
	0x03B2882C B 0x3B28860
	0x03B28830 LDR X8, [X9 + 0x20]
	0x03B28834 MOV X0, X20
	0x03B28838 MOV W1, W31
	0x03B2883C LDR X8, [X8 + 0xC0]
	0x03B28840 LDR X2, [X8 + 0x70]
	0x03B28844 BL 0x2FDC70C
	0x03B28848 LDR W10, [X20 + 0x1C]
	0x03B2884C LDR X8, [X20 + 0x10]
	0x03B28850 LDR X9, [X22]
	0x03B28854 ADD W10, W10, 0x1
	0x03B28858 STR W10, [X20 + 0x1C]
	0x03B2885C CBZ X8, 0x3B28918
	0x03B28860 LDRSW X10, [X20 + 0x18]
	0x03B28864 LDR W11, [X8 + 0x18]
	0x03B28868 SUB W1, W21, 0x1
	0x03B2886C CMP W10, W11
	0x03B28870 B.CS 0x3B28894
	0x03B28874 ADD W11, W10, 0x1
	0x03B28878 ADD X10, X8, X10, 0x2, LSL
	0x03B2887C STR W11, [X20 + 0x18]
	0x03B28880 STR W1, [X10 + 0x20]
	0x03B28884 LDR W10, [X20 + 0x1C]
	0x03B28888 ADD W10, W10, 0x1
	0x03B2888C STR W10, [X20 + 0x1C]
	0x03B28890 B 0x3B288C0
	0x03B28894 LDR X8, [X9 + 0x20]
	0x03B28898 MOV X0, X20
	0x03B2889C LDR X8, [X8 + 0xC0]
	0x03B288A0 LDR X2, [X8 + 0x70]
	0x03B288A4 BL 0x2FDC70C
	0x03B288A8 LDR W10, [X20 + 0x1C]
	0x03B288AC LDR X8, [X20 + 0x10]
	0x03B288B0 LDR X9, [X22]
	0x03B288B4 ADD W10, W10, 0x1
	0x03B288B8 STR W10, [X20 + 0x1C]
	0x03B288BC CBZ X8, 0x3B28918
	0x03B288C0 LDRSW X10, [X20 + 0x18]
	0x03B288C4 LDR W11, [X8 + 0x18]
	0x03B288C8 CMP W10, W11
	0x03B288CC B.CS 0x3B288E4
	0x03B288D0 ADD W9, W10, 0x1
	0x03B288D4 ADD X8, X8, X10, 0x2, LSL
	0x03B288D8 STR W9, [X20 + 0x18]
	0x03B288DC STR W21, [X8 + 0x20]
	0x03B288E0 B 0x3B288FC
	0x03B288E4 LDR X8, [X9 + 0x20]
	0x03B288E8 MOV X0, X20
	0x03B288EC MOV W1, W21
	0x03B288F0 LDR X8, [X8 + 0xC0]
	0x03B288F4 LDR X2, [X8 + 0x70]
	0x03B288F8 BL 0x2FDC70C
	0x03B288FC ADD W21, W21, 0x1
	0x03B28900 CMP W19, W21
	0x03B28904 B.NE 0x3B287E8
	0x03B28908 LDP X20, X19, [X31 + 0x20]
	0x03B2890C LDP X22, X21, [X31 + 0x10]
	0x03B28910 LDP X30, X23, [X31], #0x30
	0x03B28914 RET
	0x03B28918 BL 0x1C16F20
	0x03B2891C SUB X31, X31, 0x80
	0x03B28920 STP D15, D14, [X31 + 0x10]
	0x03B28924 STP D13, D12, [X31 + 0x20]
	0x03B28928 STP D11, D10, [X31 + 0x30]
	0x03B2892C STP D9, D8, [X31 + 0x40]
	0x03B28930 STR X30, [X31 + 0x50]
	0x03B28934 STP X22, X21, [X31 + 0x60]
	0x03B28938 STP X20, X19, [X31 + 0x70]
	0x03B2893C STP S0, S2, [X31 + 0x58]
	0x03B28940 ADRP X22, 0x8BA000
	0x03B28944 ADRP X21, 0x5CB000
	0x03B28948 LDR V13, [X31 + 0x90]
	0x03B2894C LDRB W8, [X22 + 0x77B]
	0x03B28950 LDR V14, [X31 + 0x98]
	0x03B28954 LDR X21, [X21 + 0x5A8]
	0x03B28958 MOV X19, X1
	0x03B2895C MOV X20, X0
	0x03B28960 MOV V8.16B, V5.16B
	0x03B28964 MOV V9.16B, V3.16B
	0x03B28968 TBNZ X8, 0x0, 0x3B28980
	0x03B2896C ADRP X0, 0x5CB000
	0x03B28970 LDR X0, [X0 + 0x5A8]
	0x03B28974 BL 0x1C16CF4
	0x03B28978 MOVZ W8, 0x1
	0x03B2897C STRB W8, [X22 + 0x77B]
	0x03B28980 LDR X0, [X21]
	0x03B28984 FMUL S0, S9, S9
	0x03B28988 FMUL S1, S8, S8
	0x03B2898C FADD S0, S0, S1
	0x03B28990 FMUL S2, S9, S13
	0x03B28994 FMUL S3, S8, S14
	0x03B28998 FMUL S4, S13, S13
	0x03B2899C FCVT S10, S0
	0x03B289A0 FMUL S0, S14, S14
	0x03B289A4 LDR V5, [X31 + 0xA0]
	0x03B289A8 FADD S1, S2, S3
	0x03B289AC FADD S0, S4, S0
	0x03B289B0 LDR W8, [X0 + 0xE0]
	0x03B289B4 FCVT S15, S1
	0x03B289B8 FCVT S12, S0
	0x03B289BC FMUL D0, D10, D12
	0x03B289C0 FMUL D1, D15, D15
	0x03B289C4 FSUB D11, D0, D1
	0x03B289C8 CBNZ W8, 0x3B289D8
	0x03B289CC STR D5, [X31 + 0x8]
	0x03B289D0 BL 0x1C16DFC
	0x03B289D4 LDR V5, [X31 + 0x8]
	0x03B289D8 FABS D0, D11
	0x03B289DC FCMP D0, D5
	0x03B289E0 B.PL 0x3B289F0
	0x03B289E4 STR W31, [X20]
	0x03B289E8 FMOV S1, W31
	0x03B289EC B 0x3B28A54
	0x03B289F0 LDR V1, [X31 + 0x80]
	0x03B289F4 LDR V3, [X31 + 0x58]
	0x03B289F8 LDR V2, [X31 + 0x88]
	0x03B289FC FSUB S1, S3, S1
	0x03B28A00 LDR V3, [X31 + 0x5C]
	0x03B28A04 FSUB S2, S3, S2
	0x03B28A08 FMUL S3, S9, S1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x8BB000
	008 Move X22, 0x632000
	009 Move W8, [X20+1909]
	010 Move X22, [X22+3296]
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x5F4000
	018 Move X0, [X0+2720]
	019 Call 0x1C17CF4
	020 Move X0, 0x632000
	021 Move X0, [X0+3304]
	022 Call 0x1C17CF4
	023 Move X0, 0x632000
	024 Move X0, [X0+3312]
	025 Call 0x1C17CF4
	026 Move X0, 0x632000
	027 Move X0, [X0+3320]
	028 Call 0x1C17CF4
	029 Move X0, 0x5CC000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x632000
	033 Move X0, [X0+3328]
	034 Call 0x1C17CF4
	035 Move X0, 0x632000
	036 Move X0, [X0+3336]
	037 Call 0x1C17CF4
	038 Move X0, 0x632000
	039 Move X0, [X0+3296]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1909], W8
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call Object..ctor, X0
	048 Compare X20, 0
	049 JumpIfEqual {156}
	050 Move X22, 0x5F4000
	051 Move X22, [X22+2720]
	052 Move [X20+16], X21
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X22]
	059 Move X8, [X0+184]
	060 Move X8, [X8+8]
	061 Compare X8, 0
	062 JumpIfEqual {156}
	063 Move W2, [X8+24]
	064 Move W9, [X8+28]
	065 Add W9, W9, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X8+24], W31
	068 Move [X8+28], W9
	069 Move X0, [X8+16]
	070 Move W1, W31
	071 Move X3, X31
	072 Call Array.Clear, X0, X1, X2
	073 Compare X19, 0
	074 JumpIfEqual {156}
	075 Move X8, [X22]
	076 Move X9, 0x632000
	077 Move X21, 0x632000
	078 Move X23, 0x632000
	079 Move X8, [X8+184]
	080 Move X9, [X9+3304]
	081 Move X0, X19
	082 Move X1, [X8+8]
	083 Move X2, [X9]
	084 Move X21, [X21+3328]
	085 Move X23, [X23+3336]
	086 Call 0x21E7064, X0, X1
	087 Move X8, [X22]
	088 Move X0, [X21]
	089 Move X8, [X8+184]
	090 Move X19, [X8+8]
	091 Call 0x1C17F10
	092 Move X2, [X23]
	093 Move X1, X20
	094 Move X3, X31
	095 Move X21, X0
	096 Call Predicate`1<Object>..ctor, X0, X1, X2
	097 Compare X19, 0
	098 JumpIfEqual {156}
	099 Move X8, 0x632000
	100 Move X8, [X8+3320]
	101 Move X0, X19
	102 Move X1, X21
	103 Move X2, [X8]
	104 Call List`1<Object>.Find, X0, X1
	105 Move X8, [X22]
	106 Move X8, [X8+184]
	107 Move X8, [X8+8]
	108 Compare X8, 0
	109 JumpIfEqual {156}
	110 Move W2, [X8+24]
	111 Move W9, [X8+28]
	112 Move X20, 0x5CC000
	113 Move X20, [X20+1432]
	114 Move X19, X0
	115 Add W9, W9, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move [X8+24], W31
	118 Move [X8+28], W9
	119 Move X0, [X8+16]
	120 Move W1, W31
	121 Move X3, X31
	122 Call Array.Clear, X0, X1, X2
	123 Move X0, [X20]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {128}
	127 Call 0x1C17DFC
	128 Move X0, X19
	129 Move X1, X31
	130 Move X2, X31
	131 Call Object.op_Inequality, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {148}
	136 Compare X19, 0
	137 JumpIfEqual {156}
	138 Move X0, X19
	139 Move X20, [X31+32]
	140 Move X19, [X31+40]
	141 Move X22, [X31+16]
	142 Move X21, [X31+24]
	143 Move X1, X31
	144 Move X30, [X31+48]
	145 Move X23, [X31+56]
	146 Call Component.get_gameObject, X0
	147 Return X0
	148 Move X20, [X31+32]
	149 Move X19, [X31+40]
	150 Move X22, [X31+16]
	151 Move X21, [X31+24]
	152 Move X0, X31
	153 Move X30, [X31+48]
	154 Move X23, [X31+56]
	155 Return X0
	156 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B28A14 FMUL S2, S14, S2
	0x03B28A18 FADD S3, S3, S4
	0x03B28A1C FADD S1, S1, S2
	0x03B28A20 FCVT S1, S1
	0x03B28A24 FCVT S2, S3
	0x03B28A28 FMUL D3, D15, D1
	0x03B28A2C FMUL D4, D2, D12
	0x03B28A30 FMUL D1, D10, D1
	0x03B28A34 FMUL D2, D2, D15
	0x03B28A38 FSUB D3, D3, D4
	0x03B28A3C FSUB D1, D1, D2
	0x03B28A40 FDIV D2, D3, D11
	0x03B28A44 FDIV D1, D1, D11
	0x00000000 INVALID
	0x00000000 INVALID
	0x03B28A50 STR S2, [X20]
	0x03B28A54 STR S1, [X19]
	0x03B28A58 LDP X20, X19, [X31 + 0x70]
	0x03B28A5C LDP X22, X21, [X31 + 0x60]
	0x03B28A60 LDR X30, [X31 + 0x50]
	0x03B28A64 LDP D9, D8, [X31 + 0x40]
	0x03B28A68 LDP D11, D10, [X31 + 0x30]
	0x03B28A6C LDP D13, D12, [X31 + 0x20]
	0x03B28A70 LDP D15, D14, [X31 + 0x10]
	0x03B28A74 FCMP D0, D5
	0x03B28A78 CSET W0, PL
	0x03B28A7C ADD X31, X31, 0x80
	0x03B28A80 RET
	0x03B28A84 SUB X31, X31, 0x120
	0x03B28A88 STP D15, D14, [X31 + 0x90]
	0x03B28A8C STP D13, D12, [X31 + 0xA0]
	0x03B28A90 STP D11, D10, [X31 + 0xB0]
	0x03B28A94 STP D9, D8, [X31 + 0xC0]
	0x03B28A98 STR X29, [X31 + 0xD0]
	0x03B28A9C STP X30, X25, [X31 + 0xE0]
	0x03B28AA0 STP X24, X23, [X31 + 0xF0]
	0x03B28AA4 STP X22, X21, [X31 + 0x100]
	0x03B28AA8 STP X20, X19, [X31 + 0x110]
	0x03B28AAC STP S4, S3, [X31 + 0x7C]
	0x03B28AB0 STR S2, [X31 + 0x84]
	0x03B28AB4 ADRP X21, 0x8BA000
	0x03B28AB8 ADRP X23, 0x631000
	0x03B28ABC LDRB W8, [X21 + 0x77C]
	0x03B28AC0 LDR X23, [X23 + 0xD10]
	0x03B28AC4 MOV X19, X1
	0x03B28AC8 MOV X20, X0
	0x03B28ACC MOV V13.16B, V5.16B
	0x03B28AD0 STP S0, S1, [X31 + 0x88]
	0x03B28AD4 TBNZ X8, 0x0, 0x3B28AF0
	0x03B28AD8 ADRP X0, 0x631000
	0x03B28ADC LDR X0, [X0 + 0xD10]
	0x03B28AE0 BL 0x1C16CF4
	0x03B28AE4 LDP S0, S1, [X31 + 0x88]
	0x03B28AE8 MOVZ W8, 0x1
	0x03B28AEC STRB W8, [X21 + 0x77C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x8BB000
	009 Move X24, 0x5D2000
	010 Move X19, 0x5D2000
	011 Move X20, 0x5F4000
	012 Move X22, 0x5D3000
	013 Move X21, 0x5D3000
	014 Move W8, [X23+1910]
	015 Move X24, [X24+1352]
	016 Move X19, [X19+1360]
	017 Move X20, [X20+2720]
	018 Move X22, [X22+2352]
	019 Move X21, [X21+2360]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x5F4000
	025 Move X0, [X0+2720]
	026 Call 0x1C17CF4
	027 Move X0, 0x5D2000
	028 Move X0, [X0+1360]
	029 Call 0x1C17CF4
	030 Move X0, 0x5D3000
	031 Move X0, [X0+2360]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D3000
	034 Move X0, [X0+2352]
	035 Call 0x1C17CF4
	036 Move X0, 0x5D2000
	037 Move X0, [X0+1352]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+1910], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call List`1<Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call List`1<Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

