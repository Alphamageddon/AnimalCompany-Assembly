Type: Unity.XR.CoreUtils.ScriptableSettingsBase`1

Method: System.Void .ctor()

Disassembly:
	0x025D7838 B.CS 0x25D789C
	0x025D783C LDP V2, V0, [X31 + 0x10]
	0x025D7840 LDR X9, [X31 + 0x30]
	0x025D7844 LDR V1, [X31]
	0x025D7848 ADD X8, X8, X26, 0x6, LSL
	0x025D784C STP V2, V0, [X8 + 0x30]
	0x025D7850 STR X9, [X8 + 0x50]
	0x025D7854 STR V1, [X8 + 0x2]
	0x025D7858 LDR X8, [X19 + 0x10]
	0x025D785C CBZ X8, 0x25D780C
	0x025D7860 LDR W9, [X8 + 0x18]
	0x025D7864 CMP W26, W9
	0x025D7868 B.CS 0x25D789C
	0x025D786C ADD X19, X8, X26, 0x6, LSL
	0x025D7870 BL 0x1C16D44
	0x025D7874 STR W23, [X19 + 0x58]
	0x025D7878 CMP W25, 0x0
	0x025D787C LDP X20, X19, [X31 + 0x80]
	0x025D7880 LDP X22, X21, [X31 + 0x70]
	0x025D7884 LDP X24, X23, [X31 + 0x60]
	0x025D7888 LDP X26, X25, [X31 + 0x50]
	0x025D788C LDR X30, [X31 + 0x40]
	0x025D7890 CSET W0, EQ
	0x025D7894 ADD X31, X31, 0x90
	0x025D7898 RET
	0x025D789C BL 0x1C16F28
	0x025D78A0 STUR X1, [X0 + 0xB4]
	0x025D78A4 STUR X2, [X0 + 0xBC]
	0x025D78A8 RET
	0x025D78AC STUR X1, [X0 + 0xA4]
	0x025D78B0 STUR X2, [X0 + 0xAC]
	0x025D78B4 RET
	0x025D78B8 STP X1, X2, [X0 + 0x88]
	0x025D78BC RET
	0x025D78C0 ADD X8, X0, 0x104
	0x025D78C4 STP X1, X2, [X8]
	0x025D78C8 RET
	0x025D78CC STP X1, X2, [X0 + 0x80]
	0x025D78D0 RET
	0x025D78D4 STUR X1, [X0 + 0xA4]
	0x025D78D8 STUR X2, [X0 + 0xAC]
	0x025D78DC RET
	0x025D78E0 STUR X1, [X0 + 0x44]
	0x025D78E4 STUR X2, [X0 + 0x4C]
	0x025D78E8 RET
	0x025D78EC STUR X1, [X0 + 0xA4]
	0x025D78F0 STUR X2, [X0 + 0xAC]
	0x025D78F4 RET
	0x025D78F8 STP X1, X2, [X0 + 0x108]
	0x025D78FC RET
	0x025D7900 STP X1, X2, [X0 + 0x58]
	0x025D7904 RET
	0x025D7908 STP X1, X2, [X0 + 0x78]
	0x025D790C RET
	0x025D7910 STP X1, X2, [X0 + 0xA0]
	0x025D7914 RET
	0x025D7918 STR X30, [X31 - 0x40]!
	0x025D791C STP X24, X23, [X31 + 0x10]
	0x025D7920 STP X22, X21, [X31 + 0x20]
	0x025D7924 STP X20, X19, [X31 + 0x30]
	0x025D7928 ADRP X21, 0x1E02000
	0x025D792C LDRB W8, [X21 + 0xF7B]
	0x025D7930 MOV X19, X1
	0x025D7934 MOV X20, X0
	0x025D7938 CBNZ W8, 0x25D7968
	0x025D793C ADRP X0, 0x1B43000
	0x025D7940 LDR X0, [X0 + 0xD70]
	0x025D7944 BL 0x1C16CF4
	0x025D7948 ADRP X0, 0x1B1E000
	0x025D794C LDR X0, [X0 + 0x278]
	0x025D7950 BL 0x1C16CF4
	0x025D7954 ADRP X0, 0x1B1C000
	0x025D7958 LDR X0, [X0 + 0x6C0]
	0x025D795C BL 0x1C16CF4
	0x025D7960 MOVZ W8, 0x1
	0x025D7964 STRB W8, [X21 + 0xF7B]
	0x025D7968 LDR W8, [X20 + 0x8]
	0x025D796C TBNZ X8, 0x1F, 0x25D7A88
	0x025D7970 LDR X0, [X19 + 0x20]
	0x025D7974 LDRB W8, [X0 + 0x135]
	0x025D7978 TBNZ X8, 0x0, 0x25D7980
	0x025D797C BL 0x1C5C684
	0x025D7980 ADRP X8, 0x1B1C000
	0x025D7984 LDR X8, [X8 + 0x6C0]
	0x025D7988 LDR X9, [X0 + 0xC0]
	0x025D798C LDR X8, [X8]
	0x025D7990 LDR X21, [X9 + 0x40]
	0x025D7994 LDR W10, [X8 + 0xE0]
	0x025D7998 CBNZ W10, 0x25D79A4
	0x025D799C MOV X0, X8
	0x025D79A0 BL 0x1C16DFC
	0x025D79A4 MOV X0, X21
	0x025D79A8 MOV X1, X31
	0x025D79AC BL 0x338C698
	0x025D79B0 ADRP X8, 0x1B43000
	0x025D79B4 LDR X8, [X8 + 0xD70]
	0x025D79B8 MOV X21, X0
	0x025D79BC MOV X1, X31
	0x025D79C0 LDR X8, [X8]
	0x025D79C4 MOV X0, X8
	0x025D79C8 BL 0x338C698
	0x025D79CC MOV X1, X0
	0x025D79D0 MOV X0, X21
	0x025D79D4 MOV X2, X31
	0x025D79D8 BL 0x3395194
	0x025D79DC LDR X21, [X20]
	0x025D79E0 TBZ X0, 0x0, 0x25D7BC4
	0x025D79E4 CBZ X21, 0x25D7C4C
	0x025D79E8 ADRP X8, 0x1B1E000
	0x025D79EC LDR X8, [X8 + 0x278]
	0x025D79F0 LDR X9, [X21]
	0x025D79F4 LDR X8, [X8]
	0x025D79F8 CMP X9, X8
	0x025D79FC B.NE 0x25D7BC8
	0x025D7A00 MOV X0, X21
	0x025D7A04 MOV X1, X31
	0x025D7A08 BL 0x3225708
	0x025D7A0C LDR X8, [X19 + 0x20]
	0x025D7A10 LDR W23, [X21 + 0x10]
	0x025D7A14 MOV X21, X0
	0x025D7A18 ADD X9, X8, 0x135
	0x025D7A1C LDRH W9, [X9]
	0x025D7A20 TBNZ X9, 0x0, 0x25D7A38
	0x025D7A24 MOV X0, X8
	0x025D7A28 BL 0x1C5C684
	0x025D7A2C LDR X8, [X19 + 0x20]
	0x025D7A30 ADD X9, X8, 0x135
	0x025D7A34 LDRH W9, [X9]
	0x025D7A38 LDP W22, W19, [X20 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1E03000
	007 Move X22, 0x1B47000
	008 Move W8, [X21+3954]
	009 Move X22, [X22+480]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x1B1D000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x1B47000
	020 Move X0, [X0+480]
	021 Call 0x1C17CF4
	022 Move X0, 0x1B1D000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0x1B47000
	026 Move X0, [X0+488]
	027 Call 0x1C17CF4
	028 Move X0, 0x1B47000
	029 Move X0, [X0+496]
	030 Call 0x1C17CF4
	031 Move X0, 0x1B47000
	032 Move X0, [X0+504]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3954], W8
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call ScriptableSettingsBase..ctor, X0
	044 Move X8, [X19+32]
	045 Move X8, [X8+192]
	046 Move X0, [X8+16]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X8, [X19+32]
	058 Move X20, 0x1B1D000
	059 Move X8, [X8+192]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move X20, [X20+1432]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move X8, [X20]
	069 Move X9, [X0+184]
	070 Move W10, [X8+224]
	071 Move X20, [X9+8]
	072 Compare W10, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Move X2, X31
	079 Call Object.op_Inequality, X0, X1
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {155}
	084 Move X9, 0x1B1D000
	085 Move X8, [X19+32]
	086 Move X9, [X9+1728]
	087 Move X22, 0x1B47000
	088 Move X21, 0x1B47000
	089 Move X8, [X8+192]
	090 Move X0, [X9]
	091 Move X20, [X8+24]
	092 Move W9, [X0+224]
	093 Move X22, [X22+496]
	094 Move X21, [X21+504]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X20
	099 Move X1, X31
	100 Call Type.GetTypeFromHandle, X0
	101 Move X8, [X22]
	102 Move X1, X0
	103 Move X2, X31
	104 Move X0, X8
	105 Call String.Format, X0, X1
	106 Move X1, [X21]
	107 Move X2, X31
	108 Call String.Concat, X0, X1
	109 Move X8, [X19+32]
	110 Move X20, X0
	111 Move X8, [X8+192]
	112 Move X8, [X8+16]
	113 Move W9, [X8+309]
	114 Move TEMP, X9
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {121}
	118 Move X0, X8
	119 Call 0x1C5D684
	120 Move X8, X0
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Move X8, [X19+32]
	127 Move X19, 0x1B47000
	128 Move X8, [X8+192]
	129 Move X0, [X8+16]
	130 Move W8, [X0+309]
	131 Move X19, [X19+488]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move X8, [X19]
	138 Move X9, [X0+184]
	139 Move W10, [X8+224]
	140 Move X19, [X9+8]
	141 Compare W10, 0
	142 JumpIfNotEqual {145}
	143 Move X0, X8
	144 Call 0x1C17DFC
	145 Move X0, X20
	146 Move X1, X19
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X2, X31
	152 Move X30, [X31+48]
	153 Call XRLoggingUtils.LogWarning, X0, X1
	154 Return 
	155 Move X20, [X31+32]
	156 Move X19, [X31+40]
	157 Move X22, [X31+16]
	158 Move X21, [X31+24]
	159 Move X30, [X31+48]
	160 Return 

Method: System.Void Save(System.String savePathFormat)

Disassembly:
	0x025D7A3C SXTW X22, W22

ISIL:
	001 Return 

Method: System.String GetFilePath()

Disassembly:
	0x025D7A40 TBNZ X9, 0x0, 0x25D7A50
	0x025D7A44 MOV X0, X8
	0x025D7A48 BL 0x1C5C684
	0x025D7A4C MOV X8, X0
	0x025D7A50 LDR X8, [X8 + 0xC0]
	0x025D7A54 LDR X20, [X8 + 0xA8]
	0x025D7A58 SUBS W8, W23, W22
	0x025D7A5C B.CC 0x25D7A68
	0x025D7A60 CMP W8, W19
	0x025D7A64 B.CS 0x25D7A70
	0x025D7A68 MOV X0, X31
	0x025D7A6C BL 0x339D6EC
	0x025D7A70 LDR X0, [X20 + 0x20]
	0x025D7A74 LDRB W8, [X0 + 0x135]
	0x025D7A78 TBNZ X8, 0x0, 0x25D7A80
	0x025D7A7C BL 0x1C5C684
	0x025D7A80 ADD X0, X21, X22
	0x025D7A84 B 0x25D7C54
	0x025D7A88 LDR X0, [X19 + 0x20]
	0x025D7A8C LDR X21, [X20]
	0x025D7A90 LDRB W8, [X0 + 0x135]
	0x025D7A94 TBNZ X8, 0x0, 0x25D7A9C
	0x025D7A98 BL 0x1C5C684
	0x025D7A9C LDR X8, [X0 + 0xC0]
	0x025D7AA0 LDR X1, [X8 + 0x68]
	0x025D7AA4 LDRB W8, [X1 + 0x135]
	0x025D7AA8 TBNZ X8, 0x0, 0x25D7AB8
	0x025D7AAC MOV X0, X1
	0x025D7AB0 BL 0x1C5C684
	0x025D7AB4 MOV X1, X0
	0x025D7AB8 CBZ X21, 0x25D7C74
	0x025D7ABC LDR X8, [X21]
	0x025D7AC0 LDRB W9, [X1 + 0x130]
	0x025D7AC4 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1E03000
	005 Move W8, [X20+3955]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1B1D000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3955], W8
	016 Move X0, [X19+32]
	017 Move X19, 0x1B1D000
	018 Move W8, [X0+309]
	019 Move X19, [X19+1728]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X19]
	026 Move X9, [X0+192]
	027 Move W10, [X8+224]
	028 Move X19, [X9+24]
	029 Compare W10, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Call Type.GetTypeFromHandle, X0
	036 Compare X0, 0
	037 JumpIfEqual {45}
	038 Move X8, [X0]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, [X8+424]
	042 Move X1, [X8+432]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x025D7AC8 CMP W10, W9
	0x025D7ACC B.CC 0x25D7C6C
	0x025D7AD0 LDR X8, [X8 + 0xC8]
	0x025D7AD4 ADD X8, X8, X9, 0x3, LSL
	0x025D7AD8 LDUR X8, [X8 - 0x8]
	0x025D7ADC CMP X8, X1
	0x025D7AE0 B.NE 0x25D7C6C
	0x025D7AE4 LDR X0, [X19 + 0x20]
	0x025D7AE8 LDRB W8, [X0 + 0x135]
	0x025D7AEC TBNZ X8, 0x0, 0x25D7AF4
	0x025D7AF0 BL 0x1C5C684
	0x025D7AF4 LDR X8, [X0 + 0xC0]
	0x025D7AF8 LDR X1, [X8 + 0x68]
	0x025D7AFC LDRB W8, [X1 + 0x135]
	0x025D7B00 TBNZ X8, 0x0, 0x25D7B10
	0x025D7B04 MOV X0, X1
	0x025D7B08 BL 0x1C5C684
	0x025D7B0C MOV X1, X0
	0x025D7B10 LDR X8, [X21]
	0x025D7B14 LDRB W9, [X1 + 0x130]
	0x025D7B18 LDRB W10, [X8 + 0x130]
	0x025D7B1C CMP W10, W9
	0x025D7B20 B.CC 0x25D7C6C
	0x025D7B24 LDR X10, [X8 + 0xC8]
	0x025D7B28 ADD X9, X10, X9, 0x3, LSL
	0x025D7B2C LDUR X9, [X9 - 0x8]
	0x025D7B30 CMP X9, X1
	0x025D7B34 B.NE 0x25D7C6C
	0x025D7B38 LDP X9, X1, [X8 + 0x178]
	0x025D7B3C MOV X0, X21
	0x025D7B40 BLR X9
	0x025D7B44 MOV X21, X0
	0x025D7B48 LDR X0, [X19 + 0x20]
	0x025D7B4C LDP W9, W20, [X20 + 0x8]
	0x025D7B50 MOV X22, X1
	0x025D7B54 LDRB W8, [X0 + 0x135]
	0x025D7B58 AND X23, X9, 0x7FFFFFFF
	0x025D7B5C TBNZ X8, 0x0, 0x25D7B64
	0x025D7B60 BL 0x1C5C684
	0x025D7B64 LDR X8, [X0 + 0xC0]
	0x025D7B68 LDR X24, [X8 + 0x80]
	0x025D7B6C SUBS W8, W22, W23
	0x025D7B70 B.CC 0x25D7B7C
	0x025D7B74 CMP W8, W20
	0x025D7B78 B.CS 0x25D7B84
	0x025D7B7C MOV X0, X31
	0x025D7B80 BL 0x339D6EC
	0x025D7B84 LDR X0, [X24 + 0x20]
	0x025D7B88 LDRB W8, [X0 + 0x135]
	0x025D7B8C TBNZ X8, 0x0, 0x25D7B94
	0x025D7B90 BL 0x1C5C684
	0x025D7B94 LDR X0, [X19 + 0x20]
	0x025D7B98 ADD X19, X21, X23
	0x025D7B9C LDRB W8, [X0 + 0x135]
	0x025D7BA0 TBNZ X8, 0x0, 0x25D7BA8
	0x025D7BA4 BL 0x1C5C684
	0x025D7BA8 LDR X8, [X0 + 0xC0]
	0x025D7BAC MOV X0, X19
	0x025D7BB0 MOV X1, X20
	0x025D7BB4 LDR X2, [X8 + 0x90]
	0x025D7BB8 BL 0x25FB09C
	0x025D7BBC MOV X19, X1
	0x025D7BC0 B 0x25D7C54

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1E03000
	006 Move W8, [X20+3956]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x1B47000
	013 Move X0, [X0+512]
	014 Call 0x1C17CF4
	015 Move X0, 0x1B1D000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3956], W8
	020 Move X0, [X19+32]
	021 Move X20, 0x1B1D000
	022 Move W8, [X0+309]
	023 Move X20, [X20+1728]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X20]
	030 Move X9, [X0+192]
	031 Move X21, 0x1B47000
	032 Move W10, [X8+224]
	033 Move X20, [X9+24]
	034 Move X21, [X21+512]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Move X8, [X21]
	043 Move X20, X0
	044 Move X1, X31
	045 Move X0, X8
	046 Call Type.GetTypeFromHandle, X0
	047 Compare X20, 0
	048 JumpIfEqual {82}
	049 Move X8, [X20]
	050 Move X1, X0
	051 Move W2, 1
	052 Move X0, X20
	053 Move X9, [X8+488]
	054 Move X3, [X8+496]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19+32]
	057 Move W19, W0
	058 Move W9, [X8+309]
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {66}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X8, X0
	066 Move X8, [X8+192]
	067 Move X0, [X8+16]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+184]
	075 And W9, W19, 1
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move [X8], W9
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return 
	082 Call 0x1C17F20

