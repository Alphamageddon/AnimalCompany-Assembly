Type: Unity.XR.CoreUtils.StringExtensions

Method: System.String FirstToUpper(System.String str)

Disassembly:
	0x03B252A4 LDR X8, [X23]
	0x03B252A8 MOV X0, X23
	0x03B252AC LDR X9, [X8 + 0x818]
	0x03B252B0 LDR X1, [X8 + 0x820]
	0x03B252B4 BLR X9
	0x03B252B8 LDR X8, [X22]
	0x03B252BC MOV X23, X0
	0x03B252C0 LDR W9, [X8 + 0xE0]
	0x03B252C4 CBNZ W9, 0x3B25214
	0x03B252C8 MOV X0, X8
	0x03B252CC BL 0x1C16DFC
	0x03B252D0 B 0x3B25214
	0x03B252D4 MOV X0, X24
	0x03B252D8 LDP X20, X19, [X31 + 0x40]
	0x03B252DC LDP X22, X21, [X31 + 0x30]
	0x03B252E0 LDP X24, X23, [X31 + 0x20]
	0x03B252E4 LDP X26, X25, [X31 + 0x10]
	0x03B252E8 LDP X30, X27, [X31], #0x50
	0x03B252EC RET
	0x03B252F0 BL 0x1C16F20
	0x03B252F4 STR X30, [X31 - 0x50]!
	0x03B252F8 STP X26, X25, [X31 + 0x10]
	0x03B252FC STP X24, X23, [X31 + 0x20]
	0x03B25300 STP X22, X21, [X31 + 0x30]
	0x03B25304 STP X20, X19, [X31 + 0x40]
	0x03B25308 ADRP X22, 0x8BD000
	0x03B2530C LDRB W8, [X22 + 0x757]
	0x03B25310 MOV W19, W2
	0x03B25314 MOV X20, X1
	0x03B25318 MOV X21, X0
	0x03B2531C TBNZ X8, 0x0, 0x3B25340
	0x03B25320 ADRP X0, 0x61B000
	0x03B25324 LDR X0, [X0 + 0xB58]
	0x03B25328 BL 0x1C16CF4
	0x03B2532C ADRP X0, 0x5CE000
	0x03B25330 LDR X0, [X0 + 0x6C0]
	0x03B25334 BL 0x1C16CF4
	0x03B25338 MOVZ W8, 0x1
	0x03B2533C STRB W8, [X22 + 0x757]
	0x03B25340 ADRP X23, 0x61B000
	0x03B25344 ADRP X24, 0x5CE000
	0x03B25348 LDR X23, [X23 + 0xB58]
	0x03B2534C LDR X24, [X24 + 0x6C0]
	0x03B25350 CBZ X21, 0x3B25454
	0x03B25354 LDR X8, [X21]
	0x03B25358 MOV X0, X21
	0x03B2535C MOV W1, W19
	0x03B25360 LDR X9, [X8 + 0x688]
	0x03B25364 LDR X2, [X8 + 0x690]
	0x03B25368 BLR X9
	0x03B2536C CBZ X0, 0x3B25454
	0x03B25370 LDR X8, [X0 + 0x18]
	0x03B25374 MOV X22, X0
	0x03B25378 CMP W8, 0x1
	0x03B2537C B.LT 0x3B253FC
	0x03B25380 MOV X25, X31
	0x03B25384 AND X8, X8, 0x0
	0x03B25388 ADD X26, X22, 0x20
	0x03B2538C CMP X25, W8, UXTW
	0x03B25390 B.CS 0x3B25458
	0x03B25394 CBZ X20, 0x3B25454
	0x03B25398 LDR W10, [X20 + 0x1C]
	0x03B2539C LDR X1, [X26, X25, LSL #3]
	0x03B253A0 LDR X8, [X20 + 0x10]
	0x03B253A4 LDR X9, [X23]
	0x03B253A8 ADD W10, W10, 0x1
	0x03B253AC STR W10, [X20 + 0x1C]
	0x03B253B0 CBZ X8, 0x3B25454
	0x03B253B4 LDRSW X10, [X20 + 0x18]
	0x03B253B8 LDR W11, [X8 + 0x18]
	0x03B253BC CMP W10, W11
	0x03B253C0 B.CS 0x3B253D8
	0x03B253C4 ADD W9, W10, 0x1
	0x03B253C8 ADD X8, X8, X10, 0x3, LSL
	0x03B253CC STR W9, [X20 + 0x18]
	0x03B253D0 STR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8BE000
	007 Move W8, [X20+1867]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x5D1000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move X0, 0x5D1000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0x5F7000
	020 Move X0, [X0+2712]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1867], W8
	024 Move X0, X19
	025 Move X1, X31
	026 NotImplemented "Instruction STRH not yet implemented."
	027 Call String.IsNullOrEmpty, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {37}
	032 Move X8, 0x5D1000
	033 Move X8, [X8+632]
	034 Move X8, [X8]
	035 Move X8, [X8+184]
	036 Move X0, [X8]
	037 Compare X19, 0
	038 JumpIfEqual {85}
	039 Move W21, [X19+16]
	040 Move X0, X19
	041 Move W1, W31
	042 Move X2, X31
	043 Call String.get_Chars, X0, X1
	044 Move X22, 0x5D1000
	045 Move X22, [X22+368]
	046 Move W20, W0
	047 Move X8, [X22]
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move W0, W20
	054 Move X1, X31
	055 Call Char.ToUpper, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Add X0, X31, 12
	059 Move X1, X31
	060 Call Char.ToString, X0
	061 Move X8, [X22]
	062 NotImplemented "Instruction STRH not yet implemented."
	063 Add X1, X31, 8
	064 Move X0, X8
	065 Call 0x1C17E04
	066 Move X20, X0
	067 Move W1, 1
	068 Move X0, X19
	069 Move X2, X31
	070 Call String.Substring, X0, X1
	071 Move X8, 0x5F7000
	072 Move X8, [X8+2712]
	073 Move X2, X0
	074 Move X1, X20
	075 Move X3, X31
	076 Move X8, [X8]
	077 Move X0, X8
	078 Call String.Format, X0, X1, X2
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X30, [X31+48]
	084 Return X0
	085 Call 0x1C17F20

Method: System.String InsertSpacesBetweenWords(System.String str)

Disassembly:
	0x03B253D4 B 0x3B253EC
	0x03B253D8 LDR X8, [X9 + 0x20]
	0x03B253DC MOV X0, X20
	0x03B253E0 LDR X8, [X8 + 0xC0]
	0x03B253E4 LDR X2, [X8 + 0x70]
	0x03B253E8 BL 0x301BF90
	0x03B253EC LDR W8, [X22 + 0x18]
	0x03B253F0 ADD X25, X25, 0x1
	0x03B253F4 CMP X25, W8, SXTW
	0x03B253F8 B.LT 0x3B2538C
	0x03B253FC LDR X8, [X21]
	0x03B25400 MOV X0, X21
	0x03B25404 LDR X9, [X8 + 0x818]
	0x03B25408 LDR X1, [X8 + 0x820]
	0x03B2540C BLR X9
	0x03B25410 LDR X8, [X24]
	0x03B25414 MOV X21, X0
	0x03B25418 LDR W9, [X8 + 0xE0]
	0x03B2541C CBNZ W9, 0x3B25428
	0x03B25420 MOV X0, X8
	0x03B25424 BL 0x1C16DFC
	0x03B25428 MOV X0, X21
	0x03B2542C MOV X1, X31
	0x03B25430 MOV X2, X31
	0x03B25434 BL 0x3395F0C
	0x03B25438 TBNZ X0, 0x0, 0x3B25350
	0x03B2543C LDP X20, X19, [X31 + 0x40]
	0x03B25440 LDP X22, X21, [X31 + 0x30]
	0x03B25444 LDP X24, X23, [X31 + 0x20]
	0x03B25448 LDP X26, X25, [X31 + 0x10]
	0x03B2544C LDR X30, [X31], #0x50
	0x03B25450 RET
	0x03B25454 BL 0x1C16F20
	0x03B25458 BL 0x1C16F28
	0x03B2545C STR X30, [X31 - 0x50]!
	0x03B25460 STP X26, X25, [X31 + 0x10]
	0x03B25464 STP X24, X23, [X31 + 0x20]
	0x03B25468 STP X22, X21, [X31 + 0x30]
	0x03B2546C STP X20, X19, [X31 + 0x40]
	0x03B25470 ADRP X22, 0x8BD000
	0x03B25474 LDRB W8, [X22 + 0x758]
	0x03B25478 MOV W19, W2
	0x03B2547C MOV X20, X1
	0x03B25480 MOV X21, X0
	0x03B25484 TBNZ X8, 0x0, 0x3B254A8
	0x03B25488 ADRP X0, 0x634000
	0x03B2548C LDR X0, [X0 + 0xC40]
	0x03B25490 BL 0x1C16CF4
	0x03B25494 ADRP X0, 0x5CE000
	0x03B25498 LDR X0, [X0 + 0x6C0]
	0x03B2549C BL 0x1C16CF4
	0x03B254A0 MOVZ W8, 0x1
	0x03B254A4 STRB W8, [X22 + 0x758]
	0x03B254A8 ADRP X23, 0x634000
	0x03B254AC ADRP X24, 0x5CE000
	0x03B254B0 LDR X23, [X23 + 0xC40]
	0x03B254B4 LDR X24, [X24 + 0x6C0]
	0x03B254B8 CBZ X21, 0x3B255BC
	0x03B254BC LDR X8, [X21]
	0x03B254C0 MOV X0, X21
	0x03B254C4 MOV W1, W19
	0x03B254C8 LDR X9, [X8 + 0x7E8]
	0x03B254CC LDR X2, [X8 + 0x7F0]
	0x03B254D0 BLR X9
	0x03B254D4 CBZ X0, 0x3B255BC
	0x03B254D8 LDR X8, [X0 + 0x18]
	0x03B254DC MOV X22, X0
	0x03B254E0 CMP W8, 0x1
	0x03B254E4 B.LT 0x3B25564
	0x03B254E8 MOV X25, X31
	0x03B254EC AND X8, X8, 0x0
	0x03B254F0 ADD X26, X22, 0x20
	0x03B254F4 CMP X25, W8, UXTW
	0x03B254F8 B.CS 0x3B255C0
	0x03B254FC CBZ X20, 0x3B255BC
	0x03B25500 LDR W10, [X20 + 0x1C]
	0x03B25504 LDR X1, [X26, X25, LSL #3]
	0x03B25508 LDR X8, [X20 + 0x10]
	0x03B2550C LDR X9, [X23]
	0x03B25510 ADD W10, W10, 0x1
	0x03B25514 STR W10, [X20 + 0x1C]
	0x03B25518 CBZ X8, 0x3B255BC
	0x03B2551C LDRSW X10, [X20 + 0x18]
	0x03B25520 LDR W11, [X8 + 0x18]
	0x03B25524 CMP W10, W11
	0x03B25528 B.CS 0x3B25540
	0x03B2552C ADD W9, W10, 0x1
	0x03B25530 ADD X8, X8, X10, 0x3, LSL
	0x03B25534 STR W9, [X20 + 0x18]
	0x03B25538 STR X1, [X8 + 0x20]
	0x03B2553C B 0x3B25554
	0x03B25540 LDR X8, [X9 + 0x20]
	0x03B25544 MOV X0, X20
	0x03B25548 LDR X8, [X8 + 0xC0]
	0x03B2554C LDR X2, [X8 + 0x70]
	0x03B25550 BL 0x301BF90
	0x03B25554 LDR W8, [X22 + 0x18]
	0x03B25558 ADD X25, X25, 0x1
	0x03B2555C CMP X25, W8, SXTW
	0x03B25560 B.LT 0x3B254F4
	0x03B25564 LDR X8, [X21]
	0x03B25568 MOV X0, X21
	0x03B2556C LDR X9, [X8 + 0x818]
	0x03B25570 LDR X1, [X8 + 0x820]
	0x03B25574 BLR X9
	0x03B25578 LDR X8, [X24]
	0x03B2557C MOV X21, X0
	0x03B25580 LDR W9, [X8 + 0xE0]
	0x03B25584 CBNZ W9, 0x3B25590
	0x03B25588 MOV X0, X8
	0x03B2558C BL 0x1C16DFC
	0x03B25590 MOV X0, X21
	0x03B25594 MOV X1, X31
	0x03B25598 MOV X2, X31
	0x03B2559C BL 0x3395F0C
	0x03B255A0 TBNZ X0, 0x0, 0x3B254B8
	0x03B255A4 LDP X20, X19, [X31 + 0x40]
	0x03B255A8 LDP X22, X21, [X31 + 0x30]
	0x03B255AC LDP X24, X23, [X31 + 0x20]
	0x03B255B0 LDP X26, X25, [X31 + 0x10]
	0x03B255B4 LDR X30, [X31], #0x50
	0x03B255B8 RET
	0x03B255BC BL 0x1C16F20
	0x03B255C0 BL 0x1C16F28
	0x03B255C4 SUB X31, X31, 0xC0
	0x03B255C8 STP X29, X30, [X31 + 0x60]
	0x03B255CC STP X28, X27, [X31 + 0x70]
	0x03B255D0 STP X26, X25, [X31 + 0x80]
	0x03B255D4 STP X24, X23, [X31 + 0x90]
	0x03B255D8 STP X22, X21, [X31 + 0xA0]
	0x03B255DC STP X20, X19, [X31 + 0xB0]
	0x03B255E0 ADRP X23, 0x8BD000
	0x03B255E4 LDRB W8, [X23 + 0x759]
	0x03B255E8 MOV X21, X2
	0x03B255EC MOV X22, X1
	0x03B255F0 MOV X19, X0
	0x03B255F4 STR W3, [X31 + 0x4]
	0x03B255F8 TBNZ X8, 0x0, 0x3B256C4
	0x03B255FC ADRP X0, 0x5D8000
	0x03B25600 LDR X0, [X0 + 0x998]
	0x03B25604 BL 0x1C16CF4
	0x03B25608 ADRP X0, 0x634000
	0x03B2560C LDR X0, [X0 + 0xC48]
	0x03B25610 BL 0x1C16CF4
	0x03B25614 ADRP X0, 0x634000
	0x03B25618 LDR X0, [X0 + 0xC50]
	0x03B2561C BL 0x1C16CF4
	0x03B25620 ADRP X0, 0x5D8000
	0x03B25624 LDR X0, [X0 + 0x9A0]
	0x03B25628 BL 0x1C16CF4
	0x03B2562C ADRP X0, 0x634000
	0x03B25630 LDR X0, [X0 + 0xC58]
	0x03B25634 BL 0x1C16CF4
	0x03B25638 ADRP X0, 0x5D8000
	0x03B2563C LDR X0, [X0 + 0x9A8]
	0x03B25640 BL 0x1C16CF4
	0x03B25644 ADRP X0, 0x5CE000
	0x03B25648 LDR X0, [X0 + 0xE00]
	0x03B2564C BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x8BE000
	013 Move W8, [X20+1868]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x5D1000
	020 Move X0, [X0+368]
	021 Call 0x1C17CF4
	022 Move X0, 0x635000
	023 Move X0, [X0+3048]
	024 Call 0x1C17CF4
	025 Move X0, 0x5D1000
	026 Move X0, [X0+632]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1868], W8
	030 Move X0, X19
	031 Move X1, X31
	032 Call String.IsNullOrEmpty, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {54}
	037 Move X8, 0x5D1000
	038 Move X8, [X8+632]
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X8, [X8]
	046 Move X26, [X31+32]
	047 Move X25, [X31+40]
	048 Move X28, [X31+16]
	049 Move X27, [X31+24]
	050 Move X8, [X8+184]
	051 Move X0, [X8]
	052 Move X30, [X31+96]
	053 Return X0
	054 Move X24, 0x635000
	055 Move X24, [X24+3048]
	056 Move X0, [X24]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X24]
	062 Move X8, [X0+184]
	063 Move X0, [X8]
	064 Compare X0, 0
	065 JumpIfEqual {191}
	066 Move W1, W31
	067 Move X2, X31
	068 Call StringBuilder.set_Length, X0, X1
	069 Compare X19, 0
	070 JumpIfEqual {191}
	071 Move X8, [X24]
	072 Move X0, X19
	073 Move W1, W31
	074 Move X2, X31
	075 Move X8, [X8+184]
	076 Move X20, [X8]
	077 Call String.get_Chars, X0, X1
	078 Compare X20, 0
	079 JumpIfEqual {191}
	080 Move W1, W0
	081 Move X0, X20
	082 Move X2, X31
	083 Call StringBuilder.Append, X0, X1
	084 Move W25, [X19+16]
	085 Subtract W8, W25, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X26, 0x5D1000
	088 Move X26, [X26+368]
	089 Move W20, 1
	090 Subtract W1, W20, 1
	091 Move X0, X19
	092 Move X2, X31
	093 Call String.get_Chars, X0, X1
	094 Move W22, W0
	095 Move X0, X19
	096 Move W1, W20
	097 Move X2, X31
	098 Call String.get_Chars, X0, X1
	099 Move X8, [X26]
	100 Move W21, W0
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move W0, W22
	107 Move X1, X31
	108 Call Char.IsLower, X0
	109 Move W22, W0
	110 Move W0, W21
	111 Move X1, X31
	112 Call Char.IsLower, X0
	113 NotImplemented "Instruction ORN not yet implemented."
	114 And W31, W22, 1
	115 Add W1, W20, 1
	116 And W28, W8, 1
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X19
	120 Move X2, X31
	121 Call String.get_Chars, X0, X1
	122 Move X8, [X26]
	123 Move W23, W0
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move W0, W23
	130 Move X1, X31
	131 Call Char.IsLower, X0
	132 And W31, W22, 1
	133 NotImplemented "Instruction CSEL not yet implemented."
	134 And W8, W0, W8
	135 Or W27, W8, W27
	136 Compare W27, 0
	137 JumpIfEqual {151}
	138 Move X0, [X24]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X24]
	144 Move X8, [X0+184]
	145 Move X0, [X8]
	146 Compare X0, 0
	147 JumpIfEqual {191}
	148 Move W1, 32
	149 Move X2, X31
	150 Call StringBuilder.Append, X0, X1
	151 Move X0, [X24]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {157}
	155 Call 0x1C17DFC
	156 Move X0, [X24]
	157 Move X8, [X0+184]
	158 Move X0, [X8]
	159 Compare X0, 0
	160 JumpIfEqual {191}
	161 Move W1, W21
	162 Move X2, X31
	163 Call StringBuilder.Append, X0, X1
	164 Add W20, W20, 1
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X0, [X24]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {172}
	170 Call 0x1C17DFC
	171 Move X0, [X24]
	172 Move X8, [X0+184]
	173 Move X0, [X8]
	174 Compare X0, 0
	175 JumpIfEqual {191}
	176 Move X8, [X0]
	177 Move X20, [X31+80]
	178 Move X19, [X31+88]
	179 Move X22, [X31+64]
	180 Move X21, [X31+72]
	181 Move X24, [X31+48]
	182 Move X23, [X31+56]
	183 Move X2, [X8+360]
	184 Move X1, [X8+368]
	185 Move X26, [X31+32]
	186 Move X25, [X31+40]
	187 Move X28, [X31+16]
	188 Move X27, [X31+24]
	189 Move X30, [X31+96]
	190 CallNoReturn X2
	191 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B25650 ADRP X0, 0x5D8000
	0x03B25654 LDR X0, [X0 + 0x9B8]
	0x03B25658 BL 0x1C16CF4
	0x03B2565C ADRP X0, 0x5D8000
	0x03B25660 LDR X0, [X0 + 0x9C0]
	0x03B25664 BL 0x1C16CF4
	0x03B25668 ADRP X0, 0x5CE000
	0x03B2566C LDR X0, [X0 + 0xE18]
	0x03B25670 BL 0x1C16CF4
	0x03B25674 ADRP X0, 0x61B000
	0x03B25678 LDR X0, [X0 + 0xB58]
	0x03B2567C BL 0x1C16CF4
	0x03B25680 ADRP X0, 0x634000
	0x03B25684 LDR X0, [X0 + 0xC60]
	0x03B25688 BL 0x1C16CF4
	0x03B2568C ADRP X0, 0x5D8000
	0x03B25690 LDR X0, [X0 + 0x940]
	0x03B25694 BL 0x1C16CF4
	0x03B25698 ADRP X0, 0x634000
	0x03B2569C LDR X0, [X0 + 0xC68]
	0x03B256A0 BL 0x1C16CF4
	0x03B256A4 ADRP X0, 0x5D8000
	0x03B256A8 LDR X0, [X0 + 0x9D8]
	0x03B256AC BL 0x1C16CF4
	0x03B256B0 ADRP X0, 0x634000
	0x03B256B4 LDR X0, [X0 + 0xC38]
	0x03B256B8 BL 0x1C16CF4
	0x03B256BC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x8BE000
	006 Move X21, 0x5CF000
	007 Move X20, 0x635000
	008 Move W8, [X19+1869]
	009 Move X21, [X21+2288]
	010 Move X20, [X20+3048]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x5CF000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move X0, 0x635000
	019 Move X0, [X0+3048]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1869], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call StringBuilder..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

