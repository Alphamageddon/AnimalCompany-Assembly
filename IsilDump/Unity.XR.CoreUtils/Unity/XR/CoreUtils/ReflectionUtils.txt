Type: Unity.XR.CoreUtils.ReflectionUtils

Method: System.Reflection.Assembly[] GetCachedAssemblies()

Disassembly:
	0x03B2DC28 B 0x3B2DC34
	0x03B2DC2C B 0x3B2DC34
	0x03B2DC30 B 0x3B2DC34
	0x03B2DC34 CMP W1, 0x1
	0x03B2DC38 B.NE 0x3B2DC88
	0x03B2DC3C BL 0x3EB1AD0
	0x03B2DC40 LDR X21, [X0]
	0x03B2DC44 BL 0x3EB1AE0
	0x03B2DC48 MOV W22, W31
	0x03B2DC4C MOV W29, W31
	0x03B2DC50 B 0x3B2DB94
	0x03B2DC54 ADRP X8, 0x5ED000
	0x03B2DC58 LDR X8, [X8 + 0xFC8]
	0x03B2DC5C ADD X0, X31, 0x40
	0x03B2DC60 LDR X1, [X8]
	0x03B2DC64 BL 0x2BC434C
	0x03B2DC68 LDP X20, X19, [X31 + 0xB0]
	0x03B2DC6C LDP X22, X21, [X31 + 0xA0]
	0x03B2DC70 LDP X24, X23, [X31 + 0x90]
	0x03B2DC74 LDP X26, X25, [X31 + 0x80]
	0x03B2DC78 LDP X28, X27, [X31 + 0x70]
	0x03B2DC7C LDP X29, X30, [X31 + 0x60]
	0x03B2DC80 ADD X31, X31, 0xC0
	0x03B2DC84 RET
	0x03B2DC88 MOV X19, X1
	0x03B2DC8C MOV X20, X0
	0x03B2DC90 MOV X21, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x8B6000
	005 Move X19, 0x62D000
	006 Move W8, [X20+1944]
	007 Move X19, [X19+3400]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x62D000
	013 Move X0, [X0+3400]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1944], W8
	017 Move X8, [X19]
	018 Move X8, [X8+184]
	019 Move X0, [X8]
	020 Compare X0, 0
	021 JumpIfNotEqual {30}
	022 Call AppDomain.get_CurrentDomain
	023 Compare X0, 0
	024 JumpIfEqual {34}
	025 Move X1, X31
	026 Call AppDomain.GetAssemblies, X0
	027 Move X8, [X19]
	028 Move X8, [X8+184]
	029 Move [X8], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Collections.Generic.List`1<System.Type[]> GetCachedTypesPerAssembly()

Disassembly:
	0x03B2DC94 LDR X1, [X23]
	0x03B2DC98 ADD X0, X31, 0x20
	0x03B2DC9C BL 0x2BC434C
	0x03B2DCA0 MOV X0, X20
	0x03B2DCA4 MOV X1, X19
	0x03B2DCA8 CBZ X21, 0x3B2DCF0
	0x03B2DCAC MOV X0, X21
	0x03B2DCB0 BL 0x1C16F18
	0x03B2DCB4 MOV X0, X21
	0x03B2DCB8 BL 0x1C16F18
	0x03B2DCBC BL 0x1C16F20
	0x03B2DCC0 BL 0x1C16F20
	0x03B2DCC4 BL 0x1C16F20
	0x03B2DCC8 BL 0x1C16F20
	0x03B2DCCC MOV X19, X1
	0x03B2DCD0 MOV X20, X0
	0x03B2DCD4 B 0x3B2DC94
	0x03B2DCD8 B 0x3B2DCF0
	0x03B2DCDC B 0x3B2DCF0
	0x03B2DCE0 B 0x3B2DCF0
	0x03B2DCE4 B 0x3B2DCF0
	0x03B2DCE8 B 0x3B2DCF0
	0x03B2DCEC B 0x3B2DCF0
	0x03B2DCF0 CMP W1, 0x1
	0x03B2DCF4 B.NE 0x3B2DD24
	0x03B2DCF8 BL 0x3EB1AD0
	0x03B2DCFC LDR X19, [X0]
	0x03B2DD00 BL 0x3EB1AE0
	0x03B2DD04 ADRP X8, 0x5ED000
	0x03B2DD08 LDR X8, [X8 + 0xFC8]
	0x03B2DD0C ADD X0, X31, 0x40
	0x03B2DD10 LDR X1, [X8]
	0x03B2DD14 BL 0x2BC434C
	0x03B2DD18 CBZ X19, 0x3B2DC68
	0x03B2DD1C MOV X0, X19
	0x03B2DD20 BL 0x1C16F18
	0x03B2DD24 MOV X20, X0
	0x03B2DD28 MOV X19, X31
	0x03B2DD2C B 0x3B2DD34
	0x03B2DD30 MOV X20, X0
	0x03B2DD34 ADRP X8, 0x5ED000
	0x03B2DD38 LDR X8, [X8 + 0xFC8]
	0x03B2DD3C LDR X1, [X8]
	0x03B2DD40 ADD X0, X31, 0x40
	0x03B2DD44 BL 0x2BC434C
	0x03B2DD48 CBNZ X19, 0x3B2DD54
	0x03B2DD4C MOV X0, X20
	0x03B2DD50 BL 0x1D2C690
	0x03B2DD54 MOV X0, X19
	0x03B2DD58 BL 0x1C16F18
	0x03B2DD5C BL 0x1990590
	0x03B2DD60 SUB X31, X31, 0x40
	0x03B2DD64 STP X30, X23, [X31 + 0x10]
	0x03B2DD68 STP X22, X21, [X31 + 0x20]
	0x03B2DD6C STP X20, X19, [X31 + 0x30]
	0x03B2DD70 ADRP X21, 0x8B5000
	0x03B2DD74 LDRB W8, [X21 + 0x7A0]
	0x03B2DD78 MOV X19, X1
	0x03B2DD7C MOV X20, X0
	0x03B2DD80 TBNZ X8, 0x0, 0x3B2DDA4
	0x03B2DD84 ADRP X0, 0x5F6000
	0x03B2DD88 LDR X0, [X0 + 0x450]
	0x03B2DD8C BL 0x1C16CF4
	0x03B2DD90 ADRP X0, 0x62C000
	0x03B2DD94 LDR X0, [X0 + 0xDE0]
	0x03B2DD98 BL 0x1C16CF4
	0x03B2DD9C MOVZ W8, 0x1
	0x03B2DDA0 STRB W8, [X21 + 0x7A0]
	0x03B2DDA4 STR X31, [X31 + 0x8]
	0x03B2DDA8 BL 0x3B2CC28
	0x03B2DDAC MOV X22, X0
	0x03B2DDB0 BL 0x3B2CEC4
	0x03B2DDB4 CBZ X22, 0x3B2DE78
	0x03B2DDB8 LDR W8, [X22 + 0x18]
	0x03B2DDBC CMP W8, 0x1
	0x03B2DDC0 B.LT 0x3B2DE18
	0x03B2DDC4 MOV X21, X0
	0x03B2DDC8 MOV W23, W31
	0x03B2DDCC CMP W23, W8
	0x03B2DDD0 B.CS 0x3B2DE7C
	0x03B2DDD4 ADD X8, X22, W23, 0x3, SXTW
	0x03B2DDD8 LDR X0, [X8 + 0x20]
	0x03B2DDDC CBZ X0, 0x3B2DE78
	0x03B2DDE0 LDR X8, [X0]
	0x03B2DDE4 LDR X9, [X8 + 0x258]
	0x03B2DDE8 LDR X1, [X8 + 0x260]
	0x03B2DDEC BLR X9
	0x03B2DDF0 CBZ X0, 0x3B2DE78
	0x03B2DDF4 LDR X0, [X0 + 0x10]
	0x03B2DDF8 MOV X1, X20
	0x03B2DDFC MOV X2, X31
	0x03B2DE00 BL 0x3226EF8
	0x03B2DE04 TBZ X0, 0x0, 0x3B2DE20
	0x03B2DE08 LDR W8, [X22 + 0x18]
	0x03B2DE0C ADD W23, W23, 0x1
	0x03B2DE10 CMP W23, W8
	0x03B2DE14 B.LT 0x3B2DDCC
	0x03B2DE18 MOV X0, X31
	0x03B2DE1C B 0x3B2DE64
	0x03B2DE20 CBZ X21, 0x3B2DE78
	0x03B2DE24 ADRP X8, 0x62C000
	0x03B2DE28 LDR X8, [X8 + 0xDE0]
	0x03B2DE2C MOV X0, X21
	0x03B2DE30 MOV W1, W23
	0x03B2DE34 LDR X2, [X8]
	0x03B2DE38 BL 0x301BCCC
	0x03B2DE3C CBZ X0, 0x3B2DE78
	0x03B2DE40 ADRP X8, 0x5F6000
	0x03B2DE44 LDR X8, [X8 + 0x450]
	0x03B2DE48 ADD X2, X31, 0x8
	0x03B2DE4C MOV X1, X19
	0x03B2DE50 LDR X3, [X8]
	0x03B2DE54 BL 0x2AA6B2C
	0x03B2DE58 LDR X8, [X31 + 0x8]
	0x03B2DE5C ANDS W31, W0, 0x1
	0x03B2DE60 CSEL X0, X8, X31, NE
	0x03B2DE64 LDP X20, X19, [X31 + 0x30]
	0x03B2DE68 LDP X22, X21, [X31 + 0x20]
	0x03B2DE6C LDP X30, X23, [X31 + 0x10]
	0x03B2DE70 ADD X31, X31, 0x40
	0x03B2DE74 RET
	0x03B2DE78 BL 0x1C16F20
	0x03B2DE7C BL 0x1C16F28
	0x03B2DE80 STR X30, [X31 - 0x30]!
	0x03B2DE84 STP X22, X21, [X31 + 0x10]
	0x03B2DE88 STP X20, X19, [X31 + 0x20]
	0x03B2DE8C ADRP X20, 0x8B5000
	0x03B2DE90 LDRB W8, [X20 + 0x7A1]
	0x03B2DE94 MOV X19, X0
	0x03B2DE98 TBNZ X8, 0x0, 0x3B2DEEC
	0x03B2DE9C ADRP X0, 0x5C8000
	0x03B2DEA0 LDR X0, [X0 + 0xC48]
	0x03B2DEA4 BL 0x1C16CF4
	0x03B2DEA8 ADRP X0, 0x5CE000
	0x03B2DEAC LDR X0, [X0 + 0x600]
	0x03B2DEB0 BL 0x1C16CF4
	0x03B2DEB4 ADRP X0, 0x5C6000
	0x03B2DEB8 LDR X0, [X0 + 0xDE0]
	0x03B2DEBC BL 0x1C16CF4
	0x03B2DEC0 ADRP X0, 0x62C000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x8B6000
	010 Move X22, 0x62D000
	011 Move W8, [X19+1945]
	012 Move X22, [X22+3400]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x62D000
	018 Move X0, [X0+3408]
	019 Call 0x1C17CF4
	020 Move X0, 0x62D000
	021 Move X0, [X0+3416]
	022 Call 0x1C17CF4
	023 Move X0, 0x62D000
	024 Move X0, [X0+3424]
	025 Call 0x1C17CF4
	026 Move X0, 0x62D000
	027 Move X0, [X0+3400]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1945], W8
	031 Move X8, [X22]
	032 Move X8, [X8+184]
	033 Move X9, [X8+8]
	034 Compare X9, 0
	035 JumpIfNotEqual {123}
	036 Move X0, X31
	037 Call AppDomain.get_CurrentDomain
	038 Compare X0, 0
	039 JumpIfEqual {134}
	040 Move X1, X31
	041 Call AppDomain.GetAssemblies, X0
	042 Compare X0, 0
	043 JumpIfEqual {134}
	044 Move X8, 0x62D000
	045 Move X8, [X8+3424]
	046 Move X19, X0
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X8, 0x62D000
	050 Move W1, [X19+24]
	051 Move X8, [X8+3416]
	052 Move X20, X0
	053 Move X2, [X8]
	054 Call List`1<Object>..ctor, X0, X1
	055 Move X8, [X22]
	056 Move X8, [X8+184]
	057 Move [X8+8], X20
	058 Move X9, [X19+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X20, 0x62D000
	061 Move X25, 0x62D000
	062 Move X20, [X20+3432]
	063 Move X25, [X25+3408]
	064 Move X23, X31
	065 And X8, X9, 0
	066 Add X24, X19, 32
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X24]
	069 Compare X0, 0
	070 JumpIfEqual {103}
	071 Move X8, [X22]
	072 Move X9, [X0]
	073 Move X8, [X8+184]
	074 Move X1, [X9+560]
	075 Move X10, [X9+552]
	076 Move X21, [X8+8]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X1, X0
	079 Compare X21, 0
	080 JumpIfEqual {104}
	081 Move W10, [X21+28]
	082 Move X8, [X21+16]
	083 Move X9, [X25]
	084 Add W10, W10, 1
	085 Move [X21+28], W10
	086 Compare X8, 0
	087 JumpIfEqual {105}
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Move W11, [X8+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add W9, W10, 1
	092 Add X8, X8, X10
	093 Move [X21+24], W9
	094 Move [X8+32], X1
	095 Move X8, [X9+32]
	096 Move X8, [X8+192]
	097 Move X2, [X8+112]
	098 Move X0, X21
	099 Call List`1<Object>.AddWithResize, X0, X1
	100 Move W8, [X19+24]
	101 Add X23, X23, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Call 0x1C17F20
	104 Call 0x1C17F20
	105 Call 0x1C17F20
	106 Move X21, X0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X0, X21
	109 Call 0x3EB2AD0
	110 Move X21, X0
	111 Move X0, X20
	112 Call 0x1C17D08
	113 Move X8, [X21]
	114 Move X1, [X8]
	115 Call 0x1C18270
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {135}
	120 Call 0x3EB2AE0
	121 Move X8, [X22]
	122 Move X8, [X8+184]
	123 Move X0, [X8+8]
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X30, [X31+64]
	131 Move X25, [X31+72]
	132 Return X0
	133 Call 0x1C17F28
	134 Call 0x1C17F20
	135 Move W0, 8
	136 Call 0x3EB2AF0
	137 Move X8, [X21]
	138 Move [X0], X8
	139 Move X1, 0x388000
	140 Add X1, X1, 3672
	141 Move X2, X31
	142 Call 0x3EB2B00
	143 Move X21, X0
	144 Call 0x3EB2AE0
	145 Move X0, X21
	146 Call 0x1D2D690
	147 Call 0x1991590

Method: System.Collections.Generic.List`1<System.Collections.Generic.Dictionary`2<System.String, System.Type>> GetCachedAssemblyTypeMaps()

Disassembly:
	0x03B2DEC4 LDR X0, [X0 + 0xDE8]
	0x03B2DEC8 BL 0x1C16CF4
	0x03B2DECC ADRP X0, 0x62C000
	0x03B2DED0 LDR X0, [X0 + 0xDF0]
	0x03B2DED4 BL 0x1C16CF4
	0x03B2DED8 ADRP X0, 0x62C000
	0x03B2DEDC LDR X0, [X0 + 0xDF8]
	0x03B2DEE0 BL 0x1C16CF4
	0x03B2DEE4 MOVZ W8, 0x1
	0x03B2DEE8 STRB W8, [X20 + 0x7A1]
	0x03B2DEEC CBZ X19, 0x3B2E058
	0x03B2DEF0 ADRP X8, 0x62C000
	0x03B2DEF4 LDR X8, [X8 + 0xDF8]
	0x03B2DEF8 MOV X0, X19
	0x03B2DEFC MOV X2, X31
	0x03B2DF00 LDR X1, [X8]
	0x03B2DF04 BL 0x3226F64
	0x03B2DF08 TBZ X0, 0x0, 0x3B2DF18
	0x03B2DF0C MOVZ W1, 0x2
	0x03B2DF10 MOVN W8, 0x1
	0x03B2DF14 B 0x3B2DF3C
	0x03B2DF18 ADRP X8, 0x5C6000
	0x03B2DF1C LDR X8, [X8 + 0xDE0]
	0x03B2DF20 MOV X0, X19
	0x03B2DF24 MOV X2, X31
	0x03B2DF28 LDR X1, [X8]
	0x03B2DF2C BL 0x3226F64
	0x03B2DF30 TBZ X0, 0x0, 0x3B2DF58
	0x03B2DF34 MOVZ W1, 0x1
	0x03B2DF38 MOVN W8, 0x0
	0x03B2DF3C LDR W9, [X19 + 0x10]
	0x03B2DF40 MOV X0, X19
	0x03B2DF44 MOV X3, X31
	0x03B2DF48 ADD W2, W9, W8
	0x03B2DF4C BL 0x3228DE4
	0x03B2DF50 MOV X19, X0
	0x03B2DF54 CBZ X0, 0x3B2E058
	0x03B2DF58 ADRP X20, 0x5CE000
	0x03B2DF5C LDR X20, [X20 + 0x600]
	0x03B2DF60 MOV X0, X19
	0x03B2DF64 MOV W1, W31
	0x03B2DF68 MOV X2, X31
	0x03B2DF6C BL 0x3222A1C
	0x03B2DF70 AND W8, W0, 0xFFFF
	0x03B2DF74 CMP W8, 0x6B
	0x03B2DF78 B.NE 0x3B2DFD0
	0x03B2DF7C MOVZ W1, 0x1
	0x03B2DF80 MOV X0, X19
	0x03B2DF84 MOV X2, X31
	0x03B2DF88 BL 0x3222A1C
	0x03B2DF8C AND W8, W0, 0xFFFF
	0x03B2DF90 CMP W8, 0x41
	0x03B2DF94 B.CC 0x3B2DFD0
	0x03B2DF98 MOVZ W1, 0x1
	0x03B2DF9C MOV X0, X19
	0x03B2DFA0 MOV X2, X31
	0x03B2DFA4 BL 0x3222A1C
	0x03B2DFA8 AND W8, W0, 0xFFFF
	0x03B2DFAC CMP W8, 0x5A
	0x03B2DFB0 B.HI 0x3B2DFD0
	0x03B2DFB4 LDR W8, [X19 + 0x10]
	0x03B2DFB8 MOVZ W1, 0x1
	0x03B2DFBC MOV X0, X19
	0x03B2DFC0 MOV X3, X31
	0x03B2DFC4 SUB W2, W8, 0x1
	0x03B2DFC8 BL 0x3228DE4
	0x03B2DFCC MOV X19, X0
	0x03B2DFD0 LDR X0, [X20]
	0x03B2DFD4 ADRP X22, 0x62C000
	0x03B2DFD8 ADRP X21, 0x62C000
	0x03B2DFDC ADRP X20, 0x5C8000
	0x03B2DFE0 LDR W8, [X0 + 0xE0]
	0x03B2DFE4 LDR X22, [X22 + 0xDE8]
	0x03B2DFE8 LDR X21, [X21 + 0xDF0]
	0x03B2DFEC LDR X20, [X20 + 0xC48]
	0x03B2DFF0 CBNZ W8, 0x3B2DFF8
	0x03B2DFF4 BL 0x1C16DFC
	0x03B2DFF8 LDR X1, [X22]
	0x03B2DFFC LDR X2, [X21]
	0x03B2E000 MOV X0, X19
	0x03B2E004 MOV X3, X31
	0x03B2E008 BL 0x3632D08
	0x03B2E00C LDR X8, [X20]
	0x03B2E010 MOV X19, X0
	0x03B2E014 LDR W9, [X8 + 0xE0]
	0x03B2E018 CBNZ W9, 0x3B2E024
	0x03B2E01C MOV X0, X8
	0x03B2E020 BL 0x1C16DFC
	0x03B2E024 MOV X0, X31
	0x03B2E028 BL 0x33387A0
	0x03B2E02C CBZ X0, 0x3B2E058
	0x03B2E030 LDR X8, [X0]
	0x03B2E034 LDP X9, X1, [X8 + 0x1D8]
	0x03B2E038 BLR X9
	0x03B2E03C CBZ X0, 0x3B2E058
	0x03B2E040 MOV X1, X19
	0x03B2E044 LDP X20, X19, [X31 + 0x20]
	0x03B2E048 LDP X22, X21, [X31 + 0x10]
	0x03B2E04C MOV X2, X31
	0x03B2E050 LDR X30, [X31], #0x30
	0x03B2E054 B 0x333D5CC
	0x03B2E058 BL 0x1C16F20
	0x03B2E05C STR X30, [X31 - 0x20]!
	0x03B2E060 STP X20, X19, [X31 + 0x10]
	0x03B2E064 ADRP X20, 0x8B4000
	0x03B2E068 LDRB W8, [X20 + 0x7A2]
	0x03B2E06C MOV X19, X0
	0x03B2E070 TBNZ X8, 0x0, 0x3B2E094
	0x03B2E074 ADRP X0, 0x5EF000
	0x03B2E078 LDR X0, [X0 + 0x1E0]
	0x03B2E07C BL 0x1C16CF4
	0x03B2E080 ADRP X0, 0x5F3000
	0x03B2E084 LDR X0, [X0 + 0x888]
	0x03B2E088 BL 0x1C16CF4
	0x03B2E08C MOVZ W8, 0x1
	0x03B2E090 STRB W8, [X20 + 0x7A2]
	0x03B2E094 CBZ X19, 0x3B2E114
	0x03B2E098 ADRP X8, 0x5F3000
	0x03B2E09C LDR X8, [X8 + 0x888]
	0x03B2E0A0 MOVZ W2, 0x1058
	0x03B2E0A4 MOV X0, X19
	0x03B2E0A8 MOV X3, X31
	0x03B2E0AC LDR X1, [X8]
	0x03B2E0B0 BL 0x3397828
	0x03B2E0B4 CBZ X0, 0x3B2E114
	0x03B2E0B8 LDR X8, [X0]
	0x03B2E0BC MOV X1, X31
	0x03B2E0C0 MOV X2, X31
	0x03B2E0C4 LDR X9, [X8 + 0x2C8]
	0x03B2E0C8 LDR X3, [X8 + 0x2D0]
	0x03B2E0CC BLR X9
	0x03B2E0D0 CBZ X0, 0x3B2E108
	0x03B2E0D4 ADRP X9, 0x5EF000
	0x03B2E0D8 LDR X9, [X9 + 0x1E0]
	0x03B2E0DC LDR X8, [X0]
	0x03B2E0E0 LDR X1, [X9]
	0x03B2E0E4 LDRB W10, [X8 + 0x130]
	0x03B2E0E8 LDRB W9, [X1 + 0x130]
	0x03B2E0EC CMP W10, W9
	0x03B2E0F0 B.CC 0x3B2E118
	0x03B2E0F4 LDR X8, [X8 + 0xC8]
	0x03B2E0F8 ADD X8, X8, X9, 0x3, LSL
	0x03B2E0FC LDUR X8, [X8 - 0x8]
	0x03B2E100 CMP X8, X1
	0x03B2E104 B.NE 0x3B2E118
	0x03B2E108 LDP X20, X19, [X31 + 0x10]
	0x03B2E10C LDR X30, [X31], #0x20
	0x03B2E110 RET
	0x03B2E114 BL 0x1C16F20
	0x03B2E118 BL 0x1C171E0
	0x03B2E11C RET
	0x03B2E120 LDR X8, [X0]
	0x03B2E124 LDP X2, X1, [X8 + 0x178]
	0x03B2E128 BR X2
	0x03B2E12C RET
	0x03B2E130 SUB X31, X31, 0x50
	0x03B2E134 STP X30, X25, [X31 + 0x10]
	0x03B2E138 STP X24, X23, [X31 + 0x20]
	0x03B2E13C STP X22, X21, [X31 + 0x30]
	0x03B2E140 STP X20, X19, [X31 + 0x40]
	0x03B2E144 ADRP X21, 0x8B4000
	0x03B2E148 LDRB W8, [X21 + 0x7A3]
	0x03B2E14C MOV X19, X1
	0x03B2E150 MOV X20, X0
	0x03B2E154 TBNZ X8, 0x0, 0x3B2E1D8
	0x03B2E158 ADRP X0, 0x5C7000
	0x03B2E15C LDR X0, [X0 + 0x170]
	0x03B2E160 BL 0x1C16CF4
	0x03B2E164 ADRP X0, 0x5C5000
	0x03B2E168 LDR X0, [X0 + 0xA28]
	0x03B2E16C BL 0x1C16CF4
	0x03B2E170 ADRP X0, 0x5EC000
	0x03B2E174 LDR X0, [X0 + 0x1D0]
	0x03B2E178 BL 0x1C16CF4
	0x03B2E17C ADRP X0, 0x5EF000
	0x03B2E180 LDR X0, [X0 + 0x1E0]
	0x03B2E184 BL 0x1C16CF4
	0x03B2E188 ADRP X0, 0x62B000
	0x03B2E18C LDR X0, [X0 + 0xE00]
	0x03B2E190 BL 0x1C16CF4
	0x03B2E194 ADRP X0, 0x62B000
	0x03B2E198 LDR X0, [X0 + 0xE08]
	0x03B2E19C BL 0x1C16CF4
	0x03B2E1A0 ADRP X0, 0x5C6000
	0x03B2E1A4 LDR X0, [X0 + 0xEC8]
	0x03B2E1A8 BL 0x1C16CF4
	0x03B2E1AC ADRP X0, 0x62B000
	0x03B2E1B0 LDR X0, [X0 + 0xE10]
	0x03B2E1B4 BL 0x1C16CF4
	0x03B2E1B8 ADRP X0, 0x5C5000
	0x03B2E1BC LDR X0, [X0 + 0x988]
	0x03B2E1C0 BL 0x1C16CF4
	0x03B2E1C4 ADRP X0, 0x62B000
	0x03B2E1C8 LDR X0, [X0 + 0xE18]
	0x03B2E1CC BL 0x1C16CF4
	0x03B2E1D0 MOVZ W8, 0x1
	0x03B2E1D4 STRB W8, [X21 + 0x7A3]
	0x03B2E1D8 STRH W31, [X31 + 0xC]
	0x03B2E1DC STR X20, [X19]
	0x03B2E1E0 CBZ X20, 0x3B2E348
	0x03B2E1E4 ADRP X21, 0x5EF000
	0x03B2E1E8 LDR X21, [X21 + 0x1E0]
	0x03B2E1EC LDR X0, [X21]
	0x03B2E1F0 LDR W8, [X0 + 0xE0]
	0x03B2E1F4 CBNZ W8, 0x3B2E200
	0x03B2E1F8 BL 0x1C16DFC
	0x03B2E1FC LDR X0, [X21]
	0x03B2E200 LDR X8, [X0 + 0xB8]
	0x03B2E204 LDR X22, [X8 + 0x8]
	0x03B2E208 CBZ X22, 0x3B2E4DC
	0x03B2E20C LDR X8, [X22 + 0x18]
	0x03B2E210 CMP W8, 0x1
	0x03B2E214 B.LT 0x3B2E284
	0x03B2E218 ADRP X25, 0x5C7000
	0x03B2E21C LDR X25, [X25 + 0x170]
	0x03B2E220 MOV X23, X31
	0x03B2E224 AND X8, X8, 0x0
	0x03B2E228 ADD X24, X22, 0x20
	0x03B2E22C CMP X23, W8, UXTW
	0x03B2E230 B.CS 0x3B2E4E0
	0x03B2E234 LDRH W8, [X24, X23, LSL #1]
	0x03B2E238 LDR X0, [X25]
	0x03B2E23C STRH W8, [X31 + 0xC]
	0x03B2E240 LDR W8, [X0 + 0xE0]
	0x03B2E244 LDR X20, [X19]
	0x03B2E248 CBNZ W8, 0x3B2E250
	0x03B2E24C BL 0x1C16DFC
	0x03B2E250 ADD X0, X31, 0xC
	0x03B2E254 MOV X1, X31
	0x03B2E258 BL 0x330A76C
	0x03B2E25C CBZ X20, 0x3B2E4DC
	0x03B2E260 MOV X1, X0
	0x03B2E264 MOV X0, X20
	0x03B2E268 MOV X2, X31
	0x03B2E26C BL 0x322BD1C
	0x03B2E270 TBNZ X0, 0x0, 0x3B2E36C
	0x03B2E274 LDR W8, [X22 + 0x18]
	0x03B2E278 ADD X23, X23, 0x1
	0x03B2E27C CMP X23, W8, SXTW
	0x03B2E280 B.LT 0x3B2E22C
	0x03B2E284 LDR X0, [X21]
	0x03B2E288 LDR W8, [X0 + 0xE0]
	0x03B2E28C CBNZ W8, 0x3B2E298
	0x03B2E290 BL 0x1C16DFC
	0x03B2E294 LDR X0, [X21]
	0x03B2E298 LDR X8, [X0 + 0xB8]
	0x03B2E29C LDR X20, [X8 + 0x10]
	0x03B2E2A0 CBZ X20, 0x3B2E4DC
	0x03B2E2A4 LDR X8, [X20 + 0x18]
	0x03B2E2A8 CMP W8, 0x1
	0x03B2E2AC B.LT 0x3B2E2EC
	0x03B2E2B0 MOV X22, X31
	0x03B2E2B4 AND X8, X8, 0x0

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x8B6000
	015 Move X22, 0x62D000
	016 Move W8, [X19+1946]
	017 Move X22, [X22+3400]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {60}
	022 Move X0, 0x62D000
	023 Move X0, [X0+3440]
	024 Call 0x1C17CF4
	025 Move X0, 0x62D000
	026 Move X0, [X0+3448]
	027 Call 0x1C17CF4
	028 Move X0, 0x62D000
	029 Move X0, [X0+3456]
	030 Call 0x1C17CF4
	031 Move X0, 0x62D000
	032 Move X0, [X0+3096]
	033 Call 0x1C17CF4
	034 Move X0, 0x62D000
	035 Move X0, [X0+3104]
	036 Call 0x1C17CF4
	037 Move X0, 0x62D000
	038 Move X0, [X0+3112]
	039 Call 0x1C17CF4
	040 Move X0, 0x62D000
	041 Move X0, [X0+3464]
	042 Call 0x1C17CF4
	043 Move X0, 0x62D000
	044 Move X0, [X0+3120]
	045 Call 0x1C17CF4
	046 Move X0, 0x62D000
	047 Move X0, [X0+3472]
	048 Call 0x1C17CF4
	049 Move X0, 0x62D000
	050 Move X0, [X0+3480]
	051 Call 0x1C17CF4
	052 Move X0, 0x62D000
	053 Move X0, [X0+3488]
	054 Call 0x1C17CF4
	055 Move X0, 0x62D000
	056 Move X0, [X0+3400]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+1946], W8
	060 Move X8, [X22]
	061 Move [X31+32], X31
	062 Move [X31+40], X31
	063 Move [X31+48], X31
	064 Move X8, [X8+184]
	065 Move X8, [X8+16]
	066 Compare X8, 0
	067 JumpIfNotEqual {196}
	068 Call ReflectionUtils.GetCachedTypesPerAssembly
	069 Compare X0, 0
	070 JumpIfEqual {214}
	071 Move X8, 0x62D000
	072 Move W20, [X0+24]
	073 Move X8, [X8+3488]
	074 Move X19, X0
	075 Move X0, [X8]
	076 Call 0x1C17F10
	077 Move X8, 0x62D000
	078 Move X8, [X8+3472]
	079 Move W1, W20
	080 Move X21, X0
	081 Move X2, [X8]
	082 Call List`1<Object>..ctor, X0, X1
	083 Move X8, [X22]
	084 Move X0, X19
	085 Move X8, [X8+184]
	086 Move [X8+16], X21
	087 Move X8, 0x62D000
	088 Move X8, [X8+3120]
	089 Move X1, [X8]
	090 Add X8, X31, 8
	091 Call List`1<Object>.GetEnumerator, X0
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move X8, [X31+24]
	094 Move X23, 0x62C000
	095 Move X24, 0x62C000
	096 Move X25, 0x62C000
	097 Move X26, 0x62C000
	098 Move X27, 0x62C000
	099 Move X23, [X23+3104]
	100 Move X24, [X24+3456]
	101 Move X25, [X25+3440]
	102 Move X26, [X26+3448]
	103 Move X27, [X27+3464]
	104 Move [X31+2], V0
	105 Move [X31+48], X8
	106 Move X19, 0x62C000
	107 Move X19, [X19+3432]
	108 Move X1, [X23]
	109 Add X0, X31, 32
	110 Call Enumerator<Object>.MoveNext, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {191}
	115 Move X28, [X31+48]
	116 Move X0, [X24]
	117 Call 0x1C17F10
	118 Move X1, [X25]
	119 Move X20, X0
	120 Call Dictionary`2<Object, Object>..ctor, X0
	121 Compare X28, 0
	122 JumpIfEqual {173}
	123 Move W8, [X28+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W29, W31
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X8, X28, W29
	128 Move X21, [X8+32]
	129 Compare X21, 0
	130 JumpIfEqual {170}
	131 Move X8, [X21]
	132 Move X1, [X8+752]
	133 Move X9, [X8+744]
	134 Move X0, X21
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X1, X0
	137 Compare X20, 0
	138 JumpIfEqual {171}
	139 Move X3, [X26]
	140 Move X0, X20
	141 Move X2, X21
	142 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	143 Move W8, [X28+24]
	144 Add W29, W29, 1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, [X22]
	147 Move X8, [X8+184]
	148 Move X0, [X8+16]
	149 Compare X0, 0
	150 JumpIfEqual {174}
	151 Move W10, [X0+28]
	152 Move X8, [X0+16]
	153 Move X9, [X27]
	154 Add W10, W10, 1
	155 Move [X0+28], W10
	156 Compare X8, 0
	157 JumpIfEqual {175}
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Move W11, [X8+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add W9, W10, 1
	162 Add X8, X8, X10
	163 Move [X0+24], W9
	164 Move [X8+32], X20
	165 Move X8, [X9+32]
	166 Move X8, [X8+192]
	167 Move X2, [X8+112]
	168 Move X1, X20
	169 Call List`1<Object>.AddWithResize, X0, X1
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Call 0x1C17F28
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X20, X1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move W21, 1
	179 Call 0x3EB2AD0
	180 Move X20, X0
	181 Move X0, X19
	182 Call 0x1C17D08
	183 Move X8, [X20]
	184 Move X1, [X8]
	185 Call 0x1C18270
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {215}
	190 Call 0x3EB2AE0
	191 Move X8, 0x62C000
	192 Move X8, [X8+3096]
	193 Add X0, X31, 32
	194 Move X1, [X8]
	195 Call Enumerator<Object>.Dispose, X0
	196 Move X8, [X22]
	197 Move X20, [X31+144]
	198 Move X19, [X31+152]
	199 Move X22, [X31+128]
	200 Move X21, [X31+136]
	201 Move X24, [X31+112]
	202 Move X23, [X31+120]
	203 Move X8, [X8+184]
	204 Move X26, [X31+96]
	205 Move X25, [X31+104]
	206 Move X28, [X31+80]
	207 Move X27, [X31+88]
	208 Move X29, [X31+64]
	209 Move X30, [X31+72]
	210 Move X0, [X8+16]
	211 Add X31, X31, 160
	212 Return X0
	213 Move X19, X0
	214 Call 0x1C17F20
	215 Move W0, 8
	216 Call 0x3EB2AF0
	217 Move X8, [X20]
	218 Move [X0], X8
	219 Move X1, 0x387000
	220 Add X1, X1, 3672
	221 Move X2, X31
	222 Call 0x3EB2B00
	223 Move X19, X0
	224 Move X19, X0
	225 Move W20, W1
	226 Call 0x3EB2AE0
	227 Move X19, X0
	228 Move W21, 1
	229 Move W20, W1
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, X19
	232 Call 0x3EB2AD0
	233 Move X20, [X0]
	234 Call 0x3EB2AE0
	235 Move X8, 0x62C000
	236 Move X8, [X8+3096]
	237 Add X0, X31, 32
	238 Move X1, [X8]
	239 Call Enumerator<Object>.Dispose, X0
	240 Compare X20, 0
	241 JumpIfEqual {196}
	242 Move X0, X20
	243 Call 0x1C17F18
	244 Move X20, X31
	245 Move X19, X0
	246 Move X8, 0x62C000
	247 Move X8, [X8+3096]
	248 Move X1, [X8]
	249 Add X0, X31, 32
	250 Call Enumerator<Object>.Dispose, X0
	251 Compare X20, 0
	252 JumpIfNotEqual {255}
	253 Move X0, X19
	254 Call 0x1D2D690
	255 Move X0, X20
	256 Call 0x1C17F18
	257 Call 0x1991590

Method: System.Void PreWarmTypeCache()

Disassembly:
	0x03B2E2B8 ADD X23, X20, 0x20

ISIL:
	001 Call ReflectionUtils.GetCachedAssemblyTypeMaps
	002 Return 

Method: System.Void ForEachAssembly(System.Action`1<System.Reflection.Assembly> callback)

Disassembly:
	0x03B2E2BC CMP X22, W8, UXTW
	0x03B2E2C0 B.CS 0x3B2E4E0
	0x03B2E2C4 LDR X0, [X19]
	0x03B2E2C8 CBZ X0, 0x3B2E4DC
	0x03B2E2CC LDR X1, [X23, X22, LSL #3]
	0x03B2E2D0 MOV X2, X31
	0x03B2E2D4 BL 0x322BD1C
	0x03B2E2D8 TBNZ X0, 0x0, 0x3B2E494
	0x03B2E2DC LDR W8, [X20 + 0x18]
	0x03B2E2E0 ADD X22, X22, 0x1
	0x03B2E2E4 CMP X22, W8, SXTW
	0x03B2E2E8 B.LT 0x3B2E2BC
	0x03B2E2EC ADRP X8, 0x5EC000
	0x03B2E2F0 LDR X8, [X8 + 0x1D0]
	0x03B2E2F4 LDR X20, [X19]
	0x03B2E2F8 LDR X0, [X8]
	0x03B2E2FC LDR W8, [X0 + 0xE0]
	0x03B2E300 CBNZ W8, 0x3B2E308
	0x03B2E304 BL 0x1C16DFC
	0x03B2E308 MOV X0, X20
	0x03B2E30C MOV X1, X31
	0x03B2E310 BL 0x32FD064
	0x03B2E314 TBZ X0, 0x0, 0x3B2E390
	0x03B2E318 ADRP X8, 0x5C5000
	0x03B2E31C LDR X8, [X8 + 0xA28]
	0x03B2E320 LDR X0, [X8]
	0x03B2E324 LDR W8, [X0 + 0xE0]
	0x03B2E328 CBNZ W8, 0x3B2E330
	0x03B2E32C BL 0x1C16DFC
	0x03B2E330 ADRP X8, 0x62B000
	0x03B2E334 LDR X8, [X8 + 0xE18]
	0x03B2E338 LDR X0, [X8]
	0x03B2E33C MOV X1, X31
	0x03B2E340 BL 0x3C06A04
	0x03B2E344 B 0x3B2E4C0
	0x03B2E348 ADRP X8, 0x5C5000
	0x03B2E34C LDR X8, [X8 + 0xA28]
	0x03B2E350 LDR X0, [X8]
	0x03B2E354 LDR W8, [X0 + 0xE0]
	0x03B2E358 CBNZ W8, 0x3B2E360
	0x03B2E35C BL 0x1C16DFC
	0x03B2E360 ADRP X8, 0x62B000
	0x03B2E364 LDR X8, [X8 + 0xE00]
	0x03B2E368 B 0x3B2E4B4
	0x03B2E36C ADRP X8, 0x5C5000
	0x03B2E370 LDR X8, [X8 + 0xA28]
	0x03B2E374 LDR X0, [X8]
	0x03B2E378 LDR W8, [X0 + 0xE0]
	0x03B2E37C CBNZ W8, 0x3B2E384
	0x03B2E380 BL 0x1C16DFC
	0x03B2E384 ADRP X8, 0x62B000
	0x03B2E388 LDR X8, [X8 + 0xE10]
	0x03B2E38C B 0x3B2E4B4
	0x03B2E390 LDR X0, [X21]
	0x03B2E394 LDR X20, [X19]
	0x03B2E398 LDR W8, [X0 + 0xE0]
	0x03B2E39C CBNZ W8, 0x3B2E3A4
	0x03B2E3A0 BL 0x1C16DFC
	0x03B2E3A4 CBZ X20, 0x3B2E4DC
	0x03B2E3A8 LDR X8, [X21]
	0x03B2E3AC MOV X0, X20
	0x03B2E3B0 MOV X2, X31
	0x03B2E3B4 LDR X8, [X8 + 0xB8]
	0x03B2E3B8 LDR X1, [X8]
	0x03B2E3BC BL 0x322BBA0
	0x03B2E3C0 STR X0, [X19]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Call ReflectionUtils.GetCachedAssemblies
	010 Compare X0, 0
	011 JumpIfEqual {56}
	012 Move X8, [X0+24]
	013 Move X20, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X21, 0x62C000
	016 Move X21, [X21+3432]
	017 Move X23, X31
	018 And X8, X8, 0
	019 Add X24, X20, 32
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Compare X19, 0
	022 JumpIfEqual {31}
	023 Move X1, [X24]
	024 Move X0, [X19+64]
	025 Move X8, [X19+24]
	026 Move X2, [X19+40]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move W8, [X20+24]
	029 Add X23, X23, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Call 0x1C17F20
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, X0
	034 Move X0, X22
	035 Call 0x3EB2AD0
	036 Move X22, X0
	037 Move X0, X21
	038 Call 0x1C17D08
	039 Move X8, [X22]
	040 Move X1, [X8]
	041 Call 0x1C18270
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {57}
	046 Call 0x3EB2AE0
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Return 
	055 Call 0x1C17F28
	056 Call 0x1C17F20
	057 Move W0, 8
	058 Call 0x3EB2AF0
	059 Move X8, [X22]
	060 Move [X0], X8
	061 Move X1, 0x387000
	062 Add X1, X1, 3672
	063 Move X2, X31
	064 Call 0x3EB2B00
	065 Move X22, X0
	066 Call 0x3EB2AE0
	067 Move X0, X22
	068 Call 0x1D2D690
	069 Call 0x1991590

Method: System.Void ForEachType(System.Action`1<System.Type> callback)

Disassembly:
	0x03B25C98 B 0x3B25CA4
	0x03B25C9C B 0x3B25CA4
	0x03B25CA0 B 0x3B25CA4
	0x03B25CA4 MOV X23, X0
	0x03B25CA8 CMP W1, 0x1
	0x03B25CAC B.NE 0x3B25CD8
	0x03B25CB0 MOV X0, X23
	0x03B25CB4 BL 0x3EB1AD0
	0x03B25CB8 LDR X24, [X0]
	0x03B25CBC BL 0x3EB1AE0
	0x03B25CC0 LDR X1, [X26]
	0x03B25CC4 ADD X0, X31, 0x40
	0x03B25CC8 BL 0x2BC434C
	0x03B25CCC CBZ X24, 0x3B257A0
	0x03B25CD0 MOV X0, X24
	0x03B25CD4 BL 0x1C16F18
	0x03B25CD8 MOV X24, X31
	0x03B25CDC B 0x3B25CE4
	0x03B25CE0 MOV X23, X0
	0x03B25CE4 LDR X1, [X26]
	0x03B25CE8 ADD X0, X31, 0x40
	0x03B25CEC BL 0x2BC434C
	0x03B25CF0 CBZ X24, 0x3B25D98
	0x03B25CF4 MOV X0, X24
	0x03B25CF8 BL 0x1C16F18
	0x03B25CFC B 0x3B25D00
	0x03B25D00 MOV X24, X1
	0x03B25D04 MOV X23, X0
	0x03B25D08 CMP W24, 0x1
	0x03B25D0C B.NE 0x3B25D24
	0x03B25D10 MOV X0, X23
	0x03B25D14 BL 0x3EB1AD0
	0x03B25D18 LDR X20, [X0]
	0x03B25D1C BL 0x3EB1AE0
	0x03B25D20 B 0x3B25B2C
	0x03B25D24 MOV X20, X31
	0x03B25D28 B 0x3B25D30
	0x03B25D2C MOV X23, X0
	0x03B25D30 CBZ X19, 0x3B25D94
	0x03B25D34 LDR X8, [X19]
	0x03B25D38 ADRP X10, 0x5CE000
	0x03B25D3C LDRH W9, [X8 + 0x12E]
	0x03B25D40 LDR X10, [X10 + 0xE00]
	0x03B25D44 LDR X1, [X10]
	0x03B25D48 CBZ X9, 0x3B25D6C
	0x03B25D4C LDR X10, [X8 + 0xB0]
	0x03B25D50 ADD X10, X10, 0x8
	0x03B25D54 LDUR X11, [X10 - 0x8]
	0x03B25D58 CMP X11, X1
	0x03B25D5C B.EQ 0x3B25D7C
	0x03B25D60 SUBS X9, X9, 0x1
	0x03B25D64 ADD X10, X10, 0x10
	0x03B25D68 B.NE 0x3B25D54
	0x03B25D6C MOV X0, X19
	0x03B25D70 MOV W2, W31
	0x03B25D74 BL 0x1C5C788
	0x03B25D78 B 0x3B25D88
	0x03B25D7C LDRSW X9, [X10]
	0x03B25D80 ADD X8, X8, X9, 0x4, LSL
	0x03B25D84 ADD X0, X8, 0x138
	0x03B25D88 LDP X8, X1, [X0]
	0x03B25D8C MOV X0, X19
	0x03B25D90 BLR X8
	0x03B25D94 CBNZ X20, 0x3B25DA0
	0x03B25D98 MOV X0, X23
	0x03B25D9C BL 0x1D2C690
	0x03B25DA0 MOV X0, X20
	0x03B25DA4 BL 0x1C16F18
	0x03B25DA8 BL 0x1990590
	0x03B25DAC STR X30, [X31 - 0x30]!
	0x03B25DB0 STP X22, X21, [X31 + 0x10]
	0x03B25DB4 STP X20, X19, [X31 + 0x20]
	0x03B25DB8 ADRP X21, 0x8BD000
	0x03B25DBC LDRB W8, [X21 + 0x75A]
	0x03B25DC0 MOV X19, X1
	0x03B25DC4 MOV X20, X0
	0x03B25DC8 TBNZ X8, 0x0, 0x3B25DE0
	0x03B25DCC ADRP X0, 0x5CE000
	0x03B25DD0 LDR X0, [X0 + 0x6C0]
	0x03B25DD4 BL 0x1C16CF4
	0x03B25DD8 MOVZ W8, 0x1
	0x03B25DDC STRB W8, [X21 + 0x75A]
	0x03B25DE0 ADRP X22, 0x5CE000
	0x03B25DE4 LDR X22, [X22 + 0x6C0]
	0x03B25DE8 LDR X0, [X22]
	0x03B25DEC LDR W8, [X0 + 0xE0]
	0x03B25DF0 CBNZ W8, 0x3B25DF8
	0x03B25DF4 BL 0x1C16DFC
	0x03B25DF8 MOV X0, X20
	0x03B25DFC MOV X1, X31
	0x03B25E00 MOV X2, X31
	0x03B25E04 BL 0x3395194
	0x03B25E08 TBNZ X0, 0x0, 0x3B25E5C
	0x03B25E0C CBZ X20, 0x3B25E74
	0x03B25E10 LDR X8, [X20]
	0x03B25E14 MOVZ W2, 0x74
	0x03B25E18 MOV X0, X20
	0x03B25E1C MOV X1, X19
	0x03B25E20 LDR X9, [X8 + 0x678]
	0x03B25E24 LDR X3, [X8 + 0x680]
	0x03B25E28 BLR X9
	0x03B25E2C MOV X1, X31
	0x03B25E30 MOV X2, X31
	0x03B25E34 MOV X21, X0
	0x03B25E38 BL 0x32CCED4
	0x03B25E3C TBNZ X0, 0x0, 0x3B25E60
	0x03B25E40 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0x8BE000
	010 Move W8, [X20+1947]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x635000
	017 Move X0, [X0+3096]
	018 Call 0x1C17CF4
	019 Move X0, 0x635000
	020 Move X0, [X0+3104]
	021 Call 0x1C17CF4
	022 Move X0, 0x635000
	023 Move X0, [X0+3112]
	024 Call 0x1C17CF4
	025 Move X0, 0x635000
	026 Move X0, [X0+3120]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1947], W8
	030 Move [X31+32], X31
	031 Move [X31+40], X31
	032 Move [X31+48], X31
	033 Call ReflectionUtils.GetCachedTypesPerAssembly
	034 Compare X0, 0
	035 JumpIfEqual {90}
	036 Move X8, 0x635000
	037 Move X8, [X8+3120]
	038 Move X20, 0x635000
	039 Move X21, 0x635000
	040 Move X1, [X8]
	041 Move X20, [X20+3104]
	042 Move X21, [X21+3096]
	043 Add X8, X31, 8
	044 Call List`1<Object>.GetEnumerator, X0
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X8, [X31+24]
	047 Move [X31+2], V0
	048 Move [X31+48], X8
	049 Move X1, [X20]
	050 Add X0, X31, 32
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {75}
	056 Move X22, [X31+48]
	057 Compare X22, 0
	058 JumpIfEqual {89}
	059 Move X8, [X22+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X23, X31
	062 And X8, X8, 0
	063 Add X24, X22, 32
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Compare X19, 0
	066 JumpIfEqual {87}
	067 Move X1, [X24]
	068 Move X0, [X19+64]
	069 Move X8, [X19+24]
	070 Move X2, [X19+40]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W8, [X22+24]
	073 Add X23, X23, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X1, [X21]
	076 Add X0, X31, 32
	077 Call Enumerator<Object>.Dispose, X0
	078 Move X20, [X31+112]
	079 Move X19, [X31+120]
	080 Move X22, [X31+96]
	081 Move X21, [X31+104]
	082 Move X24, [X31+80]
	083 Move X23, [X31+88]
	084 Move X30, [X31+64]
	085 Add X31, X31, 128
	086 Return 
	087 Call 0x1C17F20
	088 Call 0x1C17F28
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Move X19, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X19
	094 Call 0x3EB2AD0
	095 Move X20, [X0]
	096 Call 0x3EB2AE0
	097 Move X1, [X21]
	098 Add X0, X31, 32
	099 Call Enumerator<Object>.Dispose, X0
	100 Compare X20, 0
	101 JumpIfEqual {78}
	102 Move X0, X20
	103 Call 0x1C17F18
	104 Move X20, X31
	105 Move X19, X0
	106 Move X1, [X21]
	107 Add X0, X31, 32
	108 Call Enumerator<Object>.Dispose, X0
	109 Compare X20, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X19
	112 Call 0x1D2D690
	113 Move X0, X20
	114 Call 0x1C17F18
	115 Call 0x1991590

Method: System.Type FindType(System.Func`2<System.Type, System.Boolean> predicate)

Disassembly:
	0x03B2E3C4 CBZ X0, 0x3B2E4DC
	0x03B2E3C8 LDR W20, [X0 + 0x10]
	0x03B2E3CC CMP W20, 0x1
	0x03B2E3D0 B.MI 0x3B2E458
	0x03B2E3D4 MOV W22, W31
	0x03B2E3D8 CBZ X0, 0x3B2E4DC
	0x03B2E3DC SUB W21, W20, 0x1
	0x03B2E3E0 MOV W1, W21
	0x03B2E3E4 MOV X2, X31
	0x03B2E3E8 BL 0x3222A1C
	0x03B2E3EC AND W8, W0, 0xFFFF
	0x03B2E3F0 CMP W8, 0x5C
	0x03B2E3F4 B.EQ 0x3B2E418
	0x03B2E3F8 LDR X0, [X19]
	0x03B2E3FC CBZ X0, 0x3B2E4DC
	0x03B2E400 MOV W1, W21
	0x03B2E404 MOV X2, X31
	0x03B2E408 BL 0x3222A1C
	0x03B2E40C AND W8, W0, 0xFFFF
	0x03B2E410 CMP W8, 0x2F
	0x03B2E414 B.NE 0x3B2E430
	0x03B2E418 ADD W22, W22, 0x1
	0x03B2E41C LDR X0, [X19]
	0x03B2E420 CMP W20, 0x2
	0x03B2E424 MOV W20, W21
	0x03B2E428 B.PL 0x3B2E3D8
	0x03B2E42C B 0x3B2E458
	0x03B2E430 SUBS W2, W22, 0x1
	0x03B2E434 B.LT 0x3B2E41C
	0x03B2E438 LDR X0, [X19]
	0x03B2E43C CBZ X0, 0x3B2E4DC
	0x03B2E440 MOV W1, W20
	0x03B2E444 MOV X3, X31
	0x03B2E448 BL 0x3228B90
	0x03B2E44C MOV W22, W31
	0x03B2E450 STR X0, [X19]
	0x03B2E454 B 0x3B2E41C
	0x03B2E458 ADRP X8, 0x5C5000
	0x03B2E45C LDR X8, [X8 + 0x988]
	0x03B2E460 MOV X2, X31
	0x03B2E464 LDR X1, [X8]
	0x03B2E468 BL 0x3226EF8
	0x03B2E46C TBZ X0, 0x0, 0x3B2E48C
	0x03B2E470 ADRP X8, 0x5C6000
	0x03B2E474 LDR X0, [X19]
	0x03B2E478 LDR X8, [X8 + 0xEC8]
	0x03B2E47C MOV X2, X31
	0x03B2E480 LDR X1, [X8]
	0x03B2E484 BL 0x321B938
	0x03B2E488 STR X0, [X19]
	0x03B2E48C MOVZ W0, 0x1
	0x03B2E490 B 0x3B2E4C4
	0x03B2E494 ADRP X8, 0x5C5000
	0x03B2E498 LDR X8, [X8 + 0xA28]
	0x03B2E49C LDR X0, [X8]
	0x03B2E4A0 LDR W8, [X0 + 0xE0]
	0x03B2E4A4 CBNZ W8, 0x3B2E4AC
	0x03B2E4A8 BL 0x1C16DFC
	0x03B2E4AC ADRP X8, 0x62B000
	0x03B2E4B0 LDR X8, [X8 + 0xE08]
	0x03B2E4B4 LDR X0, [X8]
	0x03B2E4B8 MOV X1, X31
	0x03B2E4BC BL 0x3C06A04
	0x03B2E4C0 MOV W0, W31
	0x03B2E4C4 LDP X20, X19, [X31 + 0x40]
	0x03B2E4C8 LDP X22, X21, [X31 + 0x30]
	0x03B2E4CC LDP X24, X23, [X31 + 0x20]
	0x03B2E4D0 LDP X30, X25, [X31 + 0x10]
	0x03B2E4D4 ADD X31, X31, 0x50
	0x03B2E4D8 RET
	0x03B2E4DC BL 0x1C16F20
	0x03B2E4E0 BL 0x1C16F28
	0x03B2E4E4 B 0x3B2E4EC
	0x03B2E4E8 B 0x3B2E4EC
	0x03B2E4EC MOV X19, X0
	0x03B2E4F0 CMP W1, 0x1
	0x03B2E4F4 B.NE 0x3B2E5A4
	0x03B2E4F8 MOV X0, X19
	0x03B2E4FC BL 0x3EB1AD0
	0x03B2E500 MOV X19, X0
	0x03B2E504 ADRP X0, 0x5C5000
	0x03B2E508 LDR X0, [X0 + 0x7D0]
	0x03B2E50C BL 0x1C16D08
	0x03B2E510 LDR X8, [X19]
	0x03B2E514 LDR X1, [X8]
	0x03B2E518 BL 0x1C17270
	0x03B2E51C TBZ X0, 0x0, 0x3B2E57C
	0x03B2E520 LDR X19, [X19]
	0x03B2E524 BL 0x3EB1AE0
	0x03B2E528 ADRP X0, 0x61F000
	0x03B2E52C LDR X0, [X0 + 0xDD0]
	0x03B2E530 BL 0x1C16D08
	0x03B2E534 MOV X20, X0
	0x03B2E538 ADRP X0, 0x62B000
	0x03B2E53C LDR X0, [X0 + 0xE20]
	0x03B2E540 BL 0x1C16D08
	0x03B2E544 MOV X1, X0
	0x03B2E548 MOV X0, X20
	0x03B2E54C MOV X2, X19
	0x03B2E550 MOV X3, X31
	0x03B2E554 BL 0x3227BD4
	0x03B2E558 MOV X19, X0
	0x03B2E55C ADRP X0, 0x5C5000
	0x03B2E560 LDR X0, [X0 + 0xA28]
	0x03B2E564 BL 0x1C16D08
	0x03B2E568 LDR W8, [X0 + 0xE0]
	0x03B2E56C CBNZ W8, 0x3B2E574
	0x03B2E570 BL 0x1C16DFC
	0x03B2E574 MOV X0, X19
	0x03B2E578 B 0x3B2E4B8
	0x03B2E57C MOVZ W0, 0x8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X20, 0x8B5000
	011 Move W8, [X20+1948]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x62C000
	018 Move X0, [X0+3096]
	019 Call 0x1C17CF4
	020 Move X0, 0x62C000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0x62C000
	024 Move X0, [X0+3112]
	025 Call 0x1C17CF4
	026 Move X0, 0x62C000
	027 Move X0, [X0+3120]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1948], W8
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+48], X31
	034 Call ReflectionUtils.GetCachedTypesPerAssembly
	035 Compare X0, 0
	036 JumpIfEqual {99}
	037 Move X8, 0x62C000
	038 Move X8, [X8+3120]
	039 Move X22, 0x62C000
	040 Move X21, 0x62C000
	041 Move X1, [X8]
	042 Move X22, [X22+3104]
	043 Move X21, [X21+3096]
	044 Add X8, X31, 8
	045 Call List`1<Object>.GetEnumerator, X0
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X8, [X31+24]
	048 Move [X31+2], V0
	049 Move [X31+48], X8
	050 Move X1, [X22]
	051 Add X0, X31, 32
	052 Call Enumerator<Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {81}
	057 Move X23, [X31+48]
	058 Compare X23, 0
	059 JumpIfEqual {98}
	060 Move X8, [X23+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X24, X31
	063 And X8, X8, 0
	064 Add X25, X23, 32
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare X19, 0
	067 JumpIfEqual {97}
	068 Move X20, [X25]
	069 Move X0, [X19+64]
	070 Move X8, [X19+24]
	071 Move X2, [X19+40]
	072 Move X1, X20
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {82}
	078 Move W8, [X23+24]
	079 Add X24, X24, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, X31
	082 Move X1, [X21]
	083 Add X0, X31, 32
	084 Call Enumerator<Object>.Dispose, X0
	085 Move X0, X20
	086 Move X20, [X31+112]
	087 Move X19, [X31+120]
	088 Move X22, [X31+96]
	089 Move X21, [X31+104]
	090 Move X24, [X31+80]
	091 Move X23, [X31+88]
	092 Move X30, [X31+64]
	093 Move X25, [X31+72]
	094 Add X31, X31, 128
	095 Return X0
	096 Call 0x1C17F28
	097 Call 0x1C17F20
	098 Call 0x1C17F20
	099 Call 0x1C17F20
	100 Move X19, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X19
	103 Call 0x3EB2AD0
	104 Move X20, [X0]
	105 Call 0x3EB2AE0
	106 Move X1, [X21]
	107 Add X0, X31, 32
	108 Call Enumerator<Object>.Dispose, X0
	109 Compare X20, 0
	110 JumpIfEqual {85}
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Move X20, X31
	114 Move X19, X0
	115 Move X1, [X21]
	116 Add X0, X31, 32
	117 Call Enumerator<Object>.Dispose, X0
	118 Compare X20, 0
	119 JumpIfNotEqual {122}
	120 Move X0, X19
	121 Call 0x1D2D690
	122 Move X0, X20
	123 Call 0x1C17F18
	124 Call 0x1991590

Method: System.Type FindTypeByFullName(System.String fullName)

Disassembly:
	0x03B2E580 BL 0x3EB1AF0
	0x03B2E584 LDR X8, [X19]
	0x03B2E588 STR X8, [X0]
	0x03B2E58C ADRP X1, 0x386000
	0x03B2E590 ADD X1, X1, 0xE58
	0x03B2E594 MOV X2, X31
	0x03B2E598 BL 0x3EB1B00
	0x03B2E59C MOV X19, X0
	0x03B2E5A0 BL 0x3EB1AE0
	0x03B2E5A4 MOV X0, X19
	0x03B2E5A8 BL 0x1D2C690
	0x03B2E5AC BL 0x1990590
	0x03B2E5B0 MOV X1, X31
	0x03B2E5B4 B 0x3C36D2C
	0x03B2E5B8 STP X30, X21, [X31 - 0x20]!
	0x03B2E5BC STP X20, X19, [X31 + 0x10]
	0x03B2E5C0 ADRP X19, 0x8B4000
	0x03B2E5C4 ADRP X20, 0x5CE000
	0x03B2E5C8 ADRP X21, 0x5EC000
	0x03B2E5CC LDRB W8, [X19 + 0x7A4]
	0x03B2E5D0 LDR X20, [X20 + 0x8D8]
	0x03B2E5D4 LDR X21, [X21 + 0x1D0]
	0x03B2E5D8 TBNZ X8, 0x0, 0x3B2E650
	0x03B2E5DC ADRP X0, 0x5CE000
	0x03B2E5E0 LDR X0, [X0 + 0x8D8]
	0x03B2E5E4 BL 0x1C16CF4
	0x03B2E5E8 ADRP X0, 0x5EC000
	0x03B2E5EC LDR X0, [X0 + 0x1D0]
	0x03B2E5F0 BL 0x1C16CF4
	0x03B2E5F4 ADRP X0, 0x5EF000
	0x03B2E5F8 LDR X0, [X0 + 0x1E0]
	0x03B2E5FC BL 0x1C16CF4
	0x03B2E600 ADRP X0, 0x5C5000
	0x03B2E604 LDR X0, [X0 + 0xAC8]
	0x03B2E608 BL 0x1C16CF4
	0x03B2E60C ADRP X0, 0x62B000
	0x03B2E610 LDR X0, [X0 + 0xE28]
	0x03B2E614 BL 0x1C16CF4
	0x03B2E618 ADRP X0, 0x62B000
	0x03B2E61C LDR X0, [X0 + 0xE30]
	0x03B2E620 BL 0x1C16CF4
	0x03B2E624 ADRP X0, 0x62B000
	0x03B2E628 LDR X0, [X0 + 0xE38]
	0x03B2E62C BL 0x1C16CF4
	0x03B2E630 ADRP X0, 0x62B000
	0x03B2E634 LDR X0, [X0 + 0xE40]
	0x03B2E638 BL 0x1C16CF4
	0x03B2E63C ADRP X0, 0x62B000
	0x03B2E640 LDR X0, [X0 + 0xE48]
	0x03B2E644 BL 0x1C16CF4
	0x03B2E648 MOVZ W8, 0x1
	0x03B2E64C STRB W8, [X19 + 0x7A4]
	0x03B2E650 LDR X0, [X20]
	0x03B2E654 MOVZ W1, 0x3
	0x03B2E658 BL 0x1C16D6C
	0x03B2E65C LDR X8, [X21]
	0x03B2E660 MOV X19, X0
	0x03B2E664 LDR W9, [X8 + 0xE0]
	0x03B2E668 CBNZ W9, 0x3B2E678
	0x03B2E66C MOV X0, X8
	0x03B2E670 BL 0x1C16DFC
	0x03B2E674 LDR X8, [X21]
	0x03B2E678 CBZ X19, 0x3B2E788
	0x03B2E67C LDR W9, [X19 + 0x18]
	0x03B2E680 CBZ W9, 0x3B2E784
	0x03B2E684 LDR X8, [X8 + 0xB8]
	0x03B2E688 CMP W9, 0x1
	0x03B2E68C LDRH W10, [X8 + 0xA]
	0x03B2E690 STRH W10, [X19 + 0x20]
	0x03B2E694 B.EQ 0x3B2E784
	0x03B2E698 LDRH W8, [X8 + 0x8]
	0x03B2E69C CMP W9, 0x2
	0x03B2E6A0 STRH W8, [X19 + 0x22]
	0x03B2E6A4 B.LS 0x3B2E784
	0x03B2E6A8 ADRP X21, 0x5EF000
	0x03B2E6AC LDR X21, [X21 + 0x1E0]
	0x03B2E6B0 MOVZ W8, 0x20
	0x03B2E6B4 STRH W8, [X19 + 0x24]
	0x03B2E6B8 MOVZ W1, 0x8
	0x03B2E6BC LDR X8, [X21]
	0x03B2E6C0 LDR X8, [X8 + 0xB8]
	0x03B2E6C4 STR X19, [X8]
	0x03B2E6C8 LDR X0, [X20]
	0x03B2E6CC ADRP X19, 0x62B000
	0x03B2E6D0 ADRP X20, 0x5C5000
	0x03B2E6D4 LDR X19, [X19 + 0xE28]
	0x03B2E6D8 LDR X20, [X20 + 0xAC8]
	0x03B2E6DC BL 0x1C16D6C
	0x03B2E6E0 LDR X1, [X19]
	0x03B2E6E4 MOV X2, X31
	0x03B2E6E8 MOV X19, X0
	0x03B2E6EC BL 0x32C5BD8
	0x03B2E6F0 LDR X8, [X21]
	0x03B2E6F4 MOVZ W1, 0x4
	0x03B2E6F8 LDR X8, [X8 + 0xB8]
	0x03B2E6FC STR X19, [X8 + 0x8]
	0x03B2E700 LDR X0, [X20]
	0x03B2E704 BL 0x1C16D6C
	0x03B2E708 CBZ X0, 0x3B2E788

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x8B5000
	008 Move W8, [X20+1949]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x5F6000
	015 Move X0, [X0+1104]
	016 Call 0x1C17CF4
	017 Move X0, 0x62C000
	018 Move X0, [X0+3496]
	019 Call 0x1C17CF4
	020 Move X0, 0x62C000
	021 Move X0, [X0+3504]
	022 Call 0x1C17CF4
	023 Move X0, 0x62C000
	024 Move X0, [X0+3512]
	025 Call 0x1C17CF4
	026 Move X0, 0x62C000
	027 Move X0, [X0+3520]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1949], W8
	031 Move [X31+8], X31
	032 Move [X31+16], X31
	033 Move [X31+24], X31
	034 Move [X31+40], X31
	035 Call ReflectionUtils.GetCachedAssemblyTypeMaps
	036 Compare X0, 0
	037 JumpIfEqual {81}
	038 Move X8, 0x62C000
	039 Move X8, [X8+3520]
	040 Move X21, 0x62C000
	041 Move X22, 0x5F6000
	042 Move X20, 0x62C000
	043 Move X1, [X8]
	044 Move X21, [X21+3504]
	045 Move X22, [X22+1104]
	046 Move X20, [X20+3496]
	047 Add X8, X31, 8
	048 Call List`1<Object>.GetEnumerator, X0
	049 Move X1, [X21]
	050 Add X0, X31, 8
	051 Call Enumerator<Object>.MoveNext, X0
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {68}
	056 Move X0, [X31+24]
	057 Compare X0, 0
	058 JumpIfEqual {80}
	059 Move X3, [X22]
	060 Add X2, X31, 40
	061 Move X1, X19
	062 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {49}
	067 Move X19, [X31+40]
	068 Move X19, X31
	069 Move X1, [X20]
	070 Add X0, X31, 8
	071 Call Enumerator<Object>.Dispose, X0
	072 Move X0, X19
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X30, [X31+32]
	078 Add X31, X31, 80
	079 Return X0
	080 Call 0x1C17F20
	081 Call 0x1C17F20
	082 Move X19, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, X19
	085 Call 0x3EB2AD0
	086 Move X20, [X0]
	087 Call 0x3EB2AE0
	088 Move X8, 0x62C000
	089 Move X8, [X8+3496]
	090 Add X0, X31, 8
	091 Move X1, [X8]
	092 Call Enumerator<Object>.Dispose, X0
	093 Compare X20, 0
	094 JumpIfNotEqual {97}
	095 Move X19, X31
	096 Move X20, X31
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Move X19, X0
	100 Move X8, 0x62C000
	101 Move X8, [X8+3496]
	102 Move X1, [X8]
	103 Add X0, X31, 8
	104 Call Enumerator<Object>.Dispose, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void FindTypesBatch(System.Collections.Generic.List`1<System.Func`2<System.Type, System.Boolean>> predicates, System.Collections.Generic.List`1<System.Type> resultList)

Disassembly:
	0x03B2E70C LDR W8, [X0 + 0x18]
	0x03B2E710 CBZ W8, 0x3B2E784
	0x03B2E714 ADRP X9, 0x62B000
	0x03B2E718 LDR X9, [X9 + 0xE30]
	0x03B2E71C CMP W8, 0x1
	0x03B2E720 LDR X9, [X9]
	0x03B2E724 STR X9, [X0 + 0x20]
	0x03B2E728 B.EQ 0x3B2E784
	0x03B2E72C ADRP X9, 0x62B000
	0x03B2E730 LDR X9, [X9 + 0xE38]
	0x03B2E734 CMP W8, 0x2
	0x03B2E738 LDR X9, [X9]
	0x03B2E73C STR X9, [X0 + 0x28]
	0x03B2E740 B.LS 0x3B2E784
	0x03B2E744 ADRP X9, 0x62B000
	0x03B2E748 LDR X9, [X9 + 0xE40]
	0x03B2E74C CMP W8, 0x3
	0x03B2E750 LDR X9, [X9]
	0x03B2E754 STR X9, [X0 + 0x30]
	0x03B2E758 B.EQ 0x3B2E784
	0x03B2E75C ADRP X8, 0x62B000
	0x03B2E760 LDR X8, [X8 + 0xE48]
	0x03B2E764 LDP X20, X19, [X31 + 0x10]
	0x03B2E768 LDR X8, [X8]
	0x03B2E76C STR X8, [X0 + 0x38]
	0x03B2E770 LDR X8, [X21]
	0x03B2E774 LDR X8, [X8 + 0xB8]
	0x03B2E778 STR X0, [X8 + 0x10]
	0x03B2E77C LDP X30, X21, [X31], #0x20
	0x03B2E780 RET
	0x03B2E784 BL 0x1C16F28
	0x03B2E788 BL 0x1C16F20
	0x03B2E78C STR X30, [X31 - 0x20]!
	0x03B2E790 STP X20, X19, [X31 + 0x10]
	0x03B2E794 ADRP X20, 0x8B4000
	0x03B2E798 ADRP X19, 0x62B000
	0x03B2E79C LDRB W8, [X20 + 0x7A5]
	0x03B2E7A0 LDR X19, [X19 + 0xE50]
	0x03B2E7A4 TBNZ X8, 0x0, 0x3B2E7BC
	0x03B2E7A8 ADRP X0, 0x62B000
	0x03B2E7AC LDR X0, [X0 + 0xE50]
	0x03B2E7B0 BL 0x1C16CF4
	0x03B2E7B4 MOVZ W8, 0x1
	0x03B2E7B8 STRB W8, [X20 + 0x7A5]
	0x03B2E7BC LDR X0, [X19]
	0x03B2E7C0 LDR W8, [X0 + 0xE0]
	0x03B2E7C4 CBNZ W8, 0x3B2E7D0
	0x03B2E7C8 BL 0x1C16DFC
	0x03B2E7CC LDR X0, [X19]
	0x03B2E7D0 LDR X8, [X0 + 0xB8]
	0x03B2E7D4 LDP X20, X19, [X31 + 0x10]
	0x03B2E7D8 LDP X0, X1, [X8]
	0x03B2E7DC LDR X30, [X31], #0x20
	0x03B2E7E0 RET
	0x03B2E7E4 LDP X8, X1, [X0]
	0x03B2E7E8 MOV X0, X8
	0x03B2E7EC B 0x3B2C0F4
	0x03B2E7F0 STP X1, X2, [X0]
	0x03B2E7F4 RET
	0x03B2E7F8 STR X30, [X31 - 0x20]!
	0x03B2E7FC STP X20, X19, [X31 + 0x10]
	0x03B2E800 MOV X1, X31
	0x03B2E804 MOV X19, X0
	0x03B2E808 BL 0x339A95C
	0x03B2E80C MOV W20, W0
	0x03B2E810 ADD X0, X19, 0x8
	0x03B2E814 MOV X1, X31
	0x03B2E818 BL 0x339A95C
	0x03B2E81C MOVZ W8, 0xA2DB
	0x03B2E820 MOVK W8, 0x1CFA0000
	0x03B2E824 MADD W0, W20, W8, W0
	0x03B2E828 LDP X20, X19, [X31 + 0x10]
	0x03B2E82C LDR X30, [X31], #0x20
	0x03B2E830 RET
	0x03B2E834 STP X30, X21, [X31 - 0x20]!
	0x03B2E838 STP X20, X19, [X31 + 0x10]
	0x03B2E83C ADRP X21, 0x8B4000
	0x03B2E840 LDRB W8, [X21 + 0x7A6]
	0x03B2E844 MOV X20, X1
	0x03B2E848 MOV X19, X0
	0x03B2E84C TBNZ X8, 0x0, 0x3B2E864
	0x03B2E850 ADRP X0, 0x62B000
	0x03B2E854 LDR X0, [X0 + 0xE50]
	0x03B2E858 BL 0x1C16CF4
	0x03B2E85C MOVZ W8, 0x1
	0x03B2E860 STRB W8, [X21 + 0x7A6]
	0x03B2E864 CBZ X20, 0x3B2E8BC
	0x03B2E868 ADRP X21, 0x62B000
	0x03B2E86C LDR X21, [X21 + 0xE50]
	0x03B2E870 LDR X9, [X20]
	0x03B2E874 LDR X8, [X21]
	0x03B2E878 CMP X9, X8
	0x03B2E87C B.NE 0x3B2E8BC
	0x03B2E880 MOV X0, X20
	0x03B2E884 BL 0x1C16E08
	0x03B2E888 MOV X8, X0
	0x03B2E88C LDR X0, [X21]
	0x03B2E890 LDP X21, X20, [X8]
	0x03B2E894 LDR W9, [X0 + 0xE0]
	0x03B2E898 CBNZ W9, 0x3B2E8A0
	0x03B2E89C BL 0x1C16DFC
	0x03B2E8A0 LDR X8, [X19]
	0x03B2E8A4 CMP X8, X21
	0x03B2E8A8 B.NE 0x3B2E8BC
	0x03B2E8AC LDR X8, [X19 + 0x8]
	0x03B2E8B0 CMP X8, X20
	0x03B2E8B4 CSET W0, EQ
	0x03B2E8B8 B 0x3B2E8C0
	0x03B2E8BC MOV W0, W31
	0x03B2E8C0 LDP X20, X19, [X31 + 0x10]
	0x03B2E8C4 LDP X30, X21, [X31], #0x20
	0x03B2E8C8 RET
	0x03B2E8CC LDR X8, [X0]
	0x03B2E8D0 CMP X8, X1
	0x03B2E8D4 B.NE 0x3B2E8E8
	0x03B2E8D8 LDR X8, [X0 + 0x8]
	0x03B2E8DC CMP X8, X2
	0x03B2E8E0 CSET W0, EQ
	0x03B2E8E4 RET
	0x03B2E8E8 MOV W0, W31
	0x03B2E8EC RET
	0x03B2E8F0 SUB X31, X31, 0x30
	0x03B2E8F4 STP X30, X21, [X31 + 0x10]
	0x03B2E8F8 STP X20, X19, [X31 + 0x20]
	0x03B2E8FC ADRP X20, 0x8B4000
	0x03B2E900 ADRP X21, 0x62B000
	0x03B2E904 LDRB W8, [X20 + 0x7A7]
	0x03B2E908 LDR X21, [X21 + 0xE50]
	0x03B2E90C MOV X19, X0
	0x03B2E910 TBNZ X8, 0x0, 0x3B2E928
	0x03B2E914 ADRP X0, 0x62B000
	0x03B2E918 LDR X0, [X0 + 0xE50]
	0x03B2E91C BL 0x1C16CF4
	0x03B2E920 MOVZ W8, 0x1
	0x03B2E924 STRB W8, [X20 + 0x7A7]
	0x03B2E928 LDR X0, [X21]
	0x03B2E92C LDR W8, [X0 + 0xE0]
	0x03B2E930 CBNZ W8, 0x3B2E938
	0x03B2E934 BL 0x1C16DFC
	0x03B2E938 LDP X0, X1, [X19]
	0x03B2E93C BL 0x3B2C0F4
	0x03B2E940 STP X0, X1, [X31]
	0x03B2E944 ADD X0, X31, 0x0
	0x03B2E948 MOV X1, X31
	0x03B2E94C BL 0x337866C
	0x03B2E950 LDP X20, X19, [X31 + 0x20]
	0x03B2E954 LDP X30, X21, [X31 + 0x10]
	0x03B2E958 ADD X31, X31, 0x30
	0x03B2E95C RET
	0x03B2E960 SUB X31, X31, 0x40
	0x03B2E964 STR X30, [X31 + 0x10]
	0x03B2E968 STP X22, X21, [X31 + 0x20]
	0x03B2E96C STP X20, X19, [X31 + 0x30]
	0x03B2E970 ADRP X21, 0x8B4000
	0x03B2E974 ADRP X22, 0x62B000
	0x03B2E978 LDRB W8, [X21 + 0x7A8]
	0x03B2E97C LDR X22, [X22 + 0xE50]
	0x03B2E980 MOV X19, X1
	0x03B2E984 MOV X20, X0
	0x03B2E988 TBNZ X8, 0x0, 0x3B2E9A0
	0x03B2E98C ADRP X0, 0x62B000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X21, 0x8B5000
	015 Move W8, [X21+1950]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {45}
	022 Move X0, 0x62C000
	023 Move X0, [X0+3096]
	024 Call 0x1C17CF4
	025 Move X0, 0x62C000
	026 Move X0, [X0+3104]
	027 Call 0x1C17CF4
	028 Move X0, 0x62C000
	029 Move X0, [X0+3112]
	030 Call 0x1C17CF4
	031 Move X0, 0x62C000
	032 Move X0, [X0+3120]
	033 Call 0x1C17CF4
	034 Move X0, 0x62C000
	035 Move X0, [X0+3528]
	036 Call 0x1C17CF4
	037 Move X0, 0x62C000
	038 Move X0, [X0+3536]
	039 Call 0x1C17CF4
	040 Move X0, 0x62C000
	041 Move X0, [X0+3544]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+1950], W8
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Call ReflectionUtils.GetCachedTypesPerAssembly
	049 Compare X20, 0
	050 JumpIfEqual {157}
	051 Move W8, [X20+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X28, 0x62C000
	054 Move X29, 0x62C000
	055 Move X28, [X28+3104]
	056 Move X29, [X29+3544]
	057 Move X21, X0
	058 Move W22, W31
	059 Move X8, 0x62C000
	060 Move X8, [X8+3536]
	061 Move X0, X20
	062 Move W1, W22
	063 Move X2, [X8]
	064 Call List`1<Object>.get_Item, X0, X1
	065 Compare X21, 0
	066 JumpIfEqual {157}
	067 Move X8, 0x62C000
	068 Move X8, [X8+3120]
	069 Move X23, X0
	070 Move X0, X21
	071 Move X1, [X8]
	072 Add X8, X31, 8
	073 Call List`1<Object>.GetEnumerator, X0
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move X8, [X31+24]
	076 Move [X31+2], V0
	077 Move [X31+48], X8
	078 Move X1, [X28]
	079 Add X0, X31, 32
	080 Call Enumerator<Object>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {116}
	085 Move X25, [X31+48]
	086 Compare X25, 0
	087 JumpIfEqual {127}
	088 Move X8, [X25+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X26, X31
	091 And X8, X8, 0
	092 Add X27, X25, 32
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Compare X23, 0
	095 JumpIfEqual {124}
	096 Move X24, [X27]
	097 Move X0, [X23+64]
	098 Move X8, [X23+24]
	099 Move X2, [X23+40]
	100 Move X1, X24
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {113}
	106 Compare X19, 0
	107 JumpIfEqual {126}
	108 Move X3, [X29]
	109 Move X0, X19
	110 Move W1, W22
	111 Move X2, X24
	112 Call List`1<Object>.set_Item, X0, X1, X2
	113 Move W8, [X25+24]
	114 Add X26, X26, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, 0x62C000
	117 Move X8, [X8+3096]
	118 Add X0, X31, 32
	119 Move X1, [X8]
	120 Call Enumerator<Object>.Dispose, X0
	121 Move W8, [X20+24]
	122 Add W22, W22, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Call 0x1C17F20
	125 Call 0x1C17F28
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Move X23, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X23
	131 Call 0x3EB2AD0
	132 Move X24, [X0]
	133 Call 0x3EB2AE0
	134 Move X8, 0x62C000
	135 Move X8, [X8+3096]
	136 Add X0, X31, 32
	137 Move X1, [X8]
	138 Call Enumerator<Object>.Dispose, X0
	139 Compare X24, 0
	140 JumpIfEqual {121}
	141 Move X0, X24
	142 Call 0x1C17F18
	143 Move X20, [X31+144]
	144 Move X19, [X31+152]
	145 Move X22, [X31+128]
	146 Move X21, [X31+136]
	147 Move X24, [X31+112]
	148 Move X23, [X31+120]
	149 Move X26, [X31+96]
	150 Move X25, [X31+104]
	151 Move X28, [X31+80]
	152 Move X27, [X31+88]
	153 Move X29, [X31+64]
	154 Move X30, [X31+72]
	155 Add X31, X31, 160
	156 Return 
	157 Call 0x1C17F20
	158 Move X24, X31
	159 Move X23, X0
	160 Move X8, 0x62C000
	161 Move X8, [X8+3096]
	162 Move X1, [X8]
	163 Add X0, X31, 32
	164 Call Enumerator<Object>.Dispose, X0
	165 Compare X24, 0
	166 JumpIfNotEqual {169}
	167 Move X0, X23
	168 Call 0x1D2D690
	169 Move X0, X24
	170 Call 0x1C17F18
	171 Call 0x1991590

Method: System.Void FindTypesByFullNameBatch(System.Collections.Generic.List`1<System.String> typeNames, System.Collections.Generic.List`1<System.Type> resultList)

Disassembly:
	0x03B2E990 LDR X0, [X0 + 0xE50]
	0x03B2E994 BL 0x1C16CF4
	0x03B2E998 MOVZ W8, 0x1
	0x03B2E99C STRB W8, [X21 + 0x7A8]
	0x03B2E9A0 LDR X0, [X22]
	0x03B2E9A4 LDR W8, [X0 + 0xE0]
	0x03B2E9A8 CBNZ W8, 0x3B2E9B0
	0x03B2E9AC BL 0x1C16DFC
	0x03B2E9B0 LDP X0, X1, [X20]
	0x03B2E9B4 BL 0x3B2C0F4
	0x03B2E9B8 STP X0, X1, [X31]
	0x03B2E9BC ADD X0, X31, 0x0
	0x03B2E9C0 MOV X1, X19
	0x03B2E9C4 MOV X2, X31
	0x03B2E9C8 BL 0x3378CA4
	0x03B2E9CC LDP X20, X19, [X31 + 0x30]
	0x03B2E9D0 LDP X22, X21, [X31 + 0x20]
	0x03B2E9D4 LDR X30, [X31 + 0x10]
	0x03B2E9D8 ADD X31, X31, 0x40
	0x03B2E9DC RET
	0x03B2E9E0 SUB X31, X31, 0x40
	0x03B2E9E4 STP X30, X23, [X31 + 0x10]
	0x03B2E9E8 STP X22, X21, [X31 + 0x20]
	0x03B2E9EC STP X20, X19, [X31 + 0x30]
	0x03B2E9F0 ADRP X22, 0x8B4000
	0x03B2E9F4 ADRP X23, 0x62B000
	0x03B2E9F8 LDRB W8, [X22 + 0x7A9]
	0x03B2E9FC LDR X23, [X23 + 0xE50]
	0x03B2EA00 MOV X19, X2
	0x03B2EA04 MOV X20, X1
	0x03B2EA08 MOV X21, X0
	0x03B2EA0C TBNZ X8, 0x0, 0x3B2EA24
	0x03B2EA10 ADRP X0, 0x62B000
	0x03B2EA14 LDR X0, [X0 + 0xE50]
	0x03B2EA18 BL 0x1C16CF4
	0x03B2EA1C MOVZ W8, 0x1
	0x03B2EA20 STRB W8, [X22 + 0x7A9]
	0x03B2EA24 LDR X0, [X23]
	0x03B2EA28 LDR W8, [X0 + 0xE0]
	0x03B2EA2C CBNZ W8, 0x3B2EA34
	0x03B2EA30 BL 0x1C16DFC
	0x03B2EA34 LDP X0, X1, [X21]
	0x03B2EA38 BL 0x3B2C0F4
	0x03B2EA3C STP X0, X1, [X31]
	0x03B2EA40 ADD X0, X31, 0x0
	0x03B2EA44 MOV X1, X20
	0x03B2EA48 MOV X2, X19
	0x03B2EA4C MOV X3, X31
	0x03B2EA50 BL 0x33786B4
	0x03B2EA54 LDP X20, X19, [X31 + 0x30]
	0x03B2EA58 LDP X22, X21, [X31 + 0x20]
	0x03B2EA5C LDP X30, X23, [X31 + 0x10]
	0x03B2EA60 ADD X31, X31, 0x40
	0x03B2EA64 RET
	0x03B2EA68 STR X30, [X31 - 0x40]!
	0x03B2EA6C STP X24, X23, [X31 + 0x10]
	0x03B2EA70 STP X22, X21, [X31 + 0x20]
	0x03B2EA74 STP X20, X19, [X31 + 0x30]
	0x03B2EA78 ADRP X23, 0x8B4000
	0x03B2EA7C ADRP X24, 0x62B000
	0x03B2EA80 LDRB W8, [X23 + 0x7AA]
	0x03B2EA84 LDR X24, [X24 + 0xE50]
	0x03B2EA88 MOV X19, X3
	0x03B2EA8C MOV X21, X2
	0x03B2EA90 MOV X20, X1
	0x03B2EA94 MOV X22, X0
	0x03B2EA98 TBNZ X8, 0x0, 0x3B2EAB0
	0x03B2EA9C ADRP X0, 0x62B000
	0x03B2EAA0 LDR X0, [X0 + 0xE50]
	0x03B2EAA4 BL 0x1C16CF4
	0x03B2EAA8 MOVZ W8, 0x1
	0x03B2EAAC STRB W8, [X23 + 0x7AA]
	0x03B2EAB0 LDR X0, [X24]
	0x03B2EAB4 LDR W8, [X0 + 0xE0]
	0x03B2EAB8 CBNZ W8, 0x3B2EAC0
	0x03B2EABC BL 0x1C16DFC
	0x03B2EAC0 CMP X22, X21
	0x03B2EAC4 CSET W8, EQ
	0x03B2EAC8 CMP X20, X19
	0x03B2EACC LDP X20, X19, [X31 + 0x30]
	0x03B2EAD0 LDP X22, X21, [X31 + 0x20]
	0x03B2EAD4 LDP X24, X23, [X31 + 0x10]
	0x03B2EAD8 CSET W9, EQ
	0x03B2EADC AND W0, W8, W9, 0x0
	0x03B2EAE0 LDR X30, [X31], #0x40
	0x03B2EAE4 RET
	0x03B2EAE8 STR X30, [X31 - 0x40]!
	0x03B2EAEC STP X24, X23, [X31 + 0x10]
	0x03B2EAF0 STP X22, X21, [X31 + 0x20]
	0x03B2EAF4 STP X20, X19, [X31 + 0x30]
	0x03B2EAF8 ADRP X23, 0x8B4000
	0x03B2EAFC ADRP X24, 0x62B000
	0x03B2EB00 LDRB W8, [X23 + 0x7AB]
	0x03B2EB04 LDR X24, [X24 + 0xE50]
	0x03B2EB08 MOV X19, X3
	0x03B2EB0C MOV X21, X2
	0x03B2EB10 MOV X20, X1
	0x03B2EB14 MOV X22, X0
	0x03B2EB18 TBNZ X8, 0x0, 0x3B2EB30
	0x03B2EB1C ADRP X0, 0x62B000
	0x03B2EB20 LDR X0, [X0 + 0xE50]
	0x03B2EB24 BL 0x1C16CF4
	0x03B2EB28 MOVZ W8, 0x1
	0x03B2EB2C STRB W8, [X23 + 0x7AB]
	0x03B2EB30 LDR X0, [X24]
	0x03B2EB34 LDR W8, [X0 + 0xE0]
	0x03B2EB38 CBNZ W8, 0x3B2EB40
	0x03B2EB3C BL 0x1C16DFC
	0x03B2EB40 CMP X22, X21
	0x03B2EB44 CSET W8, NE
	0x03B2EB48 CMP X20, X19
	0x03B2EB4C LDP X20, X19, [X31 + 0x30]
	0x03B2EB50 LDP X22, X21, [X31 + 0x20]
	0x03B2EB54 LDP X24, X23, [X31 + 0x10]
	0x03B2EB58 CSET W9, NE
	0x03B2EB5C ORR W0, W8, W9, 0x0
	0x03B2EB60 LDR X30, [X31], #0x40
	0x03B2EB64 RET
	0x03B2EB68 STR X30, [X31 - 0x20]!
	0x03B2EB6C STP X20, X19, [X31 + 0x10]
	0x03B2EB70 ADRP X19, 0x8B4000
	0x03B2EB74 ADRP X20, 0x62B000
	0x03B2EB78 LDRB W8, [X19 + 0x7AC]
	0x03B2EB7C LDR X20, [X20 + 0xE50]
	0x03B2EB80 TBNZ X8, 0x0, 0x3B2EB98
	0x03B2EB84 ADRP X0, 0x62B000
	0x03B2EB88 LDR X0, [X0 + 0xE50]
	0x03B2EB8C BL 0x1C16CF4
	0x03B2EB90 MOVZ W8, 0x1
	0x03B2EB94 STRB W8, [X19 + 0x7AC]
	0x03B2EB98 LDR X8, [X20]
	0x03B2EB9C LDP X20, X19, [X31 + 0x10]
	0x03B2EBA0 LDR X8, [X8 + 0xB8]
	0x03B2EBA4 STP X31, X31, [X8]
	0x03B2EBA8 LDR X30, [X31], #0x20
	0x03B2EBAC RET
	0x03B2EBB0 SUB X31, X31, 0x20
	0x03B2EBB4 STP X30, X31, [X31 + 0x10]
	0x03B2EBB8 ADD X2, X31, 0x18
	0x03B2EBBC ADD X3, X31, 0x8
	0x03B2EBC0 STR X31, [X31 + 0x8]
	0x03B2EBC4 BL 0x3B23EF0
	0x03B2EBC8 LDP X30, X0, [X31 + 0x10]
	0x03B2EBCC LDR X1, [X31 + 0x8]
	0x03B2EBD0 ADD X31, X31, 0x20
	0x03B2EBD4 RET
	0x03B2EBD8 STR X30, [X31 - 0x20]!
	0x03B2EBDC STP X20, X19, [X31 + 0x10]
	0x03B2EBE0 MOV X19, X1
	0x03B2EBE4 MOV X1, X31
	0x03B2EBE8 BL 0x3C2085C
	0x03B2EBEC CBZ X19, 0x3B2EC4C
	0x03B2EBF0 LDR X8, [X19]
	0x03B2EBF4 MOV X0, X19
	0x03B2EBF8 LDP X9, X1, [X8 + 0x188]
	0x03B2EBFC BLR X9
	0x03B2EC00 LDR X8, [X19]
	0x03B2EC04 MOV W20, W0
	0x03B2EC08 MOV X0, X19
	0x03B2EC0C LDP X9, X1, [X8 + 0x1A8]
	0x03B2EC10 BLR X9
	0x03B2EC14 SCVTF S2, W20
	0x03B2EC18 SCVTF S3, W0
	0x03B2EC1C FMOV S0, W31
	0x03B2EC20 FMOV S1, W31
	0x03B2EC24 MOV X0, X19
	0x03B2EC28 MOV W1, W31
	0x03B2EC2C MOV W2, W31
	0x03B2EC30 MOV X3, X31
	0x03B2EC34 BL 0x3C1C754
	0x03B2EC38 MOV X0, X19
	0x03B2EC3C LDP X20, X19, [X31 + 0x10]
	0x03B2EC40 MOV X1, X31
	0x03B2EC44 LDR X30, [X31], #0x20
	0x03B2EC48 B 0x3C1C540
	0x03B2EC4C BL 0x1C16F20
	0x03B2EC50 STP X30, X19, [X31 - 0x10]!
	0x03B2EC54 MOV X1, X31
	0x03B2EC58 MOV X19, X0
	0x03B2EC5C BL 0x33BDD8C
	0x03B2EC60 MOVN W8, 0x0
	0x03B2EC64 STR W8, [X19 + 0x10]
	0x03B2EC68 LDP X30, X19, [X31], #0x10
	0x03B2EC6C RET
	0x03B2EC70 RET
	0x03B2EC74 RET
	0x03B2EC78 CBZ X1, 0x3B2EC8C
	0x03B2EC7C MOV X0, X1
	0x03B2EC80 MOV X1, X2
	0x03B2EC84 MOV X2, X31
	0x03B2EC88 B 0x3C3FD20
	0x03B2EC8C STR X30, [X31 - 0x10]!
	0x03B2EC90 BL 0x1C16F20
	0x03B2EC94 LDRB W8, [X0 + 0x14]
	0x03B2EC98 CBZ W8, 0x3B2ECA0
	0x03B2EC9C RET
	0x03B2ECA0 MOVZ W8, 0x1
	0x03B2ECA4 STRB W8, [X0 + 0x14]
	0x03B2ECA8 RET
	0x03B2ECAC LDR X8, [X0]
	0x03B2ECB0 MOVZ W1, 0x1
	0x03B2ECB4 LDP X3, X2, [X8 + 0x188]
	0x03B2ECB8 BR X3
	0x03B2ECBC STP X30, X21, [X31 - 0x20]!
	0x03B2ECC0 STP X20, X19, [X31 + 0x10]
	0x03B2ECC4 ADRP X20, 0x8B4000
	0x03B2ECC8 ADRP X21, 0x5C5000
	0x03B2ECCC LDRB W8, [X20 + 0x7AD]
	0x03B2ECD0 LDR X21, [X21 + 0x970]
	0x03B2ECD4 MOV X19, X0
	0x03B2ECD8 TBNZ X8, 0x0, 0x3B2ECFC
	0x03B2ECDC ADRP X0, 0x5C5000
	0x03B2ECE0 LDR X0, [X0 + 0x970]
	0x03B2ECE4 BL 0x1C16CF4
	0x03B2ECE8 ADRP X0, 0x5C5000
	0x03B2ECEC LDR X0, [X0 + 0x598]
	0x03B2ECF0 BL 0x1C16CF4
	0x03B2ECF4 MOVZ W8, 0x1
	0x03B2ECF8 STRB W8, [X20 + 0x7AD]
	0x03B2ECFC LDR X0, [X21]
	0x03B2ED00 LDR W8, [X0 + 0xE0]
	0x03B2ED04 CBNZ W8, 0x3B2ED0C
	0x03B2ED08 BL 0x1C16DFC
	0x03B2ED0C MOV X0, X31
	0x03B2ED10 BL 0x3C018E4
	0x03B2ED14 TBZ X0, 0x0, 0x3B2ED44
	0x03B2ED18 ADRP X8, 0x5C5000
	0x03B2ED1C LDR X8, [X8 + 0x598]
	0x03B2ED20 LDR X0, [X8]
	0x03B2ED24 LDR W8, [X0 + 0xE0]
	0x03B2ED28 CBNZ W8, 0x3B2ED30
	0x03B2ED2C BL 0x1C16DFC
	0x03B2ED30 MOV X0, X19
	0x03B2ED34 LDP X20, X19, [X31 + 0x10]
	0x03B2ED38 MOV X1, X31
	0x03B2ED3C LDP X30, X21, [X31], #0x20
	0x03B2ED40 B 0x3C394A8
	0x03B2ED44 LDP X20, X19, [X31 + 0x10]
	0x03B2ED48 LDP X30, X21, [X31], #0x20
	0x03B2ED4C RET
	0x03B2ED50 STR X30, [X31 - 0x30]!
	0x03B2ED54 STP X22, X21, [X31 + 0x10]
	0x03B2ED58 STP X20, X19, [X31 + 0x20]
	0x03B2ED5C ADRP X22, 0x8B4000

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x8B5000
	015 Move W8, [X20+1951]
	016 Move X19, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {54}
	022 Move X0, 0x5F6000
	023 Move X0, [X0+1104]
	024 Call 0x1C17CF4
	025 Move X0, 0x5ED000
	026 Move X0, [X0+4040]
	027 Call 0x1C17CF4
	028 Move X0, 0x62C000
	029 Move X0, [X0+3496]
	030 Call 0x1C17CF4
	031 Move X0, 0x62C000
	032 Move X0, [X0+3504]
	033 Call 0x1C17CF4
	034 Move X0, 0x5ED000
	035 Move X0, [X0+4048]
	036 Call 0x1C17CF4
	037 Move X0, 0x5ED000
	038 Move X0, [X0+4056]
	039 Call 0x1C17CF4
	040 Move X0, 0x62C000
	041 Move X0, [X0+3512]
	042 Call 0x1C17CF4
	043 Move X0, 0x5D0000
	044 Move X0, [X0+2360]
	045 Call 0x1C17CF4
	046 Move X0, 0x5ED000
	047 Move X0, [X0+4064]
	048 Call 0x1C17CF4
	049 Move X0, 0x62C000
	050 Move X0, [X0+3520]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+1951], W8
	054 Move [X31+64], X31
	055 Move [X31+72], X31
	056 Move [X31+80], X31
	057 Move [X31+32], X31
	058 Move [X31+40], X31
	059 Move [X31+48], X31
	060 Move [X31+24], X31
	061 Call ReflectionUtils.GetCachedAssemblyTypeMaps
	062 Compare X21, 0
	063 JumpIfEqual {231}
	064 Move X8, 0x5ED000
	065 Move X8, [X8+4064]
	066 Move X24, 0x5ED000
	067 Move X25, 0x62C000
	068 Move X26, 0x62C000
	069 Move X27, 0x5F6000
	070 Move X24, [X24+4048]
	071 Move X25, [X25+3520]
	072 Move X26, [X26+3504]
	073 Move X27, [X27+1104]
	074 Move X1, [X8]
	075 Move X28, 0x5D0000
	076 Move X23, 0x62C000
	077 Move X28, [X28+2360]
	078 Move X23, [X23+3496]
	079 Move X20, X0
	080 Add X8, X31, 0
	081 Move X0, X21
	082 Call List`1<Object>.GetEnumerator, X0
	083 Move V0, [X31]
	084 Move X8, [X31+16]
	085 Move [X31+4], V0
	086 Move [X31+80], X8
	087 Move X1, [X24]
	088 Add X0, X31, 64
	089 Call Enumerator<Object>.MoveNext, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {195}
	094 Compare X20, 0
	095 JumpIfEqual {228}
	096 Move X21, [X31+80]
	097 Move X1, [X25]
	098 Add X8, X31, 0
	099 Move X0, X20
	100 Call List`1<Object>.GetEnumerator, X0
	101 Move V0, [X31]
	102 Move X8, [X31+16]
	103 Move [X31+2], V0
	104 Move [X31+48], X8
	105 Move X1, [X26]
	106 Add X0, X31, 32
	107 Call Enumerator<Object>.MoveNext, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {142}
	112 Move X0, [X31+48]
	113 Compare X0, 0
	114 JumpIfEqual {186}
	115 Move X3, [X27]
	116 Add X2, X31, 24
	117 Move X1, X21
	118 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {105}
	123 Compare X19, 0
	124 JumpIfEqual {187}
	125 Move W10, [X19+28]
	126 Move X1, [X31+24]
	127 Move X8, [X19+16]
	128 Move X9, [X28]
	129 Add W10, W10, 1
	130 Move [X19+28], W10
	131 Compare X8, 0
	132 JumpIfEqual {188}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W11, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add W9, W10, 1
	137 Add X8, X8, X10
	138 Move X21, X31
	139 Move W29, 1
	140 Move [X19+24], W9
	141 Move [X8+32], X1
	142 Move X21, X31
	143 Move W29, W31
	144 Move X8, [X9+32]
	145 Move X8, [X8+192]
	146 Move X2, [X8+112]
	147 Move X0, X19
	148 Call List`1<Object>.AddWithResize, X0, X1
	149 Move X21, X31
	150 Move W29, 1
	151 Move W22, 6
	152 Move X1, [X23]
	153 Add X0, X31, 32
	154 Call Enumerator<Object>.Dispose, X0
	155 Compare X21, 0
	156 JumpIfNotEqual {226}
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Compare W22, 0
	159 JumpIfNotEqual {195}
	160 Move TEMP, X29
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {87}
	164 Compare X19, 0
	165 JumpIfEqual {229}
	166 Move W10, [X19+28]
	167 Move X8, [X19+16]
	168 Move X9, [X28]
	169 Add W10, W10, 1
	170 Move [X19+28], W10
	171 Compare X8, 0
	172 JumpIfEqual {230}
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Move W11, [X8+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Add W9, W10, 1
	177 Add X8, X8, X10
	178 Move [X19+24], W9
	179 Move [X8+32], X31
	180 Move X8, [X9+32]
	181 Move X8, [X8+192]
	182 Move X2, [X8+112]
	183 Move X0, X19
	184 Move X1, X31
	185 Call List`1<Object>.AddWithResize, X0, X1
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Call 0x3EB2AD0
	191 Move X21, [X0]
	192 Call 0x3EB2AE0
	193 Move W22, W31
	194 Move W29, W31
	195 Move X8, 0x5ED000
	196 Move X8, [X8+4040]
	197 Add X0, X31, 64
	198 Move X1, [X8]
	199 Call Enumerator<Object>.Dispose, X0
	200 Move X20, [X31+176]
	201 Move X19, [X31+184]
	202 Move X22, [X31+160]
	203 Move X21, [X31+168]
	204 Move X24, [X31+144]
	205 Move X23, [X31+152]
	206 Move X26, [X31+128]
	207 Move X25, [X31+136]
	208 Move X28, [X31+112]
	209 Move X27, [X31+120]
	210 Move X29, [X31+96]
	211 Move X30, [X31+104]
	212 Add X31, X31, 192
	213 Return 
	214 Move X19, X1
	215 Move X20, X0
	216 Move X21, X31
	217 Move X1, [X23]
	218 Add X0, X31, 32
	219 Call Enumerator<Object>.Dispose, X0
	220 Move X0, X20
	221 Move X1, X19
	222 Compare X21, 0
	223 JumpIfEqual {234}
	224 Move X0, X21
	225 Call 0x1C17F18
	226 Move X0, X21
	227 Call 0x1C17F18
	228 Call 0x1C17F20
	229 Call 0x1C17F20
	230 Call 0x1C17F20
	231 Call 0x1C17F20
	232 Move X19, X1
	233 Move X20, X0
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Call 0x3EB2AD0
	236 Move X19, [X0]
	237 Call 0x3EB2AE0
	238 Move X8, 0x5ED000
	239 Move X8, [X8+4040]
	240 Add X0, X31, 64
	241 Move X1, [X8]
	242 Call Enumerator<Object>.Dispose, X0
	243 Compare X19, 0
	244 JumpIfEqual {200}
	245 Move X0, X19
	246 Call 0x1C17F18
	247 Move X20, X0
	248 Move X19, X31
	249 Move X20, X0
	250 Move X8, 0x5ED000
	251 Move X8, [X8+4040]
	252 Move X1, [X8]
	253 Add X0, X31, 64
	254 Call Enumerator<Object>.Dispose, X0
	255 Compare X19, 0
	256 JumpIfNotEqual {259}
	257 Move X0, X20
	258 Call 0x1D2D690
	259 Move X0, X19
	260 Call 0x1C17F18
	261 Call 0x1991590

Method: System.Type FindTypeInAssemblyByFullName(System.String assemblyName, System.String typeName)

Disassembly:
	0x03B2ED60 ADRP X20, 0x62B000
	0x03B2ED64 ADRP X21, 0x5C6000
	0x03B2ED68 ADRP X19, 0x5EF000
	0x03B2ED6C LDRB W8, [X22 + 0x7AE]
	0x03B2ED70 LDR X20, [X20 + 0xE58]
	0x03B2ED74 LDR X21, [X21 + 0xC50]
	0x03B2ED78 LDR X19, [X19 + 0x1E8]
	0x03B2ED7C TBNZ X8, 0x0, 0x3B2EDAC
	0x03B2ED80 ADRP X0, 0x5C6000
	0x03B2ED84 LDR X0, [X0 + 0xC50]
	0x03B2ED88 BL 0x1C16CF4
	0x03B2ED8C ADRP X0, 0x5EF000
	0x03B2ED90 LDR X0, [X0 + 0x1E8]
	0x03B2ED94 BL 0x1C16CF4
	0x03B2ED98 ADRP X0, 0x62B000
	0x03B2ED9C LDR X0, [X0 + 0xE58]
	0x03B2EDA0 BL 0x1C16CF4
	0x03B2EDA4 MOVZ W8, 0x1
	0x03B2EDA8 STRB W8, [X22 + 0x7AE]
	0x03B2EDAC MOV X0, X31
	0x03B2EDB0 BL 0x33C1904
	0x03B2EDB4 LDR X1, [X20]
	0x03B2EDB8 LDR X2, [X21]
	0x03B2EDBC BL 0x21BA5B0
	0x03B2EDC0 LDR X8, [X19]
	0x03B2EDC4 LDP X20, X19, [X31 + 0x20]
	0x03B2EDC8 LDP X22, X21, [X31 + 0x10]
	0x03B2EDCC AND W9, W0, 0x1
	0x03B2EDD0 LDR X8, [X8 + 0xB8]
	0x03B2EDD4 STRB W9, [X8]
	0x03B2EDD8 LDR X30, [X31], #0x30
	0x03B2EDDC RET
	0x03B2EDE0 STR X30, [X31 - 0x30]!
	0x03B2EDE4 STP X22, X21, [X31 + 0x10]
	0x03B2EDE8 STP X20, X19, [X31 + 0x20]
	0x03B2EDEC ADRP X22, 0x8B4000
	0x03B2EDF0 ADRP X21, 0x5EF000
	0x03B2EDF4 LDRB W8, [X22 + 0x7AF]
	0x03B2EDF8 LDR X21, [X21 + 0x1E8]
	0x03B2EDFC MOV X19, X1
	0x03B2EE00 MOV X20, X0
	0x03B2EE04 TBNZ X8, 0x0, 0x3B2EE28
	0x03B2EE08 ADRP X0, 0x5C5000
	0x03B2EE0C LDR X0, [X0 + 0xA28]
	0x03B2EE10 BL 0x1C16CF4
	0x03B2EE14 ADRP X0, 0x5EF000
	0x03B2EE18 LDR X0, [X0 + 0x1E8]
	0x03B2EE1C BL 0x1C16CF4
	0x03B2EE20 MOVZ W8, 0x1
	0x03B2EE24 STRB W8, [X22 + 0x7AF]
	0x03B2EE28 LDR X0, [X21]
	0x03B2EE2C LDR W8, [X0 + 0xE0]
	0x03B2EE30 CBNZ W8, 0x3B2EE3C
	0x03B2EE34 BL 0x1C16DFC
	0x03B2EE38 LDR X0, [X21]
	0x03B2EE3C LDR X8, [X0 + 0xB8]
	0x03B2EE40 LDRB W8, [X8]
	0x03B2EE44 CBZ W8, 0x3B2EE58
	0x03B2EE48 LDP X20, X19, [X31 + 0x20]
	0x03B2EE4C LDP X22, X21, [X31 + 0x10]
	0x03B2EE50 LDR X30, [X31], #0x30
	0x03B2EE54 RET
	0x03B2EE58 ADRP X8, 0x5C5000
	0x03B2EE5C LDR X8, [X8 + 0xA28]
	0x03B2EE60 LDR X0, [X8]
	0x03B2EE64 LDR W8, [X0 + 0xE0]
	0x03B2EE68 CBNZ W8, 0x3B2EE70
	0x03B2EE6C BL 0x1C16DFC
	0x03B2EE70 MOV X0, X20
	0x03B2EE74 MOV X1, X19
	0x03B2EE78 LDP X20, X19, [X31 + 0x20]
	0x03B2EE7C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x8B5000
	009 Move W8, [X21+1952]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x5F6000
	017 Move X0, [X0+1104]
	018 Call 0x1C17CF4
	019 Move X0, 0x62C000
	020 Move X0, [X0+3552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1952], W8
	024 Move [X31+8], X31
	025 Call ReflectionUtils.GetCachedAssemblies
	026 Move X22, X0
	027 Call ReflectionUtils.GetCachedAssemblyTypeMaps
	028 Compare X22, 0
	029 JumpIfEqual {84}
	030 Move W8, [X22+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X21, X0
	033 Move W23, W31
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X22, W23
	036 Move X0, [X8+32]
	037 Compare X0, 0
	038 JumpIfEqual {84}
	039 Move X8, [X0]
	040 Move X9, [X8+600]
	041 Move X1, [X8+608]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {84}
	045 Move X0, [X0+16]
	046 Move X1, X20
	047 Move X2, X31
	048 Call String.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {57}
	053 Move W8, [X22+24]
	054 Add W23, W23, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X31
	057 Compare X21, 0
	058 JumpIfEqual {84}
	059 Move X8, 0x62C000
	060 Move X8, [X8+3552]
	061 Move X0, X21
	062 Move W1, W23
	063 Move X2, [X8]
	064 Call List`1<Object>.get_Item, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {84}
	067 Move X8, 0x5F6000
	068 Move X8, [X8+1104]
	069 Add X2, X31, 8
	070 Move X1, X19
	071 Move X3, [X8]
	072 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	073 Move X8, [X31+8]
	074 And W31, W0, 1
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X30, [X31+16]
	081 Move X23, [X31+24]
	082 Add X31, X31, 64
	083 Return X0
	084 Call 0x1C17F20
	085 Call 0x1C17F28

Method: System.String NicifyVariableName(System.String name)

Disassembly:
	0x03B2EE80 MOV X2, X31
	0x03B2EE84 LDR X30, [X31], #0x30
	0x03B2EE88 B 0x3C06150
	0x03B2EE8C STR X30, [X31 - 0x30]!
	0x03B2EE90 STP X22, X21, [X31 + 0x10]
	0x03B2EE94 STP X20, X19, [X31 + 0x20]
	0x03B2EE98 ADRP X22, 0x8B4000
	0x03B2EE9C ADRP X21, 0x5EF000
	0x03B2EEA0 LDRB W8, [X22 + 0x7B0]
	0x03B2EEA4 LDR X21, [X21 + 0x1E8]
	0x03B2EEA8 MOV X19, X1
	0x03B2EEAC MOV X20, X0
	0x03B2EEB0 TBNZ X8, 0x0, 0x3B2EED4
	0x03B2EEB4 ADRP X0, 0x5C5000
	0x03B2EEB8 LDR X0, [X0 + 0xA28]
	0x03B2EEBC BL 0x1C16CF4
	0x03B2EEC0 ADRP X0, 0x5EF000
	0x03B2EEC4 LDR X0, [X0 + 0x1E8]
	0x03B2EEC8 BL 0x1C16CF4
	0x03B2EECC MOVZ W8, 0x1
	0x03B2EED0 STRB W8, [X22 + 0x7B0]
	0x03B2EED4 LDR X0, [X21]
	0x03B2EED8 LDR W8, [X0 + 0xE0]
	0x03B2EEDC CBNZ W8, 0x3B2EEE8
	0x03B2EEE0 BL 0x1C16DFC
	0x03B2EEE4 LDR X0, [X21]
	0x03B2EEE8 LDR X8, [X0 + 0xB8]
	0x03B2EEEC LDRB W8, [X8]
	0x03B2EEF0 CBZ W8, 0x3B2EF04
	0x03B2EEF4 LDP X20, X19, [X31 + 0x20]
	0x03B2EEF8 LDP X22, X21, [X31 + 0x10]
	0x03B2EEFC LDR X30, [X31], #0x30
	0x03B2EF00 RET
	0x03B2EF04 ADRP X8, 0x5C5000
	0x03B2EF08 LDR X8, [X8 + 0xA28]
	0x03B2EF0C LDR X0, [X8]
	0x03B2EF10 LDR W8, [X0 + 0xE0]
	0x03B2EF14 CBNZ W8, 0x3B2EF1C
	0x03B2EF18 BL 0x1C16DFC
	0x03B2EF1C MOV X0, X20
	0x03B2EF20 MOV X1, X19
	0x03B2EF24 LDP X20, X19, [X31 + 0x20]
	0x03B2EF28 LDP X22, X21, [X31 + 0x10]
	0x03B2EF2C MOV X2, X31
	0x03B2EF30 LDR X30, [X31], #0x30
	0x03B2EF34 B 0x3C06B0C
	0x03B2EF38 STR X30, [X31 - 0x30]!
	0x03B2EF3C STP X22, X21, [X31 + 0x10]
	0x03B2EF40 STP X20, X19, [X31 + 0x20]
	0x03B2EF44 ADRP X22, 0x8B4000
	0x03B2EF48 ADRP X21, 0x5EF000
	0x03B2EF4C LDRB W8, [X22 + 0x7B1]
	0x03B2EF50 LDR X21, [X21 + 0x1E8]
	0x03B2EF54 MOV X19, X1
	0x03B2EF58 MOV X20, X0
	0x03B2EF5C TBNZ X8, 0x0, 0x3B2EF80
	0x03B2EF60 ADRP X0, 0x5C5000
	0x03B2EF64 LDR X0, [X0 + 0xA28]
	0x03B2EF68 BL 0x1C16CF4
	0x03B2EF6C ADRP X0, 0x5EF000
	0x03B2EF70 LDR X0, [X0 + 0x1E8]
	0x03B2EF74 BL 0x1C16CF4
	0x03B2EF78 MOVZ W8, 0x1
	0x03B2EF7C STRB W8, [X22 + 0x7B1]
	0x03B2EF80 LDR X0, [X21]
	0x03B2EF84 LDR W8, [X0 + 0xE0]
	0x03B2EF88 CBNZ W8, 0x3B2EF94
	0x03B2EF8C BL 0x1C16DFC
	0x03B2EF90 LDR X0, [X21]
	0x03B2EF94 LDR X8, [X0 + 0xB8]
	0x03B2EF98 LDRB W8, [X8]
	0x03B2EF9C CBZ W8, 0x3B2EFB0
	0x03B2EFA0 LDP X20, X19, [X31 + 0x20]
	0x03B2EFA4 LDP X22, X21, [X31 + 0x10]
	0x03B2EFA8 LDR X30, [X31], #0x30
	0x03B2EFAC RET
	0x03B2EFB0 ADRP X8, 0x5C5000
	0x03B2EFB4 LDR X8, [X8 + 0xA28]
	0x03B2EFB8 LDR X0, [X8]
	0x03B2EFBC LDR W8, [X0 + 0xE0]
	0x03B2EFC0 CBNZ W8, 0x3B2EFC8
	0x03B2EFC4 BL 0x1C16DFC
	0x03B2EFC8 MOV X0, X20
	0x03B2EFCC MOV X1, X19
	0x03B2EFD0 LDP X20, X19, [X31 + 0x20]
	0x03B2EFD4 LDP X22, X21, [X31 + 0x10]
	0x03B2EFD8 MOV X2, X31
	0x03B2EFDC LDR X30, [X31], #0x30
	0x03B2EFE0 B 0x3C065A4
	0x03B2EFE4 STR X30, [X31 - 0x30]!
	0x03B2EFE8 STP X22, X21, [X31 + 0x10]
	0x03B2EFEC STP X20, X19, [X31 + 0x20]
	0x03B2EFF0 ADRP X22, 0x8B4000
	0x03B2EFF4 ADRP X21, 0x5EF000
	0x03B2EFF8 LDRB W8, [X22 + 0x7B2]
	0x03B2EFFC LDR X21, [X21 + 0x1E8]
	0x03B2F000 MOV X19, X1
	0x03B2F004 MOV X20, X0
	0x03B2F008 TBNZ X8, 0x0, 0x3B2F02C
	0x03B2F00C ADRP X0, 0x5C4000
	0x03B2F010 LDR X0, [X0 + 0xA28]
	0x03B2F014 BL 0x1C16CF4
	0x03B2F018 ADRP X0, 0x5EE000
	0x03B2F01C LDR X0, [X0 + 0x1E8]
	0x03B2F020 BL 0x1C16CF4
	0x03B2F024 MOVZ W8, 0x1
	0x03B2F028 STRB W8, [X22 + 0x7B2]
	0x03B2F02C LDR X0, [X21]
	0x03B2F030 LDR W8, [X0 + 0xE0]
	0x03B2F034 CBNZ W8, 0x3B2F040
	0x03B2F038 BL 0x1C16DFC
	0x03B2F03C LDR X0, [X21]
	0x03B2F040 LDR X8, [X0 + 0xB8]
	0x03B2F044 LDRB W8, [X8]
	0x03B2F048 CBZ W8, 0x3B2F05C
	0x03B2F04C LDP X20, X19, [X31 + 0x20]
	0x03B2F050 LDP X22, X21, [X31 + 0x10]
	0x03B2F054 LDR X30, [X31], #0x30
	0x03B2F058 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x8B5000
	007 Move W8, [X20+1953]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x5C8000
	014 Move X0, [X0+3144]
	015 Call 0x1C17CF4
	016 Move X0, 0x5CE000
	017 Move X0, [X0+1536]
	018 Call 0x1C17CF4
	019 Move X0, 0x5C6000
	020 Move X0, [X0+3552]
	021 Call 0x1C17CF4
	022 Move X0, 0x62C000
	023 Move X0, [X0+3560]
	024 Call 0x1C17CF4
	025 Move X0, 0x62C000
	026 Move X0, [X0+3568]
	027 Call 0x1C17CF4
	028 Move X0, 0x62C000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+1953], W8
	033 Compare X19, 0
	034 JumpIfEqual {140}
	035 Move X8, 0x62C000
	036 Move X8, [X8+3576]
	037 Move X0, X19
	038 Move X2, X31
	039 Move X1, [X8]
	040 Call String.StartsWith, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {49}
	045 Move W1, 2
	046 Move TEMP, 1
	047 Not TEMP
	048 Move W8, TEMP
	049 Move X8, 0x5C6000
	050 Move X8, [X8+3552]
	051 Move X0, X19
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call String.StartsWith, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {71}
	059 Move W1, 1
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W8, TEMP
	063 Move W9, [X19+16]
	064 Move X0, X19
	065 Move X3, X31
	066 Add W2, W9, W8
	067 Call String.Substring, X0, X1, X2
	068 Move X19, X0
	069 Compare X0, 0
	070 JumpIfEqual {140}
	071 Move X20, 0x5CE000
	072 Move X20, [X20+1536]
	073 Move X0, X19
	074 Move W1, W31
	075 Move X2, X31
	076 Call String.get_Chars, X0, X1
	077 And W8, W0, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move W1, 1
	080 Move X0, X19
	081 Move X2, X31
	082 Call String.get_Chars, X0, X1
	083 And W8, W0, 0xFFFF
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W1, 1
	086 Move X0, X19
	087 Move X2, X31
	088 Call String.get_Chars, X0, X1
	089 And W8, W0, 0xFFFF
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, [X19+16]
	092 Move W1, 1
	093 Move X0, X19
	094 Move X3, X31
	095 Subtract W2, W8, 1
	096 Call String.Substring, X0, X1, X2
	097 Move X19, X0
	098 Move X0, [X20]
	099 Move X22, 0x62C000
	100 Move X21, 0x62C000
	101 Move X20, 0x5C8000
	102 Move W8, [X0+224]
	103 Move X22, [X22+3560]
	104 Move X21, [X21+3568]
	105 Move X20, [X20+3144]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X1, [X22]
	110 Move X2, [X21]
	111 Move X0, X19
	112 Move X3, X31
	113 Call Regex.Replace, X0, X1, X2
	114 Move X8, [X20]
	115 Move X19, X0
	116 Move W9, [X8+224]
	117 Compare W9, 0
	118 JumpIfNotEqual {121}
	119 Move X0, X8
	120 Call 0x1C17DFC
	121 Move X0, X31
	122 Call CultureInfo.get_CurrentCulture
	123 Compare X0, 0
	124 JumpIfEqual {140}
	125 Move X8, [X0]
	126 Move X9, [X8+472]
	127 Move X1, [X8+480]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X0, 0
	130 JumpIfEqual {140}
	131 Move X1, X19
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X2, X31
	137 Move X30, [X31+48]
	138 Call TextInfo.ToTitleCase, X0, X1
	139 Return X0
	140 Call 0x1C17F20

